retf
add
add
add
add
add
add
add
add
or
add
add
add
hlt
and
add
and
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
xor
add
and
jb
outs
addr16
add
add
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
aam
add
add
add
aas
add
add
pop
add
add
add
ja
add
lds
add
add
add
lods
add
add
add
loop
add
cmps
and
add
add
add
add
add
add
add
add
push
add
add
add
add
add
inc
add
add
add
mov
dec
add
add
add
test
add
add
jnp
xor
arpl
xor
sub
sub
sub
sub
arpl
arpl
bound
xor
outs
fs
gs
jae
jb
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
mov
(bad)
in
add
push
out
retf
mov
mov
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
adc
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
pusha
xchg
dec
or
add
add
add
add
popa
add
add
add
add
and
adc
add
scas
outs
mov
mov
xor
dec
and
or
pop
add
mov
(bad)
call
dec
retf
call
xchg
hlt
mov
dec
cmp
mov
loopne
push
mov
mov
mov
sub
mov
dec
cmp
jge
inc
sub
add
(bad)
jnp
pushf
pop
repz
lock
outs
or
and
div
jns
sbb
or
nop
xchg
call
jle
rol
movs
jnp
pop
jg
pop
pop
dec
les
xor
fwait
jns
shr
lsl
mov
mov
out
add
push
sub
jno
in
mov
add
fldcw
and
xor
movs
pop
push
scas
xchg
mov
movs
dec
or
sub
xor
std
jno
and
lock
out
neg
jl
or
(bad)
sbb
(bad)
js
and
or
sbb
call
add
mov
add
js
push
push
pop
pop
(bad)
jae
pop
cwde
push
jge
lock
mov
stc
inc
aas
pop
cs
loop
or
adc
add
lds
loope
dec
cmp
js
dec
cmp
in
imul
adc
and
add
sub
mov
out
jmp
mov
das
out
jge
ds
(bad)
pop
fild
test
das
jle
jp
xor
int
cmp
pop
jl
adc
loop
push
xlat
nop
mov
js
lahf
retf
icebp
fs
cdq
or
into
mov
out
sbb
dec
fmul
fsubrp
xchg
cmp
(bad)
dec
push
inc
jmp
jae
sub
adc
jmp
in
out
ror
pop
js
ja
out
cmp
pop
mov
outs
jg
jl
mov
dec
popf
dec
(bad)
retf
or
jmp
pop
push
pop
add
fisub
jo
in
daa
sub
call
leave
xlat
outs
lods
loop
nop
jg
aas
sub
xlat
mov
(bad)
retf
fcmovnbe
and
fcom
leave
mov
nop
mov
imul
jbe
adc
xchg
inc
mov
out
cld
daa
xchg
js
mov
test
test
push
xor
leave
outs
cmp
jge
ins
add
rcr
gs
stos
cmp
mov
in
in
sub
push
in
jae
adc
out
cmp
loope
sub
push
movs
rcr
shl
outs
out
call
pop
xlat
adc
or
bound
cdq
and
(bad)
das
jmp
mov
jmp
out
inc
lahf
das
mov
inc
fadd
jmp
ror
imul
sbb
jg
jg
cmps
push
fucomi
rcr
int
fldenv
mov
cmp
push
and
xor
into
movs
sbb
and
and
mov
fnstsw
xchg
cmps
and
iret
aaa
lock
icebp
sub
add
fisttp
mov
aas
out
dec
xor
lds
mov
(bad)
jmp
and
inc
push
jle
mov
xchg
xor
mov
arpl
sub
cli
mov
retf
je
ror
add
mov
clc
dec
xor
sbb
adc
call
pop
mov
retf
fs
adc
mov
mov
stc
xchg
data16
and
loop
mov
(bad)
jns
jno
arpl
sar
cwde
add
pop
xchg
dec
mov
jo
idiv
push
sub
clc
adc
adc
in
stos
cmp
addr16
jecxz
push
outs
xor
imul
(bad)
or
scas
(bad)
dec
inc
adc
aam
repz
(bad)
pop
je
mov
sbb
pop
xchg
xor
jo
inc
out
push
cdq
aad
mov
or
ret
inc
inc
pop
xchg
out
pop
mov
popf
or
sbb
xor
retf
(bad)
(bad)
push
add
in
add
jbe
mov
rol
push
(bad)
xor
cdq
cmp
adc
fdiv
pushf
out
test
xchg
and
or
dec
enter
mov
mov
int3
and
dec
in
ins
test
pop
push
push
dec
dec
cmp
sub
mov
retf
lods
push
imul
ss
dec
pop
pop
cmp
or
addr16
rdtsc
loopne
outs
sbb
movs
add
test
out
es
ret
in
pop
mov
and
add
clc
sub
jmp
push
or
pop
inc
std
sbb
cld
in
adc
je
or
into
mov
dec
movs
mov
dec
daa
(bad)
xlat
in
dec
hlt
cmp
pop
inc
xor
loopne
pushf
push
test
adc
inc
pop
sbb
mov
addr16
cmps
sub
lods
js
inc
mov
mov
sbb
not
xlat
xchg
(bad)
jp
ins
inc
int3
adc
dec
inc
call
iret
in
outs
mov
pushf
or
ins
cmp
jnp
daa
sub
sub
call
nop
enter
mov
adc
sub
cmp
mov
mov
mov
pop
(bad)
sar
mov
mov
add
loop
ret
ja
add
jmp
stc
sbb
lods
xor
out
cdq
iret
push
pop
mov
es
scas
popa
stc
mov
mov
and
test
mov
data16
push
adc
cmp
cmp
fdiv
inc
jne
mov
repnz
(bad)
jle
push
xlat
mov
pop
cmp
mov
mov
(bad)
aas
dec
mov
dec
sub
push
or
sbb
neg
cld
sti
cmp
aas
cld
les
outs
out
sub
imul
fs
mov
fimul
sbb
jmp
sub
inc
mov
inc
and
stc
inc
sub
push
cmp
(bad)
xchg
test
in
push
dec
sub
loope
pop
and
arpl
loope
(bad)
cmp
adc
call
js
aad
sub
mov
ins
dec
ds
sub
out
(bad)
std
fcomp
dec
jno
pextrw
inc
dec
inc
pop
pop
or
cmp
fwait
adc
enter
loopne
cdq
mov
(bad)
mov
push
jns
retf
dec
cmps
je
arpl
sub
or
push
movs
cmp
jb
sbb
mov
lods
pop
or
enter
xchg
mov
pop
sub
xchg
into
out
adc
bound
ds
fimul
sbb
movs
(bad)
sub
pop
out
pop
mov
sahf
cwde
xor
fcomp
sub
xor
idiv
push
and
in
cmp
dec
mov
icebp
ret
cwde
sub
cli
push
hlt
jbe
sub
mov
sar
(bad)
fimul
adc
iret
repz
cmp
stos
push
stos
pop
ds
sahf
jmp
sub
or
xor
retf
xor
dec
lahf
xchg
scas
mov
cmp
repz
push
ss
jp
loop
xor
xlat
or
out
jecxz
sbb
or
push
xchg
aad
dec
mov
jo
mov
ficomp
sbb
dec
gs
outs
call
xchg
pop
fstp
not
(bad)
out
in
mov
inc
jb
ret
xchg
aam
ret
cmps
mov
js
push
jg
jbe
iret
mov
cmp
jle
repz
pop
adc
out
jo
xchg
ins
or
outs
cli
xchg
push
mov
nop
pop
and
shl
inc
push
pop
(bad)
std
shr
mov
hlt
sub
cmp
fdiv
jle
out
fnstcw
or
push
lods
xchg
jns
test
(bad)
pop
shr
sbb
(bad)
pop
mov
inc
in
mov
popf
pop
(bad)
fstp
push
mov
or
imul
add
test
add
mov
popf
pop
mov
scas
lods
pop
fst
sub
mov
out
push
jl
sti
dec
push
adc
out
retf
cmp
mov
(bad)
fst
and
pusha
ds
ja
pop
cmp
unpcklps
pop
cmps
jl
movs
jg
cmp
je
in
mov
aam
inc
inc
scas
(bad)
cld
popf
mov
stos
jl
(bad)
mov
pop
div
aaa
repnz
push
repz
nop
add
lea
cmps
icebp
inc
push
(bad)
push
ret
fisttp
test
ja
jo
div
mov
xor
xor
fnstsw
and
pop
out
retf
or
out
mov
mov
fcom
and
pop
std
iret
pushf
push
call
xor
adc
lahf
inc
das
or
push
iret
pop
jae
shl
aaa
jmp
pop
dec
or
cmps
pop
stc
or
(bad)
xor
call
rcr
push
call
repz
xchg
aam
sub
or
or
imul
cmps
cmp
dec
jp
push
stc
sar
add
sbb
mov
inc
test
cwde
xchg
cmp
(bad)
aam
jnp
xor
inc
mov
mov
fs
fisttp
cmp
lea
fdiv
mov
imul
sar
sub
test
pop
add
cmp
int
mov
xchg
sub
sahf
shr
push
xor
add
mov
fst
sbb
xchg
inc
aaa
cmp
stos
cld
push
add
push
fdiv
rcr
dec
mov
lea
neg
dec
in
cs
and
jns
popf
in
xchg
fst
imul
xchg
bound
scas
xor
leave
push
cmps
inc
test
mov
cmps
jmp
mov
int
inc
pushf
repz
sbb
push
push
pop
mov
jne
add
cmc
fsubr
in
inc
fucomi
push
add
out
loope
adc
leave
xchg
ins
mov
push
adc
or
ja
mov
mov
nop
outs
jnp
cmps
iret
cdq
ret
imul
loop
test
jle
xor
icebp
xor
retf
and
aad
dec
sub
icebp
sbb
inc
sub
aas
cmp
lahf
add
xchg
or
mov
or
mov
or
adc
(bad)
loop
cmps
fs
rol
aas
push
push
mov
cmp
or
cmps
enter
pop
inc
or
imul
inc
mov
push
iret
lods
cmp
xor
out
and
cmp
push
push
test
xor
aaa
inc
in
xchg
sbb
add
lds
stc
mov
add
div
mov
mov
rcl
les
xchg
or
in
hlt
add
mov
js
xor
das
test
push
xchg
outs
sbb
ss
jbe
add
call
or
aam
dec
or
popa
push
xchg
xchg
mov
xor
stos
inc
scas
mov
pop
add
or
inc
mov
test
shl
loop
push
inc
xlat
mov
fimul
inc
rcr
movs
arpl
repz
aad
jb
sbb
pop
xchg
test
(bad)
xor
mov
into
mov
adc
jl
mov
aaa
hlt
arpl
imul
mov
push
into
shr
dec
in
push
(bad)
test
push
cmps
dec
mov
xchg
scas
repz
in
std
loope
out
add
jl
ds
inc
ror
push
adc
inc
aad
mov
in
pop
popa
int3
xor
gs
lods
add
dec
mov
popf
(bad)
mov
add
test
and
stos
inc
xchg
js
push
push
in
jo
loop
cmp
push
ret
xor
popf
cmps
xor
popa
mov
mov
or
pop
and
data16
popa
cwde
inc
adc
sub
fcom
fchs
(bad)
sbb
xor
call
in
int3
adc
jno
jecxz
jo
fsubr
out
ds
inc
ins
and
inc
pop
ficom
push
out
aam
pop
pop
mov
inc
scas
shr
test
dec
mov
jns
stos
pusha
sub
or
push
sub
sub
and
inc
cdq
sbb
add
daa
inc
pop
lods
fistp
xor
imul
cmc
rol
jne
sub
and
pop
and
pop
xchg
push
jmp
add
pusha
xlat
xchg
(bad)
loopne
xor
cmp
mov
ja
(bad)
sbb
dec
xchg
or
dec
cmp
push
mov
sbb
adc
xchg
sub
and
mov
sbb
cmp
pop
mov
pop
fdivr
pop
stos
or
xchg
or
int
jle
push
(bad)
mov
out
sbb
pop
dec
jmp
pop
mov
mov
mov
and
pushf
xlat
mov
sub
iret
mov
iret
es
jb
jns
push
xor
jne
mov
xlat
xor
std
(bad)
pop
mov
and
dec
mov
or
add
lock
setge
ja
nop
or
jbe
sub
je
inc
daa
mov
fsubr
mov
shl
aam
dec
rcr
and
cld
push
out
call
stc
sahf
dec
mov
test
adc
cs
sbb
pop
or
pop
mov
hlt
mov
rcl
imul
fcom
and
mov
rcl
xchg
cmp
mov
mov
lea
(bad)
int3
cmp
inc
xchg
cwde
fdiv
out
jns
gs
mov
sahf
or
je
add
and
xlat
mov
add
rcr
pop
test
loop
pop
sub
sub
cmp
or
test
cmp
sub
in
into
(bad)
mov
jg
retf
pop
mov
and
push
loop
fst
pushf
les
sub
mov
aas
cld
pop
stos
push
or
sbb
out
sbb
dec
dec
dec
mov
sub
pusha
loopne
popf
inc
test
ins
jg
mov
sub
ds
jnp
aaa
mov
stc
mov
mov
sbb
push
mov
xchg
cmp
dec
jge
dec
lahf
dec
jecxz
rcl
pop
pop
in
pop
or
mov
in
adc
sub
fisubr
xchg
mov
call
push
dec
loopne
mov
xor
scas
dec
bound
imul
pop
shr
jno
fwait
push
jbe
aaa
retf
fsubr
pop
fisttp
(bad)
push
leave
xor
call
push
mov
push
ds
dec
jbe
and
arpl
ficom
cld
mov
xchg
sub
jmp
mov
mov
sbb
lods
jp
les
pusha
cmps
sbb
es
repz
test
cmp
in
and
jp
test
add
pslld
mov
cmp
or
jb
mov
sub
or
adc
or
test
movs
cmp
adc
int3
inc
or
cwde
js
fcmovbe
je
shr
mov
pop
xor
ins
(bad)
cli
or
aaa
cmp
pop
push
adc
ret
xchg
into
das
xor
push
adc
lds
cmp
outs
jle
loop
xchg
xor
adc
sbb
push
jbe
hlt
mov
mov
or
inc
(bad)
mov
aaa
mov
pop
fs
int
ins
jbe
and
cwde
pop
mov
enter
test
fild
data16
mov
jae
inc
fdivr
ins
pop
inc
addr16
push
ret
xchg
mov
xchg
test
fcomip
iret
outs
adc
js
out
cmp
cmp
push
mov
fld
in
fcom
dec
push
repnz
jae
jno
sub
ins
mov
scas
xor
in
ror
pop
mov
cmc
imul
add
nop
xchg
loope
(bad)
sub
les
or
mov
mov
scas
ins
dec
cmp
xchg
add
stc
popf
adc
mov
add
adc
je
inc
loope
js
inc
fimul
rep
out
adc
pop
add
add
test
das
inc
mov
sub
add
fwait
adc
jle
xor
es
push
jmp
ins
xor
bnd
fwait
jne
aad
lods
rcr
xchg
addr16
jmp
into
push
jne
add
dec
fisub
imul
adc
jns
pushf
and
jb
fcmovne
test
cdq
jb
(bad)
adc
movs
fidivr
xlat
iret
ss
or
shr
ins
push
add
and
call
push
imul
call
sbb
es
cmp
rcl
repz
dec
push
mov
mov
push
inc
fwait
sub
xlat
jl
mov
dec
test
jmp
xor
pop
iret
mov
and
pop
loopne
xchg
jmp
out
sub
sbb
fidiv
jmp
or
out
push
cmps
cmp
dec
shl
or
dec
lahf
into
xor
jno
mov
pop
jg
(bad)
icebp
int
sbb
aas
call
clc
lods
inc
dec
aam
nop
sti
lds
inc
fs
xor
inc
clc
sahf
mov
movs
jns
aam
jne
out
call
pop
pop
call
cmp
aam
in
out
mov
vmovaps
ret
mov
pusha
mov
jno
xor
sub
jae
mov
pop
sbb
pushf
imul
fldenv
bound
push
mov
mov
sub
dec
xchg
cmps
pop
call
push
ret
mov
mov
inc
(bad)
adc
call
mov
(bad)
pushf
pop
(bad)
ds
aam
sti
inc
fsubr
mov
add
jo
cwde
xchg
les
fwait
mov
int
fist
pcmpgtb
inc
push
cdq
push
rol
sbb
jl
movs
adc
cdq
imul
js
mov
jbe
test
sbb
xor
pop
loopne
mov
outs
test
(bad)
loop
cmp
add
and
cdq
in
js
fcomi
sahf
push
clc
xchg
neg
cmp
std
dec
movs
xor
cmp
push
jno
xor
push
hlt
sub
scas
add
cmp
addr16
aas
fcmovbe
sbb
adc
adc
mov
xchg
std
add
inc
push
add
movs
cmp
pop
pop
add
cmp
cmps
inc
dec
jae
dec
rcl
aas
mov
xor
shr
in
jge
cmp
mov
pop
inc
ret
pop
bound
aam
cmp
xor
push
fldenv
jbe
pop
addr16
adc
(bad)
ss
xor
shr
ror
aaa
sub
xchg
shr
add
xlat
les
adc
dec
push
inc
cmp
adc
popf
mov
push
fcmovnbe
ja
data16
pop
sbb
loope
jo
inc
loop
inc
mov
add
imul
stos
inc
mov
test
cli
repnz
or
cs
inc
xor
stos
shr
and
clc
cmp
push
push
xchg
fidivr
jb
dec
in
xor
repz
in
pop
ja
hlt
mov
pop
pop
jecxz
xor
cwde
xchg
outs
mov
dec
retf
add
adc
call
in
add
fbstp
xchg
cmc
jecxz
out
xchg
loop
push
sbb
push
inc
push
xor
push
enter
ins
cdq
cmp
xchg
dec
leave
pop
scas
inc
cs
pop
bound
and
fsincos
inc
adc
stc
xor
retf
xor
ja
cmp
enter
fcom
ds
adc
test
int3
mov
shl
jg
lods
adc
cmp
stos
call
fsub
out
and
and
loopne
dec
iret
lahf
dec
mov
shl
mov
mov
xor
pop
push
jecxz
ins
fcomp
add
cmps
out
add
add
outs
cs
leave
mov
fldenv
ror
jge
nop
loope
cmps
pop
cmp
and
std
xor
outs
add
test
movs
imul
imul
aam
je
sub
push
pmaxsw
jp
cmp
loope
(bad)
xlat
mov
in
retf
mov
shl
popa
daa
in
and
xchg
adc
ja
pusha
jge
cmp
pusha
ret
ds
into
cmp
inc
mov
aam
sahf
retf
lods
inc
and
sub
enter
clc
dec
push
pop
xor
or
repz
stc
cmps
mov
fwait
stos
(bad)
into
push
(bad)
iret
loope
mov
mul
mov
inc
push
(bad)
(bad)
sub
stos
pop
adc
fldenv
inc
fisttp
in
addr16
mov
adc
push
lds
mov
inc
clc
push
push
mov
loopne
gs
jns
loope
cmp
dec
cmp
fdivr
imul
ins
pop
sub
(bad)
mov
adc
stos
fsubr
pop
mov
stc
int3
mov
(bad)
fisttp
lods
adc
fwait
mov
scas
(bad)
loope
dec
pop
cmp
jae
fsubr
movs
mov
mov
mov
or
pop
push
xor
xchg
jg
inc
xchg
in
dec
popaw
repz
add
mov
jns
into
inc
cmps
add
push
jmp
push
dec
push
out
ret
out
xchg
inc
sub
(bad)
mov
sub
in
shr
add
fbld
mov
sahf
xchg
pop
push
xchg
jg
jp
mov
push
test
aad
aas
adc
xchg
neg
pop
cmp
fbld
shr
mov
ins
xchg
test
scas
add
loope
stos
xor
cmp
dec
repz
xchg
aad
les
aaa
ret
fwait
mov
adc
inc
(bad)
in
adc
xchg
popa
lahf
fsub
mov
out
xchg
xchg
jle
adc
iret
scas
cmc
(bad)
shl
jno
std
adc
or
sub
cli
mov
pop
adc
scas
into
jnp
sub
neg
dec
cwde
stc
sbb
cmp
les
fnstcw
test
jo
js
sahf
sti
bound
mov
mov
jmp
scas
inc
retf
std
adc
out
int
sub
push
les
pop
dec
add
cmp
lea
fwait
mov
iret
and
js
and
loop
push
xor
or
cs
imul
in
aam
in
addr16
sbb
mov
icebp
fsubrp
icebp
add
sbb
pop
ins
xchg
aad
les
fiadd
stc
aas
push
or
xor
das
aam
mov
out
cli
test
pop
fidivr
dec
enter
retf
cdq
cmp
icebp
add
or
xchg
or
data16
call
xor
or
pop
or
mov
inc
ficom
and
adc
dec
test
inc
int3
or
int3
jne
mov
xchg
in
jp
cmp
out
ins
jnp
adc
adc
out
and
pop
xchg
rcr
xchg
xchg
loope
mov
ret
or
mov
jmp
addr16
gs
cmp
(bad)
pop
xor
push
arpl
loop
xlat
ja
out
xchg
mov
shr
xchg
pop
stos
call
shl
dec
add
xor
adc
sbb
mov
and
test
cmp
ins
lock
add
fs
pop
icebp
fistp
aas
clc
mov
scas
and
mov
loop
sbb
pop
fisttp
mov
int
inc
adc
int3
and
and
je
fsub
std
or
stos
cld
in
sar
cld
ror
xor
jge
les
in
cwde
or
jg
cmp
add
jp
les
ret
sbb
dec
and
xchg
push
sub
sti
mov
sbb
cmp
or
sbb
xchg
loopne
pop
mov
lock
dec
dec
in
dec
adc
cmp
outs
pop
mov
daa
mov
xchg
mov
fdiv
pop
lea
fld
jp
mov
jmp
jecxz
or
push
in
sahf
jle
out
das
mov
(bad)
mov
pop
inc
sbb
jne
addr16
les
xor
push
imul
cmp
dec
pop
lahf
mov
push
inc
mov
stos
inc
in
xchg
(bad)
mov
xor
shl
pop
test
sub
jo
xchg
pop
call
lds
jmp
ds
mov
cmps
mov
inc
add
ret
cmp
inc
xor
popf
test
aad
mov
cwde
(bad)
in
test
sub
mov
pop
loope
jg
inc
add
sbb
mov
aas
addr16
(bad)
mov
aaa
jecxz
lahf
mov
loopne
xchg
fidiv
ficom
jo
(bad)
sti
xchg
sbb
jp
inc
ins
test
loopne
fsub
repz
in
outs
inc
mov
out
daa
xor
xor
and
sub
iret
adc
sub
push
jmp
out
sahf
test
dec
jge
ins
pop
enter
out
adc
test
sub
out
adc
pop
cmp
mov
or
fmul
cwde
scas
mov
pop
mov
stc
jmp
mov
mov
ss
push
ins
div
pop
fs
rcl
pop
dec
or
or
sti
nop
xlat
push
ss
mov
ret
mov
mov
sti
sub
addr16
push
push
retf
gs
dec
push
shl
mov
mov
xor
pop
test
jno
cld
(bad)
jmp
icebp
add
xchg
mov
fucomi
imul
stc
in
pop
cmps
dec
je
sbb
sbb
inc
loop
inc
inc
cmp
adc
pop
xchg
sub
mov
xlat
mov
cs
jg
and
or
data16
les
jbe
pusha
iret
and
xor
inc
in
pop
mov
test
mov
rcr
xor
cmps
jle
dec
cmp
jbe
rcr
adc
cs
dec
jne
add
nop
mov
jmp
(bad)
in
cs
rcr
cmc
sub
xchg
adc
aad
das
daa
push
pop
shr
scas
out
fstp
bound
sti
(bad)
mov
or
dec
pop
xchg
aas
scas
xchg
test
hlt
retf
mov
or
push
jmp
xor
add
lods
mov
test
or
jg
dec
sbb
and
(bad)
(bad)
and
mov
div
adc
pop
(bad)
ins
loopne
push
aam
ret
dec
jp
std
and
sbb
push
adc
loop
stos
push
or
enter
mov
pop
ret
or
mov
data16
ror
pop
and
mov
fild
test
ja
cld
inc
leave
mov
int
sub
imul
jl
retf
sar
jl
jae
add
icebp
push
icebp
popf
mov
push
mov
mov
xor
or
mov
jno
movs
mov
dec
push
dec
push
fisub
xor
jmp
fadd
enter
fs
cld
jae
fcom
gs
les
pop
out
jmp
cmps
mov
dec
outs
mov
mov
out
jo
mov
repnz
xchg
out
dec
(bad)
adc
and
movs
or
fstp
xchg
cmp
test
jnp
fimul
enter
pop
cmp
sbb
outs
ret
ds
inc
popa
dec
loope
les
mov
add
fwait
add
scas
rol
mov
in
inc
xchg
dec
adc
xor
push
ficomp
nop
test
mov
lods
jb
out
mov
loopne
jg
add
jmp
jmp
loope
inc
push
int3
jmp
push
test
push
adc
movs
push
xchg
add
icebp
mov
pop
pop
test
xchg
pop
lds
stos
aad
(bad)
pop
test
in
jb
mov
ss
sub
jae
fcom
loop
push
dec
jbe
mov
xchg
xchg
fxch
xor
dec
mov
push
inc
pop
add
std
inc
inc
std
mov
test
fisub
fsubr
jecxz
mov
aam
sahf
pop
popa
rcl
dec
and
pop
adc
sbb
pop
into
jbe
pop
push
call
nop
stos
inc
mov
or
retf
pop
cmp
push
pusha
mov
and
dec
rcl
pusha
mov
xor
into
stos
mov
outs
mov
add
push
adc
repnz
push
mov
pop
mov
push
scas
loop
cdq
mov
movs
cmp
ja
xor
stos
int3
int
ds
lea
std
scas
cwde
pop
sub
sti
pop
add
xor
inc
pop
das
mov
in
inc
push
inc
or
(bad)
in
pop
clc
vprotb
icebp
xor
add
mov
lea
scas
cmp
xchg
scas
in
movs
jge
cli
scas
inc
test
mov
icebp
pop
icebp
mov
push
adc
iret
push
mov
jbe
mov
jbe
mov
js
out
gs
ja
dec
(bad)
loop
xor
dec
(bad)
jecxz
mov
ins
push
hlt
push
mov
jge
mov
mov
pop
jne
xchg
push
xorps
sar
dec
mov
aam
jmp
cmp
dec
clc
cs
retf
xlat
adc
cdq
rcl
stos
push
jbe
dec
mov
push
ficom
into
mov
enter
cs
lea
mov
inc
in
push
adc
pop
mov
sub
jl
popf
retf
lock
xor
push
xchg
in
sti
add
lea
dec
lahf
xor
sti
cmp
mov
test
add
mov
xor
and
mov
jp
clc
mov
shl
and
push
(bad)
mov
(bad)
cmc
mov
fbld
pop
cmps
adc
loopne
mov
inc
adc
std
inc
rcr
and
cwde
push
icebp
xchg
jae
test
retf
outs
aaa
push
xchg
mov
gs
out
jnp
shl
and
sbb
(bad)
fisttp
pxor
repnz
xor
out
push
mov
inc
jmp
test
leave
jno
xchg
shr
jns
xchg
stc
ret
mov
add
movs
fdivr
push
popf
je
mov
(bad)
mov
sbb
movs
mov
inc
jp
call
jne
push
or
push
add
push
div
jle
(bad)
daa
dec
pop
lock
or
add
adc
lods
dec
enter
xchg
cmp
xor
xor
test
push
pusha
xor
in
pop
std
add
xchg
repnz
loope
xor
cmp
test
sub
mov
repz
fstp
cwde
stos
mov
gs
jno
js
push
fcomp
xor
imul
inc
dec
sub
in
cdq
jl
and
sub
mov
jle
enter
cmp
hlt
(bad)
cmp
sar
xor
or
jecxz
dec
loop
and
sub
mov
bound
jg
dec
xor
fucomi
mov
into
enter
xchg
lods
mov
push
call
push
loop
rcr
xchg
mov
shl
xor
mov
stos
mov
pop
loop
sbb
dec
in
leave
adc
popa
pop
(bad)
iret
sti
mov
mov
or
out
adc
lahf
int3
xor
sar
mov
pop
jo
jmp
adc
cmp
test
out
mov
pop
or
out
popa
scas
push
sbb
or
fisub
xchg
retf
jl
pop
xchg
xchg
xchg
lds
jl
mov
or
mov
dec
jp
xchg
movs
or
jno
nop
dec
sub
xchg
cmp
push
dec
dec
test
das
pop
test
cdq
hlt
fadd
mov
and
clc
ffree
mov
test
gs
mov
cmps
stc
xchg
aam
lods
rcr
rcl
mov
cmp
lds
cld
sti
dec
lea
out
sub
push
mov
mov
xor
push
sahf
js
inc
sub
iret
or
xchg
das
mov
pop
jg
xor
test
shl
adc
dec
sbb
or
call
stc
pop
addr16
mov
or
add
in
hlt
cmp
dec
test
inc
pushf
sti
adc
jle
test
(bad)
cmp
mov
jg
data16
call
xchg
inc
mov
inc
adc
pop
(bad)
pop
xchg
lods
pop
das
jmp
outs
dec
movs
inc
add
push
outs
cmps
mov
test
xchg
retf
mov
int
fdiv
mov
xchg
fcmove
clc
xor
(bad)
pop
jecxz
int3
stos
bound
pop
or
fdiv
pushf
out
sub
jno
pop
loope
(bad)
hlt
xlat
shl
lds
outs
ds
jmp
and
call
movs
mov
cmp
(bad)
or
sbb
es
(bad)
jmp
inc
xchg
pushf
loop
push
daa
or
lock
jo
push
sbb
adc
ficomp
jnp
add
call
push
test
pop
sahf
pop
pusha
xor
xor
xlat
and
inc
sahf
leave
fcomp
cmps
data16
icebp
push
cmp
dec
shl
fwait
jnp
mov
(bad)
or
push
pop
mov
xchg
add
loopne
pop
fadd
ret
jnp
and
sbb
pop
or
sub
or
pavgb
lds
mov
mov
push
fidivr
pop
aas
in
cmp
shl
lahf
pop
jbe
push
es
jns
mov
and
or
cmc
cmps
repnz
mov
xchg
inc
repz
retf
mov
(bad)
xor
mov
adc
sub
ja
mov
xchg
mov
sti
dec
inc
mov
dec
push
sub
inc
add
test
mov
jae
iret
push
popa
(bad)
xlat
push
loopne
cli
(bad)
cmps
stos
xor
sbb
jno
xor
outs
sti
jnp
rcr
fdiv
das
inc
cmp
lods
xchg
scas
jo
fdivr
mov
mov
sub
sar
inc
push
inc
sbb
mov
int
sbb
sub
sub
pop
out
ins
mov
dec
nop
stc
stos
or
push
push
mov
repnz
lahf
jge
or
adc
mov
scas
out
fild
cli
mov
sbb
bound
sbb
mov
fisttp
and
xchg
in
arpl
out
jle
jne
inc
xchg
addr16
stos
or
xchg
pop
retf
leave
cdq
mov
xor
jb
mov
fnsave
rcl
mov
fsubp
dec
fnstenv
xchg
stos
shl
mov
inc
mov
mov
jmp
pusha
retf
pop
mov
dec
(bad)
cli
lods
ss
xor
imul
inc
push
jnp
pop
mov
xor
fsubp
pop
jg
jbe
int
mov
mov
js
movs
and
inc
mov
sub
loop
xchg
push
int3
test
cmc
movs
mov
mov
mov
mov
(bad)
or
fld
loop
pop
das
(bad)
popaw
push
xchg
adc
(bad)
xchg
and
add
pop
dec
call
icebp
cli
add
push
mov
sbb
cmp
jmp
pop
xchg
pop
dec
fcomp
ss
inc
jge
(bad)
pop
inc
push
push
mov
pusha
pop
jns
imul
xchg
imul
in
mov
or
mov
jae
xchg
dec
stos
and
je
xchg
pop
sub
cmp
iret
jmp
jl
jecxz
pop
push
mov
sar
ja
or
sub
inc
add
pushf
pop
mov
inc
lahf
pop
popf
mov
gs
sahf
and
sahf
jo
cmps
rol
inc
or
retf
call
sub
mov
push
mov
cmp
stc
loopne
mov
rcr
cmp
xchg
or
iret
sub
mov
xchg
fild
push
mov
jecxz
pop
xchg
loope
cld
inc
cld
ds
adc
cmp
jbe
cmc
mov
sub
int
mov
or
push
add
pop
jmp
push
inc
and
or
rol
sbb
stc
cmc
fadd
addr16
outs
cmp
inc
mov
in
stos
push
jle
and
lea
lock
out
xchg
js
adc
push
adc
cmp
repnz
fisubr
pop
and
loopne
adc
loop
dec
nop
outs
add
mov
cmps
push
mov
mov
mov
sub
jl
jmp
sub
shr
and
leave
jae
dec
aad
sti
loopne
xchg
sub
pushf
cmp
cmp
fdivr
clc
pop
mov
and
mov
inc
pushf
jnp
dec
daa
inc
ds
push
icebp
sbb
jbe
push
aaa
and
cli
loope
fsubr
(bad)
xor
(bad)
(bad)
mov
or
sub
xchg
retf
shl
addr16
sbb
add
pop
in
fldcw
js
inc
jg
cwde
cmps
pop
test
rcr
into
push
idiv
loopne
xor
stos
inc
push
inc
xchg
call
scas
mov
mov
mov
or
cmps
xchg
xchg
sub
repz
jns
push
inc
xchg
or
fnsave
dec
push
ins
jae
xchg
ja
inc
das
jecxz
pop
loop
cmps
lods
mov
stos
xabort
loope
mov
sub
into
cmc
in
dec
or
mov
sbb
jle
push
lods
push
push
xor
ja
mov
inc
cmp
retf
mov
jl
repnz
cs
push
mov
mov
movs
push
jmp
out
xchg
and
in
add
adc
out
mov
pop
ret
ror
push
fcomp
scas
lea
dec
scas
imul
mov
push
mov
push
dec
mov
mov
loope
js
cmps
mov
fcmove
mov
jno
pop
popa
mov
jp
xchg
mov
pop
imul
shr
movs
push
data16
dec
xchg
inc
popf
inc
cli
stc
jecxz
cdq
idiv
mov
or
mov
push
add
mov
xor
jb
inc
jns
scas
data16
(bad)
fld
pop
pop
leave
dec
push
lods
or
cmp
inc
push
test
bound
(bad)
or
xor
scas
sbb
pusha
push
dec
aam
pop
mov
sti
add
fistp
mov
mov
dec
fldcw
push
stc
cmps
jmp
sar
xchg
sbb
std
stos
mov
add
lods
xchg
add
pop
iret
stc
cmp
xchg
lods
inc
adc
sub
ficom
mov
mov
mov
xor
xor
cwde
pop
aam
xchg
adc
add
stos
(bad)
cdq
dec
retf
xchg
adc
dec
(bad)
repnz
mov
call
inc
xchg
test
cs
cs
push
sub
cs
dec
push
and
cmp
retf
xchg
cmp
mov
movs
movs
inc
rcr
or
outs
mov
dec
sub
jne
and
jecxz
sbb
dec
jbe
xor
iret
out
dec
push
mov
in
mov
and
sbb
aas
mov
rcr
mov
out
sub
inc
cmp
out
rcr
in
inc
mov
jno
int3
xchg
adc
fsubr
adc
or
sti
ins
push
dec
push
movs
leave
icebp
or
test
cmp
pop
and
jae
mov
jmp
mov
shl
(bad)
pop
or
int
sub
push
cmp
sbb
aam
shl
aaa
xor
inc
call
fidiv
mov
lahf
in
loopne
pop
das
cld
lods
mov
adc
mov
push
pop
xchg
mov
cmp
(bad)
lahf
xchg
adc
jge
jno
mov
loop
dec
bound
mov
pop
sbb
inc
nop
out
fisubr
mov
fldl2t
fwait
outs
int3
sub
div
xchg
lock
xchg
outs
test
mov
and
outs
dec
loopne
ja
xchg
push
cwde
pop
or
ss
push
popa
mov
pop
xchg
gs
stc
adc
lods
or
dec
stc
push
jmp
or
outs
lea
pop
sbb
mov
jmp
loop
test
mov
jl
push
das
pushf
mov
int3
fst
push
retf
pop
sub
ds
sbb
push
mov
dec
test
or
shr
(bad)
daa
inc
mov
pop
data16
rcr
or
outs
jne
push
fnstcw
cmc
iret
cmp
cmp
xor
mov
adc
xor
pop
inc
pop
sbb
xor
ins
push
mov
out
ret
sub
xor
imul
stos
repnz
cwde
push
inc
gs
pop
dec
(bad)
pusha
sbb
xchg
cmps
inc
leave
arpl
out
mov
inc
push
stos
xlat
jge
mov
clc
imul
adc
iret
mov
loopne
mov
xor
jnp
cmps
daa
add
dec
adc
stos
jp
add
sub
mov
int3
pop
(bad)
cmp
push
sysenter
mov
add
dec
test
fist
cmp
outs
repz
pop
push
inc
add
pop
jge
jae
pop
cmc
(bad)
pop
add
sub
jb
mov
push
xchg
sub
addr16
into
dec
mov
or
sbb
mov
sbb
dec
and
dec
loop
jne
xor
out
push
push
xchg
fs
xchg
and
or
add
std
out
(bad)
sub
ret
adc
pop
clc
adc
jns
les
in
retf
adc
or
pop
sar
add
mov
push
cmp
fwait
js
ss
div
imul
scas
jmp
ins
push
lock
sub
xor
mov
movs
add
mov
sub
adc
(bad)
xor
mov
out
jne
add
call
xchg
iret
stos
jmp
xchg
stos
and
push
sub
into
(bad)
sbb
out
arpl
cmp
pop
fisttp
inc
test
rcl
ja
push
push
and
or
add
in
mov
int3
mov
and
xchg
mov
(bad)
mov
push
xchg
clc
cmc
xchg
mov
and
cld
mov
push
sub
scas
loopne
leave
lea
sbb
dec
dec
inc
pop
and
mov
(bad)
popa
inc
ins
jb
pop
inc
xor
test
mov
jp
inc
mov
fxch
xor
cmp
imul
dec
or
mov
pop
test
jmp
add
jbe
cmps
add
adc
mov
push
fdivr
xor
std
sahf
cmp
scas
mov
mov
addr16
sbb
ss
jecxz
sbb
ret
sub
mov
dec
imul
stos
sti
adc
sub
lahf
dec
pop
cmps
std
push
cmp
sbb
or
pop
add
mov
xor
push
data16
dec
mov
push
dec
cmp
mov
cmp
mov
push
add
adc
aas
shl
inc
add
inc
mov
xor
cli
push
xchg
adc
scas
push
xor
jb
fmul
or
(bad)
mov
mov
cli
cmp
add
xlat
and
(bad)
adc
mov
(bad)
mov
iret
(bad)
ss
shl
(bad)
xor
fsubr
push
xlat
cmp
in
in
sub
jp
xlat
out
mov
jp
out
fidiv
arpl
mov
inc
mov
(bad)
mov
lods
in
in
xlat
jl
pop
enter
sar
popf
(bad)
jge
jae
pop
ins
jmp
dec
lods
sub
jae
mov
pop
adc
je
and
xchg
adc
in
add
outs
mov
mov
sbb
mov
neg
and
and
call
loope
add
fbstp
scas
push
loope
push
and
fucomp
xor
test
leave
fcmovbe
out
mov
stc
push
inc
retf
or
pop
jno
sti
dec
and
sbb
int
stos
mov
je
fsubr
adc
jnp
aam
or
fcom
in
repnz
add
add
xchg
and
jno
xor
jg
jb
out
hlt
push
lahf
cli
cmp
test
ret
clc
test
pushf
jno
mov
sub
cmp
jmp
iret
mov
stos
mov
(bad)
add
jo
ss
add
aad
dec
ins
mov
test
mov
shr
pop
pop
mov
(bad)
not
enter
jge
sahf
xor
mov
outs
scas
cmps
lods
pop
pushf
cmp
comiss
rcl
cwde
pop
les
enter
dec
cmp
mov
adc
hlt
adc
daa
jg
nop
adc
jo
cli
mov
aad
pop
cmp
jne
rol
mov
movs
ins
iret
cmps
test
jmp
retf
(bad)
fstp
push
pop
push
dec
add
mov
mov
xchg
arpl
test
cwde
mov
push
inc
xor
popa
jo
outs
or
scas
cmp
inc
mov
xlat
adc
ret
jl
mov
stos
fld
cmc
enter
lods
fist
ret
test
push
stos
(bad)
jne
lods
shr
cmc
xor
lahf
retf
sub
cmp
mov
mov
vpcmpgtb
mov
fsubr
scas
test
imul
cmp
dec
lea
adc
loop
xor
ficomp
pop
mov
aaa
pushf
adc
out
inc
adc
mov
test
in
inc
retf
es
cmp
dec
enter
pop
out
nop
inc
rcl
mov
(bad)
test
pusha
ja
popa
mov
neg
out
popa
adc
add
or
lods
scas
mov
dec
mov
ficom
jmp
cli
scas
and
dec
bound
movs
idiv
retf
and
mov
xor
mov
and
loop
mov
mul
mov
jecxz
xor
popa
and
or
mov
lea
cmps
inc
inc
dec
cli
mov
jle
jae
mov
cmp
push
dec
dec
cmp
xchg
mov
call
and
pop
dec
sbb
inc
cmp
inc
pop
cmp
loope
or
inc
gs
cmp
enter
pop
ficomp
outs
xor
pop
jmp
rcl
and
outs
dec
push
add
stos
add
inc
or
popa
jmp
inc
xor
and
add
mov
pop
sub
inc
cwde
nop
or
cmps
xchg
sub
mov
pop
inc
sbb
fwait
rol
mov
jo
or
in
jg
cmps
retf
inc
mov
shl
mov
xor
pushf
popa
inc
in
stos
lods
scas
aam
pop
out
dec
out
pop
jmp
push
dec
sub
xor
mov
test
icebp
adc
(bad)
jle
ffree
stc
leave
fcmove
sub
inc
out
jmp
or
add
imul
jmp
or
mov
lea
and
mov
stc
aas
sahf
or
cmp
cmp
icebp
in
mov
fldcw
test
jl
daa
adc
ret
outs
xchg
sub
pop
fadd
pop
add
and
pop
pushf
inc
es
mov
lahf
jnp
inc
aam
mov
mov
add
xchg
xor
retf
(bad)
clc
ds
ret
xchg
rcl
ja
arpl
push
(bad)
ss
or
fisubr
out
or
bound
mov
jmp
jge
mov
pop
xchg
inc
enter
mov
sti
sub
push
ins
cmc
popa
add
fimul
int
cmp
ss
jnp
pop
dec
addr16
shl
dec
arpl
add
sbb
aam
xchg
les
(bad)
imul
and
pop
in
pop
enter
cmp
sub
mov
(bad)
dec
dec
out
push
pop
inc
popa
cmc
les
lds
mov
mov
or
and
rsm
bound
stos
movs
ficomp
pop
xchg
cld
xchg
aas
xor
add
out
add
popa
les
sbb
pusha
rcl
(bad)
retf
xchg
data16
mov
daa
dec
fcom
outs
dec
sub
mov
fmul
xor
call
xchg
fcom
shr
mov
pop
mov
ins
xchg
sub
mov
mov
add
pop
push
cmp
movs
and
adc
mov
arpl
lahf
cmc
adc
popa
and
(bad)
jecxz
inc
mov
jb
cmp
cdq
daa
xor
inc
jo
mov
(bad)
retf
xchg
lds
or
repnz
arpl
adc
cmp
fisttp
cmps
aam
mov
push
adc
mov
fld
sbb
test
dec
dec
bound
xchg
pop
mov
add
fcom
test
sbb
clc
rcl
jl
add
mov
test
iret
adc
ret
hlt
jb
movs
test
cmp
adc
(bad)
sbb
aam
aaa
push
fwait
lods
mov
shr
bnd
mov
or
push
scas
enter
cmc
lods
test
mov
in
retf
mov
(bad)
arpl
test
xchg
xor
sbb
pop
jo
push
push
fist
fcmovne
jae
int
test
sub
and
jmp
sbb
sahf
cmp
sub
into
jecxz
(bad)
add
push
ja
(bad)
jp
lds
xchg
mov
repz
loope
sbb
cwde
jl
gs
jmp
daa
mov
int3
lea
or
push
nop
in
xchg
rcl
dec
pop
mov
or
test
dec
out
cmps
cmp
(bad)
cmp
sbb
fmul
mov
pop
lahf
(bad)
adc
inc
cmp
mov
test
push
repz
jg
inc
dec
movs
mov
cmp
ret
sbb
mov
xchg
push
xchg
push
add
fcmovne
jae
xchg
inc
inc
fsubr
repz
loope
sbb
push
and
sbb
and
jb
cld
sbb
mov
movs
xlat
push
scas
sub
icebp
outs
xchg
and
mov
sbb
(bad)
out
xor
jns
test
mov
inc
pop
sbb
iret
and
jae
and
pop
jb
scas
out
vdivsd
jo
je
ror
(bad)
jmp
push
sub
cmps
ins
enter
ja
jb
jb
sbb
cld
ficom
leave
jo
int
jle
mov
cmp
shl
fld
dec
add
movs
inc
sbb
retf
jmp
out
mov
add
sbb
mov
inc
lock
sbb
std
loope
das
rcl
inc
movs
imul
out
add
leave
lahf
aad
sbb
(bad)
push
std
jae
and
jmp
jp
jne
aad
ss
mov
sbb
enter
js
pop
jne
(bad)
sbb
xor
hlt
adc
ins
daa
mov
or
ret
mov
pop
dec
and
add
ror
in
jbe
aad
or
or
mov
jno
pop
shl
push
scas
mov
xchg
pop
mov
pop
add
and
test
inc
mov
inc
mov
inc
dec
and
(bad)
pop
scas
xor
sub
into
cdq
pop
stos
mov
push
into
out
pop
pusha
lods
imul
dec
ret
sbb
(bad)
push
and
sbb
jg
push
adc
push
mov
mov
dec
cmp
data16
jle
mov
sbb
test
pop
push
sub
out
in
icebp
ficomp
push
test
cmps
lahf
ret
inc
not
or
push
push
and
sub
arpl
xchg
sbb
ja
cmp
js
cmp
(bad)
sar
mov
jb
inc
push
fs
mov
repz
mov
rcl
shr
mov
je
or
pop
daa
aam
xlat
cwde
ficomp
(bad)
jnp
sbb
sub
data16
pop
sub
arpl
es
xchg
mov
out
test
and
shr
push
push
push
aam
cmc
jg
adc
movs
loopne
pop
retf
adc
(bad)
arpl
sbb
fsubp
test
retf
ins
ret
fsubr
pop
xchg
push
and
test
hlt
cwde
mov
leave
and
inc
sti
loopne
ror
mov
je
in
(bad)
sub
sub
push
scas
arpl
sub
add
call
sub
dec
and
call
ja
(bad)
out
xor
aaa
xor
sti
inc
mov
inc
repnz
sub
cmp
xchg
addr16
inc
sub
add
mov
ret
push
lahf
and
(bad)
sub
pop
push
outs
in
retf
sub
das
sub
jmp
das
mov
sub
and
iret
or
xlat
(bad)
sub
test
cwde
fcmovbe
add
or
(bad)
outs
jo
fadd
jnp
in
arpl
loopne
(bad)
stc
pop
mov
xchg
fldenv
add
arpl
pop
or
les
scas
push
dec
fsub
cmp
jb
aad
shl
jmp
out
or
inc
fwait
pop
call
add
inc
push
pop
xchg
pop
sub
cld
sbb
das
mov
cli
sbb
call
add
mov
sub
mov
in
jp
mov
inc
mov
mov
xor
or
shl
adc
cmp
hlt
cmps
and
xor
jle
and
adc
and
pop
aad
mov
mov
push
add
pop
std
ins
stc
sti
leave
(bad)
xor
clc
or
xchg
jno
out
cmp
add
out
daa
or
dec
mov
cmp
std
(bad)
sub
jno
push
in
lds
mov
xchg
mov
jl
aam
bound
add
mov
jmp
ret
call
or
sbb
jbe
jno
mov
cmps
pop
inc
mov
fs
pusha
add
in
stos
push
adc
ret
mov
mov
mov
sub
jb
jbe
mov
xor
iret
fstp
or
repz
jae
dec
mov
mov
arpl
or
mov
or
fisttp
inc
scas
lds
jns
sbb
shld
outs
aas
(bad)
jns
lock
data16
pop
cmp
mov
fs
fist
fs
xlat
js
mov
push
rol
jg
inc
aad
cmp
(bad)
adc
ror
mov
fild
pop
xchg
cmp
xchg
cs
cmc
int3
imul
daa
pop
and
fdiv
enter
arpl
scas
mov
xlat
sub
out
cmp
cwde
ja
mov
and
sbb
pop
jb
sbb
dec
xor
jb
(bad)
(bad)
lods
fidiv
sub
inc
cld
cmps
movs
push
std
retf
sbb
xor
push
sahf
mov
mov
sbb
js
push
jnp
js
js
ret
push
jae
cmp
retf
and
cmc
jne
das
stc
addr16
inc
push
jl
push
pusha
(bad)
std
jae
and
mov
test
nop
xchg
outs
sahf
sbb
cmp
push
inc
aam
cmp
cli
xor
adc
push
lds
mov
pop
and
add
push
stc
add
cmp
aas
outs
dec
paddsb
fwait
pop
xchg
jbe
fxch
loop
test
pop
call
out
test
mov
mov
pop
jge
mov
pop
xor
in
adc
ins
pop
add
and
aaa
sahf
aaa
mov
rol
repz
(bad)
inc
pop
adc
outs
in
nop
outs
jnp
sub
jp
mov
jmp
gs
xor
mov
dec
cmp
jmp
les
dec
mov
imul
pop
ins
jge
jmp
outs
rcr
fisttp
sub
inc
push
inc
retf
inc
cmp
mov
dec
inc
pop
push
mov
call
lock
ja
fs
pop
mov
push
or
or
lods
dec
mov
int3
push
cmps
jmp
xchg
sub
arpl
push
addr16
scas
in
mov
inc
cs
add
adc
sbb
cmp
js
pop
pop
jg
jo
xchg
rcl
pushf
fcom
mov
ja
inc
fcomp
retf
mov
push
jmp
mov
xchg
repz
mov
mov
mov
push
shl
jne
mov
lock
arpl
pop
xor
shl
frstor
aad
lock
int3
fs
cld
pusha
mov
push
mov
ss
stos
sbb
xchg
loop
ins
pop
std
mov
and
out
pop
jbe
(bad)
ds
adc
xor
ror
mov
ror
xchg
cvtdq2ps
fnstsw
sbb
aaa
test
loopne
sub
es
mov
es
mov
push
pop
dec
mov
mov
jo
rol
int
out
xor
scas
mov
imul
aaa
rcr
std
and
jg
int
outs
call
jns
stos
es
cmps
ret
or
cmp
mov
mov
cmc
int3
add
cmp
push
repz
cld
daa
stos
cmp
daa
pop
jecxz
xor
push
and
loop
xor
sbb
mov
stc
pusha
loop
xor
push
mov
imul
push
test
scas
sahf
dec
push
pop
rcr
pushf
mov
scas
adc
or
int
push
movs
enter
stc
mov
out
mov
or
lods
xchg
add
xlat
add
push
fst
(bad)
aaa
retf
xor
jbe
push
add
out
sahf
add
inc
adc
pop
stos
(bad)
scas
into
pop
hlt
pushf
fiadd
mov
push
mov
out
fcmovnb
or
xchg
dec
test
mov
data16
dec
sub
fimul
adc
mov
lock
imul
lahf
out
push
(bad)
add
cmc
stc
xor
add
xchg
jge
pop
imul
fidiv
iret
addr16
cmp
out
inc
ss
and
clc
xor
pop
mov
sbb
bound
imul
cmp
out
and
out
mov
or
pop
xchg
xchg
neg
ins
or
jmp
mov
cmp
out
pop
pop
call
cmp
mov
paddb
out
test
shr
hlt
movs
test
push
cmp
xchg
gs
cld
mov
mov
or
or
adc
push
cmp
hlt
jg
clc
leave
or
jge
cmp
jl
shr
mov
into
cmp
mov
pop
ins
aas
adc
mov
xchg
pop
lods
scas
jnp
sahf
fcmovnbe
pop
xor
idiv
ss
push
loop
xor
mov
mov
adc
inc
js
fisubr
in
cwde
in
push
add
lea
aaa
out
push
dec
arpl
int
outs
xor
cmc
retf
cs
mov
into
cwde
sbb
sahf
aaa
test
(bad)
dec
cwde
loope
and
ret
icebp
or
or
shl
rcr
data16
mov
(bad)
stc
xlat
pop
pusha
icebp
jle
lahf
imul
(bad)
pop
push
cmps
gs
jge
test
(bad)
lds
and
fcom
jle
xchg
pop
xor
mov
call
lods
out
(bad)
pusha
add
or
sahf
icebp
icebp
adc
imul
test
sar
push
enter
call
dec
mov
stos
xor
push
int3
mov
sub
xor
adc
es
add
add
sub
dec
ja
scas
ret
repz
sub
mov
cmp
adc
mov
sbb
leave
jge
jae
sub
mov
xchg
scas
xlat
in
jg
int3
mov
movs
daa
outs
xor
cdq
js
dec
and
cmp
ds
jmp
cdq
fist
outs
daa
push
mov
loope
mov
rol
jo
ins
out
iret
rcl
(bad)
iret
and
imul
bound
in
push
and
and
inc
jbe
sub
loope
(bad)
mov
xor
mov
adc
jnp
add
mov
adc
adc
fwait
push
hlt
(bad)
sti
add
and
aas
sub
les
xchg
cmc
dec
dec
cmp
pop
xor
jb
and
jmp
mov
fadd
nop
div
sub
rol
imul
fnstsw
bound
ja
fdiv
in
fwait
xchg
sbb
enter
mov
dec
fs
jg
fld
or
dec
into
loope
or
cmp
dec
inc
in
call
rcl
outs
mov
dec
pop
jl
mov
retf
pop
push
sar
test
push
lods
aaa
xor
aam
stos
push
imul
arpl
in
or
imul
mov
aad
aad
retf
add
shl
pop
or
imul
js
adc
clc
add
xchg
mov
sbb
push
scas
lahf
pop
jle
pop
je
sbb
loope
cs
push
mov
popa
and
mov
shl
pop
pop
xor
js
repz
in
and
jecxz
pusha
hlt
xchg
test
or
xchg
outs
out
adc
pop
sub
test
dec
scas
imul
cmp
cmp
push
int3
gs
das
mov
add
xor
ins
repnz
lock
jl
in
cmp
pop
jle
jl
cld
push
aam
and
jecxz
shr
into
mov
jno
(bad)
pop
mov
inc
pop
inc
jge
xchg
arpl
or
sahf
xchg
push
mov
lods
xchg
fucomi
or
dec
dec
outs
mov
bswap
popa
or
inc
sbb
mov
lea
sub
push
fistp
stos
push
sub
push
and
jg
push
inc
and
jae
push
cmp
popa
mov
xchg
int
sbb
sbb
in
test
pop
adc
inc
(bad)
jne
lea
jb
aas
inc
and
retf
daa
mov
test
in
mov
ret
fistp
or
imul
inc
push
enter
jo
(bad)
ss
xor
dec
shl
out
xor
aaa
in
xchg
dec
data16
xchg
sub
out
cmc
ja
jae
mov
or
add
mov
pop
jae
pop
mov
shl
ss
or
ja
(bad)
mov
sbb
out
add
fcom
dec
fist
or
aad
js
push
add
mov
mov
js
push
fist
jno
retf
xor
pop
xchg
outs
sbb
cdq
xlat
dec
mov
xor
jo
sbb
mov
mov
in
out
push
jbe
and
cmc
movs
dec
aas
add
jnp
ds
push
push
bound
cmp
dec
sbb
loopne
and
sbb
cmp
shl
inc
frstor
ss
mov
mov
cmp
add
cli
cmp
xor
push
test
sbb
mov
mov
pop
icebp
mov
dec
mov
fstp
(bad)
shr
mov
stc
shl
xor
adc
add
pop
adc
xlat
leave
xchg
idiv
mov
pop
xchg
mov
stos
sub
(bad)
int
sub
inc
xchg
jno
cmps
in
aad
or
and
xor
xor
jns
mov
xchg
lock
jns
xchg
mov
xchg
mov
vmaxss
jbe
outs
addr16
dec
adc
inc
cmp
jne
push
aas
xchg
mov
loopne
jo
cmp
repnz
xor
test
aas
jecxz
imul
sbb
fsub
jns
and
and
cdq
dec
mov
or
mov
add
rol
push
aas
dec
mov
in
mov
in
or
(bad)
cmp
inc
sub
pop
sar
mov
loop
push
test
shl
cmp
mov
dec
imul
test
hlt
les
sbb
sbb
cmps
lahf
lahf
fsubr
lods
inc
sub
sub
loop
out
push
mov
out
(bad)
out
out
adc
outs
xor
call
cmp
pusha
jae
xchg
shl
sbb
mov
xchg
jno
xchg
adc
iret
mov
cmp
xchg
or
sub
inc
mov
stos
lea
cmp
adc
add
jp
xor
test
(bad)
leave
ins
push
mov
in
sbb
ret
dec
outs
stos
aaa
cmp
in
add
mov
out
mov
outs
es
sub
jle
pop
pusha
sbb
lods
adc
mov
sub
mov
jle
sbb
xor
xor
stos
movs
jb
cmp
add
add
out
xchg
xchg
cmps
push
(bad)
(bad)
pushf
push
cli
scas
mov
dec
(bad)
outs
out
push
test
repz
sub
out
dec
mov
inc
cwde
out
fadd
mov
sti
in
add
inc
sar
xchg
call
sbb
fild
pop
inc
jmp
xor
fiadd
adc
out
add
in
jnp
xchg
hlt
outs
test
pop
lods
out
std
pusha
dec
and
ret
xor
call
mov
jns
loop
jns
js
push
push
push
clc
enter
or
push
cmp
xchg
clc
ds
jecxz
dec
sub
pop
xchg
inc
int
push
jns
cwde
xlat
xlat
inc
and
push
adc
push
add
dec
cmp
inc
pop
movs
sti
sub
sub
das
in
pop
jo
fistp
add
hlt
je
lds
pop
fdiv
mov
call
jbe
or
xchg
mov
pop
dec
xlat
and
pop
shr
and
or
mov
cmp
jns
retf
mov
and
popa
rol
and
loopne
dec
inc
add
imul
pop
jns
scas
cmp
inc
lods
int
xchg
xchg
pop
das
inc
enter
(bad)
push
test
out
jns
push
sub
add
leave
cmp
push
or
shl
loop
out
xchg
lea
pop
adc
inc
sub
mov
xor
add
(bad)
and
in
cmp
enter
pop
jle
lock
into
and
xchg
ja
xor
jo
cwde
int3
frstor
cs
pop
out
ins
jg
pop
pop
adc
dec
mov
jae
sub
xchg
sbb
jo
sub
jbe
xchg
cld
jb
ja
mov
and
ins
xchg
stc
aas
xchg
loopne
inc
repz
jle
or
fdivr
ins
repz
mov
movs
ror
scas
mov
inc
leave
lea
push
sub
or
fcom
nop
xor
pop
lea
add
push
jecxz
inc
push
loopne
jbe
daa
sub
pop
adc
(bad)
in
xor
in
fs
in
movs
adc
push
cmp
int3
xchg
xchg
lods
pop
mov
stos
and
lds
mov
push
add
std
repz
ret
in
je
loope
sub
inc
jl
popa
inc
mov
js
xlat
push
out
jns
test
or
mov
jno
jg
leave
jb
push
mov
aad
ret
push
jae
repnz
sbb
sbb
sub
ret
in
push
ficom
pop
imul
pop
loope
add
iret
xor
jno
add
jmp
or
jnp
adc
sbb
cdq
popf
sbb
fwait
add
div
dec
sbb
cmp
lock
(bad)
(bad)
scas
mov
inc
mov
les
popf
adc
jnp
sub
jmp
sub
hlt
inc
loop
(bad)
std
cli
push
lods
sahf
add
(bad)
cmp
or
sti
add
mov
sbb
and
cmp
inc
ficomp
dec
xor
xchg
and
mov
jnp
ins
daa
aad
inc
scas
popa
jns
adc
cmp
popf
fldenv
lahf
retf
ret
or
add
mov
movaps
test
cmp
sbb
fsub
xor
imul
sub
xor
mov
icebp
pop
enter
into
ret
mul
mov
ret
ret
lods
pop
retf
mov
lea
inc
push
in
out
mov
mov
pushf
fld
push
inc
jecxz
(bad)
movs
cmps
cs
out
pop
mov
fisttp
stc
(bad)
fisub
sub
mov
cmp
(bad)
pop
div
outs
in
das
retf
arpl
xchg
(bad)
iret
sahf
mov
lahf
(bad)
leave
or
jle
in
adc
cmp
(bad)
cmp
sbb
sahf
mov
sti
movs
data16
(bad)
js
mov
inc
push
ss
in
rcl
call
xchg
cmp
aas
jne
add
cmps
cmp
add
inc
in
cwde
test
adc
vpaddusw
out
sbb
xchg
mov
inc
ins
xor
and
inc
nop
pop
cdq
xor
mov
jbe
jnp
jle
daa
fwait
xchg
test
(bad)
lods
shl
adc
jno
push
in
jne
fcomp
sub
add
jle
test
cs
jl
jmp
pop
jl
inc
adc
ret
adc
mov
out
jmp
add
fmul
loop
jb
ds
fcomp
pushf
aas
adc
test
(bad)
sbb
cmp
push
test
jns
cmp
add
clc
jmp
cmps
fcomp
arpl
cmp
retf
sbb
rcl
dec
outs
(bad)
stos
sub
in
shl
mov
imul
cmps
(bad)
fldcw
adc
add
adc
jns
mov
xchg
fnstsw
mov
addps
xor
les
add
stos
push
mov
ds
fld
out
xchg
push
in
push
stc
pusha
mov
cmp
fcmovnu
dec
pushf
les
fwait
in
mov
pop
add
stos
clc
or
sub
cmp
inc
rcl
mov
cmps
mov
fild
push
ret
loope
in
out
aam
jmp
adc
lods
dec
out
pop
xchg
mov
xlat
popa
jb
lds
int
adc
adc
xor
mov
imul
xor
inc
adc
scas
xchg
sbb
std
retf
xchg
(bad)
enter
pop
adc
jp
mov
js
lea
jnp
test
aas
add
jl
xchg
stos
inc
and
mov
sti
jmp
outs
mov
cli
clc
xchg
sub
mov
fisub
mov
fucom
int3
xor
addr16
jo
(bad)
std
adc
jmp
mov
and
inc
sbb
cmp
into
inc
stc
xor
cmp
addr16
js
test
into
js
inc
xor
sub
mov
adc
(bad)
sar
sub
add
les
enter
adc
rcr
add
mov
sub
neg
mov
out
or
push
fsubrp
gs
jg
push
jle
movs
addr16
ds
cwde
jo
rdpmc
push
xchg
mov
leave
inc
push
div
scas
inc
push
xor
dec
ret
jle
cmps
adc
data16
mov
jne
adc
push
test
enter
sub
mov
loope
aad
dec
aaa
punpckhdq
pop
popa
neg
add
es
xchg
mov
pop
jecxz
das
not
add
(bad)
xor
mov
retf
repnz
dec
sbb
int
into
cmpxchg
mov
outs
ret
repz
in
out
jo
adc
movs
cmp
iret
jnp
add
mov
lock
xchg
dec
jg
and
stos
pop
loope
adc
pop
dec
jnp
sti
xchg
mov
(bad)
jb
ror
xor
cmp
cwde
xchg
sub
sbb
imul
dec
fwait
test
not
xor
pop
pop
jge
sbb
retf
push
mov
sahf
and
arpl
mov
pusha
ret
idiv
push
dec
scas
dec
cmc
scas
nop
add
fstp
lods
push
(bad)
push
outs
dec
cmp
pop
data16
mov
(bad)
jl
sub
adc
pusha
add
(bad)
mov
sbb
pop
rcl
adc
icebp
lahf
and
(bad)
aas
mov
xor
mov
xor
xchg
jmp
pop
ds
ja
inc
js
nop
arpl
nop
stos
push
push
and
ret
cmps
mov
(bad)
jmp
mov
pop
cmp
cmp
(bad)
js
inc
fucomp
push
sub
pop
sbb
jbe
es
inc
mov
push
and
loopne
cdq
mov
pusha
ret
jb
xchg
mov
mov
in
mov
inc
and
mov
or
pop
jmp
mov
adc
jae
movs
scas
xchg
test
mov
xchg
jbe
dec
neg
cmp
lds
shl
fnstenv
mov
pop
push
nop
int3
push
lods
mov
mov
call
inc
imul
jne
mov
pop
ret
dec
and
pop
sahf
outs
sub
sub
and
fs
mov
scas
pop
xchg
push
mov
cdq
in
adc
jmp
xlat
jmp
in
les
mov
nop
cwde
xchg
add
dec
pop
pop
lods
pop
fidiv
adc
jmp
or
mov
sbb
scas
rol
mov
cmp
push
xchg
fidiv
mov
mov
aad
inc
xchg
scas
gs
inc
add
test
cld
retf
dec
dec
mov
movs
jle
dec
(bad)
loope
stos
fdivr
inc
fwait
cmp
jne
add
lock
sbb
sbb
lahf
jb
and
mov
aad
pop
and
movs
xchg
xlat
ins
and
cmp
mov
outs
inc
dec
fisttp
sub
xor
push
gs
jg
add
cmp
adc
mov
addr16
cdq
add
fisttp
lahf
outs
nop
and
leave
(bad)
out
push
push
aad
clc
cs
jno
jmp
adc
add
and
mov
xchg
jecxz
mov
(bad)
shl
pop
ret
jae
pop
and
and
or
mov
(bad)
icebp
test
retf
popf
into
jne
push
(bad)
retf
adc
mov
loop
add
pop
imul
je
mov
mov
fbld
shr
(bad)
repz
or
cmp
(bad)
jmp
addr16
cmp
lds
das
or
popf
xor
xchg
pusha
add
dec
push
dec
std
(bad)
jle
movs
stos
sbb
inc
fstp
jno
pop
xlat
mov
lods
fsub
or
lods
hlt
scas
cmp
lds
gs
add
or
or
or
push
cmp
add
or
std
mov
inc
cwde
bound
and
dec
dec
scas
shl
push
xchg
ins
cmps
mov
loope
jp
xor
data16
cmp
stos
scas
adc
out
setne
(bad)
mov
cli
aaa
lea
jo
mov
pop
stc
and
jmp
mov
jle
iret
fs
mov
stos
sti
(bad)
cmp
(bad)
push
bound
mov
dec
out
jmp
xor
mov
fdivp
sahf
pusha
and
cmp
movs
and
jns
dec
pusha
jle
xlat
leave
adc
outs
aam
mov
dec
lods
rol
dec
cmp
jecxz
iret
push
xchg
(bad)
daa
fs
or
xor
dec
cmp
ret
or
hlt
jge
scas
in
bts
push
sub
dec
ficomp
and
cmp
add
mov
xor
and
dec
pop
xchg
mov
inc
inc
push
stos
retf
je
inc
and
ret
inc
adc
sbb
fnstcw
add
mov
mov
jne
and
dec
lods
fmul
imul
mov
fs
jmp
(bad)
imul
pop
inc
popf
inc
es
or
jl
out
mov
sbb
data16
pushf
test
mov
(bad)
xor
nop
dec
mov
sub
jne
dec
rcr
sahf
je
retf
cdq
gs
ret
xchg
push
hlt
push
dec
hlt
pop
inc
sub
mov
fdivr
adc
test
xlat
iret
dec
sbb
shl
lods
test
pop
fwait
bound
mov
shl
xor
mov
ret
daa
hlt
gs
sub
scas
lds
rcl
outs
xor
push
pusha
mov
(bad)
stos
xchg
dec
sbb
sbb
xchg
(bad)
fdiv
mov
mov
add
fnstsw
retf
push
into
gs
je
inc
dec
xor
pop
scas
cwde
jp
xchg
stos
out
rcr
es
pop
call
or
push
aad
mov
xchg
xlat
mov
(bad)
xchg
mov
mov
out
daa
ja
inc
mov
fcom
jg
out
sbb
mov
or
mov
cmp
es
sbb
push
cmpxchg
dec
push
mov
mov
sbb
cmp
in
jae
mov
idiv
pusha
sbb
rcl
ror
jns
push
movs
ins
cwde
(bad)
sub
in
and
pusha
inc
shl
iret
inc
jmp
or
cmp
cmp
cmp
mov
mov
or
dec
jp
mov
jl
inc
xor
dec
adc
add
or
mov
mov
mov
xor
fistp
add
mov
les
xor
pop
xchg
cli
inc
pusha
jmp
stc
inc
mov
mov
adc
scas
and
dec
mov
xor
add
xlat
enter
imul
dec
pmulhw
scas
ja
cld
mov
mov
popa
or
imul
ins
pop
xor
xor
arpl
mov
mov
es
push
sahf
clc
jnp
sbb
(bad)
std
fcom
cwde
sbb
sbb
sbb
mov
hlt
jo
add
adc
adc
xor
and
push
imul
(bad)
js
inc
cld
sbb
fwait
movs
daa
add
mov
or
(bad)
clc
bound
nop
jmp
adc
movs
imul
xor
bound
fist
add
push
test
pusha
or
(bad)
clc
mov
aas
cmp
or
rol
fldcw
or
and
xor
pushf
jo
in
ins
inc
mov
push
xor
cwde
pop
addr16
pop
adc
stos
pop
mov
ins
and
jecxz
xor
dec
sbb
(bad)
xchg
push
push
enter
dec
lods
cmp
dec
adc
in
xor
les
or
cmp
fwait
sbb
addr16
or
push
mov
jg
mov
stos
mov
repz
pop
sar
js
adc
mov
cs
fs
dec
xor
or
out
add
xor
(bad)
(bad)
or
int3
mov
inc
add
mov
xor
xor
xchg
sahf
es
sub
callw
cmp
or
mov
sub
in
lahf
sub
std
hlt
(bad)
iret
dec
push
mov
loop
dec
es
sti
scas
mov
out
dec
loope
repz
xchg
fisubr
movs
sti
mov
pop
in
mov
nop
repnz
stc
push
and
jbe
xchg
out
cmp
ja
stos
mov
bound
jge
addr16
das
lahf
imul
stc
add
ins
sbb
pop
push
out
(bad)
in
iret
in
fldcw
clc
xchg
xchg
jbe
mov
cmp
push
cmps
pop
sbb
(bad)
adc
sub
sub
aaa
jne
mov
mov
pop
dec
ins
jp
push
mov
cmp
lods
mov
xor
setns
jno
dec
mov
data16
xchg
adc
(bad)
xor
cld
scas
test
les
jne
movs
test
pop
pop
(bad)
icebp
popf
(bad)
jle
(bad)
push
xor
mov
rcl
movs
push
mov
adc
shl
xchg
and
or
push
div
lahf
adc
loop
inc
repz
sub
mov
loope
cmp
lea
and
xchg
sbb
js
sbb
lods
call
call
sub
jl
adc
mov
cwde
mov
scas
push
jns
add
fisub
fmul
sti
push
pop
cli
idiv
jae
xlat
inc
adc
(bad)
les
ror
push
int3
mov
mov
jge
daa
jg
test
mov
test
xlat
sar
sbb
(bad)
and
retf
sub
shl
inc
scas
push
sub
xchg
out
xor
and
mov
loopne
sub
pop
call
fidiv
in
xor
mov
mov
outs
lahf
(bad)
mov
dec
jmp
loop
fistp
sbb
xchg
pop
jns
daa
push
lds
in
cmc
pop
lods
(bad)
fcomip
push
jb
push
cs
jle
xchg
sbb
jno
mov
jo
pop
data16
sti
int3
stos
movs
ins
adc
pusha
pop
or
jmp
mov
sbb
loop
mov
mov
dec
lea
iret
daa
mov
(bad)
add
mov
inc
fst
push
int3
cmps
xor
cmp
inc
jecxz
mov
dec
xor
xchg
ins
aas
sbb
pusha
rcr
pop
add
sbb
aad
pop
pop
jmp
pop
cdq
lods
gs
ficom
call
pop
jp
and
push
mov
shl
adc
add
lds
inc
jbe
sahf
enter
mov
(bad)
mov
imul
or
sub
sbb
arpl
mov
outs
push
addr16
sub
mov
gs
sbb
rcl
adc
(bad)
cmp
sub
pop
xchg
mov
sub
pop
adc
repz
iret
jbe
add
sahf
test
mov
neg
add
pop
test
dec
jecxz
and
dec
push
out
dec
add
or
mov
fwait
pop
dec
ss
fucomi
inc
sub
xchg
loop
stos
outs
pop
xlat
call
addr16
sub
mov
cdq
mov
arpl
scas
(bad)
pop
add
add
cmp
pop
add
popa
mov
(bad)
lock
jl
ss
outs
maskmovq
div
test
pop
sub
mov
das
sub
xlat
pop
xor
xlat
cmovb
pop
sbb
movs
xchg
add
imul
call
and
mov
adc
sahf
mov
loope
test
sub
sub
push
cmp
stc
mov
out
out
fwait
pushf
xchg
sbb
adc
sub
aad
sbb
out
aam
cmp
xchg
ja
dec
ins
mov
mov
dec
scas
(bad)
sub
pop
cmp
jmp
cmp
push
mov
push
icebp
outs
and
out
sub
jo
mov
shl
pushf
sete
jl
sub
rcl
imul
adc
xchg
stos
push
test
or
(bad)
fstp
shl
jns
or
pop
dec
lods
in
dec
stos
std
stc
out
cmp
mov
jb
mov
cmc
ror
jb
mov
jo
cmp
stc
sub
mov
arpl
push
push
dec
push
js
xor
in
(bad)
adc
mov
shl
enter
cmp
sub
aad
mov
test
xor
add
and
adc
adc
and
push
aaa
jge
xor
pop
mov
or
repz
sbb
shr
addr16
mov
inc
push
dec
clc
jbe
xchg
popf
adc
aad
mov
std
mov
in
push
mov
sbb
add
fstp
lock
push
dec
sub
aam
clc
cmp
or
clc
push
and
fld
fs
push
les
mov
imul
jg
retf
idiv
rcr
dec
das
cmps
push
sbb
fidivr
and
mov
adc
push
lods
dec
xor
iret
stos
jbe
xor
pop
lds
aas
inc
ja
inc
fldenv
movs
add
jmp
or
lahf
sbb
dec
data16
sar
jae
ds
sbb
call
leave
push
imul
push
cmp
in
cli
loope
cmp
cmp
cmps
mov
repnz
mov
xor
sar
imul
retf
xchg
lods
adc
push
js
adc
jecxz
dec
xor
xchg
sbb
pop
arpl
jno
loopne
inc
clc
iret
pop
mov
std
addr16
mov
xor
cwde
leave
xchg
sub
mov
lods
(bad)
pop
add
sbb
dec
pop
(bad)
shl
jmp
mov
mov
(bad)
dec
es
fstp
xlat
ror
mov
cmp
lods
add
pop
mov
test
pop
adc
out
jp
mov
push
aaa
mov
outs
add
mov
add
and
les
fcom
dec
xchg
sbb
and
outs
mov
ror
mov
or
or
fwait
mov
outs
dec
outs
sar
clc
loop
sbb
mov
int3
das
inc
aad
ja
in
imul
xlat
or
pop
mov
(bad)
dec
push
mov
sbb
and
xor
shr
adc
xchg
std
mov
pop
or
push
mov
push
cmp
mov
daa
fs
bound
cs
imul
inc
cdq
test
(bad)
xor
or
ss
and
mov
int
add
retf
mov
rol
mov
add
add
mov
push
ins
rcr
cld
rcl
scas
(bad)
xchg
and
mov
cwde
mov
loop
popf
cwde
bound
lds
imul
add
or
mov
or
cmp
int
and
in
fsub
arpl
fild
inc
mov
jecxz
cli
mov
scas
cdq
pop
data16
xor
pushf
or
arpl
sbb
fdivr
jmp
popa
mov
fst
imul
dec
and
sbb
sub
cwde
imul
push
sti
aaa
sar
sbb
mov
mov
jns
ins
mov
retf
jo
push
lahf
imul
mov
icebp
in
push
(bad)
xor
into
leave
clc
cld
or
sub
push
cmp
mov
jecxz
push
mov
push
outs
sub
push
fldenv
jecxz
scas
or
or
sbb
mov
mov
adc
sub
cld
mov
je
push
mov
and
(bad)
out
aad
xor
jge
xchg
push
mov
js
and
mov
xchg
cmps
cmp
adc
mov
stos
pusha
or
ret
aad
pop
cmp
mov
mov
xor
add
icebp
les
fs
(bad)
sbb
lds
mov
outs
sub
mov
aam
dec
pop
outs
mov
xchg
mov
fs
imul
addr16
pop
mov
sbb
int
rol
ins
dec
fs
cmp
fwait
cli
jp
cmp
cs
outs
jp
fimul
xchg
dec
in
dec
fisubr
out
cmp
dec
lea
mov
test
retf
(bad)
and
adc
cmp
pop
mov
cmp
jnp
rcl
aaa
mov
mov
out
stos
js
and
jecxz
jbe
xchg
and
jns
mov
inc
cdq
ins
and
push
inc
jg
and
loope
repz
xlat
mov
inc
repnz
mov
imul
pop
jae
push
xlat
sub
lahf
or
jmp
rcl
mov
xchg
or
push
dec
lock
inc
cmps
cmp
loope
push
pop
cmp
xchg
retf
jg
or
sbb
fdiv
sub
call
pop
pushf
dec
push
arpl
lods
mov
mov
je
xor
pop
dec
leave
loop
fimul
inc
sbb
xchg
dec
sbb
aam
in
mov
mov
cdq
sub
or
push
and
popa
or
int3
adc
adc
jle
mov
xor
outs
dec
jge
sub
jp
mov
mov
fmul
ins
pop
mov
push
cmp
push
xor
movs
jbe
add
icebp
pop
add
cdq
jnp
je
push
bound
or
push
cmc
dec
in
gs
les
push
xor
int
xchg
fild
hlt
repz
xchg
je
push
and
mov
repz
xchg
mov
pop
scas
lea
and
dec
retf
xchg
retf
add
int
in
lds
outs
adc
cmc
adc
jns
rcl
xlat
(bad)
mov
xchg
inc
ss
cld
sub
shl
jl
das
add
aaa
jmp
fisttp
push
mov
loopne
bound
and
mov
les
xchg
ret
mov
inc
addr16
rol
push
jns
enter
xchg
sti
jmp
and
and
pop
test
shl
fsubr
pop
push
stc
pushf
sub
int3
jno
cmp
(bad)
cmps
dec
sub
lahf
mov
movs
inc
push
clc
inc
sbb
cmp
je
jb
dec
std
aas
mov
stos
leave
stos
fild
leave
int
push
stos
mov
mov
leave
repnz
xchg
sbb
add
xchg
cs
sbb
ss
sbb
imul
lods
xor
inc
in
lock
add
push
xchg
jmp
(bad)
aas
loopne
ins
stc
pop
lea
pusha
jmp
icebp
jb
mov
sti
sahf
movs
ds
pop
int3
test
adc
test
add
push
call
lds
call
sbb
dec
jns
jge
adc
mov
gs
movs
pop
lahf
out
add
mov
hlt
mov
inc
and
dec
gs
(bad)
pop
xchg
push
es
je
pop
fstp
data16
(bad)
inc
out
cmps
inc
ins
add
dec
pop
daa
sbb
sbb
add
in
sbb
jbe
mov
aaa
dec
add
and
ds
inc
xchg
nop
shl
dec
mov
xchg
pop
xor
leave
jo
mov
fwait
mov
in
inc
addr16
adc
xchg
cmp
pop
popf
mov
dec
in
xchg
dec
mov
push
jl
popa
ins
push
repnz
js
dec
leave
(bad)
push
mov
mov
(bad)
mov
adc
jge
enter
ror
push
cmp
ins
dec
dec
or
push
sub
repnz
cmp
xchg
mov
mov
mov
push
mov
mov
(bad)
gs
xor
pop
pusha
xor
arpl
adc
cdq
ins
adc
sub
xor
xor
jae
push
ins
retf
ret
pop
fidivr
adc
in
fld
sbb
rcr
inc
push
int3
jmp
iret
in
mov
enter
(bad)
fidivr
mov
cld
shl
sub
cmps
xlat
dec
cmp
(bad)
cwde
add
xchg
push
(bad)
xor
ja
hlt
nop
aas
popf
dec
sbb
push
sub
fs
ins
pop
data16
jp
retf
xlat
jge
stos
js
inc
or
outs
xchg
js
push
xchg
int3
shr
sahf
inc
sti
xchg
jl
add
pop
aas
shl
imul
outs
jo
adc
dec
push
retf
test
xor
fisubr
inc
push
xchg
lods
fisubr
sub
cdq
mov
pop
adc
cmp
out
push
sbb
mov
in
ret
fcom
clc
jl
pop
je
inc
pop
push
mov
mov
nop
fmul
jmp
mov
addr16
mov
fs
cmp
sub
push
aam
inc
xchg
lods
push
jecxz
xchg
scas
imul
je
pop
dec
popf
xchg
pop
aam
cmp
add
add
mov
(bad)
pushf
ins
xchg
scas
cmp
gs
ror
pop
and
cwde
or
or
(bad)
inc
movs
jg
sti
sub
mov
sbb
inc
and
jne
das
dec
jecxz
ins
cmp
xchg
aad
dec
outs
adc
add
shr
jp
xor
push
fwait
arpl
enter
push
push
adc
add
inc
and
cmps
mov
es
jns
aaa
imul
imul
inc
int3
add
add
aad
push
add
rcr
cmp
int
inc
jmp
or
xchg
xchg
shr
idiv
test
loope
call
sbb
xor
jbe
cli
out
pop
inc
mov
dec
or
pushf
dec
mov
hlt
xor
inc
and
je
mov
(bad)
fcomi
test
mov
dec
cs
push
lock
adc
xor
test
push
dec
(bad)
jg
pushf
xlat
mov
or
inc
xor
add
jle
std
cmp
pop
stos
sub
sbb
sbb
out
pop
retf
mov
stos
scas
adc
mov
mov
punpckhbw
sbb
inc
mov
or
pop
mov
clc
pop
xor
jp
scas
nop
iret
push
sbb
pusha
lds
dec
push
jge
dec
cmp
inc
loop
pusha
mov
lock
add
fnstcw
cli
pop
(bad)
sar
mov
ret
sub
sbb
sbb
jp
ret
push
dec
xor
adc
adc
add
push
mov
movs
cmp
fs
adc
mov
inc
push
cli
out
imul
fdiv
jb
push
repz
push
outs
stos
sbb
mov
xchg
pop
pop
sub
push
jb
enter
add
mov
loop
push
cld
mov
(bad)
cmp
fisubr
push
push
sbb
cwde
dec
ds
add
mov
add
fs
pop
ret
mov
out
sub
ja
ins
dec
xchg
aam
imul
xchg
mov
dec
(bad)
ja
sub
cdq
das
jae
dec
aaa
mov
jmp
pop
ds
cli
retf
loop
stos
dec
sub
das
movs
(bad)
push
fsubr
pop
jb
xor
xchg
cdq
out
sbb
dec
mov
es
je
fwait
sub
push
cmp
mov
retf
jmp
inc
movs
xor
out
xor
xchg
cmp
xchg
adc
mov
ss
cmpxchg
jle
ss
or
imul
pushf
shl
mov
call
loopne
mov
bound
fcomi
aas
adc
rcr
hlt
std
adc
bound
sbb
mov
push
mov
adc
mov
dec
call
jl
or
out
ins
scas
push
and
xchg
retf
sub
or
push
mov
mov
sbb
mov
test
xchg
les
jo
jl
sbb
xchg
cdq
mov
xor
inc
ja
into
pusha
(bad)
jmp
add
fwait
push
adc
mov
pop
sub
mov
mov
mov
jnp
sbb
shl
(bad)
daa
popf
inc
ret
push
and
pop
push
out
sbb
cmps
or
pop
jmp
xchg
call
adc
xchg
xchg
mov
pusha
or
scas
pop
xchg
mov
mov
and
push
in
pop
mov
loop
loop
mov
stos
rcl
xchg
dec
jmp
lods
cdq
(bad)
or
mov
push
das
sbb
jp
push
dec
push
aam
mov
mov
cmp
jge
es
push
xchg
in
push
repnz
add
les
test
ds
mov
adc
stc
sbb
mov
sub
cmp
lock
push
dec
fst
cwde
imul
sar
mov
mov
and
fs
mov
inc
sahf
loop
jno
cmp
xchg
push
loop
mov
loopne
inc
bound
cmp
outs
jae
and
test
inc
push
push
mov
in
(bad)
outs
sub
xor
lock
mov
push
out
es
int
mov
and
bound
sti
enter
push
call
loopne
ret
in
bound
mov
lahf
jne
retf
popf
sbb
push
ins
repnz
ss
iret
retf
mov
xchg
mov
jne
cwde
aaa
add
adc
or
jnp
fmulp
inc
pop
dec
dec
clc
(bad)
es
in
cmc
daa
mov
add
adc
inc
add
xchg
mov
push
mov
mov
jnp
cmps
push
cmp
addr16
nop
mov
dec
imul
adc
test
adc
test
jge
iret
sar
popa
shr
cmc
(bad)
int
and
pop
xchg
ja
imul
fidivr
cld
repnz
mov
mov
xor
xor
out
pop
scas
out
(bad)
test
(bad)
lods
xchg
xchg
scas
adc
cwde
mov
ror
or
adc
outs
repz
adc
popa
xchg
add
and
or
xchg
mov
sbb
xchg
inc
sti
stos
mov
mov
adc
jmp
xchg
inc
in
mov
mov
inc
ds
lahf
in
into
hlt
cmps
cmp
out
call
gs
jo
mov
adc
and
repz
mov
jg
popf
outs
cdq
popf
imul
loopne
sub
xor
rol
loopne
fistp
add
stos
hlt
cwde
xor
out
(bad)
cmp
(bad)
pusha
fsub
aad
lea
sti
inc
daa
sbb
daa
push
fcmovnu
cmp
xchg
imul
je
stc
out
retf
mov
outs
push
popf
shl
xchg
popa
imul
cld
nop
and
mov
mov
sub
sti
in
nop
sbb
push
fs
cld
out
loop
mov
push
jle
repnz
sub
cld
adc
pop
sti
hlt
imul
sub
div
out
inc
push
pop
dec
fs
loop
icebp
out
dec
jecxz
inc
pop
or
out
push
mov
adc
hlt
aam
out
into
inc
adc
mov
stc
pop
ins
push
cmc
adc
jo
in
mov
mov
fisttp
lahf
test
scas
or
in
in
sbb
pusha
mov
add
ss
mov
je
lds
lahf
mov
fisttp
dec
jae
adc
xor
cld
mov
test
adc
xor
call
lahf
iret
xor
xchg
xchg
xor
repnz
dec
adc
adc
and
cmp
out
loope
jg
and
test
pop
cmp
xchg
aad
inc
inc
sbb
mov
out
pop
(bad)
xchg
(bad)
cld
push
sub
push
bound
popf
dec
(bad)
xchg
push
std
cmps
add
sub
push
pop
ja
ficom
jnp
popa
retf
lahf
repz
inc
loope
int
or
cmps
mov
xlat
fidiv
aad
stc
xchg
out
clc
inc
pop
sar
mov
int3
dec
div
je
xor
push
(bad)
loop
jnp
mov
and
adc
push
sar
iret
test
jg
sub
(bad)
mov
adc
or
mov
pop
clc
sub
dec
jo
inc
ror
out
push
inc
sub
fdiv
shl
shr
mov
test
add
retf
ja
jle
push
shl
hlt
inc
mov
and
lods
mov
(bad)
scas
add
add
pusha
pop
sbb
scas
(bad)
arpl
test
neg
test
mov
fsubr
xor
jns
aad
pop
ret
rol
mov
mov
sti
stos
xor
bound
mov
push
std
or
adc
push
dec
mov
pop
ja
ror
inc
pop
nop
push
lods
dec
out
into
outs
jge
out
popa
aad
int
iret
adc
cmp
rol
sar
outs
sub
outs
jb
push
call
cmps
fdivrp
pop
cmp
and
or
cmp
jb
pop
imul
mov
cdq
arpl
xlat
jb
movs
test
xor
jns
(bad)
inc
out
imul
mov
movs
lock
iret
pop
test
popf
out
xchg
pop
push
xchg
sti
sub
jl
imul
nop
jg
cmp
fst
sbb
mov
stos
and
mov
stos
or
push
jg
inc
sbb
or
out
pop
push
xchg
xchg
inc
sbb
aad
bound
xlat
mov
sbb
and
sub
pop
retf
icebp
shl
inc
ins
rcl
imul
scas
dec
inc
js
in
icebp
(bad)
and
sub
jl
adc
push
cmp
or
inc
clc
sbb
addr16
xor
cmp
or
cmp
jae
pop
aaa
mov
push
into
arpl
sub
fcom
popa
jo
push
mov
mov
(bad)
sti
add
(bad)
mov
dec
popf
movs
mov
bound
sbb
shr
or
pop
inc
adc
out
inc
mov
fs
pop
xchg
fdivr
daa
push
dec
xor
aaa
arpl
or
lds
sub
pop
adc
iret
stos
ds
add
dec
push
pop
mov
mov
jp
lock
in
leave
mov
lock
ja
in
inc
adc
dec
aaa
xchg
aad
adc
sahf
aad
rcl
mov
lds
mov
jle
dec
xchg
jg
(bad)
out
push
(bad)
jo
bound
ins
(bad)
pop
jge
sub
in
ret
mov
imul
shl
jbe
call
push
mov
jl
clc
fcmovbe
fcmovne
out
mov
cmc
push
in
jp
push
mov
xor
(bad)
loop
in
and
sbb
icebp
push
cmp
adc
inc
xchg
xchg
fidiv
cmp
mov
into
cs
ret
dec
jmp
or
xor
jle
(bad)
fdiv
add
jbe
xchg
ins
arpl
cmps
xchg
pop
cwde
cmp
dec
mov
iret
xor
or
and
and
pop
sbb
xchg
lods
repnz
stos
or
add
ret
mov
fild
sub
mov
dec
jae
pushf
add
ins
mov
fdivp
xchg
cdq
inc
sub
add
ret
cmp
loopne
sbb
adc
gs
jmp
aaa
out
pop
ss
fimul
nop
call
rcr
es
cmp
retf
lahf
je
adc
loop
pop
lahf
retf
bound
sbb
adc
loope
xor
fadd
fadd
js
(bad)
(bad)
xchg
int3
or
arpl
enter
test
sbb
gs
scas
inc
mov
pop
pop
rcr
into
popf
push
test
inc
mov
and
in
pusha
xor
fisubr
mov
stos
push
arpl
lea
inc
pop
cmp
pop
dec
sub
cdq
mov
cmp
and
popf
mov
dec
add
fsubr
jb
and
mov
ffree
or
arpl
jmp
sub
rol
sub
gs
dec
stos
add
into
in
fwait
cmps
fcom
cli
push
loope
mov
xchg
adc
xchg
jnp
stc
or
ja
retf
das
mov
push
pop
cmp
push
retf
push
aad
push
nop
cmp
sub
pushf
pop
rcr
scas
jmp
pop
aad
out
inc
dec
clc
clc
sub
cmps
and
xchg
ret
stos
je
cld
adc
jo
loop
fisubr
mov
jmp
sub
or
cmc
das
push
retf
movs
int3
or
and
mov
add
jmp
pop
jnp
je
fptan
or
mov
jnp
(bad)
(bad)
cmp
jl
cs
cmp
or
imul
sub
imul
fmul
cdq
mul
call
sbb
push
cmc
jp
popf
mov
stos
(bad)
cdq
ss
dec
jle
dec
push
hlt
fild
xchg
jae
std
test
pop
mov
sub
pop
fiadd
sbb
out
push
add
dec
push
xor
adc
cdq
add
in
push
and
ins
shl
dec
dec
push
(bad)
jne
and
pop
mov
push
cdq
jo
ds
jbe
outs
jne
lods
xor
adc
mov
ja
daa
stos
movs
xchg
leave
ficom
jae
out
add
sti
out
jns
mov
jp
inc
sbb
mov
inc
lds
mov
mov
adc
and
rcr
and
mov
pop
mov
mov
sbb
dec
dec
add
(bad)
adc
test
bound
cmps
pop
rol
js
inc
mov
das
(bad)
fmul
mov
push
mov
cmp
sahf
movs
sbb
dec
and
mov
pop
mov
sbb
or
fstp
out
adc
mov
and
ret
and
cmc
add
adc
xor
pusha
outs
stos
mov
aam
jp
mov
fs
pavgw
movs
push
lds
adc
sub
pop
xchg
sbb
cmps
fldenv
fstp
fwait
cmp
jne
aas
mov
dec
pop
add
and
jmp
pop
cmc
adc
dec
(bad)
scas
retf
mov
xchg
mov
out
cmc
push
mov
inc
ins
in
pusha
sbb
jl
lahf
jb
call
xchg
outs
dec
fs
shl
jp
inc
cmps
jae
mov
nop
or
dec
retf
jge
sbb
push
sti
and
jl
mov
mov
ret
add
fnstsw
daa
pop
xor
arpl
fst
adc
sbb
mov
fld
in
pop
(bad)
fbstp
ror
or
push
mov
test
(bad)
sub
rol
pop
cmp
jbe
pop
stc
cld
js
sub
mov
into
mov
sbb
xchg
test
mov
lahf
xor
dec
xchg
mov
outs
arpl
int3
enter
mov
cli
shl
inc
adc
pop
mov
test
lahf
and
add
test
repz
prefetcht0
shr
cs
out
pop
je
(bad)
aad
cmp
(bad)
loopne
or
and
jp
add
sar
mov
and
dec
fwait
out
mov
xlat
call
and
or
jmp
xor
icebp
dec
and
stos
rcl
cwde
or
or
jae
(bad)
add
mov
dec
retf
push
(bad)
idiv
mov
mov
fcom
out
or
xor
fld
lea
jmp
push
cwde
inc
add
mov
retf
adc
retf
add
lock
cmp
xchg
(bad)
out
scas
int3
adc
cmp
add
adc
ror
or
aaa
xor
scas
mov
mov
and
dec
cmps
rol
fst
ret
mov
add
mov
fadd
outs
ret
xchg
push
adc
icebp
adc
cld
push
jg
nop
push
jl
imul
xchg
and
fsubp
les
ds
(bad)
cld
popa
sbb
std
mov
mov
jmp
outs
data16
inc
pop
arpl
outs
hlt
add
jge
js
lea
mov
jmp
ror
fadd
test
or
xchg
int
xchg
stos
mov
jge
and
fiadd
stos
and
or
lods
syscall
outs
mov
dec
addr16
adc
mov
das
xor
xchg
and
(bad)
icebp
test
fbld
cli
in
test
xchg
and
popf
cld
mov
cmp
mov
jae
jbe
adc
jo
inc
int
repz
jle
sub
mov
cli
sub
jae
xchg
xchg
rcr
call
fisubr
movs
xchg
in
js
je
cmp
mov
add
and
mov
lea
ror
(bad)
popa
and
stos
dec
popa
bound
cmp
(bad)
cmps
xlat
lea
repnz
leave
inc
test
push
ret
xchg
outs
ficom
xor
movs
adc
sub
mov
pop
pop
mov
scas
cmp
mov
mov
outs
jo
stc
push
pop
ins
ds
(bad)
out
retf
and
cs
arpl
mov
int3
inc
and
shr
cmc
or
add
add
lock
jecxz
mov
mov
mul
gs
mov
mov
outs
leave
mov
push
mov
and
cwde
mov
into
pushf
fcom
push
fidivr
mov
mov
inc
mov
xchg
cmp
in
xor
sub
adc
and
mov
test
aam
jg
pop
sub
div
jb
xor
pop
(bad)
out
xor
loop
fimul
adc
push
int3
cwde
stos
inc
vmovlpd
je
ins
sub
int
stos
push
aaa
pop
dec
mov
jbe
jne
xor
loope
inc
jl
xchg
cmp
cmp
das
mov
das
orps
stc
xchg
dec
and
and
sub
sub
mov
add
xchg
je
dec
enter
mov
push
mov
and
aam
sahf
fdiv
into
enter
jp
mov
cdq
test
xchg
push
add
enter
adc
pop
mov
sbb
adc
inc
retf
mov
cmps
int
xor
adc
jle
data16
adc
imul
push
jbe
jmp
leave
stc
lahf
popa
push
jle
cmps
mov
loope
mov
jg
jne
lahf
out
mov
imul
cli
and
jnp
jbe
push
nop
sbb
je
dec
push
sub
ds
in
xor
dec
mov
mov
adc
je
xchg
icebp
outs
cmc
fistp
stos
push
mov
cmps
(bad)
out
or
jo
call
fldenv
dec
mov
in
push
xchg
xchg
push
neg
clc
xor
inc
test
or
jmp
aaa
push
sub
xor
addr16
xor
xchg
or
(bad)
mov
sub
div
nop
hlt
sub
pop
cld
sti
lds
pop
xor
shl
cmp
cmp
not
loope
stc
xchg
push
mov
pop
sbb
iret
movs
(bad)
shl
aaa
fstp
ficom
out
outs
das
xchg
int3
not
repnz
imul
or
call
sbb
in
mov
pop
dec
or
movs
je
jp
adc
push
ds
retf
mov
pop
xchg
or
jne
pop
dec
in
adc
mov
dec
pusha
xchg
in
into
pop
sbb
mov
sbb
pusha
cli
jmp
pop
mov
lds
cmp
(bad)
(bad)
cld
xchg
aaa
push
inc
daa
or
cli
rol
hlt
out
lea
jbe
cli
div
inc
adc
movs
adc
mov
xor
ret
icebp
mov
inc
mov
push
cmps
and
loope
sub
pusha
xchg
mov
jne
es
loop
sbb
or
(bad)
lock
jle
cmc
push
sbb
sbb
ror
push
and
push
adc
mov
retf
call
mov
xchg
icebp
jae
add
adc
xor
ret
dec
cmp
gs
and
inc
jno
sub
pusha
mov
inc
inc
pop
mov
push
popf
ins
aaa
inc
xchg
cld
icebp
repnz
cmp
mov
cmc
dec
xchg
lock
rcl
icebp
jo
sbb
sti
hlt
sti
aad
pusha
jmp
jle
ss
int
dec
push
aam
repz
out
add
in
daa
and
cmc
pop
ret
es
push
out
or
rcl
retf
jno
imul
retf
push
add
adc
pop
push
out
jl
jnp
mov
jmp
in
mov
(bad)
out
inc
pop
or
sub
jae
out
arpl
or
jae
jb
mov
shl
dec
mov
movs
aam
xchg
std
mov
nop
data16
push
dec
jp
call
adc
cdq
push
xchg
fs
scas
xor
je
ins
rcl
inc
inc
mov
in
or
sub
inc
mov
sbb
mov
in
(bad)
jl
or
mov
jbe
hlt
in
xchg
mov
xor
dec
mov
mov
or
push
mov
adc
sub
mov
lods
stos
jp
mov
push
jle
dec
(bad)
dec
stos
push
in
clc
(bad)
adc
or
jmp
call
xchg
out
in
or
push
fisub
aaa
jmp
mov
ins
sbb
xor
mov
sbb
adc
out
mov
dec
ret
push
loope
xor
jl
movs
sub
mov
cmp
lahf
push
pop
mov
fnstcw
movs
jp
mov
das
loope
cmps
imul
call
lahf
adc
loope
and
and
adc
loopne
jnp
ds
cmp
iret
(bad)
cmps
xor
icebp
pinsrw
dec
or
fnstcw
mov
or
or
ins
mov
cld
scas
mov
add
aas
(bad)
mov
(bad)
div
inc
jge
sbb
pop
ret
ja
aam
(bad)
bound
jp
mov
imul
mov
jg
xor
lods
ret
js
jo
push
cmp
cmp
mov
fldcw
call
add
ja
mov
scas
adc
xor
movs
gs
jg
mov
sub
fldcw
sar
(bad)
mov
pop
loop
imul
adc
mov
mov
mov
mov
jle
adc
xlat
mov
and
ss
adc
aad
dec
stc
mov
xchg
inc
ins
sub
pushf
pop
cmp
lahf
leave
xchg
jbe
pop
leave
adc
nop
shl
mov
jne
int3
leave
in
cmp
jne
mov
shl
inc
lods
std
dec
fstp
inc
mov
pop
scas
mov
enter
pop
and
push
inc
outs
cmp
sub
xlat
fistp
leave
nop
xor
clc
adc
push
cdq
push
mov
mov
mov
adc
aam
ss
add
arpl
(bad)
int3
scas
sbb
jnp
lods
cli
cdq
and
jne
mov
jne
and
jmp
xor
push
and
jnp
mov
movs
lods
dec
int
jns
test
mov
fnstenv
and
mov
or
pushf
outs
imul
inc
ret
push
repz
add
pop
pusha
add
pop
sub
dec
js
mov
imul
into
xor
jp
outs
push
xchg
jecxz
loope
xlat
ja
mov
gs
cwde
sbb
test
cmp
lock
pop
scas
add
cmp
loope
inc
add
xchg
mov
out
test
jle
lods
loopne
fs
shl
and
ins
test
(bad)
pop
out
adc
not
scas
jmp
icebp
and
xor
push
xlat
and
je
cmp
pop
in
scas
add
sub
add
inc
pop
pop
mov
push
jno
jo
mov
es
add
dec
in
xor
pop
in
xchg
dec
mov
cwde
sub
cwde
push
mov
mov
lds
inc
or
popa
std
mov
icebp
cwde
in
std
adc
jo
mov
daa
sbb
fsubr
push
and
dec
sbb
xor
cmps
sbb
and
lods
xor
test
push
or
mov
or
push
stc
clc
in
cmp
fdiv
arpl
sub
pop
pop
sahf
xor
inc
leave
fimul
pop
je
enter
sub
push
mov
jmp
push
retf
fmulp
test
cmp
xlat
mov
push
dec
fs
cmp
imul
sub
dec
cld
jns
in
ins
dec
or
cdq
xchg
mov
fsub
arpl
jae
jne
(bad)
pop
rol
lahf
das
out
movs
jmp
sbb
cdq
jns
adc
call
imul
cmp
inc
push
adc
imul
sub
cmps
adc
xchg
sub
aas
xchg
mov
push
and
ret
icebp
in
mov
in
rcr
ret
sbb
xchg
outs
or
mov
(bad)
xor
jmp
inc
arpl
test
cdq
cmp
inc
std
popf
fsub
pop
pop
call
and
cmp
cmp
mov
int3
es
xchg
(bad)
stos
sar
mul
jmp
add
cmp
jno
dec
fwait
rol
in
(bad)
add
lea
push
clc
pop
fwait
(bad)
xlat
xchg
neg
push
les
xlat
inc
ja
push
dec
(bad)
xchg
(bad)
jmp
xchg
scas
(bad)
nop
jecxz
out
inc
es
imul
(bad)
stc
inc
or
sbb
cmps
lods
(bad)
cmp
lock
ret
jmp
inc
xor
fmul
adc
sbb
inc
js
add
push
or
jecxz
pop
(bad)
aaa
push
jp
inc
loop
or
cmp
movs
adc
dec
mov
sub
fisttp
loope
call
rcl
mov
int3
mov
xchg
push
jbe
ins
dec
std
and
cwde
fwait
mov
xchg
xor
ja
jl
jecxz
cli
ret
jl
loop
ja
inc
mov
or
int3
sbb
xchg
cmp
cdq
push
fnstenv
jnp
movzx
or
fs
jecxz
dec
ret
and
adc
mov
inc
in
mov
or
arpl
test
jmp
xchg
fst
cmp
leave
mov
shl
(bad)
mov
cmp
sbb
jl
pop
push
xchg
push
adc
push
inc
add
aas
repz
mov
retf
test
ins
repz
pop
mov
cwde
hlt
bound
jne
and
cdq
sub
and
fisttp
pop
mov
jnp
mov
sub
(bad)
pop
inc
in
lahf
imul
mov
ja
xchg
loopne
sub
adc
ins
aam
push
sbb
dec
adc
(bad)
int3
push
std
imul
push
lods
mov
add
mov
adc
mov
loope
jae
in
push
add
xor
xchg
hlt
leave
adc
pop
adc
ret
sahf
push
ret
or
cmp
add
dec
pop
add
pop
nop
sbb
cdq
push
retf
inc
cmp
sahf
or
adc
adc
add
push
ins
and
(bad)
push
mov
pushf
out
in
sbb
mov
adc
mov
pop
mov
jno
aaa
icebp
jo
repnz
test
in
arpl
movups
sub
sbb
lahf
pop
fst
(bad)
or
out
mov
push
jle
sbb
icebp
pop
ds
aam
int
pop
adc
push
push
adc
(bad)
repnz
mov
sbb
ret
pop
cmps
adc
pop
iret
ins
fstp
inc
xor
daa
jbe
out
push
jp
in
sbb
scas
adc
iret
gs
ins
mov
(bad)
out
mov
fist
lods
(bad)
movs
stos
cmp
jb
jmp
dec
ss
inc
repnz
out
in
cmp
icebp
je
mov
mov
scas
pop
mov
xor
ficom
push
pop
fstp
jp
mov
add
dec
push
fld
lock
add
repz
sbb
and
hlt
stos
cli
iret
shr
sar
sbb
pmaxub
mov
fistp
int3
jmp
inc
jmp
lds
cmp
bound
mov
xor
ja
sbb
jle
dec
(bad)
mov
cmc
inc
xchg
aaa
cmps
jmp
mov
mov
dec
xor
and
pop
adc
cmp
sbb
xchg
stc
xchg
or
dec
mov
jp
adc
pop
jne
jge
daa
jae
dec
ins
adc
adc
jg
mov
mov
sbb
push
cmp
int3
cmp
fsubr
imul
mov
out
push
push
js
inc
mov
(bad)
and
or
add
push
pop
div
in
int
outs
pusha
jge
gs
push
push
sar
out
(bad)
loopne
mov
jge
mov
inc
aaa
stc
dec
ror
hlt
(bad)
cli
dec
lods
adc
mov
fld
addr16
outs
loopne
arpl
(bad)
jno
aaa
fisttp
cmp
rcl
inc
mov
daa
in
ja
xor
inc
fidivr
sbb
sbb
sbb
cld
push
ja
pusha
es
push
cmp
fwait
mov
enter
lods
xchg
dec
(bad)
(bad)
enter
jecxz
mov
mov
lea
pop
test
(bad)
sub
fcom
xchg
add
cmp
rcr
popf
cwde
(bad)
push
xchg
add
stos
out
fadd
pusha
fdivr
fwait
dec
mul
add
ret
or
xor
xchg
pop
xor
push
(bad)
idiv
inc
inc
dec
pop
int
(bad)
jge
jae
out
xchg
fsubr
cmp
scas
(bad)
adc
pop
out
fdiv
shr
pop
call
movs
push
stc
dec
sahf
lea
sbb
jmp
clc
repz
sbb
les
xchg
std
cmp
or
scas
call
xchg
jne
or
icebp
fmul
xchg
lea
mov
mov
inc
out
mov
cwde
scas
xor
xor
imul
mov
inc
jg
mov
sbb
icebp
int
or
pop
add
lods
fcmove
mov
sti
xchg
cmp
lods
mov
das
scas
mov
xchg
cmc
xor
gs
dec
sub
push
outs
and
push
ror
test
test
mov
or
inc
push
add
ss
mov
mov
xchg
push
xor
dec
jp
enter
adc
adc
and
(bad)
push
mov
adc
xchg
in
icebp
bound
and
cmps
jne
sti
mov
xchg
xchg
jge
adc
mov
aam
sbb
mov
scas
jge
pop
sbb
lahf
pop
fdivr
lds
out
push
jl
pusha
jbe
jl
adc
add
fstp
xlat
loop
push
xchg
mov
out
pop
fdiv
movs
fcomp
lods
jge
adc
mov
mov
adc
jae
test
or
jne
in
sti
iret
cld
in
push
ins
jl
add
inc
mov
mov
aam
sbb
mov
rcl
rol
push
jg
xchg
fistp
mov
xchg
cmp
mov
fcom
cmp
das
aas
imul
xchg
clc
push
pop
cmp
dec
stos
dec
adc
loopne
leave
lods
movs
int3
inc
lea
(bad)
popa
fild
retf
call
pop
dec
addr16
aad
hlt
ficom
adc
inc
aam
pop
dec
adc
xchg
cmp
enter
int3
adc
int
push
sub
xor
lea
dec
jnp
pushf
jmp
das
inc
nop
inc
jo
sub
cmps
xchg
xchg
push
push
cmp
inc
add
push
pop
mov
cmp
imul
cmc
out
jo
mov
mov
icebp
dec
popf
inc
aaa
jbe
into
bound
mov
pop
adc
(bad)
xlat
sub
add
dec
xchg
pop
repz
pop
in
retf
jp
test
jne
(bad)
jge
call
bound
mov
repnz
mov
in
mov
push
fsub
xor
mov
popf
ror
lea
push
push
pop
jmp
ror
arpl
add
mov
call
xchg
fucomp
sub
or
sbb
movs
dec
and
inc
pop
xlat
loop
scas
mov
mov
ins
mov
(bad)
or
sbb
pushf
and
clc
in
sbb
inc
shr
adc
mov
add
mov
call
ficomp
inc
mov
popa
sysret
add
sub
bound
fwait
push
inc
adc
jo
(bad)
mov
jae
out
push
out
adc
ins
mov
inc
mov
mov
retf
xor
xchg
pop
push
push
or
out
push
or
imul
cmp
dec
cld
push
shl
mov
jge
mov
fiadd
xchg
loopne
js
jne
inc
es
jnp
retf
loopne
xchg
cmp
jle
push
out
imul
cmp
inc
sahf
sbb
push
mov
ja
or
add
mov
je
push
adc
dec
rol
imul
push
rcr
in
xchg
push
enter
xor
lea
inc
add
mov
dec
cmp
test
das
cmps
sbb
fwait
push
dec
test
cmps
out
stos
sbb
pop
mov
push
stc
scas
ins
mov
pop
leave
movs
sbb
push
jo
ins
sub
icebp
ret
xchg
arpl
enter
mov
jmp
xor
iret
pusha
idiv
push
or
adc
pop
jecxz
add
push
and
ja
jbe
add
mov
adc
dec
mov
mov
fwait
loopne
pop
inc
mov
adc
xor
dec
lods
jecxz
imul
mov
inc
int
int3
sub
cmp
ffreep
jno
cmp
mov
xor
or
pushaw
or
in
pop
ins
inc
xchg
out
add
sub
popa
stos
inc
cmps
imul
(bad)
fstp
push
sbb
pop
arpl
xor
or
mov
aad
imul
mov
pop
jae
pop
jmp
icebp
jp
jnp
fwait
dec
loop
jo
loop
aam
mov
or
repnz
daa
outs
adc
into
ss
es
mov
sbb
mov
aad
mov
outs
hlt
test
jb
fistp
inc
lahf
jge
fistp
adc
push
clc
push
or
test
movs
add
repnz
lods
popa
mov
mov
in
add
dec
pusha
fsubr
dec
ins
xor
mov
xchg
hlt
lea
or
jo
arpl
pop
mov
enter
call
and
fidivr
mov
or
in
nop
jp
add
stc
cmps
hlt
dec
popf
adc
mov
xor
scas
jecxz
push
outs
push
stos
dec
fcomp
mov
lock
mov
in
sub
push
cmc
mov
movs
sbb
mov
xchg
call
shl
cmp
sar
hlt
mov
cmp
outs
push
je
movs
dec
cmp
add
and
movs
adc
daa
call
push
fadd
retf
jmp
outs
shl
fst
out
dec
cmc
sbb
iret
ins
inc
cmp
xor
bound
push
ds
cmc
(bad)
and
push
sub
das
retf
and
push
cmp
pop
cmp
repz
mov
loopne
ins
je
fninit
mov
loopne
inc
mov
sub
int3
lods
fldcw
scas
rol
leave
sub
leave
cmp
sbb
inc
xor
ins
leave
das
bnd
adc
cs
ss
ja
pop
cmp
fdivr
mov
jns
rol
cli
xchg
inc
cmps
test
push
pop
movs
(bad)
lods
in
mov
add
mov
mov
sar
add
xchg
loope
ss
push
loopne
mov
sti
movs
jo
mov
fsubr
into
pushf
into
mov
sti
add
cs
out
bound
dec
push
lods
cmp
retf
and
hlt
push
mov
and
iret
pusha
or
outs
pop
inc
fisttp
xor
xchg
imul
mov
add
add
sub
ins
(bad)
cmps
into
cs
push
loope
dec
cwde
cmp
loopne
sub
outs
xchg
xor
js
loopne
add
scas
mov
mov
push
movs
ret
call
dec
mov
sbb
sub
jle
push
cmps
sbb
xchg
pop
cmps
div
fldlg2
mov
adc
jmp
sub
ror
(bad)
mov
push
(bad)
dec
push
or
cmp
add
out
iret
mov
mov
popf
mov
xchg
hlt
in
sub
or
fdiv
and
sub
cmp
mov
jge
cmc
dec
jmp
dec
and
jbe
in
or
or
sbb
xchg
mov
jb
retf
mov
mov
out
sub
xchg
iret
(bad)
movs
movs
dec
lahf
sar
dec
mov
leave
les
test
das
sub
pop
ror
push
test
into
leave
div
xchg
pop
stos
xor
dec
stc
nop
ins
push
and
mov
xor
add
inc
test
pop
out
aad
dec
(bad)
std
dec
inc
and
(bad)
cmp
dec
adc
jno
loope
(bad)
aas
xor
sbb
mov
retf
ins
inc
jmp
sti
call
push
pop
cmps
aam
iret
fld
int
(bad)
and
movs
inc
dec
or
mov
pop
cld
mov
fiadd
pop
dec
add
push
rcl
jl
sub
dec
mov
pop
fdivr
sbb
(bad)
adc
cmp
dec
jnp
and
jns
mov
rcr
xor
dec
retf
mov
out
ins
xchg
jl
(bad)
int
mov
pusha
ror
sbb
ds
call
mov
test
stc
arpl
nop
or
pop
inc
mov
jmp
xor
out
and
les
push
outs
mov
std
sub
jle
xor
out
daa
popf
jae
xchg
pushw
adc
add
mov
pop
rol
cdq
inc
fs
add
(bad)
push
not
int
fld
push
push
mov
hlt
pop
call
fwait
(bad)
loop
aam
mov
nop
leave
setl
imul
cmps
out
jno
fisttp
sbb
cmps
and
mov
dec
std
jb
mov
icebp
pushf
dec
pusha
dec
inc
iret
ror
ja
call
leave
icebp
pop
int3
ret
add
shl
out
fucomip
sbb
adc
das
push
fst
pop
jp
(bad)
div
jecxz
ins
clc
sti
rcr
mov
popf
sbb
inc
sbb
add
test
jb
push
pushf
nop
add
cmc
rcl
test
lods
fcomi
out
sub
test
mov
xor
or
cmps
out
sahf
loope
sbb
mov
in
lock
aas
and
scas
and
push
cs
mov
pushf
add
push
inc
test
shl
add
mov
jnp
pop
sbb
shr
jns
sub
scas
inc
push
mov
adc
clc
daa
sub
fst
inc
es
mov
push
retf
mov
ror
retf
xor
test
mov
pop
xchg
pushf
inc
aas
mov
nop
xlat
or
inc
addr16
push
sbb
or
ror
xchg
jmp
(bad)
dec
lahf
inc
cdq
xchg
pop
inc
iret
data16
outs
add
sbb
das
mov
and
mov
loop
mov
pushf
mov
push
pushw
sub
daa
inc
push
jne
cmp
mov
mov
addr16
cdq
sbb
dec
scas
ret
jo
lods
sbb
stc
fnsave
xor
mov
dec
add
pushf
test
cwde
push
xor
mov
adc
popf
push
movhps
add
js
or
pop
add
mov
ror
jb
test
int3
push
mov
loopne
fsub
jb
(bad)
xor
clc
inc
in
les
pop
js
push
sbb
pop
xchg
lock
add
cmp
xor
cdq
push
push
jnp
pop
ins
mov
mov
jge
adc
pop
rcr
in
test
and
push
xchg
scas
xchg
cmp
or
push
test
inc
dec
inc
adc
pop
inc
jbe
sbb
popa
aam
jae
test
sbb
cmp
into
sub
pop
call
out
ss
in
push
push
jp
arpl
enter
inc
stos
cmps
ds
fwait
dec
(bad)
jp
(bad)
mov
pushf
and
xchg
or
(bad)
lock
out
loopne
mov
add
sub
add
xor
mov
aad
jmp
test
xchg
out
outs
dec
shl
rcr
out
lahf
mov
push
push
lds
fstp
add
mov
jo
push
outs
or
sti
cvtpi2ps
int
and
and
movs
out
and
outs
stc
mov
retf
cmps
mov
gs
fdivr
cmp
outs
mov
shl
and
and
mov
jae
jle
data16
test
hlt
xlat
or
xchg
stos
enter
cmp
into
int3
sub
inc
cmp
mov
and
call
in
xor
jae
pop
pop
fwait
pop
(bad)
mov
pushf
bound
cmps
lods
xor
dec
cld
cmp
cli
imul
(bad)
adc
popf
push
inc
sbb
dec
imul
jbe
sub
dec
mov
test
xchg
stos
dec
in
mov
inc
es
or
pop
shr
xchg
cwde
stos
(bad)
mov
mov
popf
inc
pop
fs
and
es
test
ja
sbb
in
and
imul
add
fcmovnu
sub
sbb
add
mov
fistp
jo
mov
mov
mov
mov
pop
es
movs
mov
and
out
lds
loope
fisubr
sbb
xchg
push
mov
jbe
repz
mov
scas
mov
inc
and
jecxz
stos
inc
(bad)
daa
jbe
pusha
ror
mov
or
inc
cmp
mov
cmp
jp
pusha
lods
inc
mul
jo
call
mov
aas
sar
jecxz
adc
add
movs
mov
hlt
inc
jmp
clc
push
fistp
loope
mov
fbstp
out
sub
das
mov
jbe
ss
daa
push
cdq
cwde
dec
movs
repnz
cmps
cwde
mov
repnz
test
cmps
outs
les
popa
(bad)
sbb
inc
imul
fcom
jno
xchg
movs
icebp
fstp
nop
xor
test
(bad)
xchg
push
mov
sub
(bad)
jge
jl
in
push
or
jp
mov
shl
add
sbb
in
cmps
pop
pop
jmp
jmp
hlt
cdq
jecxz
mov
push
mov
mov
imul
retf
push
mov
movs
xor
ret
in
int3
and
fs
je
jno
out
(bad)
out
loopne
sbb
mov
mov
js
dec
xchg
retf
pop
xchg
aad
gs
ins
mov
neg
test
and
jl
jns
xlat
test
les
adc
and
call
pop
outs
hlt
adc
mov
dec
(bad)
dec
pop
xchg
mov
retf
outs
xchg
add
(bad)
or
sub
jecxz
dec
cli
cmp
mov
stos
sbb
jle
mul
(bad)
aas
outs
sbb
mov
sub
into
cmp
pop
or
inc
xor
jmp
xchg
mov
add
sbb
les
dec
ds
int
pop
outs
push
test
pop
push
inc
cmp
push
mov
dec
or
inc
rcl
test
repz
out
fisttp
fcmovne
paddusw
cs
push
sub
aas
jno
imul
mov
mov
mov
pop
iret
into
dec
add
jl
mov
pop
or
repz
jmp
push
cli
sub
mov
mov
inc
and
xlat
sbb
mov
pop
popa
mov
mov
jne
imul
shl
lods
fdiv
mov
fwait
(bad)
fidiv
inc
cli
frstor
add
xlat
outs
frstor
dec
ss
fidiv
and
popa
dec
push
inc
movs
cmp
inc
dec
mov
pop
xor
cmp
ficom
movs
clc
repz
ins
arpl
pop
stc
bound
mov
push
out
or
(bad)
faddp
(bad)
jmp
adc
iret
int
or
inc
mov
movsx
cmc
lods
leave
mov
xor
dec
jbe
movs
xor
xchg
push
add
cmp
pusha
fimul
sbb
cmps
(bad)
out
or
dec
div
aaa
ret
or
js
mov
(bad)
push
pusha
aas
cdq
call
cmps
fistp
jo
fdivr
jle
jnp
add
(bad)
xchg
cmp
call
add
nop
aad
pavgb
jne
jmp
or
add
cwde
mov
push
mov
push
jp
aad
ins
call
retf
cli
push
int
add
movs
mov
sbb
xchg
pusha
adc
clc
(bad)
bswap
cdq
pmulhuw
movs
jb
cmp
call
(bad)
enter
sub
ins
dec
cli
shl
leave
cmp
or
call
xor
pop
and
sub
lahf
inc
not
push
dec
rol
push
xchg
pop
xor
int3
ret
nop
scas
loopne
mov
xchg
push
movs
ins
mov
aad
mov
sti
mov
shl
out
arpl
push
retf
icebp
or
ds
dec
cld
out
jns
scas
inc
cwde
add
mov
xor
push
lock
cdq
push
adc
mov
mov
inc
ret
pop
cmp
call
xchg
rcr
popf
rcl
mov
arpl
test
or
retf
mov
and
aam
mov
dec
sbb
retf
iret
xor
dec
fs
mov
in
xor
jecxz
iret
push
adc
adc
add
xor
push
test
mov
sahf
push
xor
aam
and
(bad)
mov
push
inc
repz
or
jne
xor
inc
test
aam
mov
sbb
imul
mov
lahf
cli
aaa
and
std
gs
push
mov
stos
adc
cli
add
jg
es
add
clc
push
pusha
mov
cld
rol
mov
(bad)
outs
aaa
inc
mov
icebp
push
fcom
in
es
fisubr
imul
mov
push
repz
fsub
in
jmp
jmp
jmp
lea
jmp
stos
scas
mov
scas
cmp
iret
loop
pop
inc
xchg
mov
add
sub
jnp
xor
or
sar
or
cmc
pop
inc
push
pop
loop
sbb
stos
or
in
xchg
jl
or
mov
ds
pop
cmc
leave
lods
scas
or
and
fimul
push
sub
ret
and
out
call
adc
and
xchg
mov
retf
xchg
arpl
aam
aas
idiv
mov
push
dec
das
push
mov
cld
mov
adc
push
push
dec
xchg
xor
mov
jle
outs
cmps
aad
ficomp
je
pop
dec
mov
jae
or
shr
push
push
aam
sub
loopne
mov
test
push
or
fiadd
ss
pop
stc
or
mov
cmp
int3
pop
and
stos
(bad)
stos
pop
jae
neg
mov
mov
mov
and
clc
(bad)
loope
scas
pusha
outs
out
xor
fdiv
xchg
data16
pop
jp
xor
dec
pop
add
pop
lahf
mov
pop
es
adc
shl
pop
std
in
(bad)
dec
mov
inc
jb
nop
add
enter
vpshufhw
loop
sahf
aad
cmc
fxtract
in
scas
(bad)
mov
xchg
sub
push
rol
or
sbb
jecxz
mov
pop
cmp
movs
xlat
dec
xor
dec
push
adc
aaa
adc
js
je
and
add
or
inc
test
jbe
or
pop
shl
sbb
adc
inc
in
cmp
jns
test
add
(bad)
cld
aam
test
and
mov
int3
pusha
sbb
push
adc
pop
pop
pop
out
inc
and
(bad)
sbb
jg
push
fwait
jns
pop
neg
cmp
fldcw
dec
push
in
jnp
bound
add
dec
jne
jae
inc
or
std
push
in
repz
mov
push
mov
lahf
adc
inc
add
jge
jae
push
mov
or
rol
adc
add
jle
loop
ficom
sbb
cdq
les
rcl
cmp
(bad)
aas
and
stos
scas
mov
in
inc
cmps
stos
arpl
mov
std
aaa
xchg
adc
mov
aad
ss
xchg
jbe
idiv
jns
fdivr
or
xor
popa
loopne
pop
js
call
mov
enter
addr16
xor
lods
or
scas
jle
hlt
sbb
mov
xchg
clc
push
(bad)
inc
sub
loop
sbb
xor
outs
shr
sub
fwait
mov
or
bound
add
dec
pop
mov
mov
out
mov
pop
mov
out
fbld
cmp
sbb
jmp
scas
shr
pop
fisub
pop
ror
lds
cmp
pop
add
jl
in
pop
pop
adc
dec
(bad)
ins
icebp
and
jl
imul
jb
aad
or
xchg
xlat
icebp
sub
pushf
dec
popf
mov
push
test
fimul
mov
enter
rcl
test
movs
xor
sub
outs
dec
xor
ds
(bad)
jl
idiv
iret
shr
mov
cmp
mov
shr
pop
mov
adc
or
(bad)
cdq
test
dec
push
or
mov
mov
out
imul
test
dec
add
jae
push
jp
fwait
cwde
(bad)
in
dec
ja
add
enter
ret
cs
adc
std
push
out
dec
dec
popa
push
xchg
jns
test
add
pop
shl
jb
ins
sub
(bad)
sub
nop
adc
sbb
xchg
xchg
pop
aaa
push
jmp
mov
adc
in
mov
xor
cmp
popa
push
dec
jge
adc
adc
jns
sub
cld
imul
push
lahf
sbb
dec
clc
movs
sub
sti
push
sti
jb
(bad)
jns
jno
adc
les
test
out
xor
and
cmp
and
sbb
jae
jmp
sbb
xchg
ficomp
xchg
push
jbe
sbb
out
and
push
pop
idiv
mov
mov
push
das
(bad)
cmp
pop
mov
in
push
pop
mov
cmc
in
cmp
sub
adc
in
xor
in
sbb
mov
inc
lock
lods
and
stos
xchg
out
push
xchg
xchg
lock
inc
out
and
cmp
sub
pop
scas
mov
ficom
add
jne
sub
fidivr
pop
xor
mov
inc
cmp
imul
pop
fwait
xor
lds
aam
dec
nop
xor
shl
pushf
lods
cmps
inc
xor
icebp
add
jno
outs
pop
sbb
mov
lea
add
rol
mov
es
and
or
mov
stc
push
test
mov
lods
add
frstor
or
sbb
in
aam
inc
mov
out
popa
stc
or
fiadd
out
jge
sbb
inc
fadd
xchg
popf
retf
sub
mov
mov
jl
call
rcl
imul
add
aad
inc
lock
push
inc
inc
cmp
xor
push
push
imul
loop
adc
fwait
pop
(bad)
clc
mov
nop
pop
push
fadd
and
sti
push
out
ins
inc
pop
pushf
sti
(bad)
cmp
mov
dec
mov
push
int3
stc
xchg
push
pusha
test
push
in
imul
(bad)
rcl
rol
ss
ds
mov
pop
clc
dec
out
or
in
sbb
sbb
dec
jp
sti
inc
dec
cdq
jmp
sub
mov
push
xchg
dec
mov
push
retf
xor
out
mov
in
jmp
mov
jo
je
jle
and
es
ins
popa
jne
retf
cmc
push
fisttp
dec
data16
pop
cmc
xor
jmp
jbe
push
fistp
push
test
mov
iret
push
jle
outs
adc
jmp
jne
mov
xlat
inc
and
mov
ds
in
gs
add
mov
and
test
mov
xlat
push
inc
aad
inc
mov
aaa
mov
imul
outs
adc
sahf
(bad)
adc
sahf
mov
pusha
sahf
data16
cdq
in
loope
sub
icebp
sbb
pop
mov
push
jnp
fnstsw
out
daa
ror
fwait
fwait
ins
dec
rcr
sar
loop
mov
jecxz
jno
(bad)
(bad)
adc
push
mov
stc
sbb
rcl
cwde
stos
sub
sbb
pop
cwde
fsubr
into
push
push
cmp
jae
aam
xchg
and
cmp
xor
inc
scas
aaa
mov
sub
cs
pop
fcomp
ds
in
mov
out
daa
or
or
inc
pop
cmc
inc
mov
mov
and
(bad)
cli
xchg
into
pop
fisttp
cmps
movs
cdq
pusha
add
popf
hlt
std
out
inc
jnp
stos
data16
adc
push
mov
jmp
jno
inc
mov
(bad)
(bad)
cmp
push
pusha
dec
test
int3
dec
inc
inc
inc
and
and
mul
loop
cmps
popf
or
fwait
xor
or
test
mov
mov
mov
outs
inc
in
or
mov
sub
and
ror
push
cdq
mov
test
sub
jae
call
out
jnp
mov
popa
jmp
mov
sub
dec
movs
or
dec
push
dec
shl
push
inc
mov
sub
pop
push
dec
dec
sahf
adc
jl
test
pushf
shl
loopne
or
sub
adc
fidivr
xchg
push
shl
or
dec
xor
inc
cmp
dec
mov
jmp
push
mov
mov
cmp
push
sub
cs
ret
outs
imul
and
jmp
lea
bound
daa
fst
les
dec
std
pop
das
ret
gs
inc
jno
in
xchg
call
int
jl
mov
xchg
and
jno
cli
sbb
int3
dec
or
dec
jp
jb
div
pop
mov
(bad)
div
std
stc
loop
pop
lods
aaa
cwde
movs
imul
adc
loopne
pop
hlt
mov
and
(bad)
loopne
and
sbb
inc
mov
cmp
dec
loopne
jo
in
lock
test
xor
rcr
popf
xor
div
inc
popa
push
mov
lea
enter
pop
lea
add
cmps
(bad)
lock
stos
push
xchg
rcl
fucomi
push
into
fcmovb
mov
cmp
stos
push
cmp
mov
xchg
cmps
int3
mov
mov
test
lods
sub
jne
(bad)
(bad)
sbb
shl
(bad)
mov
pop
dec
dec
out
fisub
ror
ins
call
fwait
jae
sub
pusha
jecxz
inc
add
das
push
in
xchg
sbb
dec
aam
test
not
xor
xchg
inc
mov
loop
lds
pop
int3
inc
jmp
xor
sahf
cmp
ds
dec
mov
or
jecxz
jbe
pop
jmp
enter
jns
jl
inc
sti
sub
and
dec
push
call
add
sar
or
and
sub
and
and
jae
aad
pop
pop
out
pop
mov
push
jno
adc
pop
aas
pop
cmp
punpckldq
cld
rcl
or
jnp
jne
lea
or
adc
loopne
aas
pushf
add
sbb
add
mov
(bad)
cli
or
std
mov
iret
daa
aam
cmp
cmps
jbe
push
js
in
iret
cmp
retf
outs
mov
xchg
pusha
mov
stc
jmp
push
push
das
fs
fcmovne
into
adc
popf
mov
adc
xor
lock
iret
lahf
xor
push
es
ror
xlat
lods
pushf
bound
enter
icebp
and
pop
aaa
retf
inc
jnp
call
push
scas
xchg
jno
xor
mov
aas
or
or
in
jecxz
(bad)
sbb
nop
push
push
dec
sbb
sbb
xor
das
mov
imul
fs
add
test
cwde
pop
arpl
jmp
lea
call
xlat
add
repnz
fwait
jp
pop
rcl
mov
mov
movs
in
loop
cmc
pop
cmp
xchg
inc
fcomp
pop
cmc
fnstenv
lods
pop
popa
popa
je
jne
ror
les
nop
mov
jp
pop
dec
pop
xor
ins
jp
int
pop
mov
cwde
dec
jge
popf
jnp
fcomp
and
rcr
xchg
daa
xchg
loop
je
dec
pop
mov
or
mov
cmps
test
stc
jne
sahf
dec
leave
lds
dec
mov
fcomp
inc
push
call
daa
push
mov
jle
xor
sub
pop
adc
ins
dec
pop
scas
push
arpl
xor
xor
mov
add
or
mov
int
aaa
daa
add
sub
mov
ror
inc
in
int
dec
mov
cld
sub
std
out
xchg
add
sti
inc
or
mov
mov
jnp
nop
jo
xor
mov
sub
popf
fwait
je
lock
or
fdivr
mov
retf
cmps
fs
xchg
popf
ror
(bad)
jl
jl
add
adc
fnstcw
fstp
push
inc
jmp
test
in
stos
out
les
adc
dec
lock
cs
inc
push
movs
mov
in
cmp
cmps
in
scas
enter
dec
and
mov
nop
jmp
xor
sub
and
add
and
sbb
push
fdiv
mov
fdiv
popa
mov
mov
inc
hlt
push
movs
and
loope
sbb
or
push
into
or
jle
sub
xchg
shl
jae
push
and
xchg
xchg
or
mov
ret
in
loop
inc
sahf
xor
outs
imul
mov
fsubr
(bad)
loopne
sub
xor
sbb
das
mov
test
ins
push
rcl
or
inc
pop
movs
xor
lds
add
push
nop
push
xchg
addr16
or
jge
js
and
cwde
je
(bad)
jo
push
jg
inc
jnp
sbb
inc
rol
jl
je
ret
adc
sub
repnz
scas
jg
dec
mov
data16
pop
sub
out
xchg
sub
cmp
add
xor
add
outs
and
jb
cli
mov
inc
mov
mov
or
xchg
repnz
ror
and
jno
aaa
sbb
outs
pop
add
xor
mov
inc
inc
je
dec
mov
movs
xor
in
adc
jae
push
out
retf
adc
bound
cmp
xchg
dec
gs
ret
push
imul
test
pop
fwait
in
fmul
xor
jns
jmp
shl
push
(bad)
mov
into
(bad)
dec
lods
pop
into
shr
stc
cwde
dec
inc
daa
push
iret
test
inc
inc
mov
and
lds
pusha
stc
push
lods
fwait
jns
xchg
sahf
pop
js
inc
movs
cmp
adc
xor
mov
inc
jo
mov
rcr
(bad)
or
add
and
pop
int3
sbb
xor
lds
mov
out
mov
aaa
test
imul
inc
push
lahf
sbb
push
xchg
mov
inc
movs
xrelease
sbb
push
jle
inc
(bad)
push
sub
arpl
xchg
nop
cmp
pop
mov
scas
ss
nop
xchg
test
scas
pop
sub
mov
scas
ret
sar
cmp
outs
fld
sbb
in
cld
inc
mov
mov
pusha
test
ss
in
aaa
adc
rcl
xor
in
sbb
(bad)
(bad)
call
in
leave
inc
fs
test
jo
push
add
xor
mov
push
in
sub
aad
inc
sbb
sti
call
das
mov
fs
icebp
retf
and
ins
into
(bad)
dec
fist
lods
xor
cmp
or
add
mov
adc
adc
push
add
test
pop
xchg
idiv
pop
jno
jge
push
lock
je
call
dec
movs
lods
rcl
jle
sub
cmps
cmp
cmp
xchg
jp
int
and
scas
xchg
add
outs
or
sub
(bad)
mov
test
inc
fld
mov
push
pop
stos
sub
jo
jg
jmp
dec
xor
test
(bad)
(bad)
mov
push
jge
aaa
add
nop
or
mov
cmp
lock
xlat
outs
cmps
add
and
add
pop
pop
out
dec
push
mov
ja
sub
dec
ret
jmp
(bad)
cmps
(bad)
sbb
nop
imul
lock
pop
pop
dec
mov
out
mov
jno
jmp
or
movs
jmp
pop
inc
push
cmps
rol
xchg
lods
cmp
sbb
push
xor
xor
push
inc
lods
arpl
cmp
call
pop
mov
jp
or
fcmovbe
pop
test
inc
rol
mov
push
push
cmp
jg
or
int3
push
jbe
into
sbb
jg
imul
cmp
sub
in
sti
scas
jmp
imul
mov
mov
or
icebp
or
add
pop
pop
rol
es
and
dec
push
sbb
shl
cmc
sub
mov
cmp
cmps
les
push
div
jmp
pop
in
out
cmp
xor
cmp
add
dec
mov
and
lods
cmp
push
stos
mov
inc
popa
xchg
icebp
retf
outs
mov
popf
out
les
pop
inc
sbb
fwait
(bad)
jle
add
(bad)
scas
inc
pop
out
xchg
and
pop
jmp
pop
sbb
mov
pushf
push
push
cmp
sbb
xchg
stc
or
pop
push
dec
push
les
and
mov
std
aad
mov
mov
mov
ins
out
or
push
or
and
jecxz
push
data16
dec
aaa
(bad)
mov
inc
les
jmp
inc
(bad)
mov
adc
cmp
pop
cli
into
mov
mov
mov
adc
movs
(bad)
outs
movs
jecxz
bound
lods
jae
stos
rol
xor
add
rcl
xchg
and
aad
add
(bad)
imul
(bad)
bound
mov
sbb
push
dec
inc
fidivr
sub
xchg
xchg
or
lods
ins
or
out
add
or
sub
sub
mov
ret
repz
dec
sbb
imul
inc
sbb
in
ffree
sub
mov
mov
jo
fcomp
iret
add
jb
mov
lock
jmp
lahf
xchg
mov
adc
fldcw
inc
dec
in
ret
mov
das
ret
mov
xor
jns
inc
(bad)
mov
adc
push
les
push
mov
push
popa
push
sbb
jns
jb
inc
dec
xchg
adc
fist
xor
adc
inc
je
mov
popf
div
and
sbb
mov
mov
(bad)
imul
fbld
push
popa
jbe
pop
fdiv
loope
(bad)
xor
fs
push
adc
imul
jle
fist
leave
xor
aaa
sub
daa
stc
sbb
scas
mov
mov
jnp
jae
sbb
loopne
pop
add
sbb
add
int
cld
mov
xchg
push
cmps
or
push
cli
push
dec
inc
push
jno
ja
jns
cld
inc
mov
adc
inc
or
jo
push
jae
cli
lods
pop
xor
daa
movs
dec
dec
bound
cmps
iret
in
out
and
into
pushf
ja
lods
mov
ret
movs
sub
test
sub
aaa
xor
push
xor
movs
repz
add
pusha
sub
inc
push
ss
ja
pop
mov
stos
mov
movs
mov
int3
lea
aam
ja
dec
out
dec
sahf
mov
fdiv
xor
std
dec
jge
out
fstp
fidivr
add
mov
ret
les
xor
jecxz
es
leave
pop
jne
(bad)
mov
cmp
js
(bad)
cmc
mov
dec
cmp
or
push
cdq
mov
or
and
jne
mov
pop
xchg
sub
sahf
clc
aas
xor
pop
mov
fld
test
out
ja
aas
mov
sub
jae
popf
jae
inc
fwait
pop
aaa
and
sbb
xchg
pop
fs
xchg
xor
sar
call
cmp
sbb
mov
ret
cmps
out
sti
jmp
push
pop
or
out
fisub
pop
mov
fs
xchg
test
sub
push
leave
sbb
mov
jl
sbb
fneni(8087
mov
lahf
xchg
inc
repz
clc
push
std
popa
pop
sti
test
movs
cmp
mov
mov
xor
cdq
sar
push
dec
out
out
call
icebp
push
and
inc
out
cdq
imul
daa
cli
mov
mov
jb
ds
sbb
and
mov
lock
aam
std
push
xchg
push
aas
into
les
push
add
jo
pop
and
sbb
setns
mov
xchg
(bad)
and
mov
js
ins
pop
mov
(bad)
lods
lea
pcmpgtb
jp
(bad)
sahf
sbb
mov
mov
hlt
retf
adc
jo
pop
aam
jecxz
out
lea
out
xor
shl
call
aam
adc
stc
jne
and
xchg
mov
movs
dec
add
ss
cmp
not
or
rol
ss
sti
mov
ins
push
dec
jge
cmp
hlt
pop
pop
(bad)
adc
out
fidiv
cmps
sbb
mul
fcom
and
mov
fwait
push
or
cld
test
daa
scas
fmul
or
adc
inc
inc
ret
fidivr
mov
sbb
jge
mov
jge
add
out
jl
je
loop
in
fs
ret
jne
nop
icebp
xor
nop
out
lds
stc
pop
sbb
stc
sbb
pop
push
mov
pop
xchg
xlat
stos
fist
hlt
out
xchg
test
sub
push
int
pop
inc
mov
(bad)
sbb
inc
mov
push
mov
aam
ret
push
xor
jb
out
xor
mov
out
jg
sub
loop
cli
cmp
xor
(bad)
sub
xchg
test
inc
repz
dec
xchg
pop
fmul
cmps
lock
ror
sub
xchg
retf
sbb
add
mov
cmp
loop
adc
jno
push
pop
fiadd
pushf
push
sub
cwde
test
nop
stos
cli
sbb
jbe
mov
or
das
jb
test
loopne
sar
mov
inc
nop
aas
cwde
ficomp
sar
cwde
out
fcomp
sbb
adc
test
mov
out
sub
xchg
loope
cmps
or
xor
(bad)
aam
inc
lahf
jmp
jns
outs
xor
inc
mov
push
(bad)
pop
ins
adc
mov
and
mov
popf
xchg
xor
push
fcom
adc
test
and
shl
pusha
mul
mov
pop
ds
inc
jno
cli
dec
das
in
test
jle
inc
push
add
movs
push
push
pop
ret
in
test
cmps
inc
add
je
pop
jno
cmp
inc
push
jp
inc
imul
shr
xor
or
jge
enter
movs
scas
outs
pop
scas
fs
mov
gs
and
pavgw
lods
in
or
test
sub
int
and
adc
push
jo
outs
in
cmc
in
jno
mov
xor
daa
test
or
in
jecxz
js
je
aaa
dec
push
test
pop
pusha
and
in
xchg
fisubr
test
and
push
inc
cli
stos
xchg
icebp
cmp
ror
cli
sub
das
inc
sbb
mov
mov
dec
xor
icebp
adc
and
xor
aaa
lods
cld
gs
jnp
and
pop
sub
xchg
and
repnz
movs
mov
mov
adc
fsub
and
push
cli
pop
xor
popa
pushf
xchg
mov
or
test
mov
out
inc
push
adc
ffree
dec
mov
and
mov
and
and
ror
pop
and
cmp
pop
adc
sbb
mov
push
jmp
and
retf
test
adc
push
xor
mov
cs
fst
std
jb
cmp
loop
jmp
loop
out
shl
adc
mov
dec
cld
xchg
stc
jle
xor
jns
test
shl
jg
pop
(bad)
adc
les
(bad)
retf
iret
jnp
xchg
sub
sub
jnp
out
mov
sub
mov
enter
cmp
sub
lods
inc
pop
jne
shr
and
jp
sar
aas
shr
and
pusha
pop
sahf
pop
aas
loope
sahf
mov
fisttp
pop
mov
sbb
dec
cmp
and
add
sub
inc
das
and
push
mov
dec
and
(bad)
mov
pop
jb
cs
pop
icebp
dec
and
inc
scas
or
pop
sub
stc
inc
rcl
sbb
dec
jb
scas
(bad)
scas
test
xchg
pop
fwait
xchg
cs
fcom
ins
xchg
fmul
xchg
dec
cmp
mov
dec
adc
jnp
adc
pop
(bad)
xchg
sbb
xor
cmp
dec
sar
or
push
fld
jmp
jne
test
out
and
mov
jmp
not
inc
fwait
dec
leave
dec
mov
jecxz
push
loopne
xor
mov
dec
adc
jo
(bad)
and
or
lock
mov
scas
data16
cmps
inc
or
mov
dec
mov
aad
hlt
neg
adc
cmp
(bad)
pop
les
out
inc
in
retf
loope
dec
jb
dec
idiv
lods
adc
inc
push
das
push
pop
jmp
adc
inc
out
hlt
pusha
stos
loopne
cmp
and
inc
xor
sbb
cmp
fisttp
pusha
in
out
mov
aaa
mov
jnp
ins
lds
sti
or
ins
and
hlt
inc
ja
ret
cmp
gs
je
fcmovnu
pop
or
fwait
adc
inc
dec
inc
fmul
dec
fs
out
test
in
mov
mov
int
out
clc
xchg
add
mov
mov
jecxz
int3
in
fstp
pop
das
out
pop
and
mov
call
mov
xchg
sbb
das
jle
cmp
stos
mov
ins
lods
sbb
scas
ins
cmp
push
pop
sahf
jns
inc
pop
das
jo
push
fs
cmp
loope
lods
cmp
or
cli
in
sbb
(bad)
shl
adc
retf
call
mov
push
and
xchg
hlt
cmps
inc
out
ret
inc
stos
movs
mov
push
imul
mov
ja
inc
fwait
dec
cmp
pop
cdq
dec
jecxz
sbb
in
sbb
xor
pushf
adc
(bad)
cmps
xchg
push
sbb
adc
jge
xlat
mov
sub
movs
jne
mov
pusha
sar
arpl
retf
mov
sub
jbe
and
aad
(bad)
dec
jns
jne
dec
inc
sbb
and
in
or
test
add
test
push
stos
dec
mov
sub
aaa
xor
lods
or
push
int3
cmp
mov
lahf
jmp
hlt
ret
repz
mov
mov
fisubr
adc
in
push
fst
ins
and
sub
sbb
lods
cmp
sub
inc
pop
and
mov
jl
mov
and
das
add
(bad)
bound
test
into
sar
mov
retf
out
aam
imul
(bad)
mov
add
std
cld
cmps
and
xlat
sub
movs
and
and
sub
add
mov
(bad)
xlat
sub
xor
out
pop
jg
push
dec
int
sub
xchg
and
movs
movs
push
inc
add
mov
mov
or
and
and
mov
mov
in
sub
bnd
rcl
leave
lods
inc
in
int
jle
push
inc
push
iret
cmp
ins
adc
xchg
jnp
js
xchg
popa
loope
xor
loop
mov
adc
and
jl
loopne
fmul
(bad)
fidiv
imul
js
in
sbb
mov
gs
cmovbe
test
cmc
test
xchg
cmps
loope
outs
adc
jmp
pop
and
add
fiadd
adc
sbb
xchg
mov
outs
in
jne
mov
(bad)
call
shr
ficomp
lea
das
retf
xchg
push
jecxz
idiv
fist
mov
mov
sbb
icebp
call
sbb
les
sub
fldl2t
loopne
ret
mov
out
pop
(bad)
pop
mov
push
push
mov
jp
movs
loopne
xlat
add
dec
cmp
jae
sub
inc
(bad)
mov
popaw
sbb
aad
sbb
lock
cmp
jecxz
inc
sub
or
pop
pop
dec
mov
mov
jl
outs
cmp
popf
dec
ja
fs
mov
test
aam
loope
(bad)
xlat
int3
inc
or
cmc
mov
or
sbb
jns
stc
and
outs
fisttp
mov
lea
push
pushf
pop
enter
or
sbb
pop
adc
(bad)
mov
cmp
cmc
mul
iret
test
adc
jnp
addr16
out
lock
ja
pushf
mov
out
retf
dec
pop
inc
repnz
or
stos
jbe
retf
lods
leave
jecxz
mov
and
lahf
repnz
xor
into
jge
test
xchg
xlat
fstp
out
scas
mov
pop
mov
dec
mov
(bad)
retf
popa
xlat
sub
hlt
mov
adc
jecxz
(bad)
lock
mov
(bad)
hlt
das
mov
shl
pop
cld
int3
movs
xchg
ret
clc
adc
mov
dec
push
cmp
mov
dec
pusha
(bad)
neg
mov
fwait
cmps
jae
scas
test
call
jg
(bad)
or
mov
mov
xchg
loope
sahf
cmp
pop
push
int3
out
ja
in
sbb
fld
fbstp
xor
jmp
add
aaa
xchg
push
sahf
adc
jge
sbb
retf
adc
dec
leave
cmp
jmp
int3
xchg
add
sub
mov
add
iret
jge
jnp
mov
gs
and
ret
xchg
sti
push
xchg
dec
push
call
mov
sub
clc
pop
mov
jns
jne
imul
xor
(bad)
mov
jo
retf
push
add
sbb
rcr
into
add
mov
pop
fsqrt
jnp
loopne
mov
mov
push
rcl
or
sub
pmaxub
test
adc
lds
std
sbb
movs
or
mov
movs
fs
or
push
outs
fimul
cmp
sbb
jne
mov
pushf
cdq
cli
aad
adc
pushf
rcl
loope
mov
mov
pop
cmp
pusha
pusha
push
int
or
jmp
cmp
shr
cmp
jbe
cmp
xorps
call
(bad)
pop
rol
jmp
push
jns
mov
inc
ds
mov
popa
add
loope
fnstcw
xor
fisttp
bound
jbe
gs
mov
pop
jb
mov
mov
dec
retf
adc
and
cmps
inc
add
cmp
(bad)
outs
js
xor
lahf
stc
pop
loopne
call
xor
jge
sub
add
xor
jecxz
repnz
mov
sbb
shr
int3
push
out
jmp
adc
adc
cs
add
fmul
xchg
pushf
add
xchg
es
cmc
inc
cs
add
xchg
mov
call
jnp
call
shr
ficom
xchg
ret
std
test
pop
ja
dec
jnp
mov
dec
cmps
(bad)
fsub
push
sub
push
push
jmp
sbb
iret
test
cdq
lods
adc
push
xchg
adc
xchg
ins
bound
add
ret
xchg
sti
mov
rcr
dec
cmps
jp
push
adc
cmps
pop
std
(bad)
rol
call
xchg
clc
pop
test
repnz
jmp
cmps
dec
or
and
pop
das
xchg
neg
pop
(bad)
cmp
jg
or
cmp
pop
adc
sbb
and
sub
xchg
sub
cmp
fst
in
jb
fdivr
pop
jle
shr
ss
out
ss
sbb
jmp
aad
stc
jecxz
push
inc
jns
mov
cld
icebp
ss
dec
push
push
pop
push
inc
sbb
inc
mov
mov
and
daa
or
add
movs
add
push
push
fimul
xchg
in
fs
inc
pop
or
jne
pusha
fs
stos
cmp
jl
inc
sub
pop
test
shl
dec
adc
push
inc
xor
adc
fiadd
imul
cmps
loope
pop
xchg
jge
xor
aas
into
and
push
xchg
mov
mov
cli
jns
iret
lahf
int
shr
mul
and
mov
inc
cmp
mov
int
mov
leave
push
dec
jmp
iret
movs
sub
stc
cmp
push
jmp
jbe
int3
and
mov
je
retf
push
xor
popf
add
xor
jno
and
std
arpl
xor
mov
outs
pop
inc
push
fbld
movs
test
lahf
sub
popf
cmp
cs
fwait
push
mov
mov
dec
adc
mov
fld
mov
mov
push
(bad)
cmp
and
dec
pop
mov
fwait
sub
or
jb
mov
sbb
jns
cmp
int3
add
add
loope
jae
mov
mov
(bad)
stos
mov
(bad)
pop
xchg
jge
(bad)
mov
push
imul
seta
cmps
cmps
push
retf
and
ins
mov
mov
sbb
outs
jl
loope
adc
imul
sbb
sbb
mov
int3
rcl
lds
mov
(bad)
dec
fcmovb
xor
xor
(bad)
add
jmp
mov
es
out
ja
and
push
sbb
cmp
fldenv
mov
sub
and
xchg
outs
fwait
dec
int
adc
push
mov
js
push
jbe
sbb
sub
or
ja
cmp
lahf
fldenv
sub
in
ins
pop
fisttp
(bad)
(bad)
mov
cdq
jo
lods
add
adc
add
jbe
test
dec
in
inc
mov
xchg
cmp
(bad)
inc
push
test
or
and
fs
ret
es
jmp
nop
sub
ins
xor
mov
inc
loop
mov
cmp
jle
neg
ret
or
pop
out
shl
out
ret
dec
pusha
add
ins
pop
jnp
mov
mov
lods
add
(bad)
stc
inc
ror
add
jl
test
ret
les
cmc
test
jge
xor
int
clc
mov
adc
arpl
mov
inc
adc
xchg
ror
and
jns
scas
dec
in
dec
push
fcom
scas
mov
or
xor
outs
fninit
sbb
and
aad
in
dec
adc
mov
and
push
pop
ss
dec
xor
sub
jg
xchg
adc
out
bswap
mov
lahf
mov
js
sar
scas
add
fbstp
mov
adc
scas
adc
ror
test
loopne
xchg
sub
cmp
xor
int
fnsave
in
in
in
inc
nop
scas
lds
retf
inc
scas
inc
iret
or
xor
(bad)
sbb
push
xchg
(bad)
call
mov
int
fldcw
push
sub
(bad)
jmp
jge
retf
inc
rcr
das
jl
mov
and
jns
xor
xchg
mov
add
ds
cwde
arpl
mov
(bad)
mov
je
(bad)
pop
jbe
arpl
sar
inc
xchg
ja
jmp
cs
jge
iret
sbb
retf
popf
bound
jge
les
add
test
and
pop
pop
loope
and
std
test
xchg
lock
or
push
aam
jl
outs
or
push
push
bound
mov
dec
bound
mov
stc
mov
cwde
in
mov
outs
arpl
les
sub
cmc
ins
(bad)
pop
hlt
pop
mov
pop
xchg
test
sbb
shl
jmp
mov
ja
rcr
adc
dec
sub
out
repz
(bad)
popa
fstp
dec
cmp
out
xchg
dec
dec
push
and
and
mov
aas
sbb
xchg
loop
and
ret
icebp
inc
pop
ror
and
dec
rcr
pop
sbb
adc
call
loopne
and
test
retf
and
nop
imul
xor
(bad)
pusha
nop
dec
mov
mov
fwait
xchg
test
sub
cmc
es
mov
cmp
lds
je
push
and
test
cmp
cmc
ror
fsubr
pop
test
sub
les
inc
adc
sub
and
mov
inc
add
add
xor
push
push
xchg
pop
jecxz
xchg
mov
fcomip
pop
fidiv
pop
lock
adc
and
jae
scas
mov
xor
cmp
outs
inc
mov
int3
mov
neg
fwait
cmp
dec
loop
popf
mov
test
mov
bound
and
call
popa
sbb
(bad)
movs
fwait
je
in
pop
daa
mov
add
data16
loopne
cmovg
outs
push
in
cmp
lock
inc
arpl
clc
mov
pop
sar
shl
dec
nop
cmps
enter
pop
inc
test
fist
icebp
mov
mov
sub
ficom
fisttp
add
loope
lock
je
add
stc
adc
enter
dec
xor
popa
ret
cmps
test
std
and
ror
add
adc
cmp
mov
ss
mov
es
inc
xchg
push
lods
sbb
fcomp
ret
push
fiadd
js
mov
pop
inc
cld
add
or
aad
add
mov
pusha
sbb
adc
add
mov
scas
mov
cmp
outs
ins
adc
sbb
maskmovq
mul
xchg
jg
xor
and
push
pop
je
or
loop
dec
push
jmp
(bad)
fwait
jge
sub
xchg
sub
dec
jp
cmc
scas
xchg
(bad)
xor
cli
pop
inc
inc
lahf
mov
push
dec
aam
cmp
inc
xchg
lahf
in
sbb
cmp
sbb
sub
sbb
adc
xor
arpl
aam
shl
sub
sub
daa
xor
out
xor
iret
popa
mov
push
adc
add
cmc
jge
mov
iret
shl
inc
jne
sbb
add
aam
or
mov
hlt
out
mov
scas
sti
aaa
jns
aam
cwde
inc
mov
retf
imul
jnp
(bad)
jmp
add
dec
mov
pop
imul
dec
jb
ds
mov
adc
imul
ins
jno
add
mov
pop
adc
pusha
sub
sbb
pushf
ja
cmps
sbb
adc
loope
fnstcw
or
mov
pushf
pop
lds
jno
xchg
fptan
cmp
das
loope
inc
pop
movs
(bad)
mov
push
ja
fbstp
fadd
sbb
jnp
shl
jbe
pop
or
(bad)
test
mov
hlt
ret
inc
lock
pop
lds
mov
imul
adc
bound
mov
xor
mov
js
leave
dec
push
cmp
call
bnd
inc
sub
jmp
xchg
pop
pop
call
sahf
push
aad
in
std
scas
pop
and
or
test
push
sbb
cmp
das
add
xor
je
(bad)
call
or
cmp
dec
and
int3
push
loope
imul
fsub
dec
add
mov
and
fsqrt
call
jmp
dec
cmp
mov
jo
cli
mov
mov
stc
loope
adc
cmc
int
sti
out
shr
cwde
inc
mov
fcomp
cmp
das
mov
stc
(bad)
movs
or
inc
jno
adc
push
cmp
add
and
aam
in
or
jmp
mov
jle
sbb
pop
jl
mov
xor
stos
ds
(bad)
shl
lahf
pop
sbb
xchg
pop
adc
std
push
mov
leave
scas
ins
int
jne
jecxz
fcmovu
daa
mov
cmps
mov
xchg
ror
fcomp
std
dec
dec
mov
mov
adc
dec
popa
xchg
adc
outs
inc
imul
cwde
scas
sbb
push
aam
cmp
jnp
mov
std
mov
dec
sub
scas
or
out
push
dec
jae
and
mov
aam
cwde
mov
push
std
rcl
cli
mov
pop
pop
leave
xchg
mov
scas
scas
dec
jmp
shr
push
addr16
push
fisttp
pushf
nop
jle
xchg
add
ret
cs
mov
pop
shl
push
jmp
xor
sub
xor
daa
mov
mov
jne
fwait
sub
dec
xor
sbb
cmp
sub
inc
dec
mov
add
jb
sub
popf
mov
(bad)
sub
pop
lods
dec
in
sbb
push
mov
pextrw
inc
in
inc
mov
mov
(bad)
mov
out
and
dec
mov
lock
stos
js
push
pop
xchg
mov
scas
sbb
retf
jno
adc
loop
add
ret
jmp
inc
out
mov
cmp
push
adc
icebp
fst
jbe
jl
push
jmp
in
iret
add
pop
rcl
fild
jno
test
push
scas
push
mov
add
and
popa
out
cs
sahf
lods
xchg
xchg
or
jnp
out
and
pop
pushf
jmp
dec
aaa
inc
shl
pop
sub
cld
(bad)
mov
or
nop
mov
cmp
mov
ins
fcom
adc
sub
cmp
inc
cmps
gs
pop
ror
(bad)
into
and
inc
js
adc
lahf
ret
dec
xor
add
leave
iret
fwait
mov
jecxz
aas
(bad)
(bad)
out
add
inc
(bad)
fisubr
fcom
dec
inc
dec
mov
cs
fwait
ret
lods
popf
sub
movs
push
adc
mov
ret
xor
ffreep
push
popf
xor
aam
sub
push
pushf
fdiv
dec
mov
adc
rol
adc
mov
mov
sub
je
rol
sub
in
ret
push
in
and
ficom
and
pop
addr16
into
cmp
dec
pushf
in
xchg
or
pop
sbb
cmp
mov
data16
sahf
pop
rol
mov
mov
jno
outs
add
add
mov
adc
push
daa
push
rol
push
cld
pushf
popa
adc
pop
add
in
mov
cmps
mov
aam
jp
cmp
pop
add
inc
out
jo
aaa
je
mov
data16
scas
xor
adc
or
inc
pop
aas
jb
iret
cdq
ins
enter
sub
test
xchg
ss
or
pop
fst
fild
xchg
mov
ror
cli
xor
and
popa
cli
test
pop
pop
sub
dec
dec
mov
pop
jle
in
and
movs
call
ret
mov
int
stos
fistp
shl
outs
adc
sti
and
mov
daa
int3
pop
(bad)
mov
cli
and
sub
aad
xor
cdq
fadd
ficom
pusha
sub
ret
xchg
mov
jge
push
or
leave
fdiv
and
int3
sub
jle
scas
mov
pop
or
call
sti
cmc
pushf
add
pop
pop
cld
mov
aam
imul
adc
sub
lahf
into
cdq
out
das
dec
fsubr
or
push
pop
nop
inc
adc
mov
and
ror
ja
jne
in
retf
sbb
mov
cmp
frstor
retf
lahf
sbb
or
push
push
mov
aas
pop
fisttp
std
test
addr16
fwait
pop
mov
adc
xchg
mov
stc
mov
add
test
pop
or
xchg
xlat
mov
outs
imul
rcl
fdivr
and
xor
add
shl
adc
daa
in
stc
mov
imul
repz
sub
sbb
push
sbb
inc
mov
sbb
jbe
pop
pop
push
jg
or
mov
mov
ins
cs
xor
sbb
pop
jae
mov
jnp
lea
or
lahf
in
dec
jb
(bad)
fimul
arpl
xchg
in
and
(bad)
cmp
js
pop
stos
jge
and
mov
(bad)
or
sbb
inc
ds
lds
lea
or
dec
jnp
loopne
lods
push
retf
inc
call
imul
push
jge
or
xor
addr16
sub
mov
mov
sbb
(bad)
add
xchg
jg
mov
mov
adc
inc
cmp
fisubr
sub
nop
cmp
cs
push
jae
test
pop
or
inc
not
into
ficom
int3
or
ins
loope
ja
and
xchg
mov
mov
fldcw
ret
push
xor
call
mov
xchg
inc
or
inc
xor
xor
fnstsw
pushf
int3
call
sbb
aas
jno
xchg
popa
xlat
movs
sub
call
xchg
daa
retf
loop
cmp
enter
(bad)
adc
jb
leave
xor
les
in
and
dec
mov
inc
stc
arpl
xchg
adc
pop
in
pushf
or
dec
mov
jno
add
sub
or
call
pop
jae
xor
mov
xchg
fisttp
outs
loop
or
test
outs
cmps
adc
cmp
jo
xor
sbb
mov
sti
mov
ja
mov
push
int3
lahf
push
dec
imul
out
fmul
xor
mov
dec
push
(bad)
(bad)
data16
sub
inc
mov
mov
push
pop
test
loop
inc
xchg
cmps
mov
call
out
xor
sbb
inc
test
mov
add
push
adc
xor
stos
cdq
jle
inc
in
push
bound
pop
fcomp
adc
jbe
outs
push
loope
xor
into
in
outs
outs
inc
and
mov
jno
enter
mov
ss
ds
push
mov
add
mov
sub
mov
popf
cmp
jmp
dec
ss
xchg
(bad)
sbb
ins
mov
lea
popf
dec
jecxz
jg
mov
push
add
or
nop
retf
rol
xor
(bad)
(bad)
mov
lahf
xlat
repnz
xlat
sbb
cld
dec
daa
test
or
mov
xor
(bad)
xor
xchg
adc
test
and
es
sar
xor
lea
push
sub
jle
mov
sti
jb
je
sub
retf
xor
lods
jecxz
and
dec
sbb
leave
jmp
pop
outs
pop
jns
cmps
jecxz
lahf
mov
iret
cmc
aam
rol
xchg
or
dec
adc
into
and
cld
fdiv
xchg
xchg
adc
jns
jne
sub
outs
and
dec
xor
inc
mov
outs
retf
js
push
xlat
in
pop
movs
mov
lock
push
call
sahf
xchg
and
leave
je
pop
adc
pop
adc
cmc
xchg
sbb
std
cdq
xchg
(bad)
cmc
mov
xchg
je
call
shl
push
icebp
push
inc
lock
out
das
pop
movs
aad
movs
repz
push
mov
inc
dec
sbb
adc
inc
sar
dec
mov
out
pop
cs
retf
add
adc
mov
into
and
mov
jecxz
imul
in
pop
dec
jg
lock
push
test
test
mov
and
rcl
(bad)
xchg
mov
xor
retf
mov
cs
stos
mov
mov
rcr
dec
jl
popf
aas
push
xchg
mov
inc
pop
or
inc
push
or
mov
fld
dec
jmp
pop
lahf
jl
mov
leave
pop
add
sbb
pop
lahf
fst
leave
add
xor
(bad)
push
rcr
mov
adc
pop
scas
icebp
sbb
mov
mov
mov
icebp
inc
call
xor
cmps
xchg
sub
pop
jg
mov
imul
or
or
add
jo
xor
aaa
add
cdq
dec
sub
dec
or
cmp
les
mov
sub
mov
jns
loopne
xchg
fdivr
retf
scas
int3
popf
mov
ins
dec
sbb
ins
xor
ins
sbb
ret
stc
mov
fimul
push
fdivr
cs
aad
loop
mov
fwait
jmp
dec
jle
and
push
das
retf
push
mov
push
mov
or
xchg
cdq
jns
lods
icebp
repnz
ins
mov
push
and
repnz
je
scas
repnz
leave
jns
mov
mov
jne
ins
or
loopne
js
and
adc
pop
data16
jle
dec
xchg
test
retf
pop
leave
pop
test
xchg
loope
jno
ins
test
mul
cwde
push
or
mov
out
mov
shr
mov
inc
inc
cs
or
mov
ss
xor
mov
mov
ds
sbb
sub
push
jne
xchg
add
cmp
pop
out
cs
jl
sti
jo
push
mov
inc
push
adc
mov
fisub
arpl
sub
loopne
fxam
xor
dec
mov
xor
dec
xor
push
mov
push
pop
dec
push
push
xor
jb
or
aas
add
sbb
pop
xor
xlat
es
dec
push
rcr
mov
ss
fcomi
pusha
mov
jecxz
sar
test
inc
xchg
jle
jno
sub
xor
xor
into
les
mov
outs
outs
scas
xchg
sub
sub
fstp
(bad)
inc
bound
adc
pop
es
out
call
int
push
jo
cmp
scas
jmp
mov
aas
call
adc
pop
mov
ror
pop
jb
iret
and
jbe
(bad)
out
xor
dec
cmp
shl
fidiv
xchg
retf
and
in
jmp
inc
(bad)
and
cmp
fidiv
outs
pop
jp
push
pop
enter
test
cwde
test
dec
xchg
cmps
nop
xor
ret
pushw
add
dec
ret
out
jg
add
fwait
scas
cmp
fbld
push
sub
mov
and
sub
inc
jecxz
xchg
jb
xchg
(bad)
xor
fcom
jae
scas
mov
jmp
retf
jmp
cmp
loope
mov
and
sbb
(bad)
fldenv
call
(bad)
movhlps
bound
jmp
sahf
dec
mov
xor
pop
xchg
jmp
mov
pop
cmp
shl
in
mov
cmp
jo
jbe
jle
iret
hlt
mov
js
and
mov
ins
cli
pop
jp
ss
sbb
mov
cmp
xchg
dec
push
add
pop
or
push
adc
(bad)
pusha
stos
inc
lock
arpl
cmp
jno
inc
sbb
jl
mov
add
jb
pop
cld
sti
and
xlat
int3
push
fwait
out
rcl
and
push
sub
xchg
add
ds
out
fmul
call
cs
shr
sar
xor
call
xchg
nop
lods
in
add
pop
dec
data16
pop
fmul
mov
jbe
lods
jl
add
aad
and
adc
int
pop
cmp
mov
aas
cmp
sub
cmp
add
fs
(bad)
mov
xchg
(bad)
jmp
aaa
add
jle
and
jge
and
mov
and
adc
push
cmp
xchg
cwde
test
loop
xor
pop
fst
ins
lock
dec
pop
xor
and
xor
ficomp
pop
out
push
or
scas
out
xchg
mov
cmp
out
in
sub
rcl
pop
push
jg
push
inc
mov
jo
push
jge
mov
in
sbb
jp
in
push
mov
adc
call
test
int3
ret
xor
ds
jno
aas
popa
dec
stc
jmp
sti
mov
sti
mov
jae
sti
clc
int3
xor
dec
aas
test
outs
dec
cmp
sub
or
pushf
ret
mov
lock
inc
bound
xor
push
inc
adc
or
push
pop
into
sbb
xor
mov
int
xchg
jb
push
add
cmp
push
into
add
call
cmp
push
ret
xor
inc
jecxz
jae
neg
xor
icebp
in
xor
test
dec
mov
lods
pop
movs
repz
loop
popa
mov
xor
call
xor
or
adc
xchg
xchg
or
adc
mov
xor
and
jmp
popf
inc
fstp
in
popa
inc
xor
jo
dec
inc
and
mov
cwde
add
(bad)
sub
lock
add
mov
pop
clc
cmp
pop
cwde
test
cdq
cmp
(bad)
xchg
icebp
mov
scas
popa
dec
(bad)
fimul
lods
mov
pop
lods
pop
jb
mov
in
fwait
test
jo
ins
push
daa
movs
cmps
cmp
fsub
popa
aad
fucom
shl
lds
cmp
xchg
(bad)
adc
dec
push
sub
scas
dec
cld
loopne
rcr
out
push
ror
dec
xchg
jg
push
leave
dec
mov
ror
rcl
pop
or
xchg
xor
enter
adc
push
adc
popf
add
inc
pop
push
cmc
ins
loopne
mov
imul
lea
fwait
add
(bad)
push
or
movs
mov
(bad)
and
leave
ret
inc
cli
pop
xchg
in
lds
mov
fstp
sub
int3
cmps
jo
xchg
dec
test
lds
jmp
xchg
outs
repz
push
mov
sub
dec
cwde
dec
leave
xchg
lds
mov
pop
cmp
stc
push
fdivr
call
mov
shl
sub
and
adc
mov
ins
add
cmps
shr
cmps
mov
aam
or
jl
jae
push
(bad)
or
movs
les
jmp
pop
and
pop
jbe
sub
iret
add
mov
ins
xor
out
pop
cmp
clc
jg
hlt
sbb
jp
or
jno
inc
dec
sti
in
dec
or
dec
mov
push
hlt
mov
xchg
mov
call
aas
jp
push
std
into
pusha
retf
jmp
in
mov
and
xchg
dec
adc
push
sub
jge
inc
mov
mov
xchg
imul
mov
mov
mov
push
ins
xor
leave
pop
xlat
cli
(bad)
lock
pop
loop
cmp
mov
or
fldenv
mov
into
cmp
push
and
mov
je
xchg
cmp
ss
push
pusha
jne
scas
(bad)
(bad)
adc
ins
cmp
sbb
je
push
gs
lea
aaa
mov
lea
add
push
das
fdiv
cmps
leave
repnz
or
pop
add
in
mov
push
push
ds
lods
and
adc
jmp
jnp
jo
in
inc
imul
rcl
mov
adc
xor
test
scas
mov
out
and
adc
gs
mov
outs
sub
dec
sub
in
xor
loopne
aas
scas
(bad)
push
xchg
cmps
imul
mov
loopne
lods
ds
push
push
fwait
sbb
mov
pop
sub
mov
mov
ret
loop
pop
add
cmp
(bad)
xor
int3
lds
mov
sub
jb
add
push
push
inc
mov
ficomp
dec
inc
enter
pop
je
jle
jge
or
daa
push
arpl
mov
js
lea
int3
arpl
inc
(bad)
bound
scas
push
or
(bad)
pop
dec
xor
fisttp
lds
mov
inc
stos
jbe
mov
dec
or
sti
adc
cmp
int3
mov
xchg
mov
dec
pop
test
and
addr16
fisttp
and
push
cmp
mov
pop
repnz
inc
cwde
xor
sub
dec
and
lods
in
stos
dec
dec
xchg
addr16
add
push
xchg
lahf
jne
ins
xchg
xchg
ret
xlat
lods
sub
sub
pop
mov
rcl
cmps
add
add
js
in
in
push
fisubr
pop
mov
xor
fmul
push
push
and
mov
xchg
aaa
shl
sbb
retf
sbb
in
pop
jns
or
out
jge
mov
mov
push
mov
push
push
test
add
aaa
pop
push
leave
loope
(bad)
jle
cmc
fs
leave
and
jbe
push
(bad)
(bad)
cdq
jp
add
mov
lahf
sar
mov
cmp
arpl
sbb
out
mov
fwait
and
arpl
loopne
push
aad
outs
imul
ins
retf
cs
xchg
test
je
or
pusha
call
push
mov
and
xchg
lock
ret
xchg
(bad)
cld
call
std
pop
jb
pop
adc
jnp
push
or
mov
mov
adc
mov
(bad)
adc
mov
lea
inc
cmc
les
pop
cmp
fwait
daa
test
mov
(bad)
leave
pop
cwde
fwait
add
pop
mov
push
nop
test
jl
shl
popf
sbb
bound
jg
sbb
add
(bad)
arpl
and
pushf
ror
adc
xor
les
int
push
adc
in
ja
inc
xor
leave
jmp
cmps
xchg
xchg
ins
add
cmp
sub
or
ss
std
mov
frstor
inc
xchg
jbe
jne
mov
sbb
push
sbb
xchg
arpl
ds
add
push
and
repz
(bad)
jbe
xchg
call
fs
xchg
imul
mov
sar
inc
xchg
xor
scas
adc
aaa
pop
aas
cli
sbb
rcl
xchg
add
ins
adc
lods
cmp
scas
xor
movs
bnd
shl
add
in
lahf
cmp
lods
sub
mov
movs
jne
dec
dec
dec
movs
cld
mov
ins
scas
inc
cmps
mov
int3
sti
fs
cdq
pop
ja
xchg
adc
retf
cmp
mov
call
sti
xor
shr
(bad)
jge
adc
enter
sub
out
out
pop
adc
(bad)
jns
xchg
push
add
jnp
mov
daa
cmp
inc
into
stos
daa
sbb
arpl
jp
and
xchg
push
fnstsw
pop
adc
(bad)
fdiv
call
and
adc
pop
mov
arpl
sub
mov
sbb
xor
bnd
jecxz
pop
push
xchg
lods
sub
pop
push
and
add
stc
mov
shld
inc
cmp
cmp
inc
jnp
or
sub
lahf
xor
jno
fdiv
add
dec
jb
xor
mov
pusha
enter
add
xchg
cmps
xor
out
mov
imul
xchg
xchg
ins
sahf
adc
sbb
jnp
dec
repz
cmps
out
cmps
mov
sbb
in
repz
or
jae
cmc
cmp
xor
adc
and
dec
and
add
cdq
mov
sar
test
adc
jg
mov
jne
and
cmp
mov
outs
xchg
cs
aam
and
pop
repnz
and
(bad)
iret
pop
pop
jl
pop
fst
jge
pop
shl
push
cmps
sbb
push
ins
push
cmps
mov
enter
adc
xor
and
les
retf
mov
sar
pop
and
imul
lahf
movs
fisttp
adc
mov
sub
add
add
jecxz
ins
data16
jae
shl
adc
push
sbb
jb
nop
scas
hlt
aaa
dec
(bad)
loop
sti
and
les
aad
xor
and
xchg
xor
(bad)
cmp
push
mov
push
sbb
inc
push
pushf
mov
fmul
mov
cmp
stc
jmp
jmp
adc
jmp
cmp
cmp
adc
aas
das
loope
xchg
push
call
push
or
test
out
ins
pop
mov
stc
push
iret
retf
aad
xchg
lds
test
push
dec
int3
xchg
mov
push
out
add
jge
cmc
das
add
mov
out
cmc
mov
cmp
daa
adc
loopne
fsubr
(bad)
push
aaa
push
addr16
lea
inc
add
or
add
pop
add
mov
dec
daa
pop
ins
jno
(bad)
ror
(bad)
mov
xor
add
in
mov
dec
adc
nop
push
movs
jae
adc
pushw
loopne
movs
xor
loopne
inc
mov
imul
add
inc
pushf
adc
cld
pop
popa
repz
sub
ss
sub
dec
and
rcr
jg
dec
call
push
or
popf
ret
inc
pusha
xchg
mov
cmp
sti
add
arpl
fimul
xor
mov
test
retf
mov
pop
jbe
lds
imul
sbb
call
outs
jle
mov
or
and
int
sti
mov
dec
dec
mov
nop
dec
scas
je
pop
psubusw
add
adc
dec
lds
movs
popa
stc
stos
leave
or
test
ins
lods
out
mov
and
ds
(bad)
sahf
push
sti
push
pop
sbb
sub
jmp
daa
sub
idiv
movs
inc
adc
add
fcomp
fcomp
xor
cmp
adc
ret
pop
push
push
inc
pushf
mov
ja
mov
sbb
(bad)
loop
rcl
adc
pop
iret
lea
pusha
iret
sub
aad
es
mov
in
xchg
sbb
fistp
jp
dec
mov
ins
xchg
sbb
dec
popf
jl
outs
(bad)
movs
jo
jns
jl
xor
push
popa
lds
sbb
icebp
adc
in
adc
mov
dec
pop
cmp
inc
sbb
push
inc
pop
add
test
or
adc
pop
sti
sbb
loopne
sbb
sbb
dec
adc
sbb
test
sti
movs
bound
xchg
push
xchg
xor
stos
xchg
sbb
fst
fld
dec
sbb
cmps
push
cmp
(bad)
mov
ficom
jp
call
jp
pop
fdiv
adc
fcom
and
xchg
inc
add
xor
cwde
pop
and
loop
test
sub
pusha
push
ds
xchg
cwde
es
or
sar
adc
into
outs
popa
(bad)
into
ret
les
repnz
pop
aad
into
or
sbb
call
fs
(bad)
cmp
dec
jb
sub
xlat
adc
lahf
test
or
fisub
jae
stos
out
jl
ja
cmp
or
pusha
data16
test
pop
xchg
repnz
sahf
(bad)
test
mov
cs
xchg
int
and
movs
(bad)
cmp
imul
ja
cs
loop
jmp
pop
push
nop
inc
ins
inc
nop
jle
mov
mov
and
mov
movs
lahf
add
xor
pop
daa
push
pop
popf
stos
pop
mul
jnp
or
dec
and
push
pusha
clc
push
adc
add
adc
or
cmps
sahf
int3
jno
adc
imul
jcxz
pop
jnp
xor
jae
add
(bad)
jo
cld
mov
(bad)
sbb
sub
mov
or
out
test
movs
ror
movs
push
mov
adc
cmp
mov
cld
pop
sbb
pop
and
lds
(bad)
into
mov
loope
or
ds
mov
test
mov
push
and
push
(bad)
loopne
pop
add
sti
adc
lea
push
out
mov
and
xchg
in
popf
mov
sub
sbb
and
cmps
cmp
sub
ficom
jmp
cmp
xor
add
mov
gs
repz
or
dec
cmp
mov
bound
jae
dec
repz
data16
sbb
pmaxub
lods
mov
sbb
ins
dec
outs
pop
push
pop
repz
(bad)
jnp
ds
xlat
xor
pop
test
aas
int3
pusha
(bad)
jmp
inc
inc
fucom
xchg
jg
(bad)
out
jle
pusha
imul
inc
shl
out
pop
(bad)
pop
ja
sub
sub
dec
xor
mov
pusha
sbb
push
inc
mov
int
xchg
adc
xchg
std
sbb
call
daa
push
sub
out
add
arpl
loopne
or
inc
fistp
and
add
mov
mov
dec
mov
mov
repz
hlt
push
xchg
push
xchg
mov
call
stc
xor
movs
inc
sbb
mov
jnp
lahf
jp
cdq
dec
ds
outs
js
leave
or
inc
scas
xor
loopne
mov
ss
cwde
jns
(bad)
mov
addr16
repz
sub
or
and
ss
adc
mov
sar
mov
lods
jno
jge
inc
es
pop
out
mov
sub
ss
popa
jp
ret
sbb
mov
sub
push
mov
out
outs
call
mov
inc
(bad)
iret
arpl
loop
mov
and
lods
xchg
add
rol
out
inc
sub
push
xchg
dec
int3
inc
lock
mov
jbe
aam
adc
dec
jmp
repz
js
cwde
out
cmp
xor
pop
fidivr
xor
sbb
add
lea
xchg
jno
sbb
mov
xor
adc
inc
out
loopne
retf
xor
sub
jne
add
fwait
pop
add
fnstenv
mov
and
and
mov
enter
jbe
cmc
push
mov
ficomp
nop
push
loopne
inc
jnp
sbb
sahf
adc
add
call
cmc
mov
adc
cmp
(bad)
mov
mov
and
jne
adc
cli
hlt
inc
aad
pop
add
mov
jb
mov
nop
dec
push
xchg
cmc
xchg
hlt
and
ins
sbb
aam
loopne
sub
aaa
sbb
lock
ret
sbb
cmc
jb
mov
sbb
jbe
cmp
mov
aad
loop
push
iret
lea
and
xchg
pop
cli
push
movs
lock
bound
mov
pop
test
ins
out
faddp
pop
ret
ins
and
aam
aaa
cmps
sub
mov
xchg
adc
and
pushf
or
fidivr
sbb
out
sub
scas
fldcw
loopne
lea
movs
cmp
ds
dec
rol
ror
mul
stc
mov
adc
lods
das
test
mov
call
test
xlat
mov
aaa
adc
test
add
xchg
jmp
mul
pusha
xor
pushf
loopne
imul
fnsave
test
xlat
cmp
push
xor
push
out
in
cmp
mov
push
sub
pushf
jnp
inc
loopne
movs
lock
pop
mov
mov
sub
push
lock
push
retf
and
pop
data16
inc
out
inc
sbb
sub
jmp
adc
inc
push
mov
jns
jo
pop
and
pop
jecxz
mov
mov
sub
jp
mul
mov
jbe
in
jge
jmp
(bad)
pop
je
mov
dec
les
(bad)
in
stos
jecxz
dec
test
sbb
add
pop
sub
cmps
or
retf
sbb
nop
mov
pusha
imul
aad
clc
jge
xchg
retf
jno
xor
shl
sbb
cmps
lods
mul
and
popa
or
mov
fcomp
add
lahf
push
mov
ss
and
jnp
inc
test
mov
daa
js
sbb
push
pop
loope
mov
addr16
and
mov
sub
sbb
repnz
out
inc
out
mov
xor
addps
repz
inc
repz
aad
outs
ficomp
cdq
jg
pop
lock
das
and
pop
repz
arpl
xchg
bound
mov
push
mov
addr16
pop
outs
adc
pop
inc
in
add
ftst
mov
xlat
aad
addr16
scas
xchg
mov
repnz
xchg
jge
jne
jae
xor
xchg
mov
inc
xor
bound
pop
leave
pop
push
cld
mov
mov
sub
div
push
mov
adc
in
imul
pusha
pop
scas
test
cmp
push
loopne
push
retf
lahf
mov
test
pop
outs
out
cmps
mov
jae
inc
jo
test
out
rol
jle
push
mov
xor
pop
int
pop
cdq
sub
cmp
pop
aam
in
pop
fdiv
fmul
nop
jp
and
in
sub
ja
int
cmp
or
mov
and
test
and
mov
lea
xchg
or
mov
scas
sbb
outs
xor
sbb
mov
movs
cs
jecxz
outs
adc
xor
pop
mov
dec
xchg
jmp
adc
add
cmp
loopne
sbb
call
(bad)
jnp
pushf
sub
jp
test
or
popa
scas
jmp
jnp
or
and
mov
out
pop
stos
jmp
mov
sti
xor
ins
xchg
fild
add
push
fprem
push
dec
add
lea
daa
fistp
dec
imul
scas
or
xchg
and
and
add
jns
inc
setns
mov
sub
fidiv
test
cli
adc
xchg
shl
rcl
ins
clc
out
aad
test
or
das
sbb
in
jmp
push
jo
dec
ins
mov
jb
and
cmp
ja
adc
movs
cmps
xchg
cmp
cli
clc
pushf
enter
addr16
mov
xchg
mov
pop
sub
lock
mov
int3
jl
jge
arpl
call
dec
dec
mov
cmp
pop
push
test
fisttp
sub
dec
dec
push
push
nop
aam
ss
mov
cli
and
and
std
dec
add
jne
push
mov
mov
sbb
div
daa
js
movs
retf
shl
cmp
test
mov
(bad)
jno
pushf
dec
mov
mov
cmp
dec
std
daa
cwde
scas
jl
pop
(bad)
int3
test
pop
jne
(bad)
daa
adc
mov
mov
push
jg
shr
adc
mov
jae
ja
mov
das
mov
cmps
movs
shr
jo
pusha
xor
arpl
movs
push
ins
mov
movs
nop
mov
xor
lea
clc
mov
out
add
xor
mov
and
push
(bad)
add
jns
push
add
retf
xor
out
mov
dec
xor
push
sar
inc
(bad)
out
xchg
pop
in
push
inc
data16
es
jmp
push
cli
inc
ins
not
enter
jae
push
or
pop
mov
ficom
jg
sti
jle
leave
in
ret
js
hlt
rcr
(bad)
std
retf
sub
xchg
pop
fcmovnu
rol
lea
mov
cmp
adc
pop
and
fwait
sub
push
push
lahf
cmp
movs
hlt
daa
ins
cwde
push
or
jge
mov
push
ja
dec
(bad)
fst
lea
nop
mov
ins
sbb
mov
and
add
aad
(bad)
dec
mov
push
sub
scas
or
xor
out
or
add
cli
or
pop
gs
sti
mov
out
lahf
loopne
mul
call
test
nop
lods
push
bound
dec
lods
retf
call
sbb
mov
jmp
cwde
imul
pop
test
lea
adc
xor
gs
pop
rol
ret
fisubr
aad
add
cmps
push
js
mov
outs
push
and
outs
pminub
sar
call
xor
cmps
mov
xchg
xlat
add
pop
stos
pop
xchg
rcl
outs
jge
in
test
imul
outs
or
mov
adc
pop
push
mov
ds
lahf
jns
adc
mov
sar
fwait
icebp
add
mov
and
test
xor
fidiv
(bad)
fimul
ret
ret
outs
sbb
gs
stos
xchg
outs
jecxz
out
das
or
adc
ror
cli
add
imul
jp
rcl
and
sbb
test
inc
pusha
mov
adc
adc
jmp
imul
mov
leave
mov
cmp
je
mov
xchg
pop
pop
xchg
add
sbb
dec
fwait
xchg
inc
pushf
std
call
dec
adc
imul
jae
mov
lods
movs
fs
push
add
and
rol
test
js
add
jo
cwde
xor
jnp
sbb
int3
int
lock
sub
ja
addr16
jle
inc
mov
mov
mov
jne
gs
fcom
arpl
jmp
or
pop
pop
dec
ja
or
retf
lods
test
sub
rcl
les
push
into
adc
jns
fldenv
imul
xor
frstor
lods
mov
mov
xor
inc
dec
scas
mov
sbb
xor
xchg
or
jle
in
daa
cmp
loope
mov
push
xchg
stos
out
push
jb
addr16
cmp
and
sbb
adc
xlat
adc
xor
mov
push
in
cmc
pop
cld
in
arpl
aam
sbb
lds
adc
nop
int3
xchg
pusha
dec
cs
and
into
cmp
int3
ror
push
es
jbe
cmps
xor
sbb
push
sbb
sub
leave
jl
ins
stos
or
fimul
fucomi
mov
jle
lods
mov
pop
(bad)
fdivr
and
mov
sbb
popf
popf
dec
mov
retf
cmp
mov
call
push
jmp
lahf
jns
xchg
test
jl
and
fsub
inc
jmp
repz
dec
xchg
sahf
lods
popa
adc
jb
out
call
out
ret
sbb
shr
je
and
out
sar
mov
or
pop
sub
dec
cmps
add
push
lods
fwait
sbb
jl
or
je
sbb
pushf
sbb
dec
push
jge
and
and
icebp
jl
push
inc
dec
jne
rcl
adc
mov
adc
mov
sar
xchg
pop
lahf
xchg
jmp
fisub
js
add
repnz
mov
cld
mov
out
loop
adc
mov
(bad)
mov
mov
adc
cmps
mov
sub
ret
mov
out
jmp
fidivr
lock
xlat
sbb
push
cmp
dec
jg
mov
fdivr
xchg
out
sbb
(bad)
mov
imul
test
mov
fstp
jb
xor
lock
mov
or
mov
imul
mov
jle
adc
adc
rcr
adc
addr16
push
inc
popa
retf
dec
or
dec
sar
sbb
jne
inc
sti
push
aaa
or
mov
fsub
sbb
fisttp
out
rcr
cmp
movs
in
into
jnp
jo
jecxz
push
test
jbe
jb
loope
lahf
(bad)
daa
dec
cmp
cmps
xchg
mov
jl
ja
clc
imul
add
lods
pusha
jae
fadd
mov
jbe
jb
out
mov
adc
or
call
push
sbb
cmp
cdq
mov
or
mov
(bad)
in
test
pop
mov
jb
xchg
fwait
mov
adc
cli
stos
pop
jb
outs
jmp
sahf
sub
daa
ret
fs
push
adc
add
stos
sbb
push
adc
mov
ja
rcr
aad
lea
xchg
fsubrp
outs
and
cmp
jl
pushf
ds
in
sbb
loope
enter
mov
enter
ins
sbb
out
int3
dec
push
cmp
adc
pop
into
movs
pop
es
or
pop
xlat
movs
push
mov
jmp
outs
and
sbb
push
push
pop
inc
xor
push
clc
mov
outs
cmp
sahf
cmp
push
mov
dec
in
es
ret
sub
jg
mov
psubsb
add
bound
leave
cmp
into
stc
sbb
imul
inc
fxtract
in
xchg
faddp
pop
and
add
mov
or
xchg
ror
daa
in
test
add
fcomi
pop
pushfw
push
or
mov
push
and
inc
jb
je
sub
test
fiadd
fsub
addr16
in
stc
jno
cmp
sbb
shl
in
inc
xor
rcr
ret
push
lea
clc
adc
jmp
outs
mov
fwait
and
mov
in
and
push
mov
xchg
fisttp
sub
inc
mov
pop
in
sbb
mov
mov
into
lock
xchg
xchg
inc
push
push
mov
ja
mov
call
stos
pop
push
fs
adc
add
mov
and
les
sub
movs
call
icebp
push
(bad)
push
mov
loope
popa
sub
(bad)
ja
call
xchg
lds
pop
aad
cmps
int3
aam
xor
mov
imul
mov
pop
(bad)
test
add
pop
hlt
idiv
and
push
sbb
cmps
cmps
pushf
adc
mov
mov
aaa
mov
xchg
mov
or
push
push
pop
push
outs
push
int3
lods
add
int
(bad)
jg
retf
mov
xor
push
inc
sub
scas
mov
jmp
lock
inc
lea
cmovo
adc
push
mov
pop
mov
icebp
and
xor
ja
sbb
fwait
(bad)
scas
push
add
les
lds
cwde
push
icebp
mov
mov
stc
movs
inc
jecxz
mov
adc
mov
retf
call
mov
(bad)
(bad)
mov
fild
dec
ror
jns
dec
imul
outs
add
jne
call
pop
retf
fist
mov
dec
push
hlt
dec
jne
idiv
fst
cmp
retf
cs
add
adc
jae
xor
hlt
out
jp
aad
retf
jg
dec
push
push
mov
jmp
sbb
mov
inc
les
mov
retf
pop
(bad)
mov
jo
or
call
add
fcom
jge
fcom
stc
adc
pop
jae
mov
dec
(bad)
jae
jno
call
push
or
push
or
inc
cmps
retf
pushf
jmp
fnsave
cld
les
xor
push
pusha
sub
scas
cmps
int3
mov
ficom
jmp
inc
fcom
cmc
xor
mov
stos
imul
push
mov
(bad)
std
lock
inc
fwait
call
or
mov
jno
lock
inc
push
push
lock
test
call
sar
cmps
out
mov
scas
jns
pop
lahf
mov
add
inc
pop
aam
jbe
je
and
imul
xchg
xor
ja
repnz
int3
mov
adc
sbb
rol
xor
sbb
cdq
sbb
xchg
in
retf
repnz
sub
loop
cmp
mov
cmp
gs
push
std
imul
mov
mov
jne
mov
out
inc
in
adc
pop
sbb
test
imul
(bad)
push
loope
lods
sbb
lds
xor
outs
add
addr16
inc
inc
jae
push
ins
in
push
pushf
int3
cmp
in
dec
mov
adc
mov
pop
inc
int3
inc
and
es
lea
imul
ss
mov
lds
dec
ror
cmps
mov
dec
out
mov
into
jnp
sub
and
loope
push
dec
mov
push
test
(bad)
jmp
(bad)
adc
fstp
jo
mov
jl
into
or
fadd
js
(bad)
mov
jae
lods
jb
stc
js
scas
rcl
into
call
pop
push
(bad)
rcl
adc
dec
pop
push
pop
icebp
or
lock
xor
or
sti
push
inc
mov
or
cwde
(bad)
inc
push
mov
xor
sbb
dec
and
daa
sub
xchg
dec
popa
push
loopne
inc
mov
mov
pop
adc
imul
icebp
(bad)
call
test
popf
adc
sub
ins
dec
out
(bad)
(bad)
xchg
repz
mov
iret
(bad)
cdq
mov
cmp
mov
cli
into
outs
scas
pop
xor
aam
retf
xchg
outs
xor
fldcw
mov
adc
clc
dec
cld
fmul
loope
xor
out
ficomp
xlat
les
(bad)
clc
add
jae
leave
sub
inc
mov
movups
mov
mov
sbb
inc
jnp
in
add
dec
cwde
mov
mov
fldenv
xchg
and
pop
jae
sahf
enter
jmp
push
pop
pop
pop
or
inc
sbb
push
mov
and
pop
std
dec
push
imul
call
ror
mov
test
sbb
cmps
and
mov
and
jle
jge
sbb
push
sar
mov
rep
mov
jne
enter
xchg
cdq
pushf
fcmovu
mov
test
mov
push
add
fst
js
pop
out
rol
retf
lahf
stos
call
cli
dec
and
imul
fld
lods
repnz
(bad)
push
mov
cmps
loop
adc
xor
xchg
adc
jne
pop
mov
pop
mov
xchg
adc
or
daa
and
cwde
mov
and
add
outs
pushf
or
pop
loop
adc
cmp
cmp
loopne
xlat
cmp
dec
ret
adc
xlat
jno
loope
add
sub
or
ins
push
nop
adc
lock
mov
mov
xchg
jg
mov
ficom
pushf
or
js
jmp
rcl
popaw
sahf
mov
fstp
dec
dec
add
push
or
inc
jnp
clc
fptan
mov
mov
pop
or
pop
xchg
push
(bad)
fdivr
push
push
iret
aad
aad
xchg
mov
cli
add
or
mov
jle
xchg
les
sub
sahf
les
add
pop
inc
sbb
rol
adc
sub
adc
in
pop
dec
in
jns
aam
add
test
dec
push
cmps
jmp
push
jmp
pop
mov
stos
sbb
xor
pop
jno
add
adc
popa
out
mov
daa
xor
imul
int
rol
(bad)
rcl
inc
dec
pop
xor
lods
mov
js
ds
inc
repz
leave
stc
rcl
cld
(bad)
xchg
mov
push
lods
ret
pop
outs
mov
in
push
cwde
adc
lahf
jmp
lahf
cli
add
mov
push
and
push
mov
je
jne
(bad)
outs
jns
test
mov
ret
into
jae
dec
(bad)
std
repz
mov
scas
cmp
inc
and
mov
xchg
pop
mov
into
add
adc
out
or
inc
cwde
sub
pusha
mov
cmp
adc
or
pop
or
inc
into
inc
cmp
or
fisttp
xor
das
sbb
test
ja
push
mov
push
fucom
out
mov
stos
dec
(bad)
add
or
mov
xchg
sub
jmp
mov
jns
sbb
mov
imul
push
test
cmp
shl
sub
(bad)
test
mov
dec
jb
mov
bound
not
in
(bad)
(bad)
pusha
movs
clc
mov
mov
test
and
sub
jne
xor
xor
aaa
inc
pop
jmp
inc
iret
add
pop
mov
add
arpl
pop
cmp
jmp
jnp
retf
adc
mov
or
outs
push
dec
sbb
ds
ret
push
adc
pop
or
mov
cs
ins
jno
inc
movs
lea
sub
cmp
jmp
lahf
sub
ret
adc
scas
jmp
sub
icebp
adc
sub
popa
imul
aaa
fist
outs
inc
sub
arpl
repz
cmp
test
sbb
cmp
sbb
inc
cmp
rcl
xor
repz
and
jmp
arpl
jne
enter
sahf
scas
sub
cmp
or
jle
cmc
adc
ins
xchg
add
mov
ja
outs
sti
xor
arpl
(bad)
out
adc
jle
imul
inc
shr
int3
or
xchg
push
mul
xor
cli
sub
loope
sbb
sub
mov
stc
or
call
pop
iret
arpl
or
or
sub
stos
push
xor
jnp
shl
and
(bad)
sub
lea
jg
pop
jne
out
push
cmp
mov
aad
pushf
pop
rcl
cmps
stos
add
das
cmp
aam
gs
mov
xchg
mov
fucom
mov
fidiv
imul
aad
pop
inc
sub
pop
mov
aad
daa
sbb
mov
pop
ds
xor
call
fcomp
into
into
pushf
icebp
pop
outs
inc
lods
cdq
mov
mov
xchg
mov
js
loop
cmp
jo
imul
in
jmp
inc
push
aad
xchg
rcl
lds
retf
push
mov
out
out
push
ds
add
mov
adc
es
mov
pusha
xor
in
aas
jb
popf
mov
mov
add
icebp
(bad)
and
pop
ds
adc
xor
cld
sbb
lock
xor
jb
jns
mov
out
push
test
arpl
mov
jmp
cmp
add
daa
jmp
sub
arpl
icebp
add
ret
add
xchg
in
mov
cli
inc
mov
dec
aas
dec
ss
iret
pop
mov
mov
(bad)
je
xchg
xchg
pop
stc
cli
jne
cs
mov
pop
inc
ins
cld
pop
mov
shr
jecxz
mov
cmp
push
inc
mov
into
scas
push
push
xor
inc
je
cli
js
cld
pop
bound
in
mov
push
fdivr
call
add
dec
loop
into
pop
inc
mov
and
add
inc
dec
xchg
push
imul
or
mov
cmc
lds
inc
mov
lock
mov
xchg
neg
fadd
jbe
sub
sbb
xlat
shl
cmp
mov
stos
inc
mov
add
es
xchg
sbb
jo
cdq
or
fs
test
cwde
jmp
mov
jmp
push
cmp
adc
ins
data16
fistp
sub
jae
mov
inc
or
enter
dec
jmp
xor
cmp
jno
lods
sti
popf
imul
scas
sbb
loope
loope
push
lock
push
mov
dec
repnz
pop
fist
hlt
jle
sbb
cmp
aas
cmp
add
adc
fdiv
pop
rol
xchg
push
test
pushf
sub
pop
imul
out
dec
pop
iret
fs
sub
shl
test
pop
test
cs
(bad)
sub
xor
popf
or
pop
ja
cs
cmc
jg
(bad)
hlt
das
mov
sbb
push
pop
cmp
push
mov
xchg
enter
aas
mov
shr
repz
int3
out
sbb
ret
adc
aam
popa
rcl
push
gs
mov
rcl
xor
loopne
mov
cmc
repz
mov
ror
(bad)
arpl
jb
ja
je
in
sbb
mov
not
idiv
or
idiv
add
push
or
ja
in
mov
inc
out
int
aas
cmp
aad
jge
push
mov
push
xor
pop
mov
sbb
pop
pop
pop
inc
push
out
ja
adc
adc
inc
js
ds
xor
stos
xchg
rol
mov
imul
and
push
inc
cmps
sub
in
adc
mov
mov
push
(bad)
jp
mov
adc
cmps
mov
pushf
daa
mov
(bad)
aas
cmp
test
xchg
call
mov
test
jnp
jge
sub
pop
lea
lea
ds
not
in
fld
xor
lods
inc
in
fs
adc
sahf
and
mov
fsub
je
es
or
jo
or
cwde
pushf
mov
imul
loope
jb
or
mov
lock
cmp
jns
enter
or
movs
daa
cmp
iret
jno
or
or
loope
push
dec
pop
retf
push
fwait
loopne
dec
adc
add
adc
pop
in
outs
pusha
ror
jle
and
xchg
inc
repnz
shr
fisttp
mov
test
loop
jne
outs
repz
xchg
loop
add
dec
adc
cmp
xor
icebp
push
jmp
jmp
fistp
sub
cmp
dec
retf
and
ret
jg
lods
arpl
fwait
jne
shl
ret
out
aam
ins
ins
mov
retf
fstp
jnp
jg
mov
repz
or
adc
xchg
xchg
popa
adc
mov
add
mov
retf
mov
(bad)
push
mov
nop
test
adc
sub
or
loope
mov
add
jmp
shl
add
xor
neg
xor
xor
clc
push
xchg
movs
sbb
jnp
jp
out
cmp
fdivr
mov
cmps
xor
test
jl
mov
mov
and
xor
aaa
outs
inc
in
icebp
inc
jl
je
push
fistp
mov
push
and
out
data16
aam
jno
lods
pop
jnp
and
sbb
imul
cld
mov
sub
or
mov
pop
cmp
inc
les
pusha
mov
pop
ss
test
adc
jmp
div
xchg
call
jecxz
adc
out
add
inc
out
int3
cwde
or
f2xm1
ret
mov
div
int3
push
and
add
std
aas
mov
push
je
cwde
leave
adc
jb
sahf
inc
mov
call
fld
jle
mov
xchg
shl
add
je
add
aam
pop
out
aam
outs
daa
cmp
lods
pop
shl
mov
pop
rcl
mov
(bad)
fcomp
clc
aaa
cmps
add
stos
and
call
fsubr
sbb
fwait
push
stos
(bad)
and
sbb
mov
das
retf
cmp
daa
fisttp
mov
loope
lock
into
int3
dec
add
mov
mov
cmp
aas
cli
scas
loopne
iret
fstp
mov
xchg
cdq
xor
mov
dec
add
cmp
pop
jae
mov
js
fs
inc
mov
ja
or
xchg
mov
aam
call
jb
add
test
ins
add
cs
les
sub
outs
shl
(bad)
out
cmp
rcr
mov
dec
sub
rol
inc
add
stc
jnp
lahf
sub
ins
rcr
sbb
mov
cwde
call
pop
cmp
add
retf
or
pop
pop
xchg
push
push
retf
fwait
lods
xchg
pop
(bad)
pop
xchg
mov
dec
mov
mov
cmps
fwait
adc
and
inc
outs
cs
xchg
sub
lahf
jb
xchg
pop
je
loopne
fstp
mov
push
mov
push
inc
jl
sbb
movs
daa
sbb
xor
sbb
stos
aad
sti
(bad)
jmp
mov
pop
popf
leave
ja
or
sub
push
imul
sub
mov
pusha
pop
push
jae
shl
ins
add
(bad)
mov
movs
or
mov
ja
push
sbb
mov
(bad)
aam
dec
and
nop
mov
fwait
aas
in
or
pushf
in
mov
push
ret
cmp
cmp
and
jns
popa
or
js
jmp
shl
(bad)
jmp
sbb
popa
dec
(bad)
arpl
retf
xchg
popf
imul
mov
push
cmp
pusha
jbe
lods
sti
jmp
xor
mov
cld
mov
jb
ja
(bad)
loope
je
mov
xchg
cs
in
pop
pop
ficom
arpl
popf
sbb
pop
in
sbb
mov
fisubr
xchg
jne
adc
mov
pop
jle
push
lahf
pop
imul
sub
push
addr16
gs
xchg
bound
sti
iret
lods
je
je
fcmovb
inc
and
push
mov
pop
push
pop
add
cwde
stc
push
out
clc
dec
and
mov
inc
outs
in
(bad)
mov
cmp
inc
leave
push
loopne
aam
mov
dec
inc
add
mov
cmp
(bad)
cmp
pop
je
cli
push
int
pop
mov
sub
pop
imul
lods
mov
imul
jmp
mov
fistp
lds
cmc
cmps
retf
ja
fst
adc
rcr
(bad)
in
hlt
mov
sbb
jl
loope
fdiv
in
out
xchg
xchg
test
mov
sbb
enter
push
test
mov
push
out
leave
addr16
lea
jecxz
adc
pop
ret
jne
mov
iret
xchg
pop
fcomip
bound
add
outs
mov
test
push
mov
imul
shl
test
ins
adc
push
or
push
cmps
sub
xchg
mov
movs
and
ja
leave
inc
jl
sbb
rol
pop
bswap
cmc
mov
xchg
cmp
aas
mov
inc
mov
jo
test
fstp
pop
xor
dec
sahf
movs
sahf
imul
jle
jle
outs
int
shl
or
dec
je
idiv
sub
inc
cmps
sbb
jno
sbb
sub
clc
dec
fs
cmp
lahf
hlt
movs
and
pop
js
xchg
sub
int3
inc
(bad)
and
mov
stos
enter
loope
jge
cmps
stc
push
mov
jns
(bad)
sbb
setl
jns
shr
mov
retf
sbb
push
adc
sete
pop
xlat
or
aaa
dec
mov
cmps
xchg
imul
bound
aas
out
test
pop
cmovo
push
js
shl
icebp
push
pop
mov
nop
cmc
dec
adc
jb
jno
push
mov
hlt
push
xchg
neg
push
cmps
call
lock
out
test
xchg
inc
pop
aas
mov
fild
inc
fwait
sbb
lods
inc
mov
xchg
xor
popa
mov
mov
mov
sahf
repz
xchg
jle
shl
push
xor
out
daa
xchg
cmc
pop
(bad)
fisub
je
int3
fisttp
inc
jns
stos
push
adc
push
mov
repz
or
jns
cs
add
scas
popf
stos
lods
cmp
test
adc
xchg
mov
icebp
xchg
stos
dec
and
(bad)
in
icebp
call
adc
push
mov
and
sub
data16
push
fdiv
or
cmp
push
fist
in
xor
(bad)
xor
xchg
cmp
arpl
adc
pop
mov
push
aas
sub
cs
outs
jg
neg
pop
cwde
push
dec
sti
(bad)
nop
fistp
mov
sub
xchg
jb
retf
cld
popa
cmp
in
loopne
adc
push
loopne
cld
dec
sahf
xchg
ins
loope
pop
ret
movs
add
mov
dec
jg
ret
add
div
sbb
mov
int
js
adc
xor
xchg
movs
loope
dec
scas
(bad)
dec
xchg
xchg
mov
out
inc
xchg
sbb
add
sub
dec
in
jnp
aaa
call
mov
mov
mov
test
pop
jno
pop
je
out
int3
dec
add
jb
int
pop
mov
jns
adc
das
mov
std
mov
and
repnz
mov
add
cdq
mov
jmp
xor
clc
adc
icebp
fnsave
cmp
add
inc
aas
fcom
push
into
push
pop
and
adc
scas
sbb
push
stos
mov
cmp
addr16
mov
nop
inc
outs
fwait
pusha
ror
mov
pushf
call
sbb
loopne
lds
(bad)
pop
mov
cmps
sbb
sbb
pusha
sbb
pop
retf
xor
daa
adc
dec
and
ds
push
and
add
(bad)
pop
and
ja
loopne
es
js
and
jecxz
data16
add
ja
mov
inc
das
xchg
int3
mov
(bad)
in
in
pop
pop
aaa
out
data16
leave
pop
aam
jo
push
add
and
xchg
cmp
xor
shr
(bad)
adc
pop
fsubr
scas
xchg
sub
mov
jmp
mov
sahf
pop
fistp
mov
xchg
pop
adc
xor
jae
mov
mov
(bad)
or
push
scas
fcomip
xchg
imul
sbb
adc
xchg
aad
pop
xchg
in
inc
repz
repnz
push
jecxz
les
xchg
nop
sub
int3
xor
sbb
pop
xor
pop
mov
sahf
sbb
imul
ds
jg
xor
popf
xchg
sar
adc
cwde
lods
repnz
jnp
imul
add
jbe
dec
std
lock
inc
in
mov
jl
mov
adc
add
out
shl
into
inc
xor
sbb
gs
(bad)
imul
inc
retf
push
call
mov
scas
mov
xchg
imul
xchg
sbb
mov
mov
inc
add
sbb
fwait
sbb
xchg
xor
into
outs
xchg
outs
cwde
add
js
sub
and
sbb
pushf
adc
lods
cmp
call
mov
pusha
inc
aas
ja
dec
pop
ins
and
daa
pop
dec
jmpw
out
iret
imul
imul
xchg
mov
idiv
out
adc
jp
mov
mov
(bad)
outs
cwde
std
push
inc
arpl
push
xchg
sbb
fcom
jns
ins
sub
mov
jle
mov
cdq
adc
push
or
inc
jno
mov
push
push
or
push
call
cmp
xchg
add
push
xchg
jmp
or
jno
mov
nop
ret
mov
mov
or
mov
push
shr
sub
in
cwde
and
mov
dec
mov
(bad)
xchg
ret
sub
sbb
adc
pop
fwait
sub
pop
pop
out
fiadd
fild
pop
jns
push
add
dec
aas
(bad)
out
inc
int
pushf
in
outs
and
add
push
push
repnz
dec
mov
and
mov
jg
movs
xlat
jnp
shr
movs
outs
fwait
movs
adc
lea
cmp
lds
adc
ins
arpl
cmp
mov
cmp
enter
(bad)
mov
(bad)
adc
inc
lods
jb
mov
mov
outs
dec
je
mov
pop
adc
inc
add
jo
or
sub
out
dec
and
loop
add
shl
cdq
mov
ss
ds
mov
xchg
push
xchg
push
pop
sbb
in
sub
cmp
out
sub
dec
sub
jl
pusha
sbb
mov
iret
pop
xor
dec
std
mov
getsec
pop
xor
inc
imul
cmp
sub
pop
dec
iret
pop
movs
test
int3
add
aad
jb
rcl
cmp
dec
inc
xchg
xchg
sbb
dec
push
or
ret
dec
stos
sub
test
mov
mov
fisubr
mov
mov
sub
adc
inc
call
movs
dec
mov
enter
jge
xor
shr
mov
call
adc
xor
sar
sahf
movs
loopne
dec
jae
push
add
es
xchg
ds
fcmovnb
jmp
lds
scas
(bad)
pushf
lods
xchg
shr
push
dec
icebp
movs
mov
xchg
into
imul
test
mov
mov
add
adc
call
retf
cmps
pop
inc
loopne
lahf
arpl
jecxz
je
jmp
fs
add
scas
add
pop
cmp
in
mov
cli
jae
cs
add
ja
mov
push
push
fstp
iret
mov
js
das
outs
ss
xchg
dec
pop
mov
into
push
rcl
popa
sbb
out
ds
cmp
sub
xor
shl
pop
mov
inc
fist
add
and
cmp
mov
les
mov
mov
ins
pop
js
popf
sbb
pop
ins
mov
add
add
mov
xchg
pop
xchg
fcmovnbe
or
dec
pop
mov
mov
dec
out
xchg
dec
xchg
or
int
jo
add
jl
mov
in
rcl
stos
jae
dec
or
(bad)
rol
(bad)
mov
mov
add
loopne
ss
fisubr
or
xchg
rol
adc
push
inc
cmp
push
into
fistp
mov
push
shl
sub
outs
inc
xor
mov
loope
(bad)
adc
inc
loop
mov
mov
std
mov
xchg
test
jo
fucom
arpl
xor
pop
inc
icebp
or
mov
xchg
cmp
loopne
aas
mov
imul
sub
mov
mov
hlt
lock
sahf
xchg
jl
popf
mov
xor
mov
sub
dec
push
imul
cmp
mov
pop
cmp
enter
jge
cmp
aas
and
movs
test
sar
jae
dec
add
inc
cmp
xchg
adc
or
in
xor
or
ja
mov
adc
dec
scas
push
xor
or
pop
jle
jb
imul
div
in
inc
cmp
xchg
test
out
retf
int
(bad)
loop
fwait
mov
int3
mov
int
int
mov
cmps
imul
mov
fnstcw
cmp
cmp
clc
les
inc
dec
ret
jp
retf
xchg
into
jmp
sar
push
sub
cmps
dec
xchg
push
das
cmp
mov
ins
sbb
mov
loopne
popa
push
cwde
cmp
sar
lds
nop
xor
adc
cs
(bad)
mov
cmp
nop
adc
or
inc
cld
(bad)
sub
hlt
cmp
ror
mov
ds
adc
add
pusha
aam
mov
jo
outs
dec
mov
jno
movs
dec
sub
fwait
sub
push
fisubr
ins
adc
pop
fisttp
cmp
sti
loope
sti
push
cdq
xor
leave
addr16
jne
in
push
int
lods
pop
test
in
loopne
cmp
repnz
mov
or
outs
xlat
inc
xor
leave
neg
cmps
cmp
imul
shl
or
add
aam
je
fwait
cmovae
cmps
sub
xor
sub
das
(bad)
nop
ins
(bad)
adc
fbld
jb
inc
mov
daa
stos
dec
push
adc
(bad)
sub
xchg
out
sub
inc
mov
ins
nop
test
xchg
(bad)
in
pusha
adc
jb
inc
pop
add
or
fiadd
enter
or
loope
cwde
add
xchg
pop
dec
gs
sub
scas
and
bound
mov
retf
xor
push
fistp
scas
push
aaa
add
push
fadd
popa
out
mov
cli
test
adc
dec
icebp
das
lahf
adc
std
and
add
out
js
ret
or
mov
sahf
cs
mov
enter
push
dec
ins
out
pop
cwde
sti
jb
test
push
aaa
scas
push
neg
lds
sub
lock
or
je
adc
out
ror
sbb
mov
fwait
aaa
or
sub
fistp
icebp
mov
adc
imul
fstp
xchg
mov
or
pop
aas
pop
pop
and
jno
ss
or
xchg
push
adc
jbe
(bad)
in
fadd
cmps
loopne
add
push
(bad)
ror
stos
les
ja
lea
dec
pop
aam
outs
(bad)
js
les
inc
popa
aaa
fisttp
dec
push
xor
sub
or
les
pop
out
cli
sub
push
js
out
mov
ror
and
(bad)
fsub
xor
mov
jb
fwait
xchg
xor
setne
mov
cmp
push
(bad)
das
and
mov
xchg
jmp
ins
loopne
inc
fmul
pop
sbb
ja
cwde
in
aas
iret
sub
push
adc
push
enter
pop
imul
mov
icebp
shr
call
jnp
pop
cmc
bound
or
jno
jne
and
xchg
xor
(bad)
jnp
aad
or
xchg
std
xor
sbb
inc
and
or
mov
mov
call
push
dec
inc
iret
imul
lods
div
outs
sub
into
pop
adc
mov
pop
mov
test
arpl
jno
xchg
cmp
sbb
jb
daa
push
mov
jecxz
fcom
daa
in
ret
int
loopne
imul
rcl
mov
out
xchg
imul
imul
ret
pop
push
das
jae
jmp
jl
aam
push
push
daa
repnz
push
pop
test
lods
and
xor
push
in
mov
sbb
dec
inc
xor
inc
gs
stc
adc
out
call
adc
movs
pop
inc
sub
(bad)
std
sbb
inc
shl
lods
cmp
std
int
sub
mov
shl
pop
gs
imul
fwait
outs
lds
sar
jnp
or
and
push
dec
mov
adc
cmc
jl
in
(bad)
push
fwait
retf
js
push
jnp
retf
mov
aam
push
dec
repnz
ds
retf
ds
xor
shl
in
call
enter
jg
mov
push
xor
rcl
sub
std
and
lods
dec
in
mov
xor
mov
xor
popa
push
call
(bad)
lahf
sub
xchg
jb
stos
mov
and
push
mul
aas
push
stc
out
and
jge
cmp
dec
test
sbb
lods
punpckldq
jmp
dec
dec
push
fsub
scas
push
and
sbb
or
dec
jmp
loopne
aam
add
push
pushf
push
clc
xor
sub
cld
gs
and
test
sbb
fdivr
sub
mov
inc
mov
adc
push
inc
scas
call
pusha
pop
fimul
dec
push
test
add
sub
push
and
mov
les
mov
push
int
and
mov
mov
and
cdq
push
jb
mov
not
jecxz
fmul
add
int3
fwait
push
jo
std
pop
jl
scas
push
idiv
mov
inc
ds
gs
pop
in
aas
scas
sbb
shl
add
hlt
push
add
repz
ins
ret
stc
cmp
jp
fwait
(bad)
jl
add
mov
(bad)
out
mov
cmps
add
jge
arpl
push
int3
dec
add
inc
jnp
in
add
aas
mov
cmp
pop
int3
popa
push
adc
add
jecxz
mov
retf
inc
mov
dec
lea
shl
push
sbb
aad
sti
outs
(bad)
out
popa
dec
clc
(bad)
xchg
scas
jg
mov
jno
lods
cmp
cdq
outs
(bad)
pop
stos
dec
lahf
push
jnp
leave
in
mov
mov
pop
lds
adc
xlat
mov
or
xchg
mov
inc
pop
mov
jb
inc
out
popf
shl
icebp
sub
or
(bad)
push
cmp
loop
ja
rol
out
(bad)
fisttp
mul
sub
bound
inc
xchg
iret
std
mov
or
xchg
cmps
pop
xor
jge
dec
sahf
pop
ret
loop
out
push
add
mov
sub
imul
imul
pop
iret
dec
loope
xlat
dec
jae
or
or
cmp
nop
and
xor
sar
leave
pop
push
or
fisttp
fnstcw
sbb
fdivr
xor
xor
dec
xchg
sub
test
jns
pop
pop
xor
vpcomd
sub
push
xchg
inc
pushf
rol
stos
adc
mov
lods
shl
lods
call
repnz
cmc
jne
pop
scas
lods
loop
leave
cmp
stos
sub
pop
out
fcom
(bad)
push
outs
xchg
dec
adc
pop
mov
mov
pop
test
aam
pop
lods
cdq
pop
pop
in
out
mov
sbb
sub
mov
pop
pop
jg
push
xchg
mov
adc
xchg
in
js
sbb
cmc
mov
xchg
stos
jp
ins
push
cmc
mov
pop
jg
les
int
loopne
inc
mov
pop
out
(bad)
mov
and
add
test
rcr
rep
retf
or
ins
jmp
pop
clc
stos
jae
or
scas
cmp
jmp
fs
xchg
jae
out
inc
cs
or
or
xchg
add
test
sub
mov
jecxz
adc
mov
loop
outs
pop
outs
jmp
ficom
fbstp
imul
in
pop
aam
push
sbb
dec
ret
add
adc
and
ret
iret
jl
or
xchg
ss
push
cmp
cmp
out
add
lods
jnp
xor
mov
(bad)
loopne
movs
lds
hlt
xlat
sub
push
sub
sub
inc
xchg
or
pop
xchg
retf
and
cmp
idiv
in
push
and
fidivr
mov
mov
adc
leave
push
jmp
mov
andps
dec
loope
pop
sbb
jmp
je
fstp
push
cmp
inc
cmp
push
lock
test
cmp
mov
xchg
and
or
mov
inc
fdiv
mov
test
jbe
in
test
mov
or
jecxz
out
and
fwait
ret
push
arpl
dec
mov
jae
fs
ret
xor
sub
out
mov
arpl
imul
xor
int3
fidiv
sub
mov
ss
mov
cmp
jae
aas
arpl
out
xor
neg
pop
imul
lods
not
std
or
hlt
or
jle
shl
xchg
out
lock
xor
sub
jns
mov
push
add
arpl
and
adc
push
cmp
cmp
add
fs
retf
inc
rcr
mov
nop
jp
test
outs
mov
sub
fld
movs
aam
imul
test
jno
mov
jg
fdivr
cmp
out
cmc
sub
jns
mov
xlat
inc
jb
jns
(bad)
js
dec
jae
dec
sbb
cmp
iret
jb
pop
sub
add
lds
pop
(bad)
xorps
add
daa
or
mov
adc
test
pop
lea
neg
cmp
lods
enter
das
sub
sbb
sbb
sbb
xchg
and
mov
in
(bad)
mov
pushf
cwde
mov
cmp
sbb
bound
ret
sbb
iret
mov
sub
pop
(bad)
cmp
cs
jno
arpl
xchg
or
jge
hlt
in
adc
pusha
imul
sub
lahf
std
mov
pop
stos
jno
cmc
mov
and
jmp
push
mov
in
inc
js
in
cmp
sub
sahf
jae
add
(bad)
sbb
mov
and
mov
push
push
xchg
inc
mov
(bad)
das
enter
loop
mov
dec
lock
rol
aaa
jge
xchg
jge
adc
cmp
xlat
fstp
pop
cld
mov
xchg
pushf
jo
mov
push
push
or
das
aad
jp
push
mov
inc
mov
stos
movs
xor
popf
dec
dec
retf
mov
imul
add
in
test
jge
jno
stc
jmp
mov
adc
jno
stos
sbb
lods
ins
loope
xchg
mov
add
cmc
add
pop
in
dec
loope
adc
daa
mov
ret
adc
sbb
xchg
test
mov
shr
dec
popa
mov
mov
lods
cs
sahf
adc
(bad)
sar
dec
arpl
add
push
test
mov
pop
push
mov
stos
rol
sub
gs
sbb
push
pop
xor
jb
nop
call
mov
shl
repz
mov
dec
hlt
mov
adc
sub
cmp
inc
mov
movs
jns
cwde
mov
(bad)
das
dec
lahf
mov
lods
add
aas
(bad)
xchg
arpl
and
xchg
icebp
pop
push
imul
pop
movs
hlt
sub
and
ret
ss
int3
jle
mov
xchg
js
fsub
xchg
test
xor
mov
xor
adc
out
outs
ret
cmp
jle
outs
loop
xchg
mov
cmp
or
das
xchg
retf
repz
jo
and
lds
fcomp
in
jg
inc
mov
push
ja
adc
cmp
push
cmp
sub
mov
and
lods
neg
push
push
int3
call
push
in
imul
mov
(bad)
scas
mov
jle
and
sahf
cld
sti
xchg
pop
in
mov
fisttp
enter
pusha
xchg
jg
(bad)
xchg
data16
add
stos
(bad)
fadd
sub
(bad)
imul
pop
test
cmp
(bad)
js
mov
dec
inc
fidivr
or
jle
(bad)
lods
add
cdq
sbb
ja
call
add
pop
call
jb
lods
addr16
out
push
lahf
xrelease
mov
lods
mov
rcl
inc
jb
push
sub
push
mov
jmp
shl
add
inc
or
(bad)
retf
push
jo
xchg
retf
cmp
push
cwde
call
add
inc
lock
ss
mov
rol
push
les
mov
rcr
xchg
and
pop
ins
jno
jns
adc
je
xchg
mov
dec
fucomip
jg
adc
xchg
stos
cld
out
loopne
stos
add
into
inc
jns
cmp
int
adc
out
scas
ja
test
cmp
rol
add
div
xchg
jmp
lahf
das
jo
leave
lds
aas
out
int
in
(bad)
fucom
fndisi(8087
jbe
test
popa
xchg
pop
jb
nop
sub
and
sbb
sub
out
adc
out
rcl
movs
inc
xchg
push
xchg
and
add
dec
sub
mov
es
push
out
xchg
loope
xchg
xor
dec
cmp
hlt
leave
xor
ds
call
inc
xor
jmp
in
xor
fbld
dec
in
(bad)
stos
les
not
jecxz
and
xor
xor
pop
paddw
and
jb
fst
ds
gs
mov
xlat
rcr
pop
dec
mov
sub
cmp
adc
jl
jge
sub
into
inc
sbb
mov
mov
jno
jbe
add
sbb
vpsubsb
cs
mov
pushf
aam
cmp
loop
mov
sar
dec
cmp
cmp
mov
sahf
jnp
(bad)
iret
xchg
add
inc
mov
push
xchg
movs
push
sbb
fst
clc
fst
pop
mov
mov
pop
iret
call
mov
dec
rcr
sbb
aam
and
leave
dec
ins
fbstp
mov
addr16
mov
xchg
fsubr
cmps
stos
cs
sub
lods
popa
jbe
xor
cmps
test
sti
jmp
lea
hlt
mov
(bad)
iret
mov
adc
jmp
ins
xchg
sbb
pop
test
lods
mov
sub
ins
jae
mov
xchg
repnz
sbb
(bad)
adc
jg
lock
rcr
mov
dec
int3
inc
pop
in
lods
mov
inc
or
in
mov
sbb
movs
mov
jo
lods
add
adc
pop
jp
jmp
ins
mov
cmps
rcr
pop
xor
push
mov
xchg
sbb
dec
retf
icebp
mov
pusha
int
mov
rcr
dec
jo
(bad)
repnz
mov
cmp
sub
mov
not
sar
ins
mov
push
lods
enter
ja
int3
mov
not
hlt
add
pop
sub
or
shl
mov
int3
rol
es
push
(bad)
ret
and
sbb
std
xchg
push
pop
lahf
sub
and
fadd
retf
jecxz
push
inc
mov
cs
pop
sbb
mov
lods
test
repz
loopne
and
and
push
hlt
out
push
cmp
add
(bad)
fistp
cs
or
test
jo
jb
ret
mov
push
pop
(bad)
leave
enter
pop
repz
mov
ins
push
adc
inc
addr16
adc
mov
lds
add
and
popf
ret
xchg
icebp
pop
sbb
cmps
xor
xor
jno
cmps
add
mov
adc
ins
cli
pop
cli
ret
push
fs
sub
jmp
dec
add
cmps
sbb
push
xchg
inc
sbb
out
pop
pushf
or
xor
inc
push
test
cmps
(bad)
dec
bound
adc
mov
pmullw
bts
inc
mov
rcl
repnz
sub
les
cmc
cmp
mov
jl
lock
test
test
adc
mov
adc
or
std
scas
sbb
dec
cld
shl
sub
int3
in
add
es
popf
dec
xchg
sahf
pop
lods
sub
pop
ins
out
cmp
mov
outs
mov
mov
js
outs
dec
test
int3
pop
mov
add
sbb
sbb
jp
jge
or
add
sub
mov
jnp
pop
fwait
test
cmp
xchg
jge
hlt
scas
sub
call
imul
mov
lods
lahf
outs
cmp
and
pop
cdq
fcomi
push
shl
test
sbb
mov
pop
iret
jl
sub
ret
jnp
jg
clc
or
fstp
in
mov
pop
sbb
and
cmps
mov
mov
adc
sub
add
pop
pop
loop
adc
dec
mov
inc
pop
hlt
in
sub
aam
jb
test
push
js
cmp
jl
lea
repz
push
out
lahf
push
xchg
push
int
adc
jle
and
ror
or
mov
adc
dec
mov
sbb
in
lahf
mov
hlt
xchg
(bad)
jne
loope
jns
sbb
sub
stos
shl
out
or
icebp
inc
jno
lahf
dec
mov
adc
ss
outs
mov
xor
mov
shl
jle
cmp
jl
bnd
gs
enter
pushf
in
in
mov
ds
dec
adc
jmp
pop
pop
mov
xchg
dec
lods
sub
fdiv
(bad)
add
dec
sbb
sar
dec
jmp
sub
das
cmc
jne
imul
iret
or
pop
sbb
clc
fsub
and
mov
inc
push
cs
ror
push
iret
in
pop
aas
les
outs
pusha
pop
outs
jbe
aaa
or
in
pop
add
rcl
fs
jb
call
mov
pop
mov
xor
leave
add
and
mov
repnz
cdq
stc
out
pop
fisttp
imul
out
jp
pushf
fs
test
push
pop
pop
repnz
lods
sub
or
stos
ins
mov
jmp
(bad)
dec
leave
push
test
adc
popf
stc
out
and
mov
mov
mov
dec
xchg
out
mov
movs
scas
es
mov
test
scas
in
pop
adc
idiv
inc
mov
dec
je
fistp
sbb
lods
adc
cmps
push
xor
sti
clc
out
sbb
cmp
cmp
push
test
xchg
inc
sub
int3
push
add
dec
and
leave
and
pop
lds
dec
xchg
cmp
popf
(bad)
mov
and
jl
mov
aad
pop
pop
pop
lods
shl
frstor
fbstp
inc
or
dec
ins
ss
pop
prefetchnta
out
push
pop
int3
gs
mov
test
xchg
scas
cmc
cmp
clc
stos
jp
mov
aas
push
xchg
or
not
arpl
into
pop
pop
lds
repz
shl
outs
push
in
and
stos
inc
mov
rol
jnp
push
stos
or
loope
retf
movs
in
jno
stos
xor
push
stc
add
push
cmps
mov
or
fsub
(bad)
lds
jmp
or
out
push
or
jp
add
xor
add
fcmovbe
dec
in
sub
js
hlt
shl
push
mov
std
mov
push
daa
scas
(bad)
xor
pusha
std
push
ins
mov
outs
dec
jl
jno
mov
idiv
arpl
add
(bad)
hlt
cs
cmp
mov
or
dec
lods
mov
call
add
fiadd
add
cmp
jns
push
add
add
js
pop
cmp
dec
push
or
shl
scas
fldenv
or
pop
out
push
lods
push
pop
jle
dec
dec
mov
popa
repz
inc
push
xchg
jnp
xchg
adc
jb
(bad)
mov
or
gs
mov
adc
or
lods
loope
adc
dec
pop
xor
mov
push
mov
add
adc
int
and
out
and
mov
adc
loopne
push
mov
push
mov
leave
xor
xchg
jmp
(bad)
and
pop
mov
repnz
inc
push
push
sub
cmp
jns
xor
nop
xchg
ror
ret
xchg
lahf
inc
retf
push
(bad)
loope
js
pop
shl
mov
out
pop
sar
inc
test
inc
fs
inc
mov
bound
dec
dec
pmaxub
fcmove
lahf
repnz
sub
inc
in
dec
out
aaa
jl
mov
mov
movs
cwde
mov
fstp
(bad)
outs
mov
test
push
cwde
es
xchg
adc
ja
push
jecxz
arpl
loopne
xchg
aaa
or
fisub
fsubr
imul
popa
and
loope
sbb
pop
sbb
js
and
mov
cmp
iret
jo
jae
repnz
xor
dec
sbb
loopne
xor
inc
ds
push
ss
jg
xor
stos
xchg
int3
retf
lds
and
icebp
and
mov
add
shl
inc
or
sar
pop
push
fld
xor
and
ret
jnp
test
lahf
adc
adc
loopne
push
push
in
sub
scas
pop
push
mov
cmps
jmp
adc
cmp
fild
(bad)
fcmovu
in
add
push
inc
call
sahf
retf
call
sub
add
neg
pop
dec
xchg
icebp
stos
mov
pop
ja
lds
mov
daa
sub
add
mov
fistp
mov
push
sub
dec
mov
movhps
mov
fstp
sub
mov
mov
fild
cwde
xor
jmp
test
ror
stos
call
mov
clc
add
aaa
fisubr
arpl
lods
in
mov
cmp
sti
rcr
xor
in
add
scas
add
hlt
add
not
les
jno
retf
nop
adc
cmps
xor
sub
xor
mov
sbb
push
inc
es
dec
dec
jle
shl
jp
inc
sbb
in
jne
out
cmp
push
fnsave
and
add
fs
xchg
daa
mov
inc
fcmovu
inc
xchg
repz
imul
mov
push
pop
add
dec
dec
test
or
pop
mov
out
sub
mov
lock
dec
push
sbb
shl
lods
cmp
lea
sub
and
dec
daa
imul
ds
dec
inc
repz
push
cmp
cmp
pop
out
aas
adc
dec
mov
inc
and
pop
aas
pop
pusha
mov
push
test
adc
push
lods
in
inc
stos
popa
leave
xor
dec
int3
sar
xchg
call
mov
lock
je
enter
cmp
xor
jp
xor
bound
mov
or
xor
mov
mov
add
dec
lods
idiv
xchg
cmp
cs
or
dec
inc
xchg
shl
pop
push
push
rcl
lea
and
aam
or
loop
add
push
inc
jge
mov
loope
xchg
jge
pop
push
das
mov
xchg
fisub
sub
xchg
add
mov
sub
fdivr
adc
push
cmp
inc
and
stos
lock
mov
cmps
adc
cmp
cld
clc
stos
movs
(bad)
xchg
xor
(bad)
mov
adc
jmp
imul
fxch
imul
lahf
ss
mov
repz
sbb
xor
cmp
sub
mov
cmp
ror
in
cli
movs
sbb
(bad)
or
push
sahf
xor
fst
test
or
inc
add
pop
lahf
fiadd
push
repnz
and
pushf
cwde
lahf
jnp
sbb
pop
out
mov
rcl
and
and
inc
out
xor
sub
xchg
retf
dec
inc
xchg
imul
sub
lods
fisttp
lods
pusha
mov
adc
aaa
cmp
mov
fiadd
or
sbb
dec
push
and
sar
inc
adc
adc
push
pop
pop
int
or
sbb
sti
(bad)
jb
pop
xor
retf
adc
xlat
ret
out
fiadd
pop
pop
mov
test
xchg
adc
mov
aaa
cdq
scas
daa
stc
movs
push
std
leave
jnp
xchg
call
xor
mov
push
movs
fcmovb
cli
cmp
aas
and
enter
cmp
mov
ffree
repz
mov
xor
mov
pop
mov
dec
jb
inc
aas
xchg
fsubr
mov
adc
xchg
jbe
xor
int
stc
ret
mov
push
sub
and
sub
movs
add
or
lods
pop
movs
gs
stc
xchg
xor
fstp
ret
jp
sbb
jge
xor
mov
das
pusha
gs
push
lods
out
mov
and
das
xor
cdq
adc
sahf
sbb
inc
cld
sbb
xor
push
add
mov
icebp
mov
outs
fcmovnu
mov
and
ins
dec
inc
imul
add
call
or
pop
mov
cmp
cdq
sbb
cmovbe
mov
shl
pop
add
cmps
sub
xchg
mov
fidiv
xchg
mov
in
outs
test
sub
stos
inc
or
xchg
xlat
or
xor
or
and
xchg
pop
xchg
sub
adc
jns
pop
test
pop
repz
xor
int3
loop
int
mov
pop
or
cmps
jg
fsub
sbb
inc
mov
pusha
sbb
cmps
test
aad
pop
jecxz
ds
mov
push
daa
lods
push
adc
adc
imul
imul
adc
push
mov
ja
pop
popf
sub
cmp
and
xchg
scas
dec
jbe
test
fsub
dec
inc
cdq
pop
add
or
sub
repz
or
test
inc
sbb
sub
js
sbb
pop
lock
jle
jbe
or
mov
out
pop
repz
mov
data16
cwde
lea
push
sahf
ins
push
jmp
int3
lea
or
sub
and
fldcw
xchg
add
lahf
sbb
sahf
ror
pop
pop
jmp
sbb
into
push
je
sub
mov
arpl
fcom
cmp
les
push
or
gs
xchg
shr
push
loop
icebp
jmp
mov
push
movs
inc
in
scas
sub
mov
enter
ret
arpl
pop
cs
cli
mov
sub
das
sar
inc
cmps
test
mov
int
mov
pop
jge
(bad)
lea
arpl
test
mov
shr
mov
sub
sub
and
popa
aam
fs
push
jnp
sbb
imul
(bad)
in
push
test
pop
lods
rcr
sahf
out
or
fdiv
icebp
cld
ret
iret
dec
jo
aad
out
jmp
jae
inc
jb
mov
mov
dec
dec
xchg
dec
mov
cmp
dec
(bad)
mov
std
sub
cmp
aad
or
imul
enter
in
out
stos
mov
mov
xchg
pop
adc
xchg
dec
adc
fwait
lea
add
retf
push
(bad)
cmc
ja
xchg
pushf
mov
inc
lds
fcom
and
xchg
hlt
adc
out
inc
push
inc
cmp
xchg
push
(bad)
jnp
leave
pop
or
scas
sahf
movs
(bad)
cmp
cmp
jo
in
shl
imul
movs
sbb
add
inc
into
mov
inc
scas
mov
cmp
xor
popf
sub
xor
fadd
imul
aas
inc
cmps
jae
test
es
add
add
dec
mov
scas
scas
jmp
pop
jl
call
mov
lods
bound
das
sub
mov
jne
repnz
mov
adc
(bad)
cwde
lds
js
jmp
sub
mov
into
stc
jno
ds
mov
sub
xor
inc
sbb
out
dec
dec
jmp
ins
inc
jle
retf
and
fldcw
mov
and
(bad)
es
ret
cwde
sbb
and
pop
mov
mov
xchg
stc
and
jge
cmps
es
call
stc
adc
daa
push
or
std
hlt
shl
adc
stos
xchg
in
es
mov
fadd
movs
xor
push
stos
cdq
daa
and
xchg
inc
xchg
push
inc
or
xchg
cmc
xchg
jae
lods
aam
jl
fstp
jnp
add
add
(bad)
rcl
mov
(bad)
(bad)
fst
arpl
jne
(bad)
pushf
mov
rol
mov
call
stos
push
in
stc
mov
adc
rcl
ror
out
add
outs
mov
fdivp
das
and
mul
into
fild
xor
ss
cmc
and
cmp
fimul
stc
out
cmc
les
cmps
pop
ins
push
mov
and
outs
xor
sbb
popf
fs
shl
fs
cmp
inc
enter
ja
sub
cmp
adc
sub
mov
dec
cmc
push
mov
mov
sub
clc
int
jo
xor
xor
push
repz
call
in
pop
xchg
repnz
cmp
lods
xor
rcl
jle
and
sbb
mov
xchg
mov
mov
push
stc
lock
lds
push
ins
xchg
loop
or
xchg
dec
push
push
fwait
cmp
inc
xchg
lods
and
cs
in
sub
xchg
push
dec
addr16
sub
iret
(bad)
mov
mov
mov
adc
push
fiadd
loope
fimul
rol
push
xor
cli
cmp
jmp
cmp
arpl
xor
daa
shl
pusha
or
add
leave
xchg
cmp
out
out
mov
sahf
(bad)
dec
push
or
mov
mov
cwde
(bad)
fidivr
in
dec
mov
fxtract
es
(bad)
jg
inc
jae
or
cmp
mov
pop
lds
pop
mov
and
(bad)
outs
sbb
push
push
pop
push
pop
cmp
cmc
shr
pop
ja
and
adc
rol
jg
jae
fs
xchg
xchg
cmp
lock
or
sub
adc
ja
adc
leave
movs
inc
paddb
push
inc
or
sub
push
dec
mov
push
jp
xchg
cmp
or
clc
vphaddd
or
push
sub
xchg
mov
mov
jl
repnz
popf
(bad)
lock
aas
sbb
lds
lds
cmps
mov
mov
sar
rol
fmul
cmp
pop
in
dec
sbb
dec
rol
mov
js
cmps
push
or
shr
mov
popa
dec
call
cdq
and
hlt
je
sub
rcr
fisubr
mov
and
cmp
inc
inc
aad
pop
xchg
test
jne
mov
inc
jae
cmp
retf
add
mov
cmp
push
adc
add
adc
xchg
mov
add
daa
clc
cmp
rcl
and
inc
dec
sbb
and
in
fwait
sbb
imul
test
mov
jnp
cmp
nop
push
aam
jo
(bad)
pop
and
leave
jns
xchg
mov
icebp
cli
add
aas
jae
or
adc
paddsw
or
sub
stc
fcmovnbe
int3
mov
in
test
xchg
and
dec
test
nop
add
test
es
or
ret
clc
pop
mov
and
mov
pop
scas
jbe
dec
nop
adc
dec
dec
fcomp
xchg
test
jg
xor
jns
movs
mov
sub
out
xor
xchg
leave
mov
repz
inc
sbb
mov
cmps
sbb
push
cmps
mov
(bad)
imul
cwde
inc
mov
sti
or
xor
je
out
sbb
fwait
push
scas
lahf
cli
enter
shl
leave
imul
jmp
inc
out
pop
adc
or
out
sbb
aad
aaa
sbb
adc
rcl
jmp
sbb
add
mov
adc
push
ficomp
sbb
add
fiadd
stos
int
mov
inc
aam
xlat
addr16
repnz
popa
rol
push
mov
std
cmp
pop
movs
mov
mov
(bad)
mov
out
pop
int3
into
jl
dec
shl
jge
stos
(bad)
pushf
and
pop
std
cmp
scas
mov
cmp
push
iret
xchg
ret
jo
cld
popf
adc
cmp
pop
ret
push
push
or
jp
sbb
fnstcw
bound
inc
adc
mov
and
jne
retf
jg
fdiv
cmp
fist
add
fstp
xchg
adc
jmp
pop
ins
pop
and
bound
adc
into
stos
fcom
iret
iret
pop
push
inc
stc
push
aad
sti
ds
mov
sub
in
mov
jmp
push
xor
xchg
imul
jo
cmp
xchg
xchg
shr
call
sbb
adc
iret
xchg
adc
add
and
push
aas
outs
sbb
sub
js
mov
sub
into
mov
fsubr
fwait
(bad)
(bad)
(bad)
mov
add
daa
cld
push
sub
push
push
lahf
fcomp
out
and
enter
pop
xchg
xor
pop
mov
xchg
or
adc
sbb
add
fs
jle
repnz
mov
mov
test
cmp
push
jne
shl
addr16
stos
cmp
sbb
retf
lahf
jmp
nop
mov
inc
push
xchg
out
frstor
cs
adc
mov
pop
aad
and
mov
push
push
mov
aad
jp
lahf
mov
inc
inc
pop
out
add
jmp
aaa
dec
mov
cmp
in
inc
add
call
scas
jo
cwde
iret
js
mov
rol
mov
mov
inc
push
xchg
mov
xchg
jge
mov
icebp
enter
ins
xor
pop
out
xchg
das
lods
mov
sti
push
add
mov
push
arpl
sbb
jle
pop
sbb
mov
xchg
mov
dec
rol
ror
sub
xchg
inc
and
adc
push
jns
add
push
dec
mov
fcomp
fldcw
test
dec
jae
loop
xchg
mov
add
ins
mov
sti
inc
xchg
jecxz
mov
movs
adc
sbb
mov
scas
popa
jmp
inc
ret
vpsllq
and
jne
mov
int3
es
lea
add
lds
sub
mov
pop
inc
aad
rol
imul
lea
and
mov
jge
fist
bound
add
mov
scas
sub
popf
fsub
loopne
loope
adc
pop
mov
xor
rcr
adc
jb
add
movs
loopne
cmps
fcomp
aaa
dec
retf
jp
jb
mul
out
es
jmp
and
scas
lea
jbe
jnp
cmp
push
mov
sub
jecxz
stos
fidiv
push
arpl
int
nop
cwde
sbb
dec
in
cwde
mov
in
push
inc
jmp
sub
mov
into
xchg
sbb
jge
xor
loop
aad
xchg
test
std
mov
jno
push
mov
xchg
and
push
adc
outs
mov
dec
into
idiv
cmp
lods
jns
neg
stc
xchg
cmps
movs
push
pop
lahf
mov
push
inc
dec
popf
cld
rcl
leave
and
ret
cli
(bad)
pop
shr
in
jae
push
mov
pop
mov
int3
scas
add
inc
xor
loop
cmps
fs
fst
push
out
shl
(bad)
enter
push
cmp
aas
aaa
retf
sub
fbld
or
adc
cmps
cs
mov
push
xor
adc
or
push
dec
xchg
fimul
mov
pop
out
and
dec
rcr
xchg
mov
adc
push
movs
loopne
push
rcl
enter
mov
add
ret
jecxz
sub
fs
jp
pop
dec
sar
hlt
test
push
and
popf
stos
xchg
add
(bad)
cmc
mov
adc
xor
lds
je
dec
xor
jg
lock
neg
fwait
inc
add
mov
mov
mov
jne
mov
xchg
(bad)
mov
sub
es
(bad)
fistp
mov
inc
aam
mov
retf
inc
nop
pushf
and
test
movs
push
cmp
lahf
lahf
cmp
mov
sub
outs
cmp
xlat
aas
movs
sbb
(bad)
int
dec
(bad)
sub
adc
push
out
(bad)
cmp
stos
cmps
dec
daa
pop
xor
jl
mov
nop
or
jle
adc
and
mov
movs
cmp
sub
(bad)
stc
imul
enter
add
lahf
xchg
or
retf
leave
and
xor
or
shl
clc
sbb
out
and
cs
adc
ret
mov
(bad)
clc
jbe
mov
jno
mov
outs
ss
out
add
ror
imul
int3
adc
inc
dec
aaa
lock
inc
inc
fstp
repz
fwait
mov
xor
loopne
inc
enter
xor
rcl
inc
out
(bad)
(bad)
das
sbb
push
mov
(bad)
cmp
cmp
fisubr
fcmovb
mov
and
jbe
or
cwde
(bad)
in
dec
in
shl
mov
call
mov
or
test
pop
sub
test
push
pop
int
(bad)
stos
xchg
fbstp
lahf
jo
dec
(bad)
jmp
lods
xchg
push
call
nop
jne
xor
adc
mov
mov
mov
into
or
mov
add
push
fwait
into
sbb
mov
rcr
mov
retf
add
jo
shl
inc
dec
push
jae
fs
ss
aaa
rcl
xchg
in
sub
ret
adc
in
jo
or
out
jmp
ror
int
test
cmp
aaa
dec
je
icebp
stos
push
pop
stos
mov
dec
xchg
js
mov
outs
cmp
rol
and
(bad)
ds
or
add
add
adc
xor
xor
and
add
cwde
inc
retf
push
aas
mov
popf
xor
xor
(bad)
mov
inc
outs
lods
imul
test
cdq
adc
xor
pop
ins
and
mov
cmp
mov
lds
shr
test
pop
aaa
xchg
outs
mov
pcmpgtb
dec
xor
gs
mov
hlt
inc
aad
aad
cmp
cmp
test
xor
(bad)
jns
xor
push
jmp
in
repz
shr
pop
loop
pop
shr
push
and
pop
sahf
jecxz
in
in
movs
sbb
sub
cmp
daa
fwait
(bad)
aaa
cmp
jmp
ss
das
popa
cmc
verr
mul
cmp
jb
add
sbb
pusha
mov
pop
fwait
mov
add
mov
mov
push
or
xor
cmps
jo
inc
mov
pop
inc
or
xor
add
cmp
xlat
mov
gs
inc
cld
popf
cmps
xchg
call
ds
jl
fadd
outs
aam
inc
gs
cmp
mov
ds
fdiv
ins
jmp
cmp
inc
cmp
and
add
(bad)
outs
push
daa
add
fld
mov
jmp
outs
mov
sbb
out
daa
mov
xchg
xor
outs
sti
sahf
cmps
shr
in
ds
mov
pop
cmp
xor
dec
sbb
cmps
xor
mov
sbb
ins
xchg
xor
inc
xchg
out
pusha
or
jge
test
dec
sahf
sahf
pop
cmp
cwde
lock
imul
lock
push
sub
push
rol
test
xlat
mul
dec
into
xor
mov
cmps
je
jge
out
lahf
cmp
stos
adc
outs
adc
xlat
jo
int3
gs
rcl
pop
jp
ror
out
aas
fstp
rol
outs
or
retf
into
push
test
xor
sub
push
scas
mov
(bad)
xchg
pop
push
ins
jae
mov
sbb
jae
fidiv
cmp
xchg
mov
mov
inc
(bad)
xchg
sbb
cld
repnz
adc
inc
sti
or
shl
mov
call
bound
sbb
push
dec
std
(bad)
cmp
ss
adc
and
mov
pop
adc
and
mov
sti
jbe
adc
or
aas
pusha
fwait
inc
fwait
mov
pusha
clc
cmp
pop
xor
outs
pusha
retf
scas
call
jae
leave
sub
fs
test
outs
add
or
sar
dec
add
pop
adc
je
mov
fisub
jmp
loope
clc
(bad)
pop
not
jne
mov
mov
icebp
add
push
loop
mov
(bad)
out
ret
mov
rcr
rcr
std
dec
xor
jbe
test
xlat
mov
adc
xor
in
clc
test
pop
xor
popa
jecxz
nop
xchg
mov
cwde
test
xchg
push
scas
mov
sti
popa
cdq
or
js
ins
push
ficomp
sbb
adc
call
lahf
cwde
enter
(bad)
data16
add
or
outs
mov
or
retf
into
sbb
arpl
jo
pop
inc
push
push
pop
dec
mov
dec
fsubr
xchg
popf
js
xor
sub
sar
jmp
in
add
add
pop
out
imul
out
test
mov
add
cmps
popa
out
sbb
mov
or
xchg
or
dec
dec
int3
or
in
scas
test
sub
movs
dec
mov
push
repz
js
mov
imul
out
cld
into
mov
es
pop
jno
mov
bound
xor
mov
or
aas
pop
(bad)
cmp
inc
jnp
pop
mov
dec
push
push
(bad)
das
popf
jmp
rcr
shl
push
xor
pop
jns
(bad)
outs
fs
sbb
scas
(bad)
loope
pop
pop
xor
xchg
icebp
fs
adc
ret
loope
call
fld
ins
mov
sub
jg
gs
idiv
jne
sub
fmul
dec
push
pop
mov
cli
dec
(bad)
sub
sub
inc
cmp
ss
ror
pop
and
(bad)
pop
ss
retf
cmps
lea
mov
fnstsw
nop
into
adc
sbb
in
(bad)
aam
push
xchg
fild
mov
addr16
mov
push
jge
push
sahf
mov
sbb
call
inc
enter
mov
inc
loopne
inc
loope
dec
aas
cmp
fbstp
loope
sbb
lds
adc
dec
clc
aam
rcr
mov
mov
push
push
add
mov
cwde
jmp
lods
mov
pop
mov
sti
cmp
jbe
add
adc
xchg
ja
lock
cmp
cwde
or
lahf
out
fisub
out
cmc
push
scas
sbb
test
jge
fisub
pop
pop
test
sbb
js
lods
jno
in
inc
push
or
jno
aas
dec
ins
popf
lock
pop
shr
stc
call
xor
mov
xor
or
and
loope
mov
mov
jmp
add
sbb
les
jae
inc
xor
es
repnz
popa
dec
xlat
loop
ror
out
jge
aaa
jno
inc
sti
int3
test
and
call
repz
cmc
jle
and
push
inc
cmp
lahf
fsubr
fs
dec
ror
sub
enter
mov
cmc
jmp
mov
cs
push
into
xchg
loope
xor
push
jle
repnz
jmp
leave
cmps
adc
shl
enter
data16
mov
scas
pop
movs
xchg
fs
jg
sar
sub
mov
push
aam
sbb
jo
(bad)
or
mov
aaa
cmp
in
and
cwde
push
mov
pop
mov
and
aad
dec
and
mov
test
jecxz
and
push
sub
and
add
pop
test
fadd
pop
sti
sbb
icebp
pusha
push
jecxz
cmp
imul
xchg
dec
adc
ficom
fucomi
arpl
test
adc
(bad)
sub
shl
mov
jnp
add
les
repnz
xchg
adc
stos
inc
xchg
xor
out
cmc
dec
scas
inc
inc
sbb
inc
in
cmp
inc
cdq
push
sub
mov
inc
addr16
mov
mov
pop
mov
in
ret
inc
out
ja
stc
pop
and
fcmovu
call
and
mov
dec
fucom
mov
inc
sti
inc
cmp
cmp
mov
mov
ret
lahf
pop
jmp
fucom
movs
and
push
pop
aad
mov
retf
jge
sbb
ins
cs
jae
(bad)
and
addr16
or
adc
frstor
retf
retf
clc
sbb
mov
out
mov
ret
push
dec
cwde
cmp
push
in
mov
retf
jne
test
cmp
jnp
ins
int
fs
push
test
es
cmps
add
push
mov
and
mov
mov
xchg
xchg
jnp
pop
jle
and
neg
dec
fcom
lahf
int
cvtdq2ps
inc
ss
aas
push
dec
inc
and
xor
test
jg
pusha
xchg
inc
xchg
inc
mov
pop
adc
clc
add
retf
inc
ja
sbb
out
int
jge
sub
mov
(bad)
mov
xor
fs
cmp
in
mov
pop
sbb
setns
mov
jle
pop
and
mov
popf
sbb
inc
cli
mov
fst
fbstp
add
out
popf
addr16
jnp
clc
aaa
sar
dec
dec
pop
icebp
movs
icebp
cmc
mov
int3
pop
call
push
adc
aaa
mov
jmp
xchg
cld
jmp
adc
pop
shr
cmps
pop
xor
sbb
adc
or
mov
sahf
cld
and
icebp
mov
or
dec
push
mov
push
nop
outs
fwait
mov
pusha
jl
js
adc
(bad)
or
loope
pop
mov
sbb
mov
adc
sti
xchg
sub
mov
pop
ret
or
das
xchg
lahf
pop
xor
cmp
int3
push
xchg
mov
jg
scas
ror
jle
or
ins
jnp
lods
jbe
push
popf
sbb
push
(bad)
imul
js
not
mov
pop
xchg
fmul
pop
xchg
cdq
frstor
movs
ja
div
xor
add
mov
mov
push
loopne
cmp
xor
push
jmp
add
mov
or
push
movups
dec
cli
pop
fild
ds
mov
or
xchg
adc
mov
pop
loope
fs
mov
cmp
jns
imul
push
xor
and
add
fiadd
int
aad
sar
push
jle
retf
dec
sbb
sbb
sub
sub
xchg
dec
inc
test
int
ret
inc
xchg
(bad)
or
push
and
mov
mov
les
jb
jg
and
dec
mov
xchg
cmps
call
sub
fisubr
fsub
push
(bad)
mov
or
js
cmp
ja
push
inc
sub
minps
mov
dec
inc
inc
pop
in
fcom
add
cmp
xlat
ja
aam
pop
push
les
mov
sub
leave
pop
sub
aaa
pop
ret
xchg
scas
adc
popa
ds
mov
inc
jae
fstp
adc
adc
aas
nop
jo
inc
test
inc
dec
cwde
inc
into
test
sub
iret
ja
mov
dec
imul
sub
les
jl
mov
push
xchg
ins
fisub
dec
lock
test
lds
(bad)
out
test
mov
jle
arpl
add
or
dec
sub
in
add
ror
pop
frstor
adc
xor
mov
mov
addr16
lds
and
out
cmps
mov
shl
fidivr
mov
jge
leave
mov
pop
test
in
pop
es
or
repnz
mov
inc
std
sub
pop
out
mov
jp
or
mov
push
mov
cmc
xchg
dec
bound
xor
pop
ins
mov
addr16
push
cwde
call
inc
lea
sar
xor
popa
lock
mov
jmp
nop
and
clc
xchg
push
fs
nop
stos
in
mov
out
pop
test
shr
inc
movs
es
mul
loop
xor
out
(bad)
cwde
mov
xchg
movs
(bad)
cdq
cmp
dec
aaa
imul
add
scas
or
mov
rcl
and
ror
repz
jmp
jbe
mov
or
std
adc
jg
retf
imul
lods
add
lods
mov
icebp
call
add
jnp
mov
into
push
or
xor
jno
xor
push
add
loop
adc
push
inc
(bad)
int
das
inc
test
adc
rcl
sbb
ja
and
sub
push
cmp
add
sti
or
outs
movs
aam
and
iret
lds
mov
push
mov
retf
movs
mov
test
aas
mov
and
push
idiv
int
or
fcmovnbe
(bad)
adc
stc
sub
jecxz
mov
pop
mov
and
or
or
movs
int
inc
mov
repz
add
or
or
fwait
sar
and
in
clc
pop
sbb
outs
cmp
mov
test
leave
push
sub
clc
cmps
(bad)
out
cmc
cmp
fnstenv
arpl
dec
imul
out
or
outs
push
daa
push
sbb
jno
and
adc
mov
pop
xor
ins
or
in
scas
sub
hlt
data16
in
stos
cwde
or
mov
pop
ret
ins
test
pop
mov
push
dec
jl
out
je
mov
movs
mov
xlat
cmp
lods
inc
mov
lods
inc
xchg
dec
inc
std
enter
int
jl
adc
test
push
push
hlt
lds
fcom
add
shr
mov
ret
imul
jmp
jl
mov
imul
inc
sub
cld
sbb
or
pop
mov
jecxz
ins
mov
xchg
imul
or
retf
test
push
and
pusha
fwait
jae
cmp
mov
mov
leave
mov
mov
stc
fcom
arpl
sub
sub
mov
mov
dec
xchg
pop
fwait
lods
jno
jno
jnp
xlat
adc
or
cli
mov
and
out
xchg
push
cmp
push
inc
pop
jp
jbe
std
pop
in
sar
inc
add
or
aas
adc
inc
xchg
add
loop
fucomi
arpl
and
add
shr
mov
inc
xchg
mov
fimul
mov
jp
cmps
hlt
inc
repz
push
xor
adc
inc
sbb
cdq
sub
jmp
popa
call
in
dec
push
cmc
bound
aas
in
int3
mov
pop
mov
add
or
pushf
adc
(bad)
xlat
shl
pop
inc
dec
rol
call
std
cmp
pop
mov
leave
cmp
in
addr16
in
mov
mov
adc
sbb
cmp
sti
lds
nop
sbb
cwde
adc
or
adc
dec
inc
je
mov
pusha
popa
mov
cs
cwde
aam
sbb
push
test
pop
not
jecxz
mov
pop
pushf
jo
inc
jae
js
int
inc
and
push
mov
addr16
ss
inc
xchg
popa
ret
xchg
imul
jne
sbb
(bad)
jmp
cmc
stos
xor
add
out
retf
cmc
mov
popa
stos
jno
xchg
mov
fisttp
jns
adc
sub
push
retf
pop
(bad)
or
popa
xor
int
pop
leave
xchg
js
sub
pop
mov
dec
mov
data16
jmp
adc
cmp
iret
jge
enter
shl
push
add
dec
push
mov
call
fidiv
scas
inc
(bad)
scas
rcl
dec
add
nop
jle
scas
fisubr
popf
int
aas
icebp
fstp
daa
push
sbb
repnz
and
scas
inc
cli
xchg
mov
call
cmp
add
inc
loop
push
cmp
and
fnstenv
or
pop
pop
sar
hlt
js
jnp
xor
sub
dec
cs
in
mov
mov
xor
scas
and
scas
popa
jbe
hlt
addr16
shl
retf
repz
fimul
push
retf
call
out
ror
pop
aaa
dec
jae
inc
int
fisttp
retf
daa
pop
pop
ret
mov
jne
je
fisttp
jne
jle
ret
cmps
mov
fisub
sub
imul
xchg
rcl
fdivr
pop
nop
lahf
and
mov
frstor
xchg
fadd
adc
arpl
cli
jbe
stos
jae
lea
ins
js
in
jmp
and
sbb
or
dec
fcom
push
mov
ret
fwait
arpl
pushf
ret
loope
pop
adc
ja
mul
repz
cdq
push
movs
lahf
or
stc
cmc
jne
and
movs
cmps
shl
cmps
dec
dec
xchg
push
jp
xor
dec
mov
jp
and
and
ja
dec
enter
cmp
jae
ffree
pop
xchg
lods
jg
loope
push
and
and
mov
lods
jp
mov
retf
pop
popf
inc
adc
jmp
jle
xor
push
add
aam
enter
popa
sar
mov
idiv
xor
fisttp
(bad)
sbb
sub
mov
or
int3
pop
test
dec
into
cmp
hlt
std
push
test
or
push
mov
mov
repz
xchg
jb
je
mov
mov
pop
popa
jmp
dec
pop
ja
cmps
push
sbb
pop
stc
sar
mov
pop
aaa
sub
or
test
cmp
imul
xor
xor
xchg
dec
add
cmp
inc
jp
das
add
cmp
or
jg
ins
add
(bad)
xchg
mov
or
pop
xor
or
xchg
dec
xor
mov
aad
cmp
inc
jmp
mov
or
dec
cdq
addr16
add
mov
ja
xor
xor
lock
cmp
mov
pop
test
aas
icebp
imul
aam
retf
ds
outs
out
mov
jne
(bad)
in
xor
pop
rol
iret
mov
adc
jmp
int3
(bad)
xor
iret
inc
mov
out
js
sub
clc
stos
test
xor
addr16
bound
adc
mov
mov
(bad)
fisttp
retf
push
xchg
arpl
xchg
out
cli
loopne
ret
bound
sbb
adc
inc
rcl
and
ja
inc
repnz
outs
push
(bad)
cmps
and
add
and
jnp
fisttp
jl
mov
mov
mov
jle
cmc
adc
data16
mov
gs
cmp
and
xor
mov
inc
adc
popf
test
(bad)
dec
enter
or
mov
add
cmc
into
add
aam
popf
repnz
js
(bad)
mov
in
fadd
jp
test
xlat
inc
enter
mul
daa
sar
movs
or
push
add
inc
sub
xor
or
sub
jge
retf
sub
shr
stos
jp
adc
imul
imul
movs
in
mov
add
sub
sub
fiadd
test
(bad)
pop
xor
sbb
mov
inc
in
mov
test
push
leave
jle
pop
call
or
xor
xor
sub
inc
shr
in
mov
mov
push
(bad)
int3
test
stos
xlat
xchg
mov
fild
mov
mov
cli
(bad)
xchg
inc
gs
(bad)
fnstcw
ja
add
inc
xchg
aas
sbb
lahf
nop
jle
xor
add
push
icebp
sbb
test
add
and
cs
gs
push
mov
inc
jns
les
cwde
das
(bad)
cmps
push
or
push
fild
shl
inc
or
inc
mov
mov
xchg
out
pop
sbb
(bad)
js
jge
pop
mov
adc
inc
add
sbb
push
mov
in
inc
push
nop
mov
loopne
lods
cdq
cmp
outs
addr16
pop
sbb
out
imul
sub
(bad)
popa
push
icebp
add
xchg
repz
jbe
test
xchg
mov
mov
jmp
push
add
jmp
bnd
xor
sbb
stos
mov
add
pop
imul
xor
sbb
xchg
std
imul
mov
in
cld
mov
inc
inc
or
mov
es
cmps
cmps
int
xchg
jmp
sub
sbb
fdiv
nop
and
(bad)
xchg
popf
sti
jnp
imul
or
cmp
sbb
pop
jp
iret
ret
ficom
cmp
cld
or
xchg
int
imul
add
xor
sbb
mov
dec
aad
sbb
add
stos
or
dec
loop
and
std
add
(bad)
cmp
(bad)
xor
or
xchg
xchg
pop
jecxz
xchg
cld
adc
mov
inc
mov
pop
in
leave
leave
inc
and
(bad)
or
aam
leave
xor
cmps
xlat
in
push
mov
inc
sti
adc
adc
cmp
icebp
test
arpl
push
out
mov
in
or
retf
mov
movs
hlt
jmp
mov
cdq
push
dec
xchg
mov
add
cmps
aaa
add
add
aaa
sbb
clc
(bad)
ror
jecxz
add
jg
retf
adc
sahf
fld
cdq
rcl
mov
inc
or
aad
fdiv
int
mov
or
loop
in
adc
nop
inc
fs
sub
or
sbb
adc
dec
mov
cmps
arpl
jbe
cmc
shl
mov
out
or
adc
in
scas
cwde
out
push
fdiv
push
dec
mov
xor
sub
fcmovb
push
cmps
data16
(bad)
bound
adc
jge
jg
imul
add
pop
jb
push
outs
outs
pop
cdq
dec
test
push
in
stc
push
cmp
gs
loop
popf
inc
xor
sti
mov
push
nop
jge
xchg
jge
in
stos
repnz
push
test
enter
scas
mov
stos
cmp
and
(bad)
mov
ret
push
scas
sbb
cmps
and
cwde
dec
sub
and
sbb
(bad)
sbb
out
lods
out
aam
movs
lahf
stos
xchg
mov
ficom
or
mov
int
sub
iret
sbb
repz
mov
popa
bswap
loop
mov
outs
cs
or
mov
fmul
sbb
push
mov
jb
movs
stos
(bad)
xchg
fidiv
dec
cs
cmp
shl
jle
mul
dec
test
push
pop
xor
in
mov
clc
cmp
inc
push
loopne
xor
pop
ret
loope
add
rcl
sub
xor
movs
add
lahf
out
imul
add
mov
lods
loopne
inc
cmps
retf
in
cdq
shl
imul
imul
cmp
xor
scas
push
arpl
mov
add
and
add
mov
movs
loop
push
jo
sbb
sbb
stos
pop
fistp
ficom
adc
imul
(bad)
pushf
push
cmc
sbb
out
dec
fldenv
lods
jle
adc
cmp
mov
pop
xor
inc
mov
setp
imul
inc
push
xchg
xchg
aaa
push
ret
rcl
jp
sub
mov
xchg
mov
add
out
mov
scas
mov
iret
imul
cmp
mov
je
or
gs
out
xor
push
sbb
sub
hlt
and
mov
test
push
sub
scas
je
enter
pop
pop
push
imul
push
adc
cmp
mov
push
cmps
f2xm1
adc
jl
jge
repnz
add
or
ja
hlt
clc
(bad)
imul
call
cmp
jle
mov
pop
pop
loop
repnz
mov
and
sub
pop
daa
mov
push
sub
cwde
xor
rcr
in
mov
jnp
dec
push
fsub
mov
xchg
mov
lds
inc
push
ror
mov
dec
inc
aam
push
jne
int3
inc
(bad)
or
pop
jmp
jle
iret
xchg
xchg
add
xchg
add
sahf
xchg
jg
mov
out
mov
cmp
inc
inc
add
sti
xchg
adc
ret
stos
rol
(bad)
hlt
and
jg
push
rcl
les
dec
ins
scas
imul
data16
iret
daa
pop
mov
adc
dec
xchg
das
fimul
fbld
les
cmp
push
les
int
mul
sbb
adc
pop
and
mov
stc
ret
sbb
cmp
scas
je
pop
add
lods
sti
packsswb
(bad)
rcr
or
inc
addr16
into
fwait
pusha
push
or
mov
jne
sub
cmp
pop
pushf
les
call
mov
cmp
mov
out
(bad)
cmp
xchg
xchg
adc
dec
imul
jg
lock
jmp
mov
mov
das
clc
popa
mov
ret
test
out
sti
movs
adc
imul
int
iret
pop
nop
es
xor
call
jecxz
adc
mov
lods
fisubr
mov
sbb
and
cmp
or
call
cmp
aam
adc
and
dec
aad
mov
add
push
repnz
mov
imul
or
cli
cmps
out
mov
cs
sbb
cld
gs
xchg
fsub
lods
mov
call
add
and
test
mov
pop
ins
mov
mov
dec
mov
pusha
xchg
nop
in
pop
pop
adc
push
jo
scas
lods
mov
and
pop
icebp
inc
or
xor
shr
pop
out
ret
mov
pop
push
std
cdq
stc
clc
xchg
pop
sti
out
int3
jp
cmps
popa
sub
das
scas
inc
cmps
lods
jb
pushf
ins
xchg
xor
ret
inc
daa
ins
mov
dec
push
xchg
pop
movs
mov
or
imul
icebp
push
fsubr
push
sub
jne
neg
and
jge
jnp
lods
jnp
dec
mov
sti
std
cmovo
jmp
mov
mov
mov
mov
popa
jnp
xor
(bad)
fistp
xchg
jmp
inc
pop
or
xor
or
inc
stos
(bad)
xor
jne
push
adc
pop
lea
aas
das
dec
and
pop
fmul
test
retf
mov
cmp
pushf
out
jnp
push
ins
jg
(bad)
fcmovb
mov
mov
inc
and
adc
test
mov
dec
in
psubb
push
xor
ja
dec
dec
(bad)
mov
xor
shr
xor
sub
rcl
adc
inc
fstp
dec
mov
ror
out
and
pop
adc
rcl
pop
or
je
int3
or
cmps
add
xchg
push
mov
imul
cmp
ins
cmps
inc
push
sbb
add
fcom
mov
xor
pop
pop
retf
adc
mov
cmp
xchg
or
out
sbb
in
jno
lock
cli
add
mov
jmp
jge
push
popa
dec
in
adc
je
and
pop
rcr
fs
cld
xchg
call
clc
es
mov
pop
jno
stos
into
loop
icebp
repnz
push
sbb
rcl
pushf
test
push
jecxz
jl
sbb
push
movs
fbstp
mov
bound
mov
xor
xchg
out
adc
mov
push
mov
mov
or
aaa
xchg
push
movs
adc
ins
sahf
mov
ror
movq
add
xchg
aad
mov
cmps
lods
push
ror
dec
mov
mov
int
addr16
jo
out
mov
fst
jae
dec
mov
dec
mov
lds
mov
std
sub
mov
movd
jae
fdiv
and
mov
xor
test
push
pusha
call
int
jo
pop
mov
int3
jmp
or
out
pop
mov
or
rcl
test
or
xor
sub
cdq
mov
arpl
pop
call
add
adc
lds
cmp
xchg
in
jae
dec
push
and
add
gs
pop
adc
shl
ret
cli
dec
gs
xchg
mov
popf
fwait
stos
mov
inc
xor
sti
or
call
adc
js
cdq
data16
and
sub
jp
pop
push
xchg
xor
mov
ret
dec
out
xlat
inc
xor
sar
or
adc
lahf
sub
cmp
adc
jmp
sar
push
inc
(bad)
nop
in
mov
xor
inc
lahf
sub
retf
xor
sbb
dec
inc
mov
lods
sub
xor
mov
bound
shl
push
push
jg
das
outs
enter
mov
sar
js
xchg
rol
retf
mov
push
cmp
fisttp
and
outs
push
enter
mov
push
das
mov
xchg
loop
xchg
jge
cs
push
sahf
sar
test
jno
inc
pushf
movs
popf
hlt
and
sub
mov
nop
inc
jb
test
aaa
inc
mov
into
(bad)
sub
and
loop
xchg
sbb
xor
fnsave
jbe
imul
into
xchg
xor
test
stos
pop
cmp
das
adc
enter
sub
mov
loop
push
push
pop
pop
aas
push
cli
gs
jbe
mov
pop
(bad)
sub
sbb
out
push
inc
cld
mov
pop
in
sub
jge
or
mov
fdiv
mov
ror
shl
loop
cmp
mov
xchg
cmps
mov
shr
ret
mov
push
jb
mov
(bad)
loopne
ret
pop
xchg
jo
(bad)
(bad)
mov
pop
jmp
in
dec
push
fwait
in
pop
mov
sbb
lahf
or
mul
mov
loope
imul
add
cmp
pop
pop
stc
mov
mov
add
das
jg
imul
sub
inc
test
push
popa
xor
add
cmp
jmp
xchg
cmp
sbb
data16
test
cdq
test
nop
pushf
and
cdq
push
fstp
jmp
mov
call
and
xchg
fmul
call
arpl
cmps
adc
scas
fidiv
cmp
xchg
inc
mov
call
in
push
mov
nop
retf
repnz
jbe
mov
pushf
sub
sub
xchg
imul
in
imul
pop
xchg
lahf
and
mov
cmc
inc
fldcw
sub
mov
mov
push
xchg
push
and
bound
cmp
mov
les
sbb
ss
outs
pop
das
sub
pop
push
lds
int
dec
fwait
push
cmp
int3
fild
dec
(bad)
adc
bound
jl
jmp
inc
jbe
dec
inc
sub
jp
and
jo
test
xor
jbe
xchg
cmp
xchg
cmp
neg
lds
mov
or
cmp
jg
push
ficomp
stc
xchg
sub
out
jb
mov
je
sahf
cmc
or
retf
inc
add
push
mov
dec
inc
fild
jo
fcom
mov
in
add
nop
jmp
hlt
mov
fcom
mov
dec
xchg
in
pop
jmp
cmp
(bad)
mov
or
mov
std
daa
dec
fmul
addr16
jo
rol
icebp
js
hlt
inc
xchg
push
ins
and
push
imul
scas
in
lock
add
push
aad
adc
lea
stos
rcr
into
xchg
xor
cwde
pop
dec
int3
dec
gs
adc
imul
xchg
add
xchg
fs
fimul
scas
popf
das
xor
pushf
stos
and
mov
hlt
or
xor
ins
imul
jno
fistp
cwde
mov
das
push
push
mov
(bad)
iretw
stos
mov
mov
cmp
in
or
and
push
leave
xchg
push
mov
out
adc
shl
clc
inc
stos
movhps
mov
xor
add
cmc
je
pop
or
call
lods
mov
(bad)
loop
or
fimul
das
cwde
mov
inc
stos
jmp
pop
int
mov
sub
mov
xchg
scas
push
and
inc
ds
imul
out
jl
jo
push
jp
data16
mov
ss
cmps
mov
shr
cli
inc
out
add
adc
sbb
mov
xchg
cs
dec
xchg
or
shl
add
je
sbb
loope
inc
pop
(bad)
sub
xor
sbb
(bad)
jl
pop
std
mul
xchg
jmp
and
mov
(bad)
xchg
in
js
les
push
mov
aad
jp
pusha
mov
pop
ficomp
sbb
sbb
in
repz
jb
data16
(bad)
(bad)
inc
push
mov
fldcw
pop
push
xchg
aas
xor
retf
retf
jge
sbb
cmc
fadd
xlat
dec
clc
sahf
adc
sub
popf
inc
in
std
test
cmp
les
xor
push
inc
lods
fwait
adc
fwait
mov
(bad)
xor
fidivr
test
popa
in
lods
aam
inc
test
cs
int3
mov
push
sahf
gs
jmp
xchg
cmp
fcompp
bnd
mov
je
cmpxchg
sbb
pop
mov
jecxz
and
push
dec
pop
jns
sbb
stc
ins
xlat
push
mov
stc
add
nop
mov
fadd
cmp
or
mov
lfs
and
push
sub
movs
push
push
test
popa
mov
shl
xchg
out
cmps
sub
or
into
mov
test
push
xchg
and
or
dec
movs
outs
jg
ret
fadd
add
sub
add
(bad)
sti
neg
fistp
and
sbb
lea
cmp
or
sbb
ret
and
cmp
and
loop
call
ret
pop
xchg
mov
fidivr
sub
push
cmp
pop
sbb
dec
xor
test
pop
popf
push
cmp
(bad)
out
xor
movs
cmp
jle
icebp
or
push
mov
adc
into
pop
mov
push
sti
stc
nop
dec
jnp
repz
mov
pushf
jmp
add
cwde
mov
push
call
test
push
xor
push
pop
add
in
mov
sbb
push
dec
fisub
pop
dec
add
inc
mov
dec
sahf
and
add
push
loopne
jno
jmp
in
xor
popf
ja
movs
scas
fisubr
loop
push
push
cmp
mov
mov
lock
sar
cmp
bound
cmp
adc
pop
xchg
push
outs
or
pop
daa
ja
es
ja
out
jb
push
pop
jne
not
add
mov
test
dec
ins
mov
and
aam
mov
add
mov
sbb
cmp
jmp
imul
xor
std
fidivr
hlt
sbb
xchg
inc
not
mov
xor
stos
divps
fs
(bad)
and
cmp
div
push
jo
movs
jb
dec
mov
stos
cld
mov
test
jns
inc
mov
enter
jp
sti
int
jmp
shr
cmp
retf
ins
aas
repnz
mov
xchg
jp
and
fst
xchg
dec
xchg
bound
sahf
enter
fadd
pop
gs
pop
fstp
int3
retf
cmp
jo
xor
call
mov
pop
add
movs
loopne
repnz
xchg
sub
daa
movntps
mov
arpl
scas
stos
ret
inc
mov
mov
fimul
cmps
dec
jae
mov
xor
into
add
ret
cmp
cli
scas
cmp
sti
dec
mov
imul
pop
out
cmp
xor
lds
es
sub
sub
cmps
adc
leave
push
push
sbb
into
fcomp
aad
not
push
inc
shl
outs
jne
mov
mov
inc
aas
call
adc
aaa
inc
and
push
and
rol
push
sub
adc
jecxz
(bad)
sti
jo
out
xchg
imul
xchg
loopne
inc
test
add
daa
leave
lds
xchg
loopne
sub
inc
xor
loop
sbb
test
sub
inc
xchg
imul
outs
(bad)
je
xor
jg
cmps
dec
add
xor
int
test
cmp
and
push
popa
adc
int3
mov
jmp
push
ret
div
jb
xchg
jno
add
add
xchg
cdq
and
data16
nop
shl
fnstcw
mov
jecxz
jle
je
xchg
push
pop
and
mov
cwde
stos
mov
push
pop
jb
cwde
mov
in
pushf
push
daa
mov
retf
add
push
pop
fbld
repnz
in
mov
outs
dec
or
jp
xchg
int
int
lock
jne
imul
add
mov
or
imul
jnp
call
xlat
add
add
bnd
inc
imul
inc
cmp
mov
xchg
dec
mov
(bad)
cmps
test
jns
mov
sbb
cwde
fs
enter
sahf
outs
or
jmp
int3
retf
pop
dec
bound
xchg
sbb
mov
mov
mov
(bad)
cs
mov
or
xchg
jbe
or
es
pop
pop
xchg
xchg
test
aam
test
push
pop
repnz
sbb
cdq
push
pusha
fnstenv
dec
in
mov
cmp
mov
cli
inc
cdq
xor
jp
in
inc
in
fwait
xchg
jmp
and
call
pop
push
data16
pop
dec
cmp
or
xlat
(bad)
mov
pusha
(bad)
mov
and
adc
out
pusha
faddp
push
push
and
push
sbb
pop
repnz
add
inc
dec
mov
in
in
idiv
pop
mov
dec
lea
push
vsqrtss
mul
mov
dec
xor
cmp
icebp
adc
imul
sbb
je
cmps
mov
pop
ins
cmc
ja
hlt
rol
fwait
pop
lea
xlat
mov
bound
imul
xchg
out
stc
jge
pop
in
outs
cmp
nop
inc
cmp
jge
push
dec
test
mov
dec
mov
mov
pusha
mov
push
ret
pop
stc
jg
push
mov
cmp
inc
mov
push
mov
mov
scas
add
cmps
cli
cdq
jge
xchg
push
(bad)
cdq
inc
mov
aas
scas
in
inc
adc
push
push
std
call
cmp
jge
and
add
clc
sti
test
scas
aam
int3
es
in
xchg
(bad)
mov
xor
ret
jne
sti
inc
mov
ins
xchg
pop
jge
push
sti
cdq
movs
addr16
cmp
mov
sbb
fisub
cmp
loop
nop
cmp
sbb
enter
pop
iret
cmp
dec
mov
test
adc
loope
lods
push
add
lahf
push
mov
test
dec
xor
ins
popf
cli
cmp
mov
mov
sbb
pusha
call
sbb
outs
test
or
scas
test
xchg
je
mov
jecxz
mov
gs
ins
jmp
scas
in
popa
pop
repnz
add
xor
cwde
ficomp
loop
sub
nop
shr
and
enter
(bad)
lds
lock
add
(bad)
push
in
lahf
mov
push
push
test
cmp
mov
push
cmp
les
mov
mov
pop
daa
test
icebp
imul
je
retf
mov
mov
cmp
mov
ret
fs
inc
or
retf
xchg
pop
out
popa
or
inc
mov
sub
fwait
movs
mov
jns
add
pop
mov
retf
mov
and
aaa
data16
or
xor
or
and
test
xchg
sbb
imul
clc
mov
js
xor
(bad)
inc
xchg
rol
cmp
outs
cwde
cmp
cmp
fsubrp
daa
rol
mov
pop
std
(bad)
jge
dec
xchg
jl
add
daa
aaa
pop
lahf
mov
pop
push
test
loop
mov
jns
scas
pop
push
call
pop
cld
pop
mov
sub
mov
cmps
jmp
xchg
mov
rol
shl
cs
push
mov
pop
not
sub
stos
sbb
push
fdivr
stos
retf
rcl
stos
push
xchg
repz
cmp
test
mov
mov
xchg
mov
or
xchg
call
cwde
lock
mov
sub
ja
push
out
inc
cmps
out
pop
cmp
and
aaa
sub
jb
xor
mov
jle
cmc
std
test
mov
not
jle
out
or
cmp
mov
imul
add
cs
adc
jp
fwait
das
push
out
icebp
cmp
or
push
or
repz
cmp
outs
xchg
es
cld
mov
ins
dec
dec
jle
and
fidivr
jne
jl
add
shl
aam
arpl
pop
lea
sub
(bad)
aas
or
add
fsubr
inc
ss
xchg
loop
data16
xchg
rcr
push
jl
inc
retf
outs
leave
add
call
sub
aad
or
ins
call
add
or
jbe
iret
aad
mov
adc
jno
stos
xchg
xor
inc
js
(bad)
xchg
outs
jl
cmps
mov
mov
or
aad
out
movs
and
pop
dec
jecxz
jno
xchg
push
push
inc
push
mov
dec
cmps
cld
shl
(bad)
cmp
rcr
jnp
test
add
xlat
popa
xor
in
imul
pop
popf
outs
mov
scas
mov
push
and
loopne
inc
adc
jbe
sub
push
pop
ror
sub
dec
jg
mov
xor
bound
push
mov
inc
mov
loop
hlt
stos
mov
pop
cmp
mov
in
sub
retf
out
jmp
mov
sti
dec
mulps
push
jne
out
shr
cmp
jge
adc
xchg
cmp
xor
stc
pop
fcmovbe
jge
xchg
stos
cmp
xlat
dec
adc
dec
sub
in
or
fisub
std
jle
hlt
das
push
cs
pop
push
inc
rol
outs
leave
cli
(bad)
(bad)
lea
(bad)
ret
cwde
dec
packssdw
xor
hlt
jmp
inc
mov
pop
xor
mov
test
pop
popa
pop
mov
scas
shl
jne
jae
inc
cmp
sbb
mov
jo
arpl
adc
jno
pop
xchg
and
sub
xchg
stos
cmp
xor
hlt
jb
or
jb
cli
jge
xchg
mov
inc
inc
xor
jns
test
mov
arpl
cmp
icebp
add
push
lods
ins
fldcw
fbstp
lahf
sbb
(bad)
inc
fwait
pop
mov
or
outs
sub
call
cmc
movs
sbb
lahf
jmp
mov
push
test
fild
cmps
cmp
sub
xchg
dec
sub
push
pop
add
mov
sbb
aad
fs
jle
push
xchg
sbb
loopne
or
test
das
cmp
or
push
fwait
std
mov
sbb
pop
add
mov
retf
pop
inc
in
cs
add
or
sub
mov
dec
cwde
in
mov
loop
mov
mov
dec
pushf
test
lea
dec
nop
leave
(bad)
jp
push
div
cmp
(bad)
(bad)
not
jg
adc
cwde
arpl
lahf
clc
(bad)
jmp
sbb
mov
pusha
das
ds
pop
mov
xchg
repnz
pushf
scas
push
ds
inc
mov
test
gs
(bad)
cmps
inc
add
mov
aam
pusha
fs
test
retf
stos
outs
int
sub
adc
push
add
in
adc
int3
adc
add
xchg
jl
dec
push
rcr
jns
hlt
cmp
sub
or
jne
dec
in
sub
movs
xor
(bad)
ins
xchg
or
fsub
mov
mov
in
jmp
in
push
sub
dec
cli
jge
xchg
loop
dec
pop
ins
push
inc
cld
dec
je
mov
setnp
and
test
hlt
ret
sti
mov
addr16
lods
pushf
movs
mov
mov
inc
push
cdq
push
cmp
inc
xchg
aaa
inc
cdq
retf
cs
shr
dec
lods
popf
test
jo
lods
das
cmps
lock
ins
add
sub
cmc
sbb
jb
xor
and
in
(bad)
pushf
lahf
cmp
cmp
xchg
inc
es
jle
ficom
mov
out
add
dec
push
movs
das
retf
pop
addr16
and
std
push
push
or
dec
cmp
outs
jae
add
jp
movs
outs
sub
inc
or
cli
mov
leave
adc
mul
xor
xchg
add
(bad)
retf
jecxz
enter
dec
fstp
xchg
es
mov
data16
call
ds
adc
lods
fisubr
xchg
mov
dec
jne
cmp
add
gs
inc
movs
in
aaa
mov
jmp
sub
sbb
mov
not
sbb
jb
mov
or
dec
jae
adc
ss
fwait
data16
call
iret
mov
das
sub
int3
movs
mov
into
int3
ja
or
cmps
loopne
inc
sub
cmps
push
(bad)
mov
data16
jg
pop
stos
jnp
pushf
and
loope
or
ror
cwde
out
sbb
into
icebp
cmps
dec
(bad)
sar
sbb
ja
or
push
and
dec
pop
into
mov
push
sub
hlt
aaa
xchg
movs
cld
jecxz
in
jg
bound
pusha
cmp
sbb
xchg
inc
loope
mov
mov
sbb
mov
xchg
add
xchg
sub
lods
jg
iret
(bad)
mov
mov
mov
fwait
les
sbb
xor
xchg
sub
push
inc
sahf
dec
lds
test
fldln2
mov
mov
retf
dec
aad
and
pop
pop
aaa
pop
push
lods
jb
(bad)
addr16
lods
cmp
inc
loop
(bad)
jge
loop
outs
(bad)
gs
call
stos
in
clc
ins
rcl
mov
mov
xor
cmp
mov
lock
inc
add
dec
mov
imul
inc
cs
add
cmp
test
sbb
jne
in
sbb
out
mov
or
mov
ret
push
pop
enter
sub
loop
fwait
iret
cdq
test
ror
(bad)
retf
inc
mov
and
inc
xor
mov
out
push
jmp
in
inc
jb
xchg
jo
xor
mov
mov
or
jno
daa
sub
test
sub
pop
imul
pop
fcomp
or
and
jbe
aas
aaa
pop
int
shl
out
call
push
xlat
pop
lahf
sbb
ins
sbb
and
outs
push
mov
retf
xor
paddw
lods
pop
popa
sub
mov
scas
cmp
pop
lock
lods
lds
dec
inc
pop
sbb
cli
fsub
or
int
daa
push
pop
push
imul
scas
iret
inc
or
inc
out
mov
icebp
jl
mov
jns
rcl
inc
mov
add
pop
mov
mov
cmps
test
cld
inc
leave
in
mov
sub
push
ds
add
imul
retf
leave
(bad)
sub
mov
jns
xor
xchg
or
pop
cmp
inc
sahf
arpl
lods
jno
inc
jb
lds
sub
mov
jmp
dec
cmp
arpl
mov
sbb
add
sti
cmovae
push
cmp
xchg
and
dec
movs
push
js
imul
adc
xor
inc
mov
lock
pop
stos
loopne
push
xchg
loop
mov
jle
jae
mov
pop
or
lods
mov
(bad)
xchg
sbb
mov
sbb
xor
mov
xor
out
cmp
fistp
xor
setp
mov
cmps
addr16
jb
and
dec
add
or
call
enter
pushf
loop
xor
jns
test
sub
mov
in
data16
mov
adc
mov
mov
xchg
inc
ficom
shl
lea
jne
add
mov
or
mov
mov
push
fisub
bound
mov
pop
jnp
sbb
pop
add
movs
dec
cli
sub
sar
mov
push
sti
add
dec
stc
test
pop
dec
inc
aad
jecxz
push
movs
inc
enter
inc
sub
push
call
sbb
pop
or
inc
icebp
ins
mov
lea
loope
push
cmp
push
aam
mov
add
dec
mov
iret
in
or
push
sbb
jecxz
sti
xor
or
add
mov
or
cmp
mov
icebp
sahf
xchg
repz
add
add
dec
pop
ja
xor
xor
fcomi
ja
xor
cmps
add
frstor
adc
sub
out
aas
adc
in
xlat
sahf
out
add
push
mov
cld
add
mov
and
xlat
sbb
lahf
adc
cdq
sbb
xchg
pop
or
xchg
xor
mov
pop
repnz
push
call
mov
outs
fucomip
lds
leave
sbb
or
fiadd
lods
cs
sub
sub
das
fnstsw
(bad)
stos
sbb
mov
outs
call
push
mov
jmp
push
or
and
js
ss
adc
aad
push
dec
push
mov
push
sub
jb
in
push
push
inc
xchg
sti
cmp
mov
add
cwde
sub
in
mov
int3
out
lds
mov
jo
ror
sahf
stos
repnz
push
inc
(bad)
out
and
push
dec
addr16
repz
in
sbb
xchg
jg
dec
and
mov
sub
sub
mov
and
mov
vmread
xchg
test
sbb
mov
inc
or
les
ret
sub
cmps
mov
fnstenv
nop
jno
xchg
jne
pop
in
cmp
cmps
aad
aaa
lahf
cmp
dec
hlt
imul
dec
mov
adc
fstp
pop
fsub
(bad)
aas
mov
cdq
into
into
jmp
fcomp
xchg
nop
rol
mov
stc
pop
out
and
mov
mov
sbb
ficom
rol
push
jnp
jns
jecxz
dec
loop
cmps
dec
lea
or
pusha
push
outs
sub
test
mov
call
jmp
dec
push
sbb
in
in
cmp
ror
xchg
ins
ins
jb
cld
adc
push
clc
(bad)
mov
mov
jae
add
mov
addr16
xor
mov
fadd
cli
jo
retf
lods
aam
jns
dec
cdq
movs
add
jae
and
cmp
pushf
retf
idiv
icebp
shr
xchg
push
cmp
sbb
or
dec
mov
pop
and
mov
mov
dec
pushf
popa
push
add
gs
lahf
outs
ss
fcomp
cmp
xchg
lahf
mov
push
and
inc
jne
sti
dec
cs
jp
and
cmp
stc
sub
addr16
mov
(bad)
mov
add
fwait
jne
lods
mov
loope
adc
in
fimul
stc
call
iret
and
sahf
sbb
je
call
fcom
sbb
pop
pop
xor
test
mov
sti
dec
xor
add
xchg
arpl
push
jecxz
hlt
aas
mov
jge
inc
pop
mov
(bad)
jmp
jo
cdq
cmp
lahf
push
xchg
rcl
sbb
out
inc
out
adc
dec
sahf
add
inc
mov
jecxz
pushf
ja
enter
or
out
retf
into
cmp
imul
mov
jns
out
dec
sbb
xor
outs
mov
cmc
outs
repz
cmp
adc
sub
add
push
aas
sbb
inc
mul
adc
int
and
repnz
popa
or
pop
xor
dec
pop
mov
fdivr
int
push
xchg
xor
pop
mov
mov
aam
fs
(bad)
iret
xchg
(bad)
mov
xor
pop
lds
gs
xchg
loop
mov
xchg
fsub
mov
or
add
aad
or
and
add
sub
adc
xchg
sti
or
int
sbb
sbb
adc
movs
cld
or
xchg
xor
(bad)
cs
xchg
cmp
sub
and
es
dec
pop
shr
int3
jge
sub
push
xor
cs
mov
mov
mov
clc
add
call
or
movs
cwde
jle
dec
sub
mov
push
add
push
test
in
jbe
loopne
std
scas
mov
movs
adc
xchg
xchg
iret
icebp
cmp
stos
adc
inc
inc
mov
jmp
inc
sub
ss
add
ret
lds
enter
neg
mov
ret
pop
ror
(bad)
pop
mov
pop
cmps
pushf
pop
mov
cmp
nop
push
push
std
jmp
addr16
or
scas
movs
dec
mov
in
ds
scas
in
fist
push
jbe
nop
ret
aaa
mov
sub
jecxz
retf
les
sti
mov
gs
jle
pushf
sbb
mov
test
pushf
clc
push
xchg
in
mov
pop
fs
sub
or
cmc
inc
pop
mov
test
push
cld
xor
mov
jecxz
outs
push
and
dec
(bad)
into
jmp
adc
retf
sar
mov
jbe
and
jg
mov
mov
sbb
jmp
cli
xor
arpl
inc
xor
push
sbb
mov
jl
in
sub
hlt
and
xlat
outs
inc
stos
sub
mov
pop
aam
test
sub
sbb
jae
mov
aas
popf
(bad)
call
das
pop
push
iret
(bad)
jbe
add
ss
add
mov
(bad)
test
xor
fs
sbb
xchg
and
add
push
dec
(bad)
repnz
push
cmps
cs
jecxz
push
push
xchg
dec
push
push
mov
stos
adc
cmps
addr16
jno
mov
xor
mov
add
sub
xchg
mov
mov
jb
add
fcomp
out
rcr
not
xlat
sbb
out
cld
jnp
test
stc
fstp
test
push
loope
push
jg
aaa
iret
bound
(bad)
and
addr16
pusha
pop
add
and
pop
ja
icebp
sbb
inc
clc
mov
xor
jle
imul
into
dec
push
call
and
xor
mov
sbb
shl
fidivr
jbe
sbb
mov
pop
cmp
sub
mov
(bad)
mov
pushf
mov
xor
jmp
pop
mov
sbb
push
jle
xor
fstp
sbb
xchg
ror
clc
pop
jmp
es
xor
jnp
push
cmc
ins
(bad)
pushf
out
in
repz
pop
cmp
enter
std
(bad)
ror
or
mov
call
call
test
fisttp
lods
in
push
les
jp
jle
shr
or
fistp
lock
mov
outs
pushf
aam
jno
mov
ror
(bad)
icebp
and
ret
iret
mov
popaw
jb
or
shl
(bad)
jmp
push
ret
and
pusha
test
popf
(bad)
sbb
xchg
in
inc
jns
test
loopne
in
mov
aad
out
movs
addr16
cmps
xor
push
pop
or
adc
nop
sbb
sbb
rol
fidiv
pop
xchg
adc
fld
aam
imul
inc
mov
mov
sbb
test
imul
sub
test
jge
mov
jp
imul
mov
or
rcl
dec
ret
add
bound
dec
inc
fucomi
mov
shr
shr
in
ins
dec
push
push
push
mov
cmp
icebp
sbb
in
retf
or
sbb
and
pop
popf
scas
or
adc
push
mov
out
xchg
and
pop
inc
movs
dec
out
dec
in
jmp
fucom
js
test
push
pop
add
sbb
mov
sub
dec
inc
mov
sub
ret
jle
xchg
sub
sub
sbb
and
mov
lods
aas
and
mov
into
daa
leave
jle
outs
in
dec
mov
add
mov
(bad)
or
cmp
pop
aas
sti
popa
pop
fdivr
sub
cwde
pop
mov
push
push
ret
add
ss
je
mov
dec
mov
sbb
dec
xchg
sbb
push
enter
stos
add
fdiv
push
cmp
jmp
jns
lea
xchg
ror
shr
fadd
fist
and
(bad)
push
sbb
cmps
add
mov
add
xchg
in
adc
ret
repnz
mov
sbb
dec
jb
rol
cmp
lods
rcr
sbb
xchg
repnz
dec
xchg
sbb
push
mov
fisttp
pop
or
sbb
add
jo
pusha
movs
xor
or
mov
mov
and
add
xor
enter
jb
jo
mov
jb
sahf
jb
out
inc
lods
daa
mov
mul
aaa
retf
sub
jl
jmp
jecxz
dec
jns
in
loope
jg
mov
dec
(bad)
push
nop
add
jne
icebp
jecxz
fistp
mov
fs
add
stc
lock
test
xor
add
(bad)
cmc
lahf
and
fs
pop
cmp
out
inc
xchg
adc
aam
sub
mov
fimul
mov
hlt
cmp
je
pushf
pop
hlt
lods
and
(bad)
jns
mov
xchg
xchg
push
dec
stc
movs
aam
dec
and
inc
jmp
xor
pop
xor
pop
mov
jp
int
int
test
scas
push
ins
pop
sahf
sbb
add
sbb
(bad)
jmp
pop
inc
(bad)
push
jmp
loopne
xlat
in
adc
inc
inc
lahf
xchg
xchg
mov
sbb
xchg
(bad)
loop
(bad)
pop
or
inc
cmp
mov
ss
(bad)
mov
dec
xor
lods
(bad)
dec
rcl
xchg
mov
fadd
and
pop
cdq
enter
cmps
adc
or
jnp
push
jnp
pop
nop
mov
je
aas
mov
xchg
adc
ja
fimul
imul
gs
dec
push
rol
add
pop
loope
push
pop
sub
jbe
inc
xor
jae
adc
int
ja
xchg
pop
xor
test
adc
test
retf
imul
add
inc
jae
push
lds
mov
xor
mov
sub
sahf
mov
cmp
push
popa
shl
test
int
les
repz
xchg
xchg
push
sbb
or
lock
xor
(bad)
aad
push
or
lea
push
mov
pop
out
jne
pop
sub
pop
daa
call
and
cmps
mov
add
mov
inc
or
push
push
push
mov
xor
fild
in
jmp
or
cdq
out
les
das
sub
and
mov
push
ret
popa
pop
cmp
stos
or
and
mov
lahf
hlt
js
mov
and
cmp
aam
(bad)
fcomp
or
mov
and
lds
pop
jmp
push
mov
mov
mov
pop
in
sub
imul
adc
jmp
mov
call
xor
ret
stos
pop
add
mov
(bad)
cdq
mov
mov
enter
rcl
enter
xchg
call
repz
mov
fsub
push
imul
jb
sbb
mov
sub
mov
mov
outs
das
je
scas
inc
outs
dec
mov
pop
lock
loope
fwait
inc
xchg
aad
inc
test
ins
call
out
(bad)
std
movs
adc
push
dec
sahf
pusha
popf
repz
sbb
iret
pop
cwde
sbb
lods
inc
push
xor
inc
dec
xchg
mov
into
aad
addr16
lahf
int3
inc
xchg
out
or
sbb
cmp
and
mov
adc
jno
and
out
push
push
pop
pop
test
mov
pop
fxch
jp
das
jb
cwde
push
cmps
test
pop
mov
shl
push
xlat
(bad)
lods
fdivr
mov
inc
aaa
icebp
in
xchg
cmp
es
inc
call
in
xchg
daa
ds
jb
pop
lahf
jb
push
arpl
dec
mov
ret
fs
fstp
dec
(bad)
xlat
push
mov
jl
mov
imul
test
icebp
sub
push
dec
cmc
mul
or
pushf
scas
fwait
push
push
mov
ja
shr
(bad)
add
push
retf
jo
outs
stos
push
mov
cwde
mov
cmp
and
retf
(bad)
adc
inc
bound
cmp
dec
js
or
pop
jecxz
lds
ja
push
out
adc
xchg
mov
xchg
gs
imul
iret
not
dec
js
mov
enter
xor
sar
push
mov
outs
es
enter
mov
out
push
leave
add
sub
lea
cmp
pop
cmc
add
jmp
scas
frstor
ficom
mov
xor
out
sbb
addr16
mov
arpl
cli
adc
shr
adc
(bad)
jecxz
fldcw
pusha
add
jne
adc
outs
retf
bnd
dec
add
xchg
or
les
sar
cmc
sub
ret
jnp
cmp
or
(bad)
or
push
mov
push
fdiv
(bad)
pusha
jb
sbb
out
pop
add
xor
push
jae
aas
div
pusha
fistp
push
jecxz
sub
pop
int3
xchg
pop
mov
push
mov
test
adc
rcr
call
std
mov
push
cwde
push
ret
scas
pop
pushf
pushf
stc
xchg
pop
loope
xor
adc
enter
imul
jns
cmp
es
sub
cmps
pop
js
or
sub
shl
addr16
and
test
xlat
les
pop
jp
push
xor
outs
cmp
jbe
ficom
and
push
jg
mov
aad
aam
hlt
dec
iret
call
jg
mov
adc
(bad)
mul
scas
test
ss
es
cwde
mov
mov
cmp
adc
aaa
stc
mov
pop
dec
stos
loopne
pop
inc
fist
outs
cmp
mov
jo
xchg
and
adc
and
cmp
in
retf
dec
neg
movs
mov
iret
mov
rcl
ds
xor
jns
lock
pop
lods
test
test
sbb
mov
cmp
nop
test
sbb
out
push
or
outs
pop
outs
pop
mov
cs
je
pop
aaa
jmp
aam
shl
sub
test
push
jmp
mov
mov
test
frstor
mov
mov
mov
sub
mov
jp
push
xchg
in
jmp
jge
lds
fwait
int
fs
dec
mov
shl
jecxz
mov
adc
dec
or
cld
dec
dec
or
jo
ret
inc
dec
(bad)
push
mov
icebp
shl
push
xor
lods
arpl
jle
add
fmul
pop
(bad)
outs
xlat
(bad)
adc
in
and
cmc
aam
aam
into
out
fsub
cdq
or
or
push
cmps
inc
loopne
add
mov
out
lahf
fbstp
mov
sub
sti
loop
fdivr
sar
or
xor
mov
or
leave
mov
nop
inc
cmc
cwde
adc
mov
mov
stos
jge
fdiv
out
jp
and
int3
or
pusha
xor
cmc
ja
inc
adc
and
mov
test
fldenv
pop
sbb
das
(bad)
push
jns
mov
in
aaa
aam
fnstenv
mov
jmp
ret
(bad)
fwait
sti
adc
mov
inc
pop
mov
(bad)
fptan
cmc
movs
nop
fldenv
or
retf
nop
lock
rol
out
frstor
shl
sub
fmul
clc
and
out
stc
cmp
iret
scas
push
icebp
mov
jl
repz
xor
mov
mov
stc
(bad)
jns
push
sbb
repz
loop
cmp
gs
mov
out
adc
je
fwait
jmp
int
inc
inc
shr
aam
fistp
iret
cmp
jno
add
mov
lods
dec
call
inc
sub
hlt
or
call
loope
fidivr
jmp
mov
aas
xchg
hlt
xchg
mov
stc
or
nop
cmc
jle
imul
dec
inc
cld
push
mov
(bad)
iret
push
add
xor
test
cli
jg
das
cmp
xor
cs
adc
loopne
xchg
movs
push
add
cmc
xor
loop
or
mov
or
test
and
(bad)
fcomp
daa
pop
imul
test
(bad)
pop
sub
stos
xor
iret
je
lds
sub
mov
push
xor
jns
mov
xchg
repz
xchg
cmp
imul
popf
call
movs
push
leave
shl
xor
mov
jge
lods
loop
movs
jge
jecxz
adc
pop
jo
daa
fdiv
inc
lods
out
daa
repnz
ins
(bad)
and
sahf
enter
mov
in
pop
sub
dec
in
push
lds
lods
mov
dec
scas
arpl
add
loop
fist
mov
cld
sti
(bad)
pop
mov
push
loop
mov
sbb
fmul
test
xchg
stos
adc
and
aaa
das
mov
movs
jno
(bad)
popa
dec
sti
and
inc
stos
sbb
mov
jo
fisub
xchg
sub
into
call
and
enter
ja
inc
aad
add
mov
mov
jno
or
inc
cmp
lock
adc
mov
push
push
sbb
ds
adc
xchg
mov
sbb
jbe
imul
sbb
mov
pusha
adc
ret
jecxz
inc
cmps
das
outs
or
loope
sbb
mov
outs
sbb
addr16
pop
or
cmp
(bad)
mov
lods
ss
not
pop
xlat
fistp
in
jge
xchg
stc
pop
fsubr
fcmovnbe
movs
stc
push
fsubr
lock
test
push
mov
fist
cli
aas
sahf
les
fmul
loopne
or
stc
rcr
rol
test
sbb
mov
mov
jl
ds
jg
sti
movs
cmp
lods
js
leave
loop
enter
stc
cmp
rol
leave
and
ins
fbstp
fst
jecxz
and
pop
sbb
xor
nop
dec
mov
push
cmps
pop
jge
in
sti
lahf
sbb
cmp
push
in
push
stos
icebp
mov
pusha
jecxz
xor
or
xchg
rcr
retf
arpl
xchg
call
xor
mov
call
mov
mov
pop
xchg
inc
ret
call
adc
in
push
sub
test
pushf
sti
adc
sbb
or
scas
lea
and
dec
jle
lods
or
xor
repz
js
fist
push
std
xor
int3
mov
sbb
jecxz
iret
push
into
fiadd
lods
inc
std
mov
pop
dec
(bad)
dec
cli
fcomp
out
inc
add
and
out
mov
lock
push
scas
mov
fcompp
test
cdq
out
fisttp
add
mov
mov
cs
pop
inc
sub
fimul
lahf
push
and
sub
mov
and
jge
cmp
push
je
inc
adc
fsub
aad
mov
adc
mov
cmp
scas
xor
jae
sbb
lea
jg
dec
pop
jne
iret
test
je
retf
enter
cmps
sahf
fwait
std
dec
cmp
movs
movs
push
cmc
mov
ss
and
(bad)
pusha
cwde
shl
mov
mov
setbe
leave
adc
cmp
or
cmps
cmp
cmp
mov
xor
add
dec
cmp
sub
sub
xor
xchg
xchg
jmp
js
xor
push
or
push
sub
sbb
popa
and
rol
mov
outs
shl
xor
pop
mov
push
or
fwait
and
sub
push
push
xor
fisub
outs
popa
or
sbb
mov
mov
movs
mov
stos
inc
(bad)
icebp
sbb
test
cmp
xor
rol
imul
out
inc
inc
push
jle
fild
out
sub
xchg
fild
or
dec
clc
cld
je
pop
mov
daa
lods
out
jg
add
enter
daa
bound
leave
pop
out
arpl
push
ss
mov
xor
ins
pop
cwde
push
call
loop
mov
push
pushf
mov
mov
mov
sahf
pop
jecxz
retf
arpl
jae
cmp
scas
or
pop
sub
fxch
mov
ins
or
cmp
and
arpl
sbb
sbb
push
test
inc
inc
lods
adc
adc
xlat
cdq
cmp
ret
sub
mov
clc
dec
xchg
pmaddwd
popa
dec
mov
inc
les
push
mov
loope
aas
sub
es
or
xor
mov
jae
inc
sbb
pop
(bad)
cdq
jle
out
sbb
(bad)
cmc
inc
shr
(bad)
cli
or
pushf
xchg
popf
push
jge
es
add
mov
xchg
js
jne
popa
call
(bad)
pop
out
dec
lods
sahf
jnp
ins
sub
cmp
loope
(bad)
and
std
shl
fs
pop
iret
cwde
pop
inc
lock
ds
cli
push
in
and
fisub
pop
imul
adc
sub
jno
sbb
ret
cmp
xchg
push
or
cmp
hlt
stos
xchg
xchg
leave
retf
sbb
mov
sub
sbb
test
dec
out
push
sub
sub
shr
gs
out
mov
cs
push
inc
popa
test
pop
rcr
leave
mov
push
dec
ret
inc
add
mov
xchg
push
loope
cld
xchg
dec
add
jle
push
push
push
stos
xchg
mov
sbb
jo
stc
push
int
xchg
lahf
mov
mov
ds
jmp
pop
fadd
hlt
push
and
addr16
mov
xor
sbb
pop
movs
jbe
jmp
xchg
fisttp
mov
sub
idiv
push
push
addr16
and
pop
hlt
leave
js
mov
fnstsw
lea
or
popw
int
jae
mov
mov
(bad)
jecxz
pop
inc
(bad)
mov
je
in
in
or
sub
movs
pop
sbb
jae
loopne
(bad)
rol
sbb
jbe
dec
pop
or
test
sub
ss
mov
push
loopne
adc
mov
push
xor
mov
stc
xchg
dec
add
popa
add
ja
and
sti
mov
jmp
aad
mov
sub
jle
sbb
push
xchg
inc
xor
ret
xor
sub
lods
or
xchg
sbb
xchg
mov
sti
mov
(bad)
fbstp
pop
mov
adc
les
aas
movs
dec
fdivp
sub
jno
inc
gs
clc
or
stos
(bad)
cmc
sti
(bad)
arpl
and
cdq
(bad)
enter
jo
jbe
(bad)
(bad)
mov
retf
aas
inc
jg
sub
sub
cmp
ret
popa
lods
xchg
rcr
aaa
adc
repnz
cwde
call
nop
fild
ret
cdq
jmp
push
sub
mov
and
int3
mov
(bad)
hlt
pop
popf
xchg
ins
in
aaa
mov
mov
sbb
jne
(bad)
js
je
pushf
or
and
adc
mov
(bad)
pop
push
dec
sub
pop
cmp
push
mov
push
jno
pop
xor
push
ret
into
sbb
das
push
fsub
xor
cmps
jmp
cdq
pop
int
pop
xlat
jle
pop
aad
sbb
faddp
repz
push
adc
stos
sub
jg
cld
mov
pop
cmps
mov
push
jmp
scas
aad
pop
jno
jp
and
inc
pop
retf
js
sbb
ret
leave
dec
arpl
sti
jbe
not
and
inc
mov
adc
xor
jae
mov
in
test
jbe
fisubr
nop
scas
mov
stos
cs
jmp
test
scas
lods
dec
sbb
pop
jl
scas
push
push
dec
inc
push
lock
push
cli
inc
cmp
adc
mov
inc
loopne
int
push
fucomip
jo
pop
rcr
call
push
mov
jl
mov
jecxz
aas
sar
sbb
jl
ds
sti
mov
pop
pushf
mov
or
and
(bad)
movs
fidiv
repz
jns
fsubr
fwait
or
mov
or
inc
sub
jge
push
sub
mov
and
xor
sub
(bad)
mov
popf
dec
dec
(bad)
or
dec
push
sub
cdq
(bad)
hlt
sbb
sbb
cli
lods
(bad)
loop
sub
sbb
fwait
stos
fidiv
or
mov
add
mov
pop
or
je
stos
push
cmp
into
loopne
(bad)
cmp
enter
mov
ss
repnz
clc
adc
jp
loope
or
(bad)
outs
dec
pop
enter
sar
mov
lahf
sti
xor
jo
(bad)
retf
js
push
cmc
jge
sbb
lds
cmps
cmp
ret
xor
stos
or
push
push
es
cmp
pop
stos
xor
push
pop
ds
mov
retf
mov
mov
sbb
imul
inc
mov
fnstcw
fld
(bad)
mov
pusha
sub
pushf
sbb
mov
cmp
xchg
js
sub
js
adc
(bad)
hlt
xor
push
(bad)
push
jne
stc
retf
xor
aaa
pop
sbb
cwde
mov
jno
sub
mov
ds
test
adc
mov
fdiv
push
push
sub
int3
mov
jns
imul
cmp
test
mov
xor
lods
add
xchg
bound
shr
mov
inc
in
stc
dec
inc
mov
out
call
sbb
push
xor
and
sbb
adc
call
add
mov
push
add
cmc
adc
adc
nop
pop
out
or
call
ins
sub
call
inc
jmp
ds
push
and
mov
fsubr
sar
fwait
test
pop
xchg
jns
xor
in
repz
rcl
daa
adc
dec
pop
cmps
aas
inc
and
mov
xchg
xchg
ds
sti
imul
mov
fnstenv
loopne
popa
call
xor
jl
and
ret
lock
js
gs
test
xchg
push
xor
and
xor
add
fidivr
outs
fstp
mov
or
sbb
and
call
jg
(bad)
scas
fwait
cmp
dec
jmp
jecxz
(bad)
leave
or
mov
and
ret
mov
ret
fwait
movs
daa
push
outs
test
test
dec
mov
test
aad
inc
gs
jecxz
sbb
addr16
sahf
xchg
push
out
out
cli
xor
inc
mov
inc
xchg
ss
mov
imul
fnsave
fldcw
dec
cmp
in
js
jmp
lea
mov
xchg
sbb
dec
pop
inc
popf
inc
stos
sahf
or
and
shr
mov
jge
(bad)
and
ror
inc
in
imul
cld
pop
iret
xchg
retf
(bad)
(bad)
pusha
mov
ds
sub
out
jecxz
mov
cmps
movs
xor
aad
inc
xchg
sub
push
push
fnstcw
(bad)
outs
mov
bound
adc
repz
cld
pop
lods
pop
call
(bad)
fcmovnbe
push
jecxz
in
xor
dec
in
push
rcr
(bad)
fcmove
test
lahf
ss
stos
repnz
inc
jbe
xchg
fucomip
mov
adc
cmp
or
test
or
inc
push
add
ret
shr
out
adc
cmp
sub
enter
rol
dec
push
les
jp
ja
dec
mov
mov
mov
fsubr
push
mov
mov
imul
xchg
and
test
add
mov
aas
lock
mov
pop
je
repz
ins
pusha
push
jns
push
movs
shr
stc
jno
out
sar
cld
out
mov
pop
push
or
lds
in
xchg
pop
pop
and
adc
push
cwde
bound
rcr
(bad)
clc
out
or
int
mov
adc
ror
or
(bad)
jae
xchg
aaa
or
sub
dec
lahf
jb
sub
es
(bad)
add
xor
mov
jmp
ins
ror
adc
cdq
or
stc
fld
push
int
mov
mov
cmp
nop
sahf
sub
pop
cmp
push
cmp
xor
add
pusha
ds
js
shl
jb
xor
je
sbb
aaa
mov
pop
fist
fwait
or
lods
jo
or
jno
sub
aad
iret
imul
add
mov
fcomp
das
and
jg
push
call
inc
in
mov
fcmovnbe
sti
add
addr16
add
not
mov
inc
sub
or
ds
add
mov
mov
in
cmps
sbb
mov
ds
xchg
cmp
dec
test
hlt
dec
es
push
cwde
or
sbb
xor
shr
sbb
mov
fcmovnb
aaa
jno
stos
sub
mul
mov
test
xchg
mov
jns
push
sub
retf
lock
iret
dec
cli
cmp
dec
(bad)
ins
rol
in
dec
inc
addr16
cmc
sbb
fdivr
add
push
mov
sub
xor
jns
lds
ins
dec
dec
fwait
inc
aas
jmp
fmul
std
sar
inc
clc
push
lods
rol
inc
ins
cdq
cmp
xchg
scas
shr
imul
imul
mov
sub
(bad)
ds
mov
mov
cmp
pop
add
addr16
lahf
or
or
out
cwde
xor
xchg
mov
(bad)
ficomp
xor
jns
nop
mov
sbb
dec
bound
jo
out
add
xor
sub
xor
jbe
mov
sar
inc
cmp
sub
cmp
btc
bound
mov
mov
push
(bad)
fistp
jle
lea
jp
std
std
sar
pusha
stos
jne
sbb
push
push
outs
inc
call
test
ror
inc
pop
inc
fstp
outs
adc
pop
je
in
out
mov
in
xor
jle
pop
mov
jbe
or
ins
push
xchg
imul
xor
popa
mov
js
jg
daa
stc
fisubr
jbe
out
cwde
xor
pop
arpl
xchg
fmul
scas
or
push
mov
cs
in
mov
mov
sbb
in
jne
dec
ins
es
stos
jbe
adc
jle
in
adc
jb
xchg
xchg
xchg
ss
aas
inc
call
add
or
fbld
fs
popf
in
lods
jmp
dec
xlat
pop
push
mov
movs
out
stos
push
push
faddp
push
call
mov
test
or
push
jae
fstp
dec
fsubr
mov
sbb
ins
std
sbb
scas
mov
rcl
hlt
pop
jle
sub
sbb
sti
dec
mov
das
(bad)
mov
push
fld
out
xchg
imul
ret
(bad)
sbb
add
xor
or
sbb
sub
in
xchg
mov
into
ret
(bad)
pop
adc
movs
jb
daa
mov
fild
rcl
and
repnz
cld
cmp
fiadd
or
and
push
push
cmc
and
rcl
sbb
xchg
sbb
ficomp
and
xchg
scas
cmp
push
inc
into
and
or
dec
in
jmp
cs
repnz
push
sub
ja
cdq
in
push
scas
add
or
jo
fisubr
leave
mov
xchg
fcmovne
mov
ja
ins
loop
sub
clc
xchg
sub
mov
adc
or
add
lock
(bad)
and
dec
aam
pop
inc
mov
(bad)
repz
push
pop
pop
jmp
iret
mov
push
lock
mov
daa
js
lds
pop
add
test
mov
pop
out
sti
cmp
cmp
dec
fsub
and
in
les
aam
sbb
sbb
jl
in
pop
out
repz
fisttp
test
sar
lods
push
jle
mov
in
cmps
sbb
and
adc
adc
push
or
push
cwde
out
and
push
call
std
rcl
repnz
fnstsw
iret
and
inc
inc
add
repnz
ret
mov
lods
mov
sbb
rcl
sub
dec
push
frstor
pusha
add
xchg
mov
dec
mov
mov
inc
cmp
mov
sbb
test
(bad)
jbe
ins
jae
pusha
mov
inc
test
lea
loope
(bad)
(bad)
cmps
repz
jbe
es
cmp
push
mov
adc
fs
jae
gs
(bad)
mov
fsubrp
cmps
pop
push
adc
in
pop
dec
repz
call
jmp
and
or
push
add
or
push
push
pop
jbe
dec
xor
test
sub
xor
pop
xchg
sub
iret
loope
out
push
rcl
jae
jecxz
pop
les
stos
mov
pop
cmp
inc
int3
pop
int3
shl
jmp
inc
adc
and
sti
sbb
jo
ffree
ins
test
push
sbb
or
je
aad
xlat
in
push
add
jmp
les
push
lock
jge
push
cmp
xor
enter
shr
sub
aas
test
out
(bad)
cmp
ja
xchg
ficomp
in
les
test
mov
lar
loop
daa
call
inc
sbb
add
jl
adc
cwde
pusha
xchg
sbb
je
fcomp
mov
dec
cmp
sub
push
dec
aam
in
jae
fwait
and
sub
or
xchg
sub
mov
nop
sbb
data16
xchg
in
push
ins
cs
mov
mov
or
jl
rol
popa
dec
or
dec
pop
add
ret
or
icebp
imul
mov
jecxz
inc
jl
out
jnp
imul
test
shl
test
and
pop
push
aam
retf
popa
shl
xchg
jae
fistp
retf
jo
jb
xlat
adc
sub
je
and
and
int
cmp
aam
mov
adc
dec
fist
aas
jl
xchg
jmp
(bad)
out
inc
cmps
pop
and
fadd
mov
cdq
imul
adc
pop
cmps
call
push
inc
fnstcw
adc
out
push
in
adc
pop
dec
ret
(bad)
xchg
or
and
shr
dec
cmp
bound
jae
ja
sub
cs
inc
stos
mov
jmp
dec
inc
sub
loopne
cmp
mov
jmp
arpl
leave
enter
outs
sub
outs
xor
dec
xor
mov
in
aad
test
call
fbld
ror
(bad)
iret
pinsrw
mov
sub
hlt
inc
jb
and
(bad)
push
das
push
or
push
inc
or
(bad)
(bad)
call
xchg
cmc
inc
and
sub
call
icebp
mov
sub
and
mov
jle
repz
std
pop
inc
std
test
pop
push
fld
shl
pop
adc
and
sub
lods
adc
fbstp
ins
mov
push
xchg
mov
push
pop
inc
mov
in
out
mov
shl
sbb
test
mov
out
adc
lds
inc
inc
jne
cwde
push
sti
add
test
push
sbb
fcmovnu
pop
dec
mov
push
cld
lahf
and
sbb
out
mov
or
mov
js
push
xor
int3
loope
shl
xchg
test
mov
enter
adc
sbb
or
je
movs
daa
push
leave
test
pop
fs
in
xor
out
mov
and
jmp
dec
call
or
es
mov
xor
mov
aam
push
sbb
into
popa
test
mov
arpl
arpl
xor
sti
add
sbb
int3
sub
div
push
and
div
icebp
(bad)
das
mov
pop
and
xor
inc
and
mov
call
adc
out
add
outs
jae
outs
xchg
imul
cwde
dec
dec
add
xchg
les
dec
das
sahf
mov
stc
jb
cmp
jae
ret
inc
inc
jae
ret
xchg
sbb
adc
cld
pop
mov
cmp
xor
cmps
aaa
sbb
inc
mov
pop
cmp
aam
(bad)
xor
xchg
or
dec
fisttp
data16
dec
and
add
sbb
mov
pop
jbe
aaa
rcl
(bad)
les
in
mov
(bad)
lock
loop
pop
push
out
inc
mov
fs
or
jbe
(bad)
pop
mov
add
cmps
fimul
and
and
inc
std
xlat
mov
mov
addr16
(bad)
xlat
fnstsw
mov
pop
xchg
push
loop
dec
add
push
add
dec
push
test
mov
xchg
jl
mov
cmp
push
cld
xchg
sub
xor
sub
test
inc
gs
in
std
mov
pop
mov
pop
mul
sub
add
xchg
dec
test
cld
lods
cmp
(bad)
dec
lods
mov
mov
xor
jmp
push
test
leave
aad
pop
cli
stos
ja
int3
ss
add
stos
int3
push
and
sub
aad
imul
rol
cli
push
inc
fst
mov
push
mov
int
stos
and
(bad)
ins
mov
nop
jg
add
popf
ja
xor
int3
adc
mov
out
cmp
(bad)
fnstcw
xor
out
dec
jp
adc
pushf
or
leave
xchg
and
mov
pop
xchg
and
into
jns
cmp
mov
mov
xor
jl
and
imul
cdq
or
sub
repz
aas
mov
lods
jo
lods
sbb
pop
imul
add
js
pop
data16
add
push
lods
shl
dec
adc
push
adc
mov
lahf
mov
xor
pop
jnp
js
outs
sbb
in
mov
loope
lods
mov
sbb
add
enter
push
je
outs
mov
arpl
nop
xchg
mov
mov
add
push
cs
pop
sbb
(bad)
or
xchg
out
mov
cmps
pop
pop
rol
popf
ret
xor
nop
pop
stos
cmp
mov
inc
mov
pop
pop
xchg
cmp
lds
inc
mov
mov
dec
jb
mov
sub
ja
xchg
mov
fcomp
jbe
sbb
clc
or
mov
test
xor
pop
xor
xchg
fsubp
mov
retf
add
mov
pop
sbb
inc
lea
or
jne
add
mov
add
(bad)
(bad)
cmp
out
cmps
sbb
shl
mov
push
lods
aad
aad
xor
adc
pop
sar
aam
(bad)
mov
inc
popa
int3
jmp
repz
mov
iret
lock
sti
aad
jb
mov
sbb
(bad)
fstp
aaa
ja
xchg
mov
ins
movs
mov
shr
sbb
or
iret
jl
push
cmc
outs
aaa
addr16
neg
xor
leave
sub
popf
scas
(bad)
mov
es
in
lds
lea
mov
xor
(bad)
and
sub
pop
jne
push
xor
pop
mov
or
scas
mov
dec
and
mov
imul
adc
and
aaa
ds
mov
shr
hlt
xrelease
nop
jae
or
pop
ins
fld
mov
and
xor
(bad)
adc
aaa
in
in
inc
ins
sub
(bad)
stos
sub
push
cmps
mov
shl
outs
xor
dec
xchg
sbb
cmc
jmp
xchg
out
pushf
fptan
arpl
mov
mov
sub
inc
gs
test
retf
mov
mov
lods
push
scas
rol
adc
sbb
mov
mov
test
cmp
movs
or
inc
add
inc
in
sbb
inc
mov
retf
outs
cmp
(bad)
mov
inc
jbe
push
pop
mov
sar
jl
sub
sub
xlat
outs
idiv
push
mov
sti
(bad)
inc
push
xor
(bad)
pop
cli
daa
lds
inc
jge
jl
mov
jns
pop
xchg
test
icebp
mov
add
jl
int3
and
xchg
(bad)
(bad)
dec
nop
scas
jne
clc
mov
add
mov
jbe
hlt
cmp
push
pop
cli
and
dec
stc
jle
out
sbb
repz
dec
fidivr
pop
inc
popf
or
sub
push
mov
push
sub
mov
or
les
test
sub
leave
fisttp
mov
and
mov
sbb
or
pop
jnp
mov
add
jns
cwde
or
call
xlat
in
hlt
xchg
jmp
int
sbb
pushf
dec
in
gs
bound
(bad)
mov
jmp
mov
xchg
or
push
stos
and
cmp
mov
or
ins
das
or
sbb
pop
mov
mov
xchg
jno
push
push
mov
fdivr
inc
xchg
mov
xor
retf
imul
movs
aaa
adc
in
xor
add
sub
mov
sbb
sbb
cmp
test
mov
pop
fs
mov
data16
ds
push
idiv
mov
cmp
push
mov
jnp
(bad)
outs
rcr
and
aam
pop
jecxz
popf
movs
sar
xchg
jge
cmp
(bad)
stos
mov
aam
ins
ret
jl
sbb
imul
jno
lahf
in
adc
and
xor
leave
xlat
jo
adc
jbe
out
and
ss
popf
mov
sub
aad
cmp
sahf
sahf
aad
std
or
stos
push
jge
test
dec
pusha
pop
(bad)
(bad)
mov
call
test
test
pop
icebp
enter
icebp
sub
(bad)
adc
sub
je
aad
dec
in
lock
lock
adc
sbb
xchg
or
mov
push
cmp
sub
jns
(bad)
(bad)
pop
jp
call
mov
fisub
pop
aas
xlat
xor
scas
jns
mov
ins
out
jne
std
sub
loop
or
jle
pop
jne
stos
cmp
int
jmp
in
push
mov
ja
xor
jo
scas
or
nop
movaps
retf
imul
inc
imul
ret
arpl
cmc
fcom
jo
push
in
std
sbb
mov
mov
pop
retf
repnz
dec
and
addr16
leave
pop
test
cmp
xchg
or
xchg
push
lock
jae
retf
wrmsr
loope
xchg
pop
jbe
lds
jl
aam
dec
aaa
adc
lods
xchg
in
lods
sub
dec
rcr
movs
xor
xor
adc
push
lahf
das
test
mov
cli
xchg
jbe
in
and
jle
imul
sti
inc
xchg
pop
mov
jge
mov
mov
je
in
mov
push
ins
mov
rcr
fisub
or
inc
jmp
dec
push
sbb
dec
test
dec
add
xchg
pop
rcr
leave
cmp
retf
pop
push
pop
cmps
cmps
loope
cdq
inc
jg
xchg
mov
sbb
xor
imul
enter
or
and
inc
adc
test
ins
or
dec
mov
and
icebp
imul
ja
dec
mov
stos
sbb
cld
cmc
add
xchg
in
mov
ins
sub
fisub
add
push
arpl
mov
xchg
or
push
mov
lea
into
into
sbb
mov
movs
ja
nop
into
popa
xor
cmp
hlt
inc
inc
sub
addr16
inc
out
in
add
pop
imul
inc
in
lea
clc
call
jmp
(bad)
push
mov
pop
fidivr
add
cmps
dec
ins
and
cmp
mov
aas
mov
and
cmp
in
shl
push
sbb
outs
div
out
pop
adc
jo
psubusw
and
pushf
mov
dec
imul
bound
jnp
or
push
bound
(bad)
xor
adc
inc
xchg
or
xchg
inc
adc
jl
and
or
xor
mov
mov
dec
repnz
(bad)
sti
mov
loope
lods
imul
outs
das
mov
inc
pop
dec
mov
outs
jne
dec
cmc
lea
push
add
clc
jmp
mov
loope
dec
or
retf
mov
gs
arpl
loope
icebp
push
lock
std
test
add
or
xlat
xor
pop
es
inc
pop
pop
dec
jge
jmp
xchg
je
adc
int
mov
mov
cmp
push
aad
mov
ins
pop
push
loope
mov
popa
int3
mov
sub
inc
mov
dec
pop
daa
fnstenv
ret
sub
push
mov
push
sub
mov
retf
or
mov
ins
mov
jbe
add
jp
out
xchg
jne
mov
or
dec
mov
push
add
fild
into
test
movs
call
inc
dec
jno
or
in
xor
and
sbb
jb
pop
pop
iret
cmp
add
hlt
test
hlt
dec
(bad)
mov
pop
inc
inc
fmul
test
mov
inc
das
inc
shl
cmp
mov
cmp
retf
idiv
hlt
fwait
ins
mov
mov
neg
mov
fcom
xchg
push
push
out
fiadd
sahf
and
jne
les
ins
jmp
loop
cmps
es
push
(bad)
in
aam
push
ret
ins
addr16
cli
mov
push
pushf
pop
push
and
fwait
pop
push
inc
xor
pop
push
push
loope
fdivr
(bad)
fild
popa
or
(bad)
lds
mov
ins
jecxz
arpl
pop
jge
in
popa
inc
jae
repz
pop
sub
add
jmp
xor
sbb
stos
inc
mov
jb
ret
mov
push
scas
cld
dec
mov
das
(bad)
in
push
cmc
or
enter
mov
and
adc
fldenv
jmp
shr
cmp
xor
or
les
push
mov
xchg
fsub
in
out
lods
xor
pop
test
push
out
lahf
das
outs
test
(bad)
pop
pop
in
dec
push
sbb
imul
hlt
ficomp
mov
mov
lock
cmps
fld
(bad)
dec
cmp
push
xchg
inc
iret
xchg
jl
les
loope
push
out
pop
mov
mov
repz
jg
sub
int
in
mov
pop
jmp
and
rcr
(bad)
jae
fld
mov
cdq
sar
loopne
sub
mov
(bad)
jge
xchg
pop
adc
xor
cmp
mov
add
dec
jne
mov
add
add
mov
jb
cmp
cmp
bnd
fs
mov
fimul
js
cmps
push
mov
sub
pop
js
jo
aam
add
xchg
into
add
or
jo
push
mov
dec
dec
in
aad
cmp
xchg
dec
xor
jae
sub
movs
shl
out
mov
push
inc
add
jge
adc
imul
jmp
ins
retf
iret
push
xor
out
scas
jmp
bound
sbb
out
movs
clc
push
loopne
mov
pop
or
(bad)
jge
popf
push
jbe
cmp
push
popa
mov
jp
into
mov
mov
mov
jb
fs
sbb
fldenv
inc
mov
mov
out
pop
dec
std
(bad)
cld
push
(bad)
or
mov
cmc
xchg
aam
cwde
test
in
xor
retf
jo
outs
ds
dec
leave
sbb
icebp
and
xor
mov
jmp
and
aas
or
bound
ss
out
enter
jge
cli
leave
jmp
fwait
inc
neg
fidivr
mov
jmp
daa
push
mov
in
mov
imul
pop
push
xchg
xor
loope
xchg
mov
retf
cld
sbb
cmp
dec
cmp
mov
push
add
mov
movs
push
push
daa
aaa
jae
sub
pop
scas
jo
or
shl
in
pusha
pop
push
out
or
adc
outs
dec
aaa
mov
clc
ret
ja
xchg
dec
loope
pop
sbb
cmp
pop
xor
out
pop
jmp
or
int3
mov
dec
push
mov
das
ins
jo
add
jge
pop
pop
mov
fcmovnu
stos
pop
adc
inc
rol
fimul
dec
cmp
(bad)
call
in
add
mov
aaa
push
and
fidiv
(bad)
in
fiadd
sahf
cmp
out
je
xor
fwait
or
xor
fild
xchg
mov
sti
xor
popa
jo
cmp
loop
mov
ins
push
adc
imul
arpl
sbb
out
inc
push
out
add
int
inc
mov
mov
inc
clc
rol
xor
xor
inc
into
sbb
rcl
adc
loopne
lds
retf
addr16
push
mov
push
sbb
xchg
les
or
rol
cwde
sbb
push
or
das
pop
call
(bad)
pop
loope
dec
pop
popf
iret
or
inc
iret
pop
sub
lods
pop
pop
cmp
repz
inc
sbb
xchg
rol
add
jmp
mov
jbe
push
fcomp
jle
pop
movs
fnstcw
rcr
(bad)
cdq
rcl
or
dec
cmp
xchg
add
iret
dec
dec
sub
mov
xor
mov
in
ss
sub
mov
inc
rcl
jge
ficom
adc
lods
(bad)
(bad)
adc
xor
out
rcr
jle
movs
adc
push
rcl
test
dec
adc
xor
sbb
push
jbe
pop
pop
push
inc
adc
int3
lds
pop
push
aam
jge
xchg
add
adc
imul
cmc
inc
rep
pop
sti
sbb
imul
pop
jo
mov
fdivr
jno
mov
test
cmp
jle
retf
mov
int3
inc
pusha
jbe
test
mov
pop
inc
icebp
and
std
dec
aad
pop
jle
mov
sub
sbb
inc
daa
mov
aam
mov
sbb
jecxz
xchg
jg
pop
sub
movs
inc
cmp
mov
xor
test
test
inc
pop
lods
shl
sbb
and
retf
push
(bad)
idiv
mov
mov
mov
cld
jl
push
(bad)
call
iret
and
repz
xchg
mov
jae
sub
fwait
sbb
add
push
adc
lea
add
push
jge
cdq
nop
rcr
adc
mov
xchg
xchg
(bad)
jl
adc
xchg
adc
ja
jnp
fdiv
lock
inc
xlat
xchg
sub
cmp
pop
cwde
adc
jo
retf
rol
aaa
sbb
ins
aam
int3
mov
(bad)
xchg
ja
test
pop
sbb
js
daa
stos
call
lods
addr16
in
test
inc
clc
jmp
mov
je
sti
les
xchg
repz
or
in
leave
mov
adc
dec
rcl
pop
cmp
lock
lods
dec
jne
int
sub
sub
(bad)
lock
cmp
or
shl
xor
mov
inc
mov
sbb
mov
inc
jg
dec
dec
adc
mov
sbb
push
cmp
ror
or
dec
jbe
fimul
out
push
push
mov
stos
fwait
mov
scas
into
xlat
in
movs
mov
push
mov
mov
cmps
jo
int3
or
mov
mov
sbb
loope
nop
loop
dec
xchg
dec
xchg
test
js
xor
mov
pop
cmp
adc
xor
jo
mov
xchg
mov
lods
aam
aad
add
sub
add
loop
add
sub
or
cmp
adc
pop
loop
movs
add
jno
or
daa
cdq
jmp
xchg
inc
cdq
cmps
in
out
mov
repz
or
mov
rcr
mov
and
mov
adc
xlat
icebp
pop
in
retf
outs
mov
add
in
mov
ss
arpl
sub
and
dec
ins
fidiv
cmps
repz
loopne
sbb
xor
adc
jg
mov
mov
stc
lahf
clc
and
or
icebp
(bad)
movs
ret
xchg
leave
scas
in
jle
pop
adc
test
adc
sub
jmp
leave
inc
mov
jg
shr
mov
and
test
and
(bad)
adc
jno
sub
mov
or
fdivr
fbld
in
xchg
movs
or
(bad)
jae
shl
in
push
xchg
adc
push
jmp
sub
mov
pop
adc
mov
mov
mov
std
push
dec
test
xchg
fmul
or
retf
loop
xor
cmps
ss
push
sub
loop
or
mov
jmp
mov
inc
(bad)
mov
out
(bad)
mov
sub
add
sbb
sbb
fsub
aad
cmp
stos
jo
or
jge
fsubr
aaa
in
popf
lock
lods
jmp
addr16
push
mov
into
dec
mov
movups
stos
retf
cmps
mov
aaa
out
ffree
cs
dec
jo
ss
clc
es
loopne
pop
stos
push
mov
out
jmp
inc
jmp
lahf
aad
inc
push
push
outs
sahf
(bad)
xor
adc
out
in
sub
out
xchg
pop
ss
cmc
cld
stos
mov
in
cmps
xchg
sbb
ja
sub
cwde
aaa
xor
mov
xchg
aaa
das
adc
ret
ret
push
jge
shr
add
out
(bad)
test
add
push
or
dec
xchg
retf
imul
cs
scas
scas
int
cwde
push
push
dec
retf
(bad)
pop
push
jb
push
enter
cmp
icebp
in
mov
nop
pop
dec
xor
prefetch
jge
aad
test
adc
fisttp
or
dec
fwait
adc
fisub
cwde
xchg
lods
add
jns
(bad)
lahf
mov
in
dec
lock
add
ins
adc
cmps
stc
icebp
mov
or
rcl
inc
sbb
or
xchg
aad
xchg
push
push
and
mov
arpl
scas
loopne
movs
pop
jae
je
inc
or
pop
push
adc
dec
adc
std
imul
push
mov
inc
xchg
push
inc
outs
cmp
adc
xor
scas
and
inc
push
lods
movs
dec
push
test
sbb
pop
pop
jno
mov
push
push
and
lea
fisubr
aaa
stc
cmovae
loop
std
retf
mov
or
nop
mov
inc
sbb
std
push
gs
aam
retf
cmp
call
push
repz
cmp
pop
sub
cdq
mov
dec
loop
data16
dec
sbb
lods
mov
sar
into
inc
add
sbb
adc
repz
lods
stos
xor
ja
imul
lock
dec
xchg
sti
imul
sub
stos
outs
or
xchg
jno
int
push
in
(bad)
lds
mov
imul
add
adc
les
rol
dec
scas
adc
fisubr
fmul
mulps
inc
jmp
inc
mov
or
loop
xchg
aaa
repnz
jmp
push
popf
lea
add
push
inc
mov
and
lahf
mov
xor
loop
dec
cmps
sbb
mov
xchg
in
cs
mov
jge
ins
(bad)
call
push
inc
push
xchg
inc
or
rcl
push
xor
dec
(bad)
ror
gs
sbb
dec
pop
lock
xor
movhps
(bad)
arpl
out
idiv
ror
inc
mov
xor
fwait
sub
or
cmc
(bad)
retf
cmp
(bad)
out
ret
mov
out
xor
test
cwde
inc
test
inc
and
lahf
mov
push
test
outs
scas
mov
hlt
dec
xchg
shr
xchg
inc
hlt
pop
scas
mov
retf
dec
call
mov
cwde
cmp
jbe
rcl
shr
push
and
hlt
add
or
sti
xor
xor
aam
cmp
xchg
ins
fstp
outs
pop
or
xchg
imul
test
aas
fbstp
cmp
popa
cmp
mov
push
loopne
inc
lock
mov
jg
push
jbe
add
jecxz
ret
(bad)
cmp
pushf
mov
push
in
jne
movs
add
and
nop
repz
in
sti
or
sub
arpl
sbb
jle
popf
mov
sbb
clc
pusha
loope
gs
pop
ja
mov
push
pop
les
fwait
mov
sub
int
jmp
repz
mov
movs
pop
(bad)
pop
call
pop
aaa
add
inc
xchg
mov
int3
pushf
setp
cli
cld
pushf
push
pop
dec
sbb
cmp
sbb
push
inc
loopne
stos
pop
pop
stos
lahf
es
and
aam
mov
lds
add
fwait
into
xor
adc
push
pusha
push
(bad)
cld
stos
movs
int
dec
adc
or
or
dec
add
jmp
imul
neg
jo
repz
hlt
inc
shr
fcomi
lahf
aaa
hlt
out
mov
xchg
outs
leave
out
stos
push
mov
aad
popf
je
(bad)
fadd
ss
sbb
cmps
inc
movs
ror
jecxz
ret
aaa
inc
into
aam
adc
mov
jae
lods
mov
test
xchg
mov
push
gs
jns
mov
mov
cmp
in
fild
pop
xchg
pop
jle
hlt
inc
es
scas
ret
mov
es
lods
and
arpl
or
and
aam
xchg
pop
fs
mov
inc
cs
aas
xchg
cmp
jae
pop
xor
inc
ret
mov
fs
daa
mov
mov
jl
inc
int
(bad)
aad
lds
inc
pop
jle
mov
cmc
iret
adc
scas
or
mov
inc
inc
pop
jno
mov
mov
or
in
sbb
inc
lea
jl
cli
jns
pop
xor
add
mov
mov
out
xor
mov
scas
sub
jns
mov
push
out
cli
xor
mov
aam
add
xlat
mov
rol
add
rcpps
mov
js
jno
mov
mov
int3
xchg
hlt
imul
aad
out
nop
not
je
cmc
rcr
add
adc
loopne
icebp
test
int
movs
push
sub
loop
adc
mov
les
je
dec
scas
retf
arpl
inc
ins
cwde
push
icebp
lahf
fdiv
xchg
addr16
jo
cmp
pop
push
bound
xchg
scas
jbe
loope
arpl
sbb
fldenv
xchg
adc
cdq
jp
adc
jb
jmp
inc
pop
gs
enter
movs
mov
dec
jnp
cmps
cli
aad
push
ins
lds
mov
xchg
cmps
jg
and
jo
lock
xlat
fcomp
sub
jmp
and
mov
cli
ret
add
pop
ins
cmp
mov
imul
scas
iret
and
out
jns
mov
add
out
sub
and
dec
push
sub
rcr
movs
cmp
in
call
imul
shl
fs
hlt
out
mov
retf
mov
inc
and
aas
ret
sbb
mov
pop
addr16
jae
inc
add
icebp
pop
sbb
fisttp
mov
std
push
cmp
sub
cmp
jae
adc
jne
adc
pop
pop
les
cmp
add
jge
ror
inc
int
xchg
adc
pushf
jle
cmps
adc
xchg
(bad)
xchg
aad
ss
cmp
push
shl
cmc
ins
push
jecxz
inc
push
mov
stc
addr16
ds
adc
out
xor
rcl
mov
mov
loop
mov
clc
xchg
mul
icebp
mov
mov
inc
retf
cli
ror
imul
xor
push
sbb
inc
fbld
mov
sub
mov
xchg
bound
in
and
push
sbb
push
push
test
and
(bad)
stos
arpl
movs
inc
pop
les
cmps
pop
adc
call
and
xchg
scas
xor
lods
out
adc
push
push
pop
(bad)
aam
xchg
and
mov
and
mov
sbb
mov
retf
sti
popf
sahf
call
retf
(bad)
cli
or
or
test
jge
pop
call
mov
lock
pop
dec
xchg
mov
pushf
mov
jb
pop
clc
cmp
jp
push
test
mov
int
jmp
jb
rcr
inc
bound
(bad)
(bad)
fwait
push
daa
jg
call
xlat
push
in
add
adc
aas
fwait
inc
enter
in
in
in
out
pop
fild
and
or
in
inc
jl
sub
sub
cmps
inc
lds
movs
lds
outs
fcomip
adc
ror
and
(bad)
dec
jae
in
mov
xor
mov
shl
mov
dec
mov
ins
add
and
pop
(bad)
(bad)
sub
dec
pop
aas
frstor
sbb
pop
in
icebp
push
cmps
div
in
mov
jns
fsubr
adc
add
jg
mov
mov
pop
fsubr
sbb
xchg
mov
or
push
imul
shl
mov
dec
lods
adc
mov
in
sub
cmp
inc
jle
es
test
push
fsub
mov
adc
jg
mov
icebp
xchg
xchg
jp
push
inc
pop
sub
pop
xor
fdivrp
mov
out
jge
cmp
inc
mov
and
jno
xor
mov
cmp
lahf
movs
sbb
call
jno
movs
out
pop
pop
shl
sbb
or
jle
std
leave
lea
cmp
jg
bound
out
jne
sbb
sbb
adc
rol
or
jns
jo
ror
adc
xchg
(bad)
pop
adc
je
jecxz
xor
loope
popf
jb
pop
mov
sbb
xor
test
fwait
aaa
mov
jne
movs
inc
push
lea
loope
xor
lahf
in
push
cli
add
cmp
ret
xchg
jae
lea
push
loop
xor
xchg
dec
data16
gs
aam
test
ficomp
aaa
push
sub
into
out
pop
lock
jp
push
mov
js
add
movs
cmp
mov
call
sub
je
in
inc
scas
icebp
aas
push
sbb
mov
int3
popa
ss
out
int3
push
push
jmp
aas
cwde
(bad)
ror
hlt
movs
retf
adc
leave
mov
mov
or
sub
sbb
mov
cmp
sbb
xchg
sbb
cmp
mov
mov
xor
mov
imul
xchg
jmp
div
jns
cld
jbe
add
mov
jns
mov
cmp
or
ins
sub
cli
frstor
popa
jge
fst
add
jno
sbb
out
push
aad
stos
shr
push
adc
test
dec
outs
aad
nop
dec
dec
fdiv
jmp
mov
mov
xchg
test
inc
mov
sub
mov
pop
shr
or
dec
test
(bad)
fild
test
mov
ret
cmp
fbld
jmp
cmc
sub
and
mov
pop
pop
or
mov
adc
fwait
stos
xor
inc
popf
jl
jne
std
cmp
out
jg
ins
or
inc
jae
sub
pusha
mov
adc
inc
popa
push
sbb
fsubr
cwde
mov
and
mov
in
stos
ss
sub
test
test
pusha
pop
add
adc
add
jle
jbe
pop
cmc
or
and
pop
repz
mov
and
das
mov
sbb
xchg
adc
arpl
(bad)
es
push
gs
in
sbb
rol
add
lods
mov
xchg
outs
xchg
(bad)
push
hlt
xchg
js
js
fs
mov
xor
xor
int3
adc
arpl
jp
add
inc
push
pop
ss
sbb
push
push
call
fild
out
mov
cmc
stc
xor
sub
and
xchg
aam
add
push
add
jb
push
iret
scas
push
stos
or
fmul
loopne
inc
pop
(bad)
js
sbb
pusha
inc
test
pop
fs
scas
ins
dec
cmp
pop
cmp
push
pop
cmp
rcr
scas
aas
inc
dec
dec
int3
rol
xor
cs
out
pusha
or
sub
les
pop
cmc
test
mov
popf
adc
addr16
(bad)
adc
dec
add
stos
mov
sbb
mov
fld
and
jo
rcl
add
mov
mov
mov
fld
or
lahf
xchg
sub
or
pop
stc
cmps
sbb
and
adc
(bad)
(bad)
sti
push
dec
xchg
jge
jl
ret
aam
add
xor
jns
loopne
ss
imul
add
xlat
jmp
loope
js
xor
sbb
fs
test
ins
enter
test
leave
add
push
mov
leave
dec
inc
dec
fistp
inc
(bad)
xor
sub
and
jbe
pop
cld
leave
shl
repz
xor
daa
push
jne
les
pop
sbb
int3
mov
cld
ret
stos
or
mov
push
in
js
mov
cmp
lea
mov
add
dec
push
mov
fcom
clc
fmul
rcr
sub
xchg
pop
xchg
sbb
fucomp
and
fidivr
cmp
hlt
ret
imul
jl
fdiv
daa
cmc
mov
ret
call
xchg
pop
mov
xor
in
cmp
inc
jmp
and
ins
ds
mov
pushf
and
mov
imul
pop
lods
sbb
setae
outs
mov
popa
iret
in
mov
push
push
dec
(bad)
pop
sahf
inc
dec
cmp
retf
jbe
ins
cmps
add
ins
imul
movs
out
loope
push
inc
xchg
sbb
mul
retf
or
rcr
ss
test
repz
mov
fwait
xchg
test
pop
adc
daa
add
int
mov
xor
or
mov
pop
mov
pop
push
outs
mul
jo
mov
shl
leave
movs
push
loop
inc
xor
push
pop
or
outs
xchg
cli
pop
adc
cdq
mov
add
pusha
pop
mov
pop
outs
ins
push
stos
and
jnp
enter
mov
cmps
adc
icebp
dec
hlt
popf
aad
(bad)
sbb
lea
fcomp
xor
mov
mov
aam
clc
mov
add
adc
dec
out
mov
push
bswap
cmp
pop
sbb
inc
iret
xor
jae
mov
das
cmp
dec
add
aas
bswap
shl
int
enter
cmp
cli
mov
call
sbb
ret
inc
xchg
popf
test
lods
gs
repz
xor
mov
hlt
adc
jmp
and
mov
mov
pop
jl
add
ret
and
sbb
xchg
dec
pop
stos
mov
push
inc
dec
stos
and
mov
sbb
inc
mov
sub
jno
mov
test
test
mov
addr16
ss
lds
dec
push
shr
or
outs
sahf
jbe
out
add
mov
imul
add
pop
(bad)
jb
test
push
mov
xor
mov
scas
mov
outs
push
sub
cmp
adc
fadd
mov
dec
aam
ss
push
adc
les
cmp
pop
les
hlt
xlat
mov
pop
xchg
daa
mov
sub
cwde
mov
jg
jle
loop
push
fcom
adc
adc
sbb
push
out
dec
hlt
in
mov
ja
jae
jp
ss
aad
and
inc
aad
(bad)
xlat
pop
iret
add
repnz
out
or
mov
cld
test
mov
or
faddp
test
ss
out
push
push
daa
loopne
js
add
pusha
les
dec
gs
or
pop
mov
inc
push
jb
sbb
or
out
sbb
rol
adc
(bad)
xor
mov
mov
inc
leave
rcl
out
pop
cli
std
mov
clc
jo
cs
out
lods
pop
iret
lahf
add
sub
test
mov
mov
lods
xor
mov
es
lods
adc
add
shr
inc
jmp
aam
sub
mov
push
outs
shufps
mov
cmps
fisttp
test
sahf
mov
mov
jo
cmps
rol
in
(bad)
jnp
mov
xchg
mov
ds
and
int3
xchg
xchg
mov
imul
leave
and
sbb
scas
or
or
mov
jg
mov
sbb
js
sub
cmp
scas
je
sub
mov
popf
ror
jg
push
outs
cwde
rol
sub
and
xor
mov
or
push
movs
pop
adc
ja
jmp
test
aad
xchg
das
fisttp
int3
jb
scas
or
jmp
icebp
(bad)
dec
push
cmovno
and
cmp
cmps
out
mov
mov
xchg
adc
cmp
ret
clc
pop
sbb
push
sbb
stos
xchg
add
inc
out
jge
jle
sahf
add
lahf
inc
ds
loope
mov
sub
mov
(bad)
bound
jne
test
dec
pop
outs
jmp
sbb
mov
pop
iret
arpl
cwde
in
dec
pop
and
pop
or
shl
and
mov
pop
jg
rcl
mov
in
sbb
dec
sub
into
repz
add
add
(bad)
call
inc
gs
mov
or
mul
or
enter
cld
jecxz
jo
add
sub
lods
mov
loope
push
add
cld
cmp
ins
je
adc
add
std
shl
daa
pop
lods
mov
mov
fistp
movs
out
ret
(bad)
sar
xlat
sbb
xor
bound
call
pop
mov
and
jo
outs
in
jmp
adc
in
cs
dec
jo
(bad)
mov
into
push
xor
fstp
add
mov
imul
cmp
or
cmp
mov
adc
inc
test
inc
loopne
inc
mov
pop
and
(bad)
xor
cmp
sub
xchg
mov
or
das
adc
mov
iret
leave
sub
std
lock
(bad)
ins
mov
fcomi
add
jae
sub
cs
inc
out
xor
push
sub
test
push
cmp
or
test
xor
ja
sbb
mov
cmp
scas
test
xchg
sbb
dec
fstp
popf
add
xchg
mov
mov
test
xor
ins
pop
xchg
sar
or
(bad)
clc
aad
sbb
dec
mov
inc
mov
fdivp
loop
ja
shl
xlat
stos
and
rcr
sbb
mov
or
lea
les
ins
scas
retf
sub
jne
adc
inc
cmp
and
repnz
push
jecxz
xchg
push
or
(bad)
mov
push
adc
or
stos
mov
outs
inc
(bad)
fwait
xor
mov
enter
out
xchg
stos
inc
adc
test
cwde
mov
sub
jnp
sub
jno
std
xor
(bad)
fidiv
jae
push
in
xchg
push
rol
lods
adc
sar
lahf
lods
dec
loope
push
bound
je
jno
test
bound
dec
cmp
aas
xor
sub
call
lds
dec
imul
mov
stos
mov
pop
loope
idiv
and
je
movd
push
jmp
(bad)
movs
mov
adc
inc
retf
and
push
pop
sub
sub
into
int3
clc
push
sar
movs
jle
loop
(bad)
js
sahf
xchg
and
cld
sbb
inc
mov
inc
mov
rol
jle
or
repz
ss
mov
arpl
ror
mov
push
aad
push
dec
loop
mov
mov
and
mov
lds
mov
xchg
jg
inc
dec
sub
ins
xchg
loopne
les
leave
imul
push
ja
jnp
rol
xlat
add
xor
mov
xor
mov
out
mov
add
jl
(bad)
ss
jge
daa
(bad)
jns
stc
mov
fcomp
and
hlt
cmps
fadd
adc
inc
sar
jge
sub
pop
aam
cld
jg
lods
xchg
adc
mov
or
icebp
adc
cmc
xor
hlt
jle
shl
lock
or
cmp
sbb
cld
inc
push
jo
movs
pop
sahf
jo
xchg
pop
movs
push
stos
scas
fild
adc
out
sub
(bad)
leave
(bad)
jp
mov
xor
lods
retf
sar
add
out
fadd
outs
int
add
cld
cwde
dec
add
in
js
imul
movs
sbb
icebp
xor
adc
aaa
and
xor
shl
adc
in
cmp
fist
and
xor
sahf
sub
adc
add
fmul
jne
xchg
sbb
hlt
shr
lock
sub
inc
cmp
cli
mov
cmc
jae
sbb
pop
sti
mov
(bad)
cmp
cmp
mov
jnp
or
mov
ret
inc
shl
dec
imul
fimul
out
mov
in
in
pop
cmp
int3
leave
shl
sbb
mov
fmul
xchg
inc
fsub
pop
adc
push
mov
sub
(bad)
rcr
inc
jne
pop
and
dec
fsubr
sub
shl
adc
jbe
mov
mov
mov
adc
mov
(bad)
sbb
mov
mov
sub
mov
and
cli
and
mov
les
fisttp
pushf
sub
pop
fs
mul
lea
scas
(bad)
adc
test
sbb
ins
sub
push
jp
call
cwde
push
xchg
inc
dec
or
mov
fisttp
cld
mov
jg
out
js
xor
inc
jns
add
dec
inc
mov
push
sub
scas
mov
xchg
pop
lods
adc
(bad)
and
adc
out
or
mov
or
iret
sub
sbb
sbb
xor
xchg
rcr
jle
dec
jns
mov
fwait
mov
dec
ds
outs
jmp
fild
popf
scas
mov
aas
or
push
jo
xchg
test
and
repz
jg
movs
sbb
popa
mov
mov
outs
lods
outs
test
(bad)
sub
fnstenv
mov
xor
add
retf
ja
sub
inc
pop
mov
jae
xchg
cwde
adc
outs
popf
pop
pop
ret
mov
repz
addr16
in
xor
mov
or
mov
lds
cdq
xor
pop
pop
mov
mov
aad
out
fld
fwait
aas
movs
sub
scas
mov
and
add
cmp
xor
stos
test
xor
dec
dec
movs
push
jno
and
aas
or
dec
dec
push
stos
psubsb
rcl
cdq
xchg
andps
push
std
lods
inc
push
jns
add
imul
jno
repnz
add
in
jae
scas
inc
shr
or
push
add
xor
cmps
adc
les
retf
les
and
nop
push
mov
out
aad
cmp
arpl
push
sub
pop
pusha
or
xchg
fwait
pop
sbb
ss
add
mov
or
es
out
test
pop
adc
je
pop
add
and
int3
test
cwde
popf
push
loop
mov
pop
mov
ss
sub
and
pop
in
fidivr
and
inc
push
mov
dec
dec
ds
jmp
stos
into
lock
test
cmp
jb
and
adc
fsubr
pop
cmp
fild
cmp
xor
or
aaa
sub
aaa
dec
jne
or
cmp
ds
xchg
cld
aam
ret
jp
sub
xor
cmp
fcom
or
(bad)
cwde
scas
(bad)
push
in
stc
push
add
sbb
je
es
xchg
call
outs
fmul
or
inc
push
push
stc
mov
dec
std
xor
pop
pop
retf
ins
xchg
leave
mov
push
and
sbb
dec
mov
push
pop
pop
stos
mov
fnstenv
mov
adc
fist
(bad)
adc
push
cmps
pop
cmp
aaa
mov
(bad)
int3
test
jmp
inc
jecxz
mov
retf
loopne
test
cmp
addr16
test
repz
cmp
movs
stos
jnp
shl
cmp
inc
sub
or
retf
fisttp
outs
popf
imul
cmp
outs
jmp
mov
sti
fcomip
xchg
in
daa
sbb
in
add
and
adc
inc
jg
nop
int
and
dec
push
fdivr
shl
inc
xchg
push
or
in
test
pop
add
leave
xor
mov
mov
jo
mov
push
push
dec
adc
pop
xchg
add
aas
fiadd
lock
loopne
fmul
lahf
adc
adc
dec
outs
push
cmp
cdq
nop
mov
dec
jmp
xchg
xor
inc
add
xor
ins
jecxz
into
push
inc
mov
inc
shl
sbb
icebp
das
sub
cli
inc
jmp
cdq
cld
adc
pop
cmp
int
pop
icebp
test
popa
cli
push
shr
xchg
cmps
jnp
inc
push
test
dec
jno
jae
ss
sbb
leave
jecxz
idiv
and
scas
pop
cdq
(bad)
cmps
outs
mov
into
(bad)
fmul
imul
add
push
mov
jl
pushw
dec
test
pusha
jmp
ret
fisubr
and
add
(bad)
cmc
dec
test
dec
push
cli
and
fsubr
push
adc
push
jle
icebp
xchg
push
punpckhwd
sbb
mov
pop
mov
bound
test
push
daa
xchg
pushf
jp
clc
cmp
inc
es
dec
mov
shl
pop
rcr
jo
cld
pushf
test
or
mov
cli
ins
xchg
xor
inc
movs
mov
push
icebp
jge
inc
(bad)
dec
inc
xchg
rcr
iret
call
jle
cmp
test
cmp
sub
mov
jae
sahf
(bad)
movs
and
and
sub
xchg
div
pop
pop
aaa
aam
jbe
sbb
fs
inc
mov
aaa
jmp
adc
xchg
js
shl
mov
adc
std
or
jmp
je
mov
test
jb
scas
mov
adc
call
mov
es
adc
pop
movs
adc
xor
xchg
test
sbb
inc
xchg
push
call
in
jmp
inc
sbb
jmp
pop
nop
inc
loopne
adc
repnz
push
sub
mov
test
inc
xchg
sbb
repnz
leave
mov
retf
adc
jb
inc
mov
mov
scas
sub
adc
movs
jb
sbb
fcom
popf
in
sbb
mov
scas
fwait
(bad)
lods
inc
dec
nop
test
cli
push
loope
xchg
sbb
bnd
ds
iret
mov
bound
das
es
xor
push
jp
ins
mov
loop
pop
std
mov
ins
and
inc
ror
das
mov
loope
mov
ret
add
xchg
jge
add
das
das
sbb
push
outs
fild
cld
std
and
sbb
sub
jle
sti
mov
sti
ins
pop
xchg
inc
mov
cli
out
and
into
adc
ss
daa
xchg
push
jno
fnstcw
sbb
stc
fimul
mov
por
popa
adc
push
or
shl
iret
mov
sbb
or
mov
dec
push
or
fadd
mov
daa
sub
lds
xor
outs
sbb
loop
jp
leave
pop
in
lock
mov
add
xor
add
int3
mov
fst
sub
xchg
push
mov
inc
outs
gs
data16
adc
movs
mov
or
mov
aad
callw
and
ret
nop
sar
fisttp
gs
loop
(bad)
ins
test
push
inc
test
mov
add
gs
nop
jns
push
sahf
addr16
bound
in
cdq
(bad)
aaa
and
mov
mov
sub
push
icebp
sbb
cmp
mov
ss
xchg
sti
mov
jg
leave
pop
dec
jge
rol
xchg
xlat
(bad)
(bad)
inc
lods
ret
jecxz
pop
fidivr
xchg
loopne
clc
or
fist
cld
push
cli
das
fst
ret
bound
les
xchg
xchg
sub
jl
adc
loopne
shl
(bad)
dec
jmp
mov
jo
scas
cwde
dec
mov
push
cdq
inc
mov
daa
mov
jnp
(bad)
repz
xchg
dec
dec
aaa
scas
adc
jge
fwait
adc
(bad)
adc
sub
xor
fsubr
stos
push
xchg
retf
xlat
clc
fxch
jecxz
seto
push
mov
in
dec
push
pop
add
pop
xchg
push
mov
mov
(bad)
pop
jmp
mov
pop
aas
cs
cmc
fistp
sar
jmp
out
mov
cmp
stc
or
les
jecxz
(bad)
jmp
lock
push
cmps
aas
or
pop
cmc
mov
stc
ds
fwait
adc
push
mov
daa
inc
dec
pop
inc
push
ss
fiadd
push
pop
and
pop
ret
push
cmp
pop
icebp
ds
lock
div
cmps
and
fdiv
je
mov
jp
inc
xchg
(bad)
pop
ret
call
pop
rcl
mov
das
push
jae
mov
fidivr
out
sar
mov
xchg
jne
out
add
jae
je
clc
mov
fwait
jle
cdq
pop
add
shr
shl
outs
(bad)
mov
inc
out
cmps
out
jmp
xor
mov
xor
xchg
test
or
jge
cli
fwait
call
popa
inc
fst
mov
(bad)
out
mov
stc
xor
cmp
cdq
pusha
inc
imul
jbe
dec
in
adc
scas
sub
repz
aaa
mov
xlat
dec
cmp
cmp
sbb
xor
jbe
sbb
mov
jmp
icebp
fimul
lock
push
xchg
mov
dec
cmp
data16
imul
mov
(bad)
cmp
xchg
mov
xor
(bad)
jmp
jnp
dec
cmp
gs
ret
jbe
adc
fistp
cmc
fisubr
sub
jmp
push
pop
icebp
mov
ret
mov
jecxz
pop
cmp
mov
pop
jb
and
out
sub
xor
pusha
fs
inc
sar
test
outs
and
aas
fdivr
repz
fidiv
lock
repz
push
lods
xchg
daa
bound
xor
fidiv
fiadd
mov
hlt
mov
into
xchg
and
loop
stos
test
dec
sub
push
jmp
jae
ficomp
rep
mov
and
in
sbb
push
jl
push
iret
xchg
scas
loop
es
sbb
push
fidivr
inc
sbb
pop
push
sub
(bad)
out
imul
retf
sub
mov
push
in
hlt
bound
pop
push
sub
cmp
jne
out
sbb
ud1
into
aaa
adc
xchg
push
pop
xchg
mov
shl
sbb
dec
dec
jecxz
(bad)
mov
or
mov
mov
mov
xchg
movs
mov
xor
retf
xchg
jecxz
xchg
retf
dec
push
mov
sub
imul
frstor
inc
leave
cli
adc
xor
in
dec
out
stc
out
pop
movs
out
push
mov
push
xor
adc
cmp
test
jnp
or
mov
cmc
sti
pop
js
jl
pop
dec
call
addr16
les
int
daa
dec
mov
mov
lock
dec
pop
rcr
enter
inc
ja
enter
mov
leave
push
mov
scas
les
xor
cmp
jg
pop
xchg
jp
daa
add
sbb
and
mul
lods
(bad)
push
icebp
mov
bound
adc
sub
xchg
clc
pop
fadd
outs
sbb
imul
sub
sbb
pushf
(bad)
(bad)
pop
mov
add
test
imul
sbb
dec
mov
xlat
(bad)
out
arpl
xor
sti
call
xchg
(bad)
mov
sbb
jp
mov
sub
leave
push
xor
in
xor
cmp
fcomp
jo
push
and
je
mov
icebp
push
adc
arpl
imul
mov
out
ss
xor
pop
sub
fs
push
mov
int3
nop
sbb
jo
mov
mov
inc
iret
pop
xor
xor
hlt
cmp
lgs
in
xchg
pop
mov
ds
scas
stos
mov
dec
dec
push
xchg
jge
bound
cmc
in
stos
sbb
adc
pop
pop
retf
jl
xchg
mov
cmp
out
fwait
aaa
ja
jle
les
call
jnp
mov
(bad)
(bad)
dec
adc
out
push
(bad)
mov
dec
aad
shr
retf
cs
cmp
test
(bad)
cmp
jo
(bad)
es
mov
pop
xor
xchg
dec
jg
(bad)
sbb
xchg
jge
aaa
or
call
out
test
dec
jmp
js
out
mov
push
out
dec
cmp
loop
mov
jecxz
out
pop
xor
dec
push
rol
jl
add
sbb
dec
sbb
push
das
stc
aad
sbb
pop
test
xchg
inc
sti
dec
mov
xor
daa
hlt
jl
add
ret
add
cmp
fst
pop
js
pushf
js
adc
mov
repnz
mov
xor
or
dec
push
pop
pop
inc
mov
adc
out
add
cld
shl
or
(bad)
cli
ins
loope
xchg
(bad)
das
loop
cdq
mov
jnp
shr
push
fcmovnbe
xlat
mov
lds
cs
and
inc
lea
and
pushf
mov
je
sbb
fist
mov
mov
mov
or
push
(bad)
adc
sbb
sub
pushf
pop
bound
xchg
(bad)
lock
mov
outs
xchg
retf
ss
daa
fwait
or
mov
cmps
push
push
(bad)
in
mov
je
jne
ja
imul
push
test
test
sti
or
dec
out
push
test
mov
jbe
repnz
movs
sub
pop
imul
out
add
adc
jg
sbb
into
loop
scas
data16
cmp
cwde
inc
movs
xor
bound
adc
movs
(bad)
scas
or
jmp
xchg
std
xor
scas
mov
mov
js
cmp
addr16
adc
jne
mov
das
cmp
popa
dec
and
leave
mov
and
or
or
jg
aaa
mov
int
cmp
lock
scas
int
lahf
cmp
mov
or
mov
xor
in
stos
rcl
mov
jmp
leave
outs
popa
int3
and
bound
int3
int3
mov
mov
cli
jns
adc
sbb
jns
je
repnz
sbb
and
retf
scas
in
jbe
mov
mov
xchg
mov
dec
(bad)
mov
in
jnp
out
pop
(bad)
in
push
mov
shl
mov
ins
cmps
scas
jnp
xchg
xchg
out
add
clc
int3
dec
sti
call
clc
loope
inc
sub
data16
js
(bad)
je
mov
imul
mov
ins
call
pop
xchg
rol
mov
pop
and
imul
rol
cmp
cmp
mov
add
jge
fwait
sub
add
or
dec
shr
leave
retf
inc
lods
cmp
cld
popa
cmp
dec
jne
test
mov
push
xchg
mov
sub
dec
push
retf
gs
pop
loopne
daa
push
(bad)
repnz
sbb
or
fist
dec
jmp
pop
xor
dec
sahf
dec
stos
add
clc
imul
data16
idiv
jg
pop
test
or
cmp
fnstcw
mov
jne
outs
enter
xor
add
inc
fidivr
or
popa
rol
mov
and
sub
push
and
sahf
mov
push
pop
fisttp
fild
(bad)
dec
sub
(bad)
out
xchg
pop
jl
cmp
mov
sub
repnz
std
fwait
cdq
les
add
mov
xchg
test
push
fist
fs
sub
push
add
retf
dec
cmp
std
add
and
rcr
inc
shl
pop
adc
lds
jb
lods
push
jle
dec
sub
pop
and
mov
test
std
pop
mov
and
je
arpl
clc
loope
pop
mov
jo
mov
mov
into
push
inc
fidiv
jecxz
mul
dec
das
cmps
ins
jecxz
cmp
add
test
fisttp
mov
push
add
push
push
and
mov
shl
ja
mov
ins
add
xor
repnz
daa
add
mov
pop
das
clc
je
(bad)
fwait
imul
mov
mov
and
or
inc
scas
int3
pop
(bad)
out
addr16
mov
jecxz
pop
rcr
dec
and
out
mov
push
push
pushf
jmp
test
push
jg
cmp
jae
dec
popa
sub
test
inc
pop
sar
shl
adc
fisttp
mov
inc
(bad)
fdivr
arpl
js
outs
and
outs
xor
adc
mov
and
enter
sbb
xor
jmp
push
mov
pop
ds
rol
inc
(bad)
loope
(bad)
call
add
xor
ss
test
mov
loope
inc
lods
mov
sbb
mov
mov
jo
jle
jbe
sti
daa
mov
xor
inc
movs
inc
xchg
push
pusha
std
in
xor
(bad)
mov
sub
and
sub
cmps
and
std
lock
cmp
cmps
(bad)
mov
pop
sbb
mov
mov
sbb
jmp
mov
scas
mov
xchg
push
add
xchg
popa
inc
out
out
mov
mov
sbb
push
dec
sub
fmul
daa
xchg
mov
and
adc
out
adc
xor
jmp
sbb
xchg
jae
xchg
cmp
mov
std
inc
cmp
mov
cmp
push
shl
jmp
pop
daa
shl
pop
movs
call
mov
(bad)
xor
sbb
jle
or
(bad)
sahf
sub
pop
lock
inc
jae
enter
push
in
loope
aam
idiv
je
in
fs
xchg
es
rol
enter
cmp
mov
pop
xchg
fimul
pop
rol
nop
(bad)
hlt
dec
je
(bad)
ins
and
jnp
loop
pop
mov
sbb
jmp
sub
adc
test
je
jmp
pop
or
sbb
retf
dec
dec
int3
mov
lahf
add
(bad)
mov
mov
push
dec
mov
mov
sbb
xchg
jo
or
test
add
cmp
inc
jb
imul
mov
(bad)
mov
test
xor
adc
out
sbb
into
dec
pop
in
adc
stos
lea
adc
movq
movs
jns
or
nop
sbb
(bad)
das
sbb
add
das
clc
pop
jecxz
inc
(bad)
std
mov
aam
dec
jno
push
push
outs
push
dec
mov
push
pop
mov
(bad)
sbb
or
pop
xor
loop
icebp
pop
sbb
(bad)
call
xlat
sbb
pop
ret
add
mov
out
dec
jne
jg
pop
dec
push
mov
pusha
lock
addr16
or
sbb
pop
sbb
xchg
stos
push
add
dec
popf
imul
add
dec
sbb
pop
ja
repz
test
jp
ret
scas
fcomi
mov
cmp
inc
xchg
pop
push
pop
jge
pushf
jl
popf
adc
fwait
pop
or
mov
push
call
push
xchg
sbb
inc
mov
dec
mov
fcmove
dec
pop
mov
iret
les
jb
mov
push
in
lds
cmp
pusha
jae
mov
xchg
retf
sub
xlat
rcl
push
xor
jmp
shl
adc
push
out
sub
or
mov
jb
ja
mov
stos
ins
cmc
nop
pop
xor
into
enter
mov
and
pop
cmp
push
sbb
retf
fdivr
ja
pop
add
xchg
adc
inc
in
xor
inc
stos
cdq
popa
inc
(bad)
ja
add
test
xchg
and
jns
add
cmp
sub
rol
repnz
lea
and
fwait
sub
cmp
sti
int3
popa
shl
out
icebp
jmp
jne
sti
xchg
dec
neg
jmp
dec
out
rol
jbe
mov
adc
push
push
jbe
mov
das
mov
or
das
push
dec
or
inc
push
popf
push
ins
mov
mov
xor
and
ss
stos
movs
(bad)
int3
loope
mov
push
popa
adc
pop
add
jmp
cmps
shl
push
jle
push
xor
dec
outs
jne
cld
xor
call
cmp
lahf
push
js
jp
mov
jno
push
in
or
je
mov
outs
xchg
out
test
pop
pop
mov
mov
xchg
cld
cli
mov
std
sub
mov
mov
and
stos
(bad)
(bad)
mov
stos
js
pop
(bad)
jmp
mov
adc
repz
je
mov
cmp
in
jle
cmp
dec
push
xor
sub
out
stc
dec
xor
repz
sub
imul
add
sub
in
add
aas
mov
test
jo
xor
cwde
les
add
sbb
push
jle
adc
sti
xchg
gs
push
mov
outs
repnz
int
xor
xchg
int
into
shl
loopne
lahf
call
cmp
jbe
aas
mov
popa
ret
sbb
lods
adc
iret
mov
add
sbb
add
mov
outs
xor
pop
xor
xor
fistp
add
(bad)
cwde
stc
dec
dec
pop
clc
arpl
scas
loopne
sbb
adc
inc
je
xchg
(bad)
mov
adc
mov
ret
inc
and
pop
cmp
pop
add
call
out
out
mov
sub
xrelease
xchg
ins
inc
and
call
test
inc
sub
jo
sbb
stc
cmc
retf
mov
sbb
and
xor
arpl
clc
push
jmp
(bad)
popf
(bad)
jecxz
inc
std
fs
jge
nop
add
(bad)
pop
repnz
in
lea
adc
call
mov
sbb
mov
sbb
xor
inc
lea
jg
sbb
popf
xchg
jne
arpl
cld
sub
xor
fidivr
and
inc
mov
fisttp
mov
test
jp
mov
(bad)
lahf
retf
cdq
sub
xchg
mov
sub
push
xor
dec
sbb
mov
pusha
in
loop
fiadd
clc
fiadd
stc
mov
(bad)
in
xor
mov
pop
add
or
jg
jno
sti
mov
nop
mov
mov
fwait
adc
jno
and
aad
gs
cs
rol
dec
sahf
xor
or
mov
stos
xor
addr16
mov
mov
jmp
cmc
loopne
inc
sahf
clc
je
push
xor
pop
mov
adc
pop
sbb
sub
loop
xchg
push
inc
mov
add
cs
dec
jmp
out
je
jo
or
push
in
hlt
aas
nop
mov
and
jae
ds
push
fidivr
ret
cmps
sbb
in
and
mov
(bad)
outs
jge
dec
xor
cmp
xor
cmc
je
add
mov
push
jno
jns
sahf
mov
add
xor
daa
repz
out
jae
sti
jmp
cmps
push
popa
retf
mov
test
inc
cdq
pop
sbb
cmp
das
xor
ror
xor
fstp
imul
or
sub
scas
das
lea
mov
pop
sub
mov
sub
xlat
and
das
xchg
push
retf
adc
mov
mov
sub
mov
leave
sbb
add
cmp
call
mov
frstor
aas
xor
sbb
jmp
add
inc
dec
dec
fsub
jecxz
or
lock
sbb
pop
outs
repnz
iret
xchg
dec
and
(bad)
leave
add
fstp
out
jle
and
sbb
jle
push
add
inc
jo
scas
dec
js
(bad)
test
cmp
sbb
push
adc
das
(bad)
mov
jnp
lock
sbb
lods
cmc
jmp
inc
mov
pop
adc
add
inc
daa
leave
fldenv
jmp
dec
xor
sti
pusha
and
jne
repnz
in
cmp
xchg
mov
leave
test
push
dec
fnsave
(bad)
push
sti
in
in
fcmovu
xor
fld
out
cmc
push
sar
cmc
ret
sbb
inc
pop
sahf
(bad)
hlt
adc
and
(bad)
test
xchg
arpl
data16
and
cmp
sahf
nop
xchg
ja
movs
fisub
nop
mov
cwde
lock
es
adc
inc
cld
xlat
sbb
dec
mov
jbe
sbb
mov
mov
loope
jo
ins
in
inc
lock
dec
adc
mov
loopne
mov
push
xchg
stos
cmp
mov
sar
sbb
jge
push
ds
xor
mov
add
cmp
and
jg
push
(bad)
sub
mov
(bad)
sub
(bad)
clc
ds
adc
rol
cdq
xor
adc
dec
inc
mov
test
cli
cld
pusha
int
fsub
fwait
imul
xchg
stos
jp
cli
or
bound
movs
cs
int
sub
dec
push
xor
fst
pop
sbb
mov
inc
outs
cli
out
aam
xchg
shl
aam
sub
jb
cmp
sub
jae
add
loop
or
ret
scas
mov
inc
icebp
test
jp
ret
mov
pop
mov
in
mov
lds
sbb
dec
xor
scas
jmp
call
out
int
std
aas
aam
adc
inc
adc
aad
lock
push
(bad)
fwait
adc
fs
or
je
dec
call
sbb
mov
xor
xor
cdq
inc
jle
adc
and
sti
imul
pop
outs
in
mov
jae
aad
popf
and
dec
jle
sbb
pusha
call
jp
jge
jmp
out
sub
xchg
jp
push
xlat
jne
popa
fldcw
inc
fiadd
imul
lea
inc
rol
jb
or
(bad)
add
mov
repnz
aam
mov
int3
mov
test
icebp
jbe
push
sti
inc
add
(bad)
ficomp
retf
inc
adc
nop
jb
scas
jle
gs
and
nop
dec
mov
(bad)
js
in
pop
push
stos
xchg
pop
sub
ret
or
xchg
or
dec
xor
sbb
into
enter
sub
jo
cdq
mov
(bad)
inc
sbb
(bad)
out
fidivr
aam
loope
int3
imul
outs
add
cmp
(bad)
in
and
and
jbe
jno
cli
adc
cmp
loope
or
ja
sbb
mov
sbb
cmc
xlat
test
into
cmps
or
lods
sar
ss
mov
mov
data16
and
loopne
sub
adc
stos
ss
cmp
mov
mov
jns
cmc
or
int3
(bad)
cdq
ret
add
ins
(bad)
das
arpl
inc
inc
shl
mov
or
or
xchg
jp
and
dec
fstp
pop
loope
cdq
stos
sbb
(bad)
adc
lods
dec
mov
and
sbb
push
mov
in
jns
ja
and
cmc
sbb
dec
ja
scas
pushf
test
cmp
ret
push
inc
cmps
icebp
lea
mov
add
or
jge
adc
popa
push
pop
pop
stc
jbe
xor
and
in
add
jle
das
sbb
int
imul
pop
cmp
ret
scas
pop
aaa
push
dec
test
scas
shl
fs
add
cmp
adc
test
xor
pop
mov
dec
xchg
aam
rcr
cmp
int3
cli
aaa
ss
add
pop
pusha
fwait
shl
call
out
out
inc
cdq
pop
dec
inc
jb
mov
mov
out
ds
jp
arpl
mov
sub
sub
lods
or
xchg
ror
clc
iret
cmp
jmp
jae
loope
shr
pushf
jmp
test
or
xlat
sbb
pop
xor
xchg
or
adc
std
sbb
dec
rol
mov
jo
or
fdiv
sbb
add
jp
jbe
sbb
mov
pop
or
inc
adc
fmul
arpl
and
aad
jge
aam
sub
mov
or
sub
dec
rcl
mov
jle
in
push
(bad)
aad
push
mov
cmp
shr
mov
or
push
sbb
jg
cdq
ror
out
shl
inc
mov
inc
(bad)
clc
in
xchg
mov
adc
sahf
sbb
mul
mov
push
jmp
jmp
xor
adc
fisubr
lods
loopne
outs
and
mov
adc
movs
cmp
ror
and
in
mov
cmp
sub
test
push
adc
pop
lea
mov
dec
xor
dec
lea
lea
pop
retf
(bad)
icebp
lds
out
jmp
dec
in
mov
mov
adc
loop
fcmovne
push
inc
mov
jb
xchg
mov
sub
sbb
push
aam
push
xor
push
sbb
adc
push
les
pop
add
adc
or
dec
fbstp
les
cmps
cmps
mov
push
push
icebp
lods
popa
enter
leave
movs
adc
sub
arpl
sub
and
jg
lahf
mov
inc
sub
stos
rol
push
cmc
psubsb
ds
out
retf
inc
pop
or
add
add
xchg
sub
inc
cmp
cmp
sbb
mov
mov
(bad)
bnd
imul
sbb
dec
jmp
pop
mov
pop
xchg
and
aad
adc
lock
fsubp
into
push
arpl
shl
inc
hlt
jg
sahf
repnz
jno
and
ja
mov
adc
xchg
test
pop
loop
in
jo
pop
jecxz
pop
jg
dec
pop
mov
mov
push
push
jne
xlat
and
(bad)
ins
mov
addr16
cmp
push
add
aad
repz
fild
popf
(bad)
out
ins
and
or
pop
mov
repz
add
xor
sub
sahf
mov
data16
dec
mov
loop
pop
adc
push
mov
or
out
inc
sub
or
outs
mov
lods
(bad)
pop
pop
fwait
push
push
mov
fmul
cmp
test
pop
sub
icebp
loope
pop
fwait
movs
dec
jmp
pop
(bad)
in
rol
mov
pop
adc
fisub
out
sar
or
push
and
xchg
std
xor
push
or
aad
aad
ss
mov
pop
scas
jmp
daa
jmp
fld
imul
fsub
comiss
mov
popf
xchg
jae
mov
pop
test
sub
inc
(bad)
dec
enter
and
pop
fld
and
jae
push
lods
adc
gs
jbe
adc
js
sbb
jne
movs
js
jnp
dec
repz
jmp
inc
leave
movs
or
cmps
or
bound
cmp
xchg
fiadd
or
cwde
stc
xchg
call
pop
adc
mov
pop
xchg
sahf
leave
(bad)
sar
sahf
mov
push
shr
jl
dec
loop
test
sbb
adc
sbb
xlat
fistp
push
mov
cmp
lods
cmps
fcom
xchg
or
xchg
int
cmp
xchg
cli
stos
aam
or
xlat
pop
push
or
jns
out
mov
dec
cld
xchg
(bad)
out
sub
mov
xchg
in
add
xchg
mov
int
mov
jbe
int3
push
in
pop
cmp
xor
mov
mov
or
je
dec
int3
imul
clc
sub
sar
ja
out
retf
pop
add
xchg
add
pushf
jne
les
fwait
js
xor
in
add
mov
xchg
mov
mov
in
xchg
cmp
jno
out
les
js
push
inc
cwde
mov
pop
inc
lea
mov
aam
lods
out
xchg
lds
push
mov
and
test
dec
add
in
sbb
nop
xchg
xchg
mov
ficom
push
mov
(bad)
mov
and
aam
mov
cmps
and
test
pop
scas
fsin
xor
js
mov
mov
xchg
clc
sbb
inc
in
retf
adc
mov
adc
jge
retf
jno
lea
ds
aas
cmc
rcl
mov
out
(bad)
outs
mov
ret
adc
lods
pop
sub
and
into
icebp
sub
mov
loop
inc
ret
ja
cdq
xor
fsubr
mov
dec
xchg
push
adc
outs
and
int3
test
xor
ss
adc
lea
xor
jno
mov
pop
push
test
(bad)
xchg
jb
clc
lea
xor
sub
in
ja
pop
cwde
mov
sbb
lods
in
mov
push
jae
adc
add
je
mov
xchg
mov
ins
lods
neg
jb
out
pusha
adc
inc
cld
gs
mov
and
mov
adc
into
sub
addr16
xor
repnz
xchg
and
(bad)
pmaxub
jnp
sub
or
ret
fcomp
xor
(bad)
mov
pop
jo
out
adc
gs
int3
xlat
xor
mov
xor
xchg
sahf
aaa
mov
adc
scas
out
in
movs
clc
cmp
rcr
inc
add
outs
or
push
stos
and
cmp
outs
or
fisttp
stos
pop
xlat
jnp
push
add
inc
loopne
ror
rcr
out
push
lods
xor
xor
mov
fld
and
dec
(bad)
dec
dec
cdq
stos
inc
xchg
and
sbb
retf
mov
popf
shr
mov
pop
mov
sbb
adc
and
ret
sbb
jno
shl
clc
ret
mov
imul
mov
shl
pop
add
into
add
or
mov
jmp
and
fcomp
aam
xor
sub
or
dec
fcom
inc
cmp
imul
out
mov
int
jmp
jmp
inc
mov
sahf
pop
pop
pop
pop
enter
js
loope
jge
mov
mov
lar
jno
and
xchg
je
push
outs
stc
aaa
hlt
repz
xchg
stos
cmp
add
sbb
add
mov
add
ins
or
sub
jp
sti
sbb
dec
sti
push
out
xchg
inc
jne
inc
sub
xchg
mov
test
loop
xchg
jl
pop
enter
hlt
cmc
sbb
movs
jg
fld
iret
cmp
jge
int
cs
out
push
xor
jno
inc
xchg
push
jbe
sbb
xor
jecxz
div
loop
(bad)
aad
mov
loop
push
mov
ins
pop
(bad)
call
jno
dec
stos
push
xor
ss
and
xchg
jecxz
sub
mov
sub
(bad)
mov
add
imul
push
out
aaa
sbb
push
cmp
rol
repz
and
popa
xor
push
aaa
xor
ins
push
jo
dec
mov
lea
adc
sahf
in
neg
retf
mov
mov
test
pop
push
push
cmp
les
xor
mov
pop
mov
leave
loope
pop
gs
inc
cmp
ror
dec
cld
loope
push
or
arpl
out
jmp
mov
push
cmps
push
movs
cmp
repnz
and
push
xor
mov
shr
scas
sbb
dec
mov
adc
inc
(bad)
jbe
jae
out
mov
push
icebp
cli
pop
xor
nop
cmps
mov
fidiv
jns
jnp
call
pop
lock
and
and
adc
addr16
pop
mov
push
pop
in
cli
push
xchg
mov
popf
ret
xchg
jl
popf
ins
(bad)
test
ret
stc
je
push
cmp
mov
mov
mov
add
out
fisub
int3
into
rol
out
arpl
les
cmp
cmp
jp
cmp
out
outs
mov
xchg
jmp
mov
ret
aad
pop
scas
scas
xchg
mov
pushf
mov
loopne
repz
sub
enter
pop
outs
fsubr
shl
xchg
jmp
mov
sbb
es
mov
sar
jp
or
loop
push
pop
add
jb
inc
mov
dec
inc
inc
and
shl
add
inc
cmp
pop
mov
mov
inc
movs
mov
out
and
pop
pop
pop
in
pop
scas
fstp
hlt
xchg
loopne
mov
xchg
cwde
pop
mov
into
ins
iret
mov
test
fisubr
rcr
test
pop
pop
test
aaa
add
mov
fbld
push
repnz
stos
push
mov
adc
add
ins
adc
sti
lds
push
lods
xor
pop
daa
pop
sub
jecxz
lds
in
cmp
int3
xchg
xchg
cmp
cmp
inc
enter
stos
xchg
enter
(bad)
fadd
stos
rcr
dec
ror
mov
pop
xor
jl
fnstenv
dec
in
cmp
mov
xlat
mov
cld
(bad)
mov
lea
and
ret
aad
or
or
sbb
neg
(bad)
cli
es
out
cdq
push
call
inc
mov
out
or
cmc
sbb
ja
jmp
inc
rol
ss
xlat
xchg
hlt
mov
fisubr
dec
pop
xchg
pusha
adc
cmp
push
clc
jmp
arpl
mov
loope
dec
loopne
jp
and
outs
cmps
rcl
std
xor
mov
jb
fist
arpl
push
int
or
lea
or
mov
dec
(bad)
cmp
adc
fsubr
jp
jmp
loop
cmp
je
aas
repz
jae
test
scas
mov
mov
xor
or
inc
cdq
cmp
xlat
test
js
sbb
pusha
fsubr
push
push
sbb
in
cdq
jp
rcr
lods
mov
test
icebp
adc
pop
push
xlat
xchg
stos
pop
jnp
mov
dec
pop
cld
cmp
dec
je
adc
lods
adc
fwait
pop
arpl
dec
mov
movs
adc
mov
test
call
push
mov
jo
mov
test
fldenv
das
inc
in
out
mov
mov
mov
gs
pop
sbb
cs
push
js
and
ja
(bad)
jle
adc
inc
out
shr
fsub
dec
push
mov
mov
scas
or
aad
cdq
push
(bad)
cmp
les
aas
jg
mov
out
stos
movs
jb
adc
ins
sti
out
pop
movs
dec
add
sbb
and
push
imul
jb
fiadd
xor
push
ds
cmp
loop
push
jne
in
and
ins
stos
mov
adc
int
test
push
cdq
les
mov
push
ds
movs
loop
repnz
int
arpl
pop
and
sub
mov
and
add
into
rcl
xchg
(bad)
scas
cld
jb
pop
dec
fdivr
pop
ror
fsub
mov
dec
dec
rol
aas
push
stc
test
std
sbb
xor
inc
mov
mov
shr
dec
lods
cmc
stos
add
mov
mov
std
push
push
xor
int3
add
adc
jb
shl
imul
and
shl
or
je
js
test
fwait
cmps
mov
fnstcw
sub
jnp
xchg
or
xor
stos
mov
lahf
pop
mov
ja
add
pop
inc
xor
imul
mov
push
(bad)
sar
cmp
repz
pop
in
retf
imul
out
mov
js
jp
cmp
and
aad
adc
mov
loope
add
sub
mov
daa
fst
retf
push
dec
test
sbb
mov
inc
call
cmp
test
(bad)
shl
sti
push
sub
clc
shl
adc
mov
sbb
pop
pop
xchg
in
add
mov
lock
mov
jnp
iret
xor
retf
xchg
add
int
mov
mov
ja
mov
cmp
(bad)
mov
xchg
mov
js
pop
les
jmp
imul
icebp
mov
dec
cmps
or
mov
ja
addr16
inc
arpl
scas
ja
and
sbb
and
push
mov
ror
es
gs
pusha
mov
out
cmp
leave
or
div
fnstsw
das
ret
or
push
xor
(bad)
ficom
(bad)
cmp
mov
pop
mov
sbb
cmps
push
xchg
inc
loop
add
sbb
and
adc
push
sbb
jecxz
or
adc
cmp
add
or
lods
xor
sbb
inc
sub
dec
cmp
movs
add
inc
jg
test
ret
out
fidivr
push
int
mov
and
fistp
add
adc
jmp
mov
mov
push
rol
imul
out
cmp
jp
sahf
mov
pop
inc
sub
es
mov
les
or
or
ror
stos
ret
mov
jecxz
ins
push
into
adc
dec
movs
inc
shl
dec
pop
jle
(bad)
cmp
mov
aas
call
dec
fsubr
cmc
xchg
sub
mov
mov
pop
sub
jge
sub
js
out
and
sti
add
jno
add
jbe
test
stos
mov
push
adc
gs
add
ins
repz
push
iret
and
imul
push
test
stos
lods
repnz
jnp
pusha
mov
ja
jg
cmp
push
mov
fld
add
xchg
pop
jmp
dec
dec
mov
mov
adc
clc
pop
bnd
dec
es
cmc
cdq
les
cmc
adc
stos
lahf
mov
lds
iret
jp
addr16
mov
add
in
fst
push
jle
push
imul
popf
fmul
scas
mov
in
loopne
xchg
xchg
pop
and
sbb
fwait
dec
and
pop
and
push
and
mov
shl
call
cmp
daa
add
mov
sub
cmp
je
int3
std
loop
hlt
sti
push
aaa
mov
mov
xor
add
in
movs
mov
fstp
fbstp
sub
inc
lods
fucomip
imul
cs
adc
inc
sub
int
cmp
dec
and
and
adc
jbe
mov
mov
mov
das
inc
jns
stos
sub
sub
test
mov
inc
out
and
popf
(bad)
aam
rcr
pushf
cmps
aas
movs
jnp
and
jg
pop
dec
jae
mov
or
dec
adc
inc
in
lods
arpl
jmp
sbb
pop
retf
fnstenv
xchg
ja
push
aam
loop
repnz
mov
jmp
scas
mov
ss
fst
fsubr
movs
test
jo
push
retf
mov
sbb
push
inc
cmp
test
add
pop
cs
cwde
mov
iret
add
dec
cmp
inc
and
mov
jo
test
mov
mov
mov
or
cdq
jo
aam
outs
and
rcl
lea
data16
dec
mov
fnstenv
mov
sbb
(bad)
int3
std
pop
fdivr
std
pop
mov
aam
mov
dec
mov
push
jmp
jo
loopne
xor
sub
inc
popf
or
jg
adc
cmps
into
add
fst
dec
push
sbb
test
aas
ret
aam
jns
push
push
mov
fsubr
cmp
mov
not
imul
and
repnz
mov
xor
xlat
xor
adc
fidivr
adc
call
es
lods
pop
shr
retf
sub
fild
inc
stos
jns
mov
xchg
call
(bad)
sahf
inc
adc
push
xchg
popf
sub
cld
hlt
ret
dec
jl
fbld
cmps
(bad)
jg
popa
(bad)
cmp
into
ds
test
sub
xor
push
push
mov
xchg
(bad)
push
nop
int3
hlt
push
nop
or
xchg
test
add
(bad)
arpl
and
mov
mov
test
movs
int3
jne
icebp
jnp
cmp
stc
enter
cmp
cmp
call
add
jno
pop
push
test
xor
ja
xor
inc
fs
dec
rcl
enter
loope
xchg
adc
sbb
xchg
inc
outs
jl
cmp
inc
adc
rol
inc
fnstsw
jno
adc
mov
mov
xlat
gs
cmps
dec
mov
inc
inc
jle
repz
scas
push
sbb
mov
or
fsub
xor
stos
inc
dec
mov
lock
jecxz
int3
lea
mov
push
mov
sbb
mov
and
cmc
jmp
(bad)
div
call
add
xor
in
push
adc
into
popf
jl
gs
xlat
or
mov
lods
inc
xor
xchg
shl
arpl
(bad)
push
pop
push
pop
mov
mov
clc
popf
(bad)
jb
or
into
aaa
xor
cmps
out
adc
cwde
shl
fwait
cdq
and
test
cmp
outs
lods
fs
out
push
out
into
mov
jns
xchg
cli
mov
mov
cmp
adc
shr
adc
jae
movs
lds
frstor
sti
cmp
ds
xchg
sbb
inc
call
mov
sahf
mov
das
ficomp
pusha
pop
sub
in
mov
inc
imul
push
(bad)
into
dec
inc
pop
es
stos
outs
(bad)
ins
push
cmp
inc
outs
xchg
icebp
cli
ds
cwde
sbb
in
aas
jne
outs
fwait
mov
ja
fist
jg
add
mov
mov
repnz
mov
das
in
call
adc
dec
movs
jbe
xor
je
in
aas
adc
adc
push
inc
iret
outs
ret
mov
add
(bad)
arpl
mov
cwde
repnz
cmp
add
retf
jge
lods
sub
sbb
inc
test
pop
outs
clc
xchg
and
stos
sbb
pop
mov
shl
in
fs
push
scas
scas
dec
outs
div
mov
xor
pop
sahf
test
xlat
cmp
sub
je
sbb
add
iret
dec
mov
fdivr
pop
or
repnz
test
addr16
ds
xor
ins
data16
iret
dec
(bad)
movs
es
cmps
pop
dec
sti
add
aaa
cmp
pop
push
lea
out
push
mov
int3
fwait
push
popf
jg
sub
test
adc
sbb
fild
cmp
xor
sbb
(bad)
mov
jne
and
pop
add
cdq
push
test
imul
xchg
fimul
mov
mov
sub
inc
add
mov
arpl
pop
jnp
push
(bad)
xchg
jecxz
aad
test
inc
add
pop
imul
and
sbb
hlt
push
mov
imul
nop
mov
adc
inc
sub
retf
dec
add
adc
push
scas
push
ret
inc
test
movs
jg
test
fwait
ins
dec
std
push
repnz
sub
mov
xor
daa
int
ret
shr
inc
adc
sub
jae
or
xchg
mov
or
pop
fld1
cwde
and
ins
out
scas
push
out
cdq
jae
adc
mov
mov
cmps
imul
xchg
cmp
mov
push
cmp
mov
loopne
sub
inc
fimul
xor
xchg
mov
jno
je
sti
push
mov
and
mov
shr
iret
js
lds
mov
xor
xchg
add
mov
aas
ds
sub
inc
cmp
dec
inc
dec
pop
or
ror
push
jno
inc
popa
jp
sar
mov
or
out
jbe
je
sub
and
cmp
jmp
adc
xchg
cmp
pmuludq
and
call
dec
call
cmp
clc
mov
into
sbb
or
push
inc
cmps
or
and
rep
ja
cs
sbb
sbb
pop
fwait
push
xlat
add
fmul
das
add
bound
add
cdq
pop
push
sbb
and
popf
or
xchg
jnp
push
sbb
xchg
jp
popa
fld
retf
test
inc
ltr
(bad)
cld
fistp
push
adc
pushf
xchg
sub
clc
mov
outs
inc
push
in
push
(bad)
shl
cmp
adc
push
cs
sahf
repz
xor
mov
add
or
mov
fnop
adc
outs
mov
imul
mov
pop
frstor
adc
outs
fdivr
add
xor
les
xor
dec
push
pusha
and
and
popf
pop
sbb
lahf
loop
pop
mov
les
jb
ja
fisub
fimul
sbb
rcr
inc
les
and
mov
sti
or
mov
push
pop
xor
and
jnp
sub
mov
jno
out
pop
ficom
out
inc
mov
pop
inc
fsub
es
rcl
cwde
ins
mov
outs
gs
cmc
fdivr
int
or
cwde
out
not
les
popa
jmp
jp
cmp
jne
mov
mov
(bad)
nop
neg
scas
xchg
push
add
rol
test
outs
push
pop
arpl
cmps
cmps
ds
push
pop
cmp
jno
sar
jne
call
and
or
test
shl
movs
mov
and
adc
xor
pop
stos
iret
inc
mov
sub
loope
gs
sub
and
ror
or
cmp
in
cdq
cmp
add
aaa
mov
ja
jae
sahf
mov
lds
pop
or
add
loopne
sbb
xchg
mov
xor
test
adc
fcomp
pusha
pop
repz
xchg
call
and
xchg
lahf
aaa
sbb
pop
inc
icebp
pop
push
sub
xor
push
jb
adc
cdq
jnp
stos
sub
(bad)
mov
sub
push
cdq
cwde
ret
mov
dec
or
lock
sub
fucomp
mov
adc
lods
sti
push
cwde
adc
push
xchg
mul
mov
mov
or
jle
mov
out
sbb
stos
or
and
mov
retf
cmp
cld
mov
xchg
sub
and
test
add
(bad)
addr16
jp
pop
dec
popa
xlat
outs
sub
xor
inc
fnstcw
int
jnp
fadd
mov
mov
jno
add
mov
in
jno
imul
and
inc
inc
push
js
dec
inc
mov
xchg
sbb
add
pusha
rcl
test
xchg
jbe
push
(bad)
aas
mov
push
ins
aaa
fsubr
fadd
std
inc
cmp
mov
push
xlat
pop
mov
mov
dec
retf
test
(bad)
fdiv
xor
pusha
xor
add
add
and
loop
inc
in
xor
inc
jne
out
scas
sbb
(bad)
neg
loop
test
shl
gs
fimul
cmp
mov
jle
div
sbb
mov
out
jg
xchg
popa
adc
pop
fcomp
leave
pop
add
xchg
dec
adc
mov
sub
(bad)
adc
jle
push
cmp
(bad)
jb
pop
cmp
push
stos
xor
inc
mov
push
mov
es
repz
cmp
push
icebp
lock
lock
mov
ss
sbb
out
int3
adc
retf
mov
cmp
jge
dec
mov
mov
retf
sahf
(bad)
cmovs
out
add
mov
loop
test
sub
int3
mov
mov
int3
mov
jbe
mov
sbb
call
xlat
daa
dec
mov
push
imul
loope
cmp
es
mov
pop
mov
dec
lods
jnp
add
retf
or
je
rol
add
inc
jae
pop
cs
mov
cs
mov
sub
inc
pushf
mov
sahf
sub
cmp
inc
leave
lahf
sub
movs
std
pop
jno
scas
inc
pop
loop
pop
push
mov
ja
(bad)
xor
std
dec
std
push
loope
icebp
ja
repz
inc
and
sub
arpl
inc
int
lods
xchg
cmp
movs
mov
push
movs
in
push
js
jmp
sbb
scas
iret
xor
cmp
not
test
xchg
cwde
mov
(bad)
mov
pop
xchg
out
inc
ror
div
push
int
jecxz
and
adc
mov
jae
stc
dec
out
cmp
adc
xor
add
sub
in
or
xchg
jne
mov
push
scas
fstp
and
jp
hlt
mov
dec
pop
sub
daa
inc
popf
in
xor
lea
cmp
fwait
hlt
mov
add
xor
jo
test
jbe
fldcw
mov
add
rol
mov
mov
clc
aas
mov
leave
les
or
rcr
mov
vmovdqa
mov
(bad)
sub
dec
cmp
shl
jmp
fmul
mov
dec
fs
movs
paddusb
in
cdq
ss
and
int
add
push
xchg
and
push
repz
arpl
mov
cld
dec
enter
lea
popf
sub
and
xor
jg
fidiv
and
daa
mov
pop
pop
dec
add
fs
inc
(bad)
shl
test
mov
out
pusha
retf
cdq
pop
mov
in
mov
mov
sbb
sub
minps
jb
out
jno
add
std
jns
pop
mov
xchg
inc
sub
bnd
sub
push
out
leave
jno
sbb
xchg
mov
pop
and
int3
xor
ret
jmp
mov
loopne
dec
add
ret
iret
pop
test
jle
ss
je
mov
mov
sbb
int3
sub
jmp
repnz
dec
sbb
adc
add
and
cmps
xchg
mov
mov
cwde
dec
xchg
lods
repnz
out
test
pop
into
int3
push
sbb
fild
mov
xchg
xchg
pop
and
jnp
enter
clc
dec
mov
push
or
fdivr
add
cmc
cmp
ret
xchg
retf
mov
mov
icebp
out
adc
push
mov
retf
test
push
push
adc
loop
cli
stos
jns
dec
loope
sahf
xor
or
xchg
daa
xchg
and
repz
add
inc
or
(bad)
sub
les
push
xchg
dec
pop
cmps
xor
inc
movs
xor
pop
adc
cmp
xor
adc
pop
sbb
loope
add
pop
add
mov
mov
bound
stos
and
loope
(bad)
mov
push
inc
adc
test
in
mov
mov
sar
icebp
aaa
xchg
aaa
xor
not
cmp
mov
aad
ins
and
inc
xchg
shl
push
push
out
mov
mov
sbb
(bad)
imul
jp
add
outs
mov
mov
jbe
mov
jp
push
mov
fild
std
in
in
fimul
pop
mov
aaa
pop
ret
mov
loop
push
mov
xlat
shr
xor
xor
in
outs
push
lds
cmps
scas
xchg
in
xchg
scas
dec
out
add
cwde
mov
fimul
xor
ficom
ss
pop
dec
pop
or
int
cmc
lds
dec
inc
nop
sub
cmp
int3
mov
or
pop
jae
xchg
inc
movs
cmp
cmc
mov
ror
push
js
rcr
int3
jmp
adc
ja
movs
cmp
jne
mov
xor
mov
xor
ins
cli
add
sub
ret
sti
aad
pop
jae
dec
dec
fwait
mov
cld
sub
dec
js
lods
jle
sbb
mov
and
aaa
ret
sub
mov
jmp
sub
pop
adc
(bad)
sub
scas
xchg
loopne
shr
fst
in
mov
pop
popf
push
sbb
(bad)
dec
enter
lea
jno
jp
ja
inc
mov
dec
sti
mov
push
loope
std
shl
(bad)
mov
test
add
sbb
stos
mov
xchg
aas
dec
div
xchg
push
jle
sbb
movs
lea
ret
dec
xor
psadbw
sbb
jg
out
stos
das
and
scas
das
sub
(bad)
add
mov
repz
es
rcl
shl
inc
ins
aaa
add
push
mov
les
sub
mov
jge
retf
setno
cmp
or
call
outs
mov
aas
inc
jns
cs
shr
daa
dec
push
inc
xchg
xchg
jmp
cmp
mov
int3
hlt
xor
mov
and
enter
repz
xchg
fadd
add
sti
push
mov
call
cmp
jl
out
push
xchg
mov
ficom
inc
int
sub
test
pusha
popf
in
icebp
rol
int
sbb
jmp
xchg
xchg
cmc
popf
and
mov
loopne
mov
jae
dec
cmps
cmps
push
lds
add
out
or
jnp
mov
mul
lods
mov
ins
adc
and
cli
xor
xchg
ror
sbb
add
push
sub
stc
dec
and
dec
dec
mov
mov
bound
dec
test
bts
test
jno
rol
(bad)
cmp
mov
cmp
jb
fimul
and
(bad)
pop
sub
jp
fimul
call
mov
mov
add
pop
mov
test
sub
shr
adc
sbb
movs
add
outs
xchg
cmp
sub
jo
bound
inc
pop
repnz
xor
jmp
test
ins
addr16
adc
loopne
jne
jno
or
jbe
jecxz
or
jae
mov
(bad)
push
cmc
aam
push
aas
iret
and
dec
sti
cmps
pop
jne
xor
mov
pop
movs
out
sbb
stos
sbb
or
mov
cmps
dec
add
sti
outs
adc
cwde
ins
icebp
out
pop
pop
fisub
lahf
nop
sub
and
das
cmp
inc
out
call
and
jbe
or
xor
xor
pop
dec
scas
(bad)
lock
sub
aaa
dec
jno
jp
push
out
add
out
repnz
bnd
jge
sbb
(bad)
sbb
mov
inc
inc
jo
cmp
enter
sti
ins
dec
fcmove
pop
adc
mov
sbb
sbb
ins
cmps
ins
mov
add
iret
retf
lods
ror
in
(bad)
mov
cmp
jmp
lea
xchg
pop
lea
int3
mov
jmp
mov
add
push
loop
(bad)
inc
xor
cdq
add
jno
dec
and
test
mov
sbb
test
mov
xchg
jge
push
frstor
scas
imul
lods
hlt
add
mov
scas
xchg
and
and
ret
add
nop
xor
or
ret
je
dec
xor
cwde
add
int
cmp
ds
mov
call
xchg
aaa
push
jo
sbb
mov
xor
sub
ins
push
das
mov
test
and
jne
sub
in
xchg
addr16
ins
retf
aam
dec
lock
add
inc
stos
xchg
fld
(bad)
call
fptan
outs
pop
inc
and
das
xchg
dec
cli
in
jmp
aas
and
push
add
test
xchg
cmp
dec
mov
jmp
dec
fcom
mov
daa
(bad)
cdq
stos
clc
pop
imul
test
mov
sub
jle
cmc
movs
cmps
fist
or
das
xchg
mov
jp
fmul
cmp
sub
mov
aam
jno
mov
xor
push
stos
and
ss
lock
out
dec
jmp
in
jl
inc
or
jmp
dec
aad
jle
add
movs
pop
xor
push
sbb
inc
and
call
adc
adc
add
mov
das
fild
pop
jo
jg
lahf
sahf
mov
addr16
jmp
je
or
dec
jnp
cmp
or
into
in
inc
mov
mov
push
cmp
aaa
mov
inc
jns
pop
scas
xchg
popa
jp
in
mov
mov
mov
sub
sub
les
sub
push
rol
(bad)
xchg
xor
mov
(bad)
out
or
sub
cdq
cwde
mov
sbb
movs
cld
and
mov
fsub
nop
push
pop
xchg
jns
adc
sbb
cmps
lds
xor
xor
repz
adc
mov
int
or
sahf
shr
neg
arpl
jns
mov
(bad)
in
or
sub
add
and
jb
scas
(bad)
(bad)
lods
mov
jnp
pop
movs
jg
(bad)
push
icebp
(bad)
in
retf
stos
mov
in
cmp
dec
and
inc
sbb
out
mov
mov
mov
jecxz
xor
popa
pop
or
mov
sbb
mov
xchg
mov
fisub
pop
movs
imul
inc
add
pop
mov
daa
je
rcr
jge
mov
mov
rol
jns
add
jecxz
dec
jnp
xchg
fwait
xchg
aad
fld
sbb
mov
mov
(bad)
push
pop
push
or
xchg
sbb
mov
inc
jge
xor
mov
mov
add
popf
retf
and
sub
ss
add
sbb
std
sbb
gs
(bad)
pop
sbb
inc
jg
jno
ins
push
imul
scas
jg
dec
aam
jae
mov
cmp
jns
add
push
push
stos
dec
sub
mov
hlt
hlt
ret
cmp
fst
shl
xor
cmp
inc
adc
xor
mov
aaa
mov
cdq
ins
outs
xchg
sbb
aaa
int
pop
test
add
add
mov
pop
pop
jnp
jg
sub
outs
(bad)
call
adc
jnp
mov
cpuid
mov
mov
nop
or
jae
mov
addr16
in
inc
fst
xor
sbb
jne
rcl
out
push
test
adc
mov
mov
fnstcw
sbb
idiv
lea
sbb
sub
imul
pop
or
sbb
cmps
les
mov
ins
aam
sbb
icebp
in
shr
cmp
push
cld
add
js
dec
sub
fsub
les
cmc
fwait
push
test
cmp
pop
jl
xchg
movs
jmp
out
clc
and
pop
pop
mov
mov
(bad)
in
push
out
lock
stos
icebp
mov
push
and
or
adc
mov
adc
pop
imul
pusha
test
mov
rol
cmp
ds
mov
cmp
lds
repz
outs
add
mov
idiv
fsub
nop
xor
imul
es
movs
xor
mov
ds
pop
rcr
iret
aas
pop
push
sub
loop
mov
cwde
dec
add
cmc
stos
into
or
or
out
stos
movlps
pop
enter
push
dec
mov
rcl
push
sbb
push
sbb
ret
ins
jg
push
dec
movs
add
and
inc
pusha
jne
xchg
call
loop
icebp
out
(bad)
push
aam
inc
dec
test
iret
dec
jo
dec
xchg
or
sub
or
ret
xor
vmulss
xrelease
ss
shl
into
fcmovnu
std
nop
adc
add
mov
test
daa
lods
das
loop
mov
cmp
cmp
mov
xor
es
(bad)
adc
push
jo
or
adc
imul
or
mov
callw
xor
sbb
cmp
hlt
push
pushf
sbb
pusha
shr
mov
mov
popa
xchg
mov
jno
lahf
xor
iret
mov
cmp
sub
(bad)
push
mov
pop
mov
outs
inc
push
sahf
retf
sbb
pop
and
in
les
cmps
sahf
add
lahf
jecxz
sbb
inc
jns
sbb
pusha
in
mov
test
pop
inc
(bad)
mov
pop
stos
test
push
ins
inc
jp
loopne
in
xor
mov
pop
adc
fs
mov
mov
mov
pop
outs
inc
inc
enterw
sub
or
mul
sbb
cmc
stc
mov
rcl
jg
imul
ror
xor
inc
(bad)
inc
mov
loope
inc
cmp
retf
mov
sub
pop
add
(bad)
js
ss
push
sub
lods
ja
(bad)
cmp
fs
leave
pop
adc
xchg
lahf
lahf
mov
sub
bound
inc
out
dec
mov
adc
(bad)
sub
daa
fild
pop
stos
loopne
push
and
push
mov
push
sbb
jne
jp
jb
popf
or
stc
gs
jge
cmc
fsub
dec
(bad)
sbb
stc
mov
nop
lds
outs
pop
sbb
cs
push
jg
ins
jp
mov
int
ins
add
(bad)
fisttp
out
mov
not
xchg
iret
loope
sub
(bad)
cmp
push
push
sbb
lock
jg
gs
pop
adc
sbb
mov
jns
int3
addr16
xor
mov
mov
or
push
pop
pop
cmp
push
retf
fdiv
sar
jle
jp
mov
imul
call
in
add
push
add
inc
jmp
repz
mov
pop
adc
sub
mov
pusha
xchg
adc
test
out
outs
mul
fistp
or
loope
(bad)
div
aam
aaa
push
xchg
adc
cld
lock
push
xor
sahf
out
out
iret
sbb
push
sbb
cdq
jne
dec
shl
(bad)
cwde
push
xlat
adc
idiv
and
sbb
lods
out
adc
es
cli
mov
sbb
add
sub
lds
arpl
xor
pop
out
push
jbe
mov
ror
sbb
mov
sub
sti
hlt
imul
mov
mov
mov
lea
add
ss
(bad)
out
jg
mov
jne
cmps
inc
and
and
ins
or
les
push
pop
mov
xchg
sbb
inc
inc
mov
pop
inc
test
pop
xchg
in
(bad)
out
leave
imul
js
pop
popf
daa
(bad)
call
pop
mov
aam
inc
xchg
aas
mov
mov
xchg
jne
cs
jns
leave
test
and
pop
cmp
addr16
test
and
add
shr
repnz
push
cmp
pop
cmp
outs
(bad)
fnstcw
mov
and
mov
ss
les
inc
arpl
or
popa
inc
mov
gs
add
ret
cmp
xor
lods
add
adc
jb
push
push
sar
cld
les
mov
push
push
sub
xor
clc
jmp
adc
fstp
inc
in
ins
clc
xchg
push
mov
sbb
(bad)
in
pop
shl
movs
stos
repnz
mov
xchg
sub
lods
or
dec
enter
pusha
add
sbb
jl
inc
clc
js
aas
(bad)
lea
pop
jnp
push
fsubr
fisttp
sbb
fsub
dec
mov
repz
repnz
jl
xor
jo
jmp
sti
out
mov
cmp
les
jmp
xor
cdq
popf
mov
pushf
pop
mov
(bad)
icebp
fisttp
mov
popa
sbb
inc
stos
xchg
fdivr
lods
ja
and
fsub
sbb
jns
and
ret
ins
imul
xor
and
pop
push
push
hlt
xchg
add
ror
sbb
mov
scas
xchg
xor
mov
mov
and
lea
or
xor
and
sub
pop
xlat
fwait
das
add
or
fwait
rol
inc
and
daa
xlat
lods
mov
repz
adc
fs
hlt
xor
push
sahf
ffreep
(bad)
mov
or
mov
xor
nop
cmp
stc
(bad)
mov
inc
popf
pop
add
pop
mov
ror
jge
out
sbb
push
jbe
test
sub
mov
jno
cmp
leave
retf
push
call
xchg
lods
(bad)
mov
push
mov
push
scas
lods
push
pop
jae
out
(bad)
fild
mov
or
fild
cs
loopne
adc
es
inc
mov
iret
cmp
jae
test
push
mov
cmp
dec
push
mov
sti
adc
lahf
in
xchg
js
adc
inc
mov
nop
jo
sub
sbb
pop
lds
sbb
js
and
stc
leave
add
push
mov
sub
mov
das
push
popf
cmp
stos
js
inc
sub
pop
clc
mov
test
cwde
pop
inc
jae
pop
ja
test
enter
retf
and
addr16
data16
lods
xor
mov
in
push
into
lods
movs
cwde
(bad)
stos
add
je
mov
sbb
mov
stos
jmp
mov
scas
jp
sahf
dec
add
data16
(bad)
xlat
inc
pop
inc
or
cmp
(bad)
push
mov
cmp
out
and
xlat
push
jae
dec
fistp
ret
mov
dec
das
repz
mov
movs
test
in
jbe
mov
sub
inc
adc
push
pop
cmp
push
gs
out
lods
push
inc
es
jecxz
rcl
les
out
retf
int
push
mov
or
adc
sbb
stos
bound
stos
(bad)
jno
mov
mov
push
shr
dec
ds
lods
scas
push
push
aas
pop
call
pop
imul
xor
movs
imul
gs
clc
sahf
add
push
mov
nop
inc
adc
retf
in
push
mov
mov
adc
inc
cmp
dec
ret
scas
mov
ss
add
movs
xor
imul
and
xor
mov
scas
sbb
repz
dec
mov
push
ss
dec
sub
in
dec
out
mov
jl
(bad)
(bad)
fist
clc
xchg
and
mov
cmp
int
dec
jge
aas
popa
inc
icebp
pusha
and
pop
out
aam
and
pusha
jmp
ja
sub
or
xor
enter
test
dec
dec
fucom
adc
pop
mov
mov
loop
dec
inc
cs
inc
or
into
push
mov
lock
jmp
retf
scas
into
sbb
sub
xchg
jne
mov
popa
cld
xchg
inc
nop
sub
dec
cli
mov
mov
out
fisttp
xor
aad
bound
jmp
mov
popf
fld
jmp
es
test
rcl
pop
jmp
and
sbb
xor
or
lea
mov
pusha
test
call
movs
call
or
mov
loopne
inc
xor
sbb
pop
test
xor
addr16
cwde
test
pop
rcr
scas
std
mov
lock
in
adc
jbe
adc
dec
sbb
ficomp
push
outs
lahf
std
fwait
mov
cmp
or
call
dec
xor
xchg
adc
pop
fmul
loop
pop
ret
lock
sbb
mov
adc
scas
xor
sbb
adc
dec
sbb
jno
cmps
shr
xrelease
jae
test
lock
mov
pop
in
mov
aad
jno
shr
cmp
or
jnp
int3
stc
(bad)
jp
lea
jge
rep
fst
jmp
retf
int
je
iret
xchg
popa
lods
idiv
mov
push
fcomp
sub
call
pop
cmc
repnz
pushf
xchg
sbb
mov
push
xor
cmps
sbb
cmp
mov
xchg
test
shr
push
shl
sbb
movs
aad
inc
push
cs
lock
pop
adc
pop
lods
sahf
ret
fdecstp
dec
cli
or
pop
(bad)
inc
push
xor
mov
and
rol
push
fcomi
xchg
cld
dec
mov
push
mov
pop
xor
ror
mov
test
adc
(bad)
sar
fucomip
push
cs
add
jb
push
scas
jmp
shl
dec
cmps
xchg
shr
clc
mov
(bad)
sub
in
and
adc
push
jmp
repnz
inc
aam
or
ud1
and
mov
repz
test
mov
popf
cmp
cmp
or
xchg
ret
mov
cmp
add
xrelease
test
jne
and
xchg
cmp
stos
leave
dec
adc
jmp
enter
scas
add
sbb
in
xlat
(bad)
adc
cld
(bad)
cmps
adc
out
(bad)
jmp
dec
jb
cmc
push
fisub
das
mov
jnp
lods
ss
pop
pushf
nop
(bad)
sbb
call
(bad)
push
nop
or
pop
xchg
push
dec
xchg
xchg
jmp
inc
jg
test
jbe
call
mov
push
gs
sbb
je
or
shl
hlt
or
push
call
aam
mov
inc
clc
mov
mov
xor
cdq
adc
mov
push
(bad)
push
sbb
sub
retf
addr16
jae
or
xor
and
sub
mov
jmp
loope
mov
js
hlt
pushf
loope
out
mov
stc
out
ficom
or
add
out
cmp
adc
mov
pop
mov
cmp
xchg
rcl
bound
loope
popa
ficomp
sbb
shr
sbb
sub
pop
or
stc
aas
xchg
enter
sub
jbe
loop
sub
jns
stos
add
inc
pop
int
mov
push
jg
test
aad
leave
(bad)
retf
outs
mov
mov
ror
stos
arpl
fst
xor
repnz
ror
jp
cwde
rcr
cdq
sub
xchg
shl
pop
jae
lods
add
call
mov
lds
clc
test
mov
cmp
sbb
call
mov
cmp
mov
pop
mov
fistp
test
push
dec
imul
ins
mov
sbb
push
stos
jo
jns
add
iret
fidiv
rcl
int3
shl
cmps
add
test
pop
dec
pop
ins
icebp
lea
jns
adc
push
ret
lea
mov
adc
lahf
(bad)
pop
loop
cmps
ror
mov
ret
test
push
loopne
sti
call
mov
dec
push
dec
cmp
or
ss
xchg
pushf
adc
mov
stc
ror
jns
stos
adc
or
push
stc
sub
jge
cli
push
(bad)
sub
dec
aaa
pop
inc
rcl
dec
push
xchg
iret
enter
clc
pop
popf
ret
arpl
xchg
rep
mov
js
ret
push
addr16
jle
mov
retf
cmp
and
mov
popf
(bad)
mov
das
out
loop
inc
add
dec
icebp
sbb
push
rcr
pop
in
mov
aad
xor
jne
daa
adc
xor
and
xchg
shl
in
sbb
shr
pop
test
and
sahf
pushf
cmps
pusha
mov
call
push
sar
mov
mov
push
push
and
xchg
xchg
pop
call
xor
outs
pop
mov
mov
mov
dec
retf
f2xm1
jne
retf
ficom
inc
and
wbinvd
jge
ss
sbb
push
add
scas
ss
pandn
push
and
jecxz
out
add
mov
xor
add
daa
cmp
fst
test
cdq
jo
add
sahf
add
add
mov
in
outs
or
out
not
ja
into
(bad)
mov
mov
cmps
das
or
and
sub
inc
daa
mov
shl
mov
shr
sub
jbe
mov
cmp
inc
ss
div
or
sub
out
test
pop
or
cmp
enter
iret
aaa
dec
mov
push
mov
sub
mov
xor
clc
xchg
or
lods
fs
and
sahf
mov
int
sub
dec
loopne
jmp
test
sbb
mov
jb
push
sbb
mov
mov
cdq
push
adc
jg
popf
mov
and
adc
push
adc
add
call
inc
and
and
xchg
and
mov
(bad)
retf
imul
js
ins
or
jb
push
or
(bad)
adc
(bad)
jp
cs
popa
mov
sub
pop
and
xor
pop
mov
dec
adc
lock
popa
shr
lods
rcr
lock
movs
je
mov
xchg
or
jmp
(bad)
pop
imul
push
sbb
rol
outs
or
enter
retf
inc
push
and
shr
aam
jg
adc
loope
mov
pop
(bad)
or
push
test
cmp
out
inc
pusha
inc
sbb
push
pop
inc
pushf
sar
imul
cmps
jns
sub
pop
fs
adc
push
pop
adc
ret
retf
aam
repnz
std
push
add
xor
push
bound
cs
adc
push
gs
lods
leave
inc
movs
(bad)
leave
cli
mov
xchg
loope
cmps
or
jo
cld
xlat
inc
frndint
push
cld
push
in
lds
pop
mov
sub
shl
dec
xor
mov
shl
call
adc
ret
dec
sahf
mov
adc
(bad)
adc
and
and
sub
lock
pusha
push
or
les
cmp
iret
xor
sub
les
sub
xor
daa
inc
or
xor
adc
jp
cs
fadd
daa
pop
fsub
sbb
inc
repz
retf
mov
loopne
xchg
iret
mov
stos
mov
cmps
adc
cmp
add
rcr
push
mov
sti
stos
je
out
jno
cmp
inc
add
cli
mov
daa
and
ja
mov
add
adc
push
push
dec
mov
lods
add
mov
mov
out
int
fsub
adc
(bad)
stos
sub
idiv
out
daa
loope
and
std
dec
mov
pop
loopne
push
push
or
pop
pop
xchg
es
adc
es
in
clc
loope
mov
ret
dec
adc
jp
lea
nop
stos
arpl
ja
jmp
cmps
je
adc
std
jl
xchg
pop
das
xlat
cli
kmovb
push
jl
inc
and
jl
cmp
scas
ins
(bad)
cmp
test
adc
aaa
pop
adc
xor
or
ret
add
arpl
mov
jmp
stc
adc
xchg
ret
popa
repz
repnz
mov
sti
add
add
xor
in
jge
pop
sbb
pushf
adc
dec
jle
test
lock
iret
mov
mov
setbe
mov
mov
mov
in
jae
xchg
outs
jmp
mov
adc
das
xchg
fiadd
rcr
xor
adc
popf
cwde
dec
test
mov
mov
mov
lock
mov
and
out
(bad)
cmp
adc
retf
xchg
mov
or
sub
fyl2x
pop
sar
rol
call
repnz
(bad)
mov
movs
iret
xor
pop
(bad)
pop
cs
add
push
mov
sbb
cmps
xchg
stos
fcom
shl
fwait
mov
sub
inc
enter
clc
xchg
and
pop
push
inc
scas
cld
xor
pop
adc
mov
rep
cmp
pop
cli
pop
add
jo
(bad)
and
cli
aaa
xchg
fsubr
pop
push
pop
mov
imul
push
mov
push
es
cmp
(bad)
pop
xor
mov
jle
loopne
cmp
xchg
push
loope
xchg
stos
and
ror
retf
sub
mov
dec
mov
inc
push
push
mov
mov
(bad)
mov
or
nop
gs
xor
(bad)
addr16
mov
out
call
ror
ins
cmp
retf
int3
mov
sbb
ret
lods
push
jl
pop
std
mov
(bad)
dec
adc
dec
mov
mov
je
fdiv
or
daa
arpl
call
je
cs
mov
jo
push
in
jae
pop
cmps
mov
mov
sub
sbb
pop
xchg
inc
push
hlt
inc
in
mov
xor
scas
iret
or
loopne
movs
jg
push
pusha
or
mov
je
push
fwait
mov
dec
and
inc
dec
push
out
push
pushf
sbb
out
out
sbb
sbb
jo
dec
inc
add
loop
fistp
fwait
das
ret
lods
not
imul
nop
mov
mov
inc
rcl
stc
jno
cmp
ins
cli
cmp
dec
iret
push
push
shl
test
push
mov
cmp
mov
cld
and
inc
push
push
div
jecxz
pop
idiv
pop
mov
mov
pop
xor
or
inc
fld
inc
sahf
push
loop
jmp
cmp
aaa
or
dec
xlat
mov
shl
shr
xlat
adc
xor
lods
ins
aas
cld
mov
cmp
jbe
mov
imul
stc
ins
sbb
(bad)
adc
ret
fdivr
xlat
sbb
jne
popf
push
xchg
cs
int3
xor
shl
xchg
xchg
dec
inc
mov
push
dec
(bad)
fnsave
push
xchg
pushf
xor
cdq
gs
aam
xchg
push
pop
add
mov
jnp
cli
out
daa
pop
or
cmp
xor
mov
aas
loope
push
push
mov
mov
fsub
inc
and
cmp
dec
sbb
arpl
add
and
mov
test
cwde
push
in
pcmpgtb
inc
pop
bswap
mul
stos
fdivr
mov
call
hlt
aad
enter
repz
xor
ss
push
push
pop
arpl
shl
adc
fild
or
rol
stos
int
adc
fdivr
push
or
(bad)
lock
cld
shr
jae
jne
jns
inc
loopne
pushf
jmp
sbb
xchg
pusha
sbb
ror
mov
das
fisubr
mov
jne
pop
test
test
aas
jmp
xor
jb
sti
sahf
mov
cld
cmp
jne
aam
mov
in
call
je
js
lds
cmc
dec
push
jae
pop
sub
test
or
inc
fwait
out
jecxz
call
inc
rcl
jle
mov
popf
out
call
or
or
pop
cmps
leave
mov
adc
bound
mov
inc
and
or
push
(bad)
mov
mov
jne
cs
sbb
adc
mov
ret
push
enter
outs
mov
pusha
jmp
cs
cmp
sub
cmp
adc
sti
adc
jbe
xchg
imul
and
push
stc
inc
loopne
xchg
or
fwait
out
xchg
out
add
fidivr
fistp
ror
jo
cmc
inc
jnp
pop
adc
dec
mov
movs
aas
fst
in
jge
push
dec
pop
imul
mov
bnd
lock
mov
mov
movs
test
jnp
xor
pop
inc
(bad)
push
idiv
xor
mov
cmp
xchg
enter
sub
aaa
out
sub
cmps
sar
cmp
push
ins
add
imul
adc
pop
es
sbb
and
clc
pop
sub
in
daa
dec
push
jmp
xchg
loope
mov
pop
xor
scas
dec
mov
ret
cmp
sahf
movs
jb
xor
out
clc
xchg
dec
arpl
jp
sbb
xor
(bad)
stos
repz
stos
in
mov
sbb
and
lea
mov
enter
inc
bound
pop
out
and
repz
push
call
scas
push
outs
int
fimul
lahf
xor
xchg
sub
stos
loop
in
mov
test
test
push
call
sub
(bad)
adc
xchg
mov
fwait
jae
dec
cmp
or
ror
ja
mov
test
pushf
xchg
xor
repnz
xor
not
dec
jl
inc
test
pusha
cmp
jle
xchg
pop
and
xchg
jae
sbb
mov
adc
pop
inc
inc
jecxz
or
mov
fdiv
jae
int
sbb
ror
mov
sub
jmp
aam
jne
sbb
mov
add
jbe
stos
call
fimul
xchg
or
test
sub
cmp
js
(bad)
jno
pop
gs
inc
(bad)
xchg
mov
pop
mov
sub
leave
aad
rcr
jp
dec
lods
push
inc
shl
sub
clc
cmc
lock
xchg
repnz
mov
sub
and
sti
pop
test
lds
popa
or
fdivr
mov
pop
js
xor
retf
sub
sub
retf
mov
push
jp
lods
mov
cmp
loop
in
fmul
pushf
dec
xchg
pop
out
xchg
mov
and
mov
cdq
clc
mov
xlat
aaa
xor
in
add
mov
jg
sub
lahf
ret
ins
(bad)
fidiv
sbb
mov
movs
sub
pop
xchg
and
das
adc
in
das
xor
shl
mov
pop
mov
fisttp
jnp
push
sub
sbb
icebp
add
bound
lock
mov
or
sub
es
sbb
pushf
stos
fiadd
jge
jbe
aam
es
mov
mov
movs
arpl
mov
inc
stos
mov
imul
jmp
add
outs
mov
xchg
ins
imul
leave
pop
mov
sub
iret
mov
sub
cmp
push
stc
dec
push
loopne
jbe
fsubr
inc
dec
bound
or
imul
add
cmps
jecxz
mov
loop
adc
gs
mov
jno
daa
push
(bad)
pop
ins
ja
mov
popa
mov
dec
mov
mov
push
pop
cli
pop
sbb
jae
icebp
sub
test
pop
inc
pop
adc
pushf
test
add
sub
xor
push
test
add
bound
mov
sbb
push
sub
mov
inc
mov
nop
and
ds
ds
es
or
popf
jmp
in
test
out
lods
stos
imul
and
outs
stc
rcl
adc
mov
push
sub
ror
in
pop
dec
mov
push
test
xor
add
not
mov
ss
jge
aad
in
mov
or
fistp
sub
repnz
add
int
and
push
adc
mov
or
jle
outs
dec
adc
cmp
sbb
in
or
xor
fisubr
mov
aad
push
xchg
in
lahf
push
js
fstp
add
sbb
jmp
add
adc
test
jne
adc
mov
test
xchg
cmp
jl
push
es
div
pop
aaa
push
je
movs
and
lea
lods
push
sub
inc
inc
popa
jp
inc
add
mov
mov
cmps
movs
sar
mov
sub
pop
and
ficom
add
cmp
inc
sub
aam
jp
push
in
xor
push
dec
in
int3
ret
mov
dec
stos
pop
adc
ds
and
int3
or
mov
pop
push
sbb
inc
pop
jno
(bad)
lods
shr
loop
fimul
stos
xor
mov
mov
mov
imul
out
(bad)
xor
or
out
push
scas
mov
rol
inc
xor
adc
out
add
test
and
out
adc
sub
adc
adc
std
test
not
aas
mov
int
neg
loopne
loop
aas
div
inc
ffreep
sti
aad
pop
push
movs
sbb
jmp
aad
scas
sbb
outs
fisttp
xor
mov
nop
cmp
clc
pop
or
cmp
add
mov
sub
icebp
and
imul
and
addr16
mov
and
xchg
push
sar
jb
cmc
push
xor
iret
mov
(bad)
push
adc
stos
jo
loop
pop
or
sbb
push
xchg
out
xor
call
push
aaa
inc
mov
add
pushf
push
call
add
fmulp
or
retf
sbb
in
xchg
cli
and
outs
cs
imul
jl
inc
mov
jmp
mov
pop
mov
add
iret
pushf
mov
cs
outs
rol
cmps
mov
leave
mov
pop
cmp
push
call
leave
(bad)
jb
mov
xchg
cmp
mov
lds
test
dec
loope
shl
test
push
sar
pop
inc
test
add
imul
ins
xchg
cli
push
(bad)
(bad)
outs
arpl
mov
aam
pop
test
xor
xchg
mov
fistp
cwde
mov
ds
push
js
dec
mov
inc
das
and
mov
mov
push
mov
inc
sub
loopne
test
xor
ds
xlat
leave
inc
push
sub
arpl
sbb
scas
(bad)
pop
mov
lea
pop
xchg
jmp
sub
jbe
(bad)
push
nop
push
(bad)
and
fldcw
(bad)
loop
aad
je
cmp
adc
pop
std
push
xchg
push
cdq
adc
mov
cmps
sbb
xor
pop
jns
call
fstp
cmp
aas
inc
mov
pop
sub
jp
inc
pop
loop
mov
(bad)
cmp
push
sub
repnz
xchg
mov
pop
aas
push
mov
retf
aas
in
push
mov
(bad)
cs
mov
popf
(bad)
fidiv
call
retf
adc
jnp
push
daa
mov
aad
fwait
sub
push
call
sbb
pop
in
cli
mov
add
cmc
div
adc
cs
out
mov
mov
js
(bad)
std
es
in
(bad)
push
jns
pop
out
popf
ds
dec
mov
xchg
xchg
ftst
enter
mov
mov
mov
dec
mov
mov
imul
fstp
mov
sbb
scas
push
sbb
xlat
imul
mov
jae
pop
movs
mov
ret
xchg
mov
or
cmp
xor
test
ror
frstor
xor
mov
mov
cli
jmp
dec
push
jmp
pushf
fnstsw
jp
jne
div
fistp
adc
cmp
jae
loopne
outs
pop
cli
push
aas
je
iret
neg
xor
cdq
ret
loop
jns
push
and
add
or
mov
enter
int
sub
enter
and
pop
mov
fwait
jo
jmp
or
or
jmp
push
fmulp
stos
(bad)
out
pop
loope
(bad)
mov
and
(bad)
or
ja
and
xor
into
xor
ins
jecxz
movs
sub
call
es
jmp
into
repnz
cmp
mov
mov
adc
(bad)
pushf
stos
jmp
ret
test
jmp
pop
xlat
pop
inc
mov
mov
inc
dec
(bad)
mov
mov
or
cli
mov
out
inc
jmp
push
xchg
push
fidivr
hlt
lea
jl
xor
xor
icebp
jo
ins
sahf
inc
cdq
popa
or
repz
mov
sbb
push
jecxz
xchg
ror
mov
shr
xchg
xor
popf
jmp
xor
sbb
(bad)
retf
sub
or
aam
mov
mov
aas
jge
push
outs
xchg
mov
mov
lods
push
je
mov
lds
xor
push
pop
dec
and
into
mov
pop
push
inc
sub
xchg
lea
scas
jle
ss
ja
(bad)
data16
fnsave
mov
pop
sbb
jae
jne
sbb
pop
or
shl
aad
jae
xchg
sbb
iret
retf
retf
add
cmp
loop
cmps
and
gs
xor
leave
pop
int
outs
sbb
and
xor
icebp
pop
inc
shr
pusha
popa
(bad)
fist
push
cmpxchg
cmps
push
mov
add
pop
mov
loope
push
fwait
xchg
ds
shl
in
psrlw
(bad)
arpl
sbb
push
mov
xlat
push
jle
sbb
imul
sti
fs
div
push
aaa
enter
adc
add
dec
cmp
sbb
mov
cwde
arpl
lods
idiv
ins
(bad)
jmp
dec
push
sub
cmps
jns
cld
outs
mov
test
data16
cmp
stos
arpl
aad
sbb
mov
das
xchg
imul
(bad)
jmp
mov
push
inc
adc
scas
or
jmp
push
mov
dec
push
xor
mov
(bad)
sub
jl
jle
movs
fxch
xor
cmps
inc
jle
xor
dec
pushf
pop
fst
pop
fucomip
fisubr
mov
lock
(bad)
retf
xchg
(bad)
mov
mov
push
or
daa
sub
add
add
iret
jmp
mov
pop
repnz
jae
xor
retf
pop
and
xbegin
shl
(bad)
add
jmp
or
(bad)
outs
dec
jl
mov
or
and
jecxz
mov
push
jge
add
div
test
add
(bad)
xchg
add
stos
mov
popf
out
and
pop
repz
push
adc
add
cmp
mov
dec
sub
je
adc
iret
bound
add
push
cld
inc
push
sub
xor
push
mov
cmc
jmp
cli
stos
icebp
retf
aaa
pusha
dec
xor
jo
out
mul
mov
(bad)
jge
mov
adc
dec
repnz
sbb
xlat
cs
popa
jbe
xchg
(bad)
pop
shl
pusha
pop
mov
pop
xor
sub
inc
sbb
fdivr
fmul
sbb
loopne
jle
mov
dec
xor
dec
leave
add
sbb
rol
fucomi
jb
dec
and
sahf
dec
or
sub
repnz
and
aad
imul
mov
mov
add
test
dec
pop
iret
test
jge
cmp
les
sub
jmp
inc
(bad)
lds
and
dec
fs
add
push
pop
pop
hlt
or
mov
aad
adc
xchg
call
lods
xlat
js
add
mov
imul
and
lock
adc
js
pop
(bad)
aas
jmp
(bad)
repz
xchg
leave
es
push
or
loope
mov
jnp
(bad)
sub
(bad)
iret
sub
dec
mov
sub
repnz
dec
push
push
jge
ficomp
sub
jne
mov
stos
push
lods
jae
mov
les
mov
es
sbb
dec
and
imul
fsub
jge
and
(bad)
or
ja
mov
dec
pusha
add
mov
stc
stos
lds
imul
and
shl
cli
or
test
and
mov
mov
dec
inc
outs
jecxz
and
shl
mov
(bad)
jns
xor
or
or
push
cmp
mov
adc
clc
das
pop
and
sbb
pop
jae
cmps
jo
out
mov
adc
mov
(bad)
push
pop
je
in
mov
pop
add
repnz
or
lods
adc
mov
test
iret
xchg
movs
push
cmps
ficom
mov
inc
aaa
loope
sub
fsub
or
in
push
mov
push
jns
stos
xchg
fwait
push
sbb
xor
jnp
add
adc
fld
push
shl
mov
xlat
or
dec
push
movs
add
scas
(bad)
fnstsw
not
popa
and
pusha
xor
es
out
mov
sbb
arpl
icebp
test
add
out
or
mov
mov
leave
and
lods
movs
cmp
in
dec
iret
(bad)
sbb
adc
and
loop
(bad)
dec
pushf
adc
add
cs
or
vxorps
jge
(bad)
int3
xchg
dec
les
test
cs
lahf
mov
pop
mov
addr16
add
mov
imul
mov
sbb
cmp
push
(bad)
scas
retf
aas
adc
js
xchg
fnstsw
pop
add
pop
(bad)
mov
ds
dec
inc
xor
push
sbb
mov
mov
(bad)
add
js
push
push
rcl
mov
outs
jge
in
and
in
mov
push
(bad)
cs
test
push
jge
fstp
lock
sbb
jb
add
and
lds
cs
cs
shl
push
fbld
sub
fwait
push
loopne
add
jecxz
or
dec
stc
and
lods
cmp
sbb
jge
stos
cmps
jmp
scas
jmp
cwde
mov
stos
mov
push
add
scas
xchg
mov
sahf
dec
cmp
fisubr
ds
sub
jl
pop
stos
adc
push
and
ja
into
or
aas
call
outs
loope
jecxz
inc
pusha
ret
add
cmp
inc
inc
lods
mov
push
(bad)
popa
pusha
mov
sub
mov
in
imul
mov
mov
shl
and
mov
daa
fwait
inc
dec
test
pusha
clc
mov
mov
dec
out
cld
mov
xchg
adc
or
push
cmp
or
outs
pop
fdiv
jg
daa
pop
xchg
sbb
mov
mov
outs
push
in
mov
sbb
push
sub
into
jle
leave
adc
xchg
sbb
dec
xor
inc
cmp
jnp
xchg
adc
mov
sub
jl
xchg
adc
leave
mov
and
add
mov
jle
test
mov
dec
(bad)
sbb
ds
push
sbb
push
push
lds
fbstp
mov
mov
sbb
iret
retf
or
loopne
or
nop
movs
popa
(bad)
sub
cwde
mov
mov
sbb
mov
ret
sbb
xlat
jb
ret
sbb
shl
ret
lea
mov
inc
(bad)
jmp
xor
cli
in
jbe
sub
and
ficom
jnp
push
adc
mov
fs
pop
jno
out
aas
xor
lock
xor
ret
xor
push
pop
sar
pushfw
mov
xor
dec
sahf
jle
and
(bad)
jle
loope
dec
dec
pop
mov
lods
jns
cmp
iret
xor
adc
neg
xor
sub
ret
in
sbb
loopne
movs
push
cmc
push
ret
fdiv
mov
je
fisub
int
pop
repz
popf
lock
adc
push
sub
mov
add
es
cmp
xor
jns
push
dec
inc
xor
(bad)
jmp
loope
xor
sahf
addr16
and
(bad)
cmp
popf
loop
iret
mov
popa
add
cmps
rol
push
add
jmp
stc
sub
mov
aad
out
in
pop
pusha
call
inc
ficomp
repz
daa
cmps
ins
jmp
inc
jmp
sbb
cmp
call
mov
test
repnz
lahf
loope
imul
clc
ins
cmp
sub
imul
(bad)
jmp
test
xor
dec
pop
and
sub
or
push
fisub
jg
daa
xor
add
lea
cmc
pusha
out
cmp
mov
or
inc
das
pop
pop
arpl
push
cvttps2pi
(bad)
test
nop
sub
mov
sub
test
jp
push
sbb
rcl
xchg
test
add
lods
jecxz
dec
dec
addr16
mov
jp
sbb
in
pop
icebp
cs
sub
inc
and
mov
lods
sub
retf
or
pushf
stos
cmc
jns
ins
cmp
fistp
mov
and
adc
aaa
loopne
test
daa
fdivr
push
cmp
scas
or
jge
inc
dec
xchg
mov
push
xchg
push
xchg
movs
fldcw
shl
adc
inc
sub
std
arpl
scas
cmp
stos
mov
bound
add
mov
push
xor
ds
fs
sub
(bad)
pusha
mov
ror
pop
add
xchg
or
inc
(bad)
loopne
mov
cli
cmp
sbb
add
pop
push
stos
jecxz
(bad)
jl
mov
nop
push
sub
push
das
inc
inc
fld
mov
pmuludq
jl
aad
jg
pop
jmp
xor
rcl
cli
call
pop
cs
das
sbb
jne
sub
mov
shl
cwde
(bad)
dec
adc
xor
adc
(bad)
data16
rcr
sbb
adc
(bad)
out
mov
sbb
xor
mov
push
xor
sbb
jecxz
push
aad
sar
jb
jbe
and
inc
sahf
retf
inc
adc
lahf
mov
int
imul
sub
cld
push
pop
mov
or
stos
add
(bad)
cld
jmp
and
sbb
inc
and
mov
xor
jo
std
mov
call
sbb
pop
mov
jmp
fisttp
mov
daa
movs
pop
xchg
jnp
pop
inc
les
mov
aaa
lods
out
repnz
icebp
aam
daa
retf
les
dec
and
iret
dec
cld
movs
jge
xor
cld
xchg
mov
cmp
pop
mov
dec
rol
or
xor
jmp
extrq
sbb
sbb
cli
jno
mov
ja
push
jae
cmp
jno
bound
cli
lahf
sub
fxch
fisttp
arpl
pop
pop
in
(bad)
jmp
add
scas
jnp
mov
jae
mov
fsubr
pushf
jb
je
fdiv
pop
cmps
ins
xor
shl
shl
sbb
sbb
or
fdiv
ins
lahf
inc
lods
sti
push
lds
adc
and
shl
mov
clc
jle
adc
push
dec
test
pop
(bad)
enter
iret
push
ffreep
xor
and
mov
push
push
mov
call
sbb
push
sbb
popa
ja
imul
lods
ss
cmp
cwde
adc
fistp
lods
nop
pusha
call
enter
mov
pop
dec
sub
mov
les
arpl
jmp
(bad)
pushf
inc
ja
addr16
xchg
mov
push
hlt
das
stos
repz
call
jnp
adc
mov
test
adc
sar
and
mov
mov
rol
add
popf
leave
pop
imul
mov
inc
shr
push
sar
dec
lods
in
popa
mov
push
sbb
idiv
push
rcl
test
sbb
add
pop
add
and
iret
shl
sub
mov
movs
out
xor
out
and
in
sbb
fldcw
add
sbb
adc
inc
mov
dec
aad
push
push
es
loopne
lahf
xor
xchg
push
sti
es
or
pop
lods
repz
sub
cmp
jle
mov
sub
imul
mov
add
inc
push
outs
mov
es
rol
mov
xchg
clc
dec
test
xchg
xchg
cmp
inc
imul
dec
imul
sti
mov
call
pop
dec
cli
sub
into
xor
mov
(bad)
sub
outs
xchg
mov
inc
loop
push
retf
in
jb
call
sti
inc
lahf
outs
or
inc
xor
daa
das
mov
mov
ins
stc
arpl
test
clc
mov
xchg
mov
psubusb
cmp
or
rcl
pop
mov
cmp
shr
test
or
movs
lds
clc
stos
sbb
fs
cmp
(bad)
fmul
pushf
sub
mov
cmove
mov
mov
sub
cmp
icebp
in
pop
dec
xor
sbb
jg
mov
(bad)
or
movs
mov
call
and
push
push
stos
int3
add
ror
int
xchg
stc
fsubr
adc
mov
push
mov
das
sti
out
xchg
(bad)
fld
mov
bound
ret
pop
mov
in
pop
adc
aad
stos
cmp
lods
fwait
push
mov
jl
jge
int
mov
ss
sti
xor
push
leave
loope
test
push
int3
adc
icebp
or
or
push
sub
outs
bound
loope
mov
cli
(bad)
sti
sbb
dec
push
loopne
sbb
test
xor
jne
jmp
adc
fwait
pop
adc
test
xchg
outs
cli
or
sub
mov
fs
or
inc
ror
inc
adc
pop
arpl
pop
pop
xlat
mov
jns
mov
mov
test
ins
mov
movs
jle
call
out
or
xchg
inc
mov
scas
xchg
xchg
push
hlt
adc
call
test
or
scas
push
sahf
(bad)
fst
nop
in
shr
add
mov
mov
shl
adc
sbb
pop
mov
pop
aas
cdq
sbb
inc
int3
gs
sahf
in
ds
xchg
sub
fwait
xchg
add
mov
xor
call
in
std
xor
fadd
xchg
shl
ror
ins
pop
fcmovnu
dec
hlt
mov
mov
xchg
and
mov
push
mov
inc
adc
adc
xchg
dec
les
mov
fstp
test
jl
push
rcl
jl
or
loopne
lahf
call
stc
test
retf
cmp
imul
mov
iret
bnd
push
mov
retf
stos
dec
arpl
ins
push
das
rcr
cli
push
movs
xchg
loope
jp
fcmovnb
xchg
pushf
xchg
popf
cwde
mov
cmp
outs
lahf
or
cli
jle
fbstp
neg
popa
pop
daa
or
nop
xor
xor
and
imul
loop
push
sbb
mov
stos
int
xor
out
(bad)
cmps
shl
(bad)
push
inc
push
sbb
jg
ret
push
loopne
fwait
call
fcom
popw
fist
mov
dec
pop
pop
retf
fdiv
mov
push
into
jmp
leave
sbb
pop
cmp
add
(bad)
in
into
retf
test
cdq
xor
out
repnz
les
cmp
jp
bound
add
ins
aam
xor
repz
loopne
inc
inc
xchg
pop
xor
xchg
sbb
push
ret
repnz
jl
nop
jo
es
adc
fidiv
std
sub
pop
pushf
imul
sbb
in
mov
dec
gs
pop
test
push
xor
add
fidiv
aaa
ja
outs
pop
stc
pop
cmp
mov
lds
inc
xchg
js
cld
fs
xchg
test
mul
inc
ins
outs
adc
push
(bad)
arpl
fist
shr
push
loope
fld
aas
and
jg
jb
adc
adc
arpl
shl
xor
stc
push
cmc
mov
mov
push
lock
push
pop
(bad)
imul
nop
xchg
xchg
out
rcr
or
mov
cmp
dec
adc
imul
mov
mov
lea
lahf
push
mov
out
xchg
mov
jnp
jmp
repz
int3
mov
jmp
xor
lods
jne
xchg
in
pusha
mov
add
js
ja
fsub
mov
daa
sub
jo
std
add
repz
push
je
xchg
add
imul
popa
jl
cmp
stos
add
dec
mov
arpl
bound
pusha
enter
cmp
inc
stos
mov
pop
pop
cld
cli
pop
retf
in
fs
inc
sar
sub
push
outs
out
repnz
jmp
or
jge
cmp
jnp
(bad)
int
daa
test
arpl
cmp
dec
into
sbb
pop
leave
test
or
out
dec
and
or
fcomip
push
ficomp
les
aaa
js
xor
mov
pushf
lock
mov
inc
jb
std
scas
enter
stos
jo
das
jp
lea
pop
mov
mov
cwde
and
mov
or
fwait
out
and
shr
sub
jge
fcom
div
imul
inc
inc
icebp
push
out
outs
adc
retf
addr16
jne
pop
jbe
sbb
lea
movs
int
loopne
adc
std
mov
cwde
push
and
push
sub
rcr
(bad)
(bad)
loope
inc
iret
addr16
sub
or
dec
adc
int3
rcl
add
mov
lock
cli
fs
sbb
dec
and
inc
sbb
cmps
push
inc
jnp
cmps
push
rcl
cmp
dec
jo
mov
push
loopne
cmovae
cmp
cmp
cmp
ds
cdq
push
fnsave
jg
adc
xor
sub
mov
or
pop
xor
fcom
add
mov
xchg
mov
(bad)
and
fadd
xchg
mov
int
or
(bad)
popa
(bad)
pushf
inc
mov
xlat
sbb
pop
into
xor
rol
call
mov
jecxz
call
push
clc
mul
leave
or
cmps
clc
fs
fld
lahf
int
outs
leave
sar
inc
sub
outs
or
pop
pop
xchg
pop
dec
fidivr
and
sbb
push
(bad)
ficom
sbb
das
imul
retf
push
icebp
mov
cwde
daa
adc
jp
fwait
sub
retf
xchg
cwde
pop
mov
gs
call
push
xchg
jge
(bad)
cld
mov
jb
jle
cmp
pop
lods
in
out
mov
test
cdq
sub
add
pop
and
test
cmps
mov
pop
dec
shl
int3
aas
retf
pop
mov
loope
xor
xchg
enter
mov
stos
std
lahf
lods
xchg
stc
mov
jmp
adc
(bad)
and
cdq
mov
bound
outs
inc
add
enter
fdiv
cs
push
sub
loopne
inc
or
push
sbb
mov
cmps
mov
push
mov
sub
or
loopne
push
sti
dec
aam
mov
inc
jl
cmps
fnstsw
lds
ret
adc
adc
jg
dec
push
push
add
xor
nop
js
loop
fmul
xchg
(bad)
aad
inc
outs
cs
mov
pop
cmp
push
arpl
mov
cmp
cmp
into
test
dec
sbb
cmps
std
pusha
and
and
cmp
call
addr16
cs
xchg
mov
xor
icebp
cdq
push
and
mov
test
mov
cmps
cwde
sub
jno
(bad)
mov
push
mov
(bad)
push
jno
sbb
or
jns
imul
repz
mov
mov
jb
or
or
js
mov
push
sbb
or
mul
jg
jbe
xchg
fnstsw
adc
and
es
aaa
adc
push
mov
stos
fs
int3
fcmovnb
sub
call
cs
mov
addr16
push
fdiv
dec
adc
fstp
lahf
sub
add
cwde
jl
outs
outs
es
retf
mov
out
mov
xlat
push
and
or
enter
xor
icebp
int
dec
dec
mov
fld1
out
fnstenv
fnstcw
mov
call
pushf
or
cmp
stc
cmps
sbb
jae
sub
ror
push
fisubr
cmp
push
fdivr
adc
push
push
cmc
push
jne
mov
cmp
rcl
in
push
addr16
jne
in
push
cli
lahf
call
cmc
push
mov
push
repnz
fst
mov
pop
or
inc
in
retf
sahf
sbb
retf
or
mov
das
or
sahf
jecxz
or
int
ret
pushf
push
push
(bad)
push
idiv
push
xor
(bad)
aaa
dec
and
(bad)
sub
mov
xchg
aaa
push
shr
mov
jnp
fxtract
data16
loop
xor
fsub
sahf
mov
mov
std
xor
adc
mov
outs
push
test
sbb
push
or
in
mov
iret
dec
das
jbe
pop
popa
ds
push
sbb
jp
jmp
adc
mov
test
clc
in
dec
pop
enter
ds
jo
add
shl
aas
inc
push
adc
nop
imul
mov
jecxz
sub
sbb
mov
shl
in
mov
pop
call
fiadd
js
int3
mov
mov
push
test
push
jge
inc
clc
lods
mov
lea
pop
mov
adc
push
in
aam
add
pop
push
bswap
outs
(bad)
push
and
jmp
xchg
rol
iret
fmul
jns
pushf
sub
cmps
push
imul
repz
repnz
dec
pushf
xor
sbb
fcmovne
jns
or
fmul
ret
mov
ins
lahf
jmp
and
jmp
xchg
cwde
jmp
cmp
jns
xchg
mov
sbb
xchg
aaa
jns
inc
ds
and
sbb
in
mov
adc
in
retf
sub
cld
mov
fwait
mov
loope
fwait
sbb
jb
or
jge
and
xor
add
mov
or
or
leave
dec
xlat
sub
(bad)
xor
dec
mov
sahf
fs
test
mov
pop
aaa
vmaxpd
sub
push
cs
scas
or
add
popa
sbb
bound
sbb
inc
mov
(bad)
mul
push
dec
test
sub
push
inc
push
mov
adc
xor
idiv
sub
cld
mov
mov
mov
jno
out
adc
adc
jmp
mov
push
lea
add
adc
inc
in
sub
push
adc
and
xchg
(bad)
ror
shl
add
fstp
xor
xchg
inc
add
ja
mov
xchg
(bad)
pop
test
stos
leave
rcr
mov
mov
adc
push
xlat
mov
and
jbe
stos
push
fst
ret
and
mov
jle
mov
push
daa
jae
xor
fs
outs
leave
push
js
cli
clc
or
mov
mov
sbb
cmp
and
push
dec
jae
movs
aaa
push
out
ret
(bad)
xchg
dec
mov
call
out
sahf
fsub
addr16
mov
dec
xchg
sbb
stos
lods
mov
or
pop
and
sbb
rcr
aas
popa
in
inc
mov
cmps
cmc
loop
push
inc
dec
das
pop
mov
push
fnstcw
pop
mov
jns
rcr
inc
sub
test
rol
fcomp
ins
xchg
(bad)
mov
or
mov
add
test
add
xor
xchg
not
mov
sbb
rcr
add
xchg
pushf
call
lods
leave
xor
dec
retf
in
jb
pop
jg
fist
mov
aam
adc
cli
mov
daa
stc
pop
rcr
adc
mov
mov
repnz
imul
pop
loope
mov
mov
xchg
add
jne
call
std
sbb
aaa
rcr
mov
inc
popa
repnz
xor
nop
(bad)
(bad)
(bad)
fist
sub
(bad)
in
imul
(bad)
popa
xchg
or
xchg
mov
jo
lods
jle
push
adc
outs
aaa
mov
xchg
lods
jecxz
ffreep
mov
cmps
and
nop
xchg
lahf
push
inc
imul
out
int3
dec
sub
sbb
ja
arpl
das
adc
xchg
mov
pop
xor
dec
pop
test
mov
ins
dec
xor
ret
sahf
push
sahf
jne
call
and
fimul
sti
ret
sub
mov
xchg
scas
sub
imul
outs
cli
mov
dec
lods
pushf
int3
das
pop
adc
lods
lock
sub
pop
leave
add
stc
je
(bad)
pop
(bad)
data16
cmp
stos
sub
js
dec
int
push
inc
cs
retf
adc
in
sub
retf
mov
(bad)
mov
adc
xchg
mov
add
and
mov
ffreep
inc
cs
popf
and
inc
sti
rol
into
jg
int
xlat
adc
pop
(bad)
(bad)
sbb
ror
pop
(bad)
or
pop
stos
jl
test
iret
xchg
call
in
pop
pop
adc
sub
les
repnz
movs
rcl
(bad)
jecxz
dec
sbb
pop
arpl
fiadd
push
dec
fcmovu
add
(bad)
xor
ret
mov
mov
dec
arpl
xlat
jb
mov
or
mov
ja
mov
sti
dec
mov
or
shl
add
outs
fistp
xor
mov
xchg
ss
(bad)
stos
jbe
push
and
sti
int3
jle
xchg
fild
rcr
pop
sbb
stos
mov
std
fsubr
test
xchg
sahf
ret
sub
in
test
retfw
pushf
inc
sub
inc
retf
sub
cwde
cmp
sub
in
xor
out
push
xchg
sub
test
cwde
das
jne
jno
(bad)
xchg
push
and
popf
hlt
ins
cmp
cmps
lahf
ja
fadd
pushf
sbb
push
pop
mov
add
(bad)
aas
aas
or
mov
in
jmp
lahf
out
sar
bound
cmc
push
inc
sahf
nop
stos
test
push
sbb
xor
pop
dec
push
push
(bad)
out
inc
inc
sahf
out
dec
sar
sbb
jbe
pop
hlt
or
add
pop
mov
icebp
or
jae
adc
pop
mov
push
sar
cs
mov
arpl
out
dec
add
or
inc
out
jecxz
out
jg
add
in
fst
push
push
jmp
test
(bad)
inc
mov
jmp
push
arpl
mov
repnz
inc
test
leave
jecxz
pop
or
test
repz
lods
in
pusha
xlat
cmp
loope
imul
mov
fstp
jbe
mov
retf
outs
xor
lock
jo
jle
pushf
cdq
outs
retf
jmp
add
inc
add
cli
xor
das
cmp
push
adc
outs
mov
mov
push
and
pop
mov
call
rcl
outs
sub
call
iret
popa
jmp
inc
push
xchg
pushf
das
mov
mov
repz
ficom
push
daa
enter
rcr
out
in
mov
daa
adc
push
cmc
cmp
and
sbb
mov
add
mov
sbb
jmp
cs
and
mov
sbb
dec
push
pop
std
xor
sbb
or
jnp
xor
jo
data16
xchg
mov
add
jmp
aaa
scas
jle
das
fdiv
das
das
(bad)
cs
inc
mov
shl
(bad)
jge
or
aad
icebp
xchg
ins
in
(bad)
scas
adc
push
std
jo
push
js
push
mov
(bad)
rol
stc
add
mov
imul
call
sub
(bad)
jl
daa
js
aad
mov
jae
mov
adc
mov
push
js
sti
shl
push
pop
les
jp
xchg
xlat
nop
mov
minps
jle
sub
mov
cmp
push
jnp
add
jne
mov
ror
and
and
and
mov
fmul
frstor
mov
ja
in
aam
je
mov
add
jge
sahf
imul
in
je
jo
xor
aaa
(bad)
push
pop
out
repnz
stos
and
cmps
(bad)
aam
inc
push
lds
pushf
or
cld
in
jl
pop
adc
mov
push
mov
clc
sbb
push
sbb
sahf
fimul
xchg
(bad)
pop
movs
and
jae
jmp
add
mov
cs
sub
(bad)
in
lock
rcr
mov
and
int3
(bad)
fadd
fisttp
pop
xchg
test
cmp
mov
push
mov
(bad)
xchg
or
xor
retf
fimul
lods
fdivr
inc
pop
data16
lods
push
in
push
push
xchg
ret
pop
dec
mov
dec
mov
call
push
and
cli
ror
xor
stc
inc
in
adc
loope
pushf
mov
or
and
(bad)
rol
daa
inc
xor
fbld
in
fstp
retf
mul
sub
mov
rcl
mov
retf
clc
cmp
stos
and
mov
dec
stc
inc
arpl
call
mov
adc
push
daa
stos
test
sbb
sub
push
or
pop
jmp
xor
fwait
repnz
mov
or
lahf
out
cmp
mov
mov
pop
cmp
cmc
adc
movs
and
int3
and
mov
rcl
pop
(bad)
out
clc
inc
loope
fcomp
pop
cmp
dec
inc
pusha
xor
cmp
ror
aad
add
pop
xor
not
scas
xor
(bad)
mov
int3
aas
sar
xor
cs
sti
xor
cmp
dec
pop
test
xor
pop
fmul
std
stos
ror
lods
fild
adc
push
ficomp
repz
fadd
push
cmps
scas
push
je
jg
sub
bound
jo
ja
fwait
xor
lahf
sbb
add
lahf
cmp
arpl
arpl
shl
xchg
aaa
xchg
xchg
ficom
add
dec
sbb
test
or
cmp
pop
and
mov
test
mov
sar
mov
sub
int
cmp
push
std
les
adc
push
or
out
frstor
jg
ret
mov
ror
mov
ins
add
loope
mov
and
lahf
mov
lock
cmp
pusha
pop
or
push
mov
push
ins
ins
pop
dec
xchg
push
bnd
in
sub
in
test
fstp
or
dec
std
cld
daa
and
dec
dec
mov
aad
mov
shl
lea
dec
cmp
cmps
pop
pop
aaa
pop
lock
mov
stos
ret
mov
sbb
mov
retf
jecxz
lock
cmps
int
imul
or
adc
push
mov
or
rcr
icebp
leave
dec
and
pop
sbb
push
and
pop
(bad)
idiv
mov
les
dec
rol
jnp
jns
push
sub
stos
jne
test
mov
mov
mov
shl
sbb
sti
push
pusha
popf
xchg
(bad)
and
pop
pusha
dec
(bad)
inc
aad
imul
mov
push
pop
(bad)
pushf
mov
ja
in
shr
repz
mov
lods
ins
inc
cs
mov
lea
loope
(bad)
mov
sub
retf
cli
icebp
pop
sbb
mov
pop
push
pop
fisub
hlt
xor
jle
add
dec
fwait
jnp
or
mov
pop
inc
rcr
mov
jo
retf
fmulp
inc
(bad)
lods
ret
add
ret
adc
gs
inc
sub
bound
aas
popa
jg
je
repz
faddp
stos
add
lds
mov
inc
add
loope
sti
cli
movs
stc
push
into
fnstenv
les
or
scas
(bad)
xchg
mov
es
dec
pop
xor
adc
je
cli
inc
mov
out
push
add
mov
inc
jo
(bad)
dec
(bad)
and
sbb
lods
dec
adc
in
cmp
(bad)
imul
addr16
push
jl
xchg
lods
scas
inc
push
out
mov
push
sbb
adc
mov
int3
arpl
sub
jne
dec
cdq
es
test
sub
mov
adc
ins
push
iret
adc
mov
into
int
pop
(bad)
shl
sub
add
outs
pushf
add
out
push
into
mov
in
pop
scas
or
xchg
xchg
jne
push
out
or
call
add
mov
(bad)
or
cmp
fnstsw
and
int3
clc
jbe
adc
mov
aaa
and
fs
bnd
fidivr
xor
mov
ret
out
mov
sbb
cli
cld
dec
add
dec
jbe
fdivrp
fbld
dec
jmp
add
cmp
adc
retf
add
sbb
mov
icebp
sbb
add
mov
lahf
js
cmp
mov
dec
jnp
fcmovu
pusha
fs
fidiv
retf
cmps
enter
xchg
push
cld
push
mov
push
fcomp
hlt
lods
xor
mov
(bad)
cdq
aaa
cmp
loop
jle
push
add
ins
sub
ficom
inc
and
in
icebp
js
inc
hlt
inc
adc
jp
fs
push
retf
jmp
addr16
add
push
lds
out
sub
xchg
test
dec
mov
ret
out
cmp
mov
test
ficom
pop
repnz
jecxz
xor
stos
dec
bound
mov
jne
add
and
repz
sbb
lods
sub
les
sbb
in
or
push
cmp
aad
mov
test
sbb
adc
sti
jb
bound
sbb
pop
jl
xchg
std
into
cmp
mov
in
xchg
and
mov
pop
ja
push
add
cld
adc
retw
or
pop
push
and
xchg
sub
in
inc
mov
add
sbb
les
out
add
push
int3
push
cli
loope
sbb
mov
jae
retf
js
push
sub
push
jb
mov
idiv
sub
sbb
inc
int3
nop
not
or
jns
mov
sub
mov
sub
push
push
mov
aam
in
adc
mov
sub
xchg
call
sbb
xchg
xor
mov
cwde
(bad)
xchg
fisub
in
adc
sbb
arpl
and
fimul
in
fstp
mov
or
(bad)
cmp
clc
jnp
fwait
push
push
(bad)
xchg
gs
mov
or
jp
push
(bad)
rcr
imul
jb
jno
das
test
push
test
aaa
xor
mov
dec
xchg
dec
fstp
sar
in
mov
and
dec
out
xchg
adc
or
mov
jo
inc
push
inc
cmp
lds
push
(bad)
xchg
dec
mov
pusha
push
jmp
lea
and
(bad)
adc
daa
(bad)
lods
mov
jle
cmp
popa
shr
inc
dec
into
dec
adc
out
cmp
test
xor
and
std
icebp
mov
frstor
leave
(bad)
xchg
xchg
loope
mov
jae
addr16
cmps
ss
jge
and
adc
movs
adc
jb
pop
hlt
mov
pop
ins
into
cld
mov
sub
xor
test
fdivr
rcr
and
mov
jb
lods
sub
cmps
mov
out
xchg
aad
or
lds
mov
jg
loopne
or
out
das
xchg
xor
out
outs
sahf
lods
xchg
add
or
push
std
fwait
xchg
movs
jge
mov
jmp
xor
adc
push
div
(bad)
bound
push
mov
sar
sbb
movs
xor
and
popa
je
loop
in
pop
jmp
sar
movs
pop
(bad)
push
mov
jb
dec
jp
mov
sub
addr16
jae
jne
add
push
loope
add
jle
sbb
sbb
pop
stc
jmp
cld
mov
jmp
jne
fdivr
mov
cli
out
scas
dec
cdq
ror
mov
or
pop
mov
das
lahf
mov
outs
call
jno
push
call
adc
pusha
icebp
and
xchg
fadd
and
fwait
(bad)
mov
(bad)
mov
daa
ins
repz
test
shl
inc
or
daa
xor
test
inc
std
pop
loopne
jae
lahf
retf
and
cmp
push
das
mov
mov
(bad)
dec
fld
pushf
cmp
add
test
adc
xor
pop
stos
and
sahf
jb
and
or
pop
xor
rcl
dec
sti
pop
mov
mov
mov
or
cs
(bad)
aad
gs
or
mov
xchg
and
xchg
int3
cmp
movs
lods
inc
mov
add
ret
inc
pop
sbb
dec
xchg
dec
js
in
dec
adc
cmc
pop
stc
or
shr
push
sbb
fldcw
mov
push
outs
and
xor
mov
adc
test
xlat
mov
xlat
pop
mov
rep
adc
adc
mov
test
cmp
push
into
stc
mov
aaa
es
jb
stc
scas
pusha
and
jb
mov
loope
or
push
inc
(bad)
jp
add
outs
push
jno
push
pop
mov
lods
lahf
push
retf
es
inc
cs
rcl
ror
adc
mov
into
xchg
out
and
push
xor
stc
xchg
js
dec
add
sbb
cmp
fistp
mov
mov
jne
loopne
dec
xchg
add
cmp
lock
or
mov
and
jb
adc
jne
add
or
fs
pushf
cld
addr16
sub
test
pop
dec
mov
and
jo
(bad)
fucomi
sub
in
adc
shl
aam
mov
(bad)
outs
jno
mov
or
je
push
jmp
adc
and
stos
xchg
add
jne
add
sbb
pop
loope
adc
lods
xchg
pop
mov
call
mov
(bad)
out
jmp
nop
jb
pop
pop
mov
outs
push
xchg
dec
jp
fisubr
add
in
outs
mov
jno
push
(bad)
jmp
sbb
jbe
loopne
sub
pop
(bad)
push
mov
inc
fdiv
retf
imul
inc
mov
push
leave
pop
add
lahf
xor
add
push
sub
mov
dec
jb
mov
pop
rol
outs
jbe
sbb
leave
mov
in
inc
xor
xor
pop
mov
and
mov
retf
dec
push
ins
adc
in
pop
jne
cs
inc
cld
fimul
adc
xchg
push
retf
aas
addr16
test
pusha
xor
adc
fs
push
imul
ins
or
inc
test
mov
mov
xchg
push
clc
push
lds
dec
mov
mov
or
inc
loop
sar
mov
jge
cld
addr16
pop
and
mov
xchg
cmp
jns
mov
sbb
int3
xchg
ins
icebp
aam
inc
outs
es
cmp
adc
add
test
outs
fld
outs
adc
ja
jae
int3
or
xor
push
dec
xor
sub
mov
mov
int3
mov
dec
or
inc
and
pop
(bad)
ficomp
mov
pop
adc
adc
xor
js
scas
mov
(bad)
sbb
jne
pop
mov
mov
fs
pop
es
and
int3
shr
add
mov
and
test
fist
and
push
ror
stos
xchg
out
mov
lahf
mov
stc
enter
in
loop
(bad)
retf
cmp
pop
sbb
shl
movs
inc
arpl
jmp
cdq
int
js
pop
fimul
mov
repz
mov
and
out
out
addr16
jae
mov
in
xchg
mov
popa
mov
or
xchg
pop
enter
jns
loope
push
dec
mov
dec
int
out
into
movs
push
rcl
loopne
cs
mov
dec
jl
cwde
ret
cmp
rol
cs
xor
xchg
jae
mov
xchg
clc
bound
mov
icebp
repz
loopne
(bad)
ret
idiv
lods
add
sbb
and
lock
add
jno
sbb
push
sub
pop
cmc
cli
popf
cld
sahf
imul
fstp
mov
(bad)
push
bound
les
mov
das
loope
shl
into
jb
jno
pop
clc
mov
cmp
and
adc
cmp
stos
dec
pop
std
mov
dec
movs
movlps
push
iret
sbb
mov
in
xor
fidiv
xor
jnp
retf
or
jge
dec
and
xchg
shr
mov
mov
daa
pop
imul
sbb
into
repnz
(bad)
std
sbb
out
gs
xchg
sub
mov
stos
lods
popf
icebp
jae
pop
or
cld
add
and
fisub
out
dec
int
inc
xor
addr16
fimul
(bad)
fild
jno
jmp
sub
ins
sub
fisub
fbstp
add
enter
mov
pop
in
int3
sbb
xor
mov
push
inc
xchg
scas
in
mov
repz
or
ins
(bad)
xchg
into
in
sbb
adc
dec
in
in
jno
sti
sbb
sub
fdiv
jmp
mov
mov
inc
mov
js
push
mov
scas
add
xor
mov
mov
(bad)
or
jecxz
push
(bad)
sahf
inc
test
mov
cmp
icebp
pop
xor
fisttp
pop
test
adc
jmp
js
xchg
int3
imul
iret
sbb
mov
ret
push
jmp
sar
movs
dec
inc
lea
xchg
out
ret
cmp
daa
cmp
and
out
iret
jo
and
pusha
cmp
daa
pop
sti
scas
lahf
movs
mov
dec
mov
in
and
loope
inc
lea
xchg
lods
ss
xchg
mov
jae
das
(bad)
jmp
lods
stos
in
sti
cli
(bad)
sbb
outs
outs
cmps
test
(bad)
movs
xor
popf
test
jle
mov
scas
mov
push
add
out
push
bound
mov
movs
inc
cmp
mov
inc
jnp
push
cmp
inc
pop
neg
cmp
int3
and
loopne
sub
mov
arpl
pop
mov
jmp
mov
pop
pusha
cli
shl
push
call
xchg
dec
mov
movs
jmp
push
(bad)
int3
test
inc
jo
inc
or
retf
cdq
dec
cmps
ins
mov
mov
adc
jb
ds
or
or
fiadd
jae
lods
clc
dec
in
(bad)
push
xor
cmc
jmp
fcomip
pop
out
xchg
stos
(bad)
dec
pushf
push
mov
sub
test
dec
test
loop
jle
jae
inc
or
xor
jns
push
arpl
xchg
call
gs
pop
nop
mov
and
or
sub
test
idiv
xchg
push
int
adc
mov
sub
les
mov
jns
rcr
sti
mov
in
or
mov
lods
test
jnp
push
pop
fist
das
ret
mov
adc
out
jmp
xchg
bound
jge
cli
(bad)
jbe
ret
jnp
mov
je
sbb
enter
add
add
mov
icebp
sub
sub
jns
pop
sti
mov
xchg
scas
adc
clc
repnz
or
aaa
cmp
pushf
jo
movhps
inc
test
pop
ins
mov
push
lods
sbb
pop
leave
and
in
jns
adc
fmul
imul
cmc
aaa
nop
pop
pop
stos
loop
test
xor
loope
mov
hlt
clc
ins
fisubr
ret
gs
jno
mov
xchg
mov
inc
sbb
jae
inc
(bad)
aaa
dec
dec
cmps
cmc
and
fucomp
iret
gs
jecxz
or
rcl
jmp
or
mov
cmovne
popf
sbb
mov
aad
pop
test
sbb
push
rcl
jbe
call
inc
scas
sbb
imul
stos
inc
pop
cmp
xchg
sub
movs
das
in
div
cmc
hlt
cmp
sti
and
call
xlat
mov
and
cmp
inc
in
stc
xchg
adc
mov
cmps
jne
or
aaa
xor
jns
cmp
push
loopne
pop
arpl
push
shl
cmc
in
aaa
or
out
ds
int
dec
pusha
add
inc
jns
int3
mov
mov
iret
(bad)
fimul
addr16
outs
adc
mov
pop
add
xor
ret
inc
aad
repnz
push
and
dec
push
push
sbb
jl
cs
pop
sub
xor
xor
aaa
pop
mov
push
mov
push
push
push
or
or
pop
xchg
ret
(bad)
cmp
push
cmps
mov
lds
rol
push
adc
sub
xchg
mov
test
xchg
inc
aaa
inc
mov
(bad)
into
inc
push
stos
sti
jge
fild
push
ficomp
shl
and
fisubr
cli
pop
test
cdq
inc
clc
call
inc
mov
mov
cmc
sbb
dec
jb
das
and
retf
jo
lea
std
(bad)
int3
jns
mov
and
(bad)
adc
(bad)
loop
cdq
loope
inc
or
push
cmp
les
pop
daa
push
xor
mov
cmp
xchg
sbb
push
mov
ja
leave
push
push
fld
mov
in
dec
aad
lahf
test
fadd
mov
inc
push
sbb
leave
shr
add
(bad)
stc
sub
or
enter
bound
or
test
dec
std
jo
cmps
mov
pop
(bad)
push
push
outs
cmp
fist
(bad)
pop
xor
aas
inc
pop
retf
push
fld
mov
ins
call
push
inc
dec
or
push
stos
xchg
jmp
sbb
ins
xor
push
sbb
or
mov
mov
add
nop
popf
pop
stos
jns
sub
pop
test
sbb
add
pop
inc
push
std
adc
out
mov
(bad)
dec
jge
mov
xchg
test
mov
fmul
inc
push
cmp
loopne
aad
leave
aad
aas
test
and
pop
data16
mov
push
scas
or
jle
adc
mov
test
add
adc
bound
retf
ins
popa
repz
(bad)
sti
inc
push
sub
inc
cmp
(bad)
idiv
pop
mov
nop
jnp
mov
xor
xchg
sbb
nop
push
enter
sub
xor
popf
jmp
fcomp
retf
push
and
cs
adc
add
pop
xor
jb
or
cli
clc
mov
adc
mov
jns
aam
inc
dec
nop
pushf
std
repz
jmp
push
aad
scas
aaa
stc
aad
add
sbb
leave
sbb
stc
retf
inc
test
pusha
arpl
add
mov
loop
add
add
shl
adc
push
js
sub
jle
dec
fdiv
pop
ins
mov
nop
mov
add
or
mov
jmp
push
push
inc
jmp
imul
rcr
add
test
inc
jge
mov
jp
repnz
push
xchg
fs
jmp
sbb
nop
cmp
sub
popa
sub
(bad)
mov
retf
xchg
or
imul
adc
and
xor
cdq
mov
es
(bad)
aam
mov
cmp
icebp
repnz
bound
jge
lea
es
mov
mov
lea
shr
loopne
sbb
pop
mov
jnp
jbe
lea
or
pusha
popf
movs
and
std
pop
popa
push
ins
js
and
mov
jno
and
loopne
sub
nop
adc
loope
test
mov
jg
dec
pusha
imul
xor
xor
mov
xor
je
cdq
and
out
pop
adc
jnp
icebp
(bad)
(bad)
pop
leave
out
imul
stc
out
sbb
daa
and
jbe
imul
mov
or
jl
inc
dec
mov
push
mov
mov
or
ret
aaa
cmp
push
pop
jmp
movs
shl
aas
int
mov
in
pop
push
loope
in
out
pop
or
cld
ror
dec
daa
sbb
cwde
mov
cmp
xchg
lods
sub
xchg
pop
xchg
sub
inc
call
cdq
into
lahf
jbe
mov
adc
sbb
lock
mov
test
jmp
jbe
loop
pop
into
mov
scas
daa
int3
ds
call
mov
jp
xchg
push
or
adc
mov
jmp
leave
sar
inc
pop
call
adc
ret
adc
fisub
dec
jo
dec
adc
mov
or
xor
cmp
cs
sbb
ret
dec
lods
mov
pop
je
(bad)
fucomip
stos
loope
stc
push
push
sbb
adc
jl
adc
aas
test
sahf
jmp
cwde
inc
cmps
sbb
imul
sbb
jb
inc
stos
es
in
dec
cmp
mov
mov
mov
dec
dec
sbb
and
cmps
dec
xor
fwait
jbe
ins
fnstcw
loopne
jno
movs
pop
ja
or
mov
pop
adc
sbb
push
mov
clc
and
aam
(bad)
jbe
dec
(bad)
fwait
add
fldenv
adc
add
and
dec
je
cld
lock
outs
dec
(bad)
les
cmp
stos
test
mov
and
xchg
lea
enter
stc
shl
mov
sbb
adc
adc
lea
ins
cs
dec
test
movs
sub
inc
pop
and
aas
dec
pop
mov
jge
inc
and
retf
aaa
or
xor
push
cmp
inc
add
test
add
mov
mov
cmp
add
add
cli
cli
ins
lahf
sbb
test
push
(bad)
and
ss
outs
jl
dec
(bad)
retf
das
pop
imul
mov
mov
in
mov
(bad)
sti
dec
outs
sbb
pushf
mov
out
(bad)
ficomp
je
cmp
sti
pop
scas
xor
movs
jnp
push
cmp
jb
fsubr
cs
jae
(bad)
add
sbb
clc
cld
xor
mov
inc
or
aaa
std
push
out
jbe
out
or
push
mov
sbb
movs
pop
icebp
in
jp
dec
cmp
imul
jmp
pushf
and
jne
mov
je
jb
in
ins
iret
add
sbb
stos
clc
cli
inc
lods
xor
xchg
js
xor
inc
sub
test
fisttp
(bad)
mov
sub
add
fcom
sub
inc
(bad)
fistp
in
not
leave
mov
test
mov
and
ret
call
in
pop
lea
bound
aad
mov
mov
lods
pop
(bad)
jp
je
psubusb
inc
pop
in
fist
mov
std
outs
xchg
fs
dec
pop
les
lods
popa
aad
mov
sbb
outs
push
push
pop
jecxz
mov
xchg
mov
adc
test
sub
fwait
popa
or
mov
mov
or
popa
test
leave
sbb
and
and
and
int
or
xchg
dec
ret
inc
test
mov
sub
pop
mov
dec
in
pop
fisttp
dec
mov
cld
out
scas
ret
add
fidivr
dec
jbe
inc
daa
in
in
dec
add
mov
bound
imul
stc
cmp
fiadd
cmp
inc
fbld
pop
pop
bound
nop
jle
xor
movs
ins
jmp
gs
jp
jb
add
pop
jecxz
lds
mov
loope
pop
lock
adc
push
adc
cmps
jns
mov
test
icebp
out
xor
mov
or
push
jle
inc
pop
sbb
inc
mov
adc
mov
jbe
dec
lock
cmps
outs
outs
add
cmp
sbb
push
pop
push
ds
int
imul
hlt
aaa
and
js
push
add
inc
pop
call
add
ins
pop
(bad)
xor
arpl
and
int3
mov
and
sub
push
cdq
in
push
inc
mov
ins
or
xchg
lods
(bad)
loope
aad
sti
add
cmp
pusha
idiv
(bad)
stc
idiv
adc
xor
adc
scas
mov
cmp
jl
clc
push
retf
jmp
pop
add
push
mov
(bad)
stc
xor
pop
push
push
daa
sub
push
mov
dec
fs
jle
shl
jns
movs
movs
repnz
xor
add
ret
outs
pop
or
push
dec
sbb
popa
into
jno
pop
sub
pop
ror
cmps
push
xor
xor
outs
mov
xor
jmp
cmps
pop
and
sub
xor
push
lock
stos
mov
sub
loopne
lock
in
adc
test
int
cld
fld
(bad)
ja
sar
jecxz
lods
mov
push
jae
or
inc
mov
test
pop
scas
xchg
xor
pop
clc
stos
xchg
scas
in
jmp
jle
mov
pop
push
addr16
(bad)
dec
pop
pushf
push
test
ss
test
imul
xor
pop
add
add
cld
dec
test
lods
jmp
call
retf
std
stos
repz
paddw
dec
fistp
dec
inc
test
bsf
loop
cmp
adc
test
cld
and
cmp
jmp
loope
sub
in
or
push
inc
sbb
mov
push
gs
(bad)
aaa
iret
call
and
loop
rcl
js
pop
lea
aaa
push
loopne
or
lods
div
adc
add
adc
and
mov
fdivr
xchg
aaa
and
icebp
xchg
std
lock
cmp
xchg
sbb
jne
adc
icebp
add
ret
jno
mov
mov
xchg
loopne
or
sub
and
data16
or
sub
cs
push
scas
inc
add
adc
clc
and
aaa
test
push
push
cmp
retf
in
test
pop
add
addr16
mov
aad
or
in
iret
imul
and
ins
pop
pusha
hlt
lock
ins
inc
pop
(bad)
ror
xor
jbe
dec
iret
clc
bswap
jnp
in
pop
rol
add
cli
shl
icebp
pushf
movs
xor
adc
inc
clc
pusha
mov
xlat
movs
and
xor
cmp
dec
add
mov
into
sbb
xchg
and
dec
xor
scas
scas
add
mov
cwde
pusha
sub
stos
mov
and
xor
nop
and
push
nop
pop
xchg
cli
fs
fld
cmps
fcom
jl
or
add
jecxz
iret
in
inc
ja
xchg
cdq
enter
adc
test
(bad)
imul
sbb
xchg
jbe
mov
aas
pop
mov
hlt
xchg
xlat
ret
test
mov
dec
hlt
dec
test
and
jl
jl
aaa
sub
xchg
mov
shr
cmp
mov
cli
call
jecxz
dec
or
mov
les
loopne
xchg
dec
push
jp
call
cmp
dec
add
jne
add
xor
jp
mov
out
test
loope
adc
sub
in
ins
out
mov
loop
cld
mov
test
dec
dec
and
mov
ror
aaa
addr16
aaa
inc
out
add
pop
icebp
adc
xor
fcom
mov
sbb
(bad)
adc
arpl
mov
and
push
clc
sbb
icebp
pop
ins
movs
xchg
sub
or
dec
neg
ror
dec
shl
je
cdq
xchg
cmp
icebp
push
mov
in
daa
std
div
sub
cmps
cmp
popa
adc
call
scas
outs
inc
push
test
xor
popa
enter
and
movs
into
fidivr
rol
xor
cwde
bound
sbb
fbld
mov
scas
dec
or
mov
jle
jae
call
xchg
mov
jecxz
ret
mov
jno
fs
jnp
outs
add
push
pop
jmp
mov
add
in
(bad)
icebp
mul
je
fidiv
xor
inc
cld
aam
rcl
sub
imul
into
das
or
sbb
(bad)
in
cmp
and
imul
je
fnstenv
and
inc
add
arpl
xor
imul
or
leave
jmp
fisub
jl
rdtsc
popf
imul
inc
sub
push
or
add
(bad)
lds
fucomi
cmps
leave
xchg
sub
jae
shr
ins
cmp
fsub
sbb
loop
adc
xor
out
(bad)
jmp
mov
add
or
fnstenv
jae
mov
dec
jecxz
lods
mov
outs
push
mov
fmul
and
jge
jne
and
nop
ficom
leave
jbe
cmp
js
cmp
mov
ret
lea
add
or
sbb
arpl
xchg
das
or
cmp
mov
mov
cmp
jl
lods
inc
shl
pop
push
fisttp
push
fs
mov
pusha
lods
lahf
ror
fadd
jb
cmps
je
add
mov
jle
and
mov
(bad)
aad
xchg
call
test
(bad)
and
fst
pop
popf
mov
es
fild
dec
out
mov
repnz
sbb
mov
sub
inc
adc
inc
pop
cmc
adc
stos
dec
gs
dec
jo
cmps
lock
dec
cld
lods
sbb
lock
add
(bad)
loop
ja
(bad)
retf
je
xlat
aas
in
mov
cmps
aaa
pop
pusha
pop
push
(bad)
test
out
pop
in
cs
sub
cld
fistp
es
xor
mov
sbb
sahf
and
jo
fninit
sub
jne
jmp
xchg
ficomp
mov
js
inc
and
xchg
xchg
ror
out
dec
xor
call
loop
shr
mov
rcl
nop
jno
xor
jmp
(bad)
mov
xchg
cmp
pop
push
rcr
adc
adc
bnd
lea
or
shl
test
(bad)
test
inc
inc
push
push
mov
popf
ss
out
jae
or
ficomp
mov
cdq
push
and
ret
pop
sbb
stos
and
adc
xchg
stos
popa
fsub
scas
lods
cmc
dec
inc
xchg
test
call
mov
sbb
int3
or
mov
fidivr
lods
adc
inc
cwde
ss
xchg
mov
cmp
loope
(bad)
or
mov
out
in
mov
repnz
fs
repz
pop
mov
mov
data16
dec
lea
repnz
mov
(bad)
gs
rcl
ins
and
adc
adc
cmp
scas
xor
addr16
push
mov
int
xlat
cwde
clc
xchg
inc
in
popf
fst
xor
sbb
popa
or
jae
jae
(bad)
xchg
xchg
call
ss
test
mov
outs
adc
inc
xchg
out
neg
(bad)
inc
fcmovb
xor
xor
xlat
inc
cli
sub
mov
int3
inc
sub
inc
mov
jo
xor
sbb
push
iret
sub
out
push
xor
dec
or
call
lahf
dec
inc
out
ja
shl
shl
ss
popf
cdq
dec
call
outs
mov
inc
pop
cmp
cmps
jge
fcomp
inc
test
inc
dec
or
add
mov
cmp
cmp
es
cmp
sub
shl
or
inc
lods
xchg
push
and
test
inc
stos
xchg
push
push
dec
inc
sub
mov
js
add
add
stc
scas
sti
ret
lock
and
push
daa
xchg
imul
outs
cmp
rcl
(bad)
out
out
repz
call
popa
fwait
cmp
jge
nop
aas
mov
and
jnp
test
test
les
inc
scas
sbb
ret
les
fnstenv
mov
sub
imul
push
mov
adc
movs
test
add
or
sbb
btr
push
jp
in
lahf
test
jne
or
leavew
arpl
(bad)
in
inc
jnp
or
xchg
arpl
pop
or
pop
push
fcomp
mov
jnp
dec
imul
loop
add
not
popf
xchg
pusha
inc
ficom
sub
sub
loop
popa
jmp
push
xchg
inc
xor
or
cli
push
(bad)
and
out
inc
xchg
inc
repnz
mov
mov
jp
retf
aad
std
or
and
loope
sbb
xchg
mov
adc
movs
mov
(bad)
jo
popa
pushf
sub
xor
cmp
mov
cmp
or
scas
ja
scas
int3
int3
int3
jnp
and
adc
or
ret
jae
adc
mov
in
mov
pop
pop
sbb
xchg
shl
sub
adc
hlt
jmp
inc
jmp
or
nop
or
pop
sub
sti
xor
adc
add
cmps
add
idiv
out
fiadd
add
imul
xchg
into
mov
pop
(bad)
je
fcomp
ret
fwait
lds
cmps
xchg
cmps
or
push
gs
cmp
nop
push
(bad)
dec
cdq
and
cmc
int3
cmp
push
adc
mov
xor
pushf
mov
and
sbb
ss
mov
inc
inc
rol
cli
es
inc
fisub
and
xchg
jo
loopne
push
icebp
pushf
cli
push
cmp
jb
mov
dec
or
dec
gs
scas
add
jns
sub
(bad)
aad
cdq
xor
push
iret
call
adc
movs
in
xor
je
rcl
out
jge
fcmovbe
jp
(bad)
mov
sub
hlt
dec
outs
and
ja
push
(bad)
jmp
jb
mov
pusha
(bad)
mul
cs
aad
inc
sbb
sub
sti
jmp
sar
adc
dec
and
and
sub
mov
call
rcr
cmp
not
lock
ins
mov
cld
mov
fnstsw
adc
stc
inc
sbb
push
dec
arpl
jns
xchg
sti
(bad)
xchg
lods
pop
jl
push
and
inc
inc
into
out
int
aam
inc
sub
pop
popf
push
inc
mov
inc
adc
xchg
xor
ins
mov
fmul
sub
int3
fldenv
out
mov
aad
jl
mov
xchg
in
shl
cmps
js
dec
in
mov
fidiv
adc
push
add
mov
repz
jg
mov
mov
loopne
mov
aaa
xchg
test
rcr
add
ins
movs
and
ret
xlat
xor
cmps
xchg
sbb
adc
jbe
add
stos
dec
pop
add
push
jmp
ss
add
cs
scas
push
ja
not
aaa
test
out
loop
lahf
add
xor
dec
or
call
push
push
lods
jo
stc
rcl
push
dec
ror
fwait
cmp
fcmovb
pop
inc
fild
pop
sub
mov
out
retf
sub
xchg
push
push
pop
outs
div
or
mov
(bad)
and
sbb
or
push
fcomi
hlt
push
add
stc
cmc
es
stos
xlat
mov
or
lock
jns
(bad)
and
rcr
pop
movs
pop
scas
xchg
leave
push
jbe
jmp
lods
enter
mov
(bad)
jmp
jge
imul
push
mov
dec
dec
jecxz
(bad)
scas
pushaw
push
add
jns
adc
sub
jno
mov
sbb
movs
push
mov
shl
dec
pop
mov
add
mul
retf
in
push
rcl
fisubr
loopne
dec
sbb
sti
mov
xchg
(bad)
mov
pop
cld
xchg
push
dec
dec
jae
ret
add
shl
test
mov
adc
pop
sub
xchg
lods
mov
mov
mov
cmps
lods
in
lea
xchg
sahf
mov
inc
pop
mov
outs
push
push
outs
bound
inc
adc
push
test
aaa
in
fcomp
jmp
jl
push
out
mov
cmps
mov
jo
mov
ret
fwait
ja
nop
jbe
mov
inc
adc
retf
int
jp
xor
jnp
xlat
sbb
sbb
add
mov
int3
cmps
into
or
jg
retf
in
int
cmp
jne
es
movaps
ret
mov
pop
xchg
fild
sub
aad
repnz
sbb
mov
mov
jb
popa
popf
movs
sbb
pop
popf
je
xchg
or
fistp
jg
jl
sub
push
add
adc
inc
push
and
or
or
dec
(bad)
cmp
test
repnz
jmp
setnp
mov
sub
retf
fidiv
push
daa
xlat
pusha
gs
or
add
and
xchg
dec
cwde
jb
outs
mov
(bad)
or
push
cmp
dec
mov
jae
rol
xor
dec
push
scas
add
stc
js
cmps
add
nop
cmp
fdivr
fcom
pop
je
jno
aam
push
or
lock
adc
cmc
xchg
sub
sub
push
stc
jne
sar
jge
mov
mov
test
(bad)
sub
mov
inc
pop
push
mov
jmp
pop
xor
sbb
xchg
mov
add
inc
adc
movs
xchg
stos
pop
dec
mov
push
push
repz
mov
popf
cmp
leave
je
xor
mov
cld
dec
or
inc
jmp
mov
daa
popa
std
outs
aad
stc
fs
not
jnp
cs
push
add
js
inc
adc
lods
call
ins
add
fdiv
jb
leave
adc
call
and
cld
cmp
dec
xchg
jmp
lods
ret
push
imul
popf
ss
xor
sar
iret
pop
xchg
pop
ins
mov
imul
cld
shr
cdq
mov
mov
add
lock
(bad)
mov
cmp
mov
push
pop
inc
mov
xor
or
jg
lods
nop
out
enter
ds
xchg
test
iret
dec
pop
push
inc
jbe
in
and
jmp
mov
sar
mov
xor
xchg
int
jnp
lods
neg
inc
pop
push
lea
cs
mov
jo
inc
mov
pop
cwde
sbb
pop
push
lock
sub
repz
xchg
jg
out
sbb
jns
add
bound
jle
add
sar
dec
sbb
and
cli
dec
xor
jg
neg
sbb
xchg
(bad)
out
fcom
lods
fdiv
gs
and
outs
cld
mov
sbb
jne
in
or
sbb
jns
cmp
pusha
loope
std
iret
add
or
xor
add
out
xor
sahf
inc
mov
out
sbb
adc
inc
shl
popf
sahf
xchg
sbb
xchg
push
sbb
in
or
add
jl
scas
jg
mov
js
hlt
cmp
pop
(bad)
jae
jnp
imul
arpl
sar
pop
std
cli
retf
ss
add
and
stos
outs
hlt
movs
mov
push
sub
popf
adc
pop
mov
test
clc
or
rol
js
pusha
cmp
xor
ret
push
mov
cmp
pop
xor
ins
push
es
stos
xchg
arpl
pop
imul
in
mov
(bad)
int
ret
xchg
sti
dec
lods
pop
adc
push
add
or
lods
fnsave
and
mov
daa
out
out
mov
sti
xor
mov
jne
retf
std
pop
sbb
jecxz
or
jne
mov
retf
ins
push
ins
push
add
imul
or
movs
fnsave
mov
and
outs
add
add
sbb
out
retf
lea
test
aas
cmp
out
aaa
cmp
imul
sbb
pop
adc
pop
mov
ins
cli
gs
retf
outs
ss
daa
test
mov
fsubr
mov
cmps
dec
fld
push
(bad)
imul
or
iret
sub
aad
ins
cmps
stos
adc
dec
clc
inc
mov
cwde
mov
in
arpl
cmp
mov
inc
pop
int
ret
fisubr
push
sbb
(bad)
dec
cmps
(bad)
cmp
xor
and
mov
arpl
adc
fnsave
xor
rcl
in
dec
repz
repnz
mov
jne
adc
cmp
fcomp
mov
in
aas
rcr
stos
in
lahf
jno
pop
inc
mov
fadd
xor
or
or
adc
mov
arpl
inc
in
jecxz
and
inc
ja
ror
ja
gs
xor
lds
in
inc
jns
mov
pop
jns
jmp
fisub
fisttp
dec
pop
data16
repz
call
aaa
and
push
xchg
lds
std
and
or
dec
ins
scas
sub
lea
dec
cmp
sub
sbb
push
imul
pop
fs
sub
fidivr
cli
mov
or
mov
cmp
test
sub
dec
lock
mov
cmp
lods
jmp
in
adc
pop
test
pop
sub
xchg
sbb
mov
ss
jp
cmp
push
aas
mov
mov
ins
inc
aas
fild
inc
fmul
lods
pop
cmps
fisubr
cli
jnp
adc
retf
pop
pop
adc
dec
jns
push
mov
sub
and
jb
(bad)
test
repz
sbb
fld
aad
mov
out
mov
ss
mov
dec
inc
test
jmp
hlt
imul
enter
jno
cmp
fcomp
outs
mov
aas
push
or
and
push
lock
pop
pop
mov
jl
xor
lods
in
push
dec
and
pop
pop
xor
imul
pop
jo
std
mov
dec
les
aas
lods
sahf
bound
call
fiadd
jae
sbb
nop
mov
add
fnop
pop
scas
nop
lock
mov
cmps
sbb
lds
stos
shr
pop
inc
and
sub
mov
sar
popf
repnz
daa
or
outs
xchg
gs
into
aam
mov
sbb
dec
pop
jns
jecxz
pop
jno
mov
stos
pop
test
xlat
fbstp
push
rol
mov
(bad)
jns
sub
imul
popa
js
push
pop
mov
dec
inc
mov
(bad)
pushf
repnz
dec
je
or
int3
mov
adc
iret
pop
mov
jne
adc
int3
out
jge
ret
mov
or
mov
int
and
sbb
mov
es
or
rcr
clc
jmp
push
sub
popf
add
mov
mov
jnp
adc
mov
mov
jge
pop
push
ja
scas
ja
or
xor
pushf
inc
loope
ins
jl
jmp
mov
xchg
adc
pop
add
cwde
cmps
jl
(bad)
retf
adc
cdq
(bad)
fcomp
into
ins
int3
mov
xchg
call
rol
adc
add
lock
jno
ins
aam
sub
jl
lahf
dec
rcl
jno
xchg
jl
nop
div
in
call
popf
ins
mov
lods
jp
jmp
cld
dec
mov
lahf
jle
adc
inc
arpl
inc
cli
cmps
mov
jmp
in
imul
pop
das
pop
jnp
dec
les
popa
outs
and
push
call
sbb
sbb
jmp
pop
test
repnz
(bad)
leave
(bad)
adc
(bad)
xchg
fcom
pop
xchg
repz
or
or
fisttp
icebp
inc
push
sub
xchg
mov
js
xor
push
(bad)
push
pusha
rcl
dec
pop
sub
fidivr
pop
cmp
mov
ret
push
jmp
mov
call
repnz
cmp
push
test
movs
and
mov
cdq
rol
les
stos
scas
xchg
pushf
movs
out
dec
rol
pop
jecxz
outs
pop
fcom
inc
dec
fldenv
daa
mov
push
and
in
xor
(bad)
fbstp
inc
push
fcom
mov
xchg
sbb
or
clc
(bad)
cmc
mov
dec
xchg
cmp
loope
xchg
mov
inc
inc
pop
test
mov
gs
adc
data16
sbb
cmp
sub
ret
cmp
sbb
cmp
cmps
jmp
mov
adc
add
ror
aas
call
sub
mov
lea
scas
cmps
test
push
loope
dec
mov
add
sub
popa
xor
xchg
scas
iret
adc
inc
unpcklps
arpl
fidivr
mov
movs
push
neg
call
lahf
cli
and
rol
ja
cld
mov
aas
add
sub
mov
mov
cli
dec
jbe
pop
pop
pop
cmps
(bad)
inc
dec
lods
xchg
jmp
push
mov
inc
jno
jne
(bad)
aam
mov
aam
scas
daa
mov
fcom
dec
jmp
adc
and
add
fninit
sub
in
add
add
mov
push
xor
xchg
xor
sti
mov
add
and
and
push
dec
or
adc
clc
into
std
xchg
jno
or
loop
and
xchg
popa
adc
fisub
jle
es
pop
inc
hlt
(bad)
dec
xor
mov
ret
ins
pop
xor
das
mov
pushf
adc
xlat
mov
dec
fldcw
jle
int3
cmp
dec
mov
es
lock
xchg
fwait
outs
sahf
jno
adc
jmp
xchg
shl
xor
pop
pop
fsub
xor
clc
adc
lods
jns
sub
mov
clc
or
jle
or
push
les
loope
push
dec
push
int3
leave
movs
mov
cmp
iret
fwait
jp
cld
mov
call
mov
aas
rol
out
clc
xchg
mov
add
hlt
retf
mov
pop
or
(bad)
mov
movs
(bad)
shr
mov
ret
mov
ds
ss
xor
mov
and
xchg
mov
inc
dec
leave
add
mov
and
pop
sbb
xor
int
imul
or
out
mov
push
sub
ret
arpl
xchg
mov
pop
icebp
ficom
sbb
or
xchg
and
imul
adc
pusha
ins
push
xchg
and
lods
out
jnp
js
sub
adc
out
fs
mov
stc
in
lea
inc
clc
pop
ret
ret
jbe
or
ins
and
jmp
mov
je
push
xchg
adc
in
add
scas
out
scas
xchg
xor
movs
lea
and
sbb
sbb
loop
sub
adc
out
pop
shr
add
jno
(bad)
aad
cmp
mov
int3
stos
pop
cdq
push
jnp
lahf
mov
(bad)
test
dec
lds
mov
mov
xor
and
push
es
pop
sbb
adc
lock
nop
scas
rol
mov
out
jo
(bad)
fsubr
xchg
adc
ins
push
push
(bad)
push
push
das
jno
lods
xchg
loope
sbb
mov
clc
cmp
or
dec
fst
(bad)
mov
outs
(bad)
pop
sbb
rcr
gs
aad
or
sti
pop
cmp
push
std
adc
aad
push
push
inc
jae
mov
gs
push
lods
imul
cmc
dec
fiadd
jl
cdq
mov
ffreep
or
cld
les
lds
adc
call
cmp
pop
mov
inc
scas
xor
rol
adc
aam
pop
jle
push
das
jg
mov
sub
cwde
lods
sbb
mov
jne
jmp
iret
or
out
jg
mov
repz
clc
add
or
cwde
lahf
scas
xchg
and
jle
mov
push
shl
call
add
mov
es
out
(bad)
imul
aad
sbb
sbb
stos
fmulp
ds
jl
sub
test
mov
push
mov
push
ret
clc
leave
add
xchg
mov
call
pusha
pusha
xchg
shl
cmp
and
xlat
jne
icebp
js
pop
cmps
ret
imul
movs
push
in
in
push
ss
and
and
mov
or
stc
test
push
rcl
out
inc
inc
mov
enter
imul
jl
fnsave
adc
das
dec
fistp
fnstcw
xor
add
add
adc
xchg
retf
pop
xor
add
mov
das
cmp
push
cmp
cmps
repz
sahf
imul
pushf
and
loop
popf
push
rcl
(bad)
fdiv
lea
fidiv
call
sub
sar
xchg
cli
cmps
mov
rcpps
and
jno
lahf
jge
pop
mov
icebp
pop
and
add
je
mov
ss
repnz
and
out
jnp
push
shr
xchg
(bad)
mov
sub
jge
pop
(bad)
jg
repnz
fst
es
mov
into
(bad)
mov
pop
mov
adc
aam
mov
int
ficom
mov
mov
xor
xabort
xor
jb
call
xchg
ins
lods
fs
and
in
(bad)
mov
or
xor
add
cmp
cmp
fdiv
ins
test
and
(bad)
cmp
les
clc
or
and
mov
shl
inc
fstp
add
data16
cmc
enter
push
gs
aam
pop
test
push
addr16
cli
dec
pop
mov
adc
punpckldq
aam
leave
inc
call
sub
push
jno
enter
cmps
out
inc
xchg
sub
adc
sar
adc
in
je
lods
and
fild
dec
and
mov
and
adc
sub
or
int3
xor
xor
cmp
int3
jmp
jo
dec
(bad)
rcl
jo
pushf
in
push
out
fstp
ret
gs
leave
sub
inc
mov
sahf
add
push
jmp
fdiv
jns
xor
xchg
fild
(bad)
cdq
jg
push
out
xchg
pop
out
jecxz
sbb
cmps
jns
cmp
dec
xor
std
dec
dec
adc
aas
push
cmps
inc
test
or
push
into
dec
imul
leave
adc
popa
add
dec
and
jle
rcr
mov
push
push
or
add
fcmovnb
dec
enter
cwde
sbb
cld
sahf
lea
ret
xor
xor
outs
aas
inc
in
ror
cmps
adc
mov
fst
sub
call
pushw
out
ins
push
mov
int3
push
adc
mov
(bad)
xrelease
and
jl
mov
xchg
ret
(bad)
stos
and
std
and
les
mov
or
ror
xchg
loop
fld
push
loop
addr16
push
sbb
mov
add
mov
mov
sub
out
out
pop
dec
mov
cld
int3
add
or
jp
sub
or
add
sbb
pushf
push
xchg
xlat
mov
xchg
or
in
retf
and
(bad)
adc
push
cmc
jmp
cmp
push
retf
outs
das
int
das
sub
jo
inc
out
shr
in
mov
mov
sahf
inc
xchg
pushf
or
mov
sbb
sub
pushf
xor
sbb
out
push
gs
xor
cmps
hlt
xor
mov
adc
inc
lods
cld
cmp
bound
stos
sbb
pop
inc
xchg
stos
pop
sahf
sub
mov
mov
ret
jp
add
jno
mov
fs
rcl
adc
jp
fs
int
sbb
test
sti
loopne
mov
fsqrt
pop
(bad)
push
hlt
or
jmp
out
push
out
mov
fwait
cs
dec
sub
out
mov
cdq
out
ins
dec
xor
ret
in
mov
jp
jle
inc
fisttp
ja
lea
or
mov
jbe
and
push
jg
sahf
out
enter
and
cdq
daa
xchg
or
adc
leave
adc
sbb
sbb
ss
dec
push
imul
jp
adc
jb
ror
jns
call
sahf
jl
mov
ins
mov
leave
jnp
mov
cmp
jnp
inc
push
sbb
push
lea
push
cli
jmp
in
(bad)
popf
cs
stos
or
outs
aaa
mov
fnsave
inc
cli
shr
stos
inc
movs
lods
sbb
repz
(bad)
push
retf
push
fisubr
ja
das
sbb
mul
fmul
daa
xchg
clc
test
scas
mov
push
inc
je
jb
div
mov
pushf
fcmovnbe
outs
pop
fild
das
ss
je
daa
pop
or
cmp
and
xchg
mov
mov
(bad)
stos
mov
mov
jmp
popf
(bad)
in
dec
out
mov
push
adc
dec
jge
dec
dec
jae
add
outs
rcl
leave
cld
push
hlt
pusha
mov
repnz
xchg
mov
dec
xchg
aad
push
daa
rol
sub
fwait
and
int
add
ret
xchg
fdiv
and
cmp
dec
test
icebp
mov
leave
jle
leave
sub
rcr
ja
dec
pop
cwde
cmp
adc
fidivr
or
push
cwde
shl
lea
dec
loopne
cmp
out
adc
fadd
mov
dec
outs
or
xchg
lods
sti
mov
loop
dec
mov
ins
arpl
aaa
sub
(bad)
(bad)
mov
xor
add
popa
xor
adc
dec
sub
cmps
add
call
cs
cmp
xor
mov
pop
pop
and
and
mov
add
sbb
inc
pop
fld
rcr
mov
rsm
iret
sbb
push
sub
sbb
les
dec
mov
sub
push
(bad)
mov
dec
aam
cmps
data16
int
xor
jnp
jns
jne
stc
fimul
out
int3
shl
jmp
push
retf
push
outs
xchg
sahf
pop
or
shr
repz
or
push
mov
xor
xchg
pop
sbb
jg
pop
popf
dec
jp
cmp
add
ret
bound
aad
retf
pop
test
cmp
test
and
fsub
add
test
iret
mov
and
jbe
shl
movs
xchg
xchg
dec
jecxz
call
xor
outs
adc
jno
push
ins
mov
fisttp
mov
jmp
div
inc
icebp
dec
mov
out
push
imul
ins
stc
repnz
xor
jne
pop
jb
sahf
push
xchg
or
jl
adc
jnp
xchg
add
ins
jmp
mov
ror
ja
cmps
daa
sub
addr16
retf
adc
cdq
inc
and
dec
xchg
jle
ins
add
loop
(bad)
aam
les
push
rcl
xor
and
xor
or
or
cmc
sahf
outs
mov
add
xchg
in
out
mov
mov
pop
push
push
mov
sub
shl
add
jmp
cs
in
sbb
cmp
push
lods
std
ss
(bad)
mov
mov
fdivr
jmp
push
xchg
dec
push
pop
lods
scas
xchg
ficom
test
adc
push
fs
mov
lds
inc
call
inc
(bad)
clc
mov
xchg
in
loopne
xchg
lock
cmp
push
adc
das
jmp
push
add
call
test
call
inc
movs
or
mov
xchg
xchg
add
cli
sbb
dec
jae
(bad)
jmp
adc
stc
mov
xor
adc
and
xchg
dec
(bad)
repz
sbb
out
icebp
(bad)
xchg
and
dec
jno
push
in
lea
outs
adc
push
lock
repz
mov
pop
pop
je
push
mov
fcomp
cmp
cmc
mov
pop
out
leave
sbb
jle
lahf
add
fwait
jno
loop
xor
addr16
sbb
jno
sbb
shl
xchg
cmp
push
inc
(bad)
mov
lods
cwde
push
das
and
push
add
fimul
scas
xchg
retf
xchg
add
(bad)
loopne
add
in
jge
jo
test
sbb
ror
inc
sbb
imul
popf
lea
pop
xchg
out
test
shr
or
outs
add
loopne
mov
sub
add
or
movs
fs
mov
inc
lahf
cmp
stos
pop
cmp
xchg
fsubr
mov
aam
mov
jmp
inc
jmp
ret
jnp
loop
psrld
push
inc
fwait
sbb
dec
or
enter
xchg
xchg
popf
mov
mov
in
or
push
stos
ss
jae
sbb
jecxz
mov
adc
leave
dec
cmps
cmp
mov
mov
xchg
jmp
out
in
pop
mov
iret
icebp
mov
daa
inc
gs
and
cmp
lahf
sub
shl
and
imul
dec
mov
in
out
jmp
push
scas
add
push
and
mov
arpl
ficomp
out
stc
aam
xchg
les
(bad)
retf
es
pusha
xor
push
ds
out
cmp
xchg
in
xchg
movs
int3
xor
mov
cmp
gs
hlt
in
(bad)
and
and
xadd
mov
cmp
pop
push
pop
mov
jle
mov
adc
adc
mov
jp
movs
mov
es
jle
inc
cmp
cwde
mov
xchg
retf
mov
add
sub
mov
cs
jle
jb
dec
cmc
int
fld
or
xchg
sub
retf
xor
jno
xchg
or
sbb
cmp
scas
in
retf
dec
xor
(bad)
repnz
mov
add
shl
shr
mov
mov
lea
mov
leave
add
pop
lahf
aaa
enter
xor
ins
fist
sub
adc
and
repnz
xchg
xchg
sbb
ins
stos
lea
jo
push
mov
xchg
fisubr
int
pusha
(bad)
sub
dec
aas
ds
mov
sbb
add
sub
and
sbb
or
mov
add
ret
sbb
clc
add
jns
cmp
(bad)
jl
cmps
aaa
or
mov
xchg
rol
mov
ja
loopne
fcomp
mov
and
pop
sub
push
call
xor
adc
or
sar
mov
mov
dec
sbb
out
in
adc
dec
xlat
pop
and
pop
nop
jno
sbb
xchg
neg
add
jp
(bad)
movs
xchg
cmps
inc
fcmovnbe
scas
cmp
inc
cli
pop
inc
addr16
sahf
jmp
mov
pop
lahf
xor
mov
(bad)
pop
pop
jl
or
pop
call
jl
push
fbstp
(bad)
adc
push
mov
mov
(bad)
xor
out
mov
xor
mov
jmp
iret
mov
push
or
jo
test
rcr
out
je
mov
aaa
clc
aaa
sub
jae
arpl
xchg
repnz
out
enter
imul
jbe
jno
mov
mov
inc
ret
adc
add
mov
pop
nop
push
std
adc
movs
in
pusha
mov
sub
fs
mov
cmps
pcmpeqb
and
scas
or
jge
cdq
pop
dec
push
movs
movs
add
mov
push
cmc
retf
adc
xchg
mov
dec
sbb
push
fnsave
or
je
rol
push
sub
xchg
xchg
mov
jno
push
pop
inc
cmp
les
leave
aas
int3
retf
movs
out
sahf
add
stc
jmp
add
jae
ror
stos
inc
loop
mov
dec
lahf
mov
and
sahf
mov
jo
call
add
into
leave
jecxz
xor
sub
sbb
dec
xor
inc
xchg
sbb
cmc
or
adc
pop
imul
xor
out
mov
stos
sub
adc
mov
ror
movs
push
cli
cwde
push
dec
cmc
ja
mov
fmul
add
cmp
inc
dec
xor
movs
jae
hlt
rcr
and
fs
call
jmp
idiv
sub
adc
fisttp
lods
outs
(bad)
scas
mov
sub
xor
pop
mov
add
mov
mov
lea
xchg
loopne
pop
fist
clc
mov
mov
cmps
out
cs
cmp
mov
outs
icebp
fistp
loop
push
es
ficom
je
dec
hlt
or
pop
out
mov
fidiv
cli
imul
jmp
cmp
iret
ds
addr16
es
data16
inc
push
cmp
cmp
in
jl
(bad)
loopne
test
in
mov
pop
mov
fdiv
pop
pop
sar
fs
ss
add
sti
outs
sbb
div
inc
outs
mov
mov
xchg
push
iret
cdq
mov
out
mov
lock
test
lahf
or
rcl
sbb
or
repz
outs
arpl
sub
add
leave
mov
push
cmp
fcom
enter
dec
xor
dec
(bad)
sbb
or
pusha
xchg
mov
add
fsubr
cmp
lock
mov
hlt
mov
mov
out
jge
dec
add
jb
push
pop
fmul
ja
(bad)
or
(bad)
pop
mov
(bad)
pushf
dec
ret
leave
bound
loop
push
push
in
jnp
mov
pop
bound
stos
scas
mov
xchg
retf
push
lahf
add
cdq
out
imul
adc
jb
lahf
ret
sbb
push
or
lahf
and
lods
jle
jnp
(bad)
adc
mov
icebp
sub
mov
test
inc
imul
(bad)
cmp
das
dec
pop
loop
sbb
cmp
pop
add
jmp
fst
add
inc
ror
imul
hlt
or
sub
mov
scas
jb
dec
adc
pop
or
stos
ja
fcmovne
fwait
daa
imul
bound
cmp
fdiv
test
int3
jge
jns
jp
into
push
pop
pop
dec
sub
ins
jnp
fwait
in
mov
pop
jmp
out
outs
push
lods
cmp
in
pop
popf
pop
test
out
jnp
call
in
inc
arpl
fnsave
adc
(bad)
fnstenv
out
pop
arpl
mov
pop
outs
add
push
push
aad
mov
inc
gs
push
iret
jne
push
cmc
mov
pop
jge
xor
sahf
sti
call
sti
mov
mov
test
scas
js
mov
cmp
adc
aaa
add
std
cli
adc
sub
cmp
sub
pop
ret
fwait
int3
in
pop
and
out
ins
inc
cwde
retf
mov
lods
xchg
clc
icebp
dec
test
sbb
movs
movs
cmp
push
dec
pop
cmp
(bad)
test
popf
inc
add
jno
jne
cmps
imul
inc
mov
xchg
dec
pop
movs
push
icebp
inc
or
xchg
adc
pop
pushf
push
cmp
jb
sbb
or
xchg
fwait
stos
fwait
push
imul
gs
sub
test
aad
mov
xlat
sub
(bad)
mov
adc
cmp
xchg
in
xlat
ds
rcl
pop
sbb
das
aam
jp
sbb
and
pop
lds
push
cmp
mov
and
inc
and
pop
mov
pusha
scas
arpl
lahf
ror
adc
ja
imul
adc
pusha
es
pop
cmp
lods
mov
bound
jmp
dec
sbb
xor
aad
out
leave
xor
imul
cwde
mov
test
mov
dec
out
icebp
pop
inc
nop
sbb
jno
leave
fist
mov
xor
cmps
int3
lea
rcl
xchg
xor
dec
fwait
stos
xor
loop
aas
enter
push
cs
repnz
pop
and
call
pop
push
push
adc
dec
(bad)
xchg
or
ins
mov
push
sar
(bad)
mov
mov
jle
pop
jge
rol
xor
lea
lahf
ins
shl
pop
inc
cmp
(bad)
call
cdq
mov
(bad)
(bad)
stos
mov
retf
sahf
movs
lods
push
shl
fsubr
jmp
fwait
mov
les
sbb
ja
lods
sti
push
mov
inc
in
adc
and
sub
mov
ror
lahf
xor
or
ins
inc
inc
int
jecxz
mov
cmp
push
mov
xchg
or
jp
mov
clc
test
fild
loopne
hlt
mov
xor
xchg
push
jns
ins
out
aam
sbb
lods
mov
mov
aad
aam
ret
(bad)
in
jmp
adc
sub
pushf
js
jl
ins
in
push
pop
jmp
imul
push
and
retf
jae
jmp
fidiv
pop
cld
nop
sbb
push
das
ror
jno
push
and
mov
std
aaa
jne
dec
fcmovne
retf
fild
ret
call
imul
sbb
je
jle
in
xchg
push
sahf
out
loop
(bad)
into
mov
pop
sar
mul
movs
mov
push
scas
sbb
(bad)
mov
das
dec
iret
xor
xchg
cwde
fiadd
mov
xor
adc
in
cmps
and
(bad)
jp
mov
les
cdq
dec
js
jbe
or
pusha
aad
and
movs
clc
mov
jmp
mov
pop
jbe
xchg
xor
fldl2e
jmp
jae
or
push
mov
stos
shl
repz
cmps
sub
sbb
adc
and
iret
fadd
or
or
test
repz
fild
cwde
xchg
cmps
xchg
neg
jge
stos
in
mov
xlat
pop
jb
bound
test
arpl
jns
lea
push
add
mov
push
cmps
and
xlat
xchg
jns
mov
mov
jmp
mov
lods
push
mov
mov
les
push
pushf
push
jo
hlt
or
mov
jb
push
mov
and
sbb
aaa
enter
push
xor
addr16
add
mov
mov
movs
gs
or
jo
jle
sub
es
push
pop
pop
mov
lods
inc
add
push
repnz
lea
xchg
out
sub
jl
mov
adc
in
scas
mov
ja
dec
jge
jp
test
dec
cmp
push
test
jg
mov
adc
fs
outs
sbb
xchg
mov
adc
cmp
xor
ret
cmp
push
cmp
jns
ja
sub
xor
xchg
adc
ds
cdq
mov
jge
sub
adc
and
daa
jns
cmps
call
xor
or
lahf
mov
pop
loop
out
pop
pop
clc
sbb
sub
mov
outs
push
repz
cmp
dec
arpl
stos
pop
cmp
aaa
lods
mov
stc
mov
fild
and
push
mov
dec
jg
lahf
(bad)
push
dec
fmulp
leave
lock
push
out
xchg
jp
stos
lahf
pop
loopne
push
mov
mov
mov
sub
pop
aam
ret
mov
mov
or
aaa
inc
push
retf
sahf
mov
lock
dec
jb
int
jle
inc
inc
jp
mov
mov
mov
(bad)
mov
pop
std
xor
and
repnz
addr16
push
inc
inc
cs
mov
scas
int3
or
nop
push
test
and
iret
inc
cmp
pop
pop
xor
pop
xor
nop
sub
push
xchg
in
xchg
aam
cmc
sahf
mov
in
mov
mov
push
imul
mov
js
mov
inc
mov
add
(bad)
fild
jg
push
(bad)
mul
ja
add
outs
dec
call
data16
pop
rcr
xchg
sbb
add
jp
cwde
ror
jl
iret
mov
ror
punpckldq
push
adc
rol
in
mov
jl
(bad)
scas
ds
mov
jmp
call
fdivrp
cmp
in
mov
add
push
mov
call
inc
or
and
aaa
dec
fdiv
jns
enter
mov
pop
aam
fdivr
icebp
mov
mov
adc
mov
outs
or
enter
sub
cmp
test
fdiv
into
xchg
xchg
scas
adc
adc
(bad)
repnz
aam
mov
mov
leave
fmul
dec
inc
push
(bad)
fwait
pusha
push
movs
jne
cmp
popa
mov
sub
and
mov
jmp
cmp
pushf
xchg
std
sub
ss
cmp
cmps
jge
cmp
ins
xor
adc
in
cwde
sbb
std
js
mov
dec
dec
mov
sbb
inc
push
cmp
retf
mov
(bad)
mov
outs
xchg
sbb
jg
mov
push
inc
cs
ins
mov
xchg
dec
mov
jmp
xor
pop
scas
sahf
pop
mov
or
push
inc
or
adc
add
in
xchg
xchg
(bad)
cs
jne
add
jle
repz
inc
idiv
sub
mov
addr16
pop
pop
pop
add
xchg
(bad)
movs
pop
fcomp
mov
add
cmp
sbb
inc
pop
xor
jno
movs
inc
test
movs
lods
cld
mov
in
mov
mov
inc
or
in
sahf
inc
xor
jo
and
dec
sbb
jle
bound
rol
pop
sub
clc
(bad)
mov
or
aaa
inc
test
in
dec
pop
movs
jmp
adc
and
pop
push
and
int
in
(bad)
mov
cld
or
aaa
mov
out
test
and
clc
or
add
push
sub
fs
aam
pop
ss
push
inc
bndldx
jle
cli
lock
mov
sub
pop
xchg
into
mov
and
ss
inc
sub
daa
push
xor
xchg
pop
pop
repz
gs
call
mov
data16
shl
popa
hlt
repz
imul
mov
call
(bad)
sbb
sti
pop
mov
loopne
movs
adc
mov
fwait
in
gs
push
imul
lds
add
popa
dec
or
and
xlat
sub
mov
sbb
sbb
mov
bnd
(bad)
or
cmp
ret
(bad)
fidivr
jae
jmp
test
scas
push
sub
cmp
add
scas
in
cmps
sahf
inc
pusha
sbb
cdq
ins
mov
cmp
scas
mov
scas
cmp
jecxz
dec
(bad)
ficom
loopne
jle
mov
out
pop
xchg
fs
xchg
(bad)
retf
add
cmps
adc
imul
pop
sbb
popa
inc
(bad)
and
call
dec
imul
(bad)
out
ret
jmp
add
ins
cmp
ins
idiv
xor
pop
shr
mov
jae
and
cmps
jnp
adc
mov
adc
pop
mov
in
scas
xor
inc
bnd
inc
adc
sub
icebp
ins
inc
mov
and
stc
js
push
xchg
jbe
mov
lock
mov
lahf
sub
push
xchg
inc
mov
xchg
scas
sub
adc
push
imul
push
not
mov
call
xor
in
repnz
sub
xchg
shr
sbb
or
in
out
xor
dec
push
scas
and
cli
stos
and
ins
mov
pop
popa
adc
enter
adc
stc
jne
lock
enter
mov
lods
xor
xchg
leave
in
pop
and
push
xchg
mov
ds
loope
jmp
mov
(bad)
dec
jp
cmc
sahf
push
push
mov
cmp
cli
call
mov
xor
cmp
(bad)
pop
aam
repnz
jmp
cmp
jmp
movs
cmp
fiadd
lahf
dec
or
mov
jae
cmp
mov
adc
rcr
retf
movs
loopne
mov
pop
out
dec
cmp
(bad)
addr16
(bad)
leave
ret
pop
shl
clc
or
out
rcl
les
cmp
cmp
aaa
mov
xor
pop
sbb
into
mov
mov
mov
cld
cmp
and
pop
jo
loope
ja
lods
jl
sub
sub
sbb
adc
jbe
sahf
lods
jae
or
or
in
bound
or
push
jp
and
dec
pop
addr16
idiv
pop
jmp
mov
outs
inc
sub
test
scas
outs
stos
mov
mov
aad
inc
inc
xchg
sub
fisubr
pop
add
and
mov
mov
sbb
fisubr
mov
loop
xchg
outs
enter
pop
sahf
out
push
mov
adc
mov
fcom
cdq
cld
add
push
jge
ss
add
lds
loope
pop
inc
sti
mov
mov
addr16
jecxz
cmps
or
and
scas
rcr
pop
adc
sbb
icebp
enter
mov
repnz
xchg
out
sbb
fnstcw
sub
inc
std
xor
mov
add
pop
add
mov
push
ficom
out
push
test
xor
xchg
arpl
jecxz
imul
xor
add
sar
push
and
push
sub
hlt
or
hlt
mov
dec
in
pop
jl
sub
sbb
test
mov
shl
lds
out
xchg
cld
pop
or
(bad)
outs
stos
add
ins
sub
xor
daa
or
in
sub
stos
xchg
movs
popa
adc
xlat
call
inc
(bad)
sub
test
jbe
push
test
getsec
popa
stc
xchg
test
xchg
xor
xor
iret
in
jle
pop
inc
push
mov
mov
or
(bad)
sub
lahf
sbb
adc
mov
mov
dec
jmp
stos
or
sub
sahf
ja
popf
bound
aad
adc
mov
call
leave
add
fnstenv
adc
sub
jb
and
mov
arpl
shl
dec
ret
pusha
outs
das
pop
std
add
sbb
push
adc
rcr
shl
cmps
add
or
fldenv
mov
jl
mov
aaa
mov
push
and
loope
outs
rcr
mov
unpcklps
cmp
fidivr
adc
out
ins
and
pop
addr16
(bad)
aad
push
xlat
mov
rol
pop
dec
lods
xchg
xchg
pop
adc
stos
shl
sbb
dec
mov
int
push
retf
pop
add
lea
xchg
mov
pop
in
cmps
lahf
mov
push
jmp
je
jns
add
push
mov
iret
sti
mov
adc
addr16
ss
dec
pop
pop
mov
rcl
fcom
mov
sar
mov
pop
push
into
int3
inc
mov
add
xchg
(bad)
fst
fidiv
fild
stos
mov
mov
neg
mov
add
push
xchg
inc
das
das
jp
push
(bad)
shl
mov
dec
mov
inc
into
mov
inc
jb
cmc
call
jecxz
mov
inc
jge
pop
jg
sub
add
and
mov
aas
sbb
in
das
mov
std
gs
test
stos
inc
jnp
aam
xor
adc
test
xor
and
and
jg
ds
arpl
pop
es
neg
pop
fistp
jp
lods
in
enter
mov
fs
out
inc
sahf
lock
xchg
lods
imul
fs
push
mov
popa
sahf
jb
mov
dec
mov
mov
jnp
popa
pop
jno
or
rol
loop
(bad)
dec
dec
cmp
cdq
and
retf
movs
out
shl
stc
xor
outs
or
mov
call
shl
retf
pusha
(bad)
pushf
ins
ret
out
push
cdq
jp
jp
imul
and
lods
sbb
out
pop
inc
mov
stos
or
inc
pop
mov
sub
dec
cmps
pop
(bad)
xchg
lods
adc
push
jae
mov
frstor
mov
pusha
shl
fucomp
ror
dec
sub
push
mov
add
and
xlat
ins
aaa
add
call
xchg
stos
add
jnp
fcmovne
jecxz
inc
jp
(bad)
ins
into
dec
bound
add
repnz
push
mov
mov
sub
jg
push
popa
sbb
adc
add
jbe
add
test
icebp
je
rcl
ja
ficom
xchg
xchg
daa
lea
xchg
mov
and
das
(bad)
mov
cmp
jns
loop
and
ins
jo
rcl
adc
cmps
sub
enter
ror
int3
jae
scas
add
out
add
adc
mov
test
pushf
or
xchg
int
sub
mov
jle
push
(bad)
push
aad
adc
daa
mov
push
pop
out
loop
xchg
add
inc
std
mov
call
sbb
jmp
xchg
and
movs
jo
cmp
cmp
and
sti
retf
xor
gs
mov
or
cwde
loopne
es
(bad)
pop
cmovl
sub
xchg
pop
cs
push
xchg
rcr
ror
sbb
mov
movs
push
in
jp
scas
cmp
enter
je
push
mov
mov
ss
jnp
xchg
addr16
pop
pop
dec
mov
or
mov
cmp
in
or
outs
addr16
mov
dec
or
inc
xchg
sbb
(bad)
cwde
stos
stos
sahf
imul
stos
nop
ret
inc
inc
repz
dec
adc
sub
mov
or
pop
sub
and
mov
pop
mov
int3
xchg
sbb
lds
mov
in
aaa
sub
call
retf
fild
inc
rcl
and
in
add
cmp
leave
cdq
jecxz
sti
inc
push
xchg
cmp
add
add
daa
mov
gs
rol
or
js
mov
div
daa
xchg
fcmovbe
movs
mov
mov
ror
sub
(bad)
fnstenv
push
cmps
add
cmc
sbb
cmp
loop
xchg
add
mov
jmp
daa
sbb
mov
leave
test
movs
(bad)
or
int
jae
dec
and
mov
jmp
jl
mov
jmp
xor
pop
mov
stos
(bad)
gs
add
adc
call
sahf
aaa
mov
sbb
stos
inc
mov
sub
clc
add
pop
dec
mov
cmp
xor
daa
shl
imul
push
mov
push
cmp
pop
add
sub
cmp
out
shr
(bad)
push
(bad)
sub
mov
push
pop
xor
retf
xchg
pop
pushf
ret
(bad)
jo
and
add
and
sar
jmp
test
adc
jno
stos
adc
mov
arpl
xchg
xor
sbb
mov
clc
fwait
sub
scas
inc
or
cdq
xor
iret
sbb
xor
xor
pushf
test
mov
xchg
enter
jnp
jno
add
ss
cmps
stos
nop
int
in
test
push
and
and
call
pop
(bad)
ss
popa
std
push
add
popf
sbb
mov
inc
jmp
ins
add
jmp
sbb
xor
jl
add
das
call
pusha
mov
jmp
add
(bad)
adc
sti
das
push
cmps
ds
sub
rcl
dec
mov
sbb
mov
add
aaa
add
(bad)
push
xchg
inc
gs
sar
add
push
je
sub
lahf
or
pop
adc
push
and
(bad)
fs
inc
or
push
cmps
xchg
out
gs
stos
fild
sar
mov
sahf
jb
out
into
rcr
sub
sahf
inc
sbb
fs
ins
pushf
sbb
orps
push
push
(bad)
pop
dec
xchg
pop
or
and
neg
mov
stos
jns
pop
dec
jg
push
xlat
pop
xor
sti
dec
push
pop
jg
pusha
fs
rcl
cmp
stos
pop
enter
dec
adc
into
pop
imul
mov
stc
cmp
xor
ret
and
frstor
xchg
xor
in
or
cmp
loope
fldenv
not
jmp
xor
adc
or
pop
jbe
loop
lds
das
push
dec
call
sub
dec
out
xor
bsf
and
mov
fldcw
cmp
test
add
repz
ins
fsub
stos
(bad)
stc
dec
push
aas
icebp
sbb
and
add
dec
nop
adc
mov
adc
cwde
imul
inc
xchg
or
sbb
jmp
pusha
xchg
ss
cwde
std
shl
pop
mov
mov
xor
into
aam
sub
dec
fdiv
popa
movs
adc
movs
xor
mov
mov
and
mov
add
lock
or
adc
adc
je
mov
jno
test
mov
fisttp
popa
lahf
adc
push
push
xor
lods
cmp
shl
cmps
pop
adc
sbb
or
js
mov
mov
aas
pop
stos
out
aaa
xchg
pop
fcom
(bad)
mov
xchg
mov
imul
out
mov
adc
mov
mov
xchg
je
inc
push
cmp
pop
sub
(bad)
int3
out
xchg
and
mov
xor
inc
pop
icebp
jo
retf
arpl
and
fsubr
aaa
jmp
in
adc
push
arpl
pop
jge
sbb
fst
inc
ret
ja
cli
and
out
dec
or
sbb
sbb
sbb
xchg
lahf
mov
cwde
enter
icebp
sti
push
sub
retf
out
ins
fldenv
ret
outs
and
mov
jns
xor
mov
xor
mov
pop
jg
push
lock
ret
sub
mov
into
loopne
jnp
or
cmp
adc
nop
pop
push
cdq
pop
or
ins
add
xor
mov
or
arpl
scas
aas
mov
mov
fistp
or
stc
ror
test
and
popa
out
sti
dec
xchg
push
in
pusha
or
pop
mov
mov
into
dec
add
rcl
xchg
xchg
retf
mov
and
and
xchg
and
fistp
call
inc
repnz
sub
in
scas
leave
fsubr
shr
pushf
adc
movs
push
repnz
sbb
push
push
jnp
out
push
mov
or
xchg
aad
xor
cli
repz
add
cmp
xor
mov
sub
gs
call
jle
(bad)
ins
mov
xchg
frstor
mov
mov
push
loope
js
push
inc
ins
sub
scas
xor
cli
sbb
mov
adc
dec
xchg
or
shr
dec
aad
icebp
sbb
into
cli
adc
test
es
push
aad
scas
xchg
jnp
mov
loop
outs
jb
in
mov
cmp
test
fistp
fsub
in
mov
repnz
jbe
fisub
jae
scas
dec
or
ja
dec
int
xor
rcr
les
iret
sub
fldenv
sbb
push
sub
xchg
or
cwde
mov
pop
push
cmp
movs
push
mov
dec
cmp
xor
xchg
jne
cwde
test
daa
sbb
es
std
ss
stos
fbld
push
mov
and
mov
idiv
int3
inc
ja
sub
leave
pop
lods
push
jmp
imul
sbb
test
cmp
add
or
push
sbb
and
(bad)
fdecstp
mov
pop
jmp
sbb
push
jge
loop
dec
jmp
clc
dec
out
lock
lds
jmp
add
jns
hlt
aas
aam
repnz
scas
xchg
cmp
jns
movs
jmp
xchg
scas
imul
push
xor
les
jl
pop
mov
mov
push
mov
out
ja
sbb
mov
popf
not
cmps
pop
cmp
stc
push
jmp
xor
test
inc
rcl
mov
cmps
jge
push
movs
sar
sbb
clc
mov
jne
aaa
pop
stos
sbb
lock
sbb
iret
cld
or
and
inc
sub
sub
fiadd
mov
pop
cmc
(bad)
xor
neg
sub
int3
retf
mov
pop
popf
or
lahf
bound
or
pop
es
popf
xor
cmps
xchg
fild
or
loope
ret
mov
shl
mov
jp
add
hlt
sub
adc
dec
push
aaa
call
sub
adc
inc
pmullw
adc
jnp
or
and
or
mov
pop
jo
push
(bad)
iret
push
jae
pop
(bad)
dec
rol
aam
or
or
imul
push
lea
adc
sahf
inc
retf
movs
je
(bad)
fwait
pop
das
outs
fadd
fadd
shl
movs
add
dec
out
jns
and
push
in
dec
arpl
jae
enter
loopne
jne
or
fdivr
scas
sbb
icebp
lahf
in
fsub
push
pop
in
repz
sar
pop
fadd
je
stc
sbb
push
jmp
xor
mov
(bad)
ins
pop
or
xor
rcl
das
clc
xlat
cmp
loop
sti
cmp
add
call
lds
jp
mov
cmp
lods
test
stos
xchg
dec
mov
or
cmp
lds
mov
lods
ins
inc
sbb
retf
or
sti
mov
shl
(bad)
(bad)
ins
daa
fistp
jmp
pop
mov
sahf
mov
cmps
loop
ins
push
rcl
jno
push
sub
xor
(bad)
push
js
ret
movs
ficomp
mov
pop
push
rcl
in
push
(bad)
or
add
inc
rcr
inc
mov
ds
push
lds
ins
ficomp
cmp
clc
fcom
cdq
cmp
imul
jo
sub
xlat
or
scas
inc
sahf
movq
xchg
inc
pop
push
dec
mov
out
jmp
sbb
lock
mov
inc
jmp
xchg
adc
addr16
mov
into
test
push
(bad)
jp
sahf
loop
xchg
pop
mov
ins
aad
arpl
add
pop
imul
mov
pusha
sub
inc
fstp
daa
jmp
mov
mov
mov
mov
retf
in
xor
es
and
popa
sbb
and
retf
push
sbb
mov
sub
lea
push
and
inc
jge
push
push
test
into
cmps
loop
inc
bound
lahf
dec
jg
in
and
sub
aam
xor
xchg
pop
xchg
bound
popf
jg
adc
mov
xchg
pop
mov
aad
mov
enter
sbb
push
jmp
(bad)
cmp
jbe
ja
push
cwde
pop
cmp
mov
ins
(bad)
movs
mov
imul
repz
or
push
dec
ds
(bad)
aas
mov
push
(bad)
aad
mov
or
test
sub
push
icebp
test
cmps
arpl
mov
leave
sbb
retf
dec
ret
dec
fld
or
int
addr16
sub
in
sub
aas
lods
pop
jl
or
ja
fs
or
mov
fsubp
(bad)
fs
xchg
js
div
sbb
dec
popa
jb
jp
or
or
sub
lea
pop
or
inc
jns
xchg
mov
jg
add
mov
dec
gs
xchg
jno
bound
mov
sub
data16
call
xchg
das
fisttp
jp
mov
cmc
pusha
inc
pop
ficom
mov
jno
hlt
pop
inc
pop
lds
xchg
push
adc
les
and
push
movs
out
push
mov
shr
push
adc
mov
mov
ins
fucomi
je
cdq
sti
jbe
inc
imul
push
push
(bad)
loopne
push
dec
jmp
sti
ret
sar
fsubr
dec
sub
out
mul
push
pop
lock
sbb
sbb
push
outs
mov
sbb
mov
fwait
xor
call
call
push
add
ja
sub
sbb
push
jecxz
jns
cwde
mov
imul
mov
sbb
sbb
es
inc
(bad)
(bad)
xlat
mov
aam
js
(bad)
xlat
(bad)
mov
sbb
jmp
aaa
inc
pop
in
push
inc
call
(bad)
push
inc
les
lds
enter
jae
sub
and
(bad)
das
jp
adc
bound
leave
ds
ins
enter
jne
pop
cld
mov
arpl
jo
xchg
fs
pop
pushf
je
bound
sbb
xchg
(bad)
adc
push
dec
xchg
sbb
div
add
les
xor
cdq
and
mov
cmp
inc
dec
lahf
shl
lea
sbb
lahf
mov
stc
mov
test
mov
cwde
shl
inc
sub
xchg
sub
add
push
ins
dec
fs
cmp
pop
and
test
pop
ds
ds
cmp
(bad)
in
push
int3
mov
push
add
mov
fstp
repz
sub
mov
add
lods
adc
xchg
sub
pushf
jbe
sbb
push
mov
xlat
adc
in
add
int
leave
test
pop
xor
mov
jmp
shr
push
mov
ja
mov
test
test
sub
cmp
sub
pop
mov
cld
add
mov
addr16
adc
xchg
add
dec
rol
pusha
stc
bound
inc
cmps
(bad)
rol
xchg
stos
jo
bound
mov
pop
sub
es
cmp
cmps
sbb
pop
imul
daa
out
jns
dec
ja
loop
shr
gs
mov
cmc
mov
fs
daa
sti
sub
pop
cmp
(bad)
mov
aad
aam
not
test
push
push
imul
cli
fwait
in
ins
mov
in
or
jnp
adc
je
test
ror
shl
sub
ficomp
push
mov
cs
lahf
loope
popf
js
pop
push
sbb
fidivr
or
fisub
popa
pop
(bad)
jg
aaa
pop
aas
arpl
mov
cmc
aaa
in
or
ja
and
xor
fild
xor
pop
mov
cdq
lods
sbb
mov
cli
imul
popa
ret
jns
out
aad
das
clc
std
xchg
xchg
ds
mov
jae
punpckldq
das
xor
jo
rcl
aas
mov
aam
mov
xlat
cwde
sbb
sar
mov
retf
xor
js
sbb
fnstcw
ror
pop
std
repnz
loope
cmp
icebp
dec
(bad)
adc
test
push
add
and
rol
ret
fbstp
lods
mov
dec
push
inc
stc
or
dec
jl
pop
repz
(bad)
dec
jae
fpatan
aad
jnp
xchg
(bad)
out
(bad)
fldenv
cmp
loop
and
sbb
retf
push
bound
dec
les
inc
sub
mov
outs
(bad)
test
push
jmp
(bad)
add
cmp
sbb
sub
jae
jg
push
inc
jmp
fcomi
cmc
add
mov
imul
push
mov
push
jnp
scas
inc
(bad)
into
pop
test
int
sbb
dec
mov
test
push
js
or
jmp
sbb
push
stos
call
mov
out
jge
mov
adc
and
fcom
cmp
stc
pop
fiadd
xchg
xchg
mov
dec
add
ja
shl
jl
mov
sub
inc
cmp
fstp
dec
(bad)
movs
imul
inc
jbe
sub
cld
mov
iret
bound
cmp
pop
inc
iret
cmp
push
pop
sub
data16
and
addr16
xor
inc
mov
jmp
cdq
pop
nop
sahf
cld
push
jb
inc
test
pop
test
iret
in
mov
dec
push
mov
dec
xchg
js
push
sub
popf
shl
arpl
jb
inc
cmp
jnp
call
cmp
test
jnp
cmp
stos
and
push
cmp
das
loopne
or
sub
les
push
dec
loop
mov
mov
push
mov
mov
push
sub
cld
push
test
xor
pop
add
add
sbb
out
cmp
mov
pop
and
add
(bad)
mov
and
in
ret
pushf
and
cli
mov
stos
sub
mov
ins
dec
inc
xchg
ins
in
sbb
and
mov
sub
sub
adc
bswap
sub
inc
iret
jbe
in
ror
jns
push
pop
stos
movs
push
mov
or
leave
and
call
fdiv
sub
jmp
pop
mov
push
push
out
jae
daa
add
inc
jae
ret
add
cmp
dec
inc
cmp
je
mov
add
inc
push
int
imul
(bad)
sar
test
push
outs
sub
nop
dec
and
adc
pop
jge
out
mov
popa
movs
dec
adc
cmp
push
inc
popa
pop
hlt
adc
ins
jg
dec
lods
mov
fs
aas
or
idiv
sub
es
mov
or
loope
jne
jg
fsub
or
cmp
dec
xchg
in
pop
adc
je
(bad)
in
or
push
dec
sar
repz
mov
add
xlat
stc
fidiv
scas
xor
test
or
sbb
or
mov
pop
push
adc
cmps
mov
repz
lods
jecxz
dec
jg
jecxz
(bad)
hlt
pop
(bad)
fidivr
std
in
dec
stos
or
ds
dec
enter
jbe
ret
and
mov
out
fcomp
imul
in
ins
dec
jmp
push
xor
cmp
jg
add
(bad)
cld
inc
ss
movs
xor
adc
fbstp
push
nop
in
jno
mov
loop
adc
shl
icebp
clc
dec
std
mov
and
imul
pushf
and
hlt
pop
lahf
cmp
mov
cdq
xor
mov
jmp
jg
adc
mov
or
(bad)
sub
cmps
xchg
(bad)
mul
scas
div
xchg
popf
dec
repnz
(bad)
loope
or
sub
jp
pop
pop
cmp
pop
mov
sub
aad
mov
stos
ds
xchg
in
adc
aas
xlat
adc
cld
mov
addr16
sbb
jno
frstor
fwait
ret
inc
div
cmp
lock
sbb
das
dec
sub
mov
jns
mov
and
aad
push
pop
popf
pop
fs
inc
sbb
test
xchg
inc
fs
xor
arpl
inc
lahf
in
mov
jne
je
dec
mov
popa
pop
mov
test
test
jg
dec
mov
or
loopne
xchg
mov
xor
add
shl
mov
adc
inc
dec
push
and
fs
sar
iret
cmp
push
push
jmp
out
cld
sbb
xor
test
movs
lock
out
mov
sub
mov
pop
mov
xor
popf
rol
idiv
iret
mov
aad
dec
vpsubusw
mov
(bad)
ss
push
pushf
cli
cmps
sbb
mov
movs
hlt
outs
in
jb
jmp
imul
pop
inc
and
pop
dec
cli
dec
ror
(bad)
pop
cmp
xchg
mov
dec
icebp
in
outs
add
push
test
rcl
outs
inc
xchg
mov
js
mov
mov
(bad)
jmp
loope
(bad)
mov
test
or
pop
int
xor
jg
icebp
inc
xlat
cld
sbb
mov
xor
mov
push
ins
cdq
mov
sub
cmp
cmp
and
outs
cmp
mov
in
hsubpd
and
mov
call
push
sar
scas
jmp
sub
imul
fdiv
pop
adc
dec
sbb
icebp
adc
dec
fsub
repnz
mov
xchg
in
fsubr
sbb
lahf
cmp
mov
add
xchg
mov
(bad)
cli
lock
dec
adc
test
xchg
mov
dec
ficomp
ds
dec
rcr
push
cmp
push
ja
icebp
pop
mov
add
popa
in
jecxz
in
fwait
sub
scas
lods
xor
and
mov
sbb
xor
xor
scas
pop
dec
aad
aas
sub
(bad)
jl
iret
in
shr
jge
lds
and
add
shl
push
cli
aaa
mov
sub
push
loope
fdiv
add
test
imul
mov
retf
test
mov
or
sbb
lods
cdq
or
pop
lahf
bound
push
(bad)
mov
int3
inc
and
jb
idiv
sbb
in
and
sti
int3
enter
test
jnp
jp
jge
loop
dec
add
mov
jle
push
fs
cmc
or
leave
xor
mov
jb
shl
push
nop
cwde
fsubp
fadd
pop
outs
lds
into
mov
(bad)
lahf
or
das
stos
add
push
jnp
xchg
loope
inc
xor
sub
mov
shl
jge
jp
jno
popf
push
xor
das
lods
jae
mov
fimul
cmp
ja
loop
neg
retf
les
mov
and
inc
adc
push
adc
stos
push
adc
aaa
retf
cmp
ins
dec
mov
xchg
lods
mov
adc
jge
iret
push
ja
outs
cld
movs
das
push
(bad)
int
aaa
adc
out
pop
inc
mov
push
push
enter
and
cmps
adc
sti
in
or
int3
sub
mov
stos
adc
and
jmp
xlat
das
int3
pop
arpl
jge
bound
rcr
xchg
lock
ret
cli
ror
lock
mov
fisubr
clc
lods
dec
lock
mov
xor
xchg
sub
mov
jo
dec
stc
retf
mov
mov
bound
pop
stc
cmps
neg
in
pop
adc
inc
retf
adc
jo
mov
in
iret
push
fsub
jge
lock
nop
fbld
test
fimul
(bad)
stos
xor
jp
or
xchg
in
mov
mov
push
cmp
int3
cmp
mov
pop
and
mov
jbe
dec
push
sbb
mov
mov
mov
in
cs
fdiv
mov
mov
adc
shl
loopne
mov
mov
cmp
fnstsw
cmp
sub
sub
adc
rep
jae
es
(bad)
cmp
stos
sahf
bound
fnstsw
fldl2e
lahf
out
adc
mov
imul
add
xchg
fcomip
xchg
cmp
push
inc
xor
or
mov
daa
sbb
mov
adc
mov
xor
pop
cmps
aaa
rcl
mov
adc
cwde
push
sbb
and
add
dec
fwait
mov
xor
pop
int
dec
mov
dec
mov
xor
ss
xchg
mov
xor
imul
inc
adc
inc
jle
xor
pop
fld
add
cmp
leave
lods
enter
or
rol
into
dec
sbb
sbb
test
dec
mov
jne
sahf
hlt
sub
rcl
retf
pop
aaa
shr
ja
jb
push
xor
dec
cmp
test
inc
dec
mov
ins
ret
jno
(bad)
hlt
ret
adc
sbb
std
hlt
dec
xchg
inc
mov
imul
dec
not
add
jmp
sbb
mov
rcl
call
out
sbb
das
pop
scas
dec
fistp
add
mov
dec
cmp
jae
mov
jge
inc
cmp
inc
shr
jmp
sub
jns
es
adc
push
ins
fstp
ja
xor
mov
cmp
(bad)
in
ins
les
or
pop
mov
mov
loope
mov
movs
or
pusha
rcl
and
test
pop
jp
aas
jp
xor
xchg
aas
pop
aad
xchg
push
js
call
push
push
xchg
dec
in
mov
and
push
test
test
lds
push
mov
in
xchg
ins
sub
(bad)
xor
pushf
fcmovnb
sbb
(bad)
sub
adc
shr
jle
xchg
popa
push
into
and
adc
cmp
(bad)
call
mov
pop
push
or
mov
xor
mov
mov
jnp
leave
xor
xor
ja
sbb
cmp
ds
(bad)
in
xchg
stos
popa
mov
imul
push
test
push
(bad)
(bad)
icebp
pop
movs
fcomp
or
sbb
sti
in
(bad)
cmp
adc
dec
jle
sub
sar
mov
xlat
lods
lahf
bound
push
sub
or
fnsave
imul
test
ss
rcl
or
dec
in
adc
in
out
cmp
jnp
xchg
div
dec
and
imul
cmp
sbb
cmps
jmp
fnstcw
jp
outs
or
mov
xor
cs
sub
inc
call
sbb
aas
jb
jl
shl
jae
or
aam
shr
popa
adc
loopne
stos
adc
push
ss
out
inc
icebp
and
push
mov
mov
out
jno
dec
mov
sti
lods
mov
mov
std
retf
loop
push
sbb
pop
xchg
sbb
mov
cmp
stos
arpl
add
xchg
in
out
pop
int
out
jl
push
adc
in
pushf
jl
xchg
mov
rcl
into
(bad)
jae
lahf
das
out
lock
or
fwait
jl
test
outs
aaa
fmul
mov
push
ss
xor
(bad)
aad
jmp
data16
pop
repz
mov
mov
jbe
icebp
adc
aam
xchg
jns
leave
out
clc
jne
imul
shl
rol
(bad)
push
adc
test
mov
or
shl
retf
retf
scas
imul
pop
(bad)
push
push
mov
not
out
cwde
xor
outs
jp
fisttp
and
dec
jp
mov
cmp
add
test
ret
inc
mov
add
sub
adc
ret
jl
nop
es
adc
jns
xchg
xchg
or
sbb
stos
js
cli
je
fst
loop
cmp
add
adc
ins
repnz
lods
cmp
mov
cmp
cmps
mov
lock
mov
jns
scas
sbb
cmps
and
dec
cwde
inc
pusha
imul
retf
mov
data16
loope
shl
rcl
mov
push
jl
lds
sti
sahf
es
imul
mov
mov
aad
in
or
mov
pop
sub
test
aaa
mov
(bad)
fyl2xp1
cwde
jo
call
inc
cmp
retf
cmps
adc
pop
ins
mov
stos
not
pusha
fcmovnu
fld
sub
aad
cmps
inc
dec
xor
mov
mov
xor
pop
mov
jbe
test
(bad)
jbe
jecxz
outs
mov
lea
mov
mov
arpl
sbb
mov
pushf
rcr
cld
jne
loopne
leave
or
cld
xchg
int3
jl
pop
sub
sub
push
xor
xchg
adc
pop
std
mov
arpl
cmp
dec
sbb
pop
inc
ret
cli
mov
sar
jne
jne
inc
xchg
adc
and
mov
adc
add
push
loop
pop
add
sub
mov
je
add
xor
call
or
test
mov
sbb
ins
mov
jge
(bad)
adc
and
or
(bad)
and
sub
mov
popf
dec
push
pop
xor
cmp
mov
sahf
jae
lods
and
stc
mov
cmp
imul
jecxz
sbb
nop
dec
inc
sbb
mov
inc
cmp
stos
lahf
sbb
push
lahf
adc
pop
jo
sub
inc
jmp
shr
add
adc
and
jl
cmp
add
imul
out
cmps
sti
pop
shl
cmp
lods
and
stos
nop
or
xchg
inc
adc
sbb
add
dec
mov
test
mov
push
sbb
dec
jns
or
mov
jb
mov
or
sbb
cmp
mov
mov
sbb
mov
xchg
push
dec
outs
inc
jmp
test
jle
mov
test
repz
push
mov
movs
jmp
adc
xchg
cdq
push
bound
fist
call
stc
loop
daa
not
mov
inc
out
and
jbe
inc
loop
push
jl
ins
push
xor
sbb
stos
pusha
push
and
push
stc
cmp
mov
nop
inc
mov
popf
or
aaa
sbb
cmps
push
pop
mov
fsub
sar
inc
mov
and
pop
jecxz
jg
packsswb
ret
daa
outs
shl
sub
repnz
jbe
push
mov
xor
inc
sar
dec
mov
pop
stos
push
stc
adc
adc
and
pop
push
jmp
retf
call
fstp
addr16
mov
cdq
cs
pop
icebp
repnz
pop
push
cdq
ja
inc
push
jp
sbb
mov
xlat
mov
aam
jnp
dec
imul
add
mov
(bad)
xor
sbb
(bad)
jg
ins
fwait
dec
mov
in
xor
mul
sbb
(bad)
jae
arpl
mov
cmp
mov
stc
loop
fdiv
ret
or
fs
std
ficomp
pop
mov
jno
(bad)
jge
mov
push
ret
dec
mov
pop
dec
in
push
sbb
jl
and
in
xlat
out
js
stos
cmp
mov
lock
xor
shl
sbb
pop
xchg
dec
push
das
jb
loope
stc
(bad)
data16
sahf
sub
enter
sbb
call
jmp
pop
shl
in
jl
pop
cmp
dec
or
cli
std
clc
clc
fst
pop
jne
or
mov
add
int3
jbe
mov
add
stc
ins
cmps
outs
or
cmps
icebp
pop
imul
dec
test
daa
or
pop
lahf
jmp
mov
jecxz
adc
push
xchg
jne
add
pop
mov
in
popf
cmp
xlat
jae
jmp
cld
sub
adc
ds
mov
dec
push
fsub
outs
inc
cmp
mov
scas
imul
push
cmc
and
mov
out
push
je
jl
mov
add
cmp
jne
cs
sbb
int3
xchg
and
sub
xchg
retf
jae
aad
xor
sbb
or
add
addr16
enter
repnz
inc
ja
lahf
inc
jl
ror
into
jmp
cld
std
pushf
inc
leave
adc
push
pop
and
arpl
add
xchg
je
fisttp
stc
rdpmc
add
push
mov
and
or
call
ret
and
inc
les
or
or
icebp
fwait
mov
jbe
clc
mov
mov
adc
xchg
xchg
add
mov
dec
fwait
or
push
xlat
mov
add
pop
jle
xchg
aam
mov
in
dec
adc
cmps
aad
outs
leave
cmp
call
adc
xor
jg
jne
xor
(bad)
(bad)
sbb
pop
xchg
add
mov
test
outs
idiv
rep
xor
push
jae
or
lock
or
cs
xor
pusha
xchg
fidivr
iret
and
push
jae
pop
fisttp
push
retf
pop
sub
sbb
xchg
lock
pop
ja
fcmove
pushf
push
imul
cld
push
popw
jb
and
mov
xor
aad
pop
pop
cmps
xchg
or
gs
add
stos
mov
jae
cmp
cmps
inc
test
in
mov
mov
pop
fadd
and
dec
jle
cdq
mov
xchg
and
inc
cmps
dec
lods
cmp
adc
gs
and
shl
mov
dec
mov
inc
mov
sbb
cmp
ret
push
mov
int3
call
cmp
mov
je
xchg
or
jne
bsf
ds
cmps
icebp
cmp
adc
mov
cs
mov
push
fld
sbb
xchg
pushf
add
ror
adc
push
and
adc
adc
xchg
stos
mov
mov
push
in
jb
sbb
sbb
and
sbb
push
jp
pop
cwde
movs
ror
es
push
mov
ret
cmp
pop
jne
fidiv
dec
nop
push
es
pushf
and
mov
cmp
push
out
xchg
cmp
aaa
test
lahf
cmps
xchg
retf
ror
test
jnp
push
and
pop
out
inc
xor
jmp
bswap
xchg
cs
dec
adc
cmp
xchg
ja
fist
(bad)
mov
div
shl
push
mov
mov
sub
jb
pop
repnz
inc
mov
ss
inc
cmps
adc
or
inc
cli
movs
and
call
(bad)
aam
ins
push
fnstsw
loop
or
shr
sbb
(bad)
jmp
add
test
push
add
mov
sbb
jae
fs
cmps
mov
sub
dec
lock
test
shr
test
or
xlat
shl
mov
sub
adc
scas
push
gs
cwde
jns
cmp
and
lods
lds
mov
add
sub
xchg
aad
std
stos
jo
mov
stc
inc
push
(bad)
fisttp
cwde
cwde
fwait
cs
sbb
mov
arpl
loope
loopne
jnp
lahf
or
push
in
mov
jp
rcr
mov
idiv
inc
push
pop
loope
pop
cld
lahf
xchg
xchg
loop
mov
dec
sub
out
adc
(bad)
xchg
pop
mov
dec
aas
daa
jbe
cmp
in
das
jns
or
xor
int3
nop
ja
xor
ins
xchg
test
adc
and
movs
xor
out
xchg
adc
jbe
inc
scas
push
xor
lds
dec
jo
stos
push
cmp
into
pop
aas
dec
inc
rcl
lahf
xchg
int3
aaa
mov
fcmovbe
pop
lds
ja
mov
push
in
std
xor
loopne
(bad)
dec
inc
mov
hlt
or
sbb
or
add
or
mov
xor
in
cli
sub
ins
scas
leave
jae
popf
aad
sar
pop
xor
ja
(bad)
or
fild
cmp
pop
jns
fldcw
mov
(bad)
scas
lods
push
in
(bad)
in
mov
mov
neg
and
stos
sub
push
movs
sub
mov
ja
cwde
fmul
mov
inc
mov
fidiv
lock
mov
js
popf
push
mov
sub
jmp
xchg
mov
cmps
dec
pop
std
xchg
xchg
loope
push
fisttp
xchg
fst
je
test
mov
sub
stos
push
es
shr
lds
inc
iret
cmc
out
ins
addr16
add
push
arpl
jnp
out
cmp
out
add
mov
mov
data16
mov
fnsave
jmp
jne
mov
mov
adc
cwde
fwait
bswap
jne
(bad)
in
iret
lock
push
or
xchg
cmp
leave
cmp
fs
outs
mov
jmp
gs
push
or
adc
and
loopne
sub
aas
(bad)
mov
add
mov
loop
in
out
xor
shl
cs
cld
out
adc
mov
cdq
test
outs
mov
adc
aaa
lock
shl
jg
call
sar
popa
cwde
inc
cmp
add
and
stc
in
inc
cmp
rol
cmp
sti
(bad)
pop
and
jp
sahf
rol
inc
js
test
iret
sub
pop
jmp
das
dec
cwde
jecxz
push
test
xor
test
adc
repnz
push
stos
cmps
movs
stc
xor
int3
ffreep
or
test
sar
xchg
and
hlt
ss
loopne
psubw
push
push
loop
sub
push
inc
dec
xor
dec
outs
mov
retf
push
or
sub
in
out
fmul
fld
mov
and
clc
inc
sbb
nop
inc
clc
sub
rcl
aad
push
call
loope
addr16
int
scas
xchg
cmp
add
sub
aaa
daa
xchg
mov
add
fadd
call
int
fiadd
jb
outs
mov
push
neg
test
xchg
retf
sbb
out
push
inc
add
shr
clc
xor
ins
leave
std
jg
mov
outs
sub
in
rol
and
lods
pop
mov
mov
neg
and
xor
cmps
mov
sub
and
push
and
in
jecxz
cmp
loop
mov
cmps
retf
jl
cmp
cmp
push
outs
test
hlt
retf
dec
cmps
xchg
lds
out
jp
sti
scas
sub
mov
xor
sbb
test
mov
jns
mov
sub
inc
ds
inc
pop
inc
push
pinsrw
mul
(bad)
adc
ss
sub
sub
cmp
and
mov
add
cmp
fwait
jo
sbb
dec
movs
mov
pop
cmps
sub
repnz
ficomp
and
mov
in
xor
daa
mov
push
mov
xchg
imul
cwde
mov
inc
dec
iret
loop
jecxz
mov
int
add
xor
leave
xor
sub
mov
inc
sbb
dec
or
test
mov
xor
out
out
add
xor
xor
jns
dec
(bad)
push
xchg
stc
mov
gs
sbb
lods
sti
mul
fdivr
add
outs
(bad)
outs
jne
inc
fild
mov
jb
add
lea
mov
shl
sub
push
repz
call
mov
push
in
dec
push
jecxz
dec
sub
lock
push
(bad)
sbb
int3
push
retf
inc
test
fs
jmp
mov
shl
fidivr
sbb
mov
xor
inc
adc
lock
loop
ins
mov
adc
inc
hlt
std
arpl
inc
ficomp
push
shl
pop
jnp
outs
pop
test
sbb
imul
pop
add
stos
(bad)
adc
mov
jge
retf
xor
out
push
pop
(bad)
mov
sti
sub
lock
arpl
loope
test
sahf
sahf
retf
icebp
sbb
sub
(bad)
addr16
dec
sbb
(bad)
in
jb
push
fadd
arpl
xor
jne
pop
dec
icebp
push
es
or
jg
mov
inc
push
or
mov
jl
xchg
adc
push
push
sbb
dec
dec
jp
arpl
ja
mov
mov
shr
or
mov
std
adc
sbb
enter
nop
js
inc
je
push
pop
out
rcr
in
test
sbb
outs
cli
imul
cmc
cmp
shr
js
xor
fistp
xchg
aas
call
pop
add
cmp
das
sahf
inc
bnd
xor
loopne
pop
icebp
in
clc
rol
int
out
enter
inc
stc
mov
and
sbb
cdq
add
test
jmp
inc
stos
nop
enter
jae
loopne
dec
xchg
test
enter
cs
test
in
pop
repnz
push
popa
adc
lods
xor
ins
jle
inc
add
popa
cld
and
aaa
enter
add
call
in
lock
jo
in
adc
fstp
pop
and
lods
xor
popf
les
pop
(bad)
enter
mov
mov
push
pop
xchg
cmps
mov
xchg
sti
mov
pusha
popf
stc
test
jo
push
aam
cmp
and
and
inc
sbb
pop
mov
in
out
push
enter
mov
mov
pop
jge
push
ja
bound
popf
movs
pop
test
and
cdq
adc
loopne
outs
jbe
adc
mov
jnp
(bad)
mov
test
or
cmp
xchg
pop
mov
cdq
add
or
or
inc
xchg
pop
cmp
out
retf
sbb
add
test
push
stos
mov
ret
clc
or
icebp
(bad)
pop
inc
out
inc
shr
sub
ficomp
xor
adc
(bad)
mov
mov
aas
into
pop
jno
fistp
fs
lahf
jmp
push
push
outs
inc
sub
mov
xchg
sti
movs
pop
dec
push
in
sub
cmp
push
mov
or
cmp
adc
hlt
xchg
arpl
int3
imul
mov
pop
pop
dec
sti
sub
xchg
mov
jecxz
xlat
mov
or
call
lods
and
add
out
sub
adc
int
ss
xchg
xchg
mov
or
call
fs
ins
mov
retf
jmp
imul
cli
popa
add
icebp
fucomip
and
jbe
cmp
jb
lods
fstp
popa
mov
rcl
push
adc
mov
ss
outs
dec
sbb
in
fnstenv
fisubr
sahf
bound
in
pop
sahf
stos
aas
xchg
xchg
sahf
ror
push
fst
adc
gs
jnp
pop
and
pop
pop
mov
add
test
xor
imul
and
xor
sbb
push
shr
push
test
xchg
jle
(bad)
and
mov
sbb
dec
sbb
pop
daa
fstp
mov
arpl
aam
repnz
sti
sbb
leave
mov
jne
push
in
pop
repz
jp
ss
or
lea
(bad)
rcr
stos
xchg
popf
mov
xor
mov
les
inc
ins
sti
mov
repnz
pop
jo
jns
sub
fucom
(bad)
cs
out
jge
shl
psraw
sbb
cmp
push
int
cli
adc
cdq
ret
cld
rol
xor
mov
dec
mov
aam
cmp
les
sub
adc
shl
cmp
mov
call
rcl
and
dec
aas
or
push
sub
mov
cmp
dec
stos
ja
or
pop
dec
push
shl
jg
movs
popa
or
mov
mov
add
je
rcl
xchg
jno
jnp
shl
push
inc
pop
clc
movs
mov
and
mov
add
loop
sbb
pop
loope
mov
and
pop
mov
sbb
push
(bad)
cmp
(bad)
aaa
mov
pop
push
rcl
addr16
cmp
in
push
jge
mov
dec
jo
dec
push
cmps
scas
out
not
xchg
mov
shr
movs
hlt
pop
adc
jae
fstp
imul
mov
lock
cs
and
pusha
imul
js
inc
icebp
sbb
inc
pop
jp
sbb
push
xor
jbe
dec
repz
adc
xchg
movs
jecxz
ds
ss
rcr
dec
pop
sahf
lods
push
or
ss
and
add
jmp
loopne
pushf
and
popa
dec
icebp
add
mov
ins
mov
pop
mov
iret
add
sub
repnz
(bad)
inc
ja
sbb
add
mov
adc
adc
scas
imul
(bad)
mov
retf
stos
sbb
iret
pop
add
xor
push
mov
push
lahf
sub
mov
jmp
cs
popf
mov
xlat
inc
jge
jnp
xor
push
sub
fwait
fwait
push
jl
xchg
sbb
mov
sahf
inc
pop
daa
push
pop
cmp
imul
rcr
xchg
icebp
imul
and
or
jmp
iret
inc
cmp
sub
es
jl
xlat
int
dec
cmp
(bad)
stos
into
cmp
js
ret
rcr
sbb
xor
pop
sub
dec
jmp
dec
movs
shl
(bad)
and
sub
pop
xor
sbb
js
xchg
es
add
push
or
retf
sbb
(bad)
sbb
jno
and
gs
dec
xor
sbb
rol
adc
pop
sbb
xlat
cmps
ins
sar
test
mov
pusha
fwait
addr16
sub
push
rcl
xchg
addr16
fist
mov
lods
xchg
push
jns
sbb
fwait
movs
daa
into
popa
(bad)
fdivr
hlt
scas
outs
xor
es
jb
jnp
or
mov
adc
mov
sub
cld
push
adc
lahf
pop
sub
(bad)
icebp
push
sbb
ins
fstp
stos
outs
repnz
mov
es
iret
mov
xchg
pop
cmps
stos
jae
xchg
sub
lahf
sub
inc
add
push
dec
and
and
(bad)
sbb
pop
cmps
cmps
mov
daa
repnz
pop
xchg
inc
sti
jp
pop
fidivr
popa
test
call
adc
fmul
sahf
data16
stc
fstp
cmp
sahf
addr16
adc
mov
xchg
aaa
stc
jnp
sbb
add
add
fisttp
add
push
dec
inc
push
(bad)
xchg
mov
mov
test
mov
test
add
mov
imul
cmp
push
add
movs
inc
jno
mov
mov
iret
sub
aaa
loope
retf
lock
fisttp
or
push
push
pop
adc
movs
and
lahf
xor
popa
int3
mov
add
jb
jb
enter
and
add
aas
ss
fwait
inc
fistp
dec
rcr
in
daa
test
cs
sbb
fidivr
in
xchg
inc
(bad)
jnp
mov
push
cmp
(bad)
jp
bound
repnz
fisttp
push
loope
lahf
aad
(bad)
in
xchg
cmp
jo
and
cmp
add
add
fstp
adc
inc
mov
lods
adc
mov
stc
or
shl
pop
xchg
xchg
adc
mov
cdq
cmp
jl
es
jno
xlat
adc
cld
xchg
jnp
jmp
mov
pop
xor
sti
ds
outs
neg
mov
test
jb
cld
dec
cs
jnp
les
sbb
xchg
lock
mov
inc
and
add
daa
out
sub
push
movs
dec
inc
and
and
push
fild
jno
call
push
ss
and
jnp
mov
les
rcl
retf
jl
je
adc
jle
(bad)
mov
jge
fs
dec
fwait
cmp
jae
ins
mov
movs
(bad)
clc
push
push
xchg
lods
mov
mov
adc
cld
jmp
cmc
jno
adc
inc
push
aas
xor
mov
icebp
retf
jecxz
sub
jle
ret
jnp
addr16
jns
pushf
mov
rcr
sbb
sub
jle
fld
inc
shl
popf
bound
ret
fstp
and
dec
dec
pop
(bad)
mov
sbb
data16
and
fimul
mov
jmp
clc
dec
(bad)
ret
mov
inc
xchg
pop
inc
jmp
outs
or
lock
repnz
std
nop
es
in
iret
mov
push
repnz
cmp
and
mov
and
(bad)
mov
pusha
aad
rcr
out
mov
inc
sbb
add
loope
mov
into
mov
in
sbb
fldcw
jae
or
mov
push
and
or
mov
fcomp
adc
jnp
push
daa
shl
push
stos
fisttp
mov
xchg
frstor
shl
sbb
or
ret
ficom
imul
fwait
jb
stos
lods
idiv
mov
pop
or
and
mov
jmp
loop
adc
icebp
mov
test
inc
or
sti
jp
loopne
cwde
fucomp
mov
push
and
or
jge
in
or
adc
data16
or
adc
in
cmp
aam
add
or
(bad)
or
dec
stos
(bad)
xchg
mov
mov
sub
mov
jae
xor
cmc
int
inc
out
xor
pinsrw
ret
lods
and
ror
test
sahf
xor
pop
(bad)
add
mov
dec
or
loope
icebp
cs
mov
mov
push
loop
xchg
mov
retf
mov
sbb
out
or
cmp
dec
jmp
(bad)
and
sbb
push
fist
mov
jge
cmp
leave
inc
or
pop
sub
aas
shl
lahf
clc
fidivr
sbb
imul
push
es
es
jae
add
jmp
call
out
movs
loopne
test
mov
gs
add
lods
pop
dec
inc
sbb
push
pop
mov
cld
xchg
cs
jae
and
push
out
sar
xchg
pop
repnz
(bad)
xlat
js
pop
cmp
test
jge
sub
mov
dec
push
pop
sbb
hlt
daa
adc
xchg
daa
shr
jo
mov
inc
scas
dec
xor
bound
movs
and
rol
mov
mov
enter
xchg
pop
and
arpl
or
jle
lahf
std
arpl
rcr
or
les
jbe
dec
int
pop
mov
std
push
xchg
add
xor
stos
mov
jmp
mov
mov
into
sar
sar
mov
cs
sub
dec
imul
mov
bound
fdivr
xor
cmp
cld
jmp
adc
test
mov
fild
push
das
bound
loop
dec
sub
mov
jnp
mov
pop
sub
dec
bound
into
jmp
cs
shr
mov
aas
(bad)
ret
jae
lods
adc
jp
sub
pop
pop
loopne
inc
sbb
std
outs
add
aam
leave
cmps
add
adc
data16
cmps
adc
sti
retf
sbb
mov
mov
dec
(bad)
adc
rcl
xor
out
imul
aad
xchg
jne
call
or
into
pop
mov
jg
in
jnp
inc
popa
mov
dec
nop
sbb
mov
dec
enter
test
test
arpl
xchg
cmp
cmc
dec
out
sti
jl
pop
imul
jp
clc
es
(bad)
jnp
leave
cmc
lods
mov
addr16
mov
xchg
and
ret
cld
or
add
jmp
sbb
imul
es
or
in
jo
ins
inc
mov
popf
inc
dec
dec
sub
sub
lods
pop
loop
out
shl
add
(bad)
jle
xor
mov
mov
cmc
out
or
je
clc
push
pop
add
mov
call
retf
push
and
dec
jno
cs
aaa
mov
aas
cmp
cmp
in
cmp
sbb
mov
(bad)
mov
add
mov
(bad)
mov
ds
xor
or
xor
cmps
inc
adc
loope
outs
fwait
(bad)
aad
test
push
cmps
jns
push
mov
inc
test
popa
sbb
or
aad
push
xor
push
fsubrp
xchg
inc
aaa
pop
xchg
and
add
xlat
test
and
push
xor
ja
ins
mov
mov
lds
mov
push
sub
test
je
movs
add
or
ins
repz
cmp
jns
inc
pop
div
jne
addr16
sub
je
push
scas
clc
push
or
mov
(bad)
fstp
jp
cwde
jb
call
cmp
mov
jnp
not
sub
jno
and
or
cmp
sbb
jle
(bad)
data16
aaa
xchg
(bad)
sub
cli
daa
(bad)
out
ins
jmp
call
jle
cmp
add
out
push
outs
sub
pop
loop
xchg
xor
pop
cmp
shl
cmp
mov
xchg
rol
jp
inc
test
and
out
push
xor
jge
(bad)
dec
xchg
add
mov
int3
jecxz
cwde
in
fadd
pop
sub
cmp
lahf
add
mov
std
mul
mov
xor
cmp
test
cdq
jge
mov
jnp
ja
pop
cdq
pop
sbb
adc
pop
mov
aad
sub
inc
mov
daa
fisttp
dec
repnz
cdq
cmp
inc
xor
aam
loopne
mov
je
out
add
pusha
push
mov
mov
pop
xchg
mov
pusha
xchg
fist
psllw
inc
fcom
test
(bad)
mov
and
cmp
out
(bad)
sub
or
stos
js
xchg
mov
fidiv
cmps
enter
icebp
xchg
cmp
test
jo
and
es
nop
jne
mov
jp
in
jl
cdq
fnsave
sub
or
xor
call
movs
retf
je
in
js
pop
mov
daa
dec
test
cdq
movs
mov
pop
jbe
mov
dec
jns
xchg
jl
cmp
mov
add
jg
mov
or
mov
dec
jbe
imul
jg
adc
mov
push
mov
pop
aam
pop
dec
imul
js
xchg
push
sbb
xchg
jns
test
mov
mov
js
xor
idiv
(bad)
xor
fst
out
push
mov
imul
shl
ret
cmps
sub
inc
call
dec
cmp
mov
mov
fist
push
fs
mov
push
inc
jne
add
in
je
sub
jmp
je
out
stc
jb
cmp
xchg
dec
add
xor
shl
xchg
push
jns
xchg
(bad)
int
retf
xor
add
daa
dec
popf
sub
test
call
mov
inc
push
cmc
test
mov
xchg
push
xchg
gs
add
mov
in
jae
mov
scas
inc
xchg
sub
stos
mov
adc
test
es
lods
xor
int3
dec
xchg
ja
ror
ucomiss
jmp
mov
mov
fcomp
sbb
in
sub
ds
sbb
mov
mov
cs
lock
cld
stos
cs
dec
fidivr
adc
xor
jmp
lds
xor
(bad)
mov
inc
out
inc
movs
push
xlat
lock
or
lds
ror
fdiv
aad
mov
xor
jo
pusha
xor
or
adc
push
mov
sub
cmp
mov
out
mov
es
loopne
inc
addr16
inc
jae
xchg
xchg
xlat
ror
ss
lock
test
lds
and
push
call
(bad)
push
rcl
call
jns
cmp
pop
repz
lahf
dec
mov
pop
cmps
pop
ja
or
cmps
inc
pop
out
add
scas
mul
pop
add
out
and
xchg
dec
push
popf
jnp
mov
cmp
or
push
pop
push
lds
test
enter
jb
aam
mov
ds
sti
mov
and
out
mov
fisubr
(bad)
xchg
mov
pop
imul
adc
outs
cwde
(bad)
inc
dec
call
inc
mov
mov
xchg
jbe
sbb
jno
std
aas
enter
mov
ret
gs
cmp
test
inc
push
jecxz
mov
mov
xchg
call
das
out
shl
dec
iret
shl
add
xchg
adc
les
pusha
pop
bound
in
in
mov
push
xchg
jae
out
add
mov
imul
addr16
hlt
ficomp
cs
sbb
push
popa
sti
adc
mov
sbb
sbb
xor
mov
loope
mov
call
and
sbb
and
aas
pop
dec
jnp
lea
mov
out
add
lods
pushf
jnp
mov
iret
xor
int3
jae
dec
cmp
(bad)
das
jge
xchg
push
add
mov
sbb
addr16
cld
inc
cmp
fnstenv
cmp
repnz
inc
daa
add
adc
jp
push
lods
dec
test
lods
or
add
pop
(bad)
fnstsw
in
adc
push
js
add
or
in
arpl
imul
and
rcl
push
sbb
daa
push
and
push
inc
shl
test
mov
scas
aas
outs
xor
idiv
into
jmp
fstp
and
ins
test
out
loope
inc
add
aas
outs
pop
out
sbb
lock
cdq
pop
outs
or
xchg
mov
push
std
mov
sahf
hlt
inc
aad
xor
sbb
push
(bad)
jecxz
or
jmp
aas
push
outs
mov
mov
cdq
das
pushf
or
int3
stc
jge
adc
loopne
and
push
adc
push
push
lods
imul
fwait
push
test
gs
mov
jmp
cmp
push
mov
xor
jge
out
pop
scas
cmp
xchg
scas
loopne
mov
inc
hlt
sbb
mov
mov
adc
and
cli
push
leave
xor
call
push
outs
mov
dec
jno
hlt
stc
dec
outs
sub
push
(bad)
pusha
aam
test
mov
outs
call
repnz
push
out
mov
jbe
mov
imul
(bad)
sub
push
push
push
mov
jmp
enter
into
ins
push
icebp
fs
sub
repnz
(bad)
fs
cmp
fbld
push
inc
mov
cmp
lahf
stc
cmps
dec
or
aaa
bound
xor
inc
adc
fisubr
xchg
inc
ds
dec
sub
lods
bound
dec
xchg
movs
push
add
jae
stos
retf
idiv
loopne
ins
pushf
jbe
add
jbe
stos
pop
cmp
xchg
xlat
ret
fbld
das
icebp
sub
pop
test
pop
out
(bad)
mov
lds
mov
cmp
mov
add
xchg
retf
mov
mov
jnp
call
and
outs
or
(bad)
movs
stc
pop
mov
hlt
cdq
jp
push
sti
ja
pop
mov
xor
jg
pop
ds
cmp
add
fiadd
mov
cmp
push
dec
in
ss
je
(bad)
icebp
cdq
movs
lahf
scas
mov
add
ror
(bad)
movs
xchg
and
mov
bound
sbb
pop
mov
(bad)
aam
jbe
mov
mov
(bad)
popa
jo
adc
pusha
cmp
in
or
dec
(bad)
in
call
xchg
test
push
fadd
sbb
icebp
int
xor
lahf
adc
mov
fwait
ret
retf
ret
xor
sub
inc
push
lahf
jb
cmps
mov
scas
clc
jo
ins
neg
sti
gs
xchg
or
mov
jmp
xor
cmps
rcr
dec
or
adc
daa
mov
mov
ret
mov
sub
ret
ss
adc
and
mov
(bad)
ror
imul
loop
pop
inc
or
jmp
cmp
je
add
mov
push
xor
jp
mov
std
inc
fidiv
nop
adc
imul
call
test
daa
adc
sbb
ins
and
mov
and
clc
mov
stc
nop
push
sbb
popf
push
(bad)
fcomp
and
add
mov
adc
jmp
push
sbb
into
sub
inc
jne
jle
push
xor
mov
dec
push
pop
and
jg
push
dec
sar
push
push
das
push
mov
loopne
xor
push
in
int3
jns
push
adc
pop
imul
pop
lea
dec
jnp
xchg
jno
adc
adc
nop
scas
ret
xchg
(bad)
xchg
iret
dec
shr
nop
and
out
scas
dec
or
mov
xor
jmp
dec
jbe
rcr
out
bound
jne
popf
shr
lods
(bad)
or
jecxz
aam
aad
fldcw
add
fld
jns
shl
ret
pop
sbb
xchg
mov
test
jmp
xchg
fnstcw
mov
daa
xor
xor
mov
dec
jge
push
jo
(bad)
xchg
pop
add
mov
addr16
(bad)
jle
or
mov
stos
gs
(bad)
mov
enter
or
or
shl
movs
mov
adc
cmps
sahf
mov
pop
inc
inc
sub
sbb
mov
pop
xchg
ficom
enter
shl
mov
xor
adc
cli
sub
xchg
xchg
test
rep
dec
inc
js
push
mov
popf
outs
dec
xchg
mov
retf
sahf
scas
(bad)
pop
mov
sub
aad
lahf
lock
xlat
jo
pusha
mov
mov
sub
push
icebp
xchg
and
xor
and
mov
aam
retf
je
sbb
ss
movs
fldcw
pop
sti
dec
and
call
icebp
sbb
mov
mov
add
inc
and
push
in
enter
mov
retf
sbb
lods
mov
mov
cld
sbb
ja
xchg
pop
jo
fisubr
fadd
adc
sbb
mov
mov
dec
mov
and
cmps
cmp
fstp
push
shl
out
out
pushf
sub
sti
(bad)
pop
ret
fbld
pop
fwait
and
pop
jge
jbe
stos
popf
ins
jno
bound
mov
clc
jmp
pop
lea
loopne
mov
or
lock
enter
fimul
push
inc
mov
hlt
mov
scas
sub
out
sub
pushf
dec
aas
mov
jmp
cmp
(bad)
xchg
popa
fild
dec
sbb
leave
inc
xor
das
cs
mov
cmp
cmps
movs
int3
xor
test
xor
div
mov
pminsw
inc
addr16
jne
jbe
mov
inc
jne
fbld
sar
xor
adc
gs
sub
add
cdq
cdq
sub
imul
cmp
icebp
out
add
stos
inc
jge
jbe
lock
xchg
cdq
or
das
outs
ret
jmp
jns
loop
and
sahf
xor
mov
push
cmp
xchg
cmp
mov
adc
(bad)
scas
jge
hlt
cs
pop
(bad)
push
arpl
mov
dec
pop
std
pop
mov
push
imul
sti
repz
lds
mov
adc
data16
call
icebp
add
push
js
jns
test
std
mov
or
popf
shr
ins
enter
sahf
fstp
or
mov
and
adc
add
ins
movs
pop
test
popa
scas
sbb
pop
jecxz
je
pop
lock
retf
mov
sbb
push
inc
test
popa
lock
adc
bound
in
inc
cmc
fdivr
fwait
outs
sbb
cs
mov
aaa
mov
pop
sbb
cmp
mov
xor
mov
loope
mov
js
and
fucomp
mov
add
push
dec
call
add
ret
stos
push
xor
push
and
test
push
xor
pop
cmc
push
sbb
mov
push
push
arpl
frstor
jg
lahf
fs
xchg
or
jb
(bad)
in
jmp
xor
sbb
out
scas
pop
mov
rcl
jo
push
sub
add
xchg
(bad)
ja
pop
addr16
(bad)
out
ss
mov
xchg
mov
clc
or
gs
add
call
cs
hlt
sub
imul
push
cmp
or
fisubr
mov
clc
arpl
xchg
das
jns
sahf
pushf
(bad)
iret
xor
neg
(bad)
clc
loopne
sbb
or
js
dec
(bad)
sbb
(bad)
(bad)
call
popf
cmp
and
fcmovbe
js
add
push
and
adc
cmps
pop
push
aas
out
pop
lods
ficom
xchg
jnp
out
dec
mov
push
jae
cdq
(bad)
inc
cmc
call
or
fbld
movs
(bad)
enter
scas
hlt
mov
add
dec
(bad)
pop
mov
pop
push
(bad)
or
mov
loopne
ins
cmp
mov
hlt
ret
aam
lods
sub
cli
inc
test
inc
cwde
add
jle
clc
and
mov
cmps
cmp
out
or
sbb
je
xchg
jl
ins
jle
mov
sbb
rcr
pop
addr16
lods
les
mov
in
arpl
ja
fisub
xchg
int
(bad)
imul
sub
call
out
adc
mov
out
dec
and
popf
lods
mov
lods
cmp
dec
xchg
sub
xor
aad
mov
xchg
test
sub
xor
jno
call
xchg
rcr
jne
je
dec
(bad)
xor
and
adc
retf
fcom
dec
sub
push
adc
(bad)
cmp
push
xor
dec
push
mov
pop
sub
lea
cmp
xor
push
(bad)
fs
(bad)
retf
pop
iret
lahf
pop
cdq
loope
mov
push
pop
lahf
sbb
mov
paddq
dec
std
pop
push
aas
push
mov
mov
jmp
jmp
es
in
retf
mov
cdq
out
jnp
fldenv
push
fadd
xor
jg
mov
sbb
xor
adc
aad
sub
scas
push
mov
icebp
fwait
adc
pusha
test
ins
lea
dec
ins
inc
jmp
mov
mov
ins
fld
lock
imul
pushf
mov
mov
mov
test
and
or
mov
add
js
lock
mov
fcom
mov
je
pop
xchg
jae
or
bound
push
adc
stc
fisttp
pop
adc
push
push
sahf
aad
push
xchg
adc
jmp
in
out
sar
dec
jmp
xor
or
or
iret
jae
(bad)
pop
push
dec
sub
add
add
or
scas
cmps
xor
sbb
(bad)
sub
xchg
and
idiv
xchg
movs
adc
sbb
lahf
sub
or
jae
sbb
cdq
fistp
test
test
cmp
sub
jl
test
pop
loopne
leave
or
not
daa
scas
xchg
mov
iret
cs
cmp
pop
mov
dec
xor
pop
mov
xor
inc
dec
mov
adc
ret
(bad)
cmp
mov
aas
(bad)
aas
push
ss
pop
in
mov
mov
lock
leave
mov
jmp
ja
or
ror
xchg
lods
adc
test
pop
push
and
push
sbb
inc
lods
outs
cmp
push
xor
mov
into
push
xlat
imul
add
fstp
test
mul
test
cmp
pop
sub
outs
cli
in
bound
jns
push
ror
mov
test
nop
mul
mov
enter
push
stos
add
mov
xchg
mov
sub
mov
stc
(bad)
stos
je
and
(bad)
ins
fidiv
jno
popf
or
mov
fdiv
adc
in
pop
push
mov
fs
aad
in
inc
mov
cmp
sub
sbb
jle
push
mov
jae
mov
mov
xchg
dec
aaa
loope
sbb
pop
cld
iret
in
pop
fdiv
aad
jl
cmc
add
xor
gs
add
or
std
call
sti
test
fs
xor
or
aam
or
aaa
cmc
jle
add
scas
aam
cmps
sbb
jecxz
ror
inc
adc
jle
add
dec
dec
jne
lds
shl
lods
cmp
int3
add
ss
xor
mov
imul
sbb
psllw
pop
(bad)
ja
aaa
movs
xchg
mov
into
(bad)
cmp
out
cmp
pop
add
sti
fincstp
and
jo
pushf
mov
fdivr
adc
xor
mov
pop
test
aaa
jnp
and
jns
sahf
inc
loopne
sti
push
rol
mov
imul
push
inc
inc
or
ret
mov
cwde
retf
push
shr
dec
mov
mov
loope
cmc
lock
or
test
push
stos
mov
jne
rcl
rol
mov
jb
lahf
xor
cmp
and
icebp
pop
test
xchg
lock
adc
sbb
retf
popa
push
lahf
pop
push
out
lock
mov
adc
push
jecxz
xchg
fisub
popa
jmp
or
fwait
scas
outs
call
dec
icebp
fcomp
(bad)
cmc
adc
adc
fdecstp
xor
popa
mov
jno
loopne
xchg
jo
jmp
scas
fwait
inc
fidivr
adc
arpl
leave
ja
hlt
jl
cmps
mov
test
jge
fild
sahf
test
test
enter
pop
icebp
jmp
cs
ins
psubusb
mov
std
cmp
cmp
sahf
cmp
lahf
mov
xor
imul
mov
sti
cmp
cs
mov
cmc
mov
iret
retf
stos
or
jmp
popf
jmp
test
into
push
sbb
ds
int3
jmp
xlat
cmp
ins
sbb
inc
mov
cli
out
lahf
dec
(bad)
rcl
js
sbb
xchg
dec
fcmovu
arpl
mov
adc
or
lds
and
in
and
out
in
inc
and
jb
push
out
dec
fwait
in
or
mul
add
sbb
das
pop
mov
sbb
aam
or
add
cmps
xchg
add
jp
sbb
call
fwait
sub
outs
or
outs
scas
dec
jo
push
or
test
jbe
hlt
fistp
adc
mov
or
mov
aam
cmp
jb
adc
add
jecxz
mov
mov
mov
mov
mov
int3
jae
xor
sbb
ins
cmp
xchg
movs
outs
xor
adc
fidiv
mov
in
mov
jo
cmp
xchg
mov
test
inc
cmp
gs
mov
dec
sub
mov
add
aad
es
fisub
aad
dec
retf
dec
sbb
iret
pop
gs
xchg
popa
mov
and
xchg
mov
sti
ret
call
not
push
pop
pop
sub
repz
sub
mov
in
inc
push
(bad)
outs
xchg
ror
mov
xor
xchg
dec
je
lock
jg
sub
sbb
cmp
sub
in
mov
les
pop
lods
sub
mov
jg
retf
adc
loopne
sub
or
retf
pop
dec
(bad)
shl
and
dec
push
dec
out
pop
sbb
xor
xchg
jmp
or
movs
lods
push
out
test
push
push
fist
cmps
cmp
or
inc
(bad)
cdq
push
jmp
sahf
jnp
or
jbe
jne
daa
ins
dec
(bad)
fbld
sbb
push
in
call
sar
and
xor
mov
ret
jle
jmp
jbe
enter
add
shl
mov
jo
test
xor
mov
(bad)
iret
push
dec
mov
cmps
pop
sub
and
ss
daa
pop
dec
movs
loopne
pop
aaa
jne
outs
mov
fist
push
aas
in
rcl
shl
xchg
cmp
add
xor
stos
jp
xor
arpl
sti
inc
mov
mov
scas
loope
icebp
cmp
nop
mov
popa
cwde
scas
mov
(bad)
lods
adc
lods
adc
push
pop
hlt
shr
adc
xlat
push
mov
cli
fucom
sbb
imul
jge
(bad)
in
xchg
stc
fsubr
(bad)
mov
dec
add
and
addr16
out
fbld
je
jno
dec
ins
sbb
sub
sbb
xchg
sbb
jmp
push
pusha
outs
dec
ins
rcl
rcr
sub
fld
cmc
push
xor
jmp
adc
out
(bad)
les
sbb
pop
movs
fcom
pushf
mov
push
dec
popa
iret
adc
cmp
and
sbb
out
xchg
mov
lods
pop
icebp
and
inc
clc
lahf
mov
xchg
xchg
js
and
push
ret
cmps
mov
call
sub
cwde
or
sub
xchg
popf
int3
adc
mov
(bad)
adc
jb
mov
xor
adc
fs
ret
stc
sub
inc
popa
rol
push
bound
cli
aad
std
pop
mov
in
imul
add
mov
push
xor
jg
cmp
or
shr
xor
cmp
pop
sub
ds
std
stc
lods
mov
enter
cs
cmp
sub
mov
movs
dec
in
cdq
out
sub
dec
pop
(bad)
push
int3
cmps
popf
cwde
sar
xchg
adc
fst
add
jp
cmp
int3
stos
sub
stc
sub
and
mov
daa
jle
mov
or
xchg
pop
dec
sbb
dec
sar
sub
fwait
daa
sahf
or
cmc
mov
sbb
jae
fistp
inc
fld
out
repz
xchg
pop
xor
in
sub
aad
sub
popa
jo
gs
mov
ins
xlat
jmp
fsub
mov
xchg
das
push
add
into
(bad)
call
mov
outs
sub
push
add
sbb
sub
adc
in
and
xor
test
inc
cmps
xchg
fist
hlt
arpl
jecxz
mov
idiv
add
and
ucomiss
lahf
pop
cmp
ins
and
js
adc
out
push
add
mov
push
cmp
cdq
inc
test
inc
jge
lock
ss
sbb
mov
xor
clc
inc
ins
std
sub
mov
stc
stc
fild
es
mov
pop
jge
test
jmp
in
adc
push
outs
ja
ins
fimul
and
cmp
sahf
in
(bad)
cs
ror
mov
scas
mov
outs
ret
sahf
test
imul
and
push
push
mov
mov
jg
sub
jle
adc
pushf
sbb
inc
mul
pop
mov
cdq
mov
pop
jno
dec
dec
dec
clc
sbb
retf
mov
in
add
repz
pop
dec
dec
stc
cdq
nop
adc
sub
retf
sti
bound
add
or
inc
imul
xchg
arpl
or
push
psubusb
repz
loope
les
ss
ret
jbe
or
jb
into
inc
push
and
mov
push
xor
ss
call
loop
adc
aam
(bad)
dec
dec
inc
push
enter
mov
cld
fs
or
repnz
mov
sbb
push
stc
(bad)
je
xlat
mov
adc
test
push
mov
arpl
adc
mov
inc
pop
cli
test
(bad)
fnsave
scas
dec
sub
jno
mov
pusha
ud0
out
fisttp
test
leavew
jbe
add
pop
cmc
inc
sar
mov
mov
jmp
xlat
pop
pop
call
dec
xor
or
inc
dec
out
inc
jecxz
and
mov
icebp
sbb
xchg
jns
or
ds
gs
pop
hlt
mov
pop
xchg
sbb
and
push
pop
mov
jmp
mov
push
and
fdivr
cwde
sbb
and
ret
ins
pushf
leave
leave
out
fisubr
std
adc
sbb
adc
call
ficomp
mov
movs
xchg
stos
pop
add
or
cmp
mov
mov
das
gs
(bad)
lods
sub
xchg
push
ret
mov
ins
pop
mov
dec
push
sti
in
mov
cmp
adc
push
popf
pop
xchg
mov
sti
push
dec
dec
fmulp
mov
inc
int
nop
pop
sub
sub
shl
push
jno
lods
sbb
clc
in
jle
mov
or
icebp
sub
mov
and
inc
xchg
inc
das
adc
mov
xchg
hlt
and
xchg
ins
adc
inc
xchg
mov
outs
fwait
retf
fcomp
push
inc
push
loop
loopne
je
dec
push
cmp
pop
arpl
repnz
rcl
fild
mov
xchg
out
fsub
lock
(bad)
mov
fisub
jp
pusha
fwait
pop
mov
dec
or
xlat
xchg
inc
mov
mov
adc
xor
ds
cld
and
gs
out
(bad)
pushf
mov
cmps
dec
mov
push
mov
fisttp
jmp
mov
and
fdivr
loope
fisttp
pop
hlt
adc
dec
inc
aam
iret
pop
add
pop
scas
dec
add
push
add
das
int3
ret
adc
daa
lods
test
into
int3
adc
shl
push
inc
adc
(bad)
lods
ja
and
movs
mov
and
jl
push
adc
mov
movs
inc
enter
(bad)
mov
jb
fisttp
in
call
push
pop
pop
mov
and
(bad)
stos
outs
xor
mov
xor
addr16
lods
xor
xlat
mov
inc
jns
les
pop
jp
mov
adc
and
jb
pop
jns
push
mov
xor
movs
pop
jno
mov
or
ror
and
ror
mov
inc
lods
add
pushf
xchg
jns
add
push
inc
jnp
inc
lea
inc
ror
pop
push
push
jae
jecxz
leave
inc
or
dec
and
lods
lods
(bad)
mov
add
out
push
sub
mov
mov
xor
das
cld
xor
jle
push
(bad)
jo
(bad)
mov
dec
sbb
jp
mov
mov
adc
out
add
xor
add
imul
inc
xor
sbb
lods
fs
stos
cwde
inc
or
inc
dec
scas
(bad)
(bad)
fsubr
fild
sbb
dec
es
test
adc
pop
xor
retf
ficom
fs
aad
ins
add
sbb
cdq
mov
retf
mov
dec
fild
xchg
loop
int3
jg
sti
fld
jl
rcr
call
mov
into
jmp
cmp
xchg
sub
test
push
jbe
cld
sti
into
das
mov
outs
adc
push
push
inc
adc
pop
pushf
push
lods
popa
add
mov
inc
sahf
xor
int
sbb
scas
jb
dec
push
fs
cli
pop
jb
sub
jns
mov
jnp
add
out
gs
lods
mov
push
jno
xchg
imul
pop
cmp
in
es
std
in
adc
lahf
mov
jecxz
sub
enter
hlt
pop
push
pushf
es
mov
xchg
in
sti
push
movs
cmps
out
fisttp
mov
jbe
fisub
push
fdivr
or
and
jae
inc
test
or
dec
mov
xchg
outs
cmp
sbb
ret
pop
ret
ds
xchg
push
cmps
sbb
inc
cmp
jp
frstor
call
int3
and
mov
jnp
icebp
movs
xchg
lods
sbb
cmp
lea
mov
mov
add
jecxz
jns
xor
dec
std
jne
push
xchg
aas
jnp
fist
and
ds
in
pop
lods
and
jge
cmp
sub
cld
jo
add
test
cmp
jnp
jmp
(bad)
mov
sbb
retf
jecxz
push
movs
xchg
push
outs
and
shl
popf
pop
sbb
fisubr
pop
mov
xchg
cmp
shl
mov
pop
in
jbe
pop
jmp
pushf
inc
add
adc
outs
mov
hlt
xor
cwde
pop
lods
mov
pop
inc
pushf
fldcw
xor
(bad)
or
mov
fwait
or
xchg
pop
cmp
push
in
cmc
xor
lods
push
iret
pop
dec
xlat
cwde
and
bound
sbb
xchg
jae
out
js
jmp
or
mov
pop
pop
adc
mov
cs
inc
xchg
imul
push
dec
(bad)
xchg
data16
cmp
xchg
popa
push
loop
cmp
cld
adc
ja
push
or
xor
scas
mov
and
dec
popf
mov
into
sahf
cdq
test
dec
adc
or
stc
mov
xor
das
jae
rcr
jns
inc
ret
inc
nop
xchg
or
adc
dec
mov
retf
fiadd
fisttp
dec
fmul
das
xor
push
movs
popa
(bad)
not
loopne
ds
cmc
ret
dec
(bad)
dec
and
sbb
inc
repz
in
and
dec
jl
mov
mov
clc
or
mov
sbb
test
push
xor
xor
ret
and
sbb
xchg
cs
adc
sub
dec
das
imul
fwait
cld
jecxz
les
sar
adc
xchg
mov
adc
scas
mov
outs
stos
and
xchg
add
or
xchg
scas
pop
xchg
cmps
dec
dec
add
adc
push
loope
dec
movs
in
adc
pop
dec
add
pushf
out
ror
inc
jo
sbb
mov
xor
addr16
ins
cmp
call
jl
inc
jo
sbb
and
in
into
xchg
sub
movs
xchg
or
hlt
push
(bad)
clc
in
sti
pop
sbb
add
test
cld
mov
cs
add
sbb
push
and
(bad)
pop
sti
push
outs
retf
ins
pop
pop
or
or
pop
rcr
inc
pop
pop
xchg
loope
lahf
clc
imul
push
aaa
or
push
stc
push
jb
loope
push
aaa
jo
jl
jge
cmp
and
inc
(bad)
pop
mov
fsubr
fdiv
mov
mov
imul
imul
lea
cdq
inc
fldenv
jno
movs
mov
inc
pop
sub
fsubr
pop
xchg
mov
shl
jno
mov
mov
ficom
arpl
ins
and
popa
addr16
into
cmc
adc
(bad)
dec
pusha
sub
mov
xor
or
rol
stos
push
repz
pusha
pop
lahf
dec
inc
adc
jmp
xor
inc
push
std
or
jbe
push
ret
sbb
retf
inc
lods
js
arpl
push
cmp
fnstenv
push
sub
add
cmps
popa
jb
cld
dec
pop
fsub
enter
and
sbb
pop
mov
cmp
cmc
and
pop
add
mov
ret
add
cmps
sahf
mov
mov
pop
push
fcomp
dec
iret
outs
inc
(bad)
aad
adc
jmp
sbb
ret
cmc
adc
jns
sbb
test
stos
fnstcw
dec
in
jmp
adc
xor
and
loopne
cmc
icebp
movs
lahf
clc
push
loop
mov
int3
fst
and
outs
mov
out
bound
fcom
push
cld
dec
cmp
xchg
cmps
mov
repz
sub
pop
or
and
mov
inc
(bad)
in
scas
lods
sti
jb
add
xor
mov
repz
inc
test
mov
xchg
out
xor
stos
xchg
adc
dec
inc
xchg
add
(bad)
cmp
push
iret
inc
inc
ror
jne
or
xor
adc
push
outs
aam
(bad)
(bad)
nop
xchg
mov
push
or
enter
dec
ins
shl
shl
enter
lea
jge
mov
dec
lods
xchg
js
xor
push
sub
xchg
fst
jo
pop
mov
(bad)
nop
push
loopne
push
inc
pusha
dec
cli
jle
sbb
inc
adc
aam
clc
mov
repz
outs
les
push
push
lods
stos
and
mov
pop
outs
jno
daa
(bad)
sbb
out
popa
in
loopne
mov
stos
mov
pop
cmps
loopne
add
xlat
outs
jb
iret
xchg
push
mov
push
jge
loope
leave
xchg
pop
add
aam
rol
aaa
push
push
dec
inc
push
pop
adc
fidivr
fnsave
mov
in
call
dec
dec
dec
pop
lods
xor
cmp
and
sbb
pop
stc
out
stos
sub
mov
dec
fcomp
cld
push
ret
(bad)
shl
test
mov
xchg
mov
add
mov
popa
in
fisttp
xor
pop
arpl
mov
xchg
das
dec
imul
jo
lods
push
adc
arpl
jnp
bound
cmps
loop
mov
pop
aad
loopne
pushf
(bad)
out
call
cmc
repz
pusha
fisttp
dec
or
cmp
test
pop
mov
inc
xlat
mov
ja
stc
pop
or
xor
lods
xor
inc
inc
mov
fdivr
imul
(bad)
in
les
out
movs
mov
(bad)
xchg
jp
iret
xchg
mov
cmp
sahf
ja
sbb
stos
mov
imul
ja
jmp
push
mov
scas
and
adc
jne
imul
cld
jl
xor
mov
jmp
daa
les
cwde
stc
dec
repz
stos
std
(bad)
jns
jmp
sbb
out
sbb
rep
mov
jp
xchg
inc
push
jno
nop
mov
outs
lods
adc
mov
push
pop
jbe
cwde
leave
mov
not
sub
cs
sub
jne
div
push
or
repz
sbb
dec
mov
lods
xor
xchg
pop
inc
mov
pop
cli
and
cmp
and
jb
in
xor
and
inc
xor
mov
cmp
push
add
mov
imul
fsub
dec
sahf
clc
loop
pop
lea
shr
mov
repnz
sbb
add
mov
ja
das
pop
scas
cmp
xor
mov
dec
mov
mov
stc
in
ins
inc
xchg
loop
sbb
or
push
push
jno
xchg
xor
pop
xor
add
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
mov
add
and
add
mov
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
