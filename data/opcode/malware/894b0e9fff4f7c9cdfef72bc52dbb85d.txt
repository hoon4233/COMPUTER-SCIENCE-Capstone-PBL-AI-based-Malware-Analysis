inc
cwde
movs
jb
ja
jb
xchg
mov
jb
push
jb
jb
jb
push
mov
jb
sbb
jb
mov
mov
jb
or
jb
push
jb
jbe
jb
ret
mov
jb
add
jb
int
jb
int
jb
dec
mov
jb
shl
jb
add
jb
loopne
jb
jbe
jb
xchg
mov
jb
jge
jb
bound
jb
inc
mov
jb
jg
jb
xchg
mov
jb
push
mov
jb
mov
mov
jb
mov
jb
fwait
mov
jb
xchg
mov
jb
inc
mov
jb
push
mov
jb
push
mov
jb
cpuid
jb
pop
mov
jb
jae
jb
push
mov
jb
call
mov
jb
mov
mov
jb
ins
mov
jb
add
jb
xor
mov
jb
mov
mov
jb
jne
jb
ins
mov
jb
ins
mov
jb
out
mov
jb
cwde
mov
jb
imul
scas
lahf
mov
add
push
inc
add
add
add
inc
add
push
inc
add
add
add
push
inc
add
add
add
pop
inc
add
pop
inc
add
pop
inc
add
add
add
pop
inc
add
pop
inc
add
add
add
add
add
pop
inc
add
pop
inc
add
pop
inc
add
add
add
inc
add
pop
inc
add
add
add
pop
inc
add
pop
inc
add
pop
inc
add
add
add
add
(bad)
pop
inc
add
adc
add
pop
inc
add
pop
inc
add
pop
inc
add
add
add
add
or
add
fs
add
add
add
adc
sbb
add
cs
inc
add
pusha
inc
add
inc
add
inc
add
pusha
inc
add
pusha
inc
add
popa
inc
add
inc
add
inc
add
inc
add
popa
inc
add
bound
adc
add
bound
bound
inc
arpl
push
inc
add
add
add
fs
add
fs
add
add
add
add
add
add
loop
inc
add
inc
add
or
ja
inc
add
add
add
add
add
push
inc
add
add
add
add
div
add
add
add
add
xchg
lea
into
lea
pushf
lea
add
add
clc
adc
dec
add
add
jb
add
jb
add
inc
add
jae
add
jae
add
je
add
inc
add
jne
add
jne
add
inc
add
jbe
add
ja
add
inc
add
js
add
inc
add
inc
add
jns
add
inc
add
jns
add
jns
add
jns
add
inc
add
inc
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
jl
add
inc
add
inc
add
jg
add
jg
add
add
add
add
sbb
inc
add
inc
add
test
add
inc
add
xchg
je
inc
add
xchg
call
xchg
jne
inc
add
add
add
mov
ror
inc
add
inc
add
add
add
add
lea
imul
add
add
add
add
inc
add
rol
add
add
pop
add
add
loopne
inc
add
xchg
inc
add
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
inc
add
add
add
add
addr16
inc
popf
ret
test
add
add
add
add
push
inc
ins
imul
dec
xor
add
sbb
inc
mov
cmp
shl
cmp
adc
push
sub
sbb
xchg
dec
lods
xor
or
stos
add
xchg
jle
add
xchg
xor
add
add
ins
xor
or
outs
jb
xor
add
add
inc
add
add
inc
xor
add
add
xor
add
add
add
add
add
add
sbb
sub
add
push
add
add
add
add
add
add
add
add
add
or
add
or
add
mov
fnstcw
fidivr
fnstcw
fnstcw
fnstcw
fnstcw
fdivr
fdivr
xlat
mov
fdiv
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
(bad)
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aad
xchg
aam
xchg
aam
xchg
aam
xchg
shl
shr
shr
shr
stos
mov
stos
mov
stos
mov
test
iret
test
into
test
into
cmps
test
cmps
test
movs
test
movs
or
or
or
jg
mov
retf
mov
retf
fidivr
mov
fidivr
mov
fidivr
fidivr
mov
fnstcw
fnstcw
fnstcw
fdivr
fdivr
xlat
mov
(bad)
mov
xlat
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
shl
shr
shr
shr
stos
mov
stos
mov
stos
mov
test
into
cmps
xchg
cmps
test
cmps
test
movs
test
movs
or
or
or
jg
mov
retf
mov
fidivr
fstp
fstp
fstp
fstp
fidivr
fidivr
mov
fidivr
fidivr
fnstcw
fnstcw
fdivr
fdivr
(bad)
mov
xlat
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
aam
xchg
aam
xchg
aam
xchg
shl
shr
shr
shr
shr
stos
mov
stos
mov
test
iret
test
into
cmps
xchg
cmps
test
cmps
or
or
or
or
or
jg
mov
retf
mov
fstp
fdivr
fstp
fstp
fstp
fstp
fstp
fstp
fidivr
mov
fnstcw
fnstcw
fnstcw
fdivr
xlat
mov
xlat
mov
xlat
mov
(bad)
mov
(bad)
mov
aad
cwde
aad
xchg
aad
xchg
aad
xchg
aad
xchg
aam
xchg
aam
xchg
aam
xchg
shr
shr
shr
stos
mov
stos
mov
stos
mov
stos
mov
test
into
cmps
xchg
cmps
test
cmps
test
movs
or
or
or
jg
mov
fadd
test
mov
fadd
test
mov
fdivr
fadd
test
mov
fdivr
fstp
fstp
fstp
fstp
fidivr
mov
fnstcw
fnstcw
fdivr
xlat
mov
xlat
mov
xlat
mov
(bad)
mov
(bad)
mov
(bad)
mov
aad
xchg
aad
xchg
aad
xchg
aam
xchg
aam
xchg
shl
shr
shr
shr
shr
shr
iret
test
into
test
into
cmps
test
cmps
or
or
or
or
jg
mov
ffree
stos
ffree
stos
ffree
stos
ffree
stos
ffree
test
shr
test
shr
test
mov
fstp
fstp
fidivr
fstp
fidivr
mov
fdivr
fdivr
fdivr
xlat
mov
(bad)
mov
xlat
mov
(bad)
mov
aad
xchg
aad
xchg
aad
xchg
aam
xchg
aam
xchg
aam
xchg
shl
shr
shr
shr
stos
mov
stos
mov
test
iret
test
into
cmps
xchg
cmps
test
cmps
or
or
or
or
lods
ffree
lods
faddp
lods
faddp
lods
ffree
lods
faddp
lods
faddp
lods
faddp
stos
ffree
stos
faddp
stos
ffree
stos
ffree
stos
ffree
stos
ffree
stos
ffree
stos
ffree
test
shr
cmps
fdivr
fstp
fstp
fidivr
mov
fnstcw
fnstcw
fdivr
xlat
mov
xlat
mov
xlat
mov
(bad)
mov
(bad)
mov
(bad)
mov
aad
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
shr
shr
shr
stos
mov
stos
mov
stos
mov
test
into
cmps
xchg
cmps
test
cmps
test
movs
or
or
or
lods
faddp
scas
faddp
lods
ffreep
lods
faddp
scas
faddp
lods
faddp
scas
faddp
lods
faddp
lods
faddp
lods
faddp
lods
faddp
lods
ffree
lods
faddp
stos
faddp
stos
ffree
stos
ffree
stos
ffree
test
shr
cmps
fdivr
fstp
fstp
fidivr
mov
fnstcw
fdivr
fdiv
xlat
mov
xlat
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
shr
shr
shr
stos
mov
test
iret
test
into
cmps
xchg
cmps
test
cmps
test
movs
or
or
scas
ffreep
scas
ffreep
scas
ffreep
scas
ffreep
scas
ffreep
mov
lds
lds
lds
les
les
ret
lods
ffree
lods
faddp
stos
ffree
stos
ffree
stos
ffree
stos
fadd
test
shr
cmps
fstp
fstp
fidivr
fnstcw
fnstcw
fdivr
xlat
mov
xlat
mov
xlat
mov
(bad)
mov
(bad)
mov
(bad)
mov
aad
xchg
aam
xchg
aam
xchg
aam
xchg
shl
shr
shr
shr
shr
iret
test
into
cmps
test
cmps
test
cmps
test
movs
or
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
lds
lds
lds
les
les
ret
lods
ffree
stos
ffree
stos
ffree
stos
ffree
test
shr
cmps
fdivr
fstp
fidivr
mov
fnstcw
fdivr
xlat
mov
(bad)
mov
xlat
mov
(bad)
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aam
xchg
shl
shr
shr
shr
iret
stos
mov
test
into
cmps
test
cmps
test
movs
test
movs
mov
enter
mov
enter
mov
enter
mov
enter
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
lds
(bad)
scas
ffreep
scas
faddp
scas
ffreep
lods
faddp
lods
faddp
lods
ffree
lods
faddp
stos
ffree
stos
ffree
test
shr
cmps
fstp
fstp
fidivr
mov
fnstcw
xlat
mov
fdiv
xlat
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
shr
shr
shr
stos
mov
test
iret
test
into
cmps
test
cmps
test
cmps
mov
leave
mov
leave
mov
leave
mov
leave
mov
leave
mov
leave
mov
leave
mov
leave
mov
leave
mov
enter
mov
enter
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
lds
les
les
ret
lods
ffree
stos
ffree
stos
ffree
test
shl
movs
fstp
fstp
mov
fdivr
fdivr
xlat
mov
xlat
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aam
xchg
aam
xchg
shl
shr
shr
shr
shr
iret
cmps
xchg
cmps
test
cmps
mov
retf
retf
mov
retf
retf
retf
retf
retf
retf
retf
retf
leave
mov
retf
leave
mov
leave
mov
enter
mov
enter
mov
enter
mov
(bad)
mov
(bad)
mov
lds
les
ret
lods
faddp
stos
faddp
stos
ffree
test
shr
cmps
fstp
fstp
fnstcw
fnstcw
fdivr
xlat
mov
(bad)
mov
(bad)
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aam
xchg
shl
shr
shr
shr
shr
iret
test
into
cmps
mov
int3
mov
int3
mov
retf
mov
retf
mov
retf
mov
retf
mov
retf
mov
retf
leave
mov
retf
leave
mov
leave
mov
leave
mov
enter
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
scas
faddp
scas
ffreep
scas
ffreep
lods
faddp
lods
faddp
stos
ffree
stos
ffree
test
shl
cmps
fstp
fidivr
fnstcw
fdivr
fdiv
xlat
mov
(bad)
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aam
xchg
shl
shr
shr
stos
mov
stos
mov
test
iret
cmps
mov
int
jecxz
mov
int3
mov
int
jecxz
mov
int
jecxz
mov
retf
mov
retf
mov
retf
mov
retf
leave
mov
leave
mov
leave
mov
leave
mov
leave
mov
enter
mov
(bad)
mov
(bad)
mov
(bad)
scas
ffreep
scas
faddp
scas
faddp
lods
faddp
lods
faddp
stos
ffree
stos
ffree
test
mov
fdivr
fidivr
fidivr
fdivr
xlat
mov
xlat
mov
(bad)
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
shl
shr
shr
shr
stos
mov
test
in
mov
iret
mov
into
mov
into
mov
into
mov
int
jecxz
mov
int3
mov
int3
mov
int3
mov
retf
mov
retf
retf
leave
mov
leave
mov
leave
mov
enter
mov
(bad)
mov
(bad)
mov
(bad)
scas
ffreep
scas
ffreep
lods
faddp
lods
faddp
lods
ffree
stos
ffree
test
shl
movs
fidivr
fidivr
mov
fdivr
fdiv
(bad)
mov
(bad)
mov
aad
xchg
aad
xchg
aad
xchg
aam
xchg
shr
shr
shr
stos
mov
stos
mov
test
in
mov
iret
mov
sar
iret
mov
iret
mov
into
mov
int
jecxz
mov
int
jecxz
mov
retf
mov
retf
mov
retf
retf
leave
mov
enter
mov
(bad)
mov
(bad)
mov
(bad)
mov
lds
les
ret
stos
ffree
test
shr
movs
fstp
fidivr
mov
fdivr
xlat
mov
xlat
mov
xlat
mov
aad
xchg
aad
xchg
aam
xchg
aad
xchg
aam
xchg
shl
shr
shr
stos
mov
stos
shl
mov
rol
in
mov
sar
sar
sar
sar
iret
mov
into
mov
int
jecxz
mov
int3
mov
int3
mov
retf
mov
retf
leave
mov
leave
mov
leave
mov
enter
mov
(bad)
mov
(bad)
mov
lds
ret
lods
faddp
stos
ffree
stos
ffree
test
shl
movs
fstp
fidivr
mov
fdivr
(bad)
mov
(bad)
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aam
xchg
shr
shr
shr
stos
ret
shl
ret
ret
ret
shl
ret
shl
shl
shl
shl
shl
mov
sar
sar
iret
mov
into
mov
int
jecxz
mov
int3
mov
retf
retf
leave
mov
enter
mov
(bad)
mov
(bad)
scas
loopne
scas
faddp
lods
ffreep
lods
faddp
lods
ffree
stos
ffree
stos
ffree
test
mov
fstp
fidivr
mov
fdivr
xlat
mov
xlat
mov
(bad)
mov
aad
xchg
aad
xchg
aad
xchg
aam
xchg
aam
xchg
shl
shr
shr
out
ret
out
ret
out
ret
out
ret
out
ret
out
ret
out
ret
ret
ret
ret
ret
shl
shl
shl
shl
mov
sar
iret
mov
iret
mov
int
in
mov
retf
mov
retf
leave
mov
enter
mov
(bad)
mov
(bad)
mov
lds
les
ret
shr
cmps
fdivr
fstp
fnstcw
fdivr
xlat
mov
xlat
mov
xlat
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aam
xchg
shl
shr
shr
aad
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
(bad)
call
ret
out
ret
out
ret
shl
shl
shl
shl
mov
sar
iret
mov
into
mov
int3
mov
retf
mov
retf
retf
leave
mov
enter
mov
(bad)
mov
(bad)
scas
ffreep
scas
faddp
lods
faddp
lods
faddp
stos
ffree
test
shl
movs
fstp
fnstcw
fdivr
xlat
mov
(bad)
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aam
xchg
aam
xchg
shr
shr
call
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
(bad)
(bad)
(bad)
out
(bad)
out
ret
out
ret
out
ret
ret
shl
shl
mov
sar
iret
mov
into
mov
int3
mov
retf
mov
retf
retf
enter
mov
(bad)
mov
(bad)
scas
ffreep
scas
faddp
lods
faddp
lods
faddp
stos
ffree
stos
ffree
test
shl
movs
fstp
fidivr
fdivr
xlat
mov
xlat
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aam
xchg
aam
nop
shr
shr
jmp
fmul
jmp
enter
jmp
enter
call
(bad)
call
(bad)
(bad)
(bad)
call
ret
out
ret
ret
shl
shl
shl
mov
sar
into
mov
int
jecxz
mov
retf
mov
retf
retf
leave
mov
enter
mov
(bad)
mov
lds
les
stos
fadd
test
shl
movs
fidivr
fnstcw
fdivr
xlat
mov
xlat
mov
(bad)
mov
aad
xchg
aad
xchg
aad
xchg
aam
xchg
aam
xchg
shl
shr
jmp
fmul
jmp
fmul
jmp
fmul
jmp
xlat
enter
call
(bad)
call
(bad)
(bad)
out
(bad)
out
ret
out
ret
ret
shl
mov
sar
iret
mov
int
jecxz
mov
retf
mov
retf
leave
mov
enter
mov
(bad)
mov
lds
ret
lods
faddp
stos
ffree
stos
ffree
test
mov
fidivr
mov
fdivr
xlat
mov
(bad)
mov
(bad)
mov
aad
xchg
aad
xchg
aad
xchg
aam
xchg
aam
xchg
shr
jmp
fcmove
jmp
fcmove
jmp
fcmove
jmp
retf
retf
retf
retf
leave
jmp
enter
call
(bad)
call
(bad)
out
ret
out
ret
ret
shl
shl
mov
sar
into
mov
int
jecxz
mov
retf
leave
mov
enter
mov
(bad)
mov
lds
les
ret
shr
cmps
fidivr
fidivr
fnstcw
fdivr
xlat
mov
(bad)
mov
aad
xchg
aad
xchg
aad
xchg
aam
xchg
shl
jmp
into
jmp
into
jmp
into
in
fmul
in
fcmovne
in
fcmovne
jmp
into
jmp
int
fcmovne
jmp
fcmove
jmp
retf
jmp
retf
jmp
retf
leave
jmp
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
out
ret
shl
shl
mov
iret
mov
iret
mov
int3
mov
retf
mov
retf
leave
mov
enter
mov
(bad)
mov
lds
les
stos
fadd
test
mov
fstp
fidivr
mov
xlat
mov
xlat
mov
(bad)
mov
aad
xchg
aad
xchg
aam
xchg
aam
xchg
aam
xchg
shl
in
(bad)
in
(bad)
in
fst
in
fst
in
fmul
in
fmul
jmp
into
jmp
iret
jmp
into
jmp
int
fcmovne
jmp
int
fcmove
jmp
int3
jmp
fxch
jmp
enter
jmp
(bad)
call
(bad)
out
ret
ret
shl
shl
mov
iret
mov
int
jecxz
mov
retf
mov
retf
leave
mov
enter
mov
(bad)
mov
lds
ret
stos
faddp
stos
ffree
test
shl
mov
mov
fdivr
fdiv
(bad)
mov
(bad)
mov
aad
xchg
aam
xchg
aam
xchg
shl
in
(bad)
in
fst
in
(bad)
in
fst
in
(bad)
in
(bad)
in
fst
in
fst
in
(bad)
in
(bad)
in
(bad)
jmp
iret
jmp
into
jmp
into
jmp
int3
jmp
int3
jmp
fxch
jmp
leave
jmp
(bad)
call
(bad)
out
ret
out
ret
shl
shl
mov
iret
mov
into
mov
int3
mov
retf
leave
mov
enter
mov
(bad)
mov
lds
ret
lods
faddp
stos
ffree
test
shl
movs
fstp
fnstcw
fdivr
xlat
mov
xlat
mov
(bad)
mov
aad
xchg
aam
xchg
aam
xchg
shl
out
(bad)
in
(bad)
out
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
fst
in
(bad)
in
fmul
in
fmul
jmp
into
jmp
int
fcmove
jmp
fxch
jmp
(bad)
jmp
(bad)
call
(bad)
out
ret
shl
shl
mov
sar
into
mov
int3
mov
retf
mov
retf
leave
mov
enter
mov
(bad)
scas
ffreep
scas
ffreep
lods
faddp
stos
ffree
test
shl
movs
fidivr
mov
fdivr
xlat
mov
(bad)
mov
aad
xchg
aad
xchg
aad
xchg
aam
aad
loopne
out
loopne
out
loopne
out
loopne
out
loopne
in
loopne
out
loopne
out
loopne
in
loopne
out
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
fst
in
fmul
in
fmul
jmp
int
fcmovne
jmp
int
fcmove
jmp
xlat
enter
call
(bad)
(bad)
out
ret
out
ret
shl
mov
sar
into
mov
int3
mov
retf
leave
mov
enter
mov
(bad)
scas
faddp
scas
faddp
lods
ffree
stos
ffree
test
mov
fidivr
fidivr
fdivr
xlat
mov
(bad)
mov
(bad)
mov
aad
xchg
aad
xchg
aam
(bad)
out
loope
out
loope
out
loope
out
loope
out
loop
out
loop
out
loope
out
loope
out
loope
out
loopne
out
loopne
out
loopne
in
(bad)
in
(bad)
out
(bad)
in
(bad)
in
(bad)
in
fst
in
(bad)
in
(bad)
jmp
into
in
fcmovne
jmp
int3
jmp
retf
retf
leave
jmp
(bad)
call
(bad)
call
ret
shl
mov
sar
into
mov
int3
mov
retf
mov
leave
mov
leave
mov
(bad)
mov
(bad)
mov
(bad)
scas
faddp
scas
faddp
lods
faddp
stos
ffree
test
mov
fidivr
fnstcw
fdivr
xlat
mov
(bad)
mov
(bad)
mov
aad
xchg
aad
fdiv
jecxz
out
jecxz
out
jecxz
out
loop
lock
out
loop
out
jecxz
out
loop
out
loope
out
loop
out
loop
out
loope
out
loope
out
loopne
out
(bad)
in
loopne
out
(bad)
in
(bad)
in
fst
in
(bad)
in
fst
in
fmul
jmp
into
jmp
int3
jmp
retf
jmp
fmul
call
(bad)
(bad)
out
ret
out
ret
shl
mov
sar
into
mov
int3
mov
retf
mov
retf
enter
mov
(bad)
scas
ffreep
scas
ffreep
lods
faddp
lods
faddp
stos
fadd
test
shl
movs
fidivr
fnstcw
xlat
mov
xlat
mov
(bad)
mov
aad
xchg
aad
(bad)
in
lock
lock
lock
lock
lock
lock
lock
out
in
out
jecxz
lock
out
jecxz
out
loope
out
loop
out
loope
out
loope
out
loopne
out
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
fmul
jmp
int
fcmovne
jmp
retf
jmp
retf
retf
enter
jmp
(bad)
out
ret
out
shl
shl
mov
sar
mov
retf
mov
retf
mov
retf
enter
mov
(bad)
scas
ffreep
scas
faddp
lods
faddp
stos
ffree
test
shl
mov
mov
fdivr
xlat
mov
xlat
mov
aad
xchg
(bad)
mov
icebp
in
icebp
in
icebp
in
lock
lock
icebp
in
icebp
in
icebp
in
lock
icebp
in
lock
lock
lock
out
loop
out
jecxz
out
loop
out
loope
out
loope
out
loopne
out
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
fmul
jmp
int
fcmove
jmp
retf
leave
jmp
xlat
(bad)
call
ret
out
ret
shl
mov
iret
mov
int
jecxz
mov
retf
leave
mov
enter
mov
(bad)
scas
faddp
lods
faddp
lods
ffree
stos
ffree
test
mov
fidivr
fnstcw
fdivr
(bad)
mov
(bad)
mov
aad
(bad)
out
icebp
out
icebp
out
icebp
out
icebp
out
icebp
out
icebp
out
icebp
out
icebp
out
icebp
in
icebp
in
lock
lock
lock
lock
out
jecxz
out
jecxz
out
loope
out
loope
out
loopne
out
loopne
in
(bad)
in
(bad)
in
(bad)
in
(bad)
jmp
into
jmp
int
fcmove
jmp
fmul
jmp
(bad)
call
ret
out
ret
shl
mov
iret
mov
int
jecxz
mov
retf
retf
leave
mov
(bad)
mov
(bad)
mov
lds
ret
stos
faddp
stos
fadd
test
shl
mov
mov
fdivr
xlat
mov
(bad)
mov
(bad)
mov
bnd
repnz
icebp
out
repnz
bnd
repnz
repnz
icebp
out
icebp
out
icebp
in
lock
lock
icebp
in
lock
lock
out
jecxz
out
loop
out
loop
out
loope
out
loopne
in
(bad)
out
(bad)
in
(bad)
in
fst
jmp
into
in
fmul
jmp
int3
jmp
retf
jmp
xlat
(bad)
call
(bad)
out
ret
out
shl
shl
mov
iret
mov
int3
mov
retf
leave
mov
enter
mov
(bad)
scas
ffreep
scas
ffreep
lods
ffree
stos
ffree
test
mov
fidivr
fnstcw
fdivr
xlat
mov
(bad)
mov
repz
bnd
bnd
bnd
bnd
repnz
icebp
out
icebp
out
icebp
out
icebp
out
lock
lock
lock
lock
out
jecxz
out
loop
out
loope
out
loopne
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
fmul
in
fmul
jmp
retf
jmp
fadd
jmp
(bad)
ret
out
ret
out
shl
mov
iret
mov
int
jecxz
mov
retf
leave
mov
(bad)
mov
(bad)
mov
(bad)
scas
ffreep
lods
faddp
stos
ffree
test
shl
movs
fidivr
mov
fdiv
(bad)
mov
repz
repz
repz
repz
repz
bnd
repnz
repnz
repnz
icebp
out
icebp
in
lock
lock
lock
lock
lock
out
loope
out
loope
out
loopne
out
(bad)
in
(bad)
in
(bad)
in
fmul
jmp
int
fcmovne
jmp
xlat
enter
jmp
(bad)
out
ret
shl
mov
iret
mov
int
jecxz
mov
retf
mov
retf
enter
mov
(bad)
scas
ffreep
scas
faddp
lods
faddp
stos
ffree
test
mov
fstp
fnstcw
fdivr
xlat
mov
repz
jecxz
jmp
hlt
jmp
jecxz
jmp
loop
jmp
bnd
bnd
icebp
out
icebp
out
icebp
in
lock
lock
lock
lock
out
loope
out
loopne
out
(bad)
in
(bad)
in
(bad)
in
(bad)
in
fmul
jmp
int
fcmovne
jmp
xlat
(bad)
jmp
(bad)
out
ret
out
shl
shl
mov
iret
mov
int
jecxz
mov
retf
leave
mov
(bad)
mov
(bad)
mov
lds
ret
stos
ffree
stos
ffree
test
shl
mov
mov
fdivr
xlat
mov
cmc
jmp
hlt
in
in
in
in
in
in
in
in
in
in
jmp
hlt
jmp
hlt
jmp
hlt
jmp
loop
jmp
repz
bnd
repnz
icebp
in
lock
lock
lock
out
loop
out
loop
out
loope
in
loopne
out
(bad)
in
(bad)
in
(bad)
jmp
into
jmp
int3
jmp
fmul
jmp
(bad)
call
ret
out
shl
mov
sar
mov
retf
mov
leave
mov
leave
mov
(bad)
mov
(bad)
scas
ffreep
scas
ffreep
lods
ffree
stos
ffree
test
mov
fstp
mov
xlat
mov
cmc
in
out
in
out
in
out
in
out
in
in
in
in
in
out
in
in
in
in
in
in
in
in
jmp
hlt
jmp
loope
jmp
repnz
repnz
icebp
out
icebp
out
icebp
in
lock
lock
out
jecxz
out
loope
out
loope
out
(bad)
in
(bad)
in
(bad)
in
(bad)
jmp
into
jmp
int
fcmove
jmp
xlat
(bad)
call
ret
out
ret
shl
mov
iret
mov
int3
mov
retf
leave
mov
enter
mov
lds
ret
stos
ffree
stos
ffree
test
shl
mov
mov
fdivr
cmc
out
out
in
call
out
out
out
out
out
out
in
out
in
out
in
out
in
out
in
in
in
in
jmp
hlt
jmp
hlt
jmp
loope
jmp
repnz
icebp
out
icebp
out
lock
lock
out
jecxz
out
loop
out
loop
out
loope
out
loopne
out
(bad)
in
(bad)
in
(bad)
jmp
int
fcmove
jmp
fadd
jmp
(bad)
out
ret
out
shl
shl
mov
into
mov
int3
mov
retf
mov
retf
enter
mov
(bad)
scas
ffreep
lods
faddp
lods
faddp
stos
ffree
test
mov
fstp
mov
xlat
mov
imul
jmp
out
jmp
out
call
out
call
out
out
in
out
in
out
in
in
in
in
in
jecxz
jmp
hlt
jmp
loopne
call
icebp
out
icebp
out
lock
lock
lock
out
loop
out
loope
out
loopne
in
(bad)
in
(bad)
in
(bad)
in
(bad)
jmp
int
fcmove
jmp
xlat
(bad)
jmp
ret
out
ret
shl
mov
iret
mov
int
loop
mov
retf
leave
mov
enter
mov
lds
ret
stos
faddp
test
mov
fstp
fnstcw
fdivr
div
jmp
lock
div
jmp
imul
call
out
call
in
out
in
in
in
in
in
in
in
loop
jmp
loopne
call
repnz
icebp
out
icebp
in
lock
out
jecxz
lock
out
loope
out
loopne
in
(bad)
in
(bad)
in
(bad)
in
fmul
jmp
int3
jmp
fmul
jmp
(bad)
out
ret
shl
shl
mov
into
mov
retf
mov
retf
mov
retf
enter
mov
(bad)
scas
ffreep
lods
faddp
lods
ffree
test
mov
fstp
fidivr
fdivr
div
in
div
in
div
jmp
icebp
jmp
icebp
jmp
icebp
jmp
lock
imul
jmp
out
call
in
out
in
in
in
in
jmp
hlt
jmp
repz
fdivp
call
icebp
in
icebp
in
lock
lock
out
loope
out
loopne
in
loopne
out
(bad)
in
(bad)
in
fmul
jmp
int
fcmovne
jmp
xlat
(bad)
call
ret
out
ret
shl
mov
iret
mov
int
loop
mov
retf
leave
mov
(bad)
mov
(bad)
mov
lds
ret
shr
movs
fstp
fnstcw
fdivr
clc
repnz
clc
repnz
clc
repnz
div
in
div
in
div
in
clc
repnz
div
jmp
icebp
jmp
lock
imul
call
out
out
in
in
in
in
in
jecxz
jmp
hlt
jmp
fdivp
call
icebp
in
lock
lock
lock
out
loope
out
loope
in
(bad)
in
(bad)
in
(bad)
in
(bad)
jmp
int
fcmove
jmp
xlat
(bad)
call
ret
out
shl
mov
sar
mov
retf
leave
mov
enter
mov
(bad)
scas
faddp
lods
ffree
stos
faddp
test
shl
mov
mov
clc
repz
clc
repz
clc
repz
clc
repz
stc
repnz
clc
repz
clc
repz
clc
repnz
clc
repnz
clc
repnz
clc
icebp
in
div
jmp
imul
jmp
out
out
in
out
in
in
jmp
hlt
jmp
hlt
jmp
fdivp
out
icebp
out
icebp
out
lock
lock
out
loop
out
loope
out
loopne
out
(bad)
in
(bad)
in
(bad)
jmp
int
fcmove
jmp
leave
jmp
(bad)
jmp
(bad)
out
ret
shl
mov
into
mov
int3
mov
retf
mov
leave
mov
enter
mov
(bad)
scas
ffreep
lods
faddp
lods
faddp
test
mov
fstp
fidivr
stc
hlt
lock
hlt
lock
hlt
out
stc
hlt
lock
repz
stc
repz
repz
stc
repz
stc
repnz
clc
repnz
div
in
clc
repnz
div
jmp
icebp
jmp
imul
out
out
out
in
out
in
in
in
jecxz
jmp
hlt
jmp
fdivp
out
icebp
out
lock
lock
out
jecxz
out
loop
out
loopne
out
(bad)
in
(bad)
in
fmulp
in
(bad)
jmp
int3
jmp
retf
jmp
(bad)
(bad)
call
ret
shl
mov
iret
mov
int3
mov
retf
enter
mov
(bad)
scas
ffreep
scas
faddp
lods
ffree
stos
ffree
test
mov
fidivr
mov
cli
cmc
icebp
stc
cmc
icebp
cli
cmc
lock
cmc
icebp
cli
hlt
lock
hlt
lock
hlt
lock
repz
clc
repz
stc
repz
clc
repnz
div
in
div
jmp
icebp
jmp
imul
call
in
in
in
in
jmp
hlt
jmp
repz
repnz
icebp
out
icebp
out
lock
lock
out
loop
out
loope
out
loopne
in
(bad)
in
fst
in
fmul
jmp
int3
jmp
fmul
jmp
(bad)
call
shl
shl
mov
iret
mov
int3
mov
retf
leave
mov
enter
scas
ffreep
scas
faddp
lods
ffree
stos
ffree
test
shl
movs
fidivr
mov
cli
cmc
repnz
div
cli
div
cli
div
cli
cmc
repnz
cmc
icebp
stc
cmc
lock
hlt
lock
hlt
out
clc
repz
clc
hlt
out
clc
repnz
clc
repnz
div
jmp
icebp
jmp
imul
out
in
out
in
in
in
jecxz
jmp
fcomip
out
repnz
icebp
out
lock
lock
out
jecxz
out
loop
out
loope
in
(bad)
in
(bad)
in
(bad)
in
fmul
jmp
int3
jmp
xlat
(bad)
call
ret
out
shl
shl
mov
iret
mov
int3
mov
retf
mov
retf
enter
mov
(bad)
scas
faddp
lods
faddp
stos
ffree
test
mov
fstp
fnstcw
cli
div
sti
div
cli
div
cli
div
sti
div
cli
div
cli
div
stc
cmc
icebp
cli
cmc
lock
hlt
lock
repz
clc
repz
clc
repz
div
in
div
jmp
icebp
jmp
imul
out
out
in
in
in
in
jecxz
jmp
fcomip
call
icebp
in
icebp
in
out
jecxz
out
jecxz
out
loope
out
loopne
in
(bad)
in
(bad)
in
(bad)
jmp
int3
jmp
retf
jmp
(bad)
(bad)
call
ret
shl
mov
iret
mov
int3
mov
retf
mov
retf
leave
mov
(bad)
mov
(bad)
scas
ffreep
scas
faddp
lods
ffree
stos
ffree
test
mov
fstp
fnstcw
sti
div
sti
clc
hlt
sti
div
cli
div
sti
div
sti
div
sti
div
cli
div
cli
cmc
repnz
cmc
icebp
stc
cmc
lock
hlt
out
clc
hlt
out
clc
repnz
clc
repnz
div
jmp
icebp
jmp
imul
out
in
in
in
jecxz
jmp
repz
fdivp
out
icebp
out
lock
lock
out
jecxz
out
loop
out
loope
out
(bad)
in
(bad)
in
fmul
jmp
int
fcmove
jmp
(bad)
(bad)
call
ret
shl
mov
iret
mov
int3
mov
retf
leave
mov
(bad)
mov
(bad)
scas
ffreep
lods
faddp
lods
faddp
stos
ffree
test
mov
fidivr
clc
cmc
sti
clc
idiv
clc
idiv
stc
idiv
clc
cmc
sti
clc
cmc
sti
clc
hlt
sti
div
cli
div
cli
div
cli
cmc
repnz
div
stc
cmc
lock
hlt
out
stc
hlt
out
clc
repz
clc
bnd
icebp
jmp
imul
out
out
out
in
in
in
jecxz
jmp
repz
fdivp
out
lock
lock
lock
out
loop
out
loope
in
(bad)
in
(bad)
in
(bad)
in
fmul
jmp
retf
jmp
xlat
(bad)
call
ret
out
shl
mov
iret
mov
int
jecxz
mov
retf
mov
leave
mov
enter
mov
lds
ret
stos
ffree
test
mov
fidivr
stc
idiv
stc
idiv
stc
idiv
stc
idiv
stc
idiv
clc
idiv
clc
cmc
sti
clc
cmc
sti
clc
hlt
sti
clc
repz
div
cli
div
cli
cmc
lock
hlt
lock
hlt
out
stc
repz
clc
repnz
clc
icebp
in
div
jmp
imul
out
in
in
in
jecxz
jmp
repz
fdivp
out
icebp
in
icebp
in
out
in
out
loop
out
loope
out
loopne
in
(bad)
in
fst
in
fmul
in
fcmovne
jmp
retf
leave
jmp
aad
out
ret
shl
mov
into
mov
retf
mov
retf
mov
leave
mov
enter
mov
lds
ret
stos
ffree
test
mov
fstp
cli
idiv
cli
clc
std
cli
clc
cld
cli
idiv
cli
clc
cld
stc
idiv
stc
idiv
stc
idiv
stc
cmc
sti
div
sti
div
cli
div
cli
div
cli
cmc
lock
hlt
lock
repz
clc
repz
clc
repnz
div
jmp
lock
out
out
out
out
in
in
jmp
repz
fcomip
out
icebp
out
lock
out
in
out
loop
out
loope
out
loopne
in
(bad)
in
(bad)
in
fmul
jmp
int3
jmp
xlat
enter
call
ret
out
shl
mov
into
mov
int3
mov
retf
mov
leave
mov
enter
mov
(bad)
scas
ffreep
lods
ffree
stos
ffree
stos
fadd
cmps
fdivr
fidivr
cld
sti
stc
cld
sti
stc
cld
cli
stc
std
sti
stc
cld
sti
clc
std
cli
clc
cld
stc
idiv
stc
idiv
clc
cmc
sti
clc
cmc
sti
clc
hlt
cli
div
cli
div
cli
cmc
icebp
stc
cmc
lock
hlt
out
clc
hlt
in
clc
repnz
div
jmp
lock
imul
out
in
in
jmp
repz
repz
repnz
icebp
out
lock
lock
lock
out
loope
out
loopne
out
(bad)
in
(bad)
in
(bad)
in
fmul
jmp
fadd
call
(bad)
out
ret
out
shl
mov
iret
mov
int3
mov
leave
mov
leave
mov
(bad)
mov
(bad)
scas
ffreep
lods
faddp
stos
ffree
test
shl
mov
sti
cli
std
sti
cli
std
sti
cli
std
sti
stc
std
sti
cli
std
sti
stc
cld
cli
clc
cld
cli
clc
cld
cli
idiv
stc
idiv
stc
hlt
sti
clc
hlt
sti
div
cli
div
cli
cmc
icebp
stc
hlt
lock
hlt
out
clc
repnz
clc
bnd
icebp
jmp
lock
out
out
in
in
in
in
jmp
repz
fdivp
out
icebp
in
lock
lock
out
loop
out
loope
out
(bad)
in
(bad)
in
(bad)
in
fcmovne
jmp
retf
jmp
xlat
(bad)
jmp
ret
out
shl
mov
iret
mov
int3
mov
retf
enter
mov
(bad)
scas
ffreep
lods
faddp
stos
faddp
stos
ffree
test
shl
mov
cld
sti
(bad)
cld
sti
std
cld
sti
(bad)
cld
sti
std
cld
cli
std
sti
stc
std
sti
clc
cld
cli
clc
std
cli
idiv
stc
idiv
clc
idiv
clc
hlt
sti
clc
repz
div
cli
cmc
repnz
cmc
lock
hlt
out
stc
repz
clc
repnz
clc
icebp
jmp
icebp
jmp
out
out
out
out
in
in
jmp
hlt
jmp
fdivp
out
icebp
out
lock
lock
out
loop
out
loope
out
(bad)
in
(bad)
in
(bad)
in
fmul
jmp
int3
jmp
xlat
(bad)
call
ret
out
shl
mov
iret
mov
int
loop
mov
retf
enter
mov
(bad)
scas
ffreep
scas
faddp
lods
ffree
test
mov
fstp
(bad)
std
cld
(bad)
cld
cld
std
std
cld
(bad)
cld
sti
(bad)
cld
sti
(bad)
cld
sti
std
cld
cli
std
sti
stc
std
cli
clc
cld
stc
idiv
stc
idiv
clc
cmc
sti
clc
hlt
sti
div
cli
div
stc
cmc
icebp
stc
hlt
out
stc
repz
stc
repz
div
in
div
jmp
imul
out
in
in
jmp
hlt
jmp
bnd
repnz
icebp
out
lock
lock
out
loop
out
loope
out
loopne
in
(bad)
in
fmulp
in
fmul
jmp
int3
jmp
retf
enter
call
ret
out
shl
mov
sar
mov
retf
enter
mov
(bad)
scas
ffreep
scas
faddp
lods
faddp
stos
ffree
test
mov
fstp
(bad)
std
cld
(bad)
std
cld
(bad)
(bad)
cld
(bad)
std
cld
(bad)
std
cld
(bad)
std
sti
(bad)
cld
cli
std
cld
stc
std
sti
stc
cld
cli
clc
cld
stc
idiv
clc
cmc
sti
clc
cmc
sti
div
cli
div
cli
div
stc
hlt
lock
hlt
out
clc
repz
div
jmp
icebp
jmp
cmc
in
out
in
in
in
loop
jmp
repz
(bad)
out
icebp
in
out
in
out
jecxz
out
loope
out
loopne
out
(bad)
in
(bad)
in
fmul
jmp
int3
jmp
retf
enter
call
(bad)
out
shl
shl
mov
into
mov
retf
mov
retf
mov
leave
mov
enter
scas
ffreep
lods
faddp
lods
ffree
stos
ffree
test
mov
fidivr
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
std
cld
(bad)
std
sti
(bad)
std
sti
std
sti
cli
cld
cld
stc
cld
cli
clc
cld
stc
idiv
stc
idiv
clc
hlt
sti
clc
repz
div
cli
cmc
icebp
stc
cmc
out
stc
hlt
out
clc
repz
div
in
div
jmp
lock
out
out
in
in
jmp
hlt
jmp
repz
(bad)
out
lock
lock
out
jecxz
out
loope
out
loopne
in
(bad)
in
fst
jmp
int
fcmovne
jmp
xlat
(bad)
jmp
ret
out
ret
mov
sar
mov
retf
mov
leave
mov
enter
mov
lds
ret
stos
ffree
test
mov
fstp
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
std
cld
(bad)
cld
sti
(bad)
cld
cli
std
sti
stc
std
cli
clc
std
cli
idiv
stc
idiv
clc
cmc
sti
clc
hlt
cli
div
stc
div
stc
cmc
out
stc
repz
clc
repz
clc
repnz
div
jmp
cmc
out
out
in
in
jmp
hlt
jmp
hlt
jmp
(bad)
out
lock
lock
out
jecxz
out
loop
out
loopne
out
(bad)
in
(bad)
in
fmul
jmp
int3
jmp
retf
enter
call
ret
out
ret
shl
mov
into
mov
retf
mov
retf
mov
leave
mov
enter
mov
lds
ret
ret
shl
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
std
cld
(bad)
std
sti
std
cld
cli
std
cld
stc
std
sti
clc
cld
cli
idiv
stc
cmc
sti
clc
cmc
sti
div
cli
div
stc
cmc
icebp
cli
hlt
lock
hlt
out
clc
repz
div
in
clc
icebp
jmp
lock
out
out
in
in
in
jecxz
jmp
repz
(bad)
out
icebp
in
lock
out
jecxz
out
loope
out
loopne
in
(bad)
in
(bad)
in
(bad)
jmp
int3
jmp
xlat
(bad)
call
ret
out
ret
shl
mov
iret
mov
int3
mov
retf
leave
mov
enter
mov
lds
ret
stos
ffree
test
shl
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
cld
(bad)
std
cld
std
std
sti
(bad)
sti
cli
std
sti
stc
cld
cli
clc
cld
cli
idiv
stc
cmc
sti
clc
hlt
sti
div
cli
div
stc
div
cli
cmc
lock
hlt
out
stc
repz
div
in
clc
icebp
jmp
lock
out
out
in
in
in
jecxz
jmp
repz
(bad)
out
lock
lock
out
jecxz
out
loope
out
loope
in
(bad)
in
fmulp
in
(bad)
in
fcmovne
jmp
fadd
call
ret
out
shl
shl
mov
into
mov
int3
mov
retf
leave
mov
enter
mov
lds
ret
ret
shl
mov
add
and
add
jb
xor
xor
add
add
int
add
fadd
inc
add
dec
add
add
or
push
imul
add
add
je
add
add
inc
dec
inc
cmp
popa
arpl
fs
add
hlt
jmp
into
mov
repnz
shl
mov
lahf
lods
mov
xchg
hlt
cld
pushf
pushf
popf
mov
pushf
test
fs
int3
aad
xor
or
fs
ins
add
inc
push
sub
or
cmp
or
test
movs
add
test
lods
or
pushf
or
mov
jl
cmp
adc
movs
in
hlt
cld
in
hlt
add
lods
add
pushf
add
mov
bound
movs
or
xchg
adc
lods
sbb
push
xchg
pop
mov
add
add
jl
cmp
or
mov
lods
or
test
je
ins
mov
pop
fwait
or
mov
inc
push
js
inc
outs
nop
popa
test
dec
test
je
pop
pushf
or
mov
jl
je
adc
movs
sbb
les
call
outs
xchg
mov
in
add
pushf
add
mov
jl
cmp
or
lods
or
movs
or
xchg
or
push
test
mov
ins
lods
sbb
mov
jp
mov
xchg
or
je
jl
adc
movs
sbb
test
pop
pop
mov
push
jl
push
pop
mov
leave
add
mov
test
je
ins
movs
or
mov
mov
test
outs
push
outs
jl
cs
in
hlt
in
cld
jge
mov
xchg
sahf
xchg
mov
leave
fsub
jns
stos
popa
jl
jbe
aam
ror
stos
mov
test
xlat
fmul
sahf
in
test
aad
frstpm(287
(bad)
in
lahf
mov
dec
fwait
scas
dec
mov
retf
fxch
in
hlt
mov
jmp
mov
mov
xlat
call
movs
stos
or
(bad)
push
scas
addr16
push
xchg
mov
fsub
mov
pop
push
lods
mov
aam
test
fdiv
jl
cmp
dec
xchg
mov
mov
cmps
push
mov
xchg
sahf
lahf
mov
pushf
inc
nop
xchg
test
(bad)
je
cmp
pop
(bad)
xchg
sbb
jb
sbb
ins
sub
cmp
in
(bad)
in
in
leave
in
jecxz
cld
in
cld
cld
in
hlt
in
hlt
hlt
jbe
jp
movs
movs
xchg
xchg
xchg
es
inc
xchg
lea
jnp
shl
jne
mov
aam
in
hlt
add
mov
mov
test
hlt
in
mov
mov
call
cwde
mov
enter
mov
cld
hlt
hlt
hlt
in
popf
pushf
xchg
imul
lods
(bad)
mov
test
jecxz
(bad)
mov
xchg
xchg
xchg
mov
cld
hlt
hlt
hlt
call
fmul
enter
mov
mov
add
add
add
or
add
or
sbb
sbb
mov
add
cmp
mov
inc
or
test
test
icebp
add
js
and
xchg
pop
mov
and
movs
pop
mov
mov
and
adc
dec
push
xor
add
lea
sbb
and
xor
push
movs
inc
sub
dec
push
jmp
dec
movs
imul
pusha
aas
push
mov
jno
inc
mov
sbb
xor
mov
(bad)
cmp
in
jmp
sbb
or
dec
mov
adc
(bad)
pop
mov
and
jle
sbb
mov
and
imul
cmp
fld
jmp
xchg
loop
or
lods
pop
test
mov
scas
fmul
jno
inc
or
mov
fwait
js
sub
xchg
sub
into
sbb
outs
out
jae
mov
jmp
outs
movs
cmp
fidivr
jge
icebp
call
das
cmp
adc
(bad)
push
jno
pop
std
push
imul
jecxz
aas
add
push
loopne
add
xor
pop
and
mov
or
push
jb
inc
test
dec
clc
rol
dec
sbb
push
inc
xchg
sbb
add
dec
push
rol
adc
(bad)
sbb
bound
(bad)
ja
clc
fbld
push
push
cdq
or
test
adc
movs
push
ins
sbb
inc
fwait
outs
mov
aad
xlat
pushf
jo
sbb
popf
cdq
iret
popf
fld
sbb
jno
data16
mov
ins
pop
push
jns
cs
sbb
sbb
jnp
push
mov
jnp
adc
and
cli
pop
inc
les
inc
inc
inc
add
dec
ret
sbb
ss
ss
test
xchg
pop
sub
sub
mov
cwde
bound
lea
call
shr
lds
test
inc
pop
xchg
lahf
popa
cmps
inc
addr16
lahf
jl
cwde
cmps
ins
imul
outs
mov
fucomip
pusha
test
mov
jne
pop
xlat
out
jge
dec
pop
js
(bad)
imul
js
inc
loope
js
fstp
cdq
pop
imul
and
jmp
loopne
add
inc
pusha
sbb
clc
add
and
sahf
call
dec
and
jo
int
retf
mov
push
shl
iret
mov
enter
push
int
(bad)
int3
or
fld
sahf
inc
sub
imul
fwait
pusha
jbe
push
cwde
aam
pop
inc
ja
xchg
in
cs
arpl
(bad)
mov
jno
out
js
mov
ja
je
imul
call
sub
dec
loop
sub
sub
int3
mov
stos
retf
pop
mov
jmp
fwait
(bad)
dec
jmp
lahf
shr
jmp
inc
retf
or
mov
xchg
mov
scas
test
cwde
shl
movs
mov
scas
fild
inc
cmp
in
pop
rol
fwait
mov
mov
mov
repz
push
iret
fnstsw
fcomp
ja
std
ja
(bad)
stc
ins
imul
ficom
sahf
pop
mov
(bad)
cwde
ret
cmps
mov
(bad)
sub
neg
cmp
loope
sbb
mov
add
adc
xor
mov
fisttp
push
xchg
cdq
call
in
ja
or
mov
sbb
push
inc
ins
sar
push
js
mov
repz
fcmovnu
jbe
ret
stos
pop
je
fdivrp
(bad)
retf
arpl
mov
inc
data16
xor
shr
push
or
(bad)
mov
mov
pop
jp
int3
cmp
mov
and
add
xor
mov
push
ret
ret
ss
(bad)
mov
ja
sbb
mov
mov
ins
lods
xchg
lods
push
int
push
imul
lods
loopne
dec
mov
(bad)
add
mov
repnz
int
and
mov
mov
cmps
hlt
pop
idiv
ffree
(bad)
jl
xor
or
xor
push
pop
loop
rol
call
icebp
or
(bad)
cmp
(bad)
fisubr
in
adc
call
mov
test
and
and
stos
and
and
sub
inc
dec
sub
mov
ficomp
or
and
jmp
cwde
push
leave
dec
xchg
pusha
lahf
mov
push
fsubr
test
frstor
inc
lods
daa
pushf
adc
cmp
xor
shl
pushf
mov
xlat
add
dec
push
les
adc
cmp
cmps
retf
mov
loopne
stos
rcr
jae
mov
and
nop
adc
aam
jno
pop
jmp
aad
xchg
xor
pusha
fild
adc
imul
movs
loopne
inc
xchg
xchg
and
cmp
jne
pushf
je
repnz
mov
push
test
lods
cld
cmp
pushf
shl
mov
in
outs
xchg
dec
cmc
xchg
aas
mov
sub
sub
repz
sub
xor
mov
mov
scas
mov
xchg
or
and
aad
mov
mov
adc
popa
rol
fwait
and
mov
aad
pop
shr
popf
pop
rcl
stos
push
lods
pop
xor
pop
(bad)
push
mov
outs
imul
or
mov
aam
gs
jns
mov
pop
push
dec
add
xor
dec
pop
fwait
adc
les
mov
and
ja
enter
movs
or
dec
push
jne
push
aad
mov
push
aaa
div
sub
adc
popa
add
movs
and
aam
xchg
pop
and
call
push
outs
xor
popa
dec
push
add
inc
dec
loop
push
repnz
push
(bad)
adc
mov
xor
(bad)
push
scas
or
loop
and
mov
push
ret
add
sbb
sub
loop
in
mov
sbb
popa
adc
mov
gs
stos
jns
xor
popf
mov
mov
jo
pop
in
mov
(bad)
ficom
rcr
mov
jbe
or
outs
pop
cwde
arpl
pushw
jo
jnp
sbb
ja
mov
pop
sub
sar
xchg
stos
je
sub
sbb
push
xchg
push
mov
loope
jecxz
or
xor
repnz
inc
push
mov
popa
out
aaa
stos
gs
pusha
xor
xlat
fsubr
push
test
call
push
mov
mov
sbb
cmp
adc
and
test
sub
or
push
jp
cs
dec
xchg
rcr
int3
add
xchg
pusha
fstp
jge
jbe
pop
test
jmp
inc
mov
sti
mov
mov
pop
inc
mov
and
test
shl
xchg
fisubr
pop
pop
in
sbb
popf
xor
pop
call
aad
pusha
add
xchg
ror
retf
dec
add
icebp
in
int
ret
sub
xor
sub
sub
loope
xchg
mov
fsub
or
add
outs
adc
mov
lods
push
sbb
cmp
mov
(bad)
dec
and
in
test
sti
mov
rsm
mov
jae
out
pop
jl
jecxz
or
cmp
adc
mov
nop
das
test
leave
test
das
inc
adc
xor
popa
push
xor
not
cmps
ds
mov
cmc
call
repz
xor
imul
or
inc
sbb
je
adc
loope
inc
xor
jmp
jl
outs
jbe
push
les
inc
lock
jl
mov
clc
and
xor
ja
vpsllw
xchg
mov
fucomp
pop
dec
ja
loopne
fs
ins
mov
repnz
(bad)
gs
pop
sub
dec
sahf
aam
ds
fsubr
inc
jns
xchg
or
mov
xchg
int3
je
sbb
xor
push
or
adc
xor
pop
sbb
popa
inc
adc
aaa
jno
ss
xor
out
adc
in
xchg
or
or
or
or
or
jnp
rol
jge
push
add
cmps
add
js
push
nop
jge
push
xor
sub
xchg
inc
imul
bound
dec
ins
out
jl
sbb
je
sub
sub
inc
ja
jno
xchg
add
xchg
ja
hlt
sub
xor
add
xor
or
js
cmps
jb
aad
das
in
xor
cmp
adc
mov
sub
popa
inc
ss
adc
movs
pop
pop
or
sbb
or
and
inc
or
or
or
cmp
pop
outs
les
cs
mov
pop
jl
ss
jne
bound
push
jo
out
inc
call
in
inc
cmp
pop
cmps
push
cmp
pop
imul
xor
or
pop
push
mov
pop
mov
cmps
(bad)
push
xlat
test
bound
std
xchg
pop
sub
adc
pop
xchg
loop
xor
and
pop
sbb
push
inc
sbb
(bad)
mov
add
add
xchg
adc
dec
or
mov
jg
or
fmul
push
(bad)
mov
or
add
mov
ss
dec
add
push
xchg
mov
jne
cmps
cmp
xchg
xor
mov
inc
pop
ret
push
aaa
ja
inc
mov
sbb
and
mov
in
lea
inc
xchg
sub
jb
clc
cmp
xlat
sub
imul
and
in
outs
cmp
in
push
gs
jnp
xchg
jp
mov
xchg
xchg
test
mov
inc
mov
pop
in
add
or
or
or
or
pusha
or
psubw
loopne
rol
cmps
lock
dec
pusha
add
sub
mov
imul
pop
sbb
out
push
outs
aaa
cmps
jl
or
call
ret
cmp
inc
push
mov
jo
test
mov
cmp
repnz
jp
test
rol
and
sub
in
out
xchg
xor
and
cmp
push
mov
push
push
add
mov
loope
mov
and
daa
jae
hlt
gs
jmp
mov
mov
mov
addr16
call
stos
loope
adc
adc
jnp
or
or
pop
or
test
push
cmp
xchg
adc
pop
and
popf
leave
jge
jmp
cmp
sub
or
in
arpl
ds
sbb
and
mov
mov
jae
cmp
xor
loop
pushf
fnstcw
lods
push
dec
and
and
add
mov
push
sub
adc
jne
pop
mov
pusha
jmp
scas
repnz
xor
dec
jmp
jp
add
aaa
cs
mov
enter
jo
stos
mov
idiv
mov
xchg
ret
(bad)
ror
fimul
and
or
or
mov
cdq
test
mov
jmp
xchg
pushf
jmp
cmp
cmp
sbb
mov
lods
loope
ja
dec
mov
pushf
aam
jle
aam
enter
loop
movs
pushfw
dec
jbe
repz
and
sbb
xchg
mov
movs
jmp
mov
fstp
loop
jp
add
pusha
add
pusha
add
inc
lods
daa
jo
hlt
dec
or
stos
lahf
mov
or
or
mov
mov
add
xor
call
sub
scas
imul
call
xor
mov
and
jbe
into
cwde
dec
fidiv
ja
push
cmps
jmp
inc
xchg
repnz
js
add
cli
xchg
push
addr16
sub
mov
jbe
xchg
push
gs
push
rol
or
(bad)
pusha
add
jo
shl
pop
add
add
stc
or
sar
sub
nop
scas
(bad)
pusha
or
scas
push
xor
xchg
jns
ret
mul
ja
stos
cmp
sbb
push
repnz
loop
call
test
push
jb
jae
push
inc
jno
cmc
data16
sbb
enter
mov
dec
popf
and
lea
mov
adc
or
push
out
or
push
xchg
jo
cmp
jbe
mov
mov
daa
sar
mov
or
inc
or
sbb
or
or
sub
mov
pop
test
fisubr
or
sub
ins
daa
pop
dec
cwde
xchg
adc
dec
adc
imul
mov
ret
adc
add
test
div
imul
mov
fcom
sti
mov
(bad)
cmp
mov
pop
cmp
adc
jo
into
push
lds
push
pop
or
nop
mov
int3
add
xchg
or
or
push
jg
or
add
jo
ins
and
xchg
mov
pop
imul
call
test
mov
mov
jmp
retf
pop
lahf
push
stos
out
mov
dec
ins
jp
lds
mov
(bad)
push
lock
ror
xor
add
movs
cmp
js
cmc
(bad)
out
jb
pop
lods
call
inc
inc
mov
pop
bnd
(bad)
pusha
add
or
fadd
(bad)
lock
mov
or
ins
lahf
nop
lock
cmps
adc
mov
lahf
mov
or
cmps
xor
add
mov
jl
stos
fcomp
imul
arpl
xor
mov
in
fcomp
int3
push
sub
or
mov
cmp
imul
repnz
jp
xor
push
fisttp
cmp
mov
jg
dec
jb
sub
inc
adc
loop
sub
xchg
imul
mov
dec
mov
cmp
mov
pusha
pop
cmc
pushf
mov
mov
lea
nop
sbb
xchg
sbb
clc
pop
jnp
fcomp
push
or
push
dec
xor
cs
jo
aaa
mov
shl
inc
ins
mov
push
pop
jmp
inc
sbb
ret
pop
mov
mov
int3
icebp
test
xor
pop
cmp
pusha
lahf
inc
dec
push
cmp
adc
pop
jp
push
inc
add
retf
(bad)
imul
jg
sbb
lock
lds
and
jb
sub
xchg
cmp
jne
je
mov
pop
lods
sar
inc
jo
imul
mov
sbb
iret
ja
or
or
or
or
xlat
mov
or
add
cdq
dec
loopne
xchg
dec
retf
mov
out
into
jmp
lods
or
mov
xchg
int
xchg
cmp
and
mov
retf
sar
add
inc
push
test
mov
shr
jmp
adc
inc
sub
int3
lods
int3
movs
out
push
movs
fs
jmp
ret
sub
push
jns
retf
fmul
push
aad
int3
xchg
mov
out
sbb
popa
mov
frstor
mov
call
mov
shl
sbb
shr
lea
adc
xlat
mov
ret
cmps
jle
or
ret
cs
add
in
add
loopne
in
rol
movs
sub
or
les
shl
imul
in
imul
retf
sbb
and
es
inc
sub
cli
shl
pushf
inc
std
pushf
das
into
aam
inc
add
fcomp
add
lea
sub
jb
aad
call
rcl
popa
mov
cmp
add
sbb
cmp
sub
xchg
in
fisub
cmps
cld
stc
in
ror
das
(bad)
jle
or
ret
or
fiadd
xor
shl
loopne
sub
lea
ret
xchg
fucom
cmps
pop
(bad)
mov
loope
sbb
scas
sar
js
add
shr
xor
jmp
in
ror
dec
in
clc
and
shr
gs
data16
add
out
inc
and
int
aam
fmul
lods
(bad)
cmp
mov
adc
fucomp
fadd
adc
mov
lea
ss
test
movs
movs
stos
mov
mov
jbe
or
or
nop
std
or
daa
fmul
ret
lahf
push
out
lock
out
add
add
add
ror
rol
ret
out
outs
add
push
out
sbb
jl
ds
repnz
xchg
push
push
into
sbb
and
jbe
lock
or
jo
or
outs
xor
push
movs
dec
dec
add
ds
loop
mov
sub
icebp
and
int
jecxz
hlt
ds
push
jb
push
mov
iret
sub
inc
jo
test
aad
fidivr
push
test
ret
push
gs
xchg
hlt
add
pusha
or
test
dec
pop
pop
jne
iret
int3
outs
or
in
in
inc
(bad)
jmp
jle
sbb
loopne
fsubr
fdiv
jl
adc
jl
loopne
push
add
sbb
(bad)
out
loopne
push
rol
scas
ret
test
lahf
out
(bad)
loopne
mul
add
loop
jns
sbb
clc
push
add
cmps
cmp
push
xchg
add
xor
movs
popf
mov
loopne
rol
add
adc
loopne
adc
jmp
mov
adc
add
jo
inc
inc
add
call
add
(bad)
popa
jno
dec
sub
push
sub
repnz
fdivr
int
sbb
into
in
cld
mov
fstp
pusha
rol
xor
add
sbb
(bad)
std
dec
cld
stos
add
inc
or
lahf
sbb
inc
sar
mov
fwait
lahf
pop
out
ret
lahf
(bad)
lock
add
inc
add
ins
stos
mov
inc
pop
pop
or
je
inc
dec
xchg
sbb
lods
mov
lds
pop
mov
mov
nop
and
ss
sbb
arpl
xchg
shl
and
adc
adc
dec
mov
and
mov
and
loop
or
sub
sbb
push
iret
and
pop
sbb
add
inc
mov
push
movs
push
or
sbb
jmp
inc
pop
out
add
pop
mov
aad
pusha
jnp
sub
into
push
sub
sub
adc
xor
inc
loopne
adc
pop
adc
js
loope
add
pusha
mov
pop
dec
es
fnstenv
mov
cwde
jno
ror
mov
nop
mov
dec
arpl
shl
fmul
sbb
add
or
mov
jl
fisub
sub
pop
inc
in
mov
mov
mov
dec
xchg
sub
outs
fs
xchg
cmp
and
mov
mov
popf
arpl
in
sbb
cmp
push
(bad)
push
and
bound
es
cdq
xor
push
fsub
sar
add
mov
inc
mov
enter
call
rol
cwde
sub
mov
add
or
loop
adc
sub
xchg
mov
adc
loop
sbb
dec
and
jle
stos
mov
xchg
sub
loopne
or
loopne
or
inc
mov
adc
mov
fadd
mov
or
add
push
sbb
mov
mov
adc
cmp
add
pop
jecxz
iret
ret
and
int3
cmp
ins
mov
ds
or
xchg
sbb
push
fcomp
mov
sub
int
push
adc
shl
push
xchg
adc
push
cmp
push
bound
and
inc
mov
test
in
pop
into
cmp
mov
mov
cmc
cmp
xchg
jns
adc
stc
inc
cwde
cld
xor
scas
mov
sbb
dec
and
sbb
inc
cmp
push
ds
or
mov
xor
xor
daa
and
mov
mov
mov
dec
and
mov
shl
push
(bad)
push
mov
and
or
test
mov
ret
sbb
les
cwde
sub
add
fnstenv
add
dec
mov
enter
cli
xchg
add
xchg
sub
cmp
int3
xor
inc
retf
or
sub
mov
mov
cmp
bound
shl
inc
ins
xor
inc
ret
or
mov
inc
test
xchg
lea
test
mov
mov
inc
jns
cmp
xchg
cmp
rol
jmp
cld
nop
inc
xchg
lods
movs
xchg
dec
sbb
out
pop
xchg
push
pop
daa
or
push
sub
fist
sbb
add
das
out
pusha
ret
mov
movs
mov
mov
push
sub
outs
dec
lock
or
in
or
js
mov
push
stc
inc
(bad)
dec
pop
enter
push
add
or
adc
int
cwde
js
jne
out
call
mov
nop
jmp
and
clc
shl
push
bnd
push
xor
and
repz
and
jns
ret
jo
sti
mov
rcl
add
ret
sahf
lock
mov
dec
or
or
mov
mov
rol
rol
lock
adc
or
mov
inc
or
add
mov
push
clc
mov
sbb
fs
xor
retf
(bad)
and
cmp
jae
nop
stos
sub
pop
sub
push
pop
cmps
mov
cmp
popa
mov
jmp
icebp
inc
lds
ret
jo
in
icebp
mov
ret
jb
jnp
mov
mov
xchg
and
repnz
and
push
mov
add
loopne
push
outs
xor
xchg
mov
test
loope
aad
rcr
and
add
cmp
test
or
sub
lock
inc
add
and
add
dec
out
push
das
dec
les
mov
or
lock
and
sbb
or
fidiv
cld
adc
pop
push
jmp
psubw
add
popa
dec
cmp
cwde
pop
int
add
fadd
add
mov
test
in
push
sti
dec
inc
push
cmp
jnp
and
cmp
xor
add
and
(bad)
rep
jns
dec
pusha
popa
add
pop
inc
mov
xchg
cdq
add
js
mov
cmp
mov
jge
sub
rol
xchg
fucom
push
scas
push
cmp
lock
inc
or
or
adc
dec
push
mov
and
pop
dec
and
jo
test
mov
inc
push
and
cli
push
mov
mov
add
sub
nop
add
in
mov
and
jb
sbb
lock
cmp
test
int
push
lahf
mov
(bad)
pop
push
sar
pop
js
arpl
icebp
test
mov
cwde
xor
or
pusha
fstp
mov
xor
push
xchg
add
shl
push
ror
inc
sub
sbb
add
and
test
adc
ret
adc
and
loope
sub
in
push
push
push
add
in
push
dec
or
adc
sbb
popa
adc
dec
push
push
shr
add
xchg
stos
xchg
sub
cdq
sbb
lods
dec
push
int3
or
or
sub
add
imul
clc
mov
mov
push
test
enter
adc
lods
mov
and
xchg
aam
add
ret
push
sub
inc
mov
cmp
pop
or
xchg
adc
mov
pop
call
out
setno
arpl
es
mov
loopne
(bad)
adc
(bad)
ins
or
ror
call
dec
cmp
mov
or
pop
push
out
cli
mov
mov
sbb
ret
fst
stos
xchg
adc
ror
or
sar
and
call
sub
push
inc
mov
pop
or
dec
inc
adc
cmp
retf
jo
(bad)
(bad)
xor
inc
jne
add
rcr
fstp
fwait
ret
rol
jle
add
retf
add
mov
jno
add
jmp
pop
mov
add
loopne
mov
das
or
pop
ret
sbb
lods
mov
ins
dec
xor
(bad)
or
xor
dec
mov
or
pop
fmul
xchg
or
fcom
xchg
cmp
sbb
mov
adc
aam
xor
bound
stos
mov
and
or
jo
(bad)
push
or
inc
inc
(bad)
pop
mov
jae
inc
mov
jl
mov
jb
and
dec
xor
mov
repz
out
add
inc
sti
add
sbb
jno
ss
add
inc
adc
fwait
arpl
add
push
lahf
nop
inc
mov
sbb
pop
loop
cld
push
aas
pop
adc
mov
adc
and
jp
pop
ds
dec
adc
adc
push
retf
dec
mov
add
pop
sbb
xor
add
jo
add
xor
mov
ds
sbb
js
inc
movs
movs
mov
push
inc
push
cmp
ret
lock
and
fadd
adc
adc
sub
pop
dec
loope
xor
add
pop
pop
push
dec
cmp
adc
call
(bad)
aad
ds
lods
inc
ds
add
nop
sbb
sub
ror
or
enter
mov
rcr
jb
mov
dec
add
jns
sbb
and
xor
adc
dec
adc
daa
add
sub
outs
retf
repnz
jmp
adc
or
or
push
mov
les
pop
push
mov
cmp
add
sbb
adc
fwait
add
pusha
add
pusha
cmp
add
(bad)
bound
mov
sbb
cld
xor
cwde
mov
xchg
mov
test
lock
(bad)
clc
adc
xor
add
inc
mov
sub
pop
fwait
or
fwait
cdq
pop
adc
loope
jle
or
test
(bad)
push
cmp
add
add
push
inc
inc
push
add
xor
inc
sbb
pusha
add
repz
rcr
adc
pusha
sub
add
cmp
mov
or
sbb
aaa
add
sub
mov
push
mov
push
and
pop
sbb
sbb
push
push
repnz
sub
lods
push
add
mov
or
add
and
cs
xor
sub
mov
out
add
retf
add
or
fld
and
xor
sbb
stc
add
mov
and
add
inc
mov
rcr
mov
int
mov
sbb
push
push
and
add
inc
xor
mov
sbb
sub
push
sub
mov
add
cs
aam
add
imul
inc
xor
rol
or
mov
inc
add
pusha
and
mov
xor
sub
xor
inc
into
push
or
pop
sub
sbb
jmp
adc
xor
jno
sub
dec
retf
add
repz
adc
sub
aas
or
xor
adc
and
repz
enter
and
xchg
mov
add
retf
add
push
je
adc
add
loopne
scas
movs
inc
push
cmp
xor
sbb
mov
push
sbb
imul
add
sub
jnp
add
mov
repz
xor
call
and
sub
dec
adc
sbb
dec
jp
test
adc
sbb
adc
add
push
xchg
mov
or
push
jo
mov
pop
xor
repnz
mov
mov
dec
clc
add
js
push
fdivr
push
icebp
les
fadd
mov
sbb
or
xchg
inc
adc
sbb
add
push
int3
cmp
sahf
and
sbb
adc
cs
jl
xor
and
add
cmp
js
add
mov
mov
sub
(bad)
xor
add
scas
or
add
sub
jmp
cs
or
pop
or
or
sbb
mov
imul
clc
add
push
sub
and
cmp
lock
daa
clc
sbb
or
cwde
cmps
mov
es
add
lock
push
push
in
shl
(bad)
mov
les
mov
fs
or
or
xor
arpl
fdivr
push
jo
add
enter
js
sub
adc
sub
push
inc
adc
fld
test
loopne
cmp
fadd
in
xor
sub
sub
mov
or
aaa
test
sbb
retf
push
push
add
sbb
aad
fidivr
or
mov
mov
or
scas
mov
adc
lods
add
cmp
test
mov
sub
adc
jo
mov
test
sbb
pop
rol
mov
cmp
cmp
add
call
ins
les
cmp
sbb
dec
cmp
add
add
cmp
sub
xor
dec
add
push
ret
mov
stos
mov
sub
push
push
stc
or
ret
mov
add
inc
mov
aas
or
in
xor
rol
push
dec
rol
sub
dec
call
aas
inc
fimul
pushf
cmp
out
add
loopne
inc
push
sub
test
and
cmp
sub
sbb
push
add
js
cmp
mov
and
and
add
adc
push
sub
and
nop
add
js
xor
enter
rol
loope
adc
xor
sbb
cmps
sbb
fdiv
lahf
push
fcom
lods
shl
je
adc
or
add
test
and
jnp
mov
mov
and
or
test
es
add
mov
mov
push
jmp
xor
jecxz
adc
sbb
test
and
lahf
ror
add
ret
pop
pop
cmp
shr
rol
or
mov
sub
add
adc
push
pop
pop
push
fldcw
push
mov
push
mov
pop
pop
rol
clc
or
cmp
mov
push
dec
mov
fisub
add
mov
cmp
add
rol
fnsave
movs
ficom
mov
sub
sub
jnp
mov
pop
jo
pop
mov
or
pop
adc
and
and
call
cmps
add
adc
dec
push
inc
or
fld
fnstenv
xchg
scas
call
xchg
dec
mov
cmp
sub
cmp
sbb
add
fwait
push
sbb
cmp
sti
and
add
lods
(bad)
cmp
and
add
cdq
test
ror
rol
xchg
sub
sbb
cmp
and
or
dec
scas
in
fstp
shl
out
add
xchg
mov
ins
and
xor
test
in
pushf
clc
std
and
bts
push
adc
and
inc
cwde
push
add
loopne
adc
lock
lock
ret
push
push
mov
mov
sub
aas
cmp
addr16
sub
add
jno
test
sbb
or
mov
sbb
mov
add
and
jne
adc
or
or
inc
adc
out
fcom
adc
xchg
mov
sub
mov
push
add
and
cmp
dec
fsub
movs
popa
or
add
sub
popa
js
add
in
and
lea
sub
fidiv
sar
add
push
pop
add
push
or
or
sbb
fadd
add
bswap
xchg
sbb
pusha
cvtdq2ps
add
loopne
dec
rol
call
or
dec
add
imul
sbb
push
push
lods
cmp
mov
movs
test
sar
and
sbb
add
and
add
or
add
and
and
xchg
sbb
in
iret
(bad)
adc
dec
ins
(bad)
xor
push
xor
adc
and
popa
nop
mov
aaa
mov
fst
in
fcmovu
in
fidiv
dec
mov
xchg
dec
mov
fcom
sub
and
in
sahf
or
fsubr
sub
cmp
cs
fst
push
jbe
xor
add
xchg
rol
sahf
pop
jge
add
pop
pusha
xchg
xchg
cld
add
add
popaw
test
in
pop
loopne
push
jmp
dec
add
push
test
add
jo
fwait
pop
gs
dec
add
adc
pushf
jo
call
or
jo
out
lock
adc
(bad)
out
outs
add
ss
dec
icebp
enter
dec
mov
(bad)
ins
sbb
ins
or
icebp
cmps
mov
adc
out
cmps
mov
adc
out
rcr
jno
adc
and
push
and
xchg
fcomp
sub
jmp
mov
popa
sub
xor
sbb
fdiv
in
inc
xor
inc
popf
into
jmp
repz
sub
adc
add
mov
es
add
repz
push
test
js
jl
add
fs
mov
inc
por
pushaw
mov
test
test
(bad)
popa
push
add
rol
xor
je
cwde
dec
xor
mov
lock
aad
mov
or
mov
or
add
jno
jle
cwde
sbb
retf
int
in
int3
out
ins
cmps
adc
sub
adc
imul
ins
aam
add
sbb
mov
test
jbe
push
daa
sbb
ja
fimul
inc
ja
daa
mov
xor
cmp
js
add
out
cs
add
mov
das
cmps
and
pop
repz
(bad)
and
adc
xor
sub
pop
xchg
js
cmp
xchg
xchg
cmp
into
movs
in
aas
xor
(bad)
test
test
ret
cmp
add
jmp
push
lock
jmp
pop
mov
cmp
aas
mov
mov
in
cmp
mov
add
or
push
icebp
pop
pop
jno
das
icebp
sbb
ins
xchg
ins
mov
xchg
outs
arpl
adc
jno
cdq
icebp
and
jno
daa
repnz
sti
adc
and
in
and
in
fdiv
mov
jb
scas
bnd
imul
jmp
mov
jns
jmp
lods
mov
out
inc
icebp
imul
adc
faddp
xor
xchg
lock
gs
cmc
xchg
xlat
pop
ins
and
pop
ins
mov
jmp
pop
inc
lock
dec
out
add
sbb
inc
mov
mov
add
jns
das
jne
jbe
call
(bad)
jne
lahf
jle
scas
jle
xlat
fucompp
pop
cli
ret
mov
in
xchg
adc
lock
cli
adc
adc
addr16
xchg
out
data16
jno
pop
in
stos
sub
push
jb
jno
sti
aaa
push
jo
or
add
push
pop
adc
shl
rol
test
sub
and
push
fmul
cwde
gs
xor
mov
and
shl
data16
and
or
adc
sbb
mov
dec
pop
sub
mov
push
test
gs
jecxz
dec
(bad)
add
ja
bt
cld
ins
bound
cmp
xor
push
cmps
push
mov
shl
push
sahf
sahf
call
xchg
sub
push
jmp
outs
lods
mov
je
shl
fld
aam
push
xor
push
movs
repz
cwde
inc
mov
dec
fcmovb
out
aaa
ins
mov
in
cli
push
ins
fcom
mov
add
dec
ins
push
aaa
data16
add
rol
ret
adc
int3
push
out
pop
xor
shl
inc
mov
fld
cli
cmc
in
sub
(bad)
mov
sub
std
inc
mov
sbb
and
and
div
sub
in
pop
lea
test
shl
adc
adc
popa
push
cmp
test
test
out
mov
xchg
dec
xor
mov
movs
or
push
push
mov
add
hlt
adc
aas
pop
jge
iret
pop
fild
sbb
mov
lahf
movs
and
inc
push
daa
scas
fadd
adc
pop
mov
mov
daa
dec
push
push
movs
push
pop
jbe
lds
or
pop
gs
cmp
push
call
movs
(bad)
call
mov
inc
sbb
add
sbb
fsub
jae
push
test
bound
jbe
push
add
dec
inc
dec
sbb
shl
inc
nop
sub
and
sub
inc
je
inc
push
xor
stos
inc
imul
shr
dec
rcr
xchg
xor
xor
adc
dec
int
adc
adc
clc
mov
xchg
or
ror
cmp
sub
(bad)
xor
push
call
and
add
jle
or
popf
clc
add
in
scas
xor
dec
add
mov
pop
sub
gs
cwde
mov
push
in
cdq
fs
movs
pop
sbb
mov
ss
fisttp
mov
or
outs
xor
sub
mov
mov
je
inc
pop
push
js
jns
fst
in
inc
sahf
jnp
(bad)
xlat
popf
jns
sub
rcl
mov
push
aam
aad
aad
inc
jg
xchg
xlat
dec
retf
or
scas
mov
and
or
enterw
inc
jmp
push
and
add
or
push
fmul
cmp
push
aas
xor
stc
add
mov
and
in
sub
mov
sub
lock
gs
test
pop
cs
les
mov
dec
sti
(bad)
cmps
fisttp
push
fstp
mov
lahf
jle
pop
push
test
leave
inc
jmp
ja
popa
sub
jns
dec
in
fiadd
das
hlt
jmp
push
fldenv
or
je
dec
ret
mov
cmp
jmp
dec
int
dec
test
and
retf
add
or
mov
je
add
rol
sub
adc
mov
pusha
mov
and
inc
inc
add
and
test
and
movs
ret
mov
dec
cmp
loopne
nop
xchg
mov
mov
retf
mov
lods
or
cs
or
sub
xchg
push
push
test
aad
dec
pop
mov
xor
mov
movs
or
aam
xor
stos
pop
sub
xlat
fsub
ins
push
sbb
mov
and
add
fwait
adc
sub
inc
push
add
sub
jle
push
add
icebp
cmp
sbb
or
and
push
adc
mov
xor
bound
in
loop
imul
cmp
inc
js
push
xchg
jo
adc
pop
dec
nop
and
rcl
das
sub
or
add
mov
call
pop
es
push
mov
push
cmps
and
or
das
aam
or
arpl
xchg
mov
inc
push
xchg
pusha
jo
in
movs
inc
push
cld
in
loop
mov
or
jns
nop
rol
add
mov
or
mov
sub
mov
hlt
mov
jge
int
pop
push
push
mov
xor
and
add
push
mov
xchg
mov
fadd
adc
pop
mov
inc
cs
mov
jae
arpl
jmp
mov
arpl
adc
les
push
sub
pop
dec
inc
sub
bound
stos
cwde
inc
xchg
mov
and
xor
jmp
sahf
mov
jl
loope
dec
clc
add
loopne
mov
clc
(bad)
pop
mov
pusha
xor
push
ins
jecxz
cmp
adc
test
xor
jl
add
or
call
ret
mov
push
adc
fs
dec
or
pusha
or
dec
push
dec
mov
or
daa
and
and
add
loopne
(bad)
add
jo
rol
mov
ds
clc
xchg
jp
or
and
and
add
or
sbb
add
mov
in
jge
pop
jmp
xchg
mov
add
in
arpl
enter
mov
arpl
mov
add
or
pop
jne
xor
ror
and
and
adc
mov
xor
int3
or
inc
dec
nop
jo
inc
loopne
add
mov
inc
push
pop
and
xor
mov
pushf
adc
out
fstp
push
inc
pop
jbe
xor
mov
cli
in
dec
ss
test
outs
ror
mov
loope
lea
inc
inc
adc
sahf
mov
sbb
and
xor
inc
push
jo
add
in
or
xor
pop
xor
sbb
xchg
loop
imul
(bad)
mov
gs
push
call
push
add
cmps
jmp
gs
mov
jge
adc
mov
inc
push
repz
mov
ret
sub
loope
iret
cmp
test
cmp
dec
cwde
jne
jl
ret
xchg
lock
mov
adc
loope
pop
pusha
add
jl
pop
jno
ror
fadd
sub
jae
das
loopne
pop
aam
mov
data16
ja
sub
or
adc
add
or
pushw
sub
cdq
push
jbe
das
add
in
pusha
pop
add
add
loope
pusha
add
clc
inc
pop
or
lock
or
pop
or
loopne
sbb
ret
adc
inc
add
mov
sbb
ficom
int3
pushf
xchg
and
fist
and
and
inc
sbb
or
dec
popa
ins
cmp
xchg
and
inc
dec
adc
pop
push
rcr
push
adc
push
add
add
mov
(bad)
inc
inc
dec
pop
mov
or
sbb
jo
push
lahf
fcmovbe
lock
lock
lock
mov
inc
cs
mov
pop
xor
jno
push
call
cmp
and
pop
test
lods
add
repz
aaa
jmp
sub
les
ds
sub
mov
loope
shl
test
add
or
pusha
add
movs
fisttp
adc
add
cmp
sbb
xor
inc
frstor
enter
pop
mov
loope
sti
push
inc
adc
add
pusha
or
add
inc
and
loopne
repnz
dec
inc
mov
test
adc
add
clc
(bad)
iret
add
(bad)
(bad)
adc
pushf
fst
and
js
aam
les
in
adc
add
push
sbb
jle
and
aaa
cmp
neg
lahf
icebp
inc
add
fs
movs
inc
add
xor
cli
pop
inc
or
pop
sub
dec
ins
push
ja
sbb
aam
or
and
test
push
mov
push
adc
xor
cdq
call
cmp
adc
push
and
rcr
jo
daa
cmc
add
pushf
sub
sub
sub
sub
sub
push
hlt
adc
adc
pop
js
popa
and
pop
imul
add
mov
cli
inc
and
loopne
pop
mov
sbb
rcr
adc
loopne
les
or
push
rcr
adc
rcl
sbb
inc
or
shl
aaa
loopne
paddq
pop
dec
inc
sbb
add
or
add
lods
shr
add
adc
pop
fadd
push
adc
inc
jo
ror
add
xor
or
add
shl
inc
push
rol
add
cld
inc
adc
aas
add
push
lods
inc
adc
not
inc
adc
add
inc
push
push
add
int3
pop
add
hlt
inc
push
pop
inc
shr
sbb
cmp
push
pusha
inc
adc
movs
and
push
inc
int
sub
add
in
sbb
psubsb
fmul
pop
xchg
fcomp
retf
fmul
inc
inc
jp
test
inc
push
push
lods
fst
mov
ss
add
pusha
ret
in
(bad)
ffreep
inc
push
sbb
push
outs
popa
mov
add
xchg
mov
dec
sahf
sub
ret
and
fidiv
jno
xor
xchg
mov
push
fadd
push
lock
and
and
add
add
mov
add
pop
in
cwde
adc
inc
adc
fcomp
and
scas
ror
push
or
inc
adc
test
aaa
rol
and
je
sbb
mov
or
in
or
psubusb
push
rol
and
aaa
fcmovu
shrd
mov
add
int
add
movs
inc
and
in
nop
fcom
fcomp
bound
push
inc
pop
and
adc
ror
ds
arpl
outs
jmp
adc
in
cwde
and
adc
add
cld
inc
xor
inc
inc
add
movs
arpl
add
call
push
mov
inc
test
dec
adc
dec
movs
dec
movs
dec
or
inc
push
cmp
add
aam
mov
and
jnp
fstp
add
sub
xchg
ss
add
add
push
mov
pop
ret
add
xor
ss
loope
add
mov
sbb
push
retf
dec
cwde
daa
lods
ret
rcr
pop
push
and
jne
enter
cmps
add
and
push
mov
rcl
inc
sbb
or
lock
std
loope
sbb
ror
inc
pop
(bad)
out
push
ja
cmps
int
jecxz
sbb
or
mov
js
aaa
movs
jecxz
jle
or
add
icebp
ret
xchg
ficomp
add
add
scas
add
xor
sbb
pop
push
add
shr
fsub
movs
arpl
loopne
sahf
push
rcl
adc
movs
and
fisub
dec
and
lock
adc
les
add
lods
movs
add
call
scas
js
sbb
pop
inc
pop
or
jl
inc
xchg
sbb
xor
je
sbb
push
mov
inc
add
sub
adc
shr
add
add
sub
inc
aaa
sbb
mov
cmp
inc
and
pop
sahf
add
xor
in
add
and
fisubr
nop
and
jmp
pop
and
movs
adc
aaa
push
fwait
mov
and
adc
rcl
das
cmp
add
add
lods
repnz
add
imul
sbb
adc
add
sub
loopne
xchg
fisub
enter
or
or
pop
shr
xchg
xchg
add
out
adc
gs
sbb
sbb
pop
imul
add
add
rcl
and
popa
mov
dec
loopne
mov
cmovl
push
jl
add
das
push
inc
rol
jns
jmp
dec
loopne
jnp
xchg
ja
xchg
inc
jp
adc
xchg
movs
mov
push
mov
mov
sbb
jo
xchg
adc
adc
and
jmp
add
aaa
xor
cmp
inc
test
add
aam
sub
mov
sub
out
cs
add
in
and
mov
add
pop
push
add
rcr
mov
inc
adc
rcr
icebp
cmp
out
adc
sub
ret
int
rol
add
sbb
pop
adc
or
ror
sub
mov
jns
sti
dec
(bad)
cli
jb
or
sub
stos
out
or
ror
pushf
or
popf
retf
loopne
popf
(bad)
inc
test
pushf
push
add
add
adc
imul
outs
push
pop
inc
push
jl
add
sbb
call
movs
mov
sbb
dec
loopne
fadd
cmps
push
inc
fst
inc
push
mov
test
fsubr
movs
pop
mov
push
leave
push
scas
out
jmp
cmp
(bad)
sar
daa
movs
std
push
xor
(bad)
mov
xor
push
jge
xor
inc
adc
pop
aam
adc
test
pop
add
add
aas
pop
inc
aaa
enter
cmp
inc
jmp
sub
popa
in
fdivp
cs
sub
add
inc
inc
mov
rcl
imul
mov
jmp
push
pushf
cwde
pop
sbb
sbb
shr
adc
fs
add
inc
add
push
xor
adc
or
cmp
adc
inc
push
int3
cdq
push
clc
sub
inc
rcl
shl
mov
xchg
add
shl
ds
sahf
mov
adc
adc
pushf
add
inc
push
stos
retf
add
pop
or
xor
dec
sub
xor
add
add
retf
push
add
cmp
adc
rcr
inc
push
arpl
pop
pusha
sub
adc
pushf
test
lods
lods
cs
jg
sub
sub
call
in
or
sbb
sub
sub
cmp
sub
adc
sbb
lock
and
add
add
jno
xor
call
inc
jmp
sub
push
sub
add
add
mov
pop
inc
or
lock
cmp
pop
sbb
push
test
in
ret
sbb
popf
mov
or
add
les
in
and
and
adc
xchg
inc
(bad)
xor
lahf
stos
out
add
and
ins
shl
cdq
mul
push
adc
subps
les
or
aas
repnz
rcr
add
xor
fucomip
sub
cmps
aaa
into
add
or
aaa
lock
push
sar
inc
(bad)
and
jo
cmp
sub
sub
mov
sbb
add
jge
and
daa
sbb
mov
add
jg
ds
jle
inc
(bad)
retf
loop
jne
icebp
adc
jno
stc
push
xor
mov
pop
fisubr
test
adc
inc
ja
neg
xor
dec
rcr
movs
shl
sub
cs
inc
aaa
je
xor
and
sbb
sub
ret
jmp
sub
inc
push
out
mov
sti
add
rol
mov
or
ins
adc
ret
inc
mov
adc
xchg
adc
paddq
adc
adc
pop
ror
pop
or
add
shr
and
ror
js
xchg
xchg
xor
mov
sbb
adc
xor
ror
inc
or
adc
and
leave
jmp
adc
push
js
or
pushf
fcom
mov
dec
and
fcmove
and
dec
add
not
push
add
adc
sbb
mov
dec
mov
pusha
add
nop
inc
push
or
push
repz
pusha
inc
das
enter
add
loopne
inc
fwait
cmps
inc
dec
pop
inc
mov
rcl
jmp
jg
xor
repnz
rcr
imul
cmp
lods
inc
push
test
out
fcomip
shl
scas
stos
(bad)
out
call
inc
das
aam
dec
lahf
cmp
sub
ret
cmp
clc
inc
cs
sbb
and
inc
call
in
pop
push
or
sub
ret
out
movs
fwait
adc
push
cmps
call
lahf
in
or
lods
adc
inc
or
inc
pop
test
pop
xor
jne
pop
rol
test
arpl
shl
push
test
leave
adc
les
or
cdq
ja
mov
mov
jl
ins
push
lods
xchg
out
mov
jo
(bad)
int
mov
jecxz
dec
sbb
sbb
into
push
mov
ja
add
test
int
or
cmps
scas
lods
add
cld
sbb
movs
and
inc
xchg
push
push
push
sbb
in
jmp
fadd
jmp
add
jne
test
adc
mov
test
sar
lods
fld
lock
mov
dec
repz
scas
(bad)
mov
loopne
test
inc
push
or
data16
push
pop
ror
adc
mov
fld
fadd
mov
dec
aaa
pop
out
imul
inc
retf
rol
inc
in
add
rol
cmp
jo
mov
fsubp
js
xor
test
or
lahf
xchg
adc
inc
pop
jo
or
rcl
and
out
scas
cdq
aad
push
lds
fadd
les
add
jg
xchg
sbb
push
dec
dec
push
test
je
lods
je
rol
inc
mov
lods
xchg
dec
dec
add
add
xlat
shr
mov
xor
and
add
dec
std
mov
jp
mov
cmp
dec
aas
add
add
clc
in
rol
sti
or
xor
pop
inc
mov
add
mov
mov
lea
retf
xlat
and
loop
les
call
mov
mov
pop
pop
fsubr
stc
rol
or
mov
movs
dec
push
sub
add
retf
aaa
push
pop
popa
add
(bad)
sbb
pop
jo
ficom
dec
mov
mov
rcl
inc
inc
mov
sub
test
adc
push
or
cmp
and
fcomip
cmp
inc
test
adc
cmp
nop
push
xchg
daa
inc
outs
mov
mov
sub
repnz
and
hlt
adc
and
int
xlat
push
int3
mov
fdivr
mov
xchg
jle
dec
jb
and
sbb
bound
mov
cld
push
and
aas
inc
or
arpl
jecxz
mov
test
jae
xchg
cmc
sbb
pop
ins
repnz
out
jl
fldenv
js
jmp
pop
pop
jp
or
xchg
cbw
cdq
out
pop
dec
loop
mov
xchg
fsub
and
or
mov
dec
xchg
outs
fimul
inc
sahf
je
mov
mov
mov
inc
movs
xor
adc
popa
enter
jmp
push
xor
or
daa
(bad)
test
mov
mov
icebp
cli
xchg
scas
adc
adc
mov
in
cs
leave
pop
stos
stos
xor
mov
repnz
xor
dec
xor
sub
dec
xor
xor
xor
mov
sub
in
cmp
scas
mov
inc
push
outs
cmp
(bad)
or
or
test
pop
gs
adc
pop
rcr
push
repz
lock
les
pop
mov
in
repz
mov
pop
jl
aam
cmp
daa
add
jbe
cmp
adc
hlt
mov
or
push
ret
pop
pusha
adc
fwait
in
mov
pop
sbb
and
movs
push
cmps
add
xor
jmp
sbb
dec
test
fdiv
retf
mov
mov
dec
inc
add
add
push
cld
xor
xchg
push
dec
mov
push
xor
dec
fwait
pop
push
rol
mov
inc
adc
jle
sbb
or
mov
gs
arpl
mov
aad
mov
outs
mov
mov
cmp
fdivr
loop
(bad)
ins
das
cwde
nop
mov
enter
mov
cdq
daa
sahf
js
pop
(bad)
pop
push
sbb
imul
in
or
cmp
and
dec
mov
or
dec
mov
push
pop
int3
or
out
vshufpd
jmp
and
pop
dec
push
xchg
sub
leave
stos
mov
mov
repnz
pusha
and
xor
xor
cmps
fwait
adc
test
mov
div
xchg
out
add
sahf
push
and
xor
dec
jmp
inc
outs
xor
call
push
in
sbb
scas
mov
std
push
pop
std
or
repnz
(bad)
mov
ins
outs
sub
call
sbb
jns
aaa
movs
jne
ja
mov
cmp
mov
mov
adc
clc
inc
fild
imul
xchg
push
outs
inc
or
mov
dec
pop
and
sbb
inc
sub
jmp
or
xchg
and
inc
inc
jne
inc
add
push
and
in
pusha
pusha
push
retf
in
aam
mov
cmp
bound
sbb
mov
mov
pop
push
(bad)
xchg
imul
mov
jns
mov
xor
jmp
push
outs
and
push
lahf
jb
xchg
inc
stos
out
pop
nop
aad
xchg
aam
ret
popf
adc
inc
(bad)
jp
lds
cmc
jmp
dec
cmp
adc
sub
pop
add
adc
fisub
mov
les
add
rol
dec
add
sbb
and
jno
inc
rol
add
push
inc
or
adc
pushf
sbb
jae
mov
push
push
xchg
iret
cmp
sub
xor
pop
and
cdq
dec
dec
cmps
mov
cmp
stos
push
adc
xor
int
jbe
leave
sbb
mov
mov
ds
xor
in
shr
fldenv
out
in
push
rcl
push
sub
and
cmp
test
and
sbb
dec
mov
test
test
xchg
fist
adc
inc
inc
movs
scas
push
leave
push
inc
dec
pop
pop
lock
push
xchg
adc
pusha
fwait
inc
hlt
or
stc
ror
push
call
movd
mov
in
adc
pusha
xor
jno
pusha
cmp
and
js
sub
fadd
and
xor
mov
and
in
jae
leave
mov
and
ror
push
mov
les
jp
mov
dec
cmp
ret
into
loopne
dec
aam
pop
loop
into
mov
das
jp
pop
bound
mov
xor
cmp
or
call
shl
(bad)
sbb
outs
cmp
sbb
(bad)
adc
xor
out
imul
fisttp
nop
fidivr
sahf
pop
xor
fwait
pop
call
mov
pop
js
cmp
add
inc
ds
mov
mov
int3
rcr
xor
sub
adc
push
outs
cs
jno
dec
fsub
jl
cmc
and
sub
retf
lods
loope
cmps
stc
adc
ficom
nop
inc
push
sar
cmp
push
sub
or
out
sub
into
loope
das
add
cli
add
dec
sub
sbb
inc
(bad)
iret
push
xchg
jp
ds
push
push
xchg
mov
mov
jecxz
ficomp
cmp
xor
int3
xchg
pushf
mov
int
in
retf
mov
stos
popf
cli
and
dec
shl
aaa
adc
xchg
xchg
inc
cs
lock
sub
stc
pusha
loopne
cmps
sti
sub
mov
mov
(bad)
in
xchg
call
cs
xchg
push
push
and
adc
xor
dec
sar
popa
xchg
sub
inc
gs
popa
rcl
mov
int
jno
scas
jle
cwde
xchg
cli
sbb
sub
ret
sub
adc
mov
jns
addr16
fldenv
leave
and
lahf
int
ret
and
push
mov
mov
(bad)
sbb
cli
mov
push
or
call
xchg
ins
jne
mov
push
fnsave
mov
dec
in
js
in
sub
jns
pop
mov
sbb
retf
dec
mov
mov
fisub
sbb
mov
mov
loope
addr16
js
xor
jns
add
cmp
mov
and
into
rol
and
and
add
enter
or
iret
adc
es
dec
add
les
into
dec
pop
retf
push
jo
mov
ja
cwde
(bad)
sbb
js
cmp
icebp
sub
aas
aad
loop
or
inc
test
test
cmp
das
ds
mov
xchg
jnp
in
jne
jnp
sub
scas
out
mov
dec
xor
movs
pop
jecxz
xchg
popa
jmp
sahf
repnz
push
and
mov
add
cmp
xchg
loope
mov
ja
pop
pop
mov
loopne
icebp
(bad)
inc
and
sbb
daa
jns
or
adc
rcr
fmul
and
ficomp
sub
leave
add
mov
(bad)
adc
sub
ret
cwde
test
stos
xchg
les
in
sbb
retf
pop
fldcw
int3
cmp
cmp
xor
movs
jle
jecxz
loope
(bad)
cmp
xchg
jb
or
and
cmp
imul
lahf
fucom
mov
mov
jno
jge
xor
or
xor
or
sbb
ret
je
mov
adc
int
push
jl
add
push
rol
xchg
or
daa
and
retf
jae
dec
loope
and
scas
je
rcl
or
sub
sbb
or
add
fmul
sahf
fimul
shr
dec
dec
xor
ins
xor
enter
out
add
mov
sbb
push
js
out
psubb
clc
mov
or
fmul
jle
scas
pop
je
add
addps
ror
gs
stos
dec
jmp
mov
mov
or
adc
inc
setle
jbe
fstp
jo
int3
pusha
or
mov
in
das
jb
mov
jbe
mov
xchg
dec
add
lods
xchg
outs
lods
mov
mov
lea
shr
push
xchg
adc
ss
scas
call
or
lods
ret
aam
adc
push
xor
dec
dec
(bad)
out
mul
out
addr16
pop
adc
dec
pop
mov
(bad)
dec
jmp
test
adc
xor
cmp
mov
das
fnstcw
push
loop
mov
sti
in
add
mov
sbb
mov
sbb
ins
mov
leave
sahf
ins
pop
mov
or
(bad)
test
(bad)
add
inc
jae
jmp
xchg
pusha
loope
int3
loope
inc
sub
xor
shr
mov
repnz
sub
popa
or
adc
shl
push
sub
fsub
inc
push
and
and
xor
xchg
popa
lods
pushf
push
ins
pop
pop
in
or
mov
pop
mov
jo
ins
mov
and
mul
js
ret
jl
xor
ss
sbb
mov
loop
or
jmp
mov
nop
pop
scas
mov
test
push
cmps
jno
stos
int
retf
pusha
or
or
pop
mov
or
xchg
and
xor
out
inc
add
icebp
dec
daa
xchg
pusha
call
out
adc
sar
jb
(bad)
cli
xchg
repz
shl
dec
cmp
ja
xor
loopne
das
sbb
add
xchg
adc
repz
jmp
push
sub
pusha
adc
jno
push
imul
dec
xlat
cli
mov
clc
pop
dec
sbb
push
arpl
stos
data16
sbb
jmp
mov
jmp
ins
sub
sub
or
pusha
sub
cmp
mov
mov
adc
jb
add
sub
out
je
and
adc
or
cs
pushf
les
cmp
and
out
and
repz
int
cmp
gs
div
push
mov
jb
and
adc
jb
push
fisub
and
adc
(bad)
punpckhdq
push
mov
jg
sar
(bad)
jle
pop
mov
jmp
mov
sub
push
mov
mov
sub
sub
cmp
and
add
inc
pusha
jae
hlt
sub
dec
jne
rcr
push
mov
sub
inc
shl
nop
dec
mov
popa
lods
mov
shl
sub
das
xchg
dec
ror
push
adc
or
sbb
xor
xor
xor
in
adc
mov
xor
pop
mov
cmp
out
hlt
push
inc
xor
ja
lahf
mov
mov
mov
sbb
cmp
loopne
mov
mov
mov
adc
mov
sub
inc
popa
hlt
sub
or
sub
mov
jne
fbld
pop
ror
arpl
loope
ret
and
mov
jae
pusha
es
popa
fs
rol
pusha
(bad)
xor
repz
and
mov
iret
add
repnz
sti
mov
push
push
mov
and
mov
jecxz
pop
adc
data16
add
and
xor
mov
push
xchg
adc
push
jmp
and
das
sbb
adc
pop
xchg
inc
push
aam
scas
shr
lods
jb
addr16
or
popa
jno
push
ret
jb
jnp
pop
add
push
in
sub
dec
xor
dec
gs
in
sub
push
inc
test
shl
mov
aas
mov
push
mov
and
or
hlt
sub
jmp
and
xchg
dec
push
ins
out
in
idiv
inc
inc
rcl
pop
xchg
pop
leave
out
xchg
arpl
push
adc
mov
call
and
jae
push
mov
aaa
lahf
mov
movs
icebp
push
lahf
push
push
cmps
jb
or
ins
je
inc
adc
and
(bad)
cli
xor
sub
sub
sub
outs
push
push
push
(bad)
mov
adc
add
and
jbe
push
sub
cmps
and
shl
mov
daa
push
pop
in
push
mov
xlat
pop
std
push
and
je
add
and
adc
rcl
inc
push
push
push
jl
dec
shl
mov
movs
pop
shr
sub
jnp
aaa
mov
sub
ins
pop
push
or
add
pusha
push
(bad)
jnp
popa
and
push
push
push
bound
xchg
jb
adc
dec
cmp
movs
inc
adc
mov
xchg
shl
add
push
jge
mul
sar
jmp
dec
imul
and
adc
mov
not
push
outs
or
popa
out
jb
imul
xchg
adc
aaa
ret
ja
add
cmc
push
(bad)
icebp
xor
outs
or
push
pop
out
push
mov
push
xor
aaa
xchg
inc
rcl
jnp
or
test
outs
sbb
lock
bound
mov
imul
jle
add
fadd
mov
icebp
in
adc
les
jecxz
adc
cmp
iret
mov
xor
ficom
push
pop
xor
repnz
sar
add
jae
neg
adc
dec
push
je
fmul
push
push
sahf
cmps
lahf
int3
mov
xor
cmp
cmp
loopne
fcom
pop
movs
enter
mov
pop
sahf
lea
adc
xchg
fbld
or
pusha
sub
or
xlat
inc
lds
xor
xchg
aaa
cmp
cmp
fbstp
bound
bound
arpl
out
outs
sbb
add
sbb
mov
xlat
xchg
xlat
pop
xchg
outs
fnstcw
cmp
jno
ret
push
cwde
jmp
pop
cmps
or
cdq
and
xor
add
or
push
mov
mov
sub
mov
sahf
ss
or
imul
jno
pop
je
pop
stc
push
xchg
mov
pusha
shl
push
xor
repz
je
mov
outs
imul
fldenv
inc
xchg
xchg
mov
dec
jne
mov
pusha
cmp
xchg
fsub
jmp
add
add
jbe
mov
retf
sub
mov
call
movs
or
shl
call
cmps
pop
xor
(bad)
movs
jns
repz
dec
and
mov
or
mov
jns
pop
(bad)
fxch
mov
sbb
popa
and
or
(bad)
fiadd
(bad)
xchg
neg
sub
push
ret
xchg
cmp
scas
loope
daa
lods
push
mov
ficomp
pop
pusha
jmp
sti
mov
jne
xchg
or
jl
jno
fist
mov
sub
rol
xor
xor
ins
shl
jb
cdq
xchg
pushf
pushf
cmc
jb
mov
retf
js
not
jne
inc
popa
jno
stos
jns
test
pop
mul
mov
mov
push
and
inc
and
nop
pusha
add
mov
mov
push
sbb
mov
in
mov
out
aam
mov
out
int3
int3
lods
mov
push
push
movs
sti
or
mov
mov
ret
cmps
add
cmps
add
cmp
mov
add
ds
mov
add
sti
test
inc
mov
jnp
inc
mov
add
pushf
ror
ror
ror
test
and
mov
mov
and
sub
cmp
jae
ret
ret
or
mov
push
sbb
jae
or
or
sbb
(bad)
fadd
imul
sbb
dec
sbb
jnp
(bad)
jg
(bad)
jge
(bad)
jae
(bad)
mov
push
cmp
imul
xchg
pushf
leave
xchg
jl
test
retf
retf
or
or
retf
mov
retf
xor
push
and
add
cmp
daa
push
inc
add
add
add
sbb
add
and
inc
adc
or
push
imul
add
add
int
add
ins
je
add
push
add
inc
dec
inc
cmp
popa
arpl
fs
add
hlt
jmp
into
mov
repnz
shl
mov
lahf
lods
mov
xchg
hlt
cld
pushf
pushf
popf
mov
pushf
test
fs
int3
aad
xor
or
fs
ins
add
inc
push
sub
or
cmp
or
test
movs
add
test
lods
or
pushf
or
mov
jl
cmp
adc
movs
in
hlt
cld
in
hlt
add
lods
add
pushf
add
mov
bound
movs
or
xchg
adc
lods
sbb
push
xchg
pop
mov
add
add
jl
cmp
or
mov
lods
or
test
je
ins
mov
pop
fwait
or
mov
inc
push
js
inc
outs
nop
popa
test
dec
test
je
pop
pushf
or
mov
jl
je
adc
movs
sbb
les
call
outs
xchg
mov
in
add
pushf
add
mov
jl
cmp
or
lods
or
movs
or
xchg
or
push
test
mov
ins
lods
sbb
mov
jp
mov
xchg
or
je
jl
adc
movs
sbb
test
pop
pop
mov
push
jl
push
pop
mov
leave
add
mov
test
je
ins
movs
or
mov
mov
test
outs
push
outs
jl
cs
in
hlt
in
cld
jge
mov
xchg
sahf
xchg
mov
leave
fsub
jns
stos
popa
jl
jbe
aam
ror
stos
mov
test
xlat
fmul
sahf
in
test
aad
frstpm(287
(bad)
in
lahf
mov
dec
fwait
scas
dec
mov
retf
fxch
in
hlt
mov
jmp
mov
mov
xlat
call
movs
stos
or
(bad)
push
scas
addr16
push
xchg
mov
fsub
mov
pop
push
lods
mov
aam
test
fdiv
jl
cmp
dec
xchg
mov
mov
cmps
push
mov
xchg
sahf
lahf
mov
pushf
inc
nop
xchg
test
(bad)
je
cmp
pop
(bad)
xchg
sbb
jb
sbb
ins
sub
cmp
in
(bad)
in
in
leave
in
jecxz
cld
in
cld
cld
in
hlt
in
hlt
hlt
jbe
jp
movs
movs
xchg
xchg
xchg
es
inc
xchg
lea
jnp
shl
jne
mov
aam
in
hlt
add
mov
mov
test
hlt
in
mov
mov
call
cwde
mov
enter
mov
cld
hlt
hlt
hlt
in
popf
pushf
xchg
imul
lods
(bad)
mov
test
jecxz
(bad)
mov
xchg
xchg
xchg
mov
cld
hlt
hlt
hlt
call
fmul
enter
mov
mov
add
add
add
or
add
pop
adc
sbb
sbb
popa
vunpckhps
add
mov
movs
jb
xchg
and
movs
dec
sub
mov
dec
push
pop
pusha
retf
xor
shr
ins
(bad)
adc
push
push
jne
je
push
cmps
cs
xchg
pushf
push
test
mov
mov
sub
ins
shl
push
ret
pop
mov
loope
nop
jmp
out
fdivr
push
xchg
out
pop
mov
dec
mov
cmp
pop
fsub
arpl
cmp
inc
push
and
sub
mov
push
sahf
cmp
jmp
dec
frstor
test
push
cmp
or
mov
mov
sti
mov
fcmovnb
(bad)
retf
dec
mov
enter
mov
cli
repz
lods
imul
mov
mov
addr16
inc
inc
lods
jmp
sbb
and
jg
sbb
fistp
shl
(bad)
and
fild
cmp
xor
rol
or
aad
inc
test
push
dec
test
rol
adc
and
inc
mov
mov
loop
sub
xor
test
lea
(bad)
sbb
xor
mov
cmp
xchg
test
neg
fisubr
push
(bad)
jno
(bad)
jns
pushf
ins
pop
pop
or
ins
pusha
mov
cwd
mov
data16
imul
pop
xchg
leave
in
enter
jb
xchg
stc
in
push
push
jp
push
out
inc
test
xchg
aaa
pop
fs
push
(bad)
push
sbb
add
loopne
pop
retfw
fwait
repnz
sub
dec
fwait
cmp
push
cmps
pop
test
stos
adc
push
cmp
test
mov
sub
adc
scas
sbb
movs
adc
fstp
mov
dec
add
ds
fucomi
sub
ins
xchg
pushf
popa
stos
xor
inc
mov
ins
sbb
mov
push
fld
movs
mov
(bad)
scas
jae
sbb
outs
mov
pushf
fldln2
cmps
movs
je
pop
shl
push
jae
mov
mov
ret
jno
pushf
js
addr16
push
inc
push
jp
cmps
daa
ret
push
mov
(bad)
lock
pop
and
cmp
arpl
xchg
add
movs
xchg
and
adc
or
mov
call
fdiv
mov
pop
xor
pop
pop
(bad)
fld
fld
xchg
movs
mov
sahf
sbb
data16
pop
or
jno
adc
or
in
xchg
outs
mov
neg
adc
cmps
rol
mov
push
out
push
test
or
xchg
add
sbb
jmp
push
push
or
test
sub
sub
mov
stos
pop
inc
cmp
mov
mov
ret
loop
xor
xchg
sub
test
sahf
lea
in
sub
sbb
jae
leave
mov
in
retf
mov
stc
fdivr
scas
mov
outs
aas
std
fsubp
or
js
dec
push
pop
jp
icebp
dec
jnp
inc
inc
jmp
adc
dec
mov
inc
or
mov
adc
xor
(bad)
push
imul
cmp
loope
and
sbb
adc
push
outs
add
hlt
sbb
jns
outs
mov
dec
ja
mov
mov
sub
fwait
adc
dec
outs
jge
dec
jbe
xor
inc
addr16
cmp
xchg
xchg
add
jmp
mov
dec
pop
ins
pop
pop
cmps
xor
push
mov
jle
clc
inc
or
in
mov
ror
int
mov
inc
inc
lods
cmp
fisubr
mov
pop
adc
inc
lds
xchg
scas
xor
or
sub
mov
add
add
inc
test
pop
test
pop
cli
mov
test
mov
sub
repnz
stos
and
std
int3
addr16
pop
(bad)
stos
xchg
pusha
cmp
imul
or
(bad)
xor
and
and
sub
sub
dec
sbb
(bad)
jmp
xor
inc
mov
stos
or
nop
mov
aad
fwait
jbe
cmps
pop
lods
xchg
das
aam
out
inc
jle
cmps
xor
xor
xchg
fadd
movs
mov
lock
imul
in
repnz
mov
sbb
push
push
mov
int
adc
xchg
or
sbb
inc
ins
cmps
pop
mov
fidivr
jno
and
xor
sub
mov
mov
fucomp
clc
sbb
or
jbe
pop
push
and
mov
dec
inc
and
sbb
and
sbb
pop
inc
xor
cdq
push
movs
push
push
mov
int
push
sbb
nop
outs
pop
in
fist
lea
mov
(bad)
lods
les
cli
in
dec
jl
repnz
cmc
ret
imul
mov
and
pop
dec
in
movs
inc
in
movs
mov
loop
ins
xor
ins
movs
mov
leave
cmp
aas
xchg
push
mov
fidiv
push
cmp
pop
iret
jle
and
ror
add
ror
cmp
es
pop
sbb
mov
mov
xchg
ins
aaa
int3
loope
mov
stos
cmp
jmp
int3
mov
push
lahf
pop
xchg
cmp
in
add
mov
mov
mov
dec
pop
jge
xor
or
fnstsw
mov
imul
shl
adc
mov
ins
mov
das
sbb
cmc
(bad)
je
aad
in
js
cmp
add
inc
adc
inc
adc
(bad)
jmp
pop
and
pusha
imul
xor
mov
or
and
repz
xchg
inc
js
mov
add
out
ror
mov
adc
adc
xchg
inc
test
pop
aad
scas
jmp
jno
shl
dec
pop
xor
(bad)
dec
sahf
in
pop
dec
mov
jecxz
or
fild
xchg
push
fxch
push
mul
mov
in
imul
jo
dec
inc
cmc
mov
dec
in
stos
inc
cmps
rcl
fidivr
lods
push
or
iret
pop
gs
or
pop
sub
add
push
xor
jmp
rcl
xlat
mov
movs
lahf
jbe
data16
ja
xchg
movs
cmps
outs
adc
out
cmps
mov
in
sbb
xchg
ss
jp
push
and
popa
xor
std
in
retf
mov
pop
call
in
or
inc
pop
push
sbb
mov
sbb
je
mov
add
or
dec
fwait
pop
(bad)
fild
sub
add
add
mov
mov
(bad)
xor
or
stos
mov
fidiv
rcr
jo
inc
rcr
xchg
fcom
xchg
imul
lods
xor
mov
(bad)
xor
add
cmps
call
push
dec
dec
retf
adc
push
mov
adc
pop
add
int3
movs
es
push
dec
mov
pop
push
push
loop
ja
ret
lock
es
(bad)
jno
jecxz
iret
sbb
sub
fwait
sar
ss
pop
scas
ror
lods
aaa
sub
pop
mov
retf
cli
(bad)
shl
cmp
add
adc
ins
dec
daa
leave
out
dec
pop
into
add
pop
add
ins
add
xor
retf
jns
hlt
movs
pop
int
pop
cmp
cmp
cmpps
dec
dec
inc
adc
popa
mov
std
or
or
cmp
(bad)
enter
ja
jl
jmp
(bad)
int3
push
mov
in
sub
(bad)
and
pop
jecxz
jecxz
cli
push
jo
dec
into
xor
ret
call
mov
mov
mov
das
mov
sbb
je
pcmpgtb
mov
pop
sbb
lds
jle
adc
je
xor
out
stos
pop
sub
adc
lock
jnp
ror
ror
mov
or
pop
mov
add
(bad)
fs
cmps
outs
loope
add
cmp
or
test
in
dec
and
dec
mov
dec
(bad)
dec
popw
push
cmps
cmp
push
adc
aad
imul
ss
xor
shr
adc
mov
lds
cld
mov
xchg
pop
sub
xor
out
jb
aaa
xchg
cmps
pusha
sbb
add
add
jp
addr16
mov
inc
mov
pop
adc
or
adc
lahf
mov
movs
pusha
or
or
mov
imul
loopne
leave
xchg
jl
cmps
or
cmp
jne
idiv
sbb
mov
ins
xchg
enter
test
jo
aaa
fs
ret
in
pop
cwde
push
xchg
add
out
push
je
sbb
xor
pop
jl
ja
addr16
xchg
test
xor
rol
jb
xchg
mov
add
sub
pop
fsubr
inc
je
loop
xchg
inc
pop
inc
pop
add
or
or
xor
jnp
test
adc
(bad)
(bad)
loopne
jg
pop
pop
loopne
cmp
jle
clc
mov
outs
and
es
xor
add
jbe
enter
xchg
ret
xor
xor
clc
ret
push
jo
cmp
ja
push
ss
push
pop
xchg
add
aam
dec
cdq
xor
movs
sbb
js
shl
cld
lds
add
aaa
cmp
and
ret
push
pusha
xchg
and
xchg
out
data16
xchg
inc
add
rcl
adc
loope
xchg
daa
push
dec
add
js
or
or
or
pusha
or
or
sub
adc
lock
dec
mov
scas
call
cmp
cmp
int3
pop
xchg
fwait
or
test
stos
pop
call
test
test
dec
sbb
sbb
rol
pop
jns
dec
push
inc
pop
fld1
jno
ss
mul
xchg
xor
fstp
xor
mov
jecxz
sub
dec
addr16
and
and
dec
adc
mov
mov
jb
cmp
pop
movs
es
add
imul
xchg
mov
mov
xchg
mov
nop
sahf
push
mov
or
jns
sub
cmps
jo
or
sbb
test
dec
mov
leave
jne
fldenv
cli
add
test
push
or
ins
mov
inc
dec
inc
add
pushf
sbb
pop
pop
aam
test
in
div
add
jmp
(bad)
xchg
sub
xor
adc
xchg
xchg
out
jne
sub
or
ins
scas
mov
pop
aad
pop
xchg
ss
xchg
mov
add
add
xchg
or
add
and
adc
adc
movs
nop
lahf
sub
popf
fmul
mov
mov
lock
push
or
sub
mov
call
sar
xchg
cmp
call
mov
outs
outs
cmp
ja
cmps
pop
in
pop
sbb
bound
push
push
mov
pop
icebp
cmps
pop
bound
sbb
sub
jo
mov
inc
shr
xchg
das
(bad)
xchg
xor
fstp
jae
add
(bad)
out
imul
jp
add
pusha
add
pusha
add
inc
lods
daa
jo
out
dec
or
pop
lahf
mov
or
or
mov
mov
add
call
inc
clc
mov
jp
cmp
xchg
or
dec
push
aam
call
stos
and
sbb
push
xchg
sahf
and
aad
xchg
popa
xchg
inc
aas
stos
xor
stos
rcr
(bad)
fnstenv
popa
sbb
push
imul
(bad)
push
ins
sub
push
xchg
frstor
jp
or
(bad)
pusha
add
jo
shl
pop
add
add
hlt
or
inc
jnp
sub
nop
scas
(bad)
pusha
or
add
mov
ja
cdq
leave
call
lods
jns
cmp
mov
(bad)
push
retf
in
mov
imul
mov
ja
push
add
stos
sbb
xor
cmp
cdq
pop
stc
xchg
jg
fs
neg
fcomip
dec
add
add
mov
sbb
je
push
std
clc
mov
inc
sbb
push
xchg
jo
cmp
jbe
mov
mov
daa
add
daa
mov
or
inc
or
sbb
or
or
gs
call
mov
xchg
or
mov
or
xchg
aaa
adc
xchg
mov
push
jnp
cmp
in
or
dec
inc
pop
ss
fdiv
sub
dec
add
sbb
ficomp
cmp
xchg
push
or
loop
and
add
mov
or
push
les
movs
xor
sub
pop
cmp
mov
sub
das
and
add
loopne
jbe
or
imul
rol
or
ret
or
or
pusha
or
or
cwde
mov
add
rol
aaa
rol
cmp
retf
ss
push
test
stos
mov
test
pop
mov
cli
fs
mov
(bad)
cmp
jg
add
sbb
enter
pop
mov
lds
movs
mov
xchg
stos
icebp
xchg
stos
aad
cmp
les
gs
ss
(bad)
pushf
(bad)
popa
mov
jnp
sti
fstp
lods
adc
jnp
xchg
pop
mov
(bad)
mov
adc
cmp
jp
sahf
daa
pusha
or
rol
mov
ret
or
or
or
or
or
dec
or
add
loopne
mov
cdq
enter
or
test
mov
cmps
fldcw
rcr
scas
(bad)
cmp
mov
jl
jecxz
ss
shl
repz
icebp
retf
and
jb
mov
cmps
and
lods
adc
out
xchg
pop
xchg
sti
dec
repnz
jmp
imul
jnp
mov
imul
pop
xchg
sub
cwde
lods
leave
ret
ror
mov
lahf
mov
retf
or
add
les
mov
lea
retf
les
shl
daa
pop
mov
loopne
adc
xchg
push
int
push
fistp
pop
int3
fwait
js
(bad)
arpl
popa
(bad)
sub
(bad)
dec
xor
pushf
xchg
jne
and
into
stc
(bad)
cld
sti
pop
jne
mov
cmp
xor
mov
sub
push
(bad)
jb
push
mov
push
jnp
pop
xchg
cmp
add
ror
xchg
mov
xchg
mov
or
inc
or
or
add
cdq
mov
dec
mov
loope
retf
mov
int3
xchg
or
jl
pusha
add
or
lahf
lods
retf
ret
lds
popa
(bad)
and
push
fidivr
loope
int
int
mov
and
add
ja
and
fwait
and
pop
push
adc
aam
rol
int
and
mov
cmp
pop
adc
inc
push
repz
dec
arpl
mov
call
mov
adc
xor
mov
push
pop
ja
add
dec
leave
and
jne
leave
call
fst
push
ret
cmp
mov
cmp
loopne
mov
add
loopne
dec
shl
in
mov
loope
or
push
ds
or
jae
jb
push
push
jl
jmp
dec
and
in
rol
sub
(bad)
loop
push
jecxz
sub
xchg
push
pop
test
cmp
jb
stos
xor
pop
cld
jmp
cld
inc
add
xor
aad
mov
jae
shr
dec
(bad)
popa
xor
mov
ret
sahf
xor
leave
lahf
sub
mov
cmps
neg
ss
fadd
or
ret
cmp
les
sbb
ja
out
sub
divps
sub
retf
mov
fldcw
(bad)
(bad)
mov
(bad)
sub
dec
(bad)
lds
pop
cli
aad
lock
in
mov
sbb
arpl
jmp
popa
inc
call
add
pop
xor
data16
test
cmps
fmul
(bad)
cmp
inc
mov
mov
fucomp
mov
or
mov
cmp
cs
ret
xor
add
inc
cmps
test
mov
adc
rcr
jnp
or
nop
clc
or
sub
or
push
or
or
loopne
into
out
jmp
ror
les
cdq
push
push
loopne
sub
adc
pop
out
sbb
or
sub
loope
shr
xchg
imul
add
pop
and
sbb
sbb
dec
ror
mov
test
push
out
popf
ror
rcr
add
sbb
shl
dec
pusha
imul
xor
jo
xor
and
jecxz
(bad)
dec
pusha
pop
cmp
cmp
jmp
push
jmp
xor
jbe
(bad)
out
hlt
sti
fnsetpm(287
mov
push
fs
js
mov
xchg
pop
repz
iret
dec
rol
add
push
pop
add
hlt
dec
fild
out
pushf
lahf
mov
fsub
or
jmp
mov
jne
loope
(bad)
dec
lock
lock
rol
or
jo
div
pop
loopne
push
jle
jo
nop
and
iret
xor
mov
cmovo
dec
add
pusha
add
rol
in
div
inc
rol
sub
sahf
add
jmp
or
stos
pop
add
push
jmp
or
in
add
inc
jo
pop
jo
dec
(bad)
cld
push
mov
movs
push
jmp
adc
sub
push
hlt
inc
(bad)
jmp
fdivr
add
inc
(bad)
sbb
(bad)
xor
fld
pushf
add
inc
(bad)
fcomp
(bad)
out
call
fsub
mov
js
lahf
and
mov
sub
cdq
and
sub
movs
inc
adc
add
test
sbb
sbb
(bad)
(bad)
xchg
stos
ins
imul
mov
fs
aaa
pop
pop
cdq
cmp
fs
mov
dec
push
or
cmp
addr16
and
test
xor
cmp
daa
or
sub
test
adc
push
inc
xor
and
inc
repnz
rcl
pop
sar
cmp
js
jo
(bad)
fdiv
dec
sahf
sub
add
mov
dec
pop
xor
retf
jge
push
inc
hlt
mov
add
call
shl
pop
call
or
jo
rcr
mov
fcmovnb
jno
test
sbb
adc
xchg
and
out
push
inc
adc
(bad)
mov
cmps
xchg
arpl
and
add
fist
jmp
ss
fcomi
inc
scas
les
mov
mov
loope
in
push
movs
sbb
and
loope
cmp
and
(bad)
push
pop
idiv
add
push
adc
int3
nop
adc
xor
mov
outs
inc
mov
mov
fs
mov
mov
xor
add
es
in
and
mov
sub
ror
ret
cmps
lods
call
push
sbb
mov
mov
add
cmp
shr
(bad)
sbb
mov
call
loope
cmp
adc
add
sub
bound
iret
retf
sahf
clc
mov
int
push
add
or
jae
mov
dec
loopne
or
test
add
mov
jp
lea
mov
mov
add
inc
cwde
bound
push
mov
push
cmp
mov
pop
mov
add
fdiv
pusha
push
jne
cmp
mov
pop
cld
test
mov
lock
add
adc
add
mov
sbb
stos
add
dec
sub
dec
cwde
(bad)
xor
frstor
xchg
pop
pop
sub
movs
adc
or
inc
jmp
pop
ror
stos
mov
sub
mov
(bad)
iret
mov
js
leave
mov
cmp
sub
rol
mov
scas
pop
iret
in
inc
test
or
ret
dec
dec
ret
cdq
scas
and
dec
sub
push
mov
and
add
cdq
jecxz
adc
loope
dec
xchg
xchg
(bad)
in
or
shl
or
xor
mov
jb
popa
test
cmps
int
in
and
or
inc
ret
fsub
into
mov
xchg
mov
out
sub
mov
dec
xor
mov
cmc
shr
and
addr16
clc
add
sub
in
or
aad
add
jmp
mov
test
dec
sbb
lock
mov
pop
daa
add
xchg
test
pop
jl
js
popa
in
lds
out
fld
sbb
xchg
or
hlt
clc
ret
mov
shr
add
das
out
jo
pop
push
jl
jmp
daa
mov
retf
stos
and
cmp
fisttp
enter
scas
cld
jne
or
sbb
inc
add
mov
add
mov
(bad)
push
nop
fld
push
(bad)
mov
cld
rol
or
clc
inc
xchg
jno
push
mov
mov
and
nop
pop
sbb
inc
add
pop
sub
sbb
push
push
xchg
sub
pusha
or
adc
inc
js
and
xchg
pop
sub
push
dec
add
pop
cmps
shr
rol
xor
and
(bad)
or
push
mov
inc
push
or
push
sbb
sbb
mov
aad
push
daa
dec
(bad)
and
nop
lds
lods
mov
adc
aas
jp
add
mov
ret
sbb
and
or
xor
push
loop
lea
xchg
jle
mov
(bad)
(bad)
in
inc
or
ret
scas
cmp
add
les
jns
or
movs
das
jge
ds
fsub
push
inc
pop
or
out
mov
or
adc
(bad)
in
or
jo
dec
adc
xor
xor
pop
retf
and
xor
add
ret
ins
adc
or
retf
sbb
sbb
maskmovdqu
test
xchg
cmps
icebp
xchg
or
jns
add
and
push
push
test
add
retf
(bad)
pop
pushf
test
mov
mov
retf
fidiv
and
imul
call
and
mov
mov
add
or
cmps
xor
jae
sbb
jmp
pop
cld
bound
in
cmp
sbb
add
ds
movups
and
xor
or
inc
lods
cmp
sub
lds
in
inc
clc
adc
inc
loope
push
mov
and
rol
adc
mov
adc
xor
or
cwde
or
sub
mov
add
mov
test
or
sbb
nop
sbb
adc
cmps
inc
test
add
xor
pop
add
shl
push
or
and
sbb
cmps
add
and
dec
and
add
clc
adc
mov
xchg
pop
push
je
adc
add
ret
or
iret
cmp
aaa
add
mov
xchg
mov
adc
or
mov
fisub
or
rol
retw
sar
shl
movs
data16
mov
adc
sar
rol
sbb
or
cmp
inc
or
adc
lods
fimul
sub
stos
add
std
mov
stos
push
in
dec
jle
pusha
push
sbb
daa
dec
sub
inc
jo
adc
cmp
or
dec
cld
and
and
bound
cdq
fadd
xchg
pop
jns
pop
data16
pop
push
and
or
test
add
xchg
and
mov
or
test
dec
mov
add
cdq
dec
dec
adc
or
pop
push
mov
inc
das
out
mov
enter
sbb
add
rol
fsub
shl
xor
dec
push
jp
and
not
sub
add
sub
or
xchg
out
push
or
int
or
sar
mov
jp
lock
cmp
inc
out
addr16
mov
outs
(bad)
leave
test
shl
cmp
or
fmul
fcom
movs
and
xchg
jge
lock
addr16
ret
jmp
fisub
call
mov
fldenv
lahf
int3
sbb
mov
call
push
or
mov
call
rcl
and
sbb
add
inc
cwde
mov
xchg
xchg
or
movlps
mov
retf
test
shr
sub
cmps
sub
sbb
cmps
or
rol
mov
add
rol
sbb
outs
add
ins
or
cmp
popf
xor
shl
adc
and
dec
push
sbb
add
add
or
nop
add
imul
xchg
lods
rcl
adc
call
rol
mov
scas
ret
dec
repz
cmp
cmp
or
sbb
sub
clc
push
lods
pop
jge
imul
imul
cmc
pop
ror
mov
out
jg
clc
lds
push
or
jo
inc
cwde
mov
sub
dec
and
loop
cmps
pop
jle
and
and
outs
mov
and
mov
dec
gs
test
dec
dec
push
add
cmp
adc
stc
sub
pusha
out
xchg
pusha
add
and
psubusb
jl
mov
sub
rcl
daa
nop
ss
and
mov
rol
or
inc
dec
mov
mov
fwait
or
xor
jmp
stos
pop
and
xchg
add
adc
or
js
das
lock
mov
mov
adc
cs
add
mov
dec
jecxz
adc
or
or
cmp
mov
or
rol
fwait
mov
sub
mov
mov
cwde
pushf
(bad)
aas
push
sub
fnstenv
sti
xor
mov
cmc
add
cmp
and
rol
push
inc
xor
inc
loopne
pop
mov
and
push
push
add
jo
inc
lock
xchg
dec
cmp
loope
xchg
pop
xor
and
sub
jb
sbb
ins
call
or
sahf
pop
stos
xchg
aas
sub
xchg
add
mov
add
adc
inc
push
cmp
xchg
push
inc
inc
adc
xor
add
push
retf
and
and
adc
mov
popf
and
scas
jecxz
jp
scas
push
in
and
add
push
xchg
mov
mov
loope
cmp
jmp
rcr
rol
cmp
sub
loop
adc
ror
sub
push
or
and
add
rol
enter
dec
xor
cmp
push
xchg
xchg
hlt
mov
and
add
inc
mov
xor
mov
add
sub
xor
stos
inc
dec
ins
add
stos
add
xor
fist
sbb
aas
jg
mov
xor
clc
xchg
mov
ret
sbb
jmp
sub
call
test
sbb
sub
adc
add
and
mov
add
adc
imul
mov
xor
ins
dec
adc
ins
add
add
adc
es
and
lods
shr
xor
rcl
ss
mov
enter
mov
lods
inc
jg
adc
adc
enter
dec
sbb
pop
mov
sub
jns
or
loope
int
push
and
dec
sub
mov
pushf
xor
js
push
push
mov
add
call
mov
cmp
inc
cmp
mov
dec
clc
test
ds
mov
push
push
sub
pop
cmps
fadd
sbb
push
xor
xchg
stos
xchg
xor
lds
pop
sbb
push
aaa
push
sti
push
inc
sub
sub
or
mov
inc
and
mov
add
sbb
adc
adc
mov
stos
mov
int3
cmp
dec
sub
call
aas
cdq
das
ficomp
push
or
ss
mov
dec
add
add
(bad)
adc
test
sub
add
pop
or
aam
mov
inc
add
sbb
sti
fwait
jmp
cld
adc
cmp
or
cmp
ds
jmpw
adc
jmp
sbb
into
adc
add
test
xchg
add
(bad)
cmp
clc
xor
mov
test
test
add
inc
inc
ror
sub
(bad)
sti
mov
pop
mov
mov
es
aas
aad
add
sahf
sub
test
or
das
enter
sbb
jg
sbb
inc
cmps
mov
cmp
push
std
jns
leave
add
and
rol
cmp
and
dec
ret
cmp
pop
add
push
cmp
and
mov
pop
push
sbb
add
dec
sub
cmp
add
rcl
mov
push
xor
inc
inc
fdivp
or
cwde
and
add
xor
mov
dec
xor
and
add
int3
add
lock
aaa
xor
inc
add
pusha
shl
movs
add
sub
movs
inc
retf
sar
sbb
lock
mov
xor
rol
and
test
cld
add
pusha
fimul
sbb
push
add
in
stos
lods
mov
fstp
pop
and
repnz
test
lahf
sbb
lock
pop
and
dec
push
cmps
stc
mov
es
pop
and
dec
out
jp
test
adc
lea
add
push
jge
cmps
cmp
rol
cdq
out
daa
(bad)
movs
inc
sub
gs
dec
cwde
scas
or
fwait
lock
in
movs
lods
aam
push
mov
sti
repnz
mov
shl
sub
repnz
dec
cwde
cmp
xor
xor
test
mov
ds
dec
or
inc
inc
mov
rcl
add
stos
push
cmp
in
pop
pop
enter
add
clc
or
mov
jns
mov
jo
push
iret
scas
and
cmc
or
dec
mov
dec
hlt
add
rol
mov
cmps
les
sub
xchg
sub
or
add
rol
cmp
xor
mov
adc
cmp
cwde
or
xchg
sbb
sbb
cmp
push
nop
lods
push
call
mov
mov
adc
ss
imul
add
sbb
(bad)
les
popa
scas
mov
and
sbb
push
push
cwde
add
pusha
cmp
xchg
cmp
or
sbb
add
sahf
loope
stc
fwait
sbb
ss
cmp
push
fld
fcom
rol
pop
add
pusha
leave
retf
inc
add
jno
loopne
sub
push
rol
xor
das
hlt
ret
pop
xchg
lods
or
xor
fwait
pop
aas
lods
sub
xrelease
fisubr
retf
adc
pop
inc
cmp
inc
pusha
add
mov
sti
lds
ins
add
fadd
rol
pop
clc
mov
imul
sbb
push
aaa
xor
mov
sub
mov
fwait
push
sbb
mov
sbb
dec
scas
sbb
sbb
sbb
cdq
mov
or
adc
add
inc
mov
sbb
sbb
cmp
jp
push
jae
adc
push
cmp
mov
test
inc
cmp
and
and
sub
jne
lea
mov
loope
and
lods
add
dec
mov
adc
sub
enter
dec
pop
add
add
bound
mov
fs
imul
and
push
jmp
sub
(bad)
ficomp
lods
sahf
xor
fidiv
sbb
es
cmp
xchg
push
jge
test
adc
test
gs
rol
call
call
dec
add
push
push
jge
test
rcl
fisub
adc
adc
sub
adc
mov
jle
push
inc
or
push
(bad)
popa
pop
int3
not
and
sub
add
ins
aam
xor
jg
add
fadd
xor
jo
cdq
(bad)
mov
or
sbb
fisub
nop
add
in
push
jmp
mov
xchg
jmp
inc
add
mov
jmp
call
loopne
out
hlt
cmps
sbb
nop
std
inc
repz
cmps
rcr
cmp
or
mov
test
sbb
inc
in
pop
inc
add
add
or
ins
or
jle
jmp
rol
mov
dec
pusha
add
xchg
pop
inc
call
sti
lods
jmp
out
test
dec
push
add
rol
out
mov
loopne
adc
icebp
dec
inc
sbb
push
push
add
pslld
sub
mov
and
or
(bad)
in
iret
add
xor
push
in
fsubr
sub
sub
cmp
sub
call
rol
mov
repz
xor
adc
in
xchg
popa
sbb
jae
jae
fcomip
cmp
call
outs
adc
cmp
ds
xor
outs
adc
jno
in
pushf
fs
or
pop
jmp
fnstcw
and
enter
mov
push
pop
pop
jo
push
pandn
add
out
pop
ins
cwde
lock
pop
jge
xchg
pop
inc
js
js
xchg
push
popa
add
add
mov
imul
push
sbb
loopne
cmp
adc
add
add
pop
(bad)
mov
dec
pusha
test
pop
push
mov
outs
out
ficom
add
or
pop
mul
ins
and
repnz
mov
mov
sub
cmps
das
or
mov
sub
xor
out
das
xor
test
aam
xchg
adc
cmp
nop
clc
mov
sbb
xchg
jmp
xor
push
or
call
cmps
xchg
inc
jns
push
and
jns
out
sbb
data16
icebp
dec
outs
call
cmps
sbb
out
imul
cmps
outs
sbb
mov
lea
imul
(bad)
pop
and
xchg
js
pop
lahf
jne
fild
pop
mov
iret
cmps
int
aas
sub
mov
test
les
adc
sub
iret
xor
sbb
aas
adc
mov
jb
xchg
rcr
push
mul
aas
jl
outs
mul
(bad)
mov
loope
ror
leave
iret
imul
repnz
add
jo
imul
or
xor
cmp
rcl
jge
outs
clc
fisttp
inc
cmp
cmp
repz
push
adc
popa
icebp
push
hlt
push
sub
fsub
add
je
pop
out
xrelease
aaa
jle
mov
dec
shr
dec
push
inc
dec
cmps
fidivr
sbb
mov
pop
adc
jb
xchg
xchg
jo
mov
jge
xchg
jnp
push
push
mov
cmps
test
das
test
push
xor
inc
add
pop
add
add
rcl
retf
push
test
mov
pusha
call
cmp
sub
push
mov
inc
fsub
jecxz
nop
adc
mov
daa
ins
fcomp
repnz
int3
cwde
and
pushf
leave
add
sbb
ja
call
sub
push
adc
mov
rol
nop
sub
movs
push
popf
push
push
test
cmp
cwde
adc
mov
hlt
ins
mov
loop
(bad)
inc
push
scas
cdq
push
outs
in
fisttp
ja
call
clc
or
les
jl
int
sub
dec
mov
or
call
adc
push
inc
xchg
adc
(bad)
(bad)
jmp
push
jbe
test
fcomp
in
mul
bound
jnp
dec
cdq
ss
cld
imul
arpl
clc
out
in
popa
hlt
jmp
ss
jmp
inc
imul
push
ret
hlt
sub
movs
retf
or
pop
mov
push
arpl
sub
mov
push
sti
in
out
sbb
daa
sub
or
or
dec
push
and
and
rol
sbb
push
push
adc
adc
and
inc
pop
adc
rol
push
test
xor
enter
jge
jecxz
xor
sbb
adc
inc
call
push
pusha
imul
dec
and
adc
jbe
fs
imul
jns
jmp
inc
push
adc
mov
ficomp
popf
mov
lds
mov
xchg
mov
loope
adc
or
fdiv
xadd
dec
add
sub
pushf
sar
dec
cmp
fsub
and
jl
popf
and
je
dec
js
mov
mov
dec
and
int3
loop
inc
dec
sbb
nop
inc
mov
movs
inc
inc
add
adc
movs
stos
inc
sbb
call
dec
push
scas
les
leave
dec
pop
xchg
test
sbb
in
push
and
popa
imul
sub
pusha
fwait
adc
xchg
push
fadd
mov
xchg
mov
mov
pop
outs
sbb
sbb
cwde
bound
ss
xchg
scas
add
data16
jno
es
push
lods
popf
jbe
push
inc
shl
fwait
adc
int3
sbb
lock
adc
ss
shl
mov
xor
add
cmp
and
jle
cmps
leave
ja
mov
retf
mov
adc
jnp
jns
dec
lods
adc
or
xlat
pop
dec
adc
out
sbb
pusha
mov
lahf
hlt
fisttp
xor
sub
or
mov
popa
dec
and
ror
add
or
mov
fwait
aad
xor
clc
push
or
repnz
push
in
ficomp
movs
in
scas
fwait
xchg
pop
dec
fisubr
push
pusha
outs
push
jns
xchg
push
dec
xchg
fsubr
pop
jmpw
push
je
lock
mov
adc
shr
call
mov
add
aaa
loop
xor
ss
xlat
(bad)
mov
ds
push
imul
inc
popf
dec
and
js
mov
movs
repnz
test
mov
and
sub
mov
pop
cmc
inc
pmullw
call
lods
mov
lock
mov
and
dec
pusha
xor
or
add
jns
fild
dec
sub
sbb
mov
mov
sub
retf
push
sbb
cdq
sub
adc
jle
pop
pusha
mov
inc
jge
and
rol
mov
stos
mov
fs
sbb
retf
dec
in
int3
je
rol
or
or
xor
add
push
ret
dec
xor
pop
cmp
xchg
test
add
push
lock
or
or
push
dec
pop
fisubr
push
mov
adc
push
aas
pop
icebp
(bad)
ds
lahf
jge
add
xchg
mov
or
je
mov
jno
inc
inc
sub
movs
bound
push
and
mov
(bad)
and
inc
outs
xchg
(bad)
jae
in
ja
int3
rcl
dec
sub
out
in
rol
je
mov
ret
ror
xchg
pusha
lods
cmp
jmp
les
int3
dec
gs
adc
xor
aaa
int
ja
jp
ins
cmp
xor
sub
lahf
ret
gs
pop
xor
push
aaa
ret
ins
ror
les
js
cmp
stos
pop
add
icebp
and
sbb
arpl
repnz
sahf
cwde
lds
nop
add
xor
rol
push
jns
xchg
sub
mov
jge
enter
mov
pop
pusha
add
imul
cwde
adc
jmp
dec
jnp
inc
adc
adc
ins
movs
cmps
xor
fsub
(bad)
cmc
mov
aas
dec
loope
mov
and
sub
shr
test
mov
dec
and
xchg
popa
inc
inc
mov
and
adc
push
sbb
sub
(bad)
call
rcr
dec
pcmpgtd
add
jb
mov
ins
pop
repz
je
xchg
(bad)
sub
sbb
outs
mov
sbb
imul
adc
lds
loope
pop
fchs
mov
sub
test
sbb
add
jl
mov
call
jl
test
sbb
ds
rcl
int3
les
sub
aaa
or
sub
cmp
push
rcl
and
adc
push
fcom
in
or
add
test
or
add
aam
dec
inc
mov
cmp
test
mov
xchg
popf
rcr
mov
add
add
stos
(bad)
cmp
xchg
jle
dec
fcomp
mov
mov
fdiv
outs
aaa
call
es
fmul
outs
push
sub
sbb
and
pusha
and
or
push
or
sti
mov
push
sub
sbb
mov
adc
pop
add
add
cmp
xchg
lods
push
aam
into
sub
add
cld
retf
fisub
shr
add
inc
add
sbb
and
es
adc
and
repnz
sbb
add
loop
mov
call
add
inc
scas
add
pop
mov
or
ret
xchg
pusha
pushw
dec
push
clc
jae
jo
aam
inc
xchg
pop
outs
jns
adc
xor
jg
mov
popf
mov
(bad)
mov
(bad)
push
call
test
cvtpi2ps
pop
xchg
jb
mov
cwde
jno
sbb
jge
ss
or
ds
xchg
or
pop
push
(bad)
push
pop
mov
ins
push
mov
les
rol
xor
and
ds
stos
call
(bad)
inc
clc
add
mov
add
cmp
dec
dec
dec
and
sub
ins
lock
in
add
js
adc
int3
and
fild
ret
fisub
sbb
mov
loopne
adc
lods
xor
pop
cmps
inc
sub
mov
pop
push
loopne
xor
mov
test
rol
mov
inc
inc
sbb
mov
repz
scas
popa
out
sbb
test
cwde
pushf
or
or
ret
dec
imul
adc
mov
cmps
mov
cmp
(bad)
scas
dec
sub
mov
adc
pop
push
sub
ss
test
loopne
aas
leave
popf
or
mov
imul
adc
add
clc
add
cli
push
pop
je
cmp
inc
cmp
sub
adc
inc
or
and
add
cli
mov
push
push
popf
lock
fs
(bad)
sbb
sbb
or
adc
push
fwait
sub
jo
adc
pop
pop
sub
add
mov
push
add
not
add
mov
test
and
adc
adc
xchg
lods
sbb
adc
lock
fcomip
adc
sahf
mov
mov
inc
or
lock
add
inc
pop
sub
push
jns
sbb
ror
rcr
jmp
push
adc
add
je
cld
icebp
add
xor
inc
push
sbb
add
mov
add
sar
ret
inc
popa
dec
fist
clc
fst
inc
push
cmp
adc
sub
ds
pop
adc
sbb
rcl
add
add
stc
nop
sbb
push
add
xor
push
jo
cwde
sub
test
fwait
inc
call
adc
(bad)
adc
fistp
sbb
wrmsr
inc
add
add
inc
add
call
and
call
mov
add
pushf
sub
sub
mov
enter
sub
push
sbb
and
add
js
mov
inc
mov
bound
push
lods
fadd
adc
shl
inc
sbb
inc
ds
adc
adc
adc
add
inc
or
lahf
or
inc
ds
ror
adc
nop
or
push
add
ret
jge
add
add
pop
lahf
imul
push
inc
add
rol
cmp
or
and
add
xchg
add
fcom
ins
inc
or
ffree
leave
add
or
add
add
xor
add
rol
rcr
or
and
mov
call
push
add
pop
call
inc
jns
lds
in
add
xor
push
fnsave
cmps
shl
add
add
add
adc
rol
inc
push
and
das
(bad)
and
shl
adc
sbb
push
add
and
into
addr16
xchg
jl
or
xchg
pop
xor
add
cmp
mov
(bad)
aam
ss
cwde
mov
and
push
push
outs
mov
cmp
push
add
add
mov
sbb
int3
sbb
mov
loop
sub
in
rcl
push
and
jge
inc
jne
xchg
sub
out
and
inc
add
mov
and
add
adc
jle
or
add
sbb
xor
add
or
sbb
adc
add
add
sbb
pop
push
adc
popf
mov
fadd
mov
or
lock
or
inc
pop
pop
cmps
push
xor
add
mov
aam
adc
bound
adc
jmp
add
pop
pop
pusha
ror
add
ror
inc
push
inc
inc
add
add
out
in
add
or
inc
push
adc
hlt
pop
into
movs
xlat
pop
dec
addr16
nop
inc
adc
add
in
push
push
rcr
sbb
and
push
push
add
push
inc
and
push
pusha
inc
sbb
push
add
push
inc
sbb
js
and
mov
jmp
or
jp
adc
rcl
mov
xlat
popf
fidivr
sbb
imul
mov
(bad)
mov
cmp
fmul
pop
adc
xor
cmp
inc
add
add
dec
sbb
gs
ret
ret
and
ret
jno
mov
and
retf
bound
jns
sub
adc
add
(bad)
jns
mov
inc
jl
ss
add
xor
pop
loop
adc
push
dec
and
adc
add
loopne
(bad)
rcl
inc
test
lds
rcr
rcl
add
inc
arpl
or
inc
enter
rol
ror
rol
shl
cmps
add
inc
or
add
push
inc
add
inc
int3
mov
enter
add
fwait
data16
add
out
push
inc
inc
adc
shl
jo
es
(bad)
daa
push
mov
push
and
in
sbb
push
and
rol
sbb
daa
sbb
and
adc
inc
test
xchg
dec
sahf
pop
add
(bad)
into
pop
fldenv
fs
nop
inc
pop
hlt
sbb
add
add
sub
sub
inc
sub
inc
aaa
dec
dec
mov
jmp
lods
inc
and
sbb
add
inc
pop
mov
test
in
add
and
fisubr
nop
add
imul
adc
jmp
xchg
add
jl
or
repnz
push
loopne
push
test
or
shr
ss
adc
inc
and
mov
add
adc
retf
aam
adc
push
add
movs
push
jmp
mov
or
adc
rcr
ds
sar
out
into
cmps
(bad)
(bad)
or
mov
inc
push
mov
add
sbb
cmp
push
push
sar
ror
fnsave
(bad)
sub
adc
movs
add
inc
sbb
push
(bad)
add
sub
(bad)
icebp
add
add
sbb
inc
cs
ret
sub
out
test
add
stos
adc
push
test
popa
push
mov
adc
mov
adc
call
sbb
mov
call
or
dec
inc
sbb
inc
and
mov
aas
xor
aas
loopne
sub
ret
add
enter
sub
sub
and
and
inc
mov
dec
adc
push
and
add
bound
stos
(bad)
and
adc
outs
and
adc
pop
movs
fiadd
add
ins
sahf
jb
adc
popf
or
sbb
in
frndint
push
sbb
jl
add
push
push
cmp
pop
lock
pop
rcr
pop
cmp
movs
xor
or
rcr
push
shl
push
add
fs
fstp
movs
es
mov
(bad)
lods
adc
or
add
dec
(bad)
test
(bad)
shr
stos
jmp
shl
add
in
jne
sbb
lds
add
sahf
push
mov
or
xchg
jmp
out
aam
ins
lods
aad
aam
test
dec
jp
mov
aad
cs
cmp
adc
loope
inc
add
rol
ret
xor
add
clc
inc
pop
push
out
xor
jb
sub
ret
add
nop
add
in
sub
ret
rol
jmp
adc
add
push
adc
add
and
mov
push
movs
shl
inc
sbb
push
push
sbb
adc
es
lahf
push
or
leave
adc
or
inc
pop
mov
adc
inc
sub
movs
add
xor
pop
mov
(bad)
xchg
dec
ss
mov
hlt
shl
lods
pushf
adc
ins
(bad)
jmp
add
jae
lock
mov
adc
cmps
or
inc
adc
aas
mov
or
inc
(bad)
sub
add
movs
pop
adc
push
rcl
shl
cmp
add
shl
mov
rol
push
jg
adc
or
(bad)
hlt
dec
and
or
jmp
(bad)
adc
sub
inc
stos
std
xor
in
mov
into
fstp
jne
setl
mov
xor
pop
add
ret
xor
sbb
add
pusha
inc
add
add
inc
and
add
sub
dec
das
xor
cmc
mov
in
ret
add
xor
sub
add
test
int3
dec
cli
xchg
jmp
dec
push
in
cwde
rcl
rcl
add
lds
sbb
add
dec
add
lds
rcl
add
cld
inc
inc
push
fistp
add
(bad)
in
add
push
add
sbb
cmps
jbe
sub
push
mov
cmps
or
add
xor
test
loop
or
shl
add
mov
sbb
inc
or
inc
add
sub
bound
mov
bound
test
and
jg
sbb
push
dec
addr16
test
rcl
popa
stos
mov
dec
fsubr
sbb
popf
lock
xchg
xor
stc
xor
(bad)
mov
push
out
aas
movs
shl
sub
je
xor
popa
and
shr
cmc
cli
sub
sub
cmc
sub
add
add
or
adc
xchg
cmp
adc
xchg
push
or
adc
rol
push
sbb
or
rcr
inc
repnz
add
mov
sbb
cwde
sar
inc
push
loopne
or
or
(bad)
retf
jecxz
or
add
out
enter
sbb
test
ins
inc
pop
je
inc
jae
jae
lock
inc
enter
rol
shl
mov
rol
adc
sbb
inc
cld
xor
rol
or
wrmsr
jno
es
inc
cs
lods
add
xchg
ror
addr16
mov
push
inc
sbb
or
add
movs
mov
cmp
adc
sbb
inc
xor
test
stos
sar
push
loope
push
mov
inc
test
mov
xchg
retf
jne
out
add
fisubr
and
loopne
shl
scas
mov
scas
repnz
inc
add
inc
das
aam
pop
lahf
add
ret
cmp
clc
inc
sbb
fiadd
je
addr16
fwait
dec
nop
lea
add
mov
push
dec
add
or
jl
dec
les
push
adc
loopne
fldenv
(bad)
jns
xchg
adc
rol
mov
sub
or
fadd
movs
add
jge
or
test
leave
xchg
leave
pushf
or
pop
in
cmp
pushf
push
xor
or
cwde
popa
js
pushf
xor
pop
jmp
pusha
xchg
cmp
mov
add
adc
jo
inc
pop
inc
repnz
or
or
xchg
in
test
adc
mov
mov
inc
jnp
pop
mul
sbb
xchg
int3
fcomp
xchg
push
dec
mov
cmp
outs
or
sub
dec
shr
nop
jmp
out
and
pop
mov
lods
cmp
mov
push
mov
and
push
add
xor
xor
mov
add
loopne
nop
adc
test
mov
sub
inc
icebp
pop
mov
sahf
adc
or
pop
dec
mov
shr
adc
add
add
out
enter
pop
fcom
add
(bad)
stc
mov
lods
cld
enter
sbb
xor
or
xchg
or
int3
cmp
sub
add
in
aas
sub
retf
pushf
jns
push
push
ficom
inc
or
push
mov
sbb
adc
in
mov
sbb
das
int3
rcr
sub
or
adc
int3
out
test
xor
mov
push
mov
jae
int
sub
(bad)
test
inc
fs
adc
mov
pop
test
fst
(bad)
push
sub
xchg
mov
test
ds
lock
mov
pop
enter
lds
gs
imul
jle
imul
ret
jae
dec
call
loopne
push
lods
sub
ins
pop
pop
arpl
xchg
in
adc
inc
test
add
mov
cwde
pop
push
xchg
sub
ins
jno
mov
or
sub
push
cwde
mov
ret
cmp
mov
mov
arpl
push
pop
sbb
xor
int
inc
adc
sub
test
xchg
and
ins
rcl
and
test
ret
outs
and
mov
fidivr
adc
xchg
loopne
xchg
sbb
dec
jns
mov
pop
test
aas
test
adc
mov
imul
or
outs
pop
mov
js
push
rol
mov
cmp
pop
dec
dec
and
mov
jp
add
push
clc
mov
js
push
dec
test
push
es
data16
cmps
pushf
jbe
jmp
(bad)
popf
jae
push
cmps
pop
movs
cwde
fiadd
fwait
jl
mov
sbb
call
stos
mov
std
icebp
pop
xchg
pop
mov
enter
data16
stc
arpl
or
mov
sbb
mov
shl
sbb
cmp
into
(bad)
lods
mov
pop
mov
dec
into
inc
jecxz
xor
sub
dec
rcl
push
add
adc
adc
pusha
aam
frstor
mov
or
jecxz
mov
or
test
mov
mov
add
(bad)
xor
shl
(bad)
pop
(bad)
push
(bad)
imul
xchg
push
lea
in
mov
or
test
lea
jbe
pop
pop
jp
lea
ins
dec
mov
ror
mov
dec
and
cmps
pop
shl
inc
je
les
sahf
jl
leave
xchg
pop
inc
sbb
inc
lahf
jl
rcl
out
pusha
sahf
add
ror
loope
out
(bad)
ret
dec
mov
shl
and
ret
xchg
jo
dec
mov
mov
cmp
xor
inc
ror
ror
stc
xor
cbw
ror
lahf
mov
outs
retf
or
ins
shl
test
popf
cli
mov
lods
mov
test
push
pushf
sti
cli
mov
mov
cmp
pop
mov
stos
dec
inc
cld
add
add
repz
or
push
ins
jo
mov
cli
test
or
pushf
rol
xor
jmp
and
add
mov
ins
mov
push
jle
mov
cdq
daa
sahf
js
pop
(bad)
lahf
pop
sub
xchg
fisubr
out
and
repnz
dec
es
movs
js
push
dec
push
leave
add
retf
cs
push
pop
push
dec
xchg
outs
cmp
cli
sbb
mov
pushf
or
mov
int
xor
aam
xor
in
mov
pop
sar
cmps
out
shl
and
push
or
xor
push
movs
daa
push
mov
xchg
adc
mov
add
mov
inc
sub
adc
push
fsub
inc
shl
call
xor
pop
or
cs
add
xchg
or
clc
add
fcmovu
dec
sahf
ror
xor
aaa
(bad)
jne
ja
mov
cmp
push
xchg
mov
icebp
xchg
pop
cmp
ja
nop
cwde
push
outs
inc
or
mov
cwde
out
es
cdq
fmulp
adc
(bad)
jmp
data16
sbb
and
and
ds
fisttp
je
xor
jns
xor
je
xor
hlt
xchg
inc
test
pop
or
adc
push
pop
fcmovnu
jb
stos
mov
pop
outs
int3
dec
pusha
mov
in
push
dec
stos
inc
or
pusha
cmp
mov
rsm
shr
pop
cmps
mov
and
adc
mov
jo
inc
out
add
push
and
je
rol
hlt
mov
jl
loopne
enter
not
pcmpeqd
xchg
mov
adc
iret
or
es
add
test
and
adc
mov
lahf
pusha
pop
push
cdq
into
fs
sub
xor
mov
cmp
push
xor
jecxz
xor
out
and
add
test
cmps
dec
add
dec
or
pop
mov
bnd
fstp
movs
sub
sbb
xor
sub
mov
or
xchg
mov
mov
jp
push
in
fidiv
inc
xor
inc
jo
jmp
loop
add
retf
xchg
stos
or
and
or
and
ds
xlat
adc
pusha
arpl
or
pop
add
adc
ret
fwait
out
inc
cmp
mov
pop
stos
sbb
iret
add
sahf
popa
mov
add
mov
mov
mov
mov
stc
lds
or
sbb
dec
xor
ds
xor
in
ins
mov
inc
xchg
inc
add
aad
inc
setns
dec
xor
aaa
rcr
ja
(bad)
xchg
xchg
mov
push
push
xchg
mov
jmp
test
shl
dec
jmp
lock
jp
add
mov
cmc
xchg
adc
xchg
push
lds
inc
sub
nop
adc
adc
inc
(bad)
int3
fsub
xchg
mov
or
mov
mov
inc
clc
enter
jmp
jbe
mov
sbb
shl
xor
movups
fsub
jecxz
sbb
and
mov
dec
(bad)
sub
call
outs
adc
inc
mov
int3
lds
cmps
sbb
fldcw
mov
mov
call
std
xor
inc
dec
arpl
push
add
cdq
cmps
in
inc
fwait
lods
cmps
cld
pop
push
pop
cmp
xchg
pop
sub
test
dec
push
leave
mov
and
inc
mov
and
adc
test
sbb
push
dec
adc
dec
out
mov
jp
ret
lahf
aam
mov
stc
xchg
(bad)
jl
icebp
push
add
push
sbb
cmp
data16
pop
pop
loop
xchg
enter
sti
or
xor
adc
js
les
outs
in
addr16
mov
cmp
jecxz
inc
mov
or
inc
mov
std
cdq
adc
sbb
mov
and
sbb
ss
and
cmp
jae
push
retf
sbb
loope
data16
xchg
int3
mov
enter
and
and
test
int
hlt
adc
add
or
dec
popf
int3
aaa
inc
retf
sar
sbb
add
cmp
lock
in
cmp
sbb
jmp
sub
ret
adc
add
sahf
rol
mov
add
xor
push
adc
(bad)
cmc
movs
dec
mov
sbb
jae
and
jecxz
jne
sar
outs
xor
add
inc
jne
ficomp
inc
shl
lods
sbb
push
imul
jbe
inc
imul
or
ds
not
sbb
cwde
(bad)
iret
push
pop
inc
enter
pop
pop
dec
push
inc
pop
mov
mov
xchg
sbb
xor
pop
and
dec
imul
pop
cmp
lods
jns
jg
add
or
es
add
xor
loope
xchg
mov
jo
cmp
cmp
(bad)
bound
xor
mov
push
dec
sahf
in
sbb
out
sbb
leave
or
inc
ins
pop
gs
pop
mov
stc
adc
jp
in
inc
push
int
inc
dec
or
inc
push
push
mov
movs
mov
or
adc
idiv
loopne
mov
outs
pop
ins
rcr
pusha
inc
ja
popa
lds
jo
mov
in
outs
pop
dec
popa
jno
and
out
dec
es
(bad)
mov
ss
push
into
add
add
rol
rol
jmp
hlt
and
push
mov
mov
das
scas
ror
pmuludq
ud0
arpl
jmp
dec
mov
mov
fs
arpl
mov
sub
jo
push
or
mov
jmp
into
aaa
call
or
cld
sbb
cld
dec
stos
cld
retfw
push
ins
int3
out
jmp
or
ret
(bad)
jo
mov
in
aam
in
fsubr
pop
dec
ins
out
cmovno
into
fnstsw
inc
bound
imul
push
dec
add
add
adc
add
lods
sbb
or
pusha
adc
adc
cwde
ror
loopne
or
or
setle
ss
cmp
pop
mov
dec
lock
and
cmps
lahf
mov
pusha
aad
call
pop
ins
(bad)
inc
add
enter
xlat
jb
addr16
xor
(bad)
mov
or
mov
outs
stos
xchg
mov
mov
sbb
or
mov
or
push
push
ret
fimul
sbb
or
ror
cmps
pop
sub
or
outs
dec
fisub
les
sub
aam
jb
pusha
or
lods
je
lods
out
jae
out
add
icebp
add
fwait
leave
adc
icebp
daa
enter
in
fild
fiadd
icebp
or
enter
(bad)
js
push
lahf
xor
rol
push
jecxz
mov
int
xchg
(bad)
cli
and
jo
data16
mov
cwde
dec
xor
xor
push
dec
xor
xchg
push
cmps
iret
or
or
movs
mov
sub
and
adc
or
outs
in
jbe
sub
mov
mov
in
(bad)
sub
sub
scas
int3
push
or
dec
or
sbb
out
mov
pavgw
add
es
and
cld
loop
or
pop
mov
push
call
adc
mov
cld
push
xor
or
or
xor
jp
xor
xor
imul
fsub
sub
inc
or
out
gs
inc
(bad)
pop
pusha
outs
(bad)
mov
lock
or
fwait
das
ss
fadd
data16
pop
push
inc
dec
aaa
mov
sbb
push
retf
iret
dec
std
mov
in
jbe
retf
jbe
or
mov
mov
mov
sbb
xor
stos
push
in
into
out
lock
and
lods
mov
inc
add
es
inc
or
stos
lock
scas
iret
and
and
xor
jb
movlps
mov
or
xor
adc
lds
or
xor
xor
xor
lahf
xor
arpl
or
adc
jno
out
xchg
(bad)
js
dec
pop
rol
adc
popa
push
xor
es
ja
jmp
add
lods
xor
jbe
inc
cmp
mov
cmps
sub
sub
mov
movs
xchg
and
adc
pop
enter
push
push
jmp
inc
in
cs
encls
lds
out
loope
pop
dec
in
adc
icebp
sbb
das
shr
add
dec
push
aas
mov
xor
hlt
xor
inc
or
xor
das
pop
outs
test
loope
add
sub
addr16
pop
adc
dec
mov
adc
mov
aam
inc
aam
jbe
push
aas
add
jne
addr16
or
xchg
push
xchg
xchg
adc
add
xchg
aad
push
push
xor
lods
ins
cmp
or
cmp
fst
or
imul
in
fidivr
add
xchg
mov
in
xchg
imul
adc
psrlw
mov
xor
shl
xchg
adc
push
xor
xchg
pop
and
sbb
xor
pop
dec
xor
jns
cmps
fs
out
or
pop
jne
pop
xor
push
jmp
push
out
xor
xchg
dec
jge
mov
xchg
push
cli
loop
sbb
inc
mov
cmp
hlt
inc
int
and
push
dec
mov
pop
and
test
sub
xor
bound
retf
into
jb
rcl
call
test
adc
dec
and
icebp
sar
or
aas
std
jae
mov
dec
jmp
xor
mov
xchg
push
xor
jmp
daa
ret
push
dec
push
out
int
dec
adc
push
pop
inc
inc
push
jnp
push
mov
fmul
test
popf
shl
jge
jmp
mov
retf
out
retf
sub
push
out
cmp
jmp
cmp
cmp
jne
adc
add
pop
aaa
fistp
adc
rcr
loopne
out
repz
pop
ror
dec
jne
inc
xchg
inc
or
mov
sbb
jnp
pop
daa
xor
imul
xor
aam
push
jbe
cmps
xor
mov
sub
mov
or
or
xor
inc
adc
pusha
sbb
pop
jbe
jbe
popa
jnp
dec
sub
jns
or
shr
mov
arpl
push
xchg
xchg
ins
or
dec
jnp
push
xlat
adc
mov
pop
movs
ja
pop
fadd
ret
mov
mov
icebp
call
jb
xchg
addr16
fnsave
adc
aam
pop
xor
mov
dec
xchg
ss
pop
fdiv
add
push
or
mov
xor
es
and
xor
mov
inc
mov
outs
repnz
imul
sub
push
sub
xchg
mov
pop
jne
mov
in
push
imul
mov
cmp
or
sbb
jne
mov
and
push
pop
mov
mov
js
adc
add
jb
sub
lods
xchg
loopne
pop
outs
jae
mov
jnp
xor
push
hlt
je
mov
pop
ja
out
jbe
add
inc
loopne
sub
sbb
(bad)
jne
mov
test
cmc
test
out
mov
pop
xchg
inc
jae
mov
lods
js
sar
shr
adc
outs
movs
in
enter
arpl
xchg
sub
mov
sub
push
jnp
mov
dec
stc
xchg
jl
stos
fs
sub
xchg
andnps
xchg
jne
retf
fsub
jmp
pop
fisub
or
(bad)
add
hlt
jae
aam
call
adc
xchg
in
sbb
pop
mov
repz
shl
cmp
jb
push
arpl
xor
test
pop
test
pop
popf
mov
pop
jne
push
pusha
xchg
sbb
push
push
pop
js
scas
shr
lods
lock
pusha
retf
(bad)
std
xor
cmps
push
in
jp
sub
mov
jae
ret
sub
xchg
fmul
jno
add
(bad)
jo
or
jns
imul
ret
retf
jb
and
xor
mov
mov
mov
add
cwde
lea
mov
scas
pop
fwait
das
sub
inc
mov
cmps
gs
cmp
(bad)
sbb
(bad)
jp
cli
or
pop
xchg
cmp
pop
pop
imul
xchg
shr
jmp
fdivr
in
sbb
or
bound
lods
xor
dec
fst
jl
push
pop
cdq
mov
mov
and
ja
mov
(bad)
pop
outs
inc
pop
out
or
fwait
jle
fldenv
lea
je
push
jg
fimul
mul
cwde
xor
push
pop
pop
push
sub
sbb
push
js
(bad)
dec
repz
inc
mov
sbb
sbb
cdq
adc
ins
jecxz
sbb
daa
arpl
push
push
sbb
lahf
aas
adc
mov
xchg
aaa
sbb
call
push
not
mov
bound
jp
mov
pop
loope
out
xor
add
and
add
and
(bad)
cmp
pusha
rcl
iret
or
sbb
fwait
adc
scas
mov
jnp
sub
mov
push
(bad)
fstp
in
or
mov
adc
or
shl
and
mov
cmp
ret
xchg
loopne
jo
add
fadd
cmp
inc
or
pusha
or
mov
inc
inc
imul
imul
jl
jb
(bad)
ja
(bad)
jns
(bad)
jae
imul
mov
enter
xchg
pushf
enter
cmp
popf
pushf
add
retf
or
retf
scas
cmp
mov
retf
ret
and
ret
jb
or
fmul
ret
mov
aad
retf
int
pop
into
jecxz
into
mov
int
sbb
in
pop
iret
mov
retf
push
cld
sbb
call
adc
mov
dec
in
test
add
add
sbb
sub
cmp
add
add
push
sub
or
adc
add
add
nop
add
jo
inc
add
cmp
inc
and
add
add
add
gs
add
add
add
add
mov
add
add
inc
add
push
add
add
sbb
inc
mov
cmp
shl
cmp
add
add
add
add
fiadd
add
add
add
push
inc
add
add
add
add
dec
inc
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
inc
add
add
add
add
pop
add
add
add
add
inc
add
add
add
inc
add
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
push
add
pop
add
add
inc
xor
inc
ss
inc
cs
dec
dec
add
add
add
add
add
add
add
add
add
add
add
inc
add
clc
xor
add
(bad)
dec
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
jae
ins
imul
push
inc
ins
imul
inc
push
inc
ins
imul
add
add
add
add
inc
add
xchg
inc
add
or
add
mov
inc
add
mov
pop
add
inc
add
add
add
ins
add
je
imul
jae
pop
add
inc
add
pop
add
inc
add
push
add
add
ins
add
add
je
and
inc
add
dec
add
pop
add
jb
outs
add
add
je
xor
add
bound
jo
cld
cmc
inc
add
add
add
add
add
add
add
push
inc
add
(bad)
(bad)
inc
add
add
std
inc
add
mov
add
sar
add
stc
inc
add
add
add
add
add
stc
inc
add
add
add
inc
add
add
add
cli
inc
add
add
add
inc
add
add
add
inc
add
add
add
jbe
and
add
and
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
inc
fdivr
inc
add
sbb
jl
add
call
add
add
cli
inc
add
call
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
mov
pop
movs
inc
(bad)
(bad)
(bad)
inc
sbb
mov
add
call
add
add
inc
add
call
add
add
cld
inc
add
cld
inc
add
cld
inc
add
cld
inc
add
cld
inc
add
cld
inc
add
inc
add
cld
inc
add
inc
add
std
inc
add
std
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmps
push
add
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
sub
inc
add
(bad)
inc
add
add
inc
add
stos
ror
inc
mov
xor
add
add
add
fdivr
inc
add
add
pop
add
add
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
lods
add
add
add
add
push
inc
ins
imul
inc
outs
jb
xor
add
(bad)
adc
push
sub
sbb
xchg
cmp
dec
(bad)
jno
adc
adc
mov
call
inc
mov
cmp
shl
cmp
aad
dec
xchg
popf
ror
xor
or
stos
add
xchg
push
imul
add
add
cs
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
arpl
jae
data16
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
add
inc
add
add
add
add
add
add
add
inc
add
inc
add
mov
add
add
add
inc
lds
xor
or
stos
add
xchg
push
imul
cmp
xor
or
stos
add
xchg
inc
outs
jb
add
add
push
imul
add
add
jo
inc
add
add
aam
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
push
add
or
pop
dec
adc
add
add
and
add
add
xchg
add
add
and
add
and
add
and
add
add
add
jbe
jo
xor
add
add
push
add
add
addr16
jo
outs
dec
gs
js
add
add
add
inc
add
add
add
loopne
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
addr16
jne
jb
push
popa
ins
jne
inc
js
add
add
xor
inc
add
add
in
mov
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
push
gs
ins
outs
jae
dec
gs
xor
inc
add
add
add
add
clc
mov
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
jae
gs
ins
xor
cs
ins
add
add
add
gs
ins
inc
js
arpl
gs
add
add
add
sub
inc
add
add
add
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
add
add
or
gs
gs
jo
popa
je
inc
add
add
or
fs
jo
xor
cs
ins
add
add
add
add
or
add
add
add
add
addr16
gs
popa
ins
jne
inc
js
add
xchg
add
mov
inc
add
add
adc
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
addr16
jb
popa
je
dec
gs
js
add
inc
add
add
sbb
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
push
gs
ins
jne
push
xchg
add
inc
add
add
add
sub
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
gs
jns
je
ins
inc
gs
jne
je
inc
dec
inc
add
add
jo
inc
add
add
xor
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
outs
arpl
gs
outs
outs
inc
add
jo
inc
add
add
add
add
inc
mov
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
dec
jo
outs
push
jb
arpl
jae
jo
inc
add
add
add
add
dec
mov
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
js
je
outs
fs
jb
arpl
jae
add
add
add
inc
add
add
add
pop
mov
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
inc
ins
outs
jae
dec
popa
outs
fs
add
inc
add
add
mov
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
gs
imul
add
jo
inc
add
add
add
add
jo
inc
add
or
je
jmp
push
mov
call
jmp
add
add
addr16
gs
js
jae
add
addr16
gs
jb
popa
je
add
add
push
gs
popa
ins
jne
push
gs
push
gs
gs
je
imul
push
gs
gs
push
outs
jb
add
je
gs
jo
imul
fs
js
jae
jae
add
add
push
popa
jae
inc
arpl
add
add
inc
gs
imul
gs
imul
add
add
add
xor
add
cmp
add
cmp
add
inc
add
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
add
add
add
ins
add
add
add
je
add
and
push
add
xor
add
add
call
add
add
push
add
inc
add
add
push
add
pop
add
imul
outs
add
outs
add
je
pop
add
inc
add
add
jb
popa
add
add
outs
add
imul
add
add
add
pop
add
inc
add
pop
add
xor
pop
add
ins
add
add
je
add
add
push
add
add
outs
add
je
popa
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
inc
add
add
jb
popa
add
add
outs
add
imul
add
add
add
pop
add
inc
add
pop
add
xor
pop
add
jne
ins
add
add
add
add
push
add
inc
add
add
push
add
pop
add
imul
outs
add
outs
add
je
pop
add
add
add
jb
popa
add
add
outs
add
imul
add
add
add
pop
add
inc
add
pop
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
mov
or
add
inc
add
push
add
add
add
add
and
push
add
xor
sbb
add
pop
add
arpl
jae
pop
add
aaa
add
add
add
js
add
add
add
add
add
add
jae
(bad)
(bad)
(bad)
inc
add
add
add
add
add
push
add
popa
add
jo
inc
add
add
add
push
add
pop
add
jo
dec
add
bound
add
add
add
add
add
add
add
push
add
add
add
add
pop
add
arpl
jae
pop
add
aaa
add
add
add
js
add
add
add
je
popa
add
add
add
add
add
and
sub
add
dec
lods
xor
or
stos
add
xchg
sbb
add
push
add
data16
add
jb
add
add
push
add
add
add
add
add
add
add
or
add
push
add
jne
add
add
add
add
add
add
xor
aaa
add
add
add
add
jae
and
push
add
je
jne
jo
and
bound
add
test
add
add
and
add
jae
and
dec
add
arpl
jb
outs
add
outs
add
je
and
add
inc
add
add
jb
popa
add
add
outs
add
imul
add
add
add
add
jne
data16
add
push
add
and
push
add
and
jne
ins
add
add
outs
add
je
jp
jne
data16
push
add
add
add
add
add
test
add
je
add
and
push
add
add
add
add
add
add
jne
and
dec
add
arpl
jb
outs
add
outs
add
je
add
outs
add
and
ja
add
je
add
add
ins
add
imul
je
and
ja
add
add
outs
add
add
ins
add
add
jae
and
jae
imul
and
push
add
outs
add
add
jp
jne
ins
add
add
outs
add
add
add
popa
add
push
add
jb
and
dec
add
jae
je
popa
add
add
je
imul
and
imul
add
outs
add
outs
add
add
imul
add
jae
and
push
add
je
jne
jo
and
add
outs
add
jne
je
and
jae
je
popa
add
je
add
add
add
add
jae
and
push
add
je
jne
jo
and
bound
add
test
add
add
and
add
jae
and
dec
add
arpl
jb
outs
add
outs
add
je
and
add
inc
add
add
jb
popa
add
add
outs
add
imul
add
add
add
add
add
jne
data16
add
push
add
and
push
add
and
jne
ins
add
add
outs
add
je
jp
jne
data16
push
add
add
add
lods
xor
or
stos
add
xchg
ror
xor
or
stos
add
xchg
add
add
push
add
dec
add
arpl
jb
outs
add
outs
add
je
and
add
inc
add
add
jb
popa
add
add
outs
add
imul
add
add
add
add
add
jne
imul
and
je
outs
add
add
add
jne
ins
add
and
push
add
je
jne
jo
add
add
add
add
outs
add
ins
add
add
outs
add
and
outs
add
ja
and
data16
jb
ja
popa
add
add
add
add
add
imul
outs
add
outs
add
je
add
outs
add
and
je
outs
add
add
add
outs
add
add
add
add
je
aas
add
add
data16
add
and
data16
outs
add
jae
push
add
add
add
outs
add
je
popa
add
add
je
imul
and
jns
outs
add
and
arpl
popa
add
and
jae
je
popa
add
je
and
je
push
add
add
add
and
popa
add
popa
add
outs
add
add
add
add
add
dec
add
arpl
jb
outs
add
outs
add
je
and
add
inc
add
add
jb
popa
add
add
outs
add
imul
add
add
add
add
add
add
jne
imul
and
je
outs
add
add
add
jne
ins
add
and
push
add
je
jne
jo
add
add
add
add
jo
add
add
add
jp
add
push
add
cmp
das
add
add
ja
ja
add
imul
outs
add
outs
add
je
add
outs
add
das
add
add
add
add
add
outs
add
add
add
add
add
add
ins
add
add
jae
jo
js
aas
add
add
add
add
add
add
add
je
je
jo
cmp
das
add
add
ja
ja
add
imul
outs
add
outs
add
je
add
outs
add
das
add
add
outs
add
add
add
das
add
add
add
ins
add
add
jae
jo
js
aas
add
add
jo
ins
add
jns
ins
add
outs
add
cmp
add
add
popa
add
imul
dec
add
add
add
add
add
arpl
bound
sub
add
add
add
add
add
add
add
add
add
popa
add
xor
xor
add
xor
xor
data16
add
add
push
add
cmp
das
add
add
ja
ja
add
imul
outs
add
outs
add
je
add
outs
add
das
add
outs
add
add
add
add
outs
add
add
add
add
add
add
ins
add
add
jae
jo
js
aas
add
add
add
add
add
jbe
popa
dec
jae
je
imul
add
add
je
je
jo
cmp
das
add
add
ja
ja
add
imul
outs
add
outs
add
je
add
outs
add
das
add
add
outs
add
add
add
das
add
add
add
ins
add
add
jae
jo
js
aas
add
add
jo
ins
add
jns
ins
add
outs
add
cmp
add
add
popa
add
imul
dec
add
add
add
add
add
arpl
bound
sub
add
add
add
add
add
add
add
add
add
popa
add
xor
xor
add
xor
xor
data16
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
inc
add
add
xor
bound
cmp
arpl
add
cmp
xor
cmp
xor
add
xor
add
popa
add
add
popa
add
add
add
add
xor
xor
popa
add
add
add
add
add
add
add
je
add
push
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
adc
add
push
add
inc
add
popa
add
arpl
add
add
add
add
inc
add
inc
add
arpl
add
je
add
adc
add
push
add
je
push
add
add
inc
add
add
add
add
add
push
add
dec
add
add
push
inc
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
push
arpl
jae
push
outs
push
outs
imul
jbe
popa
push
arpl
imul
add
pop
pop
jbe
popa
dec
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
inc
push
dec
outs
je
add
jbe
popa
push
popa
jb
jne
add
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
dec
outs
push
je
push
popa
jb
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
je
add
pop
pop
jbe
popa
inc
outs
add
add
call
mov
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
bound
gs
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
popa
jb
fs
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
push
jne
dec
ja
gs
add
pop
pop
jbe
popa
dec
gs
add
add
jbe
popa
push
popa
jb
push
arpl
add
add
jbe
popa
inc
jb
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
imul
add
pop
pop
jbe
popa
push
jb
outs
je
imul
bound
imul
add
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
jbe
popa
push
je
inc
popa
je
pop
pop
jbe
popa
push
je
inc
ins
jo
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jbe
add
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
je
push
outs
inc
outs
jae
add
pop
pop
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
push
je
inc
jb
push
popa
jb
outs
jo
add
pop
pop
jbe
popa
push
popa
jb
popa
jb
dec
outs
data16
add
pop
pop
jbe
popa
dec
xor
jb
push
popa
jb
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
push
je
push
outs
push
outs
imul
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
push
inc
add
inc
add
add
xor
inc
add
add
add
inc
add
add
add
inc
add
add
add
push
inc
add
push
inc
add
add
add
push
inc
add
push
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
push
inc
add
push
inc
add
push
inc
add
inc
add
add
add
add
add
add
add
add
pusha
xor
inc
add
sub
add
add
add
add
add
add
pusha
sub
inc
add
xor
add
sbb
(bad)
inc
add
add
add
add
pusha
and
add
add
or
stc
push
(bad)
inc
add
add
add
add
pusha
dec
push
inc
add
sub
sub
std
push
(bad)
inc
add
add
add
add
pusha
cmp
inc
add
sub
sub
add
pop
(bad)
inc
add
add
add
add
pusha
and
inc
add
adc
add
add
(bad)
inc
add
add
add
add
pusha
je
inc
add
sub
xor
sub
add
add
add
add
add
add
push
inc
add
sub
adc
add
add
add
pop
(bad)
inc
add
add
add
push
inc
add
sub
adc
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
push
inc
add
add
add
add
push
inc
add
inc
add
add
hlt
push
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
add
add
push
inc
add
add
add
(bad)
(bad)
inc
add
add
push
inc
add
(bad)
(bad)
inc
add
add
add
inc
and
add
add
inc
add
inc
add
outs
je
add
add
jns
dec
gs
gs
add
gs
add
add
ins
jne
add
add
outs
dec
gs
add
bound
jns
add
ins
outs
popa
ins
add
fs
popa
arpl
ins
popa
jae
add
add
push
popa
je
add
add
ins
push
popa
jae
dec
inc
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
mov
push
push
lea
push
push
push
mov
mov
mov
mov
call
mov
test
jge
push
push
push
push
call
mov
lea
push
push
lea
push
push
push
mov
call
test
jge
push
push
push
push
call
mov
mov
xor
cmp
setne
xor
cmp
setne
test
jne
mov
mov
pop
pop
mov
xor
add
ret
mov
lea
push
push
lea
push
push
push
mov
call
test
jge
push
push
push
push
call
mov
mov
dec
pop
neg
sbb
pop
and
add
mov
xor
add
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
push
push
mov
push
lea
push
push
mov
mov
mov
call
mov
push
mov
push
call
mov
call
mov
push
push
call
lea
call
cmp
jne
mov
push
call
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
lea
push
mov
push
push
push
push
push
push
lea
push
push
mov
mov
mov
mov
call
push
mov
mov
push
call
mov
call
mov
push
push
call
lea
call
cmp
jne
mov
push
call
mov
mov
call
cmp
jne
mov
push
call
call
mov
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
lea
lea
mov
push
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
push
call
mov
call
mov
push
push
mov
call
lea
call
cmp
jne
mov
push
call
cmp
jl
cmp
jle
cmp
jne
mov
lea
call
push
call
mov
lea
call
mov
push
call
mov
add
jo
push
lea
push
push
call
push
push
push
mov
lea
mov
push
push
call
mov
push
push
call
call
mov
push
push
call
mov
lea
push
push
call
lea
lea
push
push
push
call
add
jmp
mov
lea
call
push
call
lea
push
push
push
push
mov
mov
lea
mov
push
push
call
mov
push
push
call
call
mov
push
push
call
lea
call
mov
push
call
mov
call
mov
mov
push
jmp
lea
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
call
mov
lea
call
mov
lea
push
mov
lea
push
push
push
call
cmp
jge
push
push
push
push
call
cmp
je
mov
lea
push
mov
lea
push
push
push
call
cmp
jge
push
push
push
push
call
mov
lea
call
lea
mov
lea
mov
push
lea
lea
push
push
mov
lea
mov
push
push
push
call
cmp
jge
push
push
push
push
call
push
mov
lea
call
lea
call
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
call
mov
lea
call
mov
lea
push
push
push
lea
push
push
call
mov
push
mov
push
call
mov
mov
call
mov
lea
push
push
call
lea
call
cmp
jne
lea
mov
push
push
mov
mov
call
mov
lea
call
lea
call
lea
lea
push
mov
lea
push
push
push
lea
push
push
call
push
mov
push
call
mov
call
mov
lea
push
push
call
lea
call
cmp
jne
mov
push
call
call
mov
mov
jmp
mov
push
call
call
mov
mov
push
jmp
lea
call
lea
call
ret
mov
lea
call
lea
call
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
push
push
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
mov
lea
call
lea
call
mov
lea
push
push
call
push
push
call
mov
call
mov
lea
push
push
call
lea
call
cmp
jle
cmp
je
lea
push
lea
lea
push
push
mov
mov
call
lea
push
jmp
sub
lea
jo
push
lea
lea
push
push
mov
mov
call
lea
push
call
mov
lea
call
lea
call
push
jmp
test
je
lea
call
lea
call
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
mov
mov
mov
mov
call
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
neg
sbb
neg
neg
call
cmp
je
mov
push
push
call
mov
lea
call
mov
push
push
call
lea
push
push
mov
mov
call
mov
lea
call
push
call
mov
lea
call
push
push
call
neg
sbb
lea
inc
neg
mov
lea
push
push
push
call
add
lea
call
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
lea
call
mov
push
call
mov
mov
push
call
and
neg
sbb
neg
neg
not
mov
mov
push
call
push
lea
call
ret
mov
mov
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
lea
call
mov
mov
push
mov
mov
push
call
mov
lea
call
mov
mov
push
mov
mov
push
call
mov
lea
call
mov
mov
push
mov
mov
push
call
mov
lea
call
mov
mov
push
mov
mov
push
call
mov
lea
call
mov
mov
push
mov
mov
push
call
mov
lea
call
mov
mov
push
mov
mov
push
call
mov
lea
call
mov
mov
push
mov
mov
push
call
mov
lea
call
mov
mov
mov
push
push
call
test
je
mov
mov
mov
push
push
call
mov
lea
call
push
mov
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
push
push
call
lea
push
lea
push
lea
push
push
call
add
mov
mov
push
push
push
call
add
mov
push
call
mov
lea
push
mov
mov
mov
push
call
cmp
jne
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
call
lea
push
lea
push
call
lea
call
jmp
mov
lea
push
mov
mov
mov
push
call
cmp
jne
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
call
lea
push
lea
push
call
lea
call
mov
mov
mov
push
push
call
mov
lea
call
push
push
push
push
call
lea
call
mov
push
push
lea
push
push
call
mov
push
call
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
push
push
call
ret
lea
push
push
call
lea
call
ret
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
lea
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
call
push
push
call
xor
cmp
lea
sete
neg
mov
call
cmp
je
cmp
jne
push
push
call
lea
mov
push
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
push
call
lea
lea
push
push
call
lea
call
mov
mov
push
push
call
mov
lea
call
push
push
push
push
call
lea
call
push
lea
push
push
push
call
push
call
push
jmp
lea
call
lea
call
lea
push
push
call
ret
lea
push
push
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
lea
mov
mov
mov
push
lea
mov
push
push
mov
mov
call
mov
lea
mov
call
push
jmp
test
je
lea
call
lea
call
ret
ret
mov
mov
pop
pop
mov
mov
xor
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
mov
mov
call
mov
mov
call
mov
push
lea
push
push
mov
call
mov
push
mov
push
push
call
mov
call
mov
lea
push
push
call
sub
lea
jo
call
mov
lea
add
jo
push
push
call
lea
push
call
mov
lea
call
lea
call
mov
push
lea
push
push
call
mov
push
mov
push
push
call
call
mov
lea
push
push
call
lea
call
mov
push
push
call
mov
lea
call
push
jmp
test
je
lea
call
lea
call
lea
call
ret
lea
call
ret
mov
mov
pop
pop
mov
mov
xor
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
lea
xor
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
call
xor
cmp
setne
xor
cmp
setne
test
jne
mov
lea
push
push
push
call
cmp
jge
push
push
push
push
call
mov
mov
push
push
call
mov
mov
lea
call
lea
call
mov
mov
lea
push
push
push
call
test
jge
push
push
push
push
call
cmp
jne
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
push
push
mov
mov
call
lea
lea
push
push
call
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
lea
mov
push
lea
push
lea
push
push
mov
call
push
call
call
lea
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
fwait
push
jmp
mov
push
push
lea
push
push
push
mov
call
cmp
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
jge
push
push
push
push
call
mov
mov
push
push
call
test
jne
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jne
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
lea
push
lea
push
push
lea
push
push
mov
call
lea
mov
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
lea
push
lea
push
push
lea
push
push
mov
call
lea
mov
call
lea
lea
push
lea
push
lea
push
push
jmp
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jne
mov
push
push
call
mov
lea
call
push
push
call
lea
mov
lea
push
lea
push
push
lea
push
push
mov
call
lea
mov
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
lea
push
lea
push
push
lea
push
push
mov
call
lea
mov
call
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
lea
call
cmp
jne
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
lea
mov
push
push
call
push
lea
push
push
call
push
mov
lea
push
push
call
push
lea
push
push
call
push
mov
push
call
call
mov
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
call
fwait
push
jmp
mov
call
call
fwait
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
push
push
call
mov
mov
call
lea
push
push
call
call
push
call
call
mov
xor
cmp
sete
neg
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
lea
push
mov
mov
mov
push
call
mov
mov
add
call
lea
call
mov
mov
mov
push
push
call
test
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
add
call
mov
mov
mov
add
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
mov
add
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
mov
add
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
mov
add
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
mov
add
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
mov
add
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
mov
add
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
mov
add
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
mov
add
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
mov
add
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
mov
add
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
mov
add
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
mov
add
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
lea
push
call
lea
call
mov
mov
mov
mov
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
mov
lea
push
call
fmul
fnstsw
test
jne
call
fadd
fnstsw
test
jne
call
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
mov
mov
push
mov
push
call
mov
lea
call
mov
mov
add
call
lea
call
mov
jmp
mov
mov
mov
mov
push
call
mov
fwait
push
jmp
lea
call
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
test
je
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
test
je
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
test
je
call
mov
lea
push
push
call
xor
cmp
fnclex
jge
push
push
push
push
call
mov
lea
mov
push
lea
push
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
push
mov
mov
call
mov
lea
lea
push
lea
push
push
push
call
add
cmp
je
call
mov
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
xor
lea
push
rep
mov
lea
rep
mov
mov
mov
call
mov
lea
call
lea
push
push
push
call
lea
call
lea
lea
push
push
push
call
push
call
mov
call
lea
lea
push
push
push
call
mov
call
mov
dec
je
dec
je
mov
jmp
mov
lea
mov
cmp
ja
jmp
mov
sub
je
dec
je
dec
jne
mov
jmp
mov
cmp
ja
jmp
mov
jmp
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
lea
sahf
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sahf
sahf
sahf
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
mov
xchg
add
fcom
add
lock
add
add
add
xchg
add
ss
add
inc
xchg
add
pop
xchg
add
ins
xchg
add
js
add
mov
add
add
into
xchg
add
loopne
add
not
add
xchg
add
push
add
adc
xor
add
inc
xchg
add
push
add
adc
add
add
push
add
or
add
js
add
jle
add
push
add
or
add
add
xor
add
rcl
add
out
xchg
add
xor
add
push
xchg
add
and
add
inc
xchg
add
pop
xchg
add
je
add
mov
add
test
add
pusha
add
adc
add
into
xchg
add
test
add
call
xchg
add
push
xchg
add
push
xchg
add
sub
add
dec
xchg
add
pop
xchg
add
jb
add
test
add
xchg
xchg
add
mov
add
sub
xor
add
enter
push
add
loop
add
in
xchg
add
cli
xchg
add
add
add
adc
add
and
add
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
je
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
popa
jb
popa
jb
dec
outs
data16
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
jb
dec
outs
jbe
add
add
pop
pop
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
inc
outs
add
add
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
push
je
inc
jb
push
popa
jb
outs
jo
add
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
arpl
jae
push
outs
push
outs
imul
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
dec
jae
je
imul
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
jbe
popa
dec
bound
gs
add
pop
popa
fs
imul
imul
popa
fs
imul
xor
imul
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
push
add
add
jbe
popa
inc
imul
add
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
push
je
inc
ins
jo
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
push
jne
dec
ja
gs
add
add
pop
pop
jbe
popa
dec
xor
add
add
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
fs
data16
je
outs
add
add
jbe
popa
push
arpl
imul
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
inc
dec
jae
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
jbe
popa
push
je
push
outs
push
outs
imul
add
jbe
popa
push
jb
outs
je
imul
popa
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
dec
outs
push
je
push
popa
jb
add
pop
inc
dec
ins
outs
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
inc
imul
add
pop
pop
jbe
popa
push
popa
jb
push
arpl
add
add
jbe
popa
dec
gs
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
pop
jbe
popa
push
popa
jb
fs
add
jbe
popa
push
je
push
outs
inc
outs
jae
add
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
popa
ins
ins
ins
jne
add
add
dec
je
outs
add
add
pop
pop
jbe
popa
inc
push
dec
outs
je
add
add
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
dec
xor
jb
push
popa
jb
add
pop
pop
jbe
popa
inc
jb
gs
bound
