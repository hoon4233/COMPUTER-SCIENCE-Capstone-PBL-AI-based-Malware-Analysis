enter
add
add
dec
add
add
add
add
daa
add
add
add
add
add
je
add
call
add
add
xor
add
add
sbb
add
sub
fiadd
add
add
pop
add
push
add
add
or
sub
add
add
add
add
push
sldt
add
add
stos
add
push
sub
add
or
add
sub
add
or
add
sub
add
or
add
sub
add
or
add
sub
add
or
sub
add
or
add
outs
sub
add
sub
add
add
add
sub
sub
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
sub
add
adc
add
adc
add
add
add
add
add
add
sub
add
or
add
sub
xor
add
add
add
add
adc
jle
add
add
sub
add
or
add
sub
xor
add
add
add
add
adc
jle
add
add
sub
sub
push
sub
xor
add
add
add
add
add
add
add
add
or
sub
push
sub
xor
add
add
add
jle
add
add
das
add
or
sub
push
sub
xor
add
add
push
add
adc
jle
add
add
sub
add
or
pop
sub
jb
add
jo
add
xor
add
outs
xor
add
jae
add
or
add
add
add
add
add
sub
push
sub
xor
add
add
add
add
adc
jle
add
add
sub
push
sub
add
add
add
xchg
jae
add
push
sub
add
je
add
add
jae
add
or
add
or
sub
add
aaa
add
or
add
add
xor
add
add
adc
sub
add
push
outs
cmp
add
or
sub
sub
add
push
outs
cmp
add
add
add
add
add
xor
add
add
or
add
add
add
add
inc
or
sub
add
add
add
or
cmp
add
add
sub
add
or
jle
add
add
inc
or
pop
add
push
adc
push
adc
add
jae
add
or
add
or
pop
or
add
add
or
sub
add
or
add
add
add
add
add
sub
push
sub
add
add
add
add
and
sub
add
add
xor
add
add
add
add
adc
sub
add
push
or
add
sub
sub
add
or
add
push
adc
add
jae
add
or
inc
add
or
sub
add
push
sub
adc
add
inc
add
add
add
adc
sub
add
push
outs
inc
add
or
add
jo
inc
add
or
push
sub
sub
add
push
outs
inc
add
or
add
jo
inc
add
or
sub
add
push
outs
inc
add
or
add
jo
and
add
inc
add
or
add
sbb
sub
add
push
outs
inc
add
or
add
jo
and
add
inc
add
or
add
call
inc
add
or
jb
add
jo
dec
add
or
sub
add
push
outs
inc
add
or
add
jo
inc
add
or
pop
sub
sub
add
push
outs
inc
add
or
add
jo
inc
add
or
sub
add
push
outs
inc
add
or
add
jo
mov
inc
add
or
add
sbb
sub
add
push
outs
inc
add
or
add
jo
mov
inc
add
or
add
push
add
push
outs
dec
add
or
add
jo
ret
add
jo
outs
dec
add
or
add
sub
sub
add
push
outs
dec
add
or
add
jo
ret
add
jo
mov
dec
add
or
add
and
daa
add
sub
add
add
add
jo
dec
add
or
sub
or
sub
add
xor
add
add
add
add
adc
add
sub
add
add
add
inc
sub
push
or
sub
add
add
add
dec
add
or
add
fimul
add
add
dec
add
or
fadd
sub
add
add
add
add
add
and
add
add
add
adc
add
lea
add
add
add
or
add
sub
add
or
add
or
add
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
outs
sbb
add
outs
push
add
or
add
add
push
outs
push
add
or
add
add
push
outs
push
add
or
add
add
push
outs
push
add
or
add
add
push
outs
push
add
or
add
add
push
outs
push
add
or
add
push
add
or
add
add
push
push
jb
add
jo
push
add
or
add
outs
push
add
or
add
add
push
pop
std
push
jae
add
or
add
or
add
add
push
jb
add
jo
push
add
or
add
add
push
and
add
add
pushf
add
add
add
or
add
or
add
add
push
push
outs
pop
add
or
add
add
push
push
outs
pop
add
or
add
add
push
push
jb
add
jo
push
add
or
add
outs
push
add
or
add
add
push
and
add
add
jae
add
or
add
or
add
add
push
jb
add
jo
push
add
or
add
add
push
and
add
add
pushf
add
add
add
or
add
or
add
add
push
pop
outs
pop
add
or
add
add
push
push
outs
pop
add
or
add
add
push
push
jb
add
jo
push
add
or
add
outs
push
add
or
add
add
push
and
add
add
mov
push
add
or
add
or
add
add
push
jb
add
jo
push
add
or
add
add
push
and
add
add
pushf
add
add
add
or
add
or
add
add
push
sbb
add
or
add
add
push
push
outs
pop
add
or
add
add
push
push
jb
add
jo
push
add
or
add
outs
push
add
or
add
add
push
pop
std
and
push
add
or
add
or
add
add
push
jb
add
jo
push
add
or
add
add
push
and
add
add
pushf
add
add
add
or
add
or
add
add
push
sbb
add
or
add
add
push
push
outs
pop
add
or
add
add
push
push
jb
add
jo
push
add
or
add
outs
push
add
or
add
add
push
and
add
add
mov
push
add
or
add
or
add
add
push
jb
add
jo
push
add
or
add
add
push
and
add
add
pushf
add
add
add
or
add
or
add
add
push
sbb
add
or
add
add
push
push
outs
pop
add
or
add
add
push
push
jb
add
jo
push
add
or
add
outs
push
add
or
add
add
push
and
add
add
jae
add
or
add
or
add
add
push
jb
add
jo
push
add
or
add
add
push
and
add
add
pushf
add
add
add
or
add
or
add
add
push
sbb
add
or
add
add
push
push
outs
pop
add
or
add
add
rol
add
jae
add
or
pop
add
or
add
sub
add
add
and
add
add
aas
add
add
add
or
pop
add
or
add
pusha
add
or
outs
and
add
outs
popa
add
or
add
pusha
add
or
outs
and
add
outs
popa
add
or
add
pusha
add
or
outs
sbb
popa
add
or
add
pusha
add
or
outs
pop
add
push
outs
popa
add
or
add
pusha
add
or
outs
sbb
add
outs
popa
add
or
add
pusha
add
or
outs
sbb
add
outs
popa
add
or
add
add
jo
push
add
or
add
add
jo
bound
add
add
outs
sbb
add
outs
arpl
add
add
outs
sbb
add
outs
arpl
add
add
outs
sbb
arpl
add
add
outs
pop
add
push
outs
arpl
add
add
outs
and
add
outs
arpl
add
add
outs
and
add
outs
arpl
add
add
push
sub
or
sub
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
sbb
add
add
add
(bad)
(bad)
(bad)
push
push
add
sbb
add
or
add
or
cmp
add
add
add
add
inc
or
sub
jle
add
add
push
add
sbb
xor
add
outs
data16
or
mov
lea
add
sub
add
jae
add
or
add
or
jae
add
or
add
add
add
push
add
sbb
xor
add
adc
push
add
add
sub
add
sub
fidiv
add
add
sub
and
or
add
add
ins
add
or
add
add
add
adc
jb
add
jo
lea
add
and
ins
add
or
add
or
or
push
adc
adc
ins
add
or
add
or
jle
add
add
push
add
sbb
xor
add
outs
jo
add
add
add
or
add
sub
add
add
add
xor
add
pop
add
add
pop
add
(bad)
push
push
add
sbb
add
or
add
adc
sub
add
sub
sub
add
adc
add
adc
add
or
add
add
add
add
or
jb
add
or
add
sub
add
xor
add
add
push
add
adc
add
jae
add
or
add
sub
xor
add
add
add
add
adc
ror
add
add
xor
add
or
add
sub
xor
add
add
adc
add
add
sub
or
sub
push
sub
add
add
add
add
add
jge
add
add
jnp
add
add
add
scas
add
jnp
add
add
add
sub
sub
jb
add
jo
jne
add
jp
add
add
add
add
sub
adc
add
adc
add
or
add
add
add
add
or
jb
add
or
add
sub
add
xor
add
add
push
add
adc
add
jae
add
or
add
sub
xor
add
add
add
add
adc
ror
add
add
xor
add
or
add
sub
xor
add
add
adc
add
add
sub
or
sub
push
sub
xor
add
add
adc
add
inc
or
sub
sub
add
sub
sub
add
sub
add
(bad)
adc
sub
adc
add
add
add
add
adc
jle
add
or
inc
or
sub
sub
add
xor
or
add
or
sub
push
sub
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
push
add
and
add
add
fmul
je
imul
add
sbb
add
and
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
or
add
add
push
add
jae
and
push
add
add
mov
and
push
add
add
or
nop
add
or
add
add
add
adc
pushf
or
add
cmp
or
ja
cmp
push
add
add
push
add
add
add
jmp
and
push
add
or
or
add
add
add
add
add
add
or
push
add
ins
add
add
add
ss
add
add
and
push
add
add
push
add
add
add
add
or
add
and
push
add
add
clc
pop
push
add
or
push
add
add
cmp
push
add
and
push
add
or
add
push
jecxz
adc
imul
or
pop
adc
fild
test
jae
push
add
jae
push
add
add
add
clc
pop
push
add
jecxz
push
add
mov
or
push
push
add
add
add
or
or
add
add
pop
aaa
or
add
add
and
push
add
or
jno
jp
or
mov
cmp
adc
push
test
push
pop
push
add
or
mov
push
pop
push
add
add
pop
adc
dec
pop
test
test
add
push
add
add
or
jp
push
add
add
mov
or
or
sbb
add
add
add
add
add
add
add
add
add
add
pop
jbe
inc
add
add
add
add
add
or
push
add
add
add
adc
xchg
or
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
or
adc
add
or
add
adc
and
add
add
popa
add
add
add
add
add
adc
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
adc
add
dec
add
add
push
add
add
push
add
add
push
add
add
pop
add
add
pop
add
add
add
add
add
add
repnz
add
adc
pop
add
add
add
add
add
cld
add
add
dec
add
add
pop
push
and
add
add
sbb
or
add
add
add
add
add
and
add
add
sbb
or
add
add
and
add
add
sbb
add
add
add
adc
into
or
add
sub
add
add
adc
int
jae
add
inc
and
add
add
or
add
add
add
adc
or
jge
add
jl
add
add
adc
push
or
and
add
add
or
xchg
add
loopne
add
add
adc
add
lea
add
mul
add
add
adc
push
add
and
add
add
sbb
add
add
sbb
or
add
add
and
add
add
add
add
add
add
or
or
add
add
add
or
add
and
add
add
sbb
or
add
add
add
add
add
add
add
les
pop
add
and
add
add
add
or
push
sub
add
add
aas
add
sub
add
add
dec
add
sub
add
add
pop
add
sub
add
add
outs
add
sub
add
add
jg
scas
add
add
add
pop
mov
or
mov
add
add
inc
or
add
inc
or
add
add
mov
add
add
iret
add
sub
add
add
fild
scas
add
add
add
out
add
sub
add
add
inc
scas
add
add
sub
add
add
lmsw
sub
add
add
add
add
add
sub
add
add
add
add
add
add
sub
add
add
sbb
or
add
add
add
add
mov
or
sub
add
add
add
add
add
add
add
add
add
add
mov
pop
ret
add
add
or
add
add
add
add
or
add
sub
add
add
add
or
sub
add
add
add
add
sub
add
add
add
sub
add
add
mov
pop
ret
add
add
add
add
add
ins
sub
add
add
add
add
add
add
add
sbb
or
add
add
add
add
add
hlt
add
sub
add
add
sbb
or
add
add
add
add
or
add
add
add
add
add
mov
inc
or
add
add
push
add
add
adc
add
add
push
push
add
add
push
push
add
add
push
push
add
add
push
push
add
add
push
push
add
add
push
push
add
add
push
push
add
add
or
add
add
adc
add
add
mov
add
add
add
mov
add
add
add
adc
or
(bad)
add
adc
(bad)
push
add
add
or
add
add
or
add
add
or
add
add
or
add
(bad)
adc
dec
add
or
add
(bad)
adc
pop
add
or
or
add
(bad)
adc
jno
(bad)
sbb
add
xchg
add
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
(bad)
add
(bad)
adc
mov
fiadd
xor
or
add
add
add
add
add
add
add
add
add
(bad)
push
add
(bad)
push
add
(bad)
push
add
(bad)
push
add
(bad)
push
add
hlt
add
add
add
add
add
or
add
or
(bad)
mov
cdq
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
jb
pop
add
add
or
add
add
add
add
add
xor
sbb
or
outs
push
sub
icebp
add
xor
jno
loopne
cmp
stc
add
push
add
add
adc
or
popa
add
or
add
add
add
or
lea
add
pop
add
sbb
(bad)
push
add
add
pop
pop
add
add
add
add
add
or
add
add
add
popa
add
or
or
xor
push
or
add
add
add
jmp
add
add
or
add
add
adc
add
mov
add
adc
add
add
add
add
push
popf
add
(bad)
adc
loope
(bad)
push
add
add
add
add
or
or
ret
add
or
add
add
pop
add
add
add
or
add
add
add
pop
ret
add
or
add
cmp
cld
add
add
rol
add
add
lds
sub
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
add
push
add
add
push
add
add
mov
add
mov
inc
add
add
push
add
add
into
add
mov
add
add
push
add
add
into
add
mov
add
add
into
add
add
add
add
add
add
add
jo
mov
add
add
add
push
rol
add
add
add
add
mov
ret
add
lds
leave
add
lds
loopne
add
add
add
add
add
add
add
add
add
lds
add
add
add
add
add
add
add
add
into
add
add
add
add
add
into
add
mov
add
into
add
push
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
add
mov
rol
add
add
add
add
add
and
mov
rol
add
add
add
add
add
add
add
rol
xlat
add
fild
inc
add
add
add
into
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
pusha
add
add
add
rol
add
loopne
jae
into
add
add
add
jae
into
add
push
add
add
push
jae
into
add
push
add
add
add
add
add
add
add
add
add
push
add
add
push
jae
into
add
test
mov
pop
xchg
add
add
add
add
add
mov
rol
fild
loopne
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
pop
loope
add
ret
or
add
add
or
add
add
lock
add
cmc
add
add
add
add
add
or
ror
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sub
and
add
sub
add
add
data16
je
xchg
add
add
add
add
add
sub
add
add
add
add
add
add
add
or
jp
add
add
or
add
adc
ins
add
add
add
add
add
add
or
add
add
add
add
add
pop
add
add
dec
or
add
fadd
add
add
add
add
or
add
or
add
or
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
jne
add
add
add
gs
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
dec
ins
popa
xor
ins
pop
inc
outs
jb
xor
addr16
inc
outs
jb
xor
jae
je
inc
outs
jb
xor
addr16
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
gs
jp
inc
add
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
outs
push
arpl
je
add
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
push
push
add
jb
xor
outs
popa
add
fs
dec
outs
popa
add
add
je
dec
jae
imul
add
inc
outs
jb
inc
imul
je
add
outs
arpl
outs
outs
imul
je
dec
jae
imul
jae
popa
outs
arpl
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
addr16
inc
gs
outs
jae
popa
outs
arpl
fs
jne
je
outs
jae
popa
outs
arpl
imul
add
je
popa
jae
inc
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
outs
je
arpl
imul
add
jne
outs
ja
dec
outs
fs
je
dec
ins
popa
add
je
dec
gs
popa
add
imul
ins
add
jae
je
bound
push
jne
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
ins
outs
popa
fs
imul
je
inc
imul
push
push
ja
push
je
ins
add
je
dec
popa
ins
add
arpl
outs
jb
jns
arpl
imul
popa
ins
jne
push
jns
add
je
jns
add
je
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
jne
arpl
jne
je
jb
add
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
jo
imul
push
gs
imul
add
jo
jae
add
jne
addr16
jb
ja
popa
bound
je
je
add
imul
jae
bound
je
je
add
gs
fs
je
je
arpl
je
imul
push
inc
push
push
inc
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
imul
outs
gs
je
fs
je
jb
bound
add
imul
jne
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jne
addr16
jb
ja
popa
bound
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
imul
imul
je
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jne
addr16
imul
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
push
push
push
je
je
arpl
ins
jne
add
je
inc
jbe
outs
je
push
popa
ins
jne
add
je
bound
arpl
ins
jne
add
je
popa
ins
jne
add
je
popa
ins
jne
add
ins
jne
add
jbe
add
ins
outs
jbe
add
ins
outs
outs
je
gs
add
je
push
imul
pop
inc
ins
imul
add
jne
jo
jb
dec
outs
imul
add
jae
gs
cs
push
imul
pop
push
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
je
gs
jne
arpl
je
imul
je
imul
jo
jae
outs
add
jae
gs
cs
jb
ja
outs
add
je
dec
gs
outs
jb
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
je
imul
je
outs
ins
add
push
arpl
outs
ja
outs
outs
je
outs
ins
add
je
inc
imul
ins
add
je
dec
popa
imul
dec
outs
inc
jb
popa
je
dec
popa
imul
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
imul
inc
jo
ins
imul
add
inc
jo
ins
imul
add
je
dec
outs
arpl
imul
je
ins
cs
outs
outs
imul
je
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
jae
gs
cs
gs
arpl
outs
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
addr16
outs
jbe
arpl
imul
jo
imul
popa
ins
imul
imul
jo
imul
pop
dec
outs
outs
gs
js
gs
imul
jne
outs
je
js
gs
imul
add
fs
push
push
ja
add
ins
je
jb
dec
outs
outs
add
gs
jae
je
push
popa
bound
outs
jo
ins
pop
inc
jo
dec
bound
arpl
outs
jbe
fs
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
ins
pop
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
ins
pop
dec
jns
outs
jb
jae
bound
arpl
outs
jbe
fs
jae
outs
fs
addr16
push
gs
jne
arpl
popa
outs
popa
addr16
inc
outs
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
popa
fs
popa
outs
fs
gs
push
push
ja
inc
jbe
outs
je
popa
outs
fs
gs
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
dec
inc
outs
outs
je
imul
je
push
jae
jb
inc
outs
je
jb
addr16
inc
outs
ins
jo
je
jb
push
gs
gs
outs
ins
jo
je
jb
dec
jns
outs
ins
jo
je
jb
push
gs
jb
push
arpl
jb
jb
inc
arpl
popa
je
jb
arpl
add
arpl
outs
jb
dec
outs
outs
imul
je
ins
cs
imul
imul
jb
jae
data16
push
imul
jae
arpl
inc
gs
arpl
add
je
push
bound
jb
imul
push
bound
jb
imul
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
arpl
jae
data16
push
imul
jae
arpl
dec
jns
gs
imul
jae
gs
cs
gs
jne
arpl
add
popa
xor
cs
gs
jne
arpl
add
popa
xor
jb
xor
jb
jae
jne
arpl
add
popa
xor
jae
jne
arpl
cs
jae
jne
arpl
add
jne
imul
jae
jae
je
inc
outs
popa
bound
imul
jns
gs
addr16
push
gs
imul
je
push
popa
jbe
push
gs
imul
push
gs
imul
outs
je
jb
jae
push
gs
outs
arpl
jno
popa
ins
jae
push
je
ins
jae
addr16
inc
outs
outs
je
outs
ins
jae
push
jns
je
ins
cs
imul
inc
outs
jb
jae
addr16
inc
outs
jb
jae
dec
jns
outs
jb
jae
jae
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
push
jne
je
ins
gs
gs
jo
jb
add
outs
arpl
jae
arpl
jo
outs
outs
je
add
ins
gs
js
jae
jae
popa
fs
popa
outs
fs
gs
outs
arpl
bound
arpl
gs
bound
arpl
jns
jb
push
arpl
outs
fs
outs
imul
dec
outs
imul
popa
jbe
dec
jns
gs
imul
js
je
jae
je
push
popa
jbe
dec
jns
gs
imul
js
je
addr16
inc
gs
jne
je
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
dec
outs
imul
inc
outs
ins
jo
outs
outs
je
push
outs
imul
outs
outs
je
push
je
jb
add
jae
outs
fs
popa
jns
jne
add
jae
ins
gs
popa
jns
jne
add
je
push
gs
add
je
push
popa
bound
fs
push
imul
outs
js
dec
ins
popa
xor
add
outs
je
imul
addr16
inc
jae
gs
bound
addr16
push
imul
jns
gs
imul
jo
jb
jns
inc
imul
ins
push
jb
js
add
imul
outs
js
add
add
dec
add
popa
add
add
add
add
add
outs
add
jb
arpl
add
add
add
add
add
add
jae
pop
add
jne
bound
ins
add
arpl
pop
add
add
jne
ins
add
outs
add
add
add
ins
add
outs
add
add
add
add
add
add
cmp
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
je
das
add
add
outs
add
je
add
add
add
pop
add
jae
add
jae
pop
add
jne
bound
ins
add
arpl
pop
add
jo
jo
inc
add
je
popa
add
add
add
bound
jae
add
add
add
cmp
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
je
das
add
add
add
bound
jae
add
add
inc
add
pop
add
push
add
push
add
dec
add
add
push
add
push
add
add
data16
add
jb
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
jne
outs
add
cmp
imul
outs
add
jae
push
add
arpl
jne
jb
imul
dec
add
popa
add
add
push
add
jb
jbe
imul
add
add
add
add
add
jae
pop
add
jne
bound
ins
add
arpl
pop
add
add
jo
pop
add
jo
jo
inc
add
je
popa
add
add
add
bound
jae
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
ins
add
add
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
ins
add
add
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
ins
add
add
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
popa
add
add
pop
push
add
arpl
je
jne
jb
add
outs
add
xor
add
arpl
je
jne
jb
add
outs
add
add
add
ins
add
add
add
push
add
arpl
je
jne
jb
add
outs
add
add
and
imul
jne
jb
add
outs
add
aaa
add
add
ins
add
add
add
push
add
arpl
je
jne
jb
add
outs
add
aaa
add
or
outs
add
ins
add
add
cmp
imul
outs
add
ins
add
pop
add
add
jne
jb
jae
imul
inc
add
jb
ins
add
jb
add
je
add
xor
outs
add
outs
add
ins
add
pop
add
add
dec
add
outs
add
jb
inc
add
arpl
add
je
imul
add
add
outs
add
add
je
jns
and
arpl
popa
add
and
outs
add
ins
add
and
bound
add
add
add
add
add
add
outs
add
add
outs
add
add
add
and
push
xchg
xchg
inc
mov
xchg
mov
cmp
add
add
or
and
add
adc
add
push
add
add
add
push
add
cmp
push
push
push
push
push
and
add
and
add
add
add
push
push
and
add
cmp
add
and
add
jne
adc
or
adc
or
adc
gs
adc
and
adc
sub
add
or
and
adc
add
add
or
add
gs
add
and
pop
add
sub
pop
add
or
add
add
pop
add
adc
add
and
adc
add
adc
adc
adc
add
add
add
add
add
add
pop
pop
add
sbb
sbb
add
add
sbb
and
add
push
and
add
sbb
pop
add
sbb
and
add
and
pop
add
add
add
jmp
push
add
in
add
add
or
add
adc
add
cmp
and
sbb
push
sbb
and
add
push
sbb
add
add
mov
and
add
jge
and
sbb
push
and
add
or
or
push
and
add
or
and
add
push
and
add
adc
and
adc
add
add
adc
push
add
add
add
sbb
add
push
push
sbb
add
add
add
add
add
add
add
cmp
cmp
pop
and
add
adc
add
pop
add
add
add
add
add
jge
pop
add
add
add
and
add
add
adc
add
push
adc
add
add
add
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
push
adc
or
push
adc
or
push
adc
gs
push
adc
and
push
adc
sub
adc
adc
push
add
push
sbb
push
adc
xor
push
adc
add
push
add
add
or
add
adc
add
add
gs
add
and
add
adc
add
lea
xchg
push
add
add
adc
adc
adc
pop
and
add
sbb
mov
and
add
xor
add
add
xor
add
adc
add
add
jge
and
adc
add
and
add
or
or
adc
add
add
gs
add
and
or
adc
add
lea
xchg
add
add
sbb
mov
sub
adc
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
pop
add
add
add
add
or
gs
cs
arpl
add
add
add
push
dec
imul
je
push
outs
jb
add
pop
add
adc
jo
jb
addr16
and
xor
xor
add
sub
add
xor
cmp
xor
sub
sub
sub
sub
popaw
gs
popa
add
or
add
xor
xor
xor
xor
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
adc
add
push
imul
outs
js
add
adc
add
push
imul
outs
js
add
adc
add
push
imul
outs
js
add
adc
add
push
imul
outs
js
add
adc
add
push
imul
outs
js
add
adc
add
push
imul
outs
js
add
adc
add
push
imul
outs
js
add
sbb
add
dec
jns
gs
jo
popa
je
or
xor
xor
xor
xor
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
push
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
add
or
cs
outs
ins
jo
je
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
jns
inc
outs
jb
jae
add
add
push
dec
jns
push
bound
jb
imul
add
or
cs
gs
imul
sub
push
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
adc
fild
xchg
xchg
scas
rol
pop
int3
add
call
add
pushf
add
add
add
add
add
add
add
dec
add
add
add
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
ins
add
add
add
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
sbb
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
mov
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
popa
add
gs
push
add
push
add
arpl
je
jne
jb
add
outs
add
add
add
ins
add
add
push
fwait
add
and
imul
jne
jb
add
outs
add
aaa
add
add
ins
add
add
test
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
jns
add
add
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
inc
add
add
add
add
add
or
or
or
or
or
adc
adc
adc
adc
adc
adc
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
(bad)
fild
inc
add
add
push
push
or
push
or
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ret
or
push
add
add
add
adc
inc
add
add
add
add
add
add
(bad)
fiadd
or
add
add
add
adc
push
mov
inc
inc
mov
pop
lea
pop
test
push
push
mov
xor
fs
cdq
(bad)
push
adc
push
movs
call
(bad)
mov
push
icebp
cwde
push
test
xor
or
push
push
xchg
movs
sbb
xchg
push
xor
add
mov
dec
push
xchg
inc
data16
mov
repz
xchg
das
sub
ret
sahf
push
mov
movs
sbb
pusha
sub
aam
xor
pop
mov
push
mov
push
sbb
xor
add
xor
and
dec
adc
sub
mov
sub
lea
cmp
jne
call
sbb
mov
sub
ret
lea
push
push
call
test
push
or
add
mov
xchg
and
call
popa
ds
jmp
pop
loopne
xor
add
push
push
test
lea
popa
popa
inc
dec
xor
push
test
push
or
inc
add
add
add
movs
sub
mov
and
xchg
xchg
(bad)
pop
lea
stos
int
cmp
ret
or
shr
call
int3
int3
aam
adc
movs
add
mov
mov
add
fld
sub
jl
mov
call
push
dec
pop
outs
inc
fdiv
or
test
ret
adc
int3
sub
call
push
add
inc
movs
add
or
add
add
adc
sbb
rcr
adc
iret
retf
xchg
es
jmp
ret
mov
nop
cmp
pop
xchg
loop
test
adc
inc
aam
add
sub
int
dec
xor
pop
pop
call
inc
add
add
inc
adc
xchg
bound
fwait
inc
call
lahf
cmp
outs
push
xor
pusha
mov
pop
dec
(bad)
cdq
push
(bad)
jmp
rcl
mov
push
mov
mov
xor
or
xchg
push
add
add
push
inc
adc
add
dec
sbb
rcr
jae
into
dec
nop
hlt
stc
call
xchg
pop
dec
pop
sbb
hlt
mov
pop
jle
inc
test
mov
or
popa
pusha
aam
push
adc
imul
or
xor
test
ins
mov
sbb
fxch
dec
nop
cmc
xchg
mov
jp
test
(bad)
jg
iret
inc
jae
scas
int
cmp
ss
and
xor
xor
or
mov
inc
push
push
test
dec
xor
sub
(bad)
or
xor
and
sub
gs
jp
data16
inc
jbe
ss
ins
mov
aas
lahf
cmp
mov
iret
mov
or
push
xor
mov
dec
xor
pusha
sbb
adc
sub
mov
xchg
bound
rcr
mov
jle
ss
(bad)
xchg
mov
je
aaa
cmp
pop
fdivr
lahf
inc
fidivr
ret
push
test
push
or
pusha
sbb
pop
call
stos
and
inc
push
inc
add
ror
nop
repnz
retf
out
dec
data16
adc
(bad)
(bad)
pop
cmps
lods
and
arpl
cmp
jno
pop
xchg
cmps
stc
out
cmp
fwait
int3
pop
sbb
aaa
fst
int3
sbb
mov
pop
push
mov
movs
and
jmp
movs
sbb
push
mov
adc
movs
adc
mov
(bad)
mov
ins
gs
xchg
sub
add
xor
inc
add
les
and
test
inc
mov
push
xor
sub
sbb
aad
enter
cmp
cmp
es
test
xchg
push
bound
fimul
sbb
fidivr
ror
in
leave
into
fwait
push
mov
(bad)
fucomi
fs
push
frstor
fs
shl
xor
jp
stos
retf
jle
out
or
retf
cmps
inc
dec
mov
cdq
test
or
iret
(bad)
cld
das
arpl
jbe
sysret
stos
jbe
imul
fbld
sub
test
xor
sub
mov
push
jno
(bad)
stc
stc
(bad)
or
mov
jmp
xchg
push
sub
mov
popa
push
inc
mov
jno
jb
out
push
mov
jle
rcl
jne
sub
add
rcl
add
jp
push
das
popf
ins
jl
fdivr
cmp
mov
jmp
mov
cmp
lahf
sbb
jge
and
and
xor
or
bound
std
sbb
(bad)
xor
movs
mov
mov
jae
es
bound
arpl
jl
stos
sahf
cwde
cwde
(bad)
mov
jmp
mov
or
leave
inc
rcl
and
xchg
repz
ret
mov
das
jge
out
ja
lahf
dec
sbb
fmul
jmp
cmc
sub
xor
push
pop
sbb
cmp
mov
mov
gs
pop
lahf
mov
popf
xchg
hlt
xchg
mov
jbe
xor
jmp
cld
stc
movs
hlt
lgs
mov
hlt
test
push
pop
and
popf
lahf
mov
pop
mov
sbb
cs
dec
out
shr
retf
jnp
ret
xchg
dec
leave
mov
jl
sti
dec
aad
inc
popa
rcr
pusha
jnp
jne
out
popf
in
lock
out
pop
das
inc
xor
mov
cmp
cmp
les
and
outs
push
sti
push
push
imul
mov
fisub
fst
pop
rcr
pushf
(bad)
jae
mov
mov
cmps
cmps
cmc
out
jmp
pop
aam
int3
xor
push
fwait
dec
mov
cwde
bound
mov
ss
jns
push
mov
ror
mov
je
and
mov
dec
ins
cmp
xchg
nop
cmp
lods
std
popf
ss
dec
mov
jne
rcr
add
push
stos
je
mov
lods
fwait
repnz
sahf
jns
shr
adc
pop
pop
fsubr
pusha
aam
push
add
mov
fwait
or
push
sub
in
cli
or
pop
je
push
xchg
ins
ins
aad
cdq
adc
sub
imul
mov
jbe
aaa
in
mov
ins
out
jo
ins
and
inc
add
in
call
or
push
ret
mov
cdq
clc
das
jbe
jne
aam
adc
aad
repnz
push
jmp
sbb
fstp
sahf
out
retf
cmp
(bad)
xor
jb
addr16
add
xchg
push
addr16
jp
je
iret
cmps
push
data16
cdq
ins
cmp
(bad)
cmp
movs
sub
ins
push
mov
dec
push
lds
fsub
cmps
stos
cmp
mov
pop
lock
je
das
cmps
cmp
imul
into
(bad)
jmp
pop
mov
movs
rcr
imul
out
es
sbb
mov
sub
mov
mov
adc
(bad)
cdq
sub
mov
out
aas
dec
out
in
retf
int3
dec
xchg
repz
imul
mov
and
inc
xor
inc
jle
mov
lahf
das
mov
inc
dec
bound
inc
int3
inc
inc
cmp
mov
jle
scas
stos
pop
jmp
cmp
pop
jnp
lea
test
mov
icebp
in
int
mov
aam
data16
das
fcom
pop
sti
fwait
dec
mov
movs
mov
gs
(bad)
ins
out
imul
lahf
jae
jo
pop
dec
test
add
add
mov
push
xchg
test
mov
xlat
into
outs
test
mov
sahf
xchg
into
push
jnp
(bad)
(bad)
mov
gs
pop
aam
sbb
push
shl
pop
jge
mov
retf
pushf
icebp
outs
push
mov
cs
pop
dec
popf
fsub
pop
ficomp
xor
ss
stos
cdq
cmc
or
pop
mov
aam
mov
xchg
das
(bad)
test
stos
jp
(bad)
ror
aad
add
out
setp
xchg
cdq
jp
stos
lds
push
fld
inc
mov
add
call
fucomi
xor
ds
jno
mov
ins
outs
sub
cs
shr
sub
out
inc
dec
out
ss
iret
pushf
es
rcr
sbb
shl
gs
push
jo
push
add
rcl
inc
js
(bad)
pusha
xlat
cmp
neg
sbb
retf
jb
dec
hlt
adc
into
xor
sub
xchg
je
in
outs
ss
aad
das
sub
leave
jge
xor
cmps
mov
cdq
or
fbstp
cmp
imul
cmp
test
stc
lahf
push
sar
mov
sahf
mov
in
inc
mov
push
mov
xor
and
jp
les
ret
lods
idiv
inc
xchg
pop
cmc
das
lea
cmc
inc
mov
cld
xchg
lods
push
call
cs
fwait
mov
pushf
ret
xchg
ret
mov
aad
sub
in
lds
int3
cmps
sahf
test
sbb
in
lahf
add
ficomp
mov
fstp
pop
add
pop
outs
inc
js
(bad)
bswap
ja
jge
push
mov
xchg
call
loopne
mov
test
sub
add
out
jnp
loop
ret
outs
dec
fwait
arpl
int3
js
retf
push
(bad)
retf
sti
(bad)
jg
push
stos
sub
leave
test
sbb
jae
out
repz
mov
and
shr
push
sbb
mov
out
call
hlt
retf
out
pop
out
ret
jmp
pop
xchg
mov
xchg
adc
or
dec
adc
xor
addr16
popf
popf
push
rcl
sub
xchg
cwde
mov
fisub
in
dec
js
pop
pop
push
pop
add
stos
mov
jl
ret
mov
mov
(bad)
fidivr
fisubr
movs
push
dec
nop
mov
or
and
xchg
movs
stos
mov
push
outs
addr16
sub
pop
push
bound
(bad)
or
sbb
mov
popf
jo
daa
fcom
pop
sbb
fcom
mov
pop
cwde
les
inc
(bad)
out
movs
cmc
fbld
push
sub
call
adc
xchg
retf
pop
xor
dec
stos
stos
mov
push
adc
jmp
enter
xchg
push
aam
pop
popa
cmps
in
adc
push
or
push
inc
and
movs
stos
imul
call
push
test
add
xor
xchg
and
nop
xchg
dec
push
fist
inc
mov
not
dec
addr16
push
sbb
aad
icebp
mov
inc
push
or
in
adc
or
stos
mov
mov
movs
(bad)
outs
pop
mov
mov
push
xchg
mov
sbb
inc
add
add
and
adc
inc
push
jecxz
mov
dec
xchg
lds
fcom
jp
mov
data16
xor
xor
pop
push
fsubr
adc
dec
cmp
popf
push
loop
ss
repz
fsubr
dec
push
lea
add
add
dec
and
test
js
rcl
movs
mov
mov
leave
out
push
xchg
mov
push
shl
inc
mov
or
pusha
ret
stos
retf
loope
or
add
sub
push
push
fcomp
or
xor
add
inc
and
mov
cwde
lea
cmp
and
adc
xor
push
ins
iret
jl
xchg
rcr
cli
cmps
jge
mov
cmp
das
xchg
outs
sbb
cmps
(bad)
into
sahf
in
add
xor
or
push
xor
inc
mov
sbb
adc
or
and
xchg
or
adc
sub
mov
or
and
xor
(bad)
push
test
(bad)
mov
fwait
jae
(bad)
push
push
jg
jl
shl
pop
stos
mov
push
fwait
sbb
jnp
push
push
mov
sbb
push
cdq
lods
aam
xor
xor
add
dec
adc
xchg
movs
mov
lea
cmp
dec
popf
and
xor
push
fidivr
sbb
add
cli
call
pop
retf
push
fisttp
mov
cmps
jns
(bad)
push
mov
dec
add
rcl
fst
xchg
(bad)
fnstenv
sbb
mov
add
add
inc
or
sub
mov
mov
mov
pop
inc
stos
repnz
ja
mov
lea
sbb
cmc
mov
jno
ss
test
adc
jmp
pop
test
dec
xor
mov
add
or
dec
inc
push
xchg
movs
or
rol
push
and
cmp
sub
jo
iret
stos
test
out
pop
xor
das
cmp
mov
sahf
fwait
mov
imul
add
pop
push
pop
xchg
dec
pushf
push
xchg
push
push
push
lods
sub
mov
add
dec
and
mov
mov
bound
call
jg
xor
dec
movs
pop
(bad)
aaa
mov
jnp
movs
sub
(bad)
lahf
mov
mov
das
cmp
into
out
jp
into
scas
sahf
retf
in
inc
adc
sbb
leave
and
movs
sbb
aam
mov
add
dec
and
xchg
xchg
inc
push
dec
and
adc
xchg
popf
aad
(bad)
lds
mov
cmp
in
aas
retf
out
cs
outs
push
ja
cmp
push
pop
pop
push
ficomp
xor
dec
ror
xchg
adc
xor
test
or
push
or
nop
xchg
mov
movs
fisub
jecxz
loop
inc
adc
test
sub
test
pushf
mov
clc
hlt
mov
dec
les
idiv
pop
fisub
push
mov
retf
inc
inc
mov
push
test
adc
aam
in
dec
and
push
shr
jne
imul
ins
movs
shr
(bad)
int
xor
cmp
daa
jmp
(bad)
push
or
dec
out
(bad)
rcr
pop
push
fstp
call
sub
aam
xor
call
es
add
inc
sbb
sub
jge
mov
push
int3
shl
aad
inc
daa
(bad)
cld
leave
jb
jns
xchg
cmovs
div
jmp
lock
ds
fcmovu
sahf
icebp
inc
pusha
add
push
pop
or
dec
xor
cdq
cdq
cwde
xor
dec
jns
in
adc
push
fsubr
xlat
or
and
add
fld
push
test
mov
jne
push
sbb
pop
iret
fisttp
cmp
or
mov
int
jp
sub
inc
push
cwde
push
push
lea
inc
in
int3
int3
sbb
push
xchg
xchg
push
push
mov
sbb
shr
cwde
scas
mov
cmp
rcl
cli
cmps
call
jl
imul
outs
dec
xchg
repz
ins
in
adc
aas
es
outs
outs
dec
js
or
sbb
jae
dec
sbb
loopne
jl
ins
inc
mov
push
(bad)
leave
in
jno
mov
test
xor
(bad)
inc
jns
inc
jno
rcl
out
out
lods
lahf
icebp
mov
hlt
sbb
cmps
movs
push
adc
fwait
and
fsub
stos
dec
lds
cmps
cmps
cmp
mov
aam
cdq
add
or
lds
test
(bad)
popa
push
cmp
in
xchg
or
mov
in
loope
push
and
pushf
(bad)
push
call
inc
sbb
aam
push
leave
ror
(bad)
xchg
push
mov
xor
icebp
xor
cs
aaa
adc
das
iret
fidiv
fcomp
mov
add
and
mov
mov
out
mov
mov
outs
fdivr
push
lahf
dec
mov
imul
inc
lods
jge
jae
pop
cs
xchg
cmc
sahf
sar
stos
fistp
aam
arpl
dec
cwde
fldcw
retf
in
lahf
push
dec
or
sub
cdq
xor
lds
imul
push
div
mov
inc
xchg
xchg
xor
adc
inc
inc
fwait
mov
je
aad
mov
jns
push
push
or
pop
and
inc
dec
mov
(bad)
jmp
xchg
sbb
mov
push
das
int3
in
dec
into
pop
enter
xchg
into
add
inc
test
popf
pop
inc
aad
sbb
mov
call
stos
jae
mov
out
data16
stos
sbb
pop
push
les
lea
pop
pushf
jo
out
mov
in
fsubrp
mov
cmp
outs
or
int
mov
or
ins
cld
push
in
in
inc
aaa
popf
leave
inc
ins
mov
retf
mov
pop
jnp
cli
cmp
test
test
rcl
mov
add
mov
jg
jns
das
fxtract
xchg
dec
popa
inc
imul
dec
xor
push
xor
addr16
les
xlat
retf
pop
cmp
imul
jge
cmp
jne
in
mov
inc
adc
call
lds
sub
push
movs
or
in
push
hlt
push
mov
mov
hlt
pop
jne
and
sub
loopne
mov
dec
cdq
popa
je
pop
inc
mov
inc
sub
jns
mov
xor
cld
iret
lea
add
dec
cwde
ss
adc
idiv
or
mov
(bad)
jnp
push
jg
xor
ja
push
ins
mov
cwde
xor
xor
aad
lods
gs
mov
mov
in
xchg
(bad)
jmp
nop
sub
or
pop
int
pop
push
stos
mov
lods
ins
popa
aam
jmp
ins
add
outs
sub
(bad)
fs
jbe
dec
jns
jecxz
lods
mov
dec
mov
inc
mov
jns
in
lahf
popf
sub
dec
mov
jp
mov
je
cmp
out
pop
push
push
push
inc
sahf
ret
inc
cmps
test
mov
arpl
mov
cmp
mov
push
push
sub
sbb
leave
push
popf
sbb
lds
mov
dec
cmp
push
fcmovne
pop
or
pop
mov
fstp
sbb
xchg
test
jle
rcr
push
in
aam
mov
outs
cmps
aaa
mov
xchg
leave
push
mov
outs
cdq
jbe
imul
mov
mov
fsubr
and
shl
rcl
loope
stc
idiv
push
sbb
(bad)
ss
lahf
dec
sahf
mov
in
sbb
arpl
mov
sti
xchg
xchg
add
(bad)
ins
dec
mov
cmp
cmp
ds
adc
sub
imul
dec
jae
lds
mov
mov
sahf
ja
mov
sti
gs
fldl2e
cwde
test
mov
sub
data16
imul
adc
out
jbe
call
bound
scas
xlat
jno
dec
xor
pop
xchg
adc
mov
stos
pop
push
data16
xchg
loop
inc
mov
dec
out
cmp
fadd
movs
hlt
jle
pop
mov
dec
in
jbe
(bad)
arpl
xor
xchg
(bad)
cmps
push
out
inc
ins
mov
and
loop
ss
lock
inc
movs
fcmovne
ja
(bad)
jmp
push
repz
ja
movs
xchg
and
jo
xchg
sub
inc
adc
mov
ret
push
xchg
movs
ret
jge
(bad)
pop
jbe
mov
ret
leave
push
jmp
pop
xlat
push
fbstp
into
loopne
retf
pop
mov
pop
dec
int3
pop
sub
std
pop
mov
mov
stc
fcomp
cmp
fisttp
mov
jmp
fadd
sub
dec
xchg
xor
mov
sbb
test
sbb
xor
fidivr
int3
stc
into
pop
stos
dec
dec
data16
mov
iret
inc
aaa
xor
in
inc
mov
inc
stc
jmp
pop
out
rcr
ds
or
out
mov
sub
fcomp
enter
mov
xchg
xchg
call
push
jne
jb
jb
not
jmp
mov
test
ja
xchg
push
fld
push
dec
ficom
mov
pop
push
stc
shl
jl
mov
stos
pop
inc
fbstp
pop
lahf
push
out
xchg
sbb
test
push
(bad)
mov
push
ja
lea
ss
jecxz
out
lea
cmp
mov
sti
add
sbb
and
push
push
lods
(bad)
fisubr
int3
inc
xchg
sti
pop
xchg
pop
xchg
stos
outs
jle
or
test
add
vpcmov
cmp
xor
in
jl
and
hlt
push
inc
cmps
mov
out
out
add
js
push
sbb
xchg
jno
add
sbb
jae
pop
(bad)
pushf
mov
movs
nop
push
mov
neg
arpl
sbb
call
aam
inc
push
or
into
sub
jmp
ror
and
cmp
push
jne
and
jg
out
movs
push
movs
jp
xchg
inc
adc
popf
jnp
sub
xchg
jmp
scas
mov
sbb
ss
call
mov
lods
addr16
imul
stc
std
xor
jae
fbstp
xchg
jne
mov
mov
mov
dec
mov
fisubr
ss
dec
cmps
mov
push
mov
xchg
cli
xchg
in
and
push
sbb
mov
and
sar
mov
push
lahf
(bad)
call
stos
(bad)
retf
bound
cmp
mov
pop
pop
dec
jne
rcr
into
lods
movs
jmp
xchg
mov
pop
dec
mov
dec
ins
xor
cmp
fistp
cld
imul
stc
mov
dec
nop
test
imul
leave
mov
in
outs
jbe
sbb
jae
push
(bad)
lea
arpl
xchg
call
adc
aaa
imul
fdivp
dec
mov
mov
inc
ror
mov
xchg
rcl
ins
sub
mov
fdiv
sub
(bad)
ja
jnp
sbb
adc
fisttp
and
cmp
jle
pop
imul
fstp
int
pusha
jo
jae
dec
mov
scas
pop
mov
pop
retf
mov
fcomp
xor
aaa
push
inc
sahf
mov
cmp
push
mov
and
xchg
xchg
jmp
push
ins
inc
out
bound
pop
cdq
data16
fnstenv
test
xchg
stos
cwde
stos
xchg
push
push
adc
ficomp
pop
jae
pop
clc
(bad)
shl
cdq
pusha
out
mov
dec
imul
fcom
cmp
rcl
mov
cdq
mov
jb
adc
fisubr
sbb
add
add
add
add
add
add
add
push
pop
(bad)
fiadd
or
add
add
add
and
add
mov
les
add
add
mov
and
bound
add
cdq
inc
add
xor
mov
xchg
adc
xchg
add
mov
add
add
retf
movs
nop
rcl
imul
inc
add
cwde
add
fs
dec
fisub
(bad)
xchg
imul
lahf
jp
add
bound
dec
add
rcl
imul
jnp
inc
add
pop
out
(bad)
out
cld
scas
imul
mov
cmovp
cmc
mov
ins
clc
cmp
push
test
neg
aam
pop
xor
cld
xlat
scas
scas
jbe
xchg
iret
push
pop
push
dec
mov
outs
push
fcmovnb
add
scas
fisubr
pop
pop
shr
repz
mov
fst
call
add
cli
push
jg
lods
jl
fnsave
jmp
and
jo
cmps
in
stos
cmc
retf
xchg
cs
mov
jle
repz
(bad)
mov
dec
sti
(bad)
xor
hlt
lods
jne
call
dec
lods
pop
fisub
push
ret
scas
add
push
movs
out
js
pop
aam
jns
(bad)
xchg
mov
pop
pop
pop
dec
fidiv
sahf
cmps
mov
inc
mov
aam
icebp
jp
add
in
jp
stc
lahf
xchg
shl
retf
outs
sti
cmps
ins
xor
movs
ficom
int3
jl
outs
mov
cli
pop
test
das
mov
dec
dec
and
fcomp
push
add
aaa
(bad)
sar
jno
and
les
lods
leave
mov
add
call
and
dec
xor
call
add
pushf
cmps
jge
dec
mov
imul
das
pop
js
sub
gs
enter
bound
ins
cmp
ss
add
pop
jge
inc
call
push
inc
inc
fwait
dec
inc
jle
test
xchg
out
jge
loopne
and
inc
stos
pusha
adc
adc
rcl
iret
(bad)
aad
jb
mov
jge
jo
dec
and
xor
and
clc
jle
mov
outs
and
(bad)
ror
add
mov
ins
dec
es
test
cmc
hlt
add
dec
jns
cmp
inc
inc
dec
sub
adc
mov
fwait
pop
sub
js
jp
push
movs
pop
retf
iret
mov
xlat
fdiv
je
add
dec
imul
mov
repz
js
xlat
rcr
push
sub
mov
xchg
fdiv
jmp
into
ins
push
rcr
add
jecxz
jl
jno
mov
pop
inc
movs
xor
test
call
in
add
in
hlt
mov
xlat
dec
retf
and
mov
jae
mov
pushf
aad
adc
(bad)
fwait
call
cmps
adc
adc
cmps
cmps
mov
fisttp
mov
mov
icebp
div
jno
jb
xchg
mov
iret
aas
stos
jmp
pop
mov
lods
sub
call
into
in
fstp
xchg
cmp
jge
push
pop
arpl
stc
inc
sar
mov
adc
js
pop
je
pop
sbb
sub
pop
fstp
jbe
repnz
ds
into
neg
mov
mov
adc
sahf
cdq
int3
ss
mov
dec
test
lea
stc
mov
xor
cwde
xchg
into
nop
ret
xchg
mov
ror
dec
sbb
add
add
add
add
add
add
add
push
pop
(bad)
fiadd
or
add
add
add
add
rcl
pusha
nop
add
dec
inc
dec
cdq
add
add
add
mov
add
add
or
add
add
add
mov
mov
add
add
add
mov
inc
cmps
sahf
adc
add
test
inc
add
xlat
and
and
outs
jp
cmp
or
hlt
(bad)
daa
in
repz
sub
mov
aas
ds
inc
imul
add
pushf
jge
sar
mov
adc
iret
outs
mov
(bad)
mov
ds
test
cmps
pop
sub
rcr
mov
lahf
sar
lods
xor
push
(bad)
leave
mov
(bad)
push
jno
cwde
inc
retf
in
ins
jb
push
(bad)
iret
mov
test
pusha
pop
mov
icebp
and
imul
or
repz
outs
cmps
cli
dec
int3
stos
shl
sahf
pop
adc
outs
mov
mov
les
pop
xor
in
pushf
lock
jl
cmp
scas
cli
seto
std
fnsave
and
jmp
lock
rcl
icebp
cmc
call
aaa
shl
push
dec
stc
not
cmps
sahf
fidivr
mov
cmps
inc
cs
cmc
jl
jmp
cmp
cmp
lods
outs
into
mov
pop
test
nop
add
retf
cmp
add
pop
mov
add
add
inc
add
mov
jmp
data16
add
add
adc
imul
add
push
add
add
push
gs
(bad)
sub
sub
or
es
fcmovnu
add
add
mov
mov
(bad)
push
mov
push
or
xchg
gs
loopne
and
cmp
mov
xchg
adc
add
ror
shr
repnz
xchg
mov
mov
mov
mov
cmps
cwde
or
jle
cmp
sbb
sub
mov
stos
add
mov
lods
test
cmps
popf
ds
shr
test
mov
or
mov
sub
jle
mov
add
jns
jnp
and
mov
in
push
out
push
fisubr
add
scas
dec
push
outs
sbb
jge
sbb
add
sub
mov
test
icebp
lods
idiv
pushf
cmps
adc
mov
je
xchg
cmp
ss
and
leave
(bad)
xchg
(bad)
jge
mov
ret
fistp
stos
sahf
and
sub
mov
stos
xor
jae
jp
dec
es
into
xchg
call
jmp
dec
sar
int
lods
stos
ror
sub
leave
pushf
retf
sub
mov
stos
mov
les
cmp
add
add
push
add
add
add
add
add
and
adc
adc
inc
pop
and
push
push
pusha
es
push
pop
inc
inc
popa
jno
(bad)
fiadd
or
add
add
add
aad
mov
add
push
stos
push
stos
aad
mov
retf
jb
mov
xor
sahf
inc
push
and
out
out
sbb
out
mov
icebp
pop
je
test
test
xchg
test
add
xchg
and
in
movs
loope
in
(bad)
sbb
lods
push
in
pushf
xchg
call
jb
dec
adc
mov
outs
inc
jge
push
jl
or
mov
arpl
inc
ins
fucomp
pop
sbb
push
call
xchg
repnz
scas
sub
sub
mov
cs
scas
cs
scas
cs
mov
mov
scas
cs
mov
scas
cs
mov
scas
cs
mov
in
inc
in
inc
scas
inc
scas
inc
scas
dec
scas
dec
scas
dec
scas
dec
scas
dec
scas
dec
scas
dec
scas
dec
scas
dec
scas
dec
scas
push
scas
dec
scas
push
scas
push
cs
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
cs
scas
push
scas
push
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
daa
test
ret
xchg
cmp
and
mov
mov
leave
retf
xchg
xchg
push
sub
dec
cmp
adc
xor
(bad)
call
or
std
sbb
sti
sahf
mov
cmp
push
sbb
sbb
inc
mov
jbe
retf
inc
or
mov
sub
jns
pop
mov
ret
jmp
out
fidiv
or
ss
loopne
movs
movs
out
(bad)
icebp
mov
jne
sub
loopne
jmp
popf
cmp
inc
mov
pop
lods
inc
icebp
stos
nop
xor
or
cmp
dec
icebp
xor
test
mov
mov
mov
lea
das
dec
repnz
cmc
fs
in
adc
xchg
movs
dec
dec
add
cmp
dec
popf
aas
mov
aaa
inc
or
fisttp
sti
scas
mov
pop
pop
and
mov
in
in
cmp
dec
fld
call
inc
fild
and
sar
jmp
add
pop
loopne
mov
jge
mov
push
(bad)
push
je
test
sbb
daa
bound
in
push
mov
fild
inc
pop
jmp
les
icebp
addr16
popf
cmp
in
movs
in
sub
clc
es
jmp
mov
xchg
fist
repnz
movs
push
je
jne
movs
cs
aaa
jge
sub
cmc
xchg
add
push
jle
adc
jns
dec
pop
push
lods
mov
mov
cmps
mov
cmp
(bad)
pop
addr16
cld
adc
repz
jmp
push
cmc
cmc
ins
lods
out
adc
test
or
aas
adc
std
inc
sub
dec
stos
xlat
mov
jb
inc
ja
xchg
icebp
mov
(bad)
dec
push
fsub
inc
call
sub
xor
cmp
add
repnz
gs
addr16
(bad)
ja
fbstp
sar
mov
and
jecxz
pop
inc
(bad)
lock
sbb
adc
xchg
sub
jmp
xor
xor
cmp
lods
jae
scas
pop
mov
fsub
xchg
loop
pop
xchg
fcmovnb
nop
idiv
add
xchg
out
fwait
repnz
add
jmp
sub
daa
push
cld
sub
mov
call
pop
ret
push
xlat
stos
mov
scas
daa
xor
and
push
jnp
adc
dec
inc
ja
popa
loope
ins
sahf
or
aam
mov
jmp
jne
xchg
(bad)
icebp
outs
clc
sbb
cmp
cmps
in
jmp
movs
in
call
outs
mov
aam
add
push
and
dec
mov
dec
mov
push
das
loope
mov
sub
push
adc
xchg
adc
int3
cmp
xchg
fnstenv
sbb
ss
push
mov
iret
hlt
xor
dec
div
push
fucomip
lds
add
pop
fwait
pop
int
xchg
sbb
hlt
cmp
movs
(bad)
icebp
push
ja
test
jmp
sub
inc
aam
(bad)
leave
ss
or
sbb
adc
leave
fcmovnb
cmp
cmp
push
into
mov
in
in
popf
inc
repnz
xchg
pop
jb
mov
sti
cmps
dec
cdq
pop
out
push
out
or
mov
imul
mov
sub
and
in
lods
loope
fcom
push
sbb
xchg
in
loop
std
cmps
mov
mov
bound
fwait
stos
repz
sahf
pop
mov
adc
pop
call
test
int
outs
mov
aam
and
and
(bad)
pop
push
stos
push
stos
aad
mov
lods
push
aas
mov
mov
lahf
stos
cmp
xchg
push
xor
repz
cmp
aaa
and
(bad)
inc
cmp
sub
pop
push
rcl
add
fisub
(bad)
shl
jne
test
fnstsw
pop
dec
mov
cs
mul
dec
and
mov
std
rcl
push
ds
mov
pop
cmp
lahf
or
and
xchg
xor
mov
js
enter
and
dec
push
sub
xor
pop
push
nop
xchg
lahf
test
xchg
mov
dec
(bad)
adc
inc
fldcw
retf
mov
mov
fnstsw
(bad)
sbb
in
pop
test
call
retf
and
mov
scas
into
int3
stos
shl
mov
cmp
lods
add
(bad)
cs
inc
mov
lock
div
test
stos
and
mov
mov
je
mov
in
mov
repz
xor
pop
mov
adc
add
fstp
cmp
xchg
gs
cmp
fsubr
mov
inc
lahf
inc
or
cmps
jmp
pop
shl
repnz
dec
mov
jne
dec
mov
pop
imul
mulps
push
mov
fistp
mov
stos
lock
leave
xor
pusha
mov
fcomp
iret
xor
ss
cmp
mov
lods
mov
mov
xchg
addr16
lock
fwait
loop
mul
stc
ins
popf
sbb
in
mul
mov
fistp
xchg
sar
sti
sub
jo
add
(bad)
mov
push
mov
cmp
in
cmp
push
jae
stos
add
popf
mov
sub
(bad)
iret
fucom
sbb
aad
(bad)
or
test
dec
inc
pop
adc
xchg
test
dec
inc
pop
adc
sub
cmp
adc
imul
mov
lock
pop
ret
stos
inc
xor
xor
out
push
cmp
sub
sub
mov
fisub
sahf
push
int
mov
lds
pop
inc
sbb
mov
dec
aad
inc
mov
mov
mov
push
movs
imul
ja
loopne
mov
push
lods
jmp
pop
scas
jp
fs
in
push
and
jecxz
es
or
loopne
ja
mov
mov
jp
fwait
imul
push
retf
jge
shr
cmp
lock
inc
mov
inc
sub
xchg
mov
sbb
adc
cmp
movs
sti
pop
inc
in
cmps
in
dec
mov
ror
shr
xor
jb
push
les
mov
mov
pop
push
icebp
push
retf
and
inc
nop
push
mov
aam
sub
sbb
les
inc
enter
stos
std
inc
sub
scas
push
std
mov
sub
and
xor
fdiv
loop
out
fistp
inc
cmp
dec
in
ret
pop
scas
aaa
loopne
outs
mov
mov
push
(bad)
push
jg
pop
sar
pop
gs
push
jecxz
mov
jl
mov
in
leave
cdq
int3
and
arpl
mov
mov
mov
pop
sub
pop
sbb
fcomp
addr16
ins
jecxz
push
sbb
xor
aad
jecxz
jne
push
loop
pop
sbb
in
push
mov
lea
fcomi
fwait
dec
lea
stos
das
mov
call
imul
pushf
push
xor
out
cmp
les
retf
add
(bad)
or
sub
adc
adc
mov
mov
xor
cmps
pop
jg
mov
mov
movq
and
not
cli
ss
dec
sti
repnz
inc
mov
jl
leave
(bad)
mov
sub
ins
jmp
push
mov
push
cmps
ds
inc
pop
fnstenv
fsubr
aam
outs
mov
int3
popa
sub
xchg
cmp
or
in
rcl
mov
mov
or
inc
ins
fwait
sub
lahf
adc
or
and
shl
xor
je
or
mov
xor
imul
sub
add
cmps
lock
sbb
repnz
jno
jle
xchg
jg
push
lods
mov
xchg
xor
add
repnz
mov
push
adc
jbe
scas
and
push
jl
(bad)
out
ficomp
push
cmp
mov
jo
inc
test
popf
ins
daa
ja
out
aad
fs
mov
stos
adc
mov
ret
pop
dec
ins
xor
or
mov
ret
pop
dec
ins
xor
push
ror
mov
(bad)
cli
fisubr
loop
xchg
mov
(bad)
xchg
aaa
call
inc
pusha
xchg
out
or
frndint
inc
les
lock
mov
rcr
mov
aam
inc
pop
sub
mov
out
pop
xor
sbb
stos
mov
(bad)
pop
test
jecxz
icebp
mov
ror
adc
out
inc
loop
xor
in
movs
addr16
mov
jle
int
mov
in
sbb
xor
dec
adc
es
das
test
test
icebp
cmp
imul
icebp
hlt
int
test
sub
jp
jmp
adc
mov
mov
stos
aaa
push
sti
int3
lock
aad
sbb
sub
pop
imul
lock
cmp
sub
push
movs
xchg
jecxz
hlt
push
xlat
cmp
inc
in
xchg
mov
test
push
xor
dec
and
pop
pop
sar
ds
inc
lock
push
jge
fst
leave
shl
dec
les
dec
jne
cli
stos
aas
stc
adc
test
pop
leave
adc
out
sbb
cs
arpl
movs
mov
mov
mov
mov
and
(bad)
in
cmp
icebp
jbe
mov
push
in
or
xchg
adc
xchg
pusha
jbe
sbb
enter
lock
std
add
aad
pop
mov
push
sbb
and
or
sbb
das
cmp
pop
imul
add
icebp
fldcw
cmp
and
push
loope
cs
dec
clc
js
leave
mov
aam
mov
js
das
pop
sbb
cmp
into
jnp
loopne
adc
movs
inc
mov
push
pop
or
imul
nop
jae
jae
jb
jecxz
call
shl
scas
push
enter
inc
js
punpcklwd
lods
lods
sbb
add
cmc
and
shl
adc
pop
leave
lock
pop
sahf
adc
push
sub
xor
add
lods
pop
das
sub
lahf
fiadd
pop
shl
mov
test
xor
jnp
ds
lock
sbb
add
xor
lods
ds
out
imul
outs
xlat
loopne
cs
enter
stos
fld
mov
cmp
pop
mov
repnz
sbb
nop
movs
loope
addr16
cmp
mov
jae
fisttp
mov
mul
add
clc
pop
inc
lock
stc
mov
aas
fst
dec
shl
dec
into
stos
cld
and
fisubr
lds
in
stc
inc
mov
pop
push
or
aad
sub
rol
(bad)
test
jns
cpuid
test
xchg
dec
fst
enter
lock
std
add
cli
jnp
lods
retf
fild
cdq
imul
lods
retf
pop
xchg
push
enter
mov
xor
repnz
int
sbb
stos
cmp
cwde
xchg
stc
push
ret
xchg
mov
and
push
ins
int3
pop
sbb
inc
mov
imul
stc
jmp
mov
jp
xor
adc
jo
imul
sbb
nop
or
or
cwde
int3
push
retf
jg
push
dec
ret
cmps
adc
xchg
mov
fdiv
sar
(bad)
out
repnz
gs
pop
das
data16
arpl
data16
jae
addr16
jae
addr16
jnp
addr16
jnp
addr16
jnp
and
enter
retf
leave
add
inc
call
call
pushf
mov
icebp
imul
fisub
or
je
(bad)
sbb
xor
cmps
lahf
out
lock
xchg
jno
pop
pop
rol
fisttp
inc
xchg
nop
mov
in
retf
dec
mov
repnz
jbe
pop
loope
mov
mov
inc
rcl
mov
push
out
xchg
mov
mov
xor
adc
push
dec
leave
cmp
mov
loop
icebp
hlt
fdivr
pop
(bad)
stc
lds
mov
pop
lock
fidiv
sub
sub
cld
(bad)
fld
ffreep
(bad)
test
data16
sbb
pop
(bad)
in
aad
or
jno
mov
and
fcomp
sub
cmp
lahf
(bad)
push
(bad)
out
sub
push
sub
lods
push
or
push
pushf
push
jmp
mov
lods
jbe
sar
(bad)
adc
add
cmp
stc
sub
xchg
mov
adc
loope
push
lods
(bad)
ins
(bad)
push
inc
ficom
jmp
adc
sub
push
(bad)
cmp
pop
sub
push
mov
rol
inc
jbe
stos
pop
cmps
adc
(bad)
pop
push
clc
cwde
aam
mov
mov
cs
(bad)
in
mov
xor
leave
fst
sub
out
fst
addr16
push
aaa
push
sub
pushf
je
test
xor
call
push
inc
neg
dec
fst
jg
mov
retf
mov
call
push
stc
in
stc
and
push
aas
jmp
xor
mov
mov
xor
fild
xchg
fwait
add
and
push
or
add
clc
pop
stc
mov
pop
mov
or
and
adc
inc
xchg
jnp
ja
test
retf
cmp
mov
ret
inc
xor
add
aam
jns
lock
ss
int
enter
and
pop
mov
cld
in
or
adc
mov
mov
push
lods
push
cwde
or
(bad)
shl
call
jmp
pushf
ror
int3
mov
mov
jp
xchg
jo
push
pop
cmp
ret
push
imul
sbb
mov
add
jns
cmp
inc
pop
xor
or
jnp
inc
sbb
pop
push
and
and
pop
pause
in
mov
pop
cwde
test
sbb
outs
push
inc
pop
mov
xchg
cmc
mov
mov
movs
pusha
sub
push
test
sub
cmp
adc
in
xchg
adc
out
and
fs
cdq
jge
pop
xchg
popf
adc
mov
inc
jbe
mov
popf
ss
iret
arpl
loop
std
inc
sub
dec
lods
push
in
jge
xchg
inc
out
xlat
gs
dec
dec
into
cld
jge
cli
ins
cmp
xlat
lea
sahf
inc
inc
call
sti
cmps
icebp
xchg
push
stc
dec
lods
jl
out
dec
stc
out
loope
out
lock
psubusw
int3
cmp
or
pushf
inc
xchg
stos
xor
icebp
cld
push
push
sbb
test
jecxz
icebp
movs
mov
ds
dec
inc
data16
sub
xchg
les
std
pop
pop
jnp
and
mov
lock
inc
loope
(bad)
enter
ja
iret
(bad)
xchg
pop
xchg
jmp
std
jp
jne
jl
cmp
scas
pop
jp
mov
mov
sub
ss
popf
dec
add
adc
inc
and
rol
out
popf
das
sub
push
(bad)
retf
sub
dec
and
enter
repnz
(bad)
adc
sbb
or
push
jb
pop
lods
imul
(bad)
es
mov
cmps
(bad)
fnstsw
ret
aad
je
call
inc
jb
mov
add
mov
gs
gs
gs
add
sub
lods
pop
(bad)
aas
jmp
mov
mov
dec
jle
mov
lock
add
inc
fcom
shl
(bad)
stos
(bad)
in
cld
repnz
cld
xchg
push
stos
jecxz
les
push
adc
push
lods
inc
lock
xchg
push
into
or
sub
aaa
xor
jbe
loope
add
loope
inc
xchg
test
fs
push
gs
daa
inc
or
leave
repnz
inc
pop
in
pushf
pop
ret
movs
jb
rcl
(bad)
aaa
in
mov
out
lock
psubusw
cmps
jg
xchg
mov
ds
ret
dec
in
clc
out
pop
sbb
in
xchg
and
icebp
jl
dec
jo
rcr
call
pop
xchg
loop
leave
sub
cwde
retf
mov
and
cmps
iret
in
sbb
repnz
loop
mov
outs
sti
sbb
(bad)
inc
mov
jns
xchg
arpl
xor
mov
dec
popf
dec
(bad)
xor
iret
adc
loop
out
sbb
cmp
fs
nop
cmps
xor
mov
mov
xor
sbb
rcr
cli
adc
sbb
into
push
mov
loop
add
or
adc
adc
and
push
cmps
lock
jb
cwde
xchg
dec
test
sub
je
(bad)
sbb
jo
test
repnz
and
fldenv
mov
leave
xchg
sub
and
mov
sbb
dec
test
xor
repz
test
loop
loopne
inc
xchg
mov
fnsave
xchg
ret
scas
in
cmp
aad
fcom
and
add
stos
sub
fadd
arpl
test
int3
dec
shl
sahf
and
sbb
cmps
outs
jbe
les
adc
mov
push
lds
jl
lock
std
add
out
test
clc
aas
gs
loop
xchg
cmp
test
sub
movs
fldcw
cmps
mov
sahf
and
jbe
cmps
lods
ret
xor
cmp
pop
test
xlat
adc
adc
out
(bad)
pop
or
adc
sbb
daa
sbb
push
xchg
(bad)
pusha
arpl
popa
mov
ret
xchg
in
push
lock
addr16
xchg
popf
adc
sbb
mov
cmps
cs
push
ja
adc
es
inc
dec
inc
mov
sbb
mov
das
xor
out
ret
test
pushf
clc
mov
cmp
mov
fbld
pop
lods
ds
rol
dec
jnp
add
repnz
test
sbb
loope
pop
adc
mov
mov
sar
dec
sbb
cdq
stc
xchg
fstp
(bad)
(bad)
iret
cmc
shl
dec
jp
loope
ret
mov
imul
pop
sbb
ins
sub
push
jbe
jl
mov
mov
mov
mov
pop
stos
pop
or
mov
xchg
pop
popf
push
clc
inc
jge
xor
in
idiv
push
inc
jb
mov
cmp
outs
in
xchg
cmp
mov
jno
test
lds
and
fnstcw
mov
kandnw
xor
inc
adc
push
inc
pcmpgtd
(bad)
mov
sbb
out
stc
and
arpl
cmp
mov
push
sar
aas
gs
cmps
pop
cmc
add
movs
xchg
sub
push
pushf
lods
es
loopne
mul
int3
sbb
mov
jno
ficom
emms
mov
jmp
jns
adc
test
vandnps
mov
dec
or
dec
cmps
jno
dec
pop
push
cmp
or
test
packsswb
aas
jno
push
xor
je
xchg
into
mov
pop
inc
les
les
dec
xchg
sub
xor
inc
sub
daa
and
pusha
out
sbb
push
push
repz
mov
cmp
lods
je
js
jb
jne
aad
cmps
sub
cli
test
(bad)
sbb
dec
jne
adc
mov
mov
enter
sbb
sbb
jns
fstp
fs
mov
cwde
in
cdq
mov
inc
dec
sbb
shl
ret
inc
out
cmp
retf
pop
sub
dec
ins
push
dec
cmp
cmp
ds
aaa
int
jl
inc
fst
pop
gs
sub
sbb
mov
aam
jle
xchg
push
dec
sahf
and
sbb
in
sub
dec
xor
mul
leave
adc
jecxz
xlat
pop
cmp
(bad)
rol
and
xchg
fild
aas
jp
loope
dec
mov
ins
xchg
icebp
imul
ror
ret
mov
sub
test
dec
pop
xchg
ficomp
inc
mov
jne
iret
lock
stos
js
jg
in
mov
mov
jmp
sub
iret
dec
repz
arpl
inc
enter
dec
ret
pop
cdq
movs
xor
fnstsw
lds
aas
sub
xchg
push
jo
sbb
inc
cmp
data16
add
push
mov
jmp
adc
in
mov
mov
jmp
push
js
hlt
jecxz
cmp
je
(bad)
iret
mov
stos
call
ret
push
repnz
dec
push
rol
loope
xchg
ins
inc
pusha
arpl
(bad)
pop
call
loopne
adc
(bad)
mov
sub
call
stos
xchg
adc
add
jno
imul
lahf
or
pop
mov
xchg
leave
popf
mov
lea
xchg
es
sub
xor
xor
mov
aad
xchg
out
sbb
push
jb
cmp
cmp
inc
ins
mov
adc
rcr
(bad)
(bad)
loop
lea
scas
sub
mov
clc
lods
ds
xchg
cmp
stc
outs
out
dec
inc
movs
xor
sbb
fstp
mov
pushf
call
aaa
gs
loopne
or
lods
not
inc
xchg
mul
pop
adc
dec
stos
cld
and
mov
add
pop
mov
(bad)
stos
(bad)
in
jl
inc
repnz
jo
add
dec
mov
push
or
out
mov
in
dec
out
mov
jb
mov
clc
mov
add
loope
out
pop
sbb
out
push
(bad)
stos
add
lods
sbb
pop
xchg
ficomp
out
mov
jne
iret
lock
jg
in
mov
repnz
cli
dec
sbb
pop
sub
mov
inc
mov
push
sbb
dec
in
out
mov
xchg
int3
push
pop
lds
bnd
cmc
shl
mov
sub
inc
dec
and
pop
movs
push
xchg
jnp
xor
sbb
pop
jmp
or
rol
mov
dec
push
sbb
push
repnz
aas
sub
(bad)
in
pop
dec
add
add
adc
adc
and
adc
add
xor
mov
add
ss
enter
lock
repnz
daa
mov
shr
mov
mov
cmps
movs
cmp
pop
sbb
mov
setle
jnp
sti
es
stos
jl
loopne
lds
sbb
inc
ja
lods
je
(bad)
cs
mov
fcom
and
add
movs
pop
pop
(bad)
xchg
mov
fistp
les
mov
popf
xlat
mov
faddp
ss
cmps
loop
outs
loope
data16
dec
adc
shl
daa
cld
xchg
stos
mov
add
sar
pop
ds
pop
out
loopne
xchg
push
jg
aaa
leave
mov
pop
stos
cdq
cmova
mov
xchg
push
ins
jl
std
pop
inc
mov
xchg
loopne
pop
aad
jp
jo
jle
cmp
or
jecxz
unpcklps
cmp
sbb
iret
inc
dec
(bad)
inc
adc
pop
iret
push
stos
cmp
or
aad
dec
aas
test
aad
ins
pop
push
aad
ins
pop
push
aad
ins
pop
push
aad
pop
stos
(bad)
popa
js
mov
je
inc
xchg
xor
cmp
jg
aad
mov
jns
loop
cdq
lahf
mov
repnz
mov
mov
mov
cmps
adc
mov
imul
mov
pop
fs
(bad)
mov
fst
aas
repnz
jbe
pop
loope
cld
popf
xor
push
addr16
pop
mul
leave
adc
dec
data16
jge
sar
push
enter
pop
movs
and
sahf
pop
loop
repnz
dec
lock
mov
int3
lea
or
(bad)
js
xchg
aam
mov
(bad)
int
jmp
fsubr
push
mov
nop
stos
(bad)
popa
mov
jge
jecxz
stos
repnz
ret
pop
hlt
adc
mov
out
lock
add
ds
add
ins
pop
mov
sub
cli
inc
push
addr16
int3
inc
and
jns
sbb
xchg
fcomp
mul
mov
add
out
sub
clc
xchg
retf
les
xor
sub
in
cmp
data16
pop
ret
inc
ffreep
mov
mov
pop
pop
push
mov
mov
sub
shr
pop
sub
shr
pop
sub
shr
pop
sub
enter
inc
inc
add
push
and
out
inc
push
and
in
(bad)
in
fwait
mov
lock
and
stos
not
cmp
mov
aad
fcom
and
rcl
xor
in
in
in
in
in
push
adc
xchg
push
pop
in
xchg
call
lahf
mov
out
pop
stc
aad
pop
mov
int3
jecxz
mov
addr16
fdiv
fcmovbe
stos
repz
stos
retf
das
xor
ins
int
xor
sub
dec
sub
fidivr
into
fsub
push
out
push
push
test
stos
shr
stos
lock
adc
pop
fidiv
jbe
stos
dec
bnd
adc
and
jb
adc
sbb
jmp
inc
fst
(bad)
gs
loope
add
mov
inc
or
les
sbb
add
in
push
sub
push
mov
lds
arpl
mov
jg
cld
cs
sahf
pandn
mov
inc
xor
sbb
imul
inc
xchg
into
fisub
cld
pop
retf
aas
push
outs
shr
sbb
das
(bad)
push
retf
test
inc
ret
cdq
inc
aas
loope
inc
movs
jns
fmul
sbb
pop
and
stos
dec
push
xor
imul
cmp
arpl
inc
mov
js
lea
push
call
in
fstp
outs
retf
mov
lods
in
ror
pop
pop
in
and
pop
shr
sbb
fstp
pop
dec
adc
test
jl
dec
sub
shr
pop
sub
pop
in
xchg
call
aam
cmp
sahf
pandn
sti
sub
cld
xchg
je
das
lock
cmp
movs
cmc
sti
mov
jle
sub
cli
jns
aas
inc
js
fild
pop
ret
xchg
ret
jno
inc
scas
fnstcw
in
iret
data16
or
out
jne
push
push
out
dec
mov
dec
fld
int3
push
jge
mov
mov
mov
inc
inc
loope
jmp
jle
push
push
sub
push
cwde
loop
inc
and
rcr
popf
dec
cmps
enter
cmp
movs
or
mov
pop
test
nop
cwde
popa
cmps
adc
sub
hlt
adc
fld
cld
sub
ffreep
mov
mov
inc
jae
loop
mov
pop
sub
xor
pop
adc
push
js
add
xchg
pop
(bad)
lods
push
mov
xchg
xor
inc
mov
mov
inc
call
retf
fld
sbb
sti
mov
int3
cli
push
mov
inc
fsub
gs
inc
in
inc
lahf
jae
cmp
mov
bound
aaa
pop
in
test
lods
add
fcmovbe
or
inc
cmc
retf
adc
xchg
mov
movs
push
jle
js
inc
aam
aas
ret
test
mov
test
jne
mov
push
std
cmp
inc
sbb
jle
repz
and
jno
or
push
cmp
and
rol
arpl
pslld
pop
sub
mov
in
cs
lods
jo
sbb
dec
xchg
lods
fcomip
inc
dec
popf
aas
in
imul
aas
cwde
mov
inc
test
xchg
and
iret
cmp
xor
(bad)
mov
int3
cmc
jl
jb
ins
cmp
loop
cld
mov
pop
fdiv
dec
inc
or
sub
inc
ss
sti
cmp
mov
scas
iret
and
jmp
imul
pop
sar
outs
out
lock
psubusw
mov
jns
jge
ss
fcomp
dec
int3
pop
hlt
fnstsw
lods
sbb
cli
aaa
dec
xchg
lods
aad
push
cmp
or
sbb
adc
test
movs
aam
shr
imul
xor
(bad)
fidivr
or
sbb
xchg
xchg
int3
xor
addr16
in
or
cmp
adc
mov
xchg
jae
stos
outs
sbb
cmp
mov
or
inc
pop
stos
mov
add
stos
mov
js
push
retf
jmp
fprem1
jmp
xchg
idiv
inc
in
retf
loope
out
lock
test
fild
jne
je
xchg
cs
scas
pop
scas
pop
scas
pop
scas
pop
cs
cs
cs
cs
cs
bnd
cmps
dec
popf
pop
in
imul
aas
cwde
jmp
mov
sbb
call
inc
cmp
push
sub
or
jp
adc
jg
sub
mov
sbb
push
fs
ja
inc
push
in
mov
sbb
pinsrw
stos
xchg
arpl
lods
(bad)
(bad)
xlat
and
adc
adc
mov
pop
lods
(bad)
adc
mov
movs
mov
mul
mov
mov
pop
ins
lods
(bad)
in
pop
xor
mov
mov
and
stc
push
ds
js
mov
loop
retf
(bad)
push
(bad)
jne
pop
inc
push
je
sar
inc
mov
mov
push
sub
mov
mov
dec
ss
sbb
addr16
sub
icebp
ror
xor
std
sub
xchg
mov
in
dec
fsub
add
sbb
inc
dec
cwde
ficom
aad
xchg
sub
aam
adc
(bad)
cmp
das
rol
inc
shr
xchg
loop
mov
or
xchg
dec
xor
out
sub
loopne
ret
mov
ret
xor
out
xor
imul
test
retf
xor
sti
jge
push
inc
push
lods
movs
xchg
add
out
and
dec
mov
push
add
aaa
dec
popf
cmp
or
fst
jg
test
mov
adc
push
scas
cmp
clc
cld
cmps
aaa
xchg
pop
jmp
retf
jns
xor
cdq
mov
jge
int
pop
xchg
sbb
frndint
into
in
sub
inc
and
pop
icebp
popf
mov
fwait
sub
sbb
pop
mov
scas
or
arpl
dec
cmp
ret
xor
xor
push
pop
sbb
(bad)
lds
or
mov
cmp
mov
fstp
cwde
cmps
icebp
xchg
movs
sar
push
aad
aam
cmp
xchg
adc
mov
clc
cmp
xor
cmp
into
push
mov
push
ficomp
iret
pop
sbb
(bad)
popf
jecxz
mov
(bad)
fisttp
jns
lods
(bad)
retf
js
xchg
in
jl
vsubss
mov
retf
call
stos
aaa
inc
dec
test
pop
cmp
mov
mov
dec
jb
pop
mov
icebp
cmp
stos
inc
inc
mov
push
dec
(bad)
int3
adc
add
cmps
push
pop
inc
popf
dec
in
fwait
es
jecxz
jne
in
xchg
idiv
dec
cli
(bad)
or
xchg
jg
mov
cmp
leave
stos
add
mov
mov
hlt
mov
dec
je
outs
xchg
xchg
test
pop
sub
fdiv
inc
in
and
inc
in
jecxz
inc
jmp
push
jmp
je
xor
icebp
mov
pop
adc
mov
inc
push
cmp
cli
cmp
jb
sub
clc
mov
xor
push
in
pop
xchg
cmp
push
cmps
or
jno
sub
push
pop
daa
addr16
cmp
push
in
mov
mov
outs
leave
aaa
jne
jmp
jge
push
inc
adc
push
jge
clc
pop
stc
aad
pop
std
pop
shl
sbb
add
pop
not
outs
mov
sti
cmps
lock
scas
and
ror
and
cbw
arpl
retf
(bad)
pop
xor
pop
push
mov
xor
dec
jbe
sub
movs
mov
sbb
hlt
inc
xor
dec
sub
xchg
inc
jle
mov
sbb
js
movs
sub
pop
cmps
mov
nop
pop
jl
cmp
imul
sub
ror
lods
inc
jb
test
sbb
ficomp
push
nop
cdq
aaa
test
aad
nop
ficomp
out
fucomi
clc
aaa
clc
mov
out
test
std
inc
lea
lods
push
retf
scas
ret
mov
cld
call
(bad)
dec
xor
xchg
mov
push
xchg
scas
js
push
push
popf
mov
push
jp
out
push
test
jmp
lahf
mov
int
fmul
test
xchg
test
movhps
dec
in
xor
push
cmp
or
pushf
mov
(bad)
in
or
and
push
mov
shl
hlt
push
dec
sbb
scas
in
leave
dec
xchg
xchg
add
sub
out
clc
stos
jmp
mov
xlat
call
popa
mov
cmp
cmp
jge
js
jg
scas
loopne
mov
push
(bad)
push
(bad)
jne
hlt
cs
jg
jmp
in
out
std
pop
or
dec
jmp
stos
pop
sti
sub
out
mov
xor
(bad)
(bad)
mov
dec
cli
or
leave
leave
cmp
retf
jae
jnp
test
mov
fs
fild
retf
repnz
mov
dec
cld
cmps
jae
mov
jo
popa
les
in
int
hlt
sbb
jo
les
xchg
adc
int
or
fcom
mov
sub
pushf
sub
mov
xor
cs
int
fiadd
(bad)
pop
sbb
fucomi
clc
aaa
clc
lahf
mov
jmp
or
push
cmps
inc
or
rol
xchg
outs
push
fstp
sar
sti
sub
lods
push
test
imul
sbb
and
out
lods
lods
jae
dec
jmp
adc
sbb
int
mov
sti
sbb
mov
fmul
jle
jo
in
mov
es
fldenv
mov
xchg
adc
push
adc
cmp
xor
jmp
mov
inc
in
outs
xor
xchg
bound
adc
and
mov
pop
bound
dec
sbb
test
lods
push
rcpps
adc
fcmovnb
sbb
jge
push
inc
adc
push
std
dec
clc
pop
stc
aad
rcr
mov
cmp
jg
jmp
dec
dec
pop
hlt
pop
or
cmp
xchg
sub
std
fistp
stos
aad
mov
mov
hlt
neg
arpl
and
mov
imul
push
icebp
dec
inc
scas
fwait
xchg
add
pop
jo
ja
jns
push
ins
pop
jl
enter
movs
mov
sub
(bad)
jo
jmp
xor
sahf
and
ficom
leave
cmp
test
into
xchg
mov
jl
push
cs
scas
jno
push
ret
fisub
xchg
shl
fimul
cli
xchg
lock
push
scas
clc
sub
sbb
aaa
clc
lds
jg
stos
aad
mov
and
xchg
inc
lds
mov
dec
fst
cmc
pop
xchg
adc
mov
lods
enter
ja
aam
jmp
aas
mov
mov
neg
pop
cmps
and
sti
daa
das
test
arpl
cmps
mov
xor
stos
nop
mov
int3
ror
stos
(bad)
ror
jmp
xor
cmp
stos
(bad)
mov
(bad)
leave
xlat
loopne
jl
and
test
and
test
mov
adc
and
call
aad
cmps
outs
or
in
cmc
cld
sbb
inc
fst
cmps
lock
int
dec
lods
mov
popf
or
jg
fisubr
movs
lahf
xor
out
xor
and
cmps
call
rcl
cwde
dec
cli
xor
inc
pop
fcomp
mov
or
xchg
sbb
cmc
(bad)
fcos
add
popf
dec
pusha
popa
sbb
outs
test
sahf
lods
mov
add
mov
stos
(bad)
movs
dec
jnp
mov
out
mov
fstp
xchg
(bad)
repz
popa
xchg
xchg
call
shr
out
leave
mov
mov
jmp
fadd
mov
pop
mov
or
in
mov
clc
pop
pop
push
xchg
and
stos
xchg
std
pusha
clc
lahf
and
jge
jg
outs
dec
dec
or
(bad)
shr
xor
mov
jno
pop
fnstsw
int3
ret
out
jecxz
jne
test
fcomp
xor
js
or
sub
into
cmp
push
sbb
pop
dec
push
ret
mov
add
fsubr
sbb
cmps
pop
loope
popa
pusha
dec
cmp
es
in
mov
(bad)
std
mov
push
stos
jb
call
out
mov
fwait
sub
ins
lods
mov
stc
xchg
ins
pop
or
and
imul
call
jge
pushf
cdq
mov
stc
mov
js
and
outs
rol
scas
ror
pop
(bad)
rol
xor
popa
xchg
push
sbb
arpl
dec
sub
adc
xor
mov
cmp
sbb
xor
mov
pop
mov
xor
mov
sub
bound
inc
mov
sahf
xlat
inc
es
pop
shr
icebp
sahf
out
inc
popa
lds
lods
push
jmp
repnz
xchg
inc
xor
push
jbe
fisttp
repnz
lods
cmp
call
pop
(bad)
jecxz
retf
dec
jmp
sub
fadd
out
pushf
or
xchg
jno
fmul
stos
xchg
ror
rcl
jb
(bad)
out
cli
imul
push
push
mov
imul
out
sub
(bad)
fnstsw
inc
shl
mov
inc
std
xchg
inc
pop
add
pop
pop
inc
fidivr
sub
les
leave
xor
push
into
adc
dec
dec
pop
fsub
xchg
ss
out
test
xor
mov
pop
cmps
jne
aad
mov
lods
push
stos
jb
mov
dec
cs
cmc
push
in
mov
(bad)
out
jg
jmp
mov
mov
dec
and
push
pop
inc
scas
cmp
dec
movs
sti
daa
aas
mov
retf
scas
jb
xor
std
mov
ror
repz
les
mov
xchg
in
push
mov
mov
cmp
push
ffree
in
(bad)
sbb
das
nop
imul
push
mov
dec
sbb
sub
mov
mov
adc
stos
sub
jbe
fst
fnsave
cs
inc
pop
retf
mov
mov
stos
mov
and
mov
movs
mov
cs
popf
retf
adc
inc
cwde
adc
sti
and
loope
push
xchg
pop
cwde
jl
pop
adc
inc
cmp
sbb
fiadd
test
imul
hlt
scas
icebp
enter
xor
cmc
sbb
push
bound
cmp
enter
lahf
hlt
xchg
push
and
inc
cmc
leave
ficom
rcl
(bad)
pop
mov
in
mov
(bad)
adc
or
fldenv
or
rcr
adc
sbb
inc
inc
lods
sbb
cmp
pop
stos
sub
inc
push
pop
stos
mov
sub
inc
outs
lods
mov
jmp
stos
aad
mov
xchg
fwait
and
adc
movs
and
push
inc
imul
in
sbb
inc
imul
pop
mov
or
popf
fstp
mov
pop
mov
push
cdq
mov
stos
nop
sbb
leave
call
adc
jno
ins
mov
xor
enter
out
jecxz
dec
push
add
addr16
mov
lods
mov
xor
push
repnz
inc
in
sub
push
mov
jnp
dec
lea
push
push
jne
xchg
out
or
jmp
stos
lods
scas
push
(bad)
out
std
mov
sub
jmp
mov
xchg
into
sti
add
ror
inc
xchg
xchg
fdivr
sub
cwde
fisub
hlt
dec
lahf
stos
push
in
arpl
outs
push
push
mov
adc
mov
fld
pop
scas
mov
mov
inc
xor
nop
jno
mov
push
sbb
inc
test
mov
int3
daa
xchg
repz
imul
aaa
(bad)
test
mov
(bad)
push
mov
mov
into
mov
jne
jmp
add
retf
add
push
inc
stc
sub
lds
in
les
sti
lods
inc
jo
fsub
scas
mov
shl
jne
stos
addr16
lods
retf
jb
dec
and
call
fld
inc
(bad)
xchg
adc
in
call
pop
daa
sbb
mov
scas
inc
jl
dec
ss
call
mov
(bad)
js
adc
shr
jno
and
mov
lahf
fnstcw
out
test
arpl
ins
or
add
xchg
or
dec
mov
jne
daa
outs
test
jae
movs
sub
jecxz
lock
sub
pop
retf
adc
push
jno
jmp
push
push
retf
pop
push
mov
add
sahf
add
call
dec
movs
and
ins
pop
adc
popa
and
add
push
(bad)
dec
mov
imul
mov
cmp
add
xchg
xchg
inc
gs
adc
popa
daa
popa
ret
fcomp
hlt
push
retf
mov
(bad)
aad
and
les
dec
out
inc
out
les
aad
push
repz
mov
call
pop
scas
imul
call
dec
mov
loop
jge
inc
lock
lods
aas
in
adc
in
xchg
nop
clc
aaa
xchg
xlat
xchg
mov
mov
cmps
adc
ins
sub
cmps
enter
scas
sbb
stc
jne
cmps
jne
mov
gs
gs
fst
outs
dec
and
call
xchg
xchg
xor
icebp
dec
cmps
mov
dec
sub
(bad)
ins
fidiv
push
ret
in
lds
jo
jmp
mov
sbb
mov
aad
mov
ficomp
fild
mov
cs
sub
outs
push
fxch
aad
aad
cbw
stc
aas
push
in
shl
xor
arpl
aas
cmp
pop
push
addr16
push
xor
cmp
ins
push
adc
stos
push
jo
inc
mov
test
push
shr
(bad)
shr
xchg
std
cmp
sub
mov
push
(bad)
push
pop
outs
stos
sbb
outs
in
scas
push
xchg
jl
cmp
pop
aad
ds
xor
xor
pop
hlt
aad
xchg
mov
mov
mov
or
xchg
ret
jmp
cmp
inc
mov
lods
dec
ins
adc
mov
dec
xor
and
fwait
cli
mov
daa
xlat
adc
add
es
lods
retf
or
xor
pop
mov
pop
dec
lods
jge
cmp
test
test
mov
jbe
fs
cmp
(bad)
fwait
pop
jg
call
stos
aad
mov
neg
jbe
dec
xor
(bad)
(bad)
and
call
pop
xchg
in
pushf
xchg
adc
xchg
test
jge
dec
sti
mov
pop
pop
test
dec
cmp
jp
xchg
enter
bnd
or
jle
nop
xor
jp
cwde
rcr
(bad)
dec
adc
xchg
and
xchg
popf
dec
pop
push
fs
rol
pop
ja
jecxz
mov
data16
sub
mov
mov
mov
imul
in
cmp
or
mov
xlat
jbe
jbe
pop
xchg
dec
imul
data16
repz
das
aas
adc
lock
mov
stos
ja
popf
iret
cdq
cwde
mov
imul
add
jno
push
dec
bswap
lea
pop
cwde
(bad)
fdiv
icebp
out
adc
cwde
(bad)
test
adc
pop
jnp
jl
scas
cwde
jl
xchg
loope
fdivr
jmp
loope
sub
xor
cwde
ret
dec
inc
not
iret
shl
arpl
popa
cmp
or
(bad)
xchg
mov
enter
outs
int
sbb
adc
sub
daa
je
call
adc
test
xor
ret
pop
pop
add
mov
sub
inc
jle
lods
fstp
popf
imul
cld
nop
ja
jae
pop
aaa
in
xchg
lods
aas
in
adc
in
xchg
xchg
js
cmps
popf
jecxz
xor
sbb
mov
sbb
ins
push
jmp
repnz
rcr
add
retf
dec
adc
jge
mov
sbb
loopne
out
imul
jae
sub
jo
mov
jg
stos
mov
ds
fdiv
jb
push
pop
std
mov
test
cmps
and
pop
xor
xchg
jno
sbb
pushf
dec
cmp
imul
adc
xor
mov
int3
popf
stos
jg
xchg
pop
adc
ret
test
clc
dec
lahf
je
cmp
ds
mov
push
xor
cdq
xchg
dec
enter
inc
mov
mov
(bad)
inc
mov
imul
lods
retf
jae
int
ins
out
std
sub
dec
cmp
xchg
retf
inc
cmp
sahf
push
xchg
leave
adc
dec
fnstenv
jmp
pop
shl
into
aaa
js
bound
leave
stos
inc
mov
sahf
movs
dec
not
clc
iret
mov
dec
(bad)
pop
inc
xor
stos
jle
repz
mov
pop
neg
push
mov
push
outs
ficomp
call
int3
pop
ret
inc
mov
push
int3
fdivr
sbb
mov
repz
mov
sbb
xchg
dec
daa
jmp
xchg
add
loope
fst
inc
in
daa
std
inc
xor
je
scas
test
movs
xlat
repz
fcom
mov
mov
add
dec
loopne
lods
pop
lods
nop
ds
das
mov
dec
loop
sbb
test
test
iret
dec
sbb
adc
test
sbb
add
enter
pop
fwait
xchg
data16
(bad)
in
(bad)
fisubr
sbb
cmp
and
jmp
fdiv
in
xchg
adc
jl
dec
mov
rcr
xchg
push
in
lock
sbb
jo
das
add
fdiv
or
loopne
cwde
fwait
mov
cdq
(bad)
addr16
ins
out
int3
cmp
xor
or
int
test
das
fwait
sbb
cmp
mov
mov
inc
shr
inc
jo
mov
bound
and
xchg
or
adc
jne
imul
ror
jmp
xor
pop
shl
push
call
ins
movs
mov
jp
jb
rcl
and
aam
lea
push
repz
rcr
mov
pop
sbb
(bad)
(bad)
in
mov
xchg
mov
(bad)
cmc
xor
ss
or
and
jecxz
call
ret
aam
xchg
xchg
cld
dec
cmp
dec
mov
add
mov
sar
cmp
loopne
mov
dec
push
fisub
adc
mov
ds
adc
dec
pop
and
sub
dec
repz
push
sbb
and
pushf
call
mov
dec
sbb
call
cs
pop
mov
mov
jg
push
imul
inc
pop
sbb
scas
loop
stc
mov
cmp
fsub
pop
outs
ftst
pop
pop
(bad)
lock
mov
lods
cli
xor
scas
mov
jmp
or
rcl
xchg
sbb
push
stc
leave
rcr
jmp
pop
xchg
pop
ins
daa
mov
xchg
xor
outs
pop
sbb
push
mov
mov
aad
cmps
je
mov
scas
mov
sti
push
push
aas
icebp
inc
jge
neg
std
push
int
jnp
xor
mov
cli
mov
mov
and
and
out
push
add
dec
inc
mov
mov
addr16
pop
iret
iret
xor
test
dec
movs
sbb
sbb
leave
std
sub
dec
dec
jb
and
(bad)
fidivr
pushf
leave
or
repz
jecxz
lock
push
enter
sub
inc
(bad)
fcom
push
cmp
mov
retf
stos
enter
(bad)
data16
push
addr16
jnp
sbb
mov
imul
retf
dec
dec
mov
je
idiv
xor
gs
lods
int3
int
jle
mov
jae
aaa
jnp
add
(bad)
pop
sub
(bad)
pop
(bad)
mov
(bad)
mov
(bad)
cmp
pop
or
repnz
repz
sbb
pop
enter
mov
addr16
call
adc
adc
arpl
arpl
icebp
aas
movs
in
popa
mov
popa
nop
and
add
in
push
movs
inc
(bad)
mov
inc
icebp
dec
clc
addr16
jl
(bad)
sbb
shl
sysret
ffree
pop
sbb
jp
jmp
inc
jno
out
sar
mov
cmp
out
jmp
jg
repz
(bad)
mov
call
or
mov
call
arpl
popa
aas
imul
and
sahf
(bad)
sub
std
jecxz
das
jmp
jbe
cmc
push
dec
loope
aad
ja
pop
mov
das
in
mov
in
add
stos
fwait
adc
les
fwait
adc
dec
sub
in
pop
mov
jnp
ins
pushf
jno
dec
cmp
aaa
mov
jmp
or
and
mov
jmp
sar
jge
xchg
lods
mov
(bad)
hlt
inc
pop
xchg
lods
psubsw
into
std
pop
dec
pop
push
rcl
or
mov
int
out
out
cs
dec
xor
out
pop
lea
push
mov
adc
shl
int
pushf
xor
scas
ret
jns
call
and
addr16
push
fcomp
cmp
mov
inc
push
and
xchg
vpsllq
loop
sbb
lods
(bad)
and
popa
pop
js
jno
push
hlt
cs
in
mov
xchg
xchg
xor
jmp
(bad)
fisub
xor
pop
mov
sub
pop
stc
adc
sub
rcr
outs
mov
mov
dec
cdq
and
push
jl
mov
fist
fsub
xchg
(bad)
jae
in
enter
xchg
neg
das
xor
jbe
push
cmp
ins
aam
dec
in
xchg
out
ror
xor
dec
or
test
aam
pop
test
(bad)
std
mov
xchg
pop
idiv
adc
mov
jne
ins
nop
push
daa
dec
out
xchg
(bad)
movs
pop
in
jg
push
mov
movs
jmp
inc
shl
sti
jne
mov
mov
in
hlt
fs
xor
inc
push
sbb
mov
or
ins
scas
fstp
jbe
push
pop
stos
lds
jl
jb
cmp
(bad)
inc
es
inc
xlat
inc
scas
lods
rcr
stc
xor
xchg
cmp
inc
mov
and
xchg
xchg
js
test
cmp
call
out
(bad)
das
jmp
inc
mov
arpl
mov
dec
sbb
mul
sub
cmp
push
in
push
rcr
(bad)
out
xchg
test
or
mov
sub
mov
fs
jge
jno
imul
xchg
xchg
jno
push
pop
popf
aaa
xor
push
outs
cdq
stos
neg
rep
mov
fdiv
and
xor
popw
hlt
int
push
hlt
scas
aas
adc
xchg
bound
ins
jge
sub
popa
ret
les
push
pop
sahf
add
outs
pop
aaa
(bad)
mov
fcomp
mov
test
xor
cld
sub
repz
out
adc
inc
in
jmp
fst
xchg
inc
and
cmp
bound
loop
adc
adc
ss
mov
icebp
cwde
xor
leave
(bad)
push
aad
push
fst
sbb
pop
cmps
push
lods
mov
div
pop
inc
mov
xor
emms
mov
jbe
jmp
test
je
jmp
lahf
movs
nop
aas
test
cmps
inc
std
inc
pop
jg
les
imul
adc
stos
leave
mov
or
fistp
inc
xor
lock
add
dec
icebp
sub
es
or
push
xchg
adc
adc
out
jp
in
pop
fwait
sub
mov
push
clc
ret
xchg
rol
ins
jg
jo
(bad)
mov
movs
std
outs
ret
dec
cli
fild
scas
jmp
sbb
pop
xor
scas
mov
sbb
ss
and
lea
(bad)
push
imul
or
jb
je
inc
fnsave
in
jne
sbb
mov
mov
in
iret
cwde
cdq
xchg
mov
das
imul
(bad)
mov
inc
in
mov
adc
dec
cdq
popf
shl
in
mov
leave
mov
inc
push
int3
fsubr
mov
test
mov
mov
ja
xchg
cdq
jnp
mov
xchg
mov
hlt
imul
in
popa
sar
jmp
out
dec
add
jns
sbb
mov
xchg
xchg
or
scas
jb
jp
push
out
mov
test
mov
scas
sub
movs
xor
and
pop
ins
lods
pop
scas
bound
cmp
ins
retf
jb
adc
xor
mov
in
jns
and
cmp
fsub
arpl
adc
jp
outs
mov
sbb
loop
pushf
cwde
adc
inc
inc
cld
xchg
push
inc
mov
pop
test
sbb
jae
mov
inc
xor
xor
call
xchg
adc
xchg
sub
mov
hlt
es
or
outs
mov
mov
out
inc
out
lods
jge
sbb
mov
cmps
cwde
mov
mov
adc
ins
mul
shr
xchg
jne
fidiv
pop
movs
inc
pop
cmps
dec
(bad)
in
imul
sbb
add
adc
inc
xor
aas
imul
psadbw
xchg
pop
inc
mov
call
jnp
adc
test
xor
call
loopne
in
or
sbb
inc
test
jmp
les
or
pushw
mov
jmp
mov
jmp
mov
push
push
es
mov
mov
cmc
pop
xchg
mov
or
int3
adc
cmc
cmp
xor
retf
outs
movs
jg
ins
and
mov
mov
test
(bad)
sti
xor
jmp
cwde
sar
(bad)
outs
jle
(bad)
dec
mov
stos
aad
in
std
jne
mov
sbb
xchg
out
jp
and
es
push
jmp
mov
cmp
outs
into
jne
dec
repz
jle
mov
push
push
mov
hlt
in
pop
shl
imul
loop
mov
jmp
retf
das
rcl
mov
xchg
cs
mov
adc
(bad)
mov
sbb
out
xchg
leave
in
jb
and
sbb
cmp
inc
xor
adc
jle
adc
jp
add
inc
xchg
mov
cmp
add
call
lods
xchg
sahf
push
pop
or
push
xchg
cmps
mov
in
das
aaa
xor
jne
ds
dec
std
pop
call
test
jnp
outs
push
xlat
inc
cmps
cmps
cmp
fist
aam
jmp
iret
out
(bad)
mov
jae
loop
inc
xor
jle
and
(bad)
aad
aaa
adc
lahf
sbb
int3
ucomiss
fisttp
mov
push
xchg
lds
adc
push
dec
int
xchg
and
ficom
push
ds
imul
bound
rcr
mov
cmps
xchg
xor
jle
mov
or
repz
add
ja
mov
ss
jne
cmc
rcl
push
inc
add
cmp
je
in
xchg
jns
jnp
mov
jb
xor
sub
cwde
sbb
sti
or
ret
aas
mov
xor
lea
mov
jne
mov
fstp
fmul
in
shl
mov
bound
es
fld
outs
add
jmp
push
call
imul
lods
std
cmp
inc
jge
outs
and
je
push
not
cmp
and
mov
ja
ficomp
cmp
mov
(bad)
cmp
jmp
fwait
adc
xchg
mov
dec
and
cli
adc
adc
sub
rcr
movs
(bad)
outs
icebp
xchg
xchg
mov
sbb
lea
jecxz
mov
iret
and
scas
ins
sbb
cwde
cmp
mov
cli
mov
repnz
pop
fwait
jmp
add
and
add
retf
mov
add
fsub
dec
jbe
and
jp
test
rol
add
push
dec
aad
retf
pop
cli
fld
inc
pop
jg
movs
mov
jg
shr
in
push
push
js
mov
ret
idiv
mov
and
jo
mov
test
cmc
mov
dec
xchg
xchg
daa
lock
icebp
imul
add
sub
cld
push
arpl
mov
sahf
aaa
jecxz
popf
iret
and
xchg
(bad)
cmc
push
out
jecxz
sub
sub
sbb
add
push
jno
cmp
jmp
and
int3
into
sbb
xchg
fwait
sub
clc
rcl
nop
cmp
sub
lds
push
xchg
push
sbb
mov
(bad)
iret
sub
xor
sub
cmp
retf
xchg
fnstenv
jmp
mov
pop
sub
scas
add
(bad)
xchg
dec
jmp
adc
mov
and
adc
stos
in
aas
cs
nop
dec
nop
dec
xchg
mov
lods
rcl
stos
push
dec
jge
push
kmovb
neg
xor
scas
cmp
push
js
cmps
(bad)
pop
sti
aas
frstor
and
sbb
movs
push
leave
movs
jnp
movs
movs
and
cmp
mov
mov
mov
or
mov
mov
dec
les
push
sbb
arpl
cmp
loop
xchg
mov
jbe
(bad)
out
cli
movs
nop
mov
push
mov
jecxz
ss
pop
sub
cmp
into
fisub
pop
cmp
fimul
addr16
pop
push
sar
xchg
mov
in
mov
mov
pop
daa
and
xchg
mov
mov
or
mov
std
jno
enter
in
out
rcl
jno
jns
mov
sbb
cmc
add
pop
std
mov
jg
int3
mov
std
xchg
inc
cmp
stos
outs
movntps
push
sti
jns
out
dec
test
ss
push
inc
stos
pop
loope
jg
ja
or
test
fs
dec
mov
fwait
inc
fdiv
dec
pop
inc
push
sbb
sbb
rol
push
or
cmps
scas
cmps
xchg
sbb
mov
cmps
outs
in
jg
jecxz
ins
sbb
push
icebp
xchg
mov
mov
adc
cmp
push
sti
or
mov
sbb
xor
nop
xor
sbb
mov
mov
or
sub
leave
adc
lds
mov
inc
mov
sub
jmp
xlat
(bad)
mov
out
jbe
cwde
loop
dec
mov
sbb
sub
or
add
mov
sub
retf
ret
stc
imul
bound
mov
imul
mov
mov
popf
addr16
lods
idiv
stos
jno
enter
repz
mov
int3
jle
neg
mov
(bad)
mov
stos
xor
pop
data16
les
or
mov
movups
pop
sahf
and
jb
mov
adc
inc
adc
or
xchg
movs
xchg
sub
int
out
ret
jl
cmc
jecxz
and
mov
xchg
and
jb
inc
dec
aaa
xchg
mov
jns
mov
add
mov
stos
shl
mov
pop
sahf
int
pop
lods
add
dec
xor
(bad)
sub
inc
jnp
mov
inc
pop
mov
in
data16
(bad)
das
xchg
push
int
pop
into
cmp
cmp
call
lods
mov
out
cmp
xor
pop
pop
inc
je
lahf
mov
es
shr
int3
push
popf
mov
xor
out
ja
xchg
inc
data16
push
ror
(bad)
fstp
xor
adc
mov
popf
add
adc
mov
fidiv
jl
and
mov
(bad)
xchg
push
stos
outs
pop
xchg
mov
outs
(bad)
cmps
aad
xchg
pop
scas
addr16
(bad)
movs
in
inc
addr16
aam
dec
push
push
jmp
inc
std
cld
popf
jne
push
jp
jne
sbb
mov
mov
mov
retf
mov
jbe
inc
jge
cs
sub
(bad)
retf
xchg
repnz
aaa
mov
test
ret
mov
out
push
push
hlt
leave
xchg
int3
mov
inc
imul
loope
mov
jbe
les
ret
sahf
xchg
lods
imul
test
test
push
jp
dec
cwde
sub
dec
or
xlat
test
arpl
mov
in
or
sub
inc
xchg
mov
outs
in
pop
xchg
mov
js
add
lahf
sbb
dec
out
test
adc
jno
rcl
lea
pop
test
inc
lds
sbb
shl
xchg
mov
gs
cmc
or
and
cmp
outs
popa
fsubp
jnp
xor
sub
fnstenv
adc
popf
lods
inc
inc
cmp
leave
inc
popa
push
retf
xchg
ds
push
mov
out
icebp
push
(bad)
nop
xlat
data16
bound
nop
fstp
xor
jb
push
ss
lods
mov
imul
int
sub
ds
mov
cs
sar
pop
loopne
scas
test
and
leave
fs
add
int3
loope
imul
ins
dec
jle
pop
call
int
daa
(bad)
mov
xchg
(bad)
daa
cmp
xor
int
mov
(bad)
sbb
xchg
fdivr
or
call
sub
cs
in
sbb
cwde
pop
push
data16
pop
xor
xlat
push
in
aaa
movs
cmp
or
retf
fsub
outs
mov
mov
test
sub
in
test
mov
lods
outs
xor
movntq
(bad)
push
test
mov
out
pop
test
ja
fisubr
mov
mov
popf
xlat
push
repz
inc
(bad)
add
fisubr
imul
fs
cmps
cmp
cmps
xchg
retf
aas
push
sahf
jge
call
sahf
pop
pop
inc
aad
aam
mov
cmp
add
jge
ins
fs
in
mul
mov
sti
aaa
lods
or
in
cmp
or
test
icebp
pop
aas
inc
xchg
retf
in
test
leave
push
xchg
cmps
cdq
mov
lods
cmc
imul
xor
fmul
mov
mov
jp
mov
sub
std
inc
movs
leave
and
cdq
sahf
cld
jno
push
pop
dec
ret
cmp
les
or
dec
fcomp
sti
sub
les
mov
into
les
movs
sahf
test
ins
adc
xor
ror
push
fist
xor
fdivr
adc
cdq
sahf
push
leave
pop
xchg
fwait
pop
and
xor
add
mov
fisub
ror
call
dec
nop
loope
jp
icebp
dec
mov
pop
retf
jmp
neg
ret
xchg
mov
loop
aas
dec
pop
xchg
nop
pop
mov
cmp
mov
arpl
jl
fist
test
imul
leave
xlat
mov
or
test
test
js
jno
push
push
test
dec
xchg
or
movs
cld
mov
sbb
and
push
(bad)
cmp
jge
or
aad
inc
out
adc
enter
adc
jne
inc
mov
dec
adc
dec
cdq
cmp
mov
xor
leave
add
ret
mov
sub
mov
pushf
dec
push
test
test
hlt
jo
ror
fisttp
bnd
scas
xchg
mov
pop
xchg
retf
push
cs
cdq
mov
retf
pop
cs
inc
mov
sub
jo
xor
jbe
jmp
std
fld
pop
inc
jl
adc
jg
mov
call
rcl
shl
imul
je
sbb
sahf
push
pop
mov
call
pop
retf
mov
mov
cwde
sub
loop
daa
stos
and
fdivr
imul
adc
sbb
add
pop
test
call
fild
jge
jb
adc
sub
cmp
or
mov
sub
mov
pop
adc
or
xor
ss
jno
adc
imul
nop
fs
enter
adc
shl
push
in
in
and
dec
(bad)
cmp
inc
es
lds
jno
repz
add
imul
and
mov
add
mov
(bad)
out
mov
sbb
jmp
xor
imul
enter
add
aad
inc
ins
int3
inc
out
ins
add
and
sub
imul
pop
imul
pop
icebp
inc
out
xchg
cmp
xor
and
mov
mov
dec
movs
jbe
inc
sbb
sub
dec
push
jo
jge
and
mov
sbb
rcl
mov
cmp
gs
movs
jns
inc
xor
cmps
test
mov
mov
retf
push
scas
sbb
jbe
sub
fisubr
cmp
xor
push
mov
(bad)
fisubr
mov
dec
jbe
mov
xchg
pop
in
or
jb
cmp
ss
inc
jns
xchg
mov
push
stos
jl
xchg
out
(bad)
xor
cmp
daa
xor
push
dec
jecxz
xchg
sbb
movs
push
sbb
pop
inc
imul
xor
push
les
push
adc
add
add
push
or
add
add
add
add
adc
adc
push
add
adc
inc
popa
and
push
bound
xchg
mov
inc
push
rcl
xchg
xchg
mov
loope
xor
pusha
jb
mov
icebp
adc
loop
mov
xchg
mov
add
add
aas
add
in
or
cmps
jp
add
lds
xor
push
mov
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
cld
adc
and
push
push
inc
sub
sub
cmc
xor
xor
(bad)
(bad)
cmp
dec
pop
dec
mov
mov
jno
push
addr16
cmp
dec
xor
and
mov
popf
xchg
gs
rol
scas
jge
fistp
rcr
inc
frstor
xchg
or
mov
test
jae
aad
mov
adc
pushf
mov
push
and
outs
(bad)
out
jle
mov
cmc
int
pop
fistp
lahf
mov
inc
dec
lods
daa
jecxz
loopne
pop
fbstp
jbe
inc
mov
dec
inc
jne
cmp
jp
ret
std
jecxz
loope
les
fwait
out
mov
jae
cmp
push
push
iret
shl
imul
jae
mov
sub
lods
scas
call
adc
outs
call
dec
neg
cld
sub
mov
cmps
mov
cs
lods
out
stos
xchg
jae
sti
(bad)
mov
clc
cmp
aaa
int
jae
cmps
jge
jbe
cmp
out
xchg
mov
outs
int
std
retf
arpl
and
jnp
fcom
cmps
repnz
(bad)
jl
and
loope
leave
xor
inc
mov
sub
xor
push
(bad)
push
pop
sub
push
scas
shl
and
inc
cld
mov
leave
ficomp
xor
mov
ss
sub
adc
ins
dec
mov
mov
in
inc
lods
mov
cld
sbb
mov
mov
push
fsubr
jbe
jnp
jnp
cmp
cmp
push
sbb
adc
test
in
in
or
in
or
in
or
in
dec
sbb
mov
or
ds
inc
jge
sbb
jmp
out
pop
sbb
jno
lahf
xor
xchg
inc
pop
es
mov
add
cwde
push
xchg
in
ja
xchg
movs
fiadd
xchg
ret
retf
mov
mov
dec
cmc
pop
jle
mov
clc
pop
fbstp
js
js
sbb
mov
jge
out
clc
test
sbb
adc
inc
mov
(bad)
and
iret
lds
add
pop
mov
aam
icebp
push
movs
or
dec
icebp
xchg
shr
popa
sbb
mov
retf
sub
xor
iret
mov
sar
pop
aas
and
push
leave
dec
push
inc
test
sbb
pop
add
data16
enter
js
or
or
imul
mov
jle
xchg
rcr
push
in
inc
xor
xor
(bad)
leave
mov
test
fsubp
bound
mov
dec
aad
stos
imul
jp
jge
or
or
dec
into
mov
adc
enter
(bad)
iret
mov
mov
ror
adc
fwait
jbe
adc
adc
push
aaa
out
dec
cwde
dec
sub
frstor
add
xor
jno
fwait
test
stc
out
sbb
out
mov
xchg
jnp
data16
sar
jmp
out
xor
fs
imul
aaa
(bad)
mov
sbb
jp
xor
add
dec
mov
pop
jne
scas
sbb
(bad)
ficom
lods
mov
retf
mov
mov
clc
outs
xchg
ins
push
ret
daa
(bad)
mov
stos
inc
pop
enterw
ss
(bad)
into
mov
nop
out
and
shl
add
mov
mov
dec
cmp
dec
ins
mov
into
xchg
pop
stos
push
sahf
mov
sub
pop
(bad)
aas
fstp
cmp
pop
stos
sete
pop
imul
cld
shl
call
imul
pop
iret
inc
test
mov
jmp
jns
push
std
sbb
ror
retf
sbb
ins
mov
sub
mov
adc
imul
mov
je
pop
add
mov
das
mov
sbb
retf
jle
mov
sub
sbb
ficomp
dec
mul
push
mov
pusha
adc
hlt
ror
add
das
movs
and
push
and
mov
mov
cld
sbb
mov
inc
cmp
dec
pop
(bad)
mov
inc
pop
push
inc
dec
(bad)
mov
cld
ret
lock
mov
pop
jle
and
add
sub
das
stc
mov
fdivr
mov
jo
cld
ret
out
mov
call
loopne
in
fcmovne
outs
jns
imul
and
mov
mov
inc
lods
xchg
inc
and
mov
loop
inc
je
jmp
inc
retf
popf
push
sar
stos
push
dec
pop
das
hlt
xchg
push
sub
or
nop
(bad)
sbb
dec
mov
adc
xor
mov
sahf
test
bound
adc
sbb
xchg
div
(bad)
fprem1
adc
lds
sub
xchg
push
les
jo
adc
in
cmp
adc
clc
test
and
aas
iret
inc
and
retf
mov
adc
and
sub
push
jns
pop
sbb
fdivr
sbb
and
mov
push
(bad)
retf
sar
sub
icebp
rcl
push
(bad)
cwde
das
xor
mov
mov
mov
xor
dec
ja
push
jnp
mov
jl
or
add
in
add
sbb
test
mov
outs
call
mov
adc
add
jle
cld
push
push
pop
(bad)
arpl
pop
pop
cli
out
shl
xlat
or
fcomi
push
mov
aaa
inc
jmp
mov
pop
or
push
jmp
cmp
out
or
sar
daa
test
sti
cmp
out
or
sar
daa
test
ins
mov
xchg
pop
mov
not
jg
fcomi
dec
mov
push
movs
leave
retf
inc
test
xor
call
out
retw
xchg
(bad)
and
jbe
mov
lods
pushf
ret
icebp
int3
dec
outs
rcl
mov
xchg
sahf
imul
push
gs
pop
stc
lds
int
scas
jp
icebp
xchg
in
xchg
stc
push
dec
mov
sar
and
test
sub
imul
dec
cmp
push
out
mov
jmp
call
retf
xchg
stos
rcr
xchg
mov
dec
outs
punpcklwd
dec
bound
mov
out
jl
int
shr
pushf
out
rol
in
inc
enter
mov
call
in
push
sub
mov
rol
pop
cmp
inc
daa
fsubr
pop
add
push
sbb
push
bound
dec
xchg
inc
cmp
imul
scas
and
scas
dec
sbb
es
dec
popa
fsubp
pop
inc
into
fst
movs
or
mov
lods
jmp
sbb
mov
cmp
shl
int3
cmc
sbb
fisubr
ret
mov
outs
adc
adc
je
adc
xchg
pop
fbstp
aad
sub
rcl
cmc
mov
enter
mov
mov
xor
adc
push
dec
sub
jbe
ins
inc
jp
lock
dec
mov
mov
fbstp
pop
mov
fldcw
(bad)
adc
add
xor
xchg
adc
add
adc
fsub
or
xchg
in
bound
dec
leave
popa
or
add
addr16
or
cmps
pushf
outs
shr
retf
mov
bound
push
mov
mov
add
mov
add
cs
scas
jle
pop
dec
or
test
call
test
repz
xchg
mov
int
les
adc
shr
or
xor
inc
movs
sbb
xchg
push
retf
push
das
xchg
fs
pop
mov
gs
inc
mov
jne
sub
cmp
adc
inc
or
imul
xor
aas
mov
inc
out
mov
dec
sbb
cs
les
scas
mov
sub
fldenv
inc
mov
mov
jae
mov
popf
inc
dec
mov
inc
cmps
addr16
push
les
cmp
gs
dec
rcr
push
fsub
and
into
popa
mov
ins
sub
movs
jne
movs
out
and
mov
outs
pusha
clc
scas
dec
imul
mov
xchg
test
rcl
fs
cmp
int
arpl
scas
push
mov
inc
es
xchg
ret
retf
popf
cwde
iret
popa
ja
add
es
in
rol
cwde
mov
cmp
jp
test
sub
sub
or
in
push
pop
add
xchg
in
jne
add
sti
(bad)
pop
fdiv
ins
pop
lea
xchg
sub
mov
cmp
sub
pop
xchg
test
or
mov
push
sub
out
or
(bad)
fs
pop
sbb
inc
xchg
mov
(bad)
dec
lods
lds
loopne
pop
fbstp
fsub
xor
mov
test
xor
xor
add
jp
jns
inc
jl
jnp
jnp
clc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
add
mov
ret
lea
inc
adc
lea
arpl
push
ror
push
dec
fs
mov
xor
xor
adc
push
icebp
inc
mov
leave
mov
(bad)
xchg
dec
enter
xor
sbb
and
pop
or
mov
pop
xchg
fs
test
test
das
pop
xchg
loope
pop
jns
data16
or
daa
fnstcw
call
scas
sub
fld
add
or
add
mov
lea
je
push
outs
dec
xor
daa
inc
and
adc
ficom
xchg
and
sbb
jle
repz
dec
xor
inc
and
movs
retf
add
xchg
xor
add
gs
push
iret
push
xor
mov
sub
xor
inc
dec
sbb
xchg
leave
les
cmp
xchg
repnz
push
retf
sub
cmp
xchg
repnz
push
retf
sub
cmp
mov
jno
and
fcomp
dec
sub
push
punpckldq
sahf
shl
retf
retf
ins
push
sbb
test
idiv
cmps
lods
in
dec
shl
scas
outs
lds
js
int
sbb
mov
mov
adc
inc
out
cmp
mov
ret
(bad)
loope
fistp
jo
mov
sbb
inc
jmp
jl
fdiv
inc
pushf
xchg
push
call
push
cwde
xchg
or
fcom
outs
xchg
push
je
in
mov
adc
pop
outs
rcl
mov
xor
pop
jne
sub
ss
xchg
jmp
scas
ins
or
aad
aam
inc
adc
shl
fisub
adc
aaa
popa
xor
and
mov
pop
jae
(bad)
cmp
test
repz
mov
addr16
loopne
sbb
mov
mov
ins
xor
dec
bound
jnp
retf
fsub
or
mov
icebp
add
inc
(bad)
xor
xor
jg
push
fadd
cmp
dec
jmp
xor
scas
xor
or
sbb
(bad)
fwait
cs
inc
mov
test
aam
xchg
ins
push
mov
je
cmp
mov
int3
lock
mov
mov
sahf
movs
xor
cmp
dec
inc
cmc
pop
scas
int
jmp
scas
outs
add
mov
mov
addr16
scas
dec
xchg
in
ret
aam
mov
pop
xchg
neg
and
jo
sub
scas
dec
ror
dec
adc
ins
shl
(bad)
clc
outs
popa
xchg
imul
sub
adc
inc
dec
jmp
adc
aas
inc
pusha
xchg
mov
pop
int3
and
ret
fs
scas
lods
mov
ror
aas
sub
inc
mov
inc
(bad)
in
mov
imul
push
inc
mov
sub
or
fcom
arpl
cmps
nop
inc
fwait
cmp
repnz
neg
es
retf
add
xor
push
mov
add
(bad)
push
js
div
jmp
sbb
jo
mov
xor
pop
lods
push
in
jmp
xor
arpl
inc
mov
or
fs
mov
rcr
sub
push
mov
adc
pop
sbb
push
rcl
xchg
lods
mov
repz
cmp
mov
ret
aam
mov
scas
outs
call
lahf
mov
mov
les
jg
push
mov
rcpps
sti
mov
mov
and
cmp
lods
outs
out
(bad)
push
pop
ret
xchg
in
xchg
mov
and
cmp
mov
cmp
call
in
movs
inc
imul
out
pop
jae
and
popf
add
inc
and
lods
xchg
inc
pop
daa
adc
push
add
fidiv
fbstp
mov
lds
aam
pusha
movs
mov
xor
(bad)
(bad)
es
test
and
and
leave
sbb
dec
and
inc
jmp
retf
xchg
popf
xor
(bad)
push
mov
ss
mov
lods
inc
adc
addr16
sbb
fwait
scas
or
xchg
xor
xchg
lods
xchg
shl
shl
div
into
mov
xchg
call
retf
movs
pop
fs
xchg
pop
push
bnd
pushf
dec
arpl
or
add
scas
mov
mov
jo
cwde
and
pop
cdq
pop
mov
mov
mov
call
test
int
adc
lock
cmp
inc
out
(bad)
inc
test
pushw
pop
repnz
lahf
sub
add
in
adc
and
push
cmp
or
xor
addr16
sbb
or
mov
test
lea
jne
retf
hlt
out
int3
mov
push
mov
add
sub
mov
add
int3
out
add
mov
inc
cs
cmp
and
rol
imul
ret
cmp
pop
fwait
clc
cmp
aaa
int
jae
jle
leave
aad
sub
data16
fcom
das
shl
mov
cmp
imul
es
jg
nop
mov
fisubr
ror
mov
and
ficomp
repnz
add
and
(bad)
fisubr
push
jecxz
jo
out
mov
or
add
adc
cli
pop
adc
mov
add
shr
add
jb
test
xor
push
dec
sbb
lahf
daa
mov
movs
mov
fdivr
leave
or
retf
xchg
mov
push
js
and
inc
mov
mov
ja
mov
sbb
(bad)
retf
sbb
int3
pop
sbb
inc
cmp
js
adc
xor
xor
sub
mov
cmp
xlat
add
stc
popf
mov
mov
arpl
int3
ss
int3
jmp
and
inc
jbe
test
ins
movs
jbe
push
sub
es
xor
add
ins
rol
gs
xor
push
push
test
mov
cwde
adc
mov
sub
ja
lock
sub
inc
dec
xchg
nop
(bad)
adc
push
enter
int3
or
cmp
mov
sub
mov
loop
sbb
ss
mov
adc
lock
lea
ins
imul
stos
and
cmp
ficomp
rcr
lods
cwde
emms
jnp
jne
ja
daa
hlt
(bad)
lock
jp
sbb
push
mov
add
jl
ficom
out
adc
(bad)
xor
pop
js
neg
inc
mov
rol
outs
iret
inc
fwait
jp
stc
scas
outs
mov
xchg
movs
cmps
mov
das
loopne
adc
jo
fstp
sbb
mov
retf
xor
dec
fnsave
xor
mov
mov
xor
mov
dec
xchg
js
inc
inc
dec
outs
xchg
int
jbe
out
pop
cmp
int
int3
lods
jmp
sub
xchg
cmps
dec
xchg
cwde
xchg
xchg
sub
push
cmp
loop
fs
les
cmp
push
add
adc
rcr
and
add
inc
lods
aad
call
bound
sbb
fisub
mov
push
cdq
enter
cmp
jle
es
ret
(bad)
add
lea
cmps
lds
retf
dec
fstp
dec
and
inc
mov
mov
dec
or
and
sbb
dec
(bad)
sbb
sar
jp
repz
loopne
sub
xchg
fwait
movs
xor
mov
mov
fwait
mov
cs
dec
adc
xchg
adc
or
mov
les
push
test
xchg
lods
inc
jecxz
mov
xchg
in
dec
mov
push
xchg
and
icebp
inc
(bad)
rcl
mov
repz
ss
cdq
adc
jmp
sub
or
div
push
imul
sub
jp
cmp
ins
arpl
scas
aas
sbb
shl
in
push
and
push
xor
pop
mov
(bad)
or
dec
hlt
sti
ins
and
sub
cmp
fdiv
and
xor
mov
shl
repnz
jae
mov
push
cmps
mov
ins
mov
mov
imul
out
retf
push
clc
push
sbb
pop
ss
cmps
stos
gs
pop
mov
lods
ins
push
pop
pop
cmp
mov
sti
out
xchg
xchg
ds
inc
add
mov
inc
mov
mov
(bad)
and
(bad)
call
xor
jne
aaa
sub
inc
pop
add
dec
fcomi
test
cmp
xchg
adc
addr16
rcl
mov
push
inc
mov
or
(bad)
ins
(bad)
lahf
pop
adc
shr
push
sbb
outs
push
stc
ins
inc
leave
jbe
fbstp
sbb
lods
push
inc
sbb
lods
mov
mov
push
cmp
fstp
cmp
add
cmp
retf
jb
imul
jl
fist
add
retf
pop
test
pop
mov
add
lds
inc
push
mov
mov
inc
es
add
mov
pop
jmp
retf
rcl
cmp
jae
xlat
add
mov
repnz
loop
ficom
mov
ffreep
fidivr
xchg
in
push
lock
mov
std
pop
push
(bad)
sti
retf
sbb
cmp
push
stos
ret
popa
pop
and
inc
stc
mov
xchg
loop
sub
cmp
stc
mov
sbb
mov
in
jmp
and
mov
fidiv
retf
mov
ja
shl
mov
xchg
push
cmp
mov
xchg
add
leave
ficomp
ins
push
or
out
xlat
mov
mov
mov
scas
inc
out
in
stc
pushf
nop
fild
aaa
ficomp
push
inc
das
xchg
mov
jne
daa
ins
cmps
in
cwde
inc
or
rcl
jb
arpl
add
xchg
push
adc
cwde
outs
sub
out
dec
arpl
cmp
inc
scas
jo
aam
or
ins
cmp
inc
add
call
inc
pop
xchg
jno
cmp
mov
xchg
mov
daa
xchg
cmp
sbb
xchg
fadd
or
push
push
aas
cmp
lods
inc
ins
jg
lods
movs
jbe
sub
pop
pop
loopne
cmp
lods
ss
sbb
cwde
call
sbb
xor
mov
mov
jmp
out
mov
test
push
gs
fcomp
xchg
pop
add
rol
mov
cmp
push
lds
mov
nop
repz
nop
xchg
sbb
movs
sbb
leave
adc
add
push
mov
cmps
mul
sbb
(bad)
rol
mov
pop
neg
adc
rcr
jns
scas
jge
cld
fidiv
aaa
int
jae
mov
inc
inc
cmc
xchg
mov
pop
jmp
push
xchg
iret
leave
jnp
pop
imul
bound
stc
pusha
mov
arpl
imul
cmc
mov
fcomp
into
xor
ficom
pop
xor
push
ror
jecxz
jnp
pop
repnz
stos
shl
dec
xchg
ja
jg
inc
jo
test
js
mov
and
or
jo
leave
pop
and
sbb
pushf
or
push
setb
xor
pop
call
loope
arpl
mov
test
jbe
dec
xor
pop
das
call
jae
or
adc
cmp
push
ret
add
adc
cwde
adc
pusha
dec
or
cwde
adc
pusha
dec
or
pop
rcl
pusha
dec
or
push
ret
xor
sub
add
xlat
add
pusha
lods
xchg
pop
cld
js
outs
pop
fbstp
repnz
adc
sub
outs
or
jecxz
repnz
mov
cld
mov
fadd
mov
out
int
fndisi(8087
jmp
int
mov
mov
push
push
stos
scas
sub
aam
ja
xor
rol
mov
cmp
mov
dec
retf
jle
mov
fs
or
jl
mov
in
xchg
cmp
cmp
popa
lds
jo
xor
add
xchg
ss
xor
jo
stc
xor
adc
mov
cdq
add
sbb
je
cwde
ins
std
and
jmp
mov
push
(bad)
jle
dec
test
sti
or
hlt
out
adc
bnd
push
mov
mov
pop
push
push
inc
sbb
mov
icebp
loope
fwait
push
clc
cli
mov
cmc
mov
int
pop
fmul
xchg
and
push
fsubr
jns
mov
mov
push
push
jle
and
and
jmp
add
fwait
icebp
push
mov
je
(bad)
add
inc
not
and
add
xchg
add
clc
jle
mov
sti
out
cmp
es
ss
out
inc
jnp
inc
pop
sub
push
pop
push
je
fs
rcr
lds
loopne
and
push
push
rcr
pop
jg
std
sbb
jmp
popa
mov
xor
mov
leave
sbb
stc
stos
fdivr
add
adc
push
and
test
jle
pop
out
outs
pop
fbstp
pushf
jnp
(bad)
adc
mov
inc
mul
in
dec
cmp
jbe
cvtdq2ps
shl
push
inc
cmp
fmul
adc
(bad)
repz
arpl
or
jo
lods
pop
and
stc
mov
jae
xlat
aaa
cmc
sbb
cmp
fdiv
das
or
xor
jae
adc
ins
add
pop
std
jmp
mov
xlat
movs
pusha
jge
inc
mov
xchg
add
cmps
dec
cmc
das
(bad)
cmc
jmp
std
jmp
cdq
aaa
aad
sti
xlat
movs
xor
jg
das
dec
in
inc
inc
adc
popa
mov
sub
add
xor
mov
inc
push
in
pop
popf
enter
lea
push
js
pushf
hlt
jns
pop
fs
sbb
lock
fs
lea
dec
daa
sub
sti
(bad)
or
into
jge
sbb
stos
lock
or
stc
scas
outs
jmp
fdiv
jnp
mov
(bad)
push
push
cmp
xlat
jb
cmc
sub
dec
push
dec
mov
cmp
push
rcl
jbe
shl
leave
pop
mul
jge
dec
int
and
mov
xchg
cli
cmp
xor
xchg
or
int
add
iret
clc
add
jo
pushf
jmp
inc
retf
sbb
in
sbb
adc
mov
adc
shl
xchg
add
mov
lods
cmp
pop
aaa
pop
sbb
enter
add
dec
(bad)
aas
aaa
int
push
and
jmp
fdiv
jnp
mov
clc
pushf
loop
xor
cli
push
gs
movs
xchg
arpl
xor
pop
imul
stc
inc
or
sbb
sbb
xchg
add
clc
jns
sbb
imul
and
xchg
mov
push
mov
jb
or
add
fldenv
movs
pop
adc
mov
push
push
call
or
lods
daa
cmp
mov
mov
out
xchg
ss
test
and
add
adc
mov
adc
inc
jle
push
int
test
scas
sub
jne
pop
retf
xor
lods
add
pop
adc
stos
loop
repnz
(bad)
retf
adc
sub
outs
jmp
fdiv
jnp
mov
hlt
mov
imul
ss
jnp
jnp
call
fistp
cmp
es
add
xor
mov
mov
hlt
(bad)
mov
call
jbe
inc
hlt
sbb
sbb
pop
pop
out
add
jmp
enter
movs
xchg
mov
cli
and
fisttp
and
leave
sub
ins
mov
ja
pop
jb
inc
pop
sbb
imul
adc
mov
mov
outs
clc
(bad)
and
adc
adc
inc
rcr
ds
sub
pop
lods
sub
js
shl
xchg
mov
or
lods
pushf
call
inc
ins
aam
sbb
xchg
mov
xchg
outs
push
pop
fbstp
inc
jle
jbe
cvtdq2ps
rcr
jle
and
loopne
xor
cmp
add
sbb
fisttp
sbb
cmp
clc
out
cmp
sub
xor
push
sub
cli
xor
out
test
shl
leave
cmc
and
pop
inc
lds
rcl
bound
mov
mov
jns
push
mov
movs
mov
repz
or
xor
pop
lock
sbb
int
dec
test
ret
(bad)
loope
fistp
retw
cmp
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
retf
outs
clc
xchg
xchg
fbstp
and
mul
mov
ret
mov
adc
xchg
pushf
call
retf
inc
ins
cmp
xor
jle
sbb
pop
int
jae
aam
dec
xchg
cmp
jo
mov
call
nop
rcr
or
fistp
inc
cmp
mov
test
xchg
pusha
ret
mov
es
inc
fwait
adc
rcl
(bad)
fidiv
mov
mov
mul
shl
push
pop
repz
sub
fwait
dec
push
pop
outs
sbb
jnp
jnp
clc
jp
xor
mov
repnz
idiv
xchg
test
in
push
xchg
ins
or
and
lods
jl
push
popa
mov
push
stos
retf
outs
and
mov
stos
or
pop
fs
ss
dec
pop
repz
je
shr
sahf
movs
mov
lds
mov
hlt
out
push
mov
in
sbb
jns
out
jnp
(bad)
je
push
cmp
(bad)
jmp
xchg
jns
fimul
rcr
sub
or
and
out
pop
add
dec
scas
call
rcr
cdq
push
loope
int
fndisi(8087
jmp
xor
adc
fbstp
or
imul
mov
dec
and
mov
lea
push
and
or
dec
mov
pop
test
or
dec
(bad)
sbb
data16
adc
sub
pop
dec
fmul
xor
dec
ret
out
add
or
pusha
xchg
pop
das
and
mov
das
push
mov
add
cmp
mov
adc
jbe
cmps
dec
jmp
fwait
movs
xchg
mov
imul
test
movd
fisttp
pop
je
push
outs
cmc
out
mov
sbb
cs
jle
add
in
jbe
test
fsub
or
outs
popf
rcr
push
adc
test
out
mov
dec
mov
push
or
jnp
mov
aam
in
ins
icebp
and
ins
xchg
sbb
jecxz
int3
js
(bad)
lds
scas
xor
(bad)
mov
or
jne
ror
inc
jno
aam
clc
dec
cmps
mov
aaa
sub
fisub
imul
cmc
mov
fistp
push
cmp
xchg
mov
add
xor
fcmovbe
or
mov
jno
xor
(bad)
repz
push
(bad)
outs
loopne
dec
popf
aam
inc
jg
sub
nop
loopne
mov
add
ins
ins
pop
fisttp
mov
fiadd
xor
scas
popa
mov
sti
or
inc
inc
hlt
or
(bad)
rcr
sub
mov
adc
test
and
pushf
pop
cmp
in
inc
xchg
cmps
pop
test
dec
cmp
adc
movs
lock
cmp
sbb
das
and
mov
aas
add
mov
push
add
add
jmp
inc
fiadd
fs
addr16
jb
dec
pop
mov
rcr
jp
out
shr
les
cmps
adc
jb
adc
scas
adc
clc
les
cdq
sub
mov
or
cdq
aaa
dec
loop
pop
dec
sbb
ins
retf
cmp
inc
push
pop
push
cmp
xchg
ret
mov
push
repz
push
mov
pop
mov
jg
pop
fistp
push
mov
rcr
int
inc
out
test
je
retf
mov
je
mov
(bad)
jmp
iret
jae
cs
xchg
arpl
mov
jnp
clc
jp
xor
mov
and
adc
xchg
jb
ficomp
ins
add
inc
cmp
leave
les
mov
cmp
(bad)
test
arpl
mov
int3
retf
pop
ret
call
stos
adc
xor
sbb
lahf
dec
sub
add
mov
in
jbe
call
and
dec
push
or
jb
js
aad
add
hlt
test
in
loope
nop
test
ror
inc
sbb
and
fsubr
hlt
into
in
and
rcl
jbe
mov
push
push
fmul
cmp
mov
inc
fmul
mov
popa
dec
adc
pop
shl
sbb
rol
imul
cmc
mov
(bad)
sbb
mov
outs
inc
push
(bad)
fstp
retf
fs
mov
sub
inc
fnstenv
dec
mov
push
fidiv
dec
sub
add
repz
xlat
mov
test
sub
mov
test
(bad)
mul
dec
xchg
jge
pop
(bad)
or
mov
aaa
jne
mov
mov
dec
jmp
wbinvd
test
ss
repz
ja
sbb
cmps
rol
imul
cmc
mov
out
cmp
inc
outs
push
out
cli
int3
jae
mov
adc
aam
in
cmps
xchg
shl
sub
cmp
imul
mov
imul
mov
imul
dec
(bad)
in
cmp
imul
cmps
out
out
fsub
dec
push
sub
cdq
mov
mov
dec
jp
popf
fs
scas
test
(bad)
outs
push
fnstsw
fistp
loope
fistp
jg
popa
jmp
pop
or
mov
loopne
cwde
cmps
adc
push
sub
sahf
adc
push
icebp
aam
jle
lods
add
pop
sar
imul
sbb
xor
scas
sbb
imul
push
(bad)
shl
js
jnp
out
int
fndisi(8087
jmp
daa
(bad)
aaa
mov
out
test
pop
ret
cmc
cmp
or
stc
lods
sbb
lahf
gs
xchg
shr
rcr
neg
outs
push
pop
add
dec
pop
ins
pop
jae
inc
xchg
xchg
popf
xlat
pusha
cdq
push
les
add
adc
inc
push
push
int3
push
fiadd
(bad)
retf
(bad)
push
cmp
dec
lock
je
dec
ja
push
or
sub
mov
lahf
jle
jbe
cvtdq2ps
cmp
push
hlt
test
cmp
xor
cmp
and
jno
ja
aam
shr
fwait
scas
(bad)
push
ins
out
pop
stc
cmps
cmp
dec
and
stos
jge
sbb
pushf
inc
or
and
imul
xor
dec
sbb
outs
inc
cmp
push
scas
sub
fmul
test
aam
cmp
in
fist
push
jnp
push
xchg
imul
shr
pop
push
fisttp
mov
and
mov
mov
stc
and
popf
cdq
fisttp
imul
xchg
(bad)
xor
rol
push
js
inc
or
jnp
pop
lods
pop
mov
ds
sub
loop
sub
pop
les
shl
push
inc
mov
cmp
adc
cmp
inc
mov
int3
mov
lahf
pop
push
fst
sub
xchg
lods
fistp
repnz
mov
outs
mov
jle
xchg
cmp
cmp
int
loope
xor
cdq
mov
(bad)
ror
in
cmp
jno
mov
jmp
cmp
popa
add
xchg
icebp
std
popf
retf
inc
dec
outs
push
xchg
push
cmc
arpl
push
xchg
stos
test
jge
lods
xor
imul
test
dec
push
hlt
sub
int
adc
ja
jo
test
das
in
mov
xor
repnz
mov
out
loope
dec
out
pop
or
push
mov
std
adc
lock
bound
pop
test
sub
js
jno
mov
cmp
pop
or
jp
mov
(bad)
cmp
cs
add
inc
fwait
jnp
shl
push
imul
or
stos
(bad)
out
ins
lock
mov
stos
test
inc
cmc
sub
sub
and
loope
call
xchg
fcmovnbe
icebp
shr
push
iret
bound
pop
dec
and
xor
icebp
aaa
mov
dec
or
or
xchg
or
(bad)
std
mov
mov
jae
outs
adc
lahf
mov
mov
cmp
lea
cmp
out
loop
gs
cmc
jl
ret
inc
test
ret
aam
lds
pop
and
sub
inc
and
rcl
and
push
inc
jno
adc
xchg
push
mov
popf
and
sub
imul
lahf
popa
xchg
cs
sub
mov
addps
xor
pop
imul
imul
aam
dec
repz
dec
fidiv
(bad)
inc
popa
mov
cmp
xchg
mov
xchg
sti
dec
fcmovnbe
scas
sbb
mov
popf
ins
scas
lds
icebp
loopne
into
call
lods
fild
jp
xchg
jne
cmp
fstp
shl
mov
cli
inc
cs
scas
pop
iret
sti
mov
fdiv
xor
fdiv
gs
cdq
scas
xor
cmp
enter
push
adc
rcl
fwait
lds
or
pop
je
adc
jmp
fimul
bound
cmp
and
jmp
xor
movs
lock
mov
retf
shr
stos
xor
add
lock
adc
cmps
mov
repz
cmp
ror
imul
fwait
sbb
push
mov
mov
add
lahf
arpl
fimul
cwde
mov
(bad)
adc
pop
add
shr
iret
mov
xchg
ret
mov
sub
adc
icebp
je
(bad)
jecxz
push
mov
lods
mov
test
mov
out
js
ret
sub
call
pusha
rcl
lods
mov
or
test
mov
pusha
fild
add
pop
test
push
mov
addr16
scas
popf
popf
imul
mov
sbb
dec
cmps
cwde
iret
gs
sbb
ret
cmp
cmp
sub
mov
cmps
adc
pushf
push
dec
(bad)
aad
mov
add
mov
leave
cmp
leave
loope
push
jnp
inc
mov
mov
pusha
push
add
dec
push
sub
rol
inc
adc
outs
jg
pop
push
daa
int3
sub
xchg
xchg
cs
out
sbb
addps
(bad)
mov
dec
lahf
imul
xchg
mov
cmp
or
cmp
inc
stos
(bad)
out
ins
lock
mov
cmp
ss
les
push
adc
into
aas
mov
mov
push
ja
cmp
mov
(bad)
and
dec
add
mov
std
and
sti
mov
div
in
pop
xor
and
out
repnz
mov
test
aam
and
jmp
sub
add
pop
dec
fsub
push
sbb
push
iret
cmc
adc
cmps
daa
daa
and
xor
repz
cld
adc
imul
cs
mov
fstp
ins
js
imul
lods
pop
loopne
mov
xchg
or
lods
pop
mov
inc
mov
pop
and
test
sub
rcl
mov
pop
loop
lods
push
loope
add
(bad)
fld
aam
fcomp
jns
scas
int3
shl
and
xchg
pop
es
xchg
lahf
mov
out
cmp
inc
adc
pushf
adc
fcmovne
push
jae
retf
into
aaa
xchg
ror
pop
xor
mov
enter
cs
loop
sub
popf
inc
adc
push
sbb
adc
mov
bound
jp
shl
lds
test
mov
dec
jno
push
jbe
or
stc
push
cmps
mov
cmc
xchg
ss
dec
mov
adc
push
inc
cmp
dec
test
mov
outs
dec
adc
rcr
dec
hlt
test
nop
mov
sub
test
xor
adc
lock
fsub
lahf
fsub
fadd
mul
inc
cli
enter
jecxz
add
cld
aam
jecxz
loope
and
adc
xchg
repnz
bound
xchg
adc
cmp
cs
daa
or
ret
sbb
add
lock
in
sub
in
and
mov
xchg
ror
scas
dec
cwde
pop
lods
(bad)
and
lahf
xchg
or
mov
and
jb
pusha
cmc
mov
fstp
jnp
pushf
shl
and
imul
in
ss
daa
bound
fst
jmp
fs
add
int3
mov
mul
xor
sbb
aam
lods
mov
mov
pop
mov
aad
pop
loopne
movs
dec
gs
outs
inc
push
adc
mov
sub
cmps
jp
inc
jg
push
daa
push
mov
jbe
xchg
xchg
push
dec
or
xchg
adc
(bad)
push
jo
cmp
call
xor
sub
aam
sahf
sbb
mov
xchg
mov
lods
adc
jae
adc
inc
adc
pop
jge
test
jmp
xor
lea
inc
ins
mov
cmc
xchg
ds
or
cdq
mov
scas
jl
mov
leave
add
mov
push
adc
icebp
aaa
cmp
rcr
jb
xchg
adc
sar
mul
xor
fnstcw
mov
jge
pop
cs
mov
jle
dec
jbe
sub
dec
cmp
out
cs
jae
loope
sbb
cwde
mov
repnz
mov
retf
nop
cmp
jo
aam
mov
dec
push
adc
stos
imul
xchg
lds
scas
mov
mov
ss
pop
imul
push
inc
daa
int
add
sti
data16
lods
mov
mov
sahf
sub
fstp
imul
dec
fnsave
stos
aaa
stos
rol
fsub
sbb
push
push
sbb
mov
add
aaa
push
xchg
not
xchg
mov
xchg
inc
fsubr
in
mov
sbb
into
pop
outs
push
sbb
inc
outs
mov
cmp
mov
adc
xor
inc
jp
sbb
call
xchg
mov
dec
jmp
adc
cwde
add
cdq
(bad)
push
adc
jecxz
(bad)
fisub
jnp
inc
mov
add
cwde
pop
cld
pop
out
movs
aaa
cmps
mov
and
test
ret
cmp
push
mov
jne
les
adc
and
dec
cmp
or
jb
mov
xchg
cmp
test
push
inc
fs
mov
mov
popa
scas
add
adc
call
or
(bad)
leave
in
ins
mov
cmc
or
mov
push
imul
(bad)
xchg
sahf
and
push
mov
loop
xchg
pushf
sub
sub
(bad)
push
or
push
mov
dec
je
in
dec
xor
adc
sbb
mov
out
or
lahf
mov
test
cs
out
dec
push
das
leave
(bad)
in
shr
cs
loopne
test
lds
jbe
sbb
mov
and
adc
fimul
sbb
and
jl
sahf
sub
sbb
mov
out
loop
add
pop
and
mov
xor
pop
daa
cmp
fiadd
jno
mov
rcl
xor
dec
test
rcr
jmp
movs
sbb
xchg
popf
xor
mov
jge
mov
ja
rsqrtps
inc
je
call
pop
xchg
lods
jo
mov
cmps
outs
shl
sub
mov
aaa
dec
push
pop
leave
fnstsw
and
adc
xor
sahf
std
jmp
xchg
cdq
imul
rcr
test
and
xchg
pop
push
movs
push
in
daa
ja
xor
leave
mov
sub
pop
(bad)
js
out
arpl
cmps
and
jg
cdq
xchg
jae
dec
call
nop
adc
inc
jecxz
gs
dec
pushf
clc
popf
sbb
adc
es
rep
mov
mov
loope
and
mov
iret
repnz
loopne
fs
and
jno
mov
mov
pushf
cmps
xlat
jp
dec
jns
int3
cmc
imul
gs
ret
(bad)
ret
inc
lods
xor
scas
jo
sub
and
cmp
xor
jb
mov
and
clc
sub
mov
in
jb
xchg
cs
sub
mov
in
adc
lds
js
fsubrp
sahf
sbb
inc
mov
add
and
and
pushf
stos
test
or
loope
or
xor
jnp
test
sbb
shl
and
push
inc
not
fbld
clc
leave
inc
jnp
mov
cmp
fist
sub
mov
(bad)
cmps
shl
inc
sbb
sub
push
push
jbe
or
inc
xor
add
(bad)
out
sub
out
(bad)
sub
icebp
push
jb
push
push
scas
cmps
repnz
pop
icebp
(bad)
xor
xor
adc
xor
pusha
mov
adc
loope
test
push
pop
push
stos
ja
mov
cmp
jbe
shr
ficom
fidiv
and
add
leave
dec
mov
pop
pop
fsubr
push
lock
xor
(bad)
in
push
add
pushf
mov
cmp
add
jno
mov
daa
xchg
jmp
and
jnp
in
mov
jmp
jb
mov
xchg
rcl
loopne
pop
push
cmps
dec
sbb
jl
aas
inc
fild
movs
fild
cli
cs
das
pop
jl
cmp
jle
ffree
loopne
sub
popa
xchg
mov
lods
movs
push
rcl
adc
lahf
shl
dec
call
sbb
aad
pop
add
inc
cdq
and
mov
(bad)
out
push
sbb
pushf
push
test
mov
mov
nop
dec
shr
push
test
sbb
dec
cmp
push
cld
in
jno
ror
pop
fs
cmp
pop
pop
dec
aad
inc
xchg
icebp
sub
and
jb
cmp
(bad)
hlt
adc
call
cmp
loop
fisttp
and
cmps
call
sbb
int
mov
out
xor
lea
test
jnp
or
or
adc
push
rcl
sub
jmp
and
jb
bound
mov
mov
ja
sbb
push
adc
xchg
sub
fs
in
sysexit
mov
xchg
cmp
jb
add
sub
add
mov
imul
loopne
dec
cld
mov
cmps
bound
cwde
popf
or
add
jecxz
add
lea
sbb
inc
psubb
cli
pop
lock
push
inc
int
add
shl
fcomip
pop
push
cli
mov
push
push
std
psubb
cli
pop
lock
hlt
mov
cmp
retf
test
mov
xor
lea
xchg
jo
pop
sub
xchg
js
outs
in
loopne
dec
push
mov
or
sub
inc
xchg
imul
push
in
inc
jbe
sub
push
rcl
fs
test
fsub
sbb
dec
dec
shl
call
and
sub
mov
mov
jb
enter
outs
adc
mov
add
cmp
jg
jbe
mov
lock
sbb
scas
es
dec
push
aaa
jne
ins
pop
test
xchg
mov
or
in
dec
popf
mov
in
cmp
fisttp
cs
add
aaa
stos
aam
enter
mov
imul
push
mov
enter
fsubr
cmc
test
adc
aaa
or
lods
retf
imul
adc
iret
adc
jb
and
addps
fiadd
in
cmp
jno
test
mov
jns
ins
sbb
sbb
sbb
dec
ins
mov
(bad)
rcl
rcr
mov
jns
cli
inc
jns
xor
mov
sbb
push
xchg
mov
mov
ins
in
or
ja
or
xchg
sbb
cwde
out
(bad)
cmps
xchg
(bad)
push
or
outs
mov
push
and
nop
push
pop
add
cmps
test
out
inc
movs
pand
je
push
aas
pop
je
pop
int
fwait
outs
push
mov
cmps
mov
xchg
arpl
push
lods
pushf
dec
push
sbb
xor
inc
out
mov
iret
in
mov
and
jecxz
mov
movs
ins
add
mov
mov
pop
jne
fist
jbe
push
xchg
repz
inc
mov
sub
lea
jge
aas
inc
iret
imul
jecxz
outs
mov
dec
cs
movs
retf
data16
sbb
add
cmp
add
sub
shl
sub
lods
pop
mov
mov
and
mov
xor
mov
pushf
(bad)
(bad)
mov
or
inc
cmp
cmp
or
fidiv
jae
sbb
mov
shr
ja
xchg
and
cdq
out
ja
sub
cmp
pop
hlt
adc
inc
jge
not
test
not
inc
jg
fild
xchg
shl
ret
add
icebp
loopne
xor
add
mov
cmp
adc
push
or
or
mov
inc
dec
xor
enter
dec
add
sbb
jae
leave
or
sub
test
jns
mov
cmp
mov
enter
es
add
jmp
adc
rcr
es
out
add
add
mov
sub
cli
cs
sub
inc
inc
cmps
xchg
sbb
mov
jge
xchg
lock
lahf
hlt
dec
rol
repnz
push
sub
sub
push
xor
pop
dec
push
clc
lods
pop
mov
js
push
xchg
or
lods
pop
mov
push
push
push
stos
mov
jmp
jne
shr
sub
mov
mov
xchg
or
(bad)
(bad)
xchg
pop
push
push
sbb
cmp
ds
mov
sti
lods
sub
dec
add
out
xchg
syscall
xchg
mov
inc
js
mov
mov
call
scas
mov
and
sahf
inc
mov
pushf
out
ffreep
inc
ja
loopne
mov
push
lds
into
inc
retf
ss
leave
mov
xchg
cmp
in
shr
jmp
scas
ret
ss
cmp
stos
pop
jbe
cmp
cmp
push
or
cdq
pop
rcr
sbb
jl
or
pop
and
clc
mov
into
cmp
adc
shl
or
pop
jge
push
or
cmps
dec
push
es
jno
fnstenv
jp
fwait
lods
mov
sbb
inc
pop
sub
out
int3
stc
add
test
inc
xor
and
rol
sbb
adc
push
dec
xlat
xchg
ds
daa
xchg
xchg
in
cmp
inc
jecxz
mov
in
or
iret
pop
mov
cs
retf
lods
xor
scas
add
neg
xchg
pusha
lods
movs
into
cmp
daa
test
adc
sahf
shl
aam
xor
mov
in
out
or
pop
retf
hlt
push
xor
stos
sub
or
jb
mov
test
cli
imul
adc
js
adc
pop
inc
call
jle
dec
(bad)
jne
adc
in
jbe
or
or
nop
(bad)
cdq
clc
sub
pop
rcr
in
dec
adc
fld
movs
adc
fs
push
in
pop
adc
fcmovnb
scas
or
mov
shl
sub
clc
daa
xor
and
mov
and
jmp
mov
add
push
mov
push
dec
fst
lock
popa
push
lahf
clc
sub
jg
lock
popa
std
aas
rol
inc
add
adc
inc
mov
jno
mov
push
sahf
call
fs
inc
xor
inc
cwde
sahf
pop
sub
inc
dec
lods
mov
or
imul
enter
es
cld
adc
pop
pop
clc
es
xchg
cli
lahf
and
lahf
and
lahf
sub
lahf
sub
cmc
jg
fcomp
pushf
jg
cld
adc
jl
cmps
mov
cmc
lahf
adc
sbb
pop
aaa
dec
push
xchg
cmp
pop
dec
lock
pop
cmps
clc
and
jmp
fistp
dec
mov
cs
movs
dec
loopne
inc
push
or
sahf
sbb
shl
inc
sub
imul
call
jnp
mov
pop
pop
sub
cwde
mov
jbe
stos
xor
push
mov
jnp
jmp
cs
pop
xchg
jno
fnstenv
cdq
cmp
es
and
jmp
mov
sub
movs
sahf
imul
ja
add
cmp
cmps
mov
cli
rcl
rol
sub
or
fsub
lds
pop
add
and
dec
je
add
gs
add
adc
data16
cmp
lods
xchg
push
pushf
xor
adc
xchg
add
inc
push
sahf
in
adc
mov
or
adc
bound
nop
mov
mov
shl
jae
pop
mov
or
lds
cmp
das
(bad)
aaa
pop
jns
and
push
xchg
xchg
cmp
shl
pushf
outs
dec
adc
in
add
push
pop
xor
mov
push
push
sbb
push
pop
sub
stc
int
pop
dec
add
cdq
cmp
xchg
add
shr
mov
push
mov
mov
sti
or
pop
retf
mov
aas
not
shr
pop
cmp
dec
and
mov
in
push
and
test
pop
dec
je
add
or
cmps
sub
retf
mov
push
xor
add
jl
and
mov
push
pop
or
mov
sub
ficom
fisubr
mov
adc
je
lahf
or
imul
(bad)
mov
sub
fild
sahf
mov
dec
add
aas
aam
add
inc
sar
mov
call
lds
push
and
ins
lods
pop
bound
cmp
ss
aam
shl
lea
cmp
sbb
sub
push
add
lods
retf
push
(bad)
bound
xor
mov
dec
mov
rcr
cdq
fidiv
xchg
sbb
fiadd
test
and
xchg
add
mov
sub
pop
mov
mov
and
lea
sub
mov
xor
rcr
push
dec
push
dec
adc
call
sbb
fs
lahf
dec
popa
pusha
fbstp
or
add
nop
pushf
idiv
add
loopne
in
mov
lds
mov
pop
adc
sub
mov
rcr
retf
ret
xor
popa
pop
outs
pop
outs
aad
mov
cdq
sub
shl
dec
xchg
xchg
data16
daa
dec
out
test
ins
cmp
mov
lds
fldenv
inc
icebp
jg
mov
cdq
push
outs
mov
pop
inc
pop
dec
popa
jle
dec
jmp
inc
nop
(bad)
les
inc
xchg
enter
mov
jbe
sbb
xchg
aaa
out
cwde
push
jb
movs
int3
aad
rol
sbb
cmp
mov
in
sub
aaa
popa
inc
xchg
push
xchg
cli
stos
pop
mov
cmc
add
cmp
shr
add
dec
lods
cli
ins
clc
lods
sbb
shl
adc
loop
mov
sbb
mov
(bad)
push
push
lea
fs
fld
jl
dec
cmp
inc
mov
xor
(bad)
sbb
pop
or
imul
push
les
sub
or
jmp
mov
jle
xor
js
jnp
jmp
push
hlt
das
pop
cmp
pop
mov
cmp
les
fiadd
lea
call
ficomp
data16
mov
or
fmul
or
mov
dec
sub
adc
(bad)
bound
mov
xchg
push
sahf
hlt
data16
or
pop
lods
imul
das
imul
icebp
cmps
fld
mov
imul
sar
cmps
cmp
leave
into
out
dec
jb
hlt
out
mov
pop
inc
(bad)
mov
call
pop
daa
ds
repz
lods
shl
fdivr
sub
int
xor
xor
pop
add
dec
lahf
add
fistp
sub
ss
xchg
in
addr16
jmp
push
pop
xchg
xor
and
das
dec
outs
(bad)
(bad)
mov
lods
ss
inc
sub
cmp
sub
xor
pop
xchg
jmp
data16
xchg
in
retf
idiv
sbb
imul
sub
inc
dec
retf
cmp
xchg
mov
pop
clc
mov
adc
cdq
into
push
ret
lods
ss
loop
repz
jns
xchg
jg
in
jno
mov
cdq
inc
jne
retf
icebp
xchg
or
mov
push
gs
pop
clc
sub
data16
sub
jl
in
stos
mov
adc
call
cs
dec
sar
icebp
push
jg
sti
nop
popa
mov
fistp
cmps
inc
nop
out
out
dec
xchg
sti
mov
mov
mov
(bad)
call
cmp
ins
sbb
clc
cmps
push
aaa
daa
ja
(bad)
adc
popf
adc
dec
je
popf
enter
in
adc
xor
scas
test
pop
mov
out
outs
inc
inc
add
loop
inc
or
sbb
dec
nop
xchg
lods
mov
add
fsubr
push
mov
xchg
pop
push
pusha
and
add
loop
sbb
dec
dec
dec
or
cmps
mov
cmp
adc
and
sub
ja
inc
out
jb
add
cmp
ficomp
(bad)
loop
pop
out
xchg
jbe
pusha
outs
loopne
mov
das
inc
add
adc
add
add
add
add
add
add
add
add
add
and
inc
push
popa
adc
mov
rcl
icebp
xor
fiadd
or
add
add
adc
pop
sub
adc
inc
mov
(bad)
lock
scas
shr
or
(bad)
icebp
or
sbb
add
add
loopne
push
cld
push
sub
pop
jne
pop
mov
push
sbb
add
es
mov
adc
in
xchg
and
leave
lea
fsub
mov
sub
jo
cmp
int3
mov
hlt
cmc
xchg
or
and
mov
sbb
adc
scas
sbb
sbb
aas
adc
cld
movups
mov
inc
mov
and
lock
adc
jge
aam
jb
jge
clc
sbb
pop
push
cmp
cmp
loope
adc
or
sbb
push
sub
cwde
jns
sbb
dec
les
int3
adc
inc
or
mov
pop
push
(bad)
sti
iret
xchg
inc
mov
ins
(bad)
jl
mov
xchg
jb
mov
cli
arpl
shl
lock
mov
mov
and
mov
dec
cmp
inc
clc
dec
shl
jmp
(bad)
mov
cmps
test
daa
popa
sub
rol
loopne
dec
or
add
and
jmp
jmp
mov
sub
scas
dec
stc
and
jmp
jle
frstor
icebp
cmp
jp
out
adc
adc
xlat
and
and
into
lods
neg
je
add
jg
cld
lahf
cmc
xchg
(bad)
loopne
pop
(bad)
inc
mov
mov
adc
mov
mov
inc
std
retf
out
and
inc
scas
adc
ja
sti
adc
rol
imul
pop
pop
outs
stos
(bad)
xchg
dec
push
mov
cmp
in
mov
jle
loop
loopne
loop
loopne
loop
inc
les
lock
cmp
add
cld
lsl
sub
add
add
mov
adc
adc
je
fsubr
dec
xchg
lock
test
add
cmp
mov
cwde
das
(bad)
dec
mov
std
add
xchg
mov
daa
in
fbstp
cli
and
adc
ds
xchg
std
pusha
mov
pop
inc
sti
or
mov
popa
dec
mov
xor
jecxz
xchg
or
mov
adc
outs
shr
sub
das
(bad)
lock
or
add
add
test
shr
or
or
adc
add
scas
les
push
sbb
aam
pop
clc
and
push
cmp
push
add
sub
dec
lock
mov
in
push
inc
cmp
xor
leave
addr16
movs
test
or
xlat
mov
mov
xchg
leave
fcmovnbe
push
inc
cmp
and
jmp
jmp
xlat
pop
jne
sbb
pop
and
shl
icebp
scas
adc
pop
add
pop
stc
add
pop
and
add
add
xchg
pop
push
and
inc
adc
js
or
mov
push
jl
mov
sahf
cmp
mov
pop
xor
call
(bad)
clc
cli
mov
pop
test
stos
mov
in
fucomip
cmc
adc
and
jmp
fiadd
sbb
jnp
push
and
jle
pop
pop
loop
lsl
das
icebp
scas
enter
repnz
push
mov
shr
or
add
push
inc
xchg
mov
cdq
push
enter
dec
cmp
hlt
jmp
mov
clc
jl
cmc
and
pusha
je
or
or
leave
jno
inc
and
jp
(bad)
adc
popa
add
lea
inc
gs
cmp
ret
das
shr
das
shl
lock
cmp
inc
adc
lock
mov
adc
inc
sti
ds
mov
cmp
push
dec
into
mov
xchg
fiadd
jle
ror
loopne
in
les
adc
(bad)
into
nop
add
sbb
push
gs
clc
ins
std
add
add
push
loope
dec
inc
jo
and
test
xchg
loopne
loop
loopne
add
sub
icebp
dec
lock
adc
jg
inc
cld
add
mov
push
in
sub
push
mov
mov
jg
xchg
jmp
jmp
ja
mov
into
xchg
inc
or
push
jle
aaa
xchg
xlat
jbe
mov
push
mov
jge
enter
cmp
dec
xchg
inc
cmp
ret
dec
fld
sar
retf
fs
jae
jl
or
jmp
outs
iret
sbb
push
daa
mov
loop
and
jg
fild
mov
xlat
loopne
inc
lds
pop
scas
adc
and
(bad)
idiv
outs
in
jns
bnd
lds
icebp
cmp
mov
lahf
in
jl
push
ficomp
addr16
pop
fsubr
leave
xchg
(bad)
xor
push
jnp
(bad)
inc
mov
jno
test
out
cs
repnz
mov
dec
xor
lahf
aas
repz
imul
push
mov
add
inc
mov
adc
imul
sbb
and
cmp
test
add
pop
test
mov
mov
cmp
into
data16
mov
xchg
iret
xchg
sbb
inc
xchg
pop
pop
mov
fisttp
dec
ds
add
addr16
call
in
inc
lahf
xchg
mov
into
pop
fistp
cld
loope
mov
mov
(bad)
cmc
mov
pop
mov
popf
test
test
and
mov
sbb
cmp
scas
xchg
stc
inc
sahf
push
leave
stos
out
lds
add
adc
out
or
and
clc
add
out
mov
push
inc
lds
sbb
lock
mov
xor
gs
lock
fs
into
mov
dec
jl
add
(bad)
jo
sahf
retf
loope
xor
sti
inc
scas
mov
test
(bad)
sbb
(bad)
fidiv
cli
retf
adc
in
sub
or
adc
stos
(bad)
fidivr
lea
pop
sub
test
ret
adc
jle
and
maxps
rcr
ds
out
pop
mov
add
pop
cmp
xchg
push
mov
push
loope
xchg
and
out
sbb
sub
js
xchg
clc
pop
inc
shr
push
das
sbb
cmp
pop
(bad)
enter
inc
push
mov
push
test
scas
scas
or
nop
popa
dec
or
stos
jl
inc
shr
mov
xchg
popa
push
mov
retf
es
xor
xor
mov
pop
shl
shl
dec
jne
mov
lahf
mov
out
ret
jle
add
jnp
sbb
push
sbb
adc
add
pop
ror
scas
or
ret
add
adc
inc
and
jle
loop
add
(bad)
cld
jne
sbb
jle
inc
pop
fidivr
sti
add
dec
mov
call
std
mov
scas
fsub
int
out
scas
movs
ficomp
icebp
pop
in
pop
cld
push
inc
and
sbb
adc
lods
cmp
lock
lods
jbe
inc
add
popa
and
loopne
retf
test
pop
or
add
xchg
xchg
xor
int
xchg
cs
add
mov
or
sbb
inc
test
daa
dec
cmp
test
jns
cdq
outs
cs
and
inc
xchg
sub
les
jg
outs
in
cs
ja
in
xor
add
aas
push
cmp
xchg
bound
xor
pop
movs
aas
mov
jno
sub
data16
inc
xchg
test
cs
add
es
leave
jno
adc
(bad)
fisubr
sub
(bad)
mov
xor
sub
dec
pop
cmp
inc
mov
daa
dec
dec
das
stc
jno
lea
es
or
jmp
add
xchg
test
mov
js
inc
pop
cld
push
das
sub
push
xlat
ins
inc
xchg
rcr
jne
mov
int3
in
pop
fdiv
mov
movs
arpl
or
xor
push
rol
scas
xor
mov
and
adc
sub
frstor
vmaxss
sub
inc
test
sub
stos
and
int3
data16
mul
test
mov
std
cwde
shr
pop
ret
jb
arpl
popf
inc
sub
sbb
stos
lds
jmp
xchg
ror
popa
gs
and
cmps
and
loopne
shl
dec
popf
ror
cdq
into
in
pop
xchg
cmp
adc
jno
imul
dec
outs
inc
je
fdiv
xor
xchg
cmp
inc
add
into
xchg
jge
retf
jl
int
xchg
pop
cdq
dec
imul
gs
loop
nop
jecxz
adc
repz
push
push
xchg
scas
pusha
mul
sbb
inc
adc
retf
or
jns
mov
movs
and
(bad)
int
add
lea
aad
and
rcr
cld
xor
ins
lds
jl
ret
stos
mov
div
add
iret
pop
shr
cmp
push
lock
inc
pusha
test
add
ss
retf
jmp
pusha
std
push
adc
gs
das
adc
pusha
or
(bad)
mov
push
fld
nop
push
cdq
ins
fcmovb
sub
lea
dec
sub
jp
push
or
out
out
adc
pop
in
lahf
mov
in
(bad)
cli
dec
sub
iret
das
idiv
in
out
cmp
fdiv
daa
xchg
sti
xchg
je
push
mov
rcl
loop
shl
lea
scas
cmp
jae
js
mov
jne
retf
cmp
mov
out
push
or
ja
stos
jo
inc
retf
add
stc
push
(bad)
aam
aad
xchg
gs
(bad)
mov
sbb
mov
fmul
jb
or
push
mov
mov
sub
rol
scas
les
sub
add
out
lods
jecxz
std
(bad)
sbb
repnz
daa
adc
(bad)
mov
add
add
mov
pop
(bad)
or
pop
rcl
aad
fadd
sub
xchg
dec
pop
(bad)
xchg
sub
push
cmp
mov
mov
or
outs
add
mov
cmp
add
std
test
pop
ret
cmp
and
retf
lods
jnp
jecxz
xchg
dec
adc
push
fcmovu
pop
pop
icebp
adc
mov
mov
fld
lds
and
jmpw
test
mov
xor
add
gs
cmp
out
xchg
and
push
xchg
push
jae
adc
popa
push
or
imul
xchg
mov
pop
out
dec
fsub
out
sahf
fidiv
(bad)
movq
mov
jns
scas
sbb
jnp
cli
sbb
pushf
add
and
bswap
sbb
gs
adc
or
xor
adc
push
stos
inc
fs
test
jge
scas
mov
into
jnp
adc
adc
popa
aaa
sti
cmp
stos
repz
ins
cmp
pop
sub
push
mov
loopne
cmp
sahf
pop
adc
sbb
sub
inc
push
add
add
cs
lea
xchg
ins
imul
(bad)
neg
sbb
sub
leave
push
cwde
mov
inc
repnz
enter
stos
jns
ret
aam
ror
xchg
xor
xor
retf
xchg
xchg
or
je
test
fadd
mov
pop
sub
fsubr
mov
stc
dec
push
dec
xor
jecxz
add
jbe
je
push
sahf
cld
fild
fisttp
and
jno
xor
xchg
or
pop
cmp
ja
add
loopne
push
outs
add
fwait
xor
jbe
arpl
push
mov
mov
sbb
jae
mov
sbb
sti
inc
inc
cmp
ud2
adc
push
add
lock
xor
add
iret
add
pop
mov
retf
add
mov
ret
sbb
dec
in
add
xchg
cs
lock
add
xchg
jp
xchg
rcr
outs
cwde
neg
retf
sub
fdiv
out
dec
(bad)
out
cmp
enter
jne
inc
push
ins
xor
sub
ins
sub
sbb
gs
xor
jbe
int3
pop
dec
ins
cmp
in
cmp
mov
clc
inc
enter
sahf
repnz
cdq
(bad)
pop
outs
mov
imul
scas
pop
inc
sbb
jle
sti
fadd
add
add
mov
mov
cmp
add
mov
(bad)
pop
or
aaa
mov
jl
cwde
adc
cmps
out
xchg
mov
scas
mov
add
mov
shl
std
cmp
jmp
dec
sar
imul
cmp
sar
dec
arpl
inc
bound
(bad)
cmps
xchg
jl
fwait
jl
stos
pop
cmp
jae
call
adc
fwait
bound
xchg
and
or
push
pop
dec
dec
inc
pop
or
xchg
popf
inc
xchg
stos
or
xchg
sub
mov
mov
mov
shl
sar
sub
fst
pop
dec
xlat
push
call
cwde
push
stos
lock
inc
aad
mov
ins
xor
and
mov
or
mov
dec
icebp
push
sbb
repnz
js
mov
mov
push
inc
out
or
push
push
stos
dec
inc
push
sub
and
sub
ins
fcom
inc
push
mov
dec
les
and
pop
add
push
out
mov
jb
pop
xchg
cmp
add
dec
adc
addr16
sbb
test
or
ror
push
and
call
imul
popa
sub
retf
rcr
stos
jg
out
aam
sar
cmp
pop
and
std
(bad)
ja
outs
pop
retf
ins
sbb
adc
xchg
jo
xchg
push
call
test
and
les
mov
stos
sbb
mov
outs
arpl
cmp
sub
rcl
xor
clc
adc
pminub
ret
mov
or
sub
scas
lock
jmp
mov
adc
jnp
push
loop
outs
dec
pop
mov
ss
(bad)
mov
push
fidivr
fld
scas
es
(bad)
imul
mov
mov
add
xor
jo
retf
or
cmp
aam
in
push
scas
shr
cmps
adc
pop
aaa
fcomp
sar
mov
addr16
pusha
cmps
scas
std
and
sti
call
(bad)
lahf
lahf
or
into
push
push
cmp
inc
add
loope
ds
or
and
pop
je
(bad)
out
fs
aas
gs
pop
and
imul
jle
int
jmp
pop
pop
mov
cdq
push
push
jmp
or
inc
and
fst
sub
mov
test
pop
shl
mov
call
mov
xchg
jae
test
sbb
pop
mov
jmp
push
cld
cwde
inc
pushf
test
sub
inc
dec
xor
ins
sbb
rcr
and
add
sar
add
mov
sbb
popf
add
add
scas
and
sub
xor
arpl
xlat
push
and
xor
mov
xor
sbb
inc
lea
cs
push
cdq
movs
pop
loopne
push
and
rol
sbb
and
pusha
inc
adc
call
add
or
movs
push
xchg
sbb
pop
inc
mov
xor
aad
arpl
das
ss
(bad)
aas
test
call
sub
sbb
gs
out
jge
sti
pop
nop
bound
push
add
loope
(bad)
out
and
and
or
or
push
sti
test
fadd
and
popa
push
xor
sbb
(bad)
mov
cli
push
aam
stos
lods
cs
shl
lahf
and
scas
mov
inc
jns
pop
sbb
xchg
mov
imul
sub
mov
sbb
movs
imul
out
pop
or
mov
fnstenv
lea
shl
daa
mov
xchg
or
in
mov
push
test
repz
or
sbb
inc
fwait
xor
jmp
addr16
pop
adc
jno
or
(bad)
outs
cvtsi2sd
push
ins
xchg
jmp
inc
dec
cli
jmp
push
dec
shl
test
(bad)
fwait
repz
test
xchg
out
jp
xor
mov
(bad)
mov
out
fistp
ds
fincstp
into
iret
mov
ret
fisttp
lds
xor
sti
loopne
repnz
pop
and
nop
push
mov
sub
sub
test
adc
push
sbb
jb
add
test
hlt
mov
add
xor
xchg
retf
xchg
sbb
mov
mov
or
test
lds
jmp
mov
push
int3
mov
push
mov
pop
mov
add
ret
mov
xchg
inc
xor
mov
inc
ret
inc
add
rcr
jp
jmp
push
mov
pop
mov
pusha
in
lods
add
leave
or
or
push
jge
fcomp
(bad)
pushf
aas
loopne
inc
sahf
dec
aas
int3
xchg
xor
lock
add
clc
add
add
daa
inc
repnz
add
loopne
inc
or
jg
adc
das
aam
lahf
mov
dec
fisubr
xor
(bad)
jl
dec
mov
adc
cmp
push
popa
sbb
and
in
mov
cmp
add
cld
mov
push
mov
adc
ins
cmp
xchg
jmp
mov
add
aam
and
(bad)
loope
inc
mov
xchg
cdq
inc
rcl
sbb
popa
popf
pop
fdivr
out
jns
adc
cmps
sbb
xor
mulps
and
out
pop
mov
mov
fidiv
out
lods
aaa
in
ins
js
cli
cdq
bound
xor
or
add
mov
int3
iret
aam
retf
xor
aas
ds
cmps
repz
xor
out
test
clc
sbb
mov
js
inc
inc
cmps
inc
xchg
adc
push
ret
add
sbb
nop
nop
sub
dec
imul
inc
adc
jns
sbb
lds
add
call
push
jno
loop
dec
pop
fldenv
mov
or
loope
lods
mov
ins
jo
xchg
lods
or
aad
inc
dec
xchg
pop
gs
adc
jne
jbe
js
inc
or
dec
mov
xchg
sbb
(bad)
aam
sbb
rcl
cmp
jmp
sbb
out
jnp
jbe
xchg
inc
in
test
and
mov
mov
imul
mov
movs
mov
cdq
dec
dec
inc
movs
inc
cdq
inc
pop
pop
push
enter
cli
test
sbb
lds
into
arpl
pop
cwde
clc
les
jo
aas
xchg
fstp
imul
retf
dec
in
lods
xchg
jp
scas
dec
stc
js
push
fmulp
xchg
jp
cmp
xor
cld
repz
xchg
fadd
popf
outs
fild
add
cs
aam
mov
jnp
stc
mov
and
cdq
std
mov
or
push
sti
pop
fmul
popa
dec
clc
ror
int
stos
int3
iret
shl
dec
mov
pushf
out
jle
jge
les
sbb
mov
or
out
leave
loope
xchg
or
in
dec
add
or
mov
or
sbb
addr16
in
loopne
mov
enter
xchg
inc
push
jns
int3
mov
jae
(bad)
xor
push
xchg
je
cmps
and
mov
adc
es
movs
call
ja
push
psubb
shr
xchg
sub
mov
les
cmps
and
mov
popf
xchg
add
ret
mov
push
sub
and
add
mov
sub
cmp
pop
sub
cli
inc
mov
test
ins
out
xor
adc
push
jns
mov
(bad)
pop
jo
push
loopne
dec
add
fmul
jle
mov
shl
inc
and
out
ficom
xor
or
aam
mov
imul
pop
xchg
pop
add
sbb
mov
and
es
fsubr
sub
lods
in
sbb
enterw
sbb
out
xchg
pop
lods
pop
ins
popa
push
ret
add
sub
cmps
pusha
cs
ret
jo
xchg
sbb
daa
inc
add
and
call
popa
loopne
pop
cmp
and
fidivr
ret
call
xchg
fadd
mov
imul
jg
out
and
adc
lahf
leave
popf
mov
aaa
jae
(bad)
pop
jns
scas
in
jg
sbb
mov
ins
stos
pushf
aad
push
ins
movs
mov
mov
push
jnp
in
cmp
(bad)
stos
out
clc
cmp
jg
jge
int3
test
inc
or
jle
xchg
cmp
xchg
xor
addr16
rcl
sub
push
fimul
push
stc
push
dec
pop
add
mov
sbb
fwait
sbb
retf
and
cmp
add
test
inc
sbb
into
push
lahf
jb
imul
or
mov
xchg
mov
inc
add
sub
call
mov
mov
retf
stos
mov
inc
dec
jo
sbb
and
or
xor
mov
sbb
in
sbb
stos
sub
mov
mov
cmp
call
adc
pop
push
cdq
pop
jne
push
bound
loope
mov
sar
pop
and
push
shr
cdq
inc
xor
retf
push
mov
jae
push
adc
stos
sub
lods
pop
shl
mov
and
mov
push
(bad)
or
or
test
cmp
or
jbe
(bad)
les
xor
push
mov
xchg
push
lahf
mov
sub
leave
fwait
jae
int3
inc
mov
lock
scas
cmp
call
sbb
sti
mov
fnsave
(bad)
cld
push
add
mov
stos
cmps
push
push
cmps
pop
add
ins
sahf
jmp
fstp
xchg
cmp
mov
fbld
mov
cli
(bad)
outs
repz
daa
mov
xor
sahf
pusha
popf
mov
or
jecxz
ja
std
jb
mov
stos
(bad)
sbb
out
sub
and
out
or
pop
mov
mov
mov
cmp
outs
loop
xchg
or
leave
int3
cs
je
leave
jecxz
fs
jne
stos
lods
pop
loop
or
mov
retf
into
aas
fcomp
out
fwait
repz
(bad)
iret
js
mov
sub
or
push
shl
pop
mov
loope
(bad)
shl
ds
mov
mov
add
dec
push
neg
push
sub
into
push
or
xchg
retf
push
jno
pushf
add
jo
ss
jne
add
sub
pop
pop
stos
push
scas
enter
adc
dec
sub
jno
or
xor
imul
lds
aad
inc
push
add
xor
scas
pusha
mov
or
dec
mov
stos
mov
sub
mov
popa
sbb
sub
or
sbb
mov
dec
mov
jo
fwait
mov
xor
mov
mov
out
loop
push
push
adc
add
jmp
jne
les
leave
xchg
enter
adc
push
or
mov
dec
jnp
cmc
mov
inc
push
dec
popa
mov
push
fs
dec
mov
jb
pop
dec
(bad)
inc
add
das
aaa
xor
adc
mov
lods
sub
pop
retf
push
mov
test
and
inc
jno
(bad)
push
push
imul
or
sub
retf
inc
sbb
mov
test
xchg
dec
sub
ds
inc
(bad)
sar
jne
push
add
imul
mov
cmps
addr16
jp
test
sbb
adc
xor
xchg
test
in
push
inc
mov
jl
jle
out
push
pop
ins
outs
push
pushf
cmp
mov
fnstsw
test
sar
inc
xchg
fld
xor
pop
bound
int3
retf
cmp
jno
mov
lock
and
arpl
dec
jae
ret
or
sub
shl
xchg
adc
add
sub
push
into
es
fwait
repz
xchg
lsl
adc
popf
stc
cmp
mov
rcl
mov
sbb
xchg
rol
dec
enter
push
js
pop
mov
loopne
ret
or
idiv
add
jb
mov
fucom
mov
dec
jo
xlat
mov
(bad)
clc
push
cwde
inc
fisubr
fcomp
stos
add
jae
xchg
pop
pop
data16
xor
aaa
retf
xchg
stos
xor
dec
lea
dec
shl
xchg
inc
loope
mov
je
fnstsw
or
push
push
pop
inc
sbb
sbb
ins
mov
push
push
xor
push
fsub
dec
or
ja
fwait
push
xor
aad
repz
test
imul
cmps
inc
data16
add
add
movlhps
dec
fadd
mov
lea
retf
mov
mov
aaa
xor
mov
arpl
add
lods
adc
sub
pop
xor
xor
idiv
call
jae
(bad)
ds
(bad)
ret
push
callw
(bad)
xor
mov
aam
pop
int3
icebp
jmp
sub
xchg
inc
outs
jnp
ret
xlat
movs
and
cmp
xbegin
sub
adc
stos
sub
mov
stos
ins
es
inc
mov
xchg
(bad)
cmc
adc
std
inc
push
inc
sub
xchg
daa
inc
aad
out
lahf
cs
out
or
addr16
std
adc
leave
out
and
jl
xchg
mov
popa
dec
dec
arpl
daa
into
ds
je
mov
ds
outs
fst
or
sbb
dec
in
xchg
mov
aam
jp
mov
sub
lea
sbb
iret
sbb
mov
mov
pop
loope
je
jb
lods
jo
add
mov
retf
xchg
xchg
hlt
js
xchg
sub
sub
mov
inc
daa
mov
push
loopne
mov
sbb
or
stos
mov
mov
js
inc
mov
mov
dec
and
xchg
scas
cld
cwde
jns
imul
push
push
push
jne
and
ss
push
jecxz
cli
and
sbb
ins
mov
xchg
cmp
test
or
sub
mov
rcl
inc
ss
inc
inc
add
push
xchg
pop
inc
add
mov
push
in
test
xor
or
push
ins
push
sbb
pop
add
add
fiadd
fild
xor
mov
fs
or
fbld
pop
movs
mov
cli
pop
xor
add
mov
ficomp
lods
mov
(bad)
xchg
xor
or
outs
pop
outs
and
lods
add
mov
add
sbb
jl
or
xchg
mov
lods
jne
pop
je
call
mov
inc
cdq
bound
dec
push
inc
pop
icebp
add
xchg
jbe
(bad)
and
ss
es
push
gs
sub
push
cmp
fisubr
add
pop
xor
sbb
add
outs
dec
lods
pop
mov
mov
sub
outs
mov
inc
mov
dec
stos
psubsb
or
cmp
xchg
outs
push
popa
aaa
sahf
pushf
pop
dec
and
inc
pop
and
loop
and
nop
fptan
arpl
cmp
cdq
in
and
pop
xchg
shr
xchg
sub
jno
mov
add
out
cwde
push
xchg
gs
mov
pop
popa
shr
jno
mov
inc
loope
jg
vpcmpeqd
adc
dec
dec
mov
in
stc
adc
mov
rcr
arpl
bound
test
aam
xchg
rcr
out
stc
xchg
ins
cmp
jp
cmp
add
imul
dec
inc
cmps
sar
sub
pushf
imul
enter
in
sbb
xor
dec
add
ror
sbb
jb
mov
push
cmp
out
mov
xchg
inc
push
jp
je
mov
dec
xchg
cmps
fcmovnbe
mov
inc
and
inc
xor
xchg
inc
fiadd
(bad)
mov
add
outs
sub
xor
add
ret
push
sub
push
test
mov
adc
dec
and
pop
call
sub
neg
rol
fs
test
in
mov
sub
into
call
mov
leave
inc
xlat
sbb
sub
stos
sub
ss
jmp
mov
mov
stos
xchg
cmps
stos
push
dec
movs
mov
sar
pop
sahf
les
enter
mov
call
ins
popa
(bad)
(bad)
and
mov
push
and
inc
outs
out
xor
shl
sbb
inc
cmp
dec
sub
pusha
scas
or
mov
dec
jl
nop
sub
jns
cmp
loopne
mov
xor
mov
pop
js
mov
or
lock
mov
iret
call
dec
popfw
add
sbb
sub
add
xchg
push
(bad)
call
shr
sbb
imul
xchg
dec
xchg
sti
popf
mov
cmc
mov
mov
retf
add
cmps
ss
dec
jno
(bad)
sbb
mov
js
inc
pop
jl
cmp
fstp
stos
arpl
ret
aas
mov
push
cmp
cmps
mov
sti
rcl
ror
inc
fisttp
jle
popa
jmp
loop
test
add
jbe
ret
xor
adc
rcr
icebp
or
test
es
xchg
test
js
mov
push
jae
mov
xor
pop
stc
inc
popa
ins
push
test
lea
inc
ja
call
and
out
jns
push
es
xor
out
mov
push
scas
xlat
adc
sbb
cmp
mov
in
xchg
cmp
test
lds
daa
xchg
push
mov
mov
pushf
jno
fdivr
add
sbb
dec
jb
pop
jnp
mov
cmc
retf
cmps
sbb
mov
fdiv
jl
inc
jne
bound
sbb
fidivr
les
aam
jg
sub
mov
pop
cld
adc
mov
jg
xchg
call
add
and
cld
daa
(bad)
inc
int3
popf
outs
sar
lock
sbb
les
inc
dec
inc
and
push
adc
in
loope
cld
mov
add
inc
aas
cmps
push
movs
adc
sub
sbb
rcr
mov
cmp
cmp
push
call
xchg
imul
fneni(8087
dec
and
adc
cmp
adc
retf
or
cmp
pop
rcr
iret
outs
clc
inc
fmul
fcmovnbe
shr
aaa
inc
data16
sub
and
jle
cmc
adc
pslld
dec
dec
push
lods
xor
cmc
push
adc
or
rol
repz
ja
cld
ret
hlt
fwait
sbb
jge
and
retf
push
(bad)
es
aas
daa
xchg
(bad)
ins
repnz
std
into
js
lahf
jbe
lock
movs
inc
fidiv
fisttp
aas
enter
mov
in
xchg
pushf
addr16
ficom
pop
add
sub
shr
xor
xchg
in
jno
and
sbb
cld
out
push
sbb
or
jno
sbb
pop
ins
sub
and
cmps
test
shl
rcr
lods
dec
in
cmps
push
out
hlt
call
shl
cmps
cmc
dec
js
adc
hlt
scas
mov
pop
pop
shr
hlt
gs
fld
add
sub
loop
bnd
pop
mov
ss
fs
jl
or
mov
dec
into
mov
push
or
retf
lock
cwde
sub
hlt
daa
xchg
ds
lock
enter
inc
ins
retf
imul
int3
adc
or
mov
jecxz
repnz
mov
in
cmp
into
iret
jb
dec
jno
mov
mov
jae
(bad)
jg
pusha
jge
pop
pop
dec
sub
mov
pop
adc
mov
inc
aad
dec
mov
sbb
in
push
shr
gs
cdq
je
cdq
mov
or
xor
outs
fisttp
adc
ret
dec
push
pop
(bad)
(bad)
jmp
cld
sar
jmp
cld
push
out
(bad)
out
leave
jecxz
ds
mov
adc
retf
push
sbb
retf
out
adc
jns
adc
divps
inc
movs
sub
pop
add
ins
and
or
push
pop
sbb
std
dec
cmp
scas
ins
dec
aad
mov
add
adc
and
out
call
cmps
fdivrp
mov
pusha
xchg
add
sbb
adc
push
dec
(bad)
dec
sub
dec
or
cmps
ss
dec
cmps
inc
mov
add
lods
movs
push
iret
out
or
sub
add
sub
jmp
ret
pop
(bad)
pop
add
cmp
push
cld
xchg
imul
cwde
js
adc
setne
sub
shl
shl
(bad)
add
fbstp
bound
or
pop
das
mov
jle
push
mov
inc
inc
add
add
inc
fucomip
cmp
mov
add
adc
push
mov
sub
idiv
xor
icebp
sbb
iret
bnd
pop
xor
sub
sahf
fiadd
xchg
xor
and
fsub
jae
out
cmc
pop
pop
lds
in
loope
rep
mov
out
cmc
sub
mov
jns
push
pop
es
(bad)
sub
mov
sbb
xor
push
add
pop
inc
stos
fadd
sub
xor
pop
xchg
mov
cmp
xor
mov
movs
dec
arpl
sub
cdq
push
mov
add
mov
and
push
mov
scas
mov
inc
or
sbb
inc
and
and
icebp
pop
mov
xor
lods
cmp
xchg
iret
test
arpl
add
push
(bad)
cmp
aaa
cmp
daa
in
js
sub
mov
ins
pushf
fsubp
pop
pop
sbb
xor
mov
cmp
test
or
pop
shr
out
xor
jp
cmp
loope
neg
cmp
inc
shl
int
(bad)
jbe
mov
sub
cmp
iret
aam
ret
or
dec
sbb
xchg
sub
sti
cwde
(bad)
in
je
jmp
inc
sbb
dec
dec
pop
dec
adc
out
jb
and
inc
jae
inc
dec
jecxz
div
sbb
xor
add
in
cs
sbb
sbb
lock
mov
loopne
adc
add
repz
sub
and
cmp
cld
stc
inc
lds
fsub
sub
xchg
push
je
pop
ds
cmp
scas
popf
sbb
push
ficom
dec
xor
outs
das
in
(bad)
jno
inc
sbb
lock
pop
fcom
nop
and
gs
dec
dec
test
xchg
pop
es
jnp
xchg
sub
pop
inc
or
or
and
repnz
pop
ffree
push
mov
ds
push
mov
scas
and
retf
sub
jg
inc
mov
leave
pop
call
push
pop
ja
and
mov
xor
add
or
shr
js
inc
push
test
mov
ret
push
xor
xor
cmp
mov
add
cmp
dec
adc
xchg
gs
stc
or
xchg
cmp
or
in
outs
add
jb
pop
test
js
shr
jb
xchg
loopne
sbb
adc
clc
xor
add
mov
jle
mov
adc
and
mov
mov
inc
and
cmp
xchg
xchg
pop
test
jp
pop
jl
dec
cli
test
imul
push
inc
mov
inc
push
push
dec
pop
stos
inc
dec
out
sub
or
cdq
cmps
movs
or
push
cmps
adc
lock
push
es
xchg
fdivr
out
add
mov
nop
fild
jle
cld
seta
and
sbb
ret
nop
push
sub
(bad)
loopne
pop
jns
mov
loope
xor
push
rol
pushf
mov
and
movs
mov
test
fcomp
in
aas
push
xor
test
or
add
or
test
aad
mov
cmp
(bad)
ret
test
das
mov
adc
sbb
cld
sbb
pop
mov
adc
or
dec
or
xchg
and
into
pop
or
movs
call
sub
retf
or
dec
(bad)
or
into
in
int
push
sbb
push
or
jno
mov
mov
mov
mov
sub
xor
adc
and
mov
dec
cmp
cmp
inc
cmp
cli
retf
sbb
add
mov
shr
fcmovnbe
imul
or
mov
jo
ds
or
jecxz
jmp
mov
imul
cmp
icebp
mov
out
cmc
(bad)
cmp
dec
xchg
imul
inc
jecxz
xlat
out
mov
mov
sbb
lods
mov
lods
test
jns
hlt
leave
sbb
inc
xchg
sub
sbb
xor
xchg
pop
pusha
push
fsubr
test
fldcw
jb
int
cs
or
les
dec
mov
dec
adc
add
sbb
lock
add
aad
or
loopne
stc
lods
clc
sub
(bad)
jno
cld
dec
lock
and
vmwrite
fwait
xor
retf
cmc
inc
push
add
cmps
xor
scas
jne
cmps
sahf
out
xchg
adc
dec
dec
push
ds
jns
or
add
addr16
rol
movs
call
jbe
rcr
xor
mov
mov
xor
dec
sbb
scas
fcmovbe
sbb
dec
fidivr
cli
fstp
mov
sbb
cmp
movs
sar
mov
sti
sahf
(bad)
push
pop
and
icebp
or
lock
inc
std
lock
adc
adc
pop
add
arpl
outs
adc
cmps
les
iret
xor
popa
shl
ins
test
fdiv
adc
popa
sub
push
cld
sbb
add
push
outs
fcom
mov
mov
mov
and
js
jle
pop
call
sub
add
add
pop
(bad)
adc
repz
in
jns
or
loope
arpl
addr16
movs
add
arpl
push
es
mov
shr
sbb
int
xor
sub
add
shr
sbb
mov
pop
fidiv
add
mov
mov
popf
mov
xor
jbe
jnp
imul
inc
imul
xlat
mov
scas
push
out
loope
loope
jecxz
and
inc
jno
jmp
out
push
cmp
pop
out
add
addr16
and
ds
and
stc
inc
das
mov
add
leave
clc
inc
mov
in
inc
sub
imul
add
xor
int3
sub
cmps
fs
(bad)
push
mov
lahf
dec
xchg
and
test
repz
fsub
aam
ins
mov
jge
das
fwait
push
scas
mov
and
fisttp
das
mov
jb
lods
clc
sub
pop
sbb
cmp
mov
and
loopne
add
(bad)
sub
call
adc
iret
sti
lods
mov
sub
mov
add
call
mov
fwait
into
mov
in
adc
xor
or
sub
cli
retf
test
dec
jmp
pop
sbb
mov
ss
xchg
out
enter
inc
(bad)
mov
test
jb
or
add
rcl
stos
xchg
and
(bad)
addr16
ficomp
ins
stos
mov
mov
mov
dec
mov
jno
xchg
mov
xor
mov
xchg
fidivr
pop
lods
cmp
jle
jg
pop
test
mov
in
call
push
xchg
(bad)
cld
dec
add
outs
repnz
scas
pop
shr
arpl
sar
int3
pop
arpl
clc
adc
sub
nop
push
leave
inc
fcmovnb
(bad)
sbb
in
daa
mov
stos
retf
mov
or
jecxz
mov
xor
push
sahf
pop
stc
retf
setne
cs
xchg
cmps
scas
int3
fldenv
rcr
mov
push
sbb
pop
dec
mov
xor
cmp
(bad)
cmps
or
pop
inc
xchg
sub
pop
stos
fbstp
enter
mov
inc
scas
add
jae
or
xchg
(bad)
mov
jb
sar
xor
leave
fsubr
repnz
mov
not
mov
and
jecxz
lods
adc
js
add
mov
xchg
xchg
hlt
inc
imul
int3
pop
test
xchg
movs
div
fidiv
enter
jp
fldcw
add
enter
push
adc
das
shr
clc
push
pop
adc
stc
lods
(bad)
imul
outs
lds
scas
or
pop
mov
cmp
mov
jl
add
xchg
aaa
aas
loopne
outs
push
das
mov
dec
and
sbb
add
lods
xchg
loopne
icebp
cmp
mov
xor
or
mov
loopne
pop
ins
ret
dec
into
cmp
jno
adc
jnp
ror
xchg
call
test
mov
call
push
xor
gs
pop
sbb
in
mov
cwde
mov
add
fist
stos
xlat
movs
add
mov
or
retf
mov
push
or
jmp
and
pusha
(bad)
push
pop
jmp
sti
jle
add
sbb
jae
fcmovb
out
in
inc
lods
in
fstp
adc
fst
gs
mov
dec
mov
add
ret
mov
mov
js
js
inc
mov
adc
sub
cld
inc
inc
stc
sub
icebp
pop
(bad)
shr
add
lods
pop
or
shr
mov
popa
std
iret
add
push
jmp
mov
mov
pushf
inc
lea
xor
pop
shl
scas
es
mov
or
movs
pop
pop
std
test
data16
adc
cmp
das
sub
adc
and
sub
test
mov
push
push
sub
mov
lods
or
inc
sub
xor
mov
in
push
das
jge
push
in
inc
sbb
dec
out
mov
mov
fdiv
push
jb
shl
sbb
inc
cli
sbb
xchg
mov
inc
push
nop
outs
sahf
mov
or
in
lahf
outs
shl
leave
lock
add
pusha
addr16
and
or
or
inc
add
sbb
cmp
inc
adc
sbb
xchg
add
sub
jno
shr
adc
and
sbb
inc
jle
mov
sahf
push
add
pop
ss
ins
repz
or
add
(bad)
sahf
or
or
jl
ror
add
inc
jo
(bad)
movs
xor
jo
rol
lods
std
or
sti
bound
je
sar
neg
nop
push
adc
popa
push
das
jne
mov
dec
xor
xchg
mov
aas
jo
adc
sub
das
movs
mov
adc
shr
push
xchg
arpl
add
bound
out
mov
cmps
dec
out
push
cmp
int
mul
repnz
cwde
pop
popf
nop
stos
xor
mov
mov
cs
add
push
or
pop
mov
mov
ret
adc
mov
and
test
outs
inc
in
aas
adc
lock
add
inc
mov
jg
inc
and
test
loop
push
js
inc
jmp
adc
sbb
(bad)
mov
mov
mov
inc
pop
jbe
dec
hlt
pushf
mov
clc
inc
mov
jmp
push
or
test
jb
jno
fist
add
out
cmp
ret
xor
sub
pop
add
mov
pop
inc
outs
cs
fcomp
and
jbe
or
loopne
jo
jne
mov
dec
add
pop
or
push
dec
or
(bad)
mov
pop
or
or
mov
mov
(bad)
js
xchg
loop
ja
mov
dec
push
out
sub
fs
sub
sub
mov
jmp
jecxz
shl
ins
xchg
and
mov
xchg
(bad)
and
dec
rcl
inc
scas
mov
cmp
mul
daa
xor
xor
les
cmc
push
sbb
popf
je
pop
cmp
das
mov
sar
pop
fwait
and
xchg
xchg
sar
jl
pop
loopne
loopne
push
add
push
das
les
shr
pop
sbb
pop
xchg
fild
xchg
inc
and
movs
das
mov
sub
sbb
retf
(bad)
in
inc
inc
mov
movs
out
lock
mov
out
push
inc
loope
or
retf
cs
fst
mov
jmp
int3
sub
xchg
mov
cmp
fucomip
mov
daa
dec
test
vminpd
push
dec
or
(bad)
int3
push
std
stos
loop
push
xchg
or
mov
cs
push
mov
push
xor
ds
jmp
mov
pop
cmp
xchg
movs
sbb
test
repnz
outs
aaa
mov
mov
mov
call
jae
sahf
js
add
cmp
in
cmp
sbb
test
jmp
aas
push
nop
dec
inc
retf
pop
push
jmp
sub
adc
push
jb
pushf
jl
xchg
fwait
lds
push
pop
inc
adc
je
in
mov
jae
dec
scas
jmp
js
lock
xor
mov
lea
xchg
loop
loop
add
js
add
stc
lea
test
int3
shl
push
mov
out
sub
sub
sbb
arpl
add
scas
pop
adc
mov
cwde
movs
scas
jp
xchg
xchg
loope
push
stc
mov
fdiv
adc
mov
(bad)
pop
mov
bound
pop
in
outs
ins
mov
push
xchg
stc
ret
pop
lods
ja
in
es
call
das
test
and
aad
xor
cs
leave
or
xchg
test
loope
gs
sub
jne
mov
or
fstp
xor
add
sbb
pop
scas
div
aaa
xchg
test
pop
data16
jmp
mov
inc
pop
outs
xchg
mov
and
inc
mov
jmp
and
jmp
xor
dec
cmp
jmp
mov
ret
je
mov
lock
inc
in
or
adc
clc
sahf
pop
loop
loopne
aaa
clc
or
(bad)
fidivr
cmp
pop
mov
adc
test
inc
ss
out
repnz
retf
jne
ret
in
fadd
adc
popf
cwde
popa
xchg
adc
fldcw
repnz
div
loop
mov
js
in
cs
inc
pop
ins
in
outs
inc
neg
inc
pusha
cld
hlt
and
ret
jno
xchg
leave
call
test
push
nop
adc
dec
jmp
or
ss
stos
dec
hlt
rol
cmp
sbb
mov
dec
or
xor
scas
mov
scas
lods
jo
mov
mov
pusha
cmc
add
lock
je
movs
not
rcl
addr16
lock
jae
sbb
cmp
push
loop
out
cmp
dec
stos
jmp
cld
inc
mov
and
pop
add
xchg
loopne
sar
xor
add
pop
add
cs
movlhps
or
sub
outs
pop
je
es
jmp
xor
ret
add
sub
mov
outs
pop
dec
mov
pop
cld
push
ret
js
dec
mov
fst
add
jg
popa
popaw
ror
pop
xor
inc
mov
vmread
adc
imul
mov
or
mov
(bad)
jmp
(bad)
ins
scas
daa
mov
stos
adc
ins
jl
push
pop
xor
sti
cdq
rcl
pop
pop
aad
hlt
and
rcr
(bad)
xchg
sub
xchg
cmc
adc
jge
scas
movs
inc
xchg
iret
jne
test
bound
lea
cmp
idiv
jns
cmps
rcl
mov
pop
jbe
mul
sbb
xor
push
inc
add
jg
test
rcl
adc
ret
in
clc
pop
test
lock
test
aam
pushf
cli
shr
and
push
pop
sbb
mov
in
test
sub
aas
or
int3
push
push
add
push
inc
pop
(bad)
dec
jmp
cmc
inc
pop
arpl
mov
fstp
jmp
sar
xchg
cli
cld
popa
scas
(bad)
bound
(bad)
imul
jae
inc
pushf
out
xor
inc
scas
mov
int3
push
mov
retf
rol
es
add
mov
sub
sbb
ffreep
cld
movs
xchg
inc
retf
xor
cdq
push
loop
aad
jnp
jnp
inc
dec
cmp
push
add
ficom
pop
jne
push
mov
mov
add
sbb
or
into
sub
mov
out
mov
inc
scas
scas
retf
sub
pop
mov
(bad)
ret
aam
jo
push
lds
inc
stc
adc
iret
enter
push
(bad)
cs
mov
xchg
fidivr
test
repnz
jnp
jno
retf
push
(bad)
fcmovbe
mov
lods
push
out
fwait
sbb
pop
pop
xchg
dec
aad
pop
icebp
cdq
imul
pop
mov
xlat
movs
pop
mov
mov
scas
cmp
adc
add
sbb
pop
movs
xor
lds
sbb
mov
inc
mov
or
ror
mov
sub
test
mov
xor
(bad)
pop
inc
mov
daa
push
pop
data16
aad
sbb
int3
xchg
add
sbb
popf
adc
adc
int
repz
pop
gs
and
sub
pusha
test
inc
inc
adc
fiadd
mov
push
shl
fcomp
daa
xor
xchg
or
ins
mov
push
xor
and
das
jne
mov
and
or
loopne
gs
xchg
sbb
bound
xor
dec
or
fwait
clc
mov
test
mov
outs
xlat
xor
sbb
scas
dec
pusha
pop
xchg
int3
or
sbb
push
jg
sub
repz
jae
pop
cmp
nop
jne
scas
mov
push
xchg
mov
outs
add
sbb
or
daa
and
stc
retf
add
gs
inc
jl
call
dec
push
(bad)
and
push
pop
push
push
ret
ja
xor
push
mov
inc
(bad)
add
scas
adc
inc
inc
aam
inc
(bad)
mov
cld
mov
or
xor
prefetch
dec
and
popa
adc
sbb
cmp
xchg
adc
cs
sub
shl
add
ds
inc
lds
add
mov
jmp
adc
bound
shl
loop
jp
stc
(bad)
sub
dec
xor
dec
xor
enter
adc
xchg
cmps
sub
mov
ss
test
rcr
in
mov
and
or
inc
adc
call
adc
aaa
(bad)
cwde
(bad)
icebp
mov
add
add
mov
sbb
arpl
mov
mov
fild
push
fmul
mov
fwait
adc
rol
sbb
imul
cmps
aad
sub
mov
in
cmp
shl
add
mov
add
shl
hlt
int3
into
adc
popa
test
ret
sub
inc
xchg
jl
add
jmp
out
pop
enter
lahf
(bad)
cs
mov
ins
inc
dec
mov
shl
and
add
mov
sti
push
in
adc
xor
pop
jbe
push
(bad)
xor
loopne
out
sbb
xor
fbstp
xlat
in
stc
xchg
lahf
outs
mov
cmps
ins
aam
mov
in
jmp
stc
and
mov
inc
sub
add
add
inc
retf
loop
pushf
dec
mov
adc
cli
sbb
push
gs
xchg
imul
pop
xor
or
mov
pop
aam
cmp
in
jl
add
sub
das
adc
mov
xor
xlat
lahf
dec
mov
sbb
push
bswap
sub
push
push
cld
xor
das
popa
push
loop
add
into
mov
jmp
mov
mov
arpl
cmc
jmp
(bad)
icebp
sub
dec
inc
xchg
int3
gs
popf
nop
inc
repz
aad
sub
loop
and
shr
stos
mov
je
into
stos
jb
sub
popa
sub
or
add
stos
pop
sti
aam
inc
mov
or
mov
jge
neg
push
sub
cmp
std
std
sti
inc
sub
pushf
jae
ds
fisub
jge
clc
adc
xchg
cmc
call
push
enter
sbb
pop
inc
test
lods
cli
dec
jle
mov
stc
inc
in
mov
fbld
sub
jecxz
mov
aad
scas
aam
and
leave
out
or
out
sub
pop
int3
rcr
and
sti
mov
aaa
sbb
les
cld
(bad)
push
dec
pop
dec
jl
mov
test
test
ss
jb
jmp
mov
ss
jl
stc
pop
xor
aad
mov
mov
and
gs
mov
sbb
lahf
push
mov
adc
mov
mov
xor
xchg
aas
xchg
and
mov
xchg
sub
and
js
sub
iret
ret
clc
push
dec
inc
or
sti
jo
add
jno
test
sti
les
lods
cli
popf
in
hlt
mov
jg
lahf
inc
jmp
out
inc
dec
sub
out
mov
xchg
jb
into
call
xor
mov
sub
and
inc
test
mov
jmp
xor
xchg
lock
and
(bad)
out
pushf
xchg
push
mov
retf
test
add
mov
mov
xchg
cs
repz
sub
inc
test
jmp
inc
or
cmc
jnp
lds
inc
sub
cmps
arpl
retf
jno
sbb
sbb
hlt
cwde
sbb
in
ret
mov
outs
add
rcl
mov
push
xor
test
push
int3
mov
xor
nop
cdq
pop
mov
pop
pop
or
sub
mov
outs
div
sbb
iret
push
cli
jp
and
jmp
add
mov
lahf
mov
shl
in
rol
mov
ror
and
pop
push
nop
enter
adc
dec
stos
xchg
imul
mov
sbb
cmp
pop
cdq
leave
xchg
sub
retf
sub
push
xchg
pop
cwde
inc
in
jb
pusha
mov
pop
mov
sbb
mov
retf
rcl
push
inc
sbb
arpl
or
add
push
inc
cmp
lea
cmp
push
mov
xchg
xor
pop
xchg
sahf
jno
push
jnp
and
dec
mov
adc
mov
inc
sbb
fadd
fs
cmp
mov
mov
jbe
push
mov
inc
push
adc
push
lods
jmp
(bad)
in
aas
push
pop
mov
(bad)
into
lahf
inc
pop
xchg
inc
adc
sub
pusha
test
jno
test
std
loop
std
sbb
cmp
sti
push
adc
jp
js
lock
fstp
sbb
push
mov
lods
adc
fdiv
lock
out
pop
mov
clc
or
xor
jle
in
dec
cli
neg
push
sbb
dec
and
int
arpl
jl
mov
mov
in
adc
jne
bound
inc
(bad)
test
pop
cmp
repz
inc
jecxz
dec
sahf
les
retf
push
xchg
sbb
retf
stos
enter
popa
out
std
inc
pop
jae
stos
sti
mov
(bad)
fsub
dec
dec
jmp
sahf
add
ror
test
xor
push
push
stos
sahf
repnz
jbe
outs
rcr
mov
pop
cmp
popa
pushf
adc
test
push
out
and
and
sub
sbb
sub
mul
leave
jmp
scas
cmp
mov
mov
add
inc
sahf
pushf
adc
repz
mov
cld
push
shr
mov
dec
jle
test
adc
lods
mov
xchg
push
test
out
loop
xchg
les
push
icebp
ror
push
fdivr
cmp
fucomi
lock
cli
or
int3
aas
xchg
xchg
frstpm(287
sub
ins
gs
sbb
sub
mov
mov
or
out
iret
push
lock
int
dec
mov
out
adc
loop
test
add
dec
mov
rcl
sbb
sbb
aaa
hlt
or
(bad)
fldcw
outs
mov
inc
push
daa
add
inc
pop
pop
test
test
(bad)
jg
les
lods
fcomip
mov
mov
pop
adc
mov
ret
jmp
and
enter
enter
dec
fdivr
mov
and
lahf
sub
in
mov
cmps
jmp
nop
inc
pusha
outs
ja
(bad)
sbb
xor
je
push
(bad)
and
inc
movs
cli
push
cs
add
and
pop
ret
retf
cmovne
lods
mov
cmp
das
mov
js
push
mov
fdivr
lods
mov
mov
cs
dec
and
lahf
or
pop
int3
sub
rol
mov
and
xor
cwde
or
xor
aad
sbb
gs
inc
stos
retf
neg
add
add
les
outs
popf
sbb
or
push
push
inc
jae
dec
jge
xchg
jno
in
stos
pop
ja
imul
scas
outs
mov
hlt
cwde
adc
(bad)
cmp
dec
out
sbb
sti
ins
sub
sub
mov
arpl
mov
add
or
add
loope
push
loop
cld
pop
mov
movs
repnz
and
stos
xchg
pop
and
stos
jae
cwde
push
dec
into
and
mov
aad
jl
xor
sbb
sbb
or
xor
xchg
add
adc
cs
mov
push
out
xor
jno
adc
enter
lds
jo
inc
sbb
inc
xchg
sti
test
pop
xchg
aas
xor
and
stos
xchg
mov
retf
mov
les
mov
scas
jnp
sti
or
mov
xchg
outs
sub
pop
scas
hlt
mov
mov
hlt
inc
cmc
cmp
div
jmp
hlt
lock
xchg
xchg
popf
shl
mov
icebp
mov
ficom
inc
aad
mov
retf
ins
mov
adc
hlt
call
test
js
sar
cmps
push
mov
jb
mov
rcl
dec
hlt
mov
mov
cmp
or
call
out
or
or
xor
jne
test
add
lock
xchg
aaa
xor
retf
out
xor
or
sbb
call
pop
mov
pop
inc
scas
aad
data16
cmps
outs
imul
add
inc
push
push
push
mov
cld
movs
adc
pop
les
out
cmp
pop
mov
xchg
test
jecxz
and
and
out
sub
mov
pop
dec
jecxz
nop
mov
inc
pop
add
out
into
in
(bad)
mov
add
mov
xlat
mov
ins
outs
mov
inc
mov
and
ds
and
adc
aas
xchg
jge
push
push
push
arpl
or
das
add
je
pop
ret
inc
sti
sbb
out
sahf
out
(bad)
and
sub
jb
xchg
cli
pop
out
fbstp
mov
push
popa
std
retf
sub
mov
fistp
test
loope
cld
ret
jo
movs
test
rol
sub
in
loope
imul
pushf
push
in
dec
shl
inc
clc
retf
dec
inc
aam
dec
test
xchg
(bad)
push
pop
dec
sbb
xchg
or
shl
and
outs
xlat
(bad)
hlt
pop
fst
fidivr
fist
jp
sbb
and
jae
cld
and
idiv
push
lods
pop
mov
(bad)
sbb
movs
movs
add
jbe
int
adc
imul
jnp
ja
adc
outs
or
ins
fcmovne
or
aam
push
or
add
stos
add
fs
jge
dec
jmp
hlt
mov
imul
mov
xchg
adc
push
dec
bswap
pop
shr
ins
paddd
imul
movs
repz
jp
fwait
js
and
sub
ins
cmp
mov
jnp
mov
inc
repnz
hlt
cmp
mov
adc
mov
mov
in
cmp
push
inc
ja
mov
ucomiss
xchg
jle
cwde
pop
jnp
sub
push
in
cdq
mov
stos
jae
into
push
dec
mov
test
aad
mov
mov
or
jnp
and
pop
pop
sub
pop
ror
aaa
cmps
es
inc
sub
xchg
inc
or
inc
mov
add
lods
and
xor
and
and
mov
ins
mov
add
jbe
ror
push
es
jb
or
and
xchg
or
jb
scas
call
mov
cmp
cmp
jmp
and
fs
sub
adc
pop
cli
stos
add
push
ret
xchg
retf
sub
adc
xor
dec
aad
daa
add
lds
mov
dec
stc
dec
int
cmc
and
push
pop
shr
pop
inc
xchg
fst
sti
retf
xchg
addr16
mov
mov
and
push
sub
mov
aam
jmp
pusha
cmp
call
or
pop
sti
sub
sub
inc
mov
adc
fcom
call
mov
mov
inc
repz
xchg
enter
jecxz
xchg
adc
mov
sti
sbb
fwait
scas
(bad)
pop
and
lods
push
les
fsubr
pop
or
mov
adc
pop
and
add
lods
add
sbb
jg
or
fistp
pop
nop
fstp
jecxz
mov
mov
scas
and
cmp
lods
ja
adc
xor
pop
rcl
dec
sub
(bad)
rcr
into
in
std
sbb
lock
xor
andps
jno
mov
push
popa
popa
mov
loop
jmp
movs
xchg
sar
call
sbb
sub
in
pop
ins
test
mov
rcl
add
pushw
test
jnp
sbb
mov
icebp
pop
adc
outs
repz
cmp
sub
push
out
das
callw
fidiv
ins
dec
dec
push
les
cmc
pop
pop
or
in
les
sbb
retf
cmps
js
cs
out
and
xchg
push
nop
push
cs
push
add
pop
push
inc
call
xchg
lahf
xor
lock
sub
cmp
int3
mov
int
pop
pop
(bad)
xor
and
stos
jne
dec
inc
lea
shl
xor
or
test
mov
call
fwait
js
inc
mov
dec
dec
adc
lods
ror
and
lods
mov
mov
push
movs
not
cmp
mov
in
repnz
aam
stos
(bad)
in
nop
outs
sub
jb
fst
mov
ret
sbb
lea
xchg
cmp
cmps
xor
sbb
cmp
push
or
xchg
adc
inc
xchg
out
test
push
sub
push
add
inc
cmp
pop
xor
push
mov
int3
rcr
mov
stos
out
push
xor
xor
xlat
or
xlat
pushf
ficomp
sub
jb
jne
call
jmp
mov
xor
cdq
jne
xchg
arpl
push
xchg
add
jp
cmp
jo
add
lds
mov
jle
xchg
aaa
pop
cmp
pop
sbb
mov
jge
pop
cmp
in
movs
leave
out
jge
retf
ins
in
cmc
mov
sub
mov
shl
jne
retf
dec
(bad)
adc
ins
push
mov
mov
sub
mov
and
cmp
xlat
pop
(bad)
sub
and
rol
das
jnp
xor
inc
ins
xor
xor
jb
pop
dec
shr
sub
adc
mov
lods
jmp
shr
scas
and
xor
mov
cli
(bad)
shl
adc
pusha
pusha
adc
mov
xchg
std
mov
imul
enter
out
into
or
sbb
add
mov
enter
retf
xor
push
das
cmp
lods
or
mov
hlt
sub
pop
sahf
push
(bad)
sar
popa
movs
and
cmp
mov
sahf
mov
imul
cmp
test
scas
add
stc
xchg
push
(bad)
sti
adc
sub
out
mov
add
pop
push
fsub
(bad)
icebp
adc
xchg
ja
jb
into
popa
sbb
or
imul
gs
gs
addr16
xchg
sbb
push
stos
push
pushf
add
add
mov
xchg
jno
xlat
cmp
test
jmp
and
stos
cld
mov
inc
mov
stc
arpl
xchg
stos
out
sub
ja
mul
inc
pop
pop
ds
and
int3
xchg
xor
or
dec
cwde
xor
mov
mov
retf
out
add
inc
loope
cli
ins
mov
sbb
shl
push
arpl
jbe
and
retf
outs
leave
les
mov
and
fild
cmp
jp
xchg
push
mov
jbe
pop
repnz
mov
cmps
or
inc
xlat
cmp
stos
scas
xchg
cmp
xor
mov
mul
cmps
call
xchg
call
lea
ss
xor
sub
pop
xor
ja
dec
jno
add
pop
xor
(bad)
in
or
push
xor
in
dec
jg
fistp
or
inc
repnz
hlt
imul
out
sub
(bad)
mov
cwde
retf
adc
aas
shl
or
in
mov
xor
jg
sub
cld
jno
sti
xlat
test
push
cmovns
adc
xor
repnz
test
xor
inc
ins
(bad)
ret
adc
ret
push
test
outs
pop
(bad)
gs
adc
pushf
jl
sub
inc
in
mov
in
jg
cmps
in
inc
mov
add
inc
arpl
add
sti
aas
repz
in
aas
cld
aas
fsub
xchg
mov
dec
pop
and
add
and
cmps
addr16
div
std
sub
push
dec
cmps
sahf
lock
imul
or
stos
outs
dec
repnz
cmp
das
ss
pop
out
int3
imul
mov
cmc
or
ins
iret
outs
js
xchg
movs
dec
adc
stos
sub
aaa
push
jne
and
push
xlat
out
sbb
push
outs
js
(bad)
daa
and
mov
pop
inc
fiadd
add
jp
nop
(bad)
or
pop
cmp
aas
aam
add
mov
pop
xchg
out
lds
rcl
pusha
fisub
or
pusha
xchg
xchg
in
es
das
pop
mov
in
push
test
push
pop
rcl
or
movs
jb
mov
xchg
cwde
adc
test
std
add
xchg
cmp
inc
sbb
inc
jne
movs
inc
pop
call
call
cmc
add
out
xchg
retf
sbb
add
loopne
sub
dec
jns
loop
push
out
retf
add
pop
cld
and
clc
hlt
and
aad
jg
out
add
repz
add
inc
sbb
sbb
inc
and
and
in
(bad)
mov
add
push
mov
jle
add
sar
and
sbb
jae
add
out
xchg
add
pop
or
shl
das
inc
in
pop
jge
lods
xlat
jecxz
fs
cmp
pop
jp
jg
jl
fdivr
outs
fs
mov
xlat
mul
xlat
cmc
and
repnz
out
popaw
cmc
xchg
adc
jge
and
out
pop
out
sbb
push
int3
pop
test
jb
pusha
mov
iret
ret
hlt
dec
fmul
inc
sbb
or
jno
cmp
and
adc
nop
out
sub
fcomp
lods
pop
int3
jmp
add
imul
bswap
jle
pop
cmc
rcl
jne
adc
test
push
mov
mov
rcr
int
xchg
daa
lods
add
xchg
repz
sub
jecxz
mov
push
adc
es
mov
ins
xlat
sar
ret
or
inc
mov
std
mov
adc
and
pop
push
and
jne
cmp
js
xor
scas
outs
mov
add
rcl
sub
ret
mov
inc
es
loope
rcl
aaa
movs
add
mov
dec
xchg
rol
nop
jne
cmps
pop
test
mov
jbe
push
scas
cmp
mov
push
cdq
mov
lods
retf
je
js
movs
push
das
sete
jp
jge
push
fcmovnbe
inc
mov
in
jne
gs
into
inc
test
call
push
scas
adc
and
fnstsw
xchg
in
fwait
or
lea
stc
inc
ins
xor
test
mov
sbb
sti
fmul
pop
mov
hlt
mov
cmp
bound
retf
enter
daa
or
ror
pop
adc
in
jbe
loop
xchg
ins
(bad)
mov
pop
push
and
iret
jmp
adc
ins
fnsave
loope
adc
push
into
and
mov
fistp
fcmovu
out
lods
mov
(bad)
stc
xchg
or
add
int3
fs
mov
loopne
jmp
push
pop
cmc
xchg
jb
and
in
inc
sub
xlat
inc
push
jo
cmp
sar
loop
clc
or
es
(bad)
cmps
fcmovnb
jge
lods
int3
cmp
jae
(bad)
loop
test
out
dec
dec
pop
sub
stos
stos
retf
pop
sti
add
(bad)
int3
out
retf
jp
cwde
mov
add
pop
add
loope
lods
push
mov
les
popa
jo
mov
dec
xchg
xlat
icebp
and
cmp
jns
push
je
or
stos
movs
test
xchg
push
ror
pop
mov
push
dec
mov
test
add
jb
es
adc
xchg
push
aam
out
jae
jp
stos
stos
arpl
adc
jno
or
add
xchg
leave
out
mul
in
push
in
retf
lea
xchg
adc
cmp
test
add
sbb
shl
inc
and
retf
xor
add
mov
inc
and
hlt
or
loopne
mov
mov
push
jecxz
xchg
ins
(bad)
retf
sbb
rcl
push
xchg
add
add
mov
aad
xor
dec
aad
add
test
sub
mov
xchg
sub
add
retf
push
mov
push
shl
lahf
fdiv
ja
cmps
push
nop
cs
ins
sub
lods
sub
scas
add
repz
push
mov
mov
popf
and
jne
push
movs
jg
sahf
inc
inc
sub
rol
cmp
mov
dec
mov
push
mov
pop
jo
sub
dec
inc
jb
fdiv
adc
jl
mov
lea
or
jb
dec
jns
mov
or
rol
sbb
or
inc
ret
cmp
iret
outs
cld
test
sub
mov
test
cmp
jg
popa
xchg
ja
jge
adc
aad
std
and
das
stc
or
jns
cmc
mov
int
in
pop
cmp
inc
add
iret
or
mov
loop
add
stc
and
int3
in
or
jno
jae
movs
pop
fwait
paddusb
push
call
pop
stc
inc
aad
cmp
sbb
xchg
push
cmc
and
pop
or
mov
xchg
daa
xlat
xor
and
mov
fstp
call
iret
cmp
pop
mov
inc
and
dec
loopne
fwait
pop
ds
sbb
adc
rol
mov
cs
lds
pusha
idiv
les
jne
in
iret
sub
xchg
scas
sbb
mov
inc
jmp
rcr
lods
sub
sti
cmp
cmps
mov
out
add
sbb
adc
stos
add
daa
xor
cmp
fstp
mov
stos
imul
xchg
mov
rcr
lea
or
adc
jmp
sbb
pop
xchg
sub
jbe
sub
dec
mov
imul
cwde
popa
pop
lods
int3
xor
das
sbb
jl
outs
jmp
es
xor
jle
cmp
je
sbb
push
cmps
cmp
sbb
xchg
fucom
xlat
jne
add
les
pop
in
lods
xor
iret
ins
inc
popa
mov
pop
mov
mov
xchg
btc
mov
rcr
rcl
test
into
pop
dec
jo
test
push
cdq
or
sub
xchg
cld
xor
sub
or
push
adc
sbb
mov
pop
aam
rcr
push
inc
jbe
inc
ret
scas
push
pop
ret
jne
sub
jne
test
or
jmp
fwait
adc
jne
or
stos
sbb
adc
call
sti
inc
inc
popa
dec
xchg
inc
xchg
aam
xor
std
test
xor
fucomi
jb
mov
mov
add
in
add
mov
(bad)
hlt
aaa
pop
or
ins
jo
ret
mov
inc
sbb
push
pop
(bad)
jo
scas
jmp
adc
outs
imul
inc
mov
push
movaps
pop
(bad)
loop
adc
les
xor
cmp
add
aad
xor
pop
pop
in
sub
mov
dec
push
sbb
clc
dec
out
mov
aam
inc
idiv
idiv
mov
cmp
cmc
clc
mov
into
and
cs
pop
cld
inc
std
arpl
dec
mov
call
arpl
sbb
call
pop
push
ret
rcl
pop
adc
jbe
jno
jmp
dec
add
rcl
add
lods
mov
push
call
stos
pop
sbb
xchg
push
pop
or
aad
push
out
adc
out
mov
rol
inc
and
(bad)
dec
ficomp
cmps
outs
imul
lods
pop
sbb
cli
sbb
(bad)
cmp
fisub
cmp
adc
mov
inc
and
xor
sub
dec
jmp
xchg
dec
cmp
or
cmp
mov
icebp
add
cs
loopne
mov
dec
mov
sbb
fnstsw
mov
and
pop
jne
loope
pusha
and
es
fdivrp
icebp
xor
je
pusha
ss
add
mov
push
retf
jbe
jmp
jge
push
adc
push
mov
cs
popf
fnstenv
mov
repz
cmp
or
cmps
pop
test
jg
xor
xchg
sar
test
imul
sub
xor
loop
fisttp
stos
mov
adc
scas
popa
mov
xchg
and
in
sub
jl
pop
inc
in
add
ret
or
ror
xor
add
fwait
ins
imul
lods
adc
mov
sub
jge
mov
repz
scas
xor
(bad)
test
and
shl
sbb
xchg
xchg
in
(bad)
js
jne
fdivr
movs
jnp
push
pop
aas
scas
dec
jns
cmp
xor
sub
mul
out
into
add
pop
lea
xchg
js
(bad)
neg
imul
mov
sbb
in
pop
test
stos
ret
lods
mov
mov
ret
(bad)
push
cdq
or
cli
jmp
dec
dec
xor
cmp
retf
xchg
mov
popa
outs
pop
pop
loop
cmp
pop
cmp
add
pusha
dec
jge
xchg
pop
lahf
arpl
ds
(bad)
pop
out
(bad)
out
cli
dec
sbb
add
(bad)
in
icebp
sbb
inc
mov
mov
mov
xchg
jb
xor
jns
mov
sub
mov
ss
aaa
xor
or
test
test
pop
fbld
jge
mov
mov
push
xor
cli
mov
sar
pushf
imul
shr
lods
aad
dec
mov
xchg
cli
aam
add
adc
fsub
sbb
push
ficomp
dec
out
pop
clc
or
jp
adc
jo
in
sahf
lds
loop
xchg
xchg
retf
add
outs
scas
std
mov
push
sub
ja
jp
and
pop
fistp
scas
mov
inc
xor
mov
xchg
push
push
jnp
add
push
out
fdivr
and
aad
cmp
bound
aad
push
call
(bad)
push
xor
sub
clc
mov
aad
(bad)
or
push
cmc
cdq
sub
jns
inc
xor
imul
retf
push
adc
inc
sub
push
ds
stos
(bad)
xchg
pop
mov
cmp
int3
push
push
mov
sbb
fs
adc
or
scas
rcr
sbb
arpl
pushf
rcr
cmp
movs
add
and
mov
ret
out
push
cmp
sub
retf
call
push
pop
lea
xchg
outs
pop
push
aam
and
push
xchg
pop
push
out
imul
or
cmp
mov
or
push
daa
xchg
jae
xor
or
jg
and
ret
mov
out
xchg
out
js
jo
(bad)
sbb
sar
sub
mov
stos
rcl
pop
test
inc
and
std
jo
pop
pusha
das
push
pop
mov
jns
push
and
add
shr
sub
cwde
mov
sub
mov
sub
repz
imul
inc
arpl
mov
xchg
inc
jae
xor
cwde
mov
scas
push
call
mov
in
sub
ds
les
sbb
cmp
cmp
jmp
cli
fdiv
fbstp
xor
mov
sbb
loop
fld
sbb
in
mov
sub
dec
push
aas
jno
sbb
cmp
or
push
and
pop
lods
mov
mov
stos
push
jae
outs
or
retf
push
mov
test
mov
outs
mov
fidivr
mov
sti
(bad)
cmps
lods
pop
mov
shl
cld
dec
ret
xlat
fcom
aam
sar
and
push
jle
jae
das
fsubr
dec
push
jne
(bad)
fistp
movs
les
mov
xchg
pop
jmp
inc
pop
repnz
retf
push
sbb
xchg
xor
sub
mov
test
gs
push
jp
outs
aaa
xchg
pop
add
call
sub
sbb
push
pop
xchg
repz
sar
dec
cmps
mov
mov
sub
sub
jb
mov
mov
inc
add
or
or
hlt
mov
imul
or
icebp
sub
mov
leave
int
stc
mov
xor
pop
pop
fcom
inc
pusha
sub
jns
lods
sar
sub
or
icebp
test
imul
xor
xor
repnz
push
jmp
adc
je
ret
test
and
hlt
mov
popf
imul
mov
xchg
es
push
inc
mov
jns
imul
test
and
pop
mov
mov
push
add
neg
fadd
mov
ins
gs
aaa
inc
fs
mov
pop
fwait
mov
jbe
shl
xor
movs
repz
push
mov
push
push
fist
xor
sar
call
xor
jnp
repz
inc
cdq
es
jp
xchg
or
sbb
stos
xchg
dec
paddw
dec
push
jge
xchg
ret
mov
addr16
and
sub
mov
jmp
iret
out
xor
adc
dec
push
jle
mov
call
cmp
add
mov
mov
pop
push
sbb
add
and
xor
(bad)
and
add
movs
mov
mov
mov
push
(bad)
pop
pop
and
push
mov
js
rol
pop
push
retf
scas
cmp
ret
cmp
adc
or
dec
test
loope
and
dec
imul
push
(bad)
adc
pusha
(bad)
out
mov
xlat
ficom
push
sub
call
pop
out
out
and
(bad)
in
push
jp
loop
ret
and
icebp
xor
or
and
mov
ins
stos
mov
add
cmp
ins
cld
mov
(bad)
out
ret
ja
cmp
xor
fcom
into
cmp
pop
push
sahf
jmp
dec
cmp
cdq
and
adc
mov
hlt
in
add
jns
out
cmp
aas
mov
in
inc
lds
ret
pop
fdiv
shl
mov
clc
loop
push
push
ins
jmp
dec
aas
pop
inc
movs
test
mov
int
retf
dec
xchg
jbe
jl
in
aad
sbb
adc
popf
bound
push
xchg
push
jb
loop
inc
jb
enter
mov
or
call
imul
test
inc
xchg
dec
cmps
jno
mov
loop
inc
(bad)
pop
or
push
add
sahf
xor
popa
sti
xchg
(bad)
lea
mov
xchg
out
mov
adc
pop
call
call
and
xchg
arpl
push
pop
jg
mov
ins
call
jne
clc
mov
mov
fidivr
test
out
clc
iret
ds
sub
push
das
shl
push
sub
call
dec
sub
scas
js
sub
pop
jo
mov
adc
or
scas
retf
jns
jge
outs
mov
je
es
mov
rcr
into
adc
mov
or
fnstcw
jb
mov
aam
imul
add
(bad)
imul
imul
jnp
das
mov
mov
mov
test
jge
jg
xchg
mov
out
imul
mov
mov
mov
xor
leave
xchg
add
pop
lock
inc
mov
jecxz
push
xchg
cmp
jge
xor
or
mov
sbb
je
aaa
inc
or
xchg
cmp
mov
ffreep
addr16
jg
pop
sbb
sub
jmp
push
sbb
retf
jmp
sbb
add
and
hlt
sbb
adc
adc
and
movs
aaa
test
fidivr
push
xchg
add
cmp
mov
adc
jno
cs
push
bound
xlat
jnp
call
imul
(bad)
and
rcr
mov
jp
pop
inc
inc
push
cmp
loopne
hlt
and
movs
xlat
mov
jge
fsub
jne
mov
cmp
sbb
and
jae
sub
adc
out
iret
inc
cs
ins
inc
and
cmp
stos
adc
jbe
mov
pop
xor
out
cmp
mov
sbb
cld
add
mov
in
and
cli
push
or
out
data16
push
fimul
or
xchg
ins
call
out
or
scas
mov
xchg
retf
retfw
in
mov
rcr
sbb
mov
mov
(bad)
adc
(bad)
(bad)
inc
add
mov
cmc
mov
out
fistp
in
mov
add
jp
mov
xchg
clc
mov
fist
cs
(bad)
shr
ror
push
test
mov
ja
inc
aad
mov
mov
or
xchg
sbb
sub
cli
lods
mov
arpl
push
mov
add
inc
or
movs
push
push
push
xchg
add
shr
jnp
push
mov
faddp
or
push
fiadd
push
scas
xchg
cdq
or
imul
(bad)
cmp
cdq
adc
cmp
jne
mov
iret
xchg
add
pop
aaa
into
mov
lods
inc
ss
mov
xlat
xchg
jge
add
sti
add
jg
out
or
and
aam
add
std
aam
stos
xchg
inc
imul
cmps
cld
loop
xchg
inc
pop
out
inc
jecxz
mov
dec
mov
je
sub
sbb
dec
mov
outs
mov
div
sti
xchg
call
mov
jbe
and
jmp
out
out
rcl
sar
ins
popa
lods
jp
push
xchg
mov
jmp
and
push
add
call
ins
dec
fld
out
push
fimul
mov
gs
in
pop
sbb
sub
ins
mov
lods
pop
mov
xor
xchg
cwde
mov
mov
push
pop
test
lds
inc
(bad)
mov
jp
das
(bad)
rcr
pushf
pop
int
mov
xor
sbb
jbe
(bad)
in
mov
mov
inc
retf
sbb
addr16
sbb
adc
mov
sub
add
pop
add
dec
aas
xor
out
ficom
cmc
(bad)
dec
and
jo
sub
mov
test
loope
dec
xchg
mov
jb
pop
(bad)
pushf
pop
add
jmp
adc
cmp
popf
or
and
je
push
les
adc
jno
adc
arpl
xchg
dec
mov
cmp
dec
push
cmc
int3
mov
repnz
push
(bad)
mov
mov
xchg
add
rcl
jmp
mov
sub
adc
xor
rcl
add
xor
adc
jo
mov
or
scas
scas
or
jmp
sub
mov
pop
jecxz
mov
or
push
call
sub
rcl
mov
mov
jp
sti
adc
jle
inc
jmp
and
in
(bad)
push
jb
and
sbb
into
repz
pop
dec
xchg
add
jns
es
mov
push
sti
les
fdivr
add
jle
sti
add
daa
clc
mov
stc
xchg
sahf
mov
bound
cwde
aaa
push
sub
neg
loope
push
xlat
(bad)
movs
enter
dec
push
mov
xchg
sbb
mov
ror
sahf
ins
gs
scas
pushf
je
ficom
js
push
dec
(bad)
and
xor
lds
stos
mov
test
in
adc
sub
jo
inc
pop
(bad)
jmp
pop
add
scas
cmc
jmp
adc
jnp
and
rol
fnstenv
outs
(bad)
dec
or
addr16
jno
mov
stos
dec
sbb
stos
and
and
call
stos
arpl
ficom
pop
cmp
popa
je
ja
and
mov
or
add
mov
pop
xor
push
pusha
je
into
(bad)
xchg
add
int3
sar
ds
cmp
inc
inc
push
test
pop
int3
xchg
int
and
mov
scas
rcr
or
or
or
in
sar
or
xor
ins
adc
cmp
pop
sbb
pop
dec
repz
(bad)
push
adc
fisub
pop
adc
ret
sub
xchg
outs
nop
fidiv
rcl
sub
dec
test
out
jae
jbe
xchg
mov
or
fsub
pop
mov
setbe
push
cmp
inc
cmp
jae
aad
jge
mov
in
xchg
retf
or
dec
dec
scas
leave
xchg
repnz
cwde
xlat
and
push
pop
mov
loop
xchg
ret
outs
fcomp
adc
movs
push
out
mov
aam
les
lock
jbe
push
imul
(bad)
xlat
ss
cli
mov
ins
enter
push
pop
sub
int3
mov
repnz
rcr
(bad)
xor
gs
xchg
add
jg
sar
lods
jp
js
and
sar
adc
xlat
sbb
jle
gs
sub
dec
xor
popa
mov
outs
and
xchg
mov
dec
pop
aas
jno
scas
std
jg
jb
push
fnstsw
(bad)
mov
or
(bad)
sti
adc
daa
enter
arpl
and
add
fisttp
mov
aas
fcomp
mov
inc
lds
inc
or
dec
dec
and
xlat
movs
ds
dec
xlat
and
xchg
jg
push
xor
inc
das
dec
fsub
aam
push
rol
cmc
mov
mov
jge
inc
and
dec
out
and
add
add
add
add
or
add
add
add
add
add
add
adc
xor
adc
push
and
xor
mov
mov
lock
adc
loope
and
push
bound
fiadd
or
add
add
add
jecxz
xchg
lods
pop
test
scas
pop
push
stos
push
lods
pop
mov
aad
push
adc
stos
push
lods
pop
mov
aad
lock
inc
in
add
cli
sbb
cmp
mov
inc
sub
mov
push
mov
mov
mov
inc
ds
or
in
or
sub
aas
js
cld
push
inc
imul
sahf
sub
and
jmp
add
and
pop
jle
ud0
imul
std
inc
xchg
xchg
test
push
imul
int3
enter
ret
xchg
xor
mov
pop
add
rcl
jno
jmp
sub
ds
retf
inc
jle
push
push
xor
test
mov
leave
pusha
psrld
xlat
inc
ror
xor
std
mov
lods
push
adc
vpaddusw
test
cmp
xor
and
and
pusha
cmp
jne
es
adc
inc
jp
add
and
stos
pop
jecxz
and
cdq
test
cmp
sub
fld
loop
dec
pushf
call
(bad)
lods
mov
jbe
loope
mov
fsubr
ret
leave
sbb
xchg
pop
sbb
scas
fcom
(bad)
lock
mov
call
jle
aas
and
fimul
es
inc
(bad)
sub
imul
add
mov
xor
mov
adc
sub
fbld
ins
pushf
imul
add
cmp
lahf
in
xchg
(bad)
aaa
stc
fs
lsl
or
mov
lock
aad
test
mov
sbb
adc
and
mov
or
repz
cdq
int
or
adc
shl
xchg
push
pop
mov
and
jg
(bad)
push
inc
lds
mov
aam
cld
jne
lahf
in
cli
fldenv
dec
pop
icebp
clc
scas
ret
popf
fcomp
imul
mov
leave
mov
aad
jg
in
jno
and
(bad)
ins
xchg
enter
push
pop
inc
xchg
pop
je
and
imul
jns
and
push
jl
jno
adc
xchg
xchg
and
add
sbb
mov
cmps
ds
jg
dec
push
retf
fdivp
xor
mov
imul
mov
outs
push
mov
les
xchg
xor
inc
repz
nop
pop
ret
xor
ins
repnz
jo
mov
and
adc
mov
daa
jg
pop
push
xchg
and
das
push
xor
(bad)
dec
jnp
and
int3
ror
call
inc
push
sub
adc
adc
bound
or
in
fisubr
pop
push
in
cwde
ret
aaa
pop
sbb
jnp
cmp
pop
add
loopne
mov
mov
data16
xchg
pop
mov
mov
rcr
pop
lods
xchg
ins
ins
xchg
xor
cs
ja
(bad)
stc
push
mov
adc
stos
sbb
push
mov
stos
lea
mov
in
enter
push
adc
adc
xlat
jmp
repz
sub
loop
xor
push
scas
ret
dec
pop
test
in
loope
and
cmp
add
cmp
xchg
inc
jp
or
jo
mov
movs
out
inc
and
add
fidivr
sets
fwait
add
rcr
leave
dec
inc
ror
nop
xor
and
jae
ja
push
jbe
add
xchg
clc
jle
jbe
or
add
int3
jle
cmp
pop
add
pop
and
jp
in
add
cmps
adc
jmp
push
cmp
imul
jle
pop
dec
jl
imul
in
addr16
movs
xchg
in
sub
aam
inc
repnz
add
shl
hlt
mov
xchg
xlat
les
outs
cld
(bad)
sub
outs
fs
push
or
popf
cdq
adc
cmp
lock
inc
add
xchg
out
jb
cli
add
nop
add
cmp
scas
cmc
mov
idiv
psubd
addr16
mov
cmp
addr16
mov
push
adc
jno
push
ficomp
leave
cmps
dec
int
fild
test
daa
imul
shr
and
lock
out
push
xor
pop
es
push
xchg
in
idiv
dec
cmps
hlt
push
jp
jae
pop
mov
jle
cmp
movs
xchg
dec
xchg
popa
cwde
xor
test
sbb
not
out
sbb
stc
sub
mov
loope
repnz
xor
ja
dec
in
adc
fs
mov
(bad)
jbe
pop
mov
pop
psubw
xor
test
sbb
retf
out
loope
sbb
fmulp
loop
ja
inc
cmp
enter
and
jge
mov
sbb
loopne
ret
(bad)
out
enter
mov
push
dec
push
cmc
aaa
js
jno
mov
repz
call
or
pop
dec
data16
clc
pop
test
xchg
and
jne
adc
daa
nop
(bad)
popf
aam
adc
pop
loopne
fist
retf
push
popa
(bad)
cmp
jno
cwde
fucompp
pop
inc
out
outs
nop
clc
jle
xor
popf
(bad)
cmps
out
xor
repnz
mov
and
ret
retf
js
lock
fisubr
xchg
ret
lahf
xchg
ret
loop
lds
arpl
repz
dec
sub
mov
pop
jb
das
ret
enter
xor
or
add
imul
rol
jbe
and
mov
mov
jg
aas
or
jo
sbb
xchg
sub
cmc
cs
or
mov
hlt
lahf
adc
jae
stos
push
idiv
stos
mov
mov
cmp
jbe
lahf
adc
mov
and
mov
inc
adc
or
add
add
jnp
frstor
xchg
add
repz
and
cs
sbb
jl
js
aad
jmp
xchg
jns
rcr
xchg
mov
inc
imul
adc
pop
std
dec
xor
dec
add
dec
push
cs
xor
cmp
xlat
mov
lods
cli
pop
xchg
int3
inc
mov
push
repnz
mov
adc
inc
ret
inc
mov
lahf
aad
pop
stos
test
cmp
loop
adc
cmp
ins
add
out
std
xchg
or
push
mov
mov
jns
shl
xchg
daa
cmp
mov
pop
in
nop
xchg
ret
mov
stc
das
mov
sar
or
imul
repz
or
mov
add
cmp
xchg
shl
icebp
pop
cmc
idiv
stos
int3
cli
loopne
enter
and
mov
inc
imul
iret
xchg
inc
dec
(bad)
adc
add
ins
stc
(bad)
lock
fs
aas
scas
call
add
loope
in
aaa
ja
aas
xlat
out
test
push
pop
mov
ret
and
lock
bound
sbb
mov
ss
jmp
add
in
add
loop
imul
xchg
(bad)
repz
pop
ret
scas
mov
es
push
sti
and
aaa
mov
inc
push
mov
inc
(bad)
cmp
push
scas
xchg
push
add
sbb
ret
aas
push
inc
aam
movs
xor
fld
call
dec
and
mov
cmp
retf
test
hlt
xchg
in
mov
inc
and
push
stc
out
push
movs
cmp
mov
and
je
mov
clc
dec
int3
and
or
lods
cmp
jb
sar
jmp
pop
in
cmc
xor
mov
mov
cmp
stos
retf
push
stos
push
inc
pop
sub
scas
loop
xchg
jmp
push
push
std
xchg
imul
sbb
fisttp
(bad)
inc
ss
ror
cmp
pop
or
int3
jl
mov
dec
cmp
pushf
ins
fisttp
sbb
test
aam
sbb
je
mov
add
ja
mov
popf
(bad)
inc
push
mov
cmp
inc
add
outs
xlat
rcr
test
and
arpl
sub
or
sub
pop
aad
loope
sub
mov
sub
jno
inc
aam
add
sbb
mov
test
adc
mov
call
leave
inc
int3
hlt
push
dec
pushf
je
les
or
push
dec
fdivr
jecxz
or
jb
retf
gs
gs
fidiv
mov
cmp
add
add
mov
sbb
aaa
dec
add
push
js
mov
mov
ror
mov
xchg
mov
push
fild
loope
xchg
test
(bad)
cld
aam
js
icebp
sbb
movs
in
pop
shr
jo
mov
std
sub
sbb
out
push
dec
pop
jmp
mov
pop
jmp
loopne
ror
xchg
retf
mov
pushf
in
dec
imul
test
sbb
pop
xor
popa
loope
dec
sbb
mov
xchg
push
or
in
sbb
push
dec
adc
dec
mov
cmp
mov
scas
rcl
cmp
int3
inc
xor
or
inc
pop
jbe
and
add
dec
sub
aam
xchg
fiadd
mov
dec
cmp
cmp
mov
cmp
in
xchg
pop
add
fs
mov
jns
mov
mov
push
jl
push
rol
movs
es
cli
outs
popf
add
mov
out
mov
push
xlat
aam
(bad)
neg
dec
in
repz
retf
sbb
push
vphaddudq
cmps
rcr
cmps
dec
push
lds
jmp
(bad)
xor
imul
sbb
(bad)
sub
and
mov
test
rcl
sub
xchg
inc
inc
xchg
or
adc
mov
push
jb
or
add
mov
out
cwde
cmp
add
dec
and
fcmovnbe
stos
mov
or
rcr
or
aam
mov
gs
fstp
out
in
das
movs
inc
rol
jae
add
fiadd
arpl
in
out
sub
jmp
ins
cmp
cmp
jnp
and
push
mov
push
pushf
fcomp
movs
mov
pop
pop
jl
pop
cs
mov
pop
mov
into
ret
lahf
and
iret
call
mov
or
test
imul
les
sti
dec
or
adc
sbb
in
in
push
push
mov
jp
cmps
xor
stos
inc
mov
jge
mov
add
mov
stc
sbb
sbb
neg
ins
iret
and
jbe
jle
jae
mov
fisttp
xchg
inc
aad
xchg
or
xor
jbe
clc
jg
(bad)
dec
loop
or
adc
cmp
dec
out
cs
xor
adc
out
pop
aas
test
lods
xchg
xlat
adc
ja
jg
das
xchg
cli
xchg
das
cmp
cmc
imul
int
popa
retf
not
sub
shl
mov
enter
pop
cs
outs
fsub
fadd
mov
inc
and
mul
push
inc
and
imul
sub
xchg
push
jb
outs
out
add
mov
in
dec
inc
push
jns
popa
jecxz
test
hlt
js
add
out
and
sar
mov
ja
repnz
ss
sub
jns
mov
dec
lods
ins
jo
aaa
leave
add
in
ss
cmp
mov
ins
or
push
and
bound
sbb
mov
inc
add
add
add
add
add
add
adc
adc
xor
adc
xor
and
push
xor
xchg
mov
shl
and
xor
mov
fiadd
or
add
add
add
(bad)
stc
push
lods
pop
mov
aad
push
lods
pop
mov
jb
mov
pop
fiadd
fsub
push
cmp
movs
adc
cdq
dec
inc
xor
sbb
inc
xchg
fdiv
fdiv
sub
dec
inc
sub
scas
push
sbb
dec
aaa
sbb
daa
repz
or
(bad)
pop
or
jns
test
pop
add
aad
enter
push
sub
cmps
cmp
fs
jmp
not
das
mov
xor
out
clc
jae
add
xor
ds
pop
ror
fistp
push
pop
inc
fsubr
xor
movs
adc
cmc
jmp
mov
or
mov
jno
test
adc
mov
lahf
add
(bad)
loopne
sbb
cld
ret
icebp
dec
or
retf
pop
add
inc
cmp
mov
add
jmp
push
int3
mov
popf
adc
movs
and
pop
mov
mov
mov
fcom
sbb
mov
sub
sbb
mov
cli
jle
mov
mov
pop
fidivr
push
cmc
mov
dec
cmp
jg
push
imul
pop
dec
dec
leave
cli
cld
(bad)
push
inc
jle
shl
mov
pusha
dec
cli
(bad)
es
retf
je
push
sbb
(bad)
jb
adc
cmp
mov
push
hlt
leave
mov
mov
jo
ins
test
popf
sbb
into
jl
jnp
sbb
jns
scas
rol
rol
mov
sbb
sub
add
pop
add
jl
dec
sbb
push
lods
pushf
outs
sbb
mov
(bad)
mov
pop
addr16
adc
add
dec
jmp
jmp
(bad)
cmp
inc
mov
dec
push
add
xor
dec
sub
bound
cs
xor
and
daa
loopne
dec
fdivr
mov
add
jg
adc
push
cmp
sbb
lds
xor
lea
sbb
pop
pop
iret
push
sbb
push
scas
or
and
test
das
mov
(bad)
aam
(bad)
int
mov
mov
cld
and
push
dec
fstp
inc
fidivr
out
push
inc
aam
inc
les
mov
push
loop
add
cmps
sti
(bad)
cmps
mov
pop
aad
std
jg
ins
cmp
jbe
sbb
inc
mov
ret
call
out
std
xchg
int3
sub
imul
or
inc
push
mov
add
fsubr
gs
stc
or
clc
pop
xor
cmp
add
mov
arpl
ja
jl
mov
scas
and
sbb
and
(bad)
and
(bad)
ss
adc
aas
mov
(bad)
pop
jmp
je
cmp
lods
xchg
popa
(bad)
xchg
mov
test
jl
jg
xchg
sbb
ret
neg
sbb
jmp
adc
mov
jecxz
lods
jnp
fldcw
fdivr
sbb
rcr
jae
out
hlt
inc
push
mov
sbb
outs
(bad)
pop
jns
inc
and
add
push
push
sub
pop
fs
xchg
push
lock
retf
cmp
into
sub
shl
xchg
(bad)
fwait
mov
ror
push
xor
push
bound
jnp
scas
shl
sar
cs
mov
or
dec
mov
popa
xor
xor
cld
cmp
xor
xchg
bound
mov
pop
inc
and
fcmovnb
fild
dec
cmp
add
dec
daa
idiv
cli
add
test
enterw
jnp
mov
xor
adc
pop
fwait
inc
dec
inc
sti
xchg
cmps
mov
sbb
sub
aas
ret
movs
aas
mov
mov
push
fmul
movs
cmps
(bad)
pop
rcr
sbb
fucomp
xchg
xor
and
dec
cmc
pop
(bad)
push
and
sar
push
call
fsubrp
pop
out
jmp
xchg
mov
inc
cmp
pop
div
inc
mov
sbb
fst
stc
sbb
sbb
xchg
jno
inc
out
xor
add
in
push
cmp
idiv
inc
aam
push
repnz
push
dec
push
xchg
stos
out
nop
leave
scas
sub
sub
out
rcr
adc
jae
mov
xchg
pushf
or
sbb
xor
push
xor
jb
shl
adc
pop
cmps
pslld
mov
mov
dec
out
or
outs
jmp
mov
fdiv
sub
sub
sbb
inc
inc
xor
add
(bad)
fld
cmp
mov
aad
lock
daa
xor
sbb
pop
mov
cld
out
cmp
sub
jne
pop
aad
cmp
mov
jge
out
imul
mov
sub
xchg
sti
and
mov
add
cmp
in
dec
pop
push
or
adc
sti
cmp
add
jp
jbe
popa
push
out
xlat
or
stc
sti
adc
or
repnz
ins
xor
sti
(bad)
mov
jmp
gs
cmc
dec
clc
test
cmp
mov
sub
mov
popf
dec
sbb
cmp
loope
pop
jo
sub
and
sub
and
push
mov
inc
adc
inc
ins
pushf
loop
popa
and
fucomi
inc
jl
loope
test
pop
sub
pusha
fsubr
fmul
cmp
sti
mov
leave
or
movs
jnp
hlt
in
dec
int3
mov
adc
mov
and
push
in
inc
push
imul
imul
fsubr
ret
mov
lods
fwait
or
mov
push
xor
adc
xchg
add
push
cmp
push
mov
cmp
repnz
cwde
ins
push
ret
clc
xchg
cmp
or
mov
lods
test
mov
mov
add
push
fwait
ja
cmp
ss
movs
jmp
loope
or
popf
fidivr
(bad)
mov
xchg
inc
repnz
imul
mov
in
inc
(bad)
pop
sbb
ret
jne
cmp
pusha
ror
or
sub
push
repnz
and
jle
push
imul
sub
ret
inc
add
add
add
aam
popa
inc
loopne
daa
ss
dec
hlt
pop
(bad)
scas
rcl
xlat
test
loopne
pop
sub
pop
loop
es
add
mul
and
mov
adc
adc
shl
std
mov
mov
xchg
push
pop
push
cld
xchg
cmps
xchg
loopne
into
cld
arpl
hlt
fcomp
call
nop
(bad)
ror
xor
js
push
sahf
test
add
ret
push
pop
call
dec
(bad)
push
mov
pop
jo
rol
push
push
inc
adc
mov
push
inc
leave
mov
cld
inc
test
imul
mov
popf
jle
add
xchg
ss
packssdw
cld
xchg
xor
les
ins
pusha
loopne
cld
dec
outs
fdiv
and
inc
movs
in
add
movs
xlat
cmps
add
out
test
je
push
push
and
dec
pop
stos
in
xchg
fwait
adc
cld
sbb
retf
ror
mov
and
mov
dec
retf
jbe
add
lods
pop
rcr
mov
out
push
sub
push
imul
addr16
out
mov
jl
ja
cmps
fs
lods
(bad)
pop
in
mov
call
jnp
nop
push
imul
lock
popf
retf
xor
pop
mov
fcomp
scas
xchg
cmps
arpl
cmp
inc
or
stos
mov
aad
jbe
add
nop
sub
inc
mov
nop
sbb
mov
inc
xor
add
popa
ja
sub
rol
pop
pop
pusha
pop
mov
dec
ret
test
pushf
or
dec
mov
pop
adc
pop
jno
ss
pusha
aas
mov
mov
adc
(bad)
retf
out
or
push
mov
test
and
imul
adc
icebp
add
cmp
or
xchg
dec
je
push
mov
ret
mov
xchg
aad
scas
shr
sbb
mov
stos
xchg
adc
shr
mov
mov
push
imul
test
pop
loopne
cmp
fisub
out
mov
add
adc
js
adc
mov
fs
cmp
(bad)
mov
push
mov
call
mov
push
inc
inc
cmp
pop
in
push
or
xchg
ret
movs
pop
xor
sub
sbb
inc
adc
loopne
inc
jnp
popf
jg
mov
pop
shl
adc
dec
xlat
repnz
in
adc
push
mov
add
adc
push
test
test
ror
(bad)
mov
jg
push
inc
adc
add
push
mov
sub
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
sbb
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
inc
add
add
add
add
add
or
or
or
or
or
adc
adc
adc
adc
adc
adc
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
(bad)
fild
inc
add
add
push
push
or
push
or
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ret
or
push
add
add
add
adc
inc
add
add
add
add
add
add
add
add
or
fiadd
or
add
add
add
push
add
or
sub
mov
add
push
or
sbb
rol
add
and
and
es
xor
scas
aam
pop
int
aad
push
mov
ds
loopne
add
fistp
lds
test
add
xor
or
int
add
and
and
inc
ins
mov
sbb
xchg
fistp
mov
or
add
xchg
xor
bound
dec
xor
in
jle
jmp
mov
add
push
or
sbb
add
add
add
mov
dec
ins
mov
adc
mov
ins
addr16
pop
ins
mul
mov
mov
xchg
push
xchg
add
and
out
fs
jns
push
btr
and
push
add
or
push
xor
xor
xor
cdq
add
add
mov
loop
or
aam
jns
in
je
ss
xor
xchg
dec
jg
add
xor
(bad)
out
(bad)
scas
xchg
aam
sti
imul
dec
sub
adc
add
push
or
cdq
xor
xor
data16
add
add
xchg
dec
inc
sbb
pop
mov
sbb
or
fcmovu
fldcw
test
adc
or
in
push
cmps
test
ja
sbb
push
cdq
dec
mov
or
add
rcr
data16
sbb
and
test
fld
mov
mov
mov
repnz
fisttp
pop
dec
mov
scas
dec
fstp
out
inc
and
xor
shr
dec
jne
fsub
adc
add
xor
data16
inc
int3
rcr
or
mov
les
cwde
popa
stos
fdivr
fstp
mov
lea
imul
test
dec
cld
cmp
int3
fstp
mov
mov
arpl
xor
sbb
adc
xor
add
data16
sub
cwde
xor
adc
and
mov
les
mov
dec
xlat
repnz
xchg
imul
repz
ins
stos
repz
dec
hlt
cmp
in
bound
sub
push
jae
sti
sahf
rcr
mov
in
(bad)
mov
fiadd
adc
add
cwde
xor
xor
or
add
and
push
xor
aaa
push
sar
dec
mov
je
(bad)
pop
fwait
test
add
call
sahf
or
cmps
and
retf
mov
xchg
in
mov
jne
gs
and
adc
add
sbb
data16
inc
and
ins
mov
(bad)
push
xor
inc
mov
hlt
push
mov
arpl
movs
push
or
sbb
fcmove
jno
cmp
iret
lods
sti
(bad)
out
jg
pop
test
jnp
mov
mov
test
xor
inc
int3
int3
rol
add
or
sub
mov
fsubr
repnz
and
fadd
mov
mov
push
call
pop
cs
mov
std
das
xchg
dec
repz
jno
jg
call
ror
inc
dec
adc
add
xor
inc
xchg
and
dec
push
fisttp
les
data16
repnz
and
iret
mov
mov
add
inc
stos
dec
xchg
cmp
fisubr
mov
out
dec
js
fnstcw
div
ins
mov
bound
adc
data16
popa
inc
data16
or
or
jl
imul
in
aam
mov
add
mov
inc
sahf
pop
sbb
pop
mov
sbb
jo
adc
inc
mov
adc
sbb
dec
sub
and
adc
mov
int3
sbb
adc
add
dec
and
ins
adc
push
arpl
idiv
movs
outs
loopne
fcmovbe
fistp
dec
adc
stc
retf
inc
push
retf
inc
enter
jnp
pushf
add
ficomp
cli
push
cli
into
retf
inc
push
adc
cmp
or
inc
push
int3
int3
shl
cdq
cwde
xor
les
xchg
fcmovnbe
fwait
dec
dec
test
cmp
sbb
jae
jmp
(bad)
push
sub
stc
(bad)
and
sbb
and
adc
mov
jp
arpl
cmp
into
ret
inc
push
xor
sub
cwde
xchg
pushw
push
or
add
push
add
popf
jno
or
scas
sub
out
dec
jmp
out
and
cdq
aam
call
shl
in
mov
out
ins
test
mov
out
fcmove
cld
push
dec
dec
push
inc
add
xor
inc
data16
cdq
push
mov
pop
test
xor
fisubr
jne
shl
mov
repnz
sub
ins
xchg
popf
outs
daa
jmp
out
cdq
push
mov
xchg
hlt
test
or
cmp
mov
xor
icebp
push
and
inc
call
mov
popa
mov
int3
rcr
scas
cmps
fcom
adc
pop
mov
dec
jmp
push
cmc
mov
addr16
fistp
bound
rcr
push
shl
out
outs
popa
shl
int
loop
jge
jge
addr16
xchg
dec
adc
sub
or
int3
int3
loop
xor
xor
xor
ror
xchg
dec
mov
push
mov
ins
imul
movs
sub
lahf
retf
addr16
push
leave
mov
cmp
dec
dec
stos
cmp
adc
clc
test
lahf
dec
hlt
xor
rcr
ins
mov
add
and
cmps
xor
addr16
jns
cdq
cdq
cdq
cwde
mov
ret
cwde
xchg
fwait
or
mov
xor
lahf
sub
pop
fisttp
jb
scas
mov
inc
into
mov
dec
xchg
dec
lahf
xchg
pop
ja
sahf
mov
jno
std
mov
jmp
add
enter
and
inc
adc
cdq
cwde
xchg
int3
int3
int3
sbb
adc
jo
or
pop
scas
mov
jp
loop
lahf
xchg
jne
mov
es
retf
mov
(bad)
cld
loopne
repz
into
dec
push
shr
push
pop
jnp
loopne
sbb
xor
and
cdq
cdq
shl
and
xor
xor
data16
adc
popa
or
sbb
dec
jne
or
pop
fmul
jb
mov
test
(bad)
iret
xor
sub
es
mov
idiv
mov
call
dec
dec
and
add
xor
xor
int3
int3
inc
mov
xor
push
data16
adc
popa
or
and
jno
or
pop
pop
into
aam
push
mov
xchg
dec
iret
push
mov
xchg
push
add
push
jb
cmp
jmp
pushf
(bad)
cmp
push
pop
das
sbb
push
popa
aaa
inc
mov
sub
data16
pusha
int3
int3
int3
rcr
bound
mov
fcomp
push
pop
dec
sub
loop
stc
xor
fwait
(bad)
cmc
std
jl
es
retf
mov
adc
ss
inc
stos
retf
lods
bnd
xor
pop
dec
in
dec
jmp
push
dec
add
add
xor
mov
data16
inc
or
push
add
cmps
sbb
shr
xchg
jecxz
sbb
dec
jecxz
ret
cmps
jecxz
(bad)
pop
push
mov
jns
dec
or
xchg
(bad)
adc
outs
sub
pop
popf
cmc
movs
shr
and
or
sbb
cdq
test
cwde
and
int3
sub
scas
mov
jno
push
xor
dec
fiadd
jno
arpl
pop
jae
push
repnz
mov
push
cmp
sbb
fmul
add
add
push
(bad)
(bad)
and
leave
mov
dec
test
loopne
popa
inc
inc
jne
pusha
int3
int3
sub
into
mov
push
sbb
popa
or
ins
ins
mov
test
leave
pop
outs
fcom
mov
mov
push
cmp
mov
dec
add
test
lods
(bad)
movs
cmp
test
test
xor
xor
or
data16
or
add
test
sbb
(bad)
shr
imul
leave
cmp
xlat
cli
cmp
daa
(bad)
lock
sbb
in
popf
inc
sbb
dec
xchg
and
or
and
movs
lods
(bad)
lods
cli
mov
jbe
aam
call
sbb
js
cmc
test
adc
sbb
fstp
push
dec
xlat
push
push
fnstcw
mov
loop
repnz
sbb
mov
xchg
std
je
ss
out
imul
xor
push
push
dec
and
add
sbb
xor
dec
push
int
cmps
pushf
inc
mov
mov
sub
pop
and
cli
or
inc
mov
xchg
push
jmp
(bad)
push
cmps
mov
mov
retf
popa
or
retf
outs
fcom
in
sub
add
push
pusha
ret
ins
(bad)
movs
int3
adc
ins
lods
mov
mov
dec
xchg
mov
mov
mov
lahf
popf
aas
adc
jne
movs
ins
sub
jo
add
or
push
jecxz
inc
xor
xchg
clc
mov
clc
addr16
inc
mov
jb
mov
sbb
adc
adc
inc
adc
xor
mov
xor
fmul
loop
mov
cli
out
outs
pop
cmp
jne
sar
push
jne
push
pop
shr
imul
aaa
inc
gs
cmp
sub
xchg
fnsave
test
and
add
loop
sbb
push
push
nop
retf
adc
mov
push
outs
and
mov
xchg
movs
(bad)
pusha
mov
dec
data16
jmp
(bad)
jge
mov
cmp
ret
lods
stos
popa
and
mov
add
xchg
clc
scas
mov
mov
sbb
mov
mov
mov
lods
lds
popa
add
int
dec
pop
pop
call
ins
in
shr
fisub
pop
push
test
rcr
call
dec
push
jmp
out
pop
test
mov
dec
jecxz
fsubr
(bad)
shr
test
test
cmp
loope
jmp
or
retf
aam
sub
or
and
outs
call
add
test
push
and
cs
push
sub
imul
xchg
into
inc
mov
sub
jb
cmps
adc
pop
pop
sbb
push
pop
int3
mov
mov
jne
xor
in
xor
jbe
test
rcr
test
inc
push
adc
add
jecxz
jns
cmp
lods
retf
in
mov
push
pop
or
push
mov
pop
push
dec
xor
xchg
push
iret
jo
in
xchg
fadd
mov
jl
pop
das
sahf
mov
sti
fbstp
sub
lds
int
stos
pushf
inc
mov
xlat
or
shl
and
add
out
cmp
mov
mov
cmp
cli
aas
inc
pop
fist
inc
mov
inc
movs
les
xchg
pop
mov
dec
leave
ret
pop
sbb
mov
dec
sbb
sahf
add
push
out
(bad)
sbb
jb
sub
mov
(bad)
fdiv
mov
ins
(bad)
popf
aam
sbb
test
sub
add
add
xchg
js
fwait
mov
test
lahf
xchg
jbe
jmp
fld
cs
dec
dec
les
sub
mov
pop
call
dec
inc
shr
push
pop
(bad)
outs
shl
ja
cmp
js
or
xchg
cmp
les
sub
jo
jno
gs
mov
add
out
inc
sbb
xor
inc
retf
cld
mov
movs
iret
jne
test
jae
mov
sbb
iret
je
push
in
dec
ja
add
fdiv
jg
fstp
inc
inc
pop
cmp
sub
call
mov
loopne
dec
mov
fild
xchg
jo
xchg
shl
sbb
add
and
test
mov
scas
enter
in
aaa
jb
push
cli
dec
pushf
jge
mov
mov
dec
ror
clc
ins
daa
call
(bad)
or
scas
fcmovu
dec
xchg
mov
test
xchg
pop
push
in
dec
ins
and
movs
(bad)
sbb
scas
push
pop
popf
fxch
repz
out
movs
dec
repz
jmp
mov
inc
and
sbb
pop
xchg
dec
inc
shl
mov
inc
mov
xchg
loop
cmp
mov
mov
fsub
retf
or
dec
sti
(bad)
pop
push
mov
and
jne
mov
jecxz
ds
pop
and
jnp
test
mov
idiv
xor
mov
daa
pop
mov
and
cld
and
dec
arpl
iret
repz
xchg
sbb
mov
mov
int3
xor
inc
cmps
jmp
movs
cmps
leave
pop
out
jmp
shr
mov
out
gs
int
cvtdq2ps
cli
adc
icebp
mov
out
mov
fdiv
cmp
jmp
cmp
sar
inc
dec
and
mov
div
aad
cld
out
addr16
cli
mov
xor
pop
push
(bad)
ficomp
mov
fwait
popa
jbe
in
pop
ror
mov
in
sub
xchg
sti
repnz
lahf
fs
push
xor
mov
into
dec
sbb
fwait
addr16
mov
ret
jo
cwde
gs
sub
repz
loope
sub
retf
jae
mov
mov
pop
addr16
movs
iret
push
add
idiv
push
push
cmp
or
imul
std
or
sbb
push
loope
rcr
dec
add
add
fs
es
xchg
xor
loopne
es
sti
cmp
fistp
xchg
fsub
and
mov
cmp
cmp
add
test
pop
jmp
cdq
jl
jae
mov
sbb
jb
rcl
xor
sub
(bad)
rol
cmp
gs
push
sub
aas
gs
jo
les
sbb
fild
push
sbb
(bad)
jl
int3
leave
bound
xchg
mov
push
ficomp
or
jecxz
pop
pop
(bad)
out
pop
fisubr
cmc
in
inc
icebp
ja
or
leave
fidiv
bound
dec
dec
pop
adc
xor
add
aaa
les
xor
jbe
cmps
or
int
dec
jo
add
push
push
or
cdq
mov
sbb
lods
mov
jl
xchg
stos
stos
div
int
mov
mov
std
pop
pop
lds
sbb
movs
dec
xlat
call
add
dec
aaa
sbb
sub
imul
outs
cdq
loope
ins
aam
int
repnz
and
aad
jo
data16
sub
push
cmps
mov
adc
sbb
js
xchg
jge
mov
mov
xchg
jp
jecxz
int
pop
outs
ss
pop
mov
sub
push
jg
fmul
pop
inc
div
iret
pop
ja
jno
inc
mov
inc
or
fbstp
call
out
adc
inc
xor
cmps
mov
push
mov
sbb
push
fidivr
(bad)
popf
(bad)
imul
cld
out
mov
aaa
sar
mov
std
inc
lods
cli
aaa
push
aam
xor
or
outs
jae
pop
pop
jle
pop
jmp
outs
cmp
mov
cmp
mov
jmp
addr16
add
or
shl
dec
cmp
mov
pop
sub
cdq
xor
sbb
into
xchg
movs
repnz
mov
push
scas
mov
outs
out
out
mov
pop
scas
out
iret
jle
inc
pop
sar
int
pop
test
aaa
mov
jge
(bad)
mov
(bad)
cmp
fisttp
aaa
cmps
or
dec
movs
mov
jge
imul
data16
or
popa
inc
int3
push
sub
lods
dec
pop
add
ss
mov
push
mov
pop
mov
ret
in
(bad)
stc
sti
lahf
pop
pop
ins
cmp
dec
cmps
mov
in
rol
add
push
and
lock
add
and
add
mov
add
into
sahf
frstor
rcr
pushaw
int3
inc
loop
dec
mov
dec
out
movs
scas
retf
gs
jnp
jae
cdq
sbb
outs
imul
cmps
fwait
bound
cmps
(bad)
iret
xchg
in
add
and
push
add
or
xor
into
push
dec
leave
pop
and
xor
sub
arpl
out
sub
xchg
jbe
cmps
sbb
pushf
push
push
xor
retf
jae
mov
sbb
ds
iret
pop
pop
data16
jae
imul
mov
push
inc
mov
lds
add
xor
or
add
loope
adc
int3
sbb
cwde
xor
setp
addr16
xor
mov
xor
jnp
lock
inc
jmp
inc
mov
ins
out
test
stos
dec
ins
(bad)
icebp
ficomp
frstor
fwait
jbe
fnsave
stos
cmp
add
sbb
sub
aam
pop
sub
xor
data16
mov
ja
cld
aam
jnp
mov
int
and
and
imul
jbe
pop
lea
adc
scas
enter
mov
mov
out
jp
int
pushf
stc
pop
xor
mov
adc
jno
popa
sub
data16
sub
xor
push
retf
retf
out
inc
mov
loopne
xor
mov
jg
or
mov
jg
sub
out
mov
cli
lods
push
test
pop
mov
mov
jno
icebp
sbb
add
adc
sahf
jg
cmc
out
push
out
sbb
inc
mov
push
adc
xchg
pushf
ret
dec
call
popf
int3
cmps
adc
adc
cmp
sbb
mov
xchg
std
sbb
stos
mov
push
int3
int
popf
mul
inc
imul
mov
sti
adc
inc
push
out
push
retf
retf
lods
jne
aaa
(bad)
jp
rcr
mov
fsubrp
jl
pop
xor
or
xlat
fwait
scas
ds
dec
inc
(bad)
ficomp
popa
or
mov
push
xor
lods
push
jge
cdq
es
jno
fst
xor
and
or
enter
mov
(bad)
xchg
cmp
hlt
jle
xchg
stc
rcl
inc
xor
jmp
inc
jo
aam
outs
pop
or
movs
pop
fmul
fwait
sub
mov
(bad)
addr16
push
pop
test
inc
mov
test
jne
movs
sub
xchg
setns
mov
jecxz
lods
bound
es
int
out
pop
out
(bad)
mov
xchg
dec
lds
add
ficomp
enter
retf
std
ja
xchg
lock
mov
aad
shr
sub
sahf
das
xlat
jle
loop
fwait
sbb
jmp
dec
fistp
and
sbb
mov
jns
sub
adc
push
inc
jecxz
sub
imul
(bad)
aaa
aas
dec
(bad)
jge
iret
jp
cdq
pop
fisub
cmp
call
popa
pop
push
dec
stos
cmp
xor
les
fnstcw
popf
out
mov
pop
shr
out
iret
pop
jp
mov
pop
jp
xchg
adc
cdq
ss
fadd
add
imul
jp
xchg
mov
xlat
mov
adc
je
mov
cdq
dec
push
stc
mov
inc
repz
in
sbb
pop
mov
add
jp
xchg
mov
fisubr
mov
or
pop
popa
pop
jae
push
sbb
add
into
xor
hlt
das
push
mov
sbb
mov
ss
fsubp
pop
fnstcw
rol
jle
dec
mov
fimul
frndint
jg
sbb
xor
fidivr
test
pop
sub
fisubr
push
iret
pushf
jp
lds
cli
push
sahf
arpl
sbb
sub
int3
addr16
jle
(bad)
gs
addr16
mov
mov
push
add
mov
rol
call
retf
dec
adc
cmp
lahf
jbe
test
jmp
repnz
imul
xor
scas
(bad)
sahf
cwde
retf
xacquire
cmp
shrd
mov
xchg
push
push
dec
das
xchg
jae
mov
call
mov
mov
fprem1
dec
cmp
jno
jmp
dec
mov
push
ss
retf
dec
dec
daa
pop
test
mov
cmp
push
loop
adc
inc
cmps
call
and
hlt
das
and
mov
mov
fyl2x
aas
push
xor
cmp
outs
repz
cmp
int3
jl
aad
hlt
mov
jne
mov
neg
pop
bound
jp
cmp
fidivr
cdq
dec
jmp
hlt
stos
dec
fnsave
dec
mov
xchg
ss
popa
movs
mov
xor
pop
jmp
mov
or
or
sub
push
sbb
daa
and
mov
aaa
inc
mov
sar
aaa
xchg
mov
adc
fcomip
inc
shr
shl
ds
xor
bound
mov
iret
inc
bnd
fstp
push
(bad)
test
mov
pop
rcr
ins
outs
ja
sahf
idiv
sub
xchg
and
outs
jnp
mov
fsubr
test
jns
inc
adc
push
pop
aam
scas
movs
aad
jl
jmp
shl
loopne
idiv
pop
mov
jbe
cld
pop
pop
lds
cmp
fisub
dec
out
(bad)
and
mov
cmps
xor
mov
xor
xchg
lahf
pop
xchg
mov
imul
cmps
dec
sbb
adc
imul
mov
cmps
fld
outs
fpatan
and
jno
iret
xchg
mov
mov
imul
in
adc
test
inc
leave
cli
or
scas
cmp
sub
mov
rol
jb
mov
stos
cmp
xor
mov
ins
or
pushf
imul
fmulp
xchg
pop
repnz
sbb
dec
xchg
xor
sub
aam
push
test
(bad)
jb
stc
pop
cdq
fsubr
sub
repnz
mov
(bad)
mov
or
mov
xor
mov
dec
pop
test
stos
fnstcw
stos
(bad)
test
jae
out
int3
fwait
call
mov
mov
cmc
cmc
std
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
add
aad
fs
add
pusha
fwait
dec
mov
iret
jnp
mov
add
(bad)
das
retf
aaa
lods
inc
add
add
add
mov
dec
jns
shl
add
add
movs
mov
hlt
repz
dec
add
add
or
aad
dec
sub
mov
hlt
jl
dec
aad
adc
xchg
and
mov
pop
sub
(bad)
(bad)
out
jp
sub
mov
add
add
mov
xor
fidivr
add
and
adc
fwait
loopne
pop
cmp
repz
jae
movs
and
add
cwde
add
(bad)
lods
int3
push
sub
(bad)
retf
dec
mov
and
sub
jmp
shl
cmp
add
add
lods
movs
jl
add
scas
push
pop
std
sbb
add
push
and
dec
add
and
adc
add
add
test
adc
nop
xchg
or
dec
sub
or
ss
pop
mov
inc
fadd
jp
dec
sub
mov
sbb
mov
adc
mov
add
lods
retf
mov
gs
fwait
in
inc
test
push
sub
jbe
mov
cmp
hlt
fsubr
imul
inc
mov
mov
add
mov
mov
cmc
mov
mov
lods
xor
fwait
dec
addr16
sbb
ins
mov
imul
in
jp
xchg
repnz
fs
rcr
xchg
jmp
cmp
mov
test
cmps
push
push
mov
fs
add
ds
stc
xor
shl
jmp
or
cmc
pop
in
xchg
add
jl
icebp
fnstcw
stc
in
stc
mov
stc
push
aas
push
xchg
sar
icebp
(bad)
out
dec
or
out
mov
outs
icebp
jns
leave
mov
jns
std
cmp
out
fild
add
icebp
jae
sbb
jge
mov
ror
push
(bad)
in
mov
in
add
pusha
adc
add
jge
xchg
mov
(bad)
jg
test
add
adc
jecxz
push
mov
int3
jb
push
push
cdq
repnz
push
pop
int3
out
(bad)
mov
xor
std
mov
sar
ror
mov
and
hlt
xlat
aas
aad
mov
(bad)
js
lahf
movhps
dec
popfw
sbb
imul
sbb
mov
lahf
dec
fstp
outs
(bad)
mov
jmp
jns
pop
mov
test
jae
rcl
xor
iret
xchg
cmp
jle
adc
cdq
(bad)
lods
ret
pop
xchg
jmp
xor
adc
pop
pop
pusha
xor
cli
cmp
mov
cdq
mov
mov
popf
cdq
cmps
xchg
cmp
scas
ds
scas
mov
jmp
adc
sbb
ja
push
add
(bad)
movs
cmp
xchg
mov
mov
in
cmp
push
outs
cmp
sti
sbb
sbb
add
add
add
add
add
add
add
push
pop
(bad)
fiadd
or
add
add
add
add
cwde
add
adc
add
or
add
add
or
dec
mov
rol
add
add
mov
retf
out
add
add
add
hlt
cwde
fwait
jp
inc
mov
add
add
add
fnstsw
scas
xor
dec
adc
add
add
fdivr
(bad)
lods
cmp
pop
shl
js
add
add
push
inc
pop
and
jle
jle
xchg
iret
xchg
add
mov
lds
and
add
add
and
mov
mov
cmps
or
add
add
mov
lock
(bad)
je
mov
add
sub
sub
sub
cld
pusha
add
add
xor
aad
inc
add
add
add
mov
add
sbb
mov
add
dec
dec
aam
mov
shl
inc
pop
movs
enter
cmp
jb
dec
and
inc
push
dec
(bad)
and
ja
lea
dec
adc
mov
es
hlt
sbb
jne
int
or
cmp
jle
loopne
les
lods
fisubr
add
hlt
jmp
jecxz
adc
dec
xchg
out
hlt
lods
(bad)
lods
repnz
push
imul
ins
jmp
shl
jno
jecxz
in
mov
lock
aas
xor
inc
push
adc
rcl
popf
xor
jecxz
test
mov
enter
idiv
mov
inc
adc
mov
xor
(bad)
mov
pusha
je
hlt
retf
ret
fisub
and
jbe
jns
sbb
inc
rcl
add
cmc
(bad)
push
lock
pop
jp
leave
out
std
xor
(bad)
sub
into
lahf
stos
ins
stc
outs
mov
mov
add
scas
inc
jae
loope
jns
pop
fsubr
dec
in
repnz
sets
out
mov
mov
pop
xchg
sub
add
add
ins
aad
sar
int
ret
loop
jae
js
add
add
dec
dec
xchg
jp
adc
jl
add
rol
sar
repnz
add
es
inc
cwde
xchg
inc
jmp
xchg
sbb
inc
repz
sbb
or
dec
cmc
mov
cdq
fbstp
scas
xor
jecxz
stos
leave
leave
hlt
pop
aas
push
add
into
(bad)
in
imul
popa
jmp
bound
lahf
jp
jp
sbb
add
in
das
mov
ror
or
cld
cld
and
hlt
in
mov
lods
out
out
jns
adc
outs
pop
loop
movs
mov
adc
(bad)
dec
mov
hlt
cld
cld
jb
mov
shr
or
jmp
pop
mov
mov
xchg
in
cmp
pop
arpl
fnstcw
outs
stos
cld
into
scas
aaa
mov
scas
xlat
mov
push
cdq
and
lods
out
push
sar
inc
imul
mov
dec
mov
rol
inc
add
add
add
add
add
add
add
adc
push
adc
adc
and
pop
adc
inc
and
push
and
ss
and
inc
inc
inc
push
pusha
popa
jno
fiadd
or
add
add
add
add
inc
aad
push
pop
lods
push
stos
push
stos
aad
inc
enter
hlt
fs
xchg
outs
aad
lahf
ror
call
adc
(bad)
aad
inc
es
fisttp
xor
add
add
xor
lods
inc
leave
sub
ins
pusha
es
mov
in
je
add
pop
mov
lods
inc
shr
pop
adc
xlat
inc
mov
aad
mov
mov
and
pop
mov
add
pop
rol
(bad)
outs
push
pop
out
(bad)
push
add
sbb
cmps
(bad)
mov
outs
xchg
and
xchg
sbb
les
imul
mov
stos
dec
push
jg
sbb
fadd
and
pop
shr
repz
pop
xor
and
pop
call
xchg
test
rcr
xlat
hlt
adc
sub
pop
sub
lods
or
lods
or
push
test
inc
mov
stos
imul
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
icebp
inc
push
jne
push
push
mov
inc
lods
push
stos
cmp
in
shr
int3
je
sbb
or
scas
sub
xor
cmp
dec
cwde
jp
mov
mov
shr
jmp
xor
mov
or
pop
sub
cmp
stc
mov
xchg
inc
in
out
push
pop
mov
inc
push
and
mov
jmp
dec
inc
push
or
dec
push
or
movs
and
popf
inc
dec
and
inc
dec
cs
pop
mov
popf
stos
scas
scas
add
test
ret
aam
pop
das
retf
pop
adc
imul
out
add
fistp
inc
push
stos
mov
jb
sbb
xor
jae
movs
or
xchg
sbb
inc
cmp
sbb
xchg
outs
and
sahf
push
push
cmp
inc
or
add
aas
inc
jmp
add
sub
inc
mov
daa
mov
and
clc
clc
fstp
js
adc
push
pop
pop
loop
aam
xor
int
pop
mov
push
xor
inc
adc
push
push
js
pop
pop
mov
xchg
js
add
sahf
sbb
pop
mov
test
xor
pop
jle
add
es
cmp
sbb
inc
sbb
cmps
ja
mov
and
fnstenv
inc
andps
or
cmps
xchg
aas
inc
jmp
add
sub
ret
jmp
pop
ss
inc
sub
repnz
test
jne
or
pop
arpl
ins
ins
xchg
add
xchg
push
call
enter
sub
call
imul
imul
lea
sub
mov
aas
add
xchg
xlat
(bad)
into
int3
popf
cmp
pcmpeqd
xchg
jmp
cvtpi2ps
inc
xor
cmp
cmp
inc
add
adc
inc
mov
cmp
lods
xchg
mov
pusha
repz
pop
xchg
add
xlat
sahf
aad
jg
dec
mov
sbb
xchg
dec
xchg
mov
shl
inc
mov
pop
jl
mov
retf
sbb
mov
push
das
retf
fld
scas
push
popf
in
add
jmp
pushw
stc
pop
sub
push
outs
xchg
or
push
cmc
dec
call
add
loopne
sub
sar
cdq
repnz
sar
ret
es
sar
push
(bad)
stc
test
add
dec
mov
out
inc
xor
push
rcl
dec
cmp
mov
xchg
inc
stos
xchg
in
aad
mov
sub
mov
sti
cdq
(bad)
imul
push
popf
xor
lahf
mov
lea
adc
xchg
or
clc
adc
sub
iret
call
es
push
sub
mul
imul
jne
cmc
and
dec
sar
out
aaa
pop
in
mov
mov
(bad)
in
lahf
in
or
(bad)
push
das
retf
fucomi
sbb
ficom
push
jge
ja
ds
or
add
inc
mov
mov
mov
outs
xor
test
pop
es
imul
rol
fist
and
dec
cmp
xlat
inc
rcl
sahf
scas
js
xor
xchg
dec
pop
in
ror
jne
out
lods
jg
mov
jle
mov
mov
cmp
jp
push
jle
cmc
push
jl
mov
ins
pop
add
pushf
fbstp
gs
and
out
pop
push
adc
jno
cmp
loop
fsub
xchg
outs
int
scas
pop
or
std
or
inc
jno
push
cld
jle
mov
inc
jmp
stc
jnp
leave
sti
sub
and
lock
in
fistp
shl
push
movs
sub
mov
cli
jne
lods
push
stos
push
stos
aad
mov
pop
inc
lock
sub
sar
xor
fidivr
adc
xlat
cmc
sbb
push
cmp
inc
dec
rcr
popf
push
cli
mov
xchg
mov
mov
mov
push
fild
ins
fdiv
xchg
sub
arpl
daa
pavgw
aaa
jnp
in
loope
daa
mov
movs
push
aaa
sub
imul
mov
xlat
mov
push
fidiv
pop
aad
cwde
fist
scas
movups
aad
jmp
(bad)
in
adc
test
scas
mov
mov
in
push
jl
scas
push
cmp
dec
sub
mov
and
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
scas
outs
stos
pop
int
stos
push
stos
xlat
mov
stos
aad
fldcw
xlat
cmc
xchg
push
inc
adc
in
cmp
sub
call
xor
inc
ret
cmp
push
jl
cld
jmp
imul
mov
clc
mov
xchg
cmp
dec
push
inc
cmp
fild
jns
or
arpl
cmp
outs
retf
jo
jge
aaa
stos
push
jge
int
xchg
xchg
lds
xchg
xchg
scas
sbb
pushf
loope
ins
adc
xchg
jecxz
xchg
xchg
cs
ret
into
les
mov
push
cli
adc
mov
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
pop
ror
nop
lea
push
enter
inc
mov
dec
xlat
jae
mov
sub
call
add
mov
pop
adc
pop
push
cmp
mov
or
cmc
or
pop
out
sub
pop
popf
push
cmc
in
jl
std
adc
test
mov
inc
cld
mov
cwde
in
dec
jns
push
mov
imul
jmp
mov
fwait
sbb
push
cdq
xchg
fwait
retf
retf
mov
ja
cdq
push
pop
loope
push
xchg
addr16
repnz
pop
ss
xchg
fwait
mov
mov
pop
mov
dec
or
fsub
fcomp
outs
push
sub
lds
cmp
sbb
pusha
xor
mov
arpl
push
mov
push
mov
xchg
cmc
retf
jp
cmc
mov
arpl
(bad)
lods
(bad)
pop
sbb
cmp
mov
arpl
(bad)
lods
(bad)
pop
push
mov
ins
jp
cmc
mov
arpl
(bad)
lods
(bad)
pop
push
mov
ins
jp
cmc
retf
jp
mov
pop
mov
xchg
jb
pop
test
sub
xchg
jb
pop
mov
icebp
pop
cmp
popa
repnz
pop
lods
push
mov
fs
je
(bad)
repz
(bad)
inc
aad
cmps
pop
lock
cli
stc
(bad)
sbb
jg
popf
adc
aad
pop
inc
pop
inc
dec
hlt
pop
mov
cmp
sti
(bad)
fsub
(bad)
sub
call
(bad)
movs
outs
push
sbb
mov
push
int3
outs
arpl
fs
or
or
gs
popa
mov
dec
retf
jo
addr16
cmps
jl
dec
dec
mov
xor
fdiv
(bad)
mov
mov
sbb
les
sbb
out
in
scas
ror
jne
scas
cli
mov
jle
cmovne
adc
mov
push
xchg
sub
push
cmp
add
stos
aad
mov
lods
push
mov
pusha
test
push
inc
and
push
std
sub
pop
dec
jae
ficomp
xchg
sahf
mov
jmp
mov
cmps
in
dec
inc
sub
retf
pop
daa
outs
pop
mov
dec
xor
and
mov
ret
cmp
daa
arpl
imul
out
cli
mov
xor
inc
mov
lods
repz
inc
mov
xchg
xchg
sub
sbb
mov
sub
js
inc
xor
push
idiv
dec
retf
and
xchg
cmp
push
je
jne
scas
cli
mov
inc
push
pop
shl
xchg
shl
ja
cld
pop
sti
jecxz
adc
out
shl
ds
(bad)
outs
mov
sub
lods
fst
xchg
inc
movs
data16
fmul
daa
pop
jg
std
xchg
je
xchg
adc
inc
sar
adc
icebp
in
mov
push
fcom
lea
add
jnp
sub
sbb
fwait
xchg
mov
jne
sub
cld
push
dec
or
jge
xchg
lds
sahf
hlt
sar
scas
push
arpl
mov
mov
test
lds
jmp
push
xchg
js
xchg
movs
fadd
ins
sbb
int3
lock
and
stos
imul
sbb
inc
push
pop
shl
fwait
sar
jg
jl
sti
jecxz
adc
out
ret
pop
hlt
push
es
pop
xchg
xchg
mov
idiv
lea
movmskps
jno
pop
sar
add
sbb
stc
sub
ficom
xchg
call
clc
jbe
stc
cmp
scas
pop
mov
jmp
cmc
mov
ins
mov
mov
jb
test
test
pop
xlat
cs
mov
gs
in
scas
cmps
sbb
in
mov
or
test
ja
pop
jl
std
pop
cld
pop
cmp
pop
mov
(bad)
aas
call
aas
or
jp
sub
cli
dec
push
js
in
xor
adc
enter
leave
inc
jmp
jmp
push
icebp
in
mov
jbe
xor
repz
fld
pop
mov
lods
xchg
cs
jno
aas
das
xchg
(bad)
lds
pop
xchg
mov
xchg
sub
iret
in
out
jp
(bad)
push
out
inc
fistp
mov
inc
fimul
sbb
sbb
or
push
cmps
cdq
scas
cmps
mov
inc
imul
jl
aad
hlt
sbb
sub
psubb
add
jle
jg
inc
cdq
repnz
sbb
jp
xlat
or
fbld
aad
out
aas
inc
mov
dec
mov
cmp
cmc
ja
popf
pop
in
cmc
pop
mov
hlt
fcomp
mov
popf
mov
sbb
fld
icebp
cmp
mov
bound
sub
xchg
cmp
push
or
jbe
popf
cdq
push
jae
ds
mov
push
aam
push
aaa
ins
lods
jb
jp
dec
jmp
fnsave
test
ja
pop
ds
retf
repz
icebp
jg
(bad)
rcl
mov
call
aas
lods
jle
mov
sbb
mov
pop
test
pop
fisubr
mov
xchg
sub
xchg
xchg
jp
mov
jb
inc
push
ror
pop
(bad)
mov
enter
inc
sbb
pop
test
dec
mov
mov
lods
jno
jl
mov
push
ret
(bad)
mov
cwde
clc
sub
jle
into
jnp
jmp
push
fld
xor
hlt
rcl
rcr
mov
scas
test
push
out
stos
pop
add
push
mov
dec
and
cld
dec
jle
mov
or
call
lahf
and
test
dec
neg
jmp
sar
push
shr
lahf
sub
jle
gs
out
leave
cmp
leave
inc
jmp
jmp
sbb
movs
imul
fld
in
fwait
loope
shl
imul
dec
jecxz
lods
cld
fs
xchg
repnz
fisttp
ss
dec
jae
pop
cli
inc
push
imul
xchg
cwde
stos
mov
shr
pop
mov
dec
outs
inc
(bad)
jne
repnz
add
jmp
pop
and
loop
jp
cmp
aam
mov
push
outs
inc
lahf
adc
ror
inc
adc
das
mov
jle
pushf
popf
xlat
hlt
arpl
and
fdivr
pop
cli
jmp
mov
xor
jb
push
push
jbe
sar
pop
push
jmp
dec
cs
clc
test
fbstp
in
test
sub
dec
sbb
pop
rcr
or
cmps
jo
cmp
dec
shr
ds
lds
in
mov
call
imul
retf
pop
push
lock
push
js
ins
pop
das
jns
adc
ss
(bad)
in
sbb
(bad)
cmp
pop
cmps
test
mov
cmc
arpl
test
les
scas
mov
loop
add
jne
sti
lods
ja
inc
cdq
repnz
pop
std
push
pop
sar
pop
jp
ja
cmp
inc
in
xor
fldcw
bound
scas
in
xchg
mov
aam
sbb
push
(bad)
(bad)
call
psrad
ins
icebp
test
int3
int
mov
push
int
imul
adc
pop
in
shr
push
fmul
ret
adc
push
sub
rcl
(bad)
aas
or
into
sbb
int3
xchg
int
xchg
ins
gs
pop
adc
mov
push
test
mov
call
cmp
arpl
mov
outs
jmp
aas
int
(bad)
jbe
inc
dec
dec
jmp
xor
inc
adc
adc
arpl
cmp
jmp
xchg
cmps
jmp
icebp
mov
mov
leave
cmp
leave
inc
jmp
loop
mov
push
test
adc
sbb
loopne
jne
outs
or
jne
fwait
cmp
out
adc
jge
popa
sub
lods
out
imul
int3
loopne
scas
and
ret
mov
jo
or
xor
addr16
leave
mov
mov
int3
hlt
lods
addr16
mov
xchg
int3
in
repz
xchg
xchg
adc
xor
int
mov
cmp
out
sbb
ds
aad
cmp
fiadd
xchg
jge
and
xor
pop
std
fdivr
add
jle
and
outs
pop
sar
fcom
sar
bswap
lds
scas
and
cmc
jb
dec
mov
push
cli
(bad)
push
hlt
outs
imul
sub
push
aas
mov
into
or
and
adc
add
ret
push
xor
cs
sbb
icebp
scas
jmp
inc
lods
inc
jb
mov
xchg
loope
mov
jge
clc
sbb
loopne
stos
mov
iret
mov
gs
jg
aas
int
(bad)
jbe
inc
dec
dec
jmp
xor
or
aaa
das
imul
mov
pop
cmps
sub
jns
inc
repnz
jge
fldenv
inc
stc
sub
test
aaa
mov
jno
in
ret
mov
aas
xor
sub
xchg
mov
sub
sub
xchg
mov
and
dec
pusha
dec
sbb
xlat
mov
push
ds
stos
jp
clc
xchg
ds
push
jp
dec
(bad)
js
das
sti
rcr
dec
dec
jmp
xor
adc
outs
pop
sar
add
fidiv
(bad)
enter
inc
jecxz
call
push
out
(bad)
sub
pop
in
cmc
push
mov
mov
sub
push
(bad)
sub
jmp
dec
ror
int
mov
mov
stos
push
mov
stos
push
mov
push
mov
ins
inc
and
clc
and
pop
cli
dec
push
(bad)
pop
xchg
xchg
mov
out
mov
lahf
or
ret
scas
jl
lahf
or
ret
scas
jl
cmp
adc
xchg
mov
les
retf
fidivr
cmp
(bad)
fnstenv
cmps
test
xchg
inc
repnz
aad
(bad)
push
cmc
cmovbe
xchg
outs
(bad)
sub
xchg
push
rdpmc
sar
je
sub
shr
pop
sub
push
inc
imul
lea
movs
loope
mov
sub
lea
push
stos
mov
into
ret
aam
inc
out
add
ja
mov
sbb
(bad)
ins
iret
movs
xchg
push
mov
mov
jne
mov
inc
mov
scas
repnz
(bad)
hlt
clc
scas
adc
imul
pop
jbe
out
imul
push
jmp
daa
retf
or
ins
jb
jge
dec
aas
dec
and
fdivr
or
mov
push
xchg
shld
inc
(bad)
cli
mov
push
cli
(bad)
push
hlt
outs
imul
sub
push
aas
adc
lock
cmp
ds
mov
ret
push
test
jae
push
sti
dec
rol
lods
ins
mov
xor
jp
push
movs
movs
add
mov
fiadd
cmp
fld
mov
int
pop
ins
mov
leave
xchg
je
and
sub
(bad)
retf
jp
hlt
loopne
test
sub
ins
fst
loop
div
imul
sahf
sti
mov
push
out
inc
leave
mov
xchg
or
xor
hlt
pop
out
popf
mov
mov
ret
dec
pop
call
sbb
dec
shl
das
mov
sub
pop
test
retf
pop
adc
pop
add
inc
aaa
cs
or
and
push
lods
in
sbb
sbb
inc
pop
xchg
jle
xchg
mov
cwde
in
daa
dec
mov
cmp
mov
imul
dec
sar
pop
push
jmp
mov
call
stc
lahf
lods
jge
cmp
mov
mov
mov
push
les
in
adc
mov
mov
ins
inc
popf
push
les
aad
pop
cmp
lds
loop
xchg
fsubrp
xchg
push
pushf
mov
fbld
pop
sub
adc
pop
inc
pop
xor
xor
push
pop
or
call
test
mov
push
pop
jge
fcomp
js
dec
mov
inc
sbb
xlat
dec
dec
xchg
popf
pop
and
(bad)
in
mov
cld
movs
jb
xchg
jns
xor
arpl
cmp
aam
repnz
pop
in
mov
stc
add
(bad)
jns
je
xchg
jg
lea
mov
jb
mov
xor
sub
push
hlt
pushf
mov
pop
scas
scas
inc
dec
sar
pop
push
jmp
hlt
aam
mov
movs
pop
jae
lods
scas
(bad)
movs
cmps
add
jne
imul
in
push
xlat
es
sub
sbb
sbb
mov
xchg
ret
dec
fsub
mov
push
mov
je
cwde
inc
mov
mov
jno
jbe
icebp
mov
mov
in
inc
in
pop
ja
xor
adc
(bad)
pushf
imul
cld
cmps
test
sub
xor
add
push
mov
inc
imul
in
cmp
in
cmp
sbb
(bad)
ins
sub
inc
aaa
sub
in
or
adc
push
mov
retf
jb
outs
in
arpl
xor
xor
ret
sub
xchg
cmp
test
push
rol
jecxz
jg
adc
lock
repnz
shr
and
cmc
cmovbe
xchg
ja
cwde
shl
push
std
push
test
add
out
xchg
dec
sbb
fisub
xchg
stc
jle
fs
or
xor
mov
xor
out
mov
cmp
sti
mov
mov
add
push
dec
push
and
inc
pop
adc
loopne
inc
sub
movlps
adc
movs
lock
scas
das
cmp
and
xchg
push
inc
and
push
pop
js
mov
pop
jl
sbb
jbe
pop
add
in
jbe
add
jno
mov
mov
pop
test
mov
aaa
shr
xchg
lods
adc
in
mov
fild
inc
stos
inc
clc
adc
xchg
adc
call
or
jg
and
pop
jle
adc
ins
clc
test
aas
rcl
std
fiadd
inc
sub
neg
hlt
or
aad
test
jmp
add
mov
mov
clc
test
jmp
xchg
call
inc
sbb
cli
js
mov
(bad)
push
arpl
pop
mov
dec
mov
mov
mov
push
cmp
in
push
mov
push
inc
cmp
push
inc
sub
inc
push
jb
fisubr
aas
push
sub
arpl
arpl
sub
retf
inc
push
mov
and
dec
jno
out
cmps
aas
ret
idiv
jle
jne
xchg
ins
or
inc
adc
xchg
jb
stos
push
add
adc
push
inc
cmp
xchg
xor
cmp
imul
movs
imul
mov
add
push
push
rol
(bad)
sub
rcr
(bad)
pop
call
inc
lods
add
mov
mov
cmp
cmp
mov
mov
sub
xchg
(bad)
xor
mov
push
mov
(bad)
hlt
fsubr
lea
add
mov
push
jp
push
je
imul
push
hlt
sbb
iret
push
imul
dec
clc
inc
addr16
adc
dec
add
movs
xor
stos
rol
fidivr
into
pop
sub
push
mov
cli
pop
xlat
mov
sbb
popf
xor
jns
jg
addr16
jge
int
stos
push
stc
fcom
jnp
jbe
pop
sahf
aas
xchg
pop
xchg
retf
repz
(bad)
pop
xchg
sar
(bad)
mov
mov
mov
mov
pushf
sub
xor
mov
sti
or
cmp
cmps
arpl
sub
out
test
imul
lea
lods
aas
jnp
dec
bnd
push
xchg
fild
inc
mov
lock
mov
xchg
fstp
push
xlat
fucomp
mov
in
jbe
pop
xor
sub
or
mov
jnp
mov
rcl
sbb
sahf
stos
sbb
js
and
clc
nop
pop
cmp
pop
cmps
cmps
inc
adc
and
add
aam
push
cmp
jmp
dec
loop
sub
push
das
xor
pop
cdq
aaa
jb
and
jnp
js
mov
mov
gs
adc
stos
frstor
sub
test
enter
popa
out
aam
cmp
scas
aam
xor
mov
int3
or
iret
add
pushf
mov
loopne
or
mov
cdq
cmp
int3
popf
mov
mov
xchg
mov
sub
push
outs
ficom
movs
fbld
fbstp
push
push
mov
adc
push
aad
jno
push
dec
jbe
mov
mov
sub
mov
cmps
(bad)
xor
cmps
outs
ja
(bad)
hlt
cmc
push
in
retf
sbb
clc
add
out
gs
mov
pop
lods
dec
pop
jle
push
cmc
pop
mov
pop
sti
fdivr
aad
loop
cld
shr
aas
xor
xchg
push
mov
or
movs
mov
hlt
mov
pop
popa
jmp
jo
mov
in
inc
pop
dec
out
stos
(bad)
ins
inc
mov
pop
dec
sbb
sahf
pop
rol
jge
fs
xor
nop
movs
sub
div
pushf
pop
stos
imul
mov
and
mul
fdivp
stos
fcomp
sbb
ss
stos
pop
adc
scas
cdq
js
push
stos
mov
fsub
retf
mov
je
fld
fdivr
cld
mov
clc
pop
lea
mov
ret
push
lahf
mov
mov
cmp
sub
and
cmp
sbb
mov
ror
sahf
cwde
ss
fsub
pop
jb
in
jo
mov
imul
adc
ret
(bad)
ds
lahf
je
pop
pop
call
scas
push
xor
mov
out
adc
cld
scas
pop
ret
mov
pusha
lods
imul
push
or
fwait
data16
adc
es
stos
aam
sbb
push
ret
loop
sub
push
aas
mov
mov
popf
jmp
mov
(bad)
hlt
jle
push
sbb
jmp
mov
sbb
push
enter
stc
push
mov
and
jae
pop
stc
sub
adc
fisttp
imul
jae
ror
cmp
mov
jae
mov
mov
aam
into
push
mov
jecxz
xchg
(bad)
cmp
fnstsw
jno
mov
retf
inc
jo
adc
leave
idiv
popf
sahf
jns
and
mov
mov
cmp
out
jb
daa
outs
sar
mov
mov
xor
movs
sbb
jno
mov
out
loopne
xchg
dec
dec
out
adc
pop
or
js
dec
sbb
or
je
and
jne
outs
push
push
stos
cmp
inc
test
lock
lods
je
aad
push
cmp
enter
push
das
jmp
adc
dec
adc
bound
cmp
mov
or
inc
ss
lds
fs
pop
aad
and
dec
jb
adc
and
fstp
jp
aad
dec
jno
and
pop
(bad)
loope
popf
lock
loopne
stos
jne
scas
(bad)
(bad)
fidivr
mov
inc
fsubrp
cwde
adc
or
pop
ins
not
inc
call
add
pop
and
inc
push
push
sub
xor
lods
lds
int3
out
mov
div
dec
daa
ss
jno
fwait
push
fisttp
jb
push
adc
xor
in
enter
nop
pop
(bad)
mov
pop
loop
xchg
nop
cmps
xchg
out
aam
retf
es
dec
sub
(bad)
mov
xchg
push
push
mov
bound
(bad)
retf
and
les
push
loopne
cdq
sub
aas
push
into
pop
ss
fild
or
ss
xor
jp
push
lahf
cmp
push
stos
and
inc
fwait
mov
cmps
lahf
sub
push
in
inc
stc
push
xchg
inc
enter
cdq
lahf
sub
loop
fxch
int
aas
das
jbe
das
jo
sub
into
jb
xor
inc
cmps
sbb
push
mov
rcl
int3
push
loopne
hlt
pop
mov
cld
adc
sbb
imul
hlt
in
popf
fs
push
in
mov
shr
cmp
ja
jmp
gs
dec
and
inc
test
jb
pop
js
add
sub
and
xor
add
jb
cs
imul
movs
retf
jno
(bad)
inc
adc
sub
xor
fnstenv
sub
cmp
and
mov
test
sub
add
outs
sar
mov
mov
lock
mov
dec
cmp
or
fwait
inc
jne
mov
pop
xchg
dec
and
lods
ja
push
std
adc
mov
nop
ins
push
mov
aad
loope
inc
out
dec
jnp
sub
inc
dec
push
inc
out
sbb
(bad)
ins
das
jle
(bad)
cmp
pushf
out
loope
mov
jg
test
(bad)
out
scas
rol
pop
inc
cmp
jl
pop
sub
fcmovb
sbb
push
dec
xchg
lods
xor
call
(bad)
cs
cmp
stos
out
or
mov
adc
add
gs
inc
ss
loop
cmp
lahf
xchg
lods
adc
in
jno
pushf
aam
sub
ss
mov
repnz
fwait
pusha
mov
bound
xchg
shl
ins
icebp
jnp
div
loop
mov
jne
cmp
mov
cmp
ret
mov
cmp
xor
inc
cmps
ds
or
adc
mov
pop
jl
mov
jo
cli
xor
cmp
popf
sub
push
hlt
push
and
add
pop
out
mov
lock
scas
mov
and
xor
mov
iret
sbb
pusha
fistp
sub
and
push
mov
mov
arpl
bound
mov
pop
(bad)
out
test
iret
adc
adc
(bad)
mov
sbb
jne
into
fisttp
in
cmc
cdq
ja
cmp
repnz
clc
fcomp
in
imul
adc
in
sub
add
and
inc
jbe
push
mov
adc
mov
popf
retf
xchg
movs
cmps
mov
fidiv
mov
xchg
mov
xchg
ror
loope
xchg
imul
addr16
lds
adc
cmc
or
pop
mov
cmp
mov
push
scas
mov
nop
dec
xchg
dec
jp
xor
fdiv
xchg
popa
retf
ja
pop
scas
clc
in
leave
or
lds
add
shr
ss
jo
das
or
push
jo
jbe
call
push
xor
fst
xor
cmp
adc
ja
fs
loope
mov
je
int3
mov
in
ins
dec
mov
sbb
add
jp
(bad)
jae
lods
ret
cmp
dec
xlat
cmp
in
jne
lods
rol
addr16
fbstp
jb
sbb
cld
fnstenv
pop
in
jp
test
imul
pop
or
leave
popa
adc
mov
sbb
push
(bad)
popf
pop
pop
jl
(bad)
lahf
sub
or
enter
xor
pop
mov
lock
lock
push
stos
fcmovbe
mov
bound
leave
retf
(bad)
jae
dec
clc
in
dec
mov
xlat
neg
mov
repz
sbb
sar
and
rcr
xor
fdiv
inc
or
push
ror
dec
imul
cmp
xor
ins
repnz
mov
sub
mov
inc
sub
dec
push
xchg
sbb
icebp
dec
sbb
fwait
jle
xchg
inc
xchg
lods
inc
fisttp
imul
scas
dec
neg
mov
es
and
test
dec
lods
lods
test
cmc
mov
mov
(bad)
out
mov
dec
ret
push
lock
mov
mov
popf
and
mov
(bad)
pop
mov
inc
push
(bad)
xor
cmp
test
xor
inc
enter
xor
les
push
(bad)
jno
mov
xor
lods
dec
retf
pushf
sbb
xor
cmp
mov
inc
dec
(bad)
mov
and
jge
push
mov
push
jge
lock
jae
mov
imul
and
inc
pop
bound
les
mov
test
sub
lods
push
sub
scas
into
ror
int3
bound
fstp
or
push
mov
mov
adc
frstor
push
fs
pop
test
fimul
fs
lea
je
or
ret
dec
pusha
pop
fwait
mov
(bad)
and
or
xor
mov
movs
(bad)
push
mov
int
push
lahf
movs
retf
(bad)
retf
mov
ror
jno
daa
cld
mov
push
stc
in
xor
ss
sub
test
movs
bound
enter
jno
imul
jl
jp
adc
or
shr
retf
ret
repz
inc
popa
out
adc
adc
or
add
test
enter
push
mov
add
or
jo
in
fwait
pop
arpl
xor
or
mov
out
push
xor
and
loope
jmp
(bad)
pop
xchg
and
outs
psraw
add
push
sub
mov
mov
cmp
loop
es
adc
mov
dec
je
(bad)
push
nop
out
je
pusha
scas
inc
loopne
ds
stos
mov
mov
cli
jmp
push
test
adc
test
sar
xchg
imul
mov
xchg
fst
sbb
xor
out
sub
out
push
call
daa
js
mov
xchg
push
pop
and
push
fcomp
pop
push
popa
sbb
dec
cmp
adc
popa
xchg
les
out
pushf
push
and
jp
push
sbb
loope
xor
jo
(bad)
leave
add
(bad)
imul
and
cmp
mov
cmp
out
dec
push
mov
cmp
cmp
cmp
jmp
cwde
jge
and
push
imul
jmp
adc
and
fcom
dec
and
mov
movs
xchg
dec
xor
mov
fidiv
cwde
jmp
neg
sub
(bad)
outs
jle
sub
fwait
and
sub
(bad)
retf
mov
sub
out
jo
adc
out
lds
imul
das
iret
dec
pop
pop
cmc
mov
pop
jle
sti
mov
inc
mov
xor
fxtract
loop
xor
(bad)
sar
retf
add
fcom
jle
xor
add
fldlg2
shr
mov
cs
outs
mov
dec
fist
mov
inc
aad
ja
gs
and
fldenv
repnz
xchg
jo
pop
sahf
dec
aad
ds
lock
mov
(bad)
gs
imul
inc
push
popf
add
daa
pop
pop
push
jno
mov
push
xchg
jb
mov
and
cmp
mov
lock
xchg
arpl
mov
stos
cmp
lods
sbb
mov
push
xchg
jb
mov
cmp
push
pop
in
lods
mov
xlat
jnp
mov
retf
shr
mov
call
adc
jo
mov
mov
mov
scas
and
pop
pop
loop
xchg
daa
xor
xchg
ja
rcr
mov
rcr
cdq
push
fild
mov
in
xor
fwait
push
xchg
cmp
inc
imul
arpl
dec
imul
pop
cmp
push
xor
fs
ret
mov
out
mov
lahf
movups
popf
xchg
fild
pop
sub
adc
cmp
imul
fldcw
iret
jle
add
mov
popf
sbb
mov
jl
out
in
adc
lods
push
sub
pop
xlat
je
js
push
add
fimul
dec
sar
push
fs
lea
rol
les
adc
push
fnstcw
arpl
ss
lea
jnp
xchg
cmp
leave
cdq
pop
std
fist
test
jmp
loop
cmp
xchg
push
(bad)
pop
xchg
pop
outs
jo
int3
xor
pop
push
push
fld
gs
ret
mov
cmp
add
pushf
push
mov
gs
mov
(bad)
idiv
not
mov
jne
call
mov
jmp
out
mov
out
jmp
pop
and
call
mov
clc
pop
and
in
movs
add
pop
xchg
jne
ja
xlat
jno
cmc
mov
loop
sti
popa
cli
mov
rcr
jbe
out
aad
fcom
adc
push
fcmovnb
lods
inc
and
push
mov
cs
mov
push
in
jg
in
(bad)
cmp
sub
cmp
out
push
mov
jnp
inc
push
(bad)
fstp
push
mov
in
int
mov
xor
out
(bad)
das
(bad)
mov
das
retf
mov
ficom
add
retf
pop
mov
aaa
in
push
lea
data16
imul
jns
aad
lock
push
add
rcl
out
arpl
xlat
mov
(bad)
dec
xor
mov
retf
(bad)
movs
(bad)
fisub
mov
not
mov
fmul
jno
icebp
ins
adc
imul
mov
sar
push
gs
enter
icebp
jne
outs
addr16
fadd
cmps
inc
fstp
int
mov
and
cmp
mov
adc
js
psubusw
test
fnstcw
inc
rcr
adc
adc
pop
adc
mov
inc
(bad)
int
outs
sbb
out
sbb
(bad)
and
fdivr
mov
lods
gs
or
(bad)
xor
rcr
aad
pop
lea
lds
pop
mov
xchg
xor
mov
jecxz
adc
dec
pop
(bad)
dec
fcmovbe
jns
(bad)
inc
(bad)
mov
dec
pop
or
bound
mov
push
cmps
pop
aaa
dec
inc
pop
mov
sbb
adc
out
(bad)
sub
mov
(bad)
xor
leave
push
mov
jnp
sbb
cmc
sbb
mov
shl
push
ins
cli
cmp
mov
mov
in
sbb
dec
add
hlt
loope
inc
mov
je
fnstenv
inc
cmps
popa
dec
imul
movs
push
inc
xor
clc
inc
fadd
fisttp
retf
mov
loop
cwde
rcr
cmp
and
mov
loopne
(bad)
mov
cmp
leave
(bad)
push
shl
ins
sbb
or
sar
jge
test
jl
inc
jmp
imul
mov
ja
out
inc
ret
sbb
addr16
sbb
push
out
cmp
imul
mov
add
dec
pop
or
sbb
sbb
fwait
jae
pop
mov
ins
jnp
mov
pushf
jge
adc
and
sub
movs
mov
or
fistp
leave
movs
cwde
leave
pop
mov
sub
inc
push
in
fcom
out
add
mov
das
shr
mov
lock
sub
fs
inc
(bad)
jns
mov
add
mov
out
xchg
fisubr
jnp
repnz
inc
enterw
iret
dec
jb
and
loope
ret
popf
(bad)
push
cdq
mov
push
leave
adc
mov
cmc
mov
(bad)
sub
mov
imul
lahf
lds
fistp
or
test
js
es
jno
ficomp
or
stos
xchg
inc
lock
pop
cmp
imul
scas
jge
dec
push
jle
jmp
cdq
or
mov
mov
shl
push
inc
push
loope
push
lahf
push
call
int3
ds
mov
sar
jg
or
pushf
sub
pushf
cdq
test
(bad)
ins
aam
jnp
(bad)
clc
int3
mov
xor
jno
and
or
ret
(bad)
mov
cmps
xchg
pop
push
sub
push
xchg
cmp
bound
jns
dec
mov
bound
mov
sub
fld
or
add
sub
xchg
jmp
stc
or
adc
iret
xchg
dec
jl
pop
cmp
inc
fdivr
jae
pop
pushf
loope
xor
popa
cmp
scas
(bad)
call
mov
xor
ins
ja
add
fnsave
not
sub
mov
js
xchg
cmc
cmp
mov
xchg
outs
(bad)
push
inc
lds
or
xchg
sub
(bad)
icebp
repz
cmp
nop
nop
inc
and
std
in
cmp
cdq
adc
loope
sar
ss
mov
mov
push
sbb
sahf
pop
stos
xchg
dec
outs
xor
pop
fisub
push
pop
out
mov
cmp
jnp
cmps
mov
jae
(bad)
mov
(bad)
loop
ret
push
sub
pop
pop
lahf
popa
or
in
jbe
out
inc
mov
cmps
enter
inc
pop
sbb
inc
lods
inc
lea
das
arpl
mov
cmp
lods
ins
fcmovu
cmc
xchg
xor
jbe
shr
pop
mov
jmp
out
xor
cmp
pop
xor
sbb
inc
out
loop
pop
sub
add
sbb
and
mov
(bad)
fs
cmp
jo
psrld
(bad)
xchg
sbb
int3
push
dec
sub
(bad)
adc
fnstsw
or
and
out
loop
aam
sub
mov
rcr
(bad)
fisttp
int
stos
sub
pushf
pop
push
icebp
dec
mov
call
rep
sbb
out
or
mov
shl
and
retf
jecxz
fsub
ins
cmp
imul
(bad)
es
mov
sahf
or
(bad)
cmp
jle
xchg
cmps
xchg
xchg
imul
rol
sbb
mov
xchg
jmp
call
lds
xchg
fs
mov
scas
mov
jno
mov
mov
inc
(bad)
fist
dec
pop
mov
xor
push
lock
mov
dec
push
arpl
arpl
mov
js
jmp
scas
cmp
pop
lea
icebp
adc
xchg
xor
in
xor
push
dec
repnz
rol
fs
xor
loopne
stc
ret
sub
add
mov
push
lds
aas
aam
test
push
inc
neg
and
fcom
jmp
jecxz
aad
mov
jg
push
xlat
push
out
cmp
mov
pop
xor
xlat
xchg
adc
pop
adc
pop
mov
bound
sbb
xor
scas
inc
iret
xlat
outs
addr16
retf
jns
std
mov
mov
(bad)
xchg
adc
dec
push
sbb
mov
ds
inc
push
ror
call
sub
cmp
in
or
fwait
sub
cmp
jbe
sbb
dec
loop
push
bound
out
lock
popa
mov
ins
cmp
ror
mov
out
repz
imul
dec
mov
aaa
xor
push
pop
mov
sbb
and
stc
mov
into
(bad)
cmp
cmps
out
out
int
mov
mov
and
int3
mov
sub
test
fs
dec
fst
in
addr16
data16
(bad)
loope
mov
jbe
ins
fmul
loopne
shr
push
jg
mov
xchg
mov
mov
popa
popa
mov
jb
daa
std
lea
loopne
jnp
pop
mov
std
rcr
fwait
sti
mov
add
hlt
rcr
mov
add
ds
in
test
aad
stc
jno
inc
(bad)
daa
cmps
clc
xchg
in
dec
push
jne
xor
xor
lds
mov
lock
jb
lods
inc
pop
jecxz
aaa
or
fs
ins
into
mov
mov
push
dec
arpl
aad
arpl
cmp
cmp
inc
dec
jb
outs
out
adc
(bad)
(bad)
(bad)
dec
iret
pop
dec
enter
xchg
cmp
xchg
rcr
sub
es
pop
inc
sar
xchg
mov
cmc
jg
retf
cmp
ss
or
mov
test
fsubrp
scas
test
mov
jns
mov
jmp
pop
js
sti
pop
mov
jmp
mov
fstp
ins
ror
dec
out
out
jp
push
cmp
outs
inc
cmp
lods
imul
(bad)
sahf
xlat
sar
and
push
mov
in
sahf
fwait
inc
enter
or
sbb
bnd
add
mov
mov
and
add
(bad)
fisttp
ret
mov
add
repz
xor
sbb
jle
repz
and
mov
dec
popf
dec
cmp
jmp
fwait
dec
call
repnz
stos
(bad)
xlat
mov
or
cld
xchg
mov
enter
mov
aam
mov
dec
push
xchg
xlat
clc
adc
cmp
lock
popa
cmp
cs
pop
retf
clc
pop
xor
aaa
rcr
pop
add
jo
jno
inc
js
xor
xchg
loop
pop
xor
test
aas
int3
push
mov
add
mov
add
int
loopne
fcomp
and
cdq
les
cmp
loop
es
data16
arpl
daa
fs
retf
out
dec
and
pop
int
shl
xchg
into
out
add
dec
cld
outs
xchg
or
pushf
iret
(bad)
sub
adc
add
je
scas
pop
xchg
int
push
mov
mov
xchg
aam
fsub
pop
adc
scas
sbb
ja
cmp
mov
xchg
fs
fmul
sub
mov
inc
mov
out
dec
jmp
push
jne
ja
xlat
jne
sbb
mov
xor
mov
jg
fadd
lds
sub
pop
aam
mov
inc
pusha
and
inc
and
sub
mov
dec
out
repz
call
ret
and
and
shl
icebp
addr16
cmps
retf
mov
out
pop
xchg
dec
mov
ret
xchg
(bad)
pushf
sub
sti
jns
scas
inc
ins
mov
scas
mov
test
(bad)
lea
lock
mov
jp
or
jno
or
fdiv
adc
mov
adc
jo
movs
fbld
jg
mov
xchg
jne
dec
mov
cmp
test
jne
inc
push
jecxz
adc
popa
test
icebp
outs
icebp
ja
scas
loop
or
js
add
popa
ret
retf
clc
ret
xchg
dec
(bad)
pushf
aaa
or
jge
jo
jg
aas
data16
add
ja
retf
imul
push
push
push
jb
mov
mov
cmp
mov
fsub
sub
ins
pop
lods
sub
mov
ins
or
xchg
pop
sub
push
ja
sub
std
(bad)
sub
ja
call
retf
push
push
inc
cld
ins
jnp
std
add
ja
jne
cmp
mov
imul
scas
daa
sub
pop
mov
in
leave
rcr
fidiv
mov
in
(bad)
jb
rcr
dec
not
stos
and
mov
push
sbb
add
imul
push
loopne
inc
jns
ja
lock
movs
mov
mov
cwde
mov
mov
dec
add
ficomp
and
imul
in
loopne
lahf
sub
add
scas
cmp
lods
loopne
nop
jmp
add
fucomp
pop
in
(bad)
icebp
push
push
jnp
mov
repnz
mov
jb
jmp
int
jl
outs
mov
pop
cmp
fldenv
dec
sbb
gs
iret
(bad)
sbb
outs
leave
(bad)
sbb
jno
pop
jge
aad
neg
mov
mov
ret
sbb
loop
mul
push
sub
div
fidiv
clc
int3
xchg
fdiv
rcr
mov
mov
fs
pop
jp
inc
or
or
mov
xlat
mov
stc
sub
sub
cwde
sub
mov
lahf
cmc
add
cli
call
pop
sub
cwde
push
pop
add
stos
aad
mov
(bad)
mov
push
mov
push
inc
cli
jge
sbb
lods
push
and
sahf
add
sub
das
push
jg
dec
test
xor
adc
repz
lahf
sar
icebp
cmp
mov
push
ds
dec
push
sti
movs
or
aaa
jo
push
faddp
out
pop
mov
or
outs
imul
neg
jl
sbb
scas
adc
dec
fs
jge
mov
cmps
sar
out
aad
jle
cmp
scas
sbb
outs
mov
mov
sar
scas
mov
div
sbb
cld
xchg
jno
mov
cmps
out
lods
loop
cmovae
dec
hlt
cmp
mov
cli
or
(bad)
mov
sar
push
mov
sub
(bad)
dec
mov
lods
popf
sbb
ins
cmp
dec
idiv
adc
dec
jl
cwde
pop
inc
stos
dec
jg
mov
ror
fsub
int3
sub
lods
imul
retf
sbb
xor
cmps
xchg
or
loope
scas
mov
dec
xchg
pop
or
pop
xchg
push
rcr
repnz
push
inc
clc
movs
sub
(bad)
inc
repnz
cmps
jne
pop
and
push
adc
lock
add
scas
mov
icebp
push
pop
push
stos
sub
scas
not
inc
mov
sub
pop
outs
jns
outs
push
gs
sub
and
pop
xchg
cs
inc
mov
ss
sbb
push
mov
and
gs
test
nop
dec
int3
ins
jae
cbw
xor
xchg
repz
outs
es
adc
rcr
pop
sub
mov
(bad)
js
mov
idiv
(bad)
xor
add
stos
stos
imul
jg
lods
push
test
push
adc
int
jne
loopne
jnp
xchg
leave
leave
add
lahf
mov
cmc
iret
pop
sub
and
lea
cld
cmp
outs
push
mov
dec
scas
or
sub
mov
xchg
push
ret
les
fldl2t
(bad)
pop
shr
push
mov
mov
pop
cmp
sar
loopne
jg
push
adc
xor
pop
in
pop
js
ja
not
scas
jb
rcr
cmp
sbb
adc
jle
xchg
jp
mov
ja
jne
cmp
jmp
bound
sbb
sub
push
repz
push
dec
mov
mov
push
mov
or
xlat
push
leave
jecxz
popf
jmp
push
xor
xlat
mov
xchg
mov
aas
and
mov
jg
xchg
pop
pop
ret
xchg
push
sub
jg
lock
cld
adc
inc
xchg
mov
out
xchg
(bad)
xor
js
mov
imul
cmp
leave
mov
push
call
inc
push
(bad)
fild
jno
xchg
xchg
cmps
ret
jno
cmps
pop
push
cmp
jno
push
mov
lds
js
imul
ret
sbb
pop
xor
cmps
jl
fiadd
clc
in
ins
jae
scas
out
(bad)
lahf
fbld
js
xchg
lock
mov
pop
dec
cld
adc
repz
(bad)
and
stos
mov
fs
jp
mov
out
push
adc
fwait
lock
div
fimul
in
or
fwait
sbb
neg
push
data16
mov
mov
aad
cli
jns
mov
sti
or
push
les
cli
sbb
int3
lods
inc
sub
arpl
outs
test
cmp
test
movs
cwde
es
inc
loopne
hlt
(bad)
xchg
push
mov
pop
out
loopne
inc
popa
pop
loopne
gs
test
outs
das
jne
sbb
(bad)
cdq
mov
(bad)
outs
shr
dec
fs
dec
(bad)
scas
xchg
jnp
mov
or
xor
out
or
mov
scas
mov
js
mov
inc
cmp
cmc
fcom
sar
push
mov
jge
shl
pop
ret
mov
dec
sahf
mov
sub
outs
int3
mov
xor
ss
dec
xchg
mov
repz
jle
aaa
ja
pop
lock
in
ins
out
js
popa
mov
mov
loop
xchg
xlat
jae
stos
and
sub
inc
sub
adc
(bad)
repnz
xchg
jae
sub
add
and
test
lea
and
iret
sbb
leave
mov
fnstsw
mov
adc
and
(bad)
fist
cmp
sbb
sub
jnp
in
xlat
hlt
in
add
aas
push
pop
call
enter
mov
push
and
scas
pop
mov
cld
iret
ss
push
sbb
push
lahf
jmp
cmp
aam
sub
sub
lock
stos
push
pop
mov
addr16
addr16
or
and
mov
xchg
mov
or
mov
pop
(bad)
mov
aaa
xchg
stos
aam
push
cmp
pop
loopne
fwait
hlt
sbb
jo
adc
sbb
mov
add
sti
add
lods
jnp
aaa
jl
dec
dec
fisttp
mov
push
shr
sub
test
(bad)
mov
(bad)
jmp
iret
stos
repnz
adc
ins
(bad)
pop
ds
mov
mov
outs
push
out
ss
or
lock
(bad)
jl
arpl
jno
jb
mov
mov
push
je
iret
(bad)
repnz
push
dec
adc
lods
retf
mov
out
and
cmps
loop
test
pop
push
xor
aas
idiv
(bad)
test
push
sub
call
push
fwait
mov
push
lahf
and
or
sbb
push
arpl
test
jns
mov
mov
shr
(bad)
xchg
jle
mov
cmps
pop
mov
pop
out
inc
ins
jnp
loop
test
out
sbb
scas
scas
jns
pop
cmc
enter
pop
mov
adc
vpxor
jmp
xchg
push
in
sub
addr16
fs
das
(bad)
and
and
inc
ds
mov
pop
mov
call
int3
mov
xor
jne
pop
mov
xchg
cmp
jns
call
nop
repnz
xchg
dec
inc
pop
cli
push
mov
aaa
fcom
mov
mov
sahf
frstor
lds
fsub
sbb
mov
rcr
fisubr
loope
out
in
mov
mov
lahf
int3
mov
push
cmps
jae
xchg
hlt
icebp
pop
mov
add
mov
rcl
xchg
fcomp
lods
cmp
fnstcw
stc
pushf
ret
push
adc
jp
jmp
fstp
inc
xor
lods
dec
mov
pop
js
fisubr
xchg
leave
sub
dec
out
dec
adc
clc
lods
pop
cdq
(bad)
mov
dec
in
sub
jbe
imul
call
dec
adc
mov
jnp
aas
retf
pop
dec
cld
push
dec
mov
dec
pop
and
mov
adc
add
push
test
rol
ins
sub
dec
ficom
mov
arpl
sbb
cs
fmul
add
lock
adc
stos
out
sub
call
ret
jo
push
imul
xchg
inc
and
cdq
outs
inc
in
frstor
lods
out
pop
fidiv
jp
dec
out
mov
sti
sti
mov
int
mov
jmp
pop
mov
xchg
les
mov
lds
push
xchg
popa
xor
push
pop
test
movs
sub
xchg
loope
push
movs
sti
inc
mov
lods
int3
mov
mov
sbb
scas
out
push
pop
push
mov
sbb
push
mov
loope
jmp
sub
xchg
adc
mov
ins
fsub
ins
(bad)
pusha
ficom
adc
sbb
add
rep
push
leave
ds
jmp
sar
arpl
xchg
mov
and
adc
jb
or
sbb
inc
in
rcl
mov
add
jmp
xor
sbb
cmp
jns
jle
sub
mov
xor
pop
in
cmp
(bad)
aad
mov
mov
shl
scas
push
mov
fiadd
dec
ds
pop
adc
push
cmp
pop
mov
adc
add
push
test
mov
xchg
stos
aam
dec
aam
dec
mov
add
inc
aad
call
scas
dec
jno
pop
icebp
arpl
retf
shl
imul
pop
mov
jnp
ins
mov
fwait
jae
out
pop
push
(bad)
sti
out
aad
je
jae
loopne
sub
cmp
and
shl
inc
cs
in
sahf
mov
xor
mov
mov
mov
jl
cmp
jno
mov
ss
mov
jne
mov
mov
int3
pop
fisub
lahf
(bad)
cs
xchg
iret
adc
xchg
jmp
pushf
arpl
add
in
(bad)
(bad)
pop
in
aaa
ror
(bad)
ins
cdq
jg
imul
mov
rcl
jge
std
jnp
xor
outs
dec
cdq
scas
call
push
cmps
adc
push
mov
adc
stos
xchg
cmp
scas
fidiv
sub
sbb
ss
inc
sub
push
(bad)
dec
sub
cs
xchg
loop
xchg
mov
not
nop
dec
lods
ss
xor
or
inc
fdiv
int3
(bad)
push
mov
fs
out
adc
xor
mov
mov
xchg
mov
dec
push
sub
inc
and
sahf
xor
lahf
adc
add
aas
cmp
inc
popa
or
xchg
aas
fsubr
push
fbstp
mov
pop
std
stos
mov
stos
mul
gs
jbe
pop
scas
adc
jne
add
lods
mov
pop
sbb
xor
stc
js
outs
sub
jp
ins
mov
ins
mov
fsubr
mov
fcomip
mov
fisttp
in
jb
mov
cs
stos
xchg
sub
dec
fwait
adc
mov
dec
pop
popa
popf
xor
dec
xchg
xchg
mov
je
mov
dec
cmps
cwde
pop
ja
mov
pop
(bad)
push
mov
adc
mov
cmp
mov
add
xor
out
mov
icebp
mov
addr16
scas
sbb
bound
cmp
mov
in
aaa
xor
dec
leave
dec
inc
ja
xchg
jae
pop
ja
pop
push
repz
shl
fs
out
dec
pop
or
sbb
sar
cwde
sub
pop
mov
or
fldenv
inc
fsubr
add
xor
and
sub
les
mov
hlt
int
js
fwait
iret
mov
outs
push
mov
stc
stos
js
pop
scas
adc
aad
cwde
fcom
jecxz
loop
xchg
bound
lock
cs
inc
pop
or
xchg
sub
imul
sub
div
xor
call
fs
pop
imul
jns
xchg
movs
mov
mov
mov
pop
nop
and
neg
stos
mov
fs
dec
jae
nop
add
push
in
mov
(bad)
xor
adc
mov
stos
mov
push
xor
mov
adc
and
mov
mov
retf
(bad)
fild
into
lea
jo
imul
cmp
retf
mov
xchg
mov
(bad)
and
cmp
popf
xchg
cwde
(bad)
add
push
test
(bad)
in
cmp
pop
cmp
arpl
and
repnz
fist
movs
pop
mov
pop
outs
dec
cmc
jno
inc
retf
push
dec
fcomp
fmul
jmp
inc
mov
pop
xchg
rcr
mov
call
outs
push
xchg
xor
int3
lods
frstor
into
dec
call
dec
xor
mov
pop
leave
pop
mov
arpl
scas
adc
mov
xchg
mov
and
push
jge
les
test
out
lods
inc
repz
daa
pop
mov
or
ins
dec
leave
pop
imul
mov
sub
adc
jle
mov
adc
mov
mov
mov
test
sub
arpl
(bad)
sub
mov
xor
mov
push
dec
xor
push
mov
mov
test
sar
ins
into
sub
add
pop
(bad)
xchg
xchg
add
dec
xchg
test
fs
retf
pop
inc
int3
lea
dec
mov
sbb
jo
cld
in
lods
mov
fisttp
xchg
push
ret
out
out
mov
loope
cmp
mul
cmp
cwde
imul
xchg
(bad)
sub
jnp
mov
add
pop
ret
popa
mov
sahf
push
add
icebp
cmp
inc
mov
cmp
out
jnp
adc
mov
out
xor
movs
data16
imul
ror
rol
jno
mov
push
push
dec
in
out
int
call
inc
(bad)
shr
or
fist
daa
fs
arpl
sub
and
out
mov
call
imul
and
into
sahf
popa
sbb
xor
pop
push
ret
xchg
push
ret
(bad)
fdiv
mov
sub
mov
movs
xor
pop
jne
dec
out
ja
sub
lea
imul
bound
mov
out
sbb
sub
cmp
mov
mov
push
jbe
push
fcom
js
aad
fucomp
and
fucomp
xor
fs
(bad)
ror
movs
pop
jae
pop
inc
data16
mov
and
lods
xchg
mov
ss
sbb
dec
sti
mov
cmp
push
cmp
or
call
neg
fs
sub
out
(bad)
pop
jge
lods
js
pop
jns
xchg
in
push
push
sahf
push
outs
mov
test
or
dec
mov
xchg
in
stos
mov
enter
jne
jne
mov
(bad)
rcr
adc
sbb
in
dec
cmp
mov
imul
xchg
xor
xchg
sub
push
ficom
das
shl
pusha
inc
retf
mov
arpl
push
xchg
loopne
sub
movs
pusha
push
sub
repz
mov
cli
xor
cmp
cmp
int3
jle
sub
mov
in
push
in
xor
lods
imul
call
sub
arpl
mov
aad
inc
loope
inc
(bad)
lds
jb
jne
retf
sbb
ret
mov
repnz
pop
mov
jae
mov
int
out
and
call
stc
fadd
pop
mov
mov
fs
jae
mov
mov
jo
jns
pop
(bad)
lods
out
popa
out
inc
cmp
mov
ss
sahf
cmp
mov
mov
lds
fprem
xchg
stos
xchg
stc
mov
adc
add
push
test
xchg
fs
lds
mov
(bad)
lds
sub
xchg
pop
sahf
mov
push
mov
fwait
int3
xchg
lea
pop
jne
add
mov
jns
cdq
mov
rcr
pop
add
mov
shl
dec
loope
jb
ja
and
mov
mov
into
sti
repz
out
xor
sbb
mov
test
cmps
push
inc
outs
cs
mov
adc
ins
hlt
stos
xor
sub
sub
nop
mov
out
ins
mov
pop
ficom
in
push
sbb
mov
or
scas
fld
jb
inc
sar
jb
push
pushf
std
cmp
jnp
sbb
push
or
mov
add
mov
cs
icebp
pop
adc
pop
mov
push
inc
or
add
mov
shl
xchg
fimul
mov
sub
ja
cs
iret
fstp
xchg
add
jmp
and
sub
mov
adc
pushw
test
jmp
(bad)
imul
mov
out
xor
loop
push
ret
addr16
cmp
jne
mov
ret
ret
pop
stos
retf
into
sbb
imul
ror
or
mov
jl
lds
outs
scas
je
repnz
inc
xchg
or
pop
mov
popa
pop
leave
mov
les
inc
jmp
pop
sbb
shr
inc
mov
cmp
push
push
(bad)
xchg
nop
xchg
enter
push
inc
push
xchg
in
jmp
retf
mov
mov
je
mov
sub
sub
mov
ficom
ret
jg
or
fmul
movs
call
stos
push
sub
sbb
imul
ja
inc
int
mov
inc
add
add
add
add
or
add
pop
add
add
add
adc
adc
push
add
inc
push
xchg
mov
and
xor
popa
jno
mov
bound
mov
xor
adc
mov
inc
push
jae
inc
xchg
ret
sar
fiadd
or
add
or
add
out
nop
cmp
mov
cmc
add
push
pop
in
ja
push
out
out
div
sub
imul
cmp
fsub
inc
das
xor
ins
into
sbb
ret
push
mov
mov
xchg
mov
lds
cld
in
mov
enter
xchg
stc
adc
stc
and
push
mov
shr
int
fcomp
(bad)
call
mov
movs
lods
retf
adc
jecxz
repz
adc
fst
mov
mov
popf
loope
sar
fisubr
jbe
jge
lea
sub
fstp
test
pop
stc
sub
push
test
ffree
shl
cwde
and
pop
test
add
call
gs
adc
ja
push
mov
cld
sub
xor
cmp
(bad)
dec
pop
adc
mov
fs
adc
ja
add
lods
cmp
(bad)
icebp
lahf
call
dec
inc
mov
iret
jb
xor
add
push
call
or
loope
dec
ins
jmp
push
and
push
mov
pop
pop
pmaxsw
pusha
push
push
dec
inc
cld
(bad)
mov
out
int
ja
test
push
sti
push
dec
mov
cdq
imul
outs
rcr
pop
shl
jnp
dec
cmp
rol
jle
inc
loope
aas
mov
sub
aad
mov
mov
data16
and
add
cdq
mov
sbb
fistp
aas
(bad)
sub
in
ds
adc
ds
sahf
add
cdq
adc
push
fisubr
xor
mov
movs
(bad)
ins
push
or
stc
sub
mov
aad
loop
aaa
daa
bnd
inc
pop
pop
add
cmps
push
and
adc
loopne
syscall
adc
push
fcomi
push
clc
iret
int
cld
outs
stc
cmps
fdiv
cmp
dec
aam
adc
icebp
dec
(bad)
fs
mov
daa
test
stos
sub
pop
dec
push
jg
mov
test
inc
outs
imul
stos
(bad)
(bad)
leave
jne
icebp
mov
jmp
cmp
cmps
pop
mov
sub
push
fstp
and
pop
xor
into
jmp
cmp
and
fs
add
lock
lods
mov
push
add
sbb
imul
xchg
loop
mov
push
xchg
add
fsub
loop
cs
movs
lock
call
movs
popa
std
into
(bad)
pop
mov
xchg
outs
push
and
mov
rcr
sub
mov
mov
push
or
fmul
into
mov
rcr
imul
cmp
retf
xchg
call
jne
xchg
into
int3
push
shl
pop
jle
test
dec
push
mov
mov
mov
repnz
popa
aas
jb
bound
push
jae
cmp
jae
mov
int
mov
push
xchg
aad
ins
add
cmps
pop
add
mov
aas
lods
ins
cld
inc
jp
bound
scas
add
add
sti
popa
loop
jno
or
push
dec
sahf
mov
sub
adc
dec
nop
je
lock
fst
add
jp
daa
cwde
push
xchg
(bad)
(bad)
cmc
loope
inc
sub
xchg
xor
mov
sub
in
add
ror
or
cmps
cmps
clc
cmps
js
mov
nop
mov
stc
data16
pop
mov
stos
jno
in
mov
rcr
aad
push
inc
repnz
jle
imul
js
leave
or
(bad)
repz
mov
test
push
mov
das
cmp
fwait
or
dec
mov
sbb
cmps
not
popf
pop
mov
test
jbe
add
js
sub
jg
cmp
div
in
int
adc
inc
icebp
ror
adc
push
sahf
shr
push
cld
(bad)
mov
loop
in
scas
jecxz
pop
aad
mov
jo
jmp
pop
push
add
push
jl
pop
retf
(bad)
add
inc
xchg
icebp
push
daa
les
pop
pop
inc
sbb
les
cld
and
push
lods
and
inc
fs
test
test
inc
(bad)
adc
jge
inc
test
imul
ins
js
iret
iret
call
int
iret
imul
in
pop
lods
cmp
fadd
pop
adc
scas
push
in
lea
mov
pmullw
lahf
bound
and
call
mov
add
call
daa
pop
jbe
or
add
adc
mov
xchg
aaa
enter
jnp
pop
sub
sar
mov
popf
mov
sbb
push
inc
repz
sahf
and
fisub
(bad)
stos
sub
mov
(bad)
sbb
sbb
cmp
scas
lahf
xor
and
imul
push
daa
aad
aad
dec
xor
aad
arpl
push
sbb
push
mov
aaa
nop
mov
sbb
pushf
and
pop
ins
leave
(bad)
test
lods
stos
or
das
or
leave
aas
test
xchg
sub
xor
xor
mov
imul
jo
(bad)
dec
pop
xchg
loopne
xchg
out
dec
and
mov
xor
jle
aam
pop
ins
sbb
mov
dec
sbb
(bad)
in
inc
aad
popa
into
popa
into
jmp
mov
div
cmp
stos
push
push
or
in
(bad)
(bad)
leave
jge
(bad)
jge
ss
outs
stc
sub
stc
sub
setb
lock
sub
setb
rol
mov
add
dec
sub
stc
sub
lock
sub
into
in
mov
popa
into
popa
into
jmp
push
ja
out
out
out
mov
mov
fwait
add
loop
push
jge
(bad)
jge
ss
cwde
fistp
mov
cmps
shr
test
mov
ins
mov
mov
xchg
clc
xchg
mov
inc
dec
mov
dec
adc
sahf
sub
fwait
adc
or
into
jb
mov
jnp
imul
push
ja
enter
jg
xchg
aaa
stos
pop
mov
sub
stos
das
stos
clc
cwde
data16
data16
cmp
cli
mov
popf
retf
popf
sar
jg
adc
cmps
jge
call
push
add
xchg
jo
xchg
sahf
arpl
sub
ret
pushf
ret
popf
xlat
repnz
mov
arpl
leave
push
stc
mov
sub
stos
das
stos
clc
fadd
jnp
dec
add
mov
lds
mov
rcr
push
fcomp
sbb
mov
push
hlt
arpl
sar
daa
adc
xor
cmp
(bad)
ja
stc
repz
jae
jae
inc
aam
stc
lods
cmp
bound
inc
mov
push
mov
push
pop
push
icebp
mov
jmp
add
ret
xchg
dec
je
mov
pop
add
mov
test
data16
jecxz
popf
cmps
popa
mov
xchg
hlt
data16
push
pop
mul
push
sub
mov
in
int3
sti
int3
sub
inc
popa
jl
dec
sub
jecxz
or
cs
jbe
imul
xor
fisub
in
int3
cmp
pushf
aad
out
mov
fidivr
lods
cmp
bound
inc
mov
ja
pop
jno
test
scas
loop
cld
fadd
fstp
ret
les
adc
cmps
jo
imul
ins
sbb
jbe
push
push
inc
mov
inc
(bad)
out
inc
arpl
(bad)
in
or
outs
ds
mov
rcr
lea
sbb
sbb
adc
call
arpl
ins
xor
jecxz
lods
les
mov
xchg
pop
cmp
(bad)
es
inc
pop
loop
int
xor
fs
shl
jno
lahf
lahf
xor
fnstsw
into
sti
xor
repnz
sahf
push
(bad)
cli
out
fidiv
pop
(bad)
jmp
jmp
jb
xchg
inc
mov
push
fidiv
cmp
pop
mov
xchg
mov
dec
inc
fwait
hlt
adc
jmp
jbe
inc
pop
lock
push
sbb
adc
dec
cmp
int
inc
leave
sbb
iret
inc
ficomp
xor
fdivr
and
sahf
sub
inc
fist
xchg
lock
(bad)
idiv
(bad)
sbb
test
cmp
into
icebp
int
iret
arpl
leave
push
lods
push
push
jns
into
cmc
xchg
jmp
cdq
mov
jmp
aad
pop
sbb
jne
adc
sbb
add
push
dec
(bad)
shl
hlt
mov
jne
inc
imul
inc
cmp
push
mov
mov
xchg
cdq
test
or
add
ss
mov
call
jmp
adc
or
sbb
arpl
xor
test
add
xchg
dec
push
inc
(bad)
xor
or
lods
sbb
addr16
popa
into
push
ja
enter
(bad)
and
popa
iret
arpl
leave
pop
push
int
mov
pop
out
cmp
sbb
stos
clc
call
sahf
and
add
pushf
in
mov
xchg
pop
lods
and
sahf
out
setb
push
aaa
mov
out
out
dec
cmp
cmp
cmp
iret
loop
(bad)
sbb
xor
scas
call
cmp
sbb
stos
clc
call
mov
mov
cld
stc
lods
cmp
push
into
sti
dec
and
sti
xor
xchg
and
dec
xor
int
push
sbb
stos
das
stos
clc
add
mov
aas
imul
push
repz
pop
push
adc
js
or
cmp
test
sahf
adc
js
jg
jg
out
out
mov
mov
sub
push
daa
aad
aad
inc
jmp
fnstenv
(bad)
cmc
mov
fnsave
push
bound
ficom
jl
inc
mov
adc
js
adc
cmc
add
lahf
adc
dec
mov
out
mov
dec
mov
push
bound
cmc
adc
add
mov
add
fisub
mov
test
out
mov
add
push
jbe
scas
cmp
(bad)
ficomp
jno
(bad)
out
sahf
(bad)
cs
cmp
jne
pop
fnstenv
mov
outs
int
pop
push
pop
(bad)
cmc
mov
sub
push
dec
mov
adc
sub
push
pushf
adc
sub
push
fbstp
stos
cmp
test
fisub
mov
pminub
stc
dec
adc
popf
movs
xchg
inc
fidiv
std
stos
cmp
mov
test
loop
pop
pop
dec
stos
sub
mov
mov
cmp
mov
xor
jp
jecxz
call
jl
sub
gs
sbb
mov
mov
mov
mov
xchg
or
jle
xchg
inc
pushf
scas
cs
scas
es
(bad)
fidiv
adc
sub
mov
movs
sti
push
push
std
stos
sub
pop
add
mov
fadd
repnz
sahf
jns
imul
push
pop
push
icebp
cs
sbb
mov
ret
sbb
repz
loopne
xchg
xchg
sub
stos
sub
inc
inc
call
ficomp
jmp
sub
sub
pop
fs
scas
push
mov
ins
mov
imul
(bad)
sbb
push
iret
jecxz
jo
sahf
jns
cmp
sub
fwait
push
daa
aad
aad
dec
pusha
cmp
pusha
pop
aad
mov
add
adc
inc
adc
inc
dec
sub
inc
adc
inc
adc
rcl
push
retf
ficomp
xchg
push
adc
and
loopne
dec
mov
scas
jb
ins
mov
mov
ins
push
fstp
mov
jo
mov
mov
jmp
retf
in
mov
add
jmp
inc
out
sub
mov
sub
imul
out
mov
adc
inc
rcr
je
pop
pop
add
test
icebp
mov
(bad)
out
pop
lods
push
mov
das
stos
clc
xchg
sbb
mov
into
mov
std
stos
sub
test
fisub
aas
push
adc
xchg
mov
push
loop
xlat
jb
je
mov
xor
aam
int
xor
and
push
sahf
lods
mov
xbegin
inc
add
in
(bad)
lock
outs
inc
pop
xlat
inc
(bad)
daa
xchg
sbb
add
sub
mov
jecxz
in
adc
ret
out
adc
aad
add
xor
bound
xchg
pop
sbb
sub
imul
jmp
jne
rol
int
mov
cmp
cmp
cmp
push
jg
mov
mov
(bad)
sub
mov
(bad)
cli
mov
popa
mov
imul
sbb
sahf
imul
push
rcl
or
push
dec
aas
mov
(bad)
out
bound
or
inc
(bad)
pop
(bad)
add
addr16
ficomp
fsubp
sub
pop
push
lahf
sar
push
lea
lods
imul
inc
push
aaa
sbb
pop
dec
pop
add
loopne
test
lods
xor
dec
int3
sub
or
push
dec
inc
inc
aam
aad
pop
(bad)
enter
adc
add
inc
ins
adc
xor
inc
les
sbb
cmc
idiv
xlat
cld
aas
call
pop
out
out
add
cmps
sar
and
mov
xlat
mov
ss
stos
das
stos
clc
call
(bad)
repz
rcl
inc
int
cmps
rcl
cli
pop
outs
std
dec
loopne
aad
popf
jbe
sbb
xor
cmp
inc
pop
fsub
icebp
adc
jl
or
shl
sahf
xor
push
and
cwde
xor
xchg
mov
mov
in
mov
mov
add
xor
sbb
out
jne
ss
mov
xchg
test
loopne
mov
cmc
or
cmp
mov
adc
ds
scas
loop
js
fwait
add
mov
std
sub
mov
rcl
and
fcmovb
inc
xor
and
and
and
and
adc
pop
ret
das
int
dec
dec
dec
dec
dec
dec
dec
in
push
jge
sub
std
mov
add
mov
add
xchg
xchg
mov
dec
inc
push
popa
test
mov
call
or
popf
sub
mov
push
push
push
loop
dec
dec
dec
dec
dec
in
and
lods
out
push
ror
movs
pusha
cmp
(bad)
out
push
int
fidiv
xor
xchg
js
adc
enter
cmc
inc
cmc
jg
jmp
js
shr
sub
fld
cmp
inc
jmp
adc
enter
push
pop
and
popf
adc
leave
xchg
push
(bad)
in
pop
rcr
dec
fcmovbe
jbe
xchg
sar
inc
add
push
mov
std
stos
daa
fs
pop
sub
ins
mov
rol
xor
shl
cmp
cmp
xor
mov
stc
sub
jo
movs
sub
dec
bound
sub
mov
add
cmp
sbb
add
xchg
xchg
mov
aad
arpl
mov
xor
jae
cmp
dec
cld
cmp
cs
(bad)
test
stos
out
out
mov
sub
or
ins
sbb
push
jb
sysret
xchg
or
push
adc
out
cld
shl
mov
sahf
and
and
adc
in
cld
cmp
dec
xor
imul
add
add
jle
mov
rcl
(bad)
imul
div
fist
lods
in
test
sbb
in
imul
rcr
test
dec
inc
fs
cs
xor
movs
rcr
xchg
xchg
xchg
xchg
xchg
mov
sbb
mov
and
dec
dec
pop
sub
daa
push
mov
mov
fist
add
push
cwde
aaa
dec
imul
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
adc
loope
or
outs
cmc
jns
fwait
cmp
push
xchg
and
jmp
push
jg
mov
cmp
and
mov
mov
(bad)
adc
lods
or
cmp
dec
xor
call
gs
inc
jle
pop
inc
mov
cmc
jg
sti
arpl
fs
jae
out
push
add
les
or
xor
sbb
add
xor
ret
mov
jbe
sub
ja
xchg
xor
xor
in
pop
xor
or
xor
outs
cdq
cmp
push
int
ins
jae
or
sbb
mov
pop
add
popa
lahf
pop
pop
loop
push
cs
xchg
or
jge
aad
ror
jne
and
rcr
xchg
xor
push
dec
popf
mov
sahf
into
xor
int
push
mov
jae
in
xor
and
push
mov
sar
add
and
sub
dec
or
and
call
xor
add
sub
ja
arpl
xchg
je
add
push
cmp
and
and
data16
mov
pusha
cmp
jmp
scas
xchg
mov
stos
adc
in
mov
pop
push
out
sbb
leave
stos
repnz
pop
fdivrp
lea
inc
test
in
hlt
mov
(bad)
mov
push
enter
shl
dec
enter
xor
mov
jg
mov
mov
outs
iret
sub
xor
mov
jg
fnstcw
cwde
dec
push
and
std
dec
pop
xchg
jmp
aaa
sbb
push
jmp
fwait
push
inc
sub
push
iret
mov
ins
push
push
fidiv
and
xlat
xchg
ret
leave
jp
and
xchg
pop
sub
cmp
push
loope
xchg
neg
shr
daa
adc
push
push
push
mov
sbb
ficom
cld
dec
and
cmps
mov
pop
or
sub
adc
add
pop
sub
push
mov
jns
pop
dec
dec
cmp
or
push
xor
loope
ficom
mov
adc
dec
es
std
fwait
dec
loop
mov
inc
shl
sbb
je
adc
jne
add
add
into
xchg
imul
out
fidiv
pop
lods
inc
shl
mov
adc
cmps
enter
pop
mov
stc
or
mov
out
in
cdq
cmp
movs
fidiv
mov
add
jnp
(bad)
enter
into
int3
push
push
jne
mov
add
mov
add
xor
gs
cmc
mov
ins
repz
and
inc
pop
xor
inc
fs
jmp
popf
sbb
into
bound
pop
test
fsub
ss
mov
nop
mov
pop
pop
call
(bad)
(bad)
les
dec
jns
ds
ss
xchg
mov
in
ret
push
xchg
jne
xchg
gs
lods
popf
mov
rcr
daa
mov
cmp
fwait
cmp
je
xchg
sub
mov
sti
push
in
sbb
xchg
clc
sub
loopne
inc
hlt
into
jae
data16
mov
rcr
sar
pop
push
test
loope
ins
cmps
inc
adc
mov
or
mov
daa
dec
daa
mov
ins
jae
es
fsubr
sub
mov
sbb
cmp
arpl
dec
push
and
adc
mov
(bad)
sahf
or
leave
mov
test
cmp
fst
push
fcomip
add
ja
push
mov
cmp
addr16
ret
in
pop
popf
stos
or
pop
dec
jp
mov
mov
cmp
dec
out
mov
pop
add
and
mov
pop
add
add
sti
or
(bad)
movs
psadbw
loop
jbe
prefetch
retf
js
inc
mov
ret
pop
cmp
push
bound
inc
retf
sub
ins
sbb
xor
xchg
xor
mov
and
aad
mov
fwait
pushf
shl
int3
imul
push
aad
into
pop
dec
dec
inc
mov
and
jb
inc
add
test
cmps
cmp
mov
mov
pop
ror
cmp
imul
inc
jmp
adc
or
mov
sbb
sbb
in
std
call
jge
out
dec
or
in
or
movs
scas
aaa
adc
xor
mov
aam
nop
lods
push
inc
jbe
push
sub
(bad)
sar
ins
rcl
mov
push
movs
xlat
cmp
push
data16
xor
iret
sbb
adc
jno
jo
mov
inc
mov
cmps
int
js
outs
pop
jns
loopne
es
call
call
push
sub
sub
popf
or
sahf
xchg
mov
sbb
mov
sar
aam
add
ds
addr16
mov
jne
fwait
adc
add
out
retf
ins
ss
loopne
movs
sar
jo
push
push
adc
repnz
push
repnz
fwait
pop
int
push
add
pop
sub
or
xor
retf
sub
sub
idiv
inc
inc
retf
mov
jle
movs
(bad)
popa
scas
pop
enter
sbb
neg
pop
lea
(bad)
sub
dec
adc
lahf
jb
dec
sub
loope
dec
inc
xchg
ror
fimul
jp
mov
mov
xor
add
dec
sbb
ins
xor
mov
idiv
push
in
push
lods
popf
dec
jmp
add
lea
ins
and
sti
or
sub
mov
imul
test
ret
jmp
shr
movs
ds
adc
cmp
pop
push
inc
jns
ds
push
jb
fwait
xchg
dec
in
mov
int3
xor
cmp
sub
dec
mov
jns
add
xchg
inc
dec
add
sub
mov
sub
dec
xchg
in
adc
adc
stc
xor
imul
ja
sbb
cmp
(bad)
leave
call
ret
and
pop
mov
xlat
je
sub
cmp
mov
out
mov
or
outs
pop
dec
sub
mov
div
xor
push
(bad)
cld
push
stc
sub
sub
inc
cmp
sahf
gs
push
dec
xchg
int3
jmp
mov
aad
and
fild
cmp
jo
repz
fcomp
movs
sub
cmc
cld
mov
push
add
movs
and
jmp
cmp
pop
xor
sub
mov
mov
lock
fs
stos
mov
lods
pushf
dec
push
dec
leave
call
push
sub
outs
mov
push
pop
fwait
popa
int
dec
les
or
cmp
test
xor
add
add
call
dec
icebp
aas
xor
xchg
jns
lods
pop
dec
xchg
mov
adc
xchg
inc
push
addr16
xchg
xchg
inc
clc
add
mov
mov
or
aas
test
pop
ret
or
or
test
lods
mov
ret
jnp
mov
dec
imul
ss
aad
mov
pop
dec
add
sub
in
add
or
adc
or
lock
sub
mov
add
jl
ins
mov
ret
in
jae
ret
xchg
out
inc
inc
rcr
ins
and
or
inc
pop
enter
xchg
and
ins
mov
pop
rcr
dec
or
sub
and
inc
jns
retf
ss
shr
jo
bound
nop
imul
loope
cdq
mov
test
fwait
xor
stos
push
das
fidivr
xchg
rcr
adc
pop
jns
gs
jp
dec
jmp
dec
xor
pop
loope
pop
stos
hlt
fimul
cmp
(bad)
cmps
push
mov
retf
or
and
xchg
retf
dec
and
call
mov
mov
fwait
and
inc
or
jno
in
cs
cmp
push
in
or
mov
pop
fisubr
and
and
movs
inc
bound
push
and
stos
into
aad
push
mov
fiadd
aam
aam
es
adc
push
sbb
ins
push
dec
push
aam
aam
adc
ja
add
adc
pop
add
icebp
adc
push
dec
(bad)
fbstp
jnp
aas
push
test
ds
jl
pop
std
pushf
cmp
les
sub
in
in
pop
and
mov
inc
mov
and
fbstp
push
das
pop
arpl
int
mov
mov
iret
int
idiv
push
push
inc
and
mov
cwde
leave
aam
das
hlt
cmps
retf
int
adc
es
(bad)
or
shl
mov
adc
push
retf
push
not
idiv
adc
(bad)
outs
sub
mov
xor
popf
aaa
mov
mov
je
sbb
imul
js
sbb
pusha
mov
add
xor
push
cmps
adc
leave
xchg
retf
inc
fs
xchg
daa
lds
xchg
mov
out
dec
outs
fidiv
inc
mov
or
cmps
int3
sbb
bound
adc
adc
(bad)
in
dec
mov
dec
xchg
and
jb
mov
and
movs
loope
int3
(bad)
cmp
mov
push
addr16
push
or
mov
out
nop
stos
mov
jmp
cmc
jnp
push
dec
test
cmps
dec
fist
xor
xor
dec
adc
out
push
add
ss
adc
shl
adc
fnstcw
lea
call
cmp
adc
jnp
pop
std
pop
adc
jne
jno
mov
dec
and
push
outs
leave
or
mov
clc
inc
pop
add
mov
jecxz
retf
pop
mov
je
and
test
je
sti
fisubr
sbb
fcomp
cld
dec
es
mov
pop
sbb
and
pop
mov
inc
mov
sahf
lds
shr
pop
adc
bound
xor
push
(bad)
stos
shr
es
inc
cdq
jmp
lds
loope
jp
out
push
repz
dec
jl
dec
inc
scas
xor
cmp
sbb
dec
mov
jmp
and
and
lods
std
fwait
(bad)
mov
add
xor
xchg
dec
shl
adc
in
shl
push
jno
scas
jmp
cmps
imul
cmp
inc
mov
dec
sub
(bad)
rcl
inc
cmp
test
xchg
mov
(bad)
test
jl
mov
in
movs
dec
push
adc
int
xor
lds
(bad)
leave
out
inc
sahf
jbe
push
shl
pop
xor
(bad)
into
(bad)
mov
mov
das
jae
or
mov
inc
retf
pop
and
dec
mov
fist
and
lock
mov
or
pop
retf
inc
dec
je
inc
cli
rcl
inc
test
in
cmp
fs
ds
lds
and
stos
pop
jl
mov
call
cdq
cmp
cmps
out
stos
iret
bound
ins
int
sub
test
push
xor
sbb
es
movs
and
mov
mov
mov
xor
jmp
in
sbb
push
push
in
lods
cmp
pop
not
dec
mov
jae
std
inc
adc
fld
sub
and
fdiv
int
mov
cmp
mov
(bad)
lods
inc
dec
and
dec
cld
int3
stc
scas
inc
inc
jl
or
xchg
fiadd
mov
or
lahf
xor
leave
dec
dec
outs
sub
xchg
mov
clc
cdq
(bad)
in
xchg
das
jns
out
pop
cmp
xor
ror
and
add
fs
jmp
stos
jno
lds
popa
ret
gs
sti
add
inc
dec
push
movs
mov
add
gs
cdq
sub
vpmacssdql
sub
xchg
inc
adc
ret
mov
int
mov
dec
mul
test
fcom
cwde
imul
rol
xor
cmps
sub
(bad)
(bad)
mov
sbb
adc
adc
test
sub
xor
push
daa
unpcklps
arpl
xchg
add
pop
add
inc
dec
or
mov
leave
pop
pop
xor
mul
xor
mov
dec
dec
ret
mov
(bad)
dec
mov
xchg
adc
xlat
stos
add
push
push
or
fs
daa
(bad)
in
enter
aas
arpl
push
cmc
xchg
xchg
inc
aam
aam
aam
aam
mov
mov
out
jb
xchg
xchg
sbb
out
mov
test
sub
and
or
and
mov
dec
or
adc
xchg
mov
xor
mov
sbb
dec
cdq
inc
jnp
cdq
daa
cmp
nop
je
pusha
daa
pop
xchg
es
dec
pop
bound
fs
and
nop
add
mov
inc
dec
retf
test
cmps
sbb
push
add
push
bound
pop
pop
retf
inc
ss
out
add
mov
jo
xchg
cwde
(bad)
(bad)
inc
sete
jo
push
push
call
dec
jp
iret
lods
addr16
mov
adc
cmp
call
mov
out
popf
fwait
inc
dec
jp
adc
loope
leave
sar
xor
aam
mov
pop
inc
das
mov
das
mov
mov
sbb
xchg
xor
js
and
repz
add
inc
xchg
ret
iret
clc
lahf
xchg
xchg
add
lods
pop
icebp
call
es
ds
sub
push
ss
push
mov
aaa
and
xor
jg
jecxz
(bad)
fwait
adc
and
mov
(bad)
hlt
pushf
mov
sbb
inc
int3
call
icebp
pop
out
sub
ds
xor
mov
ror
cld
adc
das
shl
push
in
dec
fist
retf
js
pop
stos
sbb
and
aaa
mov
pushf
ror
popf
pop
cmp
push
mov
ret
cmp
pusha
fcomp
mov
in
fnstsw
ins
mov
daa
cmp
mov
inc
outs
(bad)
repnz
sub
xor
xchg
xchg
jmp
je
lahf
sub
dec
jo
dec
jo
cmc
xor
mov
jno
out
fcom
mov
mov
pop
and
add
test
inc
dec
std
mov
and
cmp
test
leave
cmps
sub
(bad)
leave
cld
es
jmp
icebp
push
fcomp
push
push
and
xchg
dec
jae
push
mov
rcl
loopne
nop
pop
pop
jb
mov
dec
cmovle
mov
scas
imul
out
inc
adc
xor
ins
adc
push
and
cwde
jl
dec
jb
push
iret
and
shl
out
push
mov
repnz
pusha
lahf
(bad)
aam
jbe
add
out
cdq
jmp
aad
mov
xlat
mov
call
out
mov
or
(bad)
fcom
xchg
xchg
inc
nop
xchg
cwde
imul
add
scas
lahf
xchg
je
or
cmps
gs
push
and
inc
jns
dec
icebp
ficomp
cli
icebp
or
pop
xchg
mov
sbb
or
call
or
into
pop
stos
scas
jb
outs
sub
popf
inc
test
inc
in
push
fiadd
cmps
mov
add
fwait
mov
mov
jmp
fsub
pop
cmp
(bad)
cld
add
inc
das
or
add
mov
mov
into
mov
(bad)
xchg
push
(bad)
adc
inc
add
cs
mov
mov
cmp
iret
xchg
dec
xchg
dec
jo
sub
dec
es
jle
retf
jb
popa
or
xor
inc
movaps
adc
or
mov
xchg
retf
cmp
adc
dec
fidiv
call
test
sub
(bad)
loopne
or
jb
jmp
add
xchg
enter
add
sti
push
inc
xchg
push
pop
sbb
push
pop
push
inc
push
inc
push
pop
add
inc
push
and
push
nop
loopne
mov
sub
retf
jp
fsub
mov
xchg
ficom
mov
aam
pop
jecxz
rcr
xor
popf
icebp
pop
(bad)
in
push
in
cmp
push
nop
pop
jnp
add
(bad)
out
std
jae
imul
ja
jmp
ins
iret
jnp
jno
push
dec
lds
rol
mov
add
adc
daa
int
jmp
out
in
stos
leave
retf
fnstcw
sbb
sub
fistp
ds
pusha
jmp
add
jbe
gs
and
hlt
xchg
push
in
test
fdiv
inc
test
sub
pop
sti
xchg
sbb
in
xchg
add
add
xor
mov
repz
outs
dec
or
adc
movs
ss
push
mov
shl
xchg
mov
out
mov
sbb
xchg
std
test
aam
xchg
lds
ror
in
aaa
test
sub
inc
push
aad
mov
data16
sub
push
(bad)
mov
xor
test
mov
mov
push
sbb
adc
pop
jp
xchg
add
ret
cmp
js
rcr
jae
aaa
outs
out
adc
and
iret
dec
movs
jl
dec
mov
sbb
daa
mov
inc
imul
xchg
add
mov
mov
mov
mov
sub
dec
(bad)
inc
es
mov
pop
fnstsw
xchg
add
sbb
fwait
mov
or
cdq
sti
cmp
ja
cmp
add
mov
fld
inc
adc
ds
xchg
xchg
js
inc
aam
adc
xchg
(bad)
dec
(bad)
fsub
pop
add
xor
inc
into
add
xor
cmp
aam
sub
loopne
imul
dec
ret
inc
cmc
das
dec
xor
data16
cli
xchg
movs
pop
aas
std
pop
aam
xor
inc
cmc
das
dec
cmp
setp
mov
dec
and
jo
(bad)
pop
cwde
pop
sar
jmp
pop
cdq
xchg
mov
pop
in
add
iret
stc
aas
aam
xor
dec
cmc
scas
dec
pop
sti
pop
jmp
xlat
cmps
inc
leave
(bad)
movs
jmp
jp
cld
lahf
jmp
inc
push
retf
sbb
stos
push
jbe
mov
lods
lods
mov
sub
sub
out
fs
jl
add
repnz
fdivr
pop
xchg
hlt
mov
add
pop
retf
xchg
or
sub
hlt
mov
push
xchg
lahf
push
aam
lods
mov
aaa
inc
jb
fstp
xchg
retf
mov
push
sub
jp
push
mov
xor
test
sub
mov
jnp
int
jl
inc
mov
imul
push
out
mov
mov
int3
les
pushf
ss
andnps
mov
dec
lahf
push
sbb
lea
cld
(bad)
push
sbb
fisub
jo
pushf
pushf
mov
mov
mov
mov
test
stc
sbb
(bad)
jb
inc
shl
jg
inc
xchg
mov
sbb
add
das
sti
push
pop
sbb
ret
or
inc
xchg
retf
(bad)
pop
inc
jmp
dec
cmp
ffreep
ja
gs
clc
outs
stc
sub
inc
or
or
pop
push
pop
push
push
push
push
push
loopne
push
ss
lods
cmps
daa
lock
inc
add
mov
or
lods
add
mov
and
add
iret
mov
sub
mov
clc
jo
or
dec
in
xor
leave
pop
xor
mov
dec
mov
sbb
sbb
fisub
je
rcr
fidiv
pushf
mov
pop
xchg
aad
scas
fs
mov
mov
sahf
jnp
xor
int
test
jae
aaa
sbb
jecxz
mov
or
mov
imul
mov
mov
sti
xchg
test
mov
sbb
rcr
in
ja
and
dec
in
mov
adc
xor
int
dec
sub
mov
fmulp
int
nop
lahf
neg
sub
xlat
sub
push
mov
pop
dec
cmp
and
xchg
ret
pop
dec
and
daa
inc
xchg
(bad)
xchg
cld
push
pop
pop
push
out
xchg
ret
sahf
add
gs
jae
pop
add
loope
pop
pop
jle
xchg
push
add
xchg
push
add
mov
pop
mov
add
jno
sub
stos
out
mov
sub
cmpps
xchg
dec
mov
pop
and
popf
test
xchg
cmps
fiadd
into
inc
enter
mov
sub
sub
jp
loope
arpl
jle
imul
mov
pop
retf
iret
cmc
xchg
lahf
push
imul
ja
jmp
jge
dec
inc
fldcw
into
push
or
cmps
pop
ins
sub
mov
pop
dec
cwde
dec
jno
xor
das
push
push
cmps
cwde
cmp
cmp
addr16
aad
inc
sahf
mov
sub
push
push
pop
push
loopne
xchg
pop
popa
enter
push
jp
sub
sbb
das
add
sbb
mov
or
and
jo
repz
fist
and
xor
dec
test
ret
xor
fdiv
sub
or
or
sti
int3
stc
adc
ss
add
cmps
add
jb
sbb
adc
or
lahf
pop
inc
mov
adc
sqrtps
adc
inc
sub
mov
adc
inc
or
dec
mov
out
mov
nop
es
adc
mov
pop
(bad)
rcr
in
sbb
push
and
cmps
test
sub
das
fldcw
leave
pop
pop
mov
pop
jg
ret
imul
inc
enter
sub
rcr
adc
loop
(bad)
jmp
scas
data16
scas
in
fdiv
lods
lock
sbb
cmps
test
xchg
les
dec
mov
push
loopne
push
in
mov
(bad)
in
dec
ret
mov
test
pop
adc
rol
icebp
fisub
leave
mov
ja
xlat
push
ins
in
jp
pop
xlat
xchg
js
(bad)
push
xchg
xchg
cli
inc
push
in
(bad)
js
ins
aam
dec
mov
xor
jbe
popf
movs
xchg
(bad)
setb
ja
cmp
inc
jnp
jno
sub
je
pop
and
adc
in
mov
jns
aas
dec
add
sbb
adc
hlt
leave
mov
aam
std
retf
(bad)
mov
cmp
add
dec
ror
and
or
or
fidivr
test
cmc
sub
lea
aad
mov
and
mov
xchg
push
xchg
add
cdq
sahf
and
mov
mov
(bad)
int
pop
clc
push
mov
dec
xchg
push
cmp
mov
mov
xlat
and
jns
mov
and
iret
xchg
lds
mov
cmp
(bad)
arpl
popf
push
push
adc
pop
mov
popf
mov
imul
int3
out
jae
mov
daa
aas
sti
dec
dec
ins
mov
xchg
inc
cmps
sub
adc
xor
loop
sub
cdq
or
mov
daa
inc
clc
mov
or
adc
xchg
or
jl
rol
pop
retf
xchg
popf
adc
inc
cdq
jge
jb
dec
mov
(bad)
leave
inc
mov
setb
es
aam
shl
mov
repz
pop
inc
mov
dec
jmp
cli
pop
sbb
or
cmp
push
(bad)
xchg
mov
add
sbb
je
cmc
dec
cmp
sbb
mov
jle
rcr
ja
stos
mov
mov
inc
xchg
cmp
jnp
movs
fwait
pop
inc
movs
push
jecxz
pop
lahf
sbb
fstp
test
mov
push
scas
dec
jmp
dec
ss
cmp
mov
cli
xor
mov
not
xchg
lds
and
adc
push
daa
clc
and
add
xlat
pop
xor
stos
inc
into
fld
jns
popf
mov
mov
cmps
mov
(bad)
leave
jnp
mov
in
rcr
xchg
mov
jnp
inc
jb
imul
cdq
ss
stos
(bad)
push
retf
jg
inc
mov
xor
mov
cmc
cmc
mov
mov
or
mov
push
mov
out
sbb
jl
jmp
icebp
push
and
mov
lds
mov
cmps
xchg
xor
mov
iret
jne
movs
mov
dec
mov
sub
mul
sbb
xchg
add
test
inc
and
iret
jmp
push
mov
scas
jae
pop
js
clc
lods
bound
aaa
xchg
aaa
mov
loope
out
loop
xchg
sub
pusha
lds
scas
dec
jmp
push
jns
lods
jae
xchg
jecxz
int
aaa
outs
out
outs
loope
inc
or
xchg
pop
and
xchg
push
mov
sub
lods
in
stos
sti
jl
sub
or
or
ror
mov
cwde
pop
enter
adc
inc
neg
mov
faddp
das
loop
shl
in
ins
xor
mov
call
in
movs
dec
push
pop
pop
aaa
lods
push
pop
(bad)
pop
movs
jp
aas
nop
rcr
push
push
mov
sbb
jae
jns
add
inc
push
push
cmp
cmp
lods
(bad)
test
adc
test
test
mov
lods
inc
les
xchg
sbb
out
mov
and
adc
or
sbb
loop
movs
repnz
fs
cmp
ins
addr16
leave
push
mov
sub
dec
xchg
adc
push
clc
addr16
das
pop
sti
loop
adc
jo
fstp
std
mov
aaa
push
(bad)
enter
and
neg
push
xchg
sbb
pop
clc
push
mov
sbb
jb
mov
xchg
test
mov
xchg
jae
add
mov
push
addr16
inc
sub
cmp
and
mov
in
stos
xor
cmp
in
stos
xor
jmp
scas
add
sbb
lea
pop
xchg
pop
or
mov
inc
mov
jl
ins
fwait
mov
add
mov
push
pop
mov
je
pop
aad
loop
pop
push
add
test
test
sbb
je
mov
xchg
daa
retf
push
test
popa
pop
sub
sub
add
leave
inc
jl
dec
mov
inc
push
and
in
push
popa
fs
dec
adc
(bad)
enter
fwait
cdq
vpcomd
sbb
shr
loopne
ins
xchg
mov
call
adc
lods
adc
call
xor
popf
jmp
mov
sahf
out
or
cmps
add
adc
jmp
pop
xor
mov
mov
cld
aam
cmp
inc
fidiv
adc
call
fnsave
sub
xchg
and
push
into
in
ret
xchg
inc
xor
dec
push
push
jecxz
pop
pop
mov
pop
int
xor
test
xchg
cmp
pop
outs
xchg
mov
push
cdq
xor
outs
push
lahf
pop
xchg
dec
mov
int
or
lods
mov
ficomp
xor
jle
out
out
pop
popa
add
mov
(bad)
or
out
fdiv
lods
lds
mov
loop
mov
and
push
push
or
push
push
or
inc
add
adc
add
cdq
dec
push
ret
enter
test
dec
sbb
out
jne
jno
push
clc
adc
aaa
mov
test
push
adc
mov
pop
jne
fst
mov
movs
dec
test
xchg
or
fld
adc
lds
pop
mov
call
in
das
es
cmps
hlt
rol
pusha
int3
fcom
dec
jae
aam
jnp
ret
add
cdq
or
mov
outs
xchg
sti
dec
daa
in
imul
dec
cwde
push
(bad)
js
xchg
fucomi
sbb
pop
mov
or
or
xchg
push
mov
inc
stos
jp
ins
popf
adc
pop
cdq
dec
mov
sbb
jge
jle
cmp
mov
out
xor
call
mov
jno
stc
test
pop
cmp
mov
mov
mov
mov
pop
aam
movs
stos
adc
or
cmc
and
dec
loopne
sbb
ret
dec
mov
scas
inc
jp
sbb
repz
and
and
mov
out
out
pop
mov
scas
push
ins
fcom
mov
in
push
xlat
and
sbb
data16
xchg
sbb
call
jl
stc
es
sbb
jle
es
sub
adc
mov
dec
imul
call
mov
mov
call
sbb
cmp
fisttp
push
sub
mov
mov
repnz
test
inc
addr16
rcl
lea
sub
mov
xchg
lods
hlt
loope
shl
inc
and
not
rcr
and
push
push
push
sub
inc
mov
ins
or
outs
cmp
cmp
cmc
sbb
out
ficom
jae
ret
shl
xchg
pop
lods
mov
push
fimul
scas
dec
sub
stc
push
bound
mov
imul
xchg
ror
loope
mov
dec
cld
add
addr16
cli
icebp
cmps
lock
popa
sub
js
pop
inc
cmp
dec
stc
mov
popf
mov
jbe
or
add
(bad)
adc
dec
arpl
inc
out
add
icebp
or
shr
or
adc
in
push
popf
mov
jne
nop
mov
test
inc
loopne
jno
mov
jns
adc
xchg
stos
adc
mov
mov
xchg
mov
(bad)
cmp
(bad)
js
mov
scas
lock
ja
mov
mov
sub
mov
fsub
loopne
pushaw
pop
daa
sub
outs
lock
lahf
loopne
aas
rol
imul
adc
or
push
inc
out
test
es
inc
cdq
sub
cmp
dec
enter
xor
cmp
shl
xor
mov
add
push
mov
adc
call
adc
xchg
xor
jle
fnstsw
fstp
fcom
or
dec
mov
push
jae
popf
mov
cmp
clc
pusha
dec
mov
push
test
cmp
ja
fdivr
js
jo
jne
inc
add
les
jl
mov
(bad)
mov
cmp
aam
aaa
in
mov
jecxz
jb
mov
in
call
popa
pop
daa
das
in
out
out
jo
push
pusha
cmp
pushf
cmp
inc
or
inc
aas
in
pop
add
xor
(bad)
dec
or
in
cs
sub
or
in
movs
sar
stc
dec
sbb
xlat
and
pop
adc
xor
or
xor
aad
or
add
jmp
ret
or
xchg
and
mov
retf
int3
and
or
jg
stos
cdq
mov
(bad)
xchg
mov
stos
pop
out
pop
test
adc
ja
fcomp
mov
dec
pop
add
pusha
dec
js
jae
inc
xor
aad
cmp
cmp
daa
daa
daa
daa
cmps
daa
cmps
cmps
daa
daa
test
mov
ins
push
jbe
adc
push
or
je
sub
test
adc
icebp
pop
call
push
lods
push
dec
in
push
test
sub
(bad)
mov
or
push
sbb
mov
repnz
test
nop
imul
and
push
xor
and
mov
adc
sbb
ins
fsub
mov
test
xchg
ds
clc
and
mov
pop
sti
or
inc
call
cs
mov
cmp
mov
lea
mov
(bad)
enter
test
fs
fwait
mov
xchg
fdivr
pop
jle
fs
out
jae
mov
les
mov
push
fst
jbe
mov
xchg
mov
lahf
jae
mov
mul
leave
shl
push
mov
inc
and
pusha
push
push
ret
mul
ins
pop
pop
imul
pop
sar
lock
sub
cmp
cdq
or
mov
out
dec
pushf
fnsave
fcom
sub
mov
dec
dec
icebp
dec
dec
push
adc
jmp
pop
ds
test
addr16
mov
cmp
in
add
das
push
lock
or
sub
in
pop
and
mov
mov
sbb
push
enter
pop
aam
or
xor
push
stos
cld
lds
inc
adc
inc
adc
and
mov
xchg
xchg
mov
push
push
mov
mov
pop
inc
or
rcr
or
inc
and
xor
mov
sub
(bad)
xchg
mov
add
ins
pusha
stc
sub
mov
lds
aam
xchg
xor
mov
fwait
je
ret
and
dec
xor
mov
sbb
sbb
loope
outs
push
push
(bad)
sbb
ins
add
cs
fcomp
je
stos
test
dec
push
cmp
and
add
fs
dec
retf
and
outs
leave
stos
adc
in
aaa
or
jne
sub
mov
push
imul
int
mov
jns
cmp
enter
or
clc
fisub
(bad)
sbb
and
or
xchg
sbb
lods
push
add
push
les
les
mov
cmc
and
inc
mov
mov
mov
xor
xchg
cmp
add
or
sub
xchg
call
inc
cmp
cmp
pop
add
dec
mov
es
xor
push
push
inc
mov
xchg
cli
cmps
movs
sbb
lds
dec
dec
mov
in
(bad)
adc
cmp
pushf
mov
dec
call
in
outs
jecxz
fisubr
jns
lahf
or
xchg
cmp
out
loope
loope
dec
daa
outs
pop
mov
icebp
cwde
push
or
repnz
pop
fsubr
pop
adc
jl
xchg
and
(bad)
mov
leave
sub
xchg
xor
xor
inc
sbb
loope
add
inc
std
mov
mov
mov
adc
inc
js
nop
sbb
dec
xor
cdq
fisub
jmp
add
into
push
inc
movs
daa
jle
clc
mov
jmp
fisubr
inc
fimul
mov
test
inc
int3
ja
test
adc
nop
xor
in
add
dec
xor
or
jae
xor
cmp
xchg
sbb
push
ja
call
mov
push
xchg
out
sub
and
or
xchg
jbe
or
add
xchg
push
ins
or
fwait
jb
cwde
loope
mov
cmp
mov
mov
fcmovbe
mov
stc
das
pop
mov
inc
imul
adc
push
les
bound
and
fistp
iret
jae
mov
ret
cmp
iret
movs
ret
dec
dec
dec
sbb
adc
sub
sub
adc
sub
dec
dec
or
addr16
dec
cmc
or
pop
test
sub
add
add
add
add
add
add
add
add
add
and
inc
adc
jno
xchg
mov
shl
xor
fiadd
or
add
add
adc
add
jo
jecxz
dec
mov
mov
stc
pop
in
clc
loop
ret
outs
pop
mov
jb
retf
xchg
cs
mov
sub
cdq
ds
or
mov
add
retf
pop
mov
ret
push
push
xchg
repnz
lea
cmp
mov
call
adc
and
add
std
sbb
ficomp
data16
inc
cwde
dec
dec
mov
lahf
push
stc
or
push
js
mov
push
cmps
lahf
sub
add
test
in
pop
sbb
or
inc
nop
pop
mov
sub
or
xchg
aaa
test
jl
mov
xchg
sub
adc
dec
xchg
push
cmp
sahf
adc
test
xchg
das
adc
mov
iret
or
lods
shl
push
sub
cli
aas
fsubr
(bad)
xchg
sbb
test
xor
ds
cmps
adc
push
push
(bad)
mov
xor
xchg
cmp
ins
or
out
sub
dec
inc
test
xchg
shl
adc
hlt
mov
mov
cmp
clc
outs
add
sub
xchg
inc
jmp
sub
push
jmp
sub
sbb
sbb
cmp
mov
mov
mov
cld
movs
stc
dec
repnz
in
push
movs
cmp
cmp
movs
cmp
movs
add
dec
test
inc
repnz
sub
movs
cmp
cmp
cmp
cmp
push
push
jmp
test
movs
cmp
movs
cmp
cmp
xchg
jmp
xchg
adc
dec
cmp
loopne
push
cmp
stc
inc
fild
sub
sub
or
ins
pop
xor
movs
test
aas
aaa
leave
test
cmc
sub
add
sbb
inc
or
arpl
pop
cdq
out
inc
cmp
sub
inc
ss
(bad)
in
shl
(bad)
retf
pop
xchg
adc
push
clc
dec
inc
sbb
xchg
lods
push
jecxz
dec
shl
stos
lea
cmps
xchg
test
sub
out
sub
push
jmp
and
mov
aas
lea
pop
test
add
(bad)
and
and
jmp
and
lods
jns
add
mov
test
outs
mov
jge
test
pop
mov
sti
retf
inc
jne
sub
rol
and
inc
add
stos
push
imul
ins
ss
out
out
sub
jb
pusha
fnop
aaa
in
dec
push
dec
outs
icebp
in
xchg
push
sub
shl
loopne
mov
mov
xchg
js
cld
sahf
ins
pop
pop
cmp
repnz
xor
add
push
and
adc
mov
xor
xor
or
mov
mov
and
les
adc
add
shl
xor
inc
add
lock
xchg
adc
loope
or
push
sahf
jge
cmp
fs
sbb
pop
inc
cli
and
test
pop
sar
pop
shr
cmovg
and
jo
je
loopne
jl
ins
ins
dec
mov
jmp
mov
or
mov
sbb
mov
test
or
stos
xchg
icebp
add
lds
xchg
imul
fst
push
mov
ins
push
jle
and
pop
loop
xchg
pop
fsubr
test
jae
jmp
inc
push
adc
mov
add
xchg
sub
inc
scas
and
push
scas
adc
xor
outs
xor
test
in
inc
push
add
fcomp
xor
ins
int3
mov
jg
sar
add
mov
aam
loop
mov
add
inc
xor
dec
mov
cmp
jae
std
cdq
in
fidivr
adc
std
dec
inc
pop
pop
cmp
cmp
(bad)
lds
pop
test
mov
(bad)
es
(bad)
xor
ins
adc
fnstenv
enter
xchg
je
clc
les
daa
cmp
fstp
and
sub
push
pop
and
or
in
sbb
inc
mov
jle
cld
(bad)
mov
push
mov
adc
cmp
xor
adc
bound
fwait
lock
stos
out
rcl
cmp
das
retf
pop
jnp
ror
adc
xchg
in
shr
mov
mov
sub
xlat
arpl
pop
rol
jnp
pop
ja
fstp
shl
data16
sub
imul
clc
xor
push
call
popf
les
mov
int3
mov
pusha
cbw
ror
call
das
inc
push
cmp
add
ja
(bad)
adc
lahf
stc
das
mov
mov
dec
add
jo
and
xor
and
movs
cmp
popa
and
cmp
xchg
xor
add
pushf
add
adc
inc
shl
lods
iret
and
pop
sub
out
jge
sub
xchg
lods
fisub
lock
or
mov
sub
ret
xor
(bad)
sbb
fidivr
pop
je
out
cmps
add
ins
inc
push
xor
inc
cmp
xor
movs
sub
pop
clc
pop
or
add
jg
lock
xor
jo
popa
rol
xor
xchg
xor
fwait
aaa
jmp
cli
dec
(bad)
push
mov
out
inc
pop
test
jae
jge
push
rcl
or
cmp
jae
xor
loopne
in
or
scas
push
(bad)
pop
mov
and
cmp
inc
bound
xor
mov
adc
or
pop
push
cmp
int
das
mov
cwde
mov
pause
es
mov
rcl
adc
mov
sub
xchg
add
xlat
xchg
pop
dec
xchg
shr
inc
xor
mov
pop
mov
cs
mov
pop
(bad)
retf
loope
js
gs
jg
(bad)
or
(bad)
(bad)
xor
adc
push
je
jmp
or
retf
or
inc
leave
out
psubusb
pop
and
add
shr
xchg
cmp
out
(bad)
sbb
das
dec
imul
push
xchg
xchg
ret
cmps
mov
lods
sbb
xchg
int3
cdq
call
sbb
out
adc
cwde
test
add
fld
push
add
jne
adc
stos
mov
xor
xchg
jbe
dec
adc
dec
xchg
jb
add
lods
cmc
xchg
xor
sub
sahf
sub
int3
push
ret
fisubr
push
jo
imul
mov
(bad)
xor
xchg
das
and
xchg
inc
and
mov
mov
cs
mov
cs
mov
cs
mov
lds
pop
int
pop
jl
xchg
lods
imul
sahf
ret
mov
mov
pushf
mov
les
and
ror
cli
dec
cmp
mov
cwde
cmp
xchg
test
out
int
cld
sbb
mov
or
cmp
in
xor
(bad)
ficom
ss
imul
mov
and
sub
enter
fs
jb
mov
mov
loopne
out
rol
int3
xchg
sub
sbb
inc
push
sub
movs
test
cs
jmp
dec
mov
fcomp
ficom
mov
add
(bad)
mov
inc
push
pop
fistp
cmc
mov
out
pop
dec
ret
clc
cmp
sar
mov
jg
(bad)
clc
das
lock
pop
mov
pop
les
adc
push
or
cmp
jo
push
(bad)
ins
es
dec
xor
rol
aas
js
retf
mov
mul
repnz
out
pusha
loop
mov
lahf
jno
jnp
push
int
icebp
mov
movs
fisttp
dec
scas
cdq
in
es
test
mov
jb
xlat
xor
mov
mov
ror
push
imul
call
test
aaa
jbe
ins
call
les
or
sbb
sbb
int3
push
or
add
mov
repnz
jns
push
iret
lods
sbb
shr
mov
xor
lods
lods
lods
fiadd
rcr
push
pushf
mov
cmp
cdq
cmps
cwde
retf
(bad)
mov
into
cmp
leave
sar
add
movs
xchg
dec
inc
cmp
movs
cld
rcr
pusha
cmc
and
cmp
and
shr
dec
pop
pop
cmps
lods
mov
test
mov
add
push
stc
jl
int3
jp
xor
pop
mov
cmps
mov
pop
sbb
adc
mov
in
or
mov
(bad)
es
iret
adc
aas
push
js
mov
loopne
push
sbb
repnz
leave
out
js
jmp
push
inc
imul
xchg
rcl
adc
pop
shr
repz
mov
xor
add
out
cmc
in
das
mov
add
icebp
or
mov
cs
lods
mov
inc
xchg
push
jecxz
push
add
shl
fucomp
cs
(bad)
push
cmp
loopne
test
(bad)
into
and
pusha
sub
push
mov
fidivr
popa
shr
fisub
repz
and
popf
add
je
addr16
out
repz
(bad)
cmp
pushf
add
aaa
cmp
call
into
lahf
lods
jmp
cmp
pushf
cmp
cmp
mov
push
jae
jmp
cs
je
addr16
repz
das
pop
shl
popf
aas
pop
shl
xchg
(bad)
je
popa
retf
das
pop
shl
popf
das
pop
xchg
cmc
popf
aas
pop
shl
popf
aas
pop
shl
popf
pop
pop
shl
popf
pop
pop
shl
popf
das
pop
shl
lahf
arpl
cmps
jl
scas
movs
mov
jmp
and
sub
test
add
icebp
add
xor
lds
and
loop
loopne
sub
and
inc
test
mov
icebp
es
lahf
mov
push
pop
xchg
rcr
and
ret
xchg
dec
mov
dec
jp
test
xchg
out
(bad)
xor
or
sbb
adc
xchg
out
xchg
shl
and
sbb
jo
fdivr
xchg
mov
mov
ja
mov
(bad)
je
out
pop
jae
fiadd
jp
or
xor
xchg
test
jmp
or
sbb
cdq
or
ret
inc
fstp
icebp
cli
jecxz
or
dec
aas
inc
push
pop
cld
adc
icebp
sbb
xor
sbb
xlat
jmp
lock
push
sub
sub
aas
loopne
mov
jp
inc
movs
loopne
jnp
xor
push
scas
pop
pop
sub
sahf
inc
sbb
or
pusha
retf
mov
aam
sahf
test
jns
jno
push
pushf
mov
or
hlt
adc
dec
mov
setno
loopne
cmp
sar
cs
ror
mov
push
push
out
ror
movs
xchg
or
bound
adc
sub
mov
test
jno
pusha
cmp
fisub
dec
sbb
dec
mov
sub
(bad)
mov
jne
(bad)
in
loop
mov
mov
add
and
es
cmp
mov
inc
mov
aaa
dec
xchg
adc
cwde
dec
aad
retf
fld
xchg
mov
(bad)
fmul
sbb
pop
push
xchg
lea
xor
aad
xor
jl
jmp
lock
(bad)
ins
arpl
icebp
js
ja
push
scas
std
push
pop
test
hlt
mov
shr
div
(bad)
aad
push
dec
repz
jns
jns
inc
mov
jo
rol
fstp
sub
retf
sar
add
mul
adc
or
jmp
sbb
xchg
pushf
call
lock
sub
add
adc
(bad)
and
out
sbb
mov
xor
mov
bound
cmp
push
mov
pop
lock
sub
imul
jns
or
mov
test
push
xchg
push
mov
mov
stos
sbb
adc
add
dec
push
add
rol
sub
add
and
popf
add
inc
inc
dec
push
jle
jecxz
cmc
add
(bad)
push
push
push
inc
out
mov
xchg
xlat
adc
jmp
into
or
clc
call
inc
and
lock
scas
stc
cmp
into
or
fisub
cli
jns
jns
inc
mov
pop
sbb
pusha
(bad)
sbb
pop
pop
mov
add
add
ror
ficomp
cmp
cdq
jge
pop
das
out
sbb
dec
fs
or
xor
push
or
xlat
in
inc
scas
test
aad
adc
mov
xchg
popa
push
dec
pusha
push
cmp
xor
lock
stos
xor
jle
push
add
repnz
fs
and
out
push
xor
add
cmp
push
loopne
fs
les
jmp
fdiv
arpl
push
xor
lahf
arpl
(bad)
jecxz
psubw
xchg
sar
mov
hlt
sbb
pop
mov
or
dec
mov
lods
mov
(bad)
fs
mov
sbb
aas
fsubr
cwde
shr
cli
jns
leave
sti
lock
mov
imul
jb
fdiv
cmp
cs
outs
and
sub
mov
adc
inc
cmps
or
jmp
loopne
pop
mov
mov
jo
jg
or
retf
int
gs
std
ja
popa
mov
pop
lahf
repnz
stc
dec
dec
fcomi
mov
xlat
mov
fnstenv
lods
in
das
sub
(bad)
cwde
push
pop
sub
int3
cmc
les
xchg
sbb
add
xlat
jecxz
push
pop
cld
ja
mov
sar
(bad)
int
repz
imul
ud2
test
or
outs
xchg
dec
push
jecxz
push
cmp
jmp
iret
popa
in
ds
pushf
hlt
das
js
pop
jmp
lock
in
jbe
sbb
out
jo
arpl
adc
pushf
xchg
cwde
jl
out
or
and
cwde
xor
sbb
xor
movs
fdiv
mov
arpl
pop
retf
push
cmps
jbe
pop
xor
rcr
xor
sbb
mov
push
aam
inc
js
(bad)
mov
sbb
cmp
add
loopne
mov
inc
pop
pop
jne
inc
dec
in
mov
addr16
sub
xchg
push
sbb
jmp
xchg
call
call
not
jmp
jp
mov
dec
pop
jnp
mov
rcl
and
mov
rol
add
sar
xchg
xor
(bad)
dec
lods
xor
sbb
std
inc
xchg
cmc
dec
ret
sub
xor
clc
fdivp
inc
in
mov
xlat
xor
jmp
jg
mov
jp
nop
pop
fdiv
dec
mov
cmp
sbb
jno
sar
jmp
cmp
in
pop
lock
ja
push
stos
inc
adc
mov
add
jne
jno
dec
fidivr
aam
dec
mov
xchg
loopne
pushf
inc
sbb
mov
aam
xchg
(bad)
imul
adc
dec
xchg
in
imul
aad
pop
cmp
dec
jns
pop
movs
call
xor
sub
adc
inc
mov
sub
pop
movs
mov
mov
push
dec
xchg
data16
pop
pusha
sbb
mov
and
dec
add
sbb
pop
scas
daa
rcl
icebp
rcr
mov
sbb
push
mov
stos
ja
inc
test
inc
(bad)
ror
jp
or
hlt
or
or
into
clc
lods
inc
push
cmps
fld
fdivr
mov
sub
adc
xor
dec
jne
test
(bad)
ins
arpl
psraw
cld
imul
iret
ret
sar
out
mov
dec
repz
mov
push
add
test
sahf
(bad)
jb
cwde
aam
adc
mov
adc
pop
jg
pop
push
or
xor
mov
mov
and
test
fiadd
mov
lods
cli
inc
fld
xor
outs
or
aaa
popa
(bad)
sub
xor
mov
push
rol
inc
rcl
and
cwde
out
test
sbb
xchg
jmp
mov
sbb
push
inc
(bad)
rcl
inc
fiadd
mov
add
mov
jbe
(bad)
ror
xchg
bound
(bad)
add
inc
retf
or
shl
sub
pop
jl
pusha
pop
fs
push
xchg
sub
jmp
aas
xchg
mov
les
scas
cld
dec
clc
fist
sub
pop
adc
and
xor
pop
int
enter
xchg
and
mov
dec
mov
cmps
dec
xor
push
jne
xchg
sbb
je
push
pop
aam
add
fimul
test
loop
adc
cmp
adc
cmp
movs
cmp
shl
daa
loopne
mov
pop
sbb
dec
xor
stos
ja
out
movs
mov
push
ins
mov
out
jnp
rcr
push
dec
popf
out
mov
pop
or
mov
dec
out
adc
cmp
sbb
push
jnp
sub
add
std
push
push
mov
test
and
mov
add
scas
fild
jmp
or
mov
mov
gs
dec
jmp
(bad)
jp
mov
pop
retf
inc
mov
cld
push
sbb
jg
stos
mov
mov
cwde
(bad)
sbb
inc
push
pop
das
or
mov
pop
xchg
mov
xor
or
mov
sbb
mov
mov
out
jp
push
and
rcl
mov
retf
and
aad
cwde
fisub
sbb
push
in
cmp
call
and
pop
test
in
jae
aam
sub
mov
mov
rcr
mov
test
test
pop
retf
repz
jge
jecxz
sub
jp
fimul
pminsw
retf
int
mov
retf
mov
(bad)
sub
sub
test
test
sub
mov
(bad)
mov
mov
inc
mov
in
jno
clc
out
pop
xor
cmp
inc
fistp
or
sbb
js
bnd
stos
mov
pop
retf
cmp
imul
jp
push
aas
or
hlt
xchg
loope
popa
and
std
sub
lock
and
xor
fidivr
mov
sahf
mov
loop
dec
pop
push
xchg
cmp
inc
retf
and
das
xchg
xor
mov
or
lock
inc
idiv
push
(bad)
out
dec
mov
and
ret
pop
mov
lods
fidivr
shl
pop
les
sahf
adc
mov
mov
hlt
lock
cli
lock
stos
sar
jmp
movs
push
rcr
jmp
add
lods
fisub
pop
test
(bad)
jecxz
fidivr
scas
out
pop
add
mov
inc
jecxz
loop
outs
or
(bad)
cmp
leave
fcomp
add
lock
pusha
pop
or
fcom
ins
mov
xor
jmp
jbe
mov
loop
dec
mov
dec
pop
shl
jnp
mov
or
out
repz
xchg
mov
cmova
mov
adc
test
xchg
sbb
enter
test
out
sbb
pop
test
cld
sub
call
shl
(bad)
xchg
movs
in
mov
js
dec
lock
popf
enter
hlt
icebp
inc
xor
test
ret
inc
push
ror
dec
sbb
fwait
mov
inc
jne
fld
loopne
mov
jmp
cmp
test
sub
xchg
and
xor
cli
retf
leave
and
xor
cmp
in
xchg
ret
inc
mov
mov
repz
cmp
out
xor
cdq
(bad)
in
inc
jbe
mov
and
sbb
test
add
mov
add
mov
xchg
mov
es
loope
push
or
retf
call
iret
ds
repnz
dec
sub
fdiv
fistp
jmp
or
ja
call
and
data16
outs
rol
cmp
and
or
ja
gs
addr16
or
repnz
inc
icebp
stos
mov
test
(bad)
and
std
pusha
imul
cmp
sbb
xor
addr16
inc
add
mov
xor
cmp
mov
ss
xchg
add
cmp
cmp
mov
popf
idiv
pxor
jb
add
and
(bad)
int3
cmps
xchg
inc
add
dec
iret
pop
sahf
push
retf
xor
out
jmp
xor
pop
daa
aas
mov
dec
pop
lods
ins
ror
sbb
xor
adc
mul
jno
pop
mov
cmp
inc
std
fist
xchg
adc
mov
or
test
jo
mov
adc
mov
sti
nop
xchg
xchg
dec
hlt
add
stos
iret
neg
sbb
jmp
cmp
call
mov
cld
fmul
push
cs
sub
xchg
sub
push
cmp
and
push
sub
icebp
push
loop
js
lods
ds
and
add
pop
out
xor
pop
cwde
mov
push
repz
mov
xchg
lock
dec
pop
addr16
xchg
fsubr
pop
mov
mov
call
gs
jl
hlt
fbstp
aam
sub
inc
jne
xor
add
loop
(bad)
xlat
inc
(bad)
push
xchg
push
out
cli
nop
cmp
xchg
rol
mov
mov
sub
into
pop
mul
dec
out
dec
add
scas
mov
jo
mov
pop
ins
push
pop
sbb
outs
scas
movaps
inc
fistp
jb
add
xor
push
in
adc
push
data16
mov
out
jb
xchg
or
adc
(bad)
pop
add
(bad)
stos
adc
dec
sbb
push
arpl
es
aad
pop
adc
jb
shr
bound
mov
cdq
stos
mov
ja
cwde
push
lods
dec
jge
arpl
out
stc
mov
aad
or
mov
mov
add
sbb
and
and
mov
pop
push
push
shl
xchg
xor
mov
lock
jo
mov
push
pop
test
cmps
xchg
in
mov
(bad)
jp
mov
pop
jnp
lods
pusha
loop
lods
sbb
daa
sub
neg
pop
leave
xor
sub
movs
dec
xchg
sub
and
or
fucom
repnz
add
lock
(bad)
or
scas
or
ins
or
inc
aaa
test
and
push
frstor
and
xchg
sub
push
sub
xlat
and
clc
add
jns
rol
sahf
xchg
adc
das
jb
or
das
cdq
sub
loopne
arpl
xchg
adc
aad
inc
xchg
jnp
push
rcr
sub
add
aaa
arpl
shr
sbb
dec
push
push
ins
(bad)
iret
jb
int
push
push
test
jns
in
xor
sti
das
imul
dec
inc
pop
inc
pop
mov
retf
xchg
push
or
xor
les
or
pop
pop
into
mov
xor
mov
out
scas
pop
aam
popa
pop
xchg
mul
aad
scas
rcl
sahf
leave
out
and
test
scas
test
pop
cmps
mov
cmp
fld
loopne
mov
dec
xchg
ret
sbb
dec
dec
(bad)
sbb
fs
cmp
retf
sti
xor
addr16
std
xchg
cmp
arpl
jns
enterw
jns
jns
gs
or
and
xchg
dec
fdivr
mov
cmps
jns
jns
inc
ins
mov
je
pop
fcomp
inc
outs
std
imul
cmp
lods
leave
sbb
ins
sub
sub
mov
in
push
dec
lock
and
aaa
mov
ret
push
mov
cmp
xchg
imul
jge
ja
stos
cmp
mov
jecxz
mov
shr
mov
enter
sub
cmp
xchg
cs
push
sbb
loopne
mov
test
xor
xor
ret
push
outs
in
cmp
xchg
imul
arpl
neg
fld
pop
repnz
pop
fldcw
shl
std
call
scas
repz
mov
sar
push
mov
imul
mov
repnz
dec
pop
pop
cdq
je
ja
mov
cmc
lods
movs
loope
std
mov
rol
cmp
xchg
push
or
cmp
and
push
xchg
pop
xchg
arpl
inc
stos
inc
shl
add
inc
jns
cli
mov
out
shr
leave
out
and
mov
or
jge
sub
jge
mov
push
ret
js
test
adc
cmp
jbe
arpl
pop
mov
lock
or
ret
shl
out
pop
xlat
or
les
add
dec
cs
xchg
test
pushf
mov
shl
jg
and
and
ins
aam
cmp
out
stos
sbb
loop
out
shrd
mov
loope
scas
inc
or
adc
arpl
sub
jge
pop
mov
(bad)
not
loope
stos
fiadd
sahf
adc
adc
je
mov
std
jo
fild
jae
ffree
loope
jmp
pop
dec
inc
and
call
add
xor
sub
aad
stos
sub
push
mov
and
es
or
out
jnp
mov
ds
lock
xchg
rcr
mov
xor
jb
jbe
mov
jb
sti
push
sar
les
sub
dec
lahf
stos
adc
loop
test
stos
sbb
call
jno
cmps
pop
xchg
mul
aad
xchg
imul
jno
sub
add
hlt
pop
cmps
sahf
rol
push
mov
pop
jmp
loope
nop
sar
(bad)
enter
sbb
mov
adc
fstp
mov
adc
sbb
leave
scas
out
add
cmp
pop
mov
xchg
(bad)
xlat
js
xor
jne
cmp
test
ins
(bad)
dec
jae
movs
fstp
push
inc
rcr
xchg
pop
pop
aad
mov
aas
cmp
daa
enter
int
aam
xor
idiv
retf
sti
sub
leave
stc
cdq
xor
daa
xchg
repz
das
in
stos
test
call
or
inc
retf
sti
aaa
and
out
dec
das
in
(bad)
cmps
mov
cmp
cdq
popf
popf
fwait
aas
xor
xchg
ins
lahf
cwde
jae
daa
out
in
fstp
repz
add
jp
addr16
inc
stos
sbb
movs
je
shr
push
mov
fwait
data16
dec
jmp
call
in
arpl
xchg
stc
xchg
test
xor
jge
lods
dec
and
inc
sbb
and
ja
cmps
pop
push
sub
jp
mov
pop
cld
pushf
add
mov
cli
dec
sbb
pop
mov
or
lahf
cmp
mov
cmps
fnstsw
pushf
jns
xor
(bad)
(bad)
pushf
jns
xor
pop
fdiv
iret
daa
out
dec
sbb
cdq
iret
stc
pop
cdq
ja
push
fnstsw
retf
pop
cdq
lods
mov
cmp
int3
imul
mov
cwde
pop
sub
fst
ss
xor
retf
arpl
xor
ss
fsub
push
cmps
sub
lods
mov
mov
rol
jo
xor
xchg
push
and
or
jne
or
sti
inc
in
repnz
sti
dec
inc
test
cmp
outs
add
ror
test
cld
pop
jo
ja
rol
inc
cmp
pop
in
xchg
test
loop
neg
adc
sbb
jp
jl
dec
movs
aam
mov
pop
pusha
or
or
jp
inc
pop
int3
mov
push
div
call
pop
mov
ds
pop
cld
test
cdq
mul
jne
sti
retf
lock
and
movs
add
push
cmovp
pop
mov
add
inc
jo
popf
das
rol
pop
inc
lock
stos
adc
mov
add
addr16
cwde
and
dec
or
leave
push
popa
adc
sbb
icebp
inc
retf
add
cmps
(bad)
jne
adc
inc
sub
cmps
jbe
shl
push
push
sbb
mul
inc
lahf
xchg
pusha
mov
push
add
push
rcl
xor
push
call
test
jb
arpl
gs
fsubr
je
or
mov
aaa
mov
sub
in
outs
movs
pop
std
or
sub
dec
inc
sub
inc
xor
cmp
repz
push
jb
mov
data16
sub
ins
test
jp
clc
sbb
jmp
sahf
leave
jmp
add
sbb
ja
and
pop
clc
inc
xor
add
add
(bad)
aam
imul
dec
or
out
loop
lds
xchg
pop
adc
xchg
sahf
in
mov
mov
ficomp
sub
add
sub
loope
mov
sbb
mov
mov
cmp
xor
xchg
pop
cmc
dec
out
inc
mov
jae
mov
jne
stc
int3
mov
dec
imul
(bad)
push
ss
add
sbb
out
scas
push
aaa
sbb
into
cmps
aad
mov
pop
push
movs
and
mov
in
bound
loop
push
jp
pop
push
mov
mov
mov
xor
push
loopne
mov
(bad)
in
test
fisubr
leave
sub
push
add
cmp
call
add
jmp
pushf
stc
shr
cdq
cmp
out
aas
dec
cdq
fild
pushf
(bad)
test
mov
jmp
stc
inc
pop
jge
jmp
sbb
or
push
jp
das
adc
sahf
shr
call
bound
dec
or
cs
scas
bound
inc
lods
and
jp
and
loopne
or
movups
push
movs
xor
push
jge
sub
mov
rcr
adc
dec
jno
retf
add
bound
jne
mov
inc
out
leave
out
and
adc
jo
mov
jae
pop
inc
push
inc
cmp
sub
cmps
mov
pop
popa
inc
pop
sbb
out
mov
fisubr
out
or
scas
lea
aam
or
fcmovne
mov
cdq
xor
jp
out
add
popf
add
mov
retf
add
dec
or
or
je
iret
sub
(bad)
xor
adc
or
hlt
or
mov
popf
add
pusha
adc
inc
inc
or
js
test
(bad)
xchg
mov
mov
jle
pop
pusha
test
or
cs
xor
inc
sub
sbb
mov
jo
cs
cmp
lea
nop
xor
mov
push
jb
iret
or
mov
dec
mov
into
push
xchg
call
push
or
test
loopne
inc
mov
cs
cmp
xchg
test
neg
sub
mov
xor
movs
pop
sti
push
sub
mov
das
mov
or
fcmovbe
adc
(bad)
cmc
jno
and
adc
sbb
stc
cmp
xor
jecxz
je
push
jo
cmp
adc
les
aam
dec
inc
mov
pop
inc
lea
sub
push
push
cwde
aam
or
retf
xor
or
lods
shl
jno
(bad)
sub
push
and
push
mov
mov
adc
xchg
int3
mov
rol
in
arpl
mov
pop
outs
call
xchg
push
xchg
adc
fidiv
sub
loop
in
mov
mov
imul
pop
cmps
dec
or
xlat
shl
jmp
jo
push
mov
sub
mov
outs
fdiv
xchg
shr
mov
sbb
sti
arpl
push
mov
fisubr
(bad)
aaa
and
(bad)
cmp
ret
mov
mov
jns
xor
or
(bad)
mov
outs
mov
stos
and
mov
test
lahf
mov
or
mov
cmps
xchg
gs
repnz
movs
clc
sahf
pop
out
div
dec
mov
pop
stos
or
and
repz
les
pop
(bad)
movs
clc
dec
mov
fs
push
sub
xchg
inc
inc
in
les
cmc
(bad)
xchg
sbb
inc
mov
out
cs
add
or
int3
pop
arpl
cmp
test
jne
mov
add
clc
mov
mov
out
das
sti
aas
adc
(bad)
push
pop
pop
xor
pop
push
clc
sub
jl
sub
shr
push
sub
push
call
sub
cmps
jne
dec
daa
shr
stos
inc
sti
inc
add
mov
mov
inc
add
xchg
in
add
sub
(bad)
mov
sub
in
sar
adc
icebp
xor
aas
pop
mov
js
jmp
rcr
les
leave
cmps
repnz
mov
mov
inc
xchg
inc
test
add
mov
mov
inc
mov
pop
mov
cdq
outs
fcmovne
imul
jg
push
add
mov
inc
rcr
fild
rcr
jmp
pusha
cmps
ficom
cwde
mov
adc
jb
mov
cmp
add
(bad)
push
fidivr
sub
lods
(bad)
cmp
fs
call
shr
sub
fsub
pop
imul
pop
shr
test
xchg
sbb
cwde
and
pand
(bad)
hlt
jbe
mov
out
aam
(bad)
ins
xor
(bad)
loopne
mov
and
xchg
adc
push
cmp
loop
pop
sbb
call
test
pusha
mov
dec
push
xchg
adc
xchg
and
mov
out
sbb
dec
ret
mov
jecxz
adc
mov
into
iret
jbe
cmovae
adc
ja
add
mov
inc
popf
push
push
arpl
cmps
dec
push
sub
leave
lods
lds
stos
sub
loopne
cwde
adc
std
inc
mov
out
jb
or
mov
pushf
push
int3
push
inc
movs
inc
ins
mov
imul
mov
jae
sbb
mov
enter
inc
ficom
and
push
adc
xor
mov
push
(bad)
sub
bound
test
jb
push
mov
xchg
pop
mov
push
mov
adc
sub
sbb
jp
test
pop
ret
imul
(bad)
sub
lock
add
cs
xor
dec
xchg
mov
sbb
mov
inc
outs
xchg
ficom
pop
fld
arpl
xchg
push
outs
rol
xlat
xchg
mov
push
test
push
and
pop
(bad)
and
push
popa
inc
add
xor
jo
shl
add
cmp
inc
jbe
add
enter
stos
aaa
out
add
xchg
frstor
inc
mov
jbe
mov
mov
movs
scas
das
add
lds
mov
add
cmp
pushf
inc
push
mov
cmp
xchg
mov
movs
rol
arpl
inc
push
pop
or
shr
pop
lods
lods
out
es
pop
push
adc
push
leave
fwait
out
push
dec
movs
jmp
ins
xchg
dec
sub
and
retf
sub
retf
das
cmp
jge
jecxz
cmp
(bad)
push
sub
ins
pusha
or
inc
stos
sub
xor
sbb
xchg
mov
and
push
push
lahf
cs
(bad)
inc
or
movs
push
sbb
aaa
pop
or
aaa
xchg
mov
dec
fisttp
mov
mov
sahf
(bad)
mov
je
sub
pop
les
pop
xchg
int
xchg
jg
loop
cmps
int
pop
movs
mov
les
adc
iret
pop
adc
fild
inc
ja
movs
mov
clc
xchg
jns
cwde
add
xchg
jne
nop
das
fdivr
outs
es
jb
jecxz
jae
movs
call
popa
mov
push
leavew
and
xlat
test
scas
fwait
leave
jmp
cwde
js
int
mov
pop
pop
push
lods
pusha
test
jmp
daa
int
test
sar
and
aas
xchg
stos
test
in
cli
push
mov
mov
xchg
xor
js
add
sbb
or
push
mov
stos
push
nop
dec
mov
and
popa
xor
xchg
jbe
cmove
pop
xor
icebp
fsubr
punpckhbw
mov
cli
inc
xchg
push
xor
gs
cs
xchg
bound
push
mov
shr
push
xor
push
(bad)
shl
dec
and
outs
hlt
mov
mov
cmp
pop
or
xor
push
cmp
cmp
dec
mov
sti
retf
pop
mov
repz
(bad)
(bad)
or
push
push
pop
(bad)
add
or
inc
fld
sbb
adc
add
mov
dec
and
pop
lods
push
sub
(bad)
imul
fwait
ror
and
xor
rol
pop
lods
sbb
dec
sub
add
test
in
xor
xchg
sahf
push
add
or
rcl
scas
mov
arpl
mov
call
ror
add
add
call
or
add
mov
loopne
mov
mov
add
dec
adc
inc
mov
mov
imul
out
loop
mov
sub
mov
add
and
push
push
(bad)
icebp
in
in
loope
test
cmp
inc
repz
xchg
pushf
pop
inc
das
mov
ins
sub
sub
cwde
sbb
and
jmp
ret
mov
sub
popa
aad
dec
gs
mov
sub
mov
sar
gs
push
dec
add
mov
loop
pop
lfs
popf
or
sbb
in
adc
(bad)
mov
std
sbb
adc
cmps
add
cmp
(bad)
lods
aad
push
scas
cmp
mov
ins
stos
adc
out
jle
pop
das
stos
pop
mov
mov
movs
push
adc
pusha
add
cmps
adc
retf
fnstenv
stos
cdq
ret
nop
and
aas
push
sti
shr
sub
or
loop
into
mov
retf
or
push
sub
mov
inc
pop
or
cdq
pop
sub
dec
sbb
leave
adc
adc
xchg
out
mov
outs
pop
mov
dec
arpl
adc
xchg
xor
or
outs
in
xor
jno
push
call
mov
int3
iret
fucomip
xor
das
sub
xchg
jne
xchg
or
sub
ins
mov
push
ins
xor
rcr
sbb
(bad)
jo
mov
mov
mov
sub
enter
xchg
cmps
xor
jbe
xor
loopne
(bad)
repz
retf
fild
xor
pop
test
xchg
or
push
cwde
sbb
cli
call
mov
mov
popf
dec
arpl
mov
loope
sbb
xchg
adc
xor
mov
adc
mov
mov
push
aaa
clc
jmp
inc
inc
sahf
js
dec
jne
(bad)
es
and
ficom
push
int
add
mov
dec
mov
sub
stos
into
xor
sbb
jmp
mov
jg
push
mov
sub
aad
jns
fidivr
pop
pop
arpl
push
dec
loopne
push
jae
push
add
push
sub
mov
jle
or
(bad)
and
push
mov
push
int3
jp
push
retf
push
or
loop
cmp
fbstp
je
jmp
add
mov
cmp
inc
or
ret
or
pusha
jmp
cmp
sub
and
pop
inc
popa
in
pop
movs
sub
push
fs
loop
pshufw
cmp
add
(bad)
loopne
pop
and
fwait
push
ret
test
pop
add
adc
pop
stos
cld
ficomp
cdq
or
scas
movs
ror
outs
xor
(bad)
and
lds
mov
xchg
jns
xor
and
or
rcl
cmp
jl
iret
ins
outs
fs
stos
lods
push
retf
mov
inc
in
push
sub
and
sbb
pop
jmp
pop
mov
in
add
stc
loop
or
(bad)
sbb
ins
xor
mov
imul
adc
xor
adc
jecxz
fcmovu
push
gs
inc
add
out
or
dec
in
call
xor
shr
in
inc
push
test
mov
inc
lods
push
cdq
icebp
mov
enter
mov
and
stos
sbb
jp
xchg
lods
mov
pop
in
or
sbb
pop
adc
repz
add
daa
cdq
or
ret
sub
dec
push
mov
push
data16
sbb
rcl
and
push
add
add
fmul
push
mov
xor
sbb
push
push
push
dec
xchg
rcl
enter
retf
xor
push
sbb
es
mul
or
xor
pop
jmp
dec
push
push
xchg
xor
mov
inc
add
inc
icebp
jle
fidiv
aaa
dec
mov
mov
les
sbb
(bad)
xchg
mov
push
mov
mov
test
lea
and
mov
adc
xchg
jns
enter
les
clc
mov
jp
les
fld
inc
adc
mov
imul
(bad)
idiv
inc
pop
stc
xor
xlat
addr16
sub
into
lock
xor
fcmovne
sar
out
xor
jae
dec
ins
icebp
iret
mov
push
add
xchg
add
rcr
inc
test
ret
retf
into
push
mov
in
pop
mov
lods
push
std
or
jne
cs
push
std
ror
and
inc
fnstcw
shl
fnsave
xor
jmp
or
xor
jnp
add
mov
jns
or
stos
int
sub
push
shr
mov
adc
mov
ins
pop
int
je
pop
aaa
out
or
jp
out
cmp
push
clc
(bad)
pop
ss
dec
adc
leave
stc
xor
and
push
out
adc
jb
test
ss
test
sub
std
and
fwait
xor
dec
aam
jmp
cdq
lock
icebp
dec
mov
jno
(bad)
mul
sbb
(bad)
mov
bnd
mov
dec
out
imul
cmp
mov
retf
push
dec
bound
push
cmp
dec
jmp
push
cmps
es
ins
aam
mov
xlat
or
or
js
stos
sbb
stos
(bad)
sahf
xchg
pop
inc
inc
push
sub
xchg
or
ja
adc
pop
icebp
jb
sub
inc
ss
pusha
cmps
mov
test
ret
pop
es
mov
int3
(bad)
(bad)
ficom
inc
mov
push
rcl
aam
sub
add
sbb
mov
push
push
add
push
scas
loop
jns
mov
dec
lods
sbb
dec
push
adc
pop
(bad)
fsubr
adc
popa
mov
sub
ins
push
hlt
jp
cli
inc
retf
mov
jle
test
or
add
gs
int
loop
int3
gs
mov
pop
xchg
hlt
mov
movs
adc
pop
cmc
int
mov
cwde
scas
cwde
cdq
lods
movs
xor
or
xchg
das
dec
ins
or
ins
inc
or
dec
jmp
std
mov
test
lds
jae
mov
fwait
pop
cmp
add
and
sub
lods
mov
jp
mov
fld
mov
cmp
in
or
xchg
mov
dec
pop
enter
adc
(bad)
sbb
jns
sbb
lahf
xor
(bad)
cdq
xlat
repnz
loopne
or
int3
inc
adc
or
mov
test
cmp
lds
loope
lods
push
mov
push
jbe
shl
jl
mov
repnz
sbb
ret
cmp
jbe
dec
sbb
or
sub
fisttp
bound
xor
pop
xor
fldcw
pusha
scas
sub
in
inc
cmc
mov
push
inc
(bad)
not
pop
call
out
mov
cmp
add
lods
dec
cmps
push
dec
dec
xchg
mov
sub
test
and
cdq
push
loop
dec
and
adc
pop
shl
and
mov
pop
add
dec
movs
or
sub
xor
(bad)
std
pop
(bad)
dec
fcomp
retf
stos
mov
mov
ins
pop
bound
mov
idiv
sbb
jecxz
inc
int
mov
mov
mov
mov
mov
sbb
call
jns
adc
or
mov
mov
fild
cmp
jno
inc
add
out
xchg
mov
mov
jns
dec
inc
adc
xor
ret
cmp
out
and
daa
and
sub
enter
xchg
sbb
sbb
test
in
inc
pop
or
adc
or
mov
outs
mov
aam
into
push
add
test
jo
cmps
popa
cs
add
adc
gs
in
shr
cs
jle
data16
lea
ret
jmp
mov
add
(bad)
leave
sahf
shl
adc
adc
pop
lock
popa
call
scas
cmp
neg
add
xchg
push
xor
dec
into
fs
shr
jnp
int
into
imul
ins
imul
out
hlt
xchg
movs
sub
sbb
sbb
das
push
and
cmp
test
stos
jno
add
mov
mov
in
adc
jne
ins
fld
adc
add
add
aas
int
cmc
add
fsub
cmps
sub
bound
lahf
loop
daa
clc
(bad)
loope
dec
sbb
mov
loop
sub
dec
sub
cmp
jmp
loopne
popa
xlat
bound
lods
aaa
imul
add
mov
push
mov
jbe
jg
sub
(bad)
in
pusha
xor
add
xor
xchg
xor
jb
jno
cmp
call
push
sub
retf
pop
loope
cmps
leave
sub
push
or
mov
arpl
out
repnz
je
in
imul
fnstsw
push
push
cmp
cwde
pop
push
adc
mov
pop
cmp
dec
xor
les
cmp
or
or
out
das
(bad)
sub
pop
xchg
jle
xor
pop
movs
lock
jge
out
in
fwait
jns
ins
mov
jo
mov
fcom
aad
jecxz
(bad)
push
(bad)
adc
fs
mov
xchg
ret
push
adc
mov
xchg
adc
leave
test
fwait
shl
inc
cmc
add
(bad)
mov
mov
imul
jno
push
into
push
(bad)
aam
addr16
push
sbb
mov
ds
mov
lock
int3
push
jp
pop
mov
mov
imul
adc
in
ret
lahf
push
pop
pushf
aas
imul
dec
cmc
fnstenv
aam
lods
sbb
fistp
test
sub
or
lods
adc
add
jae
pop
mov
aam
xchg
loop
xor
add
popf
aas
and
dec
mov
call
sti
cli
out
arpl
fdiv
ret
pop
pop
call
movs
stos
push
nop
in
cmp
jns
sbb
sbb
xor
sar
mov
test
add
xor
add
test
sbb
inc
jmp
mov
sbb
dec
lods
or
add
movs
cwde
icebp
imul
ret
dec
popa
add
cmp
retf
movs
les
repz
pop
xchg
std
pop
lock
inc
outs
(bad)
mov
pop
mov
pop
into
repz
movs
pop
jae
rcr
adc
dec
sub
popa
mov
pop
pop
inc
pop
cmp
daa
cmps
cmp
test
cmp
mov
push
inc
sub
jb
sub
jo
shr
fldcw
fisttp
jo
adc
mov
sub
pop
sub
mov
sti
jne
repnz
bound
test
test
jb
loope
adc
push
les
mov
jo
into
test
or
xchg
mov
xor
lahf
(bad)
inc
or
shl
sub
lods
jecxz
inc
aaa
add
cmp
mov
imul
fadd
fwait
push
sar
jne
popf
das
dec
xchg
lods
loopne
call
xor
test
jns
pop
je
xchg
test
or
pusha
push
repnz
jns
inc
sti
pop
dec
test
out
stc
out
arpl
aas
and
jnp
add
jno
movs
fptan
push
push
sub
xor
cmps
mov
out
push
sub
popa
inc
inc
add
mov
fisttp
push
enter
sbb
push
loopne
dec
enter
mov
mov
push
mov
xchg
imul
outs
aam
and
mov
adc
mov
fisttp
push
push
shl
xor
dec
jns
xchg
leave
jp
inc
popf
push
cmp
movs
sbb
cmps
fst
mov
push
push
out
sub
arpl
jne
je
dec
xor
lds
out
push
add
mov
xor
mov
sbb
dec
adc
inc
test
cmps
and
push
aad
sub
xchg
and
jbe
inc
out
lds
mov
or
imul
pop
or
or
push
popf
scas
jb
add
clc
push
es
fisttp
shl
lods
in
in
je
and
popf
inc
mov
xchg
les
data16
shl
fstp
es
xor
add
adc
jecxz
ds
fsubp
dec
xchg
adc
push
(bad)
cmps
mov
clc
jmp
jmp
jbe
sahf
adc
je
adc
add
test
sbb
mov
or
push
inc
sbb
push
sbb
and
xchg
out
inc
mov
aaa
ficomp
pop
mov
popa
call
outs
(bad)
xchg
sbb
pop
in
addr16
or
sub
add
mov
es
inc
jl
in
jle
out
pop
adc
xor
sbb
call
pop
std
data16
add
loop
or
fsub
(bad)
js
gs
add
rcl
rcr
retf
mov
mov
xor
or
mov
out
sbb
mov
push
mov
mov
sbb
push
dec
add
(bad)
xlat
in
or
rcl
or
push
lods
mov
jl
pop
sahf
cs
fadd
imul
daa
cmp
fwait
pop
or
adc
or
aad
rcl
ror
lods
adc
les
add
cs
or
sub
retf
pusha
pop
or
mov
ss
sbb
rcr
cmp
daa
mov
inc
and
sar
inc
xor
dec
push
fild
jp
retf
xor
add
stos
(bad)
jo
retf
add
add
push
push
pop
pop
retf
ins
jne
aaa
xchg
sbb
or
jno
in
inc
ror
add
aaa
fstp
mov
push
mov
cmps
sub
cwde
jbe
lods
or
jae
aaa
stos
or
test
adc
je
add
icebp
mov
ins
js
xchg
cmp
mov
inc
enter
jne
(bad)
aaa
test
and
cli
out
and
cdq
push
pop
clts
arpl
repnz
repnz
jbe
xlat
out
sbb
add
dec
addr16
sahf
jns
mov
pop
and
lahf
pop
xlat
gs
ins
(bad)
jge
or
jp
cmps
sbb
mov
sub
xor
ja
js
(bad)
add
jns
scas
xor
mov
jge
adc
push
push
clc
into
push
sub
loopne
mov
adc
pop
leave
jnp
bound
cli
mov
dec
jg
lahf
mov
cdq
push
fs
(bad)
int
les
popf
int3
xchg
jne
sub
pop
test
sub
test
mov
sahf
fistp
movs
into
sub
add
or
mov
ret
mov
push
out
cmp
push
mov
cmp
retf
jp
pop
movs
add
test
hlt
movs
jp
shl
and
fidiv
xchg
stos
xchg
add
mov
and
add
mov
jne
mov
xchg
add
xchg
rcr
nop
cmps
cdq
pop
fisub
or
xchg
push
dec
sub
mov
jmp
sub
(bad)
push
fisubr
jb
mov
pusha
pop
push
das
xchg
jge
add
call
(bad)
adc
add
mov
fcmovb
add
(bad)
push
cmp
jbe
mov
and
movs
jne
mov
or
push
push
cmp
aad
fwait
in
adc
sbb
test
and
add
ret
(bad)
sbb
adc
xchg
or
nop
sbb
ja
inc
scas
lds
pop
jnp
mov
lea
add
xor
adc
and
daa
inc
jbe
sub
int3
add
xchg
xchg
sub
ret
add
mov
add
outs
fisubr
add
push
sar
jne
ret
lds
xchg
push
add
push
loopne
jg
mov
call
pop
lods
sub
xor
fist
mov
outs
pop
ret
mov
loop
mov
(bad)
dec
mov
call
mov
push
leave
ins
pop
pushf
xchg
and
cli
or
sub
inc
(bad)
(bad)
cmp
sub
test
(bad)
and
jbe
jns
cwde
mov
mov
mov
jns
pop
pop
push
inc
mov
cmp
movs
jne
aaa
imul
dec
dec
test
push
adc
adc
dec
mov
cmp
pop
sub
dec
daa
cmp
push
outs
fstp
aam
dec
(bad)
aas
add
fnstsw
sbb
inc
mov
lds
call
int3
ss
add
shl
xchg
add
xor
push
jns
repnz
or
stos
xchg
cmp
inc
mov
and
jb
lods
push
mov
js
or
and
adc
mov
mov
cmp
mov
div
push
and
cmp
sbb
pop
pushf
and
out
xor
shr
aas
dec
jns
push
js
mov
sub
sub
adc
loopne
pop
stos
stos
push
push
push
outs
pop
mov
jp
add
cmp
add
aaa
dec
cmp
and
adc
pusha
cmp
mov
jl
out
cmps
clc
adc
or
cmp
xchg
add
xor
xchg
cmp
test
add
aam
mov
call
out
bound
inc
test
shl
and
in
js
cld
cmc
mov
movs
stc
stos
dec
cmp
xchg
vphaddubw
xor
add
stos
mov
inc
sub
jmp
jno
sbb
gs
scas
sub
jne
int
popa
jns
cmp
push
mov
mov
cmp
repz
xor
sub
sbb
je
mov
xor
and
dec
jae
(bad)
call
ror
cmp
test
imul
mov
ins
fwait
shl
push
aas
jb
into
clc
scas
pop
test
sub
outs
test
(bad)
jmp
shr
clc
push
test
cwde
cmovno
adc
sbb
call
mov
aam
test
xor
hlt
xchg
pushf
inc
aas
js
(bad)
xchg
cmps
mov
and
je
push
repnz
out
sub
add
test
cmp
loope
pop
xor
sbb
push
stos
cli
jae
fistp
retf
sub
shr
setno
outs
xchg
push
ficomp
push
xchg
mov
popa
xor
jb
dec
pop
fsub
ds
icebp
mov
inc
es
pop
sub
mov
iret
stos
(bad)
in
mov
retf
inc
mov
push
pop
pusha
mov
jbe
test
icebp
fidivr
in
jg
inc
or
xchg
lock
dec
mov
loope
sbb
out
outs
jne
push
inc
add
mov
js
imul
inc
and
fild
mov
jl
and
dec
jg
les
(bad)
push
test
outs
push
test
ret
adc
popa
popa
je
sbb
outs
add
fisub
rcl
cmp
into
add
mov
mov
leave
jo
push
adc
mov
sub
pushf
add
pop
xor
sbb
stos
sahf
in
call
jae
daa
or
repz
xor
cmovl
adc
and
sbb
addr16
jp
mov
jmp
ficomp
lahf
adc
adc
mov
and
nop
sar
push
cmps
sbb
inc
dec
jo
and
clc
cld
add
shl
push
or
and
push
or
jbe
jno
shl
scas
rol
cmps
inc
and
outs
mov
dec
stc
daa
sub
mov
add
cli
cmp
(bad)
daa
jmp
sub
popa
sbb
cmp
and
pop
imul
and
inc
test
add
xchg
cs
mov
pop
lods
xchg
mov
ret
shl
push
inc
cmp
sub
aaa
fidiv
xor
jmp
test
mov
in
jecxz
sbb
mov
test
cld
pop
test
xchg
stos
enter
adc
rcl
sub
adc
mov
repz
mov
or
(bad)
xchg
and
cdq
cmps
es
imul
bound
jo
add
xchg
jp
add
test
adc
imul
mov
int3
cdq
xchg
adc
sub
inc
sub
or
xchg
mov
ror
mov
(bad)
xchg
jns
jno
push
pop
add
push
inc
fisubr
dec
pop
fsub
jns
mov
ins
cmps
stos
cld
shl
test
out
dec
xor
cmp
in
or
cmps
cmovbe
push
mov
movs
paddsw
icebp
push
mov
test
ror
mov
dec
ins
or
cmp
imul
adc
leave
add
sub
loope
cmp
dec
jmp
and
jo
enter
cmc
push
loope
and
sbb
jbe
shl
test
inc
(bad)
pop
xchg
pop
ja
or
fcom
inc
data16
lock
cs
add
out
jne
retf
mov
jg
xor
pop
mov
dec
adc
test
bound
add
scas
or
or
sub
call
pop
dec
push
js
or
inc
(bad)
clc
repnz
sub
fwait
stc
pop
(bad)
pop
sar
pop
push
imul
(bad)
in
dec
in
cmp
adc
mov
pop
popa
sub
ins
inc
lock
inc
fidiv
jb
dec
nop
mov
jns
punpckhwd
mov
pop
push
xchg
or
mov
lods
pusha
out
mov
add
retf
and
add
adc
pop
or
add
shl
xchg
(bad)
lods
leave
mov
jns
push
sbb
and
popf
sub
mov
pop
mov
sahf
lock
dec
xchg
repnz
jo
in
jl
and
pop
test
sbb
sub
int3
xchg
inc
fdivr
mov
retf
lods
push
pop
jl
cmc
push
cs
xor
add
xor
(bad)
xor
adc
and
fs
jl
xchg
cmp
test
push
push
pop
xchg
jmp
loope
sti
push
jle
push
fmul
cwde
or
addr16
xabort
mov
stc
sbb
out
sub
cli
fisttp
out
sbb
out
call
dec
jl
ss
jbe
xor
rcr
clc
fdiv
push
push
out
jle
aad
push
push
int
mov
dec
jbe
mov
out
sub
jb
aam
add
mov
mov
leave
dec
stos
push
xchg
push
imul
adc
pop
rcl
pop
cmp
mov
add
inc
movs
ins
scas
mov
fcomp
pop
cdq
pop
inc
inc
dec
iret
xor
std
sar
push
adc
mov
loop
pop
jne
sub
mov
mov
xchg
mov
inc
ficom
push
repnz
stc
adc
xor
int
cvttps2pi
inc
or
or
jne
mov
ins
ja
xchg
or
push
cmps
mov
xor
and
xchg
xchg
inc
in
das
adc
jb
xchg
int3
cmps
mov
sub
jbe
stos
fwait
cmp
retf
xor
movs
popf
sub
dec
push
cld
push
inc
test
jp
sbb
sbb
pop
sbb
imul
ins
push
jmp
mov
mov
jnp
xchg
call
ror
fisub
jns
imul
sbb
rol
cmp
cmp
sub
lods
(bad)
pop
jge
or
xor
das
jns
out
inc
gs
ss
fdiv
push
lds
out
out
call
or
xor
sub
push
daa
push
sbb
push
push
sbb
jbe
lahf
repnz
sbb
sar
aam
push
das
mov
xor
movzx
push
add
in
fisttp
loop
ins
sahf
rcr
pop
iret
jmp
(bad)
adc
adc
sbb
inc
test
aam
cmps
mov
dec
inc
gs
add
int
scas
aaa
jns
out
dec
das
pop
mov
jmp
mov
jp
and
sbb
ficomp
cld
imul
cmps
cmp
int3
in
mov
rcr
out
adc
pop
add
xor
xlat
je
das
pop
add
ret
pextrw
push
or
cdq
push
inc
sub
fwait
add
loopne
movs
pop
sub
rcl
mov
neg
sub
cmp
xchg
cmps
mov
fsub
dec
mov
or
sub
xchg
push
jns
jnp
adc
(bad)
std
fdiv
test
adc
not
xor
pop
shl
pop
dec
cmp
xchg
das
inc
data16
(bad)
xchg
pop
inc
jp
xchg
push
addr16
adc
inc
cli
pop
dec
popa
int
pop
call
inc
mov
mov
pop
xchg
mov
push
(bad)
lock
aad
(bad)
push
aam
pusha
xor
movs
in
sub
out
lods
ds
call
loop
cmp
mov
pop
mov
pop
adc
cmp
jbe
pop
nop
pop
inc
pop
inc
add
neg
(bad)
fsub
cdq
pop
jp
jl
test
dec
jmp
push
daa
add
mov
rol
mov
aaa
push
pushf
pop
sub
repnz
cdq
adc
sbb
sub
mov
xor
cmps
movs
retf
pop
fisubr
pusha
mov
add
mov
xchg
jne
or
jp
mov
push
add
pop
outs
xchg
pusha
add
retf
inc
bound
push
mov
(bad)
sbb
cwde
jecxz
pop
pop
xor
les
cli
loop
pop
js
pop
inc
push
and
sbb
cmps
add
fs
inc
sub
adc
js
sbb
scas
xlat
pop
add
fs
sub
scas
dec
neg
jmp
stos
xchg
lods
ins
call
push
inc
ror
mov
(bad)
xor
add
in
les
mov
imul
or
mov
push
or
and
and
fcomp
(bad)
out
cmp
out
xchg
ins
mov
cmp
loop
shr
jnp
mov
xor
adc
and
xor
jns
out
rcl
ret
sti
mov
add
mov
sub
int3
inc
nop
dec
mov
loope
aas
mov
push
pop
fdiv
pop
sbb
test
add
adc
test
aas
jnp
xor
mov
ficom
sbb
das
xlat
pop
dec
jmp
or
pop
popa
repz
ss
add
push
fiadd
sub
jge
les
test
dec
mov
jmp
push
pop
xchg
push
push
mov
ss
and
ret
setns
sbb
mov
stc
retf
push
mov
add
mov
push
scas
push
or
or
inc
movs
shl
sahf
pop
stos
stc
bnd
repz
inc
mov
(bad)
sbb
cwde
adc
sbb
mov
push
push
pushf
push
cmc
cmps
dec
lea
jl
jp
dec
jl
fiadd
les
mov
pop
jo
movs
pop
mov
sbb
sub
jbe
adc
fs
ret
adc
call
dec
sbb
repz
sbb
sub
rcl
ret
sbb
jmp
xor
add
mov
ss
cmp
and
shl
aad
outs
push
sbb
cmc
inc
add
mov
inc
repz
aas
add
fsubr
jbe
jbe
lods
ret
lea
loop
out
mov
inc
rcl
dec
adc
mov
push
je
adc
push
jmp
add
xchg
(bad)
fld
sub
xor
fisubr
stos
cdq
pop
cdq
push
xor
leave
jb
(bad)
idiv
and
adc
loope
ds
or
rcl
dec
mov
adc
(bad)
pop
push
sbb
arpl
outs
subps
pop
mov
clc
inc
lods
pop
inc
jg
adc
cmp
sbb
mov
xor
mov
inc
arpl
shl
xor
mov
bound
gs
or
pop
out
or
sub
out
inc
das
and
retf
in
xor
push
xchg
pop
nop
out
in
add
push
leave
xchg
jne
int
fld1
mov
push
xchg
mov
out
lock
pop
pop
add
pop
pop
mov
es
inc
xor
fdiv
push
and
push
inc
cwde
mov
add
adc
bound
mov
mov
sub
add
dec
fisttp
mov
push
sbb
adc
retf
inc
loop
push
retf
mov
adc
jae
aad
sbb
sub
inc
inc
adc
push
fdivr
xor
stos
shr
jmp
aam
imul
mov
js
mov
inc
pop
movs
mov
jb
xor
sbb
sub
mov
jmp
xor
in
leave
loop
fs
xlat
mov
jbe
nop
pop
jns
push
cmc
(bad)
inc
retf
push
sti
out
test
dec
jns
mov
jp
loopne
cmp
add
test
gs
xchg
or
pop
push
(bad)
and
fsubr
adc
cld
ret
test
add
ror
arpl
mov
xor
ja
lods
imul
push
lods
jo
push
aaa
add
(bad)
mov
adc
xchg
clc
lahf
call
loop
mov
push
cmp
std
xchg
je
adc
pop
repz
adc
repz
js
or
js
adc
(bad)
icebp
sub
in
and
sub
icebp
cmp
icebp
or
ins
sbb
mov
jle
and
xchg
pop
arpl
sub
dec
stc
cmps
test
adc
jae
(bad)
lock
mov
ins
not
xchg
stos
and
les
icebp
add
cmp
shl
sub
jne
mov
mov
jl
mov
inc
sub
cdq
(bad)
mov
sub
jecxz
jnp
dec
stos
pop
cmp
mov
lock
sub
sbb
rcr
xchg
sbb
xor
dec
movs
jmp
sub
push
push
sbb
in
inc
pop
mov
pusha
mov
adc
push
sbb
xchg
out
pop
nop
cs
pop
rol
arpl
ret
arpl
pop
fsub
mov
push
arpl
daa
adc
xchg
aad
adc
mov
pop
mov
movs
mov
loopne
xchg
imul
outs
aad
jmp
cs
inc
icebp
jl
stos
xchg
fs
cmp
and
push
sbb
mov
adc
test
cmp
ror
scas
not
cmp
stos
retf
out
sub
mov
add
mov
jne
xor
into
push
lahf
pop
add
stos
sub
xchg
lods
xor
rol
and
call
out
sbb
sub
push
out
scas
cmp
lods
data16
cmps
or
jne
inc
sbb
jecxz
sbb
test
movs
sbb
mov
adc
icebp
add
mov
scas
xor
je
icebp
sbb
mov
(bad)
xor
adc
or
in
jp
repz
push
bound
movs
pop
xor
(bad)
push
fadd
pop
call
or
sbb
enter
mov
inc
outs
push
adc
call
push
test
mov
dec
xchg
mov
mov
test
scas
test
add
clc
push
imul
inc
movs
dec
(bad)
dec
pop
ja
test
and
scas
ficomp
jp
jge
aam
test
inc
dec
or
cmps
adc
out
xchg
daa
mov
iret
ss
cwde
pop
jo
push
sub
dec
mov
ins
push
scas
sub
jbe
aad
adc
mov
pop
(bad)
mov
sbb
mov
aam
or
rol
pop
sahf
int3
imul
dec
dec
test
(bad)
cli
inc
test
jmp
dec
mov
pop
int3
test
xor
les
xor
bound
ror
adc
lods
push
or
add
pop
cwde
shl
lea
xlat
push
push
mov
retf
ins
adc
jge
pop
mov
push
or
pop
cmp
je
(bad)
push
or
shl
outs
test
popf
mov
xor
xchg
aaa
inc
cdq
mov
jae
dec
int
lods
mov
jmp
jecxz
pop
dec
add
out
inc
loop
pop
inc
jle
xchg
xchg
js
add
out
push
cmp
int3
push
hlt
neg
and
pop
les
add
or
jb
lahf
fisttp
xchg
lahf
or
pop
adc
push
(bad)
stos
stos
xor
mov
cmp
repz
stc
sets
inc
sub
lea
dec
xor
sub
adc
nop
rcl
push
ins
or
pop
push
inc
aad
add
mov
fisubr
push
mov
cmc
jae
ror
mul
jge
push
xchg
lds
jl
test
fucomp
std
dec
sub
add
xor
inc
jmp
dec
or
inc
mov
push
nop
pop
xchg
jne
stc
(bad)
popf
cmp
out
popf
adc
xor
inc
inc
out
lds
mov
rcr
or
push
retf
fidiv
mov
mov
and
fld
inc
pop
sub
mov
pop
xor
inc
fucomi
or
adc
aas
loope
test
movs
int3
sbb
pop
retf
inc
pusha
ficom
inc
iret
stos
test
push
fld
xlat
dec
cmc
repz
int
in
pushf
ja
fist
test
aas
ficomp
es
sahf
push
fist
popa
in
icebp
inc
outs
adc
in
es
add
shl
push
or
mov
es
inc
push
mov
sti
xchg
sub
adc
xor
xchg
daa
mov
data16
nop
jae
enter
or
ss
adc
cmp
int3
jno
mov
jecxz
cwde
sbb
inc
mov
push
mov
xchg
pop
into
inc
jno
rdtsc
jmp
push
call
adc
dec
add
or
movlps
xchg
(bad)
add
cmp
clc
inc
fidiv
(bad)
xor
leavew
jge
ret
xor
cmp
inc
mov
ret
mov
jecxz
es
add
jae
jmp
jmp
push
xchg
jl
or
or
cmps
fs
push
popa
sar
pusha
cmp
ins
or
lods
push
mov
gs
pop
out
in
repz
mov
pop
jne
and
jp
imul
out
cmps
lea
scas
mov
push
jmp
(bad)
jnp
push
lods
sbb
retf
scas
xchg
push
pop
jno
ret
adc
js
sbb
gs
jae
loop
jecxz
jb
es
es
mov
(bad)
lock
mov
jge
cmp
(bad)
jge
xchg
sti
fild
ja
and
pop
adc
xor
jae
xor
lods
sbb
mov
mov
imul
mov
and
sbb
jns
jle
mov
in
mov
call
xchg
fmul
adc
test
scas
sub
scas
jl
mov
xchg
ins
sub
pusha
sti
mov
mov
jmp
mov
jo
stc
nop
dec
mov
sbb
xchg
sub
add
pop
xor
cwde
imul
xchg
adc
lods
popa
test
push
shl
sub
fs
data16
pop
mov
adc
sub
sub
mov
xor
push
(bad)
jo
mov
adc
jae
xor
push
pushf
stos
add
repnz
mov
adc
xchg
fwait
push
cmp
ror
push
dec
jle
xchg
jecxz
retf
inc
or
or
sub
jmp
in
jp
mov
mov
push
bound
test
cmp
shr
pop
out
jb
cwde
jnp
push
std
push
call
mov
out
cs
mov
mov
rol
cdq
pushf
in
and
add
mov
sub
test
out
test
sub
sbb
push
pop
add
jb
lahf
xchg
loop
ret
inc
gs
(bad)
repnz
push
stc
xor
cmps
js
dec
pop
pop
xor
xchg
cmp
shr
hlt
data16
cmp
or
sub
scas
repnz
inc
(bad)
repnz
jmp
out
call
repnz
dec
xchg
jne
imul
sub
daa
or
push
nop
aaa
jmp
push
dec
mul
(bad)
iret
addr16
ss
and
aaa
jns
std
inc
outs
push
jmp
inc
cld
mov
sbb
pop
mov
in
sbb
shl
adc
sbb
stc
dec
jno
mov
inc
jns
and
(bad)
enter
pop
push
xor
or
movs
nop
add
sub
adc
jl
sbb
out
add
mov
sub
jns
cmp
pop
repz
int
lea
xor
sbb
inc
xlat
fld
cmps
sub
imul
dec
xor
add
fadd
pop
enter
aad
ret
xlat
sub
or
in
pop
push
sar
int3
test
add
jmp
xor
repnz
jnp
sub
adc
es
ficom
aad
fcomi
pop
cs
pop
(bad)
xor
xor
inc
sub
push
sbb
add
sub
fld
in
jno
adc
add
mov
dec
fimul
inc
xor
les
dec
inc
sub
faddp
je
fdiv
and
and
add
jb
das
mov
out
add
dec
pop
loope
cmp
mul
jo
shl
shr
repnz
cmps
xor
outs
sbb
xlat
add
ins
out
add
ficom
adc
sub
inc
pop
jmp
xchg
or
sub
shl
(bad)
repz
lds
jge
repnz
xchg
shr
enter
cld
add
and
scas
test
mov
(bad)
int
(bad)
out
aad
or
ss
sub
inc
add
sbb
fs
pop
nop
sar
cmc
and
fwait
icebp
sub
mov
cli
inc
and
mov
lar
adc
mov
in
xchg
mov
pop
sbb
das
aam
add
cwde
pop
test
outs
scas
stc
xor
outs
cmps
icebp
xchg
dec
push
sbb
mov
jno
xor
aam
push
movs
call
cmp
push
lods
mov
je
inc
(bad)
movs
lahf
push
fimul
fild
sub
pop
fcomp
pop
in
in
xor
div
cmp
cmps
mov
pop
fucomp
mov
rol
mov
shr
ins
pop
in
fisttp
dec
dec
push
jb
dec
cmp
cwde
loop
inc
add
push
inc
jbe
mov
retf
retf
mov
inc
mov
les
dec
popf
gs
adc
pushf
ret
xor
sbb
outs
push
and
xchg
fstp
icebp
mov
loop
and
sub
icebp
jle
enter
jp
in
arpl
push
sub
fdivp
retf
cmp
enter
cmp
fnstcw
std
xchg
mov
dec
lahf
pop
neg
cmp
int3
scas
paddsb
cld
inc
ins
call
inc
das
sub
repnz
aas
(bad)
or
sub
ror
xor
mov
cmp
hlt
cmp
push
mov
push
jnp
pop
mov
lds
sbb
push
and
pop
cmp
mov
lods
xchg
add
mov
push
mov
adc
mov
or
inc
cwde
inc
mov
and
pop
js
inc
stos
adc
pushf
xchg
movs
into
xchg
mov
aad
pop
in
jle
xchg
push
movs
pop
cs
int
cmp
xchg
scas
popa
jecxz
push
xor
es
int
out
dec
out
repz
int
mov
pop
iret
popa
retf
(bad)
retf
inc
or
cmp
inc
lods
je
sar
mov
push
jl
int
xchg
loop
(bad)
fwait
stc
sub
dec
sar
sub
add
cdq
mov
and
push
xchg
ror
aad
and
push
sahf
psrad
(bad)
es
(bad)
xchg
xchg
jle
retf
scas
ss
fstp
mov
data16
cwde
lods
xor
jae
imul
daa
les
mov
mov
movs
popf
push
xor
fwait
rcr
mov
retf
xor
dec
aas
sub
sbb
mov
mov
xchg
pop
test
sub
jae
iret
mov
mov
mov
sahf
cmp
mov
dec
jne
pop
pushfw
sub
push
popf
jecxz
mov
jp
fwait
xor
ins
clc
inc
mov
data16
int
pop
xor
jae
push
jb
and
data16
das
adc
movs
lods
(bad)
mov
push
cmp
jl
cdq
cmp
mov
mov
outs
inc
rcl
js
sub
sbb
into
or
adc
lock
icebp
xor
in
loope
movs
inc
xchg
add
(bad)
and
(bad)
aaa
adc
jge
cmc
adc
gs
scas
movs
push
xor
fdivr
dec
mov
cld
lea
call
retf
stc
cmp
scas
rcl
outs
retf
movs
fcom
or
pop
jp
and
inc
pushf
stc
dec
push
jl
sbb
rcl
cmp
pop
pop
iret
and
(bad)
in
mov
in
ins
xor
inc
add
cwde
into
sbb
nop
jae
sti
push
in
dec
enter
pop
stc
sub
jmp
daa
jmp
jmp
inc
ret
mov
out
int
push
push
add
(bad)
shl
push
inc
call
rcr
in
inc
jp
test
fstp
dec
popa
dec
je
mov
stc
pop
mov
outs
push
pop
push
mov
fmul
mov
dec
inc
shr
sbb
add
push
ret
adc
cmp
cmc
sbb
test
add
(bad)
fst
cmc
retf
ds
in
push
std
jg
outs
(bad)
mov
jl
add
push
sbb
popf
in
popf
outs
sbb
js
adc
mov
lahf
adc
lods
push
sub
arpl
int
adc
in
ins
dec
cli
lea
xor
pop
ins
fs
push
push
push
fdivr
enter
mov
dec
repnz
and
sahf
adc
pop
sti
fwait
not
bound
xchg
inc
sbb
dec
lea
lea
fisubr
es
(bad)
push
sub
jb
enter
fnstsw
lods
mov
inc
mov
jmp
lods
sbb
das
in
je
pusha
sub
lea
fdiv
sbb
mov
out
retfw
div
add
sti
into
add
ins
into
mov
lods
adc
push
stos
int3
mov
xchg
test
adc
repnz
aam
push
scas
out
dec
mov
and
mov
jmp
dec
mov
xchg
outs
not
push
add
pusha
outs
dec
addr16
js
push
mov
adc
push
push
sar
adc
dec
in
out
inc
sbb
je
int
in
sbb
cmps
shl
jmp
sbb
pop
and
push
test
hlt
test
push
add
mov
ret
and
ins
inc
push
jmp
int
clc
add
test
jbe
inc
push
mov
(bad)
and
mov
mov
ficom
or
fs
mov
sbb
xchg
jns
je
pop
or
or
mov
and
add
sbb
jnp
test
mov
or
(bad)
jl
hlt
push
fcomp
mov
mov
push
daa
movs
imul
rol
mov
inc
mov
cli
or
jecxz
adc
cdq
add
std
enter
dec
nop
cmp
stos
test
adc
pushf
rol
loope
xchg
pop
pop
rol
mov
adc
pop
dec
sbb
mov
ss
xor
in
pop
cwde
xor
cmp
inc
jmp
push
pop
jmp
xor
mov
retf
add
in
into
(bad)
jb
ja
xor
mov
call
repz
dec
mov
sbb
push
inc
das
xor
scas
dec
add
scas
addr16
add
adc
add
add
add
add
add
add
add
add
adc
add
and
adc
and
inc
adc
push
push
inc
push
push
(bad)
fiadd
or
add
add
add
cmc
push
jle
cmc
mov
jns
mov
stos
jo
mov
cld
inc
cmp
sbb
jae
retf
mov
cli
ffreep
cmp
xor
add
add
(bad)
test
leave
jl
push
enter
xchg
jmp
adc
cmp
ret
lds
push
cmps
daa
adc
xchg
(bad)
pushf
inc
add
pusha
cmp
sahf
inc
inc
mov
xchg
pop
dec
and
bound
push
sub
pop
add
push
push
sbb
sub
mov
arpl
inc
xchg
cmp
pop
pop
cwde
fidivr
inc
cld
int3
xor
sub
dec
xchg
frstor
jnp
pop
xchg
lods
ins
rol
mov
add
jae
stos
adc
adc
adc
adc
adc
adc
adc
adc
push
fadd
ins
out
sbb
(bad)
or
dec
cmp
popf
sbb
(bad)
loopne
lea
mov
loop
dec
jp
fld
fmul
jle
and
mov
mov
arpl
mov
pop
xor
xchg
out
test
adc
aam
cmps
fistp
mov
out
pop
mov
xchg
iret
mov
in
mov
pop
mov
add
rcl
lods
jo
add
add
lock
test
mov
sar
into
inc
sti
fist
repnz
and
and
into
loope
cmp
mov
dec
xchg
outs
sub
in
popf
ins
push
js
movs
xlat
adc
xor
jo
pop
fstp
loope
cmp
cmps
les
in
neg
push
scas
jp
or
imul
add
arpl
inc
ficom
pop
and
mov
mov
dec
xchg
adc
xchg
mov
cmc
pop
inc
inc
pop
dec
cmp
in
out
mov
mov
(bad)
fdecstp
les
movs
ret
out
(bad)
in
lahf
ins
inc
enter
mov
cdq
cdq
xchg
cmp
int3
int3
int3
cdq
xchg
xor
xchg
aaa
dec
shl
ret
jmp
nop
cmc
pop
js
jp
xor
xor
mov
pusha
dec
dec
dec
dec
dec
dec
inc
es
cwde
out
pop
inc
inc
mov
leave
popf
out
inc
pop
stos
xlat
call
mov
mov
jmp
(bad)
scas
sub
jns
push
jns
jno
jecxz
sub
sbb
enter
and
imul
mov
sbb
push
xor
jo
mov
les
mov
xchg
mov
lods
pop
pop
not
data16
stos
(bad)
scas
addr16
ins
sar
mov
jp
out
add
inc
inc
sbb
mov
jmp
mov
xor
cmps
pop
push
pop
ins
(bad)
pusha
cmp
jns
cmp
dec
enter
aam
(bad)
scas
and
jbe
out
loope
enter
cli
mov
mov
inc
cmc
adc
test
test
xchg
adc
dec
jle
inc
stos
movs
push
or
(bad)
push
cli
in
pop
pop
jb
in
mov
dec
scas
stos
stos
sbb
shl
sbb
(bad)
ficomp
and
ret
pop
jne
mov
pop
jnp
and
dec
jp
mov
xor
fisub
stc
xor
movs
ja
mov
adc
push
cmp
pushf
jns
and
push
or
mov
and
addr16
out
cdq
jge
stos
ja
movs
mov
mov
mov
les
retf
add
test
pop
xor
hlt
xchg
add
add
push
adc
cmp
inc
add
shl
mov
add
push
ds
dec
cmps
ret
into
test
cdq
shl
cmps
shl
fwait
dec
fwait
dec
lea
xor
rcl
dec
sar
sbb
adc
lea
rcr
(bad)
cmp
dec
out
add
rcr
daa
(bad)
or
(bad)
adc
cmp
and
cmp
out
int3
fisttp
or
or
mov
mov
add
addr16
inc
stos
ins
(bad)
inc
repz
nop
test
sahf
lock
jecxz
mov
fwait
inc
repnz
mov
mov
cmp
lahf
stos
fistp
push
adc
and
jbe
mov
mov
pushw
int
icebp
add
cmp
xor
popa
lods
in
add
push
sub
inc
fstp
out
js
je
iret
dec
stos
mov
pop
xchg
les
fisubr
test
dec
push
out
add
(bad)
outs
(bad)
fdiv
push
xor
mov
in
inc
and
ins
inc
pop
hlt
mov
ds
lods
(bad)
lods
bound
jae
xchg
in
jle
or
icebp
mov
push
(bad)
test
inc
mov
sbb
addr16
dec
movs
or
mov
mov
imul
cmc
mov
lods
push
iret
or
loope
fisub
into
ret
and
push
sbb
loope
inc
fadd
or
sub
fmul
mov
xor
xor
test
xor
jnp
xchg
cmps
imul
pop
adc
push
mov
ins
push
mov
sub
pop
push
not
pop
fidivr
mov
push
inc
jb
call
jno
aad
sub
mov
push
bound
sar
or
push
jb
push
mov
xor
test
sub
jmp
xchg
enter
aam
int
arpl
push
dec
psubb
retf
jg
enter
or
test
aam
mov
mov
test
(bad)
add
(bad)
mov
out
clc
ins
aam
ins
aam
outs
mov
pcmpeqw
add
(bad)
sub
icebp
or
adc
es
fdiv
out
mov
pusha
cld
pop
outs
ret
mov
dec
or
mov
fdiv
(bad)
pop
dec
and
imul
push
sbb
ins
sti
call
push
rol
sbb
sbb
sub
stc
cmp
mov
and
pop
pop
add
data16
aam
adc
inc
mov
mov
fmul
mov
sub
xor
fdiv
popa
jge
cmp
push
movs
mov
pusha
cmps
cmp
dec
jg
adc
nop
sbb
inc
cmp
mov
fld
adc
cli
pop
(bad)
xchg
jp
jne
jmp
(bad)
adc
popa
cmp
jne
jmp
xlat
scas
or
rcl
mov
push
lahf
sub
mov
ss
add
xor
cmp
cmp
sub
sub
addr16
pop
lea
adc
fsubr
imul
mov
or
sub
dec
push
lds
mov
mov
or
push
sbb
adc
fwait
addr16
addr16
aas
in
pushf
dec
ins
aad
xor
outs
test
imul
cdq
in
jg
push
cmp
imul
mov
pop
push
push
or
mov
js
push
fadd
inc
xor
cmp
loop
add
ret
mov
cmps
imul
sub
ds
(bad)
shl
push
adc
mov
cli
lods
cmp
lods
rol
lock
retf
mov
pop
(bad)
lock
dec
pop
pop
jno
addr16
cmp
fs
cmp
repz
push
pop
out
es
sahf
lock
not
in
push
call
fwait
mov
cmp
push
cmp
mov
xchg
mov
in
dec
push
mov
pop
mov
pushf
inc
xchg
xor
xor
xchg
imul
and
adc
ja
imul
loop
repz
push
imul
xchg
xor
mov
popf
jbe
and
xchg
xor
inc
int3
int3
push
add
xor
outs
mov
dec
jmp
and
adc
adc
mov
inc
rcr
xor
or
lods
fnstcw
and
add
adc
fadd
es
out
xor
or
dec
and
nop
pop
dec
or
mov
popa
repz
fisub
leave
test
retf
leave
adc
arpl
xchg
xchg
pop
nop
inc
loop
iret
rcl
push
imul
xor
test
mov
iret
fdiv
or
addr16
and
iret
push
sti
test
jle
inc
adc
cli
jg
les
xor
add
add
push
or
add
add
add
add
add
adc
xor
lock
inc
popa
adc
ret
xor
jo
(bad)
fiadd
or
add
or
add
out
inc
mov
icebp
adc
adc
adc
adc
adc
jle
test
in
mov
jmp
mov
mov
repz
clc
inc
or
mov
mov
cdq
push
fdivr
push
xchg
sbb
ret
mov
cwde
enter
repz
ret
das
jb
int3
ja
cmc
dec
jo
loope
pop
ror
cmps
jnp
pop
test
iret
stos
mov
mov
or
push
mov
pop
std
adc
aad
xchg
jg
ins
arpl
sar
(bad)
loop
pop
ja
and
outs
in
pop
arpl
fldln2
fstp
pop
in
rcr
fst
aad
aas
cmovne
into
fnstcw
(bad)
xor
inc
fwait
sbb
dec
in
cmp
mov
inc
xchg
shr
pop
fbstp
mov
ja
inc
xor
lods
out
into
jp
clc
mov
and
push
xchg
lea
jecxz
jae
outs
imul
push
lds
mov
xchg
push
mov
sar
mov
sbb
inc
inc
inc
(bad)
mov
iret
mov
stos
scas
push
repnz
sahf
aas
int
mov
fwait
aam
out
test
pop
mov
in
inc
ror
mov
sti
or
icebp
jnp
mov
dec
push
push
inc
cmp
and
mov
adc
inc
aam
(bad)
pop
cld
xchg
out
adc
cld
or
clc
adc
add
imul
std
lea
bts
ins
jae
cmps
pop
bound
rcl
xor
dec
and
loopne
sar
jmp
push
cmp
sub
jle
test
cs
into
dec
mov
adc
aam
test
inc
inc
and
movs
and
push
and
push
push
xchg
or
nop
jne
and
xor
add
jmp
jmp
or
and
xchg
or
jge
inc
sub
outs
repnz
xor
inc
in
mov
stos
jnp
sbb
and
dec
push
scas
inc
sar
sbb
sti
fld
push
out
adc
pop
mov
jb
jne
out
xchg
(bad)
sub
fist
cmp
mov
neg
fstp
das
outs
shl
and
clc
adc
jno
mov
or
pusha
retf
in
pop
inc
cli
push
test
and
or
pusha
xchg
out
lahf
outs
outs
ja
sahf
jae
fistp
into
jnp
xchg
and
loope
fistp
xchg
mov
push
mov
jecxz
outs
sub
inc
mov
push
cmc
scas
shr
popa
dec
hlt
pop
fdivr
das
(bad)
and
push
test
ror
add
add
add
add
add
add
add
add
add
adc
xor
and
and
inc
push
push
inc
inc
adc
or
add
add
add
aad
jle
repnz
jg
jns
arpl
add
icebp
fldcw
and
repz
xchg
aaa
mov
cmp
test
pop
scas
and
jo
dec
sar
push
in
popf
ret
jns
mov
fdiv
aam
mov
cwde
or
inc
jmp
mov
inc
mov
(bad)
outs
jo
fucomip
retf
daa
es
xchg
adc
inc
movs
lahf
bnd
dec
shl
aaa
add
pushf
push
and
add
sar
push
xor
jg
jmp
clc
xor
les
ret
repnz
das
adc
sub
adc
push
pop
mov
jg
std
xor
mov
xchg
dec
sbb
pop
xor
xor
adc
adc
iret
push
les
arpl
and
jbe
push
call
inc
cli
pusha
(bad)
popa
inc
and
push
bound
lods
push
out
imul
imul
jno
into
cmp
das
popa
es
jmp
(bad)
imul
in
cs
test
and
pop
movs
xlat
or
add
popa
fs
cmp
sbb
xchg
rcr
xchg
xchg
rcr
sbb
jmp
ret
xchg
push
and
mov
in
cmp
inc
adc
mov
cmp
jle
and
push
leave
fst
xor
inc
adc
dec
imul
lea
mov
jle
dec
add
jmp
jle
and
push
leave
fst
std
mov
push
ret
enter
test
sub
lods
jmp
movs
imul
or
or
xchg
dec
jecxz
(bad)
mov
push
mov
mov
mov
push
sbb
and
pop
mov
bound
dec
outs
and
out
out
pop
fs
in
or
dec
in
or
das
das
sub
int
mov
sub
outs
sbb
mov
mov
jle
sub
pop
fdivr
inc
pop
xchg
or
mov
inc
in
xchg
fs
jecxz
or
test
and
mov
nop
dec
lock
or
lds
push
fdiv
arpl
push
mov
sub
popf
test
xor
dec
sbb
push
fcomp
fcomp
adc
mov
mov
mov
sub
adc
add
pop
mov
adc
(bad)
sub
or
nop
retf
pop
inc
call
fstp
inc
push
mov
sbb
mov
xor
xor
fwait
inc
popa
jae
out
jb
gs
test
xor
pop
loope
dec
sub
add
mov
loope
push
sahf
jmp
in
xchg
push
cmp
xchg
in
push
mov
fcomi
inc
xor
out
add
repnz
stos
pop
xor
dec
arpl
xchg
sub
inc
test
push
loopne
icebp
sbb
arpl
mov
push
sbb
ror
add
and
inc
adc
dec
or
pop
cwde
out
stos
or
dec
retf
sbb
das
push
pop
xchg
sub
jle
dec
push
pop
mov
sub
mov
mov
inc
bound
sub
aam
mov
inc
pop
xlat
sbb
dec
xor
into
mov
movs
dec
xchg
test
push
xchg
sbb
sbb
retf
push
mov
(bad)
dec
jnp
sahf
movs
pop
mov
mov
and
mov
(bad)
cwde
sub
push
and
test
inc
dec
lea
sub
inc
aam
sbb
movs
jle
push
(bad)
cmp
repz
pop
jno
push
int3
mov
mov
mov
imul
push
sar
or
mov
es
aas
out
cli
lea
sub
cwde
adc
fwait
sbb
lods
add
jo
xchg
push
adc
ret
das
or
inc
sbb
dec
aad
mov
or
cmp
mov
leave
or
jb
pop
out
iret
sub
and
ret
sbb
push
mov
add
int
in
shr
call
xor
(bad)
into
(bad)
mov
outs
imul
mov
inc
inc
es
hlt
pop
stos
dec
ror
cmp
dec
call
adc
into
ret
shl
pushf
mov
mov
and
jbe
pop
arpl
out
or
cdq
int3
jl
jae
lods
sbb
mov
mov
ins
shr
das
xchg
sbb
xor
call
addr16
mov
sub
inc
icebp
sar
jae
or
je
mov
or
cmp
arpl
dec
shl
mov
xor
or
and
adc
fwait
lea
addr16
mov
add
adc
xlat
or
(bad)
ss
dec
fsub
movs
jo
movs
inc
ds
dec
das
stos
hlt
inc
pop
dec
in
in
int3
mov
into
shr
dec
push
push
dec
add
ret
lods
sbb
(bad)
cmp
xchg
or
xor
mov
inc
xchg
cmps
xchg
int
dec
(bad)
or
xor
mov
sar
dec
leave
add
test
test
enter
aaa
outs
push
pop
test
ins
pop
pop
aam
pop
je
xor
sbb
rcr
imul
lods
pop
cli
mov
mov
daa
mov
mov
icebp
mov
call
sub
inc
add
fidiv
pop
stc
sub
and
(bad)
std
cwde
popa
movs
cmp
jge
jns
xchg
int
cs
pop
xchg
cmc
or
outs
rcl
(bad)
mov
mov
add
push
(bad)
mov
dec
scas
xchg
pop
and
adc
dec
scas
cdq
pop
and
mov
cmp
push
ret
cmp
mov
(bad)
lahf
sub
xchg
sar
nop
repnz
inc
xchg
pop
add
adc
xchg
lea
std
ror
add
and
sbb
push
ret
movs
or
mov
xchg
jmp
add
call
jecxz
cwde
push
mov
imul
or
(bad)
sbb
xchg
retf
gs
pop
ret
or
dec
ss
xchg
xchg
dec
jo
shl
inc
aad
dec
loopne
pop
retf
scas
imul
or
mov
inc
call
call
imul
out
inc
stos
or
xchg
push
and
rcl
mov
add
in
pop
bound
mov
imul
lods
sub
ret
sbb
xchg
leave
xor
push
sbb
or
mov
push
test
aaa
add
jno
jmp
lahf
sbb
mov
je
adc
cmp
xchg
(bad)
jno
mov
stos
aam
xchg
xor
dec
add
repnz
mov
das
push
sub
mov
fcomp
pop
mov
push
mov
sub
mov
stos
pop
stos
push
stos
sub
adc
or
cmps
stc
or
cmps
or
lods
int
retf
test
mov
mov
and
sub
mov
pop
adc
loope
xchg
cmp
mov
inc
ss
xor
mov
les
imul
test
jge
sub
mov
lods
push
enter
lock
mov
mov
in
mov
sub
add
adc
enter
adc
in
add
(bad)
les
xor
add
add
add
push
add
add
add
add
add
add
adc
and
and
xor
jno
mov
xor
(bad)
fiadd
or
add
or
add
add
fist
pop
pop
inc
movs
sbb
fidiv
or
pop
dec
test
das
test
ror
(bad)
bnd
aaa
dec
or
adc
mov
mov
push
push
scas
mov
fidiv
push
cmps
ins
lods
jge
les
xor
in
pop
adc
mov
push
xchg
neg
enter
inc
ret
fdivr
add
push
scas
inc
inc
sub
mov
pop
pop
leave
loope
lods
mov
ja
adc
lods
fdivr
jne
mov
cmps
adc
mov
call
cmp
and
pop
xchg
xor
adc
inc
xchg
lahf
adc
fadd
fwait
lods
aam
pop
mov
cmc
fwait
push
ret
stos
xlat
pop
hlt
hlt
mov
loope
cmp
test
push
movs
scas
or
push
lods
hlt
std
jb
inc
push
fbstp
mov
jns
push
shr
(bad)
repnz
lds
dec
push
nop
add
hlt
test
mov
out
aam
cmp
mov
out
push
inc
adc
test
dec
pop
xor
outs
adc
or
call
jnp
add
out
ror
loope
enter
xchg
pop
jl
xor
inc
pop
adc
pop
mov
mov
mov
and
xchg
adc
mov
push
ins
mov
fild
xor
xor
inc
fs
and
sbb
cmp
push
dec
(bad)
addr16
cwde
in
pop
jnp
out
mov
cmp
cmp
sti
out
retf
sub
jns
xchg
in
cmp
jmp
fs
dec
or
stc
mov
stc
call
pop
push
jmp
sub
or
in
jmp
mov
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
sbb
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
inc
add
add
add
add
add
or
or
or
or
or
adc
adc
adc
adc
adc
adc
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
(bad)
fild
inc
add
add
push
push
or
push
or
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ret
or
push
add
add
add
adc
inc
add
add
add
add
add
add
add
add
or
fiadd
or
add
add
add
push
add
or
sub
mov
add
push
or
sbb
rol
add
and
and
es
xor
scas
aam
pop
int
aad
push
mov
ds
loopne
add
fistp
lds
test
add
xor
or
int
add
and
and
inc
ins
mov
sbb
xchg
fistp
mov
or
add
xchg
xor
bound
dec
xor
in
jle
jmp
mov
add
push
or
sbb
add
add
add
mov
dec
ins
mov
adc
mov
ins
addr16
pop
ins
mul
mov
mov
xchg
push
xchg
add
and
out
fs
jns
push
btr
and
push
add
or
push
xor
xor
xor
cdq
add
add
mov
loop
or
aam
jns
in
je
ss
xor
xchg
dec
jg
add
xor
(bad)
out
(bad)
scas
xchg
aam
sti
imul
dec
sub
adc
add
push
or
cdq
xor
xor
data16
add
add
xchg
dec
inc
sbb
pop
mov
sbb
or
fcmovu
fldcw
test
adc
or
in
push
cmps
test
ja
sbb
push
cdq
dec
mov
or
add
rcr
data16
sbb
and
test
fld
mov
mov
mov
repnz
fisttp
pop
dec
mov
scas
dec
fstp
out
inc
and
xor
shr
dec
jne
fsub
adc
add
xor
data16
inc
int3
rcr
or
mov
les
cwde
popa
stos
fdivr
fstp
mov
lea
imul
test
dec
cld
cmp
int3
fstp
mov
mov
arpl
xor
sbb
adc
xor
add
data16
sub
cwde
xor
adc
and
mov
les
mov
dec
xlat
repnz
xchg
imul
repz
ins
stos
repz
dec
hlt
cmp
in
bound
sub
push
jae
sti
sahf
rcr
mov
in
(bad)
mov
fiadd
adc
add
cwde
xor
xor
or
add
and
push
xor
aaa
push
sar
dec
mov
je
(bad)
pop
fwait
test
add
call
sahf
or
cmps
and
retf
mov
xchg
in
mov
jne
gs
and
adc
add
sbb
data16
inc
and
ins
mov
(bad)
push
xor
inc
mov
hlt
push
mov
arpl
movs
push
or
sbb
fcmove
jno
cmp
iret
lods
sti
(bad)
out
jg
pop
test
jnp
mov
mov
test
xor
inc
int3
int3
rol
add
or
sub
mov
fsubr
repnz
and
fadd
mov
mov
push
call
pop
cs
mov
std
das
xchg
dec
repz
jno
jg
call
ror
inc
dec
adc
add
xor
inc
xchg
and
dec
push
fisttp
les
data16
repnz
and
iret
mov
mov
add
inc
stos
dec
xchg
cmp
fisubr
mov
out
dec
js
fnstcw
div
ins
mov
bound
adc
data16
popa
inc
data16
or
or
jl
imul
in
aam
mov
add
mov
inc
sahf
pop
sbb
pop
mov
sbb
jo
adc
inc
mov
adc
sbb
dec
sub
and
adc
mov
int3
sbb
adc
add
dec
and
ins
adc
push
arpl
idiv
movs
outs
loopne
fcmovbe
fistp
dec
adc
stc
retf
inc
push
retf
inc
enter
jnp
pushf
add
ficomp
cli
push
cli
into
retf
inc
push
adc
cmp
or
inc
push
int3
int3
shl
cdq
cwde
xor
les
xchg
fcmovnbe
fwait
dec
dec
test
cmp
sbb
jae
jmp
(bad)
push
sub
stc
(bad)
and
sbb
and
adc
mov
jp
arpl
cmp
into
ret
inc
push
xor
sub
cwde
xchg
pushw
push
or
add
push
add
popf
jno
or
scas
sub
out
dec
jmp
out
and
cdq
aam
call
shl
in
mov
out
ins
test
mov
out
fcmove
cld
push
dec
dec
push
inc
add
xor
inc
data16
cdq
push
mov
pop
test
xor
fisubr
jne
shl
mov
repnz
sub
ins
xchg
popf
outs
daa
jmp
out
cdq
push
mov
xchg
hlt
test
or
cmp
mov
xor
icebp
push
and
inc
call
mov
popa
mov
int3
rcr
scas
cmps
fcom
adc
pop
mov
dec
jmp
push
cmc
mov
addr16
fistp
bound
rcr
push
shl
out
outs
popa
shl
int
loop
jge
jge
addr16
xchg
dec
adc
sub
or
int3
int3
loop
xor
xor
xor
ror
xchg
dec
mov
push
mov
ins
imul
movs
sub
lahf
retf
addr16
push
leave
mov
cmp
dec
dec
stos
cmp
adc
clc
test
lahf
dec
hlt
xor
rcr
ins
mov
add
and
cmps
xor
addr16
jns
cdq
cdq
cdq
cwde
mov
ret
cwde
xchg
fwait
or
mov
xor
lahf
sub
pop
fisttp
jb
scas
mov
inc
into
mov
dec
xchg
dec
lahf
xchg
pop
ja
sahf
mov
jno
std
mov
jmp
add
enter
and
inc
adc
cdq
cwde
xchg
int3
int3
int3
sbb
adc
jo
or
pop
scas
mov
jp
loop
lahf
xchg
jne
mov
es
retf
mov
(bad)
cld
loopne
repz
into
dec
push
shr
push
pop
jnp
loopne
sbb
xor
and
cdq
cdq
shl
and
xor
xor
data16
adc
popa
or
sbb
dec
jne
or
pop
fmul
jb
mov
test
(bad)
iret
xor
sub
es
mov
idiv
mov
call
dec
dec
and
add
xor
xor
int3
int3
inc
mov
xor
push
data16
adc
popa
or
and
jno
or
pop
pop
into
aam
push
mov
xchg
dec
iret
push
mov
xchg
push
add
push
jb
cmp
jmp
pushf
(bad)
cmp
push
pop
das
sbb
push
popa
aaa
inc
mov
sub
data16
pusha
int3
int3
int3
rcr
bound
mov
fcomp
push
pop
dec
sub
loop
stc
xor
fwait
(bad)
cmc
std
jl
es
retf
mov
adc
ss
inc
stos
retf
lods
bnd
xor
pop
dec
in
dec
jmp
push
dec
add
add
xor
mov
data16
inc
or
push
add
cmps
sbb
shr
xchg
jecxz
sbb
dec
jecxz
ret
cmps
jecxz
(bad)
pop
push
mov
jns
dec
or
xchg
(bad)
adc
outs
sub
pop
popf
cmc
movs
shr
and
or
sbb
cdq
test
cwde
and
int3
sub
scas
mov
jno
push
xor
dec
fiadd
jno
arpl
pop
jae
push
repnz
mov
push
cmp
sbb
fmul
add
add
push
(bad)
(bad)
and
leave
mov
dec
test
loopne
popa
inc
inc
jne
pusha
int3
int3
sub
into
mov
push
sbb
popa
or
ins
ins
mov
test
leave
pop
outs
fcom
mov
mov
push
cmp
mov
dec
add
test
lods
(bad)
movs
cmp
test
test
xor
xor
or
data16
or
add
test
sbb
(bad)
shr
imul
leave
cmp
xlat
cli
cmp
daa
(bad)
lock
sbb
in
popf
inc
sbb
dec
xchg
and
or
and
movs
lods
(bad)
lods
cli
mov
jbe
aam
call
sbb
js
cmc
test
adc
sbb
fstp
push
dec
xlat
push
push
fnstcw
mov
loop
repnz
sbb
mov
xchg
std
je
ss
out
imul
xor
push
push
dec
and
add
sbb
xor
dec
push
int
cmps
pushf
inc
mov
mov
sub
pop
and
cli
or
inc
mov
xchg
push
jmp
(bad)
push
cmps
mov
mov
retf
popa
or
retf
outs
fcom
in
sub
add
push
pusha
ret
ins
(bad)
movs
int3
adc
ins
lods
mov
mov
dec
xchg
mov
mov
mov
lahf
popf
aas
adc
jne
movs
ins
sub
jo
add
or
push
jecxz
inc
xor
xchg
clc
mov
clc
addr16
inc
mov
jb
mov
sbb
adc
adc
inc
adc
xor
mov
xor
fmul
loop
mov
cli
out
outs
pop
cmp
jne
sar
push
jne
push
pop
shr
imul
aaa
inc
gs
cmp
sub
xchg
fnsave
test
and
add
loop
sbb
push
push
nop
retf
adc
mov
push
outs
and
mov
xchg
movs
(bad)
pusha
mov
dec
data16
jmp
(bad)
jge
mov
cmp
ret
lods
stos
popa
and
mov
add
xchg
clc
scas
mov
mov
sbb
mov
mov
mov
lods
lds
popa
add
int
dec
pop
pop
call
ins
in
shr
fisub
pop
push
test
rcr
call
dec
push
jmp
out
pop
test
mov
dec
jecxz
fsubr
(bad)
shr
test
test
cmp
loope
jmp
or
retf
aam
sub
or
and
outs
call
add
test
push
and
cs
push
sub
imul
xchg
into
inc
mov
sub
jb
cmps
adc
pop
pop
sbb
push
pop
int3
mov
mov
jne
xor
in
xor
jbe
test
rcr
test
inc
push
adc
add
jecxz
jns
cmp
lods
retf
in
mov
push
pop
or
push
mov
pop
push
dec
xor
xchg
push
iret
jo
in
xchg
fadd
mov
jl
pop
das
sahf
mov
sti
fbstp
sub
lds
int
stos
pushf
inc
mov
xlat
or
shl
and
add
out
cmp
mov
mov
cmp
cli
aas
inc
pop
fist
inc
mov
inc
movs
les
xchg
pop
mov
dec
leave
ret
pop
sbb
mov
dec
sbb
sahf
add
push
out
(bad)
sbb
jb
sub
mov
(bad)
fdiv
mov
ins
(bad)
popf
aam
sbb
test
sub
add
add
xchg
js
fwait
mov
test
lahf
xchg
jbe
jmp
fld
cs
dec
dec
les
sub
mov
pop
call
dec
inc
shr
push
pop
(bad)
outs
shl
ja
cmp
js
or
xchg
cmp
les
sub
jo
jno
gs
mov
add
out
inc
sbb
xor
inc
retf
cld
mov
movs
iret
jne
test
jae
mov
sbb
iret
je
push
in
dec
ja
add
fdiv
jg
fstp
inc
inc
pop
cmp
sub
call
mov
loopne
dec
mov
fild
xchg
jo
xchg
shl
sbb
add
and
test
mov
scas
enter
in
aaa
jb
push
cli
dec
pushf
jge
mov
mov
dec
ror
clc
ins
daa
call
(bad)
or
scas
fcmovu
dec
xchg
mov
test
xchg
pop
push
in
dec
ins
and
movs
(bad)
sbb
scas
push
pop
popf
fxch
repz
out
movs
dec
repz
jmp
mov
inc
and
sbb
pop
xchg
dec
inc
shl
mov
inc
mov
xchg
loop
cmp
mov
mov
fsub
retf
or
dec
sti
(bad)
pop
push
mov
and
jne
mov
jecxz
ds
pop
and
jnp
test
mov
idiv
xor
mov
daa
pop
mov
and
cld
and
dec
arpl
iret
repz
xchg
sbb
mov
mov
int3
xor
inc
cmps
jmp
movs
cmps
leave
pop
out
jmp
shr
mov
out
gs
int
cvtdq2ps
cli
adc
icebp
mov
out
mov
fdiv
cmp
jmp
cmp
sar
inc
dec
and
mov
div
aad
cld
out
addr16
cli
mov
xor
pop
push
(bad)
ficomp
mov
fwait
popa
jbe
in
pop
ror
mov
in
sub
xchg
sti
repnz
lahf
fs
push
xor
mov
into
dec
sbb
fwait
addr16
mov
ret
jo
cwde
gs
sub
repz
loope
sub
retf
jae
mov
mov
pop
addr16
movs
iret
push
add
idiv
push
push
cmp
or
imul
std
or
sbb
push
loope
rcr
dec
add
add
fs
es
xchg
xor
loopne
es
sti
cmp
fistp
xchg
fsub
and
mov
cmp
cmp
add
test
pop
jmp
cdq
jl
jae
mov
sbb
jb
rcl
xor
sub
(bad)
rol
cmp
gs
push
sub
aas
gs
jo
les
sbb
fild
push
sbb
(bad)
jl
int3
leave
bound
xchg
mov
push
ficomp
or
jecxz
pop
pop
(bad)
out
pop
fisubr
cmc
in
inc
icebp
ja
or
leave
fidiv
bound
dec
dec
pop
adc
xor
add
aaa
les
xor
jbe
cmps
or
int
dec
jo
add
push
push
or
cdq
mov
sbb
lods
mov
jl
xchg
stos
stos
div
int
mov
mov
std
pop
pop
lds
sbb
movs
dec
xlat
call
add
dec
aaa
sbb
sub
imul
outs
cdq
loope
ins
aam
int
repnz
and
aad
jo
data16
sub
push
cmps
mov
adc
sbb
js
xchg
jge
mov
mov
xchg
jp
jecxz
int
pop
outs
ss
pop
mov
sub
push
jg
fmul
pop
inc
div
iret
pop
ja
jno
inc
mov
inc
or
fbstp
call
out
adc
inc
xor
cmps
mov
push
mov
sbb
push
fidivr
(bad)
popf
(bad)
imul
cld
out
mov
aaa
sar
mov
std
inc
lods
cli
aaa
push
aam
xor
or
outs
jae
pop
pop
jle
pop
jmp
outs
cmp
mov
cmp
mov
jmp
addr16
add
or
shl
dec
cmp
mov
pop
sub
cdq
xor
sbb
into
xchg
movs
repnz
mov
push
scas
mov
outs
out
out
mov
pop
scas
out
iret
jle
inc
pop
sar
int
pop
test
aaa
mov
jge
(bad)
mov
(bad)
cmp
fisttp
aaa
cmps
or
dec
movs
mov
jge
imul
data16
or
popa
inc
int3
push
sub
lods
dec
pop
add
ss
mov
push
mov
pop
mov
ret
in
(bad)
stc
sti
lahf
pop
pop
ins
cmp
dec
cmps
mov
in
rol
add
push
and
lock
add
and
add
mov
add
into
sahf
frstor
rcr
pushaw
int3
inc
loop
dec
mov
dec
out
movs
scas
retf
gs
jnp
jae
cdq
sbb
outs
imul
cmps
fwait
bound
cmps
(bad)
iret
xchg
in
add
and
push
add
or
xor
into
push
dec
leave
pop
and
xor
sub
arpl
out
sub
xchg
jbe
cmps
sbb
pushf
push
push
xor
retf
jae
mov
sbb
ds
iret
pop
pop
data16
jae
imul
mov
push
inc
mov
lds
add
xor
or
add
loope
adc
int3
sbb
cwde
xor
setp
addr16
xor
mov
xor
jnp
lock
inc
jmp
inc
mov
ins
out
test
stos
dec
ins
(bad)
icebp
ficomp
frstor
fwait
jbe
fnsave
stos
cmp
add
sbb
sub
aam
pop
sub
xor
data16
mov
ja
cld
aam
jnp
mov
int
and
and
imul
jbe
pop
lea
adc
scas
enter
mov
mov
out
jp
int
pushf
stc
pop
xor
mov
adc
jno
popa
sub
data16
sub
xor
push
retf
retf
out
inc
mov
loopne
xor
mov
jg
or
mov
jg
sub
out
mov
cli
lods
push
test
pop
mov
mov
jno
icebp
sbb
add
adc
sahf
jg
cmc
out
push
out
sbb
inc
mov
push
adc
xchg
pushf
ret
dec
call
popf
int3
cmps
adc
adc
cmp
sbb
mov
xchg
std
sbb
stos
mov
push
int3
int
popf
mul
inc
imul
mov
sti
adc
inc
push
out
push
retf
retf
lods
jne
aaa
(bad)
jp
rcr
mov
fsubrp
jl
pop
xor
or
xlat
fwait
scas
ds
dec
inc
(bad)
ficomp
popa
or
mov
push
xor
lods
push
jge
cdq
es
jno
fst
xor
and
or
enter
mov
(bad)
xchg
cmp
hlt
jle
xchg
stc
rcl
inc
xor
jmp
inc
jo
aam
outs
pop
or
movs
pop
fmul
fwait
sub
mov
(bad)
addr16
push
pop
test
inc
mov
test
jne
movs
sub
xchg
setns
mov
jecxz
lods
bound
es
int
out
pop
out
(bad)
mov
xchg
dec
lds
add
ficomp
enter
retf
std
ja
xchg
lock
mov
aad
shr
sub
sahf
das
xlat
jle
loop
fwait
sbb
jmp
dec
fistp
and
sbb
mov
jns
sub
adc
push
inc
jecxz
sub
imul
(bad)
aaa
aas
dec
(bad)
jge
iret
jp
cdq
pop
fisub
cmp
call
popa
pop
push
dec
stos
cmp
xor
les
fnstcw
popf
out
mov
pop
shr
out
iret
pop
jp
mov
pop
jp
xchg
adc
cdq
ss
fadd
add
imul
jp
xchg
mov
xlat
mov
adc
je
mov
cdq
dec
push
stc
mov
inc
repz
in
sbb
pop
mov
add
jp
xchg
mov
fisubr
mov
or
pop
popa
pop
jae
push
sbb
add
into
xor
hlt
das
push
mov
sbb
mov
ss
fsubp
pop
fnstcw
rol
jle
dec
mov
fimul
frndint
jg
sbb
xor
fidivr
test
pop
sub
fisubr
push
iret
pushf
jp
lds
cli
push
sahf
arpl
sbb
sub
int3
addr16
jle
(bad)
gs
addr16
mov
mov
push
add
mov
rol
call
retf
dec
adc
cmp
lahf
jbe
test
jmp
repnz
imul
xor
scas
(bad)
sahf
cwde
retf
xacquire
cmp
shrd
mov
xchg
push
push
dec
das
xchg
jae
mov
call
mov
mov
fprem1
dec
cmp
jno
jmp
dec
mov
push
ss
retf
dec
dec
daa
pop
test
mov
cmp
push
loop
adc
inc
cmps
call
and
hlt
das
and
mov
mov
fyl2x
aas
push
xor
cmp
outs
repz
cmp
int3
jl
aad
hlt
mov
jne
mov
neg
pop
bound
jp
cmp
fidivr
cdq
dec
jmp
hlt
stos
dec
fnsave
dec
mov
xchg
ss
popa
movs
mov
xor
pop
jmp
mov
or
or
sub
push
sbb
daa
and
mov
aaa
inc
mov
sar
aaa
xchg
mov
adc
fcomip
inc
shr
shl
ds
xor
bound
mov
iret
inc
bnd
fstp
push
(bad)
test
mov
pop
rcr
ins
outs
ja
sahf
idiv
sub
xchg
and
outs
jnp
mov
fsubr
test
jns
inc
adc
push
pop
aam
scas
movs
aad
jl
jmp
shl
loopne
idiv
pop
mov
jbe
cld
pop
pop
lds
cmp
fisub
dec
out
(bad)
and
mov
cmps
xor
mov
xor
xchg
lahf
pop
xchg
mov
imul
cmps
dec
sbb
adc
imul
mov
cmps
fld
outs
fpatan
and
jno
iret
xchg
mov
mov
imul
in
adc
test
inc
leave
cli
or
scas
cmp
sub
mov
rol
jb
mov
stos
cmp
xor
mov
ins
or
pushf
imul
fmulp
xchg
pop
repnz
sbb
dec
xchg
xor
sub
aam
push
test
(bad)
jb
stc
pop
cdq
fsubr
sub
repnz
mov
(bad)
mov
or
mov
xor
mov
dec
pop
test
stos
fnstcw
stos
(bad)
test
jae
out
int3
fwait
call
mov
mov
cmc
cmc
std
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
add
aad
fs
add
pusha
fwait
dec
mov
iret
jnp
mov
add
(bad)
das
retf
aaa
lods
inc
add
add
add
mov
dec
jns
shl
add
add
movs
mov
hlt
repz
dec
add
add
or
aad
dec
sub
mov
hlt
jl
dec
aad
adc
xchg
and
mov
pop
sub
(bad)
(bad)
out
jp
sub
mov
add
add
mov
xor
fidivr
add
and
adc
fwait
loopne
pop
cmp
repz
jae
movs
and
add
cwde
add
(bad)
lods
int3
push
sub
(bad)
retf
dec
mov
and
sub
jmp
shl
cmp
add
add
lods
movs
jl
add
scas
push
pop
std
sbb
add
push
and
dec
add
and
adc
add
add
test
adc
nop
xchg
or
dec
sub
or
ss
pop
mov
inc
fadd
jp
dec
sub
mov
sbb
mov
adc
mov
add
lods
retf
mov
gs
fwait
in
inc
test
push
sub
jbe
mov
cmp
hlt
fsubr
imul
inc
mov
mov
add
mov
mov
cmc
mov
mov
lods
xor
fwait
dec
addr16
sbb
ins
mov
imul
in
jp
xchg
repnz
fs
rcr
xchg
jmp
cmp
mov
test
cmps
push
push
mov
fs
add
ds
stc
xor
shl
jmp
or
cmc
pop
in
xchg
add
jl
icebp
fnstcw
stc
in
stc
mov
stc
push
aas
push
xchg
sar
icebp
(bad)
out
dec
or
out
mov
outs
icebp
jns
leave
mov
jns
std
cmp
out
fild
add
icebp
jae
sbb
jge
mov
ror
push
(bad)
in
mov
in
add
pusha
adc
add
jge
xchg
mov
(bad)
jg
test
add
adc
jecxz
push
mov
int3
jb
push
push
cdq
repnz
push
pop
int3
out
(bad)
mov
xor
std
mov
sar
ror
mov
and
hlt
xlat
aas
aad
mov
(bad)
js
lahf
movhps
dec
popfw
sbb
imul
sbb
mov
lahf
dec
fstp
outs
(bad)
mov
jmp
jns
pop
mov
test
jae
rcl
xor
iret
xchg
cmp
jle
adc
cdq
(bad)
lods
ret
pop
xchg
jmp
xor
adc
pop
pop
pusha
xor
cli
cmp
mov
cdq
mov
mov
popf
cdq
cmps
xchg
cmp
scas
ds
scas
mov
jmp
adc
sbb
ja
push
add
(bad)
movs
cmp
xchg
mov
mov
in
cmp
push
outs
cmp
sti
sbb
sbb
add
add
add
add
add
add
add
push
pop
(bad)
fiadd
or
add
add
add
add
cwde
add
adc
add
or
add
add
or
dec
mov
rol
add
add
mov
retf
out
add
add
add
hlt
cwde
fwait
jp
inc
mov
add
add
add
fnstsw
scas
xor
dec
adc
add
add
fdivr
(bad)
lods
cmp
pop
shl
js
add
add
push
inc
pop
and
jle
jle
xchg
iret
xchg
add
mov
lds
and
add
add
and
mov
mov
cmps
or
add
add
mov
lock
(bad)
je
mov
add
sub
sub
sub
cld
pusha
add
add
xor
aad
inc
add
add
add
mov
add
sbb
mov
add
dec
dec
aam
mov
shl
inc
pop
movs
enter
cmp
jb
dec
and
inc
push
dec
(bad)
and
ja
lea
dec
adc
mov
es
hlt
sbb
jne
int
or
cmp
jle
loopne
les
lods
fisubr
add
hlt
jmp
jecxz
adc
dec
xchg
out
hlt
lods
(bad)
lods
repnz
push
imul
ins
jmp
shl
jno
jecxz
in
mov
lock
aas
xor
inc
push
adc
rcl
popf
xor
jecxz
test
mov
enter
idiv
mov
inc
adc
mov
xor
(bad)
mov
pusha
je
hlt
retf
ret
fisub
and
jbe
jns
sbb
inc
rcl
add
cmc
(bad)
push
lock
pop
jp
leave
out
std
xor
(bad)
sub
into
lahf
stos
ins
stc
outs
mov
mov
add
scas
inc
jae
loope
jns
pop
fsubr
dec
in
repnz
sets
out
mov
mov
pop
xchg
sub
add
add
ins
aad
sar
int
ret
loop
jae
js
add
add
dec
dec
xchg
jp
adc
jl
add
rol
sar
repnz
add
es
inc
cwde
xchg
inc
jmp
xchg
sbb
inc
repz
sbb
or
dec
cmc
mov
cdq
fbstp
scas
xor
jecxz
stos
leave
leave
hlt
pop
aas
push
add
into
(bad)
in
imul
popa
jmp
bound
lahf
jp
jp
sbb
add
in
das
mov
ror
or
cld
cld
and
hlt
in
mov
lods
out
out
jns
adc
outs
pop
loop
movs
mov
adc
(bad)
dec
mov
hlt
cld
cld
jb
mov
shr
or
jmp
pop
mov
mov
xchg
in
cmp
pop
arpl
fnstcw
outs
stos
cld
into
scas
aaa
mov
scas
xlat
mov
push
cdq
and
lods
out
push
sar
inc
imul
mov
dec
mov
rol
inc
add
add
add
add
add
add
add
adc
push
adc
adc
and
pop
adc
inc
and
push
and
ss
and
inc
inc
inc
push
pusha
popa
jno
fiadd
or
add
add
add
add
inc
aad
push
pop
lods
push
stos
push
stos
aad
inc
enter
hlt
fs
xchg
outs
aad
lahf
ror
call
adc
(bad)
aad
inc
es
fisttp
xor
add
add
xor
lods
inc
leave
sub
ins
pusha
es
mov
in
je
add
pop
mov
lods
inc
shr
pop
adc
xlat
inc
mov
aad
mov
mov
and
pop
mov
add
pop
rol
(bad)
outs
push
pop
out
(bad)
push
add
sbb
cmps
(bad)
mov
outs
xchg
and
xchg
sbb
les
imul
mov
stos
dec
push
jg
sbb
fadd
and
pop
shr
repz
pop
xor
and
pop
call
xchg
test
rcr
xlat
hlt
adc
sub
pop
sub
lods
or
lods
or
push
test
inc
mov
stos
imul
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
icebp
inc
push
jne
push
push
mov
inc
lods
push
stos
cmp
in
shr
int3
je
sbb
or
scas
sub
xor
cmp
dec
cwde
jp
mov
mov
shr
jmp
xor
mov
or
pop
sub
cmp
stc
mov
xchg
inc
in
out
push
pop
mov
inc
push
and
mov
jmp
dec
inc
push
or
dec
push
or
movs
and
popf
inc
dec
and
inc
dec
cs
pop
mov
popf
stos
scas
scas
add
test
ret
aam
pop
das
retf
pop
adc
imul
out
add
fistp
inc
push
stos
mov
jb
sbb
xor
jae
movs
or
xchg
sbb
inc
cmp
sbb
xchg
outs
and
sahf
push
push
cmp
inc
or
add
aas
inc
jmp
add
sub
inc
mov
daa
mov
and
clc
clc
fstp
js
adc
push
pop
pop
loop
aam
xor
int
pop
mov
push
xor
inc
adc
push
push
js
pop
pop
mov
xchg
js
add
sahf
sbb
pop
mov
test
xor
pop
jle
add
es
cmp
sbb
inc
sbb
cmps
ja
mov
and
fnstenv
inc
andps
or
cmps
xchg
aas
inc
jmp
add
sub
ret
jmp
pop
ss
inc
sub
repnz
test
jne
or
pop
arpl
ins
ins
xchg
add
xchg
push
call
enter
sub
call
imul
imul
lea
sub
mov
aas
add
xchg
xlat
(bad)
into
int3
popf
cmp
pcmpeqd
xchg
jmp
cvtpi2ps
inc
xor
cmp
cmp
inc
add
adc
inc
mov
cmp
lods
xchg
mov
pusha
repz
pop
xchg
add
xlat
sahf
aad
jg
dec
mov
sbb
xchg
dec
xchg
mov
shl
inc
mov
pop
jl
mov
retf
sbb
mov
push
das
retf
fld
scas
push
popf
in
add
jmp
pushw
stc
pop
sub
push
outs
xchg
or
push
cmc
dec
call
add
loopne
sub
sar
cdq
repnz
sar
ret
es
sar
push
(bad)
stc
test
add
dec
mov
out
inc
xor
push
rcl
dec
cmp
mov
xchg
inc
stos
xchg
in
aad
mov
sub
mov
sti
cdq
(bad)
imul
push
popf
xor
lahf
mov
lea
adc
xchg
or
clc
adc
sub
iret
call
es
push
sub
mul
imul
jne
cmc
and
dec
sar
out
aaa
pop
in
mov
mov
(bad)
in
lahf
in
or
(bad)
push
das
retf
fucomi
sbb
ficom
push
jge
ja
ds
or
add
inc
mov
mov
mov
outs
xor
test
pop
es
imul
rol
fist
and
dec
cmp
xlat
inc
rcl
sahf
scas
js
xor
xchg
dec
pop
in
ror
jne
out
lods
jg
mov
jle
mov
mov
cmp
jp
push
jle
cmc
push
jl
mov
ins
pop
add
pushf
fbstp
gs
and
out
pop
push
adc
jno
cmp
loop
fsub
xchg
outs
int
scas
pop
or
std
or
inc
jno
push
cld
jle
mov
inc
jmp
stc
jnp
leave
sti
sub
and
lock
in
fistp
shl
push
movs
sub
mov
cli
jne
lods
push
stos
push
stos
aad
mov
pop
inc
lock
sub
sar
xor
fidivr
adc
xlat
cmc
sbb
push
cmp
inc
dec
rcr
popf
push
cli
mov
xchg
mov
mov
mov
push
fild
ins
fdiv
xchg
sub
arpl
daa
pavgw
aaa
jnp
in
loope
daa
mov
movs
push
aaa
sub
imul
mov
xlat
mov
push
fidiv
pop
aad
cwde
fist
scas
movups
aad
jmp
(bad)
in
adc
test
scas
mov
mov
in
push
jl
scas
push
cmp
dec
sub
mov
and
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
scas
outs
stos
pop
int
stos
push
stos
xlat
mov
stos
aad
fldcw
xlat
cmc
xchg
push
inc
adc
in
cmp
sub
call
xor
inc
ret
cmp
push
jl
cld
jmp
imul
mov
clc
mov
xchg
cmp
dec
push
inc
cmp
fild
jns
or
arpl
cmp
outs
retf
jo
jge
aaa
stos
push
jge
int
xchg
xchg
lds
xchg
xchg
scas
sbb
pushf
loope
ins
adc
xchg
jecxz
xchg
xchg
cs
ret
into
les
mov
push
cli
adc
mov
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
pop
ror
nop
lea
push
enter
inc
mov
dec
xlat
jae
mov
sub
call
add
mov
pop
adc
pop
push
cmp
mov
or
cmc
or
pop
out
sub
pop
popf
push
cmc
in
jl
std
adc
test
mov
inc
cld
mov
cwde
in
dec
jns
push
mov
imul
jmp
mov
fwait
sbb
push
cdq
xchg
fwait
retf
retf
mov
ja
cdq
push
pop
loope
push
xchg
addr16
repnz
pop
ss
xchg
fwait
mov
mov
pop
mov
dec
or
fsub
fcomp
outs
push
sub
lds
cmp
sbb
pusha
xor
mov
arpl
push
mov
push
mov
xchg
cmc
retf
jp
cmc
mov
arpl
(bad)
lods
(bad)
pop
sbb
cmp
mov
arpl
(bad)
lods
(bad)
pop
push
mov
ins
jp
cmc
mov
arpl
(bad)
lods
(bad)
pop
push
mov
ins
jp
cmc
retf
jp
mov
pop
mov
xchg
jb
pop
test
sub
xchg
jb
pop
mov
icebp
pop
cmp
popa
repnz
pop
lods
push
mov
fs
je
(bad)
repz
(bad)
inc
aad
cmps
pop
lock
cli
stc
(bad)
sbb
jg
popf
adc
aad
pop
inc
pop
inc
dec
hlt
pop
mov
cmp
sti
(bad)
fsub
(bad)
sub
call
(bad)
movs
outs
push
sbb
mov
push
int3
outs
arpl
fs
or
or
gs
popa
mov
dec
retf
jo
addr16
cmps
jl
dec
dec
mov
xor
fdiv
(bad)
mov
mov
sbb
les
sbb
out
in
scas
ror
jne
scas
cli
mov
jle
cmovne
adc
mov
push
xchg
sub
push
cmp
add
stos
aad
mov
lods
push
mov
pusha
test
push
inc
and
push
std
sub
pop
dec
jae
ficomp
xchg
sahf
mov
jmp
mov
cmps
in
dec
inc
sub
retf
pop
daa
outs
pop
mov
dec
xor
and
mov
ret
cmp
daa
arpl
imul
out
cli
mov
xor
inc
mov
lods
repz
inc
mov
xchg
xchg
sub
sbb
mov
sub
js
inc
xor
push
idiv
dec
retf
and
xchg
cmp
push
je
jne
scas
cli
mov
inc
push
pop
shl
xchg
shl
ja
cld
pop
sti
jecxz
adc
out
shl
ds
(bad)
outs
mov
sub
lods
fst
xchg
inc
movs
data16
fmul
daa
pop
jg
std
xchg
je
xchg
adc
inc
sar
adc
icebp
in
mov
push
fcom
lea
add
jnp
sub
sbb
fwait
xchg
mov
jne
sub
cld
push
dec
or
jge
xchg
lds
sahf
hlt
sar
scas
push
arpl
mov
mov
test
lds
jmp
push
xchg
js
xchg
movs
fadd
ins
sbb
int3
lock
and
stos
imul
sbb
inc
push
pop
shl
fwait
sar
jg
jl
sti
jecxz
adc
out
ret
pop
hlt
push
es
pop
xchg
xchg
mov
idiv
lea
movmskps
jno
pop
sar
add
sbb
stc
sub
ficom
xchg
call
clc
jbe
stc
cmp
scas
pop
mov
jmp
cmc
mov
ins
mov
mov
jb
test
test
pop
xlat
cs
mov
gs
in
scas
cmps
sbb
in
mov
or
test
ja
pop
jl
std
pop
cld
pop
cmp
pop
mov
(bad)
aas
call
aas
or
jp
sub
cli
dec
push
js
in
xor
adc
enter
leave
inc
jmp
jmp
push
icebp
in
mov
jbe
xor
repz
fld
pop
mov
lods
xchg
cs
jno
aas
das
xchg
(bad)
lds
pop
xchg
mov
xchg
sub
iret
in
out
jp
(bad)
push
out
inc
fistp
mov
inc
fimul
sbb
sbb
or
push
cmps
cdq
scas
cmps
mov
inc
imul
jl
aad
hlt
sbb
sub
psubb
add
jle
jg
inc
cdq
repnz
sbb
jp
xlat
or
fbld
aad
out
aas
inc
mov
dec
mov
cmp
cmc
ja
popf
pop
in
cmc
pop
mov
hlt
fcomp
mov
popf
mov
sbb
fld
icebp
cmp
mov
bound
sub
xchg
cmp
push
or
jbe
popf
cdq
push
jae
ds
mov
push
aam
push
aaa
ins
lods
jb
jp
dec
jmp
fnsave
test
ja
pop
ds
retf
repz
icebp
jg
(bad)
rcl
mov
call
aas
lods
jle
mov
sbb
mov
pop
test
pop
fisubr
mov
xchg
sub
xchg
xchg
jp
mov
jb
inc
push
ror
pop
(bad)
mov
enter
inc
sbb
pop
test
dec
mov
mov
lods
jno
jl
mov
push
ret
(bad)
mov
cwde
clc
sub
jle
into
jnp
jmp
push
fld
xor
hlt
rcl
rcr
mov
scas
test
push
out
stos
pop
add
push
mov
dec
and
cld
dec
jle
mov
or
call
lahf
and
test
dec
neg
jmp
sar
push
shr
lahf
sub
jle
gs
out
leave
cmp
leave
inc
jmp
jmp
sbb
movs
imul
fld
in
fwait
loope
shl
imul
dec
jecxz
lods
cld
fs
xchg
repnz
fisttp
ss
dec
jae
pop
cli
inc
push
imul
xchg
cwde
stos
mov
shr
pop
mov
dec
outs
inc
(bad)
jne
repnz
add
jmp
pop
and
loop
jp
cmp
aam
mov
push
outs
inc
lahf
adc
ror
inc
adc
das
mov
jle
pushf
popf
xlat
hlt
arpl
and
fdivr
pop
cli
jmp
mov
xor
jb
push
push
jbe
sar
pop
push
jmp
dec
cs
clc
test
fbstp
in
test
sub
dec
sbb
pop
rcr
or
cmps
jo
cmp
dec
shr
ds
lds
in
mov
call
imul
retf
pop
push
lock
push
js
ins
pop
das
jns
adc
ss
(bad)
in
sbb
(bad)
cmp
pop
cmps
test
mov
cmc
arpl
test
les
scas
mov
loop
add
jne
sti
lods
ja
inc
cdq
repnz
pop
std
push
pop
sar
pop
jp
ja
cmp
inc
in
xor
fldcw
bound
scas
in
xchg
mov
aam
sbb
push
(bad)
(bad)
call
psrad
ins
icebp
test
int3
int
mov
push
int
imul
adc
pop
in
shr
push
fmul
ret
adc
push
sub
rcl
(bad)
aas
or
into
sbb
int3
xchg
int
xchg
ins
gs
pop
adc
mov
push
test
mov
call
cmp
arpl
mov
outs
jmp
aas
int
(bad)
jbe
inc
dec
dec
jmp
xor
inc
adc
adc
arpl
cmp
jmp
xchg
cmps
jmp
icebp
mov
mov
leave
cmp
leave
inc
jmp
loop
mov
push
test
adc
sbb
loopne
jne
outs
or
jne
fwait
cmp
out
adc
jge
popa
sub
lods
out
imul
int3
loopne
scas
and
ret
mov
jo
or
xor
addr16
leave
mov
mov
int3
hlt
lods
addr16
mov
xchg
int3
in
repz
xchg
xchg
adc
xor
int
mov
cmp
out
sbb
ds
aad
cmp
fiadd
xchg
jge
and
xor
pop
std
fdivr
add
jle
and
outs
pop
sar
fcom
sar
bswap
lds
scas
and
cmc
jb
dec
mov
push
cli
(bad)
push
hlt
outs
imul
sub
push
aas
mov
into
or
and
adc
add
ret
push
xor
cs
sbb
icebp
scas
jmp
inc
lods
inc
jb
mov
xchg
loope
mov
jge
clc
sbb
loopne
stos
mov
iret
mov
gs
jg
aas
int
(bad)
jbe
inc
dec
dec
jmp
xor
or
aaa
das
imul
mov
pop
cmps
sub
jns
inc
repnz
jge
fldenv
inc
stc
sub
test
aaa
mov
jno
in
ret
mov
aas
xor
sub
xchg
mov
sub
sub
xchg
mov
and
dec
pusha
dec
sbb
xlat
mov
push
ds
stos
jp
clc
xchg
ds
push
jp
dec
(bad)
js
das
sti
rcr
dec
dec
jmp
xor
adc
outs
pop
sar
add
fidiv
(bad)
enter
inc
jecxz
call
push
out
(bad)
sub
pop
in
cmc
push
mov
mov
sub
push
(bad)
sub
jmp
dec
ror
int
mov
mov
stos
push
mov
stos
push
mov
push
mov
ins
inc
and
clc
and
pop
cli
dec
push
(bad)
pop
xchg
xchg
mov
out
mov
lahf
or
ret
scas
jl
lahf
or
ret
scas
jl
cmp
adc
xchg
mov
les
retf
fidivr
cmp
(bad)
fnstenv
cmps
test
xchg
inc
repnz
aad
(bad)
push
cmc
cmovbe
xchg
outs
(bad)
sub
xchg
push
rdpmc
sar
je
sub
shr
pop
sub
push
inc
imul
lea
movs
loope
mov
sub
lea
push
stos
mov
into
ret
aam
inc
out
add
ja
mov
sbb
(bad)
ins
iret
movs
xchg
push
mov
mov
jne
mov
inc
mov
scas
repnz
(bad)
hlt
clc
scas
adc
imul
pop
jbe
out
imul
push
jmp
daa
retf
or
ins
jb
jge
dec
aas
dec
and
fdivr
or
mov
push
xchg
shld
inc
(bad)
cli
mov
push
cli
(bad)
push
hlt
outs
imul
sub
push
aas
adc
lock
cmp
ds
mov
ret
push
test
jae
push
sti
dec
rol
lods
ins
mov
xor
jp
push
movs
movs
add
mov
fiadd
cmp
fld
mov
int
pop
ins
mov
leave
xchg
je
and
sub
(bad)
retf
jp
hlt
loopne
test
sub
ins
fst
loop
div
imul
sahf
sti
mov
push
out
inc
leave
mov
xchg
or
xor
hlt
pop
out
popf
mov
mov
ret
dec
pop
call
sbb
dec
shl
das
mov
sub
pop
test
retf
pop
adc
pop
add
inc
aaa
cs
or
and
push
lods
in
sbb
sbb
inc
pop
xchg
jle
xchg
mov
cwde
in
daa
dec
mov
cmp
mov
imul
dec
sar
pop
push
jmp
mov
call
stc
lahf
lods
jge
cmp
mov
mov
mov
push
les
in
adc
mov
mov
ins
inc
popf
push
les
aad
pop
cmp
lds
loop
xchg
fsubrp
xchg
push
pushf
mov
fbld
pop
sub
adc
pop
inc
pop
xor
xor
push
pop
or
call
test
mov
push
pop
jge
fcomp
js
dec
mov
inc
sbb
xlat
dec
dec
xchg
popf
pop
and
(bad)
in
mov
cld
movs
jb
xchg
jns
xor
arpl
cmp
aam
repnz
pop
in
mov
stc
add
(bad)
jns
je
xchg
jg
lea
mov
jb
mov
xor
sub
push
hlt
pushf
mov
pop
scas
scas
inc
dec
sar
pop
push
jmp
hlt
aam
mov
movs
pop
jae
lods
scas
(bad)
movs
cmps
add
jne
imul
in
push
xlat
es
sub
sbb
sbb
mov
xchg
ret
dec
fsub
mov
push
mov
je
cwde
inc
mov
mov
jno
jbe
icebp
mov
mov
in
inc
in
pop
ja
xor
adc
(bad)
pushf
imul
cld
cmps
test
sub
xor
add
push
mov
inc
imul
in
cmp
in
cmp
sbb
(bad)
ins
sub
inc
aaa
sub
in
or
adc
push
mov
retf
jb
outs
in
arpl
xor
xor
ret
sub
xchg
cmp
test
push
rol
jecxz
jg
adc
lock
repnz
shr
and
cmc
cmovbe
xchg
ja
cwde
shl
push
std
push
test
add
out
xchg
dec
sbb
fisub
xchg
stc
jle
fs
or
xor
mov
xor
out
mov
cmp
sti
mov
mov
add
push
dec
push
and
inc
pop
adc
loopne
inc
sub
movlps
adc
movs
lock
scas
das
cmp
and
xchg
push
inc
and
push
pop
js
mov
pop
jl
sbb
jbe
pop
add
in
jbe
add
jno
mov
mov
pop
test
mov
aaa
shr
xchg
lods
adc
in
mov
fild
inc
stos
inc
clc
adc
xchg
adc
call
or
jg
and
pop
jle
adc
ins
clc
test
aas
rcl
std
fiadd
inc
sub
neg
hlt
or
aad
test
jmp
add
mov
mov
clc
test
jmp
xchg
call
inc
sbb
cli
js
mov
(bad)
push
arpl
pop
mov
dec
mov
mov
mov
push
cmp
in
push
mov
push
inc
cmp
push
inc
sub
inc
push
jb
fisubr
aas
push
sub
arpl
arpl
sub
retf
inc
push
mov
and
dec
jno
out
cmps
aas
ret
idiv
jle
jne
xchg
ins
or
inc
adc
xchg
jb
stos
push
add
adc
push
inc
cmp
xchg
xor
cmp
imul
movs
imul
mov
add
push
push
rol
(bad)
sub
rcr
(bad)
pop
call
inc
lods
add
mov
mov
cmp
cmp
mov
mov
sub
xchg
(bad)
xor
mov
push
mov
(bad)
hlt
fsubr
lea
add
mov
push
jp
push
je
imul
push
hlt
sbb
iret
push
imul
dec
clc
inc
addr16
adc
dec
add
movs
xor
stos
rol
fidivr
into
pop
sub
push
mov
cli
pop
xlat
mov
sbb
popf
xor
jns
jg
addr16
jge
int
stos
push
stc
fcom
jnp
jbe
pop
sahf
aas
xchg
pop
xchg
retf
repz
(bad)
pop
xchg
sar
(bad)
mov
mov
mov
mov
pushf
sub
xor
mov
sti
or
cmp
cmps
arpl
sub
out
test
imul
lea
lods
aas
jnp
dec
bnd
push
xchg
fild
inc
mov
lock
mov
xchg
fstp
push
xlat
fucomp
mov
in
jbe
pop
xor
sub
or
mov
jnp
mov
rcl
sbb
sahf
stos
sbb
js
and
clc
nop
pop
cmp
pop
cmps
cmps
inc
adc
and
add
aam
push
cmp
jmp
dec
loop
sub
push
das
xor
pop
cdq
aaa
jb
and
jnp
js
mov
mov
gs
adc
stos
frstor
sub
test
enter
popa
out
aam
cmp
scas
aam
xor
mov
int3
or
iret
add
pushf
mov
loopne
or
mov
cdq
cmp
int3
popf
mov
mov
xchg
mov
sub
push
outs
ficom
movs
fbld
fbstp
push
push
mov
adc
push
aad
jno
push
dec
jbe
mov
mov
sub
mov
cmps
(bad)
xor
cmps
outs
ja
(bad)
hlt
cmc
push
in
retf
sbb
clc
add
out
gs
mov
pop
lods
dec
pop
jle
push
cmc
pop
mov
pop
sti
fdivr
aad
loop
cld
shr
aas
xor
xchg
push
mov
or
movs
mov
hlt
mov
pop
popa
jmp
jo
mov
in
inc
pop
dec
out
stos
(bad)
ins
inc
mov
pop
dec
sbb
sahf
pop
rol
jge
fs
xor
nop
movs
sub
div
pushf
pop
stos
imul
mov
and
mul
fdivp
stos
fcomp
sbb
ss
stos
pop
adc
scas
cdq
js
push
stos
mov
fsub
retf
mov
je
fld
fdivr
cld
mov
clc
pop
lea
mov
ret
push
lahf
mov
mov
cmp
sub
and
cmp
sbb
mov
ror
sahf
cwde
ss
fsub
pop
jb
in
jo
mov
imul
adc
ret
(bad)
ds
lahf
je
pop
pop
call
scas
push
xor
mov
out
adc
cld
scas
pop
ret
mov
pusha
lods
imul
push
or
fwait
data16
adc
es
stos
aam
sbb
push
ret
loop
sub
push
aas
mov
mov
popf
jmp
mov
(bad)
hlt
jle
push
sbb
jmp
mov
sbb
push
enter
stc
push
mov
and
jae
pop
stc
sub
adc
fisttp
imul
jae
ror
cmp
mov
jae
mov
mov
aam
into
push
mov
jecxz
xchg
(bad)
cmp
fnstsw
jno
mov
retf
inc
jo
adc
leave
idiv
popf
sahf
jns
and
mov
mov
cmp
out
jb
daa
outs
sar
mov
mov
xor
movs
sbb
jno
mov
out
loopne
xchg
dec
dec
out
adc
pop
or
js
dec
sbb
or
je
and
jne
outs
push
push
stos
cmp
inc
test
lock
lods
je
aad
push
cmp
enter
push
das
jmp
adc
dec
adc
bound
cmp
mov
or
inc
ss
lds
fs
pop
aad
and
dec
jb
adc
and
fstp
jp
aad
dec
jno
and
pop
(bad)
loope
popf
lock
loopne
stos
jne
scas
(bad)
(bad)
fidivr
mov
inc
fsubrp
cwde
adc
or
pop
ins
not
inc
call
add
pop
and
inc
push
push
sub
xor
lods
lds
int3
out
mov
div
dec
daa
ss
jno
fwait
push
fisttp
jb
push
adc
xor
in
enter
nop
pop
(bad)
mov
pop
loop
xchg
nop
cmps
xchg
out
aam
retf
es
dec
sub
(bad)
mov
xchg
push
push
mov
bound
(bad)
retf
and
les
push
loopne
cdq
sub
aas
push
into
pop
ss
fild
or
ss
xor
jp
push
lahf
cmp
push
stos
and
inc
fwait
mov
cmps
lahf
sub
push
in
inc
stc
push
xchg
inc
enter
cdq
lahf
sub
loop
fxch
int
aas
das
jbe
das
jo
sub
into
jb
xor
inc
cmps
sbb
push
mov
rcl
int3
push
loopne
hlt
pop
mov
cld
adc
sbb
imul
hlt
in
popf
fs
push
in
mov
shr
cmp
ja
jmp
gs
dec
and
inc
test
jb
pop
js
add
sub
and
xor
add
jb
cs
imul
movs
retf
jno
(bad)
inc
adc
sub
xor
fnstenv
sub
cmp
and
mov
test
sub
add
outs
sar
mov
mov
lock
mov
dec
cmp
or
fwait
inc
jne
mov
pop
xchg
dec
and
lods
ja
push
std
adc
mov
nop
ins
push
mov
aad
loope
inc
out
dec
jnp
sub
inc
dec
push
inc
out
sbb
(bad)
ins
das
jle
(bad)
cmp
pushf
out
loope
mov
jg
test
(bad)
out
scas
rol
pop
inc
cmp
jl
pop
sub
fcmovb
sbb
push
dec
xchg
lods
xor
call
(bad)
cs
cmp
stos
out
or
mov
adc
add
gs
inc
ss
loop
cmp
lahf
xchg
lods
adc
in
jno
pushf
aam
sub
ss
mov
repnz
fwait
pusha
mov
bound
xchg
shl
ins
icebp
jnp
div
loop
mov
jne
cmp
mov
cmp
ret
mov
cmp
xor
inc
cmps
ds
or
adc
mov
pop
jl
mov
jo
cli
xor
cmp
popf
sub
push
hlt
push
and
add
pop
out
mov
lock
scas
mov
and
xor
mov
iret
sbb
pusha
fistp
sub
and
push
mov
mov
arpl
bound
mov
pop
(bad)
out
test
iret
adc
adc
(bad)
mov
sbb
jne
into
fisttp
in
cmc
cdq
ja
cmp
repnz
clc
fcomp
in
imul
adc
in
sub
add
and
inc
jbe
push
mov
adc
mov
popf
retf
xchg
movs
cmps
mov
fidiv
mov
xchg
mov
xchg
ror
loope
xchg
imul
addr16
lds
adc
cmc
or
pop
mov
cmp
mov
push
scas
mov
nop
dec
xchg
dec
jp
xor
fdiv
xchg
popa
retf
ja
pop
scas
clc
in
leave
or
lds
add
shr
ss
jo
das
or
push
jo
jbe
call
push
xor
fst
xor
cmp
adc
ja
fs
loope
mov
je
int3
mov
in
ins
dec
mov
sbb
add
jp
(bad)
jae
lods
ret
cmp
dec
xlat
cmp
in
jne
lods
rol
addr16
fbstp
jb
sbb
cld
fnstenv
pop
in
jp
test
imul
pop
or
leave
popa
adc
mov
sbb
push
(bad)
popf
pop
pop
jl
(bad)
lahf
sub
or
enter
xor
pop
mov
lock
lock
push
stos
fcmovbe
mov
bound
leave
retf
(bad)
jae
dec
clc
in
dec
mov
xlat
neg
mov
repz
sbb
sar
and
rcr
xor
fdiv
inc
or
push
ror
dec
imul
cmp
xor
ins
repnz
mov
sub
mov
inc
sub
dec
push
xchg
sbb
icebp
dec
sbb
fwait
jle
xchg
inc
xchg
lods
inc
fisttp
imul
scas
dec
neg
mov
es
and
test
dec
lods
lods
test
cmc
mov
mov
(bad)
out
mov
dec
ret
push
lock
mov
mov
popf
and
mov
(bad)
pop
mov
inc
push
(bad)
xor
cmp
test
xor
inc
enter
xor
les
push
(bad)
jno
mov
xor
lods
dec
retf
pushf
sbb
xor
cmp
mov
inc
dec
(bad)
mov
and
jge
push
mov
push
jge
lock
jae
mov
imul
and
inc
pop
bound
les
mov
test
sub
lods
push
sub
scas
into
ror
int3
bound
fstp
or
push
mov
mov
adc
frstor
push
fs
pop
test
fimul
fs
lea
je
or
ret
dec
pusha
pop
fwait
mov
(bad)
and
or
xor
mov
movs
(bad)
push
mov
int
push
lahf
movs
retf
(bad)
retf
mov
ror
jno
daa
cld
mov
push
stc
in
xor
ss
sub
test
movs
bound
enter
jno
imul
jl
jp
adc
or
shr
retf
ret
repz
inc
popa
out
adc
adc
or
add
test
enter
push
mov
add
or
jo
in
fwait
pop
arpl
xor
or
mov
out
push
xor
and
loope
jmp
(bad)
pop
xchg
and
outs
psraw
add
push
sub
mov
mov
cmp
loop
es
adc
mov
dec
je
(bad)
push
nop
out
je
pusha
scas
inc
loopne
ds
stos
mov
mov
cli
jmp
push
test
adc
test
sar
xchg
imul
mov
xchg
fst
sbb
xor
out
sub
out
push
call
daa
js
mov
xchg
push
pop
and
push
fcomp
pop
push
popa
sbb
dec
cmp
adc
popa
xchg
les
out
pushf
push
and
jp
push
sbb
loope
xor
jo
(bad)
leave
add
(bad)
imul
and
cmp
mov
cmp
out
dec
push
mov
cmp
cmp
cmp
jmp
cwde
jge
and
push
imul
jmp
adc
and
fcom
dec
and
mov
movs
xchg
dec
xor
mov
fidiv
cwde
jmp
neg
sub
(bad)
outs
jle
sub
fwait
and
sub
(bad)
retf
mov
sub
out
jo
adc
out
lds
imul
das
iret
dec
pop
pop
cmc
mov
pop
jle
sti
mov
inc
mov
xor
fxtract
loop
xor
(bad)
sar
retf
add
fcom
jle
xor
add
fldlg2
shr
mov
cs
outs
mov
dec
fist
mov
inc
aad
ja
gs
and
fldenv
repnz
xchg
jo
pop
sahf
dec
aad
ds
lock
mov
(bad)
gs
imul
inc
push
popf
add
daa
pop
pop
push
jno
mov
push
xchg
jb
mov
and
cmp
mov
lock
xchg
arpl
mov
stos
cmp
lods
sbb
mov
push
xchg
jb
mov
cmp
push
pop
in
lods
mov
xlat
jnp
mov
retf
shr
mov
call
adc
jo
mov
mov
mov
scas
and
pop
pop
loop
xchg
daa
xor
xchg
ja
rcr
mov
rcr
cdq
push
fild
mov
in
xor
fwait
push
xchg
cmp
inc
imul
arpl
dec
imul
pop
cmp
push
xor
fs
ret
mov
out
mov
lahf
movups
popf
xchg
fild
pop
sub
adc
cmp
imul
fldcw
iret
jle
add
mov
popf
sbb
mov
jl
out
in
adc
lods
push
sub
pop
xlat
je
js
push
add
fimul
dec
sar
push
fs
lea
rol
les
adc
push
fnstcw
arpl
ss
lea
jnp
xchg
cmp
leave
cdq
pop
std
fist
test
jmp
loop
cmp
xchg
push
(bad)
pop
xchg
pop
outs
jo
int3
xor
pop
push
push
fld
gs
ret
mov
cmp
add
pushf
push
mov
gs
mov
(bad)
idiv
not
mov
jne
call
mov
jmp
out
mov
out
jmp
pop
and
call
mov
clc
pop
and
in
movs
add
pop
xchg
jne
ja
xlat
jno
cmc
mov
loop
sti
popa
cli
mov
rcr
jbe
out
aad
fcom
adc
push
fcmovnb
lods
inc
and
push
mov
cs
mov
push
in
jg
in
(bad)
cmp
sub
cmp
out
push
mov
jnp
inc
push
(bad)
fstp
push
mov
in
int
mov
xor
out
(bad)
das
(bad)
mov
das
retf
mov
ficom
add
retf
pop
mov
aaa
in
push
lea
data16
imul
jns
aad
lock
push
add
rcl
out
arpl
xlat
mov
(bad)
dec
xor
mov
retf
(bad)
movs
(bad)
fisub
mov
not
mov
fmul
jno
icebp
ins
adc
imul
mov
sar
push
gs
enter
icebp
jne
outs
addr16
fadd
cmps
inc
fstp
int
mov
and
cmp
mov
adc
js
psubusw
test
fnstcw
inc
rcr
adc
adc
pop
adc
mov
inc
(bad)
int
outs
sbb
out
sbb
(bad)
and
fdivr
mov
lods
gs
or
(bad)
xor
rcr
aad
pop
lea
lds
pop
mov
xchg
xor
mov
jecxz
adc
dec
pop
(bad)
dec
fcmovbe
jns
(bad)
inc
(bad)
mov
dec
pop
or
bound
mov
push
cmps
pop
aaa
dec
inc
pop
mov
sbb
adc
out
(bad)
sub
mov
(bad)
xor
leave
push
mov
jnp
sbb
cmc
sbb
mov
shl
push
ins
cli
cmp
mov
mov
in
sbb
dec
add
hlt
loope
inc
mov
je
fnstenv
inc
cmps
popa
dec
imul
movs
push
inc
xor
clc
inc
fadd
fisttp
retf
mov
loop
cwde
rcr
cmp
and
mov
loopne
(bad)
mov
cmp
leave
(bad)
push
shl
ins
sbb
or
sar
jge
test
jl
inc
jmp
imul
mov
ja
out
inc
ret
sbb
addr16
sbb
push
out
cmp
imul
mov
add
dec
pop
or
sbb
sbb
fwait
jae
pop
mov
ins
jnp
mov
pushf
jge
adc
and
sub
movs
mov
or
fistp
leave
movs
cwde
leave
pop
mov
sub
inc
push
in
fcom
out
add
mov
das
shr
mov
lock
sub
fs
inc
(bad)
jns
mov
add
mov
out
xchg
fisubr
jnp
repnz
inc
enterw
iret
dec
jb
and
loope
ret
popf
(bad)
push
cdq
mov
push
leave
adc
mov
cmc
mov
(bad)
sub
mov
imul
lahf
lds
fistp
or
test
js
es
jno
ficomp
or
stos
xchg
inc
lock
pop
cmp
imul
scas
jge
dec
push
jle
jmp
cdq
or
mov
mov
shl
push
inc
push
loope
push
lahf
push
call
int3
ds
mov
sar
jg
or
pushf
sub
pushf
cdq
test
(bad)
ins
aam
jnp
(bad)
clc
int3
mov
xor
jno
and
or
ret
(bad)
mov
cmps
xchg
pop
push
sub
push
xchg
cmp
bound
jns
dec
mov
bound
mov
sub
fld
or
add
sub
xchg
jmp
stc
or
adc
iret
xchg
dec
jl
pop
cmp
inc
fdivr
jae
pop
pushf
loope
xor
popa
cmp
scas
(bad)
call
mov
xor
ins
ja
add
fnsave
not
sub
mov
js
xchg
cmc
cmp
mov
xchg
outs
(bad)
push
inc
lds
or
xchg
sub
(bad)
icebp
repz
cmp
nop
nop
inc
and
std
in
cmp
cdq
adc
loope
sar
ss
mov
mov
push
sbb
sahf
pop
stos
xchg
dec
outs
xor
pop
fisub
push
pop
out
mov
cmp
jnp
cmps
mov
jae
(bad)
mov
(bad)
loop
ret
push
sub
pop
pop
lahf
popa
or
in
jbe
out
inc
mov
cmps
enter
inc
pop
sbb
inc
lods
inc
lea
das
arpl
mov
cmp
lods
ins
fcmovu
cmc
xchg
xor
jbe
shr
pop
mov
jmp
out
xor
cmp
pop
xor
sbb
inc
out
loop
pop
sub
add
sbb
and
mov
(bad)
fs
cmp
jo
psrld
(bad)
xchg
sbb
int3
push
dec
sub
(bad)
adc
fnstsw
or
and
out
loop
aam
sub
mov
rcr
(bad)
fisttp
int
stos
sub
pushf
pop
push
icebp
dec
mov
call
rep
sbb
out
or
mov
shl
and
retf
jecxz
fsub
ins
cmp
imul
(bad)
es
mov
sahf
or
(bad)
cmp
jle
xchg
cmps
xchg
xchg
imul
rol
sbb
mov
xchg
jmp
call
lds
xchg
fs
mov
scas
mov
jno
mov
mov
inc
(bad)
fist
dec
pop
mov
xor
push
lock
mov
dec
push
arpl
arpl
mov
js
jmp
scas
cmp
pop
lea
icebp
adc
xchg
xor
in
xor
push
dec
repnz
rol
fs
xor
loopne
stc
ret
sub
add
mov
push
lds
aas
aam
test
push
inc
neg
and
fcom
jmp
jecxz
aad
mov
jg
push
xlat
push
out
cmp
mov
pop
xor
xlat
xchg
adc
pop
adc
pop
mov
bound
sbb
xor
scas
inc
iret
xlat
outs
addr16
retf
jns
std
mov
mov
(bad)
xchg
adc
dec
push
sbb
mov
ds
inc
push
ror
call
sub
cmp
in
or
fwait
sub
cmp
jbe
sbb
dec
loop
push
bound
out
lock
popa
mov
ins
cmp
ror
mov
out
repz
imul
dec
mov
aaa
xor
push
pop
mov
sbb
and
stc
mov
into
(bad)
cmp
cmps
out
out
int
mov
mov
and
int3
mov
sub
test
fs
dec
fst
in
addr16
data16
(bad)
loope
mov
jbe
ins
fmul
loopne
shr
push
jg
mov
xchg
mov
mov
popa
popa
mov
jb
daa
std
lea
loopne
jnp
pop
mov
std
rcr
fwait
sti
mov
add
hlt
rcr
mov
add
ds
in
test
aad
stc
jno
inc
(bad)
daa
cmps
clc
xchg
in
dec
push
jne
xor
xor
lds
mov
lock
jb
lods
inc
pop
jecxz
aaa
or
fs
ins
into
mov
mov
push
dec
arpl
aad
arpl
cmp
cmp
inc
dec
jb
outs
out
adc
(bad)
(bad)
(bad)
dec
iret
pop
dec
enter
xchg
cmp
xchg
rcr
sub
es
pop
inc
sar
xchg
mov
cmc
jg
retf
cmp
ss
or
mov
test
fsubrp
scas
test
mov
jns
mov
jmp
pop
js
sti
pop
mov
jmp
mov
fstp
ins
ror
dec
out
out
jp
push
cmp
outs
inc
cmp
lods
imul
(bad)
sahf
xlat
sar
and
push
mov
in
sahf
fwait
inc
enter
or
sbb
bnd
add
mov
mov
and
add
(bad)
fisttp
ret
mov
add
repz
xor
sbb
jle
repz
and
mov
dec
popf
dec
cmp
jmp
fwait
dec
call
repnz
stos
(bad)
xlat
mov
or
cld
xchg
mov
enter
mov
aam
mov
dec
push
xchg
xlat
clc
adc
cmp
lock
popa
cmp
cs
pop
retf
clc
pop
xor
aaa
rcr
pop
add
jo
jno
inc
js
xor
xchg
loop
pop
xor
test
aas
int3
push
mov
add
mov
add
int
loopne
fcomp
and
cdq
les
cmp
loop
es
data16
arpl
daa
fs
retf
out
dec
and
pop
int
shl
xchg
into
out
add
dec
cld
outs
xchg
or
pushf
iret
(bad)
sub
adc
add
je
scas
pop
xchg
int
push
mov
mov
xchg
aam
fsub
pop
adc
scas
sbb
ja
cmp
mov
xchg
fs
fmul
sub
mov
inc
mov
out
dec
jmp
push
jne
ja
xlat
jne
sbb
mov
xor
mov
jg
fadd
lds
sub
pop
aam
mov
inc
pusha
and
inc
and
sub
mov
dec
out
repz
call
ret
and
and
shl
icebp
addr16
cmps
retf
mov
out
pop
xchg
dec
mov
ret
xchg
(bad)
pushf
sub
sti
jns
scas
inc
ins
mov
scas
mov
test
(bad)
lea
lock
mov
jp
or
jno
or
fdiv
adc
mov
adc
jo
movs
fbld
jg
mov
xchg
jne
dec
mov
cmp
test
jne
inc
push
jecxz
adc
popa
test
icebp
outs
icebp
ja
scas
loop
or
js
add
popa
ret
retf
clc
ret
xchg
dec
(bad)
pushf
aaa
or
jge
jo
jg
aas
data16
add
ja
retf
imul
push
push
push
jb
mov
mov
cmp
mov
fsub
sub
ins
pop
lods
sub
mov
ins
or
xchg
pop
sub
push
ja
sub
std
(bad)
sub
ja
call
retf
push
push
inc
cld
ins
jnp
std
add
ja
jne
cmp
mov
imul
scas
daa
sub
pop
mov
in
leave
rcr
fidiv
mov
in
(bad)
jb
rcr
dec
not
stos
and
mov
push
sbb
add
imul
push
loopne
inc
jns
ja
lock
movs
mov
mov
cwde
mov
mov
dec
add
ficomp
and
imul
in
loopne
lahf
sub
add
scas
cmp
lods
loopne
nop
jmp
add
fucomp
pop
in
(bad)
icebp
push
push
jnp
mov
repnz
mov
jb
jmp
int
jl
outs
mov
pop
cmp
fldenv
dec
sbb
gs
iret
(bad)
sbb
outs
leave
(bad)
sbb
jno
pop
jge
aad
neg
mov
mov
ret
sbb
loop
mul
push
sub
div
fidiv
clc
int3
xchg
fdiv
rcr
mov
mov
fs
pop
jp
inc
or
or
mov
xlat
mov
stc
sub
sub
cwde
sub
mov
lahf
cmc
add
cli
call
pop
sub
cwde
push
pop
add
stos
aad
mov
(bad)
mov
push
mov
push
inc
cli
jge
sbb
lods
push
and
sahf
add
sub
das
push
jg
dec
test
xor
adc
repz
lahf
sar
icebp
cmp
mov
push
ds
dec
push
sti
movs
or
aaa
jo
push
faddp
out
pop
mov
or
outs
imul
neg
jl
sbb
scas
adc
dec
fs
jge
mov
cmps
sar
out
aad
jle
cmp
scas
sbb
outs
mov
mov
sar
scas
mov
div
sbb
cld
xchg
jno
mov
cmps
out
lods
loop
cmovae
dec
hlt
cmp
mov
cli
or
(bad)
mov
sar
push
mov
sub
(bad)
dec
mov
lods
popf
sbb
ins
cmp
dec
idiv
adc
dec
jl
cwde
pop
inc
stos
dec
jg
mov
ror
fsub
int3
sub
lods
imul
retf
sbb
xor
cmps
xchg
or
loope
scas
mov
dec
xchg
pop
or
pop
xchg
push
rcr
repnz
push
inc
clc
movs
sub
(bad)
inc
repnz
cmps
jne
pop
and
push
adc
lock
add
scas
mov
icebp
push
pop
push
stos
sub
scas
not
inc
mov
sub
pop
outs
jns
outs
push
gs
sub
and
pop
xchg
cs
inc
mov
ss
sbb
push
mov
and
gs
test
nop
dec
int3
ins
jae
cbw
xor
xchg
repz
outs
es
adc
rcr
pop
sub
mov
(bad)
js
mov
idiv
(bad)
xor
add
stos
stos
imul
jg
lods
push
test
push
adc
int
jne
loopne
jnp
xchg
leave
leave
add
lahf
mov
cmc
iret
pop
sub
and
lea
cld
cmp
outs
push
mov
dec
scas
or
sub
mov
xchg
push
ret
les
fldl2t
(bad)
pop
shr
push
mov
mov
pop
cmp
sar
loopne
jg
push
adc
xor
pop
in
pop
js
ja
not
scas
jb
rcr
cmp
sbb
adc
jle
xchg
jp
mov
ja
jne
cmp
jmp
bound
sbb
sub
push
repz
push
dec
mov
mov
push
mov
or
xlat
push
leave
jecxz
popf
jmp
push
xor
xlat
mov
xchg
mov
aas
and
mov
jg
xchg
pop
pop
ret
xchg
push
sub
jg
lock
cld
adc
inc
xchg
mov
out
xchg
(bad)
xor
js
mov
imul
cmp
leave
mov
push
call
inc
push
(bad)
fild
jno
xchg
xchg
cmps
ret
jno
cmps
pop
push
cmp
jno
push
mov
lds
js
imul
ret
sbb
pop
xor
cmps
jl
fiadd
clc
in
ins
jae
scas
out
(bad)
lahf
fbld
js
xchg
lock
mov
pop
dec
cld
adc
repz
(bad)
and
stos
mov
fs
jp
mov
out
push
adc
fwait
lock
div
fimul
in
or
fwait
sbb
neg
push
data16
mov
mov
aad
cli
jns
mov
sti
or
push
les
cli
sbb
int3
lods
inc
sub
arpl
outs
test
cmp
test
movs
cwde
es
inc
loopne
hlt
(bad)
xchg
push
mov
pop
out
loopne
inc
popa
pop
loopne
gs
test
outs
das
jne
sbb
(bad)
cdq
mov
(bad)
outs
shr
dec
fs
dec
(bad)
scas
xchg
jnp
mov
or
xor
out
or
mov
scas
mov
js
mov
inc
cmp
cmc
fcom
sar
push
mov
jge
shl
pop
ret
mov
dec
sahf
mov
sub
outs
int3
mov
xor
ss
dec
xchg
mov
repz
jle
aaa
ja
pop
lock
in
ins
out
js
popa
mov
mov
loop
xchg
xlat
jae
stos
and
sub
inc
sub
adc
(bad)
repnz
xchg
jae
sub
add
and
test
lea
and
iret
sbb
leave
mov
fnstsw
mov
adc
and
(bad)
fist
cmp
sbb
sub
jnp
in
xlat
hlt
in
add
aas
push
pop
call
enter
mov
push
and
scas
pop
mov
cld
iret
ss
push
sbb
push
lahf
jmp
cmp
aam
sub
sub
lock
stos
push
pop
mov
addr16
addr16
or
and
mov
xchg
mov
or
mov
pop
(bad)
mov
aaa
xchg
stos
aam
push
cmp
pop
loopne
fwait
hlt
sbb
jo
adc
sbb
mov
add
sti
add
lods
jnp
aaa
jl
dec
dec
fisttp
mov
push
shr
sub
test
(bad)
mov
(bad)
jmp
iret
stos
repnz
adc
ins
(bad)
pop
ds
mov
mov
outs
push
out
ss
or
lock
(bad)
jl
arpl
jno
jb
mov
mov
push
je
iret
(bad)
repnz
push
dec
adc
lods
retf
mov
out
and
cmps
loop
test
pop
push
xor
aas
idiv
(bad)
test
push
sub
call
push
fwait
mov
push
lahf
and
or
sbb
push
arpl
test
jns
mov
mov
shr
(bad)
xchg
jle
mov
cmps
pop
mov
pop
out
inc
ins
jnp
loop
test
out
sbb
scas
scas
jns
pop
cmc
enter
pop
mov
adc
vpxor
jmp
xchg
push
in
sub
addr16
fs
das
(bad)
and
and
inc
ds
mov
pop
mov
call
int3
mov
xor
jne
pop
mov
xchg
cmp
jns
call
nop
repnz
xchg
dec
inc
pop
cli
push
mov
aaa
fcom
mov
mov
sahf
frstor
lds
fsub
sbb
mov
rcr
fisubr
loope
out
in
mov
mov
lahf
int3
mov
push
cmps
jae
xchg
hlt
icebp
pop
mov
add
mov
rcl
xchg
fcomp
lods
cmp
fnstcw
stc
pushf
ret
push
adc
jp
jmp
fstp
inc
xor
lods
dec
mov
pop
js
fisubr
xchg
leave
sub
dec
out
dec
adc
clc
lods
pop
cdq
(bad)
mov
dec
in
sub
jbe
imul
call
dec
adc
mov
jnp
aas
retf
pop
dec
cld
push
dec
mov
dec
pop
and
mov
adc
add
push
test
rol
ins
sub
dec
ficom
mov
arpl
sbb
cs
fmul
add
lock
adc
stos
out
sub
call
ret
jo
push
imul
xchg
inc
and
cdq
outs
inc
in
frstor
lods
out
pop
fidiv
jp
dec
out
mov
sti
sti
mov
int
mov
jmp
pop
mov
xchg
les
mov
lds
push
xchg
popa
xor
push
pop
test
movs
sub
xchg
loope
push
movs
sti
inc
mov
lods
int3
mov
mov
sbb
scas
out
push
pop
push
mov
sbb
push
mov
loope
jmp
sub
xchg
adc
mov
ins
fsub
ins
(bad)
pusha
ficom
adc
sbb
add
rep
push
leave
ds
jmp
sar
arpl
xchg
mov
and
adc
jb
or
sbb
inc
in
rcl
mov
add
jmp
xor
sbb
cmp
jns
jle
sub
mov
xor
pop
in
cmp
(bad)
aad
mov
mov
shl
scas
push
mov
fiadd
dec
ds
pop
adc
push
cmp
pop
mov
adc
add
push
test
mov
xchg
stos
aam
dec
aam
dec
mov
add
inc
aad
call
scas
dec
jno
pop
icebp
arpl
retf
shl
imul
pop
mov
jnp
ins
mov
fwait
jae
out
pop
push
(bad)
sti
out
aad
je
jae
loopne
sub
cmp
and
shl
inc
cs
in
sahf
mov
xor
mov
mov
mov
jl
cmp
jno
mov
ss
mov
jne
mov
mov
int3
pop
fisub
lahf
(bad)
cs
xchg
iret
adc
xchg
jmp
pushf
arpl
add
in
(bad)
(bad)
pop
in
aaa
ror
(bad)
ins
cdq
jg
imul
mov
rcl
jge
std
jnp
xor
outs
dec
cdq
scas
call
push
cmps
adc
push
mov
adc
stos
xchg
cmp
scas
fidiv
sub
sbb
ss
inc
sub
push
(bad)
dec
sub
cs
xchg
loop
xchg
mov
not
nop
dec
lods
ss
xor
or
inc
fdiv
int3
(bad)
push
mov
fs
out
adc
xor
mov
mov
xchg
mov
dec
push
sub
inc
and
sahf
xor
lahf
adc
add
aas
cmp
inc
popa
or
xchg
aas
fsubr
push
fbstp
mov
pop
std
stos
mov
stos
mul
gs
jbe
pop
scas
adc
jne
add
lods
mov
pop
sbb
xor
stc
js
outs
sub
jp
ins
mov
ins
mov
fsubr
mov
fcomip
mov
fisttp
in
jb
mov
cs
stos
xchg
sub
dec
fwait
adc
mov
dec
pop
popa
popf
xor
dec
xchg
xchg
mov
je
mov
dec
cmps
cwde
pop
ja
mov
pop
(bad)
push
mov
adc
mov
cmp
mov
add
xor
out
mov
icebp
mov
addr16
scas
sbb
bound
cmp
mov
in
aaa
xor
dec
leave
dec
inc
ja
xchg
jae
pop
ja
pop
push
repz
shl
fs
out
dec
pop
or
sbb
sar
cwde
sub
pop
mov
or
fldenv
inc
fsubr
add
xor
and
sub
les
mov
hlt
int
js
fwait
iret
mov
outs
push
mov
stc
stos
js
pop
scas
adc
aad
cwde
fcom
jecxz
loop
xchg
bound
lock
cs
inc
pop
or
xchg
sub
imul
sub
div
xor
call
fs
pop
imul
jns
xchg
movs
mov
mov
mov
pop
nop
and
neg
stos
mov
fs
dec
jae
nop
add
push
in
mov
(bad)
xor
adc
mov
stos
mov
push
xor
mov
adc
and
mov
mov
retf
(bad)
fild
into
lea
jo
imul
cmp
retf
mov
xchg
mov
(bad)
and
cmp
popf
xchg
cwde
(bad)
add
push
test
(bad)
in
cmp
pop
cmp
arpl
and
repnz
fist
movs
pop
mov
pop
outs
dec
cmc
jno
inc
retf
push
dec
fcomp
fmul
jmp
inc
mov
pop
xchg
rcr
mov
call
outs
push
xchg
xor
int3
lods
frstor
into
dec
call
dec
xor
mov
pop
leave
pop
mov
arpl
scas
adc
mov
xchg
mov
and
push
jge
les
test
out
lods
inc
repz
daa
pop
mov
or
ins
dec
leave
pop
imul
mov
sub
adc
jle
mov
adc
mov
mov
mov
test
sub
arpl
(bad)
sub
mov
xor
mov
push
dec
xor
push
mov
mov
test
sar
ins
into
sub
add
pop
(bad)
xchg
xchg
add
dec
xchg
test
fs
retf
pop
inc
int3
lea
dec
mov
sbb
jo
cld
in
lods
mov
fisttp
xchg
push
ret
out
out
mov
loope
cmp
mul
cmp
cwde
imul
xchg
(bad)
sub
jnp
mov
add
pop
ret
popa
mov
sahf
push
add
icebp
cmp
inc
mov
cmp
out
jnp
adc
mov
out
xor
movs
data16
imul
ror
rol
jno
mov
push
push
dec
in
out
int
call
inc
(bad)
shr
or
fist
daa
fs
arpl
sub
and
out
mov
call
imul
and
into
sahf
popa
sbb
xor
pop
push
ret
xchg
push
ret
(bad)
fdiv
mov
sub
mov
movs
xor
pop
jne
dec
out
ja
sub
lea
imul
bound
mov
out
sbb
sub
cmp
mov
mov
push
jbe
push
fcom
js
aad
fucomp
and
fucomp
xor
fs
(bad)
ror
movs
pop
jae
pop
inc
data16
mov
and
lods
xchg
mov
ss
sbb
dec
sti
mov
cmp
push
cmp
or
call
neg
fs
sub
out
(bad)
pop
jge
lods
js
pop
jns
xchg
in
push
push
sahf
push
outs
mov
test
or
dec
mov
xchg
in
stos
mov
enter
jne
jne
mov
(bad)
rcr
adc
sbb
in
dec
cmp
mov
imul
xchg
xor
xchg
sub
push
ficom
das
shl
pusha
inc
retf
mov
arpl
push
xchg
loopne
sub
movs
pusha
push
sub
repz
mov
cli
xor
cmp
cmp
int3
jle
sub
mov
in
push
in
xor
lods
imul
call
sub
arpl
mov
aad
inc
loope
inc
(bad)
lds
jb
jne
retf
sbb
ret
mov
repnz
pop
mov
jae
mov
int
out
and
call
stc
fadd
pop
mov
mov
fs
jae
mov
mov
jo
jns
pop
(bad)
lods
out
popa
out
inc
cmp
mov
ss
sahf
cmp
mov
mov
lds
fprem
xchg
stos
xchg
stc
mov
adc
add
push
test
xchg
fs
lds
mov
(bad)
lds
sub
xchg
pop
sahf
mov
push
mov
fwait
int3
xchg
lea
pop
jne
add
mov
jns
cdq
mov
rcr
pop
add
mov
shl
dec
loope
jb
ja
and
mov
mov
into
sti
repz
out
xor
sbb
mov
test
cmps
push
inc
outs
cs
mov
adc
ins
hlt
stos
xor
sub
sub
nop
mov
out
ins
mov
pop
ficom
in
push
sbb
mov
or
scas
fld
jb
inc
sar
jb
push
pushf
std
cmp
jnp
sbb
push
or
mov
add
mov
cs
icebp
pop
adc
pop
mov
push
inc
or
add
mov
shl
xchg
fimul
mov
sub
ja
cs
iret
fstp
xchg
add
jmp
and
sub
mov
adc
pushw
test
jmp
(bad)
imul
mov
out
xor
loop
push
ret
addr16
cmp
jne
mov
ret
ret
pop
stos
retf
into
sbb
imul
ror
or
mov
jl
lds
outs
scas
je
repnz
inc
xchg
or
pop
mov
popa
pop
leave
mov
les
inc
jmp
pop
sbb
shr
inc
mov
cmp
push
push
(bad)
xchg
nop
xchg
enter
push
inc
push
xchg
in
jmp
retf
mov
mov
je
mov
sub
sub
mov
ficom
ret
jg
or
fmul
movs
call
stos
push
sub
sbb
imul
ja
inc
int
mov
inc
add
add
add
add
or
add
pop
add
add
add
adc
adc
push
add
inc
push
xchg
mov
and
xor
popa
jno
mov
bound
mov
xor
adc
mov
inc
push
jae
inc
xchg
ret
sar
fiadd
or
add
or
add
out
nop
cmp
mov
cmc
add
push
pop
in
ja
push
out
out
div
sub
imul
cmp
fsub
inc
das
xor
ins
into
sbb
ret
push
mov
mov
xchg
mov
lds
cld
in
mov
enter
xchg
stc
adc
stc
and
push
mov
shr
int
fcomp
(bad)
call
mov
movs
lods
retf
adc
jecxz
repz
adc
fst
mov
mov
popf
loope
sar
fisubr
jbe
jge
lea
sub
fstp
test
pop
stc
sub
push
test
ffree
shl
cwde
and
pop
test
add
call
gs
adc
ja
push
mov
cld
sub
xor
cmp
(bad)
dec
pop
adc
mov
fs
adc
ja
add
lods
cmp
(bad)
icebp
lahf
call
dec
inc
mov
iret
jb
xor
add
push
call
or
loope
dec
ins
jmp
push
and
push
mov
pop
pop
pmaxsw
pusha
push
push
dec
inc
cld
(bad)
mov
out
int
ja
test
push
sti
push
dec
mov
cdq
imul
outs
rcr
pop
shl
jnp
dec
cmp
rol
jle
inc
loope
aas
mov
sub
aad
mov
mov
data16
and
add
cdq
mov
sbb
fistp
aas
(bad)
sub
in
ds
adc
ds
sahf
add
cdq
adc
push
fisubr
xor
mov
movs
(bad)
ins
push
or
stc
sub
mov
aad
loop
aaa
daa
bnd
inc
pop
pop
add
cmps
push
and
adc
loopne
syscall
adc
push
fcomi
push
clc
iret
int
cld
outs
stc
cmps
fdiv
cmp
dec
aam
adc
icebp
dec
(bad)
fs
mov
daa
test
stos
sub
pop
dec
push
jg
mov
test
inc
outs
imul
stos
(bad)
(bad)
leave
jne
icebp
mov
jmp
cmp
cmps
pop
mov
sub
push
fstp
and
pop
xor
into
jmp
cmp
and
fs
add
lock
lods
mov
push
add
sbb
imul
xchg
loop
mov
push
xchg
add
fsub
loop
cs
movs
lock
call
movs
popa
std
into
(bad)
pop
mov
xchg
outs
push
and
mov
rcr
sub
mov
mov
push
or
fmul
into
mov
rcr
imul
cmp
retf
xchg
call
jne
xchg
into
int3
push
shl
pop
jle
test
dec
push
mov
mov
mov
repnz
popa
aas
jb
bound
push
jae
cmp
jae
mov
int
mov
push
xchg
aad
ins
add
cmps
pop
add
mov
aas
lods
ins
cld
inc
jp
bound
scas
add
add
sti
popa
loop
jno
or
push
dec
sahf
mov
sub
adc
dec
nop
je
lock
fst
add
jp
daa
cwde
push
xchg
(bad)
(bad)
cmc
loope
inc
sub
xchg
xor
mov
sub
in
add
ror
or
cmps
cmps
clc
cmps
js
mov
nop
mov
stc
data16
pop
mov
stos
jno
in
mov
rcr
aad
push
inc
repnz
jle
imul
js
leave
or
(bad)
repz
mov
test
push
mov
das
cmp
fwait
or
dec
mov
sbb
cmps
not
popf
pop
mov
test
jbe
add
js
sub
jg
cmp
div
in
int
adc
inc
icebp
ror
adc
push
sahf
shr
push
cld
(bad)
mov
loop
in
scas
jecxz
pop
aad
mov
jo
jmp
pop
push
add
push
jl
pop
retf
(bad)
add
inc
xchg
icebp
push
daa
les
pop
pop
inc
sbb
les
cld
and
push
lods
and
inc
fs
test
test
inc
(bad)
adc
jge
inc
test
imul
ins
js
iret
iret
call
int
iret
imul
in
pop
lods
cmp
fadd
pop
adc
scas
push
in
lea
mov
pmullw
lahf
bound
and
call
mov
add
call
daa
pop
jbe
or
add
adc
mov
xchg
aaa
enter
jnp
pop
sub
sar
mov
popf
mov
sbb
push
inc
repz
sahf
and
fisub
(bad)
stos
sub
mov
(bad)
sbb
sbb
cmp
scas
lahf
xor
and
imul
push
daa
aad
aad
dec
xor
aad
arpl
push
sbb
push
mov
aaa
nop
mov
sbb
pushf
and
pop
ins
leave
(bad)
test
lods
stos
or
das
or
leave
aas
test
xchg
sub
xor
xor
mov
imul
jo
(bad)
dec
pop
xchg
loopne
xchg
out
dec
and
mov
xor
jle
aam
pop
ins
sbb
mov
dec
sbb
(bad)
in
inc
aad
popa
into
popa
into
jmp
mov
div
cmp
stos
push
push
or
in
(bad)
(bad)
leave
jge
(bad)
jge
ss
outs
stc
sub
stc
sub
setb
lock
sub
setb
rol
mov
add
dec
sub
stc
sub
lock
sub
into
in
mov
popa
into
popa
into
jmp
push
ja
out
out
out
mov
mov
fwait
add
loop
push
jge
(bad)
jge
ss
cwde
fistp
mov
cmps
shr
test
mov
ins
mov
mov
xchg
clc
xchg
mov
inc
dec
mov
dec
adc
sahf
sub
fwait
adc
or
into
jb
mov
jnp
imul
push
ja
enter
jg
xchg
aaa
stos
pop
mov
sub
stos
das
stos
clc
cwde
data16
data16
cmp
cli
mov
popf
retf
popf
sar
jg
adc
cmps
jge
call
push
add
xchg
jo
xchg
sahf
arpl
sub
ret
pushf
ret
popf
xlat
repnz
mov
arpl
leave
push
stc
mov
sub
stos
das
stos
clc
fadd
jnp
dec
add
mov
lds
mov
rcr
push
fcomp
sbb
mov
push
hlt
arpl
sar
daa
adc
xor
cmp
(bad)
ja
stc
repz
jae
jae
inc
aam
stc
lods
cmp
bound
inc
mov
push
mov
push
pop
push
icebp
mov
jmp
add
ret
xchg
dec
je
mov
pop
add
mov
test
data16
jecxz
popf
cmps
popa
mov
xchg
hlt
data16
push
pop
mul
push
sub
mov
in
int3
sti
int3
sub
inc
popa
jl
dec
sub
jecxz
or
cs
jbe
imul
xor
fisub
in
int3
cmp
pushf
aad
out
mov
fidivr
lods
cmp
bound
inc
mov
ja
pop
jno
test
scas
loop
cld
fadd
fstp
ret
les
adc
cmps
jo
imul
ins
sbb
jbe
push
push
inc
mov
inc
(bad)
out
inc
arpl
(bad)
in
or
outs
ds
mov
rcr
lea
sbb
sbb
adc
call
arpl
ins
xor
jecxz
lods
les
mov
xchg
pop
cmp
(bad)
es
inc
pop
loop
int
xor
fs
shl
jno
lahf
lahf
xor
fnstsw
into
sti
xor
repnz
sahf
push
(bad)
cli
out
fidiv
pop
(bad)
jmp
jmp
jb
xchg
inc
mov
push
fidiv
cmp
pop
mov
xchg
mov
dec
inc
fwait
hlt
adc
jmp
jbe
inc
pop
lock
push
sbb
adc
dec
cmp
int
inc
leave
sbb
iret
inc
ficomp
xor
fdivr
and
sahf
sub
inc
fist
xchg
lock
(bad)
idiv
(bad)
sbb
test
cmp
into
icebp
int
iret
arpl
leave
push
lods
push
push
jns
into
cmc
xchg
jmp
cdq
mov
jmp
aad
pop
sbb
jne
adc
sbb
add
push
dec
(bad)
shl
hlt
mov
jne
inc
imul
inc
cmp
push
mov
mov
xchg
cdq
test
or
add
ss
mov
call
jmp
adc
or
sbb
arpl
xor
test
add
xchg
dec
push
inc
(bad)
xor
or
lods
sbb
addr16
popa
into
push
ja
enter
(bad)
and
popa
iret
arpl
leave
pop
push
int
mov
pop
out
cmp
sbb
stos
clc
call
sahf
and
add
pushf
in
mov
xchg
pop
lods
and
sahf
out
setb
push
aaa
mov
out
out
dec
cmp
cmp
cmp
iret
loop
(bad)
sbb
xor
scas
call
cmp
sbb
stos
clc
call
mov
mov
cld
stc
lods
cmp
push
into
sti
dec
and
sti
xor
xchg
and
dec
xor
int
push
sbb
stos
das
stos
clc
add
mov
aas
imul
push
repz
pop
push
adc
js
or
cmp
test
sahf
adc
js
jg
jg
out
out
mov
mov
sub
push
daa
aad
aad
inc
jmp
fnstenv
(bad)
cmc
mov
fnsave
push
bound
ficom
jl
inc
mov
adc
js
adc
cmc
add
lahf
adc
dec
mov
out
mov
dec
mov
push
bound
cmc
adc
add
mov
add
fisub
mov
test
out
mov
add
push
jbe
scas
cmp
(bad)
ficomp
jno
(bad)
out
sahf
(bad)
cs
cmp
jne
pop
fnstenv
mov
outs
int
pop
push
pop
(bad)
cmc
mov
sub
push
dec
mov
adc
sub
push
pushf
adc
sub
push
fbstp
stos
cmp
test
fisub
mov
pminub
stc
dec
adc
popf
movs
xchg
inc
fidiv
std
stos
cmp
mov
test
loop
pop
pop
dec
stos
sub
mov
mov
cmp
mov
xor
jp
jecxz
call
jl
sub
gs
sbb
mov
mov
mov
mov
xchg
or
jle
xchg
inc
pushf
scas
cs
scas
es
(bad)
fidiv
adc
sub
mov
movs
sti
push
push
std
stos
sub
pop
add
mov
fadd
repnz
sahf
jns
imul
push
pop
push
icebp
cs
sbb
mov
ret
sbb
repz
loopne
xchg
xchg
sub
stos
sub
inc
inc
call
ficomp
jmp
sub
sub
pop
fs
scas
push
mov
ins
mov
imul
(bad)
sbb
push
iret
jecxz
jo
sahf
jns
cmp
sub
fwait
push
daa
aad
aad
dec
pusha
cmp
pusha
pop
aad
mov
add
adc
inc
adc
inc
dec
sub
inc
adc
inc
adc
rcl
push
retf
ficomp
xchg
push
adc
and
loopne
dec
mov
scas
jb
ins
mov
mov
ins
push
fstp
mov
jo
mov
mov
jmp
retf
in
mov
add
jmp
inc
out
sub
mov
sub
imul
out
mov
adc
inc
rcr
je
pop
pop
add
test
icebp
mov
(bad)
out
pop
lods
push
mov
das
stos
clc
xchg
sbb
mov
into
mov
std
stos
sub
test
fisub
aas
push
adc
xchg
mov
push
loop
xlat
jb
je
mov
xor
aam
int
xor
and
push
sahf
lods
mov
xbegin
inc
add
in
(bad)
lock
outs
inc
pop
xlat
inc
(bad)
daa
xchg
sbb
add
sub
mov
jecxz
in
adc
ret
out
adc
aad
add
xor
bound
xchg
pop
sbb
sub
imul
jmp
jne
rol
int
mov
cmp
cmp
cmp
push
jg
mov
mov
(bad)
sub
mov
(bad)
cli
mov
popa
mov
imul
sbb
sahf
imul
push
rcl
or
push
dec
aas
mov
(bad)
out
bound
or
inc
(bad)
pop
(bad)
add
addr16
ficomp
fsubp
sub
pop
push
lahf
sar
push
lea
lods
imul
inc
push
aaa
sbb
pop
dec
pop
add
loopne
test
lods
xor
dec
int3
sub
or
push
dec
inc
inc
aam
aad
pop
(bad)
enter
adc
add
inc
ins
adc
xor
inc
les
sbb
cmc
idiv
xlat
cld
aas
call
pop
out
out
add
cmps
sar
and
mov
xlat
mov
ss
stos
das
stos
clc
call
(bad)
repz
rcl
inc
int
cmps
rcl
cli
pop
outs
std
dec
loopne
aad
popf
jbe
sbb
xor
cmp
inc
pop
fsub
icebp
adc
jl
or
shl
sahf
xor
push
and
cwde
xor
xchg
mov
mov
in
mov
mov
add
xor
sbb
out
jne
ss
mov
xchg
test
loopne
mov
cmc
or
cmp
mov
adc
ds
scas
loop
js
fwait
add
mov
std
sub
mov
rcl
and
fcmovb
inc
xor
and
and
and
and
adc
pop
ret
das
int
dec
dec
dec
dec
dec
dec
dec
in
push
jge
sub
std
mov
add
mov
add
xchg
xchg
mov
dec
inc
push
popa
test
mov
call
or
popf
sub
mov
push
push
push
loop
dec
dec
dec
dec
dec
in
and
lods
out
push
ror
movs
pusha
cmp
(bad)
out
push
int
fidiv
xor
xchg
js
adc
enter
cmc
inc
cmc
jg
jmp
js
shr
sub
fld
cmp
inc
jmp
adc
enter
push
pop
and
popf
adc
leave
xchg
push
(bad)
in
pop
rcr
dec
fcmovbe
jbe
xchg
sar
inc
add
push
mov
std
stos
daa
fs
pop
sub
ins
mov
rol
xor
shl
cmp
cmp
xor
mov
stc
sub
jo
movs
sub
dec
bound
sub
mov
add
cmp
sbb
add
xchg
xchg
mov
aad
arpl
mov
xor
jae
cmp
dec
cld
cmp
cs
(bad)
test
stos
out
out
mov
sub
or
ins
sbb
push
jb
sysret
xchg
or
push
adc
out
cld
shl
mov
sahf
and
and
adc
in
cld
cmp
dec
xor
imul
add
add
jle
mov
rcl
(bad)
imul
div
fist
lods
in
test
sbb
in
imul
rcr
test
dec
inc
fs
cs
xor
movs
rcr
xchg
xchg
xchg
xchg
xchg
mov
sbb
mov
and
dec
dec
pop
sub
daa
push
mov
mov
fist
add
push
cwde
aaa
dec
imul
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
adc
loope
or
outs
cmc
jns
fwait
cmp
push
xchg
and
jmp
push
jg
mov
cmp
and
mov
mov
(bad)
adc
lods
or
cmp
dec
xor
call
gs
inc
jle
pop
inc
mov
cmc
jg
sti
arpl
fs
jae
out
push
add
les
or
xor
sbb
add
xor
ret
mov
jbe
sub
ja
xchg
xor
xor
in
pop
xor
or
xor
outs
cdq
cmp
push
int
ins
jae
or
sbb
mov
pop
add
popa
lahf
pop
pop
loop
push
cs
xchg
or
jge
aad
ror
jne
and
rcr
xchg
xor
push
dec
popf
mov
sahf
into
xor
int
push
mov
jae
in
xor
and
push
mov
sar
add
and
sub
dec
or
and
call
xor
add
sub
ja
arpl
xchg
je
add
push
cmp
and
and
data16
mov
pusha
cmp
jmp
scas
xchg
mov
stos
adc
in
mov
pop
push
out
sbb
leave
stos
repnz
pop
fdivrp
lea
inc
test
in
hlt
mov
(bad)
mov
push
enter
shl
dec
enter
xor
mov
jg
mov
mov
outs
iret
sub
xor
mov
jg
fnstcw
cwde
dec
push
and
std
dec
pop
xchg
jmp
aaa
sbb
push
jmp
fwait
push
inc
sub
push
iret
mov
ins
push
push
fidiv
and
xlat
xchg
ret
leave
jp
and
xchg
pop
sub
cmp
push
loope
xchg
neg
shr
daa
adc
push
push
push
mov
sbb
ficom
cld
dec
and
cmps
mov
pop
or
sub
adc
add
pop
sub
push
mov
jns
pop
dec
dec
cmp
or
push
xor
loope
ficom
mov
adc
dec
es
std
fwait
dec
loop
mov
inc
shl
sbb
je
adc
jne
add
add
into
xchg
imul
out
fidiv
pop
lods
inc
shl
mov
adc
cmps
enter
pop
mov
stc
or
mov
out
in
cdq
cmp
movs
fidiv
mov
add
jnp
(bad)
enter
into
int3
push
push
jne
mov
add
mov
add
xor
gs
cmc
mov
ins
repz
and
inc
pop
xor
inc
fs
jmp
popf
sbb
into
bound
pop
test
fsub
ss
mov
nop
mov
pop
pop
call
(bad)
(bad)
les
dec
jns
ds
ss
xchg
mov
in
ret
push
xchg
jne
xchg
gs
lods
popf
mov
rcr
daa
mov
cmp
fwait
cmp
je
xchg
sub
mov
sti
push
in
sbb
xchg
clc
sub
loopne
inc
hlt
into
jae
data16
mov
rcr
sar
pop
push
test
loope
ins
cmps
inc
adc
mov
or
mov
daa
dec
daa
mov
ins
jae
es
fsubr
sub
mov
sbb
cmp
arpl
dec
push
and
adc
mov
(bad)
sahf
or
leave
mov
test
cmp
fst
push
fcomip
add
ja
push
mov
cmp
addr16
ret
in
pop
popf
stos
or
pop
dec
jp
mov
mov
cmp
dec
out
mov
pop
add
and
mov
pop
add
add
sti
or
(bad)
movs
psadbw
loop
jbe
prefetch
retf
js
inc
mov
ret
pop
cmp
push
bound
inc
retf
sub
ins
sbb
xor
xchg
xor
mov
and
aad
mov
fwait
pushf
shl
int3
imul
push
aad
into
pop
dec
dec
inc
mov
and
jb
inc
add
test
cmps
cmp
mov
mov
pop
ror
cmp
imul
inc
jmp
adc
or
mov
sbb
sbb
in
std
call
jge
out
dec
or
in
or
movs
scas
aaa
adc
xor
mov
aam
nop
lods
push
inc
jbe
push
sub
(bad)
sar
ins
rcl
mov
push
movs
xlat
cmp
push
data16
xor
iret
sbb
adc
jno
jo
mov
inc
mov
cmps
int
js
outs
pop
jns
loopne
es
call
call
push
sub
sub
popf
or
sahf
xchg
mov
sbb
mov
sar
aam
add
ds
addr16
mov
jne
fwait
adc
add
out
retf
ins
ss
loopne
movs
sar
jo
push
push
adc
repnz
push
repnz
fwait
pop
int
push
add
pop
sub
or
xor
retf
sub
sub
idiv
inc
inc
retf
mov
jle
movs
(bad)
popa
scas
pop
enter
sbb
neg
pop
lea
(bad)
sub
dec
adc
lahf
jb
dec
sub
loope
dec
inc
xchg
ror
fimul
jp
mov
mov
xor
add
dec
sbb
ins
xor
mov
idiv
push
in
push
lods
popf
dec
jmp
add
lea
ins
and
sti
or
sub
mov
imul
test
ret
jmp
shr
movs
ds
adc
cmp
pop
push
inc
jns
ds
push
jb
fwait
xchg
dec
in
mov
int3
xor
cmp
sub
dec
mov
jns
add
xchg
inc
dec
add
sub
mov
sub
dec
xchg
in
adc
adc
stc
xor
imul
ja
sbb
cmp
(bad)
leave
call
ret
and
pop
mov
xlat
je
sub
cmp
mov
out
mov
or
outs
pop
dec
sub
mov
div
xor
push
(bad)
cld
push
stc
sub
sub
inc
cmp
sahf
gs
push
dec
xchg
int3
jmp
mov
aad
and
fild
cmp
jo
repz
fcomp
movs
sub
cmc
cld
mov
push
add
movs
and
jmp
cmp
pop
xor
sub
mov
mov
lock
fs
stos
mov
lods
pushf
dec
push
dec
leave
call
push
sub
outs
mov
push
pop
fwait
popa
int
dec
les
or
cmp
test
xor
add
add
call
dec
icebp
aas
xor
xchg
jns
lods
pop
dec
xchg
mov
adc
xchg
inc
push
addr16
xchg
xchg
inc
clc
add
mov
mov
or
aas
test
pop
ret
or
or
test
lods
mov
ret
jnp
mov
dec
imul
ss
aad
mov
pop
dec
add
sub
in
add
or
adc
or
lock
sub
mov
add
jl
ins
mov
ret
in
jae
ret
xchg
out
inc
inc
rcr
ins
and
or
inc
pop
enter
xchg
and
ins
mov
pop
rcr
dec
or
sub
and
inc
jns
retf
ss
shr
jo
bound
nop
imul
loope
cdq
mov
test
fwait
xor
stos
push
das
fidivr
xchg
rcr
adc
pop
jns
gs
jp
dec
jmp
dec
xor
pop
loope
pop
stos
hlt
fimul
cmp
(bad)
cmps
push
mov
retf
or
and
xchg
retf
dec
and
call
mov
mov
fwait
and
inc
or
jno
in
cs
cmp
push
in
or
mov
pop
fisubr
and
and
movs
inc
bound
push
and
stos
into
aad
push
mov
fiadd
aam
aam
es
adc
push
sbb
ins
push
dec
push
aam
aam
adc
ja
add
adc
pop
add
icebp
adc
push
dec
(bad)
fbstp
jnp
aas
push
test
ds
jl
pop
std
pushf
cmp
les
sub
in
in
pop
and
mov
inc
mov
and
fbstp
push
das
pop
arpl
int
mov
mov
iret
int
idiv
push
push
inc
and
mov
cwde
leave
aam
das
hlt
cmps
retf
int
adc
es
(bad)
or
shl
mov
adc
push
retf
push
not
idiv
adc
(bad)
outs
sub
mov
xor
popf
aaa
mov
mov
je
sbb
imul
js
sbb
pusha
mov
add
xor
push
cmps
adc
leave
xchg
retf
inc
fs
xchg
daa
lds
xchg
mov
out
dec
outs
fidiv
inc
mov
or
cmps
int3
sbb
bound
adc
adc
(bad)
in
dec
mov
dec
xchg
and
jb
mov
and
movs
loope
int3
(bad)
cmp
mov
push
addr16
push
or
mov
out
nop
stos
mov
jmp
cmc
jnp
push
dec
test
cmps
dec
fist
xor
xor
dec
adc
out
push
add
ss
adc
shl
adc
fnstcw
lea
call
cmp
adc
jnp
pop
std
pop
adc
jne
jno
mov
dec
and
push
outs
leave
or
mov
clc
inc
pop
add
mov
jecxz
retf
pop
mov
je
and
test
je
sti
fisubr
sbb
fcomp
cld
dec
es
mov
pop
sbb
and
pop
mov
inc
mov
sahf
lds
shr
pop
adc
bound
xor
push
(bad)
stos
shr
es
inc
cdq
jmp
lds
loope
jp
out
push
repz
dec
jl
dec
inc
scas
xor
cmp
sbb
dec
mov
jmp
and
and
lods
std
fwait
(bad)
mov
add
xor
xchg
dec
shl
adc
in
shl
push
jno
scas
jmp
cmps
imul
cmp
inc
mov
dec
sub
(bad)
rcl
inc
cmp
test
xchg
mov
(bad)
test
jl
mov
in
movs
dec
push
adc
int
xor
lds
(bad)
leave
out
inc
sahf
jbe
push
shl
pop
xor
(bad)
into
(bad)
mov
mov
das
jae
or
mov
inc
retf
pop
and
dec
mov
fist
and
lock
mov
or
pop
retf
inc
dec
je
inc
cli
rcl
inc
test
in
cmp
fs
ds
lds
and
stos
pop
jl
mov
call
cdq
cmp
cmps
out
stos
iret
bound
ins
int
sub
test
push
xor
sbb
es
movs
and
mov
mov
mov
xor
jmp
in
sbb
push
push
in
lods
cmp
pop
not
dec
mov
jae
std
inc
adc
fld
sub
and
fdiv
int
mov
cmp
mov
(bad)
lods
inc
dec
and
dec
cld
int3
stc
scas
inc
inc
jl
or
xchg
fiadd
mov
or
lahf
xor
leave
dec
dec
outs
sub
xchg
mov
clc
cdq
(bad)
in
xchg
das
jns
out
pop
cmp
xor
ror
and
add
fs
jmp
stos
jno
lds
popa
ret
gs
sti
add
inc
dec
push
movs
mov
add
gs
cdq
sub
vpmacssdql
sub
xchg
inc
adc
ret
mov
int
mov
dec
mul
test
fcom
cwde
imul
rol
xor
cmps
sub
(bad)
(bad)
mov
sbb
adc
adc
test
sub
xor
push
daa
unpcklps
arpl
xchg
add
pop
add
inc
dec
or
mov
leave
pop
pop
xor
mul
xor
mov
dec
dec
ret
mov
(bad)
dec
mov
xchg
adc
xlat
stos
add
push
push
or
fs
daa
(bad)
in
enter
aas
arpl
push
cmc
xchg
xchg
inc
aam
aam
aam
aam
mov
mov
out
jb
xchg
xchg
sbb
out
mov
test
sub
and
or
and
mov
dec
or
adc
xchg
mov
xor
mov
sbb
dec
cdq
inc
jnp
cdq
daa
cmp
nop
je
pusha
daa
pop
xchg
es
dec
pop
bound
fs
and
nop
add
mov
inc
dec
retf
test
cmps
sbb
push
add
push
bound
pop
pop
retf
inc
ss
out
add
mov
jo
xchg
cwde
(bad)
(bad)
inc
sete
jo
push
push
call
dec
jp
iret
lods
addr16
mov
adc
cmp
call
mov
out
popf
fwait
inc
dec
jp
adc
loope
leave
sar
xor
aam
mov
pop
inc
das
mov
das
mov
mov
sbb
xchg
xor
js
and
repz
add
inc
xchg
ret
iret
clc
lahf
xchg
xchg
add
lods
pop
icebp
call
es
ds
sub
push
ss
push
mov
aaa
and
xor
jg
jecxz
(bad)
fwait
adc
and
mov
(bad)
hlt
pushf
mov
sbb
inc
int3
call
icebp
pop
out
sub
ds
xor
mov
ror
cld
adc
das
shl
push
in
dec
fist
retf
js
pop
stos
sbb
and
aaa
mov
pushf
ror
popf
pop
cmp
push
mov
ret
cmp
pusha
fcomp
mov
in
fnstsw
ins
mov
daa
cmp
mov
inc
outs
(bad)
repnz
sub
xor
xchg
xchg
jmp
je
lahf
sub
dec
jo
dec
jo
cmc
xor
mov
jno
out
fcom
mov
mov
pop
and
add
test
inc
dec
std
mov
and
cmp
test
leave
cmps
sub
(bad)
leave
cld
es
jmp
icebp
push
fcomp
push
push
and
xchg
dec
jae
push
mov
rcl
loopne
nop
pop
pop
jb
mov
dec
cmovle
mov
scas
imul
out
inc
adc
xor
ins
adc
push
and
cwde
jl
dec
jb
push
iret
and
shl
out
push
mov
repnz
pusha
lahf
(bad)
aam
jbe
add
out
cdq
jmp
aad
mov
xlat
mov
call
out
mov
or
(bad)
fcom
xchg
xchg
inc
nop
xchg
cwde
imul
add
scas
lahf
xchg
je
or
cmps
gs
push
and
inc
jns
dec
icebp
ficomp
cli
icebp
or
pop
xchg
mov
sbb
or
call
or
into
pop
stos
scas
jb
outs
sub
popf
inc
test
inc
in
push
fiadd
cmps
mov
add
fwait
mov
mov
jmp
fsub
pop
cmp
(bad)
cld
add
inc
das
or
add
mov
mov
into
mov
(bad)
xchg
push
(bad)
adc
inc
add
cs
mov
mov
cmp
iret
xchg
dec
xchg
dec
jo
sub
dec
es
jle
retf
jb
popa
or
xor
inc
movaps
adc
or
mov
xchg
retf
cmp
adc
dec
fidiv
call
test
sub
(bad)
loopne
or
jb
jmp
add
xchg
enter
add
sti
push
inc
xchg
push
pop
sbb
push
pop
push
inc
push
inc
push
pop
add
inc
push
and
push
nop
loopne
mov
sub
retf
jp
fsub
mov
xchg
ficom
mov
aam
pop
jecxz
rcr
xor
popf
icebp
pop
(bad)
in
push
in
cmp
push
nop
pop
jnp
add
(bad)
out
std
jae
imul
ja
jmp
ins
iret
jnp
jno
push
dec
lds
rol
mov
add
adc
daa
int
jmp
out
in
stos
leave
retf
fnstcw
sbb
sub
fistp
ds
pusha
jmp
add
jbe
gs
and
hlt
xchg
push
in
test
fdiv
inc
test
sub
pop
sti
xchg
sbb
in
xchg
add
add
xor
mov
repz
outs
dec
or
adc
movs
ss
push
mov
shl
xchg
mov
out
mov
sbb
xchg
std
test
aam
xchg
lds
ror
in
aaa
test
sub
inc
push
aad
mov
data16
sub
push
(bad)
mov
xor
test
mov
mov
push
sbb
adc
pop
jp
xchg
add
ret
cmp
js
rcr
jae
aaa
outs
out
adc
and
iret
dec
movs
jl
dec
mov
sbb
daa
mov
inc
imul
xchg
add
mov
mov
mov
mov
sub
dec
(bad)
inc
es
mov
pop
fnstsw
xchg
add
sbb
fwait
mov
or
cdq
sti
cmp
ja
cmp
add
mov
fld
inc
adc
ds
xchg
xchg
js
inc
aam
adc
xchg
(bad)
dec
(bad)
fsub
pop
add
xor
inc
into
add
xor
cmp
aam
sub
loopne
imul
dec
ret
inc
cmc
das
dec
xor
data16
cli
xchg
movs
pop
aas
std
pop
aam
xor
inc
cmc
das
dec
cmp
setp
mov
dec
and
jo
(bad)
pop
cwde
pop
sar
jmp
pop
cdq
xchg
mov
pop
in
add
iret
stc
aas
aam
xor
dec
cmc
scas
dec
pop
sti
pop
jmp
xlat
cmps
inc
leave
(bad)
movs
jmp
jp
cld
lahf
jmp
inc
push
retf
sbb
stos
push
jbe
mov
lods
lods
mov
sub
sub
out
fs
jl
add
repnz
fdivr
pop
xchg
hlt
mov
add
pop
retf
xchg
or
sub
hlt
mov
push
xchg
lahf
push
aam
lods
mov
aaa
inc
jb
fstp
xchg
retf
mov
push
sub
jp
push
mov
xor
test
sub
mov
jnp
int
jl
inc
mov
imul
push
out
mov
mov
int3
les
pushf
ss
andnps
mov
dec
lahf
push
sbb
lea
cld
(bad)
push
sbb
fisub
jo
pushf
pushf
mov
mov
mov
mov
test
stc
sbb
(bad)
jb
inc
shl
jg
inc
xchg
mov
sbb
add
das
sti
push
pop
sbb
ret
or
inc
xchg
retf
(bad)
pop
inc
jmp
dec
cmp
ffreep
ja
gs
clc
outs
stc
sub
inc
or
or
pop
push
pop
push
push
push
push
push
loopne
push
ss
lods
cmps
daa
lock
inc
add
mov
or
lods
add
mov
and
add
iret
mov
sub
mov
clc
jo
or
dec
in
xor
leave
pop
xor
mov
dec
mov
sbb
sbb
fisub
je
rcr
fidiv
pushf
mov
pop
xchg
aad
scas
fs
mov
mov
sahf
jnp
xor
int
test
jae
aaa
sbb
jecxz
mov
or
mov
imul
mov
mov
sti
xchg
test
mov
sbb
rcr
in
ja
and
dec
in
mov
adc
xor
int
dec
sub
mov
fmulp
int
nop
lahf
neg
sub
xlat
sub
push
mov
pop
dec
cmp
and
xchg
ret
pop
dec
and
daa
inc
xchg
(bad)
xchg
cld
push
pop
pop
push
out
xchg
ret
sahf
add
gs
jae
pop
add
loope
pop
pop
jle
xchg
push
add
xchg
push
add
mov
pop
mov
add
jno
sub
stos
out
mov
sub
cmpps
xchg
dec
mov
pop
and
popf
test
xchg
cmps
fiadd
into
inc
enter
mov
sub
sub
jp
loope
arpl
jle
imul
mov
pop
retf
iret
cmc
xchg
lahf
push
imul
ja
jmp
jge
dec
inc
fldcw
into
push
or
cmps
pop
ins
sub
mov
pop
dec
cwde
dec
jno
xor
das
push
push
cmps
cwde
cmp
cmp
addr16
aad
inc
sahf
mov
sub
push
push
pop
push
loopne
xchg
pop
popa
enter
push
jp
sub
sbb
das
add
sbb
mov
or
and
jo
repz
fist
and
xor
dec
test
ret
xor
fdiv
sub
or
or
sti
int3
stc
adc
ss
add
cmps
add
jb
sbb
adc
or
lahf
pop
inc
mov
adc
sqrtps
adc
inc
sub
mov
adc
inc
or
dec
mov
out
mov
nop
es
adc
mov
pop
(bad)
rcr
in
sbb
push
and
cmps
test
sub
das
fldcw
leave
pop
pop
mov
pop
jg
ret
imul
inc
enter
sub
rcr
adc
loop
(bad)
jmp
scas
data16
scas
in
fdiv
lods
lock
sbb
cmps
test
xchg
les
dec
mov
push
loopne
push
in
mov
(bad)
in
dec
ret
mov
test
pop
adc
rol
icebp
fisub
leave
mov
ja
xlat
push
ins
in
jp
pop
xlat
xchg
js
(bad)
push
xchg
xchg
cli
inc
push
in
(bad)
js
ins
aam
dec
mov
xor
jbe
popf
movs
xchg
(bad)
setb
ja
cmp
inc
jnp
jno
sub
je
pop
and
adc
in
mov
jns
aas
dec
add
sbb
adc
hlt
leave
mov
aam
std
retf
(bad)
mov
cmp
add
dec
ror
and
or
or
fidivr
test
cmc
sub
lea
aad
mov
and
mov
xchg
push
xchg
add
cdq
sahf
and
mov
mov
(bad)
int
pop
clc
push
mov
dec
xchg
push
cmp
mov
mov
xlat
and
jns
mov
and
iret
xchg
lds
mov
cmp
(bad)
arpl
popf
push
push
adc
pop
mov
popf
mov
imul
int3
out
jae
mov
daa
aas
sti
dec
dec
ins
mov
xchg
inc
cmps
sub
adc
xor
loop
sub
cdq
or
mov
daa
inc
clc
mov
or
adc
xchg
or
jl
rol
pop
retf
xchg
popf
adc
inc
cdq
jge
jb
dec
mov
(bad)
leave
inc
mov
setb
es
aam
shl
mov
repz
pop
inc
mov
dec
jmp
cli
pop
sbb
or
cmp
push
(bad)
xchg
mov
add
sbb
je
cmc
dec
cmp
sbb
mov
jle
rcr
ja
stos
mov
mov
inc
xchg
cmp
jnp
movs
fwait
pop
inc
movs
push
jecxz
pop
lahf
sbb
fstp
test
mov
push
scas
dec
jmp
dec
ss
cmp
mov
cli
xor
mov
not
xchg
lds
and
adc
push
daa
clc
and
add
xlat
pop
xor
stos
inc
into
fld
jns
popf
mov
mov
cmps
mov
(bad)
leave
jnp
mov
in
rcr
xchg
mov
jnp
inc
jb
imul
cdq
ss
stos
(bad)
push
retf
jg
inc
mov
xor
mov
cmc
cmc
mov
mov
or
mov
push
mov
out
sbb
jl
jmp
icebp
push
and
mov
lds
mov
cmps
xchg
xor
mov
iret
jne
movs
mov
dec
mov
sub
mul
sbb
xchg
add
test
inc
and
iret
jmp
push
mov
scas
jae
pop
js
clc
lods
bound
aaa
xchg
aaa
mov
loope
out
loop
xchg
sub
pusha
lds
scas
dec
jmp
push
jns
lods
jae
xchg
jecxz
int
aaa
outs
out
outs
loope
inc
or
xchg
pop
and
xchg
push
mov
sub
lods
in
stos
sti
jl
sub
or
or
ror
mov
cwde
pop
enter
adc
inc
neg
mov
faddp
das
loop
shl
in
ins
xor
mov
call
in
movs
dec
push
pop
pop
aaa
lods
push
pop
(bad)
pop
movs
jp
aas
nop
rcr
push
push
mov
sbb
jae
jns
add
inc
push
push
cmp
cmp
lods
(bad)
test
adc
test
test
mov
lods
inc
les
xchg
sbb
out
mov
and
adc
or
sbb
loop
movs
repnz
fs
cmp
ins
addr16
leave
push
mov
sub
dec
xchg
adc
push
clc
addr16
das
pop
sti
loop
adc
jo
fstp
std
mov
aaa
push
(bad)
enter
and
neg
push
xchg
sbb
pop
clc
push
mov
sbb
jb
mov
xchg
test
mov
xchg
jae
add
mov
push
addr16
inc
sub
cmp
and
mov
in
stos
xor
cmp
in
stos
xor
jmp
scas
add
sbb
lea
pop
xchg
pop
or
mov
inc
mov
jl
ins
fwait
mov
add
mov
push
pop
mov
je
pop
aad
loop
pop
push
add
test
test
sbb
je
mov
xchg
daa
retf
push
test
popa
pop
sub
sub
add
leave
inc
jl
dec
mov
inc
push
and
in
push
popa
fs
dec
adc
(bad)
enter
fwait
cdq
vpcomd
sbb
shr
loopne
ins
xchg
mov
call
adc
lods
adc
call
xor
popf
jmp
mov
sahf
out
or
cmps
add
adc
jmp
pop
xor
mov
mov
cld
aam
cmp
inc
fidiv
adc
call
fnsave
sub
xchg
and
push
into
in
ret
xchg
inc
xor
dec
push
push
jecxz
pop
pop
mov
pop
int
xor
test
xchg
cmp
pop
outs
xchg
mov
push
cdq
xor
outs
push
lahf
pop
xchg
dec
mov
int
or
lods
mov
ficomp
xor
jle
out
out
pop
popa
add
mov
(bad)
or
out
fdiv
lods
lds
mov
loop
mov
and
push
push
or
push
push
or
inc
add
adc
add
cdq
dec
push
ret
enter
test
dec
sbb
out
jne
jno
push
clc
adc
aaa
mov
test
push
adc
mov
pop
jne
fst
mov
movs
dec
test
xchg
or
fld
adc
lds
pop
mov
call
in
das
es
cmps
hlt
rol
pusha
int3
fcom
dec
jae
aam
jnp
ret
add
cdq
or
mov
outs
xchg
sti
dec
daa
in
imul
dec
cwde
push
(bad)
js
xchg
fucomi
sbb
pop
mov
or
or
xchg
push
mov
inc
stos
jp
ins
popf
adc
pop
cdq
dec
mov
sbb
jge
jle
cmp
mov
out
xor
call
mov
jno
stc
test
pop
cmp
mov
mov
mov
mov
pop
aam
movs
stos
adc
or
cmc
and
dec
loopne
sbb
ret
dec
mov
scas
inc
jp
sbb
repz
and
and
mov
out
out
pop
mov
scas
push
ins
fcom
mov
in
push
xlat
and
sbb
data16
xchg
sbb
call
jl
stc
es
sbb
jle
es
sub
adc
mov
dec
imul
call
mov
mov
call
sbb
cmp
fisttp
push
sub
mov
mov
repnz
test
inc
addr16
rcl
lea
sub
mov
xchg
lods
hlt
loope
shl
inc
and
not
rcr
and
push
push
push
sub
inc
mov
ins
or
outs
cmp
cmp
cmc
sbb
out
ficom
jae
ret
shl
xchg
pop
lods
mov
push
fimul
scas
dec
sub
stc
push
bound
mov
imul
xchg
ror
loope
mov
dec
cld
add
addr16
cli
icebp
cmps
lock
popa
sub
js
pop
inc
cmp
dec
stc
mov
popf
mov
jbe
or
add
(bad)
adc
dec
arpl
inc
out
add
icebp
or
shr
or
adc
in
push
popf
mov
jne
nop
mov
test
inc
loopne
jno
mov
jns
adc
xchg
stos
adc
mov
mov
xchg
mov
(bad)
cmp
(bad)
js
mov
scas
lock
ja
mov
mov
sub
mov
fsub
loopne
pushaw
pop
daa
sub
outs
lock
lahf
loopne
aas
rol
imul
adc
or
push
inc
out
test
es
inc
cdq
sub
cmp
dec
enter
xor
cmp
shl
xor
mov
add
push
mov
adc
call
adc
xchg
xor
jle
fnstsw
fstp
fcom
or
dec
mov
push
jae
popf
mov
cmp
clc
pusha
dec
mov
push
test
cmp
ja
fdivr
js
jo
jne
inc
add
les
jl
mov
(bad)
mov
cmp
aam
aaa
in
mov
jecxz
jb
mov
in
call
popa
pop
daa
das
in
out
out
jo
push
pusha
cmp
pushf
cmp
inc
or
inc
aas
in
pop
add
xor
(bad)
dec
or
in
cs
sub
or
in
movs
sar
stc
dec
sbb
xlat
and
pop
adc
xor
or
xor
aad
or
add
jmp
ret
or
xchg
and
mov
retf
int3
and
or
jg
stos
cdq
mov
(bad)
xchg
mov
stos
pop
out
pop
test
adc
ja
fcomp
mov
dec
pop
add
pusha
dec
js
jae
inc
xor
aad
cmp
cmp
daa
daa
daa
daa
cmps
daa
cmps
cmps
daa
daa
test
mov
ins
push
jbe
adc
push
or
je
sub
test
adc
icebp
pop
call
push
lods
push
dec
in
push
test
sub
(bad)
mov
or
push
sbb
mov
repnz
test
nop
imul
and
push
xor
and
mov
adc
sbb
ins
fsub
mov
test
xchg
ds
clc
and
mov
pop
sti
or
inc
call
cs
mov
cmp
mov
lea
mov
(bad)
enter
test
fs
fwait
mov
xchg
fdivr
pop
jle
fs
out
jae
mov
les
mov
push
fst
jbe
mov
xchg
mov
lahf
jae
mov
mul
leave
shl
push
mov
inc
and
pusha
push
push
ret
mul
ins
pop
pop
imul
pop
sar
lock
sub
cmp
cdq
or
mov
out
dec
pushf
fnsave
fcom
sub
mov
dec
dec
icebp
dec
dec
push
adc
jmp
pop
ds
test
addr16
mov
cmp
in
add
das
push
lock
or
sub
in
pop
and
mov
mov
sbb
push
enter
pop
aam
or
xor
push
stos
cld
lds
inc
adc
inc
adc
and
mov
xchg
xchg
mov
push
push
mov
mov
pop
inc
or
rcr
or
inc
and
xor
mov
sub
(bad)
xchg
mov
add
ins
pusha
stc
sub
mov
lds
aam
xchg
xor
mov
fwait
je
ret
and
dec
xor
mov
sbb
sbb
loope
outs
push
push
(bad)
sbb
ins
add
cs
fcomp
je
stos
test
dec
push
cmp
and
add
fs
dec
retf
and
outs
leave
stos
adc
in
aaa
or
jne
sub
mov
push
imul
int
mov
jns
cmp
enter
or
clc
fisub
(bad)
sbb
and
or
xchg
sbb
lods
push
add
push
les
les
mov
cmc
and
inc
mov
mov
mov
xor
xchg
cmp
add
or
sub
xchg
call
inc
cmp
cmp
pop
add
dec
mov
es
xor
push
push
inc
mov
xchg
cli
cmps
movs
sbb
lds
dec
dec
mov
in
(bad)
adc
cmp
pushf
mov
dec
call
in
outs
jecxz
fisubr
jns
lahf
or
xchg
cmp
out
loope
loope
dec
daa
outs
pop
mov
icebp
cwde
push
or
repnz
pop
fsubr
pop
adc
jl
xchg
and
(bad)
mov
leave
sub
xchg
xor
xor
inc
sbb
loope
add
inc
std
mov
mov
mov
adc
inc
js
nop
sbb
dec
xor
cdq
fisub
jmp
add
into
push
inc
movs
daa
jle
clc
mov
jmp
fisubr
inc
fimul
mov
test
inc
int3
ja
test
adc
nop
xor
in
add
dec
xor
or
jae
xor
cmp
xchg
sbb
push
ja
call
mov
push
xchg
out
sub
and
or
xchg
jbe
or
add
xchg
push
ins
or
fwait
jb
cwde
loope
mov
cmp
mov
mov
fcmovbe
mov
stc
das
pop
mov
inc
imul
adc
push
les
bound
and
fistp
iret
jae
mov
ret
cmp
iret
movs
ret
dec
dec
dec
sbb
adc
sub
sub
adc
sub
dec
dec
or
addr16
dec
cmc
or
pop
test
sub
add
add
add
add
add
add
add
add
add
and
inc
adc
jno
xchg
mov
shl
xor
fiadd
or
add
add
adc
add
jo
jecxz
dec
mov
mov
stc
pop
in
clc
loop
ret
outs
pop
mov
jb
retf
xchg
cs
mov
sub
cdq
ds
or
mov
add
retf
pop
mov
ret
push
push
xchg
repnz
lea
cmp
mov
call
adc
and
add
std
sbb
ficomp
data16
inc
cwde
dec
dec
mov
lahf
push
stc
or
push
js
mov
push
cmps
lahf
sub
add
test
in
pop
sbb
or
inc
nop
pop
mov
sub
or
xchg
aaa
test
jl
mov
xchg
sub
adc
dec
xchg
push
cmp
sahf
adc
test
xchg
das
adc
mov
iret
or
lods
shl
push
sub
cli
aas
fsubr
(bad)
xchg
sbb
test
xor
ds
cmps
adc
push
push
(bad)
mov
xor
xchg
cmp
ins
or
out
sub
dec
inc
test
xchg
shl
adc
hlt
mov
mov
cmp
clc
outs
add
sub
xchg
inc
jmp
sub
push
jmp
sub
sbb
sbb
cmp
mov
mov
mov
cld
movs
stc
dec
repnz
in
push
movs
cmp
cmp
movs
cmp
movs
add
dec
test
inc
repnz
sub
movs
cmp
cmp
cmp
cmp
push
push
jmp
test
movs
cmp
movs
cmp
cmp
xchg
jmp
xchg
adc
dec
cmp
loopne
push
cmp
stc
inc
fild
sub
sub
or
ins
pop
xor
movs
test
aas
aaa
leave
test
cmc
sub
add
sbb
inc
or
arpl
pop
cdq
out
inc
cmp
sub
inc
ss
(bad)
in
shl
(bad)
retf
pop
xchg
adc
push
clc
dec
inc
sbb
xchg
lods
push
jecxz
dec
shl
stos
lea
cmps
xchg
test
sub
out
sub
push
jmp
and
mov
aas
lea
pop
test
add
(bad)
and
and
jmp
and
lods
jns
add
mov
test
outs
mov
jge
test
pop
mov
sti
retf
inc
jne
sub
rol
and
inc
add
stos
push
imul
ins
ss
out
out
sub
jb
pusha
fnop
aaa
in
dec
push
dec
outs
icebp
in
xchg
push
sub
shl
loopne
mov
mov
xchg
js
cld
sahf
ins
pop
pop
cmp
repnz
xor
add
push
and
adc
mov
xor
xor
or
mov
mov
and
les
adc
add
shl
xor
inc
add
lock
xchg
adc
loope
or
push
sahf
jge
cmp
fs
sbb
pop
inc
cli
and
test
pop
sar
pop
shr
cmovg
and
jo
je
loopne
jl
ins
ins
dec
mov
jmp
mov
or
mov
sbb
mov
test
or
stos
xchg
icebp
add
lds
xchg
imul
fst
push
mov
ins
push
jle
and
pop
loop
xchg
pop
fsubr
test
jae
jmp
inc
push
adc
mov
add
xchg
sub
inc
scas
and
push
scas
adc
xor
outs
xor
test
in
inc
push
add
fcomp
xor
ins
int3
mov
jg
sar
add
mov
aam
loop
mov
add
inc
xor
dec
mov
cmp
jae
std
cdq
in
fidivr
adc
std
dec
inc
pop
pop
cmp
cmp
(bad)
lds
pop
test
mov
(bad)
es
(bad)
xor
ins
adc
fnstenv
enter
xchg
je
clc
les
daa
cmp
fstp
and
sub
push
pop
and
or
in
sbb
inc
mov
jle
cld
(bad)
mov
push
mov
adc
cmp
xor
adc
bound
fwait
lock
stos
out
rcl
cmp
das
retf
pop
jnp
ror
adc
xchg
in
shr
mov
mov
sub
xlat
arpl
pop
rol
jnp
pop
ja
fstp
shl
data16
sub
imul
clc
xor
push
call
popf
les
mov
int3
mov
pusha
cbw
ror
call
das
inc
push
cmp
add
ja
(bad)
adc
lahf
stc
das
mov
mov
dec
add
jo
and
xor
and
movs
cmp
popa
and
cmp
xchg
xor
add
pushf
add
adc
inc
shl
lods
iret
and
pop
sub
out
jge
sub
xchg
lods
fisub
lock
or
mov
sub
ret
xor
(bad)
sbb
fidivr
pop
je
out
cmps
add
ins
inc
push
xor
inc
cmp
xor
movs
sub
pop
clc
pop
or
add
jg
lock
xor
jo
popa
rol
xor
xchg
xor
fwait
aaa
jmp
cli
dec
(bad)
push
mov
out
inc
pop
test
jae
jge
push
rcl
or
cmp
jae
xor
loopne
in
or
scas
push
(bad)
pop
mov
and
cmp
inc
bound
xor
mov
adc
or
pop
push
cmp
int
das
mov
cwde
mov
pause
es
mov
rcl
adc
mov
sub
xchg
add
xlat
xchg
pop
dec
xchg
shr
inc
xor
mov
pop
mov
cs
mov
pop
(bad)
retf
loope
js
gs
jg
(bad)
or
(bad)
(bad)
xor
adc
push
je
jmp
or
retf
or
inc
leave
out
psubusb
pop
and
add
shr
xchg
cmp
out
(bad)
sbb
das
dec
imul
push
xchg
xchg
ret
cmps
mov
lods
sbb
xchg
int3
cdq
call
sbb
out
adc
cwde
test
add
fld
push
add
jne
adc
stos
mov
xor
xchg
jbe
dec
adc
dec
xchg
jb
add
lods
cmc
xchg
xor
sub
sahf
sub
int3
push
ret
fisubr
push
jo
imul
mov
(bad)
xor
xchg
das
and
xchg
inc
and
mov
mov
cs
mov
cs
mov
cs
mov
lds
pop
int
pop
jl
xchg
lods
imul
sahf
ret
mov
mov
pushf
mov
les
and
ror
cli
dec
cmp
mov
cwde
cmp
xchg
test
out
int
cld
sbb
mov
or
cmp
in
xor
(bad)
ficom
ss
imul
mov
and
sub
enter
fs
jb
mov
mov
loopne
out
rol
int3
xchg
sub
sbb
inc
push
sub
movs
test
cs
jmp
dec
mov
fcomp
ficom
mov
add
(bad)
mov
inc
push
pop
fistp
cmc
mov
out
pop
dec
ret
clc
cmp
sar
mov
jg
(bad)
clc
das
lock
pop
mov
pop
les
adc
push
or
cmp
jo
push
(bad)
ins
es
dec
xor
rol
aas
js
retf
mov
mul
repnz
out
pusha
loop
mov
lahf
jno
jnp
push
int
icebp
mov
movs
fisttp
dec
scas
cdq
in
es
test
mov
jb
xlat
xor
mov
mov
ror
push
imul
call
test
aaa
jbe
ins
call
les
or
sbb
sbb
int3
push
or
add
mov
repnz
jns
push
iret
lods
sbb
shr
mov
xor
lods
lods
lods
fiadd
rcr
push
pushf
mov
cmp
cdq
cmps
cwde
retf
(bad)
mov
into
cmp
leave
sar
add
movs
xchg
dec
inc
cmp
movs
cld
rcr
pusha
cmc
and
cmp
and
shr
dec
pop
pop
cmps
lods
mov
test
mov
add
push
stc
jl
int3
jp
xor
pop
mov
cmps
mov
pop
sbb
adc
mov
in
or
mov
(bad)
es
iret
adc
aas
push
js
mov
loopne
push
sbb
repnz
leave
out
js
jmp
push
inc
imul
xchg
rcl
adc
pop
shr
repz
mov
xor
add
out
cmc
in
das
mov
add
icebp
or
mov
cs
lods
mov
inc
xchg
push
jecxz
push
add
shl
fucomp
cs
(bad)
push
cmp
loopne
test
(bad)
into
and
pusha
sub
push
mov
fidivr
popa
shr
fisub
repz
and
popf
add
je
addr16
out
repz
(bad)
cmp
pushf
add
aaa
cmp
call
into
lahf
lods
jmp
cmp
pushf
cmp
cmp
mov
push
jae
jmp
cs
je
addr16
repz
das
pop
shl
popf
aas
pop
shl
xchg
(bad)
je
popa
retf
das
pop
shl
popf
das
pop
xchg
cmc
popf
aas
pop
shl
popf
aas
pop
shl
popf
pop
pop
shl
popf
pop
pop
shl
popf
das
pop
shl
lahf
arpl
cmps
jl
scas
movs
mov
jmp
and
sub
test
add
icebp
add
xor
lds
and
loop
loopne
sub
and
inc
test
mov
icebp
es
lahf
mov
push
pop
xchg
rcr
and
ret
xchg
dec
mov
dec
jp
test
xchg
out
(bad)
xor
or
sbb
adc
xchg
out
xchg
shl
and
sbb
jo
fdivr
xchg
mov
mov
ja
mov
(bad)
je
out
pop
jae
fiadd
jp
or
xor
xchg
test
jmp
or
sbb
cdq
or
ret
inc
fstp
icebp
cli
jecxz
or
dec
aas
inc
push
pop
cld
adc
icebp
sbb
xor
sbb
xlat
jmp
lock
push
sub
sub
aas
loopne
mov
jp
inc
movs
loopne
jnp
xor
push
scas
pop
pop
sub
sahf
inc
sbb
or
pusha
retf
mov
aam
sahf
test
jns
jno
push
pushf
mov
or
hlt
adc
dec
mov
setno
loopne
cmp
sar
cs
ror
mov
push
push
out
ror
movs
xchg
or
bound
adc
sub
mov
test
jno
pusha
cmp
fisub
dec
sbb
dec
mov
sub
(bad)
mov
jne
(bad)
in
loop
mov
mov
add
and
es
cmp
mov
inc
mov
aaa
dec
xchg
adc
cwde
dec
aad
retf
fld
xchg
mov
(bad)
fmul
sbb
pop
push
xchg
lea
xor
aad
xor
jl
jmp
lock
(bad)
ins
arpl
icebp
js
ja
push
scas
std
push
pop
test
hlt
mov
shr
div
(bad)
aad
push
dec
repz
jns
jns
inc
mov
jo
rol
fstp
sub
retf
sar
add
mul
adc
or
jmp
sbb
xchg
pushf
call
lock
sub
add
adc
(bad)
and
out
sbb
mov
xor
mov
bound
cmp
push
mov
pop
lock
sub
imul
jns
or
mov
test
push
xchg
push
mov
mov
stos
sbb
adc
add
dec
push
add
rol
sub
add
and
popf
add
inc
inc
dec
push
jle
jecxz
cmc
add
(bad)
push
push
push
inc
out
mov
xchg
xlat
adc
jmp
into
or
clc
call
inc
and
lock
scas
stc
cmp
into
or
fisub
cli
jns
jns
inc
mov
pop
sbb
pusha
(bad)
sbb
pop
pop
mov
add
add
ror
ficomp
cmp
cdq
jge
pop
das
out
sbb
dec
fs
or
xor
push
or
xlat
in
inc
scas
test
aad
adc
mov
xchg
popa
push
dec
pusha
push
cmp
xor
lock
stos
xor
jle
push
add
repnz
fs
and
out
push
xor
add
cmp
push
loopne
fs
les
jmp
fdiv
arpl
push
xor
lahf
arpl
(bad)
jecxz
psubw
xchg
sar
mov
hlt
sbb
pop
mov
or
dec
mov
lods
mov
(bad)
fs
mov
sbb
aas
fsubr
cwde
shr
cli
jns
leave
sti
lock
mov
imul
jb
fdiv
cmp
cs
outs
and
sub
mov
adc
inc
cmps
or
jmp
loopne
pop
mov
mov
jo
jg
or
retf
int
gs
std
ja
popa
mov
pop
lahf
repnz
stc
dec
dec
fcomi
mov
xlat
mov
fnstenv
lods
in
das
sub
(bad)
cwde
push
pop
sub
int3
cmc
les
xchg
sbb
add
xlat
jecxz
push
pop
cld
ja
mov
sar
(bad)
int
repz
imul
ud2
test
or
outs
xchg
dec
push
jecxz
push
cmp
jmp
iret
popa
in
ds
pushf
hlt
das
js
pop
jmp
lock
in
jbe
sbb
out
jo
arpl
adc
pushf
xchg
cwde
jl
out
or
and
cwde
xor
sbb
xor
movs
fdiv
mov
arpl
pop
retf
push
cmps
jbe
pop
xor
rcr
xor
sbb
mov
push
aam
inc
js
(bad)
mov
sbb
cmp
add
loopne
mov
inc
pop
pop
jne
inc
dec
in
mov
addr16
sub
xchg
push
sbb
jmp
xchg
call
call
not
jmp
jp
mov
dec
pop
jnp
mov
rcl
and
mov
rol
add
sar
xchg
xor
(bad)
dec
lods
xor
sbb
std
inc
xchg
cmc
dec
ret
sub
xor
clc
fdivp
inc
in
mov
xlat
xor
jmp
jg
mov
jp
nop
pop
fdiv
dec
mov
cmp
sbb
jno
sar
jmp
cmp
in
pop
lock
ja
push
stos
inc
adc
mov
add
jne
jno
dec
fidivr
aam
dec
mov
xchg
loopne
pushf
inc
sbb
mov
aam
xchg
(bad)
imul
adc
dec
xchg
in
imul
aad
pop
cmp
dec
jns
pop
movs
call
xor
sub
adc
inc
mov
sub
pop
movs
mov
mov
push
dec
xchg
data16
pop
pusha
sbb
mov
and
dec
add
sbb
pop
scas
daa
rcl
icebp
rcr
mov
sbb
push
mov
stos
ja
inc
test
inc
(bad)
ror
jp
or
hlt
or
or
into
clc
lods
inc
push
cmps
fld
fdivr
mov
sub
adc
xor
dec
jne
test
(bad)
ins
arpl
psraw
cld
imul
iret
ret
sar
out
mov
dec
repz
mov
push
add
test
sahf
(bad)
jb
cwde
aam
adc
mov
adc
pop
jg
pop
push
or
xor
mov
mov
and
test
fiadd
mov
lods
cli
inc
fld
xor
outs
or
aaa
popa
(bad)
sub
xor
mov
push
rol
inc
rcl
and
cwde
out
test
sbb
xchg
jmp
mov
sbb
push
inc
(bad)
rcl
inc
fiadd
mov
add
mov
jbe
(bad)
ror
xchg
bound
(bad)
add
inc
retf
or
shl
sub
pop
jl
pusha
pop
fs
push
xchg
sub
jmp
aas
xchg
mov
les
scas
cld
dec
clc
fist
sub
pop
adc
and
xor
pop
int
enter
xchg
and
mov
dec
mov
cmps
dec
xor
push
jne
xchg
sbb
je
push
pop
aam
add
fimul
test
loop
adc
cmp
adc
cmp
movs
cmp
shl
daa
loopne
mov
pop
sbb
dec
xor
stos
ja
out
movs
mov
push
ins
mov
out
jnp
rcr
push
dec
popf
out
mov
pop
or
mov
dec
out
adc
cmp
sbb
push
jnp
sub
add
std
push
push
mov
test
and
mov
add
scas
fild
jmp
or
mov
mov
gs
dec
jmp
(bad)
jp
mov
pop
retf
inc
mov
cld
push
sbb
jg
stos
mov
mov
cwde
(bad)
sbb
inc
push
pop
das
or
mov
pop
xchg
mov
xor
or
mov
sbb
mov
mov
out
jp
push
and
rcl
mov
retf
and
aad
cwde
fisub
sbb
push
in
cmp
call
and
pop
test
in
jae
aam
sub
mov
mov
rcr
mov
test
test
pop
retf
repz
jge
jecxz
sub
jp
fimul
pminsw
retf
int
mov
retf
mov
(bad)
sub
sub
test
test
sub
mov
(bad)
mov
mov
inc
mov
in
jno
clc
out
pop
xor
cmp
inc
fistp
or
sbb
js
bnd
stos
mov
pop
retf
cmp
imul
jp
push
aas
or
hlt
xchg
loope
popa
and
std
sub
lock
and
xor
fidivr
mov
sahf
mov
loop
dec
pop
push
xchg
cmp
inc
retf
and
das
xchg
xor
mov
or
lock
inc
idiv
push
(bad)
out
dec
mov
and
ret
pop
mov
lods
fidivr
shl
pop
les
sahf
adc
mov
mov
hlt
lock
cli
lock
stos
sar
jmp
movs
push
rcr
jmp
add
lods
fisub
pop
test
(bad)
jecxz
fidivr
scas
out
pop
add
mov
inc
jecxz
loop
outs
or
(bad)
cmp
leave
fcomp
add
lock
pusha
pop
or
fcom
ins
mov
xor
jmp
jbe
mov
loop
dec
mov
dec
pop
shl
jnp
mov
or
out
repz
xchg
mov
cmova
mov
adc
test
xchg
sbb
enter
test
out
sbb
pop
test
cld
sub
call
shl
(bad)
xchg
movs
in
mov
js
dec
lock
popf
enter
hlt
icebp
inc
xor
test
ret
inc
push
ror
dec
sbb
fwait
mov
inc
jne
fld
loopne
mov
jmp
cmp
test
sub
xchg
and
xor
cli
retf
leave
and
xor
cmp
in
xchg
ret
inc
mov
mov
repz
cmp
out
xor
cdq
(bad)
in
inc
jbe
mov
and
sbb
test
add
mov
add
mov
xchg
mov
es
loope
push
or
retf
call
iret
ds
repnz
dec
sub
fdiv
fistp
jmp
or
ja
call
and
data16
outs
rol
cmp
and
or
ja
gs
addr16
or
repnz
inc
icebp
stos
mov
test
(bad)
and
std
pusha
imul
cmp
sbb
xor
addr16
inc
add
mov
xor
cmp
mov
ss
xchg
add
cmp
cmp
mov
popf
idiv
pxor
jb
add
and
(bad)
int3
cmps
xchg
inc
add
dec
iret
pop
sahf
push
retf
xor
out
jmp
xor
pop
daa
aas
mov
dec
pop
lods
ins
ror
sbb
xor
adc
mul
jno
pop
mov
cmp
inc
std
fist
xchg
adc
mov
or
test
jo
mov
adc
mov
sti
nop
xchg
xchg
dec
hlt
add
stos
iret
neg
sbb
jmp
cmp
call
mov
cld
fmul
push
cs
sub
xchg
sub
push
cmp
and
push
sub
icebp
push
loop
js
lods
ds
and
add
pop
out
xor
pop
cwde
mov
push
repz
mov
xchg
lock
dec
pop
addr16
xchg
fsubr
pop
mov
mov
call
gs
jl
hlt
fbstp
aam
sub
inc
jne
xor
add
loop
(bad)
xlat
inc
(bad)
push
xchg
push
out
cli
nop
cmp
xchg
rol
mov
mov
sub
into
pop
mul
dec
out
dec
add
scas
mov
jo
mov
pop
ins
push
pop
sbb
outs
scas
movaps
inc
fistp
jb
add
xor
push
in
adc
push
data16
mov
out
jb
xchg
or
adc
(bad)
pop
add
(bad)
stos
adc
dec
sbb
push
arpl
es
aad
pop
adc
jb
shr
bound
mov
cdq
stos
mov
ja
cwde
push
lods
dec
jge
arpl
out
stc
mov
aad
or
mov
mov
add
sbb
and
and
mov
pop
push
push
shl
xchg
xor
mov
lock
jo
mov
push
pop
test
cmps
xchg
in
mov
(bad)
jp
mov
pop
jnp
lods
pusha
loop
lods
sbb
daa
sub
neg
pop
leave
xor
sub
movs
dec
xchg
sub
and
or
fucom
repnz
add
lock
(bad)
or
scas
or
ins
or
inc
aaa
test
and
push
frstor
and
xchg
sub
push
sub
xlat
and
clc
add
jns
rol
sahf
xchg
adc
das
jb
or
das
cdq
sub
loopne
arpl
xchg
adc
aad
inc
xchg
jnp
push
rcr
sub
add
aaa
arpl
shr
sbb
dec
push
push
ins
(bad)
iret
jb
int
push
push
test
jns
in
xor
sti
das
imul
dec
inc
pop
inc
pop
mov
retf
xchg
push
or
xor
les
or
pop
pop
into
mov
xor
mov
out
scas
pop
aam
popa
pop
xchg
mul
aad
scas
rcl
sahf
leave
out
and
test
scas
test
pop
cmps
mov
cmp
fld
loopne
mov
dec
xchg
ret
sbb
dec
dec
(bad)
sbb
fs
cmp
retf
sti
xor
addr16
std
xchg
cmp
arpl
jns
enterw
jns
jns
gs
or
and
xchg
dec
fdivr
mov
cmps
jns
jns
inc
ins
mov
je
pop
fcomp
inc
outs
std
imul
cmp
lods
leave
sbb
ins
sub
sub
mov
in
push
dec
lock
and
aaa
mov
ret
push
mov
cmp
xchg
imul
jge
ja
stos
cmp
mov
jecxz
mov
shr
mov
enter
sub
cmp
xchg
cs
push
sbb
loopne
mov
test
xor
xor
ret
push
outs
in
cmp
xchg
imul
arpl
neg
fld
pop
repnz
pop
fldcw
shl
std
call
scas
repz
mov
sar
push
mov
imul
mov
repnz
dec
pop
pop
cdq
je
ja
mov
cmc
lods
movs
loope
std
mov
rol
cmp
xchg
push
or
cmp
and
push
xchg
pop
xchg
arpl
inc
stos
inc
shl
add
inc
jns
cli
mov
out
shr
leave
out
and
mov
or
jge
sub
jge
mov
push
ret
js
test
adc
cmp
jbe
arpl
pop
mov
lock
or
ret
shl
out
pop
xlat
or
les
add
dec
cs
xchg
test
pushf
mov
shl
jg
and
and
ins
aam
cmp
out
stos
sbb
loop
out
shrd
mov
loope
scas
inc
or
adc
arpl
sub
jge
pop
mov
(bad)
not
loope
stos
fiadd
sahf
adc
adc
je
mov
std
jo
fild
jae
ffree
loope
jmp
pop
dec
inc
and
call
add
xor
sub
aad
stos
sub
push
mov
and
es
or
out
jnp
mov
ds
lock
xchg
rcr
mov
xor
jb
jbe
mov
jb
sti
push
sar
les
sub
dec
lahf
stos
adc
loop
test
stos
sbb
call
jno
cmps
pop
xchg
mul
aad
xchg
imul
jno
sub
add
hlt
pop
cmps
sahf
rol
push
mov
pop
jmp
loope
nop
sar
(bad)
enter
sbb
mov
adc
fstp
mov
adc
sbb
leave
scas
out
add
cmp
pop
mov
xchg
(bad)
xlat
js
xor
jne
cmp
test
ins
(bad)
dec
jae
movs
fstp
push
inc
rcr
xchg
pop
pop
aad
mov
aas
cmp
daa
enter
int
aam
xor
idiv
retf
sti
sub
leave
stc
cdq
xor
daa
xchg
repz
das
in
stos
test
call
or
inc
retf
sti
aaa
and
out
dec
das
in
(bad)
cmps
mov
cmp
cdq
popf
popf
fwait
aas
xor
xchg
ins
lahf
cwde
jae
daa
out
in
fstp
repz
add
jp
addr16
inc
stos
sbb
movs
je
shr
push
mov
fwait
data16
dec
jmp
call
in
arpl
xchg
stc
xchg
test
xor
jge
lods
dec
and
inc
sbb
and
ja
cmps
pop
push
sub
jp
mov
pop
cld
pushf
add
mov
cli
dec
sbb
pop
mov
or
lahf
cmp
mov
cmps
fnstsw
pushf
jns
xor
(bad)
(bad)
pushf
jns
xor
pop
fdiv
iret
daa
out
dec
sbb
cdq
iret
stc
pop
cdq
ja
push
fnstsw
retf
pop
cdq
lods
mov
cmp
int3
imul
mov
cwde
pop
sub
fst
ss
xor
retf
arpl
xor
ss
fsub
push
cmps
sub
lods
mov
mov
rol
jo
xor
xchg
push
and
or
jne
or
sti
inc
in
repnz
sti
dec
inc
test
cmp
outs
add
ror
test
cld
pop
jo
ja
rol
inc
cmp
pop
in
xchg
test
loop
neg
adc
sbb
jp
jl
dec
movs
aam
mov
pop
pusha
or
or
jp
inc
pop
int3
mov
push
div
call
pop
mov
ds
pop
cld
test
cdq
mul
jne
sti
retf
lock
and
movs
add
push
cmovp
pop
mov
add
inc
jo
popf
das
rol
pop
inc
lock
stos
adc
mov
add
addr16
cwde
and
dec
or
leave
push
popa
adc
sbb
icebp
inc
retf
add
cmps
(bad)
jne
adc
inc
sub
cmps
jbe
shl
push
push
sbb
mul
inc
lahf
xchg
pusha
mov
push
add
push
rcl
xor
push
call
test
jb
arpl
gs
fsubr
je
or
mov
aaa
mov
sub
in
outs
movs
pop
std
or
sub
dec
inc
sub
inc
xor
cmp
repz
push
jb
mov
data16
sub
ins
test
jp
clc
sbb
jmp
sahf
leave
jmp
add
sbb
ja
and
pop
clc
inc
xor
add
add
(bad)
aam
imul
dec
or
out
loop
lds
xchg
pop
adc
xchg
sahf
in
mov
mov
ficomp
sub
add
sub
loope
mov
sbb
mov
mov
cmp
xor
xchg
pop
cmc
dec
out
inc
mov
jae
mov
jne
stc
int3
mov
dec
imul
(bad)
push
ss
add
sbb
out
scas
push
aaa
sbb
into
cmps
aad
mov
pop
push
movs
and
mov
in
bound
loop
push
jp
pop
push
mov
mov
mov
xor
push
loopne
mov
(bad)
in
test
fisubr
leave
sub
push
add
cmp
call
add
jmp
pushf
stc
shr
cdq
cmp
out
aas
dec
cdq
fild
pushf
(bad)
test
mov
jmp
stc
inc
pop
jge
jmp
sbb
or
push
jp
das
adc
sahf
shr
call
bound
dec
or
cs
scas
bound
inc
lods
and
jp
and
loopne
or
movups
push
movs
xor
push
jge
sub
mov
rcr
adc
dec
jno
retf
add
bound
jne
mov
inc
out
leave
out
and
adc
jo
mov
jae
pop
inc
push
inc
cmp
sub
cmps
mov
pop
popa
inc
pop
sbb
out
mov
fisubr
out
or
scas
lea
aam
or
fcmovne
mov
cdq
xor
jp
out
add
popf
add
mov
retf
add
dec
or
or
je
iret
sub
(bad)
xor
adc
or
hlt
or
mov
popf
add
pusha
adc
inc
inc
or
js
test
(bad)
xchg
mov
mov
jle
pop
pusha
test
or
cs
xor
inc
sub
sbb
mov
jo
cs
cmp
lea
nop
xor
mov
push
jb
iret
or
mov
dec
mov
into
push
xchg
call
push
or
test
loopne
inc
mov
cs
cmp
xchg
test
neg
sub
mov
xor
movs
pop
sti
push
sub
mov
das
mov
or
fcmovbe
adc
(bad)
cmc
jno
and
adc
sbb
stc
cmp
xor
jecxz
je
push
jo
cmp
adc
les
aam
dec
inc
mov
pop
inc
lea
sub
push
push
cwde
aam
or
retf
xor
or
lods
shl
jno
(bad)
sub
push
and
push
mov
mov
adc
xchg
int3
mov
rol
in
arpl
mov
pop
outs
call
xchg
push
xchg
adc
fidiv
sub
loop
in
mov
mov
imul
pop
cmps
dec
or
xlat
shl
jmp
jo
push
mov
sub
mov
outs
fdiv
xchg
shr
mov
sbb
sti
arpl
push
mov
fisubr
(bad)
aaa
and
(bad)
cmp
ret
mov
mov
jns
xor
or
(bad)
mov
outs
mov
stos
and
mov
test
lahf
mov
or
mov
cmps
xchg
gs
repnz
movs
clc
sahf
pop
out
div
dec
mov
pop
stos
or
and
repz
les
pop
(bad)
movs
clc
dec
mov
fs
push
sub
xchg
inc
inc
in
les
cmc
(bad)
xchg
sbb
inc
mov
out
cs
add
or
int3
pop
arpl
cmp
test
jne
mov
add
clc
mov
mov
out
das
sti
aas
adc
(bad)
push
pop
pop
xor
pop
push
clc
sub
jl
sub
shr
push
sub
push
call
sub
cmps
jne
dec
daa
shr
stos
inc
sti
inc
add
mov
mov
inc
add
xchg
in
add
sub
(bad)
mov
sub
in
sar
adc
icebp
xor
aas
pop
mov
js
jmp
rcr
les
leave
cmps
repnz
mov
mov
inc
xchg
inc
test
add
mov
mov
inc
mov
pop
mov
cdq
outs
fcmovne
imul
jg
push
add
mov
inc
rcr
fild
rcr
jmp
pusha
cmps
ficom
cwde
mov
adc
jb
mov
cmp
add
(bad)
push
fidivr
sub
lods
(bad)
cmp
fs
call
shr
sub
fsub
pop
imul
pop
shr
test
xchg
sbb
cwde
and
pand
(bad)
hlt
jbe
mov
out
aam
(bad)
ins
xor
(bad)
loopne
mov
and
xchg
adc
push
cmp
loop
pop
sbb
call
test
pusha
mov
dec
push
xchg
adc
xchg
and
mov
out
sbb
dec
ret
mov
jecxz
adc
mov
into
iret
jbe
cmovae
adc
ja
add
mov
inc
popf
push
push
arpl
cmps
dec
push
sub
leave
lods
lds
stos
sub
loopne
cwde
adc
std
inc
mov
out
jb
or
mov
pushf
push
int3
push
inc
movs
inc
ins
mov
imul
mov
jae
sbb
mov
enter
inc
ficom
and
push
adc
xor
mov
push
(bad)
sub
bound
test
jb
push
mov
xchg
pop
mov
push
mov
adc
sub
sbb
jp
test
pop
ret
imul
(bad)
sub
lock
add
cs
xor
dec
xchg
mov
sbb
mov
inc
outs
xchg
ficom
pop
fld
arpl
xchg
push
outs
rol
xlat
xchg
mov
push
test
push
and
pop
(bad)
and
push
popa
inc
add
xor
jo
shl
add
cmp
inc
jbe
add
enter
stos
aaa
out
add
xchg
frstor
inc
mov
jbe
mov
mov
movs
scas
das
add
lds
mov
add
cmp
pushf
inc
push
mov
cmp
xchg
mov
movs
rol
arpl
inc
push
pop
or
shr
pop
lods
lods
out
es
pop
push
adc
push
leave
fwait
out
push
dec
movs
jmp
ins
xchg
dec
sub
and
retf
sub
retf
das
cmp
jge
jecxz
cmp
(bad)
push
sub
ins
pusha
or
inc
stos
sub
xor
sbb
xchg
mov
and
push
push
lahf
cs
(bad)
inc
or
movs
push
sbb
aaa
pop
or
aaa
xchg
mov
dec
fisttp
mov
mov
sahf
(bad)
mov
je
sub
pop
les
pop
xchg
int
xchg
jg
loop
cmps
int
pop
movs
mov
les
adc
iret
pop
adc
fild
inc
ja
movs
mov
clc
xchg
jns
cwde
add
xchg
jne
nop
das
fdivr
outs
es
jb
jecxz
jae
movs
call
popa
mov
push
leavew
and
xlat
test
scas
fwait
leave
jmp
cwde
js
int
mov
pop
pop
push
lods
pusha
test
jmp
daa
int
test
sar
and
aas
xchg
stos
test
in
cli
push
mov
mov
xchg
xor
js
add
sbb
or
push
mov
stos
push
nop
dec
mov
and
popa
xor
xchg
jbe
cmove
pop
xor
icebp
fsubr
punpckhbw
mov
cli
inc
xchg
push
xor
gs
cs
xchg
bound
push
mov
shr
push
xor
push
(bad)
shl
dec
and
outs
hlt
mov
mov
cmp
pop
or
xor
push
cmp
cmp
dec
mov
sti
retf
pop
mov
repz
(bad)
(bad)
or
push
push
pop
(bad)
add
or
inc
fld
sbb
adc
add
mov
dec
and
pop
lods
push
sub
(bad)
imul
fwait
ror
and
xor
rol
pop
lods
sbb
dec
sub
add
test
in
xor
xchg
sahf
push
add
or
rcl
scas
mov
arpl
mov
call
ror
add
add
call
or
add
mov
loopne
mov
mov
add
dec
adc
inc
mov
mov
imul
out
loop
mov
sub
mov
add
and
push
push
(bad)
icebp
in
in
loope
test
cmp
inc
repz
xchg
pushf
pop
inc
das
mov
ins
sub
sub
cwde
sbb
and
jmp
ret
mov
sub
popa
aad
dec
gs
mov
sub
mov
sar
gs
push
dec
add
mov
loop
pop
lfs
popf
or
sbb
in
adc
(bad)
mov
std
sbb
adc
cmps
add
cmp
(bad)
lods
aad
push
scas
cmp
mov
ins
stos
adc
out
jle
pop
das
stos
pop
mov
mov
movs
push
adc
pusha
add
cmps
adc
retf
fnstenv
stos
cdq
ret
nop
and
aas
push
sti
shr
sub
or
loop
into
mov
retf
or
push
sub
mov
inc
pop
or
cdq
pop
sub
dec
sbb
leave
adc
adc
xchg
out
mov
outs
pop
mov
dec
arpl
adc
xchg
xor
or
outs
in
xor
jno
push
call
mov
int3
iret
fucomip
xor
das
sub
xchg
jne
xchg
or
sub
ins
mov
push
ins
xor
rcr
sbb
(bad)
jo
mov
mov
mov
sub
enter
xchg
cmps
xor
jbe
xor
loopne
(bad)
repz
retf
fild
xor
pop
test
xchg
or
push
cwde
sbb
cli
call
mov
mov
popf
dec
arpl
mov
loope
sbb
xchg
adc
xor
mov
adc
mov
mov
push
aaa
clc
jmp
inc
inc
sahf
js
dec
jne
(bad)
es
and
ficom
push
int
add
mov
dec
mov
sub
stos
into
xor
sbb
jmp
mov
jg
push
mov
sub
aad
jns
fidivr
pop
pop
arpl
push
dec
loopne
push
jae
push
add
push
sub
mov
jle
or
(bad)
and
push
mov
push
int3
jp
push
retf
push
or
loop
cmp
fbstp
je
jmp
add
mov
cmp
inc
or
ret
or
pusha
jmp
cmp
sub
and
pop
inc
popa
in
pop
movs
sub
push
fs
loop
pshufw
cmp
add
(bad)
loopne
pop
and
fwait
push
ret
test
pop
add
adc
pop
stos
cld
ficomp
cdq
or
scas
movs
ror
outs
xor
(bad)
and
lds
mov
xchg
jns
xor
and
or
rcl
cmp
jl
iret
ins
outs
fs
stos
lods
push
retf
mov
inc
in
push
sub
and
sbb
pop
jmp
pop
mov
in
add
stc
loop
or
(bad)
sbb
ins
xor
mov
imul
adc
xor
adc
jecxz
fcmovu
push
gs
inc
add
out
or
dec
in
call
xor
shr
in
inc
push
test
mov
inc
lods
push
cdq
icebp
mov
enter
mov
and
stos
sbb
jp
xchg
lods
mov
pop
in
or
sbb
pop
adc
repz
add
daa
cdq
or
ret
sub
dec
push
mov
push
data16
sbb
rcl
and
push
add
add
fmul
push
mov
xor
sbb
push
push
push
dec
xchg
rcl
enter
retf
xor
push
sbb
es
mul
or
xor
pop
jmp
dec
push
push
xchg
xor
mov
inc
add
inc
icebp
jle
fidiv
aaa
dec
mov
mov
les
sbb
(bad)
xchg
mov
push
mov
mov
test
lea
and
mov
adc
xchg
jns
enter
les
clc
mov
jp
les
fld
inc
adc
mov
imul
(bad)
idiv
inc
pop
stc
xor
xlat
addr16
sub
into
lock
xor
fcmovne
sar
out
xor
jae
dec
ins
icebp
iret
mov
push
add
xchg
add
rcr
inc
test
ret
retf
into
push
mov
in
pop
mov
lods
push
std
or
jne
cs
push
std
ror
and
inc
fnstcw
shl
fnsave
xor
jmp
or
xor
jnp
add
mov
jns
or
stos
int
sub
push
shr
mov
adc
mov
ins
pop
int
je
pop
aaa
out
or
jp
out
cmp
push
clc
(bad)
pop
ss
dec
adc
leave
stc
xor
and
push
out
adc
jb
test
ss
test
sub
std
and
fwait
xor
dec
aam
jmp
cdq
lock
icebp
dec
mov
jno
(bad)
mul
sbb
(bad)
mov
bnd
mov
dec
out
imul
cmp
mov
retf
push
dec
bound
push
cmp
dec
jmp
push
cmps
es
ins
aam
mov
xlat
or
or
js
stos
sbb
stos
(bad)
sahf
xchg
pop
inc
inc
push
sub
xchg
or
ja
adc
pop
icebp
jb
sub
inc
ss
pusha
cmps
mov
test
ret
pop
es
mov
int3
(bad)
(bad)
ficom
inc
mov
push
rcl
aam
sub
add
sbb
mov
push
push
add
push
scas
loop
jns
mov
dec
lods
sbb
dec
push
adc
pop
(bad)
fsubr
adc
popa
mov
sub
ins
push
hlt
jp
cli
inc
retf
mov
jle
test
or
add
gs
int
loop
int3
gs
mov
pop
xchg
hlt
mov
movs
adc
pop
cmc
int
mov
cwde
scas
cwde
cdq
lods
movs
xor
or
xchg
das
dec
ins
or
ins
inc
or
dec
jmp
std
mov
test
lds
jae
mov
fwait
pop
cmp
add
and
sub
lods
mov
jp
mov
fld
mov
cmp
in
or
xchg
mov
dec
pop
enter
adc
(bad)
sbb
jns
sbb
lahf
xor
(bad)
cdq
xlat
repnz
loopne
or
int3
inc
adc
or
mov
test
cmp
lds
loope
lods
push
mov
push
jbe
shl
jl
mov
repnz
sbb
ret
cmp
jbe
dec
sbb
or
sub
fisttp
bound
xor
pop
xor
fldcw
pusha
scas
sub
in
inc
cmc
mov
push
inc
(bad)
not
pop
call
out
mov
cmp
add
lods
dec
cmps
push
dec
dec
xchg
mov
sub
test
and
cdq
push
loop
dec
and
adc
pop
shl
and
mov
pop
add
dec
movs
or
sub
xor
(bad)
std
pop
(bad)
dec
fcomp
retf
stos
mov
mov
ins
pop
bound
mov
idiv
sbb
jecxz
inc
int
mov
mov
mov
mov
mov
sbb
call
jns
adc
or
mov
mov
fild
cmp
jno
inc
add
out
xchg
mov
mov
jns
dec
inc
adc
xor
ret
cmp
out
and
daa
and
sub
enter
xchg
sbb
sbb
test
in
inc
pop
or
adc
or
mov
outs
mov
aam
into
push
add
test
jo
cmps
popa
cs
add
adc
gs
in
shr
cs
jle
data16
lea
ret
jmp
mov
add
(bad)
leave
sahf
shl
adc
adc
pop
lock
popa
call
scas
cmp
neg
add
xchg
push
xor
dec
into
fs
shr
jnp
int
into
imul
ins
imul
out
hlt
xchg
movs
sub
sbb
sbb
das
push
and
cmp
test
stos
jno
add
mov
mov
in
adc
jne
ins
fld
adc
add
add
aas
int
cmc
add
fsub
cmps
sub
bound
lahf
loop
daa
clc
(bad)
loope
dec
sbb
mov
loop
sub
dec
sub
cmp
jmp
loopne
popa
xlat
bound
lods
aaa
imul
add
mov
push
mov
jbe
jg
sub
(bad)
in
pusha
xor
add
xor
xchg
xor
jb
jno
cmp
call
push
sub
retf
pop
loope
cmps
leave
sub
push
or
mov
arpl
out
repnz
je
in
imul
fnstsw
push
push
cmp
cwde
pop
push
adc
mov
pop
cmp
dec
xor
les
cmp
or
or
out
das
(bad)
sub
pop
xchg
jle
xor
pop
movs
lock
jge
out
in
fwait
jns
ins
mov
jo
mov
fcom
aad
jecxz
(bad)
push
(bad)
adc
fs
mov
xchg
ret
push
adc
mov
xchg
adc
leave
test
fwait
shl
inc
cmc
add
(bad)
mov
mov
imul
jno
push
into
push
(bad)
aam
addr16
push
sbb
mov
ds
mov
lock
int3
push
jp
pop
mov
mov
imul
adc
in
ret
lahf
push
pop
pushf
aas
imul
dec
cmc
fnstenv
aam
lods
sbb
fistp
test
sub
or
lods
adc
add
jae
pop
mov
aam
xchg
loop
xor
add
popf
aas
and
dec
mov
call
sti
cli
out
arpl
fdiv
ret
pop
pop
call
movs
stos
push
nop
in
cmp
jns
sbb
sbb
xor
sar
mov
test
add
xor
add
test
sbb
inc
jmp
mov
sbb
dec
lods
or
add
movs
cwde
icebp
imul
ret
dec
popa
add
cmp
retf
movs
les
repz
pop
xchg
std
pop
lock
inc
outs
(bad)
mov
pop
mov
pop
into
repz
movs
pop
jae
rcr
adc
dec
sub
popa
mov
pop
pop
inc
pop
cmp
daa
cmps
cmp
test
cmp
mov
push
inc
sub
jb
sub
jo
shr
fldcw
fisttp
jo
adc
mov
sub
pop
sub
mov
sti
jne
repnz
bound
test
test
jb
loope
adc
push
les
mov
jo
into
test
or
xchg
mov
xor
lahf
(bad)
inc
or
shl
sub
lods
jecxz
inc
aaa
add
cmp
mov
imul
fadd
fwait
push
sar
jne
popf
das
dec
xchg
lods
loopne
call
xor
test
jns
pop
je
xchg
test
or
pusha
push
repnz
jns
inc
sti
pop
dec
test
out
stc
out
arpl
aas
and
jnp
add
jno
movs
fptan
push
push
sub
xor
cmps
mov
out
push
sub
popa
inc
inc
add
mov
fisttp
push
enter
sbb
push
loopne
dec
enter
mov
mov
push
mov
xchg
imul
outs
aam
and
mov
adc
mov
fisttp
push
push
shl
xor
dec
jns
xchg
leave
jp
inc
popf
push
cmp
movs
sbb
cmps
fst
mov
push
push
out
sub
arpl
jne
je
dec
xor
lds
out
push
add
mov
xor
mov
sbb
dec
adc
inc
test
cmps
and
push
aad
sub
xchg
and
jbe
inc
out
lds
mov
or
imul
pop
or
or
push
popf
scas
jb
add
clc
push
es
fisttp
shl
lods
in
in
je
and
popf
inc
mov
xchg
les
data16
shl
fstp
es
xor
add
adc
jecxz
ds
fsubp
dec
xchg
adc
push
(bad)
cmps
mov
clc
jmp
jmp
jbe
sahf
adc
je
adc
add
test
sbb
mov
or
push
inc
sbb
push
sbb
and
xchg
out
inc
mov
aaa
ficomp
pop
mov
popa
call
outs
(bad)
xchg
sbb
pop
in
addr16
or
sub
add
mov
es
inc
jl
in
jle
out
pop
adc
xor
sbb
call
pop
std
data16
add
loop
or
fsub
(bad)
js
gs
add
rcl
rcr
retf
mov
mov
xor
or
mov
out
sbb
mov
push
mov
mov
sbb
push
dec
add
(bad)
xlat
in
or
rcl
or
push
lods
mov
jl
pop
sahf
cs
fadd
imul
daa
cmp
fwait
pop
or
adc
or
aad
rcl
ror
lods
adc
les
add
cs
or
sub
retf
pusha
pop
or
mov
ss
sbb
rcr
cmp
daa
mov
inc
and
sar
inc
xor
dec
push
fild
jp
retf
xor
add
stos
(bad)
jo
retf
add
add
push
push
pop
pop
retf
ins
jne
aaa
xchg
sbb
or
jno
in
inc
ror
add
aaa
fstp
mov
push
mov
cmps
sub
cwde
jbe
lods
or
jae
aaa
stos
or
test
adc
je
add
icebp
mov
ins
js
xchg
cmp
mov
inc
enter
jne
(bad)
aaa
test
and
cli
out
and
cdq
push
pop
clts
arpl
repnz
repnz
jbe
xlat
out
sbb
add
dec
addr16
sahf
jns
mov
pop
and
lahf
pop
xlat
gs
ins
(bad)
jge
or
jp
cmps
sbb
mov
sub
xor
ja
js
(bad)
add
jns
scas
xor
mov
jge
adc
push
push
clc
into
push
sub
loopne
mov
adc
pop
leave
jnp
bound
cli
mov
dec
jg
lahf
mov
cdq
push
fs
(bad)
int
les
popf
int3
xchg
jne
sub
pop
test
sub
test
mov
sahf
fistp
movs
into
sub
add
or
mov
ret
mov
push
out
cmp
push
mov
cmp
retf
jp
pop
movs
add
test
hlt
movs
jp
shl
and
fidiv
xchg
stos
xchg
add
mov
and
add
mov
jne
mov
xchg
add
xchg
rcr
nop
cmps
cdq
pop
fisub
or
xchg
push
dec
sub
mov
jmp
sub
(bad)
push
fisubr
jb
mov
pusha
pop
push
das
xchg
jge
add
call
(bad)
adc
add
mov
fcmovb
add
(bad)
push
cmp
jbe
mov
and
movs
jne
mov
or
push
push
cmp
aad
fwait
in
adc
sbb
test
and
add
ret
(bad)
sbb
adc
xchg
or
nop
sbb
ja
inc
scas
lds
pop
jnp
mov
lea
add
xor
adc
and
daa
inc
jbe
sub
int3
add
xchg
xchg
sub
ret
add
mov
add
outs
fisubr
add
push
sar
jne
ret
lds
xchg
push
add
push
loopne
jg
mov
call
pop
lods
sub
xor
fist
mov
outs
pop
ret
mov
loop
mov
(bad)
dec
mov
call
mov
push
leave
ins
pop
pushf
xchg
and
cli
or
sub
inc
(bad)
(bad)
cmp
sub
test
(bad)
and
jbe
jns
cwde
mov
mov
mov
jns
pop
pop
push
inc
mov
cmp
movs
jne
aaa
imul
dec
dec
test
push
adc
adc
dec
mov
cmp
pop
sub
dec
daa
cmp
push
outs
fstp
aam
dec
(bad)
aas
add
fnstsw
sbb
inc
mov
lds
call
int3
ss
add
shl
xchg
add
xor
push
jns
repnz
or
stos
xchg
cmp
inc
mov
and
jb
lods
push
mov
js
or
and
adc
mov
mov
cmp
mov
div
push
and
cmp
sbb
pop
pushf
and
out
xor
shr
aas
dec
jns
push
js
mov
sub
sub
adc
loopne
pop
stos
stos
push
push
push
outs
pop
mov
jp
add
cmp
add
aaa
dec
cmp
and
adc
pusha
cmp
mov
jl
out
cmps
clc
adc
or
cmp
xchg
add
xor
xchg
cmp
test
add
aam
mov
call
out
bound
inc
test
shl
and
in
js
cld
cmc
mov
movs
stc
stos
dec
cmp
xchg
vphaddubw
xor
add
stos
mov
inc
sub
jmp
jno
sbb
gs
scas
sub
jne
int
popa
jns
cmp
push
mov
mov
cmp
repz
xor
sub
sbb
je
mov
xor
and
dec
jae
(bad)
call
ror
cmp
test
imul
mov
ins
fwait
shl
push
aas
jb
into
clc
scas
pop
test
sub
outs
test
(bad)
jmp
shr
clc
push
test
cwde
cmovno
adc
sbb
call
mov
aam
test
xor
hlt
xchg
pushf
inc
aas
js
(bad)
xchg
cmps
mov
and
je
push
repnz
out
sub
add
test
cmp
loope
pop
xor
sbb
push
stos
cli
jae
fistp
retf
sub
shr
setno
outs
xchg
push
ficomp
push
xchg
mov
popa
xor
jb
dec
pop
fsub
ds
icebp
mov
inc
es
pop
sub
mov
iret
stos
(bad)
in
mov
retf
inc
mov
push
pop
pusha
mov
jbe
test
icebp
fidivr
in
jg
inc
or
xchg
lock
dec
mov
loope
sbb
out
outs
jne
push
inc
add
mov
js
imul
inc
and
fild
mov
jl
and
dec
jg
les
(bad)
push
test
outs
push
test
ret
adc
popa
popa
je
sbb
outs
add
fisub
rcl
cmp
into
add
mov
mov
leave
jo
push
adc
mov
sub
pushf
add
pop
xor
sbb
stos
sahf
in
call
jae
daa
or
repz
xor
cmovl
adc
and
sbb
addr16
jp
mov
jmp
ficomp
lahf
adc
adc
mov
and
nop
sar
push
cmps
sbb
inc
dec
jo
and
clc
cld
add
shl
push
or
and
push
or
jbe
jno
shl
scas
rol
cmps
inc
and
outs
mov
dec
stc
daa
sub
mov
add
cli
cmp
(bad)
daa
jmp
sub
popa
sbb
cmp
and
pop
imul
and
inc
test
add
xchg
cs
mov
pop
lods
xchg
mov
ret
shl
push
inc
cmp
sub
aaa
fidiv
xor
jmp
test
mov
in
jecxz
sbb
mov
test
cld
pop
test
xchg
stos
enter
adc
rcl
sub
adc
mov
repz
mov
or
(bad)
xchg
and
cdq
cmps
es
imul
bound
jo
add
xchg
jp
add
test
adc
imul
mov
int3
cdq
xchg
adc
sub
inc
sub
or
xchg
mov
ror
mov
(bad)
xchg
jns
jno
push
pop
add
push
inc
fisubr
dec
pop
fsub
jns
mov
ins
cmps
stos
cld
shl
test
out
dec
xor
cmp
in
or
cmps
cmovbe
push
mov
movs
paddsw
icebp
push
mov
test
ror
mov
dec
ins
or
cmp
imul
adc
leave
add
sub
loope
cmp
dec
jmp
and
jo
enter
cmc
push
loope
and
sbb
jbe
shl
test
inc
(bad)
pop
xchg
pop
ja
or
fcom
inc
data16
lock
cs
add
out
jne
retf
mov
jg
xor
pop
mov
dec
adc
test
bound
add
scas
or
or
sub
call
pop
dec
push
js
or
inc
(bad)
clc
repnz
sub
fwait
stc
pop
(bad)
pop
sar
pop
push
imul
(bad)
in
dec
in
cmp
adc
mov
pop
popa
sub
ins
inc
lock
inc
fidiv
jb
dec
nop
mov
jns
punpckhwd
mov
pop
push
xchg
or
mov
lods
pusha
out
mov
add
retf
and
add
adc
pop
or
add
shl
xchg
(bad)
lods
leave
mov
jns
push
sbb
and
popf
sub
mov
pop
mov
sahf
lock
dec
xchg
repnz
jo
in
jl
and
pop
test
sbb
sub
int3
xchg
inc
fdivr
mov
retf
lods
push
pop
jl
cmc
push
cs
xor
add
xor
(bad)
xor
adc
and
fs
jl
xchg
cmp
test
push
push
pop
xchg
jmp
loope
sti
push
jle
push
fmul
cwde
or
addr16
xabort
mov
stc
sbb
out
sub
cli
fisttp
out
sbb
out
call
dec
jl
ss
jbe
xor
rcr
clc
fdiv
push
push
out
jle
aad
push
push
int
mov
dec
jbe
mov
out
sub
jb
aam
add
mov
mov
leave
dec
stos
push
xchg
push
imul
adc
pop
rcl
pop
cmp
mov
add
inc
movs
ins
scas
mov
fcomp
pop
cdq
pop
inc
inc
dec
iret
xor
std
sar
push
adc
mov
loop
pop
jne
sub
mov
mov
xchg
mov
inc
ficom
push
repnz
stc
adc
xor
int
cvttps2pi
inc
or
or
jne
mov
ins
ja
xchg
or
push
cmps
mov
xor
and
xchg
xchg
inc
in
das
adc
jb
xchg
int3
cmps
mov
sub
jbe
stos
fwait
cmp
retf
xor
movs
popf
sub
dec
push
cld
push
inc
test
jp
sbb
sbb
pop
sbb
imul
ins
push
jmp
mov
mov
jnp
xchg
call
ror
fisub
jns
imul
sbb
rol
cmp
cmp
sub
lods
(bad)
pop
jge
or
xor
das
jns
out
inc
gs
ss
fdiv
push
lds
out
out
call
or
xor
sub
push
daa
push
sbb
push
push
sbb
jbe
lahf
repnz
sbb
sar
aam
push
das
mov
xor
movzx
push
add
in
fisttp
loop
ins
sahf
rcr
pop
iret
jmp
(bad)
adc
adc
sbb
inc
test
aam
cmps
mov
dec
inc
gs
add
int
scas
aaa
jns
out
dec
das
pop
mov
jmp
mov
jp
and
sbb
ficomp
cld
imul
cmps
cmp
int3
in
mov
rcr
out
adc
pop
add
xor
xlat
je
das
pop
add
ret
pextrw
push
or
cdq
push
inc
sub
fwait
add
loopne
movs
pop
sub
rcl
mov
neg
sub
cmp
xchg
cmps
mov
fsub
dec
mov
or
sub
xchg
push
jns
jnp
adc
(bad)
std
fdiv
test
adc
not
xor
pop
shl
pop
dec
cmp
xchg
das
inc
data16
(bad)
xchg
pop
inc
jp
xchg
push
addr16
adc
inc
cli
pop
dec
popa
int
pop
call
inc
mov
mov
pop
xchg
mov
push
(bad)
lock
aad
(bad)
push
aam
pusha
xor
movs
in
sub
out
lods
ds
call
loop
cmp
mov
pop
mov
pop
adc
cmp
jbe
pop
nop
pop
inc
pop
inc
add
neg
(bad)
fsub
cdq
pop
jp
jl
test
dec
jmp
push
daa
add
mov
rol
mov
aaa
push
pushf
pop
sub
repnz
cdq
adc
sbb
sub
mov
xor
cmps
movs
retf
pop
fisubr
pusha
mov
add
mov
xchg
jne
or
jp
mov
push
add
pop
outs
xchg
pusha
add
retf
inc
bound
push
mov
(bad)
sbb
cwde
jecxz
pop
pop
xor
les
cli
loop
pop
js
pop
inc
push
and
sbb
cmps
add
fs
inc
sub
adc
js
sbb
scas
xlat
pop
add
fs
sub
scas
dec
neg
jmp
stos
xchg
lods
ins
call
push
inc
ror
mov
(bad)
xor
add
in
les
mov
imul
or
mov
push
or
and
and
fcomp
(bad)
out
cmp
out
xchg
ins
mov
cmp
loop
shr
jnp
mov
xor
adc
and
xor
jns
out
rcl
ret
sti
mov
add
mov
sub
int3
inc
nop
dec
mov
loope
aas
mov
push
pop
fdiv
pop
sbb
test
add
adc
test
aas
jnp
xor
mov
ficom
sbb
das
xlat
pop
dec
jmp
or
pop
popa
repz
ss
add
push
fiadd
sub
jge
les
test
dec
mov
jmp
push
pop
xchg
push
push
mov
ss
and
ret
setns
sbb
mov
stc
retf
push
mov
add
mov
push
scas
push
or
or
inc
movs
shl
sahf
pop
stos
stc
bnd
repz
inc
mov
(bad)
sbb
cwde
adc
sbb
mov
push
push
pushf
push
cmc
cmps
dec
lea
jl
jp
dec
jl
fiadd
les
mov
pop
jo
movs
pop
mov
sbb
sub
jbe
adc
fs
ret
adc
call
dec
sbb
repz
sbb
sub
rcl
ret
sbb
jmp
xor
add
mov
ss
cmp
and
shl
aad
outs
push
sbb
cmc
inc
add
mov
inc
repz
aas
add
fsubr
jbe
jbe
lods
ret
lea
loop
out
mov
inc
rcl
dec
adc
mov
push
je
adc
push
jmp
add
xchg
(bad)
fld
sub
xor
fisubr
stos
cdq
pop
cdq
push
xor
leave
jb
(bad)
idiv
and
adc
loope
ds
or
rcl
dec
mov
adc
(bad)
pop
push
sbb
arpl
outs
subps
pop
mov
clc
inc
lods
pop
inc
jg
adc
cmp
sbb
mov
xor
mov
inc
arpl
shl
xor
mov
bound
gs
or
pop
out
or
sub
out
inc
das
and
retf
in
xor
push
xchg
pop
nop
out
in
add
push
leave
xchg
jne
int
fld1
mov
push
xchg
mov
out
lock
pop
pop
add
pop
pop
mov
es
inc
xor
fdiv
push
and
push
inc
cwde
mov
add
adc
bound
mov
mov
sub
add
dec
fisttp
mov
push
sbb
adc
retf
inc
loop
push
retf
mov
adc
jae
aad
sbb
sub
inc
inc
adc
push
fdivr
xor
stos
shr
jmp
aam
imul
mov
js
mov
inc
pop
movs
mov
jb
xor
sbb
sub
mov
jmp
xor
in
leave
loop
fs
xlat
mov
jbe
nop
pop
jns
push
cmc
(bad)
inc
retf
push
sti
out
test
dec
jns
mov
jp
loopne
cmp
add
test
gs
xchg
or
pop
push
(bad)
and
fsubr
adc
cld
ret
test
add
ror
arpl
mov
xor
ja
lods
imul
push
lods
jo
push
aaa
add
(bad)
mov
adc
xchg
clc
lahf
call
loop
mov
push
cmp
std
xchg
je
adc
pop
repz
adc
repz
js
or
js
adc
(bad)
icebp
sub
in
and
sub
icebp
cmp
icebp
or
ins
sbb
mov
jle
and
xchg
pop
arpl
sub
dec
stc
cmps
test
adc
jae
(bad)
lock
mov
ins
not
xchg
stos
and
les
icebp
add
cmp
shl
sub
jne
mov
mov
jl
mov
inc
sub
cdq
(bad)
mov
sub
jecxz
jnp
dec
stos
pop
cmp
mov
lock
sub
sbb
rcr
xchg
sbb
xor
dec
movs
jmp
sub
push
push
sbb
in
inc
pop
mov
pusha
mov
adc
push
sbb
xchg
out
pop
nop
cs
pop
rol
arpl
ret
arpl
pop
fsub
mov
push
arpl
daa
adc
xchg
aad
adc
mov
pop
mov
movs
mov
loopne
xchg
imul
outs
aad
jmp
cs
inc
icebp
jl
stos
xchg
fs
cmp
and
push
sbb
mov
adc
test
cmp
ror
scas
not
cmp
stos
retf
out
sub
mov
add
mov
jne
xor
into
push
lahf
pop
add
stos
sub
xchg
lods
xor
rol
and
call
out
sbb
sub
push
out
scas
cmp
lods
data16
cmps
or
jne
inc
sbb
jecxz
sbb
test
movs
sbb
mov
adc
icebp
add
mov
scas
xor
je
icebp
sbb
mov
(bad)
xor
adc
or
in
jp
repz
push
bound
movs
pop
xor
(bad)
push
fadd
pop
call
or
sbb
enter
mov
inc
outs
push
adc
call
push
test
mov
dec
xchg
mov
mov
test
scas
test
add
clc
push
imul
inc
movs
dec
(bad)
dec
pop
ja
test
and
scas
ficomp
jp
jge
aam
test
inc
dec
or
cmps
adc
out
xchg
daa
mov
iret
ss
cwde
pop
jo
push
sub
dec
mov
ins
push
scas
sub
jbe
aad
adc
mov
pop
(bad)
mov
sbb
mov
aam
or
rol
pop
sahf
int3
imul
dec
dec
test
(bad)
cli
inc
test
jmp
dec
mov
pop
int3
test
xor
les
xor
bound
ror
adc
lods
push
or
add
pop
cwde
shl
lea
xlat
push
push
mov
retf
ins
adc
jge
pop
mov
push
or
pop
cmp
je
(bad)
push
or
shl
outs
test
popf
mov
xor
xchg
aaa
inc
cdq
mov
jae
dec
int
lods
mov
jmp
jecxz
pop
dec
add
out
inc
loop
pop
inc
jle
xchg
xchg
js
add
out
push
cmp
int3
push
hlt
neg
and
pop
les
add
or
jb
lahf
fisttp
xchg
lahf
or
pop
adc
push
(bad)
stos
stos
xor
mov
cmp
repz
stc
sets
inc
sub
lea
dec
xor
sub
adc
nop
rcl
push
ins
or
pop
push
inc
aad
add
mov
fisubr
push
mov
cmc
jae
ror
mul
jge
push
xchg
lds
jl
test
fucomp
std
dec
sub
add
xor
inc
jmp
dec
or
inc
mov
push
nop
pop
xchg
jne
stc
(bad)
popf
cmp
out
popf
adc
xor
inc
inc
out
lds
mov
rcr
or
push
retf
fidiv
mov
mov
and
fld
inc
pop
sub
mov
pop
xor
inc
fucomi
or
adc
aas
loope
test
movs
int3
sbb
pop
retf
inc
pusha
ficom
inc
iret
stos
test
push
fld
xlat
dec
cmc
repz
int
in
pushf
ja
fist
test
aas
ficomp
es
sahf
push
fist
popa
in
icebp
inc
outs
adc
in
es
add
shl
push
or
mov
es
inc
push
mov
sti
xchg
sub
adc
xor
xchg
daa
mov
data16
nop
jae
enter
or
ss
adc
cmp
int3
jno
mov
jecxz
cwde
sbb
inc
mov
push
mov
xchg
pop
into
inc
jno
rdtsc
jmp
push
call
adc
dec
add
or
movlps
xchg
(bad)
add
cmp
clc
inc
fidiv
(bad)
xor
leavew
jge
ret
xor
cmp
inc
mov
ret
mov
jecxz
es
add
jae
jmp
jmp
push
xchg
jl
or
or
cmps
fs
push
popa
sar
pusha
cmp
ins
or
lods
push
mov
gs
pop
out
in
repz
mov
pop
jne
and
jp
imul
out
cmps
lea
scas
mov
push
jmp
(bad)
jnp
push
lods
sbb
retf
scas
xchg
push
pop
jno
ret
adc
js
sbb
gs
jae
loop
jecxz
jb
es
es
mov
(bad)
lock
mov
jge
cmp
(bad)
jge
xchg
sti
fild
ja
and
pop
adc
xor
jae
xor
lods
sbb
mov
mov
imul
mov
and
sbb
jns
jle
mov
in
mov
call
xchg
fmul
adc
test
scas
sub
scas
jl
mov
xchg
ins
sub
pusha
sti
mov
mov
jmp
mov
jo
stc
nop
dec
mov
sbb
xchg
sub
add
pop
xor
cwde
imul
xchg
adc
lods
popa
test
push
shl
sub
fs
data16
pop
mov
adc
sub
sub
mov
xor
push
(bad)
jo
mov
adc
jae
xor
push
pushf
stos
add
repnz
mov
adc
xchg
fwait
push
cmp
ror
push
dec
jle
xchg
jecxz
retf
inc
or
or
sub
jmp
in
jp
mov
mov
push
bound
test
cmp
shr
pop
out
jb
cwde
jnp
push
std
push
call
mov
out
cs
mov
mov
rol
cdq
pushf
in
and
add
mov
sub
test
out
test
sub
sbb
push
pop
add
jb
lahf
xchg
loop
ret
inc
gs
(bad)
repnz
push
stc
xor
cmps
js
dec
pop
pop
xor
xchg
cmp
shr
hlt
data16
cmp
or
sub
scas
repnz
inc
(bad)
repnz
jmp
out
call
repnz
dec
xchg
jne
imul
sub
daa
or
push
nop
aaa
jmp
push
dec
mul
(bad)
iret
addr16
ss
and
aaa
jns
std
inc
outs
push
jmp
inc
cld
mov
sbb
pop
mov
in
sbb
shl
adc
sbb
stc
dec
jno
mov
inc
jns
and
(bad)
enter
pop
push
xor
or
movs
nop
add
sub
adc
jl
sbb
out
add
mov
sub
jns
cmp
pop
repz
int
lea
xor
sbb
inc
xlat
fld
cmps
sub
imul
dec
xor
add
fadd
pop
enter
aad
ret
xlat
sub
or
in
pop
push
sar
int3
test
add
jmp
xor
repnz
jnp
sub
adc
es
ficom
aad
fcomi
pop
cs
pop
(bad)
xor
xor
inc
sub
push
sbb
add
sub
fld
in
jno
adc
add
mov
dec
fimul
inc
xor
les
dec
inc
sub
faddp
je
fdiv
and
and
add
jb
das
mov
out
add
dec
pop
loope
cmp
mul
jo
shl
shr
repnz
cmps
xor
outs
sbb
xlat
add
ins
out
add
ficom
adc
sub
inc
pop
jmp
xchg
or
sub
shl
(bad)
repz
lds
jge
repnz
xchg
shr
enter
cld
add
and
scas
test
mov
(bad)
int
(bad)
out
aad
or
ss
sub
inc
add
sbb
fs
pop
nop
sar
cmc
and
fwait
icebp
sub
mov
cli
inc
and
mov
lar
adc
mov
in
xchg
mov
pop
sbb
das
aam
add
cwde
pop
test
outs
scas
stc
xor
outs
cmps
icebp
xchg
dec
push
sbb
mov
jno
xor
aam
push
movs
call
cmp
push
lods
mov
je
inc
(bad)
movs
lahf
push
fimul
fild
sub
pop
fcomp
pop
in
in
xor
div
cmp
cmps
mov
pop
fucomp
mov
rol
mov
shr
ins
pop
in
fisttp
dec
dec
push
jb
dec
cmp
cwde
loop
inc
add
push
inc
jbe
mov
retf
retf
mov
inc
mov
les
dec
popf
gs
adc
pushf
ret
xor
sbb
outs
push
and
xchg
fstp
icebp
mov
loop
and
sub
icebp
jle
enter
jp
in
arpl
push
sub
fdivp
retf
cmp
enter
cmp
fnstcw
std
xchg
mov
dec
lahf
pop
neg
cmp
int3
scas
paddsb
cld
inc
ins
call
inc
das
sub
repnz
aas
(bad)
or
sub
ror
xor
mov
cmp
hlt
cmp
push
mov
push
jnp
pop
mov
lds
sbb
push
and
pop
cmp
mov
lods
xchg
add
mov
push
mov
adc
mov
or
inc
cwde
inc
mov
and
pop
js
inc
stos
adc
pushf
xchg
movs
into
xchg
mov
aad
pop
in
jle
xchg
push
movs
pop
cs
int
cmp
xchg
scas
popa
jecxz
push
xor
es
int
out
dec
out
repz
int
mov
pop
iret
popa
retf
(bad)
retf
inc
or
cmp
inc
lods
je
sar
mov
push
jl
int
xchg
loop
(bad)
fwait
stc
sub
dec
sar
sub
add
cdq
mov
and
push
xchg
ror
aad
and
push
sahf
psrad
(bad)
es
(bad)
xchg
xchg
jle
retf
scas
ss
fstp
mov
data16
cwde
lods
xor
jae
imul
daa
les
mov
mov
movs
popf
push
xor
fwait
rcr
mov
retf
xor
dec
aas
sub
sbb
mov
mov
xchg
pop
test
sub
jae
iret
mov
mov
mov
sahf
cmp
mov
dec
jne
pop
pushfw
sub
push
popf
jecxz
mov
jp
fwait
xor
ins
clc
inc
mov
data16
int
pop
xor
jae
push
jb
and
data16
das
adc
movs
lods
(bad)
mov
push
cmp
jl
cdq
cmp
mov
mov
outs
inc
rcl
js
sub
sbb
into
or
adc
lock
icebp
xor
in
loope
movs
inc
xchg
add
(bad)
and
(bad)
aaa
adc
jge
cmc
adc
gs
scas
movs
push
xor
fdivr
dec
mov
cld
lea
call
retf
stc
cmp
scas
rcl
outs
retf
movs
fcom
or
pop
jp
and
inc
pushf
stc
dec
push
jl
sbb
rcl
cmp
pop
pop
iret
and
(bad)
in
mov
in
ins
xor
inc
add
cwde
into
sbb
nop
jae
sti
push
in
dec
enter
pop
stc
sub
jmp
daa
jmp
jmp
inc
ret
mov
out
int
push
push
add
(bad)
shl
push
inc
call
rcr
in
inc
jp
test
fstp
dec
popa
dec
je
mov
stc
pop
mov
outs
push
pop
push
mov
fmul
mov
dec
inc
shr
sbb
add
push
ret
adc
cmp
cmc
sbb
test
add
(bad)
fst
cmc
retf
ds
in
push
std
jg
outs
(bad)
mov
jl
add
push
sbb
popf
in
popf
outs
sbb
js
adc
mov
lahf
adc
lods
push
sub
arpl
int
adc
in
ins
dec
cli
lea
xor
pop
ins
fs
push
push
push
fdivr
enter
mov
dec
repnz
and
sahf
adc
pop
sti
fwait
not
bound
xchg
inc
sbb
dec
lea
lea
fisubr
es
(bad)
push
sub
jb
enter
fnstsw
lods
mov
inc
mov
jmp
lods
sbb
das
in
je
pusha
sub
lea
fdiv
sbb
mov
out
retfw
div
add
sti
into
add
ins
into
mov
lods
adc
push
stos
int3
mov
xchg
test
adc
repnz
aam
push
scas
out
dec
mov
and
mov
jmp
dec
mov
xchg
outs
not
push
add
pusha
outs
dec
addr16
js
push
mov
adc
push
push
sar
adc
dec
in
out
inc
sbb
je
int
in
sbb
cmps
shl
jmp
sbb
pop
and
push
test
hlt
test
push
add
mov
ret
and
ins
inc
push
jmp
int
clc
add
test
jbe
inc
push
mov
(bad)
and
mov
mov
ficom
or
fs
mov
sbb
xchg
jns
je
pop
or
or
mov
and
add
sbb
jnp
test
mov
or
(bad)
jl
hlt
push
fcomp
mov
mov
push
daa
movs
imul
rol
mov
inc
mov
cli
or
jecxz
adc
cdq
add
std
enter
dec
nop
cmp
stos
test
adc
pushf
rol
loope
xchg
pop
pop
rol
mov
adc
pop
dec
sbb
mov
ss
xor
in
pop
cwde
xor
cmp
inc
jmp
push
pop
jmp
xor
mov
retf
add
in
into
(bad)
jb
ja
xor
mov
call
repz
dec
mov
sbb
push
inc
das
xor
scas
dec
add
scas
addr16
add
adc
add
add
add
add
add
add
add
add
adc
add
and
adc
and
inc
adc
push
push
inc
push
push
(bad)
fiadd
or
add
add
add
cmc
push
jle
cmc
mov
jns
mov
stos
jo
mov
cld
inc
cmp
sbb
jae
retf
mov
cli
ffreep
cmp
xor
add
add
(bad)
test
leave
jl
push
enter
xchg
jmp
adc
cmp
ret
lds
push
cmps
daa
adc
xchg
(bad)
pushf
inc
add
pusha
cmp
sahf
inc
inc
mov
xchg
pop
dec
and
bound
push
sub
pop
add
push
push
sbb
sub
mov
arpl
inc
xchg
cmp
pop
pop
cwde
fidivr
inc
cld
int3
xor
sub
dec
xchg
frstor
jnp
pop
xchg
lods
ins
rol
mov
add
jae
stos
adc
adc
adc
adc
adc
adc
adc
adc
push
fadd
ins
out
sbb
(bad)
or
dec
cmp
popf
sbb
(bad)
loopne
lea
mov
loop
dec
jp
fld
fmul
jle
and
mov
mov
arpl
mov
pop
xor
xchg
out
test
adc
aam
cmps
fistp
mov
out
pop
mov
xchg
iret
mov
in
mov
pop
mov
add
rcl
lods
jo
add
add
lock
test
mov
sar
into
inc
sti
fist
repnz
and
and
into
loope
cmp
mov
dec
xchg
outs
sub
in
popf
ins
push
js
movs
xlat
adc
xor
jo
pop
fstp
loope
cmp
cmps
les
in
neg
push
scas
jp
or
imul
add
arpl
inc
ficom
pop
and
mov
mov
dec
xchg
adc
xchg
mov
cmc
pop
inc
inc
pop
dec
cmp
in
out
mov
mov
(bad)
fdecstp
les
movs
ret
out
(bad)
in
lahf
ins
inc
enter
mov
cdq
cdq
xchg
cmp
int3
int3
int3
cdq
xchg
xor
xchg
aaa
dec
shl
ret
jmp
nop
cmc
pop
js
jp
xor
xor
mov
pusha
dec
dec
dec
dec
dec
dec
inc
es
cwde
out
pop
inc
inc
mov
leave
popf
out
inc
pop
stos
xlat
call
mov
mov
jmp
(bad)
scas
sub
jns
push
jns
jno
jecxz
sub
sbb
enter
and
imul
mov
sbb
push
xor
jo
mov
les
mov
xchg
mov
lods
pop
pop
not
data16
stos
(bad)
scas
addr16
ins
sar
mov
jp
out
add
inc
inc
sbb
mov
jmp
mov
xor
cmps
pop
push
pop
ins
(bad)
pusha
cmp
jns
cmp
dec
enter
aam
(bad)
scas
and
jbe
out
loope
enter
cli
mov
mov
inc
cmc
adc
test
test
xchg
adc
dec
jle
inc
stos
movs
push
or
(bad)
push
cli
in
pop
pop
jb
in
mov
dec
scas
stos
stos
sbb
shl
sbb
(bad)
ficomp
and
ret
pop
jne
mov
pop
jnp
and
dec
jp
mov
xor
fisub
stc
xor
movs
ja
mov
adc
push
cmp
pushf
jns
and
push
or
mov
and
addr16
out
cdq
jge
stos
ja
movs
mov
mov
mov
les
retf
add
test
pop
xor
hlt
xchg
add
add
push
adc
cmp
inc
add
shl
mov
add
push
ds
dec
cmps
ret
into
test
cdq
shl
cmps
shl
fwait
dec
fwait
dec
lea
xor
rcl
dec
sar
sbb
adc
lea
rcr
(bad)
cmp
dec
out
add
rcr
daa
(bad)
or
(bad)
adc
cmp
and
cmp
out
int3
fisttp
or
or
mov
mov
add
addr16
inc
stos
ins
(bad)
inc
repz
nop
test
sahf
lock
jecxz
mov
fwait
inc
repnz
mov
mov
cmp
lahf
stos
fistp
push
adc
and
jbe
mov
mov
pushw
int
icebp
add
cmp
xor
popa
lods
in
add
push
sub
inc
fstp
out
js
je
iret
dec
stos
mov
pop
xchg
les
fisubr
test
dec
push
out
add
(bad)
outs
(bad)
fdiv
push
xor
mov
in
inc
and
ins
inc
pop
hlt
mov
ds
lods
(bad)
lods
bound
jae
xchg
in
jle
or
icebp
mov
push
(bad)
test
inc
mov
sbb
addr16
dec
movs
or
mov
mov
imul
cmc
mov
lods
push
iret
or
loope
fisub
into
ret
and
push
sbb
loope
inc
fadd
or
sub
fmul
mov
xor
xor
test
xor
jnp
xchg
cmps
imul
pop
adc
push
mov
ins
push
mov
sub
pop
push
not
pop
fidivr
mov
push
inc
jb
call
jno
aad
sub
mov
push
bound
sar
or
push
jb
push
mov
xor
test
sub
jmp
xchg
enter
aam
int
arpl
push
dec
psubb
retf
jg
enter
or
test
aam
mov
mov
test
(bad)
add
(bad)
mov
out
clc
ins
aam
ins
aam
outs
mov
pcmpeqw
add
(bad)
sub
icebp
or
adc
es
fdiv
out
mov
pusha
cld
pop
outs
ret
mov
dec
or
mov
fdiv
(bad)
pop
dec
and
imul
push
sbb
ins
sti
call
push
rol
sbb
sbb
sub
stc
cmp
mov
and
pop
pop
add
data16
aam
adc
inc
mov
mov
fmul
mov
sub
xor
fdiv
popa
jge
cmp
push
movs
mov
pusha
cmps
cmp
dec
jg
adc
nop
sbb
inc
cmp
mov
fld
adc
cli
pop
(bad)
xchg
jp
jne
jmp
(bad)
adc
popa
cmp
jne
jmp
xlat
scas
or
rcl
mov
push
lahf
sub
mov
ss
add
xor
cmp
cmp
sub
sub
addr16
pop
lea
adc
fsubr
imul
mov
or
sub
dec
push
lds
mov
mov
or
push
sbb
adc
fwait
addr16
addr16
aas
in
pushf
dec
ins
aad
xor
outs
test
imul
cdq
in
jg
push
cmp
imul
mov
pop
push
push
or
mov
js
push
fadd
inc
xor
cmp
loop
add
ret
mov
cmps
imul
sub
ds
(bad)
shl
push
adc
mov
cli
lods
cmp
lods
rol
lock
retf
mov
pop
(bad)
lock
dec
pop
pop
jno
addr16
cmp
fs
cmp
repz
push
pop
out
es
sahf
lock
not
in
push
call
fwait
mov
cmp
push
cmp
mov
xchg
mov
in
dec
push
mov
pop
mov
pushf
inc
xchg
xor
xor
xchg
imul
and
adc
ja
imul
loop
repz
push
imul
xchg
xor
mov
popf
jbe
and
xchg
xor
inc
int3
int3
push
add
xor
outs
mov
dec
jmp
and
adc
adc
mov
inc
rcr
xor
or
lods
fnstcw
and
add
adc
fadd
es
out
xor
or
dec
and
nop
pop
dec
or
mov
popa
repz
fisub
leave
test
retf
leave
adc
arpl
xchg
xchg
pop
nop
inc
loop
iret
rcl
push
imul
xor
test
mov
iret
fdiv
or
addr16
and
iret
push
sti
test
jle
inc
adc
cli
jg
les
xor
add
add
push
or
add
add
add
add
add
adc
xor
lock
inc
popa
adc
ret
xor
jo
(bad)
fiadd
or
add
or
add
out
inc
mov
icebp
adc
adc
adc
adc
adc
jle
test
in
mov
jmp
mov
mov
repz
clc
inc
or
mov
mov
cdq
push
fdivr
push
xchg
sbb
ret
mov
cwde
enter
repz
ret
das
jb
int3
ja
cmc
dec
jo
loope
pop
ror
cmps
jnp
pop
test
iret
stos
mov
mov
or
push
mov
pop
std
adc
aad
xchg
jg
ins
arpl
sar
(bad)
loop
pop
ja
and
outs
in
pop
arpl
fldln2
fstp
pop
in
rcr
fst
aad
aas
cmovne
into
fnstcw
(bad)
xor
inc
fwait
sbb
dec
in
cmp
mov
inc
xchg
shr
pop
fbstp
mov
ja
inc
xor
lods
out
into
jp
clc
mov
and
push
xchg
lea
jecxz
jae
outs
imul
push
lds
mov
xchg
push
mov
sar
mov
sbb
inc
inc
inc
(bad)
mov
iret
mov
stos
scas
push
repnz
sahf
aas
int
mov
fwait
aam
out
test
pop
mov
in
inc
ror
mov
sti
or
icebp
jnp
mov
dec
push
push
inc
cmp
and
mov
adc
inc
aam
(bad)
pop
cld
xchg
out
adc
cld
or
clc
adc
add
imul
std
lea
bts
ins
jae
cmps
pop
bound
rcl
xor
dec
and
loopne
sar
jmp
push
cmp
sub
jle
test
cs
into
dec
mov
adc
aam
test
inc
inc
and
movs
and
push
and
push
push
xchg
or
nop
jne
and
xor
add
jmp
jmp
or
and
xchg
or
jge
inc
sub
outs
repnz
xor
inc
in
mov
stos
jnp
sbb
and
dec
push
scas
inc
sar
sbb
sti
fld
push
out
adc
pop
mov
jb
jne
out
xchg
(bad)
sub
fist
cmp
mov
neg
fstp
das
outs
shl
and
clc
adc
jno
mov
or
pusha
retf
in
pop
inc
cli
push
test
and
or
pusha
xchg
out
lahf
outs
outs
ja
sahf
jae
fistp
into
jnp
xchg
and
loope
fistp
xchg
mov
push
mov
jecxz
outs
sub
inc
mov
push
cmc
scas
shr
popa
dec
hlt
pop
fdivr
das
(bad)
and
push
test
ror
add
add
add
add
add
add
add
add
add
adc
xor
and
and
inc
push
push
inc
inc
adc
or
add
add
add
aad
jle
repnz
jg
jns
arpl
add
icebp
fldcw
and
repz
xchg
aaa
mov
cmp
test
pop
scas
and
jo
dec
sar
push
in
popf
ret
jns
mov
fdiv
aam
mov
cwde
or
inc
jmp
mov
inc
mov
(bad)
outs
jo
fucomip
retf
daa
es
xchg
adc
inc
movs
lahf
bnd
dec
shl
aaa
add
pushf
push
and
add
sar
push
xor
jg
jmp
clc
xor
les
ret
repnz
das
adc
sub
adc
push
pop
mov
jg
std
xor
mov
xchg
dec
sbb
pop
xor
xor
adc
adc
iret
push
les
arpl
and
jbe
push
call
inc
cli
pusha
(bad)
popa
inc
and
push
bound
lods
push
out
imul
imul
jno
into
cmp
das
popa
es
jmp
(bad)
imul
in
cs
test
and
pop
movs
xlat
or
add
popa
fs
cmp
sbb
xchg
rcr
xchg
xchg
rcr
sbb
jmp
ret
xchg
push
and
mov
in
cmp
inc
adc
mov
cmp
jle
and
push
leave
fst
xor
inc
adc
dec
imul
lea
mov
jle
dec
add
jmp
jle
and
push
leave
fst
std
mov
push
ret
enter
test
sub
lods
jmp
movs
imul
or
or
xchg
dec
jecxz
(bad)
mov
push
mov
mov
mov
push
sbb
and
pop
mov
bound
dec
outs
and
out
out
pop
fs
in
or
dec
in
or
das
das
sub
int
mov
sub
outs
sbb
mov
mov
jle
sub
pop
fdivr
inc
pop
xchg
or
mov
inc
in
xchg
fs
jecxz
or
test
and
mov
nop
dec
lock
or
lds
push
fdiv
arpl
push
mov
sub
popf
test
xor
dec
sbb
push
fcomp
fcomp
adc
mov
mov
mov
sub
adc
add
pop
mov
adc
(bad)
sub
or
nop
retf
pop
inc
call
fstp
inc
push
mov
sbb
mov
xor
xor
fwait
inc
popa
jae
out
jb
gs
test
xor
pop
loope
dec
sub
add
mov
loope
push
sahf
jmp
in
xchg
push
cmp
xchg
in
push
mov
fcomi
inc
xor
out
add
repnz
stos
pop
xor
dec
arpl
xchg
sub
inc
test
push
loopne
icebp
sbb
arpl
mov
push
sbb
ror
add
and
inc
adc
dec
or
pop
cwde
out
stos
or
dec
retf
sbb
das
push
pop
xchg
sub
jle
dec
push
pop
mov
sub
mov
mov
inc
bound
sub
aam
mov
inc
pop
xlat
sbb
dec
xor
into
mov
movs
dec
xchg
test
push
xchg
sbb
sbb
retf
push
mov
(bad)
dec
jnp
sahf
movs
pop
mov
mov
and
mov
(bad)
cwde
sub
push
and
test
inc
dec
lea
sub
inc
aam
sbb
movs
jle
push
(bad)
cmp
repz
pop
jno
push
int3
mov
mov
mov
imul
push
sar
or
mov
es
aas
out
cli
lea
sub
cwde
adc
fwait
sbb
lods
add
jo
xchg
push
adc
ret
das
or
inc
sbb
dec
aad
mov
or
cmp
mov
leave
or
jb
pop
out
iret
sub
and
ret
sbb
push
mov
add
int
in
shr
call
xor
(bad)
into
(bad)
mov
outs
imul
mov
inc
inc
es
hlt
pop
stos
dec
ror
cmp
dec
call
adc
into
ret
shl
pushf
mov
mov
and
jbe
pop
arpl
out
or
cdq
int3
jl
jae
lods
sbb
mov
mov
ins
shr
das
xchg
sbb
xor
call
addr16
mov
sub
inc
icebp
sar
jae
or
je
mov
or
cmp
arpl
dec
shl
mov
xor
or
and
adc
fwait
lea
addr16
mov
add
adc
xlat
or
(bad)
ss
dec
fsub
movs
jo
movs
inc
ds
dec
das
stos
hlt
inc
pop
dec
in
in
int3
mov
into
shr
dec
push
push
dec
add
ret
lods
sbb
(bad)
cmp
xchg
or
xor
mov
inc
xchg
cmps
xchg
int
dec
(bad)
or
xor
mov
sar
dec
leave
add
test
test
enter
aaa
outs
push
pop
test
ins
pop
pop
aam
pop
je
xor
sbb
rcr
imul
lods
pop
cli
mov
mov
daa
mov
mov
icebp
mov
call
sub
inc
add
fidiv
pop
stc
sub
and
(bad)
std
cwde
popa
movs
cmp
jge
jns
xchg
int
cs
pop
xchg
cmc
or
outs
rcl
(bad)
mov
mov
add
push
(bad)
mov
dec
scas
xchg
pop
and
adc
dec
scas
cdq
pop
and
mov
cmp
push
ret
cmp
mov
(bad)
lahf
sub
xchg
sar
nop
repnz
inc
xchg
pop
add
adc
xchg
lea
std
ror
add
and
sbb
push
ret
movs
or
mov
xchg
jmp
add
call
jecxz
cwde
push
mov
imul
or
(bad)
sbb
xchg
retf
gs
pop
ret
or
dec
ss
xchg
xchg
dec
jo
shl
inc
aad
dec
loopne
pop
retf
scas
imul
or
mov
inc
call
call
imul
out
inc
stos
or
xchg
push
and
rcl
mov
add
in
pop
bound
mov
imul
lods
sub
ret
sbb
xchg
leave
xor
push
sbb
or
mov
push
test
aaa
add
jno
jmp
lahf
sbb
mov
je
adc
cmp
xchg
(bad)
jno
mov
stos
aam
xchg
xor
dec
add
repnz
mov
das
push
sub
mov
fcomp
pop
mov
push
mov
sub
mov
stos
pop
stos
push
stos
sub
adc
or
cmps
stc
or
cmps
or
lods
int
retf
test
mov
mov
and
sub
mov
pop
adc
loope
xchg
cmp
mov
inc
ss
xor
mov
les
imul
test
jge
sub
mov
lods
push
enter
lock
mov
mov
in
mov
sub
add
adc
enter
adc
in
add
(bad)
les
xor
add
add
add
push
add
add
add
add
add
add
adc
and
and
xor
jno
mov
xor
(bad)
fiadd
or
add
or
add
add
fist
pop
pop
inc
movs
sbb
fidiv
or
pop
dec
test
das
test
ror
(bad)
bnd
aaa
dec
or
adc
mov
mov
push
push
scas
mov
fidiv
push
cmps
ins
lods
jge
les
xor
in
pop
adc
mov
push
xchg
neg
enter
inc
ret
fdivr
add
push
scas
inc
inc
sub
mov
pop
pop
leave
loope
lods
mov
ja
adc
lods
fdivr
jne
mov
cmps
adc
mov
call
cmp
and
pop
xchg
xor
adc
inc
xchg
lahf
adc
fadd
fwait
lods
aam
pop
mov
cmc
fwait
push
ret
stos
xlat
pop
hlt
hlt
mov
loope
cmp
test
push
movs
scas
or
push
lods
hlt
std
jb
inc
push
fbstp
mov
jns
push
shr
(bad)
repnz
lds
dec
push
nop
add
hlt
test
mov
out
aam
cmp
mov
out
push
inc
adc
test
dec
pop
xor
outs
adc
or
call
jnp
add
out
ror
loope
enter
xchg
pop
jl
xor
inc
pop
adc
pop
mov
mov
mov
and
xchg
adc
mov
push
ins
mov
fild
xor
xor
inc
fs
and
sbb
cmp
push
dec
(bad)
addr16
cwde
in
pop
jnp
out
mov
cmp
cmp
sti
out
retf
sub
jns
xchg
in
cmp
jmp
fs
dec
or
stc
mov
stc
call
pop
push
jmp
sub
or
in
jmp
mov
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
jns
add
add
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
inc
add
add
add
add
add
or
or
or
or
or
adc
adc
adc
adc
adc
adc
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
(bad)
fild
inc
add
add
push
push
or
push
or
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ret
or
push
add
add
add
adc
inc
add
add
add
add
add
add
(bad)
fiadd
or
add
add
add
adc
push
mov
inc
inc
mov
pop
lea
pop
test
push
push
mov
xor
fs
cdq
(bad)
push
adc
push
movs
call
(bad)
mov
push
icebp
cwde
push
test
xor
or
push
push
xchg
movs
sbb
xchg
push
xor
add
mov
dec
push
xchg
inc
data16
mov
repz
xchg
das
sub
ret
sahf
push
mov
movs
sbb
pusha
sub
aam
xor
pop
mov
push
mov
push
sbb
xor
add
xor
and
dec
adc
sub
mov
sub
lea
cmp
jne
call
sbb
mov
sub
ret
lea
push
push
call
test
push
or
add
mov
xchg
and
call
popa
ds
jmp
pop
loopne
xor
add
push
push
test
lea
popa
popa
inc
dec
xor
push
test
push
or
inc
add
add
add
movs
sub
mov
and
xchg
xchg
(bad)
pop
lea
stos
int
cmp
ret
or
shr
call
int3
int3
aam
adc
movs
add
mov
mov
add
fld
sub
jl
mov
call
push
dec
pop
outs
inc
fdiv
or
test
ret
adc
int3
sub
call
push
add
inc
movs
add
or
add
add
adc
sbb
rcr
adc
iret
retf
xchg
es
jmp
ret
mov
nop
cmp
pop
xchg
loop
test
adc
inc
aam
add
sub
int
dec
xor
pop
pop
call
inc
add
add
inc
adc
xchg
bound
fwait
inc
call
lahf
cmp
outs
push
xor
pusha
mov
pop
dec
(bad)
cdq
push
(bad)
jmp
rcl
mov
push
mov
mov
xor
or
xchg
push
add
add
push
inc
adc
add
dec
sbb
rcr
jae
into
dec
nop
hlt
stc
call
xchg
pop
dec
pop
sbb
hlt
mov
pop
jle
inc
test
mov
or
popa
pusha
aam
push
adc
imul
or
xor
test
ins
mov
sbb
fxch
dec
nop
cmc
xchg
mov
jp
test
(bad)
jg
iret
inc
jae
scas
int
cmp
ss
and
xor
xor
or
mov
inc
push
push
test
dec
xor
sub
(bad)
or
xor
and
sub
gs
jp
data16
inc
jbe
ss
ins
mov
aas
lahf
cmp
mov
iret
mov
or
push
xor
mov
dec
xor
pusha
sbb
adc
sub
mov
xchg
bound
rcr
mov
jle
ss
(bad)
xchg
mov
je
aaa
cmp
pop
fdivr
lahf
inc
fidivr
ret
push
test
push
or
pusha
sbb
pop
call
stos
and
inc
push
inc
add
ror
nop
repnz
retf
out
dec
data16
adc
(bad)
(bad)
pop
cmps
lods
and
arpl
cmp
jno
pop
xchg
cmps
stc
out
cmp
fwait
int3
pop
sbb
aaa
fst
int3
sbb
mov
pop
push
mov
movs
and
jmp
movs
sbb
push
mov
adc
movs
adc
mov
(bad)
mov
ins
gs
xchg
sub
add
xor
inc
add
les
and
test
inc
mov
push
xor
sub
sbb
aad
enter
cmp
cmp
es
test
xchg
push
bound
fimul
sbb
fidivr
ror
in
leave
into
fwait
push
mov
(bad)
fucomi
fs
push
frstor
fs
shl
xor
jp
stos
retf
jle
out
or
retf
cmps
inc
dec
mov
cdq
test
or
iret
(bad)
cld
das
arpl
jbe
sysret
stos
jbe
imul
fbld
sub
test
xor
sub
mov
push
jno
(bad)
stc
stc
(bad)
or
mov
jmp
xchg
push
sub
mov
popa
push
inc
mov
jno
jb
out
push
mov
jle
rcl
jne
sub
add
rcl
add
jp
push
das
popf
ins
jl
fdivr
cmp
mov
jmp
mov
cmp
lahf
sbb
jge
and
and
xor
or
bound
std
sbb
(bad)
xor
movs
mov
mov
jae
es
bound
arpl
jl
stos
sahf
cwde
cwde
(bad)
mov
jmp
mov
or
leave
inc
rcl
and
xchg
repz
ret
mov
das
jge
out
ja
lahf
dec
sbb
fmul
jmp
cmc
sub
xor
push
pop
sbb
cmp
mov
mov
gs
pop
lahf
mov
popf
xchg
hlt
xchg
mov
jbe
xor
jmp
cld
stc
movs
hlt
lgs
mov
hlt
test
push
pop
and
popf
lahf
mov
pop
mov
sbb
cs
dec
out
shr
retf
jnp
ret
xchg
dec
leave
mov
jl
sti
dec
aad
inc
popa
rcr
pusha
jnp
jne
out
popf
in
lock
out
pop
das
inc
xor
mov
cmp
cmp
les
and
outs
push
sti
push
push
imul
mov
fisub
fst
pop
rcr
pushf
(bad)
jae
mov
mov
cmps
cmps
cmc
out
jmp
pop
aam
int3
xor
push
fwait
dec
mov
cwde
bound
mov
ss
jns
push
mov
ror
mov
je
and
mov
dec
ins
cmp
xchg
nop
cmp
lods
std
popf
ss
dec
mov
jne
rcr
add
push
stos
je
mov
lods
fwait
repnz
sahf
jns
shr
adc
pop
pop
fsubr
pusha
aam
push
add
mov
fwait
or
push
sub
in
cli
or
pop
je
push
xchg
ins
ins
aad
cdq
adc
sub
imul
mov
jbe
aaa
in
mov
ins
out
jo
ins
and
inc
add
in
call
or
push
ret
mov
cdq
clc
das
jbe
jne
aam
adc
aad
repnz
push
jmp
sbb
fstp
sahf
out
retf
cmp
(bad)
xor
jb
addr16
add
xchg
push
addr16
jp
je
iret
cmps
push
data16
cdq
ins
cmp
(bad)
cmp
movs
sub
ins
push
mov
dec
push
lds
fsub
cmps
stos
cmp
mov
pop
lock
je
das
cmps
cmp
imul
into
(bad)
jmp
pop
mov
movs
rcr
imul
out
es
sbb
mov
sub
mov
mov
adc
(bad)
cdq
sub
mov
out
aas
dec
out
in
retf
int3
dec
xchg
repz
imul
mov
and
inc
xor
inc
jle
mov
lahf
das
mov
inc
dec
bound
inc
int3
inc
inc
cmp
mov
jle
scas
stos
pop
jmp
cmp
pop
jnp
lea
test
mov
icebp
in
int
mov
aam
data16
das
fcom
pop
sti
fwait
dec
mov
movs
mov
gs
(bad)
ins
out
imul
lahf
jae
jo
pop
dec
test
add
add
mov
push
xchg
test
mov
xlat
into
outs
test
mov
sahf
xchg
into
push
jnp
(bad)
(bad)
mov
gs
pop
aam
sbb
push
shl
pop
jge
mov
retf
pushf
icebp
outs
push
mov
cs
pop
dec
popf
fsub
pop
ficomp
xor
ss
stos
cdq
cmc
or
pop
mov
aam
mov
xchg
das
(bad)
test
stos
jp
(bad)
ror
aad
add
out
setp
xchg
cdq
jp
stos
lds
push
fld
inc
mov
add
call
fucomi
xor
ds
jno
mov
ins
outs
sub
cs
shr
sub
out
inc
dec
out
ss
iret
pushf
es
rcr
sbb
shl
gs
push
jo
push
add
rcl
inc
js
(bad)
pusha
xlat
cmp
neg
sbb
retf
jb
dec
hlt
adc
into
xor
sub
xchg
je
in
outs
ss
aad
das
sub
leave
jge
xor
cmps
mov
cdq
or
fbstp
cmp
imul
cmp
test
stc
lahf
push
sar
mov
sahf
mov
in
inc
mov
push
mov
xor
and
jp
les
ret
lods
idiv
inc
xchg
pop
cmc
das
lea
cmc
inc
mov
cld
xchg
lods
push
call
cs
fwait
mov
pushf
ret
xchg
ret
mov
aad
sub
in
lds
int3
cmps
sahf
test
sbb
in
lahf
add
ficomp
mov
fstp
pop
add
pop
outs
inc
js
(bad)
bswap
ja
jge
push
mov
xchg
call
loopne
mov
test
sub
add
out
jnp
loop
ret
outs
dec
fwait
arpl
int3
js
retf
push
(bad)
retf
sti
(bad)
jg
push
stos
sub
leave
test
sbb
jae
out
repz
mov
and
shr
push
sbb
mov
out
call
hlt
retf
out
pop
out
ret
jmp
pop
xchg
mov
xchg
adc
or
dec
adc
xor
addr16
popf
popf
push
rcl
sub
xchg
cwde
mov
fisub
in
dec
js
pop
pop
push
pop
add
stos
mov
jl
ret
mov
mov
(bad)
fidivr
fisubr
movs
push
dec
nop
mov
or
and
xchg
movs
stos
mov
push
outs
addr16
sub
pop
push
bound
(bad)
or
sbb
mov
popf
jo
daa
fcom
pop
sbb
fcom
mov
pop
cwde
les
inc
(bad)
out
movs
cmc
fbld
push
sub
call
adc
xchg
retf
pop
xor
dec
stos
stos
mov
push
adc
jmp
enter
xchg
push
aam
pop
popa
cmps
in
adc
push
or
push
inc
and
movs
stos
imul
call
push
test
add
xor
xchg
and
nop
xchg
dec
push
fist
inc
mov
not
dec
addr16
push
sbb
aad
icebp
mov
inc
push
or
in
adc
or
stos
mov
mov
movs
(bad)
outs
pop
mov
mov
push
xchg
mov
sbb
inc
add
add
and
adc
inc
push
jecxz
mov
dec
xchg
lds
fcom
jp
mov
data16
xor
xor
pop
push
fsubr
adc
dec
cmp
popf
push
loop
ss
repz
fsubr
dec
push
lea
add
add
dec
and
test
js
rcl
movs
mov
mov
leave
out
push
xchg
mov
push
shl
inc
mov
or
pusha
ret
stos
retf
loope
or
add
sub
push
push
fcomp
or
xor
add
inc
and
mov
cwde
lea
cmp
and
adc
xor
push
ins
iret
jl
xchg
rcr
cli
cmps
jge
mov
cmp
das
xchg
outs
sbb
cmps
(bad)
into
sahf
in
add
xor
or
push
xor
inc
mov
sbb
adc
or
and
xchg
or
adc
sub
mov
or
and
xor
(bad)
push
test
(bad)
mov
fwait
jae
(bad)
push
push
jg
jl
shl
pop
stos
mov
push
fwait
sbb
jnp
push
push
mov
sbb
push
cdq
lods
aam
xor
xor
add
dec
adc
xchg
movs
mov
lea
cmp
dec
popf
and
xor
push
fidivr
sbb
add
cli
call
pop
retf
push
fisttp
mov
cmps
jns
(bad)
push
mov
dec
add
rcl
fst
xchg
(bad)
fnstenv
sbb
mov
add
add
inc
or
sub
mov
mov
mov
pop
inc
stos
repnz
ja
mov
lea
sbb
cmc
mov
jno
ss
test
adc
jmp
pop
test
dec
xor
mov
add
or
dec
inc
push
xchg
movs
or
rol
push
and
cmp
sub
jo
iret
stos
test
out
pop
xor
das
cmp
mov
sahf
fwait
mov
imul
add
pop
push
pop
xchg
dec
pushf
push
xchg
push
push
push
lods
sub
mov
add
dec
and
mov
mov
bound
call
jg
xor
dec
movs
pop
(bad)
aaa
mov
jnp
movs
sub
(bad)
lahf
mov
mov
das
cmp
into
out
jp
into
scas
sahf
retf
in
inc
adc
sbb
leave
and
movs
sbb
aam
mov
add
dec
and
xchg
xchg
inc
push
dec
and
adc
xchg
popf
aad
(bad)
lds
mov
cmp
in
aas
retf
out
cs
outs
push
ja
cmp
push
pop
pop
push
ficomp
xor
dec
ror
xchg
adc
xor
test
or
push
or
nop
xchg
mov
movs
fisub
jecxz
loop
inc
adc
test
sub
test
pushf
mov
clc
hlt
mov
dec
les
idiv
pop
fisub
push
mov
retf
inc
inc
mov
push
test
adc
aam
in
dec
and
push
shr
jne
imul
ins
movs
shr
(bad)
int
xor
cmp
daa
jmp
(bad)
push
or
dec
out
(bad)
rcr
pop
push
fstp
call
sub
aam
xor
call
es
add
inc
sbb
sub
jge
mov
push
int3
shl
aad
inc
daa
(bad)
cld
leave
jb
jns
xchg
cmovs
div
jmp
lock
ds
fcmovu
sahf
icebp
inc
pusha
add
push
pop
or
dec
xor
cdq
cdq
cwde
xor
dec
jns
in
adc
push
fsubr
xlat
or
and
add
fld
push
test
mov
jne
push
sbb
pop
iret
fisttp
cmp
or
mov
int
jp
sub
inc
push
cwde
push
push
lea
inc
in
int3
int3
sbb
push
xchg
xchg
push
push
mov
sbb
shr
cwde
scas
mov
cmp
rcl
cli
cmps
call
jl
imul
outs
dec
xchg
repz
ins
in
adc
aas
es
outs
outs
dec
js
or
sbb
jae
dec
sbb
loopne
jl
ins
inc
mov
push
(bad)
leave
in
jno
mov
test
xor
(bad)
inc
jns
inc
jno
rcl
out
out
lods
lahf
icebp
mov
hlt
sbb
cmps
movs
push
adc
fwait
and
fsub
stos
dec
lds
cmps
cmps
cmp
mov
aam
cdq
add
or
lds
test
(bad)
popa
push
cmp
in
xchg
or
mov
in
loope
push
and
pushf
(bad)
push
call
inc
sbb
aam
push
leave
ror
(bad)
xchg
push
mov
xor
icebp
xor
cs
aaa
adc
das
iret
fidiv
fcomp
mov
add
and
mov
mov
out
mov
mov
outs
fdivr
push
lahf
dec
mov
imul
inc
lods
jge
jae
pop
cs
xchg
cmc
sahf
sar
stos
fistp
aam
arpl
dec
cwde
fldcw
retf
in
lahf
push
dec
or
sub
cdq
xor
lds
imul
push
div
mov
inc
xchg
xchg
xor
adc
inc
inc
fwait
mov
je
aad
mov
jns
push
push
or
pop
and
inc
dec
mov
(bad)
jmp
xchg
sbb
mov
push
das
int3
in
dec
into
pop
enter
xchg
into
add
inc
test
popf
pop
inc
aad
sbb
mov
call
stos
jae
mov
out
data16
stos
sbb
pop
push
les
lea
pop
pushf
jo
out
mov
in
fsubrp
mov
cmp
outs
or
int
mov
or
ins
cld
push
in
in
inc
aaa
popf
leave
inc
ins
mov
retf
mov
pop
jnp
cli
cmp
test
test
rcl
mov
add
mov
jg
jns
das
fxtract
xchg
dec
popa
inc
imul
dec
xor
push
xor
addr16
les
xlat
retf
pop
cmp
imul
jge
cmp
jne
in
mov
inc
adc
call
lds
sub
push
movs
or
in
push
hlt
push
mov
mov
hlt
pop
jne
and
sub
loopne
mov
dec
cdq
popa
je
pop
inc
mov
inc
sub
jns
mov
xor
cld
iret
lea
add
dec
cwde
ss
adc
idiv
or
mov
(bad)
jnp
push
jg
xor
ja
push
ins
mov
cwde
xor
xor
aad
lods
gs
mov
mov
in
xchg
(bad)
jmp
nop
sub
or
pop
int
pop
push
stos
mov
lods
ins
popa
aam
jmp
ins
add
outs
sub
(bad)
fs
jbe
dec
jns
jecxz
lods
mov
dec
mov
inc
mov
jns
in
lahf
popf
sub
dec
mov
jp
mov
je
cmp
out
pop
push
push
push
inc
sahf
ret
inc
cmps
test
mov
arpl
mov
cmp
mov
push
push
sub
sbb
leave
push
popf
sbb
lds
mov
dec
cmp
push
fcmovne
pop
or
pop
mov
fstp
sbb
xchg
test
jle
rcr
push
in
aam
mov
outs
cmps
aaa
mov
xchg
leave
push
mov
outs
cdq
jbe
imul
mov
mov
fsubr
and
shl
rcl
loope
stc
idiv
push
sbb
(bad)
ss
lahf
dec
sahf
mov
in
sbb
arpl
mov
sti
xchg
xchg
add
(bad)
ins
dec
mov
cmp
cmp
ds
adc
sub
imul
dec
jae
lds
mov
mov
sahf
ja
mov
sti
gs
fldl2e
cwde
test
mov
sub
data16
imul
adc
out
jbe
call
bound
scas
xlat
jno
dec
xor
pop
xchg
adc
mov
stos
pop
push
data16
xchg
loop
inc
mov
dec
out
cmp
fadd
movs
hlt
jle
pop
mov
dec
in
jbe
(bad)
arpl
xor
xchg
(bad)
cmps
push
out
inc
ins
mov
and
loop
ss
lock
inc
movs
fcmovne
ja
(bad)
jmp
push
repz
ja
movs
xchg
and
jo
xchg
sub
inc
adc
mov
ret
push
xchg
movs
ret
jge
(bad)
pop
jbe
mov
ret
leave
push
jmp
pop
xlat
push
fbstp
into
loopne
retf
pop
mov
pop
dec
int3
pop
sub
std
pop
mov
mov
stc
fcomp
cmp
fisttp
mov
jmp
fadd
sub
dec
xchg
xor
mov
sbb
test
sbb
xor
fidivr
int3
stc
into
pop
stos
dec
dec
data16
mov
iret
inc
aaa
xor
in
inc
mov
inc
stc
jmp
pop
out
rcr
ds
or
out
mov
sub
fcomp
enter
mov
xchg
xchg
call
push
jne
jb
jb
not
jmp
mov
test
ja
xchg
push
fld
push
dec
ficom
mov
pop
push
stc
shl
jl
mov
stos
pop
inc
fbstp
pop
lahf
push
out
xchg
sbb
test
push
(bad)
mov
push
ja
lea
ss
jecxz
out
lea
cmp
mov
sti
add
sbb
and
push
push
lods
(bad)
fisubr
int3
inc
xchg
sti
pop
xchg
pop
xchg
stos
outs
jle
or
test
add
vpcmov
cmp
xor
in
jl
and
hlt
push
inc
cmps
mov
out
out
add
js
push
sbb
xchg
jno
add
sbb
jae
pop
(bad)
pushf
mov
movs
nop
push
mov
neg
arpl
sbb
call
aam
inc
push
or
into
sub
jmp
ror
and
cmp
push
jne
and
jg
out
movs
push
movs
jp
xchg
inc
adc
popf
jnp
sub
xchg
jmp
scas
mov
sbb
ss
call
mov
lods
addr16
imul
stc
std
xor
jae
fbstp
xchg
jne
mov
mov
mov
dec
mov
fisubr
ss
dec
cmps
mov
push
mov
xchg
cli
xchg
in
and
push
sbb
mov
and
sar
mov
push
lahf
(bad)
call
stos
(bad)
retf
bound
cmp
mov
pop
pop
dec
jne
rcr
into
lods
movs
jmp
xchg
mov
pop
dec
mov
dec
ins
xor
cmp
fistp
cld
imul
stc
mov
dec
nop
test
imul
leave
mov
in
outs
jbe
sbb
jae
push
(bad)
lea
arpl
xchg
call
adc
aaa
imul
fdivp
dec
mov
mov
inc
ror
mov
xchg
rcl
ins
sub
mov
fdiv
sub
(bad)
ja
jnp
sbb
adc
fisttp
and
cmp
jle
pop
imul
fstp
int
pusha
jo
jae
dec
mov
scas
pop
mov
pop
retf
mov
fcomp
xor
aaa
push
inc
sahf
mov
cmp
push
mov
and
xchg
xchg
jmp
push
ins
inc
out
bound
pop
cdq
data16
fnstenv
test
xchg
stos
cwde
stos
xchg
push
push
adc
ficomp
pop
jae
pop
clc
(bad)
shl
cdq
pusha
out
mov
dec
imul
fcom
cmp
rcl
mov
cdq
mov
jb
adc
fisubr
sbb
add
add
add
add
add
add
add
push
pop
(bad)
fiadd
or
add
add
add
and
add
mov
les
add
add
mov
and
bound
add
cdq
inc
add
xor
mov
xchg
adc
xchg
add
mov
add
add
retf
movs
nop
rcl
imul
inc
add
cwde
add
fs
dec
fisub
(bad)
xchg
imul
lahf
jp
add
bound
dec
add
rcl
imul
jnp
inc
add
pop
out
(bad)
out
cld
scas
imul
mov
cmovp
cmc
mov
ins
clc
cmp
push
test
neg
aam
pop
xor
cld
xlat
scas
scas
jbe
xchg
iret
push
pop
push
dec
mov
outs
push
fcmovnb
add
scas
fisubr
pop
pop
shr
repz
mov
fst
call
add
cli
push
jg
lods
jl
fnsave
jmp
and
jo
cmps
in
stos
cmc
retf
xchg
cs
mov
jle
repz
(bad)
mov
dec
sti
(bad)
xor
hlt
lods
jne
call
dec
lods
pop
fisub
push
ret
scas
add
push
movs
out
js
pop
aam
jns
(bad)
xchg
mov
pop
pop
pop
dec
fidiv
sahf
cmps
mov
inc
mov
aam
icebp
jp
add
in
jp
stc
lahf
xchg
shl
retf
outs
sti
cmps
ins
xor
movs
ficom
int3
jl
outs
mov
cli
pop
test
das
mov
dec
dec
and
fcomp
push
add
aaa
(bad)
sar
jno
and
les
lods
leave
mov
add
call
and
dec
xor
call
add
pushf
cmps
jge
dec
mov
imul
das
pop
js
sub
gs
enter
bound
ins
cmp
ss
add
pop
jge
inc
call
push
inc
inc
fwait
dec
inc
jle
test
xchg
out
jge
loopne
and
inc
stos
pusha
adc
adc
rcl
iret
(bad)
aad
jb
mov
jge
jo
dec
and
xor
and
clc
jle
mov
outs
and
(bad)
ror
add
mov
ins
dec
es
test
cmc
hlt
add
dec
jns
cmp
inc
inc
dec
sub
adc
mov
fwait
pop
sub
js
jp
push
movs
pop
retf
iret
mov
xlat
fdiv
je
add
dec
imul
mov
repz
js
xlat
rcr
push
sub
mov
xchg
fdiv
jmp
into
ins
push
rcr
add
jecxz
jl
jno
mov
pop
inc
movs
xor
test
call
in
add
in
hlt
mov
xlat
dec
retf
and
mov
jae
mov
pushf
aad
adc
(bad)
fwait
call
cmps
adc
adc
cmps
cmps
mov
fisttp
mov
mov
icebp
div
jno
jb
xchg
mov
iret
aas
stos
jmp
pop
mov
lods
sub
call
into
in
fstp
xchg
cmp
jge
push
pop
arpl
stc
inc
sar
mov
adc
js
pop
je
pop
sbb
sub
pop
fstp
jbe
repnz
ds
into
neg
mov
mov
adc
sahf
cdq
int3
ss
mov
dec
test
lea
stc
mov
xor
cwde
xchg
into
nop
ret
xchg
mov
ror
dec
sbb
add
add
add
add
add
add
add
push
pop
(bad)
fiadd
or
add
add
add
add
rcl
pusha
nop
add
dec
inc
dec
cdq
add
add
add
mov
add
add
or
add
add
add
mov
mov
add
add
add
mov
inc
cmps
sahf
adc
add
test
inc
add
xlat
and
and
outs
jp
cmp
or
hlt
(bad)
daa
in
repz
sub
mov
aas
ds
inc
imul
add
pushf
jge
sar
mov
adc
iret
outs
mov
(bad)
mov
ds
test
cmps
pop
sub
rcr
mov
lahf
sar
lods
xor
push
(bad)
leave
mov
(bad)
push
jno
cwde
inc
retf
in
ins
jb
push
(bad)
iret
mov
test
pusha
pop
mov
icebp
and
imul
or
repz
outs
cmps
cli
dec
int3
stos
shl
sahf
pop
adc
outs
mov
mov
les
pop
xor
in
pushf
lock
jl
cmp
scas
cli
seto
std
fnsave
and
jmp
lock
rcl
icebp
cmc
call
aaa
shl
push
dec
stc
not
cmps
sahf
fidivr
mov
cmps
inc
cs
cmc
jl
jmp
cmp
cmp
lods
outs
into
mov
pop
test
nop
add
retf
cmp
add
pop
mov
add
add
inc
add
mov
jmp
data16
add
add
adc
imul
add
push
add
add
push
gs
(bad)
sub
sub
or
es
fcmovnu
add
add
mov
mov
(bad)
push
mov
push
or
xchg
gs
loopne
and
cmp
mov
xchg
adc
add
ror
shr
repnz
xchg
mov
mov
mov
mov
cmps
cwde
or
jle
cmp
sbb
sub
mov
stos
add
mov
lods
test
cmps
popf
ds
shr
test
mov
or
mov
sub
jle
mov
add
jns
jnp
and
mov
in
push
out
push
fisubr
add
scas
dec
push
outs
sbb
jge
sbb
add
sub
mov
test
icebp
lods
idiv
pushf
cmps
adc
mov
je
xchg
cmp
ss
and
leave
(bad)
xchg
(bad)
jge
mov
ret
fistp
stos
sahf
and
sub
mov
stos
xor
jae
jp
dec
es
into
xchg
call
jmp
dec
sar
int
lods
stos
ror
sub
leave
pushf
retf
sub
mov
stos
mov
les
cmp
add
add
push
add
add
add
add
add
and
adc
adc
inc
pop
and
push
push
pusha
es
push
pop
inc
inc
popa
jno
(bad)
fiadd
or
add
add
add
aad
mov
add
push
stos
push
stos
aad
mov
retf
jb
mov
xor
sahf
inc
push
and
out
out
sbb
out
mov
icebp
pop
je
test
test
xchg
test
add
xchg
and
in
movs
loope
in
(bad)
sbb
lods
push
in
pushf
xchg
call
jb
dec
adc
mov
outs
inc
jge
push
jl
or
mov
arpl
inc
ins
fucomp
pop
sbb
push
call
xchg
repnz
scas
sub
sub
mov
cs
scas
cs
scas
cs
mov
mov
scas
cs
mov
scas
cs
mov
scas
cs
mov
in
inc
in
inc
scas
inc
scas
inc
scas
dec
scas
dec
scas
dec
scas
dec
scas
dec
scas
dec
scas
dec
scas
dec
scas
dec
scas
dec
scas
push
scas
dec
scas
push
scas
push
cs
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
scas
push
cs
scas
push
scas
push
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
daa
test
ret
xchg
cmp
and
mov
mov
leave
retf
xchg
xchg
push
sub
dec
cmp
adc
xor
(bad)
call
or
std
sbb
sti
sahf
mov
cmp
push
sbb
sbb
inc
mov
jbe
retf
inc
or
mov
sub
jns
pop
mov
ret
jmp
out
fidiv
or
ss
loopne
movs
movs
out
(bad)
icebp
mov
jne
sub
loopne
jmp
popf
cmp
inc
mov
pop
lods
inc
icebp
stos
nop
xor
or
cmp
dec
icebp
xor
test
mov
mov
mov
lea
das
dec
repnz
cmc
fs
in
adc
xchg
movs
dec
dec
add
cmp
dec
popf
aas
mov
aaa
inc
or
fisttp
sti
scas
mov
pop
pop
and
mov
in
in
cmp
dec
fld
call
inc
fild
and
sar
jmp
add
pop
loopne
mov
jge
mov
push
(bad)
push
je
test
sbb
daa
bound
in
push
mov
fild
inc
pop
jmp
les
icebp
addr16
popf
cmp
in
movs
in
sub
clc
es
jmp
mov
xchg
fist
repnz
movs
push
je
jne
movs
cs
aaa
jge
sub
cmc
xchg
add
push
jle
adc
jns
dec
pop
push
lods
mov
mov
cmps
mov
cmp
(bad)
pop
addr16
cld
adc
repz
jmp
push
cmc
cmc
ins
lods
out
adc
test
or
aas
adc
std
inc
sub
dec
stos
xlat
mov
jb
inc
ja
xchg
icebp
mov
(bad)
dec
push
fsub
inc
call
sub
xor
cmp
add
repnz
gs
addr16
(bad)
ja
fbstp
sar
mov
and
jecxz
pop
inc
(bad)
lock
sbb
adc
xchg
sub
jmp
xor
xor
cmp
lods
jae
scas
pop
mov
fsub
xchg
loop
pop
xchg
fcmovnb
nop
idiv
add
xchg
out
fwait
repnz
add
jmp
sub
daa
push
cld
sub
mov
call
pop
ret
push
xlat
stos
mov
scas
daa
xor
and
push
jnp
adc
dec
inc
ja
popa
loope
ins
sahf
or
aam
mov
jmp
jne
xchg
(bad)
icebp
outs
clc
sbb
cmp
cmps
in
jmp
movs
in
call
outs
mov
aam
add
push
and
dec
mov
dec
mov
push
das
loope
mov
sub
push
adc
xchg
adc
int3
cmp
xchg
fnstenv
sbb
ss
push
mov
iret
hlt
xor
dec
div
push
fucomip
lds
add
pop
fwait
pop
int
xchg
sbb
hlt
cmp
movs
(bad)
icebp
push
ja
test
jmp
sub
inc
aam
(bad)
leave
ss
or
sbb
adc
leave
fcmovnb
cmp
cmp
push
into
mov
in
in
popf
inc
repnz
xchg
pop
jb
mov
sti
cmps
dec
cdq
pop
out
push
out
or
mov
imul
mov
sub
and
in
lods
loope
fcom
push
sbb
xchg
in
loop
std
cmps
mov
mov
bound
fwait
stos
repz
sahf
pop
mov
adc
pop
call
test
int
outs
mov
aam
and
and
(bad)
pop
push
stos
push
stos
aad
mov
lods
push
aas
mov
mov
lahf
stos
cmp
xchg
push
xor
repz
cmp
aaa
and
(bad)
inc
cmp
sub
pop
push
rcl
add
fisub
(bad)
shl
jne
test
fnstsw
pop
dec
mov
cs
mul
dec
and
mov
std
rcl
push
ds
mov
pop
cmp
lahf
or
and
xchg
xor
mov
js
enter
and
dec
push
sub
xor
pop
push
nop
xchg
lahf
test
xchg
mov
dec
(bad)
adc
inc
fldcw
retf
mov
mov
fnstsw
(bad)
sbb
in
pop
test
call
retf
and
mov
scas
into
int3
stos
shl
mov
cmp
lods
add
(bad)
cs
inc
mov
lock
div
test
stos
and
mov
mov
je
mov
in
mov
repz
xor
pop
mov
adc
add
fstp
cmp
xchg
gs
cmp
fsubr
mov
inc
lahf
inc
or
cmps
jmp
pop
shl
repnz
dec
mov
jne
dec
mov
pop
imul
mulps
push
mov
fistp
mov
stos
lock
leave
xor
pusha
mov
fcomp
iret
xor
ss
cmp
mov
lods
mov
mov
xchg
addr16
lock
fwait
loop
mul
stc
ins
popf
sbb
in
mul
mov
fistp
xchg
sar
sti
sub
jo
add
(bad)
mov
push
mov
cmp
in
cmp
push
jae
stos
add
popf
mov
sub
(bad)
iret
fucom
sbb
aad
(bad)
or
test
dec
inc
pop
adc
xchg
test
dec
inc
pop
adc
sub
cmp
adc
imul
mov
lock
pop
ret
stos
inc
xor
xor
out
push
cmp
sub
sub
mov
fisub
sahf
push
int
mov
lds
pop
inc
sbb
mov
dec
aad
inc
mov
mov
mov
push
movs
imul
ja
loopne
mov
push
lods
jmp
pop
scas
jp
fs
in
push
and
jecxz
es
or
loopne
ja
mov
mov
jp
fwait
imul
push
retf
jge
shr
cmp
lock
inc
mov
inc
sub
xchg
mov
sbb
adc
cmp
movs
sti
pop
inc
in
cmps
in
dec
mov
ror
shr
xor
jb
push
les
mov
mov
pop
push
icebp
push
retf
and
inc
nop
push
mov
aam
sub
sbb
les
inc
enter
stos
std
inc
sub
scas
push
std
mov
sub
and
xor
fdiv
loop
out
fistp
inc
cmp
dec
in
ret
pop
scas
aaa
loopne
outs
mov
mov
push
(bad)
push
jg
pop
sar
pop
gs
push
jecxz
mov
jl
mov
in
leave
cdq
int3
and
arpl
mov
mov
mov
pop
sub
pop
sbb
fcomp
addr16
ins
jecxz
push
sbb
xor
aad
jecxz
jne
push
loop
pop
sbb
in
push
mov
lea
fcomi
fwait
dec
lea
stos
das
mov
call
imul
pushf
push
xor
out
cmp
les
retf
add
(bad)
or
sub
adc
adc
mov
mov
xor
cmps
pop
jg
mov
mov
movq
and
not
cli
ss
dec
sti
repnz
inc
mov
jl
leave
(bad)
mov
sub
ins
jmp
push
mov
push
cmps
ds
inc
pop
fnstenv
fsubr
aam
outs
mov
int3
popa
sub
xchg
cmp
or
in
rcl
mov
mov
or
inc
ins
fwait
sub
lahf
adc
or
and
shl
xor
je
or
mov
xor
imul
sub
add
cmps
lock
sbb
repnz
jno
jle
xchg
jg
push
lods
mov
xchg
xor
add
repnz
mov
push
adc
jbe
scas
and
push
jl
(bad)
out
ficomp
push
cmp
mov
jo
inc
test
popf
ins
daa
ja
out
aad
fs
mov
stos
adc
mov
ret
pop
dec
ins
xor
or
mov
ret
pop
dec
ins
xor
push
ror
mov
(bad)
cli
fisubr
loop
xchg
mov
(bad)
xchg
aaa
call
inc
pusha
xchg
out
or
frndint
inc
les
lock
mov
rcr
mov
aam
inc
pop
sub
mov
out
pop
xor
sbb
stos
mov
(bad)
pop
test
jecxz
icebp
mov
ror
adc
out
inc
loop
xor
in
movs
addr16
mov
jle
int
mov
in
sbb
xor
dec
adc
es
das
test
test
icebp
cmp
imul
icebp
hlt
int
test
sub
jp
jmp
adc
mov
mov
stos
aaa
push
sti
int3
lock
aad
sbb
sub
pop
imul
lock
cmp
sub
push
movs
xchg
jecxz
hlt
push
xlat
cmp
inc
in
xchg
mov
test
push
xor
dec
and
pop
pop
sar
ds
inc
lock
push
jge
fst
leave
shl
dec
les
dec
jne
cli
stos
aas
stc
adc
test
pop
leave
adc
out
sbb
cs
arpl
movs
mov
mov
mov
mov
and
(bad)
in
cmp
icebp
jbe
mov
push
in
or
xchg
adc
xchg
pusha
jbe
sbb
enter
lock
std
add
aad
pop
mov
push
sbb
and
or
sbb
das
cmp
pop
imul
add
icebp
fldcw
cmp
and
push
loope
cs
dec
clc
js
leave
mov
aam
mov
js
das
pop
sbb
cmp
into
jnp
loopne
adc
movs
inc
mov
push
pop
or
imul
nop
jae
jae
jb
jecxz
call
shl
scas
push
enter
inc
js
punpcklwd
lods
lods
sbb
add
cmc
and
shl
adc
pop
leave
lock
pop
sahf
adc
push
sub
xor
add
lods
pop
das
sub
lahf
fiadd
pop
shl
mov
test
xor
jnp
ds
lock
sbb
add
xor
lods
ds
out
imul
outs
xlat
loopne
cs
enter
stos
fld
mov
cmp
pop
mov
repnz
sbb
nop
movs
loope
addr16
cmp
mov
jae
fisttp
mov
mul
add
clc
pop
inc
lock
stc
mov
aas
fst
dec
shl
dec
into
stos
cld
and
fisubr
lds
in
stc
inc
mov
pop
push
or
aad
sub
rol
(bad)
test
jns
cpuid
test
xchg
dec
fst
enter
lock
std
add
cli
jnp
lods
retf
fild
cdq
imul
lods
retf
pop
xchg
push
enter
mov
xor
repnz
int
sbb
stos
cmp
cwde
xchg
stc
push
ret
xchg
mov
and
push
ins
int3
pop
sbb
inc
mov
imul
stc
jmp
mov
jp
xor
adc
jo
imul
sbb
nop
or
or
cwde
int3
push
retf
jg
push
dec
ret
cmps
adc
xchg
mov
fdiv
sar
(bad)
out
repnz
gs
pop
das
data16
arpl
data16
jae
addr16
jae
addr16
jnp
addr16
jnp
addr16
jnp
and
enter
retf
leave
add
inc
call
call
pushf
mov
icebp
imul
fisub
or
je
(bad)
sbb
xor
cmps
lahf
out
lock
xchg
jno
pop
pop
rol
fisttp
inc
xchg
nop
mov
in
retf
dec
mov
repnz
jbe
pop
loope
mov
mov
inc
rcl
mov
push
out
xchg
mov
mov
xor
adc
push
dec
leave
cmp
mov
loop
icebp
hlt
fdivr
pop
(bad)
stc
lds
mov
pop
lock
fidiv
sub
sub
cld
(bad)
fld
ffreep
(bad)
test
data16
sbb
pop
(bad)
in
aad
or
jno
mov
and
fcomp
sub
cmp
lahf
(bad)
push
(bad)
out
sub
push
sub
lods
push
or
push
pushf
push
jmp
mov
lods
jbe
sar
(bad)
adc
add
cmp
stc
sub
xchg
mov
adc
loope
push
lods
(bad)
ins
(bad)
push
inc
ficom
jmp
adc
sub
push
(bad)
cmp
pop
sub
push
mov
rol
inc
jbe
stos
pop
cmps
adc
(bad)
pop
push
clc
cwde
aam
mov
mov
cs
(bad)
in
mov
xor
leave
fst
sub
out
fst
addr16
push
aaa
push
sub
pushf
je
test
xor
call
push
inc
neg
dec
fst
jg
mov
retf
mov
call
push
stc
in
stc
and
push
aas
jmp
xor
mov
mov
xor
fild
xchg
fwait
add
and
push
or
add
clc
pop
stc
mov
pop
mov
or
and
adc
inc
xchg
jnp
ja
test
retf
cmp
mov
ret
inc
xor
add
aam
jns
lock
ss
int
enter
and
pop
mov
cld
in
or
adc
mov
mov
push
lods
push
cwde
or
(bad)
shl
call
jmp
pushf
ror
int3
mov
mov
jp
xchg
jo
push
pop
cmp
ret
push
imul
sbb
mov
add
jns
cmp
inc
pop
xor
or
jnp
inc
sbb
pop
push
and
and
pop
pause
in
mov
pop
cwde
test
sbb
outs
push
inc
pop
mov
xchg
cmc
mov
mov
movs
pusha
sub
push
test
sub
cmp
adc
in
xchg
adc
out
and
fs
cdq
jge
pop
xchg
popf
adc
mov
inc
jbe
mov
popf
ss
iret
arpl
loop
std
inc
sub
dec
lods
push
in
jge
xchg
inc
out
xlat
gs
dec
dec
into
cld
jge
cli
ins
cmp
xlat
lea
sahf
inc
inc
call
sti
cmps
icebp
xchg
push
stc
dec
lods
jl
out
dec
stc
out
loope
out
lock
psubusw
int3
cmp
or
pushf
inc
xchg
stos
xor
icebp
cld
push
push
sbb
test
jecxz
icebp
movs
mov
ds
dec
inc
data16
sub
xchg
les
std
pop
pop
jnp
and
mov
lock
inc
loope
(bad)
enter
ja
iret
(bad)
xchg
pop
xchg
jmp
std
jp
jne
jl
cmp
scas
pop
jp
mov
mov
sub
ss
popf
dec
add
adc
inc
and
rol
out
popf
das
sub
push
(bad)
retf
sub
dec
and
enter
repnz
(bad)
adc
sbb
or
push
jb
pop
lods
imul
(bad)
es
mov
cmps
(bad)
fnstsw
ret
aad
je
call
inc
jb
mov
add
mov
gs
gs
gs
add
sub
lods
pop
(bad)
aas
jmp
mov
mov
dec
jle
mov
lock
add
inc
fcom
shl
(bad)
stos
(bad)
in
cld
repnz
cld
xchg
push
stos
jecxz
les
push
adc
push
lods
inc
lock
xchg
push
into
or
sub
aaa
xor
jbe
loope
add
loope
inc
xchg
test
fs
push
gs
daa
inc
or
leave
repnz
inc
pop
in
pushf
pop
ret
movs
jb
rcl
(bad)
aaa
in
mov
out
lock
psubusw
cmps
jg
xchg
mov
ds
ret
dec
in
clc
out
pop
sbb
in
xchg
and
icebp
jl
dec
jo
rcr
call
pop
xchg
loop
leave
sub
cwde
retf
mov
and
cmps
iret
in
sbb
repnz
loop
mov
outs
sti
sbb
(bad)
inc
mov
jns
xchg
arpl
xor
mov
dec
popf
dec
(bad)
xor
iret
adc
loop
out
sbb
cmp
fs
nop
cmps
xor
mov
mov
xor
sbb
rcr
cli
adc
sbb
into
push
mov
loop
add
or
adc
adc
and
push
cmps
lock
jb
cwde
xchg
dec
test
sub
je
(bad)
sbb
jo
test
repnz
and
fldenv
mov
leave
xchg
sub
and
mov
sbb
dec
test
xor
repz
test
loop
loopne
inc
xchg
mov
fnsave
xchg
ret
scas
in
cmp
aad
fcom
and
add
stos
sub
fadd
arpl
test
int3
dec
shl
sahf
and
sbb
cmps
outs
jbe
les
adc
mov
push
lds
jl
lock
std
add
out
test
clc
aas
gs
loop
xchg
cmp
test
sub
movs
fldcw
cmps
mov
sahf
and
jbe
cmps
lods
ret
xor
cmp
pop
test
xlat
adc
adc
out
(bad)
pop
or
adc
sbb
daa
sbb
push
xchg
(bad)
pusha
arpl
popa
mov
ret
xchg
in
push
lock
addr16
xchg
popf
adc
sbb
mov
cmps
cs
push
ja
adc
es
inc
dec
inc
mov
sbb
mov
das
xor
out
ret
test
pushf
clc
mov
cmp
mov
fbld
pop
lods
ds
rol
dec
jnp
add
repnz
test
sbb
loope
pop
adc
mov
mov
sar
dec
sbb
cdq
stc
xchg
fstp
(bad)
(bad)
iret
cmc
shl
dec
jp
loope
ret
mov
imul
pop
sbb
ins
sub
push
jbe
jl
mov
mov
mov
mov
pop
stos
pop
or
mov
xchg
pop
popf
push
clc
inc
jge
xor
in
idiv
push
inc
jb
mov
cmp
outs
in
xchg
cmp
mov
jno
test
lds
and
fnstcw
mov
kandnw
xor
inc
adc
push
inc
pcmpgtd
(bad)
mov
sbb
out
stc
and
arpl
cmp
mov
push
sar
aas
gs
cmps
pop
cmc
add
movs
xchg
sub
push
pushf
lods
es
loopne
mul
int3
sbb
mov
jno
ficom
emms
mov
jmp
jns
adc
test
vandnps
mov
dec
or
dec
cmps
jno
dec
pop
push
cmp
or
test
packsswb
aas
jno
push
xor
je
xchg
into
mov
pop
inc
les
les
dec
xchg
sub
xor
inc
sub
daa
and
pusha
out
sbb
push
push
repz
mov
cmp
lods
je
js
jb
jne
aad
cmps
sub
cli
test
(bad)
sbb
dec
jne
adc
mov
mov
enter
sbb
sbb
jns
fstp
fs
mov
cwde
in
cdq
mov
inc
dec
sbb
shl
ret
inc
out
cmp
retf
pop
sub
dec
ins
push
dec
cmp
cmp
ds
aaa
int
jl
inc
fst
pop
gs
sub
sbb
mov
aam
jle
xchg
push
dec
sahf
and
sbb
in
sub
dec
xor
mul
leave
adc
jecxz
xlat
pop
cmp
(bad)
rol
and
xchg
fild
aas
jp
loope
dec
mov
ins
xchg
icebp
imul
ror
ret
mov
sub
test
dec
pop
xchg
ficomp
inc
mov
jne
iret
lock
stos
js
jg
in
mov
mov
jmp
sub
iret
dec
repz
arpl
inc
enter
dec
ret
pop
cdq
movs
xor
fnstsw
lds
aas
sub
xchg
push
jo
sbb
inc
cmp
data16
add
push
mov
jmp
adc
in
mov
mov
jmp
push
js
hlt
jecxz
cmp
je
(bad)
iret
mov
stos
call
ret
push
repnz
dec
push
rol
loope
xchg
ins
inc
pusha
arpl
(bad)
pop
call
loopne
adc
(bad)
mov
sub
call
stos
xchg
adc
add
jno
imul
lahf
or
pop
mov
xchg
leave
popf
mov
lea
xchg
es
sub
xor
xor
mov
aad
xchg
out
sbb
push
jb
cmp
cmp
inc
ins
mov
adc
rcr
(bad)
(bad)
loop
lea
scas
sub
mov
clc
lods
ds
xchg
cmp
stc
outs
out
dec
inc
movs
xor
sbb
fstp
mov
pushf
call
aaa
gs
loopne
or
lods
not
inc
xchg
mul
pop
adc
dec
stos
cld
and
mov
add
pop
mov
(bad)
stos
(bad)
in
jl
inc
repnz
jo
add
dec
mov
push
or
out
mov
in
dec
out
mov
jb
mov
clc
mov
add
loope
out
pop
sbb
out
push
(bad)
stos
add
lods
sbb
pop
xchg
ficomp
out
mov
jne
iret
lock
jg
in
mov
repnz
cli
dec
sbb
pop
sub
mov
inc
mov
push
sbb
dec
in
out
mov
xchg
int3
push
pop
lds
bnd
cmc
shl
mov
sub
inc
dec
and
pop
movs
push
xchg
jnp
xor
sbb
pop
jmp
or
rol
mov
dec
push
sbb
push
repnz
aas
sub
(bad)
in
pop
dec
add
add
adc
adc
and
adc
add
xor
mov
add
ss
enter
lock
repnz
daa
mov
shr
mov
mov
cmps
movs
cmp
pop
sbb
mov
setle
jnp
sti
es
stos
jl
loopne
lds
sbb
inc
ja
lods
je
(bad)
cs
mov
fcom
and
add
movs
pop
pop
(bad)
xchg
mov
fistp
les
mov
popf
xlat
mov
faddp
ss
cmps
loop
outs
loope
data16
dec
adc
shl
daa
cld
xchg
stos
mov
add
sar
pop
ds
pop
out
loopne
xchg
push
jg
aaa
leave
mov
pop
stos
cdq
cmova
mov
xchg
push
ins
jl
std
pop
inc
mov
xchg
loopne
pop
aad
jp
jo
jle
cmp
or
jecxz
unpcklps
cmp
sbb
iret
inc
dec
(bad)
inc
adc
pop
iret
push
stos
cmp
or
aad
dec
aas
test
aad
ins
pop
push
aad
ins
pop
push
aad
ins
pop
push
aad
pop
stos
(bad)
popa
js
mov
je
inc
xchg
xor
cmp
jg
aad
mov
jns
loop
cdq
lahf
mov
repnz
mov
mov
mov
cmps
adc
mov
imul
mov
pop
fs
(bad)
mov
fst
aas
repnz
jbe
pop
loope
cld
popf
xor
push
addr16
pop
mul
leave
adc
dec
data16
jge
sar
push
enter
pop
movs
and
sahf
pop
loop
repnz
dec
lock
mov
int3
lea
or
(bad)
js
xchg
aam
mov
(bad)
int
jmp
fsubr
push
mov
nop
stos
(bad)
popa
mov
jge
jecxz
stos
repnz
ret
pop
hlt
adc
mov
out
lock
add
ds
add
ins
pop
mov
sub
cli
inc
push
addr16
int3
inc
and
jns
sbb
xchg
fcomp
mul
mov
add
out
sub
clc
xchg
retf
les
xor
sub
in
cmp
data16
pop
ret
inc
ffreep
mov
mov
pop
pop
push
mov
mov
sub
shr
pop
sub
shr
pop
sub
shr
pop
sub
enter
inc
inc
add
push
and
out
inc
push
and
in
(bad)
in
fwait
mov
lock
and
stos
not
cmp
mov
aad
fcom
and
rcl
xor
in
in
in
in
in
push
adc
xchg
push
pop
in
xchg
call
lahf
mov
out
pop
stc
aad
pop
mov
int3
jecxz
mov
addr16
fdiv
fcmovbe
stos
repz
stos
retf
das
xor
ins
int
xor
sub
dec
sub
fidivr
into
fsub
push
out
push
push
test
stos
shr
stos
lock
adc
pop
fidiv
jbe
stos
dec
bnd
adc
and
jb
adc
sbb
jmp
inc
fst
(bad)
gs
loope
add
mov
inc
or
les
sbb
add
in
push
sub
push
mov
lds
arpl
mov
jg
cld
cs
sahf
pandn
mov
inc
xor
sbb
imul
inc
xchg
into
fisub
cld
pop
retf
aas
push
outs
shr
sbb
das
(bad)
push
retf
test
inc
ret
cdq
inc
aas
loope
inc
movs
jns
fmul
sbb
pop
and
stos
dec
push
xor
imul
cmp
arpl
inc
mov
js
lea
push
call
in
fstp
outs
retf
mov
lods
in
ror
pop
pop
in
and
pop
shr
sbb
fstp
pop
dec
adc
test
jl
dec
sub
shr
pop
sub
pop
in
xchg
call
aam
cmp
sahf
pandn
sti
sub
cld
xchg
je
das
lock
cmp
movs
cmc
sti
mov
jle
sub
cli
jns
aas
inc
js
fild
pop
ret
xchg
ret
jno
inc
scas
fnstcw
in
iret
data16
or
out
jne
push
push
out
dec
mov
dec
fld
int3
push
jge
mov
mov
mov
inc
inc
loope
jmp
jle
push
push
sub
push
cwde
loop
inc
and
rcr
popf
dec
cmps
enter
cmp
movs
or
mov
pop
test
nop
cwde
popa
cmps
adc
sub
hlt
adc
fld
cld
sub
ffreep
mov
mov
inc
jae
loop
mov
pop
sub
xor
pop
adc
push
js
add
xchg
pop
(bad)
lods
push
mov
xchg
xor
inc
mov
mov
inc
call
retf
fld
sbb
sti
mov
int3
cli
push
mov
inc
fsub
gs
inc
in
inc
lahf
jae
cmp
mov
bound
aaa
pop
in
test
lods
add
fcmovbe
or
inc
cmc
retf
adc
xchg
mov
movs
push
jle
js
inc
aam
aas
ret
test
mov
test
jne
mov
push
std
cmp
inc
sbb
jle
repz
and
jno
or
push
cmp
and
rol
arpl
pslld
pop
sub
mov
in
cs
lods
jo
sbb
dec
xchg
lods
fcomip
inc
dec
popf
aas
in
imul
aas
cwde
mov
inc
test
xchg
and
iret
cmp
xor
(bad)
mov
int3
cmc
jl
jb
ins
cmp
loop
cld
mov
pop
fdiv
dec
inc
or
sub
inc
ss
sti
cmp
mov
scas
iret
and
jmp
imul
pop
sar
outs
out
lock
psubusw
mov
jns
jge
ss
fcomp
dec
int3
pop
hlt
fnstsw
lods
sbb
cli
aaa
dec
xchg
lods
aad
push
cmp
or
sbb
adc
test
movs
aam
shr
imul
xor
(bad)
fidivr
or
sbb
xchg
xchg
int3
xor
addr16
in
or
cmp
adc
mov
xchg
jae
stos
outs
sbb
cmp
mov
or
inc
pop
stos
mov
add
stos
mov
js
push
retf
jmp
fprem1
jmp
xchg
idiv
inc
in
retf
loope
out
lock
test
fild
jne
je
xchg
cs
scas
pop
scas
pop
scas
pop
scas
pop
cs
cs
cs
cs
cs
bnd
cmps
dec
popf
pop
in
imul
aas
cwde
jmp
mov
sbb
call
inc
cmp
push
sub
or
jp
adc
jg
sub
mov
sbb
push
fs
ja
inc
push
in
mov
sbb
pinsrw
stos
xchg
arpl
lods
(bad)
(bad)
xlat
and
adc
adc
mov
pop
lods
(bad)
adc
mov
movs
mov
mul
mov
mov
pop
ins
lods
(bad)
in
pop
xor
mov
mov
and
stc
push
ds
js
mov
loop
retf
(bad)
push
(bad)
jne
pop
inc
push
je
sar
inc
mov
mov
push
sub
mov
mov
dec
ss
sbb
addr16
sub
icebp
ror
xor
std
sub
xchg
mov
in
dec
fsub
add
sbb
inc
dec
cwde
ficom
aad
xchg
sub
aam
adc
(bad)
cmp
das
rol
inc
shr
xchg
loop
mov
or
xchg
dec
xor
out
sub
loopne
ret
mov
ret
xor
out
xor
imul
test
retf
xor
sti
jge
push
inc
push
lods
movs
xchg
add
out
and
dec
mov
push
add
aaa
dec
popf
cmp
or
fst
jg
test
mov
adc
push
scas
cmp
clc
cld
cmps
aaa
xchg
pop
jmp
retf
jns
xor
cdq
mov
jge
int
pop
xchg
sbb
frndint
into
in
sub
inc
and
pop
icebp
popf
mov
fwait
sub
sbb
pop
mov
scas
or
arpl
dec
cmp
ret
xor
xor
push
pop
sbb
(bad)
lds
or
mov
cmp
mov
fstp
cwde
cmps
icebp
xchg
movs
sar
push
aad
aam
cmp
xchg
adc
mov
clc
cmp
xor
cmp
into
push
mov
push
ficomp
iret
pop
sbb
(bad)
popf
jecxz
mov
(bad)
fisttp
jns
lods
(bad)
retf
js
xchg
in
jl
vsubss
mov
retf
call
stos
aaa
inc
dec
test
pop
cmp
mov
mov
dec
jb
pop
mov
icebp
cmp
stos
inc
inc
mov
push
dec
(bad)
int3
adc
add
cmps
push
pop
inc
popf
dec
in
fwait
es
jecxz
jne
in
xchg
idiv
dec
cli
(bad)
or
xchg
jg
mov
cmp
leave
stos
add
mov
mov
hlt
mov
dec
je
outs
xchg
xchg
test
pop
sub
fdiv
inc
in
and
inc
in
jecxz
inc
jmp
push
jmp
je
xor
icebp
mov
pop
adc
mov
inc
push
cmp
cli
cmp
jb
sub
clc
mov
xor
push
in
pop
xchg
cmp
push
cmps
or
jno
sub
push
pop
daa
addr16
cmp
push
in
mov
mov
outs
leave
aaa
jne
jmp
jge
push
inc
adc
push
jge
clc
pop
stc
aad
pop
std
pop
shl
sbb
add
pop
not
outs
mov
sti
cmps
lock
scas
and
ror
and
cbw
arpl
retf
(bad)
pop
xor
pop
push
mov
xor
dec
jbe
sub
movs
mov
sbb
hlt
inc
xor
dec
sub
xchg
inc
jle
mov
sbb
js
movs
sub
pop
cmps
mov
nop
pop
jl
cmp
imul
sub
ror
lods
inc
jb
test
sbb
ficomp
push
nop
cdq
aaa
test
aad
nop
ficomp
out
fucomi
clc
aaa
clc
mov
out
test
std
inc
lea
lods
push
retf
scas
ret
mov
cld
call
(bad)
dec
xor
xchg
mov
push
xchg
scas
js
push
push
popf
mov
push
jp
out
push
test
jmp
lahf
mov
int
fmul
test
xchg
test
movhps
dec
in
xor
push
cmp
or
pushf
mov
(bad)
in
or
and
push
mov
shl
hlt
push
dec
sbb
scas
in
leave
dec
xchg
xchg
add
sub
out
clc
stos
jmp
mov
xlat
call
popa
mov
cmp
cmp
jge
js
jg
scas
loopne
mov
push
(bad)
push
(bad)
jne
hlt
cs
jg
jmp
in
out
std
pop
or
dec
jmp
stos
pop
sti
sub
out
mov
xor
(bad)
(bad)
mov
dec
cli
or
leave
leave
cmp
retf
jae
jnp
test
mov
fs
fild
retf
repnz
mov
dec
cld
cmps
jae
mov
jo
popa
les
in
int
hlt
sbb
jo
les
xchg
adc
int
or
fcom
mov
sub
pushf
sub
mov
xor
cs
int
fiadd
(bad)
pop
sbb
fucomi
clc
aaa
clc
lahf
mov
jmp
or
push
cmps
inc
or
rol
xchg
outs
push
fstp
sar
sti
sub
lods
push
test
imul
sbb
and
out
lods
lods
jae
dec
jmp
adc
sbb
int
mov
sti
sbb
mov
fmul
jle
jo
in
mov
es
fldenv
mov
xchg
adc
push
adc
cmp
xor
jmp
mov
inc
in
outs
xor
xchg
bound
adc
and
mov
pop
bound
dec
sbb
test
lods
push
rcpps
adc
fcmovnb
sbb
jge
push
inc
adc
push
std
dec
clc
pop
stc
aad
rcr
mov
cmp
jg
jmp
dec
dec
pop
hlt
pop
or
cmp
xchg
sub
std
fistp
stos
aad
mov
mov
hlt
neg
arpl
and
mov
imul
push
icebp
dec
inc
scas
fwait
xchg
add
pop
jo
ja
jns
push
ins
pop
jl
enter
movs
mov
sub
(bad)
jo
jmp
xor
sahf
and
ficom
leave
cmp
test
into
xchg
mov
jl
push
cs
scas
jno
push
ret
fisub
xchg
shl
fimul
cli
xchg
lock
push
scas
clc
sub
sbb
aaa
clc
lds
jg
stos
aad
mov
and
xchg
inc
lds
mov
dec
fst
cmc
pop
xchg
adc
mov
lods
enter
ja
aam
jmp
aas
mov
mov
neg
pop
cmps
and
sti
daa
das
test
arpl
cmps
mov
xor
stos
nop
mov
int3
ror
stos
(bad)
ror
jmp
xor
cmp
stos
(bad)
mov
(bad)
leave
xlat
loopne
jl
and
test
and
test
mov
adc
and
call
aad
cmps
outs
or
in
cmc
cld
sbb
inc
fst
cmps
lock
int
dec
lods
mov
popf
or
jg
fisubr
movs
lahf
xor
out
xor
and
cmps
call
rcl
cwde
dec
cli
xor
inc
pop
fcomp
mov
or
xchg
sbb
cmc
(bad)
fcos
add
popf
dec
pusha
popa
sbb
outs
test
sahf
lods
mov
add
mov
stos
(bad)
movs
dec
jnp
mov
out
mov
fstp
xchg
(bad)
repz
popa
xchg
xchg
call
shr
out
leave
mov
mov
jmp
fadd
mov
pop
mov
or
in
mov
clc
pop
pop
push
xchg
and
stos
xchg
std
pusha
clc
lahf
and
jge
jg
outs
dec
dec
or
(bad)
shr
xor
mov
jno
pop
fnstsw
int3
ret
out
jecxz
jne
test
fcomp
xor
js
or
sub
into
cmp
push
sbb
pop
dec
push
ret
mov
add
fsubr
sbb
cmps
pop
loope
popa
pusha
dec
cmp
es
in
mov
(bad)
std
mov
push
stos
jb
call
out
mov
fwait
sub
ins
lods
mov
stc
xchg
ins
pop
or
and
imul
call
jge
pushf
cdq
mov
stc
mov
js
and
outs
rol
scas
ror
pop
(bad)
rol
xor
popa
xchg
push
sbb
arpl
dec
sub
adc
xor
mov
cmp
sbb
xor
mov
pop
mov
xor
mov
sub
bound
inc
mov
sahf
xlat
inc
es
pop
shr
icebp
sahf
out
inc
popa
lds
lods
push
jmp
repnz
xchg
inc
xor
push
jbe
fisttp
repnz
lods
cmp
call
pop
(bad)
jecxz
retf
dec
jmp
sub
fadd
out
pushf
or
xchg
jno
fmul
stos
xchg
ror
rcl
jb
(bad)
out
cli
imul
push
push
mov
imul
out
sub
(bad)
fnstsw
inc
shl
mov
inc
std
xchg
inc
pop
add
pop
pop
inc
fidivr
sub
les
leave
xor
push
into
adc
dec
dec
pop
fsub
xchg
ss
out
test
xor
mov
pop
cmps
jne
aad
mov
lods
push
stos
jb
mov
dec
cs
cmc
push
in
mov
(bad)
out
jg
jmp
mov
mov
dec
and
push
pop
inc
scas
cmp
dec
movs
sti
daa
aas
mov
retf
scas
jb
xor
std
mov
ror
repz
les
mov
xchg
in
push
mov
mov
cmp
push
ffree
in
(bad)
sbb
das
nop
imul
push
mov
dec
sbb
sub
mov
mov
adc
stos
sub
jbe
fst
fnsave
cs
inc
pop
retf
mov
mov
stos
mov
and
mov
movs
mov
cs
popf
retf
adc
inc
cwde
adc
sti
and
loope
push
xchg
pop
cwde
jl
pop
adc
inc
cmp
sbb
fiadd
test
imul
hlt
scas
icebp
enter
xor
cmc
sbb
push
bound
cmp
enter
lahf
hlt
xchg
push
and
inc
cmc
leave
ficom
rcl
(bad)
pop
mov
in
mov
(bad)
adc
or
fldenv
or
rcr
adc
sbb
inc
inc
lods
sbb
cmp
pop
stos
sub
inc
push
pop
stos
mov
sub
inc
outs
lods
mov
jmp
stos
aad
mov
xchg
fwait
and
adc
movs
and
push
inc
imul
in
sbb
inc
imul
pop
mov
or
popf
fstp
mov
pop
mov
push
cdq
mov
stos
nop
sbb
leave
call
adc
jno
ins
mov
xor
enter
out
jecxz
dec
push
add
addr16
mov
lods
mov
xor
push
repnz
inc
in
sub
push
mov
jnp
dec
lea
push
push
jne
xchg
out
or
jmp
stos
lods
scas
push
(bad)
out
std
mov
sub
jmp
mov
xchg
into
sti
add
ror
inc
xchg
xchg
fdivr
sub
cwde
fisub
hlt
dec
lahf
stos
push
in
arpl
outs
push
push
mov
adc
mov
fld
pop
scas
mov
mov
inc
xor
nop
jno
mov
push
sbb
inc
test
mov
int3
daa
xchg
repz
imul
aaa
(bad)
test
mov
(bad)
push
mov
mov
into
mov
jne
jmp
add
retf
add
push
inc
stc
sub
lds
in
les
sti
lods
inc
jo
fsub
scas
mov
shl
jne
stos
addr16
lods
retf
jb
dec
and
call
fld
inc
(bad)
xchg
adc
in
call
pop
daa
sbb
mov
scas
inc
jl
dec
ss
call
mov
(bad)
js
adc
shr
jno
and
mov
lahf
fnstcw
out
test
arpl
ins
or
add
xchg
or
dec
mov
jne
daa
outs
test
jae
movs
sub
jecxz
lock
sub
pop
retf
adc
push
jno
jmp
push
push
retf
pop
push
mov
add
sahf
add
call
dec
movs
and
ins
pop
adc
popa
and
add
push
(bad)
dec
mov
imul
mov
cmp
add
xchg
xchg
inc
gs
adc
popa
daa
popa
ret
fcomp
hlt
push
retf
mov
(bad)
aad
and
les
dec
out
inc
out
les
aad
push
repz
mov
call
pop
scas
imul
call
dec
mov
loop
jge
inc
lock
lods
aas
in
adc
in
xchg
nop
clc
aaa
xchg
xlat
xchg
mov
mov
cmps
adc
ins
sub
cmps
enter
scas
sbb
stc
jne
cmps
jne
mov
gs
gs
fst
outs
dec
and
call
xchg
xchg
xor
icebp
dec
cmps
mov
dec
sub
(bad)
ins
fidiv
push
ret
in
lds
jo
jmp
mov
sbb
mov
aad
mov
ficomp
fild
mov
cs
sub
outs
push
fxch
aad
aad
cbw
stc
aas
push
in
shl
xor
arpl
aas
cmp
pop
push
addr16
push
xor
cmp
ins
push
adc
stos
push
jo
inc
mov
test
push
shr
(bad)
shr
xchg
std
cmp
sub
mov
push
(bad)
push
pop
outs
stos
sbb
outs
in
scas
push
xchg
jl
cmp
pop
aad
ds
xor
xor
pop
hlt
aad
xchg
mov
mov
mov
or
xchg
ret
jmp
cmp
inc
mov
lods
dec
ins
adc
mov
dec
xor
and
fwait
cli
mov
daa
xlat
adc
add
es
lods
retf
or
xor
pop
mov
pop
dec
lods
jge
cmp
test
test
mov
jbe
fs
cmp
(bad)
fwait
pop
jg
call
stos
aad
mov
neg
jbe
dec
xor
(bad)
(bad)
and
call
pop
xchg
in
pushf
xchg
adc
xchg
test
jge
dec
sti
mov
pop
pop
test
dec
cmp
jp
xchg
enter
bnd
or
jle
nop
xor
jp
cwde
rcr
(bad)
dec
adc
xchg
and
xchg
popf
dec
pop
push
fs
rol
pop
ja
jecxz
mov
data16
sub
mov
mov
mov
imul
in
cmp
or
mov
xlat
jbe
jbe
pop
xchg
dec
imul
data16
repz
das
aas
adc
lock
mov
stos
ja
popf
iret
cdq
cwde
mov
imul
add
jno
push
dec
bswap
lea
pop
cwde
(bad)
fdiv
icebp
out
adc
cwde
(bad)
test
adc
pop
jnp
jl
scas
cwde
jl
xchg
loope
fdivr
jmp
loope
sub
xor
cwde
ret
dec
inc
not
iret
shl
arpl
popa
cmp
or
(bad)
xchg
mov
enter
outs
int
sbb
adc
sub
daa
je
call
adc
test
xor
ret
pop
pop
add
mov
sub
inc
jle
lods
fstp
popf
imul
cld
nop
ja
jae
pop
aaa
in
xchg
lods
aas
in
adc
in
xchg
xchg
js
cmps
popf
jecxz
xor
sbb
mov
sbb
ins
push
jmp
repnz
rcr
add
retf
dec
adc
jge
mov
sbb
loopne
out
imul
jae
sub
jo
mov
jg
stos
mov
ds
fdiv
jb
push
pop
std
mov
test
cmps
and
pop
xor
xchg
jno
sbb
pushf
dec
cmp
imul
adc
xor
mov
int3
popf
stos
jg
xchg
pop
adc
ret
test
clc
dec
lahf
je
cmp
ds
mov
push
xor
cdq
xchg
dec
enter
inc
mov
mov
(bad)
inc
mov
imul
lods
retf
jae
int
ins
out
std
sub
dec
cmp
xchg
retf
inc
cmp
sahf
push
xchg
leave
adc
dec
fnstenv
jmp
pop
shl
into
aaa
js
bound
leave
stos
inc
mov
sahf
movs
dec
not
clc
iret
mov
dec
(bad)
pop
inc
xor
stos
jle
repz
mov
pop
neg
push
mov
push
outs
ficomp
call
int3
pop
ret
inc
mov
push
int3
fdivr
sbb
mov
repz
mov
sbb
xchg
dec
daa
jmp
xchg
add
loope
fst
inc
in
daa
std
inc
xor
je
scas
test
movs
xlat
repz
fcom
mov
mov
add
dec
loopne
lods
pop
lods
nop
ds
das
mov
dec
loop
sbb
test
test
iret
dec
sbb
adc
test
sbb
add
enter
pop
fwait
xchg
data16
(bad)
in
(bad)
fisubr
sbb
cmp
and
jmp
fdiv
in
xchg
adc
jl
dec
mov
rcr
xchg
push
in
lock
sbb
jo
das
add
fdiv
or
loopne
cwde
fwait
mov
cdq
(bad)
addr16
ins
out
int3
cmp
xor
or
int
test
das
fwait
sbb
cmp
mov
mov
inc
shr
inc
jo
mov
bound
and
xchg
or
adc
jne
imul
ror
jmp
xor
pop
shl
push
call
ins
movs
mov
jp
jb
rcl
and
aam
lea
push
repz
rcr
mov
pop
sbb
(bad)
(bad)
in
mov
xchg
mov
(bad)
cmc
xor
ss
or
and
jecxz
call
ret
aam
xchg
xchg
cld
dec
cmp
dec
mov
add
mov
sar
cmp
loopne
mov
dec
push
fisub
adc
mov
ds
adc
dec
pop
and
sub
dec
repz
push
sbb
and
pushf
call
mov
dec
sbb
call
cs
pop
mov
mov
jg
push
imul
inc
pop
sbb
scas
loop
stc
mov
cmp
fsub
pop
outs
ftst
pop
pop
(bad)
lock
mov
lods
cli
xor
scas
mov
jmp
or
rcl
xchg
sbb
push
stc
leave
rcr
jmp
pop
xchg
pop
ins
daa
mov
xchg
xor
outs
pop
sbb
push
mov
mov
aad
cmps
je
mov
scas
mov
sti
push
push
aas
icebp
inc
jge
neg
std
push
int
jnp
xor
mov
cli
mov
mov
and
and
out
push
add
dec
inc
mov
mov
addr16
pop
iret
iret
xor
test
dec
movs
sbb
sbb
leave
std
sub
dec
dec
jb
and
(bad)
fidivr
pushf
leave
or
repz
jecxz
lock
push
enter
sub
inc
(bad)
fcom
push
cmp
mov
retf
stos
enter
(bad)
data16
push
addr16
jnp
sbb
mov
imul
retf
dec
dec
mov
je
idiv
xor
gs
lods
int3
int
jle
mov
jae
aaa
jnp
add
(bad)
pop
sub
(bad)
pop
(bad)
mov
(bad)
mov
(bad)
cmp
pop
or
repnz
repz
sbb
pop
enter
mov
addr16
call
adc
adc
arpl
arpl
icebp
aas
movs
in
popa
mov
popa
nop
and
add
in
push
movs
inc
(bad)
mov
inc
icebp
dec
clc
addr16
jl
(bad)
sbb
shl
sysret
ffree
pop
sbb
jp
jmp
inc
jno
out
sar
mov
cmp
out
jmp
jg
repz
(bad)
mov
call
or
mov
call
arpl
popa
aas
imul
and
sahf
(bad)
sub
std
jecxz
das
jmp
jbe
cmc
push
dec
loope
aad
ja
pop
mov
das
in
mov
in
add
stos
fwait
adc
les
fwait
adc
dec
sub
in
pop
mov
jnp
ins
pushf
jno
dec
cmp
aaa
mov
jmp
or
and
mov
jmp
sar
jge
xchg
lods
mov
(bad)
hlt
inc
pop
xchg
lods
psubsw
into
std
pop
dec
pop
push
rcl
or
mov
int
out
out
cs
dec
xor
out
pop
lea
push
mov
adc
shl
int
pushf
xor
scas
ret
jns
call
and
addr16
push
fcomp
cmp
mov
inc
push
and
xchg
vpsllq
loop
sbb
lods
(bad)
and
popa
pop
js
jno
push
hlt
cs
in
mov
xchg
xchg
xor
jmp
(bad)
fisub
xor
pop
mov
sub
pop
stc
adc
sub
rcr
outs
mov
mov
dec
cdq
and
push
jl
mov
fist
fsub
xchg
(bad)
jae
in
enter
xchg
neg
das
xor
jbe
push
cmp
ins
aam
dec
in
xchg
out
ror
xor
dec
or
test
aam
pop
test
(bad)
std
mov
xchg
pop
idiv
adc
mov
jne
ins
nop
push
daa
dec
out
xchg
(bad)
movs
pop
in
jg
push
mov
movs
jmp
inc
shl
sti
jne
mov
mov
in
hlt
fs
xor
inc
push
sbb
mov
or
ins
scas
fstp
jbe
push
pop
stos
lds
jl
jb
cmp
(bad)
inc
es
inc
xlat
inc
scas
lods
rcr
stc
xor
xchg
cmp
inc
mov
and
xchg
xchg
js
test
cmp
call
out
(bad)
das
jmp
inc
mov
arpl
mov
dec
sbb
mul
sub
cmp
push
in
push
rcr
(bad)
out
xchg
test
or
mov
sub
mov
fs
jge
jno
imul
xchg
xchg
jno
push
pop
popf
aaa
xor
push
outs
cdq
stos
neg
rep
mov
fdiv
and
xor
popw
hlt
int
push
hlt
scas
aas
adc
xchg
bound
ins
jge
sub
popa
ret
les
push
pop
sahf
add
outs
pop
aaa
(bad)
mov
fcomp
mov
test
xor
cld
sub
repz
out
adc
inc
in
jmp
fst
xchg
inc
and
cmp
bound
loop
adc
adc
ss
mov
icebp
cwde
xor
leave
(bad)
push
aad
push
fst
sbb
pop
cmps
push
lods
mov
div
pop
inc
mov
xor
emms
mov
jbe
jmp
test
je
jmp
lahf
movs
nop
aas
test
cmps
inc
std
inc
pop
jg
les
imul
adc
stos
leave
mov
or
fistp
inc
xor
lock
add
dec
icebp
sub
es
or
push
xchg
adc
adc
out
jp
in
pop
fwait
sub
mov
push
clc
ret
xchg
rol
ins
jg
jo
(bad)
mov
movs
std
outs
ret
dec
cli
fild
scas
jmp
sbb
pop
xor
scas
mov
sbb
ss
and
lea
(bad)
push
imul
or
jb
je
inc
fnsave
in
jne
sbb
mov
mov
in
iret
cwde
cdq
xchg
mov
das
imul
(bad)
mov
inc
in
mov
adc
dec
cdq
popf
shl
in
mov
leave
mov
inc
push
int3
fsubr
mov
test
mov
mov
ja
xchg
cdq
jnp
mov
xchg
mov
hlt
imul
in
popa
sar
jmp
out
dec
add
jns
sbb
mov
xchg
xchg
or
scas
jb
jp
push
out
mov
test
mov
scas
sub
movs
xor
and
pop
ins
lods
pop
scas
bound
cmp
ins
retf
jb
adc
xor
mov
in
jns
and
cmp
fsub
arpl
adc
jp
outs
mov
sbb
loop
pushf
cwde
adc
inc
inc
cld
xchg
push
inc
mov
pop
test
sbb
jae
mov
inc
xor
xor
call
xchg
adc
xchg
sub
mov
hlt
es
or
outs
mov
mov
out
inc
out
lods
jge
sbb
mov
cmps
cwde
mov
mov
adc
ins
mul
shr
xchg
jne
fidiv
pop
movs
inc
pop
cmps
dec
(bad)
in
imul
sbb
add
adc
inc
xor
aas
imul
psadbw
xchg
pop
inc
mov
call
jnp
adc
test
xor
call
loopne
in
or
sbb
inc
test
jmp
les
or
pushw
mov
jmp
mov
jmp
mov
push
push
es
mov
mov
cmc
pop
xchg
mov
or
int3
adc
cmc
cmp
xor
retf
outs
movs
jg
ins
and
mov
mov
test
(bad)
sti
xor
jmp
cwde
sar
(bad)
outs
jle
(bad)
dec
mov
stos
aad
in
std
jne
mov
sbb
xchg
out
jp
and
es
push
jmp
mov
cmp
outs
into
jne
dec
repz
jle
mov
push
push
mov
hlt
in
pop
shl
imul
loop
mov
jmp
retf
das
rcl
mov
xchg
cs
mov
adc
(bad)
mov
sbb
out
xchg
leave
in
jb
and
sbb
cmp
inc
xor
adc
jle
adc
jp
add
inc
xchg
mov
cmp
add
call
lods
xchg
sahf
push
pop
or
push
xchg
cmps
mov
in
das
aaa
xor
jne
ds
dec
std
pop
call
test
jnp
outs
push
xlat
inc
cmps
cmps
cmp
fist
aam
jmp
iret
out
(bad)
mov
jae
loop
inc
xor
jle
and
(bad)
aad
aaa
adc
lahf
sbb
int3
ucomiss
fisttp
mov
push
xchg
lds
adc
push
dec
int
xchg
and
ficom
push
ds
imul
bound
rcr
mov
cmps
xchg
xor
jle
mov
or
repz
add
ja
mov
ss
jne
cmc
rcl
push
inc
add
cmp
je
in
xchg
jns
jnp
mov
jb
xor
sub
cwde
sbb
sti
or
ret
aas
mov
xor
lea
mov
jne
mov
fstp
fmul
in
shl
mov
bound
es
fld
outs
add
jmp
push
call
imul
lods
std
cmp
inc
jge
outs
and
je
push
not
cmp
and
mov
ja
ficomp
cmp
mov
(bad)
cmp
jmp
fwait
adc
xchg
mov
dec
and
cli
adc
adc
sub
rcr
movs
(bad)
outs
icebp
xchg
xchg
mov
sbb
lea
jecxz
mov
iret
and
scas
ins
sbb
cwde
cmp
mov
cli
mov
repnz
pop
fwait
jmp
add
and
add
retf
mov
add
fsub
dec
jbe
and
jp
test
rol
add
push
dec
aad
retf
pop
cli
fld
inc
pop
jg
movs
mov
jg
shr
in
push
push
js
mov
ret
idiv
mov
and
jo
mov
test
cmc
mov
dec
xchg
xchg
daa
lock
icebp
imul
add
sub
cld
push
arpl
mov
sahf
aaa
jecxz
popf
iret
and
xchg
(bad)
cmc
push
out
jecxz
sub
sub
sbb
add
push
jno
cmp
jmp
and
int3
into
sbb
xchg
fwait
sub
clc
rcl
nop
cmp
sub
lds
push
xchg
push
sbb
mov
(bad)
iret
sub
xor
sub
cmp
retf
xchg
fnstenv
jmp
mov
pop
sub
scas
add
(bad)
xchg
dec
jmp
adc
mov
and
adc
stos
in
aas
cs
nop
dec
nop
dec
xchg
mov
lods
rcl
stos
push
dec
jge
push
kmovb
neg
xor
scas
cmp
push
js
cmps
(bad)
pop
sti
aas
frstor
and
sbb
movs
push
leave
movs
jnp
movs
movs
and
cmp
mov
mov
mov
or
mov
mov
dec
les
push
sbb
arpl
cmp
loop
xchg
mov
jbe
(bad)
out
cli
movs
nop
mov
push
mov
jecxz
ss
pop
sub
cmp
into
fisub
pop
cmp
fimul
addr16
pop
push
sar
xchg
mov
in
mov
mov
pop
daa
and
xchg
mov
mov
or
mov
std
jno
enter
in
out
rcl
jno
jns
mov
sbb
cmc
add
pop
std
mov
jg
int3
mov
std
xchg
inc
cmp
stos
outs
movntps
push
sti
jns
out
dec
test
ss
push
inc
stos
pop
loope
jg
ja
or
test
fs
dec
mov
fwait
inc
fdiv
dec
pop
inc
push
sbb
sbb
rol
push
or
cmps
scas
cmps
xchg
sbb
mov
cmps
outs
in
jg
jecxz
ins
sbb
push
icebp
xchg
mov
mov
adc
cmp
push
sti
or
mov
sbb
xor
nop
xor
sbb
mov
mov
or
sub
leave
adc
lds
mov
inc
mov
sub
jmp
xlat
(bad)
mov
out
jbe
cwde
loop
dec
mov
sbb
sub
or
add
mov
sub
retf
ret
stc
imul
bound
mov
imul
mov
mov
popf
addr16
lods
idiv
stos
jno
enter
repz
mov
int3
jle
neg
mov
(bad)
mov
stos
xor
pop
data16
les
or
mov
movups
pop
sahf
and
jb
mov
adc
inc
adc
or
xchg
movs
xchg
sub
int
out
ret
jl
cmc
jecxz
and
mov
xchg
and
jb
inc
dec
aaa
xchg
mov
jns
mov
add
mov
stos
shl
mov
pop
sahf
int
pop
lods
add
dec
xor
(bad)
sub
inc
jnp
mov
inc
pop
mov
in
data16
(bad)
das
xchg
push
int
pop
into
cmp
cmp
call
lods
mov
out
cmp
xor
pop
pop
inc
je
lahf
mov
es
shr
int3
push
popf
mov
xor
out
ja
xchg
inc
data16
push
ror
(bad)
fstp
xor
adc
mov
popf
add
adc
mov
fidiv
jl
and
mov
(bad)
xchg
push
stos
outs
pop
xchg
mov
outs
(bad)
cmps
aad
xchg
pop
scas
addr16
(bad)
movs
in
inc
addr16
aam
dec
push
push
jmp
inc
std
cld
popf
jne
push
jp
jne
sbb
mov
mov
mov
retf
mov
jbe
inc
jge
cs
sub
(bad)
retf
xchg
repnz
aaa
mov
test
ret
mov
out
push
push
hlt
leave
xchg
int3
mov
inc
imul
loope
mov
jbe
les
ret
sahf
xchg
lods
imul
test
test
push
jp
dec
cwde
sub
dec
or
xlat
test
arpl
mov
in
or
sub
inc
xchg
mov
outs
in
pop
xchg
mov
js
add
lahf
sbb
dec
out
test
adc
jno
rcl
lea
pop
test
inc
lds
sbb
shl
xchg
mov
gs
cmc
or
and
cmp
outs
popa
fsubp
jnp
xor
sub
fnstenv
adc
popf
lods
inc
inc
cmp
leave
inc
popa
push
retf
xchg
ds
push
mov
out
icebp
push
(bad)
nop
xlat
data16
bound
nop
fstp
xor
jb
push
ss
lods
mov
imul
int
sub
ds
mov
cs
sar
pop
loopne
scas
test
and
leave
fs
add
int3
loope
imul
ins
dec
jle
pop
call
int
daa
(bad)
mov
xchg
(bad)
daa
cmp
xor
int
mov
(bad)
sbb
xchg
fdivr
or
call
sub
cs
in
sbb
cwde
pop
push
data16
pop
xor
xlat
push
in
aaa
movs
cmp
or
retf
fsub
outs
mov
mov
test
sub
in
test
mov
lods
outs
xor
movntq
(bad)
push
test
mov
out
pop
test
ja
fisubr
mov
mov
popf
xlat
push
repz
inc
(bad)
add
fisubr
imul
fs
cmps
cmp
cmps
xchg
retf
aas
push
sahf
jge
call
sahf
pop
pop
inc
aad
aam
mov
cmp
add
jge
ins
fs
in
mul
mov
sti
aaa
lods
or
in
cmp
or
test
icebp
pop
aas
inc
xchg
retf
in
test
leave
push
xchg
cmps
cdq
mov
lods
cmc
imul
xor
fmul
mov
mov
jp
mov
sub
std
inc
movs
leave
and
cdq
sahf
cld
jno
push
pop
dec
ret
cmp
les
or
dec
fcomp
sti
sub
les
mov
into
les
movs
sahf
test
ins
adc
xor
ror
push
fist
xor
fdivr
adc
cdq
sahf
push
leave
pop
xchg
fwait
pop
and
xor
add
mov
fisub
ror
call
dec
nop
loope
jp
icebp
dec
mov
pop
retf
jmp
neg
ret
xchg
mov
loop
aas
dec
pop
xchg
nop
pop
mov
cmp
mov
arpl
jl
fist
test
imul
leave
xlat
mov
or
test
test
js
jno
push
push
test
dec
xchg
or
movs
cld
mov
sbb
and
push
(bad)
cmp
jge
or
aad
inc
out
adc
enter
adc
jne
inc
mov
dec
adc
dec
cdq
cmp
mov
xor
leave
add
ret
mov
sub
mov
pushf
dec
push
test
test
hlt
jo
ror
fisttp
bnd
scas
xchg
mov
pop
xchg
retf
push
cs
cdq
mov
retf
pop
cs
inc
mov
sub
jo
xor
jbe
jmp
std
fld
pop
inc
jl
adc
jg
mov
call
rcl
shl
imul
je
sbb
sahf
push
pop
mov
call
pop
retf
mov
mov
cwde
sub
loop
daa
stos
and
fdivr
imul
adc
sbb
add
pop
test
call
fild
jge
jb
adc
sub
cmp
or
mov
sub
mov
pop
adc
or
xor
ss
jno
adc
imul
nop
fs
enter
adc
shl
push
in
in
and
dec
(bad)
cmp
inc
es
lds
jno
repz
add
imul
and
mov
add
mov
(bad)
out
mov
sbb
jmp
xor
imul
enter
add
aad
inc
ins
int3
inc
out
ins
add
and
sub
imul
pop
imul
pop
icebp
inc
out
xchg
cmp
xor
and
mov
mov
dec
movs
jbe
inc
sbb
sub
dec
push
jo
jge
and
mov
sbb
rcl
mov
cmp
gs
movs
jns
inc
xor
cmps
test
mov
mov
retf
push
scas
sbb
jbe
sub
fisubr
cmp
xor
push
mov
(bad)
fisubr
mov
dec
jbe
mov
xchg
pop
in
or
jb
cmp
ss
inc
jns
xchg
mov
push
stos
jl
xchg
out
(bad)
xor
cmp
daa
xor
push
dec
jecxz
xchg
sbb
movs
push
sbb
pop
inc
imul
xor
push
les
push
adc
add
add
push
or
add
add
add
add
adc
adc
push
add
adc
inc
popa
and
push
bound
xchg
mov
inc
push
rcl
xchg
xchg
mov
loope
xor
pusha
jb
mov
icebp
adc
loop
mov
xchg
mov
add
add
aas
add
in
or
cmps
jp
add
lds
xor
push
mov
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
cld
adc
and
push
push
inc
sub
sub
cmc
xor
xor
(bad)
(bad)
cmp
dec
pop
dec
mov
mov
jno
push
addr16
cmp
dec
xor
and
mov
popf
xchg
gs
rol
scas
jge
fistp
rcr
inc
frstor
xchg
or
mov
test
jae
aad
mov
adc
pushf
mov
push
and
outs
(bad)
out
jle
mov
cmc
int
pop
fistp
lahf
mov
inc
dec
lods
daa
jecxz
loopne
pop
fbstp
jbe
inc
mov
dec
inc
jne
cmp
jp
ret
std
jecxz
loope
les
fwait
out
mov
jae
cmp
push
push
iret
shl
imul
jae
mov
sub
lods
scas
call
adc
outs
call
dec
neg
cld
sub
mov
cmps
mov
cs
lods
out
stos
xchg
jae
sti
(bad)
mov
clc
cmp
aaa
int
jae
cmps
jge
jbe
cmp
out
xchg
mov
outs
int
std
retf
arpl
and
jnp
fcom
cmps
repnz
(bad)
jl
and
loope
leave
xor
inc
mov
sub
xor
push
(bad)
push
pop
sub
push
scas
shl
and
inc
cld
mov
leave
ficomp
xor
mov
ss
sub
adc
ins
dec
mov
mov
in
inc
lods
mov
cld
sbb
mov
mov
push
fsubr
jbe
jnp
jnp
cmp
cmp
push
sbb
adc
test
in
in
or
in
or
in
or
in
dec
sbb
mov
or
ds
inc
jge
sbb
jmp
out
pop
sbb
jno
lahf
xor
xchg
inc
pop
es
mov
add
cwde
push
xchg
in
ja
xchg
movs
fiadd
xchg
ret
retf
mov
mov
dec
cmc
pop
jle
mov
clc
pop
fbstp
js
js
sbb
mov
jge
out
clc
test
sbb
adc
inc
mov
(bad)
and
iret
lds
add
pop
mov
aam
icebp
push
movs
or
dec
icebp
xchg
shr
popa
sbb
mov
retf
sub
xor
iret
mov
sar
pop
aas
and
push
leave
dec
push
inc
test
sbb
pop
add
data16
enter
js
or
or
imul
mov
jle
xchg
rcr
push
in
inc
xor
xor
(bad)
leave
mov
test
fsubp
bound
mov
dec
aad
stos
imul
jp
jge
or
or
dec
into
mov
adc
enter
(bad)
iret
mov
mov
ror
adc
fwait
jbe
adc
adc
push
aaa
out
dec
cwde
dec
sub
frstor
add
xor
jno
fwait
test
stc
out
sbb
out
mov
xchg
jnp
data16
sar
jmp
out
xor
fs
imul
aaa
(bad)
mov
sbb
jp
xor
add
dec
mov
pop
jne
scas
sbb
(bad)
ficom
lods
mov
retf
mov
mov
clc
outs
xchg
ins
push
ret
daa
(bad)
mov
stos
inc
pop
enterw
ss
(bad)
into
mov
nop
out
and
shl
add
mov
mov
dec
cmp
dec
ins
mov
into
xchg
pop
stos
push
sahf
mov
sub
pop
(bad)
aas
fstp
cmp
pop
stos
sete
pop
imul
cld
shl
call
imul
pop
iret
inc
test
mov
jmp
jns
push
std
sbb
ror
retf
sbb
ins
mov
sub
mov
adc
imul
mov
je
pop
add
mov
das
mov
sbb
retf
jle
mov
sub
sbb
ficomp
dec
mul
push
mov
pusha
adc
hlt
ror
add
das
movs
and
push
and
mov
mov
cld
sbb
mov
inc
cmp
dec
pop
(bad)
mov
inc
pop
push
inc
dec
(bad)
mov
cld
ret
lock
mov
pop
jle
and
add
sub
das
stc
mov
fdivr
mov
jo
cld
ret
out
mov
call
loopne
in
fcmovne
outs
jns
imul
and
mov
mov
inc
lods
xchg
inc
and
mov
loop
inc
je
jmp
inc
retf
popf
push
sar
stos
push
dec
pop
das
hlt
xchg
push
sub
or
nop
(bad)
sbb
dec
mov
adc
xor
mov
sahf
test
bound
adc
sbb
xchg
div
(bad)
fprem1
adc
lds
sub
xchg
push
les
jo
adc
in
cmp
adc
clc
test
and
aas
iret
inc
and
retf
mov
adc
and
sub
push
jns
pop
sbb
fdivr
sbb
and
mov
push
(bad)
retf
sar
sub
icebp
rcl
push
(bad)
cwde
das
xor
mov
mov
mov
xor
dec
ja
push
jnp
mov
jl
or
add
in
add
sbb
test
mov
outs
call
mov
adc
add
jle
cld
push
push
pop
(bad)
arpl
pop
pop
cli
out
shl
xlat
or
fcomi
push
mov
aaa
inc
jmp
mov
pop
or
push
jmp
cmp
out
or
sar
daa
test
sti
cmp
out
or
sar
daa
test
ins
mov
xchg
pop
mov
not
jg
fcomi
dec
mov
push
movs
leave
retf
inc
test
xor
call
out
retw
xchg
(bad)
and
jbe
mov
lods
pushf
ret
icebp
int3
dec
outs
rcl
mov
xchg
sahf
imul
push
gs
pop
stc
lds
int
scas
jp
icebp
xchg
in
xchg
stc
push
dec
mov
sar
and
test
sub
imul
dec
cmp
push
out
mov
jmp
call
retf
xchg
stos
rcr
xchg
mov
dec
outs
punpcklwd
dec
bound
mov
out
jl
int
shr
pushf
out
rol
in
inc
enter
mov
call
in
push
sub
mov
rol
pop
cmp
inc
daa
fsubr
pop
add
push
sbb
push
bound
dec
xchg
inc
cmp
imul
scas
and
scas
dec
sbb
es
dec
popa
fsubp
pop
inc
into
fst
movs
or
mov
lods
jmp
sbb
mov
cmp
shl
int3
cmc
sbb
fisubr
ret
mov
outs
adc
adc
je
adc
xchg
pop
fbstp
aad
sub
rcl
cmc
mov
enter
mov
mov
xor
adc
push
dec
sub
jbe
ins
inc
jp
lock
dec
mov
mov
fbstp
pop
mov
fldcw
(bad)
adc
add
xor
xchg
adc
add
adc
fsub
or
xchg
in
bound
dec
leave
popa
or
add
addr16
or
cmps
pushf
outs
shr
retf
mov
bound
push
mov
mov
add
mov
add
cs
scas
jle
pop
dec
or
test
call
test
repz
xchg
mov
int
les
adc
shr
or
xor
inc
movs
sbb
xchg
push
retf
push
das
xchg
fs
pop
mov
gs
inc
mov
jne
sub
cmp
adc
inc
or
imul
xor
aas
mov
inc
out
mov
dec
sbb
cs
les
scas
mov
sub
fldenv
inc
mov
mov
jae
mov
popf
inc
dec
mov
inc
cmps
addr16
push
les
cmp
gs
dec
rcr
push
fsub
and
into
popa
mov
ins
sub
movs
jne
movs
out
and
mov
outs
pusha
clc
scas
dec
imul
mov
xchg
test
rcl
fs
cmp
int
arpl
scas
push
mov
inc
es
xchg
ret
retf
popf
cwde
iret
popa
ja
add
es
in
rol
cwde
mov
cmp
jp
test
sub
sub
or
in
push
pop
add
xchg
in
jne
add
sti
(bad)
pop
fdiv
ins
pop
lea
xchg
sub
mov
cmp
sub
pop
xchg
test
or
mov
push
sub
out
or
(bad)
fs
pop
sbb
inc
xchg
mov
(bad)
dec
lods
lds
loopne
pop
fbstp
fsub
xor
mov
test
xor
xor
add
jp
jns
inc
jl
jnp
jnp
clc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
add
mov
ret
lea
inc
adc
lea
arpl
push
ror
push
dec
fs
mov
xor
xor
adc
push
icebp
inc
mov
leave
mov
(bad)
xchg
dec
enter
xor
sbb
and
pop
or
mov
pop
xchg
fs
test
test
das
pop
xchg
loope
pop
jns
data16
or
daa
fnstcw
call
scas
sub
fld
add
or
add
mov
lea
je
push
outs
dec
xor
daa
inc
and
adc
ficom
xchg
and
sbb
jle
repz
dec
xor
inc
and
movs
retf
add
xchg
xor
add
gs
push
iret
push
xor
mov
sub
xor
inc
dec
sbb
xchg
leave
les
cmp
xchg
repnz
push
retf
sub
cmp
xchg
repnz
push
retf
sub
cmp
mov
jno
and
fcomp
dec
sub
push
punpckldq
sahf
shl
retf
retf
ins
push
sbb
test
idiv
cmps
lods
in
dec
shl
scas
outs
lds
js
int
sbb
mov
mov
adc
inc
out
cmp
mov
ret
(bad)
loope
fistp
jo
mov
sbb
inc
jmp
jl
fdiv
inc
pushf
xchg
push
call
push
cwde
xchg
or
fcom
outs
xchg
push
je
in
mov
adc
pop
outs
rcl
mov
xor
pop
jne
sub
ss
xchg
jmp
scas
ins
or
aad
aam
inc
adc
shl
fisub
adc
aaa
popa
xor
and
mov
pop
jae
(bad)
cmp
test
repz
mov
addr16
loopne
sbb
mov
mov
ins
xor
dec
bound
jnp
retf
fsub
or
mov
icebp
add
inc
(bad)
xor
xor
jg
push
fadd
cmp
dec
jmp
xor
scas
xor
or
sbb
(bad)
fwait
cs
inc
mov
test
aam
xchg
ins
push
mov
je
cmp
mov
int3
lock
mov
mov
sahf
movs
xor
cmp
dec
inc
cmc
pop
scas
int
jmp
scas
outs
add
mov
mov
addr16
scas
dec
xchg
in
ret
aam
mov
pop
xchg
neg
and
jo
sub
scas
dec
ror
dec
adc
ins
shl
(bad)
clc
outs
popa
xchg
imul
sub
adc
inc
dec
jmp
adc
aas
inc
pusha
xchg
mov
pop
int3
and
ret
fs
scas
lods
mov
ror
aas
sub
inc
mov
inc
(bad)
in
mov
imul
push
inc
mov
sub
or
fcom
arpl
cmps
nop
inc
fwait
cmp
repnz
neg
es
retf
add
xor
push
mov
add
(bad)
push
js
div
jmp
sbb
jo
mov
xor
pop
lods
push
in
jmp
xor
arpl
inc
mov
or
fs
mov
rcr
sub
push
mov
adc
pop
sbb
push
rcl
xchg
lods
mov
repz
cmp
mov
ret
aam
mov
scas
outs
call
lahf
mov
mov
les
jg
push
mov
rcpps
sti
mov
mov
and
cmp
lods
outs
out
(bad)
push
pop
ret
xchg
in
xchg
mov
and
cmp
mov
cmp
call
in
movs
inc
imul
out
pop
jae
and
popf
add
inc
and
lods
xchg
inc
pop
daa
adc
push
add
fidiv
fbstp
mov
lds
aam
pusha
movs
mov
xor
(bad)
(bad)
es
test
and
and
leave
sbb
dec
and
inc
jmp
retf
xchg
popf
xor
(bad)
push
mov
ss
mov
lods
inc
adc
addr16
sbb
fwait
scas
or
xchg
xor
xchg
lods
xchg
shl
shl
div
into
mov
xchg
call
retf
movs
pop
fs
xchg
pop
push
bnd
pushf
dec
arpl
or
add
scas
mov
mov
jo
cwde
and
pop
cdq
pop
mov
mov
mov
call
test
int
adc
lock
cmp
inc
out
(bad)
inc
test
pushw
pop
repnz
lahf
sub
add
in
adc
and
push
cmp
or
xor
addr16
sbb
or
mov
test
lea
jne
retf
hlt
out
int3
mov
push
mov
add
sub
mov
add
int3
out
add
mov
inc
cs
cmp
and
rol
imul
ret
cmp
pop
fwait
clc
cmp
aaa
int
jae
jle
leave
aad
sub
data16
fcom
das
shl
mov
cmp
imul
es
jg
nop
mov
fisubr
ror
mov
and
ficomp
repnz
add
and
(bad)
fisubr
push
jecxz
jo
out
mov
or
add
adc
cli
pop
adc
mov
add
shr
add
jb
test
xor
push
dec
sbb
lahf
daa
mov
movs
mov
fdivr
leave
or
retf
xchg
mov
push
js
and
inc
mov
mov
ja
mov
sbb
(bad)
retf
sbb
int3
pop
sbb
inc
cmp
js
adc
xor
xor
sub
mov
cmp
xlat
add
stc
popf
mov
mov
arpl
int3
ss
int3
jmp
and
inc
jbe
test
ins
movs
jbe
push
sub
es
xor
add
ins
rol
gs
xor
push
push
test
mov
cwde
adc
mov
sub
ja
lock
sub
inc
dec
xchg
nop
(bad)
adc
push
enter
int3
or
cmp
mov
sub
mov
loop
sbb
ss
mov
adc
lock
lea
ins
imul
stos
and
cmp
ficomp
rcr
lods
cwde
emms
jnp
jne
ja
daa
hlt
(bad)
lock
jp
sbb
push
mov
add
jl
ficom
out
adc
(bad)
xor
pop
js
neg
inc
mov
rol
outs
iret
inc
fwait
jp
stc
scas
outs
mov
xchg
movs
cmps
mov
das
loopne
adc
jo
fstp
sbb
mov
retf
xor
dec
fnsave
xor
mov
mov
xor
mov
dec
xchg
js
inc
inc
dec
outs
xchg
int
jbe
out
pop
cmp
int
int3
lods
jmp
sub
xchg
cmps
dec
xchg
cwde
xchg
xchg
sub
push
cmp
loop
fs
les
cmp
push
add
adc
rcr
and
add
inc
lods
aad
call
bound
sbb
fisub
mov
push
cdq
enter
cmp
jle
es
ret
(bad)
add
lea
cmps
lds
retf
dec
fstp
dec
and
inc
mov
mov
dec
or
and
sbb
dec
(bad)
sbb
sar
jp
repz
loopne
sub
xchg
fwait
movs
xor
mov
mov
fwait
mov
cs
dec
adc
xchg
adc
or
mov
les
push
test
xchg
lods
inc
jecxz
mov
xchg
in
dec
mov
push
xchg
and
icebp
inc
(bad)
rcl
mov
repz
ss
cdq
adc
jmp
sub
or
div
push
imul
sub
jp
cmp
ins
arpl
scas
aas
sbb
shl
in
push
and
push
xor
pop
mov
(bad)
or
dec
hlt
sti
ins
and
sub
cmp
fdiv
and
xor
mov
shl
repnz
jae
mov
push
cmps
mov
ins
mov
mov
imul
out
retf
push
clc
push
sbb
pop
ss
cmps
stos
gs
pop
mov
lods
ins
push
pop
pop
cmp
mov
sti
out
xchg
xchg
ds
inc
add
mov
inc
mov
mov
(bad)
and
(bad)
call
xor
jne
aaa
sub
inc
pop
add
dec
fcomi
test
cmp
xchg
adc
addr16
rcl
mov
push
inc
mov
or
(bad)
ins
(bad)
lahf
pop
adc
shr
push
sbb
outs
push
stc
ins
inc
leave
jbe
fbstp
sbb
lods
push
inc
sbb
lods
mov
mov
push
cmp
fstp
cmp
add
cmp
retf
jb
imul
jl
fist
add
retf
pop
test
pop
mov
add
lds
inc
push
mov
mov
inc
es
add
mov
pop
jmp
retf
rcl
cmp
jae
xlat
add
mov
repnz
loop
ficom
mov
ffreep
fidivr
xchg
in
push
lock
mov
std
pop
push
(bad)
sti
retf
sbb
cmp
push
stos
ret
popa
pop
and
inc
stc
mov
xchg
loop
sub
cmp
stc
mov
sbb
mov
in
jmp
and
mov
fidiv
retf
mov
ja
shl
mov
xchg
push
cmp
mov
xchg
add
leave
ficomp
ins
push
or
out
xlat
mov
mov
mov
scas
inc
out
in
stc
pushf
nop
fild
aaa
ficomp
push
inc
das
xchg
mov
jne
daa
ins
cmps
in
cwde
inc
or
rcl
jb
arpl
add
xchg
push
adc
cwde
outs
sub
out
dec
arpl
cmp
inc
scas
jo
aam
or
ins
cmp
inc
add
call
inc
pop
xchg
jno
cmp
mov
xchg
mov
daa
xchg
cmp
sbb
xchg
fadd
or
push
push
aas
cmp
lods
inc
ins
jg
lods
movs
jbe
sub
pop
pop
loopne
cmp
lods
ss
sbb
cwde
call
sbb
xor
mov
mov
jmp
out
mov
test
push
gs
fcomp
xchg
pop
add
rol
mov
cmp
push
lds
mov
nop
repz
nop
xchg
sbb
movs
sbb
leave
adc
add
push
mov
cmps
mul
sbb
(bad)
rol
mov
pop
neg
adc
rcr
jns
scas
jge
cld
fidiv
aaa
int
jae
mov
inc
inc
cmc
xchg
mov
pop
jmp
push
xchg
iret
leave
jnp
pop
imul
bound
stc
pusha
mov
arpl
imul
cmc
mov
fcomp
into
xor
ficom
pop
xor
push
ror
jecxz
jnp
pop
repnz
stos
shl
dec
xchg
ja
jg
inc
jo
test
js
mov
and
or
jo
leave
pop
and
sbb
pushf
or
push
setb
xor
pop
call
loope
arpl
mov
test
jbe
dec
xor
pop
das
call
jae
or
adc
cmp
push
ret
add
adc
cwde
adc
pusha
dec
or
cwde
adc
pusha
dec
or
pop
rcl
pusha
dec
or
push
ret
xor
sub
add
xlat
add
pusha
lods
xchg
pop
cld
js
outs
pop
fbstp
repnz
adc
sub
outs
or
jecxz
repnz
mov
cld
mov
fadd
mov
out
int
fndisi(8087
jmp
int
mov
mov
push
push
stos
scas
sub
aam
ja
xor
rol
mov
cmp
mov
dec
retf
jle
mov
fs
or
jl
mov
in
xchg
cmp
cmp
popa
lds
jo
xor
add
xchg
ss
xor
jo
stc
xor
adc
mov
cdq
add
sbb
je
cwde
ins
std
and
jmp
mov
push
(bad)
jle
dec
test
sti
or
hlt
out
adc
bnd
push
mov
mov
pop
push
push
inc
sbb
mov
icebp
loope
fwait
push
clc
cli
mov
cmc
mov
int
pop
fmul
xchg
and
push
fsubr
jns
mov
mov
push
push
jle
and
and
jmp
add
fwait
icebp
push
mov
je
(bad)
add
inc
not
and
add
xchg
add
clc
jle
mov
sti
out
cmp
es
ss
out
inc
jnp
inc
pop
sub
push
pop
push
je
fs
rcr
lds
loopne
and
push
push
rcr
pop
jg
std
sbb
jmp
popa
mov
xor
mov
leave
sbb
stc
stos
fdivr
add
adc
push
and
test
jle
pop
out
outs
pop
fbstp
pushf
jnp
(bad)
adc
mov
inc
mul
in
dec
cmp
jbe
cvtdq2ps
shl
push
inc
cmp
fmul
adc
(bad)
repz
arpl
or
jo
lods
pop
and
stc
mov
jae
xlat
aaa
cmc
sbb
cmp
fdiv
das
or
xor
jae
adc
ins
add
pop
std
jmp
mov
xlat
movs
pusha
jge
inc
mov
xchg
add
cmps
dec
cmc
das
(bad)
cmc
jmp
std
jmp
cdq
aaa
aad
sti
xlat
movs
xor
jg
das
dec
in
inc
inc
adc
popa
mov
sub
add
xor
mov
inc
push
in
pop
popf
enter
lea
push
js
pushf
hlt
jns
pop
fs
sbb
lock
fs
lea
dec
daa
sub
sti
(bad)
or
into
jge
sbb
stos
lock
or
stc
scas
outs
jmp
fdiv
jnp
mov
(bad)
push
push
cmp
xlat
jb
cmc
sub
dec
push
dec
mov
cmp
push
rcl
jbe
shl
leave
pop
mul
jge
dec
int
and
mov
xchg
cli
cmp
xor
xchg
or
int
add
iret
clc
add
jo
pushf
jmp
inc
retf
sbb
in
sbb
adc
mov
adc
shl
xchg
add
mov
lods
cmp
pop
aaa
pop
sbb
enter
add
dec
(bad)
aas
aaa
int
push
and
jmp
fdiv
jnp
mov
clc
pushf
loop
xor
cli
push
gs
movs
xchg
arpl
xor
pop
imul
stc
inc
or
sbb
sbb
xchg
add
clc
jns
sbb
imul
and
xchg
mov
push
mov
jb
or
add
fldenv
movs
pop
adc
mov
push
push
call
or
lods
daa
cmp
mov
mov
out
xchg
ss
test
and
add
adc
mov
adc
inc
jle
push
int
test
scas
sub
jne
pop
retf
xor
lods
add
pop
adc
stos
loop
repnz
(bad)
retf
adc
sub
outs
jmp
fdiv
jnp
mov
hlt
mov
imul
ss
jnp
jnp
call
fistp
cmp
es
add
xor
mov
mov
hlt
(bad)
mov
call
jbe
inc
hlt
sbb
sbb
pop
pop
out
add
jmp
enter
movs
xchg
mov
cli
and
fisttp
and
leave
sub
ins
mov
ja
pop
jb
inc
pop
sbb
imul
adc
mov
mov
outs
clc
(bad)
and
adc
adc
inc
rcr
ds
sub
pop
lods
sub
js
shl
xchg
mov
or
lods
pushf
call
inc
ins
aam
sbb
xchg
mov
xchg
outs
push
pop
fbstp
inc
jle
jbe
cvtdq2ps
rcr
jle
and
loopne
xor
cmp
add
sbb
fisttp
sbb
cmp
clc
out
cmp
sub
xor
push
sub
cli
xor
out
test
shl
leave
cmc
and
pop
inc
lds
rcl
bound
mov
mov
jns
push
mov
movs
mov
repz
or
xor
pop
lock
sbb
int
dec
test
ret
(bad)
loope
fistp
retw
cmp
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
retf
outs
clc
xchg
xchg
fbstp
and
mul
mov
ret
mov
adc
xchg
pushf
call
retf
inc
ins
cmp
xor
jle
sbb
pop
int
jae
aam
dec
xchg
cmp
jo
mov
call
nop
rcr
or
fistp
inc
cmp
mov
test
xchg
pusha
ret
mov
es
inc
fwait
adc
rcl
(bad)
fidiv
mov
mov
mul
shl
push
pop
repz
sub
fwait
dec
push
pop
outs
sbb
jnp
jnp
clc
jp
xor
mov
repnz
idiv
xchg
test
in
push
xchg
ins
or
and
lods
jl
push
popa
mov
push
stos
retf
outs
and
mov
stos
or
pop
fs
ss
dec
pop
repz
je
shr
sahf
movs
mov
lds
mov
hlt
out
push
mov
in
sbb
jns
out
jnp
(bad)
je
push
cmp
(bad)
jmp
xchg
jns
fimul
rcr
sub
or
and
out
pop
add
dec
scas
call
rcr
cdq
push
loope
int
fndisi(8087
jmp
xor
adc
fbstp
or
imul
mov
dec
and
mov
lea
push
and
or
dec
mov
pop
test
or
dec
(bad)
sbb
data16
adc
sub
pop
dec
fmul
xor
dec
ret
out
add
or
pusha
xchg
pop
das
and
mov
das
push
mov
add
cmp
mov
adc
jbe
cmps
dec
jmp
fwait
movs
xchg
mov
imul
test
movd
fisttp
pop
je
push
outs
cmc
out
mov
sbb
cs
jle
add
in
jbe
test
fsub
or
outs
popf
rcr
push
adc
test
out
mov
dec
mov
push
or
jnp
mov
aam
in
ins
icebp
and
ins
xchg
sbb
jecxz
int3
js
(bad)
lds
scas
xor
(bad)
mov
or
jne
ror
inc
jno
aam
clc
dec
cmps
mov
aaa
sub
fisub
imul
cmc
mov
fistp
push
cmp
xchg
mov
add
xor
fcmovbe
or
mov
jno
xor
(bad)
repz
push
(bad)
outs
loopne
dec
popf
aam
inc
jg
sub
nop
loopne
mov
add
ins
ins
pop
fisttp
mov
fiadd
xor
scas
popa
mov
sti
or
inc
inc
hlt
or
(bad)
rcr
sub
mov
adc
test
and
pushf
pop
cmp
in
inc
xchg
cmps
pop
test
dec
cmp
adc
movs
lock
cmp
sbb
das
and
mov
aas
add
mov
push
add
add
jmp
inc
fiadd
fs
addr16
jb
dec
pop
mov
rcr
jp
out
shr
les
cmps
adc
jb
adc
scas
adc
clc
les
cdq
sub
mov
or
cdq
aaa
dec
loop
pop
dec
sbb
ins
retf
cmp
inc
push
pop
push
cmp
xchg
ret
mov
push
repz
push
mov
pop
mov
jg
pop
fistp
push
mov
rcr
int
inc
out
test
je
retf
mov
je
mov
(bad)
jmp
iret
jae
cs
xchg
arpl
mov
jnp
clc
jp
xor
mov
and
adc
xchg
jb
ficomp
ins
add
inc
cmp
leave
les
mov
cmp
(bad)
test
arpl
mov
int3
retf
pop
ret
call
stos
adc
xor
sbb
lahf
dec
sub
add
mov
in
jbe
call
and
dec
push
or
jb
js
aad
add
hlt
test
in
loope
nop
test
ror
inc
sbb
and
fsubr
hlt
into
in
and
rcl
jbe
mov
push
push
fmul
cmp
mov
inc
fmul
mov
popa
dec
adc
pop
shl
sbb
rol
imul
cmc
mov
(bad)
sbb
mov
outs
inc
push
(bad)
fstp
retf
fs
mov
sub
inc
fnstenv
dec
mov
push
fidiv
dec
sub
add
repz
xlat
mov
test
sub
mov
test
(bad)
mul
dec
xchg
jge
pop
(bad)
or
mov
aaa
jne
mov
mov
dec
jmp
wbinvd
test
ss
repz
ja
sbb
cmps
rol
imul
cmc
mov
out
cmp
inc
outs
push
out
cli
int3
jae
mov
adc
aam
in
cmps
xchg
shl
sub
cmp
imul
mov
imul
mov
imul
dec
(bad)
in
cmp
imul
cmps
out
out
fsub
dec
push
sub
cdq
mov
mov
dec
jp
popf
fs
scas
test
(bad)
outs
push
fnstsw
fistp
loope
fistp
jg
popa
jmp
pop
or
mov
loopne
cwde
cmps
adc
push
sub
sahf
adc
push
icebp
aam
jle
lods
add
pop
sar
imul
sbb
xor
scas
sbb
imul
push
(bad)
shl
js
jnp
out
int
fndisi(8087
jmp
daa
(bad)
aaa
mov
out
test
pop
ret
cmc
cmp
or
stc
lods
sbb
lahf
gs
xchg
shr
rcr
neg
outs
push
pop
add
dec
pop
ins
pop
jae
inc
xchg
xchg
popf
xlat
pusha
cdq
push
les
add
adc
inc
push
push
int3
push
fiadd
(bad)
retf
(bad)
push
cmp
dec
lock
je
dec
ja
push
or
sub
mov
lahf
jle
jbe
cvtdq2ps
cmp
push
hlt
test
cmp
xor
cmp
and
jno
ja
aam
shr
fwait
scas
(bad)
push
ins
out
pop
stc
cmps
cmp
dec
and
stos
jge
sbb
pushf
inc
or
and
imul
xor
dec
sbb
outs
inc
cmp
push
scas
sub
fmul
test
aam
cmp
in
fist
push
jnp
push
xchg
imul
shr
pop
push
fisttp
mov
and
mov
mov
stc
and
popf
cdq
fisttp
imul
xchg
(bad)
xor
rol
push
js
inc
or
jnp
pop
lods
pop
mov
ds
sub
loop
sub
pop
les
shl
push
inc
mov
cmp
adc
cmp
inc
mov
int3
mov
lahf
pop
push
fst
sub
xchg
lods
fistp
repnz
mov
outs
mov
jle
xchg
cmp
cmp
int
loope
xor
cdq
mov
(bad)
ror
in
cmp
jno
mov
jmp
cmp
popa
add
xchg
icebp
std
popf
retf
inc
dec
outs
push
xchg
push
cmc
arpl
push
xchg
stos
test
jge
lods
xor
imul
test
dec
push
hlt
sub
int
adc
ja
jo
test
das
in
mov
xor
repnz
mov
out
loope
dec
out
pop
or
push
mov
std
adc
lock
bound
pop
test
sub
js
jno
mov
cmp
pop
or
jp
mov
(bad)
cmp
cs
add
inc
fwait
jnp
shl
push
imul
or
stos
(bad)
out
ins
lock
mov
stos
test
inc
cmc
sub
sub
and
loope
call
xchg
fcmovnbe
icebp
shr
push
iret
bound
pop
dec
and
xor
icebp
aaa
mov
dec
or
or
xchg
or
(bad)
std
mov
mov
jae
outs
adc
lahf
mov
mov
cmp
lea
cmp
out
loop
gs
cmc
jl
ret
inc
test
ret
aam
lds
pop
and
sub
inc
and
rcl
and
push
inc
jno
adc
xchg
push
mov
popf
and
sub
imul
lahf
popa
xchg
cs
sub
mov
addps
xor
pop
imul
imul
aam
dec
repz
dec
fidiv
(bad)
inc
popa
mov
cmp
xchg
mov
xchg
sti
dec
fcmovnbe
scas
sbb
mov
popf
ins
scas
lds
icebp
loopne
into
call
lods
fild
jp
xchg
jne
cmp
fstp
shl
mov
cli
inc
cs
scas
pop
iret
sti
mov
fdiv
xor
fdiv
gs
cdq
scas
xor
cmp
enter
push
adc
rcl
fwait
lds
or
pop
je
adc
jmp
fimul
bound
cmp
and
jmp
xor
movs
lock
mov
retf
shr
stos
xor
add
lock
adc
cmps
mov
repz
cmp
ror
imul
fwait
sbb
push
mov
mov
add
lahf
arpl
fimul
cwde
mov
(bad)
adc
pop
add
shr
iret
mov
xchg
ret
mov
sub
adc
icebp
je
(bad)
jecxz
push
mov
lods
mov
test
mov
out
js
ret
sub
call
pusha
rcl
lods
mov
or
test
mov
pusha
fild
add
pop
test
push
mov
addr16
scas
popf
popf
imul
mov
sbb
dec
cmps
cwde
iret
gs
sbb
ret
cmp
cmp
sub
mov
cmps
adc
pushf
push
dec
(bad)
aad
mov
add
mov
leave
cmp
leave
loope
push
jnp
inc
mov
mov
pusha
push
add
dec
push
sub
rol
inc
adc
outs
jg
pop
push
daa
int3
sub
xchg
xchg
cs
out
sbb
addps
(bad)
mov
dec
lahf
imul
xchg
mov
cmp
or
cmp
inc
stos
(bad)
out
ins
lock
mov
cmp
ss
les
push
adc
into
aas
mov
mov
push
ja
cmp
mov
(bad)
and
dec
add
mov
std
and
sti
mov
div
in
pop
xor
and
out
repnz
mov
test
aam
and
jmp
sub
add
pop
dec
fsub
push
sbb
push
iret
cmc
adc
cmps
daa
daa
and
xor
repz
cld
adc
imul
cs
mov
fstp
ins
js
imul
lods
pop
loopne
mov
xchg
or
lods
pop
mov
inc
mov
pop
and
test
sub
rcl
mov
pop
loop
lods
push
loope
add
(bad)
fld
aam
fcomp
jns
scas
int3
shl
and
xchg
pop
es
xchg
lahf
mov
out
cmp
inc
adc
pushf
adc
fcmovne
push
jae
retf
into
aaa
xchg
ror
pop
xor
mov
enter
cs
loop
sub
popf
inc
adc
push
sbb
adc
mov
bound
jp
shl
lds
test
mov
dec
jno
push
jbe
or
stc
push
cmps
mov
cmc
xchg
ss
dec
mov
adc
push
inc
cmp
dec
test
mov
outs
dec
adc
rcr
dec
hlt
test
nop
mov
sub
test
xor
adc
lock
fsub
lahf
fsub
fadd
mul
inc
cli
enter
jecxz
add
cld
aam
jecxz
loope
and
adc
xchg
repnz
bound
xchg
adc
cmp
cs
daa
or
ret
sbb
add
lock
in
sub
in
and
mov
xchg
ror
scas
dec
cwde
pop
lods
(bad)
and
lahf
xchg
or
mov
and
jb
pusha
cmc
mov
fstp
jnp
pushf
shl
and
imul
in
ss
daa
bound
fst
jmp
fs
add
int3
mov
mul
xor
sbb
aam
lods
mov
mov
pop
mov
aad
pop
loopne
movs
dec
gs
outs
inc
push
adc
mov
sub
cmps
jp
inc
jg
push
daa
push
mov
jbe
xchg
xchg
push
dec
or
xchg
adc
(bad)
push
jo
cmp
call
xor
sub
aam
sahf
sbb
mov
xchg
mov
lods
adc
jae
adc
inc
adc
pop
jge
test
jmp
xor
lea
inc
ins
mov
cmc
xchg
ds
or
cdq
mov
scas
jl
mov
leave
add
mov
push
adc
icebp
aaa
cmp
rcr
jb
xchg
adc
sar
mul
xor
fnstcw
mov
jge
pop
cs
mov
jle
dec
jbe
sub
dec
cmp
out
cs
jae
loope
sbb
cwde
mov
repnz
mov
retf
nop
cmp
jo
aam
mov
dec
push
adc
stos
imul
xchg
lds
scas
mov
mov
ss
pop
imul
push
inc
daa
int
add
sti
data16
lods
mov
mov
sahf
sub
fstp
imul
dec
fnsave
stos
aaa
stos
rol
fsub
sbb
push
push
sbb
mov
add
aaa
push
xchg
not
xchg
mov
xchg
inc
fsubr
in
mov
sbb
into
pop
outs
push
sbb
inc
outs
mov
cmp
mov
adc
xor
inc
jp
sbb
call
xchg
mov
dec
jmp
adc
cwde
add
cdq
(bad)
push
adc
jecxz
(bad)
fisub
jnp
inc
mov
add
cwde
pop
cld
pop
out
movs
aaa
cmps
mov
and
test
ret
cmp
push
mov
jne
les
adc
and
dec
cmp
or
jb
mov
xchg
cmp
test
push
inc
fs
mov
mov
popa
scas
add
adc
call
or
(bad)
leave
in
ins
mov
cmc
or
mov
push
imul
(bad)
xchg
sahf
and
push
mov
loop
xchg
pushf
sub
sub
(bad)
push
or
push
mov
dec
je
in
dec
xor
adc
sbb
mov
out
or
lahf
mov
test
cs
out
dec
push
das
leave
(bad)
in
shr
cs
loopne
test
lds
jbe
sbb
mov
and
adc
fimul
sbb
and
jl
sahf
sub
sbb
mov
out
loop
add
pop
and
mov
xor
pop
daa
cmp
fiadd
jno
mov
rcl
xor
dec
test
rcr
jmp
movs
sbb
xchg
popf
xor
mov
jge
mov
ja
rsqrtps
inc
je
call
pop
xchg
lods
jo
mov
cmps
outs
shl
sub
mov
aaa
dec
push
pop
leave
fnstsw
and
adc
xor
sahf
std
jmp
xchg
cdq
imul
rcr
test
and
xchg
pop
push
movs
push
in
daa
ja
xor
leave
mov
sub
pop
(bad)
js
out
arpl
cmps
and
jg
cdq
xchg
jae
dec
call
nop
adc
inc
jecxz
gs
dec
pushf
clc
popf
sbb
adc
es
rep
mov
mov
loope
and
mov
iret
repnz
loopne
fs
and
jno
mov
mov
pushf
cmps
xlat
jp
dec
jns
int3
cmc
imul
gs
ret
(bad)
ret
inc
lods
xor
scas
jo
sub
and
cmp
xor
jb
mov
and
clc
sub
mov
in
jb
xchg
cs
sub
mov
in
adc
lds
js
fsubrp
sahf
sbb
inc
mov
add
and
and
pushf
stos
test
or
loope
or
xor
jnp
test
sbb
shl
and
push
inc
not
fbld
clc
leave
inc
jnp
mov
cmp
fist
sub
mov
(bad)
cmps
shl
inc
sbb
sub
push
push
jbe
or
inc
xor
add
(bad)
out
sub
out
(bad)
sub
icebp
push
jb
push
push
scas
cmps
repnz
pop
icebp
(bad)
xor
xor
adc
xor
pusha
mov
adc
loope
test
push
pop
push
stos
ja
mov
cmp
jbe
shr
ficom
fidiv
and
add
leave
dec
mov
pop
pop
fsubr
push
lock
xor
(bad)
in
push
add
pushf
mov
cmp
add
jno
mov
daa
xchg
jmp
and
jnp
in
mov
jmp
jb
mov
xchg
rcl
loopne
pop
push
cmps
dec
sbb
jl
aas
inc
fild
movs
fild
cli
cs
das
pop
jl
cmp
jle
ffree
loopne
sub
popa
xchg
mov
lods
movs
push
rcl
adc
lahf
shl
dec
call
sbb
aad
pop
add
inc
cdq
and
mov
(bad)
out
push
sbb
pushf
push
test
mov
mov
nop
dec
shr
push
test
sbb
dec
cmp
push
cld
in
jno
ror
pop
fs
cmp
pop
pop
dec
aad
inc
xchg
icebp
sub
and
jb
cmp
(bad)
hlt
adc
call
cmp
loop
fisttp
and
cmps
call
sbb
int
mov
out
xor
lea
test
jnp
or
or
adc
push
rcl
sub
jmp
and
jb
bound
mov
mov
ja
sbb
push
adc
xchg
sub
fs
in
sysexit
mov
xchg
cmp
jb
add
sub
add
mov
imul
loopne
dec
cld
mov
cmps
bound
cwde
popf
or
add
jecxz
add
lea
sbb
inc
psubb
cli
pop
lock
push
inc
int
add
shl
fcomip
pop
push
cli
mov
push
push
std
psubb
cli
pop
lock
hlt
mov
cmp
retf
test
mov
xor
lea
xchg
jo
pop
sub
xchg
js
outs
in
loopne
dec
push
mov
or
sub
inc
xchg
imul
push
in
inc
jbe
sub
push
rcl
fs
test
fsub
sbb
dec
dec
shl
call
and
sub
mov
mov
jb
enter
outs
adc
mov
add
cmp
jg
jbe
mov
lock
sbb
scas
es
dec
push
aaa
jne
ins
pop
test
xchg
mov
or
in
dec
popf
mov
in
cmp
fisttp
cs
add
aaa
stos
aam
enter
mov
imul
push
mov
enter
fsubr
cmc
test
adc
aaa
or
lods
retf
imul
adc
iret
adc
jb
and
addps
fiadd
in
cmp
jno
test
mov
jns
ins
sbb
sbb
sbb
dec
ins
mov
(bad)
rcl
rcr
mov
jns
cli
inc
jns
xor
mov
sbb
push
xchg
mov
mov
ins
in
or
ja
or
xchg
sbb
cwde
out
(bad)
cmps
xchg
(bad)
push
or
outs
mov
push
and
nop
push
pop
add
cmps
test
out
inc
movs
pand
je
push
aas
pop
je
pop
int
fwait
outs
push
mov
cmps
mov
xchg
arpl
push
lods
pushf
dec
push
sbb
xor
inc
out
mov
iret
in
mov
and
jecxz
mov
movs
ins
add
mov
mov
pop
jne
fist
jbe
push
xchg
repz
inc
mov
sub
lea
jge
aas
inc
iret
imul
jecxz
outs
mov
dec
cs
movs
retf
data16
sbb
add
cmp
add
sub
shl
sub
lods
pop
mov
mov
and
mov
xor
mov
pushf
(bad)
(bad)
mov
or
inc
cmp
cmp
or
fidiv
jae
sbb
mov
shr
ja
xchg
and
cdq
out
ja
sub
cmp
pop
hlt
adc
inc
jge
not
test
not
inc
jg
fild
xchg
shl
ret
add
icebp
loopne
xor
add
mov
cmp
adc
push
or
or
mov
inc
dec
xor
enter
dec
add
sbb
jae
leave
or
sub
test
jns
mov
cmp
mov
enter
es
add
jmp
adc
rcr
es
out
add
add
mov
sub
cli
cs
sub
inc
inc
cmps
xchg
sbb
mov
jge
xchg
lock
lahf
hlt
dec
rol
repnz
push
sub
sub
push
xor
pop
dec
push
clc
lods
pop
mov
js
push
xchg
or
lods
pop
mov
push
push
push
stos
mov
jmp
jne
shr
sub
mov
mov
xchg
or
(bad)
(bad)
xchg
pop
push
push
sbb
cmp
ds
mov
sti
lods
sub
dec
add
out
xchg
syscall
xchg
mov
inc
js
mov
mov
call
scas
mov
and
sahf
inc
mov
pushf
out
ffreep
inc
ja
loopne
mov
push
lds
into
inc
retf
ss
leave
mov
xchg
cmp
in
shr
jmp
scas
ret
ss
cmp
stos
pop
jbe
cmp
cmp
push
or
cdq
pop
rcr
sbb
jl
or
pop
and
clc
mov
into
cmp
adc
shl
or
pop
jge
push
or
cmps
dec
push
es
jno
fnstenv
jp
fwait
lods
mov
sbb
inc
pop
sub
out
int3
stc
add
test
inc
xor
and
rol
sbb
adc
push
dec
xlat
xchg
ds
daa
xchg
xchg
in
cmp
inc
jecxz
mov
in
or
iret
pop
mov
cs
retf
lods
xor
scas
add
neg
xchg
pusha
lods
movs
into
cmp
daa
test
adc
sahf
shl
aam
xor
mov
in
out
or
pop
retf
hlt
push
xor
stos
sub
or
jb
mov
test
cli
imul
adc
js
adc
pop
inc
call
jle
dec
(bad)
jne
adc
in
jbe
or
or
nop
(bad)
cdq
clc
sub
pop
rcr
in
dec
adc
fld
movs
adc
fs
push
in
pop
adc
fcmovnb
scas
or
mov
shl
sub
clc
daa
xor
and
mov
and
jmp
mov
add
push
mov
push
dec
fst
lock
popa
push
lahf
clc
sub
jg
lock
popa
std
aas
rol
inc
add
adc
inc
mov
jno
mov
push
sahf
call
fs
inc
xor
inc
cwde
sahf
pop
sub
inc
dec
lods
mov
or
imul
enter
es
cld
adc
pop
pop
clc
es
xchg
cli
lahf
and
lahf
and
lahf
sub
lahf
sub
cmc
jg
fcomp
pushf
jg
cld
adc
jl
cmps
mov
cmc
lahf
adc
sbb
pop
aaa
dec
push
xchg
cmp
pop
dec
lock
pop
cmps
clc
and
jmp
fistp
dec
mov
cs
movs
dec
loopne
inc
push
or
sahf
sbb
shl
inc
sub
imul
call
jnp
mov
pop
pop
sub
cwde
mov
jbe
stos
xor
push
mov
jnp
jmp
cs
pop
xchg
jno
fnstenv
cdq
cmp
es
and
jmp
mov
sub
movs
sahf
imul
ja
add
cmp
cmps
mov
cli
rcl
rol
sub
or
fsub
lds
pop
add
and
dec
je
add
gs
add
adc
data16
cmp
lods
xchg
push
pushf
xor
adc
xchg
add
inc
push
sahf
in
adc
mov
or
adc
bound
nop
mov
mov
shl
jae
pop
mov
or
lds
cmp
das
(bad)
aaa
pop
jns
and
push
xchg
xchg
cmp
shl
pushf
outs
dec
adc
in
add
push
pop
xor
mov
push
push
sbb
push
pop
sub
stc
int
pop
dec
add
cdq
cmp
xchg
add
shr
mov
push
mov
mov
sti
or
pop
retf
mov
aas
not
shr
pop
cmp
dec
and
mov
in
push
and
test
pop
dec
je
add
or
cmps
sub
retf
mov
push
xor
add
jl
and
mov
push
pop
or
mov
sub
ficom
fisubr
mov
adc
je
lahf
or
imul
(bad)
mov
sub
fild
sahf
mov
dec
add
aas
aam
add
inc
sar
mov
call
lds
push
and
ins
lods
pop
bound
cmp
ss
aam
shl
lea
cmp
sbb
sub
push
add
lods
retf
push
(bad)
bound
xor
mov
dec
mov
rcr
cdq
fidiv
xchg
sbb
fiadd
test
and
xchg
add
mov
sub
pop
mov
mov
and
lea
sub
mov
xor
rcr
push
dec
push
dec
adc
call
sbb
fs
lahf
dec
popa
pusha
fbstp
or
add
nop
pushf
idiv
add
loopne
in
mov
lds
mov
pop
adc
sub
mov
rcr
retf
ret
xor
popa
pop
outs
pop
outs
aad
mov
cdq
sub
shl
dec
xchg
xchg
data16
daa
dec
out
test
ins
cmp
mov
lds
fldenv
inc
icebp
jg
mov
cdq
push
outs
mov
pop
inc
pop
dec
popa
jle
dec
jmp
inc
nop
(bad)
les
inc
xchg
enter
mov
jbe
sbb
xchg
aaa
out
cwde
push
jb
movs
int3
aad
rol
sbb
cmp
mov
in
sub
aaa
popa
inc
xchg
push
xchg
cli
stos
pop
mov
cmc
add
cmp
shr
add
dec
lods
cli
ins
clc
lods
sbb
shl
adc
loop
mov
sbb
mov
(bad)
push
push
lea
fs
fld
jl
dec
cmp
inc
mov
xor
(bad)
sbb
pop
or
imul
push
les
sub
or
jmp
mov
jle
xor
js
jnp
jmp
push
hlt
das
pop
cmp
pop
mov
cmp
les
fiadd
lea
call
ficomp
data16
mov
or
fmul
or
mov
dec
sub
adc
(bad)
bound
mov
xchg
push
sahf
hlt
data16
or
pop
lods
imul
das
imul
icebp
cmps
fld
mov
imul
sar
cmps
cmp
leave
into
out
dec
jb
hlt
out
mov
pop
inc
(bad)
mov
call
pop
daa
ds
repz
lods
shl
fdivr
sub
int
xor
xor
pop
add
dec
lahf
add
fistp
sub
ss
xchg
in
addr16
jmp
push
pop
xchg
xor
and
das
dec
outs
(bad)
(bad)
mov
lods
ss
inc
sub
cmp
sub
xor
pop
xchg
jmp
data16
xchg
in
retf
idiv
sbb
imul
sub
inc
dec
retf
cmp
xchg
mov
pop
clc
mov
adc
cdq
into
push
ret
lods
ss
loop
repz
jns
xchg
jg
in
jno
mov
cdq
inc
jne
retf
icebp
xchg
or
mov
push
gs
pop
clc
sub
data16
sub
jl
in
stos
mov
adc
call
cs
dec
sar
icebp
push
jg
sti
nop
popa
mov
fistp
cmps
inc
nop
out
out
dec
xchg
sti
mov
mov
mov
(bad)
call
cmp
ins
sbb
clc
cmps
push
aaa
daa
ja
(bad)
adc
popf
adc
dec
je
popf
enter
in
adc
xor
scas
test
pop
mov
out
outs
inc
inc
add
loop
inc
or
sbb
dec
nop
xchg
lods
mov
add
fsubr
push
mov
xchg
pop
push
pusha
and
add
loop
sbb
dec
dec
dec
or
cmps
mov
cmp
adc
and
sub
ja
inc
out
jb
add
cmp
ficomp
(bad)
loop
pop
out
xchg
jbe
pusha
outs
loopne
mov
das
inc
add
adc
add
add
add
add
add
add
add
add
add
and
inc
push
popa
adc
mov
rcl
icebp
xor
fiadd
or
add
add
adc
pop
sub
adc
inc
mov
(bad)
lock
scas
shr
or
(bad)
icebp
or
sbb
add
add
loopne
push
cld
push
sub
pop
jne
pop
mov
push
sbb
add
es
mov
adc
in
xchg
and
leave
lea
fsub
mov
sub
jo
cmp
int3
mov
hlt
cmc
xchg
or
and
mov
sbb
adc
scas
sbb
sbb
aas
adc
cld
movups
mov
inc
mov
and
lock
adc
jge
aam
jb
jge
clc
sbb
pop
push
cmp
cmp
loope
adc
or
sbb
push
sub
cwde
jns
sbb
dec
les
int3
adc
inc
or
mov
pop
push
(bad)
sti
iret
xchg
inc
mov
ins
(bad)
jl
mov
xchg
jb
mov
cli
arpl
shl
lock
mov
mov
and
mov
dec
cmp
inc
clc
dec
shl
jmp
(bad)
mov
cmps
test
daa
popa
sub
rol
loopne
dec
or
add
and
jmp
jmp
mov
sub
scas
dec
stc
and
jmp
jle
frstor
icebp
cmp
jp
out
adc
adc
xlat
and
and
into
lods
neg
je
add
jg
cld
lahf
cmc
xchg
(bad)
loopne
pop
(bad)
inc
mov
mov
adc
mov
mov
inc
std
retf
out
and
inc
scas
adc
ja
sti
adc
rol
imul
pop
pop
outs
stos
(bad)
xchg
dec
push
mov
cmp
in
mov
jle
loop
loopne
loop
loopne
loop
inc
les
lock
cmp
add
cld
lsl
sub
add
add
mov
adc
adc
je
fsubr
dec
xchg
lock
test
add
cmp
mov
cwde
das
(bad)
dec
mov
std
add
xchg
mov
daa
in
fbstp
cli
and
adc
ds
xchg
std
pusha
mov
pop
inc
sti
or
mov
popa
dec
mov
xor
jecxz
xchg
or
mov
adc
outs
shr
sub
das
(bad)
lock
or
add
add
test
shr
or
or
adc
add
scas
les
push
sbb
aam
pop
clc
and
push
cmp
push
add
sub
dec
lock
mov
in
push
inc
cmp
xor
leave
addr16
movs
test
or
xlat
mov
mov
xchg
leave
fcmovnbe
push
inc
cmp
and
jmp
jmp
xlat
pop
jne
sbb
pop
and
shl
icebp
scas
adc
pop
add
pop
stc
add
pop
and
add
add
xchg
pop
push
and
inc
adc
js
or
mov
push
jl
mov
sahf
cmp
mov
pop
xor
call
(bad)
clc
cli
mov
pop
test
stos
mov
in
fucomip
cmc
adc
and
jmp
fiadd
sbb
jnp
push
and
jle
pop
pop
loop
lsl
das
icebp
scas
enter
repnz
push
mov
shr
or
add
push
inc
xchg
mov
cdq
push
enter
dec
cmp
hlt
jmp
mov
clc
jl
cmc
and
pusha
je
or
or
leave
jno
inc
and
jp
(bad)
adc
popa
add
lea
inc
gs
cmp
ret
das
shr
das
shl
lock
cmp
inc
adc
lock
mov
adc
inc
sti
ds
mov
cmp
push
dec
into
mov
xchg
fiadd
jle
ror
loopne
in
les
adc
(bad)
into
nop
add
sbb
push
gs
clc
ins
std
add
add
push
loope
dec
inc
jo
and
test
xchg
loopne
loop
loopne
add
sub
icebp
dec
lock
adc
jg
inc
cld
add
mov
push
in
sub
push
mov
mov
jg
xchg
jmp
jmp
ja
mov
into
xchg
inc
or
push
jle
aaa
xchg
xlat
jbe
mov
push
mov
jge
enter
cmp
dec
xchg
inc
cmp
ret
dec
fld
sar
retf
fs
jae
jl
or
jmp
outs
iret
sbb
push
daa
mov
loop
and
jg
fild
mov
xlat
loopne
inc
lds
pop
scas
adc
and
(bad)
idiv
outs
in
jns
bnd
lds
icebp
cmp
mov
lahf
in
jl
push
ficomp
addr16
pop
fsubr
leave
xchg
(bad)
xor
push
jnp
(bad)
inc
mov
jno
test
out
cs
repnz
mov
dec
xor
lahf
aas
repz
imul
push
mov
add
inc
mov
adc
imul
sbb
and
cmp
test
add
pop
test
mov
mov
cmp
into
data16
mov
xchg
iret
xchg
sbb
inc
xchg
pop
pop
mov
fisttp
dec
ds
add
addr16
call
in
inc
lahf
xchg
mov
into
pop
fistp
cld
loope
mov
mov
(bad)
cmc
mov
pop
mov
popf
test
test
and
mov
sbb
cmp
scas
xchg
stc
inc
sahf
push
leave
stos
out
lds
add
adc
out
or
and
clc
add
out
mov
push
inc
lds
sbb
lock
mov
xor
gs
lock
fs
into
mov
dec
jl
add
(bad)
jo
sahf
retf
loope
xor
sti
inc
scas
mov
test
(bad)
sbb
(bad)
fidiv
cli
retf
adc
in
sub
or
adc
stos
(bad)
fidivr
lea
pop
sub
test
ret
adc
jle
and
maxps
rcr
ds
out
pop
mov
add
pop
cmp
xchg
push
mov
push
loope
xchg
and
out
sbb
sub
js
xchg
clc
pop
inc
shr
push
das
sbb
cmp
pop
(bad)
enter
inc
push
mov
push
test
scas
scas
or
nop
popa
dec
or
stos
jl
inc
shr
mov
xchg
popa
push
mov
retf
es
xor
xor
mov
pop
shl
shl
dec
jne
mov
lahf
mov
out
ret
jle
add
jnp
sbb
push
sbb
adc
add
pop
ror
scas
or
ret
add
adc
inc
and
jle
loop
add
(bad)
cld
jne
sbb
jle
inc
pop
fidivr
sti
add
dec
mov
call
std
mov
scas
fsub
int
out
scas
movs
ficomp
icebp
pop
in
pop
cld
push
inc
and
sbb
adc
lods
cmp
lock
lods
jbe
inc
add
popa
and
loopne
retf
test
pop
or
add
xchg
xchg
xor
int
xchg
cs
add
mov
or
sbb
inc
test
daa
dec
cmp
test
jns
cdq
outs
cs
and
inc
xchg
sub
les
jg
outs
in
cs
ja
in
xor
add
aas
push
cmp
xchg
bound
xor
pop
movs
aas
mov
jno
sub
data16
inc
xchg
test
cs
add
es
leave
jno
adc
(bad)
fisubr
sub
(bad)
mov
xor
sub
dec
pop
cmp
inc
mov
daa
dec
dec
das
stc
jno
lea
es
or
jmp
add
xchg
test
mov
js
inc
pop
cld
push
das
sub
push
xlat
ins
inc
xchg
rcr
jne
mov
int3
in
pop
fdiv
mov
movs
arpl
or
xor
push
rol
scas
xor
mov
and
adc
sub
frstor
vmaxss
sub
inc
test
sub
stos
and
int3
data16
mul
test
mov
std
cwde
shr
pop
ret
jb
arpl
popf
inc
sub
sbb
stos
lds
jmp
xchg
ror
popa
gs
and
cmps
and
loopne
shl
dec
popf
ror
cdq
into
in
pop
xchg
cmp
adc
jno
imul
dec
outs
inc
je
fdiv
xor
xchg
cmp
inc
add
into
xchg
jge
retf
jl
int
xchg
pop
cdq
dec
imul
gs
loop
nop
jecxz
adc
repz
push
push
xchg
scas
pusha
mul
sbb
inc
adc
retf
or
jns
mov
movs
and
(bad)
int
add
lea
aad
and
rcr
cld
xor
ins
lds
jl
ret
stos
mov
div
add
iret
pop
shr
cmp
push
lock
inc
pusha
test
add
ss
retf
jmp
pusha
std
push
adc
gs
das
adc
pusha
or
(bad)
mov
push
fld
nop
push
cdq
ins
fcmovb
sub
lea
dec
sub
jp
push
or
out
out
adc
pop
in
lahf
mov
in
(bad)
cli
dec
sub
iret
das
idiv
in
out
cmp
fdiv
daa
xchg
sti
xchg
je
push
mov
rcl
loop
shl
lea
scas
cmp
jae
js
mov
jne
retf
cmp
mov
out
push
or
ja
stos
jo
inc
retf
add
stc
push
(bad)
aam
aad
xchg
gs
(bad)
mov
sbb
mov
fmul
jb
or
push
mov
mov
sub
rol
scas
les
sub
add
out
lods
jecxz
std
(bad)
sbb
repnz
daa
adc
(bad)
mov
add
add
mov
pop
(bad)
or
pop
rcl
aad
fadd
sub
xchg
dec
pop
(bad)
xchg
sub
push
cmp
mov
mov
or
outs
add
mov
cmp
add
std
test
pop
ret
cmp
and
retf
lods
jnp
jecxz
xchg
dec
adc
push
fcmovu
pop
pop
icebp
adc
mov
mov
fld
lds
and
jmpw
test
mov
xor
add
gs
cmp
out
xchg
and
push
xchg
push
jae
adc
popa
push
or
imul
xchg
mov
pop
out
dec
fsub
out
sahf
fidiv
(bad)
movq
mov
jns
scas
sbb
jnp
cli
sbb
pushf
add
and
bswap
sbb
gs
adc
or
xor
adc
push
stos
inc
fs
test
jge
scas
mov
into
jnp
adc
adc
popa
aaa
sti
cmp
stos
repz
ins
cmp
pop
sub
push
mov
loopne
cmp
sahf
pop
adc
sbb
sub
inc
push
add
add
cs
lea
xchg
ins
imul
(bad)
neg
sbb
sub
leave
push
cwde
mov
inc
repnz
enter
stos
jns
ret
aam
ror
xchg
xor
xor
retf
xchg
xchg
or
je
test
fadd
mov
pop
sub
fsubr
mov
stc
dec
push
dec
xor
jecxz
add
jbe
je
push
sahf
cld
fild
fisttp
and
jno
xor
xchg
or
pop
cmp
ja
add
loopne
push
outs
add
fwait
xor
jbe
arpl
push
mov
mov
sbb
jae
mov
sbb
sti
inc
inc
cmp
ud2
adc
push
add
lock
xor
add
iret
add
pop
mov
retf
add
mov
ret
sbb
dec
in
add
xchg
cs
lock
add
xchg
jp
xchg
rcr
outs
cwde
neg
retf
sub
fdiv
out
dec
(bad)
out
cmp
enter
jne
inc
push
ins
xor
sub
ins
sub
sbb
gs
xor
jbe
int3
pop
dec
ins
cmp
in
cmp
mov
clc
inc
enter
sahf
repnz
cdq
(bad)
pop
outs
mov
imul
scas
pop
inc
sbb
jle
sti
fadd
add
add
mov
mov
cmp
add
mov
(bad)
pop
or
aaa
mov
jl
cwde
adc
cmps
out
xchg
mov
scas
mov
add
mov
shl
std
cmp
jmp
dec
sar
imul
cmp
sar
dec
arpl
inc
bound
(bad)
cmps
xchg
jl
fwait
jl
stos
pop
cmp
jae
call
adc
fwait
bound
xchg
and
or
push
pop
dec
dec
inc
pop
or
xchg
popf
inc
xchg
stos
or
xchg
sub
mov
mov
mov
shl
sar
sub
fst
pop
dec
xlat
push
call
cwde
push
stos
lock
inc
aad
mov
ins
xor
and
mov
or
mov
dec
icebp
push
sbb
repnz
js
mov
mov
push
inc
out
or
push
push
stos
dec
inc
push
sub
and
sub
ins
fcom
inc
push
mov
dec
les
and
pop
add
push
out
mov
jb
pop
xchg
cmp
add
dec
adc
addr16
sbb
test
or
ror
push
and
call
imul
popa
sub
retf
rcr
stos
jg
out
aam
sar
cmp
pop
and
std
(bad)
ja
outs
pop
retf
ins
sbb
adc
xchg
jo
xchg
push
call
test
and
les
mov
stos
sbb
mov
outs
arpl
cmp
sub
rcl
xor
clc
adc
pminub
ret
mov
or
sub
scas
lock
jmp
mov
adc
jnp
push
loop
outs
dec
pop
mov
ss
(bad)
mov
push
fidivr
fld
scas
es
(bad)
imul
mov
mov
add
xor
jo
retf
or
cmp
aam
in
push
scas
shr
cmps
adc
pop
aaa
fcomp
sar
mov
addr16
pusha
cmps
scas
std
and
sti
call
(bad)
lahf
lahf
or
into
push
push
cmp
inc
add
loope
ds
or
and
pop
je
(bad)
out
fs
aas
gs
pop
and
imul
jle
int
jmp
pop
pop
mov
cdq
push
push
jmp
or
inc
and
fst
sub
mov
test
pop
shl
mov
call
mov
xchg
jae
test
sbb
pop
mov
jmp
push
cld
cwde
inc
pushf
test
sub
inc
dec
xor
ins
sbb
rcr
and
add
sar
add
mov
sbb
popf
add
add
scas
and
sub
xor
arpl
xlat
push
and
xor
mov
xor
sbb
inc
lea
cs
push
cdq
movs
pop
loopne
push
and
rol
sbb
and
pusha
inc
adc
call
add
or
movs
push
xchg
sbb
pop
inc
mov
xor
aad
arpl
das
ss
(bad)
aas
test
call
sub
sbb
gs
out
jge
sti
pop
nop
bound
push
add
loope
(bad)
out
and
and
or
or
push
sti
test
fadd
and
popa
push
xor
sbb
(bad)
mov
cli
push
aam
stos
lods
cs
shl
lahf
and
scas
mov
inc
jns
pop
sbb
xchg
mov
imul
sub
mov
sbb
movs
imul
out
pop
or
mov
fnstenv
lea
shl
daa
mov
xchg
or
in
mov
push
test
repz
or
sbb
inc
fwait
xor
jmp
addr16
pop
adc
jno
or
(bad)
outs
cvtsi2sd
push
ins
xchg
jmp
inc
dec
cli
jmp
push
dec
shl
test
(bad)
fwait
repz
test
xchg
out
jp
xor
mov
(bad)
mov
out
fistp
ds
fincstp
into
iret
mov
ret
fisttp
lds
xor
sti
loopne
repnz
pop
and
nop
push
mov
sub
sub
test
adc
push
sbb
jb
add
test
hlt
mov
add
xor
xchg
retf
xchg
sbb
mov
mov
or
test
lds
jmp
mov
push
int3
mov
push
mov
pop
mov
add
ret
mov
xchg
inc
xor
mov
inc
ret
inc
add
rcr
jp
jmp
push
mov
pop
mov
pusha
in
lods
add
leave
or
or
push
jge
fcomp
(bad)
pushf
aas
loopne
inc
sahf
dec
aas
int3
xchg
xor
lock
add
clc
add
add
daa
inc
repnz
add
loopne
inc
or
jg
adc
das
aam
lahf
mov
dec
fisubr
xor
(bad)
jl
dec
mov
adc
cmp
push
popa
sbb
and
in
mov
cmp
add
cld
mov
push
mov
adc
ins
cmp
xchg
jmp
mov
add
aam
and
(bad)
loope
inc
mov
xchg
cdq
inc
rcl
sbb
popa
popf
pop
fdivr
out
jns
adc
cmps
sbb
xor
mulps
and
out
pop
mov
mov
fidiv
out
lods
aaa
in
ins
js
cli
cdq
bound
xor
or
add
mov
int3
iret
aam
retf
xor
aas
ds
cmps
repz
xor
out
test
clc
sbb
mov
js
inc
inc
cmps
inc
xchg
adc
push
ret
add
sbb
nop
nop
sub
dec
imul
inc
adc
jns
sbb
lds
add
call
push
jno
loop
dec
pop
fldenv
mov
or
loope
lods
mov
ins
jo
xchg
lods
or
aad
inc
dec
xchg
pop
gs
adc
jne
jbe
js
inc
or
dec
mov
xchg
sbb
(bad)
aam
sbb
rcl
cmp
jmp
sbb
out
jnp
jbe
xchg
inc
in
test
and
mov
mov
imul
mov
movs
mov
cdq
dec
dec
inc
movs
inc
cdq
inc
pop
pop
push
enter
cli
test
sbb
lds
into
arpl
pop
cwde
clc
les
jo
aas
xchg
fstp
imul
retf
dec
in
lods
xchg
jp
scas
dec
stc
js
push
fmulp
xchg
jp
cmp
xor
cld
repz
xchg
fadd
popf
outs
fild
add
cs
aam
mov
jnp
stc
mov
and
cdq
std
mov
or
push
sti
pop
fmul
popa
dec
clc
ror
int
stos
int3
iret
shl
dec
mov
pushf
out
jle
jge
les
sbb
mov
or
out
leave
loope
xchg
or
in
dec
add
or
mov
or
sbb
addr16
in
loopne
mov
enter
xchg
inc
push
jns
int3
mov
jae
(bad)
xor
push
xchg
je
cmps
and
mov
adc
es
movs
call
ja
push
psubb
shr
xchg
sub
mov
les
cmps
and
mov
popf
xchg
add
ret
mov
push
sub
and
add
mov
sub
cmp
pop
sub
cli
inc
mov
test
ins
out
xor
adc
push
jns
mov
(bad)
pop
jo
push
loopne
dec
add
fmul
jle
mov
shl
inc
and
out
ficom
xor
or
aam
mov
imul
pop
xchg
pop
add
sbb
mov
and
es
fsubr
sub
lods
in
sbb
enterw
sbb
out
xchg
pop
lods
pop
ins
popa
push
ret
add
sub
cmps
pusha
cs
ret
jo
xchg
sbb
daa
inc
add
and
call
popa
loopne
pop
cmp
and
fidivr
ret
call
xchg
fadd
mov
imul
jg
out
and
adc
lahf
leave
popf
mov
aaa
jae
(bad)
pop
jns
scas
in
jg
sbb
mov
ins
stos
pushf
aad
push
ins
movs
mov
mov
push
jnp
in
cmp
(bad)
stos
out
clc
cmp
jg
jge
int3
test
inc
or
jle
xchg
cmp
xchg
xor
addr16
rcl
sub
push
fimul
push
stc
push
dec
pop
add
mov
sbb
fwait
sbb
retf
and
cmp
add
test
inc
sbb
into
push
lahf
jb
imul
or
mov
xchg
mov
inc
add
sub
call
mov
mov
retf
stos
mov
inc
dec
jo
sbb
and
or
xor
mov
sbb
in
sbb
stos
sub
mov
mov
cmp
call
adc
pop
push
cdq
pop
jne
push
bound
loope
mov
sar
pop
and
push
shr
cdq
inc
xor
retf
push
mov
jae
push
adc
stos
sub
lods
pop
shl
mov
and
mov
push
(bad)
or
or
test
cmp
or
jbe
(bad)
les
xor
push
mov
xchg
push
lahf
mov
sub
leave
fwait
jae
int3
inc
mov
lock
scas
cmp
call
sbb
sti
mov
fnsave
(bad)
cld
push
add
mov
stos
cmps
push
push
cmps
pop
add
ins
sahf
jmp
fstp
xchg
cmp
mov
fbld
mov
cli
(bad)
outs
repz
daa
mov
xor
sahf
pusha
popf
mov
or
jecxz
ja
std
jb
mov
stos
(bad)
sbb
out
sub
and
out
or
pop
mov
mov
mov
cmp
outs
loop
xchg
or
leave
int3
cs
je
leave
jecxz
fs
jne
stos
lods
pop
loop
or
mov
retf
into
aas
fcomp
out
fwait
repz
(bad)
iret
js
mov
sub
or
push
shl
pop
mov
loope
(bad)
shl
ds
mov
mov
add
dec
push
neg
push
sub
into
push
or
xchg
retf
push
jno
pushf
add
jo
ss
jne
add
sub
pop
pop
stos
push
scas
enter
adc
dec
sub
jno
or
xor
imul
lds
aad
inc
push
add
xor
scas
pusha
mov
or
dec
mov
stos
mov
sub
mov
popa
sbb
sub
or
sbb
mov
dec
mov
jo
fwait
mov
xor
mov
mov
out
loop
push
push
adc
add
jmp
jne
les
leave
xchg
enter
adc
push
or
mov
dec
jnp
cmc
mov
inc
push
dec
popa
mov
push
fs
dec
mov
jb
pop
dec
(bad)
inc
add
das
aaa
xor
adc
mov
lods
sub
pop
retf
push
mov
test
and
inc
jno
(bad)
push
push
imul
or
sub
retf
inc
sbb
mov
test
xchg
dec
sub
ds
inc
(bad)
sar
jne
push
add
imul
mov
cmps
addr16
jp
test
sbb
adc
xor
xchg
test
in
push
inc
mov
jl
jle
out
push
pop
ins
outs
push
pushf
cmp
mov
fnstsw
test
sar
inc
xchg
fld
xor
pop
bound
int3
retf
cmp
jno
mov
lock
and
arpl
dec
jae
ret
or
sub
shl
xchg
adc
add
sub
push
into
es
fwait
repz
xchg
lsl
adc
popf
stc
cmp
mov
rcl
mov
sbb
xchg
rol
dec
enter
push
js
pop
mov
loopne
ret
or
idiv
add
jb
mov
fucom
mov
dec
jo
xlat
mov
(bad)
clc
push
cwde
inc
fisubr
fcomp
stos
add
jae
xchg
pop
pop
data16
xor
aaa
retf
xchg
stos
xor
dec
lea
dec
shl
xchg
inc
loope
mov
je
fnstsw
or
push
push
pop
inc
sbb
sbb
ins
mov
push
push
xor
push
fsub
dec
or
ja
fwait
push
xor
aad
repz
test
imul
cmps
inc
data16
add
add
movlhps
dec
fadd
mov
lea
retf
mov
mov
aaa
xor
mov
arpl
add
lods
adc
sub
pop
xor
xor
idiv
call
jae
(bad)
ds
(bad)
ret
push
callw
(bad)
xor
mov
aam
pop
int3
icebp
jmp
sub
xchg
inc
outs
jnp
ret
xlat
movs
and
cmp
xbegin
sub
adc
stos
sub
mov
stos
ins
es
inc
mov
xchg
(bad)
cmc
adc
std
inc
push
inc
sub
xchg
daa
inc
aad
out
lahf
cs
out
or
addr16
std
adc
leave
out
and
jl
xchg
mov
popa
dec
dec
arpl
daa
into
ds
je
mov
ds
outs
fst
or
sbb
dec
in
xchg
mov
aam
jp
mov
sub
lea
sbb
iret
sbb
mov
mov
pop
loope
je
jb
lods
jo
add
mov
retf
xchg
xchg
hlt
js
xchg
sub
sub
mov
inc
daa
mov
push
loopne
mov
sbb
or
stos
mov
mov
js
inc
mov
mov
dec
and
xchg
scas
cld
cwde
jns
imul
push
push
push
jne
and
ss
push
jecxz
cli
and
sbb
ins
mov
xchg
cmp
test
or
sub
mov
rcl
inc
ss
inc
inc
add
push
xchg
pop
inc
add
mov
push
in
test
xor
or
push
ins
push
sbb
pop
add
add
fiadd
fild
xor
mov
fs
or
fbld
pop
movs
mov
cli
pop
xor
add
mov
ficomp
lods
mov
(bad)
xchg
xor
or
outs
pop
outs
and
lods
add
mov
add
sbb
jl
or
xchg
mov
lods
jne
pop
je
call
mov
inc
cdq
bound
dec
push
inc
pop
icebp
add
xchg
jbe
(bad)
and
ss
es
push
gs
sub
push
cmp
fisubr
add
pop
xor
sbb
add
outs
dec
lods
pop
mov
mov
sub
outs
mov
inc
mov
dec
stos
psubsb
or
cmp
xchg
outs
push
popa
aaa
sahf
pushf
pop
dec
and
inc
pop
and
loop
and
nop
fptan
arpl
cmp
cdq
in
and
pop
xchg
shr
xchg
sub
jno
mov
add
out
cwde
push
xchg
gs
mov
pop
popa
shr
jno
mov
inc
loope
jg
vpcmpeqd
adc
dec
dec
mov
in
stc
adc
mov
rcr
arpl
bound
test
aam
xchg
rcr
out
stc
xchg
ins
cmp
jp
cmp
add
imul
dec
inc
cmps
sar
sub
pushf
imul
enter
in
sbb
xor
dec
add
ror
sbb
jb
mov
push
cmp
out
mov
xchg
inc
push
jp
je
mov
dec
xchg
cmps
fcmovnbe
mov
inc
and
inc
xor
xchg
inc
fiadd
(bad)
mov
add
outs
sub
xor
add
ret
push
sub
push
test
mov
adc
dec
and
pop
call
sub
neg
rol
fs
test
in
mov
sub
into
call
mov
leave
inc
xlat
sbb
sub
stos
sub
ss
jmp
mov
mov
stos
xchg
cmps
stos
push
dec
movs
mov
sar
pop
sahf
les
enter
mov
call
ins
popa
(bad)
(bad)
and
mov
push
and
inc
outs
out
xor
shl
sbb
inc
cmp
dec
sub
pusha
scas
or
mov
dec
jl
nop
sub
jns
cmp
loopne
mov
xor
mov
pop
js
mov
or
lock
mov
iret
call
dec
popfw
add
sbb
sub
add
xchg
push
(bad)
call
shr
sbb
imul
xchg
dec
xchg
sti
popf
mov
cmc
mov
mov
retf
add
cmps
ss
dec
jno
(bad)
sbb
mov
js
inc
pop
jl
cmp
fstp
stos
arpl
ret
aas
mov
push
cmp
cmps
mov
sti
rcl
ror
inc
fisttp
jle
popa
jmp
loop
test
add
jbe
ret
xor
adc
rcr
icebp
or
test
es
xchg
test
js
mov
push
jae
mov
xor
pop
stc
inc
popa
ins
push
test
lea
inc
ja
call
and
out
jns
push
es
xor
out
mov
push
scas
xlat
adc
sbb
cmp
mov
in
xchg
cmp
test
lds
daa
xchg
push
mov
mov
pushf
jno
fdivr
add
sbb
dec
jb
pop
jnp
mov
cmc
retf
cmps
sbb
mov
fdiv
jl
inc
jne
bound
sbb
fidivr
les
aam
jg
sub
mov
pop
cld
adc
mov
jg
xchg
call
add
and
cld
daa
(bad)
inc
int3
popf
outs
sar
lock
sbb
les
inc
dec
inc
and
push
adc
in
loope
cld
mov
add
inc
aas
cmps
push
movs
adc
sub
sbb
rcr
mov
cmp
cmp
push
call
xchg
imul
fneni(8087
dec
and
adc
cmp
adc
retf
or
cmp
pop
rcr
iret
outs
clc
inc
fmul
fcmovnbe
shr
aaa
inc
data16
sub
and
jle
cmc
adc
pslld
dec
dec
push
lods
xor
cmc
push
adc
or
rol
repz
ja
cld
ret
hlt
fwait
sbb
jge
and
retf
push
(bad)
es
aas
daa
xchg
(bad)
ins
repnz
std
into
js
lahf
jbe
lock
movs
inc
fidiv
fisttp
aas
enter
mov
in
xchg
pushf
addr16
ficom
pop
add
sub
shr
xor
xchg
in
jno
and
sbb
cld
out
push
sbb
or
jno
sbb
pop
ins
sub
and
cmps
test
shl
rcr
lods
dec
in
cmps
push
out
hlt
call
shl
cmps
cmc
dec
js
adc
hlt
scas
mov
pop
pop
shr
hlt
gs
fld
add
sub
loop
bnd
pop
mov
ss
fs
jl
or
mov
dec
into
mov
push
or
retf
lock
cwde
sub
hlt
daa
xchg
ds
lock
enter
inc
ins
retf
imul
int3
adc
or
mov
jecxz
repnz
mov
in
cmp
into
iret
jb
dec
jno
mov
mov
jae
(bad)
jg
pusha
jge
pop
pop
dec
sub
mov
pop
adc
mov
inc
aad
dec
mov
sbb
in
push
shr
gs
cdq
je
cdq
mov
or
xor
outs
fisttp
adc
ret
dec
push
pop
(bad)
(bad)
jmp
cld
sar
jmp
cld
push
out
(bad)
out
leave
jecxz
ds
mov
adc
retf
push
sbb
retf
out
adc
jns
adc
divps
inc
movs
sub
pop
add
ins
and
or
push
pop
sbb
std
dec
cmp
scas
ins
dec
aad
mov
add
adc
and
out
call
cmps
fdivrp
mov
pusha
xchg
add
sbb
adc
push
dec
(bad)
dec
sub
dec
or
cmps
ss
dec
cmps
inc
mov
add
lods
movs
push
iret
out
or
sub
add
sub
jmp
ret
pop
(bad)
pop
add
cmp
push
cld
xchg
imul
cwde
js
adc
setne
sub
shl
shl
(bad)
add
fbstp
bound
or
pop
das
mov
jle
push
mov
inc
inc
add
add
inc
fucomip
cmp
mov
add
adc
push
mov
sub
idiv
xor
icebp
sbb
iret
bnd
pop
xor
sub
sahf
fiadd
xchg
xor
and
fsub
jae
out
cmc
pop
pop
lds
in
loope
rep
mov
out
cmc
sub
mov
jns
push
pop
es
(bad)
sub
mov
sbb
xor
push
add
pop
inc
stos
fadd
sub
xor
pop
xchg
mov
cmp
xor
mov
movs
dec
arpl
sub
cdq
push
mov
add
mov
and
push
mov
scas
mov
inc
or
sbb
inc
and
and
icebp
pop
mov
xor
lods
cmp
xchg
iret
test
arpl
add
push
(bad)
cmp
aaa
cmp
daa
in
js
sub
mov
ins
pushf
fsubp
pop
pop
sbb
xor
mov
cmp
test
or
pop
shr
out
xor
jp
cmp
loope
neg
cmp
inc
shl
int
(bad)
jbe
mov
sub
cmp
iret
aam
ret
or
dec
sbb
xchg
sub
sti
cwde
(bad)
in
je
jmp
inc
sbb
dec
dec
pop
dec
adc
out
jb
and
inc
jae
inc
dec
jecxz
div
sbb
xor
add
in
cs
sbb
sbb
lock
mov
loopne
adc
add
repz
sub
and
cmp
cld
stc
inc
lds
fsub
sub
xchg
push
je
pop
ds
cmp
scas
popf
sbb
push
ficom
dec
xor
outs
das
in
(bad)
jno
inc
sbb
lock
pop
fcom
nop
and
gs
dec
dec
test
xchg
pop
es
jnp
xchg
sub
pop
inc
or
or
and
repnz
pop
ffree
push
mov
ds
push
mov
scas
and
retf
sub
jg
inc
mov
leave
pop
call
push
pop
ja
and
mov
xor
add
or
shr
js
inc
push
test
mov
ret
push
xor
xor
cmp
mov
add
cmp
dec
adc
xchg
gs
stc
or
xchg
cmp
or
in
outs
add
jb
pop
test
js
shr
jb
xchg
loopne
sbb
adc
clc
xor
add
mov
jle
mov
adc
and
mov
mov
inc
and
cmp
xchg
xchg
pop
test
jp
pop
jl
dec
cli
test
imul
push
inc
mov
inc
push
push
dec
pop
stos
inc
dec
out
sub
or
cdq
cmps
movs
or
push
cmps
adc
lock
push
es
xchg
fdivr
out
add
mov
nop
fild
jle
cld
seta
and
sbb
ret
nop
push
sub
(bad)
loopne
pop
jns
mov
loope
xor
push
rol
pushf
mov
and
movs
mov
test
fcomp
in
aas
push
xor
test
or
add
or
test
aad
mov
cmp
(bad)
ret
test
das
mov
adc
sbb
cld
sbb
pop
mov
adc
or
dec
or
xchg
and
into
pop
or
movs
call
sub
retf
or
dec
(bad)
or
into
in
int
push
sbb
push
or
jno
mov
mov
mov
mov
sub
xor
adc
and
mov
dec
cmp
cmp
inc
cmp
cli
retf
sbb
add
mov
shr
fcmovnbe
imul
or
mov
jo
ds
or
jecxz
jmp
mov
imul
cmp
icebp
mov
out
cmc
(bad)
cmp
dec
xchg
imul
inc
jecxz
xlat
out
mov
mov
sbb
lods
mov
lods
test
jns
hlt
leave
sbb
inc
xchg
sub
sbb
xor
xchg
pop
pusha
push
fsubr
test
fldcw
jb
int
cs
or
les
dec
mov
dec
adc
add
sbb
lock
add
aad
or
loopne
stc
lods
clc
sub
(bad)
jno
cld
dec
lock
and
vmwrite
fwait
xor
retf
cmc
inc
push
add
cmps
xor
scas
jne
cmps
sahf
out
xchg
adc
dec
dec
push
ds
jns
or
add
addr16
rol
movs
call
jbe
rcr
xor
mov
mov
xor
dec
sbb
scas
fcmovbe
sbb
dec
fidivr
cli
fstp
mov
sbb
cmp
movs
sar
mov
sti
sahf
(bad)
push
pop
and
icebp
or
lock
inc
std
lock
adc
adc
pop
add
arpl
outs
adc
cmps
les
iret
xor
popa
shl
ins
test
fdiv
adc
popa
sub
push
cld
sbb
add
push
outs
fcom
mov
mov
mov
and
js
jle
pop
call
sub
add
add
pop
(bad)
adc
repz
in
jns
or
loope
arpl
addr16
movs
add
arpl
push
es
mov
shr
sbb
int
xor
sub
add
shr
sbb
mov
pop
fidiv
add
mov
mov
popf
mov
xor
jbe
jnp
imul
inc
imul
xlat
mov
scas
push
out
loope
loope
jecxz
and
inc
jno
jmp
out
push
cmp
pop
out
add
addr16
and
ds
and
stc
inc
das
mov
add
leave
clc
inc
mov
in
inc
sub
imul
add
xor
int3
sub
cmps
fs
(bad)
push
mov
lahf
dec
xchg
and
test
repz
fsub
aam
ins
mov
jge
das
fwait
push
scas
mov
and
fisttp
das
mov
jb
lods
clc
sub
pop
sbb
cmp
mov
and
loopne
add
(bad)
sub
call
adc
iret
sti
lods
mov
sub
mov
add
call
mov
fwait
into
mov
in
adc
xor
or
sub
cli
retf
test
dec
jmp
pop
sbb
mov
ss
xchg
out
enter
inc
(bad)
mov
test
jb
or
add
rcl
stos
xchg
and
(bad)
addr16
ficomp
ins
stos
mov
mov
mov
dec
mov
jno
xchg
mov
xor
mov
xchg
fidivr
pop
lods
cmp
jle
jg
pop
test
mov
in
call
push
xchg
(bad)
cld
dec
add
outs
repnz
scas
pop
shr
arpl
sar
int3
pop
arpl
clc
adc
sub
nop
push
leave
inc
fcmovnb
(bad)
sbb
in
daa
mov
stos
retf
mov
or
jecxz
mov
xor
push
sahf
pop
stc
retf
setne
cs
xchg
cmps
scas
int3
fldenv
rcr
mov
push
sbb
pop
dec
mov
xor
cmp
(bad)
cmps
or
pop
inc
xchg
sub
pop
stos
fbstp
enter
mov
inc
scas
add
jae
or
xchg
(bad)
mov
jb
sar
xor
leave
fsubr
repnz
mov
not
mov
and
jecxz
lods
adc
js
add
mov
xchg
xchg
hlt
inc
imul
int3
pop
test
xchg
movs
div
fidiv
enter
jp
fldcw
add
enter
push
adc
das
shr
clc
push
pop
adc
stc
lods
(bad)
imul
outs
lds
scas
or
pop
mov
cmp
mov
jl
add
xchg
aaa
aas
loopne
outs
push
das
mov
dec
and
sbb
add
lods
xchg
loopne
icebp
cmp
mov
xor
or
mov
loopne
pop
ins
ret
dec
into
cmp
jno
adc
jnp
ror
xchg
call
test
mov
call
push
xor
gs
pop
sbb
in
mov
cwde
mov
add
fist
stos
xlat
movs
add
mov
or
retf
mov
push
or
jmp
and
pusha
(bad)
push
pop
jmp
sti
jle
add
sbb
jae
fcmovb
out
in
inc
lods
in
fstp
adc
fst
gs
mov
dec
mov
add
ret
mov
mov
js
js
inc
mov
adc
sub
cld
inc
inc
stc
sub
icebp
pop
(bad)
shr
add
lods
pop
or
shr
mov
popa
std
iret
add
push
jmp
mov
mov
pushf
inc
lea
xor
pop
shl
scas
es
mov
or
movs
pop
pop
std
test
data16
adc
cmp
das
sub
adc
and
sub
test
mov
push
push
sub
mov
lods
or
inc
sub
xor
mov
in
push
das
jge
push
in
inc
sbb
dec
out
mov
mov
fdiv
push
jb
shl
sbb
inc
cli
sbb
xchg
mov
inc
push
nop
outs
sahf
mov
or
in
lahf
outs
shl
leave
lock
add
pusha
addr16
and
or
or
inc
add
sbb
cmp
inc
adc
sbb
xchg
add
sub
jno
shr
adc
and
sbb
inc
jle
mov
sahf
push
add
pop
ss
ins
repz
or
add
(bad)
sahf
or
or
jl
ror
add
inc
jo
(bad)
movs
xor
jo
rol
lods
std
or
sti
bound
je
sar
neg
nop
push
adc
popa
push
das
jne
mov
dec
xor
xchg
mov
aas
jo
adc
sub
das
movs
mov
adc
shr
push
xchg
arpl
add
bound
out
mov
cmps
dec
out
push
cmp
int
mul
repnz
cwde
pop
popf
nop
stos
xor
mov
mov
cs
add
push
or
pop
mov
mov
ret
adc
mov
and
test
outs
inc
in
aas
adc
lock
add
inc
mov
jg
inc
and
test
loop
push
js
inc
jmp
adc
sbb
(bad)
mov
mov
mov
inc
pop
jbe
dec
hlt
pushf
mov
clc
inc
mov
jmp
push
or
test
jb
jno
fist
add
out
cmp
ret
xor
sub
pop
add
mov
pop
inc
outs
cs
fcomp
and
jbe
or
loopne
jo
jne
mov
dec
add
pop
or
push
dec
or
(bad)
mov
pop
or
or
mov
mov
(bad)
js
xchg
loop
ja
mov
dec
push
out
sub
fs
sub
sub
mov
jmp
jecxz
shl
ins
xchg
and
mov
xchg
(bad)
and
dec
rcl
inc
scas
mov
cmp
mul
daa
xor
xor
les
cmc
push
sbb
popf
je
pop
cmp
das
mov
sar
pop
fwait
and
xchg
xchg
sar
jl
pop
loopne
loopne
push
add
push
das
les
shr
pop
sbb
pop
xchg
fild
xchg
inc
and
movs
das
mov
sub
sbb
retf
(bad)
in
inc
inc
mov
movs
out
lock
mov
out
push
inc
loope
or
retf
cs
fst
mov
jmp
int3
sub
xchg
mov
cmp
fucomip
mov
daa
dec
test
vminpd
push
dec
or
(bad)
int3
push
std
stos
loop
push
xchg
or
mov
cs
push
mov
push
xor
ds
jmp
mov
pop
cmp
xchg
movs
sbb
test
repnz
outs
aaa
mov
mov
mov
call
jae
sahf
js
add
cmp
in
cmp
sbb
test
jmp
aas
push
nop
dec
inc
retf
pop
push
jmp
sub
adc
push
jb
pushf
jl
xchg
fwait
lds
push
pop
inc
adc
je
in
mov
jae
dec
scas
jmp
js
lock
xor
mov
lea
xchg
loop
loop
add
js
add
stc
lea
test
int3
shl
push
mov
out
sub
sub
sbb
arpl
add
scas
pop
adc
mov
cwde
movs
scas
jp
xchg
xchg
loope
push
stc
mov
fdiv
adc
mov
(bad)
pop
mov
bound
pop
in
outs
ins
mov
push
xchg
stc
ret
pop
lods
ja
in
es
call
das
test
and
aad
xor
cs
leave
or
xchg
test
loope
gs
sub
jne
mov
or
fstp
xor
add
sbb
pop
scas
div
aaa
xchg
test
pop
data16
jmp
mov
inc
pop
outs
xchg
mov
and
inc
mov
jmp
and
jmp
xor
dec
cmp
jmp
mov
ret
je
mov
lock
inc
in
or
adc
clc
sahf
pop
loop
loopne
aaa
clc
or
(bad)
fidivr
cmp
pop
mov
adc
test
inc
ss
out
repnz
retf
jne
ret
in
fadd
adc
popf
cwde
popa
xchg
adc
fldcw
repnz
div
loop
mov
js
in
cs
inc
pop
ins
in
outs
inc
neg
inc
pusha
cld
hlt
and
ret
jno
xchg
leave
call
test
push
nop
adc
dec
jmp
or
ss
stos
dec
hlt
rol
cmp
sbb
mov
dec
or
xor
scas
mov
scas
lods
jo
mov
mov
pusha
cmc
add
lock
je
movs
not
rcl
addr16
lock
jae
sbb
cmp
push
loop
out
cmp
dec
stos
jmp
cld
inc
mov
and
pop
add
xchg
loopne
sar
xor
add
pop
add
cs
movlhps
or
sub
outs
pop
je
es
jmp
xor
ret
add
sub
mov
outs
pop
dec
mov
pop
cld
push
ret
js
dec
mov
fst
add
jg
popa
popaw
ror
pop
xor
inc
mov
vmread
adc
imul
mov
or
mov
(bad)
jmp
(bad)
ins
scas
daa
mov
stos
adc
ins
jl
push
pop
xor
sti
cdq
rcl
pop
pop
aad
hlt
and
rcr
(bad)
xchg
sub
xchg
cmc
adc
jge
scas
movs
inc
xchg
iret
jne
test
bound
lea
cmp
idiv
jns
cmps
rcl
mov
pop
jbe
mul
sbb
xor
push
inc
add
jg
test
rcl
adc
ret
in
clc
pop
test
lock
test
aam
pushf
cli
shr
and
push
pop
sbb
mov
in
test
sub
aas
or
int3
push
push
add
push
inc
pop
(bad)
dec
jmp
cmc
inc
pop
arpl
mov
fstp
jmp
sar
xchg
cli
cld
popa
scas
(bad)
bound
(bad)
imul
jae
inc
pushf
out
xor
inc
scas
mov
int3
push
mov
retf
rol
es
add
mov
sub
sbb
ffreep
cld
movs
xchg
inc
retf
xor
cdq
push
loop
aad
jnp
jnp
inc
dec
cmp
push
add
ficom
pop
jne
push
mov
mov
add
sbb
or
into
sub
mov
out
mov
inc
scas
scas
retf
sub
pop
mov
(bad)
ret
aam
jo
push
lds
inc
stc
adc
iret
enter
push
(bad)
cs
mov
xchg
fidivr
test
repnz
jnp
jno
retf
push
(bad)
fcmovbe
mov
lods
push
out
fwait
sbb
pop
pop
xchg
dec
aad
pop
icebp
cdq
imul
pop
mov
xlat
movs
pop
mov
mov
scas
cmp
adc
add
sbb
pop
movs
xor
lds
sbb
mov
inc
mov
or
ror
mov
sub
test
mov
xor
(bad)
pop
inc
mov
daa
push
pop
data16
aad
sbb
int3
xchg
add
sbb
popf
adc
adc
int
repz
pop
gs
and
sub
pusha
test
inc
inc
adc
fiadd
mov
push
shl
fcomp
daa
xor
xchg
or
ins
mov
push
xor
and
das
jne
mov
and
or
loopne
gs
xchg
sbb
bound
xor
dec
or
fwait
clc
mov
test
mov
outs
xlat
xor
sbb
scas
dec
pusha
pop
xchg
int3
or
sbb
push
jg
sub
repz
jae
pop
cmp
nop
jne
scas
mov
push
xchg
mov
outs
add
sbb
or
daa
and
stc
retf
add
gs
inc
jl
call
dec
push
(bad)
and
push
pop
push
push
ret
ja
xor
push
mov
inc
(bad)
add
scas
adc
inc
inc
aam
inc
(bad)
mov
cld
mov
or
xor
prefetch
dec
and
popa
adc
sbb
cmp
xchg
adc
cs
sub
shl
add
ds
inc
lds
add
mov
jmp
adc
bound
shl
loop
jp
stc
(bad)
sub
dec
xor
dec
xor
enter
adc
xchg
cmps
sub
mov
ss
test
rcr
in
mov
and
or
inc
adc
call
adc
aaa
(bad)
cwde
(bad)
icebp
mov
add
add
mov
sbb
arpl
mov
mov
fild
push
fmul
mov
fwait
adc
rol
sbb
imul
cmps
aad
sub
mov
in
cmp
shl
add
mov
add
shl
hlt
int3
into
adc
popa
test
ret
sub
inc
xchg
jl
add
jmp
out
pop
enter
lahf
(bad)
cs
mov
ins
inc
dec
mov
shl
and
add
mov
sti
push
in
adc
xor
pop
jbe
push
(bad)
xor
loopne
out
sbb
xor
fbstp
xlat
in
stc
xchg
lahf
outs
mov
cmps
ins
aam
mov
in
jmp
stc
and
mov
inc
sub
add
add
inc
retf
loop
pushf
dec
mov
adc
cli
sbb
push
gs
xchg
imul
pop
xor
or
mov
pop
aam
cmp
in
jl
add
sub
das
adc
mov
xor
xlat
lahf
dec
mov
sbb
push
bswap
sub
push
push
cld
xor
das
popa
push
loop
add
into
mov
jmp
mov
mov
arpl
cmc
jmp
(bad)
icebp
sub
dec
inc
xchg
int3
gs
popf
nop
inc
repz
aad
sub
loop
and
shr
stos
mov
je
into
stos
jb
sub
popa
sub
or
add
stos
pop
sti
aam
inc
mov
or
mov
jge
neg
push
sub
cmp
std
std
sti
inc
sub
pushf
jae
ds
fisub
jge
clc
adc
xchg
cmc
call
push
enter
sbb
pop
inc
test
lods
cli
dec
jle
mov
stc
inc
in
mov
fbld
sub
jecxz
mov
aad
scas
aam
and
leave
out
or
out
sub
pop
int3
rcr
and
sti
mov
aaa
sbb
les
cld
(bad)
push
dec
pop
dec
jl
mov
test
test
ss
jb
jmp
mov
ss
jl
stc
pop
xor
aad
mov
mov
and
gs
mov
sbb
lahf
push
mov
adc
mov
mov
xor
xchg
aas
xchg
and
mov
xchg
sub
and
js
sub
iret
ret
clc
push
dec
inc
or
sti
jo
add
jno
test
sti
les
lods
cli
popf
in
hlt
mov
jg
lahf
inc
jmp
out
inc
dec
sub
out
mov
xchg
jb
into
call
xor
mov
sub
and
inc
test
mov
jmp
xor
xchg
lock
and
(bad)
out
pushf
xchg
push
mov
retf
test
add
mov
mov
xchg
cs
repz
sub
inc
test
jmp
inc
or
cmc
jnp
lds
inc
sub
cmps
arpl
retf
jno
sbb
sbb
hlt
cwde
sbb
in
ret
mov
outs
add
rcl
mov
push
xor
test
push
int3
mov
xor
nop
cdq
pop
mov
pop
pop
or
sub
mov
outs
div
sbb
iret
push
cli
jp
and
jmp
add
mov
lahf
mov
shl
in
rol
mov
ror
and
pop
push
nop
enter
adc
dec
stos
xchg
imul
mov
sbb
cmp
pop
cdq
leave
xchg
sub
retf
sub
push
xchg
pop
cwde
inc
in
jb
pusha
mov
pop
mov
sbb
mov
retf
rcl
push
inc
sbb
arpl
or
add
push
inc
cmp
lea
cmp
push
mov
xchg
xor
pop
xchg
sahf
jno
push
jnp
and
dec
mov
adc
mov
inc
sbb
fadd
fs
cmp
mov
mov
jbe
push
mov
inc
push
adc
push
lods
jmp
(bad)
in
aas
push
pop
mov
(bad)
into
lahf
inc
pop
xchg
inc
adc
sub
pusha
test
jno
test
std
loop
std
sbb
cmp
sti
push
adc
jp
js
lock
fstp
sbb
push
mov
lods
adc
fdiv
lock
out
pop
mov
clc
or
xor
jle
in
dec
cli
neg
push
sbb
dec
and
int
arpl
jl
mov
mov
in
adc
jne
bound
inc
(bad)
test
pop
cmp
repz
inc
jecxz
dec
sahf
les
retf
push
xchg
sbb
retf
stos
enter
popa
out
std
inc
pop
jae
stos
sti
mov
(bad)
fsub
dec
dec
jmp
sahf
add
ror
test
xor
push
push
stos
sahf
repnz
jbe
outs
rcr
mov
pop
cmp
popa
pushf
adc
test
push
out
and
and
sub
sbb
sub
mul
leave
jmp
scas
cmp
mov
mov
add
inc
sahf
pushf
adc
repz
mov
cld
push
shr
mov
dec
jle
test
adc
lods
mov
xchg
push
test
out
loop
xchg
les
push
icebp
ror
push
fdivr
cmp
fucomi
lock
cli
or
int3
aas
xchg
xchg
frstpm(287
sub
ins
gs
sbb
sub
mov
mov
or
out
iret
push
lock
int
dec
mov
out
adc
loop
test
add
dec
mov
rcl
sbb
sbb
aaa
hlt
or
(bad)
fldcw
outs
mov
inc
push
daa
add
inc
pop
pop
test
test
(bad)
jg
les
lods
fcomip
mov
mov
pop
adc
mov
ret
jmp
and
enter
enter
dec
fdivr
mov
and
lahf
sub
in
mov
cmps
jmp
nop
inc
pusha
outs
ja
(bad)
sbb
xor
je
push
(bad)
and
inc
movs
cli
push
cs
add
and
pop
ret
retf
cmovne
lods
mov
cmp
das
mov
js
push
mov
fdivr
lods
mov
mov
cs
dec
and
lahf
or
pop
int3
sub
rol
mov
and
xor
cwde
or
xor
aad
sbb
gs
inc
stos
retf
neg
add
add
les
outs
popf
sbb
or
push
push
inc
jae
dec
jge
xchg
jno
in
stos
pop
ja
imul
scas
outs
mov
hlt
cwde
adc
(bad)
cmp
dec
out
sbb
sti
ins
sub
sub
mov
arpl
mov
add
or
add
loope
push
loop
cld
pop
mov
movs
repnz
and
stos
xchg
pop
and
stos
jae
cwde
push
dec
into
and
mov
aad
jl
xor
sbb
sbb
or
xor
xchg
add
adc
cs
mov
push
out
xor
jno
adc
enter
lds
jo
inc
sbb
inc
xchg
sti
test
pop
xchg
aas
xor
and
stos
xchg
mov
retf
mov
les
mov
scas
jnp
sti
or
mov
xchg
outs
sub
pop
scas
hlt
mov
mov
hlt
inc
cmc
cmp
div
jmp
hlt
lock
xchg
xchg
popf
shl
mov
icebp
mov
ficom
inc
aad
mov
retf
ins
mov
adc
hlt
call
test
js
sar
cmps
push
mov
jb
mov
rcl
dec
hlt
mov
mov
cmp
or
call
out
or
or
xor
jne
test
add
lock
xchg
aaa
xor
retf
out
xor
or
sbb
call
pop
mov
pop
inc
scas
aad
data16
cmps
outs
imul
add
inc
push
push
push
mov
cld
movs
adc
pop
les
out
cmp
pop
mov
xchg
test
jecxz
and
and
out
sub
mov
pop
dec
jecxz
nop
mov
inc
pop
add
out
into
in
(bad)
mov
add
mov
xlat
mov
ins
outs
mov
inc
mov
and
ds
and
adc
aas
xchg
jge
push
push
push
arpl
or
das
add
je
pop
ret
inc
sti
sbb
out
sahf
out
(bad)
and
sub
jb
xchg
cli
pop
out
fbstp
mov
push
popa
std
retf
sub
mov
fistp
test
loope
cld
ret
jo
movs
test
rol
sub
in
loope
imul
pushf
push
in
dec
shl
inc
clc
retf
dec
inc
aam
dec
test
xchg
(bad)
push
pop
dec
sbb
xchg
or
shl
and
outs
xlat
(bad)
hlt
pop
fst
fidivr
fist
jp
sbb
and
jae
cld
and
idiv
push
lods
pop
mov
(bad)
sbb
movs
movs
add
jbe
int
adc
imul
jnp
ja
adc
outs
or
ins
fcmovne
or
aam
push
or
add
stos
add
fs
jge
dec
jmp
hlt
mov
imul
mov
xchg
adc
push
dec
bswap
pop
shr
ins
paddd
imul
movs
repz
jp
fwait
js
and
sub
ins
cmp
mov
jnp
mov
inc
repnz
hlt
cmp
mov
adc
mov
mov
in
cmp
push
inc
ja
mov
ucomiss
xchg
jle
cwde
pop
jnp
sub
push
in
cdq
mov
stos
jae
into
push
dec
mov
test
aad
mov
mov
or
jnp
and
pop
pop
sub
pop
ror
aaa
cmps
es
inc
sub
xchg
inc
or
inc
mov
add
lods
and
xor
and
and
mov
ins
mov
add
jbe
ror
push
es
jb
or
and
xchg
or
jb
scas
call
mov
cmp
cmp
jmp
and
fs
sub
adc
pop
cli
stos
add
push
ret
xchg
retf
sub
adc
xor
dec
aad
daa
add
lds
mov
dec
stc
dec
int
cmc
and
push
pop
shr
pop
inc
xchg
fst
sti
retf
xchg
addr16
mov
mov
and
push
sub
mov
aam
jmp
pusha
cmp
call
or
pop
sti
sub
sub
inc
mov
adc
fcom
call
mov
mov
inc
repz
xchg
enter
jecxz
xchg
adc
mov
sti
sbb
fwait
scas
(bad)
pop
and
lods
push
les
fsubr
pop
or
mov
adc
pop
and
add
lods
add
sbb
jg
or
fistp
pop
nop
fstp
jecxz
mov
mov
scas
and
cmp
lods
ja
adc
xor
pop
rcl
dec
sub
(bad)
rcr
into
in
std
sbb
lock
xor
andps
jno
mov
push
popa
popa
mov
loop
jmp
movs
xchg
sar
call
sbb
sub
in
pop
ins
test
mov
rcl
add
pushw
test
jnp
sbb
mov
icebp
pop
adc
outs
repz
cmp
sub
push
out
das
callw
fidiv
ins
dec
dec
push
les
cmc
pop
pop
or
in
les
sbb
retf
cmps
js
cs
out
and
xchg
push
nop
push
cs
push
add
pop
push
inc
call
xchg
lahf
xor
lock
sub
cmp
int3
mov
int
pop
pop
(bad)
xor
and
stos
jne
dec
inc
lea
shl
xor
or
test
mov
call
fwait
js
inc
mov
dec
dec
adc
lods
ror
and
lods
mov
mov
push
movs
not
cmp
mov
in
repnz
aam
stos
(bad)
in
nop
outs
sub
jb
fst
mov
ret
sbb
lea
xchg
cmp
cmps
xor
sbb
cmp
push
or
xchg
adc
inc
xchg
out
test
push
sub
push
add
inc
cmp
pop
xor
push
mov
int3
rcr
mov
stos
out
push
xor
xor
xlat
or
xlat
pushf
ficomp
sub
jb
jne
call
jmp
mov
xor
cdq
jne
xchg
arpl
push
xchg
add
jp
cmp
jo
add
lds
mov
jle
xchg
aaa
pop
cmp
pop
sbb
mov
jge
pop
cmp
in
movs
leave
out
jge
retf
ins
in
cmc
mov
sub
mov
shl
jne
retf
dec
(bad)
adc
ins
push
mov
mov
sub
mov
and
cmp
xlat
pop
(bad)
sub
and
rol
das
jnp
xor
inc
ins
xor
xor
jb
pop
dec
shr
sub
adc
mov
lods
jmp
shr
scas
and
xor
mov
cli
(bad)
shl
adc
pusha
pusha
adc
mov
xchg
std
mov
imul
enter
out
into
or
sbb
add
mov
enter
retf
xor
push
das
cmp
lods
or
mov
hlt
sub
pop
sahf
push
(bad)
sar
popa
movs
and
cmp
mov
sahf
mov
imul
cmp
test
scas
add
stc
xchg
push
(bad)
sti
adc
sub
out
mov
add
pop
push
fsub
(bad)
icebp
adc
xchg
ja
jb
into
popa
sbb
or
imul
gs
gs
addr16
xchg
sbb
push
stos
push
pushf
add
add
mov
xchg
jno
xlat
cmp
test
jmp
and
stos
cld
mov
inc
mov
stc
arpl
xchg
stos
out
sub
ja
mul
inc
pop
pop
ds
and
int3
xchg
xor
or
dec
cwde
xor
mov
mov
retf
out
add
inc
loope
cli
ins
mov
sbb
shl
push
arpl
jbe
and
retf
outs
leave
les
mov
and
fild
cmp
jp
xchg
push
mov
jbe
pop
repnz
mov
cmps
or
inc
xlat
cmp
stos
scas
xchg
cmp
xor
mov
mul
cmps
call
xchg
call
lea
ss
xor
sub
pop
xor
ja
dec
jno
add
pop
xor
(bad)
in
or
push
xor
in
dec
jg
fistp
or
inc
repnz
hlt
imul
out
sub
(bad)
mov
cwde
retf
adc
aas
shl
or
in
mov
xor
jg
sub
cld
jno
sti
xlat
test
push
cmovns
adc
xor
repnz
test
xor
inc
ins
(bad)
ret
adc
ret
push
test
outs
pop
(bad)
gs
adc
pushf
jl
sub
inc
in
mov
in
jg
cmps
in
inc
mov
add
inc
arpl
add
sti
aas
repz
in
aas
cld
aas
fsub
xchg
mov
dec
pop
and
add
and
cmps
addr16
div
std
sub
push
dec
cmps
sahf
lock
imul
or
stos
outs
dec
repnz
cmp
das
ss
pop
out
int3
imul
mov
cmc
or
ins
iret
outs
js
xchg
movs
dec
adc
stos
sub
aaa
push
jne
and
push
xlat
out
sbb
push
outs
js
(bad)
daa
and
mov
pop
inc
fiadd
add
jp
nop
(bad)
or
pop
cmp
aas
aam
add
mov
pop
xchg
out
lds
rcl
pusha
fisub
or
pusha
xchg
xchg
in
es
das
pop
mov
in
push
test
push
pop
rcl
or
movs
jb
mov
xchg
cwde
adc
test
std
add
xchg
cmp
inc
sbb
inc
jne
movs
inc
pop
call
call
cmc
add
out
xchg
retf
sbb
add
loopne
sub
dec
jns
loop
push
out
retf
add
pop
cld
and
clc
hlt
and
aad
jg
out
add
repz
add
inc
sbb
sbb
inc
and
and
in
(bad)
mov
add
push
mov
jle
add
sar
and
sbb
jae
add
out
xchg
add
pop
or
shl
das
inc
in
pop
jge
lods
xlat
jecxz
fs
cmp
pop
jp
jg
jl
fdivr
outs
fs
mov
xlat
mul
xlat
cmc
and
repnz
out
popaw
cmc
xchg
adc
jge
and
out
pop
out
sbb
push
int3
pop
test
jb
pusha
mov
iret
ret
hlt
dec
fmul
inc
sbb
or
jno
cmp
and
adc
nop
out
sub
fcomp
lods
pop
int3
jmp
add
imul
bswap
jle
pop
cmc
rcl
jne
adc
test
push
mov
mov
rcr
int
xchg
daa
lods
add
xchg
repz
sub
jecxz
mov
push
adc
es
mov
ins
xlat
sar
ret
or
inc
mov
std
mov
adc
and
pop
push
and
jne
cmp
js
xor
scas
outs
mov
add
rcl
sub
ret
mov
inc
es
loope
rcl
aaa
movs
add
mov
dec
xchg
rol
nop
jne
cmps
pop
test
mov
jbe
push
scas
cmp
mov
push
cdq
mov
lods
retf
je
js
movs
push
das
sete
jp
jge
push
fcmovnbe
inc
mov
in
jne
gs
into
inc
test
call
push
scas
adc
and
fnstsw
xchg
in
fwait
or
lea
stc
inc
ins
xor
test
mov
sbb
sti
fmul
pop
mov
hlt
mov
cmp
bound
retf
enter
daa
or
ror
pop
adc
in
jbe
loop
xchg
ins
(bad)
mov
pop
push
and
iret
jmp
adc
ins
fnsave
loope
adc
push
into
and
mov
fistp
fcmovu
out
lods
mov
(bad)
stc
xchg
or
add
int3
fs
mov
loopne
jmp
push
pop
cmc
xchg
jb
and
in
inc
sub
xlat
inc
push
jo
cmp
sar
loop
clc
or
es
(bad)
cmps
fcmovnb
jge
lods
int3
cmp
jae
(bad)
loop
test
out
dec
dec
pop
sub
stos
stos
retf
pop
sti
add
(bad)
int3
out
retf
jp
cwde
mov
add
pop
add
loope
lods
push
mov
les
popa
jo
mov
dec
xchg
xlat
icebp
and
cmp
jns
push
je
or
stos
movs
test
xchg
push
ror
pop
mov
push
dec
mov
test
add
jb
es
adc
xchg
push
aam
out
jae
jp
stos
stos
arpl
adc
jno
or
add
xchg
leave
out
mul
in
push
in
retf
lea
xchg
adc
cmp
test
add
sbb
shl
inc
and
retf
xor
add
mov
inc
and
hlt
or
loopne
mov
mov
push
jecxz
xchg
ins
(bad)
retf
sbb
rcl
push
xchg
add
add
mov
aad
xor
dec
aad
add
test
sub
mov
xchg
sub
add
retf
push
mov
push
shl
lahf
fdiv
ja
cmps
push
nop
cs
ins
sub
lods
sub
scas
add
repz
push
mov
mov
popf
and
jne
push
movs
jg
sahf
inc
inc
sub
rol
cmp
mov
dec
mov
push
mov
pop
jo
sub
dec
inc
jb
fdiv
adc
jl
mov
lea
or
jb
dec
jns
mov
or
rol
sbb
or
inc
ret
cmp
iret
outs
cld
test
sub
mov
test
cmp
jg
popa
xchg
ja
jge
adc
aad
std
and
das
stc
or
jns
cmc
mov
int
in
pop
cmp
inc
add
iret
or
mov
loop
add
stc
and
int3
in
or
jno
jae
movs
pop
fwait
paddusb
push
call
pop
stc
inc
aad
cmp
sbb
xchg
push
cmc
and
pop
or
mov
xchg
daa
xlat
xor
and
mov
fstp
call
iret
cmp
pop
mov
inc
and
dec
loopne
fwait
pop
ds
sbb
adc
rol
mov
cs
lds
pusha
idiv
les
jne
in
iret
sub
xchg
scas
sbb
mov
inc
jmp
rcr
lods
sub
sti
cmp
cmps
mov
out
add
sbb
adc
stos
add
daa
xor
cmp
fstp
mov
stos
imul
xchg
mov
rcr
lea
or
adc
jmp
sbb
pop
xchg
sub
jbe
sub
dec
mov
imul
cwde
popa
pop
lods
int3
xor
das
sbb
jl
outs
jmp
es
xor
jle
cmp
je
sbb
push
cmps
cmp
sbb
xchg
fucom
xlat
jne
add
les
pop
in
lods
xor
iret
ins
inc
popa
mov
pop
mov
mov
xchg
btc
mov
rcr
rcl
test
into
pop
dec
jo
test
push
cdq
or
sub
xchg
cld
xor
sub
or
push
adc
sbb
mov
pop
aam
rcr
push
inc
jbe
inc
ret
scas
push
pop
ret
jne
sub
jne
test
or
jmp
fwait
adc
jne
or
stos
sbb
adc
call
sti
inc
inc
popa
dec
xchg
inc
xchg
aam
xor
std
test
xor
fucomi
jb
mov
mov
add
in
add
mov
(bad)
hlt
aaa
pop
or
ins
jo
ret
mov
inc
sbb
push
pop
(bad)
jo
scas
jmp
adc
outs
imul
inc
mov
push
movaps
pop
(bad)
loop
adc
les
xor
cmp
add
aad
xor
pop
pop
in
sub
mov
dec
push
sbb
clc
dec
out
mov
aam
inc
idiv
idiv
mov
cmp
cmc
clc
mov
into
and
cs
pop
cld
inc
std
arpl
dec
mov
call
arpl
sbb
call
pop
push
ret
rcl
pop
adc
jbe
jno
jmp
dec
add
rcl
add
lods
mov
push
call
stos
pop
sbb
xchg
push
pop
or
aad
push
out
adc
out
mov
rol
inc
and
(bad)
dec
ficomp
cmps
outs
imul
lods
pop
sbb
cli
sbb
(bad)
cmp
fisub
cmp
adc
mov
inc
and
xor
sub
dec
jmp
xchg
dec
cmp
or
cmp
mov
icebp
add
cs
loopne
mov
dec
mov
sbb
fnstsw
mov
and
pop
jne
loope
pusha
and
es
fdivrp
icebp
xor
je
pusha
ss
add
mov
push
retf
jbe
jmp
jge
push
adc
push
mov
cs
popf
fnstenv
mov
repz
cmp
or
cmps
pop
test
jg
xor
xchg
sar
test
imul
sub
xor
loop
fisttp
stos
mov
adc
scas
popa
mov
xchg
and
in
sub
jl
pop
inc
in
add
ret
or
ror
xor
add
fwait
ins
imul
lods
adc
mov
sub
jge
mov
repz
scas
xor
(bad)
test
and
shl
sbb
xchg
xchg
in
(bad)
js
jne
fdivr
movs
jnp
push
pop
aas
scas
dec
jns
cmp
xor
sub
mul
out
into
add
pop
lea
xchg
js
(bad)
neg
imul
mov
sbb
in
pop
test
stos
ret
lods
mov
mov
ret
(bad)
push
cdq
or
cli
jmp
dec
dec
xor
cmp
retf
xchg
mov
popa
outs
pop
pop
loop
cmp
pop
cmp
add
pusha
dec
jge
xchg
pop
lahf
arpl
ds
(bad)
pop
out
(bad)
out
cli
dec
sbb
add
(bad)
in
icebp
sbb
inc
mov
mov
mov
xchg
jb
xor
jns
mov
sub
mov
ss
aaa
xor
or
test
test
pop
fbld
jge
mov
mov
push
xor
cli
mov
sar
pushf
imul
shr
lods
aad
dec
mov
xchg
cli
aam
add
adc
fsub
sbb
push
ficomp
dec
out
pop
clc
or
jp
adc
jo
in
sahf
lds
loop
xchg
xchg
retf
add
outs
scas
std
mov
push
sub
ja
jp
and
pop
fistp
scas
mov
inc
xor
mov
xchg
push
push
jnp
add
push
out
fdivr
and
aad
cmp
bound
aad
push
call
(bad)
push
xor
sub
clc
mov
aad
(bad)
or
push
cmc
cdq
sub
jns
inc
xor
imul
retf
push
adc
inc
sub
push
ds
stos
(bad)
xchg
pop
mov
cmp
int3
push
push
mov
sbb
fs
adc
or
scas
rcr
sbb
arpl
pushf
rcr
cmp
movs
add
and
mov
ret
out
push
cmp
sub
retf
call
push
pop
lea
xchg
outs
pop
push
aam
and
push
xchg
pop
push
out
imul
or
cmp
mov
or
push
daa
xchg
jae
xor
or
jg
and
ret
mov
out
xchg
out
js
jo
(bad)
sbb
sar
sub
mov
stos
rcl
pop
test
inc
and
std
jo
pop
pusha
das
push
pop
mov
jns
push
and
add
shr
sub
cwde
mov
sub
mov
sub
repz
imul
inc
arpl
mov
xchg
inc
jae
xor
cwde
mov
scas
push
call
mov
in
sub
ds
les
sbb
cmp
cmp
jmp
cli
fdiv
fbstp
xor
mov
sbb
loop
fld
sbb
in
mov
sub
dec
push
aas
jno
sbb
cmp
or
push
and
pop
lods
mov
mov
stos
push
jae
outs
or
retf
push
mov
test
mov
outs
mov
fidivr
mov
sti
(bad)
cmps
lods
pop
mov
shl
cld
dec
ret
xlat
fcom
aam
sar
and
push
jle
jae
das
fsubr
dec
push
jne
(bad)
fistp
movs
les
mov
xchg
pop
jmp
inc
pop
repnz
retf
push
sbb
xchg
xor
sub
mov
test
gs
push
jp
outs
aaa
xchg
pop
add
call
sub
sbb
push
pop
xchg
repz
sar
dec
cmps
mov
mov
sub
sub
jb
mov
mov
inc
add
or
or
hlt
mov
imul
or
icebp
sub
mov
leave
int
stc
mov
xor
pop
pop
fcom
inc
pusha
sub
jns
lods
sar
sub
or
icebp
test
imul
xor
xor
repnz
push
jmp
adc
je
ret
test
and
hlt
mov
popf
imul
mov
xchg
es
push
inc
mov
jns
imul
test
and
pop
mov
mov
push
add
neg
fadd
mov
ins
gs
aaa
inc
fs
mov
pop
fwait
mov
jbe
shl
xor
movs
repz
push
mov
push
push
fist
xor
sar
call
xor
jnp
repz
inc
cdq
es
jp
xchg
or
sbb
stos
xchg
dec
paddw
dec
push
jge
xchg
ret
mov
addr16
and
sub
mov
jmp
iret
out
xor
adc
dec
push
jle
mov
call
cmp
add
mov
mov
pop
push
sbb
add
and
xor
(bad)
and
add
movs
mov
mov
mov
push
(bad)
pop
pop
and
push
mov
js
rol
pop
push
retf
scas
cmp
ret
cmp
adc
or
dec
test
loope
and
dec
imul
push
(bad)
adc
pusha
(bad)
out
mov
xlat
ficom
push
sub
call
pop
out
out
and
(bad)
in
push
jp
loop
ret
and
icebp
xor
or
and
mov
ins
stos
mov
add
cmp
ins
cld
mov
(bad)
out
ret
ja
cmp
xor
fcom
into
cmp
pop
push
sahf
jmp
dec
cmp
cdq
and
adc
mov
hlt
in
add
jns
out
cmp
aas
mov
in
inc
lds
ret
pop
fdiv
shl
mov
clc
loop
push
push
ins
jmp
dec
aas
pop
inc
movs
test
mov
int
retf
dec
xchg
jbe
jl
in
aad
sbb
adc
popf
bound
push
xchg
push
jb
loop
inc
jb
enter
mov
or
call
imul
test
inc
xchg
dec
cmps
jno
mov
loop
inc
(bad)
pop
or
push
add
sahf
xor
popa
sti
xchg
(bad)
lea
mov
xchg
out
mov
adc
pop
call
call
and
xchg
arpl
push
pop
jg
mov
ins
call
jne
clc
mov
mov
fidivr
test
out
clc
iret
ds
sub
push
das
shl
push
sub
call
dec
sub
scas
js
sub
pop
jo
mov
adc
or
scas
retf
jns
jge
outs
mov
je
es
mov
rcr
into
adc
mov
or
fnstcw
jb
mov
aam
imul
add
(bad)
imul
imul
jnp
das
mov
mov
mov
test
jge
jg
xchg
mov
out
imul
mov
mov
mov
xor
leave
xchg
add
pop
lock
inc
mov
jecxz
push
xchg
cmp
jge
xor
or
mov
sbb
je
aaa
inc
or
xchg
cmp
mov
ffreep
addr16
jg
pop
sbb
sub
jmp
push
sbb
retf
jmp
sbb
add
and
hlt
sbb
adc
adc
and
movs
aaa
test
fidivr
push
xchg
add
cmp
mov
adc
jno
cs
push
bound
xlat
jnp
call
imul
(bad)
and
rcr
mov
jp
pop
inc
inc
push
cmp
loopne
hlt
and
movs
xlat
mov
jge
fsub
jne
mov
cmp
sbb
and
jae
sub
adc
out
iret
inc
cs
ins
inc
and
cmp
stos
adc
jbe
mov
pop
xor
out
cmp
mov
sbb
cld
add
mov
in
and
cli
push
or
out
data16
push
fimul
or
xchg
ins
call
out
or
scas
mov
xchg
retf
retfw
in
mov
rcr
sbb
mov
mov
(bad)
adc
(bad)
(bad)
inc
add
mov
cmc
mov
out
fistp
in
mov
add
jp
mov
xchg
clc
mov
fist
cs
(bad)
shr
ror
push
test
mov
ja
inc
aad
mov
mov
or
xchg
sbb
sub
cli
lods
mov
arpl
push
mov
add
inc
or
movs
push
push
push
xchg
add
shr
jnp
push
mov
faddp
or
push
fiadd
push
scas
xchg
cdq
or
imul
(bad)
cmp
cdq
adc
cmp
jne
mov
iret
xchg
add
pop
aaa
into
mov
lods
inc
ss
mov
xlat
xchg
jge
add
sti
add
jg
out
or
and
aam
add
std
aam
stos
xchg
inc
imul
cmps
cld
loop
xchg
inc
pop
out
inc
jecxz
mov
dec
mov
je
sub
sbb
dec
mov
outs
mov
div
sti
xchg
call
mov
jbe
and
jmp
out
out
rcl
sar
ins
popa
lods
jp
push
xchg
mov
jmp
and
push
add
call
ins
dec
fld
out
push
fimul
mov
gs
in
pop
sbb
sub
ins
mov
lods
pop
mov
xor
xchg
cwde
mov
mov
push
pop
test
lds
inc
(bad)
mov
jp
das
(bad)
rcr
pushf
pop
int
mov
xor
sbb
jbe
(bad)
in
mov
mov
inc
retf
sbb
addr16
sbb
adc
mov
sub
add
pop
add
dec
aas
xor
out
ficom
cmc
(bad)
dec
and
jo
sub
mov
test
loope
dec
xchg
mov
jb
pop
(bad)
pushf
pop
add
jmp
adc
cmp
popf
or
and
je
push
les
adc
jno
adc
arpl
xchg
dec
mov
cmp
dec
push
cmc
int3
mov
repnz
push
(bad)
mov
mov
xchg
add
rcl
jmp
mov
sub
adc
xor
rcl
add
xor
adc
jo
mov
or
scas
scas
or
jmp
sub
mov
pop
jecxz
mov
or
push
call
sub
rcl
mov
mov
jp
sti
adc
jle
inc
jmp
and
in
(bad)
push
jb
and
sbb
into
repz
pop
dec
xchg
add
jns
es
mov
push
sti
les
fdivr
add
jle
sti
add
daa
clc
mov
stc
xchg
sahf
mov
bound
cwde
aaa
push
sub
neg
loope
push
xlat
(bad)
movs
enter
dec
push
mov
xchg
sbb
mov
ror
sahf
ins
gs
scas
pushf
je
ficom
js
push
dec
(bad)
and
xor
lds
stos
mov
test
in
adc
sub
jo
inc
pop
(bad)
jmp
pop
add
scas
cmc
jmp
adc
jnp
and
rol
fnstenv
outs
(bad)
dec
or
addr16
jno
mov
stos
dec
sbb
stos
and
and
call
stos
arpl
ficom
pop
cmp
popa
je
ja
and
mov
or
add
mov
pop
xor
push
pusha
je
into
(bad)
xchg
add
int3
sar
ds
cmp
inc
inc
push
test
pop
int3
xchg
int
and
mov
scas
rcr
or
or
or
in
sar
or
xor
ins
adc
cmp
pop
sbb
pop
dec
repz
(bad)
push
adc
fisub
pop
adc
ret
sub
xchg
outs
nop
fidiv
rcl
sub
dec
test
out
jae
jbe
xchg
mov
or
fsub
pop
mov
setbe
push
cmp
inc
cmp
jae
aad
jge
mov
in
xchg
retf
or
dec
dec
scas
leave
xchg
repnz
cwde
xlat
and
push
pop
mov
loop
xchg
ret
outs
fcomp
adc
movs
push
out
mov
aam
les
lock
jbe
push
imul
(bad)
xlat
ss
cli
mov
ins
enter
push
pop
sub
int3
mov
repnz
rcr
(bad)
xor
gs
xchg
add
jg
sar
lods
jp
js
and
sar
adc
xlat
sbb
jle
gs
sub
dec
xor
popa
mov
outs
and
xchg
mov
dec
pop
aas
jno
scas
std
jg
jb
push
fnstsw
(bad)
mov
or
(bad)
sti
adc
daa
enter
arpl
and
add
fisttp
mov
aas
fcomp
mov
inc
lds
inc
or
dec
dec
and
xlat
movs
ds
dec
xlat
and
xchg
jg
push
xor
inc
das
dec
fsub
aam
push
rol
cmc
mov
mov
jge
inc
and
dec
out
and
add
add
add
add
or
add
add
add
add
add
add
adc
xor
adc
push
and
xor
mov
mov
lock
adc
loope
and
push
bound
fiadd
or
add
add
add
jecxz
xchg
lods
pop
test
scas
pop
push
stos
push
lods
pop
mov
aad
push
adc
stos
push
lods
pop
mov
aad
lock
inc
in
add
cli
sbb
cmp
mov
inc
sub
mov
push
mov
mov
mov
inc
ds
or
in
or
sub
aas
js
cld
push
inc
imul
sahf
sub
and
jmp
add
and
pop
jle
ud0
imul
std
inc
xchg
xchg
test
push
imul
int3
enter
ret
xchg
xor
mov
pop
add
rcl
jno
jmp
sub
ds
retf
inc
jle
push
push
xor
test
mov
leave
pusha
psrld
xlat
inc
ror
xor
std
mov
lods
push
adc
vpaddusw
test
cmp
xor
and
and
pusha
cmp
jne
es
adc
inc
jp
add
and
stos
pop
jecxz
and
cdq
test
cmp
sub
fld
loop
dec
pushf
call
(bad)
lods
mov
jbe
loope
mov
fsubr
ret
leave
sbb
xchg
pop
sbb
scas
fcom
(bad)
lock
mov
call
jle
aas
and
fimul
es
inc
(bad)
sub
imul
add
mov
xor
mov
adc
sub
fbld
ins
pushf
imul
add
cmp
lahf
in
xchg
(bad)
aaa
stc
fs
lsl
or
mov
lock
aad
test
mov
sbb
adc
and
mov
or
repz
cdq
int
or
adc
shl
xchg
push
pop
mov
and
jg
(bad)
push
inc
lds
mov
aam
cld
jne
lahf
in
cli
fldenv
dec
pop
icebp
clc
scas
ret
popf
fcomp
imul
mov
leave
mov
aad
jg
in
jno
and
(bad)
ins
xchg
enter
push
pop
inc
xchg
pop
je
and
imul
jns
and
push
jl
jno
adc
xchg
xchg
and
add
sbb
mov
cmps
ds
jg
dec
push
retf
fdivp
xor
mov
imul
mov
outs
push
mov
les
xchg
xor
inc
repz
nop
pop
ret
xor
ins
repnz
jo
mov
and
adc
mov
daa
jg
pop
push
xchg
and
das
push
xor
(bad)
dec
jnp
and
int3
ror
call
inc
push
sub
adc
adc
bound
or
in
fisubr
pop
push
in
cwde
ret
aaa
pop
sbb
jnp
cmp
pop
add
loopne
mov
mov
data16
xchg
pop
mov
mov
rcr
pop
lods
xchg
ins
ins
xchg
xor
cs
ja
(bad)
stc
push
mov
adc
stos
sbb
push
mov
stos
lea
mov
in
enter
push
adc
adc
xlat
jmp
repz
sub
loop
xor
push
scas
ret
dec
pop
test
in
loope
and
cmp
add
cmp
xchg
inc
jp
or
jo
mov
movs
out
inc
and
add
fidivr
sets
fwait
add
rcr
leave
dec
inc
ror
nop
xor
and
jae
ja
push
jbe
add
xchg
clc
jle
jbe
or
add
int3
jle
cmp
pop
add
pop
and
jp
in
add
cmps
adc
jmp
push
cmp
imul
jle
pop
dec
jl
imul
in
addr16
movs
xchg
in
sub
aam
inc
repnz
add
shl
hlt
mov
xchg
xlat
les
outs
cld
(bad)
sub
outs
fs
push
or
popf
cdq
adc
cmp
lock
inc
add
xchg
out
jb
cli
add
nop
add
cmp
scas
cmc
mov
idiv
psubd
addr16
mov
cmp
addr16
mov
push
adc
jno
push
ficomp
leave
cmps
dec
int
fild
test
daa
imul
shr
and
lock
out
push
xor
pop
es
push
xchg
in
idiv
dec
cmps
hlt
push
jp
jae
pop
mov
jle
cmp
movs
xchg
dec
xchg
popa
cwde
xor
test
sbb
not
out
sbb
stc
sub
mov
loope
repnz
xor
ja
dec
in
adc
fs
mov
(bad)
jbe
pop
mov
pop
psubw
xor
test
sbb
retf
out
loope
sbb
fmulp
loop
ja
inc
cmp
enter
and
jge
mov
sbb
loopne
ret
(bad)
out
enter
mov
push
dec
push
cmc
aaa
js
jno
mov
repz
call
or
pop
dec
data16
clc
pop
test
xchg
and
jne
adc
daa
nop
(bad)
popf
aam
adc
pop
loopne
fist
retf
push
popa
(bad)
cmp
jno
cwde
fucompp
pop
inc
out
outs
nop
clc
jle
xor
popf
(bad)
cmps
out
xor
repnz
mov
and
ret
retf
js
lock
fisubr
xchg
ret
lahf
xchg
ret
loop
lds
arpl
repz
dec
sub
mov
pop
jb
das
ret
enter
xor
or
add
imul
rol
jbe
and
mov
mov
jg
aas
or
jo
sbb
xchg
sub
cmc
cs
or
mov
hlt
lahf
adc
jae
stos
push
idiv
stos
mov
mov
cmp
jbe
lahf
adc
mov
and
mov
inc
adc
or
add
add
jnp
frstor
xchg
add
repz
and
cs
sbb
jl
js
aad
jmp
xchg
jns
rcr
xchg
mov
inc
imul
adc
pop
std
dec
xor
dec
add
dec
push
cs
xor
cmp
xlat
mov
lods
cli
pop
xchg
int3
inc
mov
push
repnz
mov
adc
inc
ret
inc
mov
lahf
aad
pop
stos
test
cmp
loop
adc
cmp
ins
add
out
std
xchg
or
push
mov
mov
jns
shl
xchg
daa
cmp
mov
pop
in
nop
xchg
ret
mov
stc
das
mov
sar
or
imul
repz
or
mov
add
cmp
xchg
shl
icebp
pop
cmc
idiv
stos
int3
cli
loopne
enter
and
mov
inc
imul
iret
xchg
inc
dec
(bad)
adc
add
ins
stc
(bad)
lock
fs
aas
scas
call
add
loope
in
aaa
ja
aas
xlat
out
test
push
pop
mov
ret
and
lock
bound
sbb
mov
ss
jmp
add
in
add
loop
imul
xchg
(bad)
repz
pop
ret
scas
mov
es
push
sti
and
aaa
mov
inc
push
mov
inc
(bad)
cmp
push
scas
xchg
push
add
sbb
ret
aas
push
inc
aam
movs
xor
fld
call
dec
and
mov
cmp
retf
test
hlt
xchg
in
mov
inc
and
push
stc
out
push
movs
cmp
mov
and
je
mov
clc
dec
int3
and
or
lods
cmp
jb
sar
jmp
pop
in
cmc
xor
mov
mov
cmp
stos
retf
push
stos
push
inc
pop
sub
scas
loop
xchg
jmp
push
push
std
xchg
imul
sbb
fisttp
(bad)
inc
ss
ror
cmp
pop
or
int3
jl
mov
dec
cmp
pushf
ins
fisttp
sbb
test
aam
sbb
je
mov
add
ja
mov
popf
(bad)
inc
push
mov
cmp
inc
add
outs
xlat
rcr
test
and
arpl
sub
or
sub
pop
aad
loope
sub
mov
sub
jno
inc
aam
add
sbb
mov
test
adc
mov
call
leave
inc
int3
hlt
push
dec
pushf
je
les
or
push
dec
fdivr
jecxz
or
jb
retf
gs
gs
fidiv
mov
cmp
add
add
mov
sbb
aaa
dec
add
push
js
mov
mov
ror
mov
xchg
mov
push
fild
loope
xchg
test
(bad)
cld
aam
js
icebp
sbb
movs
in
pop
shr
jo
mov
std
sub
sbb
out
push
dec
pop
jmp
mov
pop
jmp
loopne
ror
xchg
retf
mov
pushf
in
dec
imul
test
sbb
pop
xor
popa
loope
dec
sbb
mov
xchg
push
or
in
sbb
push
dec
adc
dec
mov
cmp
mov
scas
rcl
cmp
int3
inc
xor
or
inc
pop
jbe
and
add
dec
sub
aam
xchg
fiadd
mov
dec
cmp
cmp
mov
cmp
in
xchg
pop
add
fs
mov
jns
mov
mov
push
jl
push
rol
movs
es
cli
outs
popf
add
mov
out
mov
push
xlat
aam
(bad)
neg
dec
in
repz
retf
sbb
push
vphaddudq
cmps
rcr
cmps
dec
push
lds
jmp
(bad)
xor
imul
sbb
(bad)
sub
and
mov
test
rcl
sub
xchg
inc
inc
xchg
or
adc
mov
push
jb
or
add
mov
out
cwde
cmp
add
dec
and
fcmovnbe
stos
mov
or
rcr
or
aam
mov
gs
fstp
out
in
das
movs
inc
rol
jae
add
fiadd
arpl
in
out
sub
jmp
ins
cmp
cmp
jnp
and
push
mov
push
pushf
fcomp
movs
mov
pop
pop
jl
pop
cs
mov
pop
mov
into
ret
lahf
and
iret
call
mov
or
test
imul
les
sti
dec
or
adc
sbb
in
in
push
push
mov
jp
cmps
xor
stos
inc
mov
jge
mov
add
mov
stc
sbb
sbb
neg
ins
iret
and
jbe
jle
jae
mov
fisttp
xchg
inc
aad
xchg
or
xor
jbe
clc
jg
(bad)
dec
loop
or
adc
cmp
dec
out
cs
xor
adc
out
pop
aas
test
lods
xchg
xlat
adc
ja
jg
das
xchg
cli
xchg
das
cmp
cmc
imul
int
popa
retf
not
sub
shl
mov
enter
pop
cs
outs
fsub
fadd
mov
inc
and
mul
push
inc
and
imul
sub
xchg
push
jb
outs
out
add
mov
in
dec
inc
push
jns
popa
jecxz
test
hlt
js
add
out
and
sar
mov
ja
repnz
ss
sub
jns
mov
dec
lods
ins
jo
aaa
leave
add
in
ss
cmp
mov
ins
or
push
and
bound
sbb
mov
inc
add
add
add
add
add
add
adc
adc
xor
adc
xor
and
push
xor
xchg
mov
shl
and
xor
mov
fiadd
or
add
add
add
(bad)
stc
push
lods
pop
mov
aad
push
lods
pop
mov
jb
mov
pop
fiadd
fsub
push
cmp
movs
adc
cdq
dec
inc
xor
sbb
inc
xchg
fdiv
fdiv
sub
dec
inc
sub
scas
push
sbb
dec
aaa
sbb
daa
repz
or
(bad)
pop
or
jns
test
pop
add
aad
enter
push
sub
cmps
cmp
fs
jmp
not
das
mov
xor
out
clc
jae
add
xor
ds
pop
ror
fistp
push
pop
inc
fsubr
xor
movs
adc
cmc
jmp
mov
or
mov
jno
test
adc
mov
lahf
add
(bad)
loopne
sbb
cld
ret
icebp
dec
or
retf
pop
add
inc
cmp
mov
add
jmp
push
int3
mov
popf
adc
movs
and
pop
mov
mov
mov
fcom
sbb
mov
sub
sbb
mov
cli
jle
mov
mov
pop
fidivr
push
cmc
mov
dec
cmp
jg
push
imul
pop
dec
dec
leave
cli
cld
(bad)
push
inc
jle
shl
mov
pusha
dec
cli
(bad)
es
retf
je
push
sbb
(bad)
jb
adc
cmp
mov
push
hlt
leave
mov
mov
jo
ins
test
popf
sbb
into
jl
jnp
sbb
jns
scas
rol
rol
mov
sbb
sub
add
pop
add
jl
dec
sbb
push
lods
pushf
outs
sbb
mov
(bad)
mov
pop
addr16
adc
add
dec
jmp
jmp
(bad)
cmp
inc
mov
dec
push
add
xor
dec
sub
bound
cs
xor
and
daa
loopne
dec
fdivr
mov
add
jg
adc
push
cmp
sbb
lds
xor
lea
sbb
pop
pop
iret
push
sbb
push
scas
or
and
test
das
mov
(bad)
aam
(bad)
int
mov
mov
cld
and
push
dec
fstp
inc
fidivr
out
push
inc
aam
inc
les
mov
push
loop
add
cmps
sti
(bad)
cmps
mov
pop
aad
std
jg
ins
cmp
jbe
sbb
inc
mov
ret
call
out
std
xchg
int3
sub
imul
or
inc
push
mov
add
fsubr
gs
stc
or
clc
pop
xor
cmp
add
mov
arpl
ja
jl
mov
scas
and
sbb
and
(bad)
and
(bad)
ss
adc
aas
mov
(bad)
pop
jmp
je
cmp
lods
xchg
popa
(bad)
xchg
mov
test
jl
jg
xchg
sbb
ret
neg
sbb
jmp
adc
mov
jecxz
lods
jnp
fldcw
fdivr
sbb
rcr
jae
out
hlt
inc
push
mov
sbb
outs
(bad)
pop
jns
inc
and
add
push
push
sub
pop
fs
xchg
push
lock
retf
cmp
into
sub
shl
xchg
(bad)
fwait
mov
ror
push
xor
push
bound
jnp
scas
shl
sar
cs
mov
or
dec
mov
popa
xor
xor
cld
cmp
xor
xchg
bound
mov
pop
inc
and
fcmovnb
fild
dec
cmp
add
dec
daa
idiv
cli
add
test
enterw
jnp
mov
xor
adc
pop
fwait
inc
dec
inc
sti
xchg
cmps
mov
sbb
sub
aas
ret
movs
aas
mov
mov
push
fmul
movs
cmps
(bad)
pop
rcr
sbb
fucomp
xchg
xor
and
dec
cmc
pop
(bad)
push
and
sar
push
call
fsubrp
pop
out
jmp
xchg
mov
inc
cmp
pop
div
inc
mov
sbb
fst
stc
sbb
sbb
xchg
jno
inc
out
xor
add
in
push
cmp
idiv
inc
aam
push
repnz
push
dec
push
xchg
stos
out
nop
leave
scas
sub
sub
out
rcr
adc
jae
mov
xchg
pushf
or
sbb
xor
push
xor
jb
shl
adc
pop
cmps
pslld
mov
mov
dec
out
or
outs
jmp
mov
fdiv
sub
sub
sbb
inc
inc
xor
add
(bad)
fld
cmp
mov
aad
lock
daa
xor
sbb
pop
mov
cld
out
cmp
sub
jne
pop
aad
cmp
mov
jge
out
imul
mov
sub
xchg
sti
and
mov
add
cmp
in
dec
pop
push
or
adc
sti
cmp
add
jp
jbe
popa
push
out
xlat
or
stc
sti
adc
or
repnz
ins
xor
sti
(bad)
mov
jmp
gs
cmc
dec
clc
test
cmp
mov
sub
mov
popf
dec
sbb
cmp
loope
pop
jo
sub
and
sub
and
push
mov
inc
adc
inc
ins
pushf
loop
popa
and
fucomi
inc
jl
loope
test
pop
sub
pusha
fsubr
fmul
cmp
sti
mov
leave
or
movs
jnp
hlt
in
dec
int3
mov
adc
mov
and
push
in
inc
push
imul
imul
fsubr
ret
mov
lods
fwait
or
mov
push
xor
adc
xchg
add
push
cmp
push
mov
cmp
repnz
cwde
ins
push
ret
clc
xchg
cmp
or
mov
lods
test
mov
mov
add
push
fwait
ja
cmp
ss
movs
jmp
loope
or
popf
fidivr
(bad)
mov
xchg
inc
repnz
imul
mov
in
inc
(bad)
pop
sbb
ret
jne
cmp
pusha
ror
or
sub
push
repnz
and
jle
push
imul
sub
ret
inc
add
add
add
aam
popa
inc
loopne
daa
ss
dec
hlt
pop
(bad)
scas
rcl
xlat
test
loopne
pop
sub
pop
loop
es
add
mul
and
mov
adc
adc
shl
std
mov
mov
xchg
push
pop
push
cld
xchg
cmps
xchg
loopne
into
cld
arpl
hlt
fcomp
call
nop
(bad)
ror
xor
js
push
sahf
test
add
ret
push
pop
call
dec
(bad)
push
mov
pop
jo
rol
push
push
inc
adc
mov
push
inc
leave
mov
cld
inc
test
imul
mov
popf
jle
add
xchg
ss
packssdw
cld
xchg
xor
les
ins
pusha
loopne
cld
dec
outs
fdiv
and
inc
movs
in
add
movs
xlat
cmps
add
out
test
je
push
push
and
dec
pop
stos
in
xchg
fwait
adc
cld
sbb
retf
ror
mov
and
mov
dec
retf
jbe
add
lods
pop
rcr
mov
out
push
sub
push
imul
addr16
out
mov
jl
ja
cmps
fs
lods
(bad)
pop
in
mov
call
jnp
nop
push
imul
lock
popf
retf
xor
pop
mov
fcomp
scas
xchg
cmps
arpl
cmp
inc
or
stos
mov
aad
jbe
add
nop
sub
inc
mov
nop
sbb
mov
inc
xor
add
popa
ja
sub
rol
pop
pop
pusha
pop
mov
dec
ret
test
pushf
or
dec
mov
pop
adc
pop
jno
ss
pusha
aas
mov
mov
adc
(bad)
retf
out
or
push
mov
test
and
imul
adc
icebp
add
cmp
or
xchg
dec
je
push
mov
ret
mov
xchg
aad
scas
shr
sbb
mov
stos
xchg
adc
shr
mov
mov
push
imul
test
pop
loopne
cmp
fisub
out
mov
add
adc
js
adc
mov
fs
cmp
(bad)
mov
push
mov
call
mov
push
inc
inc
cmp
pop
in
push
or
xchg
ret
movs
pop
xor
sub
sbb
inc
adc
loopne
inc
jnp
popf
jg
mov
pop
shl
adc
dec
xlat
repnz
in
adc
push
mov
add
adc
push
test
test
ror
(bad)
mov
jg
push
inc
adc
add
push
mov
sub
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
sbb
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
inc
add
add
add
add
add
or
or
or
or
or
adc
adc
adc
adc
adc
adc
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
(bad)
fild
inc
add
add
push
push
or
push
or
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ret
or
push
add
add
add
adc
inc
add
add
add
add
add
add
add
add
or
fiadd
or
add
add
add
push
add
or
sub
mov
add
push
or
sbb
rol
add
and
and
es
xor
scas
aam
pop
int
aad
push
mov
ds
loopne
add
fistp
lds
test
add
xor
or
int
add
and
and
inc
ins
mov
sbb
xchg
fistp
mov
or
add
xchg
xor
bound
dec
xor
in
jle
jmp
mov
add
push
or
sbb
add
add
add
mov
dec
ins
mov
adc
mov
ins
addr16
pop
ins
mul
mov
mov
xchg
push
xchg
add
and
out
fs
jns
push
btr
and
push
add
or
push
xor
xor
xor
cdq
add
add
mov
loop
or
aam
jns
in
je
ss
xor
xchg
dec
jg
add
xor
(bad)
out
(bad)
scas
xchg
aam
sti
imul
dec
sub
adc
add
push
or
cdq
xor
xor
data16
add
add
xchg
dec
inc
sbb
pop
mov
sbb
or
fcmovu
fldcw
test
adc
or
in
push
cmps
test
ja
sbb
push
cdq
dec
mov
or
add
rcr
data16
sbb
and
test
fld
mov
mov
mov
repnz
fisttp
pop
dec
mov
scas
dec
fstp
out
inc
and
xor
shr
dec
jne
fsub
adc
add
xor
data16
inc
int3
rcr
or
mov
les
cwde
popa
stos
fdivr
fstp
mov
lea
imul
test
dec
cld
cmp
int3
fstp
mov
mov
arpl
xor
sbb
adc
xor
add
data16
sub
cwde
xor
adc
and
mov
les
mov
dec
xlat
repnz
xchg
imul
repz
ins
stos
repz
dec
hlt
cmp
in
bound
sub
push
jae
sti
sahf
rcr
mov
in
(bad)
mov
fiadd
adc
add
cwde
xor
xor
or
add
and
push
xor
aaa
push
sar
dec
mov
je
(bad)
pop
fwait
test
add
call
sahf
or
cmps
and
retf
mov
xchg
in
mov
jne
gs
and
adc
add
sbb
data16
inc
and
ins
mov
(bad)
push
xor
inc
mov
hlt
push
mov
arpl
movs
push
or
sbb
fcmove
jno
cmp
iret
lods
sti
(bad)
out
jg
pop
test
jnp
mov
mov
test
xor
inc
int3
int3
rol
add
or
sub
mov
fsubr
repnz
and
fadd
mov
mov
push
call
pop
cs
mov
std
das
xchg
dec
repz
jno
jg
call
ror
inc
dec
adc
add
xor
inc
xchg
and
dec
push
fisttp
les
data16
repnz
and
iret
mov
mov
add
inc
stos
dec
xchg
cmp
fisubr
mov
out
dec
js
fnstcw
div
ins
mov
bound
adc
data16
popa
inc
data16
or
or
jl
imul
in
aam
mov
add
mov
inc
sahf
pop
sbb
pop
mov
sbb
jo
adc
inc
mov
adc
sbb
dec
sub
and
adc
mov
int3
sbb
adc
add
dec
and
ins
adc
push
arpl
idiv
movs
outs
loopne
fcmovbe
fistp
dec
adc
stc
retf
inc
push
retf
inc
enter
jnp
pushf
add
ficomp
cli
push
cli
into
retf
inc
push
adc
cmp
or
inc
push
int3
int3
shl
cdq
cwde
xor
les
xchg
fcmovnbe
fwait
dec
dec
test
cmp
sbb
jae
jmp
(bad)
push
sub
stc
(bad)
and
sbb
and
adc
mov
jp
arpl
cmp
into
ret
inc
push
xor
sub
cwde
xchg
pushw
push
or
add
push
add
popf
jno
or
scas
sub
out
dec
jmp
out
and
cdq
aam
call
shl
in
mov
out
ins
test
mov
out
fcmove
cld
push
dec
dec
push
inc
add
xor
inc
data16
cdq
push
mov
pop
test
xor
fisubr
jne
shl
mov
repnz
sub
ins
xchg
popf
outs
daa
jmp
out
cdq
push
mov
xchg
hlt
test
or
cmp
mov
xor
icebp
push
and
inc
call
mov
popa
mov
int3
rcr
scas
cmps
fcom
adc
pop
mov
dec
jmp
push
cmc
mov
addr16
fistp
bound
rcr
push
shl
out
outs
popa
shl
int
loop
jge
jge
addr16
xchg
dec
adc
sub
or
int3
int3
loop
xor
xor
xor
ror
xchg
dec
mov
push
mov
ins
imul
movs
sub
lahf
retf
addr16
push
leave
mov
cmp
dec
dec
stos
cmp
adc
clc
test
lahf
dec
hlt
xor
rcr
ins
mov
add
and
cmps
xor
addr16
jns
cdq
cdq
cdq
cwde
mov
ret
cwde
xchg
fwait
or
mov
xor
lahf
sub
pop
fisttp
jb
scas
mov
inc
into
mov
dec
xchg
dec
lahf
xchg
pop
ja
sahf
mov
jno
std
mov
jmp
add
enter
and
inc
adc
cdq
cwde
xchg
int3
int3
int3
sbb
adc
jo
or
pop
scas
mov
jp
loop
lahf
xchg
jne
mov
es
retf
mov
(bad)
cld
loopne
repz
into
dec
push
shr
push
pop
jnp
loopne
sbb
xor
and
cdq
cdq
shl
and
xor
xor
data16
adc
popa
or
sbb
dec
jne
or
pop
fmul
jb
mov
test
(bad)
iret
xor
sub
es
mov
idiv
mov
call
dec
dec
and
add
xor
xor
int3
int3
inc
mov
xor
push
data16
adc
popa
or
and
jno
or
pop
pop
into
aam
push
mov
xchg
dec
iret
push
mov
xchg
push
add
push
jb
cmp
jmp
pushf
(bad)
cmp
push
pop
das
sbb
push
popa
aaa
inc
mov
sub
data16
pusha
int3
int3
int3
rcr
bound
mov
fcomp
push
pop
dec
sub
loop
stc
xor
fwait
(bad)
cmc
std
jl
es
retf
mov
adc
ss
inc
stos
retf
lods
bnd
xor
pop
dec
in
dec
jmp
push
dec
add
add
xor
mov
data16
inc
or
push
add
cmps
sbb
shr
xchg
jecxz
sbb
dec
jecxz
ret
cmps
jecxz
(bad)
pop
push
mov
jns
dec
or
xchg
(bad)
adc
outs
sub
pop
popf
cmc
movs
shr
and
or
sbb
cdq
test
cwde
and
int3
sub
scas
mov
jno
push
xor
dec
fiadd
jno
arpl
pop
jae
push
repnz
mov
push
cmp
sbb
fmul
add
add
push
(bad)
(bad)
and
leave
mov
dec
test
loopne
popa
inc
inc
jne
pusha
int3
int3
sub
into
mov
push
sbb
popa
or
ins
ins
mov
test
leave
pop
outs
fcom
mov
mov
push
cmp
mov
dec
add
test
lods
(bad)
movs
cmp
test
test
xor
xor
or
data16
or
add
test
sbb
(bad)
shr
imul
leave
cmp
xlat
cli
cmp
daa
(bad)
lock
sbb
in
popf
inc
sbb
dec
xchg
and
or
and
movs
lods
(bad)
lods
cli
mov
jbe
aam
call
sbb
js
cmc
test
adc
sbb
fstp
push
dec
xlat
push
push
fnstcw
mov
loop
repnz
sbb
mov
xchg
std
je
ss
out
imul
xor
push
push
dec
and
add
sbb
xor
dec
push
int
cmps
pushf
inc
mov
mov
sub
pop
and
cli
or
inc
mov
xchg
push
jmp
(bad)
push
cmps
mov
mov
retf
popa
or
retf
outs
fcom
in
sub
add
push
pusha
ret
ins
(bad)
movs
int3
adc
ins
lods
mov
mov
dec
xchg
mov
mov
mov
lahf
popf
aas
adc
jne
movs
ins
sub
jo
add
or
push
jecxz
inc
xor
xchg
clc
mov
clc
addr16
inc
mov
jb
mov
sbb
adc
adc
inc
adc
xor
mov
xor
fmul
loop
mov
cli
out
outs
pop
cmp
jne
sar
push
jne
push
pop
shr
imul
aaa
inc
gs
cmp
sub
xchg
fnsave
test
and
add
loop
sbb
push
push
nop
retf
adc
mov
push
outs
and
mov
xchg
movs
(bad)
pusha
mov
dec
data16
jmp
(bad)
jge
mov
cmp
ret
lods
stos
popa
and
mov
add
xchg
clc
scas
mov
mov
sbb
mov
mov
mov
lods
lds
popa
add
int
dec
pop
pop
call
ins
in
shr
fisub
pop
push
test
rcr
call
dec
push
jmp
out
pop
test
mov
dec
jecxz
fsubr
(bad)
shr
test
test
cmp
loope
jmp
or
retf
aam
sub
or
and
outs
call
add
test
push
and
cs
push
sub
imul
xchg
into
inc
mov
sub
jb
cmps
adc
pop
pop
sbb
push
pop
int3
mov
mov
jne
xor
in
xor
jbe
test
rcr
test
inc
push
adc
add
jecxz
jns
cmp
lods
retf
in
mov
push
pop
or
push
mov
pop
push
dec
xor
xchg
push
iret
jo
in
xchg
fadd
mov
jl
pop
das
sahf
mov
sti
fbstp
sub
lds
int
stos
pushf
inc
mov
xlat
or
shl
and
add
out
cmp
mov
mov
cmp
cli
aas
inc
pop
fist
inc
mov
inc
movs
les
xchg
pop
mov
dec
leave
ret
pop
sbb
mov
dec
sbb
sahf
add
push
out
(bad)
sbb
jb
sub
mov
(bad)
fdiv
mov
ins
(bad)
popf
aam
sbb
test
sub
add
add
xchg
js
fwait
mov
test
lahf
xchg
jbe
jmp
fld
cs
dec
dec
les
sub
mov
pop
call
dec
inc
shr
push
pop
(bad)
outs
shl
ja
cmp
js
or
xchg
cmp
les
sub
jo
jno
gs
mov
add
out
inc
sbb
xor
inc
retf
cld
mov
movs
iret
jne
test
jae
mov
sbb
iret
je
push
in
dec
ja
add
fdiv
jg
fstp
inc
inc
pop
cmp
sub
call
mov
loopne
dec
mov
fild
xchg
jo
xchg
shl
sbb
add
and
test
mov
scas
enter
in
aaa
jb
push
cli
dec
pushf
jge
mov
mov
dec
ror
clc
ins
daa
call
(bad)
or
scas
fcmovu
dec
xchg
mov
test
xchg
pop
push
in
dec
ins
and
movs
(bad)
sbb
scas
push
pop
popf
fxch
repz
out
movs
dec
repz
jmp
mov
inc
and
sbb
pop
xchg
dec
inc
shl
mov
inc
mov
xchg
loop
cmp
mov
mov
fsub
retf
or
dec
sti
(bad)
pop
push
mov
and
jne
mov
jecxz
ds
pop
and
jnp
test
mov
idiv
xor
mov
daa
pop
mov
and
cld
and
dec
arpl
iret
repz
xchg
sbb
mov
mov
int3
xor
inc
cmps
jmp
movs
cmps
leave
pop
out
jmp
shr
mov
out
gs
int
cvtdq2ps
cli
adc
icebp
mov
out
mov
fdiv
cmp
jmp
cmp
sar
inc
dec
and
mov
div
aad
cld
out
addr16
cli
mov
xor
pop
push
(bad)
ficomp
mov
fwait
popa
jbe
in
pop
ror
mov
in
sub
xchg
sti
repnz
lahf
fs
push
xor
mov
into
dec
sbb
fwait
addr16
mov
ret
jo
cwde
gs
sub
repz
loope
sub
retf
jae
mov
mov
pop
addr16
movs
iret
push
add
idiv
push
push
cmp
or
imul
std
or
sbb
push
loope
rcr
dec
add
add
fs
es
xchg
xor
loopne
es
sti
cmp
fistp
xchg
fsub
and
mov
cmp
cmp
add
test
pop
jmp
cdq
jl
jae
mov
sbb
jb
rcl
xor
sub
(bad)
rol
cmp
gs
push
sub
aas
gs
jo
les
sbb
fild
push
sbb
(bad)
jl
int3
leave
bound
xchg
mov
push
ficomp
or
jecxz
pop
pop
(bad)
out
pop
fisubr
cmc
in
inc
icebp
ja
or
leave
fidiv
bound
dec
dec
pop
adc
xor
add
aaa
les
xor
jbe
cmps
or
int
dec
jo
add
push
push
or
cdq
mov
sbb
lods
mov
jl
xchg
stos
stos
div
int
mov
mov
std
pop
pop
lds
sbb
movs
dec
xlat
call
add
dec
aaa
sbb
sub
imul
outs
cdq
loope
ins
aam
int
repnz
and
aad
jo
data16
sub
push
cmps
mov
adc
sbb
js
xchg
jge
mov
mov
xchg
jp
jecxz
int
pop
outs
ss
pop
mov
sub
push
jg
fmul
pop
inc
div
iret
pop
ja
jno
inc
mov
inc
or
fbstp
call
out
adc
inc
xor
cmps
mov
push
mov
sbb
push
fidivr
(bad)
popf
(bad)
imul
cld
out
mov
aaa
sar
mov
std
inc
lods
cli
aaa
push
aam
xor
or
outs
jae
pop
pop
jle
pop
jmp
outs
cmp
mov
cmp
mov
jmp
addr16
add
or
shl
dec
cmp
mov
pop
sub
cdq
xor
sbb
into
xchg
movs
repnz
mov
push
scas
mov
outs
out
out
mov
pop
scas
out
iret
jle
inc
pop
sar
int
pop
test
aaa
mov
jge
(bad)
mov
(bad)
cmp
fisttp
aaa
cmps
or
dec
movs
mov
jge
imul
data16
or
popa
inc
int3
push
sub
lods
dec
pop
add
ss
mov
push
mov
pop
mov
ret
in
(bad)
stc
sti
lahf
pop
pop
ins
cmp
dec
cmps
mov
in
rol
add
push
and
lock
add
and
add
mov
add
into
sahf
frstor
rcr
pushaw
int3
inc
loop
dec
mov
dec
out
movs
scas
retf
gs
jnp
jae
cdq
sbb
outs
imul
cmps
fwait
bound
cmps
(bad)
iret
xchg
in
add
and
push
add
or
xor
into
push
dec
leave
pop
and
xor
sub
arpl
out
sub
xchg
jbe
cmps
sbb
pushf
push
push
xor
retf
jae
mov
sbb
ds
iret
pop
pop
data16
jae
imul
mov
push
inc
mov
lds
add
xor
or
add
loope
adc
int3
sbb
cwde
xor
setp
addr16
xor
mov
xor
jnp
lock
inc
jmp
inc
mov
ins
out
test
stos
dec
ins
(bad)
icebp
ficomp
frstor
fwait
jbe
fnsave
stos
cmp
add
sbb
sub
aam
pop
sub
xor
data16
mov
ja
cld
aam
jnp
mov
int
and
and
imul
jbe
pop
lea
adc
scas
enter
mov
mov
out
jp
int
pushf
stc
pop
xor
mov
adc
jno
popa
sub
data16
sub
xor
push
retf
retf
out
inc
mov
loopne
xor
mov
jg
or
mov
jg
sub
out
mov
cli
lods
push
test
pop
mov
mov
jno
icebp
sbb
add
adc
sahf
jg
cmc
out
push
out
sbb
inc
mov
push
adc
xchg
pushf
ret
dec
call
popf
int3
cmps
adc
adc
cmp
sbb
mov
xchg
std
sbb
stos
mov
push
int3
int
popf
mul
inc
imul
mov
sti
adc
inc
push
out
push
retf
retf
lods
jne
aaa
(bad)
jp
rcr
mov
fsubrp
jl
pop
xor
or
xlat
fwait
scas
ds
dec
inc
(bad)
ficomp
popa
or
mov
push
xor
lods
push
jge
cdq
es
jno
fst
xor
and
or
enter
mov
(bad)
xchg
cmp
hlt
jle
xchg
stc
rcl
inc
xor
jmp
inc
jo
aam
outs
pop
or
movs
pop
fmul
fwait
sub
mov
(bad)
addr16
push
pop
test
inc
mov
test
jne
movs
sub
xchg
setns
mov
jecxz
lods
bound
es
int
out
pop
out
(bad)
mov
xchg
dec
lds
add
ficomp
enter
retf
std
ja
xchg
lock
mov
aad
shr
sub
sahf
das
xlat
jle
loop
fwait
sbb
jmp
dec
fistp
and
sbb
mov
jns
sub
adc
push
inc
jecxz
sub
imul
(bad)
aaa
aas
dec
(bad)
jge
iret
jp
cdq
pop
fisub
cmp
call
popa
pop
push
dec
stos
cmp
xor
les
fnstcw
popf
out
mov
pop
shr
out
iret
pop
jp
mov
pop
jp
xchg
adc
cdq
ss
fadd
add
imul
jp
xchg
mov
xlat
mov
adc
je
mov
cdq
dec
push
stc
mov
inc
repz
in
sbb
pop
mov
add
jp
xchg
mov
fisubr
mov
or
pop
popa
pop
jae
push
sbb
add
into
xor
hlt
das
push
mov
sbb
mov
ss
fsubp
pop
fnstcw
rol
jle
dec
mov
fimul
frndint
jg
sbb
xor
fidivr
test
pop
sub
fisubr
push
iret
pushf
jp
lds
cli
push
sahf
arpl
sbb
sub
int3
addr16
jle
(bad)
gs
addr16
mov
mov
push
add
mov
rol
call
retf
dec
adc
cmp
lahf
jbe
test
jmp
repnz
imul
xor
scas
(bad)
sahf
cwde
retf
xacquire
cmp
shrd
mov
xchg
push
push
dec
das
xchg
jae
mov
call
mov
mov
fprem1
dec
cmp
jno
jmp
dec
mov
push
ss
retf
dec
dec
daa
pop
test
mov
cmp
push
loop
adc
inc
cmps
call
and
hlt
das
and
mov
mov
fyl2x
aas
push
xor
cmp
outs
repz
cmp
int3
jl
aad
hlt
mov
jne
mov
neg
pop
bound
jp
cmp
fidivr
cdq
dec
jmp
hlt
stos
dec
fnsave
dec
mov
xchg
ss
popa
movs
mov
xor
pop
jmp
mov
or
or
sub
push
sbb
daa
and
mov
aaa
inc
mov
sar
aaa
xchg
mov
adc
fcomip
inc
shr
shl
ds
xor
bound
mov
iret
inc
bnd
fstp
push
(bad)
test
mov
pop
rcr
ins
outs
ja
sahf
idiv
sub
xchg
and
outs
jnp
mov
fsubr
test
jns
inc
adc
push
pop
aam
scas
movs
aad
jl
jmp
shl
loopne
idiv
pop
mov
jbe
cld
pop
pop
lds
cmp
fisub
dec
out
(bad)
and
mov
cmps
xor
mov
xor
xchg
lahf
pop
xchg
mov
imul
cmps
dec
sbb
adc
imul
mov
cmps
fld
outs
fpatan
and
jno
iret
xchg
mov
mov
imul
in
adc
test
inc
leave
cli
or
scas
cmp
sub
mov
rol
jb
mov
stos
cmp
xor
mov
ins
or
pushf
imul
fmulp
xchg
pop
repnz
sbb
dec
xchg
xor
sub
aam
push
test
(bad)
jb
stc
pop
cdq
fsubr
sub
repnz
mov
(bad)
mov
or
mov
xor
mov
dec
pop
test
stos
fnstcw
stos
(bad)
test
jae
out
int3
fwait
call
mov
mov
cmc
cmc
std
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
add
aad
fs
add
pusha
fwait
dec
mov
iret
jnp
mov
add
(bad)
das
retf
aaa
lods
inc
add
add
add
mov
dec
jns
shl
add
add
movs
mov
hlt
repz
dec
add
add
or
aad
dec
sub
mov
hlt
jl
dec
aad
adc
xchg
and
mov
pop
sub
(bad)
(bad)
out
jp
sub
mov
add
add
mov
xor
fidivr
add
and
adc
fwait
loopne
pop
cmp
repz
jae
movs
and
add
cwde
add
(bad)
lods
int3
push
sub
(bad)
retf
dec
mov
and
sub
jmp
shl
cmp
add
add
lods
movs
jl
add
scas
push
pop
std
sbb
add
push
and
dec
add
and
adc
add
add
test
adc
nop
xchg
or
dec
sub
or
ss
pop
mov
inc
fadd
jp
dec
sub
mov
sbb
mov
adc
mov
add
lods
retf
mov
gs
fwait
in
inc
test
push
sub
jbe
mov
cmp
hlt
fsubr
imul
inc
mov
mov
add
mov
mov
cmc
mov
mov
lods
xor
fwait
dec
addr16
sbb
ins
mov
imul
in
jp
xchg
repnz
fs
rcr
xchg
jmp
cmp
mov
test
cmps
push
push
mov
fs
add
ds
stc
xor
shl
jmp
or
cmc
pop
in
xchg
add
jl
icebp
fnstcw
stc
in
stc
mov
stc
push
aas
push
xchg
sar
icebp
(bad)
out
dec
or
out
mov
outs
icebp
jns
leave
mov
jns
std
cmp
out
fild
add
icebp
jae
sbb
jge
mov
ror
push
(bad)
in
mov
in
add
pusha
adc
add
jge
xchg
mov
(bad)
jg
test
add
adc
jecxz
push
mov
int3
jb
push
push
cdq
repnz
push
pop
int3
out
(bad)
mov
xor
std
mov
sar
ror
mov
and
hlt
xlat
aas
aad
mov
(bad)
js
lahf
movhps
dec
popfw
sbb
imul
sbb
mov
lahf
dec
fstp
outs
(bad)
mov
jmp
jns
pop
mov
test
jae
rcl
xor
iret
xchg
cmp
jle
adc
cdq
(bad)
lods
ret
pop
xchg
jmp
xor
adc
pop
pop
pusha
xor
cli
cmp
mov
cdq
mov
mov
popf
cdq
cmps
xchg
cmp
scas
ds
scas
mov
jmp
adc
sbb
ja
push
add
(bad)
movs
cmp
xchg
mov
mov
in
cmp
push
outs
cmp
sti
sbb
sbb
add
add
add
add
add
add
add
push
pop
(bad)
fiadd
or
add
add
add
add
cwde
add
adc
add
or
add
add
or
dec
mov
rol
add
add
mov
retf
out
add
add
add
hlt
cwde
fwait
jp
inc
mov
add
add
add
fnstsw
scas
xor
dec
adc
add
add
fdivr
(bad)
lods
cmp
pop
shl
js
add
add
push
inc
pop
and
jle
jle
xchg
iret
xchg
add
mov
lds
and
add
add
and
mov
mov
cmps
or
add
add
mov
lock
(bad)
je
mov
add
sub
sub
sub
cld
pusha
add
add
xor
aad
inc
add
add
add
mov
add
sbb
mov
add
dec
dec
aam
mov
shl
inc
pop
movs
enter
cmp
jb
dec
and
inc
push
dec
(bad)
and
ja
lea
dec
adc
mov
es
hlt
sbb
jne
int
or
cmp
jle
loopne
les
lods
fisubr
add
hlt
jmp
jecxz
adc
dec
xchg
out
hlt
lods
(bad)
lods
repnz
push
imul
ins
jmp
shl
jno
jecxz
in
mov
lock
aas
xor
inc
push
adc
rcl
popf
xor
jecxz
test
mov
enter
idiv
mov
inc
adc
mov
xor
(bad)
mov
pusha
je
hlt
retf
ret
fisub
and
jbe
jns
sbb
inc
rcl
add
cmc
(bad)
push
lock
pop
jp
leave
out
std
xor
(bad)
sub
into
lahf
stos
ins
stc
outs
mov
mov
add
scas
inc
jae
loope
jns
pop
fsubr
dec
in
repnz
sets
out
mov
mov
pop
xchg
sub
add
add
ins
aad
sar
int
ret
loop
jae
js
add
add
dec
dec
xchg
jp
adc
jl
add
rol
sar
repnz
add
es
inc
cwde
xchg
inc
jmp
xchg
sbb
inc
repz
sbb
or
dec
cmc
mov
cdq
fbstp
scas
xor
jecxz
stos
leave
leave
hlt
pop
aas
push
add
into
(bad)
in
imul
popa
jmp
bound
lahf
jp
jp
sbb
add
in
das
mov
ror
or
cld
cld
and
hlt
in
mov
lods
out
out
jns
adc
outs
pop
loop
movs
mov
adc
(bad)
dec
mov
hlt
cld
cld
jb
mov
shr
or
jmp
pop
mov
mov
xchg
in
cmp
pop
arpl
fnstcw
outs
stos
cld
into
scas
aaa
mov
scas
xlat
mov
push
cdq
and
lods
out
push
sar
inc
imul
mov
dec
mov
rol
inc
add
add
add
add
add
add
add
adc
push
adc
adc
and
pop
adc
inc
and
push
and
ss
and
inc
inc
inc
push
pusha
popa
jno
fiadd
or
add
add
add
add
inc
aad
push
pop
lods
push
stos
push
stos
aad
inc
enter
hlt
fs
xchg
outs
aad
lahf
ror
call
adc
(bad)
aad
inc
es
fisttp
xor
add
add
xor
lods
inc
leave
sub
ins
pusha
es
mov
in
je
add
pop
mov
lods
inc
shr
pop
adc
xlat
inc
mov
aad
mov
mov
and
pop
mov
add
pop
rol
(bad)
outs
push
pop
out
(bad)
push
add
sbb
cmps
(bad)
mov
outs
xchg
and
xchg
sbb
les
imul
mov
stos
dec
push
jg
sbb
fadd
and
pop
shr
repz
pop
xor
and
pop
call
xchg
test
rcr
xlat
hlt
adc
sub
pop
sub
lods
or
lods
or
push
test
inc
mov
stos
imul
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
icebp
inc
push
jne
push
push
mov
inc
lods
push
stos
cmp
in
shr
int3
je
sbb
or
scas
sub
xor
cmp
dec
cwde
jp
mov
mov
shr
jmp
xor
mov
or
pop
sub
cmp
stc
mov
xchg
inc
in
out
push
pop
mov
inc
push
and
mov
jmp
dec
inc
push
or
dec
push
or
movs
and
popf
inc
dec
and
inc
dec
cs
pop
mov
popf
stos
scas
scas
add
test
ret
aam
pop
das
retf
pop
adc
imul
out
add
fistp
inc
push
stos
mov
jb
sbb
xor
jae
movs
or
xchg
sbb
inc
cmp
sbb
xchg
outs
and
sahf
push
push
cmp
inc
or
add
aas
inc
jmp
add
sub
inc
mov
daa
mov
and
clc
clc
fstp
js
adc
push
pop
pop
loop
aam
xor
int
pop
mov
push
xor
inc
adc
push
push
js
pop
pop
mov
xchg
js
add
sahf
sbb
pop
mov
test
xor
pop
jle
add
es
cmp
sbb
inc
sbb
cmps
ja
mov
and
fnstenv
inc
andps
or
cmps
xchg
aas
inc
jmp
add
sub
ret
jmp
pop
ss
inc
sub
repnz
test
jne
or
pop
arpl
ins
ins
xchg
add
xchg
push
call
enter
sub
call
imul
imul
lea
sub
mov
aas
add
xchg
xlat
(bad)
into
int3
popf
cmp
pcmpeqd
xchg
jmp
cvtpi2ps
inc
xor
cmp
cmp
inc
add
adc
inc
mov
cmp
lods
xchg
mov
pusha
repz
pop
xchg
add
xlat
sahf
aad
jg
dec
mov
sbb
xchg
dec
xchg
mov
shl
inc
mov
pop
jl
mov
retf
sbb
mov
push
das
retf
fld
scas
push
popf
in
add
jmp
pushw
stc
pop
sub
push
outs
xchg
or
push
cmc
dec
call
add
loopne
sub
sar
cdq
repnz
sar
ret
es
sar
push
(bad)
stc
test
add
dec
mov
out
inc
xor
push
rcl
dec
cmp
mov
xchg
inc
stos
xchg
in
aad
mov
sub
mov
sti
cdq
(bad)
imul
push
popf
xor
lahf
mov
lea
adc
xchg
or
clc
adc
sub
iret
call
es
push
sub
mul
imul
jne
cmc
and
dec
sar
out
aaa
pop
in
mov
mov
(bad)
in
lahf
in
or
(bad)
push
das
retf
fucomi
sbb
ficom
push
jge
ja
ds
or
add
inc
mov
mov
mov
outs
xor
test
pop
es
imul
rol
fist
and
dec
cmp
xlat
inc
rcl
sahf
scas
js
xor
xchg
dec
pop
in
ror
jne
out
lods
jg
mov
jle
mov
mov
cmp
jp
push
jle
cmc
push
jl
mov
ins
pop
add
pushf
fbstp
gs
and
out
pop
push
adc
jno
cmp
loop
fsub
xchg
outs
int
scas
pop
or
std
or
inc
jno
push
cld
jle
mov
inc
jmp
stc
jnp
leave
sti
sub
and
lock
in
fistp
shl
push
movs
sub
mov
cli
jne
lods
push
stos
push
stos
aad
mov
pop
inc
lock
sub
sar
xor
fidivr
adc
xlat
cmc
sbb
push
cmp
inc
dec
rcr
popf
push
cli
mov
xchg
mov
mov
mov
push
fild
ins
fdiv
xchg
sub
arpl
daa
pavgw
aaa
jnp
in
loope
daa
mov
movs
push
aaa
sub
imul
mov
xlat
mov
push
fidiv
pop
aad
cwde
fist
scas
movups
aad
jmp
(bad)
in
adc
test
scas
mov
mov
in
push
jl
scas
push
cmp
dec
sub
mov
and
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
scas
outs
stos
pop
int
stos
push
stos
xlat
mov
stos
aad
fldcw
xlat
cmc
xchg
push
inc
adc
in
cmp
sub
call
xor
inc
ret
cmp
push
jl
cld
jmp
imul
mov
clc
mov
xchg
cmp
dec
push
inc
cmp
fild
jns
or
arpl
cmp
outs
retf
jo
jge
aaa
stos
push
jge
int
xchg
xchg
lds
xchg
xchg
scas
sbb
pushf
loope
ins
adc
xchg
jecxz
xchg
xchg
cs
ret
into
les
mov
push
cli
adc
mov
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
pop
ror
nop
lea
push
enter
inc
mov
dec
xlat
jae
mov
sub
call
add
mov
pop
adc
pop
push
cmp
mov
or
cmc
or
pop
out
sub
pop
popf
push
cmc
in
jl
std
adc
test
mov
inc
cld
mov
cwde
in
dec
jns
push
mov
imul
jmp
mov
fwait
sbb
push
cdq
xchg
fwait
retf
retf
mov
ja
cdq
push
pop
loope
push
xchg
addr16
repnz
pop
ss
xchg
fwait
mov
mov
pop
mov
dec
or
fsub
fcomp
outs
push
sub
lds
cmp
sbb
pusha
xor
mov
arpl
push
mov
push
mov
xchg
cmc
retf
jp
cmc
mov
arpl
(bad)
lods
(bad)
pop
sbb
cmp
mov
arpl
(bad)
lods
(bad)
pop
push
mov
ins
jp
cmc
mov
arpl
(bad)
lods
(bad)
pop
push
mov
ins
jp
cmc
retf
jp
mov
pop
mov
xchg
jb
pop
test
sub
xchg
jb
pop
mov
icebp
pop
cmp
popa
repnz
pop
lods
push
mov
fs
je
(bad)
repz
(bad)
inc
aad
cmps
pop
lock
cli
stc
(bad)
sbb
jg
popf
adc
aad
pop
inc
pop
inc
dec
hlt
pop
mov
cmp
sti
(bad)
fsub
(bad)
sub
call
(bad)
movs
outs
push
sbb
mov
push
int3
outs
arpl
fs
or
or
gs
popa
mov
dec
retf
jo
addr16
cmps
jl
dec
dec
mov
xor
fdiv
(bad)
mov
mov
sbb
les
sbb
out
in
scas
ror
jne
scas
cli
mov
jle
cmovne
adc
mov
push
xchg
sub
push
cmp
add
stos
aad
mov
lods
push
mov
pusha
test
push
inc
and
push
std
sub
pop
dec
jae
ficomp
xchg
sahf
mov
jmp
mov
cmps
in
dec
inc
sub
retf
pop
daa
outs
pop
mov
dec
xor
and
mov
ret
cmp
daa
arpl
imul
out
cli
mov
xor
inc
mov
lods
repz
inc
mov
xchg
xchg
sub
sbb
mov
sub
js
inc
xor
push
idiv
dec
retf
and
xchg
cmp
push
je
jne
scas
cli
mov
inc
push
pop
shl
xchg
shl
ja
cld
pop
sti
jecxz
adc
out
shl
ds
(bad)
outs
mov
sub
lods
fst
xchg
inc
movs
data16
fmul
daa
pop
jg
std
xchg
je
xchg
adc
inc
sar
adc
icebp
in
mov
push
fcom
lea
add
jnp
sub
sbb
fwait
xchg
mov
jne
sub
cld
push
dec
or
jge
xchg
lds
sahf
hlt
sar
scas
push
arpl
mov
mov
test
lds
jmp
push
xchg
js
xchg
movs
fadd
ins
sbb
int3
lock
and
stos
imul
sbb
inc
push
pop
shl
fwait
sar
jg
jl
sti
jecxz
adc
out
ret
pop
hlt
push
es
pop
xchg
xchg
mov
idiv
lea
movmskps
jno
pop
sar
add
sbb
stc
sub
ficom
xchg
call
clc
jbe
stc
cmp
scas
pop
mov
jmp
cmc
mov
ins
mov
mov
jb
test
test
pop
xlat
cs
mov
gs
in
scas
cmps
sbb
in
mov
or
test
ja
pop
jl
std
pop
cld
pop
cmp
pop
mov
(bad)
aas
call
aas
or
jp
sub
cli
dec
push
js
in
xor
adc
enter
leave
inc
jmp
jmp
push
icebp
in
mov
jbe
xor
repz
fld
pop
mov
lods
xchg
cs
jno
aas
das
xchg
(bad)
lds
pop
xchg
mov
xchg
sub
iret
in
out
jp
(bad)
push
out
inc
fistp
mov
inc
fimul
sbb
sbb
or
push
cmps
cdq
scas
cmps
mov
inc
imul
jl
aad
hlt
sbb
sub
psubb
add
jle
jg
inc
cdq
repnz
sbb
jp
xlat
or
fbld
aad
out
aas
inc
mov
dec
mov
cmp
cmc
ja
popf
pop
in
cmc
pop
mov
hlt
fcomp
mov
popf
mov
sbb
fld
icebp
cmp
mov
bound
sub
xchg
cmp
push
or
jbe
popf
cdq
push
jae
ds
mov
push
aam
push
aaa
ins
lods
jb
jp
dec
jmp
fnsave
test
ja
pop
ds
retf
repz
icebp
jg
(bad)
rcl
mov
call
aas
lods
jle
mov
sbb
mov
pop
test
pop
fisubr
mov
xchg
sub
xchg
xchg
jp
mov
jb
inc
push
ror
pop
(bad)
mov
enter
inc
sbb
pop
test
dec
mov
mov
lods
jno
jl
mov
push
ret
(bad)
mov
cwde
clc
sub
jle
into
jnp
jmp
push
fld
xor
hlt
rcl
rcr
mov
scas
test
push
out
stos
pop
add
push
mov
dec
and
cld
dec
jle
mov
or
call
lahf
and
test
dec
neg
jmp
sar
push
shr
lahf
sub
jle
gs
out
leave
cmp
leave
inc
jmp
jmp
sbb
movs
imul
fld
in
fwait
loope
shl
imul
dec
jecxz
lods
cld
fs
xchg
repnz
fisttp
ss
dec
jae
pop
cli
inc
push
imul
xchg
cwde
stos
mov
shr
pop
mov
dec
outs
inc
(bad)
jne
repnz
add
jmp
pop
and
loop
jp
cmp
aam
mov
push
outs
inc
lahf
adc
ror
inc
adc
das
mov
jle
pushf
popf
xlat
hlt
arpl
and
fdivr
pop
cli
jmp
mov
xor
jb
push
push
jbe
sar
pop
push
jmp
dec
cs
clc
test
fbstp
in
test
sub
dec
sbb
pop
rcr
or
cmps
jo
cmp
dec
shr
ds
lds
in
mov
call
imul
retf
pop
push
lock
push
js
ins
pop
das
jns
adc
ss
(bad)
in
sbb
(bad)
cmp
pop
cmps
test
mov
cmc
arpl
test
les
scas
mov
loop
add
jne
sti
lods
ja
inc
cdq
repnz
pop
std
push
pop
sar
pop
jp
ja
cmp
inc
in
xor
fldcw
bound
scas
in
xchg
mov
aam
sbb
push
(bad)
(bad)
call
psrad
ins
icebp
test
int3
int
mov
push
int
imul
adc
pop
in
shr
push
fmul
ret
adc
push
sub
rcl
(bad)
aas
or
into
sbb
int3
xchg
int
xchg
ins
gs
pop
adc
mov
push
test
mov
call
cmp
arpl
mov
outs
jmp
aas
int
(bad)
jbe
inc
dec
dec
jmp
xor
inc
adc
adc
arpl
cmp
jmp
xchg
cmps
jmp
icebp
mov
mov
leave
cmp
leave
inc
jmp
loop
mov
push
test
adc
sbb
loopne
jne
outs
or
jne
fwait
cmp
out
adc
jge
popa
sub
lods
out
imul
int3
loopne
scas
and
ret
mov
jo
or
xor
addr16
leave
mov
mov
int3
hlt
lods
addr16
mov
xchg
int3
in
repz
xchg
xchg
adc
xor
int
mov
cmp
out
sbb
ds
aad
cmp
fiadd
xchg
jge
and
xor
pop
std
fdivr
add
jle
and
outs
pop
sar
fcom
sar
bswap
lds
scas
and
cmc
jb
dec
mov
push
cli
(bad)
push
hlt
outs
imul
sub
push
aas
mov
into
or
and
adc
add
ret
push
xor
cs
sbb
icebp
scas
jmp
inc
lods
inc
jb
mov
xchg
loope
mov
jge
clc
sbb
loopne
stos
mov
iret
mov
gs
jg
aas
int
(bad)
jbe
inc
dec
dec
jmp
xor
or
aaa
das
imul
mov
pop
cmps
sub
jns
inc
repnz
jge
fldenv
inc
stc
sub
test
aaa
mov
jno
in
ret
mov
aas
xor
sub
xchg
mov
sub
sub
xchg
mov
and
dec
pusha
dec
sbb
xlat
mov
push
ds
stos
jp
clc
xchg
ds
push
jp
dec
(bad)
js
das
sti
rcr
dec
dec
jmp
xor
adc
outs
pop
sar
add
fidiv
(bad)
enter
inc
jecxz
call
push
out
(bad)
sub
pop
in
cmc
push
mov
mov
sub
push
(bad)
sub
jmp
dec
ror
int
mov
mov
stos
push
mov
stos
push
mov
push
mov
ins
inc
and
clc
and
pop
cli
dec
push
(bad)
pop
xchg
xchg
mov
out
mov
lahf
or
ret
scas
jl
lahf
or
ret
scas
jl
cmp
adc
xchg
mov
les
retf
fidivr
cmp
(bad)
fnstenv
cmps
test
xchg
inc
repnz
aad
(bad)
push
cmc
cmovbe
xchg
outs
(bad)
sub
xchg
push
rdpmc
sar
je
sub
shr
pop
sub
push
inc
imul
lea
movs
loope
mov
sub
lea
push
stos
mov
into
ret
aam
inc
out
add
ja
mov
sbb
(bad)
ins
iret
movs
xchg
push
mov
mov
jne
mov
inc
mov
scas
repnz
(bad)
hlt
clc
scas
adc
imul
pop
jbe
out
imul
push
jmp
daa
retf
or
ins
jb
jge
dec
aas
dec
and
fdivr
or
mov
push
xchg
shld
inc
(bad)
cli
mov
push
cli
(bad)
push
hlt
outs
imul
sub
push
aas
adc
lock
cmp
ds
mov
ret
push
test
jae
push
sti
dec
rol
lods
ins
mov
xor
jp
push
movs
movs
add
mov
fiadd
cmp
fld
mov
int
pop
ins
mov
leave
xchg
je
and
sub
(bad)
retf
jp
hlt
loopne
test
sub
ins
fst
loop
div
imul
sahf
sti
mov
push
out
inc
leave
mov
xchg
or
xor
hlt
pop
out
popf
mov
mov
ret
dec
pop
call
sbb
dec
shl
das
mov
sub
pop
test
retf
pop
adc
pop
add
inc
aaa
cs
or
and
push
lods
in
sbb
sbb
inc
pop
xchg
jle
xchg
mov
cwde
in
daa
dec
mov
cmp
mov
imul
dec
sar
pop
push
jmp
mov
call
stc
lahf
lods
jge
cmp
mov
mov
mov
push
les
in
adc
mov
mov
ins
inc
popf
push
les
aad
pop
cmp
lds
loop
xchg
fsubrp
xchg
push
pushf
mov
fbld
pop
sub
adc
pop
inc
pop
xor
xor
push
pop
or
call
test
mov
push
pop
jge
fcomp
js
dec
mov
inc
sbb
xlat
dec
dec
xchg
popf
pop
and
(bad)
in
mov
cld
movs
jb
xchg
jns
xor
arpl
cmp
aam
repnz
pop
in
mov
stc
add
(bad)
jns
je
xchg
jg
lea
mov
jb
mov
xor
sub
push
hlt
pushf
mov
pop
scas
scas
inc
dec
sar
pop
push
jmp
hlt
aam
mov
movs
pop
jae
lods
scas
(bad)
movs
cmps
add
jne
imul
in
push
xlat
es
sub
sbb
sbb
mov
xchg
ret
dec
fsub
mov
push
mov
je
cwde
inc
mov
mov
jno
jbe
icebp
mov
mov
in
inc
in
pop
ja
xor
adc
(bad)
pushf
imul
cld
cmps
test
sub
xor
add
push
mov
inc
imul
in
cmp
in
cmp
sbb
(bad)
ins
sub
inc
aaa
sub
in
or
adc
push
mov
retf
jb
outs
in
arpl
xor
xor
ret
sub
xchg
cmp
test
push
rol
jecxz
jg
adc
lock
repnz
shr
and
cmc
cmovbe
xchg
ja
cwde
shl
push
std
push
test
add
out
xchg
dec
sbb
fisub
xchg
stc
jle
fs
or
xor
mov
xor
out
mov
cmp
sti
mov
mov
add
push
dec
push
and
inc
pop
adc
loopne
inc
sub
movlps
adc
movs
lock
scas
das
cmp
and
xchg
push
inc
and
push
pop
js
mov
pop
jl
sbb
jbe
pop
add
in
jbe
add
jno
mov
mov
pop
test
mov
aaa
shr
xchg
lods
adc
in
mov
fild
inc
stos
inc
clc
adc
xchg
adc
call
or
jg
and
pop
jle
adc
ins
clc
test
aas
rcl
std
fiadd
inc
sub
neg
hlt
or
aad
test
jmp
add
mov
mov
clc
test
jmp
xchg
call
inc
sbb
cli
js
mov
(bad)
push
arpl
pop
mov
dec
mov
mov
mov
push
cmp
in
push
mov
push
inc
cmp
push
inc
sub
inc
push
jb
fisubr
aas
push
sub
arpl
arpl
sub
retf
inc
push
mov
and
dec
jno
out
cmps
aas
ret
idiv
jle
jne
xchg
ins
or
inc
adc
xchg
jb
stos
push
add
adc
push
inc
cmp
xchg
xor
cmp
imul
movs
imul
mov
add
push
push
rol
(bad)
sub
rcr
(bad)
pop
call
inc
lods
add
mov
mov
cmp
cmp
mov
mov
sub
xchg
(bad)
xor
mov
push
mov
(bad)
hlt
fsubr
lea
add
mov
push
jp
push
je
imul
push
hlt
sbb
iret
push
imul
dec
clc
inc
addr16
adc
dec
add
movs
xor
stos
rol
fidivr
into
pop
sub
push
mov
cli
pop
xlat
mov
sbb
popf
xor
jns
jg
addr16
jge
int
stos
push
stc
fcom
jnp
jbe
pop
sahf
aas
xchg
pop
xchg
retf
repz
(bad)
pop
xchg
sar
(bad)
mov
mov
mov
mov
pushf
sub
xor
mov
sti
or
cmp
cmps
arpl
sub
out
test
imul
lea
lods
aas
jnp
dec
bnd
push
xchg
fild
inc
mov
lock
mov
xchg
fstp
push
xlat
fucomp
mov
in
jbe
pop
xor
sub
or
mov
jnp
mov
rcl
sbb
sahf
stos
sbb
js
and
clc
nop
pop
cmp
pop
cmps
cmps
inc
adc
and
add
aam
push
cmp
jmp
dec
loop
sub
push
das
xor
pop
cdq
aaa
jb
and
jnp
js
mov
mov
gs
adc
stos
frstor
sub
test
enter
popa
out
aam
cmp
scas
aam
xor
mov
int3
or
iret
add
pushf
mov
loopne
or
mov
cdq
cmp
int3
popf
mov
mov
xchg
mov
sub
push
outs
ficom
movs
fbld
fbstp
push
push
mov
adc
push
aad
jno
push
dec
jbe
mov
mov
sub
mov
cmps
(bad)
xor
cmps
outs
ja
(bad)
hlt
cmc
push
in
retf
sbb
clc
add
out
gs
mov
pop
lods
dec
pop
jle
push
cmc
pop
mov
pop
sti
fdivr
aad
loop
cld
shr
aas
xor
xchg
push
mov
or
movs
mov
hlt
mov
pop
popa
jmp
jo
mov
in
inc
pop
dec
out
stos
(bad)
ins
inc
mov
pop
dec
sbb
sahf
pop
rol
jge
fs
xor
nop
movs
sub
div
pushf
pop
stos
imul
mov
and
mul
fdivp
stos
fcomp
sbb
ss
stos
pop
adc
scas
cdq
js
push
stos
mov
fsub
retf
mov
je
fld
fdivr
cld
mov
clc
pop
lea
mov
ret
push
lahf
mov
mov
cmp
sub
and
cmp
sbb
mov
ror
sahf
cwde
ss
fsub
pop
jb
in
jo
mov
imul
adc
ret
(bad)
ds
lahf
je
pop
pop
call
scas
push
xor
mov
out
adc
cld
scas
pop
ret
mov
pusha
lods
imul
push
or
fwait
data16
adc
es
stos
aam
sbb
push
ret
loop
sub
push
aas
mov
mov
popf
jmp
mov
(bad)
hlt
jle
push
sbb
jmp
mov
sbb
push
enter
stc
push
mov
and
jae
pop
stc
sub
adc
fisttp
imul
jae
ror
cmp
mov
jae
mov
mov
aam
into
push
mov
jecxz
xchg
(bad)
cmp
fnstsw
jno
mov
retf
inc
jo
adc
leave
idiv
popf
sahf
jns
and
mov
mov
cmp
out
jb
daa
outs
sar
mov
mov
xor
movs
sbb
jno
mov
out
loopne
xchg
dec
dec
out
adc
pop
or
js
dec
sbb
or
je
and
jne
outs
push
push
stos
cmp
inc
test
lock
lods
je
aad
push
cmp
enter
push
das
jmp
adc
dec
adc
bound
cmp
mov
or
inc
ss
lds
fs
pop
aad
and
dec
jb
adc
and
fstp
jp
aad
dec
jno
and
pop
(bad)
loope
popf
lock
loopne
stos
jne
scas
(bad)
(bad)
fidivr
mov
inc
fsubrp
cwde
adc
or
pop
ins
not
inc
call
add
pop
and
inc
push
push
sub
xor
lods
lds
int3
out
mov
div
dec
daa
ss
jno
fwait
push
fisttp
jb
push
adc
xor
in
enter
nop
pop
(bad)
mov
pop
loop
xchg
nop
cmps
xchg
out
aam
retf
es
dec
sub
(bad)
mov
xchg
push
push
mov
bound
(bad)
retf
and
les
push
loopne
cdq
sub
aas
push
into
pop
ss
fild
or
ss
xor
jp
push
lahf
cmp
push
stos
and
inc
fwait
mov
cmps
lahf
sub
push
in
inc
stc
push
xchg
inc
enter
cdq
lahf
sub
loop
fxch
int
aas
das
jbe
das
jo
sub
into
jb
xor
inc
cmps
sbb
push
mov
rcl
int3
push
loopne
hlt
pop
mov
cld
adc
sbb
imul
hlt
in
popf
fs
push
in
mov
shr
cmp
ja
jmp
gs
dec
and
inc
test
jb
pop
js
add
sub
and
xor
add
jb
cs
imul
movs
retf
jno
(bad)
inc
adc
sub
xor
fnstenv
sub
cmp
and
mov
test
sub
add
outs
sar
mov
mov
lock
mov
dec
cmp
or
fwait
inc
jne
mov
pop
xchg
dec
and
lods
ja
push
std
adc
mov
nop
ins
push
mov
aad
loope
inc
out
dec
jnp
sub
inc
dec
push
inc
out
sbb
(bad)
ins
das
jle
(bad)
cmp
pushf
out
loope
mov
jg
test
(bad)
out
scas
rol
pop
inc
cmp
jl
pop
sub
fcmovb
sbb
push
dec
xchg
lods
xor
call
(bad)
cs
cmp
stos
out
or
mov
adc
add
gs
inc
ss
loop
cmp
lahf
xchg
lods
adc
in
jno
pushf
aam
sub
ss
mov
repnz
fwait
pusha
mov
bound
xchg
shl
ins
icebp
jnp
div
loop
mov
jne
cmp
mov
cmp
ret
mov
cmp
xor
inc
cmps
ds
or
adc
mov
pop
jl
mov
jo
cli
xor
cmp
popf
sub
push
hlt
push
and
add
pop
out
mov
lock
scas
mov
and
xor
mov
iret
sbb
pusha
fistp
sub
and
push
mov
mov
arpl
bound
mov
pop
(bad)
out
test
iret
adc
adc
(bad)
mov
sbb
jne
into
fisttp
in
cmc
cdq
ja
cmp
repnz
clc
fcomp
in
imul
adc
in
sub
add
and
inc
jbe
push
mov
adc
mov
popf
retf
xchg
movs
cmps
mov
fidiv
mov
xchg
mov
xchg
ror
loope
xchg
imul
addr16
lds
adc
cmc
or
pop
mov
cmp
mov
push
scas
mov
nop
dec
xchg
dec
jp
xor
fdiv
xchg
popa
retf
ja
pop
scas
clc
in
leave
or
lds
add
shr
ss
jo
das
or
push
jo
jbe
call
push
xor
fst
xor
cmp
adc
ja
fs
loope
mov
je
int3
mov
in
ins
dec
mov
sbb
add
jp
(bad)
jae
lods
ret
cmp
dec
xlat
cmp
in
jne
lods
rol
addr16
fbstp
jb
sbb
cld
fnstenv
pop
in
jp
test
imul
pop
or
leave
popa
adc
mov
sbb
push
(bad)
popf
pop
pop
jl
(bad)
lahf
sub
or
enter
xor
pop
mov
lock
lock
push
stos
fcmovbe
mov
bound
leave
retf
(bad)
jae
dec
clc
in
dec
mov
xlat
neg
mov
repz
sbb
sar
and
rcr
xor
fdiv
inc
or
push
ror
dec
imul
cmp
xor
ins
repnz
mov
sub
mov
inc
sub
dec
push
xchg
sbb
icebp
dec
sbb
fwait
jle
xchg
inc
xchg
lods
inc
fisttp
imul
scas
dec
neg
mov
es
and
test
dec
lods
lods
test
cmc
mov
mov
(bad)
out
mov
dec
ret
push
lock
mov
mov
popf
and
mov
(bad)
pop
mov
inc
push
(bad)
xor
cmp
test
xor
inc
enter
xor
les
push
(bad)
jno
mov
xor
lods
dec
retf
pushf
sbb
xor
cmp
mov
inc
dec
(bad)
mov
and
jge
push
mov
push
jge
lock
jae
mov
imul
and
inc
pop
bound
les
mov
test
sub
lods
push
sub
scas
into
ror
int3
bound
fstp
or
push
mov
mov
adc
frstor
push
fs
pop
test
fimul
fs
lea
je
or
ret
dec
pusha
pop
fwait
mov
(bad)
and
or
xor
mov
movs
(bad)
push
mov
int
push
lahf
movs
retf
(bad)
retf
mov
ror
jno
daa
cld
mov
push
stc
in
xor
ss
sub
test
movs
bound
enter
jno
imul
jl
jp
adc
or
shr
retf
ret
repz
inc
popa
out
adc
adc
or
add
test
enter
push
mov
add
or
jo
in
fwait
pop
arpl
xor
or
mov
out
push
xor
and
loope
jmp
(bad)
pop
xchg
and
outs
psraw
add
push
sub
mov
mov
cmp
loop
es
adc
mov
dec
je
(bad)
push
nop
out
je
pusha
scas
inc
loopne
ds
stos
mov
mov
cli
jmp
push
test
adc
test
sar
xchg
imul
mov
xchg
fst
sbb
xor
out
sub
out
push
call
daa
js
mov
xchg
push
pop
and
push
fcomp
pop
push
popa
sbb
dec
cmp
adc
popa
xchg
les
out
pushf
push
and
jp
push
sbb
loope
xor
jo
(bad)
leave
add
(bad)
imul
and
cmp
mov
cmp
out
dec
push
mov
cmp
cmp
cmp
jmp
cwde
jge
and
push
imul
jmp
adc
and
fcom
dec
and
mov
movs
xchg
dec
xor
mov
fidiv
cwde
jmp
neg
sub
(bad)
outs
jle
sub
fwait
and
sub
(bad)
retf
mov
sub
out
jo
adc
out
lds
imul
das
iret
dec
pop
pop
cmc
mov
pop
jle
sti
mov
inc
mov
xor
fxtract
loop
xor
(bad)
sar
retf
add
fcom
jle
xor
add
fldlg2
shr
mov
cs
outs
mov
dec
fist
mov
inc
aad
ja
gs
and
fldenv
repnz
xchg
jo
pop
sahf
dec
aad
ds
lock
mov
(bad)
gs
imul
inc
push
popf
add
daa
pop
pop
push
jno
mov
push
xchg
jb
mov
and
cmp
mov
lock
xchg
arpl
mov
stos
cmp
lods
sbb
mov
push
xchg
jb
mov
cmp
push
pop
in
lods
mov
xlat
jnp
mov
retf
shr
mov
call
adc
jo
mov
mov
mov
scas
and
pop
pop
loop
xchg
daa
xor
xchg
ja
rcr
mov
rcr
cdq
push
fild
mov
in
xor
fwait
push
xchg
cmp
inc
imul
arpl
dec
imul
pop
cmp
push
xor
fs
ret
mov
out
mov
lahf
movups
popf
xchg
fild
pop
sub
adc
cmp
imul
fldcw
iret
jle
add
mov
popf
sbb
mov
jl
out
in
adc
lods
push
sub
pop
xlat
je
js
push
add
fimul
dec
sar
push
fs
lea
rol
les
adc
push
fnstcw
arpl
ss
lea
jnp
xchg
cmp
leave
cdq
pop
std
fist
test
jmp
loop
cmp
xchg
push
(bad)
pop
xchg
pop
outs
jo
int3
xor
pop
push
push
fld
gs
ret
mov
cmp
add
pushf
push
mov
gs
mov
(bad)
idiv
not
mov
jne
call
mov
jmp
out
mov
out
jmp
pop
and
call
mov
clc
pop
and
in
movs
add
pop
xchg
jne
ja
xlat
jno
cmc
mov
loop
sti
popa
cli
mov
rcr
jbe
out
aad
fcom
adc
push
fcmovnb
lods
inc
and
push
mov
cs
mov
push
in
jg
in
(bad)
cmp
sub
cmp
out
push
mov
jnp
inc
push
(bad)
fstp
push
mov
in
int
mov
xor
out
(bad)
das
(bad)
mov
das
retf
mov
ficom
add
retf
pop
mov
aaa
in
push
lea
data16
imul
jns
aad
lock
push
add
rcl
out
arpl
xlat
mov
(bad)
dec
xor
mov
retf
(bad)
movs
(bad)
fisub
mov
not
mov
fmul
jno
icebp
ins
adc
imul
mov
sar
push
gs
enter
icebp
jne
outs
addr16
fadd
cmps
inc
fstp
int
mov
and
cmp
mov
adc
js
psubusw
test
fnstcw
inc
rcr
adc
adc
pop
adc
mov
inc
(bad)
int
outs
sbb
out
sbb
(bad)
and
fdivr
mov
lods
gs
or
(bad)
xor
rcr
aad
pop
lea
lds
pop
mov
xchg
xor
mov
jecxz
adc
dec
pop
(bad)
dec
fcmovbe
jns
(bad)
inc
(bad)
mov
dec
pop
or
bound
mov
push
cmps
pop
aaa
dec
inc
pop
mov
sbb
adc
out
(bad)
sub
mov
(bad)
xor
leave
push
mov
jnp
sbb
cmc
sbb
mov
shl
push
ins
cli
cmp
mov
mov
in
sbb
dec
add
hlt
loope
inc
mov
je
fnstenv
inc
cmps
popa
dec
imul
movs
push
inc
xor
clc
inc
fadd
fisttp
retf
mov
loop
cwde
rcr
cmp
and
mov
loopne
(bad)
mov
cmp
leave
(bad)
push
shl
ins
sbb
or
sar
jge
test
jl
inc
jmp
imul
mov
ja
out
inc
ret
sbb
addr16
sbb
push
out
cmp
imul
mov
add
dec
pop
or
sbb
sbb
fwait
jae
pop
mov
ins
jnp
mov
pushf
jge
adc
and
sub
movs
mov
or
fistp
leave
movs
cwde
leave
pop
mov
sub
inc
push
in
fcom
out
add
mov
das
shr
mov
lock
sub
fs
inc
(bad)
jns
mov
add
mov
out
xchg
fisubr
jnp
repnz
inc
enterw
iret
dec
jb
and
loope
ret
popf
(bad)
push
cdq
mov
push
leave
adc
mov
cmc
mov
(bad)
sub
mov
imul
lahf
lds
fistp
or
test
js
es
jno
ficomp
or
stos
xchg
inc
lock
pop
cmp
imul
scas
jge
dec
push
jle
jmp
cdq
or
mov
mov
shl
push
inc
push
loope
push
lahf
push
call
int3
ds
mov
sar
jg
or
pushf
sub
pushf
cdq
test
(bad)
ins
aam
jnp
(bad)
clc
int3
mov
xor
jno
and
or
ret
(bad)
mov
cmps
xchg
pop
push
sub
push
xchg
cmp
bound
jns
dec
mov
bound
mov
sub
fld
or
add
sub
xchg
jmp
stc
or
adc
iret
xchg
dec
jl
pop
cmp
inc
fdivr
jae
pop
pushf
loope
xor
popa
cmp
scas
(bad)
call
mov
xor
ins
ja
add
fnsave
not
sub
mov
js
xchg
cmc
cmp
mov
xchg
outs
(bad)
push
inc
lds
or
xchg
sub
(bad)
icebp
repz
cmp
nop
nop
inc
and
std
in
cmp
cdq
adc
loope
sar
ss
mov
mov
push
sbb
sahf
pop
stos
xchg
dec
outs
xor
pop
fisub
push
pop
out
mov
cmp
jnp
cmps
mov
jae
(bad)
mov
(bad)
loop
ret
push
sub
pop
pop
lahf
popa
or
in
jbe
out
inc
mov
cmps
enter
inc
pop
sbb
inc
lods
inc
lea
das
arpl
mov
cmp
lods
ins
fcmovu
cmc
xchg
xor
jbe
shr
pop
mov
jmp
out
xor
cmp
pop
xor
sbb
inc
out
loop
pop
sub
add
sbb
and
mov
(bad)
fs
cmp
jo
psrld
(bad)
xchg
sbb
int3
push
dec
sub
(bad)
adc
fnstsw
or
and
out
loop
aam
sub
mov
rcr
(bad)
fisttp
int
stos
sub
pushf
pop
push
icebp
dec
mov
call
rep
sbb
out
or
mov
shl
and
retf
jecxz
fsub
ins
cmp
imul
(bad)
es
mov
sahf
or
(bad)
cmp
jle
xchg
cmps
xchg
xchg
imul
rol
sbb
mov
xchg
jmp
call
lds
xchg
fs
mov
scas
mov
jno
mov
mov
inc
(bad)
fist
dec
pop
mov
xor
push
lock
mov
dec
push
arpl
arpl
mov
js
jmp
scas
cmp
pop
lea
icebp
adc
xchg
xor
in
xor
push
dec
repnz
rol
fs
xor
loopne
stc
ret
sub
add
mov
push
lds
aas
aam
test
push
inc
neg
and
fcom
jmp
jecxz
aad
mov
jg
push
xlat
push
out
cmp
mov
pop
xor
xlat
xchg
adc
pop
adc
pop
mov
bound
sbb
xor
scas
inc
iret
xlat
outs
addr16
retf
jns
std
mov
mov
(bad)
xchg
adc
dec
push
sbb
mov
ds
inc
push
ror
call
sub
cmp
in
or
fwait
sub
cmp
jbe
sbb
dec
loop
push
bound
out
lock
popa
mov
ins
cmp
ror
mov
out
repz
imul
dec
mov
aaa
xor
push
pop
mov
sbb
and
stc
mov
into
(bad)
cmp
cmps
out
out
int
mov
mov
and
int3
mov
sub
test
fs
dec
fst
in
addr16
data16
(bad)
loope
mov
jbe
ins
fmul
loopne
shr
push
jg
mov
xchg
mov
mov
popa
popa
mov
jb
daa
std
lea
loopne
jnp
pop
mov
std
rcr
fwait
sti
mov
add
hlt
rcr
mov
add
ds
in
test
aad
stc
jno
inc
(bad)
daa
cmps
clc
xchg
in
dec
push
jne
xor
xor
lds
mov
lock
jb
lods
inc
pop
jecxz
aaa
or
fs
ins
into
mov
mov
push
dec
arpl
aad
arpl
cmp
cmp
inc
dec
jb
outs
out
adc
(bad)
(bad)
(bad)
dec
iret
pop
dec
enter
xchg
cmp
xchg
rcr
sub
es
pop
inc
sar
xchg
mov
cmc
jg
retf
cmp
ss
or
mov
test
fsubrp
scas
test
mov
jns
mov
jmp
pop
js
sti
pop
mov
jmp
mov
fstp
ins
ror
dec
out
out
jp
push
cmp
outs
inc
cmp
lods
imul
(bad)
sahf
xlat
sar
and
push
mov
in
sahf
fwait
inc
enter
or
sbb
bnd
add
mov
mov
and
add
(bad)
fisttp
ret
mov
add
repz
xor
sbb
jle
repz
and
mov
dec
popf
dec
cmp
jmp
fwait
dec
call
repnz
stos
(bad)
xlat
mov
or
cld
xchg
mov
enter
mov
aam
mov
dec
push
xchg
xlat
clc
adc
cmp
lock
popa
cmp
cs
pop
retf
clc
pop
xor
aaa
rcr
pop
add
jo
jno
inc
js
xor
xchg
loop
pop
xor
test
aas
int3
push
mov
add
mov
add
int
loopne
fcomp
and
cdq
les
cmp
loop
es
data16
arpl
daa
fs
retf
out
dec
and
pop
int
shl
xchg
into
out
add
dec
cld
outs
xchg
or
pushf
iret
(bad)
sub
adc
add
je
scas
pop
xchg
int
push
mov
mov
xchg
aam
fsub
pop
adc
scas
sbb
ja
cmp
mov
xchg
fs
fmul
sub
mov
inc
mov
out
dec
jmp
push
jne
ja
xlat
jne
sbb
mov
xor
mov
jg
fadd
lds
sub
pop
aam
mov
inc
pusha
and
inc
and
sub
mov
dec
out
repz
call
ret
and
and
shl
icebp
addr16
cmps
retf
mov
out
pop
xchg
dec
mov
ret
xchg
(bad)
pushf
sub
sti
jns
scas
inc
ins
mov
scas
mov
test
(bad)
lea
lock
mov
jp
or
jno
or
fdiv
adc
mov
adc
jo
movs
fbld
jg
mov
xchg
jne
dec
mov
cmp
test
jne
inc
push
jecxz
adc
popa
test
icebp
outs
icebp
ja
scas
loop
or
js
add
popa
ret
retf
clc
ret
xchg
dec
(bad)
pushf
aaa
or
jge
jo
jg
aas
data16
add
ja
retf
imul
push
push
push
jb
mov
mov
cmp
mov
fsub
sub
ins
pop
lods
sub
mov
ins
or
xchg
pop
sub
push
ja
sub
std
(bad)
sub
ja
call
retf
push
push
inc
cld
ins
jnp
std
add
ja
jne
cmp
mov
imul
scas
daa
sub
pop
mov
in
leave
rcr
fidiv
mov
in
(bad)
jb
rcr
dec
not
stos
and
mov
push
sbb
add
imul
push
loopne
inc
jns
ja
lock
movs
mov
mov
cwde
mov
mov
dec
add
ficomp
and
imul
in
loopne
lahf
sub
add
scas
cmp
lods
loopne
nop
jmp
add
fucomp
pop
in
(bad)
icebp
push
push
jnp
mov
repnz
mov
jb
jmp
int
jl
outs
mov
pop
cmp
fldenv
dec
sbb
gs
iret
(bad)
sbb
outs
leave
(bad)
sbb
jno
pop
jge
aad
neg
mov
mov
ret
sbb
loop
mul
push
sub
div
fidiv
clc
int3
xchg
fdiv
rcr
mov
mov
fs
pop
jp
inc
or
or
mov
xlat
mov
stc
sub
sub
cwde
sub
mov
lahf
cmc
add
cli
call
pop
sub
cwde
push
pop
add
stos
aad
mov
(bad)
mov
push
mov
push
inc
cli
jge
sbb
lods
push
and
sahf
add
sub
das
push
jg
dec
test
xor
adc
repz
lahf
sar
icebp
cmp
mov
push
ds
dec
push
sti
movs
or
aaa
jo
push
faddp
out
pop
mov
or
outs
imul
neg
jl
sbb
scas
adc
dec
fs
jge
mov
cmps
sar
out
aad
jle
cmp
scas
sbb
outs
mov
mov
sar
scas
mov
div
sbb
cld
xchg
jno
mov
cmps
out
lods
loop
cmovae
dec
hlt
cmp
mov
cli
or
(bad)
mov
sar
push
mov
sub
(bad)
dec
mov
lods
popf
sbb
ins
cmp
dec
idiv
adc
dec
jl
cwde
pop
inc
stos
dec
jg
mov
ror
fsub
int3
sub
lods
imul
retf
sbb
xor
cmps
xchg
or
loope
scas
mov
dec
xchg
pop
or
pop
xchg
push
rcr
repnz
push
inc
clc
movs
sub
(bad)
inc
repnz
cmps
jne
pop
and
push
adc
lock
add
scas
mov
icebp
push
pop
push
stos
sub
scas
not
inc
mov
sub
pop
outs
jns
outs
push
gs
sub
and
pop
xchg
cs
inc
mov
ss
sbb
push
mov
and
gs
test
nop
dec
int3
ins
jae
cbw
xor
xchg
repz
outs
es
adc
rcr
pop
sub
mov
(bad)
js
mov
idiv
(bad)
xor
add
stos
stos
imul
jg
lods
push
test
push
adc
int
jne
loopne
jnp
xchg
leave
leave
add
lahf
mov
cmc
iret
pop
sub
and
lea
cld
cmp
outs
push
mov
dec
scas
or
sub
mov
xchg
push
ret
les
fldl2t
(bad)
pop
shr
push
mov
mov
pop
cmp
sar
loopne
jg
push
adc
xor
pop
in
pop
js
ja
not
scas
jb
rcr
cmp
sbb
adc
jle
xchg
jp
mov
ja
jne
cmp
jmp
bound
sbb
sub
push
repz
push
dec
mov
mov
push
mov
or
xlat
push
leave
jecxz
popf
jmp
push
xor
xlat
mov
xchg
mov
aas
and
mov
jg
xchg
pop
pop
ret
xchg
push
sub
jg
lock
cld
adc
inc
xchg
mov
out
xchg
(bad)
xor
js
mov
imul
cmp
leave
mov
push
call
inc
push
(bad)
fild
jno
xchg
xchg
cmps
ret
jno
cmps
pop
push
cmp
jno
push
mov
lds
js
imul
ret
sbb
pop
xor
cmps
jl
fiadd
clc
in
ins
jae
scas
out
(bad)
lahf
fbld
js
xchg
lock
mov
pop
dec
cld
adc
repz
(bad)
and
stos
mov
fs
jp
mov
out
push
adc
fwait
lock
div
fimul
in
or
fwait
sbb
neg
push
data16
mov
mov
aad
cli
jns
mov
sti
or
push
les
cli
sbb
int3
lods
inc
sub
arpl
outs
test
cmp
test
movs
cwde
es
inc
loopne
hlt
(bad)
xchg
push
mov
pop
out
loopne
inc
popa
pop
loopne
gs
test
outs
das
jne
sbb
(bad)
cdq
mov
(bad)
outs
shr
dec
fs
dec
(bad)
scas
xchg
jnp
mov
or
xor
out
or
mov
scas
mov
js
mov
inc
cmp
cmc
fcom
sar
push
mov
jge
shl
pop
ret
mov
dec
sahf
mov
sub
outs
int3
mov
xor
ss
dec
xchg
mov
repz
jle
aaa
ja
pop
lock
in
ins
out
js
popa
mov
mov
loop
xchg
xlat
jae
stos
and
sub
inc
sub
adc
(bad)
repnz
xchg
jae
sub
add
and
test
lea
and
iret
sbb
leave
mov
fnstsw
mov
adc
and
(bad)
fist
cmp
sbb
sub
jnp
in
xlat
hlt
in
add
aas
push
pop
call
enter
mov
push
and
scas
pop
mov
cld
iret
ss
push
sbb
push
lahf
jmp
cmp
aam
sub
sub
lock
stos
push
pop
mov
addr16
addr16
or
and
mov
xchg
mov
or
mov
pop
(bad)
mov
aaa
xchg
stos
aam
push
cmp
pop
loopne
fwait
hlt
sbb
jo
adc
sbb
mov
add
sti
add
lods
jnp
aaa
jl
dec
dec
fisttp
mov
push
shr
sub
test
(bad)
mov
(bad)
jmp
iret
stos
repnz
adc
ins
(bad)
pop
ds
mov
mov
outs
push
out
ss
or
lock
(bad)
jl
arpl
jno
jb
mov
mov
push
je
iret
(bad)
repnz
push
dec
adc
lods
retf
mov
out
and
cmps
loop
test
pop
push
xor
aas
idiv
(bad)
test
push
sub
call
push
fwait
mov
push
lahf
and
or
sbb
push
arpl
test
jns
mov
mov
shr
(bad)
xchg
jle
mov
cmps
pop
mov
pop
out
inc
ins
jnp
loop
test
out
sbb
scas
scas
jns
pop
cmc
enter
pop
mov
adc
vpxor
jmp
xchg
push
in
sub
addr16
fs
das
(bad)
and
and
inc
ds
mov
pop
mov
call
int3
mov
xor
jne
pop
mov
xchg
cmp
jns
call
nop
repnz
xchg
dec
inc
pop
cli
push
mov
aaa
fcom
mov
mov
sahf
frstor
lds
fsub
sbb
mov
rcr
fisubr
loope
out
in
mov
mov
lahf
int3
mov
push
cmps
jae
xchg
hlt
icebp
pop
mov
add
mov
rcl
xchg
fcomp
lods
cmp
fnstcw
stc
pushf
ret
push
adc
jp
jmp
fstp
inc
xor
lods
dec
mov
pop
js
fisubr
xchg
leave
sub
dec
out
dec
adc
clc
lods
pop
cdq
(bad)
mov
dec
in
sub
jbe
imul
call
dec
adc
mov
jnp
aas
retf
pop
dec
cld
push
dec
mov
dec
pop
and
mov
adc
add
push
test
rol
ins
sub
dec
ficom
mov
arpl
sbb
cs
fmul
add
lock
adc
stos
out
sub
call
ret
jo
push
imul
xchg
inc
and
cdq
outs
inc
in
frstor
lods
out
pop
fidiv
jp
dec
out
mov
sti
sti
mov
int
mov
jmp
pop
mov
xchg
les
mov
lds
push
xchg
popa
xor
push
pop
test
movs
sub
xchg
loope
push
movs
sti
inc
mov
lods
int3
mov
mov
sbb
scas
out
push
pop
push
mov
sbb
push
mov
loope
jmp
sub
xchg
adc
mov
ins
fsub
ins
(bad)
pusha
ficom
adc
sbb
add
rep
push
leave
ds
jmp
sar
arpl
xchg
mov
and
adc
jb
or
sbb
inc
in
rcl
mov
add
jmp
xor
sbb
cmp
jns
jle
sub
mov
xor
pop
in
cmp
(bad)
aad
mov
mov
shl
scas
push
mov
fiadd
dec
ds
pop
adc
push
cmp
pop
mov
adc
add
push
test
mov
xchg
stos
aam
dec
aam
dec
mov
add
inc
aad
call
scas
dec
jno
pop
icebp
arpl
retf
shl
imul
pop
mov
jnp
ins
mov
fwait
jae
out
pop
push
(bad)
sti
out
aad
je
jae
loopne
sub
cmp
and
shl
inc
cs
in
sahf
mov
xor
mov
mov
mov
jl
cmp
jno
mov
ss
mov
jne
mov
mov
int3
pop
fisub
lahf
(bad)
cs
xchg
iret
adc
xchg
jmp
pushf
arpl
add
in
(bad)
(bad)
pop
in
aaa
ror
(bad)
ins
cdq
jg
imul
mov
rcl
jge
std
jnp
xor
outs
dec
cdq
scas
call
push
cmps
adc
push
mov
adc
stos
xchg
cmp
scas
fidiv
sub
sbb
ss
inc
sub
push
(bad)
dec
sub
cs
xchg
loop
xchg
mov
not
nop
dec
lods
ss
xor
or
inc
fdiv
int3
(bad)
push
mov
fs
out
adc
xor
mov
mov
xchg
mov
dec
push
sub
inc
and
sahf
xor
lahf
adc
add
aas
cmp
inc
popa
or
xchg
aas
fsubr
push
fbstp
mov
pop
std
stos
mov
stos
mul
gs
jbe
pop
scas
adc
jne
add
lods
mov
pop
sbb
xor
stc
js
outs
sub
jp
ins
mov
ins
mov
fsubr
mov
fcomip
mov
fisttp
in
jb
mov
cs
stos
xchg
sub
dec
fwait
adc
mov
dec
pop
popa
popf
xor
dec
xchg
xchg
mov
je
mov
dec
cmps
cwde
pop
ja
mov
pop
(bad)
push
mov
adc
mov
cmp
mov
add
xor
out
mov
icebp
mov
addr16
scas
sbb
bound
cmp
mov
in
aaa
xor
dec
leave
dec
inc
ja
xchg
jae
pop
ja
pop
push
repz
shl
fs
out
dec
pop
or
sbb
sar
cwde
sub
pop
mov
or
fldenv
inc
fsubr
add
xor
and
sub
les
mov
hlt
int
js
fwait
iret
mov
outs
push
mov
stc
stos
js
pop
scas
adc
aad
cwde
fcom
jecxz
loop
xchg
bound
lock
cs
inc
pop
or
xchg
sub
imul
sub
div
xor
call
fs
pop
imul
jns
xchg
movs
mov
mov
mov
pop
nop
and
neg
stos
mov
fs
dec
jae
nop
add
push
in
mov
(bad)
xor
adc
mov
stos
mov
push
xor
mov
adc
and
mov
mov
retf
(bad)
fild
into
lea
jo
imul
cmp
retf
mov
xchg
mov
(bad)
and
cmp
popf
xchg
cwde
(bad)
add
push
test
(bad)
in
cmp
pop
cmp
arpl
and
repnz
fist
movs
pop
mov
pop
outs
dec
cmc
jno
inc
retf
push
dec
fcomp
fmul
jmp
inc
mov
pop
xchg
rcr
mov
call
outs
push
xchg
xor
int3
lods
frstor
into
dec
call
dec
xor
mov
pop
leave
pop
mov
arpl
scas
adc
mov
xchg
mov
and
push
jge
les
test
out
lods
inc
repz
daa
pop
mov
or
ins
dec
leave
pop
imul
mov
sub
adc
jle
mov
adc
mov
mov
mov
test
sub
arpl
(bad)
sub
mov
xor
mov
push
dec
xor
push
mov
mov
test
sar
ins
into
sub
add
pop
(bad)
xchg
xchg
add
dec
xchg
test
fs
retf
pop
inc
int3
lea
dec
mov
sbb
jo
cld
in
lods
mov
fisttp
xchg
push
ret
out
out
mov
loope
cmp
mul
cmp
cwde
imul
xchg
(bad)
sub
jnp
mov
add
pop
ret
popa
mov
sahf
push
add
icebp
cmp
inc
mov
cmp
out
jnp
adc
mov
out
xor
movs
data16
imul
ror
rol
jno
mov
push
push
dec
in
out
int
call
inc
(bad)
shr
or
fist
daa
fs
arpl
sub
and
out
mov
call
imul
and
into
sahf
popa
sbb
xor
pop
push
ret
xchg
push
ret
(bad)
fdiv
mov
sub
mov
movs
xor
pop
jne
dec
out
ja
sub
lea
imul
bound
mov
out
sbb
sub
cmp
mov
mov
push
jbe
push
fcom
js
aad
fucomp
and
fucomp
xor
fs
(bad)
ror
movs
pop
jae
pop
inc
data16
mov
and
lods
xchg
mov
ss
sbb
dec
sti
mov
cmp
push
cmp
or
call
neg
fs
sub
out
(bad)
pop
jge
lods
js
pop
jns
xchg
in
push
push
sahf
push
outs
mov
test
or
dec
mov
xchg
in
stos
mov
enter
jne
jne
mov
(bad)
rcr
adc
sbb
in
dec
cmp
mov
imul
xchg
xor
xchg
sub
push
ficom
das
shl
pusha
inc
retf
mov
arpl
push
xchg
loopne
sub
movs
pusha
push
sub
repz
mov
cli
xor
cmp
cmp
int3
jle
sub
mov
in
push
in
xor
lods
imul
call
sub
arpl
mov
aad
inc
loope
inc
(bad)
lds
jb
jne
retf
sbb
ret
mov
repnz
pop
mov
jae
mov
int
out
and
call
stc
fadd
pop
mov
mov
fs
jae
mov
mov
jo
jns
pop
(bad)
lods
out
popa
out
inc
cmp
mov
ss
sahf
cmp
mov
mov
lds
fprem
xchg
stos
xchg
stc
mov
adc
add
push
test
xchg
fs
lds
mov
(bad)
lds
sub
xchg
pop
sahf
mov
push
mov
fwait
int3
xchg
lea
pop
jne
add
mov
jns
cdq
mov
rcr
pop
add
mov
shl
dec
loope
jb
ja
and
mov
mov
into
sti
repz
out
xor
sbb
mov
test
cmps
push
inc
outs
cs
mov
adc
ins
hlt
stos
xor
sub
sub
nop
mov
out
ins
mov
pop
ficom
in
push
sbb
mov
or
scas
fld
jb
inc
sar
jb
push
pushf
std
cmp
jnp
sbb
push
or
mov
add
mov
cs
icebp
pop
adc
pop
mov
push
inc
or
add
mov
shl
xchg
fimul
mov
sub
ja
cs
iret
fstp
xchg
add
jmp
and
sub
mov
adc
pushw
test
jmp
(bad)
imul
mov
out
xor
loop
push
ret
addr16
cmp
jne
mov
ret
ret
pop
stos
retf
into
sbb
imul
ror
or
mov
jl
lds
outs
scas
je
repnz
inc
xchg
or
pop
mov
popa
pop
leave
mov
les
inc
jmp
pop
sbb
shr
inc
mov
cmp
push
push
(bad)
xchg
nop
xchg
enter
push
inc
push
xchg
in
jmp
retf
mov
mov
je
mov
sub
sub
mov
ficom
ret
jg
or
fmul
movs
call
stos
push
sub
sbb
imul
ja
inc
int
mov
inc
add
add
add
add
or
add
pop
add
add
add
adc
adc
push
add
inc
push
xchg
mov
and
xor
popa
jno
mov
bound
mov
xor
adc
mov
inc
push
jae
inc
xchg
ret
sar
fiadd
or
add
or
add
out
nop
cmp
mov
cmc
add
push
pop
in
ja
push
out
out
div
sub
imul
cmp
fsub
inc
das
xor
ins
into
sbb
ret
push
mov
mov
xchg
mov
lds
cld
in
mov
enter
xchg
stc
adc
stc
and
push
mov
shr
int
fcomp
(bad)
call
mov
movs
lods
retf
adc
jecxz
repz
adc
fst
mov
mov
popf
loope
sar
fisubr
jbe
jge
lea
sub
fstp
test
pop
stc
sub
push
test
ffree
shl
cwde
and
pop
test
add
call
gs
adc
ja
push
mov
cld
sub
xor
cmp
(bad)
dec
pop
adc
mov
fs
adc
ja
add
lods
cmp
(bad)
icebp
lahf
call
dec
inc
mov
iret
jb
xor
add
push
call
or
loope
dec
ins
jmp
push
and
push
mov
pop
pop
pmaxsw
pusha
push
push
dec
inc
cld
(bad)
mov
out
int
ja
test
push
sti
push
dec
mov
cdq
imul
outs
rcr
pop
shl
jnp
dec
cmp
rol
jle
inc
loope
aas
mov
sub
aad
mov
mov
data16
and
add
cdq
mov
sbb
fistp
aas
(bad)
sub
in
ds
adc
ds
sahf
add
cdq
adc
push
fisubr
xor
mov
movs
(bad)
ins
push
or
stc
sub
mov
aad
loop
aaa
daa
bnd
inc
pop
pop
add
cmps
push
and
adc
loopne
syscall
adc
push
fcomi
push
clc
iret
int
cld
outs
stc
cmps
fdiv
cmp
dec
aam
adc
icebp
dec
(bad)
fs
mov
daa
test
stos
sub
pop
dec
push
jg
mov
test
inc
outs
imul
stos
(bad)
(bad)
leave
jne
icebp
mov
jmp
cmp
cmps
pop
mov
sub
push
fstp
and
pop
xor
into
jmp
cmp
and
fs
add
lock
lods
mov
push
add
sbb
imul
xchg
loop
mov
push
xchg
add
fsub
loop
cs
movs
lock
call
movs
popa
std
into
(bad)
pop
mov
xchg
outs
push
and
mov
rcr
sub
mov
mov
push
or
fmul
into
mov
rcr
imul
cmp
retf
xchg
call
jne
xchg
into
int3
push
shl
pop
jle
test
dec
push
mov
mov
mov
repnz
popa
aas
jb
bound
push
jae
cmp
jae
mov
int
mov
push
xchg
aad
ins
add
cmps
pop
add
mov
aas
lods
ins
cld
inc
jp
bound
scas
add
add
sti
popa
loop
jno
or
push
dec
sahf
mov
sub
adc
dec
nop
je
lock
fst
add
jp
daa
cwde
push
xchg
(bad)
(bad)
cmc
loope
inc
sub
xchg
xor
mov
sub
in
add
ror
or
cmps
cmps
clc
cmps
js
mov
nop
mov
stc
data16
pop
mov
stos
jno
in
mov
rcr
aad
push
inc
repnz
jle
imul
js
leave
or
(bad)
repz
mov
test
push
mov
das
cmp
fwait
or
dec
mov
sbb
cmps
not
popf
pop
mov
test
jbe
add
js
sub
jg
cmp
div
in
int
adc
inc
icebp
ror
adc
push
sahf
shr
push
cld
(bad)
mov
loop
in
scas
jecxz
pop
aad
mov
jo
jmp
pop
push
add
push
jl
pop
retf
(bad)
add
inc
xchg
icebp
push
daa
les
pop
pop
inc
sbb
les
cld
and
push
lods
and
inc
fs
test
test
inc
(bad)
adc
jge
inc
test
imul
ins
js
iret
iret
call
int
iret
imul
in
pop
lods
cmp
fadd
pop
adc
scas
push
in
lea
mov
pmullw
lahf
bound
and
call
mov
add
call
daa
pop
jbe
or
add
adc
mov
xchg
aaa
enter
jnp
pop
sub
sar
mov
popf
mov
sbb
push
inc
repz
sahf
and
fisub
(bad)
stos
sub
mov
(bad)
sbb
sbb
cmp
scas
lahf
xor
and
imul
push
daa
aad
aad
dec
xor
aad
arpl
push
sbb
push
mov
aaa
nop
mov
sbb
pushf
and
pop
ins
leave
(bad)
test
lods
stos
or
das
or
leave
aas
test
xchg
sub
xor
xor
mov
imul
jo
(bad)
dec
pop
xchg
loopne
xchg
out
dec
and
mov
xor
jle
aam
pop
ins
sbb
mov
dec
sbb
(bad)
in
inc
aad
popa
into
popa
into
jmp
mov
div
cmp
stos
push
push
or
in
(bad)
(bad)
leave
jge
(bad)
jge
ss
outs
stc
sub
stc
sub
setb
lock
sub
setb
rol
mov
add
dec
sub
stc
sub
lock
sub
into
in
mov
popa
into
popa
into
jmp
push
ja
out
out
out
mov
mov
fwait
add
loop
push
jge
(bad)
jge
ss
cwde
fistp
mov
cmps
shr
test
mov
ins
mov
mov
xchg
clc
xchg
mov
inc
dec
mov
dec
adc
sahf
sub
fwait
adc
or
into
jb
mov
jnp
imul
push
ja
enter
jg
xchg
aaa
stos
pop
mov
sub
stos
das
stos
clc
cwde
data16
data16
cmp
cli
mov
popf
retf
popf
sar
jg
adc
cmps
jge
call
push
add
xchg
jo
xchg
sahf
arpl
sub
ret
pushf
ret
popf
xlat
repnz
mov
arpl
leave
push
stc
mov
sub
stos
das
stos
clc
fadd
jnp
dec
add
mov
lds
mov
rcr
push
fcomp
sbb
mov
push
hlt
arpl
sar
daa
adc
xor
cmp
(bad)
ja
stc
repz
jae
jae
inc
aam
stc
lods
cmp
bound
inc
mov
push
mov
push
pop
push
icebp
mov
jmp
add
ret
xchg
dec
je
mov
pop
add
mov
test
data16
jecxz
popf
cmps
popa
mov
xchg
hlt
data16
push
pop
mul
push
sub
mov
in
int3
sti
int3
sub
inc
popa
jl
dec
sub
jecxz
or
cs
jbe
imul
xor
fisub
in
int3
cmp
pushf
aad
out
mov
fidivr
lods
cmp
bound
inc
mov
ja
pop
jno
test
scas
loop
cld
fadd
fstp
ret
les
adc
cmps
jo
imul
ins
sbb
jbe
push
push
inc
mov
inc
(bad)
out
inc
arpl
(bad)
in
or
outs
ds
mov
rcr
lea
sbb
sbb
adc
call
arpl
ins
xor
jecxz
lods
les
mov
xchg
pop
cmp
(bad)
es
inc
pop
loop
int
xor
fs
shl
jno
lahf
lahf
xor
fnstsw
into
sti
xor
repnz
sahf
push
(bad)
cli
out
fidiv
pop
(bad)
jmp
jmp
jb
xchg
inc
mov
push
fidiv
cmp
pop
mov
xchg
mov
dec
inc
fwait
hlt
adc
jmp
jbe
inc
pop
lock
push
sbb
adc
dec
cmp
int
inc
leave
sbb
iret
inc
ficomp
xor
fdivr
and
sahf
sub
inc
fist
xchg
lock
(bad)
idiv
(bad)
sbb
test
cmp
into
icebp
int
iret
arpl
leave
push
lods
push
push
jns
into
cmc
xchg
jmp
cdq
mov
jmp
aad
pop
sbb
jne
adc
sbb
add
push
dec
(bad)
shl
hlt
mov
jne
inc
imul
inc
cmp
push
mov
mov
xchg
cdq
test
or
add
ss
mov
call
jmp
adc
or
sbb
arpl
xor
test
add
xchg
dec
push
inc
(bad)
xor
or
lods
sbb
addr16
popa
into
push
ja
enter
(bad)
and
popa
iret
arpl
leave
pop
push
int
mov
pop
out
cmp
sbb
stos
clc
call
sahf
and
add
pushf
in
mov
xchg
pop
lods
and
sahf
out
setb
push
aaa
mov
out
out
dec
cmp
cmp
cmp
iret
loop
(bad)
sbb
xor
scas
call
cmp
sbb
stos
clc
call
mov
mov
cld
stc
lods
cmp
push
into
sti
dec
and
sti
xor
xchg
and
dec
xor
int
push
sbb
stos
das
stos
clc
add
mov
aas
imul
push
repz
pop
push
adc
js
or
cmp
test
sahf
adc
js
jg
jg
out
out
mov
mov
sub
push
daa
aad
aad
inc
jmp
fnstenv
(bad)
cmc
mov
fnsave
push
bound
ficom
jl
inc
mov
adc
js
adc
cmc
add
lahf
adc
dec
mov
out
mov
dec
mov
push
bound
cmc
adc
add
mov
add
fisub
mov
test
out
mov
add
push
jbe
scas
cmp
(bad)
ficomp
jno
(bad)
out
sahf
(bad)
cs
cmp
jne
pop
fnstenv
mov
outs
int
pop
push
pop
(bad)
cmc
mov
sub
push
dec
mov
adc
sub
push
pushf
adc
sub
push
fbstp
stos
cmp
test
fisub
mov
pminub
stc
dec
adc
popf
movs
xchg
inc
fidiv
std
stos
cmp
mov
test
loop
pop
pop
dec
stos
sub
mov
mov
cmp
mov
xor
jp
jecxz
call
jl
sub
gs
sbb
mov
mov
mov
mov
xchg
or
jle
xchg
inc
pushf
scas
cs
scas
es
(bad)
fidiv
adc
sub
mov
movs
sti
push
push
std
stos
sub
pop
add
mov
fadd
repnz
sahf
jns
imul
push
pop
push
icebp
cs
sbb
mov
ret
sbb
repz
loopne
xchg
xchg
sub
stos
sub
inc
inc
call
ficomp
jmp
sub
sub
pop
fs
scas
push
mov
ins
mov
imul
(bad)
sbb
push
iret
jecxz
jo
sahf
jns
cmp
sub
fwait
push
daa
aad
aad
dec
pusha
cmp
pusha
pop
aad
mov
add
adc
inc
adc
inc
dec
sub
inc
adc
inc
adc
rcl
push
retf
ficomp
xchg
push
adc
and
loopne
dec
mov
scas
jb
ins
mov
mov
ins
push
fstp
mov
jo
mov
mov
jmp
retf
in
mov
add
jmp
inc
out
sub
mov
sub
imul
out
mov
adc
inc
rcr
je
pop
pop
add
test
icebp
mov
(bad)
out
pop
lods
push
mov
das
stos
clc
xchg
sbb
mov
into
mov
std
stos
sub
test
fisub
aas
push
adc
xchg
mov
push
loop
xlat
jb
je
mov
xor
aam
int
xor
and
push
sahf
lods
mov
xbegin
inc
add
in
(bad)
lock
outs
inc
pop
xlat
inc
(bad)
daa
xchg
sbb
add
sub
mov
jecxz
in
adc
ret
out
adc
aad
add
xor
bound
xchg
pop
sbb
sub
imul
jmp
jne
rol
int
mov
cmp
cmp
cmp
push
jg
mov
mov
(bad)
sub
mov
(bad)
cli
mov
popa
mov
imul
sbb
sahf
imul
push
rcl
or
push
dec
aas
mov
(bad)
out
bound
or
inc
(bad)
pop
(bad)
add
addr16
ficomp
fsubp
sub
pop
push
lahf
sar
push
lea
lods
imul
inc
push
aaa
sbb
pop
dec
pop
add
loopne
test
lods
xor
dec
int3
sub
or
push
dec
inc
inc
aam
aad
pop
(bad)
enter
adc
add
inc
ins
adc
xor
inc
les
sbb
cmc
idiv
xlat
cld
aas
call
pop
out
out
add
cmps
sar
and
mov
xlat
mov
ss
stos
das
stos
clc
call
(bad)
repz
rcl
inc
int
cmps
rcl
cli
pop
outs
std
dec
loopne
aad
popf
jbe
sbb
xor
cmp
inc
pop
fsub
icebp
adc
jl
or
shl
sahf
xor
push
and
cwde
xor
xchg
mov
mov
in
mov
mov
add
xor
sbb
out
jne
ss
mov
xchg
test
loopne
mov
cmc
or
cmp
mov
adc
ds
scas
loop
js
fwait
add
mov
std
sub
mov
rcl
and
fcmovb
inc
xor
and
and
and
and
adc
pop
ret
das
int
dec
dec
dec
dec
dec
dec
dec
in
push
jge
sub
std
mov
add
mov
add
xchg
xchg
mov
dec
inc
push
popa
test
mov
call
or
popf
sub
mov
push
push
push
loop
dec
dec
dec
dec
dec
in
and
lods
out
push
ror
movs
pusha
cmp
(bad)
out
push
int
fidiv
xor
xchg
js
adc
enter
cmc
inc
cmc
jg
jmp
js
shr
sub
fld
cmp
inc
jmp
adc
enter
push
pop
and
popf
adc
leave
xchg
push
(bad)
in
pop
rcr
dec
fcmovbe
jbe
xchg
sar
inc
add
push
mov
std
stos
daa
fs
pop
sub
ins
mov
rol
xor
shl
cmp
cmp
xor
mov
stc
sub
jo
movs
sub
dec
bound
sub
mov
add
cmp
sbb
add
xchg
xchg
mov
aad
arpl
mov
xor
jae
cmp
dec
cld
cmp
cs
(bad)
test
stos
out
out
mov
sub
or
ins
sbb
push
jb
sysret
xchg
or
push
adc
out
cld
shl
mov
sahf
and
and
adc
in
cld
cmp
dec
xor
imul
add
add
jle
mov
rcl
(bad)
imul
div
fist
lods
in
test
sbb
in
imul
rcr
test
dec
inc
fs
cs
xor
movs
rcr
xchg
xchg
xchg
xchg
xchg
mov
sbb
mov
and
dec
dec
pop
sub
daa
push
mov
mov
fist
add
push
cwde
aaa
dec
imul
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
adc
loope
or
outs
cmc
jns
fwait
cmp
push
xchg
and
jmp
push
jg
mov
cmp
and
mov
mov
(bad)
adc
lods
or
cmp
dec
xor
call
gs
inc
jle
pop
inc
mov
cmc
jg
sti
arpl
fs
jae
out
push
add
les
or
xor
sbb
add
xor
ret
mov
jbe
sub
ja
xchg
xor
xor
in
pop
xor
or
xor
outs
cdq
cmp
push
int
ins
jae
or
sbb
mov
pop
add
popa
lahf
pop
pop
loop
push
cs
xchg
or
jge
aad
ror
jne
and
rcr
xchg
xor
push
dec
popf
mov
sahf
into
xor
int
push
mov
jae
in
xor
and
push
mov
sar
add
and
sub
dec
or
and
call
xor
add
sub
ja
arpl
xchg
je
add
push
cmp
and
and
data16
mov
pusha
cmp
jmp
scas
xchg
mov
stos
adc
in
mov
pop
push
out
sbb
leave
stos
repnz
pop
fdivrp
lea
inc
test
in
hlt
mov
(bad)
mov
push
enter
shl
dec
enter
xor
mov
jg
mov
mov
outs
iret
sub
xor
mov
jg
fnstcw
cwde
dec
push
and
std
dec
pop
xchg
jmp
aaa
sbb
push
jmp
fwait
push
inc
sub
push
iret
mov
ins
push
push
fidiv
and
xlat
xchg
ret
leave
jp
and
xchg
pop
sub
cmp
push
loope
xchg
neg
shr
daa
adc
push
push
push
mov
sbb
ficom
cld
dec
and
cmps
mov
pop
or
sub
adc
add
pop
sub
push
mov
jns
pop
dec
dec
cmp
or
push
xor
loope
ficom
mov
adc
dec
es
std
fwait
dec
loop
mov
inc
shl
sbb
je
adc
jne
add
add
into
xchg
imul
out
fidiv
pop
lods
inc
shl
mov
adc
cmps
enter
pop
mov
stc
or
mov
out
in
cdq
cmp
movs
fidiv
mov
add
jnp
(bad)
enter
into
int3
push
push
jne
mov
add
mov
add
xor
gs
cmc
mov
ins
repz
and
inc
pop
xor
inc
fs
jmp
popf
sbb
into
bound
pop
test
fsub
ss
mov
nop
mov
pop
pop
call
(bad)
(bad)
les
dec
jns
ds
ss
xchg
mov
in
ret
push
xchg
jne
xchg
gs
lods
popf
mov
rcr
daa
mov
cmp
fwait
cmp
je
xchg
sub
mov
sti
push
in
sbb
xchg
clc
sub
loopne
inc
hlt
into
jae
data16
mov
rcr
sar
pop
push
test
loope
ins
cmps
inc
adc
mov
or
mov
daa
dec
daa
mov
ins
jae
es
fsubr
sub
mov
sbb
cmp
arpl
dec
push
and
adc
mov
(bad)
sahf
or
leave
mov
test
cmp
fst
push
fcomip
add
ja
push
mov
cmp
addr16
ret
in
pop
popf
stos
or
pop
dec
jp
mov
mov
cmp
dec
out
mov
pop
add
and
mov
pop
add
add
sti
or
(bad)
movs
psadbw
loop
jbe
prefetch
retf
js
inc
mov
ret
pop
cmp
push
bound
inc
retf
sub
ins
sbb
xor
xchg
xor
mov
and
aad
mov
fwait
pushf
shl
int3
imul
push
aad
into
pop
dec
dec
inc
mov
and
jb
inc
add
test
cmps
cmp
mov
mov
pop
ror
cmp
imul
inc
jmp
adc
or
mov
sbb
sbb
in
std
call
jge
out
dec
or
in
or
movs
scas
aaa
adc
xor
mov
aam
nop
lods
push
inc
jbe
push
sub
(bad)
sar
ins
rcl
mov
push
movs
xlat
cmp
push
data16
xor
iret
sbb
adc
jno
jo
mov
inc
mov
cmps
int
js
outs
pop
jns
loopne
es
call
call
push
sub
sub
popf
or
sahf
xchg
mov
sbb
mov
sar
aam
add
ds
addr16
mov
jne
fwait
adc
add
out
retf
ins
ss
loopne
movs
sar
jo
push
push
adc
repnz
push
repnz
fwait
pop
int
push
add
pop
sub
or
xor
retf
sub
sub
idiv
inc
inc
retf
mov
jle
movs
(bad)
popa
scas
pop
enter
sbb
neg
pop
lea
(bad)
sub
dec
adc
lahf
jb
dec
sub
loope
dec
inc
xchg
ror
fimul
jp
mov
mov
xor
add
dec
sbb
ins
xor
mov
idiv
push
in
push
lods
popf
dec
jmp
add
lea
ins
and
sti
or
sub
mov
imul
test
ret
jmp
shr
movs
ds
adc
cmp
pop
push
inc
jns
ds
push
jb
fwait
xchg
dec
in
mov
int3
xor
cmp
sub
dec
mov
jns
add
xchg
inc
dec
add
sub
mov
sub
dec
xchg
in
adc
adc
stc
xor
imul
ja
sbb
cmp
(bad)
leave
call
ret
and
pop
mov
xlat
je
sub
cmp
mov
out
mov
or
outs
pop
dec
sub
mov
div
xor
push
(bad)
cld
push
stc
sub
sub
inc
cmp
sahf
gs
push
dec
xchg
int3
jmp
mov
aad
and
fild
cmp
jo
repz
fcomp
movs
sub
cmc
cld
mov
push
add
movs
and
jmp
cmp
pop
xor
sub
mov
mov
lock
fs
stos
mov
lods
pushf
dec
push
dec
leave
call
push
sub
outs
mov
push
pop
fwait
popa
int
dec
les
or
cmp
test
xor
add
add
call
dec
icebp
aas
xor
xchg
jns
lods
pop
dec
xchg
mov
adc
xchg
inc
push
addr16
xchg
xchg
inc
clc
add
mov
mov
or
aas
test
pop
ret
or
or
test
lods
mov
ret
jnp
mov
dec
imul
ss
aad
mov
pop
dec
add
sub
in
add
or
adc
or
lock
sub
mov
add
jl
ins
mov
ret
in
jae
ret
xchg
out
inc
inc
rcr
ins
and
or
inc
pop
enter
xchg
and
ins
mov
pop
rcr
dec
or
sub
and
inc
jns
retf
ss
shr
jo
bound
nop
imul
loope
cdq
mov
test
fwait
xor
stos
push
das
fidivr
xchg
rcr
adc
pop
jns
gs
jp
dec
jmp
dec
xor
pop
loope
pop
stos
hlt
fimul
cmp
(bad)
cmps
push
mov
retf
or
and
xchg
retf
dec
and
call
mov
mov
fwait
and
inc
or
jno
in
cs
cmp
push
in
or
mov
pop
fisubr
and
and
movs
inc
bound
push
and
stos
into
aad
push
mov
fiadd
aam
aam
es
adc
push
sbb
ins
push
dec
push
aam
aam
adc
ja
add
adc
pop
add
icebp
adc
push
dec
(bad)
fbstp
jnp
aas
push
test
ds
jl
pop
std
pushf
cmp
les
sub
in
in
pop
and
mov
inc
mov
and
fbstp
push
das
pop
arpl
int
mov
mov
iret
int
idiv
push
push
inc
and
mov
cwde
leave
aam
das
hlt
cmps
retf
int
adc
es
(bad)
or
shl
mov
adc
push
retf
push
not
idiv
adc
(bad)
outs
sub
mov
xor
popf
aaa
mov
mov
je
sbb
imul
js
sbb
pusha
mov
add
xor
push
cmps
adc
leave
xchg
retf
inc
fs
xchg
daa
lds
xchg
mov
out
dec
outs
fidiv
inc
mov
or
cmps
int3
sbb
bound
adc
adc
(bad)
in
dec
mov
dec
xchg
and
jb
mov
and
movs
loope
int3
(bad)
cmp
mov
push
addr16
push
or
mov
out
nop
stos
mov
jmp
cmc
jnp
push
dec
test
cmps
dec
fist
xor
xor
dec
adc
out
push
add
ss
adc
shl
adc
fnstcw
lea
call
cmp
adc
jnp
pop
std
pop
adc
jne
jno
mov
dec
and
push
outs
leave
or
mov
clc
inc
pop
add
mov
jecxz
retf
pop
mov
je
and
test
je
sti
fisubr
sbb
fcomp
cld
dec
es
mov
pop
sbb
and
pop
mov
inc
mov
sahf
lds
shr
pop
adc
bound
xor
push
(bad)
stos
shr
es
inc
cdq
jmp
lds
loope
jp
out
push
repz
dec
jl
dec
inc
scas
xor
cmp
sbb
dec
mov
jmp
and
and
lods
std
fwait
(bad)
mov
add
xor
xchg
dec
shl
adc
in
shl
push
jno
scas
jmp
cmps
imul
cmp
inc
mov
dec
sub
(bad)
rcl
inc
cmp
test
xchg
mov
(bad)
test
jl
mov
in
movs
dec
push
adc
int
xor
lds
(bad)
leave
out
inc
sahf
jbe
push
shl
pop
xor
(bad)
into
(bad)
mov
mov
das
jae
or
mov
inc
retf
pop
and
dec
mov
fist
and
lock
mov
or
pop
retf
inc
dec
je
inc
cli
rcl
inc
test
in
cmp
fs
ds
lds
and
stos
pop
jl
mov
call
cdq
cmp
cmps
out
stos
iret
bound
ins
int
sub
test
push
xor
sbb
es
movs
and
mov
mov
mov
xor
jmp
in
sbb
push
push
in
lods
cmp
pop
not
dec
mov
jae
std
inc
adc
fld
sub
and
fdiv
int
mov
cmp
mov
(bad)
lods
inc
dec
and
dec
cld
int3
stc
scas
inc
inc
jl
or
xchg
fiadd
mov
or
lahf
xor
leave
dec
dec
outs
sub
xchg
mov
clc
cdq
(bad)
in
xchg
das
jns
out
pop
cmp
xor
ror
and
add
fs
jmp
stos
jno
lds
popa
ret
gs
sti
add
inc
dec
push
movs
mov
add
gs
cdq
sub
vpmacssdql
sub
xchg
inc
adc
ret
mov
int
mov
dec
mul
test
fcom
cwde
imul
rol
xor
cmps
sub
(bad)
(bad)
mov
sbb
adc
adc
test
sub
xor
push
daa
unpcklps
arpl
xchg
add
pop
add
inc
dec
or
mov
leave
pop
pop
xor
mul
xor
mov
dec
dec
ret
mov
(bad)
dec
mov
xchg
adc
xlat
stos
add
push
push
or
fs
daa
(bad)
in
enter
aas
arpl
push
cmc
xchg
xchg
inc
aam
aam
aam
aam
mov
mov
out
jb
xchg
xchg
sbb
out
mov
test
sub
and
or
and
mov
dec
or
adc
xchg
mov
xor
mov
sbb
dec
cdq
inc
jnp
cdq
daa
cmp
nop
je
pusha
daa
pop
xchg
es
dec
pop
bound
fs
and
nop
add
mov
inc
dec
retf
test
cmps
sbb
push
add
push
bound
pop
pop
retf
inc
ss
out
add
mov
jo
xchg
cwde
(bad)
(bad)
inc
sete
jo
push
push
call
dec
jp
iret
lods
addr16
mov
adc
cmp
call
mov
out
popf
fwait
inc
dec
jp
adc
loope
leave
sar
xor
aam
mov
pop
inc
das
mov
das
mov
mov
sbb
xchg
xor
js
and
repz
add
inc
xchg
ret
iret
clc
lahf
xchg
xchg
add
lods
pop
icebp
call
es
ds
sub
push
ss
push
mov
aaa
and
xor
jg
jecxz
(bad)
fwait
adc
and
mov
(bad)
hlt
pushf
mov
sbb
inc
int3
call
icebp
pop
out
sub
ds
xor
mov
ror
cld
adc
das
shl
push
in
dec
fist
retf
js
pop
stos
sbb
and
aaa
mov
pushf
ror
popf
pop
cmp
push
mov
ret
cmp
pusha
fcomp
mov
in
fnstsw
ins
mov
daa
cmp
mov
inc
outs
(bad)
repnz
sub
xor
xchg
xchg
jmp
je
lahf
sub
dec
jo
dec
jo
cmc
xor
mov
jno
out
fcom
mov
mov
pop
and
add
test
inc
dec
std
mov
and
cmp
test
leave
cmps
sub
(bad)
leave
cld
es
jmp
icebp
push
fcomp
push
push
and
xchg
dec
jae
push
mov
rcl
loopne
nop
pop
pop
jb
mov
dec
cmovle
mov
scas
imul
out
inc
adc
xor
ins
adc
push
and
cwde
jl
dec
jb
push
iret
and
shl
out
push
mov
repnz
pusha
lahf
(bad)
aam
jbe
add
out
cdq
jmp
aad
mov
xlat
mov
call
out
mov
or
(bad)
fcom
xchg
xchg
inc
nop
xchg
cwde
imul
add
scas
lahf
xchg
je
or
cmps
gs
push
and
inc
jns
dec
icebp
ficomp
cli
icebp
or
pop
xchg
mov
sbb
or
call
or
into
pop
stos
scas
jb
outs
sub
popf
inc
test
inc
in
push
fiadd
cmps
mov
add
fwait
mov
mov
jmp
fsub
pop
cmp
(bad)
cld
add
inc
das
or
add
mov
mov
into
mov
(bad)
xchg
push
(bad)
adc
inc
add
cs
mov
mov
cmp
iret
xchg
dec
xchg
dec
jo
sub
dec
es
jle
retf
jb
popa
or
xor
inc
movaps
adc
or
mov
xchg
retf
cmp
adc
dec
fidiv
call
test
sub
(bad)
loopne
or
jb
jmp
add
xchg
enter
add
sti
push
inc
xchg
push
pop
sbb
push
pop
push
inc
push
inc
push
pop
add
inc
push
and
push
nop
loopne
mov
sub
retf
jp
fsub
mov
xchg
ficom
mov
aam
pop
jecxz
rcr
xor
popf
icebp
pop
(bad)
in
push
in
cmp
push
nop
pop
jnp
add
(bad)
out
std
jae
imul
ja
jmp
ins
iret
jnp
jno
push
dec
lds
rol
mov
add
adc
daa
int
jmp
out
in
stos
leave
retf
fnstcw
sbb
sub
fistp
ds
pusha
jmp
add
jbe
gs
and
hlt
xchg
push
in
test
fdiv
inc
test
sub
pop
sti
xchg
sbb
in
xchg
add
add
xor
mov
repz
outs
dec
or
adc
movs
ss
push
mov
shl
xchg
mov
out
mov
sbb
xchg
std
test
aam
xchg
lds
ror
in
aaa
test
sub
inc
push
aad
mov
data16
sub
push
(bad)
mov
xor
test
mov
mov
push
sbb
adc
pop
jp
xchg
add
ret
cmp
js
rcr
jae
aaa
outs
out
adc
and
iret
dec
movs
jl
dec
mov
sbb
daa
mov
inc
imul
xchg
add
mov
mov
mov
mov
sub
dec
(bad)
inc
es
mov
pop
fnstsw
xchg
add
sbb
fwait
mov
or
cdq
sti
cmp
ja
cmp
add
mov
fld
inc
adc
ds
xchg
xchg
js
inc
aam
adc
xchg
(bad)
dec
(bad)
fsub
pop
add
xor
inc
into
add
xor
cmp
aam
sub
loopne
imul
dec
ret
inc
cmc
das
dec
xor
data16
cli
xchg
movs
pop
aas
std
pop
aam
xor
inc
cmc
das
dec
cmp
setp
mov
dec
and
jo
(bad)
pop
cwde
pop
sar
jmp
pop
cdq
xchg
mov
pop
in
add
iret
stc
aas
aam
xor
dec
cmc
scas
dec
pop
sti
pop
jmp
xlat
cmps
inc
leave
(bad)
movs
jmp
jp
cld
lahf
jmp
inc
push
retf
sbb
stos
push
jbe
mov
lods
lods
mov
sub
sub
out
fs
jl
add
repnz
fdivr
pop
xchg
hlt
mov
add
pop
retf
xchg
or
sub
hlt
mov
push
xchg
lahf
push
aam
lods
mov
aaa
inc
jb
fstp
xchg
retf
mov
push
sub
jp
push
mov
xor
test
sub
mov
jnp
int
jl
inc
mov
imul
push
out
mov
mov
int3
les
pushf
ss
andnps
mov
dec
lahf
push
sbb
lea
cld
(bad)
push
sbb
fisub
jo
pushf
pushf
mov
mov
mov
mov
test
stc
sbb
(bad)
jb
inc
shl
jg
inc
xchg
mov
sbb
add
das
sti
push
pop
sbb
ret
or
inc
xchg
retf
(bad)
pop
inc
jmp
dec
cmp
ffreep
ja
gs
clc
outs
stc
sub
inc
or
or
pop
push
pop
push
push
push
push
push
loopne
push
ss
lods
cmps
daa
lock
inc
add
mov
or
lods
add
mov
and
add
iret
mov
sub
mov
clc
jo
or
dec
in
xor
leave
pop
xor
mov
dec
mov
sbb
sbb
fisub
je
rcr
fidiv
pushf
mov
pop
xchg
aad
scas
fs
mov
mov
sahf
jnp
xor
int
test
jae
aaa
sbb
jecxz
mov
or
mov
imul
mov
mov
sti
xchg
test
mov
sbb
rcr
in
ja
and
dec
in
mov
adc
xor
int
dec
sub
mov
fmulp
int
nop
lahf
neg
sub
xlat
sub
push
mov
pop
dec
cmp
and
xchg
ret
pop
dec
and
daa
inc
xchg
(bad)
xchg
cld
push
pop
pop
push
out
xchg
ret
sahf
add
gs
jae
pop
add
loope
pop
pop
jle
xchg
push
add
xchg
push
add
mov
pop
mov
add
jno
sub
stos
out
mov
sub
cmpps
xchg
dec
mov
pop
and
popf
test
xchg
cmps
fiadd
into
inc
enter
mov
sub
sub
jp
loope
arpl
jle
imul
mov
pop
retf
iret
cmc
xchg
lahf
push
imul
ja
jmp
jge
dec
inc
fldcw
into
push
or
cmps
pop
ins
sub
mov
pop
dec
cwde
dec
jno
xor
das
push
push
cmps
cwde
cmp
cmp
addr16
aad
inc
sahf
mov
sub
push
push
pop
push
loopne
xchg
pop
popa
enter
push
jp
sub
sbb
das
add
sbb
mov
or
and
jo
repz
fist
and
xor
dec
test
ret
xor
fdiv
sub
or
or
sti
int3
stc
adc
ss
add
cmps
add
jb
sbb
adc
or
lahf
pop
inc
mov
adc
sqrtps
adc
inc
sub
mov
adc
inc
or
dec
mov
out
mov
nop
es
adc
mov
pop
(bad)
rcr
in
sbb
push
and
cmps
test
sub
das
fldcw
leave
pop
pop
mov
pop
jg
ret
imul
inc
enter
sub
rcr
adc
loop
(bad)
jmp
scas
data16
scas
in
fdiv
lods
lock
sbb
cmps
test
xchg
les
dec
mov
push
loopne
push
in
mov
(bad)
in
dec
ret
mov
test
pop
adc
rol
icebp
fisub
leave
mov
ja
xlat
push
ins
in
jp
pop
xlat
xchg
js
(bad)
push
xchg
xchg
cli
inc
push
in
(bad)
js
ins
aam
dec
mov
xor
jbe
popf
movs
xchg
(bad)
setb
ja
cmp
inc
jnp
jno
sub
je
pop
and
adc
in
mov
jns
aas
dec
add
sbb
adc
hlt
leave
mov
aam
std
retf
(bad)
mov
cmp
add
dec
ror
and
or
or
fidivr
test
cmc
sub
lea
aad
mov
and
mov
xchg
push
xchg
add
cdq
sahf
and
mov
mov
(bad)
int
pop
clc
push
mov
dec
xchg
push
cmp
mov
mov
xlat
and
jns
mov
and
iret
xchg
lds
mov
cmp
(bad)
arpl
popf
push
push
adc
pop
mov
popf
mov
imul
int3
out
jae
mov
daa
aas
sti
dec
dec
ins
mov
xchg
inc
cmps
sub
adc
xor
loop
sub
cdq
or
mov
daa
inc
clc
mov
or
adc
xchg
or
jl
rol
pop
retf
xchg
popf
adc
inc
cdq
jge
jb
dec
mov
(bad)
leave
inc
mov
setb
es
aam
shl
mov
repz
pop
inc
mov
dec
jmp
cli
pop
sbb
or
cmp
push
(bad)
xchg
mov
add
sbb
je
cmc
dec
cmp
sbb
mov
jle
rcr
ja
stos
mov
mov
inc
xchg
cmp
jnp
movs
fwait
pop
inc
movs
push
jecxz
pop
lahf
sbb
fstp
test
mov
push
scas
dec
jmp
dec
ss
cmp
mov
cli
xor
mov
not
xchg
lds
and
adc
push
daa
clc
and
add
xlat
pop
xor
stos
inc
into
fld
jns
popf
mov
mov
cmps
mov
(bad)
leave
jnp
mov
in
rcr
xchg
mov
jnp
inc
jb
imul
cdq
ss
stos
(bad)
push
retf
jg
inc
mov
xor
mov
cmc
cmc
mov
mov
or
mov
push
mov
out
sbb
jl
jmp
icebp
push
and
mov
lds
mov
cmps
xchg
xor
mov
iret
jne
movs
mov
dec
mov
sub
mul
sbb
xchg
add
test
inc
and
iret
jmp
push
mov
scas
jae
pop
js
clc
lods
bound
aaa
xchg
aaa
mov
loope
out
loop
xchg
sub
pusha
lds
scas
dec
jmp
push
jns
lods
jae
xchg
jecxz
int
aaa
outs
out
outs
loope
inc
or
xchg
pop
and
xchg
push
mov
sub
lods
in
stos
sti
jl
sub
or
or
ror
mov
cwde
pop
enter
adc
inc
neg
mov
faddp
das
loop
shl
in
ins
xor
mov
call
in
movs
dec
push
pop
pop
aaa
lods
push
pop
(bad)
pop
movs
jp
aas
nop
rcr
push
push
mov
sbb
jae
jns
add
inc
push
push
cmp
cmp
lods
(bad)
test
adc
test
test
mov
lods
inc
les
xchg
sbb
out
mov
and
adc
or
sbb
loop
movs
repnz
fs
cmp
ins
addr16
leave
push
mov
sub
dec
xchg
adc
push
clc
addr16
das
pop
sti
loop
adc
jo
fstp
std
mov
aaa
push
(bad)
enter
and
neg
push
xchg
sbb
pop
clc
push
mov
sbb
jb
mov
xchg
test
mov
xchg
jae
add
mov
push
addr16
inc
sub
cmp
and
mov
in
stos
xor
cmp
in
stos
xor
jmp
scas
add
sbb
lea
pop
xchg
pop
or
mov
inc
mov
jl
ins
fwait
mov
add
mov
push
pop
mov
je
pop
aad
loop
pop
push
add
test
test
sbb
je
mov
xchg
daa
retf
push
test
popa
pop
sub
sub
add
leave
inc
jl
dec
mov
inc
push
and
in
push
popa
fs
dec
adc
(bad)
enter
fwait
cdq
vpcomd
sbb
shr
loopne
ins
xchg
mov
call
adc
lods
adc
call
xor
popf
jmp
mov
sahf
out
or
cmps
add
adc
jmp
pop
xor
mov
mov
cld
aam
cmp
inc
fidiv
adc
call
fnsave
sub
xchg
and
push
into
in
ret
xchg
inc
xor
dec
push
push
jecxz
pop
pop
mov
pop
int
xor
test
xchg
cmp
pop
outs
xchg
mov
push
cdq
xor
outs
push
lahf
pop
xchg
dec
mov
int
or
lods
mov
ficomp
xor
jle
out
out
pop
popa
add
mov
(bad)
or
out
fdiv
lods
lds
mov
loop
mov
and
push
push
or
push
push
or
inc
add
adc
add
cdq
dec
push
ret
enter
test
dec
sbb
out
jne
jno
push
clc
adc
aaa
mov
test
push
adc
mov
pop
jne
fst
mov
movs
dec
test
xchg
or
fld
adc
lds
pop
mov
call
in
das
es
cmps
hlt
rol
pusha
int3
fcom
dec
jae
aam
jnp
ret
add
cdq
or
mov
outs
xchg
sti
dec
daa
in
imul
dec
cwde
push
(bad)
js
xchg
fucomi
sbb
pop
mov
or
or
xchg
push
mov
inc
stos
jp
ins
popf
adc
pop
cdq
dec
mov
sbb
jge
jle
cmp
mov
out
xor
call
mov
jno
stc
test
pop
cmp
mov
mov
mov
mov
pop
aam
movs
stos
adc
or
cmc
and
dec
loopne
sbb
ret
dec
mov
scas
inc
jp
sbb
repz
and
and
mov
out
out
pop
mov
scas
push
ins
fcom
mov
in
push
xlat
and
sbb
data16
xchg
sbb
call
jl
stc
es
sbb
jle
es
sub
adc
mov
dec
imul
call
mov
mov
call
sbb
cmp
fisttp
push
sub
mov
mov
repnz
test
inc
addr16
rcl
lea
sub
mov
xchg
lods
hlt
loope
shl
inc
and
not
rcr
and
push
push
push
sub
inc
mov
ins
or
outs
cmp
cmp
cmc
sbb
out
ficom
jae
ret
shl
xchg
pop
lods
mov
push
fimul
scas
dec
sub
stc
push
bound
mov
imul
xchg
ror
loope
mov
dec
cld
add
addr16
cli
icebp
cmps
lock
popa
sub
js
pop
inc
cmp
dec
stc
mov
popf
mov
jbe
or
add
(bad)
adc
dec
arpl
inc
out
add
icebp
or
shr
or
adc
in
push
popf
mov
jne
nop
mov
test
inc
loopne
jno
mov
jns
adc
xchg
stos
adc
mov
mov
xchg
mov
(bad)
cmp
(bad)
js
mov
scas
lock
ja
mov
mov
sub
mov
fsub
loopne
pushaw
pop
daa
sub
outs
lock
lahf
loopne
aas
rol
imul
adc
or
push
inc
out
test
es
inc
cdq
sub
cmp
dec
enter
xor
cmp
shl
xor
mov
add
push
mov
adc
call
adc
xchg
xor
jle
fnstsw
fstp
fcom
or
dec
mov
push
jae
popf
mov
cmp
clc
pusha
dec
mov
push
test
cmp
ja
fdivr
js
jo
jne
inc
add
les
jl
mov
(bad)
mov
cmp
aam
aaa
in
mov
jecxz
jb
mov
in
call
popa
pop
daa
das
in
out
out
jo
push
pusha
cmp
pushf
cmp
inc
or
inc
aas
in
pop
add
xor
(bad)
dec
or
in
cs
sub
or
in
movs
sar
stc
dec
sbb
xlat
and
pop
adc
xor
or
xor
aad
or
add
jmp
ret
or
xchg
and
mov
retf
int3
and
or
jg
stos
cdq
mov
(bad)
xchg
mov
stos
pop
out
pop
test
adc
ja
fcomp
mov
dec
pop
add
pusha
dec
js
jae
inc
xor
aad
cmp
cmp
daa
daa
daa
daa
cmps
daa
cmps
cmps
daa
daa
test
mov
ins
push
jbe
adc
push
or
je
sub
test
adc
icebp
pop
call
push
lods
push
dec
in
push
test
sub
(bad)
mov
or
push
sbb
mov
repnz
test
nop
imul
and
push
xor
and
mov
adc
sbb
ins
fsub
mov
test
xchg
ds
clc
and
mov
pop
sti
or
inc
call
cs
mov
cmp
mov
lea
mov
(bad)
enter
test
fs
fwait
mov
xchg
fdivr
pop
jle
fs
out
jae
mov
les
mov
push
fst
jbe
mov
xchg
mov
lahf
jae
mov
mul
leave
shl
push
mov
inc
and
pusha
push
push
ret
mul
ins
pop
pop
imul
pop
sar
lock
sub
cmp
cdq
or
mov
out
dec
pushf
fnsave
fcom
sub
mov
dec
dec
icebp
dec
dec
push
adc
jmp
pop
ds
test
addr16
mov
cmp
in
add
das
push
lock
or
sub
in
pop
and
mov
mov
sbb
push
enter
pop
aam
or
xor
push
stos
cld
lds
inc
adc
inc
adc
and
mov
xchg
xchg
mov
push
push
mov
mov
pop
inc
or
rcr
or
inc
and
xor
mov
sub
(bad)
xchg
mov
add
ins
pusha
stc
sub
mov
lds
aam
xchg
xor
mov
fwait
je
ret
and
dec
xor
mov
sbb
sbb
loope
outs
push
push
(bad)
sbb
ins
add
cs
fcomp
je
stos
test
dec
push
cmp
and
add
fs
dec
retf
and
outs
leave
stos
adc
in
aaa
or
jne
sub
mov
push
imul
int
mov
jns
cmp
enter
or
clc
fisub
(bad)
sbb
and
or
xchg
sbb
lods
push
add
push
les
les
mov
cmc
and
inc
mov
mov
mov
xor
xchg
cmp
add
or
sub
xchg
call
inc
cmp
cmp
pop
add
dec
mov
es
xor
push
push
inc
mov
xchg
cli
cmps
movs
sbb
lds
dec
dec
mov
in
(bad)
adc
cmp
pushf
mov
dec
call
in
outs
jecxz
fisubr
jns
lahf
or
xchg
cmp
out
loope
loope
dec
daa
outs
pop
mov
icebp
cwde
push
or
repnz
pop
fsubr
pop
adc
jl
xchg
and
(bad)
mov
leave
sub
xchg
xor
xor
inc
sbb
loope
add
inc
std
mov
mov
mov
adc
inc
js
nop
sbb
dec
xor
cdq
fisub
jmp
add
into
push
inc
movs
daa
jle
clc
mov
jmp
fisubr
inc
fimul
mov
test
inc
int3
ja
test
adc
nop
xor
in
add
dec
xor
or
jae
xor
cmp
xchg
sbb
push
ja
call
mov
push
xchg
out
sub
and
or
xchg
jbe
or
add
xchg
push
ins
or
fwait
jb
cwde
loope
mov
cmp
mov
mov
fcmovbe
mov
stc
das
pop
mov
inc
imul
adc
push
les
bound
and
fistp
iret
jae
mov
ret
cmp
iret
movs
ret
dec
dec
dec
sbb
adc
sub
sub
adc
sub
dec
dec
or
addr16
dec
cmc
or
pop
test
sub
add
add
add
add
add
add
add
add
add
and
inc
adc
jno
xchg
mov
shl
xor
fiadd
or
add
add
adc
add
jo
jecxz
dec
mov
mov
stc
pop
in
clc
loop
ret
outs
pop
mov
jb
retf
xchg
cs
mov
sub
cdq
ds
or
mov
add
retf
pop
mov
ret
push
push
xchg
repnz
lea
cmp
mov
call
adc
and
add
std
sbb
ficomp
data16
inc
cwde
dec
dec
mov
lahf
push
stc
or
push
js
mov
push
cmps
lahf
sub
add
test
in
pop
sbb
or
inc
nop
pop
mov
sub
or
xchg
aaa
test
jl
mov
xchg
sub
adc
dec
xchg
push
cmp
sahf
adc
test
xchg
das
adc
mov
iret
or
lods
shl
push
sub
cli
aas
fsubr
(bad)
xchg
sbb
test
xor
ds
cmps
adc
push
push
(bad)
mov
xor
xchg
cmp
ins
or
out
sub
dec
inc
test
xchg
shl
adc
hlt
mov
mov
cmp
clc
outs
add
sub
xchg
inc
jmp
sub
push
jmp
sub
sbb
sbb
cmp
mov
mov
mov
cld
movs
stc
dec
repnz
in
push
movs
cmp
cmp
movs
cmp
movs
add
dec
test
inc
repnz
sub
movs
cmp
cmp
cmp
cmp
push
push
jmp
test
movs
cmp
movs
cmp
cmp
xchg
jmp
xchg
adc
dec
cmp
loopne
push
cmp
stc
inc
fild
sub
sub
or
ins
pop
xor
movs
test
aas
aaa
leave
test
cmc
sub
add
sbb
inc
or
arpl
pop
cdq
out
inc
cmp
sub
inc
ss
(bad)
in
shl
(bad)
retf
pop
xchg
adc
push
clc
dec
inc
sbb
xchg
lods
push
jecxz
dec
shl
stos
lea
cmps
xchg
test
sub
out
sub
push
jmp
and
mov
aas
lea
pop
test
add
(bad)
and
and
jmp
and
lods
jns
add
mov
test
outs
mov
jge
test
pop
mov
sti
retf
inc
jne
sub
rol
and
inc
add
stos
push
imul
ins
ss
out
out
sub
jb
pusha
fnop
aaa
in
dec
push
dec
outs
icebp
in
xchg
push
sub
shl
loopne
mov
mov
xchg
js
cld
sahf
ins
pop
pop
cmp
repnz
xor
add
push
and
adc
mov
xor
xor
or
mov
mov
and
les
adc
add
shl
xor
inc
add
lock
xchg
adc
loope
or
push
sahf
jge
cmp
fs
sbb
pop
inc
cli
and
test
pop
sar
pop
shr
cmovg
and
jo
je
loopne
jl
ins
ins
dec
mov
jmp
mov
or
mov
sbb
mov
test
or
stos
xchg
icebp
add
lds
xchg
imul
fst
push
mov
ins
push
jle
and
pop
loop
xchg
pop
fsubr
test
jae
jmp
inc
push
adc
mov
add
xchg
sub
inc
scas
and
push
scas
adc
xor
outs
xor
test
in
inc
push
add
fcomp
xor
ins
int3
mov
jg
sar
add
mov
aam
loop
mov
add
inc
xor
dec
mov
cmp
jae
std
cdq
in
fidivr
adc
std
dec
inc
pop
pop
cmp
cmp
(bad)
lds
pop
test
mov
(bad)
es
(bad)
xor
ins
adc
fnstenv
enter
xchg
je
clc
les
daa
cmp
fstp
and
sub
push
pop
and
or
in
sbb
inc
mov
jle
cld
(bad)
mov
push
mov
adc
cmp
xor
adc
bound
fwait
lock
stos
out
rcl
cmp
das
retf
pop
jnp
ror
adc
xchg
in
shr
mov
mov
sub
xlat
arpl
pop
rol
jnp
pop
ja
fstp
shl
data16
sub
imul
clc
xor
push
call
popf
les
mov
int3
mov
pusha
cbw
ror
call
das
inc
push
cmp
add
ja
(bad)
adc
lahf
stc
das
mov
mov
dec
add
jo
and
xor
and
movs
cmp
popa
and
cmp
xchg
xor
add
pushf
add
adc
inc
shl
lods
iret
and
pop
sub
out
jge
sub
xchg
lods
fisub
lock
or
mov
sub
ret
xor
(bad)
sbb
fidivr
pop
je
out
cmps
add
ins
inc
push
xor
inc
cmp
xor
movs
sub
pop
clc
pop
or
add
jg
lock
xor
jo
popa
rol
xor
xchg
xor
fwait
aaa
jmp
cli
dec
(bad)
push
mov
out
inc
pop
test
jae
jge
push
rcl
or
cmp
jae
xor
loopne
in
or
scas
push
(bad)
pop
mov
and
cmp
inc
bound
xor
mov
adc
or
pop
push
cmp
int
das
mov
cwde
mov
pause
es
mov
rcl
adc
mov
sub
xchg
add
xlat
xchg
pop
dec
xchg
shr
inc
xor
mov
pop
mov
cs
mov
pop
(bad)
retf
loope
js
gs
jg
(bad)
or
(bad)
(bad)
xor
adc
push
je
jmp
or
retf
or
inc
leave
out
psubusb
pop
and
add
shr
xchg
cmp
out
(bad)
sbb
das
dec
imul
push
xchg
xchg
ret
cmps
mov
lods
sbb
xchg
int3
cdq
call
sbb
out
adc
cwde
test
add
fld
push
add
jne
adc
stos
mov
xor
xchg
jbe
dec
adc
dec
xchg
jb
add
lods
cmc
xchg
xor
sub
sahf
sub
int3
push
ret
fisubr
push
jo
imul
mov
(bad)
xor
xchg
das
and
xchg
inc
and
mov
mov
cs
mov
cs
mov
cs
mov
lds
pop
int
pop
jl
xchg
lods
imul
sahf
ret
mov
mov
pushf
mov
les
and
ror
cli
dec
cmp
mov
cwde
cmp
xchg
test
out
int
cld
sbb
mov
or
cmp
in
xor
(bad)
ficom
ss
imul
mov
and
sub
enter
fs
jb
mov
mov
loopne
out
rol
int3
xchg
sub
sbb
inc
push
sub
movs
test
cs
jmp
dec
mov
fcomp
ficom
mov
add
(bad)
mov
inc
push
pop
fistp
cmc
mov
out
pop
dec
ret
clc
cmp
sar
mov
jg
(bad)
clc
das
lock
pop
mov
pop
les
adc
push
or
cmp
jo
push
(bad)
ins
es
dec
xor
rol
aas
js
retf
mov
mul
repnz
out
pusha
loop
mov
lahf
jno
jnp
push
int
icebp
mov
movs
fisttp
dec
scas
cdq
in
es
test
mov
jb
xlat
xor
mov
mov
ror
push
imul
call
test
aaa
jbe
ins
call
les
or
sbb
sbb
int3
push
or
add
mov
repnz
jns
push
iret
lods
sbb
shr
mov
xor
lods
lods
lods
fiadd
rcr
push
pushf
mov
cmp
cdq
cmps
cwde
retf
(bad)
mov
into
cmp
leave
sar
add
movs
xchg
dec
inc
cmp
movs
cld
rcr
pusha
cmc
and
cmp
and
shr
dec
pop
pop
cmps
lods
mov
test
mov
add
push
stc
jl
int3
jp
xor
pop
mov
cmps
mov
pop
sbb
adc
mov
in
or
mov
(bad)
es
iret
adc
aas
push
js
mov
loopne
push
sbb
repnz
leave
out
js
jmp
push
inc
imul
xchg
rcl
adc
pop
shr
repz
mov
xor
add
out
cmc
in
das
mov
add
icebp
or
mov
cs
lods
mov
inc
xchg
push
jecxz
push
add
shl
fucomp
cs
(bad)
push
cmp
loopne
test
(bad)
into
and
pusha
sub
push
mov
fidivr
popa
shr
fisub
repz
and
popf
add
je
addr16
out
repz
(bad)
cmp
pushf
add
aaa
cmp
call
into
lahf
lods
jmp
cmp
pushf
cmp
cmp
mov
push
jae
jmp
cs
je
addr16
repz
das
pop
shl
popf
aas
pop
shl
xchg
(bad)
je
popa
retf
das
pop
shl
popf
das
pop
xchg
cmc
popf
aas
pop
shl
popf
aas
pop
shl
popf
pop
pop
shl
popf
pop
pop
shl
popf
das
pop
shl
lahf
arpl
cmps
jl
scas
movs
mov
jmp
and
sub
test
add
icebp
add
xor
lds
and
loop
loopne
sub
and
inc
test
mov
icebp
es
lahf
mov
push
pop
xchg
rcr
and
ret
xchg
dec
mov
dec
jp
test
xchg
out
(bad)
xor
or
sbb
adc
xchg
out
xchg
shl
and
sbb
jo
fdivr
xchg
mov
mov
ja
mov
(bad)
je
out
pop
jae
fiadd
jp
or
xor
xchg
test
jmp
or
sbb
cdq
or
ret
inc
fstp
icebp
cli
jecxz
or
dec
aas
inc
push
pop
cld
adc
icebp
sbb
xor
sbb
xlat
jmp
lock
push
sub
sub
aas
loopne
mov
jp
inc
movs
loopne
jnp
xor
push
scas
pop
pop
sub
sahf
inc
sbb
or
pusha
retf
mov
aam
sahf
test
jns
jno
push
pushf
mov
or
hlt
adc
dec
mov
setno
loopne
cmp
sar
cs
ror
mov
push
push
out
ror
movs
xchg
or
bound
adc
sub
mov
test
jno
pusha
cmp
fisub
dec
sbb
dec
mov
sub
(bad)
mov
jne
(bad)
in
loop
mov
mov
add
and
es
cmp
mov
inc
mov
aaa
dec
xchg
adc
cwde
dec
aad
retf
fld
xchg
mov
(bad)
fmul
sbb
pop
push
xchg
lea
xor
aad
xor
jl
jmp
lock
(bad)
ins
arpl
icebp
js
ja
push
scas
std
push
pop
test
hlt
mov
shr
div
(bad)
aad
push
dec
repz
jns
jns
inc
mov
jo
rol
fstp
sub
retf
sar
add
mul
adc
or
jmp
sbb
xchg
pushf
call
lock
sub
add
adc
(bad)
and
out
sbb
mov
xor
mov
bound
cmp
push
mov
pop
lock
sub
imul
jns
or
mov
test
push
xchg
push
mov
mov
stos
sbb
adc
add
dec
push
add
rol
sub
add
and
popf
add
inc
inc
dec
push
jle
jecxz
cmc
add
(bad)
push
push
push
inc
out
mov
xchg
xlat
adc
jmp
into
or
clc
call
inc
and
lock
scas
stc
cmp
into
or
fisub
cli
jns
jns
inc
mov
pop
sbb
pusha
(bad)
sbb
pop
pop
mov
add
add
ror
ficomp
cmp
cdq
jge
pop
das
out
sbb
dec
fs
or
xor
push
or
xlat
in
inc
scas
test
aad
adc
mov
xchg
popa
push
dec
pusha
push
cmp
xor
lock
stos
xor
jle
push
add
repnz
fs
and
out
push
xor
add
cmp
push
loopne
fs
les
jmp
fdiv
arpl
push
xor
lahf
arpl
(bad)
jecxz
psubw
xchg
sar
mov
hlt
sbb
pop
mov
or
dec
mov
lods
mov
(bad)
fs
mov
sbb
aas
fsubr
cwde
shr
cli
jns
leave
sti
lock
mov
imul
jb
fdiv
cmp
cs
outs
and
sub
mov
adc
inc
cmps
or
jmp
loopne
pop
mov
mov
jo
jg
or
retf
int
gs
std
ja
popa
mov
pop
lahf
repnz
stc
dec
dec
fcomi
mov
xlat
mov
fnstenv
lods
in
das
sub
(bad)
cwde
push
pop
sub
int3
cmc
les
xchg
sbb
add
xlat
jecxz
push
pop
cld
ja
mov
sar
(bad)
int
repz
imul
ud2
test
or
outs
xchg
dec
push
jecxz
push
cmp
jmp
iret
popa
in
ds
pushf
hlt
das
js
pop
jmp
lock
in
jbe
sbb
out
jo
arpl
adc
pushf
xchg
cwde
jl
out
or
and
cwde
xor
sbb
xor
movs
fdiv
mov
arpl
pop
retf
push
cmps
jbe
pop
xor
rcr
xor
sbb
mov
push
aam
inc
js
(bad)
mov
sbb
cmp
add
loopne
mov
inc
pop
pop
jne
inc
dec
in
mov
addr16
sub
xchg
push
sbb
jmp
xchg
call
call
not
jmp
jp
mov
dec
pop
jnp
mov
rcl
and
mov
rol
add
sar
xchg
xor
(bad)
dec
lods
xor
sbb
std
inc
xchg
cmc
dec
ret
sub
xor
clc
fdivp
inc
in
mov
xlat
xor
jmp
jg
mov
jp
nop
pop
fdiv
dec
mov
cmp
sbb
jno
sar
jmp
cmp
in
pop
lock
ja
push
stos
inc
adc
mov
add
jne
jno
dec
fidivr
aam
dec
mov
xchg
loopne
pushf
inc
sbb
mov
aam
xchg
(bad)
imul
adc
dec
xchg
in
imul
aad
pop
cmp
dec
jns
pop
movs
call
xor
sub
adc
inc
mov
sub
pop
movs
mov
mov
push
dec
xchg
data16
pop
pusha
sbb
mov
and
dec
add
sbb
pop
scas
daa
rcl
icebp
rcr
mov
sbb
push
mov
stos
ja
inc
test
inc
(bad)
ror
jp
or
hlt
or
or
into
clc
lods
inc
push
cmps
fld
fdivr
mov
sub
adc
xor
dec
jne
test
(bad)
ins
arpl
psraw
cld
imul
iret
ret
sar
out
mov
dec
repz
mov
push
add
test
sahf
(bad)
jb
cwde
aam
adc
mov
adc
pop
jg
pop
push
or
xor
mov
mov
and
test
fiadd
mov
lods
cli
inc
fld
xor
outs
or
aaa
popa
(bad)
sub
xor
mov
push
rol
inc
rcl
and
cwde
out
test
sbb
xchg
jmp
mov
sbb
push
inc
(bad)
rcl
inc
fiadd
mov
add
mov
jbe
(bad)
ror
xchg
bound
(bad)
add
inc
retf
or
shl
sub
pop
jl
pusha
pop
fs
push
xchg
sub
jmp
aas
xchg
mov
les
scas
cld
dec
clc
fist
sub
pop
adc
and
xor
pop
int
enter
xchg
and
mov
dec
mov
cmps
dec
xor
push
jne
xchg
sbb
je
push
pop
aam
add
fimul
test
loop
adc
cmp
adc
cmp
movs
cmp
shl
daa
loopne
mov
pop
sbb
dec
xor
stos
ja
out
movs
mov
push
ins
mov
out
jnp
rcr
push
dec
popf
out
mov
pop
or
mov
dec
out
adc
cmp
sbb
push
jnp
sub
add
std
push
push
mov
test
and
mov
add
scas
fild
jmp
or
mov
mov
gs
dec
jmp
(bad)
jp
mov
pop
retf
inc
mov
cld
push
sbb
jg
stos
mov
mov
cwde
(bad)
sbb
inc
push
pop
das
or
mov
pop
xchg
mov
xor
or
mov
sbb
mov
mov
out
jp
push
and
rcl
mov
retf
and
aad
cwde
fisub
sbb
push
in
cmp
call
and
pop
test
in
jae
aam
sub
mov
mov
rcr
mov
test
test
pop
retf
repz
jge
jecxz
sub
jp
fimul
pminsw
retf
int
mov
retf
mov
(bad)
sub
sub
test
test
sub
mov
(bad)
mov
mov
inc
mov
in
jno
clc
out
pop
xor
cmp
inc
fistp
or
sbb
js
bnd
stos
mov
pop
retf
cmp
imul
jp
push
aas
or
hlt
xchg
loope
popa
and
std
sub
lock
and
xor
fidivr
mov
sahf
mov
loop
dec
pop
push
xchg
cmp
inc
retf
and
das
xchg
xor
mov
or
lock
inc
idiv
push
(bad)
out
dec
mov
and
ret
pop
mov
lods
fidivr
shl
pop
les
sahf
adc
mov
mov
hlt
lock
cli
lock
stos
sar
jmp
movs
push
rcr
jmp
add
lods
fisub
pop
test
(bad)
jecxz
fidivr
scas
out
pop
add
mov
inc
jecxz
loop
outs
or
(bad)
cmp
leave
fcomp
add
lock
pusha
pop
or
fcom
ins
mov
xor
jmp
jbe
mov
loop
dec
mov
dec
pop
shl
jnp
mov
or
out
repz
xchg
mov
cmova
mov
adc
test
xchg
sbb
enter
test
out
sbb
pop
test
cld
sub
call
shl
(bad)
xchg
movs
in
mov
js
dec
lock
popf
enter
hlt
icebp
inc
xor
test
ret
inc
push
ror
dec
sbb
fwait
mov
inc
jne
fld
loopne
mov
jmp
cmp
test
sub
xchg
and
xor
cli
retf
leave
and
xor
cmp
in
xchg
ret
inc
mov
mov
repz
cmp
out
xor
cdq
(bad)
in
inc
jbe
mov
and
sbb
test
add
mov
add
mov
xchg
mov
es
loope
push
or
retf
call
iret
ds
repnz
dec
sub
fdiv
fistp
jmp
or
ja
call
and
data16
outs
rol
cmp
and
or
ja
gs
addr16
or
repnz
inc
icebp
stos
mov
test
(bad)
and
std
pusha
imul
cmp
sbb
xor
addr16
inc
add
mov
xor
cmp
mov
ss
xchg
add
cmp
cmp
mov
popf
idiv
pxor
jb
add
and
(bad)
int3
cmps
xchg
inc
add
dec
iret
pop
sahf
push
retf
xor
out
jmp
xor
pop
daa
aas
mov
dec
pop
lods
ins
ror
sbb
xor
adc
mul
jno
pop
mov
cmp
inc
std
fist
xchg
adc
mov
or
test
jo
mov
adc
mov
sti
nop
xchg
xchg
dec
hlt
add
stos
iret
neg
sbb
jmp
cmp
call
mov
cld
fmul
push
cs
sub
xchg
sub
push
cmp
and
push
sub
icebp
push
loop
js
lods
ds
and
add
pop
out
xor
pop
cwde
mov
push
repz
mov
xchg
lock
dec
pop
addr16
xchg
fsubr
pop
mov
mov
call
gs
jl
hlt
fbstp
aam
sub
inc
jne
xor
add
loop
(bad)
xlat
inc
(bad)
push
xchg
push
out
cli
nop
cmp
xchg
rol
mov
mov
sub
into
pop
mul
dec
out
dec
add
scas
mov
jo
mov
pop
ins
push
pop
sbb
outs
scas
movaps
inc
fistp
jb
add
xor
push
in
adc
push
data16
mov
out
jb
xchg
or
adc
(bad)
pop
add
(bad)
stos
adc
dec
sbb
push
arpl
es
aad
pop
adc
jb
shr
bound
mov
cdq
stos
mov
ja
cwde
push
lods
dec
jge
arpl
out
stc
mov
aad
or
mov
mov
add
sbb
and
and
mov
pop
push
push
shl
xchg
xor
mov
lock
jo
mov
push
pop
test
cmps
xchg
in
mov
(bad)
jp
mov
pop
jnp
lods
pusha
loop
lods
sbb
daa
sub
neg
pop
leave
xor
sub
movs
dec
xchg
sub
and
or
fucom
repnz
add
lock
(bad)
or
scas
or
ins
or
inc
aaa
test
and
push
frstor
and
xchg
sub
push
sub
xlat
and
clc
add
jns
rol
sahf
xchg
adc
das
jb
or
das
cdq
sub
loopne
arpl
xchg
adc
aad
inc
xchg
jnp
push
rcr
sub
add
aaa
arpl
shr
sbb
dec
push
push
ins
(bad)
iret
jb
int
push
push
test
jns
in
xor
sti
das
imul
dec
inc
pop
inc
pop
mov
retf
xchg
push
or
xor
les
or
pop
pop
into
mov
xor
mov
out
scas
pop
aam
popa
pop
xchg
mul
aad
scas
rcl
sahf
leave
out
and
test
scas
test
pop
cmps
mov
cmp
fld
loopne
mov
dec
xchg
ret
sbb
dec
dec
(bad)
sbb
fs
cmp
retf
sti
xor
addr16
std
xchg
cmp
arpl
jns
enterw
jns
jns
gs
or
and
xchg
dec
fdivr
mov
cmps
jns
jns
inc
ins
mov
je
pop
fcomp
inc
outs
std
imul
cmp
lods
leave
sbb
ins
sub
sub
mov
in
push
dec
lock
and
aaa
mov
ret
push
mov
cmp
xchg
imul
jge
ja
stos
cmp
mov
jecxz
mov
shr
mov
enter
sub
cmp
xchg
cs
push
sbb
loopne
mov
test
xor
xor
ret
push
outs
in
cmp
xchg
imul
arpl
neg
fld
pop
repnz
pop
fldcw
shl
std
call
scas
repz
mov
sar
push
mov
imul
mov
repnz
dec
pop
pop
cdq
je
ja
mov
cmc
lods
movs
loope
std
mov
rol
cmp
xchg
push
or
cmp
and
push
xchg
pop
xchg
arpl
inc
stos
inc
shl
add
inc
jns
cli
mov
out
shr
leave
out
and
mov
or
jge
sub
jge
mov
push
ret
js
test
adc
cmp
jbe
arpl
pop
mov
lock
or
ret
shl
out
pop
xlat
or
les
add
dec
cs
xchg
test
pushf
mov
shl
jg
and
and
ins
aam
cmp
out
stos
sbb
loop
out
shrd
mov
loope
scas
inc
or
adc
arpl
sub
jge
pop
mov
(bad)
not
loope
stos
fiadd
sahf
adc
adc
je
mov
std
jo
fild
jae
ffree
loope
jmp
pop
dec
inc
and
call
add
xor
sub
aad
stos
sub
push
mov
and
es
or
out
jnp
mov
ds
lock
xchg
rcr
mov
xor
jb
jbe
mov
jb
sti
push
sar
les
sub
dec
lahf
stos
adc
loop
test
stos
sbb
call
jno
cmps
pop
xchg
mul
aad
xchg
imul
jno
sub
add
hlt
pop
cmps
sahf
rol
push
mov
pop
jmp
loope
nop
sar
(bad)
enter
sbb
mov
adc
fstp
mov
adc
sbb
leave
scas
out
add
cmp
pop
mov
xchg
(bad)
xlat
js
xor
jne
cmp
test
ins
(bad)
dec
jae
movs
fstp
push
inc
rcr
xchg
pop
pop
aad
mov
aas
cmp
daa
enter
int
aam
xor
idiv
retf
sti
sub
leave
stc
cdq
xor
daa
xchg
repz
das
in
stos
test
call
or
inc
retf
sti
aaa
and
out
dec
das
in
(bad)
cmps
mov
cmp
cdq
popf
popf
fwait
aas
xor
xchg
ins
lahf
cwde
jae
daa
out
in
fstp
repz
add
jp
addr16
inc
stos
sbb
movs
je
shr
push
mov
fwait
data16
dec
jmp
call
in
arpl
xchg
stc
xchg
test
xor
jge
lods
dec
and
inc
sbb
and
ja
cmps
pop
push
sub
jp
mov
pop
cld
pushf
add
mov
cli
dec
sbb
pop
mov
or
lahf
cmp
mov
cmps
fnstsw
pushf
jns
xor
(bad)
(bad)
pushf
jns
xor
pop
fdiv
iret
daa
out
dec
sbb
cdq
iret
stc
pop
cdq
ja
push
fnstsw
retf
pop
cdq
lods
mov
cmp
int3
imul
mov
cwde
pop
sub
fst
ss
xor
retf
arpl
xor
ss
fsub
push
cmps
sub
lods
mov
mov
rol
jo
xor
xchg
push
and
or
jne
or
sti
inc
in
repnz
sti
dec
inc
test
cmp
outs
add
ror
test
cld
pop
jo
ja
rol
inc
cmp
pop
in
xchg
test
loop
neg
adc
sbb
jp
jl
dec
movs
aam
mov
pop
pusha
or
or
jp
inc
pop
int3
mov
push
div
call
pop
mov
ds
pop
cld
test
cdq
mul
jne
sti
retf
lock
and
movs
add
push
cmovp
pop
mov
add
inc
jo
popf
das
rol
pop
inc
lock
stos
adc
mov
add
addr16
cwde
and
dec
or
leave
push
popa
adc
sbb
icebp
inc
retf
add
cmps
(bad)
jne
adc
inc
sub
cmps
jbe
shl
push
push
sbb
mul
inc
lahf
xchg
pusha
mov
push
add
push
rcl
xor
push
call
test
jb
arpl
gs
fsubr
je
or
mov
aaa
mov
sub
in
outs
movs
pop
std
or
sub
dec
inc
sub
inc
xor
cmp
repz
push
jb
mov
data16
sub
ins
test
jp
clc
sbb
jmp
sahf
leave
jmp
add
sbb
ja
and
pop
clc
inc
xor
add
add
(bad)
aam
imul
dec
or
out
loop
lds
xchg
pop
adc
xchg
sahf
in
mov
mov
ficomp
sub
add
sub
loope
mov
sbb
mov
mov
cmp
xor
xchg
pop
cmc
dec
out
inc
mov
jae
mov
jne
stc
int3
mov
dec
imul
(bad)
push
ss
add
sbb
out
scas
push
aaa
sbb
into
cmps
aad
mov
pop
push
movs
and
mov
in
bound
loop
push
jp
pop
push
mov
mov
mov
xor
push
loopne
mov
(bad)
in
test
fisubr
leave
sub
push
add
cmp
call
add
jmp
pushf
stc
shr
cdq
cmp
out
aas
dec
cdq
fild
pushf
(bad)
test
mov
jmp
stc
inc
pop
jge
jmp
sbb
or
push
jp
das
adc
sahf
shr
call
bound
dec
or
cs
scas
bound
inc
lods
and
jp
and
loopne
or
movups
push
movs
xor
push
jge
sub
mov
rcr
adc
dec
jno
retf
add
bound
jne
mov
inc
out
leave
out
and
adc
jo
mov
jae
pop
inc
push
inc
cmp
sub
cmps
mov
pop
popa
inc
pop
sbb
out
mov
fisubr
out
or
scas
lea
aam
or
fcmovne
mov
cdq
xor
jp
out
add
popf
add
mov
retf
add
dec
or
or
je
iret
sub
(bad)
xor
adc
or
hlt
or
mov
popf
add
pusha
adc
inc
inc
or
js
test
(bad)
xchg
mov
mov
jle
pop
pusha
test
or
cs
xor
inc
sub
sbb
mov
jo
cs
cmp
lea
nop
xor
mov
push
jb
iret
or
mov
dec
mov
into
push
xchg
call
push
or
test
loopne
inc
mov
cs
cmp
xchg
test
neg
sub
mov
xor
movs
pop
sti
push
sub
mov
das
mov
or
fcmovbe
adc
(bad)
cmc
jno
and
adc
sbb
stc
cmp
xor
jecxz
je
push
jo
cmp
adc
les
aam
dec
inc
mov
pop
inc
lea
sub
push
push
cwde
aam
or
retf
xor
or
lods
shl
jno
(bad)
sub
push
and
push
mov
mov
adc
xchg
int3
mov
rol
in
arpl
mov
pop
outs
call
xchg
push
xchg
adc
fidiv
sub
loop
in
mov
mov
imul
pop
cmps
dec
or
xlat
shl
jmp
jo
push
mov
sub
mov
outs
fdiv
xchg
shr
mov
sbb
sti
arpl
push
mov
fisubr
(bad)
aaa
and
(bad)
cmp
ret
mov
mov
jns
xor
or
(bad)
mov
outs
mov
stos
and
mov
test
lahf
mov
or
mov
cmps
xchg
gs
repnz
movs
clc
sahf
pop
out
div
dec
mov
pop
stos
or
and
repz
les
pop
(bad)
movs
clc
dec
mov
fs
push
sub
xchg
inc
inc
in
les
cmc
(bad)
xchg
sbb
inc
mov
out
cs
add
or
int3
pop
arpl
cmp
test
jne
mov
add
clc
mov
mov
out
das
sti
aas
adc
(bad)
push
pop
pop
xor
pop
push
clc
sub
jl
sub
shr
push
sub
push
call
sub
cmps
jne
dec
daa
shr
stos
inc
sti
inc
add
mov
mov
inc
add
xchg
in
add
sub
(bad)
mov
sub
in
sar
adc
icebp
xor
aas
pop
mov
js
jmp
rcr
les
leave
cmps
repnz
mov
mov
inc
xchg
inc
test
add
mov
mov
inc
mov
pop
mov
cdq
outs
fcmovne
imul
jg
push
add
mov
inc
rcr
fild
rcr
jmp
pusha
cmps
ficom
cwde
mov
adc
jb
mov
cmp
add
(bad)
push
fidivr
sub
lods
(bad)
cmp
fs
call
shr
sub
fsub
pop
imul
pop
shr
test
xchg
sbb
cwde
and
pand
(bad)
hlt
jbe
mov
out
aam
(bad)
ins
xor
(bad)
loopne
mov
and
xchg
adc
push
cmp
loop
pop
sbb
call
test
pusha
mov
dec
push
xchg
adc
xchg
and
mov
out
sbb
dec
ret
mov
jecxz
adc
mov
into
iret
jbe
cmovae
adc
ja
add
mov
inc
popf
push
push
arpl
cmps
dec
push
sub
leave
lods
lds
stos
sub
loopne
cwde
adc
std
inc
mov
out
jb
or
mov
pushf
push
int3
push
inc
movs
inc
ins
mov
imul
mov
jae
sbb
mov
enter
inc
ficom
and
push
adc
xor
mov
push
(bad)
sub
bound
test
jb
push
mov
xchg
pop
mov
push
mov
adc
sub
sbb
jp
test
pop
ret
imul
(bad)
sub
lock
add
cs
xor
dec
xchg
mov
sbb
mov
inc
outs
xchg
ficom
pop
fld
arpl
xchg
push
outs
rol
xlat
xchg
mov
push
test
push
and
pop
(bad)
and
push
popa
inc
add
xor
jo
shl
add
cmp
inc
jbe
add
enter
stos
aaa
out
add
xchg
frstor
inc
mov
jbe
mov
mov
movs
scas
das
add
lds
mov
add
cmp
pushf
inc
push
mov
cmp
xchg
mov
movs
rol
arpl
inc
push
pop
or
shr
pop
lods
lods
out
es
pop
push
adc
push
leave
fwait
out
push
dec
movs
jmp
ins
xchg
dec
sub
and
retf
sub
retf
das
cmp
jge
jecxz
cmp
(bad)
push
sub
ins
pusha
or
inc
stos
sub
xor
sbb
xchg
mov
and
push
push
lahf
cs
(bad)
inc
or
movs
push
sbb
aaa
pop
or
aaa
xchg
mov
dec
fisttp
mov
mov
sahf
(bad)
mov
je
sub
pop
les
pop
xchg
int
xchg
jg
loop
cmps
int
pop
movs
mov
les
adc
iret
pop
adc
fild
inc
ja
movs
mov
clc
xchg
jns
cwde
add
xchg
jne
nop
das
fdivr
outs
es
jb
jecxz
jae
movs
call
popa
mov
push
leavew
and
xlat
test
scas
fwait
leave
jmp
cwde
js
int
mov
pop
pop
push
lods
pusha
test
jmp
daa
int
test
sar
and
aas
xchg
stos
test
in
cli
push
mov
mov
xchg
xor
js
add
sbb
or
push
mov
stos
push
nop
dec
mov
and
popa
xor
xchg
jbe
cmove
pop
xor
icebp
fsubr
punpckhbw
mov
cli
inc
xchg
push
xor
gs
cs
xchg
bound
push
mov
shr
push
xor
push
(bad)
shl
dec
and
outs
hlt
mov
mov
cmp
pop
or
xor
push
cmp
cmp
dec
mov
sti
retf
pop
mov
repz
(bad)
(bad)
or
push
push
pop
(bad)
add
or
inc
fld
sbb
adc
add
mov
dec
and
pop
lods
push
sub
(bad)
imul
fwait
ror
and
xor
rol
pop
lods
sbb
dec
sub
add
test
in
xor
xchg
sahf
push
add
or
rcl
scas
mov
arpl
mov
call
ror
add
add
call
or
add
mov
loopne
mov
mov
add
dec
adc
inc
mov
mov
imul
out
loop
mov
sub
mov
add
and
push
push
(bad)
icebp
in
in
loope
test
cmp
inc
repz
xchg
pushf
pop
inc
das
mov
ins
sub
sub
cwde
sbb
and
jmp
ret
mov
sub
popa
aad
dec
gs
mov
sub
mov
sar
gs
push
dec
add
mov
loop
pop
lfs
popf
or
sbb
in
adc
(bad)
mov
std
sbb
adc
cmps
add
cmp
(bad)
lods
aad
push
scas
cmp
mov
ins
stos
adc
out
jle
pop
das
stos
pop
mov
mov
movs
push
adc
pusha
add
cmps
adc
retf
fnstenv
stos
cdq
ret
nop
and
aas
push
sti
shr
sub
or
loop
into
mov
retf
or
push
sub
mov
inc
pop
or
cdq
pop
sub
dec
sbb
leave
adc
adc
xchg
out
mov
outs
pop
mov
dec
arpl
adc
xchg
xor
or
outs
in
xor
jno
push
call
mov
int3
iret
fucomip
xor
das
sub
xchg
jne
xchg
or
sub
ins
mov
push
ins
xor
rcr
sbb
(bad)
jo
mov
mov
mov
sub
enter
xchg
cmps
xor
jbe
xor
loopne
(bad)
repz
retf
fild
xor
pop
test
xchg
or
push
cwde
sbb
cli
call
mov
mov
popf
dec
arpl
mov
loope
sbb
xchg
adc
xor
mov
adc
mov
mov
push
aaa
clc
jmp
inc
inc
sahf
js
dec
jne
(bad)
es
and
ficom
push
int
add
mov
dec
mov
sub
stos
into
xor
sbb
jmp
mov
jg
push
mov
sub
aad
jns
fidivr
pop
pop
arpl
push
dec
loopne
push
jae
push
add
push
sub
mov
jle
or
(bad)
and
push
mov
push
int3
jp
push
retf
push
or
loop
cmp
fbstp
je
jmp
add
mov
cmp
inc
or
ret
or
pusha
jmp
cmp
sub
and
pop
inc
popa
in
pop
movs
sub
push
fs
loop
pshufw
cmp
add
(bad)
loopne
pop
and
fwait
push
ret
test
pop
add
adc
pop
stos
cld
ficomp
cdq
or
scas
movs
ror
outs
xor
(bad)
and
lds
mov
xchg
jns
xor
and
or
rcl
cmp
jl
iret
ins
outs
fs
stos
lods
push
retf
mov
inc
in
push
sub
and
sbb
pop
jmp
pop
mov
in
add
stc
loop
or
(bad)
sbb
ins
xor
mov
imul
adc
xor
adc
jecxz
fcmovu
push
gs
inc
add
out
or
dec
in
call
xor
shr
in
inc
push
test
mov
inc
lods
push
cdq
icebp
mov
enter
mov
and
stos
sbb
jp
xchg
lods
mov
pop
in
or
sbb
pop
adc
repz
add
daa
cdq
or
ret
sub
dec
push
mov
push
data16
sbb
rcl
and
push
add
add
fmul
push
mov
xor
sbb
push
push
push
dec
xchg
rcl
enter
retf
xor
push
sbb
es
mul
or
xor
pop
jmp
dec
push
push
xchg
xor
mov
inc
add
inc
icebp
jle
fidiv
aaa
dec
mov
mov
les
sbb
(bad)
xchg
mov
push
mov
mov
test
lea
and
mov
adc
xchg
jns
enter
les
clc
mov
jp
les
fld
inc
adc
mov
imul
(bad)
idiv
inc
pop
stc
xor
xlat
addr16
sub
into
lock
xor
fcmovne
sar
out
xor
jae
dec
ins
icebp
iret
mov
push
add
xchg
add
rcr
inc
test
ret
retf
into
push
mov
in
pop
mov
lods
push
std
or
jne
cs
push
std
ror
and
inc
fnstcw
shl
fnsave
xor
jmp
or
xor
jnp
add
mov
jns
or
stos
int
sub
push
shr
mov
adc
mov
ins
pop
int
je
pop
aaa
out
or
jp
out
cmp
push
clc
(bad)
pop
ss
dec
adc
leave
stc
xor
and
push
out
adc
jb
test
ss
test
sub
std
and
fwait
xor
dec
aam
jmp
cdq
lock
icebp
dec
mov
jno
(bad)
mul
sbb
(bad)
mov
bnd
mov
dec
out
imul
cmp
mov
retf
push
dec
bound
push
cmp
dec
jmp
push
cmps
es
ins
aam
mov
xlat
or
or
js
stos
sbb
stos
(bad)
sahf
xchg
pop
inc
inc
push
sub
xchg
or
ja
adc
pop
icebp
jb
sub
inc
ss
pusha
cmps
mov
test
ret
pop
es
mov
int3
(bad)
(bad)
ficom
inc
mov
push
rcl
aam
sub
add
sbb
mov
push
push
add
push
scas
loop
jns
mov
dec
lods
sbb
dec
push
adc
pop
(bad)
fsubr
adc
popa
mov
sub
ins
push
hlt
jp
cli
inc
retf
mov
jle
test
or
add
gs
int
loop
int3
gs
mov
pop
xchg
hlt
mov
movs
adc
pop
cmc
int
mov
cwde
scas
cwde
cdq
lods
movs
xor
or
xchg
das
dec
ins
or
ins
inc
or
dec
jmp
std
mov
test
lds
jae
mov
fwait
pop
cmp
add
and
sub
lods
mov
jp
mov
fld
mov
cmp
in
or
xchg
mov
dec
pop
enter
adc
(bad)
sbb
jns
sbb
lahf
xor
(bad)
cdq
xlat
repnz
loopne
or
int3
inc
adc
or
mov
test
cmp
lds
loope
lods
push
mov
push
jbe
shl
jl
mov
repnz
sbb
ret
cmp
jbe
dec
sbb
or
sub
fisttp
bound
xor
pop
xor
fldcw
pusha
scas
sub
in
inc
cmc
mov
push
inc
(bad)
not
pop
call
out
mov
cmp
add
lods
dec
cmps
push
dec
dec
xchg
mov
sub
test
and
cdq
push
loop
dec
and
adc
pop
shl
and
mov
pop
add
dec
movs
or
sub
xor
(bad)
std
pop
(bad)
dec
fcomp
retf
stos
mov
mov
ins
pop
bound
mov
idiv
sbb
jecxz
inc
int
mov
mov
mov
mov
mov
sbb
call
jns
adc
or
mov
mov
fild
cmp
jno
inc
add
out
xchg
mov
mov
jns
dec
inc
adc
xor
ret
cmp
out
and
daa
and
sub
enter
xchg
sbb
sbb
test
in
inc
pop
or
adc
or
mov
outs
mov
aam
into
push
add
test
jo
cmps
popa
cs
add
adc
gs
in
shr
cs
jle
data16
lea
ret
jmp
mov
add
(bad)
leave
sahf
shl
adc
adc
pop
lock
popa
call
scas
cmp
neg
add
xchg
push
xor
dec
into
fs
shr
jnp
int
into
imul
ins
imul
out
hlt
xchg
movs
sub
sbb
sbb
das
push
and
cmp
test
stos
jno
add
mov
mov
in
adc
jne
ins
fld
adc
add
add
aas
int
cmc
add
fsub
cmps
sub
bound
lahf
loop
daa
clc
(bad)
loope
dec
sbb
mov
loop
sub
dec
sub
cmp
jmp
loopne
popa
xlat
bound
lods
aaa
imul
add
mov
push
mov
jbe
jg
sub
(bad)
in
pusha
xor
add
xor
xchg
xor
jb
jno
cmp
call
push
sub
retf
pop
loope
cmps
leave
sub
push
or
mov
arpl
out
repnz
je
in
imul
fnstsw
push
push
cmp
cwde
pop
push
adc
mov
pop
cmp
dec
xor
les
cmp
or
or
out
das
(bad)
sub
pop
xchg
jle
xor
pop
movs
lock
jge
out
in
fwait
jns
ins
mov
jo
mov
fcom
aad
jecxz
(bad)
push
(bad)
adc
fs
mov
xchg
ret
push
adc
mov
xchg
adc
leave
test
fwait
shl
inc
cmc
add
(bad)
mov
mov
imul
jno
push
into
push
(bad)
aam
addr16
push
sbb
mov
ds
mov
lock
int3
push
jp
pop
mov
mov
imul
adc
in
ret
lahf
push
pop
pushf
aas
imul
dec
cmc
fnstenv
aam
lods
sbb
fistp
test
sub
or
lods
adc
add
jae
pop
mov
aam
xchg
loop
xor
add
popf
aas
and
dec
mov
call
sti
cli
out
arpl
fdiv
ret
pop
pop
call
movs
stos
push
nop
in
cmp
jns
sbb
sbb
xor
sar
mov
test
add
xor
add
test
sbb
inc
jmp
mov
sbb
dec
lods
or
add
movs
cwde
icebp
imul
ret
dec
popa
add
cmp
retf
movs
les
repz
pop
xchg
std
pop
lock
inc
outs
(bad)
mov
pop
mov
pop
into
repz
movs
pop
jae
rcr
adc
dec
sub
popa
mov
pop
pop
inc
pop
cmp
daa
cmps
cmp
test
cmp
mov
push
inc
sub
jb
sub
jo
shr
fldcw
fisttp
jo
adc
mov
sub
pop
sub
mov
sti
jne
repnz
bound
test
test
jb
loope
adc
push
les
mov
jo
into
test
or
xchg
mov
xor
lahf
(bad)
inc
or
shl
sub
lods
jecxz
inc
aaa
add
cmp
mov
imul
fadd
fwait
push
sar
jne
popf
das
dec
xchg
lods
loopne
call
xor
test
jns
pop
je
xchg
test
or
pusha
push
repnz
jns
inc
sti
pop
dec
test
out
stc
out
arpl
aas
and
jnp
add
jno
movs
fptan
push
push
sub
xor
cmps
mov
out
push
sub
popa
inc
inc
add
mov
fisttp
push
enter
sbb
push
loopne
dec
enter
mov
mov
push
mov
xchg
imul
outs
aam
and
mov
adc
mov
fisttp
push
push
shl
xor
dec
jns
xchg
leave
jp
inc
popf
push
cmp
movs
sbb
cmps
fst
mov
push
push
out
sub
arpl
jne
je
dec
xor
lds
out
push
add
mov
xor
mov
sbb
dec
adc
inc
test
cmps
and
push
aad
sub
xchg
and
jbe
inc
out
lds
mov
or
imul
pop
or
or
push
popf
scas
jb
add
clc
push
es
fisttp
shl
lods
in
in
je
and
popf
inc
mov
xchg
les
data16
shl
fstp
es
xor
add
adc
jecxz
ds
fsubp
dec
xchg
adc
push
(bad)
cmps
mov
clc
jmp
jmp
jbe
sahf
adc
je
adc
add
test
sbb
mov
or
push
inc
sbb
push
sbb
and
xchg
out
inc
mov
aaa
ficomp
pop
mov
popa
call
outs
(bad)
xchg
sbb
pop
in
addr16
or
sub
add
mov
es
inc
jl
in
jle
out
pop
adc
xor
sbb
call
pop
std
data16
add
loop
or
fsub
(bad)
js
gs
add
rcl
rcr
retf
mov
mov
xor
or
mov
out
sbb
mov
push
mov
mov
sbb
push
dec
add
(bad)
xlat
in
or
rcl
or
push
lods
mov
jl
pop
sahf
cs
fadd
imul
daa
cmp
fwait
pop
or
adc
or
aad
rcl
ror
lods
adc
les
add
cs
or
sub
retf
pusha
pop
or
mov
ss
sbb
rcr
cmp
daa
mov
inc
and
sar
inc
xor
dec
push
fild
jp
retf
xor
add
stos
(bad)
jo
retf
add
add
push
push
pop
pop
retf
ins
jne
aaa
xchg
sbb
or
jno
in
inc
ror
add
aaa
fstp
mov
push
mov
cmps
sub
cwde
jbe
lods
or
jae
aaa
stos
or
test
adc
je
add
icebp
mov
ins
js
xchg
cmp
mov
inc
enter
jne
(bad)
aaa
test
and
cli
out
and
cdq
push
pop
clts
arpl
repnz
repnz
jbe
xlat
out
sbb
add
dec
addr16
sahf
jns
mov
pop
and
lahf
pop
xlat
gs
ins
(bad)
jge
or
jp
cmps
sbb
mov
sub
xor
ja
js
(bad)
add
jns
scas
xor
mov
jge
adc
push
push
clc
into
push
sub
loopne
mov
adc
pop
leave
jnp
bound
cli
mov
dec
jg
lahf
mov
cdq
push
fs
(bad)
int
les
popf
int3
xchg
jne
sub
pop
test
sub
test
mov
sahf
fistp
movs
into
sub
add
or
mov
ret
mov
push
out
cmp
push
mov
cmp
retf
jp
pop
movs
add
test
hlt
movs
jp
shl
and
fidiv
xchg
stos
xchg
add
mov
and
add
mov
jne
mov
xchg
add
xchg
rcr
nop
cmps
cdq
pop
fisub
or
xchg
push
dec
sub
mov
jmp
sub
(bad)
push
fisubr
jb
mov
pusha
pop
push
das
xchg
jge
add
call
(bad)
adc
add
mov
fcmovb
add
(bad)
push
cmp
jbe
mov
and
movs
jne
mov
or
push
push
cmp
aad
fwait
in
adc
sbb
test
and
add
ret
(bad)
sbb
adc
xchg
or
nop
sbb
ja
inc
scas
lds
pop
jnp
mov
lea
add
xor
adc
and
daa
inc
jbe
sub
int3
add
xchg
xchg
sub
ret
add
mov
add
outs
fisubr
add
push
sar
jne
ret
lds
xchg
push
add
push
loopne
jg
mov
call
pop
lods
sub
xor
fist
mov
outs
pop
ret
mov
loop
mov
(bad)
dec
mov
call
mov
push
leave
ins
pop
pushf
xchg
and
cli
or
sub
inc
(bad)
(bad)
cmp
sub
test
(bad)
and
jbe
jns
cwde
mov
mov
mov
jns
pop
pop
push
inc
mov
cmp
movs
jne
aaa
imul
dec
dec
test
push
adc
adc
dec
mov
cmp
pop
sub
dec
daa
cmp
push
outs
fstp
aam
dec
(bad)
aas
add
fnstsw
sbb
inc
mov
lds
call
int3
ss
add
shl
xchg
add
xor
push
jns
repnz
or
stos
xchg
cmp
inc
mov
and
jb
lods
push
mov
js
or
and
adc
mov
mov
cmp
mov
div
push
and
cmp
sbb
pop
pushf
and
out
xor
shr
aas
dec
jns
push
js
mov
sub
sub
adc
loopne
pop
stos
stos
push
push
push
outs
pop
mov
jp
add
cmp
add
aaa
dec
cmp
and
adc
pusha
cmp
mov
jl
out
cmps
clc
adc
or
cmp
xchg
add
xor
xchg
cmp
test
add
aam
mov
call
out
bound
inc
test
shl
and
in
js
cld
cmc
mov
movs
stc
stos
dec
cmp
xchg
vphaddubw
xor
add
stos
mov
inc
sub
jmp
jno
sbb
gs
scas
sub
jne
int
popa
jns
cmp
push
mov
mov
cmp
repz
xor
sub
sbb
je
mov
xor
and
dec
jae
(bad)
call
ror
cmp
test
imul
mov
ins
fwait
shl
push
aas
jb
into
clc
scas
pop
test
sub
outs
test
(bad)
jmp
shr
clc
push
test
cwde
cmovno
adc
sbb
call
mov
aam
test
xor
hlt
xchg
pushf
inc
aas
js
(bad)
xchg
cmps
mov
and
je
push
repnz
out
sub
add
test
cmp
loope
pop
xor
sbb
push
stos
cli
jae
fistp
retf
sub
shr
setno
outs
xchg
push
ficomp
push
xchg
mov
popa
xor
jb
dec
pop
fsub
ds
icebp
mov
inc
es
pop
sub
mov
iret
stos
(bad)
in
mov
retf
inc
mov
push
pop
pusha
mov
jbe
test
icebp
fidivr
in
jg
inc
or
xchg
lock
dec
mov
loope
sbb
out
outs
jne
push
inc
add
mov
js
imul
inc
and
fild
mov
jl
and
dec
jg
les
(bad)
push
test
outs
push
test
ret
adc
popa
popa
je
sbb
outs
add
fisub
rcl
cmp
into
add
mov
mov
leave
jo
push
adc
mov
sub
pushf
add
pop
xor
sbb
stos
sahf
in
call
jae
daa
or
repz
xor
cmovl
adc
and
sbb
addr16
jp
mov
jmp
ficomp
lahf
adc
adc
mov
and
nop
sar
push
cmps
sbb
inc
dec
jo
and
clc
cld
add
shl
push
or
and
push
or
jbe
jno
shl
scas
rol
cmps
inc
and
outs
mov
dec
stc
daa
sub
mov
add
cli
cmp
(bad)
daa
jmp
sub
popa
sbb
cmp
and
pop
imul
and
inc
test
add
xchg
cs
mov
pop
lods
xchg
mov
ret
shl
push
inc
cmp
sub
aaa
fidiv
xor
jmp
test
mov
in
jecxz
sbb
mov
test
cld
pop
test
xchg
stos
enter
adc
rcl
sub
adc
mov
repz
mov
or
(bad)
xchg
and
cdq
cmps
es
imul
bound
jo
add
xchg
jp
add
test
adc
imul
mov
int3
cdq
xchg
adc
sub
inc
sub
or
xchg
mov
ror
mov
(bad)
xchg
jns
jno
push
pop
add
push
inc
fisubr
dec
pop
fsub
jns
mov
ins
cmps
stos
cld
shl
test
out
dec
xor
cmp
in
or
cmps
cmovbe
push
mov
movs
paddsw
icebp
push
mov
test
ror
mov
dec
ins
or
cmp
imul
adc
leave
add
sub
loope
cmp
dec
jmp
and
jo
enter
cmc
push
loope
and
sbb
jbe
shl
test
inc
(bad)
pop
xchg
pop
ja
or
fcom
inc
data16
lock
cs
add
out
jne
retf
mov
jg
xor
pop
mov
dec
adc
test
bound
add
scas
or
or
sub
call
pop
dec
push
js
or
inc
(bad)
clc
repnz
sub
fwait
stc
pop
(bad)
pop
sar
pop
push
imul
(bad)
in
dec
in
cmp
adc
mov
pop
popa
sub
ins
inc
lock
inc
fidiv
jb
dec
nop
mov
jns
punpckhwd
mov
pop
push
xchg
or
mov
lods
pusha
out
mov
add
retf
and
add
adc
pop
or
add
shl
xchg
(bad)
lods
leave
mov
jns
push
sbb
and
popf
sub
mov
pop
mov
sahf
lock
dec
xchg
repnz
jo
in
jl
and
pop
test
sbb
sub
int3
xchg
inc
fdivr
mov
retf
lods
push
pop
jl
cmc
push
cs
xor
add
xor
(bad)
xor
adc
and
fs
jl
xchg
cmp
test
push
push
pop
xchg
jmp
loope
sti
push
jle
push
fmul
cwde
or
addr16
xabort
mov
stc
sbb
out
sub
cli
fisttp
out
sbb
out
call
dec
jl
ss
jbe
xor
rcr
clc
fdiv
push
push
out
jle
aad
push
push
int
mov
dec
jbe
mov
out
sub
jb
aam
add
mov
mov
leave
dec
stos
push
xchg
push
imul
adc
pop
rcl
pop
cmp
mov
add
inc
movs
ins
scas
mov
fcomp
pop
cdq
pop
inc
inc
dec
iret
xor
std
sar
push
adc
mov
loop
pop
jne
sub
mov
mov
xchg
mov
inc
ficom
push
repnz
stc
adc
xor
int
cvttps2pi
inc
or
or
jne
mov
ins
ja
xchg
or
push
cmps
mov
xor
and
xchg
xchg
inc
in
das
adc
jb
xchg
int3
cmps
mov
sub
jbe
stos
fwait
cmp
retf
xor
movs
popf
sub
dec
push
cld
push
inc
test
jp
sbb
sbb
pop
sbb
imul
ins
push
jmp
mov
mov
jnp
xchg
call
ror
fisub
jns
imul
sbb
rol
cmp
cmp
sub
lods
(bad)
pop
jge
or
xor
das
jns
out
inc
gs
ss
fdiv
push
lds
out
out
call
or
xor
sub
push
daa
push
sbb
push
push
sbb
jbe
lahf
repnz
sbb
sar
aam
push
das
mov
xor
movzx
push
add
in
fisttp
loop
ins
sahf
rcr
pop
iret
jmp
(bad)
adc
adc
sbb
inc
test
aam
cmps
mov
dec
inc
gs
add
int
scas
aaa
jns
out
dec
das
pop
mov
jmp
mov
jp
and
sbb
ficomp
cld
imul
cmps
cmp
int3
in
mov
rcr
out
adc
pop
add
xor
xlat
je
das
pop
add
ret
pextrw
push
or
cdq
push
inc
sub
fwait
add
loopne
movs
pop
sub
rcl
mov
neg
sub
cmp
xchg
cmps
mov
fsub
dec
mov
or
sub
xchg
push
jns
jnp
adc
(bad)
std
fdiv
test
adc
not
xor
pop
shl
pop
dec
cmp
xchg
das
inc
data16
(bad)
xchg
pop
inc
jp
xchg
push
addr16
adc
inc
cli
pop
dec
popa
int
pop
call
inc
mov
mov
pop
xchg
mov
push
(bad)
lock
aad
(bad)
push
aam
pusha
xor
movs
in
sub
out
lods
ds
call
loop
cmp
mov
pop
mov
pop
adc
cmp
jbe
pop
nop
pop
inc
pop
inc
add
neg
(bad)
fsub
cdq
pop
jp
jl
test
dec
jmp
push
daa
add
mov
rol
mov
aaa
push
pushf
pop
sub
repnz
cdq
adc
sbb
sub
mov
xor
cmps
movs
retf
pop
fisubr
pusha
mov
add
mov
xchg
jne
or
jp
mov
push
add
pop
outs
xchg
pusha
add
retf
inc
bound
push
mov
(bad)
sbb
cwde
jecxz
pop
pop
xor
les
cli
loop
pop
js
pop
inc
push
and
sbb
cmps
add
fs
inc
sub
adc
js
sbb
scas
xlat
pop
add
fs
sub
scas
dec
neg
jmp
stos
xchg
lods
ins
call
push
inc
ror
mov
(bad)
xor
add
in
les
mov
imul
or
mov
push
or
and
and
fcomp
(bad)
out
cmp
out
xchg
ins
mov
cmp
loop
shr
jnp
mov
xor
adc
and
xor
jns
out
rcl
ret
sti
mov
add
mov
sub
int3
inc
nop
dec
mov
loope
aas
mov
push
pop
fdiv
pop
sbb
test
add
adc
test
aas
jnp
xor
mov
ficom
sbb
das
xlat
pop
dec
jmp
or
pop
popa
repz
ss
add
push
fiadd
sub
jge
les
test
dec
mov
jmp
push
pop
xchg
push
push
mov
ss
and
ret
setns
sbb
mov
stc
retf
push
mov
add
mov
push
scas
push
or
or
inc
movs
shl
sahf
pop
stos
stc
bnd
repz
inc
mov
(bad)
sbb
cwde
adc
sbb
mov
push
push
pushf
push
cmc
cmps
dec
lea
jl
jp
dec
jl
fiadd
les
mov
pop
jo
movs
pop
mov
sbb
sub
jbe
adc
fs
ret
adc
call
dec
sbb
repz
sbb
sub
rcl
ret
sbb
jmp
xor
add
mov
ss
cmp
and
shl
aad
outs
push
sbb
cmc
inc
add
mov
inc
repz
aas
add
fsubr
jbe
jbe
lods
ret
lea
loop
out
mov
inc
rcl
dec
adc
mov
push
je
adc
push
jmp
add
xchg
(bad)
fld
sub
xor
fisubr
stos
cdq
pop
cdq
push
xor
leave
jb
(bad)
idiv
and
adc
loope
ds
or
rcl
dec
mov
adc
(bad)
pop
push
sbb
arpl
outs
subps
pop
mov
clc
inc
lods
pop
inc
jg
adc
cmp
sbb
mov
xor
mov
inc
arpl
shl
xor
mov
bound
gs
or
pop
out
or
sub
out
inc
das
and
retf
in
xor
push
xchg
pop
nop
out
in
add
push
leave
xchg
jne
int
fld1
mov
push
xchg
mov
out
lock
pop
pop
add
pop
pop
mov
es
inc
xor
fdiv
push
and
push
inc
cwde
mov
add
adc
bound
mov
mov
sub
add
dec
fisttp
mov
push
sbb
adc
retf
inc
loop
push
retf
mov
adc
jae
aad
sbb
sub
inc
inc
adc
push
fdivr
xor
stos
shr
jmp
aam
imul
mov
js
mov
inc
pop
movs
mov
jb
xor
sbb
sub
mov
jmp
xor
in
leave
loop
fs
xlat
mov
jbe
nop
pop
jns
push
cmc
(bad)
inc
retf
push
sti
out
test
dec
jns
mov
jp
loopne
cmp
add
test
gs
xchg
or
pop
push
(bad)
and
fsubr
adc
cld
ret
test
add
ror
arpl
mov
xor
ja
lods
imul
push
lods
jo
push
aaa
add
(bad)
mov
adc
xchg
clc
lahf
call
loop
mov
push
cmp
std
xchg
je
adc
pop
repz
adc
repz
js
or
js
adc
(bad)
icebp
sub
in
and
sub
icebp
cmp
icebp
or
ins
sbb
mov
jle
and
xchg
pop
arpl
sub
dec
stc
cmps
test
adc
jae
(bad)
lock
mov
ins
not
xchg
stos
and
les
icebp
add
cmp
shl
sub
jne
mov
mov
jl
mov
inc
sub
cdq
(bad)
mov
sub
jecxz
jnp
dec
stos
pop
cmp
mov
lock
sub
sbb
rcr
xchg
sbb
xor
dec
movs
jmp
sub
push
push
sbb
in
inc
pop
mov
pusha
mov
adc
push
sbb
xchg
out
pop
nop
cs
pop
rol
arpl
ret
arpl
pop
fsub
mov
push
arpl
daa
adc
xchg
aad
adc
mov
pop
mov
movs
mov
loopne
xchg
imul
outs
aad
jmp
cs
inc
icebp
jl
stos
xchg
fs
cmp
and
push
sbb
mov
adc
test
cmp
ror
scas
not
cmp
stos
retf
out
sub
mov
add
mov
jne
xor
into
push
lahf
pop
add
stos
sub
xchg
lods
xor
rol
and
call
out
sbb
sub
push
out
scas
cmp
lods
data16
cmps
or
jne
inc
sbb
jecxz
sbb
test
movs
sbb
mov
adc
icebp
add
mov
scas
xor
je
icebp
sbb
mov
(bad)
xor
adc
or
in
jp
repz
push
bound
movs
pop
xor
(bad)
push
fadd
pop
call
or
sbb
enter
mov
inc
outs
push
adc
call
push
test
mov
dec
xchg
mov
mov
test
scas
test
add
clc
push
imul
inc
movs
dec
(bad)
dec
pop
ja
test
and
scas
ficomp
jp
jge
aam
test
inc
dec
or
cmps
adc
out
xchg
daa
mov
iret
ss
cwde
pop
jo
push
sub
dec
mov
ins
push
scas
sub
jbe
aad
adc
mov
pop
(bad)
mov
sbb
mov
aam
or
rol
pop
sahf
int3
imul
dec
dec
test
(bad)
cli
inc
test
jmp
dec
mov
pop
int3
test
xor
les
xor
bound
ror
adc
lods
push
or
add
pop
cwde
shl
lea
xlat
push
push
mov
retf
ins
adc
jge
pop
mov
push
or
pop
cmp
je
(bad)
push
or
shl
outs
test
popf
mov
xor
xchg
aaa
inc
cdq
mov
jae
dec
int
lods
mov
jmp
jecxz
pop
dec
add
out
inc
loop
pop
inc
jle
xchg
xchg
js
add
out
push
cmp
int3
push
hlt
neg
and
pop
les
add
or
jb
lahf
fisttp
xchg
lahf
or
pop
adc
push
(bad)
stos
stos
xor
mov
cmp
repz
stc
sets
inc
sub
lea
dec
xor
sub
adc
nop
rcl
push
ins
or
pop
push
inc
aad
add
mov
fisubr
push
mov
cmc
jae
ror
mul
jge
push
xchg
lds
jl
test
fucomp
std
dec
sub
add
xor
inc
jmp
dec
or
inc
mov
push
nop
pop
xchg
jne
stc
(bad)
popf
cmp
out
popf
adc
xor
inc
inc
out
lds
mov
rcr
or
push
retf
fidiv
mov
mov
and
fld
inc
pop
sub
mov
pop
xor
inc
fucomi
or
adc
aas
loope
test
movs
int3
sbb
pop
retf
inc
pusha
ficom
inc
iret
stos
test
push
fld
xlat
dec
cmc
repz
int
in
pushf
ja
fist
test
aas
ficomp
es
sahf
push
fist
popa
in
icebp
inc
outs
adc
in
es
add
shl
push
or
mov
es
inc
push
mov
sti
xchg
sub
adc
xor
xchg
daa
mov
data16
nop
jae
enter
or
ss
adc
cmp
int3
jno
mov
jecxz
cwde
sbb
inc
mov
push
mov
xchg
pop
into
inc
jno
rdtsc
jmp
push
call
adc
dec
add
or
movlps
xchg
(bad)
add
cmp
clc
inc
fidiv
(bad)
xor
leavew
jge
ret
xor
cmp
inc
mov
ret
mov
jecxz
es
add
jae
jmp
jmp
push
xchg
jl
or
or
cmps
fs
push
popa
sar
pusha
cmp
ins
or
lods
push
mov
gs
pop
out
in
repz
mov
pop
jne
and
jp
imul
out
cmps
lea
scas
mov
push
jmp
(bad)
jnp
push
lods
sbb
retf
scas
xchg
push
pop
jno
ret
adc
js
sbb
gs
jae
loop
jecxz
jb
es
es
mov
(bad)
lock
mov
jge
cmp
(bad)
jge
xchg
sti
fild
ja
and
pop
adc
xor
jae
xor
lods
sbb
mov
mov
imul
mov
and
sbb
jns
jle
mov
in
mov
call
xchg
fmul
adc
test
scas
sub
scas
jl
mov
xchg
ins
sub
pusha
sti
mov
mov
jmp
mov
jo
stc
nop
dec
mov
sbb
xchg
sub
add
pop
xor
cwde
imul
xchg
adc
lods
popa
test
push
shl
sub
fs
data16
pop
mov
adc
sub
sub
mov
xor
push
(bad)
jo
mov
adc
jae
xor
push
pushf
stos
add
repnz
mov
adc
xchg
fwait
push
cmp
ror
push
dec
jle
xchg
jecxz
retf
inc
or
or
sub
jmp
in
jp
mov
mov
push
bound
test
cmp
shr
pop
out
jb
cwde
jnp
push
std
push
call
mov
out
cs
mov
mov
rol
cdq
pushf
in
and
add
mov
sub
test
out
test
sub
sbb
push
pop
add
jb
lahf
xchg
loop
ret
inc
gs
(bad)
repnz
push
stc
xor
cmps
js
dec
pop
pop
xor
xchg
cmp
shr
hlt
data16
cmp
or
sub
scas
repnz
inc
(bad)
repnz
jmp
out
call
repnz
dec
xchg
jne
imul
sub
daa
or
push
nop
aaa
jmp
push
dec
mul
(bad)
iret
addr16
ss
and
aaa
jns
std
inc
outs
push
jmp
inc
cld
mov
sbb
pop
mov
in
sbb
shl
adc
sbb
stc
dec
jno
mov
inc
jns
and
(bad)
enter
pop
push
xor
or
movs
nop
add
sub
adc
jl
sbb
out
add
mov
sub
jns
cmp
pop
repz
int
lea
xor
sbb
inc
xlat
fld
cmps
sub
imul
dec
xor
add
fadd
pop
enter
aad
ret
xlat
sub
or
in
pop
push
sar
int3
test
add
jmp
xor
repnz
jnp
sub
adc
es
ficom
aad
fcomi
pop
cs
pop
(bad)
xor
xor
inc
sub
push
sbb
add
sub
fld
in
jno
adc
add
mov
dec
fimul
inc
xor
les
dec
inc
sub
faddp
je
fdiv
and
and
add
jb
das
mov
out
add
dec
pop
loope
cmp
mul
jo
shl
shr
repnz
cmps
xor
outs
sbb
xlat
add
ins
out
add
ficom
adc
sub
inc
pop
jmp
xchg
or
sub
shl
(bad)
repz
lds
jge
repnz
xchg
shr
enter
cld
add
and
scas
test
mov
(bad)
int
(bad)
out
aad
or
ss
sub
inc
add
sbb
fs
pop
nop
sar
cmc
and
fwait
icebp
sub
mov
cli
inc
and
mov
lar
adc
mov
in
xchg
mov
pop
sbb
das
aam
add
cwde
pop
test
outs
scas
stc
xor
outs
cmps
icebp
xchg
dec
push
sbb
mov
jno
xor
aam
push
movs
call
cmp
push
lods
mov
je
inc
(bad)
movs
lahf
push
fimul
fild
sub
pop
fcomp
pop
in
in
xor
div
cmp
cmps
mov
pop
fucomp
mov
rol
mov
shr
ins
pop
in
fisttp
dec
dec
push
jb
dec
cmp
cwde
loop
inc
add
push
inc
jbe
mov
retf
retf
mov
inc
mov
les
dec
popf
gs
adc
pushf
ret
xor
sbb
outs
push
and
xchg
fstp
icebp
mov
loop
and
sub
icebp
jle
enter
jp
in
arpl
push
sub
fdivp
retf
cmp
enter
cmp
fnstcw
std
xchg
mov
dec
lahf
pop
neg
cmp
int3
scas
paddsb
cld
inc
ins
call
inc
das
sub
repnz
aas
(bad)
or
sub
ror
xor
mov
cmp
hlt
cmp
push
mov
push
jnp
pop
mov
lds
sbb
push
and
pop
cmp
mov
lods
xchg
add
mov
push
mov
adc
mov
or
inc
cwde
inc
mov
and
pop
js
inc
stos
adc
pushf
xchg
movs
into
xchg
mov
aad
pop
in
jle
xchg
push
movs
pop
cs
int
cmp
xchg
scas
popa
jecxz
push
xor
es
int
out
dec
out
repz
int
mov
pop
iret
popa
retf
(bad)
retf
inc
or
cmp
inc
lods
je
sar
mov
push
jl
int
xchg
loop
(bad)
fwait
stc
sub
dec
sar
sub
add
cdq
mov
and
push
xchg
ror
aad
and
push
sahf
psrad
(bad)
es
(bad)
xchg
xchg
jle
retf
scas
ss
fstp
mov
data16
cwde
lods
xor
jae
imul
daa
les
mov
mov
movs
popf
push
xor
fwait
rcr
mov
retf
xor
dec
aas
sub
sbb
mov
mov
xchg
pop
test
sub
jae
iret
mov
mov
mov
sahf
cmp
mov
dec
jne
pop
pushfw
sub
push
popf
jecxz
mov
jp
fwait
xor
ins
clc
inc
mov
data16
int
pop
xor
jae
push
jb
and
data16
das
adc
movs
lods
(bad)
mov
push
cmp
jl
cdq
cmp
mov
mov
outs
inc
rcl
js
sub
sbb
into
or
adc
lock
icebp
xor
in
loope
movs
inc
xchg
add
(bad)
and
(bad)
aaa
adc
jge
cmc
adc
gs
scas
movs
push
xor
fdivr
dec
mov
cld
lea
call
retf
stc
cmp
scas
rcl
outs
retf
movs
fcom
or
pop
jp
and
inc
pushf
stc
dec
push
jl
sbb
rcl
cmp
pop
pop
iret
and
(bad)
in
mov
in
ins
xor
inc
add
cwde
into
sbb
nop
jae
sti
push
in
dec
enter
pop
stc
sub
jmp
daa
jmp
jmp
inc
ret
mov
out
int
push
push
add
(bad)
shl
push
inc
call
rcr
in
inc
jp
test
fstp
dec
popa
dec
je
mov
stc
pop
mov
outs
push
pop
push
mov
fmul
mov
dec
inc
shr
sbb
add
push
ret
adc
cmp
cmc
sbb
test
add
(bad)
fst
cmc
retf
ds
in
push
std
jg
outs
(bad)
mov
jl
add
push
sbb
popf
in
popf
outs
sbb
js
adc
mov
lahf
adc
lods
push
sub
arpl
int
adc
in
ins
dec
cli
lea
xor
pop
ins
fs
push
push
push
fdivr
enter
mov
dec
repnz
and
sahf
adc
pop
sti
fwait
not
bound
xchg
inc
sbb
dec
lea
lea
fisubr
es
(bad)
push
sub
jb
enter
fnstsw
lods
mov
inc
mov
jmp
lods
sbb
das
in
je
pusha
sub
lea
fdiv
sbb
mov
out
retfw
div
add
sti
into
add
ins
into
mov
lods
adc
push
stos
int3
mov
xchg
test
adc
repnz
aam
push
scas
out
dec
mov
and
mov
jmp
dec
mov
xchg
outs
not
push
add
pusha
outs
dec
addr16
js
push
mov
adc
push
push
sar
adc
dec
in
out
inc
sbb
je
int
in
sbb
cmps
shl
jmp
sbb
pop
and
push
test
hlt
test
push
add
mov
ret
and
ins
inc
push
jmp
int
clc
add
test
jbe
inc
push
mov
(bad)
and
mov
mov
ficom
or
fs
mov
sbb
xchg
jns
je
pop
or
or
mov
and
add
sbb
jnp
test
mov
or
(bad)
jl
hlt
push
fcomp
mov
mov
push
daa
movs
imul
rol
mov
inc
mov
cli
or
jecxz
adc
cdq
add
std
enter
dec
nop
cmp
stos
test
adc
pushf
rol
loope
xchg
pop
pop
rol
mov
adc
pop
dec
sbb
mov
ss
xor
in
pop
cwde
xor
cmp
inc
jmp
push
pop
jmp
xor
mov
retf
add
in
into
(bad)
jb
ja
xor
mov
call
repz
dec
mov
sbb
push
inc
das
xor
scas
dec
add
scas
addr16
add
adc
add
add
add
add
add
add
add
add
adc
add
and
adc
and
inc
adc
push
push
inc
push
push
(bad)
fiadd
or
add
add
add
cmc
push
jle
cmc
mov
jns
mov
stos
jo
mov
cld
inc
cmp
sbb
jae
retf
mov
cli
ffreep
cmp
xor
add
add
(bad)
test
leave
jl
push
enter
xchg
jmp
adc
cmp
ret
lds
push
cmps
daa
adc
xchg
(bad)
pushf
inc
add
pusha
cmp
sahf
inc
inc
mov
xchg
pop
dec
and
bound
push
sub
pop
add
push
push
sbb
sub
mov
arpl
inc
xchg
cmp
pop
pop
cwde
fidivr
inc
cld
int3
xor
sub
dec
xchg
frstor
jnp
pop
xchg
lods
ins
rol
mov
add
jae
stos
adc
adc
adc
adc
adc
adc
adc
adc
push
fadd
ins
out
sbb
(bad)
or
dec
cmp
popf
sbb
(bad)
loopne
lea
mov
loop
dec
jp
fld
fmul
jle
and
mov
mov
arpl
mov
pop
xor
xchg
out
test
adc
aam
cmps
fistp
mov
out
pop
mov
xchg
iret
mov
in
mov
pop
mov
add
rcl
lods
jo
add
add
lock
test
mov
sar
into
inc
sti
fist
repnz
and
and
into
loope
cmp
mov
dec
xchg
outs
sub
in
popf
ins
push
js
movs
xlat
adc
xor
jo
pop
fstp
loope
cmp
cmps
les
in
neg
push
scas
jp
or
imul
add
arpl
inc
ficom
pop
and
mov
mov
dec
xchg
adc
xchg
mov
cmc
pop
inc
inc
pop
dec
cmp
in
out
mov
mov
(bad)
fdecstp
les
movs
ret
out
(bad)
in
lahf
ins
inc
enter
mov
cdq
cdq
xchg
cmp
int3
int3
int3
cdq
xchg
xor
xchg
aaa
dec
shl
ret
jmp
nop
cmc
pop
js
jp
xor
xor
mov
pusha
dec
dec
dec
dec
dec
dec
inc
es
cwde
out
pop
inc
inc
mov
leave
popf
out
inc
pop
stos
xlat
call
mov
mov
jmp
(bad)
scas
sub
jns
push
jns
jno
jecxz
sub
sbb
enter
and
imul
mov
sbb
push
xor
jo
mov
les
mov
xchg
mov
lods
pop
pop
not
data16
stos
(bad)
scas
addr16
ins
sar
mov
jp
out
add
inc
inc
sbb
mov
jmp
mov
xor
cmps
pop
push
pop
ins
(bad)
pusha
cmp
jns
cmp
dec
enter
aam
(bad)
scas
and
jbe
out
loope
enter
cli
mov
mov
inc
cmc
adc
test
test
xchg
adc
dec
jle
inc
stos
movs
push
or
(bad)
push
cli
in
pop
pop
jb
in
mov
dec
scas
stos
stos
sbb
shl
sbb
(bad)
ficomp
and
ret
pop
jne
mov
pop
jnp
and
dec
jp
mov
xor
fisub
stc
xor
movs
ja
mov
adc
push
cmp
pushf
jns
and
push
or
mov
and
addr16
out
cdq
jge
stos
ja
movs
mov
mov
mov
les
retf
add
test
pop
xor
hlt
xchg
add
add
push
adc
cmp
inc
add
shl
mov
add
push
ds
dec
cmps
ret
into
test
cdq
shl
cmps
shl
fwait
dec
fwait
dec
lea
xor
rcl
dec
sar
sbb
adc
lea
rcr
(bad)
cmp
dec
out
add
rcr
daa
(bad)
or
(bad)
adc
cmp
and
cmp
out
int3
fisttp
or
or
mov
mov
add
addr16
inc
stos
ins
(bad)
inc
repz
nop
test
sahf
lock
jecxz
mov
fwait
inc
repnz
mov
mov
cmp
lahf
stos
fistp
push
adc
and
jbe
mov
mov
pushw
int
icebp
add
cmp
xor
popa
lods
in
add
push
sub
inc
fstp
out
js
je
iret
dec
stos
mov
pop
xchg
les
fisubr
test
dec
push
out
add
(bad)
outs
(bad)
fdiv
push
xor
mov
in
inc
and
ins
inc
pop
hlt
mov
ds
lods
(bad)
lods
bound
jae
xchg
in
jle
or
icebp
mov
push
(bad)
test
inc
mov
sbb
addr16
dec
movs
or
mov
mov
imul
cmc
mov
lods
push
iret
or
loope
fisub
into
ret
and
push
sbb
loope
inc
fadd
or
sub
fmul
mov
xor
xor
test
xor
jnp
xchg
cmps
imul
pop
adc
push
mov
ins
push
mov
sub
pop
push
not
pop
fidivr
mov
push
inc
jb
call
jno
aad
sub
mov
push
bound
sar
or
push
jb
push
mov
xor
test
sub
jmp
xchg
enter
aam
int
arpl
push
dec
psubb
retf
jg
enter
or
test
aam
mov
mov
test
(bad)
add
(bad)
mov
out
clc
ins
aam
ins
aam
outs
mov
pcmpeqw
add
(bad)
sub
icebp
or
adc
es
fdiv
out
mov
pusha
cld
pop
outs
ret
mov
dec
or
mov
fdiv
(bad)
pop
dec
and
imul
push
sbb
ins
sti
call
push
rol
sbb
sbb
sub
stc
cmp
mov
and
pop
pop
add
data16
aam
adc
inc
mov
mov
fmul
mov
sub
xor
fdiv
popa
jge
cmp
push
movs
mov
pusha
cmps
cmp
dec
jg
adc
nop
sbb
inc
cmp
mov
fld
adc
cli
pop
(bad)
xchg
jp
jne
jmp
(bad)
adc
popa
cmp
jne
jmp
xlat
scas
or
rcl
mov
push
lahf
sub
mov
ss
add
xor
cmp
cmp
sub
sub
addr16
pop
lea
adc
fsubr
imul
mov
or
sub
dec
push
lds
mov
mov
or
push
sbb
adc
fwait
addr16
addr16
aas
in
pushf
dec
ins
aad
xor
outs
test
imul
cdq
in
jg
push
cmp
imul
mov
pop
push
push
or
mov
js
push
fadd
inc
xor
cmp
loop
add
ret
mov
cmps
imul
sub
ds
(bad)
shl
push
adc
mov
cli
lods
cmp
lods
rol
lock
retf
mov
pop
(bad)
lock
dec
pop
pop
jno
addr16
cmp
fs
cmp
repz
push
pop
out
es
sahf
lock
not
in
push
call
fwait
mov
cmp
push
cmp
mov
xchg
mov
in
dec
push
mov
pop
mov
pushf
inc
xchg
xor
xor
xchg
imul
and
adc
ja
imul
loop
repz
push
imul
xchg
xor
mov
popf
jbe
and
xchg
xor
inc
int3
int3
push
add
xor
outs
mov
dec
jmp
and
adc
adc
mov
inc
rcr
xor
or
lods
fnstcw
and
add
adc
fadd
es
out
xor
or
dec
and
nop
pop
dec
or
mov
popa
repz
fisub
leave
test
retf
leave
adc
arpl
xchg
xchg
pop
nop
inc
loop
iret
rcl
push
imul
xor
test
mov
iret
fdiv
or
addr16
and
iret
push
sti
test
jle
inc
adc
cli
jg
les
xor
add
add
push
or
add
add
add
add
add
adc
xor
lock
inc
popa
adc
ret
xor
jo
(bad)
fiadd
or
add
or
add
out
inc
mov
icebp
adc
adc
adc
adc
adc
jle
test
in
mov
jmp
mov
mov
repz
clc
inc
or
mov
mov
cdq
push
fdivr
push
xchg
sbb
ret
mov
cwde
enter
repz
ret
das
jb
int3
ja
cmc
dec
jo
loope
pop
ror
cmps
jnp
pop
test
iret
stos
mov
mov
or
push
mov
pop
std
adc
aad
xchg
jg
ins
arpl
sar
(bad)
loop
pop
ja
and
outs
in
pop
arpl
fldln2
fstp
pop
in
rcr
fst
aad
aas
cmovne
into
fnstcw
(bad)
xor
inc
fwait
sbb
dec
in
cmp
mov
inc
xchg
shr
pop
fbstp
mov
ja
inc
xor
lods
out
into
jp
clc
mov
and
push
xchg
lea
jecxz
jae
outs
imul
push
lds
mov
xchg
push
mov
sar
mov
sbb
inc
inc
inc
(bad)
mov
iret
mov
stos
scas
push
repnz
sahf
aas
int
mov
fwait
aam
out
test
pop
mov
in
inc
ror
mov
sti
or
icebp
jnp
mov
dec
push
push
inc
cmp
and
mov
adc
inc
aam
(bad)
pop
cld
xchg
out
adc
cld
or
clc
adc
add
imul
std
lea
bts
ins
jae
cmps
pop
bound
rcl
xor
dec
and
loopne
sar
jmp
push
cmp
sub
jle
test
cs
into
dec
mov
adc
aam
test
inc
inc
and
movs
and
push
and
push
push
xchg
or
nop
jne
and
xor
add
jmp
jmp
or
and
xchg
or
jge
inc
sub
outs
repnz
xor
inc
in
mov
stos
jnp
sbb
and
dec
push
scas
inc
sar
sbb
sti
fld
push
out
adc
pop
mov
jb
jne
out
xchg
(bad)
sub
fist
cmp
mov
neg
fstp
das
outs
shl
and
clc
adc
jno
mov
or
pusha
retf
in
pop
inc
cli
push
test
and
or
pusha
xchg
out
lahf
outs
outs
ja
sahf
jae
fistp
into
jnp
xchg
and
loope
fistp
xchg
mov
push
mov
jecxz
outs
sub
inc
mov
push
cmc
scas
shr
popa
dec
hlt
pop
fdivr
das
(bad)
and
push
test
ror
add
add
add
add
add
add
add
add
add
adc
xor
and
and
inc
push
push
inc
inc
adc
or
add
add
add
aad
jle
repnz
jg
jns
arpl
add
icebp
fldcw
and
repz
xchg
aaa
mov
cmp
test
pop
scas
and
jo
dec
sar
push
in
popf
ret
jns
mov
fdiv
aam
mov
cwde
or
inc
jmp
mov
inc
mov
(bad)
outs
jo
fucomip
retf
daa
es
xchg
adc
inc
movs
lahf
bnd
dec
shl
aaa
add
pushf
push
and
add
sar
push
xor
jg
jmp
clc
xor
les
ret
repnz
das
adc
sub
adc
push
pop
mov
jg
std
xor
mov
xchg
dec
sbb
pop
xor
xor
adc
adc
iret
push
les
arpl
and
jbe
push
call
inc
cli
pusha
(bad)
popa
inc
and
push
bound
lods
push
out
imul
imul
jno
into
cmp
das
popa
es
jmp
(bad)
imul
in
cs
test
and
pop
movs
xlat
or
add
popa
fs
cmp
sbb
xchg
rcr
xchg
xchg
rcr
sbb
jmp
ret
xchg
push
and
mov
in
cmp
inc
adc
mov
cmp
jle
and
push
leave
fst
xor
inc
adc
dec
imul
lea
mov
jle
dec
add
jmp
jle
and
push
leave
fst
std
mov
push
ret
enter
test
sub
lods
jmp
movs
imul
or
or
xchg
dec
jecxz
(bad)
mov
push
mov
mov
mov
push
sbb
and
pop
mov
bound
dec
outs
and
out
out
pop
fs
in
or
dec
in
or
das
das
sub
int
mov
sub
outs
sbb
mov
mov
jle
sub
pop
fdivr
inc
pop
xchg
or
mov
inc
in
xchg
fs
jecxz
or
test
and
mov
nop
dec
lock
or
lds
push
fdiv
arpl
push
mov
sub
popf
test
xor
dec
sbb
push
fcomp
fcomp
adc
mov
mov
mov
sub
adc
add
pop
mov
adc
(bad)
sub
or
nop
retf
pop
inc
call
fstp
inc
push
mov
sbb
mov
xor
xor
fwait
inc
popa
jae
out
jb
gs
test
xor
pop
loope
dec
sub
add
mov
loope
push
sahf
jmp
in
xchg
push
cmp
xchg
in
push
mov
fcomi
inc
xor
out
add
repnz
stos
pop
xor
dec
arpl
xchg
sub
inc
test
push
loopne
icebp
sbb
arpl
mov
push
sbb
ror
add
and
inc
adc
dec
or
pop
cwde
out
stos
or
dec
retf
sbb
das
push
pop
xchg
sub
jle
dec
push
pop
mov
sub
mov
mov
inc
bound
sub
aam
mov
inc
pop
xlat
sbb
dec
xor
into
mov
movs
dec
xchg
test
push
xchg
sbb
sbb
retf
push
mov
(bad)
dec
jnp
sahf
movs
pop
mov
mov
and
mov
(bad)
cwde
sub
push
and
test
inc
dec
lea
sub
inc
aam
sbb
movs
jle
push
(bad)
cmp
repz
pop
jno
push
int3
mov
mov
mov
imul
push
sar
or
mov
es
aas
out
cli
lea
sub
cwde
adc
fwait
sbb
lods
add
jo
xchg
push
adc
ret
das
or
inc
sbb
dec
aad
mov
or
cmp
mov
leave
or
jb
pop
out
iret
sub
and
ret
sbb
push
mov
add
int
in
shr
call
xor
(bad)
into
(bad)
mov
outs
imul
mov
inc
inc
es
hlt
pop
stos
dec
ror
cmp
dec
call
adc
into
ret
shl
pushf
mov
mov
and
jbe
pop
arpl
out
or
cdq
int3
jl
jae
lods
sbb
mov
mov
ins
shr
das
xchg
sbb
xor
call
addr16
mov
sub
inc
icebp
sar
jae
or
je
mov
or
cmp
arpl
dec
shl
mov
xor
or
and
adc
fwait
lea
addr16
mov
add
adc
xlat
or
(bad)
ss
dec
fsub
movs
jo
movs
inc
ds
dec
das
stos
hlt
inc
pop
dec
in
in
int3
mov
into
shr
dec
push
push
dec
add
ret
lods
sbb
(bad)
cmp
xchg
or
xor
mov
inc
xchg
cmps
xchg
int
dec
(bad)
or
xor
mov
sar
dec
leave
add
test
test
enter
aaa
outs
push
pop
test
ins
pop
pop
aam
pop
je
xor
sbb
rcr
imul
lods
pop
cli
mov
mov
daa
mov
mov
icebp
mov
call
sub
inc
add
fidiv
pop
stc
sub
and
(bad)
std
cwde
popa
movs
cmp
jge
jns
xchg
int
cs
pop
xchg
cmc
or
outs
rcl
(bad)
mov
mov
add
push
(bad)
mov
dec
scas
xchg
pop
and
adc
dec
scas
cdq
pop
and
mov
cmp
push
ret
cmp
mov
(bad)
lahf
sub
xchg
sar
nop
repnz
inc
xchg
pop
add
adc
xchg
lea
std
ror
add
and
sbb
push
ret
movs
or
mov
xchg
jmp
add
call
jecxz
cwde
push
mov
imul
or
(bad)
sbb
xchg
retf
gs
pop
ret
or
dec
ss
xchg
xchg
dec
jo
shl
inc
aad
dec
loopne
pop
retf
scas
imul
or
mov
inc
call
call
imul
out
inc
stos
or
xchg
push
and
rcl
mov
add
in
pop
bound
mov
imul
lods
sub
ret
sbb
xchg
leave
xor
push
sbb
or
mov
push
test
aaa
add
jno
jmp
lahf
sbb
mov
je
adc
cmp
xchg
(bad)
jno
mov
stos
aam
xchg
xor
dec
add
repnz
mov
das
push
sub
mov
fcomp
pop
mov
push
mov
sub
mov
stos
pop
stos
push
stos
sub
adc
or
cmps
stc
or
cmps
or
lods
int
retf
test
mov
mov
and
sub
mov
pop
adc
loope
xchg
cmp
mov
inc
ss
xor
mov
les
imul
test
jge
sub
mov
lods
push
enter
lock
mov
mov
in
mov
sub
add
adc
enter
adc
in
add
(bad)
les
xor
add
add
add
push
add
add
add
add
add
add
adc
and
and
xor
jno
mov
xor
(bad)
fiadd
or
add
or
add
add
fist
pop
pop
inc
movs
sbb
fidiv
or
pop
dec
test
das
test
ror
(bad)
bnd
aaa
dec
or
adc
mov
mov
push
push
scas
mov
fidiv
push
cmps
ins
lods
jge
les
xor
in
pop
adc
mov
push
xchg
neg
enter
inc
ret
fdivr
add
push
scas
inc
inc
sub
mov
pop
pop
leave
loope
lods
mov
ja
adc
lods
fdivr
jne
mov
cmps
adc
mov
call
cmp
and
pop
xchg
xor
adc
inc
xchg
lahf
adc
fadd
fwait
lods
aam
pop
mov
cmc
fwait
push
ret
stos
xlat
pop
hlt
hlt
mov
loope
cmp
test
push
movs
scas
or
push
lods
hlt
std
jb
inc
push
fbstp
mov
jns
push
shr
(bad)
repnz
lds
dec
push
nop
add
hlt
test
mov
out
aam
cmp
mov
out
push
inc
adc
test
dec
pop
xor
outs
adc
or
call
jnp
add
out
ror
loope
enter
xchg
pop
jl
xor
inc
pop
adc
pop
mov
mov
mov
and
xchg
adc
mov
push
ins
mov
fild
xor
xor
inc
fs
and
sbb
cmp
push
dec
(bad)
addr16
cwde
in
pop
jnp
out
mov
cmp
cmp
sti
out
retf
sub
jns
xchg
in
cmp
jmp
fs
dec
or
stc
mov
stc
call
pop
push
jmp
sub
or
in
jmp
mov
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
int3
sbb
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
inc
add
add
add
add
add
or
or
or
or
or
adc
adc
adc
adc
adc
adc
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
(bad)
fild
inc
add
add
push
push
or
push
or
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ret
or
push
add
add
add
adc
inc
add
add
add
add
add
add
add
add
or
fiadd
or
add
add
add
push
add
or
sub
mov
add
push
or
sbb
rol
add
and
and
es
xor
scas
aam
pop
int
aad
push
mov
ds
loopne
add
fistp
lds
test
add
xor
or
int
add
and
and
inc
ins
mov
sbb
xchg
fistp
mov
or
add
xchg
xor
bound
dec
xor
in
jle
jmp
mov
add
push
or
sbb
add
add
add
mov
dec
ins
mov
adc
mov
ins
addr16
pop
ins
mul
mov
mov
xchg
push
xchg
add
and
out
fs
jns
push
btr
and
push
add
or
push
xor
xor
xor
cdq
add
add
mov
loop
or
aam
jns
in
je
ss
xor
xchg
dec
jg
add
xor
(bad)
out
(bad)
scas
xchg
aam
sti
imul
dec
sub
adc
add
push
or
cdq
xor
xor
data16
add
add
xchg
dec
inc
sbb
pop
mov
sbb
or
fcmovu
fldcw
test
adc
or
in
push
cmps
test
ja
sbb
push
cdq
dec
mov
or
add
rcr
data16
sbb
and
test
fld
mov
mov
mov
repnz
fisttp
pop
dec
mov
scas
dec
fstp
out
inc
and
xor
shr
dec
jne
fsub
adc
add
xor
data16
inc
int3
rcr
or
mov
les
cwde
popa
stos
fdivr
fstp
mov
lea
imul
test
dec
cld
cmp
int3
fstp
mov
mov
arpl
xor
sbb
adc
xor
add
data16
sub
cwde
xor
adc
and
mov
les
mov
dec
xlat
repnz
xchg
imul
repz
ins
stos
repz
dec
hlt
cmp
in
bound
sub
push
jae
sti
sahf
rcr
mov
in
(bad)
mov
fiadd
adc
add
cwde
xor
xor
or
add
and
push
xor
aaa
push
sar
dec
mov
je
(bad)
pop
fwait
test
add
call
sahf
or
cmps
and
retf
mov
xchg
in
mov
jne
gs
and
adc
add
sbb
data16
inc
and
ins
mov
(bad)
push
xor
inc
mov
hlt
push
mov
arpl
movs
push
or
sbb
fcmove
jno
cmp
iret
lods
sti
(bad)
out
jg
pop
test
jnp
mov
mov
test
xor
inc
int3
int3
rol
add
or
sub
mov
fsubr
repnz
and
fadd
mov
mov
push
call
pop
cs
mov
std
das
xchg
dec
repz
jno
jg
call
ror
inc
dec
adc
add
xor
inc
xchg
and
dec
push
fisttp
les
data16
repnz
and
iret
mov
mov
add
inc
stos
dec
xchg
cmp
fisubr
mov
out
dec
js
fnstcw
div
ins
mov
bound
adc
data16
popa
inc
data16
or
or
jl
imul
in
aam
mov
add
mov
inc
sahf
pop
sbb
pop
mov
sbb
jo
adc
inc
mov
adc
sbb
dec
sub
and
adc
mov
int3
sbb
adc
add
dec
and
ins
adc
push
arpl
idiv
movs
outs
loopne
fcmovbe
fistp
dec
adc
stc
retf
inc
push
retf
inc
enter
jnp
pushf
add
ficomp
cli
push
cli
into
retf
inc
push
adc
cmp
or
inc
push
int3
int3
shl
cdq
cwde
xor
les
xchg
fcmovnbe
fwait
dec
dec
test
cmp
sbb
jae
jmp
(bad)
push
sub
stc
(bad)
and
sbb
and
adc
mov
jp
arpl
cmp
into
ret
inc
push
xor
sub
cwde
xchg
pushw
push
or
add
push
add
popf
jno
or
scas
sub
out
dec
jmp
out
and
cdq
aam
call
shl
in
mov
out
ins
test
mov
out
fcmove
cld
push
dec
dec
push
inc
add
xor
inc
data16
cdq
push
mov
pop
test
xor
fisubr
jne
shl
mov
repnz
sub
ins
xchg
popf
outs
daa
jmp
out
cdq
push
mov
xchg
hlt
test
or
cmp
mov
xor
icebp
push
and
inc
call
mov
popa
mov
int3
rcr
scas
cmps
fcom
adc
pop
mov
dec
jmp
push
cmc
mov
addr16
fistp
bound
rcr
push
shl
out
outs
popa
shl
int
loop
jge
jge
addr16
xchg
dec
adc
sub
or
int3
int3
loop
xor
xor
xor
ror
xchg
dec
mov
push
mov
ins
imul
movs
sub
lahf
retf
addr16
push
leave
mov
cmp
dec
dec
stos
cmp
adc
clc
test
lahf
dec
hlt
xor
rcr
ins
mov
add
and
cmps
xor
addr16
jns
cdq
cdq
cdq
cwde
mov
ret
cwde
xchg
fwait
or
mov
xor
lahf
sub
pop
fisttp
jb
scas
mov
inc
into
mov
dec
xchg
dec
lahf
xchg
pop
ja
sahf
mov
jno
std
mov
jmp
add
enter
and
inc
adc
cdq
cwde
xchg
int3
int3
int3
sbb
adc
jo
or
pop
scas
mov
jp
loop
lahf
xchg
jne
mov
es
retf
mov
(bad)
cld
loopne
repz
into
dec
push
shr
push
pop
jnp
loopne
sbb
xor
and
cdq
cdq
shl
and
xor
xor
data16
adc
popa
or
sbb
dec
jne
or
pop
fmul
jb
mov
test
(bad)
iret
xor
sub
es
mov
idiv
mov
call
dec
dec
and
add
xor
xor
int3
int3
inc
mov
xor
push
data16
adc
popa
or
and
jno
or
pop
pop
into
aam
push
mov
xchg
dec
iret
push
mov
xchg
push
add
push
jb
cmp
jmp
pushf
(bad)
cmp
push
pop
das
sbb
push
popa
aaa
inc
mov
sub
data16
pusha
int3
int3
int3
rcr
bound
mov
fcomp
push
pop
dec
sub
loop
stc
xor
fwait
(bad)
cmc
std
jl
es
retf
mov
adc
ss
inc
stos
retf
lods
bnd
xor
pop
dec
in
dec
jmp
push
dec
add
add
xor
mov
data16
inc
or
push
add
cmps
sbb
shr
xchg
jecxz
sbb
dec
jecxz
ret
cmps
jecxz
(bad)
pop
push
mov
jns
dec
or
xchg
(bad)
adc
outs
sub
pop
popf
cmc
movs
shr
and
or
sbb
cdq
test
cwde
and
int3
sub
scas
mov
jno
push
xor
dec
fiadd
jno
arpl
pop
jae
push
repnz
mov
push
cmp
sbb
fmul
add
add
push
(bad)
(bad)
and
leave
mov
dec
test
loopne
popa
inc
inc
jne
pusha
int3
int3
sub
into
mov
push
sbb
popa
or
ins
ins
mov
test
leave
pop
outs
fcom
mov
mov
push
cmp
mov
dec
add
test
lods
(bad)
movs
cmp
test
test
xor
xor
or
data16
or
add
test
sbb
(bad)
shr
imul
leave
cmp
xlat
cli
cmp
daa
(bad)
lock
sbb
in
popf
inc
sbb
dec
xchg
and
or
and
movs
lods
(bad)
lods
cli
mov
jbe
aam
call
sbb
js
cmc
test
adc
sbb
fstp
push
dec
xlat
push
push
fnstcw
mov
loop
repnz
sbb
mov
xchg
std
je
ss
out
imul
xor
push
push
dec
and
add
sbb
xor
dec
push
int
cmps
pushf
inc
mov
mov
sub
pop
and
cli
or
inc
mov
xchg
push
jmp
(bad)
push
cmps
mov
mov
retf
popa
or
retf
outs
fcom
in
sub
add
push
pusha
ret
ins
(bad)
movs
int3
adc
ins
lods
mov
mov
dec
xchg
mov
mov
mov
lahf
popf
aas
adc
jne
movs
ins
sub
jo
add
or
push
jecxz
inc
xor
xchg
clc
mov
clc
addr16
inc
mov
jb
mov
sbb
adc
adc
inc
adc
xor
mov
xor
fmul
loop
mov
cli
out
outs
pop
cmp
jne
sar
push
jne
push
pop
shr
imul
aaa
inc
gs
cmp
sub
xchg
fnsave
test
and
add
loop
sbb
push
push
nop
retf
adc
mov
push
outs
and
mov
xchg
movs
(bad)
pusha
mov
dec
data16
jmp
(bad)
jge
mov
cmp
ret
lods
stos
popa
and
mov
add
xchg
clc
scas
mov
mov
sbb
mov
mov
mov
lods
lds
popa
add
int
dec
pop
pop
call
ins
in
shr
fisub
pop
push
test
rcr
call
dec
push
jmp
out
pop
test
mov
dec
jecxz
fsubr
(bad)
shr
test
test
cmp
loope
jmp
or
retf
aam
sub
or
and
outs
call
add
test
push
and
cs
push
sub
imul
xchg
into
inc
mov
sub
jb
cmps
adc
pop
pop
sbb
push
pop
int3
mov
mov
jne
xor
in
xor
jbe
test
rcr
test
inc
push
adc
add
jecxz
jns
cmp
lods
retf
in
mov
push
pop
or
push
mov
pop
push
dec
xor
xchg
push
iret
jo
in
xchg
fadd
mov
jl
pop
das
sahf
mov
sti
fbstp
sub
lds
int
stos
pushf
inc
mov
xlat
or
shl
and
add
out
cmp
mov
mov
cmp
cli
aas
inc
pop
fist
inc
mov
inc
movs
les
xchg
pop
mov
dec
leave
ret
pop
sbb
mov
dec
sbb
sahf
add
push
out
(bad)
sbb
jb
sub
mov
(bad)
fdiv
mov
ins
(bad)
popf
aam
sbb
test
sub
add
add
xchg
js
fwait
mov
test
lahf
xchg
jbe
jmp
fld
cs
dec
dec
les
sub
mov
pop
call
dec
inc
shr
push
pop
(bad)
outs
shl
ja
cmp
js
or
xchg
cmp
les
sub
jo
jno
gs
mov
add
out
inc
sbb
xor
inc
retf
cld
mov
movs
iret
jne
test
jae
mov
sbb
iret
je
push
in
dec
ja
add
fdiv
jg
fstp
inc
inc
pop
cmp
sub
call
mov
loopne
dec
mov
fild
xchg
jo
xchg
shl
sbb
add
and
test
mov
scas
enter
in
aaa
jb
push
cli
dec
pushf
jge
mov
mov
dec
ror
clc
ins
daa
call
(bad)
or
scas
fcmovu
dec
xchg
mov
test
xchg
pop
push
in
dec
ins
and
movs
(bad)
sbb
scas
push
pop
popf
fxch
repz
out
movs
dec
repz
jmp
mov
inc
and
sbb
pop
xchg
dec
inc
shl
mov
inc
mov
xchg
loop
cmp
mov
mov
fsub
retf
or
dec
sti
(bad)
pop
push
mov
and
jne
mov
jecxz
ds
pop
and
jnp
test
mov
idiv
xor
mov
daa
pop
mov
and
cld
and
dec
arpl
iret
repz
xchg
sbb
mov
mov
int3
xor
inc
cmps
jmp
movs
cmps
leave
pop
out
jmp
shr
mov
out
gs
int
cvtdq2ps
cli
adc
icebp
mov
out
mov
fdiv
cmp
jmp
cmp
sar
inc
dec
and
mov
div
aad
cld
out
addr16
cli
mov
xor
pop
push
(bad)
ficomp
mov
fwait
popa
jbe
in
pop
ror
mov
in
sub
xchg
sti
repnz
lahf
fs
push
xor
mov
into
dec
sbb
fwait
addr16
mov
ret
jo
cwde
gs
sub
repz
loope
sub
retf
jae
mov
mov
pop
addr16
movs
iret
push
add
idiv
push
push
cmp
or
imul
std
or
sbb
push
loope
rcr
dec
add
add
fs
es
xchg
xor
loopne
es
sti
cmp
fistp
xchg
fsub
and
mov
cmp
cmp
add
test
pop
jmp
cdq
jl
jae
mov
sbb
jb
rcl
xor
sub
(bad)
rol
cmp
gs
push
sub
aas
gs
jo
les
sbb
fild
push
sbb
(bad)
jl
int3
leave
bound
xchg
mov
push
ficomp
or
jecxz
pop
pop
(bad)
out
pop
fisubr
cmc
in
inc
icebp
ja
or
leave
fidiv
bound
dec
dec
pop
adc
xor
add
aaa
les
xor
jbe
cmps
or
int
dec
jo
add
push
push
or
cdq
mov
sbb
lods
mov
jl
xchg
stos
stos
div
int
mov
mov
std
pop
pop
lds
sbb
movs
dec
xlat
call
add
dec
aaa
sbb
sub
imul
outs
cdq
loope
ins
aam
int
repnz
and
aad
jo
data16
sub
push
cmps
mov
adc
sbb
js
xchg
jge
mov
mov
xchg
jp
jecxz
int
pop
outs
ss
pop
mov
sub
push
jg
fmul
pop
inc
div
iret
pop
ja
jno
inc
mov
inc
or
fbstp
call
out
adc
inc
xor
cmps
mov
push
mov
sbb
push
fidivr
(bad)
popf
(bad)
imul
cld
out
mov
aaa
sar
mov
std
inc
lods
cli
aaa
push
aam
xor
or
outs
jae
pop
pop
jle
pop
jmp
outs
cmp
mov
cmp
mov
jmp
addr16
add
or
shl
dec
cmp
mov
pop
sub
cdq
xor
sbb
into
xchg
movs
repnz
mov
push
scas
mov
outs
out
out
mov
pop
scas
out
iret
jle
inc
pop
sar
int
pop
test
aaa
mov
jge
(bad)
mov
(bad)
cmp
fisttp
aaa
cmps
or
dec
movs
mov
jge
imul
data16
or
popa
inc
int3
push
sub
lods
dec
pop
add
ss
mov
push
mov
pop
mov
ret
in
(bad)
stc
sti
lahf
pop
pop
ins
cmp
dec
cmps
mov
in
rol
add
push
and
lock
add
and
add
mov
add
into
sahf
frstor
rcr
pushaw
int3
inc
loop
dec
mov
dec
out
movs
scas
retf
gs
jnp
jae
cdq
sbb
outs
imul
cmps
fwait
bound
cmps
(bad)
iret
xchg
in
add
and
push
add
or
xor
into
push
dec
leave
pop
and
xor
sub
arpl
out
sub
xchg
jbe
cmps
sbb
pushf
push
push
xor
retf
jae
mov
sbb
ds
iret
pop
pop
data16
jae
imul
mov
push
inc
mov
lds
add
xor
or
add
loope
adc
int3
sbb
cwde
xor
setp
addr16
xor
mov
xor
jnp
lock
inc
jmp
inc
mov
ins
out
test
stos
dec
ins
(bad)
icebp
ficomp
frstor
fwait
jbe
fnsave
stos
cmp
add
sbb
sub
aam
pop
sub
xor
data16
mov
ja
cld
aam
jnp
mov
int
and
and
imul
jbe
pop
lea
adc
scas
enter
mov
mov
out
jp
int
pushf
stc
pop
xor
mov
adc
jno
popa
sub
data16
sub
xor
push
retf
retf
out
inc
mov
loopne
xor
mov
jg
or
mov
jg
sub
out
mov
cli
lods
push
test
pop
mov
mov
jno
icebp
sbb
add
adc
sahf
jg
cmc
out
push
out
sbb
inc
mov
push
adc
xchg
pushf
ret
dec
call
popf
int3
cmps
adc
adc
cmp
sbb
mov
xchg
std
sbb
stos
mov
push
int3
int
popf
mul
inc
imul
mov
sti
adc
inc
push
out
push
retf
retf
lods
jne
aaa
(bad)
jp
rcr
mov
fsubrp
jl
pop
xor
or
xlat
fwait
scas
ds
dec
inc
(bad)
ficomp
popa
or
mov
push
xor
lods
push
jge
cdq
es
jno
fst
xor
and
or
enter
mov
(bad)
xchg
cmp
hlt
jle
xchg
stc
rcl
inc
xor
jmp
inc
jo
aam
outs
pop
or
movs
pop
fmul
fwait
sub
mov
(bad)
addr16
push
pop
test
inc
mov
test
jne
movs
sub
xchg
setns
mov
jecxz
lods
bound
es
int
out
pop
out
(bad)
mov
xchg
dec
lds
add
ficomp
enter
retf
std
ja
xchg
lock
mov
aad
shr
sub
sahf
das
xlat
jle
loop
fwait
sbb
jmp
dec
fistp
and
sbb
mov
jns
sub
adc
push
inc
jecxz
sub
imul
(bad)
aaa
aas
dec
(bad)
jge
iret
jp
cdq
pop
fisub
cmp
call
popa
pop
push
dec
stos
cmp
xor
les
fnstcw
popf
out
mov
pop
shr
out
iret
pop
jp
mov
pop
jp
xchg
adc
cdq
ss
fadd
add
imul
jp
xchg
mov
xlat
mov
adc
je
mov
cdq
dec
push
stc
mov
inc
repz
in
sbb
pop
mov
add
jp
xchg
mov
fisubr
mov
or
pop
popa
pop
jae
push
sbb
add
into
xor
hlt
das
push
mov
sbb
mov
ss
fsubp
pop
fnstcw
rol
jle
dec
mov
fimul
frndint
jg
sbb
xor
fidivr
test
pop
sub
fisubr
push
iret
pushf
jp
lds
cli
push
sahf
arpl
sbb
sub
int3
addr16
jle
(bad)
gs
addr16
mov
mov
push
add
mov
rol
call
retf
dec
adc
cmp
lahf
jbe
test
jmp
repnz
imul
xor
scas
(bad)
sahf
cwde
retf
xacquire
cmp
shrd
mov
xchg
push
push
dec
das
xchg
jae
mov
call
mov
mov
fprem1
dec
cmp
jno
jmp
dec
mov
push
ss
retf
dec
dec
daa
pop
test
mov
cmp
push
loop
adc
inc
cmps
call
and
hlt
das
and
mov
mov
fyl2x
aas
push
xor
cmp
outs
repz
cmp
int3
jl
aad
hlt
mov
jne
mov
neg
pop
bound
jp
cmp
fidivr
cdq
dec
jmp
hlt
stos
dec
fnsave
dec
mov
xchg
ss
popa
movs
mov
xor
pop
jmp
mov
or
or
sub
push
sbb
daa
and
mov
aaa
inc
mov
sar
aaa
xchg
mov
adc
fcomip
inc
shr
shl
ds
xor
bound
mov
iret
inc
bnd
fstp
push
(bad)
test
mov
pop
rcr
ins
outs
ja
sahf
idiv
sub
xchg
and
outs
jnp
mov
fsubr
test
jns
inc
adc
push
pop
aam
scas
movs
aad
jl
jmp
shl
loopne
idiv
pop
mov
jbe
cld
pop
pop
lds
cmp
fisub
dec
out
(bad)
and
mov
cmps
xor
mov
xor
xchg
lahf
pop
xchg
mov
imul
cmps
dec
sbb
adc
imul
mov
cmps
fld
outs
fpatan
and
jno
iret
xchg
mov
mov
imul
in
adc
test
inc
leave
cli
or
scas
cmp
sub
mov
rol
jb
mov
stos
cmp
xor
mov
ins
or
pushf
imul
fmulp
xchg
pop
repnz
sbb
dec
xchg
xor
sub
aam
push
test
(bad)
jb
stc
pop
cdq
fsubr
sub
repnz
mov
(bad)
mov
or
mov
xor
mov
dec
pop
test
stos
fnstcw
stos
(bad)
test
jae
out
int3
fwait
call
mov
mov
cmc
cmc
std
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
add
aad
fs
add
pusha
fwait
dec
mov
iret
jnp
mov
add
(bad)
das
retf
aaa
lods
inc
add
add
add
mov
dec
jns
shl
add
add
movs
mov
hlt
repz
dec
add
add
or
aad
dec
sub
mov
hlt
jl
dec
aad
adc
xchg
and
mov
pop
sub
(bad)
(bad)
out
jp
sub
mov
add
add
mov
xor
fidivr
add
and
adc
fwait
loopne
pop
cmp
repz
jae
movs
and
add
cwde
add
(bad)
lods
int3
push
sub
(bad)
retf
dec
mov
and
sub
jmp
shl
cmp
add
add
lods
movs
jl
add
scas
push
pop
std
sbb
add
push
and
dec
add
and
adc
add
add
test
adc
nop
xchg
or
dec
sub
or
ss
pop
mov
inc
fadd
jp
dec
sub
mov
sbb
mov
adc
mov
add
lods
retf
mov
gs
fwait
in
inc
test
push
sub
jbe
mov
cmp
hlt
fsubr
imul
inc
mov
mov
add
mov
mov
cmc
mov
mov
lods
xor
fwait
dec
addr16
sbb
ins
mov
imul
in
jp
xchg
repnz
fs
rcr
xchg
jmp
cmp
mov
test
cmps
push
push
mov
fs
add
ds
stc
xor
shl
jmp
or
cmc
pop
in
xchg
add
jl
icebp
fnstcw
stc
in
stc
mov
stc
push
aas
push
xchg
sar
icebp
(bad)
out
dec
or
out
mov
outs
icebp
jns
leave
mov
jns
std
cmp
out
fild
add
icebp
jae
sbb
jge
mov
ror
push
(bad)
in
mov
in
add
pusha
adc
add
jge
xchg
mov
(bad)
jg
test
add
adc
jecxz
push
mov
int3
jb
push
push
cdq
repnz
push
pop
int3
out
(bad)
mov
xor
std
mov
sar
ror
mov
and
hlt
xlat
aas
aad
mov
(bad)
js
lahf
movhps
dec
popfw
sbb
imul
sbb
mov
lahf
dec
fstp
outs
(bad)
mov
jmp
jns
pop
mov
test
jae
rcl
xor
iret
xchg
cmp
jle
adc
cdq
(bad)
lods
ret
pop
xchg
jmp
xor
adc
pop
pop
pusha
xor
cli
cmp
mov
cdq
mov
mov
popf
cdq
cmps
xchg
cmp
scas
ds
scas
mov
jmp
adc
sbb
ja
push
add
(bad)
movs
cmp
xchg
mov
mov
in
cmp
push
outs
cmp
sti
sbb
sbb
add
add
add
add
add
add
add
push
pop
(bad)
fiadd
or
add
add
add
add
cwde
add
adc
add
or
add
add
or
dec
mov
rol
add
add
mov
retf
out
add
add
add
hlt
cwde
fwait
jp
inc
mov
add
add
add
fnstsw
scas
xor
dec
adc
add
add
fdivr
(bad)
lods
cmp
pop
shl
js
add
add
push
inc
pop
and
jle
jle
xchg
iret
xchg
add
mov
lds
and
add
add
and
mov
mov
cmps
or
add
add
mov
lock
(bad)
je
mov
add
sub
sub
sub
cld
pusha
add
add
xor
aad
inc
add
add
add
mov
add
sbb
mov
add
dec
dec
aam
mov
shl
inc
pop
movs
enter
cmp
jb
dec
and
inc
push
dec
(bad)
and
ja
lea
dec
adc
mov
es
hlt
sbb
jne
int
or
cmp
jle
loopne
les
lods
fisubr
add
hlt
jmp
jecxz
adc
dec
xchg
out
hlt
lods
(bad)
lods
repnz
push
imul
ins
jmp
shl
jno
jecxz
in
mov
lock
aas
xor
inc
push
adc
rcl
popf
xor
jecxz
test
mov
enter
idiv
mov
inc
adc
mov
xor
(bad)
mov
pusha
je
hlt
retf
ret
fisub
and
jbe
jns
sbb
inc
rcl
add
cmc
(bad)
push
lock
pop
jp
leave
out
std
xor
(bad)
sub
into
lahf
stos
ins
stc
outs
mov
mov
add
scas
inc
jae
loope
jns
pop
fsubr
dec
in
repnz
sets
out
mov
mov
pop
xchg
sub
add
add
ins
aad
sar
int
ret
loop
jae
js
add
add
dec
dec
xchg
jp
adc
jl
add
rol
sar
repnz
add
es
inc
cwde
xchg
inc
jmp
xchg
sbb
inc
repz
sbb
or
dec
cmc
mov
cdq
fbstp
scas
xor
jecxz
stos
leave
leave
hlt
pop
aas
push
add
into
(bad)
in
imul
popa
jmp
bound
lahf
jp
jp
sbb
add
in
das
mov
ror
or
cld
cld
and
hlt
in
mov
lods
out
out
jns
adc
outs
pop
loop
movs
mov
adc
(bad)
dec
mov
hlt
cld
cld
jb
mov
shr
or
jmp
pop
mov
mov
xchg
in
cmp
pop
arpl
fnstcw
outs
stos
cld
into
scas
aaa
mov
scas
xlat
mov
push
cdq
and
lods
out
push
sar
inc
imul
mov
dec
mov
rol
inc
add
add
add
add
add
add
add
adc
push
adc
adc
and
pop
adc
inc
and
push
and
ss
and
inc
inc
inc
push
pusha
popa
jno
fiadd
or
add
add
add
add
inc
aad
push
pop
lods
push
stos
push
stos
aad
inc
enter
hlt
fs
xchg
outs
aad
lahf
ror
call
adc
(bad)
aad
inc
es
fisttp
xor
add
add
xor
lods
inc
leave
sub
ins
pusha
es
mov
in
je
add
pop
mov
lods
inc
shr
pop
adc
xlat
inc
mov
aad
mov
mov
and
pop
mov
add
pop
rol
(bad)
outs
push
pop
out
(bad)
push
add
sbb
cmps
(bad)
mov
outs
xchg
and
xchg
sbb
les
imul
mov
stos
dec
push
jg
sbb
fadd
and
pop
shr
repz
pop
xor
and
pop
call
xchg
test
rcr
xlat
hlt
adc
sub
pop
sub
lods
or
lods
or
push
test
inc
mov
stos
imul
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
icebp
inc
push
jne
push
push
mov
inc
lods
push
stos
cmp
in
shr
int3
je
sbb
or
scas
sub
xor
cmp
dec
cwde
jp
mov
mov
shr
jmp
xor
mov
or
pop
sub
cmp
stc
mov
xchg
inc
in
out
push
pop
mov
inc
push
and
mov
jmp
dec
inc
push
or
dec
push
or
movs
and
popf
inc
dec
and
inc
dec
cs
pop
mov
popf
stos
scas
scas
add
test
ret
aam
pop
das
retf
pop
adc
imul
out
add
fistp
inc
push
stos
mov
jb
sbb
xor
jae
movs
or
xchg
sbb
inc
cmp
sbb
xchg
outs
and
sahf
push
push
cmp
inc
or
add
aas
inc
jmp
add
sub
inc
mov
daa
mov
and
clc
clc
fstp
js
adc
push
pop
pop
loop
aam
xor
int
pop
mov
push
xor
inc
adc
push
push
js
pop
pop
mov
xchg
js
add
sahf
sbb
pop
mov
test
xor
pop
jle
add
es
cmp
sbb
inc
sbb
cmps
ja
mov
and
fnstenv
inc
andps
or
cmps
xchg
aas
inc
jmp
add
sub
ret
jmp
pop
ss
inc
sub
repnz
test
jne
or
pop
arpl
ins
ins
xchg
add
xchg
push
call
enter
sub
call
imul
imul
lea
sub
mov
aas
add
xchg
xlat
(bad)
into
int3
popf
cmp
pcmpeqd
xchg
jmp
cvtpi2ps
inc
xor
cmp
cmp
inc
add
adc
inc
mov
cmp
lods
xchg
mov
pusha
repz
pop
xchg
add
xlat
sahf
aad
jg
dec
mov
sbb
xchg
dec
xchg
mov
shl
inc
mov
pop
jl
mov
retf
sbb
mov
push
das
retf
fld
scas
push
popf
in
add
jmp
pushw
stc
pop
sub
push
outs
xchg
or
push
cmc
dec
call
add
loopne
sub
sar
cdq
repnz
sar
ret
es
sar
push
(bad)
stc
test
add
dec
mov
out
inc
xor
push
rcl
dec
cmp
mov
xchg
inc
stos
xchg
in
aad
mov
sub
mov
sti
cdq
(bad)
imul
push
popf
xor
lahf
mov
lea
adc
xchg
or
clc
adc
sub
iret
call
es
push
sub
mul
imul
jne
cmc
and
dec
sar
out
aaa
pop
in
mov
mov
(bad)
in
lahf
in
or
(bad)
push
das
retf
fucomi
sbb
ficom
push
jge
ja
ds
or
add
inc
mov
mov
mov
outs
xor
test
pop
es
imul
rol
fist
and
dec
cmp
xlat
inc
rcl
sahf
scas
js
xor
xchg
dec
pop
in
ror
jne
out
lods
jg
mov
jle
mov
mov
cmp
jp
push
jle
cmc
push
jl
mov
ins
pop
add
pushf
fbstp
gs
and
out
pop
push
adc
jno
cmp
loop
fsub
xchg
outs
int
scas
pop
or
std
or
inc
jno
push
cld
jle
mov
inc
jmp
stc
jnp
leave
sti
sub
and
lock
in
fistp
shl
push
movs
sub
mov
cli
jne
lods
push
stos
push
stos
aad
mov
pop
inc
lock
sub
sar
xor
fidivr
adc
xlat
cmc
sbb
push
cmp
inc
dec
rcr
popf
push
cli
mov
xchg
mov
mov
mov
push
fild
ins
fdiv
xchg
sub
arpl
daa
pavgw
aaa
jnp
in
loope
daa
mov
movs
push
aaa
sub
imul
mov
xlat
mov
push
fidiv
pop
aad
cwde
fist
scas
movups
aad
jmp
(bad)
in
adc
test
scas
mov
mov
in
push
jl
scas
push
cmp
dec
sub
mov
and
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
scas
outs
stos
pop
int
stos
push
stos
xlat
mov
stos
aad
fldcw
xlat
cmc
xchg
push
inc
adc
in
cmp
sub
call
xor
inc
ret
cmp
push
jl
cld
jmp
imul
mov
clc
mov
xchg
cmp
dec
push
inc
cmp
fild
jns
or
arpl
cmp
outs
retf
jo
jge
aaa
stos
push
jge
int
xchg
xchg
lds
xchg
xchg
scas
sbb
pushf
loope
ins
adc
xchg
jecxz
xchg
xchg
cs
ret
into
les
mov
push
cli
adc
mov
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
push
stos
aad
mov
lods
push
stos
pop
ror
nop
lea
push
enter
inc
mov
dec
xlat
jae
mov
sub
call
add
mov
pop
adc
pop
push
cmp
mov
or
cmc
or
pop
out
sub
pop
popf
push
cmc
in
jl
std
adc
test
mov
inc
cld
mov
cwde
in
dec
jns
push
mov
imul
jmp
mov
fwait
sbb
push
cdq
xchg
fwait
retf
retf
mov
ja
cdq
push
pop
loope
push
xchg
addr16
repnz
pop
ss
xchg
fwait
mov
mov
pop
mov
dec
or
fsub
fcomp
outs
push
sub
lds
cmp
sbb
pusha
xor
mov
arpl
push
mov
push
mov
xchg
cmc
retf
jp
cmc
mov
arpl
(bad)
lods
(bad)
pop
sbb
cmp
mov
arpl
(bad)
lods
(bad)
pop
push
mov
ins
jp
cmc
mov
arpl
(bad)
lods
(bad)
pop
push
mov
ins
jp
cmc
retf
jp
mov
pop
mov
xchg
jb
pop
test
sub
xchg
jb
pop
mov
icebp
pop
cmp
popa
repnz
pop
lods
push
mov
fs
je
(bad)
repz
(bad)
inc
aad
cmps
pop
lock
cli
stc
(bad)
sbb
jg
popf
adc
aad
pop
inc
pop
inc
dec
hlt
pop
mov
cmp
sti
(bad)
fsub
(bad)
sub
call
(bad)
movs
outs
push
sbb
mov
push
int3
outs
arpl
fs
or
or
gs
popa
mov
dec
retf
jo
addr16
cmps
jl
dec
dec
mov
xor
fdiv
(bad)
mov
mov
sbb
les
sbb
out
in
scas
ror
jne
scas
cli
mov
jle
cmovne
adc
mov
push
xchg
sub
push
cmp
add
stos
aad
mov
lods
push
mov
pusha
test
push
inc
and
push
std
sub
pop
dec
jae
ficomp
xchg
sahf
mov
jmp
mov
cmps
in
dec
inc
sub
retf
pop
daa
outs
pop
mov
dec
xor
and
mov
ret
cmp
daa
arpl
imul
out
cli
mov
xor
inc
mov
lods
repz
inc
mov
xchg
xchg
sub
sbb
mov
sub
js
inc
xor
push
idiv
dec
retf
and
xchg
cmp
push
je
jne
scas
cli
mov
inc
push
pop
shl
xchg
shl
ja
cld
pop
sti
jecxz
adc
out
shl
ds
(bad)
outs
mov
sub
lods
fst
xchg
inc
movs
data16
fmul
daa
pop
jg
std
xchg
je
xchg
adc
inc
sar
adc
icebp
in
mov
push
fcom
lea
add
jnp
sub
sbb
fwait
xchg
mov
jne
sub
cld
push
dec
or
jge
xchg
lds
sahf
hlt
sar
scas
push
arpl
mov
mov
test
lds
jmp
push
xchg
js
xchg
movs
fadd
ins
sbb
int3
lock
and
stos
imul
sbb
inc
push
pop
shl
fwait
sar
jg
jl
sti
jecxz
adc
out
ret
pop
hlt
push
es
pop
xchg
xchg
mov
idiv
lea
movmskps
jno
pop
sar
add
sbb
stc
sub
ficom
xchg
call
clc
jbe
stc
cmp
scas
pop
mov
jmp
cmc
mov
ins
mov
mov
jb
test
test
pop
xlat
cs
mov
gs
in
scas
cmps
sbb
in
mov
or
test
ja
pop
jl
std
pop
cld
pop
cmp
pop
mov
(bad)
aas
call
aas
or
jp
sub
cli
dec
push
js
in
xor
adc
enter
leave
inc
jmp
jmp
push
icebp
in
mov
jbe
xor
repz
fld
pop
mov
lods
xchg
cs
jno
aas
das
xchg
(bad)
lds
pop
xchg
mov
xchg
sub
iret
in
out
jp
(bad)
push
out
inc
fistp
mov
inc
fimul
sbb
sbb
or
push
cmps
cdq
scas
cmps
mov
inc
imul
jl
aad
hlt
sbb
sub
psubb
add
jle
jg
inc
cdq
repnz
sbb
jp
xlat
or
fbld
aad
out
aas
inc
mov
dec
mov
cmp
cmc
ja
popf
pop
in
cmc
pop
mov
hlt
fcomp
mov
popf
mov
sbb
fld
icebp
cmp
mov
bound
sub
xchg
cmp
push
or
jbe
popf
cdq
push
jae
ds
mov
push
aam
push
aaa
ins
lods
jb
jp
dec
jmp
fnsave
test
ja
pop
ds
retf
repz
icebp
jg
(bad)
rcl
mov
call
aas
lods
jle
mov
sbb
mov
pop
test
pop
fisubr
mov
xchg
sub
xchg
xchg
jp
mov
jb
inc
push
ror
pop
(bad)
mov
enter
inc
sbb
pop
test
dec
mov
mov
lods
jno
jl
mov
push
ret
(bad)
mov
cwde
clc
sub
jle
into
jnp
jmp
push
fld
xor
hlt
rcl
rcr
mov
scas
test
push
out
stos
pop
add
push
mov
dec
and
cld
dec
jle
mov
or
call
lahf
and
test
dec
neg
jmp
sar
push
shr
lahf
sub
jle
gs
out
leave
cmp
leave
inc
jmp
jmp
sbb
movs
imul
fld
in
fwait
loope
shl
imul
dec
jecxz
lods
cld
fs
xchg
repnz
fisttp
ss
dec
jae
pop
cli
inc
push
imul
xchg
cwde
stos
mov
shr
pop
mov
dec
outs
inc
(bad)
jne
repnz
add
jmp
pop
and
loop
jp
cmp
aam
mov
push
outs
inc
lahf
adc
ror
inc
adc
das
mov
jle
pushf
popf
xlat
hlt
arpl
and
fdivr
pop
cli
jmp
mov
xor
jb
push
push
jbe
sar
pop
push
jmp
dec
cs
clc
test
fbstp
in
test
sub
dec
sbb
pop
rcr
or
cmps
jo
cmp
dec
shr
ds
lds
in
mov
call
imul
retf
pop
push
lock
push
js
ins
pop
das
jns
adc
ss
(bad)
in
sbb
(bad)
cmp
pop
cmps
test
mov
cmc
arpl
test
les
scas
mov
loop
add
jne
sti
lods
ja
inc
cdq
repnz
pop
std
push
pop
sar
pop
jp
ja
cmp
inc
in
xor
fldcw
bound
scas
in
xchg
mov
aam
sbb
push
(bad)
(bad)
call
psrad
ins
icebp
test
int3
int
mov
push
int
imul
adc
pop
in
shr
push
fmul
ret
adc
push
sub
rcl
(bad)
aas
or
into
sbb
int3
xchg
int
xchg
ins
gs
pop
adc
mov
push
test
mov
call
cmp
arpl
mov
outs
jmp
aas
int
(bad)
jbe
inc
dec
dec
jmp
xor
inc
adc
adc
arpl
cmp
jmp
xchg
cmps
jmp
icebp
mov
mov
leave
cmp
leave
inc
jmp
loop
mov
push
test
adc
sbb
loopne
jne
outs
or
jne
fwait
cmp
out
adc
jge
popa
sub
lods
out
imul
int3
loopne
scas
and
ret
mov
jo
or
xor
addr16
leave
mov
mov
int3
hlt
lods
addr16
mov
xchg
int3
in
repz
xchg
xchg
adc
xor
int
mov
cmp
out
sbb
ds
aad
cmp
fiadd
xchg
jge
and
xor
pop
std
fdivr
add
jle
and
outs
pop
sar
fcom
sar
bswap
lds
scas
and
cmc
jb
dec
mov
push
cli
(bad)
push
hlt
outs
imul
sub
push
aas
mov
into
or
and
adc
add
ret
push
xor
cs
sbb
icebp
scas
jmp
inc
lods
inc
jb
mov
xchg
loope
mov
jge
clc
sbb
loopne
stos
mov
iret
mov
gs
jg
aas
int
(bad)
jbe
inc
dec
dec
jmp
xor
or
aaa
das
imul
mov
pop
cmps
sub
jns
inc
repnz
jge
fldenv
inc
stc
sub
test
aaa
mov
jno
in
ret
mov
aas
xor
sub
xchg
mov
sub
sub
xchg
mov
and
dec
pusha
dec
sbb
xlat
mov
push
ds
stos
jp
clc
xchg
ds
push
jp
dec
(bad)
js
das
sti
rcr
dec
dec
jmp
xor
adc
outs
pop
sar
add
fidiv
(bad)
enter
inc
jecxz
call
push
out
(bad)
sub
pop
in
cmc
push
mov
mov
sub
push
(bad)
sub
jmp
dec
ror
int
mov
mov
stos
push
mov
stos
push
mov
push
mov
ins
inc
and
clc
and
pop
cli
dec
push
(bad)
pop
xchg
xchg
mov
out
mov
lahf
or
ret
scas
jl
lahf
or
ret
scas
jl
cmp
adc
xchg
mov
les
retf
fidivr
cmp
(bad)
fnstenv
cmps
test
xchg
inc
repnz
aad
(bad)
push
cmc
cmovbe
xchg
outs
(bad)
sub
xchg
push
rdpmc
sar
je
sub
shr
pop
sub
push
inc
imul
lea
movs
loope
mov
sub
lea
push
stos
mov
into
ret
aam
inc
out
add
ja
mov
sbb
(bad)
ins
iret
movs
xchg
push
mov
mov
jne
mov
inc
mov
scas
repnz
(bad)
hlt
clc
scas
adc
imul
pop
jbe
out
imul
push
jmp
daa
retf
or
ins
jb
jge
dec
aas
dec
and
fdivr
or
mov
push
xchg
shld
inc
(bad)
cli
mov
push
cli
(bad)
push
hlt
outs
imul
sub
push
aas
adc
lock
cmp
ds
mov
ret
push
test
jae
push
sti
dec
rol
lods
ins
mov
xor
jp
push
movs
movs
add
mov
fiadd
cmp
fld
mov
int
pop
ins
mov
leave
xchg
je
and
sub
(bad)
retf
jp
hlt
loopne
test
sub
ins
fst
loop
div
imul
sahf
sti
mov
push
out
inc
leave
mov
xchg
or
xor
hlt
pop
out
popf
mov
mov
ret
dec
pop
call
sbb
dec
shl
das
mov
sub
pop
test
retf
pop
adc
pop
add
inc
aaa
cs
or
and
push
lods
in
sbb
sbb
inc
pop
xchg
jle
xchg
mov
cwde
in
daa
dec
mov
cmp
mov
imul
dec
sar
pop
push
jmp
mov
call
stc
lahf
lods
jge
cmp
mov
mov
mov
push
les
in
adc
mov
mov
ins
inc
popf
push
les
aad
pop
cmp
lds
loop
xchg
fsubrp
xchg
push
pushf
mov
fbld
pop
sub
adc
pop
inc
pop
xor
xor
push
pop
or
call
test
mov
push
pop
jge
fcomp
js
dec
mov
inc
sbb
xlat
dec
dec
xchg
popf
pop
and
(bad)
in
mov
cld
movs
jb
xchg
jns
xor
arpl
cmp
aam
repnz
pop
in
mov
stc
add
(bad)
jns
je
xchg
jg
lea
mov
jb
mov
xor
sub
push
hlt
pushf
mov
pop
scas
scas
inc
dec
sar
pop
push
jmp
hlt
aam
mov
movs
pop
jae
lods
scas
(bad)
movs
cmps
add
jne
imul
in
push
xlat
es
sub
sbb
sbb
mov
xchg
ret
dec
fsub
mov
push
mov
je
cwde
inc
mov
mov
jno
jbe
icebp
mov
mov
in
inc
in
pop
ja
xor
adc
(bad)
pushf
imul
cld
cmps
test
sub
xor
add
push
mov
inc
imul
in
cmp
in
cmp
sbb
(bad)
ins
sub
inc
aaa
sub
in
or
adc
push
mov
retf
jb
outs
in
arpl
xor
xor
ret
sub
xchg
cmp
test
push
rol
jecxz
jg
adc
lock
repnz
shr
and
cmc
cmovbe
xchg
ja
cwde
shl
push
std
push
test
add
out
xchg
dec
sbb
fisub
xchg
stc
jle
fs
or
xor
mov
xor
out
mov
cmp
sti
mov
mov
add
push
dec
push
and
inc
pop
adc
loopne
inc
sub
movlps
adc
movs
lock
scas
das
cmp
and
xchg
push
inc
and
push
pop
js
mov
pop
jl
sbb
jbe
pop
add
in
jbe
add
jno
mov
mov
pop
test
mov
aaa
shr
xchg
lods
adc
in
mov
fild
inc
stos
inc
clc
adc
xchg
adc
call
or
jg
and
pop
jle
adc
ins
clc
test
aas
rcl
std
fiadd
inc
sub
neg
hlt
or
aad
test
jmp
add
mov
mov
clc
test
jmp
xchg
call
inc
sbb
cli
js
mov
(bad)
push
arpl
pop
mov
dec
mov
mov
mov
push
cmp
in
push
mov
push
inc
cmp
push
inc
sub
inc
push
jb
fisubr
aas
push
sub
arpl
arpl
sub
retf
inc
push
mov
and
dec
jno
out
cmps
aas
ret
idiv
jle
jne
xchg
ins
or
inc
adc
xchg
jb
stos
push
add
adc
push
inc
cmp
xchg
xor
cmp
imul
movs
imul
mov
add
push
push
rol
(bad)
sub
rcr
(bad)
pop
call
inc
lods
add
mov
mov
cmp
cmp
mov
mov
sub
xchg
(bad)
xor
mov
push
mov
(bad)
hlt
fsubr
lea
add
mov
push
jp
push
je
imul
push
hlt
sbb
iret
push
imul
dec
clc
inc
addr16
adc
dec
add
movs
xor
stos
rol
fidivr
into
pop
sub
push
mov
cli
pop
xlat
mov
sbb
popf
xor
jns
jg
addr16
jge
int
stos
push
stc
fcom
jnp
jbe
pop
sahf
aas
xchg
pop
xchg
retf
repz
(bad)
pop
xchg
sar
(bad)
mov
mov
mov
mov
pushf
sub
xor
mov
sti
or
cmp
cmps
arpl
sub
out
test
imul
lea
lods
aas
jnp
dec
bnd
push
xchg
fild
inc
mov
lock
mov
xchg
fstp
push
xlat
fucomp
mov
in
jbe
pop
xor
sub
or
mov
jnp
mov
rcl
sbb
sahf
stos
sbb
js
and
clc
nop
pop
cmp
pop
cmps
cmps
inc
adc
and
add
aam
push
cmp
jmp
dec
loop
sub
push
das
xor
pop
cdq
aaa
jb
and
jnp
js
mov
mov
gs
adc
stos
frstor
sub
test
enter
popa
out
aam
cmp
scas
aam
xor
mov
int3
or
iret
add
pushf
mov
loopne
or
mov
cdq
cmp
int3
popf
mov
mov
xchg
mov
sub
push
outs
ficom
movs
fbld
fbstp
push
push
mov
adc
push
aad
jno
push
dec
jbe
mov
mov
sub
mov
cmps
(bad)
xor
cmps
outs
ja
(bad)
hlt
cmc
push
in
retf
sbb
clc
add
out
gs
mov
pop
lods
dec
pop
jle
push
cmc
pop
mov
pop
sti
fdivr
aad
loop
cld
shr
aas
xor
xchg
push
mov
or
movs
mov
hlt
mov
pop
popa
jmp
jo
mov
in
inc
pop
dec
out
stos
(bad)
ins
inc
mov
pop
dec
sbb
sahf
pop
rol
jge
fs
xor
nop
movs
sub
div
pushf
pop
stos
imul
mov
and
mul
fdivp
stos
fcomp
sbb
ss
stos
pop
adc
scas
cdq
js
push
stos
mov
fsub
retf
mov
je
fld
fdivr
cld
mov
clc
pop
lea
mov
ret
push
lahf
mov
mov
cmp
sub
and
cmp
sbb
mov
ror
sahf
cwde
ss
fsub
pop
jb
in
jo
mov
imul
adc
ret
(bad)
ds
lahf
je
pop
pop
call
scas
push
xor
mov
out
adc
cld
scas
pop
ret
mov
pusha
lods
imul
push
or
fwait
data16
adc
es
stos
aam
sbb
push
ret
loop
sub
push
aas
mov
mov
popf
jmp
mov
(bad)
hlt
jle
push
sbb
jmp
mov
sbb
push
enter
stc
push
mov
and
jae
pop
stc
sub
adc
fisttp
imul
jae
ror
cmp
mov
jae
mov
mov
aam
into
push
mov
jecxz
xchg
(bad)
cmp
fnstsw
jno
mov
retf
inc
jo
adc
leave
idiv
popf
sahf
jns
and
mov
mov
cmp
out
jb
daa
outs
sar
mov
mov
xor
movs
sbb
jno
mov
out
loopne
xchg
dec
dec
out
adc
pop
or
js
dec
sbb
or
je
and
jne
outs
push
push
stos
cmp
inc
test
lock
lods
je
aad
push
cmp
enter
push
das
jmp
adc
dec
adc
bound
cmp
mov
or
inc
ss
lds
fs
pop
aad
and
dec
jb
adc
and
fstp
jp
aad
dec
jno
and
pop
(bad)
loope
popf
lock
loopne
stos
jne
scas
(bad)
(bad)
fidivr
mov
inc
fsubrp
cwde
adc
or
pop
ins
not
inc
call
add
pop
and
inc
push
push
sub
xor
lods
lds
int3
out
mov
div
dec
daa
ss
jno
fwait
push
fisttp
jb
push
adc
xor
in
enter
nop
pop
(bad)
mov
pop
loop
xchg
nop
cmps
xchg
out
aam
retf
es
dec
sub
(bad)
mov
xchg
push
push
mov
bound
(bad)
retf
and
les
push
loopne
cdq
sub
aas
push
into
pop
ss
fild
or
ss
xor
jp
push
lahf
cmp
push
stos
and
inc
fwait
mov
cmps
lahf
sub
push
in
inc
stc
push
xchg
inc
enter
cdq
lahf
sub
loop
fxch
int
aas
das
jbe
das
jo
sub
into
jb
xor
inc
cmps
sbb
push
mov
rcl
int3
push
loopne
hlt
pop
mov
cld
adc
sbb
imul
hlt
in
popf
fs
push
in
mov
shr
cmp
ja
jmp
gs
dec
and
inc
test
jb
pop
js
add
sub
and
xor
add
jb
cs
imul
movs
retf
jno
(bad)
inc
adc
sub
xor
fnstenv
sub
cmp
and
mov
test
sub
add
outs
sar
mov
mov
lock
mov
dec
cmp
or
fwait
inc
jne
mov
pop
xchg
dec
and
lods
ja
push
std
adc
mov
nop
ins
push
mov
aad
loope
inc
out
dec
jnp
sub
inc
dec
push
inc
out
sbb
(bad)
ins
das
jle
(bad)
cmp
pushf
out
loope
mov
jg
test
(bad)
out
scas
rol
pop
inc
cmp
jl
pop
sub
fcmovb
sbb
push
dec
xchg
lods
xor
call
(bad)
cs
cmp
stos
out
or
mov
adc
add
gs
inc
ss
loop
cmp
lahf
xchg
lods
adc
in
jno
pushf
aam
sub
ss
mov
repnz
fwait
pusha
mov
bound
xchg
shl
ins
icebp
jnp
div
loop
mov
jne
cmp
mov
cmp
ret
mov
cmp
xor
inc
cmps
ds
or
adc
mov
pop
jl
mov
jo
cli
xor
cmp
popf
sub
push
hlt
push
and
add
pop
out
mov
lock
scas
mov
and
xor
mov
iret
sbb
pusha
fistp
sub
and
push
mov
mov
arpl
bound
mov
pop
(bad)
out
test
iret
adc
adc
(bad)
mov
sbb
jne
into
fisttp
in
cmc
cdq
ja
cmp
repnz
clc
fcomp
in
imul
adc
in
sub
add
and
inc
jbe
push
mov
adc
mov
popf
retf
xchg
movs
cmps
mov
fidiv
mov
xchg
mov
xchg
ror
loope
xchg
imul
addr16
lds
adc
cmc
or
pop
mov
cmp
mov
push
scas
mov
nop
dec
xchg
dec
jp
xor
fdiv
xchg
popa
retf
ja
pop
scas
clc
in
leave
or
lds
add
shr
ss
jo
das
or
push
jo
jbe
call
push
xor
fst
xor
cmp
adc
ja
fs
loope
mov
je
int3
mov
in
ins
dec
mov
sbb
add
jp
(bad)
jae
lods
ret
cmp
dec
xlat
cmp
in
jne
lods
rol
addr16
fbstp
jb
sbb
cld
fnstenv
pop
in
jp
test
imul
pop
or
leave
popa
adc
mov
sbb
push
(bad)
popf
pop
pop
jl
(bad)
lahf
sub
or
enter
xor
pop
mov
lock
lock
push
stos
fcmovbe
mov
bound
leave
retf
(bad)
jae
dec
clc
in
dec
mov
xlat
neg
mov
repz
sbb
sar
and
rcr
xor
fdiv
inc
or
push
ror
dec
imul
cmp
xor
ins
repnz
mov
sub
mov
inc
sub
dec
push
xchg
sbb
icebp
dec
sbb
fwait
jle
xchg
inc
xchg
lods
inc
fisttp
imul
scas
dec
neg
mov
es
and
test
dec
lods
lods
test
cmc
mov
mov
(bad)
out
mov
dec
ret
push
lock
mov
mov
popf
and
mov
(bad)
pop
mov
inc
push
(bad)
xor
cmp
test
xor
inc
enter
xor
les
push
(bad)
jno
mov
xor
lods
dec
retf
pushf
sbb
xor
cmp
mov
inc
dec
(bad)
mov
and
jge
push
mov
push
jge
lock
jae
mov
imul
and
inc
pop
bound
les
mov
test
sub
lods
push
sub
scas
into
ror
int3
bound
fstp
or
push
mov
mov
adc
frstor
push
fs
pop
test
fimul
fs
lea
je
or
ret
dec
pusha
pop
fwait
mov
(bad)
and
or
xor
mov
movs
(bad)
push
mov
int
push
lahf
movs
retf
(bad)
retf
mov
ror
jno
daa
cld
mov
push
stc
in
xor
ss
sub
test
movs
bound
enter
jno
imul
jl
jp
adc
or
shr
retf
ret
repz
inc
popa
out
adc
adc
or
add
test
enter
push
mov
add
or
jo
in
fwait
pop
arpl
xor
or
mov
out
push
xor
and
loope
jmp
(bad)
pop
xchg
and
outs
psraw
add
push
sub
mov
mov
cmp
loop
es
adc
mov
dec
je
(bad)
push
nop
out
je
pusha
scas
inc
loopne
ds
stos
mov
mov
cli
jmp
push
test
adc
test
sar
xchg
imul
mov
xchg
fst
sbb
xor
out
sub
out
push
call
daa
js
mov
xchg
push
pop
and
push
fcomp
pop
push
popa
sbb
dec
cmp
adc
popa
xchg
les
out
pushf
push
and
jp
push
sbb
loope
xor
jo
(bad)
leave
add
(bad)
imul
and
cmp
mov
cmp
out
dec
push
mov
cmp
cmp
cmp
jmp
cwde
jge
and
push
imul
jmp
adc
and
fcom
dec
and
mov
movs
xchg
dec
xor
mov
fidiv
cwde
jmp
neg
sub
(bad)
outs
jle
sub
fwait
and
sub
(bad)
retf
mov
sub
out
jo
adc
out
lds
imul
das
iret
dec
pop
pop
cmc
mov
pop
jle
sti
mov
inc
mov
xor
fxtract
loop
xor
(bad)
sar
retf
add
fcom
jle
xor
add
fldlg2
shr
mov
cs
outs
mov
dec
fist
mov
inc
aad
ja
gs
and
fldenv
repnz
xchg
jo
pop
sahf
dec
aad
ds
lock
mov
(bad)
gs
imul
inc
push
popf
add
daa
pop
pop
push
jno
mov
push
xchg
jb
mov
and
cmp
mov
lock
xchg
arpl
mov
stos
cmp
lods
sbb
mov
push
xchg
jb
mov
cmp
push
pop
in
lods
mov
xlat
jnp
mov
retf
shr
mov
call
adc
jo
mov
mov
mov
scas
and
pop
pop
loop
xchg
daa
xor
xchg
ja
rcr
mov
rcr
cdq
push
fild
mov
in
xor
fwait
push
xchg
cmp
inc
imul
arpl
dec
imul
pop
cmp
push
xor
fs
ret
mov
out
mov
lahf
movups
popf
xchg
fild
pop
sub
adc
cmp
imul
fldcw
iret
jle
add
mov
popf
sbb
mov
jl
out
in
adc
lods
push
sub
pop
xlat
je
js
push
add
fimul
dec
sar
push
fs
lea
rol
les
adc
push
fnstcw
arpl
ss
lea
jnp
xchg
cmp
leave
cdq
pop
std
fist
test
jmp
loop
cmp
xchg
push
(bad)
pop
xchg
pop
outs
jo
int3
xor
pop
push
push
fld
gs
ret
mov
cmp
add
pushf
push
mov
gs
mov
(bad)
idiv
not
mov
jne
call
mov
jmp
out
mov
out
jmp
pop
and
call
mov
clc
pop
and
in
movs
add
pop
xchg
jne
ja
xlat
jno
cmc
mov
loop
sti
popa
cli
mov
rcr
jbe
out
aad
fcom
adc
push
fcmovnb
lods
inc
and
push
mov
cs
mov
push
in
jg
in
(bad)
cmp
sub
cmp
out
push
mov
jnp
inc
push
(bad)
fstp
push
mov
in
int
mov
xor
out
(bad)
das
(bad)
mov
das
retf
mov
ficom
add
retf
pop
mov
aaa
in
push
lea
data16
imul
jns
aad
lock
push
add
rcl
out
arpl
xlat
mov
(bad)
dec
xor
mov
retf
(bad)
movs
(bad)
fisub
mov
not
mov
fmul
jno
icebp
ins
adc
imul
mov
sar
push
gs
enter
icebp
jne
outs
addr16
fadd
cmps
inc
fstp
int
mov
and
cmp
mov
adc
js
psubusw
test
fnstcw
inc
rcr
adc
adc
pop
adc
mov
inc
(bad)
int
outs
sbb
out
sbb
(bad)
and
fdivr
mov
lods
gs
or
(bad)
xor
rcr
aad
pop
lea
lds
pop
mov
xchg
xor
mov
jecxz
adc
dec
pop
(bad)
dec
fcmovbe
jns
(bad)
inc
(bad)
mov
dec
pop
or
bound
mov
push
cmps
pop
aaa
dec
inc
pop
mov
sbb
adc
out
(bad)
sub
mov
(bad)
xor
leave
push
mov
jnp
sbb
cmc
sbb
mov
shl
push
ins
cli
cmp
mov
mov
in
sbb
dec
add
hlt
loope
inc
mov
je
fnstenv
inc
cmps
popa
dec
imul
movs
push
inc
xor
clc
inc
fadd
fisttp
retf
mov
loop
cwde
rcr
cmp
and
mov
loopne
(bad)
mov
cmp
leave
(bad)
push
shl
ins
sbb
or
sar
jge
test
jl
inc
jmp
imul
mov
ja
out
inc
ret
sbb
addr16
sbb
push
out
cmp
imul
mov
add
dec
pop
or
sbb
sbb
fwait
jae
pop
mov
ins
jnp
mov
pushf
jge
adc
and
sub
movs
mov
or
fistp
leave
movs
cwde
leave
pop
mov
sub
inc
push
in
fcom
out
add
mov
das
shr
mov
lock
sub
fs
inc
(bad)
jns
mov
add
mov
out
xchg
fisubr
jnp
repnz
inc
enterw
iret
dec
jb
and
loope
ret
popf
(bad)
push
cdq
mov
push
leave
adc
mov
cmc
mov
(bad)
sub
mov
imul
lahf
lds
fistp
or
test
js
es
jno
ficomp
or
stos
xchg
inc
lock
pop
cmp
imul
scas
jge
dec
push
jle
jmp
cdq
or
mov
mov
shl
push
inc
push
loope
push
lahf
push
call
int3
ds
mov
sar
jg
or
pushf
sub
pushf
cdq
test
(bad)
ins
aam
jnp
(bad)
clc
int3
mov
xor
jno
and
or
ret
(bad)
mov
cmps
xchg
pop
push
sub
push
xchg
cmp
bound
jns
dec
mov
bound
mov
sub
fld
or
add
sub
xchg
jmp
stc
or
adc
iret
xchg
dec
jl
pop
cmp
inc
fdivr
jae
pop
pushf
loope
xor
popa
cmp
scas
(bad)
call
mov
xor
ins
ja
add
fnsave
not
sub
mov
js
xchg
cmc
cmp
mov
xchg
outs
(bad)
push
inc
lds
or
xchg
sub
(bad)
icebp
repz
cmp
nop
nop
inc
and
std
in
cmp
cdq
adc
loope
sar
ss
mov
mov
push
sbb
sahf
pop
stos
xchg
dec
outs
xor
pop
fisub
push
pop
out
mov
cmp
jnp
cmps
mov
jae
(bad)
mov
(bad)
loop
ret
push
sub
pop
pop
lahf
popa
or
in
jbe
out
inc
mov
cmps
enter
inc
pop
sbb
inc
lods
inc
lea
das
arpl
mov
cmp
lods
ins
fcmovu
cmc
xchg
xor
jbe
shr
pop
mov
jmp
out
xor
cmp
pop
xor
sbb
inc
out
loop
pop
sub
add
sbb
and
mov
(bad)
fs
cmp
jo
psrld
(bad)
xchg
sbb
int3
push
dec
sub
(bad)
adc
fnstsw
or
and
out
loop
aam
sub
mov
rcr
(bad)
fisttp
int
stos
sub
pushf
pop
push
icebp
dec
mov
call
rep
sbb
out
or
mov
shl
and
retf
jecxz
fsub
ins
cmp
imul
(bad)
es
mov
sahf
or
(bad)
cmp
jle
xchg
cmps
xchg
xchg
imul
rol
sbb
mov
xchg
jmp
call
lds
xchg
fs
mov
scas
mov
jno
mov
mov
inc
(bad)
fist
dec
pop
mov
xor
push
lock
mov
dec
push
arpl
arpl
mov
js
jmp
scas
cmp
pop
lea
icebp
adc
xchg
xor
in
xor
push
dec
repnz
rol
fs
xor
loopne
stc
ret
sub
add
mov
push
lds
aas
aam
test
push
inc
neg
and
fcom
jmp
jecxz
aad
mov
jg
push
xlat
push
out
cmp
mov
pop
xor
xlat
xchg
adc
pop
adc
pop
mov
bound
sbb
xor
scas
inc
iret
xlat
outs
addr16
retf
jns
std
mov
mov
(bad)
xchg
adc
dec
push
sbb
mov
ds
inc
push
ror
call
sub
cmp
in
or
fwait
sub
cmp
jbe
sbb
dec
loop
push
bound
out
lock
popa
mov
ins
cmp
ror
mov
out
repz
imul
dec
mov
aaa
xor
push
pop
mov
sbb
and
stc
mov
into
(bad)
cmp
cmps
out
out
int
mov
mov
and
int3
mov
sub
test
fs
dec
fst
in
addr16
data16
(bad)
loope
mov
jbe
ins
fmul
loopne
shr
push
jg
mov
xchg
mov
mov
popa
popa
mov
jb
daa
std
lea
loopne
jnp
pop
mov
std
rcr
fwait
sti
mov
add
hlt
rcr
mov
add
ds
in
test
aad
stc
jno
inc
(bad)
daa
cmps
clc
xchg
in
dec
push
jne
xor
xor
lds
mov
lock
jb
lods
inc
pop
jecxz
aaa
or
fs
ins
into
mov
mov
push
dec
arpl
aad
arpl
cmp
cmp
inc
dec
jb
outs
out
adc
(bad)
(bad)
(bad)
dec
iret
pop
dec
enter
xchg
cmp
xchg
rcr
sub
es
pop
inc
sar
xchg
mov
cmc
jg
retf
cmp
ss
or
mov
test
fsubrp
scas
test
mov
jns
mov
jmp
pop
js
sti
pop
mov
jmp
mov
fstp
ins
ror
dec
out
out
jp
push
cmp
outs
inc
cmp
lods
imul
(bad)
sahf
xlat
sar
and
push
mov
in
sahf
fwait
inc
enter
or
sbb
bnd
add
mov
mov
and
add
(bad)
fisttp
ret
mov
add
repz
xor
sbb
jle
repz
and
mov
dec
popf
dec
cmp
jmp
fwait
dec
call
repnz
stos
(bad)
xlat
mov
or
cld
xchg
mov
enter
mov
aam
mov
dec
push
xchg
xlat
clc
adc
cmp
lock
popa
cmp
cs
pop
retf
clc
pop
xor
aaa
rcr
pop
add
jo
jno
inc
js
xor
xchg
loop
pop
xor
test
aas
int3
push
mov
add
mov
add
int
loopne
fcomp
and
cdq
les
cmp
loop
es
data16
arpl
daa
fs
retf
out
dec
and
pop
int
shl
xchg
into
out
add
dec
cld
outs
xchg
or
pushf
iret
(bad)
sub
adc
add
je
scas
pop
xchg
int
push
mov
mov
xchg
aam
fsub
pop
adc
scas
sbb
ja
cmp
mov
xchg
fs
fmul
sub
mov
inc
mov
out
dec
jmp
push
jne
ja
xlat
jne
sbb
mov
xor
mov
jg
fadd
lds
sub
pop
aam
mov
inc
pusha
and
inc
and
sub
mov
dec
out
repz
call
ret
and
and
shl
icebp
addr16
cmps
retf
mov
out
pop
xchg
dec
mov
ret
xchg
(bad)
pushf
sub
sti
jns
scas
inc
ins
mov
scas
mov
test
(bad)
lea
lock
mov
jp
or
jno
or
fdiv
adc
mov
adc
jo
movs
fbld
jg
mov
xchg
jne
dec
mov
cmp
test
jne
inc
push
jecxz
adc
popa
test
icebp
outs
icebp
ja
scas
loop
or
js
add
popa
ret
retf
clc
ret
xchg
dec
(bad)
pushf
aaa
or
jge
jo
jg
aas
data16
add
ja
retf
imul
push
push
push
jb
mov
mov
cmp
mov
fsub
sub
ins
pop
lods
sub
mov
ins
or
xchg
pop
sub
push
ja
sub
std
(bad)
sub
ja
call
retf
push
push
inc
cld
ins
jnp
std
add
ja
jne
cmp
mov
imul
scas
daa
sub
pop
mov
in
leave
rcr
fidiv
mov
in
(bad)
jb
rcr
dec
not
stos
and
mov
push
sbb
add
imul
push
loopne
inc
jns
ja
lock
movs
mov
mov
cwde
mov
mov
dec
add
ficomp
and
imul
in
loopne
lahf
sub
add
scas
cmp
lods
loopne
nop
jmp
add
fucomp
pop
in
(bad)
icebp
push
push
jnp
mov
repnz
mov
jb
jmp
int
jl
outs
mov
pop
cmp
fldenv
dec
sbb
gs
iret
(bad)
sbb
outs
leave
(bad)
sbb
jno
pop
jge
aad
neg
mov
mov
ret
sbb
loop
mul
push
sub
div
fidiv
clc
int3
xchg
fdiv
rcr
mov
mov
fs
pop
jp
inc
or
or
mov
xlat
mov
stc
sub
sub
cwde
sub
mov
lahf
cmc
add
cli
call
pop
sub
cwde
push
pop
add
stos
aad
mov
(bad)
mov
push
mov
push
inc
cli
jge
sbb
lods
push
and
sahf
add
sub
das
push
jg
dec
test
xor
adc
repz
lahf
sar
icebp
cmp
mov
push
ds
dec
push
sti
movs
or
aaa
jo
push
faddp
out
pop
mov
or
outs
imul
neg
jl
sbb
scas
adc
dec
fs
jge
mov
cmps
sar
out
aad
jle
cmp
scas
sbb
outs
mov
mov
sar
scas
mov
div
sbb
cld
xchg
jno
mov
cmps
out
lods
loop
cmovae
dec
hlt
cmp
mov
cli
or
(bad)
mov
sar
push
mov
sub
(bad)
dec
mov
lods
popf
sbb
ins
cmp
dec
idiv
adc
dec
jl
cwde
pop
inc
stos
dec
jg
mov
ror
fsub
int3
sub
lods
imul
retf
sbb
xor
cmps
xchg
or
loope
scas
mov
dec
xchg
pop
or
pop
xchg
push
rcr
repnz
push
inc
clc
movs
sub
(bad)
inc
repnz
cmps
jne
pop
and
push
adc
lock
add
scas
mov
icebp
push
pop
push
stos
sub
scas
not
inc
mov
sub
pop
outs
jns
outs
push
gs
sub
and
pop
xchg
cs
inc
mov
ss
sbb
push
mov
and
gs
test
nop
dec
int3
ins
jae
cbw
xor
xchg
repz
outs
es
adc
rcr
pop
sub
mov
(bad)
js
mov
idiv
(bad)
xor
add
stos
stos
imul
jg
lods
push
test
push
adc
int
jne
loopne
jnp
xchg
leave
leave
add
lahf
mov
cmc
iret
pop
sub
and
lea
cld
cmp
outs
push
mov
dec
scas
or
sub
mov
xchg
push
ret
les
fldl2t
(bad)
pop
shr
push
mov
mov
pop
cmp
sar
loopne
jg
push
adc
xor
pop
in
pop
js
ja
not
scas
jb
rcr
cmp
sbb
adc
jle
xchg
jp
mov
ja
jne
cmp
jmp
bound
sbb
sub
push
repz
push
dec
mov
mov
push
mov
or
xlat
push
leave
jecxz
popf
jmp
push
xor
xlat
mov
xchg
mov
aas
and
mov
jg
xchg
pop
pop
ret
xchg
push
sub
jg
lock
cld
adc
inc
xchg
mov
out
xchg
(bad)
xor
js
mov
imul
cmp
leave
mov
push
call
inc
push
(bad)
fild
jno
xchg
xchg
cmps
ret
jno
cmps
pop
push
cmp
jno
push
mov
lds
js
imul
ret
sbb
pop
xor
cmps
jl
fiadd
clc
in
ins
jae
scas
out
(bad)
lahf
fbld
js
xchg
lock
mov
pop
dec
cld
adc
repz
(bad)
and
stos
mov
fs
jp
mov
out
push
adc
fwait
lock
div
fimul
in
or
fwait
sbb
neg
push
data16
mov
mov
aad
cli
jns
mov
sti
or
push
les
cli
sbb
int3
lods
inc
sub
arpl
outs
test
cmp
test
movs
cwde
es
inc
loopne
hlt
(bad)
xchg
push
mov
pop
out
loopne
inc
popa
pop
loopne
gs
test
outs
das
jne
sbb
(bad)
cdq
mov
(bad)
outs
shr
dec
fs
dec
(bad)
scas
xchg
jnp
mov
or
xor
out
or
mov
scas
mov
js
mov
inc
cmp
cmc
fcom
sar
push
mov
jge
shl
pop
ret
mov
dec
sahf
mov
sub
outs
int3
mov
xor
ss
dec
xchg
mov
repz
jle
aaa
ja
pop
lock
in
ins
out
js
popa
mov
mov
loop
xchg
xlat
jae
stos
and
sub
inc
sub
adc
(bad)
repnz
xchg
jae
sub
add
and
test
lea
and
iret
sbb
leave
mov
fnstsw
mov
adc
and
(bad)
fist
cmp
sbb
sub
jnp
in
xlat
hlt
in
add
aas
push
pop
call
enter
mov
push
and
scas
pop
mov
cld
iret
ss
push
sbb
push
lahf
jmp
cmp
aam
sub
sub
lock
stos
push
pop
mov
addr16
addr16
or
and
mov
xchg
mov
or
mov
pop
(bad)
mov
aaa
xchg
stos
aam
push
cmp
pop
loopne
fwait
hlt
sbb
jo
adc
sbb
mov
add
sti
add
lods
jnp
aaa
jl
dec
dec
fisttp
mov
push
shr
sub
test
(bad)
mov
(bad)
jmp
iret
stos
repnz
adc
ins
(bad)
pop
ds
mov
mov
outs
push
out
ss
or
lock
(bad)
jl
arpl
jno
jb
mov
mov
push
je
iret
(bad)
repnz
push
dec
adc
lods
retf
mov
out
and
cmps
loop
test
pop
push
xor
aas
idiv
(bad)
test
push
sub
call
push
fwait
mov
push
lahf
and
or
sbb
push
arpl
test
jns
mov
mov
shr
(bad)
xchg
jle
mov
cmps
pop
mov
pop
out
inc
ins
jnp
loop
test
out
sbb
scas
scas
jns
pop
cmc
enter
pop
mov
adc
vpxor
jmp
xchg
push
in
sub
addr16
fs
das
(bad)
and
and
inc
ds
mov
pop
mov
call
int3
mov
xor
jne
pop
mov
xchg
cmp
jns
call
nop
repnz
xchg
dec
inc
pop
cli
push
mov
aaa
fcom
mov
mov
sahf
frstor
lds
fsub
sbb
mov
rcr
fisubr
loope
out
in
mov
mov
lahf
int3
mov
push
cmps
jae
xchg
hlt
icebp
pop
mov
add
mov
rcl
xchg
fcomp
lods
cmp
fnstcw
stc
pushf
ret
push
adc
jp
jmp
fstp
inc
xor
lods
dec
mov
pop
js
fisubr
xchg
leave
sub
dec
out
dec
adc
clc
lods
pop
cdq
(bad)
mov
dec
in
sub
jbe
imul
call
dec
adc
mov
jnp
aas
retf
pop
dec
cld
push
dec
mov
dec
pop
and
mov
adc
add
push
test
rol
ins
sub
dec
ficom
mov
arpl
sbb
cs
fmul
add
lock
adc
stos
out
sub
call
ret
jo
push
imul
xchg
inc
and
cdq
outs
inc
in
frstor
lods
out
pop
fidiv
jp
dec
out
mov
sti
sti
mov
int
mov
jmp
pop
mov
xchg
les
mov
lds
push
xchg
popa
xor
push
pop
test
movs
sub
xchg
loope
push
movs
sti
inc
mov
lods
int3
mov
mov
sbb
scas
out
push
pop
push
mov
sbb
push
mov
loope
jmp
sub
xchg
adc
mov
ins
fsub
ins
(bad)
pusha
ficom
adc
sbb
add
rep
push
leave
ds
jmp
sar
arpl
xchg
mov
and
adc
jb
or
sbb
inc
in
rcl
mov
add
jmp
xor
sbb
cmp
jns
jle
sub
mov
xor
pop
in
cmp
(bad)
aad
mov
mov
shl
scas
push
mov
fiadd
dec
ds
pop
adc
push
cmp
pop
mov
adc
add
push
test
mov
xchg
stos
aam
dec
aam
dec
mov
add
inc
aad
call
scas
dec
jno
pop
icebp
arpl
retf
shl
imul
pop
mov
jnp
ins
mov
fwait
jae
out
pop
push
(bad)
sti
out
aad
je
jae
loopne
sub
cmp
and
shl
inc
cs
in
sahf
mov
xor
mov
mov
mov
jl
cmp
jno
mov
ss
mov
jne
mov
mov
int3
pop
fisub
lahf
(bad)
cs
xchg
iret
adc
xchg
jmp
pushf
arpl
add
in
(bad)
(bad)
pop
in
aaa
ror
(bad)
ins
cdq
jg
imul
mov
rcl
jge
std
jnp
xor
outs
dec
cdq
scas
call
push
cmps
adc
push
mov
adc
stos
xchg
cmp
scas
fidiv
sub
sbb
ss
inc
sub
push
(bad)
dec
sub
cs
xchg
loop
xchg
mov
not
nop
dec
lods
ss
xor
or
inc
fdiv
int3
(bad)
push
mov
fs
out
adc
xor
mov
mov
xchg
mov
dec
push
sub
inc
and
sahf
xor
lahf
adc
add
aas
cmp
inc
popa
or
xchg
aas
fsubr
push
fbstp
mov
pop
std
stos
mov
stos
mul
gs
jbe
pop
scas
adc
jne
add
lods
mov
pop
sbb
xor
stc
js
outs
sub
jp
ins
mov
ins
mov
fsubr
mov
fcomip
mov
fisttp
in
jb
mov
cs
stos
xchg
sub
dec
fwait
adc
mov
dec
pop
popa
popf
xor
dec
xchg
xchg
mov
je
mov
dec
cmps
cwde
pop
ja
mov
pop
(bad)
push
mov
adc
mov
cmp
mov
add
xor
out
mov
icebp
mov
addr16
scas
sbb
bound
cmp
mov
in
aaa
xor
dec
leave
dec
inc
ja
xchg
jae
pop
ja
pop
push
repz
shl
fs
out
dec
pop
or
sbb
sar
cwde
sub
pop
mov
or
fldenv
inc
fsubr
add
xor
and
sub
les
mov
hlt
int
js
fwait
iret
mov
outs
push
mov
stc
stos
js
pop
scas
adc
aad
cwde
fcom
jecxz
loop
xchg
bound
lock
cs
inc
pop
or
xchg
sub
imul
sub
div
xor
call
fs
pop
imul
jns
xchg
movs
mov
mov
mov
pop
nop
and
neg
stos
mov
fs
dec
jae
nop
add
push
in
mov
(bad)
xor
adc
mov
stos
mov
push
xor
mov
adc
and
mov
mov
retf
(bad)
fild
into
lea
jo
imul
cmp
retf
mov
xchg
mov
(bad)
and
cmp
popf
xchg
cwde
(bad)
add
push
test
(bad)
in
cmp
pop
cmp
arpl
and
repnz
fist
movs
pop
mov
pop
outs
dec
cmc
jno
inc
retf
push
dec
fcomp
fmul
jmp
inc
mov
pop
xchg
rcr
mov
call
outs
push
xchg
xor
int3
lods
frstor
into
dec
call
dec
xor
mov
pop
leave
pop
mov
arpl
scas
adc
mov
xchg
mov
and
push
jge
les
test
out
lods
inc
repz
daa
pop
mov
or
ins
dec
leave
pop
imul
mov
sub
adc
jle
mov
adc
mov
mov
mov
test
sub
arpl
(bad)
sub
mov
xor
mov
push
dec
xor
push
mov
mov
test
sar
ins
into
sub
add
pop
(bad)
xchg
xchg
add
dec
xchg
test
fs
retf
pop
inc
int3
lea
dec
mov
sbb
jo
cld
in
lods
mov
fisttp
xchg
push
ret
out
out
mov
loope
cmp
mul
cmp
cwde
imul
xchg
(bad)
sub
jnp
mov
add
pop
ret
popa
mov
sahf
push
add
icebp
cmp
inc
mov
cmp
out
jnp
adc
mov
out
xor
movs
data16
imul
ror
rol
jno
mov
push
push
dec
in
out
int
call
inc
(bad)
shr
or
fist
daa
fs
arpl
sub
and
out
mov
call
imul
and
into
sahf
popa
sbb
xor
pop
push
ret
xchg
push
ret
(bad)
fdiv
mov
sub
mov
movs
xor
pop
jne
dec
out
ja
sub
lea
imul
bound
mov
out
sbb
sub
cmp
mov
mov
push
jbe
push
fcom
js
aad
fucomp
and
fucomp
xor
fs
(bad)
ror
movs
pop
jae
pop
inc
data16
mov
and
lods
xchg
mov
ss
sbb
dec
sti
mov
cmp
push
cmp
or
call
neg
fs
sub
out
(bad)
pop
jge
lods
js
pop
jns
xchg
in
push
push
sahf
push
outs
mov
test
or
dec
mov
xchg
in
stos
mov
enter
jne
jne
mov
(bad)
rcr
adc
sbb
in
dec
cmp
mov
imul
xchg
xor
xchg
sub
push
ficom
das
shl
pusha
inc
retf
mov
arpl
push
xchg
loopne
sub
movs
pusha
push
sub
repz
mov
cli
xor
cmp
cmp
int3
jle
sub
mov
in
push
in
xor
lods
imul
call
sub
arpl
mov
aad
inc
loope
inc
(bad)
lds
jb
jne
retf
sbb
ret
mov
repnz
pop
mov
jae
mov
int
out
and
call
stc
fadd
pop
mov
mov
fs
jae
mov
mov
jo
jns
pop
(bad)
lods
out
popa
out
inc
cmp
mov
ss
sahf
cmp
mov
mov
lds
fprem
xchg
stos
xchg
stc
mov
adc
add
push
test
xchg
fs
lds
mov
(bad)
lds
sub
xchg
pop
sahf
mov
push
mov
fwait
int3
xchg
lea
pop
jne
add
mov
jns
cdq
mov
rcr
pop
add
mov
shl
dec
loope
jb
ja
and
mov
mov
into
sti
repz
out
xor
sbb
mov
test
cmps
push
inc
outs
cs
mov
adc
ins
hlt
stos
xor
sub
sub
nop
mov
out
ins
mov
pop
ficom
in
push
sbb
mov
or
scas
fld
jb
inc
sar
jb
push
pushf
std
cmp
jnp
sbb
push
or
mov
add
mov
cs
icebp
pop
adc
pop
mov
push
inc
or
add
mov
shl
xchg
fimul
mov
sub
ja
cs
iret
fstp
xchg
add
jmp
and
sub
mov
adc
pushw
test
jmp
(bad)
imul
mov
out
xor
loop
push
ret
addr16
cmp
jne
mov
ret
ret
pop
stos
retf
into
sbb
imul
ror
or
mov
jl
lds
outs
scas
je
repnz
inc
xchg
or
pop
mov
popa
pop
leave
mov
les
inc
jmp
pop
sbb
shr
inc
mov
cmp
push
push
(bad)
xchg
nop
xchg
enter
push
inc
push
xchg
in
jmp
retf
mov
mov
je
mov
sub
sub
mov
ficom
ret
jg
or
fmul
movs
call
stos
push
sub
sbb
imul
ja
inc
int
mov
inc
add
add
add
add
or
add
pop
add
add
add
adc
adc
push
add
inc
push
xchg
mov
and
xor
popa
jno
mov
bound
mov
xor
adc
mov
inc
push
jae
inc
xchg
ret
sar
fiadd
or
add
or
add
out
nop
cmp
mov
cmc
add
push
pop
in
ja
push
out
out
div
sub
imul
cmp
fsub
inc
das
xor
ins
into
sbb
ret
push
mov
mov
xchg
mov
lds
cld
in
mov
enter
xchg
stc
adc
stc
and
push
mov
shr
int
fcomp
(bad)
call
mov
movs
lods
retf
adc
jecxz
repz
adc
fst
mov
mov
popf
loope
sar
fisubr
jbe
jge
lea
sub
fstp
test
pop
stc
sub
push
test
ffree
shl
cwde
and
pop
test
add
call
gs
adc
ja
push
mov
cld
sub
xor
cmp
(bad)
dec
pop
adc
mov
fs
adc
ja
add
lods
cmp
(bad)
icebp
lahf
call
dec
inc
mov
iret
jb
xor
add
push
call
or
loope
dec
ins
jmp
push
and
push
mov
pop
pop
pmaxsw
pusha
push
push
dec
inc
cld
(bad)
mov
out
int
ja
test
push
sti
push
dec
mov
cdq
imul
outs
rcr
pop
shl
jnp
dec
cmp
rol
jle
inc
loope
aas
mov
sub
aad
mov
mov
data16
and
add
cdq
mov
sbb
fistp
aas
(bad)
sub
in
ds
adc
ds
sahf
add
cdq
adc
push
fisubr
xor
mov
movs
(bad)
ins
push
or
stc
sub
mov
aad
loop
aaa
daa
bnd
inc
pop
pop
add
cmps
push
and
adc
loopne
syscall
adc
push
fcomi
push
clc
iret
int
cld
outs
stc
cmps
fdiv
cmp
dec
aam
adc
icebp
dec
(bad)
fs
mov
daa
test
stos
sub
pop
dec
push
jg
mov
test
inc
outs
imul
stos
(bad)
(bad)
leave
jne
icebp
mov
jmp
cmp
cmps
pop
mov
sub
push
fstp
and
pop
xor
into
jmp
cmp
and
fs
add
lock
lods
mov
push
add
sbb
imul
xchg
loop
mov
push
xchg
add
fsub
loop
cs
movs
lock
call
movs
popa
std
into
(bad)
pop
mov
xchg
outs
push
and
mov
rcr
sub
mov
mov
push
or
fmul
into
mov
rcr
imul
cmp
retf
xchg
call
jne
xchg
into
int3
push
shl
pop
jle
test
dec
push
mov
mov
mov
repnz
popa
aas
jb
bound
push
jae
cmp
jae
mov
int
mov
push
xchg
aad
ins
add
cmps
pop
add
mov
aas
lods
ins
cld
inc
jp
bound
scas
add
add
sti
popa
loop
jno
or
push
dec
sahf
mov
sub
adc
dec
nop
je
lock
fst
add
jp
daa
cwde
push
xchg
(bad)
(bad)
cmc
loope
inc
sub
xchg
xor
mov
sub
in
add
ror
or
cmps
cmps
clc
cmps
js
mov
nop
mov
stc
data16
pop
mov
stos
jno
in
mov
rcr
aad
push
inc
repnz
jle
imul
js
leave
or
(bad)
repz
mov
test
push
mov
das
cmp
fwait
or
dec
mov
sbb
cmps
not
popf
pop
mov
test
jbe
add
js
sub
jg
cmp
div
in
int
adc
inc
icebp
ror
adc
push
sahf
shr
push
cld
(bad)
mov
loop
in
scas
jecxz
pop
aad
mov
jo
jmp
pop
push
add
push
jl
pop
retf
(bad)
add
inc
xchg
icebp
push
daa
les
pop
pop
inc
sbb
les
cld
and
push
lods
and
inc
fs
test
test
inc
(bad)
adc
jge
inc
test
imul
ins
js
iret
iret
call
int
iret
imul
in
pop
lods
cmp
fadd
pop
adc
scas
push
in
lea
mov
pmullw
lahf
bound
and
call
mov
add
call
daa
pop
jbe
or
add
adc
mov
xchg
aaa
enter
jnp
pop
sub
sar
mov
popf
mov
sbb
push
inc
repz
sahf
and
fisub
(bad)
stos
sub
mov
(bad)
sbb
sbb
cmp
scas
lahf
xor
and
imul
push
daa
aad
aad
dec
xor
aad
arpl
push
sbb
push
mov
aaa
nop
mov
sbb
pushf
and
pop
ins
leave
(bad)
test
lods
stos
or
das
or
leave
aas
test
xchg
sub
xor
xor
mov
imul
jo
(bad)
dec
pop
xchg
loopne
xchg
out
dec
and
mov
xor
jle
aam
pop
ins
sbb
mov
dec
sbb
(bad)
in
inc
aad
popa
into
popa
into
jmp
mov
div
cmp
stos
push
push
or
in
(bad)
(bad)
leave
jge
(bad)
jge
ss
outs
stc
sub
stc
sub
setb
lock
sub
setb
rol
mov
add
dec
sub
stc
sub
lock
sub
into
in
mov
popa
into
popa
into
jmp
push
ja
out
out
out
mov
mov
fwait
add
loop
push
jge
(bad)
jge
ss
cwde
fistp
mov
cmps
shr
test
mov
ins
mov
mov
xchg
clc
xchg
mov
inc
dec
mov
dec
adc
sahf
sub
fwait
adc
or
into
jb
mov
jnp
imul
push
ja
enter
jg
xchg
aaa
stos
pop
mov
sub
stos
das
stos
clc
cwde
data16
data16
cmp
cli
mov
popf
retf
popf
sar
jg
adc
cmps
jge
call
push
add
xchg
jo
xchg
sahf
arpl
sub
ret
pushf
ret
popf
xlat
repnz
mov
arpl
leave
push
stc
mov
sub
stos
das
stos
clc
fadd
jnp
dec
add
mov
lds
mov
rcr
push
fcomp
sbb
mov
push
hlt
arpl
sar
daa
adc
xor
cmp
(bad)
ja
stc
repz
jae
jae
inc
aam
stc
lods
cmp
bound
inc
mov
push
mov
push
pop
push
icebp
mov
jmp
add
ret
xchg
dec
je
mov
pop
add
mov
test
data16
jecxz
popf
cmps
popa
mov
xchg
hlt
data16
push
pop
mul
push
sub
mov
in
int3
sti
int3
sub
inc
popa
jl
dec
sub
jecxz
or
cs
jbe
imul
xor
fisub
in
int3
cmp
pushf
aad
out
mov
fidivr
lods
cmp
bound
inc
mov
ja
pop
jno
test
scas
loop
cld
fadd
fstp
ret
les
adc
cmps
jo
imul
ins
sbb
jbe
push
push
inc
mov
inc
(bad)
out
inc
arpl
(bad)
in
or
outs
ds
mov
rcr
lea
sbb
sbb
adc
call
arpl
ins
xor
jecxz
lods
les
mov
xchg
pop
cmp
(bad)
es
inc
pop
loop
int
xor
fs
shl
jno
lahf
lahf
xor
fnstsw
into
sti
xor
repnz
sahf
push
(bad)
cli
out
fidiv
pop
(bad)
jmp
jmp
jb
xchg
inc
mov
push
fidiv
cmp
pop
mov
xchg
mov
dec
inc
fwait
hlt
adc
jmp
jbe
inc
pop
lock
push
sbb
adc
dec
cmp
int
inc
leave
sbb
iret
inc
ficomp
xor
fdivr
and
sahf
sub
inc
fist
xchg
lock
(bad)
idiv
(bad)
sbb
test
cmp
into
icebp
int
iret
arpl
leave
push
lods
push
push
jns
into
cmc
xchg
jmp
cdq
mov
jmp
aad
pop
sbb
jne
adc
sbb
add
push
dec
(bad)
shl
hlt
mov
jne
inc
imul
inc
cmp
push
mov
mov
xchg
cdq
test
or
add
ss
mov
call
jmp
adc
or
sbb
arpl
xor
test
add
xchg
dec
push
inc
(bad)
xor
or
lods
sbb
addr16
popa
into
push
ja
enter
(bad)
and
popa
iret
arpl
leave
pop
push
int
mov
pop
out
cmp
sbb
stos
clc
call
sahf
and
add
pushf
in
mov
xchg
pop
lods
and
sahf
out
setb
push
aaa
mov
out
out
dec
cmp
cmp
cmp
iret
loop
(bad)
sbb
xor
scas
call
cmp
sbb
stos
clc
call
mov
mov
cld
stc
lods
cmp
push
into
sti
dec
and
sti
xor
xchg
and
dec
xor
int
push
sbb
stos
das
stos
clc
add
mov
aas
imul
push
repz
pop
push
adc
js
or
cmp
test
sahf
adc
js
jg
jg
out
out
mov
mov
sub
push
daa
aad
aad
inc
jmp
fnstenv
(bad)
cmc
mov
fnsave
push
bound
ficom
jl
inc
mov
adc
js
adc
cmc
add
lahf
adc
dec
mov
out
mov
dec
mov
push
bound
cmc
adc
add
mov
add
fisub
mov
test
out
mov
add
push
jbe
scas
cmp
(bad)
ficomp
jno
(bad)
out
sahf
(bad)
cs
cmp
jne
pop
fnstenv
mov
outs
int
pop
push
pop
(bad)
cmc
mov
sub
push
dec
mov
adc
sub
push
pushf
adc
sub
push
fbstp
stos
cmp
test
fisub
mov
pminub
stc
dec
adc
popf
movs
xchg
inc
fidiv
std
stos
cmp
mov
test
loop
pop
pop
dec
stos
sub
mov
mov
cmp
mov
xor
jp
jecxz
call
jl
sub
gs
sbb
mov
mov
mov
mov
xchg
or
jle
xchg
inc
pushf
scas
cs
scas
es
(bad)
fidiv
adc
sub
mov
movs
sti
push
push
std
stos
sub
pop
add
mov
fadd
repnz
sahf
jns
imul
push
pop
push
icebp
cs
sbb
mov
ret
sbb
repz
loopne
xchg
xchg
sub
stos
sub
inc
inc
call
ficomp
jmp
sub
sub
pop
fs
scas
push
mov
ins
mov
imul
(bad)
sbb
push
iret
jecxz
jo
sahf
jns
cmp
sub
fwait
push
daa
aad
aad
dec
pusha
cmp
pusha
pop
aad
mov
add
adc
inc
adc
inc
dec
sub
inc
adc
inc
adc
rcl
push
retf
ficomp
xchg
push
adc
and
loopne
dec
mov
scas
jb
ins
mov
mov
ins
push
fstp
mov
jo
mov
mov
jmp
retf
in
mov
add
jmp
inc
out
sub
mov
sub
imul
out
mov
adc
inc
rcr
je
pop
pop
add
test
icebp
mov
(bad)
out
pop
lods
push
mov
das
stos
clc
xchg
sbb
mov
into
mov
std
stos
sub
test
fisub
aas
push
adc
xchg
mov
push
loop
xlat
jb
je
mov
xor
aam
int
xor
and
push
sahf
lods
mov
xbegin
inc
add
in
(bad)
lock
outs
inc
pop
xlat
inc
(bad)
daa
xchg
sbb
add
sub
mov
jecxz
in
adc
ret
out
adc
aad
add
xor
bound
xchg
pop
sbb
sub
imul
jmp
jne
rol
int
mov
cmp
cmp
cmp
push
jg
mov
mov
(bad)
sub
mov
(bad)
cli
mov
popa
mov
imul
sbb
sahf
imul
push
rcl
or
push
dec
aas
mov
(bad)
out
bound
or
inc
(bad)
pop
(bad)
add
addr16
ficomp
fsubp
sub
pop
push
lahf
sar
push
lea
lods
imul
inc
push
aaa
sbb
pop
dec
pop
add
loopne
test
lods
xor
dec
int3
sub
or
push
dec
inc
inc
aam
aad
pop
(bad)
enter
adc
add
inc
ins
adc
xor
inc
les
sbb
cmc
idiv
xlat
cld
aas
call
pop
out
out
add
cmps
sar
and
mov
xlat
mov
ss
stos
das
stos
clc
call
(bad)
repz
rcl
inc
int
cmps
rcl
cli
pop
outs
std
dec
loopne
aad
popf
jbe
sbb
xor
cmp
inc
pop
fsub
icebp
adc
jl
or
shl
sahf
xor
push
and
cwde
xor
xchg
mov
mov
in
mov
mov
add
xor
sbb
out
jne
ss
mov
xchg
test
loopne
mov
cmc
or
cmp
mov
adc
ds
scas
loop
js
fwait
add
mov
std
sub
mov
rcl
and
fcmovb
inc
xor
and
and
and
and
adc
pop
ret
das
int
dec
dec
dec
dec
dec
dec
dec
in
push
jge
sub
std
mov
add
mov
add
xchg
xchg
mov
dec
inc
push
popa
test
mov
call
or
popf
sub
mov
push
push
push
loop
dec
dec
dec
dec
dec
in
and
lods
out
push
ror
movs
pusha
cmp
(bad)
out
push
int
fidiv
xor
xchg
js
adc
enter
cmc
inc
cmc
jg
jmp
js
shr
sub
fld
cmp
inc
jmp
adc
enter
push
pop
and
popf
adc
leave
xchg
push
(bad)
in
pop
rcr
dec
fcmovbe
jbe
xchg
sar
inc
add
push
mov
std
stos
daa
fs
pop
sub
ins
mov
rol
xor
shl
cmp
cmp
xor
mov
stc
sub
jo
movs
sub
dec
bound
sub
mov
add
cmp
sbb
add
xchg
xchg
mov
aad
arpl
mov
xor
jae
cmp
dec
cld
cmp
cs
(bad)
test
stos
out
out
mov
sub
or
ins
sbb
push
jb
sysret
xchg
or
push
adc
out
cld
shl
mov
sahf
and
and
adc
in
cld
cmp
dec
xor
imul
add
add
jle
mov
rcl
(bad)
imul
div
fist
lods
in
test
sbb
in
imul
rcr
test
dec
inc
fs
cs
xor
movs
rcr
xchg
xchg
xchg
xchg
xchg
mov
sbb
mov
and
dec
dec
pop
sub
daa
push
mov
mov
fist
add
push
cwde
aaa
dec
imul
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
adc
loope
or
outs
cmc
jns
fwait
cmp
push
xchg
and
jmp
push
jg
mov
cmp
and
mov
mov
(bad)
adc
lods
or
cmp
dec
xor
call
gs
inc
jle
pop
inc
mov
cmc
jg
sti
arpl
fs
jae
out
push
add
les
or
xor
sbb
add
xor
ret
mov
jbe
sub
ja
xchg
xor
xor
in
pop
xor
or
xor
outs
cdq
cmp
push
int
ins
jae
or
sbb
mov
pop
add
popa
lahf
pop
pop
loop
push
cs
xchg
or
jge
aad
ror
jne
and
rcr
xchg
xor
push
dec
popf
mov
sahf
into
xor
int
push
mov
jae
in
xor
and
push
mov
sar
add
and
sub
dec
or
and
call
xor
add
sub
ja
arpl
xchg
je
add
push
cmp
and
and
data16
mov
pusha
cmp
jmp
scas
xchg
mov
stos
adc
in
mov
pop
push
out
sbb
leave
stos
repnz
pop
fdivrp
lea
inc
test
in
hlt
mov
(bad)
mov
push
enter
shl
dec
enter
xor
mov
jg
mov
mov
outs
iret
sub
xor
mov
jg
fnstcw
cwde
dec
push
and
std
dec
pop
xchg
jmp
aaa
sbb
push
jmp
fwait
push
inc
sub
push
iret
mov
ins
push
push
fidiv
and
xlat
xchg
ret
leave
jp
and
xchg
pop
sub
cmp
push
loope
xchg
neg
shr
daa
adc
push
push
push
mov
sbb
ficom
cld
dec
and
cmps
mov
pop
or
sub
adc
add
pop
sub
push
mov
jns
pop
dec
dec
cmp
or
push
xor
loope
ficom
mov
adc
dec
es
std
fwait
dec
loop
mov
inc
shl
sbb
je
adc
jne
add
add
into
xchg
imul
out
fidiv
pop
lods
inc
shl
mov
adc
cmps
enter
pop
mov
stc
or
mov
out
in
cdq
cmp
movs
fidiv
mov
add
jnp
(bad)
enter
into
int3
push
push
jne
mov
add
mov
add
xor
gs
cmc
mov
ins
repz
and
inc
pop
xor
inc
fs
jmp
popf
sbb
into
bound
pop
test
fsub
ss
mov
nop
mov
pop
pop
call
(bad)
(bad)
les
dec
jns
ds
ss
xchg
mov
in
ret
push
xchg
jne
xchg
gs
lods
popf
mov
rcr
daa
mov
cmp
fwait
cmp
je
xchg
sub
mov
sti
push
in
sbb
xchg
clc
sub
loopne
inc
hlt
into
jae
data16
mov
rcr
sar
pop
push
test
loope
ins
cmps
inc
adc
mov
or
mov
daa
dec
daa
mov
ins
jae
es
fsubr
sub
mov
sbb
cmp
arpl
dec
push
and
adc
mov
(bad)
sahf
or
leave
mov
test
cmp
fst
push
fcomip
add
ja
push
mov
cmp
addr16
ret
in
pop
popf
stos
or
pop
dec
jp
mov
mov
cmp
dec
out
mov
pop
add
and
mov
pop
add
add
sti
or
(bad)
movs
psadbw
loop
jbe
prefetch
retf
js
inc
mov
ret
pop
cmp
push
bound
inc
retf
sub
ins
sbb
xor
xchg
xor
mov
and
aad
mov
fwait
pushf
shl
int3
imul
push
aad
into
pop
dec
dec
inc
mov
and
jb
inc
add
test
cmps
cmp
mov
mov
pop
ror
cmp
imul
inc
jmp
adc
or
mov
sbb
sbb
in
std
call
jge
out
dec
or
in
or
movs
scas
aaa
adc
xor
mov
aam
nop
lods
push
inc
jbe
push
sub
(bad)
sar
ins
rcl
mov
push
movs
xlat
cmp
push
data16
xor
iret
sbb
adc
jno
jo
mov
inc
mov
cmps
int
js
outs
pop
jns
loopne
es
call
call
push
sub
sub
popf
or
sahf
xchg
mov
sbb
mov
sar
aam
add
ds
addr16
mov
jne
fwait
adc
add
out
retf
ins
ss
loopne
movs
sar
jo
push
push
adc
repnz
push
repnz
fwait
pop
int
push
add
pop
sub
or
xor
retf
sub
sub
idiv
inc
inc
retf
mov
jle
movs
(bad)
popa
scas
pop
enter
sbb
neg
pop
lea
(bad)
sub
dec
adc
lahf
jb
dec
sub
loope
dec
inc
xchg
ror
fimul
jp
mov
mov
xor
add
dec
sbb
ins
xor
mov
idiv
push
in
push
lods
popf
dec
jmp
add
lea
ins
and
sti
or
sub
mov
imul
test
ret
jmp
shr
movs
ds
adc
cmp
pop
push
inc
jns
ds
push
jb
fwait
xchg
dec
in
mov
int3
xor
cmp
sub
dec
mov
jns
add
xchg
inc
dec
add
sub
mov
sub
dec
xchg
in
adc
adc
stc
xor
imul
ja
sbb
cmp
(bad)
leave
call
ret
and
pop
mov
xlat
je
sub
cmp
mov
out
mov
or
outs
pop
dec
sub
mov
div
xor
push
(bad)
cld
push
stc
sub
sub
inc
cmp
sahf
gs
push
dec
xchg
int3
jmp
mov
aad
and
fild
cmp
jo
repz
fcomp
movs
sub
cmc
cld
mov
push
add
movs
and
jmp
cmp
pop
xor
sub
mov
mov
lock
fs
stos
mov
lods
pushf
dec
push
dec
leave
call
push
sub
outs
mov
push
pop
fwait
popa
int
dec
les
or
cmp
test
xor
add
add
call
dec
icebp
aas
xor
xchg
jns
lods
pop
dec
xchg
mov
adc
xchg
inc
push
addr16
xchg
xchg
inc
clc
add
mov
mov
or
aas
test
pop
ret
or
or
test
lods
mov
ret
jnp
mov
dec
imul
ss
aad
mov
pop
dec
add
sub
in
add
or
adc
or
lock
sub
mov
add
jl
ins
mov
ret
in
jae
ret
xchg
out
inc
inc
rcr
ins
and
or
inc
pop
enter
xchg
and
ins
mov
pop
rcr
dec
or
sub
and
inc
jns
retf
ss
shr
jo
bound
nop
imul
loope
cdq
mov
test
fwait
xor
stos
push
das
fidivr
xchg
rcr
adc
pop
jns
gs
jp
dec
jmp
dec
xor
pop
loope
pop
stos
hlt
fimul
cmp
(bad)
cmps
push
mov
retf
or
and
xchg
retf
dec
and
call
mov
mov
fwait
and
inc
or
jno
in
cs
cmp
push
in
or
mov
pop
fisubr
and
and
movs
inc
bound
push
and
stos
into
aad
push
mov
fiadd
aam
aam
es
adc
push
sbb
ins
push
dec
push
aam
aam
adc
ja
add
adc
pop
add
icebp
adc
push
dec
(bad)
fbstp
jnp
aas
push
test
ds
jl
pop
std
pushf
cmp
les
sub
in
in
pop
and
mov
inc
mov
and
fbstp
push
das
pop
arpl
int
mov
mov
iret
int
idiv
push
push
inc
and
mov
cwde
leave
aam
das
hlt
cmps
retf
int
adc
es
(bad)
or
shl
mov
adc
push
retf
push
not
idiv
adc
(bad)
outs
sub
mov
xor
popf
aaa
mov
mov
je
sbb
imul
js
sbb
pusha
mov
add
xor
push
cmps
adc
leave
xchg
retf
inc
fs
xchg
daa
lds
xchg
mov
out
dec
outs
fidiv
inc
mov
or
cmps
int3
sbb
bound
adc
adc
(bad)
in
dec
mov
dec
xchg
and
jb
mov
and
movs
loope
int3
(bad)
cmp
mov
push
addr16
push
or
mov
out
nop
stos
mov
jmp
cmc
jnp
push
dec
test
cmps
dec
fist
xor
xor
dec
adc
out
push
add
ss
adc
shl
adc
fnstcw
lea
call
cmp
adc
jnp
pop
std
pop
adc
jne
jno
mov
dec
and
push
outs
leave
or
mov
clc
inc
pop
add
mov
jecxz
retf
pop
mov
je
and
test
je
sti
fisubr
sbb
fcomp
cld
dec
es
mov
pop
sbb
and
pop
mov
inc
mov
sahf
lds
shr
pop
adc
bound
xor
push
(bad)
stos
shr
es
inc
cdq
jmp
lds
loope
jp
out
push
repz
dec
jl
dec
inc
scas
xor
cmp
sbb
dec
mov
jmp
and
and
lods
std
fwait
(bad)
mov
add
xor
xchg
dec
shl
adc
in
shl
push
jno
scas
jmp
cmps
imul
cmp
inc
mov
dec
sub
(bad)
rcl
inc
cmp
test
xchg
mov
(bad)
test
jl
mov
in
movs
dec
push
adc
int
xor
lds
(bad)
leave
out
inc
sahf
jbe
push
shl
pop
xor
(bad)
into
(bad)
mov
mov
das
jae
or
mov
inc
retf
pop
and
dec
mov
fist
and
lock
mov
or
pop
retf
inc
dec
je
inc
cli
rcl
inc
test
in
cmp
fs
ds
lds
and
stos
pop
jl
mov
call
cdq
cmp
cmps
out
stos
iret
bound
ins
int
sub
test
push
xor
sbb
es
movs
and
mov
mov
mov
xor
jmp
in
sbb
push
push
in
lods
cmp
pop
not
dec
mov
jae
std
inc
adc
fld
sub
and
fdiv
int
mov
cmp
mov
(bad)
lods
inc
dec
and
dec
cld
int3
stc
scas
inc
inc
jl
or
xchg
fiadd
mov
or
lahf
xor
leave
dec
dec
outs
sub
xchg
mov
clc
cdq
(bad)
in
xchg
das
jns
out
pop
cmp
xor
ror
and
add
fs
jmp
stos
jno
lds
popa
ret
gs
sti
add
inc
dec
push
movs
mov
add
gs
cdq
sub
vpmacssdql
sub
xchg
inc
adc
ret
mov
int
mov
dec
mul
test
fcom
cwde
imul
rol
xor
cmps
sub
(bad)
(bad)
mov
sbb
adc
adc
test
sub
xor
push
daa
unpcklps
arpl
xchg
add
pop
add
inc
dec
or
mov
leave
pop
pop
xor
mul
xor
mov
dec
dec
ret
mov
(bad)
dec
mov
xchg
adc
xlat
stos
add
push
push
or
fs
daa
(bad)
in
enter
aas
arpl
push
cmc
xchg
xchg
inc
aam
aam
aam
aam
mov
mov
out
jb
xchg
xchg
sbb
out
mov
test
sub
and
or
and
mov
dec
or
adc
xchg
mov
xor
mov
sbb
dec
cdq
inc
jnp
cdq
daa
cmp
nop
je
pusha
daa
pop
xchg
es
dec
pop
bound
fs
and
nop
add
mov
inc
dec
retf
test
cmps
sbb
push
add
push
bound
pop
pop
retf
inc
ss
out
add
mov
jo
xchg
cwde
(bad)
(bad)
inc
sete
jo
push
push
call
dec
jp
iret
lods
addr16
mov
adc
cmp
call
mov
out
popf
fwait
inc
dec
jp
adc
loope
leave
sar
xor
aam
mov
pop
inc
das
mov
das
mov
mov
sbb
xchg
xor
js
and
repz
add
inc
xchg
ret
iret
clc
lahf
xchg
xchg
add
lods
pop
icebp
call
es
ds
sub
push
ss
push
mov
aaa
and
xor
jg
jecxz
(bad)
fwait
adc
and
mov
(bad)
hlt
pushf
mov
sbb
inc
int3
call
icebp
pop
out
sub
ds
xor
mov
ror
cld
adc
das
shl
push
in
dec
fist
retf
js
pop
stos
sbb
and
aaa
mov
pushf
ror
popf
pop
cmp
push
mov
ret
cmp
pusha
fcomp
mov
in
fnstsw
ins
mov
daa
cmp
mov
inc
outs
(bad)
repnz
sub
xor
xchg
xchg
jmp
je
lahf
sub
dec
jo
dec
jo
cmc
xor
mov
jno
out
fcom
mov
mov
pop
and
add
test
inc
dec
std
mov
and
cmp
test
leave
cmps
sub
(bad)
leave
cld
es
jmp
icebp
push
fcomp
push
push
and
xchg
dec
jae
push
mov
rcl
loopne
nop
pop
pop
jb
mov
dec
cmovle
mov
scas
imul
out
inc
adc
xor
ins
adc
push
and
cwde
jl
dec
jb
push
iret
and
shl
out
push
mov
repnz
pusha
lahf
(bad)
aam
jbe
add
out
cdq
jmp
aad
mov
xlat
mov
call
out
mov
or
(bad)
fcom
xchg
xchg
inc
nop
xchg
cwde
imul
add
scas
lahf
xchg
je
or
cmps
gs
push
and
inc
jns
dec
icebp
ficomp
cli
icebp
or
pop
xchg
mov
sbb
or
call
or
into
pop
stos
scas
jb
outs
sub
popf
inc
test
inc
in
push
fiadd
cmps
mov
add
fwait
mov
mov
jmp
fsub
pop
cmp
(bad)
cld
add
inc
das
or
add
mov
mov
into
mov
(bad)
xchg
push
(bad)
adc
inc
add
cs
mov
mov
cmp
iret
xchg
dec
xchg
dec
jo
sub
dec
es
jle
retf
jb
popa
or
xor
inc
movaps
adc
or
mov
xchg
retf
cmp
adc
dec
fidiv
call
test
sub
(bad)
loopne
or
jb
jmp
add
xchg
enter
add
sti
push
inc
xchg
push
pop
sbb
push
pop
push
inc
push
inc
push
pop
add
inc
push
and
push
nop
loopne
mov
sub
retf
jp
fsub
mov
xchg
ficom
mov
aam
pop
jecxz
rcr
xor
popf
icebp
pop
(bad)
in
push
in
cmp
push
nop
pop
jnp
add
(bad)
out
std
jae
imul
ja
jmp
ins
iret
jnp
jno
push
dec
lds
rol
mov
add
adc
daa
int
jmp
out
in
stos
leave
retf
fnstcw
sbb
sub
fistp
ds
pusha
jmp
add
jbe
gs
and
hlt
xchg
push
in
test
fdiv
inc
test
sub
pop
sti
xchg
sbb
in
xchg
add
add
xor
mov
repz
outs
dec
or
adc
movs
ss
push
mov
shl
xchg
mov
out
mov
sbb
xchg
std
test
aam
xchg
lds
ror
in
aaa
test
sub
inc
push
aad
mov
data16
sub
push
(bad)
mov
xor
test
mov
mov
push
sbb
adc
pop
jp
xchg
add
ret
cmp
js
rcr
jae
aaa
outs
out
adc
and
iret
dec
movs
jl
dec
mov
sbb
daa
mov
inc
imul
xchg
add
mov
mov
mov
mov
sub
dec
(bad)
inc
es
mov
pop
fnstsw
xchg
add
sbb
fwait
mov
or
cdq
sti
cmp
ja
cmp
add
mov
fld
inc
adc
ds
xchg
xchg
js
inc
aam
adc
xchg
(bad)
dec
(bad)
fsub
pop
add
xor
inc
into
add
xor
cmp
aam
sub
loopne
imul
dec
ret
inc
cmc
das
dec
xor
data16
cli
xchg
movs
pop
aas
std
pop
aam
xor
inc
cmc
das
dec
cmp
setp
mov
dec
and
jo
(bad)
pop
cwde
pop
sar
jmp
pop
cdq
xchg
mov
pop
in
add
iret
stc
aas
aam
xor
dec
cmc
scas
dec
pop
sti
pop
jmp
xlat
cmps
inc
leave
(bad)
movs
jmp
jp
cld
lahf
jmp
inc
push
retf
sbb
stos
push
jbe
mov
lods
lods
mov
sub
sub
out
fs
jl
add
repnz
fdivr
pop
xchg
hlt
mov
add
pop
retf
xchg
or
sub
hlt
mov
push
xchg
lahf
push
aam
lods
mov
aaa
inc
jb
fstp
xchg
retf
mov
push
sub
jp
push
mov
xor
test
sub
mov
jnp
int
jl
inc
mov
imul
push
out
mov
mov
int3
les
pushf
ss
andnps
mov
dec
lahf
push
sbb
lea
cld
(bad)
push
sbb
fisub
jo
pushf
pushf
mov
mov
mov
mov
test
stc
sbb
(bad)
jb
inc
shl
jg
inc
xchg
mov
sbb
add
das
sti
push
pop
sbb
ret
or
inc
xchg
retf
(bad)
pop
inc
jmp
dec
cmp
ffreep
ja
gs
clc
outs
stc
sub
inc
or
or
pop
push
pop
push
push
push
push
push
loopne
push
ss
lods
cmps
daa
lock
inc
add
mov
or
lods
add
mov
and
add
iret
mov
sub
mov
clc
jo
or
dec
in
xor
leave
pop
xor
mov
dec
mov
sbb
sbb
fisub
je
rcr
fidiv
pushf
mov
pop
xchg
aad
scas
fs
mov
mov
sahf
jnp
xor
int
test
jae
aaa
sbb
jecxz
mov
or
mov
imul
mov
mov
sti
xchg
test
mov
sbb
rcr
in
ja
and
dec
in
mov
adc
xor
int
dec
sub
mov
fmulp
int
nop
lahf
neg
sub
xlat
sub
push
mov
pop
dec
cmp
and
xchg
ret
pop
dec
and
daa
inc
xchg
(bad)
xchg
cld
push
pop
pop
push
out
xchg
ret
sahf
add
gs
jae
pop
add
loope
pop
pop
jle
xchg
push
add
xchg
push
add
mov
pop
mov
add
jno
sub
stos
out
mov
sub
cmpps
xchg
dec
mov
pop
and
popf
test
xchg
cmps
fiadd
into
inc
enter
mov
sub
sub
jp
loope
arpl
jle
imul
mov
pop
retf
iret
cmc
xchg
lahf
push
imul
ja
jmp
jge
dec
inc
fldcw
into
push
or
cmps
pop
ins
sub
mov
pop
dec
cwde
dec
jno
xor
das
push
push
cmps
cwde
cmp
cmp
addr16
aad
inc
sahf
mov
sub
push
push
pop
push
loopne
xchg
pop
popa
enter
push
jp
sub
sbb
das
add
sbb
mov
or
and
jo
repz
fist
and
xor
dec
test
ret
xor
fdiv
sub
or
or
sti
int3
stc
adc
ss
add
cmps
add
jb
sbb
adc
or
lahf
pop
inc
mov
adc
sqrtps
adc
inc
sub
mov
adc
inc
or
dec
mov
out
mov
nop
es
adc
mov
pop
(bad)
rcr
in
sbb
push
and
cmps
test
sub
das
fldcw
leave
pop
pop
mov
pop
jg
ret
imul
inc
enter
sub
rcr
adc
loop
(bad)
jmp
scas
data16
scas
in
fdiv
lods
lock
sbb
cmps
test
xchg
les
dec
mov
push
loopne
push
in
mov
(bad)
in
dec
ret
mov
test
pop
adc
rol
icebp
fisub
leave
mov
ja
xlat
push
ins
in
jp
pop
xlat
xchg
js
(bad)
push
xchg
xchg
cli
inc
push
in
(bad)
js
ins
aam
dec
mov
xor
jbe
popf
movs
xchg
(bad)
setb
ja
cmp
inc
jnp
jno
sub
je
pop
and
adc
in
mov
jns
aas
dec
add
sbb
adc
hlt
leave
mov
aam
std
retf
(bad)
mov
cmp
add
dec
ror
and
or
or
fidivr
test
cmc
sub
lea
aad
mov
and
mov
xchg
push
xchg
add
cdq
sahf
and
mov
mov
(bad)
int
pop
clc
push
mov
dec
xchg
push
cmp
mov
mov
xlat
and
jns
mov
and
iret
xchg
lds
mov
cmp
(bad)
arpl
popf
push
push
adc
pop
mov
popf
mov
imul
int3
out
jae
mov
daa
aas
sti
dec
dec
ins
mov
xchg
inc
cmps
sub
adc
xor
loop
sub
cdq
or
mov
daa
inc
clc
mov
or
adc
xchg
or
jl
rol
pop
retf
xchg
popf
adc
inc
cdq
jge
jb
dec
mov
(bad)
leave
inc
mov
setb
es
aam
shl
mov
repz
pop
inc
mov
dec
jmp
cli
pop
sbb
or
cmp
push
(bad)
xchg
mov
add
sbb
je
cmc
dec
cmp
sbb
mov
jle
rcr
ja
stos
mov
mov
inc
xchg
cmp
jnp
movs
fwait
pop
inc
movs
push
jecxz
pop
lahf
sbb
fstp
test
mov
push
scas
dec
jmp
dec
ss
cmp
mov
cli
xor
mov
not
xchg
lds
and
adc
push
daa
clc
and
add
xlat
pop
xor
stos
inc
into
fld
jns
popf
mov
mov
cmps
mov
(bad)
leave
jnp
mov
in
rcr
xchg
mov
jnp
inc
jb
imul
cdq
ss
stos
(bad)
push
retf
jg
inc
mov
xor
mov
cmc
cmc
mov
mov
or
mov
push
mov
out
sbb
jl
jmp
icebp
push
and
mov
lds
mov
cmps
xchg
xor
mov
iret
jne
movs
mov
dec
mov
sub
mul
sbb
xchg
add
test
inc
and
iret
jmp
push
mov
scas
jae
pop
js
clc
lods
bound
aaa
xchg
aaa
mov
loope
out
loop
xchg
sub
pusha
lds
scas
dec
jmp
push
jns
lods
jae
xchg
jecxz
int
aaa
outs
out
outs
loope
inc
or
xchg
pop
and
xchg
push
mov
sub
lods
in
stos
sti
jl
sub
or
or
ror
mov
cwde
pop
enter
adc
inc
neg
mov
faddp
das
loop
shl
in
ins
xor
mov
call
in
movs
dec
push
pop
pop
aaa
lods
push
pop
(bad)
pop
movs
jp
aas
nop
rcr
push
push
mov
sbb
jae
jns
add
inc
push
push
cmp
cmp
lods
(bad)
test
adc
test
test
mov
lods
inc
les
xchg
sbb
out
mov
and
adc
or
sbb
loop
movs
repnz
fs
cmp
ins
addr16
leave
push
mov
sub
dec
xchg
adc
push
clc
addr16
das
pop
sti
loop
adc
jo
fstp
std
mov
aaa
push
(bad)
enter
and
neg
push
xchg
sbb
pop
clc
push
mov
sbb
jb
mov
xchg
test
mov
xchg
jae
add
mov
push
addr16
inc
sub
cmp
and
mov
in
stos
xor
cmp
in
stos
xor
jmp
scas
add
sbb
lea
pop
xchg
pop
or
mov
inc
mov
jl
ins
fwait
mov
add
mov
push
pop
mov
je
pop
aad
loop
pop
push
add
test
test
sbb
je
mov
xchg
daa
retf
push
test
popa
pop
sub
sub
add
leave
inc
jl
dec
mov
inc
push
and
in
push
popa
fs
dec
adc
(bad)
enter
fwait
cdq
vpcomd
sbb
shr
loopne
ins
xchg
mov
call
adc
lods
adc
call
xor
popf
jmp
mov
sahf
out
or
cmps
add
adc
jmp
pop
xor
mov
mov
cld
aam
cmp
inc
fidiv
adc
call
fnsave
sub
xchg
and
push
into
in
ret
xchg
inc
xor
dec
push
push
jecxz
pop
pop
mov
pop
int
xor
test
xchg
cmp
pop
outs
xchg
mov
push
cdq
xor
outs
push
lahf
pop
xchg
dec
mov
int
or
lods
mov
ficomp
xor
jle
out
out
pop
popa
add
mov
(bad)
or
out
fdiv
lods
lds
mov
loop
mov
and
push
push
or
push
push
or
inc
add
adc
add
cdq
dec
push
ret
enter
test
dec
sbb
out
jne
jno
push
clc
adc
aaa
mov
test
push
adc
mov
pop
jne
fst
mov
movs
dec
test
xchg
or
fld
adc
lds
pop
mov
call
in
das
es
cmps
hlt
rol
pusha
int3
fcom
dec
jae
aam
jnp
ret
add
cdq
or
mov
outs
xchg
sti
dec
daa
in
imul
dec
cwde
push
(bad)
js
xchg
fucomi
sbb
pop
mov
or
or
xchg
push
mov
inc
stos
jp
ins
popf
adc
pop
cdq
dec
mov
sbb
jge
jle
cmp
mov
out
xor
call
mov
jno
stc
test
pop
cmp
mov
mov
mov
mov
pop
aam
movs
stos
adc
or
cmc
and
dec
loopne
sbb
ret
dec
mov
scas
inc
jp
sbb
repz
and
and
mov
out
out
pop
mov
scas
push
ins
fcom
mov
in
push
xlat
and
sbb
data16
xchg
sbb
call
jl
stc
es
sbb
jle
es
sub
adc
mov
dec
imul
call
mov
mov
call
sbb
cmp
fisttp
push
sub
mov
mov
repnz
test
inc
addr16
rcl
lea
sub
mov
xchg
lods
hlt
loope
shl
inc
and
not
rcr
and
push
push
push
sub
inc
mov
ins
or
outs
cmp
cmp
cmc
sbb
out
ficom
jae
ret
shl
xchg
pop
lods
mov
push
fimul
scas
dec
sub
stc
push
bound
mov
imul
xchg
ror
loope
mov
dec
cld
add
addr16
cli
icebp
cmps
lock
popa
sub
js
pop
inc
cmp
dec
stc
mov
popf
mov
jbe
or
add
(bad)
adc
dec
arpl
inc
out
add
icebp
or
shr
or
adc
in
push
popf
mov
jne
nop
mov
test
inc
loopne
jno
mov
jns
adc
xchg
stos
adc
mov
mov
xchg
mov
(bad)
cmp
(bad)
js
mov
scas
lock
ja
mov
mov
sub
mov
fsub
loopne
pushaw
pop
daa
sub
outs
lock
lahf
loopne
aas
rol
imul
adc
or
push
inc
out
test
es
inc
cdq
sub
cmp
dec
enter
xor
cmp
shl
xor
mov
add
push
mov
adc
call
adc
xchg
xor
jle
fnstsw
fstp
fcom
or
dec
mov
push
jae
popf
mov
cmp
clc
pusha
dec
mov
push
test
cmp
ja
fdivr
js
jo
jne
inc
add
les
jl
mov
(bad)
mov
cmp
aam
aaa
in
mov
jecxz
jb
mov
in
call
popa
pop
daa
das
in
out
out
jo
push
pusha
cmp
pushf
cmp
inc
or
inc
aas
in
pop
add
xor
(bad)
dec
or
in
cs
sub
or
in
movs
sar
stc
dec
sbb
xlat
and
pop
adc
xor
or
xor
aad
or
add
jmp
ret
or
xchg
and
mov
retf
int3
and
or
jg
stos
cdq
mov
(bad)
xchg
mov
stos
pop
out
pop
test
adc
ja
fcomp
mov
dec
pop
add
pusha
dec
js
jae
inc
xor
aad
cmp
cmp
daa
daa
daa
daa
cmps
daa
cmps
cmps
daa
daa
test
mov
ins
push
jbe
adc
push
or
je
sub
test
adc
icebp
pop
call
push
lods
push
dec
in
push
test
sub
(bad)
mov
or
push
sbb
mov
repnz
test
nop
imul
and
push
xor
and
mov
adc
sbb
ins
fsub
mov
test
xchg
ds
clc
and
mov
pop
sti
or
inc
call
cs
mov
cmp
mov
lea
mov
(bad)
enter
test
fs
fwait
mov
xchg
fdivr
pop
jle
fs
out
jae
mov
les
mov
push
fst
jbe
mov
xchg
mov
lahf
jae
mov
mul
leave
shl
push
mov
inc
and
pusha
push
push
ret
mul
ins
pop
pop
imul
pop
sar
lock
sub
cmp
cdq
or
mov
out
dec
pushf
fnsave
fcom
sub
mov
dec
dec
icebp
dec
dec
push
adc
jmp
pop
ds
test
addr16
mov
cmp
in
add
das
push
lock
or
sub
in
pop
and
mov
mov
sbb
push
enter
pop
aam
or
xor
push
stos
cld
lds
inc
adc
inc
adc
and
mov
xchg
xchg
mov
push
push
mov
mov
pop
inc
or
rcr
or
inc
and
xor
mov
sub
(bad)
xchg
mov
add
ins
pusha
stc
sub
mov
lds
aam
xchg
xor
mov
fwait
je
ret
and
dec
xor
mov
sbb
sbb
loope
outs
push
push
(bad)
sbb
ins
add
cs
fcomp
je
stos
test
dec
push
cmp
and
add
fs
dec
retf
and
outs
leave
stos
adc
in
aaa
or
jne
sub
mov
push
imul
int
mov
jns
cmp
enter
or
clc
fisub
(bad)
sbb
and
or
xchg
sbb
lods
push
add
push
les
les
mov
cmc
and
inc
mov
mov
mov
xor
xchg
cmp
add
or
sub
xchg
call
inc
cmp
cmp
pop
add
dec
mov
es
xor
push
push
inc
mov
xchg
cli
cmps
movs
sbb
lds
dec
dec
mov
in
(bad)
adc
cmp
pushf
mov
dec
call
in
outs
jecxz
fisubr
jns
lahf
or
xchg
cmp
out
loope
loope
dec
daa
outs
pop
mov
icebp
cwde
push
or
repnz
pop
fsubr
pop
adc
jl
xchg
and
(bad)
mov
leave
sub
xchg
xor
xor
inc
sbb
loope
add
inc
std
mov
mov
mov
adc
inc
js
nop
sbb
dec
xor
cdq
fisub
jmp
add
into
push
inc
movs
daa
jle
clc
mov
jmp
fisubr
inc
fimul
mov
test
inc
int3
ja
test
adc
nop
xor
in
add
dec
xor
or
jae
xor
cmp
xchg
sbb
push
ja
call
mov
push
xchg
out
sub
and
or
xchg
jbe
or
add
xchg
push
ins
or
fwait
jb
cwde
loope
mov
cmp
mov
mov
fcmovbe
mov
stc
das
pop
mov
inc
imul
adc
push
les
bound
and
fistp
iret
jae
mov
ret
cmp
iret
movs
ret
dec
dec
dec
sbb
adc
sub
sub
adc
sub
dec
dec
or
addr16
dec
cmc
or
pop
test
sub
add
add
add
add
add
add
add
add
add
and
inc
adc
jno
xchg
mov
shl
xor
fiadd
or
add
add
adc
add
jo
jecxz
dec
mov
mov
stc
pop
in
clc
loop
ret
outs
pop
mov
jb
retf
xchg
cs
mov
sub
cdq
ds
or
mov
add
retf
pop
mov
ret
push
push
xchg
repnz
lea
cmp
mov
call
adc
and
add
std
sbb
ficomp
data16
inc
cwde
dec
dec
mov
lahf
push
stc
or
push
js
mov
push
cmps
lahf
sub
add
test
in
pop
sbb
or
inc
nop
pop
mov
sub
or
xchg
aaa
test
jl
mov
xchg
sub
adc
dec
xchg
push
cmp
sahf
adc
test
xchg
das
adc
mov
iret
or
lods
shl
push
sub
cli
aas
fsubr
(bad)
xchg
sbb
test
xor
ds
cmps
adc
push
push
(bad)
mov
xor
xchg
cmp
ins
or
out
sub
dec
inc
test
xchg
shl
adc
hlt
mov
mov
cmp
clc
outs
add
sub
xchg
inc
jmp
sub
push
jmp
sub
sbb
sbb
cmp
mov
mov
mov
cld
movs
stc
dec
repnz
in
push
movs
cmp
cmp
movs
cmp
movs
add
dec
test
inc
repnz
sub
movs
cmp
cmp
cmp
cmp
push
push
jmp
test
movs
cmp
movs
cmp
cmp
xchg
jmp
xchg
adc
dec
cmp
loopne
push
cmp
stc
inc
fild
sub
sub
or
ins
pop
xor
movs
test
aas
aaa
leave
test
cmc
sub
add
sbb
inc
or
arpl
pop
cdq
out
inc
cmp
sub
inc
ss
(bad)
in
shl
(bad)
retf
pop
xchg
adc
push
clc
dec
inc
sbb
xchg
lods
push
jecxz
dec
shl
stos
lea
cmps
xchg
test
sub
out
sub
push
jmp
and
mov
aas
lea
pop
test
add
(bad)
and
and
jmp
and
lods
jns
add
mov
test
outs
mov
jge
test
pop
mov
sti
retf
inc
jne
sub
rol
and
inc
add
stos
push
imul
ins
ss
out
out
sub
jb
pusha
fnop
aaa
in
dec
push
dec
outs
icebp
in
xchg
push
sub
shl
loopne
mov
mov
xchg
js
cld
sahf
ins
pop
pop
cmp
repnz
xor
add
push
and
adc
mov
xor
xor
or
mov
mov
and
les
adc
add
shl
xor
inc
add
lock
xchg
adc
loope
or
push
sahf
jge
cmp
fs
sbb
pop
inc
cli
and
test
pop
sar
pop
shr
cmovg
and
jo
je
loopne
jl
ins
ins
dec
mov
jmp
mov
or
mov
sbb
mov
test
or
stos
xchg
icebp
add
lds
xchg
imul
fst
push
mov
ins
push
jle
and
pop
loop
xchg
pop
fsubr
test
jae
jmp
inc
push
adc
mov
add
xchg
sub
inc
scas
and
push
scas
adc
xor
outs
xor
test
in
inc
push
add
fcomp
xor
ins
int3
mov
jg
sar
add
mov
aam
loop
mov
add
inc
xor
dec
mov
cmp
jae
std
cdq
in
fidivr
adc
std
dec
inc
pop
pop
cmp
cmp
(bad)
lds
pop
test
mov
(bad)
es
(bad)
xor
ins
adc
fnstenv
enter
xchg
je
clc
les
daa
cmp
fstp
and
sub
push
pop
and
or
in
sbb
inc
mov
jle
cld
(bad)
mov
push
mov
adc
cmp
xor
adc
bound
fwait
lock
stos
out
rcl
cmp
das
retf
pop
jnp
ror
adc
xchg
in
shr
mov
mov
sub
xlat
arpl
pop
rol
jnp
pop
ja
fstp
shl
data16
sub
imul
clc
xor
push
call
popf
les
mov
int3
mov
pusha
cbw
ror
call
das
inc
push
cmp
add
ja
(bad)
adc
lahf
stc
das
mov
mov
dec
add
jo
and
xor
and
movs
cmp
popa
and
cmp
xchg
xor
add
pushf
add
adc
inc
shl
lods
iret
and
pop
sub
out
jge
sub
xchg
lods
fisub
lock
or
mov
sub
ret
xor
(bad)
sbb
fidivr
pop
je
out
cmps
add
ins
inc
push
xor
inc
cmp
xor
movs
sub
pop
clc
pop
or
add
jg
lock
xor
jo
popa
rol
xor
xchg
xor
fwait
aaa
jmp
cli
dec
(bad)
push
mov
out
inc
pop
test
jae
jge
push
rcl
or
cmp
jae
xor
loopne
in
or
scas
push
(bad)
pop
mov
and
cmp
inc
bound
xor
mov
adc
or
pop
push
cmp
int
das
mov
cwde
mov
pause
es
mov
rcl
adc
mov
sub
xchg
add
xlat
xchg
pop
dec
xchg
shr
inc
xor
mov
pop
mov
cs
mov
pop
(bad)
retf
loope
js
gs
jg
(bad)
or
(bad)
(bad)
xor
adc
push
je
jmp
or
retf
or
inc
leave
out
psubusb
pop
and
add
shr
xchg
cmp
out
(bad)
sbb
das
dec
imul
push
xchg
xchg
ret
cmps
mov
lods
sbb
xchg
int3
cdq
call
sbb
out
adc
cwde
test
add
fld
push
add
jne
adc
stos
mov
xor
xchg
jbe
dec
adc
dec
xchg
jb
add
lods
cmc
xchg
xor
sub
sahf
sub
int3
push
ret
fisubr
push
jo
imul
mov
(bad)
xor
xchg
das
and
xchg
inc
and
mov
mov
cs
mov
cs
mov
cs
mov
lds
pop
int
pop
jl
xchg
lods
imul
sahf
ret
mov
mov
pushf
mov
les
and
ror
cli
dec
cmp
mov
cwde
cmp
xchg
test
out
int
cld
sbb
mov
or
cmp
in
xor
(bad)
ficom
ss
imul
mov
and
sub
enter
fs
jb
mov
mov
loopne
out
rol
int3
xchg
sub
sbb
inc
push
sub
movs
test
cs
jmp
dec
mov
fcomp
ficom
mov
add
(bad)
mov
inc
push
pop
fistp
cmc
mov
out
pop
dec
ret
clc
cmp
sar
mov
jg
(bad)
clc
das
lock
pop
mov
pop
les
adc
push
or
cmp
jo
push
(bad)
ins
es
dec
xor
rol
aas
js
retf
mov
mul
repnz
out
pusha
loop
mov
lahf
jno
jnp
push
int
icebp
mov
movs
fisttp
dec
scas
cdq
in
es
test
mov
jb
xlat
xor
mov
mov
ror
push
imul
call
test
aaa
jbe
ins
call
les
or
sbb
sbb
int3
push
or
add
mov
repnz
jns
push
iret
lods
sbb
shr
mov
xor
lods
lods
lods
fiadd
rcr
push
pushf
mov
cmp
cdq
cmps
cwde
retf
(bad)
mov
into
cmp
leave
sar
add
movs
xchg
dec
inc
cmp
movs
cld
rcr
pusha
cmc
and
cmp
and
shr
dec
pop
pop
cmps
lods
mov
test
mov
add
push
stc
jl
int3
jp
xor
pop
mov
cmps
mov
pop
sbb
adc
mov
in
or
mov
(bad)
es
iret
adc
aas
push
js
mov
loopne
push
sbb
repnz
leave
out
js
jmp
push
inc
imul
xchg
rcl
adc
pop
shr
repz
mov
xor
add
out
cmc
in
das
mov
add
icebp
or
mov
cs
lods
mov
inc
xchg
push
jecxz
push
add
shl
fucomp
cs
(bad)
push
cmp
loopne
test
(bad)
into
and
pusha
sub
push
mov
fidivr
popa
shr
fisub
repz
and
popf
add
je
addr16
out
repz
(bad)
cmp
pushf
add
aaa
cmp
call
into
lahf
lods
jmp
cmp
pushf
cmp
cmp
mov
push
jae
jmp
cs
je
addr16
repz
das
pop
shl
popf
aas
pop
shl
xchg
(bad)
je
popa
retf
das
pop
shl
popf
das
pop
xchg
cmc
popf
aas
pop
shl
popf
aas
pop
shl
popf
pop
pop
shl
popf
pop
pop
shl
popf
das
pop
shl
lahf
arpl
cmps
jl
scas
movs
mov
jmp
and
sub
test
add
icebp
add
xor
lds
and
loop
loopne
sub
and
inc
test
mov
icebp
es
lahf
mov
push
pop
xchg
rcr
and
ret
xchg
dec
mov
dec
jp
test
xchg
out
(bad)
xor
or
sbb
adc
xchg
out
xchg
shl
and
sbb
jo
fdivr
xchg
mov
mov
ja
mov
(bad)
je
out
pop
jae
fiadd
jp
or
xor
xchg
test
jmp
or
sbb
cdq
or
ret
inc
fstp
icebp
cli
jecxz
or
dec
aas
inc
push
pop
cld
adc
icebp
sbb
xor
sbb
xlat
jmp
lock
push
sub
sub
aas
loopne
mov
jp
inc
movs
loopne
jnp
xor
push
scas
pop
pop
sub
sahf
inc
sbb
or
pusha
retf
mov
aam
sahf
test
jns
jno
push
pushf
mov
or
hlt
adc
dec
mov
setno
loopne
cmp
sar
cs
ror
mov
push
push
out
ror
movs
xchg
or
bound
adc
sub
mov
test
jno
pusha
cmp
fisub
dec
sbb
dec
mov
sub
(bad)
mov
jne
(bad)
in
loop
mov
mov
add
and
es
cmp
mov
inc
mov
aaa
dec
xchg
adc
cwde
dec
aad
retf
fld
xchg
mov
(bad)
fmul
sbb
pop
push
xchg
lea
xor
aad
xor
jl
jmp
lock
(bad)
ins
arpl
icebp
js
ja
push
scas
std
push
pop
test
hlt
mov
shr
div
(bad)
aad
push
dec
repz
jns
jns
inc
mov
jo
rol
fstp
sub
retf
sar
add
mul
adc
or
jmp
sbb
xchg
pushf
call
lock
sub
add
adc
(bad)
and
out
sbb
mov
xor
mov
bound
cmp
push
mov
pop
lock
sub
imul
jns
or
mov
test
push
xchg
push
mov
mov
stos
sbb
adc
add
dec
push
add
rol
sub
add
and
popf
add
inc
inc
dec
push
jle
jecxz
cmc
add
(bad)
push
push
push
inc
out
mov
xchg
xlat
adc
jmp
into
or
clc
call
inc
and
lock
scas
stc
cmp
into
or
fisub
cli
jns
jns
inc
mov
pop
sbb
pusha
(bad)
sbb
pop
pop
mov
add
add
ror
ficomp
cmp
cdq
jge
pop
das
out
sbb
dec
fs
or
xor
push
or
xlat
in
inc
scas
test
aad
adc
mov
xchg
popa
push
dec
pusha
push
cmp
xor
lock
stos
xor
jle
push
add
repnz
fs
and
out
push
xor
add
cmp
push
loopne
fs
les
jmp
fdiv
arpl
push
xor
lahf
arpl
(bad)
jecxz
psubw
xchg
sar
mov
hlt
sbb
pop
mov
or
dec
mov
lods
mov
(bad)
fs
mov
sbb
aas
fsubr
cwde
shr
cli
jns
leave
sti
lock
mov
imul
jb
fdiv
cmp
cs
outs
and
sub
mov
adc
inc
cmps
or
jmp
loopne
pop
mov
mov
jo
jg
or
retf
int
gs
std
ja
popa
mov
pop
lahf
repnz
stc
dec
dec
fcomi
mov
xlat
mov
fnstenv
lods
in
das
sub
(bad)
cwde
push
pop
sub
int3
cmc
les
xchg
sbb
add
xlat
jecxz
push
pop
cld
ja
mov
sar
(bad)
int
repz
imul
ud2
test
or
outs
xchg
dec
push
jecxz
push
cmp
jmp
iret
popa
in
ds
pushf
hlt
das
js
pop
jmp
lock
in
jbe
sbb
out
jo
arpl
adc
pushf
xchg
cwde
jl
out
or
and
cwde
xor
sbb
xor
movs
fdiv
mov
arpl
pop
retf
push
cmps
jbe
pop
xor
rcr
xor
sbb
mov
push
aam
inc
js
(bad)
mov
sbb
cmp
add
loopne
mov
inc
pop
pop
jne
inc
dec
in
mov
addr16
sub
xchg
push
sbb
jmp
xchg
call
call
not
jmp
jp
mov
dec
pop
jnp
mov
rcl
and
mov
rol
add
sar
xchg
xor
(bad)
dec
lods
xor
sbb
std
inc
xchg
cmc
dec
ret
sub
xor
clc
fdivp
inc
in
mov
xlat
xor
jmp
jg
mov
jp
nop
pop
fdiv
dec
mov
cmp
sbb
jno
sar
jmp
cmp
in
pop
lock
ja
push
stos
inc
adc
mov
add
jne
jno
dec
fidivr
aam
dec
mov
xchg
loopne
pushf
inc
sbb
mov
aam
xchg
(bad)
imul
adc
dec
xchg
in
imul
aad
pop
cmp
dec
jns
pop
movs
call
xor
sub
adc
inc
mov
sub
pop
movs
mov
mov
push
dec
xchg
data16
pop
pusha
sbb
mov
and
dec
add
sbb
pop
scas
daa
rcl
icebp
rcr
mov
sbb
push
mov
stos
ja
inc
test
inc
(bad)
ror
jp
or
hlt
or
or
into
clc
lods
inc
push
cmps
fld
fdivr
mov
sub
adc
xor
dec
jne
test
(bad)
ins
arpl
psraw
cld
imul
iret
ret
sar
out
mov
dec
repz
mov
push
add
test
sahf
(bad)
jb
cwde
aam
adc
mov
adc
pop
jg
pop
push
or
xor
mov
mov
and
test
fiadd
mov
lods
cli
inc
fld
xor
outs
or
aaa
popa
(bad)
sub
xor
mov
push
rol
inc
rcl
and
cwde
out
test
sbb
xchg
jmp
mov
sbb
push
inc
(bad)
rcl
inc
fiadd
mov
add
mov
jbe
(bad)
ror
xchg
bound
(bad)
add
inc
retf
or
shl
sub
pop
jl
pusha
pop
fs
push
xchg
sub
jmp
aas
xchg
mov
les
scas
cld
dec
clc
fist
sub
pop
adc
and
xor
pop
int
enter
xchg
and
mov
dec
mov
cmps
dec
xor
push
jne
xchg
sbb
je
push
pop
aam
add
fimul
test
loop
adc
cmp
adc
cmp
movs
cmp
shl
daa
loopne
mov
pop
sbb
dec
xor
stos
ja
out
movs
mov
push
ins
mov
out
jnp
rcr
push
dec
popf
out
mov
pop
or
mov
dec
out
adc
cmp
sbb
push
jnp
sub
add
std
push
push
mov
test
and
mov
add
scas
fild
jmp
or
mov
mov
gs
dec
jmp
(bad)
jp
mov
pop
retf
inc
mov
cld
push
sbb
jg
stos
mov
mov
cwde
(bad)
sbb
inc
push
pop
das
or
mov
pop
xchg
mov
xor
or
mov
sbb
mov
mov
out
jp
push
and
rcl
mov
retf
and
aad
cwde
fisub
sbb
push
in
cmp
call
and
pop
test
in
jae
aam
sub
mov
mov
rcr
mov
test
test
pop
retf
repz
jge
jecxz
sub
jp
fimul
pminsw
retf
int
mov
retf
mov
(bad)
sub
sub
test
test
sub
mov
(bad)
mov
mov
inc
mov
in
jno
clc
out
pop
xor
cmp
inc
fistp
or
sbb
js
bnd
stos
mov
pop
retf
cmp
imul
jp
push
aas
or
hlt
xchg
loope
popa
and
std
sub
lock
and
xor
fidivr
mov
sahf
mov
loop
dec
pop
push
xchg
cmp
inc
retf
and
das
xchg
xor
mov
or
lock
inc
idiv
push
(bad)
out
dec
mov
and
ret
pop
mov
lods
fidivr
shl
pop
les
sahf
adc
mov
mov
hlt
lock
cli
lock
stos
sar
jmp
movs
push
rcr
jmp
add
lods
fisub
pop
test
(bad)
jecxz
fidivr
scas
out
pop
add
mov
inc
jecxz
loop
outs
or
(bad)
cmp
leave
fcomp
add
lock
pusha
pop
or
fcom
ins
mov
xor
jmp
jbe
mov
loop
dec
mov
dec
pop
shl
jnp
mov
or
out
repz
xchg
mov
cmova
mov
adc
test
xchg
sbb
enter
test
out
sbb
pop
test
cld
sub
call
shl
(bad)
xchg
movs
in
mov
js
dec
lock
popf
enter
hlt
icebp
inc
xor
test
ret
inc
push
ror
dec
sbb
fwait
mov
inc
jne
fld
loopne
mov
jmp
cmp
test
sub
xchg
and
xor
cli
retf
leave
and
xor
cmp
in
xchg
ret
inc
mov
mov
repz
cmp
out
xor
cdq
(bad)
in
inc
jbe
mov
and
sbb
test
add
mov
add
mov
xchg
mov
es
loope
push
or
retf
call
iret
ds
repnz
dec
sub
fdiv
fistp
jmp
or
ja
call
and
data16
outs
rol
cmp
and
or
ja
gs
addr16
or
repnz
inc
icebp
stos
mov
test
(bad)
and
std
pusha
imul
cmp
sbb
xor
addr16
inc
add
mov
xor
cmp
mov
ss
xchg
add
cmp
cmp
mov
popf
idiv
pxor
jb
add
and
(bad)
int3
cmps
xchg
inc
add
dec
iret
pop
sahf
push
retf
xor
out
jmp
xor
pop
daa
aas
mov
dec
pop
lods
ins
ror
sbb
xor
adc
mul
jno
pop
mov
cmp
inc
std
fist
xchg
adc
mov
or
test
jo
mov
adc
mov
sti
nop
xchg
xchg
dec
hlt
add
stos
iret
neg
sbb
jmp
cmp
call
mov
cld
fmul
push
cs
sub
xchg
sub
push
cmp
and
push
sub
icebp
push
loop
js
lods
ds
and
add
pop
out
xor
pop
cwde
mov
push
repz
mov
xchg
lock
dec
pop
addr16
xchg
fsubr
pop
mov
mov
call
gs
jl
hlt
fbstp
aam
sub
inc
jne
xor
add
loop
(bad)
xlat
inc
(bad)
push
xchg
push
out
cli
nop
cmp
xchg
rol
mov
mov
sub
into
pop
mul
dec
out
dec
add
scas
mov
jo
mov
pop
ins
push
pop
sbb
outs
scas
movaps
inc
fistp
jb
add
xor
push
in
adc
push
data16
mov
out
jb
xchg
or
adc
(bad)
pop
add
(bad)
stos
adc
dec
sbb
push
arpl
es
aad
pop
adc
jb
shr
bound
mov
cdq
stos
mov
ja
cwde
push
lods
dec
jge
arpl
out
stc
mov
aad
or
mov
mov
add
sbb
and
and
mov
pop
push
push
shl
xchg
xor
mov
lock
jo
mov
push
pop
test
cmps
xchg
in
mov
(bad)
jp
mov
pop
jnp
lods
pusha
loop
lods
sbb
daa
sub
neg
pop
leave
xor
sub
movs
dec
xchg
sub
and
or
fucom
repnz
add
lock
(bad)
or
scas
or
ins
or
inc
aaa
test
and
push
frstor
and
xchg
sub
push
sub
xlat
and
clc
add
jns
rol
sahf
xchg
adc
das
jb
or
das
cdq
sub
loopne
arpl
xchg
adc
aad
inc
xchg
jnp
push
rcr
sub
add
aaa
arpl
shr
sbb
dec
push
push
ins
(bad)
iret
jb
int
push
push
test
jns
in
xor
sti
das
imul
dec
inc
pop
inc
pop
mov
retf
xchg
push
or
xor
les
or
pop
pop
into
mov
xor
mov
out
scas
pop
aam
popa
pop
xchg
mul
aad
scas
rcl
sahf
leave
out
and
test
scas
test
pop
cmps
mov
cmp
fld
loopne
mov
dec
xchg
ret
sbb
dec
dec
(bad)
sbb
fs
cmp
retf
sti
xor
addr16
std
xchg
cmp
arpl
jns
enterw
jns
jns
gs
or
and
xchg
dec
fdivr
mov
cmps
jns
jns
inc
ins
mov
je
pop
fcomp
inc
outs
std
imul
cmp
lods
leave
sbb
ins
sub
sub
mov
in
push
dec
lock
and
aaa
mov
ret
push
mov
cmp
xchg
imul
jge
ja
stos
cmp
mov
jecxz
mov
shr
mov
enter
sub
cmp
xchg
cs
push
sbb
loopne
mov
test
xor
xor
ret
push
outs
in
cmp
xchg
imul
arpl
neg
fld
pop
repnz
pop
fldcw
shl
std
call
scas
repz
mov
sar
push
mov
imul
mov
repnz
dec
pop
pop
cdq
je
ja
mov
cmc
lods
movs
loope
std
mov
rol
cmp
xchg
push
or
cmp
and
push
xchg
pop
xchg
arpl
inc
stos
inc
shl
add
inc
jns
cli
mov
out
shr
leave
out
and
mov
or
jge
sub
jge
mov
push
ret
js
test
adc
cmp
jbe
arpl
pop
mov
lock
or
ret
shl
out
pop
xlat
or
les
add
dec
cs
xchg
test
pushf
mov
shl
jg
and
and
ins
aam
cmp
out
stos
sbb
loop
out
shrd
mov
loope
scas
inc
or
adc
arpl
sub
jge
pop
mov
(bad)
not
loope
stos
fiadd
sahf
adc
adc
je
mov
std
jo
fild
jae
ffree
loope
jmp
pop
dec
inc
and
call
add
xor
sub
aad
stos
sub
push
mov
and
es
or
out
jnp
mov
ds
lock
xchg
rcr
mov
xor
jb
jbe
mov
jb
sti
push
sar
les
sub
dec
lahf
stos
adc
loop
test
stos
sbb
call
jno
cmps
pop
xchg
mul
aad
xchg
imul
jno
sub
add
hlt
pop
cmps
sahf
rol
push
mov
pop
jmp
loope
nop
sar
(bad)
enter
sbb
mov
adc
fstp
mov
adc
sbb
leave
scas
out
add
cmp
pop
mov
xchg
(bad)
xlat
js
xor
jne
cmp
test
ins
(bad)
dec
jae
movs
fstp
push
inc
rcr
xchg
pop
pop
aad
mov
aas
cmp
daa
enter
int
aam
xor
idiv
retf
sti
sub
leave
stc
cdq
xor
daa
xchg
repz
das
in
stos
test
call
or
inc
retf
sti
aaa
and
out
dec
das
in
(bad)
cmps
mov
cmp
cdq
popf
popf
fwait
aas
xor
xchg
ins
lahf
cwde
jae
daa
out
in
fstp
repz
add
jp
addr16
inc
stos
sbb
movs
je
shr
push
mov
fwait
data16
dec
jmp
call
in
arpl
xchg
stc
xchg
test
xor
jge
lods
dec
and
inc
sbb
and
ja
cmps
pop
push
sub
jp
mov
pop
cld
pushf
add
mov
cli
dec
sbb
pop
mov
or
lahf
cmp
mov
cmps
fnstsw
pushf
jns
xor
(bad)
(bad)
pushf
jns
xor
pop
fdiv
iret
daa
out
dec
sbb
cdq
iret
stc
pop
cdq
ja
push
fnstsw
retf
pop
cdq
lods
mov
cmp
int3
imul
mov
cwde
pop
sub
fst
ss
xor
retf
arpl
xor
ss
fsub
push
cmps
sub
lods
mov
mov
rol
jo
xor
xchg
push
and
or
jne
or
sti
inc
in
repnz
sti
dec
inc
test
cmp
outs
add
ror
test
cld
pop
jo
ja
rol
inc
cmp
pop
in
xchg
test
loop
neg
adc
sbb
jp
jl
dec
movs
aam
mov
pop
pusha
or
or
jp
inc
pop
int3
mov
push
div
call
pop
mov
ds
pop
cld
test
cdq
mul
jne
sti
retf
lock
and
movs
add
push
cmovp
pop
mov
add
inc
jo
popf
das
rol
pop
inc
lock
stos
adc
mov
add
addr16
cwde
and
dec
or
leave
push
popa
adc
sbb
icebp
inc
retf
add
cmps
(bad)
jne
adc
inc
sub
cmps
jbe
shl
push
push
sbb
mul
inc
lahf
xchg
pusha
mov
push
add
push
rcl
xor
push
call
test
jb
arpl
gs
fsubr
je
or
mov
aaa
mov
sub
in
outs
movs
pop
std
or
sub
dec
inc
sub
inc
xor
cmp
repz
push
jb
mov
data16
sub
ins
test
jp
clc
sbb
jmp
sahf
leave
jmp
add
sbb
ja
and
pop
clc
inc
xor
add
add
(bad)
aam
imul
dec
or
out
loop
lds
xchg
pop
adc
xchg
sahf
in
mov
mov
ficomp
sub
add
sub
loope
mov
sbb
mov
mov
cmp
xor
xchg
pop
cmc
dec
out
inc
mov
jae
mov
jne
stc
int3
mov
dec
imul
(bad)
push
ss
add
sbb
out
scas
push
aaa
sbb
into
cmps
aad
mov
pop
push
movs
and
mov
in
bound
loop
push
jp
pop
push
mov
mov
mov
xor
push
loopne
mov
(bad)
in
test
fisubr
leave
sub
push
add
cmp
call
add
jmp
pushf
stc
shr
cdq
cmp
out
aas
dec
cdq
fild
pushf
(bad)
test
mov
jmp
stc
inc
pop
jge
jmp
sbb
or
push
jp
das
adc
sahf
shr
call
bound
dec
or
cs
scas
bound
inc
lods
and
jp
and
loopne
or
movups
push
movs
xor
push
jge
sub
mov
rcr
adc
dec
jno
retf
add
bound
jne
mov
inc
out
leave
out
and
adc
jo
mov
jae
pop
inc
push
inc
cmp
sub
cmps
mov
pop
popa
inc
pop
sbb
out
mov
fisubr
out
or
scas
lea
aam
or
fcmovne
mov
cdq
xor
jp
out
add
popf
add
mov
retf
add
dec
or
or
je
iret
sub
(bad)
xor
adc
or
hlt
or
mov
popf
add
pusha
adc
inc
inc
or
js
test
(bad)
xchg
mov
mov
jle
pop
pusha
test
or
cs
xor
inc
sub
sbb
mov
jo
cs
cmp
lea
nop
xor
mov
push
jb
iret
or
mov
dec
mov
into
push
xchg
call
push
or
test
loopne
inc
mov
cs
cmp
xchg
test
neg
sub
mov
xor
movs
pop
sti
push
sub
mov
das
mov
or
fcmovbe
adc
(bad)
cmc
jno
and
adc
sbb
stc
cmp
xor
jecxz
je
push
jo
cmp
adc
les
aam
dec
inc
mov
pop
inc
lea
sub
push
push
cwde
aam
or
retf
xor
or
lods
shl
jno
(bad)
sub
push
and
push
mov
mov
adc
xchg
int3
mov
rol
in
arpl
mov
pop
outs
call
xchg
push
xchg
adc
fidiv
sub
loop
in
mov
mov
imul
pop
cmps
dec
or
xlat
shl
jmp
jo
push
mov
sub
mov
outs
fdiv
xchg
shr
mov
sbb
sti
arpl
push
mov
fisubr
(bad)
aaa
and
(bad)
cmp
ret
mov
mov
jns
xor
or
(bad)
mov
outs
mov
stos
and
mov
test
lahf
mov
or
mov
cmps
xchg
gs
repnz
movs
clc
sahf
pop
out
div
dec
mov
pop
stos
or
and
repz
les
pop
(bad)
movs
clc
dec
mov
fs
push
sub
xchg
inc
inc
in
les
cmc
(bad)
xchg
sbb
inc
mov
out
cs
add
or
int3
pop
arpl
cmp
test
jne
mov
add
clc
mov
mov
out
das
sti
aas
adc
(bad)
push
pop
pop
xor
pop
push
clc
sub
jl
sub
shr
push
sub
push
call
sub
cmps
jne
dec
daa
shr
stos
inc
sti
inc
add
mov
mov
inc
add
xchg
in
add
sub
(bad)
mov
sub
in
sar
adc
icebp
xor
aas
pop
mov
js
jmp
rcr
les
leave
cmps
repnz
mov
mov
inc
xchg
inc
test
add
mov
mov
inc
mov
pop
mov
cdq
outs
fcmovne
imul
jg
push
add
mov
inc
rcr
fild
rcr
jmp
pusha
cmps
ficom
cwde
mov
adc
jb
mov
cmp
add
(bad)
push
fidivr
sub
lods
(bad)
cmp
fs
call
shr
sub
fsub
pop
imul
pop
shr
test
xchg
sbb
cwde
and
pand
(bad)
hlt
jbe
mov
out
aam
(bad)
ins
xor
(bad)
loopne
mov
and
xchg
adc
push
cmp
loop
pop
sbb
call
test
pusha
mov
dec
push
xchg
adc
xchg
and
mov
out
sbb
dec
ret
mov
jecxz
adc
mov
into
iret
jbe
cmovae
adc
ja
add
mov
inc
popf
push
push
arpl
cmps
dec
push
sub
leave
lods
lds
stos
sub
loopne
cwde
adc
std
inc
mov
out
jb
or
mov
pushf
push
int3
push
inc
movs
inc
ins
mov
imul
mov
jae
sbb
mov
enter
inc
ficom
and
push
adc
xor
mov
push
(bad)
sub
bound
test
jb
push
mov
xchg
pop
mov
push
mov
adc
sub
sbb
jp
test
pop
ret
imul
(bad)
sub
lock
add
cs
xor
dec
xchg
mov
sbb
mov
inc
outs
xchg
ficom
pop
fld
arpl
xchg
push
outs
rol
xlat
xchg
mov
push
test
push
and
pop
(bad)
and
push
popa
inc
add
xor
jo
shl
add
cmp
inc
jbe
add
enter
stos
aaa
out
add
xchg
frstor
inc
mov
jbe
mov
mov
movs
scas
das
add
lds
mov
add
cmp
pushf
inc
push
mov
cmp
xchg
mov
movs
rol
arpl
inc
push
pop
or
shr
pop
lods
lods
out
es
pop
push
adc
push
leave
fwait
out
push
dec
movs
jmp
ins
xchg
dec
sub
and
retf
sub
retf
das
cmp
jge
jecxz
cmp
(bad)
push
sub
ins
pusha
or
inc
stos
sub
xor
sbb
xchg
mov
and
push
push
lahf
cs
(bad)
inc
or
movs
push
sbb
aaa
pop
or
aaa
xchg
mov
dec
fisttp
mov
mov
sahf
(bad)
mov
je
sub
pop
les
pop
xchg
int
xchg
jg
loop
cmps
int
pop
movs
mov
les
adc
iret
pop
adc
fild
inc
ja
movs
mov
clc
xchg
jns
cwde
add
xchg
jne
nop
das
fdivr
outs
es
jb
jecxz
jae
movs
call
popa
mov
push
leavew
and
xlat
test
scas
fwait
leave
jmp
cwde
js
int
mov
pop
pop
push
lods
pusha
test
jmp
daa
int
test
sar
and
aas
xchg
stos
test
in
cli
push
mov
mov
xchg
xor
js
add
sbb
or
push
mov
stos
push
nop
dec
mov
and
popa
xor
xchg
jbe
cmove
pop
xor
icebp
fsubr
punpckhbw
mov
cli
inc
xchg
push
xor
gs
cs
xchg
bound
push
mov
shr
push
xor
push
(bad)
shl
dec
and
outs
hlt
mov
mov
cmp
pop
or
xor
push
cmp
cmp
dec
mov
sti
retf
pop
mov
repz
(bad)
(bad)
or
push
push
pop
(bad)
add
or
inc
fld
sbb
adc
add
mov
dec
and
pop
lods
push
sub
(bad)
imul
fwait
ror
and
xor
rol
pop
lods
sbb
dec
sub
add
test
in
xor
xchg
sahf
push
add
or
rcl
scas
mov
arpl
mov
call
ror
add
add
call
or
add
mov
loopne
mov
mov
add
dec
adc
inc
mov
mov
imul
out
loop
mov
sub
mov
add
and
push
push
(bad)
icebp
in
in
loope
test
cmp
inc
repz
xchg
pushf
pop
inc
das
mov
ins
sub
sub
cwde
sbb
and
jmp
ret
mov
sub
popa
aad
dec
gs
mov
sub
mov
sar
gs
push
dec
add
mov
loop
pop
lfs
popf
or
sbb
in
adc
(bad)
mov
std
sbb
adc
cmps
add
cmp
(bad)
lods
aad
push
scas
cmp
mov
ins
stos
adc
out
jle
pop
das
stos
pop
mov
mov
movs
push
adc
pusha
add
cmps
adc
retf
fnstenv
stos
cdq
ret
nop
and
aas
push
sti
shr
sub
or
loop
into
mov
retf
or
push
sub
mov
inc
pop
or
cdq
pop
sub
dec
sbb
leave
adc
adc
xchg
out
mov
outs
pop
mov
dec
arpl
adc
xchg
xor
or
outs
in
xor
jno
push
call
mov
int3
iret
fucomip
xor
das
sub
xchg
jne
xchg
or
sub
ins
mov
push
ins
xor
rcr
sbb
(bad)
jo
mov
mov
mov
sub
enter
xchg
cmps
xor
jbe
xor
loopne
(bad)
repz
retf
fild
xor
pop
test
xchg
or
push
cwde
sbb
cli
call
mov
mov
popf
dec
arpl
mov
loope
sbb
xchg
adc
xor
mov
adc
mov
mov
push
aaa
clc
jmp
inc
inc
sahf
js
dec
jne
(bad)
es
and
ficom
push
int
add
mov
dec
mov
sub
stos
into
xor
sbb
jmp
mov
jg
push
mov
sub
aad
jns
fidivr
pop
pop
arpl
push
dec
loopne
push
jae
push
add
push
sub
mov
jle
or
(bad)
and
push
mov
push
int3
jp
push
retf
push
or
loop
cmp
fbstp
je
jmp
add
mov
cmp
inc
or
ret
or
pusha
jmp
cmp
sub
and
pop
inc
popa
in
pop
movs
sub
push
fs
loop
pshufw
cmp
add
(bad)
loopne
pop
and
fwait
push
ret
test
pop
add
adc
pop
stos
cld
ficomp
cdq
or
scas
movs
ror
outs
xor
(bad)
and
lds
mov
xchg
jns
xor
and
or
rcl
cmp
jl
iret
ins
outs
fs
stos
lods
push
retf
mov
inc
in
push
sub
and
sbb
pop
jmp
pop
mov
in
add
stc
loop
or
(bad)
sbb
ins
xor
mov
imul
adc
xor
adc
jecxz
fcmovu
push
gs
inc
add
out
or
dec
in
call
xor
shr
in
inc
push
test
mov
inc
lods
push
cdq
icebp
mov
enter
mov
and
stos
sbb
jp
xchg
lods
mov
pop
in
or
sbb
pop
adc
repz
add
daa
cdq
or
ret
sub
dec
push
mov
push
data16
sbb
rcl
and
push
add
add
fmul
push
mov
xor
sbb
push
push
push
dec
xchg
rcl
enter
retf
xor
push
sbb
es
mul
or
xor
pop
jmp
dec
push
push
xchg
xor
mov
inc
add
inc
icebp
jle
fidiv
aaa
dec
mov
mov
les
sbb
(bad)
xchg
mov
push
mov
mov
test
lea
and
mov
adc
xchg
jns
enter
les
clc
mov
jp
les
fld
inc
adc
mov
imul
(bad)
idiv
inc
pop
stc
xor
xlat
addr16
sub
into
lock
xor
fcmovne
sar
out
xor
jae
dec
ins
icebp
iret
mov
push
add
xchg
add
rcr
inc
test
ret
retf
into
push
mov
in
pop
mov
lods
push
std
or
jne
cs
push
std
ror
and
inc
fnstcw
shl
fnsave
xor
jmp
or
xor
jnp
add
mov
jns
or
stos
int
sub
push
shr
mov
adc
mov
ins
pop
int
je
pop
aaa
out
or
jp
out
cmp
push
clc
(bad)
pop
ss
dec
adc
leave
stc
xor
and
push
out
adc
jb
test
ss
test
sub
std
and
fwait
xor
dec
aam
jmp
cdq
lock
icebp
dec
mov
jno
(bad)
mul
sbb
(bad)
mov
bnd
mov
dec
out
imul
cmp
mov
retf
push
dec
bound
push
cmp
dec
jmp
push
cmps
es
ins
aam
mov
xlat
or
or
js
stos
sbb
stos
(bad)
sahf
xchg
pop
inc
inc
push
sub
xchg
or
ja
adc
pop
icebp
jb
sub
inc
ss
pusha
cmps
mov
test
ret
pop
es
mov
int3
(bad)
(bad)
ficom
inc
mov
push
rcl
aam
sub
add
sbb
mov
push
push
add
push
scas
loop
jns
mov
dec
lods
sbb
dec
push
adc
pop
(bad)
fsubr
adc
popa
mov
sub
ins
push
hlt
jp
cli
inc
retf
mov
jle
test
or
add
gs
int
loop
int3
gs
mov
pop
xchg
hlt
mov
movs
adc
pop
cmc
int
mov
cwde
scas
cwde
cdq
lods
movs
xor
or
xchg
das
dec
ins
or
ins
inc
or
dec
jmp
std
mov
test
lds
jae
mov
fwait
pop
cmp
add
and
sub
lods
mov
jp
mov
fld
mov
cmp
in
or
xchg
mov
dec
pop
enter
adc
(bad)
sbb
jns
sbb
lahf
xor
(bad)
cdq
xlat
repnz
loopne
or
int3
inc
adc
or
mov
test
cmp
lds
loope
lods
push
mov
push
jbe
shl
jl
mov
repnz
sbb
ret
cmp
jbe
dec
sbb
or
sub
fisttp
bound
xor
pop
xor
fldcw
pusha
scas
sub
in
inc
cmc
mov
push
inc
(bad)
not
pop
call
out
mov
cmp
add
lods
dec
cmps
push
dec
dec
xchg
mov
sub
test
and
cdq
push
loop
dec
and
adc
pop
shl
and
mov
pop
add
dec
movs
or
sub
xor
(bad)
std
pop
(bad)
dec
fcomp
retf
stos
mov
mov
ins
pop
bound
mov
idiv
sbb
jecxz
inc
int
mov
mov
mov
mov
mov
sbb
call
jns
adc
or
mov
mov
fild
cmp
jno
inc
add
out
xchg
mov
mov
jns
dec
inc
adc
xor
ret
cmp
out
and
daa
and
sub
enter
xchg
sbb
sbb
test
in
inc
pop
or
adc
or
mov
outs
mov
aam
into
push
add
test
jo
cmps
popa
cs
add
adc
gs
in
shr
cs
jle
data16
lea
ret
jmp
mov
add
(bad)
leave
sahf
shl
adc
adc
pop
lock
popa
call
scas
cmp
neg
add
xchg
push
xor
dec
into
fs
shr
jnp
int
into
imul
ins
imul
out
hlt
xchg
movs
sub
sbb
sbb
das
push
and
cmp
test
stos
jno
add
mov
mov
in
adc
jne
ins
fld
adc
add
add
aas
int
cmc
add
fsub
cmps
sub
bound
lahf
loop
daa
clc
(bad)
loope
dec
sbb
mov
loop
sub
dec
sub
cmp
jmp
loopne
popa
xlat
bound
lods
aaa
imul
add
mov
push
mov
jbe
jg
sub
(bad)
in
pusha
xor
add
xor
xchg
xor
jb
jno
cmp
call
push
sub
retf
pop
loope
cmps
leave
sub
push
or
mov
arpl
out
repnz
je
in
imul
fnstsw
push
push
cmp
cwde
pop
push
adc
mov
pop
cmp
dec
xor
les
cmp
or
or
out
das
(bad)
sub
pop
xchg
jle
xor
pop
movs
lock
jge
out
in
fwait
jns
ins
mov
jo
mov
fcom
aad
jecxz
(bad)
push
(bad)
adc
fs
mov
xchg
ret
push
adc
mov
xchg
adc
leave
test
fwait
shl
inc
cmc
add
(bad)
mov
mov
imul
jno
push
into
push
(bad)
aam
addr16
push
sbb
mov
ds
mov
lock
int3
push
jp
pop
mov
mov
imul
adc
in
ret
lahf
push
pop
pushf
aas
imul
dec
cmc
fnstenv
aam
lods
sbb
fistp
test
sub
or
lods
adc
add
jae
pop
mov
aam
xchg
loop
xor
add
popf
aas
and
dec
mov
call
sti
cli
out
arpl
fdiv
ret
pop
pop
call
movs
stos
push
nop
in
cmp
jns
sbb
sbb
xor
sar
mov
test
add
xor
add
test
sbb
inc
jmp
mov
sbb
dec
lods
or
add
movs
cwde
icebp
imul
ret
dec
popa
add
cmp
retf
movs
les
repz
pop
xchg
std
pop
lock
inc
outs
(bad)
mov
pop
mov
pop
into
repz
movs
pop
jae
rcr
adc
dec
sub
popa
mov
pop
pop
inc
pop
cmp
daa
cmps
cmp
test
cmp
mov
push
inc
sub
jb
sub
jo
shr
fldcw
fisttp
jo
adc
mov
sub
pop
sub
mov
sti
jne
repnz
bound
test
test
jb
loope
adc
push
les
mov
jo
into
test
or
xchg
mov
xor
lahf
(bad)
inc
or
shl
sub
lods
jecxz
inc
aaa
add
cmp
mov
imul
fadd
fwait
push
sar
jne
popf
das
dec
xchg
lods
loopne
call
xor
test
jns
pop
je
xchg
test
or
pusha
push
repnz
jns
inc
sti
pop
dec
test
out
stc
out
arpl
aas
and
jnp
add
jno
movs
fptan
push
push
sub
xor
cmps
mov
out
push
sub
popa
inc
inc
add
mov
fisttp
push
enter
sbb
push
loopne
dec
enter
mov
mov
push
mov
xchg
imul
outs
aam
and
mov
adc
mov
fisttp
push
push
shl
xor
dec
jns
xchg
leave
jp
inc
popf
push
cmp
movs
sbb
cmps
fst
mov
push
push
out
sub
arpl
jne
je
dec
xor
lds
out
push
add
mov
xor
mov
sbb
dec
adc
inc
test
cmps
and
push
aad
sub
xchg
and
jbe
inc
out
lds
mov
or
imul
pop
or
or
push
popf
scas
jb
add
clc
push
es
fisttp
shl
lods
in
in
je
and
popf
inc
mov
xchg
les
data16
shl
fstp
es
xor
add
adc
jecxz
ds
fsubp
dec
xchg
adc
push
(bad)
cmps
mov
clc
jmp
jmp
jbe
sahf
adc
je
adc
add
test
sbb
mov
or
push
inc
sbb
push
sbb
and
xchg
out
inc
mov
aaa
ficomp
pop
mov
popa
call
outs
(bad)
xchg
sbb
pop
in
addr16
or
sub
add
mov
es
inc
jl
in
jle
out
pop
adc
xor
sbb
call
pop
std
data16
add
loop
or
fsub
(bad)
js
gs
add
rcl
rcr
retf
mov
mov
xor
or
mov
out
sbb
mov
push
mov
mov
sbb
push
dec
add
(bad)
xlat
in
or
rcl
or
push
lods
mov
jl
pop
sahf
cs
fadd
imul
daa
cmp
fwait
pop
or
adc
or
aad
rcl
ror
lods
adc
les
add
cs
or
sub
retf
pusha
pop
or
mov
ss
sbb
rcr
cmp
daa
mov
inc
and
sar
inc
xor
dec
push
fild
jp
retf
xor
add
stos
(bad)
jo
retf
add
add
push
push
pop
pop
retf
ins
jne
aaa
xchg
sbb
or
jno
in
inc
ror
add
aaa
fstp
mov
push
mov
cmps
sub
cwde
jbe
lods
or
jae
aaa
stos
or
test
adc
je
add
icebp
mov
ins
js
xchg
cmp
mov
inc
enter
jne
(bad)
aaa
test
and
cli
out
and
cdq
push
pop
clts
arpl
repnz
repnz
jbe
xlat
out
sbb
add
dec
addr16
sahf
jns
mov
pop
and
lahf
pop
xlat
gs
ins
(bad)
jge
or
jp
cmps
sbb
mov
sub
xor
ja
js
(bad)
add
jns
scas
xor
mov
jge
adc
push
push
clc
into
push
sub
loopne
mov
adc
pop
leave
jnp
bound
cli
mov
dec
jg
lahf
mov
cdq
push
fs
(bad)
int
les
popf
int3
xchg
jne
sub
pop
test
sub
test
mov
sahf
fistp
movs
into
sub
add
or
mov
ret
mov
push
out
cmp
push
mov
cmp
retf
jp
pop
movs
add
test
hlt
movs
jp
shl
and
fidiv
xchg
stos
xchg
add
mov
and
add
mov
jne
mov
xchg
add
xchg
rcr
nop
cmps
cdq
pop
fisub
or
xchg
push
dec
sub
mov
jmp
sub
(bad)
push
fisubr
jb
mov
pusha
pop
push
das
xchg
jge
add
call
(bad)
adc
add
mov
fcmovb
add
(bad)
push
cmp
jbe
mov
and
movs
jne
mov
or
push
push
cmp
aad
fwait
in
adc
sbb
test
and
add
ret
(bad)
sbb
adc
xchg
or
nop
sbb
ja
inc
scas
lds
pop
jnp
mov
lea
add
xor
adc
and
daa
inc
jbe
sub
int3
add
xchg
xchg
sub
ret
add
mov
add
outs
fisubr
add
push
sar
jne
ret
lds
xchg
push
add
push
loopne
jg
mov
call
pop
lods
sub
xor
fist
mov
outs
pop
ret
mov
loop
mov
(bad)
dec
mov
call
mov
push
leave
ins
pop
pushf
xchg
and
cli
or
sub
inc
(bad)
(bad)
cmp
sub
test
(bad)
and
jbe
jns
cwde
mov
mov
mov
jns
pop
pop
push
inc
mov
cmp
movs
jne
aaa
imul
dec
dec
test
push
adc
adc
dec
mov
cmp
pop
sub
dec
daa
cmp
push
outs
fstp
aam
dec
(bad)
aas
add
fnstsw
sbb
inc
mov
lds
call
int3
ss
add
shl
xchg
add
xor
push
jns
repnz
or
stos
xchg
cmp
inc
mov
and
jb
lods
push
mov
js
or
and
adc
mov
mov
cmp
mov
div
push
and
cmp
sbb
pop
pushf
and
out
xor
shr
aas
dec
jns
push
js
mov
sub
sub
adc
loopne
pop
stos
stos
push
push
push
outs
pop
mov
jp
add
cmp
add
aaa
dec
cmp
and
adc
pusha
cmp
mov
jl
out
cmps
clc
adc
or
cmp
xchg
add
xor
xchg
cmp
test
add
aam
mov
call
out
bound
inc
test
shl
and
in
js
cld
cmc
mov
movs
stc
stos
dec
cmp
xchg
vphaddubw
xor
add
stos
mov
inc
sub
jmp
jno
sbb
gs
scas
sub
jne
int
popa
jns
cmp
push
mov
mov
cmp
repz
xor
sub
sbb
je
mov
xor
and
dec
jae
(bad)
call
ror
cmp
test
imul
mov
ins
fwait
shl
push
aas
jb
into
clc
scas
pop
test
sub
outs
test
(bad)
jmp
shr
clc
push
test
cwde
cmovno
adc
sbb
call
mov
aam
test
xor
hlt
xchg
pushf
inc
aas
js
(bad)
xchg
cmps
mov
and
je
push
repnz
out
sub
add
test
cmp
loope
pop
xor
sbb
push
stos
cli
jae
fistp
retf
sub
shr
setno
outs
xchg
push
ficomp
push
xchg
mov
popa
xor
jb
dec
pop
fsub
ds
icebp
mov
inc
es
pop
sub
mov
iret
stos
(bad)
in
mov
retf
inc
mov
push
pop
pusha
mov
jbe
test
icebp
fidivr
in
jg
inc
or
xchg
lock
dec
mov
loope
sbb
out
outs
jne
push
inc
add
mov
js
imul
inc
and
fild
mov
jl
and
dec
jg
les
(bad)
push
test
outs
push
test
ret
adc
popa
popa
je
sbb
outs
add
fisub
rcl
cmp
into
add
mov
mov
leave
jo
push
adc
mov
sub
pushf
add
pop
xor
sbb
stos
sahf
in
call
jae
daa
or
repz
xor
cmovl
adc
and
sbb
addr16
jp
mov
jmp
ficomp
lahf
adc
adc
mov
and
nop
sar
push
cmps
sbb
inc
dec
jo
and
clc
cld
add
shl
push
or
and
push
or
jbe
jno
shl
scas
rol
cmps
inc
and
outs
mov
dec
stc
daa
sub
mov
add
cli
cmp
(bad)
daa
jmp
sub
popa
sbb
cmp
and
pop
imul
and
inc
test
add
xchg
cs
mov
pop
lods
xchg
mov
ret
shl
push
inc
cmp
sub
aaa
fidiv
xor
jmp
test
mov
in
jecxz
sbb
mov
test
cld
pop
test
xchg
stos
enter
adc
rcl
sub
adc
mov
repz
mov
or
(bad)
xchg
and
cdq
cmps
es
imul
bound
jo
add
xchg
jp
add
test
adc
imul
mov
int3
cdq
xchg
adc
sub
inc
sub
or
xchg
mov
ror
mov
(bad)
xchg
jns
jno
push
pop
add
push
inc
fisubr
dec
pop
fsub
jns
mov
ins
cmps
stos
cld
shl
test
out
dec
xor
cmp
in
or
cmps
cmovbe
push
mov
movs
paddsw
icebp
push
mov
test
ror
mov
dec
ins
or
cmp
imul
adc
leave
add
sub
loope
cmp
dec
jmp
and
jo
enter
cmc
push
loope
and
sbb
jbe
shl
test
inc
(bad)
pop
xchg
pop
ja
or
fcom
inc
data16
lock
cs
add
out
jne
retf
mov
jg
xor
pop
mov
dec
adc
test
bound
add
scas
or
or
sub
call
pop
dec
push
js
or
inc
(bad)
clc
repnz
sub
fwait
stc
pop
(bad)
pop
sar
pop
push
imul
(bad)
in
dec
in
cmp
adc
mov
pop
popa
sub
ins
inc
lock
inc
fidiv
jb
dec
nop
mov
jns
punpckhwd
mov
pop
push
xchg
or
mov
lods
pusha
out
mov
add
retf
and
add
adc
pop
or
add
shl
xchg
(bad)
lods
leave
mov
jns
push
sbb
and
popf
sub
mov
pop
mov
sahf
lock
dec
xchg
repnz
jo
in
jl
and
pop
test
sbb
sub
int3
xchg
inc
fdivr
mov
retf
lods
push
pop
jl
cmc
push
cs
xor
add
xor
(bad)
xor
adc
and
fs
jl
xchg
cmp
test
push
push
pop
xchg
jmp
loope
sti
push
jle
push
fmul
cwde
or
addr16
xabort
mov
stc
sbb
out
sub
cli
fisttp
out
sbb
out
call
dec
jl
ss
jbe
xor
rcr
clc
fdiv
push
push
out
jle
aad
push
push
int
mov
dec
jbe
mov
out
sub
jb
aam
add
mov
mov
leave
dec
stos
push
xchg
push
imul
adc
pop
rcl
pop
cmp
mov
add
inc
movs
ins
scas
mov
fcomp
pop
cdq
pop
inc
inc
dec
iret
xor
std
sar
push
adc
mov
loop
pop
jne
sub
mov
mov
xchg
mov
inc
ficom
push
repnz
stc
adc
xor
int
cvttps2pi
inc
or
or
jne
mov
ins
ja
xchg
or
push
cmps
mov
xor
and
xchg
xchg
inc
in
das
adc
jb
xchg
int3
cmps
mov
sub
jbe
stos
fwait
cmp
retf
xor
movs
popf
sub
dec
push
cld
push
inc
test
jp
sbb
sbb
pop
sbb
imul
ins
push
jmp
mov
mov
jnp
xchg
call
ror
fisub
jns
imul
sbb
rol
cmp
cmp
sub
lods
(bad)
pop
jge
or
xor
das
jns
out
inc
gs
ss
fdiv
push
lds
out
out
call
or
xor
sub
push
daa
push
sbb
push
push
sbb
jbe
lahf
repnz
sbb
sar
aam
push
das
mov
xor
movzx
push
add
in
fisttp
loop
ins
sahf
rcr
pop
iret
jmp
(bad)
adc
adc
sbb
inc
test
aam
cmps
mov
dec
inc
gs
add
int
scas
aaa
jns
out
dec
das
pop
mov
jmp
mov
jp
and
sbb
ficomp
cld
imul
cmps
cmp
int3
in
mov
rcr
out
adc
pop
add
xor
xlat
je
das
pop
add
ret
pextrw
push
or
cdq
push
inc
sub
fwait
add
loopne
movs
pop
sub
rcl
mov
neg
sub
cmp
xchg
cmps
mov
fsub
dec
mov
or
sub
xchg
push
jns
jnp
adc
(bad)
std
fdiv
test
adc
not
xor
pop
shl
pop
dec
cmp
xchg
das
inc
data16
(bad)
xchg
pop
inc
jp
xchg
push
addr16
adc
inc
cli
pop
dec
popa
int
pop
call
inc
mov
mov
pop
xchg
mov
push
(bad)
lock
aad
(bad)
push
aam
pusha
xor
movs
in
sub
out
lods
ds
call
loop
cmp
mov
pop
mov
pop
adc
cmp
jbe
pop
nop
pop
inc
pop
inc
add
neg
(bad)
fsub
cdq
pop
jp
jl
test
dec
jmp
push
daa
add
mov
rol
mov
aaa
push
pushf
pop
sub
repnz
cdq
adc
sbb
sub
mov
xor
cmps
movs
retf
pop
fisubr
pusha
mov
add
mov
xchg
jne
or
jp
mov
push
add
pop
outs
xchg
pusha
add
retf
inc
bound
push
mov
(bad)
sbb
cwde
jecxz
pop
pop
xor
les
cli
loop
pop
js
pop
inc
push
and
sbb
cmps
add
fs
inc
sub
adc
js
sbb
scas
xlat
pop
add
fs
sub
scas
dec
neg
jmp
stos
xchg
lods
ins
call
push
inc
ror
mov
(bad)
xor
add
in
les
mov
imul
or
mov
push
or
and
and
fcomp
(bad)
out
cmp
out
xchg
ins
mov
cmp
loop
shr
jnp
mov
xor
adc
and
xor
jns
out
rcl
ret
sti
mov
add
mov
sub
int3
inc
nop
dec
mov
loope
aas
mov
push
pop
fdiv
pop
sbb
test
add
adc
test
aas
jnp
xor
mov
ficom
sbb
das
xlat
pop
dec
jmp
or
pop
popa
repz
ss
add
push
fiadd
sub
jge
les
test
dec
mov
jmp
push
pop
xchg
push
push
mov
ss
and
ret
setns
sbb
mov
stc
retf
push
mov
add
mov
push
scas
push
or
or
inc
movs
shl
sahf
pop
stos
stc
bnd
repz
inc
mov
(bad)
sbb
cwde
adc
sbb
mov
push
push
pushf
push
cmc
cmps
dec
lea
jl
jp
dec
jl
fiadd
les
mov
pop
jo
movs
pop
mov
sbb
sub
jbe
adc
fs
ret
adc
call
dec
sbb
repz
sbb
sub
rcl
ret
sbb
jmp
xor
add
mov
ss
cmp
and
shl
aad
outs
push
sbb
cmc
inc
add
mov
inc
repz
aas
add
fsubr
jbe
jbe
lods
ret
lea
loop
out
mov
inc
rcl
dec
adc
mov
push
je
adc
push
jmp
add
xchg
(bad)
fld
sub
xor
fisubr
stos
cdq
pop
cdq
push
xor
leave
jb
(bad)
idiv
and
adc
loope
ds
or
rcl
dec
mov
adc
(bad)
pop
push
sbb
arpl
outs
subps
pop
mov
clc
inc
lods
pop
inc
jg
adc
cmp
sbb
mov
xor
mov
inc
arpl
shl
xor
mov
bound
gs
or
pop
out
or
sub
out
inc
das
and
retf
in
xor
push
xchg
pop
nop
out
in
add
push
leave
xchg
jne
int
fld1
mov
push
xchg
mov
out
lock
pop
pop
add
pop
pop
mov
es
inc
xor
fdiv
push
and
push
inc
cwde
mov
add
adc
bound
mov
mov
sub
add
dec
fisttp
mov
push
sbb
adc
retf
inc
loop
push
retf
mov
adc
jae
aad
sbb
sub
inc
inc
adc
push
fdivr
xor
stos
shr
jmp
aam
imul
mov
js
mov
inc
pop
movs
mov
jb
xor
sbb
sub
mov
jmp
xor
in
leave
loop
fs
xlat
mov
jbe
nop
pop
jns
push
cmc
(bad)
inc
retf
push
sti
out
test
dec
jns
mov
jp
loopne
cmp
add
test
gs
xchg
or
pop
push
(bad)
and
fsubr
adc
cld
ret
test
add
ror
arpl
mov
xor
ja
lods
imul
push
lods
jo
push
aaa
add
(bad)
mov
adc
xchg
clc
lahf
call
loop
mov
push
cmp
std
xchg
je
adc
pop
repz
adc
repz
js
or
js
adc
(bad)
icebp
sub
in
and
sub
icebp
cmp
icebp
or
ins
sbb
mov
jle
and
xchg
pop
arpl
sub
dec
stc
cmps
test
adc
jae
(bad)
lock
mov
ins
not
xchg
stos
and
les
icebp
add
cmp
shl
sub
jne
mov
mov
jl
mov
inc
sub
cdq
(bad)
mov
sub
jecxz
jnp
dec
stos
pop
cmp
mov
lock
sub
sbb
rcr
xchg
sbb
xor
dec
movs
jmp
sub
push
push
sbb
in
inc
pop
mov
pusha
mov
adc
push
sbb
xchg
out
pop
nop
cs
pop
rol
arpl
ret
arpl
pop
fsub
mov
push
arpl
daa
adc
xchg
aad
adc
mov
pop
mov
movs
mov
loopne
xchg
imul
outs
aad
jmp
cs
inc
icebp
jl
stos
xchg
fs
cmp
and
push
sbb
mov
adc
test
cmp
ror
scas
not
cmp
stos
retf
out
sub
mov
add
mov
jne
xor
into
push
lahf
pop
add
stos
sub
xchg
lods
xor
rol
and
call
out
sbb
sub
push
out
scas
cmp
lods
data16
cmps
or
jne
inc
sbb
jecxz
sbb
test
movs
sbb
mov
adc
icebp
add
mov
scas
xor
je
icebp
sbb
mov
(bad)
xor
adc
or
in
jp
repz
push
bound
movs
pop
xor
(bad)
push
fadd
pop
call
or
sbb
enter
mov
inc
outs
push
adc
call
push
test
mov
dec
xchg
mov
mov
test
scas
test
add
clc
push
imul
inc
movs
dec
(bad)
dec
pop
ja
test
and
scas
ficomp
jp
jge
aam
test
inc
dec
or
cmps
adc
out
xchg
daa
mov
iret
ss
cwde
pop
jo
push
sub
dec
mov
ins
push
scas
sub
jbe
aad
adc
mov
pop
(bad)
mov
sbb
mov
aam
or
rol
pop
sahf
int3
imul
dec
dec
test
(bad)
cli
inc
test
jmp
dec
mov
pop
int3
test
xor
les
xor
bound
ror
adc
lods
push
or
add
pop
cwde
shl
lea
xlat
push
push
mov
retf
ins
adc
jge
pop
mov
push
or
pop
cmp
je
(bad)
push
or
shl
outs
test
popf
mov
xor
xchg
aaa
inc
cdq
mov
jae
dec
int
lods
mov
jmp
jecxz
pop
dec
add
out
inc
loop
pop
inc
jle
xchg
xchg
js
add
out
push
cmp
int3
push
hlt
neg
and
pop
les
add
or
jb
lahf
fisttp
xchg
lahf
or
pop
adc
push
(bad)
stos
stos
xor
mov
cmp
repz
stc
sets
inc
sub
lea
dec
xor
sub
adc
nop
rcl
push
ins
or
pop
push
inc
aad
add
mov
fisubr
push
mov
cmc
jae
ror
mul
jge
push
xchg
lds
jl
test
fucomp
std
dec
sub
add
xor
inc
jmp
dec
or
inc
mov
push
nop
pop
xchg
jne
stc
(bad)
popf
cmp
out
popf
adc
xor
inc
inc
out
lds
mov
rcr
or
push
retf
fidiv
mov
mov
and
fld
inc
pop
sub
mov
pop
xor
inc
fucomi
or
adc
aas
loope
test
movs
int3
sbb
pop
retf
inc
pusha
ficom
inc
iret
stos
test
push
fld
xlat
dec
cmc
repz
int
in
pushf
ja
fist
test
aas
ficomp
es
sahf
push
fist
popa
in
icebp
inc
outs
adc
in
es
add
shl
push
or
mov
es
inc
push
mov
sti
xchg
sub
adc
xor
xchg
daa
mov
data16
nop
jae
enter
or
ss
adc
cmp
int3
jno
mov
jecxz
cwde
sbb
inc
mov
push
mov
xchg
pop
into
inc
jno
rdtsc
jmp
push
call
adc
dec
add
or
movlps
xchg
(bad)
add
cmp
clc
inc
fidiv
(bad)
xor
leavew
jge
ret
xor
cmp
inc
mov
ret
mov
jecxz
es
add
jae
jmp
jmp
push
xchg
jl
or
or
cmps
fs
push
popa
sar
pusha
cmp
ins
or
lods
push
mov
gs
pop
out
in
repz
mov
pop
jne
and
jp
imul
out
cmps
lea
scas
mov
push
jmp
(bad)
jnp
push
lods
sbb
retf
scas
xchg
push
pop
jno
ret
adc
js
sbb
gs
jae
loop
jecxz
jb
es
es
mov
(bad)
lock
mov
jge
cmp
(bad)
jge
xchg
sti
fild
ja
and
pop
adc
xor
jae
xor
lods
sbb
mov
mov
imul
mov
and
sbb
jns
jle
mov
in
mov
call
xchg
fmul
adc
test
scas
sub
scas
jl
mov
xchg
ins
sub
pusha
sti
mov
mov
jmp
mov
jo
stc
nop
dec
mov
sbb
xchg
sub
add
pop
xor
cwde
imul
xchg
adc
lods
popa
test
push
shl
sub
fs
data16
pop
mov
adc
sub
sub
mov
xor
push
(bad)
jo
mov
adc
jae
xor
push
pushf
stos
add
repnz
mov
adc
xchg
fwait
push
cmp
ror
push
dec
jle
xchg
jecxz
retf
inc
or
or
sub
jmp
in
jp
mov
mov
push
bound
test
cmp
shr
pop
out
jb
cwde
jnp
push
std
push
call
mov
out
cs
mov
mov
rol
cdq
pushf
in
and
add
mov
sub
test
out
test
sub
sbb
push
pop
add
jb
lahf
xchg
loop
ret
inc
gs
(bad)
repnz
push
stc
xor
cmps
js
dec
pop
pop
xor
xchg
cmp
shr
hlt
data16
cmp
or
sub
scas
repnz
inc
(bad)
repnz
jmp
out
call
repnz
dec
xchg
jne
imul
sub
daa
or
push
nop
aaa
jmp
push
dec
mul
(bad)
iret
addr16
ss
and
aaa
jns
std
inc
outs
push
jmp
inc
cld
mov
sbb
pop
mov
in
sbb
shl
adc
sbb
stc
dec
jno
mov
inc
jns
and
(bad)
enter
pop
push
xor
or
movs
nop
add
sub
adc
jl
sbb
out
add
mov
sub
jns
cmp
pop
repz
int
lea
xor
sbb
inc
xlat
fld
cmps
sub
imul
dec
xor
add
fadd
pop
enter
aad
ret
xlat
sub
or
in
pop
push
sar
int3
test
add
jmp
xor
repnz
jnp
sub
adc
es
ficom
aad
fcomi
pop
cs
pop
(bad)
xor
xor
inc
sub
push
sbb
add
sub
fld
in
jno
adc
add
mov
dec
fimul
inc
xor
les
dec
inc
sub
faddp
je
fdiv
and
and
add
jb
das
mov
out
add
dec
pop
loope
cmp
mul
jo
shl
shr
repnz
cmps
xor
outs
sbb
xlat
add
ins
out
add
ficom
adc
sub
inc
pop
jmp
xchg
or
sub
shl
(bad)
repz
lds
jge
repnz
xchg
shr
enter
cld
add
and
scas
test
mov
(bad)
int
(bad)
out
aad
or
ss
sub
inc
add
sbb
fs
pop
nop
sar
cmc
and
fwait
icebp
sub
mov
cli
inc
and
mov
lar
adc
mov
in
xchg
mov
pop
sbb
das
aam
add
cwde
pop
test
outs
scas
stc
xor
outs
cmps
icebp
xchg
dec
push
sbb
mov
jno
xor
aam
push
movs
call
cmp
push
lods
mov
je
inc
(bad)
movs
lahf
push
fimul
fild
sub
pop
fcomp
pop
in
in
xor
div
cmp
cmps
mov
pop
fucomp
mov
rol
mov
shr
ins
pop
in
fisttp
dec
dec
push
jb
dec
cmp
cwde
loop
inc
add
push
inc
jbe
mov
retf
retf
mov
inc
mov
les
dec
popf
gs
adc
pushf
ret
xor
sbb
outs
push
and
xchg
fstp
icebp
mov
loop
and
sub
icebp
jle
enter
jp
in
arpl
push
sub
fdivp
retf
cmp
enter
cmp
fnstcw
std
xchg
mov
dec
lahf
pop
neg
cmp
int3
scas
paddsb
cld
inc
ins
call
inc
das
sub
repnz
aas
(bad)
or
sub
ror
xor
mov
cmp
hlt
cmp
push
mov
push
jnp
pop
mov
lds
sbb
push
and
pop
cmp
mov
lods
xchg
add
mov
push
mov
adc
mov
or
inc
cwde
inc
mov
and
pop
js
inc
stos
adc
pushf
xchg
movs
into
xchg
mov
aad
pop
in
jle
xchg
push
movs
pop
cs
int
cmp
xchg
scas
popa
jecxz
push
xor
es
int
out
dec
out
repz
int
mov
pop
iret
popa
retf
(bad)
retf
inc
or
cmp
inc
lods
je
sar
mov
push
jl
int
xchg
loop
(bad)
fwait
stc
sub
dec
sar
sub
add
cdq
mov
and
push
xchg
ror
aad
and
push
sahf
psrad
(bad)
es
(bad)
xchg
xchg
jle
retf
scas
ss
fstp
mov
data16
cwde
lods
xor
jae
imul
daa
les
mov
mov
movs
popf
push
xor
fwait
rcr
mov
retf
xor
dec
aas
sub
sbb
mov
mov
xchg
pop
test
sub
jae
iret
mov
mov
mov
sahf
cmp
mov
dec
jne
pop
pushfw
sub
push
popf
jecxz
mov
jp
fwait
xor
ins
clc
inc
mov
data16
int
pop
xor
jae
push
jb
and
data16
das
adc
movs
lods
(bad)
mov
push
cmp
jl
cdq
cmp
mov
mov
outs
inc
rcl
js
sub
sbb
into
or
adc
lock
icebp
xor
in
loope
movs
inc
xchg
add
(bad)
and
(bad)
aaa
adc
jge
cmc
adc
gs
scas
movs
push
xor
fdivr
dec
mov
cld
lea
call
retf
stc
cmp
scas
rcl
outs
retf
movs
fcom
or
pop
jp
and
inc
pushf
stc
dec
push
jl
sbb
rcl
cmp
pop
pop
iret
and
(bad)
in
mov
in
ins
xor
inc
add
cwde
into
sbb
nop
jae
sti
push
in
dec
enter
pop
stc
sub
jmp
daa
jmp
jmp
inc
ret
mov
out
int
push
push
add
(bad)
shl
push
inc
call
rcr
in
inc
jp
test
fstp
dec
popa
dec
je
mov
stc
pop
mov
outs
push
pop
push
mov
fmul
mov
dec
inc
shr
sbb
add
push
ret
adc
cmp
cmc
sbb
test
add
(bad)
fst
cmc
retf
ds
in
push
std
jg
outs
(bad)
mov
jl
add
push
sbb
popf
in
popf
outs
sbb
js
adc
mov
lahf
adc
lods
push
sub
arpl
int
adc
in
ins
dec
cli
lea
xor
pop
ins
fs
push
push
push
fdivr
enter
mov
dec
repnz
and
sahf
adc
pop
sti
fwait
not
bound
xchg
inc
sbb
dec
lea
lea
fisubr
es
(bad)
push
sub
jb
enter
fnstsw
lods
mov
inc
mov
jmp
lods
sbb
das
in
je
pusha
sub
lea
fdiv
sbb
mov
out
retfw
div
add
sti
into
add
ins
into
mov
lods
adc
push
stos
int3
mov
xchg
test
adc
repnz
aam
push
scas
out
dec
mov
and
mov
jmp
dec
mov
xchg
outs
not
push
add
pusha
outs
dec
addr16
js
push
mov
adc
push
push
sar
adc
dec
in
out
inc
sbb
je
int
in
sbb
cmps
shl
jmp
sbb
pop
and
push
test
hlt
test
push
add
mov
ret
and
ins
inc
push
jmp
int
clc
add
test
jbe
inc
push
mov
(bad)
and
mov
mov
ficom
or
fs
mov
sbb
xchg
jns
je
pop
or
or
mov
and
add
sbb
jnp
test
mov
or
(bad)
jl
hlt
push
fcomp
mov
mov
push
daa
movs
imul
rol
mov
inc
mov
cli
or
jecxz
adc
cdq
add
std
enter
dec
nop
cmp
stos
test
adc
pushf
rol
loope
xchg
pop
pop
rol
mov
adc
pop
dec
sbb
mov
ss
xor
in
pop
cwde
xor
cmp
inc
jmp
push
pop
jmp
xor
mov
retf
add
in
into
(bad)
jb
ja
xor
mov
call
repz
dec
mov
sbb
push
inc
das
xor
scas
dec
add
scas
addr16
add
adc
add
add
add
add
add
add
add
add
adc
add
and
adc
and
inc
adc
push
push
inc
push
push
(bad)
fiadd
or
add
add
add
cmc
push
jle
cmc
mov
jns
mov
stos
jo
mov
cld
inc
cmp
sbb
jae
retf
mov
cli
ffreep
cmp
xor
add
add
(bad)
test
leave
jl
push
enter
xchg
jmp
adc
cmp
ret
lds
push
cmps
daa
adc
xchg
(bad)
pushf
inc
add
pusha
cmp
sahf
inc
inc
mov
xchg
pop
dec
and
bound
push
sub
pop
add
push
push
sbb
sub
mov
arpl
inc
xchg
cmp
pop
pop
cwde
fidivr
inc
cld
int3
xor
sub
dec
xchg
frstor
jnp
pop
xchg
lods
ins
rol
mov
add
jae
stos
adc
adc
adc
adc
adc
adc
adc
adc
push
fadd
ins
out
sbb
(bad)
or
dec
cmp
popf
sbb
(bad)
loopne
lea
mov
loop
dec
jp
fld
fmul
jle
and
mov
mov
arpl
mov
pop
xor
xchg
out
test
adc
aam
cmps
fistp
mov
out
pop
mov
xchg
iret
mov
in
mov
pop
mov
add
rcl
lods
jo
add
add
lock
test
mov
sar
into
inc
sti
fist
repnz
and
and
into
loope
cmp
mov
dec
xchg
outs
sub
in
popf
ins
push
js
movs
xlat
adc
xor
jo
pop
fstp
loope
cmp
cmps
les
in
neg
push
scas
jp
or
imul
add
arpl
inc
ficom
pop
and
mov
mov
dec
xchg
adc
xchg
mov
cmc
pop
inc
inc
pop
dec
cmp
in
out
mov
mov
(bad)
fdecstp
les
movs
ret
out
(bad)
in
lahf
ins
inc
enter
mov
cdq
cdq
xchg
cmp
int3
int3
int3
cdq
xchg
xor
xchg
aaa
dec
shl
ret
jmp
nop
cmc
pop
js
jp
xor
xor
mov
pusha
dec
dec
dec
dec
dec
dec
inc
es
cwde
out
pop
inc
inc
mov
leave
popf
out
inc
pop
stos
xlat
call
mov
mov
jmp
(bad)
scas
sub
jns
push
jns
jno
jecxz
sub
sbb
enter
and
imul
mov
sbb
push
xor
jo
mov
les
mov
xchg
mov
lods
pop
pop
not
data16
stos
(bad)
scas
addr16
ins
sar
mov
jp
out
add
inc
inc
sbb
mov
jmp
mov
xor
cmps
pop
push
pop
ins
(bad)
pusha
cmp
jns
cmp
dec
enter
aam
(bad)
scas
and
jbe
out
loope
enter
cli
mov
mov
inc
cmc
adc
test
test
xchg
adc
dec
jle
inc
stos
movs
push
or
(bad)
push
cli
in
pop
pop
jb
in
mov
dec
scas
stos
stos
sbb
shl
sbb
(bad)
ficomp
and
ret
pop
jne
mov
pop
jnp
and
dec
jp
mov
xor
fisub
stc
xor
movs
ja
mov
adc
push
cmp
pushf
jns
and
push
or
mov
and
addr16
out
cdq
jge
stos
ja
movs
mov
mov
mov
les
retf
add
test
pop
xor
hlt
xchg
add
add
push
adc
cmp
inc
add
shl
mov
add
push
ds
dec
cmps
ret
into
test
cdq
shl
cmps
shl
fwait
dec
fwait
dec
lea
xor
rcl
dec
sar
sbb
adc
lea
rcr
(bad)
cmp
dec
out
add
rcr
daa
(bad)
or
(bad)
adc
cmp
and
cmp
out
int3
fisttp
or
or
mov
mov
add
addr16
inc
stos
ins
(bad)
inc
repz
nop
test
sahf
lock
jecxz
mov
fwait
inc
repnz
mov
mov
cmp
lahf
stos
fistp
push
adc
and
jbe
mov
mov
pushw
int
icebp
add
cmp
xor
popa
lods
in
add
push
sub
inc
fstp
out
js
je
iret
dec
stos
mov
pop
xchg
les
fisubr
test
dec
push
out
add
(bad)
outs
(bad)
fdiv
push
xor
mov
in
inc
and
ins
inc
pop
hlt
mov
ds
lods
(bad)
lods
bound
jae
xchg
in
jle
or
icebp
mov
push
(bad)
test
inc
mov
sbb
addr16
dec
movs
or
mov
mov
imul
cmc
mov
lods
push
iret
or
loope
fisub
into
ret
and
push
sbb
loope
inc
fadd
or
sub
fmul
mov
xor
xor
test
xor
jnp
xchg
cmps
imul
pop
adc
push
mov
ins
push
mov
sub
pop
push
not
pop
fidivr
mov
push
inc
jb
call
jno
aad
sub
mov
push
bound
sar
or
push
jb
push
mov
xor
test
sub
jmp
xchg
enter
aam
int
arpl
push
dec
psubb
retf
jg
enter
or
test
aam
mov
mov
test
(bad)
add
(bad)
mov
out
clc
ins
aam
ins
aam
outs
mov
pcmpeqw
add
(bad)
sub
icebp
or
adc
es
fdiv
out
mov
pusha
cld
pop
outs
ret
mov
dec
or
mov
fdiv
(bad)
pop
dec
and
imul
push
sbb
ins
sti
call
push
rol
sbb
sbb
sub
stc
cmp
mov
and
pop
pop
add
data16
aam
adc
inc
mov
mov
fmul
mov
sub
xor
fdiv
popa
jge
cmp
push
movs
mov
pusha
cmps
cmp
dec
jg
adc
nop
sbb
inc
cmp
mov
fld
adc
cli
pop
(bad)
xchg
jp
jne
jmp
(bad)
adc
popa
cmp
jne
jmp
xlat
scas
or
rcl
mov
push
lahf
sub
mov
ss
add
xor
cmp
cmp
sub
sub
addr16
pop
lea
adc
fsubr
imul
mov
or
sub
dec
push
lds
mov
mov
or
push
sbb
adc
fwait
addr16
addr16
aas
in
pushf
dec
ins
aad
xor
outs
test
imul
cdq
in
jg
push
cmp
imul
mov
pop
push
push
or
mov
js
push
fadd
inc
xor
cmp
loop
add
ret
mov
cmps
imul
sub
ds
(bad)
shl
push
adc
mov
cli
lods
cmp
lods
rol
lock
retf
mov
pop
(bad)
lock
dec
pop
pop
jno
addr16
cmp
fs
cmp
repz
push
pop
out
es
sahf
lock
not
in
push
call
fwait
mov
cmp
push
cmp
mov
xchg
mov
in
dec
push
mov
pop
mov
pushf
inc
xchg
xor
xor
xchg
imul
and
adc
ja
imul
loop
repz
push
imul
xchg
xor
mov
popf
jbe
and
xchg
xor
inc
int3
int3
push
add
xor
outs
mov
dec
jmp
and
adc
adc
mov
inc
rcr
xor
or
lods
fnstcw
and
add
adc
fadd
es
out
xor
or
dec
and
nop
pop
dec
or
mov
popa
repz
fisub
leave
test
retf
leave
adc
arpl
xchg
xchg
pop
nop
inc
loop
iret
rcl
push
imul
xor
test
mov
iret
fdiv
or
addr16
and
iret
push
sti
test
jle
inc
adc
cli
jg
les
xor
add
add
push
or
add
add
add
add
add
adc
xor
lock
inc
popa
adc
ret
xor
jo
(bad)
fiadd
or
add
or
add
out
inc
mov
icebp
adc
adc
adc
adc
adc
jle
test
in
mov
jmp
mov
mov
repz
clc
inc
or
mov
mov
cdq
push
fdivr
push
xchg
sbb
ret
mov
cwde
enter
repz
ret
das
jb
int3
ja
cmc
dec
jo
loope
pop
ror
cmps
jnp
pop
test
iret
stos
mov
mov
or
push
mov
pop
std
adc
aad
xchg
jg
ins
arpl
sar
(bad)
loop
pop
ja
and
outs
in
pop
arpl
fldln2
fstp
pop
in
rcr
fst
aad
aas
cmovne
into
fnstcw
(bad)
xor
inc
fwait
sbb
dec
in
cmp
mov
inc
xchg
shr
pop
fbstp
mov
ja
inc
xor
lods
out
into
jp
clc
mov
and
push
xchg
lea
jecxz
jae
outs
imul
push
lds
mov
xchg
push
mov
sar
mov
sbb
inc
inc
inc
(bad)
mov
iret
mov
stos
scas
push
repnz
sahf
aas
int
mov
fwait
aam
out
test
pop
mov
in
inc
ror
mov
sti
or
icebp
jnp
mov
dec
push
push
inc
cmp
and
mov
adc
inc
aam
(bad)
pop
cld
xchg
out
adc
cld
or
clc
adc
add
imul
std
lea
bts
ins
jae
cmps
pop
bound
rcl
xor
dec
and
loopne
sar
jmp
push
cmp
sub
jle
test
cs
into
dec
mov
adc
aam
test
inc
inc
and
movs
and
push
and
push
push
xchg
or
nop
jne
and
xor
add
jmp
jmp
or
and
xchg
or
jge
inc
sub
outs
repnz
xor
inc
in
mov
stos
jnp
sbb
and
dec
push
scas
inc
sar
sbb
sti
fld
push
out
adc
pop
mov
jb
jne
out
xchg
(bad)
sub
fist
cmp
mov
neg
fstp
das
outs
shl
and
clc
adc
jno
mov
or
pusha
retf
in
pop
inc
cli
push
test
and
or
pusha
xchg
out
lahf
outs
outs
ja
sahf
jae
fistp
into
jnp
xchg
and
loope
fistp
xchg
mov
push
mov
jecxz
outs
sub
inc
mov
push
cmc
scas
shr
popa
dec
hlt
pop
fdivr
das
(bad)
and
push
test
ror
add
add
add
add
add
add
add
add
add
adc
xor
and
and
inc
push
push
inc
inc
adc
or
add
add
add
aad
jle
repnz
jg
jns
arpl
add
icebp
fldcw
and
repz
xchg
aaa
mov
cmp
test
pop
scas
and
jo
dec
sar
push
in
popf
ret
jns
mov
fdiv
aam
mov
cwde
or
inc
jmp
mov
inc
mov
(bad)
outs
jo
fucomip
retf
daa
es
xchg
adc
inc
movs
lahf
bnd
dec
shl
aaa
add
pushf
push
and
add
sar
push
xor
jg
jmp
clc
xor
les
ret
repnz
das
adc
sub
adc
push
pop
mov
jg
std
xor
mov
xchg
dec
sbb
pop
xor
xor
adc
adc
iret
push
les
arpl
and
jbe
push
call
inc
cli
pusha
(bad)
popa
inc
and
push
bound
lods
push
out
imul
imul
jno
into
cmp
das
popa
es
jmp
(bad)
imul
in
cs
test
and
pop
movs
xlat
or
add
popa
fs
cmp
sbb
xchg
rcr
xchg
xchg
rcr
sbb
jmp
ret
xchg
push
and
mov
in
cmp
inc
adc
mov
cmp
jle
and
push
leave
fst
xor
inc
adc
dec
imul
lea
mov
jle
dec
add
jmp
jle
and
push
leave
fst
std
mov
push
ret
enter
test
sub
lods
jmp
movs
imul
or
or
xchg
dec
jecxz
(bad)
mov
push
mov
mov
mov
push
sbb
and
pop
mov
bound
dec
outs
and
out
out
pop
fs
in
or
dec
in
or
das
das
sub
int
mov
sub
outs
sbb
mov
mov
jle
sub
pop
fdivr
inc
pop
xchg
or
mov
inc
in
xchg
fs
jecxz
or
test
and
mov
nop
dec
lock
or
lds
push
fdiv
arpl
push
mov
sub
popf
test
xor
dec
sbb
push
fcomp
fcomp
adc
mov
mov
mov
sub
adc
add
pop
mov
adc
(bad)
sub
or
nop
retf
pop
inc
call
fstp
inc
push
mov
sbb
mov
xor
xor
fwait
inc
popa
jae
out
jb
gs
test
xor
pop
loope
dec
sub
add
mov
loope
push
sahf
jmp
in
xchg
push
cmp
xchg
in
push
mov
fcomi
inc
xor
out
add
repnz
stos
pop
xor
dec
arpl
xchg
sub
inc
test
push
loopne
icebp
sbb
arpl
mov
push
sbb
ror
add
and
inc
adc
dec
or
pop
cwde
out
stos
or
dec
retf
sbb
das
push
pop
xchg
sub
jle
dec
push
pop
mov
sub
mov
mov
inc
bound
sub
aam
mov
inc
pop
xlat
sbb
dec
xor
into
mov
movs
dec
xchg
test
push
xchg
sbb
sbb
retf
push
mov
(bad)
dec
jnp
sahf
movs
pop
mov
mov
and
mov
(bad)
cwde
sub
push
and
test
inc
dec
lea
sub
inc
aam
sbb
movs
jle
push
(bad)
cmp
repz
pop
jno
push
int3
mov
mov
mov
imul
push
sar
or
mov
es
aas
out
cli
lea
sub
cwde
adc
fwait
sbb
lods
add
jo
xchg
push
adc
ret
das
or
inc
sbb
dec
aad
mov
or
cmp
mov
leave
or
jb
pop
out
iret
sub
and
ret
sbb
push
mov
add
int
in
shr
call
xor
(bad)
into
(bad)
mov
outs
imul
mov
inc
inc
es
hlt
pop
stos
dec
ror
cmp
dec
call
adc
into
ret
shl
pushf
mov
mov
and
jbe
pop
arpl
out
or
cdq
int3
jl
jae
lods
sbb
mov
mov
ins
shr
das
xchg
sbb
xor
call
addr16
mov
sub
inc
icebp
sar
jae
or
je
mov
or
cmp
arpl
dec
shl
mov
xor
or
and
adc
fwait
lea
addr16
mov
add
adc
xlat
or
(bad)
ss
dec
fsub
movs
jo
movs
inc
ds
dec
das
stos
hlt
inc
pop
dec
in
in
int3
mov
into
shr
dec
push
push
dec
add
ret
lods
sbb
(bad)
cmp
xchg
or
xor
mov
inc
xchg
cmps
xchg
int
dec
(bad)
or
xor
mov
sar
dec
leave
add
test
test
enter
aaa
outs
push
pop
test
ins
pop
pop
aam
pop
je
xor
sbb
rcr
imul
lods
pop
cli
mov
mov
daa
mov
mov
icebp
mov
call
sub
inc
add
fidiv
pop
stc
sub
and
(bad)
std
cwde
popa
movs
cmp
jge
jns
xchg
int
cs
pop
xchg
cmc
or
outs
rcl
(bad)
mov
mov
add
push
(bad)
mov
dec
scas
xchg
pop
and
adc
dec
scas
cdq
pop
and
mov
cmp
push
ret
cmp
mov
(bad)
lahf
sub
xchg
sar
nop
repnz
inc
xchg
pop
add
adc
xchg
lea
std
ror
add
and
sbb
push
ret
movs
or
mov
xchg
jmp
add
call
jecxz
cwde
push
mov
imul
or
(bad)
sbb
xchg
retf
gs
pop
ret
or
dec
ss
xchg
xchg
dec
jo
shl
inc
aad
dec
loopne
pop
retf
scas
imul
or
mov
inc
call
call
imul
out
inc
stos
or
xchg
push
and
rcl
mov
add
in
pop
bound
mov
imul
lods
sub
ret
sbb
xchg
leave
xor
push
sbb
or
mov
push
test
aaa
add
jno
jmp
lahf
sbb
mov
je
adc
cmp
xchg
(bad)
jno
mov
stos
aam
xchg
xor
dec
add
repnz
mov
das
push
sub
mov
fcomp
pop
mov
push
mov
sub
mov
stos
pop
stos
push
stos
sub
adc
or
cmps
stc
or
cmps
or
lods
int
retf
test
mov
mov
and
sub
mov
pop
adc
loope
xchg
cmp
mov
inc
ss
xor
mov
les
imul
test
jge
sub
mov
lods
push
enter
lock
mov
mov
in
mov
sub
add
adc
enter
adc
in
add
(bad)
les
xor
add
add
add
push
add
add
add
add
add
add
adc
and
and
xor
jno
mov
xor
(bad)
fiadd
or
add
or
add
add
fist
pop
pop
inc
movs
sbb
fidiv
or
pop
dec
test
das
test
ror
(bad)
bnd
aaa
dec
or
adc
mov
mov
push
push
scas
mov
fidiv
push
cmps
ins
lods
jge
les
xor
in
pop
adc
mov
push
xchg
neg
enter
inc
ret
fdivr
add
push
scas
inc
inc
sub
mov
pop
pop
leave
loope
lods
mov
ja
adc
lods
fdivr
jne
mov
cmps
adc
mov
call
cmp
and
pop
xchg
xor
adc
inc
xchg
lahf
adc
fadd
fwait
lods
aam
pop
mov
cmc
fwait
push
ret
stos
xlat
pop
hlt
hlt
mov
loope
cmp
test
push
movs
scas
or
push
lods
hlt
std
jb
inc
push
fbstp
mov
jns
push
shr
(bad)
repnz
lds
dec
push
nop
add
hlt
test
mov
out
aam
cmp
mov
out
push
inc
adc
test
dec
pop
xor
outs
adc
or
call
jnp
add
out
ror
loope
enter
xchg
pop
jl
xor
inc
pop
adc
pop
mov
mov
mov
and
xchg
adc
mov
push
ins
mov
fild
xor
xor
inc
fs
and
sbb
cmp
push
dec
(bad)
addr16
cwde
in
pop
jnp
out
mov
cmp
cmp
sti
out
retf
sub
jns
xchg
in
cmp
jmp
fs
dec
or
stc
mov
stc
call
pop
push
jmp
sub
or
in
jmp
mov
(bad)
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
add
add
loop
sti
pop
add
add
add
add
sbb
add
js
pop
add
pop
add
inc
push
mov
mov
dec
mov
popa
pop
cmc
mov
inc
cmp
gs
pop
dec
gs
jae
jne
arpl
jb
jo
jae
dec
ins
popa
xor
ins
popa
xor
bound
inc
bound
pop
jb
ins
outs
outs
je
jo
bound
add
add
add
add
add
(bad)
cs
add
and
add
cs
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
