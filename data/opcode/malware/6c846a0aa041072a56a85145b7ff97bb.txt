sub
cmp
pop
ds
sbb
dec
xchg
es
xchg
ss
xchg
pusha
add
cmp
pop
inc
sub
or
cmp
in
cmp
bound
bound
inc
sbb
jl
cmp
pusha
dec
xchg
adc
in
dec
and
sbb
outs
js
jno
jmp
sbb
xchg
sub
sar
test
in
cmp
(bad)
fisubr
sbb
ins
int3
push
outs
adc
cmp
sbb
stos
push
pop
(bad)
(bad)
xor
mov
aas
sbb
sbb
test
xchg
xchg
adc
gs
xchg
daa
xor
xchg
sar
xchg
jg
cmc
pop
(bad)
iret
add
sbb
stc
sbb
int3
pop
call
mov
out
jge
xchg
and
into
imul
mov
sbb
dec
ins
loope
retf
dec
cmp
cs
jge
xchg
bound
pop
sbb
ins
test
stos
and
into
pop
data16
jge
and
adc
adc
pop
mov
sbb
or
mov
out
add
int3
daa
push
mov
sbb
addr16
ss
inc
cmp
sbb
imul
xor
or
popa
push
lods
xor
cmp
jno
outs
push
repnz
cld
dec
xchg
outs
dec
into
push
in
mov
push
popf
ins
retf
inc
dec
xchg
outs
dec
into
cs
shl
in
(bad)
je
mov
xchg
or
das
in
rcl
in
mov
frstor
cmc
pop
bound
inc
sbb
dec
repnz
loope
dec
adc
inc
sar
adc
inc
jo
sar
cmp
fisubr
test
add
scas
cmp
dec
push
pop
sbb
mov
push
stos
and
lods
out
sbb
inc
cdq
cmps
cmp
sbb
inc
inc
cmp
xchg
bound
xor
(bad)
mov
sbb
xor
sbb
scas
int
cdq
inc
sbb
adc
jle
pop
sbb
mov
and
bound
adc
pop
sbb
fwait
outs
sbb
sbb
cmp
sbb
cmp
jb
mov
sbb
sbb
pop
(bad)
rcl
bound
mov
sbb
cmp
sbb
sbb
lods
pop
adc
inc
cdq
cmps
and
jne
dec
mov
sbb
xchg
cmp
(bad)
sti
inc
dec
jmp
std
push
cmp
sbb
outs
adc
jmp
je
jmp
das
sbb
cmp
sbb
cmp
sbb
cmp
loop
mov
cmp
xchg
mov
cmp
fimul
(bad)
lahf
xchg
mov
sbb
mov
adc
sbb
mov
adc
sbb
lods
(bad)
adc
inc
sub
pop
sbb
mov
mov
sbb
adc
bound
mov
pop
jne
(bad)
iret
mov
in
mov
cdq
movs
sub
xchg
mov
fidivr
ins
int3
jmp
aam
dec
xor
dec
int3
loop
ror
out
jge
dec
out
jge
dec
or
sub
jo
push
inc
jo
(bad)
xor
popf
dec
dec
repnz
inc
inc
sbb
inc
in
es
inc
sbb
xor
push
clc
scas
pop
popf
dec
pop
in
sub
outs
jle
inc
in
sub
arpl
int3
fcomp
inc
inc
sbb
xor
push
clc
scas
add
inc
mov
sbb
inc
icebp
outs
mov
in
test
je
and
shl
outs
adc
loope
and
daa
les
sbb
cmp
adc
mov
adc
jbe
pop
and
push
or
mov
out
push
cmp
bound
lods
push
sbb
inc
adc
dec
sub
shl
sbb
adc
xor
xchg
pop
xor
mov
or
xchg
mov
jp
cdq
pop
int3
inc
cdq
pop
rol
mov
popf
xor
dec
icebp
pop
bound
mov
loop
ror
push
sti
push
pusha
aaa
sti
push
pop
add
out
leave
(bad)
rcr
cmp
jecxz
jge
outs
jb
add
jmp
int3
xor
jmp
mov
in
xor
(bad)
in
mov
mov
in
ror
push
test
pop
cmp
fwait
add
loop
mov
inc
inc
cmp
mov
aaa
mov
mov
mov
xor
bound
dec
jmp
sub
in
cmp
das
jmp
(bad)
int3
fsub
int3
(bad)
sahf
(bad)
mov
scas
and
into
pop
push
test
pop
cmp
fwait
add
sbb
mov
in
mov
int3
loop
enter
mov
and
lods
inc
sbb
mov
lock
(bad)
int3
fmul
int3
(bad)
sahf
(bad)
mov
jmp
mov
sbb
icebp
xchg
fst
xor
into
inc
outs
xchg
adc
fmulp
pop
sahf
mov
sub
inc
sbb
inc
dec
mov
xor
mov
xor
cli
(bad)
fadd
mov
sub
mov
add
movs
cmp
sbb
ins
int3
push
push
sbb
movs
jge
adc
jne
bound
xchg
pop
mov
pop
sahf
or
ins
bound
into
addr16
xchg
push
add
adc
mov
aas
test
jge
(bad)
xchg
mov
int3
fsub
cli
and
jbe
add
mov
dec
icebp
pop
bound
pop
sbb
jge
xchg
mov
les
inc
cmp
xchg
fst
xor
into
outs
jb
sbb
movs
jge
sub
rcr
bound
mov
sbb
iret
scas
push
jmp
cmp
xchg
cwde
adc
movs
jbe
jl
push
cmp
push
pop
pop
out
cli
jmp
or
fidivr
ins
int3
push
outs
adc
mov
xchg
call
outs
(bad)
jp
in
xor
inc
cmp
mov
add
jmp
push
sbb
and
adc
adc
mov
out
outs
adc
jbe
mov
inc
cmp
xchg
fst
dec
xor
mov
mov
in
xor
xchg
movs
push
inc
jo
push
mov
dec
popf
dec
dec
jo
push
inc
bnd
inc
sbb
rol
sbb
cmp
jmp
int3
push
push
xor
fucomp
add
push
sub
bound
mov
jmp
mov
xchg
jp
sbb
xor
xchg
jp
dec
jmp
mov
push
popf
dec
inc
xchg
jp
push
adc
xchg
inc
sbb
mov
fucomp
ds
dec
push
push
imul
inc
cmp
xchg
ffree
test
dec
jmp
cmp
push
jecxz
lahf
push
bound
(bad)
cmp
mov
inc
repnz
jge
dec
or
movs
pop
(bad)
rol
fisubr
add
(bad)
iret
mov
fst
dec
shr
xchg
daa
ror
outs
adc
fld
sbb
cmp
sbb
jge
dec
mov
xchg
mov
clc
int3
pop
xchg
test
mov
cdq
mov
fld
sbb
ds
push
ja
inc
sbb
xchg
bound
test
mov
jge
adc
js
adc
popf
(bad)
sbb
xchg
inc
pop
sbb
test
arpl
push
cmp
fidiv
dec
(bad)
add
mov
inc
icebp
pop
(bad)
(bad)
mov
cdq
inc
inc
icebp
pop
bound
in
(bad)
jp
and
xor
sahf
movs
cmp
jmp
mov
sbb
loopne
stc
jmp
popf
in
(bad)
int3
fabs
add
inc
outs
jp
fnstcw
push
(bad)
adc
jmp
ins
ret
(bad)
aas
(bad)
fwait
pop
sbb
mov
lahf
add
in
(bad)
xor
mov
aaa
sbb
inc
jb
fadd
sbb
mov
adc
in
cld
dec
daa
popf
mov
(bad)
fwait
pop
sbb
adc
bound
int3
ret
int3
(bad)
sti
mov
pop
xchg
push
add
in
and
pop
sahf
mov
shl
cmp
pop
les
out
inc
sbb
and
bound
inc
in
cmp
dec
mov
inc
in
inc
icebp
pop
bound
cmp
loope
cmp
push
mov
sbb
jge
xchg
mov
push
inc
repnz
dec
inc
sbb
mov
xor
jge
sbb
add
jmp
lods
mov
out
jge
dec
out
dec
movs
cdq
mov
int3
std
fstp
xchg
pop
xor
outs
into
and
daa
(bad)
(bad)
icebp
icebp
pop
inc
sbb
xor
movs
out
bound
sti
and
into
pop
xchg
push
js
bound
inc
xchg
daa
les
pinsrw
dec
inc
sbb
mov
adc
sbb
mov
in
lods
inc
sbb
add
imul
shld
mov
pop
outs
add
(bad)
popf
(bad)
mov
or
cmp
in
(bad)
int3
fabs
add
inc
outs
imul
adc
popf
jge
xchg
daa
int3
jl
call
cdq
inc
movs
out
bound
int3
ret
int3
lahf
mov
mov
inc
cmp
xchg
ffree
imul
adc
pusha
cmp
call
xchg
call
out
mov
adc
add
push
ins
mov
dec
rcl
sbb
inc
sbb
mov
call
xchg
xchg
adc
outs
add
inc
sbb
xor
pop
or
mov
xchg
cmp
test
pop
(bad)
rcl
bound
(bad)
fisubr
mov
push
cmp
addr16
out
bound
lods
ret
mov
cdq
pop
les
call
out
dec
adc
ss
pop
sbb
pop
icebp
pop
(bad)
add
daa
ror
loope
mov
push
imul
push
pop
retf
xor
mov
into
pop
push
inc
sub
cmp
pop
or
push
loope
mov
loop
inc
xchg
daa
xor
es
cmp
pop
(bad)
mov
sbb
inc
mov
outs
push
jne
and
lods
push
or
inc
icebp
push
mov
sbb
push
inc
jo
push
inc
jo
push
inc
sbb
sub
repnz
sbb
jge
jo
push
inc
jo
push
inc
xchg
daa
xor
fndisi(8087
lock
sbb
ror
or
enter
pop
in
xor
jne
cmp
sbb
jge
dec
or
sub
in
shr
lea
ins
sbb
xor
mov
sub
bound
inc
stos
sti
adc
pusha
cmp
dec
xor
inc
(bad)
sbb
popf
sbb
lds
inc
push
inc
sbb
mov
enter
mov
loope
(bad)
sbb
mov
cmp
mov
push
inc
repnz
mov
sbb
rcl
(bad)
mov
xchg
mov
(bad)
mov
in
push
mov
daa
(bad)
fwait
pop
sbb
(bad)
fwait
mov
sbb
sar
(bad)
mov
pop
bound
and
les
xchg
(bad)
icebp
dec
xor
sbb
mov
adc
sbb
mov
adc
daa
bound
inc
sbb
jge
adc
cmp
mov
mov
ficomp
movs
out
bound
and
les
mov
sub
in
clc
mov
loopne
mov
pop
jmp
mov
lahf
scas
(bad)
mov
pop
bound
inc
xchg
out
mov
xchg
jp
dec
jmp
mov
out
clc
dec
lahf
fistp
inc
sbb
clc
movs
popf
(bad)
mov
sbb
lds
bound
sar
push
sbb
and
enter
mov
in
popf
mov
jl
test
in
(bad)
std
push
or
inc
in
xor
repnz
rol
mov
sbb
shr
inc
adc
pushf
mov
jb
cwde
add
mov
sbb
adc
popf
(bad)
mov
mov
(bad)
mov
daa
push
mov
sbb
rcr
cmp
mov
push
inc
jb
fadd
sbb
push
aad
popf
mov
in
cmp
cmp
cmp
ffreep
mov
imul
inc
outs
push
(bad)
mov
jo
push
test
and
sub
repnz
mov
daa
popf
mov
or
clc
out
(bad)
mov
in
mov
mov
fucom
mov
sbb
inc
jb
fadd
sbb
push
dec
in
popf
mov
in
cmp
cmp
cmp
ffreep
mov
cmc
xchg
(bad)
mov
in
cmp
push
(bad)
mov
jo
push
out
and
sub
repnz
mov
daa
popf
mov
or
clc
out
(bad)
mov
in
mov
mov
fucom
mov
sbb
inc
jb
fadd
sbb
push
int
popf
mov
in
cmp
adc
mov
cmp
xor
inc
jb
fadd
sbb
push
adc
popf
mov
in
cmp
adc
mov
inc
movs
pop
bound
mov
xchg
(bad)
mov
in
cmp
es
inc
jb
fadd
sbb
test
bnd
mov
daa
popf
mov
or
pop
bound
mov
in
mov
mov
fucom
mov
sbb
clc
scas
popf
(bad)
mov
pop
adc
out
(bad)
mov
in
popa
scas
or
inc
mov
rcr
mov
inc
fsub
lds
add
inc
xchg
mov
mov
xchg
out
mov
lahf
mov
mov
in
fs
pop
sahf
xor
sbb
shl
mov
adc
cmp
jge
xchg
mov
mov
shl
mov
ret
int3
fabs
popf
xchg
in
mov
popf
cmp
les
inc
sbb
shr
bound
and
out
mov
fucom
nop
mov
sbb
ror
mov
adc
in
push
pop
fwait
mov
sbb
bound
mov
pop
bound
mov
push
pop
cmp
bound
dec
lahf
pop
cmp
sbb
mov
adc
in
push
xchg
sbb
int3
pop
sahf
mov
inc
adc
cmp
out
mov
lahf
mov
mov
in
add
pop
sahf
xor
sbb
enter
mov
(bad)
popf
(bad)
mov
dec
pop
mov
out
loopne
ret
(bad)
addr16
cmp
mov
inc
sbb
retf
mov
bound
enter
mov
repnz
(bad)
mov
dec
inc
mov
out
clc
dec
lahf
or
inc
sbb
rol
pop
bound
(bad)
mov
(bad)
(bad)
lock
(bad)
mov
sbb
mov
adc
sbb
cld
dec
cdq
(bad)
aam
in
cmp
(bad)
rcl
bound
std
enter
in
xor
lock
lds
jg
jp
xchg
out
mov
xchg
cmp
cmps
sub
fucom
test
in
cmp
out
mov
sbb
mov
scas
repnz
mov
xchg
test
mov
out
(bad)
aad
pushf
mov
mov
xchg
popf
into
cmps
mov
mov
in
adc
pop
sahf
mov
xor
les
out
inc
sbb
loopne
popf
(bad)
mov
in
(bad)
adc
sbb
mov
adc
daa
bound
inc
sbb
jge
fwait
mov
xor
sbb
shl
mov
adc
jbe
jge
xchg
mov
mov
shl
cmp
(bad)
mov
sti
arpl
inc
jo
rcl
jno
cmp
mov
sbb
sbb
cmp
lahf
rol
mov
in
(bad)
enter
mov
push
(bad)
mov
std
fstp
xchg
xlat
dec
mov
or
(bad)
push
bound
inc
jmp
popf
(bad)
mov
dec
push
mov
out
loopne
ret
(bad)
addr16
cmp
or
inc
sbb
popf
int
pushf
mov
popf
push
inc
xchg
out
mov
and
cmp
daa
les
mov
(bad)
cmps
jmp
adc
out
mov
sbb
(bad)
into
lahf
jmp
in
sbb
pop
sahf
mov
sub
les
out
inc
sbb
(bad)
cmps
add
mov
leave
bound
inc
cdq
fist
in
cmp
movs
cmp
out
mov
adc
in
shr
jmp
push
sbb
sbb
lahf
(bad)
int3
ret
int3
lahf
cmp
mov
cmps
add
mov
xchg
bound
inc
fucom
enter
cmp
bound
in
mov
out
(bad)
mov
pop
bound
mov
sbb
or
jmp
enter
mov
pop
loop
inc
sbb
ror
call
in
(bad)
enter
mov
loop
(bad)
mov
in
(bad)
adc
sbb
cld
dec
jo
mov
out
(bad)
mov
pop
bound
mov
sbb
or
jmp
(bad)
cmps
jmp
mov
xchg
fcmovne
lahf
ds
mov
lahf
out
mov
in
xor
in
mov
jl
rol
mov
in
(bad)
into
lahf
into
(bad)
mov
in
xor
lahf
mov
in
mov
in
xor
jmp
popf
mov
into
lahf
xchg
mov
in
(bad)
dec
cwde
mov
test
outs
gs
out
(bad)
mov
in
(bad)
adc
adc
test
outs
outs
mov
retf
mov
dec
push
retf
cmp
mov
jmp
cmc
in
(bad)
int3
fabs
test
outs
outs
mov
into
popf
(bad)
mov
dec
push
rol
(bad)
mov
dec
push
rol
(bad)
mov
dec
push
xchg
cmp
out
mov
sub
iret
mov
shl
(bad)
sub
jb
sub
sbb
adc
sbb
(bad)
div
adc
pop
lods
frstor
fdiv
jbe
into
xchg
pushf
mov
(bad)
movs
jge
sbb
inc
jb
cmp
mov
sbb
sbb
(bad)
iret
and
jmp
movs
xchg
pop
fmul
addr16
cmp
daa
loop
pop
sbb
xchg
icebp
dec
inc
out
(bad)
mov
pop
cmp
sbb
add
mov
jge
std
jge
sub
bound
scas
mov
jge
in
(bad)
mov
xchg
daa
enter
cmp
repz
xchg
bound
lock
xchg
call
scas
and
das
sbb
cmp
jo
push
inc
repnz
sbb
call
repnz
pop
inc
sbb
mov
into
inc
push
rcr
adc
loop
cmp
xor
pop
push
mov
sbb
out
aas
data16
sbb
test
jae
inc
cdq
inc
and
pop
bound
(bad)
aas
pop
cmps
add
bound
inc
sbb
cmp
bound
int3
shl
int3
(bad)
cmp
bound
int3
jmp
add
ins
mov
sti
jns
adc
cmp
popf
cmp
ins
mov
sbb
mov
pop
bound
inc
pop
mov
sbb
inc
outs
(bad)
jp
sub
lods
test
fadd
jmp
mov
addr16
pop
(bad)
jp
bound
lds
jp
add
and
inc
and
push
bound
mov
and
dec
mov
arpl
scas
sbb
cmp
int3
ror
int3
fisttp
mov
lahf
cmp
popf
cmp
mov
jp
add
jb
inc
sub
cmp
repz
sbb
loop
pop
test
cmp
and
aad
(bad)
jno
popf
(bad)
mov
jp
add
dec
inc
sub
cmp
mov
xor
pop
jp
add
ror
popf
(bad)
mov
jp
add
push
inc
sub
cmp
fstp
xor
dec
mov
sar
(bad)
(bad)
mov
jp
add
arpl
mov
cmp
ror
int3
fnclex
xor
inc
frstor
fcomp
cmp
(bad)
icebp
in
(bad)
mov
jp
add
pusha
dec
inc
sub
cmp
jmp
push
inc
sbb
xor
inc
frstor
fcomp
cmp
(bad)
(bad)
mov
sbb
cmp
repz
xor
add
sbb
aam
pop
bound
inc
and
jns
xchg
stos
or
add
jns
pop
mov
inc
sbb
test
fisub
inc
and
jns
repz
inc
sbb
jl
pop
bound
inc
adc
js
repz
aam
pop
bound
inc
and
jns
repz
inc
sbb
cmp
pop
pop
cmps
add
pusha
rcr
sbb
int3
rcl
int3
fndisi(8087
cmp
inc
repz
cmp
push
clc
lods
(bad)
arpl
inc
call
(bad)
jmp
sbb
sbb
enter
call
addr16
test
mov
mov
pop
bound
cmp
test
inc
mov
lds
jp
add
and
jg
addr16
icebp
pop
(bad)
movs
add
arpl
scas
aas
popf
cmp
(bad)
fistp
sbb
xor
add
repz
lock
jmp
lods
xchg
mov
jp
in
addr16
pop
bound
sahf
mov
enter
call
push
lock
fld
inc
push
jp
aas
mov
jge
adc
and
(bad)
cli
gs
in
ins
mov
in
pop
clc
inc
sbb
rcr
add
adc
js
xchg
stos
iret
movs
xchg
daa
enter
mov
in
pop
mov
dec
mov
arpl
(bad)
daa
mov
push
call
cmp
fs
add
bound
scas
daa
loop
mov
pop
sbb
pop
jp
add
loop
lea
stos
mov
xchg
xchg
jle
sbb
(bad)
pop
bound
repz
xchg
inc
xchg
daa
into
lds
cmp
mov
pop
aas
(bad)
pop
push
add
push
bnd
sbb
mov
push
bnd
nop
bound
add
popf
cmp
in
bnd
and
aad
bound
fwait
xchg
call
pusha
push
bnd
sbb
mov
push
bnd
nop
bound
pop
sbb
cmp
and
jns
and
aad
bound
in
dec
icebp
pop
bound
inc
mov
cmp
ror
leave
jle
sbb
mov
inc
cmp
xchg
fst
xor
xor
in
dec
adc
xor
fdivr
repnz
inc
sbb
(bad)
sub
dec
mov
sbb
bound
int3
loop
(bad)
pop
sahf
mov
jb
add
xor
in
inc
bound
out
std
jns
jb
add
xor
fadd
cmp
out
(bad)
jns
jb
add
xor
int3
inc
bound
out
std
jns
jb
add
xor
cmp
bound
out
ret
xchg
call
shl
aam
dec
xor
(bad)
out
push
sub
mov
mov
out
pop
sbb
jge
dec
popf
sub
sbb
inc
sbb
popf
xor
aam
xchg
daa
nop
int3
pop
xchg
inc
out
and
inc
sbb
pop
mov
sbb
(bad)
jg
cmp
sbb
pop
xchg
sbb
rcl
bound
(bad)
jg
cmp
sbb
add
arpl
inc
sbb
cmp
int3
pop
add
outs
(bad)
jp
frstor
mov
bound
int3
ret
int3
fldenv
cmp
pop
add
test
outs
mov
inc
sbb
mov
out
jge
dec
or
inc
sbb
mov
(bad)
xor
push
out
(bad)
jns
xchg
mov
mov
xchg
push
inc
xchg
daa
pushf
adc
jo
push
inc
in
fsubr
xchg
daa
cwde
adc
pop
shr
sbb
mov
(bad)
(bad)
xor
or
sbb
dec
mov
sbb
shr
bound
mov
inc
bound
mov
sbb
jge
dec
popf
dec
cmc
xchg
daa
fcom
pop
bound
std
mov
cmp
xor
xchg
ffree
idiv
add
dec
sbb
add
jge
xchg
mov
(bad)
into
pop
outs
mov
jmp
(bad)
jg
cmp
ins
test
push
or
das
sbb
jge
dec
out
jge
dec
popf
dec
mov
out
xor
in
xor
sbb
jge
icebp
push
cli
ins
fsubr
ins
mov
push
xor
loop
ror
popf
cmp
mov
in
sub
pop
bound
fnstenv
mov
cdq
mov
dec
xor
gs
in
dec
icebp
pop
bound
mov
daa
popf
cmp
pop
or
lods
cmove
popf
cmp
pop
adc
cmova
popf
cmp
pop
and
lods
cmovbe
popf
cmp
pop
sub
cmovno
popf
cmp
ins
mov
into
pop
jb
add
addr16
and
sub
fsub
mov
aam
inc
js
jp
adc
mov
cmp
cwde
jb
lods
jbe
jl
ins
mov
int3
loopne
rol
aam
push
and
mov
push
or
cli
xor
(bad)
repnz
repz
fs
xor
add
or
dec
xchg
cmp
and
adc
sbb
adc
or
push
xchg
jbe
xchg
cmps
and
pop
dec
mov
add
loope
mov
dec
jno
inc
loopne
rol
mov
add
loope
inc
xchg
daa
int3
into
pop
jb
add
cmp
cmp
dec
xchg
mov
pop
arpl
inc
sbb
(bad)
fidiv
jns
mov
pop
sbb
dec
call
mov
scas
and
lds
pop
cmp
dec
jmp
or
outs
sub
lds
fs
pop
jmp
(bad)
repnz
mov
jo
call
sbb
push
xor
pop
xchg
bound
call
ds
cs
ret
push
xchg
add
mov
fisub
inc
packsswb
inc
sbb
add
sbb
pop
int3
loop
mov
sbb
loop
inc
sbb
imul
call
mov
lods
data16
bound
inc
outs
gs
xor
aaa
sub
dec
jno
inc
loopne
rol
mov
popf
cdq
mov
pop
call
pop
arpl
(bad)
repnz
loop
sub
sbb
inc
call
mov
sbb
jno
loop
rol
pop
ds
outs
pop
mov
cdq
mov
lds
cmp
sub
rol
data16
repz
fs
outs
ins
add
xor
bound
repnz
xchg
sub
cwde
mov
push
sbb
inc
pop
jecxz
inc
push
bound
dec
cwde
aad
mov
shl
aam
dec
xor
mov
sbb
dec
dec
icebp
jle
mov
and
dec
dec
pop
jecxz
lods
sbb
xor
jecxz
lods
sbb
or
add
dec
rol
bound
sub
sbb
(bad)
fsubr
inc
outs
(bad)
jp
adc
cmp
es
aam
bound
sahf
xchg
call
in
popa
mov
sbb
inc
add
bound
mov
inc
sbb
sbb
jg
cmp
pop
sahf
mov
sbb
daa
(bad)
in
bnd
and
les
repnz
iret
push
jge
inc
add
jl
sbb
cmp
pop
call
xchg
cwde
cmp
out
out
jl
sbb
ins
mov
jb
pop
push
bnd
cdq
cdq
cmp
mov
xor
cmp
pop
call
add
mov
loop
sub
sbb
lock
add
cmp
pop
call
sbb
inc
dec
xor
repz
jb
cmps
sbb
jp
repnz
les
inc
cmp
mov
aaa
mov
mov
mov
sbb
bound
dec
mov
mov
stc
mov
and
sbb
inc
sbb
ss
popf
mov
cmp
pop
push
mov
sbb
clc
stc
mov
sub
out
stos
in
mov
pop
sbb
pop
call
xor
ins
mov
jmp
pop
cmp
inc
outs
pusha
rcr
adc
popf
(bad)
int3
(bad)
in
repnz
xchg
outs
xor
adc
imul
les
push
repz
xchg
xlat
mov
xchg
outs
xor
adc
cmp
pop
out
in
or
dec
sti
jns
repnz
lods
loope
popf
(bad)
int3
push
ja
aam
bound
mov
jmp
mov
out
pop
bound
dec
lahf
das
(bad)
mov
cmc
popf
mov
popf
mov
bound
rol
lods
mov
popf
mov
jmp
xchg
lds
mov
sbb
test
adc
(bad)
shl
jecxz
(bad)
int3
lahf
mov
cmp
into
(bad)
mov
mov
icebp
je
cmps
or
loopne
sbb
inc
xchg
out
stos
in
or
or
push
repnz
popa
inc
sbb
inc
in
arpl
mov
loop
(bad)
mov
or
jle
xchg
xlat
mov
lahf
out
mov
inc
bound
mov
sbb
popf
test
repz
cmp
or
mov
test
call
mov
out
clc
xor
popf
(bad)
mov
popf
rol
sub
cmp
jmp
cmp
scas
ffreep
stos
in
dec
dec
pop
jecxz
inc
push
bound
aaa
(bad)
jecxz
mov
adc
jb
inc
xchg
out
fwait
in
ror
fwait
mov
mov
inc
ins
aam
xor
mov
mov
lahf
mov
mov
sbb
mov
push
and
aam
in
aaa
ret
inc
popf
(bad)
mov
pop
(bad)
(bad)
lock
mov
sbb
aaa
repz
xchg
xlat
mov
xchg
jbe
mov
cmp
(bad)
xchg
xlat
mov
cmc
popf
mov
popf
stc
cmps
sbb
loope
repz
stc
movs
sbb
mov
xchg
ja
call
(bad)
mov
ret
mov
cmp
sahf
cmp
lahf
xchg
xlat
mov
cmc
popf
mov
popf
cmp
lds
bound
jb
test
sbb
mov
mov
mov
cmp
jmp
fld
popf
mov
xchg
out
fwait
in
mov
mov
mul
xchg
popa
cmp
lahf
mul
mov
les
out
in
cmp
lahf
repnz
in
mov
into
lahf
mov
mov
lds
mov
adc
in
rol
lahf
mov
mov
lds
mov
int3
lahf
(bad)
out
in
mov
lds
bound
jb
cmp
or
into
(bad)
(bad)
out
in
ror
jmp
mov
not
in
dec
icebp
pop
bound
repz
xchg
xlat
mov
xchg
out
in
in
adc
into
mov
sub
dec
lods
test
cmps
sbb
sub
cmp
js
xchg
test
inc
or
pop
repnz
outs
inc
sbb
mov
dec
fisubr
and
addr16
dec
sahf
pop
cmp
jmp
(bad)
dec
lods
bound
xor
ins
mov
lods
add
inc
xchg
out
stos
in
mov
pop
arpl
inc
sbb
sar
xchg
out
call
(bad)
mov
lds
fcomp
push
loop
inc
outs
dec
mov
cdq
mov
lds
bound
xchg
xchg
mov
inc
outs
jbe
mov
mov
xchg
xchg
mov
inc
outs
imul
popf
cmp
dec
lods
neg
cmps
sbb
mov
mov
fwait
fwait
in
cmp
fs
xor
cmp
sbb
inc
cdq
mov
enter
int3
lahf
xchg
mov
in
mov
into
lahf
xchg
xlat
mov
jmp
clc
(bad)
mov
mov
mov
mov
cmp
cmps
ja
lahf
in
inc
loop
js
bound
inc
sbb
adc
es
cmp
bound
xor
add
sbb
inc
sbb
sub
es
cmp
sbb
xor
loop
js
bound
inc
sbb
cmp
icebp
stos
aaa
repz
shl
in
clc
cmp
push
and
lods
out
stos
in
push
mov
lds
(bad)
mov
cmps
and
pop
cdq
(bad)
int3
stos
in
cmp
(bad)
xchg
xlat
mov
xchg
mov
fld
das
(bad)
into
sahf
ja
call
mov
les
bound
pop
push
mov
sbb
mov
mov
jmp
mov
out
pop
bound
dec
lahf
dec
ret
mov
shl
aam
dec
xor
into
inc
push
add
movs
and
cmp
pop
cmp
daa
mov
test
sbb
sub
(bad)
retf
loope
xadd
cmp
addr16
jo
fistp
mov
xchg
pushf
enter
jo
fistp
mov
xchg
pushf
lds
add
jge
xchg
cmp
daa
mov
mov
adc
es
add
ror
daa
iret
inc
call
ins
add
mov
call
fsub
into
inc
repz
sbb
cmp
aaa
into
jg
ja
dec
lahf
in
cmp
loop
mov
sbb
inc
sbb
sub
arpl
int3
dec
call
sbb
(bad)
loop
dec
inc
call
inc
xchg
mov
ret
push
xor
loop
inc
inc
call
inc
in
and
test
mov
inc
outs
mov
popa
aaa
repz
arpl
js
bound
inc
outs
mov
data16
loop
cli
ins
fsubr
ins
mov
in
bound
inc
outs
push
dec
inc
call
inc
call
mov
out
(bad)
push
nop
popa
aaa
repz
xchg
add
shrd
daa
mov
mov
mov
fsub
int3
dec
call
sbb
inc
call
mov
fnstenv
mov
dec
xor
dec
jmp
out
xor
push
cmps
xchg
daa
(bad)
int3
(bad)
mov
mov
sbb
mov
stos
mov
icebp
ins
mov
inc
fsub
cmove
mov
or
jmp
mov
jmp
mov
inc
stos
sti
adc
bound
lods
bound
cmp
xor
and
in
cmp
xchg
out
call
xor
in
xor
lahf
(bad)
fdivr
dec
bound
enter
mov
sbb
(bad)
fidiv
mov
call
shl
xchg
in
aam
inc
sbb
cmp
sbb
shl
mov
aam
dec
xor
cli
mov
movs
pop
or
bound
jb
cmp
or
das
sbb
cmp
in
xor
xchg
movs
mov
(bad)
outs
cmp
sbb
jge
cdq
inc
cmp
pop
int3
loop
(bad)
pop
xchg
mov
jo
outs
lods
inc
xor
inc
xchg
mov
push
add
sbb
jge
mov
xchg
(bad)
pop
xchg
mov
jo
mov
dec
xchg
daa
xor
pop
xchg
rol
daa
ror
xchg
(bad)
xor
xor
xor
xor
push
dec
bound
adc
push
imul
fs
inc
inc
cmp
mov
aaa
mov
cdq
mov
dec
xor
jg
loop
ror
or
sub
jo
push
inc
jo
push
inc
sbb
mov
dec
bound
int3
fsub
(bad)
mov
icebp
add
mov
jmp
mov
jo
push
inc
dec
mov
adc
bound
(bad)
rcr
cmp
jecxz
sti
das
sbb
ins
mov
push
xor
push
dec
bound
das
sbb
jge
dec
or
sub
dec
mov
adc
bound
xchg
cmp
call
pop
xchg
mov
mov
cmp
ins
int3
push
push
push
push
pop
mov
sub
push
lds
bound
das
push
or
das
sbb
cmp
mov
push
adc
bound
xor
push
clc
scas
and
shl
movs
push
inc
jo
push
inc
dec
mov
adc
bound
xchg
daa
les
outs
outs
outs
lods
sahf
xor
inc
dec
mov
adc
pop
mov
int3
loop
ror
cmp
mov
dec
xor
xchg
pop
xor
pop
dec
mov
inc
sbb
int3
lds
push
inc
fldenv
int3
into
pop
sahf
mov
sbb
(bad)
xor
or
pop
(bad)
shl
dec
bound
sub
repnz
imul
cld
push
sub
cmp
dec
or
ror
cmp
fisubr
jle
outs
inc
lods
sub
push
inc
outs
data16
dec
jg
outs
inc
mov
daa
(bad)
int3
fsub
int3
dec
sahf
outs
sub
repnz
sbb
cld
dec
inc
cmp
mov
aaa
mov
dec
xor
xchg
aas
xor
outs
outs
inc
out
jle
xor
jge
mov
pop
fadd
sbb
popa
je
mov
dec
lods
add
sbb
mov
mov
mov
cli
and
lods
or
cmp
jmp
adc
inc
cmp
xchg
ffree
test
dec
fnstenv
popf
xor
jge
sbb
and
bound
and
bound
fisub
bound
inc
jmp
mov
sub
pop
sbb
inc
xchg
daa
xor
and
int
popf
shr
rcl
sbb
mov
adc
aam
inc
jmp
clc
pop
sbb
aam
addr16
cmp
push
loope
test
xor
lds
cmp
addr16
cmp
shr
jge
adc
daa
(bad)
scas
cmp
sti
mov
daa
(bad)
dec
lods
es
inc
pop
mov
inc
cdq
(bad)
inc
call
inc
outs
mov
popf
sbb
xor
lods
bound
push
xor
cmp
aad
cmps
adc
xchg
outs
pop
mov
repnz
or
xchg
daa
in
pop
xchg
add
adc
mov
repnz
xor
fsub
mov
sbb
add
ins
pop
adc
mov
add
jmp
arpl
repnz
sbb
inc
mov
ins
retf
pop
bound
cmp
repnz
xor
test
mov
aad
repnz
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
ret
aad
pop
loop
mov
test
sbb
jp
mov
call
cld
lock
jae
out
aad
repnz
push
repnz
mov
aad
repnz
fisub
aad
pop
loopne
mov
test
div
test
mov
test
mov
test
repz
mov
mov
test
jge
cmp
bound
mov
test
pop
call
and
aad
jp
aad
repnz
push
repnz
xchg
xor
aad
repnz
repnz
cdq
mov
add
data16
test
repnz
cdq
pop
cmp
mov
dec
lea
repnz
mov
pop
lods
test
jb
inc
dec
in
js
adc
les
sbb
jp
retf
inc
lock
jae
add
std
sbb
inc
mov
cmp
mov
test
mov
test
mov
rol
test
dec
repnz
mov
ins
retf
pop
bound
aad
dec
stc
aad
repnz
enter
mov
test
mov
test
shl
test
mov
test
mov
test
mov
test
mov
test
adc
les
mov
aad
repnz
loop
test
mov
test
sbb
jp
mov
rol
test
dec
repnz
mov
call
int3
ret
repnz
mov
aad
repnz
enter
mov
test
mov
test
shl
test
mov
test
mov
test
mov
test
mov
test
lock
jae
push
or
mov
test
loop
test
mov
test
mov
test
mov
mov
dec
xor
jge
jl
jge
frstor
les
addr16
pop
sahf
mov
imul
jge
in
pop
aam
pop
xchg
int3
pop
xor
xchg
daa
loopne
pop
sahf
pop
sbb
inc
xrelease
inc
sbb
xchg
sbb
and
jmp
xchg
xchg
daa
(bad)
int3
ret
adc
in
mov
xchg
aaa
ret
lds
cmp
sbb
jge
sbb
cmp
daa
call
inc
movs
cmp
ins
mov
loope
shr
mov
retf
mov
loopne
cmp
adc
es
cmp
adc
test
push
adc
cmp
sbb
sub
ret
add
lods
das
ret
jmp
sub
xor
xchg
daa
retf
test
sbb
add
xor
enter
repz
cwde
cmp
sbb
inc
xchg
daa
retf
mov
mov
sbb
cmp
(bad)
iret
and
jmp
mov
fs
mov
pop
outs
jo
fsubr
dec
in
(bad)
sbb
xchg
ffree
not
adc
xchg
push
adc
mov
repnz
jbe
sbb
xor
int3
fist
ret
fwait
daa
ins
shr
call
adc
loope
and
push
cmp
out
jge
dec
popf
dec
dec
repnz
sar
mov
and
repz
stc
mov
mov
jp
xor
in
cmps
and
int3
int
mov
repnz
stc
mov
mov
jp
xchg
mov
jp
dec
mov
or
bound
jo
mov
sbb
clc
pop
bound
add
xor
lods
push
bound
(bad)
fidivr
lea
sahf
rcl
movs
add
popf
sbb
(bad)
into
lss
(bad)
pop
sahf
cmp
rcr
jp
sbb
clc
pop
bound
add
adc
in
fistp
xchg
daa
shr
call
sub
add
cwd
xchg
cmps
and
inc
pop
mov
jge
push
bound
int3
pop
mov
cmp
addr16
cli
dec
lods
mov
cmps
or
int3
daa
mov
pop
sbb
mov
ret
or
bound
mov
enter
adc
jp
fwait
mov
add
sbb
loopne
pop
mov
rcr
bound
(bad)
fisubr
lea
xchg
rcl
movs
test
sbb
popf
sbb
int3
into
lss
(bad)
pop
xchg
cmp
rcr
jp
sbb
clc
pop
bound
add
adc
in
fistp
xchg
daa
enter
enter
dec
ret
mov
ja
clc
pop
bound
push
cdq
daa
enter
test
sbb
popf
cmps
and
jl
xchg
dec
pushf
xchg
mov
jp
adc
xor
sbb
xor
int3
push
pop
mov
sbb
clc
pop
bound
repz
(bad)
jmp
mov
pop
mov
xor
call
sub
jp
mov
test
dec
lods
daa
rcl
(bad)
jp
dec
mov
adc
or
das
sbb
cmp
in
xor
xchg
daa
fsubr
sbb
jge
dec
popf
dec
movs
dec
popf
dec
mov
sbb
enter
jge
xchg
movs
(bad)
xor
mov
sbb
lods
loop
cmp
mov
icebp
xchg
ffree
idiv
inc
sbb
outs
adc
enter
mov
int3
fsub
cmp
out
sbb
enter
pop
sbb
xchg
jp
(bad)
iret
mov
in
mov
repnz
jae
sbb
jmp
js
imul
loopne
stc
mov
retf
sbb
lods
mov
in
inc
pop
inc
sbb
lods
fisubr
cmp
aam
mov
or
mov
in
mov
mov
xor
cli
(bad)
fadd
mov
daa
popf
(bad)
mov
sbb
jge
es
mov
out
mov
xchg
sub
inc
xchg
mov
sbb
inc
sbb
(bad)
mov
in
(bad)
adc
sbb
int
pop
bound
mov
sbb
mov
xchg
mov
jo
push
inc
jo
push
inc
jo
push
inc
sbb
enter
mov
push
bound
int3
lahf
xchg
lds
jmp
int
and
adc
sbb
cmp
lahf
xchg
lds
add
sub
in
int3
mov
push
bound
mov
in
into
add
(bad)
mov
or
call
(bad)
mov
sbb
xor
cmp
out
mov
(bad)
mov
(bad)
mov
sbb
vsubss
inc
sbb
cmp
jb
out
sbb
mov
adc
call
sub
jb
out
sbb
cmp
loop
dec
sbb
(bad)
fidiv
sbb
sti
adc
xor
into
outs
jbe
arpl
and
loop
ror
popf
cmp
(bad)
(bad)
inc
sbb
pop
mov
dec
out
jge
dec
or
sub
jo
push
inc
jo
(bad)
xor
popf
dec
dec
repnz
leave
(bad)
rcr
cmp
jecxz
jge
xchg
call
loop
push
inc
jo
(bad)
xor
popf
dec
mov
sbb
jno
sbb
ins
int3
push
inc
int3
loop
ror
popf
dec
push
repnz
sbb
cmp
outs
jb
xor
popf
dec
dec
repnz
cmp
loope
pop
inc
aas
sti
adc
sub
xor
call
jo
mov
push
xor
xor
popf
dec
dec
in
xor
cdq
cmps
and
inc
mov
push
enter
xchg
adc
call
sbb
ds
sbb
inc
jo
push
inc
in
xor
outs
push
loopne
bound
dec
ficom
cmp
fimul
(bad)
xor
popf
dec
pop
jo
(bad)
xor
popf
dec
mov
sbb
xor
popf
dec
mov
sbb
scas
or
xlat
lds
cmp
push
bound
je
and
fnstenv
mov
cdq
mov
dec
jmp
and
xchg
daa
and
in
daa
inc
and
sbb
inc
push
bound
mov
jmp
mov
movs
inc
out
jge
dec
or
inc
sbb
inc
in
xor
outs
push
jl
bound
dec
ficom
cmp
fimul
push
inc
in
sub
push
bound
dec
ficom
xor
outs
sahf
rol
bound
je
mov
std
aaa
and
inc
in
test
mov
pop
bound
dec
lods
daa
and
inc
stos
sti
adc
xor
js
loop
ror
loope
mov
outs
inc
ror
pop
bound
adc
sbb
jge
mov
pop
jge
outs
dec
mov
sbb
js
and
cmp
jo
push
inc
jo
push
and
and
lods
mov
sahf
in
pop
sbb
xor
push
clc
scas
push
jmp
inc
loop
(bad)
mov
sbb
mov
out
mov
fist
sar
lea
stos
mov
xchg
es
xchg
ja
call
ins
int3
push
push
xor
jmp
les
test
pop
sahf
mov
xor
out
das
loop
jnp
pop
push
int3
loop
loopne
xchg
xchg
cmp
repnz
sbb
cld
dec
xchg
call
push
pusha
cmp
pop
sahf
xchg
sbb
mov
push
bound
adc
push
inc
outs
inc
mov
push
loop
inc
adc
and
pop
jb
inc
sbb
not
(bad)
iret
and
jmp
mov
ret
jp
xchg
cmp
sbb
sbb
cmp
and
adc
fisub
cmp
daa
(bad)
int3
fcom
int3
dec
sahf
mov
sbb
rol
daa
(bad)
out
bound
sbb
xchg
ffree
div
adc
gs
movs
mov
enter
(bad)
push
repnz
jl
sbb
jge
xchg
movs
jmp
adc
rol
xchg
mov
inc
sub
jbe
xchg
dec
dec
ficom
xor
or
jmp
xor
adc
and
daa
mov
jo
lods
pop
(bad)
dec
lods
pop
add
loop
and
bound
(bad)
fadd
outs
int3
loop
and
bound
mov
mov
enter
jmp
or
pop
bound
cmps
and
inc
cdq
cmps
sub
in
(bad)
dec
lods
daa
(bad)
jle
call
inc
cmp
xchg
(bad)
push
bound
inc
repnz
sbb
outs
adc
into
lock
cmp
mov
bound
mov
jmp
mov
push
mov
adc
pop
aas
je
mov
clc
loop
(bad)
mov
repnz
sbb
lods
cmp
pop
sub
xchg
and
inc
xchg
out
mov
sbb
mov
call
in
(bad)
into
cmps
mov
test
xchg
imul
mov
and
inc
sbb
jp
sbb
mov
std
jns
cmp
test
mov
adc
cmp
sbb
test
bound
int3
jmp
dec
xchg
out
mov
cdq
stos
mov
jo
mov
(bad)
popf
lds
fs
(bad)
mov
dec
mov
xor
cdq
cmps
xor
in
les
pop
bound
(bad)
fisubr
sub
cmp
adc
inc
adc
push
jb
fadd
sbb
(bad)
lods
xchg
daa
cmp
cmps
xor
mov
sti
iret
mov
cmp
and
in
fwait
push
cmps
sahf
(bad)
mov
lds
cmp
repnz
jge
sbb
cld
push
mov
xchg
fmulp
lahf
stos
(bad)
mov
push
daa
cmp
push
iret
mov
or
enter
(bad)
lock
(bad)
mov
sbb
cld
dec
jb
out
sbb
(bad)
lods
or
cmp
cmps
xor
mov
sti
iret
mov
or
enter
(bad)
lock
(bad)
mov
sbb
cld
dec
xchg
xchg
iret
mov
out
mov
repnz
jl
sbb
xor
bound
inc
addr16
ror
pop
bound
cld
jns
cmp
xchg
rcl
ffreep
mov
and
jp
dec
mov
or
jo
pop
sbb
mov
adc
sbb
shr
bound
(bad)
fidiv
or
bound
cld
adc
inc
adc
push
jb
fadd
sbb
(bad)
lods
jb
cmp
cmps
xor
in
les
pop
bound
(bad)
fisubr
mov
xchg
mov
repnz
bound
inc
addr16
mov
and
mov
in
adc
sbb
adc
(bad)
(bad)
lock
(bad)
mov
sbb
cld
dec
repnz
inc
sbb
xor
bound
inc
addr16
rol
bound
inc
adc
mov
and
jp
dec
mov
or
bound
lods
and
inc
mov
sti
iret
mov
pop
bound
mov
sbb
rol
lds
xchg
out
mov
retf
inc
dec
mov
sbb
cmp
bound
fsubr
fwait
mov
lods
push
and
inc
mov
sti
iret
mov
in
(bad)
adc
out
sbb
cmp
fidiv
pusha
pop
bound
cld
adc
inc
adc
push
jb
fadd
sbb
(bad)
lods
pop
and
inc
cdq
cmps
xor
in
aaa
addr16
sbb
or
fwait
mov
sub
in
les
pop
bound
(bad)
fisubr
nop
pop
bound
cld
adc
inc
adc
push
jb
fadd
sbb
(bad)
lods
out
and
inc
cdq
cmps
xor
in
sub
lahf
sahf
(bad)
mov
les
cmp
sbb
cld
push
repnz
jp
sbb
xor
bound
inc
addr16
mov
and
mov
in
mov
sbb
adc
(bad)
iret
mov
out
mov
repnz
xor
bound
inc
addr16
mov
and
mov
in
inc
pop
sbb
adc
bound
fsubr
fwait
mov
lods
xor
cmp
add
inc
sbb
iret
mov
in
(bad)
adc
out
sbb
cmp
fidiv
cmp
bound
shr
inc
cdq
mov
fsub
cmp
popf
cmp
hlt
cmp
sbb
popf
std
in
mov
popf
lds
out
add
loop
(bad)
mov
cmps
popf
lds
out
aaa
repz
mov
mov
sti
iret
mov
xchg
call
push
mov
or
cmp
sbb
lods
icebp
in
(bad)
int3
int
jmp
popf
(bad)
adc
out
sbb
test
popf
(bad)
adc
in
jns
sbb
cld
push
xchg
xchg
adc
mov
fild
inc
sbb
(bad)
pusha
popf
(bad)
mov
in
(bad)
xor
out
mov
adc
in
push
inc
dec
mov
sbb
add
bound
fsubr
fwait
mov
sub
in
les
pop
bound
(bad)
fisubr
mov
xchg
mov
repnz
jns
sbb
xor
bound
inc
addr16
mov
and
mov
in
sbb
bound
add
sbb
fsubr
fwait
mov
sub
in
les
pop
bound
(bad)
fisubr
shl
cmp
out
mov
loop
(bad)
mov
out
aaa
(bad)
mov
(bad)
mov
out
mov
sbb
cmp
jmp
sar
bound
lds
bound
rcl
inc
xchg
xchg
adc
push
cmp
add
loop
(bad)
mov
sbb
shl
(bad)
mov
out
(bad)
xor
or
pop
bound
mov
sbb
adc
lahf
mov
arpl
xor
jmp
and
popf
mov
inc
xchg
out
inc
in
push
mov
pop
xchg
(bad)
mov
and
enter
mov
loop
mov
jmp
mov
add
(bad)
into
lahf
sahf
(bad)
mov
les
cmp
sbb
cld
pop
mov
xchg
fmulp
lahf
fcmovb
mov
in
(bad)
int3
fmul
or
fwait
mov
sub
in
les
and
push
les
bound
inc
adc
push
jb
out
sbb
(bad)
lods
mov
cmps
xor
mov
sti
iret
mov
or
enter
(bad)
lock
(bad)
mov
sbb
cld
dec
in
enter
shr
pop
addr16
sbb
(bad)
enter
mov
loop
(bad)
mov
in
mov
mov
fisubr
shl
(bad)
sub
in
les
and
push
lods
and
cmp
adc
inc
adc
push
jb
out
sbb
(bad)
lods
adc
inc
cdq
cmps
xor
mov
sti
iret
mov
or
repz
pop
(bad)
(bad)
lock
(bad)
mov
sbb
cld
dec
xchg
xchg
adc
and
cmp
adc
inc
adc
push
jb
fadd
sbb
(bad)
lods
mov
cmps
xor
in
les
and
cmp
fisubr
and
bound
cld
adc
inc
adc
repnz
sbb
pop
inc
sbb
mov
xor
mov
pop
bound
push
pop
cmp
cmps
sub
mov
sti
iret
mov
or
gs
pop
(bad)
(bad)
lock
(bad)
mov
sbb
cld
dec
fwait
mov
(bad)
rol
cmp
adc
inc
adc
push
jb
out
sbb
(bad)
lods
cmp
cdq
cmps
xor
mov
sti
iret
mov
or
enter
(bad)
lock
(bad)
mov
sbb
cld
dec
repnz
inc
sbb
xor
bound
inc
addr16
shl
daa
bound
cld
jns
cmp
xchg
rcl
ffreep
mov
and
jp
dec
mov
or
(bad)
(bad)
lock
(bad)
mov
sbb
cld
dec
xchg
xchg
iret
mov
out
mov
repnz
inc
sbb
mov
loope
inc
addr16
mov
and
mov
in
mov
adc
(bad)
(bad)
lock
(bad)
mov
sbb
cld
dec
repnz
add
inc
sbb
mov
loope
inc
addr16
mov
and
mov
in
jb
sbb
adc
(bad)
(bad)
lock
(bad)
mov
sbb
cld
dec
xchg
xchg
adc
bound
cld
adc
inc
adc
push
jb
fadd
sbb
(bad)
lods
push
pop
cmp
cmps
xor
lahf
mov
mov
out
(bad)
mov
pop
bound
(bad)
pop
cmp
cmps
sub
mov
sti
iret
mov
or
enter
(bad)
lock
(bad)
mov
sbb
cld
dec
xchg
xchg
adc
les
cmp
in
mov
bound
jns
bound
fsubr
fwait
mov
sub
in
les
bound
(bad)
fisubr
or
bound
cld
repnz
cmp
xchg
ror
jecxz
push
cmp
ffreep
mov
repnz
push
jns
bound
jns
bound
fsubr
fwait
mov
sub
in
les
bound
(bad)
fisubr
fwait
(bad)
and
mov
in
adc
bound
ins
jmp
inc
mov
sti
iret
mov
or
enter
(bad)
lock
(bad)
mov
sbb
cld
dec
repnz
inc
sbb
xor
bound
inc
addr16
shr
and
cld
jns
cmp
xchg
rcl
ffreep
mov
and
jp
dec
mov
or
(bad)
(bad)
lock
(bad)
mov
sbb
cld
dec
jo
push
inc
jo
push
inc
jo
push
inc
sbb
mov
and
int3
lahf
mov
mov
sbb
mov
in
mov
bound
xchg
(bad)
mov
in
les
repnz
lds
sbb
(bad)
lods
xor
inc
in
les
sub
xchg
fmulp
lahf
fcmovb
mov
repnz
inc
sbb
mov
sbb
xchg
ffree
mul
inc
sbb
push
int3
loop
ror
movs
jge
sbb
inc
inc
sbb
add
xor
(bad)
and
enter
mov
and
das
sbb
mov
shl
(bad)
mov
sbb
shl
fidivr
add
arpl
aaa
movs
or
sub
jb
in
sbb
cmp
loop
stc
jmp
inc
jb
in
sbb
rcr
sbb
lods
push
cmps
sbb
loop
ror
cmp
ffree
idiv
cmp
xor
movs
jecxz
outs
and
xor
mov
in
mov
cdq
(bad)
movs
mov
pop
push
jge
ins
lods
test
repnz
xchg
cmp
bound
int3
lahf
out
lds
loop
push
jge
xchg
movs
mov
xor
bound
into
dec
push
adc
addr16
pop
lds
sub
sbb
mov
out
(bad)
lods
push
push
cmp
aaa
xor
xchg
sbb
mov
pop
out
ins
inc
sbb
mov
sbb
mov
xor
inc
xchg
out
mov
mov
jne
inc
sbb
mov
mov
in
ds
bound
xor
popf
(bad)
enter
into
xchg
adc
mov
sbb
ins
inc
sbb
mov
xchg
lahf
(bad)
mov
sbb
mov
mov
push
inc
xchg
out
mov
cs
cmp
call
das
bound
adc
sbb
cmp
sbb
shr
xchg
cdq
pop
bound
(bad)
and
sub
repnz
adc
jmp
or
inc
sbb
push
inc
sbb
enter
mov
scas
lahf
(bad)
mov
sbb
lock
test
in
(bad)
lock
lahf
(bad)
mov
in
(bad)
lock
mov
lahf
(bad)
lds
call
inc
mov
xchg
dec
dec
dec
mov
sbb
test
pusha
cmp
or
shl
(bad)
mov
sbb
mov
xchg
out
mov
lahf
sahf
(bad)
mov
and
lods
int
(bad)
mov
in
mov
inc
jo
push
inc
xchg
out
mov
es
cmp
cmps
and
lahf
fcmovb
mov
sbb
push
adc
(bad)
iret
mov
in
mov
fucom
fdivr
sbb
sbb
cmp
cmps
out
mov
jl
mov
inc
sbb
xlat
jns
bound
enter
mov
cmc
popf
(bad)
sbb
out
mov
lahf
fcmovb
mov
jo
push
gs
push
inc
jo
mov
out
(bad)
mov
push
push
cmp
mov
cmp
xlat
nop
mov
sub
(bad)
cmc
sti
and
popf
(bad)
shl
popf
(bad)
sub
jb
in
sbb
mov
adc
sbb
cld
push
fsub
push
mov
xor
shr
enter
mov
(bad)
and
lods
pop
push
cmp
mov
push
lods
sbb
lods
xchg
push
cmp
out
mov
lahf
or
mov
shr
xor
cmp
bound
(bad)
cmps
repnz
jb
enter
outs
jno
bound
mov
jmp
and
popf
(bad)
int3
fisttp
cmp
sbb
shl
(bad)
mov
bound
das
sbb
push
cdq
pop
bound
mov
in
mov
mov
cdq
(bad)
movs
mov
loop
ror
mov
(bad)
mov
bound
inc
icebp
gs
mov
out
(bad)
adc
sbb
xlat
and
repnz
inc
sbb
cmp
in
loop
sbb
lock
(bad)
inc
sbb
mov
scas
sbb
shl
sbb
xchg
bound
jmp
aam
dec
xor
into
inc
jbe
fs
and
loop
(bad)
pop
xchg
mov
sub
xor
xchg
mov
(bad)
xor
mov
jbe
bound
mov
(bad)
push
cmp
mov
imul
mov
mov
inc
adc
aad
mov
dec
xchg
cmp
xchg
sub
or
lods
into
push
cmp
movs
or
adc
mov
mov
xchg
daa
and
repnz
inc
sbb
cld
dec
in
xor
jmp
je
(bad)
(bad)
xor
ins
pop
in
jl
pop
and
pop
push
cmp
pop
sub
daa
(bad)
enter
dec
lods
aaa
(bad)
enter
adc
sbb
rol
push
adc
es
adc
mov
repnz
xchg
mov
or
lods
push
push
cmp
daa
rcl
xor
jo
push
inc
bnd
inc
sbb
dec
loop
ror
or
adc
(bad)
inc
sbb
jge
dec
xor
or
bound
adc
adc
inc
sbb
jge
inc
cmp
mov
aaa
mov
mov
mov
adc
gs
movs
(bad)
aaa
sbb
loop
inc
in
daa
inc
sbb
iret
shl
enter
mov
fiadd
pop
cdq
pop
(bad)
shl
fsubr
dec
sahf
sti
cmp
jmp
je
jmp
push
in
cld
movs
in
shl
bound
(bad)
fisubr
test
(bad)
lock
xor
dec
push
cmp
shl
xchg
(bad)
lahf
fcmovu
mov
fisub
rcr
fucom
test
sbb
shl
mov
adc
sbb
test
mov
inc
dec
popf
lea
dec
push
cmp
cmps
xor
daa
mov
in
dec
dec
repnz
pop
inc
sbb
shl
popf
(bad)
int3
fst
add
sub
sti
adc
bound
lods
mov
cmp
xor
into
inc
push
push
cmp
push
std
fsubr
cmp
test
mov
xchg
movs
imul
or
inc
sbb
loope
rcr
cmp
jecxz
jmp
adc
loop
loopne
ror
popf
mov
lds
cmp
repnz
cld
dec
mov
xchg
fmulp
lahf
xchg
out
in
mov
int3
fsubr
enter
(bad)
sub
xchg
out
movs
in
push
inc
cdq
cmps
xor
mov
sti
iret
mov
push
or
movs
pop
bound
mov
sbb
adc
bound
lods
mov
push
iret
mov
xor
and
in
fwait
push
cmps
(bad)
fdivr
(bad)
and
enter
mov
sub
(bad)
fidiv
cmp
bound
cld
adc
inc
adc
push
jb
fadd
sbb
mov
adc
sbb
cld
dec
jb
out
sbb
mov
adc
sbb
cld
dec
xchg
xchg
iret
mov
in
mov
repnz
or
(bad)
inc
sbb
mov
loope
inc
addr16
mov
and
enter
mov
sub
(bad)
fisubr
push
sub
cld
adc
inc
adc
ins
repnz
or
fistp
sbb
mov
xor
mov
pop
bound
mov
sbb
or
jo
pop
sbb
mov
adc
sbb
mov
adc
sbb
cld
push
repnz
inc
sbb
xor
bound
inc
addr16
mov
and
enter
mov
sub
(bad)
fisubr
dec
lds
cmp
lahf
(bad)
fdivr
sub
(bad)
fisubr
mov
xor
inc
repnz
inc
sbb
xor
bound
inc
addr16
mov
and
enter
mov
sub
(bad)
fisubr
inc
lds
cmp
lahf
(bad)
fdivr
sub
(bad)
fisubr
jl
bound
cld
adc
inc
adc
ins
repnz
or
fistp
sbb
mov
xor
mov
pop
bound
mov
sbb
or
bound
mov
sbb
adc
bound
fsubr
fwait
mov
sub
xchg
out
movs
in
push
inc
cdq
cmps
xor
jmp
cdq
pop
bound
mov
sbb
adc
bound
fsubr
fwait
mov
sub
xchg
out
movs
in
push
inc
cdq
cmps
xor
xchg
out
movs
in
push
inc
cdq
cmps
xor
mov
sti
iret
mov
push
or
movs
pop
bound
mov
sbb
adc
bound
mov
sbb
push
cdq
pop
bound
mov
sbb
or
bound
fsubr
fwait
mov
sub
xchg
out
movs
in
push
inc
cdq
cmps
xor
xchg
out
movs
in
push
inc
cdq
cmps
xor
ret
inc
in
test
mov
sub
cld
adc
inc
adc
push
jb
fadd
sbb
mov
adc
sbb
cld
dec
repnz
inc
sbb
rol
bound
(bad)
fnsave
inc
sbb
(bad)
mov
pop
bound
mov
sbb
or
bound
fsubr
fwait
mov
sub
xchg
out
movs
in
push
inc
cdq
cmps
xor
xchg
out
movs
in
push
inc
cdq
cmps
xor
in
pop
push
inc
sbb
or
fwait
mov
sub
xchg
out
movs
in
push
inc
cdq
cmps
xor
mov
sti
iret
mov
xor
and
in
fwait
push
cmps
(bad)
fdivr
(bad)
and
enter
mov
sub
(bad)
fidiv
xchg
(bad)
and
enter
mov
sub
(bad)
fisubr
inc
jo
push
inc
jo
push
inc
jb
cmp
xor
aam
bound
int3
lahf
sahf
out
in
inc
pusha
bound
enter
mov
aaa
bound
das
sbb
test
dec
out
test
popf
(bad)
adc
xlat
les
bound
mov
in
mov
test
xor
jmp
mov
inc
cmp
xchg
ffree
imul
cmp
sbb
outs
adc
jmp
ins
loop
inc
mov
bound
mov
xchg
movs
sbb
sbb
xor
in
bound
into
dec
push
adc
arpl
mov
sbb
ret
mov
dec
dec
cmp
mov
push
(bad)
rcl
popf
(bad)
sub
repnz
inc
sbb
mov
das
or
cmp
lahf
mov
in
ror
push
arpl
inc
xchg
out
mov
mov
jp
jb
in
sbb
cmp
loop
out
popf
mov
adc
bound
sbb
enter
mov
scas
lahf
(bad)
mov
sbb
imul
mov
int3
fstp
(bad)
push
xchg
out
mov
or
xor
fisubr
cmp
mov
out
mov
mov
cmp
out
mov
lahf
sahf
(bad)
mov
xor
cmp
xchg
out
mov
xor
push
inc
xchg
out
mov
add
cdq
cmps
and
loop
ror
movs
mov
add
bound
sbb
cmp
loope
fucom
popf
mov
mov
mov
loop
ror
out
mov
adc
in
mov
mov
out
mov
adc
jo
push
inc
jo
push
inc
xchg
out
mov
sbb
xor
sbb
lock
(bad)
mov
sbb
push
jnp
(bad)
iret
mov
in
mov
in
cwde
mov
lds
cmp
xchg
out
mov
mov
cmp
cmps
sub
in
shr
movs
xor
shl
(bad)
mov
pop
(bad)
shl
bound
int3
fsubr
xor
or
inc
sbb
sub
bound
lds
arpl
mov
adc
inc
jb
enter
jb
sbb
inc
sbb
enter
mov
ror
inc
xchg
call
jb
in
sbb
mov
adc
in
cld
dec
daa
popf
mov
bound
enter
mov
mov
xor
mov
das
sbb
(bad)
enter
mov
xor
enter
mov
mov
out
mov
in
fist
inc
sbb
(bad)
lods
pop
dec
cmp
imul
outs
sbb
sub
dec
mov
imul
imul
xor
xor
xor
into
xchg
lds
dec
jmp
inc
jmp
lahf
(bad)
mov
in
cld
dec
icebp
inc
mov
xchg
or
out
(bad)
lods
int3
mov
mov
loop
(bad)
lahf
push
ret
mov
repnz
adc
movs
mov
inc
sbb
enter
mov
xor
das
sbb
(bad)
lods
and
inc
xchg
call
mov
jno
inc
sbb
mov
sbb
xchg
bound
jmp
aam
dec
xor
into
inc
push
es
loop
(bad)
pop
call
sbb
add
popf
dec
dec
repnz
inc
sbb
ins
mov
cmp
or
outs
dec
cmp
movs
imul
jge
inc
sbb
mov
mov
fnsave
rcr
cmp
sbb
push
sbb
inc
dec
mov
sbb
add
xor
dec
or
bound
jo
ror
cmp
fsubr
shl
das
in
shl
xor
enter
adc
pop
pop
inc
sbb
sub
bound
into
pop
sahf
rol
call
inc
stos
sti
adc
bound
lods
xchg
inc
cmp
xor
push
mov
in
test
mov
in
xor
xchg
movs
mov
sbb
dec
inc
sub
aaa
inc
sbb
mov
adc
sbb
inc
in
xor
lahf
arpl
mov
stos
popf
mov
in
cmp
push
jmp
scas
or
push
inc
bound
das
sbb
fdiv
bound
int3
fmul
sti
adc
xor
adc
inc
sbb
add
arpl
scas
jb
rol
dec
lods
daa
(bad)
adc
sbb
jge
dec
mov
add
xor
jb
cmp
popf
or
lods
push
dec
cmp
aad
mov
jb
jecxz
sbb
jge
dec
mov
add
or
sub
in
adc
pop
(bad)
shl
fnstsw
inc
sbb
add
ins
pop
in
ror
addr16
xor
cli
fdiv
pop
xchg
call
jo
push
inc
jo
push
inc
jo
push
inc
jo
push
inc
jb
cmp
or
das
sbb
ds
or
mov
jo
outs
das
sub
cmp
fwait
xchg
stos
sub
bound
dec
or
mov
sbb
push
inc
dec
or
mov
sbb
push
inc
dec
or
mov
sbb
push
inc
dec
or
mov
sbb
mov
sub
outs
das
sub
cmp
jo
outs
das
sub
cmp
jo
outs
das
sub
cmp
jo
outs
das
sub
cmp
xchg
call
dec
or
mov
sbb
push
inc
dec
or
mov
sbb
push
inc
dec
or
mov
sbb
push
inc
dec
or
mov
sbb
mov
sbb
sti
adc
test
push
jmp
mov
jmp
mov
in
rcr
pop
(bad)
sar
bound
out
idiv
jb
mov
mov
sbb
push
mov
pop
(bad)
rcr
cmp
es
jns
jb
mov
mov
sbb
mov
sub
(bad)
jo
std
jns
repnz
inc
sbb
sbb
pop
bound
pushf
and
das
out
or
lods
inc
jo
(bad)
jo
idiv
repnz
cmp
pop
bound
pushf
and
das
out
or
lods
fiadd
jo
(bad)
jo
std
jns
repnz
inc
sbb
inc
in
bound
pushf
and
das
out
or
lods
xchg
jo
(bad)
jo
std
jns
repnz
inc
sbb
adc
pop
bound
pushf
and
das
out
or
lods
bound
xchg
call
in
mov
sbb
bound
out
std
jns
jb
mov
mov
sbb
addr16
aaa
mov
cdq
mov
dec
fst
sbb
add
inc
jb
jecxz
sbb
les
idiv
mov
or
bound
inc
jo
push
inc
xchg
daa
enter
pop
pusha
sbb
mov
jo
(bad)
jo
std
jns
jo
outs
into
pop
sahf
adc
out
xor
mov
or
das
sbb
cmp
xor
lds
cmp
jb
cmp
mov
arpl
bound
das
sbb
cmp
sbb
push
jns
daa
shr
mov
push
jo
push
inc
sbb
push
inc
jb
jecxz
sbb
cmp
mov
or
mov
sbb
cmp
sbb
test
sbb
add
dec
jge
cdq
mov
xor
jb
cmp
dec
or
call
cmp
sbb
fwait
and
sbb
cmp
sbb
cmp
pop
or
das
sbb
cmp
sbb
test
bound
jo
push
dec
jo
sar
fsub
dec
sbb
jne
push
cmp
pop
(bad)
rcl
aas
bound
das
sbb
cmp
sbb
cmp
or
push
inc
sbb
and
push
inc
sbb
sub
jb
jecxz
sbb
cmp
mov
or
mov
sbb
cmp
sbb
sub
jo
push
ins
jb
cmp
or
sahf
pop
bound
shl
das
sbb
fwait
in
and
das
sbb
cmp
sbb
cmp
or
jmp
in
bound
das
xor
cmp
xor
shl
sub
jo
rcr
std
jns
fwait
lea
ins
sbb
inc
in
or
pop
bound
in
jl
pop
bound
jb
cmp
or
ins
jb
cmp
or
lahf
shl
das
sbb
fwait
push
test
cmp
sbb
cmp
sbb
cmp
jle
pop
sub
jo
push
inc
sbb
push
inc
jb
loop
sbb
cmp
mov
or
pop
bound
jb
cmp
xor
ins
bound
sub
jo
push
push
sbb
mov
sbb
push
inc
in
or
pop
bound
in
pop
in
bound
sbb
das
sub
xchg
inc
sbb
aas
jb
cmp
dec
or
call
cmp
sbb
fwait
lds
arpl
int3
fisttp
cmp
sbb
cmp
sbb
adc
sbb
jns
enter
or
inc
sbb
push
inc
jb
loop
sbb
cmp
mov
mov
inc
in
or
pop
bound
in
jl
pop
bound
jo
push
mov
jb
cmp
bound
inc
dec
or
pop
bound
shl
das
sbb
fwait
aad
and
(bad)
in
xchg
sbb
or
mov
sbb
cmp
sbb
sub
jb
cmp
or
sbb
inc
sbb
sub
jb
jecxz
sbb
cmp
mov
or
mov
sbb
cmp
sbb
sub
jge
and
push
xchg
bound
sub
jb
loop
sbb
loop
pop
bound
repnz
ror
pop
bound
in
or
pop
bound
in
jl
pop
bound
jb
cmp
or
inc
sbb
and
cmp
or
lahf
pop
bound
shl
das
sbb
fwait
mov
and
int3
loop
ror
or
mov
sbb
cmp
sbb
sub
dec
or
sbb
in
bound
sub
jb
loop
sbb
loop
pop
bound
repnz
sbb
shr
push
or
pop
bound
in
pop
in
bound
jb
cmp
or
push
jb
cmp
dec
or
call
cmp
repnz
inc
sbb
mov
inc
in
or
pop
bound
in
pop
in
bound
jb
cmp
or
inc
sbb
push
jb
cmp
dec
or
inc
shl
sub
bnd
inc
sbb
and
pop
bound
xor
jo
std
jns
jo
(bad)
jo
ret
jo
push
ins
jb
cmp
or
jb
out
sbb
cmp
sbb
lods
ret
inc
mov
or
mov
sbb
cmp
sbb
and
jle
int
sbb
push
jb
cmp
dec
or
call
cmp
repnz
sbb
rcr
pop
bound
in
or
pop
bound
in
jl
pop
bound
jb
cmp
or
pop
jb
cmp
dec
or
pushf
pop
bound
ret
and
das
sbb
fstsw
call
sbb
mov
repnz
mov
fnstenv
mov
cdq
mov
adc
(bad)
fimul
mov
inc
jb
jecxz
sbb
iret
mov
idiv
sub
or
bound
xor
jo
std
jns
repnz
sbb
out
jge
dec
xor
test
bound
(bad)
cmc
mov
inc
sbb
cmp
sbb
cmp
xchg
daa
les
xchg
push
add
xor
jo
push
inc
sbb
push
inc
jb
jecxz
sbb
cmp
(bad)
sar
cmp
out
ret
jo
(bad)
jo
std
jns
jo
push
mov
repnz
push
sub
jb
loope
sbb
loop
pop
bound
repnz
inc
sbb
cmp
pop
bound
inc
jo
(bad)
jo
std
jns
jo
(bad)
jo
ret
jb
cmp
jmp
enter
push
sub
jb
out
sbb
loop
pop
bound
repnz
sbb
rcr
bound
jo
push
inc
jo
push
inc
jo
push
inc
jo
push
inc
jb
cmp
or
das
sbb
xor
push
mov
xor
das
sub
cmp
jo
(bad)
jo
std
jns
jo
(bad)
jo
ret
jo
push
and
push
push
jb
cmp
dec
or
call
cmp
sbb
fwait
lods
xchg
cmp
loop
ror
or
pop
bound
jb
cmp
popf
or
lods
mov
inc
jb
loop
sbb
cmp
in
rcr
pop
(bad)
sar
repnz
bound
jb
cmp
popf
or
lods
inc
jge
inc
icebp
jbe
inc
jo
push
or
bound
mov
sbb
push
inc
in
or
pop
bound
in
pop
in
bound
sbb
das
sub
sub
pusha
or
inc
call
sub
jo
sar
cmp
call
sbb
inc
in
or
pop
bound
in
pop
in
bound
sbb
das
or
jb
cmp
dec
or
call
cmp
sbb
fwait
imul
(bad)
(bad)
jo
std
jns
jo
(bad)
jo
ret
jo
push
les
bound
das
je
sub
sbb
inc
sbb
sub
jb
jecxz
sbb
cmp
mov
jmp
je
jmp
das
sbb
cmp
sbb
cmp
or
pop
sub
jb
cmp
or
inc
sbb
push
pop
shl
sub
jo
sar
add
cmp
sub
jns
jo
(bad)
jo
std
jns
jo
(bad)
jo
ret
jo
push
mov
mov
push
push
inc
sbb
sub
jb
jecxz
sbb
cmp
mov
or
mov
sbb
cmp
sbb
sub
dec
or
in
bound
sub
jb
loop
sbb
loop
pop
bound
repnz
out
bound
in
or
pop
bound
in
jl
pop
bound
jb
cmp
or
inc
sbb
pop
jb
cmp
or
pop
bound
shl
das
sbb
fwait
cmp
popf
or
das
sbb
cmp
or
lds
bound
sbb
das
add
cmp
xor
ret
and
sub
jo
rcr
pop
bound
out
sar
(bad)
(bad)
jo
std
jns
jo
(bad)
jo
ret
jo
push
(bad)
sbb
das
aaa
or
jb
call
bound
sbb
lods
jp
cmp
jle
add
push
bound
das
sbb
cmp
sbb
cmp
add
adc
pop
or
jb
out
sbb
cmp
sbb
lods
ds
inc
mov
or
mov
sbb
cmp
sbb
and
jle
addr16
push
or
inc
call
sub
jb
cmp
mov
pop
sbb
test
cmp
sbb
cmp
sbb
cmp
or
bound
sbb
das
add
cmp
xor
ret
and
sub
jo
shl
push
bound
out
sar
fcmove
mov
loop
jmp
inc
cmp
xchg
ffree
div
adc
fidiv
add
inc
jo
push
lds
bound
das
sbb
cmp
sbb
cmp
loop
xor
mov
sbb
cmp
or
adc
jmp
sti
int3
loop
ror
xor
in
bound
(bad)
jg
cmp
sbb
add
xor
add
xor
xor
or
inc
sbb
lods
js
(bad)
mov
inc
sahf
dec
or
(bad)
xor
or
pop
bound
ret
and
mov
adc
mov
mov
jo
push
inc
xchg
daa
rcl
(bad)
jp
jb
cmp
mov
add
mov
mov
fnstsw
ins
int3
jmp
aam
sbb
push
dec
fdiv
xor
mov
sbb
mov
adc
sbb
enter
(bad)
lods
bnd
inc
mov
sti
iret
mov
in
inc
mov
cmps
sar
xchg
out
mov
ds
inc
call
popf
stos
and
enter
mov
add
lds
cmp
or
int
pop
bound
mov
sbb
stos
push
jle
inc
call
push
stos
and
enter
mov
or
popf
cmp
hlt
pop
bound
mov
sbb
cmp
fs
push
jb
mov
sbb
mov
adc
sbb
inc
mov
jle
jp
xchg
out
mov
mov
inc
xchg
xchg
iret
mov
in
mov
call
(bad)
stos
and
enter
mov
or
popf
xor
or
call
popf
(bad)
mov
sbb
cmp
push
mov
sbb
mov
adc
sbb
inc
mov
sbb
jp
xchg
out
mov
ss
inc
xchg
xchg
adc
in
dec
push
jb
mov
sbb
mov
adc
sbb
inc
mov
and
jp
xchg
out
mov
loop
cmp
pop
(bad)
dec
outs
jae
adc
(bad)
(bad)
mov
or
cmp
sbb
cmp
jb
loope
sbb
mov
adc
sbb
push
jle
and
sub
jb
cmps
add
mov
in
push
test
js
inc
cdq
cmps
adc
jmp
mov
ss
(bad)
mov
push
bound
push
outs
adc
xor
mov
dec
mov
sbb
sbb
outs
push
repnz
mov
adc
outs
lods
push
jp
inc
inc
cmp
sbb
data16
xchg
xchg
inc
dec
xor
sti
add
and
xchg
xchg
or
ins
bound
mov
jmp
mov
fmul
dec
neg
mov
not
cs
sbb
hlt
add
cld
adc
xchg
ror
xchg
sar
popf
mov
cmp
lahf
(bad)
iret
mov
punpckldq
lds
pusha
dec
push
jb
mov
sbb
mov
adc
sbb
enter
inc
cmps
xchg
sar
test
test
popf
(bad)
adc
sbb
test
outs
jae
inc
test
(bad)
iret
mov
punpckldq
lds
addr16
push
jb
mov
sbb
mov
adc
sbb
(bad)
and
bound
lds
fs
push
jb
mov
sbb
mov
adc
sbb
test
outs
jae
or
(bad)
iret
mov
punpckldq
lds
push
push
jb
mov
sbb
mov
adc
sbb
enter
inc
cmps
xchg
sar
jmp
mov
adc
sbb
test
outs
jae
out
test
(bad)
iret
mov
push
bound
lds
imul
sbb
mov
adc
sbb
enter
mov
int3
fsub
test
outs
jae
lods
test
(bad)
iret
mov
push
bound
lds
outs
dec
push
jb
mov
sbb
mov
adc
sbb
test
outs
jae
gs
and
enter
mov
push
bound
sub
xchg
out
mov
popf
push
mov
xchg
out
mov
popf
mov
jb
cwde
pop
sbb
mov
pop
(bad)
shr
fidiv
shl
(bad)
mov
in
or
pop
loope
lods
in
popf
mov
bound
sbb
or
mov
mov
xor
lahf
mov
mov
lahf
mov
cmp
sbb
clc
out
(bad)
mov
sbb
lds
pop
aaa
shl
cmp
ffreep
mov
lahf
dec
cmp
movs
mov
inc
xchg
out
mov
das
mov
les
xchg
jp
inc
cdq
cmps
xor
mov
test
mov
loop
(bad)
mov
and
inc
mov
xor
mov
xor
inc
and
sar
pusha
cmp
pop
pop
fcomp
cmp
sub
bound
ret
and
enter
mov
add
(bad)
hlt
adc
inc
sbb
test
pop
bound
ret
and
enter
mov
or
jp
or
bound
loop
(bad)
adc
sbb
enter
mov
int3
fsubr
mov
adc
sbb
mov
adc
sbb
cmp
call
sbb
or
popf
(bad)
adc
sbb
mov
(bad)
fisub
enter
mov
ret
enter
mov
or
jb
inc
xchg
out
mov
mov
arpl
ret
enter
mov
xchg
xor
sbb
shl
(bad)
mov
repnz
inc
sbb
mov
loop
(bad)
mov
sbb
iret
mov
cmps
call
sub
xlat
sar
and
sub
xchg
out
mov
loop
cmp
cmps
sub
xchg
out
mov
ss
inc
xchg
out
mov
ss
inc
xchg
out
mov
popf
shl
out
mov
popf
mov
mov
xchg
out
mov
popf
inc
pop
sahf
(bad)
mov
in
loopne
in
mov
mov
(bad)
xor
popf
lea
lahf
sahf
(bad)
mov
ret
enter
mov
or
cmp
fidiv
shl
(bad)
mov
sbb
ror
(bad)
mov
in
outs
lods
stos
jno
inc
xchg
fucomip
mov
popf
mov
sbb
mov
push
sbb
shr
(bad)
mov
sbb
iret
mov
lahf
sahf
sar
call
sbb
mov
adc
sbb
test
xchg
(bad)
mov
sbb
jae
inc
xchg
out
mov
sbb
(bad)
sub
jo
push
inc
repnz
ror
sahf
les
scas
mov
mov
in
mov
dec
fisubr
inc
out
(bad)
mov
in
push
sbb
cmp
inc
jb
dec
pop
sbb
popa
lods
mov
(bad)
mov
fsub
adc
bound
lods
stos
jb
inc
dec
xor
(bad)
sub
push
sbb
shr
or
inc
add
bound
int3
lahf
(bad)
(bad)
mov
push
xor
add
bound
das
sbb
popa
int3
ret
int3
fldl2t
jge
mov
movs
cmp
rcr
bound
(bad)
jmp
or
pop
(bad)
rcr
or
sub
jb
cdq
pop
sbb
shl
cmp
sbb
loopne
ret
sub
xchg
out
stos
in
push
mov
bound
das
sbb
test
pop
bound
mov
in
mov
mov
add
cmp
addr16
icebp
pop
bound
xchg
aas
push
mov
sbb
cmp
fnstcw
add
sbb
adc
mov
aas
test
jge
(bad)
xchg
mov
int3
fucom
inc
cwde
mov
mov
out
test
popf
cmp
sbb
repz
aad
mov
js
imul
loopne
stc
mov
retf
sbb
lods
js
pop
mov
in
cmp
lahf
aad
mov
(bad)
rol
adc
sbb
shl
cmp
fcom
shl
mov
ja
out
test
popf
push
inc
jb
loopne
sbb
mov
adc
sbb
cmp
lahf
rcl
in
mov
stos
mov
mov
sbb
sar
cs
mov
inc
xchg
out
test
popf
push
mov
sbb
mov
adc
sbb
loopne
ret
das
sbb
push
clc
ret
sub
jb
loopne
sbb
js
pop
(bad)
rcr
or
int3
ret
int3
(bad)
test
hlt
popf
(bad)
enter
pop
sbb
sbb
(bad)
retf
and
bound
mov
mov
cwde
pop
sbb
mov
xor
xchg
pop
bound
mov
(bad)
push
out
ret
sub
jb
loopne
sbb
sbb
pop
(bad)
sar
bound
int3
ret
int3
(bad)
test
das
loop
pop
sbb
sbb
(bad)
retf
and
bound
mov
mov
cmps
add
mov
push
sbb
sbb
(bad)
enter
pop
sbb
xor
(bad)
retf
loopne
mov
push
inc
jo
push
inc
jo
push
inc
jb
cmp
or
fistp
ror
adc
(bad)
push
inc
jo
push
inc
dec
mov
add
out
jge
dec
out
mov
adc
sbb
mov
cmc
popf
mov
arpl
xor
or
enter
adc
in
outs
mov
adc
out
jge
dec
or
sub
in
mov
frstor
cmp
fisubr
lahf
xlat
xlat
mov
or
enter
mov
pop
loop
inc
sbb
shr
out
dec
std
dec
xor
mov
repnz
cmp
pop
fisubr
sbb
enter
(bad)
xor
bound
mov
jmp
icebp
neg
aad
in
sti
mov
pop
bound
enter
pop
sbb
jge
xchg
mov
cdq
jno
and
int3
pop
scas
mov
jmp
js
xchg
daa
clc
sub
jo
shl
adc
mov
popf
xor
inc
inc
sbb
cmp
xchg
daa
call
inc
sbb
inc
repnz
inc
sbb
jge
mov
xchg
fcmovne
lahf
rcl
mov
neg
jge
sbb
inc
frstor
cld
inc
sbb
sbb
inc
sbb
popf
sbb
test
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
bound
shl
sub
jo
shl
sbb
jns
fwait
mov
push
shr
or
lods
push
ins
cmp
(bad)
rcr
popf
mov
pop
bound
js
bound
lds
push
rol
and
lods
out
outs
cmp
sbb
pop
sbb
rol
cmp
lahf
into
aad
in
sti
aaa
push
outs
cmp
arpl
(bad)
into
aad
in
mov
inc
sbb
int3
ret
int3
(bad)
mov
adc
in
push
inc
jb
loopne
sbb
push
inc
sbb
lods
xchg
hlt
(bad)
mov
ficom
aas
(bad)
aas
push
mov
sbb
inc
jbe
jp
sbb
inc
repnz
nop
mov
inc
bound
enter
mov
jo
push
mov
cmp
sbb
cmp
dec
mov
sbb
shl
cmp
sbb
ret
aaa
pop
bound
jo
ror
and
out
arpl
inc
jo
(bad)
jo
std
jns
repnz
ss
sbb
push
inc
xchg
mov
mov
(bad)
xor
aam
bound
das
sbb
cmp
sbb
jge
dec
mov
dec
sbb
test
sbb
cli
push
sbb
mov
fwait
mov
sbb
adc
cli
inc
retf
xor
cmp
xchg
movs
mov
push
loope
push
adc
bound
cdq
call
sbb
add
dec
sahf
pop
cmp
pop
sub
dec
pop
daa
jae
inc
sbb
cmp
bound
js
arpl
inc
adc
(bad)
sub
bound
(bad)
daa
or
into
bound
inc
jb
jecxz
sbb
cmp
xchg
out
mov
sbb
jecxz
sbb
(bad)
lods
sbb
sub
lahf
xchg
mov
out
(bad)
adc
in
shl
fisubr
rcr
cmp
lahf
cmps
lds
pop
ret
repnz
clc
xor
mov
outs
lahf
mov
mov
xchg
div
mov
ficomp
dec
pop
xchg
out
mov
ret
mov
(bad)
mov
mov
out
(bad)
jl
push
or
sbb
mov
outs
lahf
mov
mov
(bad)
lahf
(bad)
mov
in
push
mov
sbb
mov
xor
pop
icebp
pop
bound
dec
sahf
lock
inc
sbb
pop
icebp
pop
bound
int3
loop
ror
loope
and
pop
dec
icebp
pop
bound
xor
popf
or
lods
sti
mov
mov
scas
and
inc
adc
(bad)
(bad)
jo
(bad)
jp
repnz
mov
sbb
dec
ror
ret
cmp
pop
bound
add
ins
mov
das
sbb
shr
bound
in
std
jns
and
xor
adc
xor
sbb
shl
popf
(bad)
int3
fisttp
mov
push
jmp
mov
popf
mov
sbb
aad
and
xor
cmp
xor
pop
cmp
xor
pop
cmp
xor
pop
cmp
xor
pop
cmp
xor
pop
cmp
xor
pop
cmp
xor
pop
cmp
dec
lahf
enter
or
mov
push
bound
into
lahf
xchg
(bad)
mov
mov
pop
cmp
xor
pop
cmp
xor
or
xor
mov
mov
outs
jb
xor
bound
(bad)
fnstsw
popf
popf
out
mov
popf
cmp
lahf
mov
shr
bound
int3
lahf
xchg
mov
sbb
mov
jb
cmp
out
mov
adc
pop
(bad)
ror
cmps
lahf
(bad)
mov
jo
push
inc
jb
loopne
sbb
cmp
in
rcr
pop
(bad)
shl
les
inc
nop
out
mov
jmp
(bad)
mov
in
cmp
daa
adc
and
jb
cmp
out
mov
adc
pop
(bad)
shr
adc
enter
mov
pop
loop
inc
sbb
rol
addr16
pop
jo
push
sbb
and
enter
mov
mov
add
xor
or
das
sbb
or
repnz
inc
sbb
cmp
repz
cmp
push
sbb
mov
in
mov
xchg
out
mov
lahf
xchg
lds
ret
enter
mov
push
bound
(bad)
fidiv
mov
lahf
lahf
(bad)
mov
push
idiv
repnz
inc
sbb
test
outs
inc
push
inc
jo
push
dec
ret
das
sbb
(bad)
jo
idiv
repnz
inc
sbb
mov
out
(bad)
mov
call
mov
sbb
cmp
jo
ror
cmp
sbb
shr
push
bound
sbb
sar
aam
mov
sahf
lds
add
data16
fs
push
inc
jo
push
mov
sbb
(bad)
jo
idiv
repnz
dec
inc
sbb
shl
(bad)
mov
in
(bad)
jns
adc
inc
sbb
mov
adc
in
push
inc
xchg
out
mov
imul
cmps
sub
xchg
out
mov
das
loop
pop
sbb
mov
mov
sbb
cmp
jo
rcl
bound
mov
sbb
shl
lahf
lahf
(bad)
mov
jmp
(bad)
mov
pop
bound
mov
sbb
or
bound
mov
test
cmp
call
xor
or
das
sbb
nop
xchg
pop
bound
repnz
inc
sbb
cmp
repz
inc
sbb
iret
xchg
bound
enter
mov
jmp
(bad)
mov
pop
bound
mov
sbb
or
bound
mov
test
cmp
call
xor
or
das
sbb
push
xchg
pop
bound
repnz
inc
sbb
cmp
repz
cmp
out
mov
in
mov
arpl
xor
loope
inc
outs
inc
push
inc
jo
push
imul
mov
sbb
jo
std
jns
repnz
aas
inc
sbb
inc
loope
(bad)
mov
lods
out
mov
pop
lahf
(bad)
mov
push
pop
add
cmp
cmp
sbb
adc
pop
bound
bnd
inc
sbb
cmp
repz
inc
sbb
mov
inc
nop
out
mov
push
dec
cmp
out
mov
lahf
xchg
lds
ret
enter
mov
adc
(bad)
fidiv
mov
lahf
lahf
(bad)
mov
cmp
jns
repnz
aas
inc
sbb
test
outs
inc
push
inc
jo
push
push
int
cmp
sbb
(bad)
jo
std
jns
repnz
js
sbb
shl
(bad)
mov
lods
out
mov
pop
lahf
(bad)
mov
push
pop
add
cmp
cmp
sbb
(bad)
xchg
pop
bound
repnz
inc
sbb
cmp
repz
inc
sbb
mov
inc
xchg
out
lds
in
mov
mov
in
(bad)
jl
adc
inc
sbb
mov
adc
in
push
inc
xchg
out
mov
out
cmp
cmps
sub
repnz
inc
in
test
mov
in
mov
jo
push
inc
jo
push
inc
jo
push
inc
sbb
sub
repnz
inc
sbb
mov
das
sbb
cmp
sbb
(bad)
lods
mov
inc
call
xor
xor
(bad)
rcr
cmp
jecxz
sti
das
sbb
lods
test
dec
or
fcomp
(bad)
lock
inc
sbb
cmp
lahf
mov
mov
jb
fadd
sbb
(bad)
lods
mov
cmp
out
leave
mov
in
mov
mov
neg
mov
jmp
(bad)
mov
in
(bad)
lods
call
shl
(bad)
mov
jmp
mov
pop
bound
mov
in
mov
(bad)
jo
ret
repnz
ds
sbb
cmp
sbb
cmp
sbb
cmp
jb
test
sbb
mov
jmp
mov
jo
push
inc
in
enter
shr
push
bound
enter
pop
sbb
lock
sbb
ror
or
enter
mov
mov
jp
in
enter
shr
sbb
mov
adc
int3
and
mov
in
jmp
call
in
shl
sbb
sbb
mov
sbb
inc
sbb
cmp
push
or
bound
ret
sub
jb
cmp
mov
add
push
add
mov
inc
sbb
mov
icebp
jae
xor
popf
dec
push
in
xor
outs
push
mov
inc
cmp
xchg
bound
jmp
aam
dec
xor
into
outs
push
xor
ror
jmp
cmp
ins
mov
(bad)
addr16
dec
lahf
movs
cmp
pop
or
xor
popf
or
lods
mov
movs
ret
add
bound
jo
(bad)
jns
outs
imul
inc
repnz
inc
sbb
lds
popf
or
lods
outs
data16
push
adc
pop
bound
in
and
pop
(bad)
shl
bound
jle
jle
add
das
dec
cmps
add
mov
sbb
mov
loop
(bad)
jle
dec
cmps
add
pop
xor
sbb
add
std
jns
outs
jbe
js
(bad)
jp
sbb
xor
sbb
add
std
jns
outs
inc
mov
inc
sbb
and
sbb
ror
xlat
xor
sbb
mov
sub
jns
outs
fs
cmp
js
and
in
bound
xchg
jg
ficomp
mov
xor
adc
pop
bound
xchg
jg
ficomp
add
idiv
outs
fs
sbb
js
and
ficomp
dec
inc
xchg
jg
in
bound
jo
std
jns
outs
fs
ss
js
and
in
bound
xchg
jg
ficomp
xor
push
popf
dec
push
in
xor
dec
mov
sbb
inc
xchg
call
inc
stos
cli
push
sbb
inc
in
xor
sbb
inc
in
xor
pop
bound
inc
in
sub
sbb
inc
in
sub
pop
bound
inc
in
sbb
sbb
inc
in
adc
pop
bound
inc
in
or
sbb
inc
in
or
pop
bound
inc
dec
jmp
adc
mov
sbb
sbb
loop
push
inc
cdq
cmps
xor
pop
sahf
xor
pop
mov
add
mov
adc
push
cmp
mov
arpl
movs
xor
cmp
retf
das
sbb
push
inc
dec
or
adc
in
icebp
xchg
aam
or
push
lahf
data16
sbb
inc
imul
cmp
ss
sub
mov
ret
out
jno
xchg
es
mov
inc
popa
push
xchg
pushf
rcr
data16
dec
sbb
inc
in
js
pop
bound
inc
in
jl
pop
bound
inc
in
jo
pop
bound
inc
in
je
pop
bound
inc
in
push
aad
bound
inc
in
ins
mov
bound
inc
in
pusha
mov
bound
inc
in
fs
bound
inc
in
pop
mov
bound
inc
in
pop
mov
bound
inc
in
push
mov
bound
inc
in
push
mov
bound
inc
in
dec
mov
bound
inc
in
dec
mov
bound
inc
in
inc
mov
bound
inc
in
inc
mov
bound
inc
in
mov
aad
bound
inc
in
mov
aad
bound
inc
in
mov
pop
bound
inc
in
mov
pop
bound
inc
in
test
pop
bound
inc
in
lods
mov
bound
inc
in
mov
aad
bound
inc
in
movs
mov
bound
inc
in
cwde
mov
bound
inc
in
pushf
mov
bound
inc
in
nop
mov
bound
inc
in
xchg
mov
bound
inc
in
mov
sbb
inc
in
mov
sbb
inc
in
xor
bound
inc
in
test
sbb
inc
in
clc
mov
bound
inc
in
cld
mov
bound
inc
in
lock
bound
inc
in
hlt
mov
bound
inc
in
call
aad
bound
inc
in
in
mov
bound
inc
in
loopne
pop
bound
inc
in
in
pop
bound
inc
in
fdiv
sbb
inc
in
fdiv
sbb
inc
in
shl
sbb
inc
in
aam
pop
bound
inc
in
shl
bound
inc
in
les
sbb
inc
in
cmp
sbb
inc
in
cmp
pop
bound
inc
in
xor
sbb
inc
in
xor
pop
bound
inc
in
sub
sbb
inc
in
sub
pop
bound
inc
in
and
sbb
inc
in
and
pop
bound
inc
in
sbb
sbb
inc
in
sbb
pop
bound
inc
in
adc
sbb
inc
in
adc
pop
bound
inc
in
or
sbb
inc
in
or
pop
bound
inc
in
add
sbb
inc
in
add
pop
bound
inc
in
js
pop
bound
inc
in
jl
pop
bound
inc
in
jo
pop
bound
inc
in
je
pop
bound
inc
in
push
aad
bound
inc
in
ins
mov
bound
inc
in
pusha
mov
bound
inc
in
fs
bound
inc
in
pop
mov
bound
inc
in
pop
mov
bound
inc
in
dec
mov
bound
inc
in
dec
mov
bound
inc
in
inc
mov
bound
inc
in
inc
mov
bound
inc
in
mov
aad
bound
inc
in
mov
pop
bound
inc
in
test
pop
bound
inc
in
lods
mov
bound
inc
in
mov
aad
bound
inc
in
movs
mov
bound
inc
in
cwde
mov
bound
inc
in
pushf
mov
bound
inc
in
nop
mov
bound
inc
in
xchg
mov
bound
inc
in
xor
bound
inc
in
test
sbb
inc
in
clc
mov
bound
inc
in
cld
mov
bound
inc
in
lock
bound
inc
in
hlt
mov
bound
inc
in
call
aad
bound
inc
in
in
mov
bound
inc
in
loopne
pop
bound
inc
in
in
pop
bound
inc
in
fdiv
sbb
inc
in
fdiv
sbb
inc
in
shl
sbb
inc
in
aam
pop
bound
inc
in
enter
test
sbb
inc
in
int3
mov
bound
inc
in
shl
bound
inc
in
les
sbb
inc
