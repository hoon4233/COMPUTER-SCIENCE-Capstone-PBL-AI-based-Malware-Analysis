in
in
les
and
dec
frstor
inc
push
pusha
rol
jo
pop
push
es
dec
frstor
mov
add
pop
mov
pushf
dec
int
hlt
sub
adc
dec
frstor
xabort
hlt
dec
(bad)
lods
inc
push
push
clc
int3
and
sub
shr
ds
stos
scas
clc
cld
push
push
clc
int3
mov
repz
outs
sub
sahf
mov
and
int3
sbb
stos
adc
ja
sbb
dec
pop
popf
and
cmp
int3
mov
frstor
adc
out
sbb
mov
mov
cld
in
push
in
dec
push
cmp
and
psubusw
hlt
dec
(bad)
jno
frstor
(bad)
cwde
fdivr
int
mov
jle
xor
(bad)
or
scas
sub
aad
or
frstor
inc
stos
cmps
mov
fldenv
xor
scas
mov
push
and
dec
jle
xor
(bad)
push
jnp
data16
les
data16
sbb
and
ret
xor
(bad)
hlt
mov
sbb
adc
and
dec
cmp
shr
rol
sub
cmps
neg
or
mov
mov
mov
cmps
xor
sub
or
(bad)
inc
push
sub
sub
sbb
dec
in
and
fisub
fisttp
int3
sbb
sahf
dec
sbb
in
lahf
and
dec
frstor
inc
xor
cmps
xor
in
outs
mov
xor
in
dec
aad
hlt
dec
mov
sbb
mov
sub
(bad)
dec
frstor
movs
cli
cmps
or
test
xor
or
frstor
mov
fcmovnb
pop
sbb
pop
hlt
dec
pop
loopne
neg
and
dec
cmp
push
enter
sbb
(bad)
lahf
and
cmp
pushf
cmc
dec
frstor
cmps
jl
xor
fisttp
mov
jl
dec
frstor
movs
or
dec
frstor
sbb
mov
cmp
popf
and
sub
dec
frstor
mov
push
inc
sbb
add
shr
pop
sub
dec
fdivrp
fsubr
loopne
and
cmc
in
dec
mov
xor
fisttp
lahf
and
push
mov
or
or
sbb
add
or
sbb
pop
hlt
dec
pop
loopne
jle
lods
mov
xor
and
mov
and
dec
mov
cmc
dec
xor
ja
sbb
mov
xchg
and
and
fimul
and
frstor
cmps
sub
out
mov
fdivr
pop
fisttp
cmp
adc
hlt
ret
inc
mov
je
inc
xchg
and
inc
mov
je
cmps
or
shl
frstor
cmps
xor
dec
in
rcr
or
and
int3
fisttp
and
mov
sbb
mov
and
dec
in
in
movs
stc
movs
add
mov
xor
or
sub
and
mov
outs
fimul
(bad)
sbb
adc
out
(bad)
cmp
dec
mov
and
sar
in
fdivr
push
popa
or
push
popa
or
mov
pushf
jo
sub
and
fstp
add
pop
hlt
dec
push
loop
mov
ss
(bad)
pop
and
and
and
cmps
jns
hlt
dec
push
loop
cmp
int3
xor
and
mov
ss
or
iret
clc
(bad)
and
aam
mov
in
adc
shl
sbb
jge
push
popa
or
mov
hlt
dec
fisttp
mov
sub
cmp
int3
ret
and
mov
rol
jl
push
in
mov
xor
cmp
dec
hlt
mov
xor
cmp
int3
(bad)
xor
and
mov
push
or
aam
or
pop
inc
in
in
movs
(bad)
hlt
adc
shl
ja
sbb
clc
mov
add
and
fcomi
aaa
sbb
int3
mov
fdiv
movs
mov
das
les
out
sbb
data16
jle
iret
mov
cwde
fdiv
mov
jno
inc
arpl
test
retf
push
cmc
or
aad
xchg
fs
fsub
mov
out
pop
and
les
push
icebp
les
sub
xchg
mov
popa
add
cwde
fdiv
mov
movs
enter
or
mov
fdivr
aad
xor
iret
loope
hlt
cmp
(bad)
mov
fisttp
and
movs
xlat
scas
mov
push
out
lea
adc
lods
adc
frstor
dec
fnsave
sbb
clc
hlt
jmp
xchg
push
out
dec
movs
loopne
dec
push
cld
cmc
xchg
push
out
or
lods
xor
iret
loope
hlt
cmp
jno
fstp
or
or
ss
hlt
aam
sbb
scas
loopne
push
mov
dec
fstp
or
out
in
xor
sub
add
xor
mov
fstp
or
mov
pop
dec
push
cld
fst
xchg
aaa
sbb
sbb
jae
adc
jecxz
mov
sub
pop
push
popa
or
pop
or
lds
cmps
and
les
inc
in
push
in
movs
sbb
repz
fld
pop
cmps
ss
xor
or
cli
mov
pop
adc
jg
aad
lock
fnstsw
adc
out
(bad)
cmp
sbb
popa
or
mov
loope
cwde
fcomp
paddusw
xchg
cmps
and
les
inc
in
push
in
movs
sbb
repz
fld
pop
cmps
ss
xor
or
cli
mov
lahf
and
or
loop
push
frstor
hlt
dec
cmp
push
jno
stos
mov
sbb
in
xor
or
lds
mov
jns
dec
and
mov
cmp
aad
dec
dec
in
push
data16
scas
mov
pop
in
or
mov
int3
arpl
nop
mov
lods
ss
pop
lods
mov
adc
shl
test
dec
sbb
adc
(bad)
and
fcomi
aaa
sbb
mov
sub
xor
lods
mov
push
jns
or
dec
jb
lahf
and
cmps
mov
scas
test
cmps
rcr
mov
loopne
movs
rcr
test
popa
or
sbb
adc
out
(bad)
cmp
sbb
clc
lock
loope
push
(bad)
mov
jecxz
cmp
int3
mov
frstor
dec
mov
jmp
fnsave
mov
sub
dec
mov
sbb
stos
and
into
sub
mov
fucom
lock
lods
add
cmp
mov
jg
aad
pmuludq
mov
fdivr
pop
sbb
lahf
and
cmp
test
lahf
and
(bad)
(bad)
inc
push
(bad)
lock
and
and
(bad)
and
scas
repnz
scas
in
mov
sub
mov
and
adc
lods
adc
xor
cmps
sbb
lgs
movs
add
mov
int3
sti
and
mov
fdivr
pop
inc
lock
mov
sbb
scas
and
ret
movs
daa
in
mov
xor
lods
aaa
into
sub
xchg
adc
push
inc
sbb
cld
pop
or
(bad)
xchg
in
xchg
sar
std
(bad)
mov
mov
pop
or
jmp
in
leave
xor
dec
frstor
sbb
aam
sti
rcr
in
dec
in
in
movs
shr
xor
xor
jge
pop
jno
stos
gs
dec
(bad)
es
and
sbb
push
jge
hlt
cld
jge
pop
sbb
and
mov
and
dec
pop
add
out
mov
popa
clc
inc
pop
(bad)
cmc
dec
(bad)
xor
add
mov
adc
inc
or
and
int3
clc
mov
jge
sub
jge
add
out
mov
mov
or
test
or
and
cmps
ins
push
hlt
dec
mov
pushf
push
cs
ret
or
fisttp
int3
sbb
leave
mov
and
cmp
cmps
rcl
outs
data16
dec
xor
cmc
dec
(bad)
aaa
ret
movs
les
je
ja
jae
(bad)
cwde
fdiv
sub
retf
loop
hlt
dec
pop
pop
or
mov
ja
and
loopne
dec
and
hlt
dec
test
cld
jge
and
je
lahf
and
or
sbb
hlt
cmp
cmps
ror
sbb
dec
jl
xor
push
cld
lds
retf
adc
sbb
stos
and
push
gs
in
dec
fst
pop
(bad)
pop
cld
or
sbb
dec
(bad)
sbb
pop
loopne
dec
push
popa
add
push
push
adc
xor
dec
fst
push
les
jae
jo
jae
(bad)
cwde
fdiv
les
dec
aam
sub
and
or
xor
dec
frstor
(bad)
cwde
fdivr
sub
jge
or
or
and
js
mov
movs
out
inc
xchg
mov
lea
hlt
dec
(bad)
das
frstor
dec
pop
loopne
dec
and
hlt
dec
push
popa
clc
jbe
clc
or
ss
leave
shr
hlt
dec
test
data16
pop
push
adc
sbb
(bad)
lods
push
mov
jge
push
popa
add
fdivr
int
fisttp
mov
add
lahf
and
adc
lods
adc
xor
sbb
sbb
jge
in
sar
push
push
or
cmc
xor
dec
sub
jge
and
sub
jae
and
retf
hlt
dec
aam
sbb
and
(bad)
cs
jmp
frstor
test
popa
add
sbb
pop
sub
fsub
cmp
pusha
test
adc
dec
push
popa
cld
ret
cmc
pop
mov
inc
or
frstor
mov
lods
or
and
test
frstor
shr
fisttp
inc
sbb
fdiv
(bad)
and
sar
pop
pop
or
jo
sbb
hlt
in
mov
mov
ss
jge
in
fdivr
pop
inc
or
call
ins
pop
jecxz
push
frstor
mov
push
popa
cld
vunpcklpd
jbe
and
jg
and
and
dec
fwait
scas
mov
pop
sbb
dec
shl
ja
and
xor
and
pop
and
daa
in
lea
(bad)
je
frstor
or
lods
xor
(bad)
and
frstor
jae
hlt
cmps
rcl
push
popa
add
fnsave
scas
and
les
in
or
pop
sbb
dec
test
jge
mov
jns
sub
sub
cmp
int3
mov
hlt
and
mov
push
popa
sbb
sbb
ret
movs
and
lahf
and
cmp
int3
mov
cmp
int3
push
aas
frstor
adc
ror
hlt
cmps
rcl
jb
hlt
sub
push
pop
out
dec
frstor
mov
mov
hlt
daa
rcl
mov
xor
lods
jno
and
or
pop
loopne
mov
je
add
fisttp
push
aam
sti
retf
mov
test
fst
pop
(bad)
pop
nop
or
ss
dec
fisttp
cmps
std
push
hlt
dec
xor
lods
jno
and
or
push
mov
movs
cmps
adc
or
loopne
inc
or
pop
out
cmp
and
xchg
sub
jge
ins
fisttp
mov
out
retf
or
lahf
and
(bad)
in
mov
inc
sbb
pop
repnz
(bad)
or
mov
pop
or
and
or
push
sbb
pop
loopne
hlt
dec
(bad)
sti
retf
hlt
dec
pop
xlat
mov
frstor
retf
or
lahf
and
(bad)
in
mov
inc
sbb
and
daa
lea
mov
fistp
and
or
sbb
mov
fimul
mov
jno
and
or
mov
push
frstor
retf
or
lahf
and
(bad)
in
mov
inc
sbb
and
sub
dec
mov
fcomi
inc
pop
shl
dec
frstor
dec
shl
sahf
dec
mov
pop
or
and
or
xor
cmps
xor
jecxz
(bad)
pusha
mov
mov
movs
pop
out
(bad)
and
inc
push
pop
mov
fcmovne
mov
and
inc
pop
mov
inc
retf
or
and
or
pushf
and
mov
sbb
sti
clc
pop
mov
mov
loop
dec
lea
jecxz
fimul
dec
rep
dec
fst
pop
(bad)
pop
or
and
xor
into
es
dec
mov
pushf
dec
cs
daa
lea
mov
cmps
xor
fisttp
dec
fst
and
lahf
and
repnz
or
and
ja
rcr
or
sbb
cmc
dec
frstor
mov
data16
daa
lea
mov
cmps
xor
fisttp
dec
fst
and
lahf
and
repnz
or
and
ja
rcr
or
sbb
cmc
dec
frstor
dec
mov
push
or
pushf
and
jecxz
fisttp
int3
sbb
leave
mov
and
cmp
dec
cmc
daa
cmp
mov
push
cdq
or
push
ror
mov
loopne
jb
fcomi
dec
test
fisttp
mov
and
dec
mov
pushf
sub
xchg
mov
xor
cmps
xor
fisttp
dec
fst
and
lahf
and
repnz
or
and
ja
rcr
or
sbb
cmc
dec
frstor
dec
mov
pushf
lock
data16
daa
lea
mov
cmps
xor
fisttp
dec
fst
mov
or
fisttp
daa
jae
mov
mov
inc
push
(bad)
or
rcr
or
sbb
cmc
dec
frstor
dec
mov
push
or
pushf
and
xchg
sub
or
sbb
leave
mov
and
cmp
(bad)
mov
push
cdq
or
data16
mov
loopne
jb
fcomi
dec
test
sahf
dec
mov
push
or
and
or
xor
cmps
xor
fisttp
dec
fst
mov
or
fstp
lods
push
mov
jge
pop
sbb
fmul
lahf
and
pop
ins
gs
cmps
mov
loopne
jb
fcomi
dec
test
push
push
or
pushf
and
pop
sub
or
sbb
leave
mov
and
cmp
jecxz
jecxz
fimul
dec
frstor
into
push
icebp
cmc
dec
frstor
or
xor
dec
test
test
or
xor
jge
pop
sbb
or
xchg
mov
jle
xor
(bad)
mov
or
fsub
mov
sub
add
cld
or
add
or
mov
or
sub
lock
(bad)
or
push
mov
movs
(bad)
in
mov
into
push
add
dec
(bad)
lock
frstor
or
cld
fst
or
cmps
dec
mul
fimul
dec
shr
dec
stc
test
hlt
mov
and
or
push
inc
xor
jge
or
jne
or
push
mov
movs
ret
or
add
scas
les
in
cld
jge
push
mov
movs
daa
xlat
mov
push
mov
movs
(bad)
in
loopne
frstor
dec
push
popa
or
sub
fldenv
ret
or
or
or
dec
hlt
hlt
dec
(bad)
add
fstp
pop
pop
or
mov
jns
xor
scas
jno
and
or
push
sbb
sbb
lods
mov
aam
sti
retf
hlt
dec
pop
out
sbb
and
imul
movs
les
or
and
(bad)
cwde
fdivr
fdivr
jge
pop
pop
or
mov
jne
sti
sub
dec
push
mov
movs
les
or
and
(bad)
cwde
fdivr
(bad)
shl
jne
scas
add
add
and
hlt
mov
fmul
mov
dec
movs
call
or
frstor
mov
cmps
push
mov
xor
test
dec
hlt
dec
push
cld
fst
xor
or
and
movs
daa
mov
mov
movs
cmps
add
loopne
mov
xor
dec
fisttp
mov
and
retf
or
and
jns
jge
or
and
or
xor
dec
fst
push
ret
or
push
ret
dec
dec
frstor
mov
and
or
push
sbb
sbb
lods
mov
push
cld
cmc
xchg
push
out
xor
and
retf
hlt
dec
pop
sbb
and
jno
and
or
mov
pop
or
and
or
push
sbb
pop
loopne
hlt
dec
(bad)
sti
retf
hlt
dec
pop
iret
in
frstor
retf
or
and
or
push
sbb
sbb
in
retf
hlt
dec
pop
sbb
add
sbb
mov
hlt
push
push
cld
fst
push
out
mov
or
pop
mov
mov
lods
jno
and
or
pop
lods
or
movs
fisttp
mov
enter
popf
lock
frstor
jmp
ja
int
adc
fldenv
dec
cmp
mov
jge
and
aaa
int3
mov
inc
cmc
dec
frstor
or
mov
movs
daa
inc
xlat
mov
push
mov
movs
(bad)
in
loopne
frstor
dec
push
popa
or
mov
xor
pop
xor
dec
frstor
or
mov
jns
mov
or
push
scas
jno
and
or
push
sbb
sbb
lods
mov
push
cld
cmc
xchg
push
out
xor
and
retf
hlt
dec
mov
fimul
inc
shl
ja
lods
fisttp
mov
sub
frstor
ret
or
lods
fisttp
mov
fld
mov
cmps
xor
jecxz
(bad)
pusha
inc
or
add
dec
or
push
and
dec
sbb
cmc
dec
frstor
mov
fisttp
mov
mov
movs
daa
adc
dec
push
mov
movs
cmps
ins
dec
hlt
dec
pop
loopne
ret
or
popf
movs
enter
or
mov
fild
and
or
pop
dec
or
and
mov
or
xor
cmps
xor
cld
fst
push
mov
movs
daa
test
mov
push
mov
movs
cmps
mov
dec
pop
loopne
mov
dec
ret
and
or
and
retf
or
mov
retf
or
and
int
jno
or
and
jg
jne
or
mov
retf
or
jge
or
mov
retf
or
and
int
xor
or
and
ja
sub
push
xrelease
or
loopne
hlt
dec
push
mov
movs
(bad)
in
(bad)
mov
fcomi
cmp
scas
jno
and
or
push
adc
sbb
movs
aaa
out
and
int3
pusha
lock
push
mov
movs
(bad)
in
(bad)
mov
(bad)
push
mov
movs
(bad)
in
(bad)
xchg
push
out
retf
or
mov
adc
lods
adc
lahf
and
aad
fs
sub
dec
fnsave
clc
and
dec
frstor
mov
or
popa
sahf
sbb
scas
mov
push
push
adc
frstor
xor
lods
or
lods
sub
frstor
mov
int3
cmc
mov
pop
loopne
dec
fst
movs
xchg
scas
mov
push
push
adc
fisttp
mov
adc
or
scas
mov
push
scas
xchg
cmps
sbb
aam
dec
fadd
mov
ret
jge
add
pop
sub
jae
dec
sbb
mov
fisttp
adc
aam
in
frstor
dec
dec
in
ss
fnsave
lock
pop
push
fadd
mov
jecxz
retf
sbb
and
jno
mov
mov
sahf
dec
xor
lods
xor
xor
lods
or
and
out
(bad)
cmp
jg
aad
push
xchg
lds
and
xor
clc
and
and
xchg
lds
and
xchg
loopne
and
ja
gs
in
aad
mov
push
in
cmc
xchg
dec
xor
hlt
dec
sbb
mov
pushf
and
dec
frstor
in
popf
lea
pcmpeqb
inc
sbb
and
jb
and
dec
shr
or
mov
or
jb
hlt
sysenter
push
test
icebp
aaa
sbb
jle
movs
retf
mov
pop
pop
(bad)
lock
dec
fcomp
push
(bad)
mov
inc
lds
bnd
mov
add
lea
out
xor
int3
loopne
and
dec
and
int3
loopne
and
mov
cmp
mov
push
in
pop
fbld
mov
sbb
push
(bad)
clc
dec
frstor
dec
movs
loopne
dec
sub
in
loopne
and
cmp
adc
hlt
dec
gs
dec
fst
adc
mov
in
loopne
and
out
popf
lea
paddusw
fdiv
lds
repz
int
dec
frstor
dec
pop
sub
loopne
and
cmps
fcmovnu
or
pushf
and
cmp
adc
hlt
dec
pop
int
cmp
lds
mov
pushf
and
(bad)
gs
cmps
pop
fimul
mov
and
loopne
and
cmp
adc
hlt
dec
pop
int
adc
and
inc
lds
icebp
mov
frstor
(bad)
adc
int
mov
fild
dec
lds
repz
int
dec
frstor
inc
lds
cmp
adc
pusha
pop
push
frstor
hlt
dec
(bad)
mov
movs
loopne
dec
and
int3
loopne
and
cmps
inc
pop
hlt
dec
pop
sub
loopne
and
cmps
xlat
and
pop
push
frstor
hlt
neg
lds
cmp
pop
push
frstor
frstor
out
xor
test
pop
push
(bad)
and
and
or
dec
fsubr
paddusw
xor
and
mov
fcomp
push
(bad)
inc
dec
frstor
dec
movs
loopne
dec
pop
and
loopne
and
cmps
jg
hlt
dec
pop
aad
pop
frstor
dec
in
mov
fmulp
fs
frstor
dec
frstor
outs
push
in
cmc
xchg
mov
lea
pop
ins
data16
inc
sbb
das
mov
add
adc
and
dec
mov
and
xor
fcmovnbe
retf
mov
pop
sub
loopne
and
movs
loopne
icebp
aaa
sbb
movs
call
and
dec
in
mov
ss
dec
in
mov
push
in
lds
lds
out
sbb
and
add
hlt
mov
push
in
dec
movs
loopne
dec
sub
in
loopne
and
inc
pop
out
hlt
dec
(bad)
push
aas
ins
data16
(bad)
adc
sub
lods
xchg
mov
clc
in
dec
(bad)
aas
ins
data16
int3
cmp
sub
sbb
frstor
retf
push
and
dec
pop
pop
pop
push
and
dec
aad
mov
pop
int
jg
and
stc
cwde
xlat
leave
iret
frstor
cmp
test
dec
aad
mov
pop
sbb
cmp
movs
mov
(bad)
repnz
fs
dec
ss
je
das
and
loopne
and
div
hlt
dec
sub
jge
xor
jle
jg
pop
push
(bad)
inc
dec
cmp
repz
cwde
(bad)
je
das
and
dec
test
ja
aad
mov
fldenv
hlt
int3
clc
sub
and
push
push
aam
(bad)
enter
(bad)
int3
out
and
dec
rol
paddusw
hlt
cmp
cmp
mov
push
in
push
test
sub
test
enter
fstp
icebp
inc
jge
hlt
out
in
mov
in
clc
out
popf
and
xchg
and
mov
hlt
cld
push
dec
jge
hlt
jle
fs
dec
push
in
cmc
xchg
adc
out
sbb
lea
lods
or
and
pop
xor
lahf
and
mov
jecxz
lahf
and
cmps
adc
dec
jle
inc
or
and
out
mov
mov
inc
frstor
pop
jb
hlt
daa
pushf
out
mov
mov
push
frstor
mov
xchg
out
mov
mov
bound
frstor
jg
gs
(bad)
and
dec
xchg
test
inc
hlt
dec
jle
inc
or
mov
cmps
sbb
sub
hlt
cld
jge
and
mov
pop
data16
ret
movs
mov
js
or
lds
dec
pop
iret
cmp
sub
and
or
mov
sbb
paddusw
int3
mov
and
xchg
mov
fcomi
aaa
sbb
int3
mov
adc
dec
sub
jge
inc
lods
aaa
int3
mov
cld
cmc
dec
frstor
sahf
(bad)
and
mov
push
out
or
and
icebp
aaa
pop
data16
(bad)
cwde
les
dec
movs
loopne
dec
sbb
dec
frstor
into
ss
dec
fucom
mov
fsub
dec
pop
inc
dec
dec
push
cld
lds
popa
test
hlt
dec
fst
push
ret
movs
daa
frstor
dec
push
popa
adc
and
add
pushf
and
outs
mov
mov
push
out
or
sahf
dec
push
popa
push
pop
mov
sahf
dec
mov
sahf
dec
and
cmps
add
dec
push
popa
push
pop
and
ret
movs
and
frstor
dec
movs
loopne
dec
mov
or
jge
hlt
and
fcmovnu
sub
add
rcr
and
mov
pop
xor
(bad)
fild
pop
and
add
pushf
and
or
iret
std
mov
jge
cmp
push
jno
stos
pop
enter
fdivr
push
aas
sbb
and
adc
mov
lods
mov
push
popa
clc
(bad)
cwde
aam
add
lods
mov
dec
in
idiv
xor
sahf
dec
mov
jns
and
je
cmp
shl
and
(bad)
loopne
and
or
iret
cli
not
or
dec
sub
(bad)
cwde
cld
jge
and
aaa
sbb
lock
mov
mov
jecxz
dec
movs
loopne
dec
and
and
jb
hlt
into
sbb
cmc
dec
fnstsw
mov
sub
inc
push
jns
mov
pop
xor
imul
jb
and
dec
test
sti
stc
cdq
adc
jb
and
dec
test
sti
stc
cdq
adc
jb
and
dec
test
sti
stc
cdq
adc
jb
and
dec
test
sti
stc
cdq
adc
jb
and
dec
shl
jg
int
mov
fsubr
int3
mov
popa
or
and
sub
data16
inc
imul
jbe
sub
frstor
(bad)
daa
outs
sti
stc
leave
xor
(bad)
shl
jge
pop
into
test
loop
pop
push
pop
daa
cmps
push
dec
rcl
and
fldcw
inc
dec
fistp
sbb
frstor
adc
xchg
mov
mov
sti
ret
cdq
sbb
hlt
dec
rcl
loopne
leave
xor
sbb
stos
dec
(bad)
or
mov
sbb
and
mov
into
lock
mov
int3
lock
cwde
sar
int
mov
fsub
jg
sub
hlt
dec
ss
stc
cwde
fistp
dec
or
mov
fst
iret
cwde
fcomi
cmps
jmp
mov
and
iret
loope
lock
es
(bad)
or
fisub
(bad)
and
xchg
lock
loope
sbb
hlt
dec
fst
(bad)
and
sbb
imul
in
mov
int3
aaa
and
fisubr
hlt
dec
pop
sbb
dec
test
jge
xchg
movs
enter
test
and
sbb
dec
test
jge
pop
int3
test
fwait
lods
or
xor
and
cmps
frstor
cmp
sbb
pusha
pop
in
or
mov
sbb
and
mov
into
lock
int3
xor
scas
mov
push
pusha
test
scas
mov
dec
frstor
iret
loope
cmc
cmp
sbb
dec
test
jge
pop
int3
test
and
cmp
lods
or
xor
and
ja
fldcw
inc
dec
fistp
leave
cmp
sbb
dec
frstor
dec
loopne
hlt
dec
fst
cmps
xor
dec
push
jno
ret
icebp
dec
daa
cmps
push
dec
push
and
dec
frstor
or
dec
frstor
int
(bad)
mov
jp
xchg
jno
stos
pop
enter
jae
dec
movs
loopne
dec
push
push
cld
movs
rcl
jno
push
std
or
dec
frstor
mov
frstor
pop
fwait
scas
mov
lock
test
int
dec
frstor
mov
fcomi
aaa
sbb
inc
imul
aas
es
enter
fst
sub
xor
jge
dec
movs
loopne
dec
rcl
hlt
dec
fst
jb
and
dec
test
and
inc
push
cld
test
push
xor
mov
fcom
jge
hlt
jbe
fadd
dec
ret
push
push
pusha
jmp
push
and
or
or
cs
or
pusha
jmp
daa
jmp
int3
and
(bad)
das
and
push
dec
pop
and
jge
and
test
mov
dec
movs
loopne
dec
pop
in
or
test
and
xor
loop
cmps
push
and
dec
frstor
sbb
sub
int
push
dec
and
loope
adc
cmps
test
loopne
adc
lods
adc
add
scas
dec
fnsave
sbb
loop
lods
add
or
fild
dec
frstor
nop
and
cmc
mov
sbb
movs
loopne
dec
fisub
dec
test
sti
stc
pop
xlat
sbb
mov
push
out
iret
pusha
(bad)
sub
rcl
or
loope
nop
sbb
stos
inc
imul
fidiv
or
shr
enter
movs
cmps
xor
dec
push
mov
xchg
and
jge
dec
je
push
(bad)
inc
fisubr
retf
or
shr
push
test
es
jns
or
je
hlt
cmps
cmc
jg
dec
push
mov
xchg
and
jge
enter
frstor
dec
rcl
or
(bad)
aas
or
nop
fisttp
mov
mov
hlt
inc
imul
lods
fbld
mov
(bad)
jo
fldenv
inc
imul
lods
fild
mov
push
mov
nop
and
or
loopne
dec
pop
cdq
pop
nop
and
hlt
inc
pop
mov
dec
(bad)
ret
fstp
add
and
or
or
retf
in
pop
push
cld
icebp
dec
frstor
pop
rcr
mov
adc
hlt
pop
frstor
cmps
sub
loop
mov
push
nop
dec
mov
fisttp
or
pop
frstor
shr
retf
or
pop
cli
or
frstor
dec
movs
loopne
dec
pop
sbb
cmps
push
and
dec
mov
or
fild
xor
or
and
sti
mov
(bad)
shr
sub
fcomi
les
sub
and
xor
mov
adc
cmp
iret
sti
pusha
fcomp
mov
push
std
or
dec
frstor
xchg
pop
fisttp
dec
frstor
inc
push
cld
icebp
dec
int
hlt
(bad)
pop
movs
sub
push
and
dec
frstor
hlt
cmp
xor
xor
or
push
mov
fnstenv
pop
enter
sub
and
or
fstp
inc
xchg
add
or
xor
test
retf
or
leave
xor
out
popf
and
fisubr
retf
or
and
hlt
les
sbb
push
std
xor
dec
fisubr
(bad)
shl
sub
xor
or
sbb
test
and
or
sub
or
and
hlt
dec
frstor
clc
and
mov
ds
or
mov
iret
lods
dec
(bad)
or
pop
daa
loopne
loope
hlt
dec
push
mov
xchg
and
ja
movs
daa
test
mov
jno
add
or
dec
mov
ss
fisub
jge
dec
cli
or
and
jg
dec
cli
or
dec
cli
or
and
jg
or
or
and
sahf
push
push
mov
movs
mov
clc
sub
frstor
retf
or
and
or
fstp
imul
sub
ds
or
frstor
outs
mov
jg
imul
clc
sbb
and
xor
inc
frstor
sub
fcomp
(bad)
inc
fisubr
retf
or
push
clc
sub
add
or
shl
(bad)
jmp
sbb
push
xor
outs
jl
hlt
(bad)
dec
rcr
mov
dec
hlt
pop
frstor
cmps
pop
jl
dec
push
mov
std
(bad)
shl
je
aad
sti
retf
out
hlt
dec
push
mov
sti
stc
fstp
sbb
inc
pop
pop
cld
dec
shl
sbb
les
sbb
fsub
dec
pop
into
or
cdq
es
pop
shr
and
jno
add
or
mov
nop
and
icebp
les
sub
pop
sbb
cmp
lods
add
xor
push
jmp
sbb
cmp
lods
add
xor
push
inc
sub
sbb
cmp
push
and
mov
dec
xchg
mov
in
dec
push
nop
loope
pop
fisttp
iret
pop
xchg
mov
and
sbb
pop
push
and
dec
frstor
int3
xor
and
cmp
or
sub
sub
or
push
xor
pop
dec
stos
add
or
add
or
xchg
popa
in
add
or
enter
and
repz
pop
sbb
dec
frstor
dec
test
je
loopne
hlt
dec
frstor
push
pop
sbb
dec
frstor
dec
test
je
loopne
hlt
dec
frstor
inc
pop
sbb
dec
frstor
dec
test
sub
jle
or
pop
pop
cld
dec
test
xlat
sbb
add
or
and
sbb
and
or
sbb
je
ds
or
js
sbb
sub
or
add
sbb
dec
nop
fdivr
enter
and
add
sub
or
scas
hlt
or
loopne
dec
xor
or
xor
or
xchg
jno
xor
or
(bad)
aas
or
repnz
mov
jp
xchg
jno
stos
pop
enter
jae
adc
jecxz
mov
ds
aaa
pop
popa
or
iret
and
mov
ret
jns
movs
jmp
hlt
dec
fst
push
les
out
sbb
test
jge
lahf
and
inc
frstor
mov
push
adc
and
dec
frstor
mov
push
out
lea
iret
out
add
movs
cdq
mov
cmp
dec
sbb
dec
xor
rcl
loope
test
je
and
inc
pop
popa
push
dec
pop
pop
push
pop
scas
shl
mov
dec
fucom
mov
(bad)
inc
dec
frstor
dec
rcl
loope
shl
jne
and
dec
frstor
or
sbb
frstor
and
xchg
mov
clc
in
dec
frstor
je
es
ss
lods
mov
dec
push
out
lods
fisub
ja
fcom
int3
and
popa
cmovle
xchg
mov
sub
(bad)
scas
fisub
je
es
jg
and
mov
dec
clc
in
dec
fstp
je
frstor
dec
pop
popa
cmovnp
push
mov
daa
leave
mov
xlat
shl
iret
cwde
fcomip
iret
cwde
(bad)
iret
mov
popa
or
(bad)
loop
fisubr
inc
sbb
push
repnz
cwde
fcomip
movs
xlat
movs
mov
fsub
les
lods
mov
sub
(bad)
cwde
loopne
or
sub
loopne
hlt
dec
fst
iret
cwde
fcomip
inc
imul
cmp
mov
mov
hlt
and
cmp
lods
push
popa
or
push
dec
or
and
and
frstor
minps
cmc
dec
test
jge
sub
js
dec
sbb
dec
(bad)
repnz
cmc
xor
pushf
xchg
frstor
lods
push
popa
or
push
jnp
adc
out
(bad)
cmp
jb
and
sbb
push
mov
ret
jge
and
or
mov
push
clc
sbb
push
cld
ret
adc
and
test
ret
adc
and
frstor
int3
sbb
mov
sar
hlt
fdivr
cmp
mov
mov
xchg
dec
hlt
mov
sub
dec
xor
jnp
mov
xor
jnp
cmp
hlt
fdivr
mov
pushf
iret
frstor
and
fimul
frstor
sbb
and
mov
or
retf
cmps
mov
push
repnz
movs
sbb
cli
and
jle
iret
xchg
and
mov
(bad)
push
pushf
gs
and
test
popa
add
sbb
movs
and
frstor
dec
and
cmps
mov
push
cld
les
iret
bnd
jge
sub
fild
sbb
and
cmps
sub
dec
push
popa
or
lods
mov
push
jecxz
adc
shl
clc
retf
test
sbb
ror
dec
hlt
daa
pop
and
dec
mov
sahf
dec
mov
pushf
dec
frstor
mov
sub
into
mov
(bad)
sbb
xor
and
or
es
dec
mov
mov
dec
pop
jecxz
and
and
or
lods
xor
iret
loope
hlt
cmp
mov
cmp
jb
or
mov
lea
daa
(bad)
dec
mov
dec
sbb
and
cmps
test
dec
pop
retf
xchg
dec
dec
frstor
adc
lods
adc
lea
lock
xor
jp
fadd
mov
jecxz
ja
and
mov
push
jecxz
dec
mov
hlt
dec
fisttp
and
frstor
(bad)
and
cmps
add
dec
push
loop
mov
push
lock
iret
(bad)
and
fnsave
cmps
(bad)
and
(bad)
and
dec
hlt
ret
movs
mov
xor
cmp
jb
jb
and
sbb
lods
or
and
fs
adc
mov
sbb
popa
or
cmp
into
cwde
fadd
xchg
push
popa
or
pop
and
lds
fstp
cmc
mov
shl
push
das
data16
cmps
lods
jno
dec
mov
push
or
frstor
mov
adc
inc
dec
ret
je
jp
data16
cmps
lea
dec
pop
loopne
or
jns
xor
out
lea
jle
iret
dec
loope
hlt
cmp
loop
jno
arpl
xor
pop
add
mov
push
or
frstor
mov
jnp
adc
out
(bad)
cmp
sbb
jae
adc
scas
add
pop
mov
dec
popa
hlt
dec
sub
(bad)
cwde
fdivr
and
lahf
and
cmps
mov
push
in
fistp
pop
rcl
sar
and
int3
sbb
jbe
push
sbb
xor
das
data16
cmps
popa
jo
dec
test
adc
out
(bad)
cmp
mov
das
gs
or
pop
(bad)
cwde
clc
jge
mov
and
sub
and
sub
and
xor
test
hlt
neg
and
dec
xor
pop
pop
in
test
xchg
mov
popa
cld
inc
push
test
fistp
pop
xlat
cmps
inc
frstor
stc
cwde
(bad)
stc
cdq
and
or
movs
mov
mov
test
adc
cdq
mov
movs
mov
cwde
sub
clc
popf
es
and
fcmovnb
add
sub
and
inc
or
aad
pop
and
or
and
xor
and
mov
push
out
and
and
add
cld
jge
push
popa
clc
inc
push
jg
aad
inc
pop
hlt
hlt
popf
(bad)
mov
hlt
dec
rcl
ss
cwde
sar
lods
cmp
cwde
enter
mov
push
popa
and
sar
sub
fld
cmps
dec
hlt
hlt
sti
clc
mov
sti
loopne
and
int3
dec
fst
pop
(bad)
cwde
hlt
jge
push
popa
clc
inc
push
cld
les
sub
lahf
fsub
les
cld
lds
xchg
aaa
das
dec
mov
fisttp
hlt
pop
popf
and
hlt
xor
fs
fisttp
fcmovu
dec
mov
jle
mov
fisttp
fisttp
cmovge
fisttp
cmovge
fisttp
cmp
mov
fisttp
hlt
(bad)
lahf
and
hlt
and
popf
in
or
mov
fisttp
call
jle
mov
fisttp
xor
dec
mov
jbe
mov
fisttp
sbb
dec
mov
cs
mov
fisttp
sbb
mov
mov
cmps
frstor
dec
test
and
lock
paddusw
fist
lock
jg
aad
fs
aaa
fisttp
ja
fnstenv
fisttp
mov
pop
in
fisttp
ja
fnsave
fisttp
xchg
fisttp
fistp
fcomi
pop
popf
and
ficomp
addr16
(bad)
lahf
and
mov
xchg
dec
aaa
das
dec
mov
fisttp
hlt
pop
popf
and
and
dec
jnp
fisttp
fs
and
push
cmps
fisttp
fs
xor
fs
fisttp
fisttp
fs
dec
mov
fisttp
cmp
dec
mov
mov
dec
mov
fisttp
fs
dec
mov
fisttp
xchg
push
addr16
mov
fisttp
or
dec
mov
lods
das
mov
fisttp
hlt
(bad)
lahf
and
int3
and
push
cmps
fisttp
fs
and
lods
sub
data16
fisttp
fisttp
fs
dec
mov
fisttp
cmp
dec
mov
mov
dec
mov
fisttp
fs
dec
mov
fisttp
in
or
mov
fisttp
or
dec
mov
lods
das
mov
fisttp
fisttp
sub
cmc
mov
out
sbb
mov
push
popa
clc
sub
hlt
out
or
cmc
xchg
push
out
mov
push
out
mov
shl
frstor
hlt
les
int3
retf
mov
pop
lods
mov
dec
test
xor
and
gs
lods
mov
fisttp
dec
frstor
stc
mov
jge
hlt
cmc
ins
mov
cwde
aam
mov
mov
jg
aad
lock
loope
xchg
pop
sbb
cld
dec
sub
sub
and
mov
rcl
hlt
dec
fst
les
sub
rcl
jl
pop
out
frstor
inc
mov
hlt
dec
(bad)
outs
pop
frstor
stc
cwde
(bad)
lea
mov
cmps
test
cld
fst
push
popa
add
push
popa
cld
dec
sub
and
int3
sbb
jge
sub
jge
xor
xchg
mov
sar
clc
cwde
sub
and
or
cmp
mov
cmps
sbb
xor
mov
xor
sahf
stc
dec
fsubp
movs
(bad)
sbb
push
dec
pop
in
inc
sbb
jmp
pop
lods
and
push
out
sbb
lods
add
sub
in
cmp
in
in
or
sub
test
add
cmps
xor
out
(bad)
shl
sti
stc
mov
scas
loopne
ins
jmp
leave
jecxz
data16
(bad)
or
xor
retf
xor
jb
jmp
div
jmp
bound
frstor
inc
mov
jge
fisub
cmp
lahf
and
or
and
int3
sbb
(bad)
cwde
fcomp
pop
pop
retf
frstor
(bad)
enter
fst
lock
adc
mov
fisub
and
lahf
and
or
push
sub
dec
push
popa
or
retf
dec
cwde
fdivr
cmp
xor
mov
pop
popa
or
jl
cmp
adc
jbe
fadd
dec
(bad)
mov
xchg
rcl
inc
popf
sbb
in
or
hlt
into
xor
dec
(bad)
jmp
int3
loop
frstor
xor
out
clc
pmulhw
pop
aam
jge
cmp
fs
repz
mov
hlt
pop
xor
cmps
xor
call
mov
ss
sub
jge
or
mov
push
xor
sbb
add
call
icebp
lahf
adc
jbe
rol
or
ss
add
enter
fst
lock
add
and
sbb
sub
add
leave
xchg
data16
inc
imul
aas
scas
loopne
cmp
mov
push
sub
sbb
add
and
mov
leave
xchg
data16
inc
imul
aas
scas
loopne
xor
sub
lahf
and
inc
out
mov
mov
in
inc
push
sbb
push
cld
test
int3
imul
fisttp
and
frstor
mov
cld
cmps
cmp
popa
adc
xor
hlt
ret
movs
mov
les
sbb
rcr
and
sbb
mov
add
cmp
lds
adc
mov
push
fbld
sbb
jae
loopne
inc
xlat
test
jge
xor
or
movs
loopne
dec
ja
hlt
dec
push
cmp
mov
pop
pmuludq
mov
daa
add
rcr
mov
and
(bad)
or
jecxz
(bad)
daa
lods
popa
mov
fisttp
(bad)
sub
loop
mov
iret
fisub
rcl
mov
mov
into
xor
push
hlt
out
jge
test
jl
loopne
or
fsubr
add
hlt
cmps
icebp
imul
(bad)
fcom
mov
or
fcmovnu
or
sub
fisttp
mov
je
fild
daa
sub
mov
push
mov
movs
cmps
shr
dec
mov
sahf
dec
mov
sahf
dec
mov
pushf
dec
frstor
ret
or
xchg
and
(bad)
pop
ror
mov
fild
or
xchg
and
into
sbb
dec
fisttp
ret
or
(bad)
and
daa
and
mov
and
sbb
xchg
and
mov
ror
mov
int3
outs
pop
frstor
dec
movs
loopne
dec
mov
lahf
and
retf
or
frstor
dec
push
mov
movs
daa
add
mov
push
mov
movs
daa
frstor
iret
xor
fcomi
aaa
sbb
daa
push
aad
dec
mov
add
mov
fisttp
pop
mov
hlt
dec
pop
int3
fmul
and
mov
cmp
or
sbb
and
hlt
daa
mov
es
dec
pop
int3
cld
dec
frstor
mov
out
(bad)
cmp
mov
mov
repz
into
sub
icebp
aaa
sbb
(bad)
and
sar
pop
inc
or
popa
or
push
popa
or
mov
pushf
jo
sub
and
fstp
add
outs
hlt
dec
gs
dec
fst
adc
cwde
aam
mov
xchg
fs
fsub
mov
popa
or
test
mov
mov
xor
cmp
int3
push
add
and
cmp
or
hlt
dec
cmp
push
jno
stos
mov
jne
leave
outs
hlt
dec
and
cmps
add
and
or
int
add
and
dec
pop
loopne
adc
jae
cmp
imul
test
sbb
sub
inc
frstor
int3
sbb
dec
pop
jecxz
or
and
adc
jno
stos
pop
enter
and
ins
mov
test
popa
add
sbb
hlt
ret
movs
ret
movs
and
fbld
dec
mov
sahf
dec
and
mov
sub
pop
xchg
and
inc
sbb
iret
leave
mov
cmp
cmp
fild
cmp
fild
dec
(bad)
xor
retf
mov
iret
mov
jno
and
test
popa
add
sbb
aaa
sbb
mov
test
jg
lds
or
fwait
shl
xor
(bad)
jge
gs
dec
fst
adc
cwde
aam
mov
and
ret
movs
daa
les
dec
mov
or
rcr
add
sub
xor
jmp
mov
lea
dec
mov
or
int
xor
rcr
xor
iret
lods
or
and
fcomp
xchg
and
inc
push
in
adc
shl
jb
lock
lds
(bad)
mov
fst
cmps
popa
popa
hlt
dec
(bad)
int3
mov
or
and
test
popa
add
sbb
int
and
fs
jno
and
mov
and
and
fisttp
lahf
and
inc
xchg
and
in
(bad)
mov
push
(bad)
mov
jmp
(bad)
(bad)
xor
hlt
fdivr
and
hlt
cmps
lahf
and
mov
cwde
fsubr
(bad)
cmp
not
rcl
mov
cld
ret
add
inc
pop
aad
adc
mov
cmps
sbb
jns
mov
cmp
and
mov
(bad)
enter
(bad)
or
cmc
xchg
(bad)
fild
dec
frstor
fst
fldenv
hlt
into
mov
bound
frstor
cmps
pop
and
dec
call
inc
push
push
fmul
loope
hlt
cmp
lods
or
pop
sbb
inc
test
jg
int
hlt
dec
fisttp
rcl
(bad)
cwde
fdivr
popf
iret
mov
pop
xor
lods
xor
cwde
fdivr
in
out
sbb
sub
add
add
int3
loop
frstor
or
lods
ss
pop
lods
mov
mov
xor
(bad)
ss
and
add
sub
jp
xchg
jno
stos
pop
enter
jae
adc
jecxz
mov
push
popa
add
cwde
enter
rcl
(bad)
cwde
aam
cmps
adc
dec
push
popa
or
sbb
adc
sbb
and
frstor
mov
in
rcr
pop
rcl
test
push
inc
and
int3
sub
(bad)
iret
cmp
popa
or
iret
mov
inc
imul
(bad)
and
and
mov
sbb
(bad)
and
and
add
loopne
mov
push
jno
(bad)
or
mov
lahf
and
cmps
sub
dec
pop
loopne
sub
popa
or
popa
or
xchg
push
popa
add
cwde
clc
jge
add
popa
and
cwde
aam
or
jnp
adc
out
(bad)
cmp
stos
lahf
and
sbb
jae
sti
xchg
cmps
(bad)
into
sbb
mov
cmps
push
mov
pop
sbb
(bad)
sub
test
or
and
cmps
cmp
or
push
sub
xor
scas
das
hlt
dec
pop
cdq
or
and
hlt
cmp
ja
inc
cdq
and
jle
int
inc
frstor
mov
push
loopne
jno
hlt
dec
push
mov
dec
push
frstor
mov
and
or
pusha
cld
or
and
or
mov
mov
fstp
out
lock
fnsave
sysexit
xchg
mov
(bad)
or
sub
dec
fstp
add
int3
loop
frstor
or
lods
jno
and
or
sbb
cmp
popf
movs
enter
or
les
or
xor
cmps
xor
loop
frstor
sbb
hlt
mov
sub
mov
sbb
add
hlt
mov
fmul
mov
int3
inc
or
and
mov
int3
bound
frstor
(bad)
sub
ja
fcomp
daa
(bad)
dec
and
sbb
fwait
and
int3
sbb
ds
and
not
and
dec
inc
ror
ins
xor
popf
xchg
dec
frstor
repnz
or
lahf
and
cmps
and
into
xor
test
and
inc
frstor
(bad)
sub
ja
fcomp
daa
(bad)
dec
and
sbb
fwait
and
int3
sbb
js
data16
mov
fmul
mov
int3
mov
frstor
mov
int3
or
frstor
(bad)
sub
ja
fcomp
daa
(bad)
dec
and
sbb
fwait
and
int3
sbb
dec
xor
popf
dec
and
mov
mov
and
idiv
ror
mov
(bad)
dec
mov
dec
or
and
mov
fild
or
and
or
mov
add
out
cwde
and
int3
sbb
jne
add
xor
popf
dec
and
mov
mov
data16
mov
fmul
mov
int3
outs
or
and
mov
dec
(bad)
mov
and
or
frstor
mov
fstp
ins
mov
mov
data16
mov
fmul
mov
int3
xchg
or
and
mov
movs
xor
and
daa
(bad)
mov
and
sbb
cwde
and
int3
sbb
dec
cwde
and
not
and
dec
inc
ror
ins
xor
popf
xchg
dec
frstor
repnz
or
lahf
and
cmps
sub
loopne
(bad)
sub
int3
ds
and
cmps
fisub
(bad)
sub
cmps
daa
and
mov
push
cdq
sub
adc
mov
movs
mov
xor
retf
or
lahf
and
cmps
jno
hlt
dec
pop
loopne
cmps
push
pusha
hlt
dec
fs
dec
fnstsw
icebp
xor
int3
mov
frstor
(bad)
sub
cmps
les
or
sub
hlt
sbb
cmps
xor
loop
push
frstor
push
cdq
and
not
and
dec
inc
ror
pop
mov
pop
or
and
or
pop
loopne
cmps
icebp
pusha
hlt
dec
fs
dec
fnstsw
icebp
xor
dec
aas
mov
and
or
frstor
mov
fstp
ins
mov
mov
data16
mov
fmul
mov
int3
ror
frstor
mov
movs
add
(bad)
and
daa
dec
aam
dec
and
les
or
sub
sti
mov
frstor
mov
fstp
ins
mov
mov
data16
mov
fmul
mov
int3
sub
lods
add
cmp
or
sbb
jp
frstor
(bad)
sub
ja
fcomp
daa
(bad)
dec
and
sbb
sahf
and
int3
sbb
es
and
not
and
dec
inc
ror
ins
xor
popf
xchg
dec
frstor
repnz
or
lahf
and
cmps
mov
dec
pop
loopne
int3
mov
mov
push
xchg
(bad)
dec
xor
cmc
dec
fucom
jno
fstp
or
aam
mov
sbb
or
pop
in
or
and
or
or
mov
ret
sbb
loop
repnz
cdq
xor
loope
jge
fs
dec
fnstsw
xchg
sbb
frstor
cmc
xchg
enter
(bad)
xor
repz
or
or
dec
dec
fstp
or
mov
add
dec
fstp
or
xor
cmps
xor
mov
jne
sbb
or
shl
or
sub
or
pop
and
mov
je
retf
or
lahf
and
cmps
test
loopne
test
ret
sbb
loop
or
and
dec
inc
ror
pop
mov
add
fstp
inc
mov
fimul
cmps
mov
loopne
cmps
std
data16
dec
fs
dec
fnstsw
icebp
xor
dec
aas
mov
and
or
frstor
mov
fstp
ins
mov
mov
data16
mov
fmul
mov
int3
out
or
aad
jno
and
or
frstor
mov
ror
mov
scas
jno
and
or
in
or
and
or
pop
enter
lods
add
sub
and
call
mov
int
dec
frstor
repnz
mov
sub
fsub
into
sub
lds
scas
mov
fsub
dec
fstp
or
jbe
dec
(bad)
or
pop
enter
fild
or
and
or
xor
cmps
xor
test
ja
and
fsub
mov
jecxz
(bad)
pusha
out
or
cmp
or
pop
loopne
mov
lods
xor
pop
and
mov
je
clc
pop
out
or
sub
or
frstor
retf
or
and
ja
fldcw
or
and
adc
fstp
and
or
lahf
and
cmps
xor
pop
loopne
(bad)
sub
int3
xor
frstor
(bad)
sub
ja
fcomp
daa
adc
dec
and
sbb
popf
and
int3
sbb
out
popf
and
not
and
dec
inc
ror
pop
mov
add
fstp
inc
mov
fimul
cmps
sbb
loopne
cmps
mov
cs
dec
fnstsw
icebp
xor
dec
in
mov
and
or
frstor
fnstsw
sub
daa
leave
dec
fstp
jno
and
or
pop
and
mov
je
cli
and
int3
ds
shr
or
sub
and
or
out
mov
and
sbb
popf
and
int3
sbb
inc
popf
and
not
and
dec
inc
ror
pop
mov
add
fstp
inc
mov
fimul
cmps
cmc
fs
dec
pop
loopne
(bad)
sub
int3
sub
and
inc
frstor
(bad)
sub
ja
fcomp
daa
push
aam
dec
and
sbb
loop
hlt
int3
sbb
mul
and
not
and
dec
inc
ror
pop
mov
pop
or
and
or
pop
loopne
daa
out
aam
dec
and
sbb
loop
hlt
int3
sbb
and
and
mov
and
or
sbb
xchg
and
inc
frstor
(bad)
sub
ja
fcomp
cmps
mov
inc
hlt
dec
fnstsw
dec
mov
fimul
sbb
jae
adc
and
int3
sbb
jb
and
not
and
dec
inc
ror
pop
mov
add
fstp
inc
mov
fimul
cmps
sbb
cld
cmps
lds
hlt
dec
fs
dec
fnstsw
icebp
xor
dec
aas
mov
and
or
frstor
add
and
jge
xor
popf
dec
and
mov
mov
data16
mov
fmul
mov
int3
bnd
and
mov
int3
ss
and
inc
frstor
(bad)
sub
ja
fcomp
cmps
ins
sbb
dec
fs
hlt
dec
fnstsw
dec
mov
fimul
sbb
jae
loop
and
int3
sbb
sub
mov
fmul
mov
int3
dec
jno
and
mov
lods
add
sub
sbb
dec
fs
dec
fnstsw
icebp
xor
dec
in
mov
and
or
frstor
add
fstp
inc
mov
fimul
cmps
pop
sbb
dec
pop
loopne
cmps
loope
hlt
dec
fs
dec
fnstsw
icebp
xor
dec
in
mov
and
or
frstor
add
fstp
inc
mov
fimul
cmps
xchg
sbb
dec
pop
loopne
not
ret
sbb
loop
mov
xlat
and
dec
inc
ror
pop
mov
pop
or
and
or
pop
loopne
ret
or
and
or
lahf
and
cmps
or
hlt
dec
pop
loopne
cmps
imul
hlt
dec
fnstsw
icebp
xor
dec
in
mov
and
or
frstor
cmc
mov
sub
fmul
mov
int3
dec
jb
and
mov
int3
xor
dec
inc
frstor
(bad)
sub
ja
fcomp
daa
(bad)
dec
and
sbb
loopne
hlt
int3
sbb
push
loopne
hlt
div
ror
pop
cli
and
sbb
or
xor
int3
mov
frstor
mov
lods
add
sub
sbb
dec
fs
dec
fnstsw
icebp
xor
dec
in
mov
and
or
frstor
sbb
and
or
pop
loopne
cmps
xor
cs
dec
fnstsw
icebp
xor
dec
in
mov
and
or
frstor
cmps
pop
frstor
repnz
hlt
not
and
dec
inc
ror
ins
xor
popf
xchg
dec
frstor
repnz
or
lahf
and
cmps
jne
hlt
dec
pop
loopne
daa
or
xchg
or
loope
hlt
int3
sbb
dec
mov
sahf
dec
mov
sahf
dec
mov
hlt
dec
popf
fild
dec
(bad)
or
sub
fild
and
or
mov
jns
sub
or
and
or
and
sbb
in
hlt
mov
int3
or
frstor
cli
and
or
fstp
test
and
jge
mov
dec
ja
and
retf
or
sub
jge
fisttp
mov
loop
adc
shl
and
das
push
pusha
arpl
sub
jge
and
jecxz
or
and
je
(bad)
mov
jecxz
stc
cwde
(bad)
push
mov
movs
cmps
adc
and
leave
xor
ret
or
frstor
cmps
fwait
aam
mov
loopne
iret
cwde
fcomi
lds
call
fisttp
lahf
and
dec
frstor
cmps
call
or
fisttp
lahf
and
movs
xor
daa
fisub
iret
xor
cmps
xor
fadd
mov
jecxz
xchg
jno
stos
pop
enter
and
sbb
dec
dec
pop
stos
and
mov
and
or
sbb
or
popa
cld
iret
in
sti
fistp
mov
jg
aad
clc
dec
fsub
dec
push
test
jne
inc
arpl
dec
in
(bad)
jge
pop
loop
sbb
scas
mov
dec
lahf
lods
popa
out
and
or
and
jb
or
and
(bad)
pop
pop
or
and
or
push
jno
les
or
fsubr
jge
inc
(bad)
mov
int3
loop
frstor
mov
xchg
push
mov
fistp
in
hlt
(bad)
pop
push
or
and
or
push
jno
les
or
fsubr
or
mov
cmc
ret
cmc
or
and
dec
dec
xlat
and
mov
and
or
sbb
lahf
and
xchg
and
(bad)
pop
mov
mov
lods
or
and
dec
hlt
ret
or
out
hlt
cmps
mov
int3
mov
dec
fsub
ret
or
xor
daa
imul
hlt
dec
pop
int3
cdq
mov
stc
sub
sbb
jmp
hlt
jle
int
dec
frstor
dec
xor
lods
or
and
and
or
pop
nop
or
call
mov
mov
fild
and
or
and
inc
(bad)
and
or
and
inc
out
and
or
push
mov
movs
cmps
cmp
or
pop
mov
xor
into
jb
jb
and
(bad)
and
adc
hlt
dec
mov
sbb
and
or
xor
lods
or
and
nop
or
and
or
frstor
jnp
fisttp
(bad)
pop
mov
or
and
dec
hlt
ret
or
in
hlt
int3
sbb
jge
in
fdivr
sbb
mov
frstor
retf
or
mov
fisttp
dec
(bad)
jno
and
or
sbb
or
cmp
mov
and
or
sbb
or
xor
jge
retf
or
and
or
mov
sahf
dec
mov
sahf
dec
mov
sahf
dec
push
mov
movs
and
frstor
dec
frstor
cli
jne
or
frstor
hlt
mov
mov
mov
dec
out
lahf
and
xor
data16
ret
or
in
hlt
int3
sbb
retf
or
sub
(bad)
or
mov
sbb
frstor
push
mov
test
and
retf
or
and
or
push
cmp
push
push
scas
daa
fstp
xor
movs
xor
in
and
int3
pusha
mov
mov
and
inc
mov
add
(bad)
out
jp
and
dec
fsub
ret
or
inc
adc
dec
mov
pushf
and
pop
fmul
mov
je
pcmpgtd
or
sbb
leave
mov
and
cmp
cmps
push
shl
fisttp
dec
cmp
inc
(bad)
mov
movs
xor
shl
shl
or
jecxz
and
and
retf
or
frstor
retf
or
mov
hlt
dec
mov
or
jns
or
(bad)
xor
and
jbe
frstor
retf
or
pop
and
sbb
mov
push
jns
lock
xchg
inc
push
fadd
test
popa
add
sbb
test
popa
sbb
sbb
add
lods
sub
mov
sub
jmp
inc
jge
and
mov
push
jecxz
cmp
int3
jle
frstor
mov
frstor
mov
frstor
clc
cwde
(bad)
clc
mov
cmc
lahf
rcl
sti
clc
mov
jns
int
movs
and
frstor
cmp
and
(bad)
pop
pop
call
(bad)
cwde
sar
jns
lds
popf
je
fsubrp
and
int3
sbb
or
aad
add
sbb
push
hlt
dec
push
fdiv
mov
jecxz
cmp
sub
and
movs
cmps
and
push
in
push
or
cdq
and
inc
push
or
cdq
xor
pop
xor
ja
clc
cwde
fidivr
(bad)
sti
clc
mov
cmc
lahf
rcl
in
(bad)
int3
ss
and
or
dec
push
sbb
and
sahf
out
and
(bad)
sbb
xor
out
and
ret
movs
sbb
jb
jle
and
(bad)
and
scas
mov
cmp
push
jno
stos
gs
jmp
(bad)
cmps
jle
and
sbb
pop
cmps
pop
mov
mov
push
mov
jge
(bad)
jge
sbb
mov
frstor
retf
or
cmp
inc
sbb
frstor
retf
dec
and
dec
push
(bad)
mov
jecxz
mov
loopne
mov
int3
xchg
jp
and
mov
sub
inc
xchg
sub
in
and
(bad)
and
adc
xor
popa
les
mov
cmp
dec
pop
jecxz
inc
frstor
retf
or
cmp
int3
mov
frstor
mov
loopne
mov
int3
cli
jp
and
mov
sub
inc
xchg
sub
in
and
(bad)
and
adc
pop
in
in
dec
pop
retf
and
and
adc
ror
hlt
cmps
mov
jb
les
mov
add
sbb
test
and
jge
mov
frstor
outs
in
and
(bad)
sub
lods
sub
iret
loope
hlt
cmp
cs
daa
jbe
xchg
fisttp
int3
sbb
sbb
hlt
sbb
and
dec
frstor
add
and
jg
sub
loop
add
hlt
ret
adc
and
jmp
sub
shr
and
not
and
dec
inc
ror
pop
mov
pop
or
cmp
lahf
ror
xor
scas
repnz
fst
adc
pop
enter
lods
xor
fs
dec
fnstsw
icebp
xor
int3
mov
sub
and
(bad)
sub
cmps
ret
adc
and
pop
xor
ret
adc
and
add
and
int3
sbb
(bad)
jmp
and
dec
inc
ror
pop
mov
pop
or
cmp
outs
ror
xor
adc
dec
cmp
adc
dec
frstor
lds
out
and
not
and
dec
inc
ror
pop
mov
pop
or
cmp
das
ror
xor
jecxz
dec
fstp
ins
mov
mov
and
idiv
ror
scas
and
mov
dec
push
cdq
hlt
scas
and
mov
dec
pop
loopne
mov
xor
pop
sub
hlt
ret
adc
and
sub
hlt
ret
adc
and
out
and
int3
sbb
jne
fadd
dec
xor
popf
dec
and
mov
mov
data16
ret
adc
and
out
and
int3
sbb
inc
sub
hlt
ret
adc
and
out
and
int3
sbb
dec
xor
popf
dec
and
mov
mov
data16
ret
adc
and
out
and
int3
sbb
dec
sub
hlt
ret
adc
and
out
and
int3
sbb
cmps
out
and
not
and
dec
inc
ror
xor
dec
fstp
ins
mov
ffree
or
lahf
and
repnz
or
frstor
mov
dec
fnstsw
ffree
or
frstor
mov
pushf
fisttp
frstor
test
and
jge
xor
popf
dec
and
mov
mov
data16
ret
adc
and
out
and
int3
sbb
add
data16
ret
adc
and
out
and
int3
sbb
push
out
and
not
and
dec
inc
ror
pop
mov
pop
or
cmp
dec
(bad)
dec
frstor
add
(bad)
or
xor
cmps
xor
aam
mov
out
and
not
and
dec
inc
ror
pop
mov
pop
or
cmp
or
dec
frstor
clc
ret
adc
and
xor
ret
adc
and
in
and
int3
sbb
sub
hlt
not
and
dec
inc
ror
pop
mov
pop
or
cmp
iret
lds
cmps
xor
and
or
cmp
repz
cmps
xor
aam
mov
in
and
not
and
dec
inc
ror
pop
mov
pop
or
cmp
pop
dec
frstor
lds
popf
sbb
frstor
into
sbb
dec
fnsave
repnz
or
lahf
and
repnz
or
frstor
mov
int3
ret
and
inc
frstor
(bad)
sub
ja
fcomp
daa
(bad)
dec
push
mov
movs
cmps
mov
cld
(bad)
sub
shr
and
mov
push
mov
movs
cmps
jmp
loopne
cmps
sub
cs
dec
fnstsw
icebp
xor
dec
in
mov
ffree
or
frstor
mov
int3
ds
and
inc
frstor
(bad)
sub
ja
fcomp
cmps
gs
dec
fs
hlt
dec
fnstsw
dec
dec
cmp
jl
or
cmp
mov
dec
frstor
sbb
cmp
fwait
les
cmps
xor
and
dec
mov
sahf
dec
mov
pushf
dec
frstor
sbb
pop
(bad)
lods
jno
add
or
xor
jno
cmp
(bad)
dec
hlt
ret
sub
pusha
and
mov
jae
cli
and
or
fstp
inc
mov
fisttp
cmps
in
or
dec
gs
dec
fst
adc
pop
les
mov
lods
xor
fs
dec
push
aam
mov
xchg
aaa
sbb
mov
mov
lock
add
adc
fmul
rcl
(bad)
pop
mov
xor
js
or
(bad)
jge
in
sar
aad
sbb
lock
les
and
or
frstor
retf
or
mul
pop
xor
int3
dec
mov
in
fdivr
mov
sbb
(bad)
out
frstor
mov
xor
dec
push
mov
movs
cmps
or
cmc
dec
(bad)
or
mov
sbb
lahf
and
dec
frstor
cmps
sbb
or
sbb
and
daa
fldenv
or
pop
nop
or
mul
(bad)
and
fild
and
or
mov
movs
cmps
fisttp
mov
loopne
inc
sbb
and
daa
jge
mov
push
mov
movs
cmps
cdq
or
dec
push
mov
movs
ret
or
repnz
cmps
push
ror
push
mov
jge
(bad)
jge
mov
sahf
dec
push
mov
movs
cmps
ins
or
dec
pop
loopne
(bad)
and
jecxz
mul
fisttp
or
and
mov
or
frstor
or
cmp
mov
and
mov
(bad)
or
xor
jge
retf
or
and
or
mov
sahf
dec
mov
sahf
dec
mov
sahf
dec
push
mov
movs
and
frstor
dec
frstor
cli
jne
or
frstor
hlt
mov
test
mov
dec
out
lahf
and
xor
data16
ret
or
repz
int3
sbb
retf
or
sub
jno
and
or
mov
sbb
frstor
push
mov
test
and
retf
or
fisttp
jae
push
cmp
sub
jo
fsub
daa
fst
hlt
dec
xor
lods
or
and
and
fs
(bad)
fisttp
daa
mov
mov
push
mov
movs
cmps
(bad)
xchg
or
and
hlt
dec
shl
jns
push
fisttp
mov
ja
xor
sbb
dec
frstor
dec
and
jns
push
fisttp
mov
int3
push
frstorw
dec
push
mov
movs
mov
mov
mov
int3
es
or
or
dec
(bad)
mov
sti
fimul
dec
jmp
mul
pop
mov
sbb
lock
int3
sbb
std
(bad)
inc
xor
cmps
dec
push
hlt
dec
push
mov
ja
out
jge
(bad)
cmps
mov
mov
mov
int3
ds
and
ja
ror
jmp
pop
mov
sbb
lea
cli
dec
(bad)
mov
mov
mov
cmps
xor
jecxz
jp
and
cmps
inc
or
push
dec
frstor
dec
push
mov
movs
cmps
test
hlt
dec
push
fdiv
mov
jecxz
dec
and
sbb
hlt
and
mov
or
and
pop
frstor
jg
inc
(bad)
mov
and
(bad)
jge
cmp
pop
and
sbb
mov
push
jns
lock
pusha
pop
retf
mov
frstor
cmps
cmp
or
test
sbb
hlt
and
les
xor
and
frstor
dec
frstor
sbb
ja
cli
hlt
and
mov
sub
(bad)
hlt
dec
mov
sbb
and
or
je
dec
mov
popf
and
dec
mov
sbb
hlt
and
(bad)
sbb
test
popa
add
sbb
sbb
test
sbb
cli
and
sbb
lods
or
and
fsubr
sbb
dec
int
hlt
cmps
std
add
dec
mov
or
das
jmp
dec
icebp
mov
sub
(bad)
hlt
and
(bad)
sbb
xor
xchg
lods
or
and
sub
dec
push
mov
movs
sbb
dec
cmc
mov
sub
(bad)
or
and
ja
rcr
or
push
aam
pop
push
(bad)
mov
jecxz
dec
mov
into
frstorw
adc
mov
pop
mov
jge
sub
jge
and
popa
or
iret
pushf
(bad)
and
sub
and
xor
ret
movs
cmps
mov
hlt
dec
push
popa
sbb
mov
pushf
or
and
mov
movs
inc
or
frstor
clc
cwde
fidiv
fidiv
xor
ret
movs
cmps
cmc
pmuludq
loopne
ret
movs
and
frstor
jp
mov
dec
frstor
hlt
sub
popa
or
popa
or
and
in
aaa
sbb
pop
mov
out
in
cli
(bad)
and
dec
hlt
and
fisttp
and
fisttp
daa
dec
and
sahf
dec
mov
sahf
pop
xor
lods
xor
xor
ror
dec
cmc
sbb
xchg
mov
xor
dec
cmc
sbb
mov
dec
(bad)
xor
and
je
lahf
and
mov
and
and
and
fsub
pushf
and
cmps
cmc
and
and
and
call
xchg
cmc
and
(bad)
and
dec
cmc
sbb
mov
dec
fisttp
sbb
mov
dec
fisttp
sbb
xchg
mov
xor
dec
cmc
sbb
xchg
mov
xor
movs
sbb
stc
and
and
and
(bad)
out
and
xor
and
and
and
add
pushf
and
and
and
(bad)
and
fdivr
mov
mov
fld
hlt
cmps
mov
dec
mov
mov
xlat
outs
data16
cmps
cdq
or
dec
gs
movs
dec
fst
adc
cwde
fdivr
cmp
mov
jnp
into
aaa
jge
in
fdivr
mov
or
mov
dec
fld
pushf
call
shl
add
dec
mov
or
xchg
mov
xor
xchg
loopne
and
call
ror
data16
cmps
dec
add
dec
push
fadd
test
popa
or
sbb
mov
or
(bad)
xchg
and
imul
daa
or
or
mov
dec
fisttp
mov
cmp
(bad)
mov
dec
jge
hlt
daa
or
or
xor
call
int3
fisubr
and
aaa
ins
data16
daa
or
or
mov
dec
frstor
hlt
and
jb
hlt
cmps
fld
hlt
dec
jle
pop
paddusw
popf
and
mov
adc
loopne
and
mov
and
ror
data16
cmps
add
hlt
dec
jle
pop
push
fisttp
popf
and
mov
adc
lahf
and
sahf
sti
and
(bad)
and
jnp
mov
cmp
cmps
mov
or
and
leave
mov
and
cmps
stos
fmul
mov
loop
mov
xor
cmps
xor
sub
push
frstor
hlt
and
sti
and
into
xor
mov
lea
xchg
clc
and
and
jb
hlt
and
and
mov
lea
add
mov
sahf
dec
mov
hlt
iret
lea
lahf
and
cmps
xor
daa
frstor
hlt
dec
xor
xchg
dec
and
shl
and
dec
lea
les
cmps
sbb
lea
and
pop
je
xor
hlt
daa
aas
leave
mov
mov
sbb
sti
and
in
(bad)
add
sbb
mov
adc
fisttp
mov
pusha
inc
push
fisttp
frstor
or
int3
nop
pop
mov
sahf
pop
mov
hlt
iret
lea
lahf
and
lods
xor
and
frstor
das
ins
data16
and
fisttp
and
fisttp
and
frstor
dec
mov
sahf
inc
mov
sbb
sti
and
(bad)
sbb
sbb
mov
dec
fisttp
mov
adc
fisttp
mov
pusha
inc
push
fisttp
daa
jmp
hlt
dec
mov
sahf
addr16
hlt
dec
lea
lahf
and
lods
xor
and
frstor
xor
into
xor
ror
hlt
mov
adc
fisttp
mov
pusha
inc
push
fisttp
daa
(bad)
es
dec
mov
sahf
addr16
hlt
dec
lea
lahf
and
lods
xor
and
frstor
out
outs
data16
and
jb
hlt
and
ins
gs
and
frstor
out
frstor
and
fnsave
xor
daa
aas
leave
mov
mov
sbb
clc
and
in
ror
or
mov
jp
xchg
mov
mov
pushf
aaa
fsub
daa
arpl
dec
mov
pushf
dec
frstor
daa
dec
enter
(bad)
sbb
leave
add
dec
jle
pop
push
fisttp
mov
adc
fisttp
mov
inc
inc
or
mov
and
pop
mov
hlt
iret
lea
lahf
and
ret
hlt
and
frstor
cmps
jo
hlt
into
sbb
dec
fisttp
lahf
and
dec
mov
cmc
dec
fnsave
stc
and
daa
mov
and
or
and
mov
int3
pop
push
(bad)
jb
frstor
dec
and
shl
and
dec
and
xchg
call
and
and
frstor
xor
lea
lahf
and
ret
hlt
and
frstor
iret
ins
data16
and
jb
hlt
and
ins
data16
daa
icebp
and
pushf
in
and
daa
jae
hlt
dec
mov
hlt
iret
lea
lahf
and
ret
hlt
and
frstor
arpl
hlt
test
ret
jge
xor
fimul
mov
and
jp
mov
jp
xchg
mov
mov
sahf
je
ret
fisttp
frstor
dec
frstor
daa
scas
enter
(bad)
sbb
sub
mov
or
fisub
and
jb
hlt
and
ins
gs
and
frstor
mov
and
daa
leave
and
hlt
dec
lea
lahf
and
lods
xor
and
frstor
cmp
and
jb
hlt
and
ins
gs
and
lds
hlt
dec
fisttp
fnsave
xor
daa
aas
leave
mov
mov
sbb
(bad)
and
in
in
lea
jp
mov
jp
xchg
mov
mov
pushf
mov
and
daa
in
and
pushf
dec
frstor
daa
(bad)
enter
(bad)
sbb
loope
hlt
dec
jle
pop
push
(bad)
xor
jb
hlt
and
ins
gs
and
xchg
and
hlt
dec
fisttp
fnsave
xor
daa
aas
leave
mov
mov
sbb
jmp
in
dec
xchg
mov
mov
or
mov
jp
xchg
mov
mov
pushf
arpl
and
daa
dec
and
dec
mov
pushf
dec
frstor
dec
mov
sbb
frstor
mov
and
in
pop
xchg
mov
mov
or
mov
jp
xchg
mov
mov
pushf
int
and
daa
push
and
dec
mov
pushf
dec
frstor
dec
mov
sbb
frstor
retf
hlt
in
rol
mov
jecxz
dec
and
shl
and
dec
and
xchg
call
or
xchg
frstor
and
pop
je
xchg
sub
hlt
daa
aam
mov
mov
test
mov
frstor
addr16
hlt
and
jb
hlt
and
ins
data16
and
sub
dec
mov
pushf
dec
frstor
dec
mov
sbb
frstor
inc
jmp
in
std
mov
jp
mov
jp
xchg
mov
mov
pushf
aam
and
daa
je
hlt
dec
mov
pushf
dec
frstor
dec
mov
sbb
or
inc
or
and
dec
call
mov
push
jecxz
cs
or
sub
sbb
mov
or
dec
addr16
jecxz
ja
and
mov
test
sbb
sub
or
sbb
lahf
and
cmps
ror
mov
loopne
in
aad
mov
push
(bad)
mov
jecxz
dec
and
cld
loopne
and
cs
and
(bad)
and
enter
popa
add
mov
cmps
outs
frstor
dec
and
shl
and
dec
mov
add
push
popa
or
cwde
aam
and
frstor
pop
mov
add
mov
fbld
cmps
stc
add
inc
push
fisttp
mov
adc
fisttp
pop
mov
jg
and
int3
nop
pop
mov
sahf
pop
mov
hlt
iret
lea
lahf
and
lods
xor
and
frstor
dec
jb
hlt
(bad)
and
dec
hlt
mov
adc
fisttp
mov
pusha
inc
push
fisttp
frstor
or
int3
nop
pop
mov
sahf
pop
mov
hlt
iret
lea
lahf
and
lods
xor
and
frstor
das
ins
data16
and
fisttp
and
fisttp
and
frstor
dec
mov
sahf
inc
mov
sbb
std
and
(bad)
sbb
sbb
mov
dec
fisttp
mov
adc
fisttp
mov
inc
inc
or
mov
dec
test
data16
daa
push
enter
and
push
std
and
in
xor
fdiv
mov
jecxz
int
data16
and
frstor
jp
mov
dec
fisttp
lahf
and
dec
mov
cmc
dec
fstp
shl
cmp
dec
pop
sbb
and
cmp
dec
hlt
and
frstor
jp
mov
dec
(bad)
loopne
fisttp
daa
xchg
and
sbb
pushf
and
inc
and
and
jb
hlt
and
ins
data16
daa
icebp
and
sahf
pop
mov
pushf
dec
frstor
dec
mov
sbb
jns
hlt
dec
jle
inc
or
frstor
test
popa
sbb
sbb
mov
adc
fisttp
mov
inc
inc
or
frstor
jae
xor
fisub
pop
mov
add
mov
xor
xchg
loopne
and
jl
fisttp
and
jb
hlt
and
ins
gs
and
frstor
and
dec
hlt
dec
fnsave
xor
daa
aas
leave
mov
mov
sbb
ret
in
test
ror
xor
and
dec
and
shl
and
dec
and
mov
pushf
and
pop
mov
pushf
enter
daa
push
and
dec
mov
hlt
dec
lea
lahf
and
lods
xor
and
frstor
jg
gs
and
jb
hlt
and
ins
gs
and
frstor
out
frstor
and
fnsave
xor
daa
aas
leave
mov
mov
sbb
ret
and
in
sub
jecxz
inc
frstor
dec
and
shl
and
dec
and
mov
pushf
and
pop
mov
pushf
neg
and
daa
jge
hlt
dec
mov
hlt
dec
lea
lahf
and
lods
xor
and
frstor
fld
hlt
and
jb
hlt
and
ins
gs
and
frstor
test
ret
dec
hlt
dec
fnsave
ss
daa
aas
leave
mov
mov
sbb
ret
and
in
mov
and
jp
mov
jp
xchg
mov
mov
pushf
mov
and
daa
and
dec
mov
pushf
dec
frstor
daa
or
dec
mov
sbb
and
test
fisttp
mov
adc
fisttp
mov
inc
inc
or
pop
and
dec
mov
sahf
pop
mov
hlt
iret
lea
lahf
and
inc
xor
daa
frstor
hlt
dec
xor
xchg
jmp
jge
mov
or
mov
jp
xchg
mov
mov
sahf
addr16
sahf
pop
mov
hlt
iret
lea
lahf
and
inc
xor
daa
frstor
hlt
dec
xor
xchg
loopne
and
dec
and
shl
and
dec
and
xchg
call
inc
sahf
adc
movs
movs
daa
add
mov
mov
sbb
frstor
add
and
in
std
mov
jp
mov
jp
xchg
mov
mov
pushf
aam
and
daa
popf
and
pushf
dec
frstor
dec
mov
sbb
leave
cmp
dec
jle
inc
or
and
jge
in
fdivr
xor
jnp
xchg
jno
stos
pop
enter
jae
sbb
xor
fisttp
daa
pop
and
dec
mov
sahf
dec
mov
pushf
dec
frstor
mov
sub
mov
sbb
pusha
dec
frstor
dec
mov
push
push
frstor
jge
and
cmps
fnstsw
hlt
dec
pop
inc
or
popa
add
and
into
sbb
mov
lea
mov
(bad)
fild
or
frstor
int3
sbb
and
mov
pop
or
lahf
and
cmp
fild
mov
cmps
xor
popa
or
sbb
dec
lock
movs
mov
xor
jo
data16
daa
fsub
iret
xor
cmps
xor
fadd
mov
jecxz
adc
shl
and
dec
jg
jmp
sub
jge
and
or
xchg
aaa
hlt
dec
mov
xor
(bad)
or
xor
int3
retf
and
inc
frstor
(bad)
sub
jge
push
jns
iret
mov
dec
jne
lahf
and
retf
or
frstor
xor
sbb
test
or
xor
lods
add
sub
fcomi
cmp
dec
dec
mov
fisttp
mov
int3
mov
frstor
xor
and
or
and
or
xor
movs
mov
loopne
mov
push
mov
movs
cmps
lds
dec
pop
loop
add
and
xor
and
or
and
or
xor
movs
mov
add
mov
push
mov
movs
cmps
cmp
hlt
dec
pop
pop
or
xor
hlt
ret
or
retf
iret
mov
dec
inc
(bad)
lahf
and
retf
or
frstor
dec
pop
pop
or
xor
hlt
ret
or
retf
iret
mov
dec
in
lahf
and
retf
or
frstor
xor
sub
or
and
or
xor
movs
add
and
iret
mov
dec
mov
retf
or
frstor
xor
sub
or
and
or
xor
dec
hlt
and
lahf
and
sbb
data16
ret
or
jae
hlt
cmps
call
or
lahf
and
(bad)
gs
cmps
test
or
(bad)
into
push
frstor
mov
lods
add
sub
fimul
mov
jg
(bad)
fldenv
(bad)
cmp
sbb
jae
cmp
fwait
retf
dec
movs
gs
inc
mov
lods
mov
push
jecxz
mov
frstor
cmps
adc
jo
dec
push
jno
sbb
int3
dec
mov
aad
xor
ror
sbb
mov
dec
frstor
hlt
adc
and
(bad)
cmp
hlt
sbb
jae
shr
ds
rol
and
add
sbb
lahf
and
retf
or
frstor
mov
and
not
and
dec
inc
ror
mov
movs
dec
mov
test
pushf
push
pop
leave
add
retf
and
(bad)
sub
movs
dec
mov
test
pushf
push
push
data16
ret
add
retf
and
iret
pusha
xlat
or
and
sbb
test
or
xor
movs
dec
mov
test
pushf
xor
data16
ret
add
enter
adc
hlt
dec
sub
jge
cmp
loop
repnz
mov
push
in
dec
out
dec
push
mov
movs
cmps
imul
pop
mov
fcomi
cmp
dec
pop
mov
ror
mov
int3
outs
pop
frstor
repnz
mov
push
in
pop
out
dec
push
mov
movs
cmps
pop
xor
dec
push
aam
mov
fmul
mov
push
in
scas
out
dec
push
mov
movs
cmps
mov
cdq
pop
mov
(bad)
cmp
dec
lea
ror
mov
int3
mov
frstor
repnz
mov
push
in
ins
out
dec
push
mov
movs
cmps
icebp
xor
dec
push
aam
mov
fmul
mov
push
in
xor
mov
movs
cmps
shl
hlt
dec
pop
cdq
pop
mov
(bad)
cmp
dec
repz
ror
mov
int3
push
pop
frstor
repnz
mov
push
in
jmp
mov
push
mov
movs
cmps
add
cdq
pop
mov
(bad)
cmp
dec
and
lahf
and
retf
or
frstor
aas
ins
data16
ret
add
xor
or
xor
dec
fisttp
lahf
and
inc
push
data16
cmps
jle
or
pop
int3
add
and
xor
xor
push
jmp
pop
ror
mov
pop
loop
xor
and
mov
in
call
or
and
ja
aad
jno
and
sub
fbld
cmps
ss
dec
pop
cdq
or
pop
xchg
test
dec
mov
fisttp
jne
mov
je
and
or
fsub
mov
or
in
aam
mov
or
and
movs
daa
loopne
mov
push
mov
movs
cmps
sbb
loopne
int3
pusha
fmul
and
xor
dec
fstp
movs
(bad)
sbb
push
mov
and
(bad)
or
pop
dec
mov
fisttp
inc
pop
sbb
dec
frstor
hlt
dec
test
pushf
fild
daa
out
iret
mov
push
mov
movs
cmps
mov
dec
pop
retf
frstor
fild
daa
cli
iret
mov
push
mov
movs
cmps
in
hlt
dec
pop
loopne
movs
sahf
dec
hlt
dec
frstor
retf
or
frstor
dec
push
mov
movs
daa
(bad)
dec
push
mov
movs
cmps
fnstcw
dec
mov
pop
or
and
xor
dec
frstor
or
xor
or
fnstenv
and
or
lahf
and
retf
or
frstor
mov
dec
hlt
ret
or
and
leave
and
(bad)
sub
clc
add
fmul
lahf
and
retf
or
and
ja
shr
cmc
dec
(bad)
or
sbb
xor
dec
test
or
sub
std
dec
frstor
fimul
and
cli
and
mov
or
lahf
and
retf
or
frstor
mov
dec
dec
fimul
mov
int3
mov
and
retf
or
frstor
mov
add
add
or
and
or
xor
retf
or
and
or
sub
ret
or
and
idiv
or
add
sub
fmul
and
or
mov
push
or
and
or
xor
cmps
xor
mov
movs
cmps
int
hlt
dec
push
mov
jns
and
or
frstor
repnz
pop
repz
mov
cmps
icebp
aaa
hlt
dec
push
mov
jns
and
or
and
xor
fnstsw
and
or
frstor
repnz
or
and
and
sbb
test
or
mov
or
sub
or
fisttp
and
frstor
cmps
std
ss
dec
push
mov
movs
sbb
xchg
sbb
adc
or
sbb
jge
aam
sti
retf
or
and
sbb
iret
and
(bad)
sub
dec
mov
(bad)
and
into
enter
xor
push
mov
jnp
adc
out
dec
mov
hlt
dec
xor
ja
sbb
xchg
lods
sub
add
add
(bad)
lahf
and
dec
mov
hlt
push
(bad)
xchg
pop
frstor
mov
in
pop
(bad)
int3
bound
and
dec
xor
jge
movs
ror
push
popa
cld
in
jmp
and
frstor
mov
int3
pop
pop
frstor
mov
and
daa
dec
xchg
mov
xor
int3
jbe
frstor
cmps
mov
hlt
dec
push
cld
cmc
xchg
push
out
dec
fsub
ret
sbb
aad
out
pop
frstor
dec
mov
inc
or
xor
or
xor
cmps
xor
fisttp
dec
(bad)
jno
fsub
int3
fcomp
(bad)
dec
and
mov
and
lods
jno
xor
or
push
int3
adc
and
pushf
nop
inc
in
push
in
movs
sbb
repz
fld
sbb
jl
jp
or
and
cmc
movs
jmp
inc
pop
frstor
stc
pusha
xchg
sbb
mov
rcr
mov
and
(bad)
or
loop
(bad)
das
lods
pusha
jb
leave
or
and
cmc
lds
sbb
sbb
fisttp
dec
xor
lods
ss
sbb
(bad)
mov
sbb
jl
hlt
dec
push
mov
movs
daa
dec
xchg
mov
mov
push
or
xor
or
xor
dec
hlt
ret
sbb
ins
retf
(bad)
int3
pop
frstor
retf
or
and
jns
jp
or
and
ja
lds
hlt
and
xor
or
xor
lods
sub
add
int3
xchg
and
xchg
hlt
cld
jge
mov
push
or
lahf
and
xor
mov
dec
(bad)
or
call
popf
aad
frstor
sub
pop
add
into
mov
mov
inc
or
lahf
and
aas
ins
data16
cmps
jno
hlt
dec
push
cdq
fsub
xchg
int3
mov
fs
dec
fst
xchg
jmp
pop
(bad)
pop
nop
sbb
ins
into
mov
mov
inc
or
lahf
and
outs
jge
hlt
cmps
lods
aaa
hlt
dec
push
cdq
push
mov
pop
int3
mov
fs
hlt
dec
fst
xchg
jmp
pushf
jmp
dec
xchg
mov
mov
push
or
pushf
and
jb
and
int3
sbb
arpl
or
lahf
and
inc
frstor
mov
frstor
lods
push
mov
jge
mov
sahf
dec
mov
sahf
dec
mov
pushf
dec
frstor
daa
fisttp
sti
dec
(bad)
das
jge
and
dec
mov
sahf
dec
(bad)
int3
xor
and
or
sti
dec
(bad)
jno
xor
or
xor
test
or
adc
and
hlt
ret
mov
mov
test
sbb
shl
and
lea
daa
(bad)
dec
and
cmps
cmp
xlat
xchg
frstor
or
sti
dec
(bad)
jno
xor
or
xor
test
or
adc
and
hlt
ret
mov
mov
test
sbb
shl
and
lea
daa
(bad)
dec
and
cmps
push
sub
dec
and
cmps
stc
sub
dec
gs
dec
fst
pop
(bad)
pop
mov
mov
scas
jno
xor
or
push
test
hlt
(bad)
cwde
les
jb
hlt
(bad)
cwde
call
mov
push
popa
xor
add
dec
hlt
xor
and
dec
xor
lods
mov
mov
mov
dec
hlt
cmps
adc
hlt
dec
push
popa
and
cwde
clc
hlt
dec
frstor
mov
and
(bad)
cwde
cld
xor
popa
daa
hlt
dec
fucom
mov
frstor
dec
pop
out
sbb
and
or
test
push
inc
frstor
dec
and
shl
and
dec
mov
sahf
dec
mov
sahf
dec
mov
pushf
dec
fucomp
hlt
daa
xor
mov
mov
sbb
lds
dec
jle
pop
push
fisttp
lahf
and
dec
mov
sbb
shl
and
and
ja
fxch
jb
frstor
dec
frstor
cmp
lahf
and
(bad)
shl
daa
pop
into
mov
(bad)
int3
into
inc
frstor
mov
cld
lds
shl
and
jne
or
and
lock
frstor
dec
push
mov
movs
ret
sbb
sbb
daa
mov
jbe
or
frstor
int3
sbb
push
loopne
dec
(bad)
mov
and
jge
fdivr
jge
push
mov
movs
and
stos
push
mov
mov
sahf
dec
xor
je
jmp
sbb
mov
pushf
icebp
test
hlt
and
shr
hlt
dec
(bad)
int3
jb
frstor
dec
mov
cmc
dec
fisttp
mov
and
push
(bad)
add
pop
push
push
popa
adc
xor
movs
aaa
jne
and
ret
movs
cmps
or
hlt
dec
mov
sahf
dec
mov
jns
cmp
shl
inc
sbb
jg
(bad)
int
mov
jae
and
sbb
jae
jbe
xlat
cld
into
sbb
xlat
dec
(bad)
in
pop
mov
cli
int3
and
and
cld
dec
fstp
in
frstor
retf
mov
aaa
cmc
dec
fst
jb
and
inc
inc
frstor
ja
and
inc
pop
scas
cmc
dec
(bad)
push
inc
frstor
jb
loopne
dec
(bad)
jo
frstor
daa
sub
mov
and
cwde
mov
fisttp
(bad)
pop
enter
movs
xor
mov
leave
mov
(bad)
int3
dec
lods
and
ja
int
jno
and
or
and
test
or
and
sbb
shl
inc
sbb
and
ret
or
cdq
xchg
mov
xor
sub
jno
and
or
or
push
mov
mov
fcmovnu
ficom
hlt
adc
fcmovnu
retf
or
dec
lock
and
or
push
ret
and
and
or
or
cmp
mov
movs
and
call
int3
xor
and
mov
ret
jge
sbb
or
mov
mov
(bad)
jo
fisub
out
mov
mov
jle
xor
cmps
and
int3
clc
dec
xor
test
push
repz
xor
jge
jb
loopne
dec
fcom
mov
dec
xor
and
lods
(bad)
and
int
dec
frstor
mov
push
fstp
pushf
dec
frstor
dec
xor
int
dec
frstor
or
cmp
or
sbb
int
aad
jno
fisub
mov
sub
pop
shl
cmps
out
and
dec
push
fadd
test
mov
jge
push
popa
loopne
pop
fmul
mov
pop
icebp
fild
hlt
cmp
data16
cmp
pop
icebp
jg
gs
cmp
pop
icebp
mov
icebp
pop
icebp
fld
hlt
cmp
pop
icebp
xor
cmp
pop
icebp
out
outs
data16
cmp
pop
icebp
inc
jb
hlt
cmp
pop
icebp
pop
jb
hlt
inc
pop
cmc
repnz
fisttp
mov
xor
mov
pop
fmul
mov
pop
icebp
xor
cmp
pop
icebp
out
outs
data16
cmp
pop
icebp
jnp
gs
cmp
dec
inc
pop
int
or
int
ss
frstor
mov
fcomi
mov
xor
out
and
into
sbb
call
fisttp
dec
pop
sub
(bad)
and
test
or
xor
lods
jno
and
or
pop
jecxz
add
frstor
ret
or
xor
(bad)
dec
frstor
dec
test
sahf
dec
mov
pushf
sbb
data16
and
frstor
jp
mov
dec
(bad)
or
mov
push
mov
jl
sub
or
and
hlt
iret
loopne
xor
inc
and
dec
mov
hlt
dec
(bad)
or
and
jo
lahf
and
(bad)
xlat
and
ret
or
popf
movs
enter
or
push
mov
pushf
leave
cs
ret
or
dec
fisttp
int3
sbb
leave
mov
and
cmp
dec
hlt
and
lahf
and
dec
xor
fcmovnb
retf
ins
data16
cmps
push
cs
dec
xor
icebp
dec
fstp
test
mov
jge
push
mov
movs
ret
or
aaa
data16
ret
or
shl
int3
sbb
mov
and
ret
or
rol
dec
frstor
dec
test
sahf
dec
mov
pushf
pop
aaa
data16
and
frstor
jp
xor
frstor
ret
or
pop
sbb
dec
test
ja
int
aam
fisttp
daa
ss
dec
mov
sbb
xlat
and
mov
cmp
(bad)
push
inc
frstor
mov
or
rcl
or
pop
and
mov
fcmovne
jg
and
jbe
add
dec
mov
pushf
movs
xor
hlt
and
frstor
jp
xor
frstor
retf
or
and
or
push
dec
(bad)
and
test
or
push
mov
movs
daa
in
into
mov
push
mov
movs
cmps
jne
hlt
dec
pop
loopne
daa
and
dec
push
mov
movs
mov
movs
inc
or
frstor
repnz
or
fisttp
daa
push
int
dec
mov
sbb
aam
hlt
mov
movs
inc
or
frstor
(bad)
and
ror
and
or
sub
or
lahf
and
retf
or
frstor
mov
dec
or
and
retf
or
jb
hlt
cmps
jns
hlt
dec
pop
cdq
cmc
mov
fcomi
cmp
dec
hlt
and
lahf
and
dec
xor
fcmovnb
arpl
hlt
cmps
popa
sub
dec
xor
test
lods
xor
pop
and
jns
sub
or
lahf
and
retf
or
frstor
mov
dec
or
and
retf
or
jb
hlt
cmps
loope
hlt
dec
pop
cdq
cmc
mov
fcomi
cmp
dec
hlt
and
lahf
and
dec
xor
fcmovnb
addr16
hlt
cmps
mov
dec
xor
test
fisttp
int3
adc
and
or
test
and
jg
data16
and
frstor
jp
mov
dec
(bad)
cmc
dec
frstor
retf
or
imul
retf
fsub
les
fstp
int
std
dec
hlt
and
lahf
and
dec
xor
fcmovnb
addr16
hlt
cmps
cmp
out
dec
frstor
dec
push
mov
enter
jge
hlt
fdivr
push
mov
movs
ret
or
aaa
data16
ret
or
aam
hlt
int3
sbb
mov
and
ret
or
std
mov
dec
frstor
dec
test
sahf
dec
mov
pushf
pop
xor
hlt
and
frstor
jp
mov
dec
(bad)
mov
retf
or
imul
retf
fsub
les
fstp
int
std
dec
hlt
and
lahf
and
dec
xor
fcmovnb
outs
jb
hlt
cmps
cmc
and
dec
xor
test
jno
and
or
test
ja
and
fsub
mov
xchg
popa
mov
fisttp
jbe
push
pop
into
xor
(bad)
or
push
mov
movs
daa
in
into
mov
push
mov
movs
cmps
shr
and
(bad)
and
frstor
jb
hlt
cmps
gs
dec
push
mov
jge
sub
jge
cmp
mov
jge
mov
sahf
dec
mov
or
sub
or
frstor
dec
test
jns
in
lea
pop
sbb
dec
test
jge
mov
jns
sub
ja
jg
fs
mov
ror
mov
int3
push
dec
frstor
dec
push
mov
movs
and
lahf
and
cli
sub
or
(bad)
or
adc
and
hlt
ret
or
inc
ror
mov
ja
cli
sub
or
fisttp
ret
or
mov
pop
or
and
or
pop
rcl
ja
and
cli
sub
or
fstp
ror
gs
cmps
adc
and
dec
mov
sahf
dec
mov
pushf
dec
frstor
daa
std
test
(bad)
or
xor
mul
push
int3
ds
frstor
inc
dec
xchg
mov
pop
in
or
pop
sbb
dec
test
jge
mov
jns
sub
ja
fild
hlt
mov
ror
mov
int3
dec
and
dec
push
mov
movs
and
lahf
and
cli
sub
or
(bad)
xor
and
jbe
frstor
dec
lods
loopne
dec
fsub
dec
pop
jecxz
jge
and
dec
mov
pushf
aas
sbb
daa
mov
jbe
or
frstor
int3
sbb
dec
and
cld
loopne
and
stos
fsub
(bad)
and
clc
or
int3
fild
mov
sub
cmp
int3
add
and
adc
jno
stos
pop
enter
jae
cmp
fwait
or
cs
sub
jge
and
leave
dec
fsub
inc
pop
(bad)
hlt
dec
(bad)
xor
mov
out
hlt
dec
fstp
ror
data16
cmp
fcmovnb
cmps
jo
hlt
cmps
jne
hlt
dec
push
(bad)
mov
jecxz
jp
mov
jp
xchg
mov
xor
pop
ror
data16
cmp
fcmovnb
arpl
hlt
cmps
mov
adc
loopne
and
inc
and
call
fldenv
(bad)
and
pop
rcl
hlt
cmp
fcmovnb
addr16
hlt
cmps
lea
hlt
dec
out
fsub
pushf
and
inc
and
aam
pushf
and
jb
and
mul
hlt
dec
sub
jge
sub
pop
push
fst
iret
loopne
xor
and
sbb
pushf
and
pop
fldenv
je
add
push
fst
iret
loopne
xor
and
jo
lahf
and
mov
and
movs
fld
xor
pop
shl
scas
jmp
(bad)
and
pop
ror
data16
cmp
scas
jmp
je
or
fst
(bad)
rol
push
(bad)
xor
push
paddusw
(bad)
shl
fstp
shl
hlt
cmp
scas
jmp
je
add
push
fst
(bad)
ror
paddusw
ror
data16
cmp
scas
jmp
inc
push
push
out
test
or
int
add
and
movs
fld
xor
cmp
int
hlt
dec
and
cld
dec
sahf
and
(bad)
and
dec
and
clc
dec
sahf
and
(bad)
and
dec
and
in
sahf
and
(bad)
and
dec
and
loopne
sahf
and
(bad)
and
dec
and
aam
sahf
and
(bad)
and
dec
and
fmul
fs
and
dec
and
les
fs
and
dec
and
ror
(bad)
and
dec
mov
dec
dec
frstor
cmp
dec
(bad)
(bad)
and
and
dec
pop
loopne
(bad)
cwde
fdivr
(bad)
mov
sbb
cmp
iret
call
inc
sbb
add
mov
arpl
std
(bad)
mov
push
pop
and
frstor
dec
mov
pop
xor
jnp
mov
hlt
(bad)
fnsave
dec
pop
and
jb
xor
dec
scas
iret
fisttp
cmp
hlt
dec
push
jo
inc
in
in
mov
fisttp
enter
mov
push
pusha
rol
scas
mov
xlat
push
fstp
jg
stc
and
inc
frstor
dec
and
mov
sahf
and
(bad)
and
dec
and
mov
sahf
and
(bad)
and
dec
and
mov
(bad)
and
dec
and
mov
(bad)
and
dec
and
movs
dec
sahf
and
(bad)
and
dec
and
mov
(bad)
and
dec
and
lods
dec
sahf
and
(bad)
and
dec
and
test
sahf
and
(bad)
and
dec
and
xchg
dec
sahf
and
(bad)
and
dec
and
nop
dec
sahf
and
(bad)
and
dec
and
pushf
dec
sahf
and
(bad)
and
dec
and
cwde
dec
sahf
and
(bad)
and
dec
and
test
fs
and
dec
and
or
(bad)
and
dec
and
mov
fs
and
dec
and
mov
fs
and
dec
and
je
sahf
and
(bad)
and
dec
and
jo
sahf
and
(bad)
and
dec
and
jl
sahf
and
(bad)
and
dec
and
js
sahf
and
(bad)
and
dec
and
fs
sahf
and
(bad)
and
dec
and
pusha
dec
sahf
and
(bad)
and
dec
and
ins
dec
sahf
and
(bad)
and
dec
and
push
(bad)
and
dec
and
push
dec
sahf
and
(bad)
and
dec
and
push
dec
sahf
and
(bad)
and
dec
and
pop
dec
sahf
and
(bad)
and
dec
and
pop
dec
sahf
and
(bad)
and
dec
and
inc
dec
sahf
and
(bad)
and
dec
and
inc
dec
sahf
and
(bad)
and
dec
and
dec
dec
sahf
and
(bad)
and
dec
and
dec
dec
sahf
and
(bad)
and
dec
and
xor
sahf
and
(bad)
and
dec
and
xor
fs
and
dec
and
cmp
sahf
and
(bad)
and
dec
and
cmp
fs
and
dec
and
and
sahf
and
(bad)
and
dec
and
and
fs
and
dec
and
sub
sahf
and
(bad)
and
dec
and
sub
fs
and
dec
and
adc
sahf
and
(bad)
and
dec
and
adc
fs
and
dec
and
sbb
sahf
and
(bad)
and
dec
and
sbb
fs
and
dec
and
or
sahf
and
(bad)
and
dec
and
or
fs
and
dec
and
hlt
dec
sahf
and
(bad)
and
dec
and
lock
sahf
and
(bad)
and
dec
and
cld
dec
sahf
and
(bad)
and
dec
and
clc
dec
sahf
and
(bad)
and
dec
and
in
sahf
and
(bad)
and
dec
and
loopne
sahf
and
(bad)
and
dec
and
in
dec
sahf
and
(bad)
and
dec
and
call
(bad)
and
dec
and
aam
sahf
and
(bad)
and
dec
and
ror
and
(bad)
and
dec
and
fmul
and
(bad)
and
dec
and
fmul
and
(bad)
and
dec
and
les
and
(bad)
and
dec
and
ror
fs
and
dec
and
int3
dec
sahf
and
(bad)
and
dec
and
enter
fs
and
dec
and
mov
sahf
and
(bad)
and
dec
and
mov
sahf
and
(bad)
and
dec
and
mov
(bad)
and
dec
and
mov
(bad)
and
dec
and
movs
dec
sahf
and
(bad)
and
dec
and
mov
(bad)
and
dec
and
lods
dec
sahf
and
(bad)
and
dec
and
test
sahf
and
(bad)
and
dec
and
xchg
dec
sahf
and
(bad)
and
dec
and
nop
dec
sahf
and
(bad)
and
dec
and
test
and
(bad)
and
dec
and
or
fs
and
dec
and
mov
and
(bad)
and
dec
and
mov
and
(bad)
and
dec
and
je
sahf
and
(bad)
and
dec
and
js
sahf
and
(bad)
and
dec
and
fs
sahf
and
(bad)
and
dec
and
pusha
dec
sahf
and
(bad)
and
dec
and
ins
dec
sahf
and
(bad)
and
dec
and
push
(bad)
and
dec
and
push
dec
sahf
and
(bad)
and
dec
and
push
dec
sahf
and
(bad)
and
dec
and
pop
dec
sahf
and
(bad)
and
dec
and
pop
dec
sahf
and
(bad)
and
dec
and
dec
dec
sahf
and
(bad)
and
dec
and
dec
dec
sahf
and
(bad)
and
dec
and
xor
sahf
and
(bad)
and
dec
and
xor
and
(bad)
and
dec
and
cmp
sahf
and
(bad)
and
dec
and
cmp
and
(bad)
and
dec
and
and
sahf
and
(bad)
and
dec
and
and
and
(bad)
and
dec
and
sub
sahf
and
(bad)
and
dec
and
sub
and
(bad)
and
dec
and
adc
sahf
and
(bad)
and
dec
and
adc
and
(bad)
and
dec
and
sbb
sahf
and
(bad)
and
dec
and
sbb
and
(bad)
and
dec
and
add
sahf
and
(bad)
and
dec
and
add
and
(bad)
and
dec
and
or
sahf
and
(bad)
and
dec
and
or
and
(bad)
and
dec
