jo
or
add
add
dec
add
add
add
add
add
add
adc
add
fmul
add
add
add
sub
add
push
sub
add
push
sub
add
pop
add
or
adc
add
enter
add
add
and
add
add
push
add
cmp
add
add
outs
or
add
pop
adc
sub
add
push
cmp
cmp
cmp
add
and
add
add
push
add
dec
add
add
add
add
xor
add
xor
add
dec
add
add
add
add
add
and
add
cmp
(bad)
(bad)
inc
outs
or
add
and
dec
add
push
outs
or
add
cmp
add
add
push
add
add
push
add
cmp
or
add
or
add
add
add
cmp
push
or
add
add
dec
add
cmp
adc
add
and
dec
add
push
jae
add
or
or
sub
or
sub
push
add
or
sbb
add
jp
add
add
add
jae
add
or
jae
add
or
and
add
add
sbb
add
jae
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
iret
(bad)
(bad)
call
add
and
add
add
or
fdivr
(bad)
(bad)
cmp
(bad)
(bad)
push
add
or
fld
add
add
push
add
push
(bad)
sbb
add
add
add
add
add
jb
add
sbb
add
sbb
add
sbb
add
add
add
jle
add
add
adc
add
or
or
add
push
sub
add
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
add
add
jle
add
add
adc
add
or
or
add
push
sub
add
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
add
add
add
adc
add
or
or
add
push
sub
add
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
push
add
adc
add
add
adc
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
or
sub
or
sub
sbb
add
add
add
adc
add
pop
add
or
push
add
or
fisttp
add
add
mov
add
add
add
adc
add
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
sbb
add
or
add
add
sbb
add
or
push
add
add
mov
sub
pop
sub
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
or
add
rol
add
add
sbb
add
or
or
add
push
add
mov
add
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
pop
add
add
add
adc
sub
add
or
fisttp
add
add
add
mov
add
(bad)
sbb
sub
add
add
add
add
or
add
sbb
add
sbb
add
xor
add
or
add
add
or
add
sub
add
sub
fstp
add
add
or
adc
add
push
mov
mov
mov
add
(bad)
sbb
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
push
add
push
mov
add
add
sbb
adc
add
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
push
add
sbb
add
sub
pop
sub
or
sub
sbb
add
xor
add
or
sbb
pop
add
sbb
or
add
sub
add
sub
jle
add
or
fisttp
add
add
mov
add
sbb
sub
pop
sub
adc
add
add
add
add
sbb
add
push
add
sbb
add
sub
xor
mov
add
add
adc
add
add
cmp
add
push
outs
or
add
and
dec
add
push
outs
or
add
cmp
push
add
add
push
add
cmp
add
add
or
add
or
add
push
add
cmp
add
add
outs
or
add
pop
adc
sub
add
push
cmp
add
cmp
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
dec
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
call
or
add
add
dec
add
cmp
adc
add
and
dec
add
push
jae
add
or
add
or
sub
or
sub
push
add
sbb
add
sub
xor
add
add
adc
and
add
cmp
sub
add
jae
add
push
or
sub
add
push
fstp
add
add
lea
add
or
push
push
mov
or
std
add
push
fld
add
add
add
adc
add
add
add
and
sbb
add
or
sub
or
sub
push
add
and
add
sub
add
sbb
add
sub
xor
into
add
add
add
adc
add
cmp
add
es
outs
or
add
pop
adc
sub
sahf
add
add
cmp
inc
add
add
add
push
add
dec
add
add
add
add
dec
add
add
add
adc
add
cmp
add
pusha
add
add
add
add
sub
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
outs
or
add
and
dec
add
push
outs
or
add
cmp
add
add
push
add
add
push
add
cmp
or
add
add
dec
add
cmp
or
add
or
add
add
dec
add
cmp
(bad)
(bad)
cmp
add
add
test
dec
add
push
jae
add
or
add
or
sub
or
sub
sbb
pop
add
add
sldt
adc
sub
sub
push
rol
sbb
add
sub
add
or
pop
movs
add
fst
add
add
mov
add
add
or
add
mov
sbb
sub
add
adc
add
add
add
sub
push
sbb
add
push
add
sbb
add
sub
add
sbb
add
sub
xor
pop
add
adc
add
sub
add
or
outs
and
add
and
add
add
cmp
add
add
add
add
add
push
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
or
jnp
add
add
and
add
dec
add
cmp
or
sub
add
push
fisttp
add
add
sub
add
(bad)
sbb
add
adc
add
add
add
add
add
xor
add
add
add
add
add
add
add
push
add
add
or
add
sub
push
fisttp
add
add
sub
add
(bad)
sbb
add
add
add
add
sbb
add
sbb
add
or
sub
or
sub
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
add
add
mov
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
pop
add
add
adc
add
rol
sbb
add
sub
add
or
add
or
jnp
add
add
pop
or
and
add
pop
rol
sbb
add
sub
add
sub
add
or
sub
movs
add
add
and
mov
mov
add
add
or
jno
add
add
mov
sbb
add
add
add
add
add
add
dec
dec
add
or
sub
or
sub
adc
add
retf
add
add
adc
add
push
add
cmp
add
push
or
add
add
cmp
add
sub
add
or
push
outs
or
add
pop
adc
sub
xchg
add
and
add
cmp
add
push
outs
or
add
and
dec
add
push
outs
or
add
cmp
add
and
add
add
add
push
cmp
add
add
pop
cmp
add
retf
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
(bad)
jp
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
call
add
and
add
add
data16
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
cmp
add
add
test
dec
add
push
jae
add
or
add
or
sub
or
sub
push
add
sbb
add
sub
xor
ins
add
add
add
adc
add
or
add
or
add
or
add
or
push
jb
add
jo
sub
add
cmp
add
add
or
sub
add
push
jb
add
jo
sub
add
cmp
add
add
or
adc
add
fld
add
add
fld
add
add
or
adc
or
push
add
add
pop
mov
add
add
mov
add
(bad)
sbb
sub
sbb
add
add
add
add
or
add
add
add
pop
pop
add
sbb
add
push
add
sbb
add
sub
xor
add
add
add
add
add
add
or
fld
add
add
push
add
push
(bad)
sbb
add
adc
add
add
add
sldt
sbb
add
or
sub
or
sub
sbb
add
add
add
jae
add
or
push
add
add
add
sub
and
add
dec
add
cmp
add
add
jb
add
jo
sub
push
add
add
add
add
or
or
add
add
add
add
add
inc
add
jo
sub
and
add
add
push
add
cmp
jb
add
jo
sub
push
add
add
add
add
or
or
add
add
add
add
add
jns
add
sub
and
add
add
push
add
cmp
add
cmp
(bad)
inc
jnp
add
add
sub
add
or
addr16
(bad)
inc
jb
add
jo
sub
and
push
add
cmp
add
add
add
add
add
xor
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
outs
sbb
add
or
sbb
add
push
add
add
add
mov
add
add
adc
add
(bad)
sbb
sub
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
or
int3
add
add
adc
das
add
add
pop
add
add
cmp
add
add
add
add
jns
add
sub
add
cmp
add
add
add
or
add
add
imul
add
pop
jge
add
add
add
add
dec
add
add
add
add
or
add
add
adc
add
and
add
add
push
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
push
add
and
add
or
add
and
add
add
jo
add
cmp
(bad)
(bad)
jmp
adc
pop
adc
or
add
dec
add
(bad)
inc
jle
add
or
add
add
jle
add
or
add
add
jle
add
or
add
add
pop
lea
add
add
push
pop
sub
or
add
or
stos
add
add
adc
or
push
add
add
addr16
(bad)
inc
outs
xor
add
or
jb
add
jo
xor
add
cmp
add
add
pop
push
outs
xor
add
or
add
add
jb
(bad)
inc
jb
add
jo
xor
add
cmp
add
add
pop
push
outs
xor
xor
add
jnp
add
add
inc
add
jo
sub
add
cmp
(bad)
jmp
add
std
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
jb
add
jo
xor
add
cmp
pop
pop
movq
xor
add
add
add
dec
add
(bad)
call
add
mov
dec
(bad)
(bad)
(bad)
fstp
add
add
pop
or
adc
add
jno
add
add
sub
sub
add
lods
add
add
add
add
add
or
sub
or
sub
adc
add
cdq
add
add
add
adc
add
add
dec
add
cmp
add
add
push
out
add
jae
add
or
cmp
add
and
cmp
add
add
add
add
add
add
dec
add
cmp
add
add
add
add
cmp
add
add
push
call
cmp
add
outs
cmp
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
xor
add
add
add
add
adc
jnp
add
add
push
add
add
add
add
sldt
add
cmp
add
add
jge
add
add
jnp
add
add
push
and
cmp
add
add
add
add
add
inc
push
add
add
jnp
add
add
jnp
add
add
and
adc
add
out
add
add
jecxz
add
and
add
add
push
or
dec
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
(bad)
(bad)
jle
(bad)
jmp
add
ja
add
xchg
add
add
add
add
add
add
(bad)
push
add
add
add
add
adc
add
dec
or
cmp
adc
add
cwde
(bad)
(bad)
inc
jnp
add
add
pop
add
add
add
or
pop
adc
adc
adc
sub
add
push
add
add
pop
jge
add
add
add
inc
adc
add
jnp
add
add
push
add
add
add
add
cmp
adc
add
dec
or
cmp
(bad)
(bad)
inc
jnp
add
add
aas
jg
add
add
sgdtd
push
and
add
add
pop
(bad)
(bad)
inc
jnp
add
add
cmp
and
add
add
push
or
cmp
(bad)
(bad)
inc
jnp
add
add
push
add
add
jnp
add
add
inc
cmp
add
add
adc
jnp
add
add
push
and
add
add
push
or
cmp
(bad)
(bad)
inc
add
add
add
add
add
add
add
dec
or
cmp
jg
add
add
add
add
cli
inc
add
push
add
add
sub
jnp
add
add
add
add
add
add
add
add
aas
popa
add
add
sub
add
push
or
cmp
add
jnp
add
add
pop
and
jle
add
or
sub
add
push
cmp
add
add
or
add
dec
or
cmp
(bad)
inc
sbb
add
add
dec
add
add
jnp
add
add
and
add
add
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
add
add
add
jge
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
mov
add
cmp
jnp
add
add
jnp
add
add
or
add
add
add
or
pop
or
(bad)
jmp
or
add
push
cmp
pop
pop
pop
and
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
add
add
sub
add
push
cmp
(bad)
jmp
add
add
add
pop
add
add
add
or
jnp
add
add
jnp
add
add
adc
adc
adc
adc
add
or
cmc
add
push
and
add
add
push
or
cmp
std
(bad)
inc
push
jge
add
add
or
add
dec
or
cmp
std
(bad)
inc
sbb
add
add
sbb
(bad)
(bad)
inc
jnp
add
add
cmp
add
add
add
or
jnp
add
add
pop
push
pop
adc
pop
adc
adc
sub
add
push
es
sbb
add
add
pop
jge
add
add
and
add
pop
jge
add
add
add
add
dec
or
cmp
cmp
(bad)
call
adc
add
jnp
add
add
idiv
(bad)
inc
jnp
add
add
dec
cld
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
add
add
and
add
add
push
or
cmp
call
adc
add
mov
mov
mov
mov
add
add
add
add
mov
add
add
add
add
sub
sbb
add
sbb
add
add
add
add
xor
add
sbb
add
push
add
add
add
or
add
inc
add
add
add
add
sub
add
fstp
add
add
cmp
add
or
add
or
aas
add
or
add
add
and
pop
add
sub
add
sub
add
cmp
(bad)
(bad)
inc
mov
jne
add
(bad)
sbb
add
sbb
add
add
add
add
sbb
add
add
add
cmp
add
adc
add
add
add
adc
pop
lea
add
or
push
add
add
sub
or
add
add
add
add
and
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
and
add
clc
pop
jge
add
add
or
add
add
jne
add
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
sbb
push
add
add
sbb
add
add
add
add
add
add
and
add
add
cmp
add
add
add
add
jnp
add
add
push
add
add
add
inc
add
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
push
or
or
add
push
add
mov
add
(bad)
sbb
sub
add
add
add
add
add
jb
add
sbb
add
jp
sub
add
cmp
add
add
sub
or
jnp
add
add
sub
add
xor
add
add
add
add
adc
or
aas
add
add
or
test
add
and
push
add
cmp
add
add
aas
add
add
or
(bad)
(bad)
jmp
push
add
add
push
add
cmp
add
add
push
pop
pop
or
pop
pop
adc
cmp
add
and
push
add
dec
add
add
add
add
push
add
add
add
add
(bad)
(bad)
inc
add
pop
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
cmp
add
add
or
add
add
in
add
cmp
(bad)
inc
inc
add
add
stos
add
push
push
and
add
and
add
cmp
add
add
sub
add
push
or
add
add
cmp
or
and
add
push
mov
mov
add
add
mov
into
add
push
(bad)
sbb
sub
add
add
add
add
add
fcmovu
add
sbb
add
sbb
or
pop
add
add
add
adc
jnp
add
add
add
and
fild
add
push
adc
pop
pop
jno
add
add
pop
adc
add
pop
pop
pop
bound
add
pop
pop
or
add
push
add
add
push
or
add
add
dec
add
add
or
pop
or
add
add
add
pusha
add
add
or
add
jnp
add
add
xchg
adc
add
ds
(bad)
inc
jnp
add
add
push
adc
pop
xchg
sub
add
push
popf
and
add
add
cmp
add
es
or
add
add
add
imul
add
add
add
dec
add
add
cmp
pop
sahf
pop
add
add
add
xchg
pop
invd
pop
pop
pop
pop
bound
cmp
jmp
add
push
add
add
add
add
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
(bad)
dec
add
add
add
aas
(bad)
(bad)
(bad)
frstor
add
add
pop
mov
mov
mov
add
add
sub
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
sbb
add
add
add
adc
add
add
dec
add
add
add
mov
fst
add
jle
add
add
les
add
push
adc
push
and
add
add
dec
add
push
sub
and
push
add
add
push
sub
sub
add
push
cmp
add
and
add
add
push
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
xchg
add
and
add
add
sar
(bad)
inc
cmp
pop
jle
add
add
les
add
and
add
cmp
adc
add
sub
add
jae
add
push
or
jnp
add
add
or
add
or
mov
or
add
pop
or
jae
add
push
or
add
cmp
jne
(bad)
jmp
or
inc
je
add
jae
add
push
sub
pop
add
add
push
add
(bad)
dec
jnp
add
add
adc
add
adc
add
add
add
add
sbb
add
add
add
sub
add
or
inc
add
add
dec
add
push
add
add
add
dec
add
push
sub
add
outs
inc
add
or
and
add
add
push
add
cmp
add
push
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
or
add
add
adc
fisttp
add
add
adc
fld
add
add
sub
add
adc
add
add
add
add
add
xor
add
add
add
jge
add
add
add
add
add
or
add
add
add
adc
add
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
sbb
pop
add
add
sbb
dec
add
or
add
or
add
outs
dec
add
or
or
add
push
add
outs
dec
add
or
fisttp
cmp
add
add
outs
dec
add
or
pop
or
adc
add
push
pop
add
add
mov
sbb
sub
add
sbb
add
add
add
daa
add
add
add
cmp
add
sbb
add
push
add
add
add
push
add
add
add
sbb
add
pop
add
add
add
adc
outs
dec
add
or
outs
dec
add
or
bound
fisttp
add
add
sub
add
(bad)
sbb
sub
add
add
add
add
adc
add
add
xor
add
add
add
add
and
add
add
add
add
or
or
add
add
jne
add
(bad)
sbb
sub
adc
add
add
add
adc
or
add
sbb
add
add
add
adc
mov
add
sub
add
adc
and
add
add
enter
adc
pop
push
pop
outs
dec
add
or
push
jae
add
or
adc
adc
outs
dec
add
or
adc
push
adc
or
add
adc
adc
or
jae
add
or
and
add
add
add
push
cmp
add
cmp
add
and
dec
add
push
adc
adc
add
dec
add
push
adc
and
add
add
push
adc
add
and
dec
add
push
adc
and
add
add
add
push
cmp
add
add
and
add
add
pop
sub
add
adc
outs
push
add
or
add
or
or
add
or
adc
mov
add
and
add
add
push
adc
add
add
add
(bad)
dec
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
dec
adc
(bad)
inc
mov
lea
add
add
sysret
adc
push
adc
mov
or
or
add
or
outs
push
add
or
push
add
or
movhps
outs
push
add
or
push
and
add
add
push
adc
(bad)
inc
sub
add
or
or
adc
or
or
or
add
add
dec
adc
(bad)
call
push
adc
pop
adc
or
add
adc
adc
push
push
mov
mov
mov
adc
sbb
mov
add
adc
sbb
add
adc
mov
pop
mov
adc
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
add
add
add
xchg
add
xchg
add
lahf
add
add
add
push
add
add
add
adc
add
add
add
adc
push
lea
add
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
add
sub
add
jge
add
add
add
add
xor
add
add
pop
add
adc
adc
or
pop
add
add
cmp
or
ds
add
push
or
and
add
pop
add
add
add
dec
adc
cmp
add
pop
adc
xchg
adc
add
push
adc
cmp
add
adc
add
add
adc
adc
pop
or
add
add
add
adc
push
sbb
punpcklbw
adc
pop
adc
pop
pop
pop
bound
adc
adc
add
add
aas
xlat
(bad)
(bad)
(bad)
cmp
add
add
add
add
adc
inc
add
pop
xchg
adc
pop
adc
pop
maxps
pop
pop
bound
adc
adc
arpl
adc
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
adc
pop
adc
pop
pop
pop
bound
adc
adc
adc
aam
(bad)
inc
adc
adc
pop
adc
mulps
pop
pop
bound
adc
pop
pop
adc
and
add
add
push
adc
cmp
lea
push
or
or
push
adc
cmp
cmp
(bad)
(bad)
jmp
push
add
add
push
adc
cmp
add
adc
pop
adc
pop
or
pop
pop
bound
or
or
add
or
aas
push
add
add
or
pop
adc
adc
pop
or
add
add
or
add
dec
adc
cmp
add
pop
movlps
cmp
(bad)
(bad)
call
add
cmp
add
or
add
adc
xchg
pop
adc
or
pop
pop
bound
add
add
cmp
add
or
or
or
inc
jnp
add
add
or
push
adc
sbb
or
popf
and
add
add
push
adc
cmp
add
add
add
add
push
adc
add
add
adc
popf
add
add
adc
adc
adc
adc
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
add
add
sub
movs
add
add
push
adc
cmp
add
add
adc
xchg
adc
and
add
add
cmp
xchg
add
cmp
or
add
push
cmp
add
adc
pop
or
xor
add
and
add
cmp
add
pop
adc
xchg
and
adc
adc
cmp
add
or
add
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
adc
adc
pop
(bad)
pop
(bad)
(bad)
inc
adc
add
add
add
add
add
adc
cmp
(bad)
(bad)
jmp
pop
add
add
push
adc
dec
add
add
add
(bad)
(bad)
dec
(bad)
jmp
(bad)
(bad)
(bad)
fdivr
(bad)
jmp
(bad)
call
(bad)
inc
(bad)
dec
(bad)
(bad)
(bad)
jnp
(bad)
call
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
call
std
(bad)
(bad)
cmp
(bad)
dec
add
add
or
add
dec
adc
cmp
push
add
(bad)
(bad)
fucomp
add
add
adc
add
adc
adc
push
mov
mov
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
add
adc
pop
or
add
add
adc
mov
adc
pop
movups
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
mov
add
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
add
add
adc
add
jecxz
add
add
add
and
add
add
push
add
cmp
add
add
outs
add
or
cmp
and
add
add
dec
add
push
cmp
add
add
aam
add
sub
add
sub
add
push
jge
add
add
pop
jge
add
add
pop
jge
add
add
outs
add
or
ds
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
and
add
and
add
or
add
cmp
add
cmp
call
add
and
add
push
cmp
(bad)
(bad)
jmp
add
jge
add
add
add
add
dec
add
cmp
jnp
add
add
outs
pop
add
or
add
cmp
add
sub
add
add
add
or
push
add
add
cmp
mov
(bad)
jmp
sub
sbb
add
add
add
adc
jnp
add
add
ds
add
add
add
add
cmp
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
add
add
add
ds
add
add
add
add
dec
add
cmp
add
add
jge
add
add
add
cmp
xor
add
add
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
jge
add
add
adc
add
push
mov
mov
sub
add
push
(bad)
sbb
add
adc
add
add
add
into
add
add
add
xor
add
add
adc
sbb
or
push
add
push
sub
add
xor
add
add
add
add
add
add
add
add
jnp
add
add
sbb
jnp
add
add
jnp
add
add
pop
xchg
popa
jge
add
add
or
add
add
jne
add
(bad)
sbb
add
adc
add
add
add
sub
or
add
sbb
or
mov
add
and
add
push
or
cdq
add
add
add
pop
pop
adc
add
add
add
pushf
and
add
add
push
add
cmp
add
add
add
fs
add
add
and
add
pop
jge
add
add
pop
pop
adc
push
pop
pop
or
add
add
push
cmp
add
add
pop
adc
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
sar
(bad)
inc
jnp
add
add
ds
add
add
(bad)
inc
add
or
add
jnp
add
add
jnp
add
add
or
add
add
pop
cmp
add
add
add
jnp
add
add
add
sub
add
and
add
add
push
add
cmp
(bad)
inc
and
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
pop
cmp
add
add
add
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
dec
add
add
push
jge
add
add
pop
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
mov
mov
mov
add
add
mov
xchg
add
push
(bad)
sbb
sub
add
inc
sbb
add
add
pusha
add
add
add
add
add
push
add
add
add
push
add
add
add
bound
add
add
or
add
add
jnp
add
add
pop
add
or
add
add
xor
add
add
add
and
add
pop
pop
pop
fs
add
add
and
add
pop
jge
add
add
push
add
add
add
mov
add
(bad)
sbb
add
adc
add
add
add
add
sbb
add
adc
add
add
add
adc
sbb
add
push
push
add
push
sbb
add
push
sbb
add
push
mov
mov
add
sub
or
push
add
add
add
add
add
jnp
add
add
sub
add
add
add
pop
jge
add
add
adc
add
mov
mov
test
sbb
add
add
adc
add
add
add
daa
add
sbb
pop
add
add
and
add
add
add
add
add
xchg
add
and
add
sub
add
and
add
dec
add
cmp
and
add
add
add
add
and
add
add
test
add
add
add
dec
add
cmp
add
push
or
in
add
add
add
add
xchg
and
inc
add
add
add
add
or
add
add
add
cmp
add
add
and
add
pop
push
or
push
add
add
cmp
add
add
add
add
add
add
add
or
jne
add
add
add
add
xchg
and
inc
add
cmp
add
and
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
jmp
(bad)
call
(bad)
dec
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
pop
and
add
cmp
add
add
cmp
add
add
and
add
pop
push
or
and
add
aas
cmp
jmp
add
cmp
or
add
(bad)
(bad)
(bad)
frstor
add
add
mov
mov
mov
mov
sub
sbb
add
add
add
pop
add
add
add
and
add
sbb
add
sbb
verw
or
add
add
adc
aas
add
or
adc
fld
add
sub
add
and
add
add
dec
add
push
sub
add
push
sub
add
and
add
add
dec
add
push
sub
add
push
and
add
add
dec
add
push
sub
add
adc
adc
push
mov
add
add
popa
add
or
sbb
pop
and
add
add
dec
add
push
sub
add
push
sub
add
and
add
sub
add
sub
add
push
sub
add
adc
sbb
pop
and
add
add
dec
add
push
sub
add
push
sub
add
and
add
sub
add
sub
add
push
and
add
sub
add
sub
add
push
and
add
add
dec
add
push
sub
add
push
sub
add
or
adc
adc
repz
add
dec
add
push
sub
add
push
sub
add
sub
add
es
add
or
push
adc
jae
add
or
push
pop
or
pop
sbb
pop
add
add
adc
adc
and
add
add
dec
add
push
mov
fiadd
add
sub
add
sub
add
push
sub
add
mov
inc
add
sub
add
sub
add
push
mov
repz
add
dec
add
push
sub
add
push
mov
adc
add
sub
add
mov
rol
add
sub
add
sub
add
push
mov
add
or
nop
adc
adc
outs
add
or
sbb
add
dec
add
push
outs
push
or
pop
adc
outs
add
or
outs
imul
adc
adc
outs
add
or
outs
push
add
pop
or
outs
add
or
outs
imul
or
push
adc
adc
outs
add
or
outs
ins
add
or
movlps
adc
outs
add
or
outs
ins
add
or
adc
pop
adc
outs
outs
add
or
pop
adc
pop
adc
outs
outs
add
or
add
adc
pop
push
mov
add
add
popa
add
or
pop
adc
pop
and
add
add
dec
add
push
or
adc
pop
push
mov
add
add
popa
add
or
pop
adc
add
add
dec
add
push
adc
pop
push
adc
push
mov
add
add
popa
add
or
pop
pop
adc
adc
outs
jo
add
pop
sbb
pop
and
add
add
dec
add
push
adc
pop
sbb
pop
adc
or
adc
adc
push
pop
mov
push
mov
cmp
dec
add
push
mov
add
or
inc
add
add
dec
add
push
mov
or
repz
add
dec
add
push
sub
add
push
mov
adc
add
sub
add
mov
rol
add
sub
add
sub
add
push
mov
and
add
sub
add
mov
sub
add
mov
add
or
add
or
sbb
pop
sbb
adc
adc
push
and
add
sub
add
sub
add
mov
adc
add
sub
add
mov
repz
add
dec
add
push
sub
add
push
mov
adc
add
sub
add
mov
rol
add
sub
add
sub
add
push
mov
add
or
inc
add
or
or
sbb
pop
push
sub
add
sbb
pop
add
add
adc
adc
and
add
sub
add
sub
add
mov
adc
add
sub
add
mov
repz
add
dec
add
push
sub
add
push
mov
adc
add
sub
add
mov
rol
add
sub
add
sub
add
push
mov
pop
add
add
dec
add
push
mov
add
or
je
add
pop
sbb
pop
adc
lea
add
add
adc
adc
and
add
sub
add
mov
or
repz
add
dec
add
push
sub
add
push
mov
adc
add
sub
add
mov
rol
add
sub
add
sub
add
push
mov
imul
sub
add
mov
rol
add
sub
add
sub
add
push
mov
jno
add
mov
add
or
add
or
push
adc
and
add
dec
add
push
adc
adc
lea
add
add
adc
adc
and
add
sub
add
sub
add
push
mov
or
repz
add
dec
add
push
sub
add
push
mov
adc
add
sub
add
mov
rol
add
sub
add
sub
add
push
mov
add
and
add
add
push
mov
jno
add
mov
add
or
add
or
and
pop
adc
add
adc
adc
and
add
push
sub
add
push
mov
or
adc
sbb
repz
add
dec
add
push
sub
add
push
mov
adc
add
sub
add
mov
rol
add
sub
add
sub
add
push
mov
lea
add
push
sub
add
push
mov
jno
add
mov
add
or
add
or
and
pop
adc
lea
add
add
adc
adc
and
add
push
sub
add
push
mov
or
jns
add
sub
add
sub
add
push
mov
rol
add
sub
add
sub
add
push
mov
lea
add
push
sub
add
push
mov
jno
add
mov
add
or
add
or
and
pop
adc
retf
add
dec
add
push
sub
add
sub
add
outs
jb
add
pop
and
pop
adc
outs
jne
add
pop
and
pop
adc
outs
jbe
add
cmp
add
add
and
outs
add
or
daa
adc
adc
ja
add
pop
sub
pop
and
add
add
push
adc
pop
sub
pop
adc
and
add
add
dec
add
push
sub
add
sub
add
or
adc
sub
pop
adc
and
add
add
dec
add
push
sub
add
sub
add
or
adc
sub
pop
adc
adc
call
dec
add
push
pop
lea
add
adc
adc
push
sbb
pop
add
add
adc
adc
and
add
sub
add
sub
add
mov
adc
add
sub
add
mov
repz
add
dec
add
push
sub
add
push
mov
adc
add
sub
add
mov
rol
add
sub
add
sub
add
push
mov
add
data16
or
adc
jns
add
sub
add
or
or
sub
pop
and
add
sub
add
adc
adc
adc
std
add
add
push
pop
lea
add
adc
adc
adc
adc
push
push
add
sub
add
pop
lea
add
adc
adc
push
sbb
adc
adc
push
adc
or
adc
add
sub
add
mov
repz
add
dec
add
push
sub
add
push
mov
adc
add
sub
add
mov
rol
add
sub
add
sub
add
push
mov
add
or
adc
jns
add
sub
add
or
sub
add
pop
adc
adc
adc
std
add
add
push
pop
lea
add
adc
adc
push
adc
adc
push
push
add
sub
add
pop
lea
add
adc
adc
adc
repz
add
dec
add
push
sub
add
push
and
add
sub
add
and
add
add
dec
add
push
sub
add
push
sub
add
mov
adc
jns
add
sub
add
or
sub
add
pop
das
adc
adc
adc
das
push
add
sub
add
pop
lea
add
adc
adc
sbb
adc
adc
jp
add
pop
xor
pop
adc
adc
inc
push
add
sub
add
push
lea
add
adc
adc
sub
add
es
xor
pop
adc
adc
inc
push
add
sub
add
push
lea
add
adc
adc
sub
add
frstor
push
pop
pop
push
adc
inc
xor
add
add
add
das
idiv
push
idiv
(bad)
js
(bad)
inc
idiv
(bad)
(bad)
idiv
call
idiv
push
idiv
push
idiv
(bad)
(bad)
(bad)
(bad)
out
idiv
(bad)
push
(bad)
call
clc
(bad)
jmp
clc
(bad)
jmp
clc
(bad)
dec
(bad)
call
(bad)
jmp
(bad)
(bad)
jns
(bad)
dec
clc
(bad)
jmp
stc
(bad)
push
cli
(bad)
inc
cli
(bad)
inc
cli
(bad)
call
cli
(bad)
call
(bad)
(bad)
fsincos
(bad)
dec
(bad)
jmp
(bad)
(bad)
js
(bad)
dec
cld
(bad)
call
cld
(bad)
jmp
cld
(bad)
jmp
cld
(bad)
(bad)
jle
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fnstsw
pop
adc
adc
add
add
add
(bad)
(bad)
(bad)
frstor
sbb
add
adc
add
adc
adc
push
inc
pop
(bad)
adc
add
sub
ret
(bad)
(bad)
jmp
xor
or
or
push
cmp
aas
add
or
mov
sbb
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
sbb
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
pop
pop
adc
mov
adc
sub
sbb
inc
xor
add
add
add
add
add
or
add
add
sldt
add
or
add
or
add
or
add
add
sbb
add
sbb
add
and
add
and
add
add
dec
add
push
or
or
add
push
sub
add
(bad)
sbb
add
add
adc
add
add
add
adc
or
add
push
add
add
add
sbb
push
add
add
adc
add
or
add
or
add
or
add
add
outs
jg
add
je
add
add
pop
outs
sub
add
outs
sub
add
add
add
or
or
add
pop
outs
add
or
fnsave
add
add
outs
add
(bad)
(bad)
(bad)
fst
add
add
jne
add
add
or
add
or
add
add
add
or
jle
add
or
add
or
add
mov
add
add
or
sub
sbb
sub
add
sbb
add
add
add
add
jl
add
sbb
add
sbb
or
out
add
and
or
mov
and
add
pop
cmp
pop
or
jnp
add
add
push
pop
sub
push
or
add
add
push
jge
add
add
or
pop
cmp
add
add
add
add
push
cmp
add
and
add
push
cmp
add
cmp
add
add
add
add
mov
add
add
push
jge
add
add
or
add
dec
or
cmp
pop
pop
adc
add
jnp
add
add
adc
jecxz
add
cmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
or
add
dec
or
cmp
(bad)
(bad)
inc
jnp
add
add
pop
push
inc
push
inc
adc
add
add
add
pop
push
inc
push
inc
adc
adc
adc
adc
sub
(bad)
(bad)
(bad)
inc
jnp
add
add
adc
(bad)
(bad)
jmp
add
add
dec
or
cmp
(bad)
call
add
add
add
clc
add
push
gs
cmp
add
add
jnp
add
add
pop
or
retf
add
push
and
add
add
dec
(bad)
(bad)
call
add
or
add
add
cmp
add
adc
add
add
cwde
(bad)
(bad)
inc
jnp
add
add
sbb
mov
(bad)
jmp
pop
add
add
push
or
cmp
(bad)
(bad)
inc
jnp
add
add
push
and
add
add
push
or
cmp
(bad)
(bad)
(bad)
cmp
(bad)
dec
pop
pop
adc
add
mov
mov
mov
mov
add
add
add
xchg
add
push
(bad)
sbb
add
add
mov
add
add
add
add
add
sbb
pop
add
or
add
add
adc
adc
add
sub
inc
or
add
add
add
add
jnp
add
add
add
or
jnp
add
add
test
add
pop
sbb
and
add
add
add
or
add
or
sbb
push
add
cmp
or
add
jnp
add
add
xchg
add
and
add
add
add
push
cmp
or
add
add
add
add
push
and
test
add
outs
xchg
add
add
add
add
outs
mov
add
add
add
add
sbb
dec
and
add
pop
adc
add
or
sbb
add
dec
add
cmp
sub
add
adc
jl
test
add
outs
xchg
add
and
add
add
cmp
test
add
add
add
add
xchg
add
and
add
add
cmp
add
add
add
add
mov
add
add
mov
or
add
jae
add
or
mov
add
add
add
add
outs
lea
add
add
add
add
outs
lea
add
and
add
add
push
add
cmp
or
add
sbb
or
or
add
or
and
call
mov
add
sub
push
sub
add
add
sub
out
or
add
add
adc
add
sub
add
outs
xchg
add
or
pop
sub
push
add
add
fld
add
add
jnp
add
add
outs
xchg
add
or
jnp
add
add
outs
xchg
add
or
push
sub
jnp
add
add
mov
add
and
cmp
add
xchg
add
pop
add
add
add
loop
add
pop
add
add
add
loop
add
add
add
add
outs
xchg
add
or
or
add
dec
add
cmp
add
add
add
add
jge
add
pop
adc
add
or
add
or
jnp
add
add
mov
dec
add
push
and
push
add
sub
add
sub
xchg
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
xchg
add
or
jnp
add
add
dec
pop
sbb
add
or
add
or
sbb
add
sub
add
push
cmp
pop
add
add
add
add
nop
add
add
jnp
add
add
test
add
pop
and
add
add
add
or
add
or
add
add
dec
add
cmp
jnp
add
add
jnp
add
add
cwde
add
or
add
or
jnp
add
add
outs
cdq
add
or
sbb
add
pop
cmp
jnp
add
add
popf
add
add
lock
add
add
or
add
or
jnp
add
add
outs
cdq
add
or
or
push
add
cmp
add
add
add
add
sbb
pusha
and
add
pop
adc
add
or
jnp
add
add
sbb
js
jo
add
pop
adc
add
or
jnp
add
add
sbb
nop
add
add
jo
add
pop
adc
add
or
jnp
add
add
outs
xchg
add
or
jnp
add
add
adc
mov
js
and
add
or
jnp
add
add
call
add
add
push
push
add
add
add
push
pop
add
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
add
push
outs
fwait
add
or
jnp
add
add
popf
add
add
lock
add
add
or
add
or
jnp
add
add
outs
cdq
add
or
adc
add
cmp
add
add
add
add
or
add
or
jnp
add
add
outs
xchg
add
or
jnp
add
add
jnp
add
add
pushf
add
or
add
or
adc
add
push
cmp
push
add
add
call
add
add
push
add
add
add
or
add
add
add
or
add
add
add
or
add
or
pop
sub
push
sub
push
sub
push
sub
pop
sub
and
or
add
dec
add
push
outs
xchg
add
or
outs
mov
add
or
iret
cld
(bad)
jmp
push
add
add
cmp
popf
add
jnp
add
add
inc
adc
mov
movs
add
or
jnp
add
add
push
outs
xchg
add
or
jnp
add
add
outs
movs
add
or
jnp
add
add
adc
mov
add
jae
add
or
add
or
jnp
add
add
jge
add
pop
aaa
jae
add
or
add
or
jnp
add
add
adc
add
sub
add
and
push
add
sub
add
sub
xchg
add
or
jnp
add
add
or
or
jnp
add
add
adc
inc
jae
add
or
add
or
pop
add
add
out
add
add
jnp
add
add
call
push
add
add
pop
push
add
add
add
pop
pop
add
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
add
pop
push
add
add
add
pop
pop
or
jnp
add
add
pop
outs
fwait
add
or
adc
add
push
cmp
add
add
add
add
outs
mov
add
and
add
add
push
add
cmp
add
add
add
add
jnp
add
add
add
or
jnp
add
add
test
add
pop
sbb
and
add
add
add
or
add
or
jnp
add
add
push
outs
cdq
add
or
jnp
add
add
pop
pop
add
sub
add
outs
xchg
add
or
jnp
add
add
outs
mov
add
and
add
add
push
add
cmp
add
add
jnp
add
add
outs
cdq
add
or
jnp
add
add
out
push
add
sub
add
outs
xchg
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
xchg
add
or
jnp
add
add
inc
pop
sbb
add
or
add
or
or
add
sub
add
push
cmp
add
cmp
add
add
add
add
or
or
jnp
add
add
dec
push
add
sub
add
outs
xchg
add
or
jnp
add
add
inc
or
mov
cmps
add
or
jnp
add
add
push
outs
xchg
add
or
jnp
add
add
outs
movs
add
or
jnp
add
add
xchg
add
sub
add
and
add
pop
sbb
jae
add
or
add
or
add
add
dec
add
cmp
add
add
jnp
add
add
outs
cdq
add
or
jnp
add
add
fld
add
sub
add
outs
xchg
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
xchg
add
or
jnp
add
add
imul
add
outs
xchg
add
or
or
add
dec
add
cmp
add
add
add
add
nop
add
add
jnp
add
add
test
add
pop
and
add
add
add
or
add
or
jnp
add
add
outs
cdq
add
or
jnp
add
add
loop
add
sub
add
outs
xchg
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
test
jnp
add
add
outs
xchg
add
or
jnp
add
add
imul
add
outs
xchg
add
or
jnp
add
add
jnp
add
add
add
or
jnp
add
add
test
add
pop
sbb
and
add
add
add
or
add
or
jnp
add
add
outs
cdq
add
or
jnp
add
add
out
pop
add
sub
add
outs
xchg
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
xchg
add
or
jnp
add
add
jnp
add
add
pushf
add
or
add
or
jnp
add
add
jnp
add
add
cwde
add
or
add
or
jnp
add
add
outs
cdq
add
or
jnp
add
add
hlt
pop
add
sub
add
outs
xchg
add
or
jnp
add
add
outs
mov
add
add
add
add
inc
adc
add
jae
add
or
add
or
sbb
add
dec
add
cmp
add
add
jnp
add
add
outs
xchg
add
or
adc
rol
add
add
add
add
push
pop
bound
add
or
add
or
jnp
add
add
loop
add
pop
adc
add
or
add
or
add
add
pop
cmp
add
add
add
std
pop
add
sub
add
outs
xchg
add
or
jnp
add
add
outs
mov
add
add
add
add
inc
or
add
jae
add
or
add
or
sldt
add
push
add
cmp
add
add
add
add
jge
add
pop
or
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
xchg
add
or
jnp
add
add
push
pop
sbb
add
or
add
or
nop
std
(bad)
jmp
adc
add
dec
add
dec
add
add
add
cmc
(bad)
(bad)
jmp
dec
idiv
(bad)
sti
cmc
(bad)
jmp
(bad)
(bad)
call
std
(bad)
call
sti
(bad)
(bad)
cmp
(bad)
call
sti
(bad)
call
cmc
(bad)
push
(bad)
call
idiv
(bad)
cld
idiv
push
clc
(bad)
jmp
(bad)
jmp
idiv
push
clc
(bad)
jmp
stc
(bad)
call
idiv
jmp
(bad)
(bad)
call
add
and
add
add
cmp
jmp
sub
adc
add
add
or
add
or
add
sbb
add
add
add
adc
stos
add
or
add
sub
sub
add
push
or
and
or
add
dec
add
push
sub
inc
or
add
dec
add
push
push
and
dec
add
push
sub
add
sub
jnp
add
add
adc
add
add
add
add
jle
add
or
add
or
sbb
add
fst
add
add
or
add
push
sub
add
push
fld
add
add
add
add
add
add
add
add
bound
add
add
add
imul
sbb
add
sbb
add
sbb
add
and
add
and
add
add
dec
add
push
or
or
add
push
sub
add
(bad)
sbb
add
add
adc
add
add
add
adc
or
add
sbb
push
add
add
add
add
adc
scas
add
or
sub
add
or
push
pop
cmp
add
push
pop
sub
add
push
cmp
add
add
pop
frstor
jae
add
push
or
lea
add
add
add
adc
add
push
dec
add
clc
add
add
sub
adc
add
adc
or
add
push
adc
adc
push
dec
add
sbb
add
adc
add
add
push
cmp
add
add
pop
push
cmp
add
add
add
jo
mov
add
jp
sub
add
push
or
lock
push
or
lock
push
or
lock
push
adc
or
add
push
adc
or
add
push
adc
adc
push
ds
or
adc
or
or
adc
outs
mov
add
adc
push
ds
or
adc
adc
adc
outs
mov
add
or
add
or
outs
mov
add
pop
aam
add
add
or
adc
add
or
adc
push
adc
adc
lea
add
add
adc
push
sub
add
es
or
add
add
sbb
movups
nop
bound
add
add
jnp
jge
inc
cmp
add
adc
pop
inc
add
add
sub
add
push
adc
adc
lea
add
add
inc
add
add
sub
add
push
adc
or
lock
push
adc
adc
lea
add
add
adc
adc
add
or
adc
push
adc
adc
adc
adc
jns
add
adc
adc
pop
adc
adc
adc
aas
mov
(bad)
call
prefetchnta
add
add
lea
add
add
add
mov
add
adc
push
lea
add
add
add
mov
add
adc
adc
adc
pop
sub
sbb
sbb
sbb
mov
pop
outs
mov
add
adc
adc
sub
fisttp
add
add
sbb
pop
add
add
sbb
add
or
adc
sbb
add
add
adc
and
add
mov
add
adc
pop
adc
and
add
mov
add
adc
pop
adc
adc
sub
add
adc
sbb
sbb
mov
pop
outs
mov
add
adc
add
push
or
add
sbb
pop
add
add
sbb
dec
add
or
jb
add
jo
mov
add
jp
outs
push
add
or
or
pop
fstp
add
add
pop
lea
add
adc
adc
push
push
mov
mov
mov
mov
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
adc
pop
or
push
pop
push
adc
mov
adc
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
push
pop
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
sbb
push
pop
push
add
add
push
(bad)
sbb
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
sbb
add
push
add
add
add
sbb
push
add
add
add
add
adc
add
add
dec
push
add
push
add
add
arpl
add
sub
add
and
add
add
cmp
add
add
add
pop
or
add
dec
add
push
outs
xor
add
cmp
add
add
add
add
dec
push
add
push
add
add
adc
adc
adc
cmp
add
add
add
add
dec
push
add
or
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
call
add
add
add
add
add
cmp
sar
(bad)
jmp
adc
and
add
add
cmp
mov
jae
add
or
jae
add
or
pop
add
add
or
outs
mov
outs
mov
xor
adc
outs
mov
adc
pop
and
mov
outs
mov
adc
and
adc
mov
mov
pop
adc
outs
mov
add
add
or
adc
sub
add
or
add
or
adc
imul
aaa
add
add
pop
adc
adc
and
add
add
cmp
add
add
push
outs
mov
adc
push
pop
adc
mov
outs
mov
adc
pop
push
pop
adc
mov
jge
add
and
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
sar
(bad)
jmp
or
or
adc
mov
rol
or
adc
push
adc
mov
rol
or
push
add
add
push
or
(bad)
call
adc
adc
and
add
dec
or
(bad)
inc
adc
push
outs
mov
or
adc
push
outs
mov
or
push
outs
mov
outs
mov
or
sbb
add
or
adc
mov
pop
sub
add
or
add
or
add
add
push
cmp
jmp
or
or
adc
mov
rol
or
sbb
add
es
or
add
dec
add
push
and
or
xchg
add
fld
add
add
push
outs
ret
or
jae
add
or
mov
rol
or
outs
ret
add
or
outs
les
add
adc
adc
and
dec
add
push
adc
outs
lds
add
sub
add
and
or
xor
add
push
cmp
add
add
outs
mov
or
cmp
add
add
outs
mov
push
add
add
outs
push
add
or
cmp
add
add
outs
push
add
or
adc
add
add
add
add
xor
add
sbb
add
dec
add
add
add
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
test
add
add
add
add
add
add
xor
add
add
adc
add
pop
add
push
or
or
add
add
jne
add
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sbb
add
sbb
add
add
add
adc
aas
add
or
adc
sbb
or
fiadd
add
sub
add
sub
add
push
sub
add
and
add
sub
add
sub
add
push
sub
add
or
adc
and
add
add
dec
add
push
sub
add
push
sub
add
and
add
add
dec
add
push
sub
add
push
sub
add
or
and
dec
add
push
sub
add
pop
sub
add
or
adc
and
or
add
dec
add
push
or
or
and
or
add
dec
add
push
sub
add
push
push
sub
add
or
inc
je
add
sbb
or
add
dec
add
push
adc
push
adc
and
or
add
dec
add
push
sub
add
push
cmp
add
pop
or
or
and
add
add
dec
add
push
sub
add
push
and
add
sub
add
sub
add
jae
add
or
pop
pop
or
or
pop
pop
outs
retf
add
or
or
or
pop
pop
outs
push
add
pop
or
or
pop
sub
add
or
pop
movlps
sbb
add
and
dec
add
push
or
adc
or
push
and
or
add
dec
add
push
sub
add
adc
adc
or
add
add
or
adc
or
and
add
add
dec
add
push
sub
add
push
sub
add
adc
or
lods
add
add
or
pop
push
adc
inc
adc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fdivr
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
call
(bad)
jmp
(bad)
(bad)
jnp
(bad)
call
cmp
or
or
or
add
add
add
add
and
sbb
add
adc
add
or
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
ret
(bad)
(bad)
jmp
xor
or
or
or
add
aas
add
or
data16
add
or
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
add
push
mov
pop
mov
or
adc
pop
or
or
adc
pop
or
or
adc
sub
sbb
add
inc
xor
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
sbb
add
sbb
add
and
add
sub
add
sub
add
push
or
push
add
add
and
or
add
dec
add
push
sub
push
or
add
add
push
sub
add
add
add
add
or
add
sbb
add
sbb
add
add
jnp
add
add
jp
add
and
push
add
cmp
jnp
add
add
sbb
sub
add
push
push
or
and
add
add
add
add
jnp
add
add
jbe
add
add
add
xchg
xchg
sbb
retf
add
push
push
pop
pop
or
add
(bad)
(bad)
(bad)
jmp
add
add
sub
je
add
add
add
add
jp
add
add
add
add
jp
add
add
add
add
jnp
add
add
js
add
add
add
pop
sbb
retf
add
push
add
add
add
jnp
add
add
js
add
pop
sbb
retf
add
push
and
add
add
push
add
cmp
jnp
add
add
cmp
add
and
push
add
dec
add
add
add
(bad)
call
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
add
add
(bad)
call
(bad)
(bad)
inc
add
and
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
add
mov
jnp
add
add
or
sub
jnp
add
add
and
add
add
push
add
cmp
pop
sub
adc
add
push
mov
add
adc
add
(bad)
sbb
inc
sbb
add
add
dec
add
add
add
sbb
add
and
add
add
add
add
add
xor
add
add
adc
add
add
sub
adc
adc
add
and
add
dec
(bad)
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
(bad)
cmp
(bad)
(bad)
call
or
jae
add
or
add
push
(bad)
cmp
or
add
add
dec
(bad)
cmp
outs
iret
add
or
mov
add
add
sub
add
push
cmp
add
adc
pop
pop
adc
and
push
or
cmp
add
add
mov
add
adc
adc
call
add
or
ds
(bad)
dec
pop
pop
or
retf
jmp
add
add
dec
or
dec
add
add
add
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
add
dec
or
cmp
(bad)
(bad)
inc
outs
iret
add
or
lea
add
add
or
or
pop
or
pop
or
add
or
add
add
or
adc
and
add
add
cmp
adc
adc
mov
push
(bad)
(bad)
fisttp
add
add
adc
add
or
add
or
ds
add
and
add
add
push
or
add
or
outs
rol
add
pop
pop
outs
rol
add
adc
cmp
add
add
add
add
dec
or
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
add
add
cmp
(bad)
(bad)
call
push
outs
rol
add
outs
rol
add
and
(bad)
inc
pop
pop
pop
or
add
add
dec
or
(bad)
call
push
outs
aam
add
or
push
add
add
fld
add
add
add
or
add
push
adc
and
add
add
add
push
cmp
xor
add
jae
add
or
or
outs
(bad)
add
or
dec
or
add
dec
add
push
adc
outs
xlat
add
or
pop
add
add
add
add
dec
push
add
or
add
add
add
add
add
add
add
add
add
add
and
add
dec
push
add
sar
(bad)
inc
outs
(bad)
add
or
dec
or
add
dec
add
push
outs
fadd
add
cmp
add
add
add
add
cmp
sub
add
add
add
or
dec
or
add
dec
add
push
outs
fld
add
je
add
sbb
or
add
push
push
add
jle
(bad)
call
or
pop
outs
fiadd
add
fld
add
add
fld
add
add
add
add
sub
add
add
iret
inc
add
or
add
add
dec
add
add
add
add
add
mov
add
sbb
add
jb
add
das
add
adc
jnp
add
add
push
inc
push
add
add
add
add
dec
add
cmp
add
add
jnp
add
add
and
add
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
fisttp
add
add
or
or
add
add
jne
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
adc
add
add
add
adc
sbb
or
push
add
push
sbb
add
push
sub
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
pop
add
add
adc
mov
cmp
add
add
add
add
dec
add
cmp
add
add
mov
add
jnp
add
add
add
add
add
push
or
add
sub
add
or
xor
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
and
add
add
(bad)
(bad)
inc
mov
add
and
add
cmp
add
add
cmp
(bad)
jmp
add
add
push
cmp
or
and
add
push
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
sbb
sub
adc
add
add
add
add
add
xor
lahf
add
add
add
adc
add
add
dec
add
cmp
add
add
add
pop
sub
add
or
pop
inc
push
add
add
push
add
add
push
add
cmp
add
add
or
add
cmp
add
add
add
add
add
and
add
add
pop
add
add
add
fadd
add
je
add
add
lods
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
jle
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
xor
add
add
adc
sub
push
sub
fisttp
add
add
adc
fld
add
add
and
add
add
dec
add
push
sub
add
fld
add
or
or
popa
or
add
dec
add
push
outs
push
add
or
add
adc
adc
imul
or
or
add
or
add
or
adc
add
push
adc
add
push
adc
add
add
add
add
add
add
or
add
add
add
outs
outs
add
bound
add
add
add
outs
js
or
add
or
add
xor
add
add
add
add
and
add
add
outs
mov
add
arpl
inc
add
pop
shr
add
or
push
add
add
add
mov
add
(bad)
sbb
add
add
add
add
add
and
add
sbb
add
adc
add
cdq
add
add
add
adc
add
cmp
add
add
pop
add
fadd
add
je
add
add
pop
add
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
push
cmp
push
or
add
add
cmp
jl
add
add
pop
sub
push
pop
inc
(bad)
(bad)
jmp
push
add
add
xchg
(bad)
(bad)
jmp
add
add
xor
add
add
adc
pop
or
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
mov
add
sub
add
xor
add
add
xor
add
jae
add
or
add
or
add
outs
dec
add
or
or
add
push
add
outs
dec
add
or
fisttp
cmp
add
add
outs
dec
add
or
pop
or
adc
add
push
pop
add
add
add
add
sub
sbb
sub
add
sbb
add
add
add
daa
add
add
add
cmp
add
sbb
add
sbb
or
cmps
add
add
or
dec
add
add
jnp
add
add
xchg
and
add
add
and
add
add
push
push
add
nop
add
add
jnp
add
add
pop
adc
pop
pop
bound
pop
pop
adc
retf
add
push
cmp
add
add
add
add
sub
pop
pop
or
add
add
add
stos
(bad)
(bad)
jmp
pop
add
add
cmp
dec
add
add
add
add
add
xchg
or
and
sar
jmp
add
add
dec
push
add
add
add
jnp
add
add
pop
adc
pop
pop
bound
pop
pop
adc
retf
add
push
cmp
add
and
add
add
push
push
add
or
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
add
push
add
add
add
add
add
push
push
add
leave
(bad)
(bad)
inc
or
sub
add
adc
add
add
push
adc
adc
add
ds
(bad)
jmp
add
add
sub
add
push
cmp
xchg
(bad)
(bad)
inc
add
xor
add
or
add
sub
and
sbb
add
add
ds
(bad)
(bad)
call
add
cmp
and
add
add
push
push
add
push
(bad)
(bad)
inc
jnp
add
add
add
add
sub
add
add
mov
mov
mov
mov
add
add
add
add
sub
sub
add
add
ja
add
ja
add
add
add
add
sbb
add
add
add
adc
xor
add
or
sub
add
xlat
add
push
ins
and
cdq
icebp
aas
pop
sub
add
or
fisttp
fld
add
add
add
add
push
sub
sub
add
sbb
add
add
add
das
add
sbb
add
add
add
(bad)
verw
sbb
add
or
add
add
add
add
jnp
add
add
imul
jns
add
xchg
and
inc
add
jnp
add
add
xchg
sub
add
push
fisttp
add
add
add
mov
add
(bad)
sbb
add
add
add
add
add
sub
add
sbb
add
sbb
add
and
add
add
adc
jnp
add
add
add
add
add
inc
or
or
add
add
jne
add
(bad)
sbb
sub
adc
add
add
add
push
add
sbb
add
sbb
or
sbb
add
aaa
add
adc
jnp
add
add
add
or
push
or
cmp
add
add
jnp
add
add
bound
add
jnp
add
add
push
rcr
add
pop
jge
add
add
dec
add
add
or
push
or
dec
add
add
add
add
add
add
add
add
add
add
aad
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
or
cmp
jb
add
add
add
add
sub
or
lock
cmp
add
pop
push
cmp
add
add
adc
fisttp
add
pop
pop
adc
adc
add
add
jge
add
add
or
add
pop
cmp
(bad)
jmp
add
pop
adc
pop
add
add
sbb
add
add
push
add
add
jnp
add
add
or
or
xor
add
or
add
xor
(bad)
inc
sbb
add
add
add
sub
add
jge
add
add
jnp
add
add
cmp
add
add
adc
fstp
add
add
and
add
pop
jge
add
add
or
add
dec
or
cmp
(bad)
(bad)
inc
sbb
xchg
add
push
add
adc
jge
add
add
push
jge
add
add
sbb
add
add
push
add
add
sbb
xor
add
or
push
cmp
add
add
adc
fld
sbb
xchg
add
push
and
add
add
push
or
cmp
add
push
add
add
add
add
(bad)
(bad)
mov
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
sub
add
jge
add
add
jnp
add
add
cmp
add
add
adc
and
add
add
cmp
dec
(bad)
(bad)
jmp
add
add
add
cmp
add
add
adc
fld
add
add
and
add
pop
jge
add
add
sbb
xchg
add
push
and
add
add
cmp
adc
add
jnp
add
add
jnp
add
add
jge
add
add
add
add
add
add
add
add
add
or
add
dec
or
cmp
std
(bad)
inc
add
add
add
push
add
push
jge
add
add
or
add
dec
or
cmp
jnp
add
add
jnp
add
add
jmp
add
cmp
mov
pop
adc
and
add
add
xchg
std
(bad)
(bad)
fstp
add
add
add
add
add
pop
jge
add
add
sbb
xchg
add
push
add
jge
add
add
add
sub
add
jge
add
add
add
add
sub
add
push
cmp
jmp
add
add
jge
add
add
sbb
add
add
xchg
std
(bad)
inc
jnp
add
add
and
add
adc
add
add
add
adc
jge
add
add
push
pushf
add
add
add
jnp
add
add
pop
std
(bad)
call
adc
and
add
add
push
or
cmp
cld
(bad)
dec
push
cmp
add
add
adc
(bad)
or
xchg
add
push
or
add
add
jnp
add
add
pop
or
add
jnp
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
or
cmp
add
add
add
jnp
add
add
sldt
add
push
add
add
cmp
(bad)
fisttp
add
add
jge
add
add
and
(bad)
inc
mov
mov
mov
mov
add
add
add
add
push
mov
add
add
pop
mov
add
sbb
add
(bad)
sbb
or
inc
sbb
add
add
add
add
add
add
add
xor
add
add
add
or
add
add
cmp
add
add
and
add
add
push
push
add
mov
add
cmp
cmp
add
add
pop
adc
mov
add
add
add
add
imul
pop
sbb
retf
add
push
cmp
add
or
or
add
adc
mov
add
add
add
add
imul
pop
sbb
retf
add
push
cmp
add
add
adc
mov
add
and
add
add
push
push
add
and
add
sbb
or
add
add
adc
push
cmp
add
add
add
add
dec
push
add
or
add
add
add
add
add
(bad)
jmp
add
xchg
add
add
add
add
add
or
add
stos
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
add
add
add
imul
or
sub
add
push
and
add
add
push
push
add
pushf
(bad)
(bad)
dec
add
add
add
add
cmp
add
or
cmp
(bad)
(bad)
(bad)
cmp
add
add
or
mov
add
or
cmp
and
add
add
push
push
add
popa
(bad)
(bad)
(bad)
cmp
add
or
jnp
add
add
add
adc
(bad)
(bad)
jmp
mov
add
or
add
add
dec
push
add
xor
(bad)
call
or
add
pop
adc
adc
add
adc
pop
adc
pop
pop
and
(bad)
(bad)
call
add
jnp
add
add
jns
(bad)
jmp
add
push
push
add
clc
(bad)
(bad)
call
or
or
add
dec
push
add
call
add
jnp
add
add
jg
(bad)
(bad)
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
add
xchg
add
(bad)
sbb
add
add
add
fld
add
fld
add
das
add
add
add
adc
add
add
add
adc
sbb
or
push
add
push
sbb
add
push
sbb
add
add
push
sub
add
sbb
add
dec
add
add
add
adc
jnp
add
add
pop
add
add
add
push
or
jnp
add
add
push
add
add
add
add
dec
add
cmp
xchg
or
add
dec
add
push
jae
add
or
jnp
add
add
mov
dec
add
push
sub
add
or
cwde
add
add
add
push
add
cmp
add
push
add
add
add
loope
add
add
add
add
add
hlt
add
push
jge
add
add
add
add
sub
add
push
cmp
add
add
and
add
add
add
add
add
or
xchg
(bad)
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jle
add
add
pop
add
add
and
add
or
and
or
add
dec
add
push
pop
outs
lds
add
sub
add
outs
mov
add
fnsave
add
add
add
(bad)
add
sub
add
outs
xor
add
cmp
add
add
fimul
add
sub
add
cmp
add
add
jnp
add
add
mov
add
sub
adc
add
add
add
icebp
add
sbb
add
adc
add
rol
add
cmp
add
and
add
add
push
add
cmp
add
add
jnp
add
add
outs
loop
add
sub
jnp
add
add
jecxz
add
or
jnp
add
add
add
add
add
in
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
sub
add
dec
add
add
add
add
add
add
push
add
cmp
(bad)
(bad)
dec
add
add
add
rol
add
in
add
or
add
add
pop
cmp
jnp
add
add
outs
out
add
cmp
(bad)
jmp
add
add
pop
cmp
add
add
add
pop
outs
out
add
and
add
add
push
add
cmp
(bad)
inc
sub
add
xor
add
add
or
add
add
add
add
and
add
or
pop
jge
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
arpl
pushf
fstp
add
add
mov
mov
add
test
sbb
add
add
add
add
add
cmp
add
sbb
add
sbb
push
add
add
or
add
add
add
add
cli
inc
add
add
add
add
cmp
add
add
add
xchg
add
push
and
add
dec
add
cmp
and
add
pop
jge
add
add
jnp
add
add
push
add
add
add
add
jnp
add
add
jnp
add
add
sbb
add
add
add
add
aas
fadd
add
and
add
add
jno
add
cmp
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
or
add
add
add
jnp
add
add
ds
add
add
jnp
add
add
jnp
add
add
or
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
sub
add
cmp
add
and
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
and
add
pop
jge
add
add
add
add
pop
cmp
add
mov
add
fisttp
add
add
mov
sub
sub
inc
sbb
add
add
dec
add
add
add
add
add
sbb
or
fadd
add
cmp
add
add
or
xor
add
and
add
add
add
add
cmp
add
add
pop
maxps
add
push
pop
add
clc
add
add
sbb
push
and
add
add
cmp
add
add
pop
sbb
push
and
add
add
cmp
add
add
fld
adc
fnstsw
add
add
inc
add
adc
xor
add
or
jnp
add
add
xchg
or
push
aas
and
pop
maxps
add
add
pop
pop
maxps
xchg
add
push
and
cmp
or
xor
add
and
add
add
jnp
add
add
push
pop
or
xchg
or
pop
pop
maxps
xchg
add
push
and
add
add
add
push
cmp
add
cmp
add
pop
sbb
push
(bad)
add
add
sub
add
push
adc
adc
xor
add
or
jnp
add
add
push
pop
or
xchg
or
pop
maxps
add
inc
(bad)
(bad)
inc
pop
pop
maxps
xchg
add
push
cmp
(bad)
(bad)
jmp
add
add
dec
pop
add
or
add
add
add
(bad)
call
(bad)
(bad)
(bad)
stc
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
inc
add
add
add
add
dec
pop
add
sar
inc
jnp
add
add
xchg
and
add
add
pop
pop
maxps
xchg
add
push
pop
sbb
push
fst
add
pop
sbb
or
pop
add
add
add
push
cmp
fnsave
add
add
add
add
mov
mov
mov
mov
add
add
add
add
add
xchg
add
(bad)
sbb
push
sub
add
stos
add
add
add
add
add
sbb
add
icebp
add
add
add
adc
jnp
add
add
jecxz
add
sub
add
jae
add
push
adc
outs
call
add
sub
or
add
dec
add
push
or
outs
lds
add
or
push
add
add
fld
add
add
jnp
add
add
cmc
or
add
dec
add
push
pop
outs
jmp
outs
iret
add
or
add
or
jnp
add
add
add
add
sub
add
or
add
or
pop
and
add
or
outs
xor
or
pop
or
add
dec
add
push
outs
jmp
add
or
add
add
push
or
add
or
jnp
add
add
and
add
sub
add
or
add
or
add
jae
add
push
sub
push
add
add
fld
add
add
sldt
add
add
pop
add
add
add
dec
add
or
sub
add
add
add
add
xor
or
add
or
add
add
pop
add
add
add
add
add
loope
sldt
add
push
add
add
add
sbb
push
add
add
add
add
adc
and
add
or
pop
jge
add
add
add
add
dec
add
cmp
add
add
and
add
inc
aas
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
push
add
or
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
and
add
dec
add
cmp
and
add
(bad)
jg
add
push
add
add
sbb
add
push
mov
mov
add
test
sbb
add
add
add
add
add
cmps
cmps
add
sbb
add
cmp
add
xor
add
sub
add
push
sub
adc
add
lods
add
add
add
adc
add
add
dec
add
cmp
add
add
jle
add
or
add
add
outs
pop
add
or
pop
adc
pop
add
or
push
add
add
cmp
add
add
add
jge
add
add
iret
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
aas
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
outs
pop
add
or
add
add
dec
add
cmp
adc
loop
add
add
mov
add
add
xor
add
add
adc
pop
sub
add
push
push
inc
push
inc
or
or
add
es
or
add
add
push
sub
add
add
add
add
add
adc
add
or
add
sbb
add
sbb
add
add
adc
jnp
add
add
xor
fisttp
add
add
sub
add
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
push
and
dec
add
push
sub
bound
add
sub
add
add
add
add
sbb
add
push
add
add
add
adc
add
or
fst
add
add
and
or
add
dec
add
push
or
add
add
push
sub
add
adc
add
add
add
or
adc
add
sbb
pop
add
add
and
add
add
add
add
add
add
pop
pop
bound
nop
add
add
add
add
push
cmp
add
add
pop
jge
add
add
add
add
cmp
add
and
add
adc
add
add
add
push
add
cmp
add
add
add
add
adc
mov
add
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
and
add
add
push
add
dec
add
add
add
(bad)
inc
(bad)
dec
(bad)
inc
add
and
add
add
fcos
(bad)
inc
and
add
adc
xchg
add
add
and
add
push
mov
mov
add
mov
mov
sbb
add
add
add
add
repz
sbb
add
or
add
sbb
add
add
sub
add
fld
add
add
fld
add
add
pop
add
add
push
add
push
(bad)
sbb
add
add
sbb
add
add
add
or
push
sbb
add
add
add
adc
add
add
add
add
add
adc
add
add
add
adc
sbb
or
add
or
push
add
push
sbb
add
push
sbb
add
push
mov
add
sub
add
xor
add
add
add
add
and
add
sub
add
jae
add
or
push
outs
out
add
or
add
xor
add
add
add
add
adc
push
add
add
and
add
add
push
add
cmp
push
pop
or
add
add
dec
add
cmp
push
ds
jnp
add
add
add
add
or
inc
add
or
or
add
adc
add
dec
add
add
add
sub
add
add
jnp
add
add
pop
jge
add
add
jnp
add
add
cmp
add
add
push
add
add
push
add
cmp
add
add
push
add
add
push
add
add
jnp
add
add
add
add
pop
or
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
dec
add
add
(bad)
call
(bad)
inc
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
fwait
(bad)
(bad)
inc
push
add
add
add
add
push
add
cmp
in
add
or
or
add
mov
mov
mov
add
mov
mov
xchg
add
push
(bad)
sbb
sub
add
add
adc
add
adc
add
daa
add
add
add
fiadd
and
add
sub
add
outs
xor
add
cmp
add
add
and
add
sub
add
outs
or
add
cmp
add
add
lea
add
sub
add
sub
sub
xor
add
sub
add
or
and
add
add
push
add
cmp
or
add
add
sub
add
push
cmp
add
add
sbb
add
push
mov
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
(bad)
fst
add
add
or
sldt
add
pop
mov
add
add
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
push
add
add
add
adc
jnp
add
add
jnp
add
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
adc
add
outs
lock
or
outs
add
push
adc
push
sub
add
or
push
add
or
outs
push
add
or
icebp
add
or
sub
add
lea
add
add
adc
adc
pop
sub
adc
outs
xor
add
or
or
add
adc
adc
cmp
add
add
adc
call
cmp
adc
pop
pop
call
add
pop
sbb
pop
adc
or
sar
(bad)
call
add
add
or
pop
add
add
add
add
add
add
or
dec
add
add
push
add
or
add
add
add
push
add
or
icebp
add
or
adc
cmp
add
add
adc
call
cmp
adc
pop
pop
call
add
or
pop
adc
adc
or
sar
(bad)
call
add
add
or
sbb
add
adc
outs
repnz
or
pop
inc
dec
add
add
add
pop
outs
jmp
add
adc
pop
pop
outs
in
add
or
or
or
jp
jmp
push
inc
adc
outs
jmp
push
inc
adc
adc
or
pop
outs
xor
add
sub
adc
repz
or
add
add
add
hlt
add
or
adc
add
jle
add
add
add
cmc
add
or
adc
cdq
add
add
or
add
adc
inc
add
or
or
or
outs
add
add
or
add
or
or
or
add
add
or
push
adc
mov
add
adc
add
or
push
adc
push
cmp
add
add
or
or
push
fst
add
add
pop
adc
fisttp
add
add
pop
adc
fld
add
add
push
cmp
add
add
add
jo
test
sub
add
or
mov
add
add
push
pop
add
and
adc
fld
add
adc
adc
adc
imul
mov
add
and
push
pop
add
or
add
add
add
add
add
add
add
add
add
add
js
add
and
add
dec
pop
add
int
(bad)
call
unpcklps
sub
add
push
and
add
add
cmp
movaps
add
adc
adc
jnp
add
add
add
jo
inc
add
or
adc
adc
inc
add
or
sub
add
and
add
add
add
push
cmp
adc
outs
push
add
or
adc
sub
add
push
and
add
add
addr16
(bad)
call
adc
stc
add
or
push
fld
add
add
fld
add
add
add
add
add
push
outs
cli
add
or
push
adc
fst
or
add
adc
sti
add
or
adc
push
fst
add
add
adc
push
ffree
add
add
pop
lea
add
adc
mov
add
add
mov
mov
mov
add
adc
add
add
mov
push
mov
add
add
pop
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
adc
adc
push
(bad)
sbb
push
sub
add
add
add
rol
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
pop
add
add
sbb
add
add
add
push
add
add
sub
add
or
sub
add
sub
add
or
add
add
add
dec
add
cmp
and
add
pop
jge
add
add
push
add
add
add
push
cmp
add
add
add
push
add
add
or
ds
add
add
add
add
jnp
add
add
sub
and
ins
add
add
add
add
add
pop
and
jg
add
push
add
add
add
add
sub
add
push
cmp
add
cmp
add
push
pop
inc
sar
(bad)
inc
add
jnp
add
add
add
pop
sub
or
mov
add
add
add
jnp
add
add
sub
cmp
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
call
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
or
sbb
add
push
mov
mov
add
add
mov
sbb
sub
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
adc
add
adc
or
add
or
or
add
es
fld
add
add
sub
add
add
add
add
add
or
add
or
add
adc
add
add
add
add
add
or
inc
add
or
add
inc
add
sub
and
add
add
add
add
add
xor
enter
inc
add
adc
add
or
and
add
outs
add
add
or
add
add
dec
add
cmp
add
add
cmp
add
add
add
or
enter
outs
add
add
or
cmp
add
and
add
add
push
add
cmp
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
fnstsw
add
add
and
or
add
dec
add
push
adc
add
add
je
add
add
push
outs
add
add
and
push
add
cmp
or
or
add
es
fld
add
add
sub
adc
add
add
add
add
add
xor
sub
add
inc
add
adc
cmp
add
outs
add
add
or
pop
add
add
pop
lea
add
add
pop
push
sub
add
push
mov
add
add
sub
add
add
add
add
add
adc
add
or
add
adc
add
jge
add
inc
add
adc
add
add
dec
add
cmp
add
add
jnp
add
add
and
add
sub
sbb
add
es
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
push
add
retf
(bad)
(bad)
jmp
add
add
add
add
push
cmp
(bad)
(bad)
jmp
push
add
outs
fwait
add
push
and
push
add
cmp
add
add
xor
add
add
adc
jnp
add
add
xchg
pop
inc
or
pop
add
add
push
pop
add
cmp
add
adc
add
add
or
outs
add
or
pop
or
mov
add
push
cmp
add
add
cmp
add
add
or
add
or
add
pop
add
add
push
pop
add
or
add
add
add
add
add
add
xchg
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
dec
pop
add
sar
(bad)
cmp
add
add
jnp
add
add
add
add
add
add
add
add
imul
adc
adc
add
adc
add
imul
adc
or
add
adc
add
add
pop
pop
or
push
cmp
(bad)
(bad)
jmp
or
add
dec
pop
add
pop
(bad)
(bad)
inc
cmp
add
add
or
add
cmp
(bad)
inc
cmp
(bad)
(bad)
inc
outs
add
or
(bad)
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
outs
add
or
cmp
push
cmp
(bad)
(bad)
inc
push
outs
repnz
or
and
sar
(bad)
jmp
add
add
pop
cmp
(bad)
(bad)
jmp
push
adc
add
lock
(bad)
call
adc
push
add
add
push
pop
add
(bad)
(bad)
inc
adc
fisttp
add
add
adc
add
add
push
sub
add
inc
sbb
add
add
add
add
add
add
push
add
add
add
and
pop
jge
add
add
add
add
add
add
add
sbb
push
add
add
sbb
add
add
add
add
add
add
and
add
add
push
add
cmp
add
add
jnp
add
add
push
push
add
add
add
inc
add
or
sub
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
jae
add
push
or
or
add
push
add
mov
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
adc
add
in
add
inc
add
adc
add
add
dec
add
cmp
add
add
add
add
cmp
add
add
add
cmp
add
cmp
and
or
add
dec
add
push
sub
add
push
jge
add
add
mov
add
add
in
or
add
dec
add
push
sub
add
push
jge
add
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
jnp
add
add
push
pop
pop
inc
add
add
jb
(bad)
dec
add
add
test
pop
add
add
adc
in
add
add
outs
pop
add
or
push
add
add
push
add
cmp
sbb
add
add
add
add
add
add
add
or
add
add
dec
add
add
add
test
add
adc
push
adc
sub
cmp
add
and
add
add
push
add
add
add
add
add
add
add
add
add
add
add
and
add
dec
add
(bad)
inc
push
ds
add
add
(bad)
(bad)
(bad)
inc
outs
push
add
or
add
push
add
(bad)
inc
pop
sub
add
fisttp
cmp
add
add
outs
dec
add
or
fld
add
add
fld
add
add
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
inc
add
adc
jnp
add
add
and
add
add
push
pop
add
add
add
pop
adc
fnstsw
add
add
jnp
add
add
rol
add
push
inc
adc
frstor
jnp
add
add
jnp
add
add
mov
add
cmp
add
add
push
pop
add
ret
add
adc
and
push
pop
add
mov
add
add
jge
add
add
jnp
add
add
adc
xor
add
or
push
cmp
add
add
adc
and
add
dec
pop
add
test
add
fnstsw
jnp
add
add
sub
add
or
push
cmp
add
add
adc
and
add
add
cmp
pop
add
add
fst
jnp
add
add
adc
xchg
add
push
add
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
aad
add
or
and
add
pop
jge
add
add
jnp
add
add
adc
(bad)
(bad)
cmp
add
add
add
add
dec
pop
add
or
add
add
add
add
cmp
(bad)
call
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
inc
add
add
or
add
dec
pop
add
mov
(bad)
inc
jle
add
add
dec
add
add
sbb
add
adc
add
add
add
push
jge
add
add
sbb
aas
add
add
adc
fnstsw
add
add
add
adc
xor
add
and
add
add
add
add
push
adc
fstp
jnp
add
add
adc
xchg
add
push
and
add
add
push
pop
add
aas
(bad)
(bad)
inc
sbb
add
add
add
add
sub
add
push
cmp
sub
(bad)
(bad)
fstp
add
add
add
add
sub
pop
pop
cmp
add
add
pop
jge
add
add
pop
arpl
add
add
add
add
add
add
add
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
jbe
add
add
jge
add
add
dec
(bad)
(bad)
inc
jle
add
add
dec
add
add
push
add
add
push
pop
add
mov
(bad)
inc
sbb
add
sub
add
push
adc
fucom
add
add
adc
and
cmp
xchg
(bad)
(bad)
jmp
or
pop
inc
or
add
add
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
mov
pusha
add
add
jnp
add
add
int
(bad)
inc
pop
or
aas
add
add
adc
and
add
add
cmp
ss
(bad)
jmp
(bad)
add
add
jnp
add
add
loope
add
jge
add
add
add
add
add
ja
add
jge
add
add
or
add
dec
pop
add
cld
std
(bad)
(bad)
fnsave
add
add
adc
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
sub
adc
sub
add
add
sub
add
sub
add
add
add
add
sbb
pop
add
add
add
add
adc
add
cmp
add
add
cmp
add
add
sbb
retf
add
push
and
add
add
add
push
cmp
add
cmp
add
push
add
add
add
xchg
add
push
and
inc
add
add
add
mov
add
add
add
mov
add
add
dec
add
cmp
add
add
add
add
add
mov
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
fstp
add
add
add
mov
mov
add
add
mov
sbb
add
add
adc
add
add
add
rol
sbb
add
sbb
add
add
add
pop
or
sub
dec
add
add
add
add
dec
add
cmp
add
add
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
add
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
fnsave
add
pop
pop
(bad)
or
sbb
pushf
(bad)
(bad)
jmp
add
add
dec
add
cmp
or
adc
add
push
mov
add
add
mov
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
jnp
add
add
add
jle
add
or
sub
add
add
xor
add
add
add
add
and
add
add
cmp
add
add
add
add
add
add
dec
add
push
outs
xchg
add
or
jnp
add
add
inc
sbb
add
jae
add
or
add
or
add
add
cmp
add
add
sub
add
add
dec
add
cmp
add
add
jnp
add
add
outs
xchg
add
or
push
add
add
lock
add
push
sub
push
sub
push
sub
pop
sub
push
sub
or
add
sub
add
push
cmp
add
add
add
outs
xchg
add
or
jnp
add
add
fs
sbb
add
or
add
or
jnp
add
add
cwde
add
add
jnp
add
add
test
add
pop
and
add
or
add
or
jnp
add
add
outs
cdq
add
or
jnp
add
add
stc
or
add
dec
add
push
outs
xchg
add
or
jnp
add
add
inc
sbb
add
jae
add
or
add
or
jnp
add
add
or
add
or
add
add
push
cmp
add
add
add
add
add
fs
sbb
add
or
add
or
dec
add
add
or
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
call
add
and
add
add
cmp
mov
add
add
add
or
add
or
or
add
cmp
inc
add
add
outs
xchg
add
or
jnp
add
add
and
js
and
add
or
add
add
add
loop
add
add
add
add
or
or
jnp
add
add
adc
dec
jae
add
or
add
or
jnp
add
add
jle
add
pop
or
or
add
or
sbb
or
or
add
or
and
loopne
add
jae
add
or
pop
add
add
sub
sub
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
outs
fwait
add
or
pop
sub
pop
add
add
push
add
cmp
inc
add
add
jnp
add
add
add
or
jnp
add
add
test
add
pop
sbb
and
add
or
add
or
jnp
add
add
outs
cdq
add
or
or
add
dec
add
cmp
jmp
add
add
xor
add
add
add
dec
add
add
add
or
and
add
add
push
or
add
add
adc
adc
sub
add
or
or
or
(bad)
add
sub
add
sub
add
or
and
add
add
push
or
add
fisttp
add
add
add
add
push
add
add
movs
add
adc
and
or
add
dec
add
push
sub
add
or
frstor
add
add
jne
add
add
push
add
add
movs
add
add
add
(bad)
add
sub
add
sub
add
or
(bad)
add
add
jne
add
add
sub
add
and
add
add
fadd
add
adc
add
dec
add
push
sub
add
or
(bad)
add
add
jne
add
add
popf
add
add
movs
mov
add
adc
and
add
add
test
add
(bad)
jne
add
add
pop
add
add
movs
mov
add
adc
adc
and
or
add
dec
add
push
sub
add
or
fld
jne
add
add
pop
add
add
movs
and
add
adc
and
add
add
pop
add
add
movs
add
add
pop
adc
and
or
add
dec
add
push
sub
add
or
add
add
dec
or
add
adc
and
or
add
dec
add
push
sub
frstor
add
add
add
add
outs
(bad)
(bad)
(bad)
cmp
add
add
dec
or
add
add
add
(bad)
inc
(bad)
(bad)
call
add
(bad)
(bad)
dec
add
and
(bad)
call
add
(bad)
(bad)
call
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
ffree
add
add
jne
add
add
pop
add
add
movs
and
add
adc
add
(bad)
add
sub
add
sub
add
or
fst
jne
add
add
sar
inc
movs
xchg
add
adc
add
push
or
(bad)
call
or
sgdtd
or
or
or
(bad)
add
sub
add
sub
add
or
fst
add
add
add
add
cmp
add
and
add
add
push
or
(bad)
inc
movs
aaa
add
add
or
add
dec
add
push
sub
add
or
and
push
or
(bad)
(bad)
fst
add
add
push
add
add
fld
add
add
add
or
push
sub
add
mov
add
mov
add
push
add
add
add
sbb
pop
add
add
add
add
and
add
sub
add
sub
or
add
dec
add
push
sub
add
sub
push
and
add
sub
add
sub
or
add
dec
add
push
sub
add
sub
or
adc
add
sub
add
sub
or
add
dec
add
push
sub
add
sub
pop
and
add
sub
add
sub
or
add
dec
add
push
sub
add
sub
add
add
dec
add
push
adc
ds
add
push
or
adc
add
sub
add
sub
or
add
push
sub
add
sub
or
mov
add
push
or
add
dec
add
push
or
mov
add
sub
add
or
ret
or
add
push
sub
or
add
push
sub
add
sub
or
push
lar
add
add
outs
push
add
push
cmp
add
add
add
or
pop
push
outs
pop
add
push
es
inc
adc
pop
adc
cmp
add
add
or
add
adc
or
add
cmp
add
add
add
or
or
add
pop
inc
add
add
add
add
add
add
add
mov
or
add
add
add
or
add
add
add
arpl
add
cmp
or
push
adc
adc
jl
add
add
daa
add
add
add
add
add
add
add
add
or
add
add
add
outs
arpl
add
adc
lar
add
add
add
inc
add
add
or
add
push
cmp
add
cmp
add
and
inc
add
or
add
add
add
or
add
add
add
outs
arpl
add
cmp
add
add
or
add
add
add
add
inc
add
add
or
add
push
and
add
add
push
adc
cmp
add
add
nop
add
add
inc
add
or
add
add
add
add
dec
adc
dec
add
add
add
(bad)
(bad)
dec
add
iret
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
adc
lar
add
add
add
inc
add
add
or
add
push
fisttp
add
or
mov
add
add
inc
add
or
or
add
add
add
add
inc
add
add
or
add
push
adc
lar
add
add
add
inc
add
add
or
add
push
sub
add
or
add
add
push
adc
and
inc
add
or
or
add
add
add
push
outs
push
add
push
adc
add
add
dec
add
push
jae
add
or
add
add
add
or
add
add
add
outs
arpl
add
cmp
add
add
add
add
add
or
add
add
add
outs
arpl
add
sub
add
adc
cmp
std
(bad)
call
mov
add
add
popa
add
or
and
add
add
push
adc
add
lar
add
add
sub
add
outs
add
or
xor
add
and
add
add
push
adc
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
dec
adc
(bad)
call
mov
add
add
popa
add
or
sub
add
or
add
or
add
add
dec
adc
(bad)
call
mov
add
add
popa
add
or
fst
add
add
or
adc
aas
add
or
add
add
(bad)
add
add
push
lea
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
pop
or
or
adc
mov
add
add
adc
mov
adc
adc
pop
or
add
add
adc
mov
add
mov
adc
mov
adc
mov
adc
mov
add
add
adc
mov
add
mov
add
adc
add
mov
add
adc
pop
adc
add
mov
add
push
(bad)
sbb
add
inc
dec
add
add
add
xor
add
add
add
add
add
add
add
add
ja
add
call
add
add
add
add
sub
add
add
add
add
add
add
sbb
push
add
add
add
adc
add
or
outs
jne
add
and
add
add
push
add
cmp
jbe
add
cmp
add
or
add
or
add
add
dec
add
cmp
add
and
push
add
sub
add
and
add
add
dec
add
push
sub
add
sub
add
or
add
dec
add
push
and
add
add
dec
add
push
sub
add
sub
add
or
add
push
add
cmp
add
add
or
add
sub
add
or
movs
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
jp
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
or
add
sub
add
or
or
add
push
pop
or
sub
sbb
add
add
adc
add
add
add
fld
or
add
sbb
push
add
add
add
add
add
add
add
imul
add
push
pop
add
adc
add
cmp
adc
or
adc
adc
sbb
or
sahf
adc
adc
add
push
xchg
push
bound
or
pop
adc
ret
(bad)
(bad)
inc
push
xchg
adc
pop
or
pop
and
push
adc
pop
adc
cmp
add
adc
pop
pop
or
add
add
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
add
add
adc
pop
pop
adc
and
add
add
mov
add
or
cmp
and
add
add
push
pop
add
jne
add
push
or
mov
add
add
add
add
add
adc
add
add
and
push
cmp
add
pop
adc
pop
adc
xchg
sahf
adc
adc
adc
push
ds
add
and
add
add
push
pop
add
sub
add
add
add
add
adc
pop
pop
sbb
adc
xchg
xchg
adc
jmp
adc
add
cmp
add
adc
and
lods
add
add
or
add
cmp
add
add
or
sete
inc
add
pop
adc
adc
and
add
add
cld
add
or
adc
add
push
pop
add
enter
pop
adc
adc
adc
adc
add
aas
inc
(bad)
(bad)
(bad)
cmp
sbb
push
add
add
cmp
pop
pop
and
or
or
(bad)
(bad)
jmp
or
add
dec
pop
add
jp
add
adc
adc
adc
adc
xchg
adc
adc
pop
adc
adc
sahf
and
add
add
pop
add
add
or
pop
add
add
add
adc
add
jge
add
add
adc
sbb
pop
sbb
add
or
adc
add
sub
sub
add
es
adc
pop
adc
xchg
sahf
adc
adc
and
add
add
push
pop
add
or
add
sbb
pop
pop
pop
lea
or
or
or
adc
add
repnz
add
adc
pop
adc
cmp
add
adc
pop
pop
or
(bad)
(bad)
call
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
ds
(bad)
(bad)
call
adc
pop
adc
and
add
dec
pop
add
mov
add
push
lea
push
or
or
add
dec
pop
add
cdq
add
add
adc
pop
adc
xchg
sahf
adc
adc
adc
sbb
pop
adc
adc
or
(bad)
std
(bad)
call
or
adc
add
sub
add
push
cmp
add
adc
pop
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
pop
adc
adc
sahf
pop
push
xchg
adc
or
pop
pop
adc
adc
or
adc
pop
adc
sahf
adc
sbb
adc
pop
adc
and
add
add
push
pop
add
sbb
add
cmp
(bad)
(bad)
inc
adc
pop
adc
xchg
sahf
cmp
(bad)
(bad)
jmp
or
add
dec
pop
add
or
add
add
add
(bad)
mov
std
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
push
std
(bad)
dec
add
idiv
(bad)
inc
(bad)
dec
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
std
(bad)
call
add
and
add
add
cmp
adc
sbb
pop
adc
adc
or
test
(bad)
(bad)
cmp
add
add
adc
pop
adc
xchg
sahf
adc
and
adc
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
pop
adc
adc
sahf
and
add
add
push
(bad)
(bad)
call
or
sub
add
push
fld
add
pop
pop
lea
add
adc
adc
push
push
mov
adc
pop
pop
mov
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
add
adc
pop
or
add
add
adc
mov
adc
pop
movups
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
add
adc
pop
adc
add
add
add
add
push
(bad)
sbb
add
add
jmp
add
add
sbb
add
adc
add
mov
add
adc
add
add
dec
add
cmp
add
push
pop
inc
push
add
add
push
add
add
push
add
cmp
add
or
add
add
dec
add
cmp
add
add
add
add
and
cmp
add
add
pop
add
fadd
add
je
add
add
jl
add
add
pop
sub
add
or
test
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
xor
and
add
add
add
add
add
push
add
add
push
pop
adc
or
or
add
add
jne
add
(bad)
sbb
sub
adc
add
add
add
push
add
sbb
add
sbb
pop
add
add
add
add
add
add
or
add
or
and
add
dec
add
cmp
add
push
or
add
push
add
cmp
add
fnstsw
pop
pop
or
pop
mov
adc
push
add
add
push
add
cmp
add
add
or
loop
(bad)
inc
or
sar
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
adc
add
outs
adc
pop
adc
add
adc
add
pop
add
add
or
add
cmp
add
add
add
add
dec
add
cmp
or
add
pop
or
add
mov
sbb
sub
add
add
add
add
fcomp
add
sbb
add
push
add
add
add
or
add
sbb
add
add
and
add
or
jge
add
add
or
add
add
jne
add
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
adc
push
add
add
and
add
add
pop
add
add
push
mov
add
or
adc
adc
pop
sub
add
push
es
cmp
push
add
add
xor
or
add
cmp
and
add
sub
or
pop
sub
add
push
or
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
stos
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
or
add
add
dec
add
cmp
jae
add
or
pop
add
or
adc
sbb
push
add
add
adc
jnp
add
add
jne
add
add
add
(bad)
aaa
add
add
add
pop
push
add
or
push
or
cmp
jb
add
or
add
add
sub
add
push
cmp
adc
adc
add
add
pop
add
add
push
or
cmp
add
pop
push
push
sbb
add
add
add
test
jnp
add
add
test
jnp
add
add
test
jnp
add
add
or
jnp
add
add
push
adc
and
add
or
jnp
add
add
jne
add
add
jle
add
add
add
pop
pop
or
adc
add
push
add
add
aam
(bad)
call
adc
dec
add
add
add
jne
add
add
add
add
and
add
add
cmp
add
add
add
mov
add
and
add
add
cmp
rol
add
add
add
add
in
add
push
add
add
add
in
add
push
add
add
add
or
jnp
add
add
or
or
or
sti
add
push
add
add
add
or
jnp
add
add
or
or
or
sti
add
push
and
add
add
push
or
cmp
add
jle
add
add
or
add
add
or
or
or
pop
sub
add
and
add
add
push
or
cmp
add
push
add
add
add
push
(bad)
add
add
or
add
add
jnp
add
add
add
add
cmp
add
add
pop
sbb
retf
add
push
add
add
add
pop
jle
add
add
or
pop
(bad)
(bad)
jmp
or
push
or
dec
add
add
add
add
add
add
ds
(bad)
dec
add
add
add
add
jmp
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
jmp
(bad)
ds
(bad)
(bad)
fsin
(bad)
(bad)
out
(bad)
(bad)
(bad)
jmp
add
and
add
add
push
or
cmp
sub
add
add
dec
or
cmp
sub
add
push
fld
add
jnp
add
add
add
add
cmp
add
add
pop
sbb
retf
add
push
push
add
movs
add
push
and
add
dec
or
cmp
(bad)
inc
jnp
add
add
in
add
push
sbb
pop
adc
cmp
add
add
jnp
add
add
jbe
add
add
add
xchg
xchg
push
ds
add
pop
pop
pop
or
pop
pop
or
push
cmp
and
add
add
sbb
(bad)
dec
or
add
add
or
push
aas
enter
push
add
pop
or
arpl
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
call
or
or
pop
sub
add
add
add
add
pop
and
add
add
push
or
cmp
(bad)
(bad)
inc
sub
add
push
fnstsw
add
pop
or
adc
adc
push
push
mov
adc
pop
pop
mov
adc
sbb
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
mov
mov
mov
adc
pop
or
add
add
adc
pop
or
add
add
push
(bad)
sbb
add
add
add
sbb
add
add
add
sbb
add
sub
adc
add
sbb
add
add
add
adc
or
or
add
add
pop
cmp
add
pop
pop
pop
or
add
add
add
imul
and
add
dec
add
cmp
add
add
(bad)
(bad)
inc
add
add
add
xchg
add
add
add
xchg
pop
pop
or
ret
jmp
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
or
adc
add
push
mov
mov
sub
add
push
(bad)
sbb
sub
add
add
add
add
mov
add
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
cmp
sub
sbb
add
inc
sub
sbb
or
clc
add
add
add
add
add
add
add
push
or
add
add
dec
push
add
xchg
add
add
push
jge
add
add
jnp
add
add
jnp
add
add
xor
add
or
push
cmp
add
add
adc
add
jnp
add
add
jnp
add
add
xchg
add
push
add
add
pop
jge
add
add
pop
or
add
add
jnp
add
add
jnp
add
add
mov
pop
push
cmp
add
add
add
add
cmp
add
add
adc
add
jle
add
add
xchg
jge
add
add
push
add
add
add
add
dec
push
add
or
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
lds
add
fiadd
add
and
add
add
push
push
add
mov
(bad)
inc
and
add
add
add
add
push
cmp
add
add
adc
add
adc
dec
add
add
adc
dec
add
add
sbb
add
add
adc
add
jle
add
add
and
add
add
jge
add
add
jle
add
add
and
add
add
jge
add
add
jnp
add
add
ds
(bad)
(bad)
jmp
add
add
dec
push
add
ds
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
pop
add
push
push
add
add
add
or
sbb
add
or
add
dec
push
add
or
(bad)
(bad)
cmp
add
add
jnp
add
add
add
add
pop
inc
add
add
jle
add
mov
(bad)
call
add
add
loopne
add
add
add
add
sub
add
push
push
pop
pop
and
add
cmp
add
add
adc
add
push
push
add
mov
(bad)
inc
jle
add
add
xchg
jge
add
add
jnp
add
add
ds
(bad)
(bad)
inc
pop
or
add
add
jnp
add
add
jnp
add
add
xor
add
or
add
add
pop
add
add
push
push
add
push
(bad)
(bad)
(bad)
jnp
add
add
jnp
add
add
mov
or
add
(bad)
call
imul
add
add
inc
(bad)
(bad)
(bad)
fnstsw
add
add
add
add
jnp
add
add
xchg
add
push
add
add
pop
jge
add
add
add
add
dec
push
add
or
(bad)
call
adc
add
add
(bad)
inc
and
add
add
(bad)
(bad)
jmp
or
add
cmp
std
(bad)
call
adc
add
mov
mov
mov
mov
add
add
sub
add
push
(bad)
sbb
add
add
add
add
add
add
add
add
add
sbb
or
push
add
add
or
add
enter
adc
jnp
add
add
sldt
add
add
add
add
add
cmp
pop
cmp
add
add
jnp
add
add
(bad)
aaa
add
add
add
push
add
add
jp
add
or
pop
add
add
add
add
sub
jo
add
cmp
add
pop
or
add
add
dec
push
add
push
add
add
jnp
add
add
add
add
add
pop
push
add
or
add
add
push
cmp
add
add
adc
pop
adc
pop
(bad)
(bad)
call
add
pop
adc
pop
pop
and
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
push
push
add
or
add
add
add
dec
add
add
add
xchg
add
add
add
add
dec
(bad)
(bad)
(bad)
jns
(bad)
jmp
add
add
push
add
add
push
push
add
sar
inc
jnp
add
add
add
adc
add
add
mov
add
or
or
imul
sbb
or
add
jmp
pop
add
add
push
push
add
mov
(bad)
inc
jnp
add
add
adc
and
add
pop
push
add
popa
add
add
jnp
add
add
adc
and
add
pop
push
add
or
add
sub
inc
(bad)
(bad)
jmp
add
add
add
adc
and
add
pop
push
add
push
add
add
pop
or
and
add
add
push
push
add
pop
(bad)
(bad)
call
add
jnp
add
add
xchg
(bad)
(bad)
(bad)
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
add
xchg
add
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
dec
add
add
add
and
add
add
cmp
adc
push
or
pop
add
add
add
add
dec
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
dec
add
arpl
add
arpl
add
add
add
add
add
push
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
out
add
and
add
add
push
add
cmp
mov
or
add
add
outs
sbb
add
cmp
add
push
add
cmp
or
add
outs
sbb
add
or
add
add
cmp
(bad)
inc
outs
sbb
add
rcr
add
sub
add
or
add
add
pop
sub
add
or
add
add
add
add
add
dec
add
cmp
add
add
add
add
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
frstor
add
fld
add
add
fld
add
add
pop
pop
or
pop
mov
cmp
(bad)
jmp
pop
add
add
cmp
(bad)
(bad)
jmp
jle
add
add
add
add
add
add
rol
sub
push
or
add
adc
add
add
add
adc
add
add
dec
add
cmp
cmp
add
add
add
add
cmp
add
add
add
add
or
add
add
pop
cmp
add
sub
add
cmps
add
push
sub
add
push
add
push
outs
jmp
add
and
add
add
push
add
cmp
add
jle
add
add
push
push
add
sub
add
sub
add
or
(bad)
jmp
cld
add
push
add
add
outs
jmp
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
(bad)
dec
add
add
add
aad
(bad)
jmp
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
push
add
add
add
adc
add
cwde
add
add
add
adc
add
add
dec
add
cmp
add
jnp
add
add
outs
pop
add
or
add
add
dec
add
cmp
add
add
and
add
sub
add
sub
add
push
jge
add
add
pop
jge
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
add
add
or
add
push
add
cmp
sbb
add
add
add
and
add
sub
add
or
pop
add
add
push
adc
add
adc
push
push
jae
add
or
or
add
add
cmp
adc
push
adc
mov
or
push
adc
outs
push
add
or
or
add
or
push
add
or
adc
adc
outs
push
add
or
add
add
push
adc
add
or
or
or
add
or
add
add
pop
push
pop
outs
dec
add
or
adc
add
or
or
dec
add
or
or
outs
dec
add
or
adc
jae
add
or
(bad)
(bad)
(bad)
jmp
pop
add
add
push
adc
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
js
add
xor
add
dec
(bad)
(bad)
dec
add
add
add
add
dec
adc
(bad)
jmp
nop
add
add
dec
add
push
or
add
dec
add
push
adc
and
push
adc
(bad)
call
adc
and
dec
add
push
or
add
add
adc
sub
add
pop
outs
push
add
or
or
push
add
or
outs
push
add
or
or
sub
add
adc
and
add
add
push
adc
(bad)
call
or
(bad)
lea
add
add
adc
push
add
add
push
adc
(bad)
call
add
add
add
adc
or
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
mov
adc
mov
adc
adc
pop
or
adc
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
add
add
add
add
lahf
add
add
add
sbb
add
add
adc
add
add
pop
maxps
push
sbb
maxps
push
push
arpl
maxps
push
pop
or
xchg
pusha
push
add
add
jne
add
(bad)
sbb
sub
adc
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
popf
and
add
add
sub
add
add
add
add
and
add
or
pop
jge
add
add
add
pushf
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
jne
add
(bad)
aaa
add
add
add
pop
push
add
add
add
dec
add
cmp
sub
fst
add
push
mov
add
adc
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
or
lds
add
push
add
adc
add
push
or
adc
add
sub
add
sub
push
add
sub
add
sub
add
sub
add
adc
add
sub
add
sub
push
add
sub
add
sub
add
sub
or
adc
add
sub
add
sub
push
add
sub
add
sub
add
sub
adc
adc
add
sub
add
sub
sldt
sub
add
sub
add
sub
push
and
or
add
push
sub
sldt
sub
add
sub
add
sub
push
and
or
add
push
sub
sldt
sub
add
sub
add
sub
or
adc
add
sub
add
sub
sldt
sub
add
sub
add
sub
adc
ret
or
add
push
sub
or
add
push
sub
add
sub
or
pop
add
add
pop
call
add
add
add
jno
add
add
add
add
jno
add
add
add
call
or
adc
repnz
sub
add
adc
sub
or
paddd
push
jl
add
add
adc
adc
rcl
add
add
sbb
add
sub
add
or
sbb
add
jge
add
add
daa
add
push
adc
adc
push
jge
add
add
add
add
dec
daa
add
cli
add
add
adc
add
add
inc
mov
adc
or
add
pop
cmp
add
add
adc
pop
ficom
(bad)
lea
add
add
and
add
push
adc
mov
or
adc
jl
add
add
or
add
adc
add
add
and
adc
adc
mov
add
push
cmp
add
add
add
or
sbb
sbb
adc
adc
adc
pop
fidivr
mov
add
adc
jnp
add
add
sbb
add
adc
adc
jl
add
add
or
add
pop
push
(bad)
adc
adc
aas
add
push
cmp
add
and
add
add
cmp
add
es
add
or
adc
add
jae
add
or
add
or
and
and
outs
and
add
and
add
add
push
daa
add
lar
add
push
push
jl
add
add
or
add
push
outs
inc
add
push
cmp
add
add
add
or
push
pop
sub
adc
push
jl
add
add
or
add
pop
push
(bad)
adc
cmp
add
cmp
add
add
add
or
sbb
adc
add
pop
add
add
push
daa
add
test
adc
add
jp
add
add
or
sbb
add
(bad)
sub
add
or
sbb
mov
add
lea
push
and
push
daa
add
jo
add
adc
adc
push
jl
add
add
or
add
adc
and
xor
add
inc
outs
dec
add
push
jge
add
add
adc
add
add
inc
push
add
add
add
or
adc
jl
add
add
or
add
adc
add
add
add
add
add
or
aas
add
push
cmp
add
add
add
or
sbb
clc
add
add
adc
sbb
sub
add
or
sbb
adc
cmp
(bad)
call
add
(bad)
sub
add
or
and
add
(bad)
sub
add
or
and
add
(bad)
sub
add
or
pop
adc
push
cmp
(bad)
(bad)
jmp
add
add
pop
cmp
adc
and
sldt
sub
add
or
inc
add
or
or
add
or
or
add
or
add
or
sbb
add
or
clts
jl
add
add
aaa
add
push
cmp
(bad)
(bad)
jmp
or
add
dec
daa
add
bound
add
jae
add
or
add
(bad)
sub
add
or
push
adc
adc
(bad)
sub
add
or
add
add
adc
adc
adc
jl
add
add
or
add
sbb
push
and
xor
add
inc
outs
dec
add
push
jge
add
add
cmp
(bad)
(bad)
(bad)
cmp
std
(bad)
jmp
add
add
dec
daa
add
or
add
add
add
std
(bad)
call
(bad)
push
(bad)
(bad)
frndint
(bad)
dec
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
push
(bad)
jmp
cld
(bad)
call
add
add
push
add
add
push
daa
add
test
push
pop
sub
adc
add
add
adc
sahf
adc
push
jl
add
add
or
add
push
outs
inc
add
push
outs
push
push
push
add
add
add
or
cmp
adc
add
jae
add
or
add
or
add
or
iret
add
add
adc
adc
add
or
add
and
add
push
adc
jmp
add
add
dec
daa
add
sub
(bad)
dec
sub
add
or
test
(bad)
jmp
add
push
daa
add
adc
(bad)
call
push
push
and
add
add
add
cmp
std
(bad)
(bad)
jmp
adc
push
jl
add
add
or
add
adc
push
push
cmp
add
add
cmp
(bad)
(bad)
push
add
or
add
(bad)
sub
add
or
adc
adc
adc
(bad)
call
adc
sbb
add
add
or
add
push
cmp
adc
pop
add
or
adc
add
sub
adc
sub
add
or
sldt
add
sub
add
pop
adc
fnsave
add
adc
adc
(bad)
add
pop
lea
add
adc
mov
mov
add
add
mov
mov
add
add
add
adc
adc
adc
add
add
mov
or
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
mov
adc
adc
adc
push
(bad)
sbb
sub
add
inc
xor
add
add
add
add
sub
add
adc
add
sbb
add
push
push
add
push
push
add
ins
add
add
add
add
lea
add
sub
add
sbb
or
add
add
add
adc
and
add
pop
and
add
add
push
add
cmp
add
add
inc
add
add
jnp
add
add
and
add
or
add
add
add
add
add
and
pushf
add
push
cmp
and
add
add
fwait
add
add
and
add
ds
add
add
add
or
jnp
add
add
pop
and
jg
add
and
add
add
and
add
add
cmp
add
add
add
add
add
add
add
add
add
jnp
add
add
sub
add
add
add
pop
jge
add
add
add
add
sub
add
add
push
pop
cmp
add
add
add
cmp
add
add
stos
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
fnstsw
add
add
push
add
cmp
add
(bad)
add
push
mov
mov
mov
mov
add
mov
xchg
add
push
(bad)
sbb
add
add
cmp
add
cmp
add
sub
add
sbb
add
push
add
add
add
sbb
push
add
add
push
add
adc
aas
add
or
adc
adc
sub
or
sbb
push
and
adc
add
dec
add
push
adc
sbb
push
and
adc
add
dec
add
push
adc
sbb
push
adc
adc
push
sub
add
or
cmp
and
add
push
adc
and
add
add
dec
add
push
sub
add
push
sub
add
and
add
add
dec
add
push
sub
add
push
sub
add
adc
and
add
add
dec
add
push
sub
add
push
sub
add
and
add
sub
add
sub
add
push
sub
add
adc
or
push
and
adc
add
dec
add
push
sub
add
push
sub
add
push
cmp
add
add
or
push
and
inc
add
or
or
adc
add
dec
add
push
sub
add
or
add
or
nop
adc
push
mov
add
add
popa
add
or
pop
movlps
push
adc
pop
adc
push
push
mov
add
add
popa
add
or
pop
adc
push
push
mov
add
add
popa
add
or
pop
adc
push
push
mov
add
add
popa
add
or
pop
adc
push
push
mov
add
add
popa
add
or
pop
adc
push
push
mov
add
add
popa
add
or
pop
adc
add
add
sub
add
es
push
adc
push
mov
add
add
popa
add
or
pop
pop
adc
push
adc
add
dec
add
push
sub
add
push
and
add
sub
add
and
add
add
dec
add
push
sub
add
push
sub
add
push
sub
add
or
mov
add
add
sub
add
cmp
add
pop
sbb
push
push
mov
add
add
popa
add
or
pop
sbb
push
push
mov
add
add
popa
add
or
pop
sbb
push
push
mov
add
add
popa
add
or
pop
sbb
push
push
mov
add
add
popa
add
or
pop
sbb
push
pop
adc
pop
push
adc
and
add
sub
add
sub
add
push
and
add
dec
add
push
sub
add
adc
or
and
add
sub
add
or
sbb
add
adc
pop
and
push
push
mov
add
add
popa
add
or
pop
and
push
adc
cmp
dec
add
add
and
push
pop
and
add
add
sub
add
es
adc
push
adc
add
dec
add
push
sub
add
push
sub
add
cmp
daa
adc
push
mov
add
add
popa
add
or
cmp
add
pop
sub
push
pop
sub
push
and
add
add
dec
add
push
adc
pop
sub
adc
add
dec
add
push
sub
add
push
sub
add
and
adc
add
dec
add
push
sub
add
push
and
adc
add
dec
add
push
sub
add
push
sub
add
adc
pop
adc
and
add
sub
add
sub
add
adc
pop
das
adc
pop
pop
sub
pop
xor
push
push
or
xor
push
jle
add
or
pop
xor
push
push
mov
add
add
popa
add
or
pop
xor
push
adc
and
add
sub
add
adc
or
or
xor
push
adc
and
adc
add
dec
add
push
outs
add
or
add
adc
pop
xor
adc
add
dec
add
push
sub
add
push
adc
sub
add
push
adc
pop
adc
adc
es
cmp
push
pop
mov
add
add
popa
add
or
pop
cmp
push
sub
cmp
push
adc
add
or
inc
add
or
cmp
push
adc
adc
pop
sub
add
or
cmp
push
sbb
adc
adc
push
jle
add
or
adc
mov
add
add
mov
add
add
or
add
push
es
cmp
add
push
pop
adc
and
daa
add
sub
add
pop
aas
adc
sub
and
add
fstp
add
adc
adc
add
add
add
(bad)
dec
cli
(bad)
(bad)
fdivr
(bad)
(bad)
jmp
(bad)
inc
sti
(bad)
inc
sti
(bad)
inc
sti
(bad)
push
sti
(bad)
call
(bad)
(bad)
jnp
(bad)
dec
sti
(bad)
jmp
sti
(bad)
(bad)
mov
sti
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
cld
(bad)
call
cld
(bad)
jmp
cld
(bad)
push
(bad)
inc
cld
(bad)
jmp
cld
(bad)
(bad)
mov
cld
(bad)
jmp
cld
(bad)
jmp
cld
(bad)
(bad)
cld
cld
(bad)
dec
(bad)
call
(bad)
push
std
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jp
(bad)
push
std
(bad)
(bad)
fdivr
(bad)
(bad)
fdivrp
(bad)
(bad)
call
std
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jnp
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
fnstsw
push
adc
add
add
add
add
(bad)
(bad)
(bad)
frstor
sbb
add
adc
add
adc
inc
pop
adc
(bad)
adc
add
sub
ret
(bad)
(bad)
jmp
xor
or
or
adc
add
aas
add
or
lds
add
pop
sbb
adc
adc
push
push
mov
mov
mov
add
add
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
pop
pop
push
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
add
adc
pop
adc
add
add
adc
mov
adc
pop
pop
add
add
push
(bad)
sbb
inc
xor
add
add
add
add
add
add
ja
add
sldt
add
add
mov
add
add
sbb
add
sbb
add
imul
add
add
jge
add
add
add
add
dec
add
cmp
push
jge
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
sub
sub
add
add
add
add
add
pop
pop
add
sbb
add
and
add
dec
add
push
sub
xor
sbb
add
add
add
add
add
add
sub
add
push
fisttp
add
add
add
mov
add
(bad)
sbb
add
adc
add
add
add
adc
or
add
adc
add
mov
add
adc
add
add
cmp
add
or
add
fadd
add
je
add
add
add
push
add
cmp
add
add
jnp
add
add
and
add
add
cmp
and
add
add
add
pop
sub
add
or
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
inc
jbe
(bad)
jmp
push
add
add
push
add
cmp
add
xor
add
add
add
add
add
bound
jnp
add
add
jnp
add
add
pop
xchg
popa
and
jg
add
and
add
add
push
add
add
jnp
add
add
add
add
add
popf
add
jge
add
add
add
add
dec
add
cmp
add
add
jnp
add
add
jnp
add
add
(bad)
jg
add
jnp
add
add
xchg
and
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
push
and
inc
add
fst
add
push
mov
add
add
mov
sub
add
push
(bad)
sbb
sub
adc
add
add
add
add
add
xor
add
add
adc
sbb
or
push
add
push
sbb
add
push
sub
sbb
or
mov
add
pop
add
adc
add
add
clc
add
push
or
add
add
push
cmp
add
add
push
push
add
add
loope
add
and
add
dec
add
cmp
add
add
add
add
xor
aam
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
push
push
add
add
add
add
add
outs
mov
add
frstor
add
add
add
xchg
adc
add
dec
add
push
pop
outs
lds
add
sub
add
outs
mov
add
fld
add
add
add
add
add
add
xchg
xchg
add
sbb
add
and
add
add
add
add
add
xor
add
add
add
add
add
jge
add
add
push
jge
add
add
or
add
add
jne
add
(bad)
sbb
add
add
add
add
adc
add
sbb
add
or
add
and
add
add
add
scas
add
push
add
adc
sub
push
add
add
add
mov
add
(bad)
sbb
add
add
adc
add
add
add
push
add
sbb
add
sbb
pop
add
add
and
add
add
add
add
aas
dec
add
add
add
add
dec
add
cmp
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
add
add
fs
add
add
and
add
pop
jge
add
add
add
add
add
jnp
add
add
ds
add
add
add
add
jnp
add
add
adc
and
add
add
pop
add
add
push
jge
add
add
push
jge
add
add
mov
add
add
add
add
jnp
add
add
add
sub
add
and
add
dec
add
cmp
add
add
jnp
add
add
jnp
add
add
add
sub
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
and
aad
(bad)
inc
and
add
pop
jge
add
add
push
add
add
mov
or
sbb
add
push
mov
add
add
mov
mov
sbb
sub
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
and
and
and
xor
add
add
add
add
pop
pop
xchg
add
add
add
pop
pop
xchg
inc
rol
add
add
pop
adc
push
add
add
add
push
or
add
add
add
add
js
add
adc
add
add
add
add
add
add
add
js
add
(bad)
add
add
add
add
add
add
push
add
add
push
or
(bad)
dec
sbb
add
add
add
pop
pop
and
xchg
add
add
pop
and
retf
add
add
jnp
add
add
pop
pop
and
xchg
add
add
pop
and
lods
add
add
jnp
add
add
pop
pop
and
xchg
add
add
pop
and
lea
add
add
add
add
pop
pop
and
xchg
add
add
pop
and
outs
add
add
jnp
add
add
pop
pop
and
xchg
add
add
pop
and
dec
add
add
jnp
add
add
pop
pop
and
xchg
add
add
pop
and
xor
add
and
add
add
icebp
(bad)
(bad)
inc
jnp
add
add
and
add
add
push
or
(bad)
inc
jnp
add
add
add
add
add
add
add
add
jnp
add
add
adc
add
sub
add
or
push
add
add
add
cli
jle
add
sub
add
or
pop
add
add
add
add
add
pop
pop
pop
adc
add
add
add
add
or
jnp
add
add
add
push
push
aas
add
add
push
sbb
pop
add
add
add
stos
add
add
or
add
dec
or
(bad)
dec
add
add
add
adc
adc
pop
cmp
add
add
jnp
add
add
add
or
add
add
dec
or
(bad)
dec
adc
add
push
or
(bad)
inc
jnp
add
add
pop
pop
and
xchg
add
add
pop
and
daa
add
add
jnp
add
add
pop
pop
and
xchg
add
add
pop
and
or
add
or
or
push
(bad)
(bad)
dec
adc
add
add
add
add
add
add
cmp
jnp
add
add
adc
pop
xchg
adc
inc
pop
add
add
jnp
add
add
adc
pop
pop
pop
xchg
adc
inc
inc
add
add
pop
add
add
add
push
cmp
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
xchg
add
add
add
xchg
inc
sbb
add
and
add
cmp
(bad)
inc
jnp
add
add
add
jnp
add
add
or
and
jg
add
and
inc
add
adc
adc
or
add
push
pop
pop
and
(bad)
inc
adc
add
add
add
cld
add
or
add
add
or
add
cmp
std
(bad)
inc
jnp
add
add
inc
inc
adc
pop
or
add
or
or
push
mov
adc
pop
pop
mov
adc
sbb
mov
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
mov
add
adc
sub
sbb
or
add
inc
sbb
add
add
push
add
add
add
add
xor
add
push
add
pop
add
adc
add
push
or
cmp
pop
add
push
or
sub
add
or
add
sub
add
and
jg
pop
sbb
add
sub
add
pop
adc
sub
add
or
adc
adc
sub
add
pop
or
adc
sub
bound
add
add
or
fs
outs
or
add
and
add
mov
add
adc
adc
push
adc
add
imul
add
adc
push
add
pop
and
xchg
popa
and
add
add
xchg
adc
push
fs
adc
adc
pop
pop
and
(bad)
(bad)
(bad)
call
push
adc
and
add
adc
add
pop
adc
sub
push
sub
push
sub
or
adc
add
push
adc
sub
add
push
outs
mov
add
adc
push
push
sub
add
push
add
imul
sub
add
jb
add
jo
push
add
or
or
or
add
push
push
push
sub
adc
push
adc
mov
rol
or
sub
sub
add
and
add
add
adc
pop
adc
sub
or
or
ds
add
add
adc
push
adc
rol
or
sub
add
push
cmp
(bad)
(bad)
inc
sub
add
push
cmp
add
add
add
add
lea
add
add
or
fwait
add
push
adc
adc
push
ds
add
add
adc
rol
or
sub
int3
(bad)
(bad)
inc
sub
add
push
adc
push
and
add
sub
add
pop
adc
sub
adc
sub
push
sub
push
sub
or
adc
add
push
adc
sub
add
push
adc
imul
push
add
imul
adc
mov
sub
push
sub
push
sub
push
sub
push
sub
push
sub
add
push
push
sub
add
push
adc
push
adc
mov
rol
or
and
add
add
push
push
sub
push
sub
push
sub
push
sub
pop
adc
mov
sub
add
push
pop
push
adc
mov
push
addps
adc
add
push
push
sub
adc
push
outs
das
add
or
push
adc
imul
cmp
add
add
pop
inc
add
add
and
jge
sub
add
push
add
imul
push
adc
cmp
add
add
(bad)
call
add
imul
add
or
adc
add
adc
adc
adc
mov
mov
outs
mov
add
adc
push
push
sub
add
push
adc
mov
adc
add
jae
add
push
adc
adc
adc
sub
sub
add
and
add
add
adc
adc
adc
fwait
add
push
adc
pop
add
add
adc
adc
or
adc
mov
(bad)
(bad)
call
adc
repz
push
cmp
add
add
add
add
lea
add
add
push
adc
adc
sub
pop
adc
push
ds
add
add
adc
push
adc
outs
rol
or
adc
test
add
cmp
(bad)
(bad)
inc
outs
mov
add
adc
push
adc
outs
xor
add
push
adc
sub
add
push
imul
push
adc
outs
xor
add
adc
adc
mov
adc
adc
add
imul
cmp
sbb
add
add
and
jge
sub
add
adc
add
sub
add
push
adc
add
add
adc
adc
adc
push
adc
mov
mov
add
adc
push
adc
push
adc
mov
rol
or
add
add
sbb
pop
add
add
sbb
add
or
add
inc
push
add
add
and
jge
sub
add
adc
add
sub
add
push
adc
add
push
adc
push
adc
imul
push
push
adc
push
adc
mov
rol
or
sldt
add
sbb
add
sbb
or
push
outs
xor
add
push
outs
push
add
or
outs
les
add
adc
fstp
add
add
pop
jb
add
jo
pop
outs
lds
add
sub
add
cmp
add
sbb
and
and
push
add
add
and
add
and
and
push
mov
mov
mov
adc
sbb
mov
add
add
adc
sbb
add
add
push
mov
add
mov
pop
mov
adc
push
adc
mov
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
add
adc
pop
or
and
push
adc
mov
adc
pop
movups
mov
add
adc
mov
adc
pop
adc
adc
adc
mov
add
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
mov
adc
pop
sbb
sbb
adc
pop
sbb
sbb
adc
mov
adc
mov
adc
adc
pop
sbb
and
push
adc
mov
adc
mov
adc
mov
add
adc
pop
and
mov
adc
pop
and
and
mov
add
push
(bad)
sbb
and
add
inc
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
and
add
jl
add
sldt
add
add
sbb
add
sbb
add
mov
add
add
add
sbb
push
add
add
and
dec
add
push
sub
add
or
push
mov
add
push
push
mov
cmp
add
pop
call
dec
add
add
pop
call
and
add
add
add
add
add
inc
pusha
inc
inc
sub
add
push
pop
call
sbb
sub
or
add
or
xor
add
sub
add
or
add
add
pop
pop
(bad)
or
or
popf
(bad)
(bad)
(bad)
fst
pop
mov
or
test
sbb
add
add
add
popa
add
add
add
mov
add
push
add
add
add
sbb
or
cmp
add
pop
add
adc
mov
add
add
and
add
add
add
push
cmp
add
push
add
push
adc
add
adc
or
adc
popa
mov
adc
outs
add
or
fiadd
add
add
adc
mov
add
and
add
add
push
or
dec
add
add
add
add
add
add
add
add
pushf
(bad)
(bad)
jmp
add
push
add
add
add
add
dec
or
cmp
(bad)
(bad)
inc
je
add
add
mov
lea
add
add
xor
add
je
add
sbb
and
add
add
push
or
cmp
add
pop
jo
or
or
outs
push
add
or
add
add
sub
cmp
jmp
cmp
add
add
add
(bad)
adc
add
adc
(bad)
(bad)
jmp
add
push
or
cmp
(bad)
inc
adc
frstor
add
add
pop
or
mov
add
add
add
add
push
mov
add
mov
add
(bad)
sbb
pop
sub
add
inc
sbb
add
add
add
add
add
add
add
add
adc
add
add
add
adc
pop
or
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
mov
or
add
sub
xor
add
add
add
add
sub
add
or
adc
adc
and
add
add
dec
add
push
sub
add
push
sub
add
and
add
sub
add
sub
add
push
sub
add
or
adc
and
add
add
dec
add
push
and
add
add
dec
add
push
sub
add
push
sub
add
and
add
add
dec
add
push
sub
add
push
and
add
add
dec
add
push
sub
add
or
adc
sub
or
sbb
push
push
or
or
repz
add
dec
add
push
sub
add
push
and
add
sub
add
and
add
add
dec
add
push
sub
add
push
sub
add
push
sub
add
cmp
adc
pop
or
or
or
add
fucom
add
add
fld
add
pop
or
push
pop
or
(bad)
adc
add
dec
add
push
sub
add
sub
or
push
adc
sub
or
and
adc
add
dec
add
push
sub
add
sub
add
or
popf
add
add
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
call
(bad)
(bad)
call
(bad)
call
call
jmp
(bad)
jmp
(bad)
push
(bad)
push
dec
(bad)
(bad)
jmp
cmp
push
adc
add
add
add
add
and
sbb
add
adc
add
add
inc
pop
adc
(bad)
adc
add
sub
ret
(bad)
(bad)
jmp
xor
or
or
add
add
aas
add
or
and
pop
or
mov
add
add
add
add
add
add
push
mov
xchg
add
push
(bad)
sbb
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
jnp
add
add
adc
add
and
add
add
push
add
cmp
add
jae
add
or
add
push
add
push
add
add
cmp
push
add
add
add
add
push
add
cmp
add
jae
add
or
pop
pop
cmp
add
and
add
add
pop
pop
adc
xchg
and
add
add
jnp
add
add
pop
pop
bound
dec
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
call
(bad)
(bad)
push
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
add
add
add
add
dec
add
cmp
add
dec
add
add
push
add
add
push
add
cmp
push
jge
add
add
sbb
add
push
mov
add
add
add
mov
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
or
pop
add
add
add
sub
add
or
adc
sbb
or
fiadd
add
sub
add
sub
add
push
sub
add
and
add
add
dec
add
push
sub
add
push
sub
add
or
adc
and
dec
add
push
sub
add
push
sub
add
and
adc
add
dec
add
push
sub
add
or
adc
and
add
add
dec
add
push
sub
add
push
sub
add
and
add
sub
add
sub
add
push
sub
add
or
adc
pop
and
add
add
dec
add
push
sub
add
push
and
add
sub
add
sub
add
sub
or
or
dec
add
sub
add
sub
add
push
cmp
adc
sbb
adc
mov
repz
add
dec
add
push
sub
add
push
mov
adc
add
sub
add
mov
rol
add
sub
add
sub
add
push
mov
fst
add
sub
add
mov
add
or
add
or
add
adc
adc
outs
jo
add
pop
or
or
add
out
add
sub
add
sub
add
push
outs
jb
add
pop
or
or
add
jno
add
outs
jb
add
pop
or
or
add
pop
adc
add
dec
add
push
outs
jb
add
pop
or
or
add
jno
add
outs
jb
add
pop
or
and
add
sub
add
sub
add
push
outs
jb
add
pop
push
adc
adc
jno
add
outs
jb
add
pop
movlps
adc
scas
adc
add
dec
add
push
sub
add
push
outs
jb
add
pop
adc
or
add
jno
add
outs
jb
add
pop
adc
or
add
iret
adc
add
dec
add
push
outs
jb
add
pop
adc
or
add
jno
add
outs
jb
add
pop
adc
or
fcom
add
sub
add
and
add
sub
add
sub
add
push
and
add
add
dec
add
push
sub
add
push
sub
add
or
adc
lea
add
add
add
jmp
dec
add
push
mov
mov
repz
add
dec
add
push
sub
add
push
mov
adc
add
sub
add
mov
rol
add
sub
add
sub
add
push
mov
cmp
dec
add
push
mov
add
or
add
or
adc
sub
add
outs
jb
add
pop
push
adc
adc
scas
adc
add
dec
add
push
sub
add
push
outs
jb
add
pop
pop
adc
adc
jno
add
outs
jb
add
pop
sbb
or
add
(bad)
adc
add
dec
add
push
outs
jb
add
pop
sbb
or
add
cmp
add
pop
sbb
or
lea
add
add
add
mov
repz
add
dec
add
push
sub
add
push
mov
adc
add
sub
add
mov
rol
add
sub
add
sub
add
push
mov
fst
add
sub
add
mov
add
or
push
adc
or
(bad)
add
add
pop
pop
pop
push
adc
inc
sbb
add
add
cld
(bad)
call
(bad)
inc
cld
(bad)
call
cld
(bad)
(bad)
jmp
call
(bad)
jmp
(bad)
(bad)
jg
(bad)
call
(bad)
(bad)
mov
std
(bad)
(bad)
call
std
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
mov
(bad)
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
fnstsw
or
pop
adc
inc
add
add
add
add
push
and
sbb
add
adc
add
push
push
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
ret
(bad)
(bad)
jmp
xor
or
or
pop
cmp
aas
add
or
and
add
push
pop
or
adc
add
add
add
pop
mov
or
mov
add
(bad)
sbb
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
jge
add
add
add
and
add
cmp
add
add
add
or
add
push
add
cmp
add
add
jnp
add
add
outs
pop
add
or
add
add
dec
add
cmp
push
jge
add
add
(bad)
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
xor
add
add
add
inc
add
push
fld
add
add
fld
add
add
pop
add
add
push
add
push
(bad)
sbb
add
add
sbb
add
add
add
or
push
sbb
add
add
add
adc
add
add
add
add
sub
add
sub
bound
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
inc
or
or
add
add
jne
add
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sbb
add
sbb
add
add
add
add
adc
jnp
add
add
jnp
add
add
add
add
add
arpl
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
xchg
and
add
dec
add
push
and
sldt
sub
add
sub
add
push
mov
cmp
add
sub
add
sbb
add
add
add
sub
add
or
adc
sbb
or
sbb
add
sub
add
or
adc
and
add
add
dec
add
push
sub
add
push
sub
add
and
add
sub
add
sub
add
push
sub
add
or
adc
pop
and
or
add
dec
add
push
sub
add
push
push
sub
add
or
inc
sub
add
sbb
or
fld
add
sub
add
and
add
add
dec
add
push
sub
add
push
sub
add
and
add
add
dec
add
push
sub
add
push
and
add
add
dec
add
push
sub
add
adc
sbb
or
add
or
adc
add
dec
add
push
or
fld
add
sub
add
and
dec
add
push
sub
add
push
sub
add
and
adc
add
dec
add
push
sub
add
adc
pop
or
or
inc
adc
add
dec
add
push
sub
add
push
adc
and
dec
add
push
sub
add
push
sub
add
adc
or
or
dec
or
add
or
pop
or
or
add
push
cmp
add
pop
or
or
add
or
pop
push
adc
adc
adc
add
sub
add
adc
add
dec
add
push
sub
add
sub
add
es
movlps
and
add
sub
pop
adc
or
dec
or
add
or
(bad)
or
pop
push
adc
inc
adc
add
add
add
adc
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
call
push
(bad)
push
(bad)
dec
(bad)
(bad)
(bad)
std
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
cmp
(bad)
dec
(bad)
call
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
cmp
or
or
or
add
add
add
add
add
add
add
add
add
or
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
ret
(bad)
(bad)
jmp
xor
or
or
or
add
aas
add
or
popa
add
add
or
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
pop
or
or
adc
pop
or
or
adc
sub
sbb
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
sub
add
or
inc
add
add
dec
add
push
add
arpl
add
sub
add
sub
add
outs
inc
add
or
and
add
add
push
add
cmp
add
push
cmp
add
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
sar
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
push
jae
add
or
add
add
adc
fisttp
add
add
adc
fld
add
add
sub
adc
add
add
add
add
or
add
push
add
add
add
sbb
add
add
add
adc
or
dec
add
add
sbb
and
add
add
push
add
cmp
add
add
pop
arpl
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
or
add
sar
(bad)
jmp
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
cmp
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
fst
add
push
mov
add
adc
add
(bad)
sbb
sub
add
add
add
add
jns
add
add
add
xor
add
add
add
add
cmp
add
adc
push
aam
add
jae
add
or
add
or
push
add
add
fld
add
add
pop
add
add
push
add
push
(bad)
sbb
add
add
add
add
add
sbb
push
or
add
add
add
es
sbb
add
sbb
or
imul
add
add
add
ins
add
add
jnp
add
add
push
add
sub
add
push
cmp
add
es
pop
pop
sub
add
push
or
add
add
add
and
add
add
loope
(bad)
inc
and
(bad)
(bad)
(bad)
inc
add
and
sbb
jge
add
add
mov
add
add
dec
add
dec
add
add
add
add
mov
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
call
add
movs
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
outs
add
add
and
add
or
pop
jge
add
add
add
pop
rcr
xor
add
or
push
add
jne
add
(bad)
aaa
add
add
add
pop
push
add
add
add
dec
add
cmp
inc
imul
add
jne
add
(bad)
aaa
add
add
add
pop
push
add
sbb
and
add
add
jnp
add
add
sbb
pop
pop
jge
add
add
push
add
add
push
add
cmp
(bad)
(bad)
inc
mov
add
or
add
mov
mov
mov
add
mov
into
add
push
(bad)
sbb
sub
inc
sbb
add
add
inc
add
add
add
add
add
push
add
add
add
sbb
add
out
add
add
add
adc
add
add
dec
add
cmp
add
add
add
add
adc
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
mov
add
and
add
add
add
push
cmp
(bad)
(bad)
(bad)
cmp
or
add
add
add
sbb
add
sub
add
or
add
add
add
add
dec
add
cmp
add
add
add
add
mov
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
or
add
fld
add
add
add
add
add
add
add
add
jo
jb
add
or
add
sbb
pop
add
add
add
add
add
jnp
add
add
imul
add
push
add
add
jbe
add
add
add
add
jnp
add
add
pop
pop
jno
add
add
pop
add
and
add
add
cmp
add
add
add
add
or
add
cmp
add
add
add
add
add
push
or
pop
or
add
sbb
add
add
adc
adc
and
or
add
adc
add
jnp
add
add
pop
pop
pop
pop
jno
add
add
pop
add
add
sbb
add
adc
add
adc
add
or
add
in
add
add
add
add
pop
adc
add
add
add
or
pop
and
in
(bad)
(bad)
jmp
add
add
dec
(bad)
cmp
or
add
push
(bad)
cmp
add
cmp
add
add
jnp
add
add
push
sahf
and
add
add
arpl
add
add
push
pop
pop
sbb
push
or
add
add
cmp
add
add
add
add
or
and
add
pop
add
add
or
pop
and
add
add
add
pop
add
and
add
add
push
(bad)
dec
add
add
add
(bad)
(bad)
cli
add
add
(bad)
dec
add
add
(bad)
(bad)
jmp
add
pusha
(bad)
(bad)
dec
add
add
(bad)
inc
add
add
add
dec
(bad)
(bad)
call
add
add
add
add
dec
(bad)
cmp
pop
pop
or
add
add
das
(bad)
(bad)
inc
lea
add
add
pop
pop
push
sahf
push
pop
pop
adc
inc
sbb
add
adc
call
add
add
push
adc
add
add
add
inc
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
cmp
add
add
jnp
add
add
or
pop
xchg
adc
cmp
add
or
xchg
pop
adc
adc
pop
xchg
adc
add
jnp
add
add
adc
adc
rcr
or
or
cmp
adc
pop
pop
adc
and
push
(bad)
cmp
(bad)
(bad)
dec
push
cmp
add
add
add
jnp
add
add
pop
pop
jno
add
add
pop
add
dec
(bad)
cmp
(bad)
(bad)
dec
pop
add
add
add
pop
adc
pop
pop
pop
pop
bound
or
ds
(bad)
call
or
jnp
add
add
pop
aas
push
(bad)
(bad)
jmp
or
add
dec
(bad)
cmp
or
xor
(bad)
(bad)
fnsave
lea
add
adc
adc
push
push
mov
adc
pop
pop
mov
adc
sbb
mov
adc
sbb
mov
adc
sbb
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
add
adc
pop
or
add
add
add
add
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
data16
add
add
add
add
push
sub
jnp
add
add
mov
add
sub
add
xor
add
add
adc
and
add
add
add
add
add
add
dec
add
cmp
add
add
popa
add
add
sbb
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
inc
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
sbb
fisttp
add
and
add
add
and
add
cmp
pop
arpl
add
push
cmp
(bad)
(bad)
jmp
add
cmp
lahf
(bad)
(bad)
jmp
push
add
fst
add
push
mov
add
adc
add
(bad)
sbb
sub
add
add
add
add
add
lahf
lahf
add
add
add
xor
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
and
add
add
add
add
add
xor
add
add
add
add
and
add
add
push
add
add
add
outs
inc
add
or
push
add
add
push
add
add
and
or
add
and
add
add
cmp
add
add
add
add
or
or
add
push
adc
add
lea
add
or
add
fld
add
cmp
add
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
jp
(bad)
dec
add
add
add
add
dec
add
(bad)
call
add
push
add
adc
add
jae
add
or
add
push
and
add
cmp
add
add
add
add
add
add
sub
add
sbb
or
sub
add
sbb
add
add
add
add
cmp
add
add
add
add
sub
xchg
add
add
fld
add
add
and
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
dec
add
add
and
add
adc
dec
add
add
add
add
push
cmp
add
add
adc
add
adc
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
dec
add
add
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
aaa
(bad)
(bad)
jmp
add
add
pop
cmp
add
add
add
pop
add
pop
pop
bound
pop
push
imul
add
pop
mov
add
test
sbb
sub
add
add
push
add
add
add
add
add
add
add
sbb
add
push
add
add
add
adc
jnp
add
add
jnp
add
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
adc
push
add
add
data16
adc
add
add
cmp
add
add
cmp
add
cmp
add
and
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
add
cmp
(bad)
(bad)
jmp
push
add
add
jae
add
push
outs
test
add
and
push
add
cmp
add
adc
add
cmps
add
add
add
adc
add
add
dec
add
cmp
add
add
add
fadd
add
je
add
add
add
add
add
add
dec
add
dec
add
add
add
add
xor
add
xor
add
adc
add
inc
add
add
(bad)
(bad)
call
add
and
add
add
cmp
sar
(bad)
jmp
add
add
pop
sub
push
pop
inc
push
add
add
push
add
add
push
add
cmp
or
add
push
add
cmp
jnp
add
add
and
add
add
push
add
cmp
add
xor
add
add
add
add
adc
xchg
add
add
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
and
xchg
pushf
and
add
add
push
add
cmp
add
add
and
jg
add
add
add
add
dec
add
cmp
add
add
and
add
(bad)
jg
add
push
add
add
sar
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
and
add
add
cmp
(bad)
(bad)
jmp
add
pop
pop
adc
push
cmp
frstor
add
add
mov
add
mov
mov
mov
sbb
add
add
add
add
add
test
add
add
add
add
add
add
jle
add
or
les
add
sub
add
xor
add
add
add
add
adc
(bad)
adc
adc
sub
add
push
adc
jnp
add
add
or
add
fisttp
add
add
push
or
add
add
pop
sub
add
adc
add
add
add
and
or
add
or
sub
or
sub
push
add
inc
add
or
push
add
sbb
add
sub
xor
add
add
add
add
cmp
add
adc
push
inc
add
push
jae
add
or
add
or
push
add
add
fld
add
add
pop
add
add
push
add
push
(bad)
sbb
add
add
add
add
add
sbb
push
sbb
add
add
add
es
sbb
add
sbb
pop
add
add
add
add
jle
add
add
pop
add
jle
add
add
or
repz
or
add
jo
inc
add
or
and
add
add
inc
add
push
cmp
add
add
sbb
add
jle
add
add
dec
add
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
iret
(bad)
(bad)
call
add
and
add
add
inc
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
inc
add
or
fld
add
add
sub
add
or
add
add
or
push
or
xor
add
jle
add
add
call
cmp
add
sub
add
cmp
add
add
add
add
add
(bad)
add
add
pop
pop
or
jle
add
add
imul
adc
fst
add
add
pop
mov
add
sub
sbb
sub
sbb
add
add
add
pop
in
in
add
sbb
add
sbb
push
add
add
imul
add
or
add
or
sbb
cmp
add
add
pop
call
or
add
or
add
or
or
add
inc
pop
add
add
or
add
pop
pop
or
push
mov
into
(bad)
(bad)
call
or
add
pop
or
add
adc
push
pop
mov
or
test
sbb
add
add
sbb
add
add
add
add
or
add
add
add
pop
pop
add
push
add
sbb
add
sub
xor
add
add
add
add
add
xor
add
lea
add
add
fld
add
add
push
add
push
(bad)
sbb
add
add
add
add
add
push
push
add
sbb
add
or
sub
or
sub
sbb
or
inc
add
add
add
add
add
add
adc
jle
add
add
sbb
add
jle
add
add
adc
outs
dec
add
or
push
cmp
add
add
adc
fst
or
or
add
add
and
or
add
pop
cmp
add
or
pop
cmp
add
jle
add
or
pop
fucom
add
add
pop
inc
pop
cmp
add
add
pop
aas
pop
push
bound
add
add
and
pop
or
xor
add
or
pop
pop
pop
sbb
add
add
and
pop
adc
jle
add
add
and
push
bound
add
add
and
pop
or
push
add
or
add
add
pop
outs
push
add
or
pop
add
or
add
push
add
or
add
adc
imul
dec
add
or
add
add
sbb
add
jle
add
add
adc
or
push
add
add
fld
add
add
add
add
add
adc
push
fld
add
add
push
adc
frstor
add
add
pop
mov
mov
mov
add
add
add
xchg
add
(bad)
sbb
pop
sub
inc
dec
add
add
add
jmp
add
adc
add
std
add
add
add
add
add
add
add
mov
add
pop
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
sbb
push
add
add
add
add
jb
add
jo
xor
add
add
jo
xor
xor
add
cmp
add
cmp
add
xor
add
std
add
jo
sub
add
cmp
add
add
cmp
add
dec
add
or
jle
add
add
push
add
or
sub
add
or
push
jb
add
jo
inc
add
or
pop
outs
mov
add
sub
add
or
add
add
dec
add
cmp
add
add
lea
add
add
add
dec
add
push
cmp
pop
or
or
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
push
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
or
lahf
add
push
xor
add
or
add
mov
outs
push
add
or
or
cmp
add
add
outs
dec
add
or
fst
add
add
pop
or
sub
sbb
add
inc
xor
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
or
sub
or
sub
push
add
inc
add
or
push
add
inc
add
or
sbb
add
add
add
adc
sub
add
add
add
push
jge
add
add
add
add
dec
add
cmp
add
add
sbb
add
add
add
add
cmp
jae
add
push
jge
add
add
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
add
add
sbb
or
add
add
sub
sub
add
add
add
add
push
add
add
add
xor
mov
add
adc
sbb
add
add
mov
add
cmp
add
add
add
dec
add
cmp
add
pop
push
lea
rcr
mov
add
cmp
add
add
push
add
cmp
sbb
add
add
mov
add
cmp
add
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
call
push
lea
rcr
mov
add
cmp
add
sub
add
push
(bad)
sbb
add
add
add
add
add
mov
add
sbb
add
or
sub
or
sub
push
add
sbb
add
sub
and
add
lea
add
add
add
add
sub
add
sub
pop
sub
or
sub
sbb
add
add
adc
and
add
lea
add
add
and
add
add
scas
add
add
or
add
add
pop
and
pushf
and
add
add
push
add
cmp
pop
and
rol
add
and
add
add
pop
add
push
cmp
add
es
and
(bad)
(bad)
(bad)
(bad)
cmp
add
add
pop
and
or
add
in
(bad)
(bad)
(bad)
cmp
add
add
pop
and
pushf
pop
and
add
add
in
(bad)
(bad)
jmp
add
add
sub
add
cmp
add
add
sub
add
cmp
add
add
pop
and
pushf
pop
and
add
add
in
(bad)
(bad)
(bad)
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
push
(bad)
(bad)
dec
add
add
(bad)
dec
add
add
(bad)
(bad)
cmp
add
and
sar
(bad)
inc
jae
add
push
adc
add
and
or
or
and
pop
and
pushf
and
add
add
pop
add
push
cmp
push
jae
add
push
adc
fisttp
add
add
pop
mov
mov
add
(bad)
sbb
inc
sbb
add
add
add
add
add
add
or
add
sbb
add
add
add
add
sbb
add
add
sub
or
add
add
sub
sub
adc
add
add
add
add
sbb
add
or
sub
or
sub
push
add
sbb
add
sub
xor
cdq
add
add
add
adc
lea
rcr
mov
add
adc
add
add
add
sub
add
cmp
sub
add
sbb
and
add
mov
add
adc
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
adc
and
add
mov
add
and
add
pop
add
add
push
add
push
(bad)
sbb
add
add
adc
add
add
add
add
add
pop
sub
or
sub
sbb
add
mov
add
add
add
and
add
add
push
add
cmp
add
add
sbb
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
inc
pop
adc
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
push
jge
add
add
add
add
add
push
data16
add
or
add
add
jne
add
(bad)
sbb
add
add
adc
add
add
and
add
or
sub
or
sub
sbb
add
add
add
adc
adc
and
add
mov
add
and
add
add
add
dec
add
cmp
add
add
mov
jno
add
pop
test
pop
push
bound
add
add
popf
jle
add
add
and
pushf
cmp
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
and
movs
add
add
and
add
jle
add
add
and
add
add
pop
sbb
add
popf
jle
add
add
and
or
add
sar
(bad)
jmp
or
add
dec
add
cmp
(bad)
call
push
lea
add
add
pop
push
lea
add
add
push
or
add
push
add
cmp
(bad)
call
adc
and
add
mov
add
sub
add
push
add
add
xor
add
push
add
add
xor
add
or
push
(bad)
(bad)
(bad)
jle
add
add
pop
xor
pop
push
bound
add
add
popf
jle
add
add
and
pushf
and
add
add
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
cmp
jae
add
push
pop
or
add
add
popf
jle
add
add
sbb
or
add
dec
add
cmp
and
add
jle
add
add
and
(bad)
(bad)
inc
pop
pop
or
add
add
popf
jle
add
add
and
pushf
push
and
add
add
sar
(bad)
jmp
add
add
pop
cmp
(bad)
jmp
push
and
add
add
cmp
(bad)
jmp
pop
add
add
add
push
cmp
(bad)
(bad)
cmp
(bad)
inc
pop
push
aas
jno
(bad)
(bad)
fisttp
mov
jne
add
(bad)
sbb
add
add
add
lar
add
add
add
add
add
xor
add
add
add
add
adc
sub
add
add
jge
add
add
add
add
sub
add
cmp
add
add
pop
adc
sbb
push
jge
add
add
and
inc
add
lea
add
add
add
add
add
arpl
add
cmp
add
add
pop
push
pop
pop
(bad)
add
push
jge
add
add
mov
add
add
dec
add
dec
add
add
add
add
sar
call
add
add
(bad)
(bad)
(bad)
cmp
add
and
add
add
cmp
(bad)
(bad)
jmp
add
and
add
add
add
add
pop
(bad)
add
push
jge
add
add
add
add
sub
push
cmp
stos
(bad)
(bad)
inc
and
inc
add
lea
add
add
add
add
or
add
add
sub
sub
adc
add
add
add
fiadd
or
add
or
sub
or
sub
sbb
pop
add
add
adc
sub
add
add
jge
add
add
add
add
pop
cmp
add
add
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
add
jnp
add
add
aaa
add
add
add
add
add
add
dec
add
cmp
push
add
add
jp
add
add
add
add
mov
add
add
mov
sbb
add
add
add
add
push
add
add
add
pop
sub
or
sub
sbb
add
add
add
adc
sub
add
add
jge
add
add
add
add
dec
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
lea
add
add
add
add
and
add
lea
add
add
add
add
mov
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
push
jge
add
add
add
add
dec
add
cmp
add
and
add
jge
add
add
sldt
add
mov
add
adc
add
(bad)
sbb
add
adc
add
add
add
add
add
pop
sub
or
sub
pop
add
add
add
lea
add
add
add
add
sub
add
sub
pop
sub
or
sub
push
add
mov
add
push
sub
add
sub
add
pop
sub
or
sub
push
add
sbb
add
sub
xor
add
add
adc
add
push
add
cmp
add
add
add
cmps
add
add
add
add
add
movs
add
add
push
add
add
cmp
add
add
add
sbb
add
and
add
dec
add
cmp
add
add
add
mov
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
pop
jge
add
add
add
add
dec
add
cmp
add
xor
add
add
adc
add
push
or
cmp
add
add
add
add
cmp
add
add
add
add
add
mov
add
add
add
add
dec
or
cmp
add
add
jnp
add
add
mov
sbb
jae
add
push
outs
test
add
add
jge
add
add
or
add
push
cmp
add
fimul
add
sub
add
sub
add
or
xchg
(bad)
(bad)
jmp
add
add
cmp
jnp
add
add
ja
add
or
jnp
add
add
add
jnp
add
add
stos
add
add
add
add
push
add
add
jnp
add
add
lods
add
add
push
add
add
add
lods
add
add
pop
or
push
js
add
jae
add
push
adc
adc
adc
pop
adc
adc
add
add
jnp
add
add
cmps
add
add
adc
add
push
or
dec
add
add
add
(bad)
dec
(bad)
(bad)
dec
add
add
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
pop
add
add
push
or
cmp
(bad)
(bad)
inc
jnp
add
add
sub
add
push
sub
add
and
add
sub
add
outs
push
add
or
push
mov
jnp
add
add
imul
or
pop
push
mov
push
add
or
jnp
add
add
pop
push
mov
jnp
add
add
imul
and
add
add
cmp
(bad)
jmp
sub
or
sub
or
sub
cmp
sub
add
add
jge
add
add
add
xor
add
add
adc
add
add
cmp
add
add
(bad)
add
sub
add
outs
xor
add
cmp
add
and
add
add
cmp
add
add
add
add
add
les
add
and
push
add
cmp
add
add
pop
jge
add
add
push
add
add
sub
add
add
jge
add
add
add
add
add
jle
add
or
sub
add
push
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
push
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
sub
add
or
sub
or
sub
adc
add
add
add
and
add
add
push
add
cmp
add
add
and
push
add
cmp
add
add
sub
add
and
add
add
push
add
cmp
add
add
jge
add
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
and
add
pop
cmp
(bad)
(bad)
jmp
sub
add
cmp
adc
jnp
add
sub
or
sub
or
sub
adc
add
add
add
and
add
add
mov
add
cmp
add
jb
add
add
jge
add
add
add
scas
add
add
add
add
ins
adc
add
dec
add
push
outs
in
add
and
add
push
and
add
dec
add
push
sub
add
or
retf
add
and
add
sub
add
sub
add
or
into
add
add
pop
add
add
cmp
add
add
add
lea
add
add
add
add
add
add
dec
add
cmp
add
add
jae
add
or
add
add
outs
(bad)
(bad)
jmp
push
add
add
push
add
dec
add
add
add
add
push
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
test
add
and
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
add
push
add
cmp
add
lea
add
add
add
mov
add
jge
add
add
add
cmp
and
add
mov
add
jge
add
add
or
add
cmp
(bad)
inc
jae
add
or
add
add
jae
add
or
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
sbb
add
xor
add
outs
add
adc
or
add
dec
adc
cmp
add
adc
or
add
or
add
or
adc
and
adc
add
dec
add
push
outs
sub
and
add
add
push
adc
cmp
add
add
sub
add
add
add
cmp
add
or
leave
add
add
add
add
dec
adc
cmp
add
add
add
add
jae
add
push
adc
add
ret
add
pop
add
or
push
add
add
add
push
push
add
jecxz
add
add
outs
pop
add
or
test
add
or
add
or
pop
add
add
jnp
add
add
popf
adc
add
dec
add
push
and
add
sub
add
outs
jmp
outs
pop
add
or
pop
add
add
jnp
add
add
cmps
adc
add
dec
add
push
and
add
sub
add
outs
jmp
outs
pop
add
or
add
add
jnp
add
add
mov
add
sub
add
or
add
or
or
or
pusha
add
or
add
or
adc
or
test
add
and
add
add
push
push
add
cmp
add
push
cmp
push
sub
pop
add
add
push
push
add
pop
add
add
cmp
(bad)
(bad)
dec
outs
popa
add
or
mov
es
(bad)
jmp
add
push
push
add
or
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
add
add
add
add
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
add
xchg
adc
add
dec
add
push
and
add
sub
add
outs
jmp
push
add
add
push
push
add
sahf
(bad)
(bad)
inc
bound
add
or
add
push
push
add
mov
(bad)
inc
jnp
add
add
mov
dec
add
push
and
add
sub
add
outs
jmp
sldt
add
or
pop
add
add
or
add
or
sub
jnp
add
add
arpl
add
adc
adc
jne
add
add
ret
add
lds
add
sub
add
adc
add
push
adc
cmp
add
add
jne
add
add
dec
add
add
les
add
and
add
add
push
adc
dec
add
add
add
add
add
add
add
add
add
std
(bad)
jmp
add
add
add
pop
std
(bad)
call
(bad)
dec
add
add
add
add
or
add
pop
cmp
jne
add
add
dec
add
add
add
add
or
add
add
mov
add
cmp
adc
adc
outs
sub
adc
pop
sub
add
or
adc
outs
sbb
add
adc
cmp
add
add
outs
sbb
add
adc
cmp
add
adc
add
or
and
add
adc
add
or
sub
add
outs
add
or
or
add
adc
add
or
add
add
jae
add
push
adc
add
cmp
(bad)
(bad)
jmp
adc
and
adc
add
dec
add
push
outs
sub
adc
and
adc
add
dec
add
push
outs
sub
adc
adc
and
or
add
dec
add
push
sub
add
or
add
or
adc
pop
sub
add
or
adc
outs
sbb
add
adc
or
add
add
or
outs
sbb
add
outs
sub
add
adc
adc
cmp
(bad)
dec
sub
add
push
adc
and
add
add
push
adc
cmp
or
add
or
ds
(bad)
push
add
or
or
or
add
pop
cmp
(bad)
jmp
adc
call
add
push
mov
jne
add
add
scas
(bad)
(bad)
jmp
or
add
dec
adc
cmp
(bad)
dec
movs
add
add
pop
jae
add
or
or
pop
pop
and
sub
(bad)
call
or
daa
outs
add
or
adc
or
outs
add
or
and
add
add
paddd
inc
imul
add
add
add
sldt
add
adc
add
dec
add
push
cmp
add
add
mov
add
sub
add
or
jnp
add
add
and
push
adc
cmp
std
(bad)
inc
loopne
add
add
pop
add
or
aad
add
and
cmp
add
add
adc
push
add
cmp
add
add
outs
sbb
add
adc
or
add
add
pop
add
add
add
add
dec
(bad)
cmp
add
add
jnp
add
add
repnz
add
dec
add
push
adc
sub
add
push
outs
jmp
or
cmp
add
add
bound
add
sub
sub
cmp
add
add
pop
add
add
stos
add
add
push
cmp
cmp
dec
add
push
or
cmp
dec
add
push
sub
add
or
push
and
add
sub
js
add
add
add
add
xchg
adc
add
dec
add
push
and
add
sub
add
outs
jmp
add
inc
adc
test
add
push
cmp
(bad)
(bad)
inc
push
sub
add
add
dec
(bad)
cmp
add
add
pop
or
add
dec
add
push
or
in
adc
add
dec
add
push
sub
add
or
push
cmp
(bad)
jmp
add
push
(bad)
dec
add
add
add
jmp
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
push
(bad)
(bad)
dec
add
add
push
add
add
push
(bad)
cmp
(bad)
(bad)
inc
push
sub
sldt
add
or
add
or
or
sub
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sldt
add
add
add
xor
or
add
jo
add
and
add
add
push
add
cmp
add
jnp
add
add
sti
adc
add
dec
add
push
adc
sub
add
outs
jmp
pop
add
add
push
add
cmp
add
add
jnp
add
add
and
add
dec
add
cmp
adc
(bad)
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
inc
add
add
add
add
cmp
(bad)
(bad)
inc
jnp
add
add
imul
or
add
add
add
outs
ins
add
or
push
add
add
mov
add
cmp
adc
daa
add
add
jnp
add
add
outs
ins
add
or
add
add
sub
add
cmp
add
add
or
fs
(bad)
dec
pop
pop
or
add
add
add
imul
or
enter
and
pop
(bad)
(bad)
jmp
add
add
xor
movs
add
add
add
adc
add
add
cmp
add
add
sub
add
push
or
add
add
dec
add
cmp
add
add
add
add
add
add
dec
add
push
adc
sub
add
outs
jmp
add
add
add
or
add
dec
add
push
add
add
or
add
push
add
cmp
adc
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
sub
xor
out
add
add
add
and
add
dec
add
cmp
pop
add
or
add
lahf
add
add
cmp
add
add
add
add
cmp
add
outs
rol
add
and
(bad)
inc
pop
pop
pop
or
add
pusha
add
or
add
add
outs
outs
add
or
adc
pop
outs
jo
add
outs
jno
add
or
adc
add
dec
add
push
sub
add
pop
outs
or
add
jae
add
push
jge
add
add
push
add
add
mov
add
cmp
add
add
or
adc
add
dec
add
push
outs
jae
add
cmp
add
cmp
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
call
(bad)
push
(bad)
(bad)
inc
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
xor
add
add
add
add
add
sub
sub
and
add
dec
or
cmp
add
jnp
add
add
push
adc
add
dec
add
push
adc
jnp
add
add
jmp
add
add
dec
or
cmp
add
add
jnp
add
add
add
sbb
add
outs
je
add
add
add
add
or
add
or
or
add
sub
adc
add
adc
pop
outs
add
or
add
add
or
push
adc
outs
add
or
ds
add
add
add
add
dec
or
cmp
add
add
add
mov
add
cmp
add
and
add
add
cmp
add
add
add
sub
push
mov
mov
add
popa
adc
add
dec
add
push
adc
sub
add
outs
jmp
cmps
add
add
outs
add
or
add
outs
out
add
cmp
add
add
jnp
add
add
outs
loop
add
or
pusha
add
add
add
or
add
outs
outs
add
or
add
or
add
or
add
add
or
ds
(bad)
(bad)
jmp
add
add
dec
or
cmp
add
add
add
add
dec
add
push
sub
add
cmp
(bad)
(bad)
call
add
pop
outs
add
or
adc
add
or
cmp
(bad)
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
inc
(bad)
(bad)
(bad)
mov
or
add
dec
or
cmp
jnp
add
add
js
add
or
push
add
add
push
or
cmp
add
push
outs
sub
adc
outs
add
or
add
add
or
or
add
add
add
or
add
and
add
sub
add
outs
jns
add
adc
adc
push
ds
add
adc
outs
add
or
pop
adc
adc
outs
add
or
in
add
or
jnp
add
sub
add
and
dec
add
push
outs
jp
add
adc
adc
or
add
or
adc
outs
imul
add
or
and
add
add
adc
(bad)
inc
jnp
add
add
test
add
dec
add
push
adc
sub
add
outs
jmp
push
add
add
fld
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
sbb
push
add
add
jae
add
and
add
add
push
cmp
cmp
or
mov
adc
add
and
add
add
cmp
add
add
add
add
add
or
add
add
add
add
add
jae
add
or
add
or
add
add
jnp
add
add
jge
add
and
push
cmp
cmp
or
add
add
add
add
les
add
jge
add
add
pop
add
add
push
cmp
cmp
jnp
add
add
jle
add
add
add
add
xor
add
and
add
add
cmp
add
add
add
xchg
adc
add
dec
add
push
jae
add
push
adc
add
add
add
mov
add
sub
add
and
add
sub
add
outs
in
add
outs
jmp
jnp
add
add
les
add
dec
add
push
sub
add
or
sbb
sbb
rcl
add
dec
add
push
sub
add
outs
jmp
jnp
add
add
(bad)
or
add
dec
add
push
sub
add
push
outs
jmp
jnp
add
add
add
or
add
add
add
jnp
add
add
(bad)
adc
add
dec
add
push
add
add
add
sbb
sbb
dec
adc
add
dec
add
push
sub
add
outs
jmp
jnp
add
add
fist
add
dec
add
push
sub
sbb
adc
add
dec
add
push
sub
add
outs
jmp
jnp
add
add
jecxz
add
push
or
add
add
add
add
add
or
jnp
add
add
popa
or
add
dec
add
push
jle
add
or
add
push
outs
in
add
add
add
add
test
add
push
or
add
add
add
add
test
add
add
add
add
popa
or
add
dec
add
push
push
outs
out
add
add
add
add
in
adc
add
dec
add
push
jae
add
push
adc
sub
add
push
or
sub
add
push
adc
push
adc
cmp
adc
call
add
jnp
add
add
popa
adc
add
dec
add
push
jae
add
push
adc
add
add
add
or
add
dec
add
push
pop
outs
or
add
outs
jmp
jnp
add
add
std
adc
add
dec
add
push
pop
outs
xchg
add
outs
jmp
push
inc
pop
add
add
jnp
add
add
or
add
push
and
add
sub
add
outs
jmp
push
add
add
fld
add
add
sldt
add
and
pop
add
add
and
add
or
adc
pop
pop
adc
adc
adc
mov
push
(bad)
(bad)
(bad)
fisttp
add
add
push
cmp
add
add
push
outs
dec
add
or
add
add
add
adc
add
push
jae
add
push
adc
add
add
add
dec
add
add
jnp
add
add
xchg
add
push
ds
jnp
add
add
mov
add
outs
mov
add
adc
cmp
add
add
and
mov
add
or
jnp
add
add
sub
add
sub
add
jae
add
push
adc
jnp
add
add
or
add
dec
add
push
or
add
or
add
add
sub
and
add
add
add
outs
mov
add
je
add
add
add
add
add
dec
aaa
add
or
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
cmp
(bad)
(bad)
dec
cmp
add
add
jnp
add
add
mov
dec
add
push
and
add
sub
add
outs
jmp
add
add
dec
aaa
add
cmps
(bad)
(bad)
(bad)
cmp
add
add
jnp
add
add
repnz
add
dec
add
push
and
dec
add
push
or
cmp
dec
add
push
sub
add
outs
jmp
sldt
add
and
pop
add
add
and
dec
add
or
adc
sub
(bad)
(bad)
(bad)
fisttp
add
add
and
push
adc
add
outs
dec
add
or
fisttp
add
add
and
pop
add
add
and
add
or
add
add
add
mov
jnp
add
add
lea
add
push
ds
add
add
jnp
add
add
inc
adc
add
push
jae
add
push
adc
add
mov
add
outs
pop
add
adc
cmp
add
adc
sub
add
jnp
add
add
push
adc
add
push
jae
add
push
adc
add
add
add
addr16
add
push
adc
jmp
add
add
push
cmp
add
add
add
add
xchg
add
or
add
add
cmp
add
add
add
add
ins
adc
add
push
adc
add
jmp
jnp
add
add
jns
add
sub
add
adc
add
sub
sub
pusha
add
or
add
or
add
add
add
or
ds
add
add
cmp
add
and
add
add
push
cmp
dec
add
add
add
(bad)
(bad)
jle
(bad)
call
add
add
(bad)
call
add
add
add
add
add
add
sub
aam
(bad)
jmp
add
add
add
adc
add
adc
add
jmp
add
cmp
sbb
add
add
add
add
mov
add
push
adc
add
jmp
sldt
add
daa
cmp
add
add
daa
outs
dec
add
or
adc
sub
cmps
(bad)
(bad)
(bad)
fisttp
add
add
es
push
adc
dec
add
or
fisttp
add
add
and
add
and
or
add
add
add
xchg
adc
add
push
jae
add
push
adc
add
add
add
lods
adc
add
push
sub
sbb
add
outs
xchg
add
or
jnp
add
add
mov
dec
add
push
sub
xchg
add
or
add
or
add
or
jnp
add
add
retf
adc
add
push
sub
xchg
add
or
sbb
add
outs
xchg
add
or
jnp
add
add
fcom
add
push
sub
add
push
outs
xchg
add
or
jnp
add
add
in
adc
add
push
sub
add
push
cmp
add
add
cli
adc
add
push
cmp
add
add
push
push
add
sub
add
outs
xchg
add
or
jnp
add
add
call
add
push
sub
add
cmp
add
add
cli
adc
add
push
cmp
add
add
push
push
add
sub
add
outs
xchg
add
or
jnp
add
add
add
add
sub
add
sub
add
push
cmp
add
add
cli
adc
add
push
cmp
add
add
push
push
add
sub
add
outs
xchg
add
or
push
add
add
fld
add
add
sldt
add
sub
pop
add
add
sub
add
or
jae
add
or
push
add
add
add
pop
cmp
add
add
push
adc
outs
cdq
add
or
pop
outs
call
pop
cmp
(bad)
(bad)
call
push
outs
fwait
add
or
jnp
add
add
adc
dec
add
push
jae
add
push
adc
adc
outs
pushf
add
or
sub
mov
sub
popf
add
or
or
or
sub
add
push
adc
outs
(bad)
add
or
dec
or
add
dec
add
push
outs
fadd
add
cmp
or
add
or
dec
or
add
dec
add
push
outs
fld
add
je
add
add
or
or
add
or
or
adc
adc
outs
lahf
add
or
sub
and
add
adc
jg
add
adc
or
arpl
add
adc
adc
adc
pop
fs
add
add
or
or
fs
inc
dec
add
add
jnp
add
add
es
add
sub
add
jae
add
push
adc
add
cmp
add
sub
add
adc
sub
add
outs
jmp
sldt
add
sub
add
sub
or
(bad)
or
fs
add
adc
adc
pop
fs
cmp
fisttp
or
add
dec
add
push
outs
mov
or
mov
add
push
adc
add
dec
add
push
outs
mov
or
mov
add
movups
add
dec
add
push
outs
mov
or
mov
add
adc
or
add
dec
add
push
outs
mov
or
mov
sbb
add
adc
adc
push
adc
adc
sub
repz
add
jnp
add
add
cwde
push
add
sub
add
jae
add
push
adc
add
add
add
push
push
add
sub
add
adc
sub
add
outs
jmp
jnp
add
add
outs
push
add
sub
add
adc
sub
add
outs
jmp
adc
sub
adc
push
ds
add
add
add
add
popa
adc
add
dec
add
push
adc
sub
add
outs
jmp
unpckhps
sbb
add
add
add
add
popa
push
add
sub
add
adc
sub
add
outs
jmp
adc
das
push
adc
cmp
add
add
das
adc
call
jae
add
push
adc
add
push
fld
add
add
fld
add
add
xor
pop
adc
adc
adc
mov
into
(bad)
(bad)
(bad)
fisttp
add
add
cmp
add
add
outs
dec
add
or
fld
add
add
fld
add
add
sub
add
std
(bad)
(bad)
fstp
add
add
sub
cmp
xor
xor
pop
add
add
xor
add
or
fld
add
add
fld
add
add
sub
mov
cmp
(bad)
(bad)
fisttp
add
add
sub
push
pop
add
sbb
add
or
fisttp
add
add
sub
pop
add
add
sub
add
or
add
xchg
add
add
add
add
test
dec
add
push
jae
add
push
adc
add
add
add
mov
add
sub
add
add
add
add
js
add
adc
adc
sub
add
outs
jmp
adc
add
jnp
add
add
adc
or
add
or
push
frstor
add
add
pop
pop
and
pop
outs
lds
add
pop
and
cmp
add
adc
fld
add
add
jnp
add
add
test
add
dec
add
push
adc
outs
xchg
add
or
adc
adc
add
js
add
aas
xchg
(bad)
(bad)
(bad)
fisttp
add
add
xor
pop
add
add
xor
add
or
add
add
add
mov
dec
add
push
jae
add
push
adc
jnp
add
add
mov
add
sub
add
add
add
add
jecxz
add
adc
add
or
add
or
adc
cmp
add
add
jnp
add
add
mov
add
sub
add
jae
add
push
adc
add
add
add
sbb
add
or
sbb
add
add
dec
cmp
cmp
add
add
jnp
add
add
sti
adc
add
dec
add
push
adc
jnp
add
add
jmp
xor
add
and
add
add
push
cmp
dec
add
add
add
add
add
add
add
add
add
add
add
dec
cmp
cmp
(bad)
(bad)
call
sbb
add
add
add
or
sub
add
and
add
dec
cmp
cmp
jnp
add
add
rcl
add
sub
add
adc
jnp
add
add
jmp
sldt
add
cmp
add
add
outs
dec
add
or
adc
pop
pop
adc
adc
add
add
add
jecxz
add
aas
ud0
(bad)
fisttp
add
add
xor
pop
add
add
xor
dec
add
or
fisttp
add
add
sbb
pop
add
add
sbb
add
or
add
add
add
movs
add
or
pop
repz
jmp
add
add
dec
cmp
dec
add
add
add
repnz
inc
repnz
push
repz
dec
repz
dec
(bad)
jmp
repz
dec
add
add
push
add
add
push
cmp
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fld
add
cmp
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sldt
add
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
push
add
sldt
add
add
add
add
add
add
add
add
add
pop
push
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
sldt
add
add
adc
add
or
add
or
add
add
add
pusha
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
std
pop
add
iret
add
add
or
add
add
add
add
add
add
add
pop
add
jmp
add
fisttp
add
sldt
add
add
sbb
add
push
or
add
add
add
add
add
add
or
add
mov
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
xor
add
adc
jnp
add
add
mov
add
sub
add
jae
add
push
adc
push
or
xor
mov
add
outs
ins
add
or
pop
jnp
add
add
pop
jnp
add
add
add
add
add
fst
add
sub
add
jae
add
push
adc
add
add
add
sti
adc
add
dec
add
push
adc
sub
add
outs
jmp
adc
adc
add
dec
add
push
pop
lea
add
add
adc
adc
pop
sub
adc
outs
xor
add
adc
push
adc
cmp
adc
adc
adc
adc
and
add
add
dec
add
push
sub
add
cmp
add
add
outs
add
or
push
outs
xor
add
cmp
add
add
adc
add
adc
pop
adc
adc
adc
(bad)
dec
pop
outs
cmps
add
or
adc
push
add
add
adc
adc
add
adc
adc
outs
arpl
add
outs
imul
adc
and
push
add
sub
add
sub
add
cmp
add
add
or
movhps
add
dec
add
push
sub
add
cmp
add
add
adc
add
push
pop
pop
adc
adc
adc
(bad)
(bad)
call
add
add
outs
sbb
add
adc
add
add
dec
sbb
cmp
add
adc
outs
add
or
sub
add
cmp
add
adc
add
add
add
push
cmp
add
cmp
outs
push
add
cmp
add
add
or
sub
add
sub
add
sub
add
xchg
add
add
jne
add
add
ins
add
add
cmp
add
and
add
add
push
sbb
dec
add
add
add
(bad)
dec
add
add
add
add
(bad)
call
add
add
add
add
dec
sbb
cmp
(bad)
(bad)
jmp
pop
or
add
dec
add
push
adc
in
adc
add
dec
add
push
sub
add
adc
add
push
sbb
cmp
sbb
cmp
dec
add
push
adc
cmp
dec
add
push
sub
add
adc
fld
add
add
add
sbb
add
add
add
add
repnz
add
dec
add
push
adc
rol
add
outs
jmp
outs
popa
add
or
add
add
or
add
or
test
add
or
add
or
pop
add
add
jnp
add
add
popf
adc
add
dec
add
push
and
add
sub
add
outs
jmp
outs
pop
add
or
pop
add
add
jnp
add
add
cmps
adc
add
dec
add
push
and
add
sub
add
outs
jmp
outs
pop
add
or
inc
add
add
je
add
add
or
jnp
add
add
mov
add
sub
add
adc
outs
test
add
adc
adc
sub
add
outs
jmp
sub
add
adc
push
adc
cmp
add
add
or
or
add
adc
pop
sub
add
or
adc
adc
adc
outs
test
stos
add
or
adc
pop
pop
adc
adc
adc
outs
test
add
aas
leave
(bad)
(bad)
inc
jnp
add
add
jns
add
sub
add
adc
outs
sbb
add
outs
jmp
or
add
or
inc
test
add
adc
outs
stos
add
or
or
adc
add
or
add
add
or
adc
push
add
add
or
pop
adc
or
or
jae
add
push
adc
add
push
fld
add
add
fld
add
add
or
adc
(bad)
(bad)
(bad)
cmp
add
add
sub
mov
add
add
add
add
jne
add
add
adc
add
add
add
add
xor
add
sub
add
jae
add
push
adc
push
adc
or
add
outs
lahf
add
or
sbb
stos
add
add
sbb
add
or
mov
add
add
push
sbb
cmp
add
add
jnp
add
add
inc
pop
add
sub
add
jle
add
or
add
or
cmp
add
and
add
add
push
sbb
dec
add
add
add
add
add
add
add
add
add
add
and
add
dec
sbb
cmp
(bad)
(bad)
(bad)
cmp
add
adc
push
jae
add
push
adc
add
push
adc
pop
pop
adc
and
push
sbb
cmp
push
pop
adc
aam
(bad)
jmp
add
add
push
cmp
adc
outs
add
(bad)
(bad)
(bad)
fstp
add
add
sbb
add
add
sbb
sbb
pop
add
add
sbb
add
or
fisttp
add
add
sbb
pop
add
add
sbb
add
or
fld
add
add
fld
add
add
pop
sub
sldt
add
adc
pop
add
add
adc
add
or
push
pop
pop
or
add
add
add
imul
or
mov
sldt
add
adc
pop
add
add
adc
add
or
sub
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
mov
add
sbb
add
rol
add
push
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
fs
add
add
add
sbb
add
jo
add
jne
add
and
add
add
cmp
add
cmp
add
add
add
add
lods
add
or
adc
add
and
add
add
cmp
add
fld
add
add
outs
pop
add
or
inc
add
add
outs
scas
add
or
cmp
add
and
add
add
dec
add
add
adc
add
adc
pop
pop
adc
adc
adc
mov
ins
add
add
cmp
push
add
add
mov
add
cmp
add
add
fnsave
or
pop
outs
cmps
add
or
push
cmp
add
add
add
add
dec
or
dec
add
add
add
(bad)
mov
(bad)
(bad)
jmp
call
add
add
add
and
cmp
(bad)
(bad)
jmp
push
adc
cmp
push
adc
call
or
add
or
add
or
movhps
add
dec
add
push
sub
add
or
pop
(bad)
(bad)
call
or
add
add
dec
or
cmp
and
add
add
add
add
add
mov
jae
add
push
pop
sub
push
add
add
fld
add
add
add
adc
aas
(bad)
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
sbb
add
add
add
add
xchg
add
push
adc
add
add
add
inc
add
add
inc
add
add
add
add
dec
or
dec
add
add
add
add
add
add
add
push
add
add
add
(bad)
(bad)
(bad)
jmp
add
lds
add
and
add
add
push
or
cmp
(bad)
(bad)
jmp
add
add
add
adc
add
dec
add
push
jae
add
push
adc
and
add
add
push
or
cmp
jnp
add
add
outs
scas
add
or
and
add
add
(bad)
(bad)
(bad)
inc
adc
adc
add
push
or
cmp
(bad)
inc
and
add
sub
add
sub
jnp
add
add
sti
adc
add
dec
add
push
add
add
add
imul
or
or
or
pusha
add
or
add
or
sldt
add
or
pop
add
add
or
add
or
add
add
add
outs
ins
add
or
pop
add
add
cmp
(bad)
(bad)
jmp
sub
add
add
add
pop
add
add
add
xor
add
push
add
add
add
add
add
or
add
add
add
add
sldt
add
add
add
xor
add
add
add
add
add
sub
add
push
add
test
add
or
mov
add
or
add
or
add
push
or
cmp
add
add
outs
rol
add
push
ds
add
add
xor
add
and
add
add
push
or
dec
add
add
add
(bad)
(bad)
dec
add
or
add
leave
(bad)
(bad)
jmp
add
add
add
add
push
cmp
(bad)
(bad)
jmp
or
outs
rol
add
pop
pop
outs
rol
add
adc
add
add
dec
or
cmp
add
aam
add
or
push
add
add
fld
add
add
pop
and
add
dec
add
push
pop
outs
lds
add
or
clc
add
or
les
add
push
adc
fst
add
and
add
add
dec
add
push
and
add
sub
add
and
add
sub
add
jae
add
push
adc
sub
add
adc
frstor
add
add
push
adc
fst
add
add
push
add
push
jae
add
push
sub
add
push
push
adc
fld
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
or
add
add
add
inc
add
sbb
add
or
sub
or
sub
add
jge
add
add
add
ret
add
or
sub
or
sub
add
add
add
add
or
inc
sub
xor
add
jle
add
or
add
or
add
push
sub
add
add
add
add
add
jae
add
push
jge
add
add
add
or
sub
or
sub
outs
add
add
push
add
add
push
add
add
outs
arpl
add
add
xchg
add
push
sub
xor
add
add
add
add
and
add
pop
cmp
add
add
add
jge
add
add
cmp
add
and
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
lds
add
add
add
add
mov
sub
add
and
add
add
push
add
cmp
add
add
pop
sub
or
sub
cmp
sub
add
add
add
add
pop
sub
or
sub
pop
add
add
add
or
add
add
add
add
popf
add
push
sub
xor
add
add
adc
add
add
cmp
add
add
sub
add
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
and
push
add
cmp
(bad)
(bad)
inc
add
retf
add
push
add
add
push
add
cmp
pop
jge
add
add
add
add
pop
cmp
add
jge
add
add
add
add
dec
add
cmp
add
or
sub
or
sub
adc
add
add
add
add
adc
add
add
cmp
add
add
pop
jge
add
add
sub
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
add
push
add
cmp
xor
add
jge
add
add
add
add
dec
add
cmp
add
add
sub
add
rol
add
push
add
jae
add
or
mov
add
add
add
add
or
sub
or
sub
cmp
add
xor
add
sub
adc
add
enter
add
add
and
add
add
push
add
cmp
add
add
sub
add
add
add
jo
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
sar
(bad)
jns
add
and
add
dec
add
cmp
(bad)
(bad)
inc
jle
add
or
add
add
add
mov
jle
add
or
add
add
add
add
sub
mov
popf
(bad)
(bad)
inc
add
push
add
add
add
or
inc
cmp
add
add
jge
add
add
add
(bad)
add
add
add
add
push
add
add
push
add
cmp
(bad)
jmp
or
sub
or
sub
sbb
pop
add
add
add
add
and
add
add
push
add
cmp
add
add
add
add
imul
push
or
and
sbb
add
dec
add
push
push
mov
add
sbb
add
outs
mov
add
push
or
mov
push
sbb
add
dec
add
push
pop
mov
xchg
add
or
mov
add
and
add
add
push
add
dec
add
add
add
add
inc
add
add
(bad)
inc
add
jge
(bad)
push
add
jbe
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
and
pop
add
sub
add
add
add
add
add
add
sbb
add
outs
mov
add
add
cmc
pop
add
sub
add
add
add
add
add
add
sbb
add
outs
mov
add
add
add
add
daa
(bad)
(bad)
jmp
add
push
add
cmp
(bad)
inc
push
aas
cmp
(bad)
jmp
pop
add
add
cmp
(bad)
jmp
add
add
add
call
add
add
dec
add
cmp
add
add
or
or
add
sub
add
or
add
or
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
call
add
and
add
add
mov
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
cmp
or
jnp
add
add
call
test
add
sub
add
add
add
add
call
pop
add
add
sbb
add
outs
mov
add
fld
add
add
fld
add
add
pop
pop
or
push
add
add
push
add
cmp
stos
pop
add
sub
add
add
add
add
add
add
sbb
add
outs
mov
add
and
add
dec
add
cmp
(bad)
jmp
add
add
add
adc
push
sbb
add
sbb
push
add
add
and
add
and
add
add
cmp
add
add
and
pop
add
sub
add
outs
mov
add
jge
add
add
add
cmc
pop
add
sub
add
outs
mov
add
jge
add
add
and
sbb
add
dec
add
push
outs
mov
add
or
push
lea
add
jge
add
add
or
pusha
add
add
push
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
dec
add
add
add
add
add
add
add
sar
(bad)
inc
add
stos
pop
add
sub
add
outs
mov
add
jge
add
add
add
add
dec
add
cmp
pop
add
add
jnp
add
add
add
push
sbb
add
dec
add
push
pop
mov
xchg
add
or
pop
add
add
sbb
add
outs
mov
add
mov
add
add
add
add
and
dec
add
push
mov
add
pop
pop
or
add
add
dec
add
cmp
(bad)
inc
push
aas
popf
(bad)
(bad)
jmp
pop
add
add
mov
add
cmp
(bad)
(bad)
jmp
add
sbb
add
and
add
add
push
add
cmp
add
add
adc
add
add
add
repz
sbb
add
adc
add
lahf
add
add
add
adc
add
mov
add
cmp
add
add
xor
add
add
add
add
fiadd
add
push
add
add
sbb
add
add
add
loopne
add
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
and
add
add
push
add
cmp
add
add
add
add
add
dec
add
cmp
or
sub
or
sub
cmp
add
mov
add
add
jecxz
add
sub
cmp
add
mov
add
add
jecxz
add
sub
cmp
add
mov
add
add
jecxz
add
sub
adc
add
jbe
add
add
add
and
add
add
mov
sbb
add
add
sub
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
or
add
retf
jmp
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
add
sub
add
cmp
(bad)
(bad)
jmp
add
mov
add
add
cmp
add
pop
sub
or
sub
push
add
mov
cmp
add
xchg
add
or
outs
pop
add
or
add
xor
add
add
add
add
add
add
add
add
mov
add
add
add
sub
jnp
add
add
mov
sub
add
add
add
sub
add
mov
jnp
add
add
mov
outs
mov
add
add
sub
add
add
xor
xchg
add
add
add
and
add
add
push
add
cmp
add
call
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
mov
jle
add
or
add
or
add
cmp
add
jge
add
add
add
add
dec
add
cmp
add
xor
add
add
add
add
and
add
add
push
add
cmp
mov
test
add
add
push
push
add
sub
add
sub
add
push
jge
add
add
pop
jge
add
add
add
add
cmp
outs
mov
jnp
add
add
push
and
add
add
add
sub
add
add
call
sub
inc
add
or
push
pop
adc
adc
add
or
outs
mov
jnp
add
add
mov
add
and
add
add
push
add
cmp
add
add
add
add
fdivr
(bad)
inc
jnp
add
add
sar
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
add
mov
(bad)
call
push
add
or
add
and
(bad)
dec
add
mov
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
add
jnp
add
add
add
or
cmp
add
mov
and
sub
mov
add
sub
add
add
add
add
(bad)
adc
add
dec
add
push
sub
add
outs
xchg
add
or
add
add
add
xor
add
outs
xchg
add
or
pop
add
add
push
add
cmp
(bad)
inc
add
mov
add
push
add
cmp
(bad)
jmp
adc
add
sub
add
add
add
and
push
add
cmp
jnp
add
add
outs
movs
add
or
sub
jnp
add
add
rol
or
and
sub
add
sub
add
or
push
sub
add
or
pop
add
add
mov
add
add
add
add
or
add
add
and
add
add
and
add
add
sub
add
or
jnp
add
add
cli
add
add
add
or
data16
add
add
push
add
dec
add
add
add
add
adc
add
xor
add
push
(bad)
(bad)
call
add
push
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
jae
add
or
add
add
pop
jge
add
add
push
add
add
push
add
cmp
jnp
add
add
inc
mov
push
jae
add
or
add
or
add
add
cmp
jae
add
or
add
add
add
add
dec
add
cmp
(bad)
jmp
add
sub
add
push
add
sti
sldt
sub
add
add
bound
add
sub
add
adc
add
mov
add
adc
add
add
cmp
jnp
add
add
enter
cmp
add
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
and
aad
(bad)
inc
cmp
add
add
add
add
dec
add
cmp
jnp
add
add
leave
add
or
add
mov
add
add
push
add
cmp
jnp
add
add
aad
(bad)
jmp
add
add
dec
add
cmp
add
jnp
add
add
inc
jge
add
add
outs
pop
add
or
add
pop
sub
or
sub
xor
jnp
add
add
mov
add
add
add
add
add
outs
xchg
add
or
add
adc
add
out
add
add
add
adc
add
push
add
cmp
add
add
jnp
add
add
retf
or
adc
jmp
add
imul
add
add
push
add
dec
add
add
add
add
add
add
add
add
cmp
add
mov
(bad)
call
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
add
imul
add
add
mov
jnp
add
add
push
add
add
add
add
dec
add
cmp
jnp
add
add
adc
add
add
add
add
enter
add
add
add
add
push
add
add
jnp
add
add
enter
add
and
add
add
cmp
(bad)
jmp
add
sub
add
or
pop
add
add
rol
add
cmp
(bad)
jmp
sub
add
xor
add
add
add
add
add
add
add
add
push
inc
add
add
add
sub
add
jo
add
add
add
sub
sub
add
add
add
sub
add
mov
add
nop
inc
add
add
add
sub
outs
mov
add
add
sub
add
add
xor
mov
add
add
add
and
add
dec
add
cmp
add
add
add
add
add
add
add
dec
add
cmp
add
out
add
add
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
mov
jle
add
or
add
or
add
push
add
cmp
add
add
xor
add
add
add
add
and
add
add
loop
add
add
add
or
retf
add
or
add
int3
add
or
adc
sub
add
or
pop
add
int3
add
or
add
int
add
add
int3
add
or
add
or
pop
outs
into
add
or
outs
mov
iret
add
or
add
int3
add
or
add
add
inc
add
pop
pop
add
int3
add
or
add
add
or
sub
add
or
push
adc
sub
add
or
pop
outs
into
add
or
add
sub
add
or
pop
adc
sub
add
or
add
inc
inc
add
add
add
sub
and
add
inc
add
add
add
sub
add
add
jnp
add
add
sub
add
add
jnp
add
add
sub
inc
add
or
add
add
dec
or
cmp
add
add
jnp
add
add
xor
add
add
add
or
jnp
add
add
add
rol
add
and
add
add
add
add
sub
adc
sub
add
or
add
inc
inc
add
add
add
sub
and
add
add
add
sub
add
add
out
add
add
sub
inc
add
or
push
pop
adc
adc
add
or
outs
mov
pop
add
add
push
or
cmp
add
add
add
or
jnp
add
add
outs
rol
add
and
add
sub
add
push
cmp
add
add
add
add
pop
add
add
outs
mov
jnp
add
add
push
push
pop
and
and
add
or
outs
mov
add
add
add
push
add
add
movs
(bad)
(bad)
jmp
add
add
dec
or
dec
add
add
add
add
or
add
xchg
(bad)
(bad)
call
(bad)
(bad)
stc
std
(bad)
push
(bad)
call
add
add
push
add
add
cmp
(bad)
(bad)
jmp
add
sub
add
add
cmp
sub
add
or
add
sub
add
add
add
add
add
add
outs
push
add
or
jae
add
or
add
or
add
rol
add
fld
add
add
fld
add
add
add
add
add
add
add
and
add
or
add
sbb
add
aaa
add
add
add
adc
push
add
add
push
add
cmp
add
add
sub
add
or
add
or
push
sub
add
or
repnz
add
push
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
sub
add
sub
add
or
sub
add
add
jle
add
or
add
or
pop
add
add
push
add
cmp
and
add
add
and
add
add
sub
add
or
jnp
add
add
outs
movs
add
or
jnp
add
add
outs
push
add
or
jae
add
or
add
or
push
add
add
fld
add
add
sub
jnp
add
add
rol
or
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
or
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
outs
lea
add
add
cmp
pop
add
or
add
rol
add
cmp
(bad)
(bad)
jmp
sub
add
add
add
mov
sub
add
or
add
dec
add
rol
add
add
add
add
outs
xchg
add
or
or
sub
or
sub
(bad)
add
add
loopne
add
add
add
sub
add
add
jnp
add
add
sub
mov
add
sub
add
mov
add
sub
add
xor
add
add
and
add
add
push
add
cmp
add
add
add
mov
jle
add
or
add
or
add
sub
add
add
jge
add
add
add
add
cmp
add
add
add
clc
add
add
(bad)
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
call
add
and
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
xor
add
add
adc
add
add
dec
add
cmp
add
add
jnp
add
add
leave
add
or
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
ret
(bad)
cmp
add
dec
add
add
add
add
add
and
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
or
add
add
add
add
leave
add
or
add
mov
add
add
push
add
cmp
cmp
(bad)
(bad)
jmp
add
add
pop
cmp
add
add
add
mov
add
add
sub
add
push
cmp
(bad)
jmp
sub
or
add
sbb
add
add
add
and
dec
add
push
sub
add
fld
add
add
fld
add
add
add
add
add
add
adc
add
add
xor
add
add
and
add
add
push
add
cmp
add
add
add
add
and
dec
add
push
outs
xlat
add
or
add
add
dec
add
cmp
add
add
jnp
add
add
scas
sbb
add
dec
add
push
sub
add
push
outs
fadd
add
add
add
add
dec
push
jae
add
or
add
or
jnp
add
add
and
and
add
or
add
or
add
add
sub
add
push
cmp
add
add
add
push
xlat
add
push
jae
add
or
movs
add
or
sub
add
or
add
or
push
sub
add
or
pop
jo
and
add
or
xchg
add
or
sub
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
outs
fwait
add
or
push
add
add
push
add
cmp
jae
add
or
add
add
and
add
add
and
add
add
sub
add
or
sub
jnp
add
add
outs
movs
add
or
jnp
add
add
pop
or
add
or
add
or
jnp
add
add
ds
sbb
add
or
add
or
jnp
add
add
popf
sbb
add
dec
add
push
outs
xchg
add
or
pop
add
add
fld
add
cmp
add
add
add
jnp
add
add
mov
add
sub
add
outs
xlat
add
or
jnp
add
add
jnp
add
add
mov
add
sub
add
outs
xlat
add
or
pop
sub
or
add
dec
add
cmp
add
add
add
or
add
add
or
add
cmp
add
jnp
add
add
outs
fadd
add
add
add
add
inc
xlat
add
push
jae
add
or
add
or
jnp
add
add
inc
xlat
add
push
jae
add
or
add
or
jbe
(bad)
jmp
or
add
dec
add
dec
add
add
add
(bad)
(bad)
cmp
(bad)
inc
std
(bad)
jmp
(bad)
(bad)
call
std
(bad)
jmp
std
(bad)
jmp
(bad)
call
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
add
add
or
add
add
add
fld
add
cmp
sub
or
sub
or
sub
adc
add
test
add
add
add
and
add
add
push
add
cmp
add
add
sub
add
or
add
add
dec
add
cmp
add
add
sub
add
or
sub
add
push
and
push
add
cmp
add
add
sub
cmp
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
and
add
push
cmp
(bad)
(bad)
jmp
sub
add
add
jp
add
add
add
sub
add
sub
jnp
add
add
sub
mov
add
sub
add
mov
add
sub
add
xor
xchg
add
add
add
and
add
add
jecxz
add
cmp
add
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
inc
add
and
add
add
fcos
(bad)
inc
add
mov
jle
add
or
add
or
add
push
add
cmp
jge
add
add
add
add
dec
add
cmp
add
xor
add
add
adc
add
push
add
cmp
add
add
add
add
and
add
and
add
add
push
add
cmp
add
add
sbb
add
and
add
dec
add
cmp
add
add
jnp
add
add
leave
add
or
add
mov
add
add
push
add
cmp
add
add
jnp
add
add
enter
cmp
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
adc
or
lea
add
add
add
and
add
add
push
add
add
add
mov
add
add
dec
add
cmp
add
add
outs
mov
add
cmp
jnp
add
add
sub
and
add
add
add
sub
add
or
jnp
add
add
sub
inc
add
or
add
or
outs
mov
jnp
add
add
jnp
add
add
pop
imul
std
add
add
sub
add
add
inc
add
sub
add
and
jnp
add
add
sub
add
inc
inc
add
add
add
sub
inc
add
or
push
pop
sub
or
outs
loope
add
and
add
add
push
add
cmp
jnp
add
add
push
add
add
outs
mov
jnp
add
add
push
and
add
add
add
add
sub
add
sub
jnp
add
add
sub
inc
add
or
push
and
add
add
sub
add
or
outs
mov
add
sub
add
add
add
add
dec
add
add
jnp
add
add
ds
add
add
iret
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
call
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
xor
xchg
add
add
add
adc
add
add
dec
add
cmp
add
add
outs
pop
add
or
add
push
add
cmp
jnp
add
add
mov
add
fdivr
(bad)
inc
push
jge
add
add
sar
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
or
stc
add
add
add
add
dec
add
cmp
xor
and
add
add
add
and
add
add
push
add
add
and
sbb
add
dec
add
push
sub
add
push
jge
add
add
and
sbb
add
dec
add
push
sub
add
push
jge
add
add
add
add
dec
add
cmp
add
add
jae
add
or
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
and
add
add
push
add
add
mov
pop
arpl
add
add
add
cmp
add
add
cmp
inc
add
sub
add
or
jnp
add
add
push
outs
les
add
add
add
add
inc
loopne
add
jae
add
or
add
or
and
add
add
sub
add
or
xchg
add
or
push
sub
add
or
and
sub
add
sub
add
or
pop
add
add
push
add
cmp
(bad)
jmp
or
sub
or
sub
sbb
add
add
add
add
loop
add
or
add
add
sub
add
push
cmp
mov
outs
call
pop
outs
imul
sbb
add
dec
add
push
sub
add
or
popa
add
add
outs
jne
add
and
sbb
add
dec
add
push
sub
add
or
inc
add
add
and
add
sub
add
outs
mov
outs
mov
sbb
add
or
add
add
push
cmp
add
add
jne
add
add
jmp
add
and
push
add
cmp
add
add
jne
add
add
pop
add
add
add
add
push
push
add
sub
add
sub
add
or
inc
add
add
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
fst
add
add
pop
push
sub
add
push
fld
add
add
fld
add
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
jecxz
add
jne
add
add
jnp
add
and
add
add
push
add
cmp
add
add
add
add
push
push
add
sub
add
sub
add
or
push
add
add
xor
add
and
add
add
push
add
dec
add
add
add
add
mov
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
jecxz
add
jne
add
add
jmp
add
fld
add
jecxz
add
jne
add
add
sub
add
and
add
dec
add
cmp
outs
jecxz
add
je
add
add
in
add
push
inc
push
sub
add
push
fld
add
add
fld
add
add
add
add
add
add
leave
leave
add
or
add
sbb
add
or
add
xor
add
add
adc
add
add
pop
cmp
add
add
sub
add
or
push
add
add
push
add
cmp
add
add
sub
jnp
add
add
jb
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
outs
out
add
push
jnp
add
add
mov
add
add
cmp
jae
add
push
or
add
push
add
cmp
sbb
add
or
add
jnp
add
and
cmp
add
adc
or
push
and
add
add
cmp
add
add
adc
and
add
sub
add
outs
or
add
cmp
push
and
add
sub
add
outs
xor
add
cmp
xor
add
and
add
add
push
or
dec
add
add
add
add
add
add
add
add
and
add
add
push
or
cmp
(bad)
(bad)
call
add
add
dec
add
push
outs
jae
add
and
add
push
outs
out
add
outs
out
add
adc
outs
call
pop
and
add
pop
cmp
adc
outs
arpl
add
and
dec
add
push
push
lea
add
add
add
or
pop
adc
call
fld
add
add
fld
add
add
or
pop
adc
adc
adc
mov
mov
add
and
add
add
push
or
cmp
add
push
outs
imul
sbb
add
dec
add
push
sub
add
or
inc
add
add
push
add
add
repnz
push
cmp
push
outs
jne
add
and
sbb
add
dec
add
push
sub
add
or
sbb
and
add
sub
add
outs
mov
outs
mov
sbb
add
adc
pop
or
cmp
add
add
jne
add
add
add
add
sub
outs
jmp
add
add
add
jg
add
or
inc
out
add
push
jae
add
push
or
push
add
push
or
inc
in
add
push
jae
add
or
scas
add
push
add
push
in
add
push
jae
add
push
or
lods
add
push
or
jae
add
push
or
push
cmp
add
add
pop
jge
add
add
cmp
add
add
push
jge
add
add
push
jge
add
add
push
add
add
add
add
add
push
add
add
push
jge
add
add
pop
jge
add
add
or
add
push
or
add
add
inc
or
sbb
add
fst
add
adc
adc
xchg
add
push
outs
in
add
fld
add
add
cmp
inc
add
add
add
push
or
dec
add
add
add
add
add
std
(bad)
call
add
test
(bad)
(bad)
cmp
add
scas
(bad)
(bad)
call
add
and
add
add
repnz
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
cmp
add
outs
add
add
adc
push
adc
cmp
call
or
or
add
add
mov
outs
call
and
add
sub
add
push
cmp
push
inc
inc
loopne
jmp
add
fstp
add
add
and
inc
loopne
jmp
add
fld
add
add
fld
add
add
add
add
sub
add
inc
add
add
test
scas
xor
push
bound
add
add
test
scas
cmp
adc
add
add
add
fsubrp
add
or
add
add
out
add
inc
push
or
add
add
fiadd
adc
add
or
add
and
add
in
add
sub
add
adc
add
jnp
add
jl
add
and
add
add
push
add
cmp
add
add
add
scas
add
or
add
push
add
cmp
jnp
add
add
and
add
add
sbb
add
push
cmp
add
add
into
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
sub
adc
add
jns
add
data16
adc
add
add
pop
cmp
add
add
add
add
and
add
pop
cmp
add
add
push
add
test
add
and
push
add
cmp
add
push
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
add
sbb
add
sub
add
dec
add
push
sub
add
or
and
add
sub
add
add
add
add
add
pop
sub
or
sub
adc
add
xchg
add
add
add
adc
add
add
cmp
add
add
in
add
or
add
add
dec
add
cmp
add
add
add
add
add
add
add
iret
sbb
add
dec
add
push
sub
add
sub
add
or
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
jne
add
out
add
or
add
sar
jmp
add
add
xor
add
add
pop
add
adc
and
sbb
add
dec
add
push
pop
lea
add
or
push
add
add
push
call
adc
add
xchg
add
add
add
and
add
add
test
add
add
sbb
add
push
jne
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
retf
jmp
add
add
add
sub
add
dec
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
icebp
add
or
and
add
add
cmp
cmp
add
add
outs
repnz
or
outs
repz
or
add
push
add
cmp
sub
pop
sub
or
sub
adc
add
mov
add
add
add
and
add
dec
add
cmp
add
add
and
sbb
add
dec
add
push
sub
add
sub
add
or
dec
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
or
add
add
cmp
(bad)
(bad)
inc
and
mov
add
or
add
push
add
cmp
add
xor
add
add
add
add
adc
and
sbb
add
dec
add
push
sbb
or
push
add
push
sbb
add
push
sbb
add
add
or
call
add
adc
add
xchg
add
jge
add
and
add
cmp
add
pop
cmp
add
outs
repnz
or
outs
repz
or
add
push
add
cmp
add
add
add
icebp
add
or
and
add
add
push
add
cmp
jne
add
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
push
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
pop
sub
or
sub
cmp
sub
add
add
jge
add
add
add
sub
add
sub
add
add
add
or
sub
or
sub
adc
add
pushf
add
add
add
adc
add
add
pop
cmp
add
add
add
rol
add
jge
add
add
(bad)
sub
add
or
add
add
add
cmp
add
add
add
add
hlt
add
or
add
add
enter
and
add
add
push
add
dec
add
add
add
add
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
add
cmc
add
or
add
add
add
add
sub
add
push
cmp
mov
(bad)
jmp
or
sub
or
sub
adc
add
add
add
and
add
add
pop
add
push
cmp
add
add
sbb
add
add
jge
add
add
dec
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
push
add
add
add
add
cmp
(bad)
(bad)
inc
sub
add
and
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
test
or
add
cmp
sub
add
xor
jnp
add
add
test
add
or
sub
or
sub
adc
add
rol
add
jle
add
and
add
pop
cmp
add
es
add
or
and
add
add
cmp
add
es
and
pop
add
sub
add
outs
stc
add
or
and
add
sub
add
outs
cli
add
or
add
add
dec
add
cmp
add
add
and
add
sub
add
outs
sti
add
or
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
dec
(bad)
(bad)
dec
add
add
(bad)
dec
add
add
add
and
push
add
cmp
(bad)
(bad)
inc
outs
cld
add
or
inc
sub
add
add
add
add
outs
std
add
or
js
add
add
inc
add
and
add
add
pop
add
push
cmp
sub
add
xor
add
add
add
add
add
outs
mov
add
and
add
add
push
add
cmp
add
add
jnp
add
add
outs
mov
add
add
add
add
outs
mov
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
and
add
sub
add
push
cmp
add
push
adc
add
jae
add
or
sub
push
add
add
fld
add
add
add
add
add
add
popf
popf
add
or
add
push
add
inc
add
sub
xor
add
add
add
add
add
jnp
add
add
or
add
add
add
add
inc
add
fld
add
add
fld
add
add
sub
add
or
add
add
add
add
sbb
add
or
add
push
add
inc
add
sub
jnp
add
add
jnp
add
add
add
add
jge
add
add
sbb
push
add
add
add
add
adc
add
push
adc
add
jae
add
push
sbb
or
push
add
push
sub
add
or
fld
add
add
fld
add
add
add
adc
add
add
add
sub
push
jle
add
sbb
push
add
add
add
add
adc
add
push
adc
add
jae
add
or
lea
add
or
push
add
push
sub
add
or
fld
add
add
fld
add
add
add
adc
add
add
add
sub
push
jle
add
adc
add
xchg
add
add
add
adc
add
add
dec
add
cmp
add
add
jnp
add
add
add
add
cmp
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
and
add
cmp
(bad)
(bad)
inc
jnp
add
add
sbb
add
and
add
add
push
add
cmp
sub
add
inc
add
add
sub
add
or
add
push
add
cmp
add
adc
add
dec
add
add
add
and
push
add
cmp
add
add
or
mov
add
push
pop
outs
mov
add
push
outs
add
add
cmp
add
push
add
dec
add
add
add
add
add
add
xor
add
xor
add
add
add
add
add
add
add
push
add
add
add
add
add
add
or
add
sub
add
push
cmp
add
add
add
call
jnp
add
add
outs
test
or
add
dec
add
cmp
jnp
add
add
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
xor
add
and
add
add
push
add
add
add
call
jnp
add
add
add
add
add
add
add
outs
mov
add
sub
jnp
add
add
outs
mov
add
and
add
add
cs
(bad)
dec
or
mov
add
push
pop
outs
mov
add
push
outs
add
add
sub
jnp
add
add
add
add
sub
aad
add
and
add
add
add
add
add
(bad)
add
add
or
sub
pop
outs
mov
add
push
outs
add
add
sub
jnp
add
add
call
jnp
add
add
add
add
and
add
add
push
add
cmp
jnp
add
add
add
add
add
add
add
outs
test
or
add
cmp
add
aad
add
and
(bad)
inc
jnp
add
add
outs
mov
add
add
add
add
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
call
push
add
add
push
add
cmp
(bad)
jmp
pop
add
or
add
or
or
add
add
add
add
push
add
add
jnp
add
add
add
aam
add
pop
pop
pop
inc
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
aad
add
in
(bad)
(bad)
inc
jnp
add
add
add
(bad)
add
add
and
add
add
pop
add
push
cmp
std
(bad)
jmp
sub
push
add
inc
add
sub
xor
add
add
add
add
adc
add
add
dec
add
cmp
add
add
add
add
lds
add
add
add
add
lds
add
cmp
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
jge
add
add
add
push
add
cmp
jnp
add
add
outs
mov
add
add
add
add
lds
add
and
add
push
cmp
add
add
add
sbb
add
add
push
adc
add
jae
add
or
sub
push
add
add
jb
(bad)
jmp
add
add
add
add
add
das
add
push
sub
add
add
pop
add
add
jnp
add
add
push
sahf
add
push
jae
add
or
sub
adc
add
add
add
adc
add
push
add
cmp
jae
add
or
add
add
jae
add
or
add
add
or
add
dec
add
cmp
jae
add
or
add
add
and
add
sub
add
and
or
add
dec
add
push
sub
rol
add
jge
add
add
add
add
sub
add
push
cmp
add
add
add
add
add
or
jnp
add
add
pop
add
or
add
add
jnp
add
add
outs
mov
add
add
int3
add
add
cmp
add
add
add
add
outs
test
jnp
add
add
or
add
cmp
add
add
jnp
add
add
add
add
and
add
add
sbb
add
cmp
add
add
in
add
add
inc
push
add
push
jae
add
push
sub
add
push
and
add
add
push
add
cmp
add
add
add
add
add
mov
or
add
mov
add
add
push
sub
add
and
add
add
call
push
lar
push
jae
add
or
cmp
add
add
add
add
outs
mov
add
and
add
add
push
add
cmp
add
add
or
add
add
pushf
add
push
add
mov
add
add
add
add
jnp
add
add
lds
add
outs
xchg
add
or
add
add
add
mov
sub
add
or
or
int
add
addr16
(bad)
inc
jnp
add
add
outs
mov
add
cmp
(bad)
jmp
add
push
add
dec
add
add
add
add
add
add
add
(bad)
dec
(bad)
(bad)
dec
add
add
(bad)
dec
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
and
push
add
cmp
jae
add
or
add
add
or
add
cmp
push
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
push
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
push
jge
add
add
and
sbb
add
dec
add
push
jae
add
push
jge
add
add
and
sbb
add
dec
add
push
jae
add
push
jge
add
add
and
add
sub
add
jae
add
push
jge
add
add
and
sbb
add
dec
add
push
jae
add
push
jge
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
dec
add
push
and
or
add
dec
add
push
and
push
add
sub
add
sub
add
or
add
push
jge
add
add
jae
add
push
jge
add
add
jae
add
or
add
add
add
add
cmp
mov
sub
add
add
add
sub
add
push
cmp
(bad)
(bad)
cmp
(bad)
inc
retf
add
add
ds
(bad)
jmp
add
add
push
cmp
(bad)
jmp
sub
or
sub
or
sub
dec
add
add
add
jge
add
add
sub
add
or
dec
add
add
add
jge
add
add
sub
add
or
adc
add
sub
add
add
adc
add
add
cmp
add
add
add
add
xlat
add
add
add
add
cmp
add
pop
add
or
adc
sub
add
or
hlt
add
add
add
or
adc
sub
add
or
jae
add
or
pop
add
and
add
add
push
add
cmp
add
add
jnp
add
add
outs
mov
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
jne
(bad)
jmp
(bad)
push
(bad)
(bad)
jge
add
and
add
add
(bad)
inc
and
sbb
add
push
and
or
add
dec
add
push
sub
rol
add
jge
add
add
jae
add
push
jge
add
add
sub
add
or
sub
add
push
add
movs
add
push
sub
add
or
and
or
add
dec
add
push
outs
xchg
add
or
outs
mov
add
or
adc
add
add
jne
add
sub
add
outs
xchg
add
or
add
add
add
or
add
dec
add
cmp
(bad)
(bad)
inc
and
dec
add
push
and
or
add
dec
add
push
sub
sub
add
add
add
adc
add
push
and
dec
add
push
outs
sub
push
add
add
add
lds
add
outs
sub
add
add
add
outs
sbb
add
outs
xchg
add
or
jnp
add
add
lar
or
cmp
or
or
add
cmp
(bad)
(bad)
inc
jae
add
push
jge
add
add
add
lods
(bad)
(bad)
inc
jae
add
or
add
add
jae
add
or
add
add
add
add
cmp
jnp
add
add
add
or
ds
add
add
jnp
add
add
jnp
add
add
xchg
add
or
mov
(bad)
push
add
or
and
add
add
push
add
cmp
(bad)
jmp
or
sub
or
sub
sbb
add
and
add
add
sbb
add
or
outs
adc
add
fisttp
cmp
add
add
outs
dec
add
or
sub
add
add
add
add
pop
add
add
sbb
add
and
add
add
adc
add
add
push
or
outs
adc
add
fisttp
cmp
add
add
outs
dec
add
or
sub
add
adc
add
add
add
add
mov
add
sbb
add
and
add
sub
add
and
or
add
dec
add
push
sub
pop
adc
adc
add
sub
sbb
pop
add
add
adc
add
push
sub
add
pop
or
add
shl
add
add
sbb
add
and
dec
add
push
and
add
add
adc
adc
add
fld
add
add
fld
add
add
lods
pop
add
sub
add
and
or
add
dec
add
push
sub
push
push
jae
add
push
jae
add
push
or
pop
outs
sahf
add
or
outs
adc
add
(bad)
add
add
outs
sbb
add
and
add
sub
add
and
or
add
dec
add
push
sub
pop
adc
adc
add
fld
add
add
or
add
sub
sub
add
add
add
cmp
push
leave
add
add
add
add
add
sbb
add
add
add
adc
add
push
add
out
add
push
sub
pop
sub
or
sub
push
add
inc
add
or
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
and
jb
outs
addr16
add
add
add
add
push
push
add
jle
add
add
add
inc
push
dec
inc
add
add
jle
add
inc
ins
outs
bound
add
add
add
add
add
push
jmp
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
push
add
add
cmp
push
add
add
add
add
add
add
add
add
sub
sub
cmp
add
push
add
push
add
add
lea
or
rol
fld
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
sbb
push
add
add
push
push
add
add
push
add
add
pop
push
add
add
pop
das
pop
push
add
add
add
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
add
add
push
add
add
add
or
add
add
add
add
push
or
add
add
push
add
add
or
or
add
or
add
add
or
add
add
push
add
add
push
add
add
or
add
add
add
or
or
add
or
or
add
or
test
xchg
or
mov
ror
ret
or
add
or
add
push
add
add
loop
push
add
retf
add
add
push
mov
or
jmp
mov
push
add
push
push
add
add
push
add
add
sub
push
add
femms
add
add
add
into
or
add
add
adc
add
add
adc
adc
sbb
xchg
jno
push
add
add
adc
add
add
loop
push
add
add
add
push
add
add
adc
add
add
adc
add
add
adc
add
add
adc
push
add
adc
add
add
adc
sbb
dec
adc
push
add
push
add
add
add
add
adc
add
add
adc
add
add
adc
or
add
adc
or
add
add
add
adc
or
add
adc
add
add
adc
or
add
add
sub
push
add
sub
push
add
or
add
add
add
adc
push
push
mov
push
add
push
xchg
pop
push
add
push
add
add
ror
popf
push
jno
push
add
add
push
push
add
add
pop
inc
add
add
pop
sub
push
add
pop
mov
push
add
pop
push
add
pop
push
add
add
push
add
add
mov
push
add
add
sbb
add
add
sbb
add
add
sbb
push
add
sbb
sbb
add
sbb
sbb
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
lods
add
add
sbb
add
add
sbb
add
add
add
push
add
add
sbb
add
add
loop
or
pop
sbb
or
add
add
add
add
sbb
or
add
sbb
jno
jno
push
add
push
lods
add
add
add
add
add
add
add
and
add
add
add
and
and
and
add
add
push
add
add
or
or
sbb
push
add
daa
sbb
push
add
add
sub
push
add
sub
add
add
pop
sub
add
add
sub
sbb
xor
jno
sbb
sub
or
add
add
sub
add
add
sub
add
add
sub
add
add
loop
push
add
loop
push
add
sub
sub
add
add
lods
add
add
add
sub
push
add
sub
pop
push
add
sub
add
add
sub
push
add
sub
push
add
loop
push
add
loop
push
add
add
add
cs
push
add
pop
sub
add
add
xor
add
add
add
lods
add
add
add
add
xor
push
add
xor
push
add
xor
xor
add
sub
or
pop
xor
or
add
mov
push
add
add
xor
xor
pop
push
add
xor
add
add
add
xor
add
add
xor
add
add
push
add
add
add
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
xor
add
add
add
add
cmp
add
push
add
add
add
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sub
push
add
add
add
add
add
xor
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
cmp
add
add
add
add
add
or
add
xor
add
cmp
add
add
add
add
add
sbb
xor
or
add
cmp
add
cmp
add
add
add
add
cmp
add
add
add
add
sub
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
adc
mov
add
add
add
add
add
add
add
add
adc
mov
add
add
add
adc
mov
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
cmp
dec
add
add
add
add
add
cmp
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
xor
mov
add
add
add
add
add
add
add
xor
stos
add
add
adc
pop
add
adc
scas
add
or
adc
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
enter
add
add
jle
dec
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
loope
mov
add
add
rol
dec
add
loope
mov
add
adc
aam
fadd
push
add
add
add
add
add
loope
mov
add
add
add
jmp
add
add
add
add
lock
add
add
add
add
add
hlt
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
call
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
sbb
add
adc
mov
stos
add
add
push
add
add
add
add
and
add
jp
bound
xor
jge
push
xor
test
pushf
push
cmp
pop
add
test
push
add
test
push
add
add
pop
lahf
add
add
pop
lahf
add
add
pop
mov
pop
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
add
movs
add
add
xlat
add
add
movs
add
add
movs
add
add
add
add
movs
add
add
movs
add
add
test
xor
movs
or
adc
add
unpcklps
add
test
push
add
add
mov
dec
adc
add
mov
add
rcr
add
add
push
test
add
enter
add
int3
push
test
add
rcr
unpcklps
add
push
dec
adc
add
add
add
fcomp
pop
adc
add
push
pop
adc
add
push
pop
adc
add
test
add
adc
test
add
adc
test
add
sbb
mov
pop
test
add
or
test
add
and
test
add
and
test
add
add
bound
add
pop
adc
add
adc
add
add
mov
test
add
mov
test
add
nop
pop
pop
adc
add
xchg
pop
test
add
cwde
pop
test
add
pushf
pop
test
add
mov
add
test
ins
adc
add
mov
dec
adc
add
pop
test
add
loopne
jo
add
in
jae
add
call
add
add
test
add
in
jae
add
sbb
jge
add
loopne
jge
add
nop
pop
jge
add
sbb
bound
add
and
and
and
and
xor
xor
test
xor
xor
bound
add
and
and
push
add
test
push
add
add
add
test
add
je
bound
add
dec
adc
add
add
add
add
mov
bound
add
mov
add
shl
adc
add
and
and
and
pop
test
add
shl
test
add
aam
test
add
fsub
test
add
fsub
test
add
in
jae
add
loopne
mov
add
add
and
and
and
and
and
adc
je
jo
adc
js
lahf
adc
add
adc
add
add
mov
test
and
and
and
and
and
and
and
push
movs
add
add
add
mov
(bad)
adc
add
mov
add
shl
adc
add
add
and
adc
add
rcl
add
and
and
and
and
adc
pop
adc
sbb
and
and
adc
sub
xor
and
jno
cmp
inc
adc
dec
adc
push
adc
dec
adc
pop
adc
test
add
lea
bound
addr16
movs
add
add
movs
add
add
movs
add
add
test
add
movs
add
add
movs
add
add
movs
add
add
pop
and
mov
out
and
mov
jmp
and
mov
add
add
add
add
unpcklps
add
add
unpcklps
add
add
daa
sbb
add
movs
add
add
add
unpcklps
add
unpcklps
add
add
add
add
push
lea
test
push
cmp
shl
sbb
lds
push
sbb
leave
es
sbb
add
test
es
es
es
test
es
test
and
cli
daa
test
daa
lods
sbb
add
sub
adc
add
mov
add
adc
unpcklps
add
movs
add
add
sub
sub
sub
sub
sub
sbb
add
out
sbb
add
add
sbb
add
sub
sub
or
sub
sbb
dec
and
fld
hlt
sbb
add
sub
sub
add
sub
add
adc
mov
add
adc
mov
add
jle
test
and
sub
sbb
add
add
mov
add
sbb
mov
add
sbb
mov
xor
fld
unpcklps
add
sub
sub
and
and
add
lods
and
adc
add
sub
and
movs
add
add
sub
sub
mov
sub
pop
sub
pusha
sub
fs
push
add
add
add
add
test
mov
sub
mov
mov
sub
mov
add
shr
sub
enter
push
add
sub
enter
push
add
sub
aam
lahf
add
add
sub
fsubr
loopne
mov
sub
call
add
sub
lock
ins
and
push
sbb
add
pop
sbb
add
add
bound
add
dec
sbb
add
test
cs
sbb
add
add
test
es
add
popa
cs
add
imul
sbb
add
ins
sbb
add
jnp
add
ja
sbb
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
das
ins
sbb
add
das
ins
sbb
add
add
sbb
add
and
add
add
sbb
add
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
and
add
add
add
add
add
add
xchg
add
add
add
add
or
push
sbb
add
add
add
or
adc
out
cmp
and
add
add
or
add
and
add
add
or
add
add
or
adc
fwait
add
mov
add
or
adc
sahf
add
shl
add
add
add
add
and
add
add
add
add
and
add
add
fild
or
add
or
inc
add
push
repnz
add
add
or
add
push
sti
add
add
add
or
inc
add
dec
add
add
adc
push
push
adc
add
cld
and
add
add
add
xor
add
dec
and
add
add
sbb
add
push
and
add
add
add
push
and
add
add
add
pop
and
add
add
or
add
add
sbb
add
mov
add
or
adc
out
cmp
and
xchg
add
add
add
add
mov
push
sbb
add
xchg
and
push
add
add
and
xchg
add
push
push
add
lock
xchg
add
push
push
add
hlt
and
push
sbb
add
cld
and
push
sbb
add
add
add
or
adc
out
cmp
add
add
xchg
add
push
push
add
in
add
add
xchg
add
pop
push
add
call
add
add
add
add
or
push
sbb
add
push
daa
add
or
push
sbb
add
pop
daa
add
or
push
or
add
add
or
push
or
pop
retf
add
inc
sub
add
add
add
dec
sub
add
add
add
dec
sub
add
add
or
add
add
add
or
add
and
add
add
xchg
add
push
add
sub
add
add
xchg
add
push
add
add
add
add
push
sbb
add
add
add
add
inc
add
or
add
add
add
add
inc
add
or
add
add
add
add
inc
add
add
add
add
add
sbb
add
add
add
add
inc
add
or
add
add
add
add
inc
add
or
add
add
add
add
inc
add
add
add
add
add
sbb
add
add
add
add
inc
add
or
add
add
add
sti
or
add
add
add
add
add
add
add
add
sbb
add
add
add
add
inc
add
or
add
add
add
sti
or
add
add
add
add
inc
add
add
add
add
add
sbb
add
add
add
add
inc
add
or
add
add
add
add
inc
add
or
add
add
add
add
inc
add
add
add
add
add
sbb
add
add
add
add
inc
add
or
add
add
add
add
inc
add
or
add
add
add
add
inc
add
add
add
add
add
sbb
add
add
add
add
inc
add
or
add
add
add
add
add
sti
or
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
inc
add
or
add
add
add
add
add
sti
or
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
inc
add
or
add
add
add
add
add
sti
or
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
inc
add
or
add
add
add
add
sti
or
add
add
add
add
inc
add
add
add
add
add
sbb
add
add
add
add
inc
add
or
add
add
add
add
sti
or
adc
add
add
add
inc
add
add
add
add
add
sbb
add
add
add
add
inc
add
or
add
add
inc
add
or
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
aam
xchg
add
add
add
add
add
sti
or
add
add
add
add
add
add
add
add
or
adc
out
cmp
sub
add
add
add
add
sub
add
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
or
or
sbb
test
add
or
xchg
pop
add
add
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
xchg
add
or
sbb
push
add
add
xchg
add
or
sbb
pop
add
or
nop
inc
and
sbb
add
or
nop
add
add
add
add
add
add
or
adc
scas
or
add
add
or
nop
add
add
xor
add
add
push
sbb
push
xor
add
add
push
sbb
in
xor
add
add
push
sbb
or
add
or
nop
add
dec
push
sbb
sub
add
or
nop
add
pop
push
sbb
test
add
or
nop
add
push
sbb
in
add
or
nop
add
mov
sbb
mov
add
or
nop
add
add
cmp
add
add
push
sbb
inc
cmp
add
add
push
sbb
dec
cmp
add
add
push
sbb
add
add
add
and
add
add
or
nop
add
cmc
push
push
add
nop
add
cld
push
push
add
cmp
add
add
add
add
cmp
nop
add
add
cmp
nop
add
push
add
add
add
or
nop
add
add
add
add
push
cwde
pop
push
add
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
add
push
loope
push
add
nop
add
add
inc
add
or
nop
add
mov
add
or
nop
add
add
add
or
add
inc
add
or
nop
add
add
inc
add
or
nop
add
add
add
or
nop
add
add
add
or
nop
add
add
inc
add
or
nop
add
push
in
pop
push
add
add
or
adc
(bad)
push
cmp
push
add
or
adc
mov
cmp
push
add
or
nop
add
add
push
add
or
adc
xchg
adc
or
add
nop
add
adc
or
add
nop
add
adc
or
add
nop
add
stos
or
add
add
add
add
add
add
add
or
add
nop
add
adc
add
add
or
nop
add
adc
or
add
push
add
add
or
add
add
or
adc
loop
cmp
ins
add
or
nop
add
adc
pusha
ins
add
or
nop
add
mov
outs
add
or
nop
add
ror
push
add
outs
add
or
nop
add
fimul
push
add
jno
add
add
or
add
nop
add
push
inc
or
add
add
push
push
add
jb
add
add
or
add
add
or
add
add
add
or
add
nop
add
mov
push
add
add
add
or
add
add
or
nop
add
(bad)
push
add
add
add
or
add
add
add
push
in
push
push
add
jbe
add
add
or
add
nop
add
add
add
or
nop
add
add
add
add
or
add
add
or
add
add
add
push
dec
or
add
jge
add
add
or
add
add
or
nop
add
push
pop
or
add
add
add
or
add
add
or
add
add
or
add
add
or
nop
add
in
pop
and
test
add
or
add
add
or
add
add
or
add
add
and
add
add
or
add
or
nop
add
pop
adc
add
or
nop
add
pop
sbb
mov
add
add
add
mov
add
or
fmul
nop
add
pop
jnp
and
lock
add
add
add
add
or
nop
add
sbb
and
xor
add
or
nop
add
and
and
mov
add
add
add
lods
mov
add
add
or
add
or
nop
add
sbb
mov
add
add
or
add
or
nop
add
sbb
and
je
add
or
nop
add
sbb
pop
and
lods
lea
add
add
add
sbb
and
push
mov
add
add
or
add
or
nop
add
outs
or
add
or
nop
add
sbb
or
add
or
nop
add
sbb
daa
add
add
or
add
or
nop
add
sbb
push
daa
add
xchg
add
or
nop
add
sbb
daa
add
nop
add
sub
daa
add
add
or
nop
add
inc
push
daa
add
add
push
daa
add
add
add
sbb
daa
add
add
or
nop
add
add
add
or
nop
add
add
add
add
push
daa
add
add
add
push
daa
add
cwde
add
or
nop
add
add
cdq
add
or
nop
add
add
call
retf
push
daa
add
add
add
push
daa
add
add
add
sbb
push
daa
add
add
or
adc
(bad)
sbb
push
sub
clc
lahf
add
or
nop
add
sbb
mov
nop
add
sbb
push
sub
cld
mov
nop
add
sbb
movs
add
or
adc
nop
push
sub
or
add
or
adc
adc
cmp
lods
add
or
nop
add
sbb
sub
add
add
add
and
sbb
sub
sub
nop
add
sbb
cs
mov
add
add
push
add
add
or
nop
add
xchg
ucomiss
sbb
add
or
nop
add
loop
add
add
or
nop
add
ucomiss
pusha
mov
add
add
or
add
mov
add
add
ucomiss
in
add
or
nop
add
add
mov
add
add
ucomiss
lods
mov
nop
add
add
mov
nop
add
add
mov
nop
add
add
mov
nop
add
add
add
or
nop
add
add
nop
add
add
nop
add
add
add
adc
add
rol
or
nop
add
sbb
rol
or
adc
lds
add
add
add
add
sbb
push
das
add
add
adc
add
les
add
add
adc
add
les
add
add
add
sbb
push
xor
clc
int3
add
or
nop
add
sbb
push
xor
or
add
or
nop
add
jmp
add
add
sbb
adc
add
add
adc
add
add
add
sbb
aad
add
add
adc
add
aad
add
add
or
add
aad
add
add
adc
add
add
or
nop
add
add
(bad)
add
or
nop
add
movs
xlat
add
or
nop
add
add
xlat
add
or
nop
add
pushf
fadd
add
add
adc
add
add
or
add
fadd
add
add
adc
add
add
or
nop
add
nop
fiadd
add
add
adc
add
nop
add
adc
adc
add
adc
sbb
cmp
out
add
add
adc
add
out
add
add
add
dec
adc
add
add
add
adc
add
add
add
add
add
add
adc
add
add
add
add
out
add
or
nop
add
sbb
adc
add
add
add
add
add
or
add
add
adc
add
sbb
adc
add
add
adc
add
add
or
add
add
add
sbb
add
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
push
xor
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
sbb
les
add
or
nop
add
add
add
or
nop
add
add
add
or
nop
add
add
add
or
nop
add
pop
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
or
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
xchg
add
pop
adc
add
add
add
add
add
adc
add
add
add
xchg
add
and
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
or
xchg
les
jecxz
xor
add
add
add
add
add
add
add
add
adc
add
or
xchg
lock
add
add
add
add
add
add
add
add
add
adc
add
or
xchg
sbb
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
xor
add
add
adc
add
or
add
xor
add
add
adc
add
or
add
and
push
xor
add
add
or
add
add
add
add
add
adc
add
or
add
and
or
add
add
xchg
add
and
adc
add
add
xchg
add
add
add
or
xchg
pop
add
or
add
add
add
xchg
add
push
add
add
add
add
add
add
or
add
add
pop
xor
add
add
adc
add
add
xchg
add
add
add
add
xchg
add
add
add
add
pop
xor
add
add
pop
xor
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
add
add
add
or
sbb
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
add
add
add
or
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
outs
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
sbb
add
add
add
add
inc
add
or
les
mov
add
add
or
les
mov
mov
inc
add
or
xchg
pop
add
add
add
add
add
add
add
add
add
add
or
sub
xor
add
add
or
jecxz
xor
add
add
add
add
inc
add
or
les
sub
mov
inc
add
or
les
ss
sbb
add
add
add
add
add
add
add
add
add
sub
dec
add
or
add
xor
add
add
add
add
add
add
add
add
or
sub
xor
add
add
or
jecxz
xor
add
add
add
sub
dec
add
or
les
mov
add
dec
add
or
les
sub
mov
dec
add
or
les
ss
sbb
add
add
add
add
add
or
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
sub
mov
push
add
or
les
shr
call
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
sub
mov
push
add
or
les
shr
call
add
add
add
sub
sbb
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
sbb
add
add
sbb
add
add
add
adc
add
or
add
sub
sbb
add
add
sbb
add
add
pop
xor
add
add
or
add
add
sbb
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xor
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
mov
add
les
and
add
add
add
xchg
add
sub
add
add
add
add
xchg
add
shl
add
add
add
add
add
or
xchg
sbb
add
add
add
add
add
xchg
add
sub
clc
add
add
xchg
add
add
add
add
or
xchg
pop
add
add
xchg
add
push
add
add
add
add
add
xchg
pop
add
add
add
or
out
shr
retf
add
add
add
add
add
add
add
add
xchg
add
cs
add
add
add
add
or
add
add
or
add
das
lds
ds
push
add
das
lds
ds
push
add
das
lds
add
add
or
add
das
lds
add
add
or
add
das
lds
add
add
or
add
add
add
ds
imul
add
movs
sbb
add
add
sbb
add
ins
add
or
add
ds
ins
add
or
add
das
lds
ds
ins
add
or
add
ds
ins
add
or
add
das
lds
add
add
or
xchg
pop
add
sbb
add
add
add
xchg
add
add
add
add
add
add
add
or
add
add
das
lds
add
add
sbb
add
jae
add
add
add
add
jae
add
add
add
add
jae
add
add
add
sub
je
add
add
add
sub
je
add
add
add
sub
add
or
xchg
add
add
add
add
or
xchg
pop
add
add
add
add
add
add
xchg
add
add
add
sbb
add
add
add
add
add
push
push
add
add
push
push
add
add
or
add
add
adc
add
add
and
add
add
xor
add
add
adc
add
add
inc
or
add
add
add
add
adc
add
add
pop
or
add
add
add
add
and
add
add
xor
add
add
pop
or
add
add
add
add
add
add
or
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
add
add
add
add
data16
add
add
add
add
pop
sbb
and
add
add
and
add
add
and
add
add
and
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
and
add
add
and
add
add
and
add
add
and
add
add
add
add
add
add
pop
sbb
add
add
sub
add
add
add
add
mov
add
add
sbb
add
add
sub
add
add
sub
add
aam
add
add
add
add
push
add
add
add
add
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
adc
sbb
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
xchg
add
xchg
add
xchg
add
xchg
add
in
jecxz
jmp
add
or
add
push
pop
add
dec
push
dec
add
add
add
pop
add
add
pushf
push
cmp
pop
js
sub
test
xchg
add
add
add
or
add
add
or
add
add
jecxz
adc
dec
or
add
add
repz
fisttp
mov
or
or
cmp
sbb
dec
add
add
or
add
add
add
pop
add
add
lahf
or
add
add
add
add
add
or
or
dec
add
add
or
add
or
add
jecxz
jns
pop
add
add
add
ret
add
xor
mov
nop
or
add
cli
add
add
push
add
add
or
add
add
cmc
add
cmp
or
mov
dec
or
push
mov
dec
or
push
cmp
xchg
push
leave
add
add
push
loope
pop
add
add
add
or
adc
sub
add
add
add
add
add
or
pop
add
add
adc
fmul
movs
or
out
pop
pop
leave
add
or
icebp
or
cli
or
or
ins
pop
stc
add
pop
and
push
push
call
add
add
add
or
add
add
push
add
cmp
xchg
or
test
add
add
add
je
add
push
add
add
add
add
add
add
popa
setp
pop
add
call
add
mov
add
add
add
jg
setp
popa
add
adc
xor
movups
add
dec
push
xchg
or
or
and
retf
add
sub
add
adc
add
add
mov
adc
adc
adc
or
or
mov
repnz
or
std
adc
or
or
add
jns
sbb
mov
or
and
lahf
add
add
add
or
or
add
add
or
add
or
add
add
cmps
adc
rol
adc
rol
adc
adc
add
add
adc
adc
adc
mov
mov
inc
or
add
add
adc
mov
aas
adc
mov
dec
adc
add
or
add
or
or
add
or
add
add
add
adc
adc
adc
fld
pop
add
add
or
or
add
adc
add
adc
call
or
add
outs
or
mov
mov
or
or
add
add
add
add
add
or
cmps
or
or
add
adc
or
add
adc
or
add
adc
add
add
add
adc
add
add
retf
add
add
retf
add
add
or
jae
sub
fld
jge
push
or
add
add
mov
adc
or
add
adc
fld
add
popf
adc
add
or
add
add
adc
add
add
adc
add
dec
or
or
call
or
pop
add
add
or
add
add
adc
pop
add
or
add
dec
add
adc
adc
cwde
adc
mov
add
adc
pop
add
add
add
adc
jmp
and
xchg
add
adc
std
adc
push
push
or
or
add
mov
mov
pop
push
lods
or
add
add
add
add
add
pop
jns
push
add
adc
inc
pop
repnz
pop
test
cmp
push
pop
dec
add
pop
scas
or
add
or
add
add
add
add
add
add
or
or
add
add
sbb
repnz
sbb
stc
add
dec
add
add
cmps
or
lods
or
mov
inc
add
scas
or
add
adc
xchg
sbb
sbb
cmp
adc
add
add
adc
lods
sbb
sbb
or
repz
dec
repnz
add
sbb
push
sub
sbb
push
sub
sbb
push
sub
or
imul
mov
call
push
push
add
sbb
push
cmp
push
hlt
push
sub
dec
push
hlt
push
and
dec
push
hlt
push
dec
add
push
hlt
push
xor
dec
push
hlt
push
inc
add
push
hlt
push
and
dec
push
hlt
push
or
pop
sbb
or
push
loope
pop
add
add
add
add
add
sbb
or
test
sbb
or
pop
add
add
add
psllw
lahf
sbb
add
add
fs
adc
sbb
fcomp
rcl
popa
add
or
pop
add
add
cmps
push
fist
popa
add
sbb
adc
add
sbb
cdq
add
cmp
add
adc
dec
sbb
sbb
inc
add
push
inc
adc
jp
dec
adc
adc
mov
add
sbb
add
into
sbb
add
fcomp
repnz
loopne
repnz
jmp
add
sbb
add
add
sbb
adc
add
sbb
adc
add
adc
add
and
or
adc
adc
add
pop
mov
sbb
cdq
add
add
add
add
add
add
add
xchg
adc
mov
fist
mov
pop
add
add
add
adc
adc
or
add
add
rol
aas
or
add
adc
add
add
sbb
pop
add
add
push
push
hlt
adc
adc
add
push
add
add
sub
add
add
ins
add
or
add
add
add
add
add
adc
add
cli
adc
add
add
add
add
add
add
add
add
mov
pop
add
add
add
and
and
add
add
add
and
and
and
add
add
dec
add
add
and
and
add
je
sti
add
add
lahf
or
adc
mov
icebp
add
push
sti
adc
add
and
sbb
icebp
add
and
pop
repnz
pop
test
je
std
adc
inc
and
adc
add
add
sti
adc
add
and
adc
hlt
push
leave
add
push
jl
dec
pop
test
icebp
add
add
sbb
cmp
mov
les
add
repnz
add
add
add
or
jmp
add
add
adc
add
dec
push
hlt
push
rol
add
or
push
rol
and
push
pop
add
adc
add
pop
repnz
adc
add
add
and
add
test
adc
push
xchg
add
adc
push
pushf
add
adc
adc
sbb
mov
mov
inc
pop
repnz
movs
add
adc
push
lods
add
adc
adc
sbb
mov
popa
add
or
and
or
add
and
pop
adc
adc
mov
pop
add
add
loope
jno
sub
and
add
mov
add
add
pop
repnz
add
icebp
add
add
sbb
or
jl
std
adc
std
adc
mov
add
add
add
and
add
pop
imul
test
add
pop
fld
and
or
add
and
or
add
and
pop
mov
add
add
xor
xor
test
sbb
sbb
sbb
add
add
add
add
repnz
sbb
sbb
jno
mov
push
add
mov
sbb
add
sbb
sbb
add
add
add
add
add
add
sub
or
sub
add
rol
or
and
adc
sub
cdq
add
adc
add
sbb
dec
sub
sub
add
add
sub
add
sbb
sbb
add
sbb
nop
sub
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
add
sbb
or
sbb
sbb
pop
mov
or
or
add
add
sbb
add
add
icebp
add
add
add
mov
inc
push
mov
add
add
rol
mov
sbb
sbb
add
icebp
add
rol
repnz
add
adc
add
add
sub
push
cs
add
push
pop
add
add
push
lds
jecxz
adc
iret
cs
adc
fisubr
jecxz
sbb
imul
xchg
sbb
push
add
dec
add
add
or
sbb
retf
add
add
das
mov
mov
add
add
movs
sbb
add
mov
mov
push
mov
sub
jo
mov
add
add
add
or
add
add
add
add
add
push
pop
add
add
add
sub
rol
das
fstp
mov
outs
sub
add
add
cs
sbb
sbb
add
or
push
push
pop
add
sbb
pop
add
or
push
pop
add
add
pop
add
add
pop
add
add
add
sbb
add
add
add
add
sbb
push
pop
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
add
clc
add
add
add
add
add
or
jl
pop
add
add
add
mov
push
add
add
nop
add
add
add
add
add
std
add
add
add
add
or
or
les
inc
sbb
add
add
add
add
add
add
add
adc
sbb
add
adc
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
ret
adc
arpl
mov
add
add
adc
add
adc
sbb
sbb
sbb
add
add
sbb
add
add
add
add
add
adc
push
sbb
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
mov
add
add
add
and
jecxz
repz
sbb
push
repz
sbb
pop
adc
imul
add
adc
or
adc
sbb
or
loopne
sti
adc
add
sbb
aas
or
and
xor
mov
xor
add
push
cmp
jmp
push
cmp
add
push
inc
add
push
inc
add
push
inc
add
push
dec
add
push
push
add
push
push
add
push
push
add
push
pop
add
push
popa
add
push
arpl
jmp
push
sub
inc
sbb
add
add
add
add
adc
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
js
add
inc
add
add
add
inc
add
add
add
add
jl
add
imul
add
push
inc
add
lahf
add
add
add
add
add
add
add
add
pop
add
mov
mov
add
add
add
and
push
push
fs
jp
nop
push
lds
or
test
pop
inc
or
or
or
or
or
or
jp
mov
or
pop
or
sahf
or
or
or
or
or
or
or
or
or
or
or
fmul
xor
push
jg
lea
lods
push
retf
push
fisttp
add
dec
andps
test
lahf
bswap
(bad)
lldt
adc
adc
or
ja
xchg
adc
adc
adc
adc
adc
adc
pop
adc
popf
adc
adc
adc
adc
adc
adc
adc
adc
adc
lock
dec
pop
mov
sbb
sbb
sbb
sbb
jmp
add
add
add
add
add
add
add
add
add
add
lahf
push
push
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
pop
add
imul
add
add
jl
inc
add
jle
and
pop
add
add
add
mov
pop
pop
add
add
xchg
add
add
pop
add
add
sahf
add
add
pop
add
add
mov
mov
add
pop
add
add
mov
add
add
add
and
push
mov
rcl
sbb
sbb
add
dec
add
retf
or
adc
adc
adc
xchg
adc
stc
push
add
and
pop
add
add
inc
or
adc
sub
add
add
add
inc
or
jno
lds
add
inc
add
add
add
add
int
inc
or
fld
das
sbb
add
add
add
add
add
push
add
add
ficomp
add
add
xchg
or
xchg
add
loopne
add
add
xchg
add
loopne
add
add
add
add
add
add
add
popf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
gs
add
add
add
add
add
add
add
add
jno
add
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lldt
add
add
add
add
add
add
add
add
add
add
add
add
ltr
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
add
cmp
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
arpl
data16
imul
push
add
add
add
add
add
add
add
add
add
push
push
add
or
pop
add
add
add
add
pop
add
add
add
or
sub
dec
add
cmovp
xor
dec
add
cmovp
inc
cmovp
inc
movzx
xchg
cmovp
stos
adc
scas
adc
mov
dec
add
adc
ret
adc
enter
add
bound
inc
outs
outs
ins
gs
outs
add
jae
gs
add
arpl
ins
imul
imul
popa
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
je
jb
push
outs
imul
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
je
xor
inc
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jb
outs
add
jne
jb
ins
push
gs
jne
arpl
dec
popa
outs
addr16
addr16
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
ins
jae
bound
gs
add
gs
push
imul
jne
inc
xor
cmp
dec
bound
arpl
bound
and
inc
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
arpl
jae
data16
push
imul
jae
arpl
and
outs
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
ins
add
ja
and
and
and
and
and
and
and
and
dec
bound
and
add
dec
add
push
add
ins
jne
push
jns
add
xor
and
add
imul
add
ins
bound
and
add
jae
add
ins
je
arpl
je
gs
gs
je
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
bound
and
add
inc
bound
and
and
add
inc
bound
and
add
push
bound
and
add
xor
add
bound
and
bound
inc
je
jb
bound
add
cmp
and
bound
add
and
add
bound
and
add
arpl
and
add
ins
arpl
and
add
outs
arpl
and
add
jno
add
inc
arpl
and
add
inc
arpl
and
add
arpl
and
add
ins
add
push
arpl
and
add
push
add
push
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
xor
add
aaa
add
cmp
cmp
popa
add
bound
and
add
fs
add
outs
add
jo
add
jne
add
push
add
pop
add
xor
and
add
cmp
inc
jbe
outs
je
jb
jae
and
add
push
data16
outs
data16
outs
data16
je
add
jns
add
popa
jb
push
je
arpl
jb
ins
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
add
jp
add
inc
data16
inc
data16
inc
data16
gs
add
jae
gs
cs
imul
inc
outs
jb
jae
and
add
outs
je
outs
ins
add
xor
and
add
cmp
and
and
add
ins
outs
popa
fs
gs
jb
dec
outs
imul
arpl
push
outs
popa
jo
je
jo
ins
imul
je
arpl
add
jae
gs
cs
bound
push
gs
imul
outs
je
arpl
jae
push
jns
je
ins
cs
bound
push
gs
imul
jo
jb
imul
imul
add
inc
add
push
add
xor
and
add
xor
add
xor
push
add
jb
add
dec
push
add
ja
jb
fs
jns
je
jb
bound
add
popa
jb
inc
jae
gs
bound
inc
je
jb
bound
gs
arpl
outs
jb
inc
jae
gs
bound
addr16
dec
outs
arpl
imul
pop
inc
jne
ins
dec
popa
ins
add
fs
imul
js
arpl
imul
ins
bound
push
arpl
imul
je
outs
outs
add
jae
gs
cs
arpl
imul
jne
outs
addr16
xor
jb
push
pop
dec
add
inc
jae
push
inc
jno
bound
push
jo
xor
and
and
and
push
jae
jb
and
inc
js
gs
imul
and
and
and
and
jbe
xor
push
aaa
cmp
inc
je
push
pop
add
outs
xor
inc
xor
ins
dec
dec
addr16
cmp
inc
jo
ins
imul
add
bound
jb
imul
add
outs
add
jne
ins
jae
push
jne
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
jo
inc
gs
popa
jae
inc
outs
fs
jno
push
jns
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jb
push
outs
push
je
imul
and
and
arpl
popa
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
and
dec
dec
push
jo
outs
cmp
dec
push
push
pop
push
add
ja
inc
inc
gs
cmp
push
ins
inc
inc
push
xor
add
je
outs
jae
popa
outs
arpl
push
dec
push
dec
xor
addr16
pop
inc
push
inc
inc
dec
xor
dec
push
dec
inc
inc
pop
je
outs
gs
xor
jo
add
dec
js
inc
xor
push
dec
inc
outs
add
dec
aaa
dec
fs
jne
dec
push
dec
ja
push
push
inc
push
jne
dec
dec
ins
push
push
jae
xor
inc
add
jb
dec
jne
ss
xor
jns
push
pop
arpl
and
dec
outs
je
je
add
jb
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
je
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
gs
gs
je
add
inc
bound
and
add
dec
bound
and
add
dec
bound
push
dec
outs
je
xor
push
push
add
jae
gs
cs
push
imul
pop
inc
jne
jb
outs
je
push
add
je
dec
jae
popa
arpl
jb
jne
add
dec
bound
inc
xor
dec
jno
dec
dec
inc
pop
push
imul
dec
add
jno
xor
xor
ja
imul
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
je
add
pop
add
pop
add
pop
add
xor
and
add
xor
and
and
and
add
jp
dec
data16
ins
outs
arpl
ins
outs
bound
add
jo
add
jb
outs
push
je
jne
je
jb
add
gs
inc
ins
outs
bound
add
push
jb
xor
jo
push
fs
dec
add
dec
cmp
inc
addr16
push
dec
outs
dec
bound
add
ins
jne
pop
pop
add
cmp
and
add
bound
and
add
bound
and
add
bound
and
add
push
bound
and
add
ins
bound
and
add
outs
bound
and
add
jno
add
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
outs
fs
outs
jbe
imul
outs
jbe
imul
popa
outs
fs
add
jae
outs
fs
outs
jne
je
inc
gs
gs
je
inc
popa
ins
ins
bound
imul
gs
gs
je
inc
jae
outs
arpl
popa
je
add
gs
je
inc
jae
outs
arpl
jae
ins
je
ins
jo
bound
inc
jbe
outs
je
fs
imul
outs
fs
dec
imul
je
push
ss
dec
pop
addr16
xor
ss
xor
ins
js
aaa
dec
aaa
js
inc
pop
xor
add
push
bound
inc
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
and
add
outs
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
addr16
dec
popa
imul
add
outs
arpl
jae
outs
fs
add
je
dec
outs
fs
gs
popa
ins
add
outs
ja
jb
outs
jo
inc
jno
popa
ins
imul
dec
pop
inc
cmp
bound
arpl
arpl
add
inc
jo
push
xor
inc
popa
imul
add
push
bound
jo
imul
add
inc
add
xor
push
gs
imul
add
xor
and
bound
and
add
jb
outs
addr16
jne
ins
fs
push
jns
je
ins
cs
gs
add
jo
outs
add
je
dec
outs
addr16
add
pop
dec
outs
gs
popa
ins
imul
ins
bound
jne
ins
dec
popa
ins
add
popa
jb
inc
ins
jo
jns
push
jo
imul
push
je
jb
jae
imul
je
imul
imul
push
imul
jae
push
cmp
dec
inc
dec
inc
push
push
xor
jb
push
cmp
push
aaa
add
dec
push
gs
fs
js
gs
imul
je
popa
outs
fs
gs
popa
fs
push
push
inc
js
gs
imul
inc
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
outs
fs
gs
js
gs
imul
je
popa
outs
fs
gs
popa
fs
push
outs
push
gs
js
gs
imul
add
push
push
add
je
jb
arpl
jae
jns
add
outs
push
arpl
je
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
je
jb
push
arpl
jb
jb
dec
imul
jb
jb
push
arpl
jb
jb
push
ins
gs
inc
inc
add
ins
ins
arpl
push
push
add
push
push
popa
jns
and
add
ins
add
imul
ins
gs
add
push
push
add
je
add
pop
push
add
outs
outs
add
jae
gs
cs
jb
ja
outs
add
jb
popa
ins
add
outs
arpl
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
pop
push
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jae
gs
cs
arpl
imul
je
addr16
jo
jns
push
jns
ins
gs
imul
imul
outs
fs
gs
dec
popa
outs
popa
gs
gs
je
inc
outs
arpl
jo
outs
jb
inc
jb
popa
je
inc
arpl
jo
outs
jb
dec
inc
imul
ins
add
jo
jae
add
xor
and
push
add
jb
outs
addr16
popa
ins
gs
imul
gs
gs
imul
outs
outs
inc
js
ins
jae
outs
jb
imul
ins
ins
add
xor
add
popa
fs
jns
add
xor
push
jo
outs
push
je
gs
ins
add
arpl
cmp
cmp
imul
jae
inc
gs
jns
gs
jae
je
dec
outs
fs
jo
gs
outs
fs
jns
je
push
je
gs
ins
dec
outs
fs
arpl
imul
pop
inc
push
inc
dec
dec
add
popa
add
outs
jae
add
je
push
push
inc
cmp
inc
gs
je
imul
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
add
cmp
and
push
add
je
gs
imul
gs
gs
xor
cs
ins
ins
add
bound
and
add
gs
jae
je
inc
outs
popa
bound
add
je
dec
imul
data16
jae
add
imul
and
add
ja
gs
add
gs
xor
and
add
push
imul
and
add
gs
fs
je
jb
add
popa
jb
add
ins
imul
and
add
outs
imul
push
je
gs
ins
push
jb
je
jb
dec
outs
je
jb
arpl
outs
add
jbe
jb
outs
add
outs
jbe
jb
imul
add
arpl
jns
inc
jb
popa
je
inc
imul
jns
inc
imul
jns
outs
outs
add
je
inc
js
arpl
popa
bound
popa
je
add
je
push
je
jb
dec
outs
outs
add
outs
arpl
jae
je
jb
dec
outs
outs
add
je
inc
imul
jae
je
push
jae
push
push
js
arpl
add
je
inc
jb
popa
je
dec
outs
push
imul
gs
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
push
gs
popa
outs
fs
jb
dec
outs
jo
je
jae
je
push
gs
popa
outs
fs
jb
inc
jb
outs
jb
addr16
push
je
outs
fs
jb
dec
outs
jo
je
jae
je
inc
jne
outs
inc
ins
jne
push
imul
je
addr16
dec
gs
imul
je
add
outs
jbe
jb
imul
imul
je
addr16
dec
popa
jae
js
je
add
jne
push
popa
je
dec
bound
arpl
gs
popa
je
inc
imul
dec
popa
je
inc
gs
dec
popa
je
push
gs
dec
popa
je
inc
popa
ins
ins
add
gs
je
push
jb
push
arpl
jb
jb
and
add
jb
add
jae
add
outs
jne
gs
je
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
addr16
dec
outs
fs
gs
push
jb
arpl
jae
outs
fs
gs
outs
ins
ins
arpl
outs
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
je
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
addr16
inc
popa
jae
inc
fs
jae
add
jbe
dec
gs
add
jb
add
je
add
jne
add
je
dec
gs
addr16
push
imul
outs
je
jae
je
dec
outs
arpl
imul
jo
outs
fs
popa
jns
jne
add
je
push
imul
push
gs
outs
jne
fs
inc
jb
outs
addr16
outs
inc
jb
outs
je
push
imul
pop
push
imul
pop
inc
outs
arpl
inc
outs
arpl
je
ins
add
je
inc
jne
outs
push
arpl
gs
popa
jae
push
imul
pop
inc
ins
imul
add
je
inc
outs
outs
je
outs
ins
inc
outs
js
jae
je
push
gs
add
je
push
outs
jo
outs
jae
add
jae
ins
gs
popa
jns
jne
add
je
inc
outs
arpl
jb
inc
outs
arpl
jb
je
ins
gs
inc
outs
jb
popa
je
inc
jne
je
outs
inc
popa
jae
add
je
inc
ins
popa
je
je
ins
add
popa
je
je
ins
add
je
push
imul
pop
push
popa
bound
fs
addr16
inc
outs
outs
je
outs
ins
jae
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
fs
popa
outs
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
jb
inc
outs
jb
gs
je
ins
add
je
push
push
push
popa
jae
bound
add
je
dec
imul
inc
outs
js
jae
je
dec
popa
js
ins
imul
jae
je
push
je
jb
push
outs
jae
je
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
gs
add
outs
je
popa
outs
fs
gs
popa
fs
inc
ins
imul
arpl
outs
js
popa
fs
inc
push
fs
push
add
outs
je
push
imul
outs
outs
je
je
ins
add
popa
jo
imul
add
je
inc
outs
outs
je
and
add
je
add
je
gs
jo
imul
inc
outs
ins
bound
add
gs
fs
bound
je
js
gs
imul
add
js
add
je
popa
ins
ins
imul
ins
bound
inc
outs
jb
popa
je
js
gs
imul
ss
addr16
push
outs
jae
je
outs
outs
add
imul
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
outs
jae
outs
jb
inc
imul
arpl
and
add
jp
add
inc
inc
jb
jo
outs
push
gs
imul
imul
ins
ins
gs
imul
imul
ins
pop
ins
ins
push
je
imul
gs
je
dec
gs
inc
outs
gs
je
dec
push
add
je
dec
gs
inc
jne
data16
inc
ins
outs
arpl
outs
jo
add
je
dec
push
add
arpl
jo
add
imul
push
outs
inc
jns
add
jne
push
ins
inc
ins
outs
arpl
push
outs
inc
jb
popa
jns
addr16
dec
gs
popa
add
gs
jb
inc
jb
jo
outs
addr16
jo
imul
je
outs
outs
add
inc
imul
inc
imul
bound
gs
dec
jo
jb
je
jb
add
ins
jo
jb
push
je
imul
pop
push
imul
jns
add
outs
arpl
jae
imul
jns
add
je
je
jb
bound
gs
and
add
inc
imul
and
add
popa
arpl
jb
arpl
push
je
arpl
jb
ins
add
imul
imul
gs
push
je
arpl
jb
arpl
addr16
inc
jb
ins
gs
outs
jne
je
inc
gs
jb
ins
add
je
gs
outs
add
je
outs
fs
popa
jae
add
ins
bound
dec
outs
outs
add
je
dec
gs
fs
je
push
outs
imul
inc
gs
dec
dec
data16
je
addr16
inc
popa
je
add
imul
jb
add
je
dec
je
ins
add
outs
je
imul
pop
dec
je
ins
add
fs
popa
jae
add
imul
imul
pusha
xor
and
add
dec
imul
and
add
dec
imul
jb
outs
arpl
add
ins
jo
jb
inc
js
push
add
dec
imul
push
je
gs
ins
add
outs
push
jb
je
add
dec
imul
and
add
push
imul
jb
jo
outs
push
gs
imul
imul
add
push
imul
inc
jb
jo
imul
outs
je
xor
inc
outs
jne
ins
add
push
imul
and
add
push
imul
jb
arpl
fs
jae
add
jb
gs
xor
cs
ins
add
pop
imul
and
add
jo
imul
inc
js
gs
imul
jo
bound
imul
je
arpl
add
je
push
jb
js
add
bound
outs
js
add
jae
gs
cs
gs
and
imul
pusha
xor
addr16
inc
outs
jne
je
inc
fs
jo
gs
inc
outs
outs
je
imul
and
imul
and
imul
inc
gs
jns
add
ins
push
jb
je
jb
push
jns
je
ins
cs
ins
ins
add
imul
bound
gs
je
imul
gs
data16
xor
imul
je
inc
imul
gs
xor
add
aaa
imul
ins
imul
imul
jo
imul
add
cmp
and
add
bound
and
add
fs
and
add
pushw
and
add
push
push
and
add
je
dec
popa
push
jb
and
add
ins
push
and
add
je
jb
arpl
jae
jae
jns
popa
ins
add
outs
push
and
add
pop
bound
push
gs
ins
jbe
inc
jbe
outs
je
jb
jae
and
add
je
dec
popa
ins
add
popa
jae
ss
je
imul
pop
inc
push
dec
outs
outs
imul
gs
dec
outs
popa
add
je
gs
jo
popa
je
add
fs
imul
add
ins
gs
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
add
je
add
outs
add
jno
add
jb
add
popa
jae
jb
push
je
imul
gs
add
imul
je
dec
imul
push
and
push
imul
jns
dec
imul
je
push
imul
imul
outs
arpl
dec
popa
arpl
outs
add
outs
push
jne
dec
gs
inc
gs
popa
ins
jne
add
jne
add
je
jae
gs
bound
jae
and
add
ja
add
js
add
ins
arpl
push
arpl
imul
ins
add
jns
add
jp
add
inc
push
and
add
inc
push
and
inc
jb
popa
je
inc
jb
jo
imul
pop
inc
outs
outs
je
and
add
inc
push
and
add
dec
push
and
add
dec
push
push
dec
outs
je
xor
push
dec
outs
je
add
jns
add
outs
je
je
add
dec
outs
je
xor
push
outs
dec
outs
je
xor
and
add
dec
push
and
add
js
and
add
push
bound
and
add
push
bound
dec
outs
jbe
inc
imul
push
and
add
push
push
inc
gs
popa
ins
add
jae
ins
bound
popa
ins
add
je
jne
ins
imul
push
push
and
add
push
push
inc
jb
ins
dec
popa
outs
fs
add
push
push
and
add
push
push
and
add
pop
push
and
add
xor
and
push
addr16
inc
popa
jae
push
jns
add
je
jns
gs
and
push
and
push
and
add
xor
push
and
and
push
and
push
and
push
and
add
dec
outs
je
xor
inc
imul
je
jb
push
outs
dec
outs
je
add
dec
jne
ins
dec
jb
ins
jo
jns
and
add
arpl
and
inc
js
jb
arpl
outs
outs
inc
js
jae
gs
ins
xor
add
imul
imul
gs
jne
arpl
popa
outs
popa
addr16
inc
outs
fs
jo
add
ins
jo
jb
dec
bound
arpl
jne
ins
add
outs
imul
outs
ins
jo
jb
dec
bound
arpl
jne
ins
add
je
bound
arpl
imul
push
imul
push
add
imul
ins
imul
ins
imul
outs
imul
outs
imul
jo
add
jno
add
jb
add
gs
imul
pop
dec
outs
ja
addr16
pop
gs
jb
addr16
dec
outs
outs
je
add
je
inc
popa
jns
addr16
dec
outs
jne
add
je
dec
imul
gs
push
arpl
add
imul
gs
imul
push
outs
jae
je
outs
outs
add
jae
add
je
push
outs
jb
imul
xor
dec
gs
popa
addr16
outs
js
push
push
imul
jae
ins
je
and
and
add
inc
add
inc
add
imul
inc
jb
popa
jns
addr16
inc
gs
jne
je
and
add
ja
add
jbe
add
js
add
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
add
je
jb
je
jb
push
push
inc
jo
push
imul
add
jp
add
inc
imul
inc
imul
inc
imul
inc
imul
gs
jns
je
ins
dec
outs
outs
add
inc
imul
inc
imul
inc
imul
dec
imul
imul
imul
dec
imul
dec
imul
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
jae
gs
bound
gs
ins
jbe
add
dec
imul
dec
imul
dec
imul
dec
imul
push
imul
push
imul
push
imul
push
imul
push
imul
gs
gs
jae
dec
arpl
inc
gs
arpl
push
outs
dec
outs
outs
je
push
arpl
ins
add
push
imul
push
imul
push
imul
gs
jns
je
ins
dec
gs
imul
jb
xor
fs
ins
add
pop
imul
pop
imul
pop
imul
xor
push
jns
inc
imul
ss
dec
push
jno
dec
add
dec
ins
push
ss
pop
dec
cmp
push
je
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
gs
jb
ins
gs
addr16
dec
outs
fs
add
fs
add
je
inc
jae
gs
bound
jp
push
dec
gs
ss
pop
inc
push
pop
dec
ss
pop
inc
imul
jae
xor
inc
jo
push
dec
dec
xor
xor
add
arpl
and
add
arpl
and
add
imul
push
jb
inc
gs
popa
ins
jne
add
je
jb
add
arpl
push
xor
inc
je
outs
jae
pop
ss
pop
add
popa
xor
inc
inc
dec
inc
push
push
xor
xor
and
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
arpl
and
add
inc
arpl
and
add
inc
arpl
push
aaa
xor
inc
ss
jb
inc
push
inc
pop
xor
xor
push
dec
dec
imul
xor
add
dec
arpl
and
add
dec
arpl
and
add
dec
arpl
and
add
dec
arpl
jns
xor
xor
fs
aaa
push
push
xor
xor
dec
add
dec
popa
push
cmp
je
dec
jns
inc
inc
inc
push
inc
js
add
push
arpl
and
add
ss
xor
xor
outs
dec
jbe
inc
arpl
add
dec
jb
xor
cmp
dec
outs
fs
ins
push
add
push
arpl
and
add
push
arpl
and
add
pop
arpl
and
add
xor
and
arpl
and
arpl
and
arpl
and
add
xor
dec
dec
cmp
aaa
jo
cmp
dec
push
inc
xor
push
add
jo
dec
je
dec
push
outs
dec
addr16
addr16
add
aaa
arpl
and
arpl
and
arpl
and
add
jbe
push
xor
xor
dec
dec
pop
cmp
add
push
ins
imul
inc
inc
dec
push
popa
push
pop
jae
xor
and
add
fs
gs
data16
add
push
add
push
add
imul
add
imul
push
inc
gs
push
inc
data16
push
bound
xor
jae
cmp
push
xor
and
add
outs
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
addr16
ins
ins
xor
xor
popa
imul
gs
add
push
push
push
cmp
imul
xor
add
ja
add
js
add
jns
add
jp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
dec
add
push
popa
push
ins
xor
je
xor
dec
bound
add
dec
inc
push
jae
ins
pop
push
push
imul
inc
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
xor
je
jo
dec
jbe
dec
dec
dec
data16
dec
add
jae
ss
push
cmp
push
xor
add
cmp
xor
jo
jae
inc
cmp
je
add
push
cmp
popa
addr16
jo
aaa
inc
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
xor
xor
xor
xor
xor
add
gs
data16
push
add
push
add
imul
ins
add
ins
add
jno
ins
xor
pop
ins
xor
cmp
ja
add
jo
dec
imul
ins
xor
bound
and
add
pop
pop
push
xor
aaa
xor
jns
pop
xor
add
ins
addr16
pop
xor
pop
cmp
push
outs
add
jno
add
jb
add
jae
add
je
add
addr16
aaa
jno
xor
xor
xor
jbe
add
imul
inc
dec
xor
jns
push
push
aaa
jns
and
add
ja
add
imul
jns
add
jp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
gs
fs
outs
outs
add
je
dec
jae
je
je
arpl
inc
gs
ins
gs
outs
je
jns
add
je
dec
jae
jns
data16
je
dec
jae
outs
imul
gs
dec
jae
jb
popa
jns
inc
gs
jb
popa
jns
popa
outs
imul
gs
dec
popa
jae
ins
gs
outs
je
jns
add
je
inc
imul
add
je
dec
jae
popa
ins
jne
push
jns
add
je
dec
jae
jb
ins
imul
je
dec
jae
outs
jne
add
dec
add
data16
outs
arpl
jno
popa
ins
jae
and
add
dec
add
je
dec
popa
outs
imul
fs
add
je
dec
outs
fs
gs
gs
imul
dec
add
je
dec
popa
ins
gs
popa
arpl
dec
popa
jae
dec
outs
fs
data16
jo
popa
arpl
and
add
outs
ins
ins
arpl
outs
add
jne
gs
je
jb
dec
gs
outs
ins
ins
arpl
outs
add
inc
cmp
arpl
imul
push
gs
push
jb
je
jb
push
jb
je
push
je
jb
inc
outs
arpl
outs
je
dec
gs
jne
add
je
inc
outs
fs
popa
jae
add
je
dec
gs
add
je
push
gs
imul
je
inc
ins
gs
outs
je
je
imul
pop
dec
push
push
gs
imul
jb
je
outs
addr16
jns
je
ins
add
je
push
ins
popa
je
outs
jb
add
popa
je
outs
jb
dec
inc
add
je
dec
outs
outs
gs
js
gs
imul
gs
add
outs
jne
gs
bound
inc
gs
imul
imul
arpl
outs
je
and
add
je
jne
je
ins
inc
je
jb
bound
gs
addr16
push
popa
outs
imul
gs
outs
addr16
add
push
add
je
dec
jae
imul
gs
dec
jae
outs
imul
gs
imul
imul
ins
popa
addr16
and
add
dec
ins
push
jb
ss
push
cmp
ins
jo
dec
imul
inc
xor
inc
xor
push
imul
jns
dec
add
push
add
push
add
push
add
pop
add
pop
add
ins
aaa
dec
xor
arpl
inc
inc
jno
xor
jb
je
inc
imul
push
jno
aaa
cmp
cmp
and
add
xor
and
add
xor
inc
dec
xor
xor
push
je
bound
add
push
arpl
dec
arpl
dec
push
imul
xor
and
add
aaa
add
dec
dec
outs
dec
addr16
js
push
jb
inc
inc
push
inc
jae
jbe
dec
push
push
jbe
arpl
dec
ja
dec
ins
push
jae
push
add
inc
je
jbe
outs
ins
js
jns
dec
xor
jbe
add
dec
pop
xor
inc
push
js
inc
dec
push
bound
xor
and
add
arpl
and
and
add
data16
data16
xor
imul
imul
push
pop
dec
outs
jbe
add
imul
fs
inc
ins
cmp
add
push
add
imul
ins
data16
ins
data16
xor
imul
dec
inc
inc
ss
xor
dec
xor
dec
gs
push
ss
inc
cmp
imul
add
jno
add
jb
add
jae
add
push
cmp
dec
cmp
js
cmp
inc
pop
dec
add
inc
jb
jns
jne
imul
xor
jne
add
jbe
add
ja
add
js
add
je
outs
fs
inc
add
push
arpl
dec
dec
dec
data16
je
inc
js
gs
imul
imul
push
dec
bound
arpl
je
add
jb
popa
ins
imul
dec
outs
outs
add
jae
gs
cs
jne
je
ins
gs
gs
popa
ins
imul
add
jb
popa
ins
imul
gs
add
fs
popa
ins
jne
add
je
outs
je
xor
push
imul
inc
dec
xor
xor
imul
jo
push
jne
push
dec
fs
dec
addr16
jno
ins
xor
gs
popa
ins
imul
and
add
inc
outs
outs
je
push
add
inc
data16
push
gs
jp
add
inc
data16
push
gs
inc
push
add
je
push
jae
dec
outs
gs
outs
outs
imul
cmp
dec
dec
push
ins
xor
jbe
cmp
xor
push
inc
ins
dec
push
je
popa
dec
xor
aaa
push
inc
aaa
add
inc
data16
dec
data16
popa
add
dec
data16
dec
data16
dec
data16
dec
data16
dec
data16
dec
data16
dec
data16
push
data16
push
data16
popa
ins
gs
outs
jb
add
push
data16
imul
je
jb
jae
dec
outs
push
popa
imul
jo
outs
outs
je
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
je
inc
gs
outs
dec
outs
fs
je
inc
jb
jo
imul
ja
ins
popa
add
je
je
ins
add
outs
je
outs
ins
push
je
ins
gs
jae
je
push
popa
bound
outs
jo
jae
je
dec
outs
je
jb
popa
ins
add
fs
push
imul
add
push
data16
addr16
push
push
dec
push
gs
cmp
jae
addr16
add
jb
aaa
push
dec
push
fs
aaa
imul
add
push
data16
push
data16
pop
data16
pop
data16
xor
and
data16
jae
gs
push
outs
jae
addr16
inc
outs
outs
je
outs
ins
inc
popa
jb
add
outs
add
je
inc
ins
imul
add
ja
imul
pop
inc
outs
outs
je
outs
ins
dec
imul
push
je
push
imul
je
inc
outs
je
outs
ins
add
ja
arpl
add
jae
gs
inc
outs
ins
outs
jb
add
je
push
imul
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
push
addr16
dec
dec
fs
push
push
gs
imul
outs
imul
dec
pop
push
imul
inc
push
imul
and
add
xor
arpl
gs
outs
js
and
data16
ins
push
imul
push
gs
outs
outs
ins
push
imul
dec
ins
popa
add
jb
outs
jb
add
je
dec
popa
outs
add
jb
outs
jb
jae
je
inc
jne
jae
jb
jae
je
push
imul
add
arpl
gs
outs
js
imul
add
outs
pop
dec
arpl
inc
push
xor
jbe
ss
push
xor
dec
dec
ins
ja
imul
ins
xor
xor
jae
and
data16
popa
add
bound
and
add
push
imul
push
add
je
push
imul
push
gs
ins
imul
inc
pop
dec
jns
js
dec
jae
push
xor
push
xor
aaa
push
dec
popa
gs
jb
xor
xor
and
add
data16
addr16
push
add
push
add
imul
push
inc
js
gs
imul
je
jb
jae
addr16
inc
js
gs
imul
add
push
gs
js
gs
imul
je
jb
jae
addr16
inc
js
gs
imul
arpl
gs
dec
jae
gs
imul
add
ins
add
outs
add
je
jb
jo
jb
jns
push
jb
jo
jb
jns
outs
outs
add
je
gs
gs
outs
add
je
outs
fs
outs
outs
add
je
inc
js
je
outs
fs
outs
add
jo
add
jno
add
outs
outs
ins
gs
outs
add
pop
inc
xor
fs
pop
popa
dec
inc
je
outs
add
ss
jno
dec
imul
pop
xor
push
bound
imul
je
arpl
add
je
push
jb
add
je
push
imul
inc
gs
gs
gs
push
dec
add
outs
jae
dec
inc
add
je
bound
jno
gs
add
bound
jno
gs
add
imul
dec
je
jo
bound
jno
gs
add
je
push
gs
imul
je
push
gs
imul
je
jae
je
inc
js
arpl
xor
outs
je
outs
jne
add
push
push
dec
dec
dec
jb
jno
jne
cmp
jno
inc
add
jno
inc
dec
data16
inc
xor
dec
push
add
jb
gs
jb
add
ins
outs
popa
fs
gs
jb
xor
fs
je
add
popa
imul
imul
popa
ins
add
imul
fs
jns
jne
bound
add
outs
outs
push
xor
ss
xor
cmp
xor
xor
add
xor
aaa
dec
dec
inc
xor
jb
dec
addr16
gs
aaa
dec
add
jae
add
je
add
jne
add
jbe
add
inc
bound
dec
bound
data16
push
inc
push
js
pop
add
push
push
dec
push
dec
ins
push
pop
jne
push
pop
push
add
js
add
jns
add
jp
add
inc
add
inc
add
inc
add
je
push
outs
jo
outs
dec
push
xor
dec
ss
push
jns
outs
inc
xor
xor
push
ins
cmp
imul
dec
xor
imul
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
imul
inc
ins
gs
outs
je
push
jb
je
inc
outs
fs
ins
gs
outs
je
dec
inc
ja
gs
dec
ja
push
push
xor
xor
dec
push
pop
add
inc
addr16
dec
push
push
jno
je
jae
outs
dec
dec
add
xor
and
add
add
aaa
add
cmp
and
add
je
outs
outs
add
popa
push
add
outs
gs
add
arpl
and
and
add
pushw
addr16
add
imul
and
add
ins
push
add
outs
push
add
jo
add
jno
add
jb
add
jbe
inc
imul
add
ins
gs
imul
gs
push
imul
pop
inc
gs
jne
je
js
add
je
inc
imul
ins
ins
outs
outs
inc
imul
push
popa
ins
outs
add
je
inc
imul
and
add
je
add
jne
add
outs
jb
add
jbe
add
ja
add
je
inc
push
add
js
add
jns
add
jp
add
outs
arpl
inc
jbe
outs
je
jb
jae
dec
outs
inc
ins
outs
jae
outs
add
je
dec
jae
ins
imul
add
arpl
add
je
inc
jo
jb
ins
outs
je
je
je
add
popa
jb
ins
outs
je
je
je
add
inc
push
add
inc
push
pop
inc
popa
outs
inc
outs
arpl
add
je
inc
outs
outs
je
imul
cmp
dec
ss
push
popa
inc
dec
push
je
jae
add
xor
dec
inc
outs
imul
ins
push
ins
add
inc
push
add
dec
push
add
je
dec
arpl
add
xor
dec
dec
dec
xor
push
js
push
dec
pop
inc
add
push
push
outs
bound
outs
push
bound
outs
add
jae
popa
addr16
outs
js
jne
je
outs
jae
dec
gs
popa
addr16
outs
js
arpl
add
dec
push
outs
imul
ins
bound
add
outs
fs
dec
imul
gs
outs
fs
js
gs
imul
ss
pop
dec
jp
push
xor
xor
push
imul
addr16
jne
dec
je
jae
inc
inc
aaa
dec
add
cmp
cmp
xor
xor
sub
sub
sub
data16
fs
jge
jnp
xor
cmp
xor
sub
sub
sub
xor
xor
xor
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
bound
addr16
imul
jb
bound
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
inc
push
push
inc
je
jb
bound
add
je
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
arpl
imul
arpl
inc
je
jb
bound
add
bound
jb
imul
imul
imul
outs
popa
jo
outs
arpl
outs
je
gs
outs
fs
je
jb
bound
add
ins
inc
ins
gs
outs
je
je
jb
bound
add
jae
gs
cs
ins
ins
cs
gs
popa
ins
imul
add
add
adc
xor
ja
jo
add
js
add
sbb
jae
jo
outs
add
je
pop
add
jo
add
js
add
adc
inc
add
ins
add
add
add
add
jne
je
jb
popa
add
and
and
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
ins
add
adc
push
add
jb
jae
imul
cmp
add
jb
jae
imul
cmp
add
ins
add
add
add
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
outs
add
add
add
add
add
jb
and
push
add
add
popa
add
add
add
sbb
imul
add
ja
outs
add
add
add
add
jb
add
add
xor
dec
add
pop
add
add
push
add
xor
dec
add
inc
add
add
inc
add
je
dec
add
pop
add
add
xor
xor
dec
add
add
add
add
xor
dec
add
dec
add
dec
add
add
dec
add
pop
add
add
add
dec
add
dec
add
add
dec
add
xor
arpl
ins
add
cmp
bound
ins
add
xor
add
dec
add
bound
inc
add
add
dec
add
imul
ins
add
push
add
add
xor
add
add
pop
add
xor
cmp
dec
add
add
xor
dec
add
dec
add
add
inc
add
xor
add
xor
dec
add
push
add
add
push
add
add
jp
pop
add
bound
cmp
cmp
cmp
xor
xor
add
add
add
add
add
add
add
add
sub
add
cmp
data16
add
add
add
add
add
add
sub
add
inc
add
add
push
add
xor
dec
add
add
add
add
xor
dec
add
add
add
pop
add
add
xor
xor
dec
add
add
add
add
xor
dec
add
dec
add
dec
add
add
dec
add
pop
add
add
add
add
pop
add
bound
cmp
cmp
cmp
xor
xor
add
add
add
add
add
add
add
add
sub
add
cmp
data16
add
add
add
add
add
add
add
jnp
xor
jge
jnp
xor
jge
pop
add
or
add
add
or
popa
add
add
add
push
add
add
add
add
add
add
add
add
or
add
add
aaa
add
add
add
add
add
add
add
add
cmp
sub
add
add
add
add
add
data16
add
add
add
add
jne
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
add
add
add
add
aaa
add
add
add
add
add
pop
xor
xor
xor
add
add
xor
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
add
add
add
mov
aas
lock
into
imul
cmps
push
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
inc
shld
cmps
pop
mov
xor
jns
repnz
fstp
loop
sub
jmp
xchg
cs
add
sbb
xor
and
and
inc
popf
adc
ror
xchg
retf
enter
or
in
aad
test
rcr
mov
sbb
mov
out
jb
outs
int
mov
jge
and
jp
push
sbb
mov
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
and
add
add
or
add
add
add
add
or
add
add
push
pop
add
add
add
or
add
xor
xor
add
add
and
ja
jb
and
and
popa
jb
inc
jae
gs
bound
ss
xor
xor
xor
add
add
add
add
add
add
sub
jg
aad
cmp
add
add
pop
add
add
add
add
add
add
push
add
add
add
add
pop
push
adc
adc
push
adc
or
push
adc
ins
pop
push
adc
sbb
pop
add
push
adc
adc
adc
or
adc
ins
push
adc
sbb
add
adc
pop
add
adc
adc
add
add
add
or
pop
add
or
or
add
adc
pop
add
ins
adc
add
adc
push
pop
add
sbb
sbb
add
adc
add
or
or
adc
or
adc
add
add
sbb
pop
add
add
add
add
add
add
add
or
add
jns
pop
add
jns
jns
add
adc
jge
pop
add
push
pop
adc
add
add
add
pop
add
add
add
push
add
add
add
add
xor
add
adc
add
add
add
push
adc
push
pop
add
add
add
adc
add
adc
add
add
add
add
add
pop
add
sub
sbb
adc
add
add
push
or
add
sbb
add
add
add
adc
add
adc
push
or
push
adc
pop
add
inc
or
or
xchg
add
add
add
push
sbb
push
or
push
push
add
sbb
add
adc
push
add
and
adc
pop
add
push
adc
or
adc
xor
add
add
pop
add
or
add
jns
add
sbb
or
add
sbb
push
add
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
sbb
or
sbb
and
adc
or
or
and
adc
adc
add
or
or
or
and
sbb
or
push
adc
inc
adc
inc
adc
add
adc
inc
adc
inc
adc
add
push
sbb
add
sbb
adc
inc
adc
inc
adc
pop
adc
or
adc
adc
add
adc
adc
adc
add
or
or
adc
adc
pop
adc
add
and
adc
adc
add
or
or
add
sbb
mov
add
sbb
sbb
or
sbb
sbb
adc
and
adc
or
or
and
adc
or
adc
add
or
or
add
sbb
mov
or
or
sbb
adc
or
add
sbb
add
add
or
popf
adc
dec
or
and
adc
dec
adc
add
adc
or
add
sbb
add
add
add
add
or
adc
add
or
or
push
adc
push
adc
pop
add
add
add
test
sub
push
or
push
adc
or
add
adc
push
add
pop
add
xor
adc
add
adc
push
and
adc
push
push
push
sbb
or
and
sbb
and
push
or
add
add
cmp
push
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
add
push
outs
ins
popa
outs
popa
addr16
outs
fs
add
add
cmp
lds
and
add
or
add
add
adc
or
add
adc
adc
push
add
push
adc
add
push
add
adc
add
adc
add
add
jno
add
add
add
or
add
adc
or
add
or
add
or
adc
or
add
add
add
push
add
add
push
or
add
or
or
pop
add
or
or
add
add
and
pop
push
sbb
or
or
add
sbb
adc
sbb
or
adc
add
and
and
push
add
push
push
push
push
push
and
adc
add
adc
add
and
add
adc
sbb
adc
adc
adc
add
adc
add
or
add
add
add
add
add
or
xor
add
or
adc
add
push
push
daa
pop
push
sbb
or
sub
sbb
adc
push
push
adc
add
xor
sbb
or
or
and
add
add
sbb
add
and
sub
add
add
add
sbb
and
push
sbb
add
sbb
add
push
sbb
add
jno
cmp
adc
sbb
sbb
sbb
sbb
add
add
adc
push
adc
adc
sbb
adc
or
or
or
or
or
or
or
or
or
add
push
adc
add
sub
pop
add
or
pop
add
add
jno
sbb
add
adc
adc
or
add
adc
or
pop
add
or
add
adc
or
add
adc
push
and
add
adc
or
or
adc
sbb
sbb
sbb
or
add
or
in
and
sbb
push
sbb
sbb
sbb
push
push
push
adc
push
sbb
sbb
or
sbb
push
push
push
push
push
add
push
push
add
adc
add
add
push
add
sub
add
sbb
add
sbb
add
add
push
add
push
adc
pop
sbb
adc
sbb
adc
add
add
add
jns
sbb
adc
add
sbb
adc
sbb
adc
add
add
or
pop
add
add
add
push
or
add
adc
sbb
inc
add
cmp
add
add
or
add
adc
pop
or
or
or
or
sub
add
push
add
add
sub
sbb
and
add
or
and
add
or
or
or
and
add
or
adc
adc
sbb
and
add
sbb
dec
add
popa
push
and
add
add
or
and
sub
sub
or
cmp
and
add
xor
and
adc
add
adc
push
adc
and
add
push
push
add
sbb
pop
and
adc
xor
add
or
or
add
or
or
adc
add
jmp
sbb
sbb
add
or
add
adc
or
add
or
add
sbb
and
movlps
adc
cmp
add
sbb
add
sbb
and
sbb
sbb
add
add
add
or
and
add
and
adc
sbb
push
push
push
push
push
adc
sub
sbb
add
add
add
add
or
push
add
and
add
xor
sub
push
adc
adc
adc
add
adc
or
and
and
pop
add
add
add
adc
sbb
pop
adc
or
adc
adc
adc
sbb
add
or
add
jno
and
adc
add
add
mov
add
or
sbb
add
add
or
add
adc
adc
push
add
add
sbb
pop
add
or
add
sbb
sbb
add
add
add
sub
pop
add
add
or
add
add
cmp
add
cmp
cmp
or
add
push
add
push
add
add
add
cmp
add
adc
adc
add
and
add
adc
push
add
adc
add
or
xor
add
add
and
add
sub
ins
or
ins
push
add
add
jno
sbb
sbb
sbb
sbb
or
add
sub
add
pop
add
sbb
sub
add
add
and
pop
pop
or
or
or
or
add
adc
or
add
add
or
adc
add
adc
add
add
add
sbb
or
pop
or
or
or
or
add
sbb
push
or
add
adc
or
push
add
jno
sbb
sbb
or
add
adc
or
add
add
sub
adc
add
or
adc
push
or
and
adc
adc
or
adc
add
add
add
and
add
add
add
add
add
adc
or
adc
or
pop
or
or
or
or
or
add
add
jno
and
push
push
or
sbb
or
add
add
push
add
or
add
add
adc
adc
or
add
adc
push
push
add
add
sub
sub
or
add
adc
or
jno
sbb
sbb
sbb
add
or
mov
add
sbb
ror
or
add
adc
pop
add
sbb
push
add
add
or
add
adc
adc
adc
push
push
add
or
or
adc
adc
push
adc
add
push
adc
sbb
or
add
or
add
sbb
add
adc
add
push
sbb
add
push
or
add
adc
or
or
add
or
add
push
adc
or
dec
or
add
adc
adc
add
or
add
adc
or
add
adc
adc
adc
add
sbb
add
sbb
and
pop
add
gs
or
add
adc
push
pop
add
cmp
adc
or
or
add
or
or
sbb
add
add
add
xor
add
xor
adc
adc
xor
adc
adc
add
or
pop
or
or
or
or
or
add
add
and
add
sbb
pop
add
or
or
add
add
xor
pop
push
push
or
push
or
pop
add
or
add
add
add
add
push
pop
add
add
or
inc
daa
pop
push
push
push
push
push
push
adc
add
adc
adc
jno
dec
adc
sbb
or
add
jl
or
adc
adc
adc
adc
or
adc
pop
add
test
sbb
sbb
or
or
or
or
or
or
or
or
add
push
push
or
add
add
cmp
adc
adc
add
or
adc
pop
add
or
or
sub
adc
adc
add
and
add
sbb
or
or
sbb
sbb
and
and
push
add
or
and
add
or
sub
pop
pop
or
or
or
or
jl
pop
add
jns
or
add
jns
add
sbb
jns
pop
add
add
add
or
or
add
push
adc
adc
adc
or
sbb
xor
adc
add
sbb
or
add
or
pop
add
pop
add
add
and
add
or
sub
xor
push
add
pop
sbb
adc
push
adc
adc
ins
adc
adc
or
or
or
sbb
or
sbb
xchg
sbb
or
adc
add
pusha
add
add
fs
add
push
ins
add
add
jo
or
adc
add
or
or
add
or
add
sbb
add
adc
add
or
or
pop
add
adc
add
sub
pop
sbb
add
sbb
push
push
push
add
xor
sbb
sbb
add
adc
add
sbb
sbb
push
add
add
add
add
or
add
push
add
add
push
add
add
add
sub
add
sbb
or
add
adc
push
add
or
sub
pop
add
or
or
add
adc
sbb
push
add
add
adc
add
pop
add
add
dec
add
add
add
xor
or
add
adc
or
add
add
adc
or
sbb
or
or
or
add
sbb
pop
and
xor
sbb
cmp
sbb
or
sbb
sbb
sbb
fcomp
or
sbb
sbb
sub
add
sbb
add
adc
or
adc
add
or
add
adc
or
add
adc
add
jns
xor
push
sbb
sbb
add
sbb
add
adc
adc
adc
add
add
jno
sbb
sbb
sbb
sbb
sbb
pop
pop
sbb
push
add
or
or
add
or
or
sbb
push
push
push
push
adc
or
or
add
push
adc
add
add
adc
add
sub
add
add
adc
push
sbb
sbb
pop
or
push
sbb
push
push
push
push
or
or
adc
add
sbb
pop
add
and
sbb
add
sbb
xor
and
push
and
add
sbb
add
or
adc
or
or
or
add
push
adc
adc
add
adc
adc
or
or
or
or
or
sbb
add
or
and
add
or
sbb
pop
add
or
add
adc
or
add
push
adc
jne
pop
push
adc
sbb
add
add
sbb
add
or
or
push
add
add
sub
add
adc
push
push
push
pop
add
or
cmp
add
adc
or
push
add
add
xor
adc
add
sbb
push
or
add
adc
add
add
sbb
adc
and
sbb
and
adc
adc
push
adc
or
add
add
add
or
pop
or
or
or
pop
adc
or
or
add
adc
adc
add
pop
add
in
sbb
add
push
add
add
or
push
sbb
or
push
adc
sbb
push
adc
push
push
pop
add
push
add
push
adc
sub
push
adc
add
sub
push
adc
add
and
or
push
and
add
adc
cmp
push
adc
add
add
adc
sub
dec
add
adc
or
add
adc
pop
or
sbb
push
push
adc
add
adc
or
and
add
adc
push
push
add
adc
push
adc
add
push
adc
push
sbb
push
adc
push
adc
xor
xor
pop
push
adc
push
or
adc
push
or
push
adc
adc
dec
add
adc
sub
sub
adc
push
or
adc
adc
xor
adc
or
push
adc
add
xor
adc
push
sbb
jns
jns
push
or
xor
sbb
add
xor
adc
sbb
or
add
or
sbb
add
adc
pop
add
or
sub
and
adc
adc
add
jns
pop
or
xor
xor
add
push
or
gs
push
push
adc
icebp
add
jno
jno
jno
xor
sbb
jns
or
sbb
or
push
adc
adc
adc
adc
sbb
sbb
sbb
sbb
adc
or
sbb
jno
cmp
or
xor
sbb
or
or
and
add
and
or
adc
add
imul
cmp
add
add
adc
push
sbb
and
adc
adc
adc
pop
adc
push
sbb
adc
push
adc
xor
adc
adc
adc
adc
adc
xor
and
adc
and
adc
adc
pop
adc
adc
and
adc
sbb
pop
sbb
sbb
jns
add
adc
adc
or
or
sbb
sbb
sbb
or
sbb
and
sbb
add
adc
push
add
add
or
and
adc
add
sbb
or
adc
add
dec
sbb
sbb
pushf
or
or
and
sbb
adc
adc
adc
adc
or
adc
adc
jns
push
sbb
and
add
pop
and
add
jns
pop
and
add
cmp
sbb
and
adc
and
and
imul
add
imul
push
add
and
add
adc
popf
sbb
adc
push
adc
add
adc
adc
or
add
adc
pop
pop
add
or
and
add
sbb
jns
and
sbb
adc
and
or
and
adc
mov
add
push
add
adc
push
adc
adc
add
or
or
and
add
sub
and
popa
adc
add
pop
pop
and
add
xor
loope
push
adc
xor
popa
adc
adc
adc
adc
add
cmp
cmp
and
add
and
and
add
adc
add
rol
add
adc
add
add
adc
or
and
add
pop
push
push
and
add
and
rol
and
add
adc
and
add
adc
and
add
and
pop
add
and
or
adc
cmp
inc
push
and
add
cmp
adc
add
sbb
pop
add
jno
jns
pop
and
add
sbb
and
add
imul
dec
or
and
add
jno
add
pop
or
jns
adc
adc
gs
sbb
adc
or
push
and
adc
add
and
and
sbb
sbb
adc
jns
pop
add
sub
sbb
sbb
adc
or
add
sub
xor
add
stc
or
add
push
push
push
add
adc
add
pop
pop
and
add
xor
and
inc
add
adc
xor
add
adc
add
push
adc
sub
add
adc
adc
add
add
add
or
add
adc
pop
add
adc
and
adc
add
cmp
or
mov
adc
or
and
add
and
pop
add
xor
add
add
adc
or
add
adc
or
adc
sbb
sbb
add
add
add
add
push
and
add
sub
jns
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
or
cs
outs
ins
jo
je
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
add
push
dec
jns
push
bound
jb
imul
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
and
push
push
push
push
or
add
add
add
and
add
sbb
add
pop
add
add
or
add
add
add
add
add
push
push
add
popa
ins
adc
imul
arpl
outs
popa
jo
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
gs
gs
push
dec
add
pusha
add
add
push
push
add
popa
ins
gs
gs
jb
imul
imul
push
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
inc
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
outs
popa
fs
gs
jb
xor
add
add
add
inc
popa
je
push
jns
gs
popa
jae
ss
imul
jl
or
jnp
jge
xchg
das
fucom
daa
scas
(bad)
jno
rcr
test
inc
push
dec
ror
and
stc
ss
sub
enter
dec
pop
pop
pop
movs
jg
push
add
test
sbb
bound
pop
and
sti
fcomp
cmp
bnd
(bad)
and
inc
dec
add
ret
xor
push
jecxz
pop
sbb
fild
int
jmp
inc
mov
push
jae
cmps
lds
in
nop
mov
and
mov
inc
pop
bound
sbb
lods
cmp
sbb
mov
ss
inc
out
mov
sbb
stc
cld
and
xlat
cmp
inc
push
and
sbb
xchg
xchg
daa
mov
jb
(bad)
fstp
jmp
xchg
nop
nop
or
mov
dec
mov
jbe
jmp
aam
jbe
mov
push
cmp
inc
aaa
cmp
xor
or
arpl
push
ror
mov
cmps
xor
push
cwde
jp
jnp
test
in
xor
fs
push
adc
push
sbb
and
ret
adc
mov
sub
iret
rcl
jno
add
mov
xchg
or
inc
mov
loop
pop
mov
aas
lock
inc
call
pop
jnp
movs
fld
push
cdq
xchg
mov
adc
jecxz
dec
mov
fldlg2
jno
pop
mul
push
mov
in
sub
repnz
and
scas
jp
push
sub
mov
push
mov
enter
dec
inc
and
inc
rcl
or
mov
cmp
fldcw
cmp
ins
add
daa
xor
dec
in
push
lods
dec
pop
(bad)
adc
cwde
xchg
adc
icebp
push
aaa
or
imul
mov
pop
movs
adc
not
arpl
ret
gs
vmwrite
cmp
mov
push
popa
sbb
dec
adc
mov
cmp
sub
xor
push
xor
push
xchg
push
imul
mov
bound
adc
mov
pop
push
pop
(bad)
dec
sahf
dec
scas
pop
pop
sub
leave
popa
in
cmp
(bad)
xchg
push
add
mov
ss
or
and
mov
push
cmp
test
aam
das
dec
out
mov
xor
push
popa
jo
cld
cmp
mov
cdq
and
loope
mov
mov
cmp
test
dec
mov
pushf
cmps
xor
jmp
rcr
ins
out
add
dec
retf
xor
sub
call
jne
(bad)
in
push
dec
or
pop
inc
enter
or
or
jle
fisub
mov
xor
mov
cmp
repz
cmp
add
cmp
sbb
inc
cwde
xor
(bad)
pusha
lods
test
jle
and
mov
mov
stos
ins
ret
xchg
fadd
loop
and
setp
push
in
je
cmc
sar
popf
cmps
pop
pop
jnp
push
pop
add
nop
out
retf
enter
dec
jne
xchg
es
aas
shl
push
and
adc
cs
dec
scas
push
push
faddp
fistp
(bad)
cmp
rcl
clc
jmp
xor
mov
push
pusha
or
call
retf
mov
cmp
lods
into
(bad)
mov
xor
out
mov
test
gs
je
xor
mov
xchg
dec
lea
fbstp
outs
and
rol
gs
cmp
and
stos
outs
idiv
mov
test
mov
(bad)
std
add
stc
pop
bound
mov
dec
inc
or
pop
jns
les
imul
mov
push
push
icebp
sahf
iret
lods
in
pop
cmps
push
int3
mov
jge
outs
push
jg
jo
lea
cmps
xor
inc
jne
xchg
pop
or
sub
mov
imul
and
dec
les
icebp
out
or
mov
aas
sbb
push
jne
mov
(bad)
(bad)
mov
pop
nop
pop
mov
push
jecxz
or
(bad)
cmp
jo
mov
xor
rcl
ror
pop
push
ret
cli
mov
mov
jmp
cs
jmp
and
shl
(bad)
stos
mov
out
push
aas
in
and
retf
xchg
(bad)
jl
pusha
xchg
xchg
sub
aas
push
test
icebp
imul
fmul
xchg
or
sar
mov
imul
retf
call
and
mov
adc
int
push
fldcw
movs
out
vsubss
adc
outs
das
xor
push
or
sets
fs
neg
mov
mov
ret
sub
jmp
add
repz
fisttp
repz
stc
mov
lods
mov
and
popa
out
cmp
icebp
push
adc
push
push
fstp
ss
addr16
aaa
pop
cwde
ins
add
pop
leave
cli
lods
xor
inc
stc
add
jle
(bad)
not
gs
dec
cmps
leave
fwait
xor
sbb
sub
and
jge
ret
push
fwait
jnp
xchg
test
inc
add
gs
or
jmp
dec
and
nop
fcomp
xchg
inc
push
pop
das
inc
pop
imul
xchg
xchg
mov
cmp
adc
mov
or
mov
cdq
aam
xchg
sbb
mov
imul
idiv
add
mov
dec
pop
imul
or
push
xor
enter
(bad)
mov
sub
mov
sub
test
and
sub
jmp
movs
cmc
addr16
out
push
and
pop
(bad)
popf
lods
dec
mov
retf
adc
jne
retf
mov
scas
adc
mov
jle
jbe
into
dec
mov
mov
bnd
outs
cmp
(bad)
cli
ja
cmp
cmp
xor
lahf
sbb
lahf
leave
call
ds
ins
pop
cmc
dec
pop
lds
lahf
xchg
cs
dec
or
jne
and
loopne
adc
addr16
mov
push
mov
add
add
call
push
push
add
cmc
aam
test
(bad)
and
mov
and
test
out
push
push
jbe
cmp
xlat
cmps
push
mov
aas
(bad)
sbb
lods
mov
mov
xor
lods
or
nop
mov
ins
ja
jp
clc
into
dec
retf
or
shr
jle
inc
mov
and
mov
dec
xor
sbb
daa
scas
lahf
mov
sub
jmp
loop
fs
pop
xor
push
xchg
mov
ret
dec
retf
inc
mov
(bad)
movs
popa
in
jne
fadd
ficomp
dec
std
loop
inc
cwde
jecxz
out
jmp
or
pop
retf
adc
movs
cmps
outs
pop
mov
xor
pop
sbb
cli
dec
pop
add
mov
cli
dec
mov
mul
mov
ror
pop
stos
sbb
push
shl
iret
cmc
test
test
(bad)
push
je
pop
jle
sbb
adc
xchg
xor
adc
adc
cld
jl
cmps
xlat
cmps
push
fbld
mov
mov
jge
xlat
inc
and
xlat
cmp
pop
in
aad
jle
add
push
je
cmc
push
test
pop
mov
movs
js
icebp
out
jecxz
sbb
jae
mov
call
cs
mov
imul
cmp
xchg
cmp
out
jp
mov
(bad)
pusha
or
hlt
icebp
ret
(bad)
gs
add
mov
sbb
ror
jl
xor
xchg
stos
leave
ror
xchg
dec
cmp
or
push
mov
in
fidiv
or
xchg
xor
data16
pop
out
add
inc
cs
adc
js
sbb
add
das
mov
cmc
out
addr16
out
push
and
sub
xchg
mov
inc
cmp
inc
test
dec
dec
jb
iret
fld
loopne
loop
adc
arpl
xor
xlat
lahf
call
add
xchg
adc
xchg
out
add
neg
xchg
ins
sub
into
mov
add
(bad)
loop
jno
xlat
pop
les
xlat
xor
pop
inc
push
cmp
jl
mov
in
inc
(bad)
stos
dec
inc
pop
xor
add
cmps
adc
or
push
das
lods
cmps
push
sbb
stos
pop
mov
imul
daa
cmp
jp
sbb
aam
xchg
jge
mov
sbb
mov
push
jb
sub
mov
(bad)
xor
push
into
ins
mov
jp
cli
jae
call
jne
inc
(bad)
pop
rcr
add
or
stc
xchg
in
xlat
nop
mov
inc
sbb
test
cmp
ins
mov
in
iret
arpl
mov
sub
fnstsw
mov
fidiv
jo
jecxz
std
push
push
ret
mov
icebp
and
gs
inc
fnsave
jb
movs
sar
imul
xor
daa
clc
and
push
xchg
inc
and
nop
pop
or
inc
and
dec
ds
into
xor
cdq
ret
inc
rcl
inc
mov
cwde
jp
sahf
push
push
ffree
push
mov
(bad)
fwait
movs
std
jb
sbb
int
and
adc
(bad)
adc
cmc
inc
add
xchg
sub
popf
cmp
aam
ins
fmul
outs
retf
movs
xchg
mov
jb
dec
jne
loop
mov
sbb
mov
xchg
mov
in
sbb
leave
inc
sbb
dec
sahf
lea
call
int
rol
pop
popf
cmp
jl
or
stc
sbb
mov
fwait
loop
arpl
adc
pop
jns
ror
or
daa
loopne
pop
cmc
jae
leave
jb
sub
out
mov
add
mov
cmp
inc
fcom
ja
aad
jbe
push
fmul
xchg
dec
push
and
mov
push
xor
loop
popf
and
jecxz
xchg
inc
sti
pusha
in
addr16
ins
imul
and
dec
cld
cmp
pop
lock
(bad)
dec
sub
fistp
call
(bad)
cmp
call
add
inc
loope
xchg
xchg
test
out
mov
mov
push
mov
inc
sar
push
adc
dec
xchg
jne
mov
cwde
adc
push
jns
xor
mov
xchg
add
push
sar
int
ror
lods
dec
xchg
xchg
pop
inc
sbb
je
clc
into
pusha
mov
leave
push
sahf
movs
pushf
mov
mov
fstp
mov
cmp
mov
add
pop
out
push
shl
test
mov
imul
pop
scas
mov
cmps
adc
hlt
daa
jnp
dec
enter
std
into
pop
push
cmp
in
dec
hlt
shl
cmp
xor
sbb
jo
bound
or
cmp
xor
pushf
enter
scas
jle
sbb
jmp
jg
cmp
pop
test
mov
pop
pop
scas
ins
jmp
dec
sbb
retf
push
sub
adc
cs
push
and
dec
dec
add
mov
scas
stos
in
dec
add
jo
xor
mov
(bad)
mov
ds
jle
pop
enter
jl
and
imul
adc
into
sub
cmps
cli
pop
dec
lods
lods
aad
sbb
sar
xor
ficom
adc
and
jae
pop
stos
or
adc
jge
and
in
add
fild
mov
es
pop
adc
outs
sbb
fisub
rcl
adc
sub
pushf
and
push
out
dec
push
aas
and
jno
(bad)
and
mov
(bad)
jmp
shl
add
stc
aaa
xchg
push
jle
mov
xor
lods
fcom
mov
pop
mov
dec
ins
std
cmc
clc
invd
push
iret
loope
mov
lods
sub
mov
call
sub
jp
mov
mov
push
ror
inc
mov
lahf
push
rcl
dec
(bad)
sub
add
xchg
repnz
popf
push
add
es
imul
push
mov
outs
jae
aad
fidiv
dec
push
sub
mov
scas
loop
mov
cmp
xchg
sbb
add
fst
loopne
and
jecxz
dec
add
scas
scas
(bad)
cmp
jg
out
in
cmp
cmp
or
arpl
mov
lock
or
outs
dec
and
stos
cld
push
inc
pop
popf
std
cwde
lahf
dec
jbe
or
inc
push
inc
lock
fucomip
xchg
jo
push
mov
push
aam
fcom
xor
sbb
lods
add
frstor
test
or
pop
mov
aad
and
inc
sbb
lahf
inc
sbb
lds
xchg
std
sub
xlat
add
dec
mov
push
adc
aam
jge
ds
add
jmp
cmp
ins
ss
cmp
ret
push
push
dec
pop
cmps
jl
pop
inc
push
cmc
test
in
jnp
je
out
mov
xor
imul
jg
adc
leave
test
maxps
div
dec
popf
xchg
or
push
push
or
out
sahf
xor
or
xchg
cmp
mov
neg
cmp
leave
jno
test
push
lods
retf
(bad)
xor
cmps
stos
lock
pop
enter
loopne
div
xchg
std
imul
mov
dec
lods
mov
or
mov
mov
add
pop
sbb
int3
push
test
sbb
lea
fiadd
inc
inc
repnz
jns
pop
dec
in
inc
jp
adc
inc
or
and
or
movs
icebp
call
jnp
fimul
mov
sar
test
bnd
mov
jg
cs
jne
pusha
(bad)
loop
leave
ret
cs
mov
sub
aas
popf
outs
cmps
inc
mov
mov
xor
jge
ins
add
dec
push
or
pop
xor
(bad)
cmps
xor
and
mov
sbb
mov
aas
out
or
in
out
aas
scas
retf
lds
ds
pop
repnz
js
pusha
push
or
add
movs
jle
daa
adc
or
outs
test
inc
pop
add
into
sub
or
ss
out
cmp
test
clc
mov
sbb
jmp
xchg
stos
xchg
out
xor
into
movs
addr16
inc
shr
nop
xchg
lds
retf
inc
jecxz
pop
stc
shl
in
jecxz
or
out
mov
xor
mov
xor
ffree
sti
xor
pand
fcomp
cmps
mov
sbb
pop
dec
jl
jle
ss
or
into
leave
jg
add
nop
cmc
add
mov
push
mov
(bad)
sbb
mov
test
jg
xor
fwait
push
mov
sub
adc
outs
and
jg
mov
loop
sbb
dec
mov
test
(bad)
adc
xchg
mov
mov
cdq
gs
cmps
and
scas
push
mov
adc
fisttp
dec
ins
rol
sub
dec
pop
xor
popa
dec
cmp
das
mov
mov
ja
sbb
sbb
jp
sub
sub
xchg
adc
jp
bound
push
cld
mov
mov
push
push
loopne
and
cmps
sbb
push
adc
jbe
fdivrp
dec
mov
dec
and
sbb
cs
push
lods
fwait
es
aaa
fisttp
ror
(bad)
sbb
add
loopne
(bad)
adc
inc
ret
jle
pop
jl
and
jns
hlt
repnz
aam
loopne
xor
and
xchg
ret
mov
pushf
jle
add
ins
mov
sahf
cli
xchg
mov
adc
cmps
(bad)
cli
inc
jae
(bad)
bound
xchg
outs
rol
movs
dec
ss
pop
cmp
(bad)
lods
sahf
pop
call
ficomp
imul
and
and
jle
dec
and
icebp
bnd
push
adc
dec
cmp
jmp
push
sbb
in
addr16
std
and
sti
iret
xor
and
nop
add
mov
into
cld
shl
sub
xor
fstp
pushf
dec
push
int
mov
sbb
pop
retf
mul
ret
mov
nop
and
aam
cld
stos
loop
cmps
mov
sub
sti
or
sbb
lock
jecxz
icebp
mov
pushf
imul
repnz
adc
push
lods
dec
and
daa
fsubr
shr
cmc
out
ja
jecxz
push
aas
xor
or
popf
fld
xchg
mov
sbb
sbb
add
push
xchg
mov
in
or
leave
mul
aad
fmul
(bad)
mov
shr
in
hlt
retf
(bad)
push
sti
cmp
mov
dec
pushf
push
retf
xchg
repz
jge
(bad)
fmul
cmp
mov
je
mov
fimul
int
sbb
or
inc
push
or
mov
add
cli
in
and
out
push
cmp
mov
xchg
int3
out
mov
lahf
push
jo
mov
es
cdq
add
leave
stos
aad
fidivr
call
cmp
daa
push
or
sbb
and
push
mov
test
dec
mov
pop
push
(bad)
mov
popa
mov
sbb
add
pop
movs
jb
sub
inc
or
scas
dec
imul
lods
inc
ret
xlat
imul
xchg
cmps
adc
jbe
ror
stc
xchg
adc
cmp
jp
or
es
lds
jnp
outs
rcr
xchg
mov
mov
xchg
mov
or
loopne
ret
xchg
or
mov
in
iret
mov
imul
xchg
bound
push
neg
(bad)
jecxz
(bad)
mov
push
xor
adc
mov
mov
aas
test
inc
sbb
shr
mov
dec
mov
mov
cmp
daa
adc
xor
fs
xor
and
xchg
mov
das
scas
fst
inc
inc
add
out
add
xchg
add
push
or
fiadd
pop
cdq
das
mov
mov
fnsave
jae
bound
addr16
mov
inc
jmp
sub
sub
pop
call
xchg
push
es
cmp
jne
mov
mov
xchg
xchg
movs
mov
lea
bndstx
stos
or
aam
lds
fcmovb
ja
or
in
mov
pushf
pop
aas
(bad)
test
sbb
movs
movs
mov
jmp
or
icebp
mov
or
movs
jbe
int3
lock
add
test
retf
loopne
inc
fnstsw
push
push
jae
push
cmp
jne
sub
in
lods
adc
dec
mov
jno
inc
(bad)
daa
mov
enter
mov
xchg
or
push
mov
outs
mov
adc
fs
daa
mov
mov
xchg
cmp
cmps
iret
mov
push
mov
pop
push
mov
push
hlt
sub
xchg
pop
cmp
add
(bad)
cld
dec
xchg
mul
or
mov
and
adc
cmp
sbb
fiadd
(bad)
mov
xchg
(bad)
clc
div
popf
inc
std
dec
outs
cmps
(bad)
mov
push
jmp
sbb
mov
dec
les
sbb
xchg
shr
ja
cdq
xor
mov
in
call
pop
xlat
in
in
xchg
dec
das
pop
and
adc
lea
popf
mov
push
sbb
arpl
adc
push
and
or
mov
pusha
jo
sub
pop
mov
jecxz
daa
xlat
jb
jnp
pop
stos
jp
jle
pop
sbb
xor
mov
scas
push
aas
pusha
ins
or
mov
or
(bad)
std
arpl
mov
loopne
lea
mov
out
test
xchg
push
pop
aam
test
dec
mov
jg
jg
jnp
sub
cmp
sbb
mov
push
sbb
es
fst
mov
xchg
call
ins
or
sub
test
inc
ss
daa
xchg
or
leave
nop
shr
test
repnz
sti
shl
xchg
jl
or
pop
add
lahf
addr16
int
cdq
pop
std
or
lods
pop
jns
sub
sub
push
loope
fcom
cmp
lahf
mov
sub
sub
dec
mov
call
mov
xlat
jnp
dec
push
outs
(bad)
cld
bound
cmp
mov
out
shr
jge
mov
mov
mov
mov
leave
xor
mov
add
sbb
inc
aas
adc
lock
jmp
push
add
mov
std
mov
xchg
pop
push
push
shr
jl
jecxz
or
inc
cmc
inc
dec
pop
fdivr
out
lds
xchg
cmp
ja
push
cld
je
pop
ss
aas
mov
in
push
and
or
xor
jo
cmc
loopne
icebp
mov
rol
fcomp
js
sub
jne
xor
call
sbb
adc
ret
mov
ret
retf
jle
cmp
jnp
in
(bad)
sar
loopne
jge
cmps
(bad)
cmp
iret
fnstcw
loopne
call
in
pop
cmps
pop
xchg
push
(bad)
mov
sub
in
loope
fs
in
jne
xchg
sbb
sub
(bad)
or
cld
push
mov
dec
and
pop
(bad)
cli
xchg
inc
add
daa
push
shl
mov
std
rcr
sbb
(bad)
imul
xor
call
lea
mov
arpl
push
outs
sub
(bad)
cmps
cwde
push
cmps
sbb
fcomp
xchg
outs
push
out
neg
pop
imul
xor
in
mov
dec
icebp
shl
xor
xor
neg
popa
push
iret
cli
stos
pop
and
and
dec
mov
imul
(bad)
mov
mov
int3
pop
cmps
or
pushf
repnz
cmp
push
ror
fnsave
ja
lock
inc
gs
mov
outs
sbb
xchg
and
and
pop
or
std
pushf
mov
cmps
icebp
dec
jp
imul
xor
pusha
cs
jmp
movs
ss
jmp
xchg
jae
cld
jg
retf
retf
push
jne
dec
in
mov
add
push
mov
out
nop
fild
mov
jmp
pop
pop
add
mov
jae
pop
repz
inc
adc
mov
out
aam
pop
ds
mov
jle
xlat
mov
dec
mov
test
jae
fcom
hlt
(bad)
test
dec
inc
pushf
xchg
inc
cld
inc
es
and
add
pusha
mov
cmc
lea
lods
mov
fidivr
ret
jbe
ror
call
in
fld
xor
dec
jno
jmp
test
cdq
call
jmp
mov
push
stos
inc
inc
ds
cmp
pusha
inc
xor
push
call
loopne
out
mov
neg
mov
sti
test
xacquire
popw
jl
ds
stos
fild
mov
test
in
add
out
clc
loop
or
jo
jnp
mov
es
lahf
xchg
add
es
out
lods
mov
sub
imul
pop
in
mov
dec
bound
and
dec
dec
jp
loop
outs
sbb
adc
out
push
lea
nop
ins
mov
add
sbb
lea
ja
call
jo
daa
dec
fnstsw
scas
sar
inc
dec
cmp
std
lahf
push
mov
jnp
add
jnp
loope
mov
ins
push
mov
jo
dec
aam
pop
mov
push
pop
scas
dec
in
aad
push
out
(bad)
jg
xor
push
and
pop
mov
mov
in
jmp
shr
aaa
sub
scas
rcr
cmp
inc
add
sbb
cli
push
shl
aas
dec
inc
pop
stos
stc
sbb
jle
fnstenv
xchg
adc
mov
cs
or
inc
adc
ds
sub
xchg
fwait
jbe
add
ins
xchg
xlat
push
sub
shl
ja
cmp
mov
dec
sbb
xchg
arpl
lods
scas
dec
stos
jbe
fs
test
lock
sbb
into
std
xor
aaa
push
dec
movs
push
mov
mov
inc
addr16
pop
mov
lods
mov
in
ficomp
ss
sub
sub
std
or
add
(bad)
aam
push
repnz
cs
rcr
xchg
and
loopne
(bad)
dec
jb
in
(bad)
sbb
dec
sahf
imul
popf
fldcw
jmp
adc
add
mov
call
adc
pop
mov
stc
(bad)
dec
mul
and
in
or
or
shl
dec
outs
sub
in
push
sub
iret
mov
scas
(bad)
sti
pop
jg
jmp
(bad)
sub
test
jmp
adc
test
outs
popa
or
xor
xchg
movs
pop
dec
xchg
or
push
xchg
(bad)
xor
pusha
mov
push
ficom
push
push
jae
cmps
push
push
fwait
popa
cdq
jecxz
adc
sbb
jp
scas
hlt
add
ret
add
pusha
add
xchg
hlt
and
push
retf
push
ret
movs
xchg
cs
in
inc
nop
or
and
or
jo
xchg
repnz
adc
sub
cmp
jl
fiadd
cmp
push
push
sti
fs
sbb
xchg
or
jge
or
das
xor
cmp
or
xor
mov
shr
jle
jl
jae
add
fisub
mov
adc
pop
xor
jns
(bad)
ds
and
push
ficomp
xlat
hlt
jmp
sub
das
popf
mov
pop
mov
sub
test
cmp
mov
sub
pop
sahf
mov
sbb
neg
adc
jnp
sub
outs
out
inc
ss
sbb
(bad)
adc
movs
push
movs
mov
xchg
sbb
jmp
pop
mov
scas
pusha
dec
sbb
dec
pop
(bad)
clc
out
pop
push
mov
in
lods
cmp
popa
test
inc
cld
pop
addr16
xchg
lock
pop
ins
and
pop
scas
out
mov
mov
mov
pop
addr16
sbb
mov
xchg
in
inc
sbb
push
add
fdiv
bound
adc
arpl
add
inc
iret
shr
cmp
das
jg
mov
fcomp
pextrw
sbb
adc
and
ds
add
pop
rcl
push
and
ins
aam
xchg
sahf
popf
popa
retf
xor
das
outs
adc
(bad)
ret
pop
sbb
popa
shr
add
jno
call
cli
test
out
ins
stos
js
push
not
lds
bnd
jno
aas
outs
jecxz
sub
aam
cmp
pop
ret
inc
xchg
stc
cmp
out
jno
and
arpl
mov
aas
lods
pusha
dec
mov
push
push
test
push
xchg
push
pushf
aad
sub
jg
or
fst
jo
data16
lds
inc
push
aas
test
mov
sub
xor
push
push
pusha
aam
xchg
dec
test
or
pushf
mov
cld
add
and
aaa
add
fisttp
js
mov
outs
xor
inc
lea
mov
mov
dec
retf
fcomp
inc
call
fsub
ins
xor
xor
arpl
pop
into
mov
sub
inc
lds
(bad)
(bad)
pop
pop
and
cmp
inc
loop
loopne
dec
sbb
fmul
adc
ss
std
or
out
xor
mov
nop
mov
shl
xor
push
sbb
mov
jo
mov
push
stc
inc
scas
mov
sbb
mov
mov
test
sbb
fdivr
add
dec
add
or
xchg
xchg
dec
cdq
dec
mov
jl
retf
lods
xchg
mov
data16
retf
push
inc
scas
and
xor
pop
(bad)
ss
inc
mov
adc
xor
dec
mov
or
call
cld
movs
push
fsub
dec
sar
int
sbb
inc
pop
loop
jo
push
repnz
push
cwde
mov
jmp
(bad)
mov
fsub
push
inc
int
(bad)
stos
adc
inc
mov
pop
jp
arpl
out
sti
xchg
in
pop
jbe
sub
and
mov
sbb
add
cwde
dec
push
(bad)
mul
pop
cmps
jge
mov
scas
(bad)
mov
pop
sbb
sub
ins
nop
and
add
sbb
iret
sub
push
or
push
pushf
pop
adc
push
test
neg
xchg
xchg
sub
(bad)
add
(bad)
leave
hlt
push
ror
cwde
mov
jge
ds
pop
cwde
add
cmps
add
lods
cmp
repnz
scas
clc
std
outs
sbb
cmp
xor
push
sbb
inc
cmps
out
lods
pop
jae
push
je
or
xlat
imul
rol
je
pop
mov
add
popf
adc
scas
daa
into
lea
cwde
mov
push
sbb
retf
xchg
rcl
ffreep
dec
leave
cmp
add
mov
mov
add
inc
push
push
cmp
rcr
adc
push
movs
sbb
neg
int
cmp
pop
mov
and
aas
jge
inc
shr
push
imul
call
adc
sbb
mul
or
mov
adc
call
sub
add
jecxz
and
mov
cmc
bound
fs
jmp
movs
ret
fcmovnu
repz
sub
rcr
push
adc
es
sub
(bad)
icebp
or
sar
(bad)
stos
es
cld
test
xchg
mov
shl
pushf
shl
daa
pop
xchg
jp
nop
mov
sub
lods
int
js
stc
popa
sub
call
jno
fiadd
pop
aaa
repnz
xor
add
ss
push
int
dec
out
xor
outs
ins
iret
aas
shl
adc
pop
adc
push
inc
int3
sbb
and
popa
push
jecxz
jae
outs
dec
imul
dec
add
and
addr16
xor
jb
sub
ret
dec
jbe
cmp
xchg
mov
cld
jle
add
retf
ret
stos
ins
not
in
enter
add
jo
sub
mov
jb
aad
sbb
arpl
sti
in
sub
stc
and
xchg
adc
scas
jge
xor
or
sti
inc
enter
call
test
mov
sbb
dec
push
mov
jle
inc
inc
retf
push
and
shr
or
(bad)
mov
test
pop
and
aad
fistp
dec
stos
loop
inc
aaa
int
ins
cmp
out
xor
fisttp
mov
ficom
push
jg
mov
sbb
mov
mov
(bad)
sahf
pop
outs
push
ja
int
push
daa
sub
xor
pop
and
retf
dec
pop
xchg
jns
mov
imul
or
in
mov
lea
inc
bound
in
dec
ins
mov
add
ret
pop
movs
sub
mov
mov
fnstenvw
test
add
xchg
sbb
clc
and
leave
pop
aad
mov
out
pop
push
jae
daa
xchg
outs
js
(bad)
or
cwde
je
fcom
loopne
xor
adc
mov
sub
cmp
fst
xchg
(bad)
jl
push
mov
ja
mov
pop
push
xchg
cmps
daa
push
pop
push
cdq
in
sbb
aaa
aaa
daa
das
or
lea
push
and
cmc
lods
cmp
retf
fucomi
push
sbb
rol
sub
add
push
push
jae
lods
fld
jb
lds
xor
sbb
stc
sti
cwde
mov
test
movs
daa
adc
movq
or
push
adc
cmp
in
repnz
xchg
sub
lds
inc
jb
mov
ret
jns
sub
jl
mov
mov
mov
enter
ficom
(bad)
xchg
lods
hlt
fnstcw
push
push
jae
jbe
shr
adc
pop
out
mov
pushf
ret
and
into
xchg
cld
imul
cli
adc
pop
aad
lds
cld
xor
xor
cmps
adc
or
cmp
mov
je
popf
or
jl
xor
js
xchg
sub
aaa
sub
rol
repz
loop
fcomp
rcr
fidivr
sub
pop
stos
pop
aaa
adc
add
mov
or
sub
nop
dec
retf
xor
add
adc
loop
jbe
dec
leave
sub
mov
bound
push
das
and
rol
pushf
mov
or
pop
jmp
das
stos
fs
push
imul
sub
cmp
fdivr
bound
add
mov
fidiv
test
test
je
adc
jmp
dec
mov
arpl
(bad)
imul
adc
dec
(bad)
xor
push
js
test
(bad)
(bad)
cmp
cmps
push
sub
sbb
jl
add
jmp
mov
sahf
retf
dec
rcl
add
test
dec
push
push
fidivr
aam
mov
cmp
loop
add
mov
div
inc
pop
nop
push
inc
loope
mov
repz
or
mov
xor
sar
cmp
mov
ss
dec
aas
movs
or
out
sahf
in
nop
neg
into
sub
outs
cmp
rcr
(bad)
xor
xchg
or
(bad)
std
or
stos
mov
lock
adc
push
jle
je
stos
dec
scas
fld
cmp
jno
nop
mov
hlt
fwait
mov
pop
pop
sbb
lods
xor
mov
data16
popf
xchg
ss
enter
push
mov
xchg
cwde
popa
and
lea
movs
pop
aas
jg
out
xor
movsx
pop
add
mov
call
mov
in
leave
jo
mov
mov
add
xchg
mov
adc
push
sbb
pop
sub
(bad)
icebp
add
ins
pushf
push
(bad)
jae
ror
push
data16
jp
xor
dec
cmp
test
aad
enter
loope
cmp
les
scas
ins
cmp
sub
sbb
ss
rcr
push
imul
pop
adc
push
pop
jmp
cdq
shl
inc
fidiv
sub
push
pop
inc
repz
jnp
xor
nop
mov
jg
mov
js
push
xchg
arpl
test
dec
jle
and
les
dec
cs
cmp
sbb
jb
(bad)
gs
test
jecxz
aam
sbb
call
cmp
loope
jmp
mov
sbb
cdq
xor
test
in
sub
mov
push
jae
cmp
pop
adc
mov
hlt
mov
mov
retf
iret
xchg
adc
bound
mov
mov
xor
jnp
pop
sar
mov
int
lds
out
fadd
scas
mov
pop
add
sub
sbb
adc
mov
xor
inc
cmps
loop
push
dec
and
dec
pop
ret
cmp
pop
test
mov
ins
cmp
adc
lock
ss
dec
inc
jmp
xlat
out
adc
or
in
xor
adc
icebp
or
fs
mov
adc
cdq
cli
test
lahf
(bad)
dec
jb
add
mov
inc
sbb
dec
sbb
jne
rcl
sahf
jb
cmps
sub
jmp
bound
cli
jl
repnz
add
jmp
retf
std
push
push
cwde
in
sbb
add
mov
outs
push
push
jb
lock
push
(bad)
xlat
fadd
fild
test
jl
cld
imul
lahf
pop
cs
das
out
mul
sahf
rcl
mov
jecxz
ins
mov
out
lods
and
push
jmp
push
sub
pop
daa
(bad)
sar
mov
in
jo
cmp
add
outs
mov
rcr
adc
or
or
sub
mov
or
es
jbe
sub
adc
imul
pusha
ds
je
std
loope
mov
(bad)
lea
xchg
mov
stos
inc
bound
dec
sub
cmps
retf
jge
retf
and
std
out
add
std
mov
(bad)
push
and
fbstp
in
shr
or
lea
retf
inc
adc
and
push
ss
push
out
jne
bound
data16
out
xlat
push
cli
jns
test
push
fucom
sbb
(bad)
mov
div
xchg
mov
and
(bad)
dec
call
int3
loop
jo
mov
cmp
inc
dec
dec
dec
aaa
int3
inc
ret
and
hlt
adc
pusha
idiv
into
xor
adc
push
lds
and
mov
push
call
sub
loop
xchg
retf
adc
(bad)
sub
add
lds
into
cld
jo
xchg
pop
pusha
les
into
and
adc
pop
div
and
ret
hlt
sbb
adc
add
call
pusha
lea
in
add
sbb
lods
clc
fbld
je
sbb
sub
cmp
xchg
rcl
addr16
pop
dec
cmp
inc
mov
dec
cli
add
imul
idiv
dec
retf
loope
add
pop
push
xor
adc
jge
stc
fwait
inc
push
mov
mov
xor
out
aas
jle
xchg
fsubr
or
jmp
xchg
mov
pop
mov
out
jbe
pushf
xor
cwde
cdq
and
icebp
je
outs
xchg
xchg
lods
push
pushf
into
jg
pop
mov
daa
ror
(bad)
gs
adc
cld
xor
fmul
mov
sub
mov
cmps
xchg
inc
mov
jmp
popf
mov
pop
xor
jmp
out
push
das
push
push
movs
mov
push
mov
or
pop
test
adc
(bad)
inc
loope
inc
das
sub
xor
scas
ins
jecxz
push
mov
mov
fistp
add
aad
out
cli
daa
cwde
movs
out
ret
and
repz
mul
xchg
aad
loope
and
shr
push
ins
dec
call
movs
fld
sub
sbb
popf
ret
pop
ins
mov
mov
movs
in
mov
adc
mov
pop
ds
inc
rcr
mov
add
in
shl
shl
sahf
mov
jo
inc
out
imul
jbe
cmp
add
cmp
inc
or
mov
fld
sub
jmp
mov
ins
mov
mov
and
pop
sub
cmp
xchg
push
test
iret
inc
xchg
jno
jb
push
je
push
add
les
xor
shl
out
pop
mov
out
mov
add
in
mov
and
repz
inc
clc
sub
and
imul
xor
out
call
cmp
arpl
fsubr
sar
fstp
push
and
clc
inc
pop
daa
in
test
mov
xchg
xchg
lock
pop
cmp
mov
sub
xchg
(bad)
jmp
mov
bound
inc
push
addr16
jecxz
lods
lea
cs
cmp
adc
daa
cmp
fbld
test
pop
jno
out
ret
sahf
jmp
lahf
imul
pop
(bad)
repnz
das
loope
cdq
adc
movs
xchg
test
(bad)
push
cmp
mov
sbb
fcmovnbe
ret
and
jp
jmp
cmp
ror
out
lahf
sbb
adc
scas
xchg
jmp
in
dec
popf
call
cwde
mov
jae
fwait
inc
pusha
mov
out
arpl
popa
cmp
nop
ret
xchg
or
dec
movs
ss
mov
cmp
push
cmp
cmp
lods
(bad)
icebp
dec
fcomi
int
fldenv
sbb
xor
test
jnp
mov
out
cmp
sub
or
aam
pop
iret
sbb
mov
test
daa
stc
leave
sub
call
mov
lods
es
jb
push
mov
inc
outs
sub
aas
pop
cmp
adc
pop
mov
mov
inc
mov
pusha
nop
inc
jge
imul
test
test
mov
les
xchg
add
push
add
xor
inc
sahf
fwait
xor
pop
fxch
jmp
xchg
fisub
sbb
jmp
cmp
lds
fcom
dec
xor
outs
in
and
push
add
mov
inc
lea
xor
repz
xchg
int
xchg
retf
mov
add
hlt
out
imul
cmps
mov
shl
push
mov
jg
push
add
je
inc
lds
stos
arpl
push
mov
call
xlat
outs
pop
jo
and
jbe
ret
fisubr
adc
xchg
and
and
in
mov
adc
icebp
add
jmp
clc
add
xchg
pop
mov
mov
es
xor
xchg
jle
out
xor
push
jg
out
push
movs
sbb
aas
add
ret
mov
ror
jae
push
adc
imul
(bad)
aam
mov
out
dec
inc
test
das
cld
retf
pop
push
out
repz
ins
xchg
(bad)
aaa
adc
pop
adc
lock
ins
push
scas
jne
ja
imul
mov
or
gs
sub
push
jbe
jl
sbb
push
shr
pop
out
ins
aad
gs
cmps
sub
mov
and
call
lds
icebp
mov
xor
cmp
xchg
add
fld
jo
pop
xor
xor
mov
inc
and
(bad)
adc
mov
(bad)
icebp
xchg
nop
pop
aad
jecxz
mov
mov
scas
push
mov
and
repz
and
stos
div
int3
ret
cwde
jmp
dec
scas
adc
sub
push
int3
cwde
in
xor
inc
add
mov
push
sti
test
in
aad
add
imul
cmp
pop
dec
lock
shl
inc
int
cmp
out
ins
popa
sbb
mov
mov
and
leave
cmc
fdiv
std
push
xor
(bad)
(bad)
push
(bad)
outs
jle
movs
adc
push
scas
push
and
fstp
ins
test
cli
or
sbb
jo
push
aas
lock
shl
pop
loope
xchg
or
ret
and
and
add
call
mov
mov
loope
call
push
push
rcr
push
(bad)
call
imul
out
sub
sub
cmp
xchg
mov
or
fmulp
sbb
test
jmp
jge
push
in
outs
rol
pop
aaa
jbe
mov
in
inc
stos
je
sub
inc
call
pusha
call
xor
jne
dec
in
popa
xchg
mov
inc
mov
retf
xchg
rcl
fadd
aad
pop
pop
aaa
xlat
movs
arpl
lods
outs
aad
cmps
add
jmp
test
popf
cs
sbb
and
sbb
in
push
in
pop
cmp
rol
pop
test
rcl
add
leave
adc
sub
enter
lock
dec
das
aam
test
jnp
movs
loop
retf
lahf
cmp
xor
and
sti
(bad)
leave
cmp
mov
inc
hlt
xchg
and
sbb
push
push
push
push
cdq
cmp
sbb
loope
ret
repz
or
dec
in
outs
out
sub
xchg
inc
lock
pop
pop
push
stc
cdq
dec
das
pop
jae
fnstenv
lahf
or
jmp
retf
loopne
ds
fsub
ret
push
lea
sub
pop
xlat
retf
pop
out
(bad)
popa
sub
in
fisttp
sub
outs
out
std
test
push
stos
sub
mov
cmp
jno
fsubr
inc
inc
fld
jb
aas
pushf
in
nop
repnz
or
sub
fst
icebp
rcl
repz
cmp
push
jo
inc
sar
idiv
fidiv
inc
mov
cmp
ud0
sub
jmp
push
pop
adc
jbe
data16
fs
push
pop
mov
or
or
daa
movs
pop
or
outs
inc
and
jb
mov
and
sub
mov
mov
imul
cdq
jecxz
lea
cmps
stc
inc
jo
adc
aas
add
mov
jae
in
mov
js
out
imul
fld
js
retf
and
std
adc
test
das
(bad)
iret
mov
stos
xor
mov
add
es
adc
push
xlat
jg
repz
sti
ins
and
cmps
sahf
jg
shr
dec
push
and
jns
nop
pop
lock
or
xchg
in
call
lods
movs
adc
sbb
repnz
pop
xor
pop
test
test
xor
or
movs
mov
repnz
imul
in
mov
lea
xlat
fwait
iret
sbb
stos
inc
pop
lods
mov
mov
mov
dec
cmps
(bad)
and
mov
mov
pop
sbb
int
ins
repz
out
add
jmp
push
cmps
leave
(bad)
jmp
fstp
out
push
ret
repz
dec
test
test
inc
and
add
push
push
out
mov
and
test
lahf
cmps
imul
popa
push
sub
int
and
xchg
outs
and
dec
push
mov
pop
enter
jbe
test
out
inc
mov
jle
xchg
ss
lea
pop
cmps
in
nop
retf
xchg
cmc
jg
dec
sub
mov
adc
sub
sbb
dec
jl
and
pop
push
movs
movs
push
mov
dec
push
in
and
sbb
jbe
jl
retf
sbb
add
cld
mov
add
mov
jge
pop
leave
adc
test
clc
das
jnp
jge
outs
daa
mov
jmp
mov
fwait
cmps
cmps
(bad)
sbb
stos
mov
int
js
int3
(bad)
dec
hlt
rcr
xchg
(bad)
or
push
enter
xlat
das
pop
fdiv
inc
loope
daa
ret
outs
push
call
ins
cwde
cwde
shl
stos
pusha
popf
push
xor
dec
pop
xchg
inc
add
fs
inc
test
leave
sar
push
lods
dec
loop
push
hlt
cmps
mov
xor
jmp
dec
mov
(bad)
stos
imul
sub
mov
(bad)
and
cmc
icebp
jmp
and
movs
nop
lds
inc
sahf
jno
out
and
sti
jb
shr
aaa
pminub
cmp
jl
outs
fisttp
shr
and
ins
add
popf
js
in
shl
loop
test
es
lds
push
ins
cmp
(bad)
cli
fimul
pop
(bad)
adc
pop
push
movs
stc
cmp
sbb
xchg
(bad)
loopne
lods
popa
mov
outs
jmp
sub
inc
fnstsw
aaa
sub
push
add
test
cmp
mov
xchg
pop
int3
or
test
imul
int
jge
out
int3
and
mov
jne
jg
test
dec
ins
xchg
cmc
and
retf
bound
mul
cmps
inc
pop
pop
daa
sahf
sbb
jns
push
mov
push
add
push
rcl
clc
xor
mov
lahf
outs
adc
mov
outs
retf
push
aaa
imul
repz
sahf
out
jno
mov
lock
sub
xor
jns
jmp
pop
loop
fndisi(8087
mov
jno
mov
or
xor
cmp
aam
stos
fucomp
in
idiv
in
imul
pop
fs
(bad)
pop
bound
rcl
in
jns
cmc
inc
addr16
(bad)
je
pop
into
ins
lahf
xchg
jecxz
add
ss
mov
sti
mov
sub
nop
outs
lods
cmps
adc
and
lods
add
mov
sub
bswap
push
and
js
pop
nop
pop
ret
imul
mov
push
div
mov
xchg
enter
jmp
inc
jecxz
xor
das
pop
xchg
cmps
outs
lds
ds
push
inc
das
sub
loop
jle
movs
pop
clc
test
and
jl
jne
xlat
xchg
mov
fisttp
sub
shl
pop
retf
xchg
ret
fcomp
mov
sub
ins
imul
test
(bad)
mov
jne
loop
cdq
push
sub
pusha
mov
xor
and
mov
sar
in
shl
lds
lods
call
fisub
cmp
aad
fnsave
mov
gs
fs
push
(bad)
leave
add
lods
pop
enter
ds
jae
and
out
es
pop
sar
mov
(bad)
std
inc
dec
imul
sahf
popf
sbb
pusha
mov
xchg
arpl
cmps
mov
jne
imul
dec
pop
loope
pop
iret
cmps
xchg
cmp
pop
dec
fadd
pop
xor
pop
cmp
sbb
daa
inc
mov
push
xor
iret
dec
int3
push
cmps
dec
fs
not
rcr
in
inc
and
push
pop
mov
jbe
call
ds
iret
data16
xchg
adc
push
retf
mov
inc
jae
xchg
add
dec
je
imul
mov
xchg
mov
fadd
dec
push
sbb
out
pop
mov
repnz
jg
cmp
rcl
jbe
dec
push
fisubr
jno
inc
adc
xchg
ficomp
in
sti
lds
scas
add
aam
outs
mov
fst
clc
xchg
sub
clc
mov
int
gs
sbb
ds
pop
mov
cli
inc
mov
cli
pop
icebp
inc
cmps
or
lods
clc
or
mov
xor
out
dec
pushf
jmp
mov
loopne
(bad)
pop
das
adc
or
xchg
ret
adc
cld
stos
icebp
cld
call
int
rcr
mov
cmp
or
stos
push
sbb
ret
sub
loope
nop
cmp
test
cmps
sub
nop
adc
mov
adc
add
shl
push
inc
test
jno
mov
and
lods
and
add
sbb
jmp
ret
ret
ret
(bad)
mov
ret
push
xchg
pop
adc
imul
sbb
xor
pop
sbb
mov
or
pop
dec
mov
fsub
sbb
push
jg
mov
adc
les
ret
movs
mov
dec
sahf
sub
mov
mov
dec
enter
mov
cwde
push
sub
enter
cmps
or
ja
je
adc
in
push
sub
out
repz
and
xor
jle
mov
xchg
push
stc
cli
pop
ret
adc
mov
push
outs
push
cmp
or
lea
ds
jns
fbld
repz
test
and
mov
imul
stos
sbb
gs
mov
das
ret
imul
les
or
add
es
scas
cmp
test
mov
xchg
mov
mov
push
jmp
xchg
push
cmp
jae
push
mov
lods
sar
cmp
push
cmc
fisub
cmp
pop
mov
mul
add
xor
test
jne
sub
and
stos
cmp
jle
xor
jnp
and
jns
nop
inc
mov
fst
jnp
mov
fldenv
xor
pop
mov
sub
cmc
outs
cwde
aas
adc
(bad)
jecxz
loop
mov
add
js
pushf
cmps
pusha
aas
adc
and
sub
xor
idiv
addr16
stos
outs
add
mov
push
jno
push
push
jmp
mov
ret
pop
push
push
push
mov
mov
cld
dec
jbe
jb
jmp
sub
mov
and
jb
sub
aaa
cmps
(bad)
cmps
jns
cli
fisttp
scas
jb
scas
pop
pop
ror
fidiv
aam
xchg
popf
mov
mov
jl
jno
outs
and
pop
sbb
in
das
or
xor
and
retf
cs
mov
jge
lds
mov
inc
fs
and
cwde
xchg
push
sbb
out
hlt
lock
call
mov
jmp
xor
(bad)
test
push
js
out
leave
jge
into
in
inc
movs
cs
sub
test
scas
inc
je
cmp
cld
test
add
add
repnz
jns
mov
or
inc
mov
cld
shl
je
mov
scas
jge
mov
ins
pop
pmaxub
scas
(bad)
mov
dec
repnz
xchg
pop
jmp
sti
mov
out
inc
cdq
sti
mov
movs
rdtsc
inc
jmp
xchg
out
push
inc
pop
imul
pop
mov
pop
mov
stos
push
xchg
arpl
push
and
(bad)
fimul
mov
push
pop
sbb
sbb
(bad)
cmp
cs
sub
repz
sub
daa
repz
ss
inc
mov
or
movs
stos
icebp
outs
rol
lods
in
or
jne
movs
pop
rcl
fs
mov
sbb
cmp
std
sbb
(bad)
in
das
imul
dec
cmc
pop
dec
jl
sbb
fild
mov
push
pop
out
mov
iret
or
push
in
and
pop
js
xor
mov
int
cli
dec
sub
(bad)
ins
dec
adc
into
bnd
popf
gs
stos
test
pop
sub
jp
(bad)
xor
mov
push
(bad)
loop
sbb
push
or
fcomip
add
mov
mov
jp
adc
(bad)
pop
outs
push
cmc
sub
mov
lods
nop
(bad)
pop
in
jmp
and
jns
or
in
xchg
aad
les
pop
lahf
jno
(bad)
xchg
cmovp
cdq
xchg
jle
add
fbstp
mov
sub
inc
dec
test
jno
or
cmp
mov
pop
push
arpl
dec
and
xor
push
xchg
jo
mov
sahf
sbb
sbb
or
in
in
add
xchg
pop
pop
sahf
mov
mov
sbb
dec
nop
mov
cld
push
mov
xchg
lds
cli
ja
dec
push
in
jle
(bad)
cmp
mov
test
inc
sbb
or
aas
jg
test
push
repz
arpl
fist
arpl
mov
fwait
mov
or
outs
shl
pop
fld
fisttp
mov
movs
test
xlat
pop
add
movs
jb
pop
std
cmp
sub
xor
bound
repnz
sbb
and
jno
std
or
dec
cmp
adc
pop
jae
mov
es
lahf
test
leave
jns
dec
inc
aad
(bad)
pop
popa
xchg
mov
or
push
sub
adc
push
dec
jo
inc
out
xchg
inc
pop
mov
leave
xlat
sub
loopne
push
loop
push
and
mov
scas
sbb
mov
fiadd
adc
lds
add
popa
xchg
mov
push
cwde
adc
or
and
jbe
int3
rol
gs
jae
in
aas
jge
and
dec
ret
mov
cmp
dec
sahf
adc
jecxz
inc
gs
or
js
cmp
lods
lea
cmps
sub
add
pop
dec
xor
mov
out
fmul
jae
bound
xchg
mov
cmp
mov
cmp
(bad)
jmp
shl
xchg
jmp
ds
push
in
cmp
inc
mov
inc
adc
jb
push
xchg
jbe
retf
push
repnz
add
inc
loopne
ins
sub
repnz
pusha
dec
rcr
retf
sar
add
cmp
or
imul
xchg
sbb
into
push
outs
sbb
xor
daa
jecxz
and
xor
cmps
pushf
and
bnd
hlt
xor
sbb
aad
inc
jbe
scas
mov
leave
push
es
xor
adc
mov
clc
jg
clc
inc
push
add
inc
sbb
test
dec
jle
jb
cmp
outs
jo
push
jmp
adc
inc
add
jmp
call
add
into
in
and
sub
pop
sahf
shl
push
iret
cs
inc
sub
cli
faddp
cmp
mov
sbb
fdivr
in
dec
mov
ret
out
add
dec
mov
cwde
pop
or
test
mov
xchg
scas
and
push
or
shr
into
adc
inc
daa
sti
repnz
mov
in
mov
mov
inc
dec
pop
cs
dec
pop
jbe
jge
inc
mov
cmp
jne
push
jae
addr16
jb
jno
leave
sub
push
inc
test
add
xchg
mov
cli
sub
shl
pop
adc
js
daa
cs
cmps
sub
jge
adc
jmp
mov
pop
sbb
je
test
jo
sar
xor
dec
cli
mov
scas
out
add
aad
dec
xchg
xchg
outs
push
pop
enter
pop
mov
shl
push
pop
mul
test
in
lods
std
movs
xor
(bad)
out
cmp
cmps
add
les
xchg
adc
stos
sbb
retf
loopne
xchg
psubsw
out
xchg
arpl
iret
jae
jb
repnz
loope
mov
pop
mov
gs
test
ins
push
loope
gs
repnz
push
xor
sub
(bad)
or
out
mov
push
mov
lds
dec
cli
rcl
repz
test
sbb
fucomi
jmp
add
in
or
and
xchg
jecxz
sbb
xchg
loop
push
xor
inc
jmp
jns
imul
dec
sub
cs
sbb
ins
retf
cmc
sub
sti
and
std
cmp
enter
daa
(bad)
sub
jle
push
cmp
and
add
stos
ss
cmc
arpl
mov
pop
pop
ins
cmp
aaa
data16
lea
ret
mov
shl
retf
pop
ds
pop
fisttp
push
push
mov
xor
or
cmp
or
stos
fild
cmp
cmp
mov
push
add
add
addr16
std
add
xchg
push
inc
inc
push
ret
movs
push
sub
inc
aam
fistp
xchg
cmc
cmc
xor
xchg
jmp
iret
and
fcom
cmp
movs
and
and
scas
push
inc
xchg
aaa
lods
das
aad
mul
sbb
xor
stos
pop
sub
jno
inc
or
out
add
jb
mov
fsubr
repz
sbb
test
mov
xor
push
out
shr
cmp
shl
jmp
in
mov
ficomp
or
ss
pop
xchg
sub
mov
sbb
add
retf
rol
xor
arpl
cmp
aaa
mov
pop
jnp
inc
enter
(bad)
cdq
fist
push
aas
ja
retf
(bad)
cs
inc
mov
jle
dec
out
fcom
sub
mov
inc
jge
lahf
add
pop
mov
inc
mov
pop
je
ffreep
sub
and
mov
cld
jmp
cdq
or
mov
loop
add
push
movs
fld
jecxz
pop
inc
es
cmps
bound
std
jbe
dec
shl
inc
je
inc
sbb
push
rcr
(bad)
pop
pop
adc
in
sbb
sbb
mov
sbb
cmp
mov
cmp
in
pop
mov
jne
and
push
dec
xor
mov
popa
dec
pushw
lods
sar
or
push
pop
xchg
stos
shr
xor
rcl
fist
dec
stos
jne
cmps
and
mov
pushf
adc
mov
bound
cs
fcomp
add
outs
mov
push
call
mov
sbb
ret
xor
js
shr
add
fs
push
ret
mov
lahf
pusha
scas
(bad)
es
cdq
inc
iret
push
ror
inc
in
xor
xchg
xor
xlat
out
and
cdq
add
add
daa
ss
xor
sub
daa
dec
mov
xor
inc
mov
xchg
lods
dec
xlat
mov
(bad)
pop
movs
push
into
mov
add
cld
repz
sub
mov
cs
xor
inc
(bad)
out
jle
push
mov
(bad)
fwait
adc
mov
retf
pop
and
fbld
loop
std
xchg
sub
popf
popf
rcr
push
outs
enter
mov
cmps
cli
sbb
mov
mov
ins
add
mov
sub
xor
lea
sub
fsub
add
push
mov
xor
rcl
int
mov
sub
fdivr
dec
mov
pop
cmps
cmp
lods
out
push
sub
in
xchg
xchg
and
test
shl
stos
jge
xor
push
add
lock
retf
fsub
lds
repnz
mov
movs
lock
xor
(bad)
fcomp
push
je
cli
adc
push
mov
push
mov
inc
pop
jo
and
(bad)
shl
lahf
sub
mov
add
nop
sahf
and
in
ret
cmp
loop
xchg
sub
mov
mov
mov
inc
aad
pop
cld
mov
dec
add
pop
jmp
jae
ret
cmp
shl
push
and
test
inc
lods
cmps
jb
stos
fs
scas
daa
je
cmp
pop
mov
and
xor
mov
sbb
dec
sub
bnd
jbe
lea
pop
imul
(bad)
mov
mov
test
dec
jge
push
jle
cli
mov
pop
inc
cmps
je
test
sbb
or
in
jne
xchg
lahf
xor
retf
lea
cmps
push
aas
jmp
jge
adc
mov
sbb
aaa
sti
push
xlat
or
int
loopne
xor
or
aad
add
jne
ficom
scas
inc
dec
xor
stos
fidivr
rcl
jnp
dec
mov
cdq
adc
pop
dec
add
stos
(bad)
cld
fs
lea
mov
cli
jp
test
sar
xor
aas
mov
fadd
xchg
mov
call
in
jle
loop
push
add
and
cmps
dec
pop
enter
xchg
ret
lock
and
add
pop
xchg
xor
and
leave
lds
test
das
mov
inc
(bad)
(bad)
xchg
or
arpl
or
rcl
pop
mov
sbb
jmp
or
lods
(bad)
and
pop
dec
fcom
jge
or
(bad)
or
jbe
jecxz
push
sub
inc
or
out
clc
adc
dec
pop
sbb
xchg
(bad)
cld
sbb
fcom
and
jecxz
mov
ins
loopne
(bad)
cli
jae
xor
cmp
cmp
add
xchg
dec
call
pop
sbb
lods
fild
add
cmp
adc
mov
(bad)
(bad)
mov
push
cli
sub
lea
adc
aam
xor
pop
(bad)
retf
pop
push
aas
mov
out
inc
mov
(bad)
pop
dec
call
jne
sub
ds
and
mov
mov
adc
pop
adc
inc
divps
inc
ror
add
add
shl
cmp
lods
imul
push
add
cmp
mov
(bad)
lods
adc
mov
sbb
jmp
cmp
mov
mov
dec
mov
push
(bad)
jns
xor
pop
or
in
jbe
and
sbb
jno
xchg
cmc
and
adc
sub
mov
and
test
cmp
or
mov
mov
movs
mov
bound
fwait
aaa
mov
sub
cmps
movs
or
call
nop
cmp
adc
inc
ds
inc
mov
push
fisubr
dec
inc
xchg
jns
in
xchg
push
cmp
and
fistp
pop
pushf
xchg
les
adc
sub
adc
daa
mov
and
mov
ror
inc
dec
repnz
mov
dec
imul
cmc
xchg
adc
cmp
int
cwde
add
pop
cmc
(bad)
out
mov
jp
cmp
stos
push
dec
lods
(bad)
int
cmp
sahf
rol
in
or
movs
and
fld
jge
dec
xchg
imul
jg
mov
ss
inc
dec
pop
push
aas
call
imul
(bad)
sub
push
xor
rcl
iret
push
xchg
jge
bound
and
and
jbe
dec
xor
adc
or
xor
push
mov
test
and
call
mov
xor
pop
test
out
mov
outs
(bad)
or
out
inc
push
and
cs
lea
xor
push
jle
pop
dec
push
xor
pop
jp
(bad)
bnd
mov
xor
push
mov
jnp
cmp
sub
leave
movs
mov
aaa
mov
adc
nop
xor
adc
mov
dec
mov
push
ja
cmp
cmp
pop
jbe
inc
in
xor
rol
aad
dec
jne
jbe
xor
addr16
mov
pop
and
cmp
mov
push
aam
shl
enter
adc
aam
xchg
test
inc
dec
push
add
jl
add
pop
in
or
cmp
mov
push
(bad)
inc
xchg
dec
xor
jns
imul
aam
sub
inc
outs
(bad)
addr16
jnp
scas
push
or
test
cmp
pushf
aas
mov
xchg
out
and
xor
scas
and
and
push
lods
xchg
(bad)
cwde
cmp
inc
clc
cmc
xchg
fnsave
dec
fadd
ja
lea
cmp
jecxz
std
fisttp
sub
add
push
fld
leave
fwait
das
fs
cmc
push
adc
dec
mov
into
xchg
shl
ins
jp
push
push
mov
sub
ja
mov
out
xchg
adc
sub
pop
sub
int
mov
or
(bad)
jmp
stc
xor
or
sub
retf
test
mov
mov
add
pop
repz
mov
fcom
xchg
inc
inc
call
cmps
call
js
pop
mov
enter
movs
jno
add
mov
jmp
xor
mov
aam
scas
cmp
jp
sbb
stos
push
adc
data16
adc
xor
add
imul
daa
dec
gs
or
out
push
push
test
xchg
pop
dec
out
or
jg
popf
xchg
aas
sahf
jmp
shr
into
out
shl
fbld
pop
xchg
out
jo
daa
hlt
pop
(bad)
idiv
adc
add
int
pop
fbld
out
icebp
outs
mov
inc
cmc
pop
retf
loopne
leave
inc
ficom
ins
js
aad
adc
dec
gs
fsub
mov
mov
ins
shl
xlat
call
shr
and
and
pcmpeqd
gs
jno
fiadd
leave
shl
adc
arpl
mov
cld
xchg
push
shl
cmp
jge
push
xlat
clc
cmp
sahf
hlt
inc
pop
mov
data16
int3
shr
sbb
inc
adc
jne
mov
shr
mov
xchg
sti
or
call
in
or
push
dec
test
stos
cmps
mov
sbb
(bad)
xor
scas
pop
pop
and
jecxz
test
mov
xchg
jmp
xchg
mov
(bad)
into
div
adc
or
or
call
inc
stos
xlat
jb
sub
lods
jne
pop
jno
mov
cwde
rcr
xchg
(bad)
adc
mov
das
push
test
add
fidivr
nop
(bad)
aad
(bad)
mov
cmps
popa
retf
xor
mov
inc
iret
xchg
jnp
std
xchg
fcom
(bad)
iret
xor
mov
mov
das
push
add
adc
fldcw
stc
jl
cmp
cmp
cmp
fistp
mov
dec
stos
stos
hlt
ror
adc
imul
retf
pop
jbe
jbe
cmp
test
das
in
adc
cwde
sbb
enter
sub
mov
ret
mov
out
ror
mov
loope
sub
adc
xor
xchg
shl
push
sub
enter
idiv
mov
xor
repz
sub
xlat
or
cmp
pop
fisubr
push
icebp
inc
jno
add
xchg
sub
jne
xchg
rcr
loope
outs
inc
stc
cld
fcmovnb
mov
xchg
sbb
sub
push
xchg
dec
lds
scas
jp
mov
fistp
fcmovu
add
adc
stos
push
mov
xchg
lahf
jb
xor
dec
cs
xlat
and
dec
mov
ja
jecxz
test
dec
cmps
(bad)
push
xchg
jle
sar
cmp
call
outs
jle
jecxz
mov
and
add
pop
or
add
xor
dec
push
daa
xchg
outs
scas
jecxz
push
push
fisttp
sbb
inc
fcom
call
mov
arpl
popf
fsubrp
div
fcom
or
inc
shr
repnz
shl
or
xchg
pop
inc
(bad)
les
shl
outs
mov
sti
outs
dec
out
mov
leave
add
int
xor
inc
loope
xchg
repz
sub
cmc
js
jmp
ror
jmp
pop
inc
cmp
(bad)
push
lods
es
jns
adc
cmp
cmp
addr16
icebp
add
and
xchg
dec
into
cmp
out
pop
scas
mov
jns
scas
xor
xor
fdiv
pop
mov
and
in
icebp
in
test
cld
(bad)
jmp
push
dec
test
and
popf
hlt
arpl
outs
aad
shr
inc
push
mov
push
pop
lods
sub
iret
mul
movs
mov
repz
test
hlt
sbb
xlat
call
(bad)
bound
test
mov
shl
outs
mov
test
movs
push
inc
adc
jb
dec
int3
xor
sub
loopne
fld
loopne
and
popf
xchg
jmp
dec
fwait
jmp
pop
adc
adc
idiv
mov
clc
and
jg
sub
ins
xchg
inc
nop
in
cwde
inc
mov
xor
aas
mov
xlat
(bad)
push
(bad)
js
add
fistp
mov
jne
mov
push
test
mov
xor
dec
ret
dec
dec
std
cmp
frstor
xchg
lock
sub
ds
mov
ja
fwait
jge
sub
pop
pop
mov
adc
jl
lods
mov
mov
(bad)
outs
imul
mov
in
retf
imul
call
pop
loop
jl
mov
pop
adc
mov
aas
cdq
push
jnp
out
sub
bound
or
repz
jecxz
pop
or
ss
lea
mov
lods
jnp
add
nop
scas
mov
nop
rol
mov
or
retf
sub
sub
mov
xor
xchg
inc
adc
adc
aam
cmps
xchg
push
loop
outs
dec
ja
xor
stc
std
adc
dec
cmp
dec
pop
cmc
sbb
vaddss
pop
enter
mov
cmp
sub
out
scas
mov
mov
ds
inc
push
jl
xor
ss
sub
xor
loop
les
test
aas
rcr
and
iret
out
sub
pop
xor
test
mov
mov
imul
mov
mov
aad
mov
mov
(bad)
out
xchg
(bad)
icebp
rcl
adc
aas
cmc
add
push
dec
aad
push
jmp
xchg
(bad)
stos
jo
(bad)
je
js
enter
popa
out
bound
mov
int
enter
fcomp
pop
dec
adc
es
mov
push
add
outs
fmul
or
nop
mov
icebp
loopne
aas
hlt
xchg
pushf
out
daa
jno
rcr
fs
mov
lods
cs
sub
adc
mov
mov
popf
aaa
div
sub
retfw
xchg
hlt
lods
mov
or
mov
ins
mov
jl
(bad)
dec
lods
inc
sbb
xchg
push
jns
inc
mov
ror
add
repz
ret
mov
sbb
adc
cmp
xor
push
xor
loopne
jp
(bad)
sahf
adc
jmp
mov
pop
into
test
inc
int
add
fs
xor
jnp
dec
jg
xchg
pop
in
mov
test
mov
dec
cmp
push
shr
out
inc
jb
enter
rcl
cmp
into
push
rcl
mov
sbb
pushf
xor
aaa
cs
aaa
test
pop
sahf
push
gs
jmp
imul
inc
not
and
jno
jecxz
ficom
aaa
aaa
mov
aaa
pop
and
add
pop
push
add
push
es
inc
dec
fnsave
out
dec
push
mov
outs
mov
or
(bad)
pop
hlt
test
cmp
int3
bound
jo
enter
push
pop
xchg
outs
aam
and
jnp
adc
or
rcr
cmp
jmp
or
fcomi
iret
ret
lods
jae
pop
adc
lock
xor
sbb
fsubr
out
sub
arpl
stos
test
push
mov
ror
inc
mov
or
mov
rol
(bad)
cmps
fwait
mov
movs
xor
out
ins
enter
in
pop
cmp
sti
int
shl
sbb
mov
or
inc
jmp
test
mov
jns
lock
pop
daa
bound
out
movs
hlt
mov
popa
(bad)
xchg
stc
mov
sar
enter
hlt
add
iret
(bad)
jmp
aas
adc
dec
lea
push
jmp
dec
or
enter
sar
inc
iret
mov
pop
dec
les
xor
jns
sbb
jl
pusha
aam
es
(bad)
cmp
cbw
call
stc
div
loopne
or
xchg
adc
cmps
dec
test
lea
sub
fwait
cmp
(bad)
cmp
xbegin
push
fst
pop
aas
sub
mov
test
aaa
pop
sti
pop
lahf
xchg
cmp
add
inc
mov
push
cdq
cmp
imul
dec
and
sti
imul
jo
sub
sahf
scas
(bad)
push
cs
pop
adc
shl
cmps
call
int3
icebp
vmwrite
and
sub
fcomip
mov
mov
and
mov
mov
xlat
or
sbb
jge
retf
shl
call
jb
add
stc
rcr
sar
mov
adc
jl
sar
push
mov
jp
test
jmp
adc
mov
or
add
(bad)
aad
out
movs
ds
cli
and
mov
mov
rol
leave
(bad)
mov
adc
mov
aam
xchg
jno
xor
fist
xchg
mov
mov
imul
add
inc
jmp
adc
sub
mov
pop
adc
je
push
jnp
jo
btr
fidiv
xor
push
mov
pop
jns
stc
jne
mov
in
mov
lods
sbb
jno
out
and
pop
stc
enter
cwde
(bad)
jnp
in
dec
push
loopne
ret
inc
fild
or
cmp
jns
xchg
mov
inc
cmp
sbb
cmp
ja
lods
add
adc
inc
and
mov
jge
imul
mov
push
jae
adc
out
jp
fcomp
xchg
mov
aad
daa
fs
mov
add
nop
fdiv
ja
mov
ror
lea
clc
mov
add
or
and
inc
mov
fild
loopne
adc
loop
jo
or
(bad)
add
mov
call
jns
jne
mov
mov
rol
les
adc
fdiv
out
pop
jns
or
push
loopne
mov
and
aas
cdq
pop
and
outs
repz
and
jmp
sbb
das
ins
jo
stos
cmps
das
fiadd
cmp
sub
out
xor
sub
stos
pop
fadd
sub
jne
scas
ja
sbb
push
(bad)
(bad)
imul
addr16
lods
dec
cwde
pop
fwait
inc
mov
jne
add
mov
mov
push
pusha
push
loop
sbb
xor
ss
sub
xchg
push
into
pusha
bound
jnp
cmp
sbb
push
or
inc
jb
mov
call
ja
imul
test
(bad)
ficom
push
pushf
pop
out
js
(bad)
xchg
adc
retf
sub
dec
cmp
(bad)
sub
or
xchg
cmp
jns
int
cs
lds
sbb
mov
out
in
dec
and
and
repz
shr
push
pop
in
pop
cli
call
mov
add
xor
pop
repnz
inc
xchg
in
xor
(bad)
jle
jo
test
sub
push
xchg
ins
push
les
mov
test
jns
call
pop
sbb
sbb
shr
add
inc
and
lahf
out
inc
ficom
shl
sbb
push
pop
mov
addr16
jmp
mov
push
dec
aaa
ss
loopne
cli
mov
adc
sub
adc
sbb
xchg
add
add
jmp
jno
mov
out
jmp
sub
xchg
daa
fs
repnz
sbb
jns
aad
pop
movs
sub
or
nop
cmp
jmp
rcl
mov
sub
(bad)
pop
repnz
test
xchg
nop
mov
dec
xor
mov
and
mov
lahf
mov
int3
scas
jecxz
ins
ins
mov
jo
fsubr
xchg
mov
jns
popf
movs
in
fstp
(bad)
scas
inc
sbb
scas
pop
pop
and
and
outs
and
das
mov
out
and
jge
cmp
push
int3
shl
shl
out
and
loopne
adc
xor
xchg
jbe
(bad)
ins
sub
inc
lea
mov
(bad)
imul
xor
mov
sahf
ds
and
jo
mov
out
ret
sbb
je
adc
mov
and
pop
das
xchg
div
xor
(bad)
sbb
push
push
fs
rol
cs
mov
pop
lods
jb
adc
jg
mov
mov
cmp
adc
call
aam
je
add
outs
aad
(bad)
mov
int
(bad)
cmp
jg
mov
xchg
add
sbb
rcl
nop
ret
data16
cli
cmc
pusha
or
adc
sub
in
test
cmp
pop
fnsave
int3
mov
dec
cwde
dec
shl
xchg
mov
lahf
and
in
add
scas
cld
push
int
add
push
into
std
jnp
gs
jns
(bad)
push
mov
sub
adc
mov
jnp
jo
stos
mov
std
cmp
jb
(bad)
cld
arpl
sbb
pop
jo
xchg
dec
les
sub
lods
pop
clc
aas
push
cmps
test
je
jp
cmp
ror
adc
movs
lea
mov
(bad)
and
cmp
jb
mov
lods
mov
test
and
sti
adc
popa
aaa
xchg
xor
leave
je
imul
mov
icebp
rcr
push
adc
ret
arpl
imul
and
test
mov
and
mov
mov
loop
es
mov
das
mov
ds
pusha
stc
sti
cmp
ret
xchg
test
jl
adc
sub
call
mov
inc
sbb
push
sbb
cmp
imul
xor
(bad)
mov
das
xor
push
adc
cmp
dec
fistp
loop
cli
pop
aas
mov
call
jl
(bad)
lds
jmp
retf
push
popa
push
cmp
adc
popa
mov
jg
lods
dec
(bad)
pop
movs
xchg
mov
xchg
dec
ss
dec
test
mov
push
cmp
cmps
test
rcr
call
loope
punpcklbw
ja
ja
cmp
aam
and
xor
enter
aas
mov
nop
mov
xchg
in
imul
lea
sub
ret
bound
xchg
in
mov
mov
fidivr
xchg
dec
add
jae
in
cli
icebp
repnz
retf
push
xchg
push
in
add
sar
mov
arpl
push
mov
lahf
test
adc
sub
push
cmp
fdiv
lock
cmp
xchg
xchg
or
sbb
xchg
push
fmulp
sub
mov
popf
sahf
mov
loope
mov
pop
pop
xchg
jmp
test
scas
push
fcmovnb
mov
sub
push
movs
ror
ins
jle
cdq
mov
xor
rcr
jns
popf
mov
ret
cli
jbe
sbb
es
and
inc
mov
outs
xchg
cmp
ror
push
call
adc
popa
mov
sbb
push
outs
fmul
push
int
fcomip
stc
jo
sub
mov
jnp
or
adc
scas
sbb
dec
popf
pop
pop
daa
fst
dec
aam
mov
cmps
jg
fldln2
mov
(bad)
xor
or
cmc
sbb
jb
push
mov
cmp
ret
imul
push
mov
pop
jno
push
nop
imul
iret
xchg
repz
xor
fldenv
(bad)
mov
cmp
or
cmps
pop
inc
pop
stc
add
push
mov
adc
shr
rol
dec
test
add
out
mov
jo
mov
jg
pop
shr
imul
xor
mov
xor
hlt
dec
sahf
sub
or
push
dec
or
loop
inc
and
pop
fcomp
jae
in
push
jecxz
enterw
sub
or
sub
fwait
sub
mov
add
xchg
inc
push
cs
mov
push
pushf
xor
and
push
lds
das
jmp
and
push
mov
sub
jle
aam
inc
jo
sub
stos
push
push
jge
in
loop
sub
hlt
cld
pop
je
ins
xchg
pushf
loopne
enter
sbb
pop
rcl
pop
inc
push
mov
mov
call
ret
dec
jo
pop
fsubr
pop
bound
mov
aaa
rcl
and
adc
sbb
pushf
cdq
es
enter
cli
add
add
or
jmp
pop
cld
not
cmp
ret
xor
fs
ret
test
push
cs
paddusb
pop
xchg
jns
sahf
cld
lods
push
cmps
mov
aad
and
loop
or
mov
test
bound
mov
in
inc
xchg
fidivr
push
mov
xor
xlat
pop
or
in
or
and
(bad)
mov
inc
cmp
imul
out
xor
stc
push
(bad)
frstor
imul
addr16
xor
pushf
lahf
pop
inc
and
fidivr
outs
jmp
xlat
pop
or
push
xchg
(bad)
sbb
cmc
add
push
sti
sbb
rol
js
pop
callw
sub
js
pop
sbb
cmp
xchg
popa
retf
push
fcmovnb
jb
mov
daa
push
add
fmul
push
sbb
sub
cmp
or
xor
xor
cmp
ins
test
gs
push
das
pop
ja
rcl
xor
call
loopne
cmp
fidivr
jmp
loopne
(bad)
jecxz
mov
mov
addr16
and
rcl
add
pop
mov
sub
mov
cmps
loope
retf
pusha
and
(bad)
jne
adc
hlt
inc
leave
or
cld
iret
push
imul
sbb
sbb
xor
sbb
jecxz
push
js
pop
jno
imul
jbe
aam
int
jb
stos
nop
mov
das
add
pop
and
popf
call
in
arpl
inc
push
add
sbb
lock
nop
sbb
jnp
jne
jge
cmps
add
lock
dec
shl
stos
xor
mov
push
(bad)
mov
retf
jmp
loopne
in
stos
std
push
js
mov
push
mov
aas
shr
ins
and
mov
and
test
sbb
push
or
sub
loop
jecxz
int3
and
in
loopne
(bad)
and
and
(bad)
enter
aas
push
adc
or
or
pop
dec
or
add
mov
jb
add
mov
jmp
adc
jb
lahf
icebp
mov
sbb
stos
mov
neg
and
ins
xor
cmp
pop
or
mov
test
fisttp
or
aam
inc
stos
add
jae
pop
xchg
and
cld
mov
rol
inc
fcom
fs
ss
xchg
jecxz
cmp
fdivr
or
pop
mov
xlat
sbb
scas
arpl
scas
sti
lods
dec
cmps
sbb
pop
xor
es
inc
cs
cs
test
pop
pop
sbb
ja
sub
aad
push
jecxz
xchg
or
jns
in
mov
add
or
jno
sub
fwait
aam
add
sub
mov
inc
add
mov
jno
pop
mov
sti
mov
loope
cli
inc
enter
out
mov
mov
jg
and
push
retf
push
dec
sbb
scas
outs
dec
arpl
lods
outs
push
retf
add
add
xchg
xchg
adc
in
jnp
js
imul
jo
mov
push
jmp
mov
sub
pop
xor
(bad)
ror
dec
add
or
sbb
into
jle
out
loop
sahf
xor
test
xchg
jmp
fidiv
outs
shl
es
cmp
jmp
(bad)
sahf
jbe
pop
sbb
fst
call
xchg
cmc
inc
inc
arpl
jns
mov
add
enter
adc
leave
sub
jmp
push
aam
xchg
and
push
cmp
aad
fistp
aam
addr16
repnz
sti
jg
jb
outs
xchg
repnz
(bad)
bound
ficomp
adc
fadd
cmp
scas
dec
push
xchg
inc
pop
jle
add
mov
aaa
and
sbb
std
add
cmps
push
sub
daa
mov
cs
mov
je
sub
leave
pop
out
sub
jmp
iret
jmp
cmp
aaa
push
neg
fs
test
xchg
imul
xor
cwde
adc
arpl
inc
popa
push
xor
daa
movs
mov
xchg
and
aam
lods
push
cmp
sub
dec
xchg
xor
scas
dec
jae
das
add
adc
fiadd
hlt
movs
(bad)
lods
pop
jnp
inc
rcl
movs
add
pop
add
push
and
push
icebp
mov
and
(bad)
ins
jg
outs
and
ret
out
mov
dec
add
es
stos
lds
sahf
jb
dec
inc
iret
sub
and
or
mov
push
push
stos
es
xchg
clc
adc
fs
or
fstp
sub
call
jno
in
dec
leave
retf
jnp
dec
jmp
jge
je
mov
pop
cmp
arpl
mov
loope
hlt
clc
(bad)
call
sub
es
add
xlat
loope
sub
add
cdq
(bad)
in
xlat
cs
xchg
outs
jp
bound
leave
aad
shl
sbb
popf
sbb
loope
movs
test
and
lock
add
sbb
cmp
add
aad
sub
sbb
ja
mov
xchg
adc
or
retf
lods
xor
(bad)
clc
jb
push
xchg
in
not
in
mov
mov
cdq
js
in
out
jmp
lahf
inc
movs
stos
jbe
sets
mov
call
adc
mov
push
cmp
push
fnstcw
sub
sub
inc
test
push
dec
mov
push
mov
dec
not
inc
retf
lods
fisub
pop
div
shr
adc
add
and
je
jnp
and
add
leave
dec
adc
or
push
ss
lods
es
xchg
pop
lahf
push
scas
push
adc
and
mov
mov
pop
lea
push
fstp
push
add
out
push
(bad)
mov
mul
cmp
rol
test
mov
push
lods
jp
push
pop
inc
retf
mov
movlps
mov
sub
sbb
inc
loope
cmp
arpl
loopne
retf
aad
hlt
stc
add
mov
adc
push
or
test
mov
push
jb
loop
add
data16
xor
pop
push
mov
cmps
add
xchg
adc
or
outs
imul
mov
sub
mov
lds
jp
idiv
(bad)
or
std
les
test
inc
xchg
lods
xchg
and
sbb
jge
popa
shl
lods
imul
sub
push
xchg
arpl
aas
mov
into
sbb
jbe
stos
movs
inc
mov
lock
stos
cmp
jb
pop
sahf
sub
scas
mov
push
push
rcr
arpl
inc
pop
aas
mov
inc
in
aad
mov
push
or
sbb
inc
(bad)
or
jb
into
int3
cmp
xchg
push
mov
test
mov
jge
dec
(bad)
fstp
sub
int
cs
cld
cmp
and
xor
fldcw
call
push
fisttp
outs
or
fdivr
or
fisttp
xchg
adc
sbb
jecxz
(bad)
lahf
jmp
retf
adc
and
loop
inc
mov
addr16
imul
in
je
sar
popa
pushf
adc
dec
lods
or
mov
cmp
xchg
repnz
fwait
adc
lods
adc
mov
xor
xor
xor
cmp
or
jl
push
or
addr16
pusha
js
test
cmp
xchg
mul
sti
sbb
sbb
or
aam
adc
pop
inc
aaa
iret
adc
or
jecxz
retf
mov
aad
push
mov
clc
mov
(bad)
jp
hlt
in
mov
fld
cli
in
xor
push
dec
test
lods
add
mov
sub
or
dec
mov
js
fistp
mov
jmp
mov
pusha
ficomp
cmp
movs
mov
ror
call
rcl
lock
and
pop
or
add
sub
adc
in
sti
cmp
dec
sbb
loopne
addr16
dec
out
aad
add
data16
cli
xchg
fisubr
inc
ins
fbstp
mov
loop
div
in
movs
and
neg
inc
hlt
repnz
das
jne
jge
or
mov
jg
jge
not
retf
and
lds
dec
retf
ss
sbb
dec
sub
std
es
cmps
adc
add
mov
dec
xor
scas
inc
sub
clc
clc
xor
mov
cwde
sub
out
int3
test
adc
and
sar
vpminub
mov
mov
mov
sar
fadd
rol
pop
push
in
xchg
adc
out
into
sbb
dec
adc
ffree
div
(bad)
mov
or
xor
push
inc
aad
fsubr
inc
add
sub
rcl
mov
jo
mov
dec
imul
jb
ret
outs
mov
cmp
adc
out
and
out
xchg
xchg
mov
xor
inc
fsub
lock
mov
sbb
sbb
push
pop
inc
outs
or
pop
cmp
adc
or
push
stos
push
lods
jno
es
shl
xor
jp
xor
push
call
push
adc
in
fnstcw
jmp
inc
or
mov
or
scas
mov
outs
pop
loop
add
test
and
repnz
jmp
dec
sti
(bad)
inc
pop
pop
out
xor
dec
jns
sub
int3
out
jbe
mov
mov
cmp
fadd
cmp
push
dec
jecxz
cwde
dec
iret
lahf
ja
fcmove
movs
jne
mov
push
mov
(bad)
mov
mov
ins
fsubr
daa
(bad)
pop
xor
jo
adc
cmps
push
inc
jae
mov
xchg
(bad)
movs
(bad)
or
imul
cmp
dec
mov
call
lods
jp
sbb
imul
or
icebp
mov
test
pop
cmp
add
bound
leave
jle
mov
or
test
sub
pop
inc
pop
out
lock
data16
in
fst
ins
add
arpl
inc
inc
jbe
mov
out
add
or
fs
cs
call
into
inc
mov
int3
clc
sbb
cmp
push
(bad)
xchg
dec
push
in
push
jmp
sbb
dec
dec
int
in
out
icebp
mov
mov
stc
in
test
dec
mov
jg
ins
xchg
and
dec
add
adc
and
mov
sub
mov
xlat
cmc
ja
dec
push
ret
pop
jg
loope
(bad)
dec
stos
pop
adc
test
inc
mov
sub
icebp
cmp
inc
add
or
or
outs
push
pop
xor
pop
test
inc
call
dec
out
jl
pop
adc
int3
sbb
and
packsswb
sub
cmc
sti
mov
in
mov
jl
cmp
into
fcmove
and
sbb
mov
mov
ret
mov
mov
push
fmulp
xor
call
fs
pop
(bad)
fld
adc
add
xor
inc
fcomp
xor
inc
into
cli
jg
test
and
icebp
pop
jecxz
mov
mov
ret
(bad)
and
scas
inc
xor
cmp
and
and
or
repnz
ins
mov
xlat
cdq
enter
push
cmps
js
cmp
xchg
retf
or
mov
js
call
jmp
push
sbb
lea
push
sti
jae
xchg
repz
jp
xchg
repnz
cwde
sub
aad
jbe
imul
jbe
fdivr
sbb
mov
aam
dec
add
add
dec
pop
cdq
mov
lds
and
fwait
lahf
sub
lds
push
xchg
push
push
add
inc
cmc
or
aas
xchg
push
lods
mov
and
sbb
add
gs
imul
(bad)
push
(bad)
xor
adc
into
mov
jns
xchg
pushf
ror
or
fsub
enter
fstp
ret
shl
xchg
mov
es
movs
xchg
arpl
fnstenv
or
adc
dec
jno
and
fwait
jbe
push
cs
xrelease
retf
test
xchg
jae
mov
ss
mov
pop
or
jmp
xchg
inc
push
in
pop
push
pop
je
in
daa
adc
retf
(bad)
push
and
add
sub
dec
repnz
mov
ret
pop
adc
sbb
mov
inc
jge
ror
or
lahf
xor
gs
(bad)
in
xor
(bad)
mov
pop
pop
mov
aaa
cmp
jecxz
iret
mov
pop
je
int3
and
add
adc
xlat
mov
cmp
push
jecxz
cwde
dec
retf
cdq
(bad)
fsubr
cmp
mov
cli
dec
fs
mov
inc
loop
popa
cmp
xor
mov
rcr
test
sbb
pop
addr16
adc
push
or
aam
xchg
fdiv
adc
ret
push
aam
ret
and
jp
sar
pusha
add
adc
pop
sub
mov
sub
adc
mov
sbb
and
xor
popf
sub
mov
sbb
pop
and
cmc
push
add
cld
enter
loope
out
push
mov
add
popf
outs
test
test
bnd
mov
(bad)
pushf
(bad)
shl
inc
mov
pop
ror
mov
out
pushf
ins
jp
mov
out
imul
jo
push
and
dec
and
xchg
popa
cmps
and
inc
sbb
xchg
imul
data16
sbb
ins
in
or
ins
imul
dec
push
mov
push
std
mov
pop
int
sti
sub
jp
cld
mov
inc
dec
bound
adc
out
inc
frstor
sbb
(bad)
outs
pop
cmps
dec
dec
sbb
fldenv
fild
lahf
push
outs
bound
sub
sahf
je
cwde
mov
idiv
xor
push
aaa
sub
dec
pop
test
inc
jmp
or
fwait
test
pop
adc
fcmovnbe
add
lods
push
dec
test
add
aas
xor
(bad)
jmp
mov
mov
dec
fwait
xlat
vmwrite
pop
mov
jns
dec
inc
dec
cmp
xor
jp
popf
and
in
sar
repnz
popa
adc
test
cmp
jns
jbe
jmp
nop
push
push
sub
dec
outs
fsubr
and
sub
cmp
push
lods
jns
pop
jl
or
pop
in
or
push
add
pop
dec
inc
dec
jle
sti
fwait
mov
jno
retf
mul
or
dec
cld
sahf
dec
dec
jge
aaa
jp
mov
shl
mov
pop
test
stos
das
xor
lea
pop
inc
(bad)
test
xchg
sbb
mov
inc
mov
adc
jns
sar
mov
mov
push
in
fwait
inc
mov
lock
adc
jbe
lahf
mov
in
cdq
ficom
adc
pusha
inc
inc
je
push
cli
jbe
sbb
push
sub
mov
mov
sbb
ins
push
cmp
in
xchg
inc
shr
pop
and
rol
repnz
xchg
ret
daa
mov
in
cmps
in
dec
xchg
mov
add
and
push
int
cs
in
push
add
push
data16
rcl
and
pop
int3
loopne
fucompp
loopne
mov
mov
inc
mov
ss
xlat
(bad)
ja
sub
out
jbe
sub
add
clc
shl
adc
shl
call
fdivr
stos
mov
add
or
out
adc
sbb
into
js
mov
cmps
movs
sub
mov
rcr
out
mov
push
repz
(bad)
popa
pop
push
popa
(bad)
in
movs
addr16
inc
iret
mov
add
inc
jne
sub
mov
fisttp
out
dec
mov
sti
sbb
lea
xchg
lock
fisub
jl
arpl
pop
add
(bad)
dec
xchg
pushf
int
call
fld
retf
push
mov
cmp
push
pop
jmp
push
push
es
sahf
mov
mov
or
push
or
inc
lods
sti
repnz
and
pop
and
jg
adc
mov
repnz
dec
adc
ins
loope
clc
lods
cmp
xchg
(bad)
aam
hlt
in
test
adc
xor
cdq
mov
mov
sbb
mov
add
xor
fmul
test
cmp
mov
mov
test
cmp
or
push
sub
jmp
mov
mov
shl
sub
add
cmp
xchg
loop
xor
jb
aas
ins
mov
outs
or
inc
sar
and
xchg
dec
retf
retf
xor
pop
xor
sbb
jg
or
cmp
jl
shr
cwde
push
mov
xchg
repnz
iret
push
ins
cmp
and
cmps
mov
xchg
cmp
jne
mov
push
and
pop
or
shr
mov
js
imul
(bad)
mov
sub
xor
es
inc
pop
std
sbb
pushf
icebp
(bad)
sti
popf
sub
fadd
rol
mov
clc
cmp
gs
inc
mov
fnstsw
rcl
das
ffree
mov
jns
hlt
push
test
mov
mov
add
sub
test
sbb
mov
out
ins
icebp
push
inc
icebp
push
(bad)
out
jne
add
cs
or
push
sti
jno
xchg
inc
jbe
jp
sti
adc
xchg
mov
(bad)
dec
add
inc
jg
inc
mov
xor
xchg
pushf
ins
push
fnstcw
dec
ror
sub
dec
loopne
(bad)
je
xchg
sti
fnstcw
sub
push
stc
push
inc
sub
push
sub
cmp
sub
adc
xor
jbe
xchg
(bad)
mov
cdq
xchg
test
ret
fild
push
ffree
int
cmp
push
cmp
aaa
test
mov
mov
push
daa
add
push
sbb
sbb
inc
cwde
xchg
fldenv
aaa
cmp
das
lock
xor
cmc
in
ret
js
(bad)
fcmove
lea
or
and
mov
popa
hlt
repz
or
(bad)
xor
inc
cmp
pop
push
cs
jp
inc
mov
adc
out
mov
dec
enter
jge
mov
or
movs
ret
jp
mov
retf
jmp
adc
lods
adc
mov
push
(bad)
pop
jp
das
mov
xchg
sub
sbb
stos
in
ss
xchg
lea
call
sub
iret
inc
mov
inc
pop
jle
shl
mov
call
imul
or
(bad)
iret
or
push
mov
push
daa
pop
lds
add
cli
push
mov
mov
fst
xchg
lods
ss
xchg
mov
imul
fs
push
push
repz
fwait
mov
dec
and
sub
(bad)
pop
pop
and
cld
dec
shr
mov
movups
outs
lods
inc
cmp
dec
nop
pop
test
mov
adc
inc
or
and
jmp
push
push
iret
xchg
fmul
loop
xor
sbb
fwait
in
fld
or
imul
shl
dec
test
sbb
xor
jge
jno
jge
sub
mov
call
pop
inc
ja
(bad)
arpl
rcr
jecxz
dec
jnp
or
lods
or
(bad)
aad
pop
jmp
stos
(bad)
sbb
pop
xchg
xlat
sbb
adc
cmp
add
mov
xchg
jb
scas
lds
iret
add
lds
out
adc
fs
pushf
in
lds
fwait
aaa
aam
jecxz
inc
aam
stc
and
stc
push
push
and
inc
mov
das
mov
stos
inc
or
sub
rcl
pop
mov
sub
pop
sbb
js
jle
nop
inc
jge
pop
dec
loopne
xor
fsub
mov
mov
popa
ins
sbb
rcl
xor
jne
fild
push
mov
scas
cmp
mov
(bad)
pop
jp
mov
hlt
fnstsw
inc
leave
pop
jae
gs
(bad)
fucomp
arpl
sub
and
jb
(bad)
in
pop
mov
xchg
dec
fst
pop
sbb
cmp
sub
adc
movups
dec
or
xchg
xchg
xchg
sbb
mov
call
mov
jl
imul
or
xor
imul
into
mov
cmps
fwait
sbb
lea
mov
push
add
arpl
(bad)
out
inc
push
rcl
adc
mov
jae
mul
mov
call
sbb
cwde
and
or
les
call
mov
jecxz
or
jno
pop
push
sti
gs
idiv
sub
mov
cld
mov
cwde
xor
jg
fdiv
sar
sub
add
ja
push
xor
bound
cmps
pusha
jnp
call
lods
dec
xchg
dec
test
test
cmp
xchg
xchg
(bad)
aad
and
sbb
fnsave
enter
pop
je
push
aam
sbb
dec
in
and
bound
shl
mov
test
jg
pop
and
sub
fwait
sbb
sbb
adc
ins
retf
xor
cmp
mov
test
movs
sbb
out
dec
repz
fnstcw
outs
cmc
js
xchg
sahf
mov
lock
dec
sub
movs
mul
sub
stos
mov
push
shr
inc
rcl
xchg
pop
push
out
stc
lds
mov
jl
push
pop
cs
dec
inc
pop
call
push
ins
scas
lds
push
cmp
das
xchg
cmp
sub
ins
pop
retf
bound
int3
shl
js
lock
shr
adc
loope
add
push
dec
sbb
mov
add
out
xor
or
ja
stos
push
mov
or
clc
xchg
movs
jno
jo
mov
shl
dec
push
xor
push
aas
jno
push
ret
sbb
adc
fisub
mov
add
arpl
aas
cwde
clc
jle
out
push
xor
shr
cmps
sbb
out
sbb
pop
or
stos
in
arpl
mov
fmul
adc
jne
push
(bad)
jne
xor
adc
push
mov
imul
call
lock
inc
fwait
mov
inc
out
cmp
dec
iret
jl
repnz
inc
push
xor
mov
jb
add
or
mov
mov
(bad)
loop
test
je
xor
sbb
loope
fild
test
ret
mov
pushf
pop
add
jb
movs
cwde
add
or
divps
fcomp
adc
lods
lds
aad
clc
rcr
sbb
cmps
data16
xchg
xchg
sub
scas
add
not
xor
and
enter
pop
jecxz
test
sub
or
lods
push
out
add
xchg
pop
clc
mov
leave
inc
(bad)
xchg
in
and
add
imul
push
push
jns
mov
ss
add
cmp
dec
pop
dec
es
sub
ret
pop
ds
dec
popa
jbe
loopne
ja
ins
inc
cs
movs
daa
test
sub
test
(bad)
clc
sbb
sub
mov
xchg
xchg
cmp
sub
mov
pop
inc
push
pop
pusha
sbb
shr
xor
in
sub
ds
mov
mov
mov
movs
mov
xor
mov
stos
dec
cmp
(bad)
mov
and
(bad)
adc
push
dec
imul
or
mov
sub
cmps
out
xchg
retf
xor
bound
fs
pop
dec
fdiv
and
adc
mov
xlat
push
movs
jb
scas
dec
dec
pop
cmp
pop
xchg
sti
movs
push
jae
int3
dec
mov
add
adc
es
push
arpl
lea
cmp
inc
cmp
adc
dec
in
pop
test
fstp
xor
xlat
xchg
rcl
daa
jl
mov
lea
es
(bad)
je
mov
cmps
mov
(bad)
iret
and
mov
mov
cmps
sahf
push
fucomi
sar
push
xchg
mov
xor
jae
jge
fwait
jg
test
in
hlt
mov
daa
jb
test
sub
dec
je
lods
(bad)
cld
add
aam
mov
in
jp
mov
inc
repnz
iret
test
sub
and
or
dec
jecxz
out
test
and
jl
xor
cmp
and
inc
mov
retf
xchg
mov
lds
adc
cmp
test
or
(bad)
jp
aam
mov
add
shl
or
lds
test
mov
cs
inc
(bad)
adc
scas
xor
pop
jp
pop
(bad)
pop
and
out
pop
mov
bound
stos
sahf
mov
js
data16
or
inc
pop
unpckhps
call
xor
mov
jge
lods
pop
mov
(bad)
and
pop
push
cmp
xor
retf
rcl
dec
jbe
or
clc
xchg
out
pop
xor
add
pop
(bad)
or
mov
jge
test
cdq
test
mov
hlt
xor
stc
sub
push
pop
jmp
sub
or
xor
outs
ins
shr
mov
jl
cdq
inc
xor
cmps
bound
sbb
in
jecxz
imul
inc
outs
les
test
sbb
pop
ins
mov
or
inc
test
cmp
cld
pop
das
pop
lods
inc
push
jp
mov
fs
shl
outs
sbb
pusha
(bad)
fcom
sub
mov
xchg
xchg
pop
jbe
mov
movs
(bad)
xor
xor
test
sbb
xor
inc
mov
(bad)
push
outs
mov
pusha
xor
jbe
jne
inc
fadd
cmps
xor
cld
hlt
xchg
xchg
sub
cli
push
inc
adc
xchg
scas
cmp
ins
fisub
mov
push
and
ror
mov
add
push
dec
add
inc
repz
test
sbb
mov
retf
movs
adc
adc
xchg
int3
out
pop
cmp
cli
mov
mov
loopne
rcpps
sbb
xchg
and
xchg
jno
cmp
or
inc
xchg
sbb
cmp
pop
addr16
push
mov
cmc
movs
pop
ss
push
in
cmp
iret
jbe
sub
sub
nop
mov
sub
outs
push
sub
in
inc
sar
mov
pusha
loope
mov
inc
lahf
bound
add
mov
dec
sub
fcmovb
add
icebp
lock
jae
push
lea
inc
pop
cli
lahf
movs
mov
add
xchg
aad
repnz
iret
push
fidivr
add
or
jp
(bad)
stos
lahf
repnz
push
into
(bad)
es
push
jns
xor
jmp
adc
sbb
xchg
xlat
pop
retf
cmp
and
repnz
rcl
in
icebp
mov
fist
imul
jmp
or
sbb
icebp
ror
inc
add
test
in
fwait
mov
sti
xchg
xchg
push
jne
jne
rcr
jns
push
popf
mov
mov
mov
pop
out
call
ficom
fmul
jnp
(bad)
mov
jae
rcl
push
mov
into
stos
inc
sbb
adc
jg
call
or
call
leave
test
stos
inc
jge
ret
loop
mov
and
jns
sbb
cmc
add
cmp
xor
mov
dec
mov
or
mov
repnz
or
ss
nop
fwait
(bad)
adc
fcmovnu
lea
xchg
rol
lea
mov
lods
push
jg
movs
xchg
arpl
loope
mov
sbb
jle
mov
dec
mov
sbb
rcl
sbb
popa
sbb
mov
scas
or
(bad)
cmp
ret
cmp
js
xor
fnstenv
pop
adc
mov
fdivr
stos
xor
cmp
and
rcl
and
push
adc
xchg
(bad)
aad
sbb
xchg
mov
out
adc
ret
imul
inc
push
adc
or
sub
mov
ret
xchg
pop
stos
mov
fsub
out
xor
mov
dec
ss
or
adc
sahf
mov
(bad)
mov
add
cld
xchg
dec
sbb
das
(bad)
dec
ins
adc
push
push
sub
syscall
mov
jae
adc
xchg
stos
test
push
cmp
clc
or
scas
sbb
sub
adc
scas
scas
xchg
cmp
(bad)
fild
xchg
cdq
imul
cmp
xchg
cmp
ror
xlat
lods
(bad)
in
add
in
add
fld
mov
pop
cli
sbb
push
add
mov
pop
inc
dec
mov
das
mov
int3
pusha
xchg
cmp
sbb
jmp
xchg
nop
dec
add
aaa
push
inc
xor
mov
lds
jno
xchg
scas
inc
sbb
add
dec
hlt
mov
data16
mov
and
cmps
push
stos
(bad)
in
addr16
dec
pop
xchg
fsubr
xchg
pop
jecxz
push
sbb
push
mov
leave
and
out
ficom
rol
cmc
lock
test
xchg
jb
xchg
bound
mov
xor
and
fidiv
bnd
and
xchg
or
popa
add
aad
xchg
aad
sub
push
loop
out
cdq
popa
push
inc
fwait
pop
cmp
and
test
int3
cmp
pextrw
adc
inc
xor
dec
out
xor
mov
hlt
inc
push
loop
or
inc
fmul
push
cmp
sahf
adc
push
lds
mov
mov
shr
jb
mov
mov
int3
jno
cld
daa
ret
in
mov
jne
jle
int
and
adc
or
xchg
xor
imul
xor
add
lods
clc
fidiv
inc
cmp
mov
adc
adc
mov
jecxz
out
out
cmp
test
xor
mov
or
push
jae
adc
sub
sbb
aad
ja
push
push
mov
adc
pop
or
dec
fs
inc
mov
adc
jo
or
ret
dec
xor
mov
popa
ins
push
sti
pop
scas
(bad)
add
inc
pop
inc
jo
mov
mov
xor
sar
scas
push
jno
call
inc
das
(bad)
dec
mov
fwait
and
sar
cmp
mov
ins
jmp
fdivr
inc
in
or
imul
pop
jge
jbe
add
sbb
push
xchg
jns
outs
(bad)
mov
jg
push
inc
mov
pop
scas
mov
inc
lock
inc
sub
dec
add
adc
mov
cmps
lahf
dec
xchg
dec
aad
push
sti
or
not
inc
inc
add
xchg
add
(bad)
je
xor
mov
sti
dec
ds
sub
and
mov
xor
(bad)
loopne
jno
sbb
movs
push
dec
add
push
pop
jmp
cmc
or
sbb
xchg
push
or
push
mov
or
test
adc
cmp
out
gs
ret
into
mov
pushf
pushf
fisubr
push
aam
mov
outs
aaa
push
push
cmp
jecxz
int
mov
repz
add
imul
dec
dec
adc
sub
or
pop
(bad)
adc
inc
add
dec
(bad)
movs
jmp
pop
fwait
mov
das
loop
push
retf
push
inc
xchg
js
push
iret
cmp
adc
xor
mov
gs
cmp
loop
dec
xor
add
jp
xor
gs
pop
mov
in
pop
loope
clc
and
inc
mov
jmp
sub
adc
enter
scas
cmc
add
test
dec
push
push
cmc
dec
sbb
sub
cld
mov
inc
retf
sub
pop
xor
mov
test
rcr
inc
mov
mov
sub
xor
shr
int3
(bad)
call
mov
test
jg
test
jle
xchg
add
adc
retf
or
jl
lahf
ficom
cdq
jmp
lds
jns
cmps
pop
in
sbb
xor
std
ss
sbb
shl
ins
(bad)
dec
lods
or
adc
das
push
sub
dec
in
mov
fadd
jno
push
mov
push
dec
xchg
xchg
out
mov
(bad)
adc
popf
scas
xchg
push
sbb
ret
(bad)
lock
and
pop
and
imul
ffree
int
push
gs
idiv
out
ror
pop
mov
leave
pusha
or
dec
pop
push
int
inc
arpl
cld
pop
repz
sbb
sbb
and
arpl
ss
xor
sbb
repz
xchg
stos
and
pop
sbb
pop
mov
scas
sbb
out
push
lods
jl
adc
cld
cmp
mov
ss
ins
cmp
(bad)
ds
dec
es
and
shl
in
jae
out
pop
pop
pop
fdivr
test
ins
jb
(bad)
xor
lahf
das
lea
jge
adc
inc
mov
xchg
out
aam
xor
ret
jne
nop
leave
and
(bad)
imul
and
outs
dec
xor
or
mov
lods
fmul
adc
mov
xor
jmp
and
pop
push
pushf
outs
inc
not
adc
jp
pop
and
lahf
jo
and
enter
(bad)
push
push
lahf
pop
outs
daa
out
jnp
loope
repz
inc
jle
es
push
xchg
(bad)
pop
arpl
xor
mov
dec
loope
ficomp
movs
push
repnz
fs
and
scas
stc
xchg
loop
push
and
repnz
std
arpl
mov
jo
xlat
lahf
(bad)
inc
(bad)
aam
xlat
xor
mov
imul
ficom
daa
in
xchg
bound
pop
or
mov
push
add
pusha
pop
jg
mov
arpl
mov
cli
test
xor
inc
gs
lods
mov
sub
leave
iret
pop
push
jp
je
adc
sbb
mov
dec
xor
sbb
xchg
cwde
mov
cmps
mov
ss
dec
scas
cmp
in
sub
cmps
lds
add
cmps
pop
(bad)
scas
mov
hlt
pop
push
scas
repnz
cmp
(bad)
mov
fisub
sub
aad
jno
mov
adc
jl
je
sbb
gs
std
mov
pop
inc
retf
jg
pop
dec
ja
mov
enter
in
xchg
mov
call
or
ret
mov
mov
pop
jp
xchg
(bad)
mov
xor
shl
ret
lock
rcr
test
sbb
les
mov
aad
pop
or
dec
adc
adc
out
add
cdq
lods
push
out
mov
add
stos
push
out
aas
xor
push
int
in
inc
mov
push
xchg
das
neg
jge
xor
sub
ja
push
stc
or
arpl
jle
jno
jg
in
ficom
das
getsec
cs
adc
int3
push
cmp
sub
jmp
ins
adc
push
dec
mov
pop
xchg
push
pop
or
ficomp
cmc
cmp
inc
(bad)
pop
sbb
out
cmps
movs
out
imul
sbb
movs
sbb
clc
das
aad
iret
inc
mul
jp
dec
popa
ret
sub
or
and
push
cmp
enter
inc
ins
sbb
clc
sub
pop
xor
sbb
pop
cmps
sub
add
(bad)
(bad)
in
add
lahf
stos
xlat
sar
out
and
xor
cli
dec
add
or
sahf
jnp
bsr
sahf
mov
mov
into
aad
into
in
cmp
call
adc
fadd
aad
aaa
scas
pop
addr16
in
paddsb
or
lea
dec
add
push
loop
fs
int
inc
ror
mov
mov
sub
sub
hlt
idiv
out
test
out
pop
shl
adc
add
scas
fstp
push
jnp
and
test
mov
clc
mov
stos
std
enter
cdq
mov
sub
call
dec
mov
bnd
clc
mov
cdq
lods
test
in
or
sbb
pop
or
sub
addr16
lock
cmp
retf
sub
hlt
and
mulps
cmp
push
inc
dec
add
sub
sbb
ins
push
movs
jp
leave
dec
imul
loope
mov
fimul
sbb
ds
pop
push
dec
jecxz
repnz
push
fild
add
es
xchg
and
xchg
or
mov
cli
jno
mov
pop
ds
and
jl
push
cmps
inc
cmc
jle
ret
push
shr
fwait
jbe
shr
adc
dec
pushf
rol
ins
ret
arpl
jge
mov
push
lock
inc
xor
lahf
add
add
mov
push
xchg
mov
xchg
xor
ins
fisubr
inc
fs
retf
enter
mov
hlt
in
lods
xchg
dec
sbb
and
int
or
and
add
pop
fistp
sbb
loope
pop
shl
sti
popa
sub
in
call
and
nop
mov
cdq
cmp
push
imul
(bad)
clc
or
pusha
add
rep
gs
push
stos
(bad)
jp
imul
add
lods
and
mov
adc
sbb
xchg
sbb
mov
add
inc
dec
dec
or
pxor
pushf
xor
call
pop
shl
stos
xchg
and
int3
outs
pop
pop
xchg
pushf
jo
mov
mov
loop
(bad)
pusha
movs
push
(bad)
js
mov
pop
pop
data16
adc
(bad)
mov
push
jo
jle
and
or
pop
or
sbb
stos
jecxz
mov
dec
inc
cld
jge
sbb
dec
push
aam
inc
(bad)
and
cmp
or
jae
mov
xor
stc
push
jmp
add
stos
icebp
sahf
aaa
stos
or
pop
bnd
bnd
adc
imul
in
pop
(bad)
dec
movs
adc
pop
push
sti
dec
mov
sti
or
cmp
mov
jne
cmp
adc
add
mov
loope
jnp
scas
gs
pop
pusha
add
in
fisttp
dec
sbb
dec
or
ins
cmp
addr16
or
dec
cld
ss
jnp
pop
rcl
lea
inc
mov
addr16
ja
(bad)
or
pop
sbb
xlat
ins
ja
bound
mov
push
movs
xchg
pop
jg
(bad)
int
fcmovbe
push
test
dec
scas
pusha
in
bound
jp
in
out
mov
test
(bad)
in
in
cmp
cmp
lar
fs
add
mov
mov
ret
(bad)
sbb
xor
sbb
fst
push
add
jmp
aam
fisttp
in
inc
jp
dec
sahf
pop
aaa
pop
ins
sub
ret
into
and
push
movs
jmp
int3
loop
sub
enter
popa
cmps
cmp
jecxz
ja
dec
sbb
xor
dec
popf
ins
lea
sub
js
cmp
arpl
test
push
rol
(bad)
es
pop
pop
xchg
in
dec
xor
mov
outs
mov
daa
sbb
xchg
out
mov
or
or
dec
xor
(bad)
ss
or
and
adc
sub
fstp
imul
lods
js
stc
mov
pop
(bad)
(bad)
lock
sub
(bad)
leave
jle
test
aam
inc
pop
sbb
ffreep
cmp
or
lds
jmp
movs
xchg
push
adc
mov
sahf
or
shr
sbb
iret
daa
mov
fcom
jns
xor
xchg
(bad)
jl
in
stc
ins
repnz
inc
ins
push
mov
pop
ret
mov
jmp
es
pop
out
or
pop
mov
and
inc
sti
xchg
movs
lahf
push
mov
and
adc
cmp
pop
push
cs
mov
aas
movs
out
and
movs
stos
mov
push
shl
jmp
mov
mov
push
sbb
fsubr
mov
fild
xchg
xchg
and
jp
fld
push
(bad)
test
xchg
xor
lods
jecxz
or
retf
dec
pop
sbb
sbb
add
daa
aam
or
inc
pusha
adc
xor
in
mov
fcmovne
add
xor
enter
outs
mov
inc
mov
sbb
push
shr
loope
jo
pop
test
sbb
nop
jmp
push
mov
pop
adc
jno
add
fs
jnp
push
or
iret
into
mov
fwait
sbb
loop
in
jecxz
sub
mov
out
jp
leave
mov
dec
sbb
fwait
aaa
xlat
push
loope
scas
adc
sbb
(bad)
jae
int3
aas
div
pop
repz
retf
in
xchg
in
or
pop
dec
scas
sti
out
(bad)
xchg
rcl
pop
into
xor
mov
imul
int3
es
sub
int
mov
or
repnz
push
mov
inc
cmp
cmp
sti
shr
ret
xchg
mov
sti
out
ds
test
(bad)
sub
les
(bad)
shr
jno
lods
loop
ret
pop
data16
mov
aad
cmp
daa
out
test
jns
pushf
scas
cmp
mov
add
(bad)
dec
popf
jp
outs
mov
enter
xchg
push
shl
in
and
(bad)
dec
js
sub
fimul
and
mov
sub
(bad)
fdiv
call
push
dec
sbb
aas
das
(bad)
mov
out
cdq
pusha
dec
inc
sti
arpl
xor
lea
(bad)
(bad)
and
cmps
cmps
cld
sbb
push
xchg
jge
jo
mov
std
inc
mov
retf
inc
pusha
jo
(bad)
or
cmp
mov
push
ret
out
pop
push
aam
pop
lods
(bad)
cs
gs
ja
enter
hlt
xchg
or
or
jmp
enter
xor
fwait
loope
jno
adc
(bad)
mov
movs
mov
test
test
addr16
mov
inc
lods
jno
cmp
cmp
into
xchg
aas
mov
inc
scas
in
add
outs
add
xchg
shr
jb
cmps
dec
cmp
pop
pusha
bound
push
out
adc
jnp
lods
push
dec
cld
scas
mov
inc
mov
xor
push
js
or
ret
mov
pusha
pop
cmp
rol
les
rol
(bad)
aaa
enter
stc
jl
test
mov
pop
fst
push
arpl
sub
popa
cmc
repz
or
xor
int
(bad)
xor
iret
dec
nop
sbb
(bad)
jp
stos
mov
inc
push
dec
pop
inc
sar
jmp
js
cwde
xor
in
loopne
sub
cmp
cmp
push
mov
enter
pop
sbb
push
xchg
retf
es
fs
(bad)
sbb
xchg
icebp
xchg
cmp
mov
dec
stos
or
stos
jmp
pop
cmp
dec
jg
pop
pop
sub
cmps
jmp
add
ret
aam
xchg
and
and
or
inc
ins
mov
mov
sbb
adc
cs
aad
mov
mov
push
and
(bad)
sub
pop
cli
cmp
xchg
fdiv
xchg
mov
addr16
rcl
in
(bad)
not
jbe
jb
xchg
mov
jns
and
push
add
ss
sbb
sub
sbb
sub
rcl
or
mov
jns
mov
cmp
mov
pop
mov
push
scas
sbb
lahf
out
pop
popf
fist
popf
in
sbb
xchg
mov
cld
sar
inc
int3
mov
mov
push
movs
xor
push
gs
xor
out
pusha
mov
ja
rcl
mov
push
es
pop
retf
aaa
mov
sub
(bad)
fnstsw
shr
adc
dec
fwait
loopne
aaa
cmp
xor
dec
xor
cmp
cmp
cmp
pop
sub
mov
retf
fidivr
into
loopne
jge
xor
loopne
test
fisttp
pop
jnp
lea
aas
test
ins
repz
sbb
mov
rcl
out
jp
js
jg
fsubr
cmps
push
fwait
(bad)
jl
neg
inc
or
xor
jmp
and
jno
xchg
je
xchg
xchg
ins
daa
jg
aam
cmp
cmp
or
(bad)
movs
pushf
inc
not
xor
xchg
lods
push
ficomp
js
mov
les
hlt
std
jmp
pop
xor
xchg
lea
push
rcr
icebp
jnp
es
push
(bad)
and
add
xor
les
xchg
add
cli
cmp
retf
cld
or
xchg
jle
imul
xchg
iret
jmp
iret
mov
into
test
rcl
mov
inc
int
out
clc
sub
push
jmp
push
ret
clc
xlat
lods
inc
and
ret
sbb
push
push
jae
sbb
ret
mov
jmp
inc
cmc
fcom
sbb
dec
mul
dec
btr
cmovl
sub
popa
add
jo
sti
add
rcl
add
mov
sub
mov
adc
jbe
retf
repnz
repnz
or
inc
dec
adc
div
push
dec
and
pop
dec
ret
mov
(bad)
jle
sub
and
dec
xchg
mov
fmulp
sbb
add
fidivr
daa
call
adc
add
sub
mov
pop
pop
jns
popa
dec
push
and
xchg
hlt
inc
cwde
shl
daa
rcl
pop
mov
test
pop
in
jl
or
int3
lds
pushf
fnstenv
lods
movs
addr16
push
stc
cwde
jl
xchg
(bad)
jno
fstp
xor
adc
data16
aaa
mov
xchg
xchg
idiv
jb
or
shr
je
mov
mov
repnz
inc
stos
mov
jg
pop
rcl
retf
scas
pop
pop
inc
inc
les
mov
jo
sub
shl
mov
pop
into
mov
push
aaa
sahf
cmc
cmp
jo
dec
scas
push
repz
int3
frstor
inc
jmp
loopne
(bad)
pop
sub
add
(bad)
jbe
push
enter
in
jp
push
bound
xor
add
arpl
cwde
imul
xchg
sbb
inc
out
(bad)
sti
add
int
xchg
fs
(bad)
stos
dec
sbb
out
jmp
cmc
push
inc
imul
adc
outs
cmps
mov
outs
rcl
xor
outs
xlat
out
es
outs
add
inc
jle
rcr
jmp
push
in
mov
lahf
out
pusha
clc
lahf
dec
ins
xchg
(bad)
in
or
inc
push
test
xor
imul
xor
and
mov
jecxz
adc
pop
add
push
pop
retf
iret
shr
cmp
or
mov
pop
retf
or
repnz
and
dec
pusha
and
clc
rcr
aas
add
xor
ds
inc
mov
sub
std
xchg
mov
mov
and
inc
xor
xlat
mov
push
les
cmp
jecxz
pop
ret
je
jp
push
out
std
pusha
push
lods
fiadd
jp
or
hlt
repnz
rol
aad
fld
repnz
sub
inc
js
jge
loopne
jnp
cmc
xchg
push
push
rol
mov
ja
sbb
in
jnp
loop
xchg
adc
cld
inc
idiv
mov
mov
loop
fstp
jge
push
adc
jge
lahf
xchg
popa
fld
push
fs
mov
mov
retf
mov
mov
test
mov
leave
adc
movs
and
xlat
fcomp
lock
popf
inc
dec
ret
dec
dec
std
mov
mov
mov
push
jge
push
push
mov
movs
xchg
(bad)
xchg
jo
push
test
xchg
int3
dec
(bad)
jecxz
sub
test
ss
sub
mov
cdq
mov
retf
aas
jl
adc
mov
xor
outs
xor
test
pop
adc
mov
pop
pop
sbb
lods
mov
mov
inc
jb
sahf
mov
pop
hlt
push
icebp
addr16
mov
test
(bad)
jmp
cmp
dec
cmc
inc
and
push
leave
fdivr
jo
xor
lds
mov
sbb
adc
add
test
rol
push
add
scas
ins
or
sub
cli
nop
or
cmp
mov
jecxz
jb
nop
jae
push
xchg
push
mov
jmp
lods
push
or
mov
mov
dec
inc
pushf
outs
push
lock
push
push
push
cdq
shl
pop
mov
mov
imul
gs
imul
das
loopne
les
bound
and
pop
inc
mov
inc
outs
adc
pop
mov
ss
push
ret
dec
rol
(bad)
pop
jae
sbb
daa
pop
into
inc
in
cmp
mov
and
push
and
shr
sub
pop
test
add
pop
out
pop
jmp
leave
xor
sahf
fxch
sub
jl
dec
jo
(bad)
mov
lods
in
mov
pop
mov
mov
adc
jo
lahf
mov
inc
dec
imul
sbb
inc
std
pop
pop
daa
add
mov
mov
test
mov
jl
cmp
lahf
sub
fidivr
jno
fst
out
nop
arpl
loop
fcomp
pop
xchg
dec
fs
das
test
inc
stc
xchg
add
ja
pop
into
frstor
mov
jno
retf
in
mov
inc
int
sub
mov
cmc
psubq
push
adc
enter
leave
stc
or
adc
movs
adc
inc
test
dec
xor
addr16
add
mov
into
mov
pusha
mov
dec
retf
movs
in
je
out
lock
jl
bound
sub
xor
rcl
pusha
leave
fnstenv
int
aad
call
mov
cmc
push
fiadd
sub
sbb
sub
adc
cs
(bad)
push
inc
xor
xor
adc
imul
inc
cmp
jns
mov
inc
aas
bound
fdiv
push
sbb
outs
addr16
dec
outs
mov
cmps
adc
xchg
gs
and
movs
gs
cli
push
imul
fstp
mov
mov
ret
mov
dec
test
adc
pop
xchg
fiadd
xor
mov
ret
lahf
aad
cmp
movs
aas
in
(bad)
cmp
lahf
or
sub
lods
adc
jg
xor
mov
sub
(bad)
pop
xor
ror
xchg
push
data16
call
or
jne
popf
in
and
imul
xchg
mov
sbb
dec
and
dec
mov
in
mov
xor
mov
shl
sub
icebp
or
(bad)
cld
fdiv
or
pop
push
jne
pop
sbb
in
xor
shl
mov
dec
mov
xor
mul
inc
rcl
jle
cmp
jmp
leave
jle
dec
aam
cmp
cs
fdiv
push
dec
call
jl
scas
lods
arpl
ins
pushf
nop
icebp
jg
imul
shr
push
sbb
inc
mov
push
out
xchg
loope
xchg
lds
xchg
call
daa
jecxz
popf
sub
(bad)
call
mov
add
dec
jp
popf
xor
je
or
stc
sar
(bad)
in
or
movs
or
jge
out
jno
inc
push
fwait
repz
xchg
fnsave
mov
push
shr
lock
mov
xchg
mov
test
into
idiv
push
imul
jmp
imul
inc
lods
scas
repnz
push
xchg
ret
call
add
ds
jno
in
inc
mov
loop
das
push
mov
out
fsub
(bad)
cs
adc
dec
push
(bad)
xchg
cmp
fcomp
jb
push
xor
test
fsubr
shr
sub
icebp
cmps
push
dec
in
cmp
out
cmp
sahf
jle
dec
push
and
xlat
sbb
fcom
push
dec
xchg
jae
jae
mov
stos
inc
jle
and
iret
or
adc
aas
push
dec
jns
push
jmp
es
cmp
xchg
jmp
push
test
stos
jle
sbb
je
xor
add
js
jle
fsubp
aaa
inc
leave
xchg
xchg
pushf
dec
ss
add
or
jnp
js
push
fwait
xor
cdq
mov
fst
xor
jle
push
mov
mov
fsubr
aam
adc
or
xor
enter
xchg
(bad)
rol
sub
loopne
add
sbb
arpl
sub
jb
jl
dec
loope
sub
test
pop
sub
(bad)
and
test
shr
push
shr
cmp
xchg
aam
enter
jecxz
or
or
call
sbb
xlat
outs
aas
sbb
inc
xchg
aaa
je
outs
pop
pop
repnz
popf
mov
lock
push
aas
(bad)
mov
push
xchg
rcl
adc
popa
dec
shr
mov
lock
lock
iret
fild
out
mov
xchg
ror
std
and
sar
pop
popa
jb
in
adc
aas
mov
xchg
jmp
or
pop
mov
cmp
pushf
or
inc
outs
daa
adc
lea
jl
dec
or
xor
out
xor
sti
and
jmp
push
cmp
(bad)
mov
loop
aas
loop
xchg
iret
int
xor
mov
jl
iret
aad
and
jge
icebp
les
push
xchg
and
push
mov
xchg
add
fidiv
shl
jp
dec
jae
ret
jne
or
das
xchg
aaa
and
pop
or
pop
adc
sbb
jle
jae
mov
inc
cli
(bad)
xor
jg
mov
and
push
pop
test
sbb
jmp
push
or
nop
loop
pop
stc
dec
stos
push
imul
and
lea
lds
daa
enter
add
jnp
add
pusha
aaa
dec
or
outs
pop
dec
jmp
or
sti
jbe
jbe
repnz
pop
or
push
push
icebp
and
mov
cmp
mov
xchg
retf
xchg
fistp
in
shl
arpl
les
add
cmp
aas
loopne
cdq
fisubr
movs
out
mov
inc
and
xor
mov
mov
repnz
inc
sub
push
fadd
mov
rol
int
hlt
mov
in
aas
xor
cmp
sub
xor
repz
cs
jbe
dec
cwde
xlat
xchg
dec
mov
jns
sbb
push
or
mov
xor
lea
imul
adc
dec
jmp
push
add
jae
loope
inc
adc
jns
rcr
test
and
out
std
cmps
xchg
(bad)
sar
cmp
into
test
daa
fidiv
push
loop
add
push
jo
cmp
test
inc
sub
add
sub
ins
sahf
push
test
mov
cmps
jp
and
jmp
movs
jmp
(bad)
ins
sub
aaa
adc
mov
or
add
pop
mov
in
xor
cmp
mov
retf
push
ins
js
dec
mov
jecxz
lds
ins
xchg
outs
pop
cmps
fcom
inc
sub
xchg
sub
call
ret
push
or
xor
jle
fmul
mov
mov
dec
mov
popa
popf
stos
inc
xchg
out
aaa
sub
mov
test
pushf
cmc
add
sub
iret
pop
les
mov
cdq
shr
dec
sub
cmp
ja
inc
and
stos
mov
xchg
push
mov
or
push
mov
push
mov
gs
pop
cmp
inc
mov
in
ret
jns
loopne
mov
imul
lds
and
test
pusha
sub
cs
jle
cli
lds
and
das
jge
rcl
rcr
push
xor
retf
mov
xchg
test
enter
jae
xor
push
ja
add
dec
inc
loopne
movs
sbb
inc
inc
pop
fdiv
inc
stos
or
sub
mov
test
push
ds
lahf
sbb
unpcklps
mov
fs
bnd
push
pop
sub
ror
int3
dec
pushf
(bad)
sub
je
cwde
and
fidivr
sub
loop
inc
cmp
xor
sbb
cmp
mov
push
xchg
jnp
inc
lds
xchg
arpl
cmps
and
dec
add
repnz
xchg
jmp
jne
sar
int3
adc
xor
int3
or
(bad)
fwait
ss
lds
sub
and
repnz
or
(bad)
outs
adc
fcmovb
int
ret
ret
push
and
inc
or
cmp
cmp
or
ror
enter
rcr
mov
iret
sar
js
lahf
mov
and
jmp
lea
js
lods
int3
mov
outs
fsubr
add
test
pushf
test
in
and
lods
xchg
adc
push
jnp
mov
cmc
nop
loop
fwait
xchg
add
pop
scas
jae
push
inc
jno
push
outs
sub
push
std
aas
mov
xchg
jg
fs
aad
pop
in
test
jge
jns
sbb
adc
mov
push
daa
lods
(bad)
dec
ja
adc
mov
adc
sbb
call
mov
dec
adc
add
arpl
inc
sbb
out
lds
bound
or
rol
lea
mov
dec
pop
rcr
mov
outs
inc
pop
jge
ins
ror
jbe
jl
sub
call
rol
loope
ds
es
nop
sbb
xchg
ins
jo
cmp
or
mov
int
pop
enter
cmc
in
inc
outs
adc
ins
dec
ds
adc
cmp
icebp
sahf
sbb
loope
loop
xchg
or
fdiv
clc
and
lock
mov
and
repz
enter
xor
mov
ins
clc
mov
stos
mov
(bad)
(bad)
sbb
loopne
imul
data16
sub
add
js
jle
mov
aam
jnp
and
xchg
js
sub
(bad)
push
out
in
mov
jo
vpshab
and
(bad)
mov
pop
js
jg
pusha
dec
call
outs
dec
fcmove
shr
out
jnp
cmp
xor
fisttp
je
mov
sbb
xor
(bad)
rcl
ror
je
and
xchg
ins
jns
fcomp
jg
jae
push
mov
adc
dec
sub
and
jnp
mov
add
inc
xchg
push
push
xchg
pop
cs
sub
mov
fbld
scas
add
xchg
xor
mov
push
scas
icebp
mov
mov
lods
xchg
imul
or
mov
cmps
loope
mov
and
sbb
or
out
popf
mov
add
pop
push
jae
jno
daa
xor
push
clc
je
stos
(bad)
xor
and
add
stc
pop
mov
mov
fs
push
dec
pop
adc
xchg
xchg
mov
test
pusha
repz
jmp
push
mov
retf
setge
fadd
push
mov
or
mov
mov
test
push
ficom
dec
mov
mov
push
lock
or
es
ins
jb
xor
enter
jo
movs
imul
adc
push
repnz
fmul
test
loope
(bad)
in
mov
cmp
adc
dec
mov
cdq
inc
xchg
rcl
push
retf
xor
sar
adc
hlt
push
fmul
stc
popf
cli
xor
xchg
add
arpl
imul
shl
je
sahf
push
sbb
sub
addr16
test
xor
fwait
test
in
icebp
xlat
xor
mov
jae
jb
jmp
cmp
mov
xchg
cmp
dec
(bad)
cwde
lock
mov
(bad)
iret
pushf
adc
call
idiv
sbb
test
cli
cmp
dec
jmp
cmc
fld
push
jb
enter
outs
jecxz
or
or
sub
xlat
div
push
out
sbb
mov
xchg
or
inc
xchg
mov
push
outs
xchg
mov
sbb
inc
mov
pop
out
xchg
aas
dec
and
sub
add
push
jmp
jne
out
mov
mov
jl
cdq
dec
dec
mov
sti
jo
cmp
in
xchg
add
ja
push
xor
jnp
or
mov
cmp
call
ds
adc
mov
mov
and
or
cmp
cwde
xor
mov
inc
loopne
mov
xchg
outs
leave
jo
dec
test
push
xchg
push
fcmovnu
mov
int3
movs
(bad)
pusha
add
in
pop
(bad)
in
and
or
test
test
push
aas
fidivr
inc
adc
nop
loope
mov
(bad)
imul
inc
jb
jno
popf
test
in
push
outs
lea
mov
and
mov
aas
lea
std
ret
mov
mov
(bad)
(bad)
jmp
xor
cwde
dec
cdq
test
ror
push
jno
fbld
jmp
mov
cmc
jns
mov
fwait
lea
push
xchg
pop
sti
cmp
push
mov
pop
mov
mov
cmp
ja
loope
sub
cmp
or
mov
aad
das
inc
ja
je
sub
dec
inc
std
(bad)
mov
rcl
dec
(bad)
hlt
les
sbb
inc
push
and
sbb
dec
jne
jmp
daa
adc
movs
push
sbb
and
add
sub
stc
pusha
cmps
mov
push
jb
ror
int3
xor
in
adc
add
fcom
bound
sub
dec
mov
fimul
fcomp
sub
adc
inc
cmp
pop
and
stos
aaa
xchg
cmps
push
in
or
xchg
daa
sub
pop
push
sub
loope
ret
inc
push
ins
daa
call
retf
cdq
jnp
sbb
dec
mov
push
gs
add
mov
aas
mov
shl
cmp
in
mov
ret
mov
xlat
ret
ds
(bad)
jl
add
addr16
xchg
call
lock
retf
cld
sub
ins
jl
leave
or
xchg
pushf
mov
outs
dec
cmp
mov
jns
aam
aas
mov
das
imul
int3
fmul
in
push
test
xor
sbb
es
mov
pop
push
xchg
fstp
jb
jo
xor
lea
cmp
daa
cmps
ins
out
jo
mov
mov
outs
fdivr
imul
in
(bad)
add
test
jge
or
movs
test
scas
stos
jmp
aam
imul
mov
and
inc
fdiv
sub
adc
imul
mov
in
fimul
(bad)
lahf
dec
push
mov
jg
fs
cmp
jp
fadd
inc
mov
sbb
data16
bound
sub
cmp
cmc
inc
jg
jge
into
xchg
repnz
ins
(bad)
bound
xchg
sar
add
pop
xchg
imul
sbb
xchg
jne
mov
ja
(bad)
mov
(bad)
pop
xchg
lock
dec
lahf
adc
inc
push
inc
xchg
pop
cmp
bound
mov
dec
test
or
mov
and
pop
(bad)
dec
sub
clc
pop
xchg
inc
popf
stos
push
xlat
sar
pop
xor
pop
push
leave
dec
fdivr
test
ins
mov
in
pop
data16
pop
in
xor
jge
add
test
xchg
inc
popf
imul
xchg
shr
out
push
inc
leave
call
pop
test
test
pop
push
inc
add
sub
jmp
pop
scas
repnz
cmp
mov
pop
mov
adc
jl
dec
cmp
mov
in
mov
(bad)
jmp
push
pop
xor
test
ja
xchg
iret
pop
xchg
popa
xchg
arpl
adc
jl
mov
jb
sbb
dec
fld
sub
movs
sbb
mov
mov
mov
lock
scas
xor
ss
inc
pop
and
dec
mov
xchg
js
jno
in
ds
dec
cwde
add
pop
cmp
into
pop
pop
enter
repnz
cs
std
jge
mov
xchg
sbb
inc
aam
pop
scas
inc
add
cmp
sbb
in
lock
daa
xchg
lods
sub
jbe
jno
lock
add
mov
or
call
ins
pop
or
cs
test
imul
scas
test
xchg
dec
pop
mov
jns
dec
in
and
add
xor
dec
and
add
loopne
(bad)
cmp
aam
lea
mov
push
iret
sbb
fwait
mov
imul
inc
loope
out
mov
adc
add
cmps
mov
jne
fcompp
adc
shl
aas
jne
in
mov
pop
pop
call
out
dec
cwde
push
aad
jae
jg
inc
cmp
pushf
mov
call
xor
mov
cmp
pop
dec
xchg
mov
(bad)
pusha
sti
mov
pop
rol
std
push
(bad)
xor
xchg
mov
xchg
shr
or
or
or
mov
stos
cmps
inc
inc
jecxz
jg
add
pop
jae
jno
jg
xlat
das
jmp
movs
xlat
pushf
pop
xchg
ja
popa
xlat
cs
je
or
push
leave
mov
ss
mov
or
inc
outs
(bad)
xchg
fld
retf
add
dec
dec
mov
dec
jp
call
mov
mov
jo
cmp
scas
and
add
loope
xchg
lods
ror
sub
fld
shr
or
push
pop
ror
leave
scas
cmps
fstp
mov
lahf
add
mov
xor
jp
mov
in
or
pop
sub
cmp
ficom
cld
sub
out
inc
cwde
jge
xchg
sti
enter
(bad)
lahf
mov
adc
adc
mov
retf
push
fistp
mov
dec
bound
leave
sub
into
jecxz
cwde
lock
adc
jne
iret
outs
aam
jne
stos
or
and
cmp
std
out
mov
sub
faddp
push
fld
ret
fs
mov
sbb
enter
pop
aaa
div
jo
add
jmp
shl
es
idiv
or
mov
push
jecxz
ja
(bad)
pop
(bad)
stos
aas
sahf
ja
aad
mov
cdq
daa
loope
fadd
fisubr
mov
sub
push
push
inc
cmps
add
pop
xor
cmps
ret
xchg
imul
mov
cmp
cmps
mov
das
sar
mov
xchg
mov
jle
adc
mov
gs
cmp
test
cs
jo
(bad)
add
dec
push
jg
scas
mov
pop
sar
dec
sahf
fst
add
stos
jbe
ror
pop
call
bound
mov
pop
inc
ins
or
test
out
loope
pushf
push
add
add
int
test
fsubr
out
adc
das
shl
(bad)
in
js
scas
push
mov
or
dec
cmps
(bad)
mov
aad
xlat
ja
int
inc
rcr
add
push
ins
loope
bts
push
xchg
push
outs
jb
cmp
or
xchg
(bad)
icebp
cvtdq2ps
and
xchg
jecxz
pop
test
push
popf
ja
in
mov
push
pop
cmp
cmps
ds
retf
cmp
test
cmps
aas
imul
jne
outs
mov
cli
add
jb
aam
push
mov
test
jns
pop
test
mov
dec
aaa
fadd
pop
add
std
xor
inc
cmp
into
lods
movs
icebp
mov
call
add
clc
inc
dec
xchg
call
inc
add
adc
gs
and
daa
ret
mov
or
mov
jbe
aas
stos
xchg
dec
ret
mov
xor
jbe
mov
fisttp
mov
sub
sbb
ret
pop
xlat
sub
das
inc
adc
cmps
int3
mov
xchg
ffree
mov
in
push
xor
pop
inc
dec
pop
cdq
cmps
fld
out
stos
sbb
xchg
icebp
push
cmps
lock
inc
data16
addr16
test
dec
stos
dec
and
dec
outs
mov
into
xlat
leave
pop
push
mov
push
loop
pop
fld
fbstp
mov
icebp
dec
jns
adc
rsqrtps
dec
fstp
into
jp
xchg
repz
jmp
pop
retf
xor
not
sub
lahf
loop
mov
pop
mov
sub
mov
ds
popa
sar
outs
xor
std
sbb
hlt
inc
push
pop
jp
push
mov
call
sub
adc
fld
aaa
lods
or
or
mov
ss
cmc
bound
add
data16
movs
pop
cmps
test
imul
or
inc
repz
or
mov
or
xor
scas
mov
pop
fcom
fcomp
cmp
stos
or
lea
push
outs
jne
cmp
mov
sbb
leave
jle
mov
sbb
pushf
aas
mov
(bad)
loope
xchg
push
scas
les
stos
out
cmp
push
mov
jg
out
sbb
xchg
and
jecxz
pop
icebp
out
dec
or
push
pop
aam
inc
fs
and
xlat
adc
push
imul
push
ins
sbb
inc
mov
and
ja
add
mov
push
mov
or
and
dec
out
or
pop
mov
or
sub
push
pop
xchg
hlt
in
xchg
pop
and
iret
(bad)
mov
arpl
shl
xor
retf
jl
adc
repnz
daa
adc
xor
mov
mov
mov
jecxz
test
jo
neg
ret
sub
pop
add
xchg
arpl
mov
push
pop
cmp
bound
loop
popf
fcmovbe
in
adc
pushf
pop
jl
shl
shl
add
imul
push
(bad)
rcr
xor
cmp
mov
push
push
mov
mov
aaa
jg
jns
xchg
test
and
rol
or
fistp
paddsb
push
ds
mov
arpl
ja
sub
(bad)
xor
add
into
bound
mov
daa
es
mov
lods
xor
nop
ret
cs
jecxz
mov
bound
add
mov
push
ss
dec
mov
mov
es
movs
jle
fwait
or
call
daa
aas
fldenv
sub
ins
mov
fsub
xchg
adc
jb
push
push
ins
bnd
(bad)
scas
imul
mov
sti
push
repz
stos
sar
add
sub
xchg
cwde
sahf
retf
in
lods
cld
add
mov
sub
xchg
cld
adc
and
and
add
sti
pusha
popa
ja
adc
mov
inc
jmp
loopne
out
pop
js
pop
nop
sbb
push
int3
inc
stos
sbb
push
sub
jmp
movs
jnp
mov
std
ds
cld
jmp
pop
call
and
add
xor
and
daa
pop
sub
cmc
movs
mov
push
nop
int3
inc
pushf
clc
add
xchg
fnstenv
xor
xchg
xchg
push
xor
xor
ss
ret
push
push
cdq
pop
sbb
movs
dec
mov
daa
test
sbb
mov
mov
mov
mov
movs
jecxz
pop
loopne
xchg
inc
xchg
in
in
stc
dec
out
int
push
rcl
mov
ds
scas
add
js
jb
and
test
push
jle
lods
sbb
(bad)
xor
or
mov
mov
add
mov
sbb
xchg
sbb
jo
mov
mov
test
xchg
fwait
pop
shl
adc
aad
mov
cmp
pop
sub
dec
jle
cdq
dec
cmps
mov
xchg
xor
xchg
sbb
push
push
push
inc
jmp
cmp
inc
outs
in
pusha
dec
mov
in
push
pop
enter
xchg
cmp
jecxz
pop
mov
adc
cmc
fisub
lock
mov
dec
ja
call
call
sti
pop
mov
mov
das
in
sar
add
xchg
adc
jns
fdivr
pop
les
cs
outs
mov
xor
dec
add
mov
in
iret
fcmove
cli
jnp
push
int3
xlat
or
iret
hlt
popf
ins
mov
dec
gs
adc
mov
pop
shl
jge
shr
dec
cwde
fwait
adc
or
pop
xchg
dec
jl
mov
popf
or
or
pop
cmc
pop
sub
loop
inc
jle
ds
popa
jb
cmc
cmp
mov
pop
popf
mov
add
cwde
xor
test
outs
popa
clc
shr
pop
loopne
clc
and
mov
and
rcl
mov
loopne
cmps
cmp
inc
jae
shr
(bad)
mov
outs
and
xlat
stos
add
add
push
add
sbb
push
sub
add
retf
cmp
call
mov
xchg
mov
inc
jecxz
pushf
cld
into
inc
sar
stc
(bad)
data16
sub
mov
out
ret
adc
mov
int3
mov
cmc
mov
fmul
test
lock
aad
or
xor
out
cmps
fcomp
push
fidivr
loope
jl
inc
adc
pop
adc
xchg
add
stos
and
retf
iret
inc
sbb
daa
adc
(bad)
dec
stos
jbe
(bad)
stc
adc
and
mov
sti
mov
sub
sub
cdq
test
test
jbe
and
imul
sub
add
ror
call
lods
div
ss
imul
aam
sahf
out
mov
dec
push
popf
xrelease
mov
inc
cld
test
inc
mov
ret
pop
inc
xlat
in
stos
jle
cmp
and
pop
cmp
mov
lock
aam
adc
cmp
xor
pop
adc
jmp
div
and
mov
pop
aam
mov
sahf
fmulp
pop
cwde
scas
xchg
addr16
jo
xchg
out
nop
ret
repz
imul
nop
popa
or
jle
js
call
add
(bad)
cdq
cmc
mov
cmp
jecxz
cmp
jg
sub
retf
nop
pop
pusha
aas
ret
repz
sub
mov
adc
lea
mov
jnp
fnstsw
and
jle
jle
sti
inc
into
push
int
cwde
mov
jl
and
push
fnstsw
(bad)
push
cmps
xchg
or
mov
add
push
mov
sahf
mov
fimul
mov
movs
and
cmp
in
(bad)
mov
mov
mov
(bad)
mov
dec
hlt
(bad)
out
fist
mov
fwait
test
push
jp
jge
arpl
lods
jnp
xor
cmp
and
push
jo
push
ds
adc
(bad)
cdq
mov
mov
(bad)
inc
or
and
ins
and
inc
fsub
push
call
movs
cli
and
xchg
or
mov
loop
inc
inc
jae
and
jl
cld
fs
inc
loopne
push
in
daa
dec
and
mov
mov
push
jnp
cmps
loop
ja
scas
sti
mov
in
add
push
lahf
xor
xor
pop
add
mov
pusha
std
out
sub
pop
push
sub
mov
mov
cmp
mov
jmp
ss
mov
loop
in
adc
inc
dec
cld
xchg
sar
es
jmp
pop
cmps
add
xlat
outs
cwde
aad
cmp
lock
stos
out
pop
mov
(bad)
mov
scas
mov
arpl
dec
es
mov
cmp
rol
lods
jg
cmp
clc
mov
add
or
shr
push
cmp
xchg
leave
je
push
cmp
cli
xor
call
repz
cmp
xchg
test
ret
mov
out
cmc
inc
dec
adc
dec
sub
or
ja
push
xchg
adc
push
movs
inc
imul
jl
mov
pop
aaa
popa
ret
pop
ror
push
scas
into
xchg
jo
mov
nop
inc
jo
out
jae
or
or
outs
mov
pop
jp
test
pop
jne
xor
jecxz
mov
leave
inc
xchg
xchg
jb
mov
cmp
xor
xlat
and
xchg
(bad)
nop
popa
xchg
push
repnz
and
cmps
shl
xlat
mov
xchg
cmp
or
xlat
call
cmp
pop
in
and
js
ret
adc
fidivr
fild
mov
cmp
mov
jmp
mov
ret
sub
lahf
leave
(bad)
fs
ss
sub
cwde
push
fild
cmp
xlat
(bad)
or
cmps
mov
push
cwde
xor
adc
push
mov
in
arpl
les
and
aaa
push
mov
inc
repz
adc
fld
call
jmp
dec
mov
loop
aaa
and
lods
mov
xchg
pop
jp
pop
data16
jp
mov
aad
out
and
imul
sbb
ss
mov
fiadd
mov
xor
mov
lds
and
dec
inc
sub
add
xlat
and
in
into
sti
out
cli
xlat
cmp
movs
shr
adc
cmp
xor
clc
and
cmp
inc
je
cmp
lahf
mov
fcom
repz
retf
into
fnstsw
sar
push
sar
xor
enter
(bad)
cmp
pop
repz
xor
inc
inc
jmp
inc
in
aam
push
jbe
jno
jmp
mov
jo
push
xchg
mov
lea
gs
aas
mov
mov
sub
(bad)
sti
xchg
mov
ret
sub
ret
add
lods
xor
mov
mov
test
adc
sub
imul
mov
push
je
rcr
and
(bad)
xchg
jge
push
int
imul
fwait
adc
imul
lahf
mov
fs
shl
clc
retf
iret
gs
stc
cmp
das
out
sub
jmp
in
sub
je
add
repnz
mov
jno
push
sti
nop
fldcw
and
ror
fucomi
shl
shl
xor
xchg
ss
adc
xchg
pusha
idiv
sbb
dec
adc
or
addr16
sbb
or
cmp
int3
push
xchg
addr16
or
jb
dec
jo
pop
cli
and
xchg
mov
adc
sti
popa
pusha
xor
mov
fadd
mov
iret
test
retf
xchg
push
mov
push
je
adc
test
(bad)
and
cdq
dec
cld
mov
jmp
sahf
ret
sbb
or
inc
mov
jbe
xor
sbb
push
xchg
stos
mov
xor
cmps
sar
xor
ins
loope
jl
add
stos
push
cld
xchg
scas
push
adc
inc
sub
idiv
sub
data16
jo
fisub
iret
lods
mov
pop
push
cmp
lods
dec
leave
adc
push
mov
fdiv
shl
jo
cmp
mov
popf
adc
mov
outs
mov
mov
cwde
xchg
fcomp
(bad)
ror
cmp
retf
sbb
push
xchg
idiv
dec
out
enter
xchg
mov
xchg
ins
out
mov
sti
sub
inc
retf
jbe
mov
adc
xchg
dec
test
dec
fdivr
cmc
push
mov
mov
pop
mov
outs
jnp
retf
jge
fistp
xchg
outs
add
push
jmp
add
sub
mov
adc
push
stos
sbb
and
movs
in
push
shr
repz
sub
push
data16
and
xchg
lahf
iret
xchg
test
movs
repz
leave
mov
sbb
inc
fwait
adc
or
sub
push
pop
fdiv
bound
cmp
or
jle
jg
pop
sbb
push
dec
enter
inc
lds
jae
add
jno
or
xor
int
cmps
xor
call
xchg
cwde
sub
push
bound
sub
xchg
adc
nop
dec
inc
jle
jbe
xchg
add
mov
pushf
mov
jg
dec
out
mov
dec
sub
stc
nop
inc
ret
out
jnp
jae
ret
jge
into
xlat
or
or
adc
outs
and
push
jmp
hlt
mov
and
mov
adc
xlat
gs
dec
shl
gs
clc
rol
pushf
push
jbe
and
mov
mov
mov
(bad)
mov
(bad)
pop
or
ds
imul
nop
dec
sub
mov
add
retf
sbb
adc
mov
dec
shl
sub
pop
out
sbb
call
adc
jp
or
sub
mov
dec
loopne
push
imul
or
push
or
lods
mov
data16
repnz
fld
pop
enter
ins
frstor
add
jmp
mov
jne
rol
int
cmp
pop
in
pop
mov
stc
out
mov
ss
inc
pop
jmp
sub
mov
or
popa
push
cmps
scas
ins
mov
add
push
in
repz
les
jg
push
add
(bad)
jno
or
je
fidiv
xor
ret
hlt
and
xchg
fisubr
xor
cwde
jne
es
aam
imul
sbb
inc
dec
rcr
pop
xchg
cmps
cmp
lea
aaa
mov
movs
xchg
xchg
sbb
jge
shl
jmp
add
into
add
xlat
or
mov
sub
adc
jb
xchg
sbb
xchg
les
repnz
out
icebp
mov
jo
mov
popa
pmullw
sub
mov
sbb
jae
mov
stos
xor
scas
cmp
les
in
xor
or
or
sub
shl
xor
xchg
xlat
jnp
call
dec
push
bound
rol
fsubr
jle
mov
push
cmc
push
xor
fistp
outs
jp
jnp
ds
jl
loopne
lds
popf
mov
aas
ins
add
push
jno
mov
xor
inc
or
adc
pop
add
pop
ds
repz
out
sub
ds
pop
or
lahf
pushw
mov
enter
jb
jae
popa
mov
mov
js
mov
fcmovbe
fldenv
and
xor
xor
xor
nop
cmp
mov
gs
xchg
fld
xor
xor
icebp
cdq
pop
jmp
pop
loope
mov
dec
push
sbb
mov
icebp
mov
int3
cmp
test
push
rcl
setg
fcom
shl
iret
jmp
and
js
push
daa
mov
jne
sub
fidiv
pop
inc
pop
in
out
cmp
xchg
inc
xchg
nop
rol
mov
mov
jns
jo
inc
mov
mov
jmp
movs
icebp
adc
add
mov
lea
adc
aad
hlt
and
les
ja
inc
jnp
cmp
pop
rol
ret
in
rcr
add
or
jmp
call
call
out
adc
dec
and
fbld
lock
sbb
fisttp
in
fdiv
push
or
(bad)
out
repz
push
and
mov
cs
push
and
daa
aas
lods
inc
push
adc
bound
xchg
jmp
lahf
pop
(bad)
or
loop
cdq
test
lea
cli
(bad)
les
in
mov
jle
loope
iret
sete
sbb
sub
stos
pop
loop
scas
imul
arpl
pop
adc
cmp
ficom
lods
ins
gs
clc
mov
cmp
aam
lds
int
xor
in
mov
cmp
outs
cmp
inc
jne
push
and
push
pop
fist
jb
in
aaa
cmp
cmp
cmp
xor
push
(bad)
mov
inc
cdq
pop
setns
pop
push
add
adc
inc
(bad)
rol
add
mov
bound
pop
push
push
mov
mov
ins
push
lea
stc
push
(bad)
loop
mov
add
xchg
test
aam
fwait
dec
fimul
add
jae
push
mov
pop
out
cmp
out
cs
sub
mov
adc
push
les
gs
mov
sbb
xor
xchg
adc
test
call
fist
mov
iret
adc
push
pop
dec
div
ret
push
call
into
jne
mov
fisttp
jo
cld
leave
icebp
push
lods
fdiv
das
icebp
pop
mov
xchg
pop
jno
adc
ret
call
adc
or
pop
sub
data16
and
and
xor
cld
mov
ret
and
dec
in
jl
dec
dec
mov
cli
repnz
dec
fwait
aam
iret
or
das
pop
dec
inc
rcr
jmp
lea
fcomp
leave
pop
loopne
dec
sub
dec
xchg
fcom
add
mov
jp
jmp
imul
sar
mov
adc
cmp
add
dec
idiv
dec
retf
and
xchg
cmp
outs
inc
bound
lahf
popf
xchg
dec
(bad)
imul
xchg
inc
outs
mov
sbb
dec
shl
jnp
bound
lea
pushf
pop
lods
call
rcl
push
scas
sbb
pop
retw
jmp
bound
mov
retf
imul
ficom
mov
movs
cmp
shr
jo
nop
stos
cmp
nop
push
adc
push
add
jg
outs
push
mov
inc
push
movs
xor
inc
mov
outs
jae
mov
push
xchg
call
pushf
aas
scas
mov
(bad)
mov
test
mov
gs
pop
sahf
xor
xlat
enter
mov
add
mov
dec
in
frstor
mov
jbe
pop
inc
hlt
outs
mov
push
mov
ds
push
xor
and
cmp
mov
mov
cs
fdiv
mov
fist
xchg
jl
mov
into
ds
pop
or
xchg
add
mov
or
lods
xchg
mov
mov
das
rcr
(bad)
fbstp
sub
loopne
inc
pop
pop
jmp
aam
xor
fcom
mov
and
fimul
call
mov
cmp
(bad)
push
mov
iret
inc
mov
push
stc
push
jo
mov
inc
inc
add
adc
adc
loope
and
pop
in
adc
ror
cmps
xchg
rol
lods
fpatan
push
pop
or
pop
xor
sbb
fisttp
xor
dec
xor
adc
jns
jmp
imul
and
ret
xor
jecxz
inc
push
mov
push
jl
arpl
adc
ins
jge
xor
or
mov
dec
fnstcw
xor
iret
pop
adc
or
mov
retf
pop
jne
ds
fs
xchg
and
call
pop
aad
cmps
or
outs
pop
pop
out
repnz
xchg
test
mov
mov
scas
sub
sub
push
lds
iret
mov
mov
ret
(bad)
gs
mov
mov
jg
mov
stos
pop
add
mov
xchg
gs
jecxz
jns
test
sub
jno
out
outs
inc
lahf
mov
(bad)
repnz
adc
shl
mov
outs
fs
mov
in
repnz
inc
int
aam
fidivr
popa
mov
bound
xchg
sbb
adc
or
and
pop
fstp
cmp
cmp
jle
sub
add
pop
in
ja
lods
lods
and
mov
or
push
cmp
push
popf
or
ss
pop
leave
jmp
or
and
push
icebp
sbb
cli
ins
cli
sbb
sub
xchg
loop
rcr
lds
cmps
(bad)
jg
cwde
sub
ret
jb
aas
iret
and
in
ror
pop
retf
jbe
aad
rcl
mov
les
mov
push
lahf
lahf
jbe
loop
call
shl
imul
xchg
jnp
stos
cli
dec
jmp
jp
scas
and
aaa
retf
leave
dec
(bad)
in
outs
ficom
out
push
arpl
mov
sbb
mov
pushf
gs
out
inc
adc
or
fstp
and
stos
popa
nop
stos
dec
les
lahf
jbe
push
nop
daa
daa
outs
sbb
cmps
das
mov
shl
adc
cmp
inc
dec
fcomp
jnp
les
pop
sbb
fcmovne
repnz
es
sub
neg
or
pop
or
fwait
imul
(bad)
xchg
movs
dec
inc
add
inc
lds
lods
and
and
(bad)
lods
sub
dec
or
push
mov
mov
pop
bound
clc
jmp
pop
add
jmp
(bad)
fiadd
jg
hlt
stos
mov
data16
and
dec
es
push
adc
arpl
into
(bad)
dec
cmp
or
int
dec
mov
pop
xchg
lods
pop
cmps
(bad)
pushf
push
cmp
daa
lea
int
cmps
sbb
jbe
in
jne
pop
mov
pop
dec
xchg
pushf
cmp
in
and
mov
jg
addr16
arpl
aam
(bad)
cmp
mov
loopne
nop
mov
jle
mov
mov
mov
or
(bad)
mov
pop
push
cmc
out
xchg
jg
mov
movs
js
push
inc
xchg
mov
data16
sahf
mov
xlat
movs
and
cdq
fstp
mov
icebp
cmp
mov
aad
loope
pushf
lahf
lods
adc
sbb
push
stos
call
mov
out
or
pop
dec
fst
repz
push
fistp
test
jne
test
cmp
aad
mov
cmp
daa
mov
clc
js
out
or
pop
fnstcw
bound
loopne
out
out
idiv
sti
push
aaa
inc
test
mov
pop
pop
pop
cmps
(bad)
adc
sbb
(bad)
inc
cmp
mov
adc
add
mov
xor
iret
sub
das
in
sbb
pop
mov
fld
jp
pop
xor
xchg
aad
xor
sbb
scas
int
(bad)
movs
or
out
fld
mov
sahf
pop
and
push
loopne
add
cmp
(bad)
enter
adc
jns
jno
inc
not
pop
jae
addr16
sti
adc
rcl
mov
push
pop
hlt
sti
jae
jecxz
cmp
dec
mov
ins
idiv
cmp
loop
sti
push
into
xchg
and
(bad)
imul
stos
pop
repnz
call
inc
(bad)
(bad)
xor
xor
ret
sub
sub
lods
dec
out
jno
jle
sub
xor
add
xchg
clc
call
stos
xchg
mov
xor
lahf
dec
hlt
out
ret
ror
retf
mov
aaa
cwde
mov
adc
out
dec
enter
xor
and
xchg
fst
mov
xchg
fcmovbe
mov
pop
sti
adc
push
push
fmul
adc
(bad)
cmc
test
lods
sbb
sub
sub
retf
loope
imul
xchg
retf
mov
mov
or
sti
mov
dec
mov
outs
rol
cld
scas
out
jecxz
icebp
in
inc
mov
out
xchg
pop
mov
cmp
add
adc
adc
ja
test
(bad)
fistp
rcr
adc
inc
sbb
into
ins
pop
out
jbe
and
cmp
push
sbb
jg
inc
call
sub
fwait
adc
add
das
(bad)
fcomp
xchg
push
jbe
and
sbb
add
retf
xchg
inc
ja
cmps
cmps
call
mov
ret
mov
addr16
hlt
fisttp
mov
fnsave
push
ret
daa
rcr
mov
jb
or
jge
xchg
push
push
loope
call
fcomp
xor
cmp
bound
lock
shl
(bad)
into
fsub
(bad)
jb
sbb
inc
jge
xchg
push
imul
fld
add
mov
mov
jno
pop
mov
pop
jno
fstp
pusha
pop
cdq
mov
push
in
add
(bad)
sub
shr
cs
aaa
bound
sbb
jne
shr
fucomi
or
mov
(bad)
test
mov
(bad)
out
(bad)
or
or
frstor
fbstp
sbb
scas
in
sub
mov
cli
ins
fisttp
loope
jo
lds
mov
rol
push
mov
mov
les
retf
pop
cmps
jno
add
call
in
out
pop
pop
inc
nop
sub
add
push
xor
mov
lea
rcl
or
fld
jmp
std
pop
cmp
dec
mov
and
or
and
inc
sbb
dec
mov
gs
(bad)
jno
push
mov
lods
out
popa
sub
fsubr
sbb
outs
xor
movd
cmp
and
dec
ins
add
call
add
push
fwait
xchg
inc
call
sub
mov
xchg
cmc
call
push
pop
repz
pop
mov
cdq
clc
jns
inc
mov
iret
(bad)
cmp
aas
push
stos
daa
fwait
outs
mov
adc
cmp
outs
mov
inc
dec
adc
(bad)
stos
adc
push
repz
push
imul
sub
inc
addr16
cmp
arpl
out
inc
xor
nop
jp
jg
sbb
inc
mov
dec
add
int
int3
loope
fadd
mov
push
inc
mov
sbb
and
inc
fstp
jp
and
jmp
dec
fcomp
push
fdiv
mov
dec
xchg
aam
dec
je
(bad)
push
sbb
imul
cmp
sub
dec
outs
push
mov
jo
or
stc
fst
push
mov
and
daa
and
(bad)
fst
lahf
or
and
mov
in
ins
xchg
out
ret
loop
push
out
mov
int
fidiv
sub
sbb
and
pop
icebp
inc
lock
mov
repz
adc
call
cmp
cmc
jae
xor
add
stos
aaa
mov
movs
and
jnp
ins
jmp
pop
fcom
int3
iret
cmps
mov
rcr
scas
inc
addr16
jl
xchg
jno
mov
xchg
xchg
pushf
dec
push
sub
pop
mov
jbe
xor
inc
scas
call
adc
push
mov
test
aad
(bad)
fisubr
jge
adc
cld
int
imul
aaa
push
xchg
mov
cmp
xor
and
(bad)
jge
dec
adc
add
mov
or
enter
sbb
sbb
mov
mov
movs
pop
stc
lahf
mov
push
jb
push
mov
frstor
jg
pop
adc
shl
jmp
int
arpl
and
mov
and
movs
addr16
xor
pop
adc
xchg
lds
jecxz
rcr
mov
pop
outs
mov
ds
cmp
xchg
cmp
sub
stc
(bad)
jge
int3
xchg
push
cmp
lods
or
add
jbe
int
out
data16
ins
sub
xchg
mov
sbb
adc
push
xchg
jmp
cmp
arpl
movs
xor
xchg
scas
stc
cmp
inc
movd
arpl
rol
scas
mov
test
dec
rol
and
(bad)
mov
add
test
lock
lods
dec
mov
loope
aaa
cmp
out
outs
sbb
stc
(bad)
cmp
ja
add
mov
test
dec
mov
xor
lea
outs
pop
(bad)
sti
ins
pusha
dec
mov
sub
scas
mul
repnz
popw
pop
movs
pop
shl
add
arpl
add
sar
aad
js
mov
xchg
inc
(bad)
jnp
cmp
rol
xchg
mov
fcomp
inc
xchg
mov
lods
push
jno
jne
je
pop
mov
add
shl
jns
mov
push
add
pop
xor
push
adc
and
and
gs
adc
mov
out
add
outs
add
xchg
mov
loopne
inc
hlt
pop
add
cdq
sub
or
add
mov
shr
int
and
or
or
idiv
or
gs
scas
repz
in
mov
mov
gs
mov
inc
sti
adc
add
shl
mov
ds
and
pop
movs
or
call
cld
outs
jmp
aad
outs
aaa
cwde
push
add
stos
nop
dec
jo
repz
lods
(bad)
imul
push
mov
repnz
lahf
mov
or
rcr
xor
(bad)
fldenv
add
xlat
adc
and
xchg
sub
jb
mov
inc
add
xchg
je
sbb
push
ret
or
mov
es
leave
mov
or
pop
fadd
scas
jl
mov
cwde
sbb
add
lahf
mov
in
call
out
test
push
cwde
pushf
add
retf
pop
lea
push
or
jae
jecxz
add
xlat
push
mov
mov
add
push
ins
clc
jp
ror
int
repz
in
inc
push
jecxz
jge
lds
inc
outs
nop
push
inc
hlt
iret
(bad)
cmp
dec
icebp
sbb
nop
outs
inc
xchg
icebp
push
jge
ja
lods
es
mov
shl
js
xchg
sbb
add
push
lods
sti
dec
xchg
addr16
mov
in
(bad)
jmp
add
aam
mov
dec
cld
cmc
mov
enter
movs
jo
push
pop
push
cli
add
inc
arpl
jle
jmp
jmp
xchg
out
pop
jb
push
iret
ja
inc
xlat
xor
inc
mov
xor
popf
push
sub
scas
jmp
or
inc
jb
lods
and
(bad)
sahf
aas
clc
mov
or
push
out
xlat
add
loopne
stos
aaa
sbb
in
and
xchg
loop
fmulp
mov
xor
out
inc
popf
mov
outs
xor
ins
mov
popa
xchg
and
outs
adc
cmps
add
int3
and
data16
adc
rcr
jbe
cli
push
add
cmps
data16
js
adc
sub
aaa
fcomp
daa
lods
sahf
imul
and
call
rol
(bad)
mov
scas
cmp
div
lock
sbb
clc
arpl
repnz
arpl
sahf
bound
stos
lds
adc
dec
imul
sub
arpl
pop
mov
sub
fldenv
dec
mov
inc
adc
sbb
loopne
(bad)
jmp
cwde
xchg
jp
dec
int
aas
jae
xchg
ret
test
jo
jp
aas
fdiv
call
rcl
cmps
pop
add
pop
enter
push
out
inc
repnz
inc
and
xchg
call
or
mov
xor
(bad)
aam
jmp
je
repnz
movs
sbb
shr
add
pop
aam
cld
dec
push
test
cmp
in
mov
sub
imul
add
aaa
repnz
sub
inc
dec
cmp
or
pushf
mov
jp
mov
and
jl
enter
inc
out
popf
retf
inc
xchg
in
mov
mov
mov
std
inc
or
xchg
in
and
inc
test
jmp
dec
inc
dec
cs
jecxz
pop
call
(bad)
mov
pop
push
inc
inc
loop
popa
push
je
fcom
sub
and
push
fild
xor
lahf
push
retf
xchg
and
adc
xor
cwde
sbb
pop
add
es
or
fadd
lods
xor
repz
fsub
int
sbb
ss
(bad)
retf
add
sbb
scas
loope
and
jno
(bad)
cmp
leave
fistp
jmp
mov
adc
stos
xchg
sbb
daa
sub
xchg
jmp
int3
push
retf
imul
inc
dec
dec
xor
sbb
push
mov
dec
xor
int3
jmp
xchg
cmp
pop
pop
and
and
arpl
mov
mov
xchg
inc
fdivr
call
clc
(bad)
sahf
out
pop
inc
popa
ins
std
movs
movs
jns
data16
call
ror
and
mov
inc
ret
mov
pop
mov
mov
leave
sub
les
and
adc
adc
inc
out
xor
lea
push
mov
ss
push
cli
push
jns
jmp
outs
pop
enter
in
jns
lea
or
les
xchg
mov
cli
inc
push
test
add
inc
call
jge
mov
pop
daa
adc
ret
popa
inc
mov
repnz
ins
inc
mov
enter
or
and
int
jne
test
lea
jno
cwde
sti
mov
xchg
je
pop
(bad)
div
fs
push
add
int3
dec
int3
inc
or
sbb
sti
ins
addr16
fcom
xchg
xchg
popf
jmp
outs
jmp
rcr
sub
inc
dec
mov
rcr
push
jmp
mov
fcmovne
std
jno
hlt
fwait
lock
leave
or
inc
push
ins
jmp
sub
adc
rcr
xchg
sbb
aam
inc
int
push
aam
mov
pop
jmp
adc
sbb
loopne
sbb
mov
imul
pop
iret
push
sbb
in
mov
pop
push
mov
jecxz
cdq
int
push
movs
jae
out
or
int3
add
mov
pop
and
stos
add
mov
ins
addr16
sbb
cmp
xchg
cdq
xchg
leave
or
sub
nop
(bad)
imul
mov
inc
jmp
xor
jne
aad
jne
and
das
and
arpl
daa
push
outs
xchg
cmp
mov
push
xchg
leave
jl
fist
leave
xchg
inc
mov
adc
xchg
and
mov
xchg
adc
addr16
mov
in
in
outs
dec
inc
lods
xor
xchg
dec
or
ret
pop
dec
not
inc
sti
stos
or
(bad)
xlat
pop
mov
int
jle
xor
scas
scas
int
fxam
cmc
push
sbb
xor
inc
popf
fist
in
lds
das
and
jp
clc
lea
cmps
push
xlat
xchg
arpl
in
mov
add
add
stc
adc
(bad)
mov
int3
pop
adc
xchg
aas
mov
js
push
ror
xchg
test
mov
jo
(bad)
out
mov
inc
inc
es
or
(bad)
pop
int3
mov
adc
cwde
add
jb
es
sbb
outs
test
jmp
push
(bad)
pushf
loop
mov
ss
xchg
cmp
arpl
ret
or
not
(bad)
xchg
pop
jge
fwait
dec
pop
jmp
call
and
inc
xor
(bad)
mov
or
sbb
sub
jne
test
mov
inc
lea
cmp
pushf
or
shl
test
inc
or
in
sbb
out
ins
sbb
hlt
adc
cwde
sbb
fs
mov
xor
push
push
jns
mov
in
xchg
mov
fimul
pusha
and
shl
(bad)
out
cwde
jmp
mov
push
xchg
xchg
ret
push
out
call
sti
jno
sub
sub
pop
arpl
pop
mov
xor
sahf
push
cs
and
aaa
int3
in
dec
out
inc
scas
pop
inc
fist
lods
add
or
lods
mov
inc
mov
jmp
movs
and
cdq
mov
adc
std
pop
stc
mov
lea
adc
fist
push
ret
mov
sub
cli
dec
sbb
daa
sbb
cmp
int
mov
rcl
pushf
test
cwde
or
adc
js
inc
inc
mov
in
mov
jle
add
dec
sbb
arpl
movs
dec
adc
pop
pop
shr
jmp
inc
jg
sub
rcl
nop
xchg
jbe
sahf
cmp
ds
bound
arpl
push
jmp
xchg
jns
inc
mov
gs
xchg
add
das
out
test
pop
cdq
cs
xchg
cs
mov
popf
add
and
or
xchg
test
imul
call
movs
pushf
cli
call
das
cs
aam
cwde
inc
dec
pop
mov
mov
push
mov
push
push
clc
sub
xlat
call
or
retf
push
cmp
ds
shr
ret
xchg
jg
pop
pop
adc
lahf
or
test
movs
pop
retf
dec
icebp
enter
fld
mov
popf
mov
pop
and
loopne
jbe
mov
lahf
ds
(bad)
inc
test
out
(bad)
pusha
or
mov
dec
and
sbb
sar
xchg
push
add
movs
aaa
cmps
movs
nop
pop
ffree
mov
addr16
out
lds
add
test
sti
mul
stos
mov
dec
lea
jb
cmp
jno
sub
mov
jmp
cli
lods
adc
or
outs
pop
mov
xchg
adc
mov
mov
mov
jns
push
aaa
cmps
idiv
add
inc
and
pop
sbb
test
push
shl
stos
ficomp
jnp
sbb
jg
push
ins
xor
mov
add
mov
call
outs
hlt
or
mov
add
fbld
ja
ja
inc
in
ss
je
jne
movs
add
or
pop
add
xchg
pop
and
pop
out
fnstsw
fwait
jae
ror
imul
or
stc
cmp
cmp
fcomp
mov
push
sti
xor
shr
aam
shr
sti
sbb
out
in
test
mov
fisubr
(bad)
scas
das
nop
sub
mov
mov
into
aas
imul
ret
adc
je
inc
inc
call
jnp
or
ret
mov
jge
fcmovb
jne
or
js
ret
or
dec
mov
mov
rol
ror
mov
ror
mov
add
test
sbb
and
gs
ja
aad
and
stos
das
jp
ret
lock
xor
test
loop
xor
fst
mov
xchg
xor
xor
xor
sbb
fnstsw
cli
pop
sbb
aam
das
movs
inc
cmp
add
mov
shl
xor
mov
push
call
icebp
outs
sub
js
xchg
pop
popa
ins
cmps
scas
fldenv
mov
pop
test
or
dec
out
jmp
mov
adc
enter
sbb
mov
cmp
ret
repz
(bad)
rcr
push
xchg
outs
add
push
mov
repnz
cmp
mov
cli
inc
or
add
or
imul
leave
dec
xor
jge
cli
fcom
xchg
ficomp
dec
or
scas
iret
enter
lds
jle
xlat
adc
jecxz
jmp
leave
inc
dec
aaa
iret
in
std
es
push
jecxz
aam
jno
loope
jge
ret
push
xor
leave
push
ret
pop
movs
xchg
pop
dec
lods
adc
inc
pop
mov
fiadd
sub
call
mov
pop
sti
fwait
movs
jmp
fcomip
rcr
bnd
or
and
test
pushf
rcl
mov
push
jmp
std
xchg
mov
and
push
movs
add
iret
sahf
das
fs
sbb
adc
rcl
lods
ficom
ds
pop
jmp
ja
ins
jne
cmps
or
cld
pop
mov
mov
je
fiadd
mov
(bad)
std
loope
retf
sub
jp
or
jno
cld
jne
shr
mov
in
add
rol
das
cwde
push
xchg
jl
xchg
inc
add
ret
or
and
rcr
xor
and
pop
push
ret
xlat
movs
xor
imul
xor
retf
fs
dec
dec
sub
fstp
jle
imul
div
les
pop
ins
mov
xchg
inc
nop
retf
mov
sti
mov
inc
js
les
adc
or
pop
shl
jmp
xchg
ret
fbld
mov
mov
addr16
jecxz
cmp
mov
push
jne
jp
adc
aad
cmp
lods
ror
fld
or
jbe
jg
jmp
cld
dec
gs
sbb
push
jae
jae
or
mov
into
pop
dec
mov
xor
mov
jge
repnz
mov
(bad)
and
or
aaa
sub
xor
sti
jae
sub
fistp
out
stc
mov
into
in
pusha
ret
in
fs
inc
dec
popa
mov
cdq
sub
pop
mov
add
sbb
sub
cwde
fist
push
xchg
and
cmp
push
test
xor
outs
pop
dec
stos
xchg
icebp
xor
(bad)
(bad)
xchg
sbb
ror
shl
cmc
sub
cmps
pop
test
int3
mov
mov
mov
test
mov
or
shl
arpl
dec
adc
push
push
gs
inc
(bad)
cld
jg
(bad)
xchg
add
adc
push
retf
or
stos
and
pop
adc
push
sub
pop
int
popa
pushw
xchg
call
dec
xchg
cmp
mov
daa
mov
sbb
pop
dec
mov
test
jb
inc
popf
nop
ins
ret
xchg
imul
popa
jo
(bad)
and
popa
xchg
(bad)
repz
test
jge
xor
mov
push
pusha
inc
hlt
sub
sub
test
jbe
mov
xchg
bound
sub
out
xchg
sti
mov
mov
(bad)
movs
add
fimul
repnz
jl
out
xchg
in
aam
jle
outs
stc
cmp
jle
cmp
dec
dec
mov
sahf
or
outs
shl
and
push
adc
pop
fnstsw
jg
sti
dec
test
sub
and
les
inc
dec
mov
jg
retf
mov
mov
pop
cmp
cdq
loop
scas
mov
dec
cmp
mov
xchg
jmp
lods
rcl
inc
int3
xchg
scas
gs
std
retf
dec
ficomp
or
out
mov
push
pusha
pop
mov
stos
mov
js
sub
fmul
xchg
call
(bad)
lods
fidiv
pop
mov
mov
add
retf
cmc
adc
or
gs
jmp
jp
mov
mov
data16
jg
mov
pop
pusha
das
dec
pop
int3
mov
jnp
cmp
sahf
dec
mov
fdiv
sbb
jnp
jae
mov
jl
push
add
or
call
aas
adc
je
sbb
push
dec
or
loope
mov
popf
fiadd
and
data16
test
jecxz
sub
pop
shr
arpl
ins
mov
mov
xchg
mov
(bad)
cmps
repz
mov
fimul
sbb
add
dec
jmp
sbb
jno
sub
sub
int
hlt
jle
inc
inc
arpl
je
sbb
cmps
ins
xchg
arpl
mov
cmc
in
int3
data16
push
pop
hlt
mov
jecxz
dec
mov
das
mov
mov
cmp
clc
in
or
mov
adc
sbb
mov
jecxz
mov
fdivrp
ins
out
push
push
xor
imul
jo
cmp
jae
out
(bad)
cli
rcl
cmp
dec
mov
cmp
lds
add
js
pushf
jp
repnz
(bad)
jp
sahf
fdivr
ret
fist
mov
rcl
dec
call
mov
push
jl
inc
push
aad
push
cmps
fist
pop
sbb
lea
mov
adc
jmp
mov
xor
add
xchg
push
adc
cmp
xchg
mov
xchg
or
mov
mov
or
xor
push
cmp
xor
dec
mov
gs
aam
sub
dec
inc
in
cdq
leave
push
(bad)
(bad)
jmp
jno
mov
xor
cmp
js
retf
push
lahf
cmps
xchg
std
aam
sahf
scas
inc
dec
ja
scas
cdq
jecxz
pop
cs
cmps
cmp
inc
fisubr
sar
push
scas
adc
ds
inc
pop
jge
mov
ret
data16
scas
mov
repnz
stc
dec
lahf
jo
mov
fisub
xlat
mov
aad
inc
popa
fs
stc
xor
jbe
xchg
shl
fidiv
mov
jns
(bad)
sub
(bad)
clc
xchg
out
icebp
loop
dec
mov
test
mov
fimul
and
push
sar
repnz
jno
cdq
imul
out
mov
imul
fisttp
(bad)
push
mul
je
mov
ss
sub
xchg
stc
cwde
sub
daa
int
in
int
mov
fidivr
sub
scas
sub
test
fisttp
or
xor
ss
jbe
arpl
repz
cdq
je
out
retf
les
cmp
or
pop
repnz
ret
mov
inc
mov
dec
cld
aad
sub
stc
out
sub
fiadd
sub
xor
out
cmp
inc
mov
je
aad
mov
in
push
in
bt
jmp
icebp
call
lea
jg
mov
or
mov
cld
cmps
push
call
movsx
and
retf
outs
push
std
stc
mov
xchg
lds
fs
dec
pop
or
or
js
xlat
mov
daa
mov
rcr
lahf
sbb
ret
ins
rcr
ret
inc
int3
and
enter
sbb
test
cmps
jnp
push
fistp
mov
int
sbb
fcmovnbe
out
lahf
(bad)
dec
fnstcw
addr16
clc
mov
jmp
mov
das
shl
xchg
mov
icebp
mov
pop
imul
fisubr
push
pop
ret
jmp
or
pop
jp
aad
mov
or
cmps
int3
mov
loop
ds
push
add
loope
pop
xor
(bad)
sub
out
xor
or
and
pop
jg
jnp
mov
call
xor
cmp
(bad)
sbb
les
push
cmp
mov
dec
mov
mov
xor
mov
xor
ds
(bad)
fadd
inc
(bad)
sti
shl
ror
das
and
je
dec
stos
fs
pop
fisttp
sahf
inc
xchg
call
in
mov
adc
jl
lods
xor
mov
movs
add
fnstsw
cmp
ficom
inc
mov
xchg
out
(bad)
xor
pop
push
sub
in
jmp
(bad)
div
adc
stos
retf
es
leave
jbe
lea
and
pop
push
jnp
ret
add
pop
lods
xor
dec
or
test
fcomp
movs
xchg
jno
icebp
xor
aam
adc
mov
add
(bad)
or
rcr
add
xchg
sub
add
aas
out
inc
sar
mov
mov
or
fst
xchg
fldcw
push
sub
cwde
ins
iret
mov
mov
push
jb
dec
fcmovnu
mov
ror
mov
aam
int3
sub
mov
sub
iret
xor
cmps
push
inc
jmp
push
data16
pop
jne
mov
imul
pop
mov
mov
(bad)
jmp
dec
leave
xchg
cmp
fist
cmp
jge
sub
push
mov
in
pushf
sbb
push
sbb
iret
cmps
std
(bad)
daa
(bad)
dec
cmp
cmp
loopne
arpl
aaa
fcom
sub
push
inc
dec
mov
add
in
or
leave
sar
jg
cmp
das
push
jne
mov
xchg
mov
lods
sti
jne
pop
push
icebp
es
mov
lods
xchg
out
scas
add
fnstcw
add
mov
xor
mov
mov
jle
pop
test
jmp
sbb
mov
test
jne
lahf
rcr
std
sbb
into
adc
pop
add
add
mov
mov
push
cmp
dec
mov
mov
gs
je
movs
jmp
sbb
(bad)
dec
mov
or
aad
(bad)
(bad)
call
jns
in
jl
mov
repnz
sub
push
int3
das
arpl
dec
jo
adc
jne
(bad)
xor
xchg
or
jne
pop
pushf
je
mov
and
jne
add
inc
shl
sbb
repz
in
or
inc
jle
sahf
jmp
and
jle
add
sub
jmp
ss
lock
js
inc
cdq
dec
cwde
test
push
xor
in
loop
sbb
dec
xor
cdq
mov
dec
arpl
inc
push
dec
add
imul
cdq
push
adc
sub
push
sub
imul
push
or
jecxz
enter
popf
jno
adc
xchg
(bad)
stos
(bad)
sub
inc
ja
pop
xchg
cmps
push
sub
adc
data16
sahf
(bad)
fnsave
fnstenv
nop
rcl
inc
cli
jbe
add
jo
xor
dec
adc
daa
jl
adc
ret
lods
mov
out
sub
ret
not
or
cld
and
(bad)
lock
xchg
push
and
mov
sbb
xor
xor
fwait
pop
cmc
in
test
cmp
rol
ds
adc
daa
aas
xchg
sahf
(bad)
fsub
ss
jge
inc
mov
jne
cmp
icebp
repz
sahf
data16
leave
jmp
movs
adc
jg
inc
mov
or
and
imul
add
aas
pop
arpl
inc
in
mov
cs
push
or
outs
inc
shl
out
jmp
sbb
fild
retf
dec
dec
lods
call
mov
mov
inc
std
cmovae
test
stos
retf
imul
and
(bad)
dec
scas
and
dec
stos
mov
test
xchg
push
xchg
loope
mov
inc
cmp
push
int3
add
jne
cli
gs
rcl
std
in
ss
or
fiadd
mov
mov
in
sub
int
das
dec
sub
push
cld
cmps
out
dec
jb
mov
or
pop
and
cmc
cld
cwde
in
adc
sbb
or
(bad)
cmp
(bad)
xor
rcl
dec
add
scas
dec
add
or
add
mov
(bad)
xor
jge
out
imul
popf
ins
jo
(bad)
xchg
push
dec
jecxz
jecxz
out
mul
sti
xchg
jle
inc
out
cmp
mov
in
popf
xchg
or
iret
cmc
dec
fsubr
mov
cli
cld
fmul
jnp
and
inc
pop
sub
stos
and
rcl
push
ds
cmp
aam
cmp
cmp
je
xor
ins
inc
pop
imul
add
sar
loop
or
cmc
ja
das
test
adc
lahf
mov
dec
retf
(bad)
int3
mov
xlat
inc
sub
jecxz
loop
ins
repnz
fst
push
mov
cmp
popf
push
mov
test
inc
mov
cmp
dec
sbb
in
aam
adc
dec
or
mov
ins
test
lds
sub
bound
ror
(bad)
frstor
sar
mov
jno
clc
xchg
jg
or
jmp
ds
(bad)
neg
jbe
mov
gs
cmp
or
cmp
sbb
add
adc
push
mov
test
ss
aam
cmp
inc
adc
jno
jbe
inc
loopne
sbb
fimul
in
cld
cmc
(bad)
mov
push
dec
mov
pusha
arpl
push
aas
sahf
mov
jbe
mov
inc
adc
jge
into
sti
retf
or
adc
inc
jmp
push
cdq
pusha
mov
popf
sbb
sbb
cmp
push
repz
mov
mov
xchg
sub
in
jne
pop
mov
int
push
out
nop
jmp
retf
ss
lock
xor
sbb
mov
stos
fldenv
loope
adc
cmp
jmp
sbb
push
jb
movs
scas
jae
xlat
push
call
push
ror
and
jmp
scas
inc
punpcklwd
mov
repnz
jnp
movs
mov
push
ror
xchg
jecxz
add
add
sub
adc
lods
cmps
cld
bound
ss
lds
mov
sbb
pop
inc
pop
mov
(bad)
js
ja
clc
xchg
leave
je
inc
mov
daa
sbb
inc
ffreep
cli
imul
mov
mov
ret
cmp
adc
mov
and
pushf
adc
cld
inc
addr16
sbb
push
test
loopne
bound
enter
or
mov
retf
outs
rcl
loope
(bad)
pop
xchg
outs
and
sub
cdq
add
mov
jno
pop
adc
fisubr
pop
ficomp
mov
and
mov
push
mov
xchg
in
cli
les
shl
sub
add
bound
xchg
cdq
and
mov
pop
test
mov
pop
xor
pop
jmp
aam
fwait
push
xchg
pop
push
inc
jno
loope
ret
adc
mov
outs
movs
repz
aas
mov
push
jmp
or
cmp
sbb
sbb
mov
jmp
ret
stc
in
pusha
or
(bad)
mov
inc
sti
ins
repz
les
pop
mov
pop
push
xor
or
popf
inc
outs
test
lds
scas
jae
cmps
fist
cs
jb
call
xor
fincstp
and
push
push
dec
outs
cli
leave
ret
cmp
mov
xchg
mov
push
and
push
iret
ins
dec
xlat
imul
(bad)
loope
inc
std
cmp
sahf
or
push
xchg
out
mov
adc
jno
scas
rcr
cli
mov
jns
call
or
lock
jmp
retf
in
pop
and
mov
test
call
shl
aaa
loope
dec
push
sub
ror
enter
daa
pop
dec
jbe
xchg
jl
dec
ret
(bad)
std
push
fild
sbb
data16
mov
inc
and
loopne
(bad)
(bad)
pushf
add
mov
loop
test
or
outs
adc
xlat
sub
adc
dec
sbb
bswap
aas
aas
jno
popa
adc
and
cmp
(bad)
mov
mov
retf
fistp
pushf
and
cmp
aad
popa
mov
fucomip
xor
ja
in
sbb
sub
adc
mov
addr16
push
xchg
or
clc
cli
popf
xchg
mov
jle
mov
dec
fmul
or
inc
and
aam
out
inc
sbb
mov
arpl
sub
xor
in
xchg
pop
aaa
outs
push
int
sub
pop
retf
out
sub
inc
call
das
inc
(bad)
cmp
nop
jmp
jns
sub
mov
mov
aam
pop
xchg
jne
inc
stos
and
call
lahf
adc
into
aam
mov
adc
push
sbb
push
xor
paddd
add
xor
ficom
gs
ins
sti
adc
cmp
jg
mov
ror
mov
sti
mov
fidivr
cmp
inc
sbb
int3
lahf
stos
leave
pop
mov
pop
inc
outs
icebp
in
and
cmp
dec
js
mov
inc
mov
sub
rcr
jp
push
sbb
and
ins
dec
cmps
pop
jae
pushf
xchg
pop
xchg
push
mov
rcr
xchg
adc
inc
das
test
pop
or
or
mov
inc
push
mov
(bad)
out
lods
popf
clc
cmc
popf
(bad)
pushf
or
data16
mov
adc
jl
int3
push
inc
mov
test
mov
ret
test
repnz
in
mov
push
add
xor
or
(bad)
punpckhdq
ret
out
shr
in
add
xchg
mov
mov
movs
ins
jnp
scas
xchg
pop
and
rcr
iret
cmps
add
popa
and
xchg
cdq
and
xor
adc
xchg
push
mov
(bad)
das
icebp
cmp
dec
in
xor
xchg
movs
and
push
repnz
mov
push
jno
out
add
mov
test
dec
arpl
adc
rcl
dec
push
xor
rcl
jmp
xor
pop
cmp
out
inc
lea
adc
(bad)
jl
mov
inc
push
loop
adc
inc
in
mov
xor
push
ror
shr
push
mov
xor
lods
imul
and
inc
cmp
loop
push
pop
cmp
add
jnp
inc
js
mov
cmp
or
mov
pop
push
(bad)
bound
in
jns
dec
xchg
mov
push
cld
lods
(bad)
(bad)
xchg
dec
cdq
movs
out
in
ss
sub
dec
fisttp
div
inc
xchg
dec
movs
push
popa
mov
pop
adc
imul
xchg
inc
rol
or
and
xor
mov
push
push
stc
loope
ss
clc
shl
inc
xor
outs
xchg
inc
outs
mov
pop
test
jns
jmp
jp
xchg
mov
(bad)
mov
aas
mov
int3
add
in
movs
mov
mov
scas
stos
xchg
pop
add
repnz
(bad)
inc
data16
add
ror
retf
xor
mov
addr16
into
scas
cmp
add
aas
push
push
pop
sub
pop
scas
in
xchg
pop
inc
enter
adc
add
repnz
fwait
jle
sub
or
push
xchg
(bad)
and
pop
mov
imul
mov
mov
data16
mov
loop
test
jnp
mov
inc
pusha
mov
mov
dec
inc
xchg
aaa
daa
ss
iret
jl
into
jecxz
sbb
xchg
retf
mov
push
pusha
jne
aam
bound
fnstsw
addr16
(bad)
clc
(bad)
in
and
cld
adc
pop
mov
and
adc
push
(bad)
mov
dec
(bad)
jmp
cs
cmp
cld
or
mov
scas
retf
jecxz
push
push
jmp
addr16
fdivr
cs
and
psubsw
xlat
in
pop
data16
xor
add
pop
lahf
stos
or
sbb
retf
aam
mov
sar
sub
call
xchg
dec
rol
mov
xor
fcom
xor
(bad)
inc
adc
xchg
stos
push
ja
pusha
outs
add
ror
mov
push
jmp
or
lds
and
hlt
sbb
je
mov
jae
xchg
ins
pop
dec
addr16
(bad)
sbb
mov
iret
addr16
loope
adc
jbe
out
repz
outs
repz
movs
lahf
stos
out
in
out
mul
pop
stc
pop
shr
cmp
xor
sbb
and
in
and
dec
pop
movs
mov
daa
fild
js
inc
cli
ret
add
xchg
xchg
xor
sbb
pop
rcl
outs
mov
adc
shr
stos
jle
sub
retf
pop
mov
loope
dec
add
leave
clc
js
std
jb
sti
or
frstor
mov
dec
ret
and
les
push
jge
aaa
xlat
add
xor
or
ret
ret
mov
mov
int3
dec
dec
sub
mov
mov
cld
sbb
xchg
mov
call
mov
add
stc
data16
or
arpl
lds
sub
xor
xchg
enter
xor
pop
inc
sbb
lods
(bad)
iret
sub
inc
je
outs
dec
jmp
mov
nop
mov
jns
cmps
pusha
dec
(bad)
stos
ins
mov
div
dec
mov
in
repnz
dec
icebp
sub
inc
je
inc
push
mov
imul
or
enter
mov
xchg
pop
adc
mov
mov
cmp
loop
pop
inc
cmc
outs
les
jbe
scas
sar
push
push
imul
imul
mov
(bad)
sbb
jecxz
mov
or
sub
mov
ja
sub
cwde
call
cmp
sar
xchg
jnp
xor
mov
inc
adc
mov
lahf
lods
rol
stos
in
shr
mov
jge
shr
add
inc
or
int3
adc
or
mov
scas
call
dec
sbb
xor
add
arpl
aad
push
fistp
movs
loop
aad
sar
add
mov
mov
aad
pop
sbb
bound
pusha
addr16
sub
mov
push
cmp
sbb
mov
(bad)
data16
(bad)
mov
dec
push
cmp
std
push
jb
popa
mov
mov
and
(bad)
daa
push
sti
sti
dec
inc
lods
(bad)
enter
ret
pop
aas
(bad)
lods
jl
inc
mov
(bad)
mov
je
push
mov
jge
imul
push
(bad)
enter
push
leave
fisttp
pop
mov
jmp
movs
rcl
sar
mov
cmp
adc
aas
pop
(bad)
neg
or
xchg
or
ja
inc
inc
mov
jae
mov
xchg
push
sub
sahf
adc
xchg
xchg
adc
cmc
sbb
call
inc
xor
(bad)
test
pop
add
out
scas
or
xchg
push
icebp
mov
sbb
push
mov
lahf
dec
mov
add
add
int3
pop
(bad)
lds
push
data16
imul
push
jae
adc
loope
mov
iret
inc
aam
inc
(bad)
aad
xchg
cmps
fisubr
mov
idiv
stos
or
add
call
mov
inc
rcl
cdq
mov
or
inc
jns
xchg
mov
lahf
dec
xchg
mov
call
imul
idiv
dec
and
pop
inc
nop
mov
(bad)
inc
inc
je
daa
push
xchg
mov
cmps
mov
sub
mov
sub
push
sbb
(bad)
aaa
jne
mul
or
push
adc
cmps
mov
sbb
imul
aas
fs
iret
ret
cmp
je
test
mov
sahf
xor
mov
(bad)
clc
and
cwde
movs
jge
jnp
jne
push
mov
pavgb
idiv
(bad)
pop
and
or
sbb
or
inc
sub
xchg
aas
ret
and
or
ins
mov
gs
jae
idiv
cmp
fwait
pop
nop
mov
jmp
jne
into
mov
cmp
jmp
dec
or
fcmove
inc
scas
xor
mov
mov
jle
loope
xchg
stos
dec
or
mov
jne
(bad)
leave
fmul
adc
loopne
sub
push
sbb
sbb
jle
sbb
psrlq
pop
xchg
dec
in
outs
pop
sub
in
dec
pop
sub
or
and
loope
jmp
add
mov
jbe
adc
mov
pop
cmps
mov
mov
in
loop
jecxz
sbb
pop
fldenv
stc
dec
push
and
mov
es
jbe
pop
frstor
lods
daa
jae
jmp
cmp
fwait
nop
mov
or
pop
push
stos
mov
mov
fs
cmp
cdq
dec
mov
call
cmp
sub
or
jae
sub
mov
sbb
retf
mov
cmps
imul
or
xor
jge
mov
jo
popf
pop
stc
dec
scas
push
sar
sahf
iret
mov
lods
shl
or
(bad)
leave
into
cmps
or
push
jo
pop
add
pusha
pop
jg
push
push
(bad)
add
sub
mov
(bad)
(bad)
rcl
adc
cmps
and
call
pop
sub
cmps
popa
out
mov
aam
leave
sub
daa
pop
mov
rcr
jecxz
xchg
shl
add
pop
jne
xor
xchg
sti
cmp
add
rcl
test
jge
inc
xor
in
sbb
lds
icebp
sbb
aaa
push
sub
add
sbb
stos
fidivr
mov
fsub
shl
adc
cmp
pop
(bad)
sub
sbb
jle
mov
leave
inc
adc
push
lds
pushf
lahf
cld
fwait
je
lea
shl
cdq
pop
inc
mov
inc
int
shr
add
mov
in
jnp
inc
pop
jno
or
cmp
inc
sbb
sub
xor
bound
push
xor
jae
mov
xchg
hlt
sub
sbb
mov
enter
fcmovne
mov
mov
cdq
or
rol
cwde
mov
ins
dec
jmp
pop
and
call
cmps
push
add
sti
pop
sub
(bad)
cwde
in
push
out
ds
int
push
push
mov
or
sub
xchg
dec
adc
and
add
mov
sbb
push
pusha
lahf
lods
loope
loope
lea
bound
mov
loop
popa
jg
lds
ret
mov
xor
aam
mov
add
pop
aaa
je
movs
cmps
jle
popa
mov
and
mov
or
xchg
imul
jns
les
pop
mov
mov
cmp
cs
(bad)
mov
popf
adc
outs
aad
sbb
pusha
mov
retf
imul
fs
test
cmps
clc
or
inc
rol
aam
popa
out
fisubr
(bad)
hlt
int3
nop
jo
push
int3
xchg
xor
adc
int
xchg
fisub
mov
mov
adc
push
inc
jns
lahf
int
les
ins
jp
adc
sbb
in
xor
cmps
mov
or
mov
dec
and
and
dec
sub
mov
popa
pop
sub
fcmovne
test
add
inc
push
mov
push
push
or
inc
(bad)
jle
mov
scas
xor
outs
aas
retf
shl
(bad)
pop
cmp
neg
sbb
(bad)
push
mov
(bad)
xchg
or
mov
shl
mov
inc
sbb
(bad)
loope
(bad)
test
or
mov
add
inc
(bad)
xchg
in
adc
scas
or
rcr
xchg
ins
loope
rcl
or
pop
xchg
imul
sub
inc
lods
xor
pop
add
in
sub
inc
sub
adc
add
fnclex
(bad)
mov
mov
dec
cmp
push
cld
(bad)
jns
push
mov
jle
popa
lds
out
mov
or
aam
xchg
jecxz
or
lock
daa
out
jae
jmp
leave
adc
mov
pusha
or
or
and
pop
in
iret
fist
jae
xchg
pushf
pop
(bad)
in
(bad)
xchg
mov
call
scas
test
cmp
bound
dec
inc
sbb
fild
retf
enter
icebp
repz
jl
mov
mov
sub
fcmovnu
aaa
xchg
nop
dec
push
mov
popa
(bad)
and
out
(bad)
jmp
(bad)
jmp
push
mov
pusha
mov
outs
mov
xchg
fsub
mov
xor
(bad)
daa
dec
cwde
xor
inc
push
pop
inc
test
ds
xor
rol
fiadd
cmp
and
dec
popf
(bad)
aad
imul
repnz
out
sbb
xor
test
pop
cld
int3
(bad)
jmp
pop
adc
mov
inc
fs
sub
fadd
mov
mov
test
inc
clc
sub
stos
popa
inc
fisttp
xor
mov
leave
push
addr16
cmc
aam
dec
mov
test
stos
xchg
mov
std
test
movs
mov
lods
pushf
add
mov
test
sub
pop
cmp
jb
into
cmp
sbb
aam
inc
ret
movs
in
not
lock
das
pop
je
dec
aas
sbb
out
cmp
push
leave
or
addr16
nop
mov
ret
shl
mov
sti
mov
retf
mov
jmp
inc
jo
mov
add
gs
nop
push
push
lock
fcom
xchg
mov
xchg
sbb
xchg
sub
fisttp
mov
push
xchg
push
repz
aad
pusha
bnd
stos
xor
push
sbb
cmp
jbe
sub
pushf
xor
das
cmp
jno
jno
inc
jp
or
fld
ss
fistp
push
mov
xchg
jge
pop
mov
das
jmp
xor
sub
or
dec
loop
lds
add
mov
cmp
pop
outs
sar
fwait
xor
xor
in
xchg
fadd
stos
push
xchg
jns
in
enter
cmp
xor
stos
fwait
mov
dec
fidivr
xor
(bad)
push
or
aaa
xchg
loopne
test
adc
cwde
scas
mov
or
lea
push
clc
add
lods
push
lds
mov
lahf
dec
or
mov
add
mov
neg
add
sbb
fstp
cmp
pop
ret
aam
inc
(bad)
repz
add
clc
and
jecxz
inc
or
cli
test
fcomp
add
ror
cwde
mul
pusha
or
add
mov
add
imul
rcl
dec
popf
pop
popa
xor
imul
pop
test
int3
mov
and
mov
xchg
xchg
jmp
imul
rol
ret
inc
push
adc
add
imul
push
sbb
sbb
xchg
pop
sbb
out
and
fld
nop
sti
jbe
div
nop
in
punpckhwd
mov
ds
addr16
mov
xlat
mov
and
sub
rol
push
jne
iret
cdq
std
lea
mov
loopne
ret
pop
jns
bound
rcl
adc
add
les
ins
sub
and
sbb
iret
push
cmps
sbb
xlat
lock
and
out
jae
out
jae
mov
(bad)
mov
add
pop
jbe
retf
icebp
ja
mov
mov
sahf
das
ins
sub
mov
out
mov
xlat
loopne
push
jae
inc
sub
daa
cmc
jnp
pop
bound
and
mov
pop
cs
xor
jne
scas
add
xchg
bound
scas
inc
lods
push
lock
lock
sub
loope
ins
ds
jmp
pushf
mov
sar
or
enter
adc
es
call
and
(bad)
(bad)
push
push
xlat
inc
cmps
sub
pop
mov
cli
das
cmp
mov
in
and
retf
nop
xchg
retf
mov
call
pop
and
jmp
xor
sub
clc
movs
or
xlat
cmp
jne
mov
daa
and
and
sbb
(bad)
aam
inc
bnd
repz
add
adc
mov
fisub
fbld
fld
jae
jb
sub
add
(bad)
aam
nop
(bad)
jbe
mov
pusha
and
rcr
sbb
pop
fneni(8087
jl
leave
mov
stos
stos
(bad)
xor
jo
pushf
xchg
lea
xchg
push
dec
push
inc
and
mov
jbe
and
ficomp
adc
sbb
fdiv
clc
leave
push
xor
mov
xlat
jo
mov
mov
mov
or
adc
imul
jae
pop
stc
retf
mov
and
mov
jnp
lds
sbb
stos
test
popa
push
loopne
enter
sub
xchg
fisub
inc
fist
enter
dec
mov
aam
je
xchg
adc
jnp
fwait
scas
fisubr
mov
sub
xchg
push
imul
dec
xor
push
fxch
arpl
jmp
enter
pop
or
sub
mov
xchg
inc
retf
idiv
pop
mov
mov
xchg
push
push
add
sar
sub
icebp
push
inc
push
pop
pop
(bad)
fstp
push
icebp
push
sbb
shl
aam
cmp
ds
scas
cs
sub
or
add
(bad)
(bad)
xchg
jae
jnp
fadd
dec
cmp
add
sbb
aam
cdq
push
mov
and
inc
addr16
aaa
mov
jmp
cs
adc
loop
popf
fisub
(bad)
jno
xor
pop
sbb
mov
int3
outs
xchg
jle
stc
pop
lahf
xchg
adc
(bad)
lock
call
cmc
ret
jle
pushf
pop
(bad)
cmp
(bad)
in
(bad)
adc
xor
jp
dec
dec
push
lods
sti
xchg
mov
sbb
std
ins
fbstp
faddp
fst
jmp
push
add
call
jge
pop
xchg
xchg
inc
dec
arpl
das
sub
or
pop
jp
lahf
mov
push
jnp
mov
jp
test
or
outs
cmps
mov
std
pusha
xlat
daa
je
cmp
xchg
scas
push
out
ror
or
jmp
movs
jbe
mov
adc
dec
xchg
mov
mov
sub
cli
call
inc
scas
push
adc
jmp
sub
dec
call
xor
test
retf
xchg
xchg
stc
das
fsub
or
test
adc
inc
push
inc
inc
daa
jge
adc
pushf
iret
mov
and
jbe
xlat
call
dec
(bad)
out
mov
mov
ss
push
mov
push
fcom
cs
fwait
push
scas
xor
cmp
cld
sahf
xchg
loop
jle
in
shr
out
call
clc
mov
or
inc
adc
pop
mov
scas
jmp
adc
int
in
in
mov
gs
mov
(bad)
cld
outs
lds
push
or
mov
pop
stc
stos
jmp
rcl
pop
js
shl
xlat
cmp
or
out
cmp
mov
adc
xor
pop
sub
mov
add
outs
hlt
mov
adc
(bad)
clc
daa
xor
js
sbb
mov
xchg
mov
pop
daa
pop
push
xor
inc
outs
(bad)
cs
dec
jnp
jle
fwait
xchg
dec
xor
test
xchg
pop
retf
dec
cs
bnd
xchg
cmps
aad
cwde
adc
dec
jns
mov
push
leave
scas
pop
outs
mov
xor
push
imul
inc
outs
pop
(bad)
cmp
daa
mov
les
(bad)
ret
aas
ins
lahf
add
push
sbb
xchg
push
repz
dec
jp
or
inc
sub
add
adc
mov
inc
das
add
mov
push
lds
pop
jg
cs
cwde
jg
inc
pop
movs
ss
xchg
cmp
fwait
loop
data16
pushf
mov
div
mov
lods
cdq
xchg
repz
or
aaa
fcomi
or
xor
ds
cmp
in
sub
mov
dec
cld
inc
sahf
sub
cmp
shl
cdq
cmp
fisttp
retf
cmp
jmp
repnz
mov
add
jno
rcr
adc
leave
sbb
xchg
push
and
shl
ins
(bad)
adc
push
iret
ins
retf
cli
jne
arpl
sbb
mov
adc
in
sbb
lods
ja
out
or
xchg
int
dec
es
stc
jecxz
mov
int
push
cs
jp
cmps
cmp
mov
hlt
ins
and
fisubr
into
data16
rcr
inc
cwde
sbb
scas
arpl
push
add
push
fidiv
call
mov
xchg
daa
movs
push
sub
adc
mov
xchg
xchg
and
jl
aaa
mov
adc
xchg
inc
sbb
stc
mov
adc
ins
inc
xchg
or
jnp
iret
push
ret
push
xchg
pop
pushf
int3
mov
call
loop
mov
sub
ja
pop
outs
mov
jo
pop
or
scas
mov
pusha
ss
cmp
cmp
mov
out
dec
int3
(bad)
push
push
cmp
cmp
sahf
mov
setl
jo
stos
dec
jl
and
out
adc
mov
mov
mov
dec
jecxz
dec
adc
xchg
aad
cwde
or
aas
push
daa
mov
or
cmp
movs
cmp
pop
idiv
retf
mov
jmp
(bad)
retf
popf
ins
or
mov
scas
data16
sub
mov
in
mov
aad
jo
int3
pop
or
cmc
ins
adc
scas
cmp
iret
xlat
jb
outs
dec
add
loop
stos
cld
jmp
sub
inc
das
not
xor
and
inc
dec
push
inc
cmp
xor
test
mov
dec
es
std
fsubr
in
ds
jp
jecxz
xchg
jecxz
jnp
int3
js
sar
test
pop
jnp
cdq
push
pop
push
outs
(bad)
mov
cmp
adc
mov
mov
and
loopne
sbb
sub
push
add
pop
je
xchg
test
lds
jmp
mov
pop
pop
out
fld
sti
sub
push
mov
scas
jl
into
push
inc
hlt
dec
xor
scas
movs
inc
sbb
or
sahf
lods
rcl
push
mov
arpl
aas
add
clc
call
and
push
pop
add
es
adc
les
cmp
jns
push
test
pusha
ret
cmp
sub
pop
jb
inc
or
test
cmc
out
or
repz
neg
enter
inc
mov
in
lds
call
lods
ins
cmp
dec
and
or
inc
div
push
stos
jne
pop
jo
outs
or
mov
rcr
jg
add
add
int
jnp
scas
ss
std
out
(bad)
xor
adc
call
sar
xchg
dec
jmp
xchg
data16
inc
fcomp
dec
fadd
out
jmp
sbb
mov
fidivr
sbb
cdq
xchg
add
stc
leave
(bad)
shr
xor
mul
cld
dec
fisttp
push
add
aad
lahf
cdq
fcmovnb
or
(bad)
(bad)
adc
out
div
out
out
leave
inc
sub
push
jge
dec
sbb
sbb
mov
or
es
test
adc
or
call
push
mov
mov
cmp
mov
nop
cmc
mov
aam
aam
jbe
push
pop
stos
int3
rcl
int3
rcl
out
popa
add
mov
mov
xchg
scas
pop
or
out
inc
sbb
and
mov
cli
movs
jbe
dec
xor
inc
mov
in
push
(bad)
lahf
aas
ja
xchg
pushf
fbld
int3
fimul
cmp
fdiv
mov
aam
fadd
inc
test
ret
adc
xor
lods
repnz
mov
sub
and
std
and
jecxz
retf
int3
outs
iret
mov
leave
adc
and
dec
and
dec
cmp
test
lods
sbb
in
clc
pushf
add
mov
cs
dec
fimul
mov
mov
daa
xchg
into
ret
inc
imul
push
test
sbb
dec
nop
aas
jbe
or
fucom
pop
pop
cmp
or
cmp
mov
sub
mov
xor
rcr
(bad)
aam
fist
mov
or
push
and
rol
ins
sbb
pop
xor
jnp
and
sti
add
xchg
add
out
xchg
test
sub
sahf
sahf
js
lahf
fistp
mov
ret
push
lods
inc
push
(bad)
mov
scas
or
push
push
mov
popf
add
push
je
adc
ror
int
cwde
xchg
add
into
icebp
ret
popf
and
sti
stos
push
jp
lock
cmps
dec
in
mov
cmps
scas
mov
sub
imul
sub
xchg
add
sub
mov
clc
cmp
outs
jmp
sbb
mov
adc
or
fcom
into
lods
dec
int
mov
mov
push
push
mov
and
mov
jmp
daa
out
lds
scas
sbb
out
bnd
or
jge
jae
mov
retf
push
pop
psubw
test
popf
idiv
sti
jg
push
cmp
or
xor
int
sbb
movs
je
sbb
fidiv
mov
cmp
cmp
or
or
xor
sub
jp
stc
mov
iret
jo
xor
mov
fwait
or
mov
in
lds
push
xlat
out
inc
xor
sub
sahf
sub
jns
mov
clc
int
cs
(bad)
shr
xchg
mov
mul
jecxz
jbe
and
(bad)
xor
pusha
pop
fild
or
aaa
xchg
xor
shl
cmp
mov
pop
mov
jmp
xchg
or
jno
cs
rcl
pushf
mov
push
mov
call
cmp
lea
sub
dec
cdq
jnp
clc
ret
rcl
ror
pop
cld
je
imul
sbb
cwde
cmps
jnp
cmps
and
push
push
xor
idiv
outs
pop
pusha
neg
cmp
jecxz
and
cmps
fstp
dec
and
jne
fstp
aam
cmp
inc
sbb
test
mov
psubw
xlat
cs
mov
rol
push
push
dec
aas
adc
fiadd
inc
inc
pop
sar
loopne
ins
inc
lock
lods
cmps
xor
push
and
movs
mov
int3
ds
cs
xchg
jnp
push
dec
jns
inc
(bad)
test
and
xor
cmp
lods
cmp
cmp
push
int
push
push
pop
mov
xchg
sub
pop
loop
and
gs
push
test
fldcw
push
(bad)
fistp
mov
shr
rol
xchg
cmp
fmul
test
jmp
cmp
enter
jmp
jae
rep
pop
push
imul
loope
shr
pop
pop
repnz
leave
adc
pusha
ins
xchg
imul
sbb
ret
test
aas
stc
pop
pop
ret
inc
into
mov
xor
jns
add
add
xchg
mov
xchg
loopne
pop
push
jecxz
lds
jl
aad
inc
aam
fld
or
mov
and
rcr
ficomp
dec
mov
jno
mul
xor
push
xchg
add
xchg
cmp
adc
jne
stc
jmp
test
hlt
ret
es
push
dec
enter
adc
push
inc
xchg
inc
loop
cld
xchg
pushf
push
clc
cmp
xlat
inc
jle
in
dec
xor
aas
pop
sub
fadd
cmc
dec
in
or
fwait
cld
(bad)
push
leave
pop
sar
adc
cmp
hlt
jp
adc
repz
in
out
fwait
clc
mov
add
enter
in
xor
sub
pop
xchg
push
jp
test
leave
jge
jge
push
ja
jge
int
jmp
int3
call
mov
inc
ins
mov
pop
or
push
jo
jns
ror
pop
dec
rcl
sbb
or
pop
adc
mov
retf
ds
adc
lds
int3
inc
dec
adc
push
loope
inc
cli
psubusb
jo
(bad)
imul
lea
and
(bad)
lods
std
in
test
push
in
add
daa
fimul
jl
sbb
jge
out
xor
xor
shl
and
nop
sbb
enter
pop
scas
out
cld
lock
sbb
out
add
scas
pop
jp
lds
movs
mov
push
adc
enter
aad
inc
cwde
pusha
gs
add
scas
jnp
cmp
pop
cmc
mov
adc
or
mov
adc
sub
push
lahf
push
ror
xchg
je
cli
jmp
int3
pop
adc
popa
xchg
xchg
inc
cli
push
push
out
sbb
loopne
data16
cmps
xor
push
xchg
aaa
mov
add
in
push
inc
xor
(bad)
popf
jg
cmp
daa
pop
mov
jno
sub
fsubr
fsubr
scas
loopne
aam
pop
shl
or
test
xchg
lods
sahf
jae
mov
adc
imul
out
int
loop
das
cli
xchg
adc
or
fdivp
cmp
movs
dec
xchg
xchg
and
adc
sbb
push
inc
adc
inc
mov
sbb
jmp
jb
sbb
xor
pop
stc
sub
pop
push
in
xchg
clc
push
imul
lea
aaa
pusha
push
out
in
mov
dec
lea
push
cld
or
and
inc
cmp
push
sub
xor
mov
(bad)
push
out
dec
mov
mov
xor
mov
push
cmp
mov
into
and
adc
mov
(bad)
push
add
push
jmp
jl
xchg
outs
mov
xchg
mov
cmp
push
add
xchg
outs
mov
movs
call
mov
stc
nop
retf
pop
(bad)
and
outs
inc
ret
pop
test
imul
add
adc
ror
fsubr
movs
add
pop
jge
icebp
sub
sub
data16
inc
aad
test
fcmovnu
(bad)
(bad)
jle
push
imul
pop
xlat
push
ret
div
hlt
test
popf
dec
push
(bad)
je
mov
ret
mov
xchg
jl
xchg
pop
cmp
xor
add
stc
push
adc
mov
pop
mov
push
jae
not
ins
bound
xor
(bad)
push
out
fld
into
jmp
sahf
inc
sub
xor
dec
mov
add
inc
ins
jl
inc
mov
dec
repnz
mov
push
retf
push
mov
sbb
pop
jge
cmp
loop
das
fs
movs
loope
dec
or
sub
addr16
aad
cld
std
aam
mov
sbb
aaa
mov
ss
cmps
mov
out
retf
xor
pushf
ja
sub
cmp
movs
cmp
int
xchg
test
(bad)
push
push
jb
xchg
add
mov
xor
sub
cld
ds
mov
repnz
push
(bad)
and
cwde
lds
in
aaa
jns
push
ds
pop
or
xchg
jno
inc
ja
out
imul
cli
push
jae
xor
clc
xor
mov
rcr
xchg
mov
cmp
loop
stos
pushf
retf
gs
push
loopne
bound
jp
ss
mov
ins
dec
popf
hlt
sub
pusha
xor
in
(bad)
jmp
and
lods
in
xchg
jns
mov
stc
fmul
lods
dec
in
repz
(bad)
enter
test
cmp
xor
call
(bad)
xlat
lods
inc
mov
or
push
mov
lahf
out
cmp
imul
hlt
bnd
popa
aas
scas
and
out
stos
imul
mov
cmc
fldlg2
adc
cld
test
add
fst
scas
or
idiv
push
pop
adc
call
data16
sub
push
ds
mov
pop
inc
ja
bound
jmp
std
cmp
shr
jns
dec
pop
add
into
or
mov
sbb
stc
icebp
enter
std
add
dec
pop
std
jl
(bad)
push
pop
(bad)
xchg
mov
bound
retf
adc
fs
mov
cdq
sahf
xor
cmp
adc
ror
sub
int3
pop
sbb
xchg
jg
mov
(bad)
movs
clc
cs
push
test
and
pop
lds
push
or
jmp
xor
or
sbb
(bad)
push
sar
inc
push
dec
adc
xchg
leave
jmp
enter
addr16
dec
adc
cdq
fwait
jno
test
cld
js
test
cmp
aam
aam
clc
cli
outs
cmp
mov
mov
mov
fist
xchg
imul
sub
mov
repz
mov
cmps
scas
sub
(bad)
mov
mov
push
retf
jo
inc
mov
inc
addr16
xlat
mov
fst
adc
(bad)
pusha
or
pop
xchg
iret
test
jno
jmp
popf
jp
push
aad
xchg
and
cmp
popf
lods
out
fadd
sbb
mov
and
xor
xchg
push
loopne
add
aaa
mov
shr
xor
inc
xor
(bad)
fisub
sbb
loop
fsub
je
xor
jne
sub
outs
inc
mov
pop
or
in
and
mov
aaa
push
or
in
arpl
pop
xchg
lds
dec
ja
and
mov
(bad)
or
jl
fs
pop
movhps
int
daa
sti
jne
(bad)
div
push
in
add
stos
mov
sub
(bad)
stos
jmp
mov
or
nop
sub
daa
in
jp
stc
jl
sti
fs
jmp
aad
pop
shr
adc
(bad)
push
out
(bad)
jae
out
xchg
push
lds
data16
mov
lods
push
adc
movs
retf
mov
shl
fwait
lds
std
sahf
pop
push
xor
mov
push
mov
into
movs
call
xchg
les
out
outs
inc
mov
idiv
mov
ins
data16
dec
test
pop
pop
cmps
ja
popa
aad
ins
dec
popf
xchg
outs
jne
inc
push
xor
adc
or
jbe
sub
stc
sub
inc
loopne
mov
jmp
inc
mov
fwait
cdq
mov
jns
pop
push
mov
pop
sub
pushf
bound
sub
sub
je
neg
scas
mov
pop
test
mov
push
pop
imul
or
push
xor
jmp
in
retf
and
into
aad
lds
loope
int3
push
or
dec
loop
xchg
cmp
inc
push
dec
jge
or
popa
inc
xchg
jge
mov
into
xor
add
(bad)
mov
int3
jbe
mov
popa
push
imul
mov
or
adc
dec
test
adc
shr
mov
ret
inc
mov
and
sti
inc
mov
push
fs
stc
js
loop
mov
jl
test
sub
ret
jp
cdq
ins
in
scas
or
mov
ret
call
mov
mov
inc
std
(bad)
repz
pop
push
add
in
push
cwde
cmp
jb
in
test
lock
dec
adc
xor
ret
mov
sub
push
test
shr
push
jecxz
sub
loop
scas
push
mov
in
sbb
nop
xchg
sbb
xchg
ins
pop
adc
and
xor
mov
or
and
inc
loopne
mov
int3
pop
push
add
retf
imul
mov
aam
xchg
gs
xchg
bound
mov
sbb
push
rol
lods
push
std
ins
in
push
setns
jge
(bad)
int
adc
faddp
and
jns
out
(bad)
jae
ret
fnstenv
test
xor
int3
xor
mov
adc
shl
ret
in
call
loopne
jl
mov
enter
mov
add
jg
mov
sbb
movs
in
es
lahf
mov
xchg
daa
jne
test
cmp
jno
mov
cld
jecxz
fadd
or
hlt
or
and
sbb
stos
jnp
pop
mov
int
repnz
outs
movs
jns
int3
outs
icebp
out
jmp
add
sbb
rcr
(bad)
stc
pop
std
mov
push
cmp
loopne
fmul
clc
out
iret
ja
or
cmc
scas
adc
xchg
stos
pusha
pushf
cmp
add
dec
pop
gs
mov
mov
sub
cli
aam
lods
fiadd
aaa
add
out
jecxz
repnz
mov
jns
or
movs
or
push
imul
ins
mov
sub
dec
movs
dec
(bad)
imul
xor
cdq
and
sub
scas
das
test
out
cmp
mov
shl
in
dec
add
cli
js
out
sti
stc
test
aas
cs
pusha
push
pop
mov
stos
or
rol
ss
mov
movs
mov
inc
fwait
or
inc
pushf
mov
aas
mov
int3
aam
adc
xor
loope
out
cld
jae
jb
scas
fcom
rcr
mov
dec
das
fsub
(bad)
pop
jl
pop
fstp
mov
push
and
cmp
cmps
add
mov
mov
xor
jb
jae
cmp
mov
cdq
dec
jmp
xlat
ins
jae
mov
fdiv
dec
retf
mov
int
sub
sub
pushf
jl
or
loopne
rcr
jge
rcr
cli
add
repz
jb
cmp
xor
js
xchg
mov
inc
in
inc
cmp
mov
js
sbb
add
jbe
(bad)
xchg
(bad)
adc
dec
mov
js
repz
lds
(bad)
mov
lahf
ror
aad
pop
(bad)
scas
jge
cld
jbe
or
fs
xchg
leave
pushf
push
fstp
sub
sub
xor
adc
int3
jb
repz
sbb
xchg
push
pop
lds
enter
mov
scas
or
push
icebp
aas
mov
inc
pop
mov
cmp
xor
shl
(bad)
jg
out
sub
neg
ins
fisubr
inc
dec
adc
pusha
mov
xchg
mov
xchg
das
jae
pop
out
sub
jl
dec
sbb
mov
xchg
scas
push
mov
xchg
fs
mov
mov
lea
jb
imul
mov
pop
addr16
hlt
cs
dec
cmp
xchg
nop
lods
push
xchg
dec
pop
jge
cli
and
shl
scas
out
fwait
pop
jo
and
adc
sub
jge
dec
data16
cld
repz
cmps
sbb
sbb
dec
mov
add
sub
adc
sub
dec
mov
cmps
pop
loope
adc
push
daa
pushf
sbb
nop
mov
push
xor
pusha
movs
shl
adc
and
call
hlt
adc
push
movs
mov
cmp
icebp
sub
push
mov
test
rcl
mov
stc
(bad)
mov
mov
test
repnz
ret
or
or
repnz
jmp
mov
mov
sahf
popf
pop
pushf
out
aad
xchg
push
fwait
shr
push
mov
jmp
sub
xchg
aaa
push
cmps
jp
int
push
add
repz
jbe
xor
xchg
mov
outs
mov
pop
(bad)
in
fist
rcr
(bad)
in
rep
daa
sub
arpl
mov
xchg
mov
add
dec
das
int3
outs
out
sbb
imul
data16
or
sub
jmp
cs
sahf
jno
inc
dec
mov
aad
scas
enter
inc
movs
dec
cmp
retf
dec
daa
inc
sbb
nop/reserved
mov
sub
fdivr
cmp
xchg
mov
loope
sahf
test
mov
sti
aad
or
inc
sbb
mov
mov
fwait
shr
add
(bad)
dec
clc
ficomp
sbb
movs
jge
call
and
loope
je
test
out
or
cdq
out
push
mov
sahf
add
jno
rcr
int3
lea
xor
(bad)
cdq
mov
sahf
xor
(bad)
mov
cwde
mov
push
lock
out
loopne
in
test
(bad)
cs
aad
cli
jbe
daa
mov
pop
ins
(bad)
sbb
pop
leave
xor
pop
in
sbb
sub
pop
sbb
int3
sbb
xchg
call
sbb
push
test
adc
mul
inc
mov
js
aaa
pop
retf
iret
sub
aam
loop
xor
les
adc
out
cmp
and
(bad)
es
ret
inc
inc
fld
aaa
rol
imul
test
push
adc
imul
mov
daa
daa
hlt
xchg
mov
mov
jle
jmp
pop
xchg
lea
cmp
dec
sbb
mov
retf
xor
rol
enter
retf
adc
mov
or
cli
repz
xor
gs
imul
push
int3
mov
xchg
mov
mov
inc
pop
push
cdq
and
xor
mov
cmp
mov
inc
jno
push
mov
xor
dec
cld
cwde
data16
mov
fnsave
hlt
mov
sub
cli
sti
inc
js
xor
jp
inc
xchg
cmps
call
fidivr
sbb
jo
xchg
sub
cmp
pop
sbb
mov
inc
push
push
cmp
pushf
pop
mov
fisttp
ret
arpl
push
outs
daa
jno
xor
mov
push
jmp
pushf
pop
sbb
jecxz
and
push
lahf
out
xchg
xor
or
out
iret
jmp
dec
imul
dec
mov
sub
dec
movs
and
push
(bad)
mov
icebp
inc
int
(bad)
adc
mov
rcl
rcl
mov
jge
dec
test
add
or
std
std
and
and
inc
and
or
repnz
dec
cld
stos
mov
stos
ret
cmp
mov
retf
stos
outs
cs
or
push
jecxz
(bad)
pop
stos
and
pop
xor
xor
cwde
in
arpl
sbb
adc
loop
mov
leave
fldenv
inc
xchg
sub
dec
(bad)
mov
adc
mov
les
inc
cld
stos
cmp
mov
add
out
repz
mov
shl
push
pop
leave
and
imul
jmp
icebp
dec
pop
movlps
fild
cmp
aad
loopne
and
cmp
xlat
or
pop
pop
pop
xor
rol
popf
xor
test
push
cmp
imul
sub
jbe
mov
push
les
rol
ret
nop
push
mov
in
mov
push
add
lods
js
push
pushf
jo
cld
mov
jge
das
sub
ror
jne
dec
add
pop
movs
stc
aas
not
mul
clc
mov
pop
in
dec
fnstsw
cmps
mov
pop
inc
cmp
cdq
mov
ds
test
mov
lods
adc
mov
push
int3
jmp
and
movs
rsm
mov
scas
imul
mov
lds
or
mov
cmp
rol
movs
les
push
lahf
out
imul
dec
adc
and
js
mov
dec
jmp
sbb
lahf
js
add
xchg
mov
cmps
xor
sbb
sbb
push
imul
es
pavgw
popf
(bad)
mov
ss
retf
and
les
inc
push
std
popf
dec
xor
mov
shr
xchg
aam
dec
lea
mov
mov
into
inc
test
js
jge
push
jne
pop
mov
or
adc
cs
xchg
lods
nop
xor
or
movs
cmp
dec
sub
mov
dec
push
mov
fisttp
jmp
xor
push
fldcw
pop
sahf
mov
push
cmc
push
jle
(bad)
xor
das
adc
js
cmc
shl
mov
sbb
fidiv
jo
cmps
jl
stos
fmul
push
sbb
(bad)
adc
fist
ds
loop
mov
out
int
mov
and
mov
adc
enter
cld
sub
xor
sahf
push
sahf
ds
(bad)
ror
pop
jno
(bad)
push
xchg
daa
fisttp
xchg
inc
loope
call
or
test
test
fisub
xchg
test
cdq
sbb
imul
cmp
push
adc
les
push
shr
shl
xchg
mov
and
push
rcl
loop
adc
jp
adc
ret
xchg
cmc
dec
div
inc
add
fimul
aas
or
loope
lods
jne
ins
xchg
test
data16
std
xor
ins
jnp
add
xchg
fadd
test
inc
rol
push
and
stos
fld
stos
sbb
hlt
xchg
mov
pop
pop
mov
(bad)
cmps
add
dec
sub
loopne
fcom
add
ja
sbb
mov
adc
mov
xchg
xor
call
pushf
cmps
fiadd
push
sub
xor
sub
cdq
jg
pop
retf
jecxz
mov
dec
lds
jno
imul
pop
jne
mov
lds
loop
data16
mov
daa
push
(bad)
(bad)
out
scas
xchg
add
mov
lods
in
mov
dec
movs
sub
sub
dec
adc
ja
sub
sbb
jecxz
mov
adc
rcl
repnz
aad
lock
jp
out
cmps
push
repz
dec
in
or
cmp
pop
mov
cmp
pop
xchg
jne
je
xchg
pop
or
ss
pop
loope
xlat
addr16
outs
stc
dec
pop
icebp
sub
into
mov
mov
mov
in
aad
mov
xchg
movs
les
xchg
dec
sbb
rcr
add
lock
pop
fbld
mov
mov
push
or
inc
xchg
dec
icebp
stos
push
mov
rep
out
icebp
(bad)
lock
in
lahf
fidiv
rol
stos
leave
inc
js
gs
sbb
pop
push
jmp
jl
mov
jae
xor
xchg
out
ins
(bad)
dec
loopne
test
stos
inc
add
in
imul
cmc
test
hlt
add
sbb
pop
arpl
cli
aam
leave
cmps
lods
add
jns
dec
dec
imul
jmp
mov
loope
sbb
stos
lds
repnz
stos
push
xor
rcr
xchg
jge
xor
enter
dec
out
imul
xchg
sub
cld
pop
xor
fsubr
int
push
mov
push
(bad)
ja
aam
inc
(bad)
dec
dec
aad
mov
clc
mov
inc
inc
vmwrite
push
mov
(bad)
jg
(bad)
pop
clc
push
pop
adc
jg
(bad)
sahf
aaa
and
push
jo
adc
fcmovnb
jp
xchg
xchg
psubq
test
sti
dec
push
dec
jp
icebp
or
cmps
cmps
mov
xor
das
outs
mov
(bad)
xor
and
sbb
push
dec
jmp
test
mov
adc
cmp
outs
bound
outs
sub
pop
cmps
and
dec
mov
fmul
mov
or
cmp
mov
cwde
mov
pop
inc
cwde
inc
out
pop
test
or
or
mov
inc
xor
cmps
clc
mov
mov
retf
mov
loopne
sti
xor
jae
cmc
mov
inc
sub
sub
mov
jmp
test
gs
and
jne
xchg
out
adc
stos
stc
shr
sub
lock
cmps
jg
aas
jo
(bad)
(bad)
pushf
je
leave
jg
xor
cmc
add
addr16
xlat
xchg
test
cmp
pushf
sub
pusha
xor
fnstcw
inc
fisttp
mov
in
dec
aas
jmp
shl
enter
push
mov
shl
xchg
popf
jg
cmc
test
call
lahf
xor
call
cdq
push
sbb
sub
push
xchg
stc
lea
sbb
push
jb
mov
jmp
inc
mov
test
mov
xlat
lahf
xchg
push
xchg
pop
cmp
int3
aam
enter
inc
jae
out
push
push
inc
add
mov
into
dec
cwde
push
sub
jmp
push
addr16
int
xchg
mov
dec
push
mov
dec
arpl
cmp
mov
ja
scas
rcl
xchg
lock
pushf
call
ja
cmp
ficomp
lods
xor
jbe
jmp
icebp
(bad)
mov
lds
test
push
and
pop
pop
mov
push
arpl
push
lahf
cli
mov
dec
or
pusha
cmp
mov
fiadd
cmp
xchg
aas
sti
jae
jbe
and
push
inc
jne
add
movs
aas
pop
push
mov
(bad)
mov
mov
dec
(bad)
cmps
retf
xchg
inc
sub
cli
aam
in
test
inc
jmp
or
jecxz
pop
mov
lahf
lds
mov
xor
adc
rcl
and
and
pop
cld
mov
cmp
nop
sbb
dec
mov
std
scas
cld
stc
xchg
add
shr
ss
mov
(bad)
dec
cmp
call
pop
test
loopne
mov
xchg
mov
mov
dec
mov
cmp
std
dec
pop
push
add
mov
data16
pop
pushf
mov
or
sub
rol
in
mov
or
add
les
test
sub
push
inc
int3
sbb
in
cmps
(bad)
push
or
add
nop
cmp
rcl
sub
scas
cmp
arpl
out
lds
lods
fidivr
out
pop
push
xor
jp
repz
dec
rcl
or
sbb
jecxz
stos
mov
pop
pop
jle
int
dec
adc
push
mov
rol
mov
mov
cmp
push
xor
ins
or
xchg
ret
rol
hlt
xchg
dec
ret
das
inc
(bad)
jns
mov
add
jb
xchg
out
inc
jmp
test
push
setle
xor
ins
dec
push
jo
js
loopne
popf
das
aad
sbb
cld
xchg
and
fs
lds
int
adc
sub
fs
sbb
push
cmp
fst
xor
push
mov
(bad)
cdq
sub
dec
iret
jae
sbb
popa
pop
or
cs
aaa
pop
mov
repz
sub
cmp
jns
out
jns
in
ss
jmp
test
je
(bad)
call
in
test
inc
(bad)
and
mov
lea
repnz
(bad)
adc
loopne
pop
std
cwde
xchg
pop
cld
aas
loopne
mov
or
je
push
push
test
mov
and
js
jmp
and
les
scas
out
imul
ror
inc
int
lods
arpl
lods
pushf
mul
or
jbe
fsubr
or
loope
inc
sub
das
inc
pop
clc
inc
mov
mov
mov
sub
(bad)
jge
rcl
ret
arpl
dec
inc
(bad)
pop
push
mov
ds
push
inc
popf
cmp
cmp
sbb
pop
data16
dec
cmps
test
inc
imul
cld
jmp
jmp
xlat
stos
stos
mov
cli
stc
dec
jmp
xchg
hlt
and
inc
xchg
outs
lds
std
enter
stos
ficom
push
je
ss
mov
in
jge
jle
pushf
cld
dec
fld
ror
daa
mov
mov
shl
dec
mov
imul
pop
pop
pop
xlat
mov
daa
mov
jl
stc
inc
sbb
and
out
imul
pop
sbb
lea
inc
xchg
daa
(bad)
jns
stos
ja
call
pop
pop
fisubr
inc
sbb
outs
pop
jg
test
inc
int
inc
push
xor
xchg
add
gs
lods
movs
test
out
addr16
(bad)
out
fdivrp
out
enter
ret
movs
out
stos
push
adc
jno
std
lahf
mov
dec
xchg
mov
std
aaa
rcr
dec
icebp
lahf
test
enter
lea
or
cmp
pop
adc
sub
pop
mov
popf
out
les
cmp
fldcw
repnz
and
gs
dec
and
jo
xor
in
sbb
xchg
mov
jo
out
test
in
fld
or
xlat
mov
dec
or
adc
test
push
and
push
outs
adc
aam
cmc
mov
add
pop
push
dec
cmp
mov
or
cmp
js
les
lock
mov
rol
mov
add
or
cmp
imul
jb
repz
dec
pop
out
(bad)
mov
push
sbb
jo
psrlw
mov
pushaw
or
inc
mov
add
mul
pop
mov
aam
fdivr
xlat
dec
push
sbb
mov
je
mov
repz
sub
add
sbb
mov
inc
adc
pop
jg
les
pop
js
test
mov
xor
scas
ja
add
mov
adc
je
mov
mov
xor
jecxz
mov
sub
movs
or
imul
jl
push
(bad)
cmp
stos
pop
aaa
hlt
das
push
jne
inc
mov
jbe
xchg
push
jg
push
push
sub
xchg
jecxz
lock
shl
cmp
pop
push
mov
fwait
sbb
mov
mul
clc
push
or
rcr
stc
xor
push
imul
xchg
cmp
mov
push
add
shl
and
movs
scas
jb
ss
iret
out
push
and
fild
out
inc
leave
arpl
adc
push
cmp
xor
pop
mov
mov
jl
lods
add
cmc
push
sbb
cmp
adc
mov
xchg
inc
dec
scas
retf
idiv
daa
adc
xlat
adc
cmp
xchg
xchg
pop
add
mov
cmp
(bad)
and
push
ja
jns
cmp
mov
repz
or
daa
jne
pusha
nop
pushf
loop
pop
neg
shr
mov
and
aas
and
xor
jecxz
mov
hlt
inc
mov
mov
cmp
jle
inc
adc
cmp
sbb
mov
es
push
ret
mov
pop
arpl
cmp
(bad)
push
cmps
loopne
mulps
rcl
sub
popa
test
xor
and
cdq
mov
fnstenv
icebp
jecxz
inc
mov
push
shr
xchg
inc
xor
pop
(bad)
inc
jl
jl
xchg
push
daa
mov
je
(bad)
aaa
dec
sbb
cmc
imul
push
mov
xor
into
loopne
or
jp
inc
jge
add
jb
mov
mov
inc
pop
mov
mul
xlat
pop
popa
pop
ja
fs
call
mov
sub
ins
xchg
(bad)
test
dec
das
in
call
(bad)
out
jmp
pop
mov
mov
pushf
das
or
mov
ror
jmp
cmc
inc
(bad)
add
mov
xor
jle
push
call
xchg
add
xor
sbb
lods
dec
call
inc
lods
scas
xor
fistp
add
cld
sub
and
mov
call
xor
arpl
(bad)
adc
jb
sub
xchg
retf
int3
lea
xchg
mov
out
mov
jbe
and
addr16
mov
cmc
int3
mov
mov
or
push
sbb
pusha
cmp
daa
sbb
xchg
(bad)
dec
cmp
add
fldpi
push
xchg
mov
mov
and
jg
bound
hlt
out
repnz
in
cmps
stc
sub
jp
jmp
test
int
vmwrite
jecxz
daa
jno
mov
xchg
jns
lock
jle
lea
push
rcr
stc
inc
pop
out
lods
lahf
mov
(bad)
(bad)
or
aam
jge
(bad)
jle
push
mov
push
sbb
shr
inc
jb
inc
sar
xchg
das
mov
pop
and
stc
dec
cmp
xchg
mov
inc
int
and
sub
ins
imul
fcmovnu
fimul
scas
xor
sar
js
xchg
pop
in
fidivr
(bad)
repnz
std
(bad)
push
push
sub
jmp
repnz
mov
shl
mov
aaa
and
mov
adc
sub
fwait
pusha
cli
lds
sub
jns
movs
popf
pushf
and
iret
stos
mov
mov
lock
lods
inc
call
dec
clc
mov
popf
fnstsw
in
in
sbb
shr
bound
mov
lock
inc
push
rol
jmp
xchg
(bad)
(bad)
jecxz
pop
mov
jne
ja
sti
mov
add
loop
jns
gs
aaa
adc
inc
push
aad
cwde
cli
arpl
mov
popf
std
or
push
jne
xor
inc
ror
xchg
push
push
pop
pop
std
ret
inc
stos
(bad)
hlt
shr
xchg
retf
inc
mov
aam
ins
and
xor
mov
or
push
dec
dec
or
lea
ror
ror
xor
popa
clc
push
int
pop
stos
jae
mov
popa
jl
xchg
in
fst
hlt
jmp
mov
test
ret
loope
push
popf
ss
cld
mov
cmc
(bad)
pop
ss
jmp
popf
movs
mov
cmps
lds
mov
lods
push
fidivr
cmp
aaa
xor
add
xchg
jge
fst
les
sahf
pop
adc
sti
sbb
add
and
mov
jno
mov
push
mov
mov
fwait
icebp
push
jmp
fcomi
xor
ret
movs
adc
sahf
test
enter
ins
pop
iret
dec
pop
push
lds
fyl2x
inc
std
jmp
inc
ins
mov
(bad)
daa
popf
lods
pop
mov
add
aas
xchg
adc
cmc
mov
mov
or
rol
(bad)
lahf
fcomp
out
mov
cmp
sbb
xor
shl
aas
mov
and
cmps
aaa
cli
push
mov
pop
mov
add
adc
shl
int
xchg
push
test
adc
lock
cs
cmps
add
cmps
mov
ins
aam
inc
inc
or
jnp
add
or
adc
cmps
jns
sti
das
daa
xor
and
push
mov
push
sti
(bad)
lods
retf
mov
cs
dec
mov
sub
lds
jp
fidivr
xchg
xor
out
dec
jmp
popa
test
ror
cmps
fmul
test
mov
adc
(bad)
gs
sbb
jmp
loop
mov
push
inc
mov
mov
ficomp
fisub
fidiv
xchg
out
inc
jmp
push
pop
frstor
(bad)
stc
pop
aas
mov
setb
inc
jl
ret
icebp
mov
cld
movs
rcl
add
jno
fdivr
add
daa
push
stc
ins
mov
frstor
push
(bad)
out
out
ror
mov
push
pop
inc
fcmove
mov
inc
pusha
adc
jae
mov
dec
mov
xchg
xor
xchg
jnp
aam
je
rcr
push
aad
popf
mov
cmp
xlat
neg
and
add
pop
xchg
pop
add
push
movs
arpl
call
cmp
push
int
dec
dec
jle
sub
sub
inc
mov
stos
pop
jge
scas
cdq
jge
mov
pop
mov
xor
fstp
dec
add
adc
cmp
xchg
imul
sub
out
(bad)
mov
mov
push
jg
movs
popf
sbb
push
psubw
(bad)
cli
jl
sbb
pop
sub
cmps
adc
jno
pop
mov
imul
mov
lds
in
mov
pop
lock
xor
mov
enter
repnz
hlt
jmp
add
xlat
ins
jno
cwde
xlat
jae
xchg
call
fadd
imul
mov
or
cld
xor
jo
adc
in
push
repz
cmp
dec
retf
push
hlt
and
jmp
mov
fxch
retf
adc
mov
(bad)
mov
movs
push
aam
pop
pusha
cmps
add
scas
(bad)
cmp
in
iret
je
or
nop
das
ja
adc
add
and
es
int3
xlat
test
call
dec
push
pusha
pop
es
sbb
sahf
jge
mov
loopne
dec
sbb
pop
dec
sub
jg
aas
sub
scas
cmp
dec
ret
adc
ret
xor
adc
imul
test
or
cli
and
aad
lods
ins
aam
int3
and
adc
sub
inc
push
bound
sub
fcmovne
xchg
es
xor
icebp
(bad)
retf
mov
or
inc
aas
xor
adc
xchg
call
es
adc
stos
(bad)
adc
inc
cmp
ins
arpl
inc
pop
or
repz
or
aaa
pop
push
adc
ins
aas
push
outs
leave
dec
movs
call
xchg
ds
sub
ins
pop
(bad)
test
ret
mov
mov
xor
pop
xor
stc
sub
cld
dec
cmp
fucomp
adc
fwait
test
mov
arpl
cwde
rcr
lahf
or
mov
test
xor
(bad)
sub
bnd
push
jae
repnz
repnz
jbe
adc
inc
xchg
imul
sahf
gs
lds
xor
push
push
cld
fiadd
iret
rcr
int3
xor
mov
cmps
sbb
pop
std
adc
sbb
mov
sbb
das
inc
fdivr
test
push
cmp
enter
(bad)
mov
pop
ins
or
sti
ins
push
push
or
sbb
cwde
mov
sub
stos
repnz
mov
mov
movs
or
add
ret
outs
lods
inc
movs
js
shr
div
or
ret
retf
nop
jp
mov
push
cmp
sub
test
jecxz
call
dec
fldenv
icebp
cdq
loopne
test
idiv
sahf
pushf
xor
clc
dec
or
mov
xchg
inc
sbb
add
shl
xor
push
ror
fisttp
xor
aad
fwait
dec
cmp
dec
inc
mov
xor
push
adc
push
cmp
(bad)
adc
and
mov
in
ja
dec
and
cwde
out
into
mov
push
xor
jb
jmp
xor
jle
xchg
xchg
outs
xchg
pop
mov
sti
adc
sub
je
rcr
sahf
adc
adc
mov
sub
cmp
(bad)
repz
and
loop
cmp
push
stc
pop
jecxz
lods
cmp
or
inc
out
xor
retf
outs
inc
ins
outs
inc
dec
data16
loopne
dec
out
jnp
test
inc
xchg
ret
inc
add
jmp
or
push
or
xor
scas
hlt
outs
add
test
stc
or
jns
ret
fdivr
xor
push
int
mov
pop
pop
xchg
jg
lar
out
mov
add
sbb
sub
cmp
sbb
out
cmp
rol
xor
ret
sub
ins
sub
adc
mov
xor
or
dec
jb
dec
xor
pop
mov
fsubr
test
xlat
inc
(bad)
lahf
(bad)
lods
xor
push
(bad)
mov
ds
fdivr
adc
dec
add
das
mov
add
neg
jnp
mov
sub
ins
nop
leave
or
fimul
movs
(bad)
push
xor
mov
or
int3
add
jmp
dec
mov
gs
cmc
pop
imul
pop
lds
push
inc
inc
aam
aad
fisubr
scas
ror
lds
mov
imul
or
scas
rol
mov
add
inc
(bad)
ffree
cmc
adc
cli
pushf
rcr
movsx
ins
cmps
ds
test
(bad)
jmp
vcvtsi2ss
adc
imul
rcr
add
mov
adc
and
pop
leave
xchg
jl
ja
out
mov
gs
shl
push
aad
gs
sbb
inc
and
jge
out
aaa
stc
push
cld
hlt
sbb
retf
mov
mov
pop
pop
sub
push
or
push
fsubp
popf
pop
std
(bad)
loopne
fsub
pop
mov
hlt
fwait
iret
xchg
gs
movs
mov
xchg
ror
lds
adc
ret
aam
cli
je
ret
cld
mov
inc
inc
cmp
ss
scas
leave
add
or
lods
bound
pop
jle
rcl
cmps
retf
adc
test
add
mov
jb
xchg
xor
pop
pop
sar
cmp
xchg
stos
jbe
dec
push
stos
icebp
jl
cmps
inc
call
movlps
mov
mov
pop
push
lds
gs
inc
out
xchg
lock
or
in
not
mov
lock
call
inc
sub
test
cld
pop
lods
xlat
sahf
and
and
stos
sub
test
add
push
movs
jne
(bad)
jmp
inc
xchg
(bad)
js
std
xchg
push
pop
(bad)
aas
mov
mov
leave
iret
fisub
sub
ins
out
test
inc
aam
jno
arpl
xchg
xchg
js
dec
cdq
call
mov
lock
push
jle
test
pop
mov
gs
stc
sub
push
inc
pusha
shl
or
cmp
test
mov
mov
cmps
clc
push
loop
dec
dec
adc
mov
pop
jecxz
enter
std
movs
lods
pop
push
popa
stos
cld
pop
mov
(bad)
stos
icebp
and
mov
jns
xor
lds
jbe
in
xchg
mov
leave
xchg
add
mov
out
fdivr
jo
jecxz
adc
fmul
stos
mov
call
adc
xlat
xor
imul
and
mov
cmp
test
jecxz
mov
sbb
retf
fdivr
mov
mov
fadd
lahf
jno
and
fmul
mov
aaa
stc
dec
sar
mov
inc
mov
push
jp
or
in
jecxz
dec
test
xchg
and
and
rcl
pusha
sbb
inc
and
(bad)
jns
in
xchg
push
inc
or
pop
fs
mov
xchg
gs
stc
pushf
fucomip
adc
int
inc
stos
push
test
xor
retf
adc
jbe
in
ret
test
mov
and
mov
rcl
test
mov
popf
ror
mov
xchg
popa
adc
sub
jmp
jecxz
fucom
and
dec
loopne
(bad)
fidiv
cmp
inc
scas
and
xchg
dec
(bad)
gs
mov
fcomp
add
repnz
cmps
mov
inc
ret
pop
mov
push
mov
xchg
push
aas
test
cmps
in
outs
xabort
ja
fsubr
lods
dec
not
nop
mov
cmp
out
(bad)
sub
aam
jl
int3
jmp
push
(bad)
mov
popf
xchg
or
cmova
jmp
or
ins
jmp
data16
in
push
mov
loopne
and
xchg
adc
inc
faddp
jns
scas
cmp
pop
je
(bad)
sbb
push
and
cmc
jg
and
call
cld
and
mov
mov
mov
gs
ins
gs
jl
mov
jecxz
dec
jne
ror
call
jbe
sbb
push
jne
iret
in
rcl
ss
mov
dec
push
aam
adc
imul
jle
cli
test
inc
mov
jno
mov
(bad)
scas
(bad)
pusha
xor
xchg
push
add
mov
push
(bad)
and
aam
mov
sbb
sub
out
hlt
fisub
xor
ret
xor
ror
and
mov
dec
hlt
pop
call
mov
mov
and
fwait
xor
out
leave
xor
retf
mov
and
sub
pop
jne
xor
pop
jmp
xchg
mov
sub
sbb
jno
cmp
imul
sbb
dec
push
and
sub
pushf
imul
imul
mov
pop
cmp
xor
call
or
cmp
arpl
ds
cld
push
dec
and
pushf
int3
jle
mov
(bad)
and
sub
fld
hlt
mov
pop
repz
(bad)
lds
mov
sbb
dec
lea
test
test
mov
cmp
movs
imul
pop
jl
test
cld
int
adc
dec
mov
mov
out
inc
mul
cmp
cs
mov
leave
aas
sbb
cdq
mov
xchg
scas
cmp
lea
mov
imul
adc
lods
add
fadd
mov
jmp
push
test
lds
ins
xchg
sti
xchg
mov
add
arpl
or
mov
not
mov
call
cmp
jbe
out
lods
fsubr
inc
inc
pushf
sub
stc
pushf
cs
cmp
sahf
push
call
mov
or
xchg
movs
cli
movs
or
inc
push
shl
mov
rcr
jl
jmp
pusha
aam
cmp
ss
cmp
and
xchg
bound
jmp
jnp
xor
sbb
das
aas
dec
mov
pop
mov
leave
xchg
sbb
pop
xchg
mov
addr16
jns
clc
mov
push
sub
fadd
lds
sbb
div
in
sbb
int3
cmps
inc
mov
mov
(bad)
fnstsw
xchg
lea
cmp
pop
xor
jge
jno
clc
mov
test
and
sub
inc
push
xchg
mov
and
sbb
aas
mov
jo
das
(bad)
jbe
lds
adc
in
sub
cmp
cwde
dec
leave
retf
adc
imul
mov
mov
sub
sub
movs
mov
jl
outs
dec
adc
or
(bad)
gs
movs
lods
mov
ret
hlt
in
int3
cmc
fdiv
scas
mov
pop
adc
mov
mov
pop
push
push
pop
std
test
xchg
jle
dec
ds
xor
imul
ins
or
or
inc
in
scas
leave
(bad)
jmp
add
fdiv
test
(bad)
aaa
add
mov
pusha
(bad)
data16
loope
shl
cwde
mov
bound
js
mov
jmp
dec
(bad)
out
xor
dec
test
hlt
ins
adc
cmps
daa
test
mov
sub
test
jge
pop
cmp
(bad)
cmps
mov
movs
and
pop
rcr
or
ss
inc
pop
dec
mov
punpcklwd
sahf
fisttp
into
cwde
jle
ret
add
push
movs
add
push
mov
int
or
adc
sbb
mov
std
push
sub
cmp
(bad)
xor
daa
jbe
mov
cwde
mov
mov
call
std
clc
mov
jno
stc
out
je
jmp
add
and
fwait
mov
cmp
add
and
fcom
or
mov
xor
add
rcl
dec
arpl
or
jge
ret
scas
es
adc
jge
rol
dec
ficomp
push
mov
call
sbb
jmp
or
mov
pop
xor
loop
arpl
jl
ja
in
lss
mov
gs
xchg
call
setle
cmps
dec
mov
add
ja
add
test
rcr
test
cmps
cmp
call
add
xlat
and
in
sbb
pop
dec
push
sub
mov
test
mov
mov
mov
das
movs
in
stc
test
mov
in
aaa
sub
loop
or
inc
in
mov
inc
fstp
push
cmp
retf
add
sub
mov
adc
and
(bad)
test
mov
xchg
adc
cmps
pop
mov
int3
push
dec
es
ret
xor
aad
jnp
push
mov
jmp
push
xor
mov
mov
aas
inc
mov
enter
dec
or
popa
loope
cmp
mov
add
pop
mov
jbe
xchg
sub
sti
dec
xlat
gs
push
jae
fdivr
sar
stos
mov
aas
out
mov
mov
adc
xor
mov
xchg
scas
dec
push
stc
mov
jae
gs
cmp
fiadd
sbb
adc
test
retf
mov
or
xchg
jmp
cwde
fld
(bad)
retf
or
cmps
add
movs
jl
jns
push
adc
jmp
(bad)
(bad)
in
shr
fnstsw
adc
push
or
sub
ins
mov
lock
mov
jmp
sahf
mov
mov
pop
ror
xchg
adc
push
push
sahf
and
mov
mov
retf
ja
(bad)
ds
ins
fxam
jnp
xchg
(bad)
jge
rol
movs
sahf
push
mov
retf
aam
push
frstor
dec
mul
xchg
adc
mov
cmp
mov
shl
mov
sbb
jmp
cmp
and
out
addr16
arpl
sub
lods
and
arpl
jmp
dec
(bad)
and
and
iret
and
adc
mov
loopne
inc
xchg
jg
dec
adc
mov
aaa
jmp
pop
stos
push
or
adc
nop
jo
pop
popa
pushf
out
inc
mov
inc
push
xor
and
or
inc
outs
push
pop
sub
mov
aas
cdq
inc
push
pop
lock
test
(bad)
cmps
pop
cdq
leave
aad
bound
cli
cmps
mov
xchg
rol
adc
(bad)
adc
push
nop
jecxz
cld
into
mov
jnp
mov
test
ins
xchg
mov
adc
push
adc
loopne
icebp
cmp
enter
popa
mov
(bad)
adc
inc
mov
push
fwait
and
call
xchg
pop
fbld
adc
in
and
nop
iret
and
mov
(bad)
int
call
call
pusha
dec
dec
or
movs
data16
sub
mov
cmp
ins
add
movs
shl
retf
leave
movs
mov
das
movs
jno
shl
dec
add
ss
ins
mov
sbb
fs
fistp
or
inc
cdq
push
xor
jmp
jle
sahf
leave
test
jecxz
loop
jns
bound
bound
cmp
arpl
int3
ror
cmps
sbb
adc
rcr
jo
clc
(bad)
(bad)
not
sti
xor
sti
cmp
iret
mov
mov
arpl
add
lock
jno
or
xor
(bad)
xchg
pushf
outs
movs
or
mov
out
int3
imul
pop
mov
stos
int
je
jmp
mov
cmp
push
adc
xor
push
loop
add
xchg
repnz
pop
out
es
daa
ds
jl
cdq
sub
dec
cmp
pushf
xchg
retf
rcr
mov
mov
in
inc
cld
inc
jle
data16
cmp
fnstenv
push
imul
inc
lea
enter
arpl
add
sbb
imul
(bad)
and
xor
cmps
clc
mov
jne
push
mov
dec
inc
mov
outs
sbb
ficomp
mov
(bad)
and
add
sti
xor
test
ja
lea
xchg
mov
sbb
mov
mov
mov
sbb
xor
xchg
ret
out
ja
call
sbb
and
dec
retf
pop
ins
ret
push
xchg
pusha
fldcw
(bad)
or
jo
mov
jnp
push
(bad)
xchg
das
les
jno
in
imul
add
(bad)
and
test
or
(bad)
inc
jle
(bad)
ins
mov
daa
mov
cmc
cmp
inc
add
jmp
jns
pinsrw
mov
xchg
xor
inc
pop
test
sub
gs
mov
aad
mov
push
in
in
out
stos
mov
retf
mov
fbstp
pop
fnstsw
jmp
or
test
xor
mov
adc
stos
sub
or
popf
mov
sbb
(bad)
cmps
xor
pop
xor
and
in
dec
sbb
lock
loopne
aam
xchg
and
jecxz
cmp
jns
imul
in
(bad)
jp
xchg
ret
mov
shl
dec
jp
mov
enter
es
jl
in
mov
std
pop
dec
in
add
call
xchg
sbb
jg
(bad)
movs
push
fisttp
fs
dec
repz
in
repnz
leave
ror
mov
cmp
enter
sbb
int
lds
xor
xchg
inc
mov
scas
cli
cmp
push
inc
cmc
mov
aad
popa
cmps
ins
pop
nop
dec
inc
mov
mov
(bad)
sub
aad
repnz
inc
sub
loope
mov
inc
mov
adc
push
bound
add
lods
cmp
scas
ficomp
pop
loopne
retf
(bad)
pusha
inc
mov
mov
xlat
sub
out
add
sub
je
(bad)
add
push
cmp
popa
jl
push
ret
mov
dec
xchg
push
scas
hlt
paddusb
cmp
xor
test
ja
mov
popf
mov
pop
daa
lds
mov
inc
or
loopne
outs
cmp
popa
in
jmp
jg
cmp
dec
pop
xor
test
add
pop
xor
in
test
jp
rol
les
imul
jnp
sbb
jmp
ficomp
inc
fdivr
mov
or
(bad)
jecxz
xchg
fcmovbe
int3
xchg
ins
into
jo
sub
ror
arpl
pop
push
cmps
and
inc
mov
(bad)
in
movs
scas
jnp
lods
add
or
cwde
je
xchg
pop
jno
jne
dec
xor
xchg
xchg
inc
xor
in
clc
add
ret
mov
and
fcom
mov
cmp
mov
jo
add
cwde
jecxz
xchg
adc
sti
repz
inc
addr16
scas
add
jo
in
jne
add
js
jo
xor
mov
cmp
pushf
in
xchg
std
push
inc
stos
mov
xor
jecxz
imul
bound
sbb
mov
or
dec
jg
mov
rcr
push
movs
gs
or
xor
or
hlt
inc
sub
arpl
es
ss
movs
add
mov
sub
sbb
xchg
jns
jns
jo
jge
repz
mov
or
movs
cdq
stc
mov
inc
arpl
sub
inc
jle
fiadd
mov
xlat
mov
int
sbb
fadd
jle
outs
mov
outs
xor
add
daa
push
test
lds
mov
add
xor
scas
cmps
cmp
push
jne
pusha
sahf
fistp
in
idiv
push
xchg
mov
cwde
mov
push
xor
adc
xor
fisttp
nop
loopne
leave
sti
sub
mov
les
adc
mov
xchg
test
rcl
add
fld
outs
ja
and
loop
loop
call
inc
jno
arpl
jp
sbb
adc
sub
push
out
fsub
sti
inc
jecxz
mov
(bad)
adc
xchg
pop
inc
fdivrp
fsubr
pop
(bad)
and
cmp
fsubr
inc
and
je
cs
cli
enter
movs
mov
cwde
lss
test
xchg
es
xchg
inc
pushf
in
lea
jmp
test
fisttp
or
cmp
iret
jae
mov
xor
or
inc
rol
movs
stos
ja
jbe
pop
xor
jb
mov
jb
loopne
fcomp
mov
jo
mov
jbe
sar
clc
mov
es
int3
sbb
sar
mov
nop
sbb
stos
int3
das
inc
aas
xor
in
addr16
push
or
(bad)
xchg
sbb
jg
mov
imul
or
cmp
daa
imul
test
xchg
jbe
adc
jge
mov
push
pop
jecxz
icebp
inc
test
sbb
xor
aas
mov
inc
mov
sub
inc
sub
mov
sbb
sti
jl
ror
cmp
imul
mov
mov
movs
push
cdq
sub
sbb
leave
pop
xor
loopne
out
scas
fs
stc
jnp
adc
mov
xor
jne
mov
stc
dec
pop
jg
in
mov
jl
retf
or
jecxz
aad
ss
cmc
dec
xchg
pop
imul
dec
cmps
out
pop
out
xchg
or
cmc
out
add
pop
stc
loopne
add
xchg
test
add
(bad)
call
or
scas
and
push
in
or
push
xor
xlat
add
sbb
retf
repnz
retf
in
jo
jp
gs
pop
mov
push
xor
add
popf
test
out
xor
dec
ins
and
add
mov
jae
ins
add
in
fild
inc
arpl
retf
(bad)
(bad)
(bad)
inc
inc
fnstcw
cli
push
addr16
pusha
pushf
enter
push
cld
stos
mov
mov
jns
test
(bad)
sahf
adc
xlat
cmp
sbb
sub
and
jne
adc
ins
xor
(bad)
out
popf
icebp
aas
or
add
push
lahf
add
test
pop
jle
xchg
into
inc
jo
jmp
sub
fwait
add
data16
pop
jnp
pop
data16
adc
cmps
sbb
mov
xor
push
das
call
sar
js
(bad)
dec
movs
xchg
lock
call
pop
lods
or
xchg
sbb
loopne
ins
sbb
cmp
jnp
sub
call
out
mov
sub
xacquire
mov
inc
inc
cdq
cmc
pop
in
outs
aaa
sbb
mov
push
and
mov
and
mov
popf
mov
cdq
cmps
mov
xchg
xchg
jmp
dec
push
pop
dec
idiv
pop
cmp
sbb
shl
out
fsubr
mov
sar
pusha
add
das
sub
sbb
or
pop
add
retf
mov
std
mov
push
mov
pop
jo
and
fstp
cmp
je
fwait
mov
jae
pop
and
adc
mov
ffreep
push
xchg
push
ficom
ror
add
jnp
cmp
inc
sub
call
mov
cmps
lds
scas
test
int
inc
sbb
xor
jno
cmps
std
and
xor
cwde
adc
ds
mov
ss
ss
and
or
mov
mov
loope
add
inc
and
cmp
jge
fimul
retf
and
dec
push
xchg
call
aam
or
and
jl
mov
loope
or
xor
(bad)
push
xchg
test
gs
jns
add
jns
jge
frstor
push
ins
shl
inc
adc
dec
test
les
xchg
sub
cmps
or
aad
mov
cmps
test
jb
mov
les
outs
addr16
sub
call
jno
mov
mov
push
call
lods
cmps
cmp
out
inc
scas
and
ror
cld
cmp
sbb
jle
lods
pop
ss
imul
aas
push
aaa
out
jo
inc
repnz
xor
daa
jnp
pop
dec
jbe
inc
adc
jmp
(bad)
out
push
push
push
jae
out
ins
fwait
adc
enter
xchg
fistp
mov
ins
cmp
sbb
push
sbb
or
pop
popa
mov
or
leave
scas
jmp
dec
aad
push
mov
or
adc
sahf
cmp
aam
sbb
clc
nop
adc
adc
test
xor
sbb
call
pop
xlat
data16
outs
shr
or
mov
adc
imul
adc
sahf
sbb
shr
sar
push
cs
mov
iret
jnp
jmp
push
pop
sti
push
dec
gs
cmp
sub
ds
cli
test
inc
jmp
ja
(bad)
adc
fadd
xor
sub
cmp
enter
jmp
or
(bad)
loop
mov
inc
(bad)
cmp
and
jmp
(bad)
push
sub
xor
mov
repnz
cld
push
cwde
mov
mov
dec
mov
pop
aam
mov
xchg
mov
div
outs
sub
cmc
inc
in
add
xor
shr
jbe
lock
out
adc
adc
retf
scas
clc
movs
sub
mov
mov
xchg
push
push
in
out
icebp
and
cmp
outs
mov
xchg
das
adc
or
ins
std
shr
scas
in
rcl
pushf
fs
retf
es
inc
stos
xchg
or
adc
f2xm1
add
fwait
das
stos
fst
xchg
rcl
adc
mov
mov
jno
sbb
aam
leave
jne
shl
daa
jno
into
mov
lods
loope
in
ins
mov
bnd
push
mov
mov
ds
(bad)
push
jns
pop
dec
movs
dec
rcl
add
jb
scas
pop
ret
or
stos
dec
mov
add
cmp
test
cmps
cmp
sar
mov
ret
fs
ror
xor
shr
or
mov
aaa
push
xchg
mov
push
push
xlat
add
mov
icebp
and
sub
out
inc
loopne
and
dec
int
aad
jbe
mov
into
data16
xor
push
enter
sub
ja
mov
dec
iret
cmp
dec
cmc
sahf
pop
add
sbb
pop
dec
jnp
add
lds
jo
lods
jnp
je
xor
out
adc
lods
retf
adc
push
xor
sbb
popf
out
and
stos
repnz
fnstenv
bound
les
pop
scas
test
xchg
xchg
push
sbb
push
fucomi
test
pushf
mov
dec
cld
and
xchg
out
icebp
fisubr
and
fs
addr16
out
sahf
lock
jmp
pop
neg
mov
int
sub
test
cmp
cmp
mov
ret
sbb
jmp
(bad)
iret
mov
bound
push
mov
aaa
cli
mov
add
pop
mov
jg
(bad)
into
sbb
retf
inc
pop
xchg
push
cmp
sub
xchg
cmp
jp
fcomi
sub
inc
std
push
pop
icebp
and
dec
js
arpl
ins
mov
sahf
and
fmul
sub
mov
movs
movs
into
jg
shl
inc
aad
mov
mov
stos
sbb
sub
aas
cmp
adc
aam
frstpm(287
mov
mov
mov
inc
or
mov
adc
neg
dec
pop
sbb
call
lds
fwait
je
dec
jge
scas
cmp
icebp
xchg
mov
iret
clc
popa
inc
xchg
pop
cmps
xor
pop
cmp
jle
jnp
icebp
loop
and
arpl
and
rcr
adc
add
(bad)
pop
cs
std
popf
pushf
fadd
cmp
mov
in
cmp
inc
retf
sbb
cwde
xchg
push
mov
jmp
cmp
push
push
out
imul
sbb
lds
push
sbb
add
fcom
sub
in
vpsubw
ins
test
outs
mov
mov
aam
cmp
in
or
mov
pop
inc
mov
push
pushf
das
movs
call
call
or
and
cmp
pushf
movs
and
mov
outs
cmp
or
(bad)
sbb
cmp
ss
les
mov
pop
ror
mov
push
ror
(bad)
adc
push
pop
sbb
xchg
jae
xchg
jbe
adc
cmp
jecxz
mov
rol
shl
sbb
xchg
pop
aam
sar
pop
enter
push
jg
ins
and
mov
push
arpl
sbb
jns
test
cmp
mov
jmp
(bad)
data16
add
sbb
dec
pop
and
fwait
arpl
nop
xchg
aam
mov
jp
sub
push
scas
or
xchg
cli
mov
pop
into
mov
int
push
xchg
adc
ret
cli
sub
push
push
cmp
mov
mov
mov
mov
clc
jmp
pop
retf
push
cld
lea
dec
pop
jae
and
cmp
inc
push
xor
sbb
jb
(bad)
out
fistp
jl
pushf
in
mov
leave
jae
ret
vcvtpd2dq
xor
mov
mov
shl
leave
jp
xor
dec
dec
push
and
jmp
mov
int3
imul
bound
js
ja
xor
(bad)
xlat
push
addr16
loopne
movs
stos
sub
icebp
loope
or
or
jbe
mov
shl
jmp
mov
lahf
xchg
jge
repnz
imul
sub
pop
das
mov
jo
icebp
cli
cmp
stc
ins
jae
xchg
and
push
mov
inc
mov
jge
sbb
out
xchg
dec
cmp
nop
scas
mov
iret
xor
mov
xor
adc
out
sbb
fs
jl
call
addr16
aad
(bad)
addr16
mov
retf
mov
(bad)
cmp
or
fcomp
ror
mov
xchg
inc
lock
inc
gs
xlat
cwde
mov
cmp
adc
sub
retf
loopne
adc
inc
shl
xor
and
call
fisttp
pusha
sbb
imul
retf
sub
leave
cmp
push
dec
ins
clc
cmp
jg
sbb
fucom
loop
stos
cli
mov
mov
sbb
or
xchg
mov
mov
(bad)
out
sub
dec
mov
js
cmp
iret
movs
dec
sub
jp
mov
fisub
imul
pop
or
jno
inc
sbb
mov
sbb
cli
mul
sbb
mov
or
iret
pop
leave
push
dec
or
jp
push
out
jae
lods
movs
shl
sahf
(bad)
mov
fstp
movs
inc
sbb
mov
repz
movs
push
stos
loopne
sbb
dec
cld
(bad)
push
cmp
inc
stc
xchg
dec
and
in
cmps
mov
sbb
and
jo
daa
xor
sbb
push
imul
inc
mov
stos
cmp
cli
outs
pop
bound
leave
mov
jecxz
cmp
(bad)
mov
sahf
pop
jns
in
xchg
int
mov
mov
arpl
cs
sub
xor
xor
mov
jnp
xlat
jmp
arpl
jbe
jmp
xchg
(bad)
in
add
loop
mov
dec
ds
cwde
jbe
aas
jg
in
sbb
mov
mov
mov
mov
push
xor
lods
xor
dec
sub
ret
and
fwait
xor
dec
fnsave
sbb
cmp
pop
dec
adc
jp
dec
xchg
push
loope
fcmovnu
jmp
nop
mov
add
push
sub
(bad)
cmp
cmp
sti
jbe
dec
adc
enter
jbe
sbb
jle
add
mov
or
aas
xor
or
sbb
repnz
mov
mov
cmp
dec
pop
into
cs
cs
sub
push
cmp
repz
sbb
and
dec
mov
mov
and
mov
aas
addr16
loopne
dec
jns
call
pusha
fsubr
jo
lods
cmp
adc
sub
mov
imul
mov
or
cmps
movs
xor
and
loope
xor
shl
js
jg
jb
cmc
push
int
adc
lods
lods
jl
loop
loop
mov
das
jmp
test
test
pop
cmp
sbb
pusha
ror
sbb
mov
dec
mov
sub
inc
arpl
pop
cwde
xor
mov
jae
cmp
outs
xor
jne
sub
adc
int
data16
sbb
bound
dec
or
inc
cmp
jno
dec
shl
fimul
mov
fbld
mov
add
jecxz
aas
sbb
jo
test
pop
fild
xchg
int
cmps
sub
xchg
jne
lds
push
(bad)
or
jns
icebp
add
frstor
sbb
sbb
sbb
mov
cmp
loop
pop
test
pop
bound
inc
das
out
aad
retf
mov
in
stc
xchg
adc
jl
fidiv
ins
xor
into
xchg
shl
fcom
je
rcl
cmp
jne
mov
jecxz
fisttp
xchg
dec
scas
push
ficomp
movs
xchg
xchg
mov
daa
cmps
cmp
neg
push
test
loope
jp
pop
pop
mov
arpl
jbe
mov
pusha
mov
lds
push
jl
ins
(bad)
sub
in
in
mov
pop
shl
movs
pop
push
int
or
call
inc
sub
cs
int
shl
push
mov
rol
fdivr
outs
ret
imul
mov
iret
retf
mov
daa
jae
xchg
push
xchg
fs
psubb
push
icebp
sti
es
es
or
push
mov
dec
xor
jmp
(bad)
cmp
daa
add
push
and
inc
pushf
scas
add
loope
pop
lods
xchg
repnz
jmp
jp
xchg
cdq
jge
dec
cmp
inc
bound
or
out
mov
inc
xor
sub
xor
imul
lock
push
jp
adc
mov
mov
fldl2e
(bad)
fwait
push
push
mov
mov
lahf
xor
cmp
or
out
das
sbb
cmps
lds
call
movs
mov
cmps
inc
cmp
mov
mov
icebp
sbb
inc
cli
loop
xchg
xlat
and
xor
push
jl
add
bound
xchg
(bad)
repz
xor
out
sub
daa
(bad)
fimul
jnp
(bad)
mov
pop
jno
inc
mov
mov
hlt
in
(bad)
sub
retf
jp
dec
je
fdiv
hlt
dec
sbb
stos
outs
mov
imul
dec
push
push
xlat
outs
add
inc
into
call
call
add
push
inc
xchg
or
movsx
lods
shr
fnstsw
pop
addr16
mov
cmp
pop
mov
pop
dec
mov
ret
xchg
jo
sbb
sar
je
inc
mov
add
rol
mov
out
rcl
aas
fimul
mov
cmp
or
cmps
mov
xchg
loope
adc
sub
ins
xchg
enter
sub
or
xor
sbb
cmp
jmp
xchg
cmp
sbb
rcl
ds
sti
repz
fwait
jae
add
test
add
mov
test
sub
adc
repnz
ret
adc
nop
dec
hlt
out
or
fwait
stos
jb
inc
dec
push
jmp
cmp
scas
es
xor
sti
sbb
in
popa
test
xchg
mov
pop
sar
pop
mov
inc
repz
(bad)
(bad)
cmp
popf
movs
jb
inc
jb
pusha
test
and
icebp
lds
adc
lods
and
xchg
push
dec
push
repnz
(bad)
addr16
movs
jbe
and
aad
addr16
add
loop
pop
fucompp
int
mov
fiadd
sub
and
mov
xchg
or
in
mov
movs
xchg
adc
push
stos
lods
jno
pop
test
mov
mov
ror
stc
sbb
test
hlt
xchg
jecxz
repnz
sbb
test
jle
sub
xor
std
cmps
xbegin
(bad)
das
mov
mov
adc
movs
xchg
test
scas
jb
scas
push
pushf
mov
or
push
push
adc
dec
cld
mov
mov
push
lods
icebp
mov
out
leave
outs
not
test
push
mov
test
addr16
mov
les
sub
loope
cld
mov
dec
cwde
iret
jne
(bad)
cmp
push
test
stos
imul
inc
mov
je
pop
js
mov
jnp
xor
aad
test
xchg
(bad)
jp
cmp
std
ins
cli
xor
jno
jge
mov
mov
add
pop
in
clc
jbe
test
dec
inc
movs
lock
repz
sbb
cmp
loope
(bad)
mov
lds
ret
and
in
ins
jbe
mov
stc
inc
jp
or
or
ret
jns
push
icebp
sbb
mov
pop
sub
mov
jl
pop
cmps
pop
inc
mov
push
or
sub
ret
ret
xchg
mov
mov
fdivr
pop
in
pop
out
or
mov
push
and
stos
adc
jmp
cmp
jne
push
punpckhdq
and
dec
test
call
push
push
sub
and
jbe
test
lea
dec
rcl
idiv
loopne
push
cmps
mov
aas
cli
sub
and
add
out
rcpps
cmp
mov
or
test
gs
cmp
push
out
cli
out
sbb
test
adc
or
in
mov
mov
mov
lds
imul
(bad)
mov
hlt
lds
fsub
adc
mov
sti
sbb
mov
add
inc
hlt
aad
loopne
out
mov
xor
pushf
outs
cmps
imul
xor
pop
pusha
ret
xor
sub
ret
test
fadd
adc
rcl
mov
daa
add
aam
cld
stos
pop
data16
in
pop
adc
mov
scas
jge
mov
popa
or
cmp
stos
fimul
mov
ret
scas
jp
xchg
mov
xchg
pop
and
retf
xor
add
pop
pop
xchg
jp
cwde
mov
(bad)
(bad)
pushaw
pop
popa
xlat
mov
das
ins
sti
in
test
jo
out
adc
dec
mov
push
push
add
in
cmp
add
stc
out
sbb
pop
push
push
stos
in
push
ss
sub
sbb
(bad)
loop
cwde
adc
loop
retf
mov
and
pop
(bad)
enter
mov
jmp
jge
int
xchg
pop
daa
xor
jmp
jne
and
sub
sti
loopne
jmp
sub
pop
jp
mov
or
pop
mov
pusha
ins
cmp
or
pop
ins
mov
mov
fcom
add
pusha
out
(bad)
fcomp
mov
xchg
fs
sbb
aas
(bad)
scas
ss
popa
daa
cld
dec
mov
pop
pop
push
cmp
in
mov
adc
sub
cld
xchg
loopne
fwait
test
js
clc
lock
out
imul
(bad)
mov
mov
addr16
mov
push
inc
xor
scas
mov
pop
in
ja
xor
inc
and
js
add
push
sbb
fs
shl
test
cmp
es
xor
sub
int3
addr16
cmp
dec
and
fadd
push
push
ss
cmps
inc
mov
jbe
dec
loope
sbb
repnz
mov
xchg
test
rcl
lods
jns
xchg
hlt
cmp
inc
scas
ss
adc
data16
push
cmp
ds
mov
xor
pop
mov
jecxz
push
ss
dec
xchg
mov
ror
cmps
jp
cmp
cmp
js
mov
test
les
je
jecxz
js
loopne
ret
loope
rcl
mov
mov
push
(bad)
jg
push
xlat
adc
enter
mov
les
lea
xchg
jnp
mov
js
gs
js
push
leave
stos
sbb
scas
out
mov
mov
test
push
neg
ja
push
xchg
sub
aas
dec
and
sub
xlat
aas
mov
pushf
add
mov
sub
stc
imul
sbb
fldz
push
dec
mov
(bad)
mov
mov
inc
outs
or
inc
xor
ror
cwde
jns
xor
je
ins
pop
outs
fwait
aam
or
or
call
repz
movs
aas
mov
or
push
xchg
xchg
fs
xchg
dec
out
jo
cld
rcl
lds
xor
xchg
dec
pop
push
and
and
mov
cmps
or
pop
sbb
int3
sbb
push
mov
xor
stos
mov
mov
imul
xchg
mov
adc
or
and
repz
jae
push
and
add
pushf
ds
fwait
adc
xor
fild
loope
mov
ror
push
sahf
fadd
outs
outs
cmp
sub
cmp
inc
les
lock
cmps
(bad)
sbb
cmps
pop
ins
push
add
jmp
pop
les
loope
outs
enter
pop
ins
dec
nop
xchg
repz
mov
sub
xchg
enter
test
jne
sar
add
ss
loope
fidiv
jl
mov
jo
xchg
pushf
aas
sub
add
adc
aam
mov
clc
inc
pop
inc
movs
pop
mov
enter
sub
ss
xlat
pop
jnp
xchg
leave
pop
(bad)
(bad)
mov
(bad)
xor
sub
lods
cmp
xchg
cmp
dec
(bad)
arpl
mov
je
mov
cli
out
or
inc
(bad)
lea
jp
mov
xchg
inc
ret
mov
pop
push
mov
pop
add
leave
jmp
out
rol
sbb
loop
out
pop
bound
mov
inc
int3
shr
(bad)
repz
jmp
loopne
popf
mov
mov
jnp
jnp
jns
add
jle
jo
aaa
retf
sub
repnz
xor
xchg
dec
jmp
sub
pop
(bad)
mov
mov
push
aaa
dec
jge
and
out
xchg
pop
add
mul
popf
cmp
add
mov
inc
push
shl
mov
jbe
test
hlt
jne
std
ja
call
fmul
cmp
fmul
sub
add
jmp
sub
(bad)
ins
xor
jbe
mov
mov
shr
popa
out
inc
pop
in
push
sbb
lds
xchg
dec
imul
lock
inc
dec
jns
add
jge
shl
jg
dec
jo
retf
xchg
in
mov
ins
out
push
in
pop
test
enter
fist
jbe
jg
jmp
push
add
adc
fadd
add
inc
jns
push
xor
pop
cli
fstp
mov
dec
cli
jmp
(bad)
cmp
je
call
clc
push
test
out
test
mov
sbb
dec
dec
nop
retf
aam
adc
mov
jnp
(bad)
jecxz
jecxz
int3
mov
xor
mov
mov
and
(bad)
cwde
cmps
aaa
scas
lock
sub
cli
mov
inc
jmp
mov
loop
cmp
mov
or
push
ficomp
push
sub
and
xor
or
xadd
jns
dec
loop
(bad)
aam
jb
ins
repnz
movs
mov
shl
pop
pop
loope
call
inc
lahf
and
mov
sbb
xor
mov
cwde
iret
cmp
inc
clflush
pop
adc
fwait
sub
adc
jge
dec
aas
(bad)
jl
loope
test
imul
cmp
loopne
xor
dec
pop
sahf
xchg
ret
dec
inc
pop
out
aaa
xchg
ror
jmp
sar
mov
test
sbb
lea
jmp
inc
sub
test
stc
std
add
sub
jo
fmul
(bad)
arpl
arpl
cld
jge
adc
outs
popf
jg
lahf
inc
cmc
xor
hlt
mov
mov
mov
push
inc
popa
arpl
(bad)
sub
rol
leave
sub
out
mov
sar
cmp
inc
pop
std
fwait
cmp
pop
jb
fcomp
jecxz
mov
jmp
pop
(bad)
dec
pop
pop
(bad)
stos
adc
jb
imul
and
mov
mov
shl
add
pushf
outs
inc
and
aas
push
sbb
mov
xlat
push
pop
fbstp
dec
outs
popf
jle
test
ja
idiv
jecxz
cmp
retf
sti
fisub
xchg
mov
xchg
mov
jmp
jecxz
shl
and
test
outs
enter
push
jae
xor
dec
jns
cmp
aad
rcl
sti
movhps
xor
nop
dec
pop
sets
fnstenv
mov
mov
pop
leavew
ret
inc
cmp
add
imul
test
pop
popa
popa
mov
xor
inc
lock
daa
fmul
in
in
inc
or
pop
stos
adc
mov
adc
pop
nop
mov
mov
les
test
call
shl
out
push
cmp
and
rcl
(bad)
mov
mov
cmp
mov
loope
pop
cmc
dec
lds
add
iret
pusha
or
mul
fld
xor
sbb
inc
pusha
or
es
cmp
dec
jmp
pushw
mov
fisub
daa
or
aaa
daa
adc
js
adc
imul
cmp
lahf
adc
sub
lea
and
and
lock
rcr
jg
inc
shl
xchg
adc
enter
scas
mov
call
jmp
mov
aam
fwait
add
push
out
add
test
lods
sbb
not
mov
popf
stos
mov
into
push
add
jg
rcl
cwde
and
cdq
mov
(bad)
fadd
mov
jns
repz
shl
arpl
or
mov
sbb
repnz
cmps
inc
aam
inc
xor
imul
mov
ins
mov
inc
es
xor
nop
stos
inc
cmc
xor
and
cdq
popf
dec
jmp
in
pusha
sbb
or
push
push
std
clc
cmp
repz
adc
les
mov
cdq
test
xchg
icebp
sub
fwait
pop
ds
fwait
sbb
scas
leave
and
sti
pusha
cld
(bad)
loope
push
movs
stc
add
shl
imul
neg
mov
inc
dec
cmp
hlt
out
out
scas
add
cmp
addr16
xchg
mov
push
push
shl
push
ss
xor
xor
inc
pop
aas
(bad)
inc
sbb
nop
mov
in
in
pop
lock
jmp
fcom
std
imul
inc
out
fst
cmp
popa
push
sub
not
stos
cmp
stos
leave
dec
sub
dec
mov
fcmovnbe
ins
lods
enter
adc
dec
sub
inc
cmp
scas
pop
stos
ins
cld
scas
xchg
pop
jne
into
mov
clc
dec
lea
call
lock
jg
jmp
imul
ins
fdivrp
leave
cmc
pop
pop
xchg
push
push
jmp
push
ja
add
lods
shr
fmul
adc
sbb
or
inc
fstp
push
fisttp
aaa
cmps
daa
sub
in
sub
das
cdq
stc
xchg
(bad)
push
jmp
bound
out
mov
cld
repz
mov
movs
(bad)
add
mov
sub
and
bound
out
sti
js
cmps
xor
stos
mov
enter
scas
test
sbb
movs
xor
xlat
and
sbb
fs
sub
push
mov
push
adc
out
ficom
cmps
loop
sbb
daa
fs
mov
ja
jne
adc
xor
out
mov
and
arpl
jbe
mov
lahf
jmp
or
enter
call
stos
jae
push
rcr
adc
addr16
mov
out
adc
dec
or
xchg
and
and
push
cmc
cs
mov
push
xchg
loop
add
push
and
push
fs
das
imul
retf
fmul
mov
aam
push
shl
inc
test
loope
mov
fisub
int
mov
test
ins
inc
push
or
cli
or
fmul
into
jge
retf
hlt
dec
lods
test
(bad)
out
mov
xor
and
or
mov
pop
inc
mov
das
and
cdq
cdq
cmc
ins
mov
push
fimul
pushf
out
cmc
sbb
pop
aas
or
test
mov
sub
or
adc
dec
pop
xchg
push
mov
outs
sbb
gs
cmp
mov
shl
cmp
pop
pop
clc
inc
fbstp
and
inc
test
sub
jae
out
in
imul
jb
cmp
mov
cmp
jmp
add
jmp
pop
sbb
pop
and
push
push
movs
dec
xor
ficom
mov
and
and
sbb
scas
cmp
adc
sub
mov
push
jp
test
push
leave
xchg
fs
adc
cmp
je
mov
in
mov
and
and
jbe
mov
retf
ja
mov
popf
pop
retf
mov
test
jns
ins
jne
in
adc
sbb
add
cli
xor
aam
mov
loope
mov
sub
(bad)
ror
int
and
sbb
push
scas
push
cmp
sahf
jnp
or
adc
popa
test
dec
sub
bound
and
test
loope
fdiv
daa
out
popf
mov
das
lahf
sbb
mov
int
and
aas
sbb
pop
loop
jns
push
loope
mov
fidivr
test
jb
pushf
push
loop
fistp
sar
es
nop
pop
push
sub
call
iret
jbe
imul
sar
pop
mov
movs
xor
sub
ja
adc
mov
or
cld
rcl
sub
fldenv
inc
jmp
jns
imul
inc
adc
arpl
arpl
mov
nop
mov
mov
sbb
xor
je
jl
or
jne
mov
cmps
sub
mov
loop
fsub
xchg
cs
ret
stos
nop
mov
pop
int3
adc
rol
sahf
cwde
rcl
call
mov
and
push
mov
mov
pop
fdiv
out
mov
mov
in
mov
and
dec
(bad)
aam
sub
mov
and
cmc
jmp
ret
xchg
mov
ret
mov
xchg
pop
and
cmc
inc
mov
dec
sbb
xchg
test
dec
cmps
mov
sti
cmp
js
push
pop
adc
jmp
das
mov
ss
inc
mov
dec
aas
imul
adc
or
jno
lds
addr16
test
push
lock
push
jno
or
out
or
sbb
mov
lock
cli
sbb
and
cs
popa
sar
leave
out
lock
movs
pop
push
cmp
add
fist
in
jbe
inc
movs
lds
sahf
retf
cmp
mov
dec
dec
adc
je
mov
mov
rcl
fdivr
dec
mov
mov
or
jp
fisttp
hlt
xchg
stos
jo
stos
mov
in
or
(bad)
pop
gs
out
movs
push
sbb
dec
int3
inc
fs
xor
mov
add
test
dec
push
outs
inc
call
mov
xchg
dec
movs
xchg
add
dec
pop
pop
add
sub
or
sub
and
pop
pop
and
sbb
ins
out
jae
jg
repz
popf
xchg
lods
aad
cmp
(bad)
fstp
(bad)
push
xchg
ror
test
movs
fild
mov
jp
movs
cs
cli
sub
in
add
jne
jo
mov
push
jmp
aam
leave
push
sbb
in
xchg
adc
push
ja
push
icebp
sbb
sbb
add
inc
lds
push
jns
jae
aas
push
int
retf
dec
cli
dec
sahf
test
cdq
jmp
scas
loopne
repz
call
test
push
nop
mov
adc
movs
iret
nop
push
mov
xor
(bad)
inc
imul
arpl
int3
lods
adc
sub
mov
xchg
mov
repz
mov
pop
push
enter
nop
fisubr
in
aad
jo
(bad)
add
jns
test
sbb
popa
push
mov
fcom
add
sbb
add
xchg
lods
sub
adc
adc
enter
cs
int
call
shl
pop
cmp
(bad)
cmc
xor
or
stc
ror
jmp
xchg
daa
sub
iret
ficom
aad
cmp
pop
pop
test
mov
les
scas
xor
adc
icebp
dec
inc
xor
pop
aad
in
and
add
cmps
lods
or
cmp
sbb
mov
out
pop
test
mov
and
inc
cmp
pop
addr16
mov
add
and
sahf
int3
ins
and
mov
push
mov
mov
hlt
mov
xor
imul
mov
pop
js
inc
icebp
js
imul
fdiv
outs
cli
xor
inc
pop
inc
fwait
pop
dec
retf
lods
loope
ret
jg
mov
jne
ret
or
mov
inc
xor
dec
inc
push
sbb
jo
and
push
and
push
xchg
bound
or
loopne
mov
pop
push
loope
xor
adc
int3
pop
push
or
dec
out
icebp
fmul
jl
push
pop
gs
pop
enter
mov
ins
stc
mov
in
aas
into
ror
je
sub
pop
and
or
cli
test
adc
push
mov
ret
jg
jns
popa
jae
outs
pop
pop
cmp
arpl
iret
es
push
jp
icebp
xchg
sbb
retf
push
bound
and
ds
lock
pusha
cli
mov
cmp
call
data16
or
xchg
jecxz
pop
jbe
or
clc
inc
and
or
push
and
scas
cdq
dec
add
mov
ret
leave
sub
nop
add
mov
and
push
enter
jecxz
push
jmp
mov
push
ins
mov
rol
stos
pusha
sub
push
push
adc
repnz
fstp
jecxz
imul
out
xchg
mov
ror
stos
sbb
scas
ja
fs
push
clc
jge
das
or
daa
leave
pop
loopne
or
inc
xchg
push
lahf
inc
movs
dec
pushf
inc
jb
add
imul
xor
mov
hlt
and
ins
push
lods
bound
adc
sub
sub
ins
fwait
bnd
pop
(bad)
leave
stc
xchg
sub
cwde
mov
add
retf
dec
inc
gs
int3
and
movs
aam
jbe
imul
dec
jb
xor
sbb
or
cmp
call
xor
out
arpl
daa
cmp
cwde
out
sbb
cmp
xor
das
gs
xchg
push
mov
ja
pushf
enter
in
shl
sub
push
mov
sub
repz
jmp
sub
out
aam
mov
or
cld
inc
push
xchg
mov
mov
rol
fstp
mov
shr
shl
mov
add
adc
dec
push
inc
push
inc
ins
cmps
pushf
xchg
aas
inc
xor
push
and
mov
test
out
out
inc
xor
mov
push
cmp
push
xor
hlt
imul
sub
xchg
(bad)
lods
gs
test
push
nop
ja
adc
stc
cmp
mov
xchg
jae
pop
add
jnp
dec
dec
ja
add
push
push
sahf
stos
bound
xchg
dec
xlat
cmp
mov
jl
mov
mov
pushf
ss
ret
jg
retf
dec
cmp
mul
lods
aad
jp
mov
add
fwait
or
cdq
shl
add
push
sub
push
imul
xor
das
jmp
jp
add
(bad)
(bad)
iret
call
les
cmp
lock
idiv
mov
in
xchg
mov
aad
push
xor
ds
jne
sub
push
xor
inc
out
scas
fsubr
push
ins
mov
ficomp
pop
je
lods
(bad)
loope
sub
call
xor
cmp
nop
add
jns
ins
stos
test
test
ret
mov
test
push
jg
div
and
xchg
dec
jnp
sub
sbb
push
xor
imul
jmp
test
fisttp
or
cmp
icebp
movs
jb
pop
push
mov
cvttps2pi
imul
add
add
mov
dec
mov
mov
mov
lods
adc
adc
int
push
push
ja
mov
retf
xchg
not
out
lods
cli
mov
mov
fdivrp
xor
(bad)
in
dec
dec
lods
int
xlat
sub
or
(bad)
aam
and
ins
call
mov
retf
nop
mov
aaa
shl
jae
aad
push
add
bound
addr16
stc
arpl
adc
retf
cmp
sbb
mov
sub
and
sub
dec
aas
xor
fwait
je
add
and
les
dec
dec
inc
fnstcw
mov
call
call
mov
repz
cdq
arpl
stc
lds
inc
jmp
mov
or
mov
popa
(bad)
and
aas
pop
jmp
xchg
mov
inc
movs
mov
loope
test
stos
daa
inc
pop
nop
std
jp
jno
scas
rcr
mov
mov
pop
loope
fcmove
lahf
jno
inc
inc
out
retf
mov
and
xchg
cmp
(bad)
xchg
push
dec
aam
xor
add
push
xchg
lods
call
ds
mov
sbb
stos
pop
mov
or
cli
out
in
outs
add
(bad)
cmp
sar
(bad)
or
mul
sbb
jge
out
inc
jmp
pop
fxam
test
pusha
mov
cmp
mov
pushf
hlt
mov
mov
add
sub
pop
lods
pop
sbb
inc
and
push
pusha
pop
test
sbb
cs
loope
int3
rol
xchg
add
nop
pop
jmp
rol
(bad)
loopne
test
and
adc
ins
add
inc
mov
shl
or
lahf
sub
shl
repnz
mov
je
mov
test
lea
push
mov
jp
pushf
cmp
(bad)
sub
test
dec
jbe
fcomp
stc
pop
add
outs
dec
in
ins
cmp
daa
pop
xchg
push
or
and
pop
loope
cmp
loope
retf
lods
add
mov
jg
xchg
pop
mov
push
das
ret
aam
sahf
ja
shr
pop
js
dec
or
in
mov
sbb
in
mov
push
mov
das
je
iret
stos
das
push
cmp
push
mov
cld
daa
sbb
jmp
retf
or
setae
and
cmps
repnz
push
adc
std
pop
xchg
rcl
stos
mov
xor
push
jno
jb
in
ja
or
xchg
test
loopne
cmovp
pop
int3
call
push
add
lock
dec
sbb
imul
(bad)
data16
jp
fild
fidiv
call
sub
fsub
dec
sbb
arpl
pop
xchg
in
outs
(bad)
jmp
jb
mov
or
add
fiadd
cld
add
int3
dec
xchg
cld
ficomp
fidiv
leave
or
adc
add
popf
stc
outs
add
outs
adc
inc
jbe
std
call
jb
jbe
rcl
shl
dec
inc
or
dec
mov
in
xchg
(bad)
xchg
enter
xlat
xor
mov
lahf
jae
cmp
pop
out
imul
outs
push
pop
jnp
shl
leave
push
punpckhwd
sbb
div
pop
imul
sbb
hlt
js
adc
mov
pop
mov
mov
cs
retf
(bad)
ja
xor
pop
shl
sti
push
mov
loope
nop
mov
push
daa
jae
add
scas
or
stc
sub
lea
stos
fs
push
icebp
ficom
jmp
adc
adc
adc
mov
clc
mov
push
dec
aam
es
js
jnp
cli
xchg
int3
in
sub
mov
inc
xchg
sub
sbb
sub
sbb
cmp
std
in
mov
mov
ss
cmc
and
in
or
or
mov
and
comiss
test
mov
push
or
jns
xchg
and
mov
push
sbb
mov
(bad)
mov
and
pop
xor
es
lods
pop
movs
mov
cli
inc
xor
xchg
test
mov
adc
adc
cdq
mov
and
(bad)
popa
add
(bad)
sub
mov
icebp
mov
jb
(bad)
fisttp
loope
and
test
imul
inc
ret
push
and
jp
lock
in
or
inc
loope
cs
mov
sub
icebp
push
push
dec
ds
push
sahf
xchg
cmps
or
outs
pop
jl
aaa
and
out
push
retf
push
addr16
js
scas
test
xchg
nop
repz
ins
(bad)
test
jp
jbe
aad
lods
aad
jmp
aam
cmp
inc
lahf
ja
test
pop
cmp
sub
add
movs
call
enter
and
pop
inc
cmp
add
sub
cmp
adc
pop
je
mov
pop
(bad)
pop
fnstenv
ret
adc
(bad)
mov
cmp
scas
pop
fist
stos
stc
in
push
sbb
sub
test
shl
or
add
jge
ins
jge
adc
mov
mov
les
pusha
ficom
test
mov
mov
xchg
(bad)
daa
xchg
xor
test
inc
test
fidivr
sbb
jns
sub
je
pop
mov
sti
into
mov
pop
loope
pop
add
rcl
push
jecxz
push
ja
into
sbb
je
addr16
(bad)
mov
and
or
(bad)
std
in
mov
cmp
mov
inc
pop
mov
xchg
mov
adc
adc
dec
mov
and
push
rol
(bad)
dec
xor
mov
repnz
jae
call
sub
dec
inc
inc
xor
hlt
call
add
or
inc
imul
addr16
retf
cmps
inc
icebp
shr
cdq
adc
test
xchg
(bad)
outs
push
or
bound
dec
arpl
in
fcom
sub
xor
addr16
adc
enter
push
fsubr
pop
adc
fisubr
cld
push
(bad)
in
repnz
sub
cmp
pushf
idiv
mov
sti
xchg
jb
sbb
out
mov
adc
mov
out
xchg
sub
adc
clc
jne
in
sbb
and
cmp
in
movs
neg
mov
inc
call
ins
mov
inc
add
scas
pop
leave
stos
bound
data16
sbb
fld
jb
fmul
cdq
sar
add
gs
push
dec
dec
mov
leave
xchg
out
mov
xchg
int3
das
iret
sub
mov
ficomp
leave
stc
(bad)
outs
mov
push
shl
jns
or
out
enter
sahf
addr16
inc
jb
mov
hlt
and
inc
out
pop
test
scas
sbb
in
xor
sbb
mov
mov
xchg
mov
push
adc
mov
sbb
fld
cwde
mov
xchg
xor
stc
mov
ja
sub
sbb
int
inc
je
inc
pushf
inc
inc
and
(bad)
fsub
repz
dec
mov
dec
mov
outs
push
in
icebp
(bad)
xlat
std
push
and
out
dec
inc
test
mov
push
mov
dec
push
out
sbb
hlt
or
inc
mov
inc
add
jns
pop
lock
jno
xchg
sub
aam
cwde
mov
inc
xchg
je
loopne
sbb
cmc
cmps
daa
aad
cs
fisttp
inc
push
ja
xchg
mov
xchg
shl
js
scas
ins
jo
mov
inc
pop
pop
ret
icebp
dec
not
dec
or
xchg
mov
repnz
clc
test
imul
(bad)
icebp
or
xor
dec
call
mov
call
inc
push
jmp
and
inc
sub
in
popa
cmp
pushw
or
mov
into
aas
inc
sub
icebp
xchg
inc
xchg
int3
daa
(bad)
mov
push
mov
cmp
jbe
out
or
mov
rcr
call
movs
rol
fstp
out
mov
aam
xchg
push
std
(bad)
popf
pop
sub
add
js
cwd
mov
clc
push
stc
mov
sub
mov
je
scas
lock
(bad)
pop
pop
push
dec
test
and
jne
outs
cli
pushf
dec
push
scas
stos
sbb
mov
adc
in
add
jo
fild
push
imul
fild
cli
mov
jecxz
jecxz
sti
pop
inc
loope
adc
test
lfs
jns
aad
std
dec
xchg
jbe
rcr
js
fwait
xchg
jmp
or
pop
push
or
mov
pop
sahf
outs
or
and
ins
add
adc
and
pushf
add
adc
xchg
mov
cmp
cmp
int3
ret
xor
pop
push
jmp
sub
cmps
xor
xor
fadd
cmp
sub
cmps
jl
aad
pop
icebp
inc
clc
cdq
aam
adc
inc
(bad)
dec
xor
jecxz
push
retf
cmps
jmp
je
inc
and
push
aaa
or
push
ret
ds
inc
xor
mov
out
push
popa
cmp
es
sti
add
cs
or
mov
adc
adc
movs
push
pop
pusha
mov
add
jge
sbb
push
pusha
mov
ins
sub
out
sbb
scas
adc
aas
xchg
imul
rol
sti
aam
sti
cmps
xor
mov
xor
bound
jle
mov
arpl
jnp
fs
pop
dec
push
and
mov
call
cld
mov
or
xchg
sbb
inc
or
mov
mov
in
jmp
jbe
pushf
ins
in
out
sbb
jl
and
pop
push
cmp
sub
sbb
or
inc
cmp
pop
inc
loope
xor
mov
mov
push
test
adc
leave
lock
neg
fdiv
and
xchg
gs
or
and
mov
mov
inc
in
out
dec
add
ficomp
mov
dec
retf
and
jb
stc
in
outs
xchg
mov
and
mov
sub
in
stos
pop
cmp
daa
(bad)
jge
test
adc
sbb
js
or
jo
fwait
dec
out
addr16
cli
ins
cwde
mov
xor
push
mov
sti
f2xm1
ret
outs
add
dec
pusha
popa
mov
pop
jae
mov
pop
pop
test
inc
fwait
adc
adc
retf
pop
mov
mov
add
fs
inc
mov
push
sub
mov
in
in
jo
test
lock
push
cmp
test
mov
in
push
mov
and
sub
jnp
xchg
addr16
sub
xchg
or
call
bound
fisttp
in
outs
enter
or
jp
jmp
push
jnp
mov
cwde
inc
push
mov
mov
ret
lahf
cld
lods
mov
mov
sbb
xchg
loop
sahf
sahf
jmp
pop
xor
out
cwde
add
sar
adc
inc
push
inc
mov
sub
mov
je
pushf
or
push
popf
bound
mov
imul
mov
fwait
pop
int
sub
sahf
xor
ficomp
shl
push
outs
call
outs
add
jle
add
bound
mov
(bad)
(bad)
sti
xchg
pop
sar
test
inc
stc
les
sti
push
lock
mov
imul
test
push
lahf
dec
fwait
stos
retf
int3
sti
cld
outs
and
imul
cmp
xor
mov
sbb
inc
and
pop
mov
stos
out
sub
dec
jo
nop
and
sub
out
ret
or
(bad)
mov
imul
jae
ins
(bad)
into
xchg
xchg
outs
movs
cmps
inc
xchg
xor
xor
mov
(bad)
out
std
iret
pop
int3
stos
ja
push
pop
arpl
cld
cld
pop
and
sbb
jg
repnz
sub
mov
jno
arpl
sub
popa
and
in
pop
mov
mov
mov
dec
lock
mov
dec
icebp
daa
nop
shr
sbb
std
(bad)
(bad)
mov
jo
mov
arpl
retf
cmp
adc
std
cmp
or
ja
fldcw
cmp
sbb
fst
rcr
push
xchg
fisttp
jno
pushf
retf
(bad)
xchg
(bad)
mov
scas
xor
adc
cmp
lods
inc
arpl
addr16
mov
cli
cmps
pop
iret
push
std
or
sub
inc
mov
cmp
push
inc
pop
ret
inc
icebp
out
sub
sbb
adc
mov
in
push
call
push
pusha
push
neg
icebp
data16
inc
fist
ficomp
mov
xchg
or
imul
cli
lea
add
jno
sub
push
cmps
movs
test
push
and
rcl
or
xchg
cmp
hlt
adc
ds
int3
fs
add
outs
inc
inc
int3
jo
xchg
add
arpl
cmp
mov
inc
dec
cmp
add
mov
dec
ficom
xor
jns
ror
or
or
cmps
mov
xor
pushf
les
or
mov
dec
clc
mov
adc
sub
cmp
push
mov
sub
mov
or
inc
and
dec
scas
sub
lods
inc
out
dec
xchg
scas
mov
xchg
shr
dec
adc
mov
add
ss
add
mov
pushf
push
lock
lea
jecxz
xchg
jmp
push
(bad)
jmp
popa
jo
pop
adc
push
aaa
jmp
mov
mov
xchg
popa
retf
repnz
enter
or
sub
mov
adc
out
sub
addr16
inc
ja
leave
out
adc
xor
and
adc
mov
movs
inc
cvtps2pi
dec
mov
sbb
pusha
out
pop
outs
lea
xor
ins
or
in
loope
dec
aaa
mov
ins
xor
or
out
mov
jmp
mov
cmp
retf
fistp
add
pop
popa
das
(bad)
div
inc
in
in
mov
aad
retf
xor
dec
and
fst
xor
mov
jl
push
aad
call
mov
pop
push
retf
mov
inc
add
mov
sar
jmp
arpl
pop
push
pop
jp
push
cmp
xchg
mov
mov
jae
sbb
aad
cmps
mov
sub
int3
pop
push
or
jne
or
push
sbb
push
mov
inc
jno
(bad)
(bad)
pop
stos
retf
xchg
repnz
xchg
mov
mov
adc
sar
ja
adc
mov
in
jns
lods
fs
mov
dec
test
loope
mov
sub
bound
add
xor
icebp
scas
push
sub
loope
push
xor
mov
add
test
cwde
out
push
mov
dec
inc
add
loop
das
push
pop
(bad)
add
xchg
adc
sub
fs
jmp
lods
mov
daa
dec
mov
xchg
test
or
out
out
mov
lods
dec
je
int3
dec
dec
stos
jmp
lds
out
retf
mov
push
les
and
and
push
mov
(bad)
into
loop
pop
ror
jg
pop
push
clc
stos
mov
es
cmps
jl
out
cdq
fnsave
stc
mov
scas
cmp
int3
and
push
jb
mov
in
and
lds
inc
sub
sub
push
xchg
inc
mov
out
mov
push
cmp
inc
ret
inc
or
cwde
xchg
jecxz
sbb
enter
adc
rcl
adc
dec
jbe
push
pop
lds
jb
mov
cdq
or
lods
xchg
(bad)
rsqrtps
shl
js
retf
fist
imul
test
sbb
shl
mov
popa
sti
stos
jecxz
in
jmp
or
xor
sbb
adc
sti
and
scas
push
retf
cli
sub
jle
out
mov
jne
sub
jns
pop
xchg
mov
xchg
stc
adc
ins
and
inc
mul
in
add
daa
xor
es
inc
push
in
sar
ins
movs
jecxz
jne
imul
pop
and
or
xor
mov
and
sub
repnz
pop
gs
test
std
cmp
out
fld
pop
adc
cmp
mov
xchg
gs
pusha
mov
je
dec
push
pusha
aad
ret
fcomp
je
loope
test
mov
sbb
je
adc
sbb
mov
xor
xchg
adc
retf
loopne
and
push
test
add
xchg
pusha
shl
(bad)
retf
loopne
daa
cdq
mov
inc
xchg
mov
push
repz
retf
and
mov
imul
mov
fs
mov
daa
stc
mov
xchg
xor
add
cld
jg
shl
pop
scas
and
or
adc
fdivr
enter
xchg
cmps
or
in
stos
retf
daa
lea
retf
jle
cli
pop
inc
push
dec
dec
dec
frstor
test
jne
xchg
inc
ret
es
add
push
push
fiadd
rcl
pop
add
inc
stc
lock
adc
and
rcl
mov
idiv
mov
test
pop
movs
sub
adc
mov
mov
shl
sbb
mov
ret
mov
mov
loope
xlat
loope
(bad)
rol
xchg
or
dec
int
push
test
aam
pop
push
ss
add
sahf
jo
daa
mov
call
add
arpl
inc
pop
inc
inc
pop
push
push
xor
mov
stos
pop
in
call
push
nop
inc
aas
in
jl
in
pop
and
popa
or
dec
jb
fisttp
retf
xchg
aaa
int
sub
sbb
mov
rcr
enter
push
retf
mov
data16
jmp
add
jb
ja
inc
jae
push
push
sbb
(bad)
mov
cmc
xchg
gs
aam
ret
xchg
leave
daa
mov
xor
out
retf
nop
pop
sub
sub
pop
imul
xor
cmc
test
aam
and
xacquire
stos
add
xchg
rol
xchg
push
test
dec
sbb
sbb
cmp
shl
(bad)
mov
adc
sbb
lods
add
sub
add
push
lods
push
push
mov
push
ds
nop
inc
xchg
and
(bad)
loope
cmps
movs
jmp
or
in
mov
gs
inc
adc
dec
pushf
fisub
les
ins
jnp
adc
sti
retf
stc
pop
cmp
int
mov
xor
ret
repz
gs
movs
mov
or
fbstp
and
pop
int
adc
test
lods
inc
(bad)
ins
inc
sti
push
jle
jne
jp
enter
imul
fmul
in
add
fstp
jecxz
jecxz
ds
mov
imul
xor
xor
inc
aam
cmp
inc
push
cdq
inc
nop
sti
imul
aad
addr16
repz
mov
sub
ja
cmc
mov
jb
push
jp
pop
ins
into
push
addr16
cli
push
xor
adc
pushf
aam
add
aam
scas
(bad)
nop
mov
sar
mov
ins
dec
jmp
jnp
jbe
xchg
cmp
mov
retf
fs
arpl
mov
or
mov
das
add
mov
cli
and
(bad)
jbe
enter
lock
ret
pop
inc
inc
dec
mov
cwde
mov
jmp
mov
and
inc
cs
xchg
sub
sbb
push
(bad)
jae
(bad)
cmp
jno
ret
(bad)
dec
mov
pop
(bad)
fwait
or
movs
sub
out
out
or
dec
mov
xor
es
or
test
cmc
pop
mov
jb
aas
sub
inc
pop
push
imul
jge
rep
pusha
push
pop
cwde
push
jg
lahf
(bad)
mov
imul
and
je
xor
test
ss
scas
push
in
fiadd
scas
sbb
jmp
jns
dec
xor
jo
and
push
loopne
sub
lea
mov
mov
jle
mov
cld
lock
inc
jno
and
and
pop
fstp
push
arpl
push
stos
xchg
movs
mov
retf
xchg
mov
icebp
neg
ins
and
mov
test
js
js
pop
aad
push
enter
bound
stos
shl
or
jle
(bad)
std
es
dec
lods
pop
jecxz
sbb
mov
dec
stos
jae
dec
xchg
cli
fcomi
retf
sub
out
xchg
out
imul
in
jge
push
bnd
push
xlat
add
lock
rcl
push
add
(bad)
cmp
lahf
jmp
lock
dec
sub
dec
cmps
inc
addr16
adc
pop
test
stos
adc
stc
test
xchg
dec
retfw
adc
in
mov
push
xor
daa
dec
mov
or
sub
retf
std
mov
rcl
sub
push
aad
test
in
lods
push
repnz
xchg
mov
ss
ja
push
jo
inc
inc
or
scas
push
retf
or
sbb
mov
jo
je
push
lock
in
pop
mov
sar
test
pop
mov
inc
cmc
jnp
mov
mov
adc
pop
outs
and
push
cmp
mov
and
cmp
mov
lock
fld
push
lods
xchg
pop
call
rcr
not
in
dec
aad
sti
xchg
or
cli
cmp
(bad)
jmp
mov
nop
adc
stos
lds
sub
fs
jge
in
inc
inc
fiadd
daa
jns
adc
sub
pushf
sbb
pop
test
pop
sbb
mov
add
ror
mov
fs
jmp
fmulp
inc
clc
xchg
cmp
and
jp
inc
sahf
cmp
mov
dec
and
dec
adc
call
sbb
in
jp
jg
jge
push
test
pop
pop
fcomp
push
aaa
scas
pop
add
cld
jb
cdq
sbb
mov
lock
adc
jmp
pop
xor
dec
or
and
fst
stc
sbb
iret
push
xor
xor
out
jnp
cs
and
lds
je
aaa
int
movs
idiv
or
movs
pop
and
out
mov
fwait
inc
cmc
pop
loopne
and
add
or
xchg
aas
dec
ret
sub
ins
or
sbb
or
mov
in
sub
(bad)
dec
stos
lock
and
pop
in
dec
adc
push
inc
dec
ficomp
bound
nop
repz
adc
mov
dec
pop
lods
out
push
popf
xor
repz
or
stos
stos
in
repz
jne
test
std
adc
fisttp
pop
jmp
push
lods
cmc
std
dec
or
popf
int
mov
adc
mov
sti
mov
out
das
xor
xor
mov
retf
cmps
cmps
(bad)
or
daa
mov
hlt
stos
xchg
cmp
jo
jmp
arpl
unpcklps
push
mov
adc
pop
popf
adc
mov
xor
cwde
stos
pop
(bad)
mov
stos
cmp
scas
xor
hlt
in
pop
cld
mov
push
jnp
jbe
out
push
test
test
mov
popa
jecxz
jns
push
loope
into
ror
es
xchg
bound
sbb
add
ror
ror
iret
dec
out
arpl
pop
in
and
and
xchg
dec
(bad)
es
cli
outs
sub
ret
mov
out
lds
mov
(bad)
lock
int
dec
sbb
mov
inc
inc
and
ja
ss
mov
inc
inc
je
sahf
sbb
or
inc
sub
pusha
daa
test
mov
test
jg
(bad)
inc
into
ins
jne
pop
cmps
xchg
call
mov
inc
pop
nop
add
les
arpl
into
jnp
jmp
dec
xchg
xchg
fs
scas
mov
dec
out
mov
sub
cmps
call
cmp
call
outs
je
mov
pop
stos
aaa
mov
jmp
loopne
rcr
repnz
mov
cmp
jno
inc
push
mov
mov
fdecstp
call
push
inc
dec
push
cmp
dec
cwde
mov
dec
add
clc
push
mov
ja
push
out
mov
xor
arpl
and
out
mul
call
jg
in
div
es
repnz
sbb
xor
test
fld
icebp
cmp
call
in
mov
shl
jge
ror
adc
lods
in
(bad)
pop
mov
push
sbb
js
rcr
lea
cs
mov
imul
popf
test
test
sub
sbb
add
jge
inc
repz
sub
inc
add
push
shl
jae
(bad)
call
jge
jae
push
sub
test
mov
add
sbb
(bad)
scas
xor
xchg
or
inc
xor
push
movs
mov
xchg
cmps
mov
ret
es
and
movs
fcmovne
xor
les
ins
adc
cmp
stos
push
or
fsubr
pop
sti
dec
lods
push
cmp
mov
sub
pushf
call
push
jmp
fdiv
in
out
mov
or
xchg
ficom
dec
fucompp
mov
rol
xor
jb
cwde
sbb
(bad)
in
add
gs
push
xchg
mov
repz
daa
or
mov
adc
pop
dec
clc
jp
mov
hlt
std
fimul
test
in
xchg
xor
mov
cmc
mov
pop
cmp
inc
scas
lock
jo
sbb
xchg
or
scas
dec
mov
xchg
cmps
mov
cli
hlt
mov
mov
sub
test
lods
add
out
mov
shl
mov
mov
and
adc
sar
shr
mov
mov
jne
push
repz
inc
mov
jg
shl
mov
test
jae
sbb
fcmove
push
mov
pop
ss
rcl
sbb
movs
and
and
mov
cmp
mov
shr
mov
arpl
inc
add
fs
add
push
mov
mov
mov
inc
rcr
loope
push
arpl
popf
mov
add
mov
mov
add
pop
mov
push
xor
jl
sub
and
push
pop
ret
movs
mov
orps
mov
adc
nop
and
lods
loopne
push
imul
out
pop
xor
adc
push
mov
in
xor
xlat
pop
pop
call
and
les
jge
sar
fstp
out
xchg
adc
repnz
lea
in
ins
mov
xchg
enter
(bad)
mov
nop
add
xchg
addr16
hlt
pop
call
push
clc
xchg
cwde
push
pop
jmp
pushf
out
or
adc
mov
xchg
dec
cmp
add
mov
popa
pop
push
lock
js
mov
mov
repz
movs
jae
jp
icebp
inc
ins
and
pop
rol
xor
jb
fidivr
in
and
je
or
je
push
es
sbb
in
jmp
sub
push
(bad)
mov
icebp
mov
mov
mov
(bad)
pop
in
(bad)
fisub
xacquire
add
push
arpl
mov
sbb
jmp
pop
add
jmp
mov
int
jo
loop
(bad)
(bad)
jne
lods
ret
pcmpeqw
sbb
pushf
push
mov
xlat
pop
sbb
xlat
lahf
mov
loopne
(bad)
shl
mov
cmp
xlat
cmp
mov
js
fwait
aam
out
xor
dec
and
sbb
in
mov
les
mov
pop
movs
inc
push
aaa
iret
sub
enter
das
jmp
dec
test
repnz
cmp
movs
movs
test
mov
das
or
xchg
loope
xchg
push
cmps
add
addr16
inc
pusha
push
sbb
push
adc
add
fidiv
repz
xchg
std
dec
jbe
cwde
mov
add
and
add
ffreep
lods
push
repnz
add
mov
dec
daa
inc
lahf
scas
dec
push
adc
push
mov
mov
push
jb
dec
fist
in
lock
cmp
sub
shl
dec
fist
add
repz
ffree
in
adc
bound
out
and
adc
mov
sub
dec
cmp
jg
dec
mov
mov
fbld
xor
rol
(bad)
sub
cmps
mov
lods
cwde
sbb
add
das
aaa
push
nop
(bad)
call
xchg
sbb
push
sbb
mov
fincstp
dec
adc
lods
or
aad
and
mov
cs
clc
xor
mov
mov
cmp
dec
sbb
dec
sbb
out
(bad)
lods
sti
jle
sbb
adc
jbe
shl
add
push
fadd
movs
push
sar
xchg
out
mov
sub
addr16
fwait
jbe
dec
cmp
inc
cli
jle
jge
imul
cmps
pop
sahf
mov
push
in
fisttp
lea
xlat
adc
aaa
add
pop
jmp
mov
jno
fs
mov
icebp
(bad)
(bad)
ffreep
xor
xchg
sti
mov
iret
sbb
ror
push
inc
es
les
clc
push
outs
out
cmp
sub
retf
xchg
rcl
popa
jle
outs
push
ss
adc
mov
movs
xlat
mov
lea
fwait
adc
mov
mov
movs
dec
jp
int
enter
or
imul
push
pop
or
mov
inc
adc
call
sar
mul
mov
rcr
ins
sub
adc
stos
lods
push
pop
fs
xlat
jmp
icebp
ja
je
mov
push
sbb
(bad)
pop
int
out
xchg
push
cmp
test
inc
inc
in
repz
pop
call
mov
out
jae
jg
add
push
jp
lds
call
test
aad
mov
jge
aas
js
add
cs
and
rcr
out
outs
clc
pop
xlat
fisubr
dec
sub
retf
mov
retf
loope
xor
data16
in
test
inc
rcl
mov
ret
cmps
and
fnstenv
ret
cmp
stos
dec
movs
cli
iret
iret
ror
lods
fxch
loop
sbb
repnz
xor
jmp
bound
xor
mov
mov
leave
clc
dec
and
or
dec
mov
jecxz
fs
push
arpl
pop
lock
pop
cdq
jg
loop
loope
popf
hlt
sub
xchg
mov
or
cwde
jne
out
mov
jbe
and
rol
and
cmp
mov
jae
mov
xchg
ficomp
into
cmps
pop
xor
retf
jno
mov
mov
adc
fdivrp
enter
and
leave
out
mov
and
bound
sub
lahf
gs
call
push
sub
icebp
nop
loop
scas
push
int3
inc
fistp
adc
jnp
aad
ins
sub
adc
mov
push
fimul
sbb
inc
jmp
(bad)
cmp
lahf
mov
std
inc
sbb
shl
dec
dec
mov
imul
rcr
test
add
cmp
ret
xchg
cmps
nop
inc
and
push
ret
dec
inc
lods
adc
inc
aad
leave
lods
sub
cmp
mov
les
and
mov
and
dec
adc
test
push
int
mov
es
mov
iret
xchg
cmps
adc
iret
inc
inc
push
xchg
pop
ins
mov
mov
ret
cli
or
fadd
push
jmp
jg
jmp
xchg
add
dec
fistp
mov
mov
imul
arpl
scas
mov
shl
lods
ror
push
out
cdq
ror
jo
add
mov
in
es
xor
or
sub
xor
mul
dec
adc
xchg
popa
mov
shr
xor
jae
add
sbb
add
stos
lods
mov
iret
cmp
jnp
fcmovb
arpl
ss
inc
clc
fsubr
mov
and
clc
imul
add
or
add
dec
mov
cwde
dec
(bad)
push
mov
mov
aas
and
fnstsw
mov
mov
mov
jp
lods
pop
sub
xor
or
xchg
jnp
int3
pop
dec
xor
add
mov
pop
xor
pop
mov
inc
push
ins
add
inc
fwait
jno
loop
and
sbb
outs
jge
mov
jmp
cmp
inc
ja
test
retf
dec
jecxz
sub
or
sti
mov
xchg
xchg
mov
jecxz
inc
outs
int
jns
out
stos
outs
cmp
out
pop
xchg
mov
in
stos
add
push
ins
xchg
or
mov
pusha
inc
dec
or
es
clc
jle
rcr
mov
sbb
pop
push
push
mov
jmp
ret
add
test
and
jb
push
ins
sub
mov
mov
and
shl
adc
std
and
rcr
jmp
mov
jg
rol
in
jae
std
jne
adc
ss
into
loope
add
sub
das
in
stc
sbb
out
(bad)
std
mov
cmp
and
pusha
out
leave
lock
repz
rcr
movs
aas
nop
dec
arpl
jne
mov
out
or
add
and
stc
sub
stos
retf
jge
push
js
popa
push
push
ret
(bad)
xchg
pop
les
push
pop
jo
aas
addr16
jle
jecxz
sub
dec
jo
xchg
and
ds
adc
xor
outs
imul
cmps
xchg
jl
xchg
jecxz
and
enter
(bad)
inc
into
(bad)
sbb
data16
sub
hlt
aam
jae
cmp
cmps
addr16
mov
sub
loop
mov
cmp
ins
or
xor
arpl
int3
adc
mov
dec
sub
dec
lds
cli
popf
stos
(bad)
retf
scas
aas
mov
retf
aad
dec
jl
out
cld
movs
pop
fldenv
push
les
aam
iret
jl
sub
dec
nop
popa
jae
dec
in
sbb
movs
push
aas
jmp
(bad)
or
or
out
outs
sbb
xor
std
sti
mov
jmp
ins
sbb
sti
sbb
int3
mov
mov
int
sahf
ficom
push
jge
popa
ror
sbb
or
cs
xchg
into
mov
test
mov
inc
bound
pusha
cmp
mul
shr
jp
adc
neg
or
and
ds
dec
ficomp
outs
test
call
add
xor
bound
cmp
jp
adc
adc
int
(bad)
fwait
and
pop
jae
add
xchg
adc
sub
retf
jb
jnp
and
adc
(bad)
sbb
test
or
push
and
push
repnz
and
addr16
xor
dec
sahf
xchg
mov
pop
js
sub
adc
rcr
inc
sub
xor
add
gs
jno
mov
arpl
push
inc
inc
(bad)
stc
or
pop
clc
inc
pop
stos
sar
cli
mov
fsub
mov
ficom
push
push
sub
mov
mov
xor
cmp
sti
cmp
cmc
mov
in
fld
add
shl
pop
clc
cmp
inc
sbb
and
(bad)
bound
popa
stc
lock
and
inc
mov
out
xchg
out
sub
ins
aas
(bad)
pop
mov
(bad)
fimul
sub
out
ret
fstp
inc
fsub
hlt
and
arpl
inc
es
mov
stc
loop
aaa
lods
xor
retf
xlat
(bad)
sahf
in
xchg
sahf
add
or
xor
imul
jne
cli
imul
jnp
push
mov
dec
sub
les
iret
sar
jb
int3
scas
mov
jns
mov
jp
pop
or
das
cdq
and
jecxz
pop
jg
cdq
movs
push
or
or
jo
cmp
xor
xor
aam
or
movs
jno
push
inc
xor
fisubr
or
xchg
inc
nop
xchg
sahf
nop
mov
push
dec
inc
pop
push
out
adc
cmc
xor
jl
fst
movd
test
cmp
shr
(bad)
pop
push
jnp
dec
pusha
pop
sbb
adc
adc
aaa
push
es
jle
mov
ret
imul
pop
cmps
scas
ss
push
ret
cdq
xlat
jecxz
pushf
xchg
pop
pusha
repz
push
mov
mov
popa
sub
in
cmp
mov
es
mov
inc
pop
js
or
ud1
cdq
xor
add
repnz
ror
clc
xchg
je
data16
adc
repnz
enter
cmps
xchg
jns
or
jmp
test
jmp
pusha
stos
push
outs
and
lahf
enter
mov
out
mov
lea
shr
sbb
fwait
xor
xor
xchg
faddp
mov
in
mov
pop
adc
pushw
shl
shl
mov
fmul
imul
pusha
add
push
in
jb
sub
movs
xlat
sub
push
loop
mov
mov
cdq
jmp
sub
and
pop
add
stos
ss
cmp
popa
inc
sub
and
mov
call
js
int
mov
mov
mov
test
sub
push
dec
in
dec
xlat
adc
dec
jp
push
push
xor
shr
not
ffree
mov
dec
mov
fistp
dec
clc
sbb
dec
repnz
outs
fidivr
xchg
push
ror
cdq
mov
out
xor
and
dec
mov
pusha
and
data16
out
ja
or
add
cld
ins
inc
repz
push
mov
aas
in
daa
mov
out
mov
mov
gs
mov
repnz
jecxz
jl
jmp
retf
fucomi
inc
loopne
stc
inc
mov
cdq
mov
shr
mov
inc
(bad)
and
xchg
or
push
popf
cmp
test
mov
(bad)
(bad)
and
scas
fldenv
mov
ins
cmp
mov
jns
cmp
inc
jecxz
dec
add
pop
(bad)
fld
das
and
jge
or
sub
enter
cmp
repnz
jae
imul
sub
xchg
pop
ins
adc
fwait
add
test
xor
(bad)
mov
mov
inc
test
mov
or
add
sub
icebp
fnstenv
cld
or
mov
outs
push
mov
call
div
cdq
and
adc
sbb
sbb
and
inc
es
mov
jle
add
jp
lock
mov
and
mov
adc
sbb
es
sbb
(bad)
pop
fidiv
xchg
and
repnz
mov
adc
cld
mov
mov
sub
push
out
cmp
icebp
and
adc
(bad)
pop
scas
ins
fwait
pop
aam
bound
jle
cmp
inc
push
outs
leave
ss
cli
add
inc
xchg
ins
loope
sahf
imul
mov
out
lods
mov
mov
mov
out
sub
pop
test
cdq
fidiv
pop
mov
push
retf
shr
(bad)
adc
dec
shr
jne
sbb
mov
pushf
push
enter
jmp
(bad)
jecxz
mov
test
jmp
popf
and
cmp
dec
mov
or
jbe
cmp
in
jns
nop
cdq
inc
inc
cdq
mov
enter
and
(bad)
out
aam
sbb
inc
sub
sbb
sbb
mov
sub
out
mov
bound
cdq
dec
movs
inc
cmp
mov
pop
jno
repnz
loop
not
push
icebp
pop
sahf
push
jg
outs
jl
(bad)
inc
sub
cmp
ds
stc
test
mov
sbb
sub
jb
in
xor
pop
add
mov
pop
sbb
loopne
mov
pop
inc
sar
shr
ja
sub
(bad)
xchg
(bad)
fld
in
jl
loope
fst
and
jle
jg
and
fimul
loop
xor
dec
pop
shl
push
pop
dec
out
and
mov
repz
leave
inc
xor
fnclex
mov
sub
loopne
mov
adc
push
enter
inc
xor
mov
inc
in
scas
xor
inc
push
jg
sbb
dec
sbb
or
sahf
call
xor
and
es
mov
mov
jno
adc
outs
mov
dec
cwde
pop
xor
jo
sub
sbb
jb
inc
inc
fimul
adc
int
dec
lods
inc
cmp
and
push
enter
int
jne
(bad)
(bad)
adc
sbb
adc
sti
push
jo
adc
push
loope
jne
aas
xor
mov
jmp
imul
shl
xchg
sbb
mov
mov
sub
sbb
js
jnp
int3
add
pop
sub
dec
std
ins
pop
inc
retf
int3
cwde
fbld
or
fiadd
xor
jecxz
and
jae
inc
fs
int3
pop
imul
dec
mov
aas
jno
mov
or
mov
enter
ficomp
mov
jb
dec
cli
icebp
sub
scas
in
sti
dec
ficom
repz
push
in
push
cmps
ss
cld
imul
add
rcr
dec
out
mov
aas
jnp
or
mov
push
das
adc
inc
inc
or
leave
pop
xor
int
fucomp
inc
fcmovu
in
jb
retf
and
sbb
sub
jne
ss
out
and
inc
aaa
hlt
and
cmp
sub
or
jo
xlat
cmp
mov
das
mov
out
sbb
jo
into
shl
fdivr
out
cmp
mov
mov
call
jnp
jecxz
pop
jl
ret
clc
inc
mov
test
or
cmp
fnstenv
std
add
in
jmp
loopne
cmp
push
fwait
clc
xchg
adc
and
ins
jmp
pop
lea
mov
fstp
cmps
sub
and
mov
dec
imul
ret
sbb
daa
and
inc
jno
(bad)
out
aad
or
add
arpl
xor
add
jb
mov
push
test
cmps
mov
mov
mov
and
push
mov
push
inc
cmps
add
fwait
pop
int3
iret
adc
in
sbb
repnz
add
jnp
stos
mov
test
out
mov
fwait
add
pop
or
fcom
daa
(bad)
stc
xchg
xchg
or
inc
pushf
jmp
inc
xchg
shr
inc
cwde
cmp
inc
out
out
or
push
retf
data16
inc
scas
pusha
mov
loop
rcl
pop
mov
(bad)
retf
not
dec
push
and
and
stos
jmp
xchg
mov
push
pop
fisttp
xchg
stos
or
leave
push
inc
jo
test
int
add
fnstenv
xlat
xor
mov
imul
sub
cmp
mov
stos
jns
xor
and
es
dec
gs
fidiv
xor
lds
add
add
icebp
fnstenv
cli
cwde
xor
cmp
dec
loope
outs
add
mov
fld
sahf
mov
ds
jne
cmp
mov
(bad)
mov
hlt
cmp
cwde
lods
or
mov
aas
nop
cmp
mov
pop
jmp
out
es
xchg
(bad)
int
mov
cmp
xchg
dec
aas
and
inc
or
mov
ins
jne
vpandn
ret
ret
pop
sub
inc
sahf
push
int3
out
pop
int
xchg
(bad)
mov
inc
adc
sbb
sbb
lahf
adc
js
mov
adc
cdq
retf
mov
cmps
mov
sbb
shr
aam
(bad)
fnstcw
es
dec
jbe
fiadd
(bad)
shl
mov
or
cvtps2pi
fisub
shl
dec
xor
jae
rcr
mov
lea
adc
test
push
or
jecxz
and
mov
mov
xchg
(bad)
repnz
sub
sbb
jge
data16
pop
jp
inc
test
fnstsw
(bad)
into
xor
and
repz
fild
push
inc
mov
cmp
sbb
push
sub
xchg
daa
pop
aas
mov
push
scas
xchg
jle
jge
push
adc
inc
pop
shr
mov
cmp
loopne
jo
push
shl
bound
add
xchg
adc
dec
adc
lock
mov
rol
pop
adc
jmp
xchg
mov
sbb
push
scas
push
stos
add
mov
dec
push
pusha
shr
fld
in
sbb
call
test
push
ins
call
and
jmp
push
ret
ins
lahf
inc
pushf
pop
rcr
aaa
and
lods
cmps
sub
adc
mov
xor
test
pop
pop
dec
ins
cs
inc
and
xchg
ins
xchg
(bad)
cwde
inc
ds
lds
push
mov
push
mov
pop
xor
push
ds
out
ja
and
fidiv
ins
cmp
ret
test
dec
jae
xor
pop
xor
pop
fwait
inc
sub
test
js
imul
mov
xchg
int3
xchg
sub
psubusw
fstp
cmc
js
sar
pop
pop
test
pop
fmul
sbb
mov
sbb
push
cmp
sub
sub
rol
lock
jge
xor
stc
adc
pop
stc
inc
pop
outs
mov
movs
adc
sbb
pop
sbb
and
sub
test
xor
xchg
push
xchg
sub
mov
aas
push
mov
pushf
cmc
sub
jb
mov
nop
inc
fs
fcom
addr16
je
std
push
or
movs
fcomi
and
test
pop
jb
in
sbb
dec
sbb
mov
xchg
jg
loop
out
mov
adc
lea
inc
mov
std
jo
fst
into
mov
loopne
ins
mov
xchg
or
cmc
mov
xor
fsubr
mov
les
inc
call
push
and
out
xchg
out
aad
adc
in
stc
add
cmp
adc
std
jno
pop
dec
test
inc
sysexit
push
int
scas
lods
push
inc
shl
es
jecxz
inc
push
nop
xchg
mul
push
push
scas
xor
push
jnp
(bad)
fstp
lock
inc
dec
sub
ss
jg
jmp
cmc
xchg
addr16
fstp
mov
out
xor
ret
lea
add
cmc
xchg
gs
xor
pushf
ins
xchg
mov
inc
iret
add
cmc
aas
popf
cdq
outs
pop
out
and
xchg
pop
sub
pop
inc
cmp
xchg
xchg
or
lods
fwait
jp
mov
mov
push
push
lea
mov
xor
sub
xchg
xchg
cmp
not
mov
push
leave
push
mov
mov
pop
inc
xchg
iret
cwde
cmp
dec
lods
aaa
mov
cdq
clc
aad
jmp
dec
xchg
stos
movs
mov
dec
pop
fmul
mov
mov
mov
jae
or
mov
call
in
lock
inc
mov
ret
and
push
or
aaa
sbb
mov
pusha
ret
jb
xor
xor
mov
stos
or
xchg
nop
mov
push
mov
or
jne
pop
pop
dec
mov
sbb
cli
pop
and
inc
in
les
test
rcr
or
sub
and
mov
mov
fwait
mov
int3
or
cli
(bad)
xor
cmp
push
ja
mov
adc
int
outs
mov
xchg
pop
out
sub
sar
(bad)
fst
push
stos
jne
les
add
jmp
call
sbb
dec
movs
std
les
xchg
popa
in
push
jbe
xchg
and
in
push
fstp
add
adc
loopne
popf
pop
pop
cmp
inc
mov
fwait
xor
call
ins
or
inc
rcr
sub
popa
sqrtps
fist
or
xchg
stos
push
inc
hlt
inc
mov
(bad)
out
fsub
pop
cwde
pop
in
pop
test
mov
inc
and
adc
aaa
push
test
in
cmp
sub
inc
cmps
fdiv
push
lds
out
dec
bound
pop
out
cwde
sub
call
push
jno
or
faddp
lea
test
push
movs
xor
ret
sahf
out
mov
(bad)
push
push
push
lds
test
xchg
sbb
jno
fiadd
mov
mov
push
mov
cmp
(bad)
push
xchg
xor
mov
and
pop
(bad)
(bad)
js
mov
or
and
mov
sub
mov
loope
xor
enter
fisub
pop
jnp
sub
sub
mov
push
push
arpl
inc
es
cwde
push
leave
mov
mov
mov
xchg
out
mov
add
mov
ja
ror
(bad)
repz
ss
fld
mov
outs
push
mov
cmp
push
mov
add
dec
div
adc
ret
dec
int
jb
aaa
or
cmp
sub
cmp
jno
mov
inc
clc
mov
and
aad
xchg
mov
adc
push
add
sbb
adc
es
pop
sub
push
loope
cmc
jae
dec
pop
inc
lock
mov
imul
shl
int
jb
pop
or
or
cmp
sub
sbb
int
xchg
pop
dec
mov
sbb
push
jg
adc
or
fiadd
cmp
jo
popf
or
es
jp
iret
mov
pop
jno
mov
jp
xor
inc
jne
xchg
and
mov
jmp
call
add
hlt
xchg
bound
in
gs
outs
pop
cli
loope
xor
int
mov
stc
clc
gs
(bad)
test
fdiv
pop
and
mov
dec
fidiv
inc
call
shl
out
(bad)
(bad)
pop
dec
adc
outs
xchg
sub
sahf
sbb
adc
je
es
xlat
std
stc
int
outs
arpl
sar
je
std
mov
push
inc
add
adc
dec
add
xor
(bad)
dec
into
mov
in
int3
xchg
iret
or
sbb
cmps
pop
cmp
lock
shl
test
int
ret
f2xm1
(bad)
stos
es
(bad)
enter
aaa
jg
int
cmp
int3
fwait
mov
mov
out
jp
push
call
(bad)
cmc
in
jne
bound
repnz
mov
fist
outs
jg
popf
and
cmc
mov
add
xchg
icebp
ds
cmp
fcom
popf
and
stc
outs
or
sti
sahf
dec
or
mov
mov
mov
or
in
inc
repnz
leave
jp
dec
(bad)
pop
xor
stos
ds
push
and
xchg
sub
test
sub
lods
sub
pop
out
call
shl
mov
loopne
sti
mov
jb
aaa
adc
xlat
std
stos
outs
lock
(bad)
aas
jo
aad
pop
fdivr
cli
push
call
and
mov
movs
and
add
add
cmp
jns
retf
xchg
je
mov
stos
inc
imul
mov
mov
(bad)
sbb
addr16
pop
js
neg
xor
ficom
mov
retf
sub
ret
fisub
(bad)
mov
loope
mov
test
stos
add
add
push
inc
jbe
xor
mov
add
repz
push
out
test
lods
out
int3
xor
or
adc
mov
mov
xor
and
adc
jb
xor
xor
ds
and
sub
mov
in
dec
pusha
cmp
mov
inc
and
and
mov
ficomp
(bad)
inc
cmp
scas
mov
jp
inc
xor
call
out
aad
cld
inc
mov
aam
es
clc
lock
dec
push
pop
(bad)
cld
jb
popa
sbb
xchg
jecxz
les
cmc
repnz
jp
add
cmp
sbb
(bad)
retf
xchg
jae
neg
or
shl
daa
repz
and
mov
call
out
adc
mov
aad
pop
dec
mov
dec
cmp
push
cwde
and
jno
pop
sti
dec
and
aas
sbb
rcl
adc
out
ss
in
test
mov
mov
cmp
out
fldenv
aaa
jo
mov
ss
leave
(bad)
ret
outs
xor
sahf
push
push
sub
xchg
inc
loopne
inc
sti
xor
daa
daa
jmp
xor
jge
mov
or
cdq
es
inc
mov
jg
add
jg
cmp
cmp
scas
in
cmp
jnp
pushf
in
xor
mov
xchg
dec
pop
push
es
sbb
hlt
xchg
outs
fistp
pusha
pusha
out
mov
scas
icebp
inc
xor
xchg
test
imul
mov
mov
dec
popf
mov
mov
enter
and
(bad)
call
ss
dec
cmp
cld
dec
cmp
jns
adc
xor
mov
loopne
ins
repnz
(bad)
xchg
daa
push
push
jnp
jns
mov
dec
movs
dec
mov
or
mov
dec
(bad)
fmulp
loop
fcom
pushf
lahf
mov
mov
push
int3
nop
div
push
cmps
push
xchg
dec
jae
(bad)
pop
cmp
mov
jl
es
cmp
cmp
shr
lock
daa
aaa
int3
aam
mov
xchg
jae
add
xor
sbb
mov
lods
fwait
mov
mov
jb
jl
xor
adc
sub
sbb
inc
in
lods
push
int3
fstp
sbb
xchg
jp
(bad)
stc
cmp
popf
cld
retf
dec
xor
mov
jns
or
xchg
adc
addr16
push
leave
jmp
ret
jmp
jns
xor
fsubr
xchg
test
je
jmp
cmp
xchg
cdq
in
div
pop
pop
stos
push
shl
push
push
jns
cdq
push
dec
(bad)
inc
in
test
repz
mov
mov
sbb
call
in
leave
pusha
jo
faddp
ja
mov
mov
push
je
mov
mov
jl
nop
jb
jg
sub
out
jne
push
rep
stos
adc
push
xchg
dec
scas
(bad)
dec
dec
repnz
sbb
adc
add
adc
outs
ins
scas
xor
fisub
xor
xor
pop
jnp
fucompp
stc
call
stc
je
lock
(bad)
xchg
out
xchg
mov
xor
dec
fld
dec
xor
jge
fisub
mov
scas
shr
jecxz
cdq
call
mov
cmp
mov
sbb
and
xchg
sub
sub
xor
jle
mov
sub
mov
pop
test
je
sbb
cld
hlt
xor
gs
sub
xor
test
xor
mov
retf
into
nop
iret
jmp
stc
jb
jbe
and
in
mov
mov
cmps
and
dec
scas
addr16
and
mov
loope
xor
mov
mov
stos
call
fisub
jbe
rol
mov
add
pop
push
fs
lahf
mov
daa
cmp
xor
or
loopne
jne
pcmpeqd
fdiv
sti
dec
jbe
ins
sar
dec
loope
jb
pusha
dec
sbb
nop
push
sbb
test
movs
call
adc
movs
bound
sbb
inc
ror
pop
dec
sub
mov
cmc
inc
fwait
fwait
sbb
(bad)
pop
sub
movs
in
push
jl
inc
(bad)
clc
mov
pop
mov
ins
xchg
daa
out
sbb
call
out
test
jecxz
popf
jbe
add
push
enter
push
xchg
mov
ret
pop
push
fnsave
(bad)
sbb
ficomp
addr16
push
push
in
(bad)
out
jmp
retf
shl
inc
outs
mov
enter
adc
cmp
xor
pop
pop
adc
lds
jge
inc
push
xor
xchg
or
jmp
ret
and
mov
ficomp
mov
xor
lea
imul
fld
sbb
cmps
lahf
loop
cmp
clc
add
adc
push
and
xchg
idiv
rcr
jecxz
xchg
test
xor
inc
movs
cmp
clc
lds
ins
fwait
sar
movs
in
lock
cli
cmp
inc
es
push
sub
sti
sub
or
push
dec
inc
pop
inc
or
rcr
jo
jb
xor
or
aad
in
pop
xchg
sub
xlat
adc
cmp
scas
xchg
enter
mov
std
dec
fistp
std
stos
sbb
icebp
xchg
aad
(bad)
std
enter
(bad)
aas
ficomp
jge
and
das
sbb
cwde
in
out
add
addr16
ja
and
movs
add
mov
jge
cmp
inc
xor
and
stc
out
pushf
(bad)
int
xchg
std
mov
leave
ja
iret
sbb
or
mov
dec
pop
pop
fistp
stos
or
fsubr
shl
ret
sti
jg
retf
cmp
test
lea
jmp
mov
fadd
mov
outs
pop
adc
rol
dec
push
jmp
rol
into
mov
sub
(bad)
out
sub
pop
mov
test
je
retf
out
outs
sbb
push
call
xchg
pop
and
mov
jg
(bad)
outs
std
scas
(bad)
cdq
fist
sti
inc
mov
inc
jbe
pop
cmp
mov
ins
fs
cmps
aam
lahf
dec
pop
jge
cs
sub
or
adc
push
movs
mov
fimul
adc
test
movs
iret
dec
or
inc
dec
repz
and
sti
popa
pop
push
dec
push
rcr
inc
mov
stc
inc
jl
ret
out
xchg
aas
xor
in
lea
add
sti
es
enter
ret
or
push
add
mov
rcr
mov
push
scas
fiadd
mov
pop
dec
mov
(bad)
loope
add
xor
imul
mov
int3
or
inc
dec
sbb
mov
mov
mul
cmp
fadd
mov
ja
aam
xor
push
mov
xor
push
loopne
std
imul
or
int3
xlat
and
in
dec
in
or
mov
adc
mov
rcpps
mov
mov
outs
cwde
jmp
xchg
fcomp
mov
push
jo
push
push
aad
jp
mov
ret
dec
cs
or
and
clc
jp
add
push
push
mov
cmp
test
push
out
xor
jg
sahf
xchg
shl
dec
push
adc
pop
rol
xchg
fs
push
enter
jle
retf
xchg
stos
inc
into
pop
mov
sbb
(bad)
cld
cwde
cmp
js
mov
push
das
loope
je
mov
bound
arpl
or
cs
jnp
inc
cmps
ret
ins
xacquire
pop
and
xchg
in
mov
add
jge
xchg
loop
bound
xchg
loop
or
ret
mov
adc
mov
(bad)
xchg
data16
jecxz
add
adc
push
jae
and
call
mov
ret
adc
je
out
pop
test
pop
add
aas
adc
and
mov
mov
cmp
sub
inc
xor
jo
es
out
sahf
ror
popf
std
jbe
inc
scas
xchg
or
in
add
inc
in
pusha
mov
dec
xor
not
cmc
mov
push
jnp
imul
mov
ficom
xor
or
pop
sub
cmps
and
je
push
xchg
sahf
xor
daa
xchg
inc
stos
call
jmp
mov
mov
into
aam
mov
in
sub
inc
inc
leave
rcl
mov
adc
aad
call
adc
inc
cmp
sub
cli
arpl
xor
(bad)
lods
les
stos
aaa
pop
push
jo
repnz
icebp
jnp
dec
bound
pop
xchg
push
jns
idiv
mov
xchg
cmp
aam
int3
mov
xor
cmp
shr
xchg
inc
retf
mov
rcl
pop
bound
das
sub
into
outs
jge
mov
push
xor
rcl
leave
mov
sub
push
aam
fst
mov
dec
mov
add
pop
(bad)
(bad)
cmps
fsubr
(bad)
cmp
sub
out
ret
push
jae
jnp
icebp
nop
adc
mov
xchg
pop
sbb
mov
xchg
out
fs
sbb
stos
jns
call
test
push
mov
cmp
fstp
pop
push
jnp
idiv
cmps
loopne
dec
(bad)
adc
push
mov
xor
(bad)
test
pushf
popa
mov
pop
in
push
sahf
jnp
add
repnz
mov
jo
popf
mov
(bad)
bound
jo
stos
xlat
mov
mov
cmps
(bad)
std
xor
(bad)
or
push
jns
add
xchg
lods
call
repz
retf
stc
cmp
fbstp
xor
push
cmc
mov
loop
in
adc
mov
inc
rcr
inc
or
xchg
loop
adc
sbb
mov
add
and
mov
js
lahf
test
inc
ins
(bad)
add
pop
(bad)
call
xor
adc
push
mov
push
inc
mov
jns
test
cdq
cbw
pop
mov
imul
pop
fwait
in
and
data16
jle
cld
lock
retf
add
call
pop
mov
pop
xchg
inc
mov
les
ret
xor
mov
call
or
or
xor
cmc
(bad)
inc
xor
not
std
cld
mov
jp
pop
fcmovnbe
pop
and
dec
div
xor
adc
lds
ror
pop
jnp
mov
loop
repnz
dec
mov
mov
jmp
loopne
out
mov
aad
mov
pushf
or
mov
push
ins
in
stos
lea
jmp
jle
sahf
jne
sar
cs
rol
dec
loope
popf
arpl
ret
dec
and
pop
aam
stc
sbb
(bad)
jnp
mov
ja
mov
mov
mov
cmp
push
mov
sbb
pusha
aad
jp
popf
push
popf
push
rcl
pop
std
comiss
mov
and
out
or
mov
cmps
mov
aam
push
pop
test
je
dec
pusha
retf
test
sub
retf
add
fidiv
xchg
cdq
xor
out
push
cdq
jns
cmp
ror
mov
pushf
shr
push
aad
jns
cld
imul
in
dec
mov
bound
and
rcr
or
stc
xor
mov
sub
mov
in
sub
sbb
mov
sbb
mov
mov
add
push
mov
push
sbb
outs
(bad)
(bad)
cmc
xlat
retf
push
cli
iret
pusha
aas
call
test
push
stc
jg
push
cli
pop
push
lea
retf
and
jecxz
in
lea
sub
les
inc
xor
adc
mov
rol
call
mov
rcr
aam
jo
fs
cmp
push
call
int
mov
sbb
fmul
jmp
das
inc
push
jae
inc
lods
es
iret
loop
rcr
movs
push
in
(bad)
(bad)
ret
rcr
rep
adc
push
or
jle
leave
dec
push
stos
movs
cmp
push
(bad)
in
cmp
pop
cli
aam
add
cdq
aam
add
lock
(bad)
cmp
ret
arpl
or
test
(bad)
mov
push
xor
(bad)
imul
shl
adc
and
xchg
pop
into
shr
pop
mov
neg
or
pop
call
adc
inc
aas
les
xchg
cmps
sbb
les
es
sub
and
fisttp
sub
cmp
mov
sahf
sbb
sbb
push
test
retf
js
jae
mov
jmp
loopne
jbe
add
dec
or
dec
inc
pop
mov
and
sti
dec
iret
sbb
or
mov
mov
mov
repz
and
mov
stos
push
jg
cmc
xor
repz
sub
movs
add
adc
cld
pop
inc
scas
aas
fadd
xchg
rol
cmc
int3
push
rcr
sub
sub
cmps
mov
imul
or
dec
dec
int
or
retf
mov
int
pusha
jbe
ja
push
mov
jnp
ss
push
movs
retf
retf
sub
arpl
cmp
repz
or
cdq
push
cmp
lods
adc
inc
add
mov
enter
jl
or
lods
xor
xchg
das
or
jge
sbb
cmps
retf
ret
fdiv
or
repnz
pop
inc
icebp
icebp
ficom
and
mov
(bad)
(bad)
push
outs
cmp
mov
ret
outs
int
int3
outs
scas
inc
iret
aad
push
pop
movs
xor
clc
arpl
jmp
pop
inc
cmp
gs
popa
sub
(bad)
adc
ds
and
push
nop
loope
(bad)
fild
cdq
and
aad
fld
xchg
and
hlt
cmps
inc
push
cld
dec
and
icebp
call
sbb
mov
or
inc
cmp
sub
xor
jno
push
test
cmp
jb
out
mov
in
or
and
xor
push
ins
inc
lock
dec
test
mov
push
push
push
scas
jge
xchg
ss
scas
inc
mov
push
ror
or
mov
sbb
jns
cmp
adc
mov
xchg
gs
shl
in
mov
nop
jnp
mul
and
pop
mov
add
retf
push
lea
jo
mov
adc
retf
icebp
fdiv
dec
sti
ror
mov
in
xor
fwait
pusha
xchg
outs
inc
cs
(bad)
lods
jo
xchg
mov
test
stos
push
in
popf
mov
xor
movs
test
or
dec
fnstsw
jp
and
add
shl
jmp
xchg
call
jge
jl
retf
cmp
mov
and
(bad)
sti
dec
arpl
inc
sbb
leave
shr
ret
in
mov
mov
aad
lods
es
call
test
jge
sub
fmul
outs
fidivr
lods
mov
sbb
les
pop
inc
jb
cmp
fwait
push
adc
in
dec
adc
jo
jnp
in
mov
loopne
in
or
cdq
nop
ss
pop
sahf
test
cmp
fidivr
outs
sbb
scas
pushf
push
nop
inc
scas
pop
jmp
add
fwait
jns
jae
cdq
jecxz
mov
das
cmp
or
int
jmp
fild
sub
and
stc
jecxz
dec
in
dec
mov
mov
scas
or
jne
ret
xor
sti
xor
ds
gs
sub
push
cmp
inc
daa
add
mov
stc
xlat
into
pop
popf
movs
fcomp
mov
mov
lahf
sub
push
adc
cmp
dec
cmp
or
jns
sbb
lahf
out
das
push
ins
pusha
rol
push
push
jmp
jge
cmps
inc
lahf
push
push
pop
cwde
cmps
dec
test
jmp
ja
pop
cmp
inc
sub
lods
(bad)
je
push
jg
sbb
sbb
cmp
mov
lds
fld
jnp
shl
je
or
int
(bad)
push
mov
adc
or
sti
(bad)
cmp
xchg
(bad)
sub
stos
inc
mov
push
into
sbb
test
push
out
dec
pop
cmp
test
adc
call
mov
push
les
es
lds
out
xchg
xor
imul
mov
sbb
pop
test
les
mov
nop
test
ror
pop
lahf
mov
adc
hlt
xor
dec
push
js
jae
xlat
jge
mov
test
ret
outs
scas
mov
daa
xchg
shr
pop
cmp
dec
xchg
jge
sub
std
cmp
sub
out
and
repnz
clc
jmp
out
aad
imul
(bad)
and
push
(bad)
imul
add
lock
jle
shl
scas
dec
jle
cmp
inc
adc
pop
adc
dec
ins
mov
ret
dec
cmc
push
fcomp
aam
pop
push
pushf
and
xor
fwait
adc
ds
cmp
cdq
jne
ds
lea
jmp
loop
lahf
mov
or
sub
mov
in
sbb
mov
inc
pusha
out
aas
fnstcw
adc
scas
dec
xchg
iret
sbb
push
xlat
out
cmp
xor
sti
ror
sbb
sub
mov
loope
ss
mov
in
(bad)
shr
outs
pop
xor
jmp
rol
lds
call
fwait
pushf
push
or
mov
test
mov
pop
mov
cmp
mov
push
lahf
cmp
sti
or
push
mov
stc
test
add
mov
jl
test
ins
and
mov
repz
sub
lds
cli
push
jge
add
sbb
jns
(bad)
xor
into
mov
mov
mov
movs
and
jmp
loopne
cli
daa
jge
ret
fidivr
xchg
(bad)
sar
or
or
or
pusha
sar
lods
jmp
push
add
xor
pusha
jecxz
fistp
cmp
leave
xor
lds
push
and
add
stc
cmp
adc
inc
mov
(bad)
aas
or
scas
sub
jo
in
into
fs
mov
ss
iret
gs
ja
or
es
imul
stc
cmps
les
and
xor
mov
mov
in
mov
ret
lock
pop
jb
stc
sahf
iret
mov
adc
sub
movs
xor
js
pop
sub
pop
int3
jo
mov
fistp
pushf
jp
fs
icebp
xor
loopne
mov
ins
or
add
pop
lods
in
shr
bound
out
jecxz
add
sahf
enter
nop
mov
push
cld
fs
or
push
retf
test
mov
pop
sub
inc
dec
inc
les
mov
fsubp
lods
cmps
aaa
xchg
rol
cmp
in
mov
xchg
iret
(bad)
mov
sbb
dec
pop
imul
dec
hlt
clc
mov
dec
mov
gs
shr
sbb
sahf
pop
cs
jb
call
and
jmp
mov
pop
mov
add
add
dec
(bad)
cmp
jmp
rcr
outs
cmp
retf
js
cmps
inc
pushf
inc
fwait
push
icebp
out
ss
mov
jne
imul
and
jb
fild
mov
jecxz
jecxz
aam
mov
(bad)
in
pop
iret
and
dec
sti
movs
dec
jns
out
and
push
scas
dec
push
aad
int3
das
cmp
lea
xchg
in
test
es
(bad)
or
fmul
aaa
ja
cmovae
add
jge
jno
mov
push
adc
inc
enter
dec
xchg
adc
push
hlt
mov
scas
adc
and
loope
mov
jb
xchg
inc
in
loop
xadd
pusha
add
add
mov
ins
cmp
mov
sub
push
(bad)
stc
cmp
retf
mov
rcl
jae
sbb
repnz
jmp
lahf
mov
sar
add
mov
gs
iret
mov
test
lods
sbb
into
mov
fsubr
repnz
push
mov
mov
lea
inc
fucomp
lahf
sahf
fcomip
jb
cmc
popa
scas
jle
jp
lock
jne
cmp
mov
sub
sbb
mov
xchg
retf
call
cmp
imul
ja
push
inc
or
xor
add
mov
dec
or
mov
push
in
jmp
mov
test
jnp
adc
addr16
adc
imul
repz
jecxz
sub
in
popf
jb
imul
and
inc
mov
push
push
push
cmp
mov
push
jnp
test
mov
(bad)
leave
adc
xor
aas
xchg
xlat
(bad)
and
fsubr
cmc
adc
pop
or
retf
pop
sbb
pop
jmp
xchg
jmp
xor
ins
call
xchg
call
ret
xchg
hlt
inc
repz
fisttp
mov
repz
stos
icebp
jl
stos
xchg
mov
sbb
out
pusha
sbb
xchg
mov
fwait
add
jbe
(bad)
sti
shl
ret
fidivr
mov
je
sub
xchg
in
ins
pop
arpl
fadd
xor
ror
fwait
nop
imul
or
add
jae
shr
mov
and
mov
shr
pop
pop
mov
lods
lahf
mov
xor
stc
iret
mov
add
and
adc
iret
test
or
mov
data16
dec
aaa
nop
lea
mov
sub
cwde
repnz
add
outs
sub
out
ins
xchg
ret
cld
mov
jecxz
idiv
xlat
mov
adc
cli
pushf
or
stos
cmp
ret
xchg
xchg
sti
dec
stos
sub
in
je
cli
push
aas
pop
inc
repnz
out
sahf
(bad)
jg
cmp
mov
ret
mov
dec
in
push
sbb
push
adc
pusha
pusha
xor
lahf
cmc
sub
jo
rcr
push
cmp
movs
popa
rcr
inc
scas
or
div
and
mul
add
es
cmps
int3
pop
push
and
jb
jl
test
hlt
dec
fdivr
sti
add
icebp
cdq
je
jge
inc
pop
adc
popa
sub
cs
mov
push
(bad)
push
pop
xchg
push
scas
arpl
shl
lahf
(bad)
mov
int
xor
movs
ss
sbb
cli
iret
rol
aam
sub
ret
ficomp
inc
stc
jnp
mov
push
push
xor
into
dec
(bad)
xor
out
cdq
xor
vpsrlq
ror
push
push
call
push
add
int
mov
test
mov
xlat
mov
arpl
mov
mov
lds
mov
cmp
cmp
inc
outs
add
scas
fnsave
sub
mov
add
pop
xor
aas
sub
in
and
mov
out
mov
xor
test
jecxz
pop
into
and
test
(bad)
push
js
adc
cwde
xor
(bad)
cli
(bad)
pop
(bad)
pop
pop
out
cdq
fldenv
addr16
cmps
dec
ss
dec
mov
xor
push
outs
add
jns
sub
mov
(bad)
loop
push
push
xor
pop
mov
(bad)
(bad)
pop
mov
cmps
mov
pop
jmp
repz
mov
or
dec
adc
inc
push
xchg
movs
iret
call
outs
push
pop
pusha
jns
pop
icebp
ror
imul
xchg
sbb
adc
test
xor
xchg
pop
not
or
cmc
lds
retf
push
cmp
loopne
mov
jae
test
adc
cmps
pop
dec
jnp
mov
retf
call
adc
mov
add
sub
jae
mov
push
popa
icebp
pop
iret
test
cld
addr16
and
movs
pop
cmovo
fcomp
inc
out
adc
ja
mov
clc
aaa
or
add
pop
ss
dec
add
fdivr
sahf
ja
push
sub
dec
sbb
(bad)
rol
jb
push
xchg
mov
pop
mov
sbb
xchg
(bad)
xchg
iret
sbb
cmps
movs
cmp
sbb
pop
js
adc
lods
or
gs
mov
pop
rol
pushf
and
fcmovb
jbe
push
idiv
icebp
cdq
or
push
push
add
cmc
mov
(bad)
int3
pop
lock
hlt
mov
fstp
pop
mov
inc
jns
xor
imul
sub
enter
push
xlat
(bad)
sbb
inc
int
cmp
clc
out
push
mov
addr16
out
test
in
leave
dec
fneni(8087
sahf
ret
jle
out
or
aas
push
add
jmp
aam
lea
fsubr
sahf
cmp
mov
cld
sti
push
jge
aaa
lock
adc
fs
call
mov
and
mov
jnp
stos
add
shl
xor
sbb
out
xor
add
pop
sub
mov
mov
push
(bad)
fsubr
push
sbb
sub
mov
inc
iret
sub
out
hlt
std
out
xor
push
xor
repnz
cld
aad
xchg
movs
sub
test
clc
or
je
add
mov
outs
pop
jno
or
pop
and
add
sti
push
aas
test
stc
lods
fnstcw
cwde
ds
mov
nop
mov
dec
call
jg
jmp
mov
mov
aad
loop
rol
sub
and
enter
sbb
adc
in
lods
daa
push
scas
push
fild
neg
jnp
mov
cmp
mov
sbb
pop
aad
adc
mov
mov
sbb
call
loop
fcom
retf
ins
bnd
xor
pop
shl
pop
pop
mov
ss
stos
dec
(bad)
add
ret
pusha
jle
cmp
jmp
pop
test
lods
aas
clc
inc
hlt
xlat
outs
iret
mov
fwait
push
idiv
cmps
(bad)
push
int
in
cmp
jmp
and
ret
stos
sub
jle
mov
cmps
adc
mov
dec
fild
mov
cmp
and
movs
sub
(bad)
push
sub
sbb
inc
sbb
(bad)
cwde
(bad)
lods
ins
or
pop
fsub
dec
and
or
mov
clc
ins
jle
addr16
sbb
hlt
mov
mov
xchg
or
mov
push
cmp
bound
jecxz
mov
xor
sub
pusha
mov
in
mov
(bad)
ins
sbb
cmps
sbb
test
sub
pop
jge
inc
scas
mov
jg
arpl
and
push
ret
les
scas
lods
out
std
jb
jp
sbb
cmp
retf
mov
(bad)
ins
xor
sub
shl
retf
mov
aaa
ins
or
or
jl
leave
xor
mov
test
and
sub
test
adc
sub
rcl
nop
shl
cmp
inc
lock
test
nop
pop
mov
gs
adc
xchg
cmp
sbb
lods
jns
mov
std
loop
mov
mov
fwait
jno
fsub
mov
or
ficomp
sbb
hlt
or
jge
popa
vmaxsd
adc
ror
inc
in
outs
push
test
ja
pusha
dec
(bad)
fimul
push
std
mov
int3
and
aad
xchg
jb
sahf
lahf
outs
sbb
mov
outs
and
ss
mov
sar
pop
ins
shl
inc
jecxz
or
xchg
call
and
mov
sbb
push
mov
stos
test
cs
mov
push
repnz
xchg
cli
in
push
out
retf
and
enter
mov
rcl
inc
fst
jne
bound
imul
lods
or
jnp
push
push
int3
xchg
push
fdiv
mov
cdq
fs
ja
fdivr
fwait
adc
aad
pusha
pop
inc
aas
bound
loop
jno
or
sbb
stc
cmp
jb
cld
ins
ds
test
or
or
je
mov
jg
shr
fdivr
sub
(bad)
sbb
sub
dec
imul
fdiv
mov
and
dec
shr
mov
sbb
fwait
leave
mov
jge
pop
int3
jmp
daa
adc
mov
cmp
add
fbld
pop
mov
div
ficomp
jmp
xor
movs
ss
xor
ja
lods
outs
or
cli
adc
mov
xchg
adc
daa
repnz
jb
lods
loope
inc
(bad)
je
aas
add
cwde
stos
aad
in
mov
xchg
and
pushf
adc
lods
sbb
xchg
push
inc
loop
inc
push
fisubr
sub
aas
jp
test
ror
sbb
je
fwait
(bad)
aas
ret
add
shr
jb
dec
push
dec
jmp
pop
dec
(bad)
je
mov
out
je
lahf
or
mov
dec
or
pop
push
(bad)
lods
adc
adc
sbb
test
pop
and
xchg
iret
dec
inc
test
sti
iret
jmp
cmps
mov
les
pop
xor
aam
mov
xchg
sbb
aas
push
jge
es
mov
sub
xlat
popa
int
mov
test
(bad)
mov
out
outs
arpl
mov
mov
into
clc
addr16
cmc
sbb
in
mul
loop
jb
adc
mov
pop
add
or
je
fimul
xchg
out
sub
pop
lods
int3
mov
pusha
fadd
jecxz
lods
pop
push
jne
mov
arpl
sti
out
rcl
pop
lds
int3
mov
dec
es
ins
jo
aaa
xchg
pop
sbb
jl
adc
es
dec
mov
clc
mov
mov
push
xchg
mov
mov
cmp
jg
and
icebp
out
mov
sbb
fdiv
mov
mov
or
pop
sub
fs
(bad)
sub
in
loope
call
mov
dec
pop
call
jns
sub
mov
pop
pop
mov
bound
and
pop
cmp
mov
jns
xor
sti
and
sub
ds
aad
call
mov
out
jl
xchg
das
in
inc
sub
cmp
mov
inc
loopne
mov
push
dec
stos
ficom
mov
or
(bad)
push
sbb
mov
jb
std
sub
or
es
loopne
inc
retf
sub
or
push
push
push
(bad)
push
repnz
test
daa
aaa
cmp
add
js
xchg
xchg
push
adc
adc
cmp
sbb
xor
fisttp
retf
fwait
cmp
popf
jle
test
dec
fwait
mov
or
or
cmc
jmp
arpl
adc
pop
jbe
or
mov
ret
lock
or
adc
(bad)
pop
mov
mov
cmp
cmps
mov
call
mov
jbe
sub
test
sti
neg
out
cmp
inc
and
out
fnstsw
dec
jmp
or
pop
(bad)
mov
push
ds
stos
call
sar
scas
jp
mov
push
and
xchg
and
lea
test
mov
ins
std
les
mov
stos
dec
sbb
fidivr
and
pop
movs
xchg
imul
jb
inc
lea
inc
sub
sbb
mov
adc
je
out
xor
scas
xchg
cmc
jmp
jmp
cmp
jge
xchg
dec
jbe
retf
ds
push
repz
push
adc
add
dec
xor
push
or
shl
das
xor
cdq
ficom
stos
mov
dec
jmp
fmul
les
test
push
cmp
or
ins
cmp
or
(bad)
and
jo
cld
pop
dec
adc
mov
xor
fs
cmp
mov
push
push
retf
xchg
sahf
lahf
jge
xchg
cdq
inc
fwait
test
in
jg
ja
daa
push
pop
loopne
cmps
fisubr
pop
xchg
add
cdq
inc
enter
repnz
pop
dec
sub
test
push
push
leave
ja
cmp
dec
arpl
add
fstp
add
jne
mov
sub
lods
into
mov
inc
xor
xor
retf
retf
iret
xchg
pushf
rol
shr
inc
mov
inc
mov
sub
xor
inc
mov
push
xchg
mov
lock
jmp
popf
xchg
mov
mov
mov
xchg
sbb
or
push
and
jnp
mov
lahf
adc
sbb
xchg
outs
xchg
sub
out
icebp
shl
loopne
mov
push
push
pop
std
pop
pusha
scas
jb
int3
loope
mov
sbb
adc
add
and
push
push
adc
mov
push
or
cmp
out
push
pop
clc
cli
dec
dec
test
mov
and
or
inc
mov
cmp
(bad)
mov
jle
inc
fwait
sub
and
push
cmp
xchg
test
mov
dec
add
jle
cmp
loope
adc
out
mov
cmp
pop
adc
stc
mov
dec
retf
inc
icebp
lds
hlt
cmc
xlat
and
xor
sub
sti
jmp
test
test
sbb
sub
out
jne
in
pop
jne
pop
inc
sahf
pop
jno
scas
inc
pusha
addr16
fisub
add
(bad)
fcmove
int3
scas
push
pop
push
jno
mov
imul
inc
xor
enter
pop
sahf
push
cmp
add
sub
leave
jo
ins
cmp
cld
sbb
popf
sahf
aad
mov
jg
in
hlt
dec
hlt
test
jg
aaa
dec
cdq
adc
inc
sbb
ret
sti
loope
dec
push
pop
jb
add
jns
stos
das
outs
pop
(bad)
and
cs
mov
enter
ss
xor
movs
inc
cmp
mov
repz
pop
fisttp
icebp
lahf
xor
aam
mov
inc
leave
sub
pmaddwd
leave
mov
jae
jns
movs
dec
jo
push
fild
sub
and
rol
test
xlat
ds
mov
adc
push
inc
daa
sub
aam
pusha
sub
push
(bad)
pop
jle
xchg
dec
sub
sub
add
add
jns
fcom
mul
fcmovnb
cmp
pop
inc
pop
into
add
sub
xor
ret
ficom
cmp
lea
pop
cmp
pusha
sbb
push
daa
push
test
movs
xor
jge
mov
sub
inc
(bad)
xor
ror
test
neg
nop
jbe
jo
mov
lds
or
movs
add
cmc
out
jo
repnz
push
aas
sbb
add
loopne
aam
movs
jmp
push
retf
popf
xor
fistp
sbb
outs
in
inc
not
(bad)
ins
push
call
js
xchg
pop
cdq
inc
push
loope
push
sbb
push
xor
out
ja
(bad)
mov
pop
call
mov
mov
jmp
or
aam
cmp
call
fs
dec
cmp
inc
sbb
jle
lock
mov
jecxz
sti
cmp
inc
jno
pop
mov
xchg
test
ror
cmp
lea
inc
or
dec
loope
ss
popf
loop
mov
out
shl
imul
dec
lods
movs
xor
cmp
movs
pop
jbe
cmp
and
push
(bad)
add
and
push
aad
jmp
mov
test
scas
sub
or
in
or
call
retf
mov
inc
pop
outs
sbb
pop
cs
mov
jp
in
outs
dec
or
(bad)
fidivr
shl
dec
dec
push
ds
mov
xchg
(bad)
in
pop
das
aaa
lods
lock
das
cmp
inc
dec
add
mov
jle
aam
cmp
test
int3
cs
mov
xchg
ret
mov
test
in
mov
retf
daa
xchg
fsubr
hlt
adc
dec
and
cmp
addr16
outs
cld
out
mov
add
retf
data16
ins
cdq
lea
push
dec
fnsave
pusha
sar
call
in
fild
loope
cmps
xlat
add
push
sub
cdq
mov
push
test
shl
popa
jno
retf
mov
mov
xchg
sbb
movs
dec
loop
xchg
retf
and
inc
jno
ja
adc
or
and
es
fs
stc
arpl
xchg
jae
lods
loop
xor
and
xor
fistp
fwait
and
je
imul
pushf
test
xor
push
dec
pop
mov
sub
push
inc
fsubp
vpaddw
imul
icebp
pushf
or
xchg
inc
inc
and
call
mov
and
(bad)
out
inc
ins
sti
and
lods
mov
int
xor
mov
or
mov
inc
pop
mov
fdiv
loop
mov
addr16
fs
shl
lock
out
or
or
jne
(bad)
lods
jp
jns
adc
push
jp
xor
sub
test
stc
add
add
aas
mov
adc
pop
ins
ins
sbb
inc
adc
and
xchg
cmp
out
sbb
push
add
dec
scas
pop
jle
pop
xchg
cmc
lods
cld
push
pop
cmova
mov
or
cmps
sub
add
or
sbb
sbb
mov
and
pushf
leave
mov
(bad)
bnd
ror
add
xor
sbb
lods
inc
retf
cmp
hlt
outs
push
adc
jp
push
cmps
xchg
aam
iret
enter
out
add
mov
push
(bad)
retf
jo
dec
(bad)
fidivr
imul
cmp
shl
popf
dec
movs
int
and
(bad)
and
inc
(bad)
bound
xchg
(bad)
fucomi
lock
xchg
hlt
ins
xchg
aam
std
or
daa
repnz
inc
stos
pop
cmp
adc
sub
pop
ja
mov
dec
in
jl
rcl
movs
mov
mov
sub
push
push
mov
jge
sbb
or
dec
mov
cmp
cmp
mov
leave
stos
jge
mov
or
in
in
into
(bad)
dec
push
jg
jns
fbld
sub
mov
ins
mov
jg
or
rol
sti
and
pop
jg
es
jmp
mov
test
jb
xchg
hlt
(bad)
adc
enter
test
ins
xchg
pop
add
call
xor
(bad)
cwde
pusha
aas
mov
add
xor
std
push
mov
popf
pop
add
and
fcmovu
sub
mov
paddsw
xor
push
movs
fadd
xor
cmp
push
mov
cdq
lock
push
cmp
stos
mov
dec
aam
and
ret
mov
lea
dec
sbb
mov
add
mov
mov
out
push
es
mov
imul
jae
lods
jg
jo
cwde
mov
mov
(bad)
jnp
dec
int3
int3
mov
in
or
adc
mov
jae
dec
aam
fistp
jge
inc
mov
ret
ja
or
int
add
inc
mov
shl
mov
mov
xlat
sub
dec
dec
pop
sbb
loop
adc
je
je
aam
inc
test
or
in
mov
movs
(bad)
add
in
or
cdq
mov
mov
movs
repnz
shl
rcl
cdq
bound
jno
daa
push
fild
movs
sar
jecxz
pusha
ror
icebp
push
cmc
shl
js
xchg
in
or
pop
or
pop
inc
sbb
sbb
mov
mov
retf
mov
xchg
in
mov
xchg
mov
sub
jmp
mov
jecxz
mov
retf
retf
aam
outs
cmp
add
pop
dec
(bad)
or
test
cld
adc
or
and
push
imul
cwde
inc
mov
in
stc
sub
iret
enter
cmp
test
rcl
dec
bound
push
adc
cmc
sub
(bad)
in
cmp
jl
(bad)
lods
jmp
dec
or
inc
test
sub
sbb
std
imul
ja
mov
mov
in
call
outs
mov
mov
adc
xor
aam
xchg
or
imul
loope
stos
pop
and
nop
into
ins
addr16
dec
xor
adc
cmp
in
jae
ins
mov
int
adc
mov
mov
(bad)
stos
xchg
mov
fs
jne
repnz
fmul
mov
jge
adc
ret
xchg
push
cmp
inc
(bad)
mov
mov
or
fisub
pusha
fldcw
leave
xor
gs
test
fsub
pushf
add
sub
aaa
ss
add
mov
outs
repz
cli
mov
pusha
fist
das
les
pop
test
nop
rcl
mov
or
dec
retf
iret
sti
mov
jno
xor
(bad)
cdq
push
pushf
dec
mov
(bad)
sbb
fs
dec
fdivp
ja
in
mov
sub
fidivr
mov
daa
test
xor
push
leave
cli
cdq
jne
outs
push
call
push
jg
or
test
xchg
aam
xlat
ins
nop
daa
(bad)
xor
inc
mov
adc
pop
jge
cmps
popa
cs
xchg
xchg
shl
in
popf
and
popa
out
data16
pop
test
mov
add
adc
out
and
sub
sbb
stos
mov
dec
aas
daa
jl
add
(bad)
int
or
push
push
sub
call
cs
icebp
(bad)
in
fld
or
nop
ds
arpl
jmp
std
(bad)
mov
and
pushf
es
shl
addr16
or
popa
ficom
mov
and
and
mov
lods
ret
push
ins
cmp
push
cwde
cmovnp
sub
xor
mov
fnstsw
pop
shr
cmp
repz
cli
xor
xchg
sahf
xchg
pop
mov
das
enter
cmc
adc
xchg
in
retf
es
test
xchg
push
iret
lods
sbb
ret
cmps
lds
retf
dec
push
gs
jne
imul
and
les
jnp
push
repnz
ret
push
jg
push
mov
inc
cmp
jmp
adc
out
add
sahf
das
push
cmp
cmps
xor
mov
push
sbb
inc
dec
sbb
pop
loopne
dec
jp
pop
ins
test
inc
mov
jno
pop
(bad)
out
sbb
ficom
add
outs
cmp
inc
mov
mov
jmp
push
fcmovnu
inc
in
xor
cmc
jmp
jbe
cmp
dec
stc
js
faddp
jp
inc
mov
shl
inc
es
int3
aaa
popa
cli
test
stc
mov
cmp
push
dec
(bad)
out
inc
cmp
cmc
test
jmp
out
shl
ret
inc
jmp
adc
iret
retf
stos
or
mov
add
enter
xchg
out
gs
mov
push
or
loop
aaa
das
sti
add
adc
imul
test
jmp
cld
fnop
mov
xor
addr16
jno
jno
xor
dec
sub
loopne
mov
mov
scas
or
or
call
inc
pop
repz
adc
imul
fxch
push
sub
div
test
inc
test
daa
cdq
jp
and
xchg
sbb
or
cwde
mov
pop
xchg
sub
imul
sub
push
mov
mov
sbb
add
sbb
dec
adc
pushf
cmc
(bad)
sub
icebp
pop
loopne
xor
adc
inc
jmp
or
adc
out
sar
retf
xchg
jmp
cli
int
dec
sub
jge
cmp
out
scas
inc
mov
sar
push
cs
sti
fcom
leave
lea
push
sahf
or
fcomp
sti
adc
cmp
pop
push
call
aam
adc
mov
(bad)
out
bound
or
lock
call
pop
xchg
rcl
fist
nop
mov
js
mov
sbb
mov
retf
add
fwait
pop
hlt
popf
ss
sub
jge
imul
mov
or
jae
pusha
jle
pop
fimul
in
cmc
push
icebp
xchg
retf
scas
aad
dec
inc
scas
sbb
xlat
ds
adc
sbb
adc
iret
iret
jbe
ret
fucom
xchg
dec
add
pop
stos
js
mov
add
arpl
stos
into
(bad)
sub
ret
mov
(bad)
inc
xchg
xchg
lahf
out
sbb
xchg
sub
mov
and
stc
push
xor
push
or
sub
stos
sbb
sar
test
xchg
push
pop
dec
jb
stos
jmp
mov
shl
add
push
test
ja
push
push
das
ins
mov
stos
mov
mov
mov
pop
push
in
dec
dec
sub
aas
ror
call
fsub
push
jl
pop
and
adc
mov
in
sub
into
test
(bad)
mov
and
nop
xor
push
pusha
adc
jp
stos
adc
out
xchg
movs
pushf
fnstsw
sbb
mov
loop
mov
adc
rcr
pop
xchg
cs
cwde
adc
ds
push
adc
push
(bad)
mov
and
mov
mov
xchg
and
pop
cmp
mov
(bad)
aam
or
jg
jo
repz
aas
pop
fdivr
mov
cmp
dec
test
nop
mov
mov
or
int3
or
repz
ret
jnp
scas
nop
inc
cmp
test
push
inc
imul
adc
stos
jle
aam
lahf
mov
es
sbb
test
hlt
and
mov
aad
test
and
por
out
and
xchg
mov
jp
sbb
jns
rcr
jp
je
cmp
push
push
push
pop
lods
jbe
adc
sti
jp
xchg
xchg
mov
cwde
ins
cmps
fist
or
pop
test
jg
and
(bad)
mov
push
mov
jns
(bad)
ror
int3
dec
fsubr
enter
mov
add
dec
retf
leave
jae
test
test
call
(bad)
mov
cmp
shr
pop
dec
sub
scas
jnp
ds
mov
pop
inc
jb
push
test
(bad)
jl
popf
call
sbb
pop
push
int
push
pop
lds
ficomp
call
adc
pop
sahf
imul
fcmovbe
in
clts
fimul
add
out
jmp
mov
lahf
ror
or
(bad)
loop
and
jno
add
add
(bad)
sbb
mov
rol
sbb
push
cmc
cld
loopne
push
pop
test
pop
push
or
mov
lea
ins
pop
imul
or
ins
inc
sbb
in
rol
call
sbb
mov
inc
pop
jns
pusha
or
mov
leave
pop
pop
push
mov
fisubr
ins
sahf
in
retf
int3
fcmovbe
(bad)
shr
hlt
xchg
xor
and
cmp
mov
jae
aas
dec
popf
adc
int
xchg
hlt
mov
jns
rcl
xor
push
push
mov
es
sub
fadd
sbb
pop
ror
fisttp
mov
imul
jbe
stc
push
icebp
add
aas
mov
ins
mov
addr16
(bad)
xchg
adc
in
and
mov
push
test
mov
push
sbb
nop
je
mov
addr16
rcr
outs
addr16
and
xor
mov
mov
stos
test
sbb
mov
cs
cmc
pushf
dec
aaa
popa
test
add
mov
xchg
popf
pushf
sbb
or
dec
add
mov
sbb
in
push
lahf
jp
mov
pop
xchg
test
pop
imul
mov
dec
mov
jmp
xchg
test
and
mov
fild
(bad)
dec
mov
add
jle
inc
rol
ins
bound
add
mov
es
in
lods
or
outs
mov
fucomp
push
mov
xlat
adc
mov
into
mov
repnz
test
jle
in
xchg
pop
or
mov
mov
lods
mov
iret
xchg
imul
xor
mov
jns
inc
(bad)
cmc
imul
pop
sbb
imul
leave
pop
inc
add
dec
cmp
push
inc
add
mov
mov
(bad)
xchg
sti
xchg
aaa
and
repnz
xor
sahf
imul
mov
aam
push
(bad)
ficom
xor
dec
loop
clc
dec
inc
add
mov
fisttp
mov
repnz
sub
stc
imul
push
sti
adc
lock
add
mov
xor
or
aam
mov
jle
inc
stos
xchg
ins
sbb
jnp
xor
push
test
stc
push
cmp
shr
push
imul
sti
lods
call
sbb
movs
icebp
mov
cmps
data16
jmp
adc
mov
sbb
mov
add
xchg
mov
push
and
mov
popf
mov
icebp
(bad)
inc
addr16
inc
mov
or
sbb
jmp
repz
cmp
inc
push
pop
out
xchg
lock
jno
inc
sbb
retf
mov
cmp
in
sub
in
push
ins
jmp
sbb
mov
dec
adc
or
std
out
and
cmps
fs
stos
cmp
xchg
scas
add
push
inc
lods
fs
arpl
jge
out
retf
sar
mov
fstp
std
ret
xchg
mov
mov
ss
stos
and
bound
aam
inc
push
push
dec
dec
sub
clc
sbb
mov
jae
mov
xchg
gs
push
xchg
gs
push
mov
cmp
mov
and
stos
cmps
lods
adc
xor
mov
(bad)
adc
(bad)
dec
cmps
cmp
add
pop
cdq
sar
dec
or
jne
jmp
xchg
pop
push
lahf
pop
clc
(bad)
xlat
sbb
add
adc
and
rcr
jp
sti
xor
mov
lea
sub
pop
(bad)
xchg
mov
ror
call
cmp
jmp
fwait
jno
mul
sub
mov
cld
les
jle
inc
mov
push
cli
xchg
fmul
stc
push
push
mov
sahf
sub
push
jp
mov
push
enter
cmp
cmc
fs
test
and
xchg
mov
in
inc
sbb
les
addr16
push
lods
sub
sub
xor
sti
and
inc
mov
fwait
shl
mov
xchg
in
pop
cmc
and
mov
xor
and
xlat
(bad)
mov
call
xor
push
retf
xor
and
rcr
pushf
movs
pop
faddp
jns
int
scas
adc
xor
or
cmp
pop
out
jnp
and
mul
adc
xlat
xlat
sbb
dec
clc
mov
add
cmp
xchg
sbb
es
pop
push
xor
jp
outs
ins
mov
and
(bad)
(bad)
not
out
and
dec
addr16
stc
pusha
and
(bad)
xor
test
aaa
push
and
xchg
and
lea
xor
lods
test
push
cli
lea
scas
rcl
pop
mov
mov
cmp
push
pop
sub
xchg
push
je
xor
movs
sbb
jl
mov
jns
xchg
fwait
sbb
adc
cs
sbb
push
xor
adc
(bad)
in
xchg
sbb
push
sbb
xchg
loopne
rcl
pop
and
(bad)
and
fisttp
sbb
jmp
out
ror
jmp
mov
inc
xchg
cmp
cmps
fcom
inc
ja
cmp
mov
stos
xor
test
lods
xchg
lahf
in
cld
in
(bad)
retf
lods
in
sbb
pop
stc
or
in
xchg
ret
add
(bad)
retf
pop
mov
data16
mov
(bad)
aas
pop
jbe
ficom
mov
xchg
mov
push
cmp
loopne
jo
ds
jo
(bad)
cmp
xor
int
sbb
mov
movs
cmp
add
mov
cmp
fmul
mov
sbb
sbb
push
jp
stos
outs
out
aam
or
in
mov
jge
sub
test
sbb
std
fiadd
fnstsw
dec
std
pop
std
stc
das
jmp
gs
mov
nop
js
mov
sub
lods
mov
cdq
xchg
add
jmp
test
leave
ja
and
cmps
pop
pop
xchg
xchg
pusha
mov
ins
inc
inc
mov
(bad)
and
lods
add
inc
lahf
mov
xchg
popf
cdq
dec
sbb
xchg
call
sar
(bad)
ins
adc
adc
(bad)
mov
push
ins
mov
or
or
repz
mov
pop
dec
add
or
loope
xor
cmp
in
mov
or
hlt
in
dec
retf
cmp
aaa
mov
paddb
fcomp
ins
test
add
jnp
mov
push
jno
push
and
out
rol
inc
dec
ffree
popf
xchg
test
das
add
(bad)
mov
enter
gs
inc
push
jns
dec
je
cmp
mov
test
arpl
mov
mov
push
inc
out
lahf
dec
cmp
xchg
push
in
mov
fwait
mov
add
fisubr
push
out
(bad)
fisubr
sbb
mov
jle
ins
mov
add
xor
jmp
sub
scas
pop
std
fcmovnu
add
jo
inc
pop
or
je
(bad)
push
sub
out
pop
mov
shl
mov
inc
sub
fdiv
fcom
in
sbb
sahf
mov
mov
pop
fwait
scas
fs
jb
jp
mov
test
inc
mov
addr16
pusha
and
aam
popa
and
add
mov
adc
movs
mov
jmp
mov
pop
call
pop
jnp
push
jecxz
fdiv
lldt
xor
cmp
xor
xor
pop
les
daa
push
shr
cmp
mov
lods
fstp
and
lds
sbb
inc
popf
add
xor
sub
jmp
and
push
xor
inc
jae
loop
ja
ins
repz
fwait
mov
dec
ins
fadd
inc
sahf
shr
xchg
lahf
mov
call
add
mov
pop
rol
push
and
data16
out
inc
pop
jns
or
or
out
sbb
shr
jmp
xchg
push
stos
loop
int
mov
fwait
and
lds
push
addr16
aaa
mov
sbb
aas
(bad)
jnp
sub
lds
out
js
sub
pop
aad
xlat
jne
dec
inc
push
ins
sub
xchg
pop
jp
ja
jne
push
or
add
call
pop
jmp
push
shl
sahf
xchg
test
dec
out
mov
nop
mov
adc
call
arpl
adc
sbb
jmp
pop
sub
pop
inc
sub
sbb
mov
xor
adc
dec
loop
and
push
shl
push
jle
loopne
into
mov
(bad)
pusha
add
sbb
cmp
addr16
out
std
stc
push
add
out
popf
(bad)
jbe
sti
mov
xchg
in
neg
jmp
dec
aam
ret
add
jge
pop
xor
cmc
adc
movs
push
repz
xor
ds
xchg
xor
rcr
push
fnstcw
ins
lahf
shr
dec
lds
inc
(bad)
loop
mov
pop
sbb
adc
dec
add
xchg
jle
ss
stc
mov
jp
repz
push
and
push
adc
mov
mov
pop
jle
and
pusha
push
fwait
mov
imul
fsubrp
shl
icebp
addr16
lock
mov
mov
test
(bad)
xor
cdq
retf
dec
pop
stos
pop
sbb
iret
das
leave
imul
test
jbe
adc
fsub
inc
mov
out
jl
inc
add
xchg
mov
mov
xchg
cmp
icebp
sub
dec
sub
jl
dec
mov
pop
int
loope
ja
repnz
fwait
stos
add
fadd
xor
ss
dec
jno
xor
outs
test
mov
lahf
adc
lds
push
stc
cld
adc
mov
loop
jne
shl
cld
add
jg
inc
lahf
push
aaa
(bad)
clc
repz
push
pop
and
add
sub
sub
dec
test
inc
sbb
adc
lea
jg
outs
inc
jmp
mov
push
sti
inc
(bad)
jmp
fimul
bnd
jmp
addr16
inc
mov
push
push
cmps
std
out
or
push
jecxz
or
ins
sub
call
icebp
(bad)
popa
movs
into
lock
cmp
call
imul
je
fwait
pop
cmp
xchg
xlat
mov
in
pop
icebp
sub
add
jb
xor
xor
rcl
inc
add
shl
add
call
adc
cdq
outs
mov
mov
sbb
mov
sbb
jne
ja
mov
cmp
pop
or
int3
xchg
pop
retf
jo
cmp
add
jecxz
fwait
ror
dec
sbb
sbb
and
xchg
ret
inc
pop
xor
sbb
adc
out
pop
retf
adc
jmp
fwait
sbb
dec
sbb
push
pop
mov
or
imul
sub
dec
pop
les
movs
dec
xchg
xchg
add
xchg
xlat
sub
pop
inc
cmp
jne
(bad)
or
stos
cmp
nop
ins
out
dec
fs
mov
retf
cs
outs
(bad)
and
mov
adc
pop
test
cmp
je
cmps
gs
mov
jns
cld
sub
int
xchg
lods
arpl
outs
inc
punpcklwd
cli
es
dec
lods
xor
popf
cmp
adc
lds
ins
lods
(bad)
outs
push
sub
xor
stc
test
outs
stc
popf
sub
jae
out
xor
loop
imul
push
push
fsub
arpl
mov
mov
pop
sbb
inc
dec
pop
lods
cmps
or
adc
mov
out
sbb
or
jmp
or
sub
fst
xor
mov
xlat
daa
push
js
mov
jno
mov
call
(bad)
mov
and
cmps
push
ins
mov
sahf
sbb
push
inc
outs
jmp
stos
movs
push
repnz
imul
dec
mov
xchg
sbb
out
hlt
das
jg
sub
pop
mov
sbb
icebp
jb
jg
mov
mov
xchg
inc
add
mov
cs
ss
xchg
mov
test
cmps
aad
pop
stos
fiadd
lahf
or
inc
(bad)
mov
jae
sub
mov
call
jp
arpl
add
test
and
sbb
dec
pushf
jmp
(bad)
stc
mov
push
mov
into
cmp
dec
cmp
inc
jae
jnp
out
add
inc
pop
sub
push
jecxz
int3
outs
pop
pop
mov
out
std
retf
pop
inc
adc
push
lock
add
lock
es
cld
ja
out
pop
xchg
rcl
or
fcom
mov
sub
push
(bad)
sbb
pusha
jmp
or
cli
shl
into
std
outs
loope
jns
cmp
push
retf
jmp
cmps
enter
sbb
mov
lock
jp
cmp
push
mov
adc
mov
push
or
popaw
repz
in
loop
mov
ss
push
jge
pop
jnp
loope
dec
inc
neg
cs
ds
scas
pusha
sbb
inc
nop
imul
rol
fwait
xchg
lea
pop
jno
adc
add
cld
out
and
xchg
mov
mov
movs
iret
mov
scas
jbe
xchg
jle
cld
or
push
inc
push
xchg
cmps
and
dec
sub
in
pop
ins
ret
outs
mov
shl
add
mov
(bad)
lahf
pusha
sub
aaa
xchg
jmp
mov
pop
or
or
jmp
cmps
shl
(bad)
(bad)
ror
cmc
xchg
or
dec
cld
cmp
cmp
(bad)
(bad)
pushf
cmp
fst
pop
jnp
sbb
add
xchg
dec
add
neg
shl
xchg
mov
test
fisub
jecxz
cmp
jl
pop
aaa
jne
mov
aaa
lods
fdiv
xchg
sub
jp
ins
out
mov
(bad)
aas
rcl
inc
sbb
out
pop
fist
std
fnstenv
dec
aad
inc
call
inc
scas
dec
push
dec
rol
shl
dec
aas
jmp
mov
xor
ror
iret
cmp
adc
mov
imul
mov
mov
call
xor
jmp
inc
add
jb
push
cdq
cmps
sbb
jne
nop
and
loopne
dec
cmp
sub
sub
adc
retw
adc
dec
leave
add
scas
or
xor
dec
sub
stos
cs
jge
fcmovbe
ror
lds
rcl
(bad)
xchg
push
or
cmp
push
leave
fistp
mov
inc
or
aas
sub
push
bound
mov
push
xchg
lahf
push
inc
mov
lock
dec
das
test
add
pop
mov
pop
iret
fisttp
icebp
out
shl
xor
(bad)
test
sub
(bad)
cmp
aas
dec
fst
push
dec
sub
test
push
inc
jbe
and
mov
in
shl
addr16
inc
sbb
dec
inc
and
les
cmp
inc
test
cmps
nop
sahf
sar
mov
inc
rcr
push
add
das
dec
dec
leave
cmps
adc
sub
bound
pop
pop
cs
jp
xor
fdiv
lds
mov
xor
retf
loope
jae
and
dec
adc
jns
inc
pop
setg
adc
iret
cmp
xor
or
mov
jge
mov
fisubr
sbb
nop
ret
add
fnstcw
iret
stos
push
(bad)
jbe
cmp
xor
and
lahf
mov
jne
push
(bad)
lods
mov
add
test
rcr
mov
nop
xor
mov
mov
mov
and
xor
adc
jno
arpl
data16
xor
das
int
fild
pop
scas
dec
sbb
jp
test
jp
movs
inc
inc
xor
cdq
mov
bound
aad
add
ret
pop
movs
sub
push
dec
shl
xchg
pop
cmp
inc
xor
ins
adc
xchg
xchg
mov
retf
xlat
repnz
nop
es
cdq
std
inc
mov
cld
adc
inc
and
cmp
pop
test
dec
aad
stc
adc
xchg
pop
adc
movs
(bad)
fld
mov
ja
stos
das
ror
fistp
call
lods
and
ret
in
jo
mov
dec
xchg
mov
mov
pushf
jl
mov
sub
cmp
pop
and
sbb
or
cmp
fdivr
push
xchg
cmp
jl
adc
push
or
inc
xor
cmp
dec
movs
push
addr16
jmp
jge
cmc
retf
adc
cmps
nop
push
call
(bad)
xor
(bad)
mov
push
stc
dec
stos
xor
inc
mov
push
shl
lahf
inc
(bad)
in
cmp
and
cmc
nop
test
repz
(bad)
faddp
jb
call
ret
popa
in
ret
arpl
or
or
mov
in
(bad)
mov
mov
pusha
ror
or
lods
test
and
adc
jl
les
and
loopne
sbb
add
clc
cmp
xor
jno
adc
shl
hlt
test
xchg
mov
ror
ins
push
xchg
test
cmp
in
mov
pusha
std
xchg
out
sub
(bad)
(bad)
jmp
icebp
outs
inc
or
dec
pop
inc
adc
(bad)
jmp
pop
jmp
cdq
or
fisttp
cmp
or
pushf
jge
call
adc
sub
xchg
push
add
or
outs
ja
cmpxchg
test
rcl
lock
jb
fcomp
cmp
les
inc
mov
pop
push
mov
and
push
mov
inc
dec
adc
test
psubusw
xchg
aam
or
lods
(bad)
xchg
bound
jns
and
push
push
shld
repnz
adc
(bad)
mov
add
jo
es
ja
rcl
loopne
test
inc
inc
adc
mov
int
push
xchg
jne
sub
and
loop
add
mov
test
or
add
jmp
rol
jge
out
mov
bnd
pop
repz
test
fsub
mov
and
ret
out
mov
lock
popf
jecxz
ins
lahf
jbe
mov
int
pop
shl
xor
das
dec
cld
cmp
mov
mov
adc
fmul
adc
sbb
inc
sub
xchg
sbb
mov
ins
jge
sub
mov
push
inc
pop
mov
loopne
or
(bad)
pop
mov
popa
xor
in
mov
jle
(bad)
in
shr
fs
add
fs
mov
xchg
fnsave
(bad)
jb
sbb
and
repnz
inc
mov
out
and
xchg
push
lods
jo
mov
jne
mov
ins
jb
jecxz
pop
imul
je
add
lahf
sbb
int3
fbld
inc
popa
or
(bad)
jne
add
and
nop
mov
in
push
in
or
sub
mov
push
scas
out
cwde
test
xor
shl
pop
addr16
sbb
mov
movs
mov
mov
sbb
call
adc
ins
cmps
sahf
xlat
push
xchg
sti
dec
jl
jmp
and
sub
mov
mov
pop
lods
inc
jg
jne
adc
maxps
xor
aad
retf
dec
(bad)
scas
enter
inc
das
aas
lods
int3
push
cwde
fs
dec
jno
call
mov
lea
add
test
pop
mov
addr16
and
movs
data16
mov
ss
or
test
push
cld
push
pop
aam
jge
jb
pop
fadd
add
pop
icebp
mov
fcom
fist
mov
mov
sbb
imul
(bad)
sub
adc
aaa
cmps
inc
aas
push
jne
xlat
jecxz
aad
mov
fmul
mov
add
add
lods
add
cmp
cmp
repz
add
jb
mov
scas
adc
mov
pusha
push
gs
loopne
arpl
push
pop
(bad)
out
loop
imul
fisttp
push
scas
pop
fldcw
inc
mov
and
dec
aam
xchg
clc
ja
mov
mov
push
or
idiv
lock
cdq
in
sub
ret
fbld
(bad)
jle
push
mov
arpl
xor
xor
xchg
loop
push
jne
outs
scas
and
sbb
dec
arpl
sbb
cld
test
(bad)
mov
sub
pop
call
outs
fsub
pop
mov
mov
cmp
fnsave
mov
mov
inc
mov
inc
adc
jmp
sbb
in
mov
arpl
retf
gs
out
mov
dec
retf
push
std
dec
dec
fsub
mov
mov
mov
mov
ret
xchg
and
rol
fimul
jecxz
(bad)
leave
mov
sbb
adc
pop
mov
jns
pop
sbb
adc
cmp
sbb
jno
push
inc
fcomip
shl
xchg
lahf
or
dec
movs
mov
mov
cdq
hlt
icebp
fisttp
push
sbb
sub
pushf
pop
mov
lahf
ret
cdq
out
cmp
adc
or
cmp
nop
sbb
int
adc
mov
xor
and
loope
push
push
lea
jbe
mov
dec
in
jle
mov
out
hlt
pop
dec
icebp
repnz
pop
xor
inc
add
int
adc
mov
stos
jmp
pop
mov
cs
sub
jmp
loop
xor
(bad)
pop
and
pop
out
cwde
int
call
movs
xor
cld
loopne
mov
mov
(bad)
cmp
push
movs
mov
jmp
xchg
mov
or
test
adc
mov
cmps
add
inc
lahf
sub
mov
scas
adc
std
stos
clc
and
pushf
int
dec
adc
int
outs
mov
ds
inc
pop
test
sahf
shl
or
sub
jp
or
inc
push
or
movs
jo
mov
or
ss
xchg
and
mov
pop
push
call
movs
mov
lock
lods
fdivr
jbe
mov
sbb
mov
push
lods
movs
ret
xchg
sub
inc
popf
pop
cmp
cs
fimul
ret
aam
cld
in
fs
cdq
in
sar
add
test
mov
pop
pop
stc
jae
mov
dec
push
mov
xchg
xor
cmp
push
push
dec
xchg
jmp
lea
sub
adc
enter
icebp
add
sub
test
cld
in
inc
shr
jbe
mov
test
repnz
xchg
jmp
or
add
push
xor
shl
(bad)
xchg
stc
lods
ss
(bad)
ins
push
mov
push
fistp
retf
scas
cmps
cmp
lods
rol
adc
dec
jb
sbb
pop
mov
aam
mov
mov
xlat
dec
int3
mov
aaa
fbstp
out
push
lea
add
dec
mul
data16
jb
sbb
fsubr
fwait
pop
rcr
fcomp
cwde
ficom
sub
jbe
fstp
mov
cs
mov
fmul
sub
cmp
inc
sbb
add
push
jg
les
enter
mov
xor
pop
repnz
mov
popa
dec
leave
cmp
or
lods
dec
adc
inc
ja
jbe
leave
lods
mov
nop
fwait
popa
and
mov
in
je
pop
scas
ins
add
jmp
jmp
fidivr
or
daa
call
mov
adc
scas
fstp
cli
xor
push
jne
in
push
cwde
rcl
and
xor
pop
cmp
in
neg
test
popf
pusha
and
imul
sub
push
pop
adc
or
imul
cmp
test
sbb
call
ins
push
sub
push
js
xor
and
mov
xor
lock
sahf
mov
inc
movs
pop
add
mov
stc
sub
gs
cmp
fnstcw
fisubr
rcr
jo
dec
dec
mov
fsubr
sub
imul
or
pop
jle
sbb
xchg
lds
xchg
call
mov
test
mov
mov
xlat
pushf
push
lock
inc
loop
mov
xchg
dec
fcomp
dec
pop
push
push
push
sbb
in
dec
dec
push
inc
fadd
or
daa
movs
or
rcl
cld
je
stos
ins
lds
pop
and
sbb
mov
jge
xchg
push
inc
sbb
mov
test
xor
bound
adc
mov
pop
mov
inc
jg
stos
pop
mov
push
mov
das
sub
in
sbb
cmps
mov
scas
jg
mov
sub
aam
imul
inc
pusha
mov
out
sub
fs
mov
dec
push
mov
mov
mov
and
out
mov
repnz
sti
sti
xchg
fidiv
push
(bad)
call
sbb
gs
fisub
or
inc
fs
cwde
sar
mov
jge
shl
push
retf
je
jno
mov
(bad)
jl
and
test
call
pushf
aaa
push
popf
push
fiadd
aaa
add
pop
out
nop
adc
aam
add
fwait
stos
jo
arpl
mov
and
lods
shr
loop
dec
ret
loop
out
shr
jge
retf
clc
gs
adc
cwde
pop
(bad)
inc
cmp
pop
xchg
push
cmp
adc
scas
ficomp
push
mov
imul
cwde
(bad)
mov
or
repnz
jo
ror
ss
push
mov
cmp
lahf
pushf
xchg
jge
dec
mov
mov
scas
mov
shl
or
inc
sbb
inc
movs
push
rcr
jno
push
lods
xchg
and
dec
sub
cmp
fucomip
xchg
xor
inc
rol
mov
out
add
loop
push
repnz
call
and
push
mov
cmc
pop
aas
pusha
pop
ins
adc
imul
add
pop
add
add
pop
enter
cmp
xor
jne
push
arpl
mov
push
xchg
clc
out
arpl
push
pusha
add
and
lahf
arpl
ret
cmp
push
xor
cdq
test
and
lods
dec
loop
sbb
popf
ja
cdq
mov
mov
xor
xchg
xor
cld
test
xor
mov
cmps
(bad)
(bad)
or
rcr
or
repnz
je
fsubrp
jge
aam
lahf
and
js
imul
aam
inc
in
ret
mov
add
mov
jmp
jg
scas
jns
ficom
sub
gs
call
fiadd
fidivr
jo
sub
jl
popa
or
mov
dec
loop
aad
shl
mov
retf
mov
pop
dec
popf
(bad)
je
add
inc
scas
jp
(bad)
adc
push
cs
std
sbb
dec
not
dec
add
adc
clc
stos
or
mov
fs
dec
cmc
cmp
adc
dec
dec
test
sbb
mov
mov
icebp
out
shl
inc
addr16
in
(bad)
std
or
das
ret
pop
sub
and
mov
push
cmp
dec
add
out
push
pusha
sbb
xchg
aam
jle
(bad)
mov
out
hlt
pop
add
movs
loopne
mov
ds
mov
sub
gs
sbb
leave
aam
dec
jp
pop
int
pop
icebp
enter
stos
bnd
cmp
daa
or
mov
in
push
sub
jl
retf
jo
add
cmp
pop
cmc
popf
adc
mov
xor
gs
test
pop
out
ins
mov
out
mov
dec
push
add
imul
fs
jmp
psrlq
(bad)
cmp
aam
pop
pop
int3
ficomp
sbb
ja
push
add
sahf
lea
xchg
sub
out
out
das
arpl
add
enter
in
cmc
clc
shl
sub
std
lea
out
push
aas
fild
jbe
popf
push
ins
add
and
sbb
lods
pusha
nop
mov
shl
retf
in
add
mov
xor
sets
sub
jnp
ss
sbb
sub
(bad)
fdivr
mov
imul
rol
(bad)
les
add
or
iret
jmp
iret
xor
mov
aaa
xchg
and
imul
xor
cmp
out
movntps
xchg
(bad)
lock
out
cmp
hlt
mov
popa
and
shl
sub
xor
cmp
icebp
jle
push
mov
or
icebp
jns
outs
jo
push
shl
mov
mov
je
xchg
stc
or
xchg
test
lahf
jmp
inc
retf
fmul
in
and
jnp
push
(bad)
adc
fcomp
inc
inc
into
out
jmp
enter
jl
sbb
sub
pop
inc
pop
cmp
aam
sbb
push
xchg
mov
mov
push
rcr
bound
in
cs
pop
or
pusha
in
xor
pop
push
jne
adc
pop
cmp
cdq
bound
ins
clc
hlt
dec
xchg
jle
rol
loop
leave
mov
inc
enter
das
out
dec
test
jae
imul
and
out
loope
jmp
(bad)
fisub
dec
mov
clc
stos
xchg
lock
adc
psubsw
out
inc
out
xchg
test
xchg
imul
dec
dec
mov
ror
sbb
popf
sub
ss
push
iret
imul
movs
(bad)
aam
pop
gs
sbb
fcmovnbe
or
jmp
addr16
or
cmps
daa
sub
outs
sbb
pop
jge
xchg
add
cmp
pop
mov
mov
and
or
or
mov
or
fild
inc
retf
les
in
clc
adc
pop
add
cmp
cmp
jo
inc
and
int3
movs
jmp
fxch
int
iret
cmps
dec
jo
out
pop
ja
aaa
pop
pop
fsubr
xor
fild
int3
(bad)
(bad)
test
pop
shl
lock
daa
inc
das
mov
add
xchg
cmps
rcr
inc
dec
push
mov
jg
sub
ins
mov
inc
push
sbb
xchg
and
xor
cmp
adc
inc
jle
push
popa
hlt
lds
jl
jmp
repz
adc
ss
loop
mov
cmp
dec
mov
jle
ficom
loopne
push
mov
mov
inc
push
and
clc
jecxz
and
(bad)
sbb
fistp
ss
es
mov
xchg
cmp
adc
rcl
addr16
jb
jecxz
jp
cs
pop
cmp
in
jg
ret
ret
(bad)
test
sbb
fadd
dec
push
popf
mov
sub
dec
imul
xor
xchg
or
adc
dec
xor
enter
repz
popa
jle
test
(bad)
mov
xchg
or
add
test
je
mov
xchg
mov
cmp
sub
and
stc
mov
jl
xchg
out
and
mov
cs
mov
and
lock
sbb
vmread
jb
dec
icebp
aaa
das
stos
enter
mov
add
imul
or
pop
pop
into
inc
mov
pop
out
pusha
pop
icebp
loope
jle
fdiv
out
fs
add
cmp
xchg
out
enter
std
inc
mov
add
sub
das
pop
pop
jecxz
outs
mov
and
mov
sub
mov
mov
sbb
loopne
cld
call
adc
pop
push
adc
movs
movs
ret
cli
cmp
push
in
sahf
ret
jecxz
ins
neg
pop
into
rcl
std
mov
call
xchg
jl
and
aas
enter
mov
mov
mov
es
not
jo
jmp
icebp
loopne
(bad)
mov
xchg
repz
aas
(bad)
out
sbb
add
inc
or
add
cmp
mov
inc
mov
xor
mov
sub
mov
xchg
out
(bad)
inc
push
(bad)
inc
icebp
js
stc
repz
aaa
cmp
adc
xchg
and
jecxz
sub
mov
dec
loop
sub
retf
test
pushf
jnp
push
xchg
sbb
loope
jno
aaa
hlt
sahf
stos
cld
jno
or
xor
movs
jge
or
push
xchg
mov
test
fsubr
pop
fnstcw
arpl
sub
push
fld
sub
stc
jge
sahf
call
cmps
sbb
add
dec
dec
test
mov
add
jg
jne
mov
pusha
out
test
test
ss
sub
ror
mov
mov
mov
(bad)
jmp
scas
sub
(bad)
push
cmp
pop
stc
xchg
adc
or
rcr
fist
push
fisubr
popf
iret
mov
jmp
daa
(bad)
add
retf
sbb
and
cmp
inc
jo
push
nop
mov
ins
pop
push
pop
or
or
jb
jmp
mov
sbb
jle
sub
call
lock
loope
sub
fsub
sbb
cmp
test
loope
fwait
aaa
test
inc
jmp
fcomi
inc
into
cdq
jbe
jbe
es
sub
dec
pop
pushf
outs
jo
and
out
retf
mov
inc
dec
fwait
sub
cmp
add
sub
outs
cmc
leave
adc
pop
repz
jb
int3
cs
stos
xor
gs
jg
lea
cs
in
cli
push
std
mov
mov
fld
push
popa
xchg
or
pop
and
ror
pop
rol
sub
mov
xor
dec
and
rcr
cmps
(bad)
(bad)
shr
cwde
adc
pop
lods
jo
fwait
and
sub
add
jo
mov
push
enter
xchg
mov
clc
mov
clc
push
xchg
ins
lods
sti
inc
cli
in
push
jmp
add
xchg
mov
cdq
jecxz
sub
(bad)
ficomp
dec
jmp
and
out
jo
in
js
add
arpl
mov
shl
in
push
cmp
in
xchg
ret
sub
dec
sbb
aaa
data16
out
xor
or
mov
(bad)
push
pop
adc
int3
mov
and
or
rcl
jg
mov
int3
and
in
int3
call
in
mov
daa
xchg
pop
fisub
xchg
aad
jne
cmp
ror
xchg
push
out
ret
jno
sbb
push
sbb
(bad)
or
stc
push
push
mov
stos
aaa
mov
es
inc
fcomp
mov
daa
imul
adc
cld
(bad)
sub
into
xchg
jae
shr
jne
add
push
inc
mov
add
cli
repnz
imul
aam
(bad)
out
add
pushf
rcl
cmc
retf
sub
dec
std
pop
scas
outs
sti
and
rcr
sti
add
pop
or
jb
adc
xchg
nop
imul
mov
jmp
mov
dec
mov
pop
sbb
rol
mov
add
jp
leave
fbstp
rol
das
sub
push
jmp
loope
aaa
rcl
mov
das
cdq
push
dec
push
test
adc
push
popf
xchg
inc
xor
leave
sbb
adc
bnd
mov
sti
push
aad
xchg
xchg
or
sbb
sub
iret
clc
(bad)
xor
mov
sub
push
xchg
jge
xchg
mov
sub
or
in
adc
mov
ja
mov
xor
test
sub
rcl
jnp
lods
mov
or
fstp
(bad)
mov
addr16
fst
mov
xchg
xor
mov
retf
pop
mov
adc
cwde
(bad)
aam
mov
cld
add
sub
in
cld
out
outs
mov
jns
or
push
jnp
jp
(bad)
or
in
jecxz
cmps
in
bound
push
push
and
sub
(bad)
jbe
icebp
jp
lahf
pop
cmp
cmp
push
out
test
dec
mov
adc
ret
test
push
sub
inc
sar
loope
enter
xchg
je
(bad)
je
(bad)
aaa
push
xchg
xchg
dec
xor
cmp
mov
add
xor
push
inc
jns
inc
jbe
aaa
sub
xchg
jnp
xchg
in
xchg
push
popf
dec
shl
sub
enter
cmp
mov
dec
out
iret
mov
out
iret
lods
mov
(bad)
retf
push
mov
adc
cmp
aaa
rol
push
ret
stos
inc
sbb
sar
(bad)
jbe
retf
outs
cld
js
inc
sub
sub
cmps
loop
mov
lods
jg
adc
or
pop
jmp
loop
pop
in
sahf
mov
in
mov
int
in
mov
push
sub
sub
mov
cmp
test
jae
outs
(bad)
ss
xchg
lock
or
mov
lock
xchg
pop
mov
pop
dec
nop
int3
push
mov
mov
cwde
pop
mov
or
call
jge
sub
push
paddsw
imul
cmp
scas
mov
sbb
jb
les
and
test
ret
push
scas
jbe
sub
cmp
jle
std
dec
add
out
add
and
xchg
(bad)
push
mov
pushf
sub
mov
xor
adc
add
or
mov
lods
lock
out
add
shl
imul
fbld
xor
adc
xchg
js
sbb
sbb
mov
das
mov
js
stos
les
shl
pop
xor
jmp
sub
stos
cmp
and
add
xchg
es
push
fwait
xor
loope
fcom
(bad)
lods
mov
jge
movs
push
mov
adc
dec
fisub
xor
dec
and
mov
jp
nop
rcr
je
retf
ret
nop
or
(bad)
lock
cmp
pop
jb
dec
mov
scas
mov
jbe
cmc
repz
pop
rcl
rol
jmp
jb
add
adc
pushf
je
je
sbb
sbb
xor
adc
sahf
rcl
add
pop
aas
aas
and
or
jmp
inc
xor
xchg
inc
mul
les
cmp
mov
push
hlt
icebp
stos
in
push
in
loop
sub
adc
jge
pop
hlt
inc
push
jae
push
mov
ja
push
ins
xchg
stos
xchg
sub
mov
push
outs
clc
or
pop
pop
and
push
pop
push
mov
lock
or
ror
aaa
out
mov
push
outs
imul
repnz
sub
mov
inc
or
sub
push
imul
and
sbb
cmp
sahf
add
in
ret
jmp
xchg
push
js
mov
mov
xchg
loopne
xor
enter
fcomp
mov
jne
push
adc
cmps
bound
das
cmp
add
mov
mov
jb
mov
iret
push
or
cld
movs
out
dec
mov
repz
addr16
(bad)
inc
out
(bad)
sti
add
jnp
pop
in
call
lock
xor
loop
or
(bad)
sub
push
mov
cmp
pushf
sbb
jle
mov
dec
mov
add
adc
sti
in
(bad)
pop
outs
xchg
retf
jmp
inc
scas
and
in
dec
jae
enter
xor
cmp
test
push
mov
call
enter
dec
push
mov
imul
add
pop
scas
popf
dec
stos
mov
aam
or
std
sahf
mov
ss
sub
enter
icebp
and
sar
cmp
scas
and
ret
pop
inc
cmps
inc
adc
addr16
(bad)
es
shl
aam
pop
out
nop
add
test
sub
sbb
pop
sub
int3
ins
inc
std
jnp
add
adc
or
mov
in
fprem
loope
pushf
(bad)
adc
adc
rcr
into
push
adc
or
dec
fidivr
fldenv
sub
adc
dec
sub
sub
loopne
pop
sub
sar
inc
retf
int3
loopne
dec
int
sbb
or
cmp
imul
lea
cmp
pushf
fild
repz
out
mov
not
fnsave
inc
in
mov
adc
out
or
mov
(bad)
mov
lds
out
fmul
inc
mov
ins
inc
sub
and
aas
xlat
pop
(bad)
addr16
push
fsub
push
movs
retf
lods
popf
(bad)
jecxz
mov
in
mov
nop
push
push
cmp
pop
jns
xor
cmp
int3
pop
enter
pop
pop
dec
inc
mov
pop
dec
mov
outs
(bad)
in
cmp
leave
imul
sub
adc
pop
mul
xor
pop
inc
cmp
enter
addr16
js
xchg
inc
pop
cmp
fisub
pop
pop
hlt
jmp
lods
and
jbe
(bad)
push
mov
test
leave
mov
aam
xor
or
adc
in
dec
add
daa
inc
les
aaa
sub
xchg
adc
push
jnp
mov
retf
shl
mov
push
(bad)
aad
dec
xor
and
out
push
leave
shl
sub
iret
jns
les
jecxz
xchg
cli
push
sti
test
pop
stos
dec
and
cmp
nop
xchg
mov
dec
leave
mov
inc
call
inc
mov
movs
retf
xlat
arpl
cmp
lods
je
jnp
xor
cmp
cmp
clc
aad
ror
xor
lods
ss
mov
repnz
sbb
jno
or
sbb
mov
outs
repnz
(bad)
mov
test
mov
adc
sahf
or
mov
and
ins
and
test
movs
lock
pop
not
mov
(bad)
into
test
loope
jg
sub
adc
jmp
scas
icebp
push
aas
jl
xor
(bad)
hlt
pop
js
push
repz
xor
mov
(bad)
pop
scas
jl
(bad)
or
(bad)
ficom
aad
pusha
ret
fs
icebp
xor
or
sub
xor
fcomp
int3
push
inc
in
adc
loope
ror
mov
lods
cmc
jg
aas
pop
or
fsub
cmp
inc
pop
mov
std
mov
mov
in
xor
icebp
jl
and
inc
xchg
mov
push
repnz
(bad)
dec
psadbw
movs
push
mov
jecxz
mov
adc
cmc
push
jbe
int
outs
fsubp
push
or
inc
loop
xlat
xor
shr
rol
adc
stos
push
dec
mov
inc
cmp
xchg
outs
mov
mov
call
inc
addr16
dec
pop
loope
test
mov
xor
jge
ins
das
add
sub
push
add
pop
rcr
jmp
dec
cwde
aad
lds
xor
push
and
out
push
xchg
or
dec
ret
mov
adc
addr16
out
scas
xor
pushf
shl
cdq
push
neg
adc
jp
mov
lock
adc
ds
imul
addr16
icebp
mov
scas
aad
add
std
test
cdq
xor
or
js
leave
das
jne
rcl
mov
sti
js
lock
jl
jmp
mov
pushf
fcomp
dec
in
cmps
push
icebp
cmp
into
neg
in
call
(bad)
dec
arpl
adc
mov
add
rcl
add
or
stos
xchg
pusha
repz
dec
clc
ds
pop
pop
jns
cmp
hlt
(bad)
adc
pop
jnp
mov
or
add
pusha
jo
and
movs
lods
test
add
inc
nop
scas
add
imul
push
(bad)
test
pop
hlt
mov
ins
cmp
sbb
or
xchg
es
scas
and
cmc
push
xchg
cmc
mov
cmps
sbb
das
adc
imul
cdq
jns
mov
jge
mov
pop
frstor
inc
dec
inc
pop
call
lds
jnp
pop
xchg
pop
test
sbb
stos
sub
lock
test
dec
in
pushf
mov
cmps
clc
jb
pushf
jp
mov
fidiv
les
dec
and
stc
add
dec
push
adc
mov
jp
push
div
xchg
in
out
adc
dec
add
int3
test
enter
mov
pop
das
cmp
jmp
stos
(bad)
popa
pop
rcr
adc
fldenv
dec
fs
pop
sub
jbe
in
xor
out
xchg
inc
mov
pop
imul
imul
push
fst
adc
cmp
or
mov
mov
and
daa
adc
xor
adc
xchg
and
adc
cmp
aaa
cdq
out
stc
sbb
xor
loop
stc
dec
mov
js
ror
daa
lds
sbb
mov
cmp
inc
or
enter
mov
je
dec
pop
das
adc
xlat
dec
aam
xchg
jno
mov
stos
dec
call
and
or
cld
sbb
clc
push
(bad)
out
ret
int3
movs
mov
sub
jmp
addr16
das
outs
add
and
push
enter
cwde
adc
dec
fdiv
out
pop
je
int
js
in
pop
aad
and
cli
cli
mov
mov
mov
push
mov
rcr
fld
ficomp
clc
pop
bound
dec
imul
dec
or
fbld
stos
sub
or
and
pop
call
enter
imul
mov
push
aas
cmp
les
cmp
ss
sbb
cs
adc
jae
xor
sbb
inc
fcom
cmp
sub
inc
sysenter
test
push
retf
sbb
jecxz
loopne
cmps
jae
jae
(bad)
jae
iret
sub
mov
jg
or
mov
adc
(bad)
mov
je
jecxz
pop
mov
std
push
add
in
mov
push
ror
mov
xor
js
adc
ror
cmp
xor
mov
or
lds
pushf
mov
sahf
jae
mov
je
add
cmp
lock
fistp
mov
lahf
lds
cmps
cmps
fst
dec
sub
pop
lea
mov
addr16
push
(bad)
xchg
stc
stc
arpl
in
sbb
jne
pop
je
mov
mov
xor
pusha
xchg
cmp
cmps
std
mov
(bad)
out
in
out
jnp
int
gs
or
shl
(bad)
sbb
icebp
fld
or
lods
shl
xchg
cld
inc
adc
jmp
xor
aam
mov
ret
push
dec
and
rcl
aad
mov
or
xchg
jge
adc
or
cmc
inc
rcl
xchg
mov
mov
jle
fcmovnbe
push
imul
nop
mov
mov
mov
fild
sub
adc
pop
leave
xchg
dec
hlt
shr
sbb
cld
pushf
fcom
out
call
add
in
stos
push
lea
xchg
shr
std
std
dec
in
mov
push
aad
inc
xor
jp
cdq
mov
in
cmp
fstp
jle
jge
fidivr
icebp
or
pop
arpl
xchg
add
aam
cli
clc
leave
mov
mov
jg
dec
jb
retf
cld
push
cmc
enter
jle
into
mov
sbb
inc
jne
pop
add
jae
inc
movs
aas
pop
sar
hlt
and
neg
dec
f2xm1
fisubr
jp
mov
mov
mov
(bad)
lock
dec
sti
adc
(bad)
call
xchg
jae
push
inc
mov
movs
or
les
add
xor
popf
mov
sub
cmps
push
push
stos
(bad)
cli
push
sub
jg
inc
dec
cmps
adc
dec
xchg
fwait
bound
(bad)
imul
std
push
aad
test
xchg
adc
xchg
jmp
sub
cli
jmp
inc
inc
cli
ss
xlat
daa
sbb
cmp
add
inc
call
and
pop
push
arpl
(bad)
sbb
or
jae
jge
int3
or
repz
pop
xchg
sar
rdmsr
ror
cmc
cmp
inc
cmp
jp
jmp
clc
data16
add
mov
pop
into
stos
fwait
scas
fwait
push
js
imul
in
lock
(bad)
push
add
fmul
and
inc
mov
js
scas
jb
imul
xchg
scas
mov
mov
pop
adc
cmp
das
stc
outs
imul
mov
adc
hlt
sbb
and
cmc
add
fwait
out
jb
mov
xchg
js
popf
lock
mov
and
mov
mov
jle
shr
sub
mov
mov
retf
in
jmp
pop
xor
add
bound
jmp
jnp
mov
adc
mov
loop
jnp
imul
leave
cmp
sub
fsubr
addr16
mov
xchg
pushf
sub
push
push
ja
scas
pop
outs
fnstcw
dec
mov
sahf
popf
sbb
dec
xchg
pop
mov
(bad)
push
stos
scas
jbe
cmp
sbb
rcl
dec
cmp
sub
stc
scas
in
push
push
and
popa
inc
in
xchg
aam
std
and
loope
pop
mov
pop
cmp
cdq
dec
aad
sbb
aas
jae
loop
jns
cdq
daa
sahf
out
(bad)
dec
(bad)
popa
cmp
xchg
lods
cld
cdq
(bad)
in
pop
mov
inc
pop
sbb
call
hlt
dec
push
dec
jne
inc
add
cmp
outs
out
mov
jl
mov
push
int3
dec
aam
leave
(bad)
push
arpl
outs
pop
mov
sub
add
xor
popa
sti
lods
ins
lods
sbb
int
and
push
ror
mov
stos
fdivr
add
retf
sub
rcl
mov
inc
test
fmul
pusha
jae
add
jp
fcomip
mov
cmp
rcl
mov
popa
adc
int3
xchg
xchg
sub
les
mov
inc
dec
inc
test
and
lock
pminsw
fadd
cmp
push
outs
and
jle
jge
(bad)
ja
or
(bad)
imul
jg
movs
ins
pop
jp
jae
or
lea
jne
add
xlat
jo
repz
pop
xchg
repz
sahf
fcmovnbe
enter
pop
inc
fdivr
imul
je
add
mov
cld
aad
adc
cmp
xor
adc
into
dec
adc
or
adc
ror
fwait
ss
push
jbe
icebp
in
idiv
xchg
push
iret
loopne
shr
and
addr16
stos
push
fist
test
in
sub
jne
xchg
mov
sub
inc
out
std
shr
push
sbb
cmc
mov
rcr
push
retf
or
cmp
jmp
push
fs
or
pop
aas
fwait
loopne
test
leave
ret
cld
in
mov
pop
sbb
xchg
btr
mov
daa
aas
aad
push
rol
in
pop
clc
popf
xor
mov
xacquire
push
or
mov
pop
mov
popa
in
in
mov
sbb
mov
inc
test
sub
cmp
ret
sub
loop
cwde
cs
lods
imul
shl
cmc
fist
test
inc
mov
xor
int
fs
ret
xor
xchg
dec
inc
mov
repnz
or
cs
pop
cmp
push
pop
or
loop
out
std
jb
dec
movs
pop
gs
cmp
cmc
lods
fldenv
cs
movs
push
stos
mov
mov
add
repnz
jae
xchg
push
fsub
ja
cs
sub
dec
scas
or
test
xor
push
jns
addr16
stc
jno
inc
(bad)
inc
xchg
pop
imul
dec
cmp
mov
and
ss
pop
adc
jp
add
push
sub
pop
in
jecxz
dec
add
pop
int3
xchg
push
retf
std
pusha
pushf
sahf
clc
mov
imul
(bad)
adc
nop
sub
jmp
sub
mov
out
pop
lds
add
or
fistp
push
jnp
out
imul
call
pop
fistp
inc
pusha
sbb
hlt
je
ffree
push
(bad)
pop
mov
sub
inc
mov
out
sbb
dec
aaa
add
push
inc
test
test
push
ret
pop
outs
dec
arpl
xchg
rcl
adc
jb
pop
xlat
in
cmp
xchg
xor
cmp
ret
repnz
ins
js
gs
cmovns
jl
out
jmp
retf
push
push
adc
pop
aad
imul
sbb
inc
cdq
xlat
cld
or
out
dec
mov
mov
mov
(bad)
pop
xor
jp
push
mov
mov
or
repz
mov
lock
pop
(bad)
sti
xchg
push
dec
push
mov
pop
inc
adc
mov
sub
stc
dec
mov
gs
ficom
adc
mov
movs
xchg
jle
test
jbe
les
cli
jg
bnd
jo
and
ror
repnz
mov
mov
xchg
xchg
adc
dec
lods
push
push
xchg
cmps
out
xlat
inc
arpl
in
sub
sub
mov
add
cmp
in
sti
enter
lea
xchg
clc
fstp
inc
test
xchg
(bad)
xor
inc
leave
add
dec
cmp
pop
push
xor
out
repnz
adc
fwait
sub
stos
pusha
push
nop
data16
cld
mov
mov
pushf
sub
sub
sbb
mov
scas
sahf
push
outs
jecxz
inc
(bad)
fcomi
cmp
bound
cld
(bad)
int
out
sub
retf
fistp
dec
push
fsub
xchg
int
xchg
rcr
(bad)
xor
lock
lock
cmps
mov
xchg
and
(bad)
sub
jns
adc
(bad)
sub
call
push
popf
jb
add
(bad)
and
not
shr
rcl
xchg
std
in
or
mov
ss
lahf
push
jb
iret
sbb
push
jae
ss
ficomp
add
sbb
movs
pop
je
jmp
sbb
call
lahf
imul
cdq
jnp
aad
cwde
inc
movs
sub
movs
and
sbb
mov
and
std
fwait
pop
int
xchg
and
rcl
test
int3
mov
xor
push
aam
cmp
test
mov
mov
push
xchg
xor
push
inc
movs
dec
jae
shr
sub
out
sahf
cmp
inc
pop
daa
imul
(bad)
hlt
jle
gs
xor
or
mov
push
push
(bad)
lods
xchg
and
lea
cmp
adc
pop
mov
and
scas
(bad)
(bad)
jbe
gs
pop
dec
jmp
or
sbb
test
pop
aad
sub
pop
add
push
sub
mov
in
mov
cmp
clc
mov
adc
jp
push
adc
xlat
jno
movs
dec
cdq
cmp
push
ins
jae
lods
ficomp
iret
dec
or
(bad)
xlat
nop
test
nop
imul
cmp
mov
(bad)
in
xchg
jnp
inc
je
(bad)
xor
push
sub
jge
arpl
fnsave
dec
dec
jbe
pushf
lds
pop
xor
push
push
stos
lds
sbb
mov
dec
dec
xor
sbb
stos
hlt
jb
dec
or
into
mov
das
pop
cmp
mov
imul
int3
mov
mov
mov
ja
es
cmp
jecxz
mov
(bad)
sub
ror
adc
(bad)
or
sbb
in
pop
mov
adc
ret
dec
sbb
add
mov
push
add
sub
das
or
xchg
sub
fld
leave
lods
dec
shl
nop
das
and
ja
dec
mov
jb
adc
xchg
outs
sar
inc
stos
add
push
mov
out
in
sbb
stos
dec
xchg
rcr
sar
mov
enter
call
mov
and
inc
add
(bad)
cmp
or
data16
scas
sub
push
mov
mov
fst
sub
sub
mov
jg
ret
fisubr
adc
(bad)
pop
sub
and
cmc
mov
cmp
(bad)
push
xchg
jne
and
std
aas
or
es
cmp
sub
nop
adc
scas
sub
outs
pop
dec
repnz
test
(bad)
repnz
sbb
fs
jge
mov
movs
mov
mov
or
xchg
shl
and
lods
add
bound
pusha
inc
push
and
xchg
in
mov
cmp
sbb
and
or
pop
jnp
sub
inc
movd
jecxz
clc
sar
and
shl
jmp
push
arpl
lds
retf
sub
mov
sbb
xchg
sbb
add
in
outs
xor
aam
fild
outs
add
out
jmp
mov
mov
or
jmp
test
push
call
mov
pushf
add
retf
pop
movs
jo
mov
xor
addr16
les
cs
bound
sub
test
adc
xor
das
adc
out
ins
iret
xor
sub
jl
pop
rcl
push
lods
enter
xor
sbb
pop
cmp
add
pusha
outs
ds
inc
daa
test
add
mov
(bad)
push
mov
cmps
sub
das
xchg
nop
fmul
mov
aas
inc
in
fimul
loope
pop
into
(bad)
push
pop
push
int3
sbb
cli
and
mov
push
add
mov
inc
je
mov
int
out
adc
call
in
iret
mov
(bad)
cs
add
push
xchg
clc
jg
mov
cmp
adc
pop
aaa
ret
inc
sub
loop
push
push
xchg
(bad)
jne
add
ss
out
mov
fisub
imul
(bad)
aad
mov
pop
int
cmc
sub
pop
or
sbb
xchg
push
lds
mov
add
ret
aas
hlt
mov
jmp
push
in
icebp
push
mov
or
sbb
pop
sub
aam
mov
inc
push
movs
cmps
or
(bad)
pop
fsubrp
and
mov
call
mov
or
or
pop
mov
(bad)
(bad)
rcr
test
pushf
push
adc
les
in
pop
fistp
add
mov
lods
scas
sub
mov
sub
pop
inc
out
ins
cmp
movs
jle
jae
out
mov
sub
adc
lods
adc
mov
in
fst
cdq
out
or
mov
xor
cmp
(bad)
push
enter
int3
ja
aas
shl
rcr
mov
pop
xchg
xor
jae
adc
sar
or
push
fbld
jns
pop
nop
and
sub
add
js
adc
sub
push
push
call
mov
iret
or
mov
adc
in
cld
pop
jg
push
pop
test
sahf
imul
outs
jns
fistp
pop
mov
jo
jbe
pop
mov
es
or
pop
scas
fild
nop
pop
sub
nop
xchg
test
mov
wbinvd
scas
cdq
xor
fsubp
mov
adc
mov
cmp
push
mov
pop
adc
sub
cmp
outs
jb
test
in
stos
xchg
mov
cld
pop
add
sbb
imul
fbstp
gs
and
arpl
leave
or
adc
loop
loope
jb
adc
dec
cwde
sub
icebp
les
xchg
arpl
mov
jae
mov
aad
stos
cwde
xor
add
shl
push
jge
or
loop
addr16
icebp
pop
ret
jbe
and
stos
xor
and
xchg
mov
je
push
das
mov
push
jbe
shr
jno
add
icebp
mov
xlat
test
call
imul
push
mov
xlat
movs
es
dec
sbb
cmp
fsubr
add
pushf
jmp
in
sahf
mov
lahf
aas
mov
sub
xchg
and
ins
add
stos
mov
pop
lock
sbb
xor
cli
mov
xchg
add
jmp
ja
sbb
mov
xchg
or
clc
mov
xchg
aaa
xchg
inc
lods
xchg
cmc
mov
test
xchg
or
push
mov
push
retf
xor
mov
push
mov
adc
sbb
outs
int
out
xchg
jbe
(bad)
xor
xchg
xlat
xchg
adc
lods
(bad)
push
pop
loope
sub
ss
mov
test
in
mov
into
mov
or
mov
sti
push
or
xchg
adc
add
xchg
hlt
xor
push
aaa
mov
scas
and
pop
stos
retf
add
mov
shl
adc
mov
push
jae
test
jnp
ret
or
dec
dec
int3
sub
push
adc
rcl
daa
cld
xchg
mov
cmps
ret
push
std
jmp
mov
cmp
cmc
xor
and
sar
mov
test
push
or
out
scas
jp
es
cmps
adc
stos
movs
test
addr16
cmp
int
xchg
xor
xor
or
push
cdq
rol
pop
ret
ror
jne
push
pop
pushf
add
les
sbb
dec
aad
imul
das
push
mov
in
jne
loope
mov
cli
lock
nop
pop
dec
and
pop
data16
or
outs
jo
cmps
popf
fistp
fs
in
outs
fisttp
ficomp
jb
imul
scas
ds
inc
imul
xchg
cld
in
sahf
dec
sbb
es
(bad)
rol
imul
jns
cmp
pop
pusha
jl
adc
rcr
mov
mov
test
repnz
pop
shr
lods
mov
jmp
out
jmp
cmp
(bad)
in
shr
out
adc
pushf
add
or
pop
cmp
popa
movs
add
test
rcr
scas
dec
fstp
jmp
in
cmp
in
or
pop
pop
push
fsubp
xor
aaa
aam
shl
(bad)
dec
sbb
cmp
in
sbb
add
pusha
retf
mov
push
fwait
ss
scas
jl
mov
xchg
adc
add
push
inc
xor
popa
rcl
adc
add
jb
pushf
cdq
mov
cmps
cmp
ins
sbb
sub
arpl
enter
mov
aaa
fs
sub
call
and
mov
xor
push
pop
and
mov
or
in
(bad)
mov
or
ror
jnp
jae
sahf
in
retf
stos
inc
lds
loopne
not
lock
dec
sbb
call
arpl
inc
or
adc
pop
mov
xor
nop
packsswb
jb
xchg
cmc
push
sbb
rep
stos
mov
out
pop
scas
xchg
fdivr
sbb
mov
popa
popa
clc
dec
xor
cwde
mov
mov
mov
adc
cmc
add
dec
mov
cli
(bad)
mov
add
xchg
xchg
adc
shl
pop
(bad)
xchg
dec
dec
inc
push
call
in
pop
lods
sbb
adc
sti
or
iret
jnp
fwait
inc
and
test
loope
pop
in
and
or
jl
outs
(bad)
sbb
gs
add
sbb
xchg
clc
jg
mov
add
jl
cmp
jge
push
mov
and
mov
mov
into
sti
mov
imul
pop
scas
mov
loopne
(bad)
in
in
add
outs
inc
movs
mov
je
mov
daa
pop
cmp
add
and
xor
xor
mov
jmp
inc
dec
and
test
inc
mov
mov
or
push
sbb
xchg
ins
std
clc
out
pop
es
sti
mov
sbb
ficom
xor
iret
add
in
shl
xchg
arpl
push
outs
sub
pop
mov
and
cmp
pop
dec
cmp
call
mov
lahf
mov
jbe
jo
add
mov
shl
mov
mov
adc
sbb
xor
sub
inc
je
ja
jae
inc
mov
loopne
loop
call
xor
push
lea
(bad)
repz
pop
scas
stos
int
or
jbe
arpl
xchg
add
je
xlat
outs
pop
daa
jmp
pusha
mov
test
adc
pop
ins
aaa
inc
jge
in
inc
iret
(bad)
push
or
jo
test
or
stos
push
and
jbe
mov
jb
imul
(bad)
pop
lock
cmovl
add
outs
xchg
pop
mov
xor
shr
cmp
imul
inc
ret
add
js
xchg
cld
push
enter
adc
and
sub
ror
jbe
ror
adc
imul
adc
aam
xchg
jl
pop
push
jns
jns
jmp
push
outs
pop
fdivr
adc
mov
in
imul
mov
int
cmp
out
dec
sub
adc
mov
ss
cli
or
shl
rol
push
xchg
out
clc
shl
lahf
je
not
fst
ins
xchg
mov
mov
in
test
outs
adc
mov
setg
inc
les
inc
cmovp
mov
out
test
mov
xor
lods
jmp
pop
in
mov
(bad)
fbstp
test
int
add
fcmovnbe
dec
mov
dec
je
shr
push
mov
imul
jnp
fmul
cmp
jae
jecxz
hlt
pop
out
or
pop
mov
aas
pop
lahf
bound
hlt
ds
stos
jge
pusha
push
mov
ins
sbb
sbb
pusha
aaa
mov
mov
mov
jmp
call
push
pop
fwait
retf
jbe
mov
jmp
dec
mov
sub
adc
cmp
fidivr
arpl
mov
inc
push
inc
ror
jnp
clc
mov
pop
add
jae
mov
inc
mov
iret
les
call
rcl
les
sahf
mov
or
shr
fcmovu
xchg
jbe
sbb
idiv
lods
push
in
rcl
scas
sbb
test
mov
out
jecxz
mov
or
cmp
push
push
and
jne
out
xor
or
lea
sub
shl
jne
mov
jb
aad
clc
(bad)
daa
dec
in
lahf
push
and
xchg
and
add
mov
jno
ror
pop
jle
xchg
std
retf
add
inc
ja
ds
xchg
scas
adc
ds
jmp
mov
dec
mov
mov
sub
or
pop
sbb
ret
xchg
fimul
xor
xor
imul
jns
cmp
mov
daa
jmp
test
adc
call
jle
scas
cli
mov
bound
lods
daa
sbb
(bad)
int
xor
fwait
xchg
adc
dec
jns
sbb
push
fwait
dec
cmp
mov
enter
pop
sbb
hlt
mov
sub
gs
lods
xchg
out
leave
xchg
aaa
shr
js
xchg
mov
wbinvd
dec
adc
adc
and
fcom
mov
adc
out
imul
adc
xchg
cmps
fistp
scas
mov
lock
stos
push
push
adc
outs
add
movs
sub
dec
shl
rcr
(bad)
push
xor
sti
in
js
sbb
test
jge
hlt
ss
repz
movs
lock
sub
cdq
lahf
sbb
sbb
cmp
inc
(bad)
xor
sub
repz
dec
icebp
in
gs
mov
cmp
sub
xchg
cli
jle
push
in
sar
in
xchg
or
jmp
or
cmps
dec
mov
cwde
push
test
xor
aaa
outs
in
dec
retf
hlt
pop
movs
push
mov
add
jl
es
mov
in
shr
cwde
xchg
jmp
sub
push
cmp
movaps
mov
dec
and
ja
pop
or
or
stc
stos
fistp
jmp
(bad)
sbb
repnz
mov
adc
nop
and
sbb
(bad)
pop
push
push
loope
loop
mov
test
push
shl
mov
mov
mov
loop
cmps
dec
mov
dec
mov
push
xchg
and
push
scas
and
sub
loopne
es
fwait
push
xor
out
xor
xor
sahf
xchg
add
push
in
jge
pushf
or
jnp
or
mov
push
sbb
sub
dec
aaa
test
push
cwde
scas
ret
in
scas
dec
mov
pusha
arpl
hlt
mov
in
mov
pop
inc
sub
int
xchg
xchg
arpl
fist
inc
mov
aam
fwait
and
push
push
lods
add
mov
mov
enter
sbb
imul
jbe
mov
push
test
mov
mov
clc
and
pop
push
mov
mov
mov
mov
addr16
sbb
cmps
mov
dec
xchg
fsubp
aaa
and
inc
loop
cmc
pop
pushf
dec
ins
jnp
mov
test
movs
inc
imul
into
xchg
add
pop
mov
int3
inc
pop
cmp
xchg
nop
or
bound
jecxz
test
push
xor
jb
or
xchg
cmps
popa
jge
lods
cmp
popf
in
or
out
sbb
(bad)
mul
cdq
nop
ret
div
xor
lahf
jle
mov
sub
ret
jnp
(bad)
jae
in
mov
sti
xor
mov
push
and
push
ins
mov
xchg
mov
aam
mov
int3
call
and
sub
je
mov
mov
or
sbb
bound
push
push
daa
outs
pop
mov
(bad)
cli
xor
pop
(bad)
and
push
shr
int
lds
jno
sub
sub
push
jge
les
int3
ret
jmp
add
(bad)
hlt
mov
sub
test
cmp
jg
shl
push
adc
mov
ins
repz
jle
clc
fidivr
mov
daa
sub
xchg
in
clc
clc
mov
and
enter
loop
cmp
sbb
fadd
mov
xor
retf
push
jb
fisub
dec
cmp
mov
stc
movs
push
xchg
xchg
out
retf
dec
inc
and
mov
ja
imul
mov
dec
xchg
adc
mov
scas
pop
lock
stc
imul
(bad)
call
xchg
sbb
pop
mov
scas
jmp
and
outs
call
clc
pushf
pop
and
(bad)
rcr
pop
add
xchg
ins
inc
xchg
mov
fsub
loopne
xchg
loope
mov
sbb
sbb
shr
aaa
xchg
add
mov
sub
cs
jp
xchg
adc
or
cmp
call
lahf
popa
pop
cmp
in
ret
test
dec
xchg
jb
sub
jle
and
(bad)
cmc
enter
pop
std
xor
ins
pop
enter
add
rcl
xchg
xor
in
xor
pop
ror
push
nop
leave
shl
xchg
cld
popf
xor
dec
shr
ss
jmp
xor
mov
lods
dec
aas
mov
and
xor
lock
cmp
loope
fdiv
cli
xchg
fild
sbb
in
add
imul
mov
mov
in
push
cmp
add
mov
or
xchg
jmp
jb
xor
not
loop
mov
bound
cwde
lea
xchg
jns
mov
lea
jno
mov
loop
adc
mov
test
pushf
sub
in
aad
sbb
or
inc
or
and
push
movs
imul
pop
pop
or
sub
mov
jge
lds
push
hlt
jmp
jmp
lahf
pop
imul
mov
scas
push
mov
adc
and
xor
loopne
dec
mov
mul
scas
xchg
or
sbb
or
jns
and
clc
(bad)
rcl
jmp
fstp
dec
xchg
sub
xor
add
sbb
pop
pop
imul
jg
retf
fcmovne
xchg
in
lds
jne
push
cli
pop
movs
fistp
sbb
into
pop
repnz
repz
or
push
or
mov
or
mov
sub
fdivr
jg
xlat
data16
neg
xchg
retf
jmp
jne
inc
ja
cmps
inc
or
sahf
xor
inc
bound
imul
pop
mov
mov
xchg
add
xlat
add
inc
push
js
stc
mov
xchg
mov
mov
repz
pop
adc
in
fnsave
or
mov
loop
cmp
mov
fcmovnbe
movsx
stc
adc
test
sub
pop
ror
es
imul
or
push
push
stc
mov
ja
mov
dec
push
mov
xchg
outs
mov
cwde
dec
dec
mov
pop
add
cmc
xchg
sar
jl
add
bts
lds
(bad)
mov
jnp
fsubr
fbstp
std
mov
jmp
pop
es
and
imul
test
aad
push
leave
add
push
scas
adc
ret
mov
sbb
xor
neg
mov
test
inc
and
sub
dec
lods
pop
sti
pop
pop
xchg
scas
leave
scas
push
dec
mov
dec
dec
in
stos
ret
cld
adc
stos
(bad)
gs
sti
pop
mov
cdq
pushf
ss
and
cmp
in
outs
mov
jns
cmp
push
mov
sbb
or
inc
test
inc
jo
in
inc
aas
ja
clc
cmp
inc
cmp
or
mov
dec
add
es
in
push
jbe
(bad)
ficomp
lahf
retf
dec
fdiv
pop
cwde
pop
hlt
enter
in
dec
rcr
mov
and
jae
cmp
push
adc
adc
push
fistp
scas
xchg
push
adc
push
sub
push
cmps
addr16
add
mov
call
xlat
ror
sbb
xchg
mov
push
mov
pop
push
cwde
imul
daa
inc
dec
pop
mov
push
mov
dec
xchg
mov
mov
call
xor
and
adc
mov
inc
jmp
and
cwde
jae
rcl
sub
and
jg
inc
jb
ficom
(bad)
outs
(bad)
dec
jb
pushf
mov
jmp
outs
xchg
xor
mov
ret
or
and
shr
inc
mov
inc
xlat
lahf
add
cmp
xlat
or
scas
pop
inc
(bad)
xchg
pop
dec
mov
jae
or
adc
test
xor
adc
and
arpl
pop
sub
fnsave
jb
cmps
sbb
dec
popf
adc
out
loop
ja
not
das
popf
aaa
iret
(bad)
imul
jae
call
retf
and
mov
sti
lock
je
jo
jmp
dec
outs
push
scas
dec
ret
ss
sub
js
jle
dec
mov
scas
clc
mov
lock
movs
mov
daa
imul
xor
ret
or
add
xor
inc
adc
sbb
arpl
xchg
fist
inc
inc
retf
shl
sub
dec
and
shl
pop
pop
xor
daa
out
sbb
ds
jbe
mov
bound
cwde
sti
leave
push
aas
jb
push
mov
inc
jb
jl
jmp
jg
jb
jnp
daa
cld
scas
push
mov
or
jg
addr16
mov
out
data16
jo
add
rol
out
adc
xor
mov
lods
pop
sbb
jbe
add
cmps
jmp
clc
and
add
pop
pop
fucomip
cmp
retf
or
or
js
add
and
jo
daa
mov
push
mov
(bad)
test
sbb
mul
imul
stos
jo
sub
sbb
test
push
sbb
mov
adc
add
call
(bad)
cmc
inc
inc
and
cli
je
inc
pop
inc
sahf
pop
bound
pop
jp
add
call
cli
mov
lea
inc
aam
pop
int3
xor
not
mov
jge
mov
xchg
out
or
aam
pop
push
jb
(bad)
adc
cmc
and
das
sbb
sub
pop
fistp
repnz
pop
int3
cmp
xchg
or
mov
call
mov
es
sub
cmc
sub
sti
cmps
mov
fsubr
bound
pushf
dec
sub
or
jns
mov
inc
retf
(bad)
xlat
pusha
repz
jl
mov
shl
mov
mov
sub
popa
sub
pop
mov
ror
(bad)
cwde
mov
and
sub
pop
icebp
idiv
(bad)
loopne
add
adc
push
and
push
loopne
cmp
pusha
movs
ds
mov
ret
and
mov
xor
daa
(bad)
(bad)
scas
and
and
xchg
jo
lds
pop
push
push
pushf
arpl
sahf
jbe
pop
pop
push
mov
loop
imul
cld
movs
pop
(bad)
push
cmp
sub
out
popf
stos
jns
mov
les
arpl
add
sub
sahf
or
(bad)
xchg
sub
pop
push
adc
mov
and
xchg
push
int
cmc
mov
inc
sbb
ja
rcr
(bad)
fiadd
int
mov
ja
jg
and
push
icebp
push
mov
pop
int
fisttp
iret
mov
mov
jle
iret
out
push
cmp
pop
cdq
out
dec
(bad)
loop
jge
lds
jle
mov
adc
mov
into
xchg
jp
cwde
jmp
add
nop
hlt
xor
aaa
dec
add
hlt
cmps
or
int
mov
fld1
mul
mov
int3
jns
xor
mov
sbb
nop
add
and
xlat
and
cwde
push
ss
cmc
mov
add
lods
mov
sub
push
loop
sahf
inc
mov
push
jg
ds
call
sbb
sub
movs
pop
mov
lods
cli
mov
mov
xchg
xor
dec
or
das
adc
leave
lahf
scas
inc
mov
inc
or
enter
pop
cmp
xor
neg
repz
out
and
mov
sbb
mov
repnz
adc
pop
push
js
rcr
in
lods
jno
xlat
punpcklbw
mov
cmp
and
push
mov
mov
shl
popa
les
mov
mov
pusha
push
sbb
mov
es
mov
pop
and
xor
xor
das
sub
aaa
lock
and
fdiv
and
int3
aad
(bad)
adc
mov
add
add
pop
mov
mov
inc
jmp
aam
or
add
and
and
cmp
pusha
and
rol
mov
dec
jp
push
movs
dec
xlat
lds
xchg
icebp
in
sub
jge
push
out
stos
mov
adc
jmp
sub
mov
lea
add
pop
ror
aam
cld
xchg
retf
bound
pop
(bad)
mov
scas
pop
mov
stos
hlt
mov
push
outs
dec
in
inc
pop
lds
sub
pop
push
nop
int3
add
cmps
dec
adc
jle
clc
adc
inc
pusha
popa
mov
fild
out
sbb
cdq
stc
gs
mov
retf
sbb
pop
jecxz
cmp
mov
pop
clc
repnz
(bad)
loopne
push
xchg
push
outs
cmp
sbb
mov
jmp
push
cmps
mov
test
pop
fisttp
push
retf
pusha
dec
sbb
loopne
xchg
push
data16
outs
leave
mov
pop
arpl
or
aam
int
pop
jb
stos
loop
lds
test
pop
icebp
rol
mov
mov
sbb
pop
push
pushf
scas
shl
mov
adc
ds
(bad)
hlt
test
inc
jns
repnz
sbb
les
mov
std
icebp
dec
je
mov
stos
mov
xor
sub
push
mov
adc
add
mov
loopne
jmp
sar
in
sub
jns
cwde
daa
lea
lods
mov
pop
xchg
loope
mov
movs
mov
icebp
fst
nop
dec
jo
call
data16
mov
pop
sbb
aad
adc
ror
mov
cmc
adc
sbb
aas
imul
jl
add
(bad)
data16
mov
ret
push
adc
sub
xchg
or
fisttp
sbb
cmp
stos
jp
dec
in
push
nop
or
xchg
cld
dec
shr
fs
push
scas
jbe
dec
into
aam
dec
dec
call
ficomp
inc
xchg
sbb
xor
in
mov
cmovle
pop
out
mov
xchg
js
arpl
mov
fisttp
jl
(bad)
push
out
adc
out
lds
inc
es
inc
push
jle
jae
mov
add
jle
sub
lds
test
lods
jecxz
inc
test
(bad)
stos
scas
mov
shl
cli
sti
shl
jp
in
cmps
xchg
xchg
add
mov
inc
pop
dec
push
repnz
daa
(bad)
das
fwait
adc
mov
push
push
arpl
xlat
pop
pop
aad
jmp
movs
(bad)
clc
mov
cmp
jbe
xchg
outs
ins
dec
dec
jl
sti
retf
xchg
pop
xchg
ja
rep
mov
aam
loop
dec
out
std
pop
popf
sub
inc
loop
jae
gs
and
bound
cmp
mov
mov
aad
xchg
movs
dec
in
push
cdq
fidiv
xor
leave
pop
cli
hlt
push
or
add
cmc
pushf
fist
jno
cmps
in
mov
or
inc
jmp
add
add
push
inc
mov
jno
add
jns
scas
dec
pop
push
sbb
jmp
je
ds
fdivr
test
movs
adc
(bad)
cmc
mov
and
mov
ror
pop
ret
push
shl
rol
add
icebp
xchg
lds
scas
pop
inc
jae
sub
(bad)
dec
pop
sub
ret
mov
mov
push
or
or
pop
int
test
(bad)
imul
cmp
outs
jmp
or
fs
cmp
mov
xchg
sahf
push
loope
mov
jmp
lods
push
dec
adc
and
rol
mov
jmp
movs
and
not
sbb
cdq
jmp
stos
iret
es
mov
pop
pop
push
mov
hlt
inc
xor
shl
pop
fdiv
test
(bad)
sti
sbb
xor
inc
fadd
leave
rcr
sar
retf
xor
(bad)
hlt
cmc
mov
in
cmp
jno
js
sti
ins
repnz
mov
cmc
jecxz
sbb
add
ins
xchg
rol
repnz
adc
xor
or
cmps
fbld
dec
in
das
outs
mov
push
jbe
jb
fsub
dec
pop
icebp
and
push
xor
inc
push
loopne
shl
repnz
(bad)
loop
xchg
push
(bad)
push
icebp
sub
test
sar
inc
sbb
mov
lods
arpl
clc
push
and
mov
fdiv
jns
aad
rol
mov
mov
not
inc
inc
xor
jae
aad
movs
push
(bad)
push
pushaw
inc
add
adc
icebp
mov
arpl
stos
xor
xlat
pop
fadd
inc
and
xlat
jmp
mov
in
neg
push
push
ret
imul
dec
and
push
mov
out
ss
xor
enter
frstor
and
fld
mov
rol
push
imul
aaa
cmp
daa
lds
hlt
outs
mov
xchg
aaa
add
fbstp
pop
or
and
cmp
jl
xor
pop
enter
mov
jns
sbb
adc
mov
popa
add
data16
cmp
sbb
fdivr
fcomip
sbb
or
mov
or
gs
push
pusha
dec
mov
add
add
jg
mov
xchg
bndldx
jbe
stos
outs
mov
adc
mov
mov
push
fldz
xchg
adc
pop
out
xor
enter
jge
sub
mov
cmc
adc
sbb
das
sbb
imul
inc
xor
push
jo
pushf
xchg
jp
mov
cmp
xor
rcr
bound
mov
or
bound
loop
sbb
(bad)
nop
(bad)
fstp
mov
aaa
jg
and
mov
add
popf
aaa
or
nop
push
push
or
hlt
cmps
mov
jo
mov
pop
fisub
jb
jae
lock
sti
stc
std
les
mov
in
jecxz
dec
xor
in
pop
imul
sub
dec
mov
shr
push
ret
mov
sub
inc
pop
popf
cmps
mov
mov
add
jle
and
inc
std
(bad)
jmp
call
mov
sub
getsec
fld
push
adc
mov
jbe
lods
inc
adc
jns
imul
mov
xor
das
ret
jmp
test
(bad)
xchg
and
sbb
ret
fmul
cli
push
xchg
lea
imul
ret
inc
jno
jbe
sbb
scas
int
mov
rcr
retf
mov
xor
into
scas
data16
push
jnp
sti
inc
push
icebp
jne
jae
sub
cmps
dec
xor
addr16
mov
retf
call
mov
push
fsub
inc
sbb
xchg
das
lds
or
cmp
fwait
aas
rol
fwait
or
dec
adc
cmp
fidiv
inc
outs
(bad)
ror
lock
mov
nop
push
call
ins
adc
imul
sbb
jge
inc
sbb
cmp
jmp
daa
push
jmp
lods
ja
js
shr
jp
xor
pop
inc
mov
popf
inc
push
repnz
jno
fs
mov
lods
int
push
retf
xor
jno
je
push
data16
mov
adc
push
inc
mov
mov
adc
mov
push
lock
xchg
sub
(bad)
out
inc
cmp
cwde
lods
outs
xor
mov
lods
jmp
dec
popa
or
sub
and
loopne
movs
sub
out
push
aam
pushf
and
stc
cld
leave
into
in
mov
xlat
sbb
inc
shl
push
pushf
ficomp
mov
adc
add
int3
(bad)
mov
in
sbb
xchg
sbb
and
inc
fisubr
sbb
jnp
in
out
daa
jl
js
add
dec
mov
xor
lods
mov
sbb
mov
call
loopne
call
stos
jmp
daa
shr
xchg
xchg
cmp
jp
mov
hlt
sub
dec
push
into
enter
sub
lods
cmps
arpl
out
add
pop
or
mov
aas
mov
and
or
jle
loope
movs
cmp
lea
popa
cmp
dec
out
ret
mov
in
popa
sub
inc
add
inc
sbb
test
xchg
outs
test
out
pop
loope
ror
sub
inc
add
cmp
xchg
mov
adc
aas
xchg
arpl
popa
pusha
sub
mov
les
out
mov
xlat
push
xor
not
xchg
push
mov
mov
and
pop
mov
mov
dec
push
dec
data16
and
sti
jmp
mov
repnz
jnp
lahf
add
clc
jmp
int
dec
inc
cmps
cmp
xor
or
pusha
outs
scas
out
in
lahf
fdivr
sub
imul
push
loop
mov
push
mov
push
daa
sub
jecxz
mov
mov
mov
ret
mov
aam
mov
sbb
(bad)
mov
fwait
ror
inc
outs
adc
mov
dec
nop
(bad)
pop
fild
ds
shr
je
dec
jb
div
fsub
into
aaa
push
push
into
push
mov
sub
xchg
and
fs
push
adc
imul
fdiv
gs
jmp
or
aad
xchg
pop
test
ret
inc
lock
rcr
inc
adc
jmp
ret
lds
retf
push
mov
mov
shl
xchg
lods
xchg
scas
and
sar
mov
movs
jle
int
hlt
(bad)
out
and
lahf
adc
movlps
fwait
sub
or
test
imul
in
xor
push
int3
mov
popf
in
adc
add
aas
sbb
push
push
mov
mov
in
mov
xchg
dec
lds
pop
push
test
(bad)
aas
dec
and
mov
call
xor
push
push
xlat
outs
fsubr
and
sbb
xchg
cmps
and
je
shr
push
or
and
push
or
cmp
stos
xor
push
inc
je
jmp
jmp
inc
fistp
xchg
mov
add
pop
sbb
inc
sbb
cs
sti
dec
rol
adc
hlt
cdq
lods
ret
or
ss
shl
sbb
bound
mov
inc
jo
mov
nop
xchg
xchg
aaa
sbb
sbb
mov
ins
sub
pop
sbb
xchg
outs
(bad)
test
push
es
cmc
fistp
ss
and
dec
fbstp
mov
push
pop
pop
jae
test
rol
int
outs
rcr
add
je
test
push
and
ins
and
test
xchg
and
int
daa
xor
xor
jmp
repz
retf
mov
add
push
aas
dec
dec
sbb
pop
inc
mov
nop
movs
popf
push
cmp
mov
mov
inc
jg
mov
or
push
ins
les
dec
pop
add
sbb
xor
and
scas
or
ss
shl
fimul
add
aam
loopne
fs
mov
xchg
xchg
push
retf
(bad)
imul
and
mov
mov
adc
push
(bad)
xor
dec
clc
inc
mov
(bad)
jmp
loop
(bad)
cmp
jnp
int3
dec
lahf
mov
cld
xor
ins
jns
das
mov
std
mov
mov
cmp
cmp
and
cmp
mov
jmp
add
push
cmp
add
pop
lods
xor
sbb
sub
add
imul
ficom
adc
and
jmp
pop
test
mov
push
xchg
mov
in
cmp
imul
push
mov
add
mov
xchg
fsub
cmp
jmp
cmp
dec
repz
in
and
lds
jecxz
pop
shr
mov
hlt
cwde
inc
xchg
dec
shl
jle
adc
or
retf
and
mov
iret
(bad)
xchg
repz
mov
out
inc
les
bound
xchg
xor
push
ss
push
xchg
imul
enter
jnp
in
cmp
bound
adc
add
mov
dec
fcom
stos
(bad)
repnz
dec
push
mov
add
xchg
or
xchg
mov
inc
inc
into
lods
pop
sbb
fild
adc
or
cmc
stos
sub
xchg
and
fdivr
rcr
test
fimul
jmp
jmp
xchg
push
je
xchg
iret
mov
or
lods
jge
mov
xchg
mov
ret
mov
sti
mov
leave
mov
add
add
add
and
pushf
sub
iret
push
mov
jno
leave
pop
push
add
mov
inc
and
div
in
hlt
sbb
inc
test
test
es
jmp
(bad)
pop
pop
adc
ret
ror
adc
std
fcomp
push
(bad)
pop
lock
mov
daa
test
xchg
mov
jbe
idiv
sub
sbb
cmp
push
dec
sbb
in
push
test
idiv
outs
outs
mov
aam
outs
ror
es
(bad)
adc
cwde
inc
cmp
test
xor
push
and
add
sub
dec
popa
mov
add
popa
fild
or
imul
scas
dec
cmps
bound
mov
popf
cmp
adc
mov
mov
adc
iret
pop
fsubr
shr
test
mov
fild
loop
inc
or
std
(bad)
cmp
mov
jo
jo
sub
mov
jno
pop
movs
mov
mov
pop
push
dec
adc
mov
sbb
aaa
and
out
sbb
or
loop
mov
push
ret
jmp
(bad)
fidiv
push
mov
add
outs
(bad)
dec
push
cwde
xor
push
test
add
repz
aad
xchg
nop
or
or
retf
jbe
xchg
pop
sub
jno
mov
mov
mov
pop
xchg
adc
ret
ins
daa
ds
call
repnz
inc
pop
(bad)
adc
mov
shl
push
jmp
ret
fistp
jl
div
aaa
imul
inc
sbb
mov
mov
out
call
arpl
shl
data16
call
mov
aad
xchg
sbb
seta
adc
or
pop
lds
and
cmp
xor
sub
jmp
mov
loopne
ret
inc
or
jmp
xchg
fnstsw
ins
mov
push
rcr
mov
sub
mov
fsubr
repnz
add
ins
sbb
sbb
in
addr16
add
sub
lea
jp
fcmovb
mov
imul
lds
and
cmps
or
jb
xor
pop
lahf
jecxz
jns
adc
jae
pop
les
out
xchg
mov
mov
repnz
adc
(bad)
jno
adc
stc
in
ret
cmp
cmp
jp
out
(bad)
call
clc
cmp
mov
bound
call
push
sub
inc
repnz
ror
jb
pop
movs
repz
mov
fcom
xor
xor
jg
jo
or
fisttp
adc
jae
in
mov
dec
ins
mov
pop
pop
int3
cli
sar
(bad)
or
loopne
shl
pop
cmp
ds
lods
ins
adc
mov
test
arpl
inc
mov
ror
shl
iret
nop
and
fs
not
or
adc
mov
rcl
inc
inc
mov
out
sbb
and
xchg
inc
(bad)
inc
dec
in
and
or
mov
mov
ds
sti
movs
je
inc
and
scas
cmp
in
bound
pusha
cli
retf
in
or
mov
in
jp
(bad)
ficom
and
test
ss
stc
fisub
or
aad
push
stos
jmp
mov
xor
mov
push
(bad)
adc
pushf
fisub
push
or
jmp
xor
jge
jo
les
enter
call
xor
pop
xchg
push
inc
add
ja
add
stos
dec
inc
xor
and
fldenv
cs
fs
jbe
xor
aad
cmp
test
iret
xchg
out
hlt
mov
inc
cmp
ins
shl
shr
nop
test
movs
scas
or
mov
or
(bad)
adc
in
jns
ss
mov
jno
stos
cmp
push
xchg
repz
dec
rcr
in
fidivr
enter
aas
call
fisub
ja
adc
das
jp
dec
test
push
test
xchg
les
jge
(bad)
sub
mov
dec
and
mov
loopne
hlt
push
pop
xor
outs
push
les
lds
sub
retf
xchg
adc
xchg
or
push
stc
xor
or
jne
test
sub
sub
ins
sbb
loop
mov
add
jecxz
add
dec
push
scas
mov
sti
jne
(bad)
repnz
(bad)
hlt
int
cld
push
ret
das
movs
cmp
shl
jp
pop
jb
sub
and
pusha
outs
ror
sti
inc
jns
adc
popf
stos
xlat
sti
test
call
sti
clc
and
and
out
mov
xor
iret
sub
out
xchg
aas
out
jle
xchg
out
loop
jbe
popf
jp
jmp
jp
or
mov
dec
dec
lods
pop
cmp
xor
add
push
push
mov
sub
add
repnz
ja
xor
push
pop
mov
fimul
test
(bad)
out
mov
scas
sbb
xchg
arpl
cdq
lds
inc
mov
pop
adc
mul
arpl
adc
jbe
repz
add
xchg
xchg
dec
push
pop
add
(bad)
mov
inc
jecxz
arpl
shl
pop
xlat
mov
dec
loop
repz
cmps
ficom
into
and
mov
and
mov
or
sub
jae
pushf
mov
call
(bad)
xor
or
shl
mov
ret
sub
and
retf
adc
sub
cmp
sbb
mov
cmp
xchg
mov
sub
sbb
repnz
aaa
shl
push
mov
inc
jp
add
adc
pop
ret
add
jmp
int
cld
test
js
cld
out
sahf
sub
enter
add
adc
mov
mov
retf
pmaxub
jmp
jno
mov
icebp
push
pop
rol
sub
xor
enter
and
cmp
and
mov
mov
xchg
lds
sub
adc
jmp
or
adc
sbb
ror
push
sub
xor
adc
and
cmps
stos
(bad)
sub
mov
mov
mov
das
adc
mov
adc
les
mov
or
inc
xlat
sbb
mov
sub
out
shr
ds
arpl
mov
mov
dec
imul
mov
retf
push
stc
xchg
jmp
push
out
sbb
jne
outs
dec
imul
mov
stos
int
jl
mov
and
test
lea
xchg
mov
xchg
xchg
pop
scas
mov
ins
xor
je
sbb
jle
imul
and
fisttp
or
mov
gs
push
cmp
cli
imul
xchg
bound
fwait
nop
sbb
jbe
fstp
cwde
mov
cdq
add
shl
inc
xchg
stos
and
add
sub
lds
mov
sbb
outs
fld
(bad)
cdq
sbb
test
ficomp
fwait
outs
xchg
sub
mov
inc
fsub
sbb
adc
mov
push
dec
arpl
fst
in
jb
(bad)
(bad)
lds
push
jmp
sbb
mov
mov
movs
mov
dec
inc
pop
or
jmp
out
jle
es
inc
pop
fdivr
aas
lods
cs
and
jge
inc
cmps
pop
push
jb
adc
xchg
xlat
xlat
ins
push
sahf
int3
adc
push
sub
cmp
shl
adc
out
pop
sbb
xor
mov
bound
cmp
pop
bswap
repz
fadd
(bad)
in
push
pop
add
(bad)
call
mov
out
and
imul
push
mov
pop
mov
out
dec
inc
cmps
scas
dec
cmps
retf
aas
xor
into
ds
int3
sbb
jae
in
dec
jne
rcr
mov
xor
outs
pop
pop
ds
xor
les
mov
sub
dec
cmc
inc
sbb
icebp
or
lahf
cmp
call
hlt
loope
(bad)
in
retf
add
popf
mov
xor
test
mov
ficomp
cmp
xor
jg
in
clc
shl
xor
cmp
jno
cmp
jns
xchg
mov
jmp
mov
jge
and
xchg
fs
gs
ss
jnp
fist
sar
cmp
fist
test
aas
jae
test
cli
cli
sbb
sbb
jne
mov
cli
aad
mov
cdq
addr16
(bad)
dec
xor
jne
pop
bound
xor
in
jg
push
cmp
dec
mov
not
fldenv
arpl
dec
gs
dec
or
ds
adc
add
arpl
bound
not
mov
mov
mov
aad
xor
lock
dec
lds
out
cwde
xchg
sbb
movs
out
lock
int
lahf
mov
mov
dec
xchg
or
mov
mov
daa
xchg
mov
adc
add
xor
pop
inc
push
xchg
out
xor
jmp
pop
lea
call
mov
dec
mov
jb
inc
and
sub
not
ss
movs
xchg
adc
or
push
push
idiv
out
test
dec
pusha
es
mov
fld
sub
or
ret
fdivrp
or
xor
jne
out
jae
mov
and
mov
mov
les
xchg
inc
jmp
test
sbb
sahf
fcmovb
xor
push
xor
mul
adc
neg
jne
loop
into
mov
or
jae
mov
jp
mov
lods
outs
loope
xor
js
test
inc
scas
test
jbe
nop
fdiv
in
jmp
je
mov
dec
pop
mov
or
fcomp
jb
xchg
addr16
cmp
out
imul
je
dec
push
dec
jg
cmps
push
jecxz
sub
test
dec
ror
cmp
jb
stc
jl
je
aas
mov
lea
inc
or
rol
into
mov
jle
xchg
cmp
cmp
neg
mov
xchg
imul
int3
dec
les
dec
ja
xor
mov
cmc
ret
aaa
outs
test
inc
out
cdq
aas
jae
xchg
stos
push
je
int
jno
ror
lods
and
jno
rcr
mov
add
jmp
imul
and
xor
ins
inc
pop
test
xor
cmp
sub
das
add
xchg
out
ror
sbb
aam
lods
scas
pop
add
jmp
xchg
fidiv
dec
fcom
or
fxch
pop
je
shr
jge
pushf
xor
mul
jp
jmp
dec
arpl
or
dec
cli
ins
mov
fdivr
mov
enter
imul
mov
jl
je
mov
mov
fsubp
stos
hlt
add
push
dec
pop
pop
jns
dec
jg
inc
mov
xchg
fstp
fs
adc
test
in
sub
adc
mov
cmp
lds
sar
add
mov
sti
xchg
mov
mov
scas
icebp
out
fisttp
out
jbe
mul
mov
frstor
std
sub
call
dec
adc
ins
fadd
daa
jge
pushf
arpl
or
ins
xchg
ret
add
or
out
mov
rcr
sbb
adc
inc
or
ret
or
das
out
movs
aam
(bad)
jp
add
push
jp
inc
or
mov
cmc
inc
cs
xor
jp
sbb
lds
test
push
pushf
dec
jge
xor
xchg
das
dec
pop
enter
xchg
(bad)
xchg
push
or
cmp
lds
ja
dec
pop
dec
leave
dec
je
test
push
jmp
push
pop
cmp
mov
fistp
std
ds
inc
lods
push
arpl
(bad)
call
movs
gs
sbb
xchg
sub
ret
repz
popf
cdq
scas
(bad)
fmul
push
ret
xor
push
push
lock
adc
movs
sub
inc
mov
pop
adc
bound
inc
ret
mov
mov
neg
ficom
scas
loopne
bound
and
cmp
in
ss
es
sbb
jae
adc
gs
dec
fwait
shr
in
mov
xchg
test
test
jmp
test
sbb
push
es
enter
mov
and
jmp
aad
(bad)
push
push
mov
repnz
mov
sbb
in
jo
mov
repz
add
int
jo
jno
in
mov
in
(bad)
cli
jns
and
xchg
adc
arpl
rcl
inc
int3
mov
sbb
jne
and
aaa
jmp
inc
xchg
lods
mov
jp
inc
aas
loopne
stc
sub
xlat
scas
mov
push
les
call
pushf
stc
pop
fcmovbe
aam
test
pop
call
aas
mov
loop
(bad)
sar
jmp
push
in
cdq
test
addr16
sub
xor
nop
pop
in
push
rcr
jmp
out
movs
rol
outs
fisttp
ror
sahf
adc
xor
pop
dec
cmps
mov
cdq
push
(bad)
and
test
mov
cmp
cmp
mov
or
adc
imul
pop
cdq
(bad)
sti
call
adc
call
jne
adc
sbb
mov
inc
inc
jb
in
js
movs
sar
inc
xchg
dec
lods
imul
leave
adc
pop
(bad)
push
jg
sub
sahf
nop
mov
je
mov
retf
jecxz
mov
imul
and
mov
fidiv
mov
add
xor
inc
cmp
sbb
mov
jmp
and
adc
dec
lea
mov
push
and
dec
sbb
out
push
cmovp
xchg
neg
inc
dec
test
sbb
mov
sti
out
cdq
dec
adc
nop
jne
sub
push
push
sbb
mov
das
pop
dec
rol
sar
or
fmulp
jg
cs
sbb
pop
fnstsw
pop
add
retf
push
fwait
and
imul
add
xchg
sub
scas
dec
jne
jle
jmp
mov
call
pop
and
fidivr
mov
bts
ss
cmps
in
mov
mov
inc
es
mov
add
add
out
je
aaa
outs
pop
xchg
push
(bad)
fsubr
adc
pop
and
mov
sub
loopne
dec
dec
cmp
mov
sub
mov
addr16
das
jno
out
neg
mov
xchg
arpl
push
jb
and
xchg
sbb
stos
fdivr
lods
or
test
aas
pop
rep
sbb
test
idiv
mov
mov
imul
int3
ins
mov
loop
and
je
cmc
pop
mov
push
in
inc
xchg
fisub
adc
loope
aad
adc
inc
retf
popf
dec
dec
inc
jbe
add
arpl
test
popf
rcl
(bad)
pop
test
cwde
retf
cdq
test
dec
adc
imul
inc
or
mov
push
mov
mov
data16
fbstp
(bad)
int3
popf
test
inc
sbb
dec
fld
aaa
sub
xor
jp
xchg
adc
bound
add
je
sbb
inc
inc
or
test
push
in
push
add
pop
cmp
dec
repnz
xchg
or
adc
jo
add
sbb
add
xlat
jp
(bad)
not
xlat
add
rcl
outs
fisub
jne
sahf
inc
xor
(bad)
cmp
mov
sti
sub
cmp
mov
jp
out
jbe
and
cmp
inc
jbe
jmp
fisttp
aam
pop
mov
xor
dec
shr
retf
scas
xchg
jp
push
mov
push
mov
outs
sahf
scas
call
or
retf
add
or
jle
jp
outs
out
xchg
fcom
mov
nop
iret
cmp
sbb
(bad)
fwait
mov
sub
mov
test
fild
sub
mov
and
mov
jge
or
outs
and
nop
push
icebp
fsubr
sbb
cmp
fcom
out
cmp
mov
dec
(bad)
inc
test
fnstsw
xchg
add
fwait
jae
dec
dec
dec
pop
add
mov
into
fldenv
inc
and
lods
mov
and
fs
cmps
(bad)
or
add
cwde
or
outs
cmp
cmps
push
fadd
xchg
int3
out
ins
sub
adc
pop
push
xlat
mov
or
mov
cmp
cdq
fbstp
xchg
mov
mov
xor
dec
push
imul
and
les
add
sbb
not
xchg
push
popf
mov
mov
fisttp
shl
xor
mov
jnp
xor
jne
jns
or
stc
add
test
jmp
add
(bad)
mov
(bad)
mov
repz
sub
push
jne
aam
test
push
cmp
cmps
jne
(bad)
pop
fldcw
shl
or
xor
inc
sub
scas
popf
dec
cmc
(bad)
ins
out
dec
sub
adc
xchg
dec
cmp
div
not
loop
xchg
push
jne
xor
mov
rcl
retf
jmp
in
sub
sub
cmp
(bad)
xchg
fxch
push
mov
das
(bad)
sbb
cmp
(bad)
jno
movs
lock
fst
call
jmp
loopne
cmp
mov
xchg
imul
xor
int3
lds
push
or
retf
scas
loope
cwde
rol
mov
push
mov
(bad)
jle
push
mov
std
and
sti
sbb
inc
or
mov
sbb
ins
in
jno
hlt
and
mov
sbb
mov
jecxz
sub
mov
jno
jns
imul
adc
aam
icebp
jg
sub
and
pop
mov
out
push
stc
jmp
add
push
cmp
cmps
mov
jmp
push
jp
cmp
add
push
(bad)
pop
ret
cmp
cmps
cld
xchg
mov
mov
mov
xor
sub
sub
push
in
fld
pop
xchg
cmp
sbb
or
loopne
les
call
hlt
sar
in
out
test
cmps
dec
icebp
call
aaa
nop
pop
(bad)
adc
cmp
cmc
call
adc
push
sbb
cmps
lea
clc
shl
pop
cwde
push
stos
lds
sub
cmps
sar
cdq
rep
in
ret
mov
cwde
gs
or
mov
lods
sub
sub
mov
sti
sub
inc
and
inc
aas
std
mov
leave
jae
retf
xchg
sahf
xor
mov
das
sbb
and
pop
ret
jnp
mov
xlat
jne
cmp
mov
jbe
xchg
pushf
iret
fild
adc
xor
inc
jns
outs
mov
and
stos
(bad)
aas
push
(bad)
jp
or
hlt
and
sub
retf
ss
pusha
and
mov
sbb
call
push
xor
inc
push
imul
push
jnp
push
imul
or
cdq
sbb
and
inc
mov
arpl
popa
cld
or
out
(bad)
scas
xor
dec
dec
mov
loopne
mov
out
sub
mov
push
push
inc
addr16
aam
addr16
add
pop
in
ror
test
loopne
stos
jnp
dec
mov
je
fs
xchg
push
xchg
ret
add
xchg
rcr
push
pop
jne
and
fistp
imul
push
ss
xchg
jbe
mov
(bad)
jecxz
call
ins
ins
push
rcr
ss
sub
or
push
mov
call
or
jo
iret
test
popf
add
xchg
shl
test
mov
lods
or
adc
popa
(bad)
sbb
and
cli
jge
sbb
push
add
aad
add
pop
mov
(bad)
cmp
mov
dec
pop
adc
xchg
out
mov
and
mov
push
jl
jmp
(bad)
loopne
sub
push
pop
push
cmp
mov
int
inc
mov
ins
fnstenv
mov
xor
push
(bad)
loopne
ins
lahf
ins
inc
cmp
js
into
leave
je
adc
dec
or
add
jo
xor
(bad)
sbb
ins
pop
add
fadd
cmc
fidiv
sar
into
daa
lock
outs
ja
cld
jb
pop
push
mov
mov
pusha
add
sbb
xchg
sub
pop
sub
push
mov
jmp
cmp
mov
repz
jmp
pop
cmps
hlt
(bad)
lods
xchg
pop
lds
ja
movs
pop
push
mov
aad
(bad)
(bad)
pop
imul
sbb
(bad)
push
rcr
pop
(bad)
ins
shl
mov
and
or
lock
pop
jb
pop
loope
aaa
pop
dec
sub
push
push
xor
xor
mov
inc
ret
shr
pop
or
add
xor
int3
and
fwait
mov
ret
sub
pop
and
fs
ins
into
test
dec
test
push
(bad)
repnz
jmp
ins
push
and
lods
push
xor
inc
adc
sub
jmp
lds
(bad)
stc
jg
fwait
or
ficom
scas
lahf
sub
sbb
xchg
cmps
jecxz
ss
xor
mov
(bad)
out
xchg
aad
pop
jle
sub
sub
mov
test
fldcw
cmp
and
lock
xchg
or
mov
mov
loop
(bad)
mov
ficomp
cmp
adc
cmp
mov
sbb
dec
dec
cmp
dec
mov
sub
xchg
push
xlat
aad
hlt
sbb
icebp
jecxz
push
mov
jmp
hlt
adc
adc
dec
stc
outs
mov
mov
pop
mov
or
ret
movs
icebp
ds
ss
in
or
nop
ds
jb
adc
xchg
cmp
out
add
push
imul
pop
call
dec
cmp
cli
movs
xor
out
test
cmc
adc
cdq
or
push
cmp
jb
leave
dec
in
inc
call
push
and
mov
das
sbb
out
iret
cs
xchg
mov
or
cmp
outs
test
push
sbb
adc
(bad)
xchg
jl
push
jle
and
or
popa
add
mov
mov
enter
pop
xchg
(bad)
push
mov
rol
mov
and
outs
inc
cmps
(bad)
jb
push
mov
sbb
dec
or
fdivr
lahf
inc
shl
push
jmp
(bad)
xchg
out
aas
cld
dec
test
rcr
ins
push
add
into
mov
sbb
jnp
rcr
or
popa
sub
mov
cmp
cdq
pop
push
addr16
cmc
dec
push
xchg
adc
sbb
xor
pop
sbb
mov
scas
scas
sti
push
adc
cmc
xchg
pop
(bad)
cwde
jg
sahf
or
jl
xor
jne
les
sbb
push
mov
pop
push
sahf
aaa
sbb
cmp
mov
and
sbb
retf
shl
ret
cdq
neg
xchg
cmp
stos
aaa
cld
loope
fwait
out
ja
daa
mov
cmps
fcmove
mov
dec
xchg
test
ss
das
mov
dec
repnz
push
jp
lahf
pop
pushf
pop
stos
or
cli
fild
dec
ror
test
shl
adc
xchg
sub
sub
shr
shl
out
mov
popf
pushf
shl
nop
xchg
push
rep
stos
xor
push
sub
sbb
or
les
xor
sub
add
mov
mov
rcr
or
loope
mov
pop
icebp
ds
cmps
shr
cmps
lea
imul
loope
xchg
inc
add
dec
lahf
pop
out
add
cmps
dec
xchg
xor
or
ins
into
mov
outs
dec
lods
mov
rcr
xor
xor
mov
sbb
inc
jge
sar
std
repnz
push
xor
imul
pop
xor
mov
add
mov
xor
mov
loop
dec
add
adc
inc
retf
sbb
jne
retf
and
push
dec
pop
mov
sub
push
xchg
out
addr16
addr16
(bad)
fcomi
js
(bad)
ins
test
inc
test
xor
cmps
nop
out
ins
dec
out
xor
(bad)
out
adc
jo
xor
add
and
adc
sbb
icebp
jl
std
pop
js
pop
push
cdq
das
mov
pushf
mov
push
cmp
out
sti
push
jns
hlt
mov
int3
jge
jno
xchg
sub
xchg
add
out
xor
rcr
cmp
inc
inc
cmc
push
mov
cmp
inc
add
xor
add
mov
pop
and
push
or
into
shr
ins
xchg
call
jg
xor
loope
sub
stos
lds
add
jnp
sub
mov
adc
sub
sbb
inc
ds
dec
add
dec
mov
fsub
outs
ins
mov
jmp
mov
inc
stos
adc
adc
inc
pop
loop
sub
cmp
test
mov
fisttp
xchg
or
and
cmp
adc
jb
pop
jmp
mul
cmp
xlat
mov
cwde
ins
jns
push
mov
je
(bad)
out
sbb
sahf
adc
xor
arpl
lods
sub
mov
sbb
push
jp
out
iret
xacquire
movs
lods
dec
mov
jmp
push
ja
lods
mov
adc
into
test
sbb
cdq
dec
mov
add
ret
sbb
scas
fsubr
mov
or
mov
cmp
dec
in
push
xlat
xor
fs
out
cld
mov
stos
(bad)
push
mov
sbb
out
sar
mov
out
xor
mov
call
push
daa
loope
cmp
in
out
je
lds
xor
imul
pusha
leave
inc
call
jge
and
cmp
test
ret
sbb
out
xchg
inc
int3
das
test
and
pop
movs
out
dec
mov
cmp
or
ret
outs
pop
cmps
fstp
lods
pop
xchg
pushf
nop
cmp
sub
nop
cmp
and
jo
mov
push
cmp
lock
repnz
ja
jge
cmp
lds
repnz
mov
sahf
fwait
pop
adc
lock
cmc
inc
push
arpl
repz
int3
inc
int
cmp
iret
jecxz
(bad)
adc
xor
mov
mov
cmp
dec
cmps
jp
aad
or
scas
jo
inc
(bad)
adc
jl
mov
lahf
or
test
mov
daa
adc
xchg
fnstcw
(bad)
sbb
xchg
iret
arpl
jo
dec
call
push
dec
ins
test
(bad)
hlt
and
sbb
add
inc
aas
js
mov
or
imul
mov
dec
nop
into
out
adc
pushf
add
fcomip
(bad)
mul
jl
cld
xor
add
out
or
fsub
nop
jnp
lods
ret
mov
ja
jp
stc
jmp
mov
lods
mov
neg
adc
sub
push
mov
sub
icebp
push
(bad)
mov
mov
(bad)
or
sub
lock
mul
pop
inc
mov
sub
aad
sbb
inc
lods
fldz
xor
in
dec
or
jge
xor
out
mov
fadd
inc
push
stos
leave
test
in
fdivr
jp
int
jmp
mov
cmps
jl
adc
jae
inc
sbb
inc
cwde
pop
mov
aas
xchg
add
pushf
fwait
ins
mov
(bad)
in
test
iret
jp
add
xor
adc
iret
xchg
xchg
mov
cmp
movs
(bad)
iret
and
xchg
adc
mov
and
test
adc
pop
fwait
jmp
into
aam
out
mov
pop
popa
inc
push
mov
pop
adc
jge
mov
std
sbb
cld
xor
mov
(bad)
push
inc
cmp
jbe
mov
sahf
shl
pushf
int
inc
daa
xor
jl
or
loop
call
shr
cmp
aaa
mov
pop
sub
sub
icebp
mov
mov
push
ja
neg
aam
daa
sahf
stc
ins
cmps
jns
add
xor
add
push
inc
jbe
out
or
push
js
mov
ficom
lods
leave
adc
push
movs
fiadd
mov
cmc
xchg
pop
les
pop
icebp
enter
xor
dec
stos
lock
push
add
xor
and
stos
fwait
in
sbb
inc
adc
mov
gs
jb
pushf
rcr
pop
lea
or
imul
das
add
cmp
push
jle
adc
not
mov
cmp
adc
xor
cmp
jecxz
and
sti
or
push
es
addr16
push
mov
jecxz
scas
data16
call
int3
pop
jmp
sbb
dec
add
aaa
test
mov
cmp
jg
mov
pop
dec
sbb
add
mov
dec
cmps
sub
push
xor
rcr
je
(bad)
jecxz
call
test
mov
imul
dec
mov
xchg
sbb
mov
or
syscall
cmp
sbb
ret
(bad)
out
mov
arpl
pop
mov
out
bound
xlat
ret
out
repz
xchg
push
popf
add
dec
xor
jmp
fidivr
inc
jle
xchg
pop
cld
sub
push
dec
jmp
fcomp
pop
cmp
sub
(bad)
jno
add
jno
shl
imul
and
inc
(bad)
mov
mov
outs
loope
pop
xor
mov
sbb
je
sbb
mov
fdivr
clc
cmp
dec
retf
hlt
mov
cwde
cmps
adc
xchg
retf
pop
clc
stc
lods
dec
mov
mov
pop
cld
test
adc
ins
jnp
call
xchg
shl
mov
inc
mov
lods
loope
adc
inc
and
jmp
int
xlat
fsub
sbb
mov
ds
imul
shl
mov
call
xchg
and
and
movs
add
mov
repz
pop
push
mov
adc
dec
repz
stos
mov
push
push
mov
pop
push
inc
inc
ret
xchg
nop
bswap
pop
push
cmp
sbb
and
fnstsw
out
retf
call
add
ins
leave
aad
out
bswap
inc
push
loopne
add
test
outs
dec
sbb
ss
add
fcomp
outs
inc
jmp
sbb
or
(bad)
in
dec
ficomp
adc
pop
rcl
sbb
ret
lods
dec
(bad)
mov
je
mov
mov
dec
push
jbe
cmp
aad
pop
push
jle
aas
or
rcr
push
cli
inc
and
test
mov
not
or
aas
mov
(bad)
sar
mov
mov
lds
dec
push
cmp
ss
push
pop
pop
pop
pop
(bad)
jne
dec
dec
inc
push
or
add
dec
jmp
inc
inc
loop
bnd
dec
aas
pop
inc
out
inc
sbb
hlt
enter
call
stos
mov
repz
lock
aad
call
data16
jae
daa
mov
ins
push
cmp
clc
sbb
cmp
jne
and
cs
ins
int
or
lods
scas
popf
in
sahf
sti
cmp
mov
push
rol
cmp
sub
inc
adc
int3
retf
mov
cmp
add
out
in
pop
cmps
std
mov
mov
pop
pop
dec
scas
mov
ja
adc
loop
(bad)
push
fistp
(bad)
es
jl
int3
or
stos
dec
mov
fs
push
ds
add
pop
imul
popf
jno
shr
fstp
ud2
jge
sti
scas
ror
ret
es
ror
dec
cmp
addr16
jg
inc
std
cmps
or
fst
pop
dec
mov
lea
cmp
cmp
and
and
loop
jl
xchg
call
cmp
ror
mov
xor
(bad)
aad
jl
cdq
add
ss
imul
(bad)
out
pop
call
cli
add
push
dec
ret
jae
pop
into
cdq
add
push
push
jge
dec
out
inc
adc
mov
push
jge
jge
mov
xor
sbb
ror
or
mov
fst
aam
push
mov
cwde
jb
std
or
sbb
cmps
cwde
stc
popa
pop
mov
into
mov
and
out
(bad)
add
pop
xlat
push
dec
push
push
cmp
push
ret
(bad)
cdq
mov
sbb
ret
repz
movs
daa
fdivr
fwait
pop
pushf
mov
push
out
leave
dec
das
sbb
and
mov
add
pop
(bad)
call
and
gs
pop
mov
in
xor
push
mov
mov
pop
mov
inc
pusha
pop
sbb
popa
(bad)
fidivr
scas
or
cwde
ficomp
pusha
adc
call
mov
mov
(bad)
nop
out
sbb
out
mov
loope
and
out
push
js
retf
dec
xchg
scas
movs
mov
mov
iret
inc
mov
xor
ins
push
ins
sbb
out
fwait
pop
adc
jge
mov
xchg
inc
adc
addr16
mov
out
int
push
and
adc
mov
xor
cmp
and
cmp
xchg
lahf
lods
sub
std
inc
(bad)
jecxz
lahf
inc
daa
add
push
fstp
or
icebp
cwde
push
into
inc
or
lods
data16
push
iret
js
xchg
scas
cmp
ret
mov
bound
lds
shl
shl
jmp
outs
cmp
mov
push
fwait
add
mov
arpl
adc
call
cmp
add
cdq
movs
add
sub
stc
xchg
jne
lahf
mov
xor
sbb
sbb
clc
in
fstp
and
inc
pop
imul
sahf
int3
lds
lods
adc
push
test
packuswb
hlt
cmp
stc
ins
std
adc
dec
inc
fbstp
sub
std
fisub
lock
leave
inc
mov
in
sub
xlat
aaa
sub
outs
push
(bad)
cli
xchg
adc
and
dec
fstp
mov
push
mov
add
cld
or
in
cld
add
mov
jle
out
and
mov
pop
pop
sub
stc
xchg
push
dec
loopne
jnp
inc
inc
ficom
mov
inc
test
add
test
je
dec
sub
mov
sahf
ss
sbb
and
nop
push
cld
adc
pop
xchg
test
mov
leave
(bad)
iret
mov
mov
retf
xchg
adc
dec
mov
fwait
lahf
(bad)
xchg
jecxz
repnz
sbb
inc
cmps
sti
ds
lock
call
mov
xchg
pushf
stos
scas
adc
daa
sbb
jge
pop
xor
and
jl
psadbw
rol
fld
ret
pushf
mov
dec
sbb
jo
jge
xchg
dec
pop
jge
sbb
mov
(bad)
and
out
dec
int
mov
mov
inc
sbb
jae
xchg
dec
or
stos
fsubp
sti
inc
rcr
dec
mov
cdq
adc
cmp
hlt
jns
pop
push
dec
(bad)
jmp
dec
xor
mov
int
xchg
sahf
pusha
rol
fstp
dec
xor
into
mov
xchg
add
adc
pop
push
cli
sub
mov
ins
jecxz
cmps
dec
xchg
jg
xor
push
fbstp
aad
xor
sahf
adc
jmp
daa
or
adc
call
push
iret
sbb
pop
xchg
mov
mov
mov
jo
aas
jne
mov
test
cmp
mov
adc
jbe
(bad)
fld
sub
lahf
sub
es
ins
sbb
push
jmp
sbb
mov
popw
ss
mov
icebp
mov
(bad)
aad
stos
fidiv
das
sub
cmp
jge
int
test
inc
popf
jmp
out
addr16
add
je
test
pxor
cmp
scas
stc
es
mov
gs
xchg
(bad)
mov
les
sahf
sbb
pop
adc
or
sub
int
pop
push
or
mov
adc
jg
lds
and
dec
sbb
(bad)
mov
lock
xchg
push
cld
xchg
add
dec
loop
test
scas
sub
mov
jmp
leave
cmp
stos
xor
fwait
cmp
push
dec
and
adc
cmp
test
stos
test
icebp
lds
rol
xchg
movs
mov
mov
cmps
jecxz
mov
dec
jmp
xchg
outs
jmp
jge
sub
repz
std
fs
(bad)
push
iret
jge
dec
imul
push
rcl
mov
(bad)
inc
rcl
add
adc
and
clc
and
adc
mov
loopne
shr
rcl
pop
les
mov
loopne
stc
addr16
sub
inc
in
inc
mov
fsub
pop
loopne
ja
add
sbb
call
inc
sbb
cmp
outs
popa
sub
cwde
mov
pushf
cmp
ret
lock
daa
aad
sti
std
rol
push
fdiv
rol
pop
cli
xchg
jmp
jge
push
dec
jne
jbe
in
mov
scas
daa
sub
sub
jnp
aam
ins
and
es
push
(bad)
fmul
or
dec
and
das
push
jbe
or
cmp
loope
inc
cld
inc
nop
cmc
dec
popa
jo
mov
fist
mov
mov
cmps
out
addr16
cmp
call
mov
loopne
fidiv
mov
(bad)
adc
jl
xchg
retf
push
inc
add
mov
lods
out
leave
mov
fs
hlt
outs
sbb
int
das
xor
or
call
or
add
jbe
jnp
xchg
sti
call
fstp
in
pushf
hlt
rcr
out
jbe
in
dec
pop
dec
inc
sbb
stc
adc
rol
sbb
jns
icebp
push
pop
sbb
int3
inc
jmp
cld
jo
mov
popa
add
mov
lods
jnp
mov
addr16
xor
mov
jle
push
mov
cmp
cmp
imul
and
xlat
nop
cmp
dec
push
mov
nop
fld
or
push
ja
shr
popa
lock
(bad)
fnstcw
test
xor
xchg
xor
inc
jle
inc
or
in
fiadd
inc
cmps
push
mov
xchg
mov
mov
mov
adc
in
mov
mov
sub
pop
sahf
aad
arpl
xchg
xor
xor
dec
xchg
jnp
cwde
xor
scas
push
loope
xchg
mov
clc
or
push
adc
call
xor
jbe
jecxz
xchg
push
sar
mov
cmp
adc
xchg
sub
add
sbb
lods
into
(bad)
xchg
fist
cli
inc
xchg
push
inc
cs
outs
dec
fisubr
clc
cmp
hlt
cmp
mov
xchg
mov
dec
push
sbb
dec
mov
lock
loopne
pmaxub
retf
mov
xchg
sar
mov
jge
dec
push
mov
arpl
mov
push
mov
adc
shr
dec
stos
jmp
test
or
inc
popa
(bad)
outs
xchg
pushf
sub
mov
jno
push
fistp
add
add
fs
pop
dec
sar
jne
sbb
(bad)
dec
mov
mov
add
pop
leave
cmps
xor
or
lock
fist
push
lods
push
add
popa
fldenv
pop
cmp
clc
outs
add
imul
mov
dec
stc
or
jnp
fiadd
out
test
lock
pop
fs
adc
push
es
lds
add
aaa
cmp
das
lahf
pop
dec
adc
sub
ret
xor
xor
popa
inc
mov
push
add
jne
sahf
daa
mov
das
pop
pop
inc
dec
jl
cld
enter
jl
dec
xor
mov
inc
sub
dec
fcom
imul
pop
les
cmp
ss
pop
push
outs
aad
mov
fmul
adc
loope
xor
into
jns
fcomi
cmp
push
out
hlt
xor
clc
xlat
pop
rcr
lods
addr16
(bad)
aaa
out
xchg
sub
inc
add
mov
pop
test
mov
jmp
aad
lds
pop
dec
cmp
dec
stc
ins
or
xchg
repz
push
mov
mov
inc
jb
push
ins
jnp
das
fimul
hlt
add
mov
ss
cmp
loope
add
sub
jge
push
sub
dec
sub
xor
xchg
xor
or
jo
add
push
fld
mov
cs
fs
xchg
je
jne
cmps
ret
jg
iret
xchg
mov
xor
xchg
leave
movs
jge
cmp
ret
stos
fbstp
gs
int3
inc
aaa
gs
mov
sbb
stos
adc
stos
(bad)
popa
fs
loopne
jae
not
jnp
mov
jnp
mov
mov
and
test
dec
addr16
cdq
push
or
inc
in
clc
or
add
iret
icebp
shl
repnz
pop
pop
shl
lods
mov
xor
dec
mov
inc
cs
loopne
jg
nop
push
inc
lea
xchg
arpl
js
das
out
inc
fcom
pop
mov
gs
inc
sar
dec
cli
sub
jle
push
imul
sbb
cmc
cli
sub
add
sar
out
xor
inc
xor
popa
add
ret
pop
(bad)
ss
jmp
movs
cmp
cdq
test
scas
add
cmps
in
cmp
push
pop
das
mov
dec
arpl
shl
arpl
pop
or
jge
pusha
cmp
ret
pop
push
xor
mov
(bad)
and
fs
enter
push
test
out
stos
ins
add
jnp
and
ret
mov
dec
repnz
cmp
mov
js
std
pusha
fdiv
add
cmp
mov
aad
pushf
mov
and
loop
cwde
cwde
arpl
f2xm1
test
and
jge
in
xchg
sub
jecxz
popf
pop
pop
test
mov
test
mov
cmp
mov
into
shl
fadd
mov
pop
imul
mov
nop
addr16
jmp
jmp
mov
jae
mov
ret
div
and
cwde
scas
and
pusha
retf
scas
mov
je
frstor
push
jp
aas
cmp
or
cmp
pop
add
int3
lahf
push
mov
mov
sub
jno
sbb
mov
loop
movs
cmc
and
and
fnstcw
cmp
dec
inc
dec
xchg
aas
or
out
push
add
mov
xchg
and
xlat
jl
cmp
dec
mov
test
and
pop
lods
jnp
leave
shl
arpl
fcmovb
sub
and
xor
jno
xchg
lods
loope
icebp
div
pop
or
pop
mov
stos
inc
add
jnp
add
pop
enter
mov
and
pop
cdq
jl
sbb
mov
mov
out
mov
js
fcom
jmp
scas
ds
push
fist
(bad)
pmulhuw
pusha
lods
cmp
fsub
sti
test
sub
adc
or
dec
stos
ret
jns
mov
loopne
mov
iret
lea
pop
push
mov
hlt
or
xor
pusha
push
mov
cli
aad
pop
rol
and
xor
jge
(bad)
dec
mov
dec
dec
leave
(bad)
pop
test
sbb
and
rcl
mov
cmps
xor
ins
sti
jmp
push
adc
fs
and
(bad)
pop
lea
nop
sbb
adc
mov
nop
aas
enter
push
push
fiadd
push
adc
ds
aas
(bad)
sub
dec
ret
ret
push
jg
add
cmp
cwde
mov
imul
fidivr
fst
bound
mov
fnstcw
sti
adc
(bad)
std
xor
pslld
ret
pop
(bad)
or
fistp
mov
push
test
ret
cmp
mov
xchg
mov
push
cwde
retf
mov
mov
adc
das
pop
mov
imul
addps
stos
xchg
cmp
push
fldenv
sub
push
jg
or
cmp
xor
adc
lahf
cld
add
mov
pop
mov
mov
and
(bad)
enter
mov
push
js
mov
inc
shr
popa
nop
jmp
neg
or
jae
lds
inc
ss
fist
cmp
movs
push
add
(bad)
fadd
iret
mov
movs
loope
fidivr
jecxz
mov
dec
push
xchg
das
sub
rcl
pop
lods
inc
js
(bad)
pop
outs
or
leave
pusha
test
xchg
(bad)
leave
movs
fldcw
sahf
cli
ins
jb
jb
push
arpl
ret
pop
into
mov
jge
mov
inc
stos
pop
sub
xchg
mov
ins
leave
xchg
lahf
sub
xor
sub
mov
add
addr16
cmp
test
stos
jp
in
retf
pop
xchg
push
sbb
cmp
ss
sahf
or
adc
inc
aad
pop
mov
inc
test
jne
inc
and
or
jmp
(bad)
sar
push
mov
addr16
jb
stos
and
js
frstor
ins
mov
in
ins
or
aas
adc
dec
aad
push
mov
arpl
and
pushf
dec
and
ds
xor
inc
push
inc
enter
inc
in
movs
std
jbe
adc
jl
sub
test
sub
test
daa
int3
pusha
add
movs
cmc
rcr
pop
mov
int
sbb
(bad)
dec
(bad)
(bad)
loopne
mov
cli
xchg
sbb
pop
xor
and
ficom
dec
cwde
sub
mov
lea
sbb
xor
(bad)
mov
cs
ss
or
cmp
pop
imul
adc
sbb
push
mov
and
jmp
jp
inc
inc
stc
clc
pop
das
inc
aam
mov
movs
scas
inc
or
jnp
mov
mov
add
shr
fwait
imul
int
mov
das
fs
inc
popa
imul
pop
cmp
popa
leave
mov
fisubr
adc
sbb
push
mov
push
addr16
inc
jl
push
xor
data16
lock
ret
cmp
out
xchg
test
cdq
xlat
jne
ss
js
sbb
mov
(bad)
cdq
popa
and
cmp
jne
repnz
xor
adc
sbb
sbb
or
jmp
cs
scas
cmps
sbb
icebp
and
cs
jno
jne
xchg
mov
hlt
jnp
jb
sub
out
push
add
(bad)
sub
cmps
or
mov
jge
in
adc
pushf
and
mov
add
cmp
jle
movs
add
sti
dec
mov
stos
es
jnp
shl
dec
repnz
mov
or
dec
test
cmp
dec
dec
out
dec
gs
mov
pop
inc
xor
dec
inc
sbb
addr16
jne
ins
and
std
shr
retf
test
repz
fnstenv
cs
lahf
mov
xor
dec
add
pop
(bad)
ds
xor
arpl
mov
fcom
fsub
repnz
and
cwde
nop
sbb
inc
adc
jne
sbb
lods
les
(bad)
jo
sub
push
call
push
pop
dec
mov
pop
jb
retf
neg
iret
ret
clc
fwait
pop
jns
xchg
stc
inc
xchg
not
aad
das
add
pop
mov
mov
in
sub
and
push
shl
and
sahf
jg
ret
hlt
out
dec
(bad)
nop
ja
vpavgw
add
mov
loop
out
push
int3
lahf
or
enter
cmp
push
nop
mov
cmp
sbb
mov
out
cdq
stos
lea
mul
inc
cmp
aas
icebp
sub
xchg
and
stc
pop
mov
ja
aas
rol
fst
jno
inc
mov
out
lock
pop
cdq
ins
fstp
jecxz
or
inc
retf
mov
(bad)
push
jmp
sub
sbb
push
sbb
push
mov
jbe
pop
je
imul
out
and
out
mov
pop
pop
(bad)
push
or
lods
add
fwait
in
dec
adc
shl
pop
jmp
push
mov
outs
pop
movs
mov
cmp
call
popa
cdq
arpl
outs
rol
test
xchg
popa
aas
xchg
retf
inc
inc
in
cmps
lock
gs
pop
bound
rol
and
add
push
adc
test
pop
fs
hlt
dec
pop
retf
dec
into
ret
fsub
fsubr
out
in
arpl
sub
ror
add
inc
cmp
or
add
les
jg
xchg
inc
lock
fistp
movs
mov
push
xchg
or
(bad)
fdiv
cmp
jp
mov
xchg
cmps
hlt
sub
xlat
ror
mov
and
pop
cmp
clc
and
imul
scas
mov
lock
mov
call
test
retf
cmp
inc
call
inc
sub
out
lods
outs
lds
pop
pop
call
push
jns
push
mov
adc
ja
push
ds
imul
imul
sbb
jnp
jbe
sbb
xchg
mov
or
imul
push
iret
mov
fs
or
cmp
mov
pop
pusha
mov
out
jmp
loope
adc
xchg
or
(bad)
ror
enter
retf
rcl
ss
in
add
jmp
ret
(bad)
imul
sub
jbe
popf
jbe
add
sar
sbb
fild
jmp
xlat
mov
adc
repnz
rcl
sahf
mov
mov
lods
outs
js
lods
iret
ret
mov
mov
and
pop
ret
push
jmp
gs
xchg
sbb
fst
mov
xchg
ins
pop
push
test
mov
aad
cli
push
mov
add
sub
adc
sahf
and
xor
enter
inc
mov
push
out
mov
sub
arpl
dec
dec
inc
mov
ffreep
jl
add
ffreep
jge
aad
lods
or
and
xchg
adc
jge
jo
xchg
jbe
enter
cmc
inc
ret
jb
test
loopne
and
out
and
das
push
or
cmp
pusha
fdiv
iret
ficom
dec
or
fst
xchg
aad
sub
dec
enter
mov
adc
leave
fisub
ror
icebp
mov
pusha
sar
xchg
icebp
dec
or
in
jns
pop
jecxz
aad
dec
fwait
inc
pusha
push
sub
sbb
add
(bad)
or
or
inc
add
xor
mov
push
cdq
mov
cmps
push
cld
sti
mov
call
dec
sbb
dec
sub
fsub
or
popf
icebp
mov
aam
cli
sub
arpl
xchg
frstor
stos
icebp
into
in
mov
das
sbb
xchg
dec
mov
ins
cmc
(bad)
mov
leave
mov
retf
mov
fld
dec
xor
ret
fyl2x
fiadd
loope
add
popf
sub
mov
rcl
and
scas
fidivr
sti
or
rol
cdq
sub
mov
loopne
add
xchg
sbb
ds
mov
iret
das
mov
not
(bad)
push
imul
mov
stc
daa
pop
add
xor
mov
test
jb
add
pop
mov
dec
arpl
xchg
test
cld
sti
and
rcr
(bad)
mov
push
pushf
adc
sub
out
xchg
ds
cmp
scas
cs
out
and
xor
xlat
mov
loope
fmul
outs
cwde
jg
sub
cmp
lock
pushf
add
jnp
mov
xor
ficomp
in
pop
out
jle
sbb
jb
add
frstor
fwait
fwait
(bad)
pop
sub
cwde
test
add
add
ins
aaa
sub
and
cwde
lea
mov
inc
inc
push
mov
jno
fimul
add
adc
fwait
sbb
lds
or
shr
repnz
mov
adc
jae
(bad)
popaw
ds
mov
cmps
mov
mov
(bad)
xchg
sub
movs
sub
int3
retf
retf
movs
xchg
ins
dec
pop
mov
xor
dec
adc
and
mov
adc
xchg
pop
or
call
pop
jle
dec
enter
dec
test
xchg
or
inc
sbb
fwait
inc
enter
jae
(bad)
ror
(bad)
sbb
sbb
call
push
lea
push
mov
inc
cmp
and
push
outs
aaa
mov
jg
call
jb
xchg
add
dec
aam
dec
sub
lods
dec
sub
out
mov
inc
ins
pop
mov
pop
cmp
cmp
pop
sub
cdq
cmc
in
fld
outs
xchg
sub
aaa
mov
inc
cdq
cmps
(bad)
dec
mov
jmp
(bad)
mov
lahf
cs
mov
arpl
jle
(bad)
jns
push
scas
push
push
(bad)
shl
addr16
xchg
xchg
loopne
arpl
fcomp
mov
cwde
mov
push
(bad)
fistp
fimul
adc
and
sti
js
cmp
jp
addr16
xchg
add
push
outs
push
cmp
cli
and
in
out
dec
push
sar
or
mov
popf
enter
dec
(bad)
sbb
fyl2xp1
jmp
xor
or
int3
cmc
out
pop
popf
imul
adc
or
ret
or
mov
cmp
addr16
mov
jecxz
mov
jge
pop
xchg
retf
pop
xor
mov
aas
add
sbb
push
je
and
xor
clc
dec
xor
mov
pop
cld
cmp
cli
mov
test
lahf
(bad)
cwde
dec
add
ds
sbb
or
leave
movs
lahf
push
fisubr
ret
push
cmps
mov
js
movs
stos
(bad)
jno
push
mov
jo
(bad)
neg
cmp
cmp
xor
inc
outs
xor
cmp
mov
out
cdq
ss
cli
cmp
retf
and
add
test
add
nop
cmp
cld
ins
dec
sahf
enter
sbb
inc
out
xchg
pop
stos
dec
test
mov
jecxz
push
ret
inc
popf
loop
adc
and
js
test
cmps
out
cmc
mov
sbb
cs
outs
mov
gs
add
mov
xor
push
xchg
lock
xor
(bad)
std
mov
push
jp
cmc
inc
mov
sahf
pop
xchg
sbb
inc
add
outs
iret
int3
sbb
aam
push
dec
xor
lods
xchg
xor
jno
push
push
pop
cmps
movs
data16
jge
dec
sbb
add
ficomp
fcmovnb
(bad)
mov
repnz
mov
aam
inc
inc
jge
les
add
jne
push
and
mov
les
jb
sub
fild
sbb
cmc
mov
inc
ret
sahf
jo
sbb
jne
mov
sbb
or
mov
push
loope
fsubrp
rol
movs
cmp
sti
jmp
loopne
leave
iret
mov
fcomp
dec
pop
bound
imul
pop
adc
in
inc
outs
ss
cs
shl
inc
pop
add
add
js
push
test
inc
xchg
gs
into
outs
fwait
repz
aas
xchg
add
pop
or
(bad)
pop
adc
das
mov
aaa
addr16
dec
test
ret
sub
or
jg
frstpm(287
out
retf
mov
adc
inc
les
adc
mov
push
xchg
aad
mov
adc
jae
shl
sub
fcmovnb
loop
jb
xor
pop
lods
movs
pop
stc
jg
cmps
dec
sbb
push
and
inc
xchg
(bad)
or
mov
ja
xor
mov
in
nop
jg
icebp
xchg
mov
cmp
xchg
mov
leave
push
idiv
in
pop
pusha
add
jno
das
sub
inc
pusha
or
push
lea
and
xlat
in
ds
jl
pop
inc
jmp
mov
(bad)
adc
mov
and
aam
jb
ret
sub
in
movs
push
cmp
pusha
stc
lock
ror
add
mov
or
cmp
int
std
push
sbb
ror
mov
ret
(bad)
mov
pop
je
out
jle
inc
or
ds
(bad)
pop
cmc
test
mov
shl
repz
jns
push
fistp
not
or
cmp
mov
scas
xor
mov
(bad)
fxch
popa
cld
mov
not
mov
xchg
fistp
retf
dec
lahf
cmp
sub
xchg
pop
pop
dec
jmp
fst
sub
fnsave
jae
icebp
xor
das
xor
jmp
lds
xor
cmc
call
pop
mov
lahf
mov
inc
sub
fsubr
scas
pop
div
fcomp
inc
jg
sbb
inc
das
mov
mov
mov
ret
daa
ins
ds
mov
ins
jmp
icebp
dec
pop
cli
popa
pop
cmps
add
xor
ss
or
push
and
and
cmp
xchg
mov
pop
not
pop
popf
sub
dec
or
inc
and
pop
push
pop
ss
push
ins
lea
lds
out
popf
jl
in
ret
dec
pushf
xchg
add
mov
jmp
dec
fsubr
or
sbb
js
fst
pop
jo
mov
mov
sahf
or
dec
popa
add
adc
cmp
mov
cmp
push
scas
and
std
ret
adc
mov
movs
stos
add
mov
cli
inc
and
xor
stos
sti
stos
outs
ja
iret
mov
cmp
enter
add
stc
fmul
xor
push
adc
mov
icebp
inc
fidiv
inc
or
aas
sti
pop
cwde
loopne
mov
retf
xchg
cmp
mov
mov
jne
mov
dec
cmc
jmp
mov
mov
jo
jae
pop
sbb
out
stc
mov
hlt
adc
xrelease
(bad)
jg
jge
retf
leave
in
cs
xor
jb
mov
daa
stos
push
push
sahf
sub
fnstenv
push
push
imul
mov
add
mov
fdiv
lds
cmp
jg
dec
cmc
repz
in
jb
movs
xchg
xchg
pop
xor
and
or
cmp
cmp
pop
cmp
clc
jg
push
fs
addr16
cmp
cmp
call
pushf
xchg
repnz
cld
pushf
dec
mov
add
mov
push
sbb
in
adc
ins
aas
ficom
adc
call
cdq
in
out
jp
inc
jmp
daa
cmc
(bad)
cmp
xchg
scas
in
jmp
lea
fild
out
mov
ret
cmp
mov
xchg
cmp
in
shl
lahf
daa
cmc
iret
jle
inc
mov
movs
add
es
outs
and
ja
push
nop
nop
leave
dec
ds
scas
jb
pop
cmps
add
sbb
push
mov
sbb
fadd
aas
daa
and
dec
into
or
pop
mov
dec
xor
mov
scas
dec
xchg
mov
jge
outs
les
cmp
xchg
cmps
pop
out
pushf
mov
pop
inc
adc
scas
es
pop
adc
xchg
pop
or
push
(bad)
retf
and
pop
daa
leave
popf
into
out
cs
(bad)
ins
sub
fsub
nop
sar
cmp
cmp
and
pop
jmp
jle
test
xchg
cmps
or
dec
sub
std
repz
aas
stos
add
add
xor
test
sar
(bad)
(bad)
loope
or
xor
jb
and
daa
outs
call
cwde
loopne
fsubr
aaa
inc
in
out
dec
sti
out
lods
push
aaa
pop
push
cmp
jl
inc
mul
fadd
jecxz
sbb
jp
add
push
ret
fwait
imul
scas
retf
sub
fld
add
rol
cmp
jbe
push
pop
mov
loopne
mov
jecxz
(bad)
sti
pop
sbb
jmp
xchg
jge
mov
inc
sti
mov
sbb
ds
mov
std
push
arpl
mov
das
dec
(bad)
mov
popaw
fsubp
mov
mov
or
fwait
(bad)
in
div
imul
jno
cmp
sub
fmul
out
test
inc
loop
mov
test
cmp
adc
mov
and
jbe
xlat
pop
loopne
je
add
cmp
mov
xlat
and
push
jne
xor
inc
add
out
xor
jmp
in
cmp
ja
xchg
inc
outs
jnp
jno
cmps
mov
mov
ds
bound
cwde
mov
lods
cmps
sub
stc
pop
push
lahf
pusha
add
into
(bad)
xor
movs
pusha
rcr
daa
fisub
inc
inc
inc
adc
and
out
dec
in
xchg
cmp
shr
clc
jge
pushf
fs
iret
aad
data16
nop
call
neg
into
fild
xchg
and
mov
in
mov
loop
sbb
fwait
into
mov
dec
jmp
repz
adc
mov
sub
mov
push
mov
pop
loope
leave
adc
push
ja
xor
xchg
or
mov
int3
adc
dec
xchg
or
ja
jbe
pop
cmp
and
fidiv
dec
test
dec
iret
mov
int3
icebp
lahf
rcl
xchg
jae
test
sub
cmc
(bad)
xchg
and
and
or
(bad)
stos
lahf
mov
mov
test
jp
call
mov
sub
cmp
adc
mov
sbb
aas
inc
repz
mov
pop
lea
div
outs
hlt
mov
push
add
nop
nop
xlat
push
(bad)
data16
loopne
fwait
scas
repnz
cld
popa
push
mov
cmp
mov
pop
stos
fld
mov
aaa
ficomp
jbe
xlat
xor
into
ret
cmps
sbb
adc
cmc
jle
adc
dec
dec
in
inc
and
je
jle
adc
jmp
add
outs
arpl
push
add
lock
enter
test
lea
(bad)
jb
jae
les
arpl
jno
pusha
imul
xchg
invd
xchg
cmp
add
pop
fwait
xor
pop
sub
repz
add
mov
xor
inc
cmp
mov
daa
das
push
cmp
sti
dec
int3
in
(bad)
stc
push
imul
pop
inc
inc
rcl
add
mov
xlat
loopne
xchg
sub
mov
adc
jge
gs
xor
out
ja
add
test
sbb
lahf
add
in
adc
pop
cmp
stc
push
push
test
cmc
scas
xlat
lods
lahf
int3
test
lods
cmp
cmp
addr16
xchg
retf
bound
sub
sbb
fisub
(bad)
fs
popf
cmps
mov
add
fucom
lods
outs
cmp
mov
retf
retf
mov
and
gs
push
punpcklwd
fcom
mov
adc
dec
sbb
int
test
dec
call
jne
(bad)
movs
xchg
xor
movs
or
push
imul
arpl
and
icebp
sub
add
stos
dec
or
call
adc
fcom
daa
out
out
sbb
dec
hlt
xor
jmp
movs
shr
rol
jl
push
cdq
xor
lahf
daa
call
jg
jle
mov
and
mov
inc
inc
and
fisttp
lahf
(bad)
pop
adc
add
ins
cmove
dec
int
pop
pop
shl
pop
lods
jl
js
cmps
in
ins
std
in
ja
cld
movs
aad
out
dec
or
stc
sub
xlat
movs
mov
push
pushf
mov
xor
(bad)
pushw
mov
push
pop
setb
test
inc
and
pop
adc
nop
sbb
sub
mov
jne
push
or
xchg
or
jle
nop
and
jecxz
mov
scas
daa
sbb
jmp
sub
xchg
jmp
add
add
dec
pop
int3
push
shr
xor
lock
push
sub
ja
dec
retf
popf
cdq
jb
cs
mov
in
jne
sub
cmps
ja
cmc
jecxz
movs
retf
hlt
repnz
and
cmp
lock
mov
repz
sbb
add
sahf
in
push
fmul
bound
mov
nop
div
mov
adc
or
pop
loop
ds
sub
jmp
ds
pushf
adc
jp
jmp
loop
repz
loope
call
lds
add
lea
pop
inc
std
pop
adc
(bad)
fs
gs
cmp
xchg
pop
das
loopne
xchg
(bad)
push
es
aam
push
inc
inc
xor
(bad)
sti
repz
pop
push
mov
lods
add
(bad)
arpl
pop
adc
adc
ror
neg
push
adc
pop
push
push
shr
out
aaa
jp
fdiv
dec
(bad)
adc
sub
fidivr
or
mov
imul
jae
in
sbb
mov
sub
pop
fadd
dec
add
fisttp
outs
mov
das
fsubr
je
add
fbld
cli
and
iret
jge
mov
sbb
(bad)
int3
or
adc
mov
fsubr
add
xor
rcr
clc
cdq
(bad)
jl
jae
xor
push
mov
rcl
xor
sub
(bad)
in
or
loop
jnp
jmp
int3
aas
fiadd
inc
movs
adc
cdq
imul
js
sub
jns
out
mov
pop
push
ss
mov
cld
cli
pusha
mov
pop
aam
add
and
pop
and
iret
lock
mov
push
outs
aam
ins
mov
loop
mov
sbb
inc
hlt
xchg
pop
mov
mov
xchg
fst
out
mov
xchg
add
mov
inc
fsub
xchg
(bad)
push
mov
adc
in
mov
inc
sbb
add
fnstenv
inc
aam
(bad)
or
or
icebp
or
and
mov
fnstsw
pusha
pusha
inc
push
sti
je
mov
(bad)
mov
jbe
aas
push
data16
cmp
dec
test
dec
cmp
test
stos
and
shl
ret
jns
out
cdq
loopne
sub
out
cli
or
cmp
dec
retf
test
xchg
add
jmp
inc
rol
int3
jnp
scas
jmp
or
add
pop
mov
fild
scas
jno
js
in
push
dec
xchg
push
jg
pop
enter
sbb
add
retf
call
push
adc
(bad)
pop
push
ret
dec
and
xor
call
lods
enter
stos
test
and
(bad)
pslld
adc
ret
scas
popf
inc
dec
rol
push
jp
cmp
mov
inc
inc
pop
cld
dec
in
fcomp
ret
jno
push
push
jbe
idiv
test
jo
ins
rol
inc
sub
out
mov
pop
leave
push
inc
inc
or
call
xor
sub
fisubr
sar
leave
ret
inc
bound
inc
test
sbb
push
inc
pop
stc
outs
adc
call
mov
in
cmp
xchg
pop
fist
xchg
ins
sbb
push
sbb
rcl
inc
cld
add
inc
xchg
mov
ret
or
xchg
xchg
retf
xlat
xchg
sahf
imul
movs
out
add
adc
xchg
ds
sbb
dec
repz
ja
rol
jmp
je
and
sub
jo
sub
(bad)
fdivr
dec
mov
add
dec
pop
fst
repz
mov
sub
outs
pop
repz
test
and
in
into
sahf
loopne
xor
stos
push
pop
ins
cli
jl
inc
sbb
or
mov
xchg
rcr
or
in
div
push
popf
outs
pusha
and
mov
call
lea
xor
sbb
out
mov
pop
cmp
pop
mov
fucomi
xchg
push
imul
movs
or
ffreep
test
pop
stos
setne
(bad)
pushf
cwde
sub
mov
test
leave
cmp
xlat
call
mov
test
adc
mov
jmp
shl
dec
mov
inc
pop
lods
or
pop
adc
lods
imul
jne
xchg
adc
fwait
hlt
ss
add
hlt
ss
pop
aam
ss
fisubr
push
push
mov
pop
ret
js
cmp
and
data16
stos
xor
adc
sub
ins
adc
adc
enter
mov
ror
addr16
adc
dec
sub
pop
dec
mov
push
and
push
jecxz
sti
xchg
inc
push
mov
sbb
push
fstp
lahf
int3
adc
xchg
pushf
xchg
shr
cmps
inc
push
mov
sub
loope
pop
jae
(bad)
xchg
push
out
push
out
and
or
inc
push
dec
jle
mov
add
imul
sub
cwde
imul
scas
adc
inc
(bad)
pop
jmp
int
jge
sbb
lds
xlat
pop
and
outs
cmps
ficomp
push
sbb
adc
add
aam
adc
jnp
fcom
or
nop
daa
push
imul
and
imul
jg
inc
sbb
or
or
aaa
jnp
mov
jl
(bad)
sub
dec
bound
cmps
movs
cmc
scas
adc
fisubr
ficom
add
push
jl
sbb
(bad)
fdivr
or
mov
cli
imul
std
and
xchg
sbb
jae
dec
mov
adc
ins
and
xor
or
jp
jge
push
add
bound
stc
scas
in
sbb
adc
std
test
and
aam
dec
jne
dec
sbb
push
and
int
dec
add
cmp
cs
lods
mov
sbb
push
or
sar
dec
and
add
popf
jo
mov
arpl
mov
xor
pop
mov
repz
hlt
movs
or
pop
aad
push
jle
in
xor
cmp
push
inc
pop
loope
and
shl
ror
cdq
or
sub
dec
aad
test
xchg
es
std
inc
cmp
xchg
mov
pop
jno
call
xor
cdq
fwait
out
pop
stos
lahf
mov
rcl
gs
jle
int3
jmp
(bad)
adc
inc
xlat
pop
push
inc
popf
sub
add
repz
mov
sbb
and
pop
jmp
imul
mov
scas
xchg
mov
inc
inc
sub
aas
pop
in
es
pushf
cmp
(bad)
mov
mov
jmp
mov
gs
xor
xchg
xchg
(bad)
aam
dec
cmp
shl
cwde
nop
push
popf
xchg
in
ins
add
lds
push
inc
pop
test
xor
stos
adc
sbb
cmp
sub
xor
cmp
cmc
jo
stos
adc
fcom
and
cmp
(bad)
in
jecxz
test
stc
ror
fdivr
mov
jae
sub
cmp
test
xor
inc
pusha
fiadd
loop
jne
jl
mov
cmc
push
rol
scas
data16
stos
lods
mov
cmp
push
fsubr
dec
mov
jno
mov
imul
dec
or
(bad)
pop
sbb
inc
dec
xchg
add
fwait
mov
cmp
mov
mov
or
cwde
clc
xlat
retf
(bad)
loope
in
cwde
add
cmp
pop
and
xchg
jecxz
and
pusha
sub
inc
ret
mov
add
mov
stos
adc
mov
mov
mov
sub
pop
mov
popa
xor
rcr
and
or
mov
and
mov
call
shl
mov
loop
out
adc
cs
int3
cmp
out
arpl
dec
(bad)
mov
inc
fstp
inc
mov
sbb
jbe
stos
int
jp
and
cmp
test
gs
imul
xor
xchg
push
mov
imul
nop
sub
jge
lods
push
retf
mul
data16
jbe
iret
mov
fsubr
xchg
lods
retf
lods
xchg
prefetch
mov
sub
mov
pop
or
dec
sbb
xor
or
out
data16
pusha
mov
or
je
push
xor
pushfw
xor
adc
jle
arpl
mov
sub
push
mov
arpl
das
lods
push
sub
sub
adc
inc
mov
push
jnp
mov
cvtps2pd
dec
dec
int3
call
or
dec
pop
mov
mov
add
mov
jbe
push
cli
pop
cmp
adc
retf
jbe
jo
inc
add
popa
add
and
jo
rcr
pop
mov
dec
xchg
mov
cld
iret
sbb
ret
pop
xor
and
ja
jecxz
scas
loope
or
loopne
ins
call
test
ins
ja
imul
pop
adc
fs
arpl
mov
jp
popa
ins
adc
sub
add
fisttp
int3
add
pop
aad
dec
jle
das
jmp
aad
out
pop
xor
repz
test
iret
push
into
sbb
mov
pop
pop
jecxz
and
aas
ror
push
pop
test
lods
icebp
in
dec
or
xchg
adc
out
inc
imul
(bad)
push
popa
shr
cmp
pusha
stos
test
gs
xor
ret
icebp
es
and
(bad)
cmp
adc
pop
push
xor
arpl
xchg
not
leave
push
sbb
mov
jge
ss
clc
mov
fadd
test
outs
mov
push
adc
dec
sbb
adc
aam
popf
pop
rol
xchg
fs
mov
rcr
inc
dec
mov
outs
outs
jne
fcomp
fstp
out
mov
push
mov
mov
test
repnz
jge
fst
fcmovnbe
mov
nop
out
sub
nop
pop
stos
mov
test
sub
retf
inc
pusha
cmps
push
pop
or
add
sbb
cmp
jle
imul
jl
and
sti
inc
cdq
mov
add
jns
cdq
adc
xor
cmp
jge
clc
sbb
push
jno
(bad)
aaa
icebp
pop
clc
jnp
hlt
mov
rol
and
and
mov
pop
pop
cmp
addr16
popf
dec
sbb
stos
daa
sbb
inc
fild
aam
xor
mov
iret
cld
push
dec
icebp
shl
test
in
mov
or
sub
push
stos
daa
or
fsubr
pop
iret
cdq
adc
or
mov
(bad)
cld
cmps
cmp
lahf
inc
mov
cdq
inc
sbb
(bad)
xor
xchg
push
xchg
push
ror
js
call
jge
shl
mov
xor
xor
les
or
sbb
jae
xor
xor
cmp
xor
xchg
push
jns
sub
mov
jecxz
fld
xchg
xor
in
jae
dec
xor
jg
and
and
data16
jns
ret
adc
dec
sub
out
fstp
jbe
out
jb
sub
(bad)
fbld
sub
xchg
mov
dec
aam
jae
std
xor
push
shl
sar
cmp
inc
movs
push
jns
push
jp
je
in
cs
rcr
mov
(bad)
dec
repz
pop
ss
xlat
bnd
or
inc
or
dec
fdivr
ja
sar
nop
lahf
xor
mov
sbb
push
cdq
add
leave
(bad)
fisub
imul
cmp
and
push
fdiv
mov
cmp
jb
sbb
dec
ss
cmp
gs
pop
iret
xchg
adc
push
or
jne
mov
dec
adc
xor
(bad)
iret
je
push
or
adc
xchg
shl
ins
test
fyl2xp1
cmp
jecxz
retf
stc
adc
fisubr
mov
jecxz
mov
mov
dec
jne
inc
jns
test
lods
loopne
fdivr
or
push
pop
mov
adc
xor
or
mov
or
cmp
repnz
sub
push
in
lock
inc
inc
repnz
popa
shr
xor
pop
cli
dec
test
or
inc
cwde
xor
adc
inc
push
iret
and
inc
xchg
adc
jle
call
xlat
ret
sbb
jne
jmp
pextrw
mov
call
or
js
sbb
mov
sar
leave
test
xlat
inc
adc
adc
loopne
mov
dec
gs
inc
int3
scas
bound
stos
and
repz
pop
pop
test
xor
adc
jmp
in
or
inc
test
mov
cmps
mov
xchg
ins
(bad)
mov
and
mov
cld
or
jge
out
cwde
stos
mov
sar
sbb
and
or
adc
out
xor
jmp
or
scas
loopne
jne
xchg
pop
dec
cmp
mov
or
aad
adc
xor
repz
(bad)
pop
js
cmps
push
and
sar
push
loope
lock
mov
sar
data16
mov
sbb
shl
sub
jmp
dec
mov
xor
fxam
nop
jl
sahf
inc
fnstenv
movs
ss
fistp
mov
nop
gs
pop
rol
dec
cmp
mov
mov
push
xor
pop
movs
inc
sub
cmc
data16
ins
adc
dec
dec
(bad)
sub
mov
je
(bad)
and
inc
cdq
xchg
in
add
xor
jp
sbb
sub
test
cmc
pop
pusha
in
in
aad
(bad)
(bad)
dec
inc
ins
pop
lods
push
pop
not
inc
or
inc
mov
fist
pop
js
dec
or
sar
out
into
or
bound
mov
cmp
or
popf
dec
pop
add
cli
push
mov
cmp
cli
and
dec
mov
(bad)
push
ror
je
dec
dec
fsubr
inc
(bad)
xor
or
aas
pop
and
xor
ret
es
mov
jp
push
or
shl
jne
cmp
out
xor
(bad)
mov
inc
int3
sub
xchg
cmp
fs
mov
jae
repz
sub
xchg
mov
push
xor
jmp
aam
lds
call
dec
push
inc
push
popa
and
sub
xchg
sub
imul
(bad)
cmps
call
sqrtps
mov
imul
xchg
imul
push
jmp
xchg
cmp
call
leave
ror
inc
adc
rcr
pop
call
bound
sub
shl
mov
cdq
mov
sub
les
call
pushf
dec
sbb
xor
push
mov
enter
mov
js
je
fbld
std
jo
mov
hlt
cmp
rsqrtps
jecxz
ja
xchg
add
sub
cmp
inc
call
cld
fadd
das
ds
xchg
xchg
inc
pop
xchg
shl
sbb
ret
ret
add
push
or
mov
mov
mov
push
jns
push
aas
int
xchg
lods
dec
std
mov
push
xor
mov
fnstenv
ins
cmps
das
(bad)
jl
iret
cmp
mov
repz
(bad)
hlt
cld
cmp
mov
test
inc
or
cdq
ss
xchg
mov
and
cwde
call
in
sbb
std
test
mov
mov
jcxz
cwde
shl
mov
xor
pop
push
sbb
adc
lds
pop
jo
retf
mov
fwait
xor
mov
mov
data16
and
dec
cmp
jnp
sbb
clc
rol
test
call
outs
push
mul
jg
nop
push
test
pushf
push
outs
gs
sbb
neg
jo
gs
sub
dec
lods
mov
addr16
inc
test
mov
push
lock
mov
adc
nop
sbb
pop
loopne
mov
fcom
ror
inc
xor
push
aam
shr
mov
(bad)
mov
rcl
retf
sub
and
fstp
xchg
ja
inc
xchg
push
std
jge
xchg
sbb
cmp
xchg
in
data16
mov
add
jecxz
ss
cmp
mov
int3
rcr
adc
mov
lea
sub
ins
inc
retf
xchg
cdq
inc
xchg
inc
imul
xor
xchg
push
ins
and
movs
xchg
pop
inc
xchg
pop
pop
lods
out
adc
lock
or
and
cli
sub
xchg
(bad)
jp
icebp
and
ja
inc
lds
cmp
sar
dec
and
jge
inc
pop
hlt
std
add
jne
inc
pop
retf
mov
inc
sub
aas
cmp
shl
(bad)
pushf
xor
aas
or
pop
popf
ss
aam
and
movs
dec
imul
ret
mov
jae
dec
in
sahf
shl
xchg
xchg
(bad)
rcl
retf
cmovp
popf
test
mov
arpl
add
std
dec
(bad)
jbe
push
call
ja
inc
push
(bad)
adc
inc
xor
loopne
or
arpl
ret
(bad)
push
popa
call
aad
ins
push
jge
inc
pop
fmul
mov
jnp
ret
adc
or
int
mov
aam
(bad)
stc
pop
lahf
pop
mov
(bad)
icebp
jb
out
dec
clc
mov
(bad)
rol
jmp
dec
outs
(bad)
push
frstor
cmps
jmp
jl
int
jae
fcomp
mov
imul
cvtps2pd
cwde
(bad)
lock
push
or
(bad)
idiv
and
add
idiv
xlat
sti
push
imul
test
pop
pop
fnstenv
dec
mov
pop
mov
ror
clc
cs
(bad)
or
clc
loop
push
and
mov
movs
icebp
movs
and
and
xor
adc
adc
xor
push
sub
pop
pop
inc
dec
call
fwait
cli
mov
mov
jnp
(bad)
fiadd
add
mov
in
outs
daa
mov
out
jg
cmp
pop
mov
adc
fwait
push
mov
and
xor
(bad)
fistp
(bad)
mov
cmp
sub
mov
fadd
mov
or
clc
adc
gs
xchg
jg
sub
leave
push
stos
enter
in
jne
add
mov
sbb
retf
(bad)
cmp
sbb
cmp
cwde
iret
(bad)
xor
cs
pushf
(bad)
or
scas
cmp
shl
mov
jnp
std
aas
pop
and
mov
dec
repz
call
js
hlt
jo
jg
ror
sub
cs
das
mov
mov
add
div
dec
add
add
lea
push
mov
dec
movs
inc
clc
ja
xor
jo
(bad)
jle
push
dec
sbb
push
repnz
sub
jge
or
not
mov
jp
out
fidivr
lock
test
pop
add
mov
or
arpl
xchg
js
scas
aas
inc
loopne
mov
(bad)
push
test
cld
push
dec
sub
push
push
and
jmp
fld
shr
xor
enter
test
mov
dec
add
jecxz
xor
and
sub
mov
mov
cmp
push
(bad)
inc
mov
and
scas
fadd
outs
gs
call
push
xchg
aaa
pop
movs
arpl
(bad)
les
stos
sahf
dec
inc
retf
mov
sub
out
std
and
mov
or
daa
jne
sub
sub
das
icebp
into
and
fld
in
xchg
fdivr
sub
dec
add
cmc
xchg
fsubp
ds
xchg
mov
bound
cmp
cmp
dec
pop
std
xchg
push
das
mov
sub
inc
jle
inc
inc
out
xor
dec
jl
das
push
jb
sub
idiv
lahf
and
(bad)
push
ja
pop
mov
cmp
sbb
jg
mov
and
test
iret
adc
push
call
movs
gs
push
push
shr
fiadd
aam
mov
jle
xor
cmp
mov
sbb
cmp
pop
out
rol
sbb
cmp
cld
outs
sub
in
mov
pop
sbb
xchg
xchg
outs
test
mov
cwde
or
iret
repnz
(bad)
bound
or
adc
adc
cdq
adc
sub
fbld
dec
sub
xlat
pop
aaa
aaa
fs
and
mov
jmp
jle
jae
test
rcl
sbb
aaa
mov
mov
ins
pop
lods
or
sbb
ds
cmps
sbb
dec
mov
mov
cli
adc
hlt
jns
push
push
addr16
mov
cdq
pop
pop
mov
and
js
fstp
ret
pop
adc
test
inc
outs
popf
fs
cli
pop
xchg
fcomi
mov
fldenv
call
outs
cwde
cld
out
daa
jno
lock
scas
add
mov
inc
xor
hlt
loope
mov
aas
inc
(bad)
out
inc
xlat
mov
cmps
mov
scas
jle
neg
adc
inc
jle
jecxz
inc
add
repnz
sbb
lock
retf
cmp
(bad)
retf
leave
lods
js
mov
js
pop
mov
rcl
dec
pop
lock
sbb
pop
push
and
loope
xchg
jbe
pop
lock
jo
shl
and
inc
push
mov
pop
or
(bad)
mov
call
mov
dec
push
int
dec
sar
mov
aam
aad
push
jae
int3
cmps
cmc
push
ins
into
mov
dec
cmps
in
fs
mov
cmc
mov
xchg
push
sbb
loop
push
jns
sbb
shr
xor
fstp
sbb
mov
(bad)
mov
sti
out
neg
iret
xor
lahf
shld
pop
popf
shl
xor
inc
inc
fwait
sub
fcmove
nop
leave
adc
and
(bad)
stos
mov
xchg
movq
(bad)
(bad)
cmp
test
sar
xchg
mov
mov
jle
xchg
sbb
out
adc
push
cmp
nop
push
mov
jae
sub
sbb
adc
mov
jmp
cli
(bad)
sub
mul
test
popa
push
nop
icebp
sbb
retf
pop
mov
sar
cmc
push
add
mov
dec
jbe
(bad)
repnz
inc
sub
fmul
daa
push
inc
jmp
je
je
test
(bad)
jmp
scas
outs
mov
das
(bad)
pop
(bad)
fwait
pop
stos
mov
ret
cmp
bound
push
pop
or
cmp
inc
pop
pop
fadd
adc
hlt
push
jmp
imul
jmp
lock
or
jno
add
div
mov
fptan
xchg
xchg
lock
mov
int3
je
jnp
push
outs
pop
adc
test
fisttp
sub
or
mov
xchg
into
inc
and
pop
inc
pop
scas
jno
xchg
mov
push
lahf
jb
adc
pop
jg
cdq
adc
push
jge
cdq
cvttps2pi
pop
leave
mov
scas
cmp
dec
and
imul
dec
test
and
clc
or
out
jmp
cli
ficomp
inc
inc
mov
retf
fstp
push
xor
test
fidivr
stos
call
rol
jnp
loopne
xor
fstp
or
push
jno
je
in
mov
pop
add
inc
in
mov
ret
shl
stos
pop
gs
fcmovnb
sbb
iret
int3
mov
ins
daa
push
pop
out
xchg
pusha
rol
pop
cmps
popf
fcomp
pop
cwde
ds
pop
cmc
rep
pop
jno
and
pop
sti
call
sub
or
retf
push
sar
mov
pop
leave
mov
adc
cdq
movs
and
mov
and
movs
mov
jb
or
scas
mov
mov
aas
pop
movs
outs
inc
add
and
sub
lahf
les
shl
or
inc
mov
lds
mov
push
into
and
neg
call
pop
dec
test
in
mov
mov
adc
js
dec
popa
push
iret
cdq
in
mov
mov
inc
lods
add
or
push
lock
mov
popa
ds
xlat
lds
cmp
mov
add
cmp
mov
popf
mov
inc
push
xchg
lods
in
bound
inc
sub
mov
push
xchg
jle
add
push
adc
add
inc
adc
repz
lods
fisub
scas
cmp
cdq
push
nop
stc
inc
inc
mov
in
dec
xchg
push
cmp
iret
dec
jno
out
inc
push
xchg
cld
xlat
cmp
jnp
outs
nop
cwde
ret
and
push
mov
jns
jmp
idiv
pop
mov
cmp
xchg
stos
mov
push
sti
ret
xlat
cdq
push
int3
fiadd
pusha
arpl
and
shr
sub
or
pop
mov
inc
fisubr
enter
xchg
movs
cmp
sbb
pushf
pop
or
inc
imul
pop
xlat
mov
jb
loope
jp
push
stc
push
scas
xor
mov
outs
jge
ret
jo
jo
sub
mul
lds
jne
ins
xor
pop
pop
pop
jae
sub
jne
call
bound
push
ins
(bad)
iret
jmp
xchg
cmc
shr
xchg
ja
mov
mov
cld
cmp
jnp
dec
(bad)
test
pop
sub
in
(bad)
stos
inc
xor
mov
jg
add
ds
sub
jle
sub
cmp
sub
stos
push
xor
mul
inc
jne
aam
or
ss
mov
in
shl
lods
outs
lds
out
ins
jb
mov
call
xchg
clc
fmul
and
cmp
cmp
gs
fild
adc
jns
add
and
or
das
cwde
mov
xchg
popa
jns
outs
div
les
push
and
daa
xchg
lea
leave
outs
and
jp
sbb
clc
sbb
sub
xchg
call
(bad)
and
dec
cwde
mov
push
mov
sbb
scas
std
sbb
mov
and
or
leave
pop
pop
imul
pushf
sti
ds
adc
imul
cmp
ins
fistp
push
int
and
stc
ret
or
retf
imul
fadd
mov
in
repz
pop
je
ret
test
loop
jecxz
bound
inc
loop
dec
fidiv
(bad)
ss
cmp
xchg
fwait
push
stc
xchg
retf
inc
(bad)
jecxz
inc
mov
mov
and
cmp
mov
stos
xchg
push
lea
and
jno
es
dec
mov
inc
or
leave
dec
or
lods
adc
and
lahf
icebp
loopne
add
push
popf
dec
call
push
jmp
(bad)
inc
jno
jb
into
bound
or
loope
xchg
add
in
mov
xchg
sub
xor
fidiv
xchg
dec
xor
shr
imul
cmp
sbb
fisttp
aas
out
(bad)
sub
cmp
(bad)
xchg
sub
pop
jae
inc
iret
mov
mov
pop
mov
in
xor
ret
or
imul
popa
enter
ins
dec
mov
(bad)
pop
sub
sub
adc
mov
fisub
outs
xchg
and
mov
fcom
dec
and
push
les
lahf
xor
adc
inc
es
fxch
xlat
jp
pop
lods
jae
lods
push
test
push
fiadd
or
fucomp
fadd
iret
push
and
popa
mov
mov
outs
retf
dec
lds
adc
aam
(bad)
jmp
shl
adc
add
test
dec
aaa
mov
cmp
call
pushf
xchg
pop
jmp
mov
sbb
dec
jae
mov
and
mov
push
shl
pushf
jp
(bad)
stc
pop
clc
push
jns
pushf
xor
lahf
lahf
movs
xchg
xchg
ror
leave
push
mov
mov
dec
add
out
int
mov
cld
or
and
cmp
cmps
(bad)
cdq
shl
sub
data16
mov
push
or
jne
cmp
pminub
cmp
retf
mul
and
jns
das
jg
js
cs
sbb
sub
dec
cmp
shl
jmp
jnp
mov
mov
jmp
icebp
mov
xor
(bad)
cld
daa
jne
call
mov
pop
and
not
mov
mov
fldcw
jle
and
pop
jle
dec
jne
iret
inc
pushf
sbb
jne
outs
loop
xor
jno
and
in
out
sbb
add
and
retf
or
shr
es
outs
and
retf
jo
push
into
pop
cmps
icebp
add
adc
fs
call
(bad)
xchg
out
and
fwait
xor
scas
push
retf
jp
cmp
test
push
(bad)
aam
jo
jmp
retf
aam
inc
inc
nop
(bad)
jmp
lea
mov
rcl
aad
sub
stos
adc
in
aaa
shl
jb
add
call
adc
pop
aas
shl
adc
ss
push
fwait
xchg
jecxz
dec
push
mov
jmp
inc
sbb
and
xchg
inc
push
mov
and
neg
sbb
cmc
(bad)
sbb
sbb
es
pushf
dec
mov
fild
fnstcw
inc
dec
les
xlat
xor
or
loopne
gs
jae
cmp
pusha
dec
and
push
aaa
mov
repz
stos
inc
pop
jecxz
stos
cld
xor
add
xchg
mov
fldl2e
cmp
cmps
mov
jb
inc
in
add
cmp
push
jg
mov
jp
scas
fistp
sub
fst
inc
lods
ret
test
dec
arpl
retf
mov
nop
or
xor
fist
aaa
test
outs
jno
push
jns
dec
fisub
mov
xchg
je
xor
mov
push
sbb
pop
mov
cwde
sbb
pop
jmp
jnp
adc
xchg
dec
jae
add
sbb
div
scas
jmp
dec
cmp
enter
xchg
or
jne
mov
bound
shr
add
int3
jg
imul
xor
pop
pop
push
add
(bad)
or
dec
mov
mov
jo
fldenv
xchg
jno
test
or
adc
shl
iret
daa
mov
(bad)
mov
push
lahf
cmp
pop
sbb
pop
retf
test
cmp
mov
sub
push
cli
xor
mov
mov
jmp
inc
jp
xlat
enter
and
sti
push
mov
xchg
adc
xchg
push
(bad)
mov
js
icebp
sbb
out
das
push
popa
test
or
movs
push
cmps
sub
and
cld
push
or
out
mov
sub
and
push
cld
(bad)
std
xchg
adc
push
pop
enter
mov
popf
aam
arpl
enter
ss
nop
imul
sub
add
mov
js
lods
cli
iret
arpl
mul
and
std
sub
xor
daa
iret
aas
sub
or
dec
adc
xor
push
jbe
call
sar
lock
gs
dec
sub
retf
push
fidivr
int3
hlt
inc
mov
std
aaa
inc
sti
mov
add
outs
dec
mov
dec
add
(bad)
int
loopne
inc
pushf
repz
loopne
movs
stos
jp
xchg
mov
dec
icebp
fld
jecxz
adc
xor
or
and
mov
out
cmc
push
in
mov
cmp
sbb
test
movs
std
out
call
xor
(bad)
mov
mov
test
jmp
mov
dec
les
jo
dec
mov
cmp
mov
ins
jge
adc
and
int3
xor
cmc
jns
pushf
mov
and
in
pop
and
mov
lahf
sbb
lds
xchg
sub
dec
jns
ss
xchg
ficom
mov
push
push
mov
pop
je
adc
ffree
mov
inc
sub
loope
pusha
or
pop
ds
jg
and
push
sub
ds
pop
lods
stos
test
inc
ret
jmp
or
mov
or
pop
dec
push
es
push
cmps
jne
out
add
movs
adc
and
mov
(bad)
cmp
repz
sub
sbb
fldcw
not
inc
in
rcl
ret
call
ja
adc
mov
retf
ds
jo
jb
mov
xchg
scas
or
sub
repnz
push
xchg
in
mov
iret
jmp
push
iret
in
mov
adc
ja
sbb
loope
xchg
into
and
fisub
mov
enter
ror
or
ja
dec
and
fst
xor
sub
inc
mov
pop
ret
inc
push
adc
cmc
iret
xor
sbb
out
jb
test
ds
ret
mov
sbb
jge
sar
sbb
sbb
fst
mov
cwde
enter
inc
or
xor
xor
add
pop
mov
jnp
pusha
adc
cmp
and
cwde
pop
dec
adc
jne
fst
mov
mov
out
dec
mov
hlt
xchg
and
(bad)
mov
pop
mov
test
sbb
(bad)
cmp
pop
in
dec
and
dec
sbb
clc
mov
push
mov
icebp
inc
hlt
fstp
jne
imul
xchg
inc
cwde
cmp
pop
cmp
lods
and
movs
gs
lds
scas
(bad)
test
jne
add
out
mov
adc
mov
xchg
and
mov
stos
xchg
lods
add
push
mov
push
iret
(bad)
mov
(bad)
jcxz
push
xor
imul
jmp
(bad)
cmp
nop
pop
or
cwde
xor
xor
inc
ret
mov
mov
sub
xor
jno
adc
in
dec
xchg
call
add
xor
inc
loopne
mov
lods
lods
fild
ror
mov
mov
cdq
fisubr
stc
xchg
adc
jge
rol
ret
neg
dec
arpl
test
ss
into
nop
inc
scas
adc
gs
mov
mov
mov
fidivr
push
dec
and
inc
mov
jno
lds
or
outs
xchg
(bad)
dec
dec
les
out
mov
xchg
mov
dec
call
jno
fwait
inc
add
cwde
cmp
pop
mov
mov
pop
bound
jo
jb
jb
dec
lods
or
or
outs
pop
emms
add
xchg
out
out
mov
inc
mov
les
sahf
mov
imul
cmpxchg
mov
inc
in
cmps
ins
pushw
shl
mov
inc
add
adc
clc
or
or
dec
push
lahf
jg
or
aaa
jle
push
and
pop
scas
xchg
scas
call
dec
scas
sti
test
aaa
xchg
lahf
popf
loopne
sub
es
cmp
jns
hlt
sub
jno
xchg
gs
pop
fld
popf
push
iret
mov
mov
cmc
mov
jmp
fnstcw
pop
xor
and
arpl
les
inc
jnp
(bad)
pusha
ja
mov
rcr
in
rcl
sub
cdq
or
std
push
push
pop
int3
push
lock
pop
mov
(bad)
rcl
(bad)
and
icebp
or
add
and
pusha
neg
adc
xchg
das
mov
nop
dec
pop
mov
xor
dec
sahf
push
iret
in
inc
pop
cli
and
je
inc
xor
ror
pop
mov
sub
cli
mov
sub
rol
hlt
inc
leave
xor
xchg
pop
xchg
sar
scas
mov
fwait
pop
mov
push
cs
sub
mov
iret
mov
mov
xor
push
add
and
xchg
outs
psubq
imul
sbb
push
sahf
pop
(bad)
ins
xchg
adc
cli
mov
cmps
cmps
clc
adc
ins
stc
lock
and
movs
mov
add
daa
popf
and
retf
gs
call
jno
mov
mov
push
rol
jg
or
movs
int
mov
mov
jl
nop
call
mov
fdiv
mov
punpckldq
fist
pop
fimul
loope
mov
repz
mov
push
dec
shl
cmps
stos
adc
pop
outs
arpl
bound
cdq
cmc
shl
xor
loop
popf
pop
movs
stos
add
mov
mov
test
call
jmp
arpl
inc
adc
mov
nop
jb
in
inc
pop
test
or
loop
out
stos
lahf
and
cwde
imul
inc
sbb
mov
mov
add
xor
xchg
jge
pop
mov
mov
jb
nop
xor
dec
or
and
and
aas
fs
mov
stos
cs
and
shl
fs
in
inc
mov
sub
inc
inc
jnp
jo
(bad)
popa
mov
cmps
sbb
ret
jbe
xchg
pop
cld
movs
call
sub
cmps
push
pop
jl
cli
ja
mov
adc
out
pop
pop
sbb
pop
outs
out
push
or
jno
jb
jno
jl
or
jnp
sub
or
shr
push
data16
(bad)
xchg
dec
pop
(bad)
mov
call
in
sub
or
pushf
imul
stc
dec
mov
cmp
jmp
mov
sub
test
lea
rcl
sub
adc
je
jecxz
mov
lahf
scas
fsubr
mov
pusha
stc
movs
mov
cdq
mov
jmp
mov
cmp
push
mov
aas
push
out
dec
rcr
repnz
not
mov
and
inc
cmp
pop
clc
ror
out
clc
movs
(bad)
lahf
xor
push
xchg
add
push
mov
(bad)
push
aas
inc
sti
xchg
jne
sbb
push
jl
dec
cmps
dec
repnz
cmp
adc
and
lock
scas
sub
lock
in
inc
jl
inc
clc
push
push
add
xchg
setl
and
shl
out
in
sbb
add
or
or
movs
addr16
sbb
(bad)
(bad)
xchg
mul
xchg
push
test
scas
push
or
sub
in
jmp
stc
jbe
xchg
leave
inc
ja
mov
das
cmps
and
shl
cmc
pop
(bad)
ds
mov
cdq
xor
mov
shr
sbb
mov
jmp
add
dec
out
aad
cmp
out
mov
mov
push
jmp
(bad)
jmp
mov
mov
(bad)
and
jmp
aas
sub
pop
pop
and
push
xor
sbb
jl
(bad)
loop
pop
sub
pop
jg
fwait
aaa
mov
xor
add
fiadd
mov
scas
fscale
mov
and
pop
clc
xchg
pushf
out
xchg
sub
and
xchg
dec
enter
scas
dec
repz
mov
sbb
or
dec
xor
xor
sub
adc
sbb
dec
dec
sbb
test
fisttp
mov
or
xchg
data16
xor
mov
imul
ss
add
mov
push
xor
xor
ss
push
pop
stos
clc
jne
(bad)
leave
xor
cdq
pusha
sbb
mov
jmp
sub
cdq
jl
jp
add
jl
dec
dec
(bad)
jl
fidiv
inc
push
sub
gs
lds
jne
pop
ss
add
data16
call
pop
jne
ins
int
push
stos
add
in
out
mov
mov
push
xor
xchg
retf
arpl
dec
adc
(bad)
mov
pop
jne
pop
test
adc
pop
out
mov
fstp
sbb
shr
and
popf
std
pop
bswap
popa
cmp
arpl
data16
retf
ror
dec
rol
push
push
(bad)
out
lds
push
xchg
mov
add
leave
push
adc
pop
cli
popf
pop
xchg
call
sbb
xchg
mov
add
nop
loope
icebp
daa
xor
jb
aaa
dec
jb
sahf
mov
ja
jno
mov
in
sub
rcr
mov
cmps
and
sbb
xlat
aas
sub
pop
movs
jne
jno
cmp
mov
std
mov
and
in
dec
ds
cmps
scas
jno
popf
jns
pop
dec
cmp
test
pusha
in
movs
fild
mov
test
bnd
push
jl
cmps
les
mov
jns
aam
jle
sub
retf
xchg
mov
jmp
mov
data16
sbb
das
jne
ror
jle
cdq
mov
and
sub
cmp
jecxz
push
dec
xor
retf
sbb
and
mov
sub
jno
mov
mov
xor
retf
dec
adc
sub
stos
inc
fs
push
dec
sub
aaa
push
int3
sbb
jp
xchg
add
ja
sbb
push
xor
mov
loopne
mov
mov
push
sbb
mov
shr
adc
cmp
movs
dec
mov
loopne
lds
sub
std
in
(bad)
cmp
add
ret
fidiv
lock
inc
and
test
push
dec
xchg
leave
(bad)
test
ja
mov
cmp
push
cli
(bad)
fsub
xor
jbe
mov
inc
ror
loopne
pop
scas
stos
xchg
pop
mov
loop
pusha
icebp
fcom
push
fidiv
pop
mov
fcmovne
mov
adc
xchg
cmp
mov
push
out
mov
pop
int3
(bad)
fsubr
sbb
pop
stos
xchg
out
sbb
lods
xchg
jl
ret
imul
add
add
or
mov
dec
inc
mov
(bad)
out
add
mul
cmp
cmp
mov
lahf
jmp
fidiv
scas
movs
cmp
and
cmps
mov
aaa
dec
out
pop
mov
add
and
dec
push
cmp
and
call
in
into
pop
mov
test
mov
data16
push
fsubp
push
sbb
push
movs
sub
jl
add
xor
dec
bound
mov
fisubr
xor
cmc
lahf
push
rcl
xor
push
cmp
push
(bad)
repz
jo
jmp
mov
sbb
jmp
call
adc
sbb
xchg
and
jp
cmp
push
cmp
cmp
adc
sub
outs
mov
sub
test
out
inc
daa
pop
add
clc
adc
jmp
xchg
pop
stos
in
or
ins
js
les
cmp
xor
into
mov
out
jbe
cmps
fisubr
inc
inc
aas
sbb
and
mov
nop
jnp
aas
and
cs
push
cmp
pop
jno
cmps
adc
jo
pusha
pop
outs
xchg
test
pop
jp
push
sbb
stc
and
inc
dec
push
pop
and
das
inc
shr
ret
and
dec
arpl
clc
iret
popf
leave
outs
shl
std
dec
jne
sbb
cdq
or
sub
xor
imul
dec
out
jo
cli
je
sub
mov
jo
cmp
dec
xchg
test
or
repz
pop
sub
jne
or
add
in
pop
inc
push
out
pushf
fadd
(bad)
icebp
cli
and
and
in
push
call
xchg
test
xchg
inc
shl
adc
stos
sbb
xor
dec
mov
xchg
test
lods
jp
dec
jae
inc
mov
dec
mov
xchg
int3
sar
loopne
lds
es
jbe
out
(bad)
(bad)
aaa
clc
jae
sbb
mov
pop
and
vlddqu
jne
sar
dec
mov
daa
mov
(bad)
ds
fcom
sub
xrelease
test
cdq
not
inc
leave
sub
push
rcr
dec
lods
mov
mov
dec
dec
imul
sub
mov
rcr
inc
push
ja
sub
(bad)
jmp
(bad)
inc
test
daa
push
or
add
jecxz
pop
mov
in
ret
retf
pop
fist
cmps
jp
cld
pop
cmp
jns
cmp
push
xchg
aam
fdivr
mov
adc
outs
in
jmp
lahf
xor
in
loope
mov
mov
push
sahf
push
pop
cs
and
mov
jmp
in
pop
test
mov
js
gs
inc
xor
cmp
clc
inc
idiv
mov
pop
mov
or
adc
add
sbb
and
sub
sbb
mov
in
xchg
sbb
ret
xchg
fs
cmp
inc
aaa
enter
mov
iret
movs
nop
inc
push
mov
add
xor
cmps
mov
cmps
pop
loopne
leave
mov
and
pop
or
rcr
lock
xor
push
retf
cmp
aad
arpl
movs
or
pop
loop
repnz
push
sahf
sbb
or
xchg
dec
cmps
push
cmp
inc
sbb
jge
dec
test
retf
scas
(bad)
push
cmp
xchg
lods
inc
pop
mov
adc
adc
aad
rcl
or
xor
leave
shr
xor
mov
call
int3
jmp
clc
or
and
leave
sub
cdq
jl
gs
cmp
sbb
xchg
into
jecxz
clc
mov
loop
add
imul
adc
int3
mov
push
push
inc
(bad)
clc
fisttp
enter
sbb
xchg
mov
add
or
adc
dec
mov
out
out
jb
data16
lods
sbb
sar
pop
add
mov
inc
sub
inc
iret
call
and
or
test
push
cmp
sbb
cdq
jle
mov
test
push
stc
push
adc
mov
iret
and
xlat
xchg
pop
lahf
in
cmp
cli
mov
pop
or
xor
cmps
jb
jnp
pushf
xchg
cwde
outs
or
iret
pop
dec
dec
mov
cli
(bad)
ret
pop
fld
sbb
rol
and
mov
mov
das
jle
pop
into
and
pushf
sbb
inc
ja
pop
add
or
loope
jno
xchg
mov
mov
leave
clc
pop
imul
repz
aas
test
jge
cld
dec
ret
push
mov
inc
(bad)
cli
jbe
sbb
mov
shl
loopne
mov
shl
sti
pop
outs
jb
and
sbb
sbb
inc
data16
es
stos
xchg
das
adc
mul
cmc
cmc
(bad)
movs
adc
xchg
(bad)
xchg
sbb
rcr
lea
inc
into
xor
enter
push
out
mov
pop
inc
hlt
nop
(bad)
mov
jae
sti
test
pop
push
inc
call
dec
sbb
jmp
ret
loope
movs
jg
pop
hlt
int3
jne
cmp
pop
xor
aam
xor
dec
pop
rol
retf
sub
stos
mov
cmps
addr16
sbb
repnz
cmps
xor
aam
repz
sbb
cmp
mov
loopne
lea
cmp
mov
add
or
xor
jmp
(bad)
lock
cmps
xor
pop
adc
sub
pusha
stos
sub
push
fwait
jmp
ja
icebp
dec
add
dec
pop
inc
jecxz
pop
cmp
adc
pop
fdiv
pop
jp
shl
(bad)
ja
das
pop
addr16
pop
push
(bad)
stos
cmp
mov
fs
push
push
dec
gs
inc
or
push
and
rcl
xchg
test
jb
cmp
sahf
adc
jle
mov
inc
inc
out
adc
mov
(bad)
push
nop
mov
sahf
ret
or
dec
sub
xor
rcr
or
inc
addr16
div
jl
ret
(bad)
stc
cmp
stc
jns
jb
rcr
jo
retf
fwait
dec
and
mov
lds
arpl
sbb
sub
cmp
std
ds
mov
mov
daa
in
js
xor
xchg
sbb
fsubp
movs
pop
mov
fst
(bad)
dec
cwde
xchg
mov
ss
xchg
and
inc
jne
(bad)
sub
daa
aad
or
leave
xchg
and
das
repnz
aam
and
xor
pusha
lahf
push
mov
pop
xchg
fcom
adc
mov
out
icebp
cs
xor
pop
xchg
into
and
movs
jnp
adc
mov
xor
dec
sbb
mov
jns
gs
xchg
xchg
add
add
iret
(bad)
icebp
aam
mov
mov
(bad)
mov
scas
imul
aaa
mov
mov
ror
pushf
dec
imul
(bad)
or
push
iret
add
into
push
sub
cli
jmp
loope
fst
mov
dec
sub
xchg
sub
mov
lods
dec
into
mov
imul
xchg
or
dec
call
push
mov
mov
in
or
xchg
mov
xor
jne
(bad)
jno
push
pop
test
pop
sbb
push
(bad)
inc
(bad)
pushf
inc
imul
jmp
(bad)
bnd
cmp
ja
neg
xchg
xchg
push
out
sti
in
mov
mov
mov
push
lods
adc
xchg
pop
mov
dec
scas
lahf
lds
fwait
out
jmp
jmp
or
fcompp
fimul
fstp
and
loope
ins
pop
xor
jmp
loopne
cmp
sar
iret
ss
in
fiadd
lea
lock
stos
push
bound
adc
fisub
inc
inc
stos
mov
fcomp
movs
out
inc
(bad)
enter
fiadd
mov
add
aad
mov
dec
scas
adc
or
jo
mov
add
pop
fstp
cmp
ret
or
pop
lds
div
or
movs
imul
adc
mov
adc
cwde
test
or
imul
sub
push
stc
mov
and
add
jbe
shl
push
cmp
rcl
add
cmps
push
(bad)
or
mov
push
cmp
(bad)
and
or
pop
cmps
std
std
scas
neg
push
in
arpl
movs
pop
int
cld
aaa
cs
aaa
std
fs
sub
and
stos
sub
shr
ret
dec
daa
push
add
jb
lods
in
cmp
fnstsw
push
cli
xchg
ins
and
es
jle
fidivr
fld
xchg
mov
mov
jo
jno
nop
push
aad
std
mov
mov
jo
xchg
repz
push
cmp
push
mov
jg
mov
and
jmp
and
sbb
ss
int
or
aad
mov
int3
shl
push
push
ds
push
(bad)
aad
into
std
jge
inc
push
(bad)
fwait
mov
bound
adc
nop
mov
mov
or
movs
sbb
mov
push
jl
daa
mov
sbb
loopne
mov
das
test
cli
inc
stos
cmp
dec
sbb
push
fnstsw
push
ja
xchg
inc
xor
in
adc
test
popa
outs
in
dec
and
jnp
jnp
in
addr16
jae
pop
mov
addr16
in
jle
les
xor
push
test
js
das
and
mov
jl
jno
aad
jge
popf
add
test
aam
and
xchg
mov
mov
icebp
pop
mov
sub
inc
out
and
outs
test
dec
jge
hlt
cmp
shl
and
xor
sahf
push
into
and
mov
enter
dec
rcl
xor
jmp
cmc
jle
shl
lea
jmp
stos
xor
fs
sub
in
stc
test
mov
(bad)
cli
mov
retf
stos
inc
mov
xor
mov
lds
xchg
cdq
into
pop
popf
movs
leave
or
dec
dec
jae
imul
(bad)
fcmovnb
mov
call
or
loope
jne
sbb
cmp
ins
(bad)
mov
jo
pop
leave
xchg
fxch
sub
stc
xchg
ret
sub
mov
pop
adc
sbb
jno
out
jnp
push
jmp
pushf
adc
pop
jle
cmp
mov
add
add
or
shr
dec
xchg
dec
inc
cmp
in
or
pop
xchg
dec
sub
out
imul
mov
mov
dec
mov
mov
dec
aam
imul
retf
jle
cmps
mov
push
fisubr
into
inc
mov
adc
mov
sbb
and
test
(bad)
jmp
imul
jb
pop
je
js
pop
jmp
inc
loop
inc
and
icebp
out
sub
sub
movs
sbb
mov
ret
retf
in
push
jns
rcr
pop
cmp
xchg
ret
ds
push
fucomi
dec
sti
mov
jno
sbb
loop
mov
repnz
aas
jb
les
jns
retf
push
retf
iret
cli
(bad)
outs
test
jmp
std
add
sbb
outs
iret
mov
pop
stos
outs
jae
sbb
adc
mov
(bad)
xlat
aas
push
out
jbe
repz
cli
adc
sub
cwde
loope
lds
(bad)
jmp
cmp
pop
mov
into
or
cs
dec
jb
(bad)
loope
xor
push
aam
adc
push
xchg
nop
shr
jle
daa
or
adc
(bad)
jae
out
les
push
push
js
dec
js
adc
add
dec
inc
sub
lds
push
jnp
dec
cld
or
dec
out
cdq
test
pop
fcomp
xchg
mov
frstor
dec
rol
adc
pusha
jge
les
scas
and
inc
xor
ins
dec
rcr
imul
mov
sub
jg
push
ret
leave
push
push
mov
sbb
inc
push
xchg
mov
lods
or
(bad)
pushf
add
pop
jmp
sahf
outs
not
leave
sbb
mov
enter
pop
pop
push
or
adc
sbb
ret
mov
push
mov
push
xchg
aaa
mov
sbb
lahf
add
push
(bad)
loop
ja
xor
jmp
dec
add
hlt
ret
pop
push
lods
jae
mov
pushf
sub
adc
scas
jg
jmp
sbb
adc
jge
(bad)
push
rcl
dec
sub
les
std
fwait
push
jno
dec
and
mov
std
jbe
stc
sbb
shl
add
hlt
pop
and
int3
and
pop
xlat
pop
(bad)
cmp
add
xchg
outs
pop
pop
aam
xchg
fadd
cmp
adc
aad
push
(bad)
cmp
add
das
inc
sahf
xchg
(bad)
in
xor
cmps
or
pop
hlt
dec
sbb
popf
das
retf
aaa
test
add
jbe
mov
mov
and
popf
pop
out
sbb
fcomp
xor
inc
adc
dec
and
retf
inc
gs
push
scas
and
retf
and
cmp
pusha
xor
pop
out
ret
inc
inc
push
in
xchg
jle
push
cwde
inc
xchg
out
and
jne
out
pop
(bad)
or
data16
adc
aam
xchg
jmp
in
rcl
mov
cmp
sbb
loop
xor
pop
scas
std
fsub
mov
dec
or
int3
movs
ins
mov
cmp
ret
pop
xchg
xlat
push
push
sub
or
mov
arpl
xor
jp
retf
mov
mov
and
and
nop
push
(bad)
(bad)
int3
jle
push
or
je
enter
out
xor
je
in
add
mov
gs
jns
fdiv
fstp
sbb
xor
into
xchg
loope
push
xchg
in
imul
daa
pop
(bad)
fcomp
bound
sar
adc
lahf
gs
mov
xor
pop
and
sbb
xor
(bad)
sub
(bad)
or
mov
jp
dec
push
fwait
mov
lea
int
mov
or
inc
inc
mov
dec
add
in
hlt
push
add
sub
push
xchg
ss
jbe
xor
(bad)
xor
fldcw
push
aas
inc
and
fisubr
push
pusha
jbe
adc
rcl
sbb
mov
fadd
jnp
ret
or
stos
arpl
jne
cmc
add
out
fcom
inc
into
icebp
aam
add
inc
adc
jne
inc
mov
repz
mul
mov
fwait
sbb
adc
loopne
push
dec
inc
dec
or
popf
stos
mov
pop
sub
aaa
repnz
pop
mov
retf
ins
movs
pop
rcl
mov
and
push
sbb
push
cmp
int
or
mov
or
cmp
cmp
imul
sub
(bad)
mov
sbb
mov
push
cld
or
pop
in
sub
out
cmp
inc
inc
jne
ds
add
pop
and
mov
cmps
inc
lea
inc
mov
and
sub
pusha
cmc
or
lods
das
adc
jle
loope
dec
int3
adc
and
hlt
mov
push
in
xchg
xchg
pop
mov
xor
adc
xchg
sar
sub
dec
cld
mov
cmp
das
jbe
pop
dec
cmp
pop
jecxz
shl
aam
mov
call
in
outs
dec
inc
push
int
jg
outs
inc
loope
test
add
inc
xor
cli
scas
pop
(bad)
or
adc
shl
sub
div
je
fsub
xchg
ror
mov
mov
pop
jo
pop
ja
out
ret
pop
or
aam
adc
push
stc
nop
sbb
hlt
mov
movs
retf
dec
loop
xchg
mov
int3
ins
sub
imul
and
pop
(bad)
jae
cmps
jbe
push
jbe
mov
adc
stc
jle
in
retf
push
adc
ds
cli
add
and
add
sub
jns
cmc
cmp
xchg
add
cmp
cwde
stc
inc
inc
cmc
or
(bad)
shl
push
cmps
dec
add
mov
lds
mov
xchg
mov
pop
aam
jbe
sub
jl
sub
out
ret
cmp
mov
in
aam
jg
dec
and
(bad)
fwait
push
(bad)
enter
std
cwde
dec
add
stos
inc
cmp
mov
loopne
(bad)
mov
mov
ins
cmp
mov
shl
mov
gs
test
or
xchg
pop
push
fist
jl
dec
and
das
jge
mov
lahf
pop
xchg
icebp
shr
mov
test
rcr
push
sbb
(bad)
adc
jmp
test
cdq
jae
mov
push
lahf
add
push
sbb
mov
fcmove
bound
enter
adc
and
adc
imul
iret
inc
mov
js
jl
scas
xor
enter
enter
pop
push
dec
test
and
add
mov
sbb
mov
dec
loop
dec
push
icebp
pop
jno
bnd
adc
clc
dec
in
mov
pop
lods
add
push
cmps
into
retf
out
or
inc
dec
sub
add
jnp
out
mov
xchg
xchg
dec
jecxz
pop
xor
outs
pop
test
inc
or
dec
cmps
and
mov
clc
jns
inc
test
lahf
ret
push
mov
inc
ror
js
add
dec
cmp
cmp
push
test
xor
xchg
inc
pop
xor
or
inc
push
mov
sub
sahf
jae
push
sbb
je
push
mov
fdiv
scas
push
daa
fistp
call
push
outs
dec
or
popf
mov
xlat
fldenv
nop
retf
push
pop
je
cmp
arpl
repz
add
mov
inc
inc
in
(bad)
mov
ret
ja
(bad)
std
pop
adc
stos
rol
mov
call
xchg
mov
scas
add
dec
push
repz
dec
mov
loop
lods
movs
(bad)
mov
ds
push
inc
in
fwait
pusha
dec
dec
cdq
(bad)
jne
lods
aaa
jmp
fisttp
mov
fldz
xchg
int3
or
js
xor
jno
ss
fsubr
sub
add
in
ja
jbe
inc
inc
or
stos
bound
repnz
aam
pop
push
sub
adc
jmp
stos
in
sub
outs
fldln2
xchg
pop
and
inc
adc
cmp
cld
nop
add
pop
mov
mov
fbld
adc
fdivr
dec
outs
push
in
and
pop
lock
loopne
or
cmp
adc
ret
or
mov
aas
mov
shl
lea
mov
not
fldcw
xchg
push
xor
out
daa
test
xchg
sti
push
ds
ss
sbb
test
sbb
mov
shr
pop
sub
sub
cs
xor
fwait
out
xor
jns
adc
lock
fcom
cmp
ds
dec
in
sbb
fcmovnu
ja
stos
lods
xchg
sub
das
loop
sbb
sub
pushf
mov
into
repz
bound
dec
dec
in
xchg
mov
fcmove
aaa
mov
sub
leave
dec
mov
jbe
sub
dec
sub
mov
mov
jo
push
sahf
sbb
adc
mov
sub
lds
push
xor
outs
xor
cli
mov
jp
stos
ror
pop
ins
cs
and
cmp
mov
loope
sub
jns
ret
dec
mov
add
or
xchg
icebp
push
in
cs
arpl
lahf
repz
xor
mov
xchg
jmp
or
sahf
lahf
imul
fwait
xchg
add
mov
cmps
in
jmp
sub
mov
hlt
sub
jno
xchg
test
push
mov
cmp
fadd
jno
mov
in
scas
xchg
mov
push
jae
mov
pop
xor
cmp
dec
xchg
dec
in
push
rcr
retf
xor
imul
sti
add
out
pop
inc
(bad)
jg
jle
ret
and
stos
xor
mov
pop
shr
inc
arpl
mov
ds
movs
sub
cli
mov
pop
mov
jg
int3
add
cdq
not
out
test
push
aad
push
test
fs
push
jae
mov
ret
xor
sub
lds
cwde
jg
popa
cmp
xchg
adc
repnz
jno
sub
mov
adc
stc
ja
arpl
xchg
loop
stc
call
stos
enter
fs
retf
aad
adc
mov
dec
sahf
retf
mov
cld
hlt
cmp
fist
xchg
aaa
cmps
inc
xor
mov
movs
pop
push
sub
mov
cmp
stos
cmp
xchg
adc
xchg
and
sub
in
cld
dec
fidiv
mov
iret
mov
lea
xchg
gs
jl
adc
jmp
jns
pop
mov
mov
push
pop
jl
cmp
pop
mov
or
add
jnp
in
in
scas
adc
xchg
or
jp
cmps
ss
mov
aam
or
push
and
ins
repnz
or
xor
sbb
mov
(bad)
and
test
ds
inc
mov
inc
fnstsw
fiadd
jmp
cmp
dec
dec
mov
add
loopne
mov
push
jae
cs
cmp
xchg
in
imul
lea
arpl
mov
xchg
add
jmp
into
cmovp
sbb
add
pop
dec
xchg
adc
not
cs
aad
cmp
sub
inc
dec
pop
push
je
call
dec
sub
inc
inc
jge
cld
xlat
sbb
mov
imul
mov
fwait
pop
std
sysret
hlt
jns
test
les
out
xor
in
add
addr16
sub
adc
test
lods
inc
xor
iret
adc
and
loopne
gs
jb
dec
dec
lods
je
xor
add
ret
jle
add
mov
movs
stc
idiv
mov
jl
inc
cdq
pusha
call
pop
sbb
mov
(bad)
out
mov
adc
pushf
mov
mov
lock
fisub
fcmovnu
imul
out
retf
adc
pop
dec
cmp
jp
cs
and
xor
mov
(bad)
cmps
int3
xlat
test
in
test
or
jmp
add
sbb
mov
rcr
pusha
loop
xchg
mov
hlt
mov
cli
int3
jg
retf
aaa
test
sub
push
stos
jmp
fadd
adc
mov
enter
inc
out
ror
icebp
call
push
sub
stos
pop
fucomp
sub
pop
dec
or
cmp
leave
(bad)
ja
cmp
mov
call
(bad)
es
mov
iret
lods
mov
addr16
add
inc
push
xor
adc
fwait
inc
leave
in
or
add
sub
inc
xor
sub
sub
(bad)
lock
std
ss
aad
cld
and
(bad)
add
mov
lods
jmp
ror
mov
inc
into
push
inc
adc
cmp
cld
in
jmp
aam
cmp
iret
das
and
shl
mov
cdq
inc
mov
or
pop
mov
das
popa
lods
mul
es
xchg
xchg
popf
fild
pop
imul
loope
dec
xor
sub
clc
inc
fwait
jnp
mov
mov
mov
daa
pop
cmp
mov
fsqrt
sub
sahf
mov
add
arpl
fcmovu
mov
and
xor
inc
or
aam
shl
mov
ins
out
mov
pop
in
ret
inc
mov
or
cmps
mov
sbb
jnp
cmc
xchg
scas
loop
iret
leave
(bad)
dec
mov
cli
push
idiv
pop
pushf
aas
push
sbb
movs
pushf
xchg
pop
mov
cmc
fld
(bad)
jp
outs
cmp
fldcw
fild
dec
aas
and
dec
fucomi
rcr
aas
scas
add
jmp
dec
push
xchg
xchg
jo
outs
dec
mov
mov
adc
xchg
test
pop
leave
dec
xor
aad
mov
jge
rol
xor
cmp
mov
sahf
or
ret
adc
dec
int
ror
retf
fwait
retf
mov
inc
or
pop
mov
adc
sub
mov
cmp
push
or
movs
mov
mov
lea
add
sub
inc
stc
les
cmp
xlat
mov
mov
movs
imul
into
arpl
push
mov
cmp
mov
xor
xchg
jae
in
imul
(bad)
cmp
cmp
xor
sbb
jl
(bad)
frstor
pop
imul
outs
rol
push
cmp
push
sub
sub
(bad)
inc
out
push
and
add
adc
push
xor
xchg
div
jo
sahf
jg
push
ja
inc
mov
aam
stos
push
pop
add
push
je
dec
int
fisttp
inc
mul
call
enter
xchg
jge
xor
(bad)
xor
fbstp
jnp
pop
xchg
adc
movs
enter
fwait
in
nop
xor
push
bsf
dec
mov
(bad)
and
or
inc
fidiv
pminsw
inc
in
jae
in
jbe
js
call
enter
adc
sbb
add
fwait
(bad)
mov
xor
jne
pop
xchg
outs
daa
and
retf
ss
fwait
xor
loop
les
sub
daa
push
repnz
pop
inc
jno
pop
ret
jge
mov
enter
je
push
xchg
test
push
jp
jae
ins
push
add
mov
scas
fstp
stc
rol
jg
ins
mov
in
cld
aas
aaa
inc
add
cmp
push
test
mov
xor
outs
mov
pushf
nop
fs
push
xor
scas
push
sar
or
fcmovnbe
arpl
setbe
push
dec
ins
mov
cld
add
imul
pop
or
cmp
adc
sub
pop
xchg
aaa
add
or
xchg
cmp
sahf
addr16
push
fadd
dec
dec
adc
(bad)
push
jecxz
pop
cwde
push
mov
leave
push
retf
ja
inc
mov
jne
push
add
push
imul
fld
push
dec
int3
fwait
out
repnz
retf
or
leave
rcr
pop
xor
cld
std
sub
fidivr
lahf
clc
lods
leave
dec
cmp
cmp
jge
sub
and
jle
cli
push
adc
mov
sbb
inc
jno
aas
and
jmp
mov
outs
xchg
pop
jle
ret
mov
test
data16
stos
mov
int
icebp
ror
push
ret
out
fsubr
rep
mov
sub
retf
in
mov
xor
mov
sbb
(bad)
jl
and
or
mov
sti
ret
js
imul
sub
pop
ror
xchg
clc
pop
xchg
jp
int
pop
std
xchg
jmp
out
dec
pop
jecxz
fdiv
cmc
lahf
clc
stc
inc
cdq
fiadd
rcr
outs
les
es
aad
jbe
push
xor
aad
mov
cmc
xchg
in
xor
jg
fldenv
movs
jne
add
punpckhwd
mov
(bad)
loopne
out
jmp
call
movs
lods
inc
dec
inc
enter
fild
dec
fs
xchg
adc
and
mov
mov
dec
adc
and
push
jb
pop
jno
(bad)
xchg
add
sub
shl
sbb
int3
cmc
call
cmp
sub
stos
nop
push
test
mov
outs
pop
outs
inc
std
jecxz
jnp
dec
cs
or
cmp
adc
rol
scas
jae
adc
popf
mov
in
lods
js
inc
jno
test
pop
dec
retf
test
pusha
movs
fwait
pop
inc
rcr
mov
stos
bound
jecxz
push
mov
dec
xchg
push
dec
mov
ret
xlat
xchg
jecxz
ss
aad
add
dec
(bad)
push
addr16
xor
loop
xor
ins
or
ficom
adc
mov
(bad)
lahf
shl
cmps
movs
xor
sbb
test
sub
mov
push
lahf
popa
or
xor
or
and
mov
jns
fs
add
and
and
cmps
test
mov
sub
mov
fwait
pop
add
and
cli
jbe
jns
xor
jo
cs
mov
js
popf
jnp
adc
or
std
push
jecxz
lahf
enter
xor
jae
jae
ss
xor
jle
xor
bound
neg
jns
fdiv
mov
mov
es
mov
loopne
in
aam
jb
pusha
sub
fxch
push
dec
inc
pushf
add
fistp
inc
or
or
adc
mov
add
inc
daa
push
pop
pop
lahf
xchg
fwait
adc
adc
scas
gs
cmp
mov
mov
ds
xor
das
dec
test
int
mov
scas
pushf
rol
clc
dec
pop
popa
inc
add
sahf
add
push
jp
sub
adc
in
pushf
in
cdq
cmp
popa
cmp
jp
loop
jmp
(bad)
xchg
dec
inc
cdq
push
pusha
mov
pop
xor
inc
inc
out
int
mov
movs
mov
div
mov
loop
fistp
arpl
xchg
stos
mov
fild
cdq
lds
cmp
cwde
inc
les
cmp
imul
mov
retf
add
popa
aas
pop
jge
and
inc
(bad)
jmp
popa
in
inc
add
inc
dec
(bad)
fisttp
nop
mov
xor
add
xor
leave
xor
repz
add
test
inc
or
mov
push
pop
push
pop
mov
push
pop
les
or
adc
pop
jmp
jae
xchg
pop
aaa
mov
mov
clc
clc
gs
loop
lods
outs
rol
jbe
pop
and
pop
scas
jb
imul
test
(bad)
out
mov
xchg
xlat
imul
and
pop
mov
cwde
adc
icebp
cmps
adc
and
mov
or
ror
ss
jle
push
mov
pushf
add
sub
jae
div
aaa
ds
jecxz
loopne
shl
call
sbb
je
jge
sbb
in
icebp
mov
test
sub
mov
sub
mul
adc
rcr
fisub
sub
add
jmp
and
daa
push
xor
fisubr
outs
or
adc
add
shl
inc
sbb
(bad)
into
xchg
nop
imul
in
adc
jno
inc
retf
xor
adc
jl
xchg
push
das
fcom
pop
pop
scas
or
xor
inc
add
popf
nop
js
(bad)
loope
jo
sub
rcl
in
jg
mov
or
mov
pop
aad
sub
ds
cmp
xchg
outs
pop
inc
mov
movs
out
fld
mov
in
xchg
sbb
cmc
cmps
dec
sar
xchg
push
int3
xchg
jae
in
sub
aad
ror
jp
ins
lahf
iret
cmp
push
mov
movs
jp
(bad)
push
jg
gs
clc
pop
jns
xchg
cmp
dec
je
add
cmp
inc
add
lahf
push
stc
xchg
push
scas
test
(bad)
sbb
inc
adc
call
inc
adc
jne
add
scas
dec
adc
xor
push
repnz
mov
inc
mov
inc
mov
lds
jne
jp
cmp
(bad)
cmc
and
sahf
fadd
sahf
push
jecxz
fsub
cli
int
push
xchg
sahf
inc
ins
sub
das
dec
cmp
stc
sbb
clc
xor
dec
or
stos
mov
push
and
xlat
push
retf
cld
pop
or
pop
gs
fwait
mov
clc
mov
adc
imul
cdq
lds
das
xchg
test
xchg
ss
ret
jb
imul
not
movs
imul
into
jbe
test
xor
xor
retf
lahf
sbb
dec
pop
dec
pop
outs
or
mov
sbb
rcr
jecxz
ret
and
loop
inc
sub
call
das
movs
out
xlat
dec
xor
jnp
lods
movs
dec
pop
sbb
cmc
or
lds
aad
pop
in
lods
push
pushf
mov
adc
xor
pop
add
mov
adc
bsr
pusha
and
les
dec
ret
iret
inc
clc
add
mov
cld
popa
inc
xor
dec
jmp
lea
jns
sbb
jl
popf
cmp
push
push
repz
mov
pop
out
mov
mov
cmp
fprem1
push
ja
mov
out
xchg
xchg
(bad)
mov
pop
xor
mov
xchg
cmp
sub
dec
pop
bound
push
cmp
arpl
push
or
adc
into
loope
ror
mov
inc
mov
aaa
stc
iret
sar
mov
scas
aaa
test
push
push
pusha
test
aad
adc
cmps
cmc
inc
sub
shr
stc
mov
pop
loope
cmc
cmp
push
xor
out
cmp
enter
aam
aad
adc
mov
outs
mov
int3
mov
(bad)
int
cmp
stc
das
movs
(bad)
xor
jnp
pop
inc
btr
xor
hlt
ja
xor
jnp
cmp
xchg
out
xor
lods
sbb
pusha
add
icebp
adc
pop
pop
jbe
aam
add
call
add
mov
mov
sbb
push
xchg
popf
arpl
pop
cli
add
retf
aad
mov
jno
jo
inc
ret
mov
sub
pop
jmp
lods
fcmove
sahf
sbb
cmp
add
fcomp
and
jecxz
xlat
mov
dec
cwde
idiv
xchg
in
jae
xchg
sbb
or
and
sub
push
stc
jne
xor
cmp
(bad)
jnp
lods
mov
test
jmp
cmp
pop
test
cmps
out
mov
fdiv
xor
jae
sub
xor
mov
ret
mov
sub
test
xor
je
pop
daa
and
hlt
(bad)
sub
mov
call
fwait
adc
mov
xchg
std
ja
test
(bad)
push
(bad)
repz
dec
cwde
mov
mov
jecxz
cwde
(bad)
pop
das
ins
mov
and
adc
cmp
mov
sar
cmp
scas
fcmovnb
xlat
fdivr
inc
or
xchg
inc
lock
jo
or
push
adc
inc
imul
movs
dec
pop
outs
mov
xchg
adc
add
inc
jmp
fwait
unpcklps
lock
adc
dec
dec
lds
ficomp
pop
push
daa
mov
mov
sbb
push
jg
pop
push
mov
es
mov
dec
repnz
sbb
inc
mov
xchg
mov
and
jl
out
and
cmp
leave
and
(bad)
fisub
aad
cmps
data16
stos
mov
sub
jbe
lahf
fnstsw
mov
push
addr16
rcr
sbb
sbb
cld
int
jae
jmp
sar
aas
mov
pop
(bad)
fld
dec
clc
ret
jmp
pop
dec
jnp
mov
jae
popa
cwde
cmp
pop
mov
push
xchg
mov
inc
pop
add
sub
lahf
cs
in
push
push
mov
pop
mov
jnp
xchg
ror
lods
dec
xor
pop
test
ins
fistp
dec
out
xchg
pop
push
enter
bound
jmp
enter
xor
sub
test
sub
inc
fist
pop
xchg
jmp
aad
adc
cmps
xchg
jns
push
out
gs
mov
pop
aam
ins
mov
sbb
jmp
mov
dec
outs
shl
cmc
xchg
sti
sbb
ins
outs
scas
js
fwait
sub
call
cmp
ds
pop
call
iret
add
div
jo
xor
add
fwait
cli
jg
addr16
mov
les
ins
mov
nop
and
mov
ja
pop
and
or
jp
cli
fwait
leave
dec
nop
push
pop
pop
sub
jno
nop
outs
sbb
retf
sub
scas
fucomi
imul
fldcw
les
mov
jmp
and
mov
in
sbb
fsubr
sub
xor
pushf
jno
aad
add
pop
femms
cmps
cmc
push
pop
ficom
out
shr
les
push
pop
popa
and
inc
scas
inc
sub
add
cmp
sub
add
xor
fistp
mov
push
jecxz
in
(bad)
jne
call
cmp
ins
or
pop
inc
dec
es
lahf
pop
in
pop
push
pop
mov
sbb
cmc
pushf
or
jp
stc
jge
shl
inc
nop
int3
cbw
rcr
inc
xchg
add
je
fcomp
and
mov
fcom
xchg
dec
push
popa
and
ss
in
inc
int
cmp
cmp
mov
pop
popf
cmps
adc
cmp
push
pop
out
inc
dec
mov
sub
loop
pop
jg
call
pop
and
adc
fmul
mov
jmp
sbb
xchg
les
mov
cmp
adc
dec
mov
imul
shl
cdq
mov
push
cmps
xor
mov
inc
loop
jl
cmp
push
push
push
or
jae
push
cmps
lock
fwait
ds
push
test
pop
and
inc
fcmove
jmp
retf
je
xor
leave
xor
popa
into
ret
loopne
xor
cmp
inc
add
movs
(bad)
jp
adc
cmp
cmc
fadd
stos
retf
jle
dec
imul
adc
scas
cmc
repz
jbe
aam
adc
shl
ror
fcom
addr16
mul
(bad)
ds
iret
or
addr16
rep
cmp
sbb
jbe
adc
or
sbb
cs
sbb
clc
push
loop
ds
push
jp
xchg
pop
jns
in
xor
enter
test
add
dec
jae
xchg
cmps
(bad)
cld
add
das
popa
jae
ins
cmp
mov
sbb
xor
fisubr
push
cmp
add
push
mov
aam
mov
iret
mov
adc
cli
loopne
js
cmps
mov
outs
loop
mov
and
xchg
fst
ins
xor
jns
or
mov
cld
int
mov
pop
ds
inc
dec
jae
jns
cld
push
loope
xlat
mov
test
ficom
cmc
inc
loope
mov
add
dec
mov
js
and
and
pop
jns
gs
ins
mov
pop
add
(bad)
mov
std
cmp
pop
dec
fcmovbe
sub
cld
inc
cmc
jbe
add
pop
pop
dec
push
inc
add
fs
ret
mov
add
lahf
iret
fldenv
xor
in
mov
sbb
into
cmps
stos
jge
fdivr
ss
mov
popf
imul
mov
mov
xor
jl
cmp
push
sub
or
sbb
pop
scas
(bad)
adc
inc
inc
aad
ret
(bad)
xlat
jns
push
or
push
adc
dec
pop
movs
adc
xchg
dec
mov
dec
or
mov
sahf
rcl
cmp
jnp
sub
es
aas
push
std
shr
mov
push
ror
and
jo
gs
mov
dec
mov
jns
mov
jp
cmp
rcr
cmp
jns
jne
jmp
jmp
loope
xor
inc
and
mov
enter
jae
and
push
in
sahf
cmp
fld
sbb
(bad)
imul
je
inc
sub
mov
mov
jb
inc
dec
fadd
ins
mov
jae
push
and
xchg
loop
mov
push
enter
cmc
mov
sbb
loop
jmp
mov
add
mov
loope
push
sub
adc
fisub
sub
sbb
jne
dec
add
mov
test
(bad)
hlt
mov
fnstenv
xchg
dec
test
mov
leave
jo
pop
xor
(bad)
lods
call
fsub
test
jmp
jl
js
fstp
outs
outs
jmp
shr
dec
xchg
cli
mov
mov
sbb
popf
and
xchg
sub
inc
xchg
dec
and
mov
rep
and
xchg
cmp
jge
fwait
mov
nop
push
jl
xchg
sub
data16
loop
std
jno
cmc
and
cwde
scas
dec
pop
dec
mov
scas
in
fs
int
popa
adc
enter
aad
jp
mov
sti
adc
je
push
sub
mov
inc
mov
shr
sbb
xchg
shl
dec
adc
xor
fdivr
push
cwde
add
lahf
dec
aas
fcom
xchg
mov
mov
gs
sub
scas
das
cmp
aad
xor
jae
cmp
sub
aas
push
mov
pop
out
and
xchg
xchg
and
jge
mov
stc
jmp
push
or
cmp
scas
in
sar
lds
fs
inc
fdiv
call
rol
xchg
mul
pop
pushf
fild
movs
jb
sahf
sub
xor
inc
sub
call
ss
leave
repz
int3
pop
pushf
and
jp
xlat
xchg
hlt
push
jg
sbb
mov
out
or
pop
scas
sub
sahf
mov
jb
mov
cld
int
jo
repnz
dec
out
es
jl
hlt
and
push
xchg
sub
cdq
or
adc
ffreep
dec
dec
dec
loope
fst
das
scas
inc
jns
or
jne
into
hlt
fisub
jp
push
sahf
mov
push
clc
sub
test
add
ss
lahf
ins
sub
xchg
inc
enter
jg
and
push
cmps
test
push
inc
pop
sahf
fist
outs
xor
call
mov
icebp
leave
jecxz
(bad)
bswap
jmp
jle
and
pop
inc
scas
add
and
sub
test
div
pop
push
sub
push
or
mov
pop
fwait
cmp
cmc
xlat
or
fild
xor
adc
cld
mov
dec
idiv
call
sub
les
lods
je
aad
add
lods
dec
psubsw
repz
mov
nop
in
adc
imul
cmp
xchg
bound
push
fcom
(bad)
dec
sub
shl
out
xor
sar
pop
mov
pop
(bad)
in
push
mov
jo
jl
adc
pop
je
push
adc
sub
xchg
push
pop
or
cmps
addr16
loope
pop
cmps
pusha
ret
shr
xor
fsincos
xlat
stos
sub
mov
shl
(bad)
jnp
inc
data16
add
push
add
leave
xchg
xchg
push
jns
inc
sub
or
mov
pop
inc
jge
dec
call
(bad)
jae
into
jp
addr16
jno
pop
sub
loope
jl
fxch
ins
cmps
in
push
popa
outs
ins
out
and
cmp
xchg
mov
xor
lea
cmps
mov
jmp
sub
push
jo
call
and
daa
jp
sbb
mov
fnstcw
sub
in
outs
int3
nop
retf
out
das
xor
(bad)
or
pop
stos
xor
jmp
mov
inc
fsubr
lds
(bad)
pop
xchg
scas
sub
or
jne
mov
pop
add
mov
xchg
int
lock
jg
xchg
push
cmp
push
rcr
movs
retf
call
mul
shl
cdq
mov
je
xor
in
adc
cwde
loopne
dec
pop
sbb
test
adc
imul
in
pop
(bad)
sub
jmp
cmp
cmp
in
adc
outs
jmp
mov
leave
mov
sub
les
mov
les
(bad)
mov
call
sbb
out
jo
jmp
loop
push
adc
jmp
in
or
lods
inc
lahf
rcl
stos
fisttp
or
xchg
mov
push
out
adc
xchg
out
sbb
jmp
pop
es
rcr
cmp
xchg
aad
mov
aas
arpl
neg
daa
jno
sbb
ss
dec
pop
jnp
out
shr
pop
lods
and
ins
mov
mov
mov
ja
adc
adc
and
mov
push
icebp
std
je
inc
gs
pop
mov
and
ja
popa
in
xor
mov
enter
and
or
mov
cmp
inc
scas
pop
mov
pop
inc
sbb
or
cmp
cmp
xchg
(bad)
adc
jl
imul
mov
retf
or
add
inc
pop
inc
int
jmp
cs
inc
sub
pop
ror
shr
jp
or
pop
(bad)
pop
or
cmps
inc
sbb
icebp
sbb
xor
sbb
icebp
pusha
jns
rol
in
(bad)
jge
in
dec
pop
mov
stos
xlat
loope
aam
mov
ins
repnz
out
cli
xlat
int
rol
and
lahf
and
outs
xchg
loopne
adc
cmp
idiv
add
dec
mov
lods
out
ss
mov
xchg
or
nop
push
fsub
psadbw
vpaddsb
in
jmp
aad
xchg
inc
sub
pop
arpl
push
sahf
jnp
xchg
dec
outs
mov
shl
lods
inc
movs
or
or
xchg
mov
jmp
cmp
and
push
add
xchg
push
lea
sub
aas
movs
inc
popa
ficomp
and
fnstcw
fst
stos
jb
test
jae
jb
aam
jne
jecxz
pop
or
retf
add
clc
mov
int3
sbb
push
add
mov
dec
repz
sbb
in
xchg
shl
ins
xchg
xchg
sar
cs
js
outs
iret
ss
jnp
or
adc
jno
ins
gs
adc
and
jmp
sub
push
into
pop
mov
inc
jbe
add
jecxz
push
sub
test
add
(bad)
ror
mov
fstp
add
mov
aas
or
inc
aam
or
mov
ret
scas
sar
pop
test
cmp
cmps
stc
pop
sub
sahf
sub
cli
not
pop
mov
cmp
arpl
xor
test
std
repnz
fist
cmp
cdq
rol
jmp
fcomp
cdq
xchg
sub
out
stc
fst
and
addr16
adc
or
cmp
imul
int3
in
cmp
inc
scas
test
movs
aam
add
mov
fistp
cmps
xchg
jns
ds
movs
jnp
scas
out
out
and
shr
mov
fst
enter
jae
iret
test
shl
imul
cmp
shl
dec
jmp
xor
mov
je
cld
push
shr
inc
leave
ror
dec
mov
mov
mov
inc
cld
(bad)
jl
mov
arpl
sbb
stos
pop
fsubr
mov
xlat
pop
imul
lahf
enter
fwait
(bad)
in
jmp
outs
inc
mov
pop
sbb
fldenv
das
in
xor
cmp
out
mov
jmp
movs
retf
add
xchg
pop
inc
ds
(bad)
stos
in
jecxz
pop
fcmovne
test
sar
xor
sbb
push
lods
mov
es
fist
dec
and
jmp
rcr
pop
out
test
sbb
call
sbb
xlat
xor
fidiv
cmp
pop
repz
movs
mov
in
enter
imul
sbb
mov
and
leave
add
xlat
rol
fnstcw
xchg
fcomp
ja
mov
xlat
cmc
dec
sub
add
inc
lods
xor
es
pop
lds
add
sti
adc
or
push
movs
jecxz
add
adc
or
pop
stos
mov
xor
leave
mov
sti
ins
pop
daa
gs
cli
js
jno
outs
int3
out
sbb
pop
mov
cmp
jge
sub
das
jo
(bad)
and
push
cld
ror
mov
or
sbb
and
daa
adc
out
mov
cmp
mov
gs
std
xchg
(bad)
loopne
sbb
je
test
fimul
fsub
and
enter
sub
jbe
cmp
jbe
int3
pop
or
xor
hlt
xchg
sub
cli
pop
pop
jns
adc
ror
mov
jb
lods
jle
cmp
push
scas
in
jmp
sbb
mov
push
and
cmps
xchg
shr
push
dec
stos
call
sahf
fmul
scas
(bad)
mov
or
xchg
fisttp
push
fs
jmp
adc
sbb
lods
dec
pushf
push
ins
ret
hlt
stos
xchg
cld
pop
push
fucomi
iret
ins
and
cli
jno
sbb
and
jg
cmp
inc
ds
aad
shl
frstor
ja
xchg
shl
out
es
pop
push
pop
call
and
repnz
ins
gs
lea
xchg
xchg
aad
pushf
stos
inc
leave
repnz
sub
or
push
fldcw
cmps
out
movs
add
arpl
jl
(bad)
mov
and
ret
pop
push
sar
sbb
mov
jmp
bound
imul
imul
dec
je
cmp
and
dec
outs
fdiv
push
mov
inc
mov
(bad)
jg
rcr
cmps
cld
pop
sub
mov
in
mov
(bad)
nop
sub
xchg
jle
xchg
cmp
cmps
jo
(bad)
aam
mov
cwde
mov
mov
test
lahf
je
jge
and
rcr
in
cli
push
in
adc
ds
and
cmp
mov
inc
push
inc
adc
stos
sub
cdq
inc
mov
mov
adc
jg
xchg
cmp
idiv
ja
in
clc
cdq
sbb
pop
jle
xor
jbe
aaa
pushf
xlat
stc
mov
lahf
in
leave
gs
xchg
mov
xor
call
stos
repnz
mov
out
scas
outs
or
xchg
mov
adc
mov
lock
add
stc
scas
mov
sub
mov
adc
cmps
adc
fcmove
sbb
xor
das
mov
(bad)
mov
fcmovne
aad
jae
xchg
dec
adc
ror
mov
dec
jns
pop
out
mov
and
ss
mov
iret
bound
add
and
pop
or
aas
xor
fidivr
cli
dec
call
outs
inc
shr
xor
mov
ss
mov
pop
adc
mov
inc
dec
in
sar
and
out
cmc
push
jle
sub
out
mov
fdiv
fsubp
mov
mov
mov
xor
pop
and
aam
or
jecxz
cmp
cmp
test
inc
mov
mov
gs
mov
push
adc
mov
retf
mov
(bad)
mov
sbb
cmps
clc
imul
repz
sbb
test
test
cs
stos
cld
jno
sahf
mov
or
adc
xchg
sub
jb
outs
hlt
mov
lock
sub
jno
and
ss
fistp
adc
jg
jp
dec
xor
xlat
adc
pushf
inc
fiadd
retf
jns
push
mov
adc
out
cmc
inc
pop
and
cli
dec
inc
(bad)
cmp
cmps
int3
cmp
push
nop
(bad)
jbe
scas
addr16
mul
cmp
int
add
xor
punpckhbw
jp
ret
enter
and
sbb
jne
stos
addr16
or
push
push
cmp
clc
mov
and
in
sbb
dec
push
push
dec
sub
jmp
imul
dec
xor
and
sbb
sbb
fwait
inc
rcr
push
adc
jno
inc
or
jmp
mov
rol
shl
es
(bad)
jl
cmp
pop
xor
hlt
ror
sub
popa
jae
xchg
mov
push
sbb
jge
pop
mov
xchg
cmp
mov
xchg
jp
sti
arpl
lds
lea
cmp
xor
and
dec
jge
mov
cmc
inc
lods
outs
adc
xchg
out
int3
ds
(bad)
retf
add
inc
jo
int
cs
fdivr
and
test
stos
nop
out
push
aam
mov
scas
cmp
mov
push
int
and
outs
jo
fwait
arpl
ror
or
push
jle
xor
ins
mov
in
jmp
jmp
cdq
lods
push
out
mov
or
loop
(bad)
and
fdiv
inc
sar
inc
sbb
lods
cmp
shl
movs
cld
cmp
or
stos
(bad)
pop
pop
sbb
sbb
arpl
scas
push
fdivr
fiadd
aas
test
fdivr
mov
inc
retf
(bad)
pop
jmp
pop
jge
sub
das
adc
fisttp
jno
xchg
imul
add
mov
xchg
pop
fsub
shl
loop
or
lock
sbb
add
sbb
addr16
push
(bad)
fdivr
mov
popf
pop
sub
inc
sbb
aas
or
mov
ret
jl
(bad)
dec
pushf
pop
pop
sbb
aad
sbb
loopne
or
(bad)
shl
js
sub
movs
cwde
adc
sub
mov
push
neg
rcl
in
xchg
push
xor
or
cmp
imul
ss
jge
idiv
or
and
shr
mov
arpl
scas
push
inc
imul
into
adc
cli
rcl
call
fsubr
mov
mov
ins
mov
add
add
out
pop
add
push
cmps
out
mov
aam
adc
fs
mov
push
sub
pop
sub
(bad)
fisttp
cdq
div
adc
out
or
xchg
jecxz
mov
dec
dec
jb
xchg
add
repnz
cli
or
stos
out
sub
fisubr
retf
stos
rcl
push
xchg
test
mov
ja
(bad)
movs
(bad)
imul
lods
adc
mov
push
mov
scas
add
pop
ins
test
das
movs
xor
sbb
pusha
push
rcr
mov
and
mov
sbb
fs
lahf
ror
(bad)
push
ret
ss
push
inc
outs
sbb
pop
add
es
mov
xlat
push
mov
je
int3
fcomp
fcom
mov
sbb
movs
mov
push
enter
dec
xlat
push
mov
cmps
xor
and
(bad)
popa
popa
rep
gs
jne
ins
dec
dec
and
mov
xor
(bad)
mov
retf
pop
leavew
adc
cmp
xor
inc
fprem
or
dec
cmp
mov
iret
add
pop
fadd
adc
data16
dec
cli
push
test
and
push
nop
test
fnsave
out
mov
pop
jnp
loopne
ret
pop
cld
test
int
push
sub
not
mov
push
dec
daa
xor
jge
or
inc
aam
outs
xlat
sub
test
ficom
movs
xchg
pop
sub
sbb
nop
and
out
pop
loop
aam
mov
mov
retf
mov
lock
push
or
outs
pop
test
or
vandpd
lods
(bad)
fdiv
cdq
mov
xchg
push
dec
(bad)
jns
std
push
mov
xchg
inc
scas
and
xlat
es
mov
aas
jns
add
ins
pusha
add
add
adc
sahf
push
cmp
sbb
ins
pushf
cld
cld
test
repnz
test
loop
cmp
or
adc
mov
pop
xlat
fild
dec
inc
push
xchg
jge
(bad)
sbb
push
xchg
pop
(bad)
ja
dec
sbb
cmps
jecxz
cmp
out
add
scas
jl
xchg
repnz
jmp
rol
movq
int3
outs
pop
push
pop
mov
out
add
dec
mov
xor
ins
pop
stos
push
mov
mov
rol
ins
outs
in
jmp
data16
sbb
jmp
push
mov
(bad)
stos
mov
mov
punpcklwd
xchg
jmp
pusha
mov
retf
cli
(bad)
fist
loopne
mov
cmps
push
push
xchg
and
xor
mov
fisttp
out
push
push
out
mov
push
pop
inc
inc
sbb
mov
fist
sbb
jns
lahf
or
and
xor
lahf
cmp
fwait
xchg
pop
popa
mov
into
or
out
adc
pop
adc
(bad)
or
lds
mov
add
xchg
ds
inc
xlat
mov
js
cmps
adc
mov
bound
repnz
adc
or
inc
mov
jg
(bad)
add
mov
push
mov
std
retf
xchg
pop
inc
pop
in
call
mov
jno
xor
xchg
ror
shl
sbb
add
cmp
ja
pop
sub
jmp
iret
mov
or
movs
ja
aas
mov
mov
test
repz
das
inc
lahf
xchg
ds
out
stos
xchg
push
xor
popf
test
sbb
pop
out
pop
inc
mov
mov
mov
or
icebp
dec
in
int
pusha
mov
jl
mov
mov
(bad)
fist
jmp
mov
(bad)
jge
push
cs
test
(bad)
sbb
jne
and
stos
and
adc
stos
jmp
mov
mov
daa
into
repnz
xchg
retf
test
mov
sub
cmp
pop
inc
fisub
fs
stc
push
xor
loop
mov
add
stc
adc
das
sub
inc
sbb
and
(bad)
cmps
jo
pop
add
outs
aam
mov
(bad)
jae
mov
mov
xchg
jle
dec
add
mov
sub
fist
push
sbb
out
in
shl
xchg
popf
xor
cld
jno
mov
cmp
aam
xchg
add
stc
data16
int3
fst
(bad)
arpl
out
test
addr16
jne
addr16
xor
es
cmp
mov
push
inc
lds
stc
fcom
mov
cmp
mul
xor
dec
test
sub
je
in
sahf
adc
stos
jmp
ror
(bad)
jl
push
mov
cwde
dec
int3
adc
sbb
or
add
repnz
dec
cmp
pop
dec
ret
pop
push
iret
out
sahf
jne
mov
jbe
sub
bound
sbb
nop
popf
stos
inc
stos
adc
cmps
sbb
xor
cs
lahf
into
fnstcw
add
xor
dec
jge
and
pop
stc
cmp
mov
sub
daa
cmp
mov
(bad)
fucomp
pop
dec
inc
fsubr
fld
shl
adc
sbb
call
ret
push
push
pusha
mov
mov
mov
les
jge
push
sbb
aaa
jmp
cwde
sub
retf
adc
lods
add
cs
xlat
inc
sbb
(bad)
int3
pop
or
scas
cmp
test
xor
jecxz
mov
xchg
lea
jp
inc
push
pop
iret
out
mov
ret
xor
add
pop
mov
scas
adc
addr16
sbb
in
and
pop
cli
or
or
sub
push
sub
adc
add
daa
pop
mov
shl
xor
fistp
or
jl
adc
repnz
popf
(bad)
mov
neg
js
ins
dec
cmp
xchg
cwde
jno
and
dec
test
mov
ss
out
mov
dec
mov
ja
push
stos
xor
adc
pushf
test
je
(bad)
fnsave
xchg
cmps
push
mov
mov
push
test
push
pop
ja
xor
sbb
je
gs
fidiv
out
cmps
leave
add
pushf
jp
shr
jmp
int
adc
(bad)
mov
add
or
adc
and
(bad)
iret
jnp
bound
(bad)
fidiv
adc
scas
fdiv
sub
cmp
adc
xor
sub
js
scas
jg
mov
pop
push
stos
dec
scas
cmp
cmp
mov
cmp
iret
arpl
pop
loop
fs
mov
mov
push
outs
sbb
out
es
jl
fnsave
mov
dec
rol
fsub
pop
sub
sbb
repz
or
mov
xchg
sub
jns
sbb
cs
ret
pop
cmp
aas
cwde
sar
cmc
dec
push
dec
or
or
fist
cld
unpcklps
sub
mov
aaa
pop
jmp
inc
sbb
test
ss
jle
call
fmul
out
pushf
fiadd
pop
sbb
xchg
aam
loope
test
frstor
push
ficomp
jp
dec
inc
loopne
in
scas
add
adc
inc
lds
inc
popf
stos
sbb
in
inc
jmp
stos
push
not
sbb
dec
cli
mov
mov
jmp
pop
and
out
leave
call
or
push
mov
std
xchg
iret
cmc
repnz
jp
xchg
das
call
push
arpl
hlt
mov
add
mov
mov
stos
push
cmp
repnz
xor
jle
inc
fcomp
jo
mov
sub
cli
jecxz
shl
rol
add
nop
stc
(bad)
(bad)
call
push
shl
stc
mov
jbe
mov
push
imul
gs
gs
int3
mov
cmc
shl
push
sub
out
sbb
ds
xchg
and
cld
popa
sub
inc
retf
or
outs
cmp
inc
push
rcl
xchg
adc
add
jno
jb
aam
sub
mov
cmps
inc
cmp
mov
movs
sbb
jmp
ss
xchg
js
push
pandn
dec
sbb
or
fnstsw
push
das
dec
sbb
lock
stc
mov
fmul
test
into
test
inc
std
jae
into
sub
cmps
aad
(bad)
fld
shr
inc
(bad)
sbb
xchg
sahf
movs
xor
das
pop
fldcw
(bad)
push
xchg
cmps
xor
xor
fnstenv
retf
(bad)
mov
jmp
dec
pop
call
shl
mov
push
retf
sub
and
(bad)
jecxz
enter
mov
inc
dec
mov
mov
xor
jbe
inc
mov
fcomp
push
into
mov
add
mov
es
mov
or
sub
mov
jmp
in
inc
or
loopne
sbb
hlt
adc
clc
mov
ret
loopne
dec
cmp
jb
retf
out
inc
mov
sbb
(bad)
dec
cmp
int
cmp
in
xchg
cmps
lds
push
stos
cwde
(bad)
popf
repz
and
adc
(bad)
fdivrp
repnz
sub
mov
push
mov
jbe
inc
mov
movs
imul
enter
(bad)
xor
and
cmc
test
sub
and
fist
dec
in
adc
adc
in
test
inc
in
push
pop
repz
mov
stos
hlt
adc
and
sbb
fwait
test
xchg
clc
push
retf
pusha
fidiv
adc
fidiv
push
xchg
mov
(bad)
ss
aam
stos
add
inc
dec
sar
lea
xchg
push
call
call
inc
daa
nop
xchg
ret
and
inc
xor
shl
retf
xchg
mov
sub
std
mov
cmp
aam
and
pop
pop
std
das
aad
out
ins
inc
jge
xor
inc
xchg
lock
or
mul
rcl
fs
xchg
dec
add
loopne
mov
mov
in
rcl
mov
ja
retf
pop
mov
adc
dec
std
call
jns
adc
call
stc
mov
sub
pop
rcl
xor
dec
jne
psrlq
sub
adc
dec
dec
add
xchg
xchg
loope
mov
mov
inc
sub
test
ins
(bad)
or
scas
(bad)
push
mov
mov
mov
bound
cmp
jnp
pop
inc
push
fbstp
loope
sub
and
sbb
repz
cmp
xlat
js
aad
mov
mov
dec
loope
cdq
ss
mov
mov
(bad)
mov
cmp
aam
lods
cs
sbb
sub
outs
outs
(bad)
xchg
cmps
cmp
rol
cmp
inc
pushaw
xor
and
sbb
outs
adc
stc
sub
jns
cmp
imul
arpl
imul
push
into
jo
mov
and
add
push
add
fld
(bad)
out
daa
out
mov
mov
xchg
mov
cdq
je
jg
push
icebp
push
hlt
push
call
fadd
push
(bad)
retf
test
test
pop
cwde
imul
jecxz
adc
icebp
cmc
imul
movs
ins
push
dec
sub
mov
dec
lahf
sbb
xlat
fs
bound
mov
fucomip
popf
push
mov
in
shr
ficomp
popf
mov
stc
out
aaa
outs
dec
dec
cmp
in
lock
rol
mov
mov
add
arpl
push
hlt
inc
cs
mov
enter
mov
xchg
shl
inc
fnclex
or
out
retf
push
inc
fs
push
popa
test
adc
sbb
test
pop
mov
push
push
or
neg
hlt
aaa
ret
add
test
mov
adc
test
scas
xchg
ds
leave
push
retf
jmp
mov
cmp
mov
popf
sbb
push
fisttp
dec
sub
mov
pop
cs
push
and
test
or
mov
ja
add
(bad)
fs
sbb
lahf
popa
mov
cmp
push
fimul
fisub
(bad)
jmp
jnp
inc
and
fcom
mov
lea
mov
mov
sub
mov
sbb
arpl
add
fwait
loopne
adc
jno
dec
pop
pop
jns
daa
xchg
stos
movs
shr
in
jne
add
aas
push
mov
jecxz
call
and
sub
add
mov
pop
or
or
leave
xor
cmp
mov
push
lock
int3
nop
data16
(bad)
ds
xlat
mov
arpl
cmps
cdq
int
push
inc
dec
mov
jb
ret
mov
pop
mov
push
scas
cmps
daa
int3
das
scas
test
sub
push
mov
cli
jmp
ret
xor
mov
cmp
fidiv
out
cld
pop
imul
and
outs
hlt
sub
mov
jne
dec
jl
push
xchg
mov
sbb
mov
gs
mov
rol
adc
pop
call
jl
(bad)
pop
es
and
inc
loope
add
push
adc
std
mov
in
test
or
sbb
bound
ret
out
lea
adc
push
daa
lea
xor
daa
jnp
popf
(bad)
lahf
retf
xchg
or
cmps
dec
pop
ror
loop
dec
add
pop
call
bound
dec
out
ror
(bad)
adc
test
les
mov
loopne
clc
xchg
jg
push
pusha
movs
pop
jo
add
loopne
out
sub
add
stos
pop
mov
in
not
jbe
jnp
xor
xchg
fmulp
or
xchg
test
mov
jb
pop
jmp
pop
mov
in
ret
enter
ja
nop
add
push
mov
jp
xchg
cmp
test
inc
pop
outs
gs
clc
cmp
push
retf
test
movs
fadd
std
in
int3
push
(bad)
adc
cld
ret
inc
ins
fwait
ja
in
and
inc
in
es
add
cmps
pop
(bad)
fdiv
mov
jg
xchg
dec
inc
cmp
push
stos
outs
int
addr16
sub
stos
fwait
in
int
dec
add
daa
dec
test
ficom
inc
stos
add
lock
mov
ds
jno
push
inc
js
xor
add
(bad)
frstor
push
pop
lock
inc
adc
cmp
pop
mov
push
mov
mov
es
mov
and
aam
shr
sbb
pusha
imul
cmp
fcomp
mov
jle
bound
mov
add
std
scas
dec
(bad)
enter
dec
shl
movs
cmp
mov
test
inc
jle
lock
into
aam
test
pop
xchg
mov
ds
imul
std
sbb
jns
inc
cmp
or
inc
adc
test
add
adc
mov
inc
sub
jno
cli
push
out
jbe
xlat
inc
sub
pop
data16
(bad)
mov
test
loop
test
add
jp
sub
dec
movs
stc
adc
adc
add
ins
push
(bad)
out
dec
jmp
shl
jg
xchg
mov
xchg
inc
fcmovu
jp
pushf
shr
ds
daa
xchg
out
mov
les
sahf
jp
mov
stos
(bad)
daa
push
sbb
jmp
cmp
xor
mov
sub
aaa
rol
jl
cmp
push
fild
fisttp
(bad)
dec
xchg
jb
xor
and
mov
stos
sbb
push
sbb
pop
push
push
aam
stos
in
loopne
mov
ja
clc
xchg
mov
pop
inc
cmp
mov
inc
pop
xchg
pop
fild
mov
lea
sahf
sub
call
lods
jbe
cmp
pop
sbb
(bad)
aam
mov
pop
adc
pushf
cmc
inc
imul
stc
cdq
pand
stos
or
(bad)
push
sub
retf
pop
push
adc
popa
lods
popf
or
push
or
add
xchg
push
pushf
cdq
ret
add
nop
and
aaa
mov
inc
jmp
dec
arpl
inc
movs
pop
shl
jg
sahf
inc
xor
jns
adc
retf
inc
sbb
outs
shr
push
mov
scas
test
push
sti
arpl
or
xchg
xchg
xchg
adc
pop
lahf
jp
rol
dec
inc
mov
xchg
dec
loopne
mov
aaa
mov
das
sbb
sbb
icebp
loopne
or
mov
mov
xor
scas
dec
cmp
mov
ficom
shl
(bad)
pusha
xchg
stc
mov
mov
jg
mov
out
in
(bad)
fwait
jg
cmc
sub
xchg
mov
mov
mov
mov
push
add
jecxz
mov
pop
xor
xchg
mov
dec
add
jnp
(bad)
mov
fcmove
mov
jg
(bad)
fs
lods
inc
xor
(bad)
mov
repz
in
movs
push
cmp
sbb
add
inc
xlat
fisub
mov
xor
retf
shl
ret
fwait
jl
out
ror
stos
push
xchg
cmp
cwde
pop
pop
pop
cli
es
cmp
fidivr
mov
fdiv
call
test
jno
add
mov
dec
and
jnp
dec
aad
mov
push
pop
icebp
cmps
cdq
or
mov
jg
(bad)
ror
scas
loop
test
pusha
cwde
bnd
pop
(bad)
xchg
jo
cdq
out
sub
test
lods
push
push
xchg
dec
scas
sbb
jo
mov
mov
ret
out
jne
int3
adc
xor
adc
pop
loopne
mov
int
fsubp
sbb
loope
cmp
or
fmul
stos
test
jae
jge
mul
mov
push
mov
mov
inc
mov
mov
cmp
gs
push
add
cli
cli
inc
movs
cmps
pop
aad
movs
out
fs
xchg
sbb
mov
popf
pop
adc
in
or
mov
pop
rcl
or
mov
mov
ss
es
stc
(bad)
fstp
push
jo
(bad)
sbb
jp
loope
popa
adc
pushf
(bad)
adc
sbb
bound
ret
add
dec
xchg
in
adc
mov
jp
push
mov
mul
cmps
cmp
(bad)
jns
cmps
movs
retf
sar
jne
ror
xchg
sub
xchg
sub
dec
jnp
out
xor
clc
dec
mov
mov
test
push
ret
ss
fidiv
daa
add
jl
imul
mov
fcompp
fcmovne
lods
mov
mov
inc
sub
iret
int3
adc
sbb
mov
mov
sub
popf
fimul
sub
call
adc
ret
pusha
(bad)
cmps
inc
test
xor
push
es
mov
dec
pop
xchg
add
and
or
inc
fbstp
rol
or
sbb
add
add
outs
aas
ins
xchg
push
call
cwde
call
and
ins
sbb
data16
sar
std
xchg
inc
fwait
jmp
mov
jp
sbb
pusha
mov
push
aaa
add
dec
in
add
scas
mul
dec
outs
xchg
arpl
loopne
pop
dec
lea
cmps
pushf
retf
lock
aad
sbb
xchg
popf
ss
jmp
sub
push
mov
movs
jne
and
xor
je
and
jne
pop
add
fisub
and
dec
push
cmps
lea
repnz
jae
leave
fcomip
iret
out
push
pop
sbb
out
jle
loope
rcr
fdiv
add
neg
xor
lods
sub
clc
jmp
test
and
push
(bad)
loop
inc
push
je
jmp
outs
fiadd
lahf
shl
xor
jge
push
(bad)
xchg
iret
clc
clc
ds
pusha
sbb
dec
fwait
sar
jp
movs
das
add
push
cmp
cmc
hlt
inc
arpl
(bad)
lock
sub
call
push
loop
jmp
sub
pop
adc
cmc
ret
push
scas
pop
add
push
and
or
push
repnz
and
int
gs
jae
mov
cmp
mov
sahf
mov
(bad)
inc
push
push
(bad)
repz
loope
jmp
fist
sub
shl
mov
sti
push
dec
xlat
adc
arpl
xor
retf
ja
adc
xor
push
dec
jno
outs
dec
xchg
data16
mov
sub
xchg
leave
test
outs
fbld
mov
push
popf
test
jb
fwait
xor
cmc
fxch
popa
mov
test
fisttp
daa
mov
inc
xor
sbb
test
test
pop
xchg
in
jmp
sub
hlt
mov
sbb
pop
jle
and
xchg
sub
dec
pop
std
push
aad
inc
imul
push
jbe
mov
popa
ja
jmp
data16
inc
adc
jecxz
pop
push
lods
inc
dec
push
mov
jo
sti
cmp
xor
mov
test
fnsave
push
pop
fild
ja
mov
pop
stc
ret
mov
and
fwait
push
dec
test
mov
push
(bad)
loopne
je
fcmovnbe
jle
les
pusha
sbb
rol
and
pushf
xchg
xchg
es
add
mov
pop
sub
xor
nop
fstp
out
sbb
sub
test
mov
shr
cmp
inc
shl
and
pushf
cmp
inc
cmps
xor
sti
xchg
sbb
jo
mov
xor
inc
jmp
sub
add
ficomp
scas
jne
test
xchg
jl
cmp
cmps
or
lahf
jle
test
xlat
std
xchg
inc
addr16
adc
push
mov
mul
fild
shr
inc
pop
cwde
scas
add
outs
popf
rcl
and
dec
sub
sub
bound
cmps
rcl
push
ret
cmc
fwait
sbb
mov
inc
icebp
push
fisub
(bad)
inc
mov
xor
pop
xchg
adc
cmp
adc
push
or
outs
sbb
ja
out
dec
sbb
bound
pushf
jns
jmp
jge
xchg
jg
mov
add
fisttp
jns
mov
cdq
jno
push
loop
pushf
shl
push
cmp
push
xor
mov
jo
xor
mov
add
call
shl
jnp
jmp
scas
adc
and
repnz
ins
dec
xor
mov
push
adc
mov
cdq
repz
mov
fwait
adc
addr16
lahf
cmps
mov
and
jae
lods
mov
sub
stos
lock
xchg
icebp
sbb
shr
seto
pop
jl
and
addr16
xor
movs
add
aam
add
push
stc
inc
ins
lock
je
nop
(bad)
scas
loop
cmc
xchg
jno
dec
or
ins
add
xchg
pop
add
add
stos
jmp
aad
pop
(bad)
xor
xchg
dec
mov
or
mov
mov
lahf
ins
loope
leave
stc
fisttp
mov
repnz
fdivr
or
xor
xchg
xchg
inc
mov
sbb
mov
push
push
or
nop
(bad)
fadd
cmp
mov
mov
stos
js
dec
(bad)
mov
int
fldenv
jp
cdq
or
cld
ror
into
inc
sbb
or
out
jl
addr16
in
retf
mov
(bad)
push
movs
loope
fmul
and
mov
jne
xchg
cmc
shl
shl
ds
mov
and
add
pop
or
jle
outs
mov
push
lods
scas
stc
repz
sahf
fs
jno
add
inc
mov
(bad)
(bad)
scas
adc
ins
mov
lods
xchg
sti
jmp
test
pop
push
add
aam
or
sub
dec
icebp
smsw
xchg
push
pop
clc
es
call
inc
ret
mov
dec
shr
dec
call
push
sbb
adc
mov
and
and
in
arpl
aaa
add
fcom
push
jecxz
xchg
prefetch
or
ds
sbb
mov
bound
pop
test
test
retf
mov
add
stos
inc
daa
sbb
mov
mov
jl
jbe
fidiv
sub
fs
dec
cmp
mov
push
lahf
ins
mov
es
jno
retf
stc
or
inc
or
imul
popa
push
push
test
dec
xor
repnz
inc
aad
mov
cmc
mov
push
xchg
push
fucomp
jnp
mov
push
int
mov
les
jg
(bad)
fcomp
push
add
call
sar
sti
loope
out
push
int
dec
xchg
pop
movs
ja
mov
fnstsw
and
adc
in
pop
div
push
clc
jle
aam
dec
pop
jo
push
cld
cmp
ss
int
mov
adc
inc
cmp
daa
sub
fwait
jl
add
pop
dec
sar
lds
pop
sub
mov
inc
movs
je
cmp
ja
mov
(bad)
in
cli
hlt
inc
bound
lock
adc
sub
hlt
(bad)
sar
jmp
ret
cmp
ss
(bad)
nop
jae
mov
jge
xor
add
mov
xchg
test
(bad)
jo
dec
and
shr
fdiv
mov
xlat
mov
jbe
xor
ror
fdivr
les
repnz
pop
fs
lahf
cmp
pop
iret
out
push
inc
into
xchg
push
aad
dec
push
(bad)
cmc
js
add
daa
pusha
dec
test
fwait
cli
scas
cmp
(bad)
cmp
clc
lahf
push
clc
sub
addr16
inc
adc
jl
imul
and
movaps
mov
imul
inc
mov
push
cwde
shl
jmp
lahf
ins
xlat
popa
dec
fs
jmp
cmc
es
mov
call
ds
(bad)
jns
mov
cmc
sub
sbb
push
jnp
adc
enter
loopne
cmc
div
mov
mov
xor
shl
jmp
scas
sti
daa
inc
add
inc
pop
jno
jmp
scas
retf
mov
scas
and
cmp
fbld
and
dec
psubq
add
adc
pop
mov
(bad)
pop
popa
enter
sbb
mov
fst
cld
mov
push
xor
push
lock
out
ja
push
in
inc
ficom
(bad)
cli
or
enter
mov
outs
ret
dec
loopne
adc
stc
xchg
cdq
mov
mov
mov
or
call
or
cmc
push
push
test
push
or
mov
add
dec
xor
jl
or
ficomp
jge
aas
repnz
enter
inc
movs
adc
pop
jmp
movs
(bad)
cmp
jl
fadd
mov
or
xor
mov
xchg
imul
jmp
add
popf
inc
pusha
and
in
adc
mov
or
cld
dec
jmp
ret
fwait
jns
adc
adc
in
hlt
popa
push
shl
cmp
lea
add
push
dec
jmp
add
dec
fabs
or
sub
jmp
jge
mov
dec
or
cmp
ins
xchg
retf
adc
cmp
adc
sub
xchg
retf
and
inc
xchg
imul
popf
cmc
mov
jle
jnp
jb
push
adc
push
out
aaa
out
das
mov
cmp
dec
adc
mov
repz
aad
sbb
jl
inc
arpl
and
aam
jb
sbb
inc
and
popf
stos
std
fidivr
in
dec
pop
mov
add
adc
sti
loopne
in
je
ret
jbe
ja
inc
cmps
aam
dec
imul
mov
ret
mov
or
stos
inc
and
arpl
jmp
in
aaa
mov
add
and
xor
and
rep
push
(bad)
sub
int
mov
loop
sti
xor
sub
inc
lahf
jbe
xor
(bad)
mov
cs
ret
test
inc
loopne
fs
dec
sbb
lea
cmps
or
xchg
adc
cli
add
jge
dec
cld
out
fdivrp
mov
popf
aas
jmp
mov
enter
je
pop
push
mov
sbb
(bad)
xchg
jp
je
cli
mov
rep
cs
cs
mov
sbb
bound
sbb
pop
cmps
push
ds
sbb
pop
jns
or
pop
jmp
push
popa
xor
in
or
icebp
pop
add
pop
movs
and
sub
mov
stos
das
and
lock
jge
jmp
aas
sub
dec
in
ins
or
mov
and
ins
xchg
loopne
push
mov
mov
sbb
test
mov
sbb
sbb
cs
and
scas
sbb
sti
push
js
sbb
mov
or
ret
les
cmp
and
cwde
pop
cwde
xchg
sti
or
(bad)
ja
js
jb
fmul
mov
scas
(bad)
stos
shl
sbb
mov
cmp
push
cs
ins
retf
nop
mov
cmp
or
call
scas
sbb
push
mov
push
push
in
or
push
scas
add
repnz
clc
lock
hlt
ret
mov
cmps
and
outs
jnp
mov
test
(bad)
sub
(bad)
jbe
(bad)
jnp
push
jge
mov
loopne
mov
repnz
stos
fist
xor
out
std
pop
dec
sub
sbb
icebp
add
add
les
sbb
popa
push
xor
or
icebp
das
xchg
je
dec
pop
cmp
mov
out
sub
pop
(bad)
mov
push
jle
stc
retf
mov
test
adc
xchg
bound
sub
inc
pop
nop
scas
ret
mov
pop
dec
xor
pop
cmp
push
movs
fist
sub
dec
(bad)
cmp
jns
push
hlt
push
in
dec
mov
pushf
mov
addr16
pusha
jg
mov
aas
rol
mov
ret
lahf
int
sbb
xchg
iret
push
pop
fsub
pop
add
out
lods
xor
xlat
jne
aam
call
ss
mov
test
sbb
in
jg
sahf
mov
cmp
mov
fiadd
push
int
lahf
into
dec
xchg
stos
sub
dec
and
adc
leave
sti
and
in
das
mov
cmp
and
repz
push
mov
lahf
xchg
cdq
sub
lods
xor
push
pop
shr
jp
loope
out
jnp
mov
pop
sub
mov
xchg
adc
and
inc
cmc
sub
in
push
int3
mov
add
clc
retf
pusha
inc
mov
inc
xchg
inc
jns
mov
imul
adc
dec
shl
test
imul
add
jbe
call
jl
jno
adc
mov
pushf
fisttp
and
les
sahf
jno
jecxz
int
dec
mov
outs
add
leave
rcl
add
sbb
scas
stos
mov
cwde
sub
ror
fisttp
shl
adc
adc
push
in
(bad)
sub
fs
in
inc
mov
dec
sub
sbb
adc
sti
adc
(bad)
rcl
mov
pop
adc
xor
xor
mov
outs
xchg
and
in
ds
dec
jmp
add
js
lods
outs
ret
les
bound
mov
mov
dec
stc
mov
dec
inc
loop
icebp
sar
test
(bad)
mov
pop
xchg
pusha
sub
dec
mov
in
div
add
aaa
cmps
jne
add
mov
iret
out
(bad)
in
rol
push
(bad)
mov
fsubr
push
pop
mov
lock
hlt
and
lods
ins
mov
ja
xlat
aaa
lods
sti
pushf
popf
cmp
test
xchg
loopne
stos
inc
jge
lahf
imul
lods
(bad)
movs
fild
imul
dec
sbb
clc
or
idiv
inc
cmp
test
xadd
xor
dec
hlt
cmp
lods
out
pop
jge
xchg
push
in
xchg
(bad)
pop
dec
jns
and
inc
xchg
pop
loope
sub
je
ds
lahf
test
das
adc
sahf
inc
(bad)
pop
inc
loop
push
test
mov
and
mov
jns
lahf
xor
jmp
out
mov
repz
lock
lds
push
cmp
cmp
sub
arpl
inc
inc
xchg
push
sbb
push
add
stc
int
xor
sbb
inc
and
mov
jg
jecxz
xor
out
clc
and
xor
jbe
aas
fcomp
mov
inc
add
dec
outs
or
shr
adc
xchg
fstp
mov
jb
jae
add
aas
dec
push
sahf
les
sbb
pop
inc
fld
cmp
jns
imul
mov
cmp
cmp
jne
jne
mov
cmc
imul
xchg
(bad)
iret
push
repz
or
add
hlt
mov
jl
es
adc
adc
je
retf
sar
or
dec
pop
in
sbb
sub
sub
scas
mov
xchg
and
pop
leave
fsub
pop
add
sbb
pop
test
pushf
in
loopne
popa
inc
jle
retf
adc
stos
push
enter
sub
fisubr
dec
sahf
xchg
aad
push
or
sub
sub
inc
rol
fcom
pop
and
jno
pop
push
xor
inc
mov
loopne
xchg
jge
int
inc
push
adc
sub
and
dec
pop
mov
push
popa
and
icebp
push
fisubr
rol
or
add
cmp
stos
test
mov
bound
fadd
imul
movs
ja
mov
and
shl
js
sbb
icebp
arpl
inc
sbb
adc
push
inc
inc
add
adc
imul
cld
lods
ror
repnz
rcr
mov
mov
jp
sar
sub
dec
dec
jmp
movs
jecxz
dec
mov
dec
idiv
sub
mov
and
jbe
test
rcr
scas
(bad)
stc
mov
mov
pop
push
mov
push
mov
mov
sbb
dec
test
icebp
ja
jne
out
push
pop
mov
push
aas
lods
xor
jecxz
xor
mov
stc
hlt
sbb
mov
sbb
mov
push
rcl
inc
xchg
mov
ret
cmps
or
dec
mov
lock
(bad)
adc
pushf
pop
cwde
push
add
push
es
stos
pop
call
daa
add
sub
and
add
cmp
pop
clc
pop
dec
sbb
add
add
sub
push
sub
pop
stos
mov
pop
dec
jmp
les
lods
sub
aas
pop
ficom
lock
adc
dec
das
dec
inc
pop
inc
hlt
cmps
repz
inc
sbb
jmp
add
cmp
fnstenv
pop
fwait
pop
jmp
(bad)
dec
popf
out
icebp
outs
jbe
imul
cwde
pushf
into
hlt
cmp
imul
out
les
mov
js
dec
push
pop
scas
mov
and
outs
pop
jnp
mov
sbb
outs
push
xchg
jg
in
movs
scas
dec
test
cmp
mov
imul
lahf
xchg
into
jo
sub
fwait
add
sub
sahf
ja
and
repz
ret
std
out
aam
and
ror
out
mov
(bad)
jnp
stc
cli
add
pop
add
mov
dec
sbb
mov
or
mov
add
add
or
push
xchg
call
in
cmps
adc
jecxz
or
dec
je
data16
ja
shl
shl
scas
lds
imul
retf
mov
xor
mul
xchg
cmp
movs
in
xchg
sub
push
mov
fsubr
or
mov
ins
mov
icebp
jo
dec
mov
cmp
aam
mov
jnp
xlat
sub
fmul
popa
loope
pop
sti
fild
mov
daa
add
adc
call
pusha
sub
dec
(bad)
loopne
push
les
mov
cmp
scas
addr16
push
xor
mov
xor
rol
mov
dec
mov
inc
jne
lahf
fistp
xor
and
test
ret
std
xlat
jg
js
imul
push
jecxz
add
imul
(bad)
xchg
sbb
mov
repz
dec
cmp
leave
mov
pop
cmp
stos
push
mov
ret
xor
xchg
cmp
push
mov
neg
out
sbb
scas
ins
sbb
or
cli
lock
xchg
add
mov
sub
icebp
sbb
xchg
mov
push
cmp
adc
dec
inc
gs
inc
es
add
loope
add
pop
mov
fimul
stos
movs
mov
jmp
ss
xchg
ss
cmps
daa
xor
sbb
sbb
inc
dec
test
cmc
fild
push
inc
imul
movs
stc
shr
out
iret
aaa
mov
push
add
ror
sahf
and
adc
out
pop
jne
jo
xor
adc
scas
inc
clc
imul
bound
(bad)
int3
cmp
nop
test
ja
push
test
mov
test
mov
mov
ins
dec
mov
dec
pop
xchg
xor
and
fisubr
shr
and
jp
pop
mov
sub
in
mov
lods
test
cdq
add
push
push
dec
in
in
mov
call
and
or
mov
or
nop
mov
pusha
repz
ror
test
test
scas
xchg
sbb
mov
cmps
jge
(bad)
sbb
and
lods
or
hlt
imul
xchg
leave
jne
pop
jge
neg
jb
das
push
es
dec
cmp
lods
jecxz
(bad)
and
adc
mov
jg
xor
cli
das
(bad)
sub
outs
loop
pop
and
jle
cmp
mov
and
inc
rol
daa
jge
dec
mov
mov
add
jnp
icebp
sbb
jnp
lahf
add
jmp
xchg
or
mov
in
mov
mov
jnp
adc
sbb
mov
les
xor
jae
pushf
(bad)
imul
sub
adc
push
fiadd
push
loope
pop
sbb
cmps
inc
repnz
jg
ja
mov
push
xchg
cmps
push
(bad)
xor
xchg
jp
pop
(bad)
movs
outs
out
popf
fdivr
in
mov
inc
fmul
ficomp
dec
mov
mov
out
xchg
lods
mov
dec
lods
pop
jmp
ja
fbld
cld
out
nop
ret
adc
aam
jle
push
add
inc
fidivr
mov
dec
(bad)
fld
das
imul
fdivrp
inc
inc
pop
adc
jg
mov
push
cwde
stos
sub
imul
addr16
or
inc
inc
push
inc
in
cmps
jge
or
lock
inc
jno
dec
pop
mov
neg
adc
sub
mov
rcl
cmp
or
lds
mov
repnz
imul
mov
in
and
xor
stos
cmc
pop
call
out
pop
dec
lods
nop
aas
cmp
and
sub
mov
jne
push
mov
pop
mov
push
jge
or
cli
(bad)
adc
sub
add
out
xchg
jns
dec
pop
jge
mov
(bad)
repnz
test
lahf
add
test
xchg
mov
dec
mov
push
push
xlat
mov
mov
repz
mov
pop
pop
xchg
sbb
xchg
out
mov
daa
test
sbb
(bad)
sbb
jg
out
pop
cmps
scas
dec
inc
outs
adc
fwait
sbb
pushf
neg
inc
mov
(bad)
jle
mov
sar
fnstenv
add
xchg
imul
stos
add
mov
cmp
adc
jae
out
push
scas
jb
mov
imul
icebp
mov
imul
test
adc
enter
xchg
loopne
dec
jae
mov
cli
imul
cmp
out
or
or
ins
addr16
sub
aaa
dec
jmp
enter
xor
call
push
sbb
cmp
and
(bad)
frstor
xchg
jbe
outs
inc
fsub
(bad)
push
jae
sbb
int
(bad)
xchg
cdq
push
enter
loopne
xlat
inc
fist
cld
out
imul
(bad)
call
fdivr
cdq
out
(bad)
adc
ja
leave
je
mov
call
out
lahf
inc
sahf
adc
call
xchg
aas
add
into
push
mov
dec
mov
movs
inc
sbb
dec
ss
ret
jle
add
stos
out
stos
arpl
popf
push
test
ror
test
pop
mov
lds
dec
mov
bound
add
pop
and
mov
sbb
jnp
popa
iret
jecxz
mov
sub
xor
sbb
jne
pop
dec
pop
mov
pop
mov
test
xor
mov
and
xor
mov
mov
mov
nop
pop
loope
call
repz
push
retf
scas
sub
enter
mov
test
cmps
jle
popw
retf
movs
add
xor
mov
int
repnz
shl
add
pop
xor
cmps
sbb
push
mov
ja
stc
or
sbb
push
ds
mov
movs
or
add
hlt
and
ins
das
stc
pop
mov
out
or
mov
dec
ins
adc
int3
pop
and
mov
jb
fidivr
xor
arpl
add
push
jl
iret
fcomp
mov
or
ret
mov
daa
fneni(8087
dec
lahf
lahf
jmp
(bad)
ins
inc
push
add
movs
ret
cdq
sub
and
sbb
jp
pop
cdq
sub
aas
dec
mov
mov
aad
test
data16
movs
jns
outs
nop
fs
dec
pop
or
jmp
or
dec
movs
push
mov
cmp
pop
inc
inc
bound
int
ficomp
cmps
add
pop
mov
mov
fcos
adc
lds
out
jno
mov
adc
add
adc
aad
mov
inc
test
inc
mov
out
aad
mov
add
mov
addr16
adc
mov
inc
push
mov
or
sub
inc
xchg
sbb
cli
out
xchg
jae
adc
stos
dec
ret
les
lea
mov
pop
mov
and
clc
xor
dec
sahf
sbb
lods
pop
mov
or
ret
movs
outs
jecxz
inc
sti
sahf
in
mov
hlt
push
jbe
adc
and
fdiv
adc
pop
adc
adc
inc
imul
cmp
push
xor
rcr
xchg
inc
mov
cmp
add
cmps
out
call
ret
movs
daa
jmp
hlt
jmp
ins
sub
mov
dec
sbb
aaa
enter
nop
mov
pop
mov
mov
hlt
data16
xchg
into
jmp
test
fs
jmp
repz
scas
and
ss
add
xchg
mov
imul
lahf
sbb
jl
pop
push
je
mov
stos
fxch
pop
and
jo
popf
jb
jb
shr
mov
bound
and
outs
xchg
ins
inc
cdq
adc
test
out
test
(bad)
jmp
adc
xor
mov
dec
pop
in
icebp
jnp
push
ds
movs
xlat
cdq
ror
mov
(bad)
mov
cmp
addr16
push
sub
(bad)
rcr
push
int3
lods
aas
inc
sub
dec
or
pop
or
mov
jge
data16
or
push
cmps
inc
mov
aam
rcr
push
and
push
inc
neg
lea
inc
in
daa
inc
sub
dec
fldl2t
cmps
and
or
stc
cwde
ins
imul
sub
or
add
js
sub
retf
mov
stc
nop
cmc
mov
xlat
push
cdq
cmps
in
and
jecxz
and
jp
adc
sub
or
pop
push
add
loop
sub
push
stos
in
js
adc
cld
neg
jmp
in
xchg
fwait
daa
mov
fld
mov
dec
or
sbb
push
fbstp
mov
imul
ss
dec
push
sar
pushf
jmp
push
int3
dec
jp
(bad)
std
push
or
jb
xor
dec
push
fsubr
mov
adc
sbb
xor
pushf
mov
clc
add
mov
pop
xchg
jecxz
or
cmp
retf
and
mov
jno
cld
sti
hlt
mov
mov
or
sub
lods
ds
xchg
adc
inc
add
cmp
cmp
fcom
(bad)
cwde
mov
mov
fwait
imul
arpl
movs
cwde
ret
out
movs
xchg
adc
adc
(bad)
mov
popf
enter
mov
add
xor
nop
not
mov
push
mov
dec
shl
ror
xchg
cmps
retf
mov
mov
sti
into
mov
cmc
jbe
mov
cwde
mov
rcl
clc
sahf
mov
leave
and
mov
jp
jnp
adc
rcl
cmps
rol
aaa
and
mov
xchg
pop
jno
jmp
pop
mov
fistp
inc
mov
daa
cli
pop
mov
adc
daa
(bad)
xchg
jnp
cli
dec
test
inc
jp
and
cmp
mov
je
fwait
push
jl
scas
sbb
xchg
bnd
mov
enter
add
or
es
popa
gs
in
lea
ss
mov
repnz
(bad)
sub
mov
loopne
push
inc
std
daa
not
xor
inc
pop
dec
cmps
sub
addr16
gs
js
test
dec
je
xor
leave
pop
cmp
pop
popf
mov
or
pop
dec
dec
jge
call
mov
push
mov
pusha
xchg
stc
in
ret
inc
pop
xor
(bad)
test
mov
cmp
das
loope
jle
fild
push
or
imul
sahf
icebp
mov
ror
adc
mov
out
cmp
std
movs
jecxz
pusha
dec
aaa
lods
gs
ds
nop
mov
cli
ss
(bad)
mov
dec
not
lock
and
enter
cmp
outs
cmovnp
inc
and
shr
mov
dec
ins
jecxz
rcr
and
jge
iret
push
js
stc
xchg
stos
test
jg
fld
ins
in
xor
imul
pop
shl
fcomp
int3
inc
dec
lods
mov
mov
adc
xor
or
xchg
push
cwde
mov
jmp
shr
and
xor
adc
inc
add
js
mov
mov
fisubr
retf
mov
loope
repz
icebp
cli
out
pop
icebp
mov
(bad)
pop
lods
and
outs
loope
cli
mov
jns
inc
and
pop
push
inc
push
cld
ret
xchg
hlt
pop
jnp
sub
adc
lods
out
add
adc
push
mov
loop
daa
dec
xor
jge
into
bound
push
addr16
icebp
pop
mov
add
add
sbb
dec
dec
jno
push
fs
setae
push
cli
push
push
cmp
dec
pop
or
pop
xor
jbe
sub
pusha
pop
mov
in
jle
mov
test
inc
add
inc
shl
(bad)
push
jbe
jmp
cdq
arpl
popf
nop
mov
pop
push
pop
jne
int3
cmp
cwde
jbe
cmp
in
into
add
inc
sbb
ss
or
xor
pop
xchg
call
add
sbb
pusha
pop
addr16
fcmovnbe
add
pop
or
cmp
push
arpl
cmp
in
dec
bound
or
enter
mov
lds
mov
xor
xor
push
mov
gs
mov
jne
nop
fucom
rol
fcmove
and
jp
ret
cli
mov
popa
scas
shrd
sti
mov
push
mov
pusha
pop
aas
mov
imul
inc
mov
fwait
cld
mov
test
ins
cmp
test
xchg
xchg
push
mov
adc
inc
pop
pop
xchg
aaa
cmp
movs
sbb
in
lds
jp
cmp
shl
mov
or
(bad)
ds
mov
push
sahf
test
gs
sar
loop
dec
arpl
mov
test
xchg
in
cmp
dec
(bad)
fcom
jb
and
test
mov
mov
push
and
push
call
pop
rol
les
popa
fcom
and
pop
iret
lods
mov
inc
mov
xchg
popa
or
inc
ja
aas
sbb
stos
mov
ss
mov
mov
jl
ret
rcr
mov
add
dec
dec
xor
adc
add
push
(bad)
fwait
pop
leave
in
(bad)
daa
jnp
aas
xchg
xor
and
jo
pop
push
fsubr
xchg
repz
and
xor
xchg
cmc
das
imul
xlat
push
fidivr
out
adc
mov
dec
dec
je
int3
retf
sub
cmp
(bad)
adc
mov
xor
jle
shl
scas
xchg
mov
jae
jnp
adc
gs
adc
ins
dec
cmp
xchg
mov
jg
dec
adc
pop
mov
mov
fldenv
popf
cwde
and
cli
(bad)
cli
dec
fist
xlat
iret
adc
bound
addr16
movs
repnz
sbb
xlat
pop
push
dec
and
or
out
dec
stos
bound
fist
dec
movs
cmp
js
push
push
sbb
shl
ret
scas
icebp
jb
out
jae
push
push
in
cs
ret
lahf
clc
push
jmp
sbb
test
mov
int
mov
sbb
fwait
xchg
pop
mov
and
adc
fsub
mov
loope
pop
jp
sub
pop
int
or
jae
mov
and
ret
dec
cmp
push
data16
push
rol
in
or
pop
loopne
aad
xchg
xchg
sub
daa
in
sbb
pop
(bad)
or
ret
loope
ret
inc
jmp
lahf
xchg
mov
pop
and
sub
sub
add
loope
push
into
jae
xor
sub
push
pop
scas
movs
shl
into
inc
mov
rcl
adc
xor
xchg
movs
push
cmp
out
jno
fst
dec
stc
adc
pxor
in
ins
movs
les
jns
mov
mov
fldenv
sti
(bad)
stos
fisubr
je
xchg
call
rol
int
jno
out
into
js
popa
les
mov
daa
cmp
jae
lahf
jno
jle
nop
clc
sti
fs
jnp
jb
(bad)
out
sahf
mov
(bad)
xchg
xor
lahf
xor
dec
out
enter
out
dec
lock
jge
push
inc
dec
cmp
iret
es
fadd
arpl
shr
popa
sub
pop
arpl
shr
and
mov
and
test
loope
mov
popf
and
xchg
(bad)
and
test
xor
ins
jmp
out
inc
mov
call
sbb
jmp
mul
adc
mov
out
and
cmp
sbb
popf
mov
imul
jl
jo
sbb
mov
push
test
dec
inc
and
jecxz
add
(bad)
popf
jno
inc
call
imul
sbb
push
ss
xlat
ror
adc
and
jne
sub
mov
lds
cmp
lods
rol
inc
jne
ror
stos
out
and
das
imul
clc
jae
enter
push
inc
idiv
add
sub
aam
sub
xchg
and
aam
cmp
or
xor
mov
in
imul
pushf
jmp
jbe
repz
shr
sub
imul
imul
pop
dec
mov
jle
dec
(bad)
mov
popf
sbb
loopne
pop
popa
jp
test
mov
aam
inc
sbb
jmp
add
sbb
mov
test
retf
out
aaa
jmp
pop
jg
mov
ret
xor
outs
jae
int
(bad)
push
clc
xchg
sbb
lds
sbb
xor
xor
cmp
push
sub
mov
inc
ins
fucomi
pop
pop
das
les
sahf
push
subps
(bad)
cmps
int3
xor
sbb
mov
push
test
imul
jo
inc
mov
inc
mov
out
push
out
cmps
sub
xchg
ret
loopne
mov
cmp
and
mov
xor
rol
(bad)
sti
fwait
dec
cld
lods
gs
adc
bound
pop
xor
repz
mov
je
in
xor
push
pop
bound
inc
and
or
sub
or
and
sbb
xchg
push
data16
sub
test
pop
icebp
xor
lods
mov
hlt
inc
(bad)
dec
adc
and
push
sub
gs
enter
push
jl
test
in
mov
add
in
xchg
cmp
inc
inc
icebp
gs
outs
les
cli
icebp
or
fs
push
pop
js
xchg
push
push
cmps
out
lods
xchg
dec
jp
lahf
cmp
dec
jle
mov
rcr
popf
cmp
push
dec
or
jmp
jmp
or
adc
mov
push
int
mov
sub
aas
out
shl
add
aad
inc
std
ror
sub
(bad)
or
inc
xchg
adc
test
pop
sbb
pop
mov
sub
pop
mov
xchg
das
mov
sub
retf
or
std
xor
rol
lock
imul
lock
into
lea
mov
adc
fidiv
dec
inc
aas
hlt
mov
imul
mov
out
push
fmulp
es
mov
jl
jno
ret
daa
or
int
pusha
mov
jg
cmp
rol
cmps
push
sbb
xchg
sbb
rol
(bad)
sti
ss
cld
sub
(bad)
jecxz
aad
rol
mov
adc
retf
inc
inc
jns
cmp
sub
xchg
sbb
cmp
pmuludq
cmp
or
jl
jns
shr
or
rcr
jne
out
mov
jns
(bad)
and
ins
movs
cmp
mov
lds
pop
jae
add
in
scas
aaa
mov
mov
mov
xchg
dec
cmp
mov
pop
pop
mov
stos
mov
into
xor
pop
mov
and
xor
pop
push
sahf
int
jp
loop
xchg
xchg
data16
stos
movs
and
pop
repnz
jae
div
ins
push
fdivr
cld
xbegin
jno
add
dec
and
in
push
push
lea
cmp
cmc
js
mov
xchg
or
sub
jge
jp
mov
loope
sub
int
mov
pop
pop
sbb
cmp
cmp
mov
and
inc
(bad)
xor
jo
aad
in
jnp
cld
sub
std
fsubr
sbb
or
lods
mov
lahf
(bad)
pushf
mov
lock
inc
cmp
addr16
mov
inc
jmp
mov
mov
pop
adc
shl
adc
cmp
fbld
push
aad
fdiv
mov
jmp
dec
mov
adc
mov
push
push
jno
adc
add
dec
or
shl
stc
mov
add
adc
shl
outs
xchg
cld
sbb
(bad)
out
push
add
pcmpeqb
xchg
aam
mov
fiadd
ja
xchg
push
shl
cmps
pop
fst
mov
xor
data16
arpl
dec
inc
dec
scas
jmpw
test
setns
adc
pop
cmp
add
fdiv
mov
fsubr
clc
inc
scas
scas
fimul
mov
jo
mov
push
ficomp
xchg
xor
mov
pop
neg
jge
inc
out
shl
imul
jno
popf
mov
sub
pop
mov
cmp
cmps
jbe
inc
ror
dec
fisub
ins
(bad)
call
jmp
ds
fldcw
xchg
fwait
push
data16
sti
mov
cmp
push
or
mov
je
dec
xor
cli
add
add
mov
paddw
cs
sub
cmc
aas
imul
add
xor
stos
sbb
jle
test
js
jge
inc
bound
push
sbb
and
(bad)
pop
sub
xchg
ins
cmc
js
dec
jns
adc
adc
mov
test
or
xchg
jo
icebp
cmps
cmps
push
push
pop
push
sbb
push
ds
cmp
(bad)
jmp
mov
(bad)
fwait
inc
mov
stos
outs
lods
adc
fs
add
cmp
addr16
lock
lea
fisttp
cmp
and
addr16
mov
add
lock
mov
cmp
enter
and
mov
sub
std
mov
imul
enter
mov
jns
sbb
ror
lahf
(bad)
inc
mov
add
(bad)
mov
stc
pop
out
ins
mov
push
js
pop
and
jnp
ds
aaa
ds
and
or
cmp
mov
es
stos
sbb
inc
pusha
add
push
sbb
and
dec
fst
jbe
or
push
cmp
adc
jae
popa
xchg
movs
push
pop
ins
jmp
jl
int
push
dec
jecxz
das
aaa
mov
pop
addr16
loope
or
add
enter
aaa
out
fdivp
and
rcl
sub
lea
sbb
xchg
jg
lods
push
dec
ror
mov
and
retf
scas
sub
jg
sar
mov
mov
imul
lea
pop
push
add
loopne
sub
mov
inc
pop
mov
addr16
mov
add
fisttp
rcr
xchg
sbb
jl
test
push
sub
mov
mov
data16
shr
sub
mov
movs
sub
and
aam
mov
jns
cmp
mov
sbb
mov
scas
cwde
repnz
js
hlt
hlt
mov
fcomp
mov
cmps
adc
xor
popf
fdivr
inc
out
aam
out
or
movs
stos
push
fst
jl
into
stos
cmp
mov
xlat
into
fnsave
daa
add
fs
jmp
inc
push
loope
aam
fnsave
retf
push
dec
xor
popa
mov
and
mov
out
sbb
test
idiv
movs
inc
retf
mov
jnp
xor
pushf
push
sub
sahf
jp
cmp
mov
jne
and
sub
sub
cwde
mov
int
mov
jg
push
xchg
mov
sbb
ins
out
lahf
mov
mov
aad
lods
mov
jnp
sbb
push
les
cld
rcr
nop
jp
(bad)
sub
dec
push
xor
pop
jo
xchg
outs
sbb
jecxz
iret
stc
sbb
xor
mov
jns
(bad)
int
call
jb
gs
pop
dec
in
xchg
imul
scas
xor
neg
adc
ins
rcr
ja
push
mov
ds
and
aaa
(bad)
addr16
addr16
mov
stos
(bad)
push
mov
jl
mov
fld
or
lods
push
add
adc
jecxz
daa
inc
cmp
mov
pop
(bad)
mov
sti
pop
imul
pop
loop
(bad)
std
cmovle
daa
in
ins
cmp
mov
out
cmp
jp
xor
cdq
xchg
inc
xchg
int3
out
add
add
aad
or
push
jl
push
movs
call
(bad)
fdivr
xor
(bad)
mov
arpl
je
ror
mov
add
scas
fldcw
outs
imul
and
sti
dec
jns
out
data16
stos
push
sbb
jb
mov
jmp
adc
ds
gs
lahf
push
push
push
stc
movs
fwait
call
xchg
mov
mov
(bad)
jmp
jne
cmp
add
push
and
xchg
hlt
mov
mov
cdq
jge
call
jp
push
inc
fadd
cmp
cld
das
adc
imul
adc
cld
jge
(bad)
mov
jge
mov
bound
add
jp
outs
and
mov
nop
jb
add
lock
ins
mov
sub
ja
aaa
movs
out
rcr
test
movs
aad
jb
cmovae
xchg
aad
mov
adc
push
pop
aaa
aas
push
outs
or
fstp
ja
cmp
inc
push
push
xor
adc
jge
movs
adc
cmp
jmp
ficomp
in
das
sti
stos
daa
movs
fs
scas
xor
mov
pop
jne
(bad)
sbb
mov
push
xor
jecxz
sub
mov
mov
jo
das
aad
inc
mov
sbb
(bad)
jmp
add
sbb
std
pop
out
mov
sahf
lods
or
(bad)
push
out
lock
jecxz
dec
push
jne
lds
and
push
call
jns
retf
push
in
loopne
pop
data16
xor
shl
lds
xlat
movs
jnp
popf
mov
inc
dec
add
fwait
enter
xchg
add
les
add
fnstsw
xchg
aad
stos
int
xchg
cmps
hlt
or
out
inc
(bad)
loopne
push
outs
mov
dec
out
inc
(bad)
lea
or
mov
daa
xchg
inc
cmps
cmp
and
jle
mov
mov
xchg
sub
rcr
mov
jmp
or
xor
sbb
ret
lea
dec
mov
pop
lahf
mov
stc
push
fsubrp
inc
fisubr
movs
aaa
cdq
adc
repz
add
addr16
xor
or
mov
dec
cmp
inc
jle
call
arpl
test
movzx
sbb
push
ja
ds
jmp
mov
or
loope
cld
sub
inc
pop
repz
imul
mov
lods
lock
ret
xor
adc
jo
(bad)
and
and
or
mov
ret
fadd
popa
sbb
mov
inc
in
les
ss
push
retf
pop
lods
xor
mov
leave
xlat
sub
lods
and
pop
stos
(bad)
in
(bad)
mov
inc
xchg
ja
sub
loope
aad
(bad)
imul
push
stos
stos
les
xchg
retf
mov
mov
xchg
jb
mov
mov
retf
xchg
dec
xor
jns
je
jecxz
ins
out
fxch
mov
and
iret
or
mov
cmp
arpl
fadd
or
and
cwde
data16
lock
jg
lahf
mov
test
jns
sub
push
and
neg
fistp
aaa
pop
sub
subps
popa
ins
stc
int
jno
scas
mov
iret
fcomp
mov
lods
cmp
out
icebp
dec
jns
ret
or
add
scas
pop
sahf
lods
push
mov
imul
ds
les
shl
lods
dec
pop
sub
xor
ins
pop
mov
xor
dec
inc
call
cmp
pop
stos
mov
test
pop
stos
mov
scas
push
stc
cli
push
mov
out
in
hlt
push
aam
mov
loop
sub
add
adc
xchg
pop
pop
pop
push
and
mov
jl
mov
not
outs
push
xchg
xor
cmp
ins
ret
and
movs
outs
pushf
fst
cmp
imul
adc
daa
bound
sub
stc
adc
push
not
push
xor
test
sbb
fcmovnb
xchg
pushf
xor
jmp
popf
ror
jns
pushf
test
enter
push
lods
push
inc
jp
dec
out
repz
lahf
adc
dec
xchg
dec
inc
pop
mov
or
movs
jne
(bad)
(bad)
inc
push
sahf
cmp
idiv
(bad)
int
cmp
xchg
adc
xor
sub
(bad)
out
test
mov
adc
test
or
(bad)
mov
sahf
rol
(bad)
iret
idiv
xchg
sub
shl
popa
icebp
rcl
je
pop
aaa
ins
mov
out
cdq
adc
mov
xchg
cdq
add
not
std
imul
or
sub
icebp
das
xor
shr
fld
rcl
gs
aam
xor
adc
jmp
test
les
sbb
or
mov
pop
loop
mov
xchg
mov
inc
jne
pop
mov
cmps
xor
sbb
idiv
repz
push
xchg
mov
ss
mov
adc
push
push
mov
dec
(bad)
cli
ins
sbb
mov
je
fadd
xor
pusha
aad
mov
pop
cmp
push
jae
inc
mov
add
sub
ins
je
jns
into
cmp
fimul
inc
pop
fistp
mov
out
jae
xchg
adc
mov
jns
dec
pop
or
cmp
adc
jnp
jae
dec
pop
push
jns
stc
sub
jle
jne
(bad)
(bad)
fcmovu
pop
cmp
jmp
pop
and
xor
push
xchg
imul
dec
pop
ret
sub
mov
push
push
ins
js
(bad)
stc
inc
loopne
aaa
cli
jno
lgs
xchg
ds
mov
pop
and
dec
fild
add
push
xor
sti
hlt
xchg
jmp
and
jle
sub
mov
mov
cs
add
jo
or
cs
sub
mov
daa
dec
xor
xor
in
(bad)
loope
sbb
jne
pop
bound
xchg
adc
leave
out
add
xor
jmp
ret
fnstenv
and
sub
or
fdiv
lods
dec
data16
mov
cdq
push
cmp
sub
inc
cmc
adc
jmp
add
mov
ret
mov
jno
ins
imul
int3
(bad)
retf
dec
shr
pop
jge
outs
mov
shl
add
dec
mov
fist
(bad)
cs
jno
(bad)
frstor
enter
in
pop
sbb
pop
push
mov
(bad)
dec
es
mov
adc
add
pop
add
addr16
push
int
fimul
mov
scas
sbb
mov
jge
test
or
sbb
sahf
dec
cmps
sbb
pop
mov
popf
or
jb
pcmpgtw
add
or
ret
push
movs
inc
pop
sub
fcmovnbe
xchg
inc
cmp
xor
mov
inc
das
imul
xor
inc
pop
rcr
push
and
push
mov
retf
add
mov
cld
push
or
sub
add
mov
inc
push
stc
push
mov
ret
ret
cmp
pop
lock
call
(bad)
sahf
test
lods
jmp
iret
les
mov
repnz
push
pusha
xor
and
ficom
data16
fdiv
xchg
pop
(bad)
and
or
pop
xchg
das
and
mov
je
adc
ret
test
popf
add
mov
jl
xor
ja
lahf
retf
and
add
les
in
retf
gs
test
sbb
nop
(bad)
leave
test
in
pop
sbb
fst
std
or
pop
mov
inc
mov
cmp
dec
pop
pushf
test
and
enter
ins
pop
mov
mov
mov
aaa
dec
push
mov
mov
iret
aad
mov
pop
daa
add
mov
aad
dec
hlt
push
sub
push
xor
xchg
jbe
cmp
jb
jmp
push
jmp
call
lods
into
adc
in
push
sbb
cmp
stc
(bad)
std
xchg
mov
fldenv
mov
adc
bound
add
xchg
sub
jmp
mov
push
xor
retf
fimul
fidivr
and
cmp
fwait
aad
push
pop
call
mov
inc
pop
mov
ret
cwde
adc
sbb
mov
ret
call
pop
xchg
fsub
mov
shl
add
mov
ds
push
or
mov
into
jmp
pop
test
push
in
stos
pop
(bad)
jle
inc
jbe
cmp
scas
and
mov
add
cmc
push
adc
push
add
sub
jb
pop
pushf
bound
xchg
ret
add
sti
adc
push
dec
mov
mov
sub
inc
jmp
push
mov
out
mov
xchg
add
xchg
scas
mov
lea
sbb
cmp
(bad)
xchg
lock
popf
iret
sub
mov
dec
es
enter
inc
rcl
pop
int
push
cmp
test
xchg
cmps
mov
mov
jl
ja
(bad)
not
mov
js
out
out
sbb
mov
add
push
loopne
push
retf
pop
in
mov
cmp
addr16
xchg
push
jo
(bad)
inc
call
jne
iret
ins
push
xchg
sti
shl
loopne
push
jae
lods
out
sub
jg
xor
call
push
dec
mov
leave
jae
data16
mov
ds
dec
lods
dec
scas
pop
les
add
and
stos
xchg
aaa
sti
xchg
stos
push
cmp
sti
rcl
aad
lock
daa
sbb
(bad)
mov
and
dec
xor
push
lods
push
inc
jnp
fild
or
out
pop
push
(bad)
and
in
mov
in
loopne
mov
test
push
rcr
xchg
xchg
push
lods
sbb
imul
jle
daa
inc
cmp
test
push
fwait
jmp
loop
shl
pop
jb
adc
pop
es
cdq
repz
jb
lock
inc
jo
sub
fist
imul
mov
in
loope
push
cmps
cmc
sbb
gs
ja
hlt
adc
pop
sub
in
mov
adc
enter
not
mov
shrd
ret
and
jne
retf
jae
cli
leave
ret
sar
cmp
or
into
mov
div
mov
mov
outs
(bad)
push
mov
mov
push
(bad)
fldenv
jge
aad
xchg
mov
not
pop
jno
push
push
mov
fdiv
arpl
xchg
das
arpl
into
nop
fst
dec
mov
das
(bad)
fs
js
pop
add
dec
(bad)
sbb
dec
lods
mov
pop
adc
arpl
fst
xor
mov
repz
icebp
test
daa
jecxz
jl
leave
adc
or
dec
(bad)
mov
stos
xor
(bad)
or
push
(bad)
push
imul
shr
je
xchg
aas
loopne
jno
out
shl
call
jnp
imul
mov
add
shl
sbb
movs
call
movs
stos
cmp
dec
out
sbb
mov
fstp
mov
add
cs
ins
inc
push
add
jl
add
aaa
arpl
in
out
data16
daa
mov
fcom
push
scas
sub
stos
outs
ret
pushf
pop
jge
xor
mov
sub
add
aas
lahf
aad
and
push
add
test
ins
adc
sbb
jb
mov
popf
cli
jo
(bad)
jecxz
cdq
clc
or
call
mov
jg
ins
or
fmulp
out
pop
(bad)
push
jmp
add
cmp
inc
lock
and
pop
imul
cld
clc
data16
inc
inc
push
mov
pop
rcr
jg
push
mov
retf
repz
adc
add
test
jmp
pop
or
shl
pop
in
pusha
int
(bad)
xor
xor
xchg
add
jl
mov
sub
(bad)
adc
jg
dec
xchg
ins
sub
dec
dec
or
jl
sbb
xchg
and
jle
das
data16
mov
pop
aad
jecxz
cmps
inc
jo
jmp
cwde
xchg
jmp
mov
jne
jge
dec
ja
jp
in
js
ret
fdecstp
fidiv
mov
and
push
inc
retf
sbb
scas
test
mov
and
movs
stos
push
push
aad
div
aad
imul
inc
inc
lods
pop
cli
icebp
pushf
call
nop
jnp
(bad)
jae
jae
je
xchg
mul
pushf
pop
xchg
or
xchg
es
jo
xor
mov
mov
dec
sti
or
and
xor
and
adc
and
out
inc
mov
into
mov
sbb
iret
(bad)
xor
inc
sbb
add
mov
pop
test
jbe
arpl
test
scas
xchg
mov
or
or
movs
xchg
ret
inc
fimul
mov
jecxz
cmps
adc
xor
sub
je
or
jmp
fisttp
mov
(bad)
cmp
loopne
xor
xchg
pop
xchg
push
leave
movs
cmp
sbb
sbb
lock
dec
stos
adc
pop
iret
fcmovu
ret
and
jecxz
hlt
push
pusha
sahf
aaa
and
or
mov
jbe
cmp
scas
and
bnd
pop
jbe
mov
call
(bad)
add
jb
(bad)
loopne
mov
pushf
fucomp
or
movs
or
(bad)
pop
clc
(bad)
add
xor
jo
ret
dec
inc
sbb
stos
pop
jb
lods
dec
cmp
ja
ret
mov
into
sub
data16
add
jnp
fcmovbe
cmp
xchg
fstp
dec
sub
pop
lds
test
pcmpgtw
inc
test
sub
cmp
ja
addr16
jg
mov
push
lds
das
addr16
data16
icebp
retf
dec
xor
and
repnz
das
push
jns
out
shr
sub
xor
jl
(bad)
xor
cmp
imul
aam
add
ret
jl
jns
add
cmc
lock
push
jae
ds
dec
jecxz
call
aaa
aad
retf
inc
test
dec
int3
pop
lock
push
push
into
sub
imul
xor
push
sub
les
sub
adc
sub
movs
iret
stos
pop
cmp
(bad)
repz
jne
loope
push
sub
adc
pusha
call
mov
lahf
xchg
push
or
sub
sub
pop
scas
mov
dec
jmp
cdq
mov
inc
test
imul
loop
mov
or
cmp
xor
ins
sub
mov
sbb
jmp
dec
mov
dec
inc
int3
pop
and
xor
sbb
call
xchg
cli
es
push
in
dec
not
jbe
xlat
jle
call
xchg
in
inc
xchg
xchg
ja
(bad)
mov
mov
sub
inc
adc
into
add
aad
imul
imul
dec
add
pop
push
add
adc
jno
in
stc
es
rcl
sub
ror
sbb
mov
cmp
cld
sbb
add
js
jns
jo
aas
xchg
retf
inc
sub
mov
rol
inc
xchg
or
jne
aad
and
cmp
pusha
fcom
sub
cmp
dec
dec
sub
sub
sub
out
jb
jle
lds
jge
int3
in
mov
fadd
inc
sub
or
pop
addr16
ss
out
enter
adc
cmp
popf
ins
popf
div
xchg
dec
lds
shr
mov
or
adc
inc
mov
cmps
xor
iret
nop
fs
mov
jno
cli
dec
rol
add
dec
(bad)
ret
lods
repnz
cli
lods
fistp
xchg
out
mov
(bad)
nop
add
fcos
xor
xchg
(bad)
js
ds
sahf
dec
cmps
in
mov
cs
sbb
xchg
mov
lods
xchg
fucomip
mov
call
xchg
push
ret
push
mov
push
imul
sbb
dec
or
pop
mov
lds
movs
(bad)
fsub
loopne
dec
jmp
add
popf
cld
jnp
movs
push
fild
jecxz
inc
aas
pop
push
clc
lods
sub
cmps
pop
jo
jb
out
cmp
leave
int3
lahf
cmps
(bad)
enter
push
leave
adc
push
fwait
enter
fsubr
xchg
sar
out
jne
push
xchg
fcmovu
xchg
pop
push
pop
outs
rcr
add
fisub
aaa
outs
or
xor
pop
pop
movs
add
fdiv
pop
adc
sar
das
dec
test
sub
fadd
xor
xor
mov
ret
sar
jne
dec
push
push
ins
in
mov
mov
xor
mov
adc
(bad)
in
fwait
lds
(bad)
adc
jg
sub
add
ds
sub
jl
jns
xor
push
push
mov
sbb
inc
xchg
jb
mov
push
fs
jg
xchg
mov
dec
pusha
pop
mov
cli
add
outs
fadd
and
xor
jge
sub
test
dec
push
fist
in
repz
jle
popa
in
and
aaa
fsubr
lds
push
cdq
cmp
sub
aad
fwait
push
mov
test
arpl
xlat
lea
in
mov
dec
aad
xor
aaa
cs
fldl2e
scas
movs
rcl
cmps
dec
les
mov
mov
mov
push
les
fcomp
test
mov
int
sti
or
jmp
mov
lods
cmc
js
xor
jo
mov
lahf
jl
mov
sbb
pop
jne
push
dec
test
push
and
data16
add
in
pop
arpl
push
pop
hlt
jo
xor
adc
fdivr
jae
(bad)
pushf
dec
inc
aad
xor
mov
add
popf
test
repz
out
repz
retf
xchg
jmp
xchg
(bad)
dec
lods
rol
inc
std
sub
push
xchg
rol
sbb
arpl
stos
test
jl
sub
pusha
inc
loopne
cmc
add
nop
jmp
test
frstor
sub
xor
pushf
scas
retf
mov
jle
das
in
shl
mov
stc
pusha
ret
es
jmp
adc
mov
outs
into
add
daa
inc
jmp
add
dec
lods
jae
or
cli
jbe
outs
cli
cmc
mov
adc
aam
sub
sub
test
jg
and
or
(bad)
dec
jecxz
jo
jmp
lods
aad
xchg
sub
push
pop
mov
nop
jmp
mov
mov
mov
fdivr
hlt
repnz
xchg
repz
pop
lea
bound
lea
test
mov
out
icebp
shl
sbb
fsubr
aas
fld
dec
aam
jge
fisubr
or
pushf
push
xchg
jae
or
scas
scas
dec
rol
sar
cwde
dec
jne
or
ja
inc
mov
mov
sbb
test
outs
pop
push
mov
jp
pop
enter
jo
and
fdiv
push
retf
xor
inc
cmp
pop
mov
(bad)
cmps
pop
or
jno
dec
xor
sub
push
xor
jb
ret
adc
lods
les
push
mov
pop
jo
fucomi
xor
push
xchg
adc
mov
inc
and
push
ficom
or
push
pop
sbb
pop
test
add
lfs
jmp
cli
in
addr16
mov
or
adc
cmp
pop
fwait
cmp
out
daa
jnp
adc
movs
jmp
mov
xor
push
in
(bad)
sub
mov
movs
outs
push
repnz
mov
jae
push
push
pop
sub
add
cmp
inc
sub
push
add
ret
mov
stos
ret
ror
cmp
sbb
sub
fsubr
cmp
leave
and
push
int
push
xchg
and
jo
mov
xor
lea
xchg
mov
dec
sbb
iret
es
cmc
mov
(bad)
and
cdq
pop
ss
(bad)
jbe
pop
pop
adc
xchg
pusha
nop
inc
ret
lds
pop
mov
imul
and
popf
nop
cmps
jmp
mov
lea
call
(bad)
mov
push
dec
test
pop
sbb
xchg
scas
pusha
shr
cdq
je
xor
pop
jge
mov
popa
inc
sub
jl
mov
aam
enter
pop
bound
mov
enter
add
jae
fst
mov
add
mov
jb
pop
xchg
jno
xlat
dec
adc
pop
rol
and
push
enter
sub
sub
sbb
sub
xchg
adc
mov
mov
fwait
mov
sti
stos
cs
jno
mov
add
cmp
or
sahf
rol
ficomp
sahf
mov
adc
dec
pop
xor
adc
xor
pop
cmps
test
jge
mov
shl
inc
or
inc
mov
cmp
je
mov
xchg
lahf
repnz
(bad)
fld
push
push
mov
inc
push
mov
cmp
repz
push
(bad)
xlat
cmp
inc
add
mov
jle
and
adc
aaa
loope
pop
dec
imul
xchg
in
in
sub
lods
cld
mov
js
jecxz
pop
add
shr
jecxz
push
rol
sbb
sar
sbb
jmp
cwde
mov
repz
das
imul
movs
fst
and
sub
add
xor
cdq
icebp
test
xchg
imul
std
mov
(bad)
bound
repz
repz
push
sub
nop
ret
sar
xor
mov
in
movs
inc
bound
jne
jae
aaa
xor
inc
stos
jg
es
ins
mov
push
rcr
rcl
fistp
cmp
mov
enter
sbb
mov
push
bound
jle
pop
sbb
pop
or
mov
jae
or
mov
add
iret
cmp
daa
into
rcl
shl
mov
int
dec
sti
int3
jge
pop
inc
dec
test
push
in
outs
test
repnz
out
cmp
add
aas
ret
cmp
sub
mov
mov
loope
fstp
xor
xchg
xor
(bad)
push
sahf
push
or
jbe
push
jns
cmp
hlt
jne
loope
outs
sar
pop
or
mov
pop
inc
and
dec
cs
xchg
out
ins
dec
rcr
pop
shl
sbb
sub
jecxz
inc
enter
(bad)
outs
popa
or
mov
inc
jp
mov
or
out
rol
stc
jg
ins
mov
das
and
mov
pop
sbb
enter
sub
scas
jg
or
push
mov
fnstcw
aas
sub
or
out
(bad)
icebp
or
pop
xor
in
dec
pop
es
ret
xchg
jnp
movs
movs
jnp
inc
out
dec
jbe
push
int
stos
push
imul
add
mov
push
cmp
and
int
ins
test
aam
jnp
or
push
dec
ror
das
int
ins
push
repz
xor
fbstp
aam
xor
or
jo
div
scas
addr16
pop
rcr
xchg
scas
pop
adc
dec
(bad)
sbb
idiv
xor
sub
pop
mov
sbb
dec
(bad)
cmp
lods
ins
es
push
and
call
mov
xor
(bad)
xchg
sbb
loopne
sub
push
repnz
mov
jecxz
inc
ins
call
dec
sub
ds
xchg
mov
push
sti
cmp
int3
pop
push
adc
in
test
xor
repz
fisttp
stc
pop
fwait
mov
xlat
and
mov
cmp
push
rol
es
sahf
ss
rcl
test
clc
fsubp
leave
je
push
addr16
xchg
pop
add
jmp
call
push
movs
iret
in
fild
outs
aad
xchg
outs
adc
mov
es
jecxz
push
add
es
sbb
inc
and
mov
idiv
dec
iret
mov
dec
arpl
pop
cmps
popf
lea
and
jne
shl
dec
xchg
xor
cmp
repnz
test
and
xor
xchg
xchg
into
xchg
push
test
adc
clc
loop
xchg
aad
int3
aas
les
xchg
pop
(bad)
push
icebp
pop
jg
push
push
call
dec
cmp
sub
enter
mov
les
mov
add
mov
(bad)
xor
mov
pop
and
out
lods
call
std
sahf
inc
pop
aad
pop
movs
jmp
in
test
jecxz
in
pop
loop
add
jno
sbb
mov
daa
div
repz
jle
les
jns
lods
and
out
mov
mov
sub
cmp
jb
loopne
ret
popf
mov
ret
push
arpl
mov
xor
dec
mov
js
repnz
hlt
arpl
loop
add
add
cs
shl
pop
out
dec
and
call
cmc
js
pop
sti
dec
ins
call
jmp
xlat
or
sub
clc
adc
or
hlt
dec
iret
pop
aas
pushf
cmps
adc
mov
cmps
or
stos
and
pushf
pop
inc
jg
iret
mov
loop
shl
repz
sub
jmp
repnz
ds
lods
add
loop
xchg
arpl
or
jmp
popf
jbe
adc
push
mov
mov
jb
sbb
mov
inc
push
out
lods
sub
xchg
scas
int3
idiv
pop
popf
fadd
retf
lea
lods
cwde
dec
inc
sar
(bad)
dec
mov
jp
(bad)
lods
push
xchg
retf
add
mov
cmps
jp
mov
addr16
neg
push
or
dec
cdq
fs
loope
pop
push
cmp
jle
lods
add
push
loopne
sbb
mov
and
mov
retf
pop
out
mov
rcl
repz
add
and
push
movs
neg
in
arpl
sub
data16
(bad)
jb
repnz
loope
loope
jl
sti
adc
fs
or
sbb
jnp
arpl
daa
or
dec
aad
dec
fucomi
add
cmp
(bad)
pop
cli
mov
mov
xchg
cmp
mov
and
cwde
pop
int3
sbb
pop
mov
jbe
xor
dec
test
cmp
inc
mov
cmp
outs
and
fwait
js
mov
ins
add
cli
cmps
jg
push
push
and
iret
out
stc
sub
xchg
iret
mov
pop
jb
jnp
and
(bad)
and
sub
call
(bad)
add
inc
mov
push
jmp
pop
int3
sbb
mov
adc
xchg
mov
popf
mov
repz
xor
add
mov
push
in
lock
ret
cmp
push
xchg
movs
fsubr
aam
sub
call
cmps
mov
dec
cdq
pushf
test
or
jmp
mov
clc
cld
fwait
xchg
xchg
push
adc
lds
repz
(bad)
div
fwait
jecxz
push
jge
(bad)
mov
movs
adc
add
xor
mov
pop
and
jb
xchg
loope
pop
add
mov
call
test
cmp
daa
add
dec
push
arpl
push
mov
iret
jnp
mov
mov
outs
mov
sbb
call
lods
mov
(bad)
std
jne
adc
pushf
fstp
stos
dec
inc
push
sahf
mov
movs
mov
test
cmp
add
push
ins
cmp
(bad)
out
dec
leave
fistp
mov
push
mov
or
addr16
mov
enter
pusha
leave
pop
cmp
pop
push
and
xor
adc
xor
shl
add
xchg
sbb
sub
aas
ret
cmp
xchg
cmps
mov
sbb
jmp
addr16
mov
sbb
mov
sti
daa
cli
xor
rcl
jns
pop
pop
out
fs
push
or
jmp
adc
dec
test
dec
in
pusha
sbb
outs
xchg
retf
pop
or
out
mov
xchg
(bad)
enter
fst
jb
dec
push
imul
sbb
jno
sbb
rcl
mov
(bad)
jno
jno
fadd
aad
enter
ins
mov
imul
pop
data16
pusha
into
cmps
das
dec
sub
xchg
scas
dec
cmp
pop
outs
fcomp
retf
aas
sbb
pushf
outs
xor
mov
mov
sar
sbb
jmp
mov
mov
push
dec
(bad)
cld
stc
fwait
fwait
call
dec
nop
or
and
pop
jbe
test
mov
popf
pop
out
adc
pop
xchg
retf
sti
fwait
xor
add
stc
inc
push
out
or
xchg
outs
and
retf
cli
pop
xchg
sub
push
(bad)
mov
push
mov
and
stos
(bad)
in
add
xchg
cld
xchg
jo
mov
jmp
sbb
push
inc
dec
ds
push
cmp
gs
out
fsub
mov
(bad)
mov
test
arpl
and
jnp
popf
jns
test
popa
test
mov
xor
mov
and
(bad)
sbb
imul
dec
icebp
jl
lock
sub
fadd
inc
gs
adc
mov
xchg
dec
jb
xlat
sbb
sub
cmps
mov
pop
ds
push
push
fcmovu
cmp
fsub
mov
cdq
cdq
fsubr
xor
es
hlt
andps
xor
test
pop
cmp
cmp
sub
rcr
fsubr
mov
int
sub
inc
cmp
out
sub
aam
nop
adc
adc
retf
xchg
les
rcr
xchg
ror
xchg
movs
add
ins
jo
add
xchg
push
imul
mov
mov
cmps
inc
inc
out
push
mov
mov
push
loopne
lods
(bad)
sar
push
shl
add
out
mov
jne
fisttp
pop
icebp
mov
ror
sahf
mov
push
push
(bad)
outs
cmp
mov
pop
and
scas
add
and
cwde
and
pusha
in
xchg
sar
xor
cld
loope
outs
sub
ds
cmp
ja
inc
sbb
(bad)
je
fwait
test
add
xor
hlt
cmp
les
mov
push
pop
jno
pop
dec
jmp
pop
into
fisttp
ins
jmp
mov
movs
or
push
daa
mov
xor
cdq
scas
fild
mov
out
in
push
lods
ficom
pcmpeqb
movs
pop
xor
jmp
dec
sbb
mov
mov
mov
fidivr
cld
sub
xor
push
sar
xor
sub
test
gs
add
sti
jo
mov
adc
aam
push
sub
pop
push
mov
gs
inc
clc
mov
push
mov
adc
jbe
aam
sub
xchg
hlt
sub
cmps
inc
pusha
inc
adc
push
push
test
adc
fs
bnd
mov
test
inc
and
nop
and
lock
push
inc
aas
popf
retf
push
iret
mov
call
push
mov
addr16
adc
ret
ins
bound
hlt
sub
xchg
mov
sbb
icebp
rcl
adc
aad
xchg
xor
loop
out
push
test
test
int
clc
call
std
sub
pop
push
arpl
mov
cmp
pop
jecxz
clc
(bad)
shr
xchg
test
dec
and
dec
sub
lahf
in
out
cwde
test
mov
add
cmp
sub
hlt
push
mov
fst
mov
sti
shr
mov
fidivr
popf
dec
and
leave
push
cmp
xchg
or
cmp
sub
jns
lods
push
cmp
xor
xchg
sub
or
pusha
retf
mov
loop
icebp
cmc
jecxz
nop
dec
retf
sub
dec
xlat
aad
aad
jno
sub
(bad)
out
jo
leave
movs
sbb
icebp
push
and
ins
loopne
push
mov
pop
xchg
imul
pop
pop
imul
daa
pusha
xor
out
dec
popa
lock
jb
cli
sub
xchg
add
pop
or
out
cmp
push
add
idiv
sbb
sbb
xchg
(bad)
daa
cwde
pop
sbb
xchg
sar
cmp
jge
dec
js
outs
and
pop
sub
(bad)
sbb
cmp
daa
retf
or
iret
mov
or
jl
and
dec
push
jecxz
cmps
sbb
add
fcomi
pushf
adc
push
jo
push
mov
frstor
mov
aaa
cmp
shr
(bad)
mov
sbb
pusha
test
cmps
inc
add
or
hlt
jl
push
add
mov
mov
pop
sar
pop
jecxz
sahf
inc
sbb
ficom
or
loopne
fwait
loope
sbb
js
dec
adc
inc
jge
movs
(bad)
mov
fnsave
sub
pop
adc
jnp
fdivp
cwde
mov
cmp
call
(bad)
cmp
cmps
xchg
add
add
pop
shr
xchg
jmp
fdivr
xor
aam
dec
inc
lods
pop
push
in
jle
add
out
jns
jmp
mov
jo
out
mov
inc
retf
pop
imul
mov
mov
out
inc
push
xchg
push
test
mov
push
cld
pop
mov
xor
rcl
inc
add
push
retf
in
mov
sbb
clc
inc
sub
aas
or
cmp
jge
cmc
pop
lods
test
shr
xchg
jns
rcl
pushw
mov
ja
jle
neg
sbb
mov
je
test
into
ret
sub
dec
push
inc
call
icebp
sbb
arpl
and
clc
retf
daa
ins
addr16
in
aas
out
mov
push
jge
xchg
lds
lock
lahf
or
jge
imul
pop
shl
cmp
cdq
or
movs
or
or
sub
movs
push
mov
ror
scas
sbb
popf
add
mov
and
add
adc
mov
test
sub
lods
xor
mul
jbe
(bad)
fcomp
or
pop
cmp
retf
mov
inc
jns
xchg
sbb
icebp
leave
mov
pop
push
xor
idiv
or
mov
and
jno
fist
mov
mov
mov
xchg
sub
gs
or
rol
jae
arpl
(bad)
pushf
dec
sar
mov
mov
lods
mov
adc
xor
jg
inc
lds
imul
xor
cmp
aas
mov
rcr
xchg
cld
into
cdq
cmp
mov
pop
les
or
add
mov
jno
sub
div
addr16
push
mov
pop
sbb
xchg
je
test
cmp
ret
shl
jno
push
xor
bound
jbe
add
xchg
inc
ins
push
cli
test
gs
add
mov
mov
mov
scas
mov
add
stc
js
in
pop
xchg
sub
(bad)
fsub
add
(bad)
call
(bad)
and
push
jge
jbe
jmp
das
daa
xchg
sbb
jo
sub
mov
xchg
push
inc
(bad)
sub
cdq
fild
xchg
js
call
inc
mov
fdivr
push
fadd
aas
repz
out
xor
sub
popa
jle
jo
into
push
xchg
je
dec
or
mov
test
adc
loopne
and
fidivr
jecxz
cmp
in
ret
inc
inc
adc
outs
jmp
and
mov
es
test
(bad)
adc
add
pop
ss
out
hlt
(bad)
out
fild
pop
xor
neg
pop
push
adc
xor
mov
sub
ficomp
aam
or
out
lock
sub
jmp
mov
cmp
add
arpl
shl
cmovge
cmp
xlat
sbb
out
sub
sbb
xchg
and
mov
sbb
or
(bad)
mov
adc
dec
xor
mov
sbb
mov
cmp
outs
out
in
rcr
jg
rcl
lds
cs
adc
inc
pop
sahf
mov
pop
push
out
push
sar
jmp
mov
sbb
popa
sub
mov
popf
not
mov
mov
xor
stos
sub
test
out
hlt
cld
push
popf
call
in
sub
pop
jb
daa
mov
rcr
ja
mov
scas
and
push
ror
sub
outs
fisttp
dec
adc
les
ss
or
add
sub
stc
cmp
pop
neg
jl
loop
popa
cmc
retf
and
mov
pop
xchg
sbb
out
adc
call
mov
xlat
addr16
mov
rcr
dec
adc
jae
pushf
dec
stos
pushf
in
xor
dec
xchg
inc
daa
icebp
mov
xchg
mov
and
cmp
mov
cmp
jmp
xchg
in
sub
aam
sti
mov
scas
js
and
push
fmul
ins
ret
outs
push
xchg
jnp
out
test
cmp
rol
sbb
sbb
push
and
imul
dec
lods
or
icebp
scas
xchg
ret
sbb
xchg
hlt
xchg
add
mov
and
adc
or
sub
gs
sub
mov
and
cmp
cs
stos
cmc
lds
int3
inc
dec
jmp
mov
mov
jge
test
pop
gs
dec
outs
add
jno
outs
cmpxchg8b
ret
add
js
mov
int3
xor
add
xchg
push
mov
call
cmp
xor
mov
mov
sti
fdiv
push
mov
popf
cmp
and
jne
lock
add
xchg
repz
and
add
mov
sbb
fld
cmps
leave
stc
je
dec
icebp
in
dec
sbb
or
in
retf
sub
xchg
xchg
dec
stos
mov
sub
hlt
cmp
sub
sahf
adc
scas
xchg
push
mov
or
jo
or
inc
and
out
push
out
xchg
in
(bad)
fstp
(bad)
cmc
xchg
jg
cmps
fcom
cmps
popf
jmp
or
add
ja
in
mov
icebp
and
retf
stos
and
and
or
icebp
and
loop
push
jmp
popf
repnz
mov
sub
dec
mov
adc
xchg
and
into
sub
cmc
mov
pop
dec
in
mov
mov
outs
retf
adc
inc
mov
fisubr
enter
retf
sub
add
push
loop
stos
mov
in
pop
and
paddusw
sub
mov
aaa
dec
jns
adc
fs
(bad)
test
add
sbb
cli
jg
xor
das
mov
jg
in
sbb
adc
into
scas
je
ret
in
js
fs
mov
pop
mov
xchg
pusha
and
inc
stos
jno
retf
push
(bad)
aaa
mov
clc
or
retf
dec
imul
mov
add
ds
inc
das
jo
enter
sub
xchg
pop
mov
lahf
test
inc
or
jae
outs
scas
jecxz
stc
cdq
out
fisub
xlat
repz
and
(bad)
test
fmul
pop
push
mov
cmps
or
sbb
retf
ror
scas
mov
mov
rcl
pop
or
mov
adc
test
mov
cmp
popa
jmp
(bad)
enter
adc
mul
sub
xchg
or
push
or
and
mov
sbb
(bad)
push
cld
inc
vzeroall
enter
jge
call
shl
xor
jns
push
jl
int3
jno
mov
add
push
jge
jns
jmp
daa
int3
icebp
and
test
xor
cmc
cmp
jo
dec
imul
pop
push
sbb
pop
cmp
jns
je
cmp
mov
jg
adc
icebp
retf
cmp
jge
inc
(bad)
(bad)
push
mov
mov
cs
ds
and
xchg
cmp
sub
dec
mov
hlt
gs
jne
aam
and
in
dec
inc
clc
jl
loop
pop
je
sbb
mov
mov
push
jne
jo
cmp
out
mov
mov
push
out
jo
rcl
push
arpl
retf
xchg
sbb
aad
pop
outs
test
add
(bad)
std
test
icebp
fucomip
fadd
leave
cmp
and
jmp
in
into
or
cli
addr16
jns
enter
jnp
test
push
ror
outs
sub
les
mov
xchg
aaa
(bad)
xor
mov
addr16
shr
fs
mov
mov
or
adc
push
bnd
and
ret
les
xor
pop
push
jge
fdiv
ficomp
sti
pop
sbb
test
mov
xchg
cli
pop
lock
add
lock
sub
es
out
xor
and
je
adc
mov
mov
js
xor
xchg
arpl
in
jne
ins
in
repz
add
dec
cmp
shl
xchg
fadd
dec
dec
inc
jmp
cmp
gs
push
lea
sub
and
inc
and
dec
ror
(bad)
popf
or
sub
mov
mov
sti
dec
out
pop
xchg
out
or
sbb
add
ja
pop
xchg
dec
aad
loopne
pusha
call
stc
push
mov
xchg
cli
out
(bad)
fwait
sub
mov
ja
gs
mov
dec
fild
cmps
mov
psrld
mov
adc
fwait
cmp
pop
or
sti
mov
icebp
sub
and
adc
out
and
shr
popf
or
clc
scas
mov
adc
lods
xor
dec
fimul
sbb
pop
enter
lahf
fnstcw
adc
int
sbb
inc
out
rcr
inc
stos
inc
outs
xchg
jl
call
lock
inc
jno
test
daa
loope
sti
xchg
inc
shl
push
jne
push
jp
icebp
inc
fxch
mov
jne
mov
(bad)
jns
adc
imul
jo
dec
(bad)
dec
xor
cwde
retf
in
rol
mov
adc
imul
adc
rcl
loop
jne
mov
xchg
mov
daa
sub
xchg
cwde
loopne
(bad)
xlat
dec
dec
xchg
xor
inc
ret
dec
sbb
leave
mov
test
xlat
xchg
cmp
rcr
mov
and
or
jno
aad
and
into
ja
xchg
in
lods
cwde
inc
scas
shl
mov
adc
xlat
or
sti
or
jmp
xlat
cmp
cmp
enter
xchg
jbe
mov
xor
sahf
and
std
xchg
dec
or
in
bound
aad
and
cdq
sbb
mov
push
xchg
cmp
mov
mov
fimul
xchg
aas
xor
fdivr
je
icebp
ins
adc
or
push
or
cmp
mov
dec
push
push
jge
push
bound
push
imul
lock
js
jae
mov
scas
xor
jnp
(bad)
int3
fwait
lods
jae
or
ins
stc
cmps
shr
pop
lahf
sbb
sbb
div
aas
mov
xor
pop
das
into
int
loop
jmp
(bad)
imul
movs
and
add
mov
inc
mov
adc
jl
dec
in
imul
mov
movs
push
pop
jle
lahf
pop
mov
jmp
aam
jmp
mov
mov
aas
push
push
mov
adc
aad
clc
in
mov
jmp
sbb
and
call
dec
xchg
mov
mov
(bad)
scas
enter
adc
sbb
lods
push
retf
jmp
not
mov
fisttp
adc
or
xor
jns
pop
scas
movs
scas
sbb
dec
cmp
ins
fmul
ret
(bad)
rcl
sub
cwde
mov
jnp
icebp
jmp
mov
out
les
cmp
cmps
ja
rol
push
add
into
or
mov
sub
mov
xchg
sub
test
mov
aas
mov
push
mov
sub
or
sahf
enter
imul
out
jmp
loopne
pop
xor
sti
iret
push
push
outs
add
shl
xor
add
mov
add
ficomp
inc
loop
icebp
mov
adc
xlat
movs
add
movs
scas
cs
sub
into
ds
push
aas
jae
(bad)
and
push
in
pop
outs
retf
mov
cmps
popa
sbb
mov
dec
cmp
(bad)
fucomi
aam
add
dec
or
loopne
and
sbb
retf
scas
(bad)
test
int
imul
cmp
out
pop
and
aaa
pop
adc
sbb
bound
into
jbe
jo
pusha
adc
push
mov
add
mov
pop
lock
inc
mov
and
xlat
pop
push
aas
loope
xchg
je
pop
lock
shl
adc
dec
loope
sti
std
(bad)
das
out
mov
fmul
cld
lds
and
sbb
not
sbb
fist
adc
xchg
sar
pop
and
or
mov
cmp
push
adc
pop
inc
pop
xor
daa
xchg
stc
inc
cwde
inc
and
dec
pop
mov
or
fwait
xchg
mov
les
dec
stc
jecxz
sbb
out
outs
add
ins
popf
(bad)
fld
in
push
mov
or
sub
mov
xor
loopne
mov
scas
shl
adc
dec
daa
es
xor
cmp
repz
sbb
in
add
jle
cmp
loope
stos
cmps
lea
mov
sahf
sub
fmulp
das
add
movs
jle
xor
imul
mov
fsubr
pop
add
jmp
inc
pop
iret
xchg
sbb
push
mov
pop
mov
scas
cmc
stos
inc
inc
pop
or
pop
pop
in
adc
dec
shl
mov
stc
rcl
cmp
cmps
xchg
mov
dec
aas
hlt
mov
xchg
sbb
jne
cld
out
dec
mov
dec
(bad)
jecxz
sbb
outs
push
sbb
xchg
and
inc
mov
and
mov
jo
sti
mov
(bad)
mov
push
and
jecxz
test
(bad)
icebp
and
and
mov
out
mov
loope
sbb
(bad)
pusha
mov
in
jno
popa
imul
in
or
fist
xor
jbe
mov
push
push
xor
pop
push
pop
lahf
cld
or
adc
or
cmp
loop
shl
push
xchg
inc
aam
cmp
cmp
mov
add
push
sub
icebp
cmps
popf
dec
adc
mov
in
lods
adc
add
sub
add
adc
mov
push
jno
enter
xor
xlat
cmp
inc
or
es
std
shl
fdiv
bound
pushf
sbb
ss
daa
add
pop
mul
add
inc
inc
mov
call
movs
loop
cmp
jle
aas
iret
cmps
mov
movs
xchg
stos
push
mov
call
cwde
push
inc
inc
mov
mov
and
movs
dec
popa
daa
fdivr
mov
or
ficomp
add
call
loopne
inc
ja
mov
or
dec
or
pushf
(bad)
pop
dec
or
mov
and
inc
cmps
ss
sub
cli
jmp
fisubr
xor
data16
or
pop
sahf
gs
dec
add
std
in
xor
sar
inc
sub
arpl
push
in
inc
dec
add
hlt
jmp
movs
or
fcmovnu
arpl
cmp
shl
push
sub
call
lods
mov
sahf
out
cmps
fldcw
test
mov
pop
jl
(bad)
stos
std
mov
stc
enter
int3
mov
pushf
lahf
arpl
xor
retf
add
lds
mov
jae
cmp
adc
rcl
xchg
lds
leave
in
mov
fcmovne
mov
loope
xor
push
inc
inc
dec
and
rcr
mov
out
imul
mov
jbe
shr
mov
mov
push
pop
mov
inc
sbb
add
mov
xchg
inc
(bad)
jg
pop
push
xchg
call
add
es
jl
mov
pop
sub
fistp
xchg
in
mov
and
cmp
dec
and
mov
cmp
cmp
and
xchg
inc
jp
neg
call
jge
mov
movs
mov
fdivr
dec
pop
movs
(bad)
out
lods
sahf
scas
shl
pusha
xchg
aam
mov
ror
(bad)
xchg
push
popa
lods
scas
cwde
adc
push
mov
pop
adc
add
mov
cmps
or
ret
and
push
shl
rcr
add
push
ja
inc
cmp
sbb
adc
repnz
pop
fld
sbb
sahf
rol
test
xor
in
bound
in
(bad)
adc
lds
es
xor
xchg
xchg
sbb
rcl
and
scas
dec
xor
xchg
stos
inc
cs
inc
pop
aaa
push
cwde
add
ror
daa
repnz
and
xchg
mov
in
mov
sub
adc
mov
sub
mov
lods
or
movs
addr16
cmp
enter
sub
adc
dec
sahf
mov
or
aas
sbb
out
adc
xchg
push
mov
aaa
xor
sahf
retf
and
or
mov
jecxz
int3
push
aas
inc
out
pop
movs
add
jle
cmc
xchg
inc
push
out
xchg
mov
mov
sbb
jmp
fcom
or
fmul
int
cmps
daa
in
out
lahf
shr
jne
icebp
(bad)
in
dec
add
pop
sub
xchg
push
xor
cdq
repz
pop
out
pop
cmp
pop
not
dec
mov
mov
mov
movs
adc
mov
js
cdq
xor
add
je
lds
sti
ds
ja
fdiv
les
in
push
call
mov
mov
sub
stos
nop
adc
jno
outs
jmp
cmp
cmp
ja
ltr
fs
inc
shl
sub
inc
push
shr
out
arpl
jmp
adc
xchg
mov
repz
clc
jne
add
cmps
es
and
and
in
fisubr
jae
fst
cmp
ss
mov
xor
add
cmps
fisttp
scas
dec
mov
pushf
fwait
and
jnp
jb
lods
mov
rcl
inc
cmp
jmp
les
dec
retf
repnz
adc
xchg
into
or
mov
add
retf
hlt
inc
arpl
(bad)
push
das
fs
mov
cmps
jmp
shl
pop
mov
shl
push
push
retf
dec
or
out
popf
inc
xor
xchg
cmc
retf
adc
out
adc
sbb
dec
leave
xchg
repz
lock
jb
xchg
jmp
mov
mov
or
repz
mov
xchg
xchg
dec
adc
mov
shl
push
outs
js
dec
loop
push
aaa
xor
mov
ret
popa
out
pop
enter
sbb
hlt
pop
push
sub
or
push
iret
xor
(bad)
lahf
shr
inc
and
shr
bound
cmps
sub
jne
push
ins
mov
sbb
add
out
lahf
and
push
sub
mov
adc
fsub
push
imul
out
inc
in
arpl
loop
xor
(bad)
das
and
cmc
aaa
movs
push
stos
fnstcw
xchg
loope
mov
sub
aas
mov
movs
sbb
dec
dec
test
in
std
mov
jl
sbb
sub
and
dec
rcr
lods
pop
mov
test
imul
sbb
push
or
popf
ins
stos
sub
and
and
addr16
xor
ret
fidivr
adc
mov
push
inc
adc
jo
push
and
push
push
stc
je
mov
lds
dec
mov
dec
add
inc
stos
xchg
mov
(bad)
aam
movs
je
repnz
and
fadd
fsubr
pop
movs
push
pop
stos
mov
push
test
jb
sub
scas
mov
add
aas
mov
enter
xor
sahf
mov
ins
fidivr
xchg
sub
and
sbb
or
add
fadd
and
add
movs
cs
and
add
jno
mov
into
mov
rol
mov
mov
xchg
popa
daa
inc
push
jne
add
out
jae
js
xlat
xchg
cwde
xor
jns
pop
addr16
xchg
retf
dec
gs
and
xchg
fmulp
shr
xlat
push
mov
popa
jmp
retf
and
lock
call
inc
sahf
inc
sub
mov
add
mov
add
adc
inc
loop
jno
mov
stos
add
retf
push
pop
fdiv
cmps
lahf
push
jno
ror
cdq
lock
mov
sbb
aad
pop
retf
adc
dec
fnstenv
mov
and
(bad)
ror
and
pop
iret
mov
adc
xor
mov
and
ja
or
lds
scas
pop
sar
jne
sub
out
mov
gs
ins
(bad)
cmp
fisttp
retf
sub
push
push
push
or
out
mov
jle
stos
and
dec
jo
pop
push
cmp
dec
inc
test
es
(bad)
loopne
data16
cs
cld
xor
and
sbb
inc
js
and
in
pushf
leave
mov
add
add
out
movs
shr
lods
rcr
pop
adc
(bad)
fldcw
push
es
fcmovnu
jg
jno
mov
adc
stos
xchg
mov
fdivr
jne
sub
addr16
xchg
aam
or
add
in
sbb
and
cmp
mov
adc
inc
cmp
jnp
js
retf
je
inc
(bad)
(bad)
call
adc
(bad)
fisub
mov
and
rcr
jl
movs
into
ficom
les
loopne
cli
into
mov
jbe
push
inc
rol
cmp
jbe
bound
cmp
mov
lds
call
daa
adc
jno
push
jne
popf
pop
fwait
cli
cmp
add
mov
mov
stc
test
pop
sub
xchg
sub
leave
daa
pop
inc
lods
or
cmp
addr16
inc
jge
and
dec
inc
jge
add
jbe
pushf
stos
mov
nop
dec
sub
ret
add
ret
ins
add
pusha
jmp
fbstp
es
imul
daa
sti
sub
mov
imul
mov
pop
nop
dec
ret
leave
je
xor
xchg
sbb
pop
sbb
rcr
jl
mov
inc
addr16
repnz
(bad)
call
fwait
cmp
into
cmp
mov
clc
jl
pop
in
sahf
(bad)
adc
cmc
inc
xchg
add
inc
cdq
inc
stc
and
jecxz
sbb
push
aad
enter
es
sbb
movs
lds
into
ror
mov
loopne
push
ja
dec
out
sub
leave
fisttp
xor
mov
sbb
pop
sub
sub
in
sbb
mov
mov
mov
scas
pusha
dec
push
adc
mov
inc
xchg
(bad)
ret
fidiv
mov
iret
mov
push
pop
adc
adc
sar
ss
imul
cmp
mov
pusha
loop
add
mov
or
shl
std
add
int
inc
sbb
(bad)
xchg
xchg
stc
vmulpd
sub
(bad)
data16
fcomp
lahf
stos
mov
push
clc
mov
sbb
jmp
js
add
into
test
dec
sahf
pop
xchg
sub
pop
add
push
sub
push
aas
and
cmps
je
xchg
mov
in
(bad)
mov
pop
adc
push
int
movs
fist
mov
leave
inc
enter
outs
lods
xchg
mov
mov
inc
add
cmp
(bad)
lds
adc
mov
dec
sbb
dec
test
pop
jmp
fcom
repz
jmp
mov
xchg
retf
loop
push
in
ja
inc
daa
mov
mov
dec
inc
and
mov
inc
cli
aaa
pop
imul
sub
dec
push
mov
clc
sub
inc
aad
sbb
(bad)
jnp
lds
and
lds
lahf
mov
sbb
stos
xor
add
inc
icebp
mov
inc
lds
pop
retf
adc
dec
dec
jecxz
out
jbe
xor
test
imul
push
mov
mov
jae
sbb
int
lahf
lock
adc
push
lds
jno
data16
int3
sub
aas
leave
add
xchg
test
and
stos
ds
push
add
mov
jae
shl
nop
sbb
xchg
cwde
jbe
mov
sbb
inc
call
jecxz
xor
jmp
xchg
dec
ins
iret
sub
inc
add
sbb
pop
mov
pushf
sar
loop
fpatan
ror
in
or
mov
test
pop
xchg
push
mov
(bad)
icebp
mov
sbb
pusha
pop
jmp
mov
push
push
sbb
sar
xor
push
mov
inc
add
repz
movs
pushf
scas
sbb
or
loope
nop
xchg
jmp
mov
xchg
scas
push
cld
test
pop
dec
xor
mov
push
and
xor
enter
(bad)
pop
push
ins
shl
mov
sub
repnz
mov
or
push
mov
push
push
sub
leave
lds
std
xor
ror
test
imul
jbe
jge
arpl
adc
imul
call
lock
fwait
dec
mov
ret
daa
xor
xchg
push
ja
mov
cmc
xchg
outs
popf
push
aam
in
cmp
cld
cmp
fcom
ds
bound
lock
fsub
mov
jl
and
hlt
sahf
xchg
push
mov
fstp
pop
in
adc
cmp
push
jbe
dec
ins
inc
add
pushf
push
xor
outs
out
jo
push
jmp
add
stos
pusha
adc
dec
mov
pop
int
push
scas
in
jecxz
cmps
push
or
inc
outs
or
push
xor
xor
cmp
mov
mov
sub
lods
or
call
das
rcr
push
hlt
jle
lock
mov
cmps
outs
dec
jmp
or
mov
div
pop
sub
sub
fsubrp
add
or
frstor
data16
not
(bad)
cmp
out
scas
cmps
out
inc
es
inc
es
das
(bad)
(bad)
sub
(bad)
jge
cmc
imul
push
shl
or
jae
dec
in
sbb
add
mov
movs
inc
scas
mov
mov
add
fwait
lods
push
ss
jno
mov
lods
nop
clc
mov
xlat
sbb
cmp
lods
cmp
lods
fdivr
das
es
movs
addr16
imul
cmp
rcr
gs
or
xor
out
ja
arpl
sbb
js
mov
(bad)
out
pop
dec
pop
sub
push
sub
and
rcl
sub
jb
aam
(bad)
fild
pusha
sub
adc
nop
imul
sti
rcl
jae
jae
push
ins
iret
lea
push
loop
popf
cwde
retf
cmp
mov
sub
dec
pop
xor
jge
stos
aaa
retf
pop
rol
pop
inc
inc
cmps
sub
loope
mov
or
retf
(bad)
scas
ret
add
or
ret
xor
scas
xchg
iret
pop
xchg
push
mov
mov
movs
jge
call
jge
imul
hlt
xor
aad
mov
add
push
mov
leave
sahf
adc
cwde
je
aam
cmps
cmp
rcl
xor
fiadd
sbb
and
and
aaa
jmp
aad
xor
call
mov
mov
aam
sub
ja
xor
sbb
xor
or
mov
fistp
test
imul
rcr
cmp
add
aam
mov
pshufw
adc
inc
pusha
inc
push
add
cmp
ins
push
add
xor
mov
xor
arpl
xor
(bad)
test
lds
push
(bad)
mov
jmp
inc
ficom
mov
es
xchg
adc
scas
mov
pop
scas
ja
push
sbb
sbb
ja
add
mov
enter
cwde
inc
or
xchg
pushf
int3
xchg
xchg
pop
in
movs
popf
div
outs
test
xchg
shl
into
inc
stos
jmp
popa
daa
imul
lds
xchg
bound
pop
dec
push
test
cld
dec
ja
in
in
aas
popf
add
xchg
cli
cli
iret
mov
das
and
mov
js
pusha
sbb
out
sbb
jnp
inc
(bad)
dec
mov
ins
ror
arpl
pusha
push
jno
(bad)
mov
movs
shl
add
add
or
push
scas
aad
sbb
or
int
jmp
xor
and
js
mov
pop
jmp
and
mov
mov
fdivr
ins
jecxz
xchg
adc
data16
icebp
pop
pop
out
shl
jl
sbb
fnstenv
cmp
in
(bad)
xchg
pop
jb
cmp
mov
fsubr
mov
out
test
(bad)
jmp
or
outs
jmp
hlt
test
push
push
xor
fdivr
jmp
hlt
xor
pop
pop
cld
dec
pop
dec
inc
fimul
sbb
mov
inc
adc
adc
xchg
and
mov
pop
jbe
mov
push
movs
cmp
test
iret
mov
aam
rol
test
fld
lods
sti
xchg
sub
sub
adc
push
dec
shr
push
sub
loope
call
dec
(bad)
sub
or
dec
push
loope
fidiv
pop
test
ins
mov
jno
mov
cmp
sub
sbb
ror
sub
dec
adc
mov
cmp
aas
call
hlt
fbstp
stos
jmp
call
(bad)
icebp
adc
mov
fisttp
push
add
push
das
or
pop
popf
inc
cmp
xchg
jbe
enter
das
jns
mov
pop
push
jo
sbb
and
call
aas
rcl
into
push
xchg
ret
outs
xlat
in
xor
sub
adc
popf
mov
movs
repz
push
jge
xor
repnz
cmp
fistp
call
sbb
mov
jp
push
std
sbb
bsr
lods
mul
cld
dec
iret
in
xor
imul
in
pop
mov
adc
cmp
hlt
daa
add
jge
or
jmp
lock
push
push
mov
mov
xor
inc
(bad)
test
sbb
ins
outs
mov
xchg
dec
push
sub
jle
push
inc
fsub
adc
enter
mov
mov
out
mov
aad
repnz
xchg
loop
arpl
cli
imul
add
xor
add
jae
push
aad
aaa
jg
movs
inc
test
arpl
dec
sbb
data16
fisub
fild
jns
(bad)
int
sbb
or
push
sbb
jge
inc
and
retf
dec
mov
adc
cmc
dec
stos
adc
mov
push
jb
ss
fdiv
scas
dec
gs
retf
sbb
shr
mov
mov
iret
pop
sub
cmps
xor
or
push
sbb
jo
ins
push
adc
pop
ret
int3
call
dec
addr16
ja
cmp
jne
mov
fidiv
scas
jg
push
or
pushf
cmc
repz
gs
xchg
repnz
neg
retf
loop
mov
daa
push
pop
ja
xor
add
mov
fwait
movs
enter
jns
add
test
jg
add
mov
mov
clc
jne
inc
movs
add
test
repnz
jo
into
jo
lods
std
and
pusha
adc
adc
out
push
pop
jge
mov
jmp
and
push
xor
xchg
pushw
mov
shl
inc
test
xchg
jae
cwde
lea
xor
jmp
pop
adc
(bad)
sbb
ins
adc
adc
mov
sti
or
cwde
aam
jmp
outs
adc
sub
sub
add
cmp
xor
mov
or
int
cwde
pop
js
arpl
test
shl
fsub
mov
inc
jns
mov
data16
(bad)
push
jns
arpl
dec
pop
mov
xchg
jmp
dec
add
(bad)
xor
rcl
push
mov
push
push
data16
xchg
icebp
imul
aaa
test
cwde
js
inc
and
ficom
lds
enter
lea
scas
loop
movs
xchg
or
rdtsc
mov
ret
mov
mov
(bad)
fist
lock
popf
(bad)
out
mov
stc
inc
dec
outs
add
das
repnz
neg
retf
inc
cld
pusha
ss
mov
sbb
(bad)
(bad)
repz
loope
mov
xlat
jae
aas
sbb
mov
xor
cmp
inc
loop
ret
retf
pop
and
lods
mov
adc
gs
cmp
jg
inc
jmp
int
and
gs
xchg
add
sub
aam
fldenv
cdq
push
dec
or
add
test
adc
ja
cmp
addr16
push
sub
mov
jno
shl
push
cmp
xor
cwde
lds
dec
push
xchg
(bad)
xor
icebp
sbb
cmps
in
push
jmp
mov
push
sahf
inc
pop
sub
mov
or
adc
jmp
repz
call
movs
xor
mov
das
mov
add
cmp
loop
ds
call
inc
mov
mov
add
out
mov
mov
adc
xchg
xchg
push
nop
into
sar
pushf
(bad)
fstp
mov
xchg
mov
xchg
mov
sahf
or
adc
pop
ins
add
or
ds
std
cmp
push
fcom
enter
(bad)
in
or
jge
call
les
or
mov
test
daa
jo
stc
sub
sub
in
(bad)
push
pop
mov
xchg
pusha
je
cmps
(bad)
sub
inc
mov
xchg
and
fidivr
pop
inc
nop
mov
das
xchg
(bad)
int3
repz
cmp
rcl
cmp
mov
call
and
mov
loopne
jge
lock
out
pop
inc
or
mov
xlat
push
(bad)
cmp
das
mov
dec
or
(bad)
pop
or
and
and
push
fcomp
jmp
sub
adc
(bad)
fwait
cs
cwde
mov
jbe
out
mov
sub
xor
cmp
add
mov
mov
sbb
or
test
cs
jbe
or
or
mov
outs
ret
push
xchg
xchg
pop
dec
jle
add
imul
scas
(bad)
sbb
js
jg
in
push
add
sub
cmp
xlat
idiv
and
mov
mov
pop
outs
retf
jecxz
push
sub
scas
and
jne
stc
mov
push
xchg
arpl
aam
xor
xor
call
mov
icebp
push
sar
cld
pop
leave
imul
int
rcl
adc
test
in
mov
jno
shr
out
test
and
and
data16
or
gs
(bad)
es
mov
add
and
inc
pusha
enter
jp
mov
add
idiv
cmps
and
imul
inc
fsubr
sub
push
pop
div
lock
add
and
fsub
add
ins
pop
pop
jno
pop
gs
loop
jae
or
xchg
dec
xor
mov
inc
xbegin
inc
sbb
jmp
lock
dec
adc
xchg
lods
add
shr
and
push
pop
and
mov
aad
std
dec
sbb
and
xor
mov
les
lods
aas
or
jl
mov
retf
jbe
add
leave
stos
add
addr16
test
or
xchg
push
xchg
mov
dec
clc
xchg
push
rol
fist
cwde
inc
fstp
push
imul
repnz
jg
into
adc
fst
pop
inc
pop
gs
pushf
dec
adc
and
out
imul
pop
add
pop
adc
dec
mov
pop
cmp
fild
xchg
adc
cmps
dec
test
int3
pushf
loope
sahf
xchg
loope
inc
add
hlt
(bad)
push
push
jp
hlt
mov
fld
add
das
push
jmp
stos
shr
icebp
jle
retf
sbb
sub
jg
dec
mov
mov
push
sub
sub
pop
jg
inc
mov
fwait
xor
push
xchg
mov
adc
arpl
ret
stos
(bad)
mov
arpl
sbb
cdq
push
(bad)
out
daa
push
into
test
cmps
neg
add
xor
push
push
push
pop
retf
mov
bnd
sub
mov
sar
sbb
push
(bad)
push
(bad)
iret
repnz
rcl
push
cmps
call
rol
xor
ror
pusha
mov
pop
popf
dec
jno
ficom
adc
push
sar
loopne
jno
retf
icebp
ficom
iret
pop
imul
inc
push
int3
in
test
push
push
xor
ror
imul
repz
mov
rcl
stc
push
outs
fstp
jne
mov
int
mov
push
jns
xor
(bad)
cmp
jmp
mov
jg
data16
inc
leave
mov
outs
mov
stos
inc
cmp
mov
mov
sahf
fucomp
xchg
cli
(bad)
out
pop
(bad)
mov
mov
mov
dec
lock
test
cdq
div
jno
mov
into
test
sbb
push
lock
iret
mov
or
xor
xor
loopne
mov
out
ret
ins
cmp
mov
mov
dec
gs
popa
push
stc
dec
lock
ins
sbb
xor
aas
sub
js
adc
das
inc
dec
push
sbb
or
and
lea
sbb
shl
dec
mov
sbb
or
push
sub
cmp
bnd
adc
ret
jne
lds
xor
inc
imul
mov
cwde
retf
bound
or
iret
xchg
loopne
mov
test
in
out
xchg
addr16
push
faddp
sub
mov
inc
popa
xor
repz
jp
cmp
cdq
inc
add
xchg
inc
pop
fucomp
repnz
mov
dec
add
jne
mov
cmp
repz
into
dec
adc
cmps
cmp
lods
int
cmp
ret
and
adc
leave
lahf
jecxz
inc
stos
data16
xor
cmp
jmp
icebp
icebp
fcom
loopne
add
stc
sbb
push
retf
and
pop
outs
pop
cmc
xor
inc
mov
jl
(bad)
xor
dec
dec
dec
(bad)
jb
data16
test
enter
out
es
shr
je
test
inc
out
mov
push
mov
(bad)
jo
sbb
repnz
sahf
xchg
dec
js
pop
sbb
lods
jo
shl
adc
aad
mov
and
inc
fnstcw
aad
cmp
in
ds
xor
sbb
ins
imul
inc
addr16
push
push
cdq
(bad)
sbb
loopne
jae
ins
sub
mov
int3
dec
sbb
mov
cli
lods
sub
std
add
sbb
jae
outs
mov
je
(bad)
pop
cmp
inc
fisttp
dec
dec
add
mov
out
inc
and
inc
adc
jecxz
iret
ret
mov
loope
sub
sub
test
sbb
jmp
cs
or
mov
jb
cld
lods
iret
and
mov
outs
add
adc
cmp
or
jb
sbb
push
loop
cmp
mov
adc
sub
test
add
in
sub
fs
out
gs
inc
jb
push
xchg
aam
mov
popf
cld
or
xor
imul
(bad)
ds
mov
push
call
out
addr16
cwde
lods
inc
push
rol
shl
std
xor
std
imul
sub
(bad)
mov
sub
and
call
arpl
ret
pop
sti
sbb
ror
push
pop
retf
fnstsw
cmp
stc
sub
mov
cmp
rcr
push
out
cmp
leave
push
mov
in
xor
adc
sub
out
(bad)
pop
inc
fimul
mov
dec
add
add
sub
push
dec
mov
ins
dec
push
rcl
sbb
setae
lods
daa
and
sbb
jo
sbb
jns
push
out
test
mov
clc
adc
add
lahf
mov
inc
stos
sub
test
or
paddw
(bad)
adc
ins
adc
fsubr
push
jmp
mov
sti
fwait
mov
out
movs
(bad)
xor
fwait
xchg
cmp
push
stc
adc
jmp
push
retf
xor
dec
push
jmp
int
mov
ins
addr16
imul
lds
push
adc
imul
dec
cld
pop
popf
and
xchg
sub
aam
xchg
aas
aam
bnd
jge
pop
mov
and
cdq
jmp
(bad)
mov
add
sahf
inc
int3
hlt
mov
arpl
cmp
sbb
sahf
dec
push
sbb
adc
adc
movs
fidiv
fnstenv
mov
add
inc
cwde
ss
xchg
adc
out
mov
movs
cs
mov
ja
cmp
jne
rcl
fisubr
pop
shr
aaa
test
mov
das
jo
lods
fidiv
popf
aad
out
js
cwde
mov
pop
pop
scas
out
ins
push
or
(bad)
ss
push
fwait
sbb
aam
cmp
cs
inc
or
fsubr
retf
dec
in
sub
lods
sbb
jg
popa
js
xchg
rol
clc
lea
int
pushf
pop
inc
mov
mov
rcr
test
out
pop
jl
sub
(bad)
lods
retf
mov
sar
xlat
dec
and
jmp
loope
mov
or
loop
lods
out
shr
or
(bad)
mov
test
xor
test
mov
jp
jmp
mov
mov
mov
jle
movs
xlat
push
mov
(bad)
push
mov
push
push
sub
pop
mov
dec
mov
lea
es
add
fcomp
mov
icebp
dec
or
ret
(bad)
lds
jp
stos
loop
jmp
ret
lahf
ins
jno
in
fcom
std
je
or
pop
cmc
stos
loopne
in
mov
scas
or
push
sub
pop
es
mov
int
xor
mov
dec
aad
sub
dec
loop
pop
and
pop
pusha
jmp
retf
fcom
or
jge
pop
add
or
jmp
imul
in
test
stc
mov
ja
or
scas
fld
or
mov
sub
fcomp
lea
(bad)
jge
push
and
cmp
jnp
add
mov
mov
imul
retf
mov
xor
or
dec
add
push
daa
sub
call
mov
pop
inc
dec
repz
cdq
inc
adc
pop
cmps
imul
es
test
outs
xchg
mov
push
ret
out
dec
arpl
sahf
push
fstp
enter
test
mov
sub
mov
xor
xchg
sub
scas
sub
add
out
retf
outs
mov
push
into
cmovl
lahf
fbld
cmp
or
mov
push
mov
stc
jnp
mov
cmps
es
out
mov
jp
adc
div
xchg
test
cli
inc
sub
mov
mov
cmp
sbb
mov
rcl
retf
xchg
add
cld
sbb
add
(bad)
sbb
not
ret
idiv
lahf
xchg
in
cmp
inc
cs
inc
push
ja
rol
sti
cmc
adc
push
shl
xor
and
sbb
sbb
add
adc
mov
call
pop
fnsave
(bad)
rol
adc
sbb
mov
mov
cld
xchg
jno
pand
mov
inc
in
mov
and
cmp
jnp
lods
clc
push
mov
xchg
xlat
push
or
inc
stos
dec
out
xchg
fmul
adc
ret
push
inc
jl
(bad)
test
sbb
jecxz
push
adc
push
es
push
rcl
sbb
popf
pop
loope
arpl
(bad)
xchg
mov
stc
ds
int3
adc
xchg
adc
and
mov
mov
pop
jg
ins
push
sbb
je
dec
out
in
fwait
cli
add
cmps
ins
out
mov
inc
movs
push
adc
aaa
and
fisttp
scas
loope
movs
jg
rcl
jmp
jae
fstp
xchg
adc
hlt
into
rol
jmp
aas
jns
push
aaa
cmpps
adc
jmp
enter
sub
outs
mov
push
ret
sub
mov
hlt
push
add
mov
iret
inc
cmp
lahf
sub
fs
je
push
inc
add
sub
test
xor
jle
pop
and
fs
in
vmaxpd
xlat
and
lds
sub
or
push
outs
and
imul
sub
mov
or
add
push
mov
dec
test
pop
imul
add
and
add
cmps
sbb
cld
(bad)
aam
cmp
ficomp
pop
retf
push
ficomp
out
in
sbb
into
mov
mov
movs
iret
xor
push
mov
lea
inc
pusha
pop
lods
cs
mov
pop
scas
ja
fld
jo
div
mov
cmp
out
call
sub
in
sar
lock
aaa
and
xlat
popf
mov
sbb
lods
pop
pop
call
inc
loop
inc
jl
jmp
or
clc
lods
idiv
cli
rol
jb
mov
jl
iret
adc
xor
sub
mov
cmp
xor
(bad)
sbb
xchg
add
or
push
iret
gs
pop
mov
mov
inc
stos
and
mov
enter
and
(bad)
out
and
mov
rcr
add
and
rcr
inc
sbb
imul
mov
mov
xchg
inc
cmc
cli
ins
pop
ret
xchg
pop
ds
cmp
xor
push
or
sahf
pop
pop
cmp
mov
scas
jmp
popa
pop
stc
popa
in
mov
rcl
pop
stos
jb
les
pop
mov
xchg
loope
out
imul
fbstp
dec
je
fimul
mov
nop
pop
in
push
popa
inc
pop
xchg
sub
fmul
popa
jb
mov
mov
shr
pop
ins
or
cli
out
inc
mov
movs
mov
jne
movs
mov
mov
scas
mov
out
mov
add
add
dec
call
test
mov
jecxz
je
mov
adc
in
push
mov
adc
(bad)
nop
fnsave
dec
clc
aam
mov
arpl
test
jno
fisttp
test
jo
jb
xor
movs
int
lods
call
mov
int
cmc
and
ror
(bad)
cli
dec
mov
cmp
push
and
aaa
cmp
(bad)
mov
push
test
sti
inc
enter
push
or
adc
fwait
ins
repnz
cmc
dec
arpl
xor
dec
push
neg
jg
(bad)
push
jbe
and
mov
and
or
cmp
rol
lds
mov
pop
ins
or
addr16
mov
push
fwait
cmp
xor
icebp
stos
cld
repnz
sub
inc
test
popa
jp
xchg
add
add
dec
push
lahf
(bad)
jge
inc
add
mov
and
xor
pop
cmc
mov
les
aad
mov
lods
push
lods
out
adc
mov
jae
pushf
loopne
mov
nop
jbe
dec
dec
push
pop
mov
shl
xchg
mov
xor
(bad)
mov
xchg
out
enter
dec
mov
and
and
and
add
xor
mov
or
ror
loope
fwait
inc
lea
std
and
data16
add
mov
push
add
or
cmp
inc
repnz
ficomp
add
in
push
enter
retf
xchg
shr
jne
inc
mov
and
jmp
ins
mov
test
jl
cmc
cs
lods
and
int3
or
scas
mov
cmc
and
in
and
outs
stos
fdivr
fcmovbe
push
mov
push
call
jp
push
sub
(bad)
fs
cmp
je
retf
mov
stos
test
mov
dec
mul
mov
scas
rcr
jmp
add
inc
cmps
shl
mov
scas
(bad)
mov
fdiv
aas
jne
out
or
dec
les
push
push
in
xchg
inc
mov
fadd
ret
and
mov
popf
cmp
cmp
pop
stos
inc
mov
pop
push
(bad)
or
pop
push
sub
inc
rcr
mov
cmc
js
and
mov
mov
es
push
test
cs
dec
inc
nop
cmp
push
xor
stc
adc
es
dec
or
std
jg
inc
and
xor
loop
fs
sahf
les
clc
inc
mov
mov
xchg
in
cmp
das
call
mov
test
or
sub
test
fild
stos
scas
div
aas
xor
fdiv
dec
mov
mov
push
aaa
mov
es
retf
cmc
cmc
ja
dec
push
pop
das
jmp
fcomp
(bad)
cmp
add
or
xchg
nop
(bad)
call
lds
jne
mov
sbb
cmp
pop
push
ja
mov
dec
clc
es
dec
fwait
stc
ret
sbb
jmp
lds
xor
push
iret
xor
mov
rol
popa
jo
(bad)
stc
clc
mov
jg
(bad)
xchg
call
test
std
push
inc
inc
jl
pop
inc
sbb
cmp
push
cmp
aaa
dec
push
or
pop
stc
cld
shr
(bad)
outs
add
adc
push
jmp
mov
out
ja
fisub
mov
cmps
push
clc
sbb
test
mov
xchg
mov
lds
call
hlt
scas
push
xchg
mov
or
popf
push
ror
adc
mov
and
adc
imul
test
sbb
fist
ins
xchg
shr
mov
fdivr
int
xor
(bad)
xchg
(bad)
lods
and
clc
sti
inc
cmps
jmp
push
lds
mov
xor
add
push
inc
fsubr
xchg
jl
les
inc
xchg
aam
mov
pushf
cmps
stos
cdq
ret
dec
dec
add
pop
(bad)
and
cmp
rcr
cmp
mov
add
rol
loope
lds
nop
jo
popf
stc
xor
ins
mov
aad
stos
lds
in
or
jbe
add
mov
ss
ror
inc
or
and
mov
sbb
nop
shl
inc
imul
aam
not
repz
aad
push
xor
or
outs
inc
cmp
pop
add
jecxz
les
shr
pop
xor
pop
lods
shl
push
bound
out
in
xor
push
call
push
rcl
pop
push
mov
mov
loopne
mov
mov
mov
test
cmp
test
sbb
and
dec
sbb
mov
mov
adc
inc
pop
leave
push
pop
inc
cmp
jne
loop
xchg
ret
xchg
and
inc
xchg
pop
dec
xor
xchg
icebp
or
lds
push
movs
scas
or
mov
inc
lods
push
setno
jmp
adc
enter
(bad)
aam
inc
or
mov
ret
fwait
mov
cmp
loopne
inc
and
retf
sbb
das
xchg
mov
in
mov
sub
ja
jg
in
call
mov
mov
inc
mov
jg
jecxz
jp
in
lahf
mov
ret
shl
and
fs
(bad)
jle
or
sbb
pop
mov
jmp
adc
adc
mov
xor
fisttp
push
arpl
or
and
push
rcl
idiv
and
pop
push
movs
out
cdq
pop
mov
dec
jne
shl
pop
test
fcomp
popf
mov
sahf
les
mov
outs
cmps
mov
jecxz
inc
call
xchg
inc
cld
adc
and
iret
daa
mov
adc
sbb
aam
dec
packsswb
data16
mov
into
fist
xchg
cmps
jns
fist
or
dec
xchg
jbe
push
sbb
es
int
imul
fimul
loope
movsx
mov
xchg
es
shl
mov
xchg
shl
jmp
mov
push
cmp
add
add
addr16
sbb
mov
cli
(bad)
lock
call
fidiv
aas
jmp
mov
mov
std
fwait
and
xchg
inc
mov
fisttp
ja
ftst
movs
xchg
xchg
mov
lea
mov
cld
ss
jno
pop
push
aas
xor
add
int
call
dec
icebp
push
fidiv
loope
nop
adc
push
lock
pop
setl
mov
imul
mov
popa
imul
imul
stos
lock
sub
add
inc
cmp
repnz
pushw
jmp
or
dec
cmps
test
inc
jbe
and
sbb
mov
pop
rep
scas
jle
dec
shr
add
shl
sub
push
add
(bad)
repz
mov
mov
mov
rol
aam
or
mov
enter
pop
nop
xchg
in
cmps
mov
jns
stc
inc
add
mov
pop
push
jl
adc
lds
pusha
imul
in
cmc
push
jecxz
fstp
xchg
inc
inc
lock
cs
maskmovq
imul
jge
push
daa
sub
dec
stc
jno
imul
loope
adc
nop
scas
aam
sub
fild
shl
loop
test
xchg
loop
xchg
sbb
push
into
in
sub
cmovl
sub
loope
mov
pop
adc
lods
cmp
mov
hlt
add
or
arpl
ins
and
xchg
ins
mov
sti
ja
jo
dec
inc
xor
mov
mov
jo
mov
shl
in
shl
les
or
adc
xor
pop
pop
inc
aam
jns
cs
pusha
cmp
mov
pop
sbb
xor
xor
sub
mov
mov
stos
add
stos
push
jae
out
add
mov
mov
pop
arpl
add
inc
and
cmp
stc
(bad)
cdq
mov
dec
inc
mov
mov
shl
pop
xlat
(bad)
dec
adc
jmp
scas
iret
sbb
fwait
mov
cmp
test
outs
out
int
(bad)
sbb
mov
jae
lods
or
sahf
pop
sti
mov
or
adc
jle
pop
fisubr
jae
add
sahf
test
push
out
dec
cmp
cmc
xchg
scas
popa
add
cmp
jmp
fldenv
mov
mov
icebp
pop
aas
mov
daa
shr
es
fs
lods
popa
loope
ja
add
push
scas
pop
or
ret
popf
in
pushf
xchg
adc
mov
sbb
add
inc
aam
jp
repnz
ins
ins
or
outs
cli
push
pop
cwde
pop
xchg
retf
lds
lods
or
sub
inc
in
outs
xchg
ss
cmc
popa
push
ins
clc
cmc
hlt
shl
jo
xor
and
dec
pop
(bad)
aad
push
imul
mov
dec
in
aaa
push
adc
and
jb
outs
sub
jne
xor
aam
and
jmp
int3
cmp
imul
test
stos
(bad)
mov
int
mov
iret
mov
adc
mov
push
jne
xor
inc
outs
and
stc
add
or
cmp
cwde
stos
lods
sbb
jno
clc
sub
inc
adc
in
mov
test
xor
ret
pushf
mov
pop
dec
mov
call
jno
pop
ds
inc
pushf
push
xchg
imul
push
daa
(bad)
out
sub
xchg
xor
repnz
sbb
mov
mov
pop
mov
scas
imul
iret
das
jecxz
sahf
mov
daa
sbb
ficomp
cmp
cld
(bad)
pop
mov
adc
fwait
es
fmul
les
mov
jl
into
mul
loopne
jne
cmp
add
or
test
dec
call
xor
mov
and
div
mov
stc
ror
dec
scas
fimul
push
dec
push
and
ret
push
push
in
and
pop
test
(bad)
call
add
jl
cmps
dec
mov
movsx
test
sub
sbb
xor
push
cmc
ror
(bad)
out
mov
push
(bad)
cmp
sbb
lods
xor
ins
jnp
cmp
nop
jne
pop
push
xor
retf
fstp
int3
cmp
(bad)
cwde
xor
(bad)
adc
lds
pop
mov
in
test
add
repz
(bad)
dec
cmp
jle
rep
xor
aas
rol
cmps
es
int3
sahf
shl
jne
pop
test
mov
imul
or
test
add
ja
and
adc
xchg
dec
scas
in
inc
test
mov
cmps
neg
ds
or
leave
xlat
add
(bad)
pop
mov
cmp
not
jl
retf
mov
sar
xchg
into
push
aaa
shr
(bad)
repz
cdq
lock
loope
and
xchg
dec
dec
mov
and
xor
mov
ins
pop
xor
add
mov
stc
jl
cmp
mov
repnz
in
je
xchg
mov
(bad)
(bad)
cmp
ret
and
and
jnp
pusha
or
mov
ret
out
int3
ja
jge
addr16
inc
pop
adc
daa
push
test
loope
xchg
mov
leave
scas
aaa
test
sub
pop
cmps
xchg
leave
xchg
push
jae
mov
dec
pop
add
call
shr
lea
jge
test
or
pusha
loop
sub
jmp
(bad)
std
test
inc
pop
test
jno
ror
inc
out
adc
imul
aad
jmp
scas
movs
mov
inc
add
addr16
std
cmps
lea
push
pop
add
adc
adc
push
sub
enter
shr
test
iret
fistp
addr16
adc
pop
adc
mov
or
pushf
cwde
cmp
xchg
cmp
arpl
cli
inc
dec
xchg
aaa
inc
hlt
ds
add
jbe
into
das
sbb
sti
sub
add
sub
sub
test
mov
scas
mov
test
cs
loope
ret
not
xor
sub
in
pop
xchg
out
ret
in
imul
jg
push
push
and
ret
imul
push
out
sub
adc
(bad)
dec
stos
test
jae
idiv
jmp
arpl
adc
mov
ror
mov
sub
imul
jmp
mov
adc
scas
xlat
xor
les
xor
cmp
jl
ins
out
cs
or
sbb
dec
repz
sti
or
or
dec
xchg
sbb
rcr
inc
sbb
xor
fadd
mov
push
(bad)
aad
sbb
cmp
pop
add
sub
mov
cmps
pop
sti
jbe
and
mov
cmc
lahf
sbb
dec
xchg
adc
push
fdivr
mov
es
cli
push
cmps
and
pand
xchg
or
push
test
dec
in
jmp
lods
xchg
jl
sbb
lock
add
jno
cmps
ret
pop
xchg
data16
adc
inc
dec
add
push
dec
mov
(bad)
jle
data16
push
push
xchg
lock
dec
cdq
call
xchg
ror
pop
loop
popf
fcomp
push
loopne
dec
les
loope
dec
mov
pop
mov
int
movs
ss
int3
inc
mov
or
pop
movs
xchg
pusha
pop
lods
fadd
(bad)
and
lods
int
(bad)
sar
pop
jge
loop
pop
jb
fisttp
ds
add
dec
ja
jne
push
sar
sbb
ror
sub
ja
int
test
in
ret
retf
jnp
pop
jmp
push
xor
in
clc
(bad)
fprem1
icebp
stos
(bad)
frstor
mov
popf
add
cmovs
addr16
cli
jmp
inc
(bad)
leave
and
dec
push
add
mov
les
or
xchg
movs
call
fmulp
fsubr
iret
adc
out
cmp
mov
call
gs
xlat
ret
xlat
popf
popa
or
jmp
and
mov
leave
jl
cwde
dec
sbb
jmp
in
hlt
(bad)
loope
push
bound
call
popf
adc
add
mov
jmp
(bad)
and
add
pop
push
jg
movs
mov
test
js
into
hlt
pop
xchg
sub
cmp
aas
mov
mov
mov
and
jns
cmp
stc
aas
test
or
adc
xchg
(bad)
(bad)
pop
sub
inc
cmps
xchg
lods
loopne
push
push
cmp
mov
jmp
clc
pushf
kmovb
adc
sar
push
pop
in
mov
arpl
fdiv
aas
mov
outs
mov
sub
jb
push
inc
ins
sbb
cmps
add
or
inc
cs
test
sbb
push
cmps
in
jmp
sahf
cmp
and
pop
or
sbb
cmp
jmp
cs
or
adc
cmp
mov
lods
movs
jno
daa
dec
and
xor
retf
mov
jnp
cmp
sti
xlat
push
xchg
xchg
xor
pop
sub
stos
cld
cld
jmp
aas
inc
pop
dec
ret
ror
mov
movs
mov
(bad)
fwait
sahf
pop
lock
pop
xchg
arpl
inc
cmp
pop
xor
movs
mov
jecxz
(bad)
jae
pop
aaa
xor
pushf
and
mov
mov
mov
stos
mov
xor
pushf
ret
push
shl
xor
popf
sub
jg
cmp
lock
ins
cmp
sbb
jae
ror
push
(bad)
xor
(bad)
iret
inc
jmp
pcmpgtd
dec
pop
daa
into
fsubr
xchg
and
inc
mov
stos
shr
sbb
shr
cld
(bad)
out
aam
test
xchg
sbb
cmp
pop
fs
jmp
aas
(bad)
hlt
xor
jnp
jecxz
or
cdq
jns
ror
iret
fdivr
mov
push
mov
or
xchg
cli
and
in
xor
adc
les
mov
and
sbb
xchg
ins
jne
test
stc
dec
pusha
jno
cwde
fsub
cwde
xchg
repnz
rcl
test
aas
retf
je
xor
mov
dec
mov
add
hlt
ja
cld
dec
inc
jmp
pop
sub
scas
xlat
cdq
dec
repnz
leave
in
rol
push
xchg
push
mov
dec
jp
xchg
ds
inc
jae
pusha
jg
test
mov
pop
loope
lea
pop
sub
adc
jne
into
mov
inc
jae
inc
or
push
mov
test
jmp
movs
mov
mov
popa
pushf
ficom
inc
adc
imul
loope
dec
mov
(bad)
lods
ins
lds
push
or
xor
mov
xor
imul
mov
fistp
into
adc
cmp
mov
jmp
push
sub
and
(bad)
cli
adc
xor
imul
lods
adc
add
mov
mov
outs
enter
out
push
ja
dec
(bad)
mov
mov
sub
jb
push
push
inc
pop
scas
fdivr
xor
adc
inc
lahf
rol
and
cs
popa
div
xor
test
nop
sbb
sbb
add
in
jb
hlt
fdiv
jmp
out
pop
ins
or
cld
jg
dec
pop
icebp
cdq
cmp
nop
cmps
pop
lds
push
mov
out
xchg
imul
aaa
jno
sbb
daa
jmp
stos
inc
jo
pop
jle
or
fisub
jl
loopne
out
pop
ret
shl
jecxz
ins
fcomp
push
(bad)
or
in
mov
push
or
mov
push
sbb
pop
jg
adc
(bad)
aad
call
ror
movs
call
call
mov
cld
mov
pop
xchg
pop
xor
les
mov
rcl
es
scas
bound
stos
push
mov
inc
sahf
lock
fwait
mov
sub
scas
cld
sub
xchg
ror
mov
sub
pop
jmp
jae
mov
retf
sahf
retf
lods
inc
inc
ret
stc
mov
pop
push
dec
sbb
stc
pop
sub
pushf
inc
into
add
out
outs
lahf
frstor
adc
and
test
cld
add
push
sar
ret
icebp
pop
shl
repz
sti
out
out
pop
mov
stos
dec
cli
sbb
xchg
retf
pop
fbld
mov
(bad)
mov
jns
test
hlt
cmp
sbb
sub
xchg
lds
dec
inc
jle
pop
xchg
fild
mov
sbb
mov
pop
lahf
add
add
sub
pop
sub
sub
fcomp
push
inc
xchg
push
mov
aam
pop
mov
mov
stos
push
pop
adc
lods
in
retf
dec
fiadd
inc
movs
arpl
pop
push
test
inc
test
push
mov
xchg
(bad)
jo
mov
cmp
ja
lahf
sbb
sub
in
mov
(bad)
cmp
frstor
sub
mov
cmps
cmp
stc
shl
rcr
repz
scas
pop
shl
xor
sbb
cmps
mov
push
dec
push
movs
stc
not
shl
sbb
aas
sub
aaa
int3
add
mov
xchg
imul
pop
scas
das
pop
xor
adc
xchg
inc
ret
mov
add
cmp
xchg
fst
push
push
fmul
addr16
in
mov
sbb
xor
inc
pop
rcr
pushf
push
bound
(bad)
sbb
mov
test
mov
inc
jg
or
push
dec
lods
pushf
loope
rcl
mov
sbb
inc
sub
push
mov
adc
call
sub
in
mul
mov
jg
cmp
mov
mov
das
and
shl
jg
addr16
dec
jmp
in
leave
sbb
sub
mov
mov
jmp
jne
xchg
je
xchg
(bad)
outs
cmps
xor
fcom
mov
jge
sub
sti
rcr
rcr
rol
lods
addr16
push
cmp
push
nop
pop
ficomp
dec
jno
jmp
jp
push
in
not
xchg
dec
repz
rol
push
mov
dec
mov
das
cwde
mov
rcr
xlat
clc
mov
push
or
idiv
pop
scas
cmps
sub
pusha
test
lods
loope
cdq
xchg
dec
outs
repnz
in
jl
gs
dec
and
daa
in
loopne
leave
inc
xchg
fld
xor
std
or
(bad)
sub
call
sub
(bad)
push
xlat
arpl
sar
movs
stos
shr
aad
and
ss
imul
xchg
mov
into
das
aad
jp
mov
cdq
mov
and
bound
aam
pop
and
sbb
lea
(bad)
iret
les
rcr
mov
fidivr
xor
cmp
(bad)
cmps
test
aas
outs
lods
sub
sti
loop
or
cdq
repz
(bad)
sbb
lods
popf
leave
loop
hlt
sbb
lea
ins
dec
stos
in
dec
call
dec
push
or
jbe
test
(bad)
mov
test
sbb
push
ret
xchg
adc
jmp
jmp
leave
inc
outs
mov
std
mov
out
mov
or
in
jno
in
aaa
pushf
in
push
pop
dec
retf
in
ffree
shr
sbb
pop
mov
cmp
sbb
sbb
inc
stc
js
gs
mov
mov
add
mov
pop
xchg
fld
pusha
fscale
mov
mov
xchg
mov
mov
mov
cli
repz
pop
xor
pop
rol
cli
jmp
mov
jmp
rcr
cmp
aas
push
xor
jl
mov
pop
stos
cmp
dec
and
mov
sahf
aaa
push
or
cmp
fwait
dec
imul
cs
add
push
and
fmul
mov
idiv
dec
icebp
fiadd
mov
mov
mov
into
mov
aaa
sbb
les
popf
rcr
inc
in
jnp
mov
and
adc
xchg
cmp
mov
push
mov
scas
aas
adc
das
or
fistp
dec
arpl
pop
ss
out
and
jmp
add
retf
mov
and
xchg
inc
arpl
inc
stos
je
push
push
fxch
or
in
pop
call
add
xadd
inc
or
pop
cmp
sbb
xor
mov
gs
das
adc
xchg
and
xor
sbb
pop
fiadd
dec
or
test
mov
std
je
pop
repnz
imul
in
rol
mov
dec
daa
popa
mov
mov
xchg
popa
je
mov
xchg
scas
cdq
(bad)
add
in
icebp
loop
aaa
push
dec
xchg
clc
mov
sbb
gs
and
and
jmp
adc
xchg
imul
dec
jmp
inc
pushf
lock
or
pop
test
lds
inc
in
mul
xchg
xchg
mov
lahf
jp
test
mov
scas
ja
popa
push
popf
add
ss
xchg
fs
push
mov
xor
fwait
mul
xlat
or
nop
in
ret
dec
test
cld
pop
mov
adc
scas
shr
scas
jecxz
dec
xor
data16
dec
jne
lods
xchg
mov
inc
or
mov
sbb
xor
jmp
jno
out
es
cmp
pop
rcl
dec
loopne
or
pushf
add
push
cmp
pop
std
push
dec
cmc
mov
dec
lods
adc
mov
push
add
mov
cmp
fist
and
cmp
retf
in
pop
enter
das
pushf
icebp
cmp
xchg
dec
icebp
inc
ds
mov
(bad)
pop
push
movs
dec
fcom
sub
nop
jne
loope
cs
rol
out
ja
jae
or
sbb
jge
test
mov
add
adc
bound
dec
dec
push
mov
dec
(bad)
push
mov
fcmovbe
or
jecxz
and
loope
fldenv
movs
jmp
test
mov
in
ret
rcl
rcl
test
adc
gs
pusha
mov
jecxz
stc
imul
rol
pusha
jge
fimul
ret
gs
test
loop
pop
mov
jmp
imul
xor
fimul
lahf
popf
imul
or
xor
mov
ror
mov
cmp
test
lods
out
xchg
jnp
push
popf
(bad)
sub
popa
ror
mov
inc
pop
movs
rol
sbb
push
and
push
test
cmp
jecxz
loopne
(bad)
fsubr
pop
mov
pop
jbe
in
jg
test
add
add
pause
jo
xchg
push
jecxz
jnp
xor
jg
sub
fnstsw
loopne
mov
lahf
pusha
lods
dec
cmp
xlat
cmp
loopne
shr
addr16
sub
sar
cwde
retf
ins
cmps
jmp
repz
data16
sbb
cmp
and
mov
mov
add
push
and
out
or
xor
sub
add
inc
mov
xor
cld
xchg
xor
jle
pushf
fmul
ins
mov
call
fdivrp
mov
push
jbe
dec
les
pop
stos
inc
jmp
xor
mov
aaa
mov
popf
cdq
nop
arpl
(bad)
jmp
sbb
sbb
iret
xchg
xchg
and
adc
cmp
jo
shr
jle
inc
dec
dec
sbb
mov
stos
fwait
cmp
mov
sar
xchg
jecxz
mov
add
jmp
ds
adc
mov
xchg
adc
call
aad
test
or
adc
lahf
and
push
cmc
sbb
xchg
dec
xor
add
ret
sahf
push
pop
dec
xchg
dec
jne
mov
(bad)
jbe
add
dec
pop
mov
adc
cmps
fisttp
and
retf
sahf
inc
into
pushf
push
out
xchg
pop
add
inc
aaa
in
pop
jecxz
xlat
cmp
icebp
xchg
push
and
enter
iret
iret
sub
pushf
mov
mov
fdivr
and
inc
mov
dec
mov
pop
inc
sti
push
add
jmp
ret
les
add
xchg
out
xchg
pop
fs
sti
jp
pop
iret
cli
pop
fcomp
pop
ror
xchg
jo
push
sub
sub
icebp
aad
add
jmp
sbb
sbb
movs
cmc
push
xor
fwait
movs
xor
fidiv
dec
cmc
ret
push
js
addr16
sbb
outs
add
imul
loope
stos
push
mov
test
xchg
cmc
aaa
xor
pop
hlt
fdivr
in
sub
mov
call
arpl
ror
jno
dec
je
mov
jae
pop
or
mov
shl
push
shl
jmp
adc
test
sbb
fwait
and
stc
xor
adc
mov
inc
push
mov
mov
or
inc
jns
xchg
pop
dec
push
dec
int3
cmp
int3
mov
int
xchg
sub
add
sbb
and
xchg
mov
repnz
addr16
test
push
hlt
push
sub
xchg
not
mov
imul
mov
pop
mov
jne
and
out
ret
aad
pop
inc
and
shl
push
mov
jmp
lea
sbb
cmp
jb
cmp
xor
nop
add
add
xor
mov
enter
and
sub
mov
sbb
das
nop
push
pusha
stc
push
jbe
aad
imul
and
shl
shl
cmp
add
adc
cmp
dec
add
sub
add
pop
(bad)
mov
in
push
pop
int3
mov
fwait
jmp
imul
pushf
xor
dec
mov
sbb
data16
cmps
out
jbe
mov
shr
push
ds
loope
xchg
sub
jno
dec
hlt
dec
imul
push
xor
and
dec
fst
and
popa
jmp
or
mov
mov
iret
push
outs
dec
dec
sbb
xor
cs
or
movs
cld
xchg
cmps
jecxz
mov
pushf
xor
daa
aad
mov
into
push
fsin
sbb
xor
retf
and
inc
retf
movs
pop
mov
push
loopne
xchg
cld
ins
ins
(bad)
or
in
cmp
call
cmp
loope
jl
movs
(bad)
test
sub
stc
int
mov
cli
imul
idiv
mov
fcomp
and
dec
xor
nop
loop
ss
push
in
or
loopne
mov
cmp
sbb
fild
mov
stos
sub
neg
sbb
scas
mov
push
xchg
jp
xchg
retf
jne
or
cmp
retf
cmps
nop
mov
int3
mul
ror
cmp
xchg
in
clc
jecxz
inc
pop
cmp
pop
out
mov
xchg
push
mov
pop
ds
in
repz
loop
mov
add
xor
mov
je
lds
sar
pop
pop
dec
loope
fcom
pop
cmp
xor
loopne
ficomp
mov
test
jmp
mov
xchg
dec
xchg
dec
mov
dec
push
test
sahf
mov
iret
aaa
sbb
pop
mov
fwait
jge
push
xchg
sub
cmp
and
pop
cmp
adc
add
jmp
cld
or
adc
imul
jmp
ror
je
jle
xchg
adc
dec
movs
retf
in
jbe
shl
inc
in
aaa
shl
pop
lock
jo
scas
cli
dec
mov
sbb
test
ins
les
rol
adc
pop
and
and
clc
sbb
fist
or
cwde
jno
ss
imul
inc
and
stc
(bad)
imul
jmp
or
pop
jnp
ret
inc
cld
dec
or
out
fwait
stos
sbb
in
add
mov
call
cld
push
popf
or
daa
mov
mov
push
sar
dec
pop
je
mov
adc
pop
push
lds
loopne
pop
or
imul
idiv
jno
out
xor
fs
mov
(bad)
fsub
jne
scas
sbb
cmp
ins
loope
mov
pop
cs
stos
pop
and
mov
dec
retf
enter
mov
or
int
jbe
jecxz
adc
int3
(bad)
sbb
call
inc
or
popa
(bad)
jbe
(bad)
jl
pop
fadd
jmp
test
hlt
push
retf
dec
xchg
(bad)
jnp
les
aaa
add
mov
call
adc
xchg
movs
mov
out
pushf
test
jb
vpmacssdd
sbb
xchg
je
sbb
in
mov
and
add
inc
cmp
mov
out
mov
in
jp
xchg
cmc
mov
jg
xchg
lahf
dec
and
sbb
mov
or
xchg
mov
inc
retf
or
nop
inc
add
cmp
fidiv
xor
or
pop
and
scas
cmp
pusha
int
mov
or
jns
js
scas
int
sbb
fstp
xor
pushf
pop
cmp
push
fcmovnb
pop
cmp
ror
lock
sahf
pop
(bad)
fcomp
or
pop
clc
test
imul
retf
add
sbb
je
js
push
and
sbb
arpl
cmp
(bad)
cmp
sti
xchg
ja
(bad)
pop
leave
into
ins
movs
leave
dec
(bad)
test
sahf
shl
mov
mov
outs
cmp
cmps
sbb
cs
cmp
pop
sbb
sbb
jmp
out
sub
int3
jge
fnsave
cmp
pop
mov
or
ffree
stos
xchg
inc
xchg
leave
or
out
icebp
mov
jae
sbb
scas
xchg
jo
mov
in
pop
cwde
daa
fsub
ds
fwait
sti
std
loop
mov
je
xor
jle
(bad)
mov
push
popf
je
sbb
push
sub
call
lds
sbb
je
sbb
mov
adc
out
sbb
enter
jne
adc
or
pop
(bad)
jnp
add
adc
xor
xchg
or
sahf
inc
jb
in
ror
lock
push
jb
popa
aam
dec
add
ins
adc
and
movs
shl
cwde
xlat
xlat
sub
das
leave
in
lds
add
aaa
push
jmp
cmp
dec
fstp
fadd
jp
mov
bound
loopne
stc
shr
cli
xor
lahf
pop
jp
xchg
sbb
jge
ficomp
jo
lock
pop
jp
xor
jmp
mov
push
mov
call
daa
and
add
repz
addr16
xchg
into
(bad)
mov
prefetchwt1
sti
sbb
shl
mov
repz
sbb
sbb
xor
push
dec
push
and
lods
pop
fsubr
or
sub
pop
xlat
cmp
fld
add
mov
call
out
iret
je
mov
fcom
addr16
mov
les
jl
repnz
xor
mov
pop
mov
cld
inc
or
pop
mov
xchg
je
pop
retf
je
cmps
retfw
popf
je
mov
movs
ins
add
dec
out
jb
xchg
hlt
mov
cs
jle
or
and
xor
test
jg
jmp
pop
dec
arpl
xchg
adc
lods
out
mov
into
pushf
dec
mov
dec
cmp
mov
mov
sub
sub
test
into
cli
cmp
bound
cdq
xchg
sub
scas
inc
outs
sbb
popf
sbb
push
and
gs
lods
fcmovu
stos
jae
sbb
aas
imul
sti
fdiv
aas
icebp
push
retf
(bad)
xchg
les
nop
push
mov
add
push
es
jle
xchg
mov
retf
fadd
or
mov
cmp
and
or
mov
mov
mov
dec
push
mov
outs
sub
or
push
push
jno
ins
retf
ret
jae
scas
add
mov
dec
addr16
fadd
jle
cwde
adc
lods
int3
test
add
or
imul
ret
mov
mov
xrelease
pusha
mov
leave
push
cld
cmp
(bad)
scas
test
jb
(bad)
xchg
mov
repnz
arpl
pusha
mov
lahf
xor
xor
sbb
test
popa
cwde
sti
dec
retf
gs
push
gs
aad
fidiv
inc
xchg
sbb
xor
popa
retf
jbe
pop
push
jmp
dec
and
push
pop
lahf
sbb
mov
lods
add
lahf
outs
aad
mov
cdq
xchg
xor
mov
out
cmp
jmp
(bad)
and
mov
xor
sbb
cmp
fisubr
dec
pop
jmp
cmp
fld
mov
mov
mov
(bad)
fbld
or
push
mov
xor
sbb
outs
cmp
push
movs
fcmovnb
push
hlt
movs
add
jp
leave
retf
sub
in
sbb
xor
scas
mov
push
dec
cmc
sar
les
dec
or
dec
stc
mov
push
jno
xor
inc
mov
rcr
xchg
in
mov
mov
enter
dec
adc
dec
inc
xchg
hlt
mov
movs
retf
push
test
mov
rol
and
mov
repnz
cmp
xlat
pop
in
push
push
xor
xor
sbb
gs
pop
push
sbb
push
push
fcmovne
dec
(bad)
hlt
xor
std
fwait
adc
xchg
ins
adc
stc
add
xchg
inc
ret
pop
and
ret
movs
ins
mov
rcr
bnd
scas
jno
pusha
pop
pop
mov
imul
xchg
dec
and
aaa
shl
imul
rol
push
das
imul
lds
lds
adc
or
fs
lods
jbe
cld
lods
(bad)
and
dec
shl
mov
cmp
int
popa
sub
movs
jo
push
mov
ins
cmp
test
xchg
lea
sbb
inc
mov
jge
mov
add
shr
adc
cs
je
pop
or
push
and
pop
and
jns
cmp
mov
dec
cmp
xchg
mov
or
loope
inc
shl
int
stc
fmul
sbb
adc
push
cli
iret
pop
fisttp
(bad)
adc
mov
fs
inc
sti
xor
mov
push
add
int3
and
in
xchg
outs
movups
fisttp
pop
xor
xor
push
mov
pop
pop
push
lods
jmp
lds
int3
stos
out
adc
loopne
fisttp
repz
sbb
call
sub
pop
cmps
pop
push
sbb
scas
(bad)
in
push
popf
jl
jne
mov
dec
xor
lea
ja
pop
adc
pop
xor
(bad)
pushf
dec
mov
scas
fld
dec
add
int3
test
pop
loop
xchg
add
(bad)
and
jge
retf
jo
cwde
lahf
and
pop
arpl
and
or
ins
mov
pop
loope
or
xchg
cwde
fnsave
loop
push
in
je
jecxz
xor
in
sahf
cli
xchg
dec
mov
cmp
sar
cmp
xor
mov
xchg
loopne
xor
frstor
mov
or
loop
das
sub
push
cmp
in
inc
xchg
hlt
out
cli
dec
fsubr
xor
inc
das
shl
stos
and
(bad)
sub
js
push
pop
hlt
adc
icebp
ds
cli
push
ss
fcmovu
jae
out
and
mov
cdq
cmc
popf
(bad)
xor
or
nop
fstp
xor
mov
mov
mov
es
loope
(bad)
jns
sub
xlat
ins
add
cmc
repz
jmp
das
mov
jae
mov
aam
js
sbb
cmc
aas
add
mov
and
jb
in
xchg
jb
fsubrp
out
in
xor
jle
scas
nop
sbb
test
dec
scas
imul
mov
mov
aam
cmps
lods
rcl
jp
cmp
cmp
cli
in
fiadd
test
clc
test
cmp
int
or
or
fiadd
xchg
dec
mov
pop
call
sub
xor
jge
mov
retf
jecxz
int
push
mov
pop
add
out
pop
ja
dec
test
mov
mov
mov
push
out
sti
or
sbb
mov
sbb
push
ss
jecxz
cwde
dec
(bad)
sub
jg
dec
loopne
pop
aad
outs
mov
(bad)
call
jg
fiadd
and
sub
rol
jae
jo
xor
call
pushf
daa
repnz
pushf
repz
js
imul
xchg
and
sub
test
mov
imul
fistp
xor
ror
xor
call
push
mov
sub
xchg
daa
add
pop
jmp
and
add
hlt
xlat
mov
stc
cs
int
jmp
jmp
sar
je
jnp
jp
xchg
shl
push
stos
loop
leave
mov
pop
dec
adc
jmp
scas
push
sbb
cmps
mov
imul
cmp
mov
mov
in
inc
cmps
shl
in
dec
and
and
(bad)
pusha
sub
mov
add
test
xchg
adc
xor
jmp
fidiv
or
xchg
mov
fcom
push
cmp
loop
outs
jl
mov
ins
in
gs
(bad)
pop
add
ins
dec
sub
mov
lock
pusha
(bad)
xchg
ror
imul
ret
and
retf
fisubr
and
lea
ret
and
inc
in
fs
sbb
push
or
popa
jb
imul
lock
mov
mov
out
out
jnp
mov
inc
mov
jmp
inc
pop
xor
adc
dec
out
adc
mov
lahf
pop
sbb
push
sub
push
rcl
add
pushf
icebp
test
pop
(bad)
call
out
int3
push
xor
xchg
hlt
out
test
or
fldcw
add
loopne
pop
stos
mov
mov
xor
sub
or
cmp
xor
pop
push
imul
je
out
or
das
xor
xchg
das
loopne
(bad)
jmp
dec
jmp
cmp
inc
sub
sub
sub
mov
xchg
xlat
xchg
mov
jo
cmps
clc
mov
rcr
add
push
adc
add
(bad)
sti
sbb
sub
xchg
pop
mov
inc
jae
pop
(bad)
jne
adc
daa
cmp
dec
jge
and
jae
mov
(bad)
mov
push
jp
int3
hlt
aam
dec
push
inc
out
shl
ror
jl
inc
imul
xchg
je
dec
arpl
or
cdq
call
push
inc
not
ret
iret
les
push
shl
push
inc
cmp
add
aam
xchg
sub
adc
xor
rol
xchg
jg
mov
and
cmp
movntq
out
les
aad
sbb
and
popa
dec
dec
mov
push
push
xchg
out
fnstcw
mov
stc
pushf
es
or
sub
push
hlt
inc
stc
mov
pop
mov
add
push
dec
(bad)
xchg
outs
jae
mov
test
pop
shl
xor
shr
push
mov
imul
in
dec
cli
test
cmp
pop
sub
pop
add
stos
(bad)
sbb
adc
inc
stos
dec
jb
push
iret
pop
mov
xchg
aas
imul
xchg
mov
mov
mov
pop
or
(bad)
cs
cmp
movs
retf
repz
mov
(bad)
sbb
xor
(bad)
xchg
sbb
sbb
ins
lock
dec
repz
mov
add
add
je
sub
popf
pop
sbb
fwait
addr16
loope
or
jmp
dec
fnstcw
cmp
jle
lahf
mov
push
push
jmp
mov
mov
pop
adc
sbb
hlt
push
aas
sub
cmp
fisub
mov
test
stos
loopne
xor
pushf
xchg
pop
xor
jne
iret
nop
jmp
and
in
(bad)
pop
outs
mov
mov
dec
cdq
lock
test
sbb
jne
xor
cli
and
lods
xchg
jno
xor
out
lock
frstor
and
in
movs
mov
xor
movs
loopne
je
stc
dec
sbb
jnp
pop
pop
jno
lds
add
or
sbb
out
mov
xor
sub
nop
repnz
rol
sub
psubw
repz
(bad)
xchg
mov
in
test
je
cmp
jle
sub
les
dec
adc
mov
mov
mov
pop
arpl
test
xchg
ja
lods
fwait
dec
in
sbb
push
mov
in
(bad)
ds
jo
out
test
les
out
repz
test
sub
arpl
add
cdq
imul
add
lahf
int3
setp
cmps
jb
mov
and
push
cmc
mov
(bad)
cmp
popa
out
je
outs
inc
add
js
jg
or
int3
or
out
imul
adc
ins
int
lahf
into
call
jbe
shl
or
sub
fsub
daa
mov
call
mov
mov
cwde
push
out
call
cmp
sub
fsubr
test
mov
lds
mov
cmp
xchg
sub
(bad)
sbb
and
icebp
pop
in
mov
fidivr
imul
jle
xchg
loope
cli
cli
scas
and
pop
frstor
cld
cmp
arpl
jp
add
add
xor
iret
cli
popf
xor
out
adc
xor
fsubr
jo
jbe
dec
add
scas
sti
rcr
mov
cdq
stos
out
xor
fcomp
loopne
jo
sbb
push
aam
mov
retf
sub
pop
(bad)
nop
cmp
retf
mov
jae
adc
ror
xchg
clc
inc
or
loope
das
push
push
mov
push
xchg
xchg
imul
jge
jle
test
adc
out
sar
js
outs
sbb
bound
push
sub
dec
mov
and
nop
dec
jae
push
dec
pop
stos
mov
test
sbb
push
std
pusha
sahf
(bad)
mov
stos
xor
add
out
(bad)
sbb
imul
stos
adc
scas
(bad)
xchg
inc
inc
in
(bad)
xchg
test
and
mov
inc
jg
push
xor
pop
and
ja
sbb
jmp
int3
inc
inc
jmp
jbe
sbb
enter
xchg
cmp
ins
jmp
out
inc
retf
inc
outs
ins
mov
xchg
sub
data16
adc
mov
push
sub
mov
inc
mov
adc
jne
stos
adc
outs
stos
jle
inc
mov
stos
das
std
mov
pop
mov
not
nop
sbb
push
ret
movs
or
mov
xchg
fucom
data16
cmp
das
cwde
int3
dec
cmp
jnp
scas
lock
test
jl
ins
add
ss
fldcw
lods
xor
mov
in
pop
test
mov
in
(bad)
or
sub
aas
es
popf
jae
xchg
shl
test
arpl
push
clc
add
xlat
(bad)
int3
outs
rcr
je
xchg
clc
addr16
jl
inc
jno
scas
bswap
xor
push
push
cmp
adc
cmp
xchg
aad
retf
dec
(bad)
jl
mov
fldenv
push
das
jmp
push
addr16
sbb
test
test
and
or
jl
mov
in
mov
cmc
mov
mov
push
jl
loopne
xor
std
jl
scas
jg
pop
xor
xchg
(bad)
adc
or
mov
mov
jne
jb
rcl
scas
shl
movs
jecxz
dec
pop
rcl
jmp
mov
inc
mov
leave
int3
outs
into
or
cmp
ss
cmp
ja
inc
push
vcvttps2dq
mov
loopne
add
cmp
adc
push
dec
je
xor
xchg
gs
dec
stos
adc
mov
xor
lods
sub
test
sub
retf
iret
pop
js
iret
dec
jp
sub
cmp
mov
adc
data16
and
test
addr16
xchg
stos
add
lock
push
xlat
(bad)
cmp
rcl
int3
rol
fidiv
into
or
sti
(bad)
(bad)
cmps
or
dec
and
in
mov
and
pushf
into
mov
mov
ror
pushf
aad
daa
inc
cmp
inc
pop
call
(bad)
jnp
repnz
sbb
cwde
xchg
fisub
fimul
data16
test
xlat
inc
mov
ret
call
xchg
aam
hlt
mov
sahf
cwde
dec
xor
xchg
xchg
mov
cwde
in
mov
jmp
shl
jecxz
out
cmp
xchg
into
mov
stos
imul
mov
enter
lock
dec
dec
out
sub
loope
fnsave
inc
jge
(bad)
mov
mov
xchg
mov
lock
pop
scas
jp
mov
pop
(bad)
ffree
cwde
bound
loopne
xchg
sub
int3
push
push
retf
in
mov
mov
jbe
test
imul
daa
ins
or
(bad)
shld
out
xchg
scas
lods
sub
inc
xchg
leave
stc
test
in
adc
in
jmp
call
shl
jb
in
sub
cmp
sbb
(bad)
std
loop
inc
cdq
push
jp
shl
fcomp
and
not
or
mov
or
mov
jmp
dec
mov
mov
jl
test
or
mov
pop
les
mov
jmp
and
out
add
pop
mov
xor
pop
cwde
cmc
add
push
xor
pop
aam
lods
sbb
or
shl
sar
mov
dec
mov
mov
mov
mov
ret
stos
xchg
int3
adc
dec
ins
jmp
in
call
js
mov
jne
popa
dec
test
mov
gs
sub
cmp
imul
loop
mul
scas
sbb
fimul
shl
pusha
das
xchg
mov
fld
fldcw
mov
data16
popf
jge
adc
mov
adc
out
or
popa
int3
into
mov
adc
mov
and
mov
or
mov
rol
mov
stos
aaa
or
dec
popa
xor
dec
frstor
mov
enter
outs
inc
(bad)
xor
aam
fcmovu
repnz
aam
sbb
adc
aad
xor
mov
dec
stos
or
call
mov
push
xlat
jmp
out
test
test
popa
xchg
aam
(bad)
into
xchg
adc
mov
xor
add
or
inc
shl
cmp
ret
xchg
xor
aam
xchg
dec
ret
push
ss
or
cmps
fstp
ss
out
cmp
lahf
call
rol
(bad)
fiadd
dec
mov
xchg
pop
sar
push
pusha
push
(bad)
mov
mov
call
test
sbb
sbb
pop
in
cwde
push
and
sub
dec
pop
push
sbb
outs
int
mov
enter
test
out
mov
jbe
mov
daa
stc
lahf
int
sar
pop
pop
call
or
jg
jmp
sbb
sbb
data16
arpl
retf
cmp
pop
xor
lds
fxch
clc
out
push
lock
inc
fs
cld
cmc
cmp
push
push
ins
fdiv
in
adc
cmc
movs
push
push
jl
mov
lea
es
stos
pop
mov
mov
cmp
ret
and
cld
dec
mov
mov
sbb
jnp
repz
in
xchg
and
jb
pop
sub
xchg
jo
jl
jns
cmp
adc
mov
mov
pop
sub
xor
ret
adc
stos
push
popa
fld
mov
xor
shr
out
scas
pop
add
lahf
cmp
mov
jo
imul
ins
xchg
mov
rcr
(bad)
pop
imul
scas
cmps
and
mov
es
push
push
mov
dec
pop
xor
or
sbb
scas
popf
adc
xchg
or
ins
cmp
jnp
xchg
adc
xor
inc
pop
stc
push
xor
retf
mov
add
mov
mov
xor
jge
add
in
ja
xchg
dec
or
out
test
cli
push
inc
jns
pop
icebp
adc
mov
jmp
retf
dec
pop
and
cmp
jae
scas
aam
sbb
mov
pop
mov
pop
dec
sub
mov
punpckhwd
sti
test
or
icebp
out
add
js
stos
xchg
pop
mov
(bad)
xor
sbb
inc
jns
mov
repnz
sbb
cmp
mov
jmp
(bad)
jno
push
in
stc
mov
cdq
pop
addr16
loop
pop
stc
dec
sub
mov
movs
jge
adc
cs
stos
adc
and
sub
mov
mov
aaa
mov
jnp
fisttp
sahf
mov
jae
fist
int
pusha
loopne
sti
mov
xchg
xchg
push
jne
pop
or
or
add
xchg
mov
(bad)
in
push
dec
(bad)
jmp
cmp
mov
mov
vunpcklpd
mov
inc
and
xor
movs
add
mov
das
mov
inc
fs
adc
sbb
xchg
xchg
imul
(bad)
lods
xor
dec
cmp
ficomp
in
arpl
and
xor
add
pop
lahf
popf
jp
cmp
(bad)
fld
sub
jbe
push
cmps
push
xor
sbb
jne
mov
pop
das
cmp
pusha
ds
push
mov
jae
mov
mov
pop
mov
ja
arpl
daa
popa
pop
mov
clc
sbb
jae
push
stc
aas
iret
push
add
and
jae
lods
jmp
dec
enter
outs
mov
jmp
pushf
xchg
pop
add
mov
add
aas
stos
pop
xchg
cmps
mov
mov
jp
inc
dec
dec
es
popf
mov
or
sahf
adc
xor
or
out
test
add
pop
inc
ret
imul
test
les
cmc
inc
fwait
repz
xchg
cwde
jbe
mov
mov
les
push
pop
jb
fimul
clc
or
stos
shrd
scas
sbb
xchg
loope
jle
pop
enter
out
inc
or
imul
cli
push
mov
pop
lds
and
or
push
mov
enter
mov
push
dec
and
pop
movs
push
loopne
push
inc
add
push
sbb
leave
fwait
lock
js
mov
cdq
into
add
in
jle
clc
or
in
retf
outs
(bad)
sub
xchg
xor
push
pushf
lods
lea
mov
in
fst
push
ss
sub
add
sub
xchg
adc
rcr
in
sub
sbb
dec
cmps
sub
adc
iret
es
add
push
iret
cs
stc
adc
mov
pop
mov
sub
pop
jns
popf
push
sbb
dec
arpl
cwde
push
xor
fsub
aam
jle
mov
or
and
sbb
stc
in
in
scas
daa
frstor
or
icebp
shl
arpl
inc
add
and
test
int3
lds
cmps
dec
sub
scas
out
(bad)
pop
cmps
xlat
jge
push
inc
xor
push
jge
push
or
pop
adc
fcomp
jg
push
lahf
fs
jnp
stos
ss
xor
fild
pushf
and
pop
loope
out
fsub
sbb
mov
sbb
sub
in
mov
jb
mov
(bad)
pop
je
je
jmp
pop
data16
(bad)
add
js
adc
test
or
(bad)
cmp
xlat
xor
fwait
mov
sbb
xor
std
xchg
enter
dec
outs
jmp
xor
fistp
sahf
enter
push
gs
mov
pop
repz
mov
or
xor
ror
(bad)
(bad)
ror
ror
cmp
scas
(bad)
push
mov
mov
push
je
push
xchg
cmovo
xlat
call
or
outs
push
mov
loopne
leave
stc
test
jl
out
inc
xchg
cmp
jo
out
aad
jmp
mov
js
jns
adc
inc
cmp
cmp
jmp
lock
mov
imul
sbb
xor
mov
in
sub
sar
mov
mov
cmps
mov
(bad)
mov
imul
sub
push
or
pop
mov
xor
jno
jp
dec
shr
and
es
mov
neg
dec
jns
inc
repz
imul
mov
mov
int
sub
adc
push
push
ror
pop
xchg
test
pop
push
fcmovnb
cmc
outs
(bad)
lock
push
cld
arpl
cld
adc
and
dec
jnp
dec
mov
lock
leave
add
and
dec
out
sub
ss
xchg
lds
mov
pop
out
add
mov
fistp
iret
int
add
call
dec
inc
or
mov
lods
pop
int3
xor
leave
ins
ins
xor
lea
dec
cs
push
pop
cli
clc
sub
repnz
stc
or
loopne
inc
je
sub
jno
lods
cmp
pop
(bad)
add
(bad)
fmulp
mov
dec
aas
scas
in
cmp
fwait
icebp
jp
fstp
repz
ret
add
enter
add
sub
mov
mov
mov
mov
popaw
outs
sbb
mov
mov
mov
in
icebp
fstp
mov
out
in
inc
out
dec
rol
pop
loop
in
push
add
jb
aaa
jae
outs
sub
sysexit
retf
mov
push
cmp
mov
into
into
rcr
sbb
push
pop
rcr
or
sub
pop
lods
sbb
adc
das
(bad)
inc
cmp
mov
push
and
and
dec
xor
shr
sub
push
fisubr
xor
jg
sbb
fwait
in
push
inc
test
jecxz
loope
push
les
jmp
outs
push
(bad)
dec
data16
xor
jle
int3
inc
mov
mov
pop
fld
pop
mov
stos
push
lods
push
pop
mov
outs
test
and
pop
jb
bound
or
pushf
or
add
jbe
ins
xchg
jno
sub
pop
xor
add
cmps
adc
sub
rcr
ins
mov
cld
inc
test
cmps
dec
dec
ins
pop
push
fxtract
movs
pop
lahf
jne
and
daa
pop
fsub
(bad)
iret
cmp
(bad)
dec
rcl
sbb
int3
pop
sbb
stos
sub
sbb
xor
test
push
push
add
je
mov
and
sub
and
cld
jae
pop
clc
jp
mov
ror
adc
or
mov
inc
aad
and
div
out
inc
jmp
mov
jp
call
pop
imul
lds
retf
je
(bad)
(bad)
adc
retf
lock
retf
std
push
mov
mov
mov
je
ret
mov
rcl
mov
or
int
lahf
jecxz
push
xchg
es
sub
pop
aam
arpl
mov
repz
mov
xlat
mov
movs
jg
xor
jns
pop
mov
cmc
addr16
aaa
ins
hlt
fmul
sub
loopne
icebp
xchg
mov
std
jnp
test
sti
pop
jp
daa
add
pop
rol
cmp
xchg
ror
fsub
repnz
inc
aaa
push
cdq
inc
sub
mov
sar
add
es
nop
mov
mov
lds
add
dec
(bad)
out
cmp
imul
in
inc
arpl
aaa
stc
xchg
(bad)
(bad)
ss
out
dec
daa
lea
pop
jns
hlt
cmp
dec
xor
aam
retf
mov
cmp
sbb
add
sub
dec
imul
mov
pop
lock
inc
in
adc
pop
cwde
out
dec
shl
push
sahf
mov
jge
gs
fwait
adc
mov
in
bound
adc
xchg
in
mov
adc
mov
sbb
imul
mov
into
or
iret
loopne
push
lds
mov
add
pop
out
(bad)
cmps
pusha
popa
rcl
mov
jae
pop
test
sbb
sub
scas
test
xor
mov
cld
(bad)
fs
mul
and
sbb
(bad)
icebp
jp
adc
xchg
cmp
leave
mov
(bad)
cmp
mov
pop
inc
and
hlt
push
cld
mov
mov
cmp
dec
jge
dec
push
fstp
sub
imul
push
or
adc
pop
xchg
stc
aam
das
mov
jmp
ret
mov
in
push
add
aad
popf
ja
mov
arpl
aas
cwde
lods
pusha
add
jl
retf
mov
adc
mov
and
cmps
cmc
and
xchg
add
dec
lock
lods
push
test
sti
sub
sub
(bad)
pop
(bad)
ins
jb
add
arpl
adc
popa
test
xor
frstor
mov
fcmovb
movs
lods
or
in
enter
gs
xchg
dec
xchg
or
pop
cmps
dec
lahf
jns
dec
sub
dec
movs
adc
in
sahf
out
lds
je
adc
adc
pop
push
ja
or
dec
and
adc
out
cmp
mov
fistp
push
fstp
loope
inc
pop
mov
inc
into
dec
loope
xor
jp
int3
bound
std
sub
test
(bad)
in
mov
and
mov
xchg
xor
xchg
inc
int
or
adc
sti
hlt
fnsave
les
loope
aad
lods
arpl
pop
sbb
fs
js
call
sub
mov
xlat
xor
test
fild
das
mul
xchg
mov
or
sub
sbb
int
jp
ret
push
jmp
daa
or
jb
ror
mov
pop
sub
scas
or
(bad)
mov
jecxz
loopne
mov
sti
mov
pop
sbb
in
push
or
(bad)
arpl
and
and
lahf
lods
div
or
mov
retf
rol
sbb
xor
pop
adc
gs
imul
cld
imul
mov
ins
sti
jbe
pop
aad
or
jge
outs
and
retf
cmp
fild
mov
inc
xchg
cld
inc
out
push
shr
repnz
in
std
xchg
add
div
cmp
fsubr
cmp
xor
cli
imul
adc
sbb
add
ja
imul
mov
and
into
test
(bad)
scas
stos
loopne
loope
movs
pop
loop
scas
cmc
mov
ret
add
adc
loope
sbb
mov
push
or
repnz
cmp
cli
sub
dec
cmp
in
rcr
in
lods
dec
adc
stos
inc
push
shr
pop
cmp
lods
mov
sbb
xor
fwait
stos
mov
enter
adc
cmc
or
mov
dec
fndisi(8087
loop
mov
and
bound
js
repnz
loop
xchg
stc
in
jecxz
test
jecxz
push
add
jg
ins
repz
movs
ss
sub
pusha
jecxz
loopne
fwait
or
jns
cmp
cmp
or
stos
xor
test
ret
or
xchg
add
pop
inc
test
call
fisttp
shl
cli
pop
cmps
iret
stos
inc
add
xchg
jae
aaa
in
xchg
inc
popa
xchg
cmp
aad
fs
xchg
(bad)
(bad)
enter
movs
pop
and
push
sti
or
aaa
cmp
sub
cmc
aad
hlt
test
ins
jmp
daa
imul
inc
cmp
outs
sbb
int3
pop
sub
sti
out
jmp
test
ds
sar
ins
pop
clc
jecxz
not
retf
or
cmp
cmp
test
fst
popa
fnstcw
dec
jnp
mov
aad
add
test
mov
movs
aas
and
xor
cdq
jo
lea
push
out
dec
aad
jmp
repnz
outs
xchg
iret
and
cmc
xchg
jle
jmp
stc
mov
lods
out
iret
ins
xchg
push
test
ds
mov
or
(bad)
jmp
fisubr
jle
arpl
mov
jge
std
mov
pushf
js
js
push
cmps
xchg
pop
cmp
js
adc
push
pop
int3
clc
or
retf
gs
call
mov
xchg
cmps
ret
add
sub
cwde
sub
xor
push
inc
ins
xchg
cli
dec
push
and
ja
inc
repz
inc
xchg
mov
ficomp
jnp
lds
add
(bad)
daa
vmovss
push
neg
xor
xor
xchg
movs
adc
pushf
shl
inc
dec
(bad)
popf
mov
xchg
test
das
rcl
retf
test
xchg
dec
mov
les
sbb
pop
push
inc
pop
loope
ret
ja
xchg
jle
in
int3
inc
push
stos
dec
inc
jg
les
adc
dec
cmps
pop
sub
adc
xchg
fist
int
pop
test
cmp
jns
jecxz
jmp
repnz
es
adc
shr
test
aas
bndldx
icebp
cwde
sub
mov
or
cwde
sbb
add
sti
xor
aaa
mul
inc
lods
or
in
(bad)
sbb
or
scas
(bad)
das
cmps
nop
je
xchg
arpl
mov
dec
mov
movs
call
int3
outs
sub
push
inc
jmp
mov
inc
pushf
out
xor
mov
shr
and
mov
fs
push
aam
pop
add
xchg
movaps
xor
mov
(bad)
out
cli
clc
retf
stc
inc
sub
ror
push
inc
out
xor
mov
jbe
dec
xor
push
lds
in
jnp
or
jns
push
xor
dec
add
mov
hlt
push
push
push
inc
xchg
sub
dec
add
fwait
lods
and
int
ins
mov
or
mov
std
js
pop
(bad)
jge
xchg
(bad)
mov
ficomp
pop
push
adc
jmp
jmp
loopne
and
sub
data16
aad
rol
push
cs
fwait
lods
inc
rol
clc
xchg
xor
push
stc
out
inc
inc
test
cmp
jne
dec
dec
movs
inc
sahf
faddp
pushf
mov
jmp
mov
dec
stos
test
fimul
test
inc
ror
test
xchg
test
jg
sub
mov
push
jb
js
add
xchg
ins
jmp
out
jg
sub
add
in
nop
loope
mov
fisub
push
push
unpckhps
push
ud0
in
popa
lods
repnz
fisttp
js
popa
jns
mov
retf
int3
mov
sub
sub
pusha
mov
lea
cwde
cwde
nop
repnz
das
out
div
in
jb
xchg
mov
sub
pop
mov
rcr
scas
xor
leave
mov
sub
xchg
pop
pop
sub
xchg
outs
movs
(bad)
aaa
pop
sbb
xchg
pop
dec
dec
xchg
(bad)
cmp
sub
and
movs
or
push
imul
mov
cmp
mov
shl
mov
jp
test
hlt
push
(bad)
mov
and
cmp
pop
and
add
or
add
mov
adc
cmps
mov
(bad)
or
rol
fcmovb
ja
push
mov
(bad)
fmul
cmp
cmp
arpl
pop
sbb
jge
aaa
out
mov
mov
and
mov
dec
dec
call
mov
and
xchg
jne
shl
add
and
inc
test
clc
cld
dec
jge
dec
cmc
icebp
inc
arpl
fwait
mov
add
scas
jo
aaa
sub
call
jmp
sbb
sbb
xchg
ret
(bad)
hlt
nop
lahf
or
cld
aaa
cmps
mov
push
cmp
inc
lock
pop
cmp
pop
sbb
mov
cmps
cwde
pop
mov
xor
shl
adc
jno
repz
add
and
pop
ror
ror
(bad)
lods
jns
mov
xor
jne
mov
jp
sbb
ret
and
xor
xchg
icebp
movs
in
pop
int3
cmc
aaa
or
inc
pop
fild
add
push
inc
or
pop
jg
pop
stos
xor
fdivp
mov
pop
fimul
repnz
out
push
or
fild
sub
(bad)
dec
adc
adc
and
ins
adc
sbb
push
push
cmp
out
push
push
mov
pop
cmp
je
sbb
jnp
sub
icebp
dec
sub
(bad)
pusha
shr
aas
retf
dec
mov
mov
in
add
cmc
xor
mov
stos
jno
bound
in
inc
mov
repnz
add
or
pop
imul
inc
in
xchg
mov
imul
dec
(bad)
fisttp
(bad)
mov
xor
pop
aaa
or
adc
sub
ins
psubusw
xchg
in
shl
pop
cmc
ds
test
fnsave
outs
test
jmp
test
xchg
repnz
das
lods
sbb
daa
add
dec
push
std
movs
rol
mov
jmp
push
aaa
movs
(bad)
(bad)
adc
sub
and
pop
and
xor
aas
js
cmp
jnp
cmp
dec
jmp
jnp
xchg
aam
push
(bad)
das
test
jg
ret
mov
pop
ds
inc
add
fldcw
push
(bad)
clc
lods
repz
aaa
ror
dec
aaa
or
(bad)
dec
sub
add
xor
and
loop
retf
shl
or
shr
xor
test
inc
xchg
lods
jmp
inc
and
fidivr
adc
sub
mov
inc
std
jmp
pop
fwait
and
sbb
jnp
lock
add
and
out
stc
ret
dec
jb
mov
pop
nop
or
mov
adc
push
mov
jmp
mov
sbb
jmp
jbe
stc
jp
les
pop
pop
add
in
cmps
push
mov
push
in
dec
hlt
(bad)
push
jo
push
loope
cmp
push
clc
add
pop
call
(bad)
test
and
(bad)
pop
stos
jge
xchg
out
fld
loope
xchg
movsx
cmp
or
mov
jbe
cmps
jno
or
mov
xchg
xchg
pop
jno
imul
pop
(bad)
inc
jns
div
inc
in
pop
jg
ds
inc
pop
xchg
sub
das
icebp
out
scas
dec
js
mov
inc
mov
adc
jne
jecxz
imul
cmp
jns
jle
out
add
push
pusha
or
pop
pop
pushf
jb
jp
push
pusha
shl
xor
cli
or
cdq
fadd
and
repnz
shl
stos
arpl
fwait
sti
inc
add
xor
loop
add
imul
rcl
pop
(bad)
stos
mov
lahf
test
std
sub
sub
inc
dec
out
ins
movs
int3
xor
xor
xchg
stos
pop
mov
addr16
cdq
xchg
cmp
xchg
mov
xchg
out
arpl
add
ds
loop
idiv
retf
sar
mov
pop
push
cld
push
dec
rol
mov
stos
arpl
xchg
shr
dec
jo
aad
fild
and
cmc
mov
mov
(bad)
aam
ret
popa
rcr
cmp
addr16
jmp
jo
push
dec
in
mov
aad
sti
xlat
(bad)
jno
push
mov
int3
add
repnz
adc
ja
add
inc
jbe
scas
cmp
jecxz
mov
imul
mov
clc
jmp
push
test
xchg
mov
sbb
mov
clc
outs
js
sbb
mov
mov
mov
movs
jmp
add
cs
mov
loop
in
jbe
lahf
(bad)
retf
lods
mov
pop
rcr
hlt
scas
mov
pop
mov
mov
adc
add
scas
cwde
cmps
cmp
jnp
out
ins
mov
ffreep
mov
jae
dec
cli
jno
dec
movs
js
ds
mov
push
dec
and
xlat
push
inc
mov
mov
mov
mov
jnp
fbld
or
imul
mov
dec
ins
aas
adc
and
bound
jne
lds
dec
ds
neg
or
arpl
fmul
mov
mov
xchg
(bad)
(bad)
xchg
mov
jae
mov
add
jnp
ja
lods
or
jle
cld
adc
imul
cs
fistp
add
shr
mov
pop
popf
add
test
cli
int
lahf
mov
xor
mov
inc
inc
dec
pusha
test
pop
push
xlat
je
jle
(bad)
mov
pop
aaa
or
jmp
ja
retf
push
cmp
jne
push
push
out
push
stos
inc
cmp
adc
ds
pop
je
xor
shr
sbb
and
mov
jg
stos
dec
and
ds
mov
pop
clc
iret
push
add
(bad)
rcl
leave
dec
out
mov
or
or
and
cld
add
adc
scas
loope
or
mov
in
pop
not
pop
or
stc
aas
sub
inc
repnz
inc
cmp
push
add
mov
mov
(bad)
add
popf
mov
inc
loope
jmp
icebp
dec
push
movs
loop
fidiv
lds
adc
push
pushf
mov
pushf
data16
pop
(bad)
call
(bad)
jmp
jae
ds
ds
sub
push
mov
imul
pop
xlat
jae
adc
lods
pop
arpl
push
(bad)
addr16
rcl
int
addr16
ret
ins
mov
xchg
cli
adc
call
push
popf
out
adc
ds
fnstcw
rol
pop
fldenv
push
sub
cmp
lahf
mov
or
and
adc
jmp
xchg
sub
jae
push
mov
push
(bad)
push
inc
jb
shl
xor
leave
mov
ja
rol
sbb
and
push
or
add
fwait
dec
cmp
test
fstp
scas
movs
add
mov
xor
mov
in
cmps
int3
fstp
push
ins
gs
and
add
aas
ret
sar
or
mov
pop
leave
inc
push
aam
mov
add
test
sub
pop
or
adc
aas
inc
pop
sub
out
outs
mov
jle
mov
gs
(bad)
push
dec
fadd
xor
and
jg
test
imul
mov
add
mov
jne
cdq
loope
pop
add
retf
sar
out
mov
lods
sub
xchg
push
mov
xor
shl
push
aas
and
ret
jbe
je
push
push
clc
push
push
inc
jbe
inc
sbb
fild
ds
les
mov
sub
dec
mov
xchg
adc
push
imul
pop
xchg
mov
cmp
mov
les
punpcklbw
adc
dec
push
fsub
clc
test
shl
lea
and
imul
ins
xor
ss
(bad)
mov
ss
jmp
mov
clc
adc
fisttp
adc
mov
(bad)
dec
pop
push
xor
hlt
popa
cmp
add
pop
push
cs
addr16
and
push
xchg
dec
cwde
pop
std
inc
add
retf
out
push
xor
xor
in
out
addr16
cmps
or
sbb
retf
mov
adc
add
xor
inc
test
push
push
dec
test
(bad)
div
jb
dec
sahf
out
adc
pop
scas
ins
sub
inc
cmc
push
xchg
sub
stos
dec
mov
add
js
jae
ret
ror
adc
sbb
repz
adc
stos
in
mov
test
jno
add
nop
fidiv
pop
adc
pop
mov
xor
out
sti
cmp
cmp
mov
ret
sar
sub
shl
inc
mov
mov
jge
jp
bound
xor
loopne
pop
retf
add
test
cmc
xor
jmp
out
loope
in
shr
sub
jecxz
rcl
push
rcr
push
retf
or
arpl
or
out
sbb
stos
in
stos
shl
adc
push
test
cmp
xor
sti
pop
cmc
mov
rcl
sbb
sbb
cld
dec
adc
movs
in
adc
mov
in
dec
pushf
mov
retf
mul
ins
adc
lea
sbb
add
dec
pop
stos
lea
jns
jge
sti
sub
pushf
mov
fidivr
lock
lahf
mov
ss
mov
xchg
mov
inc
dec
in
leave
(bad)
inc
jnp
jns
mov
retf
in
adc
and
mov
sub
std
in
cmp
inc
mov
dec
lahf
lahf
jno
adc
inc
fmul
jle
(bad)
cli
int
aad
adc
inc
pop
adc
in
bound
mov
xor
mov
cmps
popa
xor
pop
cmp
mov
mov
mov
mov
es
cs
cwde
repnz
or
gs
adc
mov
mov
cs
cmps
nop
cmp
ficom
call
add
xchg
or
pusha
dec
repz
lods
push
dec
mov
shl
addr16
(bad)
out
test
cld
jmp
cmps
into
call
dec
icebp
pushf
pop
cdq
dec
gs
mov
ja
inc
imul
int
sahf
dec
outs
gs
ret
mov
adc
jo
push
call
add
arpl
dec
dec
mov
inc
pop
cmps
jnp
fld
xchg
xor
or
lea
xor
dec
outs
sub
imul
(bad)
stos
sbb
imul
add
aad
xchg
fxch
inc
add
ins
std
cmp
in
mov
sbb
sbb
mov
dec
fadd
sub
add
clc
test
xor
mov
icebp
cmp
cmp
sahf
cmps
loopne
or
push
ror
inc
and
pusha
rcr
adc
jae
mov
gs
add
xchg
inc
dec
mov
inc
xor
push
push
mov
enter
movs
mov
shr
fisubr
pop
gs
cmp
mov
repnz
int
jnp
loopne
into
loopne
add
outs
xor
in
jo
or
push
and
stos
xor
out
fs
lods
in
pop
mov
mov
loop
mov
mov
js
lea
adc
pop
cmp
(bad)
(bad)
mov
sbb
adc
fbstp
loopne
mov
(bad)
sub
lahf
and
(bad)
mov
xchg
enter
sbb
mov
in
aam
jecxz
mov
sbb
push
mov
adc
cld
sub
iret
jns
or
mov
sbb
movs
loopne
inc
rol
std
pop
push
add
mov
cmp
sbb
mov
sbb
das
pushf
mov
inc
das
es
retf
retf
push
ret
jo
ss
cmps
sub
dec
jb
xchg
cmp
mov
sub
add
mov
mov
sbb
jl
test
add
jp
push
cmp
outs
sahf
in
call
fcmove
cld
mov
jl
xchg
jae
xchg
jg
or
scas
repz
push
(bad)
repz
mov
in
or
pop
dec
add
inc
out
inc
(bad)
mov
mov
mov
pop
and
inc
xchg
jo
pop
mov
xor
adc
pop
jp
mov
or
dec
xchg
mov
sub
mov
xchg
xchg
out
dec
mov
sbb
aas
out
dec
push
push
sub
daa
inc
or
arpl
adc
mov
sti
in
fld
hlt
icebp
sbb
rcl
imul
or
test
sub
lods
adc
jle
aam
jns
mov
fcmovbe
push
retf
inc
imul
std
or
lfence
repz
dec
retf
mov
inc
sbb
fcomp
pop
add
cld
leave
and
lods
mov
idiv
inc
cdq
mov
mov
pop
and
sub
sub
imul
and
add
std
sub
(bad)
add
mov
out
fucom
stc
sbb
dec
pop
pop
les
retfw
ret
out
add
ins
cwde
(bad)
jb
jl
sbb
mov
inc
mov
adc
jb
jb
test
adc
test
pop
adc
div
(bad)
mov
fst
sub
adc
sub
cmps
iret
ret
pop
imul
sub
scas
outs
xchg
cmp
xor
inc
add
and
mov
and
jnp
push
addr16
enter
and
cmps
xlat
cld
in
or
fs
test
or
test
mov
sbb
std
adc
dec
pushf
addr16
or
add
frstor
(bad)
cli
jb
int3
push
cmps
push
xchg
aad
add
xor
lods
adc
fs
and
aam
cdq
fwait
div
pushf
sbb
je
iret
ss
lods
mov
aam
mov
rcl
sub
push
add
daa
xor
das
dec
mov
bound
pop
inc
or
inc
xchg
jmp
or
mov
adc
(bad)
sahf
mov
mov
aad
icebp
xchg
adc
rcr
test
imul
ds
sar
mov
jmp
mov
nop
in
mov
mov
jae
xchg
shl
jno
leave
imul
sub
jo
mov
cmc
loopne
and
or
dec
test
addr16
cmps
fsubr
shl
mov
inc
mov
rcr
pop
mov
or
inc
sub
(bad)
xor
jp
loope
cli
outs
xchg
cli
inc
movs
adc
les
imul
pop
sahf
ficom
cmp
(bad)
sub
bound
xor
add
pop
cmp
xchg
fnsave
mov
xlat
lds
xchg
mov
mov
sbb
jne
cmps
imul
mov
cmp
push
and
cmp
(bad)
jbe
jecxz
aad
sti
out
mov
repnz
xor
test
xlat
outs
sar
push
test
cmp
mov
outs
add
and
je
out
out
fcom
and
sub
(bad)
adc
jge
mov
jbe
cmp
sub
push
sub
clc
mov
mov
out
add
mov
mov
out
mov
or
pushf
mov
test
xor
stc
pop
jae
inc
sbb
int3
mov
ret
stc
push
push
aaa
fsub
inc
ja
stc
push
div
lds
or
or
cmp
xchg
movs
ret
out
rol
jno
das
rol
mov
jmp
ins
rol
xchg
xchg
or
leave
pusha
retf
add
sahf
pop
push
vpslld
inc
push
(bad)
enter
(bad)
jne
jp
jmp
mov
outs
mov
or
stos
adc
repz
xchg
scas
icebp
fstp
xor
sahf
sbb
pop
imul
cmc
sbb
push
jnp
push
inc
inc
popa
mov
fsub
lock
iret
in
out
xor
(bad)
pop
ror
mov
and
or
stc
push
stos
repnz
pop
push
jo
hlt
test
push
js
test
icebp
mov
jo
mov
mov
mov
loopne
push
jbe
aaa
rol
call
or
js
lds
xor
push
(bad)
mov
mov
into
test
scas
jecxz
xlat
xchg
or
cdq
scas
jge
stos
out
dec
ins
sub
xchg
pop
or
cmps
dec
push
add
retf
dec
stos
enter
nop
sub
cwde
sub
fnstsw
int3
xchg
xor
cwde
pop
leave
push
(bad)
xor
mov
xor
addr16
and
imul
addps
cmp
nop
adc
pop
call
retf
inc
popf
mov
dec
into
int
push
adc
sub
mov
inc
cli
or
or
shr
(bad)
(bad)
dec
mov
or
jmp
rcl
fdivr
int3
loope
pusha
mov
xchg
xchg
(bad)
in
(bad)
(bad)
mov
jbe
or
aaa
pop
sbb
mov
add
cmc
(bad)
dec
inc
xor
cmp
repnz
push
jmp
mov
mov
int3
cmp
int
fucom
jmp
dec
pop
(bad)
lahf
xchg
mov
and
outs
jae
(bad)
int
(bad)
pop
lods
cmp
push
out
xor
mov
scas
dec
out
or
cmp
test
mov
movs
jae
les
inc
retf
retf
xlat
adc
pop
(bad)
mov
or
std
push
aas
or
dec
pop
test
xor
xor
daa
sub
xor
sub
jne
shr
dec
out
js
jbe
lds
out
popa
mov
retf
stc
int3
out
push
nop
cmps
cmp
inc
sub
pushf
neg
dec
dec
add
stc
enter
jnp
scas
mov
adc
inc
movs
shr
(bad)
dec
out
or
mov
addr16
dec
lea
out
movs
jmp
or
sub
jno
xor
in
shl
lock
rcr
dec
or
inc
test
push
add
ret
inc
iret
cwde
push
sahf
pusha
int
xchg
adc
xchg
xor
into
mov
ds
jecxz
push
mov
pop
nop
dec
cmp
lock
mov
jmp
pop
xchg
push
add
xlat
aas
and
pushf
and
fucomp
mov
not
push
xor
loopne
mov
loopne
inc
mov
fistp
imul
add
cmps
mov
lods
loope
shl
dec
jge
and
jg
iret
mov
fs
js
push
cwde
adc
int
dec
adc
aas
xor
test
mov
test
ins
and
cmp
int
sbb
jl
dec
mov
push
inc
mov
fcom
xchg
cdq
jae
pop
push
dec
in
push
fs
sti
jbe
jns
adc
push
cmp
je
call
push
dec
xor
addr16
and
add
adc
mov
jns
xchg
iret
jmp
shr
test
mov
neg
jle
and
aad
adc
imul
push
jecxz
repz
mov
cmp
jl
jae
in
je
sub
pop
cmp
imul
sub
pop
xchg
cmps
rol
and
popa
push
xlat
push
push
cmp
push
stc
mov
pop
pop
adc
pop
outs
dec
push
call
add
repnz
out
push
inc
and
cmp
aad
push
dec
pop
icebp
sub
xchg
out
test
lea
iret
call
cs
xor
call
lmsw
clc
addr16
lea
sub
and
jo
xor
push
cmp
pop
fsub
(bad)
pop
nop
add
cli
ret
outs
dec
xor
cwde
push
pushw
xchg
jnp
jbe
call
aad
sub
inc
jnp
cmp
sub
ins
out
add
cmc
scas
aad
out
sbb
pop
cmp
dec
(bad)
aam
call
push
pop
and
pop
addr16
jmp
xor
nop
cli
iret
mov
in
(bad)
jmp
jge
push
mov
push
leave
aad
add
jo
push
and
pop
and
loope
daa
dec
mov
xchg
sub
sbb
arpl
add
fwait
xchg
jbe
mov
mov
pop
add
push
test
push
pop
imul
loopne
or
sub
xchg
or
cmp
xchg
fidiv
call
mov
jl
cwde
push
cmc
mov
add
mov
push
mov
xor
mov
mov
ret
(bad)
jbe
(bad)
les
imul
mov
jecxz
push
or
stos
sub
sbb
xor
push
ret
cmp
mov
push
sbb
call
xchg
dec
call
jp
adc
pop
and
test
call
mov
pushf
sbb
mov
inc
xor
bound
inc
sbb
sar
mov
push
iret
js
dec
ja
in
mul
aam
mov
sbb
mov
imul
add
(bad)
(bad)
xchg
jmp
fbstp
cdq
leave
adc
jle
jmp
pop
pop
ds
stc
je
sub
mov
pop
(bad)
push
jb
addr16
shl
adc
and
mov
call
cwde
fisttp
inc
inc
adc
imul
pop
in
pop
ja
push
sub
cwde
dec
fwait
mov
ret
add
addr16
arpl
pop
(bad)
sub
int
aam
in
lahf
in
jns
add
sbb
mov
fist
adc
call
ins
sub
mov
add
mov
lock
sbb
ret
cmps
fidiv
test
int3
and
repz
jmp
pop
mov
push
mov
push
mov
pop
mov
fcomp
test
xchg
mov
scas
sub
(bad)
stos
mov
inc
outs
mov
adc
cmp
mov
mov
outs
out
loopne
movs
sti
push
push
sub
aaa
rol
loop
push
scas
adc
cmp
cmp
mov
adc
out
js
retf
add
and
lea
es
dec
pop
mov
aam
pushf
in
jbe
xor
mov
sar
shl
lahf
mov
or
adc
lds
adc
mov
outs
xlat
push
mov
inc
and
and
inc
test
sbb
mov
mov
cmps
fwait
push
mov
cmp
ins
mov
mov
mov
cmp
(bad)
fbld
aad
mov
fild
ja
dec
aam
ds
xor
xor
fnstsw
add
pop
add
jne
cmp
loope
leave
mov
ja
aad
mov
xchg
jb
jmp
arpl
movs
xchg
cdq
out
pop
dec
pop
add
aas
push
sbb
dec
ins
xlat
pop
js
jge
(bad)
fmul
(bad)
je
enter
pop
test
ret
add
adc
adc
pop
xor
fist
inc
xor
mov
xor
xchg
xor
sub
ret
mov
xlat
cld
cmp
addr16
(bad)
in
cdq
jge
inc
in
rcr
sbb
sti
inc
and
add
sar
jmp
dec
sbb
xchg
inc
cmp
mov
pop
clc
jmp
xchg
std
cmp
(bad)
cmp
mov
add
pop
push
pop
xchg
jecxz
and
sub
test
aad
mov
cdq
aam
sti
pop
mov
das
mov
jg
xchg
or
retf
sbb
jmp
inc
(bad)
sahf
stos
fisttp
ins
scas
mov
loope
ffreep
iret
fs
push
in
scas
loopne
mov
clc
repz
fnstcw
mov
push
rol
stos
sub
sbb
aas
cli
add
jbe
pmulhuw
in
movs
jne
jo
mov
mov
clc
sub
mov
adc
call
ret
ja
adc
xchg
xlat
push
in
inc
lods
hlt
xchg
adc
stc
into
push
mov
sar
xor
push
clc
adc
std
xor
jnp
lods
(bad)
cmps
out
repnz
dec
test
ins
adc
cmp
inc
test
jns
ss
test
and
mov
enter
scas
inc
shl
sahf
jns
sbb
ds
outs
dec
adc
or
retf
dec
call
mov
xchg
fcomp
add
fist
rcr
mov
int
cmp
xchg
push
ins
fidivr
adc
iret
lock
sub
inc
int
(bad)
clc
jmp
clc
sbb
daa
xchg
mov
inc
jp
add
or
dec
jmp
out
mov
inc
cld
retf
push
adc
cmp
les
mov
cmp
mov
inc
adc
sbb
leave
data16
cmps
sub
or
or
and
(bad)
mov
mov
mov
dec
retf
mov
mov
push
push
pop
sbb
jbe
pop
jmp
jp
pop
push
sub
test
mov
cmp
sbb
push
fdivr
inc
jnp
inc
(bad)
dec
sbb
arpl
cmc
imul
push
aad
mov
push
imul
(bad)
jp
mov
lds
(bad)
stos
jnp
pop
sar
stc
test
jnp
js
cmp
pop
push
stos
rcr
mov
xchg
or
xor
xchg
test
xchg
in
and
pop
repnz
pop
pop
add
movs
add
fcomp
pop
xor
mov
mov
mov
sahf
dec
mov
leave
int3
(bad)
push
jg
lea
jg
(bad)
pop
lea
pop
ins
sub
mov
iret
cli
cld
test
pop
push
cmp
movs
push
imul
es
dec
lods
das
outs
test
scas
mov
movs
in
ins
and
rcl
(bad)
pop
cli
frstor
jbe
popf
jmp
inc
stos
jnp
(bad)
icebp
aam
dec
cmp
ds
ffreep
stos
adc
lahf
mov
xchg
lock
dec
in
sub
mov
xor
adc
jnp
movs
pop
imul
repnz
rcr
ins
js
sub
sbb
xor
jb
pop
inc
add
loop
cmps
push
sahf
cmp
lahf
imul
mov
add
mov
sti
jb
inc
pop
add
mov
and
in
pop
stos
mov
push
xchg
outs
dec
mov
mov
ret
out
call
popf
pop
popa
dec
push
dec
imul
mov
inc
push
gs
and
sub
push
call
inc
es
pop
ret
ret
xlat
cdq
(bad)
jecxz
mov
std
mov
inc
loop
xlat
stc
push
jb
and
movs
push
cmps
sbb
lock
mov
dec
inc
sbb
retf
add
dec
or
push
pop
mov
lock
sub
sub
fs
scas
stos
push
frstor
mov
xor
sbb
fs
popf
xchg
dec
into
fwait
std
repz
add
xchg
mov
cmps
nop
sbb
inc
clc
out
jne
pop
mov
add
mov
cwde
mov
shl
pop
xor
in
mov
into
jae
sub
repnz
sub
jb
jnp
stc
std
mov
ror
mov
mov
and
ror
push
loopne
adc
cmp
outs
pop
push
cmp
mov
mov
cdq
pusha
sbb
mov
sbb
push
pop
mov
jecxz
cli
xchg
mov
enter
cwde
movs
pusha
jbe
inc
(bad)
push
jnp
test
or
outs
cmp
out
adc
jmp
cld
push
or
cdq
dec
jne
es
adc
and
mov
jmp
(bad)
retf
mov
sub
inc
add
push
push
adc
pop
push
xor
(bad)
xchg
sbb
dec
cmp
data16
aad
inc
pop
(bad)
lods
test
in
cmc
movs
in
aam
mov
mov
out
jg
fist
test
pop
or
sbb
in
mov
enter
shr
sub
pop
pop
shr
mov
jmp
loop
jmp
loop
repz
bound
adc
pushf
int
mov
lock
aad
mov
jge
mov
sbb
arpl
mov
and
(bad)
(bad)
in
sbb
add
or
xor
xchg
mov
std
call
cmps
cs
inc
mov
ror
mov
pop
mov
jecxz
push
adc
je
sub
retf
call
inc
xchg
sbb
rcl
data16
js
rcr
das
fsub
and
mov
sub
imul
iret
mov
lahf
push
retf
jno
mov
inc
or
retf
xchg
and
mov
xchg
mov
or
in
iret
jb
in
addr16
popa
cmovle
shl
clc
cmps
adc
cmp
mov
mov
mov
shr
lods
xor
enter
dec
lds
dec
mov
addr16
ins
adc
stos
adc
jg
sub
ins
arpl
outs
sbb
jae
pop
dec
aad
and
call
into
inc
sub
lods
sub
cmp
or
(bad)
mov
movs
dec
dec
iret
mov
(bad)
mov
inc
mov
mov
stos
push
jmp
ins
aaa
sahf
xchg
push
mov
loopne
add
popf
mov
dec
sbb
add
int3
mov
xchg
pop
(bad)
push
jge
les
movs
nop
dec
sbb
arpl
rcl
mov
dec
pop
outs
xchg
or
push
popf
adc
xchg
inc
and
mov
popf
(bad)
js
jmp
inc
cmp
sub
es
sbb
je
hlt
jge
mov
int3
ret
sub
das
mov
pop
mov
outs
sbb
lea
xor
jbe
sar
mov
loopne
adc
cmp
fsubp
pop
pop
out
inc
mov
dec
leave
cmp
dec
cmps
test
pop
mov
retf
and
pop
inc
adc
push
(bad)
xchg
ss
push
in
push
aaa
fwait
cmps
pop
movs
and
stos
xchg
pop
xchg
mov
mov
out
or
push
mov
adc
sar
mov
cmps
outs
bound
scas
cli
imul
mov
mov
sub
sbb
jecxz
mov
mov
cmp
adc
sbb
jns
adc
sahf
mov
mov
addr16
xchg
pop
sub
pop
ins
addr16
int
(bad)
fsub
sub
lds
jnp
mov
mov
and
jge
sbb
cmp
add
add
or
daa
ds
dec
in
xchg
push
xor
xor
xchg
jnp
add
mov
mov
fnstenv
sbb
(bad)
aam
xlat
and
loop
add
mov
fs
int
ret
mov
add
push
pop
mov
xor
adc
mov
in
cmps
pop
fstp
test
mov
push
and
jge
cmovl
lds
lds
sub
dec
scas
push
mov
mov
or
xchg
push
fistp
cdq
mov
jmp
pop
add
retf
pushf
sti
test
cli
out
leave
neg
sar
je
arpl
mov
js
cwde
imul
sbb
mov
pop
(bad)
push
pop
pop
(bad)
jp
pop
aam
aad
dec
or
loope
stos
jno
ins
fdivr
pusha
and
xchg
cwde
mov
or
push
mov
mov
sub
aaa
sub
clc
xchg
pop
sbb
jno
pop
pusha
(bad)
sbb
mov
mov
(bad)
sbb
xchg
cmps
mov
(bad)
loopne
clc
cs
xor
(bad)
jmp
sahf
hlt
int
sub
in
mov
xor
or
pushf
fisttp
cwde
call
outs
std
mov
aad
xchg
call
mov
mov
mov
mov
adc
loopne
xchg
or
sbb
stc
cmp
icebp
test
mov
ret
dec
push
neg
jle
add
and
fld
out
in
xchg
cmp
dec
pop
call
mov
xlat
adc
daa
and
mov
adc
adc
fadd
call
fcom
pop
ret
cmp
int
mov
(bad)
mov
or
inc
add
dec
es
fdivr
fldcw
mov
and
arpl
pop
cmp
xor
or
cmc
add
xchg
aaa
gs
lock
mov
cmps
lahf
popf
cmps
mov
outs
jne
mov
fistp
mov
call
int3
addr16
fwait
push
ins
inc
fs
aam
data16
ja
(bad)
retf
jmp
push
or
mov
add
jbe
xchg
push
jbe
fimul
cwde
and
scas
enter
mov
add
pop
pop
outs
call
iret
iret
push
add
lods
mov
outs
push
pop
ss
ds
ret
sbb
(bad)
call
das
cs
leave
mov
pop
inc
cmp
mov
push
sub
mov
inc
test
aam
psubq
jmp
int3
rcr
pop
popa
fcom
ins
mov
and
cs
scas
test
ret
add
or
push
push
scas
xchg
adc
loop
loopne
inc
xor
sub
shl
or
or
pop
ja
ins
out
sub
scas
jmp
cwde
mov
test
sub
ret
fwait
ret
inc
ins
das
int
ret
data16
add
jg
mov
mov
rcl
xor
cwde
mulps
cld
and
xor
push
ja
push
or
push
sahf
mov
ret
inc
shl
leave
rep
jg
inc
pop
lods
push
out
push
mov
movs
cmp
stos
fs
xchg
fadd
std
scas
jne
push
inc
sbb
jne
adc
outs
cld
fstp
loope
push
shl
push
int
popf
sbb
mov
dec
out
mov
mov
xor
aaa
push
mov
and
push
mov
or
jle
fisubr
pop
daa
push
jmp
mov
and
stos
outs
and
xchg
retf
cmp
adc
aad
ss
jg
and
jb
es
fucom
mov
mov
mov
pop
std
shl
(bad)
loopne
in
push
xchg
out
hlt
mov
lock
mov
aas
jmp
pop
jge
mov
movs
sub
add
ins
lahf
ud1
(bad)
(bad)
fidiv
push
pop
in
xchg
add
in
mul
std
shl
inc
adc
test
lods
loop
and
add
clc
jecxz
cli
rol
cmp
sar
stos
cld
mov
dec
xchg
loop
outs
dec
jmp
and
dec
ja
es
aas
sbb
cmps
iret
sahf
test
mov
sahf
in
sbb
mov
xor
sbb
movs
dec
xor
outs
inc
test
adc
jecxz
mov
adc
cdq
push
test
ss
out
push
out
inc
jno
cwde
pop
pushf
mov
sbb
repnz
pop
adc
(bad)
int
sar
fcom
push
lods
mov
retf
dec
in
in
ss
xchg
ffree
sar
xchg
inc
add
xchg
mov
shl
lods
in
cmp
cmps
pop
cmp
arpl
retf
push
pop
push
or
dec
pop
fistp
stos
out
xchg
push
inc
xchg
cmp
pop
das
cwde
or
dec
mov
ja
mov
sub
add
dec
rcr
ss
repz
iret
jb
shl
mov
cmp
popa
mov
(bad)
push
ins
mov
popa
pop
ret
cs
scas
mov
dec
mov
daa
popf
popf
es
(bad)
and
(bad)
inc
mov
(bad)
mov
aas
jecxz
fs
cli
xchg
popa
ret
(bad)
movs
ds
(bad)
cld
cli
pop
(bad)
ffree
sub
outs
cmp
lds
pop
sbb
jle
lock
iret
ret
inc
jae
push
shr
xor
ror
mov
jmp
das
int3
adc
es
jg
inc
mov
neg
jns
mov
shr
push
imul
bound
retf
fst
cmc
inc
iret
imul
es
aad
adc
rcr
loope
icebp
rol
enter
or
sub
test
loope
inc
jno
gs
dec
jb
clc
seta
dec
dec
inc
cs
add
test
jmp
cmp
ds
scas
in
retf
mov
mov
add
packsswb
pop
mov
aaa
mov
xchg
retf
sub
fidivr
inc
cmp
pop
nop
dec
push
mov
jge
mov
mov
imul
call
pop
mul
mov
pop
or
dec
test
fcomp
jo
jl
in
jg
mov
hlt
pop
sbb
call
out
ins
(bad)
pop
mov
scas
scas
sti
xor
mov
lds
repnz
in
aad
ret
xor
adc
jecxz
cwde
(bad)
dec
push
mov
cmp
ror
xor
sbb
ret
fwait
shr
add
mov
or
sti
rcl
jne
dec
call
ja
shl
xor
inc
mov
cmps
push
sahf
and
jno
stos
and
call
cmc
retf
cli
fisubr
xchg
push
mov
iret
retf
mov
sub
mov
mov
mov
push
or
cmp
das
jae
in
mov
xor
das
shl
popf
sub
mov
ins
inc
aam
aad
mov
mov
inc
nop
aam
and
mov
stos
nop
mov
ret
and
(bad)
mov
retf
push
xor
jae
(bad)
sub
aaa
xlat
mov
sbb
loope
ins
sbb
nop
mov
cmc
imul
mov
ror
mov
iret
inc
push
movs
xchg
in
adc
mov
push
sub
xor
pop
cmp
test
or
mov
fist
push
sbb
ins
fbstp
jp
mov
iret
mov
imul
ficom
jecxz
into
sbb
clc
and
out
mov
nop
test
leave
cmps
dec
cmps
sahf
push
jo
retf
cwde
jne
add
adc
jmp
xor
sub
mov
in
fmul
cmp
fild
sbb
push
pop
or
jne
fsub
mov
nop
and
mov
mov
push
mov
adc
mov
shl
mov
and
mov
adc
add
scas
inc
xor
fwait
jbe
xor
or
cdq
dec
mov
sar
fwait
xchg
adc
(bad)
ja
pop
push
shl
adc
xchg
rol
call
iret
push
iret
jle
lahf
iret
add
jae
dec
push
xchg
dec
in
popf
jecxz
div
test
bound
loope
inc
mov
(bad)
jmp
xchg
dec
sub
xchg
inc
fs
adc
stos
pop
fst
adc
ins
daa
cmps
scas
cmp
sbb
aaa
cwde
and
inc
mov
mov
in
mov
jmp
scas
mov
arpl
fwait
ins
repnz
bound
xor
sub
and
push
fldpi
(bad)
(bad)
pushf
jbe
xchg
or
daa
mov
fldcw
movs
sbb
sbb
push
es
cmps
push
mov
out
outs
dec
add
pop
out
sbb
rcl
out
push
push
stos
pusha
dec
xor
shl
inc
mov
xor
mov
test
scas
arpl
xchg
retf
jl
dec
(bad)
pop
arpl
loop
or
adc
pushf
mov
mov
mov
int3
add
xchg
pop
popf
test
xor
sub
in
sbb
cmp
mov
mov
enter
ja
scas
(bad)
int3
push
ins
mov
mov
fnstsw
shr
ror
test
lods
jnp
xchg
stc
stos
jns
cwde
aas
iret
aad
xchg
dec
fisttp
mov
jmp
inc
pop
dec
cmp
sti
sbb
sbb
push
and
out
cmp
jmp
aas
push
jns
pop
std
or
js
enter
lahf
mov
rcl
retf
xchg
lods
mov
or
iret
add
fsubr
sub
dec
cmc
cs
cld
iret
int
mov
jae
(bad)
or
ret
or
gs
fisttp
fs
out
xchg
cld
into
dec
inc
xchg
outs
fild
cs
popf
pop
sbb
pop
mov
sbb
jno
test
xchg
aaa
jmp
sbb
cs
mov
dec
sahf
sbb
jno
mov
hlt
bound
dec
in
sar
dec
aam
jb
pop
jo
and
fistp
dec
mov
sar
das
mov
mov
fs
out
mov
mov
mov
sub
cdq
ret
rcl
stos
into
repz
mov
test
fild
sub
push
xchg
mov
mov
add
hlt
ficom
xchg
mov
cmp
jns
(bad)
ins
sbb
or
mov
cmp
or
add
and
aam
mov
pop
int
xor
jae
xchg
int3
ds
fwait
add
jnp
ins
in
xchg
das
xor
mov
rcr
jp
or
rcr
pop
add
js
jg
xor
sbb
scas
push
movs
sbb
cmp
xor
jno
aaa
jbe
das
(bad)
mov
push
jmp
aas
adc
idiv
mov
test
sbb
push
js
push
pop
bound
xlat
pop
inc
cmp
das
mov
cmp
pop
and
push
lock
out
iret
fneni(8087
mov
and
sahf
(bad)
(bad)
sar
das
cs
cs
cmps
dec
xor
jmp
(bad)
div
(bad)
xchg
sahf
cwde
aaa
fldenv
sub
gs
push
xlat
std
test
mov
test
and
pop
xor
sahf
mov
loop
and
sbb
sub
das
push
(bad)
sahf
xchg
leave
mov
cwde
mov
mov
int
jmp
rcr
push
aaa
xchg
cmp
js
das
pushf
xor
aam
cdq
push
aaa
jmp
test
and
sbb
and
mov
(bad)
mov
inc
mov
imul
xor
xchg
shl
rcl
xchg
and
pusha
add
in
int
sti
mov
cmp
idiv
cmp
mov
xchg
(bad)
(bad)
mov
sub
clc
dec
xchg
stos
mov
mov
repz
repz
ins
xchg
push
test
or
inc
stos
movzx
or
push
imul
jmp
rol
sbb
or
movs
mov
stc
xchg
cmp
fstp
jb
pop
(bad)
and
or
push
mov
out
or
cmc
xor
mov
nop
adc
fcmovnb
jb
inc
jb
dec
retf
mov
push
fbld
sbb
pushf
jne
test
xchg
xchg
shl
xor
jae
(bad)
jge
and
sub
or
les
cmp
xor
or
xor
jp
dec
lea
inc
hlt
mov
cmp
(bad)
rcr
pop
ret
cmps
ins
lea
and
(bad)
jmp
add
fs
cmp
test
cs
xor
inc
mov
fidivr
fdiv
(bad)
clc
inc
je
into
inc
shr
scas
cdq
inc
mov
sbb
dec
sti
push
push
fldcw
jbe
daa
adc
(bad)
cmp
test
(bad)
and
lahf
dec
icebp
mov
push
pop
outs
jmp
cmp
jb
jmp
lods
jbe
mov
inc
in
and
es
dec
cld
lea
jb
clc
aam
pop
jae
xchg
mov
fdiv
std
ror
jo
jge
or
arpl
cld
xor
xchg
dec
mov
cmps
mov
mov
xor
(bad)
rcl
in
cmp
aad
ins
out
popf
inc
loop
retf
fidivr
movs
and
mov
fwait
rol
mov
add
sub
add
push
pop
fdivr
jb
mov
into
jge
cmp
push
mov
xor
sub
mov
cs
ret
loope
lods
mov
push
and
retf
data16
retf
out
jg
pop
ror
mov
pop
(bad)
xor
aas
mov
cmp
xchg
sbb
dec
add
into
sub
adc
fcomp
fiadd
movzx
mov
outs
cmp
push
xlat
(bad)
or
adc
in
arpl
xor
ja
retf
inc
in
imul
pushf
xchg
add
sbb
pop
and
outs
dec
mov
std
rol
mov
ins
sub
or
movs
dec
repz
int3
pop
mov
pusha
push
inc
and
popf
jo
push
in
ja
test
pop
push
ja
sub
dec
fisub
loop
nop
aad
outs
sub
and
cmp
pop
inc
pushf
and
icebp
inc
call
push
sbb
aas
xchg
cmp
xchg
int3
cld
cmp
inc
mov
jg
adc
xor
dec
gs
call
add
hlt
dec
in
sbb
leave
cmp
push
sbb
xor
jmp
lea
call
dec
mov
xchg
jns
in
test
out
mov
sti
mov
add
test
loope
mov
stc
(bad)
cmp
jp
(bad)
test
leave
mov
ror
fwait
cmp
test
test
mov
les
jmp
outs
aaa
stos
sbb
dec
sub
xchg
inc
in
out
xor
ins
xlat
cmp
jno
and
jae
and
ret
sti
in
out
mov
and
sti
call
or
call
sar
call
das
fs
jecxz
pop
sar
test
pop
test
pop
fwait
mov
sbb
out
sbb
stos
ret
and
adc
mov
inc
sub
jmp
(bad)
pop
cmps
in
push
cwde
pop
xchg
jno
adc
sbb
xchg
sub
(bad)
mov
dec
loopne
push
inc
test
rcr
sti
(bad)
pusha
push
imul
mov
sbb
push
in
imul
test
pop
(bad)
scas
inc
repnz
pop
inc
push
dec
enter
pop
sub
mov
popf
jl
xchg
(bad)
aam
push
inc
or
sub
cmps
movs
addr16
sub
mov
or
or
xor
push
ins
dec
dec
lea
xchg
test
int
push
push
ins
ins
cld
jb
mov
in
cmp
xchg
clc
cmp
and
add
dec
pushf
int3
movs
icebp
bnd
jmp
or
imul
mov
jle
(bad)
adc
leave
ins
dec
sbb
xchg
adc
jae
aam
stos
push
mov
or
xchg
jg
dec
xlat
cmp
cmps
(bad)
je
and
aad
mov
adc
outs
sbb
sbb
cmp
sub
je
arpl
in
dec
push
test
shr
pop
push
mov
xor
call
cmp
and
xchg
aam
jbe
cmp
in
test
xor
addr16
mov
push
add
outs
and
mov
cmp
mov
call
mov
inc
in
mov
rcl
loop
mov
cmps
fdivr
test
adc
push
fcmovb
neg
cmp
mov
test
call
jno
in
mov
outs
mov
add
in
xor
int
out
dec
inc
push
xchg
(bad)
xor
fs
rcr
pop
push
in
xlat
xor
adc
push
(bad)
iret
mov
enter
mov
fwait
cmp
mov
mov
push
mov
sbb
pusha
call
mov
in
cmps
add
push
add
and
xchg
mov
cmp
and
adc
mov
dec
pop
shl
(bad)
cmps
sahf
(bad)
fwait
push
lea
jl
adc
adc
icebp
ins
movs
lahf
xor
xchg
inc
shl
mov
xor
loope
cli
fsub
sub
aad
out
jmp
bound
lods
call
out
mov
call
stos
nop
pop
pop
push
xchg
rol
and
stos
or
inc
cmp
push
sahf
push
cmp
cwde
pop
mov
dec
lea
repz
int3
push
movs
scas
pop
test
lahf
test
jb
mov
fstp
mov
scas
mov
test
nop
(bad)
xchg
add
shl
inc
addr16
ds
xchg
retf
or
rcr
jae
enter
(bad)
mov
xchg
lea
(bad)
gs
sbb
ror
xor
arpl
test
cli
mov
call
cmps
mov
inc
jno
mov
mov
mov
sub
mov
add
and
jo
leavew
rcl
loope
(bad)
adc
lods
cdq
mov
(bad)
loope
cmp
shl
fnsave
in
pop
jno
lods
adc
stos
dec
and
ficomp
imul
or
add
je
out
mov
stos
fwait
jmp
les
imul
mov
retf
outs
mov
pop
in
pusha
xor
ret
push
shl
cdq
sbb
mov
sub
les
xor
test
test
mov
xchg
push
inc
push
mov
adc
or
cmp
sbb
cdq
pop
and
mov
inc
xchg
ja
mov
mov
mov
mov
xor
cmp
inc
inc
aaa
xchg
cmp
xor
mov
cmps
or
inc
gs
pop
cmps
add
in
dec
iret
sbb
add
adc
stos
popf
and
mov
sbb
ss
inc
ins
ret
add
lods
in
mov
ss
cdq
cwde
adc
(bad)
mov
push
imul
int3
mov
inc
jnp
pop
pop
dec
call
jo
adc
mov
mov
mov
xlat
dec
push
aam
ja
nop
fwait
out
mov
cwde
mov
mov
icebp
cdq
adc
mov
cdq
jle
xchg
adc
xchg
enter
mov
pop
aam
rsqrtps
or
loopne
or
imul
sub
repz
lock
cmc
jge
fwait
in
pop
mov
cmc
sbb
push
push
add
lods
dec
and
add
jecxz
jg
popa
(bad)
mov
mov
shl
not
sub
cmp
mov
js
dec
std
outs
cmp
and
sub
popa
and
rsm
xor
add
sbb
ficom
mov
ja
mov
clc
fidiv
mov
sub
xchg
mov
stos
gs
not
xchg
push
scas
adc
jmp
(bad)
mov
or
or
jne
or
mov
in
das
gs
leave
jecxz
xchg
into
sbb
popf
or
pop
adc
jl
(bad)
xchg
movs
pop
jg
add
(bad)
sub
dec
ret
push
jae
(bad)
sbb
jb
mov
or
mov
push
ds
popf
icebp
neg
sbb
hlt
sbb
fimul
retf
and
jp
fist
pop
rcr
movs
sbb
or
push
mov
inc
popf
xor
adc
je
rcl
mov
fs
sbb
sbb
sub
cmps
sbb
push
rol
push
or
mov
mov
(bad)
fisub
jle
xor
dec
dec
pop
repnz
jo
jo
call
mov
addr16
jae
fs
or
add
push
jmp
dec
aas
test
fnstenv
push
jae
scas
imul
adc
push
call
cmps
popf
sbb
xchg
cmp
or
int
dec
loop
inc
(bad)
das
fcom
dec
fisttp
push
ins
sub
scas
ds
loope
xlat
and
xchg
fmul
fld
inc
cmovge
enter
xchg
cwde
and
out
in
sbb
fs
pop
sti
cmps
and
rol
mov
loope
test
arpl
adc
fucomp
dec
or
sahf
inc
adc
mul
aad
add
xchg
inc
mov
xor
ins
mov
sbb
(bad)
jg
lock
cli
pop
mov
fiadd
push
push
out
mov
fmul
out
fisttp
sbb
dec
inc
or
lds
xchg
mov
mov
js
push
jnp
pop
loop
stos
push
stc
fmul
push
arpl
fdiv
sub
mov
test
adc
inc
ins
xor
int
cld
inc
outs
mov
or
jp
mov
or
adc
mov
sbb
pop
push
mov
dec
(bad)
xor
stc
mov
lds
push
call
mov
out
out
dec
lock
xor
aas
mov
adc
ds
pusha
test
sbb
push
cmps
out
rcr
jp
enter
mov
dec
cmp
xor
mov
cmps
mov
pop
sbb
into
cmp
add
jmp
pusha
data16
dec
ja
dec
pusha
xchg
hlt
push
adc
add
jmp
mov
fsub
out
mov
jns
jp
fs
ja
pusha
jno
mov
xchg
fldln2
in
(bad)
fstp
out
fst
mov
repnz
xchg
(bad)
out
push
jae
xchg
rcr
imul
cwde
daa
push
pop
sub
repnz
mov
adc
add
(bad)
push
cmp
mov
sub
aam
mov
std
cwde
retf
xchg
add
adc
cmp
rol
mov
(bad)
fdiv
cs
mov
nop
mov
push
xor
jae
cmp
sub
pop
pop
(bad)
lock
lock
jae
dec
xchg
in
sub
mov
xchg
sbb
jne
mov
scas
fdiv
xchg
and
cs
ret
movs
xor
jmp
dec
cli
cli
push
cmp
push
sbb
push
das
sbb
inc
push
lock
pop
sbb
and
les
adc
aas
enter
popf
div
sub
adc
mov
lds
pop
in
ja
movs
ins
jl
(bad)
sub
in
push
mov
sub
push
mov
iret
inc
cdq
popf
ret
and
jp
and
out
imul
sub
add
xchg
jnp
ret
sbb
fisubr
fnsave
cmps
sub
xchg
imul
fidiv
add
mov
add
adc
xor
(bad)
pop
or
mov
lock
jmp
mov
pushf
sbb
mov
stc
mov
pushf
and
push
(bad)
pusha
(bad)
sbb
retf
xlat
out
aam
mov
or
adc
(bad)
dec
mov
mov
push
cmp
mov
mov
sbb
es
cdq
push
inc
adc
out
add
pop
mov
nop
fwait
dec
sbb
inc
movhps
int
xlat
xor
das
or
cmps
fldenv
imul
js
inc
dec
(bad)
fucomip
scas
dec
pop
popf
mov
push
xchg
int3
xor
outs
xchg
xchg
stos
icebp
pusha
mov
cli
mov
xor
test
mov
mov
inc
push
shr
xchg
out
cmp
popf
cwde
xor
icebp
xchg
sub
bnd
test
jmp
jnp
mov
push
push
pushf
hlt
xchg
inc
ins
sub
xchg
mov
enter
je
sub
fiadd
sub
call
jl
add
daa
lock
push
xchg
pop
xchg
(bad)
aam
inc
out
mov
icebp
lea
xchg
or
out
xor
and
popa
adc
jp
pop
popf
pop
mov
outs
add
ja
pop
jne
fdiv
popf
retf
lahf
fcomp
ja
pop
clc
std
xor
jae
mov
mov
lock
mov
fs
clc
add
in
pop
add
pop
jp
add
sbb
shr
sar
fwait
sbb
imul
daa
mov
repz
fs
cmp
sbb
dec
or
cdq
mov
inc
adc
js
dec
bound
adc
fst
outs
push
sub
push
dec
cmp
push
jl
out
push
ret
movs
cmp
sub
lods
je
pop
lds
sub
inc
pop
push
ss
movs
adc
sub
cdq
xor
jns
out
fstp
retf
(bad)
sbb
adc
push
movs
ss
pop
jecxz
lea
xor
(bad)
pop
xor
inc
jbe
and
daa
call
xlat
add
and
shl
es
shr
and
inc
jns
movs
mov
push
(bad)
adc
outs
mov
jg
mov
mov
dec
out
mov
aad
mov
ret
loopne
lods
icebp
mov
pusha
int3
push
out
and
aam
loop
lea
push
das
pop
or
xchg
imul
add
das
scas
cmps
leave
push
cs
nop
or
inc
arpl
ins
mov
dec
mul
mov
mov
mov
cmp
daa
and
mov
xor
pop
popa
mov
mov
dec
and
jb
add
jb
xlat
cmp
jecxz
xchg
pop
cs
std
push
jb
fsub
mov
adc
sbb
retf
(bad)
scas
xchg
pop
shr
push
stc
out
inc
pop
fnstsw
push
sahf
push
push
shl
jne
adc
pmaxsw
aas
(bad)
bound
fwait
and
call
cli
fidiv
nop
ret
scas
xchg
cmp
rol
push
jbe
xchg
pop
(bad)
and
jo
shl
(bad)
std
mov
and
mov
and
mov
jge
mov
push
or
sbb
mov
push
mov
dec
push
mov
rcl
ss
lods
xchg
fcmovne
mul
in
jmp
rcl
inc
nop
mov
and
adc
outs
frstor
and
jle
loopne
push
mov
test
jnp
aas
push
and
in
xor
jno
(bad)
fstp
xchg
scas
in
mov
in
mov
cmovo
sub
cmp
sbb
xchg
xor
jbe
add
and
mov
arpl
xchg
cmp
jp
sbb
std
jle
fdiv
jge
dec
jne
inc
mov
or
fprem
push
fdivp
push
adc
push
movs
sub
fidivr
mov
aas
into
fdivr
mov
jb
cmp
(bad)
ds
stc
xor
xchg
mov
ins
pusha
xor
push
mov
ror
xor
or
push
fcom
scas
aaa
cwde
leave
add
test
sub
sub
add
add
sbb
adc
call
cdq
jne
stos
pop
out
mov
or
aad
adc
mov
gs
test
fcmovbe
sbb
adc
(bad)
mov
mov
push
mov
jmp
lahf
lock
out
retf
adc
cld
mov
push
jne
push
neg
in
sbb
imul
das
cmp
in
cvtps2pi
or
idiv
rcr
jge
and
jmp
push
out
scas
or
push
push
scas
and
repz
dec
fs
push
shl
cli
jmp
(bad)
push
fyl2x
and
add
xor
retf
push
push
mov
xchg
xchg
call
fbstp
mov
icebp
iret
movs
or
inc
cmp
(bad)
in
dec
sub
push
(bad)
loope
bound
ret
retf
dec
dec
(bad)
ja
das
les
mov
and
mov
ret
popa
pop
aam
das
xchg
pushf
loop
xlat
jg
xchg
push
cmp
push
imul
loop
jmp
jnp
(bad)
and
pop
push
sar
daa
es
jnp
pop
adc
js
test
(bad)
and
out
mov
div
movs
cli
ds
aam
test
add
jb
fdivr
sub
pop
and
pushf
mov
ins
fnsave
sub
call
jge
enter
pop
push
pop
xor
inc
or
dec
pop
push
movs
cdq
sub
scas
fs
iret
pop
adc
and
xchg
sti
push
js
and
loopne
sub
lock
fisub
(bad)
ret
hlt
sub
dec
cmps
cmps
cmps
push
int
sub
inc
mov
loope
xor
xlat
call
fidivr
push
pop
cwde
cwde
(bad)
loop
jbe
xchg
std
adc
enter
sub
out
push
stos
ror
movntps
push
jl
push
sbb
and
out
jl
(bad)
jnp
fisttp
jnp
cmps
(bad)
shl
push
in
jbe
fidiv
jmp
paddw
cmp
ror
cld
call
stos
or
hlt
in
inc
jnp
mov
(bad)
sub
and
and
xor
and
sbb
sbb
adc
je
add
(bad)
dec
call
in
(bad)
xchg
add
call
shl
out
jmp
sbb
aas
xor
(bad)
fidivr
das
outs
mov
adc
add
sub
pushf
jmp
pop
cmp
dec
out
aas
js
jae
(bad)
or
add
and
sbb
cmc
push
and
arpl
aam
jmp
mov
cmc
mov
nop
mov
cmps
jl
stos
jecxz
jg
cdq
sbb
das
fadd
call
and
lahf
imul
scas
sti
daa
mov
rcr
test
jno
jge
push
and
dec
cli
icebp
das
xchg
sti
mov
add
cs
inc
xchg
pop
mov
inc
repz
aaa
rcl
mov
jmp
pop
inc
or
mov
mov
cmp
mov
popa
lds
inc
pop
mov
add
adc
mov
(bad)
rcr
neg
aam
dec
dec
test
lods
push
cld
stos
mov
icebp
pop
(bad)
mov
dec
pop
jecxz
loop
ins
aad
enter
xchg
dec
adc
and
dec
push
aam
test
push
xchg
popa
push
dec
mov
sub
or
(bad)
movs
add
cwde
push
mov
outs
retf
test
pop
pushf
sahf
fcom
repnz
cmp
iret
loope
mov
push
fnsave
ss
or
(bad)
xor
aad
aas
mov
dec
cs
pop
adc
and
push
pop
clc
mov
call
xchg
sar
out
int3
fisttp
out
lods
dec
fcmove
inc
jecxz
mov
inc
lea
mov
mov
cli
aas
test
fldcw
ret
les
ds
out
arpl
outs
mov
xor
cmp
lods
adc
jmp
push
cmp
mov
jb
sbb
in
jns
sub
(bad)
jo
push
or
not
pop
jns
ins
mov
fs
or
mov
jp
pop
int
jg
(bad)
sbb
jns
push
inc
lods
(bad)
fcom
xchg
add
and
adc
jl
mov
pushf
lahf
cmp
ds
ins
and
dec
mov
mov
cld
enter
in
xor
mov
pop
sti
in
mov
xlat
in
push
or
and
pop
cmps
lea
jmp
dec
not
pusha
adc
int
pop
add
push
dec
sbb
xor
xor
and
or
cli
push
cmp
dec
adc
outs
inc
lock
iret
push
test
mov
add
and
xor
pop
int3
sub
inc
pop
and
dec
cmps
sub
inc
enter
in
call
pop
arpl
fnsave
addr16
das
je
cmp
(bad)
inc
mov
sbb
mov
je
sbb
inc
dec
cmp
retf
jb
and
mov
adc
xor
pop
mov
xchg
sbb
adc
mov
int3
cli
add
xor
cmp
mov
in
shl
pusha
push
shl
cmp
pop
and
inc
aaa
fimul
add
imul
je
dec
jp
mov
pushf
xchg
push
sbb
xor
call
inc
retf
xchg
pop
fidiv
inc
sahf
inc
cmp
inc
ficomp
dec
sub
adc
mov
cmp
les
push
add
dec
in
rcr
dec
loop
shl
ins
das
inc
sar
out
dec
fsub
and
xlat
call
ret
ret
pop
sub
bound
xchg
arpl
sti
repnz
(bad)
sub
adc
adc
in
xlat
mov
retf
shr
mov
test
mov
out
and
outs
mov
jno
(bad)
or
dec
mov
(bad)
ins
(bad)
test
es
jne
pop
dec
dec
fld
retf
lods
xchg
neg
inc
sti
outs
iret
mov
retf
addr16
aad
cld
jp
sbb
test
aad
aas
pusha
mov
clc
xchg
cmps
scas
repz
mov
sub
mov
into
adc
jmp
or
xor
js
pop
test
fimul
jbe
xor
(bad)
int
mov
xor
cmp
dec
mov
mov
mov
xchg
mov
sub
stc
mov
or
sahf
mov
push
pop
push
mov
push
inc
pop
fcom
xchg
xor
inc
arpl
mov
mov
and
xchg
dec
or
jne
shl
push
jnp
jbe
adc
ins
sbb
cmps
adc
movs
cld
push
xor
jp
xor
xor
(bad)
aas
js
mov
dec
enter
pop
dec
cmp
and
add
rol
jle
sub
mov
sub
push
pop
dec
or
cmp
repz
sbb
popa
sar
pop
cmc
retf
in
mov
mov
jmp
(bad)
aaa
stos
mov
mov
es
and
push
sbb
sahf
fidivr
inc
fidiv
stos
mov
sbb
dec
dec
or
call
retf
dec
push
xor
mov
push
sbb
dec
loopne
int
movs
push
in
retf
rcr
cmp
jecxz
jmp
out
xlat
shl
imul
mov
ja
jge
add
sbb
jo
sahf
popa
inc
jno
mov
(bad)
fmul
push
mov
pop
jb
lods
outs
pushf
pop
xor
mov
push
or
jmp
fild
rol
jns
inc
fsubr
fldenv
call
gs
push
cmp
ins
pop
jmp
cmps
jb
pop
xor
sbb
jp
stos
daa
sub
mov
icebp
adc
inc
repz
cmp
ins
imul
mov
stos
dec
xchg
mov
jp
aaa
xchg
iret
push
jns
test
sbb
test
adc
ds
popf
jmp
dec
jne
pop
and
outs
in
sbb
or
mov
mov
repnz
repz
mov
inc
jle
sahf
das
dec
jge
jl
mov
in
or
retf
and
mov
jmp
(bad)
xor
sbb
jge
xor
dec
stos
push
test
lahf
repz
push
in
xchg
mov
inc
sbb
mov
pop
mov
mov
or
sub
ret
ret
and
jns
xor
push
add
aam
loope
bswap
add
pop
(bad)
cmp
scas
adc
pop
jl
or
inc
cld
pop
jbe
js
push
lods
xchg
loope
out
rcr
push
mov
rcl
outs
xor
out
xor
lahf
inc
aam
data16
pop
in
push
cs
xchg
scas
popf
jns
clc
stc
mov
jge
or
das
mov
adc
jbe
popf
cwde
cmps
xchg
mov
ja
shl
ja
iret
xor
pop
pcmpgtw
xchg
(bad)
mov
in
fwait
jg
fstp
xor
enter
xchg
push
shl
daa
les
loop
pop
mov
scas
or
jo
fidivr
jae
sahf
adc
lock
xchg
adc
sbb
mov
popa
adc
aaa
out
aam
add
sub
sar
cli
cld
cmp
cli
loopne
inc
sbb
jmp
and
out
lods
in
xor
push
cli
mov
jp
add
stos
jmp
mov
sbb
aad
into
pop
rcr
mov
lea
ror
scas
adc
imul
cdq
imul
gs
cli
dec
test
jle
mov
je
add
mov
xchg
or
inc
inc
cmps
je
bound
popa
sahf
les
or
les
leave
and
xlat
mov
repnz
(bad)
addr16
mov
push
popa
mov
outs
shl
leave
mov
aam
pop
lods
test
cmp
mov
sbb
hlt
imul
mov
fstp
nop
je
enter
and
scas
cmps
(bad)
and
mov
sbb
pop
adc
push
test
xchg
cmps
icebp
leave
in
jecxz
pop
and
mov
in
and
out
mov
(bad)
shr
ins
scas
popf
loop
jp
outs
mov
stos
lahf
add
cmp
loop
bound
jle
mov
push
pop
js
pop
dec
jbe
or
adc
xchg
pop
xor
add
mov
in
imul
(bad)
test
sub
ins
fsubr
xchg
or
fnstenv
popa
lock
mov
dec
mov
int
sbb
pop
stc
fisubr
mov
inc
jo
(bad)
fdiv
std
sbb
xchg
(bad)
in
xchg
lahf
mov
lahf
cmp
xor
jne
mov
es
pop
or
adc
and
imul
fidivr
sub
mov
lods
fsub
addr16
inc
outs
cmp
pmullw
dec
(bad)
add
outs
movs
ins
mov
sbb
jmp
into
daa
jmp
fisttp
stos
mov
movs
jg
outs
rcl
push
fidivr
adc
pushf
mov
fidiv
clc
stos
fs
xchg
push
lock
lods
xor
dec
jae
inc
shl
mov
shl
das
(bad)
cwde
retf
jmp
push
leave
jne
mov
pop
cld
leave
leave
cmp
jge
scas
mov
add
dec
sahf
popa
aam
in
ret
pop
sbb
shl
jg
int
fstp
mov
nop
xchg
into
push
jmp
dec
mov
sbb
bound
or
xlat
or
push
loop
shr
aas
pop
in
push
xchg
out
repnz
in
loope
xchg
mov
push
mov
lds
xchg
mov
xlat
and
test
inc
mov
dec
xchg
ret
call
nop
mov
cmc
mov
cs
retf
into
jno
ins
mov
rol
cmp
lods
xor
test
xchg
sti
iret
fst
or
adc
dec
dec
add
lar
sar
and
inc
push
icebp
mov
xlat
and
pop
inc
jbe
pop
or
idiv
xchg
gs
xor
iret
pop
cli
add
dec
push
xor
sbb
jnp
pop
xor
int3
xchg
in
add
jl
out
pop
arpl
add
adc
loop
jbe
adc
cmp
(bad)
or
push
imul
mov
dec
push
pop
dec
imul
std
movs
lahf
rcl
pop
mov
call
or
jmp
retf
dec
xor
and
fcom
cs
cmp
pop
repnz
cmp
jge
xchg
or
jmp
pop
xor
adc
xor
fucomp
mov
cwde
jl
lods
pop
or
aas
inc
jnp
or
jae
xchg
loop
pop
stc
push
jg
cmp
nop
cmp
adc
js
stc
add
mov
sbb
repz
sbb
sbb
mov
call
shl
std
mov
or
icebp
imul
popf
aad
(bad)
iret
cmp
sub
xchg
gs
pop
pushf
xchg
mov
inc
sub
jmp
enter
popf
adc
or
or
push
push
dec
inc
ret
adc
in
cmps
adc
xchg
pop
add
and
outs
xchg
xchg
inc
dec
scas
shl
test
push
jnp
popa
pop
xchg
lods
xor
dec
mov
lock
sar
loop
repz
mov
cmp
shl
cmps
cmps
xchg
mov
mov
add
push
ss
shl
nop
sahf
or
jb
lods
ja
or
jmp
push
inc
mov
cmps
test
xor
std
jg
add
std
sub
inc
sbb
call
or
mov
test
adc
add
pop
mov
loop
ja
test
pop
rcl
ficom
sub
mov
xchg
push
shr
dec
inc
push
inc
adc
add
pop
int3
call
leave
pop
or
push
loope
mov
leave
xchg
sub
ins
(bad)
(bad)
and
xor
ins
sub
enter
aad
fisubr
clc
mov
pop
add
add
sbb
adc
in
dec
sbb
dec
lods
in
lahf
and
sbb
sbb
push
mov
fisttp
mov
and
jg
bound
add
pop
xchg
xor
pop
sbb
ss
pusha
add
push
mov
sub
mov
mov
mov
pushf
pop
fadd
std
pop
add
xchg
adc
push
or
sahf
cmp
adc
mov
lea
xchg
sub
nop
call
cmp
add
aad
(bad)
add
add
ret
jnp
imul
push
(bad)
and
cmp
int3
pop
pop
in
fiadd
sbb
cmp
jae
outs
lods
xor
xchg
push
dec
mov
add
dec
call
xor
icebp
jno
pop
push
lods
push
dec
sub
dec
outs
sahf
lods
xchg
mov
aas
mov
mov
xchg
cmp
outs
je
daa
push
retf
in
push
cmc
adc
stos
mov
inc
mov
scas
jne
cwde
and
xchg
inc
adc
xor
ss
and
pop
or
popf
jl
mov
into
(bad)
lahf
sbb
(bad)
out
xchg
inc
sub
fwait
dec
xchg
imul
je
inc
sub
inc
or
xchg
fst
gs
in
push
push
popf
jge
sub
movs
mov
inc
inc
cmc
mov
aad
dec
and
mov
jne
or
fisub
mov
jp
and
adc
inc
into
adc
shr
push
lods
aad
cwde
inc
adc
sbb
retf
sbb
mov
and
add
fidivr
cmp
lock
test
retf
sub
fidivr
pop
pop
cwde
sub
cmp
dec
mov
push
in
div
inc
std
mov
add
mov
aas
pop
cwde
lock
dec
fiadd
fcmovbe
and
in
push
sti
and
arpl
clc
cmp
add
mov
not
sysret
retf
pop
cmp
mov
imul
jbe
outs
xlat
(bad)
sub
scas
inc
dec
mov
test
xchg
sbb
inc
(bad)
adc
jo
(bad)
call
xor
mov
pushf
jne
call
and
mov
pop
aaa
bound
ror
pop
push
stos
mov
imul
int
clc
sbb
and
inc
arpl
pop
(bad)
movs
outs
pop
jmp
inc
movs
xchg
in
cwde
(bad)
mov
cmp
lods
mov
call
adc
or
and
mov
fmul
rcl
mov
addr16
in
scas
les
ins
xchg
and
lahf
aas
adc
call
xor
test
push
jl
adc
jg
out
push
pop
xlat
stc
(bad)
xor
bound
mov
div
enter
xchg
ror
xor
jmp
cmps
cmp
mov
test
inc
hlt
fimul
mov
retf
dec
inc
dec
cmp
(bad)
outs
leave
stos
mov
hlt
in
popf
clc
xor
loop
mov
cwde
xchg
add
loope
dec
mov
fild
xor
mov
or
dec
aaa
fst
je
test
ds
xor
je
jns
pop
ss
pop
push
fistp
jecxz
mov
scas
ret
pop
cmp
inc
xchg
sbb
lods
sub
xor
test
scas
mov
scas
dec
push
push
addr16
mov
sahf
adc
jl
cmp
pushf
fstp
pop
in
fidiv
test
mov
ja
jmp
jg
and
sub
(bad)
jle
sub
rcr
pop
mov
fwait
push
cli
pop
adc
add
mov
call
add
lea
xchg
scas
stc
nop
arpl
inc
pop
aam
cmp
push
fistp
or
jnp
mov
dec
rol
ds
ret
int3
mov
ins
add
mov
movs
push
sbb
ret
dec
adc
stc
push
mov
pop
shr
dec
aam
ins
daa
inc
pop
stos
push
retf
sub
outs
fs
add
out
gs
sub
or
and
fld
shl
sub
pop
hlt
push
add
xlat
or
mov
push
dec
hlt
xor
out
btr
addr16
cwde
fst
ins
aas
mov
add
les
repz
mov
xor
push
sub
sub
pop
stos
hlt
adc
into
cmps
nop
test
(bad)
bnd
aam
or
push
mov
mov
clc
jmp
inc
bound
es
and
fcomp
and
scas
dec
sub
fwait
mov
out
xchg
shr
add
(bad)
rcr
sub
adc
addr16
mov
push
jl
add
jnp
lahf
les
push
inc
add
jbe
mov
xchg
sbb
jl
jmp
mov
cmps
mov
mov
sub
out
pop
sahf
and
psllw
cs
rol
mov
xchg
or
sbb
movs
pusha
jl
hlt
aas
cmp
rol
dec
stos
arpl
and
pop
xor
leave
push
mov
and
outs
cmp
inc
or
push
pop
and
dec
jl
(bad)
(bad)
or
push
std
cmp
and
mov
addr16
adc
scas
scas
cld
mov
inc
xor
arpl
fwait
xor
add
add
pop
xchg
add
sbb
cmp
sbb
xor
lock
fdivr
adc
mov
mov
mov
jecxz
pop
sub
sub
mov
ret
jno
call
in
aas
inc
or
pop
dec
jo
adc
cmps
and
ret
adc
call
mov
mov
fidiv
rcr
loopne
xchg
mov
sub
xor
ret
pop
mov
add
das
jbe
xor
ret
aad
xchg
sbb
fwait
outs
iret
mov
xor
idiv
fsubr
ins
bound
mov
call
sub
add
aaa
pop
sbb
into
ins
repz
mov
push
cmp
mov
mov
lods
dec
mov
jbe
mov
imul
sub
shl
mov
not
test
sti
dec
lods
add
mov
sub
popf
fwait
xchg
retf
adc
and
addr16
jno
inc
mov
fbld
push
inc
push
int
fs
inc
out
mov
gs
(bad)
dec
or
sbb
fcomi
dec
ins
jo
ret
mov
adc
mov
fwait
mov
fcomp
int
bound
pop
js
dec
test
gs
fidiv
test
sbb
cmc
mov
or
nop
push
fstp
inc
cdq
loope
lahf
pop
out
mov
loopne
(bad)
arpl
mov
leave
int3
sahf
push
add
xchg
cdq
ffreep
xchg
dec
mov
xchg
push
jecxz
lds
ins
ins
sub
add
std
dec
xchg
sbb
pop
dec
test
or
fiadd
jg
mov
jae
cmp
inc
fs
clc
idiv
movs
jno
dec
jl
cmp
mov
shr
data16
fdivr
rcr
(bad)
or
pop
rol
mov
jmp
sbb
push
mov
and
setp
adc
mov
cli
adc
dec
add
xchg
inc
sub
adc
sti
or
mov
loope
mov
cmp
bound
push
adc
or
dec
ss
pop
mov
addr16
rcr
call
cmps
mov
mov
push
movs
lock
cmp
scas
jbe
and
fdivrp
call
jno
xor
movs
pushw
lods
sub
adc
test
dec
shl
and
xchg
mov
pop
rcr
push
jns
mov
mov
add
inc
jo
pushf
pop
in
lods
test
movs
fwait
push
ffreep
sbb
ja
inc
inc
push
ret
jb
int3
adc
jb
push
or
test
add
fild
adc
xchg
dec
stc
pushf
sub
inc
hlt
adc
xor
mov
and
inc
pop
jp
pop
push
mov
mov
mov
mov
sahf
dec
cmc
push
fstp
lods
data16
sub
pop
xor
mov
jae
aaa
dec
jg
sub
imul
add
(bad)
cmc
mov
push
inc
and
or
push
lods
jae
(bad)
pop
xor
aam
ror
fisttp
mov
inc
jnp
adc
ret
pop
or
ja
pop
imul
mov
xchg
push
imul
and
iret
fidivr
and
jo
movs
adc
inc
fldcw
call
test
cwde
nop
inc
ror
lock
retf
addr16
dec
add
and
dec
stos
adc
test
lock
test
retf
loop
jb
sti
mov
fmulp
xchg
mov
ficomp
pop
jmp
mov
mov
js
jb
leave
fnsave
repnz
pop
xor
shr
push
xor
lea
leave
sar
ja
sbb
dec
movs
outs
mov
add
pusha
fdivr
outs
sub
dec
(bad)
fwait
adc
fdivr
out
mov
jmp
in
jb
mov
mov
add
jns
inc
push
sar
sbb
int
into
mov
sbb
in
sbb
repz
push
xor
nop
aas
inc
xor
xchg
imul
icebp
lea
push
es
cld
push
jg
mov
pop
xchg
jp
cli
sub
push
inc
jp
in
int3
push
retfw
outs
xchg
ss
jnp
cli
call
ds
popa
cli
iret
loopne
lods
in
lahf
jg
in
cmp
mov
jae
jg
jmp
xchg
xchg
xchg
and
(bad)
jmp
pop
ret
imul
in
jne
out
lock
out
in
fadd
xor
stc
fmul
cwde
cmps
shr
and
pop
jecxz
cmp
sbb
loop
(bad)
inc
sti
push
aad
out
ins
dec
ja
inc
mov
hlt
std
js
dec
jecxz
test
std
mov
pop
cmps
bound
pop
in
push
mov
cmp
lods
scas
test
mov
mov
xor
mov
out
and
xchg
sbb
jg
mov
xchg
xor
rcr
add
cld
das
push
mov
sbb
imul
in
adc
push
mov
mov
push
cld
int3
sub
aad
pusha
jb
sbb
pop
into
test
in
out
sbb
movs
cdq
mov
mov
jg
xchg
sub
ret
mov
repnz
pop
stos
aad
(bad)
int3
cdq
shl
inc
push
inc
and
cmp
mov
and
cmp
pop
mov
int3
pop
hlt
call
stc
js
ret
push
das
ffreep
bound
or
sub
out
jnp
mov
out
pop
mov
aad
adc
or
mov
jbe
ficom
jns
sahf
adc
xchg
and
or
mov
xor
xchg
push
movs
mov
fnsave
mov
retf
int
and
pop
scas
dec
mov
popa
enter
outs
add
jnp
(bad)
pusha
xor
imul
jb
sbb
mov
out
xchg
adc
xor
stos
or
lock
aaa
pop
test
mov
aaa
bound
inc
fidivr
or
inc
in
dec
push
or
(bad)
sbb
add
push
int3
or
ss
push
sar
arpl
mov
shl
dec
fld
retf
mov
aam
lock
das
xor
test
ret
inc
push
cmp
into
bound
or
inc
mov
adc
mov
mov
gs
in
push
std
fimul
lahf
mov
add
jnp
mov
scas
rcl
add
ins
jp
dec
test
mov
dec
mov
sar
xor
mov
ror
jp
(bad)
jmp
popf
clc
push
fbstp
mov
jmp
enter
and
jle
mov
test
fst
cmc
mov
add
pop
jp
cld
enter
and
fwait
ss
in
stos
imul
mov
es
out
lds
mov
or
mov
mov
sub
push
jnp
and
lock
ret
cmps
add
sti
fisub
add
cmp
dec
xor
pop
lds
xor
cmp
push
sbb
jecxz
or
cs
push
pop
(bad)
and
enter
sbb
outs
rol
mov
mov
sbb
out
call
inc
psrlw
mov
je
aas
mov
in
cmc
fdivr
inc
test
adc
(bad)
stos
adc
ret
cmp
pop
xchg
loop
sbb
popf
or
hlt
lahf
adc
(bad)
cwde
mov
sub
cwde
add
ficom
cld
repnz
mov
xor
sbb
dec
jmp
fcmovnbe
inc
xchg
mov
sbb
add
mov
pop
mov
adc
loopne
inc
lds
ins
jmp
ret
sbb
or
sub
dec
or
stos
ret
fcom
jmp
loope
add
das
into
adc
stos
mov
cmps
jmp
cmps
push
(bad)
pop
inc
jmp
(bad)
fs
push
mul
ja
push
inc
clc
sub
iret
out
cmp
adc
retf
dec
mov
xchg
lods
inc
inc
mov
or
or
cs
inc
sub
inc
loope
push
in
dec
mov
mov
adc
xchg
pop
lea
xchg
mov
out
or
mov
mov
and
loop
cmp
mov
retf
retf
aas
cmp
add
test
pusha
and
jbe
mov
rcr
dec
retf
adc
ss
or
push
push
push
lds
cmp
(bad)
pop
jbe
(bad)
mov
test
sbb
bound
push
push
test
iret
bound
retf
es
icebp
jecxz
push
pop
paddq
push
cmps
jmp
cdq
inc
inc
pop
inc
pop
or
arpl
jo
stos
daa
pushf
jbe
stos
mov
mul
cmps
mov
adc
leave
stos
push
adc
inc
add
and
mov
cmps
les
inc
adc
je
mov
xor
sub
cmp
imul
hlt
pushf
inc
bound
fnstsw
mov
pop
xor
std
out
push
jbe
mov
dec
and
mov
inc
aas
lock
ficomp
mov
jno
lahf
mov
out
(bad)
leave
mov
mov
mov
cli
clc
nop
fsubp
clc
cmp
movs
jmp
js
xor
cli
lods
daa
adc
pop
mov
scas
pop
gs
ss
mov
arpl
popa
xchg
test
icebp
xor
jge
dec
lea
or
fmul
stc
push
test
cmp
das
iret
and
jmp
push
js
inc
fs
mov
test
cmps
inc
cmp
stos
sbb
sub
jg
pop
mov
or
pusha
xchg
dec
xor
cld
xor
test
jecxz
mov
adc
mov
push
fucomip
not
jmp
fisubr
shr
hlt
enter
pushf
xor
cmp
mov
(bad)
out
mov
add
pop
jle
retf
scas
lods
daa
adc
mov
mov
sub
ret
and
add
loope
in
clc
pushf
mov
lock
mov
mov
(bad)
mov
add
inc
sub
lods
mov
and
pop
call
call
arpl
adc
stos
mov
das
mov
dec
add
adc
push
sub
add
mov
dec
sbb
jge
aas
xor
int
mov
inc
(bad)
shl
aaa
mov
ds
dec
jo
xor
loope
es
ja
jbe
outs
jg
lea
mov
jmp
aad
push
jmp
out
cs
retf
dec
test
cmp
pop
pop
pop
pop
mov
std
mov
in
jmp
jbe
mov
repz
in
add
mov
cmps
inc
mov
mov
fst
ds
vunpcklps
sub
je
outs
jb
sti
jo
fs
ds
mov
pop
int3
into
jbe
test
test
inc
add
call
xchg
adc
stc
repnz
movs
stos
icebp
xchg
fs
jmp
mov
fmul
jbe
xchg
ins
repnz
cmps
popa
pusha
div
jecxz
and
inc
jl
fs
in
inc
jae
dec
cmp
sub
shl
out
mov
test
(bad)
out
jmp
mov
push
addr16
mov
xchg
in
push
push
test
mov
adc
idiv
or
scas
in
fcmovnu
sbb
jg
addr16
jle
push
mov
sub
mov
hlt
loop
loopne
(bad)
adc
sahf
mov
into
test
inc
jno
sbb
xchg
mov
cmps
setge
fimul
outs
repz
mov
(bad)
cmp
xchg
sahf
ins
xor
add
popa
repz
das
stc
fs
pop
jnp
fs
fmul
(bad)
push
adc
sbb
fcmovne
gs
dec
xchg
retf
(bad)
mov
pop
enter
ficom
xchg
jle
xchg
les
push
add
pop
jle
or
adc
inc
and
inc
push
xchg
pop
stc
icebp
add
push
call
test
fidivr
stc
adc
xchg
fwait
les
movups
fmul
xchg
xor
cmp
mov
jg
jmp
addr16
fld
rcl
jge
push
ret
mov
xor
rol
arpl
cmp
test
jbe
ror
dec
sub
pop
mov
xchg
xchg
out
(bad)
pushf
or
or
lock
xchg
into
and
fbstp
mov
jns
loope
lods
pushf
iret
out
push
popf
int
popa
add
inc
(bad)
or
fistp
fdiv
inc
imul
xchg
fwait
cwde
xchg
xor
xchg
in
inc
add
sub
mov
mov
xor
inc
pusha
js
shr
jo
arpl
add
std
mov
mov
pop
(bad)
faddp
frstor
nop
scas
sub
(bad)
push
mov
add
or
out
mov
push
jmp
sbb
mov
and
pop
sub
push
sub
in
xchg
inc
scas
repz
push
push
ret
pop
push
and
mov
cmp
iret
neg
push
jns
pop
mov
adc
movs
loopne
inc
stc
and
jne
cmps
inc
fidiv
les
outs
popf
inc
loopne
or
addr16
test
xchg
hlt
pop
idiv
pop
sbb
ds
push
cdq
xchg
xchg
jmp
icebp
mov
pop
repz
and
sahf
sti
mov
mov
jmp
push
leave
jb
mov
and
rcl
add
mov
div
ins
js
call
gs
or
jb
mov
sub
scas
fwait
js
push
inc
test
call
ret
jmp
adc
and
daa
pop
push
fs
adc
aad
rol
addr16
and
mov
mov
in
retf
dec
push
in
nop
or
and
cmp
hlt
mov
xchg
cmp
addr16
push
push
sahf
(bad)
sahf
push
clts
push
jmp
inc
or
push
dec
(bad)
lods
mov
icebp
js
iret
inc
dec
pop
aaa
ret
aam
cmc
int
mov
loop
xor
stc
mov
sub
cmp
mov
lods
ins
je
add
ja
xchg
adc
jno
mov
cmp
jno
pop
xchg
cld
mov
(bad)
sub
xchg
test
shr
dec
mov
sahf
rol
lods
jecxz
or
addr16
lock
add
dec
mov
in
and
fwait
cmps
xchg
xchg
and
inc
inc
aad
mov
jge
mov
push
enter
js
mov
test
add
out
dec
mov
sbb
add
pop
or
loop
imul
mov
xchg
stos
xor
(bad)
(bad)
pop
dec
push
or
stc
lock
dec
ja
scas
dec
lgs
push
jge
jmp
minps
repnz
mov
inc
xor
iret
xchg
rol
add
dec
enter
xlat
(bad)
mov
imul
daa
fcom
cld
inc
add
pop
sub
les
adc
lock
cmp
call
cmp
mov
dec
neg
xor
and
psubsb
js
ds
jmp
clc
or
pop
jae
les
js
cmp
mov
loope
jne
ja
sub
lea
rcr
(bad)
pop
push
push
aaa
adc
cmp
sbb
in
xchg
cmp
cwde
(bad)
fcomip
fcmovu
outs
fwait
mov
(bad)
mov
mov
iret
pop
jmp
or
aad
pop
aad
leave
cmps
imul
inc
add
jns
lods
xlat
mov
imul
cmp
clc
ins
or
adc
dec
int3
pushf
cwde
inc
in
pop
(bad)
jb
inc
shl
fmul
lds
outs
push
(bad)
adc
or
cwde
xor
fbstp
xchg
and
test
inc
dec
jg
mov
pop
sbb
jae
jae
xchg
imul
and
push
push
test
xchg
adc
sahf
nop
or
(bad)
and
test
push
cmp
inc
ds
cmps
cld
pusha
test
shl
repnz
pop
out
and
mov
out
daa
adc
cmp
int
mov
vpmulhuw
and
push
jnp
cmps
(bad)
mov
cmp
sbb
push
add
arpl
and
test
mov
mov
shl
mov
cmp
mov
pop
ins
adc
sbb
call
sahf
jns
pushw
adc
imul
and
fistp
stc
cmps
and
mov
add
or
mov
dec
lahf
repnz
mov
pop
test
in
xlat
ins
or
mov
push
les
movs
fstp
into
ds
fdiv
adc
(bad)
push
mov
pop
mov
pop
mov
(bad)
mov
fwait
lods
lods
sahf
adc
cmp
inc
bound
mov
scas
adc
cwde
add
cmps
jmp
test
div
pop
shl
xor
popf
fnstcw
fcomp
fmulp
rol
adc
xlat
sub
ror
mov
repnz
dec
or
div
mov
fmulp
imul
xor
gs
jnp
xchg
sub
lahf
shl
enter
test
jecxz
mov
je
inc
jmp
dec
sub
out
or
cmc
mov
out
jae
sbb
shl
xchg
xor
adc
sbb
push
test
sar
and
pop
xor
xchg
push
aam
shl
scas
bound
mov
jno
push
push
(bad)
adc
inc
(bad)
cmp
and
jp
jnp
pop
(bad)
jmp
setle
loopne
ins
push
fcom
jb
ins
out
sub
hlt
push
xchg
mov
aas
cmp
mov
aaa
in
dec
(bad)
int
mov
pusha
aam
adc
in
leave
scas
cmp
cmp
jne
pop
cmp
push
lods
dec
repnz
nop
or
fadd
(bad)
or
pop
call
jmp
mov
push
in
arpl
je
not
mov
cmp
add
mov
mov
scas
out
inc
pop
popa
adc
mov
and
dec
jmp
xchg
and
mov
jg
and
sub
mov
xchg
nop
push
lea
sub
repnz
or
mov
or
mov
or
aad
rcl
sti
and
mov
sahf
stc
sub
xor
mov
iret
aas
outs
out
lahf
mov
sub
jmp
cmp
push
ficomp
lods
pop
sub
inc
cli
add
js
outs
gs
ror
inc
and
ins
in
lahf
xchg
gs
ja
not
in
stos
mov
sub
movs
xlat
sub
stc
xchg
test
mov
xchg
stos
rol
xchg
add
das
cmps
paddd
mov
cmp
ins
mov
ins
sbb
mov
or
or
retf
dec
(bad)
and
pop
mov
rcr
nop
pop
adc
jae
paddsb
dec
pop
add
inc
sbb
mov
inc
cmp
scas
push
cmp
jp
movs
jmp
jl
movs
pop
or
and
jecxz
dec
pop
jb
scas
xlat
jae
rol
cmps
jo
fnstsw
mov
add
lea
mov
cs
push
int3
xchg
movs
sbb
movs
addr16
jle
sti
inc
mov
pop
loopne
fisubr
inc
mov
je
ret
pop
push
jmp
pop
sbb
(bad)
ss
and
vmread
retf
push
mov
cmp
mov
lods
xor
cmp
call
fidiv
lods
lods
inc
int
(bad)
cmp
or
loope
pop
in
pop
jnp
adc
push
(bad)
xchg
cmp
pusha
adc
movs
add
fsubrp
fbld
scas
packssdw
ror
clc
cmc
mov
pop
cwde
add
mov
sahf
or
inc
js
aad
fbstp
xchg
or
fmul
dec
sar
scas
and
es
sub
outs
xchg
retf
adc
mov
adc
push
add
cmp
mov
lahf
mov
push
jmp
stos
daa
mov
bound
out
(bad)
and
out
add
in
jo
lods
mov
ret
fs
xchg
loopne
xchg
pop
add
inc
loopne
adc
push
adc
outs
jp
popf
icebp
scas
fldcw
xor
mov
push
inc
adc
pushf
clc
icebp
push
mov
retf
adc
jg
pop
mov
dec
pop
test
dec
or
dec
leave
mov
add
lods
jmp
fnstcw
fcom
sub
jns
push
(bad)
repnz
lock
aaa
dec
mov
mov
std
push
pop
mov
adc
mov
test
mov
out
imul
lock
js
dec
mov
mov
mov
push
adc
adc
sti
push
div
sbb
hlt
pop
(bad)
out
daa
xchg
add
lods
fnclex
rcr
pop
adc
adc
sub
mov
stos
lock
push
push
xchg
stos
xchg
mov
push
jge
mov
mov
and
repz
std
and
sbb
pop
bound
push
mov
and
jno
fnstenv
retf
push
inc
aam
dec
sar
es
fimul
push
mov
int
addr16
inc
ins
lock
imul
ja
(bad)
inc
(bad)
js
xchg
imul
jae
pop
jecxz
(bad)
pop
inc
mov
ror
inc
sub
pushf
(bad)
nop
js
sbb
pop
lods
and
cwde
ret
lock
cmp
ret
cwde
lds
xor
xchg
call
in
das
mov
add
mov
in
inc
icebp
es
jns
std
fbstp
pusha
sbb
push
pop
cld
div
sub
jg
fistp
sbb
cmp
(bad)
push
mov
cmps
sbb
call
ret
jge
cmps
xor
adc
pop
xchg
push
inc
hlt
jne
cmp
or
nop
pop
mov
stc
jo
retf
in
aam
popa
mov
dec
out
mov
mov
mov
mov
in
lods
sbb
ficomp
test
and
mov
iret
push
sub
pusha
push
dec
pop
xor
and
out
das
lods
mov
jp
loop
or
push
push
scas
fist
push
ins
mov
or
push
jmp
push
xchg
(bad)
fld
aas
in
pop
xchg
sub
mov
push
adc
mov
mov
adc
and
stos
daa
int3
call
mov
aas
xchg
jo
jl
cmp
xchg
dec
add
dec
dec
pusha
cmp
pop
xor
and
cmp
pop
inc
test
fadd
sbb
fwait
sbb
mov
cmp
ss
cwde
sar
sub
xor
dec
pop
pop
inc
dec
out
int3
shl
out
and
push
xor
mov
inc
(bad)
pop
ds
xchg
mov
add
xor
int3
jb
call
inc
pop
les
push
xchg
das
ins
mul
ret
or
dec
and
pop
inc
mov
gs
retf
mov
add
ins
cmp
cmps
inc
shl
das
jg
and
cmp
or
enter
xor
push
push
push
inc
adc
lahf
stc
ror
xlat
jns
es
es
mov
mov
pop
ins
cmp
inc
(bad)
ficom
or
out
and
mov
xor
xchg
xchg
into
mov
and
sbb
sub
popa
sbb
movs
push
loop
add
ret
jmp
xor
push
xchg
mov
cmp
xchg
mov
sbb
adc
sub
push
loope
adc
cmp
js
sbb
cwde
std
shl
cs
jmp
cmp
outs
xor
ret
stc
dec
inc
sbb
or
retf
lods
in
add
std
lods
call
hlt
jg
cmp
loope
cmp
mov
cmp
mov
sbb
adc
pop
int3
sub
test
jge
(bad)
push
add
mov
jg
imul
(bad)
inc
mov
stos
jecxz
jp
retf
pusha
mov
sbb
sbb
or
cmp
push
mov
das
pop
mov
add
out
pop
xor
or
and
fild
lea
mov
push
mov
mov
jge
sbb
sahf
mov
sub
into
xchg
icebp
xchg
mov
out
or
outs
jno
mov
in
fisttp
sub
xor
push
stc
dec
addr16
jg
cmp
push
push
lahf
retf
bound
cmc
xor
xor
or
lock
(bad)
iret
int
in
inc
mov
rcl
retf
xchg
cmps
xchg
pop
shl
outs
lahf
sub
sub
int
(bad)
xchg
mov
int
loope
inc
movs
jmp
inc
fld
leave
cmp
in
aas
cmp
repnz
ret
jno
movs
jmp
xlat
mov
sub
retf
adc
jg
inc
shr
cmp
aas
out
sub
lods
xor
data16
ins
mov
or
sti
jmp
jo
pop
mov
mov
push
sub
lods
pop
mov
pop
test
mov
mov
cmp
shr
jg
jno
push
fld
mov
and
ficomp
and
stos
or
mov
(bad)
xlat
sub
inc
adc
xchg
mov
inc
movs
mov
dec
jb
mov
add
mov
mov
mov
iret
sub
push
jae
push
pop
aaa
dec
dec
sub
ret
stos
or
adc
test
jl
in
jmp
imul
fwait
sbb
push
xchg
ret
lahf
imul
xchg
or
sub
push
shl
mov
push
mov
retf
movs
pop
sbb
sbb
int
fst
dec
test
sar
jns
mov
xor
pop
icebp
xchg
mov
adc
popf
adc
sahf
stc
pushf
lahf
jbe
mov
inc
adc
inc
xor
bound
out
shl
les
bound
pop
mov
add
call
es
mov
push
test
push
jp
inc
fld
mov
sti
jmp
ret
pusha
pop
mov
in
xchg
mov
cmps
push
shl
sub
ins
or
clc
mov
inc
js
and
call
out
ror
sbb
mov
aam
gs
fisttp
iret
lods
or
cmp
cmp
call
ja
aam
mov
rol
push
pop
mov
mov
mov
mov
adc
cdq
pop
inc
lahf
adc
jge
jne
mov
icebp
mov
jecxz
popf
mov
xlat
jl
push
sub
push
call
test
scas
mov
pop
dec
jp
(bad)
call
out
cli
adc
pop
mov
call
rcl
pop
dec
cmps
push
mov
fwait
lahf
(bad)
xor
ins
xor
stos
jbe
adc
adc
icebp
push
call
repnz
pushf
pop
xor
retf
dec
cmc
mov
and
push
xchg
jp
out
xor
push
xchg
inc
xlat
(bad)
pop
lahf
stc
push
shr
mov
inc
loopne
mov
jb
jno
ins
sub
ds
movs
stc
cmp
iret
fsubr
fwait
add
fwait
out
xchg
jl
mov
cmp
and
push
jl
jge
dec
jmp
jnp
dec
push
imul
call
jmp
or
mov
cmc
scas
cmc
xchg
dec
jge
stc
leave
repnz
imul
and
js
(bad)
test
jbe
imul
test
pop
jae
inc
inc
xchg
inc
movs
xor
pop
push
scas
bound
addr16
xchg
mov
jmp
(bad)
sbb
fisub
aad
and
jae
push
ret
mov
lods
push
(bad)
push
lahf
mov
sbb
mov
push
fmul
sahf
aad
fdiv
fstp
or
or
and
pop
add
pop
mov
xchg
xchg
fidivr
sbb
xor
mov
popa
retf
push
xor
fisubr
dec
mov
es
loope
call
add
adc
scas
gs
sub
out
repz
jle
mov
xchg
cwde
push
loope
dec
(bad)
je
into
outs
xor
inc
inc
ds
push
loope
mov
idiv
cmp
cmps
cwde
das
test
cdq
call
pop
adc
cmp
jg
mov
popa
jb
(bad)
shl
cmp
sbb
xchg
or
inc
sub
jbe
call
dec
jae
mov
sar
sub
push
in
shr
mov
mov
cmps
jp
push
cmps
pop
data16
(bad)
aam
sti
gs
cmp
dec
nop
dec
inc
std
leave
adc
mov
pusha
xor
in
test
xchg
popa
call
adc
lods
push
or
loope
jno
adc
sbb
sbb
cs
jb
cs
sub
nop
mov
cdq
je
mov
mov
fistp
pop
cmp
lods
jle
jmp
mov
xchg
(bad)
in
xchg
je
fld
scas
sbb
dec
in
jae
jno
adc
pop
mov
and
das
fst
jnp
pushf
add
loope
into
xchg
push
clc
leave
sub
cld
jg
dec
add
sub
stos
xchg
inc
jge
test
aaa
xchg
cmps
adc
jb
jae
xchg
das
or
xor
jo
and
pop
add
jo
les
cmp
and
popf
into
jg
inc
jbe
cmp
mov
popa
mov
aam
imul
sub
or
vphadduwq
inc
mov
stos
mov
shl
and
mov
pop
xchg
(bad)
mov
ds
pop
fld
xchg
or
inc
add
jne
out
lds
mov
cwde
xchg
mul
mov
inc
cmp
xchg
xchg
fxch
pop
push
clc
inc
pop
lods
pusha
fsubr
jns
sti
lock
mov
out
sar
adc
idiv
cmc
ja
push
cmp
out
out
mov
mov
jbe
push
xor
shl
(bad)
push
jb
mov
ret
cmps
inc
push
xchg
or
ja
mov
pop
mov
push
arpl
sub
fyl2x
pop
adc
je
jb
call
add
pop
in
mov
pop
popf
in
mov
sbb
mov
aad
xor
mov
lods
ja
mov
ret
and
or
adc
lods
mov
cwde
mov
jecxz
out
cmp
push
rol
mov
xor
adc
xor
mov
shr
mov
pusha
mov
inc
pop
push
add
push
xchg
fs
test
xchg
jg
ja
icebp
adc
in
cmp
out
mov
dec
aad
(bad)
pop
xchg
add
push
js
mov
je
scas
push
xchg
lock
ins
ret
repnz
call
mov
(bad)
pop
jp
vpcomw
pop
cdq
(bad)
xor
ins
mov
call
push
pop
cmp
inc
pop
popa
in
or
(bad)
push
jmp
cmps
stos
bound
inc
pop
sub
push
dec
dec
mov
xlat
retf
cmp
into
cwde
mov
(bad)
call
inc
or
inc
mov
push
fmul
jl
cdq
add
and
scas
pop
and
and
xchg
xchg
push
jle
(bad)
cmc
fnsave
sti
stos
fst
mov
xchg
popa
mov
test
fbld
cmp
add
inc
push
mov
jae
mov
stos
out
cmp
leave
jl
xchg
out
sub
or
shr
and
js
xchg
repnz
lea
mov
pop
add
ficom
out
mov
sub
mov
arpl
pop
jmp
adc
mov
in
xor
ins
sbb
dec
pop
dec
add
std
adc
inc
mov
(bad)
mov
push
xchg
xor
inc
fs
pop
sub
or
js
lds
jnp
pop
sub
add
into
call
in
jne
mov
or
push
dec
das
and
dec
push
cmp
mov
fistp
and
or
ret
adc
or
ret
or
mov
cmps
jno
jno
or
loopne
and
mov
xor
cdq
jmp
scas
call
mov
mov
xchg
pop
sub
adc
ds
sub
add
mov
xchg
jno
xchg
mov
sub
sbb
ror
lea
cmps
addr16
adc
pop
push
jae
pop
dec
jmp
out
and
mov
ret
hlt
pop
or
jg
inc
sub
mov
mov
out
sub
or
mov
sti
cmp
aad
fcomp
lea
sub
jge
mov
mov
cmp
scas
xchg
bswap
jmp
pop
xchg
in
popa
fnsave
hlt
add
mov
out
or
xor
pop
xchg
push
add
push
daa
mov
pop
fwait
(bad)
aas
mov
jns
push
adc
jp
fist
ret
xchg
shl
dec
in
test
test
push
jb
dec
jne
lods
mov
repz
jle
(bad)
mov
add
mov
and
sbb
mov
cld
or
inc
call
jge
inc
push
clc
in
mov
int
pop
outs
lock
and
jmp
test
xlat
(bad)
mov
call
ror
fist
sub
ret
sbb
sar
xor
cmp
test
push
nop
daa
ins
mov
(bad)
push
ds
enter
enter
aas
cs
lods
xor
mov
into
arpl
aad
mov
push
ret
sti
sub
les
cmc
lock
adc
cmc
stos
sbb
out
cdq
mov
mov
xchg
sbb
in
out
mov
lea
xchg
and
cdq
jecxz
fwait
ins
aad
test
loop
adc
push
xchg
pop
adc
xchg
cmp
pop
fld
xchg
fs
int
push
push
inc
cmps
fisubr
ret
pop
or
fwait
xchg
mov
sbb
cmp
lock
es
pop
mov
xor
repz
push
nop
rcl
adc
mov
sbb
ins
mov
std
lahf
add
outs
inc
je
mov
int3
pop
stos
xchg
xor
pushf
test
fimul
and
mov
sub
mov
push
adc
push
cmps
fisub
movs
and
pop
imul
rol
mov
repz
(bad)
in
xchg
mov
cs
or
mov
xchg
jne
push
data16
retf
dec
mov
movs
lods
lock
ret
movs
mov
sbb
pop
sbb
add
pop
inc
outs
mov
xchg
fnstenv
jb
fwait
add
clc
stos
jge
jnp
mov
mov
cmp
cdq
repnz
inc
xor
push
ds
jbe
sub
gs
sub
sti
jae
dec
imul
loopne
jmp
xor
(bad)
jae
dec
and
cmc
jmp
sub
jp
repnz
sbb
sub
sbb
rcr
movs
adc
lock
xor
int
xchg
or
ror
lds
adc
std
repz
aad
call
mov
in
add
sub
adc
into
mov
popa
mov
lods
pop
push
jbe
repz
push
dec
cmc
pop
cdq
dec
mov
mov
test
or
shl
outs
jnp
xchg
repz
adc
adc
movs
sub
inc
out
in
in
test
out
xchg
scas
xor
and
inc
punpckhwd
ret
mov
or
xchg
addr16
je
lea
les
sar
jmp
les
jo
jge
scas
cmp
mov
retf
rol
aaa
xchg
dec
pop
fcomp
out
fptan
mov
sbb
fld
mov
push
sbb
mov
sbb
jns
daa
nop
stc
in
ds
in
inc
jne
adc
sar
ins
shr
scas
fs
inc
stos
std
push
leave
sbb
mov
lods
pop
nop
movs
imul
fimul
jecxz
mov
dec
cdq
adc
mov
je
fnsave
push
mov
imul
or
mov
sbb
ffree
mov
ss
dec
adc
cmp
xor
push
(bad)
idiv
fimul
push
mov
fadd
int
pop
test
mov
nop
imul
or
cmps
movs
dec
inc
dec
cmp
sahf
cmp
or
or
mov
mov
cmp
shl
movs
popa
xor
loopne
inc
shl
inc
popa
and
add
mov
jns
adc
adc
loopne
cli
mov
jge
repnz
in
aad
sbb
xchg
or
aas
or
bound
cld
xchg
push
repnz
jecxz
shr
loop
jg
pop
add
jae
jecxz
js
adc
xchg
scas
add
fs
adc
movs
cmp
clc
in
sbb
(bad)
pusha
mov
adc
fild
icebp
or
stos
lds
pusha
or
or
xchg
ins
scas
aam
xchg
inc
jmp
and
mov
ss
and
ja
mov
dec
sti
shl
data16
out
ror
std
jno
ins
adc
push
xchg
jno
mov
push
fs
push
mov
out
dec
xchg
ror
in
dec
cmc
push
jnp
add
jl
leave
jp
outs
add
mov
and
popf
adc
push
xor
push
adc
cmp
cli
fldcw
inc
enter
push
xor
mov
xchg
xchg
cmp
xor
inc
adc
xchg
dec
inc
xor
ins
jb
scas
int
pop
dec
mov
loope
mov
mov
xabort
xchg
scas
scas
test
xor
xchg
(bad)
js
inc
and
xor
leave
and
xchg
xchg
stos
jmp
or
push
xor
outs
jp
cmc
mov
das
sub
shr
adc
mov
into
dec
mov
stos
dec
in
pop
aam
xchg
bound
test
cmc
fldcw
pop
mov
and
in
sbb
and
or
lods
jo
cli
add
dec
stc
jnp
push
jg
stos
xor
mov
mov
push
mov
stos
call
mov
add
cmps
aaa
mov
inc
cs
(bad)
lock
daa
xor
dec
xchg
mov
sub
int
mov
cdq
movs
jne
or
daa
and
dec
push
arpl
inc
mov
and
and
push
scas
push
mov
jl
enter
and
or
icebp
fild
jl
shl
mov
dec
data16
adc
enter
push
jl
xchg
std
cld
and
daa
gs
pop
(bad)
sti
out
out
stos
or
cli
and
pusha
test
mov
data16
xchg
mov
and
sub
ds
out
retf
xor
mov
mov
ins
cmc
cmp
sar
addr16
daa
push
pop
dec
neg
cmp
jmp
sbb
pusha
pop
jecxz
push
icebp
in
ret
xchg
adc
lds
and
dec
and
sahf
sbb
adc
adc
adc
pop
fisubr
cmc
loopne
inc
ins
test
add
std
sub
iret
mov
push
mov
rcl
(bad)
xchg
sbb
xchg
inc
ins
sub
xor
pop
mov
iret
fbld
inc
xchg
jp
jno
xchg
pop
fidivr
and
sbb
mov
nop
(bad)
cwde
or
mov
xchg
xchg
or
inc
test
jmp
cwde
frstpm(287
jo
push
push
popf
aaa
iret
adc
dec
mov
cs
mov
push
retf
pop
icebp
fstp
lahf
ret
fadd
push
mov
mov
or
ficom
pusha
(bad)
aaa
(bad)
mov
xor
push
mov
mov
jg
pop
mov
jmp
push
mov
cwde
lahf
pop
or
or
inc
push
std
xchg
adc
mov
inc
cmps
pop
lahf
jne
fisubr
data16
ja
or
jle
dec
sti
mov
ins
je
cwde
movs
xchg
jno
ins
jb
pop
mov
into
xor
push
arpl
mov
mov
int
add
xor
out
bound
int3
fld
cmp
cmc
inc
inc
dec
mov
sub
fmul
jl
inc
loope
lock
es
fidiv
sbb
jmp
aas
jmp
mov
lahf
repnz
lods
dec
sub
or
mov
dec
rcl
push
mov
jmp
adc
ret
push
cmp
fisub
(bad)
outs
les
movs
adc
add
mov
mov
mov
arpl
(bad)
movs
sub
ds
adc
jmp
push
jge
pop
dec
push
je
mov
(bad)
hlt
dec
jbe
push
mov
lods
std
or
sub
mov
retf
nop
cmp
xchg
cmp
in
retf
cmp
das
sbb
cmp
call
enter
inc
int
and
or
push
cmp
das
cli
data16
clc
pop
cmp
push
fld
mov
push
sbb
dec
fisubr
push
(bad)
mov
cmp
neg
pop
iret
out
outs
sub
cmp
dec
xor
and
jae
dec
cli
les
push
cwde
outs
adc
aad
cmp
cmp
sub
adc
sub
xor
xor
xchg
imul
push
pop
sahf
ret
popa
enter
les
push
sub
push
cmps
jb
mov
jo
ins
pop
cmp
repz
push
mov
loope
fs
neg
jp
(bad)
sbb
jbe
call
dec
jnp
movs
add
push
xor
jecxz
mov
mov
adc
(bad)
cmp
shl
and
out
addr16
cmp
dec
ins
pop
jp
push
inc
and
shr
add
mov
retf
dec
jo
jbe
ins
rol
mov
imul
pop
mov
test
sbb
or
pop
into
inc
xchg
shr
test
aam
sti
sub
mov
mov
lea
pop
sbb
std
add
adc
xchg
into
dec
xchg
mov
cmp
push
dec
sub
push
les
call
jle
mov
push
adc
(bad)
lea
fidivr
jns
mov
sbb
dec
mov
xchg
fs
dec
test
mov
sub
sub
or
add
imul
sub
ror
mov
fwait
mov
call
jecxz
ret
pop
xor
mov
stos
xor
pop
aad
test
jle
pop
es
xchg
add
or
js
ins
jmp
jmp
xlat
aaa
jnp
daa
jle
mov
pop
push
retf
xor
dec
jne
test
add
aaa
ret
ror
loopne
aaa
stos
stos
aas
sub
pop
xor
test
popw
adc
in
lock
xchg
jp
cmp
pop
clc
ret
cmp
mov
dec
scas
dec
dec
test
push
aam
arpl
push
fwait
sub
inc
outs
xor
mov
icebp
sbb
mov
outs
inc
mov
enter
mov
sbb
int3
cs
lods
inc
inc
sub
mov
mov
dec
xor
push
cmp
sub
inc
imul
mov
mov
clc
pop
retf
out
cwde
cmp
movs
lods
mov
sbb
ins
jo
aad
pop
pop
push
jg
jno
jne
xchg
and
jnp
stc
scas
mov
pop
dec
push
add
sti
cmp
add
jp
enter
mov
popa
mov
push
sbb
out
or
inc
fidivr
fld
out
mov
mov
imul
les
popa
rol
xlat
pop
or
add
and
retf
shl
dec
adc
pop
inc
inc
push
xor
(bad)
and
jo
out
sub
push
sahf
mov
les
(bad)
sub
pmullw
adc
out
fcmovb
jns
cmp
xchg
sub
pushf
outs
cmp
sbb
inc
rol
cmps
xlat
jle
or
or
div
fidivr
jo
cli
pop
xchg
add
stos
fstp
inc
call
dec
pop
jmp
mov
out
xchg
loop
iret
shr
inc
dec
(bad)
mov
xor
xor
rcr
sbb
mov
adc
retf
pop
icebp
mov
je
or
pop
js
sbb
sub
sbb
test
js
sar
add
or
in
pop
jmp
test
outs
in
push
jnp
add
sub
xor
das
sub
cmp
xor
enter
test
(bad)
xor
pop
xchg
(bad)
daa
mul
mov
mov
adc
push
jb
mov
lds
push
inc
inc
add
loop
aaa
push
repz
lods
or
cmp
outs
inc
popf
add
jo
xchg
fidiv
pop
ds
inc
loope
ficomp
jmp
dec
dec
and
int
ins
sbb
test
or
mov
mov
sbb
sub
outs
xor
shr
xchg
mov
sub
ins
ins
ror
test
add
cmps
int
push
mov
scas
retf
push
shl
ret
xor
add
sti
pop
xchg
jecxz
mov
mov
mov
std
push
outs
or
pop
shl
and
(bad)
fstp
lds
cwde
into
sub
ret
mov
xchg
div
mov
loope
outs
inc
cmp
lahf
stos
and
adc
scas
int
pop
dec
and
sub
outs
test
add
rcl
cdq
sub
jp
push
test
push
mov
sahf
loop
das
inc
xchg
call
sbb
rol
(bad)
jle
aaa
int
inc
fld
ret
fsqrt
mov
movs
aaa
mov
inc
push
loop
test
add
je
and
stos
pushf
mov
inc
jbe
outs
call
sti
pop
lahf
call
and
into
xchg
retf
fisub
inc
fcomi
or
inc
sbb
pop
adc
xchg
imul
addr16
mov
cmp
retf
and
stos
sub
adc
movs
inc
pop
fwait
push
loopne
or
xchg
leave
inc
mov
cs
mov
mov
sar
pop
bound
movs
iret
(bad)
adc
jb
pop
mov
rcr
or
jg
mov
std
scas
lea
(bad)
adc
fwait
mov
mov
sub
jl
push
mov
pop
jp
inc
into
lods
stos
or
cmp
and
ins
mov
mov
aas
movs
dec
idiv
inc
mov
test
push
pop
inc
xlat
loop
popf
in
in
shr
cwde
sbb
rcl
cmps
jmp
lahf
pop
jecxz
xor
loop
push
pop
cmp
(bad)
fs
jmp
add
scas
cwde
xor
or
out
and
dec
cs
les
and
xlat
movs
add
(bad)
jae
xor
pop
mov
add
jo
cmc
sub
mov
retf
jae
pushf
ja
mov
jnp
jecxz
aas
sahf
pop
pop
push
xor
jae
push
fnstcw
addr16
loope
clc
xchg
mov
test
add
ja
mov
std
mov
xchg
fild
inc
aam
aad
rol
mov
scas
or
jl
mov
ins
and
call
push
dec
rol
pusha
xchg
and
jmp
js
sub
mov
inc
test
inc
jge
adc
push
dec
pop
mov
loope
jo
(bad)
dec
mov
(bad)
push
xor
scas
(bad)
cmc
jg
jecxz
mov
test
es
mov
enter
pop
push
mov
xchg
jle
jecxz
(bad)
jnp
retf
sbb
rcr
cli
mov
mov
push
dec
jmp
inc
dec
dec
inc
xor
cmps
sbb
jmp
sbb
or
sbb
jnp
sub
cs
pop
push
in
(bad)
ins
xor
pop
movs
nop
les
add
cmp
outs
inc
push
jp
add
js
jne
lds
imul
cld
sbb
push
and
pop
or
inc
(bad)
fimul
or
daa
sbb
fistp
mov
mov
sar
jbe
jge
pop
data16
jg
mov
cmps
ret
xor
daa
jmp
and
stc
or
fadd
mov
inc
outs
and
xor
sahf
ja
and
sbb
push
test
addr16
call
push
icebp
push
vfrczss
push
jge
mov
jle
inc
or
ins
or
add
cli
mov
pop
inc
add
inc
sar
lss
jg
fdivr
lahf
aaa
and
je
scas
jmp
dec
inc
arpl
cmp
push
mov
mov
mov
lods
ror
jge
mov
cmc
rcr
test
loope
(bad)
loope
pop
data16
jmp
mov
cwde
add
arpl
cs
and
add
stos
test
not
rol
cmps
mov
call
push
add
or
cmp
cmp
out
fwait
sub
adc
(bad)
int
int3
ins
movs
sbb
push
mov
push
cmc
rol
fwait
lods
loopne
add
sub
(bad)
fmul
cs
add
and
call
xor
inc
inc
inc
cmp
pop
sbb
xchg
inc
mov
fs
jbe
rol
test
cmp
ret
pop
mov
sub
xor
push
mov
jl
fdiv
(bad)
cmps
js
sbb
mov
inc
div
sar
pop
std
icebp
stos
xchg
ds
out
cmp
pop
call
xor
jge
retf
sbb
loop
cdq
sub
xchg
pushf
pop
push
xchg
cmp
add
mov
retf
scas
sub
xchg
xor
push
icebp
loope
std
pop
ret
xor
cmp
dec
add
xchg
jns
sbb
pop
cmp
rcr
pop
call
dec
jmp
scas
js
jbe
fcom
cmp
retf
dec
mov
xchg
mov
retf
cdq
aam
nop
arpl
or
add
test
xchg
cmp
in
arpl
jo
or
cli
adc
sbb
xor
inc
shr
push
lods
nop
mov
rcl
inc
dec
rcl
lods
and
mov
gs
movs
in
repz
aam
loopne
stc
pop
xchg
iret
fnstenv
adc
int
cmp
test
cmps
dec
int3
in
leave
lahf
xlat
nop
xor
out
mov
and
movs
shl
and
and
mov
and
cmp
ficomp
shr
outs
xlat
lods
inc
or
add
data16
sub
outs
mov
js
and
jle
add
ja
pop
sub
jp
jecxz
dec
and
sbb
std
and
cmp
dec
dec
push
call
fcompp
ss
dec
jno
pop
adc
shr
push
inc
leave
in
jecxz
aam
repz
add
es
into
pop
cmc
ret
jg
fst
(bad)
mov
(bad)
push
cmp
sbb
(bad)
jp
pop
inc
je
cmp
out
dec
xchg
add
hlt
jnp
mov
jae
inc
or
loopne
or
jmp
mov
test
out
jecxz
lds
pop
sbb
loopne
mov
pop
xchg
call
ins
cmp
dec
adc
test
or
add
jno
ds
iret
mov
xor
jo
cdq
cs
outs
mov
loopne
rcl
js
fdivp
lahf
aad
mov
cmps
add
rcl
inc
xor
jecxz
push
and
xchg
sub
adc
and
sbb
and
inc
xor
mov
loop
popf
into
pop
jne
je
pop
cli
and
repnz
pop
push
push
iret
or
push
or
or
and
ins
aaa
mov
int3
push
pop
out
or
aaa
retf
mov
out
jmp
cld
mov
xor
pop
loopne
int3
add
mov
rcr
in
cmp
fbld
mov
dec
ret
and
in
pop
sbb
dec
cmc
mov
sub
imul
pusha
iret
call
sahf
cs
push
call
sbb
pop
pop
and
push
sub
js
es
dec
(bad)
gs
scas
inc
sub
(bad)
xchg
aam
jmp
xchg
xchg
jmp
out
aam
and
(bad)
mov
leave
mov
inc
(bad)
or
psrlq
cmp
ficom
fs
hlt
mov
sar
or
or
loopne
adc
in
or
mov
call
retf
sbb
test
in
xchg
or
lahf
stos
lock
dec
pop
addr16
jmp
push
add
enter
jmp
pop
xchg
iret
jmp
mul
cmp
push
movs
inc
movs
mov
sub
mov
retf
jbe
je
cmp
mov
xchg
mov
mov
movs
jmp
xor
mov
test
mov
push
xchg
fiadd
lods
sahf
xlat
sub
push
add
push
jecxz
and
cmp
shl
rol
loopne
fxch
jo
xor
int3
dec
repz
sbb
jno
push
pop
fst
arpl
jge
rol
dec
sahf
xor
fistp
stos
or
(bad)
cli
xor
(bad)
sub
imul
mov
dec
mov
sub
push
ins
aam
mov
int3
sbb
and
mov
sub
xchg
mov
cmps
cmp
mov
ja
outs
stc
pop
cmp
jb
loopne
(bad)
fmul
ficomp
and
das
push
std
js
adc
push
lods
in
repnz
aaa
dec
and
inc
lahf
pop
sub
inc
imul
add
ret
cmp
cs
repz
into
stos
js
lock
call
xchg
out
pushf
sti
outs
ds
xor
inc
or
add
bound
mov
mov
cmp
mov
clc
mov
rcl
stc
sub
xor
inc
cmp
dec
or
mov
inc
inc
push
adc
fdivr
mov
movs
xchg
pop
pop
cmp
in
rcr
inc
xchg
mov
push
int3
cmp
rol
mov
pop
ret
dec
pop
add
sbb
idiv
push
mov
js
fild
dec
jmp
iret
js
mov
mov
fsubr
pushf
inc
dec
test
pop
(bad)
cs
inc
jmp
sbb
adc
push
xchg
and
and
leave
out
addr16
inc
pop
int
dec
adc
lods
add
pop
test
push
adc
fidivr
mov
fcom
xchg
test
cmc
cmp
sbb
(bad)
xchg
push
adc
icebp
cli
cwde
and
push
movaps
rcr
or
or
(bad)
lahf
jmp
pop
inc
adc
cdq
xor
xchg
push
mov
xchg
inc
and
lock
(bad)
sahf
gs
jp
scas
mov
or
mov
movs
jno
push
inc
inc
dec
icebp
call
add
jle
stos
xlat
mov
pop
lds
or
jp
lds
push
je
out
mov
popf
sub
fsub
pop
ja
push
jo
jecxz
in
inc
(bad)
jo
adc
dec
sub
adc
jb
pusha
adc
dec
and
lods
loopne
inc
jns
cmp
jl
mov
add
fmul
ins
xlat
xchg
bound
mov
mov
std
mov
add
mov
dec
fcom
mov
jno
sbb
xchg
jl
hlt
int
shr
adc
mov
enter
sub
sbb
mov
js
cmp
jecxz
push
dec
mov
enter
jne
cmp
xchg
imul
aas
push
in
or
jnp
mov
fwait
movs
aam
cdq
and
ja
pop
and
or
loope
sub
repz
in
mov
(bad)
js
cwde
adc
push
xchg
dec
xchg
into
or
shr
push
mov
or
or
dec
xor
and
xor
in
cmp
mov
fsubr
jmp
ja
mov
in
add
les
mov
mov
dec
mov
sub
adc
push
xchg
adc
invd
scas
ror
adc
jmp
pop
out
lods
or
(bad)
sbb
out
xor
lahf
icebp
(bad)
jle
fsubr
fistp
sub
in
sub
jbe
mov
mov
cld
mov
mov
aam
outs
mov
lds
stos
rdmsr
jnp
das
test
adc
cmp
cmp
addr16
sti
and
test
jmp
mov
xchg
int3
push
pop
mov
popa
scas
mov
nop
mov
lahf
jge
pushf
mov
mov
pushf
xor
je
dec
dec
inc
into
mov
(bad)
and
loope
push
out
sbb
add
push
test
nop
push
pop
push
stos
push
pop
add
cmp
bound
and
aas
mov
(bad)
hlt
mov
pop
and
fmul
inc
pop
mov
int
retf
sbb
mov
iret
imul
jl
(bad)
xchg
pop
adc
mov
aam
add
mov
or
fsub
mov
fisttp
mov
mov
enter
add
push
xchg
and
cmps
dec
push
sar
fisub
push
sub
movs
jae
outs
neg
inc
jmp
fstp
ss
fs
fwait
pop
ja
cmp
xor
je
cmp
sub
das
inc
in
out
mov
lea
mov
shr
in
jp
fistp
inc
das
mov
leave
xchg
xchg
aad
sub
std
pop
fwait
retf
mov
and
int3
int
in
int
dec
mov
xchg
(bad)
jle
aas
test
fwait
loope
fistp
or
inc
sub
mov
jbe
int3
pop
out
adc
mov
mov
fadd
cmp
push
xchg
inc
inc
jns
or
je
pop
call
bound
jle
cmps
je
sbb
outs
stc
shr
jbe
and
leave
xchg
(bad)
aad
lock
cmps
in
adc
dec
or
ins
dec
dec
jecxz
sbb
mov
inc
mov
or
jno
pop
call
jle
cmp
pushf
cs
outs
addr16
push
and
sbb
xor
push
inc
mov
pop
and
or
jmp
cld
(bad)
jmp
movs
std
scas
push
xor
jbe
cli
ins
pop
add
test
mov
aad
adc
and
test
loopne
(bad)
(bad)
ins
add
jns
and
std
push
mov
ins
jge
ret
jno
mov
fld
push
ins
add
(bad)
das
inc
jle
mov
adc
repnz
cli
int
dec
fwait
jb
mov
pop
or
aad
jne
push
and
fcmovnu
xchg
fstp
ds
ret
and
mov
xlat
mov
sub
into
mov
inc
xchg
test
mov
mov
jmp
jg
cmps
enter
adc
mov
pop
sbb
xchg
aam
adc
shl
mov
xchg
sbb
push
or
push
push
xor
xchg
and
adc
sbb
enter
xchg
pop
lea
popa
adc
push
mov
lods
les
mov
pop
(bad)
popa
cmp
and
cli
and
popf
push
test
fs
dec
mov
jmp
xchg
and
inc
outs
add
xor
cld
push
and
imul
sbb
dec
push
push
out
adc
sti
jae
stos
stos
dec
jmp
cdq
cmps
test
sub
cmp
test
mov
ss
(bad)
and
push
js
aad
sbb
ins
adc
cmps
xlat
mov
adc
icebp
in
xchg
jg
pop
js
(bad)
sbb
and
retf
outs
cmc
mov
mov
jno
mov
xchg
lea
xchg
push
fucomp
mov
xchg
(bad)
cmp
cmp
add
lea
jp
sub
imul
es
or
inc
push
mov
aad
add
xor
pop
mov
cmp
xor
sub
xchg
cwde
test
jle
sub
mov
pop
nop
dec
jne
sbb
in
mov
sub
popf
popa
mov
lods
pop
ja
fwait
iret
sbb
dec
or
mov
repnz
adc
sbb
pop
and
cmp
call
dec
ins
stos
lds
mov
dec
xchg
jnp
jo
adc
inc
test
jae
test
xor
push
scas
sahf
xchg
adc
je
rcl
jmp
std
out
lods
movs
cwde
cli
dec
js
or
sar
dec
or
gs
repnz
icebp
mov
loopne
fimul
mov
inc
and
mov
iret
jb
outs
and
sub
cmp
adc
fisttp
jno
or
fisttp
fild
jl
and
iret
stos
xor
mov
push
into
les
call
or
loope
mov
or
enter
shr
sti
xor
stos
xor
pushf
(bad)
adc
mov
cmp
or
push
mov
cld
mov
mov
xor
(bad)
lods
jne
(bad)
retf
movs
pop
push
cmp
lods
(bad)
(bad)
fidivr
mov
or
mov
cli
cmp
out
push
mov
(bad)
test
jne
loopne
int3
mov
mov
xchg
pop
sbb
adc
ja
es
and
mov
(bad)
cmp
inc
call
jmp
cdq
or
cmp
ss
sbb
push
fistp
cmp
arpl
push
loop
or
dec
pop
jg
push
dec
cmp
mov
test
popa
test
xor
imul
out
mov
imul
xlat
rdpmc
fdivr
xchg
mov
outs
daa
inc
cli
pushf
push
call
fs
or
mov
arpl
shl
cmp
sbb
or
fidiv
xlat
out
out
sub
gs
(bad)
outs
pop
stos
push
pop
xchg
push
js
push
ret
loop
dec
adc
scas
jp
test
inc
sub
sub
sti
pop
js
sub
lods
mov
sbb
xchg
mov
add
lods
leave
pop
out
inc
sbb
jg
mov
xchg
(bad)
out
mov
mov
and
aas
push
push
and
(bad)
or
out
pusha
jae
(bad)
sbb
jo
xchg
popf
jbe
aam
nop
cmp
and
pop
jne
mov
mov
daa
jo
push
sbb
cld
dec
sbb
out
mov
das
cmp
in
sbb
outs
addr16
xchg
fild
inc
lods
mov
ret
out
repz
jae
xor
push
inc
call
adc
mov
das
aaa
fldcw
out
jbe
push
arpl
sub
inc
in
mov
int
mov
cmp
xor
sar
imul
test
fidiv
lock
sbb
jmp
jmp
cmp
jbe
cmp
jg
add
movsx
jb
inc
ins
(bad)
test
shr
and
(bad)
aas
sub
lahf
sub
cmp
nop
das
int
das
inc
dec
sbb
sar
out
ret
leave
or
add
lock
jne
or
dec
mov
aam
lahf
adc
popfw
jmp
xlat
fbstp
aad
push
popa
js
lods
jp
mov
push
aaa
inc
out
arpl
push
push
adc
mov
scas
out
push
ror
(bad)
cli
sbb
fist
scas
cdq
clc
inc
xor
js
gs
xor
sahf
push
jno
jae
dec
ja
ins
or
jb
loopne
jnp
rcl
daa
es
inc
cmc
sti
fiadd
jge
in
inc
lea
cwde
mov
push
loope
push
pusha
xor
lods
lock
push
sub
pop
sub
fldl2e
test
xor
and
xlat
fbld
mov
xchg
pop
cmp
xchg
pop
in
jne
inc
or
adc
add
cli
out
popf
dec
xor
ret
ja
mov
(bad)
popa
mov
int
enter
das
out
cmp
jg
dec
jecxz
test
mov
aas
ss
ins
pop
test
inc
or
jo
rcl
(bad)
aad
adc
popf
pop
jae
lahf
mov
inc
adc
fwait
jmp
out
arpl
call
xchg
ins
in
sub
mov
loopne
mov
push
(bad)
dec
lock
clc
push
je
sbb
jae
adc
mov
mov
or
and
jbe
sbb
clc
addr16
call
dec
mov
ins
inc
jp
rol
inc
mov
sub
adc
and
or
popf
or
cmc
arpl
(bad)
aaa
call
(bad)
in
jl
movs
push
ds
arpl
pop
push
(bad)
gs
sub
push
sub
pop
cmp
lods
pushf
mov
pop
jg
cmc
mov
and
mov
frstor
pop
pushf
push
inc
cmp
mov
fsubr
jnp
dec
in
fwait
scas
daa
fimul
bound
int
inc
jecxz
inc
mov
jl
into
mov
scas
or
iret
jb
bound
sbb
pop
enter
fxam
ffree
fdivr
pop
das
call
lods
pop
clc
and
shr
dec
mov
sub
sub
fstp
mov
dec
stos
xor
xor
cmc
cmps
fist
shl
push
lock
push
test
push
out
in
mov
(bad)
pop
and
pop
xor
or
push
mov
xchg
lods
dec
es
add
mov
mov
mov
jmp
xchg
js
dec
stos
cmp
out
aas
xchg
add
cmp
jb
cmps
xchg
inc
sar
mov
jb
test
mov
fnsave
xor
push
cmp
sbb
lods
fcomp
mov
mov
pop
scas
jb
push
loopne
sbb
pavgb
mov
mov
jmp
dec
cmps
jle
or
xchg
inc
cmp
push
dec
jecxz
inc
int3
cmp
sub
add
outs
retf
xor
gs
cli
call
cs
lahf
xchg
imul
ret
pop
dec
push
xor
add
jl
mov
xlat
pop
out
ror
sahf
dec
or
fs
(bad)
jecxz
xchg
cmp
pop
mov
enter
popa
scas
into
imul
sar
repz
cmp
int
int3
fstp
ror
sbb
pop
mov
es
dec
in
invd
push
xlat
movs
outs
idiv
ja
dec
outs
rol
and
push
cmps
idiv
test
call
mov
out
jo
imul
mov
out
pusha
push
mov
gs
jl
imul
pushf
pop
jge
mov
enter
add
leave
pop
daa
loop
jle
mov
daa
out
or
int3
xchg
dec
inc
imul
inc
ror
mov
idiv
movs
enter
inc
pop
std
cmps
retf
shr
test
mov
sub
std
fisubr
pop
leave
jmp
add
int
in
in
imul
mov
mov
imul
std
js
sub
or
sahf
mov
jmp
pop
jmp
test
or
cli
mov
test
mov
or
push
cmp
rol
loope
pop
adc
add
es
xchg
mov
pop
stos
xchg
dec
and
dec
cmp
cwde
in
jo
mov
jg
dec
xchg
or
push
jmp
mov
jmp
mov
and
add
in
or
xchg
cmp
call
inc
stos
out
aam
sbb
pop
(bad)
sbb
xlat
call
jg
ds
das
es
lods
js
retf
dec
mov
and
fisttp
xchg
add
inc
(bad)
movs
jb
dec
cli
popf
je
ds
mov
cmp
sub
fidiv
stos
ret
or
xor
ror
movs
push
in
ror
stos
inc
retf
add
stos
sti
and
sar
jns
out
sbb
jae
and
lea
mov
adc
hlt
jmp
arpl
push
shr
xor
outs
xchg
cli
mov
sar
outs
popa
mov
bound
test
stc
outs
xor
enter
mov
sub
inc
xchg
(bad)
push
(bad)
jecxz
(bad)
lods
retf
add
push
xor
sti
jmp
movs
mov
jbe
sti
sub
repnz
fld
das
sub
sub
cmps
jbe
jb
(bad)
cmps
add
mov
pop
into
in
jne
inc
xchg
repnz
or
pop
pop
jb
lahf
dec
imul
out
popf
xchg
test
pop
bound
xchg
jae
mov
cmps
add
inc
lock
retf
neg
in
rep
mov
xchg
inc
fdivr
sub
inc
push
call
jno
shl
mov
enter
gs
xchg
enter
shl
xchg
cmp
call
xchg
cwde
fwait
sbb
loopne
ss
repnz
cmp
xor
test
jecxz
gs
dec
add
retf
mov
mov
test
inc
iret
pop
sub
out
jge
repz
xor
clc
pusha
mov
xchg
hlt
cmp
or
sbb
sbb
cmc
and
les
pop
and
inc
add
aad
test
ret
scas
in
out
jne
(bad)
xchg
retf
add
cmps
jo
cmp
push
ret
mov
clc
sbb
xchg
das
shr
lods
push
test
iret
popf
pop
or
mov
sti
(bad)
js
aam
dec
dec
or
or
add
push
iret
and
test
add
out
jmp
jle
sub
inc
std
adc
mov
loope
scas
cs
adc
fdiv
push
(bad)
cmps
test
int3
pop
popa
cdq
imul
jae
or
out
clc
test
xchg
push
jns
jnp
nop
sub
fsubr
pop
stos
es
mov
mov
sub
retf
hlt
retf
jl
push
mov
aaa
xchg
lea
inc
into
fisubr
jg
xchg
imul
rep
adc
outs
fimul
push
sub
mov
mov
mov
in
aad
adc
push
dec
inc
xor
aad
(bad)
cmp
xchg
test
cmps
pusha
es
push
xchg
retf
retf
push
loop
lods
into
(bad)
mov
ins
pop
and
stos
mov
jecxz
mov
retf
pop
imul
fbld
xchg
dec
ins
add
jns
popa
cli
fiadd
mov
imul
adc
push
inc
xor
test
inc
int3
fidivr
bound
mov
data16
hlt
gs
adc
je
mov
shr
pop
ins
es
cmp
mov
pop
cdq
(bad)
mov
(bad)
jne
sub
fucom
mov
mov
fucomp
outs
scas
inc
daa
scas
adc
in
into
cmc
pop
lock
mov
movs
mov
jge
fsubr
pop
cmp
inc
movs
xchg
dec
sbb
stc
mov
dec
sub
mul
xchg
test
and
inc
sub
jb
cmc
cmp
jo
sbb
daa
jae
cmp
jg
jo
xchg
(bad)
adc
add
test
test
xchg
gs
jl
fild
add
mov
inc
xor
mov
es
mov
or
ds
cmp
jnp
push
sbb
repz
sub
stos
push
xchg
in
or
test
push
push
xor
xor
dec
loope
jg
jno
cmp
imul
add
xor
dec
pop
ss
std
mov
mov
add
xor
pusha
out
mov
(bad)
neg
lahf
cdq
add
jbe
pop
test
scas
inc
mov
xor
mul
dec
jl
add
sbb
push
push
pop
jge
cli
das
pushf
popf
xor
xor
and
push
arpl
and
adc
pop
pop
movs
push
lea
cmc
loopne
sub
or
scas
push
out
add
call
in
sbb
cmps
pushf
xor
aam
mov
cmp
cmp
lahf
inc
mov
mov
(bad)
dec
push
inc
mov
mov
mov
pop
aam
cmp
mov
test
xchg
push
mov
leave
std
push
movs
or
dec
hlt
fcom
pop
or
ja
dec
sub
call
fdiv
xchg
out
arpl
and
lahf
cdq
mov
or
scas
pop
or
sbb
sqrtps
scas
push
in
pop
les
xchg
fist
cdq
adc
jmp
(bad)
pop
not
repnz
retf
sbb
data16
loope
aam
xor
dec
mov
ds
dec
jo
jecxz
int3
dec
dec
nop
xor
shr
std
push
cmp
add
ins
out
nop
mov
push
cld
lock
enter
cmp
cdq
imul
xor
push
add
push
scas
bound
cmp
add
sbb
sub
int
and
add
jle
adc
repnz
pushf
jbe
mov
sbb
mov
call
mov
int3
or
(bad)
cmp
jne
lahf
jo
dec
push
nop
mov
ss
fidiv
dec
xchg
push
ins
jb
call
aaa
cmp
stos
mov
mov
in
jle
mov
cmp
outs
bt
idiv
aaa
mov
mov
mov
push
or
mov
jb
ret
xchg
pop
shl
jnp
push
dec
aad
push
pop
sbb
xchg
add
loopne
jmp
hlt
fstp
pop
pop
(bad)
jbe
inc
ror
push
mov
xlat
mov
cmp
call
sbb
mov
cmp
and
mov
lds
popf
push
out
push
inc
fidiv
aaa
xchg
cmps
xor
push
mov
into
retfw
push
push
jbe
adc
cmp
push
movs
pop
arpl
sbb
and
rcr
and
dec
ror
xchg
ds
xor
pusha
jl
inc
add
or
lea
iret
pop
push
pop
js
sub
cld
loopne
sbb
gs
aas
xchg
ret
sbb
or
into
ret
std
leave
or
repnz
test
push
jne
test
(bad)
cmp
sbb
push
dec
aam
push
mov
repnz
jno
cmp
bound
retf
mov
aam
outs
push
cmp
mov
loope
mov
daa
add
int
adc
adc
sub
dec
fisubr
(bad)
mov
dec
push
jmp
sbb
cmc
mov
ret
push
push
js
ret
ja
(bad)
pushf
push
test
int
push
idiv
or
aas
rcl
stc
imul
imul
or
jne
bswap
test
scas
xor
jl
sar
mov
aad
and
add
adc
pop
mov
mov
xor
dec
xchg
xchg
gs
jo
mov
clc
mov
cmp
or
adc
adc
adc
inc
les
mov
xchg
dec
icebp
mov
push
(bad)
xor
inc
imul
(bad)
pop
test
pop
out
push
pop
scas
and
cmps
and
mov
pop
sbb
stc
sti
pop
push
not
and
dec
and
push
and
fisttp
or
jne
jmp
sbb
sub
cmp
xchg
iret
daa
add
lea
xor
mov
cs
push
add
dec
pop
xor
jecxz
rol
dec
inc
cdq
or
mov
test
pop
(bad)
xor
sub
adc
jbe
mov
test
cmp
push
cli
mov
add
lahf
or
jae
mov
test
pop
sahf
mov
dec
inc
data16
lods
(bad)
test
inc
sbb
mov
dec
ja
xchg
dec
fsubr
mov
xchg
jg
cmp
inc
xor
or
les
and
sbb
mov
cmp
add
mov
mov
push
push
cmps
test
or
inc
inc
div
je
aad
fidivr
aas
outs
cdq
dec
and
inc
popa
retf
call
aam
out
(bad)
hlt
hlt
inc
ins
or
cmp
iret
jge
std
aad
or
or
mov
clc
push
lea
push
mov
xchg
icebp
cmp
xchg
sbb
test
push
scas
ja
imul
neg
cmc
int3
mov
aam
mov
sbb
hlt
test
jbe
enter
push
sbb
xchg
in
sub
cmp
xchg
std
jnp
lahf
adc
and
xchg
add
jmp
jmp
jl
retf
mov
ficom
xchg
dec
adc
in
dec
iret
clc
or
outs
stc
cmp
inc
sub
push
dec
jb
sbb
cmp
aas
jbe
mov
(bad)
and
aam
pop
adc
pop
inc
push
pop
(bad)
mov
sub
shr
dec
cmp
pop
loope
xor
aad
fst
int
xor
aam
stos
pop
lods
sbb
mov
enter
mov
xor
mov
sub
pop
leave
test
aas
dec
cld
fs
push
and
pop
fdiv
jl
push
add
sti
gs
imul
pop
jle
fbstp
mov
xchg
jnp
in
dec
in
sub
push
push
sub
xchg
or
xor
stc
push
nop
and
test
sar
(bad)
sbb
dec
imul
inc
pusha
dec
cwde
call
dec
je
scas
loope
movs
jae
fwait
pop
mov
xchg
xor
dec
sbb
dec
sar
aam
cmp
push
pop
or
outs
jno
mov
fwait
call
pop
mov
mov
fcom
and
xchg
xor
xchg
jae
xchg
cmp
adc
test
mov
sbb
jae
cmp
loopne
sub
adc
mov
push
popf
das
cmp
retf
xor
adc
add
das
push
cmp
leave
ret
and
or
cmps
mov
xor
xchg
pushf
inc
adc
or
xor
mov
fldenv
xor
pop
push
jl
jne
xchg
jecxz
fstp
mov
in
jns
cmp
loop
fcom
adc
jne
ss
push
cmp
jmp
mov
sahf
daa
shl
(bad)
jno
loopne
sub
mov
mov
movs
xchg
dec
jno
fcom
test
das
jmp
das
sub
fisttp
sub
add
sub
test
cmp
xchg
and
(bad)
ins
test
pop
ins
dec
cli
and
dec
fs
jmp
jne
call
push
inc
and
cmps
shr
pop
and
(bad)
mov
sub
stos
cdq
movs
inc
cmp
sub
push
ins
inc
jge
mov
(bad)
sbb
xor
ins
sbb
dec
sahf
(bad)
xchg
movs
es
(bad)
xlat
daa
mov
lea
mov
jmp
stc
mov
mov
inc
cmp
lods
sbb
data16
cmps
add
fild
stos
stc
sub
cmps
jg
sub
enter
mov
mov
int
loope
cdq
mov
add
cld
test
jne
or
mov
dec
push
int
es
jge
jl
adc
xor
mov
std
dec
hlt
adc
test
call
xchg
push
loopne
mov
in
jnp
mov
push
pop
mov
push
xchg
push
call
fsub
xchg
jp
dec
xchg
adc
and
(bad)
mov
or
mov
imul
pop
pop
cmp
imul
add
inc
adc
movs
mov
ja
dec
push
mov
xchg
in
into
lahf
sahf
(bad)
(bad)
mov
leave
mov
cmp
cmps
ret
push
fs
cmps
or
add
inc
retf
sbb
arpl
add
push
sbb
repz
and
jne
xor
push
nop
ja
and
xor
pop
mov
cmc
mov
fsubp
aaa
movs
jne
stos
mov
pop
in
push
sahf
cwde
add
arpl
enter
add
pop
mov
in
sub
imul
xchg
cmp
cmps
(bad)
scas
pop
push
packsswb
jb
mov
xor
jmp
pop
lods
jae
pop
or
hlt
fcom
pop
xor
dec
ficomp
and
adc
mov
xchg
shl
adc
mov
or
fidivr
arpl
cmp
(bad)
iret
push
je
rcr
daa
dec
out
push
or
xchg
mov
sti
mov
push
mov
pop
cmp
sub
add
les
rep
nop
sbb
lods
jb
sbb
mov
les
add
adc
outs
loopne
mov
aas
je
push
mov
lea
mov
imul
xchg
loopne
into
int
xchg
(bad)
xchg
adc
mov
pushf
mov
enter
iret
scas
dec
js
mov
xchg
lock
stc
add
sub
sub
aas
dec
mov
out
ror
stos
xor
mov
mov
in
pusha
pop
xor
push
clc
rol
scas
loope
or
(bad)
call
xchg
ins
sbb
fcmovu
call
cmp
test
cmp
inc
rcl
jl
pop
daa
pop
add
es
jle
jb
push
inc
mov
rol
ds
bnd
sub
outs
(bad)
xor
add
out
cmps
sub
jl
add
lea
mov
in
cmps
mov
jnp
in
cmp
dec
and
rcl
jno
arpl
inc
lods
mov
and
movs
(bad)
inc
mov
jae
xchg
push
leave
push
lahf
idiv
imul
test
(bad)
cmps
sbb
pop
rol
das
stos
test
clc
popa
fild
imul
ds
cmc
test
ret
ror
out
xor
pop
out
loope
mov
outs
out
adc
(bad)
xchg
stos
daa
daa
and
outs
jge
xchg
pop
ret
push
ret
sub
pop
xor
loop
add
pop
retf
cwde
cwde
xor
xchg
mov
inc
out
cmp
(bad)
or
push
(bad)
ret
mov
sbb
dec
cmp
movs
imul
adc
rol
out
pop
mov
dec
or
fsubr
jae
daa
mov
jb
jge
mov
xchg
mov
xchg
jns
ret
lds
pusha
in
cld
mov
add
shr
and
imul
or
popf
fldcw
and
xchg
shl
push
icebp
out
test
jp
cld
jge
shl
xor
ds
pminub
popa
fsub
and
cmc
sbb
mov
or
pop
fwait
sbb
adc
js
call
mov
mov
or
fsub
xor
dec
pop
jle
js
inc
adc
ret
adc
cmp
cld
ror
inc
ret
xor
cmp
pushf
or
pop
pop
int
mov
push
xchg
scas
push
adc
push
in
inc
mov
inc
mov
ds
test
lds
mov
xchg
push
lahf
das
div
div
bound
xchg
mov
jl
jo
dec
shl
cmp
ins
dec
in
inc
or
xchg
and
outs
int3
test
out
jecxz
and
je
mov
imul
shl
(bad)
jo
sub
inc
xchg
jnp
xchg
out
inc
ja
push
adc
cwde
arpl
xchg
pop
sahf
ret
aas
jge
sbb
xor
cmp
jl
loop
in
adc
push
sbb
cmp
repz
xchg
mov
inc
mov
mov
test
test
push
lods
mov
sub
aaa
leave
in
sti
cmp
fcom
mov
ret
mov
mov
or
adc
add
daa
cmp
das
retf
loopne
sbb
fcmove
ins
mov
pop
sub
jle
mov
aad
mov
inc
rcr
fwait
push
mov
lahf
jle
push
dec
fcomp
stos
sub
icebp
pushf
pop
cwde
loopne
cli
jecxz
pop
aam
mov
inc
loop
add
fcom
std
pop
jmp
push
mov
cmovle
jmp
jbe
imul
sbb
add
or
test
loop
dec
das
jmp
jg
jb
(bad)
mov
(bad)
xchg
sti
and
push
shl
(bad)
xor
stos
xchg
repnz
pop
inc
mov
fnsave
outs
add
mov
ins
inc
adc
(bad)
xchg
iret
dec
cmp
aaa
(bad)
jmp
pop
call
push
mov
into
sub
xlat
mov
(bad)
and
test
add
pop
jle
retf
movs
jl
pop
sti
(bad)
out
jbe
dec
bound
dec
inc
and
sti
adc
or
jbe
cmps
jp
aaa
imul
lea
test
dec
ds
pop
cmp
inc
sbb
inc
jecxz
jle
xchg
(bad)
dec
seta
jge
xchg
jmp
push
pop
sbb
aas
mov
scas
repnz
test
lods
xchg
lods
cli
idiv
repz
lea
xchg
mov
or
(bad)
aaa
cdq
je
lds
sub
cld
rcr
push
punpcklbw
addr16
mov
je
cmps
mov
loop
or
adc
cmps
dec
pop
leave
leave
test
addr16
and
shl
mov
mov
cmp
adc
aas
mov
scas
jmp
and
adc
loopne
xchg
pop
mov
mov
int3
jmp
xor
int3
pop
cmps
add
and
xor
pop
(bad)
or
fwait
loope
or
leave
adc
xor
mov
iret
push
lods
retf
mov
mov
sub
cmc
adc
mov
or
call
mov
shr
sbb
mov
mov
jmp
(bad)
mov
retf
movs
aad
aaa
aaa
dec
test
sti
xchg
out
fmul
scas
mov
push
lahf
(bad)
cmp
pop
add
scas
jmp
mov
rcr
jb
mov
cmp
cmp
sub
bnd
or
rol
cmp
cwde
jns
sar
pop
mov
jg
mov
pusha
pop
jae
shl
(bad)
ss
dec
bnd
cmp
adc
hlt
and
add
sbb
adc
ret
(bad)
fild
test
push
push
add
pop
sbb
mov
popa
addr16
or
aas
ja
mov
sub
inc
xchg
add
je
retf
(bad)
and
imul
jp
enter
jbe
mov
and
xor
push
les
call
ret
dec
jo
xor
add
lds
cmp
(bad)
or
jge
out
hlt
fist
test
lea
pop
data16
xchg
ds
push
push
and
and
repnz
pusha
imul
ficom
jge
shl
lods
or
cmp
lock
jle
out
stos
iret
add
lea
fmulp
std
fsub
push
pop
rcr
aaa
outs
int
push
push
push
sbb
mov
lock
outs
xor
(bad)
out
adc
mov
push
movs
enter
and
lods
pop
sbb
aaa
push
test
add
xchg
push
imul
mov
cmc
sub
jb
push
sub
outs
sub
out
mov
mov
jge
cmp
stos
inc
mov
xor
pop
cmc
call
repnz
outs
cmp
xchg
gs
sbb
lds
test
dec
ins
les
mov
scas
loopne
cmp
pop
scas
mov
cmp
in
inc
mov
test
lahf
pop
jno
lock
int
(bad)
scas
stos
inc
ja
cmp
and
adc
or
imul
aad
sub
push
fist
cmpps
aad
jp
sbb
loop
jl
js
xchg
popa
and
xchg
inc
push
shl
iret
hlt
and
mov
cmp
shl
inc
iret
or
cwde
enter
inc
into
pop
push
leave
mov
jp
out
ja
push
sub
sahf
mov
scas
mov
mov
jmp
add
in
cmp
add
imul
mov
jns
cli
mov
sub
(bad)
dec
addr16
cmp
and
jnp
push
jne
popf
jns
mov
fiadd
jno
or
out
add
aaa
aaa
or
call
je
cmps
(bad)
(bad)
jmp
cmp
dec
sti
inc
lea
movs
pop
in
out
es
mov
test
jp
out
adc
ret
scas
xor
cmp
out
xor
xor
push
jmp
cmps
lods
lods
aad
inc
jns
adc
mov
rcl
int3
shl
inc
push
fdivr
jl
push
test
test
sub
or
push
cmp
arpl
es
sar
fs
xchg
add
test
mov
jg
push
les
fwait
mov
sub
inc
scas
inc
xor
add
jns
cdq
cwde
sbb
dec
adc
add
push
push
pop
mov
ror
test
pop
aaa
ficom
jge
xor
fsub
lds
and
push
mov
jno
nop
adc
movs
test
test
les
ror
gs
dec
retf
sub
inc
into
shl
test
xchg
sub
xchg
push
rol
push
sub
cmc
ja
dec
fsubr
test
test
jnp
dec
push
js
lahf
add
lahf
call
mov
dec
adc
leave
fidivr
cmp
dec
mov
(bad)
inc
jmp
xor
mov
fwait
jecxz
ret
leave
scas
in
(bad)
ins
mov
mov
ror
sbb
mov
cmp
mov
mov
and
ror
mov
and
push
inc
cdq
fsubr
(bad)
out
add
sbb
jg
push
xchg
sub
add
xor
mov
mov
sbb
scas
fcomp
xchg
lea
rol
fsub
inc
mov
test
inc
mov
and
pushf
cmp
xchg
jp
fistp
mov
add
adc
loopne
leave
jne
call
sbb
mov
add
push
cld
or
jnp
sbb
push
shr
bound
mov
and
mov
pop
xor
imul
push
mov
xor
rol
ss
loop
jecxz
jno
pop
push
adc
inc
mov
dec
add
push
adc
cmp
dec
clc
int
cdq
xchg
aaa
cmp
sar
imul
shrd
je
cmp
xor
shr
xor
mov
out
test
jo
sub
push
sahf
repz
mov
inc
cli
mov
test
dec
cmp
into
jb
jg
pop
or
inc
xlat
repnz
xchg
arpl
in
stos
cmp
push
mov
pop
push
(bad)
les
inc
add
jmp
mov
imul
inc
out
mov
and
xor
jmp
pop
stos
cli
ins
jae
and
pop
fiadd
inc
jnp
mov
out
cmp
fwait
sbb
les
jmp
inc
dec
je
pop
std
in
fild
xor
jnp
jmp
pop
jns
jmp
cmps
push
fsub
into
cmp
xchg
call
xchg
cmp
sti
(bad)
inc
sbb
ror
sbb
shl
xlat
sub
rcr
sahf
adc
jecxz
and
das
mov
add
inc
mov
jg
or
ffree
cmp
and
add
mov
mov
mov
sbb
je
mov
out
adc
int
scas
xor
js
push
inc
and
pop
cmp
daa
loop
or
and
enter
movs
lods
lock
stc
(bad)
fs
enter
lahf
mov
and
mov
leave
mov
cmp
mov
mov
scas
adc
ins
push
daa
cwde
bound
lods
mov
push
cmps
leave
and
cmps
pop
aaa
popa
and
sti
pop
xchg
jno
push
adc
xor
xchg
mov
cmp
stos
lock
retf
pusha
lea
out
mov
outs
(bad)
mov
sbb
push
add
push
lea
ja
xor
lods
fisub
les
stos
mov
fs
cmps
and
fidiv
xchg
add
in
test
std
(bad)
aad
hlt
push
repnz
inc
xchg
(bad)
push
fldcw
pushw
aam
mov
lods
call
js
fwait
scas
test
ss
nop
std
data16
pop
mov
fcmovnbe
sub
push
pop
das
xor
xbegin
icebp
pop
pop
and
xchg
fnstsw
adc
xor
iret
ins
mov
mov
fwait
jmp
push
ds
cmp
adc
loopne
cmps
jge
in
adc
jns
int
scas
shr
xchg
mov
and
sub
das
xchg
mov
loope
jne
rcl
rol
out
(bad)
xchg
cmp
(bad)
pop
loopne
stos
sbb
jg
xor
push
sbb
push
and
(bad)
es
sbb
xchg
or
ret
sub
loop
mov
mov
sub
cmp
sti
sub
inc
(bad)
es
pushw
add
repnz
xchg
dec
xlat
inc
jle
retf
push
ror
sub
arpl
loope
jl
xor
or
(bad)
sbb
jo
mov
cs
dec
and
jo
xor
sub
and
stos
repnz
das
inc
lods
(bad)
(bad)
xchg
dec
dec
enter
cmp
and
test
inc
xchg
test
ror
push
cmps
cmp
imul
and
out
xchg
in
sbb
mov
loop
adc
pop
sub
mov
enter
aam
bound
mov
mov
pop
mov
(bad)
das
push
(bad)
fbstp
push
xlat
or
sub
rol
push
fwait
xchg
adc
xchg
cmp
xlat
and
push
inc
push
pop
lock
jo
out
pop
sti
aas
sub
(bad)
jnp
jle
adc
stc
mov
ret
cmp
addr16
push
xchg
and
and
cdq
pop
movs
adc
(bad)
add
stc
mov
inc
(bad)
xor
mov
cmp
in
pop
jl
adc
jle
lds
ret
cmp
jmp
push
inc
mov
rcl
clc
pop
cwde
adc
pop
inc
mov
das
xchg
push
mov
pop
cmp
xchg
and
or
pop
push
and
xchg
push
pop
lds
and
dec
ja
mov
ins
ins
xor
psraw
je
pop
or
fimul
lds
(bad)
out
inc
push
mov
mov
js
pop
fnsave
pop
int3
gs
inc
push
stos
shl
cmp
xor
push
test
sub
xor
cs
cmp
ret
mov
inc
stos
sbb
clc
mov
dec
fstp
loope
inc
cmp
xchg
mov
or
pop
fst
dec
out
adc
out
and
mov
or
mov
dec
or
cmp
(bad)
cmp
pop
jbe
adc
pop
mov
add
mov
push
inc
mov
add
outs
dec
test
int3
or
popf
pushf
push
xor
ins
(bad)
stos
push
add
pop
ret
ins
sub
or
pop
lahf
das
call
neg
ficom
xchg
mov
rol
in
mov
scas
pop
ror
sbb
fiadd
mov
inc
inc
stos
pusha
daa
cwde
repnz
inc
mov
push
pop
fcom
xchg
or
cmp
adc
repz
jmp
loop
sti
fst
mov
xor
inc
fld
cld
scas
pop
mov
mov
xchg
xor
jp
and
out
or
sbb
dec
inc
mov
sbb
or
and
mov
mov
jg
push
lods
push
xchg
mov
cmp
mov
or
xchg
jb
sbb
std
addr16
scas
pop
sbb
dec
mov
inc
mov
enter
pop
inc
popf
sbb
out
add
stos
data16
into
(bad)
and
into
adc
xchg
mov
inc
cmp
test
push
or
mov
lahf
imul
xor
retf
sub
mov
add
cmp
and
js
lods
(bad)
outs
or
aam
add
hlt
cmp
sar
out
or
popa
mov
fbld
rcr
jecxz
mov
cmp
ss
inc
aam
jp
cld
xchg
or
shl
popa
lahf
mov
repz
in
jo
and
inc
das
jp
push
dec
jp
out
lea
fxch
adc
mov
jmp
dec
call
fsub
jge
and
int
outs
gs
nop
mov
push
dec
in
jns
adc
xchg
sahf
ja
cmp
cld
or
cmps
mov
aam
mov
sub
dec
pop
mov
test
jne
dec
pop
adc
jl
into
mov
(bad)
mov
add
addr16
pop
movs
inc
sbb
test
mov
mov
popa
(bad)
pop
mov
xor
leave
mov
dec
fcom
call
ss
cwde
xchg
jp
sti
nop
popf
inc
jp
leave
jmp
xlat
nop
les
aam
and
mov
je
js
cmp
clc
retf
cld
jecxz
(bad)
scas
xor
fdiv
lock
test
ins
mov
jle
and
std
cmps
sub
enter
sub
and
scas
push
adc
icebp
jns
jae
fcomp
add
dec
inc
ret
add
adc
ror
ss
(bad)
jbe
ja
add
ret
push
xchg
rdpmc
sbb
pop
into
mov
pop
pop
mov
cmp
adc
hlt
lods
icebp
out
fsubr
jno
int
hlt
ins
in
outs
mov
mov
or
mov
jle
jl
xor
(bad)
pushf
sbb
push
add
int3
pushf
jns
out
add
pop
or
xor
and
sbb
push
lods
retf
ss
or
jae
mov
fdivr
push
scas
int
gs
scas
jecxz
jmp
retf
cmp
add
je
imul
ss
mov
mov
or
sbb
mov
jno
stos
push
gs
test
imul
pop
mov
sub
push
dec
mov
inc
or
pop
clc
imul
mov
sub
jecxz
cmp
inc
xor
xlat
test
call
(bad)
ja
and
mov
icebp
ja
(bad)
das
sar
lahf
jb
sub
test
iret
inc
pop
mov
sar
nop
add
xor
js
in
dec
movs
xchg
inc
adc
xor
jp
pop
(bad)
stc
and
aad
dec
cmps
xchg
ficomp
fnsave
lock
mov
sahf
iret
inc
jle
inc
mov
sbb
push
ret
cmp
sub
or
or
and
mov
or
sbb
dec
push
mov
jmp
js
jo
jbe
adc
(bad)
pop
dec
stos
leave
or
dec
popa
jo
jl
gs
inc
push
lods
loope
pop
sbb
xlat
ins
jmp
imul
jge
in
cmps
mov
sbb
pop
lea
bswap
adc
sbb
aaa
fsub
xchg
mov
rol
xchg
add
mov
jmp
add
sub
jp
or
cmp
aaa
movs
stc
mov
sahf
and
daa
pop
push
xor
mov
pushf
test
jle
idiv
call
add
aad
addr16
xor
or
inc
jg
ror
add
cmp
xor
es
pop
sbb
mov
jo
ja
call
and
gs
inc
lds
add
or
xchg
mov
push
fwait
std
scas
loopne
pop
stc
sbb
aam
pop
dec
lea
int
idiv
jg
fbstp
xchg
das
add
mov
aam
je
sub
sub
lods
test
pop
sub
movs
xchg
retf
fcomip
and
shl
and
ins
sahf
lods
jle
shr
mov
enter
fisubr
ret
outs
add
stc
add
jnp
jg
test
pushf
pop
sbb
scas
test
mov
sub
imul
and
rcl
pop
mov
pop
inc
jo
js
mov
mov
sar
pop
inc
push
pusha
int
dec
xlat
cmp
dec
bound
mov
ins
das
push
sbb
stc
push
leave
inc
add
fwait
mov
inc
push
cmps
iret
push
mov
or
sbb
sbb
jl
mov
or
mov
mov
xchg
jge
popa
push
push
pushf
cmc
pop
mov
adc
inc
or
lods
push
in
cli
aad
cmp
xchg
inc
repz
in
sbb
imul
jle
test
arpl
push
lea
jmp
ins
add
xchg
add
movs
sub
jnp
mov
xor
inc
push
pop
push
push
retf
sub
pop
inc
push
add
mov
sahf
lds
dec
mov
pop
out
xchg
and
jle
leave
gs
jge
retf
ret
movs
jmp
test
sar
jecxz
inc
mov
lock
jns
mov
scas
pop
xchg
inc
cmp
adc
call
dec
daa
mov
mov
mov
aas
mov
or
adc
ds
xchg
int
out
push
xchg
sahf
inc
jmp
pop
push
bound
lahf
push
sbb
lock
jg
retf
pop
cmp
add
scas
inc
xchg
(bad)
rol
fadd
fs
shl
std
dec
mov
push
cli
and
xor
mov
fbld
and
add
jnp
xchg
push
repnz
mov
in
pusha
test
fsub
cmp
cs
inc
jp
lahf
idiv
xchg
leave
and
push
movs
sbb
xchg
leave
arpl
push
cmps
shr
shl
(bad)
cmps
out
es
cmp
pop
adc
mov
cs
jae
data16
cli
jl
jns
mov
push
call
add
test
push
push
mov
xor
pop
mov
repnz
jb
icebp
test
cs
mov
sbb
das
ret
sub
cmp
mov
pushf
mov
imul
or
xchg
sar
cdq
push
shl
(bad)
test
fidivr
frstor
loop
dec
jmp
cmp
cmps
push
cli
repz
cli
push
fwait
adc
clc
mov
adc
(bad)
ins
stc
xchg
dec
jmp
jmp
les
addr16
mov
fbld
push
std
mov
ins
jecxz
sbb
stos
cmp
cwde
sub
retf
sub
or
fisubr
call
pop
xchg
cmp
xchg
dec
aaa
fld
or
xor
mov
ret
aad
lahf
pop
cmp
imul
aas
mov
mov
out
mov
jb
push
and
push
add
loopne
jp
xchg
cmp
sbb
cmp
xchg
fwait
pop
ficomp
pushw
outs
lahf
xchg
lods
mov
mov
xor
jnp
pop
call
in
pop
fsub
jg
popa
(bad)
pop
cmc
or
in
out
lds
mov
mov
sbb
mov
pop
sub
sbb
cs
xchg
clc
xchg
jbe
call
sub
xchg
imul
pop
fcomp
pop
xchg
cld
push
xchg
sar
push
push
sub
xor
sbb
ret
mov
dec
div
je
repnz
or
ret
jecxz
or
(bad)
mov
out
loop
and
xlat
jle
jmp
retf
retf
dec
mov
aas
scas
ss
or
mov
inc
leave
xchg
cmp
jb
fsub
retf
xchg
mov
or
in
jns
(bad)
cli
mov
mov
test
mov
jmp
jnp
push
ja
cli
mov
test
outs
(bad)
xor
xor
cdq
cmp
pop
jp
push
out
(bad)
test
cmp
out
scas
add
xchg
sbb
push
mov
mov
mov
(bad)
(bad)
push
jl
jo
test
jl
sbb
clc
push
xchg
pop
or
cmps
push
cdq
sahf
inc
cmp
jmp
pusha
sbb
scas
cli
mov
sar
mov
lock
rcr
sub
cmc
jmp
mov
cs
in
pop
outs
imul
mov
(bad)
adc
out
jb
pop
shl
and
pusha
outs
leave
int3
in
or
cmp
iret
xchg
or
xchg
jae
fistp
das
push
pop
mov
mov
nop
ret
adc
es
jne
jmp
int3
jmp
sub
xchg
rcr
cs
lds
sub
jo
inc
daa
stos
arpl
adc
mov
jb
jns
out
rcl
cmc
ror
stc
push
popa
pop
sbb
sub
push
cmc
lods
js
pop
xor
mov
sub
pushf
and
or
cwde
ins
cmc
push
push
jecxz
test
push
dec
clc
shl
nop
mov
push
in
dec
scas
xchg
inc
nop
xchg
arpl
mov
mov
xor
sub
(bad)
fs
lods
or
xchg
jl
mov
cmps
popa
push
xor
sar
std
scas
and
fidiv
movs
fist
sub
adc
or
in
sahf
out
mov
cmps
movs
stos
lock
jbe
xchg
cmp
xchg
cdq
jecxz
xor
pop
je
mov
cmps
pop
retf
(bad)
(bad)
addr16
enter
dec
sahf
clc
lahf
xor
repnz
or
xor
sbb
inc
fwait
(bad)
cmc
push
xor
into
aaa
hlt
pop
scas
clc
dec
rol
mov
(bad)
in
push
pop
fisttp
stos
pop
popa
pushf
and
mov
hlt
pop
loop
adc
xchg
add
mov
cmp
int
cmp
xchg
fs
push
and
imul
popa
mov
and
cmp
xor
dec
clc
sar
pop
xor
shr
jl
and
adc
jecxz
inc
addr16
sbb
push
or
cwde
inc
cmp
pop
test
cmp
and
sbb
mov
adc
inc
cli
lock
add
or
xchg
imul
and
push
sbb
lods
ret
push
jle
and
into
mov
mov
xchg
cmp
adc
test
lods
mov
sbb
sahf
(bad)
leave
fmul
pop
ror
jge
cmps
div
and
or
inc
inc
sub
pop
xchg
ror
call
mov
inc
cwde
mov
adc
pop
outs
imul
and
sbb
jbe
add
push
push
cli
push
pop
es
mov
addr16
shl
vfmsub231sd
mov
mov
(bad)
mov
hlt
inc
sbb
cmp
lea
ss
outs
pop
repnz
or
push
sub
inc
dec
push
(bad)
jp
push
mov
test
inc
outs
rcl
pusha
sub
add
cmp
jmp
gs
sub
aad
add
bound
mov
xchg
ins
dec
and
pop
sar
push
popf
or
and
push
mov
(bad)
and
add
push
dec
rcl
scas
cwde
mov
das
push
pop
call
fst
pop
mov
inc
xchg
xchg
cmps
pop
mov
stc
outs
sbb
xor
(bad)
clc
push
sbb
pop
add
sbb
mov
xor
fs
xchg
push
in
ret
xchg
xchg
mov
mov
push
lea
je
jbe
(bad)
ja
and
cdq
jnp
xor
rcl
imul
test
mov
xchg
push
rol
pop
jmp
out
enter
push
icebp
je
pushf
mov
stos
jmp
push
xlat
add
cmp
pop
pushf
jo
sub
jge
xchg
in
imul
adc
inc
retf
ret
inc
call
nop
cmps
adc
sub
pop
pop
jmp
mov
call
div
lds
mov
dec
(bad)
call
sub
stc
or
outs
mul
cmps
mov
jo
pop
pop
pusha
pop
(bad)
jmp
mov
je
mov
rcl
loop
stos
sub
clc
int3
(bad)
add
xor
bound
mov
inc
xchg
mov
int3
push
push
icebp
div
add
push
outs
jo
outs
inc
ss
mov
test
mov
sub
mov
(bad)
js
in
ds
in
mov
inc
bound
xor
repz
xor
ja
arpl
add
or
dec
push
add
and
inc
add
push
mov
add
sub
mov
xor
shr
ror
dec
ret
movs
push
ror
xor
js
leave
fbstp
mov
pop
mov
maskmovq
xor
loope
(bad)
daa
jl
adc
cli
add
pop
pop
sub
inc
sub
mov
enter
cmp
cmp
push
pusha
es
mov
sbb
add
sbb
push
cmp
popa
iret
leave
imul
inc
pushf
adc
pop
cmps
or
(bad)
ss
cmps
jo
shl
daa
cs
and
out
mov
fidivr
pop
mov
cmps
cmps
jns
ss
xchg
cmc
adc
jne
movs
data16
dec
std
cmp
loope
aad
imul
movs
je
sti
loop
lahf
pop
into
stos
inc
fidivr
test
rcr
retf
cmp
or
adc
addr16
ja
outs
mov
dec
call
arpl
push
ret
push
cmp
leave
lods
cmc
adc
sub
or
jmp
xchg
cmps
mov
rcl
jecxz
mov
(bad)
call
sbb
mov
adc
stc
call
mov
sbb
loop
test
scas
jne
arpl
or
jmp
ja
dec
pop
xor
lahf
mov
dec
mov
push
dec
inc
cld
push
aas
cmp
jne
jns
es
add
and
push
iret
in
pop
fisub
enter
xchg
leave
bound
movs
xchg
jmp
xor
les
ret
(bad)
xor
shl
stos
cmc
repz
ret
mov
test
sbb
sub
stos
vcvtdq2ps
push
add
or
loopne
sub
cmp
mov
pop
rol
ss
out
das
jp
jb
popf
shl
mov
sbb
mov
cli
ds
pop
and
rcl
sub
pop
pop
push
pop
loope
jg
mov
ja
popa
rol
(bad)
mov
aas
pop
jg
adc
pop
cmp
dec
add
jns
clc
add
or
fadd
sbb
bound
or
mov
jl
jle
cmp
adc
jmp
pop
sbb
fistp
(bad)
xor
popa
or
or
ret
in
push
call
sbb
aam
dec
pop
and
xor
sub
adc
imul
rol
fdiv
mov
ins
ja
popf
dec
inc
shl
mov
mov
pop
adc
push
sbb
mov
pop
fdivp
add
jo
sub
jmp
mov
inc
add
xchg
mov
cld
push
cs
and
cli
pop
out
jne
(bad)
pop
xlat
int
xor
test
and
or
test
jo
fst
lods
retf
icebp
cmp
push
mov
aaa
xchg
xchg
mov
not
xchg
cli
cmp
adc
or
imul
aas
and
add
lea
enter
cld
jecxz
nop
adc
test
jmp
and
gs
xor
cmp
xlat
scas
mov
xor
pop
or
sbb
or
dec
(bad)
rcr
sub
lds
dec
adc
or
dec
inc
jo
and
sub
push
sbb
and
push
or
jmp
adc
es
mov
pop
cmp
bound
jae
leave
add
adc
pop
jb
neg
jb
imul
fisttp
fwait
or
adc
inc
test
push
cmps
lods
fwait
movs
int3
sub
mov
push
mov
fmul
sahf
inc
mov
fs
leave
add
nop
cli
cmp
and
add
sub
push
(bad)
sbb
cmps
mov
push
mov
in
xchg
lea
fcom
mov
dec
or
mov
in
mov
jae
fadd
pop
ins
sub
(bad)
fadd
dec
movs
mov
ss
or
or
mov
mov
add
int
mov
stc
inc
idiv
dec
push
mov
retf
inc
fnstsw
loope
addr16
leave
dec
dec
inc
or
rcr
push
dec
icebp
pop
pusha
(bad)
jecxz
out
jo
lock
xchg
ret
xor
ror
lahf
stos
fsubr
(bad)
adc
jns
retf
call
mov
xchg
sahf
dec
lahf
pop
repz
mov
mov
fisttp
(bad)
mov
shr
cmc
pop
add
add
ret
jmp
xchg
cmp
push
dec
push
and
mov
jmp
pop
jp
aam
ins
mov
jbe
(bad)
movs
repz
ins
adc
les
call
xchg
stc
das
push
call
jge
mov
dec
xor
leave
dec
out
cmp
ss
jo
sti
es
daa
or
jge
bound
push
jnp
mov
(bad)
dec
shl
jmp
popf
jl
lods
iret
movs
fwait
inc
imul
jbe
jg
out
add
push
int
add
dec
mov
daa
ret
push
dec
xor
test
cld
add
in
mul
cmp
rcr
mov
jmp
dec
scas
xchg
or
movs
inc
sahf
ds
xchg
sbb
(bad)
enter
mov
xor
lods
xor
in
js
sbb
inc
mov
test
mov
mov
call
sbb
push
mov
sbb
adc
mov
jl
(bad)
mov
jecxz
fidiv
loop
lahf
mov
dec
fs
add
clc
add
(bad)
fisubr
fisttp
pop
cs
pop
sahf
or
daa
lahf
out
jge
or
je
ds
cmps
vprotb
out
xchg
or
icebp
sub
pop
clc
mov
fwait
xchg
aas
iret
xchg
inc
sbb
scas
xchg
or
sti
(bad)
icebp
cmps
push
push
push
enter
or
adc
inc
adc
push
dec
dec
and
or
scas
xor
movs
xor
xchg
xchg
jle
mov
mov
sub
xchg
push
jb
sti
cs
into
cmps
nop
mov
add
outs
loopne
test
je
cmp
gs
mov
sbb
mov
mov
pop
jmp
sub
fsubr
dec
scas
cmp
and
pop
je
outs
sbb
xchg
repz
push
clc
xchg
loope
sbb
cli
cmc
sbb
test
fwait
inc
shl
mov
jecxz
xchg
aad
out
(bad)
fisubr
add
mov
jecxz
aaa
retf
outs
fwait
cmp
imul
leave
jl
add
inc
mov
in
ss
sub
imul
cmp
sbb
enter
cmp
inc
dec
xchg
push
sub
cmp
pop
xor
les
iret
pop
cmp
sbb
and
fdivr
fdiv
and
push
cmp
ja
dec
shr
lods
mov
jo
pop
jo
jo
inc
test
movs
sbb
js
lds
ret
jnp
loopne
push
jno
out
fmul
jae
jmp
mov
mov
lea
jne
pop
fcmovne
add
sub
repnz
fwait
mov
test
es
nop
int
cli
das
cmp
shl
adc
ja
pop
pop
push
ror
add
add
pop
cmp
mov
add
lock
inc
out
add
cli
mov
in
xchg
mov
cmp
ins
out
stos
dec
mov
and
mov
pop
ja
scas
add
push
adc
int3
ror
sub
jbe
out
push
int
xor
xor
popf
inc
xor
clc
dec
outs
pop
pop
and
or
sub
popf
add
icebp
pop
add
and
dec
push
cmp
les
add
outs
jbe
pop
pop
outs
stos
pop
add
xor
imul
sti
cmp
ins
mov
jmp
dec
nop
fs
jo
push
mov
fs
(bad)
sub
mov
movs
imul
dec
gs
xor
stc
xchg
popa
cmps
pushf
(bad)
stc
cmps
fwait
dec
and
sub
shr
daa
dec
dec
int
mov
dec
in
inc
cmp
outs
(bad)
cmp
dec
int
dec
(bad)
cmp
sbb
pop
dec
mov
enter
fsub
cwde
scas
sbb
mov
outs
jl
repz
fimul
xchg
out
sub
outs
pop
stc
fisubr
es
pop
xor
inc
push
sti
dec
add
sub
push
xchg
lods
fs
pop
fisttp
cld
jge
and
gs
mov
stos
xchg
mov
pop
inc
pop
iret
mov
test
jbe
sub
int
fdivr
stos
mov
and
add
mov
fldcw
into
push
cmp
clc
jnp
or
mov
loop
xchg
imul
pop
adc
mov
sahf
jns
int
repz
lods
cmp
cwde
mov
xchg
dec
shl
lahf
inc
rcl
push
mov
or
add
pop
or
jecxz
fsub
cs
sbb
sub
dec
sub
inc
or
cmove
ror
(bad)
mov
icebp
daa
jnp
scas
lods
sub
pop
fist
and
cmp
jae
add
fidiv
jecxz
jle
add
lds
cmp
movaps
xchg
shl
sbb
pop
int
stos
push
int3
stc
mov
fild
mov
pop
jge
shl
pop
or
cwde
sub
fwait
add
sbb
hlt
das
data16
sub
pop
dec
and
or
mov
sbb
out
rcr
sbb
scas
lods
xlat
in
scas
mov
loop
cmp
cmp
sub
adc
jae
int3
mov
or
mov
cli
lea
mov
(bad)
mov
rcl
adc
mov
les
jno
es
mov
mov
fsubr
and
push
cs
pop
(bad)
icebp
xor
push
or
dec
les
std
jo
mov
inc
jmp
popa
mov
mov
xchg
fst
jno
mov
jns
mov
cld
cdq
adc
(bad)
dec
lea
cmps
mov
test
mov
add
dec
cmp
das
xchg
clc
mov
xor
aam
dec
ins
mov
inc
daa
mov
lea
sbb
bound
movs
sbb
xchg
mov
jmp
(bad)
sbb
inc
ficomp
and
sbb
imul
das
jbe
push
pop
xchg
push
fwait
imul
out
xchg
in
xchg
push
push
fsub
out
enter
dec
mov
and
shl
ins
rcl
jbe
mov
rol
add
inc
push
push
mov
inc
test
fcmovne
push
stc
out
sbb
in
scas
xchg
outs
push
ins
mov
jl
aaa
repz
in
repnz
clc
sbb
cmp
movs
cmps
shl
fdiv
jo
and
test
sbb
and
sub
dec
stc
pusha
jmp
ins
mov
mov
call
push
dec
xor
sar
ds
pusha
lods
dec
dec
mov
call
sar
xchg
jl
adc
mov
pop
inc
xchg
cmp
adc
pop
xchg
shl
stos
cld
mov
stos
pop
cdq
sub
jmp
jns
outs
push
cmp
pop
xor
mov
xchg
push
addr16
imul
sbb
pop
movs
int3
aam
out
push
test
aaa
mov
cmp
in
out
mov
aaa
add
xchg
pop
lock
inc
aas
xchg
push
out
sub
dec
leave
cli
inc
adc
frstor
test
gs
in
test
cwde
and
push
cmc
inc
rcl
bnd
fldenv
and
retf
retf
sti
and
xchg
pop
cdq
sub
jge
retf
int
stos
outs
call
shl
xchg
inc
sbb
cld
push
xor
out
popa
psubusw
inc
fmul
mov
cmp
lahf
xor
push
pop
sbb
adc
xchg
movs
jmp
xor
dec
pop
jo
mov
sahf
cdq
dec
in
mov
clc
popa
mov
sub
mov
iret
das
repz
test
ss
dec
mov
fild
addr16
jb
add
loop
mov
outs
cmp
(bad)
push
pushf
adc
leave
call
xchg
shl
mov
xor
cdq
outs
(bad)
sti
arpl
mov
jne
xchg
dec
(bad)
xor
pop
sub
mov
pusha
arpl
push
adc
shl
sub
adc
clc
adc
pop
movs
mov
cmp
cmp
mov
jle
add
iret
addr16
jle
inc
jo
mov
dec
ficomp
cmp
adc
in
in
cmp
mov
movs
scas
cmc
std
dec
call
bound
cmp
xor
or
rcl
jmp
jo
daa
mov
int3
imul
pop
inc
cmp
mov
call
sbb
push
mov
repz
pusha
adc
sahf
pusha
sti
mov
loopne
pop
sub
push
cmp
xchg
dec
es
and
mov
and
or
fwait
loopne
xchg
popf
cmps
stos
sub
arpl
adc
fdivr
inc
shl
mov
mov
cmp
scas
pop
fisttp
sbb
imul
xchg
mov
test
in
sbb
cld
and
cmp
sbb
scas
es
add
push
jge
dec
test
out
cmp
ins
loop
pusha
popa
daa
pop
movs
add
add
sbb
ret
add
mov
pop
shr
repz
test
ss
jge
in
push
ret
out
sbb
push
test
out
nop
hlt
adc
sbb
jl
xchg
add
(bad)
gs
push
sbb
ret
add
and
retf
imul
sbb
push
clc
jecxz
sbb
push
mov
adc
sub
xchg
rcr
and
xor
mov
or
mov
(bad)
ja
or
icebp
sti
sub
xchg
repnz
leave
xchg
push
repz
add
pop
packuswb
pop
(bad)
into
in
xchg
mov
shl
outs
inc
outs
aam
mov
push
jo
popf
fwait
out
ret
lahf
imul
xor
cmp
imul
jbe
inc
dec
and
fs
inc
cld
xor
retf
adc
(bad)
sub
xlat
enter
data16
popa
push
mov
xor
repz
je
sahf
dec
or
xor
inc
loope
daa
push
dec
shl
int3
imul
lea
push
add
mov
mov
bound
(bad)
call
adc
and
ja
inc
cmps
ja
add
sbb
and
xchg
shl
sbb
jmp
cmc
dec
gs
(bad)
fild
xor
cs
enter
sbb
stc
sbb
push
dec
sub
jl
mov
repz
inc
fdivrp
ror
or
pop
inc
push
fisttp
movs
dec
neg
(bad)
(bad)
ja
cmp
xchg
push
xchg
rcl
clc
aas
jg
arpl
out
pusha
mov
adc
icebp
push
ret
mov
push
test
mov
mov
aas
dec
ins
inc
add
xchg
sbb
sub
repz
in
loope
xchg
daa
int
mov
test
popf
mov
jbe
dec
and
out
je
cmp
mov
pushf
fld
retf
cmp
cmps
and
jne
fwait
js
fcomp
das
int
clc
mov
dec
call
mov
fcomp
mov
scas
or
mov
retf
test
stos
adc
out
repz
xchg
mov
retf
bound
out
fidiv
sbb
and
push
jb
or
pop
mul
cli
les
inc
iret
sar
call
dec
mov
add
cdq
daa
mov
(bad)
pop
daa
out
push
mov
stc
or
push
xor
leave
out
ins
stos
aas
imul
cmc
loop
out
mov
pusha
inc
sbb
fistp
push
xchg
das
mov
inc
push
or
call
mov
fsub
in
and
sbb
les
sub
xchg
int3
mov
cmp
push
pop
popa
jl
pushf
dec
cmp
jae
and
movs
sti
cmp
xor
pop
es
cmps
aad
or
pushf
sbb
sub
mov
cmc
clc
cmp
pop
out
dec
pushf
mov
mov
pop
std
push
jle
xchg
das
mov
mov
mov
add
adc
test
pop
fcom
mov
jecxz
(bad)
cmp
scas
call
fild
inc
fwait
pop
repz
ret
inc
cs
scas
ja
sbb
inc
push
mov
xchg
cmp
and
ss
mov
jge
cmc
call
jp
in
mov
nop
test
test
shl
lods
and
sub
retf
hlt
fnsave
out
or
arpl
test
mov
call
fidivr
jle
xchg
cmp
sbb
adc
(bad)
xchg
push
cmc
lds
lods
xchg
pop
dec
add
call
popf
and
stos
push
mov
popa
push
pop
mov
jmp
imul
nop
ret
inc
test
jmp
out
xchg
movs
int
jns
mov
fs
fwait
cmps
ret
inc
adc
popa
in
cld
mov
test
xchg
mov
sub
call
aas
pop
icebp
ins
je
paddusb
fs
outs
mov
icebp
sub
push
jmp
and
cdq
mov
jno
push
loop
dec
mov
mov
push
xchg
or
push
lahf
mov
gs
xor
cmp
nop
cld
adc
stc
movs
adc
(bad)
xor
jb
sbb
xor
(bad)
push
and
ror
add
in
movs
sti
xlat
inc
(bad)
dec
int
pop
jge
sub
nop
xor
and
xchg
jbe
int
add
fstp
fdivp
or
jp
clc
dec
sub
scas
sbb
xor
out
push
jb
rol
fidiv
push
sub
ins
imul
je
lahf
test
inc
mov
xchg
adc
ret
maskmovq
outs
iret
xor
cmp
div
pop
jg
psraw
fwait
in
push
xor
pop
nop
mov
ins
sub
sbb
dec
test
fdiv
movs
sbb
ret
mov
(bad)
dec
je
mov
sar
daa
mov
mov
mov
sub
sub
leave
add
aad
shl
pop
es
sub
movs
adc
out
ins
mov
mov
pop
js
mov
sbb
sub
mov
jns
mov
fcom
fbld
jg
mov
dec
jg
(bad)
add
and
push
add
movs
aaa
lods
sbb
sbb
pop
jg
push
rol
fbstp
and
jo
add
sar
or
sbb
cmp
cmp
xor
push
ins
fild
movs
sub
(bad)
jp
jg
mov
pop
cmp
(bad)
mov
xchg
repnz
fwait
ins
popa
xchg
mov
cli
hlt
mov
push
mov
test
outs
sahf
and
cmps
pop
push
pop
xchg
inc
dec
and
outs
push
stc
fisttp
jp
fidivr
xchg
sub
inc
add
push
fbstp
(bad)
es
ror
aas
fwait
mov
cmps
call
adc
ins
hlt
adc
lahf
sub
xor
sbb
mov
fmul
imul
cmp
push
or
mov
in
pop
jo
cld
out
test
push
rcl
mov
lock
push
arpl
lods
into
in
sbb
mov
xor
test
into
fbstp
icebp
test
(bad)
sub
scas
adc
sbb
mov
dec
cwde
into
ss
pop
out
ss
mov
sahf
xor
pop
cmp
daa
xor
popf
cld
test
(bad)
push
rol
lea
dec
mov
mov
cdq
push
fsubrp
lods
mov
or
mov
imul
mov
cmp
and
leave
xchg
inc
xor
es
sbb
add
(bad)
mov
mov
mov
pop
sbb
push
out
(bad)
push
cmp
mov
fsubr
repz
push
arpl
sbb
retf
inc
mov
push
cmp
mov
sub
pusha
add
mov
xchg
jmp
(bad)
inc
mov
xchg
enter
xchg
or
mov
push
or
adc
mov
(bad)
aas
sar
sbb
add
add
ret
ins
sar
lods
mov
add
jl
inc
imul
retf
push
data16
and
push
inc
push
stc
mov
push
ins
cmp
loopne
sti
loop
push
sahf
mov
sti
dec
sahf
add
dec
jg
mov
(bad)
movs
xor
sbb
xor
mov
shr
push
jno
movs
or
and
mov
retf
pop
movs
jb
loope
mov
push
inc
lahf
ja
mov
cmp
out
pop
stos
sar
and
test
jl
xor
loope
jne
inc
jno
jbe
in
fstp
jnp
dec
(bad)
and
repz
inc
rol
ffreep
lahf
cmps
lock
shl
out
inc
pop
into
outs
jl
bnd
mov
das
arpl
mov
enter
mov
cs
mov
jbe
cmp
dec
jge
hlt
shl
mov
dec
mov
add
cmc
les
xchg
sahf
or
pop
aas
outs
mov
aad
mov
mov
bound
(bad)
pusha
jno
retf
pop
jmp
dec
pop
add
sub
das
movs
sub
cmp
imul
prefetch
mov
push
push
outs
or
mov
(bad)
cmp
fisubr
sti
call
imul
es
mov
fnstenv
mov
pop
xchg
cmps
mov
sub
idiv
pop
push
shl
pop
lahf
jmp
mov
jp
nop
or
ins
adc
(bad)
test
and
cmp
fist
aam
pop
int
mov
fisttp
repnz
enter
les
sbb
je
int3
jo
aas
sub
dec
xchg
fsubrp
push
pop
stc
fidivr
add
daa
call
xor
shl
ins
std
int3
(bad)
popf
lock
and
mov
xchg
loope
stos
pop
scas
test
(bad)
or
jne
xor
scas
aaa
sahf
outs
gs
sbb
pop
icebp
and
mov
(bad)
lock
pop
cmp
hlt
jg
cmp
xor
sbb
or
add
ds
movs
lahf
push
imul
dec
scas
lods
jp
mov
sub
mov
jnp
mov
inc
call
add
lods
cmc
sub
or
xor
cli
inc
aaa
pop
pop
mov
xchg
mov
xchg
test
popf
push
add
adc
mov
mov
ret
div
lock
mov
pop
imul
cdq
rol
test
(bad)
clc
inc
pop
shr
xchg
adc
mov
adc
outs
sbb
cmp
outs
inc
mov
pop
out
jo
inc
in
jp
jl
js
pop
or
xchg
sbb
or
call
inc
(bad)
pop
bswap
pop
sbb
popf
push
or
jmp
sub
aaa
cmp
es
cwde
inc
xchg
jmp
pop
cmc
neg
xchg
loop
add
inc
jo
push
int3
movs
imul
loop
sub
fwait
retf
xor
ss
jge
jae
xor
sbb
mov
jecxz
inc
mov
and
adc
xor
nop
gs
shr
jmp
dec
(bad)
(bad)
repz
pop
xchg
iret
or
jecxz
and
pop
jmp
xchg
adc
data16
xor
jns
scas
push
ins
cmp
push
in
out
push
or
rol
cvtpi2ps
xor
test
lds
inc
sub
sbb
lods
push
stos
sub
xor
leave
cli
(bad)
(bad)
pop
xor
xchg
stos
push
ret
jae
jae
xchg
imul
mov
push
inc
pop
inc
mov
or
xchg
fmul
jecxz
cmp
jnp
shl
enter
pop
sbb
ins
mov
test
push
mov
jmp
into
adc
ins
lods
out
(bad)
loope
add
adc
cld
pop
scas
leave
or
or
xchg
xchg
adc
cmp
mov
xor
cmp
mov
or
std
push
movs
and
loop
ret
ja
ins
popa
xor
sbb
xchg
retf
mov
cld
and
mov
sbb
lods
jo
jle
sbb
mov
mov
ret
xor
push
stos
xchg
xchg
(bad)
xchg
clc
xor
(bad)
imul
inc
cmp
sub
inc
pop
rcr
jge
test
and
fucomp
push
jo
test
iret
fnstcw
sub
rol
loope
xchg
cmp
je
rcr
mov
or
xchg
rol
shl
jnp
ins
cmp
ins
repnz
mov
lds
iret
sub
mov
adc
push
mov
xchg
pop
adc
mov
mov
xor
add
scas
cmp
and
or
aaa
dec
or
cmps
int3
add
mov
aam
imul
fmul
adc
or
scas
inc
mov
int
push
fwait
inc
mov
in
sbb
xchg
enter
mov
aas
test
jne
mov
mov
outs
fsub
cmps
cld
retf
movs
jge
inc
add
stos
iret
pop
sub
xor
clc
ret
test
cmp
add
stos
pop
cmp
inc
shl
into
xchg
sub
dec
cmps
mov
pop
popa
jns
js
aaa
sbb
fst
dec
push
add
repz
add
pop
push
cdq
dec
sub
mov
fsub
mov
in
arpl
push
lds
add
jle
ins
dec
adc
push
in
and
or
lahf
dec
in
(bad)
imul
aas
mov
xchg
inc
sub
ins
xor
dec
push
fadd
pop
xlat
push
out
sbb
clc
cmpps
lahf
test
ins
test
adc
adc
shr
mov
ss
ror
pop
rcl
mov
jnp
jne
popf
xor
push
or
xchg
mov
loope
cld
mov
add
push
or
jmp
pop
mov
and
jmp
add
icebp
mov
retf
pop
fild
gs
xchg
shl
mov
xchg
adc
mov
ja
mov
push
xchg
paddsb
mov
stos
loope
pushf
xor
out
xchg
adc
icebp
movs
mov
or
inc
push
loopne
xor
daa
out
loope
cdq
cmp
cmps
les
xchg
or
xchg
mov
popf
jno
call
loop
fdivp
out
lods
mov
xor
fst
ficomp
jl
pop
outs
pop
fcmovnbe
pop
addr16
or
leave
add
xor
dec
push
(bad)
aas
cmp
out
dec
ss
bt
push
adc
push
sbb
cmp
dec
cli
inc
aad
fdiv
pop
sub
arpl
cmp
dec
jbe
retf
push
pop
gs
dec
mov
and
xchg
mov
(bad)
arpl
mov
lods
mov
fild
jne
popa
je
pop
push
pop
jnp
fsubr
repnz
popa
movs
mov
int
xchg
ret
hlt
or
call
inc
and
or
cmp
cmp
xchg
mov
jb
inc
pop
mov
jno
mov
dec
lea
cld
xchg
or
icebp
cs
push
push
shr
(bad)
in
dec
add
adc
pop
jmp
jbe
xor
sub
out
in
int3
dec
cld
cmp
sub
das
sub
gs
inc
jmp
dec
xchg
pop
dec
inc
cmp
lods
push
ror
jnp
icebp
push
test
adc
xchg
mov
popf
xchg
adc
je
jo
call
cmps
cld
cwde
outs
cmps
mov
not
xor
pop
addr16
jg
pop
pusha
test
xor
push
or
cmp
pop
(bad)
push
dec
jmp
pushf
jns
clc
ficom
push
or
mov
repnz
xchg
mov
rcl
sbb
(bad)
fwait
jle
sbb
dec
xor
ret
push
push
scas
adc
popa
fst
jo
sub
es
cmc
push
outs
fwait
cld
mov
cmps
out
or
push
aad
mov
addr16
bound
les
lds
adc
inc
cwd
mov
mov
jl
jecxz
sub
sbb
imul
jno
hlt
lahf
push
mov
not
sbb
dec
push
jo
mov
ret
or
mov
iret
jecxz
imul
mov
inc
addr16
mov
xchg
shl
shr
fiadd
scas
in
fs
shl
adc
jae
add
mov
cmp
xor
or
cmp
jb
jne
cmp
adc
push
jmp
mov
leave
test
inc
jle
push
ret
xchg
ror
data16
rcl
mov
(bad)
and
pop
out
pusha
jg
fdivr
jp
and
loopne
out
sub
(bad)
xor
cmc
int
push
test
sub
bound
xchg
push
sub
mov
mov
movs
pop
retf
outs
pop
out
pop
sti
push
repnz
jecxz
in
cld
stos
jl
pop
mov
(bad)
icebp
fisubr
les
push
xor
test
or
inc
jg
adc
sub
push
mov
jne
xchg
mov
leave
(bad)
ja
sbb
aaa
add
sbb
cmp
rcr
pop
add
add
stos
or
in
xchg
fist
and
out
arpl
pusha
pop
das
xchg
or
mov
mov
mov
test
jns
dec
std
mov
mov
jg
jb
inc
(bad)
outs
pop
dec
pop
pop
sub
dec
fstp
cld
and
xchg
jmp
clc
or
shr
sub
in
adc
mov
push
fdivr
call
dec
xchg
or
inc
(bad)
pushf
sub
or
mov
stos
jb
gs
lods
repz
call
ror
mov
inc
ds
adc
push
and
mov
adc
addr16
jl
jmp
fisubr
aas
mov
imul
dec
mov
or
fimul
cs
mov
ret
sub
iret
rol
ins
xchg
imul
ror
dec
cwde
adc
shl
out
add
ins
fcmovb
daa
jmp
add
mov
in
pop
and
clc
or
ficomp
sub
hlt
daa
inc
out
dec
or
out
cmp
cmp
cmp
adc
es
xor
sub
jl
inc
out
test
push
(bad)
ins
ret
dec
mov
jno
int3
sub
sub
stos
scas
aad
mul
loop
ins
repz
test
cmp
xor
bnd
inc
pop
push
stos
and
(bad)
mov
ins
es
movs
aad
adc
or
mov
jecxz
iret
inc
inc
pusha
add
jno
push
adc
out
push
add
mov
dec
fdivr
loop
test
sbb
loopne
movs
xor
aam
mov
(bad)
mov
push
cli
dec
je
into
sbb
fisubr
out
inc
and
aam
enter
push
shr
adc
xlat
adc
add
ja
enter
cmps
outs
inc
ror
call
icebp
inc
or
(bad)
scas
adc
mov
pop
push
popa
call
jb
fiadd
or
sbb
pop
xchg
ins
xor
jg
lahf
jmp
mov
fnsave
addr16
dec
pop
or
fisttp
loop
pop
mov
adc
sub
(bad)
mov
(bad)
in
sahf
scas
sahf
stos
jl
mov
fcomp
jl
loop
fsub
mov
daa
push
cmp
leave
inc
repz
jnp
push
movs
jae
sahf
out
mov
ins
inc
and
(bad)
shl
mov
jnp
or
stos
or
sti
pop
in
cdq
dec
pop
scas
fsub
push
retf
arpl
stc
add
sti
mov
jmp
cmp
sbb
and
popa
sti
lock
jge
xchg
or
nop
fcmove
je
pop
stos
mov
mov
sbb
js
stos
fistp
xor
dec
shl
push
mov
sbb
mov
or
xchg
jmp
jl
inc
dec
lea
in
cmp
repz
adc
call
loop
or
add
stos
bound
mov
aad
js
jg
mov
icebp
mov
iret
jmp
xor
cmp
data16
ss
sub
loop
inc
addr16
sub
addr16
push
lods
sbb
out
leave
xchg
imul
enter
in
push
sbb
pop
xlat
pop
jae
cmp
or
movntps
es
push
xchg
sbb
ins
int
clc
add
out
jmp
movs
loope
outs
inc
push
sub
push
pop
inc
ja
stos
xchg
fld
xchg
jle
call
mov
jmp
ret
mov
int3
aaa
stos
shl
or
push
test
scas
cs
mov
retf
fs
fwait
aad
dec
sbb
sbb
call
xchg
add
mov
or
(bad)
xchg
dec
mov
cld
stc
add
xor
mov
(bad)
popa
xor
add
ds
jge
pop
aam
nop
aam
mov
shl
jmp
push
fmulp
ret
inc
cmp
sar
or
mov
ror
pop
and
mov
dec
sub
ss
jnp
jae
aad
arpl
arpl
(bad)
pinsrw
push
cmp
popa
sbb
mov
add
call
cmp
sahf
fisubr
sahf
sbb
jns
popa
or
sub
pop
and
push
les
mov
jae
inc
fs
and
movs
mov
sbb
loope
js
jno
mov
arpl
jmp
sbb
dec
cld
sub
jecxz
push
push
dec
in
push
push
pop
(bad)
jmp
pop
shl
imul
fldcw
fsub
sub
fstp
mov
mov
cmps
pop
sbb
mov
cmp
mov
in
cmp
lods
pop
mul
(bad)
jle
inc
cld
adc
fistp
jnp
adc
jbe
add
add
jp
push
mul
or
loopne
outs
xor
or
and
push
popf
lahf
and
sar
jbe
pop
pop
jbe
pop
scas
ds
aaa
push
cmps
cdq
out
inc
iret
mov
daa
inc
add
cmp
ds
cs
div
out
and
test
inc
je
dec
sbb
test
mov
retf
push
sub
cmp
and
sub
stos
jp
addr16
push
bnd
dec
es
add
imul
dec
hlt
sahf
addr16
in
mov
sbb
push
sbb
cmp
dec
nop
jmp
fwait
lods
push
mov
sub
and
jae
sbb
inc
inc
mov
test
scas
cmp
into
jl
inc
mov
inc
repz
mov
and
push
pop
ss
movzx
data16
and
or
movs
call
in
pop
pop
inc
stos
mov
stos
hlt
pushf
and
jb
jb
xor
outs
fs
hlt
adc
push
jbe
add
jmp
test
hlt
xchg
mov
dec
out
lock
pop
and
xor
cmc
sbb
xor
pushf
jo
(bad)
ficomp
popa
out
call
xor
cld
sahf
mov
jbe
data16
lods
stos
rcl
add
and
mov
(bad)
jl
push
push
add
aas
js
and
cdq
das
arpl
xchg
fdivr
ja
(bad)
stos
fcom
in
dec
mov
xchg
shl
lods
xchg
bnd
movs
bound
sub
jp
stos
pop
push
dec
in
push
push
in
hlt
fsub
adc
or
cli
enter
mov
repnz
mov
clc
int
dec
jecxz
popa
adc
lds
push
add
sub
imul
stc
cmps
je
lods
mov
std
clc
pusha
ja
fcom
cli
xchg
call
add
or
sahf
aaa
rol
jmp
sub
clc
sbb
popf
jp
(bad)
gs
cmps
repz
stos
jne
mov
iret
not
inc
jno
gs
adc
pop
out
not
sbb
loope
aam
and
push
ds
shl
jno
pop
jae
cld
adc
adc
ss
fldenv
mov
in
lahf
xchg
adc
lock
inc
add
(bad)
popf
lods
call
adc
mov
movs
cld
sbb
out
pop
popf
mov
cwde
pop
inc
pop
stos
xchg
xchg
cwde
push
scas
xchg
mov
sub
jbe
fdiv
fwait
inc
and
ds
call
fild
dec
les
pop
outs
shl
js
adc
xlat
call
out
fs
dec
ds
cmp
pusha
movs
and
or
ret
in
out
or
or
enter
or
add
adc
test
jo
hlt
retw
add
es
xchg
add
and
popf
repnz
ja
movs
mov
inc
ret
ret
mov
xchg
xchg
inc
inc
cmp
cmp
loop
mov
call
adc
adc
cs
rcr
call
nop
sbb
push
xchg
sub
cld
inc
sahf
repnz
or
and
hlt
inc
(bad)
adc
pop
or
pop
push
pop
loop
mov
jmp
ret
(bad)
xor
lods
scas
sti
test
movs
movs
dec
mov
push
scas
stos
test
mov
jne
fnsave
cmp
mov
inc
mov
(bad)
retf
sti
push
sti
cwde
js
push
imul
data16
pop
adc
clc
icebp
xor
(bad)
movs
mov
push
pop
fsub
dec
xor
rol
ds
out
icebp
sbb
xor
sub
in
add
shl
clc
hlt
mov
xor
pop
xchg
push
or
aaa
push
and
outs
xor
mov
jbe
or
adc
inc
sub
jno
xor
in
loop
mov
call
and
cmc
inc
sub
les
xor
fwait
sub
pop
pop
jge
mov
jmp
call
jnp
shl
enter
cmp
mov
pop
push
imul
mov
sbb
and
push
mov
into
and
cmps
xlat
push
mov
pop
jo
xchg
jle
neg
xchg
fld
xchg
(bad)
sar
pop
fld
pop
pop
js
out
or
sub
int
mov
fist
popa
ins
push
jle
jbe
rcl
js
aaa
cmp
dec
shl
push
sbb
dec
mov
test
or
and
(bad)
loope
and
scas
mov
adc
add
xlat
popa
mov
mov
push
btr
cmp
push
xchg
jae
jge
push
xor
dec
jnp
add
pop
clc
jns
push
mov
xor
(bad)
sub
jmp
retf
call
outs
cmp
jbe
imul
int3
bound
in
into
cld
sub
mov
sub
mov
(bad)
jo
lods
dec
push
mov
xchg
mov
push
adc
ret
pop
loop
das
mov
mov
xchg
fisttp
mov
fild
sti
in
jbe
jo
ja
push
outs
push
adc
push
je
jns
mov
mov
bound
(bad)
(bad)
jnp
(bad)
mov
outs
aad
dec
inc
mov
adc
and
mov
mov
mov
sub
pop
dec
mov
xchg
adc
das
dec
pop
or
cmp
pop
enter
cmp
inc
cmps
jge
jle
aad
xchg
and
mov
cmp
jmp
out
repz
push
cld
out
mov
(bad)
pop
mov
shr
cdq
pusha
inc
not
push
loope
push
fucomip
pusha
fst
adc
in
sar
xor
xchg
xchg
or
jns
loope
and
sub
call
imul
loop
mov
push
je
ss
lods
mov
xchg
push
sbb
rol
mov
loopne
pushf
rol
sub
push
xchg
and
jb
iret
movs
xlat
push
xchg
mov
loop
and
stc
cmps
sub
loope
cmp
pop
lds
add
jge
pop
add
pop
fdivrp
sbb
cmps
and
xchg
aas
cmps
leave
repnz
enter
cs
aad
jbe
enter
shr
push
(bad)
retf
mov
mov
mov
jbe
loope
int
rol
lds
fstp
(bad)
push
adc
mov
xchg
jbe
mov
in
adc
fbstp
ficomp
pop
jnp
jmp
fst
dec
cmc
test
int3
add
jo
fneni(8087
xchg
(bad)
push
push
xor
std
pop
cld
cmps
(bad)
stos
test
fst
out
test
arpl
shl
(bad)
pop
xchg
sub
inc
jnp
mov
frstor
push
out
outs
add
(bad)
pop
popf
push
and
shl
mov
and
or
jmp
mov
inc
xchg
ss
pop
rcl
sbb
pop
add
data16
fdivr
int3
iret
xor
shl
(bad)
js
sbb
mov
test
jb
outs
cmp
dec
sub
scas
xchg
(bad)
lock
movs
inc
or
xor
mov
pop
sub
fadd
call
bound
dec
int3
xor
loope
jl
push
xchg
push
pusha
mov
ret
or
sub
mov
in
imul
sub
xor
retf
adc
test
inc
mov
adc
mov
pusha
mov
mov
div
dec
jle
pusha
cmp
cmp
or
pop
cmp
push
shl
and
mov
into
push
jecxz
pop
cmps
mov
xchg
jp
fbstp
push
sti
test
inc
push
addr16
and
cmp
sub
and
jb
pop
mov
fdivrp
xor
cmps
sub
mov
enter
out
mov
sbb
out
mov
sti
mov
lea
test
and
loope
int
(bad)
out
(bad)
pop
aas
sar
lods
pushf
pop
cld
mov
fnsave
mov
sbb
ins
mov
ja
mov
test
mov
sub
jle
pop
popf
ins
fwait
scas
std
mov
jl
inc
das
push
pop
jle
inc
pop
ror
mov
shr
jecxz
inc
push
push
loope
pop
daa
mov
xchg
add
daa
fstp
xlat
shr
fwait
jmp
sbb
lods
or
cli
dec
dec
imul
xchg
mov
icebp
leave
test
mov
ds
jmp
xchg
inc
push
nop
mov
cs
pop
into
pop
imul
inc
loope
fnstcw
rol
and
xchg
(bad)
in
iret
add
and
push
inc
popa
or
cmp
or
jg
or
mov
xor
ds
(bad)
ret
mov
mov
or
ror
inc
mov
es
jp
call
jno
push
inc
adc
sub
or
sub
adc
sub
sahf
pop
out
inc
das
jmp
jmp
fs
inc
jo
dec
inc
jge
and
or
lods
and
fucomip
inc
inc
inc
sub
inc
jno
ret
jne
cld
push
xor
pusha
mov
mov
ss
adc
nop
rcl
lods
mov
sti
test
jbe
push
lods
shl
xor
or
sbb
movs
aas
sbb
mov
test
xor
daa
cmp
mov
repnz
push
adc
test
mov
fdiv
imul
imul
cmp
jnp
jg
xlat
mov
xchg
jo
pop
loopne
stos
imul
cmp
movzx
lock
test
push
loope
dec
sbb
enter
(bad)
sbb
lock
loop
das
inc
sbb
loopne
in
cmc
int3
(bad)
lods
adc
fild
jnp
push
movs
xchg
add
and
dec
and
ss
loope
lods
call
jnp
xor
lds
mov
jmp
into
add
mov
(bad)
dec
cmp
cmp
call
add
dec
push
lds
push
cld
mov
mov
xchg
call
and
or
js
jge
inc
mov
lock
idiv
xchg
iret
xchg
xchg
add
cmps
clc
xchg
mov
add
sub
xor
cmp
jl
push
in
xor
mov
pop
test
ret
and
pop
aas
jecxz
or
push
fild
mulps
fisttp
int
fwait
aam
lods
es
and
retf
xor
pop
inc
(bad)
jb
mov
in
inc
enter
add
outs
std
(bad)
aam
dec
div
aas
popf
add
mov
jg
add
cmp
test
aad
mov
aaa
inc
push
cmp
fwait
jle
sbb
or
or
jmp
sbb
sub
mov
sar
pop
(bad)
mov
mov
jns
jecxz
nop
div
mov
cmp
xchg
(bad)
inc
mov
arpl
pop
dec
inc
mov
mov
jp
pusha
jle
les
jb
retf
pop
cmp
into
dec
rcr
mov
(bad)
or
or
popa
push
sub
and
imul
es
icebp
push
pop
in
jge
(bad)
adc
and
mov
inc
fwait
out
and
mov
jns
imul
in
dec
push
cmp
jae
shl
mov
xor
mov
fucomi
push
xchg
outs
push
xor
(bad)
stos
mov
xor
jge
daa
ins
pop
adc
jecxz
jnp
dec
push
in
or
es
outs
hlt
jno
and
call
sbb
dec
jo
jl
jo
int3
dec
adc
xchg
nop
bound
int
mov
dec
in
push
jg
and
out
int
cmp
out
mov
jb
cdq
jne
out
ret
dec
mov
mov
ins
mov
jle
sub
and
sub
retf
push
cmps
popa
cld
fdiv
jns
stos
ror
ins
cmp
jmp
jo
push
xchg
mov
cmp
dec
icebp
outs
pop
movs
dec
sub
movs
sub
scas
lods
jae
sub
cs
push
lock
daa
sub
pop
sbb
arpl
sti
ds
data16
mov
iret
sqrtps
dec
rcl
ret
xchg
mov
and
(bad)
jp
xlat
cmp
xlat
mov
add
lods
sub
push
xchg
push
mov
ror
jg
ds
sbb
ss
and
xlat
xor
iret
lds
stc
leave
outs
xchg
outs
mov
js
sub
mov
and
and
div
adc
or
dec
icebp
push
inc
retf
lds
mov
mov
jo
pushf
inc
pop
dec
push
pop
jecxz
cmp
inc
dec
lock
aad
sbb
pushf
aas
add
or
cld
mov
fist
or
sar
outs
sbb
sub
pushf
sbb
xchg
cmps
repz
adc
mov
fmul
adc
cmp
fidiv
jae
into
scas
cmps
pop
in
sbb
push
add
(bad)
fdecstp
mov
dec
js
mov
sbb
mov
fsubr
call
cs
ja
dec
leave
xor
push
ret
push
aad
repnz
ins
repz
adc
xor
jne
inc
out
ficomp
push
clc
mov
sbb
into
add
xor
pop
xor
gs
mov
or
fstp
jb
push
loope
sbb
inc
(bad)
stc
and
(bad)
test
ficom
mov
call
inc
std
adc
adc
mov
retf
pcmpgtb
sbb
out
sar
adc
jae
push
xor
xchg
sahf
ins
sub
neg
mov
int3
push
dec
inc
xchg
in
pop
std
fwait
pop
out
cld
(bad)
lahf
das
mov
xchg
mov
xchg
std
cmp
mov
sbb
cmp
push
fs
inc
adc
cmps
pushf
adc
(bad)
sub
repz
cmp
mov
cld
mov
ror
imul
icebp
add
and
es
sub
xor
jae
mov
gs
push
in
xchg
imul
iret
xchg
jg
lods
push
mov
xor
test
sub
push
push
xor
push
jnp
adc
std
iret
nop
jae
dec
ins
push
mov
imul
push
sbb
xor
repz
push
bound
cmp
xor
out
call
mov
enter
or
jmp
or
loopne
ret
add
jge
test
outs
cli
fsubr
pop
aam
jns
repz
add
cld
(bad)
fldcw
or
jbe
pop
call
cmp
outs
sub
xor
cmps
loope
aaa
daa
repnz
jmp
xor
lds
imul
inc
adc
or
and
fst
jbe
loop
mov
fucom
pop
mov
adc
xchg
inc
push
scas
in
and
mov
into
or
clc
dec
mov
cmp
sub
pop
mov
mov
jbe
and
or
fimul
cmp
adc
xor
push
add
inc
sahf
xchg
sbb
adc
addr16
jmp
(bad)
cmp
in
ins
scas
aas
fistp
in
jne
cmps
mov
movs
lds
push
mov
cmps
mov
or
or
neg
add
test
fimul
add
pushf
es
xor
pop
push
sub
fcomp
fistp
push
stc
cmp
pop
(bad)
data16
call
int3
cdq
sub
xor
pop
(bad)
mov
das
push
in
xor
inc
jg
xchg
in
push
mov
cmc
xchg
mov
fistp
jge
mov
mov
pop
in
push
dec
push
mov
sub
sar
dec
es
jecxz
xor
adc
lds
lea
push
mov
push
cli
mov
in
jns
adc
cmp
mov
rol
add
push
daa
adc
data16
jbe
push
jg
adc
ins
adc
jb
xor
dec
jl
push
retf
push
dec
sahf
aam
lock
add
std
lea
push
push
dec
fdiv
mov
and
test
adc
call
cmp
adc
nop
(bad)
outs
out
sti
shl
retf
mov
aad
xor
or
cmp
rcl
rol
inc
push
icebp
xor
aaa
fnop
jg
pop
mov
in
pop
inc
push
pop
or
sub
pop
icebp
movs
mov
adc
mov
aas
fist
call
clc
iret
in
lods
lds
inc
or
sar
inc
fst
add
jge
push
daa
sub
sbb
or
sub
gs
nop
push
adc
sub
jno
nop
ins
scas
lods
xchg
test
mov
inc
jae
stos
inc
jo
sbb
push
jno
(bad)
repnz
retf
and
inc
jno
cmp
xor
cdq
mov
daa
xlat
sub
jp
sub
xchg
mov
jo
iret
pop
and
jae
mov
paddsw
and
enter
push
or
inc
add
mov
bound
inc
popa
movups
pop
xchg
mov
popa
dec
pop
jmp
out
ret
adc
fisub
or
adc
retf
cmps
add
ds
(bad)
(bad)
push
cmp
outs
fimul
inc
lods
ds
jmp
lods
push
dec
mov
pop
cmp
jne
aam
das
xchg
dec
cdq
retf
jbe
sub
push
jmp
std
pop
add
shr
inc
push
pop
and
jo
movs
xchg
add
in
ja
jg
dec
cmp
repnz
scas
mov
jge
jmp
mov
les
adc
lea
adc
shl
sahf
mov
pop
in
xchg
add
(bad)
mul
or
or
mov
jg
das
jp
ror
inc
dec
outs
(bad)
fimul
cdq
or
lock
xor
mov
mov
sub
inc
adc
sub
xor
push
sar
jp
pop
loopne
(bad)
cmp
test
or
jne
jbe
mov
ins
aaa
and
mov
push
fistp
xchg
nop
aad
mov
cwde
mov
repnz
jl
adc
fbld
push
cmp
or
push
jbe
inc
cmc
dec
shr
pusha
stos
test
pop
nop
enter
xchg
fbstp
bound
call
and
in
loop
jge
mov
push
daa
inc
jmp
jmp
xchg
cmps
jnp
dec
mov
cmp
mov
adc
(bad)
leave
xor
sbb
mov
mov
mov
mov
xor
adc
xor
pop
in
xor
cmp
hlt
movntq
ins
or
clc
push
pop
hlt
push
(bad)
leave
retf
dec
sar
cmp
mov
test
xchg
add
jo
pop
fdiv
and
mov
cmp
ret
mov
repz
into
cs
or
xchg
cmp
dec
std
imul
xor
fistp
fnstcw
mov
push
nop
inc
adc
mov
movs
in
shl
test
and
sub
jno
cmp
mov
mov
mov
scas
or
dec
ins
cmps
push
jl
pop
inc
adc
cmp
enter
nop
repnz
cmps
mov
ja
sub
inc
daa
jb
mov
(bad)
in
jns
inc
or
cmc
lock
pop
sbb
pop
cli
cmps
adc
inc
por
mov
mov
outs
movs
sbb
sar
push
push
rcl
shr
ficom
xor
stos
or
imul
mov
pop
dec
mov
xor
push
sbb
pop
sbb
shl
sbb
jmp
out
mov
xor
rol
loope
xchg
mov
in
cmp
pop
xchg
into
mov
jge
push
xchg
test
mov
or
ret
xchg
out
dec
mov
cmp
inc
retf
scas
mov
rol
jl
adc
fistp
or
iret
shr
sub
call
mov
and
mov
fcomp
xchg
(bad)
or
cmp
sbb
test
push
shl
js
jno
xor
cli
push
cmp
das
popf
mov
jmp
mov
int
in
pop
int3
ret
push
(bad)
jp
imul
pop
sub
push
xchg
into
mov
pop
jns
xor
call
(bad)
cmps
je
xchg
out
lods
pop
push
and
xchg
xchg
and
cs
fst
add
bnd
sub
aaa
(bad)
repz
mov
sbb
bound
rcr
xchg
push
jb
div
nop
ret
iret
ror
jmp
xchg
dec
stos
sbb
mov
sti
(bad)
imul
mov
lds
nop
jns
imul
push
sbb
aad
daa
pop
jp
xlat
stos
and
xor
mov
scas
scas
pop
jno
xlat
call
out
pop
mov
in
sbb
dec
sar
mov
cmp
jb
into
cmp
mov
push
lock
xor
fsub
mov
pop
not
adc
out
push
xchg
enter
lds
jb
pop
sbb
and
sar
xchg
pushf
push
inc
not
(bad)
sub
imul
pop
xchg
jmp
dec
(bad)
iret
jle
(bad)
mov
inc
bound
mov
fisubr
js
dec
dec
stc
int3
or
adc
fisubr
cmp
sbb
cmp
jae
add
or
jbe
dec
repz
mov
mov
bound
cs
jmp
pop
xor
xor
aam
daa
jae
inc
push
xchg
mov
jmp
add
cmp
jne
mov
ds
cld
xchg
sar
stc
sar
mov
pop
mov
lods
ficomp
xchg
xor
xchg
xor
pop
mov
lds
and
std
rsqrtps
and
outs
xor
je
div
jle
js
sti
sub
xor
imul
xlat
push
retf
jmp
and
pop
fcmove
or
xor
int
sub
mov
or
scas
dec
pop
or
aam
xor
int3
adc
adc
push
imul
(bad)
cdq
jg
cmc
push
mov
sub
dec
loope
sub
mov
push
dec
cmp
test
push
xchg
xchg
out
and
sbb
scas
mov
inc
mov
mov
aas
das
mov
pop
dec
pop
mov
mov
cwde
jno
and
xor
(bad)
and
mov
scas
loopne
push
inc
ret
fnsave
dec
mov
jg
xlat
and
sbb
stos
test
cmc
sub
mov
adc
ficom
mov
xchg
mov
xor
adc
mov
cs
test
push
idiv
inc
push
cmp
push
(bad)
jo
or
dec
adc
ds
jne
test
retf
fcomi
aaa
push
mov
jae
or
push
adc
or
mov
push
and
pop
movs
repz
rcr
mov
or
or
mov
pop
cmc
int3
mov
xchg
xor
scas
jecxz
adc
and
les
dec
shr
push
pop
ins
pop
fist
lods
mov
adc
push
push
inc
or
mov
sub
or
mov
mov
ss
sub
out
add
xor
std
sub
mov
inc
mov
jo
mov
into
xchg
das
xchg
les
call
xchg
inc
xlat
xchg
push
int
fs
dec
dec
xlat
mov
inc
pop
movs
pop
xor
movs
mov
sub
imul
lods
dec
adc
cmp
cmps
leave
aam
xchg
xchg
clc
loop
stos
adc
sub
fstp
sub
jns
or
out
xchg
ret
js
outs
ja
dec
shl
faddp
ret
jecxz
push
inc
mov
inc
mov
bound
iret
or
mov
iret
xchg
scas
or
mov
or
pop
jge
adc
arpl
and
test
xor
adc
loop
pop
inc
cmps
pop
xchg
fld
outs
repnz
sbb
adc
xor
cld
fsub
xchg
shl
mov
or
loopne
push
ret
sub
jne
dec
movs
xlat
mov
or
imul
mov
cmp
mov
inc
enter
sbb
sti
adc
fidivr
jle
or
icebp
int3
xchg
mov
mov
push
outs
jmp
adc
fstp
retf
xchg
mov
mov
xchg
aad
lahf
xchg
dec
nop
stc
(bad)
cmp
ins
(bad)
mov
xchg
sbb
int3
sub
retf
adc
and
add
movs
adc
(bad)
push
(bad)
cmp
push
mov
std
push
push
movs
jmp
in
mov
xchg
les
dec
mov
pop
xchg
dec
aas
push
out
pop
pop
rcl
imul
jecxz
les
jmp
mov
addr16
xchg
cmp
test
sbb
pop
adc
jb
adc
jge
iret
inc
and
sbb
test
sub
sub
aad
repnz
movs
retf
jae
shr
and
mov
cmps
mov
test
mov
stos
dec
mov
pop
ror
jno
test
inc
lods
shr
and
loope
ffreep
mov
stos
jg
not
das
dec
and
push
cmps
and
mov
jnp
int3
jp
xchg
xor
(bad)
sbb
mov
push
in
mov
loope
js
or
ss
push
sub
pop
imul
cdq
jg
das
xor
repnz
push
sub
icebp
mov
out
lods
cmc
inc
pop
test
mov
aas
jbe
xor
lock
add
mov
dec
add
icebp
cmc
pop
jns
addr16
js
push
and
sub
mov
pushf
test
dec
js
hlt
es
aad
adc
mov
arpl
inc
es
pushf
imul
aaa
add
int3
mov
jmp
idiv
icebp
xor
cdq
pop
rcr
push
xchg
and
fdiv
adc
ret
sti
mov
sbb
and
pop
iret
xor
std
mov
adc
dec
mov
push
test
outs
or
loope
xchg
stc
mov
cmp
(bad)
not
es
pop
dec
mov
in
lock
add
adc
test
(bad)
push
lods
push
fdivp
fcmovu
mov
fdiv
fsub
adc
jmp
scas
sub
leave
std
mov
mov
mov
cmps
dec
ror
jmp
xor
fldcw
pop
dec
fild
mov
cmp
repnz
mov
mov
jae
movs
adc
lods
xchg
adc
sbb
fwait
push
retf
push
aaa
data16
mov
pusha
scas
out
call
cmps
xor
xor
xor
mov
inc
xchg
popf
out
inc
call
clc
push
in
into
adc
(bad)
and
cmp
loope
out
or
cmp
mov
out
xchg
mov
xchg
jno
mov
jb
push
sub
movs
lahf
push
xor
shl
push
sub
shl
push
push
ds
dec
imul
es
mov
cmc
fadd
jns
int3
lahf
xor
fnstsw
sbb
sub
jne
inc
(bad)
iret
or
pop
xchg
ret
cmp
jg
jo
add
xor
jle
ins
pop
lods
das
mov
xchg
pop
dec
lods
test
fcom
pusha
push
test
enter
repnz
inc
cmp
shl
imul
ds
pop
sub
adc
sub
(bad)
xchg
jp
jo
jmp
call
push
fidiv
sar
lock
inc
rcl
in
sub
xchg
test
pop
push
push
mov
daa
aaa
mov
or
mov
dec
or
sub
mov
or
(bad)
jnp
or
pop
adc
xor
les
pushf
dec
sub
add
push
dec
stc
sub
outs
push
sti
pop
jg
aaa
fild
loopne
std
mov
jne
fwait
dec
icebp
ror
mov
pxor
gs
sbb
outs
dec
bound
push
out
pop
gs
adc
cwde
jge
(bad)
pop
cmc
cwde
xor
dec
pusha
in
push
stos
ret
ror
push
inc
cdq
ffree
mov
int3
push
add
lahf
cld
adc
(bad)
inc
jp
and
ret
(bad)
arpl
(bad)
xchg
mov
mov
inc
sub
and
sub
jne
mov
fs
xchg
mov
mov
jl
or
push
pushf
adc
xchg
aad
xor
je
push
mov
mov
push
fdiv
inc
mov
mov
nop
and
daa
cmp
mov
xor
js
aaa
stc
push
xchg
pop
sbb
ins
xor
jae
aaa
jns
and
jnp
mov
xchg
adc
dec
mov
addr16
jle
inc
ret
pop
repz
(bad)
jp
cmp
and
cmp
fisttp
mov
dec
adc
inc
sbb
push
call
outs
mov
adc
jo
int
push
fucomp
jg
adc
sbb
sti
cmps
aam
jge
cdq
inc
es
popf
test
arpl
lea
sbb
jb
ja
cli
fstp
movs
(bad)
movs
push
mov
pop
adc
mov
scas
ins
push
or
jg
sbb
add
mov
mov
pop
mov
cld
scas
push
jo
sbb
pop
adc
push
xchg
data16
fdiv
jl
test
shl
xchg
popf
inc
or
mov
jmp
js
in
lds
sbb
xor
es
lahf
(bad)
out
ins
in
mov
bound
daa
into
iret
ss
les
dec
addr16
adc
jl
add
add
iret
inc
ss
jae
mov
(bad)
xchg
dec
hlt
fnsave
aad
push
retf
test
fwait
ret
movs
(bad)
shl
jnp
pop
mov
inc
push
rcl
pop
pop
jno
pop
jnp
inc
stos
sahf
retf
or
jl
push
fimul
int3
leave
inc
pusha
cmp
push
pop
adc
mov
fs
sbb
push
pop
mov
fwait
sbb
ins
mov
adc
sub
call
push
fnsave
xchg
xor
retf
clc
jbe
mov
dec
call
push
out
cmps
dec
jmp
xchg
stos
adc
jge
test
and
ja
add
sbb
add
pop
daa
pop
xchg
imul
dec
lea
stc
js
mov
jl
test
add
add
push
sub
mov
nop
fisttp
movs
stc
jbe
mov
mov
jns
adc
pop
jp
jg
cmp
or
inc
add
cwde
xor
dec
sbb
dec
js
push
outs
or
lds
imul
jge
(bad)
push
in
lahf
hlt
fiadd
push
out
pop
stc
imul
xchg
inc
cdq
mov
cs
popa
adc
jmp
pop
test
mov
aaa
sbb
and
arpl
inc
sub
in
int3
xlat
jg
lods
clc
call
push
rcl
sbb
fcomip
in
xchg
jg
retf
sar
sub
xor
icebp
addr16
pop
stc
pop
jmp
jle
cmp
out
cmp
in
cmp
bound
ret
lods
dec
cmc
mov
test
ret
jns
mov
adc
lods
stc
xchg
xor
shl
(bad)
std
in
xor
push
loopne
into
cmp
dec
mov
xchg
ret
fld
fiadd
fstp
xor
push
test
mov
pop
or
adc
mov
pop
das
jbe
xor
loop
xor
inc
cmc
cmp
sbb
cmp
mov
iret
fdivr
in
jl
retf
sub
jae
push
ss
jl
sbb
push
mov
dec
movs
aaa
pop
and
jmp
shl
push
xor
cmc
mov
(bad)
xchg
lock
mov
fisub
lock
inc
mov
movs
into
jmp
cld
xchg
mov
ins
push
jo
mov
mov
jmp
sti
std
and
iret
cmp
imul
std
sbb
in
adc
enter
ins
sbb
aas
jmp
pop
pop
push
ds
or
out
(bad)
jp
pop
(bad)
out
pop
aaa
mov
inc
fs
cs
pop
mov
iret
dec
test
int3
xchg
or
mov
(bad)
popa
push
popa
mov
jmp
outs
mov
jno
jns
inc
imul
les
std
push
fimul
neg
adc
(bad)
sbb
arpl
repz
out
std
retf
bound
outs
aaa
int3
aad
cmp
jecxz
xor
mov
dec
je
inc
test
push
aas
sub
ret
aad
std
ds
(bad)
loope
loopne
arpl
mov
cmp
xchg
cmp
loope
(bad)
rol
push
inc
mov
xchg
rcr
push
ins
push
arpl
sar
jbe
inc
adc
jg
retf
or
test
xchg
daa
ins
loope
jle
mov
not
mov
(bad)
push
mov
and
cmp
add
ins
(bad)
mov
mov
push
ds
pop
sub
ret
je
hlt
push
inc
inc
jns
call
sbb
push
mov
cmc
enter
les
sub
jle
sbb
mov
sub
cli
(bad)
or
int3
and
ret
out
cs
out
std
and
aam
repz
xchg
imul
jb
repz
stos
cmp
and
cmp
push
push
or
push
mov
arpl
iret
iret
ins
mov
aam
jo
(bad)
cmp
lds
loop
rol
jnp
clc
aaa
lods
mov
sar
sub
or
js
push
xchg
ins
ins
jecxz
jp
test
dec
pop
es
js
addr16
mov
loop
mov
nop
and
in
ret
xor
mov
jno
and
inc
fs
out
psraw
or
cdq
out
jno
test
cmc
jo
sbb
pusha
dec
adc
jl
inc
mov
jae
movs
and
in
add
add
add
push
outs
push
test
data16
dec
adc
adc
fs
mov
sub
ror
repz
cmp
ror
test
inc
lds
loopne
adc
cmp
in
rcr
ins
mov
mov
outs
inc
mov
mov
sar
retf
push
gs
fdiv
fdiv
pop
push
or
scas
mov
cmp
mov
sbb
xor
mov
popa
or
psllw
mov
adc
jae
out
pop
idiv
data16
dec
mov
sub
push
push
mov
test
test
dec
xor
retf
scas
rol
(bad)
xchg
xor
push
fcmovnb
jne
repz
fcmovnbe
pushf
and
ss
push
ret
repnz
aaa
fidivr
sbb
movs
fnsave
or
dec
or
cmp
movs
test
enter
xlat
cmp
jg
pop
or
xchg
mov
sub
iret
fdiv
add
sbb
es
bnd
call
adc
ds
sbb
test
pusha
ss
call
das
mov
mul
pop
xor
or
or
mul
call
int
fs
dec
int3
push
icebp
repnz
sub
call
xchg
mov
jo
cdq
add
add
jne
dec
shld
adc
outs
jle
push
xchg
mov
push
sar
retf
out
cdq
nop
call
sub
pop
mov
lods
rcl
or
jae
mov
inc
rol
lods
jne
icebp
jle
sti
outs
ret
inc
add
jno
cmp
ss
pop
mov
mov
lods
mov
mov
inc
std
xor
inc
mov
test
pop
mov
cmp
retf
test
lods
rcl
adc
xchg
adc
pop
jmp
mov
imul
jmp
mov
in
inc
call
sbb
mov
ret
mov
add
lods
sub
or
mov
sar
leave
es
sub
clc
mov
out
jne
xchg
mov
ror
adc
in
cdq
and
aam
push
mov
xlat
sbb
stos
repnz
adc
mov
in
js
mov
sub
fdivr
jns
ins
mov
or
aam
les
cmp
in
inc
adc
mov
mov
mov
in
sar
test
stos
ja
push
mov
call
fwait
mov
push
pop
adc
(bad)
pop
cmps
cmp
mov
or
test
test
mov
clc
push
je
fwait
inc
imul
repnz
cmp
and
dec
mov
mov
and
mov
jbe
xor
inc
loopne
push
jl
imul
jmp
scas
push
dec
xchg
call
mov
hlt
js
ret
xor
or
addr16
ins
imul
cdq
add
and
cmp
pop
xor
outs
push
stc
sub
mov
repz
(bad)
hlt
dec
add
cmp
(bad)
xchg
mov
sub
xchg
inc
icebp
nop
test
cmps
adc
cmp
ja
cdq
mov
xor
pop
pop
loopne
mov
mov
arpl
ins
(bad)
pop
jns
mov
jae
sub
loope
or
dec
cmp
mov
inc
(bad)
ins
sbb
jno
test
fcomp
inc
pop
xchg
dec
jne
add
mov
pop
mov
dec
stos
push
mov
add
shl
dec
inc
in
push
(bad)
xlat
jge
add
je
int
sub
ret
pop
pop
or
popf
cmp
enter
dec
or
in
jle
or
jl
sbb
cmp
push
ins
lahf
push
dec
inc
into
pusha
sub
jp
mov
sub
xchg
mov
clc
mov
cmc
add
inc
and
pop
push
sysenter
jno
pop
and
jge
sub
leave
cmp
test
leave
sub
lea
xchg
or
sub
(bad)
jl
shl
add
outs
adc
push
mov
push
push
loopne
movs
pop
push
jmp
into
(bad)
mov
fs
inc
dec
nop
popa
imul
test
pop
(bad)
jmp
mov
mov
cmps
stos
mov
pop
inc
ss
(bad)
sub
cmp
repnz
push
push
push
fisttp
nop
dec
xchg
gs
mov
pusha
jb
pop
out
dec
gs
bound
jecxz
sub
sub
aam
mov
lods
fisttp
iretw
int3
pop
test
push
sbb
mov
fild
mov
cmp
adc
out
jo
inc
adc
mov
or
pushf
xor
lock
sti
aad
arpl
(bad)
fnstcw
int
pop
in
imul
retf
pop
aam
sub
fnstcw
imul
cmp
cli
ins
mov
dec
cmp
push
sub
std
sub
jo
pop
inc
cmp
jo
sub
das
popf
jp
xchg
jns
inc
bound
push
in
push
mov
test
fisttp
dec
xchg
fisubr
and
xchg
int
cmp
mov
pop
jmp
mov
xor
pop
arpl
(bad)
jns
and
or
call
outs
push
cmp
faddp
and
ins
iret
sub
(bad)
sub
pop
inc
ret
loope
and
dec
repnz
jl
and
shl
cmps
fimul
sub
fiadd
jmp
pop
jo
or
test
pop
das
mov
jl
das
sub
ret
jg
cwde
xor
js
xor
nop
stos
lods
jnp
loop
je
aam
inc
sar
loop
xor
ret
popa
add
xchg
mov
sub
(bad)
hlt
enter
sahf
inc
jmp
(bad)
mov
loopne
data16
(bad)
jmp
add
or
sbb
pop
in
aad
scas
ret
jne
cmp
aaa
sbb
test
shr
mov
stc
repz
push
out
pop
gs
xchg
or
push
mov
sbb
in
aas
mov
lahf
sbb
cdq
jae
fdiv
repnz
dec
push
cmp
retf
cmps
outs
cwde
xor
push
out
lock
movups
add
add
jnp
lods
jno
scas
stos
xchg
fstp
cmp
push
lods
and
and
fist
inc
inc
stc
popa
cdq
inc
fdiv
ret
cwde
aas
ins
push
into
(bad)
cld
call
rcr
push
sub
xchg
pop
cmps
xchg
cmp
dec
(bad)
in
rol
xbegin
adc
pop
pushf
out
(bad)
adc
cmp
shl
pop
stc
int
add
(bad)
int
cmp
inc
sub
pop
cmp
adc
outs
or
cmp
jmp
cmps
xchg
push
cli
cmps
xor
cmp
add
out
clc
inc
mov
pop
call
fmul
adc
pop
test
push
or
sub
cwde
mov
pop
addr16
in
or
inc
enter
or
add
daa
ficomp
mov
(bad)
rol
repz
pop
cmp
inc
sbb
sub
leave
mov
clc
xchg
out
ds
aas
shr
aas
sub
ficomp
int
xor
aaa
pusha
repnz
pop
mov
xlat
fcmovne
(bad)
jl
ret
(bad)
mov
mov
jmp
out
mov
rol
push
leave
xor
enter
add
adc
pop
sahf
mov
pop
jp
sub
sbb
loop
mov
js
aas
leave
mov
or
or
add
cdq
mov
pop
repz
sbb
sub
sbb
jge
cmp
unpckhps
and
push
dec
aad
adc
cmp
jge
dec
add
je
push
rcl
jb
inc
pop
cmps
icebp
mov
pop
int
mov
dec
xchg
jmp
dec
retf
adc
test
xchg
adc
out
add
aaa
dec
into
sbb
sahf
push
mov
test
ins
dec
push
or
nop
ret
xlat
inc
jb
scas
push
xlat
dec
popa
popf
push
jae
pop
xchg
add
(bad)
in
push
pop
nop
adc
aam
cmp
xlat
nop
cmc
jmp
and
push
push
cmps
push
and
jb
add
jge
pop
call
fisubr
mov
(bad)
mov
xor
ds
and
mov
int3
out
jl
mov
ficom
add
pop
in
mov
jo
lock
cmp
mov
(bad)
fldenv
iret
clc
xor
(bad)
sub
jg
or
inc
and
lea
jne
loope
pop
pop
shl
push
out
xchg
jmp
test
div
xor
ja
mov
xchg
cmc
out
and
rol
fs
pop
fcom
jle
inc
daa
jo
inc
bound
bound
cmps
data16
fcom
xor
loopne
xor
out
mov
fmul
mov
inc
js
(bad)
jbe
(bad)
movs
dec
jmp
outs
mov
push
cmp
jns
sub
xchg
and
aam
cmp
neg
push
or
movsx
ret
mov
pop
mov
mov
je
sahf
pusha
xlat
pusha
jbe
addr16
loope
jp
push
int
out
xlat
mov
cmp
enter
cmc
(bad)
ins
adc
(bad)
enter
inc
xor
jns
outs
pushf
rol
push
fnsave
aaa
fimul
push
pop
ss
fisub
push
ret
push
int3
repz
aam
pop
repz
push
ficom
xlat
lahf
test
mov
ja
fs
cmp
inc
nop
push
xchg
xchg
ss
rcr
aas
call
js
dec
xchg
out
ret
aam
dec
sbb
cld
ins
mov
mov
add
mov
mov
mov
retf
(bad)
dec
xchg
pop
outs
inc
int3
push
pop
lahf
pusha
and
push
push
pop
lods
test
test
dec
inc
jnp
push
cmps
sbb
movs
cmp
mov
jmp
adc
rol
mov
in
gs
cmp
(bad)
push
xor
jecxz
mov
pop
adc
popa
cmps
push
sbb
pop
test
fldenv
xor
push
ja
jns
inc
mov
loopne
inc
(bad)
movs
ja
in
mov
std
fbld
sub
xchg
test
fidiv
(bad)
push
pop
add
pop
sbb
xor
xor
sahf
lods
mov
xchg
ffree
adc
cmc
mov
add
sbb
cmp
inc
mov
inc
mov
ja
nop
ret
ds
stc
mov
in
push
xchg
pop
and
push
pop
jl
jne
(bad)
pop
int
sar
sub
add
jo
push
setge
movs
inc
cwde
mov
out
jmp
lods
or
pop
xlat
and
jns
stc
(bad)
push
push
ins
xchg
sub
bound
popf
and
adc
pop
push
and
popa
ins
mov
mov
dec
mov
(bad)
jg
ja
lods
push
adc
fistp
lahf
push
mov
aaa
xchg
push
nop
jbe
add
in
fist
xlat
push
pop
cmp
mov
jmp
pop
jmp
in
inc
call
fst
in
in
ret
pop
dec
sahf
push
xchg
ins
outs
mov
inc
mov
push
add
shl
test
retf
stos
call
pop
movs
mov
pop
loope
add
push
(bad)
shl
shl
pop
mov
out
inc
pop
fdivr
sar
loopne
out
(bad)
adc
jmp
mov
or
aas
and
and
test
cmp
loopne
sub
sahf
mov
mov
mov
sbb
and
xchg
push
cmp
popa
inc
popa
or
rcr
jae
jecxz
les
mov
das
add
arpl
add
jmp
icebp
jnp
and
(bad)
loopne
ss
or
cmp
mov
jns
das
push
nop
dec
adc
pop
rcr
lock
or
sbb
pop
jmp
stos
dec
fmul
jecxz
push
ret
and
out
dec
cmc
add
xchg
fwait
aaa
sub
sub
xchg
call
mov
dec
lods
clc
mov
out
inc
or
push
xchg
mov
mov
push
mov
cmp
out
int3
mov
neg
(bad)
out
mov
das
(bad)
mov
mov
add
xor
sub
fisttp
jmp
inc
or
xor
push
push
inc
retf
shr
sbb
aaa
pop
mov
sbb
inc
imul
(bad)
xchg
mov
cmp
not
lahf
mov
mov
movs
cdq
adc
imul
scas
(bad)
or
mov
pop
jae
ret
xor
jnp
aaa
nop
in
cli
cmps
jge
jg
mov
sar
ret
std
lock
pop
xlat
mov
test
xchg
inc
cmp
js
jb
into
xor
or
ss
call
push
sbb
pop
lods
ret
stos
out
in
pop
mov
into
out
sub
(bad)
loopne
sbb
aam
sbb
not
outs
retf
jno
in
out
add
movs
inc
stc
sahf
loopne
dec
inc
lock
cmp
add
mov
cmp
sbb
ret
jmp
out
and
clc
in
push
repnz
mov
pop
dec
popa
movs
sti
in
pop
lea
ds
out
sub
popf
data16
mov
push
push
add
mov
fsub
movs
ins
jnp
add
(bad)
movs
jne
mov
das
outs
call
test
jmp
push
jle
add
dec
xchg
test
lahf
cmp
jae
add
jmp
pop
in
test
cli
jo
js
(bad)
jae
aam
mov
mov
data16
fnstsw
pop
lods
leave
pop
lock
xor
inc
ds
(bad)
jo
xor
scas
jge
mov
(bad)
retf
arpl
mov
adc
sub
sbb
inc
jp
cmps
sub
push
pop
add
xor
enter
or
popf
sbb
jmp
ret
int3
scas
shr
ins
push
icebp
inc
sub
mov
pop
inc
nop
fabs
int3
mov
ds
fst
push
dec
test
es
in
jmp
movs
adc
mov
jb
push
aad
cmps
jle
cmps
dec
sbb
pop
jbe
cmps
mov
xor
mov
dec
retf
icebp
dec
push
(bad)
mov
mov
add
sbb
pop
es
pop
xchg
sbb
das
jo
and
dec
clc
xchg
sub
xor
or
js
gs
pop
mov
push
(bad)
les
in
(bad)
lock
in
(bad)
les
jno
js
clc
cdq
push
bound
pop
jo
sub
out
inc
inc
fdivr
shl
mov
rcl
push
push
pop
pop
push
cmp
pop
cs
push
pop
loope
mov
xor
fstp
dec
fdiv
or
lods
jmp
nop
imul
mov
arpl
push
nop
add
mov
mov
leave
and
cld
mov
jmp
push
inc
push
sub
into
(bad)
scas
push
mov
(bad)
les
add
jbe
sbb
sbb
mov
mov
mov
je
pop
add
retf
adc
and
xchg
or
inc
clc
sbb
scas
or
call
fdivp
cmp
lods
jo
test
inc
outs
mov
or
stos
pop
mov
std
inc
xchg
add
push
mov
push
ror
ins
sar
into
out
ret
js
jbe
fs
fwait
add
hlt
loop
and
ja
xchg
dec
or
call
clc
cld
call
mov
mov
pusha
gs
call
xchg
xor
loop
jbe
pop
lods
jnp
test
addr16
adc
loop
daa
and
mov
jbe
loopne
fs
cmp
xor
xor
movs
sub
enter
jns
adc
mov
xor
std
fs
xor
pop
pop
jg
retf
stos
jae
out
mov
addr16
push
inc
pop
mov
xchg
cwde
xor
in
inc
push
xchg
lock
imul
lds
pop
push
cmp
sub
xchg
popa
push
xor
push
lods
aam
scas
(bad)
(bad)
movs
lahf
mov
retf
dec
push
jmp
inc
mov
cld
mov
jae
stc
jo
(bad)
push
xchg
inc
out
add
and
jp
pop
fidiv
ror
mov
into
sbb
mov
inc
xchg
and
push
jp
data16
shl
nop
dec
in
sti
add
shl
jnp
and
cmp
outs
(bad)
clc
fisubr
inc
call
xor
mov
ret
push
icebp
jns
xchg
and
pop
jmp
test
mov
sub
jl
sub
add
mov
cwde
sbb
hlt
push
fcom
or
ss
jmp
xchg
(bad)
sub
jmp
mov
xchg
imul
movs
jmp
inc
mov
or
enter
cmp
pslld
add
es
lds
mov
mov
cmp
iret
mov
in
daa
dec
xchg
jns
dec
xlat
mov
lea
push
stos
data16
dec
fldcw
and
mov
fild
dec
cmc
cvtpi2ps
xchg
cmp
xchg
outs
and
rcr
cmp
push
out
and
(bad)
cmp
imul
dec
jmp
ins
pop
cmp
(bad)
dec
dec
ss
iret
or
jge
push
ins
push
jl
aas
out
or
pusha
imul
mov
pop
dec
xchg
rol
and
imul
mov
test
repz
loop
xchg
movs
sub
loopne
pop
mov
sub
xchg
jbe
les
retf
icebp
jnp
sub
mov
dec
push
ror
movs
retf
(bad)
and
add
inc
bound
pusha
dec
imul
test
pushfw
jle
jnp
outs
or
test
(bad)
mov
add
icebp
test
sti
adc
test
cmps
ret
icebp
jmp
(bad)
cli
jle
jnp
rol
shl
imul
imul
xor
mov
(bad)
pop
or
ins
xchg
icebp
xor
dec
jnp
jmp
test
ffreep
mov
icebp
mov
push
jle
sbb
sub
jo
adc
push
xor
pop
scas
sbb
pusha
shl
pop
adc
or
pop
ins
int
lock
cmc
pop
sub
pop
sub
in
inc
ja
pop
ror
cli
cdq
dec
add
das
lahf
push
xor
lods
xor
les
lods
sti
jb
push
cs
jle
mov
add
bound
jg
mov
pop
popf
mov
in
les
push
xchg
adc
mov
jae
loope
or
aas
cmc
and
pop
and
out
adc
sub
mov
push
lahf
push
pop
sahf
stc
fisttp
xor
xor
xor
xor
int
icebp
rep
push
loop
out
ret
mov
loope
xor
fs
jno
test
jmp
fsubr
mov
cmps
cmp
jae
mov
lds
or
sar
es
out
call
xchg
mov
mov
(bad)
aam
movs
nop
and
ins
cmp
jmp
imul
inc
xchg
pop
fmul
mov
mov
xchg
fnstenv
xor
jle
add
xchg
(bad)
sahf
cmp
sbb
fisubr
test
xchg
aad
sbb
push
add
xchg
xchg
into
dec
ficom
ins
cmc
sub
push
into
in
pusha
mov
cmp
(bad)
aam
xor
fdiv
or
call
(bad)
sar
mov
and
scas
inc
mov
cmp
add
inc
mov
int3
dec
dec
cmps
lods
inc
icebp
out
jnp
mov
dec
mov
in
in
aam
test
lea
jno
movs
sti
cld
retf
mov
mov
pop
call
in
and
cdq
ins
cdq
inc
mov
sub
aas
inc
mov
fdivr
or
adc
push
std
cmps
cmp
add
pop
sar
mov
dec
ins
mov
ins
jle
scas
sub
std
dec
mov
sub
jle
mov
ins
adc
push
pop
stc
or
pop
mov
loop
add
icebp
sub
jno
cmps
(bad)
xlat
jae
mov
cld
jg
fsubr
fcomp
addr16
dec
into
mov
popf
inc
loop
pusha
adc
ret
or
retf
jmp
dec
jb
fisubr
sub
and
pop
test
push
test
or
fmul
aam
or
dec
retf
cwde
sub
es
mov
fprem
(bad)
mov
push
dec
push
dec
lock
adc
inc
aas
or
dec
cmp
div
push
ds
fwait
lahf
pop
(bad)
xchg
jb
or
sbb
fistp
imul
dec
mov
loopne
dec
in
(bad)
cld
pushf
xlat
jg
test
or
push
pop
or
cmp
cwde
push
pop
push
dec
scas
fs
cmp
add
cld
xchg
out
mov
adc
adc
pop
in
(bad)
loop
fnsave
ss
movs
pop
sbb
inc
sub
dec
cs
out
ret
ja
cmp
(bad)
outs
sbb
cli
jo
pusha
int
jge
fldcw
cmp
ja
stc
(bad)
jge
int
push
fimul
or
cli
pop
pop
dec
mov
pop
dec
test
ror
loope
pop
data16
(bad)
out
pop
push
jno
je
into
sbb
aas
sahf
(bad)
retf
mov
cmps
clc
push
retf
fbld
mov
repz
pushf
fisub
das
cmps
jmp
jne
inc
pop
push
into
sub
pop
mov
cmp
mov
push
mov
ins
cmp
rol
add
mov
adc
inc
dec
cmp
cmp
cmp
div
mov
pushf
inc
cmp
test
push
stos
leave
cmp
imul
and
dec
lea
jg
fiadd
jge
lods
jmp
mov
jmp
test
mov
adc
and
pop
or
pushf
mov
and
and
ss
sar
jbe
cmp
mov
xchg
push
dec
fdivp
cdq
ins
mov
(bad)
(bad)
ds
call
push
mov
adc
push
mov
aas
(bad)
push
jns
icebp
ins
jp
fisubr
retf
and
fadd
pushf
lock
mov
arpl
adc
dec
or
sar
retf
cmps
jp
(bad)
call
aam
inc
outs
inc
adc
call
sbb
jnp
jecxz
movs
cmps
jmp
imul
out
jno
aam
push
loopne
cmp
(bad)
ja
stos
pop
push
test
iret
icebp
jnp
jecxz
inc
mov
test
sbb
popf
and
in
inc
into
lods
pop
sub
in
and
out
push
fcom
push
loop
pop
(bad)
jmp
stc
pop
add
ret
and
adc
dec
pop
jne
sub
retf
nop
adc
jo
stc
push
test
sbb
add
cld
leave
fcom
cmp
std
jo
cmp
xor
adc
xor
jb
push
out
mov
cdq
inc
mov
aas
xchg
loop
xor
shl
xchg
lahf
jge
dec
movs
pop
inc
test
in
jno
repz
push
push
cmp
in
pop
push
pop
add
jmp
jmp
test
into
lea
dec
imul
cld
or
ficomp
pop
pop
pop
and
xor
push
mov
jmp
outs
ror
test
and
ret
pop
and
inc
adc
pop
test
stos
popa
imul
sar
cmp
jnp
js
ror
adc
push
inc
shl
mov
sahf
dec
cmps
pop
cmp
mov
dec
lock
stc
int3
or
mov
out
mov
into
test
test
xchg
sub
movs
push
pop
jg
enter
push
loope
test
jno
xor
or
clc
push
inc
push
pmullw
repz
icebp
xchg
retf
outs
mov
retf
push
xchg
adc
cmps
mov
aam
mov
movs
cdq
push
push
mov
lods
add
mov
cmp
jmp
pop
mov
jae
or
mov
mov
out
int
ret
cmps
jnp
pop
jb
push
mov
xchg
pop
popf
aaa
aad
xchg
push
cwde
xchg
out
jb
(bad)
pop
or
jge
fmul
repz
mov
outs
aam
adc
sti
outs
mov
adc
dec
push
and
pop
sbb
ja
add
stc
loope
adc
in
inc
mov
popf
xchg
add
push
lock
out
in
cmp
mov
and
leave
cmp
cli
mov
push
jg
leave
mov
ret
sti
vandpd
xlat
pop
or
sbb
xchg
aam
xchg
inc
les
inc
dec
les
cmc
mov
lds
das
out
or
sbb
and
mov
shl
call
fbld
scas
stc
arpl
int
repz
retf
fild
into
push
mov
enter
jne
mov
sar
mov
dec
push
inc
or
push
ret
out
adc
mov
xor
jl
jle
push
xchg
int
push
sub
in
adc
out
mov
enter
mov
mov
cmc
(bad)
int3
push
mov
ret
add
test
mov
dec
and
mov
mov
loopne
and
dec
shl
outs
sub
adc
(bad)
and
mov
pop
mov
ins
fsub
addr16
xor
loop
outs
xor
dec
sbb
lock
sbb
push
dec
mov
fsub
jl
(bad)
push
xor
push
pop
and
in
jge
inc
cmp
out
rol
push
dec
mov
daa
mov
inc
xor
mov
fild
mov
not
rcr
icebp
fisttp
(bad)
ins
int
rcl
inc
push
mov
movs
test
pop
cmc
fld
(bad)
movs
sub
leave
mov
in
outs
mov
dec
pand
icebp
adc
xor
xchg
dec
pop
lock
movs
rcr
inc
stc
popf
add
mov
retf
push
es
std
repz
ret
push
push
cli
dec
mov
movq
and
iret
scas
cmc
add
pop
test
pop
sub
jge
or
nop
popf
fwait
stos
mov
and
lods
in
daa
not
out
sbb
idiv
sbb
les
daa
(bad)
jmp
mov
cdq
adc
outs
into
jl
movs
ja
into
pop
rcr
sbb
mov
mov
cmp
or
cmp
sar
mov
add
enter
cmp
ffreep
mov
mov
shr
inc
push
sbb
dec
pusha
and
push
sub
imul
je
xor
ja
mov
add
jecxz
sbb
and
sar
push
test
test
fild
aas
fisubr
inc
mov
sbb
test
cmp
mov
faddp
ret
in
ret
cmp
arpl
rol
imul
cmp
sahf
outs
call
loope
into
push
or
ds
pop
pop
loopne
rol
fdivr
xor
push
shl
adc
cmc
out
adc
pop
push
inc
(bad)
gs
popa
lods
xor
outs
sbb
jae
int3
adc
pop
outs
pop
lahf
push
cmc
push
stos
push
mov
mov
cmp
jmp
and
or
rol
xor
cmp
rol
sub
adc
loopne
cmp
adc
jmp
xor
dec
inc
dec
test
pusha
(bad)
mov
push
push
jg
fiadd
icebp
retf
add
dec
inc
inc
or
push
test
mov
fmul
test
and
es
loope
jecxz
inc
stc
outs
retf
cmp
jbe
adc
loop
dec
xchg
pop
mov
outs
mov
repz
es
cmp
dec
mov
sbb
mov
inc
test
sub
(bad)
pop
rol
in
test
stos
cmp
mov
push
xor
imul
mov
inc
loopne
sub
or
mov
retf
lds
pop
out
mov
xchg
pushf
(bad)
mov
and
xchg
or
xor
mov
shr
loopne
xor
cmp
adc
leave
push
inc
cdq
fisttp
test
mov
xchg
in
xchg
dec
add
ret
mov
sbb
es
mov
jle
dec
add
rcl
sub
add
outs
xchg
(bad)
in
js
int3
or
ror
pop
or
push
cmps
add
loope
add
cmp
les
lds
or
inc
adc
dec
jge
in
int3
xchg
popa
retf
pusha
jb
icebp
test
jmp
jnp
loop
mov
mov
inc
mov
xor
xchg
(bad)
add
(bad)
lods
shr
sbb
add
dec
cmc
repnz
cld
in
mov
xchg
cmc
std
cmc
sbb
push
pop
(bad)
repnz
adc
xchg
or
pop
dec
stos
ret
adc
es
movs
fs
adc
mov
mov
stos
push
pop
jl
push
push
jp
mov
xor
push
fstp
jnp
div
movs
mov
adc
clc
sub
std
push
daa
imul
or
outs
mov
out
(bad)
xchg
mov
test
ret
out
push
jle
xchg
dec
bound
movhlps
inc
mov
in
dec
inc
mov
adc
retf
and
inc
and
test
(bad)
mov
jnp
push
fild
push
add
lods
sub
movs
mov
(bad)
push
jle
xor
(bad)
sar
lods
xchg
nop
mov
mov
xor
out
jae
shr
call
ins
sti
cmp
dec
cmp
cmp
nop
popa
(bad)
pop
pop
add
ret
outs
pop
and
sbb
pop
jo
leave
fisub
mov
das
cmp
retf
and
xor
lea
pop
(bad)
fwait
xor
adc
mov
ins
test
and
ss
cs
call
fisttp
jle
push
jne
adc
mov
lahf
sahf
outs
cmp
jbe
lock
ins
std
hlt
nop
fst
mov
mov
data16
add
xchg
or
aam
pop
inc
xchg
push
xor
pop
jmp
fcmovb
cmps
jo
lods
sub
mov
add
push
daa
push
add
test
sbb
jae
dec
mov
fst
cmp
(bad)
(bad)
fdivrp
loopne
push
sub
xor
in
dec
ror
jmp
sbb
push
ret
outs
popa
mov
cmc
imul
jmp
sbb
and
cmp
(bad)
fst
push
movs
dec
call
push
mov
fwait
cdq
std
(bad)
div
cs
aad
(bad)
xchg
cld
fidiv
data16
aam
cld
cmps
jge
or
xchg
int
mov
xlat
ror
dec
sub
lods
mov
sar
jg
out
push
wbinvd
xor
pop
ins
pop
movs
push
stos
stos
sahf
mov
stc
add
loopne
sbb
retf
movs
mov
inc
shl
fwait
cdq
jle
mov
das
xlat
pusha
push
mov
mov
mov
mov
test
and
sti
mov
adc
icebp
int3
inc
inc
sbb
mov
mov
fsubr
pop
scas
sar
mov
and
dec
sub
loope
popf
rcl
pop
ret
inc
ret
aad
retf
rcr
sbb
fnstenv
mov
jg
adc
push
push
adc
leave
inc
stos
push
dec
hlt
sub
hlt
popa
retf
adc
jmp
jbe
call
xchg
push
xchg
(bad)
sub
test
pop
add
sub
and
les
(bad)
cli
cli
outs
loop
mov
in
sbb
stos
aas
cs
retf
arpl
mov
mov
jge
je
add
es
add
cwde
mov
mov
xchg
fdiv
jle
mov
data16
lods
mov
pusha
mov
ss
xor
jmp
stos
mov
fs
add
repz
sub
adc
dec
outs
push
cld
idiv
fs
(bad)
aam
or
dec
mov
push
adc
fucomp
sahf
mov
add
popa
in
jmp
repz
mov
jmp
cmp
stc
xchg
(bad)
test
mov
mov
sbb
jle
movs
inc
jl
std
dec
xor
fistp
dec
les
jp
cmps
pop
jno
inc
lea
dec
pop
mov
data16
xchg
and
adc
test
lods
lahf
inc
pushf
or
cli
inc
test
pop
mov
mov
add
repnz
nop
in
sbb
jmp
inc
imul
xchg
lds
lods
inc
inc
xchg
push
jmp
jns
mov
pop
outs
pop
clc
xchg
popf
ja
xchg
out
sar
popa
push
fnstenv
cmp
pop
mov
std
std
iret
pop
add
ja
push
cld
or
sbb
ret
outs
cmc
aam
jno
ret
push
sbb
push
sbb
movs
or
fisttp
neg
scas
lahf
or
jl
inc
cmp
inc
add
sub
dec
mov
(bad)
mov
popf
lea
in
imul
in
js
inc
stos
div
aas
push
(bad)
retf
imul
mov
cmps
pop
inc
aam
std
xchg
stc
inc
(bad)
sub
fs
int
int3
mov
push
lock
cmp
call
mov
leave
push
inc
mov
dec
pop
add
sbb
jmp
inc
ret
sahf
sbb
xchg
add
sbb
lods
sub
push
sbb
cmps
adc
call
fistp
loopne
jbe
test
xor
inc
sbb
dec
gs
stc
pop
push
sub
dec
and
mov
shr
out
daa
test
pop
dec
fsubr
adc
jmp
pop
repnz
repnz
cmp
std
push
(bad)
aam
dec
call
mov
cmc
jmp
fisubr
das
dec
ficom
or
and
dec
lahf
scas
sbb
pop
movs
fwait
add
imul
addr16
pop
xchg
retf
mov
cmps
shl
pop
push
xchg
mov
xchg
push
mov
jge
xor
mov
dec
jne
xchg
les
retf
xchg
mov
daa
push
cmp
and
cli
cmp
sbb
add
pop
sar
stos
pushf
aad
pop
pop
adc
fst
xchg
sub
jne
pop
mov
pop
or
sbb
scas
cli
test
fild
call
jmp
push
sbb
out
and
inc
add
jmp
xchg
sbb
and
clc
call
cli
test
imul
(bad)
adc
std
xchg
cmps
sbb
cli
mov
fmul
xchg
sub
jb
int
push
sbb
or
imul
inc
xchg
push
push
sub
sub
xor
test
dec
fwait
retf
jae
loop
pop
cwde
ss
jb
jae
data16
or
pop
sub
mov
lods
inc
mov
lods
cmp
and
call
xchg
mov
inc
mov
add
mov
ins
xchg
mov
sbb
fstp
xor
cdq
movs
adc
nop
out
lahf
jge
mov
pop
adc
xchg
push
sub
pushf
or
push
jle
xor
sti
pop
mov
push
mov
jecxz
cmps
nop
mov
data16
add
mov
or
jmp
dec
out
mov
add
lds
sub
xchg
and
nop
xor
ret
retf
jnp
and
(bad)
pop
repnz
dec
dec
sbb
pop
cmc
and
imul
shl
mov
outs
sub
jne
mov
jecxz
inc
dec
fsubr
adc
movs
xchg
cmp
ds
hlt
mov
xchg
ret
xchg
sbb
dec
ins
repz
aad
and
mov
jl
bound
std
out
(bad)
mov
retf
(bad)
lea
jns
pop
xor
pop
call
loopne
rcr
fwait
push
je
mov
movs
mov
xor
pop
pushf
and
push
test
cld
push
les
or
push
fnstsw
dec
lods
ins
(bad)
pop
(bad)
cmp
add
je
arpl
movs
pop
test
push
stc
shl
inc
imul
push
inc
in
mov
mov
je
repz
push
outs
scas
dec
xor
mov
push
inc
sar
add
pop
mov
and
leave
das
sbb
push
fstp
clc
(bad)
xor
in
enter
dec
mov
adc
lods
xchg
push
cmovge
leave
pop
xchg
or
adc
or
push
je
sub
repz
inc
call
jmp
stc
mov
jmp
and
nop
sti
idiv
jne
lods
sbb
mov
enter
pop
ja
data16
repz
push
jns
cdq
xchg
xchg
adc
dec
jne
xchg
mov
retf
push
lock
cdq
(bad)
hlt
movs
and
inc
sbb
(bad)
mov
and
inc
mov
jecxz
jmp
mov
enter
fdiv
or
movs
xor
add
inc
add
in
jmp
push
or
push
cmp
sbb
int
aas
imul
daa
lds
xor
add
stos
mov
shr
cmp
sahf
ror
out
xor
(bad)
dec
or
mov
push
mov
lds
xor
pop
cli
jne
jg
mov
ins
ja
hlt
xor
aas
mov
cmp
gs
sar
cmps
ja
retf
pop
in
cmps
xchg
mov
int3
cmp
adc
add
shl
sub
fistp
data16
(bad)
std
mov
movs
popa
neg
fidivr
and
sbb
(bad)
pop
sti
loope
(bad)
xor
push
mov
and
mov
cmp
xchg
sbb
popa
test
and
and
or
cmp
iret
mov
out
pop
icebp
cmp
rcr
mov
jle
adc
push
xchg
(bad)
adc
(bad)
inc
or
nop
sti
adc
frstor
sti
mov
arpl
mov
dec
jge
jge
dec
push
jns
mov
ss
mov
mov
fsub
(bad)
sahf
cwde
inc
sub
xchg
mov
xor
inc
lock
daa
mov
addr16
(bad)
xchg
or
pusha
sar
fcmovnu
mov
scas
fimul
jne
mov
inc
sbb
fdiv
xchg
repnz
test
shr
lds
inc
or
jno
cdq
adc
scas
lods
aaa
not
test
ja
mov
scas
ins
add
sar
test
fistp
xchg
arpl
lahf
jg
adc
push
test
sub
push
jno
dec
lds
jp
(bad)
scas
jle
jl
or
xchg
mov
mov
repnz
es
sub
push
and
mov
or
add
cmps
fcomp
push
int
bound
mov
call
xchg
lods
mov
mov
out
xchg
outs
(bad)
loope
xchg
mov
(bad)
in
outs
jecxz
jmp
sub
add
lahf
mov
jge
xor
mov
fwait
sti
mov
inc
xor
out
inc
dec
xchg
push
jo
movs
in
cmps
pop
repnz
add
ret
dec
mov
sub
(bad)
xor
mov
or
adc
in
imul
cmps
jo
test
sbb
rcr
(bad)
sti
loopne
fmul
sub
mov
div
loope
(bad)
out
jb
ficomp
(bad)
js
adc
shr
std
je
sbb
mov
js
stos
jb
and
pushf
push
fcmove
call
leave
pop
push
pop
push
mov
pop
sbb
mov
adc
mov
dec
pop
push
xchg
lds
push
add
sbb
add
scas
enter
call
fcomp
loope
mov
ja
xchg
xchg
dec
int3
(bad)
loopne
test
repnz
pop
inc
push
out
call
add
aam
dec
push
movs
das
ins
inc
xor
adc
mov
sbb
pushf
dec
gs
aas
lods
push
movs
(bad)
aad
jp
pop
fldln2
out
pusha
and
mov
pop
cdq
jle
popf
inc
mov
jmp
jmp
mov
lds
les
mov
fidiv
arpl
cli
push
rcl
sbb
test
dec
lods
int3
iret
adc
shr
(bad)
push
shl
dec
sbb
bnd
daa
dec
adc
mov
push
hlt
lods
movq
or
imul
ins
pop
jb
push
lods
sar
jmp
xor
dec
mov
nop
sbb
mov
xchg
bound
in
sub
pop
cmp
dec
mov
mov
inc
mov
ja
test
push
inc
(bad)
jae
dec
in
ins
xchg
lods
int
retf
mov
jmp
sub
(bad)
mov
mov
add
je
mov
loope
sbb
idiv
add
mov
sbb
rcr
or
ins
jne
sbb
loopne
sbb
mov
dec
iret
push
fidiv
xchg
stos
fild
dec
cmp
(bad)
cli
inc
jbe
dec
mov
int
jns
inc
jg
pop
imul
dec
pop
and
movs
je
scas
test
pop
fucomip
cmps
dec
mov
gs
lea
cmp
jno
cdq
mov
and
aad
fcom
cmc
add
cs
or
jne
jmp
ja
aaa
iret
dec
movs
pop
add
adc
sub
aas
sub
inc
stos
push
pusha
data16
push
xchg
pop
add
ss
ss
jmp
imul
xor
aad
in
iret
mov
pop
icebp
test
jb
mov
lahf
sub
int
jo
ins
xchg
loope
out
add
sbb
inc
gs
adc
push
and
jl
retf
adc
xor
movs
mov
aas
adc
ds
xlat
addr16
pop
fcom
sub
push
xchg
sbb
push
mov
scas
test
adc
out
retf
into
inc
inc
aam
fsubrp
test
mov
stc
iret
push
stc
ret
adc
(bad)
test
mov
jle
mov
dec
push
adc
pop
cli
push
loop
and
lea
dec
fisub
rep
cs
(bad)
jae
or
mov
pop
not
outs
cli
scas
or
dec
test
out
add
dec
dec
adc
pop
retf
cpuid
cmc
mov
ficomp
cli
imul
sbb
stos
xchg
xor
dec
mov
xchg
popf
xor
fwait
sub
enter
aaa
shl
mov
xor
cmp
das
jg
inc
retf
and
je
pushf
jae
test
sbb
dec
ja
xor
mov
sbb
jae
fs
inc
fdivr
dec
arpl
in
or
les
add
pop
ss
sbb
int
jb
retf
and
mov
ret
adc
rcl
fcom
out
aaa
fsubr
jp
inc
push
and
and
sub
retf
(bad)
pop
inc
pop
stos
lock
out
mov
icebp
(bad)
fmul
adc
idiv
add
jbe
fidivr
sub
pop
lahf
icebp
movs
mov
cmps
fiadd
cld
mov
dec
movs
daa
mov
mov
and
cmp
scas
out
jb
adc
enter
pop
popf
movs
mov
and
(bad)
aas
(bad)
lock
cmp
call
mov
addr16
cwde
hlt
addr16
dec
mul
(bad)
jg
dec
out
outs
adc
inc
shl
sub
fdiv
fs
icebp
sahf
mov
add
lahf
aad
mov
or
(bad)
sub
jmp
cmp
jp
hlt
mov
xchg
or
push
sbb
or
sahf
lahf
imul
jbe
fisttp
push
dec
mov
aaa
xchg
pop
ins
rcl
mov
pop
xchg
pop
dec
pop
jne
mov
mov
clc
outs
pop
pop
xchg
lods
dec
mov
and
jg
add
clc
jg
jmp
jne
popa
sub
cmp
pop
(bad)
icebp
frstor
pop
cmps
arpl
in
mov
cmp
pop
push
aam
lods
pop
out
popa
or
jns
sbb
xor
jge
or
movs
or
fcomip
test
xchg
mov
and
mov
ret
jns
and
sub
(bad)
or
repz
mov
mov
adc
call
inc
xchg
fcmovnu
(bad)
mov
fadd
mov
test
out
dec
(bad)
mov
cs
fidivr
mov
mov
add
fucom
sbb
mov
xor
in
sub
out
xchg
mov
rcr
add
mov
or
mov
add
mov
xchg
lahf
out
fist
pop
cmps
dec
pop
cs
jb
imul
push
mov
movs
int3
jmp
dec
push
lods
es
std
shl
inc
push
int3
sbb
mov
push
adc
shl
arpl
call
ret
scas
jb
mov
je
dec
cwde
sub
jle
cmps
in
mov
add
or
fidiv
jns
(bad)
in
mov
in
or
pushf
cdq
push
in
mov
gs
mov
not
pop
sub
inc
xor
lea
pop
dec
sub
xchg
xchg
xchg
or
jnp
loope
std
pop
loope
hlt
pop
mov
jmp
lock
fimul
scas
mov
pop
adc
dec
fld
xchg
mov
cmp
sub
pop
movs
mov
push
retf
sahf
(bad)
call
push
mov
fwait
iret
adc
pop
inc
jbe
xor
loopne
inc
scas
jl
ja
dec
repnz
add
xchg
rcr
add
and
sub
jae
push
or
pop
call
sti
push
(bad)
pop
dec
mov
(bad)
repnz
pop
cmp
lock
cli
add
dec
xchg
fist
cdq
ret
jbe
out
xchg
lds
mov
sbb
imul
push
jnp
mov
or
mov
pop
mov
jge
sbb
pop
(bad)
test
jecxz
pusha
repz
jp
xor
xchg
cmp
inc
shl
fst
rep
mov
sub
add
fistp
inc
ds
scas
call
stos
les
cld
push
push
xchg
test
popa
and
data16
mov
adc
mov
sbb
or
sbb
mov
cs
push
cwde
xchg
add
or
in
and
fucomip
lds
xor
xor
idiv
cmps
test
inc
mov
mov
dec
sub
pop
frstor
sub
das
sub
cmps
mov
jnp
push
dec
sti
xchg
fisttp
jmp
dec
add
repz
(bad)
rcr
and
(bad)
out
sbb
lds
lds
and
es
mov
pop
mov
push
sub
cmp
sub
aaa
sub
add
jmp
inc
pop
sbb
(bad)
stc
pop
ins
xor
lods
fdiv
sub
es
jo
xchg
pop
push
push
sub
xchg
pop
add
xchg
daa
jmp
out
ins
test
dec
push
imul
push
cmp
mov
cmp
call
jmp
int3
pop
(bad)
imul
out
xor
and
or
cmps
ror
xor
pop
push
sbb
dec
pop
dec
ds
adc
and
mov
(bad)
clc
mov
inc
dec
adc
cli
aam
inc
aas
cli
dec
sub
jmp
out
daa
aam
test
mov
pop
sub
test
out
mov
jae
scas
and
inc
pop
mov
and
xor
xor
pop
cld
and
in
fdivp
leave
xlat
xchg
xor
and
xor
sti
pop
sub
adc
pop
and
out
sbb
shl
int3
(bad)
jecxz
loopne
xor
mov
mov
dec
xor
mov
or
inc
pop
push
adc
xchg
(bad)
jl
inc
shl
cli
rol
sahf
rol
and
add
ds
push
dec
cmp
jno
xor
add
fdivr
aaa
lock
inc
jle
inc
dec
mov
cmc
push
cmp
push
ret
mov
cdq
addr16
push
outs
adc
add
jmp
jge
adc
jmp
mov
iret
pop
scas
scas
std
mov
fisttp
sbb
sub
xchg
aam
mov
mov
pusha
iret
push
sub
mov
dec
mov
test
shr
mov
lahf
inc
push
mov
or
mov
scas
inc
in
hlt
or
ret
inc
mov
xor
je
jns
sar
push
movs
sub
push
jl
(bad)
(bad)
sbb
in
mov
xchg
in
stc
aad
push
arpl
es
and
lods
(bad)
fcmove
mov
or
add
arpl
sub
jnp
in
in
sub
lahf
cdq
cmps
jnp
shl
inc
test
jno
cmp
std
test
mov
cmp
nop
aaa
out
and
(bad)
fisttp
adc
mov
adc
add
mov
les
add
das
lock
sahf
je
mov
lods
cmps
pop
inc
cmps
adc
mov
ficomp
add
sar
fisttp
pop
jl
ret
xchg
jp
popa
dec
jmp
shr
mov
fcmovbe
test
fwait
mov
scas
aam
int3
ficomp
addr16
(bad)
fnstsw
shr
sub
fdivr
jmp
into
add
ror
stc
mov
into
ins
or
add
outs
aad
push
jo
pop
gs
mov
xchg
ret
mov
cwde
sub
shl
mov
mov
test
sahf
dec
imul
loop
or
dec
mov
mov
les
and
leave
push
push
mov
bound
loope
adc
cmp
idiv
ror
scas
sti
jb
xchg
and
inc
pop
cmp
outs
imul
aam
sbb
test
icebp
adc
stc
je
or
data16
add
std
test
addr16
(bad)
pop
mov
or
adc
in
shl
fisubr
pop
(bad)
push
jg
pop
rcr
ins
xchg
sti
lea
nop
movs
movs
mov
xor
fs
xlat
push
popf
xchg
outs
push
xchg
frstorw
inc
retf
mov
push
mov
dec
cmp
jns
das
in
das
mov
cmc
mov
push
pop
mov
and
mov
or
lods
pop
(bad)
shl
push
lods
pop
pop
fcomp
mov
mov
pop
inc
inc
test
frstor
xor
or
cmps
xchg
std
fcomp
sbb
stc
nop
xor
sub
sbb
aad
pushf
xchg
xchg
test
xchg
loop
stos
jg
jo
cmp
or
rol
xor
pop
push
mov
lahf
adc
mov
mov
xor
in
sub
cmps
cs
and
popa
loopne
sbb
mov
push
mov
add
test
outs
cmovne
mov
cwde
daa
add
out
lods
or
repnz
(bad)
ins
dec
adc
adc
mov
test
lea
fmul
cmp
outs
or
lock
clc
mov
ja
sbb
inc
xor
xchg
cmp
in
cmp
push
push
shl
add
repnz
lock
pop
aad
sbb
aas
adc
loop
inc
aad
(bad)
fcmovnu
retf
xchg
out
mov
mov
and
and
mov
push
inc
xor
push
sbb
dec
and
and
pop
xchg
jp
(bad)
jle
xchg
sub
cmp
daa
push
scas
push
fldcw
sub
test
cmp
(bad)
mov
cdq
jmp
or
xor
and
and
adc
or
push
pop
cmc
jl
xor
pop
imul
ins
(bad)
out
les
retf
inc
xchg
leave
fimul
out
jl
lods
push
loope
test
clc
mov
dec
sub
data16
adc
fcomip
ja
mul
fidiv
mov
into
(bad)
aaa
dec
retf
add
inc
cmp
jnp
jnp
gs
sbb
fadd
sub
jbe
xchg
xor
(bad)
ja
pop
mov
fist
leave
jnp
shr
and
xchg
repnz
js
gs
sub
pxor
push
movs
mov
push
push
(bad)
stos
mov
or
shl
mov
jns
mul
pop
adc
push
aad
mov
scas
adc
rcr
push
push
std
ret
jnp
sub
and
call
xchg
in
lods
ret
push
pop
xchg
or
in
sub
inc
movs
loop
sbb
cmp
shr
sbb
rcl
xchg
shl
test
push
jp
les
outs
loopne
nop
jmp
loope
test
mov
pop
lahf
sub
or
test
xchg
pop
cld
inc
push
pop
(bad)
mov
shl
retf
aaa
mov
jnp
(bad)
(bad)
pop
xlat
in
in
ret
sub
jecxz
or
gs
ror
cmp
dec
test
fst
adc
int
rol
cmp
mov
pop
push
mov
inc
fadd
inc
xor
jns
outs
sbb
cs
xchg
inc
jmp
mov
inc
shl
mov
cmp
mov
arpl
pop
add
cmp
push
mov
xlat
mov
fdiv
jno
and
mov
imul
pop
fs
jg
dec
push
addr16
xchg
mov
push
mov
jmp
jae
jmp
scas
pop
push
mov
pop
pop
lahf
dec
jae
jge
jae
out
sub
movs
pop
aaa
mov
loope
jo
mov
push
(bad)
sub
les
and
into
xlat
dec
mov
xchg
adc
mov
in
cmp
cmp
dec
and
lock
mov
cmp
xchg
test
lods
fadd
in
xchg
sbb
frstor
lods
jle
movs
fs
cmc
jmp
test
push
pusha
mov
dec
int
adc
fcmove
mov
in
add
xor
mov
and
or
out
xor
jo
rcl
cdq
cmp
mov
dec
dec
mov
add
and
pop
add
sbb
cmp
(bad)
ja
cmp
mov
sbb
fsubrp
push
xchg
dec
clc
in
repz
popf
xchg
inc
cmp
cld
pop
pop
xchg
add
daa
adc
xor
outs
call
call
outs
mov
fwait
nop
xchg
movs
dec
adc
jge
add
hlt
or
jno
int3
int3
and
lds
(bad)
mov
fdiv
outs
adc
xchg
repz
sbb
leave
inc
and
and
mov
xchg
xchg
jns
popa
mov
ss
ret
fdivr
push
dec
ins
add
mov
cli
js
mov
push
call
sbb
adc
into
or
sbb
and
bound
mov
dec
rcr
fnsave
cmp
cld
pop
jg
ror
fild
es
inc
(bad)
cmp
enter
inc
mov
add
call
lods
std
pop
shl
xlat
sbb
lods
jecxz
push
add
cmc
jae
ret
js
retf
(bad)
push
xchg
jnp
and
mov
shr
jmp
daa
xor
neg
mov
stos
xor
repz
or
mov
add
pop
jmp
(bad)
cmc
int
fidivr
cs
shl
xor
cmp
lods
outs
mov
push
pop
(bad)
mov
mov
xor
push
xchg
je
add
sar
push
or
nop
jo
inc
xor
sar
xchg
fwait
rcl
jno
int
(bad)
push
ins
out
sbb
cmp
dec
xchg
pushf
test
mov
inc
int3
mov
adc
nop
out
mov
popf
xchg
pop
(bad)
aad
pop
mov
clc
jp
dec
addr16
(bad)
mul
inc
out
ret
in
imul
rcr
xchg
lea
sub
cwde
jmp
push
repnz
movs
ss
ss
cmp
movs
push
adc
adc
sub
sbb
or
dec
psrld
push
cli
imul
cld
mov
mov
test
ret
pop
pop
or
sub
push
push
mov
cmp
inc
xchg
(bad)
sub
sbb
adc
test
retf
out
sub
mov
dec
push
push
mov
aaa
scas
stos
mov
add
cmp
shl
mov
cmps
adc
sub
xchg
mov
and
aas
int
mov
inc
add
jecxz
add
(bad)
cmp
lock
gs
push
adc
cdq
lea
jne
xor
xor
sbb
in
inc
cmp
inc
jbe
jo
nop
ja
loopne
fucomp
rcl
(bad)
jne
and
push
dec
les
outs
jno
mov
std
push
gs
in
jo
mov
outs
jb
push
xor
cmps
rcl
shr
cmp
add
push
jp
jp
cmps
and
jnp
mov
fld
dec
sbb
jo
and
xor
add
dec
dec
cld
loop
shl
push
ss
inc
adc
arpl
ret
xor
inc
neg
sbb
(bad)
xlat
jnp
sub
lods
jle
xchg
je
jbe
pop
mov
sbb
je
mov
add
jp
fwait
popa
and
jno
shr
aad
ror
(bad)
and
push
retf
imul
ins
repnz
gs
lock
sub
out
mov
dec
mov
icebp
jno
iret
mov
stc
add
sbb
addr16
mov
stc
mov
test
daa
scas
adc
dec
loop
jns
test
into
out
jbe
pop
xchg
dec
mov
or
mov
pusha
lahf
hlt
cmps
push
cld
enter
xchg
mov
je
fsub
cs
xchg
pop
push
or
mov
std
push
add
in
cli
and
xchg
sub
in
add
sub
and
and
xor
pop
dec
out
test
sbb
or
dec
push
fs
mov
lds
cli
and
ds
cld
test
je
sub
add
lods
xor
or
fwait
adc
inc
push
sub
pop
test
popf
dec
jg
test
mov
dec
mov
pop
inc
das
add
rol
push
daa
pusha
test
pop
mov
mov
iret
xchg
sbb
mov
mov
js
outs
imul
or
sbb
add
pop
scas
movs
cmps
inc
adc
cmc
and
add
inc
lock
sub
out
imul
push
or
cmp
push
fldenv
fcomp
mov
stos
fadd
jae
ins
pop
aaa
jmp
jnp
imul
sbb
push
add
popa
mov
test
mov
fidiv
fsub
shr
sub
push
and
fidiv
dec
pop
outs
jno
adc
xchg
xchg
jb
neg
xchg
push
jne
mov
retf
(bad)
(bad)
loop
aam
lahf
enter
mov
mov
push
and
out
cmps
adc
aaa
push
sti
pop
pushf
fist
aam
or
pop
movs
add
fs
mov
je
movs
mov
dec
ret
xor
or
in
and
int
rcr
stos
leave
ret
clc
sbb
addr16
inc
cmps
push
call
scas
mov
dec
add
shr
aas
adc
mov
pusha
sub
or
loope
adc
push
pop
stc
aas
and
pop
inc
jmp
push
arpl
neg
dec
push
pop
add
stc
cmp
out
int
push
xchg
cmps
adc
fucom
xchg
push
fdiv
cs
mov
cmp
in
mov
add
hlt
add
stc
mov
out
call
jns
test
jne
mov
scas
imul
cmovb
test
test
ret
xchg
int3
movs
rol
shl
loope
and
call
sbb
out
mov
jp
or
scas
enter
das
sahf
out
clc
iret
inc
clc
inc
xchg
push
fadd
pop
retf
push
shl
shr
cmps
inc
mov
xchg
dec
cs
and
mov
sub
shr
pop
add
inc
pop
rcr
es
pop
ret
inc
sbb
addr16
cwde
xor
cmp
xor
dec
adc
out
push
xor
jecxz
pop
arpl
pop
cmp
(bad)
cmp
jp
or
ret
cmp
add
inc
xchg
xchg
mov
ins
jbe
fld
mov
mov
bound
add
or
xor
jle
adc
in
sub
rcr
outs
inc
dec
scas
inc
ss
xor
imul
enter
mov
(bad)
out
les
adc
mov
lea
cmp
mov
cmc
call
jge
xchg
int
mov
dec
cmp
mov
cmp
adc
mov
mov
hlt
into
pop
mov
jl
push
cmp
cmp
mov
inc
xlat
in
sbb
out
shl
push
inc
int3
aam
mov
inc
dec
jne
test
mov
stc
cld
hlt
pop
lsl
xchg
xchg
or
leave
sub
test
out
fidiv
lock
mov
lods
ret
jbe
cmp
add
adc
cmps
mov
push
and
das
adc
cmp
retf
loop
mov
sbb
retf
xor
add
rcl
mov
loop
and
in
add
pusha
mov
adc
mov
pop
fisub
test
push
add
aas
fdiv
adc
xchg
mov
sub
vmovdqu
jg
inc
inc
cmp
mov
jae
cmps
movs
adc
jo
je
out
push
jns
mov
out
into
test
jbe
pop
and
mov
or
dec
aad
or
(bad)
dec
dec
rcr
pop
add
xor
xchg
out
icebp
repnz
sub
mov
sub
daa
sbb
dec
xchg
sar
clc
pop
scas
inc
jl
pop
push
jo
int
or
mov
jbe
add
push
gs
fcom
fisubr
test
(bad)
jmp
mov
popf
pop
sub
xor
xor
stos
cs
(bad)
jne
xor
add
and
cwde
xor
fimul
and
popf
popa
sbb
stos
push
retf
push
add
(bad)
jg
aas
stc
outs
and
dec
rcr
cs
je
pop
lea
or
mov
retf
nop
jge
arpl
jb
cmp
lods
pushf
(bad)
lds
test
ja
cmp
test
xor
retf
retf
call
icebp
dec
in
mov
out
xchg
mov
in
push
mov
outs
fcomp
xlat
mov
lea
push
test
(bad)
daa
(bad)
fiadd
(bad)
enter
imul
push
mov
(bad)
mov
jmp
leave
inc
sbb
ja
leavew
mov
jmp
add
add
inc
mov
dec
adc
mov
(bad)
into
repz
jmp
out
cmps
js
fdiv
mov
and
add
cmp
outs
in
mov
dec
mov
and
pop
popf
adc
adc
shr
pusha
push
or
enter
sub
das
std
add
cld
outs
rcl
mov
test
sbb
mov
adc
pop
or
bound
stc
mov
das
les
pop
and
into
in
jmp
adc
movs
xchg
ins
mov
pand
jp
or
jl
iret
pop
dec
mov
dec
xor
dec
std
dec
or
dec
fbld
sti
aam
adc
mov
test
hlt
xor
cmps
cwde
stos
(bad)
stc
add
(bad)
mov
jbe
scas
mov
out
cmp
and
jp
fdivr
dec
sbb
loopne
sti
pop
xor
mov
lahf
fisub
jne
stos
xchg
xor
bound
mov
xor
nop
ja
dec
push
in
aaa
arpl
sbb
push
sbb
imul
aam
pop
shl
cmp
jnp
lahf
inc
imul
add
(bad)
push
shl
mov
xlat
div
cmp
adc
ja
cli
mov
test
pop
fstp
(bad)
or
in
lss
push
jle
ja
in
pop
dec
movs
cmc
adc
jge
pop
out
xchg
jmp
pop
cmp
cmp
cmps
inc
sub
fdivr
fild
(bad)
pop
ret
js
xchg
pop
sbb
and
hlt
out
jle
mov
mov
mov
repz
in
out
cwde
jg
ror
lock
add
in
cdq
push
enter
mov
es
dec
jb
or
inc
xchg
adc
jle
or
mov
daa
addr16
jecxz
dec
and
(bad)
dec
push
sbb
arpl
sub
fidivr
lods
fnstenv
jae
inc
fnstsw
stc
pop
push
jae
in
inc
mov
mov
mov
sub
test
test
jnp
lods
cdq
pop
xlat
bound
add
jmp
and
sub
scas
mov
pop
data16
add
fs
data16
std
enter
xchg
test
jle
out
dec
add
cdq
inc
sbb
out
outs
popa
add
adc
cs
stos
xchg
into
xor
and
and
cmp
ret
mov
mov
movs
push
(bad)
jecxz
movs
jl
test
pop
xor
mov
nop
fs
mov
pop
add
sub
aas
pusha
mov
leave
xchg
push
push
popf
push
pusha
jl
lds
jle
mov
out
push
cmp
pushf
push
mov
push
xchg
mov
or
pop
pop
je
mov
cld
mov
cmps
pop
jecxz
mov
loop
xor
outs
dec
mov
lea
test
ret
push
aad
dec
jnp
cmp
adc
shl
mov
adc
cmp
int3
ss
ficom
add
add
rol
lahf
sub
pop
mov
in
rcr
lock
and
fst
adc
sub
push
shl
test
jmp
add
push
mov
mov
movd
shl
dec
xchg
dec
rol
sbb
rol
mov
xchg
xchg
pop
ret
call
sub
ds
out
jne
sub
js
mov
cmp
shl
adc
test
jg
iret
clc
dec
test
inc
idiv
outs
scas
xlat
and
lock
xor
mov
mov
dec
outs
scas
(bad)
je
jno
mov
scas
ja
add
add
pop
jmp
inc
or
jge
mov
rcr
mov
dec
repz
push
and
scas
loopne
inc
dec
mov
aad
push
dec
xor
pop
sub
movs
mov
mov
into
sbb
jmp
adc
mov
bound
dec
sti
(bad)
adc
mov
mov
sbb
lods
dec
or
and
mov
std
xor
cwde
cmp
fadd
pop
mov
or
add
and
test
jg
adc
or
lods
cli
int3
clc
add
loope
jae
call
(bad)
fisttp
mov
test
push
in
in
sbb
add
dec
gs
sub
pop
in
mov
mul
sbb
repnz
xor
rol
fnstenv
arpl
(bad)
outs
cs
(bad)
sbb
pop
int3
mov
mov
ss
out
or
inc
or
sbb
jmp
xor
add
ret
gs
mov
jbe
cmp
or
push
and
in
test
push
adc
int3
pop
popf
inc
fdiv
mov
in
stc
add
loope
movs
retf
jl
cmp
out
sub
mov
inc
ror
(bad)
test
lock
xchg
aas
add
(bad)
pop
cmp
add
mov
mov
enter
icebp
push
sub
or
xor
dec
add
add
out
inc
movs
mov
sbb
je
iret
inc
aas
push
xor
mov
in
cli
cmp
mov
ror
je
pop
push
xchg
sbb
mov
cmc
jl
ins
xor
imul
mov
je
les
jo
jl
(bad)
sub
int
hlt
aad
push
mov
int3
add
inc
jmp
push
movq
inc
fucomip
inc
mov
in
daa
aad
or
ficomp
mov
fild
(bad)
repnz
repnz
mov
push
adc
cmps
neg
imul
push
sbb
in
(bad)
aad
push
jg
loope
(bad)
mov
retf
xchg
or
adc
cmp
lahf
xlat
das
inc
xchg
xchg
ins
cmps
mov
fcom
cwde
xchg
(bad)
pusha
jmp
scas
neg
dec
out
leave
sbb
test
jp
ds
jae
jno
adc
loope
cmp
fldcw
test
dec
add
jp
or
sbb
adc
scas
mov
sub
xor
xlat
cmps
pop
out
cld
sub
or
sub
xchg
fst
mov
sbb
mov
ja
sahf
aad
push
cmp
jne
dec
push
call
push
ret
(bad)
sub
mov
push
xchg
rcr
sbb
add
pop
cmc
hlt
mov
jnp
out
pop
adc
fisubr
(bad)
imul
adc
(bad)
rcr
vpshuflw
(bad)
pop
loope
iret
inc
pop
lock
jno
or
sti
aad
std
cld
dec
dec
loop
add
daa
or
and
pop
pop
pushf
sub
xchg
xor
pop
or
push
and
inc
shr
fild
out
mov
ret
inc
pop
and
fcomp
adc
mov
outs
js
cmp
sub
xchg
jne
and
push
(bad)
mov
sbb
call
rol
rcr
mov
cmp
shl
nop
pushf
div
jne
jecxz
idiv
sti
(bad)
cmp
or
popa
in
cmp
ror
test
cmp
in
das
test
aad
xchg
imul
hlt
inc
sar
pop
and
not
push
rcr
pushfw
mov
dec
mov
je
ja
arpl
and
sub
pop
pop
mov
pop
into
(bad)
call
mov
mov
xchg
push
arpl
and
cli
xchg
mov
dec
in
rol
dec
jae
pushf
xchg
stos
test
xor
into
dec
xchg
add
mov
popf
xor
push
adc
pop
aas
xor
sub
frstor
inc
jmp
or
ins
mov
mov
xchg
pusha
retf
pop
pop
cmp
mov
or
les
pop
push
push
xchg
(bad)
xchg
or
mov
inc
hlt
pop
adc
mov
jo
jns
jb
cli
mov
pop
push
(bad)
mov
jp
add
rol
add
nop
dec
jae
xor
inc
gs
dec
dec
add
mov
pop
into
imul
inc
pop
loopne
test
xchg
repz
mov
push
aam
rcr
push
jmp
scas
mov
or
pop
(bad)
jmp
adc
lock
scas
mov
push
inc
gs
cwde
std
xchg
mov
cmp
sbb
dec
cmp
push
lods
push
int
lock
std
jmp
jmp
jno
add
ins
scas
jl
data16
pushf
mov
push
cmps
fdiv
rcl
movs
shl
pusha
cmp
lock
cmp
xor
cmps
pop
mov
(bad)
int
inc
fistp
pop
xchg
sub
test
mov
aas
mov
fidivr
jne
xor
and
in
call
test
dec
pop
mov
mov
or
shr
mov
cmp
push
sub
pushf
cdq
leave
cs
xor
adc
push
cmp
les
repnz
sar
loope
pop
ss
xchg
inc
test
push
repz
add
jmp
mov
mov
adc
add
mov
je
dec
dec
dec
(bad)
sar
xchg
mov
xor
not
fisub
mov
sub
jmp
jge
mov
ds
dec
mov
ret
bound
mov
outs
pop
(bad)
push
xchg
icebp
mov
dec
ret
xchg
dec
push
jns
xadd
shr
pop
pop
jno
push
adc
retf
cli
jae
ss
aaa
test
pop
add
(bad)
ins
mov
inc
arpl
cmp
push
add
test
rcr
jo
repnz
adc
jge
movs
cmp
je
pop
sbb
jmp
xor
test
or
call
into
clc
pop
push
addr16
cs
scas
pop
outs
push
outs
jge
mov
cld
adc
dec
test
fmul
push
inc
mov
pop
xor
jp
and
jg
aad
jno
dec
icebp
pop
shl
adc
shl
cmps
dec
xchg
push
xchg
icebp
ja
xor
mov
jg
xor
mov
push
fsubp
sbb
pusha
adc
test
push
shr
xchg
and
rsm
adc
in
sbb
enter
mov
jns
jmp
xchg
call
loope
in
ja
push
adc
int
repz
add
retf
jle
rcr
lds
mov
cmp
stos
call
jmp
shl
jle
data16
and
es
cwde
loop
sub
aas
or
js
enter
mul
xchg
add
push
push
dec
js
xchg
adc
inc
push
popf
mov
xor
jp
and
call
dec
call
and
pop
pop
out
stc
in
aas
(bad)
idiv
imul
adc
push
push
push
cli
and
ror
btr
cmp
jmp
mov
or
loope
aas
mov
adc
mov
shr
cs
pop
mov
xchg
mov
mov
js
xchg
cld
idiv
xchg
or
aam
sar
mov
mov
jbe
mov
imul
out
or
add
push
adc
dec
mov
in
mov
sub
push
repnz
jne
add
loop
mov
mov
jmp
pop
xchg
fiadd
xchg
sub
or
sbb
test
or
push
pop
retf
(bad)
dec
div
sahf
stc
pop
in
or
adc
push
enter
xchg
adc
ss
sub
popf
xchg
fwait
push
iret
dec
xor
and
add
ds
sbb
sar
inc
or
or
lea
cmp
push
ss
hlt
dec
jp
enter
outs
mov
sub
stos
adc
cmp
popa
retf
cli
pushf
jbe
pop
addr16
sbb
xchg
push
jmp
jno
push
push
imul
test
std
int3
call
dec
jge
int
sub
add
shl
and
fwait
ins
out
xchg
js
inc
jmp
fdiv
cld
or
push
mov
lock
cmp
scas
mov
dec
inc
add
mov
mov
pop
call
sbb
or
out
cmp
outs
call
sbb
enter
sub
xchg
inc
pop
rcl
outs
repnz
xor
mov
mov
jmp
push
cmp
jno
dec
cs
cmc
xor
test
add
mov
push
gs
ins
icebp
and
nop
pop
daa
add
shl
push
jle
cmps
or
dec
ret
pop
inc
mov
test
pop
arpl
lea
mov
call
mov
push
pusha
cmc
stos
cmp
mov
and
stos
mov
jge
mov
icebp
xchg
push
inc
mov
push
cld
jnp
sti
and
movs
inc
xor
mov
add
xor
iret
imul
addr16
fld
jle
fwait
mov
mov
sbb
test
cmc
push
lods
maxps
int3
pop
cs
sbb
fistp
xchg
imul
pop
push
xor
lock
ds
dec
mov
xor
xchg
pop
fldcw
mov
jns
xchg
fwait
push
sar
ja
sbb
push
sub
lock
pop
aam
mov
dec
mov
stc
mov
(bad)
push
and
xor
pop
jecxz
aas
adc
dec
xor
xchg
pusha
cwde
das
jp
(bad)
std
lea
cs
shr
fsubr
pop
inc
test
jns
loop
add
mov
into
(bad)
jmp
xchg
dec
jp
xor
fwait
stos
xchg
pop
xor
lods
call
inc
lods
xchg
lea
dec
pop
jmp
jg
inc
xor
(bad)
movs
rcl
mov
add
div
cmp
hlt
cdq
push
test
push
inc
or
add
or
test
sbb
retf
sub
aas
and
pop
push
jp
jge
cwde
sbb
mov
cwde
xchg
sbb
push
mov
pop
pop
sbb
shl
add
mov
inc
rcr
jmp
jns
mov
mov
mov
outs
ret
push
bound
data16
cmp
mov
loop
or
les
les
das
rcr
shl
add
mov
xor
out
pop
popf
mov
and
pop
sbb
jns
fbstp
mov
or
(bad)
repnz
out
jp
adc
and
mov
and
imul
icebp
aaa
js
jmp
cmp
cwde
sti
ds
std
cmp
cmp
inc
call
jb
rcr
(bad)
push
adc
ja
xor
cmps
cmp
lods
(bad)
sbb
and
xchg
aaa
ja
jae
pop
rcl
mov
fld
mov
xchg
scas
fsub
ficomp
sbb
sbb
mov
jg
xor
fistp
xchg
mov
pop
xor
or
pop
add
ret
fs
fldenv
jp
jp
out
xor
pop
mov
and
adc
out
push
xchg
or
push
or
mov
loopne
push
inc
add
addr16
jle
dec
mov
push
ins
imul
and
out
or
adc
and
cmp
or
jl
sub
dec
add
dec
and
ins
or
dec
mov
xor
ror
and
int
ficom
mov
shl
jl
and
jg
inc
or
dec
(bad)
inc
aas
or
pop
push
mov
jbe
jbe
push
add
jnp
sbb
movs
loopne
xcrypt-cfb
cmps
and
jns
jb
in
(bad)
mov
xchg
xor
out
cmc
jo
dec
add
dec
sub
pop
mov
cmp
aaa
xchg
jmp
cli
les
inc
adc
clc
push
mov
test
popf
dec
shl
data16
jle
add
popf
adc
aaa
pop
dec
push
shr
scas
cmp
push
mov
jbe
push
ficom
lea
xchg
mov
sbb
and
cmps
sbb
int
loopne
outs
mov
jno
std
ret
xchg
jae
pop
and
shl
jl
popa
pop
ds
cmp
pushf
and
stos
mov
out
inc
sub
jno
mov
(bad)
cmovl
cmc
xor
shl
mov
or
(bad)
pop
pusha
jb
cmps
(bad)
xchg
push
cmp
sbb
loopne
cld
jge
cmp
jnp
jno
in
popa
cwde
cmp
ins
call
xchg
pushf
enter
or
repz
adc
shl
out
or
(bad)
fadd
aaa
sbb
sbb
out
lahf
jne
mov
ins
jne
stos
mov
lahf
std
(bad)
popf
xor
fimul
mov
adc
das
push
and
dec
pop
in
dec
(bad)
or
mov
mov
add
mov
mov
pop
add
lds
mov
test
cmp
fimul
push
inc
out
neg
mov
push
sub
mov
mov
dec
ins
jnp
enter
sub
push
js
out
stos
cmc
jnp
stos
movs
jae
retf
push
push
dec
pop
stc
mov
cmp
pop
lods
sbb
in
jo
xor
mov
add
dec
pop
vminsd
add
jns
jo
popf
xchg
or
dec
dec
in
fbstp
and
not
mov
das
call
push
xchg
ret
mov
jne
cmp
cmc
addr16
pop
mov
cmp
push
push
(bad)
enter
daa
mov
repnz
rol
push
push
les
jmp
ins
imul
mov
test
jae
xchg
xor
mov
retf
ret
jg
or
iret
scas
push
test
xor
cmps
push
and
sbb
dec
mov
mov
loopne
int3
jg
(bad)
xor
popa
aad
dec
and
cmp
jns
(bad)
fwait
ja
imul
lods
dec
mov
in
es
cmp
out
or
sti
add
out
(bad)
sub
lods
dec
adc
jl
ret
or
icebp
out
add
fwait
lea
dec
jae
sub
out
inc
loopne
test
out
pop
sbb
leave
out
popf
es
jmp
pop
sub
xchg
cs
or
out
(bad)
mov
test
pop
fild
fiadd
icebp
cmp
es
mov
fnstenv
aaa
dec
fisub
adc
test
or
push
add
daa
(bad)
repz
or
pop
mov
xchg
je
sbb
jle
mov
fwait
mov
shl
xchg
jo
jbe
shl
sub
pop
jge
inc
ror
cli
lods
aas
sub
sbb
call
jnp
inc
popa
imul
fldenv
sub
add
call
outs
mov
push
shr
(bad)
fnstcw
movs
xchg
je
xchg
pop
xor
cmps
ss
sbb
push
aam
lea
clc
clc
mov
out
jo
push
inc
shr
into
addr16
retf
and
test
or
aaa
sbb
fimul
bound
or
push
mov
lods
or
push
xchg
fimul
pop
ror
loopne
pop
mov
out
std
cmp
sub
add
ret
jmp
ins
xlat
inc
imul
and
cmps
add
aad
inc
sub
jl
add
xchg
pop
lds
inc
call
test
dec
xor
stos
jae
push
sbb
push
xor
iret
jge
xchg
jle
adc
std
ds
xor
(bad)
rol
pop
out
inc
push
fcomip
lahf
pop
push
sub
push
(bad)
mov
js
retf
daa
(bad)
adc
push
inc
and
std
ins
call
sti
scas
sub
icebp
mov
xor
pop
xchg
or
fisttp
dec
arpl
cwde
push
pop
les
mov
mov
mov
sub
xor
sub
add
cmp
cmp
out
push
dec
sbb
(bad)
cmp
sub
pop
jae
and
fisub
ss
retf
sbb
loope
sub
into
sahf
fidiv
xchg
daa
ss
xchg
dec
mov
mov
mov
or
rcl
mov
sub
mov
imul
out
jmp
int
and
dec
cmp
repnz
stos
push
sbb
xor
cdq
imul
call
jno
movs
fwait
scas
mov
(bad)
pop
inc
paddq
jb
xchg
xchg
dec
mov
leave
mov
dec
xchg
dec
add
jo
and
stc
leave
mov
xchg
add
aad
test
out
sub
push
pop
shr
leave
cld
in
jmp
jne
inc
ins
xchg
clc
mov
cs
xor
push
sbb
mov
or
test
xchg
push
or
popa
int3
jecxz
rcl
iret
push
dec
mov
fisub
mov
aad
cmps
std
mov
mov
xchg
cmc
inc
(bad)
imul
jnp
ror
pop
cmp
cmc
cmc
(bad)
ds
ficomp
mov
xlat
sub
pop
add
fnstenv
adc
jo
ds
hlt
cmp
loope
test
rcl
dec
mov
daa
mov
call
mov
jmp
out
clc
test
xor
push
sub
outs
inc
xchg
retf
mov
ss
mov
or
mov
sbb
pop
mov
inc
pop
jl
cli
xchg
shl
rcr
cmps
push
push
xchg
dec
pop
pop
or
or
lods
(bad)
xchg
sub
repnz
mov
in
(bad)
or
fisubr
sti
inc
mov
pop
mov
imul
movs
cli
xor
inc
sahf
shl
inc
xchg
mov
ja
inc
shl
inc
or
test
xor
sar
sub
in
mov
in
cmps
push
or
jle
jae
xor
jg
hlt
ss
dec
pop
dec
mov
repnz
cmp
scas
iret
xor
enter
mov
in
sub
movs
(bad)
add
fs
mov
sub
adc
inc
sbb
(bad)
mov
shr
jae
sbb
icebp
lahf
jge
cwde
arpl
push
mov
dec
jmp
retf
int
loopne
test
fidivr
sub
adc
imul
cmp
jmp
div
or
dec
ss
hlt
vaddps
mov
ja
push
mov
mov
push
leave
rcl
push
inc
mov
mov
dec
jo
add
push
sub
push
or
mov
add
cmps
aas
ror
add
or
out
mov
xor
(bad)
int3
ins
(bad)
imul
ror
sub
jecxz
pop
outs
sbb
leave
lods
sar
xchg
sbb
stos
jnp
xor
mov
xor
test
adc
sti
addr16
dec
jmp
das
mov
xchg
mov
jns
ss
and
ficomp
fisttp
xchg
popf
gs
aaa
jge
cmc
lods
sbb
(bad)
and
(bad)
fnstcw
sbb
outs
push
ret
adc
adc
dec
fist
xchg
clc
ret
jg
and
stos
add
push
inc
push
mov
fist
addr16
mov
and
in
pop
mov
mov
or
dec
je
shl
and
or
and
cmps
add
loopne
out
stos
mov
mov
xchg
int3
lea
adc
cmp
rol
mov
or
fild
gs
fild
dec
imul
jmp
out
mov
and
ins
ror
out
lods
shl
(bad)
jne
sbb
test
adc
sbb
retf
pop
mov
jge
mov
push
jno
jno
mov
dec
add
les
sbb
pop
stos
jmp
rcl
cwde
out
xor
fs
inc
hlt
cmp
jns
or
sbb
cmp
mov
shl
test
call
push
add
repz
adc
mov
add
in
test
pop
dec
outs
xchg
jne
repz
inc
push
out
jnp
ds
fwait
data16
shl
push
mov
xchg
out
jns
add
cmps
add
dec
mov
(bad)
pop
sbb
sar
push
and
fs
ror
and
lods
adc
fidiv
das
stc
ins
mov
clc
pop
pop
loop
and
adc
pop
cmps
aaa
dec
(bad)
xor
or
sub
sub
pop
lods
test
and
popa
gs
mov
inc
mov
les
jl
add
arpl
mov
ror
addr16
out
test
popa
in
cmps
test
mov
pop
leave
cmp
iret
stos
repnz
icebp
les
mov
add
icebp
sbb
stos
lea
mov
cs
mov
lods
hlt
jg
daa
daa
inc
and
nop
jmp
jne
xor
ror
and
out
les
lods
and
mov
movs
mov
inc
leave
call
sbb
adc
sub
cld
adc
jl
adc
inc
and
mov
push
sub
fwait
stos
cmp
adc
aad
popf
inc
and
(bad)
enter
ror
push
mov
inc
push
iret
sub
xchg
adc
add
mov
mov
dec
test
gs
stos
sbb
js
and
push
sub
rcl
call
jo
(bad)
(bad)
mov
or
mov
dec
pop
xchg
pop
mul
cmps
push
pop
shl
mov
sub
mov
(bad)
jmp
mov
loop
imul
push
inc
popf
fidiv
out
cmp
cmp
cmp
movs
jge
fs
dec
sahf
lods
stos
push
in
mov
inc
adc
jmp
ins
pop
add
xchg
stos
test
(bad)
je
hlt
inc
sbb
sbb
out
nop
clc
dec
lock
ror
mov
add
inc
(bad)
(bad)
ins
out
in
out
js
jne
outs
fiadd
mov
mov
pop
push
mov
dec
mov
jge
or
xchg
into
pop
fnstenv
xchg
enter
mov
dec
dec
fcom
xchg
dec
imul
mov
xor
aad
sub
icebp
(bad)
mov
xchg
sub
jmp
sar
cmps
push
xchg
int
sbb
je
scas
mov
sbb
aam
jmp
ja
mov
push
pop
iret
xor
pop
iret
adc
adc
mov
xchg
scas
jg
fnstcw
adc
out
lods
daa
inc
xor
test
sbb
jae
and
retf
neg
popf
leave
cli
lock
push
aaa
pop
rcl
pop
pop
mov
pop
fiadd
repz
sar
mov
sbb
push
sbb
int
or
mov
loope
ftst
aas
lock
stc
pop
shl
adc
inc
popa
cmp
popa
pop
int3
xlat
out
popa
or
dec
mul
and
adc
pop
lods
mov
scas
gs
xor
xor
jge
jns
mov
pop
push
mov
movs
sub
adc
dec
mov
or
jmp
pop
fidivr
and
repz
sbb
lods
ja
ds
mov
sti
xchg
add
loopne
test
mov
push
xor
jmp
mov
fcom
ret
and
loope
daa
sbb
push
and
inc
cmp
pop
cdq
jmp
push
push
dec
mov
es
retf
sub
or
mov
jmp
inc
jno
popf
cmp
push
jo
jg
mov
into
inc
lods
xor
loope
lahf
leave
add
cmp
outs
pop
mov
push
cmc
mov
fistp
retf
pop
leave
loope
adc
mov
cmc
sbb
inc
fdiv
fnstenv
dec
cmp
xchg
mov
(bad)
int3
push
sti
and
push
jo
and
mov
mov
into
aas
mov
sub
test
xor
fld
xchg
outs
mov
lods
nop
cdq
pop
int
jb
pop
stos
mov
lahf
sti
lods
scas
cmc
cli
arpl
bound
shl
mov
mov
mov
xor
xchg
sub
sub
xchg
repz
mov
ret
cwde
sub
dec
sbb
scas
je
out
popa
pop
mov
movs
add
and
sbb
dec
push
pop
and
pop
jmp
jmp
xor
inc
(bad)
aad
dec
dec
cmp
inc
ret
pop
mov
sub
cld
fistp
jge
inc
mov
mov
mov
or
inc
ja
rcl
inc
xor
mov
sahf
loop
sub
inc
ja
mov
xlat
or
inc
stc
(bad)
ds
jmp
or
pop
ds
cli
sbb
sub
mov
ror
xor
xchg
jp
pop
mov
inc
ins
xchg
hlt
loope
mov
cwde
inc
xchg
idiv
xlat
adc
out
add
test
pop
jb
(bad)
icebp
out
xchg
mov
fidivr
cmp
jmp
cld
push
push
mov
pop
dec
jns
repnz
cmps
std
pop
retf
xchg
outs
mov
addr16
iret
repz
adc
in
(bad)
out
mov
clc
mov
mov
std
add
lods
sub
pusha
data16
jo
mov
xor
mov
or
out
inc
mov
mov
xor
leave
cmp
(bad)
xchg
mov
ret
mov
inc
or
cmps
xor
inc
mov
inc
pop
push
mov
push
add
adc
ins
popa
ror
push
fistp
xor
mov
daa
mov
xchg
mov
test
and
test
mov
or
inc
cmp
or
cmc
jno
sub
test
add
es
dec
lds
not
jns
push
(bad)
addr16
jg
inc
call
add
jl
pop
mov
dec
cmp
cdq
mov
in
popf
cdq
(bad)
mov
pop
xchg
idiv
ds
inc
outs
cmp
and
pop
test
test
iret
or
popf
push
sub
jae
cmp
rol
outs
and
inc
pop
cmp
mov
push
push
mov
mov
or
or
push
dec
das
jl
push
shr
jmp
or
add
or
dec
xor
sbb
sbb
mov
cmp
inc
inc
mov
daa
mov
and
loopne
aaa
or
xchg
inc
pop
(bad)
jo
stos
mov
rcr
mov
xchg
jge
icebp
mov
int3
xchg
inc
add
ret
jg
jno
dec
ficomp
xor
xor
scas
movs
retf
stc
adc
ror
jl
or
push
ins
pushf
pop
movs
inc
dec
mov
imul
(bad)
icebp
and
js
mov
js
or
outs
jp
bound
out
adc
cmp
enter
jmp
mov
or
inc
loop
cmps
and
mov
adc
es
(bad)
(bad)
fidivr
addr16
packssdw
test
(bad)
fld
xlat
cmp
lea
out
push
ins
adc
dec
push
jae
cmp
cmc
div
and
loope
or
dec
pcmpeqw
pop
aad
mov
add
out
mov
jo
(bad)
or
mov
daa
mov
mov
jb
xlat
pop
inc
aaa
and
ret
nop
aas
nop
(bad)
imul
pop
or
test
jle
push
xlat
mov
pusha
or
sub
cmp
test
jmp
fwait
aas
das
xlat
aaa
xor
mov
ins
test
mov
ds
mov
ja
mov
ins
cld
(bad)
inc
scas
pop
rcl
xor
stos
ins
cwde
ficomp
rol
dec
mov
pop
dec
sbb
sub
test
icebp
pop
cli
sbb
jge
ror
int3
(bad)
cdq
jnp
test
inc
outs
in
jecxz
daa
or
repnz
out
xchg
adc
cdq
push
pusha
ret
jo
dec
add
sub
sahf
mov
scas
loop
in
push
cmp
jl
arpl
hlt
(bad)
out
das
in
jmp
ja
add
repz
xchg
div
icebp
call
mov
add
(bad)
jae
xchg
pop
sbb
xchg
xchg
sti
jb
scas
(bad)
mov
retf
cdq
dec
pcmpeqw
adc
rcl
and
jnp
jmp
pop
call
add
mov
pop
stos
and
dec
mov
cmp
push
and
in
xchg
push
pop
mov
cdq
sbb
pop
push
add
cmps
jne
or
in
test
mov
push
inc
push
mov
mov
inc
es
adc
push
add
jmp
xlat
jecxz
leave
mov
jno
out
mov
fwait
push
mov
dec
in
cs
push
jg
js
fld
adc
xchg
sbb
daa
cdq
in
rcl
push
mov
mov
rol
(bad)
xor
mov
test
cmp
mov
pop
hlt
jne
das
push
iret
imul
dec
xor
jl
pop
inc
aam
(bad)
imul
hlt
add
(bad)
mov
hlt
cmps
test
cdq
into
inc
jmp
call
jge
adc
dec
xor
(bad)
fwait
push
cmc
and
sub
adc
(bad)
and
mov
btr
dec
push
mov
mov
or
and
dec
ds
sbb
add
arpl
jns
mov
cmp
sbb
push
call
jge
arpl
ja
pop
and
ins
jae
loope
jge
adc
cmp
arpl
fsubr
xchg
out
and
sub
adc
mov
stos
jge
scas
leave
mov
pop
cmp
cmp
push
les
pop
mov
dec
push
mov
dec
and
dec
pop
lods
or
cmp
xchg
and
cmp
ins
sub
stos
and
aam
and
pop
mov
add
std
cmp
sub
jmp
sbb
push
fnstenv
(bad)
call
mov
push
or
push
mov
xor
adc
sub
xchg
outs
iret
xchg
mov
sub
jne
jecxz
pop
xor
into
pop
xor
mov
cmp
(bad)
in
fimul
add
xor
xor
and
or
in
sub
shl
push
cmp
mov
shl
repz
(bad)
loopne
in
call
push
js
popa
cmp
jl
mov
xor
sub
js
in
in
popa
push
adc
adc
fmul
sbb
in
movs
and
or
fisttp
push
jecxz
loop
lea
cmp
fst
sbb
aam
cmp
addr16
sbb
jbe
push
xchg
mov
mov
mov
mov
cmp
pop
in
aaa
sub
pusha
cdq
ret
js
in
xor
dec
ds
inc
push
(bad)
mov
pop
dec
(bad)
movs
outs
sti
mov
shl
sbb
mov
sbb
addr16
pop
or
(bad)
popf
hlt
sbb
into
jp
jg
pop
xor
je
mov
xchg
outs
es
adc
lock
loopne
push
xor
sti
ja
sub
inc
fcom
add
(bad)
xlat
mov
dec
loopne
cwde
outs
(bad)
les
sub
dec
int
pop
inc
bound
int
popf
xor
in
cmps
popa
push
retf
fmul
push
sub
mov
xchg
jg
loope
fcmovnb
adc
mov
inc
test
ficomp
(bad)
push
pop
enter
outs
adc
cmp
fcom
dec
jmp
pop
mov
jmp
repnz
pop
stos
daa
aam
es
push
icebp
ds
mov
mov
int3
jbe
xor
xchg
or
sti
aaa
addr16
mov
mov
adc
aam
inc
xor
fmul
fwait
jl
jmp
and
inc
pop
xor
dec
test
cmps
cli
nop
and
sbb
pop
cmps
or
(bad)
xor
mov
fnstcw
ret
shl
and
jge
cmps
retf
inc
cwde
inc
ss
mov
ins
shr
inc
jmp
mov
rcr
mov
mov
mov
lods
or
sub
jecxz
xor
add
sbb
(bad)
(bad)
aam
xor
popf
mov
out
mov
out
(bad)
mov
loopne
and
(bad)
pop
inc
xor
jge
fwait
inc
das
adc
retf
mov
add
jmp
daa
mov
mov
test
or
jmp
in
pop
(bad)
and
ss
add
push
xchg
inc
push
mov
sub
push
hlt
mov
add
inc
sbb
sbb
les
rcl
mov
popa
sub
gs
push
iret
ret
mov
xor
lds
cmps
fwait
loope
xchg
hlt
push
mov
outs
cmp
xchg
outs
xchg
adc
fidivr
xor
call
and
sub
aam
repz
es
lds
mov
stos
jp
fdiv
mov
push
in
dec
inc
div
repnz
mov
lods
rol
push
push
js
add
pop
aam
adc
mov
js
jle
mov
imul
xor
lds
data16
test
or
mov
icebp
(bad)
xchg
jae
push
inc
mov
mov
sub
call
sub
jmp
cmp
sahf
shl
dec
inc
fcom
clc
cmps
mov
fiadd
jmp
ja
mul
add
xor
mov
ss
mov
out
add
daa
lahf
or
add
jg
pop
lea
clc
pop
test
shl
cmps
pusha
loop
dec
push
cmp
outs
lds
daa
dec
mov
cmp
mov
stos
jno
(bad)
ror
popf
shl
mov
push
push
push
call
jge
nop
movs
jo
sub
jecxz
call
pop
push
mov
xor
lock
or
sub
mov
sti
cmp
xor
fsub
loope
inc
mov
out
(bad)
repnz
mul
enter
xchg
xlat
jge
inc
pushf
arpl
push
adc
call
xor
push
out
mov
dec
sbb
push
or
add
dec
repz
mov
or
call
out
ret
jbe
aaa
inc
fidiv
dec
jg
ss
bound
stos
mov
ror
jb
js
sahf
lahf
test
inc
push
test
(bad)
aam
loop
ret
lahf
cmp
jg
jp
mov
aam
pop
sub
in
repz
sar
shl
shr
scas
test
in
dec
clc
inc
or
cwde
mov
inc
mov
mov
push
mov
xchg
sti
(bad)
loopne
jle
fdiv
add
add
pop
sbb
lds
sbb
mov
dec
retf
add
cmp
hlt
pop
fimul
fistp
jae
lods
dec
(bad)
loopne
cmp
and
mov
mov
retf
add
sbb
xor
xchg
mov
pop
leave
inc
xchg
cmp
ja
pop
in
adc
dec
inc
push
lods
test
int3
mov
mov
add
das
jns
dec
sbb
fistp
(bad)
shl
mov
jbe
pop
mov
jge
xchg
push
push
imul
aas
fwait
adc
cld
xchg
arpl
ss
cmc
cmps
mov
dec
(bad)
push
retf
(bad)
mov
lods
out
out
jmp
ret
add
push
or
inc
inc
adc
rcl
mov
sti
aam
loope
fld
mov
adc
jb
enter
xchg
call
in
sub
inc
jne
xchg
cmc
or
push
push
mov
popa
popa
push
dec
pop
cmps
push
(bad)
jecxz
adc
inc
sbb
and
loopne
cmp
push
xchg
or
test
pop
(bad)
clc
(bad)
cdq
adc
ret
outs
push
or
shl
call
jl
(bad)
loop
push
pop
sub
and
popa
rcl
sub
mov
xlat
inc
add
pop
push
push
jmp
imul
call
hlt
push
ret
shl
aam
inc
jmp
mov
xchg
int
das
and
jo
jl
pop
or
jmp
xchg
loopne
push
jmp
sar
cmc
aam
mov
xchg
sub
sbb
cmc
(bad)
mov
inc
pop
out
xchg
xor
mov
sbb
ror
scas
push
ret
xchg
sar
pop
pop
cdq
loop
sbb
lods
retf
scas
xchg
jae
mov
jb
dec
jb
jnp
cmp
aaa
adc
lds
into
aam
xor
popa
pop
adc
repz
gs
mov
jecxz
jge
das
inc
in
add
cmp
push
dec
and
mov
rcl
jge
push
add
mov
mov
pop
scas
lds
div
jp
mov
mov
enter
pop
movs
sbb
dec
push
xor
imul
shl
jge
xchg
cmp
aas
push
and
pop
outs
dec
in
fwait
out
fnstcw
stos
mov
jns
in
xchg
shr
xchg
or
mov
fiadd
rcr
xor
cdq
push
mov
fcmovne
adc
lea
push
pop
add
retf
lock
mov
add
add
cwde
push
ret
adc
stc
xor
loop
push
xor
sub
sub
sub
cmp
loope
add
mov
sub
call
aaa
leave
xchg
jbe
rcr
stos
jb
adc
test
xchg
lahf
dec
push
mov
iret
or
pop
mov
movs
mov
inc
int3
sub
(bad)
lock
in
add
adc
pop
outs
jmp
pop
or
outs
loopne
aaa
cdq
loope
sub
pop
imul
jb
pop
stc
sub
iret
mov
mov
pop
(bad)
into
cmp
sub
hlt
push
mov
fisttp
xchg
adc
jge
sbb
sub
or
mov
sub
lods
fcomip
in
in
int
mov
out
dec
or
jge
jnp
retf
test
fst
sub
jae
pop
rol
je
pushf
invd
fdivr
mov
dec
(bad)
cmp
cmps
and
stc
aad
xchg
clc
ins
loop
ins
out
mov
and
les
imul
push
in
jo
push
pop
mov
(bad)
push
cmp
pop
add
lods
fisubr
das
call
or
(bad)
loop
or
push
cmp
sti
pop
hlt
sub
and
test
in
push
xchg
test
lahf
jb
movs
push
(bad)
icebp
mov
xchg
or
fwait
test
pop
sar
mov
push
inc
push
into
dec
repz
int3
fistp
add
pop
add
nop
pop
and
cdq
loop
sub
xor
ftst
pop
cmp
cmpxchg
(bad)
fiadd
ins
arpl
loopne
push
es
pop
movs
mov
cmc
inc
in
lods
ror
cmps
xor
retf
sahf
jl
or
and
cmp
movs
pop
mov
pusha
push
data16
xchg
inc
je
jl
call
cdq
scas
jle
xor
pop
inc
cmp
ret
add
sub
mov
scas
pop
fld
popf
push
cmp
adc
jge
test
xchg
fisub
je
push
jp
mov
xchg
and
adc
cmps
push
jecxz
aas
xor
ds
add
mov
sub
nop
pop
ins
ret
push
nop
cmps
jmp
add
add
inc
add
mov
bound
mov
cld
test
ror
pop
dec
lods
cld
sbb
sbb
inc
or
mov
add
jg
xchg
repz
xchg
retf
bound
mov
mov
mov
mov
shr
mov
pop
xor
or
scas
movs
adc
outs
scas
ret
xlat
js
mov
pop
fs
and
mov
sbb
out
ret
jmp
hlt
and
cli
push
dec
inc
mov
dec
mov
xor
mov
push
jnp
addr16
or
es
dec
fst
inc
jb
push
popa
sti
inc
mov
adc
arpl
and
push
or
or
mov
mov
xchg
and
jno
dec
cli
fwait
leave
movs
sar
int3
retf
nop
or
push
push
(bad)
jg
stos
call
test
pop
lods
or
int
pop
test
test
and
adc
push
add
cmps
mov
jge
fwait
ret
es
add
call
lods
push
sub
aaa
xchg
pop
leave
jle
stc
jnp
sti
cwde
xor
mov
pushf
add
arpl
adc
mov
sti
(bad)
mov
pop
sbb
imul
xchg
pop
add
fsubr
xor
not
sahf
mov
pop
mov
push
mov
jmp
pop
mov
pop
cmc
jbe
outs
inc
mov
gs
bound
pop
jmp
or
pusha
mov
jmp
shr
and
dec
or
adc
jae
inc
xor
mov
fld
(bad)
cdq
call
(bad)
xchg
shl
cs
cmp
popf
cld
dec
ds
sub
pop
shl
push
test
stos
pause
pop
fnstcw
push
bound
adc
or
pusha
push
cmp
mov
enter
sbb
mov
sbb
das
popf
add
ins
or
inc
sbb
inc
sbb
imul
cmp
sub
fsubr
bound
call
call
pop
movs
(bad)
dec
in
aaa
xor
sub
in
movs
mov
inc
mov
out
movs
mov
dec
xor
sub
(bad)
jle
stc
in
jno
imul
mov
jns
push
push
jl
(bad)
mov
jge
out
mov
or
popf
into
aas
cmps
bound
pcmpgtd
outs
mov
jp
jmp
xchg
js
xor
(bad)
nop
rcl
mov
jb
inc
fisub
pop
jno
mov
and
sbb
fcom
call
cmp
(bad)
aas
jmp
adc
sahf
cmp
popf
inc
dec
pop
mul
xlat
xchg
pop
inc
pop
xor
call
adc
stos
add
pop
stc
imul
cmp
popa
das
bound
(bad)
xlat
cmc
jp
mov
pop
gs
stos
(bad)
mov
jge
pop
(bad)
xchg
out
inc
call
add
call
push
jns
push
xchg
sbb
pop
add
popa
push
dec
aam
fxch
jecxz
or
mov
lea
das
and
call
add
add
jecxz
pop
mov
pushf
aad
or
popa
push
push
cmp
int
dec
xor
dec
add
jecxz
shl
nop
jecxz
int3
add
add
mov
or
push
jle
pusha
add
jne
or
xchg
in
adc
adc
stos
pop
push
push
adc
pop
mov
xor
repz
jg
in
jns
or
vandps
pextrw
movs
lods
jo
and
dec
scas
(bad)
push
movntq
enter
fist
sub
cmps
inc
mov
dec
add
cmp
cli
push
icebp
mov
fidiv
fsubp
mov
xchg
cmps
dec
xor
int
je
call
add
or
dec
jmp
xor
xor
and
cmp
cmp
cmc
dec
fld
popf
enter
ret
dec
outs
and
sbb
in
jae
push
je
fs
jg
fisub
or
pusha
ds
ins
cmp
jmp
sbb
or
movs
and
xor
inc
cmp
popf
or
icebp
std
retf
aam
jnp
mov
je
data16
mov
fs
sbb
daa
es
push
add
fiadd
test
aad
xchg
stos
cmc
pop
pushf
mov
aaa
aam
push
jnp
stos
in
leave
jne
repnz
push
inc
push
imul
cmp
rcl
pop
scas
adc
popa
jecxz
push
adc
xor
rcr
mov
pop
sub
mov
fwait
int
sbb
jg
or
nop
aaa
fst
scas
lahf
(bad)
hlt
rcl
(bad)
push
push
outs
shr
fwait
and
test
loope
es
shr
mov
add
out
mov
mov
pop
int
xchg
add
ins
inc
push
add
ja
loope
xor
xor
lds
push
int
dec
ins
or
xor
push
icebp
out
int3
mov
(bad)
inc
pushf
push
fisttp
fistp
mov
neg
stos
hlt
mov
test
xchg
inc
sahf
call
cmp
jbe
dec
inc
cld
fidiv
pushf
sar
mov
loop
cwde
data16
call
mov
mov
add
push
arpl
cmp
enter
call
sub
ins
(bad)
loop
scas
mov
jbe
cmp
lods
ror
out
(bad)
jl
pop
out
push
sub
fisubr
(bad)
mov
or
adc
test
ds
ds
jnp
iret
mov
mov
push
mov
jmp
sti
inc
shr
rcl
pop
push
mov
xor
mov
scas
cmps
mov
xor
iret
xor
jmp
loopne
or
fisttp
dec
mov
fnstsw
inc
mov
fidivr
mov
vcomisd
mov
push
and
jp
mov
and
aam
ins
fmul
xchg
xchg
jns
pop
xor
shl
ret
and
test
mov
xchg
or
aas
in
add
sar
pop
jns
xlat
div
clc
scas
inc
mov
push
fs
dec
nop
mov
push
sbb
push
(bad)
mov
pop
pop
out
pop
mov
mov
push
mov
jmp
pushf
(bad)
sti
pop
jnp
sbb
cmps
scas
pushf
mov
push
pop
scas
call
(bad)
pop
std
(bad)
pusha
jle
and
mov
test
pop
cwde
mov
(bad)
and
call
mov
pushf
dec
stc
pop
lods
jae
fisttp
les
jle
fisttp
jp
stc
(bad)
mov
sbb
retf
(bad)
aaa
sub
push
cmp
or
ins
mov
mov
add
pop
push
das
mov
jmp
push
pusha
xchg
adc
in
adc
cmps
stos
cld
mov
jp
std
ror
or
imul
inc
dec
xor
sub
add
sbb
mov
mov
jmp
fmul
rcl
cmp
sub
in
jecxz
icebp
mov
sar
test
push
enter
mov
scas
leave
cld
xchg
xor
jecxz
out
test
cmc
adc
dec
out
mov
(bad)
in
outs
fcomp
jecxz
push
xor
adc
rcr
sub
add
xlat
nop
xchg
loop
cmp
sbb
aad
mov
and
jne
in
fsub
and
cmp
icebp
and
daa
and
mov
cmc
test
or
mov
cmp
pop
inc
scas
adc
pop
fisubr
sar
mov
(bad)
sbb
or
mov
cmps
mov
or
pushf
repnz
add
sub
and
movs
push
push
inc
aaa
call
sti
lds
add
lock
add
sub
xchg
ret
mov
stos
mov
ja
pusha
test
stc
nop
jae
adc
mov
fidivr
call
jmp
mov
icebp
cmp
js
cmps
or
cmc
lods
sbb
pop
mov
xchg
and
mov
sbb
pop
cmp
mov
sahf
fidivr
and
xchg
aas
jnp
inc
je
add
jge
addr16
cmp
xchg
test
lahf
jnp
mov
xor
mov
xlat
and
xor
int3
fs
jns
std
pop
pop
cdq
mov
pop
clc
xlat
mov
push
jle
sti
(bad)
cwde
and
fucomip
imul
mov
ret
pop
test
cmp
iret
in
adc
(bad)
fist
mov
adc
dec
hlt
in
jmp
in
xor
sar
mov
mov
movs
and
sub
or
clc
fcom
es
data16
push
jnp
jb
adc
xchg
xor
popf
fnstcw
push
jp
ds
std
jg
bswap
xchg
loop
dec
outs
dec
sub
sar
jge
lea
es
jmp
loopne
push
outs
(bad)
and
dec
(bad)
retf
xchg
xchg
lea
inc
into
jle
rcr
rol
or
aam
lahf
add
outs
retf
es
mov
pusha
movs
mov
cwde
or
test
inc
mov
dec
frstor
xchg
dec
cmc
mov
add
fdivr
(bad)
push
pop
push
out
add
cmc
or
jb
jg
mov
cmp
adc
jae
mov
jmp
push
pop
movs
cmps
xchg
jmp
clc
(bad)
mov
retf
sub
ins
and
loope
out
mov
scas
and
pushf
cdq
adc
outs
inc
dec
sbb
(bad)
js
mov
push
xchg
leave
movs
dec
jmp
add
lock
xchg
xchg
retf
je
pop
xchg
or
out
outs
or
inc
fsubr
push
mov
stos
mov
imul
and
scas
push
or
movs
inc
push
std
sbb
xchg
ret
sti
cdq
dec
stos
and
nop
lea
inc
icebp
xchg
jno
inc
sub
add
mov
jnp
inc
mov
(bad)
cld
dec
in
pop
mov
test
cmp
push
test
mul
pop
jmp
clc
pop
in
loopne
pop
fcom
jb
sub
or
push
js
jmp
ins
adc
daa
rol
into
movs
push
retf
retf
arpl
lahf
clc
mov
push
retf
loope
outs
add
or
(bad)
mov
add
mov
sahf
mov
xchg
mov
inc
push
retf
cdq
repnz
xlat
pop
in
xchg
sub
push
out
into
sbb
sub
int3
pop
mov
out
sbb
mov
mov
dec
stc
movs
(bad)
xchg
lods
xchg
inc
xor
daa
inc
mov
sub
jns
sbb
sub
out
push
ja
or
gs
pop
push
shl
stos
(bad)
cli
out
inc
je
sub
dec
mov
mov
jbe
pop
(bad)
les
inc
(bad)
pop
and
dec
dec
aam
mov
mov
js
movs
mov
and
icebp
ret
retf
out
std
and
pushf
icebp
mov
stc
mov
mov
jl
rcr
xchg
lahf
movs
xchg
in
push
and
daa
data16
cmp
jge
aas
adc
pop
mov
mov
cmp
js
xlat
cmp
loop
add
fiadd
add
mov
(bad)
(bad)
cmp
popa
das
fnstenv
aam
imul
push
pop
mov
es
jo
push
call
lods
xor
fcmovnbe
or
imul
outs
ds
ins
lods
arpl
movs
movs
loopne
push
in
cmp
imul
adc
sbb
push
xchg
dec
lahf
sub
mov
std
aas
sub
xchg
daa
div
jecxz
mov
mov
outs
aad
jmp
inc
sub
(bad)
jge
sub
mov
stos
nop
cs
and
mov
mov
jne
test
add
das
ret
scas
dec
inc
ss
iret
jp
out
xlat
pop
or
imul
cmp
and
mov
in
cdq
inc
repnz
out
pop
ficom
jmp
pop
sbb
push
adc
test
pop
push
fisubr
inc
stos
xchg
loopne
std
pop
mov
mov
mov
stos
ret
jae
lods
in
daa
sbb
dec
pop
push
mov
(bad)
mov
dec
jnp
xchg
xchg
cmp
es
out
jmp
(bad)
nop
fcmovne
fld
jge
sub
cmps
cwde
or
fstp
xchg
pop
in
cmps
pop
test
add
(bad)
mov
adc
push
adc
push
iret
mov
sti
adc
fbstp
addr16
pop
outs
stos
arpl
cmp
fsubr
pop
sbb
add
mov
pop
pusha
xchg
mov
mov
jae
adc
push
adc
xor
dec
push
loop
push
mov
push
mov
popf
ret
sub
xlat
mov
jge
adc
dec
mov
mov
outs
(bad)
push
mov
test
test
add
mov
popf
es
push
mov
sbb
sbb
push
cwde
mov
int3
or
jbe
daa
in
xlat
xchg
adc
mov
sub
cmc
push
mov
stos
repz
dec
mov
in
cmp
push
or
add
int3
add
pop
adc
jnp
inc
or
sbb
or
mov
ins
clc
jmp
jge
pop
aaa
dec
xor
and
xor
xchg
sub
fucomp
std
sub
sbb
sbb
inc
retf
rol
sar
gs
data16
rcl
mov
jo
scas
and
cmp
pushf
pusha
test
ret
xor
cmp
arpl
pop
dec
cmp
mov
jmp
lea
xchg
cld
int3
cmp
mov
lock
mov
push
fcom
jecxz
repz
retf
ror
and
push
mov
popa
int3
test
pop
dec
pop
jmp
cwde
(bad)
stos
sbb
cmp
fadd
(bad)
mov
mov
jns
aam
scas
xchg
mov
arpl
or
ja
jnp
fbld
or
xchg
inc
ins
ret
ins
or
xor
out
fisubr
fsubr
loope
pop
inc
mov
adc
in
lods
inc
jnp
and
mov
sahf
fld
mov
pusha
mov
jmp
xchg
adc
into
xlat
add
jl
push
cmp
fimul
xor
adc
xchg
in
clc
popf
test
inc
adc
imul
xor
fsub
push
(bad)
cdq
jns
loop
pop
mov
jne
out
ret
cmp
test
and
fiadd
sahf
jns
and
mov
mov
xchg
mov
sbb
mov
lods
leave
or
dec
xor
jno
lahf
(bad)
push
xchg
pop
dec
mov
xor
inc
sub
jae
out
bound
dec
mov
addr16
pop
movs
sahf
dec
mov
ins
add
cmps
sahf
pop
cli
dec
faddp
cmps
jmp
mov
imul
jno
xchg
xchg
out
and
call
call
mov
jl
stc
repnz
and
and
cmp
xor
add
sub
cmps
fwait
and
bnd
int
inc
js
lock
inc
retf
mov
cmp
jb
jl
pusha
sbb
out
pop
adc
push
add
add
jl
mov
cmps
mov
scas
pop
fisub
in
(bad)
not
(bad)
sbb
or
mov
jg
imul
mov
xchg
jmp
shl
mov
clc
cmp
lea
movs
sub
push
and
mov
dec
mov
int
dec
sub
leave
mov
inc
ror
fdiv
jno
sub
les
mov
sub
inc
cwde
les
leavew
lea
sti
out
pop
mov
dec
leave
xchg
iret
mov
mov
jmp
xchg
jne
pop
out
das
aaa
and
enter
add
jge
mov
icebp
sahf
add
dec
adc
sub
(bad)
push
stos
xchg
movs
aas
mov
outs
out
leave
push
sub
ins
dec
push
cmp
dec
pop
add
and
test
les
adc
(bad)
aas
test
call
dec
pop
icebp
(bad)
test
pop
repz
not
fldenv
mov
jno
mov
jnp
pop
and
xchg
cmp
dec
jb
ret
fldenv
mov
scas
push
dec
add
aas
xchg
stos
lds
or
and
ss
out
xchg
mov
pop
test
ret
pop
or
test
inc
scas
mov
jmp
daa
imul
xchg
dec
xchg
or
outs
or
xchg
or
cmp
inc
push
xchg
sub
jae
aam
adc
mov
push
pop
add
xchg
cdq
cmovge
aad
mov
add
inc
pop
imul
in
mov
popf
or
dec
or
and
inc
cmp
loop
inc
in
mov
data16
test
and
fwait
retf
adc
cmp
or
sub
cmps
inc
lock
stos
and
in
imul
mov
push
xchg
mov
and
mov
fwait
or
adc
iret
cmp
sub
xor
lods
and
mov
mov
mov
ins
jmp
fsubr
inc
aas
push
psllq
ds
cli
and
jns
and
test
mov
xor
hlt
iret
mov
ret
addr16
or
ja
sbb
mov
lea
mov
or
push
call
pushf
mov
addr16
mov
das
aad
loopne
aad
cmp
mov
mov
jmp
and
pop
das
dec
mov
push
push
jns
addr16
xchg
mov
mov
inc
mov
adc
and
enter
adc
rcr
outs
sub
enter
sub
sbb
and
test
jle
inc
shr
cmovs
js
dec
dec
add
cmp
adc
jb
pop
cmps
rcr
cmps
push
push
cmc
push
pop
mov
inc
lods
ja
or
popa
ja
xlat
(bad)
aad
jne
mov
push
cmps
arpl
addr16
inc
repnz
xchg
loopne
adc
xlat
jle
icebp
cdq
out
(bad)
enter
pop
jbe
lods
mov
cmp
dec
nop
jp
stos
les
bound
jle
movs
cmc
fcom
push
int3
or
adc
ins
cli
nop
xchg
inc
mov
push
mov
inc
mov
or
xor
inc
fistp
sub
dec
jnp
inc
add
jle
dec
mov
xchg
pop
fisub
ss
sbb
cmp
mov
pop
lahf
sqrtps
(bad)
in
sub
fwait
or
cmp
imul
push
pop
(bad)
mov
retf
push
addr16
add
ja
mov
retf
or
xchg
sub
mov
sbb
mov
sub
dec
stc
pop
fcomp
pop
rcr
sub
(bad)
jle
inc
lea
scas
adc
sar
les
in
out
jae
or
mov
cmps
xchg
add
sub
pop
iret
adc
jmp
es
xor
inc
cmc
loope
in
and
lea
jmp
les
pusha
adc
je
inc
cmp
out
jmp
(bad)
call
lds
call
mov
fcomi
or
xor
inc
pop
mov
out
push
pop
jo
es
sar
das
xchg
inc
mov
lods
(bad)
mov
inc
mov
add
jo
inc
pushf
add
div
inc
cwde
(bad)
xchg
dec
clc
or
xchg
iret
pop
xchg
test
dec
push
cmp
cdq
fisttp
leave
(bad)
movs
cmps
loopne
pop
inc
retf
aad
in
or
fisttp
hlt
loope
cwde
popa
sub
xor
pop
ds
cmp
inc
sub
pushf
xor
mov
push
dec
push
xor
mov
lods
and
push
inc
fwait
popf
pop
call
shl
lock
pop
in
pop
inc
mov
movs
clc
imul
mov
gs
xchg
sbb
imul
jle
mov
frstor
push
pop
rcl
xchg
mov
adc
inc
pop
in
sbb
movs
int3
loop
mov
or
not
fld
ja
xor
and
(bad)
xchg
jnp
retf
aam
pop
test
repz
retf
inc
sub
dec
inc
loope
or
jne
cmp
ds
adc
cli
push
push
fisttp
icebp
xchg
repz
sub
add
push
cmps
or
cmc
(bad)
xor
push
cwde
test
loope
xchg
adc
xor
or
cmp
lds
mov
lods
xchg
inc
(bad)
push
inc
sti
pop
stc
jne
lods
popa
test
retf
iret
xchg
mov
dec
xor
stos
add
mov
jae
mov
lods
mov
dec
lods
pop
sub
cmp
sub
xor
movs
iret
cmp
push
push
jnp
jle
xchg
pop
sbb
inc
sbb
push
int
pushf
or
movs
cdq
jmp
ret
cmp
dec
mov
clc
jp
add
jnp
or
inc
(bad)
out
ja
mov
ret
inc
gs
pop
jbe
in
(bad)
jnp
clc
(bad)
in
loop
sbb
push
inc
mov
in
test
rol
cmp
mov
addr16
dec
ss
mov
out
xor
fiadd
fs
push
inc
sti
mov
fcomip
aam
cmps
sbb
in
inc
ja
sub
and
js
push
movs
mov
outs
mov
cmp
pusha
ins
xor
xchg
push
and
pusha
test
aaa
push
inc
and
add
sbb
lds
inc
mov
and
pop
cmps
mov
push
jo
sub
loop
(bad)
sub
(bad)
jae
cdq
mov
fdivr
(bad)
pop
push
daa
add
jnp
fwait
mov
mov
lea
inc
pop
out
xchg
sbb
jp
lahf
lods
call
xchg
xchg
pop
jge
out
push
inc
pop
mov
loop
pop
scas
push
push
push
popa
add
mov
jns
mov
xchg
jb
jmp
push
push
adc
push
jns
xchg
xchg
call
ins
outs
clc
xor
xor
cmp
mov
clc
scas
sub
test
adc
xor
nop
ins
jb
stc
xchg
cmp
jle
jmp
push
jne
ins
leave
jl
adc
dec
lahf
test
sar
into
xor
and
and
xor
cmps
mov
lock
(bad)
push
jae
outs
jns
mov
(bad)
ja
adc
gs
outs
sub
ins
pushf
fstp
int
mov
mov
mov
pop
movs
ret
mov
push
and
or
fs
mov
dec
cmp
xchg
addr16
mov
sub
(bad)
push
or
mov
outs
les
cmc
mov
shl
pop
lahf
add
mov
fcom
pop
or
clc
outs
push
rcl
outs
jg
mov
cmps
or
scas
xor
loopne
add
push
xchg
arpl
les
push
jo
(bad)
dec
mov
(bad)
xor
lock
test
and
xchg
jbe
cli
mov
into
xchg
xchg
out
je
xor
into
dec
icebp
push
mov
inc
or
outs
mov
fsubr
adc
add
sti
aas
add
cmp
hlt
push
cld
push
sbb
inc
vrsqrtps
inc
add
add
shl
mov
jnp
jb
pop
adc
mov
mov
pop
jp
mov
scas
int
adc
out
sbb
js
leave
lods
mov
hlt
stos
and
out
mov
nop
nop
adc
dec
mov
lods
ja
aam
inc
sub
out
sub
rcr
lahf
or
test
add
fadd
and
cmp
mov
cmp
xchg
jne
xor
xor
stc
mov
mov
imul
ins
push
sbb
or
jmp
test
mov
mov
push
fsubr
ret
push
add
rcl
jo
inc
ficomp
repnz
fwait
sbb
lahf
mov
rol
mov
xchg
mov
aad
push
jae
cmp
xor
or
clc
int
movs
cmp
stc
inc
jmp
iret
inc
and
cli
and
jbe
sbb
mov
mov
mov
mov
xor
imul
mov
sub
pop
fwait
sbb
int3
jg
inc
cmove
xchg
loopne
mov
xlat
push
and
mov
mov
outs
dec
mov
add
arpl
ins
mov
xlat
or
xchg
popa
jl
mov
jp
ret
xor
hlt
aad
jae
fucomp
jb
je
mov
imul
test
pushf
enter
mov
pop
data16
ficom
popa
call
inc
in
sbb
scas
push
mov
lea
xor
rcr
fnstenv
aaa
sub
mov
adc
pop
xchg
mov
sub
in
xor
and
imul
sti
push
cmp
jecxz
inc
dec
dec
mov
add
movs
sbb
sahf
mov
push
xlat
ficomp
sahf
pop
inc
add
mov
pop
sbb
push
lods
fistp
in
sbb
and
mov
sub
addr16
and
cmc
cmps
pop
lahf
jle
cmp
sbb
adc
cmp
jle
ret
inc
lock
fwait
add
(bad)
mov
xchg
popa
pop
je
xor
xchg
out
aas
mov
out
adc
mov
and
mov
and
push
inc
pop
ficom
inc
mov
and
(bad)
(bad)
push
fcomp
hlt
fwait
test
adc
adc
pop
sbb
cmc
xchg
xor
mov
popf
sub
test
cmp
mov
mov
pop
push
rol
imul
(bad)
loopne
add
xchg
movs
xchg
lock
pushf
(bad)
mov
mov
(bad)
rol
test
xchg
mov
cmp
jno
fnstcw
cs
retf
call
(bad)
das
ror
rol
cmp
(bad)
inc
jnp
push
xchg
in
aad
and
imul
je
jnp
dec
jae
mov
jno
inc
cmovs
call
adc
push
jecxz
into
in
and
nop
ficomp
stc
sar
in
cld
or
add
dec
pop
mov
int
jge
mov
je
cmc
ss
div
pop
jns
addr16
retf
mov
lds
aam
jb
scas
test
sub
fdivr
push
mov
adc
in
fdivr
fsub
out
push
scas
xor
sbb
scas
dec
mov
js
shr
push
jae
pop
dec
push
bound
mov
enter
rcr
add
(bad)
sar
add
mov
call
repnz
inc
clc
test
mov
loopne
aam
out
movs
sbb
fild
and
mov
cmp
movs
sbb
cs
mov
mov
es
mov
rcr
shl
das
(bad)
std
outs
mov
push
mov
dec
jp
mov
(bad)
or
shl
aaa
xor
jnp
adc
jns
add
jne
in
mov
dec
sub
xchg
daa
cld
fisttp
jecxz
push
ja
lea
test
lock
jp
cdq
shl
loope
bound
sub
and
imul
xlat
das
(bad)
cld
fdivr
mov
ja
(bad)
ja
iret
and
add
jl
xchg
add
cld
dec
clc
sbb
cmp
jg
fisubr
mov
adc
out
push
inc
inc
ja
dec
arpl
ins
or
sub
jmp
inc
rcr
scas
jbe
mov
jp
add
pop
dec
hlt
jno
dec
bound
test
lods
das
fwait
std
mov
cmp
out
retf
shr
push
sub
cld
mov
inc
jge
inc
jp
repnz
repnz
gs
inc
pop
push
aad
clc
pop
inc
inc
sets
call
test
(bad)
iret
jns
adc
(bad)
jne
out
scas
daa
addr16
iret
div
scas
pop
jb
pop
cwde
dec
sahf
xchg
mov
loopne
sbb
in
push
in
lock
out
(bad)
xor
outs
sti
test
push
retf
sbb
jns
sub
inc
xlat
(bad)
pop
retf
jae
adc
js
in
adc
inc
js
test
mov
xchg
fdiv
xchg
mul
jmp
cdq
pop
jnp
mov
mov
lock
retf
imul
lds
rol
arpl
push
fdivr
jecxz
aas
xchg
pop
fld
ja
aad
cdq
cmp
addr16
js
push
sbb
ret
or
sbb
scas
mov
sub
daa
pop
mov
in
push
mov
dec
nop
mov
scas
pop
sbb
mov
in
xchg
sub
pop
xchg
jno
pcmpeqw
xor
addr16
(bad)
shl
jae
sub
mov
int3
mov
xchg
test
cwde
lock
push
outs
and
(bad)
push
jno
shl
mov
aad
int3
sbb
xchg
or
jo
call
into
add
jg
mov
or
das
hlt
gs
and
rcl
or
xchg
lea
pop
movs
push
addr16
jecxz
pop
jp
loop
xor
xchg
pop
loopne
repz
pusha
inc
push
aaa
rol
outs
stos
cmp
sbb
mov
add
add
or
(bad)
cmp
cli
push
cmp
sbb
lods
push
pop
xchg
cmp
push
shr
xchg
pop
pop
lea
xchg
call
dec
mov
or
mov
int3
mov
out
cmp
push
push
ins
xor
lahf
xor
iret
sbb
cmp
arpl
shr
movs
adc
icebp
xor
cmp
jae
repnz
sbb
mov
adc
inc
nop
call
push
ins
in
pop
enter
or
push
add
arpl
or
xor
mov
shr
add
cmp
adc
icebp
scas
mov
call
xadd
movs
dec
sahf
cdq
bound
icebp
je
movs
jmp
ja
jmp
add
imul
mov
jg
sub
mov
inc
cmp
mov
xchg
pop
cmp
mov
and
ret
or
mov
jmp
in
add
sub
mov
scas
addr16
lods
sbb
stos
inc
and
mov
dec
xor
jbe
bound
push
clc
jbe
or
jo
ret
jae
mov
in
or
mov
repnz
int3
push
mov
xor
sar
ret
lds
sbb
jecxz
cmp
data16
pop
outs
dec
idiv
outs
outs
(bad)
ss
jo
dec
out
retf
std
fs
sbb
test
inc
rcl
mov
mov
retf
pop
jno
mov
xchg
mov
cwde
jl
lock
or
fidivr
push
push
sub
xchg
fbstp
or
lea
out
add
outs
call
mov
jge
xor
ret
pop
outs
sti
xchg
inc
clc
xlat
outs
aas
mov
mov
imul
jb
fstp
mov
pop
rol
scas
mov
ds
int3
test
std
inc
or
or
je
mov
xor
adc
xchg
js
std
call
jp
sbb
cwde
or
imul
push
mov
fisubr
push
pop
mov
cmp
inc
sub
mov
fadd
sub
mov
call
(bad)
sbb
(bad)
pop
xlat
shl
pushf
stos
mov
pusha
add
in
adc
mov
push
sub
cdq
push
jle
test
mov
hlt
sub
add
xchg
mov
push
xor
dec
add
aam
lods
inc
inc
into
dec
cld
xor
mov
inc
pushf
dec
or
stos
and
test
cmp
mov
pop
std
cmp
fsubp
pop
mov
cmovb
movs
xchg
mov
imul
jno
adc
sub
in
js
ror
or
test
lds
(bad)
add
inc
xchg
jns
xor
jl
mov
jno
add
sub
imul
jge
push
fidivr
movs
test
adc
test
out
imul
and
loope
push
push
xor
cmps
jecxz
sbb
mov
imul
mov
sar
ret
push
pop
inc
test
push
pop
movs
fwait
loopne
xchg
cmp
lods
fimul
fiadd
movs
mov
pusha
(bad)
cdq
sti
stos
or
inc
es
std
test
gs
and
xchg
jmp
sahf
push
pop
mov
jmp
push
mov
jns
or
or
sti
shl
pop
ja
cld
leave
mov
sub
cmc
ja
iret
and
adc
sbb
mov
dec
or
das
gs
movs
addr16
mov
cmp
lods
and
xor
xor
pop
shr
mov
cmp
loop
inc
mov
out
sbb
sbb
inc
cmp
in
mov
add
sub
pop
and
test
stos
mov
fidivr
(bad)
mov
and
pop
mov
neg
ds
cmp
js
xchg
mov
dec
inc
hlt
(bad)
jg
add
dec
mov
lods
mov
pop
mov
fwait
lods
nop
inc
cdq
int
adc
sbb
or
popa
jbe
repz
jae
daa
retf
es
xor
pop
(bad)
mov
sbb
sahf
pop
clc
pop
inc
imul
inc
lods
inc
(bad)
rol
sahf
push
adc
xchg
xor
adc
sar
xchg
inc
loope
int
push
or
addr16
outs
cmps
xchg
push
test
std
add
sbb
ja
push
cmps
int3
push
je
or
adc
inc
cmp
lods
mov
sub
or
mov
mov
fistp
mov
lock
test
push
hlt
icebp
mov
sahf
dec
and
std
outs
imul
pop
repz
cmc
loope
mov
shr
xchg
jb
leave
out
push
adc
add
or
push
gs
lea
dec
inc
sbb
xchg
mov
into
and
addr16
in
push
(bad)
adc
outs
out
test
mov
iret
mov
mov
mov
xchg
outs
inc
sub
aas
push
mov
test
push
ja
(bad)
imul
out
sub
jecxz
mov
sub
nop
retf
add
ins
mov
sbb
mov
pushf
lock
(bad)
call
dec
ret
enter
adc
in
les
repnz
jmp
sub
push
shr
pop
mov
push
push
mov
cwde
adc
ffree
call
sub
sbb
dec
cld
mov
push
push
dec
sbb
sahf
sub
cs
ret
iret
fld
lock
pop
xor
and
xor
call
aad
xchg
mov
dec
enter
call
sahf
dec
mov
(bad)
pushf
jge
ret
xor
ins
ins
lock
fs
push
jbe
in
ror
mov
loop
ins
out
push
xor
push
rcl
sub
inc
fistp
jg
mov
not
jno
add
push
cmps
xchg
mov
outs
scas
scas
aaa
mov
sub
or
daa
mov
dec
inc
clc
popa
or
cwde
push
or
and
or
push
adc
std
ror
cs
sub
loope
xor
stos
cmps
imul
and
(bad)
mov
or
out
adc
in
mov
sbb
xor
add
pop
cdq
sbb
pop
aad
fdivr
and
sbb
mov
loope
and
es
mov
aas
cdq
pop
push
aas
pop
pop
dec
and
rcr
addr16
or
cmp
adc
xchg
das
div
dec
loopne
cmp
sub
(bad)
fs
pop
ja
dec
xor
dec
mov
mov
mov
cmp
in
gs
stc
enter
(bad)
aas
repnz
movs
lahf
xchg
pusha
movs
outs
mov
xlat
les
jnp
and
test
push
loopne
in
repz
and
fmul
das
shl
pop
fist
loope
stos
test
sub
cmp
jl
into
jns
add
popa
js
mov
mov
icebp
or
xrelease
(bad)
sar
js
cwde
xchg
ror
repz
dec
ret
loopne
add
pop
mov
jmp
xchg
or
mov
(bad)
lahf
hlt
add
push
xchg
call
ja
in
rcl
lds
fcom
push
movs
call
sbb
psubusb
in
(bad)
loop
mov
int3
add
das
cwde
pop
mov
cmps
out
mov
inc
xor
std
push
pop
int3
jmp
das
cmps
push
xchg
test
cmp
jmp
jge
pop
mov
cmp
xchg
fld
add
adc
in
cmc
dec
pop
aam
and
pushf
xor
clc
(bad)
pop
xor
jmp
and
adc
pop
xor
(bad)
into
sbb
inc
cmp
(bad)
cli
xor
push
cli
add
sub
jbe
sar
aas
mov
cmc
shr
das
ja
scas
in
jmp
push
mov
and
nop
sub
dec
cwde
les
mov
in
bound
in
push
outs
xor
mov
nop
out
bound
imul
mov
call
js
mov
lods
daa
cdq
ret
in
xor
scas
push
inc
xchg
pop
movs
push
ss
test
cmp
push
or
adc
movs
icebp
into
cld
mov
leave
std
push
lock
xchg
pop
mov
(bad)
cs
arpl
inc
outs
(bad)
shr
call
(bad)
jp
cmc
and
xchg
lds
das
lahf
cmp
mov
mov
je
cli
cmps
push
aad
neg
xchg
inc
outs
jp
dec
sub
js
sub
jmp
das
sub
xor
hlt
mov
xchg
repnz
mov
push
xor
out
ret
adc
test
push
mov
jmp
mov
lds
lahf
scas
push
inc
outs
cs
pop
test
mov
imul
in
pop
gs
pop
mov
jg
(bad)
cmp
jae
dec
push
sahf
adc
mov
mov
pop
int3
retf
jp
inc
scas
and
(bad)
push
arpl
dec
into
jbe
push
test
or
jmp
and
or
sbb
mov
std
leave
fistp
or
cmps
sbb
cmp
pop
inc
iret
test
mov
mov
cdq
xor
imul
cmp
out
daa
inc
push
jns
in
or
sahf
jmp
pop
pop
pushf
ffreep
test
jl
in
jg
(bad)
call
mov
cmp
jmp
ins
xor
out
sbb
push
in
cmp
jecxz
movs
ins
mov
je
sub
retf
lods
sbb
ins
jmp
cmc
into
cmps
inc
push
inc
push
aad
sti
(bad)
fldenv
mov
or
rol
jl
imul
pop
xchg
inc
xchg
sbb
mov
or
cmp
mov
mul
cmps
cmp
sub
mov
mov
xor
jb
loop
pop
test
ficom
sar
add
pop
jge
repz
push
and
test
and
pop
add
loopne
bound
out
xor
push
mov
inc
sbb
mov
sbb
aam
mov
push
dec
xchg
push
arpl
push
add
mov
pop
xchg
sbb
pushf
xor
sub
cmp
loope
inc
cwde
mov
ins
and
stos
pop
fld
pop
cmps
sahf
arpl
push
cmp
push
jg
ror
js
sbb
sbb
jae
jp
or
and
out
ins
jb
in
(bad)
xchg
fistp
xchg
pop
dec
or
xor
mov
lods
ret
push
repz
inc
push
movs
mov
mov
mov
or
ret
ficomp
shl
cmps
pop
aaa
shl
retf
or
movs
jb
pop
ror
xor
and
inc
push
xor
sbb
lahf
test
push
add
xchg
adc
fstp
test
mov
ja
ss
pusha
push
adc
popa
(bad)
out
mov
pop
xchg
push
xchg
in
mov
jae
jbe
xor
mov
pusha
jp
or
cmp
fist
mov
mov
and
and
test
in
shr
test
iret
sbb
and
outs
es
imul
fistp
(bad)
out
(bad)
sbb
lods
int
cmps
out
fstp
lods
or
or
mov
mov
lahf
mov
sbb
ins
gs
cmp
pop
int3
push
test
clc
adc
pop
adc
dec
int3
add
push
push
leave
movs
cmp
lea
pop
pop
and
les
je
mov
mov
imul
aaa
shl
mov
sbb
jns
inc
test
sahf
test
loop
add
cmp
or
or
jge
inc
dec
jno
xchg
sub
xchg
xchg
cmc
inc
and
hlt
call
scas
xor
adc
je
push
mov
out
inc
cmc
test
scas
sub
inc
cmovne
and
and
adc
and
push
cmc
les
test
xchg
ss
shr
sub
bound
add
aaa
fisubr
add
not
aaa
pop
xchg
out
jmp
push
cmps
pop
imul
inc
cmps
nop
mov
mov
mov
mov
(bad)
cmps
mov
sub
mov
mov
mov
push
add
mov
lea
xor
das
dec
push
or
clc
shl
call
dec
jmp
scas
and
jno
sti
inc
sbb
js
popf
xchg
cwde
outs
into
xor
pop
jno
es
sub
mov
das
in
inc
or
pop
xor
fucomi
aam
dec
lods
inc
dec
das
add
outs
jp
retf
mov
add
and
mov
sbb
stos
jl
sub
inc
sti
pop
shr
push
mov
js
jnp
ret
jnp
es
je
or
(bad)
jnp
xchg
xchg
out
int
data16
nop
stc
ret
cmp
push
dec
stos
mov
jmp
scas
sub
jno
imul
aaa
jle
cmp
pop
arpl
outs
enter
cli
(bad)
jmp
les
push
test
and
(bad)
nop
gs
cmps
fsub
fs
jg
push
imul
test
cmps
sbb
dec
outs
movs
sub
xchg
add
iret
and
mov
mov
sbb
xor
aad
mov
idiv
cmp
and
jae
xchg
mov
pop
stos
inc
xor
or
in
sar
xchg
lahf
(bad)
inc
lods
cmps
call
cmps
inc
es
and
or
hlt
fidiv
fs
in
fstp
mov
inc
sbb
mov
add
nop
gs
fimul
cld
jg
pop
in
(bad)
and
nop
dec
cmp
sub
aam
repnz
jo
in
adc
sbb
iret
cmp
xchg
jae
popw
xchg
inc
cld
out
dec
in
mov
arpl
mov
movs
ret
(bad)
jecxz
and
mov
fist
push
adc
mov
mov
fld
sub
outs
push
jno
xor
inc
(bad)
cs
xor
pop
rol
aam
mov
xchg
mov
lods
push
jp
cmp
test
mov
nop
cmp
cli
sub
fistp
in
lods
retf
adc
or
dec
aad
pop
mov
retf
sub
adc
icebp
stos
inc
push
and
xchg
pop
aam
mov
jle
mov
fcmovnb
jge
push
and
fisttp
test
pop
jle
int3
mov
mov
test
aad
and
stos
inc
fbld
mov
fs
ficom
pusha
xor
adc
and
and
sbb
pop
ret
xlat
add
aam
cmp
mov
enter
inc
lods
out
cmps
sub
int3
mov
enter
add
mov
mov
mov
bound
fcom
fbstp
js
daa
out
ss
xchg
mov
rol
into
adc
pop
addr16
(bad)
js
push
xchg
add
cli
clc
adc
(bad)
loope
adc
dec
inc
addr16
pop
dec
icebp
popf
movs
icebp
outs
mov
mov
mov
xchg
(bad)
(bad)
add
lahf
retf
in
outs
popf
push
out
lds
sahf
push
fcom
mov
fisubr
jmp
xlat
adc
gs
jmp
and
jno
cmps
pop
sub
js
inc
call
test
mov
test
mov
scas
mov
mul
push
dec
stos
in
mov
repz
inc
or
(bad)
das
xor
adc
fmul
jnp
test
loop
sub
xor
and
shl
arpl
fcomp
outs
mov
xor
in
fild
xor
cwde
jo
jmp
movs
addr16
jno
mov
xchg
(bad)
in
xor
mov
mov
or
xor
mov
and
sahf
lods
lods
icebp
fidiv
push
mov
pop
cld
mov
jp
inc
sub
iret
(bad)
push
cdq
xor
pop
add
fidiv
je
aad
mov
data16
push
cmp
aad
call
pop
xor
popf
stos
pop
hlt
xor
push
iret
push
retf
clc
(bad)
mov
imul
pusha
scas
inc
jmp
jle
mov
adc
or
pop
mov
mov
test
xchg
jmp
arpl
or
mov
xor
mov
jmp
stc
sti
push
cmp
mov
fnsave
js
stc
rol
push
push
jbe
xchg
(bad)
ins
sbb
xchg
je
inc
mov
(bad)
sbb
jno
lahf
mov
loop
add
aam
xchg
jp
into
addr16
and
pop
cmc
sbb
mov
repz
pop
xor
stos
loopne
inc
add
mov
adc
add
addr16
lds
push
inc
mov
cmp
mov
cmps
xor
sub
sahf
cdq
add
neg
loope
lds
inc
lahf
or
frstor
cmp
jmp
aam
clc
fs
xchg
dec
int3
or
sub
out
mov
shl
sub
xor
add
sub
push
or
and
jmp
ds
es
sar
sahf
into
and
mov
js
popa
enter
jmp
ins
arpl
in
xor
lds
sbb
loope
aas
dec
sbb
jae
aas
cld
inc
in
pop
pop
pop
push
xchg
push
mov
xchg
pop
jg
pop
mov
jmp
and
cdq
jne
cmp
cmp
retf
fiadd
test
jae
mov
fdiv
mov
test
push
push
fnstenv
dec
ins
je
xor
int
pop
out
cmp
(bad)
fcmovnbe
jo
jl
repnz
adc
(bad)
fsubr
test
retf
loop
int3
push
call
pop
jno
jge
and
push
dec
lea
cmc
stos
mov
and
inc
and
pop
mov
add
mov
and
retf
fistp
rcr
lock
cld
jmp
outs
mov
mov
pop
sbb
mov
imul
cmps
fadd
(bad)
(bad)
adc
jl
rcr
fisubr
mov
jae
cmp
jmp
jmp
xlat
imul
cmp
push
mov
(bad)
push
out
icebp
push
retw
sbb
cmp
repz
inc
push
and
and
sub
sub
mov
fnstcw
dec
into
test
jmp
enter
rcr
(bad)
repz
(bad)
push
imul
rol
pushf
push
xor
das
ja
int
(bad)
fbld
mov
enter
adc
imul
mov
popf
fidivr
jnp
loop
add
test
dec
or
cmp
pop
mov
jns
enter
inc
inc
lea
jae
cdq
or
sbb
adc
mov
mov
mov
push
sbb
stos
adc
lock
pop
pop
mov
jl
pop
xor
cmp
pop
cmps
add
mov
ins
xchg
ret
sub
out
jmp
pop
mov
adc
dec
shl
sbb
push
xchg
in
or
xor
and
call
rcl
jb
enter
xor
not
xchg
adc
dec
inc
cli
sub
mov
inc
and
dec
int3
dec
adc
iret
clc
jmp
dec
js
push
ret
dec
sub
mov
add
jae
(bad)
test
dec
inc
cmps
pop
mov
dec
sbb
fbstp
jne
mov
jno
retf
adc
lea
out
imul
mov
jl
cwde
je
loope
inc
cmp
add
pop
mov
adc
mov
not
sbb
sahf
pop
clc
adc
jne
xor
inc
fisub
and
ins
lea
pop
sbb
mov
push
sbb
adc
sub
jg
and
inc
pop
mov
inc
mov
jp
and
and
jl
mov
dec
push
lea
iret
or
iret
(bad)
arpl
xchg
ds
repz
add
mov
inc
pop
lahf
pop
adc
(bad)
jmp
sbb
call
push
scas
adc
xchg
dec
mov
push
test
sar
adc
retf
in
(bad)
pop
addr16
mov
clc
daa
sbb
cld
mov
push
sbb
nop
or
jbe
push
or
lods
push
push
arpl
add
ins
sbb
push
ins
push
mov
xor
cld
pop
rcl
push
ins
cmp
adc
das
inc
sahf
aad
mov
aam
jg
test
add
inc
jp
pop
popa
loop
or
add
sbb
adc
sub
scas
out
idiv
or
mov
pop
cmp
arpl
mov
pop
movs
aas
(bad)
shl
lea
fsubr
outs
shl
int
add
xor
pop
mov
and
push
lods
xor
mov
or
pop
shr
jg
add
iret
mov
shl
cmps
pop
adc
cmps
mov
pop
iret
mov
xchg
pop
popf
popf
daa
adc
mov
data16
icebp
dec
mov
sbb
(bad)
dec
pop
popf
pop
call
mov
and
div
loope
dec
nop
xchg
and
mov
icebp
pop
mov
pop
ins
mov
and
xchg
mov
dec
jmp
addr16
xor
std
inc
retf
jl
mov
loop
imul
hlt
scas
cld
movs
shl
ficomp
add
enter
ins
out
fwait
fwait
push
fwait
xor
and
adc
pop
xor
call
aaa
mov
pop
sub
xchg
scas
test
lods
test
jle
test
lock
push
push
dec
lods
xchg
sbb
ja
and
gs
rcl
xor
js
shl
scas
inc
jnp
rcl
leave
and
xor
(bad)
fisttp
xchg
mov
fwait
mov
clc
ins
pop
sbb
fs
in
push
outs
push
bound
cmp
lods
in
or
push
aad
cwde
or
(bad)
je
jnp
mov
add
mov
out
xchg
adc
fld
cmps
cmp
inc
fs
repz
cli
cwde
test
call
call
lea
mov
mov
jl
xor
push
sbb
adc
ins
mov
pop
enter
test
pop
xchg
dec
or
arpl
and
leave
aaa
mov
in
sub
sbb
xor
sar
call
mov
test
fld
mov
fwait
xor
push
dec
add
add
mov
leave
(bad)
out
ja
mov
sahf
iret
ret
scas
aad
dec
fneni(8087
mov
mov
cs
add
cmp
adc
pop
mov
call
jecxz
dec
sub
dec
movs
inc
and
and
pop
cmp
sbb
pop
int3
in
push
xor
and
xchg
lock
outs
retf
movs
lock
(bad)
jne
sbb
inc
sub
cmp
mov
ins
adc
push
(bad)
mov
mov
fcmovb
dec
inc
(bad)
enter
xchg
xor
ds
scas
jl
mov
arpl
aad
dec
fst
cmp
shl
call
push
retf
test
aam
loop
ja
dec
jo
cmps
retf
stos
sub
test
(bad)
stc
jg
xchg
(bad)
jp
cmc
nop
stc
jns
enter
(bad)
push
mov
push
pop
sub
and
dec
in
mov
call
ret
inc
gs
dec
push
ins
addr16
clc
dec
fs
les
into
and
pop
movs
sbb
mov
movs
mov
sub
pop
cmp
enter
loop
leave
scas
pusha
js
cmp
and
fcomp
jl
mov
sub
pop
sbb
mov
push
push
test
fnstenv
outs
fimul
popf
pop
scas
and
pop
ror
mov
fld
(bad)
ror
ds
ss
jne
and
jmp
xor
push
ins
add
fs
enter
add
mov
or
(bad)
jmp
mov
mov
pushf
mov
sbb
arpl
jge
push
cmp
and
addr16
call
push
call
pop
mov
xchg
in
test
dec
fwait
lahf
rcl
repnz
mov
rol
or
jg
inc
clc
loope
pop
lds
sbb
shr
retf
pop
imul
aaa
pop
mov
jmp
gs
mov
sti
out
mov
adc
inc
dec
mov
mov
inc
adc
aam
adc
pop
imul
and
sbb
mov
fst
push
daa
adc
ja
pop
xchg
or
adc
or
fist
mov
push
int3
xor
jbe
pop
rcr
xchg
sub
cmp
std
das
mov
and
outs
push
aas
sar
rcr
push
sbb
dec
add
retf
fsub
ss
inc
ins
ret
movs
icebp
shl
fwait
xchg
sub
cmp
ins
ret
cmps
sub
adc
mov
mul
xchg
mov
cmp
jmp
mov
mov
fistp
add
lods
mov
stos
iret
push
call
daa
inc
jecxz
pusha
arpl
xchg
xchg
aas
xchg
ds
cmp
aaa
ret
jbe
icebp
and
test
int
xor
jmp
cld
in
sub
and
adc
rcl
dec
mov
cmp
int3
mov
dec
fst
dec
xor
popf
les
xchg
inc
mov
jmp
adc
jo
test
sbb
aam
repnz
mov
dec
push
jne
sub
inc
mov
not
enter
std
jmp
and
lock
clc
pop
mov
sbb
and
push
jmp
inc
out
loope
jb
addr16
sub
add
sbb
mov
adc
ins
mov
inc
push
mov
aam
(bad)
sti
xor
mov
mov
leave
pop
rcr
mov
aam
test
jp
mov
pop
or
inc
dec
das
neg
imul
cwde
es
add
stos
xchg
push
push
xor
sub
pop
jno
jne
mov
call
je
retf
fcmovnbe
int
test
jne
lods
sbb
lahf
push
xor
xchg
add
pop
mov
out
push
adc
pop
out
fdiv
cs
fist
sbb
(bad)
iret
arpl
(bad)
xchg
push
aad
xor
xchg
fdivrp
fsub
jmp
pushf
in
lock
loop
cmc
cmps
popa
push
js
sub
sbb
xor
fstp
jl
add
aaa
and
sbb
sub
es
out
test
(bad)
xchg
cmps
shl
rcr
(bad)
push
and
rol
dec
aaa
stos
clc
cmps
jb
add
and
rcl
pop
add
cmp
dec
sbb
jae
jmp
mul
dec
retf
test
adc
xchg
lods
ret
xor
sti
pop
ret
or
nop
jmp
pop
cmp
popa
push
sbb
test
outs
push
and
mov
cld
jae
idiv
or
jl
mov
cmp
aaa
sub
dec
dec
push
cmc
dec
fsubr
add
push
out
mov
or
lods
imul
jg
sbb
and
lea
sahf
inc
sbb
sar
ds
sahf
or
jo
ja
dec
mov
enter
sahf
mov
cmps
push
sar
shr
pop
inc
push
pop
sti
pop
cmp
fnsave
daa
push
movs
mov
repnz
mov
cmp
rcl
fldcw
pop
scas
je
add
jge
cmp
leave
sbb
sbb
or
aad
and
mov
data16
ds
pop
xchg
fadd
pop
jle
cmp
push
cmps
mov
or
dec
mov
cmp
add
mov
add
mov
mov
mov
mov
sub
(bad)
sub
(bad)
or
stc
imul
add
mov
not
mov
jge
cs
ret
mov
rcl
mov
bound
cmps
(bad)
dec
inc
xor
adc
lods
ins
stos
push
pop
bound
xchg
dec
sar
sub
xor
xor
pushf
ss
and
push
push
sbb
dec
mov
push
jle
scas
inc
mov
lds
xor
push
ror
das
das
hlt
mov
push
xchg
je
inc
mov
jmp
inc
sub
movs
outs
cmp
imul
mov
in
popf
mov
mov
jno
jbe
aaa
inc
pop
mov
les
xor
or
jbe
and
arpl
cmp
mov
inc
jmp
test
or
mov
les
inc
xlat
enter
(bad)
mov
imul
xor
jl
int
imul
add
jns
cmp
push
cmp
js
sar
fsubr
pusha
add
fs
jne
(bad)
retf
shl
cmp
lods
test
and
lods
int3
cmps
mov
lahf
xchg
mov
outs
popf
nop
xchg
les
inc
jmp
pop
cmp
shr
xor
ins
cmp
mov
mov
pop
pop
sub
gs
(bad)
sti
adc
push
rcl
fnstsw
pop
nop
test
dec
jbe
dec
leave
push
ror
pop
inc
(bad)
ficom
push
add
push
mov
sub
jle
push
in
and
and
clc
ret
xlat
ret
shl
pop
lahf
cmp
rol
test
das
(bad)
sti
cmp
in
pop
fwait
xor
dec
lea
adc
neg
xor
or
mov
xchg
jl
(bad)
std
inc
xchg
jg
adc
iret
xchg
inc
add
push
and
push
inc
lea
ror
mov
call
jnp
in
xor
and
repz
fistp
mov
mov
out
and
jl
cmp
ja
ss
mov
neg
xchg
sbb
call
repnz
(bad)
mov
sub
pop
out
xor
ret
div
neg
out
xor
popa
sbb
mov
int3
popa
outs
fstp
push
sbb
es
cmps
push
and
sbb
add
shr
or
imul
icebp
add
cmp
fisttp
push
stos
inc
xchg
test
cmc
(bad)
aam
xchg
inc
xchg
dec
lahf
enter
popa
pop
(bad)
loop
inc
jecxz
cmp
and
pop
out
cs
or
pushf
ror
cmp
inc
jae
jmp
bound
jl
icebp
cwde
mov
lahf
test
push
fistp
ds
cwde
int3
xor
ss
add
ret
jmp
push
push
in
cmc
sahf
pop
push
cmc
ss
lods
push
nop
jbe
sub
nop
or
mov
retf
sbb
xor
inc
je
lock
mov
push
sbb
jbe
cmc
cmp
jmp
dec
push
or
retf
inc
push
pop
push
imul
inc
add
and
hlt
leave
rol
mov
cld
pushf
cs
pop
and
(bad)
mov
push
add
mov
push
popf
xchg
cs
lods
pop
pop
sub
or
xor
push
test
sbb
sbb
mov
addr16
sub
movs
mov
xor
(bad)
xchg
sub
xchg
(bad)
xchg
cdq
mov
ss
rol
or
ss
in
adc
mov
mov
xchg
adc
(bad)
iret
dec
sub
jmp
stos
inc
stos
fcomp
jmp
call
and
sub
ins
out
sub
lock
mov
mov
les
in
mov
les
scas
mov
test
mov
cwde
pop
pop
test
popa
xchg
push
sub
loope
test
or
sbb
(bad)
in
or
loop
cs
xor
lds
aam
jle
jmp
fld
loopne
jmp
xchg
cmp
ins
sbb
adc
push
(bad)
jns
shl
ins
test
pop
xor
fs
ror
or
inc
daa
imul
out
mov
mov
(bad)
fndisi(8087
hlt
je
cmps
inc
adc
je
es
retf
sbb
add
or
push
sbb
test
inc
sub
lods
push
push
adc
and
arpl
jne
jl
aad
jo
inc
mov
imul
fbld
or
ins
cmp
enter
pop
sti
clc
dec
into
dec
mov
test
cs
scas
xor
pop
out
(bad)
(bad)
jecxz
cmp
xor
cdq
ja
mov
js
mov
add
test
push
in
push
pop
outs
ret
daa
ret
push
adc
loop
mov
or
jg
test
push
adc
fiadd
push
lea
ins
sub
iret
in
stos
jl
add
rcl
adc
jg
jo
cmp
or
(bad)
cdq
neg
dec
xor
fsubr
das
jl
xchg
cwde
inc
add
cmp
cwde
test
xchg
das
or
mov
sbb
cmp
cli
xor
add
xchg
sbb
sar
in
movs
scas
(bad)
call
add
mov
cmp
cmp
cli
shl
aad
xor
in
fld
in
dec
nop
mov
repz
je
mov
int3
mov
sti
cmp
int3
retf
mov
mov
push
leave
or
imul
out
push
movs
lods
pop
or
rcr
sbb
movs
pop
pop
jmp
pop
add
and
or
aad
add
lahf
push
fmul
fisubr
cdq
or
lock
mov
ror
fld
adc
push
cmps
jecxz
stos
jmp
dec
mov
jecxz
out
inc
js
retf
addr16
sbb
and
cmp
inc
lahf
pop
jo
dec
mov
jmp
xor
inc
out
icebp
mov
into
inc
ret
(bad)
and
jmp
outs
jns
xchg
mov
jne
inc
xchg
lods
ds
iret
cmp
js
(bad)
popf
pop
ins
jne
lock
cwde
dec
xchg
mov
push
inc
sbb
cmps
mov
or
ins
xchg
push
mov
mov
mov
das
or
adc
jbe
jle
and
jge
sbb
test
push
clc
xchg
mov
mov
xchg
mov
fadd
out
cmp
pusha
mov
les
mov
call
xor
in
or
pop
sub
out
movs
(bad)
mov
cmp
call
mov
test
bound
mov
cmp
add
cmp
push
clc
call
or
in
sbb
xchg
and
ret
dec
imul
popa
push
or
(bad)
lods
into
pop
int3
mov
mov
jmp
std
fbld
pop
add
out
ficomp
jb
je
adc
fild
leave
in
aas
add
bound
cmp
jns
clc
mov
test
push
inc
lds
popf
call
mov
and
es
and
adc
movs
movs
call
in
jmp
pop
cmp
mov
sbb
hlt
aam
xchg
push
cmps
adc
adc
or
mov
push
xchg
(bad)
cdq
xchg
push
push
into
sbb
test
movs
retf
cmps
ror
arpl
mov
push
or
cld
lea
dec
inc
dec
leave
sahf
inc
fadd
inc
pop
ins
push
add
(bad)
push
xor
out
xchg
push
bswap
mov
xchg
(bad)
push
iret
out
jg
mov
mov
inc
xor
xchg
mov
movs
setbe
mov
or
test
dec
or
pop
mov
pop
xchg
retf
test
push
mov
cmp
cmp
adc
cli
pop
inc
pop
push
pop
and
sub
pop
(bad)
div
sub
or
xlat
rcr
imul
test
mov
pop
jno
or
(bad)
ja
mov
popa
sar
ret
mov
inc
test
add
addr16
or
mov
dec
movs
cld
test
push
stos
ins
sub
stos
mov
and
pop
jb
bound
out
dec
call
cmp
out
xchg
lds
lock
rol
add
jmp
fcomp
sub
scas
xchg
mov
pop
std
fs
jl
push
ja
sub
sub
xor
lods
stos
pop
jnp
mov
call
mov
adc
jmp
sahf
pop
dec
push
xchg
lods
sbb
cli
int
push
in
(bad)
pop
and
ins
dec
(bad)
into
daa
push
or
cmps
mov
sbb
hlt
rcr
in
xchg
pushf
pusha
or
stos
cli
mov
shr
or
cmp
cwde
mov
sahf
loope
mov
idiv
retf
neg
mov
(bad)
jge
sub
xor
(bad)
and
or
jmp
and
cmovge
mov
inc
popa
fisttp
xchg
push
mov
xchg
xchg
xor
cmp
shr
sbb
dec
mov
enter
ins
sbb
jge
int
xchg
or
or
cmp
ss
adc
mov
fs
in
cmp
xchg
stos
add
xor
popa
add
test
inc
xchg
mov
in
mov
lock
movs
lahf
movs
in
dec
xor
cs
test
ficom
int
and
dec
jae
fcmovbe
push
xor
mov
mov
sub
pop
ret
test
jne
push
out
sbb
retf
imul
adc
ds
pop
pop
lahf
cmp
inc
imul
sbb
mov
jns
mov
jl
icebp
cmc
or
pushf
mov
xor
push
test
or
lods
xor
mov
fwait
mov
icebp
pop
adc
cmp
cmps
into
xchg
std
pop
inc
sub
jns
dec
pop
cdq
add
pop
xor
pop
or
clc
adc
js
aad
mov
dec
lahf
pop
out
mov
in
adc
fcmovnbe
lods
stc
stos
mov
adc
dec
fwait
xchg
stc
fsub
faddp
mov
and
xchg
xor
mov
jnp
cmp
movs
cli
das
(bad)
ins
lds
loope
clc
pop
gs
test
inc
mov
lods
scas
cmc
mov
fldln2
or
out
jle
or
das
pop
mov
push
movs
dec
mov
pop
jno
fistp
mov
cmp
xor
jmp
(bad)
in
aam
jle
dec
xlat
(bad)
cmp
imul
push
imul
inc
jmp
push
fsubr
ret
push
sar
add
jp
cmps
(bad)
call
adc
test
cld
xchg
sub
push
sub
lea
pusha
ins
(bad)
fnstenv
and
popa
adc
sti
mov
or
pop
mov
push
leave
sub
arpl
push
pop
jmp
not
int
imul
push
(bad)
pop
int3
jno
mov
push
xchg
jnp
and
in
jle
dec
push
imul
mov
test
xchg
jne
neg
or
mov
jo
mov
add
shl
mov
sti
jbe
xchg
pop
fmul
or
mov
js
mov
and
mov
outs
ret
inc
mov
push
add
adc
inc
sub
mov
imul
pop
mov
mov
pop
cmp
pop
push
lds
mov
jl
rcr
xor
pop
dec
push
mov
shl
mov
stc
mov
push
push
and
cmp
xor
js
in
xlat
sub
cmp
in
stc
pop
push
sahf
les
ja
test
mov
mov
out
push
cld
inc
mov
loopne
mov
sbb
and
cld
das
ficom
xchg
mov
out
lods
mov
gs
loopne
mov
fst
sbb
clc
and
add
cli
les
sti
jl
out
mov
js
add
das
aaa
ins
cmp
dec
push
xchg
sbb
dec
jae
ror
into
fistp
lods
call
cmp
inc
cmp
cmps
xchg
push
call
(bad)
or
jmp
dec
int
fcmovnu
jmp
mov
push
sbb
shr
jg
ja
sbb
stos
hlt
cmc
mov
hlt
popf
jne
movs
mov
sbb
cmp
or
outs
dec
push
ins
test
jne
jne
outs
movs
xchg
lahf
pushf
push
dec
loop
ret
mov
stc
jl
pusha
ret
call
jbe
mov
retf
test
xchg
ret
mov
pop
dec
mov
fs
jns
and
mov
sbb
jmp
les
push
mov
test
mov
and
mov
pop
sbb
mov
dec
loope
imul
jo
jb
and
in
mov
and
ja
(bad)
and
(bad)
xor
popf
cmp
cmps
bound
and
inc
mov
or
mov
push
xchg
call
rcl
xor
cmp
sub
cmps
test
ss
cdq
mov
jne
or
repz
pop
outs
cmps
sub
sti
inc
(bad)
outs
mov
push
daa
ins
inc
cmp
pop
pop
xchg
(bad)
adc
outs
mul
pop
mov
add
not
add
mov
cmp
bound
loope
cmp
(bad)
in
add
int3
push
fnstcw
push
in
mov
nop
jno
lods
mov
arpl
mov
lahf
fs
out
sti
dec
adc
jbe
pop
mov
jmp
mov
(bad)
push
xor
cli
xor
push
or
cmp
movs
enter
jmp
xlat
aas
retf
mov
test
xchg
scas
and
arpl
aad
xor
in
xor
jmp
(bad)
lea
jae
ds
xchg
lds
inc
cwde
sub
dec
shl
pushf
push
mov
ja
iret
outs
pop
scas
cld
cmc
(bad)
movs
mov
xchg
or
cs
push
je
out
ins
pushf
outs
push
mov
sub
xlat
loopne
cmc
add
rol
sbb
jo
mov
xor
dec
xchg
fdivr
call
pushf
mov
or
shl
je
ins
stc
ss
shr
fldcw
inc
or
int
mov
inc
push
(bad)
retf
jmp
fbstp
push
add
xchg
xchg
dec
stos
out
mov
(bad)
dec
lea
arpl
pop
aad
pop
xchg
or
inc
push
add
dec
cpuid
out
adc
int3
rcl
in
rep
inc
dec
push
sub
or
push
aad
popa
(bad)
repnz
bound
and
lods
push
mov
mov
jbe
add
aad
scas
cmp
push
ret
mov
pop
push
je
dec
retf
and
mov
dec
mov
mov
outs
sub
add
cvtdq2ps
sbb
test
or
and
imul
shr
shl
sub
dec
and
and
sub
or
mov
(bad)
fdivr
sub
cmp
(bad)
mov
scas
ret
mov
repnz
dec
pop
jb
mov
cs
cmc
cmp
pop
sahf
lds
sbb
or
lock
mov
sbb
add
ja
(bad)
lea
dec
mov
or
shl
cmp
arpl
je
sub
lea
cmp
shl
adc
popf
not
out
ss
popf
jmp
rcr
mov
add
mov
sti
popf
xchg
das
(bad)
ficomp
in
outs
call
mul
pop
(bad)
pop
stos
in
in
imul
gs
sar
stc
je
add
pop
ins
sub
push
lods
adc
or
push
pop
and
rcl
dec
push
jmp
cmp
cmps
mov
jne
scas
not
sar
inc
cmp
icebp
pop
and
pusha
lea
enter
mov
sbb
jno
cmp
jmp
sti
hlt
add
test
test
jmp
or
cld
(bad)
clc
cmp
enter
pand
inc
or
pop
adc
es
xchg
in
xchg
test
mov
inc
pop
clc
or
jl
dec
sbb
pop
jns
dec
hlt
out
movs
mov
(bad)
movs
test
inc
cmp
jo
and
cmp
push
test
imul
mov
int3
aaa
and
dec
hlt
xor
sahf
adc
push
or
test
sbb
fs
add
cmps
rcl
or
aaa
sub
push
sub
xchg
mov
(bad)
call
cmp
pop
cli
mov
mov
push
mov
cmp
jae
fs
ds
and
mov
retf
mov
jecxz
dec
add
aam
ret
add
push
cld
(bad)
popa
cmp
test
pop
je
jp
in
gs
pusha
mov
xor
sti
clc
ss
mov
jbe
mov
add
adc
(bad)
adc
sbb
pop
xchg
push
jns
cmc
lea
sbb
das
in
or
je
in
aad
cmp
xchg
adc
ja
cmp
xor
or
ror
mov
mov
mov
inc
inc
pusha
outs
inc
cs
mov
push
xor
scas
jmp
jne
jns
push
cmp
cwde
leave
mov
xor
hlt
jg
(bad)
xchg
lds
xor
add
push
icebp
sbb
je
jp
jno
xchg
pop
inc
int
mov
loope
push
and
add
inc
ss
shl
add
cmps
jne
ja
(bad)
mov
adc
cdq
call
test
cmp
sbb
mov
mov
movs
and
cli
xor
fiadd
enter
enter
out
and
lahf
rol
rcr
(bad)
pop
lahf
mov
nop
or
jno
inc
shl
ds
test
pop
inc
stos
stos
mov
and
aad
mov
push
xor
xor
mov
cld
test
imul
cwde
mov
pusha
mov
lock
jle
pop
jle
mov
mov
mov
and
scas
popa
jg
icebp
fldcw
enter
inc
cmc
mov
fmul
call
or
movs
out
gs
xor
dec
out
xlat
pushf
mov
sbb
xchg
dec
retf
jmp
scas
add
jecxz
mov
and
lock
in
mov
ja
push
cmc
cmps
push
data16
dec
into
fsubr
inc
loope
cmps
sbb
dec
mov
push
add
xor
test
inc
push
push
jnp
jge
shl
pop
mov
xchg
cmp
aad
jmp
sub
push
or
jb
es
ds
dec
movs
movs
je
div
in
xor
cmp
xchg
sub
shl
xchg
ficom
cmps
pushf
cmp
mov
movs
xchg
xchg
pop
pushf
and
mov
jbe
push
inc
cwde
inc
xor
out
movs
jl
pop
nop
rcr
mov
xchg
dec
ror
leave
pop
or
mov
mov
ret
ror
cli
push
pop
pop
mov
iret
cmps
jns
pop
lods
movs
test
jmp
bound
lock
add
add
jae
cmp
mov
hlt
push
outs
cwde
adc
loope
outs
out
mov
in
lods
inc
push
xor
and
call
lds
retf
cmp
data16
outs
rcr
mov
repnz
arpl
sahf
mov
inc
arpl
mov
pop
test
jns
test
outs
cmp
jecxz
popf
mov
iret
addr16
cmps
push
dec
enter
mov
out
adc
not
cwde
ret
popf
mov
xchg
test
dec
xor
jae
xchg
pusha
inc
dec
adc
cwde
les
fst
add
sbb
jmp
jl
and
adc
sbb
out
es
adc
sub
into
dec
aas
pop
les
cmps
ucomiss
jno
or
movs
test
cmp
jno
mov
out
inc
push
xor
cmp
and
dec
add
fstp
aas
popa
dec
icebp
jl
jl
jmp
mov
cmp
sub
out
ins
or
pop
push
je
pushf
mov
sbb
mov
loopne
fldenv
jle
ins
retf
push
imul
mov
mov
repnz
fild
jno
or
mov
and
outs
scas
push
adc
pop
or
sahf
jns
mov
out
jmp
clc
inc
loope
ds
cdq
movs
mov
jl
(bad)
adc
xchg
fnstsw
inc
dec
(bad)
dec
cmp
inc
js
daa
mov
lods
mov
movs
add
in
and
(bad)
out
adc
movs
ret
gs
(bad)
repz
lock
gs
push
movs
or
sbb
jo
call
dec
jle
mov
(bad)
mov
jecxz
adc
jmp
jno
mov
and
cwde
or
inc
ja
pop
clc
fcom
lods
aas
lahf
movs
adc
and
ret
enter
sbb
pop
clc
mov
push
xchg
icebp
aaa
push
add
cmp
xchg
mul
sahf
dec
sti
loope
mov
dec
push
fwait
outs
xchg
ret
das
or
(bad)
std
jmp
cwde
sbb
aad
sbb
rcr
call
daa
xchg
daa
fs
push
inc
xchg
ja
inc
sub
push
jns
mov
scas
push
mov
dec
jle
jmp
pop
push
cmp
xor
pushf
add
mov
cmps
lea
jge
xchg
(bad)
mov
loop
jge
sub
sub
xchg
add
mov
xchg
jnp
in
xchg
ss
or
push
mov
retf
(bad)
gs
cmp
mov
mov
inc
pop
cmp
cmp
imul
imul
loopne
loop
aad
mov
call
xchg
inc
(bad)
neg
loop
dec
out
adc
dec
push
pop
call
cs
xchg
(bad)
dec
enter
iret
aad
retf
sbb
sbb
mov
ss
loop
repz
mov
fwait
add
cli
or
mov
repz
out
pop
bound
inc
stos
imul
mov
inc
popf
sub
loopne
aam
mov
cmp
stc
loopne
inc
inc
lahf
in
or
cdq
jp
outs
sti
lods
mov
daa
in
sbb
push
jno
xchg
and
dec
pop
adc
out
in
scas
sub
popf
add
push
mov
lock
inc
leave
mov
mov
cmp
cmp
inc
xor
push
mov
cwde
and
sbb
std
jb
out
xchg
jp
mov
add
or
ret
sbb
mov
ins
retf
mov
lds
push
aas
mov
fnstsw
adc
add
xor
or
ja
jb
and
xchg
jno
dec
aad
rcl
outs
jne
popa
ds
add
mov
xchg
mov
sub
rcl
add
fild
and
(bad)
mov
mov
xlat
add
pop
jmp
ja
and
sbb
add
bound
(bad)
hlt
mov
fild
mov
cmps
in
std
dec
das
mov
daa
sub
sbb
xchg
add
push
mov
xor
sub
out
cmc
arpl
sub
std
scas
sbb
mov
inc
jmp
xor
dec
xchg
enter
cmp
ins
xor
pop
sahf
lea
test
mov
add
rcr
pusha
loopne
push
(bad)
xor
mov
lock
rol
push
pop
or
fsub
cmp
test
hlt
popf
sbb
stos
sub
dec
pop
fnsave
jge
cmp
in
mov
leave
add
(bad)
cmp
cld
mov
adc
dec
mov
test
push
call
and
int
popa
leave
add
cmp
(bad)
hlt
xchg
js
cmps
int3
aas
aad
(bad)
xchg
jg
aam
enter
ficomp
and
mov
test
cmp
loopne
inc
movs
cmc
xchg
dec
jp
gs
aad
js
loop
pop
jg
lods
sub
xchg
mov
xchg
repnz
pop
add
mov
or
add
push
xor
xchg
imul
fmul
jmp
repz
bound
and
jae
cli
dec
and
mov
shr
cmps
xchg
test
sbb
add
fistp
mov
jmp
out
jno
ror
lahf
fistp
scas
cdq
jo
cmp
lods
xlat
adc
fsubr
dec
aas
(bad)
xchg
cmps
stos
add
pop
dec
iret
sbb
in
fidivr
rol
or
imul
mov
sbb
loope
push
std
push
ds
test
retf
stos
jecxz
movq
xchg
xchg
push
cmp
fxch
dec
out
mov
sahf
sub
das
jecxz
sub
aad
mov
dec
sub
pop
daa
enter
add
sbb
mov
iret
mov
mov
mov
push
ficomp
int3
in
movs
push
and
nop
and
mov
ret
imul
add
adc
iret
adc
push
inc
into
repnz
mov
scas
push
jns
(bad)
cdq
leave
sahf
(bad)
ss
sub
cmp
cs
std
push
mov
clc
clc
add
dec
movs
sbb
or
pop
sub
or
lock
jl
inc
clc
out
retf
cmps
rcl
sbb
test
movs
mov
out
pop
xchg
mov
shl
lods
mov
add
sub
add
pop
fild
inc
in
int3
inc
ret
mov
xor
into
xor
xor
or
jne
arpl
jl
mov
cmp
jnp
ret
add
out
imul
mov
dec
adc
ss
cli
push
outs
mov
bound
dec
dec
aam
mov
in
or
movs
ret
xor
push
test
xchg
retf
in
dec
cvtps2pd
or
ror
test
jno
mov
out
push
je
fnstenv
shr
in
enter
jno
ins
push
sub
mov
pop
jne
push
int3
call
push
add
mov
arpl
ins
pop
int3
xor
jne
or
pushf
mov
push
cld
or
fbstp
aam
jl
fadd
pusha
or
setbe
cdq
(bad)
repz
jmp
add
xor
or
push
xor
cmp
push
dec
xchg
add
aaa
ss
mov
lods
sub
adc
inc
push
pop
cmp
in
in
es
cwde
push
xchg
jo
sahf
inc
push
mov
mov
scas
sub
mov
repnz
mov
aas
movs
aad
xor
sub
data16
push
mov
mov
std
pop
movs
inc
mov
out
push
inc
comiss
inc
outs
test
fild
jo
sbb
lock
clc
rcr
xchg
pop
xchg
shl
inc
fsub
pop
outs
jmp
push
mov
push
ds
push
stc
xor
cli
jnp
cmc
data16
mov
lods
and
sub
mov
icebp
sub
mov
mov
out
xor
push
push
jae
ins
xchg
jge
xchg
jmp
je
and
call
xchg
scas
xlat
(bad)
es
inc
mov
clc
imul
mov
lds
sbb
neg
or
clc
cmp
and
sbb
loop
cmps
lahf
mov
xor
inc
pop
add
sbb
popa
adc
adc
dec
cmps
sbb
cmp
add
ja
mov
mov
outs
lods
xchg
out
sub
adc
cmc
jns
jmp
imul
shl
stos
test
hlt
xor
pop
adc
in
mov
shl
cmps
out
and
cmp
(bad)
fistp
int
or
call
test
gs
jno
add
(bad)
jp
in
sub
sbb
cld
cld
cmp
arpl
mov
push
shr
sub
movs
xor
inc
(bad)
pusha
jno
cmp
icebp
and
add
jge
xor
leave
frstor
add
cmc
loopne
pop
gs
push
jno
imul
lea
movs
jg
ret
cmp
or
cdq
mov
xor
loop
retf
mov
test
(bad)
rol
cmps
xchg
or
push
cmp
aas
pop
std
ja
outs
mov
not
sub
sub
xchg
sti
xor
int3
xchg
pop
and
int
mov
and
cmp
std
shr
nop
rol
or
xor
cli
into
frstor
(bad)
cmp
shl
cld
pop
pop
aad
jno
movs
loop
inc
dec
xchg
ds
jae
fst
(bad)
mov
mov
xor
movs
dec
push
call
outs
and
pop
fwait
call
xchg
iret
push
rol
mov
aam
pusha
jmp
xchg
xor
ins
outs
add
data16
ss
scas
lock
addr16
or
hlt
lock
and
cld
pop
scas
add
in
lea
(bad)
in
inc
dec
ret
mov
ins
movs
sub
jl
clc
movs
and
xchg
rol
ja
aaa
ror
and
fnstsw
mov
sbb
or
jb
call
ins
jae
xor
neg
cmc
sti
push
sub
test
ret
jne
mov
push
inc
xchg
out
(bad)
bound
in
call
out
pop
ret
inc
lock
in
(bad)
pop
out
ficom
adc
xor
xchg
rcl
int
xor
add
mov
adc
adc
fld
loop
adc
lahf
push
dec
push
and
inc
xor
je
fiadd
mov
xchg
cmps
nop
sub
js
je
sub
dec
outs
jmp
or
ret
fisub
cwde
(bad)
and
xchg
movs
jbe
int3
jmp
adc
jbe
and
mov
int
retf
inc
in
jp
xchg
and
mov
push
aad
scas
lea
pop
fwait
xor
ret
mov
or
out
hlt
pop
jge
push
add
cs
cld
mov
shl
and
aam
push
fmulp
(bad)
in
dec
repz
and
inc
out
dec
mov
xor
(bad)
mov
mov
xchg
popa
fstp
enter
fisttp
repz
retf
pop
or
popa
cmp
jne
pop
out
out
neg
cmp
inc
ja
mov
push
fwait
xchg
adc
sub
jno
push
add
xor
mov
nop
xor
xor
xchg
pop
and
and
add
xchg
inc
jge
dec
daa
cmp
or
jg
aas
rcl
call
jp
(bad)
mov
scas
fimul
mov
into
(bad)
xor
scas
dec
mov
and
push
sub
retf
mov
mov
rol
adc
(bad)
or
push
lods
sub
adc
sbb
xlat
sbb
mov
mov
xchg
rcr
and
repz
fsubrp
movs
shl
cmp
sbb
inc
push
add
into
arpl
fbld
(bad)
push
fsubr
add
pfnacc
mov
rol
stc
inc
and
gs
int3
addr16
in
out
xor
push
jge
in
out
pusha
pop
pop
es
jb
ffree
cs
imul
add
fwait
mov
jmp
cwde
retf
jp
add
popa
jge
stc
xor
pop
lahf
mov
mov
call
inc
mov
loope
cs
push
cmp
pusha
outs
mov
mov
add
out
out
fwait
sbb
xchg
repz
gs
dec
pop
cdq
scas
bnd
or
and
pshufw
movs
fld
mov
pop
fdivr
xchg
jp
ins
ja
mov
inc
adc
cwde
out
leave
cdq
cmp
into
pop
jno
cmps
pop
popf
xlat
sub
mov
imul
mov
and
gs
cs
dec
jl
dec
fidivr
jg
sti
sahf
sub
dec
ins
aad
mov
(bad)
pusha
test
ret
inc
gs
adc
daa
or
dec
hlt
jge
int
sbb
jle
xchg
cwde
xor
fsubr
int3
jle
pushf
pop
pop
jg
jl
and
push
push
pop
pop
sbb
cwde
pushf
popa
xlat
outs
sub
jmp
or
jb
jp
dec
mov
call
or
and
scas
movs
hlt
pop
hlt
add
or
setns
aaa
inc
jno
sbb
push
mov
pop
arpl
xchg
bound
fsub
dec
clc
leave
cmp
imul
call
push
inc
lods
jl
sbb
mov
cs
je
movs
and
int
mov
sahf
mov
rcr
out
push
or
jbe
pop
lea
shl
dec
or
pop
add
scas
push
jne
jmp
and
pop
cmp
cwde
or
fisttp
mov
pop
and
sub
pop
in
cwde
push
adc
popa
lds
mov
into
(bad)
mov
loope
xor
gs
dec
out
sub
(bad)
xor
sahf
mov
xor
sti
loop
stos
sub
test
sub
mov
mov
push
inc
pop
inc
xchg
int3
arpl
sub
xchg
fs
sub
je
mov
imul
mov
rcr
fcomip
mov
xchg
iret
sub
xor
push
mov
sub
inc
int3
push
jl
pop
mov
icebp
sahf
jae
sub
lods
mov
push
iret
jbe
mov
adc
mov
call
cmp
call
cmp
inc
dec
out
mov
jle
adc
out
mov
(bad)
or
sub
inc
jl
icebp
sub
lahf
mov
pushf
leave
xchg
add
jp
jle
xchg
sub
fisubr
mov
inc
inc
pushf
mov
dec
or
push
mul
pop
aaa
mov
and
and
out
cmp
pushf
out
mov
outs
inc
xor
mov
sahf
ret
inc
(bad)
jp
ds
dec
data16
loop
out
pusha
pop
mov
cli
mov
xor
jnp
push
ret
(bad)
in
sahf
hlt
push
mov
inc
fdivr
pushf
jnp
jbe
jl
fwait
(bad)
sti
mov
ins
mov
imul
imul
(bad)
xchg
mov
dec
outs
push
jecxz
sbb
lgs
imul
sti
mov
xor
bound
lahf
add
outs
xchg
mov
push
rol
push
jae
xchg
(bad)
sbb
daa
inc
mov
add
sbb
cmc
sbb
jmp
and
pop
dec
idiv
mov
ficomp
sti
aaa
dec
jg
(bad)
ins
daa
mov
out
mov
sti
mov
push
lahf
outs
ret
cmp
pop
jbe
das
aam
imul
xor
mov
mov
dec
jecxz
fwait
jmp
sar
xor
sbb
pop
sbb
stc
lods
aam
mov
mov
push
je
sbb
adc
inc
cs
test
pop
test
inc
ror
popf
lock
jmp
xchg
jbe
test
je
and
push
loopne
mov
ret
in
rcl
dec
dec
mov
pop
and
inc
pop
inc
in
dec
rcl
test
mov
enter
cmp
loop
in
les
jg
sbb
pop
ds
sbb
call
vmovhps
data16
outs
fwait
mov
mov
fdivr
lea
ret
push
frstor
frstor
aam
out
fidivr
clc
jg
fcmovu
jmp
fiadd
inc
shr
push
stc
lods
popa
cli
mov
sbb
cld
jl
mov
fisttp
mov
pop
fisubr
mov
pop
jbe
inc
lds
push
test
int3
rcl
dec
dec
sub
xchg
jmp
mov
and
inc
push
in
loopne
loopne
das
xor
push
jmp
jne
add
jecxz
jo
cmp
lds
in
(bad)
in
mov
pop
hlt
jno
or
cwde
pop
ins
repnz
int3
scas
and
jl
mov
mov
into
push
shl
int
xchg
pusha
and
loop
retf
shr
ins
(bad)
ds
add
pop
mov
add
ss
inc
int
loope
xchg
aad
movs
sub
jle
sbb
in
into
sub
dec
lock
cli
inc
retfw
or
sub
enter
dec
psubusw
jp
cmps
mov
shl
arpl
nop
ret
mov
das
push
mov
rol
aad
in
sub
mul
dec
int3
fadd
inc
mov
push
out
cmp
loopne
jge
test
jmp
jl
mov
mov
sbb
lea
loop
xchg
cld
fmul
jo
bound
jl
lods
mov
outs
imul
dec
jge
adc
pop
mov
scas
adc
sbb
push
test
or
sbb
mov
mov
fiadd
jns
imul
xchg
leave
cmp
jnp
push
mov
mov
or
jg
mov
pop
cmp
call
dec
sbb
pop
or
cmp
jo
mov
dec
enter
lahf
iret
and
ins
dec
or
push
scas
push
cmps
jmp
mov
xor
mov
and
in
lods
mov
call
pop
and
pop
cmp
sbb
iret
call
fsubr
test
leave
sbb
sub
xor
retf
ror
push
add
inc
lds
icebp
push
fsubr
stc
je
outs
dec
adc
inc
scas
loop
pop
retf
pop
pop
pop
test
jo
mov
shl
in
adc
inc
and
jge
xchg
test
sbb
jae
clc
cmp
jne
push
adc
and
sbb
fcom
(bad)
retf
push
jle
pop
sti
retf
cmp
mov
jnp
icebp
xchg
test
adc
test
ds
fistp
nop
cli
xchg
ins
cmp
push
mov
inc
pusha
sub
mov
movs
mov
shl
div
(bad)
in
sbb
or
pop
(bad)
sbb
jns
mov
in
pop
and
cmp
dec
inc
in
mov
mov
test
fcomp
mov
lds
cld
pop
call
pop
mov
jmp
bound
jbe
adc
loopne
outs
jno
jno
rol
popw
lahf
jp
push
inc
adc
ins
sub
dec
adc
int3
xchg
cmp
mov
inc
movs
dec
(bad)
hlt
dec
out
fdivrp
movs
adc
sub
nop
xor
jns
sar
mov
rcl
sbb
ficomp
pop
ret
adc
inc
or
xchg
sub
repz
xlat
sbb
push
out
push
mov
or
lods
leave
sub
repz
dec
popf
add
push
and
ficom
push
xor
inc
popa
jmp
jno
hlt
stc
mov
inc
add
and
lock
lods
cmp
lahf
and
test
cmp
das
sub
int
addr16
mov
in
sti
test
gs
call
add
arpl
ret
loopne
and
xor
loopne
(bad)
pop
jl
xchg
push
je
fidiv
push
inc
dec
mov
scas
xchg
(bad)
or
ret
repnz
cvtpi2ps
sbb
xchg
inc
jns
enter
adc
xor
lds
ficom
mov
lods
push
fnsave
stos
pusha
xchg
dec
add
enter
jl
xor
test
inc
shl
pop
push
xchg
mov
fadd
sti
sbb
sar
or
cmps
stos
scas
pop
aaa
mov
jecxz
inc
sar
xor
xor
call
xlat
push
les
mov
xor
outs
pop
jl
mov
pop
test
xchg
imul
pushf
repz
fcmove
add
cmp
mov
es
mov
sbb
push
fnstsw
outs
std
in
in
clc
sbb
test
iret
mov
jns
sub
push
mov
ficomp
adc
(bad)
fisttp
inc
pop
or
jge
(bad)
das
mov
push
inc
shr
call
leave
mov
jmp
push
mov
sub
xchg
iret
mov
inc
je
jmp
fnstcw
cs
call
inc
pop
mov
mov
xchg
rol
inc
mov
push
gs
mov
and
or
outs
xchg
mov
cmp
cwde
pop
pop
ret
pusha
imul
add
dec
add
jge
jb
mov
loopne
mov
pop
daa
paddusw
int3
or
sbb
pushf
ret
popf
mov
lahf
xchg
jo
jg
out
mov
pop
dec
jae
xlat
out
cmp
fstp
cdq
repz
inc
repz
push
ror
inc
daa
faddp
push
leave
dec
jnp
mov
xchg
xchg
xor
xchg
pushw
retf
or
push
pop
pop
xchg
mov
mov
mov
and
into
xchg
pop
retf
shl
mov
movs
and
xor
cdq
(bad)
dec
repz
das
mov
pop
xor
and
mov
add
mov
dec
mov
out
ss
pop
fistp
and
outs
xchg
lods
mov
pop
pushf
push
lods
scas
push
in
jg
addr16
es
popf
jmp
retf
xchg
test
sub
dec
hlt
out
jnp
or
enter
in
mov
add
call
(bad)
int
xor
xor
lds
mov
cmp
cmp
leave
cmp
in
lea
sub
retf
clc
jnp
xor
into
pusha
sbb
push
(bad)
sub
push
movs
push
rcr
xchg
sar
jl
imul
or
push
sub
gs
xchg
xor
fild
es
lock
adc
cld
(bad)
mov
or
(bad)
xchg
std
ret
sahf
je
mov
mov
xchg
data16
push
shl
xor
cmp
test
xchg
jbe
shl
nop
je
add
jbe
sbb
add
test
pop
mov
lods
stc
mov
nop
icebp
scas
lods
mov
push
mov
dec
or
adc
popa
or
sbb
cmp
lds
dec
pusha
jno
in
nop
and
cmp
fisub
jae
pop
jbe
dec
mov
cmp
or
jg
push
pop
pop
push
cmp
mov
jmp
jbe
pop
dec
(bad)
jbe
xchg
and
add
sbb
mov
xor
pop
loop
sub
inc
add
mov
lock
push
push
cmp
jecxz
add
pop
cdq
cs
bound
data16
les
retf
imul
test
es
jmp
pop
les
jbe
mov
cmp
mov
rcr
xchg
(bad)
push
test
(bad)
(bad)
xor
sahf
and
push
push
mov
jae
inc
(bad)
aam
xchg
mov
inc
call
movs
test
fs
stos
push
jge
int3
pop
jo
add
sbb
fucomi
sub
add
push
shl
pop
daa
mov
jo
cmps
or
ins
add
(bad)
repnz
jge
mov
push
retf
mov
rcl
and
add
pop
in
add
cmp
mov
cmp
clc
div
mov
clc
ret
ins
dec
cmp
mov
xchg
push
adc
daa
sar
ret
sub
scas
mov
cld
mov
xor
xor
cmp
or
clc
push
ficom
(bad)
movs
scas
sbb
stos
add
je
sbb
ins
sub
and
add
in
fcmovnb
push
xchg
fs
aad
xchg
in
movs
sahf
jecxz
(bad)
test
and
mov
or
xor
aad
pop
js
lock
mov
xor
or
jns
mov
cs
cs
das
or
pop
mov
adc
mov
dec
sbb
daa
xchg
pop
sub
jle
(bad)
mov
nop
jns
stos
ret
sahf
add
cmps
daa
pop
adc
add
mov
lea
sbb
lock
push
test
xchg
fadd
adc
and
xor
xchg
dec
rcl
mov
xchg
mov
xchg
(bad)
or
sub
fcomp
xchg
cdq
mov
js
xor
(bad)
mov
loopne
out
mov
jle
aas
push
int3
in
xor
test
and
jl
fild
adc
sub
mov
jnp
jl
add
imul
add
xor
jno
xchg
in
and
fsubr
xchg
mov
sub
jecxz
jns
icebp
lods
adc
inc
fldln2
in
shl
and
ret
mov
jb
mov
mov
(bad)
rcl
repnz
cmp
lock
loope
daa
add
jmp
pop
jg
scas
in
rcl
fdivr
js
prefetch
or
stc
xchg
dec
int
leave
ror
stos
mov
dec
dec
inc
xor
lock
clc
mov
ret
or
rcr
dec
cmp
xchg
stc
xchg
pop
neg
cmp
jmp
aam
ss
in
and
ds
mov
adc
ins
cld
ret
mov
sahf
add
inc
sti
fcomp
cmp
test
loop
rol
cmp
imul
aaa
xor
aas
jno
dec
rcr
jle
xchg
or
(bad)
test
pushf
(bad)
mov
mov
(bad)
jle
cmp
add
or
data16
add
iret
jno
les
add
pop
daa
test
test
into
stc
cmp
outs
mov
xor
or
ins
push
sub
std
push
inc
push
dec
jae
inc
and
fs
add
push
je
mov
mov
fiadd
inc
pop
add
xor
push
addr16
or
sub
mov
and
repnz
cmps
pop
ds
mov
ret
sub
adc
fwait
push
mov
sbb
mov
imul
xchg
sbb
iret
scas
arpl
adc
movs
mov
test
sbb
aaa
neg
fwait
js
ins
xor
fist
sbb
mov
push
inc
cdq
mov
je
sbb
cmp
jbe
add
inc
xchg
cmp
fst
es
fisub
dec
sub
cmp
lahf
add
jbe
loopne
shr
mov
inc
nop
test
jbe
push
jbe
je
sub
mov
nop
dec
sbb
add
and
sbb
and
sub
mov
daa
pop
in
rcr
jmp
ret
movs
jb
mov
ss
inc
jns
cmp
pop
inc
jmp
or
fbstp
or
or
stos
out
sub
aam
xor
jae
(bad)
retf
into
xchg
dec
mov
ds
rcl
pop
pop
sub
mov
scas
mov
dec
jae
sub
fwait
sbb
retf
iret
mov
pop
mov
pop
dec
and
adc
int
pop
and
js
mov
cli
xchg
dec
(bad)
in
adc
out
imul
sti
xchg
push
loop
dec
pop
sahf
xchg
popa
jp
ins
adc
loope
leave
add
ins
cmp
sbb
aaa
jne
dec
rol
cmp
aaa
imul
aaa
mov
fucomp
fdiv
test
mov
movs
inc
mov
mov
and
cmps
jl
sti
and
retf
aaa
sbb
fscale
rol
js
and
loope
shr
push
retf
ss
jg
add
test
sbb
push
jb
in
and
test
fsubp
imul
pop
iret
push
das
retf
movs
fwait
mov
and
adc
icebp
push
jno
mov
mov
cmp
fdivp
cmps
jno
lahf
fnstenv
mov
in
out
les
adc
shr
mov
(bad)
mov
add
or
inc
xor
add
daa
sub
cmp
sti
sbb
in
mov
dec
adc
popa
mov
cmp
cmp
cmc
jecxz
aas
mov
fwait
jae
sub
cmp
ret
out
cmp
ds
imul
out
retw
psubd
cmp
(bad)
rcl
jmp
inc
mov
mov
frstor
push
cmps
in
dec
and
jge
xor
in
fistp
push
int3
stos
gs
xchg
sbb
push
jecxz
adc
outs
pop
nop
mov
loop
jo
xchg
repnz
mov
dec
inc
fistp
js
jge
stc
push
cmc
jmp
xor
ror
sahf
fdivr
and
(bad)
bound
(bad)
mov
dec
cmps
pop
sbb
pop
fwait
pop
mov
push
mov
xchg
jnp
xchg
jle
mov
lods
scas
pushf
cmc
add
inc
scas
data16
xor
sbb
add
pop
adc
iret
inc
mov
mov
fwait
ret
dec
and
rcr
sub
sbb
jae
adc
adc
popf
adc
test
jne
inc
pop
dec
cmp
jmp
icebp
dec
push
xchg
adc
leave
fisub
push
lods
repnz
jne
and
adc
mov
sbb
out
test
jbe
call
pop
shl
mov
test
out
aaa
pop
mov
mov
cmp
and
test
jp
mov
mov
mov
sub
test
jae
imul
push
jb
popa
add
hlt
enter
repnz
inc
jl
iret
pop
add
mov
jle
clc
fldcw
sti
std
fwait
out
nop
mov
xor
mov
jnp
mov
cmp
mov
dec
inc
push
int3
cmp
inc
arpl
adc
dec
dec
lods
stos
(bad)
fimul
pop
test
imul
dec
rcr
fiadd
cmp
jge
xchg
or
repz
add
inc
lds
or
adc
les
pusha
les
popa
jmp
dec
inc
dec
in
add
fst
shl
mov
sub
test
xor
movs
add
jns
add
add
ror
jmp
in
jns
into
xlat
aad
mov
adc
ja
add
or
aam
ror
inc
xchg
cmps
out
push
imul
jl
jnp
pop
enter
pop
fistp
scas
adc
call
test
and
push
xchg
sub
cmps
movs
aad
mov
cmp
mov
xlat
fwait
ds
sahf
sbb
cmp
mov
jo
mov
push
test
inc
fs
loopne
mov
sahf
scas
out
scas
mov
sar
int
mov
add
and
fist
xchg
sbb
xchg
out
aaa
inc
and
mov
jbe
movs
cmp
stos
mov
and
sub
(bad)
loop
sub
test
jle
lods
mov
lock
imul
std
jl
mov
fistp
push
mov
shl
xor
push
scas
cmp
ss
xor
push
cmp
rcl
jg
inc
xchg
jns
xlat
cmps
dec
push
add
daa
mov
loope
clc
and
pop
mov
mov
dec
repnz
test
cmps
call
popf
ficomp
lahf
cmps
icebp
adc
into
mov
nop
sub
add
push
cli
test
add
rcl
and
jbe
xor
leave
dec
jecxz
mov
mul
or
adc
mov
out
mov
sbb
jle
daa
mov
call
pushf
adc
int3
data16
cli
inc
sbb
mov
rcr
mov
(bad)
shr
xchg
mov
jne
ss
xor
das
push
adc
mov
mov
dec
ins
push
data16
push
hlt
jno
mov
and
call
rcl
stos
xor
cmc
scas
test
mov
pusha
and
ret
call
enter
lods
lds
js
dec
out
(bad)
cmp
or
jns
xchg
push
arpl
ss
jbe
mov
into
push
arpl
inc
xor
cmp
pusha
jns
retf
inc
xchg
sbb
xor
in
xchg
jbe
icebp
(bad)
in
mov
lea
mov
dec
mov
call
jnp
jb
adc
(bad)
adc
and
inc
jmp
addr16
xchg
fwait
pop
test
pop
mov
pusha
movs
data16
jmp
ja
sub
dec
sub
and
sti
test
or
imul
test
stos
and
and
pusha
aas
cmps
or
jne
(bad)
(bad)
sahf
cld
inc
(bad)
dec
mov
dec
cmp
mov
in
scas
mov
inc
nop
repnz
inc
int3
loopne
mov
pushf
dec
jg
(bad)
xchg
lock
imul
shl
push
sbb
dec
mov
inc
int
outs
sbb
or
sahf
adc
mov
imul
add
les
loop
stc
fadd
add
das
sbb
or
shl
jp
jnp
rcl
adc
pop
and
dec
icebp
or
iret
sub
rol
jl
out
mov
inc
je
call
fadd
push
mov
xchg
fcomi
das
xchg
mov
jnp
mov
daa
sar
shl
dec
add
dec
or
xchg
mov
jbe
cmps
aam
repz
repnz
mov
ins
lea
sbb
cmp
inc
add
add
mov
int3
not
aad
dec
cmp
je
int
popf
scas
out
sub
bound
lea
pop
clc
cmp
fcomp
mov
lods
jle
loop
mov
aam
imul
add
xor
jae
cli
fs
fwait
cmp
add
inc
fist
mov
jle
mov
sbb
lods
shr
and
inc
inc
loopne
(bad)
push
into
xchg
test
je
dec
(bad)
(bad)
push
cld
arpl
sub
lea
mov
fldcw
int3
add
imul
xchg
cmps
adc
add
or
pop
mov
inc
bound
test
and
xchg
lods
data16
mov
xchg
clc
push
ins
adc
push
jnp
mov
jno
cdq
cdq
ds
inc
nop
aas
add
add
add
sub
fsubr
ficom
mov
popf
pop
push
jp
add
add
arpl
mov
(bad)
xlat
mov
out
int
sbb
call
lea
je
popf
inc
xrelease
rcr
(bad)
(bad)
push
jle
sbb
push
mov
adc
jno
aaa
(bad)
dec
cmps
(bad)
mov
(bad)
mov
std
cmp
xor
call
ja
dec
jge
dec
repnz
bound
or
mov
jae
jge
stos
cdq
mov
es
(bad)
xor
cmp
push
jmp
push
xor
dec
shl
fst
cs
out
pop
cmp
jecxz
imul
fistp
mov
jmp
addr16
mov
neg
cld
loope
mov
gs
arpl
cmc
inc
lea
push
jmp
add
bound
and
bnd
dec
mov
js
shl
aad
mov
cmp
(bad)
sbb
or
pop
mov
movs
push
dec
or
loopne
out
xlat
push
inc
inc
or
in
sahf
jae
pop
xor
lds
jae
scas
jecxz
aas
in
(bad)
dec
add
mov
sbb
ror
jl
shl
(bad)
test
mov
and
aaa
leave
fwait
and
(bad)
push
sbb
xor
xchg
pop
mov
repnz
mov
mov
or
(bad)
sbb
adc
cmp
inc
jb
jns
data16
xchg
arpl
test
loop
xchg
das
retf
scas
and
out
dec
xor
inc
jmp
mov
je
stos
mov
mov
test
adc
cmp
mov
out
jne
jp
adc
dec
xor
or
test
push
xchg
fsubr
push
mov
mov
not
clc
in
test
dec
fmulp
stc
pop
sti
js
mov
iret
in
jle
test
clc
sbb
xchg
mov
aas
out
sbb
adc
sbb
mov
into
(bad)
shr
xchg
pusha
movs
pusha
push
add
(bad)
or
ficom
cmp
jg
dec
xchg
aaa
push
and
adc
mov
popa
ror
lods
imul
arpl
dec
pop
outs
or
(bad)
shr
ret
jp
movs
push
icebp
loop
adc
fiadd
pusha
fimul
mov
bound
xor
iret
mov
mov
call
fcom
sahf
dec
sub
stos
cvtps2pi
xlat
dec
mov
pop
popa
test
jb
jl
xchg
xor
mov
pop
movs
cmps
out
(bad)
jmp
adc
mov
test
retf
nop
out
out
jnp
cmp
test
push
ja
(bad)
lock
jge
out
mov
lods
jp
in
stos
or
sbb
inc
fwait
stos
add
xor
jno
xchg
repz
xchg
jmp
xchg
in
mul
jo
adc
pop
push
sub
xlat
shl
(bad)
ds
sub
rcl
les
xchg
add
cmp
out
out
dec
cli
sub
add
dec
loop
xchg
mov
push
xchg
fist
rcl
mov
mov
adc
call
adc
mov
test
(bad)
retf
cmp
dec
and
addr16
dec
sub
pop
movs
(bad)
lods
mov
xchg
hlt
jge
fiadd
add
pop
loop
sub
(bad)
mov
mov
sub
pop
add
fisubr
or
push
ja
push
test
xchg
pop
xchg
cmp
into
inc
arpl
movs
or
sub
pop
mov
sti
push
or
jge
mov
outs
leave
and
push
arpl
and
mov
pusha
adc
add
push
pop
adc
test
fstp
push
jo
sbb
ja
jb
sbb
and
pop
mov
jbe
cmp
mov
cmp
dec
jp
pusha
adc
push
mov
mov
movs
pop
inc
cmp
push
inc
lods
or
adc
addr16
cmp
and
sub
lods
jle
aad
or
jne
push
sbb
mov
and
iret
repz
ret
enter
sub
cmps
jg
inc
sub
pop
sub
fldcw
push
mov
mov
jmp
cmps
fdiv
addr16
lods
sbb
test
cmp
mov
xchg
mov
mov
ret
stos
out
fidivr
or
fmulp
mov
ds
jnp
iret
imul
test
mov
push
test
imul
gs
jle
sub
jp
in
add
and
jmp
loope
add
fist
mov
dec
daa
pop
xchg
push
sbb
dec
add
jecxz
cmps
js
rcl
fsin
add
jae
or
ja
pop
jg
add
int3
nop
les
push
fnstenv
adc
(bad)
xchg
jmp
adc
outs
loop
cmp
mov
push
mov
out
aad
movs
jp
fadd
and
std
(bad)
test
sbb
daa
push
movs
aaa
out
cli
nop
cmps
sub
jae
jbe
outs
xchg
daa
(bad)
test
jo
pop
(bad)
or
mov
pop
dec
dec
jp
fnstcw
adc
loop
lea
and
loope
push
cld
mov
cld
shr
cmp
jmp
jmp
cmps
icebp
aas
into
outs
mov
es
inc
xlat
lds
jge
and
cmps
sbb
adc
iret
mov
sub
push
push
cmp
push
xchg
dec
mov
inc
imul
pop
push
ins
push
leave
mov
push
adc
int
sbb
scas
inc
mov
test
pop
pop
jecxz
aad
cwde
mov
aam
or
fnstenv
(bad)
inc
call
adc
in
call
pop
and
jae
shl
mov
ins
aaa
adc
mov
sub
popa
and
jnp
push
fwait
inc
inc
adc
adc
dec
retf
mov
pop
mov
cmp
push
test
xor
add
push
push
mov
test
and
mov
xchg
cs
sar
ret
adc
sub
stos
js
xchg
aaa
aam
push
and
imul
ror
mov
test
push
lods
adc
or
lock
int
add
movs
(bad)
cdq
mov
or
sbb
(bad)
pop
push
cmp
dec
mov
sahf
xlat
shl
out
mov
ficom
pop
mov
pop
ret
jne
lea
hlt
sti
sahf
inc
jge
imul
fistp
xlat
ret
pop
imul
mov
ret
pop
or
pop
jmp
icebp
and
ss
sar
js
add
nop
mov
popf
inc
sbb
mov
inc
out
scas
scas
daa
pop
dec
dec
cli
cmps
loop
out
xor
into
and
push
inc
sbb
nop
jg
(bad)
out
cmp
mov
mov
aad
push
xchg
clc
ins
jge
(bad)
(bad)
fist
fstp
mov
and
add
mov
xchg
(bad)
hlt
pop
xchg
push
(bad)
xor
jno
aas
sub
adc
inc
data16
fld
ja
pop
test
movs
ficomp
inc
imul
(bad)
movs
in
sub
bound
xchg
stos
lahf
rcr
mov
jmp
mov
sub
pop
sbb
dec
les
and
mov
and
sti
cmp
adc
fidivr
and
mov
cmc
and
or
mov
scas
sbb
mov
jmp
(bad)
outs
int
outs
mov
pop
into
push
jo
adc
das
pop
shl
pop
xor
cmp
or
push
inc
popa
test
cdq
cmps
icebp
sbb
jnp
pop
clc
cdq
stc
retf
ror
scas
pop
push
xchg
sti
adc
dec
iret
fldcw
(bad)
sub
(bad)
dec
jge
fwait
repnz
aas
sahf
das
out
jmp
sbb
push
jmp
jecxz
inc
ret
add
jg
dec
fsubr
fcomp
int
retf
inc
aas
jno
test
cmps
cs
(bad)
cmp
and
push
rol
pop
imul
push
pop
dec
out
fist
inc
mov
sub
cdq
inc
add
retf
push
mov
cmps
xchg
or
inc
addr16
pop
or
mov
or
je
lahf
loope
cmp
inc
add
jecxz
and
and
jmp
arpl
mov
inc
cs
pusha
dec
mov
mov
fbstp
clc
sbb
sbb
inc
jecxz
cmp
int3
sahf
xchg
jae
daa
pop
(bad)
jmp
push
push
inc
icebp
fst
std
sbb
sub
aaa
mov
mov
mov
mov
xchg
mov
cwde
enter
(bad)
fwait
std
cmp
arpl
mov
(bad)
sti
loope
pop
push
ror
inc
outs
push
sbb
das
push
loop
cmp
popf
dec
outs
leave
fwait
pusha
call
sub
test
cmps
dec
xor
mov
int3
in
push
imul
xchg
out
xchg
call
cdq
and
mov
scas
test
hlt
pop
test
push
sub
xor
icebp
jg
int
iret
outs
sti
pop
(bad)
std
mov
fdiv
mov
sbb
xchg
push
pop
aaa
sbb
and
cmp
cmp
cld
jg
loope
and
shr
icebp
push
xchg
ret
jg
push
sahf
or
dec
jmp
mov
arpl
inc
add
push
adc
mov
stos
aaa
mov
jb
outs
push
into
mov
(bad)
mov
retf
leave
pop
jns
or
fs
(bad)
mov
cmps
jo
aad
cwde
jmp
adc
mov
xchg
add
dec
xor
int3
call
inc
push
aad
jle
(bad)
and
pop
dec
sub
mov
cmp
or
call
inc
xchg
push
popf
jno
mov
pop
sar
mov
fs
xor
xlat
std
xchg
sbb
loopne
imul
dec
xor
cmps
fs
lahf
ins
call
in
ja
std
mov
rcr
mov
mov
adc
dec
in
pop
cmp
push
mov
inc
adc
(bad)
mov
iret
inc
leave
sbb
mov
scas
nop
cmp
jns
div
add
push
jl
fistp
or
(bad)
into
nop
mov
pop
adc
ins
popa
push
dec
push
or
xor
sar
out
adc
mov
push
xchg
push
or
push
fwait
cmp
or
push
dec
and
in
ja
add
xchg
mul
mov
in
add
add
mov
daa
fs
xor
xor
xor
cli
std
mul
push
add
mov
xor
mov
sub
int
(bad)
dec
imul
xor
sub
xchg
std
jns
mov
cwde
jne
jmp
mov
ins
dec
int
(bad)
and
adc
push
add
xor
cmp
push
push
addr16
mov
pop
inc
stos
lods
adc
aam
inc
mov
cmps
jg
xchg
stc
ins
inc
movs
push
xor
xchg
leave
or
stc
dec
inc
je
sbb
das
jp
cmp
cwde
stos
dec
or
and
lea
pop
pop
or
mov
cli
xor
(bad)
mov
inc
aaa
xlat
sbb
mov
loop
mov
pop
ret
xor
daa
sbb
dec
mov
(bad)
retf
cdq
mov
jbe
add
out
xchg
nop
lods
ror
sahf
in
cmp
lods
sbb
xchg
pusha
cmc
scas
loopne
in
repnz
rcl
jp
add
aad
pop
jb
jge
mov
dec
ins
mov
cmp
pop
xchg
cmp
mov
mov
pop
xlat
xchg
mov
mov
leave
sub
xchg
mov
add
inc
int
retf
fistp
aad
jecxz
mov
mov
mov
pop
fisttp
inc
push
cmp
xlat
xor
dec
sub
shl
xchg
jmp
jb
dec
adc
cli
cmp
or
daa
cmps
xor
movntq
out
mov
sub
dec
jl
outs
mov
cmp
mov
ret
xchg
jl
nop
movs
jo
sbb
mov
cmp
stc
in
test
ret
(bad)
xor
arpl
pop
cmp
in
sbb
dec
in
mov
add
inc
adc
jl
jmp
ror
adc
jne
mov
or
pop
jmp
icebp
jg
fidivr
int3
fidiv
ja
xor
cmp
fisttp
fisttp
bnd
shl
adc
loope
lea
xchg
mov
fcom
inc
xchg
(bad)
sti
or
pushf
fdiv
mov
lods
xchg
lock
sub
xor
mov
pop
lds
pusha
xor
add
imul
rcr
fstp
mov
xor
cld
mov
adc
push
mov
mov
cmp
in
sbb
leave
add
xchg
add
int3
ret
mov
mov
cmp
or
aad
ss
shl
adc
jae
mov
arpl
and
sub
pop
fs
cs
dec
jbe
jg
push
cmps
push
js
cmp
xor
in
popf
mov
add
adc
fmul
and
pop
and
imul
fwait
jo
pushf
cwde
jecxz
popa
into
hlt
aad
xor
and
ror
inc
lock
int
mov
leave
gs
push
xlat
imul
sbb
dec
xchg
call
es
sbb
jecxz
xchg
psubw
dec
ret
xor
sub
das
xchg
or
sub
sbb
stos
push
mov
popa
dec
add
mov
add
popa
inc
iret
lods
mov
lahf
imul
dec
cmps
push
mov
inc
mov
bound
es
daa
or
mov
rol
xor
pop
lods
cmp
or
and
jl
mov
stos
adc
cmc
lea
sub
in
mov
nop
rcl
ret
adc
clc
xor
mov
daa
push
xchg
inc
bound
sahf
dec
lods
mov
in
ret
mov
cmp
xchg
test
pop
inc
je
(bad)
push
jns
xchg
out
pushf
cmps
lods
push
pushf
sub
cmp
push
arpl
xlat
adc
cli
lahf
fmul
mov
aam
sbb
mov
sub
gs
mov
aam
fsub
and
lods
xchg
mov
sub
xor
sbb
jl
lds
ds
dec
shl
mov
outs
sub
dec
in
not
add
fcomp
push
add
adc
lds
lods
inc
mov
dec
jge
out
shl
cmp
inc
mov
cwde
in
xchg
pop
sbb
lea
cmp
xor
adc
je
mov
xchg
jnp
imul
sub
icebp
add
inc
xor
outs
add
bound
stc
or
icebp
repnz
pop
stos
dec
cmp
das
out
std
xchg
jecxz
add
jg
sti
stos
fimul
outs
(bad)
push
pop
mov
out
pushf
jp
cli
jbe
bound
add
rcr
or
loop
adc
pop
inc
mov
jbe
ja
sbb
pop
(bad)
fmul
fisttp
mov
inc
mov
dec
cli
or
xchg
mov
cli
inc
adc
mov
add
and
dec
cmp
or
cmp
in
test
dec
inc
add
xor
mov
xor
xchg
inc
sbb
retf
jno
pcmpeqb
dec
aaa
push
cmp
(bad)
mov
out
lahf
mov
jmp
lods
jmp
sbb
retf
movaps
cmc
jle
sbb
fwait
mov
daa
push
jge
add
sbb
fs
inc
push
test
add
aaa
xor
pop
outs
pop
mov
add
lds
xchg
fcmovnb
ja
or
rcl
cmps
movs
(bad)
outs
icebp
mov
push
add
movs
dec
mov
mov
sar
jnp
mov
mov
mov
xchg
aas
jecxz
hlt
loop
sub
mov
sti
push
mov
push
jmp
addr16
sbb
cmp
mov
popf
mov
cs
imul
scas
lea
push
jecxz
push
push
movs
hlt
inc
jl
mov
add
imul
movs
xchg
sub
into
retf
xchg
xor
pop
in
popa
jl
jmp
cs
test
in
adc
mov
mov
cmp
sbb
mov
(bad)
jne
and
push
and
and
adc
push
in
xchg
and
and
add
daa
sahf
inc
mov
test
mov
jae
(bad)
test
mov
pop
std
nop
outs
pop
mov
fisttp
lds
pop
pop
mov
lahf
push
adc
ss
pop
in
mov
pop
lods
stos
push
iret
and
retf
or
loopne
mov
mov
mov
fsub
jb
mov
push
mov
pop
pop
lock
cmp
cdq
(bad)
mov
fwait
and
cmp
push
and
add
xor
push
xor
outs
inc
push
mov
pop
bound
xchg
add
mov
test
sbb
lock
pop
std
mov
sub
sti
cmp
bound
mov
push
cmp
sbb
dec
xchg
lods
or
rcr
mov
sti
dec
imul
xchg
clc
icebp
sti
movs
not
es
(bad)
xchg
or
mov
std
int
jbe
js
dec
dec
and
mov
xor
mov
xor
aam
retf
xlat
push
iret
and
mov
push
push
jb
int3
jno
(bad)
push
xor
fst
inc
xchg
jne
sub
sub
xor
adc
pop
scas
fdivr
add
stc
ret
pop
and
ss
cmc
sub
ins
sub
cmc
jmp
and
jmp
xchg
sub
call
jle
ficom
push
fucom
fidiv
stos
dec
sahf
outs
std
test
inc
fisubr
jge
cmp
stos
or
mov
mov
push
push
xchg
sub
daa
add
in
int
fbld
(bad)
jmp
and
mov
retf
cld
out
mov
mov
jns
jne
xor
jle
mov
les
xchg
retf
fbld
out
jo
xchg
mov
add
aaa
xor
aam
call
xor
int
stc
push
es
cld
imul
sbb
in
cmp
mov
dec
or
fist
pop
and
out
jae
daa
inc
cdq
retf
xchg
pop
cld
xchg
pop
lods
inc
lods
daa
add
popf
fdiv
or
shl
data16
shl
rol
cwde
shl
push
pop
cmps
jno
cmps
push
clc
nop
cmp
or
mov
(bad)
call
adc
jo
sub
cmp
rcr
cmps
push
add
xor
iret
pop
movs
adc
shl
out
adc
(bad)
fiadd
adc
push
push
push
push
pop
push
jle
jmp
sub
and
out
addr16
adc
ins
add
out
jmp
iret
repnz
imul
inc
test
mov
aam
inc
sahf
xchg
nop
xor
add
xchg
ins
call
jg
add
cmps
call
in
jg
mov
loope
mov
pop
add
pop
xor
call
mov
jbe
mov
mov
or
jmp
jnp
push
out
pop
and
mov
xchg
arpl
xor
into
dec
popa
push
inc
sti
iret
bound
pop
jl
lahf
xchg
stos
int
sub
xchg
xchg
rcr
stos
adc
add
popf
add
xchg
(bad)
(bad)
aad
or
jmp
cmp
inc
mov
repnz
jge
cli
ror
(bad)
pop
gs
call
retf
dec
push
gs
or
ror
mov
add
popa
inc
jp
leave
adc
rcl
mov
cmp
and
pop
push
out
add
outs
call
adc
imul
call
mov
sahf
jp
movs
sar
lods
jge
sub
mov
dec
es
cmp
pop
jle
fsub
ja
jecxz
sub
pop
xchg
inc
dec
scas
push
jo
loop
fwait
fs
xchg
popf
push
xor
enter
stos
out
pop
xchg
icebp
mov
ja
iret
sbb
test
xchg
inc
mov
test
aam
sbb
shl
cmp
popa
hlt
and
ins
add
(bad)
sub
add
xchg
in
xchg
dec
outs
(bad)
xchg
mov
xor
outs
cmps
push
out
add
add
jb
mov
sar
xchg
cmp
xchg
mov
mov
jmp
xor
sahf
or
sbb
cmp
inc
ins
loopne
shl
je
call
in
dec
mov
adc
retf
in
repz
arpl
inc
frstor
in
mov
lahf
fcom
cmp
ja
daa
js
mov
scas
jl
jecxz
(bad)
(bad)
xchg
aaa
scas
(bad)
fsubr
dec
in
iret
cmc
sub
push
adc
sti
retf
clc
hlt
adc
ins
test
ja
fidivr
inc
push
and
inc
cmp
gs
jo
mov
push
jge
pop
jo
add
std
aam
xchg
stos
adc
or
in
jbe
mov
cs
retf
addr16
mov
bound
cwde
mov
movs
pop
mov
cmp
mov
dec
adc
les
out
adc
sbb
ror
arpl
inc
into
stc
push
retf
aaa
dec
or
xchg
sub
push
and
ins
in
cld
or
sti
or
inc
loope
jbe
and
push
ins
repnz
retf
icebp
shl
test
out
dec
inc
data16
iret
add
popa
sbb
xor
inc
mov
push
pop
fucom
div
test
cmp
mov
mov
sbb
out
push
movs
shr
sbb
mov
arpl
in
scas
and
retf
and
rol
(bad)
in
pop
fidivr
jge
call
cdq
add
in
adc
aas
fist
ds
shl
ds
jo
xor
adc
xlat
pop
mov
push
in
rol
icebp
jmp
jns
mul
push
pop
push
jo
lods
cmp
pop
in
mov
js
push
mov
xor
xor
cmc
or
push
dec
sub
pop
sahf
popa
or
sbb
or
xchg
mov
pop
pop
or
mov
ficom
cwde
xor
mov
shr
mov
or
adc
jg
mov
jnp
sub
xchg
mov
pop
dec
ret
repnz
fisttp
scas
dec
inc
push
and
mov
mov
ficom
(bad)
xlat
cmp
or
xor
sahf
lods
add
pop
jo
loope
sbb
jb
mov
repnz
sti
dec
pusha
movs
and
or
lods
mov
mov
call
loopne
std
int
mov
fsubp
sbb
out
mov
enter
fistp
iret
mov
xchg
enterw
lfs
xchg
push
test
or
lods
mov
jo
dec
sbb
dec
aas
les
ret
adc
lods
movs
mul
lds
push
or
dec
jo
push
jmp
arpl
iret
call
mov
daa
dec
jmp
xor
cmp
(bad)
into
pop
(bad)
ins
push
add
and
sti
and
dec
inc
or
movhps
jge
cmp
jo
in
or
lods
imul
and
cmc
xor
(bad)
sbb
std
leave
or
mov
retf
push
sbb
mov
retf
sub
jmp
sbb
sbb
jg
xor
fwait
gs
pushf
jge
pop
or
or
cld
sbb
mov
mov
push
mov
xchg
mov
inc
xchg
mov
mov
aaa
retf
fcomi
jnp
sub
fst
test
cmp
ds
pop
xor
test
adc
popf
cmps
jno
xor
xor
pop
xchg
lahf
push
daa
fsub
das
push
not
adc
int
lock
xor
or
shl
jmp
pop
inc
or
add
iret
hlt
sar
mov
push
je
mov
mov
inc
dec
(bad)
bound
(bad)
enter
popa
and
sub
or
xor
sbb
jle
lea
jb
inc
loop
cmps
enter
inc
jmp
test
cmp
jle
mov
pop
dec
push
inc
jns
out
in
pop
out
mov
test
out
jbe
sti
push
jb
fdiv
xchg
ins
sub
pop
cwde
scas
js
xor
or
xor
inc
pop
dec
out
pop
pop
dec
jbe
jnp
fidiv
xchg
jns
daa
das
les
xlat
and
lods
mov
cmp
xchg
loopne
adc
xor
cld
out
sub
mov
xor
lss
sub
xor
push
jne
mov
aaa
call
add
inc
mov
sbb
mov
lods
jo
xor
sbb
int
mov
push
fmulp
push
cli
rcl
enter
and
xor
or
dec
movs
push
inc
pop
mul
mov
push
jnp
mov
out
pusha
mov
sub
or
jns
movs
nop
addr16
aas
std
or
pop
dec
xchg
dec
hlt
into
inc
enter
popf
in
test
lea
rcl
inc
test
mov
xor
jmp
push
pop
and
jae
jae
mov
fnstsw
pushf
or
add
loope
mov
ret
sub
push
adc
xlat
push
lock
xchg
and
xor
and
fsubr
add
push
test
add
repnz
adc
sub
movs
adc
lock
lea
cld
movs
and
loopne
or
mov
dec
mov
mov
mov
xor
xchg
inc
dec
test
adc
and
add
daa
xchg
in
frstor
and
adc
cdq
mov
push
ja
(bad)
call
xchg
push
jne
inc
int
(bad)
int
ins
sbb
stos
outs
ret
pop
sub
mov
add
ja
sub
scas
push
mov
stc
mov
mov
pop
mov
push
and
js
sbb
xlat
pop
xchg
lds
jmp
push
xchg
sbb
sbb
(bad)
xchg
inc
jb
pusha
ins
fcmove
fst
and
mov
aad
pop
das
call
sub
outs
cmp
push
rcl
hlt
mov
jmp
sub
test
sbb
jl
hlt
pop
mov
into
jb
in
jge
mov
sbb
and
xlat
push
fcmovne
push
in
mov
mov
jae
dec
inc
jmp
push
ret
imul
adc
xchg
ds
(bad)
cli
add
mov
or
jmp
sub
pop
and
aas
cwde
jo
out
ss
lods
out
push
cmc
xchg
mov
xchg
into
pop
imul
mov
ret
cmc
cmps
fistp
call
xor
cmp
imul
push
jne
call
sub
adc
fs
out
mov
add
push
xchg
out
jns
mov
inc
jno
repnz
lea
out
xchg
int
leave
mov
xchg
mov
xor
bnd
mov
jo
jnp
xchg
pop
mov
jne
jns
ins
and
sbb
pop
xor
clc
int
inc
rol
fist
(bad)
adc
pop
(bad)
leave
cwde
add
push
fdiv
dec
lods
dec
mov
xor
movs
ss
push
dec
imul
cdq
dec
bound
int3
popf
lahf
dec
pushf
push
cmp
or
or
enter
push
nop
mov
mov
jno
mov
jbe
popf
aas
sahf
add
or
lods
repz
pop
out
pop
xor
and
cmp
cmp
cmps
xchg
xor
or
mov
or
jle
shl
(bad)
iret
cmps
pop
add
add
out
xchg
aam
cmp
sub
cmp
gs
mov
in
test
call
cmps
cmps
and
jne
cdq
and
adc
pop
ds
es
call
jp
ffree
jl
push
nop
cld
or
inc
inc
scas
and
das
jl
stos
jg
scas
or
sbb
xor
loopne
mov
repz
mov
ja
cdq
xchg
jmp
add
fnstsw
pop
ud2
adc
add
pop
shl
sbb
test
cmps
pop
enter
into
push
add
and
cmp
in
mov
repnz
out
test
mov
add
fmul
call
imul
pop
loop
dec
pop
or
lds
test
rcl
dec
push
mov
mov
mov
add
xor
jle
pushf
fsubr
(bad)
div
rdpmc
leave
jl
mov
mov
aad
pop
gs
out
jge
xchg
rol
cmp
mov
add
mov
loopne
xchg
cmp
inc
jnp
imul
add
xchg
sbb
data16
xor
fist
sar
imul
repz
lods
jl
ss
mov
arpl
stos
movs
loope
jle
dec
in
dec
pop
mov
inc
mov
lahf
clc
neg
or
add
int3
pop
outs
test
adc
xchg
xor
ss
jno
loop
aam
adc
mov
jo
jge
fadd
icebp
adc
lods
jnp
jns
add
mov
outs
ins
xor
loop
fnstcw
push
adc
mov
mov
push
pop
cmps
imul
aam
add
jns
inc
test
lods
fldcw
push
ins
cmc
mov
inc
sbb
enter
mov
mov
cmc
mov
sub
lock
jns
mov
xor
adc
aas
push
pop
push
ret
js
std
cmp
test
inc
mov
fdivr
movs
js
dec
ins
imul
ins
aam
ds
nop
fld
pop
and
std
inc
int
inc
push
mov
add
mov
fwait
add
fstp
mul
scas
leave
int3
mov
push
imul
(bad)
retf
dec
push
mov
cvtps2pi
xchg
inc
dec
loope
add
or
nop
cwde
inc
(bad)
sbb
iret
iret
stos
mov
imul
jle
retf
jle
out
jae
push
jge
add
cwde
pop
mov
lahf
xor
inc
pushf
rcr
cmp
inc
mov
(bad)
pop
call
and
or
cwde
test
daa
or
es
imul
jb
cmp
int3
push
xchg
lods
push
push
stos
or
mov
and
fldcw
jae
in
jmp
xchg
sub
stc
(bad)
pop
jmp
icebp
ss
mov
jb
jno
in
mov
jle
scas
pusha
clc
sub
pushf
inc
das
clc
adc
add
jno
(bad)
xchg
xor
jno
leave
stos
mov
fs
enter
lds
cmp
xlat
adc
out
sti
dec
cmp
lods
cmp
mov
inc
lods
sub
jmp
xchg
xor
jne
xor
hlt
mov
mov
fs
or
adc
lahf
arpl
sub
mov
cmp
xchg
mov
pushf
ds
ja
sbb
pop
adc
push
ins
ret
dec
xchg
js
xchg
out
pop
enter
mov
jno
aaa
test
dec
mov
xlat
pop
pop
ins
push
dec
mov
repz
xchg
mov
out
fild
ja
dec
clc
xchg
stos
xchg
out
pop
pop
rol
ss
ins
mov
adc
xor
repnz
push
inc
push
sbb
mov
pop
or
or
ret
sub
xchg
pop
xchg
addr16
sti
xchg
call
mov
dec
mov
test
sbb
adc
sub
jbe
adc
out
and
retf
xchg
aas
xchg
shr
test
test
and
or
aad
sbb
xchg
lahf
push
xchg
pop
popa
mov
jnp
pop
xchg
xor
sti
jne
xor
leave
repnz
mov
mov
dec
inc
jae
pusha
adc
stos
hlt
mov
cld
(bad)
cmp
lahf
mov
bound
repnz
and
iret
or
sub
pushf
cdq
cmps
cs
jecxz
xchg
imul
and
cmp
cmp
gs
push
out
inc
add
inc
xchg
xlat
pushf
inc
xchg
loop
push
xchg
jo
in
jbe
(bad)
mov
add
(bad)
push
jge
xor
(bad)
adc
js
xor
dec
mov
dec
sar
add
ret
retf
test
adc
das
jg
jmp
and
jge
sti
mov
mov
xchg
cmp
jno
pop
xchg
mov
pop
cmps
fld
js
test
(bad)
(bad)
imul
jge
inc
imul
mov
push
jae
fidiv
cmp
jbe
lods
xchg
pop
cld
jmp
push
mov
movs
dec
loope
movs
fistp
pop
(bad)
lds
int3
xor
into
not
call
xor
mov
add
int3
not
cmp
and
adc
dec
push
cmp
cs
inc
pop
adc
(bad)
(bad)
dec
add
lahf
outs
sbb
pushf
test
mov
mov
and
dec
lds
push
js
pop
das
push
(bad)
call
xchg
or
inc
cmp
popa
jmp
cmp
ror
sub
dec
lods
mov
popf
rcl
xchg
call
mov
jno
sbb
into
sbb
cli
fucompp
hlt
push
jle
adc
or
push
cli
rol
leave
(bad)
jp
out
jb
xlat
add
lds
inc
add
(bad)
ins
out
sbb
sub
pop
xchg
bound
sbb
sub
ficom
cs
fidivr
jnp
and
and
je
pop
and
ficomp
(bad)
scas
cld
outs
pop
add
push
dec
and
addr16
clc
push
cmp
dec
stos
popa
pop
outs
sub
retf
inc
pop
js
xor
lea
mov
sub
retf
fs
xor
(bad)
outs
(bad)
pusha
cs
int
xchg
bound
sub
xor
xor
xlat
aas
jmp
imul
sti
cli
dec
adc
js
sbb
mov
pop
loope
jnp
outs
inc
ja
out
jae
iret
push
mov
and
xor
outs
inc
jns
or
aam
(bad)
out
stos
iret
xchg
inc
neg
xor
stos
out
mov
push
loopne
and
push
push
stc
jbe
cmc
aas
sub
jl
dec
mov
push
xchg
pop
sbb
mov
scas
jle
dec
call
fdiv
movs
inc
int3
inc
sti
je
stc
ins
in
inc
fiadd
push
cmp
stos
mov
in
data16
movs
sbb
loop
popa
js
out
pop
in
fs
loopne
pop
xor
lea
dec
addr16
loopne
mov
pop
push
fisub
loop
jbe
mov
movs
inc
daa
fdivr
fild
repnz
ins
je
mov
inc
(bad)
hlt
mov
sar
(bad)
in
ds
rol
xor
mov
test
xor
fsubr
inc
mov
mov
adc
fild
(bad)
clc
push
sbb
and
scas
sbb
(bad)
sahf
jne
xor
aas
and
pop
inc
or
push
stos
cwde
mov
mov
and
movs
jp
mov
js
inc
inc
jno
daa
call
adc
or
int
inc
and
mov
cmp
loop
push
repz
rol
add
and
xor
mov
jne
(bad)
cmp
jg
or
retf
arpl
into
stos
neg
ret
mov
aaa
pop
imul
shl
retf
cmp
pop
and
(bad)
das
xor
sbb
mov
les
out
cwde
lahf
mov
jne
sub
push
xchg
les
pop
movs
cmps
push
lock
test
mov
(bad)
stos
cmps
xor
imul
mov
push
xchg
adc
dec
push
dec
pusha
mov
push
cmps
xor
mov
(bad)
call
cmp
outs
mov
sub
loopne
fs
fwait
inc
sti
repz
out
daa
cmp
int
xchg
(bad)
xor
adc
mov
mov
rol
add
inc
push
fst
mov
pop
out
cmp
add
inc
push
fs
push
rcr
call
ja
popf
stos
retf
jp
stos
test
aaa
aaa
je
leave
in
cli
jp
inc
xchg
cli
cmp
push
dec
icebp
jmp
sbb
dec
mov
call
out
lods
das
sub
xchg
add
enter
push
jb
icebp
mov
repnz
mov
mov
ins
add
mov
cs
outs
jns
pop
mov
jns
loopne
out
iret
sub
jecxz
das
or
pusha
addr16
xor
xchg
xchg
dec
adc
xor
push
dec
mov
ret
jmp
jl
fsubr
icebp
outs
loopne
or
adc
sub
fidiv
add
pop
popa
ficom
aam
push
std
push
sbb
mov
jmp
call
and
call
ds
add
push
or
ins
retf
outs
xchg
xchg
into
adc
into
mov
lods
mul
(bad)
int
add
movs
das
ins
adc
cmp
cli
pop
sub
std
xor
dec
mov
mov
(bad)
mov
gs
jge
jp
push
push
mov
retf
add
(bad)
call
arpl
jp
sub
cli
ror
leave
lahf
call
fwait
xchg
enter
and
and
jae
(bad)
sbb
adc
rol
dec
movs
and
cmp
sub
mov
mov
push
cmc
pop
jp
cmps
out
out
xchg
pop
je
pusha
iret
out
or
aaa
sbb
ja
pop
sub
retf
pop
test
mov
xchg
cmc
arpl
out
xor
in
ds
std
rcl
outs
out
sub
xchg
or
jb
bound
mov
sub
adc
jle
imul
in
and
cld
xchg
shr
dec
bound
mov
xchg
mov
out
stc
mov
scas
popf
rcl
fcom
fwait
xor
xor
inc
cmovl
loop
sar
mov
stc
push
pushf
xor
lods
nop
ins
mov
dec
mov
dec
retf
cmp
hlt
lods
stos
in
push
mov
nop
xor
in
add
les
imul
jae
mov
mov
icebp
sub
and
iret
pop
(bad)
imul
imul
mov
sub
inc
ror
inc
ins
inc
out
mov
or
aas
mov
or
mov
adc
ins
jo
scas
stc
adc
xchg
sahf
dec
pop
xor
and
fist
adc
imul
js
or
popf
jecxz
lahf
leave
dec
xor
pop
fwait
jbe
in
rol
loop
ror
xchg
mov
mov
in
fld
mov
dec
dec
mov
ins
lods
pop
mov
mov
(bad)
pop
dec
int
add
mov
cwde
mov
cpuid
fdivr
dec
dec
dec
sti
arpl
daa
jg
push
sbb
jmp
jecxz
loope
pusha
mov
test
xor
inc
test
fwait
cwde
lahf
lods
shl
lock
xchg
cli
(bad)
adc
lahf
sub
xchg
daa
xchg
(bad)
nop
fcmovnb
cmp
jge
inc
mov
cmp
sbb
push
sti
outs
inc
jp
push
dec
fs
es
in
adc
jmp
mov
int3
push
inc
stos
pushf
push
inc
push
push
cmp
or
loop
ret
loopne
stos
push
or
bound
sub
rol
(bad)
lods
ins
jg
popa
fs
xchg
sbb
xchg
pop
add
inc
jle
adc
out
mov
mov
pop
and
icebp
push
cmp
test
in
push
mov
mov
sahf
lods
mov
es
mov
add
push
cli
ficom
dec
fstp
js
mov
sti
ret
cld
pop
test
and
test
stos
fcmovbe
cmp
icebp
mov
mov
movs
lock
sbb
add
or
mov
xchg
movs
int3
or
dec
mov
aad
call
loope
or
aam
jle
jmp
fstp
push
jg
hlt
inc
sbb
ins
jbe
(bad)
les
repz
mov
xchg
fst
test
call
xchg
(bad)
cmp
mov
xchg
lds
retf
inc
shl
jg
jo
data16
adc
cmp
test
cmp
sub
data16
ret
mov
dec
(bad)
fidiv
scas
pusha
or
inc
test
arpl
rcl
mov
imul
je
inc
adc
je
in
mov
cwde
cmps
mov
iret
cld
emms
sub
or
icebp
cmp
hlt
xor
jo
lods
jl
in
mov
lahf
sub
jno
sbb
repz
xchg
add
add
in
pushf
xchg
xor
xchg
and
xor
sbb
dec
repnz
jecxz
out
(bad)
jecxz
jb
inc
mov
xchg
sub
inc
icebp
sub
sar
sahf
call
aad
adc
sub
sub
fwait
inc
inc
xchg
adc
push
xor
call
aas
arpl
loopne
and
ret
dec
mov
inc
mov
clc
in
push
fadd
jl
mov
jnp
mov
jmp
ss
cmp
push
test
jnp
mov
jnp
cmp
(bad)
cmp
pop
inc
inc
pusha
mov
loop
(bad)
(bad)
fnstsw
dec
mov
in
dec
movs
jnp
ficomp
jno
sub
cli
xchg
sbb
popf
sar
dec
mov
aaa
fimul
shr
in
and
jmp
aas
ret
xor
out
test
xor
lock
pop
mov
imul
nop
xor
int3
cmp
sbb
scas
jge
or
inc
add
ds
scas
jne
jae
mov
jne
xor
pop
dec
in
add
div
or
mov
sub
(bad)
sub
sub
movs
xchg
std
lods
cmps
mov
int
pusha
test
mov
shr
inc
(bad)
arpl
add
outs
jmp
inc
ds
pop
test
cmp
push
(bad)
into
popa
cwde
lock
int3
mov
pop
sbb
lods
sahf
mov
sub
mov
inc
mov
leave
mov
jp
mov
mov
pop
out
dec
cmps
fidiv
sbb
loop
cmps
ins
mov
inc
or
lds
jge
stc
aad
jns
xchg
iret
lea
sub
mov
imul
or
ret
int3
cmp
idiv
push
fidivr
lahf
inc
push
retf
push
icebp
mov
push
push
cmp
xor
inc
push
sti
adc
imul
sbb
ret
(bad)
mov
scas
fist
or
xor
inc
jle
scas
ja
jbe
aas
outs
or
int
push
pop
ins
pop
adc
scas
mov
mov
sub
adc
inc
push
int
sti
mov
sti
or
push
mov
test
test
push
lds
push
or
call
sar
push
sub
add
pop
and
pop
out
repz
test
or
ret
rcr
shr
popf
(bad)
(bad)
nop
pop
mov
dec
daa
jl
clc
shr
cmp
fnsave
test
xchg
push
mov
int3
cmp
leave
push
add
pop
xchg
mov
sti
aas
call
lods
jno
jb
pop
fstp
jae
popa
xchg
cs
pop
imul
mov
inc
mov
push
scas
sbb
dec
std
shl
cmp
retf
fldenv
out
xor
and
rol
test
jge
push
mov
lods
sbb
outs
mov
std
adc
js
sbb
loope
rol
cmp
and
cmc
movs
sar
inc
add
mov
inc
imul
nop
sub
fnstsw
mov
call
imul
icebp
les
mov
icebp
and
test
add
or
push
inc
call
in
cwde
rcr
jp
in
loopne
xor
push
sub
jbe
int
loop
imul
loope
inc
jne
xor
mov
dec
pop
mov
push
xchg
mov
adc
jo
cmp
xor
mov
inc
mov
cmps
xchg
lods
mov
addr16
sbb
sub
mov
pop
nop
movs
xchg
retf
rcl
mov
mov
rcl
or
pop
stc
pushf
aaa
aaa
mov
xchg
cmp
sbb
shr
sub
sbb
ins
jo
lds
(bad)
cmp
sbb
inc
adc
loopne
jb
test
push
jecxz
fwait
push
and
out
aam
loopne
push
xchg
loope
add
mov
cmp
cli
mov
daa
jmp
leave
or
jmp
xor
cmp
xor
test
mov
pop
add
repnz
into
sar
cmp
add
imul
xor
mov
sub
call
xchg
cmc
inc
scas
cmp
push
aas
cmp
aas
and
push
into
adc
and
aam
fs
mov
sbb
(bad)
jmp
add
jmp
ss
xor
in
test
dec
mov
fld
sub
test
sbb
(bad)
pop
les
xchg
(bad)
add
jb
push
jno
jno
pop
out
loop
aad
pop
jne
adc
outs
ds
scas
mov
scas
movs
je
shl
int3
pop
xchg
pushw
push
mov
push
jne
repnz
cmp
jns
jnp
mov
mov
in
push
gs
pop
sub
out
fild
outs
xor
inc
mov
mov
stos
cmp
jns
mov
fnstsw
jae
out
loop
cs
cdq
xchg
xor
push
xchg
jmp
lahf
scas
xchg
xchg
xchg
push
mov
addr16
hlt
test
dec
dec
xchg
lods
or
jle
ss
aas
bound
push
fisttp
jmp
clc
sub
call
add
mov
sti
leave
xor
mov
imul
ins
lods
popa
and
test
shr
fs
gs
and
js
das
mov
pop
push
and
ror
fdivr
cmp
iret
push
push
sbb
adc
sbb
inc
int
push
fbstp
jg
cmp
mov
cwde
xor
sahf
add
int3
cwde
pop
dec
cmps
loopne
pop
(bad)
mov
cmp
sub
loopne
mov
inc
leave
loope
jle
cwde
out
sub
cmp
mov
imul
xlat
adc
jbe
cmp
adc
cs
xchg
push
cdq
test
icebp
mov
push
or
and
push
and
mov
jb
inc
or
jmp
std
shl
add
mov
call
nop
stc
iret
out
outs
dec
sbb
sbb
imul
jb
jle
or
cmp
dec
xchg
or
hlt
pop
or
fwait
call
div
pop
xchg
or
mov
xlat
jb
xchg
mov
es
jns
loop
ja
mov
xchg
xor
pop
out
mov
xchg
sbb
arpl
mov
and
cmp
in
jp
sbb
pop
das
push
mov
in
test
inc
cmps
sub
in
xchg
xlat
xor
cli
les
inc
jbe
adc
sub
jo
out
(bad)
aad
push
mov
adc
adc
mov
push
mov
cmp
stos
pop
or
retf
daa
xchg
out
mov
mov
and
call
std
iret
nop
xchg
add
mov
sbb
xor
dec
push
cmps
sub
hlt
pop
dec
jo
into
ja
jb
mov
(bad)
inc
js
(bad)
push
psllq
out
(bad)
push
div
data16
ret
out
jmp
outs
and
test
pop
sub
fidiv
push
cmp
sbb
cmp
cli
stos
dec
daa
and
fisttp
lods
mov
das
addr16
mov
mov
add
inc
mov
xor
(bad)
jno
scas
inc
add
cmp
retf
mov
je
or
cmp
ret
icebp
inc
dec
pop
sub
rol
xchg
addr16
jns
add
mov
mov
in
cmp
outs
lods
addr16
mov
cld
iret
in
dec
and
lds
sbb
adc
mov
xor
jl
call
xchg
adc
pop
pop
and
retf
xor
and
outs
fs
dec
pop
push
rcr
push
(bad)
(bad)
cmps
dec
in
(bad)
fmul
mov
scas
bound
repnz
repz
imul
into
push
ds
cmps
pop
fwait
dec
aad
push
shl
jg
xchg
call
out
test
loopne
loop
test
test
shr
sar
push
adc
xchg
aam
add
dec
mov
inc
pop
adc
xor
and
hlt
icebp
mov
push
lods
xor
add
pop
ds
add
cmp
call
mov
es
mov
xchg
sbb
shl
mov
leave
add
outs
ss
call
xor
jg
out
jle
and
(bad)
pop
fsub
xlat
sub
mov
push
sub
xchg
imul
sub
test
fwait
xchg
mov
fimul
lds
jle
imul
adc
sbb
add
lds
data16
cmp
xchg
into
adc
dec
mov
retf
mov
push
test
aad
sub
pop
popa
ret
sar
mov
shl
add
les
adc
je
adc
inc
(bad)
sbb
push
sub
pop
fstp
xor
pusha
movs
sub
push
mov
inc
bound
jge
das
test
(bad)
or
xor
inc
test
hlt
jmp
test
into
enter
pusha
in
gs
mov
push
psubsw
or
fisttp
pop
mov
or
push
lods
inc
(bad)
mov
jae
cmps
movs
push
xor
int3
sub
fisub
ss
cli
pop
sbb
cmc
push
jp
lds
or
push
mov
sbb
push
fild
sub
xor
lea
sbb
jp
data16
dec
out
out
cmp
mov
lea
or
push
mov
stc
retf
icebp
adc
jg
mov
enter
xchg
jmp
movs
lods
adc
shr
arpl
inc
jecxz
push
sub
js
iret
adc
cmc
int
out
and
loope
mov
cmp
gs
fdiv
popf
das
out
in
fild
scas
es
sub
ss
js
jge
fidiv
mov
adc
in
ret
pop
inc
dec
xchg
cs
fnstcw
test
cli
pop
dec
into
and
iret
retf
loopne
call
xor
push
mov
rcr
inc
aas
dec
or
xchg
call
jmp
jbe
fwait
push
pusha
jp
dec
cli
ficomp
jb
leave
test
mov
jg
cli
(bad)
nop
xor
mov
sub
(bad)
sub
loope
lods
out
push
(bad)
push
sub
add
jb
xor
lods
fimul
stos
sar
sub
xor
aaa
ret
or
iret
mov
aaa
jmp
arpl
shl
ins
pop
scas
cdq
cmp
add
imul
fwait
xor
sub
lods
rol
add
popa
les
jae
sti
xor
xchg
fld
arpl
xor
inc
xchg
mov
dec
mov
pop
mov
xor
movs
in
clc
push
mov
je
in
jmp
repz
dec
test
jmp
inc
pop
bnd
in
push
test
dec
jo
cmp
ss
xchg
aad
cmps
inc
push
xor
test
and
outs
scas
sti
(bad)
idiv
out
mov
xchg
outs
adc
push
xchg
adc
ins
jle
retf
fadd
inc
aad
not
mul
lahf
pop
shl
ret
push
stos
cmc
or
scas
test
cld
das
push
ins
jb
dec
xchg
test
lods
or
dec
sbb
out
or
push
mov
sti
pop
mov
mov
ret
mov
(bad)
mov
mov
test
mov
cli
mov
mov
cmps
icebp
mov
in
sbb
dec
shl
pop
xchg
inc
push
xchg
(bad)
idiv
xchg
lahf
fisubr
rcr
push
dec
das
retf
inc
jmp
cmp
cmp
popf
int3
cmp
inc
mov
or
aaa
loope
or
movs
inc
rol
xchg
repnz
cmp
sbb
leave
and
pop
data16
adc
out
fst
inc
mov
ffree
pop
ins
in
jnp
inc
adc
sbb
push
fdivr
imul
call
adc
mov
movs
out
adc
fdiv
add
mov
or
mov
xchg
popa
aas
(bad)
std
lods
std
enter
lods
daa
sbb
jbe
imul
mov
push
mov
adc
in
xor
jns
xchg
dec
add
mov
jne
jge
ins
mov
mov
mov
or
test
mov
and
sbb
inc
dec
mov
jo
ss
push
clc
shl
sub
or
sbb
mov
fistp
cmp
mov
adc
xor
shl
pand
clc
mov
and
imul
push
ja
cwde
retf
lods
pushf
sahf
pop
mov
ret
sub
shl
sub
jbe
and
mov
adc
ret
inc
adc
cs
adc
mov
popa
sti
add
or
int3
call
arpl
js
dec
push
into
adc
jbe
jnp
cld
jnp
ins
je
retf
(bad)
xchg
mov
jecxz
or
or
push
pop
(bad)
es
(bad)
in
add
jp
pusha
fs
mov
rcr
cdq
cmp
int
jnp
xchg
jb
mov
inc
mov
movs
ins
aam
xchg
(bad)
mov
mov
dec
jnp
jae
push
or
cmp
div
aam
push
ret
push
in
sub
pop
mov
push
pop
mov
sbb
mov
mov
fld
ror
aad
push
leave
mov
push
clc
add
mov
mov
dec
aam
ror
lahf
adc
popa
(bad)
pop
aaa
mov
repnz
(bad)
mov
push
mov
cmp
push
jnp
shr
mov
cmp
inc
jb
sbb
cmp
jnp
bound
sbb
dec
imul
cmp
imul
xchg
xchg
mov
mov
dec
movs
jb
or
mov
jecxz
dec
aaa
dec
mov
cmp
mov
push
aas
les
adc
(bad)
loopne
adc
jl
aas
sbb
mov
lods
xchg
(bad)
pop
mov
push
enter
xchg
clc
sbb
sbb
adc
rol
pop
sbb
leave
lods
ins
stos
mov
xor
dec
scas
adc
push
pop
dec
test
adc
repnz
mov
add
add
cmps
fidiv
mov
mov
(bad)
cdq
sub
repz
cmp
shr
mov
pop
scas
add
mov
call
clc
(bad)
adc
push
push
adc
lods
or
jmp
cmp
jecxz
sbb
and
jo
jne
or
fiadd
in
mov
sbb
push
xor
repz
les
inc
pusha
out
xor
dec
add
std
dec
stos
or
pextrw
adc
mov
xchg
sub
movs
cs
xchg
scas
in
jp
ret
mov
xchg
clc
iret
push
dec
les
xchg
mov
mov
movs
mov
pop
loopne
es
frstor
mov
sub
add
xchg
out
push
fdivr
inc
cmp
inc
out
stos
inc
adc
jnp
push
xchg
sub
sub
retf
sub
rol
addr16
and
inc
out
and
adc
cld
scas
pand
sti
push
inc
into
and
and
scas
shl
or
jmp
mov
in
push
dec
jne
es
pop
mov
adc
xor
sub
dec
pop
or
out
mov
mov
stos
jl
sub
mov
(bad)
int3
sub
jecxz
cmp
rcr
mov
arpl
das
jae
pop
test
in
outs
mov
xor
jnp
jae
sbb
jmp
cmc
aaa
loopne
les
mov
pop
dec
outs
dec
fiadd
mov
sbb
adc
in
pop
popf
popf
dec
out
leave
sbb
in
sbb
mov
xchg
xchg
les
(bad)
xchg
xor
gs
sbb
test
mov
xchg
or
add
sbb
xchg
fldenv
scas
cmp
das
retf
mov
aas
jae
retf
nop
mov
dec
pop
or
xchg
add
loope
and
test
xor
retf
lock
pop
cmps
sub
dec
push
hlt
movs
sahf
outs
call
mov
pop
in
pushf
xlat
in
add
call
enter
ins
sbb
or
or
enter
in
das
(bad)
in
inc
jnp
daa
sbb
out
je
nop
leave
jl
imul
xchg
mov
mov
mov
push
ret
data16
mov
les
xor
pop
fdiv
out
xchg
pop
lock
lods
inc
arpl
xchg
sbb
fdivp
and
ja
ins
adc
sbb
sbb
adc
mov
sbb
dec
sub
xlat
retf
mov
fwait
data16
mov
fwait
fs
les
mul
jmp
fwait
jg
mov
mov
sbb
and
es
sbb
adc
repz
cmps
jae
aaa
aad
popf
adc
jmp
aad
mov
jbe
shl
movs
cmps
mov
inc
cdq
push
mov
cld
mov
popf
xor
mov
jb
rol
sar
add
movs
xor
or
out
pop
cdq
punpcklwd
sbb
inc
inc
dec
xchg
call
jl
push
bnd
les
call
jle
lock
imul
fidiv
sbb
push
mov
call
lods
mov
call
test
vmovups
mov
jmp
add
lahf
nop
in
dec
fsub
add
ss
jo
or
jae
shr
dec
daa
lods
mov
dec
(bad)
mov
in
xor
mov
cld
sbb
test
sbb
das
repnz
and
adc
mov
dec
or
call
cmp
push
pop
enter
push
into
pop
jl
rcr
pop
add
icebp
(bad)
mov
push
and
addr16
in
and
leave
inc
xor
pop
repnz
dec
cmps
not
enter
or
mov
retf
xchg
hlt
in
push
or
test
dec
loop
aaa
scas
dec
and
lds
mov
ins
fdiv
shr
push
fwait
dec
ins
ret
icebp
pushf
imul
(bad)
or
inc
mov
pop
or
je
add
adc
adc
cli
cmps
sub
jne
mov
ficom
movs
jmp
mov
mov
rol
sbb
pop
fsubr
and
cmp
add
inc
loope
push
xor
fild
mov
push
inc
mov
cmp
call
popf
sub
mov
inc
in
add
fstp
xchg
adc
mov
fidiv
add
call
out
push
shr
fmul
out
or
inc
mov
sbb
pop
add
enterw
dec
xor
jae
das
stc
fcomp
js
fisub
rcl
dec
sbb
stc
fs
inc
inc
and
cli
pop
outs
cmps
stos
shl
push
mov
ret
popf
jno
ret
rcl
adc
ja
clc
add
and
cli
jb
fisttp
xor
inc
cmp
cmp
jge
clc
movs
push
xor
stos
shl
ds
popf
cmp
mov
or
cmp
das
arpl
(bad)
xchg
sub
ret
mov
test
call
mov
xchg
mov
aaa
fadd
xchg
xchg
sub
inc
dec
fld
outs
sbb
adc
mov
pushf
push
jecxz
pop
mov
fwait
mov
pop
cmp
cmp
movs
or
loopne
push
jae
(bad)
sbb
rcr
xor
mov
cmps
inc
dec
iret
into
es
lods
icebp
cmp
aas
cmp
or
push
lea
pop
leave
push
rol
icebp
dec
stos
mov
push
jmp
stos
pop
jno
xor
and
outs
call
cmp
xchg
push
idiv
icebp
jecxz
adc
in
inc
ror
test
sub
add
call
push
xchg
(bad)
std
push
jo
sub
push
or
cli
jo
xchg
mov
int
or
cmps
pop
loop
pop
daa
add
ins
pop
sahf
and
enter
popf
fs
call
(bad)
pop
fmul
in
pop
icebp
inc
jb
inc
retf
sbb
xchg
popf
inc
dec
mov
jmp
mov
pusha
fisubr
push
sbb
lock
mov
push
cmps
or
pop
lods
out
adc
aad
adc
lahf
loope
jne
push
xor
cli
sti
retf
xchg
test
push
in
sbb
mov
jp
sub
lods
xchg
push
lods
cwde
popa
iret
ss
push
or
pop
das
push
(bad)
scas
out
ins
lods
call
jl
std
push
rcr
push
movs
dec
pushf
inc
jp
adc
mov
scas
arpl
(bad)
xlat
ror
(bad)
adc
stos
inc
out
pop
out
cmp
jno
pop
cmps
sbb
mov
sar
outs
dec
push
mov
int
mov
push
xchg
sbb
xchg
cmp
and
mul
jmp
popa
cmc
sbb
adc
mov
mov
es
cmps
pop
loop
loope
push
pop
xor
pop
adc
jo
push
cwde
sub
sbb
mov
cdq
or
inc
xchg
mov
mov
ins
in
std
aas
or
shl
outs
dec
jne
call
xchg
mov
or
fsub
hlt
outs
icebp
cmp
loop
test
xor
jge
xchg
add
and
ins
push
leave
pop
test
std
test
sub
and
ret
pop
pop
mov
lds
sbb
xor
mov
mov
fadd
ins
fs
or
mov
lea
cmp
das
aaa
and
or
cmp
fnsave
mov
aaa
test
inc
or
pop
test
clc
pop
mov
jno
push
add
out
test
jb
mov
mov
and
movs
jmp
pop
es
sub
pusha
sti
(bad)
mov
or
icebp
cmp
lods
ja
ja
push
cmps
rcl
xor
fadd
sbb
or
jae
sbb
ss
outs
or
xchg
jne
and
test
dec
(bad)
jnp
sub
(bad)
mov
sahf
ror
out
les
and
pop
cli
lahf
and
sti
leave
inc
inc
lods
and
mov
movs
mov
jecxz
adc
jle
gs
sub
pop
dec
dec
repnz
int
rcr
xor
ret
leave
pop
sbb
jge
and
pop
pop
test
cmp
fistp
push
stc
cli
out
outs
shl
rol
pop
adc
mov
test
and
and
jmp
popf
jo
ficom
std
mov
mov
in
inc
repnz
pop
enter
jmp
in
pop
aaa
jp
add
adc
xor
push
in
add
adc
or
addr16
jmp
shl
jnp
adc
mov
mov
dec
add
pop
test
ret
nop
adc
cmp
cdq
mov
adc
mov
cli
cmps
xchg
mov
pop
dec
sbb
icebp
and
movs
mov
call
mov
adc
or
inc
mov
dec
hlt
ja
loope
test
cmp
leave
(bad)
xchg
jmp
imul
icebp
inc
sub
inc
mov
mov
icebp
in
imul
mov
or
sahf
(bad)
call
sbb
or
inc
(bad)
mov
das
xor
in
aaa
(bad)
(bad)
jns
daa
adc
leave
sbb
pop
inc
pop
or
movs
sbb
cmp
mov
xor
icebp
and
lods
aam
sub
dec
icebp
test
or
js
cmp
aaa
test
push
stc
popa
mov
mov
dec
outs
leave
add
xor
push
or
sub
inc
pop
sub
bound
sbb
sub
xor
cmp
int3
shr
sbb
push
xor
frstorw
int
xor
push
inc
mov
iret
pop
push
push
test
mov
std
add
adc
into
or
addr16
dec
jo
aas
mov
inc
into
or
jge
jne
xor
pop
mov
rep
enter
gs
daa
mov
pop
ror
call
sbb
or
jne
gs
sbb
stos
xchg
push
je
add
arpl
popf
xchg
dec
mov
and
jge
cli
cwde
sar
xchg
jb
out
int3
rol
ja
addr16
loop
jbe
(bad)
fstp
and
pop
fnsave
xchg
js
out
dec
add
and
or
ss
sbb
sub
and
fisubr
mov
xchg
mov
lea
dec
mov
popa
int
dec
cmp
xlat
add
inc
call
jmp
mov
out
inc
pop
ins
push
pop
dec
xchg
sbb
bound
sbb
ds
jo
es
push
loop
dec
add
cmps
and
lods
pop
icebp
imul
cmp
sub
sti
sbb
adc
test
adc
outs
dec
sub
push
xor
ja
sbb
mov
mov
dec
(bad)
jno
jmp
movs
bound
xchg
inc
add
ficomp
xlat
movnti
icebp
loop
xchg
imul
sbb
in
dec
inc
dec
test
and
(bad)
and
lds
jb
rol
mov
push
hlt
cli
test
adc
or
cli
test
loopne
xchg
xor
inc
mov
mov
daa
clc
bound
inc
xchg
dec
mov
xchg
fsub
mov
call
sbb
addr16
push
pop
xchg
mov
daa
pop
addr16
in
lods
shl
fcom
or
js
mov
sahf
out
test
and
daa
rol
mov
jp
push
inc
mov
lock
lock
or
adc
dec
dec
(bad)
scas
adc
mov
jmp
sbb
fidiv
mov
inc
(bad)
rcl
add
mov
rcl
jbe
ds
mov
xor
mov
ins
push
xchg
lea
jle
out
jecxz
out
pop
mov
jno
mov
pop
xchg
enter
jbe
scas
push
cwde
cli
fstp
sub
mov
push
push
out
gs
sub
es
das
mov
mov
sbb
adc
and
lods
into
add
jmp
sbb
das
sbb
dec
out
outs
loope
mov
ins
xor
es
sbb
hlt
sbb
shl
sbb
out
(bad)
mov
sbb
out
sub
mov
aad
popf
into
mov
sbb
gs
pop
sub
inc
repnz
iret
jp
push
sahf
or
pop
imul
leave
jmp
push
push
push
mov
addr16
add
pushf
fs
ffreep
push
pop
mov
lods
pop
(bad)
out
into
mov
jmp
xchg
push
aas
(bad)
iret
push
ins
mov
sbb
repnz
lods
sub
xlat
mov
imul
ss
retf
cli
aam
adc
(bad)
dec
xchg
inc
fimul
jae
lds
pusha
add
cmp
fst
mov
ret
out
sahf
outs
scas
push
xchg
(bad)
push
stc
pop
js
xchg
xchg
movs
pop
jb
adc
das
jmp
addr16
mov
stos
jmp
xor
push
inc
test
jecxz
iret
cmps
loop
es
push
mov
fbstp
call
push
pop
push
jge
test
mov
fs
pop
out
lahf
dec
(bad)
mov
(bad)
sbb
dec
xlat
cmp
push
xor
mov
and
mov
fwait
sub
pop
xchg
jecxz
retf
add
imul
popf
daa
pusha
dec
push
jmp
cmp
call
sbb
sbb
in
add
mov
adc
jnp
cs
das
pop
into
xchg
and
sub
rcr
mov
cmp
enter
iret
sub
pushf
ficom
imul
loopne
stc
mov
sub
mov
pop
(bad)
sub
add
not
arpl
into
leave
mov
adc
arpl
inc
sub
sub
cdq
adc
xchg
jg
inc
jmp
add
jns
xor
loop
xchg
adc
adc
adc
retf
cmp
sbb
sti
ins
mov
jb
cli
ret
xor
mov
or
test
pusha
mov
stc
mov
or
stos
or
call
cs
lods
js
enter
or
mov
jbe
and
jge
jle
into
arpl
or
movs
fcom
push
mov
jae
cmp
scas
stos
mov
xor
sub
xchg
adc
inc
aam
inc
and
in
dec
in
xor
enter
imul
dec
fld
pop
xor
imul
icebp
bound
sub
push
cdq
leave
nop
sub
out
dec
outs
es
add
jecxz
or
mov
cwde
mov
push
cmp
pop
push
popf
fild
or
mov
dec
hlt
mov
cli
ret
xchg
popa
jge
cs
or
inc
cwde
lds
dec
jnp
daa
(bad)
nop
mov
dec
gs
sub
and
dec
dec
je
leave
cmp
(bad)
jo
stc
imul
push
mov
mov
stos
pop
jb
ins
xchg
cld
pusha
jae
pusha
stos
lods
xchg
ffreep
cmc
jnp
mov
stc
add
sub
jecxz
inc
dec
sbb
addr16
mov
aas
sub
or
xchg
fisttp
and
loop
in
mov
js
scas
icebp
fwait
push
sar
cli
shl
js
sub
xchg
sub
adc
or
mov
or
bound
push
imul
pop
outs
jecxz
data16
imul
pop
cmp
cmp
pop
sub
repnz
mov
fcomp
jne
or
rol
jo
es
jo
jl
add
inc
xlat
adc
fsub
stc
add
pop
add
jg
shr
xchg
psubusb
xchg
xchg
and
and
xchg
fst
mov
mov
and
in
mov
jl
loopne
inc
imul
mov
dec
pop
rcr
pusha
xchg
jge
pop
adc
mov
js
stos
cmps
jl
mov
icebp
scas
jae
stos
sti
popf
and
clc
leave
out
fiadd
int
mov
dec
imul
lea
pop
outs
mov
add
xchg
aad
(bad)
fucom
shr
pop
mov
jge
(bad)
pop
mov
dec
rcl
test
inc
clc
xor
xchg
ja
in
daa
add
in
pop
or
shr
xchg
or
sti
outs
mov
mov
aaa
dec
ins
mov
outs
mov
call
imul
test
out
xchg
mov
mov
add
in
popf
mov
pop
ror
addr16
es
mov
or
in
clc
sbb
repnz
shr
inc
cmp
and
and
loop
xchg
mov
lods
out
jne
sub
pop
test
inc
ds
mov
sub
and
mov
(bad)
into
pop
jg
adc
sahf
fisub
mov
jmp
retf
test
pop
fs
adc
add
xor
shl
push
jb
add
aam
dec
ret
cmc
pop
movs
int3
loopne
popa
xchg
dec
fs
sti
xchg
clc
fucomip
mov
push
inc
cmp
fst
inc
pop
test
cmp
call
or
fcom
push
ret
call
mov
fmul
mov
dec
jbe
out
or
fs
fcom
dec
imul
sub
pop
jb
dec
sbb
adc
pop
mov
xor
jp
aam
push
(bad)
push
aam
repz
scas
cmc
repz
je
fisub
(bad)
xor
inc
mov
jle
jae
sbb
cmp
test
js
mov
or
retf
push
ds
retf
sbb
adc
xchg
mov
jle
mov
cld
push
enter
data16
mov
add
inc
adc
sub
jno
push
popa
jge
or
xor
xchg
push
adc
addr16
retf
retf
sbb
out
and
into
xor
push
pop
mov
and
push
or
jmp
inc
push
xchg
mov
out
shr
ins
push
jae
or
icebp
hlt
adc
hlt
not
stos
cs
aam
hlt
xchg
out
or
and
pop
add
jge
pop
pusha
push
rol
push
ret
fwait
std
mov
cdq
shl
mov
gs
je
sbb
inc
jl
and
fisttp
into
pop
inc
jge
xchg
jae
lea
sub
mov
sahf
push
rol
rcr
mov
or
and
jle
or
pop
rcl
push
or
sub
je
imul
inc
dec
repz
mov
(bad)
stos
in
dec
mov
je
mov
jne
stc
ficomp
jmp
mov
sbb
or
xchg
imul
cmp
cdq
das
sbb
push
xchg
push
or
js
adc
adc
fnstenv
xchg
sub
xor
out
shl
mov
mov
mov
popf
dec
cmp
pop
mov
(bad)
jne
loope
jmp
aas
push
mov
or
mov
lds
push
mov
mov
bound
inc
inc
mov
inc
mov
and
add
adc
or
in
xor
add
or
idiv
push
fisttp
jg
in
mov
mov
mov
lock
mov
xchg
inc
push
ror
std
out
sar
retf
nop
mov
rep
and
inc
pop
ins
outs
movs
pop
pop
std
mov
mov
dec
(bad)
out
dec
jg
push
and
mov
out
outs
stc
int
push
jo
arpl
jmp
lock
(bad)
in
lods
loope
into
xchg
pop
xor
(bad)
hlt
jb
es
inc
push
addr16
mov
and
es
and
ret
ret
jmp
stos
cmps
imul
xchg
in
std
inc
and
jne
std
enter
xchg
punpckhdq
das
lahf
jle
je
stc
jl
xchg
cmps
sbb
not
mov
cmp
mov
jae
mov
cmp
push
and
dec
stos
pop
cmps
cmps
mov
jae
scas
and
loop
fs
push
movs
xchg
sub
sbb
xchg
sbb
shl
loop
lods
test
clc
cmps
xor
hlt
aaa
xlat
mov
and
fadd
push
push
jbe
sti
dec
xor
or
push
adc
out
stos
cld
loop
rcr
shl
push
pusha
jne
movs
sbb
jne
xchg
and
retf
sub
into
fcomp
jns
mov
sbb
mov
clc
cld
(bad)
cwde
lock
add
mov
js
inc
pop
gs
mov
enter
lea
dec
(bad)
xchg
pop
mov
data16
adc
repnz
scas
mov
js
push
outs
mov
test
retf
(bad)
call
pop
inc
out
inc
add
cdq
pop
aas
pop
jae
or
pop
cmc
mov
jge
and
jp
fist
aad
mov
outs
cmp
pop
(bad)
jmp
fwait
repnz
pop
into
sub
rol
jecxz
lock
sub
in
xchg
dec
sbb
adc
retf
pop
and
mov
adc
popf
adc
jns
jg
cmp
test
ror
add
int
shl
add
cwde
pop
fdivr
push
add
ds
imul
test
mov
scas
dec
test
stc
push
pop
cmc
clc
pop
xchg
xor
sub
arpl
dec
sbb
cmp
or
ins
fcomp
xchg
in
sti
ret
and
out
cdq
sub
jns
dec
ret
dec
inc
sar
jle
lods
pop
hlt
out
dec
imul
push
jge
loopne
adc
cmp
or
cmp
inc
sti
mov
xchg
jg
aaa
jno
push
(bad)
aam
int
aas
fsub
push
and
pop
sti
mov
push
out
xchg
fdivr
mov
stc
ret
push
mov
mov
mov
popa
xchg
ror
and
cmp
(bad)
pop
sub
das
xor
mov
push
mov
mov
xchg
inc
xor
xchg
mov
cmp
les
inc
fneni(8087
lock
popa
cmp
jl
and
push
or
iret
imul
dec
xor
mov
cmc
push
nop
test
movs
pop
sub
cwde
rol
push
jmp
scas
or
mov
push
outs
hlt
fnstcw
and
cmp
pop
mov
xchg
xchg
aaa
sahf
idiv
into
xor
in
jg
and
push
lea
jmp
sub
shl
dec
sbb
jl
pop
cmp
popa
pop
(bad)
mov
pop
and
jge
lea
inc
cli
cwde
in
xlat
push
imul
aas
xor
test
jge
fiadd
in
neg
add
cmp
xlat
jne
xchg
push
and
sbb
jle
xor
mov
(bad)
fbstp
out
in
sti
or
mov
jmp
fst
push
rol
(bad)
loop
and
pop
cmps
div
iret
adc
ret
jecxz
aaa
scas
div
jmp
mov
sub
sbb
leave
push
mov
and
ss
or
ins
push
rol
nop
push
imul
xor
push
stos
sbb
inc
int3
retf
xor
dec
das
push
out
lahf
mov
ret
in
ror
aam
fld
cld
ins
push
test
add
or
lock
cld
push
les
cmp
retf
lds
mov
inc
xor
xchg
push
inc
jo
sbb
jmp
jp
jb
xor
stos
xchg
dec
jg
bnd
and
js
xlat
vmread
ins
aaa
int
mov
mov
cld
jne
mov
sbb
pop
cmps
fnstcw
pop
shr
pop
aam
ins
mov
mov
jo
mov
or
and
rcr
or
push
pop
hlt
ins
jecxz
jmp
sub
xchg
add
std
repnz
ss
mov
jmp
leave
test
cmp
add
shl
dec
or
sbb
sbb
rcr
sub
pop
xor
cwde
cmps
push
sub
cdq
sub
add
fiadd
mov
stc
es
pop
jb
out
push
push
mov
or
shl
push
fucomip
mov
add
and
xor
in
inc
mov
inc
sub
addr16
outs
fldenv
jge
bound
sbb
push
xchg
or
mov
dec
jae
xchg
sub
or
icebp
js
sub
xor
jae
sar
adc
fmul
inc
pop
pop
ficom
dec
jge
pop
mov
push
ret
and
add
adc
and
xchg
jb
lods
jp
lods
jmp
in
sbb
pusha
inc
push
mov
mov
scas
test
adc
imul
adc
mov
jae
(bad)
sbb
repnz
mov
jae
aam
ror
bound
les
das
retf
test
adc
jl
cwde
cdq
push
jl
int
pop
adc
(bad)
push
loopne
popa
xchg
add
pop
dec
daa
cli
loopne
movs
ret
movs
inc
into
jmp
daa
jle
xlat
cmp
rcr
fcom
sbb
(bad)
push
and
and
xor
pop
icebp
in
and
int
xor
mov
test
popa
cmp
test
dec
call
push
int
fcom
nop
adc
jb
aaa
pushf
mov
ins
pop
dec
stc
sbb
cmp
jne
pop
fst
sbb
pop
jae
and
cmp
(bad)
fld
fidivr
test
rcl
add
jno
fimul
push
mov
das
fwait
std
push
fs
loopne
mov
lock
jb
(bad)
push
and
pop
test
push
sub
sbb
outs
loope
lahf
loopne
fidivr
mov
cdq
ins
call
pushf
cdq
sbb
(bad)
push
or
rol
fcmovbe
pop
xor
movs
jo
shl
cmp
sbb
retf
fwait
hlt
pop
adc
xchg
cwde
sub
xchg
pop
call
jl
xor
scas
pop
(bad)
push
xor
sahf
(bad)
push
and
mov
ret
jo
and
stos
in
ret
ds
leavew
pop
cmp
bound
pop
mov
lock
and
xchg
add
(bad)
(bad)
sub
hlt
pop
mov
test
loopne
into
jno
test
out
in
cdq
jo
out
jp
ret
(bad)
mov
jp
xor
in
xor
pop
xchg
aam
cmps
jl
adc
icebp
jbe
xchg
jmp
ins
call
mov
push
jecxz
shl
push
loope
rcl
ret
aad
dec
loope
outs
ret
daa
mov
(bad)
mov
push
pop
lahf
shr
and
lock
loope
jo
je
jno
jnp
pop
mov
cwde
jmp
sbb
aad
pop
mov
sub
xor
test
loope
mov
fdivr
je
js
mov
xchg
retf
adc
imul
je
sub
mov
dec
(bad)
call
inc
xchg
(bad)
xor
(bad)
pop
mov
pcmpgtd
and
jmp
jnp
push
add
push
lods
aam
daa
stos
cmp
mov
(bad)
mov
ficom
xchg
fdivr
adc
shl
push
add
add
push
push
inc
mov
and
pop
test
push
adc
test
ss
retf
ficomp
call
inc
add
test
pusha
and
adc
out
fdivr
xor
push
daa
int3
xchg
addr16
jbe
sub
push
adc
ret
mov
or
ja
mov
(bad)
cmps
mov
xor
test
mov
push
call
cdq
pop
lods
idiv
js
ret
aam
shr
data16
xchg
xor
data16
mov
mov
jbe
mov
loope
dec
arpl
jae
xchg
loop
adc
xlat
xchg
(bad)
sub
retf
mov
mov
dec
movs
pop
fistp
(bad)
fistp
push
fnstcw
sbb
cmp
ret
pushf
dec
clc
sbb
ins
fisttp
or
div
push
(bad)
ds
test
xchg
dec
or
fbstp
mov
mov
mov
xor
scas
inc
adc
fiadd
test
cmp
and
je
leave
adc
and
movs
and
sahf
dec
xchg
(bad)
xlat
cmps
mov
icebp
cmp
or
jmp
fcom
(bad)
repz
mov
pop
xchg
xchg
xchg
xlat
mov
mov
sbb
cmp
fstp
loopne
jg
jb
pop
inc
jb
ins
dec
adc
adc
jmp
mov
dec
sub
call
(bad)
movs
mov
adc
mov
xchg
inc
jns
and
sbb
adc
adc
dec
mov
add
jl
or
mov
dec
xor
sub
mov
pop
stos
jae
int3
sub
call
test
xchg
mov
and
test
cwde
rcr
bnd
and
sub
dec
inc
arpl
ins
xor
out
lea
xchg
cwde
push
xor
ins
sbb
dec
mov
pop
cmp
clc
jge
sti
stos
out
or
loopne
aaa
push
mov
mov
xchg
test
clc
inc
jne
sahf
mov
shl
pop
xchg
sub
jle
mov
xchg
inc
xchg
cs
cmp
jns
cs
adc
aam
stc
push
cli
inc
loope
ror
add
push
push
popf
xchg
into
fadd
add
adc
imul
fwait
in
out
test
jle
lahf
mov
arpl
ds
cmps
sbb
sti
xchg
inc
in
xlat
in
test
jge
sbb
daa
fwait
into
add
adc
xlat
or
enter
and
ss
in
adc
aaa
jge
fcmovnb
inc
xchg
in
pop
popf
push
cmp
pop
xlat
jmp
sbb
out
mov
mov
xchg
sbb
sahf
hlt
sub
mov
pop
pusha
mov
cmc
pop
sub
inc
add
jecxz
mul
pop
mov
pop
pop
in
jbe
xor
adc
mov
push
and
mov
(bad)
daa
fdiv
sbb
lods
pop
cmp
and
sub
(bad)
xor
dec
loope
jno
shr
fs
aad
rcr
fs
retf
sti
ja
xchg
xchg
(bad)
push
xor
push
imul
(bad)
add
mov
(bad)
add
lods
push
popf
jns
movs
test
cmp
cmp
(bad)
fnstcw
mov
das
loop
push
inc
adc
ret
cmps
cmp
xchg
mov
inc
inc
fsub
cdq
sti
test
cmp
mov
aam
(bad)
stos
pusha
js
pop
iret
out
(bad)
sbb
jbe
mov
loopne
jb
xchg
sbb
ins
fdivr
loopne
dec
jno
cmp
inc
sub
jg
retf
aas
cmps
(bad)
mov
stc
clc
movs
retf
mov
ss
popa
adc
jecxz
mov
pop
or
out
out
lods
add
aaa
adc
cwde
sti
xor
ret
xchg
inc
jecxz
xor
adc
pop
mov
test
fldpi
mov
lahf
and
ins
enter
jl
dec
jmp
adc
or
add
cdq
popa
dec
call
ins
stc
xlat
mov
jb
in
cmps
inc
test
lods
pusha
idiv
pop
xchg
sub
and
shl
retf
rcr
mov
mov
test
jns
adc
pop
mov
fwait
sar
cmp
out
lods
or
nop
cdq
add
xchg
mov
repz
xchg
mov
or
rol
iret
into
jo
pop
loopne
int
in
out
aad
mov
enter
push
call
sbb
mov
push
outs
jne
dec
sahf
adc
mul
pop
adc
mov
or
inc
dec
mov
test
cld
adc
xor
stos
and
xchg
jg
lahf
mov
adc
fcom
inc
mov
shr
adc
stc
push
adc
dec
int
fdiv
inc
rcr
(bad)
stc
xchg
bound
adc
cli
stc
mov
test
push
loopne
fmul
scas
aam
push
adc
pop
mov
pop
xor
and
fidiv
xor
mov
lahf
call
jge
pop
fisttp
jmp
push
cmp
mov
jbe
int
ror
hlt
jmp
shr
mov
jle
mov
aad
lods
and
or
dec
out
lods
or
test
adc
retf
xchg
and
push
fwait
mov
add
in
mov
sbb
shl
pusha
push
outs
(bad)
jecxz
popf
pop
ret
aam
or
jae
cs
add
retf
and
dec
rcr
popf
shr
jmp
adc
les
cmp
jno
cmp
jae
mov
sahf
stos
in
mov
in
adc
test
sbb
leave
iret
sub
add
aaa
adc
or
in
jmp
clc
loope
dec
xchg
inc
(bad)
fld
sbb
test
enter
adc
popa
out
lea
cs
xor
aas
jns
inc
inc
dec
pop
mov
jp
push
into
pop
inc
and
jne
popa
in
xchg
xor
loopne
adc
dec
jg
xchg
js
icebp
dec
adc
imul
addr16
js
pop
pop
inc
sub
data16
xchg
shr
jb
out
sahf
movs
in
setg
dec
lahf
mov
loop
movs
daa
dec
jg
das
xchg
loop
imul
mov
xchg
movs
xor
arpl
add
inc
pop
(bad)
mov
push
in
movs
cmps
sbb
and
xor
and
mov
ret
dec
sbb
dec
push
sbb
push
bound
and
mov
outs
inc
and
mov
mov
dec
jae
lods
inc
lods
dec
xchg
arpl
add
dec
in
pop
rol
sbb
jbe
(bad)
out
adc
mov
lahf
das
jmp
ss
inc
clc
(bad)
push
sub
repz
lods
inc
mov
bound
mov
jp
push
iret
popf
loope
inc
mov
lock
or
add
cmc
aam
in
ret
mov
test
rol
test
js
sub
xchg
std
mov
fisttp
aad
xor
pop
aad
inc
cmp
sahf
mov
les
lods
adc
adc
(bad)
icebp
(bad)
nop
jbe
xor
or
inc
cmovbe
mov
out
pop
jp
xchg
scas
jge
mov
push
xchg
test
push
ds
out
push
sbb
in
sub
and
rcr
xchg
faddp
in
in
popa
lahf
mov
mov
dec
mov
rcr
jmp
and
pop
adc
dec
pop
or
scas
sub
out
and
rol
mov
pop
inc
xchg
or
repz
adc
ret
es
and
xlat
jmp
aad
cli
call
or
cmps
pop
ins
jmp
in
sbb
(bad)
ret
sbb
dec
nop
xchg
add
in
dec
mov
jp
add
out
pushf
movs
adc
or
sahf
or
or
xchg
fcomp
test
add
or
ss
mov
xor
sbb
jecxz
mov
mov
mov
sar
dec
gs
pop
push
std
jno
movs
jge
dec
add
into
cmp
cmps
cdq
je
xchg
fwait
shr
push
rcl
push
pop
fwait
jnp
mov
std
push
xchg
dec
ins
loope
add
cdq
sub
daa
into
mov
into
pop
dec
jg
adc
mov
mov
pushf
jae
xlat
mov
in
jl
pop
pushf
(bad)
popa
ffree
scas
inc
sbb
loop
(bad)
cmp
push
jnp
jmp
daa
ds
xor
mov
(bad)
ds
in
xor
inc
fild
sub
push
sub
mov
sub
add
std
(bad)
shr
pop
mov
scas
sbb
jg
data16
and
sahf
mov
in
mov
jb
and
cmp
or
(bad)
push
inc
dec
imul
jne
mov
and
gs
sub
cmp
sti
(bad)
jge
dec
sbb
jmp
stos
jmp
adc
bound
sbb
or
les
es
lds
hlt
aas
mov
imul
in
in
ret
cmp
mov
ins
mov
xchg
mov
aas
test
inc
fistp
push
fsubr
mov
xor
jg
bound
(bad)
pop
dec
jmp
and
mov
retf
cdq
or
mov
aas
mov
loopne
fsub
dec
aaa
lahf
ins
(bad)
call
sbb
aam
xor
imul
adc
ins
jb
sub
jae
push
lods
lahf
lock
in
push
pop
mov
pop
(bad)
mov
cmp
pushf
mov
stos
movs
adc
cmp
or
pop
cmp
fiadd
xchg
ficom
lods
push
mov
xchg
ret
xor
in
mov
hlt
sbb
push
mov
sti
js
imul
cwde
retf
iret
cli
sbb
ja
lods
ret
pop
mov
pop
into
arpl
pop
xor
sti
lods
jb
dec
pop
(bad)
cmp
mov
mov
jno
inc
ret
pop
pop
mov
xor
add
add
xchg
sub
or
add
fmulp
mov
inc
lahf
sbb
repz
cmp
cmp
outs
pop
test
xchg
jo
inc
cdq
push
outs
mov
fimul
pop
pop
pop
jb
adc
sub
fild
jb
aas
aaa
sub
push
fbld
test
rol
repnz
fbld
push
add
xchg
inc
jb
mov
ins
mov
mov
jl
(bad)
gs
stos
inc
sbb
jg
je
xor
xchg
pusha
push
loope
pop
jge
pop
icebp
out
out
sahf
dec
inc
icebp
sub
out
mov
sub
or
ret
shl
mov
push
add
lea
xchg
test
push
sub
ret
dec
repz
fmul
jae
fidivr
adc
xchg
test
xchg
daa
sbb
cmp
xchg
dec
lea
push
dec
imul
jns
mov
cs
jb
movs
(bad)
jne
daa
int3
jmp
stos
push
jnp
sub
movs
fist
stos
xchg
mov
inc
mov
fnsave
mov
stc
mov
cmps
jmp
shr
fbld
inc
fcom
or
in
push
jns
in
jmp
xor
jno
jbe
xor
push
mov
xchg
cli
inc
mov
pop
and
stos
jmp
adc
jae
mov
xlat
jp
and
sahf
gs
repnz
xchg
or
cmp
leave
mov
mov
inc
div
jns
dec
sub
mov
mov
les
sbb
int
sub
mov
and
neg
sbb
push
or
xor
push
into
jns
fs
(bad)
adc
mov
push
or
sub
stos
mov
cwde
inc
retf
into
iret
outs
sub
fdivr
push
in
test
iret
lahf
mov
ds
push
repnz
addr16
cmp
mov
sbb
mov
(bad)
jmp
in
mov
pop
dec
inc
mov
aam
dec
adc
add
out
daa
and
icebp
jb
sbb
fsubr
cmp
push
lods
outs
jo
addr16
scas
add
cmps
stos
(bad)
or
adc
cdq
xchg
add
xor
sub
test
or
fs
dec
xchg
xchg
fsubr
fild
pop
add
aad
ins
fwait
addr16
fldcw
add
out
cmp
sbb
sub
mov
cmp
dec
nop
fdivr
repnz
and
in
or
mul
jmp
aaa
aam
sbb
mov
pop
sub
rcl
fsub
nop
cmp
cmp
gs
push
pop
sub
pop
ja
je
(bad)
adc
pop
push
xor
jecxz
stos
cmp
mov
pusha
loopne
mov
xchg
pop
or
int3
add
cdq
loope
inc
loopne
mov
leave
movs
xor
jge
mov
jbe
xchg
add
lock
test
pushf
adc
cmc
mov
stos
mov
outs
aad
(bad)
call
jg
mov
gs
in
stc
pop
loope
addr16
sub
ins
mov
mov
push
sub
mov
jne
push
push
fcmovnb
mov
mov
mov
imul
mov
sub
sbb
ss
aas
sbb
mov
adc
mov
jge
jmp
fwait
adc
psrad
or
test
popf
outs
call
outs
xchg
ja
out
fldenv
pop
and
xchg
mov
xchg
cmp
push
jne
push
retf
loope
ins
aas
jmp
xor
and
xchg
pusha
in
test
xlat
rep
test
cmp
push
pop
mov
push
in
iret
jg
sbb
dec
lock
test
adc
jns
push
aad
mov
and
lods
or
test
adc
xchg
iret
in
in
adc
(bad)
mov
xchg
cmc
pop
jb
enter
fbstp
add
add
mov
cmps
jne
jns
sub
hlt
popf
arpl
jge
in
or
cli
in
cmp
adc
adc
cwde
jo
or
cs
gs
jp
push
cmp
out
xor
hlt
mov
in
jmp
hlt
test
sbb
ror
ins
ret
data16
add
jo
ror
ret
loop
dec
mov
sbb
pop
pop
push
or
into
cwde
fwait
mov
jle
pop
and
xor
lock
sar
shld
lock
das
add
dec
adc
in
adc
inc
or
call
outs
push
std
into
test
jmp
aam
inc
jmp
cmp
push
fmul
push
psrld
mov
(bad)
mov
es
mov
ret
push
inc
mov
jnp
xor
or
xor
outs
xchg
mov
and
out
fadd
loopne
sbb
repz
in
mov
loop
pop
push
loop
pop
mov
adc
pushf
inc
mov
xor
ror
prefetch
sbb
cs
test
pusha
or
scas
mov
jae
dec
pop
inc
jmp
and
mov
ret
mov
mov
rcl
jno
mov
lock
sub
imul
inc
push
pop
mov
adc
mov
sub
hlt
fstp
mov
xchg
call
jmp
mov
call
mov
enter
call
icebp
int3
clc
sub
sbb
push
nop
mov
sbb
xchg
jge
js
mov
cli
retf
mov
or
rcl
push
daa
add
or
enter
and
inc
bound
das
and
sub
in
add
fs
lods
mov
(bad)
cwde
sub
loop
cld
repz
mov
jmp
sbb
(bad)
mov
mov
mov
sbb
push
fstp
in
sub
les
push
inc
or
dec
cdq
adc
push
popf
dec
lds
jl
in
xor
pushf
push
mov
pop
scas
push
ins
pop
jae
fimul
xchg
xchg
inc
sub
lock
sub
jmp
inc
clc
aam
ficomp
ss
sahf
out
fwait
inc
int3
mov
inc
retf
xor
rcl
outs
xchg
or
into
test
or
test
xchg
out
jne
mov
sub
fsub
and
jns
ja
push
cmps
out
(bad)
xchg
adc
xor
(bad)
pop
(bad)
cdq
jns
sbb
or
sar
and
in
pop
test
mov
push
add
mov
out
arpl
push
(bad)
icebp
xchg
mov
cld
aaa
xor
push
ffree
add
out
mov
and
rol
mov
aad
add
popa
call
popf
test
test
mov
pop
jmp
imul
xor
leave
cmp
ret
jne
cli
das
enter
ret
dec
push
mov
test
cdq
push
fs
jl
push
dec
and
retf
jo
dec
sbb
shr
dec
sahf
push
repz
pop
xlat
cmp
pop
and
and
fadd
jmp
sub
add
dec
pop
mov
loopne
jle
dec
int3
retf
rcr
and
in
das
sbb
repnz
stos
inc
fadd
xor
xor
mov
sbb
fs
outs
and
inc
dec
cs
ficom
push
mov
ins
xor
xchg
jo
sar
xchg
jle
or
mov
(bad)
and
loop
bound
sub
dec
lahf
test
xor
and
mov
jae
xchg
pop
add
and
mov
ror
cwde
add
nop
jl
add
icebp
cld
sbb
lods
jb
out
jl
xor
shl
fiadd
dec
add
xchg
(bad)
and
or
iret
adc
sbb
pop
inc
sbb
mov
outs
sbb
call
les
jg
jmp
cwde
out
retf
(bad)
sbb
sub
dec
jb
popa
mov
cld
xchg
push
nop
addr16
data16
outs
push
mov
imul
xchg
stc
xchg
pop
lea
arpl
imul
pop
(bad)
(bad)
daa
pop
jns
test
ret
pop
test
sub
nop
sbb
lods
xor
out
pushf
or
in
mov
fwait
loopne
cwde
in
jmp
inc
ret
xchg
enter
mov
psrad
movs
cmp
xchg
pop
ror
dec
or
cwde
or
cmc
jmp
lds
movs
std
sbb
push
sub
test
sti
jae
inc
cmp
sbb
sub
(bad)
out
call
sbb
add
xor
pop
mov
or
mov
lahf
xchg
lods
pop
(bad)
es
lds
push
out
jp
add
xlat
pushf
mov
call
cmp
inc
dec
sub
or
jg
jge
aaa
dec
int3
iret
popf
add
adc
shl
or
sar
pushf
pop
sbb
(bad)
mov
jne
pop
in
xor
mov
sar
pop
sub
aas
or
clc
ficomp
xchg
jle
mov
push
mov
fld
ds
cmps
inc
div
scas
lods
cmp
out
push
pop
pop
jl
repz
and
dec
test
test
in
es
stos
dec
jno
add
add
inc
stos
pop
adc
daa
ret
mov
sub
adc
scas
jl
xor
mov
ss
in
cs
loope
stos
and
sbb
imul
pop
adc
ja
inc
fsubr
jge
ds
cmp
mov
call
cmp
jg
in
frstor
mov
push
xchg
int
xor
lds
imul
ins
hlt
mov
cmp
sub
movs
jb
lahf
lahf
push
sar
mov
cmp
mov
loop
or
retf
js
sub
sub
xchg
sub
ds
pop
mov
fnstsw
arpl
imul
in
leave
sbb
adc
out
repnz
or
inc
stc
iret
push
fsub
out
mov
cwde
adc
mov
ror
dec
js
xor
add
les
cmc
mov
imul
and
sub
inc
js
cmp
fidiv
pusha
into
mov
pop
std
out
in
in
dec
pop
sub
ja
mov
mov
dec
scas
bound
xor
xchg
mov
sbb
jmp
mov
loope
ja
xor
xor
sbb
loope
inc
lahf
repz
mov
imul
cld
mov
das
cmps
lea
out
shl
dec
pop
(bad)
iret
push
in
or
(bad)
pop
mov
xstore-rng
cmps
add
sbb
jl
mov
jmp
sub
fs
cdq
adc
dec
in
int3
ja
test
xchg
jb
ret
lahf
pop
and
popa
inc
dec
cmp
and
dec
pop
imul
jmp
clc
jno
or
stos
sbb
cmp
addr16
inc
adc
test
imul
jno
ret
inc
shr
adc
out
fsubr
stos
dec
cdq
mov
push
sub
xchg
clc
or
sub
(bad)
add
out
mov
or
mov
pop
pop
(bad)
retf
fisubr
mov
shl
adc
mov
push
adc
retf
(bad)
sbb
aam
mov
sub
cwde
in
outs
push
scas
pop
xor
mov
test
cmp
addr16
add
sbb
adc
mov
mov
fptan
test
and
mov
neg
into
push
pop
push
daa
out
and
mov
push
mov
pop
loop
aad
imul
mov
cmp
pop
mov
sbb
and
es
test
dec
jge
xor
jmp
cmp
mov
jp
lods
mov
sub
std
(bad)
enter
popf
mov
pushf
sbb
outs
repz
popf
lahf
fldenv
cwde
dec
mov
out
nop
or
mov
add
jmp
gs
inc
cdq
mov
sti
lods
(bad)
and
push
push
in
push
push
xchg
repnz
or
xlat
les
(bad)
jno
call
jg
sbb
fmul
std
out
arpl
dec
or
xchg
in
jle
aad
(bad)
jecxz
imul
cmp
stos
ins
pop
mov
inc
lods
dec
sub
mov
lahf
jbe
mov
pop
pop
jge
pop
jge
call
ja
add
push
dec
push
cmps
fisub
inc
or
test
fiadd
pop
inc
call
cmp
repz
int3
das
sbb
mov
and
inc
sub
imul
xchg
sub
icebp
mov
xchg
inc
adc
add
xchg
pop
and
add
pop
pusha
push
xor
pop
call
scas
mov
dec
mov
(bad)
lock
sub
shr
xor
cld
(bad)
jne
pop
or
pushf
xchg
mov
xchg
or
jp
js
add
cwde
pop
out
popf
ins
mov
xchg
mov
repz
inc
add
jp
adc
mov
push
mov
aas
ds
inc
pmaxub
ins
mov
jmp
iret
ret
or
mov
leave
pop
movs
xor
or
dec
div
(bad)
pusha
pop
mov
lock
sbb
cmc
xor
(bad)
mov
into
mov
fimul
pop
push
add
dec
cmp
movs
add
mov
push
mov
mov
push
dec
push
push
push
pop
sbb
movs
loop
hlt
or
lahf
push
cmc
mov
and
push
mov
mov
push
jmp
enter
adc
sub
repz
inc
stc
inc
sti
(bad)
mov
loope
adc
pop
or
cmps
push
sbb
pop
jo
and
dec
jmp
fs
sti
lods
dec
cmp
inc
ins
ror
pop
adc
jbe
rcr
cmp
dec
lods
fwait
lea
fisubr
arpl
dec
test
in
pop
dec
inc
mov
push
or
jmp
xchg
cwde
div
jns
popf
std
cmp
adc
jns
call
cmp
sahf
push
fiadd
jae
clc
imul
cmp
xor
xor
inc
retf
push
mov
cmp
push
adc
adc
pop
test
clc
pop
add
shl
add
mov
mov
xchg
cmps
push
xchg
movs
inc
ficomp
ret
jo
dec
mov
enter
mov
adc
imul
movs
or
xchg
cs
push
and
stos
xchg
jg
inc
cmp
xor
sti
mov
(bad)
(bad)
jmp
sbb
add
mov
sub
pusha
repnz
loop
mov
mov
push
cmc
scas
into
jecxz
cmps
mov
cmp
imul
jp
lock
mov
fmul
aaa
mov
cmc
and
xchg
and
sbb
rcr
add
inc
rcr
jno
or
sbb
call
and
xchg
pop
inc
cwde
and
in
sbb
out
idiv
(bad)
push
add
or
adc
mov
jge
jns
inc
mov
outs
or
sahf
pop
inc
mov
enter
xor
mov
fiadd
into
adc
xchg
mov
cmp
popf
cwde
push
cmp
dec
test
push
int
mov
test
pusha
jns
xor
sub
rcl
cmp
jmp
jo
sub
push
mov
cmp
outs
xchg
push
pop
sbb
dec
mov
or
sub
jp
pusha
test
inc
pop
(bad)
(bad)
imul
xchg
repnz
push
je
jns
ret
sti
outs
xor
mov
jb
pop
not
mov
test
xchg
jmp
dec
or
call
cwde
je
cmp
test
ins
mov
sub
cli
imul
add
or
in
xchg
pop
sbb
and
(bad)
mov
inc
call
adc
adc
sub
outs
jb
shl
(bad)
bound
mov
pop
ins
sahf
jle
push
or
and
call
push
pop
jmp
stc
push
arpl
out
lods
hlt
inc
mov
or
iret
retf
xchg
mov
jbe
loope
test
aaa
out
pop
mov
loop
xor
(bad)
movs
push
jmp
sbb
dec
out
into
adc
and
lahf
and
(bad)
outs
data16
ficom
fsubp
jns
cdq
mov
xor
sub
ja
push
pop
mov
push
or
mov
test
movs
pop
scas
shr
push
movs
sbb
or
and
sub
mov
jb
cmp
jecxz
cmp
and
jge
sub
sbb
(bad)
pop
mov
jne
idiv
push
pusha
jge
stos
xchg
(bad)
aaa
adc
mov
adc
mov
mov
int
mov
jno
cld
retf
mov
sbb
mov
add
daa
cmp
bnd
sbb
out
push
push
lock
fiadd
push
xlat
mov
sbb
(bad)
push
cmp
nop
ficom
stos
xchg
fsubr
mov
xor
adc
inc
jmp
(bad)
std
jno
addr16
adc
mov
(bad)
(bad)
mov
mov
test
sub
shl
(bad)
push
jp
xchg
push
jb
shl
daa
cli
pushf
movs
icebp
jecxz
outs
test
retf
js
add
xchg
mov
aaa
sub
sbb
dec
into
sub
jecxz
inc
mov
mov
add
test
inc
or
enter
call
push
daa
mov
or
add
leave
mov
inc
add
aaa
or
adc
mov
rol
imul
and
jnp
push
sbb
popf
bound
adc
iret
add
popf
mov
sbb
adc
stos
push
mov
hlt
pusha
cwde
ins
stc
sub
pusha
push
inc
xchg
fadd
push
sbb
out
xor
add
rcl
(bad)
out
(bad)
cmp
pop
lahf
bound
jnp
cmp
(bad)
mov
(bad)
jns
aad
pushf
stc
xchg
rcr
stos
add
icebp
pop
pop
imul
pop
clc
mov
xchg
mov
fdivr
push
xchg
frstor
in
loop
cmp
loop
nop
hlt
sahf
mov
enter
mov
or
dec
adc
mov
fist
add
cmp
addr16
pop
sbb
or
(bad)
jl
mov
mov
sub
ins
adc
cmp
add
mov
add
lods
mov
dec
scas
mov
adc
push
addr16
(bad)
and
xor
jne
out
inc
nop
sti
mov
stos
mov
dec
add
test
xchg
fwait
pop
push
sahf
xor
push
xor
nop
outs
es
push
jo
and
out
inc
xor
loopne
pop
lods
xor
das
ss
sti
repz
and
in
fcmovu
lods
xor
loop
aad
cmps
call
xor
mov
call
xchg
jmp
pop
xchg
or
cmp
in
rol
add
fstp
mov
cmp
and
and
pop
(bad)
cmp
jb
mov
push
mov
add
neg
jns
cmp
or
sahf
stos
imul
(bad)
xor
dec
xchg
call
pop
test
jmp
and
pop
inc
rol
ret
or
mov
push
cmp
shr
jecxz
(bad)
scas
mov
stc
cli
xchg
dec
into
xchg
int3
repnz
loop
xor
out
scas
pop
shl
sbb
jmp
sub
shl
dec
repz
push
inc
nop
push
push
retf
inc
cmp
adc
cmp
gs
or
loop
rcl
(bad)
arpl
lea
sahf
mov
shl
pushw
sbb
sub
test
dec
add
pop
and
sar
sahf
popf
cli
inc
inc
mov
ins
and
arpl
ret
ins
cmp
movs
jmp
and
jae
and
sbb
ins
sahf
fcom
and
rcl
cmp
cmp
mov
dec
inc
gs
pop
adc
scas
jne
mov
pop
neg
inc
cdq
and
fistp
nop
ficomp
xchg
adc
mov
(bad)
retf
repnz
retf
arpl
push
lods
cmps
sbb
and
popa
fs
int3
jbe
jbe
xchg
call
cmp
push
sub
pop
test
mov
sbb
or
imul
dec
inc
es
test
in
pop
mov
jmp
mov
stos
jmp
inc
aad
dec
unpckhps
pop
aas
fs
ins
push
or
rcr
repz
push
retf
push
pop
inc
or
popa
sbb
daa
in
ds
jecxz
adc
or
inc
icebp
mov
ss
dec
popa
popa
es
add
add
xor
fwait
xor
fadd
icebp
mov
fild
das
and
rcr
(bad)
ror
loopne
pop
daa
dec
ins
out
dec
sub
xchg
sbb
and
stos
test
mov
loopne
inc
btr
call
mov
dec
outs
out
push
pop
inc
sub
push
adc
les
xchg
pop
cmp
cmps
mov
pop
enter
ss
popf
pushf
nop
and
xor
ret
push
add
int
test
inc
aas
lahf
inc
call
push
cmp
add
push
pop
pushf
jle
xchg
sub
sbb
add
cmps
dec
mov
rcl
ror
das
aaa
scas
mov
cmp
dec
into
mov
xchg
pop
retf
test
repz
daa
and
xchg
arpl
retf
mov
jb
or
lahf
shl
lea
mov
jo
mov
inc
call
push
sbb
mov
sub
mov
xor
sbb
int3
xchg
pop
jl
xor
test
push
es
ret
jecxz
js
iret
into
stos
cs
jge
data16
out
xor
jmp
ret
pop
mov
cmc
push
inc
xchg
inc
icebp
cmovs
hlt
xchg
sub
push
mov
lea
add
aad
iret
sub
movs
mov
push
int
sbb
lahf
imul
mov
jnp
cmp
cli
jo
jge
rol
jg
adc
sti
call
mov
and
jmp
add
push
sub
or
sbb
ja
loop
pop
adc
addr16
mov
ins
lea
cld
mov
mov
es
movs
imul
cmp
jmp
imul
fwait
mov
adc
fndisi(8087
inc
in
scas
mov
jecxz
bound
scas
cmp
in
add
sub
lds
adc
add
retf
ss
out
inc
repz
sbb
scas
inc
(bad)
out
ins
or
jg
mov
cwde
icebp
mov
cmp
jo
jae
int3
test
lds
cmc
mov
or
dec
into
mov
push
push
xchg
jne
lods
jno
sbb
dec
cs
xor
ret
cdq
sbb
mov
jno
dec
pop
(bad)
sub
fld
push
hlt
xchg
ins
sbb
pop
daa
xchg
jo
int
sbb
cmps
fcom
push
xor
cmp
mov
cs
inc
ret
cli
jge
adc
cmp
repnz
jge
fbld
jb
call
mov
sub
xor
shl
push
mov
cmps
repnz
test
fcmovnb
fidivr
ret
mov
imul
jae
mov
loop
mov
stos
out
lods
push
mov
test
test
ds
ret
fs
push
sbb
je
add
rcr
dec
lock
jge
or
or
xchg
dec
(bad)
sbb
fcmovnu
adc
dec
mov
push
or
nop
test
rcl
pslld
sbb
inc
aam
mov
loop
or
xor
std
dec
adc
(bad)
xlat
sub
jbe
mov
jno
(bad)
gs
mov
or
jge
(bad)
leave
or
pushf
dec
mov
(bad)
lahf
imul
int3
xchg
pop
stos
mov
call
hlt
call
jp
inc
imul
pop
jbe
retf
pusha
fist
jecxz
fld
pusha
mov
icebp
push
retf
sub
push
push
pop
jae
ror
shr
mov
ds
add
pushf
xchg
cmp
imul
mov
sub
push
fwait
or
jecxz
and
or
jp
push
sub
and
xchg
mov
mov
sbb
mov
mov
std
shl
movs
mov
inc
scas
and
pusha
mov
xchg
aad
dec
adc
out
jno
mov
and
inc
aaa
ds
xor
push
dec
jmp
push
push
aaa
arpl
sub
inc
xor
pop
icebp
retf
cmps
retf
xchg
mov
push
addr16
jl
lahf
gs
dec
arpl
jbe
or
cmp
mov
xor
cld
es
inc
iret
ss
xor
pop
pop
sub
arpl
mov
mov
jo
out
pop
push
mov
jg
push
les
mov
outs
and
daa
cmp
retf
jl
dec
lock
mov
repnz
cmp
mov
or
mov
pop
iret
sbb
or
leave
cli
pop
and
jmp
or
ret
and
fucomi
scas
cmps
std
sbb
repnz
lds
jne
clc
sub
push
pop
inc
sbb
(bad)
daa
cdq
xchg
call
sbb
repz
dec
sahf
jns
or
add
xchg
pop
adc
push
aaa
cmp
sbb
xchg
data16
xchg
sub
push
scas
dec
aad
xor
mov
aad
lahf
hlt
mov
jno
mov
inc
inc
adc
leave
pop
cmp
push
scas
sbb
inc
shl
jae
add
aas
cmps
inc
push
mov
ds
test
jno
mov
jno
and
ret
xor
daa
fisttp
jbe
inc
test
adc
sub
hlt
push
ret
popf
outs
sbb
mov
lods
out
mov
dec
or
cmps
aam
loopne
pusha
sahf
mov
jmp
mov
mov
jg
push
mov
daa
movs
std
inc
iret
int3
push
dec
test
adc
pop
push
push
pop
in
int3
pop
push
cmp
or
ins
test
jbe
call
pop
lea
and
add
shl
dec
pop
or
daa
push
xor
mov
pop
dec
fcomp
loop
inc
dec
loope
mov
out
fisttp
push
inc
and
mov
mov
(bad)
sahf
es
mov
sub
mov
int3
sub
jb
adc
mov
fsubr
loopne
dec
and
dec
test
out
xchg
mov
shr
and
(bad)
dec
fmul
frstor
and
mov
sub
mov
jno
and
(bad)
fs
mov
push
push
pop
adc
lods
mov
bnd
aas
enter
xchg
jb
loop
adc
mov
jne
mov
sub
scas
nop
aaa
sar
sbb
sub
fsubr
jl
and
inc
pop
push
push
js
jp
lds
js
xor
pop
leave
lock
pushf
iret
push
jmp
push
cdq
bound
nop
inc
push
setns
(bad)
push
lds
inc
push
sbb
pop
test
movs
inc
jne
cdq
scas
enter
in
xor
mov
push
and
ficom
cld
pop
dec
cmps
pop
dec
arpl
stos
in
in
lock
cdq
mov
sub
fadd
popa
(bad)
fst
cdq
div
lea
cmp
and
hlt
jmp
test
jecxz
movs
xor
arpl
sbb
push
sti
rcr
sbb
jp
in
imul
jns
lahf
lods
add
fs
js
fucom
jmp
inc
lock
mov
mov
pop
scas
rcl
(bad)
lods
add
sbb
mov
inc
and
and
xor
jno
inc
sbb
inc
icebp
test
lock
xor
scas
pop
push
mov
fldenv
xor
dec
mov
cld
imul
pop
pusha
stos
mov
movs
push
icebp
fadd
fs
add
adc
xchg
push
adc
pushf
inc
fild
popa
lea
fwait
mov
lods
push
movs
jmp
adc
leave
adc
cmp
mov
call
and
push
sbb
inc
mov
shl
in
je
out
cmp
cmp
xchg
mov
pop
push
add
lock
adc
xchg
sbb
sbb
sub
iret
xor
xchg
xor
adc
cwde
fbstp
xor
jbe
(bad)
in
mov
ins
or
jne
fs
lahf
lds
cmp
repnz
push
leave
push
inc
das
push
jl
xchg
push
sub
jb
jmp
jge
inc
jbe
cld
sbb
lods
dec
(bad)
aas
inc
(bad)
stos
std
jp
xchg
jmp
add
jmp
add
or
call
sub
nop
cmp
jmp
icebp
cmp
jae
jno
icebp
(bad)
pop
pop
xchg
push
jbe
cmp
inc
jae
lock
aad
and
sti
mov
neg
xchg
daa
retf
xchg
data16
popa
das
aad
dec
pop
retf
pop
scas
pop
das
sbb
je
int3
add
sub
inc
int3
xchg
in
add
xchg
push
ficom
mov
cdq
and
pop
aam
mov
xor
jnp
adc
adc
push
(bad)
stc
sbb
push
dec
cmp
and
adc
popf
or
xchg
and
dec
lods
and
std
add
outs
jns
(bad)
xor
xchg
adc
retf
(bad)
adc
ret
fmul
or
pusha
pop
lds
adc
cmp
sbb
cmp
dec
mov
and
call
in
fsub
out
mov
out
xchg
ins
jle
xchg
mov
test
(bad)
imul
mov
jo
push
mov
sbb
outs
cli
arpl
test
lahf
aam
mov
add
push
pop
loop
pop
push
add
fidivr
lods
sub
push
cmps
and
sti
xchg
and
jne
mov
cwde
ror
cmc
out
inc
ret
jl
sti
call
xchg
pop
call
or
cpuid
push
into
into
scas
sbb
and
mov
enter
je
inc
cmp
xor
jecxz
mov
jmp
inc
pusha
cmp
adc
dec
dec
xor
test
and
sub
fmul
cmp
enter
adc
jns
addr16
inc
lea
shr
in
(bad)
mov
xor
and
xchg
fxch
mov
or
or
call
xchg
fdiv
push
push
cmp
mov
mov
repz
dec
pusha
out
mov
pop
fmul
test
inc
xlat
lods
pop
jbe
arpl
jmp
rol
push
mov
loope
ja
push
or
jb
push
sbb
add
cmp
adc
mov
dec
movs
push
ins
fwait
jae
mov
js
mov
sub
inc
push
push
mov
jbe
xor
push
jo
cwde
adc
add
fsub
add
hlt
fmul
dec
sbb
das
dec
sub
pop
ja
adc
inc
jle
es
mov
cli
ret
add
std
or
cld
test
sahf
jp
imul
and
push
push
sbb
(bad)
xor
jb
popf
ficomp
dec
fmul
pop
dec
adc
call
jecxz
pushf
jae
push
xchg
les
inc
mov
adc
lahf
mov
xchg
les
mov
push
loope
pop
(bad)
jge
inc
xchg
fisubr
mov
retf
je
lods
scas
cmp
or
or
xor
jle
cmp
xor
add
lods
imul
push
and
in
and
dec
adc
aaa
and
sbb
pop
or
movs
mov
frstor
and
xor
pop
add
xchg
push
loopne
ret
inc
mov
repnz
fwait
sub
xchg
pop
inc
dec
clc
leave
stos
in
cmp
xor
in
pushf
retf
bound
mov
popa
(bad)
adc
dec
fistp
jno
xor
dec
pop
into
cmp
in
fcomp
pop
xor
sbb
inc
xchg
xchg
sub
mov
mov
retf
sbb
push
jbe
cmp
dec
bound
stos
ds
pop
into
aad
and
or
test
test
fisub
fs
xchg
je
addr16
(bad)
pop
and
push
xchg
enter
stc
test
stos
add
sbb
stos
and
mov
and
(bad)
xchg
enter
mov
(bad)
push
mov
mov
sub
jae
jmp
rol
fs
xor
popa
psubsw
mov
lds
ret
adc
jmp
test
mov
idiv
lods
in
neg
mov
rol
and
inc
rcr
bound
loopne
or
mov
lods
sub
xchg
adc
retf
movs
sub
ins
xchg
ror
mov
(bad)
cmp
jns
cmp
mov
(bad)
std
inc
mov
add
mov
jae
push
in
mov
ins
sahf
adc
scas
adc
and
add
shl
and
fdivr
mov
pop
push
sub
dec
ret
ss
dec
jle
mov
and
and
out
hlt
stos
or
movs
out
dec
jp
loopne
fadd
add
movs
pop
ror
xor
(bad)
stc
fsqrt
sbb
aam
xor
movs
jo
fdivp
sbb
pop
popa
in
arpl
mov
add
pop
sub
imul
movs
push
ror
sub
out
outs
repz
mov
jmp
in
test
cmc
mov
mov
dec
jp
aam
xor
jge
xor
xchg
mov
popa
cmc
je
ins
in
or
pop
call
pop
add
popa
pusha
xchg
ins
adc
inc
aad
jl
lods
jno
mov
call
ins
inc
les
and
jp
aad
xchg
sub
repnz
stos
pop
and
add
aaa
aas
mov
das
jno
sbb
mov
loop
jo
aaa
sbb
xlat
pop
jp
pop
add
push
(bad)
imul
add
lahf
ficomp
inc
aaa
loopne
cmp
lea
add
sub
mov
inc
sbb
test
xor
sub
add
mov
sbb
adc
mov
mov
test
xlat
mov
or
xor
dec
loop
(bad)
stos
mov
dec
and
scas
inc
fsub
mov
leave
(bad)
sti
cli
enter
loope
xor
mov
nop
clc
mov
push
(bad)
test
sub
call
mov
shl
popa
add
inc
add
or
aas
mov
sbb
mov
sbb
jl
adc
xor
imul
and
push
rcl
sub
mov
inc
ds
jns
rcl
data16
and
add
into
mov
sbb
mov
push
jo
pop
das
cmps
lods
cmp
push
dec
int
lock
sar
cs
jnp
in
int
cmp
mov
and
pop
sbb
retf
dec
pop
and
mov
dec
jb
cmp
test
pop
pop
jbe
in
je
mov
mov
add
test
and
jb
sbb
out
mov
mov
xchg
and
xchg
imul
test
mov
mov
xchg
xor
sti
and
icebp
mov
ja
out
mov
ins
mov
cdq
push
retf
(bad)
mov
les
pop
les
push
pop
push
call
mov
loop
or
shr
cmps
mov
call
pop
cmp
sar
and
mov
rcr
sti
ja
push
dec
fsubp
and
push
daa
in
push
call
cmp
out
in
add
pop
adc
mov
imul
jmp
cs
jg
fld
jmp
sub
and
dec
xchg
leave
inc
xor
inc
scas
inc
imul
test
(bad)
rep
add
out
shl
mov
adc
mov
push
pushf
push
arpl
pop
addr16
add
inc
popf
dec
das
out
cwde
rol
call
pop
or
xor
ja
inc
and
mov
inc
aaa
int
imul
jmp
xlat
cld
and
cli
sbb
dec
mov
imul
repz
(bad)
in
push
mov
inc
push
mov
and
cs
push
push
pushfw
fldenv
mov
jle
push
fimul
sti
stos
mov
push
inc
push
xchg
push
ss
mov
push
out
pop
sbb
jo
xchg
in
ret
lods
sbb
dec
lods
shl
pop
dec
and
shl
mov
mov
pop
pop
add
and
test
(bad)
mov
jmp
sbb
stos
jg
fnsave
leave
push
cdq
pop
sbb
push
sub
into
dec
sub
shr
fucompp
dec
inc
rcr
out
shl
test
or
xor
cmps
sti
loope
int3
cld
xlat
push
sahf
jle
arpl
bound
xchg
xchg
sub
mov
mov
add
xchg
xor
push
ret
and
mov
lahf
ret
gs
dec
call
pushf
iret
mov
jle
retf
dec
and
addr16
mov
jecxz
dec
fld
adc
loop
push
loopne
or
adc
pop
or
add
jae
outs
or
cmc
add
adc
scas
adc
mov
(bad)
or
push
cmps
sub
add
cmps
inc
fild
mov
loop
dec
mov
sbb
pop
pop
test
lea
sbb
add
fwait
xchg
outs
xor
and
dec
xchg
jmp
or
and
es
and
mov
lds
or
ins
sbb
pop
jmp
ret
jmp
mov
cmp
mov
sub
mov
and
push
imul
ret
adc
sub
dec
pop
add
jp
mov
mov
mov
xchg
test
xor
enter
dec
push
jno
repz
cmps
stc
loope
push
pop
cmp
shl
push
in
jmp
fimul
push
and
xchg
dec
hlt
mov
ds
mov
push
les
fcom
mov
test
in
and
cld
xchg
mov
sbb
pusha
ins
dec
imul
(bad)
cli
loopne
push
mov
xchg
push
pop
push
cmp
lods
adc
mov
das
sub
bound
fst
ins
call
jns
cmps
aad
cmp
sar
mov
repnz
inc
jge
movs
pop
in
call
mov
rcr
lahf
mov
loope
and
inc
xor
inc
or
cmp
jg
das
mov
movs
cli
cwde
mov
pop
sbb
mov
jmp
shr
xor
or
and
sub
mov
jnp
aam
jg
loope
mov
xchg
pop
inc
dec
add
aam
das
xor
xor
ret
jo
pop
xchg
ss
or
test
inc
dec
pop
shr
fcomp
lahf
fs
shl
mov
je
or
mov
test
and
out
movlhps
cmp
xor
pop
test
sub
xchg
pop
mov
mov
adc
test
add
lods
mov
mov
lea
add
imul
imul
popa
inc
push
(bad)
into
data16
dec
and
sahf
mov
cmp
mov
(bad)
out
jmp
in
push
mov
fld
push
add
adc
aad
inc
and
test
in
fdiv
push
pop
rol
sub
sub
jmp
int3
xchg
and
in
ins
stos
sub
repz
pop
jge
stc
ins
pop
push
sbb
push
push
xchg
ss
jecxz
ins
or
lea
or
and
add
scas
push
retf
pop
ja
(bad)
push
mov
add
aam
mov
jb
test
cmp
fwait
ds
pop
cmp
ins
sar
stos
xchg
dec
nop
lea
jmp
paddusb
ret
test
call
add
mov
in
cmp
sbb
(bad)
into
sbb
cmp
jae
pop
mov
ins
jp
outs
in
inc
iret
je
or
lock
push
outs
fiadd
lea
mov
iret
xchg
xchg
mov
add
pop
push
cmp
in
jecxz
stc
test
dec
or
mov
out
push
push
xchg
scas
and
jns
fidiv
adc
mov
daa
int3
mov
push
into
not
xchg
imul
jbe
push
pop
js
lea
popf
mov
add
popf
inc
ret
mov
xchg
fild
mov
push
test
test
dec
das
call
icebp
call
cld
pop
leave
shr
stc
stc
sub
rol
push
mov
jecxz
fwait
cmp
sub
mov
xor
call
add
jae
dec
fdiv
xchg
and
lds
ja
sub
mov
lods
pop
mov
push
sub
or
xchg
xchg
jmp
sbb
iret
outs
pop
sub
dec
popa
inc
inc
mov
leave
jp
mov
push
out
push
mul
or
fwait
jnp
call
push
inc
xor
cwde
adc
xor
loope
add
jg
cmc
mov
aam
daa
clc
pop
or
dec
dec
xor
call
cwde
ja
and
pop
mov
lods
xor
into
in
mov
xchg
mov
or
test
add
repz
adc
inc
scas
js
je
ins
xchg
cdq
jae
fisttp
jle
(bad)
pop
mov
inc
dec
mov
cmp
mov
push
add
xchg
call
inc
xchg
and
test
or
add
sub
dec
jmp
jmp
gs
mov
in
mov
push
sbb
push
ds
dec
push
cmc
mov
mov
and
xchg
adc
adc
rcl
sub
cmp
jecxz
pop
stc
push
mov
pushf
pop
in
outs
push
daa
in
test
pop
popa
xor
arpl
xor
mov
pusha
outs
pop
test
push
xchg
jle
pop
inc
inc
dec
in
push
mov
scas
or
ret
push
es
fcom
sbb
mov
mov
loopne
mov
adc
(bad)
cmps
push
stc
jo
pop
xchg
scas
inc
pop
mov
xor
or
xor
pop
arpl
ficomp
sbb
loope
cmp
ficom
lods
call
pop
sub
test
cld
pop
outs
loop
pop
lods
mov
xor
mov
adc
aas
into
pop
test
call
je
adc
sub
ret
sbb
(bad)
addr16
jne
stos
xchg
lods
mov
jle
adc
inc
fldcw
xchg
icebp
cld
sub
outs
mov
xor
ds
out
adc
out
sub
lds
xchg
repnz
mov
(bad)
adc
mov
sti
push
jp
ficomp
dec
daa
xchg
mov
and
(bad)
cmp
sbb
add
mov
mov
xchg
nop
mov
pop
xchg
push
int
stos
or
enter
arpl
loopne
(bad)
mov
sbb
mov
or
xlat
fnsave
(bad)
cmc
shl
imul
loope
mov
jp
mov
cdq
popa
fimul
mov
cmp
lods
sahf
aam
xchg
push
psrld
adc
jle
add
std
jge
fidivr
lock
cdq
dec
push
adc
xchg
mov
pop
pop
adc
pusha
xlat
scas
sub
and
and
mov
pop
cwde
mov
int
into
std
xchg
inc
fstp
iret
cmp
enter
jb
sbb
mov
xor
jb
pop
into
jg
jmp
mov
push
xor
push
sti
fisub
dec
cmp
and
mov
cld
mov
pop
xlat
test
mov
retf
fs
add
gs
xchg
test
fsubr
movs
fst
rcl
pop
aam
sbb
jno
sbb
adc
loop
call
jne
cli
rcr
daa
or
movs
repz
fld
or
and
pop
in
sbb
mov
xchg
mov
mov
mov
jg
iret
or
icebp
int
mov
mov
int
lods
out
je
sub
bnd
int
inc
xchg
jb
xchg
and
mov
or
ins
les
lds
fstp
fs
pop
les
out
ret
push
scas
add
dec
ret
cld
mov
leave
jne
and
and
stos
into
call
adc
pushf
test
adc
inc
dec
inc
cmps
push
xor
lahf
add
sub
sahf
pop
adc
ds
sahf
stos
aam
sbb
mov
mov
xchg
cmps
or
cmp
pop
clc
jge
and
cmp
popa
push
outs
push
sbb
jecxz
repnz
test
push
or
xchg
test
cdq
pop
pusha
cmp
cmps
sub
mov
movs
sbb
stos
addr16
fld
xchg
pop
xlat
and
jg
xor
popa
sbb
cdq
ret
nop
mov
push
cmp
pop
(bad)
mov
cld
mov
outs
jge
add
xor
cmc
push
popa
push
repz
imul
hlt
dec
xchg
dec
mov
iret
ficomp
inc
stos
shl
push
jo
inc
sti
repz
jmp
popf
or
loopne
xor
pop
aad
jo
js
loopne
xchg
lock
lea
aam
sti
mov
jmp
adc
jae
pop
dec
ins
in
retf
test
data16
je
xchg
ja
clc
call
call
sub
dec
add
pop
jp
mov
aad
dec
(bad)
fisubr
sbb
sbb
adc
into
cmp
hlt
jmp
mov
dec
add
out
mov
or
cwde
cmc
mov
dec
dec
mov
pop
mov
sub
dec
sbb
cmp
ret
and
test
sub
lods
dec
in
ret
jmp
fdiv
mov
add
icebp
mov
dec
call
lds
push
movs
dec
jbe
adc
ret
call
cmp
test
fadd
popf
pop
mov
adc
adc
cmp
mov
int
pop
mov
popf
pop
cmps
(bad)
leave
pop
out
dec
and
popf
pop
retf
pusha
push
inc
mov
pop
xchg
lods
jb
inc
or
jnp
enter
mov
cmp
sub
clc
sbb
popf
mov
sbb
mov
retf
adc
stos
jmp
ss
inc
dec
test
and
xchg
dec
adc
fdivr
cmp
stc
int3
cmps
jae
push
mov
mov
into
xchg
xchg
cmps
lods
xor
retf
sbb
mov
pop
xor
aas
ffree
jg
adc
ja
(bad)
mov
fcmovbe
stos
movs
retf
xor
mov
xor
test
pop
adc
mov
ds
push
and
cmp
push
data16
in
ror
clc
jns
dec
cmps
neg
outs
push
xchg
pop
addr16
outs
into
cmp
call
aad
inc
jo
or
push
add
fistp
call
push
xchg
or
aam
lods
imul
into
inc
ss
fdiv
nop
repnz
icebp
jmp
ss
call
out
or
shr
call
jmp
mov
mov
cli
in
paddq
dec
adc
(bad)
dec
movs
stos
mov
xchg
or
mov
sbb
jle
shl
mov
ins
(bad)
shl
lods
cmp
mov
mov
dec
cmps
in
aam
retf
push
aad
fst
shl
into
xlat
iret
scas
aad
cmp
scas
mov
into
mov
lods
sbb
mov
or
inc
lahf
jge
rcr
popa
inc
xor
pop
inc
push
mov
sub
push
inc
stc
jae
inc
mov
cld
dec
mov
dec
call
adc
sub
dec
not
add
sbb
or
add
push
push
xchg
retf
stos
push
pushf
and
not
cmp
and
mov
adc
stos
cli
pop
ds
scas
rcr
fnstsw
aaa
mov
sub
scas
imul
cmp
je
cs
test
repz
mov
inc
test
jb
mov
push
push
mov
fld
test
out
inc
(bad)
in
sub
pop
cmps
fbstp
int
repnz
jmp
pop
add
ins
les
(bad)
in
fdivr
pop
add
cmc
out
mov
adc
js
push
push
ds
popf
imul
inc
outs
xchg
jno
fsubr
mov
dec
xor
rcr
cmp
loope
mov
fadd
jg
jb
mov
cmps
out
retf
inc
enter
pop
adc
in
push
xor
pop
cmp
retf
pop
push
bound
mov
xor
xchg
cmps
add
cmps
out
pop
out
out
push
repnz
mov
clc
mov
sub
or
jge
xchg
ja
mov
gs
push
jae
cmp
(bad)
mov
pop
push
adc
add
imul
movs
pop
(bad)
(bad)
cmp
(bad)
adc
loope
das
xor
mov
movs
jne
hlt
btc
adc
sub
add
sbb
xor
stos
jns
jecxz
mov
sbb
or
cmp
mov
imul
xor
cli
call
xchg
stos
push
aad
push
mov
ror
sti
arpl
mov
cdq
icebp
lahf
shl
les
sbb
mov
lods
mov
movs
inc
xchg
push
xor
dec
push
(bad)
es
stc
enter
ins
xchg
inc
dec
fimul
mov
jl
inc
jp
cmc
jbe
jp
inc
mov
mov
shl
cmp
adc
inc
lock
jl
in
(bad)
adc
xor
mov
inc
ins
test
inc
or
add
fnstsw
pop
cdq
sbb
cdq
mov
scas
enter
cmp
cmp
mov
sub
dec
push
push
sub
test
or
or
mov
mov
cmps
js
retf
int
inc
lock
scas
ins
cmp
push
(bad)
fild
xor
sub
mov
cld
xor
push
adc
or
xor
test
sub
or
push
mov
adc
ret
addr16
xchg
shr
cmp
and
pop
add
stos
idiv
les
xor
xor
retf
(bad)
shr
pop
loop
rcl
scas
rol
jne
and
mov
jnp
clc
mov
push
aam
iret
cwde
xchg
or
and
sub
mov
xchg
push
jbe
mov
sub
mov
aam
pop
icebp
jp
mov
in
lds
rcr
xlat
and
sub
enter
ret
addr16
imul
ret
mov
test
cmp
test
rcr
outs
aam
jle
fadd
jns
adc
jns
ins
add
call
aad
cwde
add
dec
arpl
daa
inc
call
outs
sbb
iret
push
push
shl
ds
movs
sub
imul
push
cwde
shl
outs
sti
add
lock
mov
jmp
mov
je
push
retf
aas
push
mov
popa
mov
lock
(bad)
cwde
popa
cwde
test
sub
adc
or
test
jl
pushf
xchg
loop
dec
dec
mov
aad
and
pop
jae
xchg
dec
and
outs
mov
enter
inc
mov
movs
out
jns
pop
or
je
push
pop
jmp
mov
push
jl
sbb
mov
pushf
sbb
pop
icebp
inc
push
(bad)
movs
scas
xchg
jp
loopne
test
jl
mov
jp
xlat
push
or
lods
ret
out
or
rcr
test
data16
mov
aas
fdiv
xchg
daa
sti
dec
mov
dec
mov
mov
sub
and
or
in
push
in
or
out
pop
and
stos
mov
cwde
repnz
inc
mov
stc
cmp
mov
sbb
rcl
repz
pop
inc
xor
repz
movs
sub
gs
sbb
mov
pop
iret
repnz
sub
pop
pop
sbb
and
jns
adc
lods
fwait
aam
xor
aaa
test
in
movs
pop
mov
inc
push
and
dec
cdq
stos
ret
ficom
in
shl
cmp
pop
jno
mov
rcl
xchg
sbb
stos
and
sub
shr
test
imul
sub
pop
std
popf
push
loop
push
mov
or
mov
sbb
lock
mov
(bad)
rol
out
and
push
jg
mov
jne
xor
clc
mov
cmps
or
adc
test
push
or
repz
dec
jecxz
in
(bad)
mov
sbb
cmps
cli
mov
sbb
rol
and
push
or
inc
gs
sub
repz
xchg
jne
fidiv
inc
pushf
xor
test
push
sub
cdq
lea
mov
add
push
pushf
retf
in
xchg
bound
(bad)
lock
sbb
movs
out
cmps
or
das
loope
dec
mov
adc
(bad)
pop
ds
mov
scas
xchg
inc
inc
call
push
cmp
and
out
mov
sahf
hlt
lods
cdq
add
xchg
jecxz
inc
add
in
(bad)
add
inc
dec
mov
mov
cs
pop
call
inc
or
mov
cld
inc
loope
mov
xchg
pop
mov
mov
enter
ja
js
lahf
loope
mov
mov
(bad)
loopne
in
jmp
mov
cmp
mov
enter
pushaw
xchg
and
imul
je
sbb
(bad)
into
outs
inc
paddq
pop
ficomp
retf
mov
mov
mov
stos
mov
xchg
sub
adc
les
mov
mov
or
add
aam
ret
imul
adc
sbb
loope
inc
pop
xor
jno
push
imul
adc
test
sbb
push
cmp
push
or
outs
jb
ss
adc
mov
fdiv
push
out
cmps
and
into
xchg
ja
movs
xchg
mov
aad
scas
in
out
mov
cli
mov
or
jle
sub
or
sub
xor
or
and
iret
jle
addr16
dec
pop
ds
mov
adc
stc
fisttp
xchg
mov
xor
cmp
mov
jmp
xchg
out
shl
in
stos
add
cmp
js
popf
or
outs
xor
test
test
int3
mov
pop
jno
out
aas
mov
ror
rol
in
jnp
ret
(bad)
dec
int3
adc
test
jmp
adc
or
and
fsub
or
lods
shr
repz
and
out
push
xlat
cwde
cmps
ss
xlat
pop
shl
mov
dec
push
iret
aad
dec
xchg
(bad)
nop
jns
jno
mov
mov
cmps
adc
in
sub
or
fadd
pop
into
cmp
loope
ret
pushf
mov
repz
cmp
imul
adc
outs
call
lods
jp
scas
mov
add
lahf
mov
mov
mov
rcr
jmp
(bad)
xchg
sbb
idiv
and
into
mov
call
lock
adc
cmps
xor
and
mov
das
adc
push
xchg
les
inc
push
xchg
lds
mov
imul
ins
inc
mov
nop
into
pop
lds
clc
or
inc
sbb
fistp
dec
xchg
fs
xor
lds
pusha
bound
rcr
sub
mov
pop
mov
in
mov
pop
cmps
int
sti
into
aaa
pop
daa
cmps
mov
add
pop
leave
repz
je
xchg
xor
out
mov
adc
pop
adc
sar
icebp
jne
mov
(bad)
sbb
mov
leave
and
xchg
ja
jg
push
push
ret
adc
test
xchg
imul
(bad)
lods
mov
loope
add
cmp
imul
mul
lods
push
jmp
jmp
call
sub
loop
sbb
and
sbb
cmp
dec
inc
mov
and
sub
out
aaa
or
dec
ins
xchg
rcr
loope
adc
push
ret
add
pop
and
pop
inc
rol
ror
lods
fs
adc
mov
mov
out
mov
loop
pusha
jg
pop
lds
xor
cmp
loop
pop
test
adc
pop
mov
mov
jns
adc
hlt
xor
out
mov
cs
rol
ss
(bad)
pop
addr16
(bad)
jae
dec
pop
sub
inc
inc
(bad)
jmp
jae
nop
call
sub
shl
addr16
jns
(bad)
loop
dec
in
fsub
dec
pop
push
out
inc
cli
jb
cmp
sbb
mov
xchg
dec
cmp
scas
xor
div
mov
sahf
sub
inc
xor
add
aas
lods
pop
pop
lods
sub
mov
ins
arpl
lea
jle
dec
sub
ins
adc
jno
dec
out
pushf
inc
pushf
das
and
aaa
pusha
mov
xchg
xchg
addr16
dec
mov
aaa
cmp
rcl
pop
mov
jnp
nop
mov
fsub
add
xchg
rcl
fiadd
dec
and
inc
mov
std
cwde
dec
jo
adc
out
test
or
pop
and
cmp
int3
scas
jbe
rcl
mov
push
pop
ins
pop
and
mov
and
cmp
fidivr
cs
(bad)
sti
xlat
stos
cmc
sti
lahf
mov
out
call
mul
dec
lock
fist
sbb
cmp
jnp
inc
push
mov
adc
in
and
sbb
dec
dec
cmp
push
sub
mov
or
in
dec
adc
ds
pop
jl
mov
push
test
dec
cdq
sbb
add
ret
and
jle
pop
sbb
fmulp
xor
pop
add
cmp
mov
enter
mov
rcr
out
call
mov
mov
fisubr
jmp
jmp
jns
rep
inc
fisubr
loope
sub
dec
test
cmps
and
(bad)
out
push
pop
mov
(bad)
mul
mov
xchg
scas
call
repz
fist
xchg
jp
jne
fsub
push
sub
push
sub
cmp
sbb
int3
out
movs
bswap
mov
mov
push
fs
aad
inc
int3
retf
push
(bad)
enter
jns
in
mov
(bad)
popa
pushf
dec
int3
aas
imul
(bad)
or
jo
add
mov
(bad)
xlat
pop
stc
sub
fcomp
pop
pop
(bad)
jmp
add
inc
jg
add
jmp
xlat
loopne
mov
jge
mov
jae
and
inc
and
pop
adc
popa
cmp
std
and
shr
inc
xlat
push
jnp
loop
and
test
icebp
repz
add
rol
mul
inc
xor
adc
repnz
mov
pusha
mov
lods
sub
mov
adc
lock
xor
ss
dec
and
push
push
mov
jae
call
cmp
dec
loop
add
push
iret
daa
aaa
shr
and
retf
in
(bad)
stc
daa
fs
fadd
inc
push
imul
mov
or
xchg
xchg
dec
mov
mov
jp
mov
xchg
stc
dec
jp
(bad)
push
repz
mov
aas
jbe
inc
mov
mov
mov
cli
(bad)
sbb
jecxz
cmc
dec
pusha
mov
mov
mov
rcr
in
push
push
ja
cli
push
das
into
test
fucomip
xchg
retf
pop
out
mov
add
test
inc
xchg
push
inc
add
push
rol
jmp
into
int
rcr
out
inc
loop
(bad)
and
jp
sub
pushf
retf
sbb
or
into
inc
or
mov
add
or
aas
and
xchg
and
xchg
fs
pushf
pop
dec
jo
mov
jbe
jnp
hlt
leave
scas
xor
shl
xchg
in
inc
jmp
test
xor
sub
test
mov
es
out
icebp
pop
mov
cmp
ror
cs
test
inc
pop
jb
movs
xor
fisubr
hlt
inc
pop
call
in
test
(bad)
sahf
das
loope
mov
add
aam
(bad)
add
sub
das
or
aam
and
mov
(bad)
cwde
(bad)
lea
movs
daa
dec
or
or
push
out
xchg
cld
jb
jae
push
fxch
lea
ins
jmp
xchg
cmp
sub
mov
pop
jecxz
dec
(bad)
pop
stc
bnd
fcomp
xor
mov
hlt
and
into
(bad)
jmp
sbb
pushf
push
mov
(bad)
out
popa
fist
cmc
dec
cmp
(bad)
mov
mov
mov
cmp
clc
test
cmp
sub
test
mov
js
push
js
sbb
neg
mov
mov
jbe
or
mov
popf
push
in
cmp
pause
jo
ret
sar
cmp
cmp
arpl
pop
test
mov
(bad)
xchg
int3
rol
mov
mov
je
sbb
jbe
mov
cmp
imul
jnp
(bad)
push
jge
aaa
jmp
mov
test
out
xchg
shl
sbb
mov
imul
(bad)
iret
(bad)
repnz
cmp
lahf
xor
pop
mov
sti
sbb
scas
mov
xchg
xchg
popa
jl
call
stos
mov
in
jnp
imul
js
sbb
loopne
pop
pop
jb
scas
mov
sti
ror
push
in
pop
and
sbb
push
sub
bound
mov
adc
and
iret
cmp
mov
sub
xor
mov
outs
or
aam
test
outs
fs
dec
mov
adc
pop
and
mov
push
fcom
mov
(bad)
shl
call
cmps
out
or
dec
imul
lock
xchg
push
and
sahf
pop
xchg
sbb
(bad)
out
das
xor
mov
scas
pushf
sub
(bad)
fisubr
bound
mov
in
loope
js
add
jmp
cmp
rol
aas
pop
and
sub
push
and
outs
aaa
rol
pop
in
sti
add
adc
outs
inc
mov
in
xchg
fstp
jno
sub
test
inc
ret
stos
cdq
adc
les
and
cmps
gs
rcl
fmul
and
setg
(bad)
mov
shl
adc
aad
gs
mov
movs
mov
fs
cwde
ins
mov
sub
lahf
rcl
int3
or
stc
outs
sub
fist
and
ret
xchg
pop
jbe
and
or
imul
ss
leave
dec
mov
sbb
xchg
cs
cmp
test
inc
icebp
jno
cmc
or
cmp
xlat
xchg
mov
mov
fwait
mov
push
xchg
add
(bad)
fstp
adc
sbb
add
pop
sbb
loopne
jnp
add
bound
push
xchg
je
push
xor
inc
dec
cmc
test
mov
jne
pop
sub
fstp
cmc
jg
aaa
lods
pop
mov
sub
outs
push
push
jg
lea
rcr
aad
mov
scas
mov
fld
repz
sub
jbe
jmp
popf
push
jle
inc
sub
sub
push
call
das
aas
cs
inc
fld
or
xchg
fmul
in
and
and
jae
mov
and
pushf
sahf
mov
xor
stc
repz
jle
push
mov
ror
fs
movs
pop
mov
out
inc
cdq
cmp
daa
dec
sbb
cmps
std
sbb
popa
cmps
retf
or
or
sub
or
ins
mov
loopne
call
int
lea
mov
pop
stc
mov
test
mov
sub
adc
push
pop
push
pop
cli
into
popa
sub
mov
retf
cli
jbe
xchg
push
sub
test
neg
jmp
xchg
inc
xlat
es
jbe
add
test
int
mov
out
mov
jnp
adc
mov
ficom
in
xchg
push
dec
inc
push
aam
xor
outs
dec
popf
push
cmp
gs
ds
out
mov
gs
jge
outs
pop
adc
outs
movs
inc
mov
mov
add
mov
jb
ss
shl
pop
sbb
adc
dec
dec
xchg
pop
pop
out
shr
and
push
rcr
mov
inc
adc
or
xchg
pushf
adc
mov
imul
lods
inc
imul
jne
push
jnp
inc
jle
sbb
and
xchg
push
inc
ror
push
sahf
rcr
adc
fcomp
push
mov
mov
dec
pcmpgtd
dec
shr
dec
out
out
jmp
je
out
enter
outs
and
mov
inc
adc
not
jnp
push
pop
jl
aad
mov
dec
pop
or
add
add
fsub
add
fmul
lods
cld
fcmovb
push
inc
xchg
das
adc
ror
adc
aad
or
mov
jno
int
mov
push
icebp
sbb
mov
fucomi
in
pop
push
or
aas
fmul
push
add
sub
xchg
push
test
(bad)
push
aas
add
xlat
push
popf
cmps
movs
stos
(bad)
sbb
arpl
retf
or
sub
push
cs
in
(bad)
cmc
dec
(bad)
ins
js
test
jg
pushf
xchg
fld
je
or
xchg
sar
mov
sub
inc
lods
xchg
sbb
int3
fwait
std
cs
rcl
mov
daa
das
fld
jg
leave
cmp
fsub
test
xor
fwait
ins
jmp
cmp
cmp
cmp
or
cmp
stos
and
jnp
in
call
imul
out
hlt
test
or
lods
mov
fiadd
mov
stc
enter
push
call
cmp
gs
adc
in
cmp
jnp
dec
sbb
scas
ds
dec
jl
das
shl
sbb
shl
jl
hlt
popa
mov
cmps
sub
sub
mov
jnp
cmp
push
pop
add
bound
and
and
sti
jl
je
mov
sar
mov
in
xchg
cdq
stc
in
and
or
pop
mov
std
pusha
dec
lods
aam
jmp
jae
jmp
arpl
sub
inc
sub
js
imul
cmp
adc
dec
sub
rcr
cmp
adc
shr
sub
push
xor
mov
add
sub
add
and
fnstcw
mov
int3
icebp
retf
pop
retf
fdiv
push
sub
sub
das
add
adc
in
xlat
jae
cmps
mov
dec
add
daa
mov
pop
xor
xchg
adc
popf
push
add
stc
push
stos
fadd
mov
mov
mov
pop
scas
jmp
jge
lds
jno
ins
mov
cmp
mov
test
pop
cmp
and
jg
push
out
dec
mov
imul
mov
aam
sub
mov
out
fidiv
test
adc
push
iret
mov
ins
pushf
out
or
pop
push
mov
push
inc
enter
outs
leave
add
sar
jb
outs
sbb
dec
adc
add
imul
enter
mov
popf
or
and
pushf
fbstp
or
lock
add
into
sbb
retf
sbb
push
movs
mov
jns
test
mov
push
adc
pop
inc
xor
call
inc
repnz
scas
je
add
pop
mov
jp
hlt
push
cmp
jl
scas
jae
add
and
popa
lods
in
cmp
xor
push
std
xchg
xor
test
into
pop
sub
xor
fidivr
lds
iret
inc
add
adc
ret
or
add
cmps
int
lock
jnp
push
sbb
add
fidivr
lods
xor
dec
(bad)
sub
mov
pop
dec
nop
mov
sub
jae
loope
test
mov
xchg
adc
push
mov
inc
add
add
dec
clc
jl
add
inc
leave
mov
into
mov
call
or
xchg
shl
(bad)
and
pop
xor
nop
fisttp
push
mov
dec
stc
add
xor
les
xor
inc
movs
mov
lods
cs
mov
ins
(bad)
scas
inc
push
repnz
cmp
sbb
test
clc
push
imul
push
ins
mov
aaa
cmps
stos
xor
or
ja
fmul
test
bound
mov
cmp
jg
je
dec
push
rcl
mov
jl
aam
sub
test
dec
ins
jae
mov
or
dec
fwait
jns
xor
adc
jg
mov
cmp
retf
add
sbb
push
sub
into
cld
pop
fild
icebp
mov
fdivr
inc
adc
int
popf
std
pop
jge
jno
fld
add
mov
cmp
(bad)
push
clc
mov
pop
jnp
mov
bound
popf
inc
push
mov
(bad)
nop
(bad)
pop
adc
dec
shr
pop
in
sub
sbb
mov
sub
fild
or
and
dec
push
mov
or
xor
push
(bad)
fadd
pop
pop
or
mov
jmp
adc
test
mov
mov
sbb
xchg
out
mov
arpl
pop
and
sahf
ret
xchg
sbb
out
push
dec
adc
fisub
xor
arpl
fisttp
or
xor
leave
adc
cmp
gs
pop
adc
test
and
pop
mov
and
dec
sub
fnstcw
dec
bound
mov
enter
jnp
inc
je
and
int3
cmp
cmp
stos
pop
data16
jns
dec
jp
enter
jl
fisub
xchg
pop
add
(bad)
mov
or
jmp
jae
push
push
jnp
xor
mov
fmul
mov
pop
jbe
sub
aam
jge
xchg
pop
sub
repnz
dec
jl
cmp
mov
pusha
and
push
xchg
cmp
call
xchg
xor
mov
mov
xor
call
loope
inc
sar
mov
mov
ins
or
inc
mov
mov
test
les
fimul
mov
dec
add
jb
fwait
mov
mov
imul
cmp
push
sub
ret
sar
test
retf
loop
lock
inc
adc
push
ficom
cmp
cmp
push
xchg
enter
mov
pop
test
fwait
jns
stc
fs
scas
retf
mov
ss
or
xor
cld
cmp
int3
push
hlt
adc
sub
push
in
add
jecxz
dec
nop
cdq
mov
ror
pop
stos
inc
dec
adc
pop
cmps
cmps
jmp
mov
push
addr16
les
dec
and
cli
stc
pop
fcom
rol
mov
ret
push
imul
inc
push
jle
jae
or
pop
lods
jg
ret
pop
repnz
add
push
inc
and
ficomp
(bad)
ins
mov
pushf
mov
jo
inc
mov
and
stos
mov
repz
iret
pop
hlt
fsub
sahf
xor
es
out
pop
cs
add
stos
fild
cmp
pop
cld
fnsave
movs
jmp
and
mov
xchg
mov
aaa
and
repz
sbb
cmp
sar
nop
lods
dec
cmp
ret
cmp
jbe
test
test
jmp
lds
xor
sub
sbb
imul
je
mov
mov
es
ret
jns
dec
cmp
mov
mul
xchg
push
pop
mov
push
repz
retf
fisub
add
sbb
outs
mov
enter
stos
aaa
lods
sbb
ds
jbe
in
push
iret
sahf
out
movs
push
cmps
shr
mov
xor
xor
inc
cmp
les
cmp
ins
iret
shl
xchg
pop
xchg
inc
jae
les
or
jb
pop
push
iret
push
jg
pop
xchg
cmp
sub
and
adc
or
fbstp
nop
imul
and
xor
in
xchg
push
cmps
mov
and
jp
pop
mov
cli
xor
test
std
cmp
cmps
jo
xor
push
jle
lock
cmc
(bad)
jmp
mov
jmp
add
add
mov
push
push
or
fdiv
sub
sub
jbe
mov
xor
cmp
or
icebp
add
cdq
cmp
mov
(bad)
push
push
test
cmp
push
mov
xchg
sbb
xchg
cmps
test
ret
mov
sti
sub
cmp
mov
xchg
pop
mov
mov
ret
div
rol
push
rcr
mov
or
add
jnp
cmp
xchg
std
fist
push
pushf
(bad)
push
or
addr16
fsub
aad
aaa
push
retf
loopne
cmps
adc
(bad)
idiv
(bad)
(bad)
push
inc
xchg
es
xor
test
shl
cmp
sahf
mov
add
dec
imul
sub
call
leave
cwde
pusha
fs
dec
popf
daa
push
std
mov
shl
inc
cli
and
mov
jb
cli
int
xchg
shr
mov
enter
pop
dec
mov
adc
or
ja
add
stos
xchg
adc
or
jae
adc
(bad)
stos
enter
and
mov
push
mov
add
push
dec
addr16
in
pop
shl
sub
pusha
in
pop
neg
pusha
mov
jmp
clc
lea
mov
xchg
dec
pop
sahf
inc
push
sar
or
push
aad
mov
add
inc
sbb
in
add
mov
adc
cmp
pop
mov
mov
int3
fsub
mov
inc
or
or
scas
push
push
or
dec
mov
test
popf
lds
or
fwait
pop
ror
sub
or
xchg
adc
jo
(bad)
fnstenv
(bad)
cmp
mov
(bad)
adc
outs
xchg
sub
test
push
stc
shl
fimul
push
adc
jge
adc
adc
lahf
fcomp
lods
ins
mov
ins
xchg
push
pop
dec
adc
or
cmp
inc
push
scas
mov
or
(bad)
test
dec
test
test
adc
xchg
aas
xor
mov
(bad)
jge
or
inc
jge
or
les
sub
sbb
scas
aad
xor
xor
push
sub
(bad)
shr
push
sub
in
cli
xchg
xchg
pop
mov
inc
jmp
push
ins
mov
dec
mov
and
outs
sbb
and
mov
into
arpl
icebp
test
pop
mov
out
dec
add
sub
xchg
test
es
test
loopne
xchg
test
ds
fdiv
cmp
call
adc
push
add
ss
adc
shr
adc
cmc
test
cwde
add
and
dec
daa
retf
aas
ror
retf
lea
adc
stos
in
scas
mov
movs
daa
inc
jo
rcr
hlt
cmp
mov
mov
jno
pop
test
add
xchg
inc
out
sub
test
and
add
jo
test
cmp
add
adc
xlat
mov
sbb
ret
mov
dec
pop
cdq
aad
jp
popf
movs
aad
aad
aam
fsubp
inc
pop
cmp
inc
in
in
jb
lods
out
fwait
cmp
mov
sbb
(bad)
jg
cmp
dec
scas
and
sub
aas
movzx
(bad)
push
clc
pop
repz
push
shr
leave
js
pop
ror
jo
adc
sub
sub
jg
je
popa
adc
xchg
aam
xchg
stos
out
xchg
cli
cmc
cmp
pop
cmp
sub
out
push
add
movs
or
mov
and
adc
ins
in
add
aas
pop
call
sbb
xor
cmps
data16
sub
mov
xor
popa
mov
pop
out
cmp
lods
addr16
retf
jo
gs
test
cmps
dec
repnz
(bad)
mov
cld
test
idiv
pop
add
fsub
test
mov
stos
dec
outs
stc
fnsave
out
std
aaa
cmc
inc
cmp
or
mov
xor
pop
into
daa
das
(bad)
xchg
mov
xor
inc
pop
xor
pop
push
fist
std
push
jae
cmps
and
in
stc
mov
cmc
mov
adc
scas
jb
pop
add
aas
das
mov
push
add
cmp
dec
mov
push
adc
in
(bad)
lods
xor
sub
sbb
mov
(bad)
jne
stos
mov
cmp
gs
cwde
fwait
stos
mov
test
ret
hlt
mul
dec
push
sbb
ret
int
xor
dec
push
adc
adc
mov
jnp
pop
inc
leave
cld
and
retf
cmp
cmp
retf
icebp
out
jns
idiv
mov
test
std
into
cmps
test
sti
pop
inc
shr
jp
add
clc
jbe
mov
cmp
push
add
jnp
imul
dec
mov
pop
rcr
cmp
push
cmp
and
sahf
fwait
mov
or
enterw
test
leave
dec
xchg
push
je
mov
mov
adc
sbb
push
lods
mov
lds
add
ss
pop
das
xor
pop
call
mov
push
in
xchg
xchg
in
pop
jbe
xchg
add
pop
xor
push
and
(bad)
stos
popf
leave
adc
cli
inc
pop
add
lods
test
xor
icebp
inc
jle
repnz
xchg
lods
mov
sub
inc
xchg
(bad)
fild
pop
cwde
icebp
dec
loop
cmps
pop
push
ret
mov
add
repz
sbb
mov
xlat
xor
movs
ins
sbb
dec
inc
xchg
outs
(bad)
jmp
cmps
inc
jge
jo
repnz
scas
cs
xor
cmovp
in
test
inc
cwde
xor
mov
add
push
inc
inc
aaa
xchg
pop
cdq
cwde
pop
(bad)
push
in
stos
pop
pushf
mov
push
xor
nop
aas
outs
leave
push
xchg
adc
xchg
pop
sar
push
ficom
mov
mov
push
xlat
rcl
pop
jo
rcr
jbe
mov
rcl
arpl
ja
mov
lock
movs
mov
shr
div
mov
jp
imul
pop
popf
rcr
mov
cmp
cmc
inc
push
add
mov
test
pop
dec
add
push
stos
add
xchg
dec
push
jmp
pop
leave
mov
lds
mov
add
daa
mov
xor
pop
hlt
rcl
sbb
test
iret
stos
fnstsw
lds
push
add
pop
pop
mov
cwde
xlat
mov
add
dec
or
cmc
mov
xor
inc
or
adc
fucomp
push
add
xor
cmc
aam
pop
cmp
pop
rol
mov
repnz
aas
and
int3
gs
ds
dec
lahf
dec
or
xchg
push
jb
xchg
cli
sub
inc
push
xor
push
adc
or
mov
push
jg
push
aad
adc
mov
loope
fdiv
ret
push
pop
cmp
pusha
jns
mov
mov
dec
rcr
or
fcom
pop
dec
(bad)
es
in
dec
imul
dec
ss
(bad)
fwait
mov
mov
rcr
js
mov
xchg
jge
aad
dec
pop
or
jns
sbb
cmp
and
ins
fsub
dec
mov
cmp
xchg
adc
int3
dec
out
icebp
pop
xor
push
xchg
dec
call
fadd
sbb
jb
push
mov
lock
cmp
jbe
sub
movs
fstp
cmp
jbe
ja
icebp
data16
dec
or
jecxz
mov
aam
dec
loop
sahf
mul
bound
in
stos
mov
out
jmp
loopne
cmp
add
mov
mov
les
leave
mov
pop
xor
pop
push
adc
leave
sbb
xchg
and
xor
imul
call
dec
cwde
push
stos
inc
outs
lea
clc
sub
popa
movs
mov
cmp
sub
cmc
out
inc
xchg
loopne
inc
fwait
adc
xor
mov
inc
push
ret
mov
pop
int3
adc
ins
mov
call
jmp
fwait
mov
not
pop
pop
push
pop
aad
es
jl
sbb
jnp
(bad)
push
pop
mov
cmp
jno
fwait
test
mov
adc
jp
push
mov
call
outs
mov
pop
jmp
shl
(bad)
(bad)
adc
push
ins
adc
ss
outs
add
inc
ds
bound
lahf
(bad)
iret
sar
adc
and
ret
mov
cwde
jmp
movs
aas
xchg
xor
xchg
(bad)
pusha
cli
jmpw
movs
cli
and
sbb
add
jmp
aad
sub
out
or
sbb
ja
jle
sbb
mov
loopne
fld
fs
popa
cmp
iret
push
out
ins
les
(bad)
xor
mov
loopne
pop
jnp
push
ds
cli
fwait
add
push
out
in
sub
aam
scas
mov
out
into
push
xchg
jl
jecxz
(bad)
aaa
pop
mov
mov
pop
data16
pop
xor
mov
jmp
mov
xchg
dec
push
pop
mov
aas
call
mov
cwde
(bad)
loope
xchg
push
clc
jmp
mov
mov
cmp
retf
sahf
popa
adc
es
dec
iret
imul
je
ficom
in
add
sti
xchg
sbb
add
call
sar
mov
mov
mov
or
cmc
pop
xor
jbe
div
aas
pop
cmp
in
adc
sahf
ds
shr
lods
cmp
cld
jl
and
jg
push
adc
xchg
call
outs
adc
call
sti
dec
cmc
pop
mov
mov
cmp
xchg
push
sub
fwait
sub
xor
dec
push
fs
jbe
cmps
push
and
stos
(bad)
fsub
push
mov
call
mov
xlat
jae
(bad)
xchg
pushf
imul
pushf
js
repz
xor
pop
outs
ss
dec
movs
sub
data16
test
(bad)
sub
pop
lods
or
dec
adc
test
out
adc
mov
outs
outs
call
lahf
add
xchg
cmovnp
sub
stos
dec
cmps
in
mov
cli
sahf
gs
lock
fwait
ss
jl
(bad)
xor
push
sub
jl
clc
int3
add
fsubr
jbe
inc
shr
test
adc
cmp
inc
jmp
xor
fisubr
fild
jo
(bad)
imul
cmp
or
pushf
ret
aaa
scas
out
and
shr
leave
sub
or
or
adc
lods
int3
adc
pop
movs
int
test
leave
imul
rcl
inc
mov
repz
iret
inc
dec
inc
inc
fdiv
aad
shl
daa
jne
jo
cmp
mov
pop
cdq
push
sub
mov
inc
in
adc
mov
pop
xor
lea
sub
jbe
fmul
cld
mov
icebp
jp
mov
out
in
cdq
cli
shr
pop
out
add
stc
mov
add
fsub
dec
jbe
pop
jne
and
sbb
rcr
sbb
cld
jge
stos
cmp
inc
mov
fadd
xchg
xor
mov
jnp
dec
and
add
adc
je
pop
ds
sbb
jecxz
out
xchg
jns
inc
cli
dec
or
scas
in
int3
pop
and
in
adc
out
pop
fwait
pop
ds
lds
out
xor
and
aad
in
clc
(bad)
xor
pop
rcl
push
pushf
add
push
jo
fild
in
mov
pop
stos
into
sbb
add
shl
or
ins
dec
in
and
pushf
inc
retf
frstor
int3
mov
mov
jge
sub
movs
jmp
popa
std
jg
mov
inc
cmp
fimul
mov
mov
mov
pop
fstp
pop
popf
dec
jp
mov
jp
xchg
sti
loope
xchg
lds
mov
inc
dec
lahf
xor
js
push
fs
ror
fs
push
pop
xor
xor
(bad)
(bad)
pop
fldcw
mov
dec
adc
xor
not
or
mov
pop
cld
or
add
sub
jne
aam
cmp
mov
jmp
push
sahf
inc
das
cmp
and
ins
dec
jg
add
sub
hlt
jb
cmp
leave
int3
hlt
push
cmp
pusha
dec
or
data16
lods
dec
in
loop
ret
mov
js
int3
lock
imul
sub
jmp
lahf
cmp
call
dec
jo
and
xchg
lea
(bad)
call
lahf
ret
loop
sbb
loop
lods
(bad)
scas
pop
jae
test
movs
cmp
in
cld
push
cmps
inc
jg
mov
sbb
aaa
or
ja
jl
or
(bad)
fldenv
jmp
add
out
mov
gs
int3
pop
ret
aad
retf
push
pop
adc
jl
inc
push
fsubp
push
leave
add
pop
mov
mov
mov
fisttp
inc
add
sbb
fidivr
fisubr
out
mov
repz
or
stos
xchg
fs
mov
dec
int
xchg
es
sbb
push
call
cmp
mov
in
icebp
jb
mov
pop
test
cmp
outs
inc
(bad)
gs
hlt
push
inc
(bad)
push
add
and
retf
mov
xchg
xchg
add
dec
xor
mov
add
mov
mov
retf
test
mov
call
aad
int3
jns
pop
sbb
iret
cmc
jo
dec
out
xchg
repnz
outs
mov
jg
imul
fldenv
sbb
push
add
pop
mov
cmp
hlt
pop
adc
xor
ds
fbstp
xor
arpl
into
pop
aas
lods
xchg
int
out
stos
sub
nop
dec
mov
mov
dec
mov
add
ja
(bad)
(bad)
jnp
nop
pop
mov
cli
sub
adc
mov
call
push
lods
enter
mov
xchg
push
mov
or
push
xchg
in
push
or
push
aam
xor
jl
mov
scas
or
adc
xor
addr16
in
mov
adc
mov
xor
imul
or
cwde
cmp
(bad)
icebp
mov
push
mov
mov
push
xchg
mov
sbb
ds
(bad)
(bad)
fistp
retf
std
mov
clc
lods
jne
cmc
inc
adc
ror
test
(bad)
imul
mov
xchg
(bad)
stos
mov
sti
(bad)
dec
xchg
aaa
inc
ins
pop
xchg
mov
jae
test
mov
test
inc
xchg
(bad)
(bad)
sub
mov
and
mov
int3
std
xor
cs
cmp
mov
xchg
gs
dec
dec
fnstcw
mov
mov
(bad)
jecxz
stc
stc
test
(bad)
jecxz
mov
jns
lds
fisub
ds
dec
(bad)
cmc
jae
xchg
mov
sub
add
sbb
popf
dec
js
(bad)
push
xor
(bad)
jo
arpl
popf
cmps
or
in
fld
gs
push
jmp
xlat
and
data16
ins
das
xchg
push
sub
pop
ficom
loop
sub
mov
sub
std
sub
jmp
imul
mov
call
mov
add
pop
jae
xchg
mov
push
test
xchg
cmp
mov
test
sbb
jmp
dec
push
inc
nop
xor
sub
adc
icebp
or
pop
xor
push
cmps
bound
push
pusha
mov
mov
mov
cwde
clc
jne
daa
mov
pop
stos
test
push
cwde
scas
sub
xor
push
push
stos
mov
add
nop
mov
addr16
nop
div
mov
call
pop
lods
test
in
jle
cmp
sbb
push
add
ret
push
or
xchg
outs
stc
jns
gs
mov
mov
mov
in
mov
ficom
(bad)
out
inc
lds
adc
fdivrp
dec
add
in
in
xchg
push
xor
push
std
ins
mov
ss
dec
push
imul
in
mov
sbb
sbb
lods
pop
jo
jl
inc
loopne
je
ret
jnp
imul
xchg
or
mov
sar
push
add
je
int3
add
dec
xor
pop
sbb
and
mov
adc
dec
mov
icebp
loope
fst
mov
mov
test
in
dec
aaa
cmps
pop
push
js
mov
xor
mov
test
icebp
jns
rcl
pop
mov
popa
mov
mov
pop
into
and
push
out
data16
cld
and
mov
das
jmp
in
push
mov
leave
or
jbe
cld
push
xchg
mov
retf
mov
cmps
mov
cmps
sbb
jnp
push
mov
int3
lahf
sub
mov
cmp
arpl
pop
xchg
mov
(bad)
pop
xchg
inc
mov
inc
sub
cmp
pop
push
in
push
inc
leave
pop
popa
push
leave
xor
(bad)
int3
leave
jmp
mov
push
pop
cli
outs
das
push
fs
jae
sahf
cli
lock
mov
mov
repz
jmp
xchg
fstp
popf
in
(bad)
lds
mov
call
jno
xor
lods
adc
test
int3
and
pusha
inc
call
xlat
mov
lahf
xchg
adc
ret
aaa
lea
pushf
push
addr16
adc
cmp
stos
push
adc
xor
loope
jbe
test
jecxz
ins
inc
(bad)
out
ins
mov
sbb
sub
xor
retf
rcl
pop
push
es
in
push
mov
adc
sbb
mov
int
(bad)
repz
ss
sbb
xor
add
fstp
jecxz
push
mov
push
call
int3
xchg
mov
and
fcomp
daa
jp
div
dec
popa
jle
cmp
sbb
mov
dec
(bad)
jns
ret
addr16
scas
arpl
int
div
xor
push
sahf
pop
and
popa
arpl
mov
inc
enter
adc
mov
inc
rcr
aam
arpl
repz
daa
add
jns
aas
jmp
jne
std
push
mov
mov
cmp
or
jmp
sub
cmp
loopne
ins
pop
jge
sbb
out
(bad)
fcomp
mov
call
retf
and
mov
push
or
xchg
dec
cmp
inc
dec
cmp
add
sbb
mov
not
test
movs
lahf
gs
pop
(bad)
iret
stos
les
pop
or
sti
ret
sahf
ds
xchg
pop
sbb
js
retf
push
fwait
jnp
pop
adc
and
mov
sub
fs
cmp
gs
ds
retf
xor
arpl
jmp
add
pushf
jg
(bad)
(bad)
dec
movs
aad
pop
nop
std
jg
leave
cmp
div
aas
dec
and
jbe
pop
jge
xchg
nop
or
pop
jae
int
xchg
add
(bad)
pusha
adc
retf
xchg
sbb
adc
cmc
xchg
dec
dec
loope
mov
inc
xchg
mov
not
mov
popf
mov
jno
xor
push
push
sbb
or
dec
xor
lea
repz
xor
add
iret
cmps
mov
mov
int3
imul
dec
sub
aaa
inc
cmp
popa
jecxz
push
or
xchg
xchg
push
daa
arpl
fld
mov
jbe
lahf
outs
and
mov
je
sar
lods
jecxz
add
stc
and
cmps
xor
ret
cwde
aas
imul
cmp
xor
xchg
das
mov
or
je
stos
in
and
lea
sbb
ds
mov
push
xchg
int
dec
inc
dec
sbb
out
inc
jle
push
call
xchg
push
mov
ds
retf
outs
pop
push
sbb
mov
gs
add
sbb
imul
jmp
aad
adc
pop
sub
jmp
push
lods
mov
aaa
dec
fisttp
and
dec
push
icebp
shl
sti
fs
mov
and
pop
inc
or
xlat
mov
mov
cmp
arpl
rol
xchg
repz
mov
or
fnsave
outs
mov
(bad)
cmps
mov
sbb
push
mov
cld
push
pop
enter
add
mov
pop
lods
jbe
test
mov
fdivr
jns
xor
gs
sbb
nop
inc
hlt
add
or
call
pushf
xor
lea
cld
js
dec
fwait
push
scas
jns
addr16
fnstsw
lahf
stc
pop
xor
push
xchg
ss
jbe
mov
fidivr
push
sbb
sti
ins
pop
sub
cmp
imul
push
adc
xchg
test
pop
jae
jmp
jbe
sbb
in
in
in
mov
add
outs
cld
xchg
mov
jecxz
inc
aaa
jl
mov
dec
adc
cmp
and
sahf
enter
mov
pushw
das
std
adc
push
mov
pop
pop
dec
sub
movs
mov
mov
xor
imul
scas
cmp
push
jo
scas
push
ja
nop
scas
add
test
xor
into
lods
test
inc
ins
mov
adc
add
lahf
aad
iret
div
pusha
out
cmp
xor
movs
popf
mov
sub
mov
push
cwde
dec
dec
shl
inc
daa
test
mov
in
add
sti
out
es
dec
adc
push
retf
jle
mov
fstp
imul
test
dec
dec
in
popa
fisubr
jl
js
pop
cmp
xor
push
inc
ins
(bad)
push
mov
pop
fmul
cmps
and
or
mov
leave
fcmovnb
xor
popf
and
hlt
pop
into
push
pushf
dec
ins
and
dec
dec
mov
shl
sbb
adc
int
jmp
fistp
(bad)
xor
cli
dec
stos
add
cs
mov
shl
movs
mov
call
add
jg
imul
mov
(bad)
push
mov
in
jl
pop
data16
ret
jle
(bad)
clc
hlt
inc
daa
xor
pop
(bad)
lock
or
sub
xlat
push
scas
cmp
and
test
xchg
pop
stc
adc
ja
ins
dec
inc
fild
mov
fsubr
mov
cmp
stc
xchg
inc
push
popf
enter
sub
xor
in
stc
and
stos
mov
clc
cmp
int3
repnz
xchg
sbb
icebp
mov
jmp
rol
pop
fucomip
mov
jns
hlt
out
xchg
mov
ins
jg
fiadd
(bad)
jmp
or
cdq
ja
mov
enter
icebp
movs
loopne
cmp
out
aas
retf
ja
sbb
cmps
dec
out
sub
xchg
int
pop
rcr
enter
xor
or
enter
xchg
rcr
sbb
in
xchg
test
and
nop
jo
cmp
dec
pop
call
mov
bsr
sbb
nop
mov
adc
pusha
push
mov
dec
cmps
pusha
iret
js
mov
xor
mov
gs
mov
push
mov
mov
bound
mov
xchg
sbb
inc
imul
mov
and
lds
jge
mov
add
sbb
inc
cmp
add
push
ret
mov
(bad)
push
add
lea
xor
xchg
sbb
jg
xorps
push
fbld
xchg
or
in
pop
popa
(bad)
mov
aad
mov
dec
cmp
xchg
cmp
cmps
or
mov
push
imul
ret
fist
mov
mov
pop
pop
mov
imul
das
jecxz
push
mov
mov
int
inc
daa
inc
(bad)
and
add
out
cmp
or
and
xchg
les
push
xor
shr
adc
jge
fsubr
cmp
mov
lods
cmp
add
mov
or
(bad)
jno
pusha
leave
mov
loop
iret
ins
fmul
mov
jl
out
sbb
fistp
ja
inc
pop
and
stc
pop
xchg
cmps
cmp
and
dec
mov
dec
sub
push
pop
sbb
aaa
dec
loope
inc
sub
xor
cmp
retf
push
adc
cli
call
(bad)
and
mov
fwait
pop
pop
test
fidiv
pop
int
pop
bound
push
dec
dec
mov
jecxz
int
push
pusha
add
cmp
cmp
inc
xchg
out
call
scas
inc
imul
fld
ja
mov
cwde
fdiv
push
dec
pop
jae
jmp
aaa
dec
dec
pop
pop
lods
mov
in
popa
mov
int3
gs
push
cld
and
adc
inc
mov
pop
fcomip
retf
test
push
xor
fisubr
int
or
and
cmp
xchg
jmp
jecxz
loop
sub
jnp
inc
lods
inc
xchg
lahf
stos
pop
adc
inc
jecxz
or
adc
add
add
mov
pop
dec
push
dec
popa
gs
ror
inc
cmps
xchg
sar
mov
cmps
(bad)
(bad)
into
jle
or
out
stos
frstor
and
jnp
(bad)
pop
push
shl
mov
pop
mov
retf
push
adc
xchg
xchg
cmps
test
mov
(bad)
rol
mov
sbb
imul
inc
xor
xchg
pushf
sti
and
or
xchg
push
lods
cli
xchg
ja
out
fnstsw
dec
mov
and
sbb
cmp
jg
ret
jae
mov
(bad)
pop
xchg
nop
pop
jecxz
sbb
stos
sub
xchg
xor
stos
out
mov
lods
ficom
jnp
xchg
mov
fnstcw
movs
aam
jb
mov
add
popa
test
sub
test
pop
popa
mov
fcomp
ficomp
add
push
push
push
fdiv
cld
xchg
lahf
rol
pop
jmp
out
sub
cmp
mov
(bad)
loop
adc
mov
outs
sbb
jns
rcl
cdq
jnp
add
inc
cmp
jno
and
shl
(bad)
daa
and
bound
ds
add
shr
in
jne
adc
gs
(bad)
in
sbb
cmp
or
iret
adc
jae
stc
jl
sbb
mov
retf
loopne
inc
gs
jmp
mov
ja
cmp
psubsw
stos
ror
dec
mov
dec
scas
mov
or
cmps
out
cmp
xchg
shl
sub
adc
xor
push
inc
test
push
not
int
add
xor
cmp
ins
push
cmp
in
mov
inc
(bad)
mov
cdq
mov
push
pop
rol
add
out
jmp
paddd
es
dec
lods
cmps
push
cmp
fcmove
sub
and
dec
(bad)
push
xchg
movs
adc
popf
jecxz
pop
sbb
inc
in
div
or
lock
jge
movs
add
fisubr
fisubr
inc
xor
sbb
aas
sub
xchg
xchg
add
dec
push
aaa
xor
lods
dec
lds
outs
test
or
fmul
push
inc
and
xor
pop
xchg
call
mov
movs
dec
sub
sub
xlat
popa
loope
jg
sub
inc
mov
jnp
mov
cmp
fild
sahf
jge
jbe
mov
mov
adc
or
mov
loopne
jno
xor
arpl
stc
enter
popa
test
retf
mov
mov
shr
xor
clc
aam
add
sub
cmp
sti
or
aad
pop
imul
ja
rcl
iret
or
psubusw
and
cld
in
call
adc
push
sub
retf
dec
aam
test
xchg
fs
or
xchg
jae
mov
repz
mov
test
enter
lahf
pop
xchg
mov
cmp
fist
and
neg
dec
sbb
repz
adc
cmp
aaa
daa
das
sbb
push
in
adc
mov
xchg
test
cmp
lods
fsubr
adc
or
lods
test
mov
out
ja
nop
sbb
std
jno
mov
mov
cwde
ds
pop
add
mov
sbb
and
add
sub
mov
scas
push
stos
movs
in
inc
stos
inc
fsubp
loope
in
fdivr
mov
or
jle
test
outs
jmp
bound
ds
lods
ins
cmp
jle
and
add
xor
in
ins
sahf
in
push
iret
sub
sbb
cld
inc
xor
aam
test
lahf
ins
fiadd
xchg
(bad)
xor
inc
mov
test
test
mov
jb
bound
aaa
test
enter
add
push
add
out
sub
rol
mov
loop
fiadd
jae
jge
cmp
popf
shl
lock
inc
push
gs
xchg
in
mov
push
push
lock
out
ror
in
xor
ret
leave
or
fcmovnu
les
ret
arpl
jp
pop
adc
jp
or
inc
or
sbb
or
jb
std
mov
jmp
xchg
retf
into
pop
mov
cwde
xor
sub
jns
out
mov
lea
push
pop
xchg
dec
test
retf
sub
inc
div
call
ds
dec
cld
bound
cdq
adc
cmps
jge
test
cmps
clc
icebp
jp
js
mov
jne
shr
call
add
call
ret
jg
or
ror
xchg
add
add
jae
or
push
jb
or
mov
xlat
loop
xor
xor
jae
imul
neg
fst
sbb
pop
pop
or
fsub
fsub
(bad)
fnstcw
mov
dec
xchg
adc
cmp
ins
or
inc
dec
push
jmp
into
icebp
pusha
popf
ja
in
adc
sub
aam
dec
out
mov
sub
mov
arpl
adc
fiadd
add
dec
adc
xor
mov
add
addr16
pop
out
cmc
xor
and
adc
ja
aas
shl
add
scas
and
(bad)
scas
inc
xor
out
out
mov
cmc
sub
mov
jmp
dec
out
(bad)
aaa
sbb
cmps
inc
arpl
int
movs
xchg
adc
jmp
cmp
(bad)
fucom
dec
dec
mov
lods
clc
xor
push
cwde
mov
mov
call
movs
dec
in
and
(bad)
retf
xor
call
xor
mov
cdq
jno
xchg
pop
mov
push
jne
xor
cmps
push
ficom
ins
add
jnp
les
sbb
push
shl
mov
or
scas
std
pop
push
sub
jmp
sbb
outs
sub
sti
ds
mov
jnp
mov
sbb
(bad)
push
mov
std
call
cwde
hlt
sub
cli
xchg
scas
xchg
nop
rol
and
push
(bad)
cmc
cmp
push
add
mov
cli
and
pusha
sub
pop
inc
lahf
dec
dec
ror
add
xchg
dec
loop
(bad)
xchg
pushf
fstp
pop
mov
push
in
ins
fnstenv
mov
cmp
inc
mov
cmovs
push
shr
ja
mov
pop
movs
(bad)
xlat
lods
jb
aam
inc
mov
cmp
push
inc
adc
daa
xchg
mov
xchg
in
sbb
add
int
shr
push
mov
popf
(bad)
xor
bnd
pop
shl
(bad)
push
imul
(bad)
call
jmp
dec
push
mov
add
adc
pusha
scas
jo
ins
pop
in
push
ins
adc
psrld
and
out
call
jg
and
mov
jbe
lds
loope
push
adc
push
mov
aas
aam
gs
clc
xor
stc
out
lds
in
jne
outs
leave
or
cmc
in
jg
repz
ins
pop
bound
mov
ja
mov
push
aad
fwait
(bad)
jmp
fmulp
jo
xchg
xor
xor
inc
pop
movs
retf
jg
push
push
mov
cmp
xchg
dec
sub
mov
dec
outs
mov
pop
fstp
fcomp
ds
loopne
sbb
aad
mov
or
mov
idiv
and
dec
jmp
sbb
imul
sub
push
fucomi
movs
mov
nop
inc
sub
xchg
mov
mov
xlat
jae
sbb
fmul
sti
stos
fisttp
popf
test
sub
loopne
mov
sbb
stos
jo
in
pop
(bad)
mov
adc
jmp
mov
out
fsub
es
js
dec
sbb
repz
mov
jno
cmp
cmps
add
jb
(bad)
fidivr
and
int3
cs
cmp
shl
and
inc
xchg
dec
mov
xor
push
sub
mov
test
shl
iret
loop
sahf
and
sub
clc
mov
mov
in
es
mov
xor
xor
cmc
(bad)
(bad)
stc
mov
sub
and
sub
xor
pop
mov
mov
fild
xchg
cmp
in
nop
fmulp
gs
sub
xchg
or
adc
out
cmp
xor
ds
jp
mov
adc
inc
dec
mov
push
cmp
xchg
shl
outs
mov
mov
dec
fxch
cmp
xchg
adc
sub
mov
into
mov
mov
xor
jnp
pop
mov
movs
xchg
add
mov
(bad)
adc
rcl
jo
jae
pop
dec
enter
dec
dec
sbb
test
cmp
aas
fisttp
fst
popa
mov
dec
repz
push
inc
xor
aas
xchg
xor
imul
call
int3
xchg
inc
sar
mov
test
or
int3
inc
add
test
and
in
cmp
aam
xchg
xchg
test
stos
or
or
pop
xchg
aas
push
aad
movs
int3
scas
jle
push
sbb
add
ret
or
xchg
shl
pop
inc
fwait
rcr
je
lods
sbb
loope
mov
and
repz
int
lds
inc
pop
jnp
mov
fsub
aaa
push
in
inc
xor
test
xchg
jbe
push
jp
cmp
(bad)
stos
jno
mov
out
jne
mov
and
in
xor
push
dec
in
das
sti
fiadd
pop
cdq
and
and
mov
jae
out
std
adc
mov
jo
pop
int3
ror
aaa
add
pop
mov
addr16
loop
cld
cmp
in
pop
lock
ins
inc
xor
cmp
in
iret
mov
jb
fstp
mov
mov
xor
adc
aad
adc
jp
pop
fwait
xchg
or
mov
dec
mov
inc
aas
jmp
push
mov
sti
imul
(bad)
(bad)
or
jecxz
jmp
pop
push
xor
or
sbb
cmps
xchg
mov
test
repz
push
mov
in
mov
movs
mov
inc
lea
rol
mov
test
scas
stos
jne
retf
jb
mov
leavew
imul
ror
xchg
dec
fisubr
and
(bad)
int3
and
cmp
xor
gs
pop
loop
jne
cmp
jmp
sub
sbb
clc
dec
lea
shl
rol
sahf
xchg
inc
or
scas
lahf
test
out
sub
lea
jne
jb
lods
aas
mov
or
and
mov
mov
sar
dec
jge
js
sbb
jbe
xor
cmp
lds
data16
mov
popa
rcr
xchg
jmp
nop
pop
inc
ds
mov
fbld
mov
push
(bad)
lahf
inc
frstor
push
int
mov
out
jno
and
stos
sahf
fiadd
xchg
jg
pop
mov
imul
dec
mov
(bad)
mov
xchg
pusha
arpl
push
ja
mov
dec
aaa
sub
fistp
ja
mov
xchg
cli
jle
xor
call
xor
cmp
leave
sub
push
retf
sub
(bad)
imul
xor
xchg
in
pop
sti
cs
adc
es
inc
into
sbb
js
jbe
and
sbb
cli
loopne
lahf
or
test
cld
push
jno
sbb
cmps
outs
popa
xor
nop
and
pop
jmp
or
int
in
mov
jne
fcmovu
fcom
fwait
stos
jmp
sub
sub
ret
pushf
call
pop
adc
jo
jge
out
or
fucom
outs
gs
popw
cmc
mov
mov
pop
ins
sbb
jb
push
and
sbb
add
(bad)
aam
pop
aad
mov
(bad)
retf
pushf
cmp
jge
into
cmps
iret
cld
mov
iret
cdq
push
jmp
into
loope
ret
pop
stc
xchg
mov
int3
div
fldcw
adc
fistp
and
mov
movs
dec
mov
push
es
fld
xchg
mov
xchg
lods
cmp
icebp
jae
mov
jp
and
adc
das
mov
inc
lahf
cmp
cmps
xchg
enter
imul
push
bound
ins
jge
or
das
adc
mov
or
jge
pop
lods
and
lock
cli
or
ror
cmp
test
div
dec
cmp
fucomip
popa
int
aas
int
jp
sbb
loop
and
jne
mov
je
mov
push
loopne
jb
inc
mov
fdivr
xchg
xchg
dec
add
sub
xchg
push
movs
rol
mov
(bad)
lahf
cmc
aas
sub
fstp
mov
push
pop
cmp
push
pop
push
xor
hlt
aaa
in
mov
xchg
or
cmp
pop
jl
mov
data16
mov
mov
inc
xchg
add
mov
test
mov
loopne
fcom
lock
dec
out
sbb
lock
sub
mov
aas
adc
or
cwde
es
cdq
lock
xchg
pop
call
inc
sub
scas
push
aas
fucomi
xor
cld
xlat
adc
xchg
repz
int3
sbb
movs
nop
sub
int
xor
dec
xchg
loop
cmps
sbb
sbb
imul
sub
bound
jmp
jl
push
jge
(bad)
shl
cmps
in
inc
scas
out
out
mov
pop
rcl
jnp
bound
push
xor
mov
iret
xor
fsubrp
mov
mov
xor
scas
loopne
sbb
iret
popa
rol
xor
add
mov
daa
add
inc
rcl
sbb
aam
jg
adc
ror
push
mov
mov
cmp
out
(bad)
dec
sbb
adc
cmc
sbb
fldenv
sub
add
push
jecxz
or
pop
adc
push
in
mov
xor
out
les
cmp
ja
fsub
jge
(bad)
std
dec
outs
add
pusha
out
mov
lahf
mov
cmps
mov
and
popf
das
cdq
jns
add
fmul
and
ins
(bad)
shl
add
xor
in
jns
imul
mov
push
mov
fxch
(bad)
paddusb
mov
sbb
fld
fsubr
mov
push
cmp
mov
pop
das
clc
push
mov
stos
lea
or
aam
cli
into
sahf
cmps
ss
and
mov
shr
movs
je
push
xchg
cdq
mov
dec
pop
jae
jmp
and
cmc
lods
jle
daa
and
mov
mov
xor
enter
idiv
cli
cmp
cmp
jmp
retf
and
cli
cmp
ds
je
pop
int3
xlat
mov
mov
or
stos
cs
inc
jecxz
rol
fadd
mov
xchg
dec
inc
cwde
shl
lahf
pop
or
sbb
jp
es
dec
or
xchg
dec
inc
sbb
mov
inc
and
xchg
pushf
cmp
jg
or
fsub
iret
fwait
and
rol
mov
and
xchg
adc
mov
and
xchg
loop
fwait
jae
addr16
push
inc
lods
push
bound
jne
jp
inc
pop
inc
or
or
pop
mov
cmc
sbb
cmc
rcr
sbb
mul
test
test
inc
xorps
jno
sar
out
jle
cmc
adc
lds
sub
inc
push
retf
mov
xor
xchg
sub
and
data16
leave
jecxz
aad
out
cs
sbb
sbb
xor
jne
loopne
rcr
push
shl
fiadd
inc
les
leave
fnstsw
dec
jno
jbe
cmp
bound
mov
push
dec
pop
xor
xchg
scas
imul
icebp
mov
daa
pop
outs
push
(bad)
iret
fcmovnu
mov
inc
addr16
pushf
xchg
leave
push
pop
mov
push
shl
loope
out
inc
mov
push
neg
dec
mov
pop
sbb
enter
xor
inc
or
jp
mov
jg
push
push
cmp
or
xchg
mov
(bad)
ja
imul
and
pusha
out
and
retf
lods
add
adc
out
movs
push
sbb
dec
das
int3
push
dec
jecxz
enter
xchg
and
pop
mov
push
inc
jmp
mov
pop
pop
cmps
pop
adc
xor
ja
or
cmp
xor
mov
pushf
mov
dec
xlat
push
ja
clc
cdq
dec
mov
xlat
inc
push
and
aad
ror
into
xchg
jge
inc
pop
(bad)
lods
(bad)
outs
nop
or
fs
xchg
imul
popf
ret
sahf
in
mov
and
pusha
(bad)
cmp
imul
mov
ror
cmc
test
into
es
or
sti
sub
repz
or
or
nop
shl
pop
push
xchg
jno
mov
xchg
or
test
jmp
xor
or
iret
mov
cld
scas
dec
je
cs
out
ins
xchg
push
clc
cli
cmp
add
adc
cmps
sbb
add
adc
std
pop
sahf
push
cmp
mov
(bad)
add
fiadd
pop
xor
jns
jno
or
or
mov
fsub
int3
adc
fdivr
(bad)
dec
rol
(bad)
sbb
pop
mov
sbb
dec
out
jle
jno
push
mov
call
mov
xchg
nop
(bad)
out
pop
mov
mov
ins
fmul
cmp
out
sub
lea
inc
pusha
add
pop
jne
ret
cmp
loopne
into
xchg
mov
mov
daa
push
xchg
pushf
mov
dec
fwait
hlt
shl
shl
pop
outs
int3
add
ror
aaa
(bad)
xchg
inc
(bad)
sub
test
cli
je
hlt
mov
jnp
popa
jns
and
sub
fcmovb
pop
mov
push
ret
ja
mov
mov
icebp
sub
cmp
mov
add
inc
add
adc
popf
popf
mov
and
cli
rol
fsubr
rol
adc
cmp
sub
cdq
pop
icebp
mov
and
in
or
imul
loope
je
xlat
test
movs
(bad)
fbstp
push
mov
jb
jecxz
les
into
loop
and
loopne
sub
por
cld
jne
xchg
add
imul
mov
push
sar
(bad)
out
aad
jmp
and
jmp
cli
cmp
cmp
add
jmp
xchg
or
xchg
inc
fadd
push
push
out
xor
push
dec
lods
add
test
mov
mov
fild
ja
mov
cdq
iret
push
xor
adc
xchg
call
stos
repnz
call
movs
add
mov
pop
inc
sub
add
mov
nop
sbb
push
fld
in
(bad)
int3
cmc
out
inc
in
jae
rol
clc
mov
xchg
push
inc
int
push
outs
mov
ins
fisttp
inc
xchg
gs
loop
jns
sbb
sets
adc
outs
sbb
aaa
cmp
dec
neg
int
sbb
fist
dec
mov
xchg
cmp
je
outs
jmp
popf
aad
xlat
mov
mov
adc
cs
xchg
fdivr
dec
adc
or
cmp
into
(bad)
mov
mov
add
jb
outs
sub
sub
xchg
stos
mov
scas
aad
mov
jae
sbb
fstp
jge
push
jno
data16
mov
sbb
jns
mov
fst
jbe
cmps
test
or
scas
add
cmp
fndisi(8087
xor
cs
sti
sbb
(bad)
clc
(bad)
cmp
iret
cmp
stos
fchs
jecxz
sbb
scas
mov
dec
xchg
std
(bad)
out
pop
(bad)
cmp
fdivr
dec
inc
or
sub
dec
retf
ss
mov
fcomp
das
imul
shr
outs
xor
or
jp
in
add
sub
pop
xchg
xor
sahf
out
pop
cmp
fs
ss
pop
das
cli
sub
mov
sub
inc
inc
adc
mov
(bad)
pushf
mov
not
in
stos
das
jmp
test
adc
add
movs
popa
cwde
ret
mov
fisubr
mov
adc
xor
xor
cmps
cmp
dec
out
fdiv
mov
stc
inc
leave
fistp
add
ja
(bad)
mov
xor
dec
jb
xor
aas
addr16
inc
xchg
pop
cmps
aad
xor
(bad)
mul
xchg
ret
xlat
aam
dec
rcr
mov
add
mov
sbb
pop
daa
rcl
jne
sub
sbb
outs
adc
test
les
inc
and
stos
mov
not
xor
cld
dec
mov
and
mov
push
cmp
fldcw
femms
push
loopne
aad
enter
xchg
jl
mov
cld
(bad)
mov
sbb
and
out
dec
adc
xchg
enter
daa
inc
cmc
pop
leave
(bad)
cwde
outs
inc
xchg
in
sbb
data16
loope
repz
push
push
and
dec
frstor
lods
int
addr16
mov
loopne
idiv
cmc
les
je
retf
lds
hlt
push
ja
test
mov
mov
ins
xchg
outs
shl
pop
inc
scas
inc
sbb
mov
int
outs
scas
or
(bad)
sbb
cdq
ficom
movs
xchg
adc
out
mov
aaa
popa
pop
movs
push
les
push
cmp
adc
and
mov
add
clc
call
loope
push
cmp
and
xlat
or
(bad)
mov
loop
inc
(bad)
std
and
mov
into
mov
loope
shl
cmp
(bad)
jmp
les
mov
sbb
test
cmp
fdiv
pop
imul
xor
mov
retf
(bad)
fst
clc
das
and
sub
inc
cmps
adc
push
and
pop
cmp
fsub
or
mov
dec
cs
clc
jl
or
push
sbb
shl
or
dec
ins
sbb
mov
add
cmp
sub
aam
mov
pop
cmp
hlt
add
sub
adc
pop
iretw
jp
mov
or
retf
push
cmp
out
sbb
sbb
mov
cmp
ja
pop
xor
mov
(bad)
icebp
hlt
lods
sub
xchg
mov
dec
dec
push
rol
mov
mov
mov
pop
xchg
or
sbb
aam
retf
in
call
movs
xchg
loopne
or
cdq
in
dec
int
mov
cli
in
cwde
fdivr
sbb
ss
mov
cwde
push
in
xor
fst
or
ret
inc
iret
test
aam
pop
dec
cdq
xchg
imul
mov
add
popa
les
add
call
pop
xchg
retf
addr16
jnp
push
pop
cwde
jmp
push
or
mov
mov
sub
cli
sub
dec
mov
sbb
jge
enter
jecxz
aad
push
iret
aam
dec
sub
js
lahf
adc
add
and
add
dec
jo
xor
ds
ret
sbb
ja
push
or
dec
push
sbb
(bad)
adc
dec
mov
cmp
sub
inc
jl
push
call
xchg
(bad)
enter
shl
mov
dec
out
fisub
stos
out
jo
nop
jle
sbb
dec
sbb
jmp
sbb
jmp
out
xchg
enter
je
mov
mov
jecxz
iret
mov
xchg
test
adc
imul
fcmovnbe
push
in
sub
fucomi
test
stos
aaa
dec
aam
je
mov
lock
js
dec
das
push
mov
xlat
cmp
imul
jnp
cmp
scas
push
mov
icebp
xor
inc
mov
call
xlat
xchg
aad
mov
test
and
sti
sbb
mov
jne
test
mov
stos
lea
ret
je
iret
jns
out
cmp
push
inc
pop
les
cmps
adc
ret
jnp
imul
or
add
fnstenv
std
arpl
lahf
int
out
es
lahf
add
pop
push
inc
dec
sub
js
jbe
and
jle
test
mov
aaa
mov
retf
sub
ud0
lods
test
pop
sbb
cmc
imul
fsub
sbb
sub
inc
xor
std
inc
sub
sub
and
test
lods
daa
mov
pushf
aas
test
repnz
cmp
cmp
je
jecxz
pop
mov
out
pop
sar
aaa
jge
shl
jge
sub
dec
stos
popf
fbld
push
mov
push
or
shl
and
test
ds
mov
jns
shl
leave
jecxz
sbb
ficom
or
push
aad
fs
xor
inc
mov
outs
sti
add
scas
lods
call
lock
je
out
sub
jbe
add
test
fwait
imul
in
pop
lds
pop
ror
jecxz
enter
pop
mov
xchg
enter
xor
jle
retf
mov
adc
stos
in
cmp
cmp
sbb
inc
xchg
or
and
dec
cwde
pushf
mov
nop
call
sbb
sbb
loope
or
dec
dec
out
jmp
fs
jle
dec
les
mov
out
xlat
mov
ins
add
in
lock
out
mov
ror
sub
in
dec
shr
call
mov
xchg
outs
xor
xor
jecxz
xchg
adc
lds
push
push
jae
dec
or
data16
pop
lods
scas
cli
stc
inc
inc
dec
mov
push
xor
push
jne
jecxz
mov
mov
fucomip
pop
popf
sub
nop
loop
add
mov
aaa
loop
pop
sub
out
std
xor
not
xor
mov
fisttp
inc
and
aad
xchg
xchg
inc
add
mov
ss
(bad)
out
jbe
xchg
mov
inc
in
xchg
inc
loop
into
fist
mov
mov
mov
pusha
stos
lods
leave
aaa
and
xor
xlat
outs
stc
loope
xor
inc
xor
jecxz
pop
jnp
fstp
fdiv
scas
adc
cmovae
bound
sbb
xchg
mov
ficomp
xchg
call
stos
pop
xchg
daa
mov
repnz
jb
or
ja
ret
and
mov
sub
pop
push
cmp
loope
jbe
outs
push
mov
mov
test
xchg
sbb
mov
dec
fimul
add
sbb
retf
les
and
mov
sub
pop
je
pop
cmp
bound
call
adc
ficom
sbb
push
xchg
ins
and
(bad)
mov
ror
pop
xor
cmp
retf
push
sbb
test
icebp
stc
lea
mov
push
repnz
or
xchg
sbb
pop
in
clc
shl
into
mov
test
jne
mov
push
mov
jp
pop
dec
out
mov
cmps
or
or
xchg
jge
pop
fmul
lock
sbb
(bad)
xchg
(bad)
scas
dec
(bad)
popa
xchg
push
and
xor
pop
push
xor
push
mov
ins
mov
cmp
aaa
imul
mov
lods
mov
push
mov
sti
sbb
and
xor
mov
pop
outs
pop
cmp
imul
jo
arpl
loopne
pop
pop
or
(bad)
sysret
imul
jno
inc
jl
(bad)
mov
xchg
xor
dec
dec
mov
sbb
or
sub
dec
inc
adc
ins
inc
push
dec
adc
das
xor
dec
fcomp
pop
fdiv
sub
loope
xchg
sub
sub
in
mov
loop
mov
pusha
mov
retf
mov
sbb
daa
inc
cmp
or
dec
mov
test
retf
movs
lods
cdq
push
shr
shl
retf
xchg
stc
push
jo
sahf
adc
cmp
push
pop
push
push
xor
adc
imul
pop
fild
sub
arpl
mov
ja
sahf
push
ins
lahf
paddq
dec
fistp
(bad)
ds
(bad)
(bad)
test
sar
inc
jbe
mov
neg
jmp
adc
mul
fild
xchg
inc
adc
std
arpl
sahf
pop
add
lahf
pop
nop
xor
enter
xchg
push
or
and
xchg
xchg
mov
mov
mov
nop
cmp
mul
push
or
call
int
fbld
mov
aaa
adc
imul
mov
hlt
ret
adc
fcomip
inc
imul
adc
jae
sub
shl
neg
jg
dec
lods
push
cmp
loopne
sub
retf
mov
stos
sahf
or
(bad)
je
out
xchg
shl
xchg
xor
inc
in
xor
push
imul
mov
dec
call
out
add
lods
pop
sar
mov
fcomp
cmp
sbb
jecxz
or
push
push
ja
stos
mov
in
push
push
lahf
jnp
shr
jne
xchg
add
mov
shr
imul
daa
pop
lahf
(bad)
pop
xchg
cmp
pop
and
data16
jne
or
pop
js
pop
xchg
in
adc
hlt
adc
push
and
jnp
push
leave
or
nop
pop
fnstenv
scas
push
repz
add
adc
je
mov
lock
or
out
xor
jmp
repz
adc
push
mov
bound
jns
jle
cmps
arpl
jno
pop
sub
xor
or
cmps
ret
test
loop
xchg
fst
cmc
aam
xor
add
xchg
cmp
add
and
jecxz
scas
scas
push
mul
(bad)
xor
mov
shl
aaa
xor
mov
xor
mov
cmp
dec
aad
scas
inc
clc
dec
sbb
add
in
int3
mov
xchg
xor
mov
mov
scas
(bad)
leave
lods
cmp
sbb
cmc
jo
adc
pop
leave
and
pop
jmp
popf
sbb
push
aad
cmp
and
cmp
(bad)
repnz
loope
mov
in
jecxz
or
jns
jge
sbb
js
mov
popf
xor
outs
cmc
gs
gs
push
enter
jae
scas
jno
mov
pop
dec
sub
(bad)
jg
sbb
ss
jb
inc
push
int
dec
add
in
dec
xchg
sub
aam
cmps
repnz
sbb
popf
psubq
xchg
pusha
and
or
adc
xor
jnp
pop
ss
loope
jge
add
mov
(bad)
push
pop
mov
mov
cmps
sbb
jecxz
cs
mov
mov
fistp
pushf
mov
out
imul
je
and
adc
jbe
(bad)
jmp
sbb
in
fstp
add
dec
rcr
int3
mov
(bad)
xor
(bad)
aad
and
lds
ds
sar
inc
cs
cli
outs
jle
scas
adc
push
call
inc
lahf
jmp
sbb
adc
popf
mov
dec
cli
stos
div
xor
sahf
add
div
outs
jae
cwde
adc
push
mov
mov
retf
(bad)
loopne
adc
dec
mov
xor
aaa
dec
outs
out
push
in
sub
addr16
add
inc
ins
inc
cmp
sub
push
push
add
cmp
rcl
cmp
sbb
cmp
cmps
rcl
sbb
adc
adc
pusha
aam
data16
shr
inc
add
jne
xchg
jmp
adc
test
neg
dec
cmc
aas
daa
pop
mov
dec
dec
pop
xchg
sub
and
mov
aas
push
and
in
xchg
fstp
cdq
sbb
cmp
test
pusha
dec
or
jmp
sar
xchg
(bad)
(bad)
or
xchg
jb
ficom
loopne
dec
ret
inc
adc
movs
inc
xor
inc
sbb
mov
sbb
jmp
fst
push
push
jl
fs
in
mov
fstp
pop
mov
int
stos
mov
mov
jns
jno
add
ins
out
mov
inc
repnz
or
pop
pop
mov
sbb
movs
rol
pusha
test
scas
push
imul
jo
dec
cmc
push
pcmpeqb
cdq
int3
popf
pop
cmp
jmp
lods
leave
push
leave
add
dec
lea
hlt
movs
cmp
aaa
mov
daa
popa
inc
fidiv
out
xchg
mov
mov
jne
mov
int
imul
dec
pop
jp
in
popf
fisubr
mov
scas
push
jbe
arpl
mov
sbb
std
outs
inc
pop
jns
push
pop
or
iret
jg
loope
inc
test
sahf
daa
dec
mov
test
mov
adc
(bad)
outs
fcmovne
jo
fisub
nop
or
mov
pop
push
jb
sbb
mov
sub
inc
jecxz
inc
test
push
add
pop
shr
or
cld
jg
push
movs
push
sbb
mov
imul
xchg
ja
(bad)
lods
pusha
adc
mov
add
inc
jg
loop
movs
dec
mov
sub
inc
cmp
test
outs
sbb
adc
add
ins
lock
xor
shr
sbb
inc
wbinvd
cmp
jl
add
fmul
mov
xchg
mov
jge
add
or
(bad)
mov
sub
xor
ret
arpl
xlat
push
stos
mov
fst
mov
inc
sbb
(bad)
fistp
lods
je
pop
(bad)
adc
inc
lea
pop
fisub
aam
int3
(bad)
outs
push
lods
inc
and
mov
cmp
(bad)
xor
pusha
cmp
adc
inc
(bad)
xchg
fistp
mov
out
daa
and
inc
ficomp
test
(bad)
xchg
fst
add
mov
mov
sbb
pushf
xor
cli
in
push
sbb
and
fs
daa
sbb
adc
daa
and
mov
add
test
inc
pop
rcl
std
add
jmp
and
mov
das
push
sub
mov
sub
in
push
imul
scas
loope
mov
xchg
xchg
xchg
cmp
call
out
mov
out
pop
ret
pop
inc
jge
(bad)
cmp
aas
pop
jl
and
ins
mov
lods
out
retf
out
jae
mov
mov
mov
aad
pop
in
and
jns
xor
xchg
ss
(bad)
scas
pushf
jbe
(bad)
sub
push
pop
call
stos
push
jmp
icebp
add
sub
ja
jae
push
test
test
xchg
shr
(bad)
jecxz
xchg
in
(bad)
aam
lock
ss
jnp
add
cdq
pop
pusha
cs
dec
mov
leave
xchg
scas
cld
ret
mov
retf
add
fcom
xchg
push
dec
lahf
mov
leave
xchg
test
pop
push
test
pop
push
push
arpl
mov
add
mov
nop
xchg
add
mov
(bad)
inc
lock
and
pop
lods
xchg
idiv
movs
call
push
(bad)
sbb
adc
sub
aas
mov
fs
js
out
mov
push
sub
lods
into
cmp
shl
add
repnz
mov
pop
add
cmps
pop
out
lahf
idiv
jmp
push
cmp
cmp
arpl
jl
or
xor
es
jge
jne
push
test
cmp
popf
and
daa
mov
pop
inc
and
cmc
pop
mov
mov
inc
(bad)
cli
xchg
rcl
and
movs
scas
fs
pop
jge
mov
fmulp
add
adc
inc
nop
pop
or
aas
push
imul
xor
jmp
int
or
pusha
sub
in
adc
add
test
gs
jbe
jno
xchg
cmps
mov
(bad)
pop
lea
mov
adc
ss
cmp
push
jge
push
dec
lahf
pushf
sub
add
ins
inc
push
xchg
ss
fcomp
mov
or
push
out
fwait
repnz
xor
lods
aam
aas
in
ins
inc
xchg
xchg
inc
imul
ins
sbb
test
pop
fbld
add
xchg
adc
loopne
jmp
xchg
jge
imul
ds
cmp
and
out
ror
add
xchg
and
jge
repnz
cdq
std
cld
cld
mov
pop
mov
in
sti
fsub
aad
rcr
ss
sub
xchg
xchg
jmp
outs
jbe
into
bound
or
std
add
rol
daa
inc
sbb
in
mov
call
mov
xchg
aam
push
dec
mov
cmp
gs
rcl
add
shl
hlt
push
shl
or
xchg
cmc
jne
push
fs
mov
xchg
imul
and
in
stc
adc
and
jo
pop
bound
icebp
cmp
xchg
inc
add
(bad)
std
xor
sub
test
inc
int3
sub
pop
jmp
pop
jl
jno
in
imul
in
imul
or
adc
cmps
fstp
or
fisubr
mov
or
sub
je
push
and
xchg
sub
xchg
jmp
inc
scas
jo
lods
mov
out
not
jmp
in
loope
push
scas
mov
sub
cmp
test
ret
add
sbb
jmp
(bad)
fld
push
cmp
jg
pop
push
mov
push
mov
xchg
inc
loope
pop
mov
inc
cmps
cld
mov
adc
cld
lods
lds
push
fimul
int3
mov
lea
into
add
jmp
mov
div
jne
xchg
bound
lods
pop
and
inc
sub
and
push
xchg
mov
ins
sbb
repnz
jns
xor
fbstp
mov
aam
retf
push
aaa
xchg
mov
or
sbb
push
jae
fimul
(bad)
inc
retf
std
sub
rcr
scas
adc
fsub
iret
jg
mov
pusha
and
mov
stos
cmp
fyl2x
xor
jnp
popf
inc
addr16
mov
leave
mov
aaa
cmp
lods
ror
and
(bad)
aas
push
jmp
jmp
and
loop
push
movs
lds
jl
xor
push
inc
or
pop
aam
jo
pusha
popf
mov
dec
push
stos
jns
sub
scas
push
mov
lock
adc
or
outs
or
popf
xor
mov
int
ret
test
repz
dec
sahf
xor
les
adc
movs
test
pop
mov
add
arpl
sbb
jne
pop
or
dec
movq
xor
lods
fcmovu
ins
mov
rcr
ror
cld
adc
shl
and
adc
pop
rol
jbe
dec
xchg
or
mov
pushf
cmp
jmp
push
xchg
shl
lods
jp
add
push
sahf
js
xor
pop
stc
outs
outs
dec
dec
xor
or
clc
fninit
mov
lock
sbb
bound
out
xchg
mov
adc
call
call
loope
sahf
lods
ret
pop
call
fimul
popa
(bad)
mov
fs
jae
(bad)
mov
int3
adc
jns
and
add
ret
add
out
push
fisttp
and
shl
jge
xchg
mov
aam
leave
dec
data16
pop
mov
inc
sub
pop
jno
mov
pop
imul
adc
bound
out
pop
movs
lock
pop
scas
lock
and
cmps
ins
pop
sub
xchg
jmp
(bad)
cli
sbb
sahf
pop
push
movs
and
scas
leave
fst
imul
jmp
xor
add
pushf
jo
popa
arpl
mov
xchg
test
or
cmp
ret
mov
stos
push
ffree
sub
mov
les
fld
pop
test
xor
ret
sub
push
icebp
push
shl
loop
icebp
rcr
push
cld
mov
push
ds
repz
shl
inc
bound
outs
jno
xlat
mov
sub
jge
mov
inc
xchg
and
lods
arpl
dec
out
aad
jecxz
lahf
mov
add
(bad)
aam
sbb
push
lods
xor
ja
push
mov
test
xchg
sub
jmp
sub
mov
or
test
pop
gs
iret
dec
cs
xor
nop
mov
inc
clc
xor
push
push
fldenv
repnz
retf
xor
inc
adc
jge
add
scas
jne
(bad)
ret
jp
enter
cld
sbb
pop
cs
cmp
inc
movs
mov
leave
and
xor
fsub
sar
or
ficom
test
into
out
push
test
fnstcw
arpl
leave
cwde
dec
mov
addr16
jns
and
jl
adc
idiv
out
ja
ins
cmp
movs
stos
daa
and
xchg
ret
dec
jnp
psubsw
sbb
mov
fwait
adc
cmp
jbe
(bad)
sbb
nop
xchg
push
pusha
push
es
mov
shl
lahf
mov
sbb
pop
mov
jb
jp
fnstcw
out
xor
adc
mov
loopne
cmp
pop
mov
fld
(bad)
cmps
fist
adc
sti
push
retf
idiv
push
jno
adc
inc
mov
retf
push
jecxz
adc
rcl
push
(bad)
xchg
mov
push
movs
and
adc
push
adc
loope
sub
dec
test
pop
or
and
fcomp
push
in
and
in
clc
add
jne
mov
jle
fs
in
ret
xchg
sub
pop
jmp
mov
aam
hlt
jmp
pop
xlat
xlat
sbb
fsubr
sti
fdivr
into
retf
js
ret
(bad)
pop
cmps
aam
aas
push
mov
and
add
sub
fnstcw
pushf
ret
frstor
or
std
retf
scas
mov
popa
test
inc
add
jmp
or
ins
xchg
dec
shl
push
and
popf
dec
pushf
nop
xchg
(bad)
mov
mov
call
and
test
mov
lods
pcmpgtw
fdivr
loop
cdq
pop
lods
jl
mov
inc
push
sbb
jb
mov
(bad)
jnp
mov
cmp
sub
fisub
jle
jg
jae
mov
dec
dec
(bad)
adc
pop
and
add
inc
jb
enter
jne
(bad)
xor
stos
(bad)
std
or
clc
cmps
lahf
pop
jmp
jb
or
cmp
enter
or
jp
mov
retf
cwde
test
addr16
push
cmovg
test
out
lds
outs
pop
sbb
pop
xor
xchg
mov
pop
jnp
add
inc
dec
mov
out
mov
adc
sub
dec
dec
mov
pop
xchg
pusha
push
sbb
cmps
clc
xor
fs
repnz
cli
mov
(bad)
cld
xchg
ins
mov
mov
jno
retf
cmp
push
dec
lods
mov
xor
mov
push
sbb
rep
cmc
mov
fsubr
or
mov
xor
mov
xor
ins
leave
pop
imul
push
and
mov
xchg
push
cli
push
js
pop
xor
mov
mov
(bad)
sub
mov
sub
sub
rcr
js
aad
jmp
ins
adc
or
pop
ret
mov
aam
test
ja
sahf
in
test
mov
mov
popa
call
ficomp
sbb
cmp
in
push
into
stc
test
bound
jg
fnstcw
retf
imul
dec
adc
mov
mov
loope
jl
jno
lea
out
rol
add
xchg
cdq
xor
std
ss
jae
adc
or
pop
(bad)
sbb
not
or
enter
js
add
mov
mov
mov
jp
cmc
cmp
mov
jnp
dec
and
xchg
push
pop
aas
int3
ror
mov
in
push
xchg
inc
loope
repz
aam
jne
push
out
(bad)
jg
cli
cmp
mov
lds
fidiv
lods
(bad)
out
enter
xchg
cld
loop
icebp
test
cmp
jae
pop
stos
fdiv
and
test
test
mov
add
inc
data16
jecxz
scas
cmps
leave
cmp
test
imul
mov
mov
fldcw
xchg
test
icebp
ja
loopne
js
jmp
data16
mov
jae
cmp
in
mov
inc
call
imul
push
test
iret
jecxz
pop
xor
pop
clc
push
xor
aas
(bad)
ss
mov
dec
mov
arpl
out
dec
ss
sub
rep
cwde
jp
(bad)
push
ss
jnp
add
adc
mov
mov
pop
mov
icebp
sbb
mov
in
(bad)
or
in
lahf
fiadd
(bad)
cmps
stos
xor
mov
or
and
ficomp
ins
push
push
sub
ja
mov
mov
and
sbb
mov
clc
cmp
sbb
sbb
push
cmp
fdivr
loopne
sub
or
mov
mov
fsub
and
xor
cli
(bad)
mov
dec
add
(bad)
call
fs
push
fisubr
ret
pop
jo
shr
or
fld
xchg
cmps
sub
sub
cld
out
daa
sar
(bad)
je
std
add
cmp
jo
ins
sbb
cmc
push
lods
fsubr
mov
shl
scas
sbb
jo
imul
popf
movs
aam
movs
adc
pusha
lods
xchg
aad
inc
dec
inc
out
rcr
int
scas
stos
sbb
push
xchg
scas
mov
(bad)
cli
jecxz
xor
mov
dec
adc
add
stos
add
data16
cld
pop
inc
push
jl
rol
(bad)
repnz
pop
dec
shl
xor
addr16
jg
loopne
sub
jg
jbe
aam
scas
lods
sub
cld
add
test
pushf
out
in
movs
inc
or
add
inc
cli
(bad)
pop
hlt
mov
je
in
cmp
(bad)
out
jmp
mov
inc
int
push
adc
aam
scas
sahf
repnz
in
sub
aad
xor
cwde
adc
push
outs
mov
lods
mov
push
xchg
lods
scas
sub
sub
mov
jnp
xor
cmp
mov
test
bound
popf
cdq
or
ror
out
push
mov
retf
repz
test
xchg
repz
addr16
sti
lods
pop
(bad)
sbb
aam
mov
dec
(bad)
std
aad
pop
mov
popa
outs
cli
leave
xchg
xor
add
ss
and
jno
mov
cs
xchg
nop
pop
mov
jmp
pop
rcl
inc
imul
(bad)
movs
rep
pop
sub
mov
mov
inc
sbb
and
jmp
add
mov
push
inc
jns
dec
fwait
stc
jb
lods
fiadd
movs
lds
push
or
jmp
pusha
xchg
pop
mov
mov
jl
ss
and
shl
fldcw
mov
sbb
push
(bad)
and
daa
cli
imul
add
lods
pop
jae
mov
call
out
rcr
sub
daa
mov
out
add
add
scas
int3
pusha
daa
xchg
dec
stc
bound
pop
or
out
(bad)
push
(bad)
cmp
loopne
push
cld
pop
sub
adc
(bad)
sbb
ds
or
enter
call
pushf
mov
xor
rcr
push
retf
test
fidivr
daa
jp
faddp
jg
daa
mov
add
inc
sbb
adc
in
push
push
test
fsubr
sbb
xchg
add
mov
add
adc
cmp
in
xchg
fwait
addr16
xchg
mov
(bad)
(bad)
xor
out
mov
in
pop
xor
fadd
and
sub
xchg
xor
xor
dec
rcl
bound
outs
dec
lahf
dec
enter
ds
bound
shr
lods
ins
out
test
ret
sub
xchg
adc
sbb
les
std
fdivr
imul
(bad)
jmp
xor
mov
mov
and
push
sub
and
fwait
cmp
xor
sub
jnp
sahf
inc
sbb
fisttp
or
inc
outs
mov
test
adc
(bad)
movs
cld
dec
lea
push
gs
pop
lods
scas
fisubr
sub
xchg
dec
cmp
jge
es
mov
(bad)
inc
mov
fstp
inc
or
fistp
leave
mul
cld
add
or
(bad)
jmp
stos
enter
(bad)
push
inc
mov
stc
sbb
(bad)
xchg
dec
pop
mov
mov
les
xchg
mov
cmp
ret
cmp
popf
push
mov
(bad)
fndisi(8087
or
jo
test
xor
push
mov
mov
mov
jle
mov
cmp
jge
dec
or
call
mov
or
fistp
mov
cmp
sub
test
aam
cmc
cmp
or
pop
mov
dec
scas
pop
ficom
fs
push
cmp
jo
pop
inc
scas
es
and
push
add
les
icebp
jns
mov
xor
mov
arpl
sbb
sub
and
and
jl
in
xchg
retf
mov
adc
rcr
loop
outs
sbb
je
pop
call
mov
shl
rol
loop
out
out
pop
arpl
sbb
ins
jmp
xchg
add
es
mov
push
cdq
push
(bad)
icebp
scas
jl
mov
and
push
mov
inc
outs
pop
pop
dec
inc
mov
test
or
popf
sbb
lahf
push
adc
into
pop
push
mov
inc
gs
sub
push
or
mov
pop
mov
sahf
out
fcom
enter
adc
xchg
sbb
push
pop
in
in
xor
rcl
jl
arpl
mov
cmps
jbe
daa
test
das
stc
daa
or
(bad)
mov
or
sbb
sub
dec
sub
and
xchg
ins
xor
and
inc
adc
jne
inc
add
or
add
sub
outs
test
scas
in
test
inc
or
xchg
add
jnp
pop
dec
push
jae
repz
jne
and
cld
(bad)
fldenv
cmp
clc
xchg
mov
imul
xor
data16
mov
dec
enter
sub
daa
inc
in
popf
jecxz
js
jb
pop
jge
sahf
stos
call
jno
jno
or
mov
sbb
mov
addr16
add
mov
xchg
push
cmps
inc
fmul
retf
adc
or
pop
in
aas
pop
ret
mov
cmp
mov
sar
add
dec
sbb
in
xchg
fimul
(bad)
dec
cmps
gs
push
jne
sbb
mov
not
cmps
jae
inc
push
jl
sbb
xchg
xor
out
jecxz
movs
(bad)
stc
dec
adc
jmp
in
int
push
pop
sahf
ss
add
sti
rcl
shr
cld
arpl
and
mov
test
repnz
sti
pop
xor
je
sbb
dec
div
outs
ds
lods
in
push
fcomp
xor
pop
imul
mov
je
fmul
fist
xchg
xchg
jmp
adc
adc
mov
mov
and
add
dec
or
shr
pop
xor
or
hlt
jmp
pop
push
je
(bad)
scas
add
idiv
aas
loop
push
je
cmp
scas
scas
stos
adc
fs
sub
push
and
jecxz
xor
ficomp
fcmove
pop
out
std
aam
lea
pop
fwait
jnp
lds
dec
ret
adc
loope
adc
mov
mov
js
mov
je
mul
loopne
push
adc
not
loopne
push
das
test
sub
or
pop
call
pop
add
(bad)
clc
lods
and
mov
rcr
and
inc
scas
push
inc
leave
sub
push
or
call
sbb
pop
push
sub
arpl
xchg
push
cmp
mov
lds
push
xor
into
fcom
mov
sbb
sub
loopne
or
add
scas
repz
dec
popa
inc
or
ja
mov
adc
sub
das
sbb
(bad)
stos
(bad)
push
cmp
or
mov
nop
mov
in
sbb
stc
push
popf
lock
hlt
int
mov
jl
dec
and
mov
fistp
inc
mov
sub
dec
jg
retf
mov
test
jbe
ja
daa
sub
inc
add
pop
xchg
pusha
push
cmp
stc
or
mov
(bad)
(bad)
shl
inc
loop
xor
dec
arpl
(bad)
bound
call
hlt
dec
gs
dec
aas
retf
xor
sbb
imul
xchg
xchg
jge
test
adc
inc
test
test
jmp
push
out
jge
popa
adc
xchg
sbb
int
sar
sbb
in
cld
stos
int3
call
cmp
dec
popf
mov
inc
inc
pop
add
ds
cmovge
pusha
lds
mov
sbb
push
cld
sub
in
xor
xchg
jne
sbb
adc
or
adc
clc
jge
inc
dec
adc
xor
jecxz
cmp
push
sub
lahf
inc
mov
aad
push
cmp
pop
dec
cmp
lods
popa
cmc
inc
mov
pop
ret
sub
jmp
inc
ret
pop
and
sub
xchg
dec
mov
adc
adc
add
jnp
jge
mov
or
sub
shr
inc
repnz
jnp
sub
add
pop
xor
stos
ret
xor
neg
pop
xor
mov
pop
sahf
push
adc
mov
addr16
shl
cld
jns
mov
or
jb
xor
dec
loopne
cmc
mov
sub
ret
and
repz
in
cmp
stc
popa
pop
xor
out
arpl
adc
adc
cmp
pop
adc
mov
jns
lock
sti
xor
ret
fdivr
pop
stc
dec
jle
pop
adc
mov
dec
es
mov
cmp
scas
adc
hlt
into
mov
adc
nop
dec
pop
ret
xchg
aaa
cdq
test
outs
mov
gs
test
mov
int
out
les
or
aaa
cwde
fbld
cmp
dec
sub
sahf
adc
push
(bad)
xor
rcr
test
in
gs
jmp
dec
xor
add
mov
mov
sub
dec
test
xor
enter
sub
mov
lods
out
push
scas
xchg
pop
sub
ret
inc
call
jns
ss
push
repnz
adc
xchg
iret
inc
pushf
push
jae
cmc
jge
(bad)
movs
mov
mov
pop
mov
mov
ret
call
push
fsubr
dec
cli
cs
mov
popf
fisub
push
jecxz
xchg
jl
push
mov
xchg
into
jle
(bad)
out
pushf
pop
push
xor
arpl
ins
jne
or
into
popa
cmp
loopne
sub
(bad)
movs
aaa
lfs
add
mov
xchg
cmp
adc
in
out
sub
out
or
mov
fbld
jg
inc
cdq
cmp
(bad)
movs
jmp
jbe
and
test
or
ret
aam
fist
ds
mov
mov
mov
cld
inc
cmp
adc
jmp
cmp
adc
ret
adc
shr
mov
jge
mov
add
add
mov
cs
inc
pop
push
dec
push
(bad)
std
sub
int
xlat
add
jle
mov
pusha
xchg
mov
rcr
jmp
pop
and
inc
mov
call
jmp
xchg
clc
sti
cld
divps
sahf
adc
pop
xchg
scas
scas
jmp
sub
fnstenv
cmps
in
xchg
cld
jmp
and
push
imul
ins
aaa
and
data16
(bad)
test
lods
(bad)
stc
mov
sbb
xchg
jbe
(bad)
adc
daa
xchg
pop
fisttp
adc
inc
or
(bad)
jl
imul
lahf
mov
fnstcw
test
call
jo
inc
(bad)
jg
call
push
xlat
cli
mov
push
mov
push
lea
in
mov
adc
jnp
in
call
jb
fstp
je
push
xchg
xchg
xchg
or
les
rol
push
(bad)
adc
les
inc
lods
jecxz
xor
and
in
iret
imul
ret
adc
dec
fs
add
inc
aad
mov
mov
lahf
daa
inc
sub
addr16
mov
ja
sbb
hlt
sbb
in
leave
das
je
repz
dec
ds
jmp
pop
bound
push
pop
inc
test
cmp
fs
lea
jno
(bad)
cmps
mov
mov
test
aas
mov
mov
jle
ror
push
xchg
cmp
mov
and
xchg
lock
pop
mov
push
retf
inc
cmp
stos
test
retf
sbb
pop
or
outs
and
sub
cmps
mov
pop
cmp
frstor
sub
push
jg
jle
xor
in
xchg
aam
xchg
aam
pop
test
or
fidiv
jnp
add
(bad)
jne
hlt
fmul
jmp
xor
fisub
adc
(bad)
call
les
xor
sbb
popa
push
test
add
enter
scas
cmps
and
and
pop
or
cmps
xchg
fwait
ja
movs
add
add
xchg
add
in
arpl
mov
sub
dec
jecxz
and
lods
aam
dec
xor
popa
inc
and
daa
inc
inc
push
sub
fbstp
ret
push
add
push
mov
into
lock
xchg
(bad)
mov
lods
iret
jge
daa
fsubr
ret
cmp
push
icebp
repnz
mov
mov
xor
xlat
sar
pusha
mov
pop
mov
(bad)
gs
jle
addr16
imul
inc
mov
push
and
cmp
fcom
xor
lods
sbb
mov
mov
call
imul
test
hlt
shl
add
xchg
mov
fisubr
ss
repnz
add
dec
popa
lea
pop
mov
push
lds
int
mov
xor
xchg
lahf
add
jp
retf
xor
cmp
in
cmc
adc
mov
push
repnz
sti
fistp
jge
(bad)
dec
pusha
fcomp
or
dec
jg
push
pop
xchg
outs
xor
xor
pop
imul
sbb
bnd
cmp
test
fild
and
fisttp
mov
jl
and
adc
stos
xchg
sbb
jno
out
push
mov
rcr
mov
or
adc
fwait
sub
stos
fcomi
ror
sub
sbb
push
mov
cmp
dec
loope
push
xchg
cmp
mov
push
push
inc
movs
imul
dec
cmp
test
imul
dec
stc
mov
loopne
xor
sti
lock
mov
mov
sbb
retf
(bad)
cmp
movs
aaa
arpl
and
lods
mov
in
lds
ret
scas
pop
inc
pop
(bad)
mov
xor
imul
lea
addr16
fild
dec
jl
cmp
push
test
sbb
(bad)
or
dec
sbb
rcl
std
std
test
popf
test
push
push
leave
and
dec
jmp
stos
or
adc
jnp
jmp
pop
or
add
xor
aaa
and
mov
bnd
inc
sbb
cli
fwait
aad
add
fmul
xlat
sub
and
scas
pop
sbb
ss
jb
out
sti
dec
jnp
mov
mov
push
retf
and
int3
outs
(bad)
push
push
and
mov
hlt
mov
mov
xor
adc
xor
data16
and
and
push
add
mov
scas
in
xor
ds
bound
pop
addr16
sti
repnz
pop
xchg
movs
imul
aaa
and
aaa
mov
and
shl
xchg
xchg
sti
mov
cdq
mov
mov
shr
ss
pop
jo
mov
out
repnz
xlat
or
jbe
sbb
xor
pop
dec
cmp
call
test
gs
cli
pop
call
cli
inc
pop
cmp
movs
into
jbe
(bad)
adc
mov
out
(bad)
push
retf
push
popa
adc
and
adc
popa
sti
fsubr
mov
sub
sbb
enter
push
sar
sti
js
xor
cmp
mov
ss
les
sbb
sahf
inc
pop
popf
in
scas
js
and
leave
xchg
sub
fcom
adc
jae
loope
lock
mov
fdivp
xor
sbb
ja
iret
shl
xor
sbb
push
fistp
xchg
cmp
and
gs
mov
iret
xchg
dec
cmp
test
fisub
sub
pop
into
popa
out
pusha
or
mov
repz
mov
aas
sbb
(bad)
xlat
clc
addr16
call
mov
cmp
jnp
mov
in
loope
jne
push
push
adc
mov
push
push
pop
and
daa
sub
jge
movs
xchg
out
sar
cs
call
stos
dec
push
leave
mov
pop
dec
arpl
out
(bad)
mov
in
jns
jp
das
mov
out
add
sub
jnp
addr16
xchg
retf
std
jmp
pop
gs
gs
call
stos
inc
xchg
repnz
int3
add
adc
inc
std
aam
std
jge
fidivr
lds
jl
xchg
iret
cmp
es
mov
sti
push
dec
inc
jae
out
rol
xchg
xor
pop
jp
or
inc
cmp
mov
call
arpl
xchg
ret
sbb
cmc
out
xor
mov
int
xor
mov
pop
xchg
jbe
cmp
sbb
pop
in
iret
or
jmp
pop
rcl
push
mov
(bad)
mov
int3
bnd
or
pop
pop
add
mov
mov
adc
sub
ucomiss
mov
or
call
and
(bad)
mov
mov
pushf
pop
out
mov
dec
iret
cmps
inc
js
(bad)
sub
imul
inc
dec
sub
adc
scas
xchg
js
outs
mov
add
call
popa
mov
add
rcr
je
sub
adc
stos
icebp
push
mov
inc
into
add
lods
idiv
retf
adc
pop
ficom
stc
mov
test
ja
xor
jb
and
cmp
mov
push
int3
and
xchg
scas
das
add
aas
scas
jle
(bad)
idiv
nop
push
mov
loopne
xor
xor
movs
fidivr
lea
out
push
bound
inc
sub
arpl
jb
jne
inc
jmp
call
cmp
stos
cmp
(bad)
mov
cmp
loop
dec
jmp
das
adc
dec
jb
mov
inc
mov
sub
int
repz
popf
or
fistp
mov
push
outs
mov
cmp
lahf
sbb
leave
xchg
movs
lea
sub
mov
mov
aas
mov
outs
ret
mov
les
pminub
add
mov
int
cwde
lods
mov
pop
xchg
stos
shl
not
loopne
out
xor
lahf
mov
fstp
icebp
or
inc
mov
aam
mov
hlt
dec
daa
sbb
shr
sbb
nop
sbb
scas
ror
xchg
int
jb
aaa
and
ja
jnp
pop
test
pop
mov
psubsw
scas
movs
pop
mov
pop
jne
xor
in
sbb
into
in
loope
mov
arpl
pushf
std
lods
push
and
lock
mov
js
xchg
fcomp
gs
ds
push
and
or
mov
retf
iret
(bad)
popa
jns
xlat
adc
idiv
lds
sbb
ret
sbb
cwde
imul
add
jmp
sbb
jns
sub
bound
and
loopne
lea
pusha
clc
sub
js
fcmovnu
xchg
mov
mov
and
retf
mov
mov
mov
jne
outs
xor
sbb
mov
dec
or
out
stc
jp
xchg
adc
in
add
mov
and
lahf
out
dec
test
lods
stos
xchg
mov
inc
mov
shl
and
gs
adc
aad
lods
cli
push
inc
cmps
jle
cmp
enter
mov
inc
jge
popa
cmc
stos
fxtract
and
dec
or
push
mov
nop
mov
inc
lods
add
dec
repnz
fadd
stc
int3
in
and
adc
fmulp
pop
inc
sub
(bad)
bound
add
into
fwait
mov
pop
retf
jne
mov
mov
pop
rol
adc
popa
sbb
pop
pusha
test
push
cmp
in
sahf
sti
inc
add
xchg
fdivr
adc
xor
mov
or
push
repnz
loop
mov
loope
fbstp
dec
and
jns
loop
movs
sbb
aad
xor
int
shl
mov
pop
and
pop
xchg
add
sub
jg
dec
push
push
into
(bad)
or
inc
xor
loopne
test
sahf
and
imul
or
push
js
mov
xor
xchg
xor
aaa
jne
cmps
cmp
in
movs
xor
pushf
adc
mov
in
bound
xor
push
sub
xor
adc
push
(bad)
nop
cwde
mov
mov
popf
inc
rol
mov
mul
icebp
dec
out
or
pop
and
in
test
das
sbb
jns
into
(bad)
or
xlat
mov
cli
xchg
push
imul
inc
jne
ins
mov
pusha
inc
rcr
bound
(bad)
std
or
inc
cmp
inc
xor
pop
jp
inc
outs
dec
sbb
mov
stc
jge
sidtd
or
mov
mov
and
sar
mov
push
inc
push
xor
scas
sub
out
cmp
fst
retf
popa
or
lahf
ret
jo
adc
outs
(bad)
sbb
in
xchg
xchg
push
imul
mov
jae
or
add
sbb
shr
inc
jmp
dec
lea
ss
push
fstp
lock
inc
retf
xchg
sbb
loope
add
test
je
aad
xchg
in
and
sbb
dec
daa
imul
mov
mov
cmp
mov
daa
sub
mov
mov
mov
pop
mov
inc
xor
jne
test
jle
sub
inc
push
and
sub
nop
lahf
push
jns
xchg
mov
xchg
jne
mov
jge
pop
cmps
daa
iret
pusha
xchg
pushf
pop
pop
jle
jge
mov
push
lds
xor
ret
xchg
adc
(bad)
cld
dec
inc
fisttp
sar
ret
ror
ror
in
cmp
add
jle
mov
dec
fistp
pop
xchg
sbb
mov
mov
(bad)
pop
push
mov
mov
mov
in
push
loope
outs
or
xchg
fwait
adc
or
mov
ret
out
cmp
jp
stos
retf
leave
ins
loope
imul
mov
loopne
push
xchg
mov
mov
xchg
fwait
clc
dec
ret
pusha
aad
sub
repz
jbe
cli
mov
mov
outs
mov
fwait
loope
arpl
mov
(bad)
ja
xor
dec
xchg
xchg
mov
add
mov
xor
out
and
mov
adc
pop
sti
mov
cli
test
mov
loop
movs
pop
shl
pop
sub
mov
dec
xchg
mov
sub
push
cmps
pop
cmp
mov
sbb
js
sbb
jmp
xor
sub
movs
push
hlt
mov
enter
xchg
fld
add
fucomi
inc
imul
imul
loope
sbb
in
dec
pusha
imul
(bad)
scas
xor
(bad)
mov
arpl
jae
pushf
cmp
adc
pop
dec
xchg
popa
jns
es
movs
dec
cmp
push
jl
enter
dec
mov
mov
cmp
mov
(bad)
fnstenv
jle
jle
popa
mov
ja
cmps
call
mov
adc
mov
lods
mov
adc
hlt
pop
mov
lahf
sbb
pusha
mov
push
cmp
xchg
sbb
mov
fs
push
shl
sar
dec
out
xor
iret
push
pop
and
test
mov
shl
pusha
je
call
mov
hlt
mov
cmp
sbb
xchg
mov
ret
sub
push
data16
ret
retf
pop
xchg
loopne
dec
in
shr
add
pop
daa
scas
movs
movs
icebp
les
sbb
int
fdivr
icebp
xchg
jmp
xchg
enter
dec
pop
add
cmps
cs
test
xchg
sbb
mov
mov
in
aas
push
not
jp
xor
pop
mov
mov
pop
inc
outs
sub
push
fisttp
(bad)
dec
enter
test
push
repz
ja
test
mov
fdiv
mov
call
movs
cmc
or
nop
and
call
cmp
lods
push
je
or
fsub
xor
fmul
xchg
imul
(bad)
mov
pusha
fadd
dec
inc
mov
xchg
xchg
(bad)
push
in
enterw
mov
adc
sub
lahf
movs
jp
jbe
xor
repz
cmp
jnp
lds
push
mov
hlt
loopne
mov
cmps
and
xchg
xchg
cs
sahf
add
lea
mov
(bad)
in
xchg
and
push
inc
dec
mov
xchg
sahf
cmp
data16
jno
scas
retf
and
inc
sub
mov
mov
push
aad
or
ror
or
imul
or
cmp
adc
sub
sub
jle
lahf
ror
in
repnz
sub
mov
xor
pusha
(bad)
mov
or
push
pop
fwait
sub
sub
sbb
imul
jmp
cli
push
out
xchg
cmps
pop
jmp
mov
hlt
dec
push
push
mov
pop
(bad)
(bad)
mov
mov
(bad)
dec
in
daa
(bad)
aas
neg
in
xchg
psubsb
dec
xchg
pop
mov
inc
ja
sub
push
aaa
sub
and
inc
and
dec
(bad)
fiadd
movs
cli
in
adc
or
adc
add
hlt
cmp
stos
aad
xchg
retf
jns
xchg
lods
jmp
xchg
cmps
sub
das
mov
into
(bad)
sub
dec
ins
ds
sbb
mov
jo
daa
jg
ss
jne
sbb
dec
jmp
cmp
push
ret
mov
dec
sub
adc
adc
rcr
jl
sub
mov
xchg
mov
inc
loop
popf
in
scas
mov
add
sub
or
sbb
xchg
popa
and
push
popf
inc
pop
pop
mov
in
push
or
push
sub
add
cdq
inc
and
mov
cmp
inc
add
stos
ja
jecxz
mov
xor
xor
scas
push
sub
lods
push
xor
ja
lea
call
mov
xchg
sub
xchg
pop
push
out
imul
add
neg
push
sub
outs
je
pop
lahf
dec
out
test
loop
add
push
js
push
or
cmps
cmp
ror
inc
bound
jecxz
stos
in
pop
push
sub
xchg
fcomp
aam
mov
pop
xlat
out
addr16
es
mov
xor
mov
dec
inc
lock
dec
in
adc
jbe
jo
jmp
mov
ins
lods
(bad)
mov
xchg
daa
cmc
pop
lock
fwait
and
shl
adc
sbb
scas
aas
bswap
popa
jb
mov
mov
add
push
rcl
ror
call
mov
nop
loopne
xchg
sub
xor
sub
sti
push
stos
idiv
push
jne
lods
xchg
out
into
inc
inc
cmps
cmc
aad
add
xor
ins
mov
xor
ins
or
adc
mov
pop
out
adc
and
push
xchg
fcmove
sub
fistp
ja
ficom
jo
pushf
stc
and
sbb
jg
aaa
retf
inc
enter
push
inc
xchg
aaa
xchg
ret
sbb
add
adc
jmp
fs
pop
out
sub
scas
cld
jb
movs
(bad)
mov
adc
dec
mov
inc
mov
jnp
push
les
xchg
in
xchg
out
fnstenv
mov
lods
dec
ret
loop
sub
xchg
test
jp
stc
xor
add
cld
xchg
mov
inc
sbb
mov
jno
jns
cmp
push
add
jb
shr
or
sbb
adc
sbb
or
pop
cmp
sbb
pop
nop
xor
jae
shl
add
adc
(bad)
call
pop
xor
push
popa
outs
lea
xchg
sbb
in
cmp
ins
cmp
mov
(bad)
call
fistp
out
and
inc
lds
mov
xchg
pop
jp
movs
mov
xchg
stos
retf
lods
push
sbb
mov
repz
aam
enter
test
ja
bound
jno
rcr
(bad)
loope
mov
sahf
xlat
aad
ret
pop
rol
ja
mov
cld
div
je
inc
and
test
imul
xlat
cli
out
inc
shl
xor
mov
xchg
loope
mov
cmc
pusha
scas
(bad)
(bad)
(bad)
fdivr
push
jg
ds
arpl
pop
imul
lods
lds
fnsave
cmp
xor
test
sar
data16
jge
ins
adc
push
dec
xchg
aas
in
inc
adc
shr
les
fnstenv
cmp
addr16
mov
jmp
xchg
cdq
pop
test
loop
or
dec
pop
shr
add
xchg
dec
or
mov
loopne
push
lahf
clc
xchg
lahf
dec
xchg
lahf
or
or
sahf
out
mov
sbb
repz
adc
inc
pop
dec
daa
sbb
jbe
scas
mov
inc
add
scas
xchg
loop
rol
(bad)
xchg
sub
inc
push
cmp
sub
and
outs
mov
adc
jns
or
inc
inc
cdq
and
loop
and
mov
repnz
adc
repz
jmp
in
xlat
xor
cmp
mov
loopne
xchg
cld
dec
dec
jmp
xchg
mov
push
ret
mov
call
loopne
mov
push
pusha
xor
inc
test
dec
mov
xchg
out
xchg
sub
sub
push
in
xchg
add
sbb
xchg
cmp
jnp
pop
dec
pop
lock
retf
cld
(bad)
icebp
mov
shr
sub
sub
out
pop
add
and
or
(bad)
jg
shl
clc
sbb
dec
push
imul
lods
xor
(bad)
cmc
out
xor
mov
push
push
dec
movs
mov
jl
jmp
push
push
sti
(bad)
(bad)
outs
push
addr16
test
jecxz
or
adc
push
stos
cmp
mov
or
aad
arpl
inc
and
cmp
repz
lahf
or
fild
(bad)
or
or
cmps
loope
sti
out
mov
cmp
cmp
mov
or
stc
into
ss
stos
mov
mov
or
iret
pop
push
iret
jno
cli
scas
movs
xchg
je
aaa
clc
popa
dec
cwde
lods
repnz
mov
add
cmps
adc
pop
mov
xchg
push
(bad)
xchg
sub
outs
cdq
cmp
and
leave
or
or
adc
and
push
in
jl
scas
loopne
or
adc
push
xor
or
jle
pushf
pop
cwde
or
popf
rcl
cli
rcl
pop
push
or
cmp
clc
loopne
jo
(bad)
cmp
jb
adc
idiv
fisttp
and
push
mov
ss
inc
jnp
xchg
fldcw
and
and
fisttp
rep
push
loop
fdivr
or
xchg
repz
retf
xchg
xor
cmps
test
or
xchg
sub
imul
movmskps
or
fld
fmulp
gs
pop
icebp
pop
push
cwde
(bad)
jo
fisttp
mov
or
loop
cmp
mov
mul
dec
xchg
jnp
or
add
(bad)
lods
stos
js
sbb
sub
mov
or
jge
(bad)
xchg
pop
inc
inc
xchg
push
call
ds
sahf
adc
mov
fistp
fstp
add
cmp
jge
or
repnz
das
sbb
add
dec
scas
pushf
icebp
adc
outs
clc
mov
mov
cmp
adc
cmc
pop
inc
adc
and
jp
adc
pop
inc
pop
pop
inc
test
cmp
movs
retf
in
pop
es
les
and
mov
pusha
xchg
and
push
xlat
mov
and
fiadd
jae
pusha
sbb
sub
mov
jmp
pop
jle
sbb
pop
sti
jp
add
xor
(bad)
cmp
mov
add
adc
imul
test
fisubr
mov
or
sub
mov
aaa
stos
mov
pop
mov
dec
mov
call
lds
ins
lods
mov
sub
repz
lock
cmp
rcl
mov
aad
fdivp
pop
call
add
adc
out
mov
lods
jecxz
or
mov
arpl
or
mov
call
mov
out
addr16
cmps
jb
add
(bad)
into
or
xchg
rcr
push
imul
cdq
sbb
push
loopne
sub
or
stc
or
outs
sbb
sub
sub
xor
pop
repz
add
xor
adc
adc
ret
inc
mov
xchg
addr16
arpl
push
test
imul
jae
shr
(bad)
ja
jge
(bad)
out
ins
mov
xchg
repnz
scas
mov
push
jl
or
xchg
aam
inc
sbb
push
nop
lock
xchg
pop
adc
jns
out
mov
shl
sti
cmp
and
cmp
push
sub
mov
sub
jl
cmps
and
outs
les
mov
add
sub
adc
ror
mov
and
inc
push
enter
retf
test
je
adc
in
adc
nop
popa
jno
pushw
out
inc
and
xchg
push
scas
inc
jns
dec
addr16
sub
or
hlt
stos
iret
xchg
dec
out
sub
lea
das
aam
shl
stos
xchg
sbb
retf
mov
and
je
dec
and
pusha
js
push
jo
cmp
sub
push
stos
adc
push
inc
lds
cmps
shr
test
out
out
xor
inc
test
inc
test
mov
cmc
aaa
aam
dec
das
push
out
dec
mov
aam
dec
mov
scas
xchg
iret
ror
mov
nop
adc
fstp
repz
mov
mov
es
fmulp
inc
je
mov
mov
ja
xchg
dec
inc
cmp
cmps
(bad)
and
mov
sub
mov
popa
sbb
mov
dec
xor
sar
shr
out
push
daa
fcomi
test
inc
xchg
pop
dec
push
dec
sbb
into
es
lods
xchg
ja
sub
cmps
ins
leave
jp
inc
popf
in
rcl
(bad)
call
push
(bad)
test
(bad)
cmp
scas
and
fisttp
pop
js
xchg
or
(bad)
lds
xor
cmp
jle
cmp
or
xchg
xor
imul
or
cmp
dec
int
push
jl
fnstcw
inc
pop
inc
mov
mov
jmp
and
add
movs
sbb
push
push
test
aad
xchg
mov
ja
stc
jbe
add
sbb
jmp
movs
in
mov
dec
or
mov
xchg
mov
fnstenv
xor
mov
sbb
or
inc
and
and
nop
in
cmps
dec
jmp
cli
arpl
call
cmps
adc
dec
neg
movs
jo
loop
mov
call
je
add
mov
push
xchg
lods
xlat
bts
cdq
mov
movs
fld
pop
adc
mov
xchg
scas
xor
out
adc
dec
ja
cmp
mov
xchg
push
clc
mov
in
add
or
inc
fsub
int3
rcr
shl
xor
cmp
mov
or
data16
ja
jle
(bad)
retf
dec
push
push
lds
sub
mov
outs
rcl
jge
icebp
adc
mov
xor
xor
mov
idiv
imul
mov
out
aas
jnp
push
pop
ins
clc
sub
ror
outs
xchg
push
jg
and
adc
or
stc
je
push
(bad)
mov
gs
xchg
xor
int
out
cmps
mov
sbb
dec
scas
loop
inc
in
mov
cli
cmp
cwde
mov
pushf
dec
push
aad
add
jl
repz
mov
popa
fwait
enter
dec
jmp
ret
stos
mov
xchg
push
cwde
shl
bndldx
push
dec
outs
cmp
pop
pop
cdq
pop
sbb
mov
mov
lods
push
lods
aam
mov
and
daa
sbb
test
mov
push
mov
daa
xchg
ja
jl
fucom
fsub
dec
mov
mov
stos
mov
push
outs
push
cmp
fidiv
adc
xor
adc
push
loopne
or
xchg
lds
imul
jns
in
mov
mov
sbb
retf
jecxz
lahf
inc
push
and
xchg
sub
in
and
ds
mov
sbb
jmp
test
fstp
inc
fimul
shl
movs
xchg
adc
sbb
enter
outs
push
cs
movs
xchg
dec
and
xor
pop
push
or
ss
cmp
adc
clc
fnstsw
xor
xchg
(bad)
aad
dec
xchg
ficom
jb
pop
dec
jb
sbb
push
test
shl
mov
stos
xlat
stos
add
sub
sub
jge
sub
(bad)
clc
dec
int3
loopne
jno
xchg
nop
and
cmp
mov
ins
cmps
jbe
fsubr
sbb
ret
imul
fdiv
lods
jo
hlt
xchg
in
push
imul
cmp
je
sti
les
jmp
pop
xchg
mov
cwde
data16
jno
and
jle
and
jmp
nop
iret
jmp
psubusb
xor
sub
dec
xchg
pop
or
mov
dec
scas
pop
cmps
xchg
cmp
add
out
or
lahf
sub
and
movs
jae
cmp
xchg
xor
out
dec
lea
bound
xor
jg
and
lock
mov
pop
add
in
(bad)
cmps
arpl
dec
out
mov
adc
add
lahf
mov
jns
xor
mov
movs
sar
mov
aaa
inc
pop
dec
jbe
mov
mov
xor
(bad)
aam
stc
into
or
xchg
imul
pop
cld
push
test
and
daa
mov
cmp
adc
addr16
xchg
sub
data16
and
call
outs
lahf
clc
cmps
movs
ins
call
ror
rol
inc
test
push
(bad)
in
(bad)
adc
mov
pushf
jo
pop
and
mov
sub
icebp
inc
add
lds
lds
scas
mov
test
hlt
jnp
pushf
enter
sbb
add
xor
push
cmps
cmps
ss
xchg
movs
mov
sub
mov
add
cmps
fstp
xor
mov
in
mov
gs
addr16
in
mov
and
in
sbb
daa
movs
(bad)
out
out
mov
fcmovnu
into
call
pop
pop
out
xchg
jl
retf
fldcw
mov
in
std
pop
pusha
adc
pop
xchg
add
les
jmp
je
xor
ror
dec
cmps
out
sahf
cdq
fnstcw
add
mov
add
cmp
leave
ret
jl
push
mov
das
xchg
jp
sub
repnz
mov
xchg
dec
outs
mov
cmc
sbb
adc
outs
mov
pushf
lods
fwait
mov
jbe
je
mov
push
jp
ins
in
and
pop
add
xor
fisub
or
iret
cli
test
pop
retf
push
hlt
mov
test
push
jno
ins
xor
or
xchg
test
or
jg
(bad)
call
inc
jnp
pop
pusha
mov
bound
mov
mov
ja
add
or
call
jmp
adc
xchg
adc
xchg
dec
cmps
push
aas
and
test
cld
das
mov
and
movs
jbe
add
mov
out
pop
fcomp
push
daa
fcom
das
ds
je
inc
scas
imul
gs
aad
jae
fidivr
das
jmp
mov
call
leave
in
movs
sbb
pop
retf
jbe
in
(bad)
aad
pop
stos
jmp
lods
ins
in
xchg
mul
pop
add
sbb
push
call
jg
in
xor
fs
sub
and
sub
clc
jo
sbb
mov
outs
sbb
inc
iret
pop
jno
loopne
sbb
(bad)
xlat
sub
hlt
inc
scas
cwde
pop
push
dec
push
gs
mov
xchg
iret
repnz
xor
jge
outs
xchg
loope
imul
xchg
add
mov
out
adc
lahf
fadd
neg
xchg
pop
push
lea
mov
mov
outs
in
mov
sar
adc
movs
(bad)
ins
cmp
jmp
pop
dec
test
add
inc
jl
sub
jp
push
out
mov
aaa
mov
lds
jg
xor
loop
ficom
and
icebp
pop
xlat
cmp
daa
pushf
sbb
cmp
imul
es
sbb
fmul
cmp
(bad)
and
add
inc
add
loop
dec
loopne
cli
xchg
cld
jo
leave
aas
out
mov
push
push
leave
jne
mov
jecxz
into
jb
fnstsw
inc
(bad)
jo
cmps
cmps
stos
(bad)
adc
mov
shr
or
fmul
int
stos
mov
loopne
sub
adc
jmp
nop
mov
int
sar
sbb
pop
jle
sub
push
xor
stos
fidivr
mov
adc
jmp
sbb
cmps
inc
addr16
jb
push
xor
jp
call
shl
clc
inc
dec
mov
cmp
call
adc
add
sbb
into
in
mov
test
lods
loop
fmul
mov
inc
push
je
or
ins
adc
jbe
add
push
je
or
hlt
rcr
std
adc
cdq
xchg
in
test
aad
arpl
adc
xchg
mov
shr
sub
dec
aaa
das
or
mov
cmp
push
call
sbb
out
mov
lods
jns
cmp
inc
js
and
loope
not
ror
fldenv
xor
movs
ja
(bad)
mov
cli
xor
sbb
pusha
sar
aaa
xor
cmc
jae
repnz
ds
cmps
popf
int3
mov
ds
xchg
lock
jbe
or
xor
inc
sar
xchg
sbb
dec
popa
mov
iret
popw
and
and
mov
ficomp
xor
(bad)
arpl
pop
scas
test
sub
cmps
lock
cmp
loopne
dec
mov
lea
in
add
callw
loope
iret
mul
push
xchg
outs
xchg
sub
mov
aam
hlt
es
out
(bad)
mov
imul
aad
sbb
fmul
and
cld
fcom
cmc
rol
lahf
mov
ins
or
xor
(bad)
sub
cld
cmp
call
and
dec
(bad)
mov
push
mov
pop
icebp
push
call
or
repz
adc
push
mov
cmp
add
clc
jg
mov
mov
cwde
mov
and
mov
bound
test
aad
nop
and
sub
sbb
adc
or
sub
push
or
sbb
pushf
ja
icebp
mov
dec
lds
aam
leave
jno
enter
pusha
inc
push
cwde
sahf
sub
repz
xchg
adc
xor
xchg
mov
test
dec
lods
in
sub
jnp
xlat
retf
test
jns
cmps
pushf
std
push
ror
pop
(bad)
(bad)
imul
les
(bad)
sub
mov
jmp
ins
xor
xchg
xor
pop
jmp
rol
pop
inc
stos
add
jae
pop
xchg
in
mov
aaa
(bad)
in
pop
cwde
clc
push
jmp
shl
or
mov
sbb
shl
sar
mov
outs
aas
(bad)
test
mov
idiv
cmp
push
retf
outs
sub
cmp
in
sahf
(bad)
nop
xchg
(bad)
arpl
sub
push
idiv
adc
pop
ss
dec
cmps
inc
cmc
jbe
dec
shl
sub
and
addr16
xchg
sbb
xchg
fisttp
lods
pop
xlat
mov
mov
pop
dec
sbb
or
shr
mov
pop
cmps
retf
test
cmp
mov
xchg
loop
test
mov
push
cmps
imul
adc
sub
dec
icebp
mov
fs
push
jmp
cmps
outs
xor
pop
mov
jns
movs
mov
lods
cwde
aaa
pusha
mov
pop
in
nop
jbe
and
sub
fmul
dec
mov
bound
mov
loopne
ret
push
mov
xor
push
jnp
(bad)
not
push
xchg
and
dec
push
ins
xchg
mov
pushf
mov
ins
mov
push
stc
mov
loopne
jecxz
inc
sub
jmp
retf
dec
pop
push
cmp
(bad)
mov
jmp
pop
movs
or
mov
popa
mov
mov
xor
and
outs
cmp
inc
jge
ret
ja
xchg
or
sub
dec
js
add
data16
or
xchg
push
mov
imul
add
bound
xchg
nop
imul
les
loopne
xchg
adc
dec
out
dec
aad
pop
ror
cmp
dec
mov
pop
clc
lea
into
shl
mov
mov
in
stos
or
arpl
outs
test
cli
test
inc
push
movs
fld
mov
arpl
in
es
adc
in
arpl
jmp
xor
pushf
add
sbb
sbb
stc
addr16
mov
inc
jns
add
and
cli
adc
jbe
pop
ja
in
dec
xor
push
push
ds
lock
jmp
hlt
leave
es
lock
in
lods
push
jns
aaa
pop
pop
std
sbb
(bad)
cmp
sti
pop
adc
enter
push
mov
ins
daa
or
in
out
inc
inc
push
push
std
xchg
jno
clc
std
pop
cdq
imul
in
daa
int
mov
xchg
imul
pop
mov
popf
push
or
out
sti
xchg
fidiv
sbb
inc
(bad)
jbe
jo
mov
xlat
xor
ja
inc
js
and
add
and
adc
lods
push
lock
out
mov
jns
xlat
mov
pop
adc
ret
mov
or
loope
xor
mov
int3
iret
inc
cs
pop
dec
rcl
xlat
in
lahf
movs
or
push
fild
pxor
es
cmp
outs
push
sub
push
xchg
fnstcw
rcl
push
xor
push
or
sub
adc
xchg
lods
frstpm(287
xchg
mov
mov
aas
rcl
mov
jmp
jmp
icebp
or
comiss
test
mov
jge
adc
test
cmc
mov
mov
adc
jle
pop
and
cmps
dec
push
or
sub
xor
push
je
iret
sbb
shl
xor
clc
jl
repnz
loope
push
pop
push
lea
xlat
(bad)
pop
pop
adc
cmp
test
adc
pop
and
das
pop
sub
movs
add
aam
movs
rcr
icebp
mov
sar
mov
sahf
aaa
add
je
movs
icebp
add
fst
mov
jecxz
sahf
out
test
pop
shl
sub
clc
inc
push
lock
dec
sbb
and
sbb
data16
cmc
ja
pop
xor
push
hlt
(bad)
fbld
pop
mov
xor
fist
call
dec
sub
mov
add
push
push
adc
add
movs
mov
inc
push
cmp
adc
pop
jmp
lods
mov
(bad)
and
loop
pushf
push
mov
jge
sub
and
inc
inc
imul
jae
xchg
cmp
addr16
xor
lods
inc
push
adc
in
cmp
mov
jle
add
lods
jo
pop
outs
shl
lods
sub
push
aad
cli
test
push
pop
sbb
lds
icebp
sbb
mov
cs
add
ffreep
push
push
(bad)
test
mov
jmp
add
jmp
fidivr
not
std
mov
in
lds
and
dec
mov
mov
test
sbb
or
ret
leave
xor
aam
cmps
add
repz
cmps
leave
js
mov
mov
and
adc
push
xor
inc
rcr
mov
dec
(bad)
mov
in
adc
push
inc
pop
retf
add
mov
arpl
and
test
push
cmps
enter
loop
mov
jge
cmps
xor
lods
call
sbb
les
mov
cld
sbb
outs
ret
lock
adc
daa
cmp
xlat
iret
shr
fwait
mov
and
(bad)
fcmovu
mov
mov
out
inc
cmc
fcomp
fstp
movs
lea
inc
dec
pop
data16
into
dec
sbb
push
mov
repnz
loope
jp
mov
adc
mov
cmps
frndint
or
add
inc
or
scas
sbb
sbb
or
and
dec
(bad)
xor
js
in
mov
mov
mov
lahf
jmp
xchg
enter
and
adc
push
test
ret
cmp
pop
lds
jne
sbb
fcom
or
js
add
xor
(bad)
pushf
sbb
js
int3
mov
retf
sub
mov
or
jmp
jmp
jle
or
pop
ins
dec
jae
add
jmp
sahf
xchg
cli
lahf
inc
pop
pop
xor
popa
retf
shl
repnz
add
mov
fistp
jne
cmp
ja
add
push
inc
int3
sahf
pop
push
cmp
mov
xor
fdivrp
inc
retf
inc
adc
retf
popa
(bad)
jmp
jae
sbb
or
push
movs
add
test
sbb
or
loopne
or
xchg
push
movntq
movs
xchg
nop
hlt
inc
iret
and
sub
aaa
fs
movs
sub
xor
dec
xchg
xor
push
mov
ss
lock
je
movs
cmp
dec
arpl
pop
clc
out
or
scas
(bad)
cld
push
(bad)
(bad)
div
aaa
dec
or
and
pop
pop
fwait
pushf
jbe
dec
add
mov
test
pushfw
add
lods
pop
jecxz
inc
loope
and
leave
clc
rcr
xchg
mov
adc
fistp
and
sar
push
sahf
repz
scas
test
sub
jo
sub
(bad)
fist
(bad)
mov
imul
sbb
push
call
inc
leave
sub
fdivr
sub
leave
ss
stos
fist
xchg
aad
inc
add
jmp
dec
cmp
popf
mov
hlt
mov
inc
std
xor
ds
loop
out
pop
jp
and
mov
xlat
jae
add
idiv
mov
iret
mov
arpl
leave
add
add
lods
js
mov
shl
mov
push
inc
sub
xor
pop
out
push
push
sub
mov
pop
aam
push
les
out
dec
sub
cmc
inc
stc
fucom
ins
ror
mov
mov
scas
add
test
movs
adc
outs
nop
mov
pop
adc
mov
in
ficom
cmp
add
mov
pop
sub
lock
mov
bound
pop
xchg
adc
leave
xchg
push
pop
imul
push
in
jmp
sbb
fisub
cld
mov
inc
or
mov
mov
xchg
jnp
pop
and
(bad)
mov
ds
and
xchg
frstor
jmp
mov
push
mov
or
pop
xor
cmp
int
in
sub
out
and
aam
iret
add
add
clc
not
xor
imul
cmp
xor
add
mov
inc
int
rcl
adc
cli
mov
inc
push
adc
push
in
fnstsw
sub
xor
repz
push
sbb
mov
test
mov
cmps
and
push
adc
dec
daa
or
shl
xor
in
fisubr
cwde
xor
xor
fwait
push
test
add
jne
leave
fidivr
aaa
xor
push
push
adc
enter
loope
jmp
xchg
repnz
xlat
iret
pop
ficom
ret
jmp
dec
test
jae
mov
clc
sbb
mov
mov
aad
mov
jl
call
(bad)
in
jno
inc
cdq
add
mov
sbb
push
dec
sub
test
mov
or
xchg
pop
lods
lods
sub
scas
movs
jmp
sbb
or
jbe
dec
(bad)
fiadd
and
(bad)
or
sbb
mov
pop
int
repz
xchg
mov
jns
xor
(bad)
leave
mov
loop
rcr
add
rol
retf
ja
sub
icebp
test
int
cs
shl
jle
rcl
xchg
(bad)
ja
push
sbb
pop
pop
jno
mov
and
mov
pop
out
sbb
mov
(bad)
cwde
leave
aaa
rcl
jo
lahf
(bad)
mov
xchg
jnp
xchg
call
repnz
sbb
and
movs
push
mov
inc
aam
cwde
pop
rol
stos
aaa
test
cld
mov
loop
jae
in
stos
fbstp
inc
les
pushf
aas
mov
push
push
ret
mov
jnp
mov
imul
mov
enter
iret
sbb
test
xor
ror
mov
mov
dec
pusha
jno
push
inc
popf
imul
das
cmp
aaa
dec
xor
movs
(bad)
sub
mov
bound
sub
lahf
cmps
dec
scas
das
call
xor
or
xchg
and
(bad)
lods
pop
dec
das
mov
inc
mov
(bad)
hlt
xchg
leave
dec
test
jmp
dec
add
aaa
enter
sub
icebp
pop
add
cmp
pop
scas
xchg
adc
add
cdq
bound
mov
ss
pop
loope
push
xchg
add
mov
xor
xor
retf
push
aas
xchg
pop
mov
pusha
push
adc
std
ret
ss
pop
movs
xor
cmps
mov
jo
addr16
fmul
and
dec
adc
test
xor
je
stos
loope
push
xchg
xchg
pop
push
and
jnp
jle
sbb
dec
jg
xchg
push
mov
lock
mov
inc
inc
retf
lahf
push
xor
jno
lods
xchg
mov
inc
cmps
jne
out
sub
dec
arpl
push
dec
lahf
mov
sbb
jno
jns
int3
cmp
fsubr
jnp
sbb
scas
rcr
jl
inc
in
fisubr
adc
ficomp
and
fs
test
shrd
loope
test
fneni(8087
jns
fsub
std
add
test
sbb
xor
dec
and
dec
push
cs
pushf
push
sar
xlat
or
ja
pop
je
adc
xor
call
mov
inc
mov
loop
iret
or
mov
dec
cmp
add
inc
ficom
loopne
mov
xor
push
mov
jae
and
lods
adc
or
xlat
adc
sub
sti
pop
mov
repz
std
scas
push
shl
or
xchg
adc
cmp
cld
outs
push
adc
pop
inc
div
retf
fld
sbb
enter
repz
sub
test
push
ret
xor
or
cmps
push
xor
lds
aaa
jo
fistp
dec
(bad)
int3
ins
mov
hlt
mov
fidiv
adc
repnz
sub
fmulp
in
mov
mov
jge
lea
jmp
out
sub
and
sub
sub
pop
jnp
adc
sbb
ficomp
js
loopne
and
into
jl
push
push
mov
movs
jno
inc
int3
and
mov
xor
mov
adc
jmp
pushf
xchg
int3
sbb
dec
fmul
cmp
sub
xchg
pop
jb
stc
mov
jg
mov
(bad)
loop
mov
cmps
sbb
sub
inc
pop
outs
or
inc
and
add
enter
push
jbe
pop
aas
stos
xchg
es
test
mov
inc
jge
and
jmp
and
jle
mov
out
fwait
call
loope
std
es
mov
pusha
hlt
mov
mov
xchg
add
cmp
data16
adc
mov
loopne
jecxz
fcomip
mov
das
or
popa
inc
iret
enter
mov
sbb
xchg
cmp
pop
pushf
int
xlat
inc
push
std
sti
std
ret
inc
mov
fdivr
mov
mov
scas
les
push
arpl
add
fnsave
mov
sbb
dec
dec
mov
mov
in
cmc
cmps
xchg
inc
sbb
add
fcom
aam
loop
jb
xchg
and
aad
fsubr
mov
push
jae
adc
dec
mov
push
mov
adc
add
jecxz
dec
xchg
repnz
retf
or
(bad)
data16
loope
push
mov
lahf
mov
pop
pusha
push
js
iret
xchg
and
mov
mov
mov
test
rol
test
pop
or
rol
mov
dec
outs
push
or
test
sbb
or
or
in
out
adc
xchg
ret
fs
add
add
(bad)
hlt
sbb
int3
inc
pop
adc
imul
cmps
adc
aam
cmp
mov
ins
pop
(bad)
fmul
nop
add
outs
push
rcl
call
pop
inc
imul
mov
adc
xor
aam
scas
inc
lea
test
outs
rol
jmp
into
jg
jecxz
xchg
popa
or
nop
out
adc
inc
add
(bad)
clc
and
in
jae
mov
pop
into
and
jl
stc
pop
out
inc
jge
mov
ret
mov
cli
gs
cmp
jbe
stc
cmp
mov
jmp
loope
outs
mov
inc
(bad)
sub
sbb
xchg
test
jbe
add
iret
sbb
pusha
or
lods
mov
icebp
push
cmp
fs
outs
cmps
(bad)
rol
jbe
fsubr
push
das
inc
push
retf
jp
mov
test
js
addr16
enter
push
cmp
cmp
loope
loop
inc
retf
push
pusha
push
shl
fwait
mov
stc
pop
xor
jmp
inc
xor
pop
pop
jp
dec
mov
icebp
dec
inc
xchg
sub
cmp
xor
movs
inc
rcr
push
ss
xor
repz
ins
into
or
mov
(bad)
cmc
test
inc
mov
test
retf
inc
cli
mov
gs
mov
pushf
adc
mov
fwait
loopne
ror
ds
adc
push
mov
scas
jne
(bad)
in
les
jmp
and
rol
inc
retf
jns
inc
inc
movs
xor
and
iret
aam
xchg
sbb
iret
jmp
ja
sub
and
mov
fidivr
xchg
inc
xor
out
dec
mov
adc
cmps
and
pop
xor
dec
xchg
xor
outs
rcl
push
adc
popw
xor
mov
adc
shl
mov
stos
sahf
push
dec
ja
mov
shl
out
leave
cmp
(bad)
(bad)
mov
dec
xchg
push
or
mov
test
xor
push
sub
cmp
js
or
cmp
out
shr
and
cmp
movs
adc
jp
fnsave
mov
rcr
fwait
mov
outs
pop
adc
gs
fbstp
xor
cs
add
loop
enter
loopne
out
lds
push
sti
sbb
stc
sub
retf
push
xchg
div
inc
(bad)
sbb
repnz
movs
(bad)
int3
or
dec
enter
pusha
es
or
mov
popf
jnp
adc
into
data16
mov
cmp
jo
mov
adc
dec
push
or
clc
mov
mov
xchg
mov
mov
jbe
mov
dec
mov
cmp
pop
(bad)
fsubr
mov
inc
rcl
les
fld
mov
mov
aaa
push
fidiv
mov
aas
mov
ins
shl
popa
mov
pop
sub
mov
inc
cs
cmp
xor
mov
stos
mov
mov
ss
jecxz
sub
mov
loopne
or
xlat
popa
shr
sub
fs
mov
sbb
pop
stc
in
arpl
jmp
in
mov
push
xchg
push
imul
and
lahf
jle
iret
(bad)
out
or
mov
xor
call
adc
push
jecxz
dec
jl
add
inc
scas
shr
dec
sub
adc
popf
cmc
and
call
cdq
dec
dec
cmp
loope
jmp
(bad)
jmp
mov
ds
fxch
pusha
fs
cmp
adc
rcr
lods
xchg
daa
adc
push
cdq
dec
jns
mov
pop
lods
in
sbb
ins
cmp
sub
mov
aas
push
into
push
and
shl
icebp
mov
push
loope
xor
and
sahf
call
inc
outs
gs
retf
and
ss
push
in
test
dec
jge
in
pop
fs
cmp
mov
scas
or
inc
pop
xchg
jo
push
test
mov
mov
sbb
mov
ja
push
data16
call
pop
xor
and
pop
dec
daa
sbb
fidiv
mov
idiv
repnz
sub
das
hlt
je
dec
mov
add
scas
scas
mov
int3
xchg
mov
and
and
and
in
fistp
(bad)
pop
das
shl
pop
lods
and
das
enter
jl
xor
mov
(bad)
xchg
or
mov
xor
pushf
jo
or
movs
cmp
sahf
(bad)
jno
xchg
je
push
mov
push
xor
inc
fild
pop
xchg
test
jl
inc
mov
and
pop
pmulhuw
inc
stos
test
out
ds
daa
jge
sbb
jp
loope
pop
adc
sbb
loopne
aas
sub
jg
push
ins
sub
pop
retf
push
push
inc
xchg
add
out
or
ror
lea
xor
int3
aaa
imul
mov
cmp
push
scas
cmc
mov
add
lea
mov
xchg
scas
lea
mov
ds
pop
inc
adc
das
push
mov
mov
adc
jne
pop
or
daa
test
dec
and
cdq
cli
mov
inc
ja
pushf
jns
dec
outs
enter
inc
jae
mov
stos
in
fsub
sbb
mov
pop
push
shl
jmp
push
xor
pop
pop
outs
or
cmp
aaa
xchg
pushf
push
pushf
jbe
rcl
cmp
fist
ins
retf
mov
sbb
dec
pop
(bad)
sub
movs
mov
addr16
add
outs
retf
imul
mov
pop
outs
aaa
xor
push
fs
jmp
or
repnz
and
and
cli
mov
add
scas
out
mov
daa
mov
push
push
or
enter
or
pop
mov
mov
leave
(bad)
cli
sub
sub
push
daa
push
add
xor
push
aaa
iret
int
cmp
fistp
dec
out
inc
pop
or
push
or
or
out
xor
test
(bad)
pop
outs
mov
fild
mov
call
loop
adc
dec
ss
imul
cmps
and
call
repnz
fld
lds
je
retf
cwde
inc
push
mov
jmp
push
shl
fs
movs
push
hlt
clc
les
xchg
out
push
mov
popf
cmps
jmp
mov
sub
mov
sbb
jp
sbb
and
aaa
adc
js
push
shl
or
mov
icebp
pop
(bad)
jmp
pop
and
mov
shr
dec
xor
(bad)
dec
xchg
cmp
mov
ss
mov
sahf
jp
pop
push
fist
imul
pushf
shr
fidivr
jle
dec
into
fisub
cmp
movs
add
les
cmps
gs
xchg
les
movs
ret
repnz
icebp
fisubr
cmc
ins
push
enter
out
jge
popa
xor
lods
or
es
jmp
pop
mov
jg
lock
mov
or
inc
xor
xchg
je
les
mov
fcmovnbe
mov
jge
mov
inc
or
(bad)
cli
xor
xor
ret
or
ds
xchg
fmul
sub
jb
in
dec
adc
dec
lods
jno
in
add
jno
dec
push
jne
push
rcr
std
rcl
shl
pop
jb
in
jp
pop
cmp
xor
or
xchg
sbb
cmp
pop
push
ficomp
mov
rcl
dec
push
mov
push
or
stc
add
aam
jl
out
cmp
pop
lock
das
mov
adc
mov
mov
inc
(bad)
imul
and
lea
cmp
call
or
xchg
(bad)
add
call
ror
in
mov
xor
jge
arpl
dec
and
es
jmp
ins
or
and
mov
add
popf
xor
or
and
icebp
ds
mov
jecxz
pop
fcom
add
push
(bad)
outs
out
mov
out
sbb
and
mov
in
and
call
jno
mov
or
sub
jg
mov
sbb
test
(bad)
fidivr
aad
pop
and
pop
test
fdiv
mov
das
retf
dec
je
leave
cmp
sub
stos
xchg
mov
mov
leave
adc
xchg
sub
(bad)
adc
fist
push
mov
mov
dec
inc
dec
lods
lock
dec
mov
mov
jge
mov
sub
loope
cmp
nop
push
jbe
add
mov
repnz
sub
fnstenv
(bad)
fwait
dec
and
test
pushf
xor
push
(bad)
mov
push
test
test
in
(bad)
not
jnp
pusha
add
fld
inc
mov
cli
jle
cs
pushf
enter
loop
pop
push
retf
fld
shl
xchg
lods
ins
loope
inc
(bad)
(bad)
ror
addr16
ret
push
and
cld
pushf
push
std
or
mov
enter
jmp
or
sti
cmp
cli
and
mov
nop
ins
add
cmp
repnz
sbb
cmp
jmp
mov
and
jl
loopne
(bad)
jmp
cli
and
xchg
mov
sub
inc
xor
fisubr
pop
jno
mov
dec
out
pushf
xchg
add
dec
ds
add
jo
xchg
pop
es
test
mov
mov
das
push
sar
lods
out
xor
aas
repnz
cmp
jl
jae
fwait
aas
movs
imul
pop
cmp
arpl
or
mov
jmp
aaa
ss
sar
and
ret
xor
jbe
push
cmp
sar
out
sub
adc
adc
mov
ja
push
ficom
or
fsubr
mov
jns
jecxz
adc
cdq
imul
dec
jg
test
pop
jnp
pop
outs
adc
ja
dec
mov
pop
retf
mov
jo
adc
outs
lods
rcr
or
sar
mov
cmp
xor
xchg
xchg
outs
fcmovbe
pop
mov
lods
add
sub
imul
out
push
pusha
(bad)
std
cmp
mov
sbb
call
js
xor
in
aaa
arpl
inc
sbb
pushf
sti
cmps
ds
inc
bound
popa
mov
pop
gs
push
mov
out
mov
mov
add
fild
xchg
dec
pop
jno
xchg
dec
and
fisttp
and
retf
retf
fwait
repnz
sbb
adc
sbb
je
inc
ja
sbb
cmp
shl
in
jo
push
fsub
mov
lahf
mov
gs
xor
dec
adc
out
jns
pop
xor
inc
hlt
adc
xchg
sbb
out
pop
aad
mov
sbb
mov
cmps
cmps
lahf
pusha
xchg
inc
dec
bound
jl
push
mov
mov
out
dec
and
sub
xchg
dec
pop
mov
jmp
jmp
retf
rol
lds
inc
ja
pusha
xchg
sbb
out
and
add
push
cmp
fnstsw
das
xor
bound
test
jecxz
cli
clc
bound
sbb
push
mov
das
cwde
cmps
cmps
fbld
dec
test
loope
jg
mov
fisttp
iret
add
retf
cmp
cli
lock
imul
xchg
push
ins
adc
scas
xchg
loopne
ror
mov
jle
fiadd
imul
sbb
mov
jecxz
popf
mov
std
out
and
add
fldenv
dec
dec
popf
add
mov
test
dec
arpl
sbb
or
adc
loop
xor
shl
int3
es
jne
cmc
pop
pop
lock
xchg
popf
or
xchg
into
cmc
sbb
sbb
test
mov
lods
jmp
ret
push
fcomp
imul
call
sub
call
jp
(bad)
and
jae
dec
mov
scas
mov
arpl
mov
dec
pop
sbb
fwait
je
inc
xchg
shr
js
jo
sbb
adc
pop
sub
hlt
les
mov
fcompp
maskmovq
mul
sub
mov
adc
repz
mov
test
xor
ds
int3
mov
or
mov
mov
loope
repz
push
inc
xchg
or
stos
in
(bad)
and
out
(bad)
cmp
jae
pop
sub
or
aam
lods
xchg
dec
dec
(bad)
adc
mov
call
test
xor
cmp
adc
pop
jecxz
jecxz
jmp
pop
(bad)
(bad)
or
and
mov
cmp
push
iret
inc
mov
adc
div
out
gs
outs
mov
pop
fsub
loope
adc
jg
push
inc
xor
inc
ins
addr16
inc
push
mov
lods
in
mov
pop
push
or
sub
ret
or
mov
cmp
mov
fnsave
ficomp
xchg
test
inc
outs
push
push
xor
fdivr
add
hlt
rol
or
xchg
jne
pop
lea
xchg
test
cmps
xor
and
push
jb
lea
(bad)
scas
outs
xchg
adc
push
and
jg
push
push
adc
cmp
mov
enter
cmps
gs
scas
ja
sbb
mov
jnp
xchg
call
mov
sar
in
add
cmp
(bad)
in
sar
retf
fnstcw
push
lea
dec
push
hlt
and
jp
cmp
ud2
adc
pop
push
jge
lock
test
ja
xor
mov
bound
lahf
scas
repz
shr
push
xor
and
out
jae
mov
ja
lock
in
stos
test
jecxz
sbb
(bad)
jp
jno
outs
movs
pop
stos
xlat
xchg
sbb
add
add
mov
pop
sbb
fs
mov
in
out
dec
pusha
or
push
pop
das
dec
movs
add
inc
xor
test
daa
adc
sbb
xchg
lods
call
pop
jmp
xchg
sub
fdivr
retf
fbstp
mov
xchg
cmc
jl
outs
jnp
mov
int3
adc
not
jecxz
fldcw
inc
add
jb
lock
cdq
sbb
cld
or
pop
mov
movs
sub
inc
or
push
pop
es
stos
mov
add
add
jmp
fimul
xor
add
cmp
pop
push
sti
xor
stc
jo
sahf
inc
sbb
rol
test
or
jae
inc
cmp
fwait
jle
jmp
xor
push
arpl
mov
ror
(bad)
movs
imul
jmp
rcl
xor
mov
sbb
call
jo
aas
in
rdmsr
jmp
mov
sub
sub
aam
adc
push
sbb
inc
mov
mov
pop
dec
dec
sbb
adc
push
mov
inc
nop
fnstcw
imul
push
out
add
mov
rcl
xor
dec
repz
pop
sub
sahf
push
unpckhps
es
stos
push
cmps
aas
mov
push
lods
jmp
fstp
imul
jle
(bad)
retf
mov
mov
les
sub
shl
inc
or
adc
sbb
(bad)
mov
mov
shl
inc
pop
mov
inc
cmp
xchg
mov
sbb
add
fstp
and
dec
add
cmps
cmps
mov
fstp
pop
stos
push
test
add
rcl
push
ja
mov
retf
sub
in
nop
mov
ds
add
xchg
repnz
(bad)
jecxz
out
xlat
mov
push
rcl
loopne
xor
xor
aam
mov
jp
das
inc
dec
sti
dec
les
fwait
xor
(bad)
xlat
ins
repz
lods
sbb
sbb
aam
push
(bad)
(bad)
rol
push
movs
and
test
push
adc
arpl
ret
out
pop
and
je
adc
outs
and
aas
xchg
push
xchg
pop
in
mov
mov
xchg
or
mov
lahf
clc
mov
adc
js
or
imul
enter
jmp
pop
mov
in
sbb
movs
mov
inc
jp
jle
int
ins
aam
les
loope
push
xor
dec
lds
or
imul
or
mov
outs
jb
pop
iret
je
mov
dec
mov
or
sbb
popf
lahf
xchg
not
sbb
stc
fld
pop
add
adc
or
cmc
push
(bad)
rep
les
xchg
mov
out
fnsave
retw
movs
cmp
fwait
sub
add
dec
pop
in
cmps
pop
loop
hlt
push
or
mov
test
loop
lea
jecxz
ret
dec
add
data16
pop
xor
jo
(bad)
dec
jo
(bad)
xchg
lea
dec
sub
and
mov
(bad)
dec
adc
push
(bad)
lds
pop
stos
dec
and
(bad)
or
test
fiadd
xchg
in
push
iret
pop
xor
jbe
xchg
cli
(bad)
sbb
(bad)
scas
mov
mov
int
fs
and
push
pushf
loop
repz
fiadd
fsubr
mov
xor
xor
out
shr
fwait
push
rcl
add
dec
dec
mov
(bad)
jo
pop
jl
bound
add
pop
loope
(bad)
xchg
addr16
in
not
or
ficomp
jecxz
retf
jl
add
pop
cmps
or
out
mov
xor
pop
iret
push
mov
pop
pushf
aam
leave
nop
loop
add
push
adc
mov
adc
xor
das
mov
sahf
int
imul
adc
popf
inc
cdq
add
popf
inc
mov
cmp
outs
lock
adc
rcr
(bad)
mov
fcom
in
fnstsw
(bad)
out
leave
xchg
out
cli
add
add
push
repz
iret
mov
sub
xchg
mov
arpl
aas
or
outs
or
aaa
into
and
mov
cmp
ret
es
retf
dec
adc
outs
pop
aad
push
sub
daa
mov
or
mov
mov
loop
cwde
lock
imul
rcr
mov
and
fldenv
int
mov
ins
in
js
adc
scas
adc
push
cmps
cwde
jge
int
dec
std
pop
ror
xor
xchg
add
add
xchg
js
repz
retf
sahf
push
mov
xchg
mov
mov
mov
or
fwait
adc
ds
add
retf
jp
or
cs
dec
sbb
popf
fst
lods
pop
adc
jecxz
xchg
repz
sbb
push
mov
add
push
inc
cli
add
cmp
lods
jne
pop
stos
or
sbb
mov
mov
adc
push
mov
push
sti
xchg
rcl
jg
mov
ja
imul
retf
iret
dec
rcr
call
and
inc
hlt
mov
nop
repz
mov
pushf
dec
les
fsub
jbe
in
fisttp
std
push
mov
test
mul
and
jmp
xchg
cmp
push
adc
xchg
movs
je
dec
xchg
jl
test
sub
xor
cwde
int
stc
icebp
jle
dec
and
repz
loopne
mov
loopne
adc
retf
push
test
fstp
mov
sbb
jmp
enter
lahf
mov
dec
inc
jo
and
xor
mov
xchg
xchg
push
es
add
or
cmp
ret
sub
cwde
mov
mov
sbb
pop
and
push
inc
ins
hlt
jb
jbe
fist
push
mov
mov
and
dec
ret
ds
jg
shl
loopne
sbb
test
leave
and
dec
push
mov
in
movs
iret
ss
pop
adc
xchg
cld
imul
dec
inc
aaa
pusha
sbb
fdiv
inc
aam
jecxz
imul
push
adc
in
fist
aad
sub
adc
cmc
lahf
adc
and
out
jne
jge
js
mov
outs
movs
and
inc
xchg
push
enter
mov
ret
xor
and
push
inc
popf
scas
movs
push
gs
push
jnp
jbe
push
les
mov
and
out
jae
xchg
ret
popa
add
pop
mov
xlat
int3
pop
dec
imul
popf
and
pushf
jge
sbb
adc
xor
sub
clc
xor
sti
repnz
jns
or
jo
fisub
aaa
int3
jp
aam
arpl
mov
arpl
add
clc
rcr
xor
pop
fadd
and
dec
jae
ss
hlt
ss
lahf
aas
push
scas
mov
mov
aas
pop
mov
les
ret
(bad)
(bad)
js
popf
(bad)
pop
lds
arpl
cwde
aas
lods
adc
inc
push
mov
vpcomuq
jecxz
nop
pop
cwde
add
push
inc
jbe
push
outs
jne
add
xor
leave
adc
je
xor
sbb
iret
sub
adc
fnstenv
xor
push
fwait
mov
xchg
fisub
inc
xor
clc
enter
retf
rol
and
jl
pushf
int3
or
mov
test
pop
jge
jo
popf
jne
sti
mov
xchg
outs
call
mov
test
(bad)
xchg
idiv
jae
dec
pop
ins
push
(bad)
or
(bad)
pop
adc
inc
fwait
xor
mov
leave
cmp
icebp
push
addr16
test
and
add
push
stos
jb
and
pop
data16
mov
test
mov
push
fs
ret
into
inc
mov
mov
add
(bad)
sub
mov
inc
pusha
out
ds
jb
repz
add
rol
push
push
xor
jl
cld
fs
mov
add
mov
cmp
ret
fisubr
ret
cld
adc
retf
das
jne
outs
add
inc
js
ins
rep
sbb
cld
out
(bad)
std
js
mov
mov
das
ins
aad
sbb
pusha
jnp
sahf
inc
mov
sbb
add
je
mov
adc
iret
push
pop
cld
jb
pop
pop
mov
and
add
mov
cmp
mov
and
stos
in
xor
dec
(bad)
push
sar
and
xchg
mov
add
scas
pop
mov
sub
jo
inc
es
and
(bad)
xor
loopne
xchg
add
adc
test
cmc
or
sti
ins
add
mov
je
push
fcom
ss
xor
ret
xor
repz
sar
sub
pop
inc
jle
mov
add
pop
inc
and
(bad)
scas
into
pop
mov
pop
push
sbb
std
out
dec
push
clc
mov
push
inc
out
mov
movs
fwait
pop
sbb
sub
xor
push
add
cmc
les
dec
repnz
mov
call
iret
adc
sub
sub
fnstcw
lds
and
sub
pusha
(bad)
aam
pop
loopne
mov
movs
lods
loop
ins
retf
out
out
xor
inc
js
xchg
in
pop
cwde
data16
lahf
fdivr
mov
lahf
(bad)
into
out
int3
pop
mov
pop
dec
adc
push
ficomp
(bad)
fcom
mov
popf
ror
ret
push
dec
inc
fst
mov
inc
adc
push
xor
jb
(bad)
pusha
push
stos
or
push
mov
jmp
pop
sub
sub
cld
aaa
lods
inc
test
mov
or
(bad)
hlt
and
pop
mov
mov
sahf
shr
adc
and
mov
mov
sub
inc
cwde
pop
test
enter
mov
jae
push
and
stos
push
mov
push
xchg
jbe
inc
push
jo
push
adc
loop
cdq
pop
add
adc
lds
pop
xchg
sub
cmp
pop
and
push
lods
lahf
mov
sbb
icebp
test
dec
int3
in
fs
dec
or
sbb
jbe
pop
rol
fwait
add
fst
push
sti
inc
add
sub
lock
mov
pop
int3
rol
add
fwait
(bad)
xchg
test
shl
inc
push
jb
adc
xchg
aam
js
pop
outs
stos
lods
shr
or
pop
xor
ret
sbb
fxch
mov
xor
imul
xchg
and
dec
dec
leave
aaa
mov
inc
ret
test
and
push
push
fsubr
and
jp
push
inc
ins
outs
hlt
movs
or
(bad)
cmp
mov
movs
cmps
jge
pop
retf
jmp
mov
clc
icebp
(bad)
maxps
test
pop
mov
ror
jge
les
scas
and
call
(bad)
loopne
push
push
enter
int3
pop
fnstsw
aad
out
or
(bad)
lahf
pop
cmp
pop
sub
mov
je
and
leave
retf
push
stos
repz
fcom
fadd
jp
push
shr
ret
ds
scas
rol
push
add
jns
cmps
mov
xchg
test
xor
xchg
(bad)
es
jb
icebp
jmp
repz
lods
inc
out
lds
dec
repnz
fadd
(bad)
mov
sbb
(bad)
test
loop
pop
inc
xor
cs
mov
pop
mov
retf
dec
cmp
push
xlat
mov
mov
aam
imul
jge
jmp
xor
adc
mov
or
ss
test
mov
std
cmps
cmp
je
imul
sub
sub
(bad)
sub
inc
push
and
add
leave
mov
loop
adc
pop
push
cmp
mov
sub
fwait
fs
adc
ss
retf
pop
cwde
int
push
cli
repnz
sbb
retf
arpl
cmp
clc
pop
and
rcr
int3
pusha
xor
movs
xchg
cmp
and
mov
pop
lods
scas
add
ret
xor
fmul
stos
mov
daa
fld
test
aam
test
mov
adc
add
and
push
in
data16
add
arpl
pop
aam
sbb
adc
push
dec
inc
(bad)
pop
cmps
adc
into
pop
retf
and
pusha
push
mov
jecxz
(bad)
in
(bad)
lods
loopne
data16
cmps
call
iret
pop
retf
or
add
push
pop
dec
ss
ins
scas
push
jl
mov
popa
aam
call
pop
test
dec
mov
dec
pop
dec
outs
lds
ror
cdq
shl
movs
inc
or
iret
movs
gs
aam
repz
imul
adc
add
push
outs
loopne
xchg
push
pop
jne
fidivr
jg
sbb
sub
stos
repnz
stos
and
int
lods
sub
arpl
loop
mov
pop
xchg
scas
(bad)
in
or
ds
loop
cmp
leave
ror
jecxz
jne
xlat
or
in
mov
sar
mov
stc
into
jae
add
mov
jmp
leave
fs
movs
stos
shl
mul
cmp
xor
jge
mov
dec
adc
fnstcw
movs
adc
cmp
xor
inc
movs
dec
in
pop
bound
out
xchg
movs
js
gs
fldcw
bound
ja
pusha
jp
cmp
sbb
enter
inc
mov
push
jmp
and
in
cld
xor
xor
or
inc
cmc
add
ins
test
add
daa
data16
push
inc
xchg
out
lahf
ror
pusha
add
inc
xchg
sbb
les
out
pop
hlt
push
jge
add
dec
dec
sbb
push
adc
mov
push
sbb
test
shr
pop
jmp
xchg
mov
daa
inc
inc
mov
enter
call
inc
in
aaa
pusha
mov
sbb
sub
xor
jno
neg
jp
xchg
gs
jecxz
div
mov
add
or
cmp
ficomp
dec
cmps
cwde
dec
cmp
fst
and
jbe
ror
sub
(bad)
mov
(bad)
retf
stc
cmp
push
or
sub
add
mul
xor
mov
int
inc
mov
push
test
mov
fild
jl
jmp
arpl
fild
pop
fwait
gs
stos
mov
xor
int
aas
cmp
sbb
cmp
cmp
out
pop
mov
loop
ds
pop
iret
fstp
cli
jmp
mov
xchg
loop
dec
or
gs
adc
inc
add
cmp
inc
inc
add
push
mov
mov
push
xor
cmc
inc
or
test
jp
push
adc
les
add
xchg
fdiv
in
adc
sbb
jno
and
xor
xor
shl
iret
jnp
test
call
xchg
pop
repnz
pop
inc
push
aas
mov
arpl
cmp
adc
jp
add
pop
mov
pop
push
push
(bad)
pop
inc
call
(bad)
retf
xchg
test
dec
cmp
dec
in
sbb
scas
xchg
add
jno
mov
push
std
add
cmps
mov
sbb
push
ins
test
pushf
pop
or
sbb
dec
jns
and
xchg
int
sbb
xlat
pop
aam
push
(bad)
repnz
aam
add
add
inc
lock
out
mov
dec
ror
add
inc
sub
sub
ret
test
inc
jns
sbb
jl
fild
out
pop
lods
int
pop
inc
stc
sub
add
jnp
inc
add
xlat
les
mov
jg
mov
xor
or
outs
xchg
aas
xchg
sahf
pop
xor
push
pop
ds
ds
and
je
outs
or
add
fild
(bad)
hlt
or
(bad)
retf
jbe
cmp
jnp
pusha
out
push
cdq
cmp
cmp
into
rcr
(bad)
mov
xchg
jno
adc
mov
sbb
inc
mov
das
in
sti
in
sub
push
pusha
add
sahf
push
adc
adc
adc
in
dec
xchg
add
mov
add
xchg
rcl
xor
cwde
movs
mov
mov
push
imul
sub
mov
jne
push
sbb
je
adc
out
in
mov
call
sbb
lahf
add
leave
push
test
call
aam
(bad)
sub
std
cmp
hlt
push
sbb
jns
and
pusha
or
(bad)
push
fiadd
icebp
daa
push
ret
pop
cmp
xchg
xor
aam
loop
mov
icebp
lds
push
jg
aas
cld
es
dec
pop
iret
cmp
xchg
jmp
dec
movs
mov
push
mov
cmps
mov
xchg
sbb
mov
sub
outs
loope
inc
je
add
scas
data16
xchg
movs
xlat
push
stos
jle
pminub
xor
cmp
pusha
dec
xor
fsubr
xchg
scas
and
push
sti
cld
arpl
stc
test
out
dec
retf
dec
mov
mov
jbe
std
daa
lock
(bad)
and
cmc
pop
and
aaa
add
push
test
sbb
popa
inc
sbb
mov
int3
and
jg
jle
or
push
inc
pop
or
imul
outs
enter
sti
sub
iret
sahf
loop
adc
iret
mov
pusha
mov
cmp
and
add
shr
xor
or
pop
sbb
sbb
std
in
adc
(bad)
jne
sub
gs
movs
aas
aad
shl
leave
inc
fcmovne
mov
dec
jmp
sahf
popf
add
add
out
ss
xor
pop
mov
jno
dec
cwde
xchg
cmc
jnp
dec
ins
cmps
fdiv
int
adc
sub
sub
mov
add
adc
mov
jno
sub
pop
lds
jne
cmp
push
mov
jmp
inc
dec
dec
xchg
mov
xor
ss
adc
add
xor
stos
jmp
ret
pop
int3
xchg
cmps
add
or
scas
pusha
das
mov
sub
mov
aam
ret
xchg
daa
arpl
mov
dec
or
mov
jp
leave
in
sbb
jecxz
adc
sub
cmp
or
std
xchg
push
imul
(bad)
repnz
mov
fwait
add
fisub
movs
fs
adc
mov
add
inc
adc
stos
xchg
das
push
inc
call
push
int
sbb
mov
inc
or
add
sbb
daa
(bad)
(bad)
jns
fistp
dec
loop
pop
mov
jnp
ret
ret
sahf
dec
xchg
jl
xchg
aam
and
push
xchg
mov
popa
popa
fild
pop
into
cmps
gs
not
fisttp
ror
sbb
dec
test
call
hlt
sbb
popf
dec
mov
fs
jg
adc
lea
mov
out
mul
arpl
iret
cmp
xlat
pop
push
cmp
sbb
test
test
into
movs
js
sub
push
cmp
or
jns
jmp
clc
push
jg
nop
jae
or
push
popa
mov
aad
int3
inc
ins
ins
xchg
fmul
mov
xchg
sub
mov
jno
retf
push
repz
mov
mov
inc
or
push
inc
and
movs
dec
mov
out
jmp
inc
fs
imul
bound
jecxz
xlat
inc
pop
gs
mov
pop
(bad)
xchg
icebp
push
cmp
xor
scas
and
sti
jno
not
(bad)
push
cld
daa
xor
and
cmp
mov
aaa
xchg
push
jge
push
or
push
movs
mov
ja
data16
cmp
ret
dec
ror
stos
push
cmp
div
hlt
adc
and
(bad)
dec
mov
pusha
adc
xor
sbb
push
lea
cwde
push
inc
inc
push
push
pop
cmp
xor
popa
sbb
xchg
adc
pop
xchg
lds
inc
cld
jmp
mov
mov
pusha
xor
out
sub
sbb
xchg
rol
mov
and
mov
ins
jecxz
or
in
pop
jg
push
test
sahf
mov
mov
sub
or
cmp
xor
xchg
les
lahf
shr
mov
imul
sbb
mov
or
pop
push
test
jmp
adc
imul
inc
sbb
xchg
dec
lods
pop
cmp
js
mov
(bad)
in
pop
shr
arpl
(bad)
mov
fld
jl
pushf
fisub
xor
and
mov
adc
cmp
xchg
pop
mov
rol
std
cmp
popf
pop
jbe
loope
sub
pop
sbb
jge
cmc
mov
outs
(bad)
retf
xchg
sub
pop
cmp
dec
jb
mov
cld
cmp
sub
cmc
mov
push
arpl
std
js
adc
sbb
test
inc
inc
mov
das
enter
and
sbb
jmp
fcomp
or
push
lods
aad
aam
mov
pop
fdiv
ret
into
fidivr
mov
dec
imul
outs
enter
out
outs
rol
inc
pop
adc
je
arpl
in
imul
xor
in
mov
cmps
and
dec
ja
shl
fmulp
popf
addr16
fcmovb
rol
cmps
imul
add
sub
mov
pop
pop
xor
mov
jmp
xor
sub
mov
std
fwait
cwde
(bad)
repnz
push
add
arpl
out
and
mov
(bad)
pop
sbb
jp
mov
pop
or
mov
mov
jmp
inc
jmp
jnp
cmp
fld
push
mov
test
add
jmp
cmp
cmp
or
pop
cli
sub
pop
sub
push
mov
leave
mov
sbb
adc
ret
sbb
dec
xor
popa
test
mov
mov
cld
cmp
mov
mov
mov
add
std
push
add
mov
pop
std
push
xchg
std
xor
lock
push
int
jns
add
popa
inc
dec
mov
push
mov
adc
enter
sub
icebp
mov
pop
mov
and
inc
rol
mov
xchg
or
xlat
adc
call
sbb
icebp
or
pop
push
sub
mov
pop
xchg
mov
mov
pusha
(bad)
imul
xor
fistp
(bad)
fwait
out
dec
loopne
jle
jo
out
and
dec
clc
gs
xor
int
pop
rcr
pop
fadd
jnp
imul
mov
mov
(bad)
aam
popa
fldenv
aad
dec
push
cmp
loope
popa
cs
stos
xor
mov
enter
ss
sub
sbb
xchg
test
inc
pop
jl
mov
xchg
cmp
stc
xor
jno
push
enter
ret
pop
mov
inc
dec
pop
dec
or
xor
xor
add
mov
mov
jns
mov
pop
jo
mov
jbe
pop
mov
pop
arpl
jnp
outs
fldl2t
das
mov
push
mov
js
adc
mov
outs
inc
jo
jae
sbb
mov
mov
stos
and
or
cmc
inc
jb
fnstenv
loop
jmp
ja
mov
cld
pop
push
mov
shr
ins
fild
sbb
push
inc
fistp
lds
dec
inc
or
xor
js
add
mov
dec
dec
dec
xor
inc
dec
retf
mov
pusha
lds
add
dec
inc
jp
pop
dec
shr
pop
imul
xchg
mov
sbb
into
and
ins
rol
sub
and
xor
addr16
xor
inc
and
jge
mov
cmp
arpl
jmp
mov
adc
or
cmps
fst
pop
cmp
ds
stos
scas
mov
mov
(bad)
test
push
cli
mov
jne
dec
sub
xchg
and
sahf
outs
imul
cmp
or
cs
or
dec
mov
das
mov
pop
dec
xchg
and
pop
imul
inc
in
sahf
daa
rol
call
std
dec
fnstsw
int
fstp
idiv
cmps
ret
jmp
lock
sar
or
loop
inc
and
jmp
(bad)
ds
data16
sbb
and
ss
outs
push
sbb
or
add
ror
sar
cmp
mov
test
pop
jno
add
xchg
adc
add
inc
fild
pop
sbb
js
jle
mov
arpl
(bad)
jnp
aas
nop
xchg
xchg
add
int3
and
xlat
sub
and
jno
or
cmc
cwde
ja
into
and
rcr
cmp
(bad)
dec
data16
lods
and
scas
sub
inc
mov
cmp
sbb
mov
arpl
pop
fwait
xchg
push
enter
sbb
push
movs
and
jp
and
mov
stos
sbb
sub
add
loop
fs
jg
loope
mov
jb
xchg
cmp
add
jmp
add
aas
mov
cli
or
sbb
xor
arpl
dec
cmp
mov
mov
fbld
int3
jbe
add
stos
clc
push
and
push
mov
in
pop
adc
cmps
je
jnp
or
dec
dec
mov
cmp
push
cmps
adc
ins
ds
mov
xor
je
add
mov
xchg
add
retf
inc
and
mov
imul
sti
iret
loope
pop
pop
fimul
sub
push
mov
data16
je
shl
xchg
pop
mov
jp
(bad)
retf
pop
aaa
in
dec
inc
inc
fnstenv
repz
jecxz
inc
mov
(bad)
les
and
fisttp
sar
cmp
add
icebp
push
retf
mov
fmul
fdivr
enter
jae
xchg
mov
dec
fbstp
mov
or
mov
popa
push
cwde
movs
cmp
xchg
in
sub
out
scas
pop
jg
jge
inc
jo
pop
inc
inc
xor
scas
in
jmp
adc
std
jl
in
fist
cld
dec
(bad)
fsubr
aas
repnz
xlat
ds
add
inc
nop
fwait
fwait
(bad)
ss
pop
(bad)
and
mov
cmp
lahf
add
js
aas
dec
adc
stos
mov
outs
or
lea
sar
fs
cmp
jns
pop
ss
cmp
repz
push
mov
cmps
lahf
and
push
push
pop
call
xchg
mov
and
cmps
adc
addr16
pop
and
lea
push
sbb
cmps
gs
mov
push
outs
mov
sub
out
mov
jae
jp
mov
loope
xchg
adc
xchg
xchg
das
bound
mov
lahf
add
push
pop
ds
mov
jp
add
adc
out
ror
data16
push
lea
mov
sbb
lahf
pop
(bad)
aam
ror
add
icebp
lock
push
mov
mov
fs
ja
xor
stos
lods
push
gs
pop
mov
add
pop
mov
xor
shl
(bad)
mov
out
cmp
rol
dec
ins
jmp
in
cmp
dec
daa
es
(bad)
nop
js
fild
movs
mov
cs
jns
lods
adc
xlat
dec
faddp
and
xchg
add
test
aas
out
mov
or
mov
ret
push
in
xchg
xchg
xchg
stos
inc
repz
cmp
cmp
stc
jmp
out
sbb
mov
inc
test
adc
inc
leave
push
mov
pop
sub
dec
test
fidivr
add
and
sbb
mov
fwait
jmp
push
pop
rcr
imul
jmp
adc
pop
push
je
push
retf
cmc
jb
cmps
mov
pop
adc
rcr
inc
inc
sar
or
int3
sahf
fidivr
das
fbstp
and
or
ins
dec
jmp
xrelease
fiadd
xor
mov
cmps
ja
xchg
out
test
fxch
mov
mov
add
push
out
jne
push
dec
pop
lea
sti
dec
sbb
xchg
cmp
add
inc
pushf
fwait
div
in
movs
nop
add
pop
lds
idiv
iret
push
ja
sbb
pop
cmps
mov
xchg
add
(bad)
(bad)
fstp
(bad)
test
xchg
mov
das
shl
cs
mov
mov
sti
dec
inc
push
pop
xchg
fwait
sub
sbb
or
mov
push
xchg
not
cmp
mov
cmp
ss
push
mov
sti
in
mov
xchg
jmp
leave
push
sbb
into
sbb
jbe
mov
xor
jne
aam
repnz
movs
cs
jmp
test
xchg
lds
inc
add
jbe
int
or
add
imul
mov
adc
in
aas
aad
sub
aaa
and
add
mov
iret
lahf
push
mov
ja
add
addr16
jmp
ins
xlat
(bad)
aam
pushf
imul
test
dec
pop
inc
pop
xchg
adc
popa
sbb
add
(bad)
mov
fsubr
(bad)
lods
sub
push
lds
adc
fstp
hlt
pop
jl
enter
adc
sar
add
xchg
mov
retf
cmps
scas
mov
gs
sub
xchg
mov
xlat
sbb
cld
popf
pop
push
out
xchg
out
movs
push
jmp
out
mov
cmp
or
aad
shl
fwait
daa
retf
aas
idiv
mov
jae
adc
mov
shr
mov
xchg
or
sbb
push
pop
jmp
inc
adc
loope
add
rcr
ss
scas
inc
pop
jecxz
xor
nop
fwait
sub
push
(bad)
test
sti
xor
sub
bound
add
push
ja
test
test
frstor
or
and
push
cmp
fist
cdq
cmp
jg
xor
int3
lds
movs
mov
jne
hlt
mov
jae
jg
cmp
cmc
and
pop
ret
dec
loop
(bad)
jmp
retf
mov
(bad)
out
jne
adc
retf
mov
mov
mov
sti
aad
cmp
pushf
xor
ret
pop
xchg
mov
daa
popf
and
daa
push
es
out
popa
pop
jnp
test
iret
jo
ds
loopne
inc
retf
clc
hlt
loop
cmp
cmp
cmps
and
push
cmp
cmc
es
sti
out
or
adc
repnz
pop
add
cs
sbb
xchg
fbld
xor
cdq
sub
and
arpl
pop
sub
call
sbb
hlt
cld
adc
jbe
inc
into
push
bound
leave
mov
push
add
mov
push
mov
inc
mov
fnstenv
or
add
sbb
xchg
fistp
dec
jge
xor
(bad)
push
mov
out
cmp
and
cmc
jg
sbb
push
aad
sbb
or
xchg
fabs
push
bound
adc
ffree
fidiv
mov
xchg
pop
das
xchg
fs
jbe
jmp
or
jmp
sbb
pop
jp
cs
test
ins
push
and
inc
ret
js
mov
push
xchg
mov
in
mov
dec
pop
and
scas
sbb
call
xor
mov
mov
aad
in
repnz
or
ja
jp
cmc
sub
imul
add
and
cdq
loop
jmp
out
mov
push
aas
inc
sub
scas
(bad)
fnstenv
pushf
rol
mov
push
out
dec
or
fsub
mov
mov
xchg
pop
out
xor
es
and
aaa
jo
add
mov
xor
stos
jmp
sub
mov
loope
ds
push
je
pop
sar
xor
sbb
adc
in
pop
sbb
lock
sub
ins
lods
shr
xor
icebp
retf
cmp
jae
cmp
int
and
test
lea
jl
or
(bad)
in
mov
mov
mov
add
shl
add
mov
mov
loop
cmps
test
mov
mov
xor
cmp
jp
add
ss
mov
mov
es
jns
or
jp
xchg
icebp
or
fdivr
mov
cmp
sub
fst
jle
mov
pop
outs
cmc
inc
pop
lds
pop
shr
mov
pop
mov
xchg
call
mov
mov
popa
jne
cwde
cmc
push
or
jnp
cmps
mov
pop
daa
in
ds
sub
add
mov
fwait
aaa
mov
repz
mov
movs
bound
and
popf
(bad)
jno
mov
sub
xchg
fwait
inc
shr
xchg
add
je
inc
outs
gs
push
idiv
scas
cli
inc
and
addr16
jne
cmp
pop
aad
std
fisub
xor
hlt
mov
fdivr
push
data16
inc
imul
loop
cmp
jecxz
sbb
je
jmp
sub
or
movs
cmp
jno
mov
les
jno
mov
sub
scas
dec
xchg
add
fistp
std
push
leave
xchg
clc
xor
pop
or
and
jmp
sti
ins
sub
add
cmp
int3
loopne
mov
das
mov
mov
fnstenv
out
aam
mov
aas
clc
cwde
hlt
loop
fs
lahf
lahf
popfw
std
adc
inc
dec
mov
jge
xchg
fs
adc
cmp
jg
push
xchg
inc
fs
mov
mov
add
cmps
call
(bad)
cli
leave
movs
cs
adc
ja
cmps
jmp
in
stc
pop
xchg
jns
popa
adc
adc
fwait
dec
mov
mov
ja
loop
stos
inc
cs
sahf
popa
add
ror
push
cmp
mov
push
int
mov
call
mov
cmps
adc
adc
std
xchg
or
jle
adc
xor
xor
mov
out
ins
or
ret
cmp
cmp
ins
sbb
add
sub
dec
call
pop
cdq
inc
test
xor
jb
lock
jmp
popf
mov
push
push
jge
push
or
dec
xor
jl
add
sbb
hlt
push
out
add
cmc
or
sbb
mov
mov
sub
nop
imul
in
mov
push
pusha
adc
(bad)
cld
fbstp
mov
inc
lock
mov
mov
cli
jne
inc
ror
sbb
cmp
mov
cmps
xchg
sbb
adc
fimul
(bad)
scas
leave
icebp
lea
and
jb
xchg
iret
xchg
and
fwait
ja
imul
mov
mov
jae
push
cmp
jg
xor
je
mov
(bad)
std
or
adc
es
inc
pop
ror
fbstp
xor
and
or
cs
enter
inc
xor
dec
loop
loopne
mov
sar
jge
jecxz
mov
mov
bound
jp
cwde
fistp
xchg
retf
inc
lods
nop
aam
and
pop
bound
lea
sar
pop
call
sbb
lods
inc
add
pop
xchg
inc
ins
add
add
daa
inc
add
mul
ds
(bad)
ror
sub
sbb
cmc
mov
sub
loopne
in
pop
test
(bad)
repnz
cmp
sar
sub
inc
test
or
int
ss
stc
in
fldcw
mov
xor
lock
add
dec
and
push
cli
mov
cld
cs
ucomiss
and
out
mov
das
inc
shr
loope
retf
fnstenv
jb
push
daa
popf
retf
or
jo
or
push
mov
push
not
je
push
scas
das
jp
test
dec
push
lods
push
xchg
jp
jae
mov
not
mov
mov
out
xchg
imul
xchg
(bad)
mov
popa
movs
adc
pop
dec
mov
mov
adc
(bad)
cwde
xor
and
pop
aaa
loopne
in
xor
or
mov
mov
mov
sub
xor
inc
cwde
lods
sbb
dec
xor
int3
jecxz
daa
mov
jno
or
icebp
gs
xchg
mov
jnp
push
mov
xchg
ds
ins
scas
mov
push
fmul
inc
cmp
cmps
in
or
mov
xchg
icebp
sub
cmps
push
retf
jne
imul
and
xrelease
mov
cmps
xor
jg
leave
loope
xor
dec
mov
jle
and
loop
push
sub
push
int3
jne
xchg
inc
adc
neg
fsubr
pop
pusha
cmp
cmp
cs
push
adc
fcom
pushf
jg
dec
jg
dec
mov
and
lods
aam
es
scas
ret
sub
stos
imul
es
(bad)
sbb
retf
cmp
addr16
aam
outs
jb
in
adc
retf
(bad)
mov
mov
pop
cld
adc
pop
sub
push
in
loopne
and
or
jmp
add
mov
call
out
mov
dec
(bad)
pop
in
inc
fst
js
inc
(bad)
mov
sbb
xlat
jl
cmp
xchg
dec
pop
test
repz
adc
sub
ds
stc
ret
cs
outs
dec
clc
cmp
fisubr
popf
mov
xor
cld
mov
mov
(bad)
pop
movs
ret
int
addr16
jle
add
mov
mov
lock
sbb
cld
je
lea
xchg
call
or
stos
outs
daa
fstp
jae
fdiv
pop
and
movs
(bad)
jnp
pop
les
in
je
daa
inc
xor
dec
int3
dec
pushf
pop
stc
je
adc
or
push
ret
pop
xor
aaa
pop
and
in
stos
je
daa
std
cmps
add
jmp
in
ja
call
sbb
or
or
mov
out
push
scas
leave
mov
test
sbb
repz
mov
push
jg
push
xchg
aam
(bad)
and
test
cmp
xchg
push
gs
(bad)
mov
jl
xchg
movs
repnz
sahf
push
add
adc
fstp
outs
scas
mov
mov
pusha
fcom
add
xlat
pop
push
mov
idiv
sub
xor
adc
fnstsw
jb
add
xchg
daa
or
adc
or
icebp
shl
out
test
or
xlat
xchg
sahf
popf
(bad)
adc
mov
repz
sub
sub
dec
or
inc
inc
pop
cmp
and
imul
shl
cmps
shl
xchg
sub
inc
not
sub
in
mov
xor
xchg
xor
dec
jns
repnz
mov
jecxz
(bad)
cmc
pop
sbb
(bad)
aad
and
dec
pop
adc
jns
dec
xor
xlat
push
sub
push
mov
iret
clc
push
retf
pop
test
retf
les
inc
jle
(bad)
je
(bad)
scas
dec
pop
int
cmp
(bad)
add
and
xor
ins
mov
mov
stos
lods
shr
test
or
xchg
movs
out
ds
xchg
mov
cmps
cmps
pop
aas
and
add
sbb
mov
shl
mov
lods
lahf
pushf
lods
cmp
push
sbb
sub
jge
dec
out
ret
sbb
add
ss
pop
mov
mov
cli
jne
sub
fcomp
xchg
cmp
out
adc
outs
jbe
imul
push
or
loopne
lock
xor
loopne
stos
loope
(bad)
lods
gs
aam
std
data16
and
dec
cmp
and
mov
mov
jge
repnz
fst
or
and
jl
push
xchg
scas
mov
jne
mov
jae
cmp
sti
ret
dec
jge
stc
add
aas
and
sub
test
cmp
and
fadd
test
shr
mul
add
sti
jg
lea
dec
dec
movs
adc
add
adc
clc
push
sub
ja
shr
mov
push
popf
popa
mov
call
sbb
jb
(bad)
jecxz
mov
pop
bound
stc
or
cwde
popa
inc
and
das
xor
shl
popf
jnp
push
hlt
test
fist
jns
jmp
(bad)
jmp
movs
sti
mov
sub
and
test
retf
popf
jnp
and
pop
js
mov
mov
xor
loopne
cwde
out
mov
xchg
lea
and
lods
outs
clc
mov
enter
mov
jmp
sbb
and
mov
fisttp
and
dec
popa
call
jb
ret
pop
add
pop
out
cmc
outs
sbb
jmp
je
fisubr
and
jne
fcmovbe
(bad)
lahf
shr
ja
pop
jmp
ja
sbb
sbb
dec
mov
jg
mov
aaa
sti
add
test
xchg
dec
jl
pop
fbstp
and
inc
jo
mov
fimul
push
cmp
mov
sub
pop
repz
rol
inc
repnz
mov
jno
test
and
repnz
std
stc
adc
dec
jg
rol
loop
xchg
mov
xchg
call
xchg
std
lahf
sub
pop
pop
push
adc
fs
push
jle
addr16
out
pop
sub
mov
inc
inc
adc
out
lds
loop
adc
sbb
aas
inc
ins
mov
inc
mov
push
lea
xor
adc
inc
pop
ss
add
call
mov
(bad)
mov
fcmove
xor
icebp
imul
sbb
dec
stos
push
pop
jae
mov
cwde
arpl
(bad)
jnp
push
add
sub
push
ror
pop
faddp
lea
mov
or
aad
cmp
xchg
rcl
xchg
lahf
inc
xchg
jns
pop
xchg
ins
adc
in
xchg
pop
ret
cmp
mov
movs
adc
fs
lea
cli
push
sub
jl
mov
imul
push
int
dec
loope
pushf
fstp
jmp
(bad)
int3
push
pushf
test
cmp
mov
jmp
and
js
dec
rcl
into
rcr
pop
xchg
ja
jp
aam
cmp
push
jmp
aaa
and
jnp
cmc
popf
pusha
pop
call
pop
dec
mov
inc
aas
pop
pop
test
sub
addr16
pop
clc
and
xor
jo
xor
call
mov
push
arpl
cmp
outs
daa
push
or
and
adc
in
test
inc
lock
stos
and
pop
fdivr
jo
xor
ror
lock
push
out
pusha
addr16
lods
(bad)
hlt
pop
push
lahf
cli
ss
and
jg
adc
shl
sti
mov
pop
sub
ret
(bad)
pop
or
sbb
and
loop
push
pop
sti
movs
pusha
inc
(bad)
int
ret
adc
and
dec
push
inc
adc
jle
xchg
jo
jp
fs
in
pop
mov
xor
pop
cmp
mov
dec
scas
cmp
retf
pop
jl
xchg
pop
retf
pop
cmp
sub
xor
test
or
leave
and
stos
ror
lea
pop
mov
pop
or
push
ds
dec
push
mov
add
and
jns
cmps
scas
mov
stc
out
or
movs
inc
in
dec
hlt
mov
lds
mov
ror
adc
sub
lock
es
test
into
sbb
out
pop
pop
sbb
out
or
jg
in
mov
aad
lock
retf
sub
in
dec
pop
jo
sub
pop
jmp
loop
cmp
fadd
pop
arpl
pop
cmc
cli
mov
push
clc
(bad)
jb
sub
sti
xchg
adc
scas
and
xor
sub
inc
sbb
lock
sar
jmp
sbb
jl
cli
div
sub
popa
adc
das
pcmpgtb
je
(bad)
and
cs
adc
and
mov
and
sub
dec
push
gs
in
sar
test
jo
mov
dec
imul
mov
bound
scas
rcl
add
cwde
idiv
clc
inc
or
cmp
ja
(bad)
(bad)
out
les
mov
or
pop
cmp
std
pop
cmp
(bad)
in
aad
push
int3
sti
mov
call
ja
push
sub
ror
xor
or
jg
shr
lods
mov
shl
scas
into
fstp
les
inc
and
loopne
or
pop
or
mov
test
sbb
sahf
test
fisttp
stos
inc
lock
push
cmp
inc
ins
adc
cmp
pop
popf
jne
push
or
cmp
outs
mov
push
rcl
popa
lods
cmps
push
(bad)
dec
push
or
sub
mov
clc
dec
rcl
push
fs
mov
(bad)
mov
and
stos
xchg
outs
fbld
retf
(bad)
xor
lea
xor
cdq
pop
jns
add
dec
xchg
mov
sub
sbb
dec
cmp
mov
add
jmp
pusha
mov
push
enter
(bad)
cmc
jae
mov
je
sub
loope
stos
mov
hlt
enter
jo
jns
adc
outs
push
push
dec
imul
inc
jae
fwait
pop
xor
test
push
aaa
xlat
ss
daa
jb
or
sub
sahf
or
xchg
outs
jp
mov
(bad)
cmp
sub
or
cmp
sub
mov
loope
ret
mov
sub
mov
das
scas
in
test
pop
in
es
xchg
add
and
adc
stos
fstp
stos
int3
(bad)
jle
aas
lods
adc
push
xor
inc
cwde
fimul
add
addr16
pop
jmp
push
jns
out
sbb
and
jbe
sub
loopne
retf
sbb
sbb
xchg
sbb
adc
jnp
test
test
jmp
std
push
and
aaa
push
mov
adc
or
loope
sahf
gs
imul
pop
daa
adc
jl
fst
das
mov
fidiv
push
loope
(bad)
stos
dec
push
pop
out
cmp
cmp
jne
or
pop
sbb
test
fwait
lods
or
adc
push
imul
push
sub
(bad)
aam
sahf
jge
sub
sbb
and
loopne
ins
cdq
lahf
jmp
mov
sub
(bad)
fadd
nop
add
(bad)
xor
aam
adc
mov
or
pop
xor
outs
sbb
mov
iret
retf
pushf
pop
dec
and
lods
pop
jbe
fwait
in
(bad)
add
mov
mov
sti
fbld
cld
mov
in
icebp
push
add
cdq
mov
sub
rcr
fild
xchg
test
out
cld
add
test
mov
inc
shr
std
inc
xor
sub
adc
or
or
cmp
mov
inc
sbb
push
fsub
daa
mov
push
push
lods
mov
pop
mov
push
mov
test
inc
or
mov
(bad)
fnstsw
out
stos
leave
cmp
pop
cmp
icebp
(bad)
and
adc
dec
sbb
popw
fidiv
xor
loop
cmp
xor
push
dec
pop
mov
out
je
mov
cmp
fwait
icebp
popa
rcr
(bad)
pushf
sbb
jmp
sti
adc
(bad)
and
aaa
sbb
mov
xchg
cmp
mov
sbb
stos
test
stc
pop
data16
inc
int3
popf
std
mov
ds
xchg
xor
in
aaa
nop
jmp
jae
push
adc
icebp
out
je
int3
adc
pop
pop
es
in
pop
jno
xor
fcmovb
lahf
push
pop
or
xchg
hlt
and
pop
in
cmp
jb
cmps
push
cmps
jb
or
loop
(bad)
xchg
aam
sub
inc
mov
rcr
push
and
xor
hlt
fstp
pop
out
mov
pop
js
xor
ss
shl
or
sbb
pushf
or
pop
or
mov
jge
nop
or
(bad)
clc
sbb
lahf
and
mov
sub
js
push
mov
sahf
popf
add
add
and
push
arpl
mov
test
nop
pusha
sbb
aam
xchg
mov
lds
sub
icebp
ret
aad
cli
push
sub
push
push
ret
aam
pop
xor
pop
push
xlat
movs
cli
in
cwde
lods
sti
mov
cmps
adc
add
pop
mov
mov
push
js
sbb
fdiv
retf
les
xchg
fs
xchg
cs
pop
es
pop
dec
xlat
daa
stos
aas
push
retf
add
jl
(bad)
ja
lea
cmps
out
rol
jb
jmp
icebp
mov
test
add
stc
xor
mov
dec
lahf
rcl
pusha
test
adc
inc
add
std
mov
sti
jbe
xchg
out
or
(bad)
aas
cs
(bad)
sbb
fcom
das
mov
and
cmp
jne
push
adc
mov
ret
cmp
cs
(bad)
retf
mov
add
xchg
shl
cdq
sbb
int
in
xchg
add
call
pop
sar
dec
ss
mov
cmp
push
sbb
cmp
adc
xor
popa
dec
xchg
ja
jge
mov
(bad)
sbb
hlt
(bad)
push
sub
scas
shr
mov
pop
xor
jp
sbb
ins
sti
push
mov
int3
fcomp
out
xor
int3
jo
(bad)
in
dec
xor
or
ds
mov
adc
je
scas
imul
mov
ja
lock
call
adc
fs
enter
scas
neg
jb
pop
cwde
dec
pop
mov
int3
call
movs
inc
movs
and
mov
or
cmp
adc
inc
retf
adc
mov
mov
xlat
pop
push
popf
icebp
inc
sub
add
dec
jecxz
cmps
sti
mov
lods
out
sbb
and
repz
inc
and
mov
add
not
sbb
shl
arpl
iret
mov
push
stc
jb
retf
in
ds
push
imul
sub
shl
and
xor
pop
fdiv
iret
fs
xchg
jmp
ds
rcr
fsub
push
cmc
mov
and
div
mov
sub
mov
stos
xchg
sahf
push
iret
or
repz
add
ins
pop
jbe
cdq
ret
sub
aad
xchg
add
xchg
imul
iret
rcr
xchg
cwde
inc
xor
and
dec
mov
icebp
lods
mov
(bad)
pop
(bad)
push
out
add
cdq
pop
bound
jmp
xchg
mov
jmp
adc
test
push
jo
mov
nop
dec
lahf
or
adc
and
adc
jmp
rcr
and
into
addr16
es
or
dec
cmp
sbb
lea
mov
mov
adc
or
adc
pop
or
adc
out
xor
jne
jp
fmul
and
pop
test
mov
aam
into
pop
dec
outs
hlt
cld
addr16
adc
cdq
ss
jns
sub
push
fild
cmp
add
pop
xchg
push
lds
mov
xor
rol
mov
or
shl
(bad)
rep
add
sti
hlt
add
xor
rcr
sub
clc
into
sar
imul
lds
mov
mov
xchg
(bad)
push
outs
pushf
mov
(bad)
sbb
lea
adc
jbe
dec
push
daa
mov
imul
jb
lds
gs
aaa
or
ins
jmp
test
xchg
ficomp
std
pop
mov
test
mov
leave
arpl
pushf
push
adc
shl
test
icebp
call
ret
retf
mov
add
sbb
aas
out
pop
sub
sbb
jo
cmc
test
ret
loope
cmp
pop
loope
xchg
je
lds
(bad)
into
lds
jg
adc
adc
adc
or
in
mov
jns
sub
push
out
xlat
aaa
mov
push
fmul
aam
push
cwde
std
loopne
xor
ins
fisub
inc
xor
mov
int3
mov
mov
ss
loope
mov
out
push
add
or
pop
cmp
inc
into
push
sbb
pop
call
cdq
fucomi
loop
pop
pop
stos
lock
xor
sub
sub
xchg
jnp
fs
lods
loop
loopne
leave
xor
repnz
jmp
add
sbb
mov
cmp
cmp
sub
sbb
pop
int3
cli
dec
out
add
test
push
push
mov
xor
imul
repnz
(bad)
add
fist
ja
imul
lea
mov
in
scas
jmp
mov
adc
and
sbb
push
repnz
push
arpl
and
arpl
dec
and
cld
add
loope
ins
jl
or
jnp
test
xlat
mov
cmp
jns
sbb
std
fmul
(bad)
ret
jecxz
clc
mov
dec
mov
arpl
add
sub
mov
push
loopne
mov
ret
leave
ins
cdq
and
jmp
lahf
fwait
push
jmp
mov
mov
mov
lds
mov
jnp
jbe
pop
sahf
daa
xlat
out
add
popa
xchg
ret
stc
push
not
into
mov
aaa
(bad)
cli
push
adc
inc
hlt
pop
das
jp
push
jecxz
pop
movs
xor
lds
or
xchg
dec
sub
inc
add
mov
pop
cmp
pop
and
jmp
push
cmc
pop
(bad)
stos
fisub
scas
xor
(bad)
out
or
add
sub
cmp
push
vmovlps
cli
rol
sbb
sti
(bad)
in
fwait
mov
movs
inc
aam
jmp
sbb
add
xor
jle
stos
inc
dec
mov
inc
mov
imul
inc
xchg
pop
xor
mov
push
push
adc
ja
out
rcr
icebp
xchg
shr
sti
sti
push
arpl
in
xor
icebp
out
and
stos
(bad)
sub
push
cmp
mov
jo
rcl
out
mov
dec
fcmove
mov
lods
mov
sbb
(bad)
(bad)
push
or
inc
push
cli
test
ss
and
test
int
loope
movs
and
mov
call
sub
xchg
shl
xor
dec
ins
and
int3
test
retf
xor
dec
mov
out
nop
mov
push
mov
mov
fisttp
out
adc
jo
data16
popf
mov
pop
sbb
push
adc
cli
xor
nop
xchg
test
(bad)
dec
xor
sbb
push
loop
scas
or
or
fcmovu
push
mov
mov
test
mov
fcmovu
sub
or
xchg
xor
popa
inc
sbb
or
ins
push
and
(bad)
pop
xchg
cs
mov
jmp
jg
push
sahf
or
ret
int3
stos
loop
xor
loopne
fs
xchg
jg
mov
mov
ficomp
ss
pop
in
jg
shl
sub
ror
cmps
jno
movs
sub
mov
(bad)
out
pop
pop
or
movs
and
(bad)
fcmovu
icebp
fwait
lock
and
push
dec
or
mul
jb
dec
sub
push
or
(bad)
adc
arpl
cmp
or
dec
dec
pop
mov
out
sub
fisub
shl
mov
(bad)
push
xchg
add
es
jmp
mov
and
pusha
mov
sub
faddp
mov
leave
addps
pusha
pop
mov
and
test
mov
repnz
test
cdq
loope
cmps
leave
mov
out
call
loope
addr16
imul
cmp
and
add
mov
pop
fs
imul
(bad)
sub
add
jno
jp
pop
cli
movs
and
out
inc
fwait
pop
xor
mov
out
push
push
dec
bsf
stc
jecxz
dec
fmul
jbe
cmp
popf
in
jl
adc
adc
cmp
cmp
mov
adc
xor
test
fdivr
fbstp
daa
dec
xor
jae
jne
outs
xor
xchg
push
ins
mov
cmp
dec
adc
(bad)
les
mov
lods
gs
jle
inc
mov
jmp
rcr
int
sub
popa
jecxz
jnp
xchg
out
imul
adc
xchg
add
jo
and
pop
inc
and
push
push
mov
xlat
xchg
out
mov
or
and
jle
and
mov
sbb
inc
adc
or
shl
and
mov
data16
pop
(bad)
jmp
mov
sub
int3
ds
cmp
mov
ret
sbb
push
sahf
es
loopne
lds
inc
jbe
and
das
int3
icebp
ins
cld
xor
xchg
in
jmp
jp
sahf
iret
or
push
inc
imul
dec
call
xchg
adc
mov
adc
jp
adc
mov
mov
repnz
ficom
in
jp
mov
or
mov
jmp
push
pop
sti
mov
adc
or
mov
xchg
pop
movs
sub
es
jmp
add
inc
push
retf
shr
push
stos
cmps
(bad)
add
inc
nop
xchg
sbb
push
sub
cmp
ja
jo
jno
out
mov
int
push
pop
movs
cdq
jmp
mul
lods
and
sub
dec
mov
adc
ficom
mov
sub
shl
fcomp
adc
mov
and
int3
lods
dec
xlat
sub
sbb
ret
cmp
xor
sub
or
adc
jecxz
adc
cs
push
lock
loop
ds
jne
jecxz
call
into
mov
adc
fist
and
xchg
jg
cdq
and
aaa
or
add
popa
inc
cmp
hlt
stos
retf
pop
dec
ss
cmp
mov
call
lods
adc
ss
les
xchg
sbb
(bad)
mov
imul
sub
jg
idiv
mov
int
test
mov
mov
ds
cli
fnstsw
lods
scas
mov
lahf
jbe
pop
cwde
jmp
ficom
jb
in
mov
retf
arpl
pop
mov
in
push
jge
pop
and
sub
aas
loopne
lahf
mov
adc
(bad)
fild
cmp
aam
arpl
jecxz
fimul
fisttp
xchg
xor
sub
stc
cmc
cmp
mov
xor
cmp
cmps
or
std
shr
cld
jbe
aam
inc
xchg
mov
dec
push
pop
mov
dec
xor
loope
push
or
adc
add
inc
push
loope
add
or
mov
out
test
(bad)
fdivr
push
pop
xor
cmp
push
mov
jne
cmp
lock
scas
push
fucom
xchg
nop
xor
inc
add
dec
daa
(bad)
gs
pop
lds
xchg
mov
sbb
lods
fimul
sub
fbld
dec
hlt
mov
sub
arpl
push
mov
inc
sub
gs
mov
into
inc
(bad)
add
jb
cmp
fxch
fisttp
or
sbb
mov
ins
mov
dec
jnp
jl
pop
stos
mov
push
pop
icebp
xor
and
dec
mov
cmp
jbe
and
fld
fcom
sti
sbb
xchg
inc
pop
(bad)
mov
push
(bad)
fimul
xchg
mov
cmp
call
in
je
cdq
or
pusha
adc
pop
xor
stos
and
jg
call
fcom
mov
sub
cmp
push
jno
shl
jmp
lahf
ret
test
xchg
cmc
mov
add
jo
mov
sbb
loope
and
push
pop
fwait
lahf
dec
mov
repz
xchg
rcr
mov
mov
and
sbb
fldcw
and
aam
jo
loopne
cmps
jp
sbb
sub
fwait
and
or
adc
push
imul
mov
out
or
clc
call
add
call
ja
push
jno
sub
pop
sbb
push
out
mov
mov
add
sbb
lock
and
mov
cmp
jno
mov
mov
fiadd
xor
retf
mov
mov
push
scas
jl
push
ja
add
mov
(bad)
(bad)
push
pop
pop
pop
out
pusha
dec
mov
sub
sahf
dec
(bad)
lock
ret
ret
cmp
fsubr
xor
les
pop
push
js
pop
or
pop
jp
std
test
stos
ins
push
sub
or
xchg
mov
lock
add
dec
call
pop
add
cmp
jae
scas
sub
retf
cmps
es
out
pmullw
sub
inc
sbb
add
repnz
mov
lahf
loopne
pop
jmp
in
pop
mov
jb
cmp
pusha
mov
pop
xchg
and
mov
jo
(bad)
sub
add
pop
and
int
push
xor
outs
push
fstp
jmp
into
sbb
push
mov
movs
push
and
sar
jne
xchg
jge
sub
in
bound
shl
mov
aad
cmp
jmp
scas
add
xchg
pmulhuw
daa
adc
out
cmp
icebp
and
jbe
push
fidivr
sbb
xchg
ret
inc
mov
mov
mov
mov
pop
mov
(bad)
out
mov
xchg
in
jmp
mov
inc
add
popf
cmp
sbb
dec
xchg
cmp
fcom
imul
jae
gs
je
push
ret
mov
mov
loope
cs
retf
xchg
movs
pop
(bad)
cmc
xchg
dec
into
xchg
pusha
(bad)
push
retf
mov
std
mov
push
jle
ret
fwait
mov
pop
push
mov
(bad)
push
sbb
cmp
or
icebp
addr16
mov
lahf
idiv
js
xor
mov
cmp
sti
mov
xchg
(bad)
mov
mov
cmp
pop
add
test
and
and
push
cld
leave
xor
mov
sbb
adc
div
xchg
push
add
sub
and
repnz
nop
test
(bad)
xchg
in
push
mov
in
and
xchg
das
int
xchg
push
xchg
les
mov
and
repz
cmp
sub
cmp
pusha
add
adc
out
sub
ins
mov
cmp
fld
xchg
std
xchg
xchg
add
fld
dec
sahf
aad
xor
ret
nop
push
inc
add
xlat
cmc
shr
pop
icebp
push
inc
or
mov
xchg
adc
repnz
mov
icebp
push
mov
mov
mov
cmc
ja
and
push
test
sbb
lods
cdq
and
or
and
jo
sub
or
sub
retf
push
(bad)
mul
(bad)
pushf
cmp
lds
mov
cmp
cmp
test
lea
mov
aam
push
mov
jle
xchg
ror
inc
cdq
fimul
cmp
fs
cmp
test
and
pop
mov
cmp
push
push
jecxz
popf
out
outs
adc
add
push
ins
dec
mov
or
fdivr
in
add
mov
mov
mov
jmp
or
aad
pop
cmps
mov
xchg
jl
adc
inc
xlat
cmp
fs
dec
pushf
js
xchg
dec
mov
or
lea
adc
js
push
repz
mov
out
ds
or
test
jmp
xchg
mov
jbe
(bad)
xor
inc
movs
jecxz
retf
xchg
sbb
mov
sti
xor
lods
out
sbb
stos
scas
fsubr
cmp
xchg
mov
jecxz
xchg
xchg
(bad)
xchg
repnz
in
test
inc
sub
cmp
je
add
push
pop
pushf
jno
stos
or
add
dec
js
and
sar
lds
fwait
or
sub
mov
or
xor
pop
dec
outs
leave
mov
mov
in
adc
sub
lods
dec
rol
xor
(bad)
lock
out
xor
stos
jb
xchg
or
xor
mov
mov
pushf
loope
pushf
mov
push
lods
sbb
shr
inc
bound
loop
mov
and
icebp
adc
mov
dec
and
mov
push
and
mov
imul
mov
fstp
add
imul
mov
pop
nop
xor
outs
lea
lahf
test
call
sub
clc
fwait
bound
or
mov
mov
mov
hlt
add
pop
adc
addr16
aam
inc
mov
test
loope
mov
jo
ds
pop
loopne
mov
lea
mov
int3
repz
stos
and
sub
sub
aas
push
adc
xchg
bound
xor
jge
inc
sbb
inc
xlat
cmp
(bad)
mov
imul
add
mov
fbstp
cmp
mov
sbb
ret
fdivr
cmp
fst
mov
iret
outs
(bad)
mov
icebp
add
ins
retf
cmp
dec
inc
outs
mov
sbb
ins
adc
jle
cmp
inc
push
loopne
mov
pop
mov
test
mov
cmp
pop
sbb
dec
cmp
inc
arpl
aaa
or
in
scas
bound
icebp
test
sub
scas
inc
add
outs
pop
js
in
retf
test
adc
cmp
not
mov
and
sbb
mov
icebp
in
lea
dec
scas
into
pop
sub
xchg
pusha
adc
cwde
aaa
cs
sub
bound
aaa
cmp
imul
enter
fadd
cli
push
fistp
rol
nop
call
push
inc
and
out
gs
dec
mov
pop
std
sub
shr
adc
aad
addr16
fdivr
aad
add
jnp
jbe
pop
pop
push
jns
xchg
jl
dec
cld
ss
jns
jnp
jmp
mov
jb
stos
mov
push
aaa
pop
mov
inc
cmp
inc
loopne
pop
fdivr
sti
adc
mov
mov
sub
sbb
mov
xchg
xchg
fadd
int
fsub
mov
mov
dec
jmp
scas
(bad)
sar
inc
pop
dec
mov
aas
in
adc
pop
call
rcr
(bad)
jg
call
sub
div
arpl
bound
push
loopne
sbb
xor
inc
xchg
push
pop
jbe
push
push
adc
out
push
jge
push
(bad)
jl
pop
push
and
push
sahf
pushf
xchg
mov
sub
adc
into
or
xor
in
outs
lock
js
push
pop
cmpxchg
iret
jne
aam
ret
int3
fs
mov
jno
les
int3
mov
mov
or
mov
mov
mov
xor
ins
add
sub
outs
aas
push
inc
repz
not
xchg
outs
and
lahf
ror
test
pop
(bad)
mov
loope
lods
cmp
push
xchg
cmp
fdivr
fidivr
jp
into
adc
pop
adc
retf
dec
sbb
lods
cli
repz
idiv
add
pop
std
cwde
pop
scas
into
enter
dec
js
pushf
test
cmps
mov
cmc
add
sub
xor
or
cmp
sub
mov
(bad)
sub
and
bound
pushf
mov
cmp
lods
movs
icebp
pushf
sub
cmp
ja
push
ds
in
cmp
loopne
pop
fwait
imul
mov
inc
not
movntps
push
xor
ret
mov
mov
add
sub
(bad)
jl
adc
add
dec
mov
shl
cmps
sub
mov
cmp
xor
cmc
movs
sub
sub
loop
pop
inc
cmps
adc
or
hlt
popa
mov
cmps
push
adc
sar
jle
cdq
not
int3
lea
dec
inc
mov
popa
dec
dec
mov
mov
push
jecxz
call
pop
lds
rcr
in
stos
hlt
les
pop
fcmovne
(bad)
push
xchg
js
pop
jle
adc
sbb
jmp
in
dec
adc
mov
pop
mov
lea
(bad)
mov
sub
sbb
stc
mov
dec
adc
mov
nop
cli
call
fistp
repz
ss
jmp
lea
sbb
jle
sbb
(bad)
add
cld
dec
hlt
aaa
xor
push
fs
inc
icebp
retf
and
ins
bound
cmp
xchg
and
shl
and
es
jg
push
pop
inc
mov
or
or
dec
out
mov
(bad)
push
and
in
push
mov
nop
sub
sbb
mov
xchg
push
pop
sbb
(bad)
adc
in
arpl
repz
xchg
ret
sbb
into
add
push
and
xlat
add
lods
mov
daa
pushf
pop
mul
movs
std
int3
mov
mov
imul
bound
xchg
in
je
push
mov
inc
jecxz
mov
mov
pop
sub
sub
jg
cmp
iret
sub
in
inc
or
shl
arpl
dec
sbb
jmp
add
xchg
jne
push
retf
add
xchg
(bad)
div
and
xor
(bad)
stc
lea
dec
rcr
in
xor
nop
(bad)
(bad)
adc
xchg
or
fwait
or
jg
mov
call
and
nop
adc
out
push
ins
xchg
mov
cmps
lock
dec
gs
jecxz
fnstcw
inc
lea
popf
cmp
mov
mov
outs
push
pop
fisttp
sbb
mov
sbb
out
(bad)
xchg
push
pop
xchg
mov
nop
icebp
mov
mov
jl
or
mov
test
icebp
frstor
into
sub
das
popf
stos
and
jmp
call
inc
arpl
mov
aad
push
adc
into
push
xchg
mov
mov
retf
xchg
dec
mov
leave
daa
inc
adc
xor
in
mov
hlt
or
mov
imul
mov
fmul
cwde
or
sahf
in
sar
(bad)
mov
and
shl
scas
outs
jecxz
mov
shl
pusha
mov
cmp
scas
push
push
mov
inc
sub
jae
cwde
xchg
call
js
add
jmp
inc
jo
xlat
lahf
icebp
cmp
and
clc
cmp
mov
int
mov
loop
imul
inc
inc
ret
out
call
xchg
sar
and
out
xchg
add
cmc
dec
pop
mov
mov
mov
aad
fisubr
xchg
mov
or
jge
inc
jbe
dec
mov
repz
push
retf
jbe
adc
shr
add
pop
cmp
mov
es
or
xchg
rcr
ds
mov
retf
in
pop
inc
xlat
(bad)
shl
sahf
pop
jge
xchg
inc
cmp
test
jnp
sbb
fild
mov
xchg
in
mov
imul
add
xor
or
out
pop
ds
ins
mov
retf
pop
rol
sub
mov
sub
add
rcr
iret
in
lods
add
mov
adc
ret
ins
pop
add
lods
pop
jne
repz
in
fs
xor
push
mov
xchg
lea
xchg
mov
movs
push
stos
jmp
test
ds
test
rcl
mov
fnsave
dec
mov
mov
xchg
mov
ficomp
cwde
jae
cmp
in
jp
mov
call
sbb
(bad)
xchg
retf
call
(bad)
push
xchg
and
lods
xchg
pop
out
(bad)
jl
scas
js
mov
inc
xchg
adc
shl
mov
or
push
ret
dec
addr16
addr16
cmc
sub
inc
xlat
sar
jo
mov
arpl
mov
add
dec
jmp
and
inc
adc
je
mov
sti
cmp
shl
push
dec
fs
inc
ins
jmp
mov
cdq
sub
push
nop
dec
add
jbe
hlt
push
in
rcl
sub
and
outs
lahf
fs
mov
lea
jae
or
cmps
js
jmp
jno
cli
inc
add
mov
pop
lahf
aaa
js
pop
(bad)
stos
cwde
push
mov
fcomp
ret
jae
add
sub
jbe
cmp
dec
outs
pop
imul
xchg
jne
(bad)
iret
mov
and
jno
mov
add
stos
outs
sbb
cmp
call
mov
shr
mov
add
fdivp
mov
dec
push
das
dec
add
mov
jle
cmp
icebp
stc
fcmovb
or
mov
ror
adc
pop
adc
push
add
or
add
add
or
mov
int
pop
(bad)
xchg
jge
fidivr
xor
in
nop
pop
sbb
mov
dec
dec
mov
adc
sbb
pop
sbb
inc
lds
sub
(bad)
lods
fisttp
xchg
xor
dec
jl
cmps
ficom
test
mov
sub
sbb
push
mov
dec
lods
pop
xchg
push
and
ins
xor
fisub
mov
pop
dec
test
fs
dec
jmp
pop
hlt
out
xor
retf
jge
movs
inc
inc
dec
pop
mov
sbb
imul
das
add
or
out
sbb
push
popa
sub
scas
(bad)
push
push
movs
mov
mov
enter
cld
rol
addr16
push
mov
xchg
mov
stos
jns
mov
or
mov
stos
mov
mov
add
rol
adc
sar
call
add
(bad)
jne
cs
jg
jb
inc
test
hlt
mov
popa
fadd
ret
lea
outs
aas
jmp
fdiv
sbb
cli
mov
icebp
and
mov
inc
enter
cmp
daa
lods
aad
in
stc
scas
sbb
inc
cmp
fs
mov
add
dec
test
cmp
sbb
in
pushf
int3
xchg
enter
push
push
push
push
pop
mov
adc
cmp
rol
inc
push
cmps
div
loopne
jmp
pop
scas
fstp
jecxz
jns
or
sbb
popa
and
int
add
data16
popf
(bad)
cmp
test
and
push
lods
das
jb
mov
pop
les
bound
xor
(bad)
pop
mov
call
cs
retf
mov
les
xchg
adc
ret
push
sbb
data16
dec
mov
or
in
loope
jp
cld
repnz
pop
cmp
jnp
les
cmp
ret
int
fsub
push
mov
ja
retf
retf
lds
push
pop
jo
mov
clc
xchg
mov
fisubr
or
mov
cmp
icebp
popa
in
xor
cwde
sub
movs
add
dec
dec
add
inc
ret
push
mov
dec
xchg
pop
repz
(bad)
xchg
sbb
cmp
mov
add
fs
mov
add
mov
adc
fisttp
popf
jo
ror
xchg
or
jae
ja
sub
xor
and
dec
lods
cmp
mov
jo
xor
les
mov
not
adc
cmps
loope
outs
sbb
cmp
push
sub
and
cmp
mov
or
inc
mov
mov
call
dec
in
sub
xchg
mov
hlt
add
jge
dec
(bad)
clc
cmp
adc
jno
push
sbb
add
inc
ss
not
pop
adc
cmc
inc
pop
xchg
push
jns
mov
test
pusha
pop
pop
mov
outs
ins
int3
loopne
retf
dec
push
mov
push
sbb
cld
adc
shr
dec
xor
dec
ret
gs
pop
movs
pop
outs
rol
ins
pop
sub
lods
mov
loope
rcr
and
adc
xchg
cmovs
adc
or
loop
jbe
push
dec
lea
sbb
push
inc
std
adc
sub
iret
scas
cmp
scas
pop
push
into
jecxz
inc
jl
dec
pop
mov
cmp
sti
xchg
cwde
pop
lahf
test
aaa
clc
mov
loope
pop
popf
xor
add
lahf
scas
mov
mov
mov
jnp
in
fisubr
loopne
or
xchg
test
not
aam
push
cmps
mov
cld
mov
cmp
inc
push
push
inc
push
mov
inc
xchg
cmp
shl
jno
xlat
mov
sub
mov
fsub
hlt
(bad)
outs
push
mov
sub
imul
jmp
xchg
push
(bad)
jns
jne
inc
pop
ret
rcr
adc
and
in
xor
add
nop
fdivr
test
xor
(bad)
sub
xchg
mov
inc
mov
push
or
or
pop
les
jmp
addr16
arpl
mov
(bad)
out
fwait
dec
movs
jg
fwait
loopne
ficomp
sub
fcom
pop
xchg
jb
test
inc
call
pop
xor
dec
push
movs
inc
hlt
or
call
call
popf
pop
cs
xchg
sbb
lods
jb
pop
(bad)
movs
xor
and
pop
and
jecxz
pop
les
sbb
add
adc
jge
add
or
daa
dec
jbe
mov
jl
jbe
iret
sub
je
or
and
adc
push
shr
ds
inc
test
cmp
scas
retf
mov
out
enter
aaa
sub
cs
or
sbb
xor
rcr
jmp
ret
mov
dec
sbb
inc
stc
jns
retf
popa
(bad)
and
pop
mov
test
(bad)
pushf
jge
add
int3
xchg
retf
(bad)
sub
ja
inc
jecxz
das
sub
adc
jecxz
popa
(bad)
rcl
push
mov
cs
sbb
mov
fisub
not
sti
jne
jp
mov
and
push
(bad)
sti
push
in
and
popa
in
cdq
shl
retf
lea
shr
das
push
mov
lea
inc
inc
loopne
xchg
(bad)
aaa
fwait
jle
outs
mov
movs
pop
call
add
outs
or
adc
pop
out
movs
popf
hlt
popa
inc
xor
in
mov
out
xor
push
(bad)
popa
shr
sub
inc
jecxz
sub
sbb
cmps
cs
cmc
sub
(bad)
sti
test
adc
push
sbb
leave
clc
and
sar
outs
out
loop
add
cmp
xor
jbe
add
xchg
cdq
pop
push
xchg
sti
std
rcl
and
mov
xchg
neg
cdq
cmc
sub
cdq
cs
jb
sbb
xor
rcl
adc
call
loop
outs
xor
lahf
add
lahf
push
mov
call
test
call
sub
mov
dec
pop
push
dec
enter
inc
cmps
and
mov
bound
cmp
aam
lds
jb
and
or
adc
inc
push
(bad)
inc
push
xchg
pop
add
jp
mov
xchg
cdq
paddq
pop
ret
iret
pop
fwait
dec
in
mov
bound
stos
jno
jb
std
push
iret
inc
repnz
ja
cmp
cmp
pop
sub
shl
test
xor
mov
les
je
mov
jg
cmc
aas
repz
adc
xchg
jle
fwait
cmps
jbe
and
fisttp
cmp
rol
sar
int
fisttp
ret
les
push
pop
ss
fs
pop
fadd
mov
cdq
stc
rol
test
sub
adc
fstp
fsub
(bad)
xrstors
mov
test
xor
daa
aam
repnz
or
pushf
push
jp
popa
and
gs
jp
dec
clc
cmp
push
gs
jbe
adc
sub
xchg
cli
sbb
cld
js
mov
mov
dec
push
sub
mov
stc
xchg
lahf
jae
call
xlat
fidiv
add
cli
popf
cmp
sub
jmp
jecxz
outs
retf
loopne
inc
gs
fistp
cmp
iret
xchg
mov
jl
pop
xchg
mov
mov
add
scas
dec
icebp
sbb
(bad)
out
jle
push
pop
sbb
push
and
cmp
daa
mov
in
pushf
sbb
jmp
jb
inc
les
ficomp
xor
movs
das
xlat
loop
fild
outs
cs
jo
adc
push
movs
xor
ret
xor
mov
dec
std
adc
sbb
inc
ins
or
cmp
xor
push
das
sub
das
lods
cmp
repnz
add
(bad)
fwait
add
adc
jae
je
leave
adc
cmp
inc
mov
scas
popf
bnd
stos
pop
pop
push
or
mov
cld
push
push
jmp
and
(bad)
retf
pop
sahf
jne
add
xchg
jg
(bad)
leave
inc
pusha
test
push
xchg
mov
gs
sbb
dec
or
xlat
jns
mov
test
in
inc
push
movs
xor
mov
cmp
pop
sti
mov
push
mov
dec
push
or
ins
retf
and
ret
ins
popf
pop
jmp
jle
inc
mov
imul
sub
pop
add
ficom
inc
xchg
call
jp
movs
add
xchg
dec
test
in
lock
mov
xchg
cs
xor
push
inc
cmp
add
adc
(bad)
loopne
mov
pusha
or
in
cmps
in
ins
mov
mov
popa
aam
out
retf
cmps
test
je
xchg
push
into
sub
fs
inc
mov
pop
enter
jno
sub
out
loop
or
daa
push
popa
jo
fmul
pop
sahf
js
jmp
cdq
jae
lods
mov
sub
pop
jns
fsubr
xchg
xor
aaa
sbb
add
or
xchg
mov
push
add
push
sbb
xor
out
push
out
inc
(bad)
idiv
sbb
lods
push
pop
icebp
mov
jnp
add
dec
scas
outs
(bad)
pop
jnp
repnz
cmp
xor
icebp
mov
test
retf
xor
scas
mov
push
adc
add
or
dec
adc
inc
enter
adc
scas
jl
dec
aad
(bad)
mov
ret
retf
call
add
fcomp
mov
arpl
test
xchg
mov
or
nop
jns
outs
push
(bad)
jge
or
cmp
dec
sar
shr
iret
outs
cmps
jp
(bad)
les
data16
adc
sub
xadd
je
push
pop
movs
jecxz
push
test
fadd
fcom
inc
int3
xor
stc
dec
in
test
add
jg
mov
cmc
jg
call
fdivr
sbb
test
sti
pop
xchg
dec
aad
retf
jmp
sub
xchg
pop
push
xor
jle
push
retf
icebp
xchg
or
mov
sub
sub
xchg
ret
push
cmp
pop
push
inc
(bad)
adc
movs
dec
pushf
inc
push
fstp
or
mov
inc
loope
ja
test
add
popf
cwde
add
(bad)
fmulp
inc
stc
mov
lds
aad
sub
rol
xor
mov
js
loopne
in
cdq
aas
pop
cmps
mov
loope
imul
popf
movs
xchg
repz
push
inc
cmp
pop
stos
aam
cmp
pushf
popf
xor
add
pop
mov
jae
cmps
mov
hlt
xchg
xor
not
jp
test
popa
inc
and
pushf
ja
cmp
or
icebp
mov
mov
out
call
mov
cmp
ss
ins
xor
push
lods
retf
add
es
sbb
retf
and
in
jno
ja
push
bnd
loopne
push
dec
fs
sub
adc
mov
xchg
xchg
shl
test
pop
cld
xor
jge
or
pushf
loop
inc
daa
mov
jno
add
jmp
dec
call
sub
scas
pop
or
sub
je
pop
sbb
inc
lahf
movs
mov
aam
mov
jl
adc
sub
das
mov
sbb
retf
out
ret
std
aas
pop
adc
pushf
xlat
push
mov
or
jne
dec
inc
ds
mov
xor
mov
aam
ficom
call
leave
push
mul
retf
sub
sar
xchg
sub
jmp
loopne
inc
hlt
fnsave
ds
xchg
pop
sub
test
adc
xchg
jl
sub
sub
jns
push
xchg
outs
fxch
enter
pop
mov
sub
xor
imul
push
in
ins
sahf
loopne
push
ror
imul
jns
stos
test
mov
fst
push
out
les
pop
sahf
leave
xchg
mov
in
add
pop
sbb
pop
xor
das
jl
or
jmp
js
dec
test
jecxz
cwde
push
dec
add
mov
pop
jns
push
pop
aad
sub
dec
mov
push
cmp
fdivr
mov
retf
mov
outs
and
fimul
pop
fcomp
std
shl
add
mov
add
into
out
or
ss
xchg
pop
loop
adc
and
cmp
push
pop
jg
jecxz
int
xchg
aas
jns
call
mov
sbb
push
xchg
jae
frstor
shl
mov
push
push
push
xchg
jmp
and
dec
cmps
pop
add
aaa
arpl
jl
loopne
mov
xchg
aad
les
nop
mov
shr
mov
aas
ins
jnp
cmp
and
std
repnz
push
bswap
dec
lea
out
test
sub
push
repz
or
adc
add
bnd
mov
adc
cmps
shr
jl
pop
dec
popa
cmps
mov
push
push
xor
mul
mov
ret
pop
jbe
lea
adc
mov
xor
shr
repz
cmp
sbb
das
pop
cs
gs
rol
cdq
jmp
mov
inc
xchg
mov
call
ret
jb
xor
or
push
aas
bound
pop
push
pop
pop
jl
pop
mov
ret
xchg
cwde
pop
sahf
inc
iret
cmc
rep
ror
jle
(bad)
enter
fdivr
and
pop
in
dec
xchg
in
add
jb
clc
stos
xchg
dec
scas
int3
ds
popa
scas
loope
inc
push
retf
sbb
push
scas
adc
jno
scas
gs
xor
enter
mov
mov
cmp
scas
bound
mov
adc
mov
lods
js
xor
mov
and
push
cmp
sub
cmps
add
mov
jmp
mov
pusha
fstp
mov
xor
mov
push
aas
call
into
cwde
dec
retf
mov
xlat
(bad)
cli
dec
mov
or
pop
retf
mov
jo
sub
mov
push
lods
or
jmp
in
push
fadd
in
cmps
in
loop
fisub
ss
clc
pop
out
or
adc
sbb
repz
das
xor
inc
daa
and
pop
mov
xor
shld
pop
shr
or
xor
jbe
pushf
jb
in
cmp
stos
xor
les
xor
pop
mov
loopne
retf
jnp
push
(bad)
dec
xor
sti
xchg
sbb
out
push
pop
jecxz
rcr
pusha
lock
mov
outs
jecxz
loopne
sub
icebp
dec
sbb
jg
ret
out
cmp
sbb
jb
sbb
and
shl
jmp
popf
das
retf
(bad)
mov
addr16
mov
sub
push
xchg
dec
cmps
daa
fbld
jl
addr16
scas
int3
retf
xchg
adc
rol
xchg
mov
push
iret
push
lds
mov
(bad)
push
std
out
sti
pushf
mov
cmc
or
mov
bndldx
xchg
xor
inc
pop
pop
mov
retf
lock
pop
lds
js
outs
pop
pop
rol
sub
dec
es
mov
pop
adc
repnz
(bad)
fdivr
sub
mov
xchg
paddsb
test
mov
lds
daa
sub
xchg
mov
push
xchg
cmps
iret
sbb
loopne
jmp
cmp
xor
add
div
sub
jp
hlt
inc
jl
push
stos
and
push
test
jmp
jg
sub
jae
xor
adc
test
pop
outs
movs
xchg
xchg
and
(bad)
fisttp
out
test
fbstp
retf
or
aad
inc
jne
sahf
aas
div
mov
ret
fsub
cmp
rol
sub
lds
fwait
xchg
das
pop
push
pop
sbb
movq
xor
fwait
mov
stos
push
pop
stos
inc
call
cmc
in
fucomp
lds
mov
shl
jmp
std
jl
xor
or
movs
pop
cmp
and
fistp
jno
add
pop
push
lock
mov
adc
or
push
sbb
mov
fimul
jmp
imul
repnz
(bad)
in
icebp
es
sbb
in
xchg
or
stos
sbb
mov
cwde
icebp
nop
xchg
fwait
xchg
fs
imul
out
jbe
ins
lods
or
lods
inc
cmp
mov
mov
add
or
add
in
fdivr
mov
push
sbb
outs
jl
push
xor
jae
mov
test
xchg
sar
cwde
ror
repnz
sti
inc
fdivr
sbb
sub
add
pushf
(bad)
stos
in
(bad)
xor
pop
out
push
neg
into
sbb
inc
mov
and
mov
xor
out
inc
push
cmp
xchg
xchg
outs
sbb
loope
xchg
dec
xchg
and
hlt
jo
push
das
daa
xchg
in
cmp
pop
jb
jmp
push
adc
push
and
push
imul
pushf
sbb
lods
mov
push
in
getsec
(bad)
outs
fadd
inc
xor
mov
sub
mov
jmp
bound
pop
aam
lea
pushf
pop
jg
sub
mov
popf
add
inc
jb
in
aaa
xchg
cmp
push
lods
mov
jecxz
xor
push
test
shl
or
jno
mov
sub
out
inc
jns
adc
test
ja
dec
xor
(bad)
div
adc
mov
addr16
ja
mov
ds
icebp
pop
cwde
or
test
clc
fstp
pop
pop
inc
push
inc
pop
fnstenv
pop
xchg
sbb
mov
push
(bad)
mov
inc
cmp
push
shr
mov
or
dec
jne
pop
sbb
pop
jle
inc
pop
ss
or
pop
stos
xor
xor
jp
pop
add
rol
imul
mov
jg
mov
arpl
pop
jmp
xchg
dec
cmp
add
mov
or
das
add
jge
icebp
stos
xor
push
or
imul
mov
add
sbb
mov
or
ror
inc
dec
dec
int3
fdiv
jmp
outs
aas
xchg
and
xchg
frstor
pop
stos
pop
test
bound
das
in
add
out
add
sti
les
pop
mov
add
pop
mov
xor
push
daa
cld
xchg
shr
xor
adc
cmp
int
sub
add
mov
sbb
sbb
jmp
sbb
lea
xor
fnstenv
jg
mov
pop
push
jmp
xchg
loopne
xor
bound
scas
cmp
add
mov
fs
retf
retf
xchg
dec
jl
aam
fsubr
les
dec
shl
add
ins
iret
dec
push
add
sti
ret
sti
and
ss
and
inc
and
test
mov
mov
push
les
repnz
mov
gs
xchg
adc
xchg
ins
in
add
sbb
adc
lock
pop
addr16
push
(bad)
jo
scas
in
sahf
lods
mov
jg
imul
mov
xchg
or
nop
pushf
or
lods
fsubr
sbb
xchg
into
or
mov
scas
je
and
das
push
add
cmps
scas
sub
and
push
mov
add
mov
sbb
adc
mov
retf
cmps
std
or
cmps
jecxz
inc
push
mov
mov
iret
cli
cmp
inc
mov
mov
sbb
retf
repz
mov
jbe
in
mov
jno
fmul
jne
xchg
ja
push
call
scas
jb
lods
push
mov
scas
add
in
pop
js
add
into
fidiv
enter
cwde
mov
dec
fs
mov
pop
shl
loop
hlt
push
xor
test
lods
mov
jge
neg
xor
ror
xlat
(bad)
cmp
sub
pop
mov
fist
pop
add
jns
fst
mov
xor
xchg
stos
xchg
pop
ins
hlt
dec
and
xchg
popf
sbb
fst
xchg
retf
mov
xor
js
iretw
xchg
icebp
lea
mov
ins
lods
(bad)
lock
jno
cmp
cmp
arpl
fisttp
cdq
ins
dec
xchg
mov
std
xor
xor
cmp
pop
outs
lods
les
rcl
sbb
ins
cmp
inc
retf
(bad)
addr16
pop
push
shr
mov
pop
div
mov
xor
and
es
jbe
dec
in
in
es
or
xchg
push
(bad)
cmp
lock
sbb
pop
dec
std
cmp
loope
in
cwde
cmps
mov
adc
cmps
xchg
(bad)
rcr
cmp
and
lock
mov
mov
call
les
das
jle
aaa
in
push
xlat
ja
sbb
mov
call
inc
les
into
sbb
jmp
out
or
push
mov
sbb
push
cwde
in
or
xor
mov
or
mov
mov
iret
and
mov
arpl
add
jecxz
cmp
(bad)
pop
adc
ja
pop
popa
aaa
and
and
popa
jmp
lock
xor
mov
cmp
dec
mov
stc
mov
arpl
pushf
mov
inc
pop
int3
xchg
mov
lds
jns
jl
inc
mov
xchg
mov
div
cmps
cmp
push
add
mov
sahf
stos
aas
dec
mov
adc
aad
jle
(bad)
fcom
jo
xchg
jecxz
cmp
rcl
jp
stos
iret
pop
clc
(bad)
and
aad
test
inc
cld
pop
ins
jg
sbb
mov
mov
fstp
ja
repnz
push
jmp
jge
xor
lock
pop
retf
pop
ret
loope
imul
movs
pop
add
inc
gs
dec
jmp
cmps
movaps
xchg
(bad)
repz
movs
pop
pop
(bad)
sar
fs
test
aaa
es
and
mov
xor
mov
das
sub
cmps
mov
xor
rol
sub
xchg
push
mul
test
adc
add
(bad)
mov
add
jg
adc
lahf
push
dec
out
dec
jae
jae
out
ins
add
inc
fcmovnbe
and
test
pop
ja
and
ficom
sbb
xor
xlat
into
cmps
jo
cmp
adc
adc
mov
sbb
or
arpl
cs
or
sti
sbb
test
add
push
mov
out
ds
and
dec
jle
sbb
jnp
fisubr
cwde
sub
test
lods
pop
push
jge
ss
mov
repz
mov
and
jns
sti
pop
ror
(bad)
dec
(bad)
imul
iret
add
rcr
cmps
out
or
sar
shr
jle
inc
jmp
das
mov
dec
pushf
jne
jo
lea
aam
cld
pop
ds
in
mov
mov
mov
shl
nop
and
rol
sub
pop
cld
jb
push
rol
pop
fstp
test
scas
enter
(bad)
adc
and
jl
jbe
xchg
mov
mov
mov
bound
sub
pop
inc
ret
popf
cli
repz
mov
cmc
cmp
das
cmc
and
xchg
jbe
xor
test
mov
out
pop
fild
mov
pop
cdq
and
fcmovu
aaa
mov
cmp
shl
pushf
add
div
mov
dec
mov
sbb
xlat
adc
jb
sub
ja
mov
mov
shl
aas
dec
inc
(bad)
push
inc
push
jo
mul
or
lahf
enter
je
aad
adc
scas
push
mov
xchg
push
xor
add
push
repz
or
mov
mov
nop
pop
and
pusha
push
cmp
stos
nop
inc
ror
mov
lock
mov
jo
std
shl
mov
pand
ds
mov
pop
xor
dec
or
push
push
(bad)
cmp
push
xchg
test
dec
inc
dec
shl
pop
pop
test
repnz
sbb
aas
sub
mov
add
leave
out
pop
leave
(bad)
inc
mov
movs
pop
mov
xchg
iret
jmp
cwde
fwait
in
frstor
nop
in
jge
aad
cmp
loopne
sub
add
lods
pop
cmp
adc
repz
sti
mov
and
(bad)
push
cld
mov
les
jbe
(bad)
fld
fld
add
outs
mov
jl
ror
outs
(bad)
pop
shl
inc
sti
in
sbb
xor
sbb
xlat
jle
aad
fstp
mov
mov
js
jg
cs
inc
(bad)
loopne
dec
lea
out
inc
and
ret
mov
xor
iret
popa
inc
jns
fild
or
mov
inc
inc
int3
and
mov
and
repnz
(bad)
jg
fwait
jmp
xor
jne
mov
mov
test
cmp
and
ins
xchg
inc
out
or
ret
imul
sbb
loop
inc
sub
and
aad
pop
mov
fsubp
add
jl
mov
test
or
xor
pop
pushf
xchg
out
push
ror
inc
add
adc
xor
add
inc
mov
sbb
int
push
push
(bad)
fisub
push
imul
fsub
mov
adc
and
mov
shl
xchg
sti
dec
(bad)
js
je
jp
cdq
cmps
cwde
pop
pop
adc
out
jne
js
fcom
add
das
cmp
test
sub
xor
mov
iret
jmp
outs
pop
mov
(bad)
fidiv
ins
mov
aam
and
ret
test
cmp
inc
mov
mov
fild
test
icebp
xchg
aaa
inc
cwde
outs
lahf
addr16
mov
shr
mov
in
jmp
rcr
xor
and
js
stos
es
loopne
pop
xchg
js
imul
outs
in
mov
ror
dec
adc
xor
ins
mov
dec
jbe
lods
jno
cmp
add
xor
jnp
pop
and
repnz
(bad)
(bad)
inc
rcl
movs
mov
fiadd
xchg
jg
lock
mov
jmp
popa
stc
push
sahf
and
jb
loop
je
pop
dec
xchg
add
hlt
lahf
sub
xchg
test
bound
pop
sub
ins
pop
xchg
imul
movs
ins
or
scas
or
mov
jne
mov
mov
clc
scas
pop
cmps
cmps
sub
sbb
retf
lods
cs
xchg
(bad)
pusha
xor
adc
sahf
retf
inc
dec
adc
cmp
jp
pop
mov
mov
lods
xor
frstor
scas
lock
enter
mov
xchg
test
xchg
fdivp
stos
out
aad
sub
mov
push
add
xor
mov
jne
cmp
stc
loopne
and
iret
arpl
cmp
or
ins
aas
(bad)
or
push
mov
push
mov
out
cmp
push
adc
jg
scas
(bad)
pop
cmp
retf
push
adc
pushf
and
jmp
bound
and
push
imul
jmp
je
push
mov
pushf
rol
lea
xor
add
push
(bad)
nop
leave
test
jb
enter
pusha
out
aaa
mov
sbb
in
mov
push
cmp
pop
xor
es
jecxz
dec
cmps
lods
push
cmps
(bad)
aaa
ror
adc
xchg
jo
retf
mov
jp
pop
mov
movs
xchg
aam
bound
mov
ret
adc
pusha
gs
sbb
push
popa
fiadd
es
aad
test
sbb
pop
xor
dec
nop
shl
retf
out
(bad)
sub
sub
jne
ss
xor
pop
add
fmul
inc
imul
jmp
cmp
nop
pop
mov
les
adc
ins
in
rcl
mov
ret
and
mov
imul
jmp
xchg
fst
mov
xchg
dec
adc
mov
and
inc
push
sbb
scas
push
jae
mov
xchg
fstp
(bad)
(bad)
pop
push
push
sub
pop
sbb
add
loope
and
cmp
cwde
(bad)
jne
mov
jb
and
into
mov
push
inc
outs
int3
ins
jle
int
mov
xor
push
ret
fs
xchg
or
jp
out
dec
clc
call
arpl
aad
mov
xor
mov
les
jmp
jne
push
or
clc
xchg
push
stos
lds
scas
dec
(bad)
xor
and
pop
pop
in
hlt
adc
mov
pop
sahf
fnstenv
mov
stos
mov
dec
mov
pop
jns
aaa
push
mov
sub
jne
push
pushf
es
mov
mov
pop
jge
sub
cmp
xchg
inc
add
xchg
pop
xchg
jp
retf
jne
daa
jbe
cld
lahf
je
aaa
lahf
pushf
mov
mov
aaa
cmp
movs
mov
jle
xchg
retf
and
sahf
int
std
jg
sbb
sbb
mov
cmp
dec
cmc
retf
xor
cmps
out
jmp
dec
std
aad
adc
retf
cwde
pop
mov
adc
jp
or
xlat
in
adc
cmp
call
mov
xchg
imul
sar
dec
pop
xor
push
(bad)
(bad)
ffree
push
add
std
nop
sub
push
push
cmp
mov
sbb
push
(bad)
push
dec
add
adc
in
dec
cwde
das
movs
mov
or
pop
not
xchg
mov
push
jle
adc
or
xor
mov
stos
mov
in
ds
push
sub
add
aas
pusha
in
xchg
std
push
sbb
jo
icebp
stos
mov
add
mov
xchg
xchg
jb
mov
xchg
les
cdq
aam
cs
test
push
sbb
sti
sbb
js
outs
sub
dec
add
cs
or
xchg
mov
jp
in
add
or
dec
dec
loop
cmp
mov
sbb
jge
mov
push
bound
fsub
adc
jmp
jo
push
fidivr
xchg
retf
fbstp
add
mov
cmp
inc
pop
push
pop
mov
add
les
jmp
jmp
add
pop
mov
repz
aaa
inc
das
pushf
inc
js
mov
pop
cmp
cdq
jo
mov
out
iret
ret
add
add
repnz
shr
inc
cli
in
add
test
aas
and
sub
fist
xchg
jno
js
int3
imul
inc
(bad)
xchg
push
xor
push
mov
jle
jo
cld
leave
ja
jbe
jmp
shl
(bad)
hlt
call
mov
add
retf
dec
mov
and
in
in
and
mov
lock
or
test
sar
loope
mov
sbb
in
and
out
push
cs
(bad)
ins
xchg
jbe
ror
dec
push
pop
mov
cmp
add
sahf
in
xor
out
push
and
mov
push
outs
add
stc
sub
push
rol
jmp
xadd
adc
lock
mov
ss
cmp
mov
add
mov
enter
in
imul
push
and
and
xchg
jle
inc
sahf
pop
and
pop
fwait
popa
nop
cli
pop
ja
push
fwait
xchg
adc
test
cli
(bad)
jp
mov
int
cdq
and
cmp
dec
imul
pop
mov
cmp
or
(bad)
mov
clc
or
dec
imul
repnz
and
cmp
sub
xchg
mov
mov
xlat
xchg
out
sbb
arpl
test
jns
lock
and
jb
jbe
lea
mov
mov
xchg
lods
ja
loope
scas
mov
sti
add
or
ins
bound
xchg
dec
bound
cmps
fisttp
les
pop
add
jge
inc
jb
pop
add
mov
sbb
and
repz
adc
out
scas
dec
xchg
add
or
pop
mov
cmps
push
cld
iret
xchg
and
iret
stos
cmps
repnz
adc
or
inc
push
mov
fcom
push
push
fistp
icebp
bound
cmp
stc
(bad)
pop
stos
adc
sbb
aaa
pop
mov
sub
aas
dec
sbb
jmp
adc
shr
mov
loop
(bad)
ds
xor
fucom
in
jno
retf
xor
cmp
jnp
(bad)
push
xchg
cmp
ja
cmp
inc
jns
movs
pop
cld
mov
mov
test
cmp
sub
jge
mov
bound
push
mov
jb
push
ja
sbb
add
adc
push
std
mov
jmp
gs
imul
and
test
daa
or
ror
clc
mov
jmp
in
inc
xchg
fisttp
mov
mov
out
cmp
and
cmp
and
cmc
mov
or
imul
and
sbb
jle
sbb
xor
bound
add
mov
mov
sub
sbb
xor
push
push
pop
mov
sub
or
xchg
div
mov
inc
(bad)
js
and
in
test
pop
bound
mov
pop
add
sbb
sub
or
mov
test
or
dec
hlt
jnp
sbb
and
xor
test
lea
test
pop
mov
push
(bad)
xchg
push
(bad)
or
and
and
ja
loopne
mov
das
jnp
daa
fild
call
std
and
sub
leave
(bad)
ficom
ret
stc
fcmovnu
or
cmp
retf
sub
iret
jp
xchg
and
jo
shl
out
xchg
leave
mov
ret
shl
jg
ss
lock
and
mov
xchg
dec
inc
int
iret
push
ins
xchg
mov
mov
and
xchg
jnp
pop
push
fucomi
cdq
aad
push
xchg
ficom
push
xor
jns
mov
jmp
iret
pop
or
jmp
add
sub
mov
es
mov
sbb
inc
mov
lds
out
or
ficom
(bad)
dec
adc
mov
dec
pop
dec
int
mov
ret
bound
mov
mov
sub
pop
and
add
cmp
mov
mul
(bad)
hlt
int3
inc
leave
test
icebp
inc
out
dec
std
fwait
popa
jns
cmp
mov
cmp
cs
inc
push
dec
test
retf
test
ds
mov
mov
pusha
ins
xor
push
jl
mov
gs
cli
push
push
push
sbb
or
jecxz
xor
dec
ss
hlt
lods
dec
sub
mov
aad
inc
mov
xor
mov
fsubr
test
mov
and
mov
lods
xor
into
mov
or
sbb
jmp
shl
mov
adc
(bad)
test
imul
mov
in
sbb
jae
cli
or
mov
add
inc
frstor
xor
cmc
or
jo
in
adc
imul
adc
sar
loopne
mov
jle
cmp
push
jno
mov
push
xor
push
push
scas
test
stos
sbb
(bad)
pushf
push
(bad)
lds
and
sub
shl
daa
or
repz
test
jle
cmp
jns
bound
mov
jae
lea
leave
outs
pop
shl
xchg
sbb
jb
mov
es
add
imul
popa
sbb
add
lods
cmp
jle
out
imul
data16
jnp
dec
xchg
fidiv
xchg
jecxz
repnz
(bad)
in
ins
adc
popf
movs
dec
pop
sbb
or
into
sbb
inc
repnz
in
xor
cmc
push
outs
stos
loop
imul
jle
pop
not
pop
fsubr
xor
daa
call
fst
vbroadcasti32x4
pop
adc
xchg
pop
mov
mov
sbb
mov
lea
ret
inc
push
fisub
movs
push
into
pop
inc
cld
dec
jmp
jb
mov
xor
add
cwde
jp
jle
mov
in
hlt
xchg
inc
xchg
fdiv
cmovs
jne
sbb
mov
cmp
mov
sub
(bad)
jae
les
adc
sbb
inc
sub
or
cwde
and
mov
inc
sti
mov
adc
add
das
dec
dec
adc
xchg
xlat
ret
sub
stc
jmp
pop
addr16
retf
sub
sub
add
retf
dec
xchg
inc
imul
not
xor
jmp
adc
push
aas
cld
cdq
xchg
sub
aaa
pushf
xor
add
movs
fisttp
xor
retf
dec
movs
enter
out
(bad)
xor
push
icebp
add
and
xor
je
shl
clc
mov
sahf
cs
and
and
aas
dec
loopne
adc
jae
ret
js
or
inc
xchg
fwait
and
and
jmp
add
or
dec
sbb
sbb
add
leave
je
enter
nop
ss
mov
imul
cwde
lock
and
jmp
je
retf
sub
push
dec
inc
out
push
dec
sbb
mov
mov
outs
mov
push
pop
mov
adc
jmp
inc
xor
aam
stc
sub
stos
adc
inc
test
mov
lea
or
int3
sbb
movs
mov
mov
call
add
xchg
dec
nop
xchg
push
mov
sti
dec
push
and
inc
cs
fbld
jmp
cmp
sub
loopne
js
ret
bound
lds
push
xor
dec
sahf
pop
imul
cmp
or
push
add
popa
imul
pop
ror
dec
and
stos
adc
sbb
into
adc
pop
shr
pop
int3
and
mov
xchg
les
movs
clc
mov
mov
jbe
test
jl
(bad)
jnp
mov
iret
push
not
lods
mov
mov
outs
addr16
ja
push
sbb
cwde
and
xchg
(bad)
cmps
pop
std
push
mov
ja
loope
or
in
test
ror
cmps
dec
fistp
das
(bad)
stos
iret
sbb
inc
stc
dec
add
gs
adc
mov
sbb
or
maxps
adc
loop
adc
lahf
outs
xchg
xchg
out
and
popf
(bad)
test
sub
imul
add
enter
test
aaa
mov
fsubr
pop
fimul
test
cwde
dec
pusha
mov
cmps
xor
xor
push
sti
jecxz
dec
xacquire
mov
adc
push
dec
ret
pop
popf
pushf
adc
fsave
ja
clc
push
out
repnz
cmc
jbe
mov
xchg
adc
lock
mov
daa
mov
pop
mov
in
fild
sbb
outs
xchg
aad
cmc
aad
mov
jg
ficomp
mov
sbb
mov
jmp
sub
rcr
pop
push
mov
adc
inc
xor
test
cmp
movs
cmp
and
add
xchg
jg
mov
call
cs
cmp
or
test
lea
inc
popa
pop
sub
(bad)
sub
push
pop
popf
aaa
sub
in
add
add
push
mov
fbstp
(bad)
lods
or
call
add
scas
cmc
paddw
movs
imul
mov
loop
jg
add
push
outs
push
sbb
cld
jle
fisubr
push
lock
in
push
or
jno
xor
clc
mov
mov
mov
ins
aas
fdivr
push
(bad)
div
fcmovnu
mov
inc
mov
dec
cmp
or
adc
call
arpl
scas
test
push
dec
inc
adc
cwde
lods
sub
enter
push
addr16
fmul
jmp
xor
rol
and
and
xchg
jb
inc
sbb
call
(bad)
push
lea
push
cmp
out
pop
mov
mov
(bad)
jmp
mov
(bad)
jnp
imul
sbb
xchg
popa
or
call
xor
ja
push
imul
sbb
xchg
xchg
push
push
cmp
or
pop
imul
xor
std
xchg
mov
das
pushf
push
(bad)
in
popf
cmp
or
out
inc
and
and
out
mov
popa
xor
scas
adc
imul
lds
ja
jp
mul
fimul
or
and
jg
(bad)
into
jecxz
inc
das
cld
jb
mov
cmp
in
lea
imul
lock
ins
test
outs
or
adc
ret
sbb
sahf
cs
or
outs
sbb
jno
jo
mov
inc
jns
push
stos
push
mov
das
idiv
xchg
cmc
test
mov
xchg
aaa
push
jle
jl
mov
adc
or
mov
jl
outs
fadd
jae
add
shl
rcl
scas
lahf
cld
dec
adc
cmp
outs
mov
mov
retf
in
sub
adc
push
add
rcr
mov
jecxz
dec
mov
dec
leave
mov
sbb
xchg
ror
jp
imul
int
adc
(bad)
sbb
ret
sahf
rol
pop
(bad)
out
lahf
mov
sar
hlt
inc
stos
sbb
(bad)
and
or
(bad)
inc
gs
dec
nop
pop
lods
push
arpl
or
sbb
aas
into
push
add
fsub
or
or
pop
das
jecxz
mov
sub
(bad)
sub
push
lods
jb
les
xchg
lea
leave
sbb
push
(bad)
data16
add
mov
fmul
push
add
push
jns
inc
movs
scas
dec
sub
cs
out
aad
adc
popfw
mov
jne
cmp
inc
ss
dec
mov
jmp
jb
cmp
fisttp
pop
fisttp
jmp
push
int3
fdiv
mov
es
arpl
mov
pop
(bad)
hlt
loopne
out
movs
in
stos
std
aam
pop
aad
fldenv
xchg
xor
dec
jle
xlat
dec
mov
xchg
sub
cmp
std
out
push
rcr
adc
jnp
mov
call
xor
xchg
and
mov
fs
jno
and
sbb
fwait
sti
daa
ror
or
sbb
pop
push
cmps
ret
out
popa
ss
sbb
lahf
xchg
aam
test
inc
jno
mov
outs
xchg
aaa
leave
sar
sub
inc
mov
outs
cli
das
les
mov
cmc
(bad)
push
rcr
push
pop
sbb
inc
inc
and
cmp
aaa
mov
loope
shl
shl
mov
sub
adc
daa
iret
dec
push
rol
gs
imul
xor
out
aas
push
rcr
fcmovb
mov
pop
pop
retf
and
jmp
fwait
idiv
fist
das
dec
int3
popa
fsubr
jmp
clc
dec
data16
dec
loope
mov
pusha
xor
(bad)
neg
add
or
retf
jmp
fadd
jnp
mov
or
inc
pop
(bad)
cmp
and
dec
push
bound
mov
jae
dec
and
push
push
pushf
or
pop
sub
cdq
sub
dec
out
into
fiadd
xor
stc
jbe
cwde
jmp
mov
(bad)
mov
fild
lahf
dec
push
or
dec
pushf
ins
lods
cmp
ret
retf
jmp
xchg
sbb
push
or
aaa
lahf
movs
mov
clc
add
aaa
jmp
ds
fdivr
ja
imul
data16
mov
jl
pop
xchg
add
mov
loopne
sub
inc
sti
push
mov
sub
pop
xlat
mov
dec
xchg
jno
rcl
shl
into
cmp
icebp
cli
mov
xor
push
popa
xor
sahf
sbb
or
sbb
imul
ret
mov
cmps
iret
cld
sbb
(bad)
fidivr
je
cmp
(bad)
iret
loope
sbb
in
aad
and
inc
mov
adc
sub
mov
stos
push
xchg
sub
sbb
icebp
cmps
(bad)
xchg
cmps
cmp
aaa
inc
shl
ins
inc
cmp
add
loopne
leave
loop
mov
jl
jno
cmps
sahf
loop
addr16
xor
mov
(bad)
sbb
and
xchg
in
cmp
mov
inc
test
test
pusha
and
mov
int3
jl
int
shr
cmps
iret
aas
ficom
sbb
xlat
(bad)
fwait
jmp
xor
(bad)
int
dec
and
ja
lock
xor
jge
mov
scas
(bad)
mov
dec
shl
(bad)
mov
rcr
mov
adc
dec
cmps
mov
fxch
leave
or
add
ins
in
gs
(bad)
adc
movs
push
mov
rcr
pusha
pop
inc
dec
and
pusha
daa
out
inc
(bad)
sbb
mov
cmp
std
outs
cmp
and
sbb
dec
sub
jbe
mov
push
mov
adc
or
inc
js
pop
jp
setno
ret
xchg
js
inc
outs
cmc
out
and
jnp
data16
aam
(bad)
cld
sub
cmp
imul
out
cmp
pop
in
adc
popa
sbb
je
jmp
rcr
mov
cld
call
aaa
mov
add
inc
push
in
mov
imul
mov
xchg
xchg
mov
mov
dec
mov
push
push
mov
xchg
fwait
lds
fiadd
(bad)
imul
push
xchg
mov
adc
ja
jge
sbb
rcl
les
xor
retf
mov
pop
push
jl
jp
dec
and
call
xor
push
inc
inc
mov
mov
outs
pop
add
pop
mov
scas
xchg
xor
mov
inc
inc
add
xchg
add
sbb
xor
or
jo
movs
aas
mov
sub
ja
push
jno
mov
or
(bad)
out
popa
shl
jmp
mov
inc
sub
inc
xchg
mov
mov
jbe
pop
sbb
shl
pusha
xor
mov
cmp
mov
fst
lea
and
(bad)
add
addr16
and
sbb
bound
rcl
xor
mov
pop
dec
cmps
push
push
(bad)
and
push
pop
inc
ret
aam
push
mov
stos
call
and
mov
mov
in
movs
pop
out
fisttp
jecxz
cmp
mov
ret
add
fsub
dec
sub
xchg
or
daa
fistp
pop
and
jb
enter
push
ja
mov
je
inc
xor
jmp
fwait
imul
push
jne
mov
pop
aas
adc
xor
push
jmp
sti
(bad)
outs
repz
test
stos
iret
test
add
in
cld
pop
adc
and
mov
adc
out
stos
jo
inc
je
or
lds
dec
mul
dec
aam
dec
push
inc
sub
sub
fld
push
imul
push
(bad)
sbb
and
or
loopne
cmps
enter
jmp
int3
push
shl
add
sti
cmp
repnz
pop
loop
int
aas
mov
ret
or
nop
iret
mov
jnp
jl
loope
push
sbb
lods
hlt
ret
cmps
xor
mov
jle
xor
rcr
pop
repnz
push
into
pop
clc
popf
in
xchg
icebp
sub
pop
jb
cmp
fwait
sbb
inc
or
fwait
out
cs
and
sub
test
mov
sahf
mov
stc
lea
sbb
(bad)
ss
xlat
push
fdiv
(bad)
retf
imul
jnp
adc
add
mov
and
mov
xor
sub
dec
lods
push
jmp
loopne
xor
pop
(bad)
sub
push
mov
sbb
inc
adc
in
test
or
dec
sub
lods
mov
sub
fidivr
dec
pop
inc
mov
loop
xor
mov
add
cmp
fwait
add
and
push
jne
out
outs
xchg
into
mov
cmp
xor
inc
shr
in
sub
inc
fpatan
mov
mov
cmc
clc
or
mov
jns
jge
popf
fist
xlat
mov
cwde
mov
cmp
inc
test
jle
cld
ins
out
mul
dec
sbb
fcmovbe
aad
fwait
stos
mov
xor
fld
cs
sti
dec
scas
cvtdq2ps
sbb
(bad)
outs
(bad)
out
enter
add
add
xchg
jns
outs
outs
mov
jb
xor
ret
ret
dec
xchg
push
cmc
cmps
mov
int3
retf
outs
mov
arpl
loopne
out
loopne
sub
and
imul
fstp
imul
dec
lock
rcl
lea
sti
(bad)
fisub
inc
cmp
popf
mov
adc
mov
je
pop
jg
mov
ficomp
int3
dec
lds
out
nop
out
push
jbe
or
shr
movs
iret
push
cmp
enter
pop
(bad)
ss
sahf
pop
adc
jno
mov
mov
out
mov
out
jbe
imul
jg
cmp
mov
push
sahf
dec
and
mov
jo
jl
pop
cmp
xchg
xor
mov
add
stos
fmul
add
jo
mov
mov
clc
jecxz
or
jne
mov
and
add
dec
shl
mov
add
xchg
xchg
add
in
dec
retf
(bad)
push
xchg
jmp
ja
sub
jecxz
hlt
mov
push
into
hlt
push
xor
sub
clc
xchg
test
in
nop
xlat
test
stc
pop
push
fwait
sub
jge
pop
adc
in
sub
loope
mov
in
cs
adc
jle
pop
(bad)
popa
leave
mov
xor
or
test
ins
or
xchg
sub
stc
imul
fldenv
cmps
aas
mov
dec
jg
imul
mov
aam
jl
sti
pushf
adc
in
add
dec
stos
bound
(bad)
cmp
inc
dec
not
fldenv
pop
lods
mov
scas
rol
imul
add
mov
addr16
adc
shl
lods
pop
push
std
lahf
inc
xor
jae
ins
(bad)
mov
sub
jmp
ja
adc
call
icebp
and
push
nop
aas
xchg
and
popf
pop
sub
pop
mov
sbb
mov
jb
in
xor
call
cmps
cmp
jmp
mov
sti
shl
jecxz
loop
xchg
sbb
dec
outs
ja
fild
jb
daa
xchg
add
dec
push
sbb
cmps
mov
into
mov
enter
add
and
dec
stc
xchg
mov
je
and
adc
pop
test
wbinvd
mov
sbb
enter
cld
ret
rcr
shl
imul
mov
mov
pop
inc
mov
mov
fisttp
jno
sbb
hlt
mov
bound
push
sub
aaa
inc
or
aaa
add
dec
cmp
xchg
retf
fs
out
stc
aas
jae
sub
push
xor
and
sub
leave
les
imul
(bad)
arpl
mov
lahf
xor
comiss
cli
test
sub
ror
dec
lds
enter
inc
ret
mov
push
das
movs
dec
cwde
(bad)
into
mov
mov
push
mov
shl
rcl
mov
push
inc
inc
mov
outs
imul
into
xor
popf
(bad)
sub
ret
and
test
ins
fwait
or
dec
ins
sub
inc
push
add
es
imul
lds
movs
fist
(bad)
push
and
cmc
cmp
xchg
or
fidivr
xchg
sub
xchg
push
adc
jne
aaa
pop
daa
pop
cs
mov
nop
pop
ins
stos
mov
or
cmps
ss
(bad)
movs
jmp
mov
int3
sub
mov
test
pop
shl
xor
mov
push
loopne
arpl
cmps
idiv
dec
xor
adc
add
(bad)
sti
mov
xchg
pop
das
sub
push
inc
out
and
xchg
pop
sub
nop
sub
jp
sub
outs
inc
scas
ss
ret
sbb
and
cwde
jecxz
outs
xor
cli
or
jns
cli
test
xchg
pusha
mov
lock
ss
sti
mov
xchg
rol
xor
pop
cwde
xor
push
dec
stos
rcl
not
ins
(bad)
fadd
je
(bad)
(bad)
std
push
dec
popa
imul
jmp
push
outs
jbe
push
xor
inc
loope
push
inc
in
xor
mov
sbb
jmp
dec
lahf
sti
fisubr
clts
fisttp
cmp
(bad)
dec
jnp
pop
repz
mov
addr16
lea
repnz
daa
jle
shr
xchg
sti
mov
cld
in
mov
xchg
jae
sbb
div
call
sbb
push
or
adc
jne
lea
ficom
out
xchg
pop
and
frstor
stc
push
repz
(bad)
jno
ja
scas
dec
test
jle
sbb
xchg
ret
mov
scas
ret
stc
cmp
push
mov
pop
aad
stos
std
pop
retf
out
int
pop
stc
je
jbe
mov
or
add
or
cld
mov
cli
jl
ffreep
sub
sub
and
stc
and
cmp
enter
push
mov
mov
or
sti
repnz
sub
frstor
out
or
in
cmp
xchg
(bad)
add
xor
in
test
jno
adc
push
pop
stos
sub
addr16
jle
or
cmp
xadd
std
sti
xchg
adc
(bad)
test
nop
dec
inc
pop
hlt
lea
mov
mov
(bad)
jo
fdivr
cmp
repnz
call
mov
fwait
push
fistp
jb
jns
inc
xchg
dec
cmp
pusha
fcom
std
cli
mov
mov
mov
popa
xor
inc
rol
iret
ds
inc
xlat
mov
push
mov
inc
or
shl
pop
into
out
add
dec
in
in
outs
jl
popa
xchg
addr16
mov
imul
dec
stc
add
sti
mov
jno
in
in
cmp
clc
imul
loop
add
sbb
sahf
jmp
cmps
add
cdq
push
and
and
outs
jnp
call
or
or
mov
jle
mov
mov
(bad)
or
mov
jns
mov
shl
repnz
xchg
jp
mov
out
sub
cmp
in
lds
call
outs
aas
popa
or
xchg
fnstenv
mov
inc
fdivr
mov
test
sbb
loop
xchg
stc
mov
out
xchg
mov
(bad)
repnz
int3
add
out
sub
xchg
and
mov
jb
lds
in
loopne
(bad)
pushf
xor
pop
cld
cmp
leave
stos
pop
jno
je
jle
xchg
mov
sub
mov
outs
cmp
in
cld
dec
xor
mov
(bad)
loop
hlt
dec
aad
jmp
mov
and
(bad)
loop
inc
pop
arpl
and
adc
test
mov
outs
dec
adc
push
pop
sub
xchg
jmp
jne
sub
ds
and
inc
inc
pop
cld
pop
mov
inc
pop
sbb
es
fnstsw
xor
and
mov
arpl
fnsave
cmp
ret
cmp
popf
test
popa
test
lds
(bad)
cmp
pop
sbb
mov
sar
ror
int3
mov
(bad)
adc
xchg
outs
mov
push
cmps
test
xor
xchg
rcr
and
push
sub
fstp
push
cwde
xchg
inc
jmp
cmps
(bad)
ror
lods
les
les
cmp
inc
das
out
xchg
clc
or
dec
xchg
int
stos
and
sub
pop
pop
fs
ss
xor
pop
imul
push
pop
add
scas
adc
push
sub
pop
cmp
ret
mov
pop
call
fdiv
xchg
inc
dec
push
and
or
sti
add
cmp
shl
iret
gs
imul
inc
xor
lock
retf
push
pop
movs
out
mov
mov
ror
repz
xor
sub
mov
sbb
cs
je
mov
or
pop
jnp
push
jbe
data16
mul
mov
jmp
(bad)
ins
push
cmp
jg
push
xchg
inc
lahf
(bad)
loope
inc
mov
add
fwait
jne
or
(bad)
fisub
jno
xor
test
inc
imul
pop
jae
popf
dec
ins
inc
adc
xchg
add
mov
inc
icebp
jle
fmul
addr16
xor
clc
(bad)
add
es
inc
stc
pusha
dec
adc
mov
leave
dec
(bad)
mov
clc
leave
jmp
jae
cmp
nop
pop
inc
cmp
dec
sub
(bad)
imul
sub
and
das
cli
mov
adc
(bad)
pop
js
mov
int
add
mov
les
xor
mov
mov
xchg
sub
test
(bad)
arpl
lock
aas
stos
lock
pop
call
cmc
add
out
cmps
adc
test
pop
and
dec
adc
adc
or
(bad)
sbb
aad
in
(bad)
ds
jp
xor
mov
out
aam
xor
daa
div
dec
fnstsw
or
cwde
imul
cs
inc
jne
jle
pop
cmps
test
test
lock
and
push
gs
into
push
and
popf
out
dec
cmp
fadd
mov
inc
mov
mov
loop
mov
pop
test
xchg
push
pop
push
xor
shl
(bad)
std
fnsave
jle
push
vdivps
add
xor
jmp
or
jns
pop
inc
out
(bad)
mov
sub
hlt
sbb
pop
cli
xor
jbe
xor
add
popa
adc
xlat
and
int3
mov
in
xchg
jo
inc
dec
bound
xor
inc
xchg
sti
pop
mov
jecxz
or
test
add
cmp
mov
ret
rcl
loopne
out
or
mov
push
mov
imul
outs
dec
jne
and
(bad)
jns
mov
push
arpl
pop
add
fnstenv
or
rol
add
dec
sub
retf
pop
pop
jmp
jl
sbb
xlat
xsavec
mov
in
jo
sub
fcomp
jo
inc
sbb
adc
movaps
sbb
add
nop
adc
cmp
pop
jb
cwde
add
adc
jge
sti
mov
test
mov
and
loopne
dec
push
das
push
cmps
loopne
jecxz
call
fucom
adc
int
pop
jg
clc
(bad)
into
xchg
cs
mov
in
iret
lods
push
rol
jge
adc
jl
push
mov
or
loopne
sbb
jmp
or
push
retf
pmullw
dec
lds
or
jbe
lahf
cmp
nop
xor
jno
sbb
ins
sub
out
or
dec
pushf
dec
pop
hlt
fistp
xchg
popa
and
(bad)
push
jb
add
lea
sbb
adc
sbb
or
fdiv
mov
jns
or
inc
imul
mov
hlt
mov
xor
popa
jbe
push
mov
sub
imul
mov
test
dec
cmps
into
dec
lea
hlt
ja
inc
mov
push
sahf
push
sbb
out
sbb
mov
jecxz
mov
ret
ins
sub
movs
xor
mov
test
mov
mov
int3
lods
aaa
jo
stos
mul
enter
xchg
gs
data16
call
xchg
icebp
pop
xchg
or
and
fwait
jecxz
mov
jae
fs
dec
iret
fld1
xlat
hlt
mov
xor
addr16
and
jg
pop
or
es
(bad)
cmc
cli
pop
xchg
inc
xor
and
ss
pusha
jnp
sbb
jmp
cmp
ret
mov
aas
jle
xchg
jo
int
and
pop
and
(bad)
mov
std
inc
ret
rcr
and
xor
jmp
retf
mov
cmp
mov
jne
sbb
ds
int3
fsincos
cmp
hlt
jl
add
fistp
adc
inc
rcr
mov
fs
cmps
dec
loope
ins
stos
(bad)
and
pop
or
clc
xor
icebp
fild
stos
inc
icebp
pop
arpl
mov
pop
xchg
cmp
stos
jb
pop
ss
in
retf
xchg
retf
mov
and
push
cmps
mov
pushf
les
ins
mov
xchg
and
mov
cdq
and
movs
jae
add
pop
mov
pop
adc
lea
push
inc
add
dec
inc
or
jg
and
out
adc
fild
mov
clc
sbb
sbb
or
ins
jg
loopne
jmp
(bad)
aad
adc
jb
mov
mov
in
ins
jecxz
dec
dec
in
in
cmp
mov
jb
call
add
(bad)
aad
mov
shl
ss
xor
mov
mov
dec
cmc
retf
and
mov
xchg
push
jl
push
(bad)
or
push
fstp
and
retf
mov
mov
adc
or
xchg
xor
out
push
cmc
add
jnp
push
outs
je
xlat
rol
imul
mov
jl
rcr
sti
ins
mov
sub
cdq
push
pushf
loop
sbb
inc
jg
mov
mov
stc
cmps
add
add
mov
mov
iret
(bad)
aad
mov
jg
inc
inc
scas
sub
mov
pop
popf
xchg
adc
cmp
jnp
hlt
idiv
test
adc
mov
jns
xchg
add
xchg
lods
or
and
add
inc
loopne
enter
pop
pop
sub
xor
fs
mov
sub
inc
mov
mov
push
dec
jno
movs
div
mov
enter
pop
mov
imul
gs
inc
rcr
test
cmps
in
push
or
repnz
push
inc
jae
stos
in
cdq
hlt
push
dec
mov
jo
retf
push
cmp
cmp
mov
out
lahf
fisub
icebp
pop
out
loope
fcomp
mov
jmp
in
popf
sub
call
sbb
aam
pop
int3
pop
push
jl
nop
jecxz
adc
and
dec
jo
dec
sbb
(bad)
xor
xor
jmp
xor
js
jne
cmc
fldpi
fisttp
repz
idiv
mov
(bad)
mov
jb
adc
xchg
sub
shr
dec
aam
lock
adc
inc
and
stos
leave
sub
xlat
stos
std
pop
push
push
and
nop
pop
jmp
xchg
push
mov
or
stos
test
fidivr
push
and
and
ret
cmps
pop
mov
add
dec
jl
cmp
mov
ins
shl
out
mov
pop
jbe
pop
dec
inc
sub
jbe
ins
test
inc
jmp
rcpps
dec
pop
mov
inc
inc
lds
fisub
mov
imul
jmp
jb
jl
jno
sbb
(bad)
mov
push
aam
out
std
arpl
push
daa
dec
neg
push
xchg
(bad)
push
dec
ins
shl
inc
aaa
pop
pop
fistp
mov
pop
and
cmp
adc
jg
ret
in
add
scas
out
jge
push
jg
mov
or
hlt
mov
pop
nop
sbb
jbe
mov
sahf
cdq
arpl
push
int
or
pop
inc
gs
sbb
jmp
mov
mov
adc
mov
inc
inc
aas
pusha
movs
ror
or
inc
xor
retf
mov
push
xor
cmps
xor
inc
jl
add
sub
ret
repz
gs
retf
xchg
cmps
push
scas
xlat
push
rcl
aaa
xor
adc
cwde
adc
jae
jecxz
js
pop
inc
inc
iret
xor
test
xlat
xor
push
xchg
ins
inc
inc
xchg
jg
pmuludq
inc
add
iret
addr16
add
mov
bound
mov
xor
push
arpl
shl
fisttp
xchg
sbb
arpl
push
sahf
dec
popf
in
or
or
mov
xor
jnp
ins
dec
push
add
sub
enter
je
mov
pop
or
xchg
mov
mov
cmp
mov
inc
push
scas
add
pop
xchg
pop
sbb
xor
icebp
test
pop
data16
in
outs
push
jg
stos
mov
sahf
ja
aas
and
call
je
jnp
in
int
mov
cdq
fwait
and
cmp
sbb
adc
xchg
mov
inc
das
cli
mov
sub
icebp
mov
scas
jae
jbe
cmps
and
stos
data16
in
mov
adc
jle
lock
mov
push
in
cmp
mov
in
cs
mov
jp
and
in
mov
inc
cmp
clc
mov
add
mov
jmp
sub
mov
jns
sub
paddusw
movs
sbb
xlat
push
jno
and
stos
rcl
loopne
adc
push
jmp
loopne
push
xlat
pop
dec
test
dec
stos
xor
pop
mov
fwait
dec
scas
and
stos
inc
(bad)
stc
pop
or
xchg
mov
scas
jno
mov
movs
lock
jb
fnsave
cli
push
stos
gs
loop
mov
xor
sbb
sub
outs
dec
sbb
inc
int3
mov
push
jbe
call
mov
inc
(bad)
xchg
cmp
push
add
rcr
loop
pop
cmps
cdq
ins
sahf
sbb
fld
lods
rcr
es
movs
sbb
pop
sbb
stc
jle
pushf
movs
dec
outs
push
pop
cmp
dec
imul
cmp
repnz
das
push
sbb
add
mov
ds
mov
fs
or
call
pop
fwait
into
data16
pop
popf
retf
adc
sbb
inc
mov
mov
sbb
inc
jmp
jl
inc
outs
out
cld
jg
add
int3
ret
mov
push
ss
mov
and
cs
lds
std
mov
pushf
add
inc
dec
ins
outs
icebp
mov
and
daa
aas
movs
add
test
fadd
rol
xchg
(bad)
(bad)
aas
aad
adc
mov
cmc
lods
add
adc
xlat
adc
pop
adc
xor
call
inc
pop
out
out
or
(bad)
(bad)
mov
popa
mov
inc
push
ror
ret
(bad)
dec
pop
adc
lahf
outs
in
fucomi
xor
pop
adc
cli
call
jbe
cmp
push
dec
jb
push
push
lods
jle
test
int3
je
movs
and
popa
(bad)
leave
xor
(bad)
es
into
add
lods
push
ucomiss
push
test
rcr
inc
sbb
js
mov
push
xchg
enter
repz
push
add
or
into
mov
push
mov
pop
push
(bad)
xchg
mov
inc
arpl
push
mov
jmp
cmp
mov
shr
jmp
pop
cmpxchg
adc
out
call
push
xchg
or
movs
pop
inc
push
inc
push
cmp
inc
cmp
hlt
sbb
cmp
cld
push
or
cmc
aaa
aas
aad
call
int3
lahf
out
out
jecxz
dec
scas
popa
ret
or
aad
add
repnz
fsub
xchg
and
into
add
arpl
retf
xchg
sbb
dec
mov
xor
ret
adc
mov
sub
mov
mov
sub
out
jmp
pop
lods
(bad)
clc
jecxz
shr
xchg
call
mov
aaa
daa
cmps
sub
sahf
dec
xor
call
xor
jns
stos
pop
call
shr
movs
pop
sar
(bad)
push
mov
xlat
add
call
icebp
inc
pop
out
xor
cwde
mov
jne
pop
or
add
psubq
mov
test
scas
(bad)
mov
daa
(bad)
cli
mov
sbb
jecxz
cmp
rcr
mov
sub
jmp
or
xchg
cmps
cdq
pop
push
fwait
stc
pop
popa
mov
ret
or
pushf
lahf
pop
or
les
test
xchg
adc
outs
out
imul
add
dec
sbb
scas
jg
pop
sbb
mov
stos
xchg
pop
fisttp
mov
pop
ret
mov
jbe
sbb
stos
push
pusha
and
imul
cmc
repz
repnz
pushf
shl
or
mov
rcr
mov
sub
out
(bad)
idiv
jne
mov
cld
mov
enter
inc
mov
pushf
adc
jne
and
in
jmp
and
and
cwde
adc
add
outs
les
in
mov
mov
mov
arpl
(bad)
jns
out
mov
and
xlat
(bad)
pop
inc
push
adc
adc
mov
pop
mov
add
sbb
pop
sbb
lahf
and
and
test
icebp
out
push
hlt
nop
outs
mov
jle
arpl
rol
jmp
movs
xchg
popa
lods
xor
sub
mov
cmc
jnp
arpl
jns
jle
cmp
imul
or
or
in
stos
sar
mov
add
ror
dec
into
repz
je
(bad)
adc
or
lods
xchg
dec
pop
mov
cmp
jmp
xchg
mov
jb
lds
je
mov
not
sub
or
pop
fadd
popf
mov
push
mov
daa
jg
jecxz
xor
or
inc
mov
push
push
jmp
mov
xchg
add
sbb
jne
xchg
mov
or
aad
aas
ins
ins
push
cmc
ds
sbb
dec
test
adc
push
pop
(bad)
xor
fbstp
pop
shl
in
xlat
mov
cdq
jmp
lods
pop
lods
test
xor
add
sbb
adc
out
mov
ds
jnp
adc
mov
test
movs
loop
and
fstp
mov
aas
enter
push
fcom
add
bound
mov
xor
xor
sub
and
push
(bad)
xlat
mov
in
xchg
mov
(bad)
imul
fisub
xchg
dec
cli
xor
lods
pop
push
pop
dec
daa
adc
imul
das
sub
jl
inc
loope
sbb
add
stos
loop
int3
es
push
sar
ret
and
ds
pop
scas
sahf
inc
stc
leave
test
add
mov
daa
mov
sub
fst
fsub
jge
aas
inc
(bad)
fcomip
inc
test
test
(bad)
adc
les
pop
scas
cmp
ret
test
mov
pop
cmc
das
ins
mov
(bad)
pop
add
es
or
adc
repnz
mov
cmp
push
push
push
xor
push
arpl
or
xor
xchg
shl
mov
mov
leave
arpl
cdq
(bad)
jge
mov
cmp
int3
adc
cmps
stos
popf
rcl
sbb
push
and
jne
shl
jge
add
mov
or
cmp
nop
push
sti
xor
or
jnp
in
cmps
dec
popf
(bad)
xor
add
sub
cmp
xchg
and
repz
mul
cli
lock
leave
movs
rol
data16
mov
xor
mov
retf
arpl
mov
adc
jo
aas
(bad)
push
jae
xchg
sar
cdq
mov
cmp
out
sub
sbb
and
jb
(bad)
xor
jp
lods
aaa
push
mov
mov
gs
popf
mov
push
inc
dec
cmp
lds
pop
push
and
outs
mov
jno
xchg
jmp
xor
iret
sub
sub
mov
push
inc
jnp
aaa
dec
jp
retf
pop
cdq
mov
in
and
ret
cmp
xchg
in
in
ins
xchg
inc
and
xchg
mov
jno
enter
nop
push
add
in
gs
ror
dec
dec
repz
in
jg
and
or
dec
and
or
pop
popa
fidivr
loop
cmp
jp
out
mov
imul
mov
add
inc
jmp
and
sbb
and
dec
pop
or
mov
mov
jns
aam
jb
in
icebp
jno
les
or
mov
inc
pusha
imul
inc
inc
jae
retf
jmp
or
or
sbb
xor
xor
push
jl
pop
es
leave
fwait
jne
or
xor
xor
mov
inc
cmp
jecxz
xchg
jg
je
xchg
sbb
add
ret
adc
or
movs
out
mov
adc
adc
iret
cdq
rcl
dec
and
in
ds
jne
mov
lock
xlat
dec
cs
fs
and
call
pop
popa
dec
add
movs
inc
retf
popf
jecxz
pop
inc
loop
sub
xor
out
pusha
mov
sar
dec
dec
xor
hlt
cmps
test
int3
or
(bad)
rol
stos
sbb
pop
movs
mov
ret
mov
retf
xchg
or
push
sub
test
shl
in
cmp
pop
jno
or
mov
sub
inc
pop
out
out
xchg
push
cmp
(bad)
cmp
mov
ins
inc
test
dec
jmp
(bad)
sub
test
or
pusha
stc
shl
lock
ror
and
inc
xor
stos
jecxz
push
fist
into
je
scas
not
fisttp
push
retf
ja
add
popf
je
and
fwait
cli
test
arpl
mov
push
and
push
test
add
(bad)
cmp
popa
adc
push
dec
push
stos
les
nop
mov
les
mov
sar
pop
xchg
ret
and
out
xchg
sti
sbb
leave
xlat
retf
adc
push
(bad)
mov
or
add
xchg
cmp
adc
pop
shl
test
jae
mov
movs
push
fisub
daa
int3
mov
cmp
inc
out
jge
sub
xor
inc
xor
xor
imul
jmp
push
ja
jae
adc
xor
jne
pop
add
xchg
scas
pand
icebp
inc
arpl
popa
adc
push
call
call
dec
int3
sahf
mov
xchg
adc
cmp
es
in
call
pop
add
cmp
xlat
xor
inc
jne
inc
dec
icebp
mov
cmovp
mul
daa
inc
test
mul
int3
mov
or
cdq
sub
jl
mov
mov
mov
adc
mov
iret
sbb
inc
dec
dec
or
dec
cmp
cmps
mov
ss
retf
out
in
jns
jbe
and
les
fild
jmp
sahf
push
hlt
and
pop
fisttp
das
sub
je
jl
inc
in
sub
test
xchg
pop
popa
or
out
movs
lods
out
aaa
lods
fstp
test
mov
mov
mov
sbb
cmp
or
jnp
adc
push
or
push
jg
mov
ins
push
or
f2xm1
adc
loope
retf
cmps
dec
int3
rcr
lahf
push
xchg
pop
imul
aam
cs
fist
enter
or
ss
mov
and
neg
xchg
test
outs
dec
repnz
adc
add
dec
jg
sbb
fwait
cmc
pop
jb
fimul
aad
ror
jnp
sbb
xor
xchg
lods
xor
cmps
fisttp
sub
jb
dec
rcl
ror
sub
hlt
lea
(bad)
stos
mov
stos
mov
imul
mov
xchg
popf
mov
cdq
in
cmp
dec
dec
add
loope
and
test
mov
mov
or
fucomi
lahf
test
repnz
cmp
dec
jmp
jg
adc
sar
jge
bound
(bad)
jb
lock
call
xor
dec
pop
fcmovb
jmp
mov
movs
pop
cmp
popa
xor
out
xchg
dec
push
(bad)
jns
mov
jne
xor
outs
mov
push
jo
sbb
lods
mov
stos
cs
aas
out
mov
mov
and
pop
xchg
and
jecxz
sbb
pop
xor
stos
jne
push
loope
mov
mov
and
cli
dec
aad
push
or
pop
pop
js
push
push
mov
rep
fstp
jbe
imul
ja
and
dec
(bad)
xchg
cwde
lods
sbb
add
pop
push
push
(bad)
pop
outs
in
imul
(bad)
cmp
jbe
push
lahf
xor
xchg
gs
daa
enter
call
mov
fild
int
ins
scas
xchg
adc
or
jmp
in
scas
cmps
push
mov
pushf
mov
inc
ja
or
ins
jbe
dec
inc
pop
mov
in
add
scas
dec
push
sbb
jmp
push
loope
mov
sub
vmovsldup
jne
inc
push
jg
(bad)
push
mov
test
pop
dec
loop
out
jne
push
mov
mov
jae
mul
gs
xor
mov
cld
jbe
aad
fld
stos
jl
cmp
retf
push
aaa
shr
bound
or
cwde
call
sbb
icebp
adc
fmul
(bad)
jle
cwde
cdq
loopne
add
pop
data16
ins
mov
mov
jns
fisttp
fsub
xor
sub
push
and
fstp
inc
arpl
adc
in
push
lods
mov
loop
ror
adc
mov
iret
or
or
std
sbb
fistp
in
jp
sbb
sbb
fistp
int3
in
pop
fist
repz
adc
inc
(bad)
sbb
dec
lahf
aaa
jne
pop
push
pop
xchg
cmp
xor
imul
sti
adc
sti
ret
push
pop
add
fld
sbb
jb
das
cmp
js
pop
(bad)
fiadd
test
popf
jecxz
inc
es
js
cmc
bound
xchg
imul
xlat
sub
in
adc
repnz
data16
shl
cmp
pmuludq
jnp
add
fstp
fild
cvtdq2ps
ret
pop
(bad)
pop
lahf
aas
sub
jecxz
mov
sbb
fstp
push
push
enter
(bad)
adc
int3
lea
imul
or
xchg
sbb
retf
data16
pop
iret
jge
mov
(bad)
cwde
dec
stos
cmps
nop
and
xor
pushf
pop
mov
xchg
push
adc
pop
icebp
lahf
xor
adc
dec
xchg
cli
mov
inc
push
loope
and
mov
test
add
cmp
dec
mov
imul
(bad)
add
mov
mov
jp
xchg
jp
jmp
rcr
sub
hlt
test
xor
sbb
dec
mov
mov
gs
push
mov
test
sub
nop
fs
mov
add
enter
(bad)
popa
or
mov
and
sbb
adc
or
dec
pop
xor
les
push
inc
test
rcr
in
nop
sub
or
lea
jp
pop
pop
(bad)
pop
adc
and
mov
fnsave
push
fimul
and
mov
fs
mov
(bad)
enter
(bad)
mov
ja
and
adc
fst
stos
push
in
jmp
fistp
xchg
push
lods
fisub
sbb
in
fiadd
aam
pusha
jmp
div
div
inc
xor
nop
leave
icebp
jne
and
sbb
lahf
xchg
add
mov
shl
pop
push
aad
pop
shl
(bad)
mov
lahf
jnp
push
inc
push
dec
aad
sbb
mov
or
lods
std
xchg
iret
jo
data16
je
fwait
es
mov
or
(bad)
fwait
mov
pop
pop
int
test
fisttp
add
ror
test
or
cmps
cmps
popf
adc
call
sbb
fcom
scas
sub
pushf
outs
inc
xlat
adc
daa
sbb
test
das
popa
and
mov
jecxz
jle
outs
rcl
mov
xor
xor
push
ja
stc
cli
daa
(bad)
jo
je
leave
push
push
cwde
adc
movs
sbb
inc
retf
arpl
jns
mov
mov
movs
mov
rcr
maskmovq
mul
in
aaa
sahf
xlat
cwde
scas
cmps
das
idiv
fcomp
pusha
mov
push
jp
jmp
cdq
sti
mov
dec
test
push
sub
add
cmp
outs
jecxz
mov
xlat
mov
or
mov
rol
(bad)
fnstenv
add
cld
int
xchg
gs
inc
xor
hlt
in
jmp
popf
(bad)
ror
cmp
xchg
add
jns
push
movs
stos
mov
push
repnz
mov
in
je
pop
ins
jl
movs
push
ss
adc
mov
aaa
pop
sahf
jmp
jnp
cs
fcmovbe
cmc
xor
cmp
outs
ja
ret
and
push
shl
dec
retf
stc
lea
xchg
shl
dec
mov
sub
frstor
and
movs
out
and
movs
push
inc
test
jmp
xlat
dec
imul
and
(bad)
sub
xchg
cmp
into
dec
cmp
jecxz
push
inc
push
inc
imul
jmp
cli
mov
div
lods
xchg
and
xlat
mov
mov
or
pop
jge
iret
lods
cmp
pop
fidiv
cli
push
and
stos
inc
xchg
inc
push
test
sbb
inc
add
shr
in
aam
xor
xchg
inc
loope
mov
ins
ret
push
repnz
out
loope
add
mov
or
jns
data16
and
cs
adc
retf
pop
cmp
stos
jg
mul
ins
cli
mov
mov
sub
sub
sbb
sbb
inc
arpl
xchg
stos
mov
mov
and
pop
sbb
dec
xchg
push
adc
arpl
xchg
jmp
jle
inc
mov
leave
jecxz
xchg
push
mov
mov
xor
stc
jns
fs
fwait
mov
loope
push
xchg
ja
pop
test
pop
cdq
push
jg
jbe
mov
in
popa
loop
dec
enter
push
mov
mov
in
hlt
aam
mov
fsubr
and
xchg
adc
jle
xchg
stos
xchg
xor
adc
sub
mov
xchg
aad
shr
(bad)
ss
ins
pop
(bad)
mov
inc
popa
ds
or
xor
ret
push
xor
scas
pop
sub
icebp
xchg
jmp
ss
call
loopne
mov
mov
lds
mov
xor
ins
fild
mov
lock
add
fldcw
inc
mov
sbb
jno
repz
mov
mov
call
aaa
mov
in
mov
nop
js
sbb
mov
in
retf
sti
cmp
mov
mov
gs
(bad)
cld
adc
js
sahf
add
or
push
ja
and
stos
ja
pop
and
les
repz
sbb
pop
js
or
test
push
into
pop
ficom
fimul
movs
mov
ja
jp
and
test
mov
xlat
cs
and
(bad)
clc
sbb
lds
mov
cmp
loopne
push
out
jp
loop
es
xchg
xchg
mov
push
(bad)
xor
sub
cmp
adc
repnz
loope
fistp
mov
ss
sbb
addr16
xchg
es
int3
and
dec
push
mov
push
(bad)
fwait
add
shl
scas
xor
mov
and
in
sbb
fmul
xchg
pop
movs
arpl
jbe
daa
(bad)
out
dec
lahf
jge
movd
outs
jge
movs
aam
sbb
mov
arpl
shl
mov
ret
jo
and
xlat
adc
push
add
jecxz
cld
das
xchg
mov
hlt
jle
dec
(bad)
aaa
test
aaa
jl
inc
adc
je
xor
push
mov
repnz
stos
pop
adc
push
rcl
mov
into
cmp
aam
jb
in
sbb
out
push
xor
jns
out
call
cmp
fnstcw
pop
push
fsubr
xlat
mov
inc
das
xchg
and
aaa
sub
pop
stos
call
add
and
das
ja
fsub
mov
lds
or
sbb
(bad)
mov
cmc
out
and
sbb
mov
push
rcr
cmp
retf
enter
push
(bad)
xchg
jg
fcmove
cmp
(bad)
sti
xchg
dec
sub
or
addr16
mov
ins
mov
ins
mov
pop
das
push
pop
adc
pop
jmp
sbb
out
icebp
iret
sbb
add
fisttp
mov
or
out
repz
mov
or
hlt
add
pushf
jmp
push
or
fisubr
addr16
test
out
sbb
pop
int3
pop
inc
mov
(bad)
sbb
push
sbb
jae
lods
minps
or
or
in
hlt
dec
stos
sbb
push
(bad)
and
and
ret
mov
sbb
fwait
dec
jno
push
scas
ja
mov
aad
mov
jmp
xchg
addr16
ja
shr
cmp
mov
pop
mov
in
dec
pop
test
jbe
mov
scas
jne
out
add
mov
jg
jae
mov
or
jp
lahf
xchg
adc
jo
xlat
push
and
cld
shl
inc
cmp
sahf
or
add
sbb
cmp
mov
and
rol
leave
pop
(bad)
cdq
dec
popa
fimul
jmp
sub
(bad)
shl
in
xlat
rol
das
mov
or
mov
push
sub
xor
(bad)
mov
int
dec
push
outs
xchg
lods
push
jnp
add
jnp
call
daa
retf
ja
or
mov
scas
out
test
adc
pop
jecxz
pushw
div
mov
sbb
test
movs
adc
test
fcomp
jmp
dec
push
cmps
add
mov
push
lods
mov
loop
mov
shl
out
ins
jnp
iret
outs
push
pop
cli
xchg
jmp
out
arpl
sbb
mov
imul
and
(bad)
aam
rcl
outs
add
jne
or
sbb
jno
and
xchg
icebp
enter
aam
std
popf
retf
pop
clc
dec
sbb
jns
stc
inc
pusha
xchg
mov
pop
movs
lock
pushf
push
into
cmp
jle
jmp
ins
xchg
mov
cmp
mov
ja
es
mov
push
and
pop
cmc
push
dec
hlt
cmc
das
mul
adc
mov
mov
pop
push
into
ss
test
pop
mov
mov
cs
xor
xchg
int3
ja
jne
mov
push
cs
sub
mov
loop
stc
adc
jno
mov
shl
sub
movs
dec
xor
add
test
aaa
xchg
xchg
adc
fld
sbb
cmp
push
push
not
xchg
stos
shl
adc
mov
jmp
arpl
sub
jle
fst
cwde
mov
xor
jb
push
call
fst
add
cdq
test
push
cmp
mov
stc
leave
addr16
idiv
pop
dec
cmp
and
jo
cmp
and
mov
jno
or
xor
inc
push
pop
mov
ds
dec
push
jmp
gs
mov
outs
xchg
pop
(bad)
fcom
jmp
pusha
xor
out
xchg
aad
(bad)
mov
cmps
lahf
push
leave
xor
inc
mov
add
fs
repnz
mov
jbe
sub
mov
cmc
(bad)
mov
jg
xchg
retf
dec
sbb
or
pusha
mov
or
dec
or
jbe
sbb
xor
inc
or
popf
adc
push
dec
imul
jo
clc
xor
les
cmp
pop
xchg
or
jmp
adc
sbb
and
adc
fmul
test
(bad)
xor
in
stos
mov
mov
enter
in
mov
rcl
shl
xlat
(bad)
jmp
mov
pop
icebp
push
sbb
push
sahf
(bad)
movs
mov
ins
dec
inc
xor
test
cmp
icebp
and
in
push
pop
push
cld
lock
add
mov
sbb
shr
outs
(bad)
push
pop
mov
sti
add
cmc
shr
ss
dec
stos
out
mov
xor
je
iret
sub
xor
cmp
cli
xor
jb
xor
sbb
pop
cmp
sub
push
movs
lods
mov
mov
or
adc
(bad)
scas
mov
push
cmp
xchg
add
cmp
adc
ret
jno
cmp
pushf
dec
push
mov
lea
pusha
mov
ret
dec
repz
jp
cli
retf
push
inc
(bad)
hlt
push
(bad)
xor
repz
mov
add
mov
das
push
nop
aam
fwait
dec
inc
add
xchg
int3
not
push
into
test
pop
ret
jecxz
cmps
outs
test
arpl
std
je
cdq
(bad)
mov
xor
stc
(bad)
adc
xlat
cmps
or
in
pop
scas
or
push
xchg
imul
jmp
enter
mov
mov
sti
popf
leave
out
xchg
hlt
inc
stos
repz
or
loope
cmps
ret
aam
pop
sahf
mov
loop
popa
cmps
pop
push
or
sub
scas
lods
pusha
jo
mov
dec
in
mov
sbb
icebp
mov
jbe
imul
xor
jno
ret
and
add
stos
clc
je
cmp
pop
loop
int
jns
loopne
push
call
ins
shl
jl
(bad)
fnsave
sbb
push
rol
shr
xchg
add
jecxz
mov
mov
not
das
pop
mov
sbb
mov
push
and
or
or
repnz
into
ja
and
test
push
js
inc
sbb
hlt
cmp
mov
fistp
sbb
xor
push
push
fdiv
leave
cmc
mov
add
std
fistp
repz
shl
xchg
aaa
pushf
adc
push
in
dec
shl
adc
mov
pop
rcr
int3
add
pop
mov
test
psubw
pop
add
loope
lock
aad
xor
add
cmps
loope
mov
inc
pop
xchg
enter
enter
imul
dec
mov
xor
cmp
cmp
cld
fnstcw
push
out
jne
push
pop
fld
xchg
loope
mov
mov
inc
loop
dec
ins
int
dec
ja
cmps
cli
inc
fiadd
imul
xlat
xor
jge
mov
or
cmp
jns
pop
outs
dec
push
pop
popa
adc
ror
not
fs
mov
or
mov
stos
pusha
xor
dec
sub
xor
enter
jg
sbb
test
shl
dec
fdivr
mov
sub
jno
ret
mov
ud1
movs
pop
(bad)
test
sub
imul
cdq
add
fwait
ss
mov
cwde
cmp
push
and
mov
(bad)
hlt
stc
popa
inc
pop
xchg
ins
popf
xor
mov
std
add
imul
sub
inc
push
pop
mov
xchg
mov
int
repnz
icebp
adc
retf
repnz
pop
mov
les
loop
(bad)
mov
or
xor
push
fnstcw
mov
imul
sub
rdmsr
aad
mov
add
dec
pop
adc
push
sbb
jmp
xchg
adc
fcomp
test
cmp
jle
or
mov
xchg
nop
xor
and
fwait
or
ss
lahf
sbb
adc
jle
test
jno
lahf
scas
xor
repnz
(bad)
mov
clc
leave
loop
mov
call
pop
loop
int3
sub
nop
add
pop
dec
mov
movs
adc
retf
mov
ja
xchg
dec
icebp
mov
push
or
call
xor
ja
inc
inc
dec
push
inc
das
xor
mov
pop
mov
aad
movs
add
push
pop
or
movs
cmp
push
xchg
jg
dec
and
(bad)
lods
sbb
movs
ja
and
nop
popa
imul
push
push
dec
jae
dec
xor
lea
jns
xchg
dec
adc
jp
xchg
cmp
cmp
(bad)
cli
test
jmp
loope
mov
ss
ror
push
jge
mov
ins
or
or
int
(bad)
fs
pop
das
fild
push
mov
neg
lea
inc
mov
in
or
mov
arpl
ins
sub
cwde
inc
push
mov
cli
fnstsw
cld
mov
sub
out
test
or
aas
xchg
adc
(bad)
test
add
mov
xchg
sbb
ret
cmps
mov
cmps
push
(bad)
div
jecxz
lock
lods
in
jae
mov
add
outs
jae
push
iret
fmul
sub
push
out
lods
sub
les
mov
aad
mov
pop
ror
mov
mul
jb
mov
dec
lea
cwde
in
mov
mov
je
test
fnsave
clc
dec
mov
cmp
test
adc
sbb
push
shl
call
in
cmc
cmp
sbb
mov
cmps
pop
gs
pop
mov
mov
enter
add
adc
mov
stos
stos
ins
rcl
jl
add
test
arpl
sbb
pop
pop
xor
data16
jne
jp
imul
mov
fs
(bad)
jmp
push
add
stos
in
es
cwde
lds
mov
popf
push
push
shl
push
lock
inc
(bad)
hlt
bound
mov
jecxz
pop
and
ds
fsubr
jb
or
xchg
push
cmps
ret
imul
jnp
cdq
ds
or
adc
mov
cmps
fmul
xchg
jge
inc
fiadd
cmp
cs
inc
cmc
dec
scas
push
addr16
add
lea
pop
sbb
ja
rcr
fldcw
sbb
mov
loop
xor
sbb
add
repnz
fstp
xor
mov
in
movnti
fwait
ret
es
shr
inc
movs
push
neg
imul
das
cdq
scas
sahf
cmps
add
cli
repz
repnz
inc
jnp
aas
xor
cmps
jo
and
popa
pusha
repz
enter
jns
xor
pop
call
mov
dec
mov
out
int3
pop
pop
mov
adc
ficom
leave
stos
in
clc
mov
cmp
add
dec
enter
scas
push
jecxz
retf
outs
sar
push
jbe
enter
test
push
sti
loope
gs
retf
les
ror
fist
and
loope
pop
daa
lods
and
popf
jnp
das
lds
pop
(bad)
mov
(bad)
jb
iret
stos
cld
push
clc
jecxz
outs
push
lods
add
add
rol
pop
stos
sbb
ror
dec
pop
clc
adc
sbb
ss
jge
pop
mov
mov
sub
xchg
dec
or
and
and
and
mov
cdq
out
or
(bad)
and
mov
xor
push
ret
mov
movs
sub
jmp
pop
dec
enter
cld
ret
das
cmp
pop
or
dec
es
int3
(bad)
xlat
dec
mov
add
pop
out
cmp
mov
push
ins
or
xor
mov
push
js
cli
xor
aad
or
xor
xor
add
sbb
iret
jae
ret
pushf
shr
mov
fdiv
cmp
sbb
sar
jp
cdq
sbb
push
shl
mov
loopne
jg
js
and
add
jae
ins
mov
ret
arpl
mov
lahf
mov
cmp
mov
cmp
mov
in
js
punpckhdq
push
xor
scas
in
inc
mov
inc
push
int3
mov
mov
pop
xlat
lods
push
arpl
in
add
sub
aaa
jmp
std
loope
rol
icebp
cmc
movs
aad
ret
mov
pop
inc
loopne
out
and
iret
pop
fild
movs
dec
add
and
loope
fdivp
aas
pop
pop
adc
popf
or
adc
mov
jmp
loope
push
dec
xchg
pop
(bad)
push
add
and
cs
inc
xor
in
xor
dec
dec
jns
int
adc
(bad)
cmp
fwait
xchg
cmp
push
movs
es
xchg
rcl
or
ret
imul
push
jnp
fld
xor
push
daa
sub
fwait
int3
cmp
or
gs
scas
scas
jo
jnp
jns
push
adc
push
push
dec
or
je
sub
in
mov
nop
sub
mov
adc
add
in
vmovdqa
int3
sub
in
add
fs
xlat
pop
dec
call
cmp
jae
fcom
dec
sub
retf
xchg
jl
dec
jno
jle
mov
jbe
and
sub
ins
jmp
jl
adc
mov
pop
xor
std
xchg
cli
pop
out
add
rol
aaa
mov
retf
cmps
(bad)
fisttp
and
mov
jnp
add
inc
add
add
in
lods
ins
(bad)
adc
mov
mov
(bad)
mov
push
hlt
sar
dec
ret
mov
sub
movs
push
jnp
pushf
and
sub
jg
cmc
test
iret
retf
jne
ret
loope
push
jmp
scas
fst
adc
jne
mov
stos
imul
xlat
neg
in
rol
cmp
test
loopne
cmp
mov
adc
inc
mov
stos
xchg
(bad)
imul
sbb
js
arpl
or
out
pop
repz
arpl
adc
mov
loopne
repnz
xchg
aas
add
movs
and
lock
mov
(bad)
nop
scas
xchg
outs
jmp
imul
cmp
cld
test
clc
push
mov
push
aaa
add
jnp
add
scas
mov
(bad)
add
xor
mov
and
(bad)
cmp
push
jae
ficom
push
inc
xchg
cmp
adc
sbb
inc
push
enter
cmp
js
mov
out
popf
fcom
cli
add
pop
add
dec
sti
cmp
xchg
nop
out
gs
aaa
adc
xchg
hlt
push
push
lods
add
(bad)
fadd
sar
cmp
sbb
test
mov
fs
mov
popf
imul
cmp
aam
and
inc
jecxz
fdiv
retf
or
fstp
gs
dec
out
dec
aad
xchg
mov
rol
xor
pop
push
xor
sub
lods
add
sub
cmps
mov
bnd
pop
jg
and
jmp
int3
mov
shl
fst
jmp
or
xchg
jno
adc
mov
aaa
or
xchg
out
adc
dec
fucom
sbb
fmulp
cmp
jbe
sti
(bad)
leave
jg
out
or
xchg
mov
or
sub
adc
cli
inc
push
and
mov
pop
outs
cmp
sti
and
mov
cmp
cmp
mul
out
out
adc
in
lock
push
test
shl
fst
dec
push
mov
data16
mov
jo
dec
jge
(bad)
pop
fmul
(bad)
mov
shl
jmp
stc
dec
jbe
lock
fisttp
cwde
mov
mov
mov
xchg
xor
pusha
std
ins
cmp
mov
sbb
clc
arpl
shl
cmp
mov
das
lea
mov
mov
mov
push
push
or
pop
or
jmp
mov
loopne
jne
jb
jb
and
add
pusha
push
pop
dec
mov
xor
mov
add
xor
call
test
leave
and
test
cmps
add
sahf
inc
mov
sbb
pop
xchg
push
or
push
jnp
add
je
dec
or
ret
(bad)
xchg
cmp
inc
mov
dec
lock
enterw
daa
ds
retf
scas
sub
ret
adc
sub
or
cmp
lods
sub
add
sbb
clc
loop
rcl
outs
ins
add
sub
jno
outs
and
or
add
or
push
push
pop
and
ins
sbb
push
into
retf
mov
bound
inc
mov
cmp
add
rcr
ds
pop
fld
daa
mov
jecxz
mov
iret
sahf
xor
push
sub
sbb
fistp
cli
sbb
jl
std
dec
dec
mov
sbb
sbb
jb
clc
cmc
cmps
cwde
xchg
aam
sbb
pop
mov
faddp
std
jno
sub
pop
imul
mov
dec
mov
or
or
xrelease
cmp
iret
leave
loop
xchg
xchg
pop
sub
inc
in
xchg
out
xchg
sti
sub
adc
mov
cmc
xchg
enter
xor
adc
mov
mov
ret
fisttp
mov
fwait
imul
mov
and
aad
int3
jae
rcl
test
lds
sti
in
pushf
pop
inc
xor
adc
int3
xlat
mov
fmul
push
in
pop
test
push
mov
in
into
cli
jmp
rcr
ret
retf
push
cld
sbb
inc
or
xchg
and
add
gs
call
push
or
inc
inc
xchg
retf
or
inc
dec
xchg
mov
call
and
retf
shr
scas
jbe
add
fistp
or
xor
jbe
dec
or
ds
js
imul
fistp
dec
dec
dec
cmps
mov
pushf
add
js
out
jmp
cmp
push
(bad)
std
in
inc
lea
inc
sub
ins
ror
sahf
push
cmp
loopne
adc
mov
iret
test
mov
repnz
jge
and
or
mov
gs
jmp
in
and
push
mov
jmp
(bad)
addr16
xchg
fsub
mov
mov
inc
mov
shr
pop
(bad)
push
cmp
sbb
retf
es
push
jecxz
aam
pop
jae
cmc
out
mov
adc
mov
jp
add
xor
jg
mov
mov
dec
cdq
mov
cmc
dec
repnz
data16
mov
loop
and
in
adc
ror
nop
aam
push
lods
fdivr
or
test
es
ss
js
mov
cmps
jne
mov
enter
idiv
mov
out
mov
push
out
popa
sbb
repnz
mov
pop
xchg
leave
lods
inc
adc
mov
in
subps
(bad)
icebp
push
cmp
fnstenv
and
mov
out
stos
test
into
scas
imul
dec
enter
xchg
jge
scas
bound
orps
cld
scas
mov
jno
pop
adc
dec
dec
repnz
pop
jmp
mov
pop
imul
hlt
inc
aad
daa
inc
jbe
xchg
mov
or
jnp
mov
test
or
shl
cmps
xor
(bad)
inc
xchg
rcr
pop
jg
(bad)
ja
adc
scas
(bad)
push
(bad)
into
mov
mov
popa
dec
out
pop
adc
sub
and
mov
cld
outs
add
in
fs
mov
adc
sti
adc
jo
or
sub
jbe
icebp
in
sar
push
push
cmp
fdiv
rcr
and
xlat
xchg
in
pop
scas
(bad)
movs
xor
data16
pop
lock
cwde
xchg
mov
aaa
inc
mov
scas
mov
or
add
out
out
push
sbb
adc
pusha
cmp
movs
pusha
jno
shl
jp
imul
repz
loopne
pop
inc
movs
fnstenv
xor
sbb
aad
add
sbb
xchg
xchg
movs
out
fdivp
add
sahf
shl
dec
sub
not
mov
pop
dec
mov
pop
xor
fcom
out
out
jl
push
mov
mov
cmp
xchg
cs
push
adc
es
and
pop
xchg
jns
iret
stc
out
pop
inc
xchg
das
(bad)
mov
and
inc
ds
dec
or
mov
dec
add
or
jle
xchg
jmp
pop
pop
mov
push
jp
push
jp
mov
sub
outs
call
nop
mov
bound
stos
cmp
inc
cmps
movs
int3
adc
or
arpl
test
retf
cs
push
test
sbb
hlt
les
arpl
or
fistp
jecxz
mov
lds
(bad)
clc
inc
mov
jmp
into
push
call
arpl
xor
jp
jns
das
out
addr16
cli
jp
xchg
cmps
pop
mov
mov
outs
(bad)
xchg
out
sub
inc
mov
and
outs
mov
xor
fldenv
push
mov
inc
lods
(bad)
std
cmc
mov
jae
jecxz
movs
std
das
ss
mul
mov
idiv
lods
leave
inc
mul
test
jmp
rol
mov
xor
pop
fidiv
pop
mov
add
into
pusha
and
hlt
cmps
sbb
xlat
and
retf
sub
jmp
xor
sub
jecxz
ret
pop
jb
stos
dec
dec
fsub
pusha
xchg
mov
ss
push
lock
jge
lock
pop
and
adc
arpl
bound
ror
fdivr
daa
xor
xor
add
test
xor
mov
inc
lods
in
pusha
mov
call
sbb
push
mov
adc
repnz
or
sub
pop
pusha
sbb
in
dec
test
sub
rcr
fisttp
sbb
cmc
ins
mov
or
xchg
push
pushf
iret
inc
js
sahf
fs
das
mov
fild
mov
xchg
sbb
inc
mov
(bad)
push
sub
and
jl
mov
(bad)
xor
ret
mov
call
fsub
fnstenv
sub
scas
xchg
jmp
mov
mov
addr16
add
rcl
aam
pop
outs
dec
mov
push
retf
dec
sub
cli
jg
fidiv
(bad)
shl
push
jg
addr16
inc
inc
add
mov
jle
cli
lea
add
icebp
repz
or
leave
mov
mov
adc
into
jbe
add
mov
imul
jbe
repnz
nop
ret
jnp
add
push
add
jnp
into
jmp
call
(bad)
add
jno
cmps
cwde
sahf
mov
neg
rcr
pop
mov
bound
fldcw
xchg
jmp
dec
jmp
jg
cli
clc
pop
shr
cmps
add
jecxz
icebp
push
ror
or
daa
outs
push
adc
sub
aam
mov
add
ins
or
xlat
inc
pop
add
mov
fs
and
repnz
or
and
(bad)
(bad)
xchg
and
pop
mov
jne
loope
pushf
loop
data16
mov
mov
jg
sub
data16
bound
and
sti
xchg
(bad)
sub
jge
xor
bound
(bad)
dec
jmp
mul
retf
scas
cs
rol
add
shl
jae
call
stos
pop
and
xlat
cmp
out
clc
fist
dec
add
xor
aaa
adc
out
sub
push
jbe
js
fild
iret
push
push
xchg
les
sbb
dec
(bad)
into
mov
pop
mov
mov
push
or
jno
mov
sar
mov
cli
jns
xor
bound
call
cmp
add
push
and
outs
es
mov
lods
imul
xor
fs
mov
iret
xor
pop
mov
and
inc
pop
test
fistp
jnp
leave
repnz
pop
pop
cld
out
(bad)
mov
adc
aaa
loop
(bad)
scas
xchg
mov
retf
mov
dec
pop
in
daa
inc
cmps
cli
js
push
retf
fisubr
test
cld
xchg
nop
xlat
(bad)
ins
ja
xor
pushf
inc
dec
(bad)
and
out
sbb
xor
dec
(bad)
sbb
jge
(bad)
jmp
aas
add
pop
inc
aad
or
idiv
retf
sub
lds
popa
repnz
xor
leave
sbb
or
(bad)
xchg
cmp
and
add
fcmovbe
mov
outs
sti
ins
dec
sub
clc
lahf
add
sub
outs
dec
fwait
repz
aam
cld
fmul
test
add
fisub
sar
xor
inc
cli
pop
movs
dec
jecxz
inc
pop
mov
mul
xchg
mov
test
cmp
pop
repnz
outs
daa
inc
and
pushf
jo
bound
mov
add
hlt
xor
data16
call
mov
fcomp
imul
mov
clts
ret
xchg
sub
(bad)
adc
arpl
or
loopne
test
idiv
into
inc
inc
dec
fdiv
scas
or
adc
inc
mov
adc
dec
pop
out
ret
out
mov
jbe
fcomp
xchg
in
test
sar
out
pusha
clc
inc
(bad)
pop
and
sub
xor
add
jnp
inc
add
jo
push
gs
mov
dec
fcomip
(bad)
cmp
add
and
sub
aad
jb
and
xchg
push
test
adc
push
xor
dec
not
pop
mov
push
dec
mov
pop
sbb
mov
int3
adc
xor
(bad)
sub
inc
add
dec
xor
cmps
xchg
jb
mov
stos
jecxz
sbb
mov
pop
sbb
mov
and
fcomp
stc
cdq
dec
(bad)
xlat
and
ret
ss
repz
out
jp
jl
je
jmp
jmp
pushf
jecxz
cwde
pop
(bad)
xor
mov
or
retf
cmp
addr16
xor
sub
sbb
mov
test
jl
outs
shr
xchg
sbb
test
pop
sub
loope
cmc
addr16
pop
mov
les
sub
pop
jl
cwde
sar
add
or
adc
xlat
ret
pusha
or
mov
fldenv
dec
fs
dec
or
xor
cdq
stos
xchg
in
dec
adc
mov
sti
jle
xchg
xlat
xchg
fidivr
push
xlat
stos
add
or
sbb
retf
cmp
imul
or
push
ja
mov
cmp
rcr
xchg
minps
xchg
mov
rcl
xchg
xor
lock
pop
enter
movs
sub
inc
sbb
shr
cmc
pop
cld
imul
fs
cwde
jae
retf
mov
(bad)
pop
stc
pop
dec
(bad)
push
sbb
sub
popa
cld
dec
pop
push
clc
jmp
dec
jo
(bad)
mov
sbb
hlt
lahf
enter
jmp
push
pop
mov
ret
loop
pusha
xor
sbb
cli
out
mov
mov
and
shr
repz
and
mov
outs
push
pop
add
(bad)
mov
push
daa
ins
aad
call
es
sub
inc
(bad)
mov
adc
loopne
dec
sbb
or
push
and
or
pop
movs
fwait
xchg
test
neg
add
or
popf
fcomp
imul
(bad)
mov
stc
in
jmp
adc
out
cld
ss
nop
xor
data16
add
and
mov
std
mov
imul
inc
not
movs
dec
dec
mov
lock
cmp
popf
(bad)
mov
loope
xchg
xchg
push
pop
std
mov
es
add
sti
sahf
dec
cld
or
jno
movs
pop
xor
and
add
mov
jecxz
push
call
and
jge
xchg
xor
nop
and
xor
cwde
div
stos
add
test
jg
xor
movs
hlt
sbb
inc
mov
sub
rcl
cli
pop
and
shr
ss
mov
outs
mov
fbld
out
arpl
add
or
inc
mov
cmp
inc
push
fdivr
shl
xchg
cmp
lock
xchg
jbe
ss
aad
mov
sub
xchg
nop
pop
loop
loopne
test
cmps
iret
jmp
mov
mov
sbb
and
inc
mov
cmp
mov
xor
adc
outs
push
inc
cmp
fsubr
mov
shl
push
pop
icebp
enter
outs
push
adc
xor
and
xchg
test
ret
iret
push
fcomi
mov
add
aam
dec
out
jae
inc
or
daa
xchg
test
mov
adc
push
sub
add
retf
inc
pop
(bad)
dec
mov
cmc
out
xchg
mov
jbe
aaa
pushf
in
add
ja
mov
rcl
sub
cmp
mov
(bad)
push
es
sub
iret
push
adc
outs
sub
ret
dec
dec
call
stc
mov
std
sub
retf
mov
mov
cmp
jg
sub
ret
arpl
test
iret
push
inc
sub
xor
xor
pop
mov
pop
adc
adc
nop
sbb
(bad)
cmps
movs
inc
test
mov
data16
pop
out
outs
inc
ja
jp
repz
fldcw
pop
xor
sub
jne
scas
jmp
mov
dec
enter
cmp
out
fs
idiv
push
jmp
jge
retf
movs
pop
pop
(bad)
and
mov
and
gs
ret
bound
or
cmp
or
aam
lock
or
jl
shl
(bad)
pop
(bad)
lods
lahf
idiv
or
mov
adc
cwde
cwde
adc
mov
addr16
data16
inc
mov
pusha
mov
jle
out
lods
mov
hlt
xlat
or
fisub
popf
(bad)
pop
jne
lock
lea
add
call
sbb
push
call
stc
ds
das
sahf
loop
xchg
push
les
jne
and
inc
mov
out
jo
add
jns
adc
mov
out
stos
movs
fistp
sbb
out
push
mov
repz
inc
and
rcl
ror
std
add
mov
pop
jno
mov
xchg
push
inc
push
push
into
or
add
push
dec
fistp
ret
pop
push
xor
mov
es
mov
das
and
rol
rcr
nop
adc
std
sbb
sub
aam
inc
int
sbb
repz
sbb
xor
(bad)
movs
sti
adc
mov
jg
inc
pop
cs
sub
jmp
xchg
sub
in
and
sub
and
aaa
stos
retf
lods
loop
cmp
dec
xor
lock
dec
jae
leave
call
pop
mov
std
stos
fmul
mov
dec
das
xchg
sub
and
mov
imul
jae
cld
sub
lods
push
(bad)
cmps
(bad)
ffreep
inc
mov
mov
popf
pop
mov
pop
(bad)
xchg
stos
sbb
sbb
imul
shl
jmp
(bad)
mov
(bad)
fild
xor
dec
into
add
adc
outs
jge
adc
pusha
retf
jmp
in
bound
aam
mov
adc
inc
stc
sbb
push
xchg
jecxz
or
cmc
mov
in
add
stc
push
xchg
mov
imul
xchg
aaa
adc
xor
aaa
fmul
push
in
movs
xchg
sbb
js
int3
hlt
or
jle
outs
test
jno
jns
dec
jae
data16
rol
rep
in
xchg
imul
out
inc
jmp
movs
mov
leave
out
mov
xor
push
ja
pop
fist
xor
or
inc
cld
loop
ror
xchg
in
xor
mov
jbe
enter
xchg
out
out
xchg
xchg
mov
pop
and
(bad)
xor
inc
cmp
int
out
jle
int
mov
sbb
mov
xor
mov
popa
je
mov
sbb
call
xchg
cmp
into
in
inc
sbb
sub
int
sahf
lds
pop
fisub
add
jmp
outs
push
push
jmp
add
jno
sbb
icebp
pop
mov
hlt
pop
lods
mov
iret
inc
jp
lods
or
mov
sub
cmc
rcr
ins
add
dec
jecxz
enter
pushf
je
push
adc
hlt
pop
(bad)
fisttp
mov
xor
(bad)
sar
seto
add
mov
fcom
retf
pop
adc
bsr
imul
add
or
add
push
call
retf
cmp
inc
inc
je
clc
in
clc
xor
retf
add
add
in
inc
iret
sub
arpl
lock
imul
cwde
xchg
sbb
retf
jbe
push
sbb
das
lds
push
push
loop
jmp
loop
add
(bad)
aam
dec
retf
adc
push
adc
(bad)
imul
pop
inc
add
adc
call
lahf
test
imul
fcomp
xor
movs
shl
cmp
sub
inc
repz
jp
in
js
daa
je
inc
mov
loopne
mov
repnz
sub
push
jecxz
mov
mov
mov
aaa
out
sbb
jg
adc
sub
adc
adc
mov
sub
ja
sbb
push
cmp
jmp
mov
fcom
sti
adc
xor
enter
ja
mov
lods
bound
fsub
(bad)
div
pop
dec
in
mov
inc
jmp
inc
push
mov
lahf
lock
adc
cmc
lock
hlt
xchg
repz
ret
xor
xchg
adc
xor
inc
inc
jg
inc
in
sar
push
frstor
xacquire
mov
add
jb
sbb
jecxz
mov
push
in
pand
mov
mov
dec
jnp
dec
outs
out
push
sysret
pop
pop
(bad)
sub
arpl
mov
repz
pusha
pop
xor
xor
mov
add
movs
and
jno
jge
push
mov
xor
inc
mov
cmp
pop
cdq
sub
scas
outs
jl
mov
cmp
(bad)
ret
sar
or
sahf
lds
(bad)
push
imul
or
dec
data16
or
into
push
adc
push
inc
(bad)
loopne
mov
xchg
leave
jecxz
dec
lods
int3
rol
cmp
pop
push
scas
xchg
sub
jb
add
and
pop
or
stos
add
push
cld
add
test
fmul
std
xor
out
fcomp
dec
hlt
and
mov
xchg
out
(bad)
pop
mov
jecxz
xor
jl
arpl
push
adc
loop
test
or
add
push
out
xor
sar
add
xchg
add
aas
sbb
aad
xchg
add
pushf
call
int
cmps
mov
arpl
inc
sbb
pop
lds
mov
mov
adc
aas
test
push
add
cmp
sbb
cs
ret
cmp
aam
dec
icebp
fild
leave
outs
cli
loope
dec
rol
pop
ffreep
jecxz
adc
pop
addr16
mov
cmp
arpl
push
xor
fidivr
mov
cmc
sub
fistp
push
leave
mov
mov
inc
pop
je
inc
xchg
xor
dec
das
jge
or
loopne
leave
(bad)
cmp
inc
in
stos
dec
sbb
jmp
mov
cmps
or
mov
mov
lods
dec
mov
xchg
ins
nop
mov
mov
jmp
std
gs
jmp
mov
sbb
sbb
push
idiv
push
lahf
aad
mov
dec
jno
in
aam
mov
fwait
pop
fs
imul
rol
lods
stc
frstor
pushw
dec
in
inc
adc
xor
repz
cli
sahf
adc
test
xlat
into
mov
adc
push
xchg
or
and
inc
retf
dec
aad
fcmovne
sbb
or
test
fcom
dec
or
iret
push
sbb
jns
jle
sbb
mov
jl
dec
(bad)
mov
sti
sti
sub
sbb
cmps
jmp
mov
and
dec
dec
rcl
pop
jle
xor
mov
ret
(bad)
aas
out
mov
(bad)
not
call
and
xlat
mov
lock
inc
mov
(bad)
mov
das
mov
outs
inc
sahf
or
inc
out
ror
or
add
jecxz
mov
repz
xchg
jns
sahf
mov
sub
dec
xchg
mov
push
fs
mov
sbb
ret
inc
sti
ins
cwde
pusha
sub
mov
cmp
or
jp
scas
jp
adc
clc
xchg
dec
cdq
ja
in
sbb
(bad)
data16
jmp
mov
stos
(bad)
mov
popf
mov
aaa
dec
ret
loope
mov
div
daa
outs
call
dec
popf
fmul
xchg
stos
retf
jg
adc
in
imul
jns
dec
ss
jne
mov
jmp
hlt
mov
(bad)
fidivr
push
inc
cmp
scas
nop
mov
xchg
sub
xchg
out
jmp
cld
jmp
js
in
add
inc
sbb
sbb
cdq
sbb
cmp
jno
pop
cwde
sub
pop
bound
cmps
and
or
and
gs
mov
int
int
xchg
sub
sti
sub
adc
in
addr16
fisub
pop
add
dec
js
fs
sub
jmp
mov
jns
out
xchg
fidiv
bound
cmp
mov
mov
cmp
add
imul
inc
in
add
inc
jl
adc
int3
add
in
int3
xor
jecxz
inc
mov
sub
mov
adc
outs
retf
xchg
or
jmp
call
mov
jb
pop
mov
dec
out
repz
addr16
adc
inc
aaa
int3
(bad)
aad
aas
xor
movs
or
mov
data16
mov
push
loopne
sub
outs
js
arpl
jecxz
retf
dec
iret
cdq
or
movs
xchg
pop
cmp
frstor
xor
or
mov
dec
lahf
jp
cdq
pop
cdq
cmp
int
imul
push
fist
out
xchg
push
daa
das
stos
daa
mov
inc
sbb
cmp
or
push
mov
dec
aaa
in
test
scas
and
sbb
stos
cs
popa
mov
inc
and
sti
into
sub
jecxz
fcom
mov
bound
addr16
jmp
xchg
and
push
jo
pusha
pop
push
cmp
mov
fucomi
ja
mov
retf
out
sbb
inc
xchg
pushf
cli
int
(bad)
je
mov
add
jl
inc
and
enter
arpl
sub
push
xchg
pop
imul
clc
cmp
mov
inc
cmp
outs
shl
add
lods
mov
or
ret
mov
inc
icebp
push
xchg
fmulp
jle
out
or
dec
pushf
xchg
add
mov
cmp
fnstsw
cmp
inc
loopne
push
shl
dec
push
push
cmps
inc
xchg
scas
ds
sbb
faddp
icebp
or
cmp
sbb
lods
xor
(bad)
nop
and
sbb
shl
sub
jbe
cmp
dec
mov
(bad)
adc
mov
jnp
aas
nop
repz
int
mov
repz
pop
mov
mov
jmp
jns
retf
mov
into
lods
arpl
iret
rcl
enter
pop
popf
stc
mov
enter
hlt
sti
mov
mov
jb
lods
push
movs
push
mov
sbb
dec
push
push
sub
jb
dec
or
inc
lods
mov
mov
mov
cmp
mov
movs
pop
add
lods
ret
retf
jg
shr
or
mov
xor
fdiv
mov
pop
sub
stos
push
popf
cmps
jl
shr
shl
xchg
mov
jae
push
cmc
push
ins
push
inc
or
js
and
in
pop
test
out
retf
inc
sub
jl
shl
sub
xchg
ins
ins
neg
sub
in
fstp
mov
add
xchg
loopne
mov
es
cmps
xor
push
call
arpl
ja
data16
xchg
outs
ds
daa
popa
mov
jmp
gs
jb
test
test
daa
shl
mov
dec
mov
ds
xchg
cmp
popa
mov
stc
sar
mov
xor
ret
iret
movs
adc
fcmovnb
loope
aas
push
popa
xrelease
cmc
loopne
sbb
repz
mov
nop
fimul
push
sbb
add
and
into
xchg
cmp
mov
inc
and
inc
out
cli
call
sub
in
or
ins
and
xchg
xor
sbb
scas
push
cmps
cmp
jbe
sub
jmp
test
aad
aam
sbb
repnz
in
xchg
(bad)
leave
int3
cmp
aad
or
jnp
mov
add
rcr
int
adc
clc
add
add
xchg
pop
arpl
pop
icebp
repnz
pop
jmp
pop
outs
sub
fmul
push
jne
(bad)
rep
std
cdq
xor
movntps
cmps
sti
les
mov
sub
test
iret
stos
cwde
test
cdq
in
adc
xchg
aaa
push
adc
cli
mov
lea
mov
out
aam
test
ret
pop
inc
sahf
sub
sahf
repnz
test
(bad)
push
push
mov
das
movs
scas
adc
pop
mov
sub
cmp
or
and
idiv
xchg
sub
sub
xor
cdq
dec
sbb
int
stos
mov
and
in
mov
sbb
jmp
jae
in
scas
jo
pop
pop
int
xchg
cmp
inc
int
dec
adc
xor
adc
lahf
inc
(bad)
ss
shl
cmp
xor
mov
mov
push
sub
sbb
iret
jns
call
inc
xor
cmps
(bad)
pop
dec
ror
jecxz
ja
aas
enter
mov
dec
movs
fwait
cli
aam
dec
sbb
ins
push
test
outs
or
or
ret
dec
out
cld
mov
add
stc
rcr
cdq
xchg
mov
pushf
inc
fwait
add
sbb
mov
dec
rcr
(bad)
out
shl
popf
xchg
ret
cmp
sbb
rcr
add
shl
loop
es
pop
mov
jp
movs
xor
nop
pop
dec
jmp
mov
inc
shr
mov
inc
dec
into
fidiv
jp
adc
(bad)
push
sti
js
ins
ss
call
push
push
pop
mov
pop
(bad)
push
xchg
iret
sar
sbb
cmp
inc
cmp
mov
outs
cmps
xor
test
or
cmc
sbb
jae
mov
push
daa
sbb
loope
jo
jle
scas
(bad)
mov
xchg
mov
jbe
adc
push
xor
(bad)
or
inc
call
js
and
fist
lahf
xchg
push
mov
retf
cmp
xlat
into
or
or
into
sti
loopne
popf
jns
clc
sbb
idiv
movs
stos
movs
pop
mov
xchg
cmp
inc
mov
or
lods
dec
cmp
jbe
xchg
int
mov
mov
fsub
pop
xchg
lock
dec
ret
dec
pop
xor
bound
es
sahf
ins
mov
mov
mov
and
jno
xlat
repnz
mov
movs
cmp
mov
jnp
sbb
les
stc
lods
inc
fcom
and
(bad)
js
aas
cmp
mov
and
and
jp
push
stos
mov
cmp
or
cmc
lods
and
pop
cmp
and
xchg
sub
cmp
mov
mov
mov
shl
adc
add
loope
sbb
push
and
imul
fsubr
mov
sbb
xchg
inc
pusha
push
xchg
call
rol
xchg
cmp
jne
cmp
adc
loope
ja
in
movs
ret
xor
popa
int3
mov
(bad)
enter
pop
scas
addr16
add
test
mov
mov
(bad)
pop
ss
inc
aad
mov
in
push
adc
push
out
mulps
sti
aam
nop
sbb
adc
dec
hlt
mov
xlat
push
aaa
mov
mov
cmps
outs
cmp
mov
or
pop
and
mov
jle
popf
push
mov
jns
push
inc
and
push
sub
pop
aam
mov
jp
xchg
mov
or
and
sbb
repnz
push
xor
cli
leave
ja
and
test
push
mov
into
rcl
fld
mov
(bad)
loope
bound
call
mov
push
outs
(bad)
xchg
test
jbe
inc
sbb
jle
mov
jnp
fcom
test
mov
test
or
jle
cmc
push
into
aas
in
imul
pop
sbb
xchg
xchg
xchg
(bad)
and
dec
jne
retf
cmp
pop
cmp
fisub
or
test
call
icebp
jne
sti
xchg
int3
pusha
mov
ins
mov
pop
aas
mov
test
pop
ss
fcomp
imul
ror
pop
shr
out
imul
jge
jmp
lock
in
add
mov
jmp
pop
call
jo
adc
in
leave
dec
jnp
pop
(bad)
ins
mov
jge
fist
dec
aad
mov
or
adc
cdq
jo
mov
dec
ficom
loop
shr
stos
or
repz
and
xchg
mov
cmc
es
in
pusha
pop
pop
fsubr
add
ficomp
call
or
ins
add
shl
inc
out
imul
or
lods
mov
xchg
lahf
test
cdq
mov
(bad)
xor
(bad)
xchg
in
add
mov
ficomp
sub
in
dec
loope
mov
(bad)
and
dec
imul
hlt
mov
sub
xchg
xchg
sub
adc
pop
xchg
mov
jno
fist
mov
mov
mov
mov
(bad)
xchg
inc
mov
jge
sbb
cmps
mov
sub
and
xor
dec
mov
into
cmp
mov
sar
jecxz
je
jnp
arpl
cmps
pop
cmps
ror
stc
xchg
xchg
xchg
jb
test
dec
jnp
test
shl
push
retf
dec
pop
retf
imul
adc
scas
test
or
lahf
inc
cmp
jmp
or
push
pop
mov
ror
add
inc
jmp
push
xor
std
mov
cmp
and
(bad)
pop
sti
and
repnz
lods
and
sub
pop
pop
or
cmps
or
xchg
ins
add
imul
imul
loopne
or
out
adc
lods
retf
arpl
div
shl
ja
pop
cmp
mov
data16
cmps
mov
jb
test
int
jbe
mov
cdq
ins
push
xlat
daa
xchg
shl
imul
cmp
push
jns
sub
adc
inc
sub
pop
out
xlat
aad
add
ror
in
mov
pop
sbb
jb
gs
and
lock
(bad)
mov
push
push
out
mov
in
jo
sar
push
xor
pop
add
in
test
fidiv
pop
mov
mov
mov
jnp
fcomip
or
loope
jle
into
pop
cwde
xor
mov
jge
aaa
loop
in
adc
mov
jbe
jmp
leave
ins
sub
std
test
jmp
jmp
(bad)
pop
hlt
sti
and
and
js
dec
les
and
addr16
mov
or
ins
icebp
inc
out
push
loope
pop
cs
jmp
lds
inc
add
int
dec
sub
pop
sbb
xchg
jae
stos
out
arpl
mov
popf
jmp
hlt
cld
loop
popa
cli
ret
xchg
adc
bound
rcl
xchg
sahf
je
cmp
xchg
loopne
inc
sbb
pop
add
xchg
sub
shr
sub
or
or
cs
inc
dec
comiss
nop
cdq
dec
ins
sti
sub
mov
xor
mov
push
mov
ss
jo
rcl
sub
push
addr16
(bad)
cmps
je
jmp
sub
(bad)
stc
xlat
push
int
jae
push
pop
pop
adc
sti
push
jecxz
bnd
dec
push
xor
jge
mov
loop
push
and
cmp
xchg
daa
movs
push
pop
add
lds
test
nop
ret
add
mov
inc
fcmovne
mov
repnz
xor
xchg
or
sub
push
xlat
cmp
adc
or
xchg
dec
cmp
mov
sbb
in
fsubrp
cmp
lea
xchg
inc
dec
xchg
and
ret
pop
sbb
mov
xchg
cmps
stos
jnp
int3
addr16
pushf
add
sbb
mov
push
cmp
push
inc
mov
fild
scas
cmp
mov
ds
xor
scas
retf
jg
rcr
dec
add
in
(bad)
jne
int3
aas
dec
mov
(bad)
clc
xchg
loop
mov
ss
ss
and
ja
push
adc
mov
push
retf
hlt
and
add
mov
bound
or
dec
add
jge
ficom
inc
daa
sbb
fstp
aad
sbb
or
aas
cmc
inc
shl
inc
pop
shl
inc
mov
hlt
(bad)
xchg
iret
lods
adc
call
call
cvtdq2ps
repnz
retf
fwait
xchg
sub
dec
sbb
pushf
mov
add
mov
jno
mov
movs
mov
mov
out
lahf
and
pop
les
mov
les
inc
stos
xor
and
fcomi
pop
jno
(bad)
lahf
xchg
adc
add
adc
dec
cmc
mov
cmp
iret
or
cwde
sbb
xchg
outs
rcl
test
in
push
mov
and
test
cmc
dec
jno
push
lock
lods
or
cmps
xor
pusha
jmp
hlt
jo
jp
aas
outs
push
mov
out
dec
inc
(bad)
mov
lods
sub
cmp
stc
jp
push
sar
push
cmps
jle
pop
sub
xchg
in
int3
jp
mov
clc
push
sbb
div
js
jmp
mov
pop
cmp
fistp
inc
pop
xor
adc
test
retf
pop
out
ror
dec
addr16
xchg
and
aas
sbb
les
mov
rcr
div
mov
cmp
sbb
xchg
repz
mov
or
adc
mov
dec
ins
and
fdivr
pop
popf
pop
ret
or
ja
pop
jg
pop
das
icebp
stos
cdq
mov
hlt
in
jbe
cmp
push
repnz
xchg
xchg
rcr
push
int
and
cmp
popa
sub
xor
jo
cs
imul
mov
adc
add
pop
xchg
sub
mov
ja
mov
jge
ins
mov
push
sbb
ja
and
xchg
movs
xchg
push
fmul
mov
push
test
push
xchg
mov
imul
out
aaa
jmp
mov
ss
jp
int
or
aad
cli
sub
je
aam
pop
popf
cmps
and
or
cdq
in
push
fnstenv
mov
fdivrp
aas
push
fld
cdq
inc
mov
push
test
mov
movs
push
jl
loope
xchg
jle
out
inc
sbb
popa
stos
xor
sub
or
add
mov
jmp
out
outs
and
dec
and
xchg
movs
mov
cmps
shl
push
lds
add
das
cli
or
iret
shl
adc
mov
call
xchg
dec
sub
fidiv
or
test
xchg
loop
fst
fisttp
retf
js
push
lea
inc
arpl
jecxz
or
cdq
push
xor
and
out
push
loop
rcr
mov
mov
inc
lds
push
push
jne
mov
xor
das
add
lods
push
mov
sub
in
(bad)
(bad)
movs
call
add
stos
inc
stos
jl
or
push
int3
push
push
jo
cmp
je
repz
xchg
cs
cwde
add
iret
xchg
enter
mov
xor
pop
pushf
and
cmp
inc
stos
(bad)
ins
xor
(bad)
sub
push
inc
test
jae
add
loopne
outs
sub
repz
call
pushf
sbb
and
adc
ins
cli
pop
jnp
and
loopne
(bad)
push
push
test
in
inc
add
pushf
sahf
js
loope
js
jl
jmp
aad
test
push
popf
dec
jns
or
fstp
mov
sti
loope
mov
mov
enter
scas
sbb
mov
out
and
lods
mov
jbe
adc
scas
mov
sub
sar
adc
adc
inc
enter
jne
xchg
stos
add
and
cmc
or
xchg
inc
jae
pushf
outs
jmp
stos
mov
test
aam
dec
addr16
sbb
mov
xor
retf
jae
mov
or
dec
add
jnp
adc
nop
sub
xchg
outs
scas
dec
xchg
dec
adc
mov
inc
scas
adc
pop
fnsave
fidiv
in
call
mov
mov
int
dec
div
jmp
xor
dec
loopne
scas
test
mov
mov
or
scas
or
sub
pop
out
adc
pushf
mov
popf
out
mov
inc
sub
and
aad
call
add
stc
retf
xor
mov
sub
add
push
mov
push
les
pop
imul
fistp
fild
sub
call
rol
repnz
shr
aad
rcr
popa
retf
mov
repz
leave
in
cwde
xor
dec
cld
test
rol
cmp
push
gs
ss
add
adc
fcomp
pslld
ror
dec
mov
cmp
jmp
jecxz
mov
repz
mov
add
sbb
lea
sar
push
jmp
pop
mov
mov
retf
stc
xor
stos
cdq
push
jl
pop
pop
jae
mov
popa
xchg
jb
pop
jge
idiv
sahf
scas
xor
cld
clc
dec
xor
mov
xchg
jecxz
sahf
add
aaa
cmps
dec
jl
fsubr
sbb
inc
mov
push
add
mov
push
cmp
mov
pushf
push
dec
pop
inc
lds
mov
xlat
fwait
sub
scas
sbb
sub
mov
and
cmps
lods
(bad)
aam
stos
rol
mov
pop
arpl
(bad)
int3
scas
lods
jnp
fisubr
es
inc
push
jle
adc
or
mov
jns
stos
fsubr
cld
mov
in
pop
pop
jmp
pop
std
adc
stos
enter
jmp
cmp
stos
push
fstp
cmc
lock
pop
mov
push
push
lock
test
jmp
cli
mov
sbb
retf
push
int3
cmp
in
cdq
arpl
cwde
sub
mov
fs
data16
out
push
sbb
cs
push
mov
pop
fst
pop
dec
dec
(bad)
cwde
cmp
lds
out
mov
ja
aad
or
repnz
mov
inc
sbb
sbb
mov
test
and
mov
sub
or
iret
cmp
ret
cdq
fdiv
add
pusha
cli
stos
mov
out
mov
xor
jp
pop
jmp
push
cld
test
or
push
mov
push
retf
push
rcr
movs
add
imul
imul
lds
pusha
sbb
or
out
xor
(bad)
and
jns
xor
adc
pop
fdiv
cwde
je
outs
sbb
pusha
test
push
inc
movs
pop
ds
mov
(bad)
in
fisttp
sbb
out
pushf
rol
jmp
fnsave
mov
jle
rcl
mov
xchg
or
inc
repz
cmp
cwde
in
repnz
inc
xchg
test
xor
jmp
sub
dec
jae
repz
std
call
or
mov
pop
(bad)
fisub
rol
xchg
lea
sbb
pop
sub
pop
xchg
inc
jb
retf
fisubr
loop
rcr
cmp
outs
add
aaa
loopne
mov
push
or
out
jno
push
pop
or
sbb
lods
fbld
pop
inc
fbstp
xor
outs
mov
ret
push
leave
ret
scas
in
(bad)
and
add
add
mov
(bad)
std
cli
cmp
lods
push
gs
cmps
sbb
mov
mov
cmp
jmp
push
fisub
fwait
adc
imul
and
inc
push
retf
mov
sub
lds
or
cmp
fdivr
and
daa
(bad)
out
jno
mov
xlat
cdq
call
nop
jno
cs
retf
imul
test
push
add
stos
mov
and
nop
adc
jle
dec
stos
push
aaa
shl
add
or
mov
or
jmp
push
fsub
in
ret
mov
mov
leave
xchg
stos
sbb
scas
jge
inc
push
sbb
arpl
xchg
and
cs
mov
add
iret
std
xchg
sbb
sbb
adc
scas
dec
mov
pop
rcr
nop
sbb
or
lods
cdq
cmp
call
fdivr
and
xchg
push
ss
push
rcl
push
in
mov
pop
sbb
sahf
lea
shl
dec
and
cmp
push
mov
inc
clc
test
dec
push
cs
xor
lods
invd
pusha
xor
lods
fisubr
into
inc
pop
loopne
test
cli
xor
outs
fxam
das
dec
fcom
cmp
ficom
test
cmc
xchg
inc
stos
call
push
or
sub
add
fstp
movs
pop
ins
sub
imul
outs
fmul
mov
dec
xor
sub
fmul
lods
pop
adc
mov
outs
pushf
arpl
adc
clc
gs
ss
push
and
mov
call
fidiv
(bad)
hlt
leave
movs
mov
and
mov
repz
mov
mov
jae
pop
iret
dec
sub
out
fnsave
xchg
rcr
sbb
sub
pop
and
into
ficom
data16
add
jb
and
inc
je
call
sahf
into
xlat
ret
(bad)
bound
out
jg
movq
ret
popf
daa
out
or
push
out
mov
and
cmp
sbb
mov
pop
mov
test
loop
icebp
push
mov
ds
not
lods
ss
dec
(bad)
repz
add
das
int3
pop
jecxz
aas
mov
popf
push
mov
daa
cli
repz
mov
sub
test
icebp
pop
repnz
mov
retf
pop
push
jne
or
rcr
xchg
jg
enter
(bad)
jmp
arpl
loopne
div
je
pop
adc
scas
leave
cmp
retf
pop
mov
in
imul
popf
xchg
test
mov
fimul
fist
pusha
lods
imul
or
fsubr
test
xchg
sbb
popa
repnz
cdq
rcr
les
lds
retf
imul
xchg
add
sar
mov
cmp
or
(bad)
sar
or
mov
sbb
dec
fnstenv
sahf
cmp
xchg
lea
sahf
mov
xor
repnz
fidiv
mov
outs
in
or
in
test
pusha
imul
mov
cmc
sbb
xchg
and
or
hlt
ret
ins
mov
cld
scas
jle
xchg
jmp
inc
inc
loop
(bad)
ror
in
mov
ret
movs
leave
inc
or
mov
mov
dec
vcvttps2dq
add
mov
ja
sub
jbe
pop
add
sar
inc
repnz
jno
loop
dec
inc
inc
(bad)
push
sbb
and
pop
ds
push
pop
loopne
xor
pop
xor
das
mov
jmp
stos
inc
add
pop
xchg
pusha
inc
xrelease
mov
xor
repnz
outs
mov
lock
jo
xchg
stc
inc
pop
(bad)
inc
add
arpl
add
mov
ds
pop
sti
cli
push
popa
stc
or
aad
adc
mov
add
and
cmps
mov
cmp
mov
or
pop
sbb
xor
ror
sbb
xchg
stos
xchg
popa
in
mov
push
call
jns
sub
mov
sbb
pop
loope
scas
mul
xlat
ss
scas
ins
push
sar
xor
out
or
ja
inc
fdivr
sbb
push
pusha
add
(bad)
xchg
cmc
pop
fs
mov
fsub
xchg
inc
dec
cmovbe
add
push
xor
iret
aas
aad
and
sub
pushf
sub
sub
push
and
or
mov
mov
std
loope
sbb
mov
daa
or
scas
push
xchg
mov
jo
loope
mov
lahf
xchg
adc
pop
and
mov
sbb
(bad)
in
inc
retf
test
jmp
dec
mov
lods
and
std
sar
add
or
cmp
repnz
movs
rol
test
xchg
jge
xchg
mov
ret
mov
lock
mul
stos
cmc
cld
mov
jmp
das
nop
xor
popf
xor
mov
push
imul
mov
std
sub
lods
ja
push
push
mov
pop
push
or
sbb
mov
rcl
sbb
add
push
cmps
or
mov
push
adc
and
and
adc
(bad)
dec
cmc
neg
inc
xchg
jge
inc
dec
xchg
cmp
pop
xchg
call
sbb
data16
ror
bnd
inc
ds
call
pop
push
jg
test
ja
inc
adc
shr
clc
lahf
push
cmp
stc
in
cmp
xchg
xchg
cwde
fldenv
mov
arpl
pop
test
lock
sub
push
pop
xchg
in
cmp
push
movs
mov
mov
nop
and
jp
stos
cmps
push
jo
(bad)
cwde
fcomp
in
pop
sbb
or
shl
(bad)
icebp
dec
cmp
jnp
sahf
fldcw
mov
mov
or
ds
ret
cmp
inc
es
inc
xor
inc
(bad)
xor
mov
rol
cmove
ret
mov
ret
mov
sub
jl
xlat
push
retf
test
xchg
pop
lahf
in
repnz
mov
mov
or
ds
mov
adc
mov
or
pop
popa
in
out
push
push
and
sahf
or
push
cmp
sub
aam
jl
and
mov
xchg
adc
dec
fsub
inc
dec
arpl
stc
cdq
sbb
jno
gs
ds
mul
mov
mov
sar
ds
xchg
cmp
pop
push
cmp
pop
mov
jb
faddp
jmp
mov
adc
cmps
fcomp
aad
and
js
pop
std
adc
movs
mov
fstp
add
push
imul
lock
int
popa
jge
inc
and
sub
ja
mov
jns
inc
mov
es
ins
jae
or
jno
sub
dec
daa
jo
push
add
rcr
lock
xor
inc
pop
xor
mov
push
in
pop
xchg
mov
or
es
mov
nop
dec
jne
mov
hlt
scas
jb
aad
pop
mov
stc
mov
fdivr
xor
sub
pop
push
mov
cmp
popa
xchg
sub
mov
or
mov
ins
mov
dec
cwde
movs
neg
mov
outs
and
add
shr
sub
push
and
push
jl
jmp
mov
ja
dec
mov
push
mov
push
mov
gs
mov
fldenv
movs
pop
stos
lods
imul
fwait
(bad)
mov
es
out
add
gs
mov
push
ror
(bad)
jnp
ret
inc
add
xor
lea
leave
mov
push
repnz
jge
push
imul
dec
cmp
lods
int
xchg
or
pop
dec
cmp
push
pop
dec
or
int3
sub
fwait
and
lods
mov
addr16
mov
stos
mov
sahf
xchg
mov
bound
jg
xlat
jmp
pop
cmp
ds
mov
inc
cld
mov
not
(bad)
adc
je
sub
lds
pop
xchg
jb
jp
sbb
inc
mov
fs
xchg
dec
push
aad
shr
sub
jecxz
int3
popf
outs
movs
ss
or
inc
mov
dec
mov
sub
or
add
stc
jmp
jle
aaa
lds
ins
retf
mov
xchg
movs
mov
inc
in
movsx
call
or
mov
xor
retf
adc
ror
aad
mov
std
mov
nop
imul
inc
add
movs
aas
mov
dec
pusha
fcom
sbb
or
mov
fsub
popf
xchg
data16
fistp
push
cdq
in
push
rcl
sbb
in
movs
dec
sub
clc
call
mov
cmp
mov
lods
push
lods
inc
les
movs
jno
xor
fldenv
(bad)
sbb
int
pop
cmp
lds
movs
inc
push
std
pop
(bad)
dec
mov
cmp
or
leave
fsubr
aam
cmc
inc
(bad)
cs
popf
dec
push
mov
xor
push
jmp
out
or
add
cmp
jmp
cmps
shl
lds
es
pusha
hlt
shr
and
xor
imul
into
cli
mov
in
push
scas
mov
mov
adc
lea
mov
jae
sub
imul
imul
mov
mov
retf
dec
pop
inc
js
jo
mov
popa
adc
adc
mov
loope
or
xor
(bad)
sub
add
call
inc
repz
cwde
scas
pop
(bad)
stc
ins
lods
(bad)
pusha
fisub
mov
mov
push
out
mov
imul
lahf
(bad)
enter
ss
jp
sahf
mov
out
mov
int
cli
in
adc
and
adc
rol
jmp
or
xchg
inc
arpl
scas
(bad)
mov
cmps
aas
and
(bad)
(bad)
ret
ror
push
push
test
jle
push
cmp
sub
popa
cmc
fisubr
mov
sbb
fst
push
cmp
mov
dec
jns
xchg
sub
ss
inc
cld
outs
jne
jmp
adc
loopne
out
mov
bswap
sub
cli
adc
fisub
cld
xlat
cmp
rcr
cmp
push
cld
pop
push
sub
push
ret
mov
shr
pop
ins
imul
outs
xchg
mov
lods
(bad)
adc
sub
xor
push
add
fst
mov
std
shr
xor
add
mov
scas
pop
or
inc
jge
jbe
movs
mov
sbb
in
in
xchg
xor
fs
xlat
inc
cld
fsub
movs
xor
lock
mov
xor
imul
ss
mov
xchg
stos
jb
adc
mov
popa
push
mov
xchg
or
push
fstp
push
fisubr
sar
ins
ins
xchg
jb
fdiv
sub
mov
cmp
out
add
retf
sti
xchg
jmp
leave
push
shl
sub
sub
ins
cld
out
and
push
inc
inc
push
cmp
(bad)
div
cmp
pop
nop
jae
mov
ret
dec
mov
fidivr
xlat
inc
mov
inc
dec
jns
inc
cmc
aas
push
frstor
cli
out
popa
push
mov
push
call
mov
cdq
push
sti
lock
mov
repnz
adc
sbb
popf
or
jge
pop
scas
mov
xor
xchg
xchg
mov
(bad)
in
cmp
inc
(bad)
pop
addr16
mov
jg
add
mov
lahf
sti
arpl
imul
rcr
sub
add
repnz
mov
pop
lods
sbb
gs
adc
push
retf
pop
xor
or
inc
cmps
retf
dec
jo
sub
jbe
cmp
mov
cmps
aas
aas
(bad)
xor
cmc
jb
jb
dec
out
dec
popa
and
imul
sbb
xor
mov
xor
adc
xor
xchg
or
or
xchg
mov
sub
ja
out
addr16
test
pop
mov
aaa
iret
sub
rol
das
add
sub
scas
cmps
push
lea
mov
push
dec
leave
stos
jmp
mov
mov
push
out
push
push
sbb
in
sbb
push
cmp
movs
movs
data16
jecxz
mov
add
mov
retf
std
aas
sti
in
inc
xchg
mov
dec
and
bound
mov
stos
xor
pushf
outs
gs
(bad)
cmp
test
cmc
and
fbstp
jmp
jecxz
jp
lock
scas
test
mov
or
mov
dec
cmp
les
jo
fistp
retf
lods
das
shr
xor
icebp
sbb
das
push
xor
das
div
add
test
push
dec
cli
rol
inc
sub
xor
or
daa
ss
out
mov
mov
mov
loop
xlat
xchg
mov
cmp
sub
repz
jle
jo
dec
push
dec
xchg
(bad)
and
es
mov
jmp
lods
ja
push
gs
cmps
or
xchg
xchg
loopne
sub
push
repz
out
or
stos
jmp
pop
adc
xor
mov
aad
add
jmp
dec
adc
je
or
div
jg
mov
fsubrp
dec
mov
sub
aas
mov
pop
or
ja
stc
dec
mov
add
ins
add
arpl
inc
or
sbb
out
pop
in
clc
dec
mov
dec
outs
cmps
iret
mov
mov
sub
ss
inc
mov
mov
pop
scas
inc
mov
mov
push
jno
jns
test
sbb
mov
pop
push
or
inc
sbb
cmp
cmps
xor
dec
sub
inc
sub
into
jle
inc
lea
daa
adc
jbe
lods
out
std
jb
jnp
jae
add
or
push
sahf
ins
mov
mov
xchg
ret
sub
push
and
stos
push
in
daa
ins
sbb
retf
adc
bound
mov
inc
jl
(bad)
nop
imul
jo
push
aam
mov
loop
xlat
dec
or
mov
push
mov
in
mov
mov
push
sub
lahf
and
fld
xchg
pusha
xchg
retf
inc
fdivr
imul
outs
lahf
lds
sbb
lods
and
fwait
das
icebp
lods
(bad)
out
aaa
fbstp
pushf
dec
mov
inc
aaa
mov
xchg
adc
pop
xchg
fstp
inc
sub
mov
xlat
sti
std
mov
jne
xor
sub
jb
sbb
in
pop
fistp
pop
add
and
aam
jno
mov
adc
jmp
mov
sbb
push
hlt
sar
xor
pop
and
pop
adc
sub
and
or
pop
sbb
(bad)
in
mov
loope
xchg
out
adc
imul
xchg
push
call
adc
mov
pop
neg
push
addr16
lods
or
jp
test
add
cs
push
mov
ret
scas
std
cs
cmp
out
mov
stos
push
mov
aad
xchg
aas
xchg
or
xchg
test
fadd
pop
test
ja
fs
sbb
xchg
outs
test
inc
enter
(bad)
imul
fidiv
jmp
clc
scas
div
adc
mov
enter
or
adc
cld
push
pop
out
repnz
xchg
dec
pop
pop
pop
es
mov
pop
or
adc
rcr
pop
mov
mov
(bad)
shr
adc
xchg
cmp
ins
(bad)
rcl
test
ds
popa
pop
loopne
mov
jmp
call
ds
mov
cdq
cmps
push
xor
lahf
sbb
lds
dec
cmp
fadd
imul
push
in
add
movs
sar
out
ins
aaa
mov
and
mov
outs
out
hlt
neg
rcl
retf
sbb
cld
stos
mov
and
cmp
adc
cmp
out
xchg
les
fwait
rcl
stc
push
sbb
or
cmp
push
dec
mul
jge
mov
xor
jo
mov
add
into
jnp
sahf
test
jne
mov
or
xchg
neg
or
hlt
cld
je
pop
mov
fsubr
fstp
movs
and
push
icebp
mov
popa
mov
loope
loopne
xor
int
xor
push
xchg
xchg
cmp
dec
(bad)
push
das
les
stos
jo
not
sahf
pop
inc
(bad)
mov
sub
pusha
enter
adc
and
scas
outs
fsub
mov
xacquire
sbb
sahf
jl
neg
or
pop
pop
mov
daa
mov
ins
rcr
or
and
cwde
jnp
pop
clc
fadd
ffreep
and
les
mov
call
test
fild
call
jl
mov
adc
popf
jl
popf
lds
das
xor
(bad)
mov
and
and
sub
xor
jg
and
jb
mov
call
sbb
mov
pop
mov
ds
push
mov
(bad)
mov
test
adc
jmp
lods
fistp
push
mov
adc
aam
cdq
icebp
mul
bound
jmp
cmp
mov
jne
aas
jp
mov
xor
or
cmp
pop
jle
pop
push
mov
push
sbb
popf
hlt
add
retf
pop
jne
or
add
jl
xor
xor
inc
cwde
js
or
mov
dec
dec
sub
adc
or
leave
ja
or
mov
pushf
sbb
push
jp
or
xchg
or
inc
or
aaa
pop
push
popf
or
adc
mov
mov
push
mov
aas
cli
rcl
(bad)
into
cmps
mov
out
add
xlat
mov
lock
fisttp
in
push
mov
push
neg
sub
pop
mov
sar
xchg
adc
and
ret
sbb
icebp
and
loop
mov
cmc
ret
clc
ret
(bad)
retf
mov
std
mov
inc
cmp
hlt
popf
add
pushf
add
or
pop
test
pop
push
in
(bad)
and
scas
js
pop
jnp
xor
stos
add
mov
and
jb
cmp
push
repnz
daa
gs
call
jle
mov
ds
inc
and
jmp
pop
scas
mov
pop
aam
xchg
shr
stc
mov
stos
inc
xchg
sub
stc
sbb
int
jg
loop
xor
cld
ja
lods
cmp
adc
test
mov
pop
test
mov
jge
clc
mov
fcmovnu
add
mov
push
shl
dec
mov
cmps
sub
jae
out
jmp
call
mov
nop
movs
fstp
sbb
test
in
mov
dec
mov
mov
and
or
retf
jo
sahf
call
adc
movs
clc
cmp
(bad)
pop
xor
and
cwde
cmp
ret
popa
(bad)
ds
fistp
rol
neg
scas
aas
in
adc
or
and
xchg
cmp
sub
sbb
pusha
sub
aam
test
jge
jne
scas
push
ret
pop
jg
xchg
pusha
mov
jp
or
adc
aad
adc
add
cmp
pop
retf
inc
loopne
jo
shl
out
or
ins
ins
jp
dec
rcl
pop
pop
sub
sub
push
pop
jae
xchg
shr
sbb
add
mov
pushf
dec
int
cs
cmp
adc
mov
mov
shl
push
in
adc
(bad)
in
lds
push
dec
xchg
and
ficom
movs
and
loope
sub
arpl
jge
aas
leave
out
sub
jmp
add
int
dec
mov
and
pop
and
jl
xchg
jl
out
add
(bad)
jmp
rcl
aas
inc
sahf
lds
adc
xlat
lea
pop
jle
hlt
or
cdq
(bad)
int3
xchg
out
test
mov
aaa
pop
mov
push
sub
jl
je
and
fiadd
push
sahf
(bad)
shr
repz
repz
test
int
and
or
mov
mov
sub
jge
mov
mov
xchg
mov
sti
stos
inc
push
or
cmp
push
or
mov
mov
push
scas
mov
inc
pop
xor
pop
or
(bad)
std
xor
xchg
fild
mov
sbb
test
das
xor
mov
scas
cmps
call
in
sub
mov
in
outs
stos
dec
leave
mov
jmp
js
dec
(bad)
adc
leave
aad
clc
cmps
jb
xchg
scas
xchg
jno
adc
and
rcr
or
xchg
fcomp
mov
clc
push
push
(bad)
xchg
cwde
lds
jg
mov
sub
lea
xor
and
mov
(bad)
lds
sbb
sbb
mov
cld
bound
jmp
popa
mov
jb
adc
mov
mov
or
mov
cmp
or
fnstsw
fdivp
cmp
das
scas
jns
adc
sub
sti
mov
movs
and
mov
ror
fild
dec
push
dec
cmp
sbb
shl
xor
jmp
jp
add
sub
push
or
sub
sub
popf
push
pop
adc
jmp
push
push
mov
adc
in
xchg
mul
int
retf
pop
push
dec
push
xor
stos
pushf
xchg
jnp
and
adc
add
fidiv
xchg
xor
fld
pop
lods
sahf
mov
lea
mov
add
sbb
sbb
mov
cmp
push
das
cmc
lea
das
jae
pusha
sar
popa
icebp
mov
(bad)
and
sar
pop
sub
jmp
in
jp
std
mov
lea
mov
out
or
mov
and
test
mov
xlat
sbb
inc
repnz
test
movs
fdivr
push
fwait
addr16
jle
rcl
es
int
fwait
out
sub
mov
call
mov
inc
cmp
xchg
xchg
cmc
push
mov
adc
cmp
mov
rol
gs
jnp
mov
imul
pop
sub
add
punpckhbw
pop
popa
repnz
aas
xchg
dec
lahf
mov
cmp
mov
es
jecxz
jns
pop
and
and
rcl
mov
(bad)
sbb
pop
xchg
in
xor
jmp
fisub
mov
jmp
call
cmps
push
inc
jmp
pop
add
dec
enter
mov
cmp
adc
jle
xor
fxam
jmp
pop
fsubr
jp
test
mov
imul
mov
inc
out
std
(bad)
lods
rcl
and
call
pop
in
aam
loop
lods
cdq
jg
cmp
or
jbe
aad
inc
test
ins
jae
sbb
push
addr16
loope
cmp
not
mov
jp
sbb
jmp
out
sub
lods
jmp
rcr
loop
std
aas
cmps
imul
jb
push
(bad)
sar
test
push
jmp
xchg
cmp
ror
pusha
daa
mov
inc
inc
pop
push
sbb
push
jae
call
(bad)
fbld
inc
and
push
inc
and
movs
xchg
jno
and
add
pusha
out
push
xchg
xor
call
inc
je
dec
sub
mov
ffree
push
jb
pop
pop
test
stos
out
in
repnz
stc
or
cmp
shr
mov
shl
push
and
lods
mov
(bad)
pusha
mov
and
jecxz
clc
push
or
add
stc
ss
adc
mov
sub
cmp
mov
shl
adc
push
push
(bad)
xchg
mov
xor
inc
mov
push
push
xor
std
mov
jnp
sub
mov
xchg
ret
cmp
xor
ret
inc
jns
test
add
cld
cmps
jo
sahf
pop
xchg
cld
int
adc
pop
lock
cmps
jno
xor
pop
sbb
sub
push
jno
mov
push
shl
call
fstp
arpl
test
clc
xor
scas
xchg
cld
xor
mov
jno
cmp
out
aad
aas
pop
pusha
sub
mov
mov
mov
mov
adc
pop
mov
jno
test
pusha
ficomp
jae
into
push
sbb
cli
push
loop
xchg
xchg
inc
add
fcom
sbb
xchg
sub
outs
push
mov
add
cli
jne
test
xchg
icebp
ins
jbe
add
push
sti
clc
or
mov
pop
jg
and
aam
test
fadd
ret
sub
movs
popa
cwde
and
dec
(bad)
push
popa
in
xchg
ins
ins
in
mov
pop
outs
ficom
jle
inc
mov
dec
not
pop
mov
pop
(bad)
mov
lods
rol
mul
shr
adc
add
and
and
cmp
mov
xor
dec
outs
sub
cmp
sbb
ja
and
xchg
es
xchg
ja
movs
mov
cmp
test
dec
mov
push
das
mov
sti
arpl
fld
out
fst
xlat
pop
icebp
adc
mov
icebp
fsubr
fisub
(bad)
jp
dec
mov
mov
xor
push
sub
add
sti
sub
or
in
push
sbb
outs
cmp
ret
sahf
cmp
pop
mov
xchg
(bad)
jmp
inc
mov
sub
pop
fadd
gs
adc
xor
adc
inc
call
lods
inc
js
add
ins
mov
pop
out
push
mov
adc
sbb
fbstp
(bad)
mov
gs
adc
and
xchg
mov
inc
into
(bad)
and
ror
dec
cmps
add
dec
dec
cld
lock
dec
adc
dec
inc
cmps
out
mov
push
call
pop
and
pop
idiv
or
mov
cmp
adc
xchg
inc
movs
push
outs
push
and
jae
mov
pop
and
xor
jle
ret
dec
cmp
jge
and
aam
sbb
in
cmp
push
pop
mov
push
xor
inc
xchg
sbb
cmp
jmp
outs
outs
out
push
add
repz
sub
mov
cmp
push
arpl
fwait
in
stos
ret
pusha
push
mov
xchg
cli
or
ficom
dec
pop
aam
fwait
arpl
enter
push
jl
or
mov
(bad)
repz
call
ror
sbb
pop
sbb
fs
jnp
movs
adc
push
push
ins
out
jne
sbb
push
mov
push
pop
pop
pop
cwde
movs
xor
add
xor
fsubp
sub
mov
sub
call
inc
or
mov
mov
push
leave
sub
sub
jp
jo
mov
jb
movs
loopne
jmp
xchg
jno
lea
vpermilps
cmp
in
cmp
bound
je
sbb
or
int
rcr
rcr
dec
icebp
stc
dec
imul
push
test
dec
sub
add
sbb
and
in
jnp
addr16
(bad)
data16
mov
sbb
fidiv
jnp
xchg
fwait
cs
fdiv
into
xor
jle
mov
(bad)
imul
xchg
cmps
pop
pop
xor
sar
mov
mov
cmc
leave
xchg
cmc
(bad)
iret
and
jne
jnp
adc
lock
inc
xchg
mov
push
inc
push
sti
in
fs
inc
and
xor
adc
sbb
xchg
jnp
stc
pop
mov
mov
jle
jbe
xor
add
add
mov
popf
popf
pop
jo
pop
dec
adc
or
cmps
aad
pop
mov
cs
rcr
lea
adc
ins
shl
loopne
aad
fs
retf
ret
push
pop
rcr
xchg
fidiv
mov
jge
or
mov
cmp
into
adc
call
cmp
jb
adc
out
pop
xor
pop
mov
retf
out
dec
in
sub
je
mov
sbb
mov
add
call
adc
call
(bad)
xchg
adc
cld
jmp
mov
mov
mul
push
pop
xchg
dec
enter
out
sub
ins
mov
sbb
jg
jle
movs
adc
fbld
fidivr
pop
addr16
add
clc
sbb
nop
pop
jns
cmp
inc
fwait
(bad)
lock
enter
dec
aad
xchg
in
(bad)
jae
(bad)
je
push
pusha
dec
int3
test
pop
ficom
imul
shr
adc
xchg
mov
jne
shl
dec
pop
mov
or
enter
aad
mov
push
dec
mov
shl
imul
jae
bound
call
add
imul
jb
into
mov
movs
das
sbb
sbb
mov
repnz
cmp
sbb
ror
dec
ss
out
jae
in
sahf
fcomp
xchg
out
in
sbb
fisubr
sub
and
push
jmp
popa
int
gs
shr
cli
mov
add
lds
lea
std
fbstp
mov
arpl
jge
fcom
sbb
fs
shl
mov
mov
xchg
xor
mov
xchg
xchg
push
jns
scas
out
rcr
scas
fcomp
sub
jle
dec
or
lods
mov
fild
and
outs
pop
mov
cmc
jnp
xlat
dec
xchg
bound
fld
and
movs
push
inc
add
(bad)
jmp
idiv
mov
es
cmp
pop
mov
aas
(bad)
pushf
mov
xor
pop
pop
iret
mov
cwde
dec
mov
das
cmp
sub
fistp
mov
push
mov
sbb
fimul
inc
pop
loopne
clc
ds
jecxz
xchg
add
sbb
cmc
xchg
fidivr
iret
jno
xchg
mov
xor
jb
int3
mov
cmp
js
mov
mov
push
int
jl
mov
mov
xor
mov
xor
pop
xlat
pop
ja
repnz
pop
push
or
addr16
mov
xchg
(bad)
fcom
inc
out
rcr
dec
cld
cmp
sbb
cmps
es
pop
out
dec
jae
or
lahf
movs
dec
xchg
mov
jmp
imul
ret
arpl
shr
push
imul
ror
dec
mov
repz
inc
outs
push
or
sub
outs
adc
xchg
outs
cld
out
or
mov
shr
pop
xlat
push
jle
cwde
hlt
push
pop
hlt
jae
pop
mov
shld
mov
cmp
xchg
or
add
xor
push
sbb
cmc
xchg
in
enter
inc
cmp
inc
dec
rcr
xlat
(bad)
inc
add
xchg
sub
xor
pushf
cmp
outs
rol
das
mov
into
out
scas
stc
test
pop
rcl
adc
add
fdivrp
xor
test
xchg
std
mov
bound
xchg
mov
cmp
movs
dec
mov
jnp
in
bound
(bad)
cmp
repz
jno
aas
mov
push
add
aaa
hlt
xrelease
cmc
sti
cld
popa
ins
push
out
fwait
push
enter
push
mov
cmp
sbb
dec
mov
icebp
pop
es
and
neg
cdq
mov
(bad)
fdiv
pusha
sub
into
xchg
sbb
sti
dec
sub
xchg
aas
movs
dec
mov
arpl
xor
inc
lds
jnp
shl
outs
mov
pushf
dec
sbb
(bad)
retf
inc
shl
xchg
dec
jnp
and
inc
bound
jb
popf
addr16
add
std
in
inc
pop
pop
cmps
and
inc
mov
sbb
sub
adc
sub
mov
ds
mov
retf
nop
cs
int3
fdivr
(bad)
sub
pop
dec
mov
sub
pop
mov
jo
adc
and
in
mov
push
lods
gs
call
addr16
lea
cdq
leave
cmps
outs
mov
mov
test
mov
jno
out
jg
xchg
add
mov
or
inc
inc
shl
loop
mov
dec
pop
sar
cmp
ror
xchg
mov
xchg
addr16
xchg
addr16
sti
sbb
cwde
fld
mov
gs
popf
or
test
inc
das
push
dec
push
scas
push
xlat
test
loopne
push
fbld
push
cmc
bound
repnz
mov
mov
fbstp
outs
out
clc
add
xor
push
sbb
(bad)
sahf
retf
ror
push
cmp
pop
neg
int
test
sub
xchg
cmp
retf
leave
sbb
mov
in
jle
fsub
scas
cmps
test
jnp
je
push
test
jbe
pop
fld
jno
cmp
nop
cmp
xor
sub
xchg
ret
push
or
cdq
int
dec
mov
leave
(bad)
stos
inc
sbb
push
jp
sub
mul
cmps
mov
movs
jle
ins
xchg
ins
out
dec
dec
jg
pop
cmp
sbb
das
jnp
cdq
sbb
dec
call
out
push
xor
xchg
dec
dec
xchg
push
sbb
call
scas
push
sahf
das
cdq
pop
and
bound
fimul
xchg
lods
inc
or
cmp
cmp
push
cmp
loopne
jo
mov
mov
sub
pusha
out
sbb
push
sbb
loopne
int3
dec
mov
fldcw
adc
mov
popf
loope
ror
push
xrelease
sbb
in
ficom
push
mov
sub
mov
jecxz
fstp
cmp
mov
jmp
mov
int
gs
and
test
lea
mov
add
iret
into
xor
mov
std
leave
call
cwde
add
inc
push
inc
xor
inc
into
or
aaa
jle
dec
call
test
add
xchg
sbb
out
add
jne
repnz
sub
les
and
(bad)
(bad)
pop
mov
and
dec
mov
in
aam
mov
fnstcw
xor
jmp
and
fadd
fwait
cmp
sub
ds
and
or
pop
push
test
mov
inc
aaa
loop
mov
sahf
pop
dec
adc
mov
and
mov
pushf
xlat
aas
fld
push
xchg
dec
mov
pop
popf
out
shl
sbb
xchg
ror
scas
mov
mov
xchg
push
test
lock
ds
clc
sub
pusha
outs
repnz
push
dec
sub
xchg
clc
pop
and
sbb
mov
xchg
lahf
js
fcmovne
jp
lods
aad
jo
pop
inc
mov
mov
cmp
repnz
sub
clc
and
xchg
pushf
outs
and
pop
xor
sti
dec
stos
imul
dec
test
jb
aas
mov
cs
push
popf
das
fldl2t
stos
cmps
inc
mov
imul
mov
or
add
jnp
nop
pop
jg
not
cld
sar
(bad)
pop
sbb
lods
(bad)
dec
nop
clc
cmp
xor
outs
scas
push
retf
stc
xor
mov
push
clc
gs
rol
xchg
mov
movs
xchg
shl
xlat
add
scas
jb
movs
push
dec
mov
vprotq
aas
js
shl
adc
jne
out
inc
push
ins
imul
test
mov
mov
push
adc
mov
in
or
lea
out
xchg
xor
dec
retf
call
mov
sub
inc
call
push
dec
out
pop
and
mov
pop
pushf
lock
inc
or
lods
cli
xor
add
dec
fs
mov
pusha
imul
or
mov
popa
pop
ret
aaa
mov
push
fiadd
cmc
adc
xchg
lahf
jns
or
cmp
fbld
or
push
adc
sub
(bad)
sub
xchg
out
sbb
inc
sbb
mov
jg
out
inc
daa
jnp
xchg
pusha
sbb
stos
sub
dec
test
jl
mov
cmps
es
ror
mov
inc
push
mov
dec
add
dec
adc
dec
xor
xchg
adc
push
ss
mov
jno
jecxz
gs
add
call
imul
cmp
(bad)
data16
push
adc
sbb
or
movs
xchg
jae
sbb
(bad)
xor
ins
aaa
adc
add
es
or
stos
jne
mov
cli
inc
xchg
push
mul
(bad)
push
sar
xor
sbb
xor
xor
cmp
dec
ret
imul
(bad)
nop
mov
sbb
sbb
jmp
in
stos
test
mov
sbb
mov
mov
daa
ja
push
mov
xor
xchg
std
movs
cmps
or
mov
push
lods
popf
ret
repz
cwde
xor
(bad)
call
inc
mov
sahf
xor
fld
test
jne
jmp
mov
iret
mov
loop
movs
push
jno
(bad)
loop
daa
mov
and
repz
scas
(bad)
mov
outs
clc
inc
add
sbb
and
inc
movs
sub
jmp
mov
add
in
add
push
in
cmp
add
dec
jmp
outs
hlt
in
call
sub
sub
in
test
into
mov
fst
and
mov
pop
dec
or
push
cmp
add
or
and
xor
mov
sbb
jg
jp
aad
arpl
arpl
add
cmc
rol
rcr
inc
push
jge
es
cmp
mov
ror
cld
xor
inc
and
ss
daa
popa
sub
mov
pop
out
mov
push
pop
sub
jmp
sbb
pop
dec
fstp
cmp
imul
xchg
mov
clc
inc
std
dec
jecxz
xchg
js
mov
xor
scas
sub
cli
pushf
mov
in
ss
inc
xchg
jl
retf
fs
fisubr
mov
dec
jbe
push
xor
cmp
sub
mov
xlat
daa
call
das
repnz
dec
dec
add
out
push
push
imul
mov
repnz
adc
sbb
mov
jae
(bad)
xlat
mov
pop
jbe
cmp
aad
out
mov
pop
cmp
test
leave
loop
cmp
add
cmp
test
dec
hlt
es
xchg
aaa
push
mov
inc
stos
out
repz
fst
dec
lock
push
imul
sbb
mov
daa
sbb
scas
mov
imul
mov
xor
inc
jae
(bad)
in
push
jge
sub
sbb
push
mov
inc
ret
cmp
lea
mov
mov
mov
xchg
sub
ja
call
fdiv
ret
cmp
cmp
xchg
mov
cmp
pop
jmp
das
xchg
pop
sar
jle
jecxz
scas
inc
sub
sbb
out
idiv
fs
or
imul
jo
jno
pop
add
push
(bad)
int
(bad)
fcom
push
pop
adc
pop
sbb
push
xchg
outs
push
aas
je
ins
std
push
xlat
ret
xor
adc
and
nop
mov
jbe
or
pushw
(bad)
arpl
xchg
out
mov
cmp
mov
sbb
adc
and
fidivr
hlt
push
jno
pusha
out
test
aad
je
ins
push
cdq
pop
sbb
jno
pop
jne
sbb
push
sbb
in
jecxz
pop
imul
pop
add
into
call
jle
jae
and
test
gs
cmp
mov
mov
out
xor
sub
rcl
stc
rcl
jns
(bad)
jle
and
and
mov
movs
and
test
ret
sub
sub
movs
out
cmp
es
jle
mov
sbb
lods
enter
ja
iret
test
loopne
dec
(bad)
lahf
mov
retf
mov
stos
les
inc
int3
sbb
mov
jb
sahf
loop
and
cwde
in
sar
pop
ficom
jmp
outs
inc
dec
hlt
push
push
adc
xchg
lods
dec
cmp
scas
and
pop
or
repz
push
cmp
lea
int3
in
add
xchg
lahf
aam
hlt
xchg
loop
js
mov
xchg
push
pop
fisttp
adc
div
in
mov
mov
fld
mov
fmul
cmp
push
aad
add
or
jnp
dec
outs
jmp
adc
enter
mov
dec
mov
xor
enter
inc
(bad)
pusha
ins
add
stc
test
mov
dec
and
pop
imul
jecxz
repnz
jo
and
mov
adc
inc
cmps
mov
push
fs
movs
scas
fild
mov
test
pop
mov
iret
fcomp
push
mov
stos
into
pop
out
test
adc
jbe
dec
lss
(bad)
pop
sbb
out
xor
jge
sbb
sti
sti
call
test
pop
dec
jecxz
xchg
stos
fsubrp
and
out
mov
cmp
mov
jo
sub
cmp
imul
add
mov
add
(bad)
jmp
xor
pop
test
xor
popf
cmp
mov
adc
xor
ins
gs
aam
add
xchg
mov
xchg
test
gs
cwde
cmp
and
cmovno
mov
sub
test
xchg
jle
inc
cmps
mov
push
daa
jbe
sub
test
xchg
lds
sub
cmp
and
jo
pop
test
and
daa
push
mov
xor
and
mov
movs
jb
daa
outs
xchg
inc
loop
add
sub
test
pop
loope
loopne
add
shl
jecxz
fcomp
cmps
lock
iret
push
xchg
shr
in
iret
sub
jnp
cmp
enter
fs
int
jp
push
push
jne
inc
mov
mov
popa
dec
adc
fnsave
pop
add
mov
mov
jecxz
in
sub
xchg
mov
fidivr
or
push
mov
into
pop
sub
mov
mov
mov
sbb
outs
add
out
sbb
cmp
mov
mov
in
cli
mov
int
(bad)
jle
arpl
add
xor
adc
shl
nop
add
push
loop
cmps
call
test
movs
ins
stos
(bad)
iret
daa
jg
enter
xor
inc
movs
retf
ins
aad
mul
inc
mov
cmps
push
dec
sbb
pop
call
push
push
pop
clc
test
shl
xchg
ret
push
jno
in
ss
add
nop
mov
mov
fidiv
stc
xchg
jmp
pushf
mov
ins
mov
add
std
pop
mov
stc
dec
(bad)
pop
sub
lock
mov
pop
mov
sahf
mov
data16
inc
add
stos
clc
xchg
std
xor
into
mov
in
xor
jno
pop
xor
mov
xlat
pop
fucomp
(bad)
sub
mov
mov
pop
(bad)
jl
jne
sbb
mov
sahf
gs
jg
ins
cdq
shr
jbe
aas
je
repz
pop
movs
test
loope
cmc
ror
add
hlt
sbb
push
push
push
lods
and
sahf
sbb
pop
loopne
(bad)
mov
not
popf
dec
sub
out
jne
add
pop
ficom
push
sub
mov
stos
adc
xlat
ret
into
dec
cdq
pop
and
sbb
pop
pop
pop
dec
rcl
in
data16
push
clc
xor
dec
ins
iret
(bad)
out
popf
ins
or
push
dec
and
sub
inc
pop
or
addr16
mov
adc
cmp
mov
mov
and
add
cmps
sti
rcr
outs
pop
xor
pop
inc
push
sti
sbb
dec
loope
ss
xor
jne
popa
sar
and
xor
out
or
xchg
gs
dec
imul
test
xor
sar
imul
pop
or
icebp
lods
test
mov
ins
dec
mov
add
inc
loope
add
ror
dec
ror
cmc
js
jno
ret
sbb
add
xor
leave
add
jns
popf
sbb
test
lock
add
pop
add
int
sbb
in
gs
jne
in
adc
fbstp
sub
sbb
sbb
xchg
mov
nop
push
stc
cdq
pop
cli
ss
mov
ret
ret
les
adc
cmps
lea
ins
cmp
sub
push
mov
pushf
das
mov
(bad)
cmp
push
mov
std
fistp
mov
fcomp
rcl
push
pop
pop
inc
adc
idiv
arpl
mov
inc
imul
xor
push
jmp
mov
jns
cwde
ror
loop
fisubr
(bad)
mov
lods
inc
dec
retf
xor
inc
pushf
fidiv
iret
aas
ret
aaa
data16
sbb
les
fxch
loop
push
lods
push
push
enter
adc
rcr
(bad)
cmp
sub
add
jnp
jge
push
jno
sbb
sbb
xchg
xor
jecxz
sub
fdiv
cld
and
ret
push
mov
into
out
imul
jne
jno
movq
push
pop
and
lea
sub
(bad)
aas
mov
push
inc
xchg
xchg
cld
sub
and
shr
mov
cmp
imul
in
jmp
leave
loopne
add
test
sbb
scas
push
jae
int
xchg
nop
sbb
cmp
or
or
cld
mov
and
mov
mov
mov
fstp
in
sar
inc
pushf
dec
add
icebp
loope
retf
pop
add
das
pop
jb
vphaddwd
mov
inc
test
inc
sub
lods
popf
ins
xchg
das
ins
js
movs
inc
lock
mov
inc
sbb
mov
cmps
adc
sub
lahf
loope
pusha
inc
sbb
jns
and
call
jmp
sbb
mov
es
(bad)
cmp
gs
call
lods
xchg
popf
(bad)
and
jnp
mov
dec
sbb
or
bound
cmp
or
jb
sub
jle
repnz
fs
aas
mov
mov
scas
mov
sub
cmp
aaa
pop
mov
sbb
jl
loope
sti
adc
cmp
jle
test
clc
xchg
dec
fcom
mov
lods
enter
es
bound
rcl
cmp
retf
mov
test
cwde
sub
sub
repnz
in
rol
call
les
loope
das
push
xor
push
push
fstp
mov
mov
icebp
sbb
adc
jo
shr
addr16
call
inc
and
push
call
popa
out
les
jmp
adc
loope
push
pop
sahf
outs
add
mov
inc
xchg
and
std
sar
cmc
xor
sar
add
imul
test
adc
xor
gs
in
pop
dec
loope
dec
int
imul
xor
dec
jmp
xor
retf
push
fst
dec
pop
mov
addr16
xchg
push
adc
sbb
fdiv
mov
pop
movs
jge
icebp
xlat
out
xor
dec
cmp
xchg
xchg
or
fs
call
clc
jns
jl
into
test
adc
mov
cdq
xor
es
push
out
cmp
jne
dec
sub
dec
push
aaa
bnd
sbb
xor
pop
push
mov
dec
push
jnp
mov
push
test
enter
mov
push
xor
not
or
scas
test
pop
inc
(bad)
xchg
test
fmul
ss
inc
shl
and
push
imul
add
jnp
jmp
push
das
imul
mov
hlt
xchg
mov
frstor
cld
ror
cmc
lea
push
scas
lods
mov
loope
push
pop
repnz
je
lds
pop
mov
fs
xchg
push
pop
xchg
cwde
jp
jge
gs
fs
ins
or
in
rcl
sub
and
mov
ja
js
jg
mov
popf
sub
push
test
adc
mov
ins
and
add
imul
jmp
idiv
ds
inc
scas
push
aaa
imul
mov
xor
ds
mov
and
movs
retf
out
out
ror
mov
cmc
(bad)
jb
push
(bad)
mov
daa
inc
mov
mov
cld
cmps
jno
aas
xor
fidiv
fdivr
xlat
pop
sub
in
pushf
pop
in
pop
push
jle
fisub
int3
xor
stos
add
push
out
mov
ficomp
add
(bad)
es
mov
in
xchg
ja
(bad)
xchg
inc
push
hlt
xor
push
push
mul
sti
daa
clc
cld
mov
mov
pop
dec
push
test
test
es
fstp
fild
dec
jnp
lea
mov
inc
fcom
and
jb
adc
jnp
(bad)
xlat
imul
shr
nop
cwde
sbb
xor
or
and
adc
frstor
inc
sbb
adc
add
xchg
arpl
fcom
enter
push
and
jae
or
push
popf
or
aam
daa
cs
jmp
jecxz
adc
mov
push
cmc
sbb
jb
(bad)
jmp
mov
mov
mov
mul
cmps
sub
adc
push
cmps
mov
sbb
push
stos
mov
ins
inc
xor
add
adc
mov
ret
adc
stos
fild
stc
xor
pop
iret
mov
sub
xlat
out
rcr
js
test
pop
dec
and
ins
mov
inc
mov
outs
jmp
mov
cmp
inc
pop
dec
push
pop
hlt
aaa
ins
sub
dec
pop
in
mov
inc
ror
dec
sar
retf
gs
mov
div
mov
inc
dec
lea
mov
call
jae
data16
inc
ins
and
jp
dec
jbe
add
loope
aaa
jmp
pushf
pop
sbb
loope
mov
and
ror
xor
imul
cmps
imul
ins
loope
icebp
(bad)
push
pop
push
dec
mov
out
scas
xor
xchg
fdiv
je
ins
aaa
leave
das
stc
mov
cdq
sub
jp
out
sbb
fisttp
iret
adc
mov
leave
mov
fcmovne
les
jp
sub
test
rcl
sar
pop
pop
add
or
out
mov
imul
in
dec
out
data16
add
and
mov
fistp
adc
dec
lahf
loopne
sbb
lea
pop
or
push
sar
push
mov
rol
lods
add
test
adc
pusha
sub
mov
and
cli
jno
ins
dec
mov
mov
add
dec
mov
cli
pop
inc
ins
xor
sub
mov
and
mov
daa
and
aas
inc
mov
ss
iret
mov
inc
mov
pop
push
stos
out
add
je
jg
aaa
mov
ret
test
pop
cmp
ficom
pusha
inc
xchg
adc
pop
push
pop
mov
sbb
call
cmp
(bad)
cs
and
cs
ret
cmp
mov
mov
inc
mov
(bad)
sti
outs
fadd
movs
data16
add
add
mov
push
sub
fcomi
mov
iret
mov
shr
mov
jge
test
adc
xchg
add
ins
and
pop
cmc
and
inc
xchg
push
scas
mov
fwait
cmp
cmp
mov
inc
push
xchg
fmul
inc
push
mov
sub
jno
pop
xor
dec
lods
xchg
cdq
push
ins
outs
mov
jle
jno
sub
data16
mov
in
cmc
imul
jmp
push
dec
push
fcomp
mov
jecxz
jge
ror
cwde
mov
sbb
push
xchg
adc
inc
adc
lahf
xchg
jae
popa
pop
pop
mov
push
sub
pop
adc
sti
sar
mov
je
lahf
into
jp
cwde
mov
and
cmp
cmp
nop
aaa
cmp
mov
cmp
push
jo
addr16
xchg
dec
mov
arpl
mov
movs
aas
pop
mov
aas
add
ret
adc
ds
je
pushf
cmps
iret
hlt
stos
pop
sub
mov
das
jae
test
ja
jl
fld
cld
jo
sar
mov
pop
mov
push
pop
std
daa
inc
fisub
xchg
adc
shl
and
ror
shl
sahf
jne
leave
adc
xchg
ja
scas
outs
and
in
sub
mov
mov
out
pop
sbb
and
mov
dec
jg
jnp
(bad)
rcr
sbb
rcr
(bad)
ss
pushf
loopne
jae
push
loopne
hlt
or
mov
cs
lea
xchg
aam
pop
int3
adc
les
pop
sub
push
push
mov
cmps
int3
jl
mov
add
mov
retf
mov
jo
popf
sahf
arpl
movs
adc
shl
cmps
das
inc
push
mov
out
retf
fstp
gs
or
cmps
js
pop
repz
adc
div
sti
pushf
enter
pop
xor
mov
lock
mov
sbb
(bad)
dec
sub
jg
aam
stc
test
dec
and
ins
mov
sub
pop
popf
mov
fidivr
aas
mov
call
jo
xor
inc
jg
and
push
mov
dec
xchg
cmp
lahf
(bad)
cmp
jne
or
pop
icebp
sbb
sbb
inc
(bad)
or
test
in
rcr
push
movs
pop
mov
fs
or
jl
(bad)
(bad)
adc
ds
xchg
xchg
jp
loope
add
dec
inc
imul
and
cli
movs
scas
add
int3
cli
inc
inc
sahf
push
adc
mov
(bad)
aad
cmp
pop
out
mov
xchg
fucom
push
jo
sub
movs
fsubr
jl
inc
loope
(bad)
iret
jne
push
add
sahf
jmp
xchg
mov
(bad)
sub
or
push
mov
cmp
call
dec
repnz
cli
cmp
ret
ins
mov
jp
xchg
push
mov
js
fld
std
and
sbb
jmp
popf
sub
push
adc
out
push
lea
dec
push
mov
jmp
jae
and
repz
pushf
cmp
inc
pushf
int3
in
int3
das
or
ds
inc
mov
inc
cmp
mov
int
out
mov
repnz
clc
push
jl
aas
push
data16
ins
loopne
sub
pop
pusha
jnp
xchg
fisubr
jno
jmp
fdiv
jno
movs
scas
jp
and
mov
cmps
xchg
gs
cmp
bswap
push
in
movs
shl
enter
jo
push
sbb
push
retf
xchg
mov
mov
rcr
inc
mov
dec
adc
pop
(bad)
out
stc
and
retf
or
fnstenv
fwait
xchg
mov
rcr
xchg
int3
in
add
out
cdq
cmp
xor
xchg
push
sub
push
mov
out
movs
xchg
lds
iret
dec
mov
mov
inc
xchg
and
xlat
cmps
cmp
fucom
mov
mov
repz
mov
push
jne
mov
out
add
ror
jae
inc
mov
xchg
in
cmp
add
xchg
lods
jnp
jp
sbb
lock
sbb
(bad)
int3
(bad)
sub
xlat
sbb
pop
out
mov
pop
(bad)
loop
cli
cmp
pop
dec
push
jp
adc
stc
test
dec
and
xchg
fimul
push
mov
cwde
out
into
jns
jne
xor
pavgw
or
mov
in
movs
cld
cwde
hlt
aas
(bad)
jge
popf
es
xchg
jecxz
sub
ins
adc
inc
out
jnp
inc
fst
lods
push
xlat
into
mov
xchg
adc
push
movs
xor
push
jnp
pop
aam
pop
inc
fild
sbb
out
xchg
pop
arpl
mov
(bad)
adc
push
shl
fld
xor
out
pop
push
mov
cmp
mov
das
inc
and
jg
push
or
shr
mov
mov
adc
pop
mov
sub
push
pop
ins
xchg
and
rcr
mov
loope
xchg
sti
into
sbb
fisub
cdq
cmps
mov
inc
mov
popf
sub
sub
add
mov
call
hlt
mov
push
xchg
leave
(bad)
ja
xor
mov
cmps
aaa
mov
stos
pop
pop
mov
push
into
xor
pop
push
in
pop
mov
xor
or
repz
sub
mov
jb
mov
xor
gs
jnp
adc
xor
jmp
add
or
mov
das
fcomp
push
out
add
push
call
push
add
sbb
push
xor
aam
sbb
adc
push
or
pop
adc
loope
sbb
dec
pop
pop
loope
dec
js
call
xchg
and
push
imul
mov
mov
push
mov
std
jmp
jle
test
sbb
jl
add
mov
or
(bad)
test
sbb
in
xchg
sub
sub
cmc
cmp
jnp
loop
pop
popa
mov
or
pop
scas
and
out
xchg
or
mov
xchg
push
jns
mov
add
test
xor
lods
sub
mov
jg
and
add
or
mov
lea
rsm
ins
xor
out
sub
sub
(bad)
jns
lea
jp
je
xor
sub
push
js
mov
aam
(bad)
ror
or
cli
ss
out
mov
and
popa
push
jl
fmul
pop
adc
inc
jmp
pop
shl
sub
add
retf
sbb
push
fistp
ret
test
pop
test
cmc
stos
or
jmp
mov
and
int
jmp
ficom
stc
loopne
in
rcl
inc
mov
jno
inc
pop
sar
retf
pop
xchg
in
cmp
jbe
jmp
test
div
je
imul
or
data16
loope
jb
test
pop
adc
aas
xor
sti
cmp
test
push
popa
push
(bad)
pop
mov
arpl
inc
(bad)
jge
xchg
lock
sub
data16
mov
xor
imul
ins
dec
lahf
jnp
sub
add
push
inc
and
and
sub
mov
sub
dec
jb
outs
mov
fild
out
pop
inc
fist
lods
data16
addr16
pop
push
aaa
sbb
aas
call
push
jge
jo
dec
cmc
lahf
jns
rcl
jne
fstp
cdq
sti
scas
aas
lods
mov
cmp
jge
jnp
sahf
sbb
mov
push
push
loope
gs
sti
daa
mov
daa
push
iret
xor
adc
lahf
xchg
mov
inc
lock
les
jne
and
cmp
add
sbb
xchg
daa
call
cmc
push
retf
add
dec
imul
push
and
pop
imul
sub
add
pop
xor
ja
push
imul
jno
in
ds
out
jnp
xchg
in
push
mov
cmp
movs
lahf
lds
lea
popf
ffreep
jle
repz
shl
pop
aas
les
gs
test
sbb
push
(bad)
xlat
out
(bad)
fild
idiv
popf
mov
mov
jbe
retf
add
and
movs
fs
inc
mov
sub
nop
inc
push
pop
inc
cdq
in
shl
mov
xor
scas
push
jl
js
mov
mov
mov
popf
(bad)
mov
dec
mov
mov
mov
fnclex
out
sahf
sahf
mov
adc
inc
push
rep
ds
adc
fdivrp
lods
inc
or
adc
stos
pop
test
sbb
lods
cmp
mov
inc
daa
xor
sbb
lods
sar
add
or
cmc
add
xchg
jmp
pop
ret
xchg
jo
jmp
cmp
xchg
inc
cld
mov
test
repnz
push
or
sbb
inc
sub
push
lds
dec
push
in
sar
jmp
cwde
jns
cmp
pop
in
push
loopne
dec
or
xchg
xor
in
mov
xchg
imul
jns
rcr
retf
mov
mov
or
in
retf
les
cld
xchg
mov
test
lods
sbb
pushf
int3
arpl
adc
mov
xor
and
push
jo
mov
lods
clc
pop
inc
lock
in
(bad)
jmp
daa
xchg
popa
mov
adc
pop
jmp
sbb
and
mov
aad
test
out
push
jmp
add
retf
push
int
xchg
jge
mov
or
(bad)
fild
mov
popf
outs
cmp
and
pop
xlat
or
outs
in
jle
sbb
jb
push
xchg
loopne
sub
xchg
push
or
or
mov
std
inc
movs
pop
fsub
inc
mov
into
sahf
fst
or
inc
pop
cli
push
push
sub
dec
cli
sub
push
aad
xor
dec
cmp
lock
das
or
jge
or
lahf
cmps
cmp
push
fist
stos
push
pop
lock
lds
movs
push
pop
pop
sub
int3
je
mov
sub
mov
jmp
add
pop
repnz
mov
out
and
cmp
mov
mov
(bad)
lods
pop
and
cli
adc
mov
inc
xlat
xchg
aas
not
loop
add
data16
movs
mov
push
mov
cdq
(bad)
(bad)
in
xchg
ret
cdq
retf
call
mov
imul
sbb
and
sbb
add
push
int
les
shr
out
retf
fcomi
lods
outs
mov
push
or
pushf
imul
lods
adc
test
add
jne
inc
es
sbb
mov
ins
ins
fisttp
xor
shl
xor
xchg
icebp
inc
mov
pop
hlt
cmp
xchg
inc
and
xor
bound
lock
or
dec
enter
gs
clc
mov
and
outs
cmp
lock
lahf
cmps
(bad)
(bad)
sbb
push
push
scas
push
ja
adc
bound
or
inc
or
cld
xchg
sbb
not
or
add
inc
mov
inc
sar
adc
imul
mov
ror
ret
cmp
clc
aad
push
fidivr
mov
das
pushaw
ss
outs
(bad)
xchg
clc
xchg
test
lock
pop
data16
int
mov
call
jbe
aad
push
mov
mov
int3
mov
(bad)
add
or
add
add
jo
or
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
