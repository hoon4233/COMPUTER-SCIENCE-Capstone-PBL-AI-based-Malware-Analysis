sti
in
mov
xor
pop
add
es
push
add
sbb
add
cld
sbb
jae
mul
dec
add
pop
fstp
or
push
into
mov
xchg
cmp
push
xor
loopne
out
arpl
int3
or
or
retf
aad
js
xchg
repnz
jnp
mov
jmp
mov
hlt
and
fucomip
rcr
dec
xor
out
sbb
xor
fwait
test
jmp
add
and
aaa
mov
outs
sar
adc
xor
(bad)
sbb
fwait
retf
pop
iret
and
push
loopne
adc
stos
mov
mov
mov
or
push
inc
mov
out
push
retf
push
in
imul
mov
jle
test
add
sbb
lods
jnp
and
outs
sbb
ret
lods
dec
loopne
jmp
sub
pushf
pop
xor
mov
fadd
cmp
adc
mov
push
mov
shr
jns
and
mov
mov
gs
mov
stos
ins
cmps
stc
sti
jmp
sub
out
cmp
adc
jg
push
and
push
out
ror
ins
(bad)
in
inc
pop
sub
ds
sbb
mov
stc
inc
ret
fcmovnu
aad
jmp
xchg
add
dec
jo
ins
cli
or
sbb
(bad)
mov
(bad)
sub
int3
adc
cld
jp
out
call
cmc
jmp
(bad)
pop
retf
add
sbb
imul
push
out
fcomp
mov
nop
jmp
push
pop
daa
mov
call
mov
int
mov
leave
mov
xchg
aad
inc
out
rcr
jno
fsubr
std
or
pusha
das
pop
call
retf
cmp
imul
push
adc
jle
add
inc
rcl
sub
cmp
jp
in
clc
push
daa
jecxz
push
and
and
push
push
sbb
sahf
sbb
adc
add
pop
mov
mov
adc
shl
and
mov
pop
add
or
dec
or
pop
sbb
xchg
loop
push
inc
xlat
or
ficomp
rcl
xchg
push
test
out
mov
jecxz
mov
push
jg
sar
jb
es
mov
ffree
mov
es
add
mov
pop
xor
adc
jne
adc
push
cmp
cmp
sbb
dec
mov
sbb
mov
ja
test
(bad)
in
sbb
xor
sbb
or
adc
call
sbb
sbb
retf
ret
in
mov
xlat
inc
pop
sub
and
xor
add
sahf
xor
jae
jbe
sub
mov
push
mov
inc
xor
outs
outs
mov
and
xor
sar
in
femms
or
mov
adc
jne
sub
enter
jl
loop
dec
push
jmp
mov
push
dec
jl
loop
push
fld
pop
mov
cmps
cmp
jb
sub
cs
pop
pop
enter
sub
out
xchg
(bad)
cwde
mov
jbe
mov
(bad)
sar
fild
pop
out
mov
add
add
movs
dec
adc
jae
jle
xor
sbb
cmp
lahf
pop
mov
je
lds
and
fs
sbb
mov
xchg
jo
fst
outs
imul
inc
mov
loopne
imul
sub
jo
xor
xor
or
mov
mov
push
aaa
aaa
leave
mov
imul
inc
jle
ss
js
xlat
push
call
shl
fistp
loope
pop
pop
outs
push
mov
ds
jle
pop
ins
jle
cs
ins
dec
mov
mov
and
jecxz
xchg
push
arpl
loope
xor
and
adc
out
dec
lods
or
pop
fadd
push
sub
lds
mov
cmp
mov
stos
(bad)
sahf
jp
sub
cli
dec
push
or
dec
mov
call
fld
sbb
jecxz
pushf
int3
mov
add
into
sbb
pop
mov
and
cli
jne
cmp
fldcw
inc
(bad)
jne
jmp
test
ins
aas
sub
mov
into
adc
mov
xor
sub
sahf
addr16
hlt
jg
ror
inc
stos
hlt
lea
retf
scas
add
mov
and
push
pop
clc
mov
jge
sub
jae
mov
xchg
pop
xor
outs
and
fisub
add
es
pop
xor
push
pop
jle
or
cdq
mov
rol
rcl
leave
add
shl
sar
lods
inc
cmc
add
nop
(bad)
jmp
mov
lahf
fnstenv
aas
xchg
jnp
inc
repnz
shr
inc
push
jle
arpl
mov
inc
aad
or
test
cmp
mov
mov
fldcw
mov
mov
into
jno
addr16
add
int
cmp
fcomp
and
or
cmp
jo
or
ins
into
push
xchg
add
sbb
inc
stos
neg
test
fcomp
ins
(bad)
mov
dec
sub
xchg
pop
cld
cmp
(bad)
ret
sahf
pushf
jbe
push
push
loopne
retf
addr16
pop
dec
add
cmps
pop
dec
sub
sub
(bad)
cld
(bad)
and
loop
push
ins
fdecstp
fdivr
mov
xchg
jmp
jmp
sbb
mov
sub
or
not
fcom
daa
mov
ret
gs
xchg
mov
int3
push
cmp
add
mov
retf
pop
loopne
xchg
cmps
or
lods
and
add
dec
js
sbb
xlat
lock
loop
jmp
add
dec
mov
(bad)
scas
jo
outs
inc
mov
test
rol
xor
pop
add
aad
cld
dec
and
sbb
repnz
std
sbb
imul
movs
(bad)
cmc
fstp
push
repnz
xor
(bad)
jbe
loop
adc
mov
call
push
inc
cmp
mov
mov
(bad)
xchg
scas
std
movs
adc
push
pop
pusha
mov
mov
cmp
ins
stos
outs
fdiv
call
dec
loop
add
clc
inc
xchg
add
pop
cmovl
or
(bad)
shr
sbb
push
lds
mov
push
in
xchg
loopne
in
mov
das
adc
ins
push
pop
stc
imul
mov
lahf
pop
add
cmp
je
mov
xor
adc
push
and
sub
stos
(bad)
(bad)
repnz
int3
aam
addr16
in
mov
addr16
out
stos
adc
ss
je
daa
mov
retf
adc
popf
pop
inc
sub
jno
loopne
in
popf
cdq
addr16
pop
cld
outs
popf
push
or
outs
stos
push
push
movs
cs
lock
movs
mov
(bad)
cmp
xchg
out
jo
xor
dec
inc
retf
stos
rol
cmp
and
cwde
jo
add
push
sbb
int
(bad)
mov
shl
mov
repz
push
xchg
lahf
pushf
test
pop
adc
retf
in
push
push
jecxz
leave
dec
pop
mov
jbe
or
cwde
pop
repz
leave
dec
aad
jle
sub
aad
fisubr
mov
push
repz
inc
xor
shr
mov
cmp
xchg
test
xor
jbe
mov
push
jo
ror
mov
sbb
mov
gs
or
cwde
dec
sbb
push
xchg
mov
adc
mov
scas
jle
ja
sub
lds
cmps
sbb
push
test
lods
jb
fiadd
xchg
stc
scas
(bad)
push
ficom
dec
cmp
(bad)
gs
cmp
jno
jnp
sub
dec
int3
sbb
mov
pop
test
in
cwde
pop
outs
xchg
fdiv
add
das
mov
movs
jle
xor
imul
arpl
jmp
push
fsubr
add
or
bound
adc
and
ror
jns
outs
push
mov
sub
loope
pop
pop
jnp
adc
add
mov
or
pop
leave
inc
test
movs
test
dec
sub
mov
inc
mov
xchg
jbe
jl
in
mov
xchg
pop
aaa
cmps
repz
outs
cs
mov
call
out
jmp
fild
ins
mov
pop
fisub
and
push
xchg
xlat
aaa
pop
pop
xor
and
pop
sub
mov
bound
jne
mov
sar
daa
(bad)
mov
in
arpl
int
pop
xchg
pop
retf
call
fimul
xchg
pop
loopne
sub
push
stos
jno
inc
ds
lods
sahf
inc
cmp
loop
(bad)
xchg
scas
xor
mov
and
loop
inc
cdq
adc
adc
and
shl
lock
mov
push
leave
mov
mov
test
xlat
push
lock
jle
dec
imul
imul
mov
lods
sbb
sbb
add
enter
mov
(bad)
cld
mov
outs
repz
sbb
mov
mov
sbb
pushf
aaa
sbb
sbb
dec
xchg
fwait
sbb
cmc
pusha
scas
mov
movs
test
popf
fcomi
dec
jo
test
xchg
push
cs
jl
push
fsub
dec
mov
lock
or
xchg
cmc
sti
call
dec
inc
adc
sub
inc
sub
sub
stos
mov
test
out
movs
bound
cmp
mov
mov
inc
adc
test
loop
iret
fsub
xchg
dec
loopne
test
xchg
inc
mov
fcmovnbe
pop
js
pop
loopne
scas
retf
int3
or
cmp
mov
inc
rcr
dec
addr16
popf
xchg
(bad)
fidiv
xchg
mov
push
call
int
rcl
add
das
mov
sti
int
sbb
cli
add
pusha
outs
(bad)
mov
fdiv
popf
scas
push
out
or
cdq
cdq
inc
out
jno
gs
in
sub
std
sbb
stc
pop
enter
cdq
cmp
or
pop
(bad)
into
dec
hlt
fwait
push
jns
xchg
js
pop
adc
or
cld
inc
outs
fs
pop
imul
fidivr
popf
aaa
sbb
fmul
xor
mov
xor
inc
inc
jg
sbb
sbb
cmps
in
std
sbb
xor
add
jae
jo
adc
xchg
movs
int3
frstor
push
cmp
loop
sub
push
and
mov
dec
dec
sbb
hlt
scas
jno
inc
(bad)
call
add
fsubr
mov
imul
inc
adc
and
push
inc
sub
out
push
fcomp
jns
cld
jno
adc
and
aas
sbb
cmps
sub
or
pop
cmps
cmp
dec
jo
aad
lods
dec
fucom
fwait
and
scas
pop
mov
mov
adc
adc
mov
jl
and
sbb
xchg
inc
fist
ins
imul
pop
push
mov
mov
sub
ins
inc
shl
addr16
stos
push
fdivr
pop
ret
dec
ret
pusha
xlat
dec
cmovbe
scas
add
mov
jecxz
imul
xchg
test
sbb
push
cmp
rcl
pop
sahf
out
adc
fcmovu
adc
sbb
or
mov
shl
ins
adc
stc
mov
mov
mov
mov
xor
gs
div
cmp
inc
mov
adc
push
(bad)
pop
inc
repnz
inc
out
ins
cs
sbb
(bad)
scas
cmp
mov
xchg
mov
stos
icebp
jo
inc
mov
pushf
adc
add
rcr
inc
aas
inc
(bad)
sbb
adc
push
aad
jne
mov
add
xor
push
sub
aaa
mov
xchg
sahf
rcl
cmps
push
cdq
cs
fld
sub
lea
sbb
inc
mov
inc
sahf
mov
jp
mov
cmp
and
xchg
lods
cmp
pop
mov
adc
xchg
(bad)
loopne
pop
cwde
es
(bad)
hlt
in
out
ins
and
jle
fs
lods
sub
sub
cld
push
mov
cs
aaa
or
repnz
fld
leave
out
loope
dec
pop
int3
jae
mov
fdiv
mov
jge
or
xor
fs
outs
sbb
add
inc
inc
test
push
scas
stc
(bad)
out
sub
sti
dec
sti
rol
adc
mov
iret
inc
fst
sub
repnz
ds
nop
or
cmps
jbe
and
or
jmp
push
sbb
jle
pop
cmp
std
out
pop
scas
jl
push
addr16
sti
nop
adc
popa
jecxz
jge
jecxz
pop
inc
imul
retf
inc
sar
rcr
pusha
jmp
test
enter
sbb
arpl
bound
sub
xor
jne
aas
lahf
mov
dec
cld
add
inc
shl
cmp
outs
dec
cmp
pop
mov
xchg
or
cmc
shl
sbb
jno
jns
enterw
rol
push
xor
lods
mov
dec
push
sti
fwait
mov
dec
lods
lods
cmp
lods
loopne
aam
mov
sbb
clc
pop
mov
jmp
fadd
cwde
xlat
sbb
xlat
jae
out
xor
jp
add
push
pop
jae
test
loope
inc
out
out
dec
dec
push
xchg
push
sub
xchg
push
or
cmp
frndint
es
pop
outs
xor
lods
xchg
(bad)
jecxz
xor
aad
cmp
outs
jae
adc
and
push
mov
(bad)
out
add
clc
adc
adc
scas
inc
or
enter
mov
movs
add
bound
push
cmp
and
mov
or
mov
sub
and
inc
mov
add
xlat
jnp
jne
dec
rol
stos
aaa
aam
xchg
mov
mov
mov
sub
dec
(bad)
jns
cmps
bnd
mov
mov
and
jo
ja
dec
jnp
(bad)
jmp
mov
or
jnp
test
xchg
mov
fsubr
dec
xchg
adc
and
ja
xchg
gs
mov
mov
repnz
and
mov
jnp
std
dec
sub
cmp
and
fisttp
push
sti
mov
in
mov
lods
adc
xor
push
mov
enter
mov
repz
je
fadd
mov
mov
sbb
xchg
movs
pop
les
fs
pop
xchg
mov
sub
adc
mov
dec
xchg
or
xchg
jno
out
pop
(bad)
fnsave
cmp
mov
or
sbb
movs
or
retf
xor
out
cld
push
xor
sbb
mov
aad
inc
xchg
popa
fnsetpm(287
or
fwait
jns
sbb
and
loopne
pop
xor
pusha
fisub
mov
imul
fstp
inc
push
scas
ss
lds
leave
push
cmp
out
nop
repz
mov
in
loope
ja
aaa
aam
sbb
cld
mov
sub
test
shl
or
sbb
mov
daa
sub
or
retf
and
lea
aas
xlat
jae
lods
out
sub
push
call
cmp
in
push
repz
ss
pop
std
mov
push
push
mov
clc
movs
ins
and
jae
or
pop
hlt
dec
inc
add
mov
repz
rcl
inc
or
call
retf
rcl
push
out
out
mov
jb
pop
push
test
sub
imul
das
xchg
mov
mov
push
adc
mov
test
cmp
jmp
das
out
ins
mov
rcl
mov
jno
stos
and
sahf
enter
push
xchg
cwde
lea
js
movs
pop
test
add
xchg
pop
hlt
out
mov
xchg
jns
jge
fwait
imul
xor
in
adc
inc
stos
push
pop
loop
sbb
inc
or
popf
retf
repz
push
outs
xor
add
mov
mov
retf
lods
fadd
cld
mov
js
jmp
inc
jno
sbb
sti
cli
test
jb
adc
pop
call
(bad)
jle
shl
jle
in
int
mov
mov
mov
das
pop
lods
repz
call
add
sbb
sbb
movs
stos
dec
cmp
test
movs
icebp
xor
and
enter
and
push
data16
push
(bad)
push
pop
xchg
rcr
ja
cmp
mov
dec
inc
imul
pop
sub
or
add
cmps
imul
sbb
lea
jae
inc
rcr
cmp
int
fs
out
ins
dec
jae
vmulps
das
enter
add
sti
(bad)
ret
mov
in
fnstenv
enter
rcr
adc
(bad)
inc
sbb
std
sub
dec
mov
jl
cwde
xlat
aaa
push
mov
mov
cmp
popa
sbb
xor
sub
mov
or
es
shl
adc
mov
dec
jne
and
sbb
jp
scas
retf
test
inc
mov
mov
sar
and
bound
push
fmul
inc
fistp
jmp
test
jae
pop
push
aas
or
shl
in
inc
popa
cli
sbb
(bad)
add
pop
les
sub
jl
jae
xchg
pop
inc
pushw
mov
pop
xchg
inc
test
cld
in
loope
sar
shl
jbe
rcl
pop
mov
dec
mov
lods
mov
jno
int
gs
pusha
pop
daa
and
cmp
sar
push
inc
jbe
or
ret
test
retf
data16
cs
loop
loop
add
push
add
vpmulhuw
repnz
xor
or
dec
fs
sbb
cdq
sub
add
sahf
add
jnp
push
jp
mov
movs
or
and
cmp
xchg
sahf
sub
add
shr
test
mov
push
sahf
mov
(bad)
in
jns
jns
xor
push
sbb
jne
popa
cmp
ret
addr16
out
jae
lahf
sti
loope
ins
ret
add
mov
fwait
xor
xchg
jnp
jns
pusha
fnstcw
loop
ss
push
retf
push
xor
shr
push
cmp
retf
inc
popf
je
jo
adc
jbe
and
xchg
inc
mov
push
pop
adc
cmp
mov
lods
sub
test
cmp
inc
jmp
stos
call
sub
es
sub
les
aas
adc
mov
xor
jl
and
add
push
ins
xor
cmp
xor
and
pop
xchg
mov
xchg
(bad)
nop
pop
call
das
(bad)
jb
mov
sub
pop
mov
mov
retf
cmp
cmp
add
out
dec
add
push
dec
pop
daa
mov
in
sbb
mov
and
jle
jae
daa
mov
mov
stos
xchg
iret
and
inc
jo
mov
pop
sub
cmp
mov
ret
mov
cmps
dec
adc
fnstcw
or
in
in
adc
inc
sub
enter
lea
pop
or
loopne
lods
push
inc
mov
jle
mov
out
ins
in
sub
or
adc
mov
xchg
xor
das
sbb
movs
or
mov
nop
fs
push
es
iret
cwde
cli
nop
sub
ins
adc
pop
rcr
inc
or
rol
inc
inc
jl
aam
sub
pop
sub
jno
sbb
pop
imul
popf
les
iret
lds
inc
retf
fcmovbe
test
outs
and
add
test
ret
dec
xor
jns
pushf
mov
mov
mov
shl
cmp
pop
jmp
cmp
sub
push
bound
add
mov
add
inc
xor
test
jns
adc
pop
add
mov
outs
test
fidivr
ja
iret
or
loope
xchg
dec
test
mov
or
out
jg
xchg
xor
fstp
mov
addr16
dec
fmul
imul
pop
inc
and
call
inc
sub
jae
ret
mov
sub
mov
adc
mov
mov
sub
push
lods
sub
ret
or
(bad)
adc
btc
clc
gs
cmp
push
adc
out
mov
call
add
dec
push
xchg
or
mov
shl
pop
icebp
push
(bad)
sbb
lods
jnp
jmp
inc
div
pop
xchg
jmp
sub
lock
jmp
popa
xchg
lods
lods
pop
cmp
pop
jne
mov
push
sub
add
add
fild
(bad)
mov
mov
adc
add
hlt
push
ret
sbb
push
jmp
mov
arpl
in
xor
push
adc
jne
dec
and
dec
outs
pop
and
inc
push
inc
pop
pop
js
push
xchg
cld
das
scas
add
les
or
int3
jle
cli
xor
aad
retf
(bad)
out
out
xchg
dec
adc
scas
adc
fidivr
aas
aas
pop
retf
neg
in
aas
in
push
cmp
jo
lods
add
and
mov
lea
mov
inc
push
xor
repnz
jae
dec
inc
das
sub
popf
add
aad
ror
leave
out
adc
pop
sbb
push
(bad)
cmp
inc
push
out
pop
jp
fistp
mov
out
push
or
cmp
xor
and
or
xchg
sub
out
ror
add
and
pop
inc
mov
cld
movs
ret
retf
pop
xchg
sbb
adc
inc
ins
xchg
retf
dec
push
xor
inc
xchg
sbb
(bad)
into
cli
rcr
jecxz
cmc
lahf
mov
shr
jle
leavew
daa
movs
jle
mov
push
dec
out
dec
sbb
add
inc
shl
mov
mov
mov
hlt
aas
clc
fstp
dec
jo
mov
(bad)
repz
xor
mov
gs
imul
push
fsubr
test
pushf
cmp
out
xchg
sub
shl
jo
in
or
rol
mov
fistp
int3
jl
push
jle
sub
(bad)
ficomp
rcl
inc
or
sub
dec
lea
das
and
lods
mov
or
or
pop
pop
sbb
mov
pop
out
and
sar
pop
push
sub
sbb
sti
xchg
mov
push
xor
push
adc
jl
jmp
and
je
cli
xchg
cmp
jmp
(bad)
pop
mov
push
xchg
aas
popa
push
or
cdq
xchg
idiv
jge
popa
imul
cli
popa
inc
push
loopne
clc
(bad)
lahf
dec
sbb
sbb
shl
cmp
cs
ins
stc
pop
inc
xchg
or
or
sub
jnp
adc
arpl
ds
xor
stc
cmc
in
sbb
cwde
dec
inc
and
(bad)
mov
idiv
dec
mov
pop
imul
jmp
push
in
imul
adc
ds
push
or
(bad)
call
cwde
cmp
xlat
sbb
pop
repz
(bad)
fstp
dec
out
rcl
fdiv
retf
int3
jne
retf
sbb
mov
mov
mov
jecxz
shl
xchg
sub
mov
cmc
lods
dec
mov
and
dec
sub
bound
sbb
mov
xchg
cmp
add
mov
js
adc
daa
xor
cld
ja
dec
adc
adc
cmp
adc
fbstp
mov
movs
mov
xor
out
mov
push
and
inc
mov
stc
test
pop
xchg
inc
fwait
arpl
sub
dec
pop
aam
je
xor
pop
test
and
push
enter
cdq
pop
mov
dec
xchg
jns
xor
inc
dec
cmp
push
sub
push
pop
in
adc
push
adc
fisttp
mov
add
add
sbb
ja
dec
stc
cmp
add
(bad)
out
sub
aam
mov
mov
mov
xchg
push
fmul
and
dec
mov
add
xlat
push
cld
lock
scas
sub
pop
push
pusha
stos
int3
inc
inc
sbb
rol
popf
mov
ins
mov
lock
test
sub
jbe
cwde
test
imul
aad
xor
nop
push
cmp
mov
sub
adc
mov
or
out
mov
dec
clc
das
jmp
popf
inc
adc
mov
fstp
cmp
push
mov
mov
adc
cmp
adc
test
fstp
xlat
or
cmp
aaa
ds
out
xchg
repnz
shl
clc
mov
push
lods
cmp
sub
(bad)
out
xor
and
jo
pop
pop
movs
mov
pop
sub
and
ret
retf
push
cmp
bound
push
int
fs
push
pusha
dec
xor
or
ins
clc
pusha
adc
cmps
nop
xor
adc
jnp
pop
inc
xor
ret
mov
jmp
cmp
cmp
repz
dec
ds
adc
push
ins
or
inc
mov
push
(bad)
dec
push
mov
stc
cwde
sub
dec
fist
ins
movs
test
inc
aam
lods
out
into
fisub
mov
loope
jecxz
(bad)
jmp
xcrypt-cfb
cmps
addr16
jle
push
iret
fadd
mov
lock
pop
push
in
shr
dec
or
push
sub
stos
and
dec
mov
popa
loope
xchg
clc
and
shr
test
inc
sub
arpl
push
or
nop
ret
ret
and
add
jnp
push
cmp
jbe
cmp
cld
push
mov
cmc
mov
ret
les
mov
popf
cmc
or
rcr
mov
mov
int3
in
jl
adc
aam
fbld
jae
nop
and
and
jmp
xchg
cmp
xchg
je
stos
mov
icebp
mov
rcl
clc
mov
and
into
mov
adc
into
jo
dec
aad
jecxz
cmps
mov
cmp
ja
call
rcl
push
fsub
int
popf
pushf
daa
pop
mov
adc
mov
mov
out
xchg
aas
cs
jge
stos
inc
mov
(bad)
adc
ja
hlt
cli
in
xchg
add
or
dec
dec
or
fmul
add
cmps
mov
jnp
mov
xchg
jne
int
sub
xor
sub
test
mov
repz
xor
mov
sub
jle
push
push
adc
fist
mov
add
xchg
outs
mov
xor
lods
imul
sbb
sub
push
mov
lods
scas
xchg
add
and
push
data16
movs
imul
mov
ins
jns
push
cmp
xchg
cmp
pop
loopne
loope
sbb
mov
inc
sbb
jmp
add
lods
xchg
(bad)
adc
cmp
mov
mov
xlat
mov
hlt
aaa
jge
shr
call
out
fsub
stos
mov
xchg
sub
adc
iret
push
stc
or
cmps
push
xor
fsubr
gs
int
add
inc
mov
jmp
cmps
ficomp
jae
push
scas
mov
mov
arpl
push
and
jbe
scas
sti
lock
and
outs
mov
inc
push
out
mov
pop
ins
nop
ja
in
and
or
mov
aam
sbb
push
mov
or
test
cdq
gs
jns
mov
xlat
cmp
sub
and
in
fistp
mov
and
inc
jmp
movs
cmps
movs
retf
gs
test
cmps
mov
jo
jae
and
cmp
push
in
nop
push
sti
dec
dec
mov
inc
mov
int3
call
pusha
(bad)
and
xchg
sahf
repnz
push
retf
jle
inc
and
cmp
iret
movs
scas
stos
xchg
fild
movs
scas
jb
test
test
inc
dec
test
adc
mov
mov
and
aaa
cli
jge
add
iret
ins
mov
pop
out
rol
es
adc
push
sub
jmp
jnp
je
or
bound
push
das
inc
pop
mov
iret
xchg
ins
test
sti
adc
add
mov
lods
jp
ins
xor
jge
sbb
and
jmp
lods
and
call
push
int
mov
sub
inc
cmp
repz
(bad)
dec
xchg
ror
into
clc
mov
sbb
xor
push
mov
ins
bound
mov
clc
jae
loop
xor
ror
aas
int
jno
add
inc
pushf
movs
ret
adc
mov
jle
cmps
dec
(bad)
arpl
out
mov
or
in
pushf
adc
mov
push
in
call
ror
(bad)
push
xchg
pop
sbb
call
outs
imul
sub
inc
add
inc
test
and
jb
leave
fbstp
jmp
icebp
mov
or
js
mov
stc
xor
xlat
ss
jmp
jp
(bad)
fstp
xor
lods
(bad)
ja
push
scas
jbe
mov
fist
inc
ins
outs
adc
adc
ds
cdq
jmp
sub
add
jno
xor
jno
(bad)
cld
sbb
js
ror
test
sub
jne
dec
push
mov
jge
cld
push
loopne
cmp
inc
cdq
lock
inc
adc
push
fidiv
(bad)
cmp
mov
cmps
or
test
push
jge
push
adc
dec
mov
addr16
xchg
movs
push
rol
daa
or
mov
sub
aam
(bad)
(bad)
pop
in
movs
dec
daa
push
jnp
jp
xor
dec
les
pop
mov
sti
nop
in
or
in
sbb
ja
lods
xor
cmp
sub
jecxz
into
inc
mov
push
adc
adc
mov
lahf
sbb
adc
xchg
pusha
push
loop
push
sbb
xor
cli
mov
adc
in
xchg
xchg
cmp
jmp
and
ficom
push
mov
push
pop
sub
jl
fdivr
jge
inc
mov
in
icebp
cmps
cdq
xchg
sub
bound
jecxz
retf
(bad)
cmp
or
cwde
mov
or
shufps
push
stc
retf
pusha
outs
mov
cmps
scas
sub
and
(bad)
mov
and
jecxz
ss
ffree
adc
add
test
(bad)
pop
out
scas
sar
jns
sub
retf
in
(bad)
fmul
jo
outs
sbb
adc
pop
mov
(bad)
push
inc
outs
js
jg
sub
enter
into
cs
pop
rcl
lods
(bad)
mov
mov
pop
jb
or
bound
ficom
or
xchg
sbb
rol
and
test
mov
enter
js
idiv
fild
fstp
add
popf
pushf
push
inc
xchg
sbb
cmc
scas
push
in
repz
sar
xor
mov
sbb
data16
sub
xchg
or
and
cmp
fidiv
call
ret
cld
add
mov
mov
xchg
or
ins
sbb
mov
sub
adc
or
aaa
int3
leave
stc
push
fdivr
ins
std
into
mov
xchg
cwde
pusha
jnp
sub
jmp
loope
bound
or
xchg
enter
push
add
fidiv
repz
xchg
mov
shr
jb
sbb
mov
cmps
mov
or
fidivr
adc
xchg
push
inc
loope
sub
test
icebp
add
and
add
inc
out
sub
pusha
test
loope
not
shl
jnp
cmp
(bad)
ror
sti
push
or
push
or
int3
adc
sub
test
push
adc
out
test
jmp
and
mov
push
hlt
adc
pusha
in
mov
dec
xor
or
push
les
push
xlat
pop
rcr
out
xor
mov
mov
pop
outs
(bad)
out
aam
mov
imul
sbb
test
test
ja
loopne
sbb
mov
bound
lock
and
add
pop
adc
pusha
or
add
rcr
add
push
jmp
xchg
movs
and
mov
stos
cmps
cmc
dec
out
in
int
lods
inc
xchg
(bad)
cli
repz
pop
push
cli
xor
ret
loopne
pop
xchg
leave
dec
cmps
into
or
jae
fld
shl
mov
movs
sub
pop
into
cmps
iret
in
dec
sbb
(bad)
push
and
push
xchg
shl
mov
(bad)
add
inc
mov
stc
add
(bad)
or
jmp
mov
xor
adc
fmul
ins
cli
outs
push
loopne
mov
cwde
mov
adc
inc
(bad)
fmul
test
pop
pop
or
mov
mov
mov
pop
dec
cmp
and
(bad)
shl
cdq
(bad)
jne
test
jp
cmc
imul
(bad)
add
and
aam
das
shl
loopne
xchg
cmps
pop
pushf
adc
retf
lea
and
jno
(bad)
mov
mov
inc
jns
push
sbb
or
cmp
adc
out
ror
jb
(bad)
mov
mov
jl
js
test
inc
call
aaa
push
sbb
add
neg
ins
stos
push
and
dec
mov
xchg
sahf
cmp
pop
pop
mov
in
aas
movs
mov
xchg
(bad)
scas
xor
pop
fbld
in
or
shl
push
sbb
xlat
push
dec
dec
inc
ror
retf
stos
push
and
mov
push
clc
(bad)
cmp
mov
sbb
jno
in
dec
arpl
adc
pop
push
push
inc
mov
inc
sub
arpl
or
dec
(bad)
jmp
mov
hlt
xchg
sahf
jmp
push
and
cdq
(bad)
jecxz
test
mov
stos
sti
fisubr
hlt
call
xchg
mov
jne
movs
add
cmps
xchg
mov
leave
mov
jae
and
inc
bound
mov
lods
push
xor
aas
fdivr
fidivr
imul
or
fbstp
(bad)
cmps
test
lock
call
xchg
or
dec
push
xor
xchg
jmp
jmp
sbb
clc
xchg
jmp
ins
xchg
call
push
(bad)
mov
daa
jbe
push
pop
and
pop
ja
adc
test
sub
aas
in
ins
pop
dec
jg
add
add
test
sub
rcr
in
scas
xor
jbe
ins
into
xchg
cli
or
not
mov
add
push
xchg
and
push
sub
dec
jmp
rcl
fmul
add
daa
mov
popf
xchg
jo
das
fnsave
jbe
mov
sub
jbe
inc
dec
xchg
mov
xchg
and
sti
sbb
mov
cmc
jb
pop
je
(bad)
popf
dec
pop
adc
loopne
pop
xchg
test
cwde
push
push
ds
dec
out
mov
mov
fstp
push
pop
arpl
add
push
cld
std
sbb
fidiv
adc
(bad)
loop
mov
cmps
jge
pop
test
inc
pop
rcr
add
pop
imul
xchg
pusha
icebp
cmp
push
dec
pop
gs
mov
xor
aam
jmp
jmp
es
rol
push
addr16
jmp
(bad)
jp
rcl
sub
mov
mov
push
mov
mov
xchg
shl
shr
xlat
test
cdq
jno
call
je
mov
mov
cmc
xor
cmp
adc
pop
adc
cmp
cdq
jl
mov
cli
xor
arpl
mov
sub
lock
out
ja
ss
les
xor
sub
out
pushf
sbb
push
dec
bound
jmp
(bad)
cmps
aaa
mov
icebp
dec
cmps
clc
data16
jge
mov
jmp
mov
pop
jle
pop
xchg
icebp
sbb
out
dec
mov
icebp
or
(bad)
div
movs
sub
call
mov
xor
fbstp
stc
fidiv
xchg
pop
(bad)
stc
push
repz
jp
add
popf
out
sbb
(bad)
in
js
loop
cmps
mov
sahf
push
fwait
(bad)
mov
xchg
pop
mov
xchg
cli
xor
push
gs
inc
icebp
xchg
sbb
xchg
jmp
out
lds
loopne
pop
(bad)
bound
dec
inc
inc
xor
out
or
(bad)
cdq
push
mov
call
psubd
fld
lahf
std
ss
fcom
sti
push
xchg
int3
cmp
push
lods
loop
retf
vmovlpd
push
mov
inc
and
bound
and
fisub
scas
pop
mov
push
test
stos
sbb
movs
mov
push
cld
push
sub
mov
jmp
xchg
or
and
lea
jp
jmp
bound
push
jge
jne
mov
pushf
in
mov
movs
push
clc
mov
cmc
mov
in
ins
ret
push
and
jno
movs
test
add
jae
dec
adc
push
dec
xor
dec
cmp
js
daa
pop
jne
add
out
xor
aam
loopne
das
sahf
push
xor
push
xchg
sub
aad
mov
and
xchg
fstp
and
dec
inc
and
test
js
mov
push
mov
mov
adc
or
popf
jmp
lods
inc
retf
dec
jne
push
xor
enter
inc
xchg
fs
fadd
repnz
adc
out
std
ins
mov
and
jae
mov
dec
pop
hlt
mov
sub
dec
sub
or
enter
push
xor
add
outs
inc
(bad)
ror
imul
cmp
js
jb
retf
xchg
adc
lods
xor
adc
cmp
sub
push
(bad)
out
mov
jge
mov
cmc
cmp
in
lds
and
out
or
mov
push
mov
jo
xchg
lds
hlt
xchg
xchg
mov
call
cdq
rcl
mov
rep
jp
dec
fisub
call
pop
pop
sub
pop
pop
shl
and
adc
mov
mov
loopne
mov
std
in
shl
inc
add
cmc
push
add
xor
imul
hlt
scas
jecxz
ret
sahf
mov
addr16
in
inc
push
aam
pop
out
adc
mov
loopne
scas
test
ja
dec
jmp
adc
dec
pop
xchg
pop
inc
cmp
loop
outs
sub
or
xor
frstor
push
cmps
xchg
test
pop
sub
inc
xchg
aas
pop
scas
cdq
mov
adc
jle
repnz
loopne
and
cmp
mov
sub
imul
fidiv
push
bound
and
push
cld
stos
xor
or
not
loop
fldcw
jmp
les
xchg
fs
sub
sbb
stos
test
jmp
out
cmp
out
hlt
gs
push
sub
jmp
pop
fiadd
pushaw
mov
cli
mul
xchg
mov
mov
sub
push
fmulp
cmps
aam
mul
mov
mov
jo
ja
cmps
fdiv
add
test
mov
outs
adc
test
clc
dec
mov
dec
pop
xlat
adc
xor
and
inc
cmc
movs
or
test
fadd
mov
xchg
xchg
xchg
jno
popf
test
mov
movs
cmp
in
loopne
imul
xor
ds
jg
mov
stc
lahf
push
cli
dec
in
lahf
jg
repz
mov
add
outs
jecxz
retf
jbe
push
stos
jp
jbe
sahf
not
rcl
out
(bad)
(bad)
xor
std
retf
adc
sub
ss
jge
pop
add
mov
bound
inc
mov
test
jecxz
or
std
add
adc
cmp
stc
es
or
xor
dec
loope
das
out
dec
or
pop
push
pop
in
sahf
(bad)
fimul
or
mov
pop
test
popa
inc
dec
pop
cmps
adc
push
gs
clc
dec
adc
pop
daa
sub
fnstsw
les
push
push
sbb
xchg
inc
stc
mov
jmp
test
push
(bad)
rcl
push
jb
xor
jge
mov
mov
fisttp
ja
add
fdiv
cwde
int
jge
jo
add
dec
test
js
movs
lds
pop
push
or
sub
adc
in
mov
inc
icebp
xchg
popf
and
(bad)
sbb
mov
mov
stos
test
cmp
(bad)
cdq
jb
jno
jne
xchg
sub
(bad)
retf
test
cli
les
ss
pop
and
dec
fisub
or
cmps
ja
aad
rcl
mov
xchg
int
imul
dec
mov
out
lahf
fucomi
pop
cmp
push
shr
aas
add
aad
test
shl
jp
mul
cmp
rcr
and
mov
push
cs
push
(bad)
(bad)
repz
pop
sti
pop
push
inc
mov
mov
lahf
mov
sub
mov
iret
out
push
push
or
push
les
fisubr
mov
in
jmp
in
jbe
scas
sar
jmp
push
lods
mov
sub
and
push
in
stc
mov
push
xchg
push
or
add
movs
mov
ins
rcl
lods
popa
pusha
gs
daa
jecxz
nop
popf
mov
push
movs
call
cmp
and
out
fsub
test
dec
in
adc
jge
loop
sbb
inc
xor
xor
rol
ins
adc
lock
lods
or
into
shl
ret
sar
test
aad
and
push
sub
repnz
and
cmc
rcr
or
(bad)
scas
push
lds
dec
mov
inc
test
test
test
push
and
cwde
dec
ds
push
mov
test
mov
sbb
xchg
dec
rcl
js
and
pop
mov
jmp
ror
mov
mov
mov
arpl
cdq
(bad)
dec
pop
cs
(bad)
pop
pop
and
jno
ins
jl
xchg
cld
test
dec
loope
dec
lea
stos
fild
xor
cmp
test
mov
mov
adc
sar
mul
gs
cli
xor
into
mov
addr16
jp
adc
dec
mov
jb
sti
aas
push
jge
or
jno
in
mov
push
cmp
loope
aam
xor
std
jnp
mov
dec
rcl
(bad)
cld
not
mov
pop
inc
cmp
and
lods
outs
(bad)
sbb
and
in
jp
jecxz
movs
sbb
jne
gs
push
daa
mov
push
(bad)
dec
pop
mov
aaa
adc
xor
call
push
jecxz
je
mov
(bad)
jmp
test
fmul
cmp
cmp
scas
and
dec
popf
jne
cmp
nop
adc
mov
sub
sub
loope
dec
dec
lock
adc
push
jle
fisub
cmp
fidiv
and
cmp
adc
push
hlt
adc
sbb
and
pushf
in
and
xor
push
or
(bad)
movs
push
outs
push
fld
in
xor
adc
xchg
and
test
cmps
mov
shl
mov
call
iret
dec
out
mov
xchg
ins
les
movs
fcomp
enter
into
or
test
in
push
arpl
cdq
add
les
jmp
adc
push
sti
xor
bound
js
dec
or
jp
test
mov
jns
cmps
in
mov
xchg
(bad)
int
outs
push
jmp
lahf
adc
mov
xchg
add
pop
and
jmp
or
and
mov
lock
jmp
or
sbb
leave
(bad)
call
push
push
shl
mov
jl
mov
dec
(bad)
lods
dec
jp
(bad)
clc
mov
inc
sbb
mul
sub
sahf
mov
and
aad
adc
sub
sub
xchg
fnstsw
lds
popf
in
leave
inc
jge
add
mov
or
(bad)
je
rcr
adc
cwde
in
cld
mov
xchg
mov
scas
fs
push
xchg
enter
cmp
in
cs
pushf
call
imul
jmp
push
int
retf
lods
(bad)
ss
and
mov
or
lea
xor
(bad)
popa
jle
std
jecxz
outs
fldcw
or
sbb
outs
xchg
dec
sub
xchg
and
mov
adc
xchg
jl
or
(bad)
pop
movs
not
sbb
mov
cmps
lock
das
std
fist
neg
movs
sub
out
adc
xchg
mov
imul
adc
icebp
repz
mov
mov
out
sar
mov
add
and
pusha
xor
xlat
xlat
fs
arpl
(bad)
add
test
pop
pushf
push
jge
xor
xlat
inc
loop
mov
(bad)
(bad)
repz
arpl
aas
mov
iret
sbb
out
mov
lock
cmp
enter
mov
adc
int
cld
in
out
jb
cmp
cmp
xor
mov
push
cmp
test
push
pop
rol
rol
stos
mov
scas
aad
jmp
out
xor
push
int3
stc
int
clc
inc
dec
push
and
push
jo
cli
pop
scas
xchg
sbb
icebp
mov
je
into
and
fwait
into
pop
fsub
jns
jne
lods
xor
(bad)
sbb
mov
iret
pop
pushf
ror
into
fs
jno
pop
sub
pop
scas
xchg
in
repnz
adc
sbb
push
jle
mov
mov
mov
aad
push
push
xchg
mov
jmp
es
data16
dec
add
inc
jecxz
call
sbb
and
sbb
sub
and
sub
rcr
nop
mov
cmp
jp
xchg
fbstp
adc
mov
jmp
jle
cli
mov
test
les
pushf
push
loope
das
in
mov
xor
xor
aad
mov
std
mov
scas
loop
inc
mov
mov
adc
dec
mov
xlat
mov
xchg
mov
jne
mov
xor
cmp
jmp
imul
iret
pushf
xchg
gs
sbb
mov
jge
cmp
mul
je
(bad)
outs
cmp
mov
adc
and
xor
cmp
popa
arpl
(bad)
dec
push
scas
call
(bad)
push
call
jmp
(bad)
cmps
cs
mov
mov
enter
jne
dec
loopne
add
enter
inc
ret
shl
pop
call
mov
sub
jno
pop
jp
icebp
jp
add
movs
lock
adc
dec
bound
(bad)
cmp
cmps
jg
push
jno
retf
xchg
or
lea
mov
je
push
mov
and
into
test
fnstcw
pop
xchg
les
xchg
mov
(bad)
add
push
jl
outs
dec
dec
js
les
mov
add
out
daa
add
xchg
sbb
shr
jmp
mov
js
adc
dec
pop
ja
retf
sub
ror
xor
jge
out
or
rol
pushf
add
jg
cdq
test
ror
test
movs
inc
and
ja
xlat
inc
(bad)
int
das
mov
les
or
mov
sub
pop
pushf
mov
xor
sahf
sub
push
add
xchg
cmc
mov
lahf
pop
ins
jmp
jp
push
xchg
(bad)
dec
clc
out
repz
daa
mov
in
inc
test
movs
js
enter
pop
mov
inc
mov
xchg
into
mul
or
and
out
and
inc
shl
and
test
cmp
push
sbb
into
mov
jae
mov
sub
inc
jmp
mov
(bad)
pop
xor
and
inc
dec
rep
xor
or
outs
or
pop
add
and
and
stc
ins
add
push
cmp
shl
scas
aad
sub
fisub
or
or
repz
je
mov
call
sub
clc
pop
in
mov
imul
adc
test
ins
xchg
adc
(bad)
cmp
mov
jmp
repz
adc
fldcw
adc
inc
push
jp
imul
pop
pop
repz
pop
out
xor
sub
dec
mov
pop
imul
cld
sti
icebp
in
adc
add
mov
lea
push
leave
mov
cdq
fadd
mov
dec
pop
cdq
sub
mov
lahf
add
cmps
into
arpl
xchg
push
xchg
and
(bad)
in
pop
cmp
(bad)
jo
mov
je
mov
jnp
shl
inc
add
xchg
enter
das
jno
retf
movs
sti
jecxz
pop
test
jg
sbb
push
jb
jg
sbb
xor
and
mov
nop
adc
jge
jmp
inc
xlat
lods
sub
mov
add
add
retf
jnp
cmc
not
lds
int3
inc
sub
adc
arpl
ja
fs
jle
push
fisttp
adc
icebp
mov
cmc
clc
cmp
mov
sbb
imul
shr
pop
ss
out
fldenv
pop
xchg
ds
loopne
lea
pop
in
adc
pop
iret
call
dec
shl
lods
dec
push
daa
cmp
xchg
stos
scas
jns
inc
test
popa
in
dec
(bad)
fisub
fs
xor
jmp
fstp
aaa
nop
(bad)
call
add
sub
mov
and
push
xor
sahf
mov
inc
cmp
sub
out
pop
adc
jle
dec
push
rol
shl
mov
arpl
jb
xor
fimul
add
sti
jg
sahf
icebp
imul
pop
add
push
sub
in
push
lock
shr
adc
div
sub
in
movs
fistp
jno
cmp
or
push
push
cs
aas
sbb
sub
add
imul
jnp
or
icebp
pop
(bad)
xor
xor
mov
fwait
xor
(bad)
lods
mov
loop
aad
int
jns
mov
add
out
fidiv
jne
mov
and
xor
push
add
mov
fsub
cdq
sti
jmp
dec
fdivr
outs
sub
mov
mov
ins
sbb
stos
fnstcw
jmp
(bad)
movs
mov
mov
(bad)
lahf
and
adc
xor
mov
(bad)
jno
(bad)
sub
sbb
pushf
clc
pop
dec
cwde
std
jmp
(bad)
int
mov
pushf
adc
(bad)
xchg
std
push
loope
(bad)
and
or
adc
(bad)
in
out
jmp
mov
imul
lahf
in
fimul
call
test
in
loope
xchg
sub
push
je
dec
test
cs
sti
add
shl
inc
add
push
shr
daa
(bad)
and
cmps
push
stos
inc
sbb
dec
push
xor
fisubr
and
push
aam
retf
jmp
pop
sub
add
mov
cmc
pop
cwde
rol
or
pop
pop
ret
in
xchg
add
je
mov
jne
sub
ins
add
dec
sub
enter
mov
xor
cmp
mov
cmp
and
dec
test
xchg
clc
and
call
mov
mov
add
add
aad
or
jne
xchg
scas
cmp
lods
les
xchg
sub
loopne
push
and
cmc
das
mov
lock
scas
or
test
lock
cmp
cmc
dec
(bad)
mov
in
pop
out
ja
stos
jp
xchg
mov
nop
(bad)
loopne
dec
cmps
jnp
rcl
nop
cmp
into
jnp
jbe
popf
cld
fnstcw
repnz
sub
mov
(bad)
mov
jae
jb
repz
add
cmp
dec
in
outs
inc
or
mov
cmp
fsub
lock
adc
loope
pusha
pop
pusha
jnp
inc
sub
mov
pushf
push
setg
es
dec
mov
xchg
push
push
pop
inc
xchg
lods
xchg
mov
or
pop
inc
jge
fadd
mov
dec
test
aas
cmp
js
(bad)
xchg
add
or
and
(bad)
pop
(bad)
imul
outs
jns
pop
hlt
inc
sub
push
out
and
hlt
mov
jmp
mov
retf
jno
in
mov
lods
xchg
call
push
push
cmps
test
xchg
aam
push
cmp
pop
jo
mov
jb
push
popa
fsubr
and
dec
mov
sbb
pop
in
mov
push
aas
push
iret
fcmovnu
push
mov
add
xchg
and
mov
mov
aad
std
popa
add
paddq
mov
jmp
call
fadd
bound
ror
xchg
mov
xor
addr16
and
push
(bad)
mov
and
jae
out
sqrtps
sbb
mov
cld
shl
mov
ins
jno
pop
mov
mov
mov
jne
jl
or
push
jmp
inc
ret
mov
xchg
sbb
add
inc
cld
aaa
test
les
(bad)
movs
add
jmp
sbb
dec
popf
popf
pop
dec
dec
mov
enter
xchg
jge
inc
jae
retf
add
aam
jecxz
icebp
(bad)
adc
pop
add
dec
mov
mov
or
leave
lods
int
xchg
mov
enter
cmp
mul
and
inc
movs
enter
(bad)
xor
inc
div
mov
std
sbb
sbb
dec
cmp
aam
push
jl
mov
ffree
adc
out
ins
imul
cmp
fistp
retf
mov
xor
cmp
retf
(bad)
iret
jno
retf
sbb
imul
xchg
push
out
push
mov
daa
mov
popf
and
xchg
test
xor
jae
cdq
push
xchg
pop
sbb
pavgb
adc
add
mov
mov
jnp
cmp
adc
jo
push
push
and
cmps
scas
jns
aaa
inc
stos
int
lods
loope
cmp
sub
push
movs
lods
outs
mov
dec
mov
mov
ror
push
cmp
dec
out
or
sub
or
test
add
jb
es
cmp
cmp
(bad)
cmp
or
repz
ss
xor
dec
jmp
push
jmp
dec
mov
mov
add
sbb
cmps
jp
mov
xchg
cmps
loope
xor
ja
in
stos
sub
or
pop
stc
out
push
jp
and
dec
pusha
(bad)
stos
loope
mov
pop
pop
call
mov
jne
jp
mov
push
jae
retf
pusha
fidiv
or
jle
in
and
pop
ins
imul
xchg
mov
test
or
and
sub
ror
sbb
ins
mov
xchg
xor
jno
cmc
or
mov
test
add
sbb
movs
jle
sbb
and
dec
fst
cmps
mov
or
mov
inc
enter
and
sub
xlat
sbb
test
and
mov
addr16
sub
mov
cs
xor
xor
stc
loop
rol
inc
sbb
out
mov
pop
jb
xchg
pop
int
aad
test
loopne
js
ja
jge
shl
fistp
out
and
shl
pop
adc
or
outs
sbb
xor
fsub
pop
cli
xchg
jbe
fsub
cmps
nop
mov
sub
mov
mov
cmp
mov
mov
(bad)
in
mov
and
leave
cmp
fcom
gs
adc
popa
call
retf
mov
imul
jmp
sub
cmp
adc
jmp
mov
js
cmp
mov
sbb
mov
lea
push
idiv
xchg
rcl
xchg
jo
sbb
aas
or
test
out
les
repz
out
daa
lahf
xchg
mov
mov
pushf
mov
pop
les
in
cs
imul
(bad)
data16
int
mov
(bad)
fs
xor
call
mov
mov
push
mov
push
mov
in
mov
mov
cmp
lock
dec
push
stc
adc
popa
aad
jge
ret
mov
mov
daa
hlt
xor
inc
mov
(bad)
xchg
in
or
(bad)
imul
popf
or
arpl
sbb
add
js
push
jno
out
retf
add
cmps
rcl
clc
jge
mov
push
in
add
hlt
outs
mov
jbe
cmp
mov
outs
fstp
(bad)
mov
movs
and
ficomp
adc
fwait
dec
mov
idiv
repnz
mov
cmp
(bad)
jl
sub
out
jmp
and
(bad)
fimul
lock
shr
cmp
mov
fisubr
adc
cmp
adc
in
dec
cwde
jp
fstp
aaa
adc
fadd
pushf
xchg
and
push
or
pusha
mov
inc
xchg
mov
aas
inc
mov
push
cmp
test
movs
xchg
pop
imul
stos
loop
test
in
js
js
stos
xor
movs
and
das
add
test
(bad)
pop
nop
in
pop
and
fmul
add
or
mov
push
lds
push
pop
push
cmp
sub
fld
mov
adc
adc
add
pop
arpl
addr16
mov
pop
loop
in
mov
je
aam
(bad)
nop
inc
pop
or
test
dec
lods
mov
daa
xchg
test
fbld
(bad)
mov
sub
rcl
aaa
and
pop
xchg
xchg
pop
clc
push
stos
(bad)
dec
dec
or
pop
in
imul
cmp
loop
jle
inc
mov
(bad)
and
inc
in
inc
mov
repnz
ins
jnp
inc
repnz
inc
or
(bad)
fistp
pop
add
bound
cwde
loopne
stc
xchg
and
pop
inc
rol
ins
mov
cmp
hlt
lea
sub
and
and
in
push
icebp
mov
gs
dec
std
sub
push
inc
mov
xchg
shr
call
adc
mov
retf
pop
aas
loop
mov
call
out
clc
cdq
xchg
push
sub
xchg
loop
lods
push
push
or
push
enter
arpl
dec
pop
in
mov
stos
stos
or
jno
inc
xchg
sub
cmp
xlat
mov
fmul
mov
loop
adc
pop
jne
ss
arpl
mov
sbb
or
jmp
dec
hlt
adc
data16
mov
shl
loop
push
test
pop
jg
mov
jno
fcom
dec
dec
cmp
or
xchg
xchg
dec
push
vmwrite
enter
fcmovnbe
dec
or
push
cmps
inc
ret
sbb
add
sub
pop
mov
into
or
mov
push
jnp
adc
or
div
cli
aam
imul
call
cmps
das
push
mov
ins
mov
cmp
sti
jmp
and
push
sbb
bound
mov
sbb
scas
inc
inc
jne
aad
dec
mov
xchg
clc
inc
xor
or
jle
inc
ja
cmp
mov
or
inc
dec
aas
gs
push
lock
xor
lds
fsubr
sub
xchg
and
shl
sti
pop
adc
or
xchg
pop
scas
jle
sub
stos
xchg
cli
pop
sbb
mov
mov
dec
sub
pop
push
mov
shr
jmp
jbe
mov
pop
das
(bad)
aaa
fisttp
popa
add
mov
inc
stos
mov
or
push
adc
into
mov
ins
jle
or
mov
mov
inc
cmp
fdiv
jne
sahf
addr16
cmp
sti
les
add
fstp
xor
fcomp
ja
cmp
pop
mov
pop
(bad)
or
repz
xlat
(bad)
(bad)
xchg
(bad)
mov
add
cmp
sbb
inc
jbe
cmp
sbb
dec
(bad)
sbb
scas
std
add
rcr
xlat
or
data16
pop
sahf
fnstsw
fs
out
call
jmp
jp
mov
xchg
fdivr
mov
mov
inc
call
pop
mov
pop
cmc
fs
in
outs
int
and
enter
out
jg
ds
mov
adc
addr16
cli
jae
test
push
xchg
xchg
pop
popa
sbb
shl
xor
jnp
dec
ins
dec
(bad)
out
mov
in
fist
(bad)
mov
dec
addr16
push
jecxz
cmp
jge
ja
xchg
sub
mov
mov
cmc
jnp
jmp
adc
into
fdiv
mov
pop
retf
js
cdq
dec
mov
ror
mov
sub
(bad)
mov
std
pop
push
pop
mov
inc
leave
cld
cli
stc
inc
cwde
jb
jle
pop
aas
sbb
test
fs
sub
loop
icebp
lods
aam
jge
in
pop
cmp
add
sbb
dec
mov
retf
cmp
mov
mov
sbb
or
inc
and
cmp
int3
lods
sahf
das
shl
xlat
or
mov
mov
xchg
test
jl
addr16
dec
push
jmp
cmc
push
jnp
sbb
into
shl
test
sbb
int
jbe
pop
mov
icebp
or
loopne
mov
inc
pop
scas
mov
retf
call
pusha
call
mov
mov
mov
push
sub
push
pop
(bad)
aam
dec
sbb
add
and
mov
pop
mov
das
inc
mov
aam
pop
push
jb
and
pop
mov
sar
enter
fdiv
jne
stos
xchg
and
xor
aaa
pop
scas
and
and
push
popf
loopne
rep
(bad)
mov
sub
(bad)
js
pop
fisttp
imul
mov
out
mov
mov
shr
leave
jae
xchg
mov
dec
das
mov
ret
mov
rcr
and
dec
ret
in
scas
xor
test
ret
int
es
mov
jl
mov
jge
lods
ja
jp
int
add
mov
and
push
aad
les
or
dec
dec
test
(bad)
imul
mov
sti
out
cmp
in
loopne
push
adc
rol
sub
stos
xchg
mov
mov
(bad)
loop
or
sbb
test
sahf
loop
mov
ror
sbb
jnp
sub
(bad)
fldenv
fnsave
mov
sahf
mov
inc
fcmovbe
jp
cmp
cmp
popa
fdiv
imul
outs
les
or
inc
mov
ss
lock
sbb
in
or
jnp
xcrypt-ecb
cmps
or
test
aas
stos
xchg
mov
pop
popf
xchg
jne
imul
into
push
pop
out
clc
mov
imul
dec
add
sub
inc
and
ins
ins
sub
inc
test
outs
push
retf
fsubr
inc
scas
out
lea
repnz
retf
cmc
push
retf
lds
ins
pop
int3
pusha
lock
mov
sub
cdq
or
xchg
stos
in
call
sbb
fwait
pop
cmp
pop
fiadd
pop
cli
dec
xchg
or
dec
shr
bound
in
mov
mul
out
nop
adc
in
fcom
stc
add
pop
stc
xchg
ss
popf
add
cmp
das
xlat
inc
pop
jge
popf
mov
nop
std
mov
repz
and
or
push
mov
js
(bad)
ins
lock
ret
(bad)
pop
aad
adc
adc
xchg
xchg
push
mov
call
inc
ds
scas
sar
push
jne
bound
repz
retf
inc
stos
scas
cmps
scas
rcl
in
les
mov
mov
test
psrld
sahf
sbb
xor
push
sub
jno
inc
cdq
loope
sbb
stc
xchg
or
sub
push
cdq
ds
dec
ss
(bad)
and
and
cmp
les
push
inc
add
ss
dec
jl
mov
daa
or
push
jnp
in
mov
cli
xor
mov
out
push
retf
jmp
fmul
and
mov
sub
ds
popa
push
sub
popf
push
xchg
mov
leave
sbb
cwde
mov
jns
in
and
(bad)
shr
popf
lods
jbe
rol
push
xor
shl
pop
push
cmp
in
and
pop
adc
and
or
cmp
call
sub
xor
pop
pop
in
sar
cld
sti
or
dec
repz
into
out
add
es
gs
mov
cli
test
push
jne
cmp
icebp
cs
cmp
(bad)
pop
loop
xchg
sbb
popa
aas
xlat
ficomp
jp
or
sti
out
(bad)
xor
fistp
call
shl
sub
popa
jp
jmp
enter
dec
(bad)
jl
or
repnz
sub
popf
cmp
xor
push
lods
xor
aaa
and
or
in
mov
ret
xor
sar
sub
loop
add
xchg
imul
leave
aas
and
hlt
push
les
xchg
out
jmp
int3
inc
cmovle
and
call
and
dec
movs
dec
xlat
ja
movs
pop
ds
mov
lahf
bnd
arpl
push
xor
sar
jmp
shl
movs
(bad)
out
jp
pop
js
xchg
rcl
jle
push
call
pushf
dec
rcr
jmp
fldcw
dec
std
(bad)
mov
out
setae
inc
jecxz
sub
xor
mov
call
xchg
jbe
retf
add
in
inc
add
jl
cld
jl
sub
pop
sti
mov
xor
mov
add
and
fwait
jne
mov
pop
lds
push
xchg
data16
gs
jns
rcr
in
scas
push
or
xchg
or
std
xchg
xchg
leave
mov
loop
not
clc
jle
and
jle
jne
nop
in
js
loope
sbb
adc
in
jg
or
leave
and
jl
adc
stos
or
mov
movs
mov
adc
and
ficom
jb
push
sbb
fadd
dec
push
leave
mov
jl
xor
mov
cli
lods
pop
fist
fldenv
jecxz
inc
hlt
cmp
call
mov
sahf
cwde
push
icebp
arpl
push
pop
pushf
add
mov
mov
repnz
(bad)
jae
push
cmp
or
or
setae
cli
outs
cmp
test
imul
std
lods
sub
pop
mov
cmc
jp
out
inc
(bad)
or
lock
mov
enter
stos
popa
jmp
cs
pop
add
xor
adc
int
mov
sbb
retf
aas
cwd
cmps
jmp
add
movs
sub
out
add
je
and
pop
mov
(bad)
into
(bad)
(bad)
mov
push
mov
out
jp
dec
test
pop
xor
shl
cmp
jo
push
jp
cmp
gs
stos
mov
dec
mov
ror
dec
or
(bad)
xor
stos
xchg
sub
pmulhw
dec
push
cwde
inc
xchg
push
sahf
lea
and
adc
daa
int
cmp
lods
ficom
pop
adc
in
(bad)
push
or
or
dec
(bad)
mov
out
out
add
mov
(bad)
mov
pop
stos
retf
xor
mov
sub
mov
cmp
imul
mov
xchg
fbld
xor
fidiv
dec
sahf
ja
xchg
test
mov
sti
mov
or
bswap
sub
or
or
and
dec
mov
mov
dec
push
jbe
mov
int3
outs
dec
retf
mov
add
adc
stos
sbb
lock
mov
mov
push
or
scas
iret
lods
push
rcr
inc
xor
dec
ret
call
lods
cli
cmp
mov
and
mov
call
xor
mov
or
add
loop
mov
add
dec
shr
mov
mov
ds
jmp
sbb
inc
(bad)
pop
movs
int3
cmp
dec
(bad)
ss
lahf
xchg
xor
lea
ins
fwait
loope
push
xchg
mov
test
mov
das
add
movs
clc
mov
pop
sub
(bad)
push
rcl
or
adc
iret
pop
pop
cmc
xchg
leave
sar
mov
sub
adc
inc
mov
clc
adc
ja
outs
enter
inc
scas
retf
popf
stc
retf
dec
ss
adc
sti
mov
pop
jge
jb
dec
xor
push
mov
pop
loopne
sbb
jns
ins
mov
je
loope
mov
push
xchg
int3
into
xor
and
pusha
dec
imul
mov
mov
adc
(bad)
or
inc
out
adc
fisubr
and
push
adc
nop
cmp
xchg
mov
dec
call
bound
test
cli
inc
xor
in
sti
scas
stos
xchg
or
mov
dec
std
push
xchg
cdq
out
inc
fstp
sbb
xlat
mov
mov
mov
add
fcmovnb
cmp
and
add
lahf
jg
mov
xor
jns
into
push
lock
dec
mov
sub
ss
movs
inc
jb
inc
adc
fnstsw
pop
js
lahf
or
mov
retf
and
pop
cmp
sbb
loop
xchg
sti
clc
xchg
inc
int3
in
mov
xchg
sbb
jb
pop
xchg
cdq
lahf
cmp
jb
fadd
bound
jp
ja
sbb
mov
aam
iret
ret
mov
stc
jmp
lods
inc
jo
sbb
xchg
cmps
jae
bt
(bad)
out
dec
sub
daa
jb
fsubr
dec
(bad)
std
dec
das
pop
xchg
adc
popf
ret
aaa
jp
int3
add
js
adc
stos
leave
jae
xchg
xchg
and
inc
xchg
call
sbb
jg
into
outs
xchg
aad
mov
adc
icebp
adc
mov
xchg
fidiv
inc
ret
cs
add
sbb
imul
fild
enter
cmp
xchg
cli
lods
or
and
loop
mov
outs
fnstenv
inc
adc
rcr
push
add
fsubr
fstp
(bad)
adc
loopne
pop
inc
lea
shl
test
in
(bad)
push
pop
pop
in
cmp
fistp
sub
dec
mov
sub
pop
(bad)
jp
leave
ins
inc
inc
in
cmp
(bad)
fstp
mov
(bad)
aad
sub
data16
cmp
daa
mov
jne
rcr
in
icebp
and
mov
pop
push
add
pop
cmp
stos
sub
jbe
inc
push
stos
pop
int
shl
push
push
test
add
test
shr
jno
and
mov
das
push
jno
mov
stc
xchg
xchg
icebp
adc
and
add
lods
jae
mov
inc
pop
outs
jmp
sub
lea
pop
push
ss
add
mov
mov
dec
les
test
and
xlat
pop
xor
aad
jae
nop
aas
int3
pop
out
mov
dec
xchg
pop
jno
xor
gs
pop
leave
stos
out
std
adc
jnp
and
xor
(bad)
mov
daa
fbstp
xor
inc
and
ins
dec
js
mov
std
push
arpl
retf
scas
dec
xchg
inc
or
push
add
scas
mov
sar
adc
jmp
sahf
mov
fwait
xor
xchg
ret
cld
cmp
adc
mov
retf
fcmovne
sahf
dec
mov
loope
repnz
cli
(bad)
fnstsw
mov
and
adc
fcomp
out
sahf
add
fidivr
lods
mov
inc
mov
push
mov
adc
imul
cli
outs
adc
mov
mov
loop
in
sub
dec
jg
sbb
lods
(bad)
movs
or
jmp
ja
data16
bound
ret
lods
inc
outs
mov
mov
hlt
aas
xor
xchg
dec
ret
test
pop
xchg
das
addr16
adc
cmp
mov
fstp
movs
stc
inc
fmul
movs
inc
and
xchg
mov
push
dec
out
inc
mov
xlat
xchg
fldcw
rol
or
sbb
mov
add
out
cs
adc
sub
mov
psubusb
inc
sbb
mov
jge
int3
sbb
pushf
lods
dec
out
jns
mov
stos
out
mov
push
mov
cmp
sbb
mov
push
xchg
ror
and
and
or
pop
adc
pop
mov
mov
test
inc
sub
sbb
push
add
add
sar
movs
leave
ja
jne
push
sub
iret
pop
sbb
and
or
mov
mov
sbb
push
and
bswap
jge
ja
test
dec
jns
push
movs
out
(bad)
inc
mov
js
push
aad
in
xor
retf
jns
test
stos
pushf
cmp
sbb
or
outs
sbb
not
inc
mov
mov
push
movs
mov
sbb
jnp
dec
mov
jns
or
loop
jbe
clc
popf
or
adc
xchg
retf
add
push
loopne
mov
jb
cdq
loopne
pop
inc
mov
pop
mov
xchg
sub
adc
sbb
cdq
jge
xor
cmps
pop
lock
fcomi
pop
add
popa
fcmovnu
inc
icebp
or
push
sbb
retf
push
lods
mov
idiv
sub
pusha
mov
add
fs
push
loopne
add
fst
inc
cmp
adc
aaa
push
xor
(bad)
icebp
xor
pop
or
pop
(bad)
mov
lock
ret
or
or
sbb
shl
fiadd
mov
push
cmp
stos
sub
xlat
cmp
dec
aaa
or
call
aas
cmc
(bad)
stos
xor
pop
sub
push
sub
jb
push
std
les
aas
test
xchg
scas
ror
cli
lahf
pop
int3
fisttp
outs
mov
repnz
sbb
idiv
pop
push
fxtract
ret
lods
mov
and
cmp
sub
cmp
push
xor
push
les
loope
mov
jl
or
jo
dec
or
lock
mov
xor
iret
jecxz
cmps
pushw
mov
sahf
in
pop
and
xchg
fisubr
dec
movs
es
pop
cli
mov
fcom
adc
imul
mov
jns
adc
repz
jle
or
xor
and
repnz
fistp
lock
xchg
outs
mov
(bad)
rcl
and
or
sub
out
sbb
out
pop
and
lea
loop
scas
mov
mov
cmps
mov
pop
inc
adc
jns
cmp
dec
shl
or
pushf
mov
xchg
sub
pop
mov
ja
sahf
sbb
mov
in
sub
sub
fisttp
je
scas
pop
xchg
in
mov
mov
int
popf
out
dec
mov
inc
sahf
push
pop
inc
outs
cmp
adc
sub
imul
dec
enter
out
mov
sub
mov
sub
xor
or
pop
call
inc
stc
jns
xchg
fild
pop
lock
xchg
loopne
mov
sub
ja
into
into
jmp
xor
jg
or
fdivr
es
push
mov
xchg
jmp
push
lods
ret
cmc
and
push
mov
push
push
out
jo
aam
(bad)
out
mov
mul
xchg
mov
inc
or
rol
cli
pop
xor
sub
imul
cmps
pop
aam
dec
cs
scas
les
xor
(bad)
cmc
or
xor
lods
(bad)
shl
xor
mov
stos
movs
mov
sbb
enter
int
sbb
mov
pop
xchg
bound
and
(bad)
iret
rol
pop
int3
push
pop
and
mov
xchg
neg
xor
mov
inc
out
ss
mov
push
arpl
lds
pop
jle
jl
push
cmp
icebp
in
adc
imul
sub
push
ja
mov
sub
mov
inc
xchg
movs
addr16
dec
mov
rol
aas
dec
fidivr
fbstp
lea
enter
mov
push
ins
add
iret
movs
inc
div
js
or
out
(bad)
cmp
add
not
add
das
cmc
ficomp
push
and
mov
imul
scas
cmp
into
repnz
loope
jecxz
mov
(bad)
les
data16
sbb
jno
lea
xor
enter
aad
mov
ror
adc
pop
or
arpl
in
loopne
push
pusha
sub
mov
pop
stos
mov
fldcw
xor
fcom
aam
outs
mov
inc
mov
data16
loopne
dec
retf
in
test
jmp
bound
loop
in
jns
ja
sub
fisub
fwait
add
or
sub
aad
icebp
pusha
mov
jp
shl
pop
or
pop
dec
ss
ret
sub
fdiv
or
cmps
ret
lahf
stos
out
sub
(bad)
mov
pop
addr16
jmp
adc
xchg
(bad)
pushf
repnz
mov
or
in
add
(bad)
xchg
cld
inc
mov
push
and
cmp
inc
pushf
jle
mov
pop
jle
arpl
movs
mov
xchg
leave
les
adc
xor
sbb
and
(bad)
jecxz
push
adc
dec
popf
adc
mov
imul
(bad)
cmp
outs
push
retf
into
stc
push
enter
dec
fisttp
or
and
mov
adc
or
push
mov
je
repnz
in
and
xchg
scas
retf
ja
or
out
lods
aam
call
stos
sahf
mov
sbb
push
sub
xchg
push
push
imul
jb
test
lahf
push
bound
sub
fmul
(bad)
jg
push
add
std
inc
or
xchg
(bad)
int3
scas
stos
lods
cdq
xchg
jne
pop
xchg
sub
adc
shl
xlat
retf
imul
ror
les
add
mov
mov
adc
and
sub
sbb
jne
test
or
xor
mov
retf
shl
int
add
data16
mov
mov
out
daa
stc
cmp
(bad)
repnz
pop
aaa
xor
xor
dec
fcmovnb
fistp
out
nop
retf
xchg
add
loope
fs
in
push
cmp
fld
cmps
ss
cmps
out
rol
vmwrite
or
mov
(bad)
test
ficomp
mov
fs
cwde
pusha
jle
jnp
in
in
xchg
cs
movs
jp
test
scas
add
test
scas
jle
cld
xchg
pop
inc
xor
add
push
retf
dec
imul
inc
jle
cmp
adc
addr16
jmp
call
push
pop
dec
xor
mov
pushf
jb
sub
sti
ret
xor
xchg
fistp
jbe
add
xor
jo
mov
sbb
cmps
addr16
loopne
cli
adc
xchg
mul
jmp
add
mov
aaa
push
jmp
lods
mov
cli
mov
rcr
pop
sub
mov
sbb
sbb
scas
sub
push
or
ds
(bad)
dec
pushf
cmp
or
jbe
xor
pushf
sti
inc
stos
push
sub
jmp
fdivp
xor
xchg
mov
adc
and
mov
das
sbb
out
les
call
div
stc
push
xor
out
(bad)
sub
mov
inc
popf
mov
jbe
jmp
mov
sti
mov
(bad)
js
push
xor
or
cld
call
in
movs
or
fst
clc
and
push
xchg
adc
test
jle
fstp
push
push
addr16
rcr
stos
inc
rcl
push
or
push
pop
fisub
xchg
in
popf
xchg
jno
xor
shl
mov
std
dec
lods
sbb
repnz
ins
lea
sbb
bound
push
pop
mov
pop
das
xchg
out
jnp
dec
inc
out
in
add
aam
into
mov
push
sub
cdq
xor
stc
xchg
out
int3
mov
movs
adc
mov
call
pop
fdiv
pusha
cmp
mov
or
xor
in
xor
enter
push
adc
sub
iret
cmp
or
or
dec
pop
es
push
fld
xchg
cmp
stos
repnz
dec
inc
add
popa
enter
jg
cmps
mov
mov
sar
aad
mov
pop
sbb
iret
fidiv
out
(bad)
sbb
add
or
or
add
cdq
(bad)
ds
push
jle
push
add
int3
(bad)
scas
es
dec
mov
scas
ret
push
daa
xchg
shr
cmp
fidiv
xchg
mov
cmp
add
xor
xchg
leave
das
test
and
mov
sbb
cmp
pop
cmp
lods
ret
pop
popf
addr16
mov
ins
cmp
aam
sub
sub
add
sbb
mov
cmp
lds
scas
push
test
cmp
jae
push
pop
sub
mov
cmp
jge
stos
adc
push
or
aad
inc
out
loop
shr
fsub
mov
stos
pop
mov
xor
in
imul
sbb
call
adc
inc
leave
jle
(bad)
shl
das
cmp
gs
mov
sub
mov
daa
retf
iret
lahf
add
jle
cmp
xchg
cdq
dec
adc
cmp
sub
inc
in
(bad)
clc
jae
push
jnp
push
push
mov
sbb
xor
inc
push
sub
ror
aad
cli
xchg
mov
mov
shl
ja
sub
(bad)
call
es
mov
repnz
adc
pop
cmp
jmp
lods
test
inc
inc
in
aaa
out
fucomip
jmp
jge
pop
mov
xor
pop
jmp
or
mov
jp
xchg
mov
fwait
and
sahf
xchg
pop
and
fstp
push
adc
xor
enter
fst
js
xchg
jmp
cwde
out
inc
sbb
mov
loop
shl
bswap
pusha
dec
enter
loop
sub
and
call
not
arpl
and
push
sub
and
outs
in
jl
loop
out
jmp
in
dec
lock
(bad)
fbld
mov
push
mov
mov
mov
in
mov
add
dec
dec
mov
sub
fimul
sbb
mov
stos
mov
cld
xchg
sti
gs
mov
imul
retf
in
dec
inc
call
addr16
mov
add
xor
imul
in
imul
jle
addr16
mov
rol
lods
push
push
pop
add
or
or
ins
and
xchg
push
hlt
cmp
lds
rcl
test
mov
adc
or
cmp
mov
ficomp
aas
out
(bad)
(bad)
ffree
push
add
imul
and
rcr
int
jno
cmp
pop
sub
mov
enter
jmp
xor
ror
mov
add
outs
xchg
pusha
mov
mov
inc
and
dec
clc
loope
out
xlat
jle
ror
xchg
sub
daa
adc
cmps
(bad)
jge
clc
int3
js
and
(bad)
popa
inc
mov
xchg
call
jns
mov
movs
call
sbb
cmp
enter
push
enter
mov
adc
push
sbb
mov
out
and
nop
and
(bad)
sbb
jae
scas
inc
jne
jp
mov
push
add
dec
stos
sbb
cmc
lock
mov
loope
test
cmps
clc
imul
adc
jg
xor
lods
lea
pushf
xor
fstp
nop
lahf
dec
addr16
dec
xor
in
dec
loop
or
imul
jae
jne
and
pop
call
mov
xchg
aaa
fnstenv
push
retf
mov
fcom
gs
and
rol
xor
cmp
sahf
add
cld
(bad)
push
mov
bound
mov
and
test
jecxz
xchg
inc
cmp
mov
push
jl
or
cmps
dec
pop
in
push
pop
jbe
mov
loop
call
mov
mov
push
mov
cdq
mov
lods
pop
xchg
imul
sar
pop
dec
test
addr16
lea
aaa
icebp
xor
and
adc
push
ret
(bad)
push
unpcklps
std
test
inc
jge
dec
dec
cmp
cmp
jl
mov
js
cs
cmp
stos
out
shr
nop
cmp
or
test
xor
in
bnd
ins
xlat
stos
push
jb
out
stc
jns
xor
or
cli
in
lds
mov
adc
lahf
dec
mov
and
dec
mov
imul
pusha
out
arpl
mov
mov
mov
xlat
imul
add
sbb
add
xor
mov
shl
sub
adc
add
dec
pop
push
mov
add
mov
xor
cmp
in
xchg
cdq
hlt
dec
leave
test
xchg
sub
xor
ror
pop
mov
dec
lahf
out
mov
jmp
cmps
int3
and
ret
popw
mov
aad
or
sti
sti
mov
and
fisttp
ins
icebp
mov
cmp
cmp
add
add
push
sti
pop
jmp
pop
sar
outs
sub
cmp
jo
icebp
stos
sub
inc
or
(bad)
shr
int
add
mov
(bad)
pop
retf
inc
sbb
inc
imul
add
fs
cwde
aad
daa
(bad)
pusha
pop
adc
fadd
fwait
jmp
shl
add
call
repz
jl
rol
inc
sub
dec
cld
xlat
stc
sbb
(bad)
jbe
popf
sbb
mov
jnp
jno
aad
jg
xor
xor
ss
push
aad
shl
(bad)
push
jl
dec
mov
adc
xor
jno
mov
jmp
xor
sub
or
pop
(bad)
test
rol
int3
xlat
out
adc
ja
dec
test
ror
push
pop
xlat
mov
imul
(bad)
in
call
mov
cmc
inc
sbb
and
cdq
stos
mov
jo
test
mov
mov
mov
lods
cmps
mov
imul
mov
(bad)
xchg
jo
mov
jns
loopne
add
add
out
loope
mov
pop
gs
adc
jnp
ins
push
jne
mov
les
xchg
popf
daa
xchg
pop
and
repnz
add
ins
test
cmp
dec
cmp
in
movs
les
pop
rol
mov
pop
pop
push
mov
dec
fnsave
sahf
cmps
jmp
mov
(bad)
fiadd
xchg
inc
pop
mov
lock
jge
inc
pop
std
lods
jecxz
lods
xchg
cmp
push
test
inc
xchg
sub
xchg
dec
xchg
mov
add
sbb
pop
dec
leave
or
imul
sbb
sar
xor
fldenv
jae
add
and
into
lock
dec
(bad)
js
js
movs
imul
jle
icebp
inc
push
and
enter
sub
out
test
add
pop
fistp
hlt
xchg
jns
mov
mov
cmp
mov
adc
ffreep
mov
ja
dec
push
cmc
arpl
call
adc
xor
mov
sti
stc
aam
mov
out
enter
xchg
and
clc
pop
call
test
jae
sub
add
iret
ss
ror
bound
lea
ja
rol
jne
jecxz
movs
in
ds
mov
add
xor
and
cli
dec
jb
push
pusha
xchg
dec
ficom
xor
sbb
ins
add
and
xor
pop
ins
vcmppd
loope
jbe
mov
iret
pop
jbe
popf
pop
inc
jge
mov
mov
add
sbb
mov
(bad)
shl
mov
and
mov
xchg
mov
pop
(bad)
sbb
cs
dec
push
fs
xor
dec
jle
xor
stc
shl
mov
out
retf
std
cdq
lods
fisub
push
sub
pop
imul
cwde
(bad)
rcr
pushf
or
test
out
hlt
movs
int
adc
sub
fwait
or
out
mov
cmps
sar
dec
mov
dec
outs
push
xor
inc
xor
in
in
mov
lahf
std
push
jne
je
xchg
leave
test
fidiv
pushf
inc
inc
(bad)
xor
sub
stos
pop
xor
aas
add
mov
push
dec
aaa
adc
(bad)
mov
fbstp
test
sub
mov
ror
out
sub
xor
in
dec
das
stos
sub
aam
rcl
(bad)
int3
push
push
mov
jae
inc
cmp
pop
ret
jmp
xor
retf
mov
inc
jmp
adc
jmp
in
xor
dec
mov
call
pusha
inc
loopne
popa
cld
and
adc
mov
nop
iret
cmps
push
cdq
xchg
xlat
or
xchg
mov
cli
cmp
ins
fwait
mov
mov
movs
xchg
add
mov
rcl
cdq
xor
jbe
fld
rcr
dec
xor
stc
in
ja
adc
push
cwde
and
inc
aam
outs
rcr
add
into
and
xchg
adc
imul
push
sbb
lods
cs
mov
mov
iret
jae
dec
out
int
stc
and
js
ror
jmp
out
jge
inc
and
std
push
jmp
in
pop
jbe
push
push
pop
pop
hlt
push
test
aas
cli
mov
shr
jo
mov
retf
das
cmp
loop
sub
out
repz
ret
xor
outs
js
repz
cmps
add
push
and
mov
(bad)
scas
xchg
je
xor
out
jae
xor
cwde
xor
mov
sbb
xchg
jae
dec
ret
push
scas
xor
xor
(bad)
loop
mov
mov
or
shl
aaa
dec
out
or
imul
stos
push
popa
lods
sub
xchg
jmp
popa
clc
popf
mov
sbb
and
sub
enter
xchg
mov
or
popf
aam
mov
cs
cmp
enter
push
pop
jb
push
pop
imul
inc
sahf
lea
jnp
or
inc
xchg
aad
sbb
aam
pop
ret
lods
cdq
push
popf
aam
sbb
hlt
xchg
dec
pop
out
pop
fsub
jne
outs
in
in
arpl
iret
dec
pop
mov
das
es
mov
xor
xbegin
loope
imul
pop
lea
sub
xchg
push
movs
cmp
xchg
pushf
ja
mov
mov
loope
repz
pop
mov
jne
push
or
repnz
neg
cmp
inc
lods
lods
sub
test
lea
push
repz
xor
outs
inc
ret
dec
test
bswap
push
or
aad
scas
add
inc
call
dec
jp
jno
lea
jl
pop
jns
mov
mov
in
iret
mov
cmp
mov
and
call
xchg
jecxz
fs
mov
xchg
scas
cdq
push
mov
gs
js
xor
out
cmp
dec
sub
enter
xchg
sbb
cmc
xlat
or
repz
and
ret
call
push
hlt
add
jge
iret
push
rol
daa
ret
iret
push
xor
out
ss
push
mov
xlat
cli
mov
pop
add
xchg
xlat
les
sbb
push
dec
sahf
xchg
in
and
bound
adc
or
movs
adc
cld
sbb
popa
out
add
xor
popa
mov
and
fst
push
cmp
mov
dec
mov
sub
repnz
mov
xchg
cdq
sbb
movs
xor
sub
icebp
mov
inc
pop
xor
dec
jb
ss
test
xchg
fiadd
fisubr
jl
cmp
in
movs
outs
dec
mov
bswap
jecxz
mov
push
inc
and
sbb
xor
xchg
scas
lods
mov
and
shr
fnsave
in
mov
push
xchg
mov
add
dec
loope
call
adc
(bad)
fld
pop
sar
xor
sahf
sub
rcl
adc
push
adc
dec
scas
ror
fs
push
cdq
ds
jecxz
adc
fs
push
mov
(bad)
pusha
add
daa
mov
pop
xchg
ins
in
retf
ins
jae
stos
dec
in
loop
nop
ins
in
dec
jnp
outs
mov
daa
push
push
scas
push
mov
or
cmps
jns
xor
sub
sbb
in
xchg
shr
adc
push
cli
pop
dec
idiv
ja
cmp
stc
imul
inc
pop
out
push
in
lock
es
cmp
xchg
(bad)
adc
neg
mov
or
leave
or
add
stos
inc
imul
dec
jnp
mov
repnz
mov
pop
sbb
ror
inc
ss
xchg
fs
xchg
pop
sbb
fcmove
(bad)
or
fs
pop
or
jne
in
pop
cmc
lds
or
cmp
jnp
cmc
out
dec
fidivr
mov
leave
jmp
mov
ins
mov
dec
popf
sbb
jnp
stos
movs
sbb
dec
in
pop
es
jmp
retf
enter
scas
sar
ins
lea
cld
out
push
loop
mov
adc
rcr
daa
add
and
mov
mov
push
in
xchg
dec
cmp
mov
cmp
hlt
mov
cmps
jl
ja
jb
mov
shr
(bad)
ins
nop
xchg
not
int3
lods
movs
pop
iret
mov
out
xchg
add
add
push
pop
or
rol
or
aas
jbe
push
jno
pop
sub
inc
jbe
std
punpckhdq
aas
mov
sbb
jns
arpl
cdq
scas
sbb
mov
pop
bound
fcom
out
xlat
push
jmp
cmps
daa
hlt
jne
xchg
jp
in
push
(bad)
xchg
dec
lds
pop
scas
sbb
cmp
mov
sub
ret
mov
imul
into
xchg
out
mov
scas
jno
pushf
popf
xor
or
fsubr
loop
das
retf
dec
cmps
repz
mov
xchg
sbb
cmp
adc
clc
xacquire
sub
mov
aad
pop
sti
lods
dec
jg
mov
push
test
xchg
cs
adc
addr16
mov
imul
(bad)
popf
pop
sub
(bad)
lds
mov
add
xor
cmp
xor
leave
pop
mov
pop
gs
sahf
sti
xchg
fwait
pop
mov
dec
pop
push
ret
scas
fcomp
lds
test
xor
stos
cli
mov
add
sar
enter
inc
mov
(bad)
jle
push
pop
retf
leave
mov
iret
js
jmp
or
xor
jmp
cwde
pop
test
lds
pop
mov
ret
push
clc
pop
sbb
xchg
(bad)
xor
jno
mov
and
sbb
out
add
push
or
jg
rcr
(bad)
enter
lds
adc
inc
not
inc
in
into
out
(bad)
aaa
inc
push
leave
in
xor
mov
mov
dec
scas
dec
sbb
push
adc
mov
push
ins
retf
pop
adc
pause
inc
xchg
pop
or
or
stc
pop
mov
inc
xor
jae
retf
iret
add
bound
pop
jg
xchg
inc
pop
fsubr
cli
out
jg
mov
xor
mov
jp
adc
je
out
dec
sbb
or
into
addr16
dec
sti
ins
fwait
adc
mov
xchg
call
test
add
xchg
or
mov
aaa
cmp
dec
or
lock
pop
mov
inc
cmps
(bad)
mov
xor
pushf
sahf
in
hlt
lds
cmp
sbb
shl
or
sbb
ret
loope
dec
xlat
lods
fmul
sbb
pop
cli
into
outs
xchg
jl
mov
nop
push
jns
adc
nop
adc
mov
repz
ret
mov
mov
mov
push
mov
mov
mov
test
fldcw
push
out
adc
push
xor
fnstenv
and
pop
sub
imul
les
mov
or
or
push
cwde
inc
jb
pop
inc
jge
xchg
adc
into
pushf
and
cmps
add
test
imul
mov
loopne
jne
lds
push
add
push
and
cmc
xchg
xor
loopne
and
hlt
and
pusha
pop
ja
mov
mov
push
and
popf
pop
enter
aas
fs
rep
addr16
sbb
add
cmp
gs
add
adc
mov
mov
shr
out
(bad)
inc
push
adc
xchg
cmp
dec
out
cmc
pop
mov
sub
je
sub
loop
out
mov
xchg
cdq
js
jbe
and
retf
(bad)
lock
aad
popf
aaa
cmp
mov
cmp
retf
dec
lods
cmps
dec
cli
lea
mov
div
stos
add
out
imul
mov
rcl
jg
(bad)
and
push
cwde
add
lods
push
sub
add
sar
xor
clc
cmp
xor
shl
loopne
outs
push
lea
(bad)
sti
fcompp
inc
iret
mov
test
mov
add
mov
inc
test
cmp
add
pop
dec
or
test
xchg
fsub
jle
ret
xchg
sbb
aad
cmp
mov
mov
call
in
and
nop
ja
xor
mov
movs
cmps
cli
lea
int
ficomp
jno
jecxz
sahf
sbb
jl
mov
aam
scas
mov
pushf
sbb
pop
and
dec
int
mov
mov
and
mov
add
dec
outs
pop
push
fwait
add
push
aad
cmps
pop
mov
sub
mov
xor
jns
aad
xor
ss
aam
dec
es
mov
rep
cmp
in
test
xchg
pop
fisttp
push
ror
fst
icebp
popf
data16
dec
movs
cwde
add
nop
dec
or
jo
adc
test
adc
(bad)
fnstcw
jns
sub
cmp
and
shr
out
js
jg
mov
push
fisubr
jle
pop
xchg
in
sub
out
icebp
fwait
(bad)
not
inc
jge
int3
mov
mov
add
jns
pop
and
sbb
xor
cs
(bad)
jmp
std
ja
nop
fdivp
retf
popa
mov
out
int3
fild
or
lods
jl
movs
push
test
aaa
lahf
pop
xchg
mov
mov
mul
rcr
or
jge
jo
mov
shl
jo
and
sub
sub
add
rol
mov
inc
hlt
popf
mov
cmps
mov
fdivr
aaa
arpl
cmp
mov
and
scas
sbb
push
inc
ror
pop
out
ds
pop
xchg
test
(bad)
jmp
or
in
je
dec
jge
push
or
rol
clc
cmp
ds
loop
imul
fwait
jnp
dec
inc
jbe
pop
outs
sbb
xor
jbe
or
and
xchg
lea
add
push
dec
aad
xor
std
pop
push
mov
xchg
fcomi
sbb
rol
sbb
push
sbb
hlt
movntq
movs
sbb
sub
add
data16
inc
popf
jecxz
ficomp
outs
jbe
push
popa
or
(bad)
int3
ja
test
rol
ret
adc
ret
dec
imul
jae
cmp
inc
add
mov
icebp
je
inc
data16
enter
and
push
mov
retf
enter
shr
cs
push
imul
rcr
retf
icebp
push
test
add
pop
clc
push
xor
or
(bad)
push
mov
push
sbb
fidivr
and
movs
mov
mov
pop
rol
mov
cmp
and
scas
shl
adc
scas
outs
rcl
lahf
sti
mov
sub
sub
or
sbb
movs
push
fs
pop
or
and
xchg
mov
or
jecxz
(bad)
mov
cmp
scas
adc
scas
retf
mov
sbb
cmp
pop
mov
rcl
xchg
dec
cmp
mov
movs
sbb
mov
pop
mov
jg
mov
and
ds
add
pop
sub
in
mov
(bad)
sub
jbe
outs
(bad)
mov
enter
cwde
jbe
push
mov
in
cmp
mov
dec
fst
test
xor
mov
pop
adc
sti
push
adc
stos
sub
cmp
fs
xchg
call
sub
and
call
fmul
cld
aas
inc
pop
xchg
das
jg
pop
les
push
std
jle
adc
dec
inc
ins
loop
je
cdq
jle
push
clc
aas
scas
inc
dec
ss
jle
add
js
or
retf
loope
gs
xchg
lea
or
add
mov
(bad)
addr16
mov
xchg
lds
jno
retf
fcomp
dec
aam
or
xchg
sar
inc
inc
inc
test
pop
jle
pop
push
and
icebp
data16
lds
jne
ins
js
lock
mov
(bad)
sub
jbe
xchg
sbb
int3
mov
retf
jb
pop
pop
imul
test
cmps
test
pop
xlat
mov
and
cmp
mov
scas
mov
jge
ss
adc
cmp
mov
clc
jecxz
inc
cdq
data16
push
inc
jmp
jge
cmp
es
cmp
fsub
mov
idiv
mov
mov
mov
cli
imul
cwde
js
ret
mov
mov
pop
cdq
adc
cmp
dec
(bad)
xchg
cld
xlat
sahf
xchg
loope
mov
pop
ds
and
loopne
push
jmp
cld
in
addr16
cli
pushf
(bad)
(bad)
repz
xchg
iret
pop
data16
mov
and
jle
lea
sar
popa
shl
icebp
jne
cs
mov
shl
jmp
sbb
fidivr
mov
jle
mov
das
clc
or
mov
mov
mov
leave
popf
lahf
inc
imul
pop
mov
cmp
xor
add
popa
push
jecxz
sbb
xchg
cli
mov
mov
cmp
jge
daa
out
mov
ret
and
xchg
test
cmp
es
or
add
push
ss
sub
push
push
jnp
aas
pop
sbb
retf
fsub
in
test
enter
mov
cmc
pop
and
(bad)
pusha
pop
add
or
into
push
adc
test
cs
mov
dec
mov
xchg
mov
pop
inc
cwde
jns
pusha
pop
cmp
xchg
jae
cmc
mov
xlat
mov
cwde
xchg
arpl
or
mov
test
clc
retf
lods
popf
dec
inc
ss
ud2
inc
and
sbb
dec
cs
pop
fnstenv
sbb
push
pushf
daa
jmp
jmp
or
jne
add
gs
loop
rcl
iret
lods
or
inc
(bad)
repnz
dec
cmps
fistp
je
add
sti
je
aaa
mov
pop
and
xor
cmp
push
cmp
(bad)
addr16
push
xor
test
les
mov
or
not
jp
sbb
and
cs
push
sbb
or
popf
cmp
sub
mov
cmps
xor
popf
test
in
pusha
stc
push
out
pop
xchg
mov
adc
lahf
mov
xchg
ror
ret
xlat
aam
popa
mov
push
pusha
and
mov
mov
test
fadd
sbb
inc
and
push
sti
loope
(bad)
add
test
rcl
sbb
dec
cmp
std
loope
aas
mov
add
xor
cdq
mov
ficomp
fild
jg
pop
pop
dec
inc
sbb
adc
pop
mov
(bad)
dec
stos
sbb
(bad)
leave
std
sub
gs
xchg
cmp
aas
stos
aaa
pop
lods
inc
ss
into
in
retf
push
xchg
jb
dec
(bad)
mov
hlt
inc
inc
xchg
or
jl
cmp
pause
popa
xchg
rol
(bad)
jmp
sbb
xchg
mov
fcomp
inc
rol
mov
pusha
mov
cmp
xchg
test
jl
dec
aaa
mov
mov
mov
retf
cmp
cmp
inc
sahf
jmp
pop
fcomp
pushf
enter
loopne
out
add
cld
sti
push
into
and
jno
daa
mov
fsubr
out
sbb
jnp
ret
mov
repz
push
addr16
jae
mov
popf
cmps
loope
pop
stos
sub
div
pop
es
cmps
call
mov
sub
stc
lods
push
jmp
mov
mov
ret
mov
dec
popf
mov
push
mov
xor
lock
xor
add
sub
mov
adc
sbb
clc
addr16
sub
fdiv
call
(bad)
fist
(bad)
(bad)
out
shl
lods
inc
call
cmp
inc
cdq
jno
lahf
iret
mov
sub
cmp
xchg
neg
xor
xor
ins
jno
pop
loopne
repz
or
(bad)
mov
inc
pusha
xor
outs
mov
lock
dec
jecxz
js
(bad)
pop
ins
mov
adc
test
ror
shl
xor
and
mov
or
sbb
fwait
push
or
leave
out
mov
push
adc
push
jle
dec
ins
mov
or
fistp
pop
pop
cmp
mov
test
sbb
test
icebp
es
pushf
sub
mov
push
(bad)
or
shl
xor
adc
shr
xor
dec
mov
sub
nop
jle
loope
adc
mov
sbb
pushf
mul
call
cdq
cmp
push
movs
bound
jns
gs
push
ins
inc
and
imul
mov
les
sub
rol
push
mov
xlat
ret
sub
and
mov
lock
inc
std
(bad)
sbb
and
(bad)
les
jge
dec
pop
dec
xor
imul
lock
sahf
mov
push
mov
daa
div
bound
pushf
xor
mov
(bad)
lods
shl
cmp
sub
add
lock
and
jmp
fsub
jp
fsub
push
push
adc
aam
cmp
hlt
call
sbb
mov
test
loop
sub
push
xchg
into
je
sub
aaa
or
clc
xor
daa
xchg
repnz
das
and
ror
retf
mov
int3
sub
sbb
mov
lahf
dec
das
(bad)
mov
out
jg
mov
imul
cld
(bad)
movs
movs
sbb
push
xor
sahf
repz
pop
mov
jae
mov
jg
outs
js
sahf
push
popf
fcomp
in
add
sbb
ds
inc
or
ins
pop
mov
add
and
fadd
ret
imul
add
outs
shr
loope
(bad)
push
cwde
mov
aas
out
add
out
xchg
pusha
add
nop
in
xor
aaa
movs
dec
xchg
jp
xor
lahf
push
call
xchg
sbb
jmp
pop
sbb
gs
(bad)
(bad)
sti
mov
jae
leave
xchg
jle
mov
inc
mov
fst
dec
xlat
dec
in
mov
mov
inc
cmc
test
cld
(bad)
add
call
mov
scas
mov
outs
out
imul
aad
shl
test
clc
adc
aad
les
popa
xor
jl
mov
sbb
push
mov
mov
or
lock
and
pop
inc
out
mov
jbe
inc
inc
js
retf
mov
dec
sbb
es
(bad)
add
(bad)
jmp
pusha
ss
mov
(bad)
pop
adc
jo
or
sbb
daa
xchg
jmp
fcom
(bad)
push
mov
push
xchg
mul
sti
fldenv
stos
stos
cmps
mov
mul
lods
imul
mov
xchg
xchg
cmp
mov
pop
cs
pop
repnz
adc
cmp
(bad)
iret
sbb
sbb
call
xor
xchg
movs
lahf
add
add
add
(bad)
in
mov
add
xor
es
jne
ds
movs
or
push
ss
mov
jno
ret
xchg
cmps
sub
push
sbb
pop
dec
fistp
clc
enter
xor
jmp
fnstenv
call
mov
pop
es
jno
push
and
test
xor
sbb
cdq
lds
sbb
fcomp
mov
xchg
shr
add
and
outs
mov
popa
loopne
xor
mov
js
jmp
push
enter
jge
das
cmp
dec
push
adc
addr16
mov
xor
js
mov
adc
cmp
pop
sbb
or
add
lods
xchg
arpl
clc
mov
cli
add
fsubp
pop
and
fisttp
sub
dec
sbb
shl
test
jbe
shl
pop
and
out
outs
lods
sub
push
fcomp
adc
test
cli
inc
pushf
mov
cmp
in
mov
jne
xchg
aas
mov
push
fnstsw
loop
cmc
sbb
cmp
push
mov
retf
sub
scas
enter
cwde
cmovp
mov
inc
mov
fld
mov
push
imul
xchg
mov
sar
rcr
xchg
adc
pop
adc
pop
xchg
jecxz
sub
fcomip
clc
mov
xchg
adc
int
bound
fnstcw
pop
shr
cmc
jns
sbb
popf
das
push
mov
test
adc
cmp
push
test
and
pop
stos
shld
sub
repnz
and
sub
dec
ret
and
movs
mov
push
sub
dec
xchg
cmp
sub
pop
pop
in
pop
pop
mov
mov
out
dec
sahf
or
aas
out
mov
cmp
jmp
sbb
add
xchg
je
jbe
jae
jmp
push
sbb
fadd
cmp
out
cs
jmp
adc
mov
xchg
and
and
addr16
push
(bad)
mov
mov
fnsave
test
dec
lock
mov
hlt
js
pop
(bad)
aas
leave
push
ja
pop
fadd
outs
idiv
sub
push
jae
mov
jns
mov
ins
loop
and
mov
mov
popf
push
push
fsubr
or
xchg
fs
les
push
dec
add
sbb
mov
ss
pop
in
push
sbb
push
sub
jle
sub
sub
sub
xchg
out
mov
pop
adc
shl
sbb
adc
inc
in
mov
loope
hlt
cmp
repz
dec
mov
dec
fcomp
and
dec
fild
cli
mov
enter
inc
inc
xchg
lods
inc
repnz
mov
(bad)
adc
mov
je
pusha
mov
pop
add
adc
or
int3
lahf
imul
mov
aas
jge
dec
fistp
jmp
imul
and
aaa
push
sub
in
add
adc
jno
mov
adc
xor
adc
cmps
sar
xor
pop
out
loope
in
faddp
jns
adc
fwait
mov
loop
aas
jmp
ins
cmps
mov
xchg
jbe
mov
jnp
inc
sub
repz
shr
cmps
inc
test
and
or
jge
xchg
out
push
sub
scas
add
std
jp
ins
lahf
mov
mov
fstp
cmp
push
pop
rcr
cwde
test
mov
dec
mov
lods
aaa
fbstp
jae
out
cmp
nop
pop
xor
(bad)
das
jge
test
std
xchg
xor
addr16
inc
xchg
add
adc
jmp
lahf
test
adc
sub
or
xor
push
sub
mov
scas
dec
pop
push
out
inc
adc
pop
es
shr
jp
pop
push
dec
or
cdq
scas
adc
add
xlat
jmp
pop
lock
cld
cmp
xchg
mov
inc
(bad)
push
add
jnp
in
repnz
(bad)
movs
add
movs
and
imul
retf
push
bound
pop
ss
sti
fiadd
daa
and
icebp
sti
cmp
data16
fdivr
pop
push
cli
(bad)
pop
jbe
push
mov
dec
push
daa
mov
xor
ds
xchg
scas
xor
adc
sub
push
jo
shl
mov
mov
ficomp
inc
xchg
and
inc
scas
xor
in
mov
jg
add
jg
lea
pop
mov
jl
push
push
or
shl
es
sbb
out
jno
and
add
sahf
shr
xchg
sbb
aas
fst
out
mov
outs
out
pop
cs
enter
push
dec
int
jb
out
fisubr
and
fnsave
sahf
and
cmp
add
cmc
hlt
mov
(bad)
xor
pop
or
mov
in
nop
je
pushf
cmp
dec
and
jg
push
inc
fisubr
mov
cmc
addr16
test
aaa
in
out
and
mov
xchg
inc
mov
push
cdq
push
pop
jnp
dec
out
js
xchg
ins
and
sbb
pop
add
test
in
std
push
add
pop
lea
mov
mov
movs
out
in
test
sbb
test
loope
ret
movs
ror
stos
cld
dec
fnstsw
cmp
sbb
push
pop
xchg
sub
pop
dec
pop
cmps
mov
mov
scas
gs
add
xchg
add
mov
test
bound
add
push
dec
xchg
ins
aaa
(bad)
std
or
dec
stos
out
inc
xor
test
(bad)
mov
mov
int
ja
shr
jg
in
xor
xlat
aam
fmul
loopne
outs
mov
jp
push
sub
mov
inc
fmul
mov
iret
or
mov
inc
jg
sar
sbb
mov
or
and
push
xor
movs
jbe
jg
xchg
or
adc
retf
cmp
mov
pop
or
cmc
ret
shl
mov
mov
mov
loop
add
mov
stos
add
cld
push
inc
push
lods
cmps
loop
cmps
mov
stos
xor
scas
sub
xlat
push
push
ss
xor
enter
cmc
outs
ss
and
cmp
dec
mov
(bad)
sub
iret
pop
scas
mov
(bad)
ret
aad
imul
sub
inc
sub
fs
aam
add
dec
adc
push
push
es
dec
int
scas
mov
mov
fadd
ja
mov
and
bswap
jecxz
dec
addr16
(bad)
shl
fs
dec
pop
imul
mov
movs
pop
jp
mov
gs
push
sbb
fwait
es
retf
cs
cs
push
xor
sbb
retf
scas
mov
jmp
in
dec
ss
or
dec
and
xlat
inc
cmps
mov
jae
retf
push
jl
or
mov
pop
scas
sbb
jno
aas
js
fwait
mov
and
jecxz
pushf
iret
mov
or
pop
int3
mov
stc
add
xor
test
aas
mov
rcr
aaa
jmp
mov
pop
push
mov
mov
lods
cld
jne
xchg
outs
movs
add
and
mov
mov
(bad)
xor
sub
mov
mov
mov
dec
and
test
mov
cmps
pop
retf
mov
vmread
fcomp
test
mov
shl
mov
inc
mov
adc
into
push
dec
sbb
mov
call
(bad)
mov
popa
fistp
das
mov
in
sar
pop
inc
cmp
cdq
push
pop
cdq
cmp
or
xor
std
pop
xchg
data16
cmp
sbb
or
shl
cmp
push
pop
je
cmp
pop
sbb
test
push
sbb
aaa
pop
and
shr
iret
cmp
test
imul
jg
mov
lods
or
fistp
leave
ins
xchg
push
in
lock
xor
add
stos
lea
arpl
xchg
lea
loop
xor
es
je
lds
loope
call
sub
enter
sbb
mov
int3
test
jo
adc
dec
xchg
or
leave
mov
push
sbb
aas
or
cmp
inc
call
mov
and
(bad)
adc
jb
arpl
in
jb
es
sbb
mov
dec
jbe
sub
jmp
push
cdq
int3
and
jnp
lahf
mov
jo
mov
cmp
cli
lock
sbb
scas
cmp
js
and
inc
mov
icebp
(bad)
sbb
neg
xchg
xchg
xor
adc
sub
mov
js
inc
sub
cmp
sbb
and
aaa
cmps
pop
(bad)
fsub
xor
mov
mov
inc
push
mov
popf
aad
and
ja
inc
push
ret
test
adc
xchg
and
inc
lahf
clc
call
sub
jl
add
out
mov
dec
bound
pusha
pop
in
std
jp
mov
clc
clc
pop
loopne
inc
jmp
sti
ins
sub
lds
neg
cld
sbb
xchg
sbb
mov
and
jmp
pop
fs
cmp
cmps
sub
mov
add
fdivr
add
in
dec
mov
pcmpgtw
xor
int3
mov
pusha
aas
cmp
jmp
cmps
not
adc
cli
or
stos
push
outs
nop
aam
mov
dec
push
jg
sub
loopne
pop
inc
rol
jne
pop
mov
imul
aaa
cmp
std
push
add
xchg
fxch
int3
in
loopne
mov
xchg
ret
inc
imul
sbb
push
repnz
jecxz
icebp
sbb
aad
mov
and
out
jge
(bad)
lds
(bad)
mov
jmp
pop
and
(bad)
popa
ficomp
loope
cmp
xlat
ficomp
sbb
inc
mov
dec
xor
inc
lods
mov
jb
call
mov
std
nop
test
out
adc
repnz
imul
cmp
(bad)
add
retf
mov
push
or
dec
push
cdq
js
inc
xor
and
cwde
push
add
mov
push
adc
mov
mov
jmp
test
inc
addr16
xor
lods
mov
mov
pop
push
lods
push
shl
sub
cmp
scas
outs
pushf
and
outs
pusha
fidiv
movs
xor
pusha
sahf
fidiv
(bad)
sti
retf
adc
pop
movs
rcr
pop
ror
dec
jp
lock
mov
or
in
cmp
adc
inc
leave
adc
inc
scas
dec
sahf
add
fdivr
cmp
arpl
inc
mov
das
test
cli
and
pop
or
mov
mov
adc
inc
in
cmp
out
test
sbb
fadd
add
xor
cld
add
xchg
icebp
xor
cld
imul
dec
or
arpl
cmp
fist
inc
mov
dec
mov
mov
clc
sbb
push
push
push
jo
sub
mov
xchg
icebp
push
into
cmc
js
pop
dec
out
out
sbb
add
mov
mov
cmps
test
xchg
repnz
enter
ret
repnz
cmp
cld
xor
push
cmp
lock
mov
xor
outs
xlat
or
pusha
mov
mov
dec
pop
cs
add
jbe
sbb
push
jno
mov
xlat
js
aaa
test
ins
ds
mov
xchg
fist
je
pop
div
xchg
rol
sbb
sbb
add
sti
pusha
ret
and
and
inc
and
push
in
lock
cmp
mov
pop
jecxz
pop
fcmovnu
bound
push
mov
(bad)
vminpd
mov
sbb
ret
retf
sub
add
out
cwde
mov
pop
dec
iret
jecxz
(bad)
aaa
mov
stc
sti
pop
pop
jmp
(bad)
repnz
add
neg
add
jnp
cmp
aam
mov
lods
add
sub
inc
call
mov
push
fstp
test
scas
and
movs
adc
inc
xchg
sahf
cmp
and
popf
cdq
test
xchg
lods
push
test
out
mov
shl
inc
sar
cmp
or
mov
call
pop
and
in
mov
sar
loopne
jbe
add
add
fdiv
mov
sbb
cmp
dec
lock
int
xor
pop
add
jecxz
add
leave
ja
mov
shl
sub
enter
ja
cld
imul
inc
mul
mov
imul
jle
xchg
loopne
jmp
or
mov
(bad)
and
iret
ror
into
bound
mov
(bad)
cmp
push
(bad)
dec
out
dec
dec
xor
pop
push
ins
cli
xlat
in
fbld
cs
mov
out
test
pop
jl
mov
jne
int
pusha
dec
retf
xchg
loop
out
cmp
inc
and
test
retf
nop
push
stos
cmps
imul
jge
ficom
mov
cmp
xchg
sar
mov
pop
mov
push
mov
rcl
dec
adc
xor
push
push
je
clc
rcr
lods
sti
push
sbb
fstp
int3
xchg
lds
aas
xor
mov
mov
mov
cmp
addr16
mov
ret
adc
mov
add
sahf
mov
adc
pop
push
jmp
or
sub
cmp
(bad)
jne
jge
daa
scas
add
int
dec
jns
adc
outs
leave
imul
adc
mov
jg
stos
add
stos
int3
xlat
ins
into
mov
lahf
or
test
cmp
iret
push
mov
push
fbld
xlat
hlt
push
inc
ss
mov
jecxz
push
int3
mov
add
adc
adc
jbe
sbb
sub
dec
jmp
pop
mov
in
sub
xchg
icebp
mov
sub
(bad)
arpl
stos
jecxz
lea
mov
pop
push
and
repz
imul
mov
sbb
mov
lea
and
call
sub
pop
out
jnp
std
push
enter
mov
jmp
push
sbb
sub
aam
fs
push
jbe
and
lock
repz
repnz
test
sahf
addr16
dec
mov
clc
ins
xchg
cmp
(bad)
cmp
cmp
and
jl
jo
ror
sbb
shl
push
sub
sub
rol
(bad)
cli
sbb
shr
loop
std
and
js
jns
not
jp
inc
out
rcl
push
hlt
mov
aas
inc
aas
adc
mov
mov
cmps
pop
int
out
test
out
cmp
popa
inc
inc
imul
sbb
push
fcom
leave
push
inc
adc
jae
je
mov
(bad)
rcl
rcr
cld
cmp
fadd
mov
repz
jnp
sbb
int3
(bad)
fdivr
xchg
jmp
(bad)
out
or
das
mov
gs
jmp
sbb
pop
xchg
sub
xor
arpl
rcr
shl
and
xchg
loope
test
iret
mov
scas
stos
lahf
repz
arpl
aas
scas
(bad)
cmp
xor
pop
test
(bad)
call
pop
and
or
jnp
ja
mov
adc
pop
ds
or
fld
rol
mov
mul
pop
xor
mov
cmp
xor
(bad)
sti
cmp
jnp
(bad)
mov
rol
pop
pop
cmps
push
dec
pop
mov
pop
and
inc
add
push
lods
and
jns
pop
stc
mov
dec
out
push
jmp
imul
mov
and
cmps
push
xchg
push
xchg
sbb
push
scas
sub
(bad)
(bad)
out
lds
jmp
pop
nop
(bad)
sbb
cli
mov
popa
sub
test
lea
aaa
movs
sub
div
mov
inc
aas
imul
pop
out
loop
shl
sub
or
add
retf
jmp
xor
(bad)
clc
cmp
lea
cs
fwait
or
scas
aam
ror
loope
arpl
dec
xlat
(bad)
pop
xchg
pusha
sub
jl
fadd
push
ret
aaa
test
mov
dec
out
jnp
aas
fs
rcr
jmp
sahf
and
gs
xchg
cld
sub
mov
cmps
inc
xchg
sub
inc
sti
fbstp
cmp
sbb
ins
cmp
repz
gs
ror
inc
out
mov
fcomi
cmp
imul
mov
enter
jmp
js
cmp
cmps
fstp
lahf
pop
mov
pop
ja
test
dec
retf
xchg
add
xchg
inc
adc
push
pop
pop
pusha
mov
std
jl
and
mov
mov
adc
adc
jns
test
jae
stos
adc
adc
inc
add
call
cmp
aas
add
mov
jge
sti
movs
inc
cwde
jle
popf
and
or
adc
in
sbb
pop
mov
ret
or
add
movs
cli
cld
pop
xor
cmp
test
xchg
xchg
inc
loope
out
je
jb
shl
sar
dec
push
iret
push
out
mov
retf
sbb
loop
jp
inc
add
retf
ja
ror
fisub
clc
dec
ins
rcr
retf
dec
xor
push
das
imul
pop
bound
nop
or
add
sbb
mov
stos
jmp
adc
fs
push
mov
dec
pop
imul
scas
cld
sbb
daa
retf
dec
sbb
inc
scas
mov
dec
cmp
adc
mov
arpl
push
cmps
fldl2e
in
pop
and
in
jb
mov
sub
stos
movs
sti
cmc
icebp
add
mov
xchg
dec
xor
neg
or
es
dec
add
pop
sub
out
das
pop
adc
les
adc
retf
mov
aas
test
push
ficom
test
retf
push
mov
sbb
int3
add
fsubr
sub
push
push
cli
into
push
dec
test
jg
or
(bad)
mov
mov
push
sbb
sahf
gs
or
fs
fdiv
pop
fnstcw
mov
dec
pop
pop
test
je
stos
popa
fcmovnu
jge
scas
inc
sbb
jb
enter
je
jnp
push
gs
ror
jne
adc
or
push
mov
bound
xchg
bound
ror
push
add
es
es
ss
sub
mov
xchg
gs
inc
mov
shr
sub
xchg
std
out
test
jns
loopne
jl
pop
(bad)
out
stc
mov
inc
ss
sbb
add
mov
push
push
sbb
fmul
cwde
jns
retf
push
std
cmp
stc
jbe
add
push
fisubr
mov
xchg
cmp
mov
(bad)
aad
test
mov
pushf
or
dec
sbb
adc
and
dec
int3
sti
ins
(bad)
je
hlt
jle
imul
push
push
ins
push
pop
mov
inc
cmps
sub
mov
mov
or
xchg
jmp
js
(bad)
cmps
dec
fwait
mov
lods
or
mov
xor
xchg
adc
outs
jmp
mov
pusha
jbe
adc
cmps
inc
sbb
adc
xchg
dec
into
push
adc
add
pop
jns
inc
into
cmps
xor
xchg
pop
mov
call
rcl
fmul
sbb
sub
in
push
arpl
scas
add
push
xchg
sbb
mov
mov
ja
mov
and
scas
pop
or
pop
fsubr
fbstp
push
add
pop
in
jne
pop
icebp
push
(bad)
pop
jmp
imul
fild
adc
cmp
cmp
imul
jo
xor
jp
xor
jp
or
sbb
xor
lock
push
mov
rcr
jl
cmps
sbb
xor
jmp
push
xor
jae
ds
push
and
inc
xchg
test
jge
std
cmp
inc
add
mov
add
mov
dec
mov
bound
cmp
out
test
(bad)
mov
jno
mov
rcr
inc
add
jns
push
push
sbb
adc
ja
jle
jp
jns
dec
xchg
cmps
retf
jne
xchg
xor
or
in
leave
ins
aad
pop
sar
mov
icebp
int3
sub
jg
das
push
inc
jne
or
cmp
scas
mov
xor
lds
jae
mov
xchg
fbld
test
js
aas
xchg
mov
pop
lea
lods
cwde
ret
stos
lock
scas
addr16
outs
cmp
mov
mov
jmp
push
ror
nop
mov
dec
cmp
leave
mov
sub
or
inc
sub
popa
or
fisttp
lock
inc
xchg
fs
in
fcom
scas
xchg
les
mov
mov
mov
and
retf
pop
mov
daa
inc
xchg
ds
mov
rcr
lahf
(bad)
pop
fsub
mov
leave
fld
in
mov
mov
push
mov
xchg
fild
jge
and
cs
ds
xchg
jae
inc
add
je
jae
call
aam
sub
das
rcr
std
add
cli
lods
aad
ror
shl
push
adc
sar
mov
cmp
movs
enter
jecxz
frstor
mov
and
and
cmps
sbb
nop
inc
mov
cdq
imul
mov
dec
mov
jl
das
lea
ss
sahf
(bad)
pushf
sub
or
jge
or
jbe
mov
sbb
cld
lea
push
jae
mov
pop
mov
movs
jmp
outs
jle
adc
push
out
xchg
mov
test
test
sahf
inc
pushf
sahf
add
test
mov
cmp
ss
push
adc
test
mov
sub
ins
adc
mov
mov
cld
cld
ror
mov
mov
mov
fild
out
aas
mov
push
cmp
sub
out
jle
jg
xchg
add
and
sub
adc
je
iret
adc
pushf
mov
or
mov
pop
cmps
or
sub
add
sbb
loopne
xchg
sti
sub
cli
gs
pop
shl
aad
imul
cmps
sub
or
jle
add
push
jge
(bad)
xor
dec
push
xchg
jmp
push
ins
test
sti
aaa
and
jbe
jbe
and
and
leave
jno
inc
xor
jae
push
pusha
mov
sti
das
fld
pop
mov
mov
mov
push
test
mov
cmp
jl
ins
int
ja
add
lds
aam
call
clc
sahf
pop
push
cmc
je
test
push
mov
mov
and
mov
cmp
test
leave
lds
jmp
inc
loopne
dec
jmp
mov
jmp
daa
push
jl
gs
mov
or
ss
push
adc
pop
xor
test
mov
inc
pop
mov
(bad)
retf
fisttp
mov
into
xor
jo
je
ins
inc
sahf
lea
pop
clc
adc
xchg
mov
mov
stos
pop
push
in
sub
stos
adc
(bad)
ja
loopne
in
inc
bound
sbb
es
je
dec
adc
mov
cdq
or
push
pop
(bad)
mov
es
cmp
add
adc
pop
cmp
pop
sbb
jmp
fdivr
daa
loope
jge
xor
fstp
xchg
xor
push
repnz
jb
(bad)
xor
aam
ror
in
mov
xor
or
stos
or
dec
in
ret
add
loopne
jle
jge
sbb
mov
cwde
mov
call
ja
mov
popa
mov
pusha
outs
push
pop
fwait
mov
and
jmp
adc
ficom
pop
mov
cmps
mov
xlat
pop
xchg
pop
inc
mov
popf
aas
xchg
dec
std
into
cdq
ins
sub
jns
mov
cmc
clc
sbb
ret
xchg
push
fld
fnsave
inc
aas
(bad)
cdq
popf
push
mov
daa
cmp
push
in
mov
push
xchg
pop
out
in
call
popf
dec
loope
lock
xchg
mov
pop
jecxz
push
mov
imul
sbb
jle
sbb
add
cwde
adc
mov
and
test
mov
ret
out
in
test
cld
push
xlat
mov
outs
outs
test
pop
sub
jge
sbb
ja
stos
shl
in
jg
pushf
fsub
aaa
mov
push
pushf
sub
mov
repnz
add
mov
cmc
mov
sbb
aas
in
sub
ret
stc
pop
jg
add
enter
data16
call
outs
das
pop
xchg
mov
push
add
pop
fcos
inc
cmps
jns
popf
retf
and
and
push
xor
(bad)
(bad)
outs
mov
scas
nop
xchg
xlat
addr16
inc
push
dec
daa
loope
push
pushf
bound
mov
push
push
(bad)
mov
mov
xchg
clc
mov
jmp
inc
pop
cmp
mov
inc
inc
ret
pop
xchg
test
xchg
in
mov
mov
xchg
imul
push
xchg
pushf
xchg
mov
or
je
enter
jle
shl
outs
scas
ds
ja
or
mov
pop
sbb
mov
daa
push
loope
pusha
icebp
mov
std
aad
jg
xlat
inc
movs
jnp
es
(bad)
cwde
inc
sahf
mov
mov
stc
lea
add
test
adc
std
lea
jecxz
mov
mov
imul
retf
sar
scas
inc
loope
add
out
cwde
dec
in
mov
dec
fnstcw
stc
daa
jnp
ror
sub
xchg
jae
pusha
ss
xchg
jmp
cmps
sbb
mov
cmp
mov
aas
add
aam
int3
mov
cmc
jnp
mov
push
jno
cdq
movnti
pusha
popf
jl
push
or
or
push
add
add
jb
jnp
pop
mov
data16
adc
imul
shr
push
dec
aam
inc
movs
jno
and
fistp
sub
cmp
sub
xor
xchg
push
ret
pop
mov
and
jns
iret
(bad)
pop
in
mov
mov
rcl
scas
in
mov
sbb
dec
ja
pop
sahf
or
add
sub
repz
sub
dec
fidivr
lods
and
(bad)
stc
push
lahf
xor
mov
sbb
xchg
into
mov
ficom
mov
cmc
popf
add
push
mov
xor
xchg
pop
xchg
push
imul
addr16
les
std
ds
(bad)
push
inc
push
iret
or
iret
cwde
jmp
sub
jp
enter
pop
ja
shl
fwait
dec
adc
mov
aam
jl
mov
adc
pop
shl
sub
xchg
add
push
stos
int
loope
adc
call
repz
push
mov
outs
daa
cmps
out
mov
sbb
std
jmp
aas
iret
mov
repz
xchg
(bad)
shl
repz
mov
loope
or
cld
mov
sti
push
int3
ja
out
(bad)
hlt
movs
mov
(bad)
jno
pop
add
popa
fbld
and
sub
mov
sbb
mov
loope
sbb
sub
xor
adc
xchg
jae
or
daa
jp
das
jmp
or
inc
(bad)
or
cmp
mov
movs
imul
mov
es
and
adc
jp
xor
fidiv
loope
pop
push
mov
and
test
test
ins
fild
push
sub
je
push
cmp
sub
retf
add
dec
xor
mov
xor
push
cdq
pop
xor
ror
pop
stc
ins
idiv
add
mov
xchg
mov
test
sahf
mov
sti
movs
mov
dec
sub
dec
(bad)
mov
sbb
cld
sub
leave
rcl
and
ficomp
jge
div
nop
cmp
mov
cmp
popf
sbb
sbb
jmp
fcomp
pop
mov
arpl
js
adc
das
inc
xchg
mov
imul
xor
ds
hlt
cmp
cmp
inc
pop
sahf
in
std
mov
outs
jns
test
mov
jp
hlt
sub
adc
arpl
adc
inc
bound
sahf
cmp
adc
nop
mov
lods
adc
sub
test
lea
sbb
mov
out
xchg
xor
mov
lea
popa
xor
fmul
popf
std
outs
ja
mov
or
inc
cmp
aas
pop
addr16
cld
sbb
loopne
cmp
std
pop
cmps
mov
cmp
fld
push
(bad)
push
das
jp
add
pop
fwait
cld
shl
sub
js
adc
xchg
jnp
out
fisubr
adc
es
loope
dec
xchg
js
dec
inc
push
ret
sbb
gs
dec
jns
jmp
dec
int
cmp
and
dec
test
std
fisttp
add
arpl
xchg
mov
icebp
xor
or
gs
push
cmp
pop
pop
stos
xor
pop
int3
jne
mov
imul
ins
cmps
jae
ins
jle
cmp
in
es
jno
add
imul
rcr
ds
add
mov
adc
sbb
in
xchg
sbb
jmp
xchg
xor
rcl
loop
inc
sahf
pop
call
sbb
icebp
mov
cmp
das
stos
mov
mov
movs
pop
fisub
dec
cmp
push
fsubr
lods
sahf
cmp
jl
mov
jno
sub
imul
cmp
fmul
mov
loop
pop
test
push
mul
out
into
lods
leave
pusha
mov
fisub
aam
fnstsw
mov
mov
ins
pextrw
cmp
ror
adc
je
es
inc
imul
xchg
movs
ds
stos
adc
xlat
in
mov
enter
stos
pop
cmp
(bad)
out
cmp
mov
xor
fadd
stos
ret
and
mov
shl
sub
dec
ror
cwde
sahf
stos
sar
add
ds
mov
jno
xor
xchg
(bad)
sti
cmp
ret
jb
aas
push
and
fmul
lods
inc
push
xor
cmc
push
in
or
fimul
xor
push
mov
leave
jne
cmc
sbb
out
mov
xchg
arpl
cmp
fs
div
xor
repz
clc
sub
jae
inc
loopne
scas
sbb
or
mov
pop
retf
(bad)
movs
aad
jl
pushf
xor
repz
and
test
inc
mov
pop
test
movs
xor
adc
pop
out
fsubr
call
imul
dec
cmp
test
mov
std
sar
ror
ins
push
mov
(bad)
test
sub
dec
inc
fsub
mov
std
fcomp
jmp
inc
jbe
adc
cs
dec
stc
sub
mov
shr
xor
jp
mov
jge
adc
mov
cwde
push
push
fcmovb
push
xchg
sbb
pop
dec
xchg
int
xlat
ret
daa
adc
cld
mov
fidiv
jae
jb
xchg
jle
or
push
sbb
inc
xchg
gs
ror
jge
jb
imul
outs
jnp
push
into
mov
imul
out
dec
shl
mov
arpl
out
lods
cmp
in
adc
punpcklwd
sub
dec
shr
leave
mov
mov
mov
mov
cli
test
inc
mov
dec
shr
cld
and
call
inc
les
aad
jns
or
inc
repz
addr16
stos
shl
fucomi
(bad)
mov
xchg
aas
adc
sbb
(bad)
psrld
retf
stos
jae
repnz
cmc
int
mov
mov
shl
loop
loopne
repnz
add
cmc
xchg
mov
adc
addr16
into
dec
sub
in
adc
cmp
mov
in
add
add
(bad)
cmps
jmp
test
xor
mov
inc
sub
ret
mov
xchg
xor
les
cmp
cmps
pop
mov
leave
imul
aam
xor
jecxz
xor
jmp
adc
aaa
cmps
or
in
lock
ds
aam
aam
(bad)
cmp
retf
(bad)
fsubr
sti
add
inc
sub
add
xchg
mov
mov
cdq
and
cld
popa
xor
lods
sar
xor
mov
aad
jb
xchg
test
or
ja
mov
xchg
mov
sub
push
shl
sub
mov
dec
in
jecxz
push
scas
(bad)
ret
sbb
push
stos
mov
pop
movs
mov
call
add
(bad)
jge
imul
pushf
adc
dec
aaa
popf
int
out
or
cld
aas
cdq
cwde
xchg
jo
sub
into
sbb
cmc
out
and
jl
jne
adc
dec
stos
popf
jo
iret
pop
leave
daa
pop
lea
sbb
jmp
in
shl
movs
iret
mov
xchg
inc
out
cmp
int3
inc
jmp
xor
add
popa
std
adc
adc
pop
enter
or
xchg
rep
mov
imul
out
stc
lods
inc
and
fcom
sbb
div
sar
shl
in
popf
jmp
aad
arpl
ja
rol
dec
(bad)
and
xor
jp
shl
ins
sub
fidivr
add
je
shl
cli
jne
sbb
inc
push
sub
fcomp
mov
xchg
outs
sbb
aaa
ins
loope
pop
mov
mov
lahf
rol
jp
in
inc
mov
jae
xchg
repz
add
inc
xlat
stos
adc
nop
mov
faddp
imul
or
scas
or
dec
imul
jmp
gs
inc
cmps
and
gs
pop
lds
call
jge
js
inc
mov
or
xor
das
xchg
stos
or
jmp
inc
lock
jmp
ror
out
or
stos
cmps
iret
fcom
mov
das
dec
or
gs
dec
xchg
ret
out
test
jmp
mov
push
test
pop
jp
sar
push
xor
xchg
mov
adc
fisubr
dec
outs
(bad)
aaa
mov
pop
sbb
js
xor
adc
jnp
jmp
call
cmp
xchg
lods
shl
cmp
xor
ja
mov
(bad)
jl
lods
inc
pop
arpl
adc
adc
mov
popa
adc
pop
xchg
test
xor
sar
push
mov
inc
lock
adc
pop
test
pop
ss
imul
imul
sar
fdivr
or
vunpckhps
lods
pop
pusha
adc
jne
imul
jge
not
dec
mov
dec
ss
mov
imul
push
cli
dec
stos
out
stos
aaa
aaa
mov
sub
xor
test
outs
or
xchg
popf
mov
inc
sub
rol
shr
pop
outs
adc
jmp
adc
sbb
fbstp
inc
and
movs
jg
imul
mov
push
das
sub
mov
jg
jle
ss
cwde
test
sub
or
xor
shl
sbb
lds
std
xchg
pop
sar
stos
jae
out
sbb
and
jmp
mov
dec
or
jecxz
js
jae
mov
ja
pop
sbb
(bad)
in
std
jge
sub
mov
xchg
push
jno
inc
sbb
push
cs
or
lahf
xlat
push
cmovo
inc
clc
out
addr16
sbb
out
mov
inc
cmc
leave
rol
inc
jns
cli
jbe
xchg
mov
mov
mov
sub
nop
gs
mov
int
mov
(bad)
mov
and
mov
fstp
mov
imul
ret
push
mov
cmp
push
push
or
jne
aaa
stc
pushf
shr
jp
addr16
repz
loop
cmc
out
dec
out
jge
cmps
imul
mov
fist
jmp
shl
call
mov
outs
in
repz
loopne
pop
in
mov
sub
cs
mov
dec
push
jl
dec
pop
(bad)
dec
add
or
lods
and
mov
sbb
out
bound
pusha
es
inc
jns
inc
mov
stos
cmp
es
lea
mov
add
gs
mov
test
cwde
cwde
jle
inc
outs
sbb
popa
xchg
mov
mov
pop
xchg
pop
(bad)
in
out
stos
sub
xchg
and
sub
icebp
xchg
sbb
mov
rol
xchg
or
lea
mov
fild
jp
mov
daa
jnp
bound
add
arpl
test
cmp
and
and
xchg
xchg
outs
test
pop
push
dec
in
dec
(bad)
aaa
sbb
out
fnstcw
daa
fcomp
pushf
cdq
imul
das
jg
ficom
jmp
jne
xchg
jae
mov
push
add
rol
ficom
push
xchg
xchg
dec
push
dec
sbb
(bad)
pop
add
stos
movs
jg
fdiv
shr
or
rcr
and
jl
inc
call
adc
(bad)
lods
in
pop
xchg
cmp
sub
mov
jno
(bad)
cmp
sti
pushf
jle
ins
cmps
ins
jl
mov
sbb
ud2
in
nop
repz
imul
shr
xor
cs
test
popa
dec
iret
aad
or
fdiv
inc
push
jae
mov
xchg
and
jp
call
inc
mov
loop
iret
movs
fidiv
imul
add
inc
imul
dec
(bad)
std
mov
inc
cmp
stos
(bad)
in
sbb
mov
inc
push
or
xor
xchg
sub
fisttp
bound
mul
jae
cmp
fs
(bad)
dec
mov
retf
retf
xchg
in
popa
mov
arpl
xchg
fdiv
stc
cmp
add
aam
int
fimul
jne
mov
imul
xlat
add
leave
int
add
inc
add
sahf
xlat
out
push
ja
pop
or
daa
in
xor
cmps
jne
rcl
shl
mov
dec
pushf
imul
cmps
inc
pop
dec
cld
pop
cmps
jg
mov
cmps
mov
push
and
into
mov
adc
mov
or
movs
or
fiadd
pop
test
push
mov
and
in
xchg
stc
inc
sub
out
movs
test
xor
and
das
and
(bad)
adc
add
push
mov
js
pushf
jmp
test
sub
int
xchg
push
cmp
ret
mov
cdq
gs
in
(bad)
scas
sbb
mov
mov
and
add
pop
push
out
jl
pop
inc
push
xchg
test
gs
test
(bad)
jno
push
xor
inc
sub
in
inc
in
inc
cwde
dec
cmp
xor
lds
lock
test
push
test
lock
ds
retf
jne
jg
mov
stos
and
les
xchg
adc
call
bound
push
scas
xchg
jp
fld
mov
xor
ins
jo
mov
xor
xor
xchg
test
mov
cmp
rol
mov
nop
imul
repnz
mov
daa
push
jnp
lahf
jae
sbb
adc
pop
sbb
push
shl
xchg
bound
stc
in
cmp
xchg
push
push
outs
cmp
dec
fiadd
jo
jmp
lds
xor
xor
mov
push
fdivr
inc
mov
ins
add
add
sbb
inc
mov
pop
sbb
(bad)
or
cmp
pushf
test
xchg
jg
aas
test
add
sbb
mov
(bad)
hlt
add
or
das
xlat
mov
xchg
adc
or
xor
dec
sbb
xor
ds
and
cmp
sub
and
dec
xchg
mov
sub
stos
stos
xchg
dec
pop
les
addr16
cld
push
bound
sti
fcomp
or
adc
loope
fmulp
in
shl
loope
xor
imul
inc
fsub
mov
xor
sbb
and
lods
push
repnz
jmp
jl
cli
add
mov
push
das
add
call
sbb
push
pop
dec
mov
mov
push
popf
xchg
mov
or
or
clc
push
inc
add
inc
cdq
jae
jecxz
mov
sar
xor
pusha
inc
push
in
mov
dec
mov
sub
jb
clc
mov
inc
and
(bad)
in
push
cmp
dec
mov
xor
mov
in
(bad)
out
push
add
xchg
adc
les
test
popf
shl
mov
ins
xor
inc
(bad)
cli
jg
scas
movs
or
cmp
leave
(bad)
test
adc
or
arpl
sbb
pop
sbb
(bad)
daa
cmp
xor
repz
(bad)
aam
mov
cmp
lea
jnp
mov
cmp
mov
test
push
xchg
pushf
pop
neg
daa
push
cmp
into
outs
pop
add
ror
loop
xchg
mov
mov
(bad)
loope
dec
cmp
mov
adc
sub
scas
pop
or
test
in
cmps
stos
inc
push
scas
mov
cmc
test
sub
test
mov
repz
mov
and
push
das
dec
movs
jmp
adc
aas
out
jns
outs
jle
or
cli
call
mov
retf
lahf
popa
cmp
pop
mov
sbb
dec
sbb
sti
xchg
in
sub
mov
sub
cmp
and
jb
adc
xchg
(bad)
cmp
iret
int3
mov
mov
stos
xchg
cmp
add
push
les
add
cmp
jbe
int
mov
push
pop
cmp
ss
iret
pop
lock
sub
and
cmp
hlt
inc
mov
and
or
in
sbb
out
repz
pop
mov
scas
out
mov
mov
add
std
pop
inc
mov
ret
mov
or
dec
(bad)
fcom
or
ror
fiadd
test
in
pop
data16
pusha
mov
out
pop
imul
jns
push
pusha
sbb
cmp
cmp
xchg
dec
in
mov
mov
or
into
xor
(bad)
stc
loope
push
mov
mov
jae
icebp
sub
jne
out
into
sti
mov
jae
pop
mov
mov
shl
fwait
sar
push
je
cmp
cs
pop
cmp
fucomp
mov
aas
jb
gs
sbb
xor
in
inc
imul
ds
movs
lds
push
cdq
cdq
push
sbb
pop
stos
scas
dec
imul
mov
pusha
cmps
and
cmps
pop
adc
sti
xor
dec
cs
adc
cs
loop
jp
adc
popa
pop
xchg
sub
mov
ret
cmp
sub
push
popf
cld
fwait
pushf
pop
xchg
out
mov
in
mov
xlat
imul
out
retf
lsl
adc
bound
rol
jmp
adc
or
js
les
cmps
xor
jnp
mov
add
rol
mov
call
aam
xor
mov
bnd
sub
dec
out
out
sub
mov
xor
add
ror
mov
stos
les
jl
(bad)
dec
movs
je
fnsave
push
jnp
xchg
xchg
(bad)
aas
daa
cmp
sub
outs
sub
call
jg
cmc
jae
jmp
jmp
popf
xchg
movs
and
mov
inc
shl
pusha
inc
das
les
test
lock
ror
mov
inc
enter
pushf
js
sbb
push
test
loope
out
out
mov
xor
xchg
icebp
jle
ja
mov
cdq
rcl
ss
cld
add
or
jne
sbb
(bad)
mov
clc
bound
dec
fst
xor
or
mov
lock
sub
jl
mov
lock
ret
pop
retf
xor
addr16
push
push
jmp
mov
fxch
sub
push
jnp
fcmovu
cld
movs
es
and
mov
out
xchg
xchg
shl
loope
(bad)
call
pushf
fcmovb
or
mov
cld
fisub
dec
fld
ja
inc
shl
xor
popf
sub
pop
dec
xor
aaa
push
and
jmp
or
inc
pop
push
push
rcl
dec
or
cwde
push
pop
push
in
cmp
push
sub
sti
push
das
daa
jns
aam
and
sti
add
loop
mov
pop
pop
pusha
sbb
popf
movs
pushf
push
outs
mov
jnp
pop
sbb
(bad)
xor
jle
out
mov
dec
or
jge
adc
mov
call
dec
mov
sar
pushf
shl
mov
rcl
retf
dec
cmp
or
ja
mov
call
out
inc
inc
sub
mov
cmc
ret
adc
mov
cmps
lea
call
ret
movs
jmp
mov
stc
fstp
jns
lea
(bad)
fstp
jmp
xchg
jp
or
adc
imul
push
and
pop
sahf
shr
in
adc
xchg
jmp
(bad)
(bad)
addr16
into
mov
(bad)
fstp
mov
pushf
fisubr
stc
inc
cmp
push
mov
mov
mov
stc
fcmovnu
les
enter
inc
nop
xchg
lock
mul
loope
push
pop
add
out
add
lods
mov
cmp
rol
mov
ret
push
rcr
shr
test
mov
stos
fild
mov
xchg
inc
cmp
add
pop
in
test
stc
jecxz
inc
inc
jmp
in
mov
ins
sti
xchg
or
xchg
ss
repnz
pop
adc
push
xor
xor
inc
nop
rcl
adc
mov
jecxz
xchg
test
lods
lahf
push
mov
sti
(bad)
ret
into
xor
fwait
lea
movs
pop
and
mov
repnz
fstp
and
repnz
test
push
xchg
xor
cmc
cmp
push
scas
push
out
and
sub
test
and
push
sbb
push
dec
adc
jmp
outs
jl
aaa
and
jne
test
cmps
and
cmp
inc
in
xchg
push
jne
and
std
test
test
jecxz
sbb
sub
adc
mov
dec
adc
sahf
lods
mov
jl
push
push
lock
loopne
popf
cmp
neg
sub
dec
or
xor
pop
jecxz
jge
jnp
xchg
vmread
jmp
jp
retf
xchg
fisttp
ins
das
jb
add
and
adc
xor
dec
xchg
mov
repz
xchg
mov
jno
mov
sbb
dec
ds
lods
add
mov
or
dec
arpl
push
add
xlat
(bad)
lock
mov
mov
mov
test
add
ror
test
shl
int
imul
icebp
sub
fisttp
lahf
push
std
jecxz
xchg
sub
pop
dec
push
sahf
(bad)
repz
mov
dec
fwait
mov
sub
or
iret
jnp
fcomi
cmps
mov
dec
jnp
and
dec
shl
mov
add
sub
sub
js
push
(bad)
cs
shl
arpl
and
push
ror
(bad)
push
sub
cmp
xor
mov
mov
and
pushf
xchg
dec
jmp
ret
jmp
sub
pop
je
icebp
test
fmul
retf
push
leave
inc
movs
iret
fxch
sbb
(bad)
cmp
pop
ret
(bad)
imul
cs
out
(bad)
fdiv
sub
pop
clc
out
pop
adc
movs
(bad)
pop
test
mov
cmps
push
xor
aas
sub
out
mov
pop
mov
jp
aas
or
sbb
xchg
adc
sub
xor
mov
pop
pop
stc
retf
add
in
push
ja
fld
sar
fs
out
jmp
add
add
movs
bound
push
jo
or
sub
out
xchg
loope
scas
adc
cmp
mov
jo
inc
adc
add
jmp
jae
leave
adc
pop
ficomp
sub
jmp
add
and
xlat
add
mov
jno
mov
daa
pop
mov
pop
pusha
jae
add
fs
push
cmc
fnstsw
imul
pop
loop
push
stc
in
mov
mov
and
jmp
lods
pop
jmp
outs
inc
cmp
fldenv
je
sti
and
mov
pushf
mov
sti
cmps
ret
je
stos
pop
fs
int
push
sub
sub
mov
cmps
xchg
jmp
push
push
ror
sar
cdq
das
in
popf
out
jmp
test
adc
xchg
jns
mov
dec
gs
leave
push
das
sar
jmp
out
pusha
retf
push
(bad)
push
dec
sub
adc
(bad)
js
or
push
dec
push
mov
add
stos
es
sub
push
sbb
mov
imul
rcl
fimul
mov
rcl
imul
push
jne
gs
cmp
jns
pop
fist
loopne
sub
cmps
xor
jae
mov
jmp
lock
imul
out
sbb
pop
inc
jle
test
sbb
jl
cmp
mov
ins
in
xchg
popf
xor
adc
mov
xchg
sbb
add
or
cwde
pop
inc
mov
sub
and
sbb
(bad)
leave
and
push
and
mov
ret
ja
arpl
jge
shr
push
stos
cmp
xor
ret
or
mov
pop
jle
repz
test
pop
or
or
add
sbb
mov
sub
js
ja
popf
sbb
cmp
xor
gs
and
imul
push
lea
cdq
out
mov
je
clc
ror
cmp
mov
or
sahf
cmp
lds
mov
pop
bound
jge
adc
push
lahf
and
jnp
pusha
int
push
pop
sbb
push
push
enterw
fidivr
xchg
cwde
cmc
outs
and
lds
lods
jo
clc
cmp
or
dec
pop
push
enter
jecxz
mov
pushf
xor
(bad)
cwde
pusha
jnp
rcr
push
mov
xchg
je
jecxz
test
mov
inc
add
inc
push
or
mov
mov
inc
dec
shr
push
fwait
jl
pop
and
add
and
push
mov
movs
pusha
dec
cmps
push
aad
ret
inc
mov
cwde
int3
adc
sbb
push
mov
add
cmps
fistp
loope
cld
sub
inc
sub
pop
lds
add
or
jecxz
jae
out
xor
mov
dec
enter
test
test
jmp
inc
dec
inc
lods
pop
mov
out
xor
outs
push
sub
jne
sbb
jno
jecxz
loopne
test
and
ja
shl
jns
into
xor
push
ficom
add
xchg
ds
pop
outs
test
into
jl
sub
push
pop
xchg
mov
push
adc
adc
and
cld
lock
loopne
cwde
pop
loopne
mov
sub
out
inc
pushf
outs
jo
neg
daa
rol
mov
fcmove
mov
lock
dec
dec
add
mov
lods
movs
shr
mov
or
and
cmp
hlt
shr
push
pop
lea
cmp
xchg
retf
mov
or
addr16
lods
icebp
les
(bad)
jmp
ds
xor
retf
xor
pushf
into
mov
(bad)
das
push
mov
jp
in
mov
jmp
dec
popa
jg
fsub
lock
pop
in
adc
lock
adc
pop
mov
lahf
add
lds
or
mov
dec
push
or
or
push
xor
popa
mov
adc
or
(bad)
mov
inc
sahf
int
push
outs
push
into
(bad)
call
out
repnz
sub
push
cld
jnp
(bad)
stc
mov
aas
cmc
pop
fmul
inc
dec
int3
xor
out
sahf
xlat
jecxz
mov
clc
inc
xlat
ja
shl
int
jle
mov
scas
sub
and
enter
sub
jno
out
inc
clc
mov
scas
pushf
dec
sub
dec
imul
pop
shr
ret
icebp
or
popa
pop
enter
xchg
cmp
cmp
push
add
cmp
ror
sub
or
loopne
add
call
ds
mov
aam
lock
cmps
add
adc
cmp
ja
dec
or
outs
ins
or
cmp
std
popa
iret
xchg
mov
pushf
inc
popa
cmp
call
xchg
inc
aas
inc
pop
mov
dec
outs
rcl
mov
push
push
(bad)
loope
pop
push
mov
sahf
not
das
aas
test
mov
mov
push
retf
ret
mov
popa
add
loopne
je
in
sti
add
push
sub
jp
call
lods
dec
pop
xchg
in
and
dec
and
push
imul
(bad)
sbb
arpl
or
mov
ror
(bad)
cmp
pop
fisttp
repnz
call
xor
mov
adc
cmp
clc
dec
add
jmp
les
mov
jns
(bad)
xchg
call
and
jnp
or
cmps
inc
and
jge
dec
test
and
inc
daa
and
xchg
pop
push
push
jns
ret
xchg
adc
addr16
mov
popf
in
add
fild
and
mov
cmp
add
bound
dec
or
cmp
and
into
jns
xor
inc
adc
inc
fcomp
dec
mov
jae
cld
lahf
pop
jp
addr16
jo
jae
mov
shl
xlat
retf
fwait
out
sub
cli
mov
xchg
mov
mov
sub
push
and
in
nop
or
mov
jecxz
imul
jae
xchg
call
sub
(bad)
out
sbb
sbb
mov
mov
iret
and
add
(bad)
test
call
daa
xlat
sub
xchg
stc
shr
mov
test
enter
aad
mov
rcr
repz
push
sbb
jae
out
popa
mov
add
jo
loope
div
lods
ds
pop
in
add
xor
pslld
xor
(bad)
ja
pop
mov
add
or
cmp
mov
scas
and
(bad)
jl
std
movs
aam
jo
es
mov
lods
push
add
fdivr
push
mov
jp
bound
ja
(bad)
push
dec
jae
fcmovne
out
mov
pop
inc
sub
fs
in
ret
and
cld
push
pusha
fs
xchg
push
push
dec
cmc
xor
and
je
cmps
jo
and
pop
xor
push
hlt
dec
lahf
stos
in
pop
out
inc
mov
dec
mov
pop
cmp
pop
jns
loop
jae
out
and
int3
call
sahf
jbe
cs
inc
idiv
nop
pop
pop
dec
imul
test
dec
sbb
gs
lods
pop
pop
jmp
mov
jb
pop
cmps
sar
sbb
xchg
test
popa
retf
mov
xchg
jmp
mov
or
xor
mov
inc
retf
mov
push
arpl
mov
in
pushf
dec
imul
ret
cmp
xor
xlat
outs
fisttp
sub
sub
enter
mov
bswap
lods
and
outs
sbb
dec
mov
mov
pop
daa
stos
xlat
push
es
cmps
mov
mov
ins
pushf
mov
pop
inc
jmp
sbb
bound
jge
cmp
adc
clc
(bad)
xchg
leave
mov
jnp
jmp
sbb
jge
(bad)
sbb
ret
add
add
leave
repnz
es
shr
xor
mov
mov
lahf
scas
or
lea
aam
dec
ror
and
in
cld
jnp
test
loope
sar
addr16
inc
mov
mov
and
xchg
sbb
xchg
test
aad
adc
das
jns
mov
bnd
mov
fsubr
popf
clc
mov
jg
loop
jmp
imul
dec
jmp
lds
mov
int
jnp
push
arpl
mov
movs
xor
and
and
ret
push
imul
pop
popf
icebp
or
popa
inc
loope
mov
les
mov
or
imul
or
inc
mov
jns
enter
in
(bad)
mov
push
mov
imul
dec
pop
xor
push
adc
call
sub
add
sub
in
push
hlt
dec
stos
outs
(bad)
and
shl
mov
mov
inc
ds
fistp
fldenv
or
imul
sub
mov
inc
out
(bad)
jp
das
jnp
inc
xchg
cld
pushf
xlat
xlat
xor
mov
dec
mov
xchg
or
or
mov
jp
and
mov
inc
cdq
scas
aad
sysexit
mov
push
in
lods
xchg
(bad)
pop
add
outs
xchg
xchg
(bad)
pop
shl
cld
push
lds
jmp
mov
aam
inc
mov
mov
out
xor
les
mov
pop
push
loopne
mov
xor
sub
cmp
shr
pop
mov
mov
test
les
mov
or
or
jno
js
int
and
push
pinsrw
mov
push
push
(bad)
mul
pop
into
mov
push
jmp
in
or
loopne
imul
outs
cmc
movs
xor
add
pop
popf
sbb
in
xor
cmp
mov
cmps
mov
push
sub
pop
or
xor
jg
adc
shl
cdq
mov
rcr
addr16
ss
retf
inc
add
xlat
out
and
shl
sbb
je
jmp
jnp
nop
push
jmp
fucomi
cmps
xchg
dec
(bad)
loop
mov
or
out
mov
repz
fs
dec
(bad)
dec
push
inc
add
(bad)
pop
sbb
loopne
cmps
sub
jno
xchg
xchg
aad
cdq
(bad)
lock
mov
push
stos
jmp
pop
loop
add
mov
pop
or
or
push
scas
jl
retf
and
rcl
gs
jge
and
inc
inc
inc
mov
ret
dec
mov
xchg
cmps
xchg
inc
xchg
mov
jmp
xchg
sbb
fist
fnstenv
pop
imul
mov
xor
add
adc
sub
les
cmps
nop
scas
idiv
test
mov
xor
add
pushf
(bad)
lock
out
ss
movs
adc
ds
mov
lods
pop
mov
fist
inc
int3
mov
imul
mov
pop
rol
xchg
xor
cmp
adc
cmp
pushf
mov
fdiv
and
sti
push
jp
fadd
lods
mov
sbb
data16
and
iret
fs
daa
aas
in
mov
pop
and
out
and
adc
sar
les
clc
sub
in
pop
fwait
adc
(bad)
jmp
jle
sahf
sbb
push
mov
ds
cmp
push
stc
or
and
movs
mov
mov
xchg
ds
inc
outs
add
loope
int
mov
dec
mov
pushf
iret
and
adc
or
mov
and
in
ins
pusha
ins
dec
pop
movs
xor
loop
mov
nop
cmp
add
ret
bound
or
adc
ror
cmp
xor
or
push
jp
jns
mov
xor
(bad)
inc
cmp
or
mov
and
mov
sbb
pop
mov
cs
push
jo
dec
dec
stos
sti
test
ret
add
dec
imul
or
inc
jg
sbb
add
loope
add
cmc
add
icebp
pop
mov
outs
push
icebp
mov
aad
test
dec
sbb
mov
into
mov
adc
ja
dec
add
add
popa
jno
inc
or
mov
pop
mov
push
(bad)
pop
or
in
sub
fnstcw
inc
js
das
adc
fbstp
cmp
mov
jae
mov
adc
das
sar
add
jl
adc
and
inc
pop
mov
fucomp
mov
(bad)
push
scas
xchg
(bad)
jb
in
xchg
push
mov
movs
gs
movs
jmp
bound
fs
ins
sahf
outs
xor
sbb
bound
mov
jmp
xchg
fucomip
adc
add
aad
and
mov
xchg
inc
movs
mov
lock
mov
add
jmp
mov
lea
outs
xchg
xor
fwait
jmp
in
stos
(bad)
cwde
mov
adc
pop
test
gs
mov
jae
pop
cdq
bound
sub
popf
adc
outs
ror
dec
mov
loopne
fisub
repnz
and
push
jmp
xor
sbb
dec
mov
rcl
test
cmp
in
cmc
xchg
jnp
ds
and
clc
adc
mov
xlat
icebp
xchg
rol
ins
lods
mov
xor
pop
fs
test
addr16
sti
fcom
inc
inc
cmc
cwde
inc
sub
or
push
or
ins
inc
es
adc
test
das
popf
out
push
or
jmp
pop
in
fsub
mov
dec
sub
hlt
dec
jno
ror
out
push
jecxz
aaa
lock
imul
mov
test
sahf
mov
and
mov
inc
mov
pop
pop
div
dec
jne
neg
add
enter
cs
xor
xchg
mov
out
sbb
cmp
dec
arpl
iret
fs
push
daa
sbb
mov
add
push
jae
mov
mov
imul
jno
das
cmp
mov
push
fdiv
retf
stos
dec
lock
pop
inc
lock
jmp
clc
mov
cmp
push
std
pop
mov
jmp
out
sbb
aad
gs
mov
sub
cmps
popf
es
push
stos
cmps
fcomip
sbb
in
jbe
cdq
mov
xor
aad
jg
lock
jbe
ror
test
out
ins
xor
xlat
nop
xor
push
pop
popf
inc
fs
push
push
ror
sub
aam
les
icebp
jne
movs
sbb
in
jmp
jae
test
sub
inc
add
add
adc
call
jo
xor
lahf
or
sbb
cld
ret
jmp
pop
push
sub
mov
mov
icebp
or
or
mov
jae
popa
xor
jmp
adc
or
push
ins
imul
xchg
call
pusha
clc
sbb
aaa
test
push
movs
push
cmps
test
adc
daa
fst
aas
jae
adc
gs
push
std
or
scas
popa
arpl
std
mov
mov
cmp
mov
pop
imul
cdq
(bad)
sar
ins
gs
cmp
fidiv
test
mov
idiv
inc
std
dec
iret
fs
div
call
jo
aaa
out
pop
jl
cld
jmp
mov
or
mov
mov
das
leave
pop
and
scas
and
cmp
sbb
pop
jns
shl
jmp
pushf
and
fwait
adc
shl
pop
aam
fwait
test
mov
out
and
inc
sbb
ja
jmp
jle
data16
cld
cli
jb
or
pushf
mov
add
fstp
push
mov
sbb
cmp
popa
into
jp
rcl
or
enter
inc
mov
rcl
mov
mov
loope
ror
pop
lds
loope
jno
add
retf
pop
cld
int
std
jle
jns
adc
dec
sbb
(bad)
popf
jbe
pop
sahf
mov
fdivr
and
xchg
sub
or
push
sbb
loop
test
sbb
ins
(bad)
stc
loope
call
sbb
fidivr
sbb
aaa
jno
outs
movs
call
jmp
and
cmp
sub
jg
sub
mov
pop
cmp
inc
retf
shl
sahf
lods
adc
shl
xlat
xor
mov
push
jmp
push
xlat
clc
or
cmp
jg
add
push
pop
cmc
fistp
pop
cld
jl
dec
addr16
sub
sub
(bad)
push
sbb
cmps
pop
sti
int
xor
movs
pop
mov
adc
mov
popa
int3
or
movlps
jmp
fisttp
adc
xchg
jo
jl
mov
mov
cmp
scas
stos
int3
cmp
adc
jl
outs
adc
cmp
push
cmps
mov
dec
mov
push
cli
xor
sub
add
adc
cmp
mov
add
(bad)
fcmovb
lds
xchg
xchg
stc
mov
adc
jmp
add
outs
dec
scas
inc
jnp
adc
pop
paddusb
fsubr
int
xor
add
push
push
sbb
mov
push
or
dec
push
daa
das
inc
mov
pop
repnz
cmp
test
lahf
jp
xor
xor
adc
loop
popa
out
mov
sbb
push
cmp
mov
pop
das
dec
loope
nop
inc
fild
fidiv
mov
(bad)
in
lods
cs
xor
js
jg
scas
jnp
es
fimul
mov
retf
scas
int3
data16
loop
dec
sbb
nop
xlat
mov
adc
ins
ins
xchg
and
std
retf
mov
pop
loope
mov
in
jmp
fistp
mov
loopne
and
and
pop
cmp
sahf
in
(bad)
(bad)
sub
fcom
sbb
ins
clc
bound
aaa
inc
jb
mov
stc
push
adc
push
rol
in
iret
cmps
and
ret
mov
pop
fs
loop
out
pop
sti
popf
dec
cs
xor
or
add
xchg
inc
sbb
jbe
(bad)
cli
push
mov
mov
jl
dec
sub
jo
pop
stos
movs
xchg
and
sub
scas
jns
mov
add
mov
rcr
xchg
pusha
mov
cli
add
les
loope
mov
and
xor
ins
div
xor
dec
mov
sub
(bad)
lahf
xchg
(bad)
push
cmps
test
or
fsubrp
and
or
adc
xchg
inc
jnp
aam
mov
push
pop
sub
leave
(bad)
xchg
jno
test
xor
jne
or
rcr
mov
mov
jno
inc
and
jae
mov
push
cld
mov
mov
shr
lods
xor
push
out
dec
pop
lahf
cmc
rcl
mov
dec
test
not
add
mov
mov
push
push
mov
enter
sbb
mov
inc
jnp
mov
iret
dec
fnstsw
sbb
cmps
icebp
dec
push
jle
cdq
in
arpl
mov
clc
call
and
out
sbb
adc
cmp
pop
out
aaa
movs
push
scas
mov
push
ins
mov
push
daa
stos
or
lock
(bad)
jge
adc
jle
out
lock
sbb
fwait
and
or
push
shl
sub
xchg
adc
adc
jmp
movs
adc
lods
dec
loope
mov
js
jp
push
rcr
push
mov
push
cmp
sti
scas
scas
xchg
jbe
ins
ins
iret
mov
push
loope
jb
iret
ret
and
pop
add
int
sbb
call
int
adc
clc
sahf
repnz
cs
das
mov
std
pop
popa
xchg
adc
cmps
sub
mov
dec
jno
adc
or
stc
mov
(bad)
cli
pop
inc
push
fwait
and
and
repnz
jbe
add
les
sahf
cmc
ins
mov
pop
cdq
ror
ss
mov
popf
pop
xchg
(bad)
in
jne
outs
or
pop
or
int3
mov
inc
aam
xchg
dec
inc
cmps
sbb
lods
(bad)
cmp
fadd
adc
pop
xchg
inc
xchg
cmp
jecxz
int
gs
mov
jmp
mov
adc
push
shr
mov
mov
or
or
jne
sbb
cwde
sbb
call
repnz
adc
xchg
iret
or
sbb
dec
pop
shl
sbb
pop
dec
call
jg
int
cmp
pop
push
scas
mov
cmc
mov
stc
xchg
cmp
push
mov
in
ins
or
lahf
mov
test
inc
scas
test
and
lahf
xor
cmp
xor
dec
sbb
push
pop
cmp
sahf
mov
ins
mov
test
or
push
sti
jecxz
or
push
dec
dec
add
push
xor
int3
iret
dec
int3
pusha
and
jbe
jbe
push
div
inc
pop
cmp
and
sbb
out
fidivr
pop
dec
pop
(bad)
mov
dec
ficom
mov
or
pushf
lahf
push
sti
sbb
aad
retf
adc
jae
mov
int3
xchg
daa
je
adc
inc
out
stc
jb
int
mov
test
sub
(bad)
xlat
and
or
vmovd
sbb
mov
mov
stc
xchg
(bad)
mov
imul
repnz
adc
das
call
push
xor
int3
imul
inc
ret
sti
sbb
push
sbb
sar
dec
sahf
not
mov
daa
inc
xor
xchg
jge
jl
loope
or
jl
xor
outs
rcr
and
pop
outs
fdivr
out
(bad)
push
test
cmp
push
mov
int
ins
mov
cwde
lods
or
addr16
pop
(bad)
xor
mov
xor
adc
jmp
xor
sahf
add
pop
arpl
push
or
xor
sbb
xor
out
nop
int
aad
push
repz
in
mov
cmp
inc
jb
mov
aam
faddp
xchg
inc
mov
jl
ja
div
inc
sub
mov
cmps
pusha
mov
arpl
(bad)
sub
or
or
popa
mov
das
lock
and
mov
mov
scas
mov
adc
sti
pop
mov
dec
push
inc
push
movs
aas
mov
ret
js
imul
cmp
leave
dec
ins
ds
int3
clc
dec
inc
jl
and
shl
loopne
adc
sbb
imul
fcomp
mov
hlt
push
sub
test
push
aad
mov
cmp
fld
push
sub
faddp
lods
ret
ds
jl
jne
inc
mov
aaa
cdq
in
dec
neg
adc
mov
call
dec
aam
pop
sbb
xchg
xor
gs
(bad)
loopne
mov
add
imul
dec
and
in
mov
jl
sub
xlat
ret
lods
shr
xchg
mov
inc
xor
pop
lods
jne
pop
mov
div
daa
cmc
into
scas
sti
jne
imul
mov
scas
ds
add
sahf
shrd
pop
mov
mov
ins
sahf
out
call
jp
mov
xor
mov
shl
xor
xchg
mov
sbb
cmp
mov
or
mov
test
add
call
push
fisttp
pop
inc
enter
sbb
inc
dec
dec
push
pop
sub
fsubr
push
cmps
or
test
test
or
mov
jo
addr16
mov
xor
xor
popf
int
mov
shl
retf
jbe
retf
in
dec
cmp
loope
imul
(bad)
outs
sbb
mov
test
sbb
inc
clc
or
inc
or
daa
jle
mov
sbb
out
cs
call
rol
loope
xor
jbe
or
std
inc
push
or
loopne
lahf
cld
(bad)
xchg
jns
add
mov
adc
in
dec
xor
in
imul
or
xor
imul
add
push
fstp
push
or
inc
(bad)
call
movs
jo
inc
dec
mov
sbb
xchg
push
mov
or
out
(bad)
adc
ret
push
aaa
mov
and
jnp
cmc
(bad)
test
push
push
call
test
xchg
lock
iret
daa
cli
loopne
in
push
mov
xor
mov
jle
mov
popf
loope
dec
jmp
or
(bad)
mov
push
xchg
add
add
push
jae
adc
movs
fist
dec
inc
pop
inc
adc
stos
loopne
xchg
sbb
cs
enter
outs
jo
aas
enter
call
or
add
mov
add
push
pop
ja
add
jne
mov
aaa
dec
jmp
repz
and
cmp
les
leave
pop
xchg
push
or
fsubrp
ret
je
jne
adc
sar
sub
xor
stos
cli
inc
test
xchg
inc
fsub
sar
add
mov
leave
mov
icebp
xchg
sti
(bad)
int
mov
dec
cmps
retf
adc
call
nop
xor
mov
hlt
js
mov
fs
jo
pop
in
cmp
fst
sub
cmp
ret
iret
xor
mov
jmp
lea
push
inc
mov
sahf
repnz
jg
push
mov
aas
out
cmp
sub
adc
lahf
test
jmp
fisubr
jecxz
mov
push
test
clc
mov
fld
adc
lods
or
outs
cmps
mov
fnsave
mov
mov
pop
lods
pop
push
jno
adc
mov
or
test
mov
add
adc
adc
xor
sub
mov
popa
or
je
adc
inc
daa
or
mov
push
fcomp
(bad)
cmp
mov
ins
mov
scas
adc
fsubr
in
push
call
clc
aam
mul
inc
mov
jl
mov
call
inc
lea
ret
mov
cmp
adc
push
adc
pushf
dec
jnp
retf
xchg
rol
ins
sar
jmp
xor
clc
leave
xor
jge
and
retf
cmp
cmp
js
mov
inc
shl
jne
pop
add
sub
jae
cmp
jne
fcom
stc
bound
ret
inc
mov
fscale
inc
imul
mov
jb
iret
lahf
clc
dec
dec
mov
xor
dec
sbb
ds
leave
(bad)
adc
push
jo
add
jne
cmp
mov
scas
mov
pop
push
fisttp
dec
push
aam
into
mov
or
je
adc
push
outs
push
push
shl
das
ret
fs
pop
loopne
in
fs
ret
adc
pop
adc
xchg
mov
cmp
mov
out
jmp
dec
iret
lock
(bad)
sbb
or
sub
shl
xor
(bad)
leave
(bad)
jg
xor
dec
jo
aam
jmp
call
bound
push
cli
push
das
and
or
sub
pop
cmp
and
jnp
mov
ficomp
xchg
es
jg
xchg
sub
mov
leave
jno
xchg
mov
(bad)
inc
pop
pusha
cmp
jo
cld
cmp
lods
pop
(bad)
push
mov
push
movs
imul
ret
mov
cld
mov
ss
sub
dec
imul
jp
ja
inc
jl
lds
cmps
pop
leave
loope
jp
or
jmp
or
or
(bad)
jmp
pop
lahf
xor
fwait
jo
gs
sub
retf
(bad)
shl
dec
loopne
sub
stos
shl
ins
and
jmp
xchg
test
ds
test
shl
frstor
cmp
div
mov
(bad)
adc
ret
cld
das
add
(bad)
fld
test
inc
dec
out
xchg
sub
fiadd
popa
adc
cmp
sbb
(bad)
xchg
inc
cmp
jbe
push
inc
stos
cmps
mov
(bad)
push
and
sbb
jmp
cwde
push
call
sub
sub
adc
mov
cmp
push
mov
push
gs
cmp
and
pop
sbb
cli
retf
aaa
test
pop
cmps
(bad)
push
rcl
fs
mov
lods
ss
mov
out
inc
push
dec
push
cmpps
fcom
retf
fcom
pop
test
fwait
mov
scas
fs
dec
pop
add
das
aam
in
(bad)
outs
mov
cmc
sub
adc
mov
xor
cmp
jg
mov
ret
push
ficomp
rcr
mov
loopne
stc
(bad)
jecxz
or
add
cmc
xor
adc
jo
lock
ins
adc
in
cmp
popa
push
and
clc
adc
cmp
in
popa
lahf
adc
leave
neg
aad
test
imul
mov
jle
push
jg
jb
xor
sub
lock
mov
cmps
test
test
imul
call
xchg
sub
dec
bound
mov
jne
nop
ret
adc
repz
call
adc
(bad)
adc
movs
repnz
adc
pop
cmps
dec
ins
add
cli
mov
sbb
loopne
adc
push
fidiv
lea
mov
or
cli
cmp
jne
pop
add
mov
xchg
push
imul
sub
loopne
push
fnsave
repnz
adc
mov
xor
lods
mov
test
push
and
(bad)
jb
(bad)
or
jge
lods
pusha
int
or
in
popa
sub
pop
jp
xor
push
mov
push
hlt
ins
fmul
jbe
add
cwde
mov
mov
xor
inc
xlat
nop
push
add
jno
ror
pop
sub
xchg
into
xor
adc
stos
enter
fldcw
out
or
in
in
ins
or
popa
mov
cli
dec
pop
shl
in
test
je
push
push
(bad)
adc
push
loopne
or
cmp
mov
pushf
inc
xchg
mov
push
jae
mov
mov
ins
pop
mov
test
adc
outs
(bad)
iret
js
test
adc
or
lds
inc
cmp
inc
pushf
cmp
pushf
push
sub
xchg
jae
int
mov
nop
in
push
into
shl
lahf
and
jecxz
mov
add
retf
jmp
or
repz
imul
addr16
sbb
pop
sub
or
push
outs
pop
mov
pop
and
xor
(bad)
je
(bad)
push
sub
xor
or
xlat
mov
pop
cmp
inc
ds
shl
inc
sahf
pop
mov
in
jmp
pop
repnz
mov
cwde
cmp
mov
hlt
push
in
out
aad
inc
not
or
dec
pop
stc
jno
inc
jb
push
mov
mov
or
(bad)
jae
sbb
dec
out
push
sub
cmp
pop
(bad)
outs
cmp
fstp
add
leave
push
ja
mov
es
scas
jecxz
mov
and
sbb
arpl
pop
mov
push
jp
pop
or
xor
jmp
pushf
xchg
or
out
dec
mov
add
push
ror
lds
pop
inc
or
frstor
inc
sub
lods
mov
dec
mov
test
dec
pop
pop
cmp
fs
mov
mov
push
xchg
mov
push
loop
push
pushf
jp
cld
mov
out
xor
ja
push
retf
dec
pop
cmp
mov
inc
daa
pop
int
lahf
mov
mul
movs
mov
test
dec
add
add
test
ret
test
and
data16
mov
add
mov
lods
lods
add
xor
inc
jns
xlat
retf
retf
or
push
shr
dec
movs
or
je
push
fwait
std
or
out
movs
jb
adc
jg
sub
fidiv
loop
mov
stc
jmp
out
mov
hlt
push
xchg
adc
jnp
stos
mov
imul
clc
loope
pop
mov
xlat
add
pop
and
mov
xlat
outs
sub
pop
jmp
sti
sub
lock
xor
loop
frndint
cld
cld
mov
xchg
and
push
in
fist
call
bound
mov
int3
das
pop
pop
call
rol
(bad)
sbb
and
push
xchg
pop
xchg
imul
inc
loop
fwait
cwde
sbb
mov
fsubr
add
mov
and
adc
(bad)
cld
out
xor
and
fdivrp
scas
push
dec
push
cmp
in
popf
xor
jnp
jecxz
pop
pop
jecxz
es
mov
mov
pop
cmp
retf
pop
xchg
mov
jmp
dec
ins
jb
mov
add
lea
add
cmc
push
clc
test
mov
cmp
hlt
mov
outs
mov
jge
jmp
fld
leave
daa
push
ja
xor
cwde
sbb
loopne
in
mov
and
and
int
test
jbe
in
push
sub
loop
push
jb
out
test
cmp
jge
das
int
test
call
(bad)
xchg
aas
mov
iret
ds
adc
aam
cwde
mov
mov
nop
sub
mov
pop
inc
adc
cmp
mov
pop
lods
imul
cmp
test
(bad)
fmul
add
outs
(bad)
mov
out
rcl
js
sbb
jno
cmp
adc
or
sbb
inc
add
cli
(bad)
fldcw
xor
popw
dec
jae
jnp
cmp
inc
push
mov
inc
xchg
fnsave
stc
ins
mov
adc
mov
or
xor
push
sub
push
lahf
xchg
cmc
fs
sbb
dec
icebp
popa
repz
push
lea
pop
fcmove
sub
push
iret
hlt
mov
(bad)
mov
jno
and
je
or
std
rol
(bad)
sti
dec
pop
dec
inc
xchg
mov
push
fs
addr16
and
jl
mov
pop
push
xor
ret
test
xlat
adc
(bad)
or
jge
imul
popf
sub
fisttp
dec
sub
lahf
(bad)
in
fs
and
add
pop
cwde
in
mov
icebp
iret
das
cdq
add
push
ds
inc
loop
movs
cmc
int3
or
sbb
cmps
jmp
jle
(bad)
mov
cdq
lods
int
arpl
sbb
and
sbb
movs
clc
out
cmp
jo
aaa
xor
into
fiadd
addr16
outs
das
inc
and
push
inc
sbb
and
addr16
es
push
fdivr
add
pop
mov
adc
loop
cwde
push
xchg
std
js
loope
in
sbb
adc
cmp
sub
mov
dec
and
push
outs
sti
adc
shr
jp
mov
fst
in
xor
fst
movs
sub
cwde
jp
mov
dec
leave
fild
mov
inc
fucomip
mov
mov
test
pop
lods
imul
add
xor
in
sbb
hlt
xchg
leave
cmp
stc
dec
mov
mov
jnp
and
push
aas
mov
mov
clc
repnz
out
(bad)
pop
push
std
loopne
push
push
jmp
xchg
jmp
adc
std
or
dec
mov
leave
push
sub
push
xchg
sbb
or
pushf
loope
mov
aaa
daa
dec
aaa
mov
or
jns
pop
cld
sbb
pop
loope
retf
jns
lahf
imul
or
int
int
cmp
or
adc
and
std
dec
out
xlat
std
out
xchg
sti
rcl
or
cwde
and
mov
sbb
xor
inc
(bad)
jecxz
xlat
cmps
sub
enter
add
es
lds
dec
push
pop
inc
xchg
lahf
add
fwait
ins
jne
mov
movs
and
xchg
jecxz
(bad)
inc
scas
mov
lods
mov
mov
jge
into
xchg
pop
sub
jge
sbb
in
test
or
xor
pop
sbb
movs
aaa
test
mov
xchg
in
(bad)
pop
cdq
mov
ja
xchg
mov
scas
mov
sub
gs
out
cmp
xchg
add
pop
sti
xchg
out
mov
imul
or
(bad)
dec
add
cmp
popa
test
pop
icebp
in
push
outs
adc
loope
hlt
ficomp
or
add
xor
gs
and
xchg
in
cmovp
lods
jne
lock
add
sub
sub
mov
pop
cdq
pop
out
cmp
sbb
aas
sbb
dec
scas
test
nop
in
sbb
sbb
dec
mov
adc
scas
jnp
add
inc
shl
adc
inc
aad
call
dec
xchg
daa
xor
dec
cwde
imul
or
jns
or
pop
push
inc
mov
cld
jb
ror
or
inc
xchg
add
jne
inc
xchg
jge
ficomp
sub
pop
inc
mov
icebp
fcmovne
iret
nop
mov
cs
retf
gs
pop
add
and
mov
loope
sbb
daa
call
xchg
mov
push
xor
and
mov
xor
cmps
push
jae
mov
add
sahf
stos
xchg
mov
inc
push
fs
mov
out
inc
dec
pop
fidiv
pop
adc
mov
pop
jbe
mov
push
jp
ss
mov
xor
lock
inc
fld
pop
fidivr
xchg
repnz
xor
jg
adc
cwde
outs
mov
in
mov
mov
inc
or
or
mov
lods
pop
xchg
push
adc
sub
std
lea
js
cs
inc
clc
sub
sub
mov
ficomp
ins
icebp
jmp
xchg
fsubr
nop
add
add
sub
sbb
scas
sub
add
int3
test
sbb
rcl
stos
sbb
pop
cmp
jno
inc
lock
stos
jmp
xor
(bad)
mov
shl
retf
mov
xor
cli
out
inc
in
hlt
mov
push
push
mov
push
in
adc
ss
adc
dec
(bad)
cwde
sub
cmp
jge
sbb
aam
mov
call
fmul
inc
stos
and
in
push
adc
mov
sar
rdmsr
mov
dec
ds
sub
out
sahf
mov
pop
push
mov
inc
add
sub
jmp
test
pop
jecxz
xor
or
mov
pushf
in
lahf
shr
push
enter
inc
stc
xor
inc
push
sar
ins
mov
sbb
outs
movs
pop
jmp
xor
xchg
jle
imul
je
mov
xor
rol
imul
movs
ins
xchg
loope
mov
pop
cwde
push
mov
clc
jnp
cs
je
gs
add
cmp
call
imul
sbb
imul
push
test
std
fwait
mov
push
iret
popa
xchg
mov
cs
pushf
popa
outs
mov
mov
arpl
dec
fisub
adc
sbb
js
xor
pop
mov
jne
in
jne
repz
mov
add
and
jge
rcr
cmp
xor
or
dec
push
in
nop
xor
mov
dec
adc
lods
mov
push
xor
in
sub
ret
mov
and
mov
dec
je
repz
lds
dec
ins
mov
(bad)
es
xchg
xor
adc
adc
mov
retf
loop
fnsave
sar
mov
push
pushf
mov
loope
pop
mov
or
pop
fild
ror
mov
jo
in
xlat
mov
xchg
or
test
adc
sbb
add
dec
in
add
sti
rcr
retf
sub
lahf
cmps
repnz
mov
adc
jmp
dec
enter
fsub
jp
jecxz
dec
add
inc
(bad)
push
popf
addr16
test
fld
mov
ins
ret
sub
popa
in
ret
in
sbb
push
xor
sbb
bound
push
jne
jmp
stos
pop
psubsw
cld
stc
sbb
adc
jge
jae
mov
dec
jbe
sbb
movs
xchg
aas
retf
fild
xlat
(bad)
push
rol
mov
mov
stos
cmp
scas
fwait
stos
ret
out
xchg
jmp
cwde
in
es
mov
jp
mov
and
push
daa
icebp
fdivr
push
sub
mov
out
fwait
mov
lods
dec
jle
push
mov
pop
xchg
movs
mov
mov
cmc
rcr
scas
ins
mov
mov
dec
repnz
sub
out
in
scas
pushf
push
add
jge
cmp
xchg
popa
sbb
shl
bound
nop
push
cmp
jnp
mov
xor
in
inc
jge
int3
inc
add
in
or
mov
ret
cmps
sub
fwait
push
jns
pop
cmp
icebp
ror
push
idiv
mov
imul
jns
bound
fucom
adc
or
aam
cld
inc
pop
cmp
inc
ja
jno
loopne
sbb
mov
mov
push
or
outs
xchg
adc
add
les
jns
pop
lods
test
test
fsub
iret
xchg
pop
jge
test
pop
cmp
test
mov
ja
sahf
ret
shr
cmp
mov
stc
jg
in
mov
int
les
pop
xor
aad
ficomp
add
imul
les
les
scas
stc
mov
cli
iret
mov
call
test
rol
in
test
xchg
push
sub
pushf
mov
ins
sahf
shl
dec
mov
mov
xchg
retf
and
jl
pop
cdq
mov
mov
jl
mov
ret
ret
nop
imul
add
mov
xor
push
ins
mov
xchg
(bad)
cli
pop
dec
push
outs
pop
jmp
dec
inc
jp
or
retf
pop
mov
(bad)
sahf
(bad)
ficomp
sar
mov
out
jle
retf
out
stc
lea
or
in
jns
cwde
cmp
lock
sbb
cmp
fadd
mov
adc
xchg
mov
retf
lahf
ret
mov
mov
mov
push
jae
inc
inc
addr16
sbb
outs
out
jno
stos
pop
jge
add
xchg
sbb
xlat
push
inc
and
mov
cmp
push
pop
popa
adc
jmp
in
es
adc
and
dec
aad
fdivr
add
aas
ss
arpl
push
pushf
xlat
pop
and
cmps
jo
je
xchg
lea
daa
sub
xchg
dec
in
int
cmps
movs
sub
imul
outs
cmp
out
and
int3
(bad)
adc
or
mov
mov
aaa
push
mov
ror
push
out
jecxz
test
add
bound
push
bound
das
fisubr
mov
shl
popa
or
bound
fld
mov
pop
(bad)
(bad)
and
pop
xor
xchg
jb
mov
jecxz
jo
mov
mov
xor
in
das
aam
inc
ins
xor
mov
loop
mov
fsubr
stos
aaa
adc
mov
movs
and
jo
jae
js
inc
cmp
jmp
ins
mov
out
or
and
fst
mov
js
jno
rcl
ja
jl
dec
push
jb
or
jno
ret
push
adc
or
xor
aad
mov
gs
loope
std
es
or
pusha
into
shl
push
hlt
inc
fidivr
pop
nop
inc
mov
sti
pop
(bad)
mov
and
jl
xor
inc
shl
sbb
xchg
repz
mov
popa
mov
test
push
jg
cmps
xor
(bad)
mov
adc
adc
sbb
ret
sti
pop
jge
xor
inc
pop
(bad)
push
cmp
lahf
in
mov
les
ffreep
adc
pop
imul
popf
and
xor
push
sti
mov
out
scas
sbb
cli
push
cmp
pop
mov
lods
dec
clc
jg
imul
mov
mov
fstp
mov
mov
add
mov
js
out
xchg
test
lock
repz
push
retf
shl
in
(bad)
leave
bound
mov
mov
xor
pushf
nop
ins
push
add
repnz
lds
push
push
push
cmp
xchg
imul
pop
lahf
push
rcr
cmp
div
xchg
xor
add
popa
push
mov
shr
sub
icebp
mov
and
mov
jno
scas
sub
aam
sbb
cdq
arpl
add
lods
push
ja
aas
lods
outs
or
mov
adc
push
or
lds
cmp
or
cdq
and
neg
cs
popf
sbb
dec
in
pop
xchg
imul
aad
inc
test
adc
sti
or
fs
(bad)
movs
cmc
icebp
movs
hlt
push
cmc
mov
(bad)
movs
pop
mov
outs
add
and
inc
xlat
or
adc
mov
xor
les
mov
out
in
pop
fadd
or
shr
cmp
ja
scas
cmp
cmp
packsswb
les
ret
fs
xlat
cli
mov
jg
or
or
inc
sub
in
mov
test
xchg
fild
in
(bad)
inc
loop
dec
cmp
sbb
js
pop
mov
dec
mov
jp
fadd
test
(bad)
stos
test
(bad)
sub
retf
mov
push
loope
adc
xchg
xchg
(bad)
mov
pop
out
in
mov
push
adc
(bad)
enter
sub
sbb
jmp
and
js
pop
sbb
not
addr16
mov
sbb
adc
add
mov
es
pop
mov
xchg
jg
test
sbb
ds
inc
push
imul
mov
jne
outs
mov
rcl
and
mov
pop
and
sbb
and
dec
mov
add
cmp
out
dec
retf
inc
pop
pusha
xchg
add
and
rcr
dec
inc
adc
into
mov
jle
fmul
xor
cmp
and
fsub
cmps
movs
and
and
js
stc
dec
push
sahf
sbb
adc
outs
sbb
add
dec
and
movs
mov
add
scas
pop
cli
mov
adc
or
adc
imul
jle
adc
pop
xchg
lock
js
dec
push
leave
fsubr
aaa
push
lahf
adc
rcl
clc
xor
ins
cmp
dec
fsub
call
sbb
cwde
(bad)
enter
sti
ss
icebp
sub
push
imul
xor
sbb
and
mov
addr16
push
add
movhps
sbb
cmps
or
adc
inc
push
daa
mov
(bad)
pusha
jl
pop
in
mov
loopne
movs
cdq
cmp
lods
inc
(bad)
in
dec
fst
sbb
dec
mov
inc
xor
fidivr
movs
dec
(bad)
into
imul
dec
inc
mov
add
push
test
ds
je
std
cmp
sub
rol
movs
dec
sub
stos
ins
xchg
push
jns
jecxz
xor
loopne
dec
or
call
call
fnsave
sbb
mov
scas
xor
sbb
or
outs
lahf
push
neg
fdiv
inc
lods
das
push
adc
jmp
mov
mov
and
pushf
cmp
dec
push
xlat
sbb
cmp
pushf
mov
xchg
mov
inc
or
leave
or
adc
lods
and
adc
jmp
cmc
push
ds
faddp
data16
and
fistp
cmp
sbb
mov
dec
mov
pop
stc
sbb
dec
push
sub
sub
fisub
jg
leave
ja
lds
(bad)
push
bt
pop
xor
push
and
popf
inc
inc
sub
test
out
xor
bound
mov
int
mov
int
xor
inc
fs
scas
dec
stos
adc
pushf
mov
repz
add
push
in
jo
lods
test
sbb
mov
rol
enter
aaa
add
xchg
movs
sbb
jno
lods
in
or
mov
retf
cwde
(bad)
pop
xchg
adc
xchg
in
and
push
jb
add
mov
bound
les
push
int
lea
pop
fsubr
imul
cmp
mov
scas
inc
enter
xor
sbb
(bad)
enter
fwait
mov
xchg
iret
inc
bound
pop
ror
fisttp
mov
and
lods
jns
mov
and
cmp
and
jne
mov
repnz
out
scas
push
sub
add
cmp
movs
push
lea
stos
sbb
(bad)
aaa
jnp
mov
sbb
mov
mov
stos
xor
pusha
leave
sub
mov
imul
push
inc
cmp
add
icebp
arpl
fnstsw
loopne
icebp
test
ret
mov
push
sub
jl
cld
push
inc
pop
shl
and
mov
cmp
movs
rcr
sbb
inc
add
in
icebp
daa
add
and
cmps
xchg
pop
push
jp
or
push
std
cwde
and
add
push
cmp
push
sbb
aaa
xor
paddsw
push
xlat
into
xchg
aaa
pop
pop
movs
pushf
dec
rcr
test
das
cmp
push
retf
clc
jg
dec
scas
mov
rcr
ja
(bad)
imul
ins
test
(bad)
in
xor
mov
pushf
sti
jmp
sar
jne
jmp
dec
push
sbb
fisttp
cmp
or
cmp
jns
xchg
inc
jb
aad
std
lahf
push
mov
arpl
bound
pop
pop
and
xchg
neg
in
push
iret
gs
pushf
pop
pusha
sub
cli
add
outs
lea
pop
mov
call
retf
mov
push
mov
lods
shl
shl
int
xchg
(bad)
scas
xchg
les
push
and
dec
icebp
jnp
add
push
fsubr
xor
lea
adc
fbld
fsubr
push
ins
imul
jge
je
cmc
xchg
jg
pop
mov
mov
jb
idiv
adc
in
daa
sub
ret
pusha
push
imul
mov
cmp
or
into
test
lods
jnp
hlt
xchg
jno
inc
outs
cmp
mov
sar
retf
dec
cmps
je
or
scas
adc
mov
xor
mov
push
xchg
and
mov
stc
js
cmps
fild
or
push
mov
rol
fs
xor
xor
jp
fisubr
jge
cmc
stos
xchg
mov
stos
push
cld
call
inc
cmps
aaa
push
arpl
pop
sub
ins
out
push
dec
cmp
inc
inc
scas
sbb
(bad)
mov
jnp
jg
int
fcomp
sub
out
pop
pop
ja
popa
sub
popf
pop
jle
lods
shl
lahf
and
(bad)
push
cmp
or
or
pushf
stc
mov
dec
push
inc
sbb
add
std
push
pop
dec
add
test
cs
ins
cwde
data16
xor
jge
repz
jno
fwait
out
clc
ss
arpl
sbb
mov
mov
mov
and
mov
mov
sub
dec
adc
mov
leave
jmp
mov
pop
sahf
clc
push
pusha
and
ds
loopne
jbe
cwde
out
stos
(bad)
sub
mov
jo
mov
dec
dec
das
(bad)
jo
and
scas
pusha
dec
ret
sub
sbb
ret
ret
push
int3
lahf
adc
aad
mov
pop
ins
test
repz
lahf
leave
adc
out
das
sub
cmc
jae
leave
sbb
movs
les
mov
push
out
jge
add
cld
adc
cmp
cmp
stc
xchg
ins
popw
adc
xchg
in
(bad)
lahf
pusha
pop
cmc
jbe
add
fld
xor
mov
add
int
rcr
xchg
jbe
xchg
dec
aad
hlt
adc
sub
pop
adc
addr16
mov
lahf
sub
mov
fcom
jecxz
mov
out
mov
sbb
mov
mov
retf
ss
ja
xchg
cmp
sahf
and
dec
mov
jno
push
mov
movs
push
je
test
xchg
push
pop
or
xchg
lea
or
push
cmp
pop
fsubr
dec
mov
adc
fwait
loopne
lea
inc
jne
jle
mov
mov
mov
sahf
pop
data16
mov
add
pop
(bad)
leave
sub
mov
mov
push
lods
push
or
sbb
cmp
and
in
inc
adc
aas
sbb
pusha
stos
cdq
out
and
push
dec
stc
(bad)
movs
ficom
pushf
(bad)
jns
pop
sub
mov
fisubr
mov
cmp
mov
add
fisub
mov
dec
inc
clc
add
(bad)
pop
inc
xor
and
in
pop
push
mov
enter
or
scas
loope
aad
jmp
aam
cmp
jno
fadd
adc
js
repz
les
lea
mov
push
adc
fucomi
mov
outs
inc
sahf
pop
sbb
scas
loopne
jae
inc
jecxz
aaa
movs
popa
fs
js
inc
aam
data16
mov
dec
mov
cmp
add
push
into
push
imul
(bad)
stc
or
cli
lds
add
cmp
jbe
out
adc
aas
pop
push
movs
pushf
mov
punpckldq
push
fsub
jno
fisttp
bound
cmp
pop
in
fwait
cld
loop
stos
dec
jle
xor
add
test
aas
xchg
inc
imul
sbb
xchg
xor
movs
cwde
mov
je
outs
sub
pop
adc
repnz
add
call
popa
mov
mov
jmp
mov
xcrypt-ofb
cmps
test
(bad)
je
cmp
and
dec
shr
mov
and
mov
pop
jae
and
jns
sub
xchg
ret
inc
lock
scas
ds
jmp
push
das
pop
ja
sbb
and
mov
xchg
jge
sub
xchg
push
pop
xor
and
popf
add
xchg
adc
push
rcr
adc
push
inc
adc
dec
sub
(bad)
push
and
mov
cs
out
sbb
jno
enter
mov
lea
pop
out
mov
sub
jo
mov
sub
pop
inc
jne
mov
jns
mov
cmps
test
hlt
push
stos
sbb
fiadd
out
mov
inc
mov
call
int3
push
xchg
cld
jp
pop
test
or
test
xor
cmp
cwde
and
(bad)
call
jg
inc
imul
pop
jnp
mov
out
xor
shr
dec
(bad)
sahf
add
push
inc
fdiv
pushf
xchg
out
xor
into
cld
pop
inc
and
jnp
in
stos
dec
imul
test
mov
lea
sahf
or
push
pop
jecxz
dec
mov
sub
lods
loope
push
adc
nop
bound
sbb
inc
xchg
inc
mov
pop
gs
mov
dec
xchg
inc
jmp
(bad)
(bad)
lea
mov
test
ret
daa
xchg
or
push
sub
dec
imul
retf
jnp
stc
mov
jg
inc
pop
pusha
inc
scas
sahf
or
cmp
ja
jmp
in
xchg
neg
ins
fs
rcl
aad
dec
sbb
mov
sti
sar
js
push
fisttp
scas
test
fsub
aaa
data16
imul
pusha
sub
inc
dec
fcmovne
inc
fbstp
es
and
adc
sub
mov
imul
mov
les
inc
cmp
fimul
push
int3
(bad)
popa
or
sbb
push
bound
into
xchg
scas
call
iret
inc
adc
pop
add
(bad)
mov
mov
xchg
jns
test
xchg
in
cli
cmp
stos
mov
sahf
sbb
sub
mov
add
pop
jne
jmp
dec
push
dec
xchg
std
xor
mov
fnstenv
add
cmp
ffreep
ficomp
test
ffree
repnz
lea
sti
ds
sbb
ss
(bad)
fwait
not
stos
out
out
imul
es
(bad)
push
xchg
and
mov
ror
dec
cmp
xor
loope
and
(bad)
aas
outs
cmp
xchg
test
je
popa
dec
scas
test
movs
cdq
ficom
loop
mov
push
cmp
aaa
jns
mov
jne
sbb
pop
pop
and
add
fsubrp
and
out
scas
(bad)
xor
aaa
ja
mov
mov
mov
xchg
loop
jno
je
sbb
adc
repz
pop
test
sahf
jmp
stos
mov
dec
or
jae
pushf
sub
cli
imul
aaa
pop
mov
adc
outs
pop
mov
xor
cmp
xchg
add
in
and
push
xchg
dec
add
push
dec
in
add
ficom
jecxz
pushf
xor
cmp
adc
cld
pop
shl
rcl
and
push
aaa
adc
out
xchg
cld
cmc
inc
les
or
pop
fnstenv
xor
mov
sub
rol
jmp
or
ins
test
dec
sub
or
xlat
enter
mov
pmaddwd
jecxz
rol
movs
stos
add
fwait
xchg
je
sub
adc
inc
cmp
and
icebp
ss
inc
cdq
dec
lock
test
fs
push
fsin
xchg
je
pop
inc
pushf
fcomp
rcr
xor
add
lahf
ins
cmps
popf
rcr
movs
inc
aad
sbb
test
cmp
xor
pop
(bad)
pushf
mov
mov
in
pop
lds
sahf
dec
adc
out
les
and
and
das
or
pop
sbb
ins
or
call
mov
inc
cmp
in
stos
ror
push
mov
sbb
jecxz
bound
shr
push
xchg
inc
lahf
mov
(bad)
jns
jbe
push
sub
cmp
xchg
aad
sahf
rcl
push
and
and
(bad)
clc
jno
cmp
inc
push
fdecstp
ja
adc
xchg
mov
push
arpl
push
movs
jns
push
(bad)
pop
or
push
pop
mov
xchg
repz
jp
dec
xchg
dec
and
mov
bound
int3
cs
gs
imul
daa
iret
clc
push
push
add
lods
mul
inc
sbb
test
xchg
pop
(bad)
inc
sub
xor
mov
xchg
in
sbb
daa
mov
xchg
test
inc
cmp
jg
inc
rcr
popa
shl
aam
jo
pop
daa
pop
pop
mov
hlt
int
adc
in
aad
loope
test
mov
pop
mov
inc
out
pop
pop
dec
xor
push
push
ja
jb
fmul
(bad)
cli
sahf
ds
xchg
pop
fwait
leave
dec
push
sub
jne
mov
and
sub
dec
xchg
sbb
movsx
push
or
icebp
sub
pop
stos
cld
inc
and
pop
pop
inc
xchg
inc
cs
leave
gs
dec
call
movs
jle
xor
arpl
adc
push
jmp
sub
mov
sub
jns
adc
icebp
rcl
jg
jbe
in
loope
mov
mov
and
or
popa
mov
stos
loopne
add
jle
lods
dec
lds
xor
pop
fucomi
cmc
dec
fnstcw
int
sbb
sub
loopne
sub
fsubr
pop
xchg
mov
xchg
rcr
push
xchg
sub
stos
into
fsubrp
adc
sub
fnstsw
mov
mov
or
lock
fs
aas
(bad)
dec
push
cs
jb
or
cmps
(bad)
inc
frndint
in
cmp
or
push
xchg
push
pop
pop
dec
jb
lods
mov
dec
sahf
aaa
fwait
sub
pop
jo
es
clc
sub
sub
paddsw
out
les
push
mov
in
sbb
push
cmp
daa
adc
mul
fist
aam
pop
retf
lea
xchg
mov
jo
or
ret
out
jae
or
xchg
call
mov
mov
jno
inc
dec
sbb
jo
dec
and
jnp
sbb
(bad)
cld
jns
call
push
cmps
sbb
and
pop
test
xor
adc
call
in
retf
dec
pop
add
mov
add
call
sbb
fimul
push
inc
cmp
mov
jbe
mov
out
pushf
(bad)
xchg
or
hlt
hlt
xor
mov
mul
call
ror
mov
and
mov
adc
mov
xchg
popf
into
inc
jg
dec
icebp
jnp
xchg
leave
out
lods
jae
jno
jbe
in
add
js
aaa
retf
push
inc
or
xchg
out
jb
push
dec
mov
pop
rol
mov
in
push
hlt
push
repnz
outs
xchg
mov
das
test
loope
mov
pop
dec
dec
sub
cmp
lods
mov
outs
enter
mov
add
cdq
and
cmp
rol
punpckldq
ins
int
aaa
out
cmp
xchg
mov
add
mov
inc
xchg
xchg
daa
dec
dec
push
cs
add
jo
popa
or
mov
xchg
add
jl
mov
es
leave
popa
ds
icebp
mov
jge
push
sahf
mov
push
mov
idiv
jp
inc
shl
push
mov
or
retf
out
popa
dec
jno
aad
data16
mov
jg
scas
std
push
imul
jnp
leave
mov
dec
retf
aam
mov
repnz
jns
iret
out
imul
sbb
pop
(bad)
movs
dec
test
adc
shl
jo
xchg
pop
rcr
nop
push
into
sbb
in
xchg
cdq
mov
xor
dec
mov
loop
adc
pop
jmp
inc
sub
addr16
or
mov
imul
jbe
fsub
fsubp
dec
icebp
jne
jle
jge
mov
mov
cs
mov
in
aas
ja
daa
jno
std
sub
stos
lods
out
dec
aam
mov
(bad)
lock
push
xlat
das
iret
sbb
data16
fwait
push
xor
fldcw
sub
mov
push
jmp
sbb
or
shl
out
or
jp
call
cmp
push
retf
ss
add
jmp
jp
sbb
imul
nop
fwait
stos
pop
push
loope
mov
sbb
aas
retf
pop
cmps
pop
mov
das
jge
sbb
mov
cmp
add
jmp
mov
cmp
sbb
cmp
lock
cmp
fadd
dec
sahf
sub
add
loope
jns
push
xchg
les
jnp
jmp
push
mov
pop
inc
push
mov
not
aaa
fsubr
and
mov
sbb
sbb
add
fcmovnb
sbb
cmp
or
pop
test
mov
mov
mov
into
shl
jo
shr
jne
mov
and
adc
outs
jmp
sbb
clc
aaa
xchg
adc
xchg
test
and
jmp
add
cs
inc
enter
add
int3
xchg
mov
pop
pop
or
sahf
mov
aad
sbb
dec
(bad)
leave
je
pop
jo
(bad)
xor
int
aad
mov
cmc
int3
ins
push
pushf
cmp
and
data16
(bad)
push
mov
add
jo
stos
fwait
jbe
and
ja
add
mov
push
stos
xchg
and
cmp
and
js
shl
lahf
in
or
lock
clc
adc
ds
ret
test
lock
es
stc
xchg
stc
pop
ret
mov
ds
imul
popf
inc
jmp
mov
mov
ret
add
bound
jmp
sbb
cmp
cdq
lods
mov
xchg
lahf
lahf
mov
call
mov
xchg
aaa
adc
ret
iret
add
vpand
sub
pop
pop
repz
adc
xchg
xor
pusha
pusha
mov
mov
mov
lock
xchg
movs
les
mov
mov
inc
mov
rcl
xchg
jl
and
cmp
adc
sbb
add
mov
pop
jg
rcr
cld
cld
xor
push
xchg
push
cmps
popa
xlat
xchg
sub
cmc
jb
js
neg
iret
dec
sbb
and
fild
mov
loopne
xchg
dec
popa
mov
adc
fnstenv
aas
test
outs
push
xchg
mov
(bad)
cdq
inc
inc
mov
push
jg
call
pop
jmp
into
mov
test
test
adc
adc
add
scas
cmp
xchg
loopne
les
int3
sbb
ret
and
xchg
int
retf
lock
jg
cmc
movs
add
mov
repnz
push
into
call
mov
and
out
jmp
adc
sub
jmp
ja
push
dec
ja
push
imul
inc
scas
cmp
jns
int3
daa
push
mov
fst
push
fs
mov
loopne
dec
pusha
retf
cmps
cmps
out
cmps
pop
daa
jl
adc
mov
add
in
mov
stc
test
js
(bad)
out
movs
les
shl
imul
mov
and
jmp
nop
push
icebp
lahf
sar
cwde
jne
sub
ror
xor
lods
push
add
into
inc
ins
or
jle
jbe
mov
add
leave
movs
dec
push
xor
aam
das
fist
dec
cmp
cmp
imul
or
repnz
cmps
cdq
js
daa
(bad)
pusha
test
inc
jmp
rcl
in
mov
add
cwde
mov
push
(bad)
fs
dec
adc
adc
jp
push
sub
jbe
aad
popf
xchg
push
les
fild
mov
push
pop
and
call
dec
cmps
stos
xadd
cmc
les
and
and
or
popf
js
and
retf
test
sub
movs
or
mov
aaa
mov
mov
retf
jmp
in
repnz
cs
dec
bswap
test
add
mov
xor
pop
sbb
sbb
stos
mov
mov
pusha
popf
push
cmps
(bad)
mov
or
jb
adc
cmp
int3
mov
dec
retf
mov
rcr
inc
dec
call
cdq
mov
dec
fs
xchg
pop
jl
dec
pusha
adc
loop
jno
push
pushf
fnsave
xchg
xchg
(bad)
in
sbb
icebp
nop
in
retf
xlat
dec
(bad)
(bad)
pop
repnz
aam
adc
or
inc
idiv
es
and
cwde
mov
imul
loop
shl
push
adc
mov
fwait
sahf
or
in
mov
addr16
fldz
je
(bad)
js
fcmove
repnz
jnp
int
popf
push
das
push
adc
inc
out
push
inc
nop
lahf
push
iret
add
sbb
xor
push
sub
xchg
stc
cmp
lock
je
mov
mov
sbb
dec
lods
xchg
mov
nop
push
in
pusha
dec
inc
push
pop
(bad)
cmp
mov
int3
push
pop
iret
in
jl
jo
lods
sbb
dec
lods
adc
xchg
cmp
ror
mov
and
shr
repz
jmp
xor
mov
(bad)
fsub
add
or
out
cmp
repnz
ds
leave
outs
push
mov
pop
push
and
or
mov
fild
cmp
popa
and
mov
push
retf
rol
inc
imul
rol
icebp
mov
retf
adc
xor
inc
sub
mov
in
sub
fsubr
sbb
xor
stos
mov
sub
mov
jp
add
retf
lahf
cmp
jge
arpl
inc
loopne
fcmovbe
mov
inc
pop
retf
sbb
dec
xchg
jecxz
in
adc
and
sbb
inc
push
int3
scas
dec
in
shr
ins
xor
adc
jge
adc
mov
mov
mov
jle
mov
lods
and
(bad)
ins
push
add
inc
test
pusha
inc
(bad)
(bad)
adc
pop
stos
inc
sbb
push
mov
fdiv
push
(bad)
lods
and
sahf
dec
or
mov
into
mov
add
push
(bad)
out
inc
jge
cli
inc
jns
lahf
mov
cdq
call
fst
sbb
imul
fbld
xchg
pop
adc
cwde
in
adc
pop
clc
jmp
or
pop
ret
and
(bad)
mov
mov
mov
pop
mov
jbe
bound
and
sbb
cmp
pop
lods
pop
mov
ins
add
leave
cmc
repnz
outs
pop
addr16
jle
rol
pushf
push
mov
jecxz
push
ror
or
stos
inc
retf
fistp
adc
jmp
leave
sub
repz
test
cmp
in
fisttp
push
dec
mov
rcr
cmp
repnz
pusha
call
cmc
or
mov
cmps
adc
xor
xchg
push
add
cld
jecxz
push
scas
sub
pop
in
jmp
enter
push
adc
ds
ret
xchg
scas
imul
push
(bad)
dec
inc
dec
and
cmc
mov
xor
inc
add
dec
jmp
es
int3
je
shl
in
push
jmp
cmp
repz
pop
mov
mov
out
adc
adc
add
mov
mov
fcmovbe
cwde
gs
jg
aas
ret
in
or
adc
(bad)
xchg
jnp
fcomp
(bad)
repz
push
push
ror
loope
enter
clc
push
sbb
xchg
out
sahf
(bad)
pop
mov
xor
jo
dec
cmps
jno
pop
mov
imul
jbe
popa
jmp
in
bound
sub
(bad)
push
je
popa
xor
adc
push
mov
jmp
mov
dec
cmc
pop
dec
sbb
retf
lods
nop
push
add
mov
xlat
adc
and
cmp
mov
movs
arpl
push
cmp
fidiv
jl
repz
push
sbb
mov
ss
aad
push
fldcw
(bad)
jecxz
mov
dec
and
dec
shl
in
retf
mov
test
xchg
int
rol
xchg
arpl
fisttp
cli
sub
cmp
xchg
jns
add
mov
sub
es
int
cs
repnz
aaa
in
cmp
push
mov
inc
mov
inc
cld
pop
call
es
add
call
(bad)
loope
outs
inc
pusha
hlt
xchg
inc
int3
inc
cmp
xor
jmp
dec
mov
and
mov
cmp
push
and
sub
cld
out
cmp
inc
leave
repz
call
fst
out
pop
std
test
lahf
in
mov
stos
mov
jmp
push
fwait
aad
pop
lods
popa
fpatan
hlt
mov
and
sub
sub
ins
mov
(bad)
and
push
sahf
mov
push
mov
sbb
loope
cmp
(bad)
dec
icebp
in
scas
(bad)
in
jne
jnp
push
je
jno
sbb
repz
jecxz
pop
sub
test
add
push
cmp
inc
(bad)
jle
xor
inc
lahf
mov
(bad)
mov
mov
mov
add
aas
xchg
mov
sbb
xchg
dec
push
jns
rep
popa
cmc
xchg
jae
dec
not
dec
mov
(bad)
adc
xor
(bad)
call
retf
push
cli
lahf
jne
xchg
(bad)
popf
xor
outs
icebp
bound
pop
ins
lods
mov
out
loope
pop
sbb
jp
iret
pop
push
push
push
jne
xchg
sti
sbb
ret
adc
aam
sub
jg
push
daa
sub
mov
pop
adc
outs
xor
jmp
out
iret
sbb
sub
add
or
je
clc
push
jecxz
push
xor
add
repnz
fimul
shl
lods
stc
ffree
das
mov
stos
clc
cmp
inc
arpl
sub
sar
enter
add
cmp
push
iret
daa
out
jns
popw
aas
mov
adc
push
cmp
xchg
or
xor
fs
mov
call
arpl
test
and
jnp
push
xor
loop
jp
sub
mov
aaa
push
sub
pop
and
mov
jns
inc
xor
or
pop
adc
mov
mov
mov
sbb
in
stc
inc
dec
xchg
jecxz
scas
mov
addr16
adc
ret
inc
fistp
push
cmc
mov
imul
imul
(bad)
jle
mov
xchg
dec
cmp
and
push
int3
adc
dec
mov
adc
cmp
aas
in
jae
add
sub
stos
jb
outs
dec
test
pop
leave
(bad)
xlat
xor
lds
out
iret
icebp
sti
pop
icebp
jp
xchg
fisttp
and
cmps
into
pop
rcl
jnp
mov
pop
adc
ret
and
sti
cs
and
into
push
aam
shr
xchg
cmp
sub
xlat
xchg
retf
sbb
sub
es
mov
add
lock
jp
vhsubpd
hlt
pusha
stc
push
mov
sbb
mov
mov
int
xchg
xchg
fs
int
push
xchg
rol
jbe
ret
out
xchg
dec
js
mov
scas
in
mov
inc
ret
pop
das
sbb
popa
es
adc
daa
add
in
nop
arpl
add
or
test
ret
inc
push
jb
aad
sub
inc
rcr
xchg
adc
lds
(bad)
push
stos
lds
es
scas
adc
xchg
cmp
pop
pushf
cmp
fcom
sbb
test
fistp
retf
xchg
xor
jge
dec
jne
inc
mov
push
push
arpl
and
push
ds
imul
mov
mov
or
lahf
jne
(bad)
in
arpl
mov
cmp
clc
aas
mov
sbb
dec
ret
xlat
(bad)
scas
jo
dec
test
pop
jecxz
mov
jnp
(bad)
push
mov
retf
pop
or
cwde
mov
repnz
shr
inc
push
push
outs
or
in
movs
cmp
fbld
push
xlat
shl
mov
cmp
dec
and
push
fisttp
jge
sub
and
jg
sub
retf
arpl
shl
imul
xchg
add
and
xchg
sahf
pop
cmc
pushf
cmp
iret
lea
lds
lds
cmp
mov
mov
sub
cdq
cld
mov
pusha
(bad)
aam
pop
dec
es
(bad)
ficomp
jo
push
aas
ss
xor
inc
(bad)
mov
dec
mov
pusha
and
mov
bound
in
ret
adc
out
sub
or
xchg
pop
in
fcomp
push
nop
sahf
aad
fadd
(bad)
out
push
cmc
mov
int3
add
loop
addr16
ds
cmp
jns
cmp
dec
jae
pop
sbb
test
or
cli
cld
hlt
cld
cmp
sbb
cli
xchg
test
(bad)
and
and
dec
mov
mov
das
fidivr
mov
(bad)
mov
or
and
retf
retf
int3
cmps
add
nop
and
fsub
mov
stos
pushf
hlt
pop
jne
mov
or
sub
outs
inc
push
sbb
mov
fwait
dec
addr16
pop
movs
test
dec
es
lahf
fcomp
xchg
mov
and
mov
in
ds
jb
push
movs
ja
out
sbb
call
sbb
jne
dec
ss
add
sbb
ins
ins
je
xchg
pop
jg
inc
idiv
loopne
sub
les
jecxz
mov
ja
jp
xchg
(bad)
mov
push
ficomp
movs
mov
(bad)
fdivr
fcomp
xor
mov
lahf
dec
sbb
and
push
ins
jmp
push
mov
add
mov
xchg
push
(bad)
cld
not
jmp
ja
sbb
int
mul
cmps
out
mov
add
push
arpl
aaa
inc
or
lahf
repnz
test
idiv
xchg
lods
add
ins
push
mov
or
push
mov
(bad)
cwde
add
sbb
inc
push
xchg
lahf
aaa
and
arpl
add
lods
cmp
jnp
sbb
ret
lea
inc
sub
(bad)
sbb
or
xchg
pop
jb
or
std
pop
imul
dec
cmp
cmps
retf
sub
or
cdq
mov
lods
pop
mov
adc
test
jnp
pop
xchg
add
sub
pop
ins
repnz
xchg
push
push
or
pop
pushf
test
pop
xor
jl
cli
or
xor
push
cdq
jmp
mov
cld
adc
sub
push
sbb
out
idiv
stc
shr
or
cmp
pop
and
fdivrp
mov
test
ja
sti
scas
lods
adc
and
cmp
ins
push
mov
(bad)
dec
enter
sbb
and
pop
or
pop
scas
xor
fimul
mov
cmc
addr16
add
jmp
mov
inc
mov
pop
jb
mov
jmp
arpl
cmps
(bad)
push
push
xchg
or
movs
mov
adc
call
jge
mov
out
push
ins
test
mov
ret
mov
rcl
pop
jg
jnp
adc
imul
xor
cmp
mov
shl
mov
fimul
inc
inc
(bad)
scas
mov
outs
or
and
mov
les
pop
test
out
mov
pop
adc
inc
neg
push
loope
lahf
test
add
arpl
cli
xor
inc
or
int3
repnz
js
ins
push
cmp
pusha
push
pop
adc
dec
sub
jbe
push
sti
adc
inc
jge
fsub
cld
xchg
pop
add
retf
imul
inc
jo
mov
test
jp
sbb
ins
push
call
push
or
push
fwait
(bad)
movs
js
out
add
adc
movs
int
ins
call
(bad)
mov
into
outs
test
mov
call
pop
push
js
dec
mov
fucomi
lahf
out
fwait
mov
movs
dec
movs
in
inc
xchg
clc
sahf
jo
enter
xchg
fwait
pop
in
adc
or
pop
cmps
in
lods
aas
les
and
loopne
(bad)
leave
sbb
lods
sub
jle
xchg
cwde
xchg
jp
xchg
adc
xchg
push
jg
sar
mov
jo
nop
jge
dec
and
call
repnz
arpl
sbb
shl
sbb
sahf
dec
in
cmp
mov
lods
cmp
push
add
jge
call
sbb
jl
pop
jbe
in
in
clc
or
pop
pop
xlat
out
test
jnp
iret
mov
adc
sbb
ds
js
adc
movs
pop
fadd
pop
cmps
aam
sub
sbb
mov
rol
and
inc
pop
sub
repnz
out
fdivr
cmp
mov
out
pushf
add
adc
jae
dec
push
cmps
aas
std
xor
repz
jmp
icebp
jmp
ret
int
and
cmp
clc
imul
pop
loopne
xchg
retf
jl
pop
out
xchg
cmp
cmp
mov
cmp
xchg
std
test
sub
inc
popf
xchg
ins
sub
es
pop
push
push
add
push
outs
xor
in
add
inc
fst
mov
or
or
lahf
fnstsw
adc
sbb
fcom
sar
aas
lds
or
in
pop
fimul
aam
xor
sbb
cmp
test
inc
test
mov
mov
pushf
movs
dec
mov
mov
and
(bad)
dec
scas
pop
in
xchg
call
lea
ins
cmp
cmps
cmp
add
rol
xchg
lea
pop
or
adc
push
mov
inc
shr
ds
jmp
xchg
xor
icebp
call
push
mov
sub
push
add
add
mov
rcl
aad
nop
sbb
sub
(bad)
jle
mov
mov
jg
jmp
sub
mov
push
sbb
and
sbb
jne
fdivr
sbb
add
xchg
lock
add
ins
pop
dec
mov
sbb
jns
pop
sbb
int
mov
lock
lahf
(bad)
jno
sbb
fnsave
inc
(bad)
fdivr
out
xchg
or
push
repz
(bad)
out
pop
js
add
sub
jo
dec
push
in
push
add
adc
stc
xchg
js
int3
(bad)
call
loope
popa
mov
sti
jae
sub
push
push
cmp
aad
bound
aad
jno
inc
(bad)
push
mov
loop
jbe
push
out
lahf
shld
fst
jl
arpl
cmc
and
sar
add
cmp
jge
inc
add
mov
jp
sbb
popa
mov
mov
dec
enter
cmps
repnz
dec
pop
popa
inc
mov
xlat
hlt
xchg
sbb
add
sub
inc
imul
sbb
pop
lods
add
sbb
mov
pop
mov
lods
outs
cli
(bad)
sub
jle
xchg
mov
and
dec
dec
out
std
jnp
jmp
inc
dec
in
jns
out
dec
sbb
sub
retf
repz
fwait
ins
mov
xor
rcr
ins
mov
sbb
jg
scas
test
(bad)
pop
xor
pop
mov
sbb
fcomp
cwde
out
sbb
sbb
cmp
popf
push
xchg
xchg
mov
movs
xchg
lea
mov
cmps
and
xchg
adc
xchg
ficom
mov
xchg
xlat
les
(bad)
in
push
jl
push
ds
test
cs
pop
xchg
pop
push
dec
dec
pop
hlt
pop
fldenv
inc
test
jp
mov
add
lea
shl
js
sbb
out
ret
mov
pusha
xor
lahf
ret
imul
lahf
and
scas
(bad)
xlat
xchg
repnz
shr
js
cmp
test
scas
shl
sub
clc
xchg
(bad)
mov
inc
or
aas
add
xchg
xchg
jmp
mov
sar
mov
mov
loopne
push
and
into
jns
pop
movs
fst
fldenv
ins
inc
leave
mov
in
cmp
out
es
jmp
push
imul
sbb
inc
(bad)
clc
pop
xchg
cwde
pop
scas
dec
jp
xlat
xor
mov
into
dec
xchg
inc
ds
leave
jg
xor
xor
fiadd
xchg
into
pushf
push
xor
xor
shl
fimul
retf
mov
inc
mov
test
jge
fwait
loope
cdq
neg
cli
xchg
rcr
jmp
clc
adc
imul
sbb
jb
xchg
ds
enter
rcr
push
cmp
mov
mov
jbe
push
dec
push
push
or
cs
pop
jmp
mov
les
mov
inc
ret
ja
jl
loop
or
push
jle
ins
pop
(bad)
pop
inc
mov
fnsave
pop
xor
push
push
movs
cmp
mov
ins
daa
data16
xchg
ja
(bad)
icebp
aam
fisubr
mov
cld
lock
push
int3
mov
inc
xor
jb
sti
xor
mov
loopne
add
adc
cdq
lds
mov
(bad)
movs
out
lods
shr
jecxz
or
push
pop
fimul
loope
fsubr
lea
mov
add
sub
pop
mov
aam
and
sbb
cmp
shl
sar
dec
or
aas
mov
stos
or
xchg
fdivp
xchg
loope
xchg
push
inc
daa
clc
fimul
dec
std
inc
cdq
sub
fadd
rcl
ss
icebp
fsubr
sbb
jp
add
mov
xchg
out
loope
pop
mov
pop
xor
sbb
mov
pop
xchg
int3
test
icebp
daa
jle
fdivr
out
mov
fidiv
(bad)
pop
sbb
mov
mov
xchg
adc
test
adc
mov
push
ins
es
adc
push
int3
into
arpl
cmp
call
pop
dec
fadd
cmp
loope
sti
mov
mov
loopne
jae
nop
push
stc
push
add
movs
and
jmp
inc
xor
mov
push
push
or
sub
dec
mov
repnz
in
out
call
lahf
out
dec
les
cmc
push
jmp
jl
add
adc
sub
jbe
cs
out
popa
jmp
push
fs
enter
or
mov
cmp
or
mov
xchg
inc
addr16
xchg
sar
pusha
stos
lea
mov
and
push
cmps
sti
lods
sar
test
cmp
retf
loopne
enter
mov
mov
repnz
dec
ss
mov
dec
pop
test
sbb
jbe
inc
and
push
push
je
mov
push
pushf
pop
mov
xchg
push
push
xlat
ins
push
dec
in
aaa
jmp
mov
scas
push
push
xchg
js
push
xor
pop
popa
bound
inc
arpl
dec
jno
jbe
aas
push
xor
and
clc
add
mov
mov
lods
or
jmp
ss
not
mov
jp
stos
xor
fcmovu
mov
scas
cmps
push
cwde
(bad)
shl
add
pushf
sbb
loopne
sbb
stc
scas
dec
push
imul
mov
in
xor
scas
push
mov
xor
push
stos
inc
inc
adc
fwait
out
ss
mov
mov
in
jo
dec
mov
push
stos
add
xchg
popf
sub
out
and
xchg
sub
aam
test
sub
mov
js
hlt
in
repz
mov
cmp
push
jb
sub
in
adc
pop
xchg
jo
mov
(bad)
jns
jp
movs
es
or
jb
jae
adc
not
scas
push
lods
cmp
pushf
leave
aam
mov
add
test
xor
jae
mov
sub
pop
test
mov
std
(bad)
aas
mov
jae
push
push
pop
push
xchg
inc
xlat
pop
or
leave
iret
out
jp
cs
and
dec
pop
push
jl
add
fldenv
test
cmp
dec
push
ds
mov
pop
leave
sbb
pop
pop
push
repnz
xor
js
adc
dec
enter
addr16
out
jno
pusha
push
pop
retf
cwde
call
scas
pop
ins
lods
dec
iret
and
mov
push
pop
aaa
sub
dec
jo
call
mov
(bad)
stc
lds
push
aam
xor
enter
sbb
loop
fst
bound
dec
sbb
mov
add
js
fist
in
dec
scas
addr16
nop/reserved
dec
stos
push
imul
jl
pop
test
stc
or
jmp
sub
call
sbb
(bad)
loopne
addr16
in
mov
cmp
sbb
dec
dec
sub
or
(bad)
add
je
inc
call
popf
add
adc
add
or
pop
ud2
xchg
and
pop
cmps
lods
fsubr
sub
push
mov
adc
cld
adc
scas
mov
inc
adc
add
test
adc
(bad)
mov
ins
shl
mov
out
(bad)
fnstsw
or
iret
push
add
leave
ds
xchg
xchg
loopne
sbb
fmul
es
sub
std
mov
rcr
pop
sub
mov
sbb
jmp
xchg
inc
xchg
push
aad
int
pop
shl
dec
movs
cmp
jp
test
pop
loope
or
(bad)
cvtpi2ps
jl
push
mov
xor
jl
xor
push
inc
leave
out
mov
xchg
push
sub
pop
imul
jecxz
cmp
sub
add
lea
(bad)
fxch
stos
xchg
fs
push
push
mov
mov
cld
push
xchg
(bad)
int3
aas
daa
test
or
sti
xor
push
pop
inc
adc
icebp
pop
pop
nop
mov
(bad)
popf
fistp
dec
dec
push
xchg
popa
mov
mov
icebp
push
rol
ss
sub
xor
ror
sub
pop
(bad)
loopne
or
js
sbb
lahf
lods
and
je
cmp
(bad)
scas
pop
prefetchw
or
xlat
scas
sub
and
aam
frstor
push
pop
gs
adc
mov
pop
ins
inc
inc
pusha
shr
pop
mov
or
dec
sub
pusha
rcr
dec
ds
xor
sar
inc
lea
add
push
mov
les
mov
push
cwde
pop
xor
xor
jo
int3
jge
cwde
and
and
ins
(bad)
mov
mov
(bad)
cmp
add
cwde
jl
int3
pop
cmp
push
out
and
mov
mov
pop
out
lods
(bad)
in
and
daa
aad
dec
mov
pop
cmp
ja
clc
(bad)
in
bound
pop
call
push
out
jns
retf
pop
cmp
push
jle
push
mov
xchg
pop
in
cmc
lock
dec
ss
push
push
in
loop
pop
loopne
jbe
push
jle
imul
fild
(bad)
lods
std
add
icebp
enter
in
adc
sub
adc
mov
cmc
jo
sbb
ja
mov
out
rol
cli
jnp
mov
dec
mov
mov
inc
adc
mov
repz
dec
cdq
arpl
repz
and
jne
or
sbb
lock
sbb
add
int
lea
out
adc
ror
enter
adc
sbb
test
test
das
push
jae
mov
aaa
xor
xchg
retf
loopne
ret
nop
mov
sahf
icebp
fstp
mov
movs
cmp
loope
lea
pop
jb
nop
xchg
push
pusha
cdq
mov
pop
lods
daa
sbb
neg
int
sbb
lods
sub
shl
xchg
inc
and
inc
lods
out
sbb
jne
and
aas
daa
push
(bad)
fsubr
add
aam
and
mov
loope
sti
xchg
mov
add
movs
stos
enter
mov
popa
les
or
cmp
div
daa
push
mov
dec
lahf
dec
je
sahf
or
rcr
jg
in
add
gs
jb
or
retf
dec
sbb
lea
pop
stos
cwde
and
imul
mov
test
sub
enter
je
das
mov
movs
fbstp
aas
jge
lods
mov
inc
mov
bound
pop
js
mov
adc
mov
test
xor
mov
jo
xor
mov
mov
jmp
or
aas
push
cmp
dec
sbb
clc
out
sbb
mov
mov
sbb
and
dec
add
jle
das
adc
frstor
pop
in
adc
and
fild
in
sbb
sbb
jmp
push
call
(bad)
fdiv
mov
xor
or
aam
xchg
mov
pop
mov
mov
dec
test
dec
in
(bad)
adc
je
shl
or
and
cdq
or
and
add
and
mov
push
mov
aad
jle
(bad)
shr
adc
or
dec
imul
outs
sub
imul
mov
mov
push
cmp
xor
jl
outs
loopne
inc
fs
xchg
mov
mov
mov
push
leave
inc
rep
add
pop
stos
dec
fcomip
mov
aaa
jno
cmp
lods
jo
into
in
inc
and
cdq
pavgb
jmp
jno
(bad)
xchg
sub
iret
repz
popa
mov
ud0
popf
test
pop
sub
xlat
leave
or
sub
push
cmp
add
fbstp
dec
mov
(bad)
out
push
imul
cmp
fdivr
jg
dec
sahf
call
or
repz
das
popf
jmp
fwait
pop
ja
adc
in
push
sub
mov
(bad)
and
mov
cmp
outs
adc
adc
inc
lock
(bad)
jnp
jg
dec
mov
dec
or
sbb
and
and
arpl
scas
mov
in
cmps
fisttp
dec
dec
cmps
(bad)
ins
adc
or
xor
xor
test
sbb
(bad)
xlat
(bad)
pop
repnz
cmp
out
pop
adc
cwde
or
sbb
fadd
adc
int3
mov
test
shl
or
retf
jno
(bad)
adc
xchg
xor
jle
(bad)
xor
mov
mov
cmp
mov
in
pop
enter
int
dec
js
and
mov
mov
leave
out
fisttp
or
jp
add
ins
add
in
pop
in
test
sbb
(bad)
icebp
xlat
mov
push
or
stos
push
inc
data16
mov
mov
lods
xor
mov
add
adc
nop
and
jne
mov
jns
or
call
jl
inc
outs
scas
xor
pop
inc
push
xor
(bad)
sbb
call
and
jb
rol
pop
mov
loope
pop
sbb
and
mov
xchg
mov
pop
sub
adc
or
xchg
adc
mov
popa
push
lods
dec
push
and
sub
and
push
jo
cli
mov
(bad)
fdiv
mov
je
jo
repnz
outs
adc
jmp
mov
cmps
lahf
pushf
xchg
sbb
push
adc
mov
adc
addr16
lods
rcl
(bad)
loop
aaa
push
push
lods
icebp
inc
inc
xor
in
inc
fdivr
popa
dec
jo
add
and
cmps
stc
fwait
add
jo
cmp
or
fxch
jecxz
mov
out
mov
retf
and
dec
test
iret
iret
xchg
push
(bad)
push
(bad)
push
jno
cli
stos
(bad)
call
jns
repz
pop
sahf
fsubr
jbe
sub
adc
fcom
(bad)
out
sbb
retf
add
mov
stos
inc
xlat
dec
jle
add
scas
adc
or
push
aaa
jge
test
dec
jl
add
and
push
sbb
test
in
fcomp
retf
rcl
pop
dec
ins
bound
jmp
sub
jbe
jmp
pop
fiadd
mov
sub
mov
push
or
pusha
pop
loopne
and
in
add
test
pop
sub
sti
pushf
movs
les
inc
or
call
mov
stc
or
adc
pop
nop
test
mov
sbb
sbb
jp
push
xchg
cmp
out
iret
hlt
inc
pop
lock
inc
mov
test
sub
or
movs
cs
cmp
out
sub
mov
cld
aam
pop
mov
xchg
sahf
push
js
add
enter
sub
movs
aas
loopne
mov
out
sub
gs
test
pop
xor
popa
push
xor
clc
cmps
jle
and
movs
out
or
dec
aad
mov
fnstsw
jmp
and
in
jb
fwait
int
fdivr
shr
ins
mov
addr16
daa
sbb
adc
dec
mov
jg
adc
dec
das
add
cmp
arpl
enter
and
and
adc
mov
push
mov
imul
popa
dec
mov
test
push
and
daa
mul
inc
inc
jp
fisubr
pop
ins
sub
cmp
(bad)
test
es
ins
mov
or
rcl
sar
push
rol
adc
fbstp
jmp
jge
pop
and
dec
or
std
fcmovnbe
fisub
mov
ret
sbb
inc
popf
sub
push
cmc
jecxz
ds
add
and
dec
test
bound
dec
fucomp
aas
xlat
mov
push
jbe
mov
not
inc
or
icebp
sub
xchg
jns
cwde
sub
(bad)
mov
xlat
fcomp
fbld
adc
out
je
sbb
pop
add
or
push
sub
pusha
sub
enter
aad
stos
mov
push
sar
mov
xchg
arpl
fsub
sub
gs
pop
mov
pop
cwde
pop
fcmovbe
dec
(bad)
stos
xor
ja
(bad)
pop
mov
ficomp
movs
iret
mov
fild
movs
cmp
and
das
mov
ficom
jmp
call
mov
call
dec
pop
clc
ret
jno
out
sub
adc
mul
seto
aaa
je
(bad)
pop
and
cmp
test
lock
cmp
and
in
je
add
xchg
test
or
and
shl
mov
lea
adc
stos
sbb
pushf
adc
jmp
xchg
loopne
rol
addr16
push
lea
add
clc
xchg
call
push
or
xlat
rol
test
mov
clc
repnz
cli
(bad)
ret
adc
mov
mov
mov
push
icebp
aad
adc
pushf
and
shl
push
xchg
push
inc
cwde
addr16
push
fld
bt
sbb
cdq
scas
mov
imul
push
xor
mov
cli
mov
popa
ins
shl
jns
bound
push
scas
xor
and
and
push
cdq
jnp
int3
fbstp
ja
pop
xor
xor
sbb
push
nop
std
push
out
aaa
imul
pop
inc
xchg
cwde
outs
mov
rcr
cmp
or
retf
repnz
cs
stos
jg
fidiv
push
pusha
loop
dec
jns
inc
std
es
xchg
mov
sub
es
pop
js
jns
xchg
xor
sbb
mov
xor
sub
cwde
xchg
out
int3
push
cmp
das
addr16
pop
jg
or
mov
mov
pop
add
add
stos
popa
push
retf
ret
out
je
icebp
dec
scas
and
and
jg
pop
bound
mov
(bad)
dec
int3
sub
cmp
mov
push
and
pop
dec
mov
push
popa
cdq
ror
popa
loopne
scas
add
jle
(bad)
test
nop
in
or
mov
pop
iret
push
shl
jo
mov
jl
add
inc
in
xor
ins
out
aam
jle
mov
mov
inc
sbb
aaa
mov
popf
retf
sahf
or
adc
mov
jae
xor
mov
sub
xchg
(bad)
mov
inc
ss
xor
dec
popa
(bad)
and
iret
es
stos
cs
pop
sbb
and
xchg
adc
xor
ret
stos
jns
aas
hlt
adc
fs
popa
aaa
je
pusha
fsubr
mov
inc
repnz
loope
movs
lea
or
push
mov
push
iret
xor
inc
sub
sbb
cmp
pop
iret
fld
gs
dec
shl
test
test
and
ret
rcl
adc
mov
cmp
xor
or
jle
test
out
mov
lods
jns
ror
addr16
adc
repz
dec
sahf
cmps
loope
jae
retf
fild
adc
mov
dec
and
sub
movs
das
aas
mov
in
mov
inc
hlt
push
aad
js
push
mov
add
and
xchg
out
mov
mov
movs
lea
out
fdiv
out
cli
iret
enter
add
mov
inc
retf
xlat
jge
retf
shl
repz
push
test
jno
mov
mov
pop
add
sti
dec
stc
cmp
and
pop
out
bnd
repnz
cmp
adc
dec
pop
scas
call
ins
or
mov
add
stos
das
pop
and
xchg
ins
xchg
lods
test
clc
(bad)
jno
js
jge
aam
stos
je
jp
push
add
iret
(bad)
pop
xor
sbb
xor
xor
fnstenv
ja
add
mov
and
dec
sti
sbb
mov
aaa
mov
scas
(bad)
jmp
jmp
and
adc
xor
stc
cmp
fist
sub
(bad)
cmps
fnstenv
test
add
(bad)
sub
nop
jg
mov
retf
mov
pusha
xor
push
scas
(bad)
sub
inc
cmp
pop
fisubr
adc
shl
xor
nop
mov
iret
js
mov
je
jge
out
fnsave
ss
sti
xor
enter
push
pop
lds
fmul
pusha
jnp
mov
cli
out
and
ret
ret
or
sub
xchg
outs
(bad)
test
shld
xor
cmp
jmp
push
pop
push
(bad)
stos
xor
fstp
in
leave
rcl
mov
pop
test
es
inc
pusha
mov
mov
sbb
js
(bad)
into
ret
xchg
lods
cli
xor
dec
mov
fwait
xor
(bad)
pop
(bad)
lahf
mov
sub
add
sahf
jns
int3
repz
xchg
xor
stos
push
jecxz
push
les
and
pop
sahf
cmp
and
enter
mov
or
int3
scas
not
clc
test
or
std
sub
add
pusha
cld
mov
clc
push
ret
jl
jns
retf
imul
pop
aad
xor
cs
xchg
pop
idiv
out
sbb
add
(bad)
xchg
dec
(bad)
out
sub
xor
out
test
jp
mov
xchg
dec
adc
xor
pushf
or
lods
fcom
sbb
dec
mov
mov
(bad)
push
add
sub
in
pop
jle
loope
cmp
imul
(bad)
iret
je
and
push
push
dec
xor
int
shl
mov
sbb
retf
(bad)
jecxz
jg
xchg
adc
dec
adc
repz
mov
sub
movs
fwait
test
mov
fwait
ja
lea
push
mov
icebp
pop
push
adc
xor
jmp
out
pop
inc
and
dec
cmp
add
sub
jmp
pop
ja
adc
mov
add
sub
dec
fimul
pop
nop
shr
cmps
jecxz
(bad)
(bad)
mov
shl
(bad)
int
and
psubq
aas
int3
stos
retf
inc
outs
pop
mov
pusha
(bad)
test
cmp
xor
imul
out
in
sbb
mov
inc
out
dec
cmc
dec
sub
xchg
dec
mov
cmp
sub
push
loop
add
push
retf
out
add
mov
push
inc
mov
sub
sbb
adc
xchg
dec
jg
je
push
loop
push
xchg
fwait
repz
jae
jo
xchg
movs
adc
inc
(bad)
or
mov
add
push
in
xor
xchg
adc
nop
stos
int3
cmps
xor
fnstenv
lds
fwait
add
xor
clc
dec
xor
jg
xchg
jmp
and
imul
std
mov
push
popa
dec
fcomp
mov
and
sub
pusha
out
test
jnp
mov
inc
adc
fwait
scas
pusha
push
dec
fs
dec
je
ja
dec
daa
stos
sbb
inc
and
stos
xchg
out
fidivr
test
adc
push
cli
js
ss
mov
add
(bad)
jne
dec
inc
stc
jae
sti
loope
enter
push
mov
dec
sar
mov
fadd
out
sub
pop
mov
mov
cmp
mov
and
cwde
xchg
sub
add
jnp
xchg
or
and
call
push
and
cmp
int
add
pushf
in
int
sbb
cmp
nop
aad
lods
mov
fst
xor
push
mul
add
sahf
adc
loopne
std
xchg
jbe
in
fistp
loopne
movs
jecxz
pop
pop
pop
push
mov
sub
ins
ins
cld
pop
dec
inc
jle
push
and
outs
rol
fstp
rol
adc
iret
inc
push
ret
sbb
sbb
out
iret
jle
stos
dec
pop
pop
cmp
or
cli
lea
out
nop
(bad)
push
jecxz
jb
js
dec
call
cmc
inc
mov
mov
sbb
add
cmps
mov
pop
add
sub
add
mov
sub
add
add
mov
dec
or
or
mov
ret
push
jp
(bad)
sub
push
and
mov
mov
xor
xor
pop
xor
pop
jae
pop
js
adc
mov
into
push
add
popf
xor
mov
sub
arpl
retf
lds
int3
cld
mov
dec
cmps
sbb
dec
lahf
out
xor
adc
call
xchg
jmp
nop
loope
mov
mov
imul
int3
pop
ret
mov
es
lods
fs
dec
stos
jge
imul
stos
(bad)
iret
mov
cmp
mov
cmp
retf
bound
nop
lods
lods
das
into
outs
data16
pop
fimul
fdivr
js
mov
jge
push
iret
in
mov
xor
stc
ds
and
jmp
div
mov
add
jnp
jnp
bound
cmp
(bad)
pop
xchg
imul
pop
jp
xchg
xchg
pop
cmc
jbe
daa
fild
sbb
pop
in
push
es
je
sub
(bad)
into
mov
out
mov
mov
movs
dec
out
lock
out
or
xor
shl
add
mov
(bad)
stos
mov
imul
and
add
daa
fidiv
aaa
jecxz
push
xchg
call
push
jns
pop
mov
jno
sbb
jge
aam
pop
dec
add
retf
xchg
mov
mov
and
sar
add
xor
mov
fcom
je
push
sub
pop
out
outs
or
mov
sub
push
inc
add
std
pop
push
sub
call
aaa
xchg
sbb
fwait
jo
cmp
xchg
stc
rcr
(bad)
fsubr
iret
mov
xchg
mov
iret
adc
xchg
inc
arpl
jbe
(bad)
icebp
pop
inc
fwait
cdq
mov
jno
(bad)
cmp
lods
push
pop
adc
cmps
inc
pause
jecxz
retf
std
xchg
cmps
into
jns
mov
pop
jle
loopne
in
int
movs
add
adc
les
xchg
les
sub
aad
in
ss
fs
dec
adc
dec
mov
loop
out
mov
lahf
loopne
mov
js
jnp
test
mov
clc
jo
add
shl
ins
pop
jmp
(bad)
out
add
std
aam
repz
data16
jl
dec
sub
retf
div
std
dec
adc
lock
(bad)
cld
icebp
mov
sbb
adc
test
xor
jae
icebp
fstp
iret
popf
sub
fisttp
inc
test
mov
shr
js
mov
adc
mov
loop
jmp
je
push
std
loopne
fwait
jbe
arpl
mov
int3
sub
sbb
mov
mov
xchg
call
xor
fimul
jno
mov
fldenv
mov
stos
lods
and
out
push
inc
std
stc
sbb
stos
les
mov
and
xchg
mov
popa
idiv
mov
push
or
and
xor
dec
sub
mov
shl
jns
mov
adc
(bad)
or
in
push
cwde
jo
leave
sub
pushf
or
jle
lds
jmp
in
mov
inc
jnp
pop
jnp
cmp
lea
xor
nop
push
aam
lds
int
(bad)
fwait
aas
mov
add
lahf
enter
(bad)
iret
mov
mov
dec
sub
add
fstp
frstpm(287
(bad)
and
mov
hlt
jne
mov
xchg
inc
mov
stc
icebp
inc
pop
ja
(bad)
fld
and
js
test
mov
jge
or
shl
les
fmul
mov
sub
mov
fld
shr
pushf
cmp
pop
mov
loopne
pop
sbb
popa
popf
xchg
(bad)
cld
push
pop
(bad)
mov
pop
cmc
jg
mov
lea
and
stos
or
(bad)
jmp
mov
pop
mov
cmps
pop
cmp
cli
dec
rcl
xchg
inc
repz
jne
add
aam
mov
jne
xor
xor
mov
cld
out
and
and
pop
(bad)
pusha
mov
test
pushf
dec
jb
or
popf
push
cs
in
sub
out
adc
sbb
add
mov
fwait
std
mov
jnp
js
sbb
scas
shr
inc
and
inc
mov
add
fisubr
mov
cmp
(bad)
jmp
hlt
ret
in
jb
sti
xor
(bad)
xchg
inc
xchg
stos
pop
aas
cld
sub
mov
sub
cmp
call
sahf
(bad)
cmp
sbb
push
add
fisubr
mov
mov
leave
movs
add
not
movs
ret
cmp
xor
loope
retf
sub
add
leave
add
jbe
test
fmul
xchg
ret
hlt
lock
cmp
stos
dec
in
out
mov
or
out
enter
(bad)
and
outs
movs
cmp
push
stos
lds
mov
add
call
pushw
cmp
leave
movs
sbb
pop
or
jns
xchg
mov
jae
mov
call
cmp
jnp
in
leave
sub
add
xor
sbb
fistp
hlt
mov
sub
fimul
imul
push
(bad)
retf
ficom
aad
cmc
add
mov
jb
xchg
scas
(bad)
mov
xor
xor
inc
call
cmp
imul
xchg
xor
into
ror
das
add
das
jmp
loopne
xchg
clc
mov
ins
cmps
inc
repnz
(bad)
cwde
xor
mov
fisttp
sub
test
mov
push
ffree
sbb
adc
xchg
dec
rcr
shr
loopne
sub
jbe
mov
jbe
sub
adc
add
adc
and
in
icebp
call
sbb
jno
adc
jns
retf
gs
ja
and
ins
out
cmps
sbb
xor
mov
dec
push
sbb
scas
push
push
jnp
shr
sbb
aas
fisttp
mov
xchg
shl
icebp
push
mov
cmp
leave
mov
ror
std
fisub
scas
mov
mov
pop
xchg
push
cmp
vpand
lea
loopne
mov
mov
pop
and
sub
mov
scas
push
mov
xchg
retf
in
cmp
addr16
xchg
and
push
or
xor
push
fimul
test
outs
mov
or
mov
or
iret
and
scas
mov
and
repz
pushf
adc
xchg
cmp
mov
aas
xor
add
jecxz
and
stc
mov
neg
push
add
xchg
add
dec
cwde
cmp
jne
add
push
ss
test
pop
(bad)
jecxz
jne
mov
hlt
dec
sbb
xchg
xchg
fsubrp
or
xor
xchg
sti
jl
and
jg
push
dec
sahf
mul
dec
mov
je
outs
enter
add
pop
fstp
stc
ret
fiadd
mov
sbb
imul
mov
ffreep
sbb
jg
and
jno
mov
push
mov
push
push
cmp
hlt
out
add
out
add
call
cmp
out
in
sbb
jmp
jmp
inc
out
gs
or
daa
lock
or
inc
push
xchg
jle
retf
adc
push
and
(bad)
cdq
retf
ret
push
aas
icebp
dec
push
inc
xlat
dec
mov
dec
imul
call
jecxz
mov
enter
fdivr
jge
mov
stos
inc
test
push
jl
into
mov
pop
stos
leave
mov
or
xchg
xchg
and
adc
aam
fs
jmp
in
mov
jmp
sbb
(bad)
pop
xchg
cs
sti
push
push
and
ret
mov
ror
pop
stos
cmps
frstor
outs
adc
(bad)
adc
cmp
scas
retf
(bad)
fcmove
pop
xchg
pusha
or
cmc
jo
push
mov
cmp
lock
ror
cmp
notrack
push
and
in
dec
pop
dec
cmp
data16
jb
adc
and
mov
test
mov
xchg
ja
push
loope
sub
adc
out
mov
mov
cmp
mov
inc
mov
(bad)
cmp
pop
jb
or
cmp
and
push
xor
dec
or
mov
mov
mov
sbb
outs
out
push
xchg
cmp
xchg
or
pop
(bad)
pop
in
cdq
aaa
lahf
pop
dec
mov
add
mov
retf
inc
addr16
mov
mov
aad
(bad)
push
xor
jnp
out
std
mov
out
fwait
sti
sbb
aam
dec
jnp
adc
xchg
xor
fsubr
fidivr
push
int
cmp
and
dec
(bad)
jb
add
ins
sbb
aam
call
aad
sub
push
gs
xchg
jge
sub
test
jg
loopne
mov
pop
jp
or
xchg
push
mov
mov
push
cwde
jle
sub
shl
mov
xchg
fiadd
bound
retf
xchg
or
add
jl
mov
add
push
mov
ret
mov
dec
or
push
in
data16
sti
call
ror
mov
das
fwait
icebp
imul
cmps
pop
sbb
retf
sbb
adc
push
gs
push
mov
ja
cmp
fcom
adc
clc
lds
jl
push
push
das
daa
dec
or
mov
sbb
in
loop
and
or
or
jne
mov
lock
dec
ss
mov
push
cdq
cmp
cwde
fst
(bad)
mov
les
jmp
dec
in
gs
cwde
dec
test
xchg
push
add
mov
test
std
aad
and
imul
sbb
pop
lea
and
shr
dec
test
jae
nop
loope
or
fnstcw
bound
cmp
mov
xchg
out
jmp
xchg
pop
sub
std
inc
inc
addr16
mov
sbb
xor
call
pop
push
jmp
and
xchg
loopne
sbb
dec
aas
lea
sub
push
or
imul
stc
and
sbb
addr16
jbe
xchg
call
lahf
cmp
(bad)
out
xlat
add
in
lods
in
xor
ffreep
loope
xchg
push
jbe
fwait
and
push
inc
or
test
jp
ret
je
jge
jmp
mov
xlat
and
js
jle
shl
(bad)
jecxz
iret
fistp
and
cwde
stos
and
sbb
out
push
in
movlps
push
ins
push
mov
jne
add
stos
loopne
mov
repz
and
hlt
mov
dec
mov
clc
add
test
mov
mov
aas
mov
pop
pop
loopne
jmp
dec
adc
cmp
retf
mov
jmp
aam
xor
cmp
xlat
pop
stos
ins
stmxcsr
mov
nop
xor
xchg
rol
stos
add
js
dec
mov
adc
sbb
sub
outs
push
add
rcl
xchg
pop
adc
pop
sti
xor
or
xchg
dec
inc
mov
xchg
(bad)
xor
or
imul
jmp
aad
and
popa
inc
rol
jne
ror
cld
xchg
xor
loopne
sub
arpl
mov
scas
call
pop
mov
add
out
mov
inc
sub
ror
dec
ja
mov
mov
mov
leave
mov
cmp
and
call
adc
xchg
pop
mov
ret
add
adc
ds
xor
scas
xor
push
loope
lds
pop
dec
test
or
mov
(bad)
mov
xchg
inc
push
add
loop
jo
mov
add
ret
push
dec
xchg
xor
dec
mov
inc
adc
inc
inc
(bad)
in
sub
adc
imul
pop
in
cmp
ret
call
jp
inc
bnd
fistp
cdq
mov
lds
sub
int
aad
ret
and
jne
add
sub
retf
add
in
push
cmp
jae
aaa
or
adc
adc
std
loop
pop
xchg
mov
sahf
dec
movs
pop
or
push
add
fldcw
add
fmul
dec
mov
sub
es
push
jnp
inc
inc
fcomp
ret
cdq
xchg
xor
xchg
cld
int
cmp
dec
sysret
xchg
pop
push
mov
div
call
jae
xor
xor
std
sub
push
or
sub
cmp
dec
out
iret
sub
jecxz
push
mov
jg
mov
repz
jo
je
mov
mov
cmps
imul
sahf
mov
nop
jo
or
jo
adc
or
fstp
hlt
mov
sub
cbw
sahf
ins
mov
in
jb
lahf
mov
sbb
mov
jno
loope
movs
addr16
inc
xlat
xor
or
add
push
sbb
(bad)
test
stos
sub
pop
les
push
outs
cmps
push
sbb
mov
(bad)
in
jno
add
jl
push
movs
adc
scas
icebp
mov
pop
adc
les
dec
scas
movs
pop
out
xchg
mov
sub
shl
imul
addr16
fimul
pop
in
push
les
dec
xchg
pop
xor
jmp
jle
out
jb
std
repz
jg
mov
xor
pop
lock
or
push
mov
mov
add
jecxz
sub
xor
sbb
ss
mov
fisttp
dec
idiv
loop
ret
in
hlt
mov
push
or
xchg
mov
rcl
sti
imul
call
sar
in
aas
ror
pop
(bad)
sbb
imul
repnz
add
and
dec
cmp
fxch
mov
in
imul
mov
(bad)
jno
fisttp
fild
aam
mov
sbb
cmc
jle
hlt
out
shl
mov
outs
jnp
popa
cmp
sti
rcr
sub
out
add
inc
push
jns
fld
ss
and
ret
iret
and
(bad)
fnstenv
push
fcomp
jge
pop
mov
les
xchg
sbb
cs
ja
(bad)
mov
aas
push
sbb
dec
xor
loop
in
mov
push
clc
jo
repz
xchg
and
dec
js
arpl
cmps
xchg
inc
xor
cmps
xchg
pmulhw
jb
dec
jp
mov
out
out
dec
in
fisubr
jle
mov
fdiv
sbb
push
in
nop
ins
pop
mov
inc
and
xor
or
pop
or
jp
cmps
mov
movs
xchg
or
loop
lds
ins
mov
jo
inc
inc
cmp
sar
fcmovbe
rcr
jb
xor
pop
pop
dec
inc
neg
lahf
inc
daa
rcl
xlat
das
das
sub
push
push
mov
push
add
cmp
inc
mov
loopne
fsubp
hlt
ret
in
mov
or
(bad)
(bad)
shl
fmul
jle
test
out
cmp
or
sbb
pushf
mov
mov
pusha
popf
cmp
aaa
mov
xchg
xchg
mov
xor
cmp
lahf
inc
jg
sub
mov
sbb
mov
push
cwde
push
ins
push
or
test
cmp
mov
mov
es
shl
sbb
push
dec
xchg
aaa
and
retf
mov
inc
pop
test
cs
push
jo
pop
dec
inc
cmp
sub
mov
adc
sub
dec
mov
rcr
out
out
test
sub
push
xor
dec
mov
or
sbb
pop
popf
mov
retf
imul
stos
bound
fild
add
popf
inc
pusha
fistp
leave
sar
(bad)
call
pop
cs
add
mov
aad
test
push
jmp
dec
xchg
imul
loop
lock
jns
in
(bad)
mov
imul
inc
ja
shl
inc
pop
(bad)
popa
js
mov
aas
add
je
pusha
outs
lods
sub
pop
jae
sub
push
ret
(bad)
pusha
bound
and
xchg
push
gs
iret
jo
adc
and
lods
pop
sti
xchg
mov
pop
std
mov
inc
pop
dec
inc
aam
lods
jmp
pop
out
jecxz
or
inc
pop
sar
std
sbb
nop
shr
cdq
xlat
mov
test
retf
jge
out
ins
sbb
(bad)
out
mov
into
mov
cmps
inc
(bad)
mov
retf
out
pop
add
push
out
mov
add
cmps
sub
sahf
les
sar
mov
(bad)
in
xor
pop
add
pcmpgtd
hlt
xor
mov
push
cmp
jle
mov
cmp
aaa
dec
fucom
pop
daa
in
xchg
xchg
xchg
cmps
lahf
mov
mov
add
xor
push
push
sahf
sub
gs
dec
dec
ins
mov
(bad)
sbb
in
jbe
adc
xor
cmps
adc
fndisi(8087
rcl
mov
dec
mov
out
sbb
sub
and
add
mov
sahf
and
ror
push
dec
sub
jmp
icebp
dec
psllq
xchg
or
pop
cmp
and
jne
adc
movs
iret
sbb
sub
test
push
cdq
adc
mov
inc
xor
jbe
jg
lods
ins
cmp
sub
pop
lahf
mov
in
jne
cwde
or
sub
cmp
(bad)
cmps
scas
addr16
test
pop
mov
xor
fdivr
jge
mov
lock
in
sar
mov
mov
ja
dec
in
lahf
jle
add
mov
push
nop
and
mov
or
ret
stos
out
jbe
xlat
fsubrp
test
xor
or
jb
xchg
add
js
push
cmc
repnz
xchg
push
ror
push
fwait
cli
jns
lock
js
mov
test
hlt
lock
cmp
test
push
leave
sub
mov
mov
arpl
out
add
mov
mov
jne
call
call
push
ins
aas
lahf
bound
pop
mov
or
scas
test
jae
jg
dec
mov
fcomp
out
sbb
pusha
mov
sti
retf
stos
lods
xchg
mov
adc
les
fistp
std
loope
pusha
mov
dec
cmp
aam
imul
aas
inc
(bad)
fisubr
mov
scas
in
(bad)
sahf
int
or
mov
sub
movs
ror
fadd
push
cmps
data16
ficomp
sub
repz
adc
xchg
add
gs
mov
inc
jno
xor
mov
ins
add
in
(bad)
mov
mov
jbe
jnp
cs
xchg
ror
mov
out
sub
inc
jno
push
(bad)
push
retf
(bad)
hlt
leave
sbb
inc
pop
(bad)
push
setns
xchg
pop
cmp
add
ror
cwde
fldenv
push
adc
fild
ss
sbb
fadd
dec
inc
mov
retf
sbb
jmp
mov
mov
in
imul
clc
push
add
xchg
or
test
jb
mov
out
movs
push
cmps
mov
loopne
clc
outs
mov
jae
test
or
pop
push
sti
mov
fcomp
pop
push
xchg
mov
daa
out
jle
aam
cmps
sub
ins
push
not
pop
dec
cmp
jge
nop
test
jae
xor
test
ficomp
jne
lea
xchg
nop
xchg
(bad)
or
push
push
int3
dec
push
(bad)
pusha
loope
inc
dec
mov
jle
retf
test
jle
dec
int
jmp
pop
scas
fnstsw
cmps
jl
adc
(bad)
sbb
adc
sahf
shr
adc
popf
jl
sub
xchg
jno
mov
call
sbb
test
ins
dec
iret
bnd
(bad)
cmp
aam
jge
nop
mov
push
(bad)
ins
jle
fisubr
cmp
add
int
add
mov
call
and
ret
adc
mov
call
and
or
dec
js
std
mov
cmc
xor
push
ins
frstor
and
adc
jl
pop
xchg
xor
jo
(bad)
into
push
mov
add
inc
adc
neg
jmp
scas
clc
(bad)
loope
and
mov
or
pop
dec
int
lods
cmp
shl
xor
add
fadd
fmul
xor
mov
aaa
inc
pushf
xor
xor
xchg
xor
in
mov
xchg
dec
xor
je
pop
xchg
in
out
dec
pop
lods
imul
jmp
in
pop
sbb
xor
push
aad
stos
pop
pop
ins
xlat
adc
movs
daa
xchg
loopne
jbe
mov
outs
cld
or
mov
xor
ret
add
out
xor
push
pusha
cmp
push
inc
aaa
xchg
xchg
jge
(bad)
idiv
aad
add
test
push
mov
xor
pop
jo
(bad)
inc
adc
cmps
loope
(bad)
mov
and
out
test
adc
inc
xchg
push
lods
xlat
pop
out
mov
inc
or
adc
hlt
jmp
cmp
ret
jbe
lods
jae
sbb
loop
push
cmp
mov
ds
mov
movs
lahf
inc
loop
arpl
fwait
outs
lods
jge
pop
sub
in
add
xchg
dec
clc
push
inc
cmp
cmc
test
push
lahf
cmp
cmp
adc
lock
(bad)
(bad)
popf
ss
aam
popf
cmp
adc
stos
mov
push
lea
sbb
jecxz
leave
cmps
xor
push
cmp
int3
cmp
stc
and
or
bound
lds
int3
imul
mov
and
fwait
rol
adc
pusha
mov
xlat
bound
scas
sub
iret
and
je
stos
arpl
mov
stc
lea
ins
popa
addr16
int3
div
adc
push
inc
sub
(bad)
xor
pop
sbb
adc
mov
mov
push
int3
shr
mov
mov
test
in
sbb
or
jno
fldenv
sbb
push
cmps
sti
push
out
xor
outs
adc
cmp
inc
dec
sbb
(bad)
ror
scas
(bad)
nop
jb
fnstenv
and
sbb
adc
adc
into
jle
xor
arpl
or
mov
inc
jo
adc
xchg
repnz
sub
mov
cmp
xor
xchg
test
(bad)
fwait
xchg
jmp
fdiv
mov
push
data16
xchg
idiv
xchg
push
stos
mov
fbld
ds
and
(bad)
adc
fild
nop
lahf
xchg
mov
movs
aam
xchg
aam
dec
cld
cld
xor
dec
dec
add
cmp
cmp
icebp
pushw
std
adc
psubb
jo
shl
or
fxam
jae
sbb
xor
mul
pop
aam
sahf
push
xor
dec
int
hlt
inc
jl
pop
fadd
popa
xchg
ror
hlt
adc
call
sub
mov
push
out
enter
push
clc
pop
mov
in
neg
pop
mov
pop
push
stos
les
rol
lods
iret
jle
xchg
ja
loope
adc
jmp
mov
jg
push
add
push
in
or
and
movs
jns
xor
mov
xor
ja
(bad)
adc
add
in
fdiv
mov
or
retf
jno
xor
cmps
enter
repz
and
lds
lock
adc
call
mov
cs
dec
icebp
sub
add
cmps
xchg
in
out
jle
mov
imul
inc
ins
scas
push
ss
loopne
movs
mov
mov
add
mov
cmps
bndldx
ja
fwait
into
repnz
add
push
push
jno
shl
mov
pop
pop
ret
arpl
popa
stc
es
jno
shl
les
mov
and
in
scas
dec
xor
test
out
loopne
mov
xor
sahf
inc
aad
loopne
mov
mov
mov
add
add
inc
adc
test
data16
cmps
sbb
aad
lahf
pop
pusha
loop
and
jmp
cmp
xor
aas
push
mov
int
sub
jp
out
xchg
xchg
dec
and
popa
xor
add
shl
test
mov
call
xchg
retf
bound
nop
and
(bad)
fdivr
mov
sar
lods
push
jae
into
cmps
or
in
pop
inc
jae
imul
scas
mov
rcl
cld
outs
(bad)
movs
sub
sbb
hlt
xchg
mov
icebp
or
sub
cmp
in
cmp
and
adc
lds
add
xchg
lods
xchg
js
in
cmc
cld
fld
pop
push
mov
dec
aam
add
retf
xchg
call
and
cmp
out
jmp
stc
xchg
or
mul
in
push
xchg
mov
sub
loop
sar
je
ss
ins
push
adc
add
push
pop
std
sub
lds
xchg
shr
mov
(bad)
adc
mov
imul
push
inc
aaa
ret
std
sub
jo
stos
cmp
mov
xchg
xchg
push
cmp
mov
sbb
sbb
mov
gs
mov
add
adc
fs
loop
jbe
inc
das
movs
imul
les
adc
(bad)
cmp
jp
mov
hlt
movs
std
movs
ja
in
add
xor
mov
sbb
cmps
ret
and
dec
jle
gs
sbb
cld
hlt
mov
jmp
pop
sbb
imul
fdiv
cld
xor
jb
fwait
push
push
cli
retf
push
int
add
rol
pop
into
es
jns
in
or
in
inc
mov
adc
dec
call
jg
jle
addr16
jae
sub
xor
ja
fadd
out
push
or
clc
pop
dec
in
dec
bound
int
dec
int
mov
xchg
push
pop
cwde
hlt
retf
ins
sbb
jg
xor
mov
dec
mov
jne
jecxz
xor
les
sar
add
imul
imul
lock
xchg
xor
xor
cmps
or
add
mov
rol
out
push
clc
add
loope
test
xchg
outs
cmp
stc
mov
add
cli
jnp
xchg
push
(bad)
call
or
sbb
icebp
stos
sub
loope
das
pop
adc
stos
stc
daa
cmp
das
adc
rcl
mov
cmp
add
jmp
pusha
dec
push
inc
inc
push
and
call
ins
int
int
inc
scas
dec
idiv
imul
mul
mul
addr16
sti
cld
sbb
jecxz
test
xor
cmp
push
jnp
mov
cmp
inc
and
(bad)
fnsave
mov
pop
adc
addr16
cmps
loope
mov
ds
movs
jb
or
sahf
jg
push
xchg
sub
cmp
pop
aaa
sti
aaa
mov
add
xor
mov
fldcw
aaa
dec
inc
cmp
adc
sub
mov
adc
inc
pop
sub
pop
dec
sbb
push
mov
push
and
(bad)
xchg
sub
dec
cdq
rcr
sub
inc
call
inc
cmp
mov
in
inc
mov
pop
into
outs
dec
shr
push
int3
das
xchg
cdq
inc
sbb
out
fdiv
je
pop
nop
add
sahf
xor
jbe
ret
xchg
out
cli
call
aaa
jae
lods
mov
add
fnstcw
xchg
aad
loopne
push
jmp
xchg
jle
outs
or
jnp
and
jg
lods
inc
push
mov
leave
mov
mov
aas
dec
inc
xchg
add
add
(bad)
jns
mov
dec
movs
or
inc
adc
mov
loopne
xchg
(bad)
push
fcomp
mov
mov
and
fdiv
int
inc
(bad)
mov
fs
xchg
cld
push
jmp
lock
dec
jl
rcr
sti
loopne
inc
sub
mov
imul
adc
dec
mov
xchg
ror
cmps
cmc
or
xlat
sub
movs
cmps
add
push
test
and
cmp
jns
cmp
test
std
enter
jb
inc
std
pop
sub
jbe
xchg
xchg
or
aas
aad
imul
call
jmp
cdq
sar
addr16
lds
fld
fisubr
popf
test
aas
add
adc
arpl
jae
sub
mov
jle
inc
dec
cmp
xchg
mov
dec
popf
xor
std
inc
jae
mov
scas
std
mov
push
mov
in
dec
cmp
(bad)
test
and
imul
out
je
out
popa
inc
mov
dec
mov
mov
sub
jmp
outs
adc
cmp
xchg
mov
repnz
cld
cdq
or
ins
scas
jnp
cmc
sub
into
xchg
(bad)
movs
fisubr
cmp
xor
adc
mov
pop
jmp
(bad)
xchg
mov
sub
mov
bound
in
jle
mov
xlat
sub
dec
and
out
test
dec
out
pusha
mov
cmp
jo
into
inc
je
loop
and
xchg
out
jb
or
aaa
mov
xchg
pop
pop
sar
adc
(bad)
push
mov
pop
sub
clc
pop
or
ins
mov
xor
push
add
mov
fsubr
sub
scas
jae
(bad)
out
dec
xor
xchg
imul
jg
jmp
test
mov
(bad)
xor
retf
mov
cmp
xchg
int3
sar
out
adc
sahf
push
scas
out
mov
or
adc
imul
jb
outs
xor
sbb
jnp
pop
mov
xchg
out
pop
fwait
pop
inc
stos
js
rcl
xor
sub
stos
fcomp
nop
pop
fld
aas
mov
and
add
jb
mov
inc
call
or
imul
add
aaa
shr
and
dec
ror
dec
or
xor
mov
sub
cli
inc
ds
leave
test
test
scas
sbb
div
pop
sub
mov
sbb
xchg
push
lahf
shr
cmp
or
(bad)
shr
adc
in
sbb
push
(bad)
test
mov
jo
xchg
clc
or
or
std
neg
(bad)
xchg
inc
in
inc
push
repz
inc
daa
aas
cwde
push
es
cmps
bound
jno
icebp
cmc
test
and
push
popf
inc
or
pop
sbb
and
inc
cld
sbb
jo
jae
sub
mov
push
int
sbb
rol
shr
cs
stos
fld
sbb
arpl
in
cmp
test
push
ss
jo
push
mov
(bad)
adc
movs
mov
hlt
out
test
aam
jbe
fimul
pop
je
push
enter
push
aad
popa
out
dec
mov
push
into
cmp
sub
push
jl
sbb
push
and
and
add
mov
push
fucomp
sbb
cwde
mov
rcl
jne
push
and
pop
shr
jno
test
nop
jbe
mov
dec
jbe
fbld
movs
hlt
jnp
cwde
mov
adc
imul
xchg
cdq
adc
test
push
mov
mov
cs
jmp
jmp
les
imul
mov
push
xchg
cmp
icebp
pop
mov
cmc
sub
add
and
rcl
push
push
xor
jge
pushf
inc
gs
fsubr
push
inc
je
retf
das
in
mov
das
push
and
inc
outs
pop
dec
cdq
popa
ret
cld
inc
sub
shr
sbb
xor
sub
pushf
repnz
leave
fisttp
add
dec
addr16
fnstcw
mov
add
mov
pushf
xchg
lods
int
or
cs
outs
ror
cmps
inc
retf
dec
sub
repz
es
pop
push
(bad)
inc
js
push
test
sub
mov
test
ins
jecxz
inc
or
test
cmp
nop
ret
pop
mov
outs
push
add
mov
cmps
into
pop
cdq
loop
rcl
mov
xor
sub
sbb
aaa
mov
mov
pop
adc
push
test
dec
leave
imul
mov
sbb
and
rcl
add
adc
cmp
sbb
xor
dec
aaa
xchg
hlt
lock
adc
push
sub
mov
in
xor
lahf
pop
ds
sub
and
loopne
sbb
and
imul
dec
(bad)
mov
mov
stc
dec
repnz
lock
jae
adc
out
jle
push
scas
fidiv
pop
push
xchg
and
xor
cdq
lea
jmp
loopne
lahf
fimul
jo
mov
test
in
inc
push
popf
hlt
movs
les
xchg
adc
(bad)
pop
gs
mov
cmps
ja
and
test
stos
and
aad
push
(bad)
fisttp
cld
mov
lahf
or
mov
fbld
std
ret
aad
shl
pop
inc
mov
push
ret
cmp
sbb
mov
mov
mov
mov
xchg
fsub
and
(bad)
cld
or
fcom
push
inc
add
retf
call
mov
sub
mov
and
push
bound
xor
xor
(bad)
or
sub
retf
mov
inc
stos
fcom
cmp
(bad)
fs
ret
jno
adc
mov
sbb
jl
mov
pop
inc
jmp
out
pop
frstor
dec
and
sub
inc
icebp
(bad)
je
inc
(bad)
sti
jmp
xchg
cli
cs
pop
and
out
lods
dec
enter
and
and
shl
inc
icebp
clc
jl
sub
ins
cdq
xchg
call
aad
inc
fisttp
cwde
mov
stc
fmul
mov
inc
dec
xor
xlat
jmp
lea
dec
push
hlt
jl
icebp
outs
outs
pop
int
cld
dec
sub
repnz
pop
add
mov
(bad)
test
or
inc
dec
div
cwde
test
mov
(bad)
sti
add
add
cmp
sbb
hlt
stos
ret
mov
xor
adc
and
loopne
push
aad
int
xor
add
adc
add
add
test
xchg
xchg
sti
sub
daa
sti
hlt
rcl
xchg
cli
sub
inc
xchg
ins
adc
push
cmc
neg
ins
push
mov
dec
mov
cmc
ja
jmp
mov
fistp
loope
inc
enter
mov
stc
jb
sbb
scas
push
pushf
pop
neg
jo
push
popa
dec
jmp
inc
inc
sbb
stos
fs
dec
jbe
sbb
int3
gs
shr
rcr
rcl
pop
xor
aaa
mov
push
cmp
bound
cmps
xchg
cwde
jmp
jge
fstp
xor
outs
or
test
mov
test
jnp
in
dec
adc
add
sbb
or
retf
in
imul
inc
aad
jecxz
lods
(bad)
(bad)
mov
mov
add
mov
jae
aam
mov
stos
idiv
ins
xor
jle
pop
jmp
and
inc
aad
mov
popf
and
movs
adc
out
dec
adc
adc
cmp
cmp
jns
and
push
(bad)
int
scas
xchg
adc
push
sub
dec
sub
jns
ret
stos
sbb
jg
pop
dec
inc
mov
into
stos
mov
pop
out
arpl
mov
push
sbb
adc
sbb
or
(bad)
shl
imul
scas
in
jecxz
mov
out
cmps
lock
and
mov
fbstp
nop
fwait
xor
sbb
mov
add
mov
sti
movs
(bad)
movs
and
pop
dec
arpl
(bad)
mov
pop
ret
sahf
jp
clc
jg
and
in
jmp
cwde
mov
push
cmp
clc
or
enter
cmc
pop
dec
shl
out
les
loop
mov
xor
push
jne
push
cs
test
push
pop
mov
sbb
mov
mov
and
out
cld
pop
fs
imul
dec
addr16
ds
push
and
cmc
jno
and
or
repnz
sbb
sub
pop
scas
and
aas
lahf
gs
mov
test
mov
int3
push
cs
int3
adc
jge
ret
mov
(bad)
es
int
fdivr
call
repz
nop
jno
inc
mov
loopne
mov
add
stos
push
es
cmp
shr
(bad)
xchg
pushf
inc
pop
xchg
pop
jbe
jno
lds
or
scas
mov
jnp
jg
fucomip
push
scas
iret
add
mov
outs
xchg
mov
pop
add
push
and
mov
jl
dec
ins
mov
adc
pop
in
adc
iret
test
xchg
jno
shl
popf
fwait
sbb
loop
fistp
inc
or
push
popf
loopne
or
cmp
mov
jae
add
push
mov
(bad)
das
imul
outs
xor
test
ret
pop
sahf
pusha
dec
adc
scas
loopne
mov
mov
das
push
cmp
popa
dec
inc
mov
in
mov
push
xor
nop
ins
es
fadd
outs
lds
lds
loop
cmps
aad
loop
test
mov
dec
xor
scas
test
lahf
test
adc
xor
mov
icebp
lds
retf
xor
fiadd
loop
xchg
test
sbb
aam
nop
aaa
pop
retf
push
cmp
cmp
int
out
das
dec
icebp
fs
pop
popa
sbb
or
cmp
adc
inc
and
jns
leave
imul
aam
shl
xchg
call
fldl2t
cmp
sbb
cmps
dec
push
mov
inc
cmp
bound
popa
push
dec
push
mov
aam
addr16
arpl
gs
mov
or
imul
mov
push
and
adc
mov
stc
inc
and
xchg
cdq
jnp
(bad)
fisubr
pop
sub
popa
cli
fbstp
or
sub
dec
sbb
test
je
rol
add
pop
imul
jmp
fidiv
mov
xor
xor
cmp
ds
pop
mov
test
fimul
retf
push
rcl
jae
push
sbb
and
jle
fistp
mov
add
sbb
adc
imul
test
fwait
arpl
xor
push
or
mov
(bad)
xor
mov
je
add
push
lea
mov
das
mov
(bad)
mov
mov
lods
xchg
mov
ficom
les
inc
ret
(bad)
fstp
fisttp
in
dec
mov
dec
movs
sti
out
mov
lods
cld
adc
sub
das
in
into
ins
movs
sbb
les
std
mov
test
cmp
into
call
pop
ss
xor
rcr
fsub
dec
inc
pop
mov
push
pushf
retf
jns
loop
pop
js
mov
jl
adc
pop
arpl
popa
sub
push
mov
jns
adc
repnz
bound
jmp
and
movs
test
ficom
pop
sub
pushf
dec
mov
inc
stc
sbb
mov
addr16
jns
call
(bad)
mov
add
fst
ss
and
adc
or
add
add
sub
es
int
sti
mov
dec
jmp
pushf
cmp
inc
jbe
mov
mov
dec
aad
add
jmp
mov
in
call
dec
cmp
ins
(bad)
repz
(bad)
loope
arpl
sti
pop
ja
rol
cli
adc
jnp
jp
shr
sti
xchg
push
sbb
test
int
mov
cmc
es
add
stc
or
mov
ins
aas
ficomp
mov
mov
ret
sbb
iret
loop
loope
mov
sub
dec
test
cmp
sub
in
inc
dec
dec
xchg
xlat
sub
pop
loope
adc
les
push
gs
adc
mov
sub
call
je
in
jle
sub
ins
mov
(bad)
fcom
dec
leave
(bad)
les
neg
xchg
ds
fabs
not
stc
push
push
stc
shl
pop
jbe
jmp
push
mul
aas
(bad)
push
lods
aaa
jno
add
outs
shl
test
data16
xchg
inc
xor
and
std
sbb
and
or
xchg
cmp
mov
cli
lods
arpl
rol
cli
das
dec
loop
or
jmp
fidivr
xor
in
mov
xor
add
arpl
cmp
mov
addr16
(bad)
pop
push
(bad)
test
dec
out
pop
fmul
xor
imul
inc
mov
xchg
or
scas
sar
bnd
(bad)
mov
aaa
jg
sbb
jno
push
mov
push
(bad)
sub
stos
nop
mov
scas
in
push
adc
mov
mov
dec
loope
int
test
push
fimul
call
ds
out
inc
jge
out
call
ret
cmp
loopne
fist
nop
leave
or
jno
ret
jnp
fmul
sbb
imul
mov
mov
aaa
daa
fs
xor
dec
dec
lea
xor
mov
cmp
pop
and
in
mov
sub
jbe
sub
pop
push
je
fdiv
or
jmp
mov
stos
jp
jbe
pop
adc
dec
dec
jmp
push
jmp
(bad)
pushf
in
sub
and
xchg
push
or
jbe
cmp
mov
retf
cmps
ja
jecxz
nop
jbe
push
inc
sbb
ret
xor
add
push
pop
push
scas
lods
cmc
jle
jns
test
pop
and
lahf
scas
adc
add
mov
cld
pop
mov
dec
mov
pop
stc
xchg
push
les
movs
mov
ds
dec
mov
xchg
cld
rcr
scas
(bad)
into
cmp
push
leave
xchg
xchg
bound
mov
push
pop
mov
pop
int3
loopne
pop
(bad)
xchg
popf
test
or
and
inc
in
repnz
mov
stos
xlat
call
out
es
stos
jne
push
xchg
imul
mov
mov
int
sbb
sub
in
stos
dec
nop
xchg
pop
popf
and
jbe
stos
pop
cmp
stos
dec
xor
call
pop
out
cmp
mov
pop
sbb
cdq
add
movs
nop
mov
push
lds
loop
out
mov
pop
xor
dec
dec
push
inc
mov
xor
pop
(bad)
add
sbb
enter
lds
aad
mov
sbb
out
inc
xchg
(bad)
mov
sbb
xchg
in
push
cs
jp
test
das
lods
inc
mov
and
mov
std
(bad)
test
push
int3
add
adc
xchg
add
shl
dec
ja
xchg
adc
movs
and
mov
or
mov
loope
mov
fldcw
and
enter
bound
addps
loop
retf
adc
ins
mov
inc
out
push
in
popa
jp
(bad)
into
push
enter
test
in
pop
movs
out
les
inc
cli
sub
pop
pop
scas
and
cmp
push
push
fs
cmc
cs
retf
or
xchg
and
bnd
loop
js
xor
mov
mov
pop
jo
sub
adc
or
adc
or
jmp
shl
fwait
xlat
dec
icebp
sub
jmp
or
xor
adc
mov
fdiv
xor
imul
push
or
sbb
inc
stos
retf
pop
xor
push
int3
add
bound
in
scas
sbb
mov
mov
ss
sub
xchg
mov
int
fst
jmp
and
dec
fyl2x
aad
int3
xor
retf
sbb
into
add
inc
inc
cwde
sti
rol
ins
push
inc
je
cwde
push
popa
pop
jecxz
adc
cmp
popf
into
inc
push
sub
mov
xlat
fsub
push
or
ror
stos
fwait
mov
loop
push
js
pop
mov
loopne
sbb
in
adc
int3
rcl
mov
xchg
nop
sub
sti
xor
pusha
mov
daa
xor
clc
shr
shr
dec
shl
shl
mov
aad
cwde
fstp
mov
mov
sti
addr16
mov
lds
or
push
rcl
xchg
in
js
adc
dec
call
inc
ror
movs
add
and
adc
or
ss
outs
rcr
mov
push
movs
test
out
add
test
not
xchg
imul
adc
xor
dec
not
adc
jmp
icebp
or
mov
scas
jmp
stos
mov
leave
pusha
adc
(bad)
cmc
jecxz
idiv
mov
(bad)
mov
lds
sub
and
dec
(bad)
push
ret
aas
jle
lea
(bad)
pop
int
jns
call
pushf
xchg
test
or
xlat
aam
and
push
sub
fdiv
adc
pop
or
in
inc
push
push
loopne
inc
rcl
test
mov
cmc
xchg
test
lds
push
in
scas
es
jbe
mov
loopne
sub
jno
out
jo
jecxz
dec
ins
das
jmp
call
enter
(bad)
mov
loopne
mov
lods
cmp
pusha
inc
scas
add
or
loopne
out
push
dec
cs
mov
jae
dec
mov
aas
out
inc
popa
push
jae
sbb
ins
and
lods
dec
inc
mov
stos
movs
dec
fidivr
lahf
movs
add
mov
inc
in
int3
pop
dec
fnstenv
loope
in
ret
das
sbb
mov
pop
into
jl
pusha
sub
cmp
dec
scas
xor
rcr
push
ja
pushf
scas
outs
or
xor
mov
xchg
sub
shr
xchg
enter
and
test
mov
push
inc
add
rol
test
sbb
mov
mov
add
xor
and
clc
mov
mov
in
test
in
cdq
xchg
pop
mov
cmp
add
fcomp
mov
(bad)
call
jp
inc
xlat
cmp
mov
ja
or
in
sbb
or
mov
mov
pop
sub
adc
scas
push
into
mov
ret
shl
add
fwait
and
jns
test
(bad)
outs
shr
rcr
dec
icebp
in
(bad)
daa
xor
sub
xchg
pop
and
and
push
cmp
mov
push
call
mov
in
rcr
push
neg
out
gs
jne
dec
pop
inc
adc
xchg
push
pop
sahf
pop
popa
push
pushf
mov
stos
outs
mov
pop
adc
pop
adc
aaa
ret
outs
inc
mov
ja
mov
add
fs
mov
retf
mov
pop
jmp
dec
scas
ins
fwait
(bad)
clc
pop
jne
lods
push
aad
out
pop
cmp
div
cmp
and
fwait
cmp
(bad)
adc
ffree
add
shl
add
dec
mov
inc
and
ja
mov
pop
xchg
fiadd
cdq
pop
in
(bad)
xchg
inc
xor
popf
repnz
inc
(bad)
mov
push
push
retf
dec
test
push
test
jmp
leave
ja
dec
xchg
imul
out
(bad)
aad
pop
test
mov
add
outs
cdq
jecxz
or
add
jns
jp
cs
lds
retf
or
fdivr
test
jmp
or
xchg
repz
pop
xor
cld
fldenv
repz
aas
adc
aas
nop
pop
jno
nop
fucomi
pop
pop
les
jae
and
mov
dec
loope
cmp
cwde
pop
fld
mov
ins
fsub
imul
sbb
out
push
sti
or
mov
jne
outs
push
clc
cwde
(bad)
je
dec
jp
sub
lods
std
daa
arpl
pusha
mov
jmp
in
stc
push
jno
out
shl
js
clc
movs
mov
dec
pop
sub
ret
mov
pop
pop
icebp
(bad)
cmc
mov
call
or
and
mov
test
pop
mov
inc
outs
add
jnp
mov
aas
pop
jp
mov
sub
xchg
push
mov
fst
xchg
xchg
jb
test
mov
loop
pop
stos
jmp
xchg
add
add
imul
aas
and
rcr
or
test
sbb
aaa
mov
movs
outs
sub
xor
sahf
inc
xor
jns
adc
aad
je
push
test
mov
jbe
imul
xchg
movs
xchg
cdq
push
inc
mov
(bad)
cmp
(bad)
daa
or
sub
mov
mov
mov
mov
and
cmps
in
out
jle
pop
pop
test
fimul
adc
jl
mov
cmp
dec
scas
inc
lahf
mov
dec
icebp
(bad)
adc
aam
aad
ret
aad
push
sbb
pop
jns
pop
sbb
aam
push
jno
mov
(bad)
pop
dec
test
mov
mov
mov
cmps
add
xlat
mov
outs
xchg
sahf
lods
adc
imul
jne
shl
add
(bad)
cwde
and
adc
int
xchg
inc
inc
mov
sub
lods
xchg
int3
fiadd
ret
xor
fsubr
fiadd
dec
cmp
pop
out
sub
(bad)
pushf
dec
fcom
or
in
clc
cld
sahf
imul
adc
mov
inc
sbb
out
clc
out
jne
or
mov
cmp
push
jae
data16
das
jns
outs
call
test
sbb
outs
jp
loopne
frstor
clc
mov
sbb
lods
test
outs
mov
scas
xchg
push
xchg
in
mov
mov
call
push
aad
das
sub
mov
jle
lods
ret
or
fadd
xor
adc
repnz
dec
sub
push
xor
inc
mov
adc
fisub
fxch
push
aas
(bad)
dec
and
sub
or
and
shl
pop
ins
sbb
mov
push
cmp
and
and
push
fistp
or
rdpmc
pop
xor
pop
fcomp
out
xchg
retf
push
movs
xor
(bad)
test
sbb
or
arpl
cmps
sub
cwde
sti
in
clc
inc
ret
inc
pop
mov
loope
aaa
inc
(bad)
xchg
repz
pushf
mov
xchg
ret
adc
mov
sbb
or
stos
lods
mov
jbe
sti
fcom
es
add
mov
ror
push
mov
in
and
pusha
imul
enter
ret
repz
push
loope
jecxz
sub
push
push
or
ret
jne
fs
mov
sbb
xor
or
das
lods
and
ss
mov
in
xor
out
adc
cmp
neg
mov
pop
cmp
sub
mov
(bad)
mov
cwde
ins
fisubr
pop
ins
enter
xlat
aas
adc
out
enter
in
adc
sbb
xchg
jp
aad
push
adc
add
xlat
cmp
push
ins
pop
pop
push
stos
dec
out
inc
push
cmp
push
xchg
movs
movs
in
loopne
cmp
popa
lahf
pop
fcomp
mov
ficomp
sub
and
leave
dec
add
dec
pop
fld
sbb
inc
ficomp
fwait
xchg
jbe
mov
bound
enter
in
xchg
push
ins
fistp
xor
mov
out
adc
test
jl
mov
scas
pushf
loopne
mov
pusha
mov
cwde
mov
ror
and
jle
fsub
out
mov
icebp
push
loop
adc
call
loop
je
dec
cmc
addr16
cmps
pop
mov
jge
(bad)
jg
sbb
loop
popf
xor
ds
jae
cmp
dec
clc
adc
ins
cmp
xlat
clc
jge
mov
pop
xchg
mov
cwde
jnp
dec
movs
sub
push
xor
js
xchg
sbb
lea
add
sbb
sub
xchg
xor
sub
xchg
cwde
jmp
mov
int3
sbb
fnstsw
xchg
pop
adc
daa
js
mov
into
mov
shl
jne
xor
push
and
into
xor
and
or
jb
push
pushf
jl
lds
faddp
push
mov
outs
jmp
sbb
ins
push
leave
neg
xor
ins
cmp
xchg
mov
stos
div
mov
jno
inc
jmp
popa
test
das
mov
push
add
adc
pop
or
stos
fsubr
imul
xor
sbb
add
jne
dec
movs
out
je
mov
add
ins
sti
ror
enter
or
xor
shr
shl
js
cmp
(bad)
rcr
sub
rcr
jg
in
fdivr
inc
inc
xor
push
enter
adc
not
ins
jbe
pop
fadd
stc
adc
push
pop
iret
dec
nop
xor
cmp
push
(bad)
ds
pusha
fdivp
in
dec
pop
pop
xlat
aam
sbb
cli
mov
fsubr
pop
ins
jnp
xlat
and
pop
in
add
dec
sti
(bad)
sar
pop
push
fcom
ret
jecxz
sti
call
mov
push
pop
or
sub
push
mov
mov
popa
lods
sbb
inc
neg
and
sahf
out
sbb
fadd
jl
sbb
mov
jecxz
stos
or
add
push
mov
push
push
in
xor
ja
imul
retf
adc
dec
xchg
fst
dec
xor
int
jg
fs
shl
push
jo
sbb
and
pushf
mov
adc
inc
jle
sbb
xor
repz
test
pop
out
mov
sub
repz
(bad)
daa
int3
jo
test
scas
inc
bswap
les
fwait
pop
cmps
dec
cmp
vsubpd
sub
mov
cli
fcom
mov
and
or
sub
cmp
stos
je
fwait
jbe
cmp
mov
aaa
hlt
mov
popf
mov
cmp
xchg
loopne
dec
xor
cmp
pop
dec
xor
sbb
test
mov
and
sar
loop
imul
xor
fcmovbe
test
xor
and
not
(bad)
aad
or
cdq
leave
lahf
sub
or
and
inc
and
shr
ins
pop
test
jmp
cdq
cmp
lock
mov
push
add
or
je
mov
push
mov
mov
adc
lahf
sbb
je
idiv
repnz
add
or
arpl
das
in
addr16
mov
movs
repnz
int3
jmp
sbb
scas
leave
mov
push
sub
out
out
and
pusha
aam
sub
imul
cmp
xor
push
rol
push
mov
cmp
cdq
int3
inc
xlat
fmul
cld
pop
sub
movs
xchg
scas
daa
cmps
out
test
mov
jl
xchg
(bad)
or
stc
jg
ficom
nop
popa
jno
mov
in
(bad)
jae
dec
lock
cmps
and
jno
lock
mov
cmps
sar
mov
gs
dec
add
iret
test
mov
shr
sub
mov
jp
sub
daa
add
ja
mov
mov
add
xchg
dec
cdq
stos
adc
pop
jnp
cmc
scas
add
xchg
and
clc
imul
ja
lock
inc
pop
in
lods
mov
xor
mov
(bad)
in
addr16
test
mov
sub
clc
mov
pop
test
loope
into
or
aam
and
scas
xchg
inc
(bad)
pop
xor
xor
jnp
scas
movs
jo
or
or
adc
xchg
jae
jmp
in
mov
xor
nop
iret
mov
mov
loopne
and
cmp
fnclex
push
das
out
test
sbb
xor
outs
addr16
pop
shl
dec
bound
push
(bad)
add
and
push
jge
pop
jnp
jnp
jns
mov
aas
mov
sti
add
sbb
(bad)
jmp
lods
sub
or
sbb
or
in
add
ret
adc
jmp
(bad)
outs
push
stc
and
imul
les
(bad)
outs
xor
xchg
shl
lods
xor
pop
out
xchg
inc
xchg
or
and
xor
xchg
ins
or
iret
loope
call
scas
int3
pop
xlat
jo
outs
inc
dec
cmps
pusha
cld
cs
clc
jbe
sar
or
ins
cs
inc
mov
inc
mov
push
adc
adc
xor
test
push
dec
jno
or
int
js
sti
mov
xchg
pop
fsub
xchg
mov
add
jne
(bad)
(bad)
cmp
sub
cli
dec
inc
mov
lahf
push
push
call
jmp
(bad)
aad
push
xor
mov
in
push
add
push
pop
pop
push
sub
mov
call
ret
add
or
scas
mov
pop
pop
inc
inc
jb
call
add
jne
or
add
sbb
sub
mov
movs
adc
sub
test
cmps
dec
stos
scas
fidivr
sar
xchg
pop
movs
out
pop
xchg
rol
push
enter
pop
shl
sbb
add
push
cmp
and
imul
repnz
arpl
popf
mov
xchg
mov
jb
inc
push
fs
mov
cmps
ins
pop
xchg
xchg
pop
push
dec
xchg
std
or
jno
sbb
sbb
shl
pop
shl
cmp
das
lods
dec
sbb
fild
sub
xchg
push
sub
das
xchg
in
push
test
and
loop
jp
lahf
or
in
adc
stos
pop
in
imul
loop
clc
add
out
mov
adc
dec
loopne
data16
cmps
pop
mov
xchg
push
or
addr16
sub
jb
jae
or
mov
push
mov
loopne
pop
xor
push
popf
es
sub
inc
stos
or
cli
adc
push
sub
jle
pop
jp
push
sub
dec
push
cmps
sub
xchg
xchg
inc
(bad)
loopne
sub
dec
in
push
sbb
jmp
nop
xchg
mov
or
(bad)
pop
lock
jl
dec
out
mov
sbb
popa
sbb
into
or
fdivr
ret
mov
imul
jo
pop
adc
dec
pop
push
test
sub
inc
daa
jge
mov
in
push
(bad)
in
push
(bad)
jmp
dec
setle
cmc
sub
enter
out
xchg
pop
pop
jmp
add
sbb
push
jmp
sbb
ret
jbe
or
pusha
(bad)
cmp
scas
pop
ret
xor
adc
cli
not
mov
ret
retf
icebp
into
(bad)
sahf
push
cwde
fdiv
jno
mov
fmul
inc
movs
mov
movs
mov
stc
cld
pusha
mov
dec
sbb
out
ds
xchg
mov
and
add
pop
jns
mov
sbb
inc
inc
mov
inc
shr
iret
pop
push
jnp
loope
push
jge
mov
pop
sbb
inc
mov
cmps
inc
fist
aam
push
test
pusha
sub
pop
and
or
cmps
ret
stos
loope
ins
mov
jae
push
mov
in
sub
mov
add
mov
ins
add
shl
mov
inc
and
mov
xlat
inc
sahf
or
push
pop
repz
psllw
push
mov
aad
(bad)
fisubr
retf
fbld
mov
inc
or
mov
fsub
dec
in
fist
imul
xchg
push
mov
xchg
push
fstp
das
arpl
pop
mov
mov
push
movs
sub
out
dec
xchg
inc
sub
dec
mov
xchg
pop
js
dec
dec
icebp
xchg
mov
das
mov
aad
pop
dec
and
mov
mov
inc
scas
inc
pop
inc
jae
xor
outs
ds
sub
cmp
shr
out
int3
xchg
and
mov
jae
mov
adc
adc
push
mov
(bad)
sub
shl
inc
adc
ins
add
in
xchg
fistp
mov
mov
dec
jbe
jns
cdq
xor
arpl
sub
add
adc
in
mov
retf
in
mov
retf
adc
ins
xchg
jno
push
xchg
repz
or
ret
dec
ja
cmp
fbstp
not
enter
jle
sub
sti
cmps
jo
pop
add
ds
enter
data16
xchg
fst
jae
or
gs
pop
ins
jo
fsubr
lds
sbb
pop
sahf
call
pop
fs
fdivp
push
mov
outs
dec
pushf
mov
dec
repnz
fild
sub
push
(bad)
xlat
dec
add
xor
aaa
mov
imul
jne
mov
jb
sbb
push
in
imul
jno
add
aam
jnp
lods
sti
jmp
fisub
mov
ins
dec
dec
mov
dec
sahf
test
xchg
xlat
push
jle
mov
add
adc
pop
xor
adc
shl
and
cs
stos
movs
mov
call
push
mov
stos
jl
or
cmp
jg
push
mov
dec
pop
ror
push
(bad)
adc
fs
and
jo
xchg
adc
dec
daa
(bad)
inc
nop
fcomp
mov
cld
adc
adc
and
inc
out
fstp
xchg
jo
mov
pop
arpl
int
push
daa
fdivrp
lock
xor
push
sub
in
aam
push
hlt
sti
int3
cmp
aaa
push
pop
lahf
test
and
inc
ins
xchg
ja
cmp
rol
imul
xchg
xchg
inc
mov
pusha
mov
mov
jmp
dec
in
mov
jmp
dec
dec
movs
and
mov
or
bnd
xor
cli
xchg
sub
pusha
mov
mov
stos
dec
neg
sbb
iret
sbb
ins
adc
adc
mov
fisttp
and
sbb
dec
add
jmp
cmc
lock
sub
dec
cdq
mov
cmps
ror
lahf
test
inc
icebp
xchg
mov
stos
mov
mov
mov
cdq
mov
nop
or
adc
and
movs
dec
loop
and
std
loope
add
out
hlt
js
cmp
retf
call
call
in
mov
push
add
sar
cmc
adc
test
iret
std
test
jae
push
int3
inc
(bad)
sbb
add
icebp
loope
arpl
xchg
jp
mov
jne
inc
in
mov
xor
(bad)
cmp
or
scas
mov
lahf
cmp
shl
pop
dec
jne
sbb
and
and
xchg
jmp
sub
mov
leave
push
addr16
outs
mov
neg
xchg
mov
or
mov
pop
scas
mov
rcl
dec
sbb
jp
mov
retf
xor
xor
cmp
mov
add
push
cmp
xor
retf
cmp
aas
xor
and
lods
mov
mov
jmp
adc
sar
pop
into
movs
lods
call
es
inc
xor
loop
and
xchg
or
ja
mov
jb
xor
stc
mov
adc
push
push
mov
in
or
add
push
icebp
add
fstp
jge
lock
push
cs
rcl
test
call
adc
add
dec
nop
es
cmp
pop
pusha
jnp
adc
aaa
inc
pop
test
pop
mov
inc
mov
aas
inc
xchg
push
pop
inc
out
in
mov
push
jmp
push
ins
(bad)
push
(bad)
ror
das
repz
dec
jo
pushf
mov
jmp
adc
aam
and
push
repz
mov
or
lds
mov
mov
pusha
cmp
jne
dec
into
sti
scas
and
cld
fcomp
mov
sub
jnp
push
push
push
stos
pop
cmps
jns
jl
or
jne
mov
adc
(bad)
shl
cmc
test
xchg
xor
dec
(bad)
test
in
push
int
push
adc
iret
cmc
movs
or
loopne
inc
test
jb
out
pop
sbb
lods
inc
xchg
inc
sub
mul
int3
mov
add
jb
sahf
cmps
data16
adc
inc
out
fdivr
push
call
xchg
inc
sbb
adc
adc
push
cld
dec
cdq
sub
dec
and
stos
mov
nop
mov
iret
adc
sbb
xchg
cmp
pop
xchg
test
pop
bound
sub
aas
jnp
fild
push
or
cmp
cs
xchg
cs
and
xchg
stc
inc
lock
addr16
mov
clc
fstp
mov
mov
inc
icebp
pop
js
popf
test
mov
dec
cmps
xchg
add
push
inc
inc
mov
pop
pushf
les
cdq
sub
mov
jp
push
out
add
cmp
pusha
cmp
jae
push
lock
ret
mov
mov
es
and
popf
add
mov
xchg
shl
xchg
dec
cmp
lods
mov
and
cmp
stos
xor
ficom
push
or
dec
in
sbb
mov
mov
mov
dec
out
sub
pusha
jbe
pop
push
push
cmp
fcom
xchg
add
push
pusha
cmp
test
inc
dec
adc
je
pop
xor
xor
cmc
ret
pop
daa
out
jmp
add
sahf
jne
lods
xchg
lds
pop
cli
shl
pop
xlat
lods
mov
cmc
xchg
lods
lods
and
inc
jbe
push
pusha
mov
jo
mov
jno
out
add
jnp
mov
mov
fsub
mov
dec
mov
jnp
mov
xor
or
std
mov
mov
aas
mov
aas
(bad)
or
mov
xchg
call
pop
push
jno
inc
out
jns
mov
cmp
pop
jle
cmc
mov
cwde
ins
lds
xchg
xchg
out
pusha
jno
es
out
or
enter
dec
xor
jp
push
ja
stos
dec
enter
adc
sar
mov
push
push
mov
dec
add
mov
push
and
lods
xchg
jae
mov
pop
cmp
add
mov
cmp
or
jmp
cmp
mov
loope
wbinvd
xchg
jae
jae
gs
popf
dec
fidiv
mov
sar
xor
xor
lock
sbb
push
arpl
retf
and
sbb
mov
pop
or
pop
scas
xchg
or
jb
mov
mov
push
xlat
fsub
pop
out
sub
test
add
shl
jmp
fld
mov
inc
out
(bad)
ds
or
inc
aad
push
jl
sub
xor
ins
out
cmp
(bad)
dec
mov
jmp
xlat
and
cld
mov
gs
call
cmps
mov
sets
inc
mov
nop
xchg
neg
rcl
xor
dec
cdq
push
and
jae
inc
gs
out
cli
bound
stos
iret
das
dec
mov
mov
test
shl
shl
scas
stos
push
push
in
cmp
popa
cmps
out
push
(bad)
xchg
fmulp
pop
lods
sbb
push
iret
enter
adc
stos
cmps
fwait
data16
es
gs
enter
mov
ficomp
jmp
mov
push
imul
sbb
dec
pop
push
mov
stc
test
or
or
inc
jg
ret
lea
jne
add
gs
mov
outs
enter
aaa
cmc
ins
call
in
call
in
mov
cmp
(bad)
jbe
xor
sub
push
stc
add
mov
in
sub
or
scas
lahf
mov
repnz
mov
lock
retf
xor
imul
nop
inc
adc
sbb
std
lea
mov
mov
inc
pop
repnz
lds
pusha
lahf
(bad)
imul
frstor
into
(bad)
call
jbe
stos
out
jns
pop
call
xchg
sub
daa
add
sub
hlt
mov
lahf
sub
bnd
in
(bad)
daa
sub
jo
stos
push
jne
cmc
rol
dec
and
xchg
shr
cmps
jle
and
ret
sbb
xlat
(bad)
fbstp
aas
ret
pop
xor
fucomip
repz
cmp
sbb
arpl
or
pop
sbb
pop
lahf
mov
pop
repnz
inc
jbe
je
out
sbb
xchg
sub
pop
or
mov
iret
or
daa
and
aam
aam
adc
jmp
pop
adc
push
jecxz
jbe
xchg
cmp
(bad)
jp
push
xchg
add
jge
xchg
xacquire
and
jmp
fnstsw
out
push
pusha
retf
cld
scas
mov
mov
push
or
sub
loope
call
lahf
xchg
cmp
pusha
cwde
or
retf
(bad)
test
push
call
mov
cmp
jo
dec
arpl
cld
and
push
aaa
mov
mov
sub
sahf
inc
out
push
jae
into
aam
mov
pop
into
xchg
outs
jmp
das
cmps
ror
push
ins
call
push
and
mov
mov
push
imul
sub
(bad)
outs
out
in
rol
sbb
push
jg
jae
jmp
out
pushf
and
rcr
xor
xchg
cmp
cmps
pop
das
dec
xor
add
aad
das
jb
sbb
popf
add
xchg
jns
movs
xchg
sahf
ficom
fild
xor
std
inc
cmc
adc
jecxz
into
cmps
or
mov
mov
fwait
dec
xchg
jle
jge
xor
mov
jmp
mov
xchg
js
dec
xchg
push
aad
cmps
push
sysret
arpl
cli
sub
push
ins
test
jbe
movs
fadd
xor
retf
pop
icebp
add
xor
jmp
xchg
fstp
mov
loopne
mov
lahf
xchg
in
push
xchg
xor
jbe
dec
ret
jg
loope
inc
pushf
arpl
loop
aad
rcl
or
and
sbb
(bad)
(bad)
fwait
push
xor
retf
shr
aam
or
les
sub
cmp
xor
retf
adc
adc
inc
jns
hlt
jl
jmp
sbb
(bad)
push
lods
push
xchg
jl
call
(bad)
push
sbb
retf
xchg
sbb
push
cmp
lea
xchg
ins
mov
adc
dec
gs
retf
(bad)
adc
pop
pcmpgtd
aad
(bad)
xchg
or
cmc
xchg
bound
push
and
jecxz
pop
or
mov
mov
jmp
mov
xchg
es
sbb
(bad)
rcl
fisttp
pop
pop
pop
bound
je
std
mov
and
mov
(bad)
leave
mov
xchg
mov
sub
(bad)
aam
mov
movs
into
iret
xchg
test
es
jns
jae
cdq
inc
jno
add
or
jnp
shl
add
mov
sbb
xchg
and
out
hlt
sub
jnp
or
and
jno
and
fistp
push
inc
mov
sahf
sbb
xlat
inc
sub
dec
aaa
out
(bad)
scas
mov
push
arpl
mov
jnp
push
jnp
adc
or
push
retf
xor
jno
xor
cmp
movs
(bad)
push
pop
xchg
pop
je
xchg
add
dec
or
or
pop
ret
or
xchg
ret
clc
imul
pop
fbstp
mov
sbb
xor
out
inc
(bad)
jmp
stos
mov
mov
popa
jmp
or
jge
and
sbb
shr
ret
mov
push
adc
in
xor
in
repnz
mov
pcmpgtw
or
sbb
daa
sub
idiv
out
fist
push
jb
push
or
mov
cdq
in
pop
mov
mov
push
(bad)
pop
dec
out
jo
mov
sub
mov
jae
push
hlt
jl
std
push
sbb
into
push
or
out
ror
aas
lods
pop
jg
dec
sub
and
fdiv
adc
cmps
mov
sub
and
jo
dec
inc
sbb
pop
inc
loopne
dec
sub
sbb
out
loop
fistp
cmp
dec
call
jb
test
outs
test
aaa
dec
dec
mov
pop
mov
add
es
cld
xlat
and
pop
mov
jl
stos
or
mov
test
int
pop
dec
xchg
jmp
mov
(bad)
dec
or
cld
data16
jae
ret
jae
xor
pop
rol
inc
idiv
jnp
cmp
adc
leave
bound
inc
jmp
cmp
pop
cmp
xchg
cmp
xchg
jmp
jl
test
ja
mov
mov
mov
(bad)
push
rol
cmc
mov
cwde
loopne
out
int3
idiv
dec
or
mov
ror
outs
dec
(bad)
push
xor
xchg
xor
(bad)
jg
jle
cs
and
out
mov
out
ins
and
add
fiadd
mov
(bad)
std
gs
mov
daa
sub
sub
sub
sbb
(bad)
push
fs
xor
inc
test
test
jl
mov
jmp
lock
pop
stos
adc
pop
inc
or
or
jne
or
stc
pop
inc
fdivr
xchg
inc
cwde
cmp
(bad)
xor
mov
clc
arpl
aas
shl
sbb
data16
out
xchg
retf
push
sub
and
fild
cmp
adc
scas
mov
aad
push
aas
sbb
scas
call
inc
popa
lea
cwde
daa
sub
xchg
nop
stos
cwde
retf
xor
pop
push
scas
mov
jmp
std
mov
adc
push
push
jns
pusha
imul
dec
sahf
das
pusha
(bad)
lock
out
sub
jns
pop
lahf
dec
mov
pop
popa
rcl
pop
inc
mov
das
jno
loope
arpl
dec
es
cdq
mov
js
in
rcr
ror
enter
stos
mov
xchg
push
push
fild
cmp
outs
dec
in
jnp
fisubr
adc
xchg
pusha
ds
inc
leave
add
mov
not
inc
push
ror
jmp
jg
cmc
cmp
sahf
cli
(bad)
loope
cmp
imul
lea
icebp
jno
ja
inc
test
imul
jno
pop
mov
or
das
movs
mov
jae
icebp
cli
aam
cli
xlat
push
repnz
mov
mov
mov
sbb
adc
fst
lods
sti
(bad)
or
mov
and
jp
push
shr
outs
loopne
in
dec
sub
fsubr
inc
lea
je
add
sbb
repz
outs
movs
xchg
xchg
add
(bad)
mov
mov
mov
repz
mov
push
jno
fs
ja
(bad)
fisub
cmps
daa
cmc
ds
jns
aaa
mov
mov
jge
xchg
lods
pop
popa
int3
cld
xchg
adc
sbb
sub
xor
das
(bad)
xor
add
push
pop
jl
sub
ss
retf
aam
cmp
dec
imul
test
sbb
mov
pop
pop
loope
or
dec
test
cmp
inc
test
or
lahf
in
sar
pop
xchg
mov
push
repnz
push
outs
xor
xchg
mov
or
outs
shl
xchg
xchg
mov
fwait
mov
mov
nop
push
(bad)
and
or
aaa
jg
and
xchg
jmp
or
out
sbb
fdiv
mov
dec
loopne
and
xor
icebp
outs
shl
lods
shl
inc
(bad)
call
and
and
pop
inc
jbe
sub
xor
dec
loop
cld
mov
int
int3
cmp
xchg
jne
lea
test
jno
nop
xchg
cli
ficom
cmps
adc
cmp
adc
das
cld
push
lea
xchg
fist
or
ins
sbb
test
sub
pop
xor
pop
or
cmp
mov
mov
mov
out
adc
ret
rcr
sub
rol
cdq
pop
stos
out
pop
mov
push
aas
sbb
add
pushf
mov
pop
inc
sbb
out
out
push
jno
sub
dec
pop
inc
lock
movs
dec
ja
not
pop
mov
jecxz
xchg
jno
pop
mov
rcr
inc
(bad)
in
mov
xchg
adc
out
pop
imul
xchg
fmul
add
bound
aaa
push
nop
xor
inc
out
cmp
or
mov
sbb
popf
call
adc
test
pop
jbe
loop
add
repnz
mov
or
cli
jae
jecxz
adc
popf
ss
pop
mov
pop
mov
dec
js
jne
(bad)
in
dec
dec
pop
in
ftst
mov
(bad)
pop
jb
sbb
ins
jle
dec
and
and
loope
and
push
fbld
push
ss
or
pop
cmp
bound
mov
sub
int
cmp
les
sub
repz
mov
in
jo
push
jns
sub
fadd
dec
iret
(bad)
mov
mov
xor
xor
jne
aam
xchg
adc
push
cmp
add
xchg
repz
cmp
fstp
imul
dec
dec
sbb
int3
and
push
push
dec
sar
add
jle
and
div
outs
pop
mov
adc
push
ror
sar
jnp
push
sub
(bad)
push
scas
mov
frstor
and
nop
je
ja
push
or
into
jmp
and
(bad)
cmp
in
inc
test
arpl
cmp
dec
out
xchg
push
inc
add
test
mov
ret
(bad)
mov
mov
rol
mov
push
sbb
add
icebp
push
(bad)
js
pop
cdq
inc
inc
push
adc
mov
jp
mov
imul
mov
jmp
push
push
adc
fwait
aas
lock
jle
sub
in
add
mov
dec
jae
xor
cmp
add
icebp
cli
shl
ret
cmps
test
sbb
(bad)
push
es
fnstenv
in
sbb
leave
push
sub
int
sub
lds
aaa
aas
or
or
jl
nop
inc
mov
das
cdq
mov
dec
ins
mov
and
adc
mov
lds
aam
(bad)
(bad)
push
lods
fimul
fdivr
cdq
bound
es
and
xchg
mov
pop
sub
leave
inc
clc
dec
add
lock
dec
stos
pop
mov
mov
adc
mov
cmps
mov
fst
dec
aam
js
lock
iret
or
fistp
inc
pop
mov
or
dec
xor
out
out
stos
js
mov
mov
mov
adc
cmp
adc
ret
xchg
nop
mov
outs
mov
fmul
ins
dec
and
adc
cmc
arpl
ds
sti
cmp
inc
add
call
adc
test
jmp
enter
loopne
dec
mov
jl
fisttp
and
repz
das
sahf
sub
mov
sub
mov
imul
sbb
push
cmp
lahf
rcr
pop
je
xor
popa
fisubr
jg
xor
push
xor
enter
jmp
(bad)
in
inc
sub
pop
sub
(bad)
pop
xor
test
ss
xchg
in
lods
in
fist
stc
sub
inc
sbb
xor
fld
adc
mov
sub
jmp
sar
jmp
cwde
mov
iret
scas
aad
gs
adc
mov
sahf
mov
pop
clc
aas
imul
in
test
shr
mov
addr16
loopne
mov
mov
mov
es
and
xchg
fcmovb
js
jnp
fisttp
out
push
and
or
icebp
dec
adc
cwde
ret
xchg
push
in
aad
sbb
push
or
cdq
sbb
xor
dec
stos
sub
cld
mov
jb
cs
cmps
(bad)
loope
xchg
mov
fld
div
xchg
cmps
mov
cmp
dec
ins
repnz
stc
aas
jmp
daa
neg
shl
mov
cs
cli
std
into
mov
inc
xchg
ds
mov
mov
add
cmp
dec
mov
jo
xor
bound
mov
popa
cdq
popf
pop
adc
fs
fst
or
xchg
mov
pushf
jns
(bad)
pop
xchg
cmp
adc
test
es
inc
add
hlt
and
fsubr
paddw
sub
in
mov
shl
add
or
xchg
test
lods
cmps
sub
mov
scas
push
bound
sbb
xchg
loop
mov
hlt
cmps
inc
pushf
retf
aas
adc
cs
or
call
retf
xor
(bad)
dec
jg
xor
cmp
or
imul
jle
das
(bad)
popa
adc
xor
imul
repnz
fsubr
les
fisubr
cmp
aaa
call
xchg
mov
popa
aam
or
test
fucomip
test
sbb
sbb
xchg
jmp
pop
jmp
dec
mov
sub
xor
mov
sbb
xchg
pusha
xor
cmp
lods
ins
arpl
cmp
mov
hlt
leave
xor
(bad)
lods
cmp
sub
test
add
push
pusha
sub
xor
(bad)
je
jmp
outs
lea
(bad)
les
mov
imul
mov
mov
push
cmp
inc
or
cmp
(bad)
sub
das
cmc
loope
adc
push
xor
fcom
sub
(bad)
jbe
repnz
mov
mov
bound
push
mov
leave
mov
pop
pop
(bad)
ret
mov
xchg
les
add
ds
push
fcmove
nop
int3
push
sbb
loope
das
mov
lds
mov
aam
push
dec
addr16
cwde
sub
hlt
retf
je
mov
inc
std
into
fs
imul
push
mov
jns
mov
sbb
xor
xchg
hlt
adc
out
jns
enter
cmc
sbb
xor
sahf
mov
aas
(bad)
or
mov
daa
pop
mov
es
inc
(bad)
je
sbb
jbe
mov
fstp
test
int
fs
ret
adc
cmp
rol
mov
aad
mov
jae
add
int3
mov
ins
mov
out
mov
sahf
add
or
lds
cwde
fisub
lds
jle
cmp
xchg
pop
add
xor
mov
mov
mov
or
mov
push
mov
xor
std
aad
add
retf
or
jb
mov
jae
daa
fst
out
es
jp
jg
sub
inc
mov
aas
push
aaa
popf
sub
mov
adc
sbb
push
sub
jl
cmp
push
dec
dec
mov
mov
cmps
jb
adc
(bad)
cwde
in
cmc
out
jno
or
leave
add
dec
sbb
sub
cld
adc
pusha
mov
adc
mov
xor
test
jle
adc
leave
xor
inc
idiv
fwait
call
sbb
cmp
jo
lea
xchg
test
jecxz
jno
pop
or
xor
xchg
xchg
sbb
nop
rcr
mov
dec
jecxz
xor
cmps
mov
cdq
jle
pushf
add
loop
enter
sub
scas
test
add
fucom
stos
sbb
add
jbe
pushf
in
adc
mov
and
test
in
push
sub
sbb
push
push
maskmovq
test
mov
test
pop
pop
(bad)
inc
push
mov
cmp
hlt
inc
adc
rcr
call
addr16
stos
rep
ss
das
sub
jb
push
imul
sbb
in
mov
icebp
lods
jo
fs
sub
dec
dec
loop
or
enter
fisttp
shl
push
je
push
adc
cmp
jae
dec
sbb
(bad)
xchg
shl
inc
dec
lea
xor
or
in
imul
push
sub
shr
cld
aas
sub
mov
xchg
mov
out
sti
push
repnz
push
bound
jle
dec
or
adc
add
(bad)
push
xlat
test
xor
into
(bad)
sbb
pusha
pushw
inc
in
das
mov
lea
mov
retf
inc
add
or
iret
sbb
xor
movs
adc
cmps
push
bound
movs
cmc
scas
inc
aad
fmul
fdiv
daa
shl
sti
mov
out
dec
punpckhbw
inc
fmul
movs
add
les
push
icebp
cmp
pop
push
cmp
sub
jmp
jo
push
sub
sti
xchg
and
test
movs
cdq
stos
das
sbb
inc
mov
cmp
je
inc
pop
inc
pop
sti
xor
or
retf
ret
cmps
(bad)
mov
pop
ja
cmc
adc
mov
mov
sbb
jno
sub
inc
sbb
cmp
rcr
test
shl
or
std
scas
add
mov
lahf
dec
lock
xchg
shr
(bad)
cmps
push
mov
inc
pop
in
sbb
or
cld
aaa
cli
dec
push
pop
loop
test
ins
or
mov
xadd
sti
sbb
mov
mov
retf
inc
dec
inc
ror
out
push
inc
pop
sti
dec
pop
cmp
jae
cmp
ret
popf
mov
fsubr
imul
jecxz
ins
cmps
dec
retf
push
jg
dec
scas
xor
sbb
clc
jbe
adc
es
sub
or
inc
fsubr
mov
repz
rol
pop
and
icebp
sub
inc
nop
and
xchg
out
add
stos
mov
(bad)
mov
push
jp
xor
xor
ds
fs
sbb
sub
dec
and
fdiv
mov
pop
push
int
sbb
xchg
test
pop
jb
ficom
dec
mov
loop
les
push
jne
or
lea
xchg
cmp
imul
inc
and
out
(bad)
lods
daa
repz
push
mov
sub
or
push
adc
test
adc
aaa
adc
out
stos
sar
and
pop
adc
fcom
mov
mov
aas
and
mov
push
sub
fidiv
fwait
adc
pop
inc
jne
cmp
ret
xor
lea
test
imul
(bad)
movs
jp
rol
and
sbb
pop
adc
sbb
mov
and
cmp
or
add
cmp
loope
test
sbb
enter
xor
or
adc
pop
dec
xor
std
outs
rcr
pusha
jmp
or
aam
dec
xchg
fldcw
cli
retf
es
inc
or
test
mov
nop
dec
adc
lds
xchg
ins
vmulsd
or
rcl
mov
int
(bad)
xor
call
jnp
lahf
jo
or
pop
sbb
movs
jl
stc
div
adc
sbb
mov
in
add
jecxz
xchg
es
imul
fcmovu
icebp
jo
xchg
stos
aaa
adc
cmp
jmp
mov
js
dec
aas
mov
dec
inc
aas
pusha
xor
leave
adc
scas
fdiv
inc
push
sbb
push
push
out
movs
sbb
into
jl
ss
ins
int3
mov
xchg
fimul
adc
imul
cli
stc
clc
pop
dec
movd
dec
xor
jl
or
bound
jo
xchg
mul
mov
xchg
outs
bound
daa
push
sbb
rcl
mov
xor
mov
cmp
(bad)
neg
out
xchg
dec
ds
(bad)
lahf
and
lock
fnstenv
adc
add
and
ja
pop
cmp
adc
add
pop
add
dec
cdq
test
int
aas
mov
sbb
in
and
mov
popa
pusha
call
xchg
nop
gs
scas
mov
xchg
pop
or
hlt
push
sub
ins
or
sbb
repnz
pop
pop
stos
push
fcmovu
cwde
mov
popa
(bad)
ds
add
jmp
adc
sbb
icebp
mov
and
pop
push
stc
loopne
cld
stos
sub
pop
das
sahf
cdq
lods
inc
push
or
push
xchg
push
popf
mov
lea
(bad)
loope
mov
jle
jnp
inc
sub
add
ss
jle
bound
lgdtd
(bad)
sbb
dec
mov
and
lods
mov
jecxz
aam
ror
test
dec
mov
outs
outs
test
push
push
rcr
cmp
push
ret
dec
push
xchg
sub
or
xor
cs
lock
cmc
mov
div
sub
inc
(bad)
and
cmp
dec
xchg
push
sub
cmp
icebp
xor
not
inc
call
jbe
popf
nop
adc
pusha
(bad)
out
movs
call
call
push
add
mov
pop
lahf
add
(bad)
iret
(bad)
fcomp
pop
xor
mov
mov
out
jnp
mov
adc
sti
in
mov
mov
xchg
mov
(bad)
pushf
adc
pop
ins
xor
out
cmc
jns
xchg
jnp
adc
add
and
test
mov
mov
inc
es
icebp
cld
lods
sub
js
stos
sub
mov
fisttp
mov
js
mov
xchg
repnz
xor
mov
pushf
je
mov
or
mov
sub
sub
je
mov
sub
and
add
mov
or
lds
lahf
inc
(bad)
stc
mov
cmc
xchg
push
pop
push
shl
inc
jecxz
jge
cs
and
jno
xchg
test
inc
stos
lods
jo
(bad)
xchg
mov
fcom
pop
fistp
xchg
out
js
ret
in
jmp
pop
xchg
fadd
pop
out
out
xchg
xchg
mov
add
mov
test
pop
fst
jbe
clc
in
in
outs
sub
enter
jecxz
fwait
inc
ret
and
cmp
dec
popf
retf
rcr
push
loop
xchg
inc
iret
add
pop
mov
call
pop
into
jmp
enter
mov
addr16
sub
jne
xchg
mov
jnp
dec
lds
fwait
es
in
sahf
jmp
(bad)
push
cwde
xor
mov
mov
add
jne
out
fnstenv
mov
fmulp
inc
dec
mov
not
sub
test
setg
mov
xchg
inc
xor
loope
pop
mov
xchg
int
xor
mov
sub
imul
pop
and
fwait
sub
mov
retf
aam
cmps
sub
les
test
mov
fimul
cli
loopne
daa
out
pushf
mov
jecxz
pop
pushf
in
mov
jno
push
and
repnz
jns
mov
push
fadd
shr
xor
push
and
sub
dec
or
cwde
xchg
cmp
sub
sub
pop
popa
in
ja
xchg
pop
cmp
pop
rol
dec
xchg
ss
add
inc
shl
fwait
out
cmc
add
inc
mov
loopne
mov
mov
lahf
fld
push
imul
xchg
retf
pop
cmp
mov
jmp
movs
sbb
int3
mov
in
jnp
dec
mov
sti
inc
mov
es
fabs
xor
dec
adc
push
sbb
out
aam
jnp
lods
int3
(bad)
(bad)
repz
scas
inc
call
push
and
outs
adc
ja
aaa
mov
xlat
fwait
je
ror
in
xchg
clc
scas
lock
jb
sbb
jno
je
jmp
fld
enter
les
jge
idiv
sbb
mov
in
stc
jns
int
enter
movs
jb
bound
dec
ret
xor
pusha
mov
jmp
pushf
rol
mov
xchg
mov
mov
cld
mov
shl
movs
dec
xchg
fisubr
aad
jae
inc
shl
push
popa
push
jae
sub
dec
stos
(bad)
push
cmp
movs
pop
cld
mov
lock
xlat
shl
repnz
jl
sub
inc
sbb
jl
fld
in
je
leave
daa
aad
push
fisttp
(bad)
adc
jno
rcr
jp
sti
cmc
neg
pop
addr16
stos
ins
push
(bad)
and
xchg
dec
out
push
dec
sahf
mov
mov
ret
daa
icebp
and
aad
jmp
jmp
sti
sub
cmp
xlat
ss
cmp
ins
pop
arpl
push
fs
stos
pop
xor
jle
pop
xchg
cmp
push
into
repz
imul
cmc
sub
dec
xchg
lock
test
sub
test
pop
out
push
xchg
into
ret
addr16
je
(bad)
mov
fdivrp
and
cmp
pop
mov
mov
out
inc
aas
jne
sub
cmp
push
dec
mov
push
inc
(bad)
mov
jl
add
add
popf
retf
mov
sbb
pusha
mov
sti
test
dec
ret
cmp
pop
cmp
std
xor
repnz
pop
xchg
jl
movs
adc
cwde
adc
add
call
dec
rcr
cld
add
cmp
aad
mov
mov
jp
pop
icebp
fisttp
xchg
call
add
inc
inc
pop
jae
stc
mov
pop
cmp
jl
bound
pop
pop
add
dec
sar
cmp
(bad)
mov
loope
jbe
popf
icebp
neg
inc
lods
je
add
inc
mov
add
rol
inc
je
popa
pop
cmps
(bad)
fisub
dec
cmp
sub
inc
dec
push
ja
inc
inc
(bad)
cmp
pop
mov
ret
dec
mov
out
sbb
push
mov
and
or
in
jg
xor
fisubr
jne
hlt
outs
ret
repnz
push
jne
in
daa
stos
test
cmp
adc
adc
in
sbb
or
ss
aam
jl
clc
cdq
int
shl
push
imul
mov
sub
pop
inc
and
and
bound
ss
out
jns
sbb
(bad)
pop
bound
idiv
(bad)
mov
xchg
mov
push
lock
fcomp
in
add
jno
mov
outs
fs
int
jae
bound
adc
mov
dec
movs
cmp
mov
sbb
mov
aaa
inc
(bad)
and
pop
aas
mov
icebp
cwde
shl
mov
inc
adc
leave
mov
(bad)
enter
jecxz
cli
and
adc
call
pop
cmp
dec
xchg
test
xor
mov
retf
mov
(bad)
xchg
call
fild
fist
add
push
or
outs
cwde
hlt
mov
mov
mov
xchg
rol
(bad)
pop
sub
adc
ins
mov
ins
fisttp
cld
clc
or
push
fild
mov
sbb
scas
push
jne
inc
dec
add
push
pop
mov
hlt
cmp
xor
sub
push
stos
out
push
test
push
or
(bad)
scas
adc
mov
sub
push
mov
adc
popf
add
inc
aaa
xchg
mov
dec
jl
and
sbb
push
jno
not
aad
push
pusha
int
adc
push
push
mov
test
test
mov
pop
xchg
neg
addr16
lds
iret
jl
inc
mov
pop
push
test
push
push
push
test
fmul
sti
or
call
aad
cmp
rcl
fstp
jns
jge
in
data16
mov
xor
jle
push
ins
cmovne
jp
dec
bound
lock
lock
sub
push
adc
and
adc
adc
dec
test
inc
mov
adc
xchg
dec
xor
mov
in
mov
mov
bound
and
and
dec
or
jne
xchg
popa
jp
push
push
mov
ins
inc
sub
push
and
or
test
or
mov
and
sub
adc
je
into
pop
and
mov
pop
retf
add
xchg
cmp
jmp
inc
push
gs
fild
addr16
sti
sahf
ret
xchg
out
and
out
mov
push
scas
aam
sbb
in
push
add
scas
cwde
mov
ret
stos
jbe
xchg
fcom
sub
cdq
jl
loop
inc
popa
cmp
clc
jmp
push
hlt
loope
mov
push
xchg
and
push
pusha
daa
mov
or
xchg
ds
inc
xlat
lea
popa
push
lahf
or
mov
mov
sbb
jne
sbb
pop
imul
dec
fadd
ret
pop
lods
out
repnz
or
jne
test
mov
mov
aaa
cmc
mov
jmp
and
mov
sub
leave
outs
lods
aam
or
xchg
(bad)
add
fldenv
(bad)
push
sbb
mov
jle
xchg
movs
int
push
imul
push
xchg
inc
xchg
add
std
(bad)
rol
or
test
nop
movs
fld
xor
mov
rcl
shl
dec
xor
jbe
xlat
and
pusha
push
xchg
addr16
push
cmp
aad
cmps
or
cmp
inc
dec
jmp
(bad)
outs
or
and
add
test
jb
and
mov
popa
inc
ss
cli
imul
mov
fidivr
or
retf
xor
ror
cdq
adc
xchg
fwait
dec
sbb
int
mov
dec
pop
lahf
arpl
dec
or
ret
pop
repz
push
cdq
sbb
mov
fmul
jo
adc
popf
mov
ret
cli
icebp
and
(bad)
and
scas
push
dec
aam
stos
cmp
js
leave
xchg
mov
sbb
(bad)
stc
shr
mov
push
and
fdivr
sti
shl
push
test
and
idiv
jge
std
or
sahf
shl
pop
repnz
repnz
iret
add
fwait
test
adc
cld
aad
mov
lds
and
jl
mov
loope
or
mov
in
cs
dec
ins
call
pusha
das
mov
outs
retf
and
mov
cmp
jae
mov
mov
aas
fld
adc
cdq
dec
mov
ror
xchg
and
movs
mov
xchg
fld
outs
adc
imul
lods
sbb
inc
imul
icebp
js
fsubr
xchg
mov
repz
fmul
stos
xchg
sbb
rcl
cmps
xchg
add
cmp
cmp
bound
sahf
mov
cmp
in
add
and
mov
call
cmp
add
dec
xor
shl
add
mov
in
(bad)
mov
xor
fwait
inc
jl
xor
popf
inc
ret
test
jmp
clc
adc
and
cmp
out
cs
scas
leave
sub
rep
pushf
pop
(bad)
jl
test
aam
mov
push
retf
mov
and
in
daa
in
and
jp
ins
push
int
mov
or
xchg
sub
xor
inc
popa
push
mov
cdq
and
xchg
in
rcr
push
mov
jne
pop
adc
jbe
int3
pop
movs
adc
mov
ficomp
(bad)
icebp
mov
clc
lock
push
sub
inc
lahf
iret
call
test
out
jge
xor
repnz
inc
fisttp
mov
lods
xchg
xchg
mov
inc
rcr
push
pop
cdq
dec
jp
dec
pop
gs
xor
enter
dec
jae
push
and
or
(bad)
call
or
in
cmp
arpl
dec
push
pop
in
push
hlt
int
dec
mov
addr16
into
sub
jnp
mov
shl
sbb
pop
jmp
mov
into
lds
pop
mov
popf
mov
sub
pop
lds
fild
das
sub
movs
and
mov
adc
fimul
or
ficomp
div
push
arpl
xor
xor
imul
fidivr
les
das
push
mov
in
xchg
adc
mov
sbb
cmp
fcomip
out
add
mov
dec
push
cwde
stos
ja
push
xchg
jnp
loop
rcr
pop
adc
ins
pop
push
pop
xor
push
cmps
leave
cmp
dec
inc
pop
jns
arpl
sub
mov
lds
div
mov
das
pop
xchg
mov
fldlg2
imul
cdq
aas
pop
xchg
movs
dec
aaa
xor
adc
and
pushf
mov
hlt
outs
movs
add
mov
dec
dec
stc
pop
addr16
mov
cdq
js
stos
jne
dec
hlt
inc
nop
mov
xor
inc
jae
ds
ffree
lahf
(bad)
mov
xchg
sar
fwait
call
jmp
or
sbb
mov
push
fnstcw
xchg
mov
inc
sar
jg
or
out
xchg
and
lods
mov
outs
adc
dec
or
pop
xor
scas
push
aam
(bad)
xchg
xchg
aaa
sahf
cdq
add
retf
xchg
int3
adc
cdq
sahf
mov
and
jb
inc
stos
sti
dec
and
dec
mov
mov
mov
adc
or
movs
scas
es
xor
sbb
(bad)
pop
xchg
out
xchg
pop
ficom
xchg
sbb
and
mov
js
push
mov
sahf
outs
jecxz
dec
jle
aaa
cwde
xor
add
pop
dec
fisttp
pop
lea
mov
pusha
pextrw
xchg
and
inc
push
push
xchg
pop
jge
fnstsw
mov
or
pop
sbb
adc
xchg
ret
out
xor
test
iret
sub
jmp
test
and
mov
and
aad
pop
push
ins
push
fsub
sbb
call
jmp
mov
dec
aam
ss
jnp
xchg
xchg
out
je
push
and
push
push
dec
mov
cmp
inc
mov
jne
cmps
sbb
add
cmp
aam
push
and
xchg
jbe
call
rol
xchg
mov
in
xchg
icebp
rcr
sbb
dec
pusha
xor
int
arpl
xchg
xor
dec
mov
shr
jnp
cwde
(bad)
ficomp
js
mov
push
xchg
jecxz
dec
jbe
fxch
or
retf
clc
sahf
rcl
mov
inc
cmp
lds
jmp
sub
aas
xchg
dec
mov
mov
das
and
test
(bad)
std
(bad)
or
or
ins
mov
lahf
mov
jmp
xor
mov
out
shl
add
stc
adc
lods
repz
inc
pop
in
xor
aaa
pop
xor
cmc
inc
or
xor
stc
outs
mov
pop
sar
xor
fild
or
(bad)
xchg
sbb
nop
sub
sbb
or
jo
retf
sqrtps
jge
fcomp
in
push
mov
pop
fimul
pop
add
data16
(bad)
test
daa
dec
fs
pop
pop
lea
fsubr
xchg
jb
lods
cmc
dec
std
pusha
pop
jl
pop
into
icebp
jle
push
rcl
jl
inc
cmp
lea
sub
push
xor
pop
mov
inc
sbb
jo
mov
push
imul
or
xor
sub
jnp
fst
sub
pop
cdq
cld
dec
int3
or
and
mov
scas
stos
sbb
je
ds
push
inc
jmp
(bad)
mov
mov
cmp
push
call
adc
sub
sub
std
test
inc
in
mov
push
jno
adc
lods
sub
dec
cmps
rcl
aam
pop
out
cmp
sbb
mov
ins
lock
cmp
sti
aas
xor
ins
and
arpl
fcomp
pop
add
(bad)
retf
movs
outs
mov
pop
test
stos
add
out
xlat
stos
pop
and
pop
jmp
sar
sub
ret
jno
addr16
mov
xchg
sbb
pop
icebp
cdq
add
inc
call
cdq
jbe
mov
push
cmp
sbb
adc
ds
fcomi
(bad)
push
mov
push
mov
sar
mov
adc
cmp
fstp
scas
mov
out
es
pop
jecxz
sbb
pop
sbb
cmc
mov
in
dec
inc
test
fstp
ret
sub
sbb
stos
lea
stos
pop
ret
sub
in
data16
cwde
jg
mov
ret
inc
icebp
xchg
dec
sub
or
mov
aas
cmp
inc
mov
dec
ins
loop
scas
xor
ins
mov
and
test
pop
cmps
sbb
pop
pop
inc
in
and
adc
jg
dec
push
adc
xor
cmp
inc
inc
daa
add
or
fsub
push
sub
mov
sbb
repnz
xchg
inc
mov
mov
xor
pushw
test
jge
jg
mov
mov
pusha
jmp
pop
push
push
cmp
pop
fistp
xchg
or
movs
sbb
mov
inc
lods
jbe
jmp
mov
push
cmp
push
inc
dec
pop
push
fisttp
loopne
push
retf
(bad)
mov
shr
sbb
psubw
mov
sub
scas
bnd
inc
xor
cmp
jl
ds
xchg
enter
retf
and
in
stos
push
out
mov
mov
ins
imul
inc
cmp
jmp
clc
mov
adc
repz
xchg
xor
stos
mov
nop
pop
jbe
pop
xchg
cs
mov
push
mov
div
lahf
sti
mov
dec
inc
mov
in
or
shl
xchg
pop
sbb
cmp
dec
fisubr
add
daa
inc
enter
call
xor
push
push
retf
dec
sbb
test
and
inc
sbb
mov
cmps
jmp
cmp
and
das
cmp
cmp
sbb
lods
mov
lods
cmp
sbb
cmp
int3
push
cdq
adc
clc
jne
adc
xchg
scas
nop
mov
xor
sti
imul
or
dec
aas
jo
into
xchg
jo
in
pop
ret
pop
cmps
inc
sub
dec
scas
inc
jg
data16
or
retf
mov
fistp
cdq
loop
inc
or
loope
imul
cdq
out
sti
mov
call
mov
inc
xchg
fbstp
sub
stc
sub
pop
dec
inc
mov
push
cmps
imul
jo
pushf
popf
dec
shr
push
jmp
les
cmps
addr16
pop
call
cli
and
push
scas
std
mov
jo
and
in
lock
or
aas
fidivr
bound
and
aad
push
mov
scas
int
xor
xchg
jb
or
adc
xlat
inc
cmp
jl
dec
sub
sbb
jl
arpl
fst
cmp
ins
cmp
pusha
movs
scas
mov
adc
ja
xlat
add
aam
lahf
lea
ret
outs
and
sbb
adc
pop
adc
dec
adc
arpl
inc
mov
fisub
adc
mov
mov
xchg
cli
inc
stos
fbstp
or
push
dec
fwait
aad
aaa
retf
enter
mov
xchg
jnp
es
ins
sti
mov
mov
cdq
xlat
xchg
loop
pop
inc
mov
or
frstor
push
xchg
adc
arpl
inc
add
pop
dec
iret
clc
int
inc
mov
or
mov
pop
pop
pop
fnstsw
cmp
inc
sbb
add
sti
(bad)
(bad)
jmp
xchg
add
sbb
scas
xchg
stc
dec
add
das
stc
pop
stos
fwait
xchg
idiv
push
ss
rcr
xchg
repz
ds
xor
or
mov
pop
push
push
mov
jno
(bad)
out
xor
lods
xor
mov
cmpps
data16
push
jb
jns
sbb
cmps
sbb
jecxz
out
popf
mov
sub
dec
sub
xchg
add
dec
(bad)
fcomp
mov
out
mov
(bad)
push
ss
repnz
test
das
cdq
shl
jno
add
dec
xchg
test
jo
cmp
movs
and
cmp
jecxz
dec
lods
mov
int3
retf
and
(bad)
push
mov
inc
mov
pop
inc
(bad)
or
or
mov
xchg
fsub
xor
int
mov
push
imul
inc
popa
retf
loope
lds
xchg
in
shr
pop
inc
xor
popa
sahf
adc
cmps
push
or
add
xor
ret
retf
cmps
push
jo
cmc
dec
xchg
or
(bad)
cmp
sub
leave
push
popa
popf
or
loopne
add
cmc
(bad)
and
pop
ins
pop
jnp
je
mov
mov
div
mov
das
mov
int3
js
push
lods
xor
pop
(bad)
and
(bad)
mov
in
pop
sub
jmp
push
mov
imul
sub
pop
adc
inc
in
or
bound
hlt
lds
int
imul
and
xchg
out
add
push
lods
inc
and
lock
push
repnz
dec
jae
or
xor
and
mov
xchg
push
dec
or
fisub
movs
xor
jae
adc
leave
mov
inc
rcl
pop
add
jmp
sbb
push
push
loope
int3
jb
or
add
int3
sbb
mov
lods
aam
(bad)
inc
mov
aaa
push
add
repz
mov
jns
and
and
inc
mov
jne
mov
mov
aam
inc
mov
cli
cld
mov
pop
dec
cmps
xchg
lock
daa
popa
retf
pusha
sbb
or
push
(bad)
test
fdiv
mov
push
inc
pop
mov
pop
adc
sub
imul
adc
sub
ds
dec
adc
(bad)
pop
(bad)
call
inc
dec
mov
pop
and
rol
test
movs
fsub
out
cmp
hlt
inc
xchg
call
(bad)
mov
mov
(bad)
fcom
push
sub
xor
inc
push
sahf
ins
sbb
sahf
jno
fcmovne
ja
das
and
mov
lods
and
and
icebp
(bad)
sbb
adc
std
push
das
pusha
push
mov
stos
retf
mov
xchg
mov
dec
mov
sbb
xchg
mov
xchg
rcr
mov
popa
(bad)
in
add
into
in
jne
inc
(bad)
adc
cmps
cmps
loop
mov
xor
pop
js
sbb
sbb
jmp
pop
int
neg
cli
imul
fnstenv
not
fwait
or
sbb
xchg
fsub
add
addr16
mov
xor
sbb
stos
dec
dec
lds
and
pushf
cmp
sahf
es
stc
int
mov
or
xchg
mov
push
or
gs
ret
pop
jnp
xchg
xchg
jae
inc
mov
adc
mov
scas
mov
sub
loop
or
jae
rcl
ffree
sbb
add
dec
adc
shl
or
cwde
push
cmp
out
ret
fnstcw
add
in
lea
repnz
hlt
adc
test
xor
sub
pushf
push
(bad)
xor
into
lock
push
xor
mov
sahf
push
lock
jo
add
mov
adc
jecxz
out
fwait
in
mov
add
mov
popa
int
fwait
repz
add
pop
retf
rcl
mov
outs
xchg
call
pop
test
add
into
and
dec
xor
push
hlt
push
lock
mov
ret
add
fdivp
mov
sub
mov
jmp
ss
scas
sub
sbb
mov
aam
mov
xor
fwait
xor
aad
push
in
and
ror
mov
dec
add
loope
and
das
push
push
out
push
fbld
mov
cmp
cdq
into
rcr
repnz
hlt
adc
les
scas
xlat
rcr
mov
enter
cmps
shr
or
mov
push
push
pop
push
lea
test
push
sub
fadd
and
fist
mov
pop
jg
xchg
sub
jnp
dec
jne
test
sahf
mov
xchg
add
adc
sti
stos
cmp
jmp
add
int3
jmp
mov
or
stc
popf
clc
setbe
repnz
mov
das
sbb
dec
jl
dec
movs
push
jg
jge
pop
fmul
jmp
cld
push
imul
or
jmp
and
ds
fiadd
dec
cli
out
scas
cld
xchg
rol
fwait
cdq
mov
cli
mov
xor
into
mov
xchg
adc
jne
mov
mov
into
mov
popa
pop
or
mov
in
ins
mov
pusha
jae
add
cmp
lods
cmc
out
sub
cmp
mov
xor
adc
jns
pushf
retf
pop
shr
aas
fdiv
hlt
and
(bad)
inc
daa
stos
rcr
inc
push
mov
or
add
arpl
sub
xchg
inc
xchg
mov
xchg
out
lds
adc
addr16
mov
xor
jo
mov
aam
mov
stc
(bad)
out
cmp
add
shr
in
mov
cmc
fimul
push
imul
loope
arpl
push
aam
ror
push
sbb
je
jl
in
mov
pop
jp
cmc
jle
lods
in
leave
hlt
lods
sbb
fwait
jl
lea
cmp
ds
pop
push
addr16
mov
(bad)
cli
sub
dec
cwde
lahf
inc
addr16
xchg
push
std
add
jg
aam
into
call
in
les
rcl
xchg
or
mov
loopne
mov
mov
test
lahf
das
mov
jno
sbb
imul
outs
mov
or
sar
add
push
out
sahf
xor
xor
jg
add
out
inc
push
or
mov
add
loope
addr16
xor
ins
dec
cdq
stos
fcomp
test
or
xchg
cmp
or
jne
xchg
mov
jmp
sbb
in
stc
jge
inc
bound
stos
iret
push
dec
rol
jne
bound
arpl
movs
inc
call
jb
movs
cmp
xchg
(bad)
gs
aas
iret
test
ss
lods
iret
jns
inc
mov
aam
sub
push
ret
cdq
lods
sahf
rcl
and
xchg
sbb
push
in
in
icebp
mov
mov
xlat
out
loop
fs
mov
pusha
into
xlat
or
push
popf
mov
sub
imul
sbb
pop
ins
out
pop
sbb
out
adc
pop
pop
jl
push
xchg
cmp
mov
lds
xor
fwait
jne
pushf
not
iret
neg
lods
cmc
cmp
clc
daa
imul
adc
adc
xchg
mov
pushf
or
dec
xchg
push
fcmovu
push
jne
daa
adc
mov
fisttp
(bad)
cld
or
mov
push
pusha
iret
(bad)
(bad)
cdq
push
mov
mov
dec
popf
mov
adc
aad
lea
test
call
push
add
sbb
ins
jnp
ret
pop
add
inc
xor
popa
daa
shr
lock
aam
xchg
mov
mov
das
aad
add
jns
addr16
sti
rcr
jae
push
mov
or
fwait
ins
dec
jle
cmp
mov
dec
push
stc
inc
lods
pushf
jle
push
inc
ja
bound
fcmovu
pop
sbb
add
cdq
push
out
lods
fld
sbb
mov
mov
cmp
add
cmp
inc
dec
in
or
xor
or
dec
clc
push
mov
lods
ja
cmovs
sub
arpl
or
cli
mov
js
mul
mov
xor
fidivr
add
sbb
jb
lea
fwait
(bad)
stc
mov
sbb
imul
push
popf
lods
mov
rep
push
pop
push
int
sub
lods
push
scas
mov
mov
and
xor
shl
mov
idiv
mov
test
push
movs
ror
xor
mov
mul
fist
cwde
(bad)
stc
mov
jmp
cmps
(bad)
scas
retf
out
mov
add
adc
bound
dec
jne
sti
sub
and
(bad)
adc
mov
std
sub
pop
js
jns
mov
jae
fimul
neg
mov
sub
rcl
js
fsub
cli
mov
adc
pop
pop
cmps
mov
(bad)
mov
imul
sub
mov
pop
cmp
mov
pusha
fnstenv
adc
aam
inc
add
sub
jp
sbb
addr16
sub
xchg
cmps
add
ja
cdq
ret
inc
or
fcomp
jno
stos
cld
push
mov
in
outs
xor
cwde
xor
cs
daa
mov
(bad)
xlat
cdq
dec
sub
cmp
into
xchg
push
int
mov
out
jbe
sub
mov
add
mov
xchg
push
test
fs
stc
jmp
jbe
rcr
cdq
mov
outs
retf
popf
xor
jae
aas
fwait
xor
pushaw
cmp
add
and
mov
jmp
shl
aaa
adc
xchg
inc
push
or
nop
icebp
lea
mov
mov
pop
shr
xchg
cmps
sti
jno
pushf
loope
mov
retf
pop
cmps
jmp
jmp
cmp
mov
loop
cwde
cli
(bad)
lods
stos
jle
ss
jmp
imul
ret
retf
es
inc
(bad)
mov
fsubr
std
or
mov
pop
test
call
jae
push
jg
mov
pusha
pop
sbb
out
inc
int3
add
in
mov
enter
sbb
dec
adc
jmp
fmul
add
pop
mov
mov
push
mov
mov
push
xchg
mov
dec
xor
sub
push
sub
cmp
mov
les
aam
jo
scas
inc
gs
mov
mov
xor
mov
jno
nop
or
repnz
(bad)
test
stos
int3
lahf
imul
addr16
sub
xlat
imul
shl
sbb
mov
add
xor
push
jbe
daa
movs
jl
rol
out
stc
mov
xor
mov
pop
cld
mov
dec
loope
fwait
lock
shr
aad
xor
outs
fs
ss
pop
mov
loope
out
jmp
adc
add
popf
retf
jmp
jle
loop
pusha
add
or
in
dec
call
pop
adc
xchg
sar
imul
cmp
jle
and
scas
out
(bad)
pop
xchg
mov
push
push
mov
adc
(bad)
retf
daa
push
test
add
out
test
rcl
scas
or
gs
mov
xor
inc
(bad)
sar
inc
mov
jl
in
sti
add
push
xchg
fisub
cmc
xor
mov
or
lea
sbb
and
loop
jae
test
cld
mov
outs
stos
push
xor
fnstcw
fisub
sub
xchg
inc
test
stos
pop
ja
mov
push
or
aad
push
pop
fld
mov
push
in
mov
mov
inc
sbb
ror
lods
ss
adc
fs
and
fwait
or
ja
xlat
xchg
sbb
(bad)
jg
ret
and
cmps
mov
retf
sar
jmp
inc
inc
ss
retf
mov
lahf
lods
or
lahf
fisubr
xor
test
std
gs
loop
and
xor
rcr
mov
xor
test
fst
pop
cwde
add
in
xor
mov
not
ficomp
add
inc
test
xchg
adc
dec
out
mov
xor
addr16
dec
out
or
dec
aam
mov
leave
lods
push
jmp
sub
lds
out
(bad)
dec
cdq
push
jno
jge
scas
xor
jmp
push
pop
mov
jmp
imul
es
jl
es
in
outs
cmp
mov
jne
pop
xor
jmp
inc
add
es
dec
sub
test
sar
sub
(bad)
jmp
test
sub
ret
stos
ja
in
aad
mov
xchg
add
mov
fcmovu
xchg
push
and
mov
xor
mov
xchg
adc
push
test
xchg
jmp
sub
cmps
xchg
pop
(bad)
mov
movs
jae
into
push
cmp
dec
cld
frstor
in
dec
jnp
lock
and
loopne
js
loope
push
in
(bad)
ins
xchg
push
loopne
jne
mov
nop
or
adc
xor
xor
add
lahf
clc
test
test
rcr
loope
test
outs
sbb
jg
out
in
pop
call
or
push
test
cdq
das
imul
add
dec
es
push
scas
pop
push
sbb
test
ret
leave
jbe
mul
pusha
jbe
add
push
out
or
fld
adc
int
xor
push
push
xor
adc
xor
xchg
xlat
aad
std
sbb
push
and
out
jmp
inc
lds
dec
adc
pushf
ret
fsubr
adc
push
lods
dec
dec
inc
add
iret
je
rcl
sar
scas
loop
mov
popf
cdq
fnstcw
test
push
aam
es
push
adc
adc
(bad)
pop
mov
pushf
not
cdq
ins
push
pushf
sbb
les
jle
movs
out
ds
int
xchg
pop
pop
sbb
inc
adc
in
push
(bad)
xor
movs
fs
mov
out
ins
add
ror
xchg
sahf
or
pop
je
jbe
push
imul
xor
jecxz
mov
icebp
aaa
mov
scas
ret
aam
cmp
cmp
xchg
es
mov
jle
arpl
retf
jb
je
jbe
mov
add
pop
pop
std
mov
ins
lock
das
je
sbb
leave
jae
sub
(bad)
adc
pop
push
pop
adc
shr
mov
mov
and
xor
icebp
mov
movs
adc
mov
movs
jnp
(bad)
iret
inc
or
mov
popa
aas
push
stos
mov
cs
sbb
fst
outs
pop
or
and
outs
inc
addr16
adc
jp
in
mov
push
clc
xchg
(bad)
jle
call
mov
jmp
mov
xchg
jge
sbb
pop
popa
inc
stos
call
outs
ret
test
dec
inc
nop
mov
scas
sar
pop
sub
dec
neg
psubq
jl
mov
mov
mov
jp
(bad)
xor
clc
sbb
cld
pop
pusha
icebp
cdq
pop
jmp
jmp
jns
mov
xor
jbe
or
cmp
mov
outs
sar
push
push
mov
and
inc
in
pop
cmp
imul
repz
icebp
hlt
sub
jnp
or
gs
xchg
enter
je
cdq
jmp
dec
mov
jbe
and
mov
mov
je
daa
in
cs
adc
fs
fild
mov
scas
and
sub
shl
xor
cmps
jmp
sbb
jmp
xchg
jecxz
jp
pusha
pop
push
inc
fs
push
scas
or
lock
test
aad
(bad)
imul
leave
fild
mov
sub
shr
scas
repnz
jmp
sar
pop
scas
sbb
ja
jecxz
lock
fild
jo
dec
dec
jb
jbe
aaa
lds
pop
enter
pop
cmc
sub
add
leave
dec
ror
xchg
loop
(bad)
fstp
call
or
mov
jle
xor
xor
das
test
mov
mov
add
mov
sti
push
jmp
or
ins
fcmovne
xchg
into
es
pusha
lods
je
jno
repz
mov
jnp
sbb
loope
pop
es
(bad)
adc
leave
add
out
bound
addr16
mov
cmc
cmp
(bad)
cmp
mov
xlat
lods
xor
and
stos
enter
lods
fstp
add
xchg
fidiv
or
or
test
xor
inc
bswap
in
xor
dec
mov
int
push
pop
imul
mov
xchg
lds
mov
jae
sbb
xchg
mov
imul
pop
mov
push
jp
arpl
mov
jecxz
stos
push
mov
push
in
mov
(bad)
and
mov
cmp
jbe
mov
les
les
xchg
test
lock
jae
push
ja
adc
sbb
and
add
jmp
in
imul
mov
in
cwde
add
jl
dec
stos
lock
cmp
ffreep
test
nop
mov
add
retf
cmp
popa
ret
out
jle
je
repnz
sub
stc
xchg
adc
movs
enter
or
xchg
pop
and
test
shr
mov
out
and
in
or
loop
push
mov
int
and
std
stos
jp
xor
cdq
pop
dec
cdq
dec
ret
outs
mov
or
jg
dec
cmp
inc
(bad)
mov
sub
hlt
fcmovne
in
mov
jns
xor
jo
lock
push
or
test
xchg
cmp
xor
xor
push
das
or
into
or
add
fdiv
xlat
out
rcr
push
int
cwde
nop
test
cwde
mov
sbb
lds
mov
mov
mov
xor
mov
icebp
lahf
sbb
shl
lea
jmp
pushf
stos
mov
in
sahf
xor
popa
lahf
add
push
mov
int3
inc
sub
(bad)
xor
xor
fld
sbb
mov
push
xchg
ss
rcl
lods
pop
fcomp
je
pop
fsincos
lods
iret
out
and
stc
adc
lods
call
aaa
push
or
jecxz
je
mov
(bad)
pop
add
or
in
pop
fwait
cmp
push
pop
iret
xchg
mov
fwait
gs
push
mov
pop
imul
call
sub
test
mov
int3
cmc
stos
dec
fst
clc
imul
xchg
xchg
inc
fimul
mov
sub
cmp
ins
jl
cmp
(bad)
pop
push
hlt
popf
(bad)
fsub
cmp
xchg
fcomp
cmp
rol
mov
ret
lods
leave
cdq
retf
xchg
scas
pop
lock
adc
add
and
fstp
aam
dec
(bad)
pop
rcl
fcom
fstp
(bad)
or
dec
clc
sub
ins
mov
ss
cmp
push
rcr
pushf
and
adc
out
inc
jmp
adc
or
lahf
cwde
adc
leave
ds
data16
test
cdq
pop
xor
pop
mov
scas
mov
cmp
xor
mov
cmp
add
repz
xchg
sbb
repz
aad
sub
test
pop
shl
pop
popa
xor
clc
pop
(bad)
scas
cmp
xor
lods
loope
sub
jo
inc
xchg
bound
out
loop
stc
xchg
pop
scas
push
jo
std
mov
das
retf
mov
cmp
add
dec
pop
cmp
and
loopne
in
inc
mov
mov
jmp
rol
dec
jae
add
pop
shl
aaa
pop
inc
adc
mov
mov
jo
mov
dec
(bad)
add
adc
(bad)
out
and
fld
jl
aas
and
and
adc
mov
lahf
dec
inc
test
les
add
into
mov
int
imul
fwait
sub
adc
push
ret
dec
cmc
jl
bound
in
push
mov
adc
mov
sti
dec
sbb
jecxz
(bad)
xor
or
stos
mov
mov
and
add
retf
mov
enter
xor
(bad)
mov
pop
sbb
in
xchg
push
popa
push
mov
mov
or
inc
retf
ret
add
add
(bad)
aad
push
jecxz
push
and
sbb
sbb
sti
jle
lds
sub
xor
aad
xor
clc
popa
xchg
test
jnp
mov
(bad)
call
ret
out
sub
sbb
jmp
adc
push
clc
cli
add
in
cmp
xchg
mov
mov
push
cmps
mov
inc
xchg
aam
jle
loope
mov
xor
pusha
fwait
and
push
pop
cmp
jl
dec
mov
inc
ror
cmps
cmp
sub
stc
fidivr
mov
fdiv
xchg
daa
jmp
dec
out
inc
mov
inc
add
xor
jbe
mov
push
fxch
(bad)
hlt
fs
inc
push
retf
cmp
pushf
mov
ds
arpl
(bad)
xchg
push
movs
push
in
or
sub
push
cmp
adc
push
repnz
rcl
sbb
xchg
ins
push
push
cmp
push
inc
push
(bad)
cmp
jbe
add
and
xchg
ret
mov
bound
jnp
push
retf
sub
out
push
pusha
aam
(bad)
cmc
stos
add
stos
and
mov
es
push
xor
jo
push
or
data16
push
cli
ins
cmc
or
or
cs
fbstp
addr16
pushf
dec
adc
es
call
pop
inc
xor
dec
cmp
lods
and
sub
outs
pop
mov
and
mov
push
cs
dec
cmps
xchg
xor
(bad)
dec
sbb
mov
dec
icebp
add
xor
call
dec
mov
mov
fst
lds
mov
movs
or
div
sbb
add
sbb
aad
pop
stos
scas
sbb
stos
add
imul
repz
sbb
mov
fild
jmp
ins
mov
push
jae
cmp
push
sub
lahf
xchg
sar
test
mov
sti
mov
add
add
in
sbb
cdq
mov
pop
stos
adc
sub
mov
add
sub
jge
xchg
popa
jmp
xchg
mov
test
mov
fist
sbb
fsubr
add
push
in
lea
jecxz
adc
test
adc
das
cwde
mov
adc
loopne
iret
jo
(bad)
push
or
adc
xchg
mov
mov
in
sar
sbb
fcomi
pop
(bad)
xlat
sbb
sbb
(bad)
jmp
push
mov
jle
xchg
mov
test
pop
ja
ror
inc
push
cmps
(bad)
iret
push
movs
inc
icebp
jecxz
push
mov
fcomip
dec
test
adc
fdiv
sub
in
or
sbb
xchg
pop
dec
retf
ss
lods
ret
and
sar
mov
iret
and
bound
dec
lds
xor
pop
aad
into
loopne
xchg
shr
pop
inc
inc
call
clc
push
adc
mov
xor
pop
imul
loope
adc
dec
cmp
xchg
add
int
enter
add
lock
dec
out
inc
lods
out
loopne
rcr
fs
cld
fnstenv
fwait
in
ds
outs
adc
std
mov
lds
mov
mov
retf
stos
mov
cmp
sbb
ds
in
mov
pop
xor
lock
cwde
add
mov
mov
in
mov
pop
jb
jmp
cmp
mov
dec
mov
mov
enter
cmps
enter
jmp
mov
outs
sti
cmp
cmp
mov
ins
jnp
arpl
sahf
push
adc
xor
clc
neg
aad
pushf
dec
fcom
(bad)
iret
daa
push
(bad)
cli
push
inc
test
jle
aas
inc
or
xchg
mov
ins
jne
cmp
sbb
addr16
ins
add
jo
jecxz
xchg
dec
into
popa
mov
adc
cmp
xor
hlt
movs
fs
jecxz
test
mov
adc
ja
xchg
cmp
add
adc
push
pusha
push
adc
mov
or
xchg
jecxz
cmc
pop
adc
fdivr
pop
ss
mov
push
dec
inc
stc
mov
pop
imul
or
ds
push
mov
sahf
adc
adc
pushf
fisub
dec
cmp
mov
fist
mov
ret
jle
add
movs
cmp
scas
iret
loope
adc
and
cmp
cwde
popf
jae
sbb
mov
push
bound
mov
or
daa
int3
xor
mov
pop
push
jno
int
and
test
adc
mul
add
cmps
or
add
aas
and
aaa
fdivr
bound
cli
dec
jae
mov
repnz
stos
or
pushf
stos
push
lods
sti
mov
jno
cmps
movs
xchg
imul
inc
scas
xor
test
cli
sbb
pop
mov
test
pop
mov
mov
sbb
(bad)
cdq
mov
push
movs
std
(bad)
cmc
sbb
enter
fild
pop
push
aad
in
add
repz
xchg
test
adc
push
icebp
xlat
and
and
test
shl
inc
(bad)
fld
inc
dec
fmul
xchg
(bad)
lahf
cli
shr
xor
push
pop
retf
mov
xor
test
cmp
inc
jbe
jae
hlt
xor
loop
call
jno
mov
dec
mov
lods
test
ja
inc
xchg
fldcw
test
jns
mov
(bad)
cli
lea
cmp
(bad)
mov
xchg
sbb
xor
jmp
sti
mov
mov
adc
mov
pop
pop
adc
sub
inc
fwait
cmps
inc
or
xchg
scas
mov
xchg
dec
push
rcr
mov
push
test
fwait
(bad)
sub
or
or
inc
ss
test
adc
jae
xlat
fimul
xchg
call
push
in
lock
pop
pushf
inc
jno
rcr
fdiv
imul
mov
cdq
xchg
clc
sbb
frstor
xor
shl
cmp
daa
sub
sbb
sbb
out
leave
mov
jmp
(bad)
in
push
fs
sub
mov
js
iret
mov
pusha
scas
push
fist
mov
jne
fbld
test
in
sahf
and
aas
fimul
cdq
mov
add
loopne
dec
ds
jge
sbb
sbb
je
sbb
or
repnz
mov
sub
sub
rcr
movs
out
dec
and
jmp
sub
or
push
sar
enter
cmp
dec
rol
or
outs
mov
stos
lods
retf
fwait
jae
mov
inc
scas
in
repz
iret
jmp
push
add
xchg
out
add
pop
call
xchg
mov
xor
mov
(bad)
in
push
clc
lock
mov
dec
adc
sbb
push
and
outs
jge
in
(bad)
push
and
fstp
push
jno
mov
add
movs
test
cmp
int3
les
nop
movs
cmps
loopne
in
dec
(bad)
cmp
sub
in
and
adc
mov
sub
and
dec
mov
push
sub
xor
inc
push
ds
test
scas
test
or
inc
fldl2t
in
aas
xlat
push
mov
push
lods
mov
mov
out
xor
inc
rol
xchg
pop
push
mov
mov
repnz
ret
cs
pop
ins
scas
pop
mov
outs
push
xor
or
std
into
sbb
sahf
cli
sub
push
jmp
(bad)
ja
push
rol
rcl
lahf
jb
stc
pop
repz
add
sub
(bad)
enter
jo
push
dec
and
sub
fimul
hlt
mov
pop
sub
test
sbb
push
loope
aas
sahf
jns
outs
pop
sub
push
sar
cmp
jp
popa
(bad)
shl
mov
test
movs
jmp
sbb
adc
adc
test
enter
out
enter
push
xor
jne
or
jnp
mov
cmp
xchg
push
jae
sti
jae
adc
sbb
jmp
mov
jge
mov
iret
lods
outs
inc
sub
or
pop
mov
xor
(bad)
dec
push
add
fwait
pop
inc
mov
lds
call
addr16
or
jne
xor
xchg
pop
and
mov
mov
push
push
aas
clc
add
xor
push
ins
inc
dec
cld
push
push
mov
jnp
mov
sub
dec
fnstcw
idiv
cwde
loop
pop
scas
lods
dec
mov
rcl
les
int
jns
jb
aaa
pop
(bad)
mov
cmps
xchg
sub
push
mov
popa
push
mov
jmp
cwde
jle
pop
cwde
lds
cmp
add
sub
and
dec
adc
mov
fadd
ds
xchg
or
sahf
iret
mov
fidivr
sbb
fistp
jno
stos
dec
mov
mov
and
aas
mov
and
inc
or
push
cmp
rol
sub
enter
sbb
repnz
(bad)
in
push
xchg
mov
inc
popf
mov
loopne
xlat
mov
adc
mov
xchg
call
sahf
scas
lock
pop
mov
(bad)
ss
sub
pop
cmp
out
loope
leave
out
sub
pop
xchg
mov
or
loopne
and
sbb
sub
call
call
adc
mov
je
in
xchg
adc
jno
mov
xchg
dec
mov
push
clc
cmps
dec
addr16
popa
aas
mov
popf
out
(bad)
push
out
sbb
(bad)
pop
or
fild
sahf
jle
sbb
je
pop
cmp
xchg
cmps
popf
jbe
push
ins
(bad)
retf
mov
mov
in
cmp
jne
std
fisub
push
call
mov
stos
dec
repz
cdq
lea
push
mov
dec
and
fcom
push
daa
cmps
sbb
and
or
test
imul
fild
xor
shl
movs
adc
pusha
pusha
retf
jmp
cld
and
cmps
mov
or
lahf
cmp
aad
inc
(bad)
fmul
imul
and
or
push
stos
enter
ss
mov
retf
call
push
jl
adc
mov
sbb
retf
pusha
loop
mov
xchg
(bad)
int3
retfw
xchg
and
inc
mov
loope
data16
fimul
xchg
pushf
and
cmp
adc
xor
dec
ret
mov
xchg
sub
sbb
dec
adc
stos
jg
jnp
enter
ss
push
dec
mov
add
jmp
push
add
mov
ss
movs
mov
adc
mov
pop
jmp
dec
loope
mov
data16
mov
sub
mov
or
mov
cmp
rol
sbb
dec
cdq
stos
rol
mov
and
add
mov
outs
jno
cmp
sahf
sub
jns
sub
add
xchg
cmp
push
int3
mov
or
dec
das
clc
scas
jecxz
jae
sub
lods
icebp
repz
(bad)
cmc
sbb
mov
xor
nop
xchg
add
movs
scas
loopne
xchg
dec
call
outs
or
repnz
sbb
je
inc
xor
adc
push
adc
scas
mov
leave
adc
mov
jmp
pop
sub
mov
bound
adc
jb
push
push
push
add
xchg
sub
je
add
push
add
aaa
jne
sub
or
or
call
aaa
call
inc
lock
adc
das
mov
add
sti
out
and
or
xor
xor
stos
fwait
mov
pop
jnp
jp
int
(bad)
mov
mov
xor
cdq
loopne
or
retf
ins
xor
repz
add
fld
lahf
and
test
ret
idiv
int
mov
fdivr
test
cld
inc
dec
fwait
pushf
imul
leave
xor
and
out
cdq
jge
mov
gs
pop
inc
fsubr
xor
sub
arpl
fwait
mov
mov
test
mov
xor
or
call
xor
dec
pop
call
(bad)
bound
int
xchg
mov
jbe
inc
sar
mov
(bad)
fnstsw
push
and
ret
out
push
sub
cmp
aam
js
jbe
retf
xor
cmp
inc
sahf
mov
fisub
pop
gs
daa
add
mov
adc
dec
push
ds
(bad)
jmp
jle
jmp
outs
mov
jg
test
dec
mov
xchg
xchg
mov
fidiv
push
xchg
ins
jbe
in
xchg
and
es
(bad)
div
ficomp
mov
xchg
in
xor
and
cmp
retf
or
aas
stc
loopne
and
les
ins
int3
and
xchg
pop
pop
xchg
add
in
xchg
leave
ret
cmp
mov
xchg
daa
sbb
js
inc
adc
mov
enter
push
and
ss
pop
jle
mov
mov
jne
stc
pop
ja
wbinvd
sub
or
mov
xchg
pop
popf
dec
adc
push
fs
fistp
repnz
xchg
jo
stc
out
arpl
jmp
lock
pop
adc
es
sub
mov
jb
jne
(bad)
cld
mov
daa
je
dec
rol
fld
cmp
stos
sti
icebp
popf
xchg
les
leave
add
pop
add
adc
int3
mov
mov
inc
mov
cmp
or
adc
retf
mov
cld
push
sbb
and
data16
sub
push
cs
cmp
stos
or
and
jb
mov
push
out
imul
inc
sub
in
jo
outs
loopne
dec
out
stc
jne
fadd
mov
hlt
das
stos
outs
mov
sbb
data16
or
mov
mov
pop
(bad)
sbb
inc
fbstp
rol
xor
push
movs
sahf
rcl
dec
or
fucomp
sbb
xor
(bad)
enter
cmp
lock
popa
or
imul
push
xor
lods
mov
fimul
fist
shl
hlt
ds
mov
inc
add
mov
add
sub
cld
das
ins
fsub
add
les
push
push
add
pop
fwait
or
outs
aad
fiadd
push
(bad)
sbb
mov
js
repz
adc
jno
pop
stos
iret
iret
mov
add
ja
inc
ins
or
mov
ins
mov
push
sbb
repz
test
xor
mov
and
cs
inc
(bad)
icebp
add
push
mov
add
pop
leave
sti
icebp
xor
add
jnp
aad
cli
pop
stos
pop
xchg
jnp
cld
sar
repnz
fst
xor
cwde
shl
test
(bad)
mov
cmps
cld
pop
sub
push
mov
sbb
jo
sar
push
and
cmp
add
call
movs
fnstcw
inc
push
movs
xchg
cmp
pop
(bad)
adc
cmp
stc
cdq
cdq
or
dec
dec
or
(bad)
sbb
dec
mov
jl
(bad)
sbb
popa
ins
pavgb
sbb
movs
pop
fucomp
push
outs
test
xor
lahf
pop
pop
adc
fstp
(bad)
mov
ins
stos
dec
sbb
bound
jae
sbb
inc
pop
push
dec
outs
mov
aas
cmp
pusha
(bad)
jmp
xchg
iret
nop
mov
xchg
pop
cmp
jmp
retf
sti
mov
mov
mov
jg
(bad)
dec
jecxz
adc
sub
push
jp
adc
and
dec
fs
pop
call
pusha
add
xchg
xchg
in
mov
push
pop
test
out
retf
dec
into
mul
retf
ror
cmp
pop
mov
mov
pop
mov
sbb
push
pop
xchg
jno
addr16
push
pushf
shr
mov
cmp
in
test
mov
xchg
sti
xchg
dec
cmp
retf
mov
mov
ret
jno
xor
sub
pop
arpl
or
push
inc
mov
jecxz
shl
mov
in
nop
sbb
fsubr
cmc
(bad)
test
cmp
call
repnz
mov
and
sub
adc
pop
data16
xchg
mov
aam
bound
test
xor
and
mov
mov
push
cmp
add
lods
stc
xchg
add
jne
pop
jne
(bad)
or
pop
sub
dec
cdq
cli
(bad)
stc
and
jbe
xchg
mov
outs
movs
ins
and
fild
or
dec
or
mov
add
les
inc
in
sar
jmp
mov
mov
jmp
adc
fistp
out
rcl
pushf
mov
aam
rcl
cmp
add
jmp
push
mov
pop
jbe
dec
xchg
into
and
mov
arpl
mov
xor
xor
cmp
leave
push
add
cmps
rcr
adc
mov
pop
dec
pop
mov
stos
in
clc
push
ins
cs
xchg
push
pop
mov
aam
in
mov
push
fucomp
pushf
mov
enter
mov
xor
ins
or
das
mov
rcr
or
pop
movs
and
sbb
dec
ja
popf
in
(bad)
cmp
mov
outs
push
into
sub
dec
xchg
ret
fwait
mov
fld
adc
adc
movs
jle
add
and
test
sbb
pop
(bad)
outs
cli
pushf
in
cdq
fs
mov
rcl
in
push
into
jecxz
test
pop
push
clc
outs
xchg
repz
out
push
and
nop
cmp
(bad)
pop
mov
lods
out
movs
mov
pop
cmp
les
sub
sbb
pop
lock
aas
adc
jecxz
push
pop
jne
push
pop
sub
mov
adc
xchg
fadd
mov
dec
rcl
mov
loopne
push
aam
outs
adc
pop
and
jns
ds
fnstenv
jno
hlt
sbb
inc
dec
mov
icebp
add
fnstenv
sub
sbb
mov
sar
adc
gs
fdiv
out
pop
dec
out
push
mov
test
add
cdq
add
cmc
and
pop
xor
sbb
test
pop
ror
inc
(bad)
fisub
cwde
enter
push
lea
fdivr
jb
inc
mov
int3
mov
sub
addr16
cmp
mov
inc
enter
mov
jmp
push
sbb
je
loop
mov
(bad)
xor
aam
and
jne
cmps
or
lahf
cmps
out
test
xchg
mov
imul
getsec
jne
imul
xchg
xchg
gs
mov
xor
(bad)
push
out
dec
pop
xor
push
jmp
lahf
or
cmps
lods
dec
mov
fist
ret
into
jne
xor
xor
push
inc
imul
or
adc
xchg
das
(bad)
mul
jmp
not
mov
ficomp
xchg
stos
inc
cmp
jbe
push
pop
and
sbb
and
les
mov
cmp
ins
xor
iret
xor
adc
rol
add
cdq
mov
popf
outs
mov
shl
fdivr
add
push
in
xor
jne
out
sbb
pop
mov
(bad)
sti
call
lock
mov
out
ret
push
icebp
and
test
jg
dec
cmps
jecxz
xchg
popa
and
scas
fwait
xchg
mov
hlt
adc
cmps
push
fnstcw
dec
adc
in
repz
xchg
sub
scas
jae
xchg
xchg
(bad)
cmp
push
aam
dec
icebp
cmps
div
loopne
les
xchg
fucomip
(bad)
push
outs
sti
imul
sbb
xchg
(bad)
das
mov
das
sub
or
pusha
loope
cmp
mov
pushf
scas
adc
loope
pop
stos
jle
enter
jb
push
xor
inc
js
pop
fstp
ins
push
inc
hlt
loop
je
fnstenv
xchg
scas
or
inc
xor
sahf
je
mov
(bad)
xor
mov
xchg
rol
aad
cmp
push
or
jae
jge
mov
pop
nop
loop
sub
sti
pop
sub
es
stos
stc
xchg
ins
sub
or
ret
ins
cmp
pop
fs
sub
retf
jbe
or
out
mov
sbb
lea
push
inc
mov
add
or
dec
in
mov
in
push
cmp
push
movs
inc
jnp
mov
std
cmps
outs
push
add
jp
and
mov
mov
jecxz
arpl
cmps
mov
add
jo
mov
dec
cdq
leave
leave
mov
adc
(bad)
(bad)
aas
push
out
addr16
leave
stos
call
popf
or
cmp
repnz
enter
repz
jge
bound
bndstx
(bad)
out
add
popa
mov
nop
stos
jp
idiv
outs
xchg
ins
xor
out
xchg
aam
(bad)
mov
stos
mov
mov
mov
mov
xor
push
ficom
test
mov
and
mov
or
mov
rol
xchg
dec
jmp
mov
push
aad
enter
xor
and
mov
pop
xchg
xchg
sub
dec
jg
jns
pop
(bad)
in
lods
mov
jno
or
mov
mov
dec
add
push
mov
scas
jecxz
popf
jecxz
xor
inc
push
inc
push
xor
xor
loope
push
xor
or
mov
cmp
shl
or
mov
popf
dec
imul
push
push
test
shl
and
adc
scas
mov
jle
and
or
pop
fidiv
sub
cmp
retf
adc
mov
in
xor
push
push
stc
sbb
js
jae
stos
xor
xlat
ror
mov
xchg
outs
loopne
push
xor
inc
sub
clc
dec
(bad)
les
pop
inc
cwde
lock
loope
in
out
mov
cmps
out
mov
and
je
call
adc
inc
add
jg
inc
clc
gs
mov
push
push
pushf
inc
icebp
mov
mov
xor
xor
cmps
or
clc
xchg
cdq
(bad)
(bad)
into
mov
inc
mov
imul
mov
repnz
mov
pop
clc
test
sbb
xor
loope
jb
retf
sub
mov
ret
jno
jle
push
adc
call
adc
ja
test
ret
sub
add
hlt
test
dec
das
adc
ficom
push
jg
dec
hlt
or
push
sub
arpl
or
mov
aam
nop
pop
xchg
ss
or
dec
(bad)
sbb
jae
aas
mov
or
cwde
aaa
push
jo
push
ret
fcmovu
add
xchg
fs
pop
shr
loop
and
sahf
jae
sahf
dec
cmps
repz
sahf
mov
es
repz
(bad)
jns
push
and
out
jne
cmc
add
inc
pop
jmp
outs
cvtpi2ps
retf
les
dec
fld
add
inc
mov
inc
mov
movs
loopne
push
cmp
imul
lock
adc
shl
mov
out
inc
aad
outs
in
push
mov
xor
nop
or
adc
jle
sub
nop
cmp
pop
test
jb
cmp
push
outs
xchg
das
(bad)
pusha
call
inc
and
mov
into
dec
fcom
push
scas
rcr
icebp
jnp
inc
push
int
popa
ds
(bad)
push
mov
push
jo
ja
scas
push
ror
and
pop
loop
(bad)
out
jo
in
sbb
or
and
jmp
mov
fs
mov
mov
inc
rcl
scas
je
xor
dec
add
retf
lea
repz
push
and
inc
add
sbb
mul
lahf
test
cmpxchg
scas
and
lds
mov
int3
pushf
cmps
in
ror
ror
idiv
test
and
push
sub
push
and
cmp
inc
sbb
sub
push
xor
ins
call
sbb
xor
sbb
clc
jmp
inc
jp
mov
lock
test
sbb
xor
sbb
pop
sub
push
add
aas
add
jecxz
mov
add
into
jg
in
push
jl
cmps
movs
scas
rcr
sbb
xchg
sbb
and
mov
out
xor
jl
(bad)
or
pop
stc
sub
sub
mov
scas
enter
pop
add
xor
outs
mov
call
push
mov
(bad)
rcr
daa
outs
push
repnz
daa
xchg
cld
push
dec
fnstsw
imul
cld
fst
cmps
shl
fldenv
push
mov
retf
add
sub
mov
bound
xor
aaa
xor
xchg
ja
loope
jmp
int3
pusha
ror
in
aam
call
push
sub
mov
popf
sbb
sub
mov
ret
faddp
aas
pop
out
movs
adc
jmp
and
cmp
sbb
test
jmp
sub
or
mov
xchg
and
dec
sub
(bad)
out
mov
jbe
mov
xchg
mov
out
shr
mov
test
or
sbb
adc
test
dec
test
call
mov
nop
pop
cmps
iret
ds
lods
xchg
test
out
push
mov
imul
push
mov
ja
jp
xor
mov
repz
sti
stos
push
jno
out
sbb
(bad)
fsubr
popf
mov
aam
push
mov
mov
fiadd
out
push
pop
mov
cwde
mov
imul
mov
jmp
dec
frstor
scas
int3
sbb
stos
push
mov
xchg
in
movs
sub
(bad)
push
add
test
into
dec
hlt
jmp
fcom
retf
jbe
cli
jae
xchg
xchg
ret
cmp
fisttp
xchg
push
sbb
loope
mov
stos
jo
stos
stos
xchg
je
pop
sbb
repz
pop
mov
mov
jno
dec
or
aam
inc
xor
pop
xor
fwait
inc
mov
push
mov
pop
adc
adc
repnz
mov
out
adc
or
jg
mov
outs
lock
aas
outs
stc
xchg
je
in
push
icebp
add
push
in
push
int
dec
or
mov
push
dec
aaa
or
xchg
inc
mov
cmp
sub
sbb
(bad)
mov
push
shl
pop
repnz
idiv
pop
cmp
xchg
add
fiadd
or
in
stos
pop
(bad)
pop
xchg
add
mov
push
aas
sub
mov
nop
inc
pop
mov
mov
xchg
enter
out
mov
fwait
stc
dec
shr
outs
out
in
dec
mov
ret
in
jp
pop
call
cmp
mov
sbb
loope
loope
adc
jnp
out
sub
icebp
sbb
test
in
pop
mov
jbe
and
sbb
push
pop
xor
jle
shl
imul
push
enter
xchg
cmp
mov
leave
mov
push
arpl
fsub
bound
popf
lods
or
mov
stc
push
aam
mov
stos
adc
(bad)
in
pop
pusha
mov
or
cs
pop
add
ret
sub
loopne
pop
pop
iret
push
jo
pop
bound
xchg
test
xor
fmul
fbld
punpcklwd
and
out
jp
nop
or
dec
sub
mov
cmp
imul
mov
repz
and
das
in
xchg
jecxz
call
ja
jmp
sbb
mov
das
es
or
dec
adc
jp
mov
int3
pop
(bad)
in
out
pushf
push
shl
lock
adc
jb
adc
adc
stos
cmp
xor
or
loop
out
sub
rcr
das
pop
call
mov
push
shl
js
out
scas
mov
push
xchg
dec
cmp
dec
pop
sub
in
inc
xchg
push
add
jge
mov
add
xchg
sub
jmp
pushf
lods
sub
mov
gs
jge
call
movs
mov
push
or
sub
fld
dec
fstp
cld
and
xor
iret
fs
(bad)
xor
std
cld
(bad)
mov
dec
xor
pop
enter
or
jno
fild
add
icebp
imul
(bad)
call
inc
push
add
cwde
mov
add
push
push
test
int3
and
adc
and
sub
std
ret
mov
ficom
outs
mov
clc
bound
and
fdivr
jle
mov
or
mov
dec
mov
inc
jge
xlat
inc
fdivp
iret
lea
fdiv
in
cld
push
and
in
retf
scas
mov
test
rol
dec
jmp
mov
cdq
jmp
lahf
iret
adc
xchg
add
ret
adc
push
pusha
or
xor
das
call
gs
aas
outs
mov
test
adc
push
fs
cmp
ss
outs
popa
pop
jg
mov
sbb
repz
push
inc
mov
cmps
lds
sbb
jle
add
adc
nop
jnp
out
outs
scas
ret
pop
into
pop
add
cdq
ror
outs
cmp
adc
sbb
inc
inc
inc
mov
mov
in
sub
cdq
lahf
mov
sub
(bad)
ds
clc
mov
imul
loop
jmp
jo
nop
mov
adc
(bad)
dec
retf
adc
fimul
scas
iret
mov
rcl
or
add
push
adc
push
push
pop
jne
or
cmps
sub
imul
adc
fidiv
xor
pop
or
push
and
or
ja
dec
fcmovne
inc
sbb
cmps
stos
retf
sub
lock
push
je
dec
in
(bad)
ins
jmp
add
push
ret
jmp
repz
push
sbb
ret
loope
lods
inc
out
mov
mov
sbb
test
fistp
hlt
jg
sbb
mov
xchg
cs
das
pusha
neg
int3
jno
(bad)
aad
sub
xor
cwde
pop
sahf
xchg
rcl
ss
and
mov
scas
icebp
adc
sar
push
xor
sub
add
and
jg
call
cmp
dec
into
pop
mov
test
push
jns
loop
pop
xchg
cmp
mov
shr
das
retf
adc
das
mov
pop
cdq
pop
(bad)
ins
push
jmp
loope
popf
mov
(bad)
in
cmp
je
aas
xor
add
mov
repnz
stos
xor
and
es
pop
sbb
(bad)
ins
add
lods
push
loop
dec
ins
push
sti
xchg
pushf
sbb
test
jns
jb
sbb
loop
jl
mov
add
in
push
ds
pop
mov
call
mov
sbb
or
aad
ret
out
pop
cmp
inc
pusha
pop
and
sbb
jl
out
add
add
retf
lea
repz
sub
lds
outs
pop
ja
cld
test
sti
or
(bad)
mov
cli
js
popa
aad
movs
cwde
pusha
jne
mov
ficom
ficom
cmps
mov
mov
push
inc
retf
je
icebp
in
popa
gs
adc
fadd
std
popa
rcr
sbb
aam
das
dec
bound
loopne
xor
jge
pop
adc
add
fwait
je
dec
mov
mov
or
(bad)
cmp
inc
mov
leave
pop
xchg
push
es
cmp
inc
or
sar
cmp
cmp
ins
mov
ror
mov
loopne
push
loop
cmps
xchg
add
pop
stos
adc
iret
mov
mov
or
sbb
ret
out
int
pop
nop
xbegin
out
pop
out
mov
and
retf
sbb
in
das
scas
sbb
jmp
and
loope
gs
test
mov
mov
fs
sahf
pop
sub
sbb
ins
cmp
stc
mov
test
mov
std
xchg
in
std
push
js
cdq
or
mov
int
xchg
mov
mov
out
daa
inc
fsub
inc
cs
out
mov
add
sub
push
(bad)
push
pop
cs
pop
outs
ja
mov
mov
inc
cwde
mov
mov
and
lock
clc
scas
sub
xor
out
jns
fidivr
cli
outs
mov
sub
in
retf
lea
xor
add
cld
dec
int3
retf
jp
xchg
add
adc
add
stc
repnz
shl
inc
clc
in
icebp
fisubr
or
aam
push
lods
fsubr
call
into
xlat
jmp
fnstcw
aas
sar
lea
xchg
retf
int3
test
and
jmp
aam
cmp
cmp
retf
movs
fwait
xchg
sub
out
lock
stos
stos
mov
frstor
or
jbe
mov
pop
scas
stos
inc
inc
pop
xchg
sub
and
gs
mov
xchg
loop
cmp
add
movs
and
or
fdivr
pop
fnstcw
dec
jne
cmp
adc
std
pop
and
cmp
hlt
and
cmp
cli
or
ds
data16
aad
push
push
inc
mov
dec
lods
add
sub
mov
xor
dec
ficom
jp
int3
jmp
rcl
dec
mov
mov
aam
push
jle
xchg
scas
das
js
fmul
add
mov
inc
int
ret
mov
dec
hlt
jmp
test
arpl
loope
ins
stos
mov
enter
jnp
call
fs
outs
and
in
inc
iret
call
mov
cmp
fild
retf
sbb
pop
xchg
push
dec
adc
fwait
sub
outs
mov
sub
jmp
aad
stos
push
inc
dec
call
sub
clc
fnstenv
and
cmp
retf
fcomp
mov
aam
mov
out
sahf
in
dec
mov
jne
sahf
lods
cmps
push
xor
jns
xor
loopne
aaa
retf
sbb
mov
xor
mov
pop
sbb
hlt
pusha
and
(bad)
js
leave
jb
fxch
or
and
cld
in
jae
jmp
in
test
sbb
jl
push
call
cmp
inc
addr16
iret
imul
aaa
dec
das
mov
cmp
inc
adc
sub
and
inc
retf
xchg
adc
mov
mov
push
mov
lods
retf
xor
push
mov
jecxz
and
cmp
push
scas
ins
adc
mul
cmp
pop
jmp
inc
or
sbb
stos
xchg
arpl
lock
pop
data16
test
lds
mov
test
cmp
add
sub
xchg
jmp
mov
sbb
dec
inc
idiv
rcr
fadd
jge
mov
push
jge
xchg
(bad)
aaa
mov
stos
mov
adc
popf
add
leave
js
adc
or
cld
(bad)
ins
add
sub
(bad)
ffreep
mov
mov
and
nop
sub
add
sbb
dec
add
fdivp
repz
cld
rcr
sub
ins
dec
pop
mul
dec
retf
xor
movs
lds
sar
mov
scas
adc
fnstcw
das
mov
adc
std
cmp
inc
or
movs
(bad)
int
mov
cs
sub
sub
shr
xchg
adc
and
imul
inc
into
sub
dec
jnp
jnp
(bad)
cmp
xlat
ja
inc
mov
jae
jno
jno
dec
shl
not
shr
clc
arpl
mov
retf
sti
adc
cmps
shr
out
cmps
sbb
fcmovbe
pavgb
jo
xchg
retf
jno
or
outs
or
mov
lahf
cs
inc
mov
push
jnp
je
pop
cmp
xor
xchg
or
test
cmp
out
imul
rol
cmp
imul
pusha
mov
mov
and
hlt
ja
mov
imul
sahf
test
jecxz
imul
dec
jae
out
inc
jmp
daa
mov
in
adc
iret
mov
push
pop
cld
pop
out
cwde
jl
mov
ja
push
fnstcw
or
push
adc
test
je
push
(bad)
out
and
pop
pop
dec
dec
mov
cmp
xor
xor
in
mov
pop
push
jne
jns
cmp
ins
push
data16
loope
mov
mov
jns
pop
pop
dec
fs
ins
sbb
fistp
xor
(bad)
xor
out
xor
inc
into
(bad)
shl
leave
mov
add
dec
fwait
in
sbb
pushf
dec
dec
sub
mov
leave
mov
ins
stc
or
pop
call
sbb
imul
cwde
(bad)
call
repz
cmps
pop
popf
(bad)
mov
adc
add
jmp
add
mov
mov
sahf
ret
fadd
sti
or
sub
mov
jg
ds
sbb
les
sub
sbb
sar
and
das
jno
xchg
sbb
push
in
inc
pop
fsub
cmp
mov
push
rol
jns
mov
addr16
adc
xor
ins
arpl
inc
ins
pushf
xchg
jmp
push
xchg
sbb
add
hlt
cmc
xor
retf
jbe
mov
fwait
mov
mov
shr
add
enter
xchg
cdq
aas
lods
loop
pop
cdq
out
pop
aam
ret
pop
cdq
sub
or
and
xchg
pop
pushf
add
jno
pop
push
pop
push
xchg
test
xchg
cs
nop
stos
arpl
rol
clc
mov
and
test
cld
push
sub
imul
adc
cmps
in
test
aaa
mov
shr
bswap
dec
sub
jmp
push
sbb
cmp
inc
out
mov
dec
cmp
push
ins
mov
retf
retf
pop
lea
movs
jno
sub
mov
mov
mov
pop
add
mov
and
push
ja
sbb
pop
cs
ret
sti
and
inc
clc
test
fcomip
mov
clc
lock
cwde
add
pop
sub
ret
jbe
xchg
push
push
xchg
cmp
mov
rol
(bad)
std
and
int3
and
and
jl
mov
pop
loop
sub
fmulp
lds
and
jns
inc
inc
dec
cdq
sbb
outs
cs
or
xchg
test
adc
dec
out
pop
jecxz
jle
test
and
mov
xchg
fsub
mov
imul
jecxz
mov
(bad)
xor
jl
lds
(bad)
cmp
ins
fst
in
shl
add
pop
gs
sub
out
js
mov
push
movs
lds
cdq
(bad)
jp
mov
adc
scas
adc
jmp
fistp
push
or
dec
ret
les
sbb
hlt
add
les
test
cmp
jl
sbb
in
shr
rcr
mov
std
pop
pop
jecxz
fstp
jo
sub
mov
outs
repz
aaa
pop
jecxz
push
dec
shr
pop
(bad)
fld
push
push
jbe
icebp
jmp
mov
ss
mov
test
stc
aaa
inc
out
cmp
and
iret
icebp
scas
dec
mov
pusha
or
add
out
or
push
ret
ror
leave
push
and
xor
or
mov
dec
cdq
or
in
xchg
outs
aad
mov
into
idiv
pop
ins
pop
jne
mov
out
test
push
add
shl
not
popf
popa
xor
addr16
sub
mov
jb
pop
or
cmps
loope
icebp
outs
jmp
lods
in
push
cwde
jnp
dec
retf
lds
and
jo
movs
inc
xor
jecxz
push
(bad)
test
nop
dec
(bad)
enter
and
mov
push
adc
repnz
cs
xor
aam
xchg
mov
and
inc
ins
lea
lods
pop
movs
fcomp
call
jg
and
adc
fs
fcmovbe
push
dec
mov
(bad)
mov
mov
add
xor
and
inc
test
fs
and
fisttp
sbb
lea
and
or
xchg
gs
pop
leave
sahf
cmp
sbb
out
loope
and
mov
and
pushf
je
(bad)
and
stos
inc
ret
stos
aaa
jne
jl
cwde
outs
or
inc
and
add
(bad)
adc
pushf
fwait
cmp
xchg
inc
or
or
(bad)
imul
stos
or
jmp
inc
nop
push
add
popf
sti
adc
repz
xchg
dec
call
mov
push
pop
pop
cli
retf
fild
mov
push
pop
ror
nop
inc
out
sbb
fnsave
out
jne
ja
sub
lds
in
add
in
mov
cmp
cli
jecxz
push
cdq
test
mov
adc
into
sbb
dec
inc
xchg
cmps
push
push
(bad)
(bad)
cmps
mov
inc
retf
sub
shl
mov
call
nop
mov
mov
add
in
fidivr
popf
jmp
pop
inc
stc
inc
mov
cli
adc
inc
scas
mov
pop
inc
sbb
ja
gs
push
scas
lods
outs
cmp
push
enter
(bad)
ds
fwait
in
in
(bad)
aas
popa
(bad)
dec
inc
push
add
mov
push
out
mov
add
fwait
shl
sub
inc
and
out
sbb
cmp
jae
arpl
popf
adc
dec
test
fdiv
mov
pop
sbb
push
inc
push
mov
jp
ins
fwait
and
xchg
xchg
mov
ins
mov
and
and
jp
jb
xor
cld
mov
loope
xchg
(bad)
or
retf
cld
push
enter
inc
iret
sub
xchg
inc
cli
inc
xchg
sub
add
xor
cmps
je
(bad)
(bad)
push
pop
pop
shl
mov
xchg
iret
cdq
inc
cmp
jae
popf
in
std
lods
xchg
xchg
add
and
jbe
stos
add
mov
or
sbb
jl
push
or
sti
data16
popa
push
cmp
(bad)
xlat
sub
fwait
xor
cwde
ss
ins
rol
add
in
mov
mov
xor
pop
jmp
scas
add
dec
mov
xor
retf
mov
ins
lock
cdq
or
mov
dec
xchg
jo
int
or
xor
dec
inc
repnz
or
cmp
ror
jle
mov
xchg
cmp
add
sub
idiv
push
push
inc
cdq
xchg
add
repnz
test
xchg
je
hlt
out
test
mov
jnp
stos
call
loope
loopne
add
dec
or
ins
call
jmp
jnp
js
int3
test
dec
cmovns
fwait
clc
add
xor
std
inc
stc
cmp
in
xchg
jae
cs
rcr
jno
aad
adc
sbb
popa
or
mov
xlat
lea
popf
rep
mov
loop
or
xor
icebp
cmp
inc
adc
mov
retf
mov
inc
loop
or
gs
pop
call
repz
jne
push
sahf
cli
sbb
mov
repz
test
jge
jb
cdq
inc
(bad)
aaa
movzx
ror
mov
mov
xchg
in
cmp
jmp
mov
jge
push
sbb
movs
loope
dec
pop
daa
mov
mov
or
xchg
jge
pop
adc
(bad)
out
das
out
int
mov
adc
int3
out
cmps
mov
mov
je
inc
or
sti
pop
jge
dec
fsubr
idiv
leave
les
adc
mov
or
lea
pop
jne
adc
jge
daa
cmps
inc
dec
test
pop
jne
jge
(bad)
mov
cmp
sbb
shr
push
test
test
xor
aas
mov
and
pushf
dec
add
and
shrd
cld
dec
daa
into
out
into
and
xor
add
shr
cli
sub
mov
add
jecxz
ds
mov
leave
xchg
pop
cmp
aad
and
jmp
mov
sbb
xlat
pop
cmps
mov
popa
jno
cmp
or
sub
outs
fs
addr16
retf
call
add
sbb
mov
jns
mov
cmps
dec
mov
cmp
sti
shl
jmp
bound
shl
sbb
into
call
ins
(bad)
pop
rcr
dec
test
mov
or
lods
sub
loopne
arpl
xchg
mov
loope
mov
and
out
mov
retf
in
les
imul
sbb
jge
sub
fcom
xor
jne
jle
fs
cmp
in
mov
adc
sbb
(bad)
(bad)
scas
mov
imul
call
mov
add
repz
retf
fldcw
lds
not
xor
mov
mov
jg
out
xlat
mov
fdivr
pop
in
dec
add
ficom
or
pop
adc
jno
cmp
enter
inc
enter
mov
int3
cmp
or
sbb
test
adc
jns
ds
stos
gs
push
out
inc
fld
scas
jb
sbb
push
adc
push
or
(bad)
push
bound
or
push
and
mov
adc
pop
and
fcom
push
enter
adc
pop
fild
pop
lahf
mov
sbb
cwde
push
and
test
jmp
xor
sbb
mov
cli
add
nop
aas
jp
mov
xchg
mov
hlt
adc
fstp
sub
fs
shl
test
addr16
ret
mov
std
mov
movs
(bad)
(bad)
pop
jg
mov
hlt
jecxz
daa
xor
outs
test
lock
test
pop
cmp
into
dec
or
fcmovbe
xchg
idiv
push
add
outs
test
fnstenv
pusha
sbb
aad
jp
stos
xchg
xchg
data16
inc
addr16
and
lods
adc
ret
xor
shl
dec
fwait
or
ins
ss
stos
mov
ja
enter
sar
and
popf
push
mov
jne
mov
out
jg
push
test
mov
dec
push
outs
mov
imul
and
and
cmp
mov
imul
mov
out
dec
pusha
add
cmp
push
add
adc
test
dec
adc
ins
(bad)
repz
sbb
xchg
sbb
dec
js
pop
call
enter
mov
jp
jno
sbb
jbe
mov
sbb
outs
jno
inc
not
je
in
fwait
or
sbb
sbb
cwde
adc
or
jo
mov
mov
popf
push
jl
cmps
mov
popf
out
pop
mov
mov
cmps
outs
test
xchg
movs
les
push
je
cmp
mov
jmp
repnz
push
jne
adc
iret
es
pop
mov
les
push
mov
mov
mov
mov
inc
sbb
mov
cdq
adc
and
nop
jp
stos
push
or
add
inc
ins
shl
dec
inc
and
and
sbb
jecxz
push
clc
and
pop
mov
inc
inc
mov
mov
xchg
and
jnp
inc
cmp
cdq
sub
pop
ins
arpl
mov
xchg
mov
cmp
pop
and
test
dec
adc
or
mov
adc
stos
stos
xor
sbb
lds
mov
xchg
cli
dec
pop
(bad)
mov
mov
stos
mov
xchg
test
pop
call
stc
mov
les
xchg
add
inc
clc
and
cmc
in
dec
mov
jp
mov
cld
ds
mov
or
leave
daa
scas
hlt
stos
jge
fsub
push
add
iret
push
es
scas
add
leave
fs
mov
inc
push
or
ficomp
int
push
xchg
mov
sub
shl
jmp
push
mov
dec
inc
adc
add
jo
shl
mov
and
push
test
in
jmp
in
clc
jecxz
sub
dec
fstp
icebp
repnz
pusha
ds
xchg
cdq
scas
push
ins
mov
movs
sub
mov
mov
and
in
pop
aad
retf
stos
and
outs
inc
xchg
inc
push
je
mov
add
dec
sbb
add
std
(bad)
dec
pop
mov
in
loopne
fs
call
aas
push
js
xchg
lock
mov
movs
sub
sbb
(bad)
lods
(bad)
div
jns
mov
push
jle
outs
inc
jne
stos
cs
mov
push
nop
jmp
mov
leave
and
mov
cwde
rcr
cmovbe
dec
jae
add
nop
cmps
or
dec
pop
push
mov
js
push
in
mov
dec
inc
xor
fbstp
dec
fcomp
jmp
xor
repnz
test
fmul
in
mov
mov
add
clc
(bad)
mov
mov
mov
jmp
test
fcom
dec
mov
fld
das
jg
pop
mov
repnz
fadd
xchg
xor
and
pop
aas
sub
jb
sti
mov
retf
pop
neg
popa
aam
mov
(bad)
jne
dec
inc
push
mov
cmp
lahf
dec
cmps
mov
lahf
ins
out
add
stc
sub
fs
sub
test
shr
(bad)
sbb
mov
mov
xchg
xchg
xlat
and
xchg
das
cmc
jb
pop
and
aaa
mov
mov
nop
xchg
shr
xor
in
gs
xlat
fld
int3
jecxz
cmp
mov
inc
out
jo
sbb
inc
inc
xor
sub
add
ds
gs
mov
or
jle
leave
fst
add
pushf
add
je
pop
test
out
pop
sub
ror
fdiv
mov
aad
enter
inc
inc
fld
popa
mov
lods
out
cmp
sub
lods
mov
jo
jle
cdq
add
out
xchg
adc
loope
jns
fcom
loop
repnz
out
shl
sti
sahf
in
retf
aad
repz
enter
cwde
pop
dec
icebp
pop
and
iret
addr16
in
adc
inc
sub
dec
mov
movs
cmp
int
jo
mov
jmp
mov
rcl
lds
cmp
push
and
mov
lods
and
imul
loope
jmp
dec
push
jmp
shl
test
mov
test
sub
sbb
xchg
test
add
dec
js
daa
jae
or
sub
retf
mov
test
jno
and
sbb
mov
mov
mov
leave
cli
push
pop
cmps
pop
loope
sub
inc
pop
aad
hlt
imul
cwde
out
xor
and
jl
add
mov
mov
lods
fisttp
cmp
(bad)
push
retf
and
sbb
sbb
ss
cdq
xchg
sbb
cmp
xor
jmp
imul
rcr
xchg
shr
(bad)
dec
in
mov
fs
push
nop
dec
lods
xchg
cwde
adc
push
or
sub
in
test
mov
stos
in
fstp
imul
xchg
xor
or
push
push
dec
int
push
push
(bad)
mov
dec
enter
sahf
mov
pop
cmps
outs
inc
jl
jg
push
push
movs
mov
mov
mov
or
mov
movs
jb
add
aam
cdq
push
jmp
fld
daa
hlt
aad
push
out
or
popf
mov
jmp
jns
cmp
cli
mov
test
add
mov
(bad)
test
sbb
push
ficomp
sti
cli
dec
mov
(bad)
or
aam
jne
cld
jmp
jge
mov
xchg
popa
cwde
mov
and
icebp
scas
test
mov
clc
hlt
sub
into
jnp
aas
adc
cwde
push
cmps
out
xor
lahf
or
push
adc
jnp
sbb
add
imul
test
cmps
push
f2xm1
adc
push
fnstsw
dec
cmp
xchg
pusha
scas
push
jo
mov
xor
inc
in
jne
mov
test
add
push
mov
mov
retf
sti
dec
and
sub
inc
popa
loopne
cmp
fiadd
adc
pop
xchg
das
xor
hlt
adc
(bad)
sbb
out
clc
gs
movups
mov
popf
pop
inc
push
pushf
adc
xor
sub
push
es
jge
add
(bad)
(bad)
das
arpl
xchg
loop
int
fild
dec
jmp
mov
dec
call
inc
mov
rcr
jmp
xor
lds
mov
retf
jb
or
inc
xchg
shl
fdiv
pop
mov
or
fidiv
test
jmp
lock
jmp
jns
pop
shr
pusha
(bad)
cmp
jl
es
movs
add
pop
call
popa
sbb
test
inc
int
hlt
test
test
dec
sti
push
enter
lock
jmp
inc
sbb
sub
out
pop
sbb
add
pusha
xchg
loop
sbb
pop
and
sbb
adc
shl
mov
jl
in
hlt
iret
adc
or
jmp
jecxz
bound
mov
fdivr
inc
adc
push
(bad)
cli
and
jmp
add
xor
in
inc
stos
mov
or
jl
cmp
into
fst
inc
test
mov
xchg
add
push
loopne
call
jne
or
out
push
mov
stc
pop
ss
mov
push
sahf
xor
retf
(bad)
aad
rcr
div
mov
(bad)
mov
in
data16
adc
adc
fs
test
scas
mov
cs
nop
mov
fsub
sbb
pop
ror
and
cs
dec
adc
ret
(bad)
mov
adc
push
cwde
fcmovb
jle
pop
cmp
inc
cdq
mov
aaa
pushf
clc
out
loope
adc
popf
(bad)
xchg
xchg
fwait
or
add
mov
pop
jle
lock
push
int
pop
push
das
sub
jmp
test
adc
cmc
mov
(bad)
clc
and
push
mov
mov
out
and
int
push
js
or
repnz
std
xor
jecxz
xchg
ret
fs
inc
mov
sbb
sub
jl
inc
add
dec
shl
imul
mov
cmc
sub
sbb
leave
pusha
mov
dec
mov
ss
(bad)
pop
ret
or
or
cmp
pop
dec
out
cmp
shl
cs
xchg
inc
loope
jecxz
xchg
push
mov
sbb
cmp
mov
sub
ss
out
aam
lock
loope
mov
cmps
cmc
fwait
mov
imul
icebp
cmp
jae
das
imul
mov
out
stos
out
test
adc
inc
mov
xor
mov
ror
sub
cwde
mov
mov
mov
daa
js
stos
fist
test
pop
mov
add
cmp
shl
or
inc
push
sub
push
ret
mov
cmps
rcl
mov
adc
cwde
jne
jp
adc
retf
dec
pop
inc
or
xchg
inc
(bad)
iret
adc
rol
stos
test
add
xchg
lock
repz
inc
(bad)
xchg
outs
dec
sar
enter
js
hlt
pusha
out
jle
pop
sub
pushf
std
dec
leave
lods
hlt
cmps
xchg
xchg
aad
jp
adc
sbb
sbb
cwde
repz
cwde
mov
jae
and
add
mov
test
fst
nop
push
pop
cmp
inc
adc
jns
std
dec
cmp
pop
add
and
ret
pop
sbb
mov
mov
cli
cmp
imul
mov
mov
bound
jp
cs
pop
mov
inc
sbb
test
cld
mov
jecxz
add
push
dec
sahf
shl
push
movs
fs
mov
pop
mov
sbb
add
inc
push
mov
pop
dec
(bad)
push
(bad)
fstp
lea
leave
je
mov
scas
jb
(bad)
pop
jb
mov
or
in
icebp
mov
jecxz
call
hlt
sub
cmp
lea
push
push
xchg
(bad)
jmp
jnp
enter
sub
sbb
bound
les
dec
sbb
lea
cmp
sub
xor
add
mov
inc
cld
add
xlat
inc
(bad)
inc
fdiv
xor
mov
(bad)
cmp
call
lahf
push
inc
(bad)
fcomi
sahf
icebp
imul
xor
cmp
push
hlt
lods
in
cwde
jmp
add
ja
cmp
xlat
sub
xchg
dec
cwde
adc
add
cli
or
pop
mov
shr
cmc
pop
xor
jnp
xor
sbb
sbb
or
fucomip
out
sbb
jnp
stos
jns
jae
(bad)
push
into
mov
mov
adc
int
fwait
xchg
stos
xchg
jecxz
xlat
addr16
enter
fdiv
xlat
or
icebp
mov
or
push
out
mov
(bad)
xor
daa
out
(bad)
je
ss
mov
les
js
xchg
mov
cmp
cdq
cmc
jae
std
or
jmp
cmp
lods
cmc
cmp
fisub
xchg
mov
push
sub
lea
out
sti
ja
jo
cmp
repz
sbb
movs
push
jge
fwait
pop
imul
sahf
or
or
mov
push
aam
push
xchg
inc
mov
xor
mov
call
inc
and
push
popa
xor
lds
das
xor
mov
popa
add
or
pop
xor
mov
push
in
repz
xor
rol
fsub
add
and
push
stc
xor
call
in
xor
dec
mov
mov
xchg
push
sbb
outs
inc
addr16
push
add
dec
inc
xor
mov
pusha
ins
fild
dec
jle
out
sbb
(bad)
repnz
pushf
dec
repnz
popf
aaa
inc
stos
test
mov
in
call
push
pop
xor
adc
sub
iret
xor
sub
sbb
movs
push
and
mov
gs
mov
hlt
(bad)
aam
fiadd
or
inc
pop
(bad)
and
sub
sub
xlat
or
mov
fld
pop
pop
jecxz
movs
popa
mov
sub
xchg
pop
lds
or
sub
pop
adc
hlt
arpl
stos
(bad)
scas
ret
idiv
lods
pop
mov
icebp
pop
imul
cdq
enter
in
hlt
pop
pop
add
sub
push
ss
clc
(bad)
pop
idiv
fs
arpl
xchg
cmp
pop
ror
push
inc
pop
leave
push
sbb
(bad)
(bad)
rol
sub
clc
aad
xchg
outs
inc
(bad)
pop
and
xchg
or
out
test
fcmove
mov
mov
adc
mov
push
lods
push
xchg
cmp
fnstenv
jl
jae
mov
int3
mov
xor
and
das
adc
xchg
dec
cmps
lock
rcr
ss
and
push
cwde
test
push
mov
inc
sbb
mov
pop
jne
mov
xchg
mov
hlt
mov
jge
out
xchg
mov
mov
cmp
out
jmp
jp
jae
mov
mov
outs
jg
cmp
pop
dec
sti
pop
(bad)
fst
scas
mov
mov
maxps
int
pop
fstp
daa
push
jg
and
scas
and
add
adc
iret
je
jne
data16
(bad)
sbb
mov
and
inc
dec
mov
test
inc
mov
cmp
xchg
divps
stos
aam
and
adc
mov
jne
rcl
sahf
inc
daa
fwait
rcr
add
sbb
shl
push
mov
dec
ja
retf
jge
add
xchg
mov
inc
sbb
cwde
and
cmp
dec
mov
nop
pop
add
cmps
scas
aas
adc
pushf
dec
inc
dec
add
jle
(bad)
pop
fwait
pop
push
adc
jmp
ins
push
mov
mov
mov
cmps
aad
cmp
mov
js
or
push
sub
sub
push
push
outs
and
cmp
out
stc
mov
adc
loop
bnd
inc
loope
ss
mov
xchg
or
xor
iret
xchg
sub
sub
enter
arpl
inc
mov
cmp
cmp
inc
inc
nop
inc
and
inc
test
or
(bad)
xor
add
mov
mov
or
adc
or
popf
jae
adc
retf
out
cmc
enter
pushf
ins
pop
mov
adc
push
push
and
(bad)
aaa
mov
ds
adc
out
(bad)
iret
dec
repz
push
aad
sahf
sbb
push
jle
ror
pusha
mov
mov
ins
imul
cmp
pop
clc
jb
jb
ins
lock
adc
fdivrp
sub
sbb
jl
add
push
cmp
in
push
sbb
cmps
pop
add
adc
test
sub
mov
scas
pop
imul
mov
lahf
and
out
cmp
inc
dec
loopne
addr16
test
lods
jg
outs
in
imul
cwde
and
data16
jne
mov
sbb
sahf
xchg
mov
retf
loope
push
daa
movs
in
loope
and
je
pop
sbb
adc
add
dec
fnsave
gs
jae
pop
cwde
or
sub
out
(bad)
aam
inc
int3
or
repz
out
sahf
fs
jmp
lock
test
sub
xor
push
jae
sti
and
jp
xchg
xchg
mov
pop
and
pop
inc
push
stos
mov
int
or
dec
inc
(bad)
rcr
jae
mov
xchg
pop
out
sbb
ds
push
ins
fwait
add
(bad)
into
cmp
and
setne
ror
(bad)
xchg
mov
jbe
not
jg
push
ds
xlat
sub
scas
fld
jle
mov
call
xchg
cmp
dec
jecxz
pop
or
or
into
mul
int
jae
and
cmp
or
das
and
xor
or
pushf
mov
adc
cmp
xor
push
pop
rcr
dec
add
and
in
mov
add
dec
pop
ds
xchg
sbb
inc
xor
mov
mul
and
push
test
pop
inc
(bad)
popf
mov
scas
push
(bad)
jmp
fisttp
lahf
jb
inc
js
mov
imul
mov
dec
mov
std
adc
ret
call
pusha
cmp
and
jb
xchg
cmps
je
pop
xor
xor
ds
rcl
int3
adc
loope
div
xchg
movlps
cdq
std
jmp
xor
arpl
jmp
div
outs
or
imul
add
cld
mov
(bad)
adc
cmp
sar
mov
mov
pop
cs
push
fsubr
scas
cmp
adc
cmc
aam
jo
jbe
jno
inc
push
lds
lea
jno
movs
setbe
mov
bound
push
movs
add
inc
jae
dec
(bad)
popf
push
sbb
outs
xor
sbb
jmp
jp
repnz
pop
sbb
mov
xor
sub
cwde
movs
xor
cmp
xchg
cld
adc
test
inc
enter
out
jo
jmp
xchg
jmp
aaa
lea
rcl
jne
xor
(bad)
movs
or
mov
in
cdq
je
lds
mov
or
pushf
stos
mov
or
cmps
fs
mov
inc
mov
popf
and
fstp
push
xchg
cmp
fmul
add
push
pop
adc
mov
mov
mov
test
xchg
pop
cmp
dec
aad
push
mov
aas
xchg
cld
dec
push
addr16
mov
es
cs
dec
call
test
mov
mov
push
sbb
mov
inc
je
mov
and
push
or
mov
cld
jo
sar
pop
hlt
jo
add
rcl
outs
xlat
in
add
cli
pop
lahf
jmp
(bad)
rcr
sti
add
cmp
mov
aaa
pop
mov
arpl
mov
jo
xchg
(bad)
jle
lds
cli
popa
xchg
out
fucompp
push
fcmovu
(bad)
jmp
and
mov
(bad)
xchg
sub
out
retf
cmps
fimul
and
jnp
xchg
aas
jno
leave
icebp
sub
mov
aad
mov
dec
push
cmc
mov
xlat
(bad)
mov
cli
dec
dec
dec
pop
lock
push
imul
push
cmp
call
stos
ins
or
jnp
push
inc
sub
stc
mov
mov
pushf
push
leave
out
jmp
jnp
push
ds
pusha
loopne
pop
in
rcl
sbb
into
outs
inc
cmc
and
cmps
mov
stos
bsr
or
sub
jno
cmc
inc
jnp
cmps
pop
in
cmp
lock
call
dec
fwait
scas
ss
mov
cmp
enter
cmp
or
push
pusha
cdq
out
(bad)
sub
ret
shl
(bad)
ins
mov
into
shl
and
and
push
jae
mov
(bad)
mov
or
jp
and
inc
mov
into
jecxz
mov
mov
(bad)
pop
jmp
mul
dec
xor
inc
cmps
or
add
mov
repz
test
fwait
cmps
enter
dec
scas
and
addr16
push
mov
sub
in
aam
popa
pop
cmps
popa
push
xchg
or
retf
pop
mov
shl
neg
pop
lahf
or
hlt
dec
sub
in
out
jecxz
inc
jns
pop
pop
mov
pop
js
pop
pop
add
mov
dec
xchg
xor
jb
mov
adc
inc
mov
loope
xchg
dec
ret
jne
push
sbb
dec
imul
xor
gs
mov
popf
cmps
lods
pop
out
in
fsub
push
xchg
mov
sbb
(bad)
std
fisubr
adc
sub
mov
aad
jecxz
(bad)
hlt
inc
add
leave
add
mov
(bad)
mov
icebp
int
movs
jge
(bad)
popa
adc
fstp
cs
nop
and
sub
push
push
xchg
push
cdq
adc
movs
adc
jb
movs
gs
mov
pushf
jb
add
je
rcr
xchg
cmp
sbb
or
dec
cmp
or
pop
cmp
pop
lahf
push
int
pop
mov
bnd
push
add
mov
inc
popf
scas
scas
adc
mov
adc
clc
loope
shl
adc
inc
adc
or
cmp
(bad)
rcl
cs
aad
or
add
and
(bad)
mov
xlat
fs
pop
retf
iret
jno
setno
data16
xchg
iret
mov
fisub
mov
adc
jl
fidiv
sub
jp
ret
movs
iret
fucomp
adc
or
mov
pop
inc
into
pushf
rol
aad
xor
fmulp
push
mov
fld
push
jnp
ds
in
int3
inc
add
shl
push
or
aaa
call
adc
add
js
add
out
js
push
mov
add
ret
jae
dec
or
push
mov
sbb
jl
cli
push
cwde
inc
lea
push
ja
mov
add
jo
call
fs
clc
lods
xchg
nop
xchg
fldcw
jmp
lahf
clc
mov
nop
mov
cmp
pop
mov
(bad)
popa
lea
imul
xchg
call
jecxz
jo
lods
popf
call
mov
or
inc
out
inc
ret
and
fist
cli
mov
jb
adc
es
aad
xor
xor
add
mov
loopne
(bad)
in
mov
pop
fwait
dec
je
(bad)
imul
es
mov
inc
jns
popa
mov
jmp
push
sub
rol
(bad)
add
daa
in
and
sub
and
fcmovbe
jbe
cmc
xlat
adc
jo
(bad)
fild
cs
retf
mov
sbb
pushf
jg
out
mov
mov
add
push
xor
sub
add
aas
data16
xor
adc
sbb
mov
dec
cmp
ret
mov
int
clc
ret
pop
pop
je
mov
mov
adc
adc
or
xchg
cmps
push
dec
out
pop
jecxz
ror
pop
fwait
sbb
out
outs
ins
clc
fild
mov
push
aad
inc
popf
call
or
stc
mov
xchg
xlat
imul
ds
and
sbb
test
not
mov
push
xchg
lds
into
nop
pop
push
ins
shl
dec
enterw
xchg
outs
inc
xlat
push
cmp
and
ja
mov
mov
out
inc
mov
div
movs
stos
or
rcr
dec
sti
cmp
ins
add
popa
movs
mov
(bad)
mov
cmc
out
cmps
dec
je
fild
test
mov
cld
pop
or
nop
xchg
add
xor
cmp
hlt
pop
in
aaa
xchg
mov
ret
mov
neg
push
and
pop
jl
and
sbb
data16
(bad)
or
lods
jle
lods
cwde
add
ret
pop
dec
mov
cmp
jne
xor
stos
cmp
pop
add
xchg
popf
test
js
sbb
add
push
ins
lahf
mov
popf
sub
fmul
mov
fnstenv
xchg
xchg
sbb
cmp
xor
fcmovbe
cmp
jl
fldcw
cs
in
leave
mov
xor
mov
mov
mov
mov
ja
inc
test
and
xchg
mov
retf
ror
xor
dec
pop
xor
loop
sub
aaa
cld
(bad)
cmps
pushf
(bad)
in
mov
mov
(bad)
push
js
xchg
cmp
fimul
jp
dec
lods
fcom
mov
adc
xlat
cmp
xlat
push
inc
sub
xor
or
int3
cmp
fcomp
or
xchg
mov
xchg
(bad)
shr
call
aaa
ja
aad
repnz
adc
mov
sub
rdtsc
mov
adc
mov
xor
lds
pop
ror
lea
mov
lds
in
mov
xchg
pusha
fiadd
shl
mov
ret
out
lahf
sbb
adc
jns
ja
clc
xchg
mov
out
loopne
test
xchg
cmp
xchg
stos
or
in
push
mov
fiadd
adc
out
sbb
pop
into
push
push
sbb
and
shl
sar
mov
daa
xchg
sub
out
inc
mov
cmp
mov
cmc
leave
aaa
sahf
or
iret
pushf
sbb
sub
dec
ficom
cmp
mov
sub
cmc
test
xchg
mov
in
cwde
add
arpl
and
outs
add
lods
mov
loope
fwait
popa
into
adc
test
cdq
jge
jle
lock
push
dec
test
xor
or
cmps
retf
dec
test
test
ds
mov
mov
add
cmp
mov
dec
pop
mov
shr
cmps
sub
sbb
lods
pop
dec
call
stos
fist
cld
sahf
sub
push
in
rcr
das
xor
sub
es
jae
in
call
xor
xchg
sbb
cmp
pop
aas
fisubr
ins
retf
aas
mov
sbb
sub
stos
jb
lahf
xor
xchg
xchg
pop
movs
outs
or
fiadd
dec
and
dec
js
test
dec
in
adc
push
add
stc
sbb
pop
out
clc
jg
mov
fs
test
or
loop
xchg
pop
xlat
loopne
or
mov
mov
inc
test
or
and
inc
pop
mov
xor
xor
jbe
adc
scas
popa
(bad)
dec
imul
sub
in
jge
sahf
add
idiv
sbb
or
lds
cmc
sub
cmp
fild
jns
sub
addr16
pop
movs
leave
or
daa
sub
daa
sbb
jo
sub
mov
(bad)
lock
mov
mov
ins
outs
aad
mov
jno
scas
in
loop
xor
sub
in
push
pop
sbb
cmp
cmp
movs
jb
imul
push
adc
push
xchg
cmp
and
lock
rcl
push
xchg
mov
fisttp
dec
daa
out
push
push
jae
adc
test
xchg
pop
ds
pop
xchg
test
jb
pop
cmc
xor
jp
mov
in
dec
stos
aaa
call
gs
lea
cmp
dec
leave
test
inc
adc
pop
mov
(bad)
xchg
jns
or
cmp
stos
lock
cmp
cmp
pop
lods
adc
xchg
shl
ins
mov
push
push
jg
add
pop
arpl
xchg
or
jge
das
and
ja
dec
pop
dec
clc
sub
jae
scas
sbb
jl
cmp
lods
add
repnz
call
fimul
or
inc
cmp
jae
nop
scas
daa
xor
sub
repnz
scas
popa
loope
pop
xor
(bad)
adc
jmp
call
in
movs
aaa
xchg
dec
inc
cmc
or
sbb
stos
into
(bad)
xchg
jmp
jmp
inc
retf
inc
mov
sti
test
sahf
cmp
dec
(bad)
repz
or
outs
jbe
ins
mov
(bad)
fdiv
add
shr
es
and
js
sbb
mov
das
dec
test
inc
ret
lds
xchg
jns
xor
sbb
lahf
in
sub
push
aaa
push
sub
cli
int
mov
inc
int
adc
jl
pop
pop
and
mov
push
pop
xchg
es
(bad)
enter
cli
mov
cmp
out
dec
push
mov
adc
mov
cmp
mov
add
cmc
scas
iret
clc
pop
jmp
jne
es
xchg
cmc
out
call
jno
scas
inc
dec
retf
(bad)
cmp
adc
and
and
fisub
lock
imul
jb
or
outs
or
hlt
sbb
sti
js
iret
push
scas
cmp
mov
fstp
cmp
fs
fisubr
mov
xchg
cmp
sbb
ins
or
das
xchg
out
mov
test
xor
jl
repnz
ret
adc
inc
jge
mov
nop
mov
(bad)
mov
xchg
call
jmp
daa
sbb
xor
sti
neg
daa
js
cmps
xlat
mov
jecxz
jno
pop
dec
xchg
retf
xchg
loop
sub
push
push
in
test
mov
add
ins
movs
out
cmp
mov
out
push
and
xor
mov
xor
ins
push
cmp
(bad)
popa
aaa
push
in
lods
sbb
data16
jno
push
outs
xchg
pop
retf
xchg
int3
inc
inc
ja
mov
adc
aaa
sbb
xor
int
xor
xor
sbb
and
dec
shr
outs
and
in
cmp
cli
es
or
jge
cli
jo
mov
cwde
scas
push
cmp
imul
test
push
sti
sub
cmp
cld
(bad)
inc
push
pop
jae
inc
mov
xor
sahf
cdq
xchg
jecxz
fisubr
inc
jle
mov
mov
xchg
sub
jmp
iret
or
jmp
and
lea
add
jg
repz
push
jl
xchg
sbb
and
add
call
jle
outs
cmp
scas
sbb
jmp
shl
mov
jmp
sar
sub
push
push
inc
mov
js
pop
xchg
(bad)
retf
inc
xor
jl
cmp
jmp
push
pop
add
inc
imul
call
lock
pop
inc
lock
leave
bnd
sub
adc
push
inc
sub
xlat
push
mov
sbb
inc
mov
fcomp
pushf
rcl
push
pop
mov
cld
popf
jns
add
dec
std
je
jmp
std
add
push
daa
in
and
pop
mov
into
nop
mov
xchg
imul
shr
scas
mov
lods
xor
cmps
mov
mov
inc
xor
fidiv
jne
popa
cld
popa
xchg
rol
sub
stos
lahf
call
jl
dec
out
fild
push
and
mov
(bad)
call
sbb
jno
adc
fnsave
loopne
mov
rol
and
inc
jo
mov
dec
shl
add
daa
mov
cdq
push
mov
in
xchg
dec
add
ret
jno
aad
outs
cmc
ret
and
outs
mov
mov
(bad)
(bad)
jmp
out
xchg
xor
xchg
rcr
sub
lea
cli
imul
sbb
adc
sub
mov
jb
aam
push
sub
mov
and
ret
pop
aam
lahf
mov
and
or
xor
aam
inc
sbb
push
cmp
inc
mov
pop
xor
jl
ror
pop
xor
push
retfw
add
test
sub
inc
jbe
mov
rcr
inc
pop
movs
(bad)
mov
out
jp
sbb
cmp
mov
les
aaa
and
pushf
xchg
stc
jmp
shl
jmp
push
mov
mov
jo
leave
pop
movs
lahf
xchg
xor
xchg
mov
aas
lods
(bad)
in
(bad)
cmp
ret
popf
repz
push
repnz
xchg
mov
bound
or
push
add
mov
push
jl
xor
lods
pop
cmp
sub
out
outs
in
jb
das
jbe
inc
adc
jge
daa
loop
icebp
bound
je
ror
cwde
jae
mov
mov
imul
mov
cmp
add
les
mov
jp
or
test
repnz
lods
push
dec
ret
movs
mov
clc
lods
int
sbb
fwait
mov
jle
sub
cld
or
lea
push
xor
jl
mov
test
mov
mov
add
test
mov
sti
inc
retf
inc
xchg
mov
pusha
mov
jg
test
(bad)
inc
dec
mov
jmp
jmp
hlt
mov
sbb
inc
clc
inc
fnsave
add
inc
movs
push
xchg
call
dec
fidivr
push
iret
aas
mov
xor
dec
sub
add
fwait
repz
gs
xchg
add
mov
ret
mov
jl
sbb
ss
out
dec
std
dec
retf
mov
push
popa
(bad)
inc
or
mov
loope
test
addr16
adc
icebp
jb
repnz
(bad)
inc
leave
adc
xchg
test
jo
idiv
test
push
lea
enter
pop
ins
xchg
lock
dec
fisub
jmp
push
sti
lds
and
cmc
or
repz
les
adc
jo
and
fdivr
jns
mov
in
or
xchg
inc
jae
mov
xlat
sti
xchg
ds
pop
cmps
mov
sub
jg
mov
scas
xor
call
(bad)
lods
sub
jp
(bad)
iret
call
pop
cld
jo
sbb
xor
push
cmp
dec
jge
mov
call
inc
cmps
add
les
sub
fucomip
push
mov
pop
pop
pusha
out
out
jmp
es
lahf
popa
xor
and
sar
push
adc
aad
test
scas
pushf
in
nop
repz
adc
mov
dec
ret
data16
push
(bad)
ins
mov
popf
fwait
xchg
ins
mov
fwait
mov
jecxz
pop
cmps
jno
inc
push
std
xor
mov
aaa
sub
jno
sbb
inc
cld
mov
pop
sub
mov
adc
bound
mov
push
nop
int
enter
outs
stc
(bad)
pop
daa
call
pusha
inc
mov
adc
push
shl
in
rol
sbb
mov
mov
jecxz
jl
xchg
nop
cld
fst
mov
lds
mov
sbb
jmp
or
mov
or
lods
inc
call
and
mov
cmps
add
jmp
push
xor
push
rcr
mov
(bad)
sti
idiv
cmp
add
jmp
lea
dec
adc
sbb
test
mov
push
jle
ficom
arpl
test
mov
repz
imul
jge
aas
mov
push
adc
in
xor
cmp
add
mov
push
sub
adc
aas
sub
pushw
jge
xchg
push
pop
sbb
push
xchg
ja
fidivr
xchg
push
shl
cmp
mov
retf
fdivr
add
fidivr
(bad)
lock
aaa
movs
stos
dec
aam
jb
scas
jae
mov
js
mov
aad
dec
out
(bad)
jge
xchg
std
cmp
jmp
(bad)
hlt
popf
push
pop
and
cmc
std
adc
mov
in
repnz
(bad)
mov
enter
movs
das
xchg
xchg
pop
xchg
icebp
stos
jne
push
div
(bad)
mov
fisttp
add
ss
sub
push
in
bnd
xor
xchg
icebp
sub
les
sahf
and
loope
jle
or
stc
fidivr
movs
ror
int
sbb
jns
(bad)
int3
mov
sahf
mov
add
inc
jge
xor
les
cld
ins
mov
test
mov
jne
mov
mov
(bad)
sub
or
or
mov
enter
sar
pop
setae
cmp
je
cdq
pop
mov
cmp
add
stc
shl
into
std
movs
mov
add
jp
jo
sub
movs
mov
pop
loopne
gs
pop
mov
jo
std
push
shr
cld
sub
(bad)
out
mov
inc
pop
inc
lahf
sti
xchg
push
fwait
or
add
xlat
cdq
push
fdiv
inc
pop
bound
out
or
jmp
and
les
jb
dec
push
jno
(bad)
ficom
in
dec
pop
push
ret
xchg
(bad)
pop
xchg
les
bound
and
and
popf
ins
pop
xchg
cli
cld
fmul
add
xor
xor
sahf
adc
in
(bad)
movs
and
rcl
xchg
and
int
loope
mov
adc
test
leave
fidiv
sub
mov
lods
and
ds
lea
mov
stc
sub
mov
or
mov
jbe
sub
leave
inc
xor
fcom
pop
(bad)
outs
repnz
std
pop
imul
ds
mov
and
mov
fistp
mov
jecxz
pop
mov
push
lahf
xchg
retf
scas
sbb
adc
push
push
adc
sbb
add
jb
mov
dec
push
sar
jns
push
dec
scas
clc
movs
fs
pop
lahf
mov
cmp
pop
mov
xchg
adc
fcom
adc
fisubr
(bad)
and
push
mov
sahf
ja
addr16
jg
int3
dec
jl
lds
ja
xchg
and
dec
das
fs
inc
xor
pop
adc
xor
cs
stos
repnz
pop
cld
dec
aad
push
gs
and
and
sbb
mov
xchg
sub
push
dec
sub
(bad)
mov
retf
sbb
fiadd
fild
test
cmp
adc
or
test
jns
pop
dec
sub
jns
mov
sbb
retf
cmp
loopne
xchg
jae
push
int
inc
inc
sub
xor
out
mov
mov
std
xchg
stc
sahf
not
arpl
retf
push
push
fld
xchg
push
dec
pop
das
sbb
loop
in
mov
or
lea
mov
stos
into
and
mov
and
jnp
inc
and
loopne
xchg
nop
pop
xor
pop
cmp
cmps
outs
and
fdiv
and
and
out
ret
int
mov
clc
retf
loopne
jno
jl
test
push
adc
fwait
out
jo
(bad)
fbld
fisub
pop
ins
scas
cmp
mov
jp
dec
dec
loop
cmp
loope
dec
inc
or
loopne
cmps
mov
xchg
inc
jb
cld
or
push
out
aam
jge
dec
push
jb
add
xor
jnp
pop
xchg
sub
push
retf
pusha
push
dec
lds
push
inc
in
and
leave
inc
mov
pusha
retf
push
adc
xor
call
xchg
mov
stos
jg
gs
jp
retf
push
repz
or
nop
imul
mov
push
mov
mov
sbb
repnz
or
ret
add
in
in
ins
adc
pop
sub
inc
jge
push
retf
pusha
out
add
jbe
add
fbstp
inc
jge
cmps
out
jge
fidiv
dec
fdiv
xchg
push
(bad)
sbb
scas
jbe
pop
or
ds
into
sbb
(bad)
fsub
dec
repz
ds
add
dec
adc
sbb
mov
scas
xor
std
test
mov
fnsave
pop
jbe
and
jecxz
add
addr16
pop
test
push
mov
stc
xlat
push
push
add
adc
rcl
mov
cld
mov
mov
or
dec
add
repz
and
sbb
jp
scas
sub
out
jns
loop
hlt
(bad)
dec
mov
xchg
es
xchg
scas
sbb
sahf
adc
xchg
xor
jle
into
jnp
leave
neg
nop
out
mov
in
mov
or
std
xchg
inc
jle
pop
test
retf
mov
jmp
xorps
mov
inc
pusha
ret
xchg
jbe
xchg
jge
das
sahf
mov
pop
mov
adc
cs
fstp
inc
cmc
js
jae
into
lea
add
ror
mov
mov
jb
xor
xor
(bad)
cwde
add
sub
rol
test
cmp
or
lahf
inc
aas
push
jmp
push
retf
pop
mov
add
push
mov
push
push
pop
int
inc
or
adc
jl
outs
call
cdq
in
push
xchg
lods
push
enter
mov
inc
inc
add
push
mov
in
jmp
imul
dec
inc
sbb
ret
sbb
or
and
fisttp
repnz
daa
add
mov
dec
clc
loopne
dec
mov
push
lahf
add
stc
fistp
shl
ins
imul
dec
push
add
mov
inc
adc
je
loope
and
outs
dec
mov
pusha
(bad)
adc
cmps
jecxz
xchg
sbb
repnz
cmp
je
mov
cs
cmp
test
add
pop
cld
rol
adc
adc
mov
push
push
cmp
gs
in
jmp
(bad)
mov
sbb
cld
inc
push
cmp
inc
dec
enter
hlt
outs
cmps
add
cmc
(bad)
lock
jmp
jnp
and
pop
and
fiadd
fs
fistp
cmps
arpl
jnp
or
xor
lods
std
adc
in
mov
cmp
pop
adc
xchg
out
mov
pushw
and
sub
outs
add
mov
enter
ret
push
jae
imul
dec
enter
loop
mov
mov
dec
(bad)
arpl
or
arpl
cs
pop
iret
outs
dec
push
dec
fisubr
dec
sub
or
and
fcom
and
dec
mov
push
retf
iret
jg
mov
push
push
dec
adc
inc
inc
add
ins
xor
stc
jbe
pop
mul
test
or
dec
or
clc
sub
mov
sbb
xchg
push
xor
stos
push
inc
xchg
push
retf
(bad)
dec
push
mov
or
push
push
inc
mul
cmc
les
sbb
scas
mov
xchg
into
mov
jl
and
inc
enter
and
(bad)
sbb
jo
into
(bad)
dec
push
push
pushf
pop
xor
and
mov
les
je
lahf
fyl2xp1
or
mov
cmp
mov
cmp
scas
sbb
jbe
inc
in
jge
call
lea
retf
popa
repnz
(bad)
jnp
push
lods
cli
pop
jbe
push
and
hlt
cld
pop
sub
cmp
int3
mov
je
adc
or
pop
nop
mov
xor
jae
xchg
outs
(bad)
jmp
and
imul
mov
fdivr
adc
ret
mov
mov
adc
mov
xor
fild
(bad)
dec
xchg
push
movs
dec
adc
je
stos
std
pop
out
xor
into
cld
out
mov
repz
inc
sbb
ds
cli
std
inc
xor
dec
hlt
sub
mov
mov
or
xor
xchg
add
aad
scas
mov
add
add
loopne
sub
sub
jmp
sub
inc
jb
out
adc
mov
retf
jmp
daa
sbb
jle
ret
in
cmp
adc
mov
pop
add
das
pop
xor
bound
mov
fnstcw
inc
test
sub
add
test
fdiv
or
adc
dec
stos
cmps
xchg
in
retf
(bad)
mov
pop
das
cmp
xchg
ss
aam
movs
les
mov
push
add
push
mov
sbb
cmps
pusha
retf
jmp
mov
pop
lea
cwde
cs
xchg
popf
jp
or
daa
xor
aad
scas
leave
imul
add
in
ds
jns
ins
ja
cs
je
mov
pushf
inc
hlt
pop
xchg
(bad)
xor
mov
fsub
inc
mov
inc
adc
sub
mov
fild
mov
test
enter
push
aas
inc
movs
mov
or
ins
pop
loop
jns
sbb
arpl
shr
repz
push
add
jle
inc
jl
or
lahf
xchg
xchg
repnz
clc
mul
push
add
xchg
jns
xchg
lds
jge
jmp
push
xor
loopne
push
fcomp
cmp
jle
retf
outs
mov
loop
mov
out
push
pop
xchg
mov
cmp
mov
cmc
daa
xor
aaa
add
cmps
mov
sub
std
or
and
(bad)
ds
mov
dec
(bad)
aas
xor
push
inc
dec
fs
mov
(bad)
(bad)
xor
movs
(bad)
imul
pop
ds
dec
pop
pop
lahf
cmps
push
mov
sbb
pop
jmp
sub
sub
out
or
loopne
and
add
add
sbb
jle
pop
xor
inc
aam
lea
aas
sar
xchg
movs
pop
xor
es
mov
cmp
cmp
or
rcr
movs
add
mov
es
loop
xchg
inc
pop
push
dec
call
aaa
pusha
imul
loope
inc
daa
push
sbb
(bad)
mov
jns
cmc
les
clc
out
mov
sub
hlt
dec
ins
fst
or
xchg
pushf
jo
or
shl
fsubr
(bad)
(bad)
leave
(bad)
jne
lahf
mov
pop
or
imul
cld
arpl
jo
popf
mov
mov
pop
cli
dec
jmp
dec
jmp
push
ror
not
sbb
xchg
mov
push
fst
jmp
mov
daa
or
mov
pop
mov
cmps
pop
jmp
retf
mov
pop
aaa
out
cmps
jo
inc
mov
mov
rol
and
aad
add
pop
cli
loopne
add
mov
test
icebp
mov
pushf
mov
cmp
fwait
pop
cmp
mov
cmp
push
js
dec
pop
push
cld
xchg
sub
aas
and
and
add
xlat
loopne
xor
ret
out
div
jmp
in
(bad)
arpl
sub
pop
mov
push
or
es
dec
int
mov
daa
ror
mul
and
repnz
fst
fdiv
push
scas
pop
jo
and
es
lds
loope
xchg
mov
pop
enter
rcr
xchg
cmp
jge
xchg
mov
cld
jnp
sbb
sbb
adc
cld
add
mov
call
nop
(bad)
popf
push
js
idiv
adc
retf
int3
cmc
adc
call
inc
or
cmps
sbb
shl
and
xchg
cwde
and
jle
popf
add
retf
fwait
pop
(bad)
into
neg
adc
stos
sbb
mov
dec
xchg
dec
imul
pushf
and
aam
test
imul
das
adc
pusha
jns
lahf
js
jmp
movs
fbstp
enter
test
or
in
enter
loop
in
repz
xchg
pop
into
rol
and
ret
sbb
inc
inc
adc
outs
xor
jecxz
imul
add
popa
fs
stc
mov
inc
sub
push
scas
fcmovb
jecxz
or
xlat
(bad)
push
repz
cdq
or
int
cmps
sahf
dec
or
mov
aaa
cmp
lds
add
fisttp
mov
pop
(bad)
imul
lods
mov
aaa
jmp
push
pop
push
(bad)
je
repz
addr16
mov
sbb
aaa
cmp
fild
adc
call
inc
cmp
cmp
jp
(bad)
iret
rol
cli
jl
or
out
aad
in
adc
retf
outs
das
fidivr
jg
sbb
arpl
loop
int3
mov
inc
and
mov
movs
lahf
je
ds
ins
(bad)
es
clc
repnz
sbb
les
das
outs
dec
mov
fmul
xchg
adc
push
loopne
retf
ss
push
bound
sub
outs
cmp
lods
lods
adc
or
ds
xchg
mov
imul
adc
repz
fistp
mov
ins
jmp
repz
lahf
mov
in
(bad)
dec
lods
lock
push
daa
sub
cwde
lea
retf
mov
enter
stos
cmp
add
xor
dec
sbb
mov
pop
scas
clc
cmp
(bad)
push
jnp
xchg
inc
dec
test
aaa
test
push
lahf
jbe
pop
mov
pop
hlt
dec
xor
inc
jle
fnstsw
or
in
sbb
or
pop
mov
stos
into
aam
(bad)
mov
movs
and
stos
adc
cmp
imul
or
pop
jmp
fld
call
out
outs
or
test
jno
push
sbb
sbb
mov
loopne
(bad)
fdivr
mov
push
jp
jmp
lods
xchg
ja
xor
mov
push
and
fcom
popa
push
stos
pop
jo
sub
dec
mov
mov
sub
pop
sbb
push
repnz
cmp
les
movs
push
jne
bound
mov
mov
inc
aaa
(bad)
mov
std
jne
mov
cmc
(bad)
cmps
mov
das
jmp
(bad)
stc
pop
and
js
in
fisubr
(bad)
or
cmc
mov
sub
(bad)
jne
and
aam
mov
mov
adc
imul
jecxz
add
fidiv
or
push
imul
adc
sar
sti
jne
loop
dec
mov
adc
xchg
enter
int3
adc
mov
fmulp
repz
ins
sub
(bad)
push
xor
clc
sub
shl
adc
cmp
stos
aad
mov
xor
test
ins
mov
(bad)
sar
aas
mov
movs
jl
sbb
enter
pop
test
jl
xchg
fwait
jo
add
xchg
rol
xor
sar
test
pushf
and
cmp
imul
dec
sbb
adc
mov
push
in
(bad)
push
inc
nop
push
push
jo
cmc
mov
xor
add
mov
add
dec
sbb
dec
lods
push
add
adc
push
out
dec
sbb
mov
test
dec
add
xchg
in
ins
cld
xor
imul
enter
mov
inc
repz
mov
pop
clc
stos
adc
in
or
push
jle
dec
or
dec
mov
div
jne
enter
xor
ror
test
jl
in
std
cmp
or
(bad)
ins
mov
ret
push
push
fmul
xor
mov
ror
jecxz
test
fimul
in
add
cmc
sub
lea
inc
pop
mov
fcmovbe
das
pushf
test
jl
adc
int3
pop
jnp
xchg
add
lock
push
push
adc
data16
fldenv
in
cmp
and
jno
cs
les
xor
xchg
sar
jmp
xor
xlat
pop
jle
stos
aam
fst
push
and
es
int3
je
cwde
inc
xor
jne
xchg
js
push
imul
dec
lods
imul
or
das
sub
dec
jmp
mov
ds
pop
push
jo
adc
ds
xchg
push
add
mov
(bad)
and
xor
loop
sub
inc
repz
dec
aas
lods
or
loopne
jmp
mul
mov
mov
mov
imul
push
inc
jbe
std
add
(bad)
aas
stos
add
jecxz
jle
fs
ins
jecxz
jg
jg
jae
movs
ror
aaa
cmp
push
in
xchg
jns
(bad)
or
test
lods
add
mov
xor
call
arpl
push
dec
pop
rol
or
cmp
adc
add
mov
inc
loopne
hlt
push
stos
sub
lods
es
jl
adc
out
mov
push
es
jne
das
pop
mov
or
scas
push
retf
fcom
push
sbb
dec
imul
ret
arpl
ds
iret
fwait
pusha
jns
into
fdiv
data16
mov
mov
pop
(bad)
mov
mov
sub
pop
cld
(bad)
mov
fs
sub
aad
dec
jmp
(bad)
out
les
add
mov
sub
cmp
sbb
or
xor
arpl
jo
outs
sbb
jnp
mov
adc
pop
cwde
adc
pop
cs
in
mov
fisttp
inc
movs
push
jp
movs
inc
lods
es
stos
popf
fcom
xor
sub
mov
cmp
jmp
bound
fisttp
in
add
jmp
daa
ret
in
ret
mov
and
fisttp
mov
sbb
dec
mov
adc
inc
ins
retf
idiv
and
pusha
adc
aam
ss
push
gs
xor
packssdw
sub
dec
mov
sar
mov
icebp
movs
test
push
pop
push
mov
push
fnstcw
out
xchg
inc
hlt
ins
jns
aas
int3
dec
push
out
xchg
cmp
jbe
stc
into
inc
mov
cmp
pusha
inc
or
push
sub
sti
xor
out
hlt
std
stos
xchg
pop
in
sub
inc
fptan
mov
sub
dec
add
mov
je
dec
fstp
and
es
pcmpeqb
es
mov
mov
mov
dec
shl
ficom
pop
div
jnp
xor
fist
repz
fldcw
pop
loopne
adc
test
jne
sti
jl
ins
test
movs
xor
aad
ror
movs
inc
loope
jle
ins
xor
push
adc
leave
mov
cmps
and
aaa
push
imul
and
pop
push
repz
mov
lods
mov
cmc
jp
adc
fdiv
ins
xchg
fxch
pushf
mov
dec
mov
push
jbe
or
sbb
scas
mov
je
div
mov
ss
add
sub
shl
adc
mov
xor
call
je
jae
pushw
jne
fld
je
cs
movs
xchg
push
mov
inc
cmp
stc
neg
or
mov
add
stos
scas
adc
jp
fmul
ret
aad
loopne
loop
leave
retf
xchg
or
and
add
mov
and
cmp
test
push
lea
movs
jno
add
cmp
xchg
and
sbb
(bad)
ins
xchg
out
arpl
cmps
aam
adc
lock
bound
mov
and
and
or
xor
xor
jecxz
mov
mov
idiv
cli
fs
aaa
jmp
int
pushf
cdq
sahf
add
cmp
sbb
in
and
sub
dec
and
sbb
int3
ret
sub
sub
hlt
test
fidiv
call
rcr
fwait
out
mov
(bad)
ins
xor
enter
in
jg
pop
cdq
cld
mov
push
or
repz
(bad)
jmp
sbb
ds
and
frstor
add
popf
push
xor
sub
sub
hlt
lods
adc
mov
js
shr
scas
sbb
aad
loopne
jmp
sbb
fistp
or
dec
xor
mov
stc
push
js
addr16
hlt
fcomp
aam
jae
xchg
mov
xor
mov
mov
aad
int
or
jge
ret
mov
sbb
fist
xor
fstp
das
ja
cmp
repnz
sbb
jge
push
movs
fdivrp
pop
(bad)
fimul
pop
inc
jge
sub
retf
adc
sub
mov
shr
cld
ins
mov
or
or
in
push
jmp
shl
hlt
pop
retf
in
jne
push
pop
pop
pushf
xor
mov
outs
ins
aaa
cmp
or
jle
push
xchg
xchg
add
and
sbb
mov
(bad)
jmp
addr16
jne
sahf
call
pop
cmps
xor
cwde
push
sub
or
stc
cs
into
xor
fs
fdiv
pop
ror
dec
out
push
adc
dec
in
xlat
loop
mov
mov
ja
es
sar
test
fild
inc
push
push
cmp
in
(bad)
loopne
push
icebp
add
jecxz
stc
lods
clc
aam
sub
fdiv
sub
xchg
retf
xchg
je
xchg
nop
sbb
sub
or
test
xchg
inc
or
bound
pop
dec
rcr
repz
cwde
fwait
jns
out
mov
xor
or
scas
scas
cmp
popf
test
test
std
xchg
fsubr
out
aad
xor
je
jno
pop
out
inc
dec
jb
inc
movs
push
pop
add
sbb
push
(bad)
mov
fldl2e
push
sbb
adc
je
imul
sbb
adc
jno
or
es
sbb
dec
xchg
les
cwde
mov
mov
cmps
cdq
push
mov
and
jb
aaa
cmp
ins
jmp
sahf
and
retf
xchg
fsub
stc
retf
adc
cmp
nop
and
outs
cmc
dec
hlt
fadd
mov
cmp
mov
pushf
aas
hlt
mov
fidivr
mov
cwde
stos
xchg
or
stc
add
mov
sbb
push
dec
aad
push
in
iret
push
xchg
jne
arpl
cdq
mov
xchg
sbb
ins
jne
inc
mov
sub
dec
rcl
fwait
les
jg
mov
add
movs
test
mov
add
sub
leave
push
sbb
ins
mov
inc
push
pop
mov
cmp
adc
loope
iret
pop
in
cmp
icebp
test
adc
mov
fbld
repz
jg
sahf
enter
or
test
mov
iret
xor
mov
push
inc
mov
dec
or
(bad)
gs
daa
or
add
shl
call
mov
jnp
pop
ds
cbw
mov
out
in
test
push
jmp
jo
jbe
dec
mov
sub
les
jne
push
and
jle
and
cmps
inc
xchg
inc
mov
jb
sbb
xchg
out
dec
xlat
fild
xchg
mov
aas
ror
aam
jae
or
xchg
in
icebp
lds
ss
arpl
(bad)
adc
jb
stc
sti
xor
sbb
xchg
stos
and
and
imul
or
bound
mov
jecxz
jnp
sub
xchg
es
les
adc
mov
or
add
int
dec
xchg
sub
push
mov
push
fidiv
inc
jge
dec
ins
gs
jmp
fdiv
pop
test
mov
mov
jbe
repnz
cmp
ret
dec
push
repnz
xlat
sbb
mov
repnz
cmps
icebp
dec
(bad)
je
sbb
push
into
sar
out
sub
sub
mov
adc
movs
xlat
dec
dec
addr16
loopne
aam
jnp
(bad)
retf
push
fimul
jnp
lods
mov
jbe
aam
sub
fstp
out
mov
jno
imul
push
cmp
push
daa
(bad)
arpl
inc
movs
es
push
in
sti
pop
mov
hlt
sub
aaa
inc
out
mov
ja
jbe
jmp
inc
dec
cmc
fs
push
xor
into
pop
pop
jbe
scas
push
pop
cmp
movs
cmps
je
scas
js
stos
mov
aad
fucom
push
sar
pop
dec
sbb
add
out
fsub
cs
and
adc
outs
pop
sub
call
jmp
mov
movups
rol
jge
dec
(bad)
scas
mov
dec
push
mov
jle
data16
or
sahf
lahf
jle
xchg
neg
(bad)
adc
dec
mov
jae
sub
fcmovb
cmps
add
pop
xlat
sub
pop
sar
push
dec
(bad)
aad
ins
cmps
call
loopne
cmp
cmps
movs
mov
ret
xor
pop
cmp
fnstcw
mov
enter
loope
xchg
ret
and
push
mov
rol
jg
daa
sbb
sub
sar
(bad)
jmp
fdiv
dec
jne
xlat
or
(bad)
(bad)
push
test
outs
xor
out
dec
ins
jb
test
arpl
scas
cmps
jne
clc
hlt
idiv
add
push
mov
mov
out
outs
push
pop
xlat
lods
or
(bad)
jmp
cmc
push
mov
pop
imul
into
movs
sub
popf
dec
aad
jl
inc
scas
fisttp
mov
mul
cmp
add
or
jmp
sbb
into
bswap
call
imul
inc
push
dec
mov
lds
jle
pushf
out
fcmovb
mov
loopne
cmp
push
fwait
je
lea
popa
call
xor
ins
ins
fwait
adc
push
shr
add
xor
ins
inc
inc
cmp
inc
fstp
and
push
xchg
lods
pushf
ds
mov
test
lods
int3
push
test
in
loope
and
(bad)
outs
(bad)
fld
cmp
in
cs
ins
sub
leave
out
mov
fild
inc
mov
mov
add
mov
push
cmp
(bad)
xchg
cs
daa
(bad)
aaa
sti
xchg
add
arpl
mov
(bad)
jge
mov
jp
mov
std
retf
sbb
mov
ins
mov
in
pop
das
sub
stos
lock
(bad)
sub
sar
sti
clc
adc
mov
(bad)
mov
or
retf
ss
push
and
jg
pop
scas
fcomp
aam
jno
jns
daa
daa
outs
mov
dec
pop
out
push
cmp
rcl
(bad)
adc
xlat
dec
(bad)
sbb
cmp
fcomp
mov
and
adc
pop
dec
cs
fs
and
test
sbb
xlat
add
sbb
arpl
push
mov
jbe
xor
cmp
outs
sbb
loope
dec
fild
sbb
or
sub
push
jb
sbb
ficomp
cmp
aas
mov
aas
mov
pop
inc
jmp
mov
cmp
pop
or
inc
(bad)
xlat
inc
mov
inc
mov
lods
sbb
div
cmps
pop
loop
les
test
adc
dec
jae
shr
or
xchg
push
pop
and
sub
and
clts
dec
dec
fld
scas
cwde
test
dec
push
xchg
push
sub
in
and
adc
xor
cmps
dec
sub
or
cmp
test
int3
pushf
xor
outs
mov
pop
test
lock
rol
aaa
js
adc
push
add
ja
test
xlat
(bad)
sahf
or
jmp
rol
ret
mov
and
adc
sub
in
xor
mov
or
imul
les
mov
inc
push
mov
je
iret
fnstenv
jbe
mov
sub
das
add
mov
icebp
(bad)
loop
mov
mov
mov
xchg
imul
inc
movs
mov
pop
cmp
xor
pop
lods
in
cmp
add
xchg
mov
bsr
xchg
dec
jp
sbb
enter
inc
int
outs
ins
bswap
pop
dec
and
inc
into
mov
cld
xor
dec
mov
xchg
fadd
into
dec
sar
jno
mov
mov
cmp
jbe
mov
shl
cmp
(bad)
pop
xchg
pop
inc
(bad)
shl
mov
mov
jno
add
out
es
xchg
outs
pushf
jg
mov
das
pop
sbb
mov
lods
add
mov
aam
cmp
ins
push
int
sti
(bad)
clc
dec
jb
xchg
push
pop
add
add
pop
push
cld
(bad)
dec
js
in
pop
in
jle
add
les
mov
loope
cmp
add
in
xor
leave
pop
and
cmc
lea
shl
push
stos
inc
popf
inc
repnz
dec
and
adc
push
mov
les
or
jns
dec
mov
ret
(bad)
rol
call
dec
call
jg
fldcw
cmps
ins
cmp
mov
xor
mov
jp
fnsave
dec
pop
(bad)
dec
ds
mov
inc
mov
or
pop
cld
(bad)
aas
mov
and
mov
fsub
idiv
cs
cli
js
push
or
cdq
cli
jo
cmp
adc
pop
mov
fwait
pushf
cdq
shr
in
sub
popf
or
pusha
jo
push
jg
cmp
cmp
mov
in
std
pushf
rol
xor
push
aas
add
push
aad
in
mov
or
lahf
(bad)
fldenv
push
or
ss
out
mov
pop
sub
cmp
leave
push
jp
cmp
xchg
ror
adc
(bad)
mov
popa
jo
inc
mov
cld
out
or
add
ret
pop
mov
jb
loop
(bad)
sti
and
and
sar
or
aad
jg
sbb
xor
add
push
mov
mov
shl
stos
ret
push
sti
and
movs
(bad)
adc
call
rcr
jae
adc
aam
sbb
test
fnsave
or
push
pop
pusha
mov
jp
jb
jl
mov
jo
mov
mov
add
retf
cmp
fimul
sti
ss
js
xchg
test
fld
lods
sub
mov
jl
xor
mov
pop
fsub
pop
sub
cmp
cmp
jl
lds
lods
pop
imul
xor
jbe
call
or
xchg
and
std
scas
imul
and
mov
jmp
cdq
nop
rcl
ins
jno
pop
sbb
lods
lds
out
(bad)
daa
pop
mov
xchg
or
jnp
sub
mov
rcl
(bad)
mov
pop
js
pushf
into
sar
dec
sub
dec
iret
out
jle
sbb
jl
sub
push
psubsb
les
out
icebp
or
xchg
xchg
push
lods
inc
push
adc
out
lods
ds
or
mov
fild
mov
(bad)
stos
(bad)
les
fld
ins
repnz
add
imul
(bad)
push
mov
jbe
stos
stc
repnz
cmp
(bad)
and
std
mov
jmp
sbb
(bad)
out
in
pop
cmps
push
push
xchg
and
pop
xor
mov
aas
jmp
pop
inc
adc
or
js
pop
push
lds
mov
push
lds
push
mov
sbb
movs
dec
std
mov
mov
scas
mov
iret
jmp
add
cmp
push
jg
arpl
xchg
scas
sti
in
xor
out
cmps
inc
(bad)
and
jl
push
mov
(bad)
(bad)
int3
cmp
pop
jmp
out
jnp
and
mov
fmul
xlat
retf
cld
xchg
inc
loope
and
repnz
mov
(bad)
scas
xchg
xor
add
addr16
push
lahf
(bad)
lds
inc
mov
mov
rol
pop
mov
lods
mov
mov
mov
popf
scas
js
mov
xor
mov
imul
pop
test
in
push
pop
sbb
retf
xor
addr16
jg
aaa
out
inc
bound
cwde
jg
dec
aas
mov
cmp
shl
pop
mov
mov
add
lds
mov
data16
loop
xor
mov
or
sbb
sbb
nop
mov
std
sar
into
mov
xchg
stos
mov
lock
js
aaa
in
movs
ds
ja
or
cs
sub
dec
mov
inc
lea
adc
mov
xchg
lods
add
mov
imul
mov
scas
xor
popf
imul
or
leave
mov
repnz
adc
js
scas
aas
push
mov
pop
lea
jns
arpl
data16
xor
mov
jo
push
jae
popf
cmps
inc
cs
aam
pop
cmp
loopne
push
in
jmp
pop
mov
sub
add
push
in
mov
pop
push
mov
cmp
xchg
jbe
and
in
call
rol
out
add
fidivr
mov
cmps
fist
xchg
inc
adc
icebp
mov
sub
je
(bad)
jl
movs
das
inc
sub
enter
js
ss
jno
das
xchg
push
push
loope
xor
movs
sbb
inc
and
mov
int3
inc
xchg
adc
ror
mov
out
test
push
push
lock
vmovaps
push
sahf
cdq
mov
add
jmp
ret
add
mov
arpl
cli
push
(bad)
xor
cmps
mov
sbb
rol
mov
mov
hlt
push
scas
les
fwait
retf
dec
lock
inc
pop
push
push
or
and
push
inc
push
adc
xor
mov
push
in
test
push
mov
ret
ja
push
stos
dec
sbb
jle
fisttp
add
lods
enter
mov
adc
cwde
mov
xor
mov
test
je
aad
icebp
adc
jp
retf
pop
popf
in
mov
out
movs
mov
inc
arpl
das
(bad)
or
pop
shl
cmps
inc
sub
lea
test
in
pop
(bad)
data16
call
pop
mov
retf
repnz
mov
lods
fist
jecxz
cmp
rcr
adc
mov
popa
ds
arpl
jp
or
add
cmc
scas
push
fidiv
xor
addr16
sti
sub
mov
xor
xor
outs
pushf
inc
mov
int
int3
inc
stos
push
pop
fdiv
adc
xchg
dec
stos
or
bound
mov
lds
add
fld
mov
push
jno
mov
jl
das
sub
nop
jno
and
in
cmps
int
addr16
dec
and
hlt
push
dec
out
stc
call
mov
or
cmc
jl
stos
int
leave
in
jnp
pop
(bad)
pop
cmp
test
rcr
pop
xchg
in
mov
jp
ss
in
and
into
push
fwait
adc
je
sar
mov
test
push
dec
xor
and
je
cwde
mov
arpl
sub
icebp
pop
int
sbb
xchg
test
popa
leave
push
test
pop
mov
ficom
(bad)
aad
bound
pusha
test
sahf
aad
sbb
rcr
test
xchg
inc
ja
enter
dec
xor
cmp
or
in
imul
or
mov
or
push
or
dec
pop
ror
add
popa
outs
push
neg
cmp
cmp
hlt
test
fisubr
test
in
movs
pop
jle
retf
push
mov
outs
hlt
into
or
lods
aam
ins
bound
pushf
ins
jb
(bad)
out
repnz
xor
jae
fld
sti
call
mov
enter
icebp
cmps
addr16
cmp
in
sub
outs
aaa
adc
pop
stos
push
inc
das
adc
and
shl
add
cmp
scas
out
leave
sub
repnz
cli
and
ss
xlat
fprem
inc
shl
push
test
xchg
addps
push
bound
pop
(bad)
sar
cmps
stos
(bad)
div
cmps
adc
std
push
xor
call
pusha
not
ret
ret
nop
inc
jbe
inc
xlat
sub
fld
dec
dec
aam
mov
std
das
sahf
mov
pop
ins
test
lods
adc
(bad)
and
ficom
add
xchg
(bad)
dec
inc
gs
xchg
stos
xor
and
xchg
aas
fcomp
sbb
cmps
fs
cdq
jecxz
jp
dec
sbb
adc
push
cmp
inc
aaa
arpl
jb
xor
inc
xor
je
jmp
movs
cmps
das
outs
iret
movs
jmp
push
mov
sti
pop
js
(bad)
cmps
xchg
xchg
xor
test
jg
mov
cmps
test
in
inc
or
clc
cli
push
repnz
frstor
retf
xor
inc
ins
xchg
xor
fcom
sbb
das
cs
hlt
scas
push
loope
movs
adc
iret
pop
dec
dec
inc
cmps
jl
es
(bad)
lds
cmp
sub
in
adc
mov
xchg
dec
in
aam
jo
repnz
movs
mov
xchg
aam
cs
jge
dec
(bad)
loope
pop
aam
inc
xor
mov
scas
dec
cmp
retf
aaa
je
shl
and
int3
and
mov
sbb
mov
cmp
xlat
pop
add
popf
sbb
xor
inc
retf
jmp
lea
rcr
and
sub
fld
stos
dec
and
mov
push
inc
loope
xor
scas
push
pop
shl
adc
rol
pop
pop
test
leave
ja
nop
stc
popa
mov
adc
mov
dec
ret
cdq
nop
enter
cli
jle
pop
in
lods
pop
sahf
das
gs
mov
mov
loope
jae
push
das
outs
add
cmps
data16
dec
imul
popf
outs
bound
fnsave
adc
fiadd
out
mov
pop
gs
xchg
dec
(bad)
sbb
mov
std
in
jge
pop
cmp
adc
jo
stos
div
or
jne
jno
dec
push
fisub
mov
mov
dec
add
xor
inc
leave
sub
pop
ret
push
adc
imul
mov
cld
or
shl
cmc
xchg
push
lea
sub
(bad)
out
mov
daa
jmp
xchg
rcr
push
out
shl
pop
dec
inc
scas
mov
adc
aad
mov
test
mov
sub
mov
adc
lds
mov
bound
cmp
add
cmp
das
ds
inc
outs
fnsave
cmps
(bad)
jp
pop
fs
cmp
add
cmc
fisttp
ret
rcr
ins
dec
pop
popa
jo
inc
cmp
leave
and
bound
xchg
jmp
shr
or
das
lahf
mov
fwait
push
arpl
mov
out
adc
inc
or
js
sbb
sbb
mov
xchg
adc
xchg
cmp
fld
loop
jo
clc
xlat
inc
sbb
or
retf
pusha
push
adc
xor
sbb
sbb
push
test
pop
ret
cmps
inc
movs
or
or
push
out
dec
sahf
sbb
xor
mov
jle
adc
sub
bound
fisttp
jne
mov
sub
push
je
mov
shl
mov
fwait
in
out
add
ror
pop
(bad)
stc
out
xchg
xor
pop
push
outs
push
jg
mov
mov
pop
aam
xor
(bad)
xchg
adc
inc
js
loopne
cwde
mov
js
inc
les
mov
bound
mov
jne
cmp
add
add
fst
cdq
iret
into
(bad)
sub
sahf
jge
inc
push
ftst
inc
std
mov
imul
xchg
repnz
(bad)
pop
pusha
jne
mov
pushf
adc
or
jns
bound
add
pop
stc
inc
dec
push
inc
mov
scas
rol
xchg
fcom
arpl
cdq
pushf
iret
mov
mov
fidivr
pop
push
add
vxorps
inc
hlt
or
xor
int
test
cld
jmp
sub
and
addr16
pop
adc
imul
jb
dec
mov
jae
sub
repnz
test
inc
enter
push
sar
cmp
push
pop
inc
retf
add
js
push
fnstenv
sub
xchg
popa
mov
mov
cmp
or
nop
xchg
popf
sbb
xchg
cmp
(bad)
cmp
ins
jg
jecxz
jge
xor
stc
call
add
xor
lahf
data16
mov
jmp
sbb
or
or
jmp
adc
lds
pop
or
xchg
rcl
dec
and
mov
fnstenv
dec
enter
push
icebp
cld
popa
js
fdiv
lds
push
dec
or
push
cmp
inc
xchg
fiadd
pop
mov
mov
stos
je
repnz
inc
jp
jmp
icebp
push
(bad)
add
js
inc
retf
sti
data16
shl
cmp
fst
or
pop
(bad)
sar
rcr
popf
cmp
xor
push
test
leave
push
mov
clc
ds
fmul
stos
das
sub
call
push
test
add
daa
jne
xchg
mov
(bad)
dec
cli
fst
inc
push
fld
pop
inc
sbb
mov
imul
aad
push
cmp
push
or
(bad)
enter
jmp
ins
sbb
les
push
mov
dec
popf
adc
outs
ja
jne
aad
mov
jle
movs
lods
pop
jl
sbb
loop
int
mov
xor
out
stc
cmp
cmp
cmc
jbe
inc
and
enter
fbld
adc
pop
loopne
push
xor
pusha
dec
pop
movs
sub
sbb
aas
outs
outs
or
fwait
xlat
ja
jp
fldenv
add
cld
mov
imul
shr
xor
fld
push
mov
ret
push
mov
ret
mov
mov
inc
jl
loop
push
cli
pop
cld
jmp
ret
int
inc
push
outs
out
dec
mov
mov
mov
nop
inc
jmp
aad
adc
mov
outs
call
cmp
mov
dec
dec
mov
jge
mov
movs
ret
addr16
sub
push
outs
out
repnz
xor
push
sbb
pop
int
push
mov
and
cmp
stos
shr
cmp
cmp
jb
mov
out
je
lods
ficomp
add
inc
add
neg
rol
xor
ins
inc
push
jg
cmc
sti
add
inc
xchg
mov
inc
ins
cld
xchg
push
imul
test
xchg
jae
add
inc
add
sbb
fdivr
fwait
loope
stc
pop
jae
fadd
push
push
and
inc
jne
mov
cmp
xor
cld
mov
mov
ja
xor
or
dec
inc
test
jmp
dec
outs
sahf
fprem1
cmps
sub
dec
jmp
mov
shl
ins
cmp
(bad)
div
push
inc
div
jae
(bad)
or
mov
pop
mov
les
(bad)
xor
es
stc
jmp
adc
lods
fidiv
jae
js
push
add
shr
pop
mov
leave
inc
leave
call
fdiv
scas
(bad)
adc
int3
adc
push
imul
xchg
je
add
sti
test
pop
adc
ret
rcl
daa
jle
jl
enter
xor
imul
fcomp
daa
jecxz
(bad)
lods
scas
retf
inc
sbb
sub
popf
fistp
in
mov
ins
mov
mov
push
test
push
lds
int
sub
fs
test
sub
mov
outs
dec
icebp
push
pop
mov
mov
push
jmp
cmc
imul
fidivr
mov
bound
cwde
or
rcr
cmps
scas
adc
inc
sbb
and
mov
sub
xlat
and
lahf
ficomp
fist
call
adc
jecxz
cmps
in
inc
mov
xchg
pop
int
cmp
shl
lods
push
xor
std
pop
xchg
push
pop
and
int3
shr
dec
push
mov
pop
pushf
push
adc
or
pop
jge
pop
fwait
in
fucomp
stos
inc
dec
shl
xor
cmp
mov
cdq
jb
sbb
mov
pop
adc
scas
and
out
dec
lock
pop
or
xor
xor
and
retf
adc
mov
popa
test
dec
or
shl
repz
int3
int
imul
inc
lea
nop
lock
mov
mov
cmp
jo
mov
fidiv
cmp
loop
fistp
push
repnz
stc
rcr
push
cdq
das
cld
add
push
mov
xchg
ds
sub
cmp
dec
outs
rcr
sub
dec
lahf
pop
loop
sbb
add
jbe
cmc
xor
cmp
push
inc
int
mov
mov
jnp
push
jge
and
clc
cmc
or
aam
arpl
frstor
push
jl
cmp
add
mov
jne
jmp
retf
fwait
pop
stos
adc
popa
pop
gs
dec
xor
arpl
mov
or
inc
cmps
adc
adc
push
jmp
or
ja
pop
sti
mov
mov
outs
or
mov
sbb
stos
mov
aam
in
shr
hlt
or
dec
sbb
sub
outs
add
mov
iret
push
pop
push
int
xchg
push
push
js
addr16
ja
test
or
or
popa
cmc
xor
(bad)
addr16
inc
(bad)
push
arpl
sub
push
xchg
cmp
jns
mov
je
add
sti
fdecstp
mov
or
or
jge
push
imul
out
das
sub
pop
pop
dec
and
cdq
push
and
fidiv
(bad)
stc
jnp
sbb
lea
in
pop
xchg
nop
enter
adc
xor
scas
cli
jb
and
fcom
push
stos
js
inc
add
jnp
add
mov
es
mov
mov
or
aam
jne
out
fadd
xor
jmp
mov
sbb
mov
inc
mov
mov
cmp
cmps
test
and
push
or
push
xor
pusha
cmp
in
dec
ret
out
jmp
pop
mov
leave
mov
pop
outs
(bad)
leave
outs
fs
mov
mov
mov
mov
pop
sbb
or
fsubr
xchg
xlat
stos
pop
add
into
lahf
inc
adc
push
add
mov
ss
xchg
movs
fst
mov
pop
jnp
dec
addr16
mov
es
push
cmp
ror
movs
add
jb
jmp
jns
ficomp
inc
add
in
xor
pushf
mov
xchg
jmp
mov
adc
out
sbb
and
mov
enter
cli
ins
cmps
data16
pop
xchg
pop
or
cmp
iret
dec
rol
leave
lock
xor
daa
int
jb
cmp
jge
stc
mov
int3
mov
mov
repz
addr16
sub
cmps
inc
push
jns
mul
cmps
jge
jle
imul
shl
xchg
addr16
mov
xchg
pop
aaa
rcr
or
aam
es
dec
mov
jne
cmp
push
iret
(bad)
test
mov
das
xchg
dec
aas
inc
fnstcw
adc
ret
mov
js
mov
xchg
les
cmp
ret
cmp
xchg
inc
pop
call
mov
popa
lock
enter
test
pop
push
lock
int3
sbb
mov
imul
push
mov
rcl
stos
(bad)
jg
shr
data16
ret
mov
push
int3
dec
iret
rcr
jmp
mov
fadd
outs
ret
sahf
out
ds
xor
xchg
inc
pop
cmp
cmps
xchg
nop
push
out
lahf
xchg
pop
cdq
fldln2
idiv
aam
and
dec
sub
imul
in
popa
add
outs
xor
inc
push
cmp
test
dec
pop
int3
js
xchg
(bad)
fdivr
mov
fdivr
ds
cwde
pop
jp
mov
mov
mov
int3
fsubr
sbb
push
inc
(bad)
dec
retf
sar
fs
pop
jecxz
ror
sbb
pop
push
aas
outs
adc
test
out
fist
push
xor
out
and
loopne
add
fistp
cmc
fsubr
lea
inc
fld
test
inc
ror
or
icebp
pop
sar
dec
popf
mov
das
iret
pushf
mov
jns
xchg
dec
(bad)
sar
mov
retf
push
cmps
sahf
jne
retf
xchg
mov
or
and
xchg
adc
jle
int
daa
adc
sbb
fbld
jle
in
ss
jnp
loopne
jge
jbe
push
int3
jmp
pop
sahf
repz
fwait
cli
mov
push
iret
iret
in
sbb
das
pop
xor
mov
les
ja
gs
das
or
mov
ja
inc
repnz
dec
push
sbb
iret
inc
and
add
cmps
push
sbb
cmps
pop
or
imul
cmp
mov
ret
push
enter
dec
dec
inc
adc
adc
xchg
xchg
cdq
test
cmp
mov
sub
jmp
outs
loope
or
inc
hlt
(bad)
test
fsubr
call
pop
jge
jl
sbb
add
outs
pop
inc
push
jmp
add
loop
inc
ret
jo
jo
pop
pop
xchg
hlt
pop
fst
pop
stos
imul
mov
lea
ja
dec
mov
jo
mov
imul
jecxz
test
push
in
int
push
mov
or
or
fwait
into
pusha
xchg
or
test
mov
and
mov
in
(bad)
fstp
add
inc
fwait
inc
or
jp
je
sti
adc
push
out
mov
xor
xor
mov
or
lea
jge
ins
pop
cli
sbb
xchg
repz
scas
das
shl
inc
add
pop
dec
scas
jne
sbb
sub
shl
imul
pop
jne
jl
ss
xor
ins
into
jo
or
jg
ds
lods
in
add
in
inc
and
xor
fs
sbb
inc
int
stos
cmps
jnp
test
movs
and
pushf
push
nop
adc
cdq
test
stc
mov
jge
iret
xor
or
popa
dec
and
pop
mov
mov
imul
in
pop
ja
push
pop
out
xchg
cmps
jnp
out
frstor
loope
gs
push
jns
pop
out
xchg
sbb
daa
dec
mov
and
loopne
mov
cmps
cmp
sar
mov
pushf
push
test
pop
(bad)
aam
in
leave
add
(bad)
jl
test
adc
pushf
cmp
(bad)
xor
lea
and
xchg
loope
(bad)
gs
cld
xor
call
cmps
cmps
xchg
test
imul
and
hlt
loope
sub
div
adc
or
jmp
xor
(bad)
cmps
cmp
int
pushf
or
cmc
test
ds
out
imul
add
pop
aam
fisub
inc
cmps
into
pop
xlat
in
jle
and
ficomp
lods
add
stc
mov
fnstcw
jle
or
retf
jmp
push
pop
cwde
gs
clc
jmp
mov
shl
adc
push
in
outs
jnp
xor
cmp
xchg
das
gs
cmp
lds
fistp
shl
xchg
es
inc
dec
pop
(bad)
and
pop
pop
cmp
and
pmullw
cmp
outs
cld
arpl
cdq
mov
pop
and
enter
int
fld
adc
es
test
cmp
xchg
stos
scas
in
fisubr
addr16
les
rol
push
ins
mov
cmp
inc
mov
std
das
ins
cld
mov
push
cmp
push
das
in
pop
in
xchg
call
into
bound
push
and
xor
jae
mov
sub
pop
push
inc
push
mov
ins
retf
sub
adc
mov
gs
ins
add
push
pop
pop
mov
in
ret
sbb
xchg
outs
mov
jmp
adc
pop
add
es
repz
push
test
test
xchg
xchg
adc
push
mov
jae
xchg
sub
push
in
ffree
inc
or
xchg
neg
iret
pop
push
mov
fisubr
lock
lea
mov
add
add
loope
fsubr
push
pop
ficomp
mov
aam
xor
popa
cmps
mov
cmps
js
fcomp
jge
adc
xchg
mov
(bad)
adc
jg
repnz
call
mov
mov
or
pop
push
xor
xchg
adc
cmp
out
or
xchg
ret
pop
(bad)
jbe
mov
sbb
scas
mov
mov
jp
cmp
lea
jecxz
lds
mov
adc
and
sbb
adc
in
cmp
in
sub
mov
ds
lahf
imul
xchg
(bad)
in
add
add
sub
lods
out
pop
(bad)
mov
adc
enter
mov
loop
sub
cmps
sbb
jge
xchg
push
cmp
push
xchg
and
test
int3
sbb
mov
cmp
pop
dec
jl
or
sahf
sbb
pop
mov
lahf
cmp
mov
push
adc
fsubr
(bad)
adc
fadd
movs
call
movs
pushf
dec
dec
mov
pop
xlat
ds
scas
pop
jge
jmp
lods
inc
(bad)
jl
mov
adc
js
xchg
xchg
lahf
outs
je
push
jno
and
push
call
jo
jmp
jecxz
paddsw
(bad)
cld
adc
ins
push
xchg
mov
imul
pop
push
jnp
lods
push
cdq
test
and
or
es
mov
(bad)
pop
jnp
or
retf
enter
stc
movs
shl
fwait
and
jbe
inc
sbb
sbb
test
ja
push
outs
sub
and
in
jmp
sbb
std
sub
mov
iret
mov
int
jbe
xor
xor
or
xlat
cli
(bad)
scas
test
jg
mov
loopne
push
nop
jne
stc
pop
cli
ja
dec
cmps
push
aas
pop
(bad)
or
repz
mov
sub
outs
sbb
imul
rcl
ret
dec
(bad)
das
cmp
inc
sbb
cs
scas
pop
arpl
adc
and
jae
shr
fwait
inc
data16
mov
addr16
lahf
adc
mov
or
mov
jle
push
mov
add
jae
xlat
xchg
push
nop
mov
dec
mov
xchg
and
scas
xlat
xchg
inc
test
xchg
test
je
pop
xor
imul
mov
sub
mov
mov
mov
xchg
cmps
hlt
mov
aas
add
jg
test
xchg
ret
inc
jae
lahf
std
or
lea
or
inc
sbb
pop
jp
arpl
xchg
in
push
mov
and
jp
loope
inc
fdiv
xchg
sub
hlt
xchg
ins
sub
ror
xor
push
and
js
cmp
mov
jne
lods
test
push
fistp
jle
pushf
outs
cs
mov
std
movs
or
mov
mul
and
fisub
in
adc
das
pushf
jno
into
sbb
mov
cwde
ret
jp
retf
out
lea
in
xor
sbb
jae
out
inc
cmps
addr16
mov
adc
mov
and
jbe
fimul
dec
fsubrp
cmp
mov
cwde
mov
ficomp
in
cmp
ror
clc
cdq
pop
cmp
test
mov
das
pop
icebp
mov
fs
jmp
stc
mov
add
enter
jae
(bad)
in
mov
movs
movs
into
mov
scas
sbb
jmp
xchg
dec
stos
pusha
or
cmp
jge
pusha
in
ins
mov
mov
inc
lea
xor
sub
aas
xchg
push
int3
cmp
test
pop
pop
leave
cmp
add
fild
jl
adc
imul
jns
jno
xchg
sbb
test
in
cmp
sbb
or
sub
mov
ds
dec
dec
sub
mov
inc
push
stc
stos
xchg
(bad)
icebp
push
xor
sub
add
add
pop
or
cmp
test
cmp
jns
cmps
popa
push
adc
sbb
sbb
das
cwde
jae
or
into
ja
fld
xchg
scas
es
aas
jae
dec
out
xor
mov
jb
mov
jbe
xchg
in
lods
repz
inc
fldcw
js
(bad)
in
loopne
or
xchg
push
sub
rcl
jp
pop
mov
inc
stos
sub
mov
xor
popa
movs
ins
shl
cld
lock
lods
ds
(bad)
mov
mul
pop
stc
das
ins
sbb
ins
adc
adc
pop
movs
jg
xchg
and
(bad)
inc
or
jg
retf
rcr
sbb
pop
gs
cwde
in
mov
push
test
cmp
mov
lods
xor
fistp
jns
adc
mov
das
ss
inc
sbb
sub
push
add
cmp
cmp
aam
pop
sahf
dec
(bad)
and
out
icebp
sub
cmp
sar
(bad)
dec
cmp
mov
push
ins
out
pushf
imul
mov
retf
inc
xchg
out
cmps
mov
and
xor
add
scas
cs
lea
mov
cmp
pop
outs
pop
nop
pop
push
xor
hlt
xor
inc
sbb
call
sahf
sbb
inc
rcr
call
call
mov
add
jmp
(bad)
in
mov
imul
xor
(bad)
les
test
dec
icebp
in
int3
sbb
jle
jl
dec
imul
cwde
arpl
and
call
mov
pop
bound
dec
or
ret
out
or
xchg
xor
push
add
fwait
adc
stos
mov
les
cmc
cmp
dec
inc
mov
(bad)
fst
pop
shl
(bad)
icebp
adc
imul
les
in
repnz
add
cmp
shr
ins
push
mov
lock
mov
xor
rcr
or
add
int
add
jo
aas
scas
pmovmskb
(bad)
jl
add
pop
jg
jge
mov
xchg
out
mov
ds
dec
fidiv
inc
sbb
push
ror
cmp
(bad)
mov
inc
arpl
leave
(bad)
gs
fist
outs
stc
mov
sbb
and
mov
pop
cli
mov
pusha
push
mov
rcl
sub
or
stos
or
cmp
ins
ja
je
xor
(bad)
fild
test
dec
js
cmp
cmps
stc
out
fild
fdivr
jne
adc
xchg
fst
sub
sub
jmp
xchg
test
and
mov
push
xchg
(bad)
shl
std
sbb
xchg
data16
lods
mov
adc
inc
cmp
mov
xor
push
sub
push
fwait
pop
sti
in
adc
fisttp
imul
xchg
leave
call
stc
in
imul
popa
mov
and
test
and
sti
push
ins
movs
ffree
arpl
mov
push
dec
mov
mov
popa
xor
push
and
cmp
cmp
cmps
std
fistp
jg
lods
xchg
add
jno
and
lea
into
in
inc
imul
fadd
sti
mov
pusha
pop
push
xor
pop
xor
push
jmp
shr
lds
xchg
add
stos
pop
cmp
cmp
pusha
fadd
dec
bound
inc
dec
int
lock
clc
or
aas
cld
or
mov
adc
or
xchg
icebp
movs
aas
mov
pusha
rcr
not
add
jb
xchg
mov
fs
retf
aam
mov
mov
jo
popa
pop
jns
loope
mov
loopne
push
loop
(bad)
adc
inc
mov
push
sahf
cli
push
test
jmp
repz
add
or
push
dec
cmp
std
popa
inc
das
fisttp
xor
sbb
xor
mov
jne
cmp
leave
ins
scas
dec
sar
add
aam
mov
mov
pop
data16
or
bound
loope
jae
sahf
call
rol
jbe
jbe
jnp
jns
mov
(bad)
sar
or
adc
stos
push
repz
cmps
fwait
push
(bad)
pop
hlt
ins
sub
ret
xor
lea
ds
adc
mov
dec
mov
pop
add
cmp
and
ss
xor
push
clc
iret
test
int
mov
test
test
(bad)
ret
inc
xor
sbb
aad
push
jle
lds
(bad)
cli
mov
cmp
outs
pop
test
mov
jnp
jae
mov
popa
ss
inc
test
aas
dec
lds
pop
and
inc
addr16
add
xchg
xchg
sub
sub
mov
jg
out
test
push
ss
mov
arpl
mov
mov
les
sub
fistp
or
stc
adc
stos
xor
push
iret
std
retf
pop
and
mov
sub
and
cmp
fiadd
sub
xchg
lods
push
out
push
movs
jl
les
(bad)
arpl
dec
push
and
inc
pop
clc
ins
inc
jne
mov
aam
pushf
dec
xchg
push
repz
mov
sti
xchg
sub
or
sti
in
inc
xor
sub
add
mov
add
fisttp
in
cs
add
add
mov
das
push
test
add
cmp
push
push
addr16
loop
nop
call
out
outs
sub
(bad)
or
xchg
sti
hlt
push
xchg
daa
pushf
dec
xor
push
push
daa
lea
loope
retf
xchg
out
not
mov
cmps
mov
imul
jbe
adc
jb
(bad)
cmp
icebp
sub
test
jno
mov
out
lods
clc
inc
loopne
mov
imul
push
imul
cdq
mov
pop
fmul
movs
daa
sbb
popf
movs
push
in
scas
fsub
iret
pop
cmp
std
sti
outs
ss
movs
and
jl
jb
xor
call
cmp
cmp
pop
and
xchg
jp
jo
outs
test
mov
out
push
imul
and
imul
dec
test
call
xor
js
push
dec
aas
lock
mov
ja
pop
test
ret
leave
mov
aad
push
inc
jmp
inc
mov
inc
fdivr
ins
mov
or
xor
(bad)
adc
dec
mov
aas
mov
addr16
scas
popa
sbb
mov
fdiv
pop
inc
push
mov
mov
fptan
cld
iret
cmps
shl
mov
cmp
out
pop
pop
or
fcomp
jmp
inc
adc
out
sahf
xchg
jg
add
leave
pop
cmpxchg
mov
retf
icebp
div
out
or
sub
iret
inc
in
in
ins
scas
iret
adc
gs
lock
out
push
push
adc
call
push
mul
pop
aas
out
inc
dec
fdivr
push
movs
sub
xor
sbb
(bad)
js
and
shr
or
xor
mov
(bad)
push
(bad)
mov
ror
cmp
stc
dec
push
or
mov
test
mov
push
adc
dec
lods
sbb
add
(bad)
aas
and
(bad)
add
sahf
pop
shr
into
sbb
mul
jle
jmp
cmp
in
or
mov
xchg
imul
inc
dec
add
add
add
mov
push
sub
mov
jne
push
test
js
dec
inc
jno
outs
jg
jle
push
sbb
mov
cmps
(bad)
clc
adc
lahf
sbb
sbb
ret
(bad)
xchg
mov
jle
sbb
loop
mov
aas
ret
cmp
sbb
xor
scas
call
adc
je
push
ss
add
bnd
rcl
push
push
test
fisttp
push
pop
fsubr
jl
xchg
sub
fistp
mov
mov
jmp
adc
rcl
movs
xlat
push
inc
repnz
inc
and
xor
xchg
imul
out
popa
cmp
scas
setge
push
sbb
adc
inc
cwde
sub
cmp
std
shl
mov
mov
push
in
mov
or
xchg
shl
adc
sbb
mov
cmp
mov
dec
xor
test
adc
daa
fst
popf
pop
add
retf
jmp
add
jmp
(bad)
ja
mov
xchg
ja
inc
xchg
pusha
movs
lds
sbb
mov
ror
xchg
jns
scas
pop
mov
ror
pop
je
cmp
and
and
cs
xchg
lds
adc
add
enter
adc
shr
sub
(bad)
jno
pop
mov
mov
mov
mov
enter
mov
test
dec
pop
into
ja
cwde
out
aad
es
aad
sub
stos
xor
enter
and
or
add
jmp
ds
dec
fwait
jecxz
mov
fisttp
cld
gs
aad
mov
xchg
dec
das
jp
jp
in
mov
cmove
out
out
fsubp
inc
bound
cli
enter
loope
mov
xchg
pop
enter
adc
dec
sahf
stc
shl
shr
or
xchg
and
ds
jb
mov
scas
fadd
push
pop
cmp
(bad)
jp
mov
sbb
sub
cmp
jge
add
retf
aad
jae
jo
movs
sub
add
scas
mov
dec
sbb
cmp
test
loopne
cmp
push
outs
push
jecxz
hlt
sahf
loope
mov
push
nop
jmp
(bad)
and
inc
mov
imul
lahf
in
sub
cmc
push
lahf
mov
test
sbb
mov
sub
mov
inc
push
cli
push
lds
bsr
ret
dec
pop
out
add
dec
aam
mov
test
addr16
fs
cmp
(bad)
popf
ins
cmp
sahf
(bad)
xor
dec
sub
pop
mov
and
dec
dec
repnz
mov
loopne
push
xchg
jns
je
adc
xor
xchg
mov
mov
xor
ja
pop
pop
nop
add
push
dec
gs
mov
jae
fstp
xor
mov
out
mov
fst
fmul
jmp
fnstenv
xor
iret
mov
ins
pop
pop
pop
dec
xchg
stc
retf
std
nop
call
stc
jg
xchg
les
pop
cld
inc
adc
xchg
mov
loopne
fs
or
push
mov
jmp
aaa
neg
aad
js
int
cld
push
in
fs
call
xor
xchg
ja
add
(bad)
(bad)
push
stc
in
repz
(bad)
dec
ds
dec
add
into
dec
imul
mov
sub
pop
push
push
call
and
in
mov
inc
ja
out
jmp
retf
inc
test
call
sti
das
xor
add
sub
imul
je
push
pop
movs
mov
imul
out
cs
push
out
xor
(bad)
lock
out
or
add
add
adc
xchg
div
xlat
lods
arpl
dec
sbb
or
cdq
outs
push
leave
dec
dec
aaa
cwde
pop
retf
mov
test
cs
sahf
enter
pop
xor
(bad)
lock
fcomp
int
es
ins
sbb
mov
add
mov
mov
pop
push
mov
data16
push
jge
dec
lds
cwde
mov
nop
add
sub
mov
cmc
aad
daa
push
ss
push
mov
outs
inc
inc
sbb
adc
cmc
sahf
mov
xchg
fwait
push
push
or
enter
iret
fdivr
push
aad
mov
(bad)
sbb
sbb
push
add
jnp
cli
push
jmp
lock
jo
in
and
bnd
cmp
addr16
in
das
test
(bad)
mov
xor
mov
aas
in
and
xor
aam
push
dec
in
xchg
cmp
je
imul
pop
stos
repz
inc
nop
cmps
ret
outs
adc
loopne
or
sar
xchg
xchg
pop
pop
sbb
mov
mov
add
rcl
out
push
lea
popf
adc
dec
inc
std
push
loop
jnp
in
and
outs
and
ror
jnp
and
dec
mov
fst
test
(bad)
jmp
(bad)
dec
cld
js
inc
mov
movs
test
test
push
add
mov
sar
xchg
(bad)
mov
fs
cmp
jmp
aaa
pop
rol
into
mov
push
pop
mov
aam
cli
push
xchg
push
sbb
xchg
push
call
inc
sahf
jp
call
inc
xchg
sbb
test
inc
fnsave
jmp
cmp
sub
test
add
sub
add
and
sti
jo
cmp
inc
jmp
cdq
push
fistp
loopne
pop
or
mov
dec
cmp
push
push
push
loop
(bad)
mov
ins
in
lods
xlat
shl
xchg
shl
fld
int3
shl
jae
and
adc
test
cmp
aas
sub
adc
div
dec
std
stc
sbb
mov
adc
popa
xchg
mov
jmp
sub
inc
sub
mov
aad
and
xor
mov
lds
cli
loope
push
inc
add
cmp
dec
and
pop
call
jb
enter
push
cmps
fiadd
dec
mov
jg
stos
sub
arpl
mov
icebp
cmp
and
adc
lea
clc
add
iret
xor
xor
fsubp
or
outs
mov
sub
add
bound
or
fsub
sahf
and
or
je
aad
cli
mov
xor
inc
mov
mul
(bad)
fwait
inc
sbb
mov
push
lahf
push
(bad)
out
inc
popf
out
dec
stc
and
pmulhw
cmp
cmp
fs
ficom
cwde
push
and
(bad)
aas
jp
pop
jmp
jge
inc
fdiv
mov
pop
adc
jbe
stos
(bad)
xchg
mov
leave
(bad)
push
xchg
dec
iret
mov
pop
or
ss
pop
pop
jge
mov
int3
sbb
pop
stos
mov
mov
ins
test
mov
(bad)
loop
add
xchg
dec
jmp
in
test
stc
fcom
ins
mov
or
iret
push
arpl
ins
pop
mov
neg
aam
dec
sub
(bad)
and
push
sub
adc
inc
pop
icebp
lds
adc
xchg
test
mov
push
xor
mov
out
sbb
lock
sbb
shl
push
in
pop
fnstcw
and
mov
push
adc
mov
imul
std
inc
jb
sbb
or
push
add
lock
fs
dec
test
cmp
(bad)
add
adc
rcl
iret
icebp
jno
fldcw
or
adc
stos
fcomip
adc
div
fild
push
push
mov
out
jg
test
loopne
ss
pop
jb
enter
push
imul
pusha
dec
loopne
mov
nop
push
hlt
jmp
fbstp
and
inc
fisubr
and
stos
and
cmc
sahf
adc
sbb
ins
gs
dec
dec
pop
jge
sub
pop
movs
fcmovnbe
into
add
pop
fst
hlt
cld
or
push
mov
call
popf
sbb
(bad)
mov
pop
cmps
cmp
sbb
(bad)
adc
add
mov
rol
jp
mov
inc
and
push
and
inc
adc
sub
ds
aaa
pop
hlt
daa
and
mov
ficomp
out
add
rol
pop
pop
dec
mov
cmp
xor
int
arpl
xor
ret
inc
shl
ins
jecxz
pushf
cmp
cmp
and
xor
outs
xchg
xchg
mov
loope
fild
shl
(bad)
ins
jecxz
(bad)
loop
inc
(bad)
mov
clc
mov
or
xchg
jmp
mov
fwait
cmp
cmc
jp
add
mov
add
test
sbb
mov
lahf
sbb
cmp
mov
push
call
sti
ret
and
sbb
bound
(bad)
push
jae
xchg
push
lods
or
(bad)
mov
sub
int
ja
(bad)
(bad)
std
rcl
push
jo
or
fistp
mov
xlat
sbb
or
inc
daa
icebp
adc
pusha
dec
add
jmp
sub
les
stos
aad
jg
mov
sub
push
xchg
icebp
mov
and
sub
retf
(bad)
mov
adc
pop
sbb
stos
es
nop
js
sbb
fcomp
rcr
pop
rcr
and
int
aad
sbb
ins
repz
push
ret
mov
pop
mov
push
xchg
into
jl
cli
rol
out
mov
mov
jb
dec
cli
mov
in
in
inc
pop
int3
fistp
call
pop
ins
cmp
into
or
stos
in
stos
jl
dec
inc
repz
sti
jmp
cmp
jb
sahf
aam
(bad)
lahf
pop
test
pushf
sbb
dec
mov
dec
xchg
and
popf
sar
mov
mov
fild
xor
add
cmp
xchg
jle
jnp
call
push
add
or
dec
mov
das
mov
stos
lahf
iret
xchg
mov
ins
(bad)
sbb
stos
jbe
mov
sub
iret
pop
xor
nop
cmps
push
push
daa
cwde
not
jl
mov
add
mov
out
xchg
xchg
add
and
or
sub
popf
adc
dec
ffreep
mov
mov
stc
(bad)
call
imul
ins
pop
(bad)
dec
add
clc
leave
mov
or
hlt
xor
loopne
fisttp
daa
and
push
les
inc
push
sbb
xor
jecxz
test
jle
icebp
das
mov
sub
mov
lock
test
iret
jno
into
xchg
in
(bad)
add
es
movs
ret
inc
xor
jnp
in
in
jp
xor
out
jecxz
and
jnp
loop
xchg
sbb
inc
sub
xchg
jecxz
pusha
ror
jns
cmc
nop
dec
push
jae
push
add
sbb
xor
cmp
cld
xchg
cs
outs
lods
adc
call
mov
imul
call
fwait
adc
adc
(bad)
ja
(bad)
out
push
in
mov
mov
xchg
or
push
jge
inc
sub
lahf
jl
pop
push
jmp
mov
je
mov
push
mov
(bad)
leave
imul
outs
mov
cmp
inc
mov
add
inc
xor
adc
or
mov
out
pusha
(bad)
enter
test
mov
fadd
(bad)
xchg
mov
push
int3
jp
pop
jbe
sub
or
jb
push
push
cwde
ret
out
sub
enter
outs
ds
cmp
scas
mov
call
xchg
mov
movs
(bad)
push
int3
mov
dec
sbb
popaw
sbb
cmp
mov
mov
aas
mov
mov
or
cmp
imul
rcl
adc
xor
dec
pop
loope
fimul
aad
std
sub
ret
div
scas
cmp
das
mov
cld
adc
cmp
adc
scas
test
pop
mov
call
stc
mov
mov
cmp
repnz
and
mov
lahf
pushf
dec
sar
sub
aas
fwait
test
es
lods
icebp
setae
xchg
mov
cmp
cmps
mov
or
sub
or
inc
mov
out
dec
enter
inc
aas
mov
dec
out
sub
push
aad
cmps
cmp
lds
call
in
ficom
mov
daa
push
ja
or
std
dec
pop
lods
inc
cmp
mov
adc
sub
cmps
inc
jp
imul
mov
adc
jecxz
xor
inc
mov
(bad)
repnz
outs
mov
ss
loop
add
aad
les
add
cmc
lock
leave
daa
aam
and
or
push
inc
mov
lods
mov
fcmovne
rcr
fdiv
jns
and
cmp
push
xchg
mov
popf
or
(bad)
sahf
out
push
adc
sahf
jns
cs
test
aad
loope
dec
xchg
je
int
jl
adc
in
jecxz
xchg
xlat
repnz
push
dec
jp
std
sub
mov
mov
xor
fld
lods
ins
fxam
inc
cmp
fisub
adc
sahf
loope
cmp
mov
push
push
sub
cmps
mov
xchg
xor
scas
xchg
cmps
xor
jo
xchg
addr16
pop
pop
ja
into
and
mov
push
(bad)
mov
cdq
sbb
fdiv
call
out
loop
mov
loop
jnp
cmp
push
mov
or
push
push
out
jg
scas
popa
sub
bound
sub
inc
xor
fisubr
cmc
enter
jne
in
cmp
mov
jnp
shr
je
xchg
pop
inc
jmp
push
loope
cmps
add
(bad)
shl
mov
(bad)
jnp
sbb
fmul
cmps
mov
xor
call
ss
int
sub
ins
jae
into
retf
out
and
pop
cmps
movs
in
or
into
xor
in
jmp
push
sub
pop
sbb
sti
xor
addr16
fnsave
mov
sub
outs
pop
mov
pop
aas
test
or
adc
and
adc
dec
xchg
js
lock
pushf
dec
in
mov
ds
daa
popf
add
add
mov
jmp
shl
(bad)
pop
lock
dec
rcr
mov
jno
addr16
jle
mov
add
xor
ins
scas
and
xchg
(bad)
lsl
loopne
sub
add
push
push
pop
aaa
and
call
dec
mov
scas
test
loopne
cmp
cwde
pop
call
pop
mov
mov
imul
shl
test
add
sbb
mov
pop
push
add
fimul
fwait
arpl
mov
ins
enter
pop
loope
jmp
movs
jo
sbb
cdq
pop
outs
push
pop
scas
test
sahf
(bad)
or
data16
dec
push
test
ret
repz
sbb
das
ins
aam
scas
clc
push
push
hlt
stc
retf
fs
scas
das
ficom
retf
cmp
aam
sti
adc
mov
push
jae
scas
movs
sub
div
push
cwde
inc
xlat
push
xchg
dec
fnsave
adc
mov
xor
clc
jbe
bound
ins
rcl
test
xchg
nop
clc
dec
xor
sub
jmp
cs
pop
inc
sbb
sub
inc
je
ins
test
push
add
or
lds
aad
xor
in
lds
test
or
mov
jecxz
(bad)
mov
sub
pop
retf
das
(bad)
popf
(bad)
push
pusha
push
and
cmp
xchg
test
push
rep
push
jno
push
lds
aas
out
jle
mov
inc
mov
xchg
fnsave
mov
sub
lock
imul
test
mov
inc
test
clc
fs
inc
xchg
xchg
mov
bound
loop
out
jge
sbb
in
loop
add
mov
mov
data16
pop
mov
dec
xor
and
loop
jmp
movs
aam
loop
adc
arpl
test
xchg
jecxz
rol
imul
xchg
mov
cwde
mov
mov
dec
sbb
cs
jae
mov
scas
sar
sbb
mov
adc
ins
xchg
mov
mov
adc
cmp
push
mov
inc
(bad)
cs
fist
ins
add
xchg
inc
ret
sbb
inc
jecxz
push
mov
push
mov
inc
pusha
adc
sti
jns
push
dec
pop
or
clc
cli
stos
adc
lods
or
or
jg
rcr
fwait
aas
call
adc
mov
outs
jmp
push
ins
inc
xchg
cmp
mov
retf
xchg
sti
adc
jl
stc
(bad)
jmp
push
jb
xor
mov
jl
or
aas
jecxz
and
mov
pushf
stos
sahf
mov
pop
not
xor
cld
sbb
push
cld
dec
sub
xor
retf
mov
push
cs
pop
inc
pop
bound
out
cmp
adc
adc
mov
and
jmp
sub
das
mov
ins
out
leave
pop
jno
xchg
xor
inc
and
xor
fs
inc
or
iret
push
jmp
pop
mov
jp
jmp
fucomi
out
sub
xchg
jg
hlt
mov
es
je
xchg
test
and
mov
sub
mov
cmp
(bad)
jmp
dec
scas
cmc
push
push
je
xchg
outs
sub
cs
pop
pop
call
xchg
adc
dec
pop
addr16
pop
push
and
xchg
cwde
lahf
fistp
or
adc
hlt
jmp
iret
scas
push
addr16
ja
fisttp
test
in
push
(bad)
enter
repz
xchg
jno
jno
lods
bound
fst
mov
dec
popa
xor
dec
inc
add
adc
bound
rol
adc
retf
imul
out
(bad)
push
bound
push
push
mov
pop
shl
push
jle
and
and
ins
daa
push
xor
aad
and
inc
stos
lea
retf
mov
test
(bad)
daa
jne
xor
retf
cmp
popa
and
add
test
pop
mov
test
pop
pop
dec
mov
xor
fidiv
jnp
(bad)
sub
sub
xchg
and
add
push
lds
ins
je
popf
jbe
jp
inc
out
cmp
in
and
int
dec
ins
je
pop
inc
aam
adc
pop
aas
loop
mov
mov
jb
das
loop
stc
ds
adc
repnz
sbb
test
daa
dec
xlat
jmp
mov
cmp
sub
out
mov
sbb
enter
sub
inc
dec
mov
cmp
stos
xchg
jmp
mov
sub
inc
loopne
dec
(bad)
aad
or
je
push
adc
mov
into
out
xchg
push
bnd
xchg
es
rol
mov
dec
int3
add
rol
add
sub
retf
gs
xchg
dec
jecxz
es
sub
cmps
dec
in
jae
or
jle
inc
cmp
not
ins
xor
les
xchg
jnp
cmp
xor
mov
dec
mov
mov
add
mov
inc
dec
adc
and
in
(bad)
jo
jne
movs
rol
inc
xor
fsubr
jge
out
push
das
push
js
xor
sub
(bad)
loope
rcl
sub
adc
es
daa
dec
xor
cmps
jecxz
sahf
jae
and
lea
xor
test
mov
dec
dec
sti
call
dec
cli
clc
adc
push
stc
or
inc
sahf
push
xchg
and
cmc
call
fdivr
add
loop
adc
cmp
sbb
mov
fiadd
lods
adc
(bad)
xchg
push
ins
inc
mov
mov
push
(bad)
call
daa
add
out
cmps
sbb
aam
and
icebp
rcl
pop
pop
xchg
into
pusha
fldcw
dec
mov
and
mov
out
ret
mov
xor
repnz
std
dec
retf
cli
pop
stc
pextrw
mov
push
rcr
sti
in
push
sbb
inc
xor
aad
stc
clc
xchg
mov
mov
stos
stos
cmp
daa
xor
in
add
and
cmp
push
ret
pop
sub
call
or
nop
fs
lods
hlt
(bad)
jmp
sbb
add
add
jg
cli
pop
inc
pop
lds
fsub
loope
or
in
test
and
(bad)
retf
push
shl
addr16
or
add
hlt
jns
loop
fcomp
inc
push
js
lds
mov
and
jo
sahf
pushf
dec
std
pop
out
jae
(bad)
leave
cdq
aaa
pop
jmp
movs
fidivr
fstp
add
stc
jle
iret
sar
sysret
push
sub
jae
adc
test
loopne
inc
rol
int3
scas
xor
into
pop
dec
mov
pop
data16
repz
mov
lds
(bad)
cmp
mov
lods
fwait
cwde
push
mov
mov
mov
sub
std
mov
push
mov
(bad)
cmp
ja
jp
xchg
mov
(bad)
repnz
ins
add
adc
pop
xchg
pop
mov
xchg
mov
mov
lahf
mov
mov
xchg
push
or
cwde
sbb
jbe
mov
in
dec
sub
sbb
add
mov
mov
jmp
int3
pop
leave
mov
sub
leave
push
pop
ret
jbe
add
mov
(bad)
xor
movs
cld
mov
fldpi
(bad)
out
ja
push
pop
xchg
push
pop
xchg
outs
test
addr16
mov
or
xor
test
xchg
in
jbe
test
mov
sub
stos
in
fwait
ja
and
lods
mov
add
cmp
fldcw
jmp
xchg
ror
enter
dec
call
add
cmps
call
test
inc
mov
loopne
repnz
clc
clc
xchg
outs
setge
xchg
jmp
fadd
mov
shl
bound
dec
shr
mov
cmp
scas
mov
sti
fisttp
mov
fmul
mov
ja
test
add
int3
lods
lea
lds
cs
xor
outs
sub
mov
cli
sbb
add
mov
xlat
cli
aas
mov
(bad)
sbb
and
adc
sub
push
sar
es
mov
and
or
aam
pop
sahf
mov
leave
retf
call
imul
hlt
cld
daa
add
loope
push
push
int3
xor
pop
inc
jl
shl
daa
test
addr16
mov
cdq
and
or
adc
add
mov
or
push
ret
inc
push
fidivr
nop
loopne
iret
push
mov
loop
xchg
inc
mov
aad
mov
sahf
xlat
das
push
pop
sti
fsubr
dec
imul
aad
push
jp
pop
jae
jmp
jge
int3
movs
cs
xor
shr
lods
jge
dec
aas
inc
gs
out
inc
out
imul
in
(bad)
pop
adc
test
lahf
xor
or
jl
fist
in
ss
stos
cmp
push
movs
jb
mov
lods
sub
repz
lods
fmul
adc
jo
outs
push
aas
pop
add
mov
xchg
xor
adc
sub
sti
mov
dec
scas
and
(bad)
adc
and
bound
pop
add
adc
xchg
int3
in
mov
or
mov
cmp
sbb
jbe
cwde
mov
and
aam
jae
shl
loope
mov
sar
add
push
pop
push
and
(bad)
or
fcomp
fist
cli
ret
fwait
xor
les
pop
add
mov
sti
mov
or
mov
xchg
mov
dec
inc
fimul
loope
ret
push
sub
mov
push
dec
jle
sub
or
stos
enter
push
stos
repnz
dec
jmp
jp
jmp
or
lea
push
ficomp
push
adc
sub
es
iret
adc
mov
into
sbb
inc
call
jae
popa
pop
outs
pop
push
and
pop
loope
cmp
cmp
add
test
aaa
mov
or
mov
in
lahf
sub
std
xor
or
cmps
(bad)
fwait
cli
aam
fs
call
mov
sbb
sbb
push
test
cmp
xchg
and
xchg
sahf
cmp
jb
(bad)
xor
les
jno
fnstsw
xor
jmp
push
pop
fst
inc
aas
and
jne
int
cmp
outs
ret
sbb
mov
cmps
pop
and
xchg
lods
pop
push
dec
pop
push
into
(bad)
aad
daa
mov
ret
add
lea
movs
jge
inc
xchg
cmc
push
pop
cmp
div
sti
clc
ror
sub
jnp
aas
leave
sub
mov
call
inc
sub
or
jns
add
fild
mov
in
dec
cmc
inc
dec
mov
mov
dec
lock
or
and
retf
das
nop
or
(bad)
retf
push
adc
sbb
out
lods
sbb
popa
cmp
call
in
fs
push
jmp
cmps
stos
pop
pop
dec
mov
and
mov
outs
sbb
pop
rcl
mov
sahf
or
pop
aas
cmp
or
sbb
add
sbb
push
jne
dec
imul
add
test
dec
aas
push
push
int3
push
push
inc
bound
popa
add
push
mov
sbb
and
je
push
mov
(bad)
ror
dec
inc
xor
xor
xchg
div
hlt
test
(bad)
pop
mov
aas
sbb
pop
mov
jge
dec
xlat
ret
pop
mov
adc
outs
and
and
std
(bad)
jg
xchg
xor
dec
rcr
mov
lods
xor
mov
fcom
repnz
cmps
jae
out
cld
jg
jle
and
imul
dec
mov
pop
test
test
test
dec
cmp
cmp
stos
ss
es
xor
int
ficom
test
cmp
std
(bad)
mov
leave
pop
pop
xchg
faddp
and
hlt
dec
es
retf
mov
cld
add
xor
lods
xchg
std
dec
cs
scas
xchg
(bad)
cs
mov
mov
cwde
sbb
cs
stc
pop
sbb
mov
jg
pop
mov
adc
mov
mov
popf
aam
mov
xchg
mov
ret
ss
add
jno
sbb
push
xchg
rcr
sbb
icebp
mov
(bad)
jmp
aad
inc
clc
lds
mov
addr16
jmp
mov
cmp
xchg
xchg
sbb
and
push
or
or
outs
jecxz
mov
pushf
enter
loopne
out
pop
or
inc
stos
into
jns
seta
push
inc
outs
mov
jb
push
cld
ins
aad
sub
xor
clc
imul
jecxz
retf
neg
dec
lock
inc
mov
sub
imul
inc
xchg
call
int3
inc
jl
stc
dec
push
fcom
cmp
inc
mov
sub
icebp
ss
push
std
shl
mov
xchg
aam
jae
mov
jg
or
adc
call
sub
add
jmp
clc
and
pop
xchg
in
push
xchg
push
popw
aaa
loopne
neg
mov
mov
xor
sar
rol
les
jmp
sbb
inc
pushf
mov
ins
mov
pushf
xchg
mov
sub
in
dec
xchg
(bad)
sbb
iret
lods
xor
mov
out
inc
inc
sub
add
jmp
sub
test
or
add
ss
cmps
(bad)
pop
outs
iret
mov
fscale
or
adc
ja
push
rcr
mov
das
jb
jecxz
inc
inc
mov
jmp
jle
ret
inc
jl
iret
mov
sbb
shl
outs
inc
jl
jne
iret
in
xor
sub
mov
call
or
xchg
dec
push
stc
test
daa
jg
add
in
fst
das
clc
call
(bad)
add
imul
jecxz
dec
data16
js
sti
jb
fild
push
enter
aad
and
pop
add
jo
scas
imul
sbb
sub
shl
mov
add
cwde
push
jae
inc
hlt
inc
and
sbb
ins
call
pushf
mov
mov
jo
ret
ja
les
call
cs
cmps
adc
jae
ror
es
mov
repz
xor
std
xchg
ins
ret
(bad)
pop
mov
jl
pop
test
mul
mov
cmc
idiv
aaa
mov
add
enter
mov
lods
js
jl
cdq
dec
pushf
shr
fld
pop
hlt
pop
cld
mov
jns
aam
stc
adc
jno
sub
jb
scas
jno
das
jecxz
imul
xchg
or
idiv
test
pop
repnz
call
fs
pushf
or
mov
mov
dec
mov
shr
xor
sbb
nop
sub
cld
arpl
xor
add
and
imul
addr16
pop
sti
xor
int3
sar
cmps
push
in
mov
jo
push
hlt
and
imul
fld
ss
or
adc
aad
jae
inc
add
push
movs
jl
dec
jo
addr16
aaa
adc
xor
lahf
cld
arpl
in
jbe
adc
ja
adc
rol
push
inc
clc
jecxz
popf
and
es
test
sbb
jns
xor
adc
mov
xor
xchg
call
test
cmps
inc
fistp
xor
outs
into
mov
ss
lds
sahf
dec
lds
rol
mov
mov
(bad)
lds
mov
inc
push
out
push
cmp
cmp
and
int
popf
(bad)
loope
mov
and
int3
jp
push
cmp
cli
and
mov
cmp
fs
out
outs
adc
cdq
mov
clc
xchg
cmps
scas
mov
and
xchg
sub
leave
in
es
pop
mov
(bad)
imul
or
inc
mov
imul
arpl
cmc
imul
xchg
add
ret
sbb
(bad)
push
xchg
gs
and
mov
int
int3
push
fyl2x
das
add
mov
and
ja
retf
mov
xchg
pop
xor
hlt
(bad)
cld
dec
mov
int
(bad)
lahf
shl
sti
sbb
xchg
xchg
cdq
pop
pop
jnp
lods
push
cmps
push
sar
push
pop
imul
push
adc
sbb
ins
push
(bad)
mov
retf
jb
mov
lods
mov
(bad)
push
das
lds
daa
mov
aam
shr
mov
pop
add
jne
jl
or
ins
call
add
mov
pop
pop
shr
shl
shl
and
test
pushf
cmc
in
sub
sub
mov
icebp
mov
mov
hlt
fld
test
sti
sbb
mov
fadd
pop
dec
mov
xor
ins
addr16
fmul
sub
add
and
xor
jmp
push
push
scas
out
lods
jmp
and
shr
add
jl
pusha
sahf
xchg
(bad)
cld
aaa
inc
add
test
(bad)
push
inc
das
sub
daa
xchg
std
adc
jo
jmp
mov
adc
fwait
or
pusha
clc
push
das
pop
hlt
dec
mov
jnp
lds
mov
push
inc
jmp
push
mov
inc
mul
pushf
xlat
std
pop
aaa
cmpxchg
jns
rol
rcr
ss
pop
jbe
adc
sbb
or
ins
icebp
mov
mov
inc
push
(bad)
cld
xor
scas
es
jmp
jecxz
arpl
repnz
into
std
gs
adc
mov
scas
int3
(bad)
push
xor
mul
cmp
out
nop
mov
mov
adc
adc
xchg
mov
mov
(bad)
icebp
clc
repz
sbb
mov
fsub
aaa
retf
adc
xchg
jmp
cmp
fist
(bad)
push
xor
pop
cmp
adc
outs
cmp
daa
mov
rcr
ror
(bad)
les
adc
xor
pop
and
and
rsm
jmp
in
sbb
cmp
add
mov
push
and
sar
les
mov
addr16
nop
push
daa
push
pop
xlat
in
jge
pop
push
sub
retf
mov
or
mov
mov
lahf
jne
mov
clc
fild
dec
mov
sub
imul
(bad)
daa
stc
sti
retf
push
push
fwait
mov
ds
cmp
loope
imul
pusha
cmc
jmp
dec
xor
jo
and
fdiv
add
aad
mov
add
lahf
popf
mov
in
loop
jecxz
mov
dec
adc
cmp
call
push
mov
mov
std
call
rcr
xchg
jecxz
push
cmc
shr
adc
clc
imul
shl
ins
add
inc
sub
or
inc
in
mov
jae
rol
(bad)
and
pop
ret
push
add
outs
xchg
jl
mov
arpl
sbb
call
aaa
xor
out
cmp
(bad)
cmp
inc
mov
popf
scas
sti
mov
stos
xlat
fwait
idiv
repnz
out
fs
xchg
popa
mov
pushf
mov
mov
ret
aas
cld
mov
out
jbe
movs
push
stos
mov
fsubrp
sbb
mov
mov
sbb
mov
sti
(bad)
push
ja
adc
fldenv
add
jo
mov
fwait
out
push
out
dec
pop
add
mov
jmp
dec
xchg
(bad)
imul
icebp
adc
shr
dec
jg
ins
call
jp
in
data16
xchg
cmps
push
sub
xor
mov
mov
jbe
push
bound
test
stos
(bad)
call
stc
xchg
in
jmp
mov
xchg
cdq
jb
cmp
retf
cwde
pushf
retf
jae
jmp
inc
test
out
out
enter
jbe
inc
mov
ins
inc
hlt
mov
xor
xchg
xor
jl
push
sti
rcr
sbb
mov
sub
pushf
and
jecxz
scas
out
lds
push
js
mov
cs
push
mov
lods
repnz
ret
fiadd
je
dec
dec
push
out
cdq
jg
adc
or
push
scas
addr16
xor
ficomp
out
fwait
div
dec
lahf
addr16
ins
add
lahf
stos
jnp
xchg
stos
xor
pop
jecxz
inc
pop
movs
and
xchg
in
mov
(bad)
or
or
in
scas
and
mov
ins
xchg
mov
call
scas
mov
popa
sti
test
mov
push
aam
dec
xchg
adc
das
xchg
add
pop
outs
mov
dec
mov
loopne
jo
mov
mov
test
sbb
nop
cmp
ja
lods
imul
loop
sahf
adc
addr16
inc
in
dec
inc
jbe
sub
add
jo
adc
in
adc
and
pop
and
fist
dec
je
call
xchg
popf
jmp
xor
pop
imul
das
cdq
call
mov
int
loopne
mov
jmp
scas
out
pushf
dec
lods
sbb
clc
sbb
mov
cs
aam
jge
jecxz
and
out
sti
ins
loop
jnp
add
pop
ss
or
or
mov
inc
rcl
outs
in
gs
scas
jnp
xchg
push
mov
lods
jg
call
and
or
and
mov
cld
mov
ss
cld
jo
mov
mov
inc
adc
shl
inc
xchg
imul
push
adc
out
loop
or
mov
mov
aad
and
adc
mov
cmp
jno
adc
addr16
(bad)
fdivr
shl
test
pushf
xor
popf
sbb
sub
sahf
inc
jo
(bad)
inc
xchg
add
cmp
mov
and
mov
xchg
retf
imul
pop
fstp
aaa
jmp
cwde
mov
in
call
fs
jne
dec
(bad)
push
pop
fdiv
les
cli
call
je
lahf
cmp
mov
pop
and
fisub
rcr
mov
stc
lods
sub
xchg
pop
push
cdq
(bad)
scas
cmp
imul
mov
std
mul
push
jle
jae
jl
cmps
adc
test
(bad)
mov
and
xor
lock
cmps
iret
clc
jbe
sar
xchg
adc
sbb
popf
cmps
movs
js
repz
daa
iret
jnp
leave
add
add
jno
pop
sub
and
rcl
daa
ss
sub
add
in
out
div
inc
jecxz
xchg
jmp
retf
enter
aam
loopne
jg
and
xchg
data16
cmp
dec
imul
daa
pop
mov
dec
in
fwait
pop
mov
xor
push
clc
daa
xor
aam
xor
inc
test
mov
pop
sbb
sbb
(bad)
in
or
jae
adc
and
mov
call
es
or
push
ins
pusha
mov
xor
or
mov
(bad)
add
push
hlt
pop
adc
icebp
xor
aad
pop
pop
adc
mov
stc
sub
int3
pop
aas
scas
push
xor
retf
shl
arpl
pop
fist
lahf
ficom
fsub
xchg
adc
in
push
lods
daa
ja
fnstcw
ins
jo
sub
in
push
sbb
mov
sbb
push
into
or
addr16
inc
in
mov
pop
pop
std
and
mov
dec
mov
je
cmp
xchg
or
fst
pusha
mov
pop
out
inc
rcl
mov
xchg
xor
fcom
adc
mov
xor
cwde
xor
fild
push
test
sub
aas
and
xchg
jb
inc
xor
push
faddp
inc
xchg
cmps
or
pop
add
and
pop
loopne
call
cli
int3
fsub
dec
xchg
or
push
cs
push
push
adc
add
push
stc
in
dec
(bad)
mul
jg
movs
push
js
test
cmps
mov
jbe
(bad)
icebp
mov
xchg
imul
test
cli
xchg
mov
add
shl
movs
js
mov
push
xchg
outs
mov
cmc
dec
jmp
scas
sub
jle
ret
sbb
ret
popf
into
jnp
dec
cld
jae
repnz
leave
hlt
outs
subps
push
daa
pop
dec
push
(bad)
int
cwde
inc
mov
mov
sub
mov
xchg
or
xchg
sub
jb
and
xor
and
mov
sahf
js
lahf
cmp
bound
sti
int
jg
xchg
ins
das
push
sbb
div
fwait
jo
mov
xchg
cmp
inc
mov
mov
add
inc
xchg
or
outs
shr
ins
jb
push
inc
jae
shr
ret
xchg
push
pop
jg
shl
hlt
mov
cmp
adc
rol
repz
int
test
xchg
sar
clc
push
inc
pop
daa
sbb
pop
xchg
mov
add
sub
pop
and
pop
aad
fnstenv
pop
std
jne
adc
outs
inc
vpmullw
retf
xor
pop
mov
inc
and
arpl
mov
mov
or
jns
hlt
jns
push
cwde
fisubr
jno
xor
sbb
jno
jns
out
aam
loop
mov
test
cmp
call
cli
xor
bound
(bad)
jnp
jle
imul
cwde
and
mov
popf
dec
xchg
mov
(bad)
cld
popf
ret
lahf
mov
arpl
dec
sti
int
dec
or
pop
stos
movs
(bad)
pop
ss
movs
outs
pop
xchg
(bad)
aas
cmp
xchg
mov
and
pop
ja
adc
mov
pusha
mov
data16
ja
daa
mov
inc
ins
hlt
jmp
pushf
pop
aad
in
mov
test
push
cs
hlt
jbe
into
lea
inc
inc
int
pop
add
ja
fisttp
gs
or
out
ret
cmc
cmps
push
push
in
ss
cwde
jge
stc
mov
inc
xchg
idiv
sbb
frstor
mov
mov
sub
xchg
sahf
jmp
loopne
push
sti
popa
outs
data16
(bad)
sub
enter
pop
outs
call
ror
xchg
vpminub
push
pop
fidiv
popf
and
jno
sbb
dec
pop
test
inc
inc
sbb
xacquire
sbb
push
call
out
mov
add
mov
cmc
pop
xor
xor
and
(bad)
xchg
stos
(bad)
add
lock
jg
in
ss
or
ja
stc
cs
inc
fs
mov
inc
rcl
add
test
imul
jle
test
add
mov
hlt
push
fs
mov
sbb
or
mov
pusha
sbb
pusha
adc
daa
test
jne
or
aad
inc
dec
imul
mov
mov
pop
outs
aam
add
pop
mov
xor
add
cdq
or
mov
push
inc
loop
nop
xor
gs
or
pushf
ins
shl
mov
mov
dec
inc
jl
retf
jne
and
cmp
sbb
out
pop
jle
in
push
cli
pusha
popf
jns
xchg
fisubr
(bad)
ja
loop
adc
sti
xor
inc
clc
cmps
dec
or
or
inc
out
pop
inc
mov
mov
mov
cmps
retf
sbb
xchg
dec
lods
cld
xchg
cmc
sbb
cmps
jno
xor
fwait
shl
fcmovnbe
cwde
mov
inc
popf
push
mov
out
inc
sbb
mov
scas
int
daa
sti
repnz
xchg
xchg
pop
and
in
les
mov
jmp
push
loopne
pop
pusha
and
test
outs
dec
lock
imul
sub
fisttp
dec
cmps
call
es
hlt
mov
jo
mov
lea
xchg
stos
stc
sbb
(bad)
mov
jp
fbstp
das
xor
fcom
icebp
leave
bound
inc
das
leave
lods
nop
or
pop
push
out
adc
mov
xchg
mov
inc
in
inc
inc
or
push
fdiv
xchg
jne
xchg
sbb
mul
fld
popa
into
rcl
lods
sahf
mov
push
jecxz
mov
rcl
std
and
pushf
iret
retf
cmp
adc
sbb
push
ja
jns
xor
mov
sub
push
imul
jle
cmp
mov
pusha
jle
rcr
stc
into
sar
inc
into
jae
xor
lea
lods
fs
nop
xor
adc
sub
inc
add
or
cli
push
push
outs
jbe
xchg
push
sbb
mov
or
push
inc
mov
pop
mov
popa
add
dec
mov
sub
jp
push
jl
lds
(bad)
jns
dec
dec
ins
std
cwde
and
outs
and
sbb
in
mov
test
cmp
mov
mov
ss
js
pop
lods
aas
fst
cmp
sti
lods
sahf
loope
pop
sub
sbb
ret
adc
in
push
sub
inc
scas
repz
mov
in
push
or
je
push
test
retf
loope
out
hlt
or
loope
xchg
(bad)
mov
sub
call
ja
push
mov
inc
in
mov
cld
mov
xor
jg
mov
push
or
arpl
cmp
retf
cmp
mov
sub
scas
mov
call
pop
repnz
out
(bad)
xchg
xor
jns
dec
ja
or
add
and
sub
cmp
int
push
popf
cmp
sahf
xchg
xchg
xchg
enter
shl
add
push
retf
dec
(bad)
int
imul
mov
dec
div
and
and
jmp
fwait
sbb
and
mov
popa
xchg
add
and
dec
leave
cli
std
(bad)
dec
and
xchg
push
scas
inc
cli
add
mov
inc
fptan
mov
leave
dec
and
inc
es
loopne
clc
in
jae
xchg
mov
sbb
mov
xchg
add
iret
mov
outs
(bad)
popf
pop
jmp
push
daa
xchg
shr
jnp
mov
jb
dec
push
jmp
and
adc
pusha
lods
jge
in
fnstcw
xchg
cmp
repz
(bad)
je
or
or
arpl
adc
push
and
test
lds
in
ret
dec
cmp
or
fnstenv
icebp
(bad)
ror
pop
jae
jnp
mov
xchg
fs
repz
popa
ins
push
(bad)
movs
jo
data16
push
enter
jp
jecxz
inc
lahf
jecxz
xor
pop
stos
repnz
add
mov
dec
imul
jp
or
lds
shl
push
jae
enter
das
xor
push
add
jle
dec
aam
sar
adc
lds
fidivr
popf
aam
(bad)
shl
push
(bad)
and
add
xchg
or
(bad)
icebp
sub
test
ja
sub
push
pop
dec
sahf
adc
movq
fwait
ins
and
or
cli
or
test
inc
xor
dec
jo
popa
cdq
pop
pushf
int
mov
or
outs
(bad)
mov
jle
movq
push
xchg
movd
into
xor
pop
int3
jmp
pop
leave
lods
jge
cmp
jl
and
out
ins
pop
shr
sub
jmp
cmp
(bad)
ror
cmps
and
sti
shl
adc
pushf
jno
sbb
fdiv
sub
cmc
add
mov
pop
mov
mov
cmp
sub
enter
lahf
inc
xor
in
dec
xor
sbb
movs
push
and
push
fistp
xchg
jg
or
outs
leave
pop
jbe
out
imul
test
clc
mov
je
push
ror
imul
ror
pop
call
mov
stos
sahf
jge
mov
mov
mov
rcl
push
(bad)
lahf
stos
shl
jb
jmp
stc
into
sysenter
and
ss
and
xchg
movs
clc
pop
mov
mov
cmps
pop
inc
add
das
xchg
aaa
jl
mov
mov
mov
(bad)
hlt
or
cmps
outs
mov
and
pop
add
mov
mov
fs
imul
mov
adc
call
jle
mov
or
push
push
mov
xchg
pop
cmps
sub
xlat
or
xor
xor
pop
test
xchg
out
and
ins
pusha
pop
popa
jl
mov
jmp
imul
in
lahf
lea
imul
(bad)
loopne
or
test
sub
inc
ret
lods
pop
daa
gs
arpl
cld
push
dec
lods
push
cmps
mov
int
rcr
adc
pop
out
dec
(bad)
icebp
xor
cli
cmp
test
and
cld
stos
cmovge
and
repnz
sub
jb
push
inc
stc
xor
cwde
fsub
xor
jb
jg
sub
ret
mov
ror
aad
leave
cmp
and
jbe
leave
inc
lds
add
stc
clc
lahf
mov
test
xchg
xchg
mov
jge
test
lods
jb
lods
test
dec
mov
jo
fs
fisubr
hlt
adc
es
icebp
xchg
ret
arpl
cmp
push
cmp
pop
add
cmp
push
mov
cmpxchg
xchg
fsubr
push
call
jge
cmc
pusha
(bad)
mov
daa
push
ret
and
(bad)
call
movs
ins
xor
push
sbb
mov
das
loop
pop
test
xor
lea
mov
cmps
imul
daa
repz
outs
sub
cmps
(bad)
xchg
(bad)
sub
imul
out
and
(bad)
mov
repnz
jle
jne
xor
repnz
outs
(bad)
and
and
pop
adc
xor
cmc
rol
in
outs
popf
neg
mov
loopne
mov
sbb
xor
and
push
jns
(bad)
push
xchg
add
push
xchg
xor
inc
mov
sub
jo
push
dec
fld
push
fist
push
and
cmp
cmp
add
aam
push
mov
movs
in
inc
ss
fimul
imul
inc
mov
scas
outs
or
ins
sub
xor
inc
cmp
fcomp
sbb
dec
fs
mov
pop
mov
ss
mov
movs
xor
lods
or
or
enter
and
mov
mov
mov
dec
test
mov
sahf
out
mov
cs
repz
cmps
jg
movs
add
call
adc
xor
fcomip
pop
lds
aam
je
push
pop
sti
inc
adc
fld
jmp
sub
sbb
adc
inc
push
fbld
sbb
cmc
xchg
leave
enter
inc
sar
js
out
in
fimul
jge
ror
icebp
mov
jl
xchg
cmp
dec
xor
ret
fdiv
xchg
test
dec
cmp
cwde
out
in
in
lahf
xchg
xor
enter
hlt
ret
(bad)
mov
outs
or
mov
stc
shl
popa
dec
mov
(bad)
add
or
sbb
fbstp
pop
mov
popa
test
xlat
not
mov
test
test
push
mov
outs
mov
jg
add
test
int
inc
mov
mov
xor
sub
shl
ds
xchg
icebp
int3
adc
jge
aam
and
cmps
out
sbb
dec
shl
push
aaa
sbb
sub
and
into
push
jb
cdq
dec
retf
push
lods
call
or
inc
icebp
fwait
push
add
mov
pop
push
mov
test
lods
cdq
inc
fnstcw
sub
cmp
add
test
retf
pushf
and
fcmovnbe
or
ror
ror
mov
add
jmp
fist
mov
pop
push
sbb
inc
mov
cmp
sub
mov
cs
stos
and
mov
pop
or
jp
add
jae
pusha
mul
sbb
mov
push
xor
into
stc
xor
outs
adc
xor
lods
test
mov
std
aas
dec
stos
sbb
mov
mov
adc
stc
sahf
mov
and
xor
cld
pop
js
dec
retf
das
int3
jno
popa
call
gs
pop
push
sbb
cmp
call
jg
cmp
mov
dec
adc
scas
repnz
mov
int
or
sbb
xchg
ror
aad
cmp
cmp
shl
mov
sbb
xchg
jne
cwde
fs
pop
pusha
neg
ds
shl
add
rol
sbb
sub
call
mov
mov
call
xchg
es
aam
rol
cmp
dec
mov
inc
lock
or
movs
retf
fimul
pop
sbb
loopne
cli
or
mov
in
std
ja
aaa
inc
push
adc
xor
xchg
mov
pop
adc
mov
mov
(bad)
call
pushf
jle
cmp
cmp
push
sub
scas
inc
shl
mov
jnp
test
scas
sbb
dec
pop
pop
shl
loopne
or
sbb
andps
jnp
add
jg
idiv
xchg
idiv
dec
dec
mov
cmp
or
fmul
jg
daa
repz
mov
test
dec
sub
dec
sbb
jp
ret
outs
(bad)
mov
cmp
cld
or
cmp
(bad)
cdq
outs
mov
push
iret
inc
test
mov
jnp
inc
jnp
jb
push
(bad)
cmp
in
add
push
mov
inc
movs
ds
out
test
daa
nop
jns
mov
movs
out
bound
xor
inc
lahf
add
add
out
out
cs
or
add
dec
mov
shr
xchg
push
xchg
fldenv
je
(bad)
lods
push
pushf
mov
or
jge
icebp
mov
push
push
mov
adc
mov
cmp
xchg
aam
cld
(bad)
push
lods
jns
sbb
push
cmp
add
dec
sti
js
mov
inc
push
xchg
xchg
ins
add
jecxz
arpl
fdivr
daa
(bad)
sub
imul
xlat
dec
xlat
xor
jmp
sub
add
je
push
scas
adc
inc
mov
mov
ja
enter
(bad)
idiv
adc
push
(bad)
icebp
and
push
jle
out
or
inc
pop
shl
aad
jae
or
cmp
mov
sub
gs
ret
daa
stc
dec
out
pop
in
aad
je
(bad)
ficomp
push
je
hlt
mov
sbb
and
mov
out
inc
sub
sbb
mov
mov
dec
push
(bad)
cmp
push
lahf
jo
lds
cs
cmp
loope
xchg
mov
pushf
shl
jmp
adc
cmps
push
(bad)
sbb
outs
fisubr
iret
mov
xchg
mov
cmp
mov
or
pop
iret
xor
cld
sbb
pop
mov
inc
dec
xlat
pop
jle
adc
aam
sub
rcl
fwait
(bad)
mov
dec
pushf
adc
xor
dec
mov
and
arpl
push
rcl
retf
xchg
lods
mov
les
inc
xchg
adc
hlt
repz
mov
cmp
mov
sahf
push
push
push
cmc
sub
call
inc
mov
dec
dec
bnd
les
in
scas
int3
or
(bad)
xchg
jle
scas
xchg
dec
sbb
or
imul
mov
xchg
loope
add
in
sbb
ds
movs
dec
jb
sbb
scas
or
ds
and
cmp
fild
aam
sbb
adc
int
jl
nop
gs
jge
sub
adc
icebp
inc
in
ds
in
loop
test
out
sar
cmps
push
rcl
or
in
ret
loop
in
jb
lahf
cmp
mov
lods
scas
mov
fs
add
adc
pop
dec
(bad)
pop
or
data16
lds
into
(bad)
stc
dec
popf
repnz
pop
pop
cli
iret
rcl
or
xchg
pop
mov
aad
sti
xchg
fisttp
test
cmp
outs
or
sub
pop
xchg
setae
pushf
cs
cwde
sbb
mov
push
xor
sub
addr16
or
xchg
and
sahf
push
fmul
aaa
mov
das
cli
aas
and
stos
cmps
adc
mov
imul
es
push
adc
cmp
ret
ins
inc
mov
xor
sbb
cli
sbb
(bad)
mov
in
push
aaa
xor
call
lock
inc
push
scas
push
sbb
scas
(bad)
jb
push
(bad)
je
ja
dec
lock
popf
xchg
fistp
in
in
test
or
test
inc
sub
push
push
es
dec
repz
ss
jle
mov
call
mov
adc
fisub
imul
(bad)
push
cmp
icebp
stos
lds
enter
push
rol
dec
mov
pop
inc
jmp
jne
dec
xor
mov
jmp
xor
push
push
push
test
pop
and
in
dec
sub
adc
imul
push
inc
jns
(bad)
xor
pop
and
mov
jbe
mov
dec
add
jbe
stos
mov
loopne
adc
sbb
mov
aaa
cmp
dec
(bad)
fcomp
add
rcl
mov
movs
mov
cs
je
scas
stos
and
mov
push
out
cmp
scas
dec
aad
pop
inc
das
sub
add
ror
movs
sahf
mov
arpl
retf
jmp
pop
nop
xchg
call
xor
aaa
rcl
mov
shr
sbb
cmps
dec
dec
adc
mul
jbe
mov
jecxz
fimul
add
push
pop
imul
xor
xchg
adc
ror
test
cmp
xor
movs
int3
sbb
sbb
sbb
std
and
mov
pusha
inc
or
test
rol
mov
push
jl
jl
inc
out
push
popf
jae
sti
rol
pop
mov
inc
call
cmp
mov
das
cli
scas
inc
ret
gs
or
or
lods
cmps
xchg
fiadd
pop
push
int
xor
fst
dec
or
mov
dec
into
test
loope
in
pusha
int3
fnstcw
fstp
sahf
mov
pop
mov
jl
rol
in
add
sub
pop
inc
xchg
xor
inc
or
jg
fucomip
inc
cs
je
ins
push
mov
xchg
push
mov
fcom
retf
cmp
fistp
test
iret
inc
in
xor
jge
cmc
or
nop
xchg
neg
gs
inc
ss
adc
jmp
nop
push
cmp
jno
(bad)
jecxz
repz
xchg
sub
adc
mov
call
inc
jno
xchg
sbb
call
(bad)
lahf
push
(bad)
popf
imul
jp
mov
rcl
inc
rol
mov
and
adc
mov
xchg
or
sub
ds
cli
gs
sahf
jl
push
arpl
fisttp
cmps
repnz
jbe
ja
popw
pusha
gs
push
push
jns
inc
push
mov
xor
adc
leave
push
retf
out
cmp
adc
test
ret
mov
pop
sbb
(bad)
loop
xchg
adc
adc
mov
je
push
adc
jno
rsqrtps
jae
mov
dec
xor
retf
mov
and
icebp
jns
sbb
popf
push
pushf
inc
stos
sub
popf
sar
or
pop
jne
mov
jne
dec
cmps
sbb
sti
inc
in
fisttp
scas
and
mov
sar
mov
mov
push
addr16
jg
mov
popa
fnsave
lea
adc
shr
xchg
xchg
imul
out
dec
sub
adc
nop
sub
ins
div
lea
and
mov
xor
scas
xchg
fistp
in
pop
stc
mov
out
aas
fsubr
sbb
aas
push
cmps
jae
ret
test
cmp
push
xor
ja
cwde
je
mov
icebp
lods
dec
mov
xor
or
jae
hlt
int
xor
cmc
adc
inc
ja
cmp
imul
mov
lea
cs
call
mov
jg
(bad)
scas
popa
fistp
dec
mov
repz
adc
sub
fwait
movzx
sbb
lods
(bad)
xchg
jb
cmp
xchg
mov
push
mov
mov
mov
mov
push
sub
out
or
mov
movs
imul
cli
push
xlat
mov
fs
stc
outs
xchg
cli
int
jp
push
fbstp
adc
outs
push
pop
mov
dec
shl
mov
xchg
lods
or
xchg
std
mov
dec
mov
add
and
das
sub
call
push
inc
mov
xor
mov
push
sub
sub
pop
outs
movs
sub
or
in
loope
sahf
imul
add
lods
mov
sub
clc
fild
and
(bad)
jns
leave
cld
out
sub
int
sub
dec
push
sub
repz
sbb
xchg
fist
fiadd
lods
xchg
into
neg
nop
cld
loopne
test
and
movs
jg
fcom
jbe
mov
retf
fiadd
cmc
lods
repnz
loop
sbb
mov
and
test
lock
shl
xchg
test
mov
mov
cmp
hlt
mov
mov
shl
lahf
fadd
lock
adc
mov
dec
arpl
rcl
sub
mov
dec
mov
dec
jmp
push
adc
in
cmp
adc
daa
add
mov
dec
stos
in
arpl
and
mov
aad
xrelease
xchg
cmp
sbb
lods
mov
jecxz
xchg
rol
cmps
pop
dec
lahf
jl
jmp
mov
movs
xchg
retf
in
mov
sub
lahf
adc
fld
in
je
neg
sahf
das
sbb
xor
adc
dec
jnp
sti
cmps
nop
inc
and
inc
or
sub
stos
xchg
jge
rdtsc
sbb
mov
lods
jae
sub
dec
pop
sub
xchg
lock
enter
xchg
enter
mov
movs
jns
inc
xor
pop
or
xchg
jbe
mov
xchg
xor
jecxz
mov
iret
and
push
push
add
sub
push
xchg
jg
retf
fstp
add
xchg
lods
mov
sbb
popa
jae
cmc
sbb
pusha
dec
fdiv
pop
push
jle
out
out
pop
fs
test
call
cli
mul
imul
xchg
adc
jmp
scas
push
xchg
inc
lods
stos
fmul
lods
hlt
xor
imul
pop
or
(bad)
cmp
stos
xchg
inc
sub
ret
enter
ss
cmp
mov
sub
inc
sub
jl
outs
mov
push
out
mov
and
push
(bad)
aam
ja
sar
cmp
ja
jmp
mov
mov
test
ins
cli
(bad)
xor
sub
call
pop
dec
call
push
push
iret
enter
out
dec
lea
inc
mov
add
popf
and
jae
xchg
bound
rcl
pusha
mov
mov
and
mov
push
pop
sahf
jmp
movs
mov
loope
inc
mov
les
and
fstp
jmp
ins
and
pusha
stc
lods
aam
add
imul
inc
call
adc
rol
cs
xchg
add
cli
cmp
xchg
adc
into
(bad)
cwde
mov
lods
mov
xor
test
pop
and
and
aam
mov
xchg
pop
bound
mov
fisubr
jae
jecxz
rcr
xchg
ins
cwde
stc
ret
ret
test
iret
jne
lea
test
iret
(bad)
xchg
inc
or
in
aaa
lods
mov
jno
ins
cmp
test
xor
std
mov
dec
ss
stos
rcl
dec
mov
jmp
mov
push
xchg
xor
bound
sbb
pop
repz
cmps
push
in
stc
mov
fwait
dec
les
adc
mov
and
(bad)
jge
add
aaa
cmp
cmps
pop
movs
fist
xchg
mov
sub
cmps
mov
mov
inc
dec
movs
add
inc
test
or
push
jle
sub
push
xchg
mov
shl
xor
add
sub
jecxz
(bad)
adc
shl
in
arpl
sub
mov
je
or
call
adc
addr16
xchg
les
mov
dec
inc
mov
mov
adc
gs
and
das
sbb
push
frstor
sti
adc
loopne
xchg
push
add
cli
cmp
aad
cmps
add
stc
adc
add
js
in
add
mov
rcl
sti
add
in
pop
mov
mov
xor
inc
sahf
je
push
mov
in
in
sub
add
inc
aad
add
das
sub
mov
loope
out
test
pop
xchg
or
in
pop
push
test
cli
mov
jl
sub
mov
sbb
arpl
push
pop
into
jb
dec
ret
mov
cmps
sbb
in
xor
cli
lods
pushf
test
add
or
cmp
adc
add
xchg
mov
(bad)
scas
pop
popf
push
jb
test
xor
cmp
pop
call
int
xchg
mov
cmp
add
sbb
arpl
inc
jns
(bad)
sub
cmps
inc
push
pop
lock
mov
aaa
repnz
aam
jnp
inc
jne
test
adc
stos
add
(bad)
ret
mov
es
sub
(bad)
cmp
(bad)
aam
(bad)
out
cmp
clc
jne
add
push
movs
cmp
sub
cmp
in
xor
adc
adc
or
push
or
jp
ret
lock
or
push
add
cmps
gs
sar
(bad)
xchg
mov
pop
xchg
pop
mov
aaa
mov
sub
inc
(bad)
das
mov
jae
shl
(bad)
js
ins
inc
and
pop
sub
xor
xchg
pop
jae
cmp
and
rep
sub
xrelease
xchg
outs
dec
out
loopne
popf
and
repnz
mov
push
rcr
sub
xlat
mov
xor
dec
xchg
xchg
ins
xor
sti
leave
das
loope
rol
aas
or
jmp
jecxz
enter
enter
mov
inc
adc
jmp
push
xor
inc
sbb
gs
loopne
out
pop
stos
call
js
stc
push
push
ins
(bad)
fcomp
pop
xchg
push
inc
push
dec
mov
and
jl
ror
leave
cmp
retf
push
and
add
pop
repz
push
ja
mov
adc
bound
(bad)
or
pop
cmp
fisubr
repz
mov
adc
(bad)
loop
mov
fiadd
push
mov
sbb
(bad)
jg
les
adc
jp
cmp
imul
popa
mov
js
xor
xor
fstp
(bad)
fadd
or
and
cmp
jmp
aam
mov
sub
das
mov
inc
pop
xor
and
inc
mov
mov
cmps
fs
inc
call
adc
repnz
sub
aaa
sahf
mov
mov
test
dec
call
xor
inc
cdq
inc
pop
in
aaa
push
sub
es
and
or
sbb
popf
xor
stc
(bad)
xor
test
add
jmp
ror
into
or
mov
jbe
mov
dec
xchg
push
xchg
sub
cmps
xchg
push
fldcw
movs
ret
pop
add
jns
enter
test
les
dec
fwait
inc
mov
xchg
lods
xor
or
jge
cmp
xchg
call
and
pop
cld
in
mov
outs
out
mov
add
cli
sub
inc
mov
add
fild
add
test
sbb
popf
in
and
inc
aam
nop
loop
cmp
sbb
adc
loopne
(bad)
inc
loope
sub
mov
nop
in
and
stos
xchg
mov
sbb
(bad)
xlat
scas
fcmovnbe
jb
jno
and
aaa
jmp
mov
mov
pop
cs
ins
sbb
gs
imul
mov
cmp
cmp
fsub
ds
xor
xchg
int
cmp
push
xor
mov
arpl
out
js
sub
cld
sbb
xchg
inc
mov
cmp
popf
in
sti
inc
sti
ror
mov
mov
jle
pusha
std
movs
xchg
in
nop
sub
pop
push
dec
stos
in
dec
mov
sub
std
inc
cmp
pop
push
ret
add
adc
std
dec
inc
fdivr
or
mov
jne
jecxz
lea
mov
xchg
idiv
mov
adc
mov
push
push
arpl
push
les
bound
mov
dec
mov
in
mov
jo
or
lods
sub
sbb
jno
pop
xchg
jbe
dec
shufps
sub
mov
mov
and
ins
adc
jecxz
pushf
pop
mov
mov
sti
retf
xlat
and
xchg
xchg
out
(bad)
mov
xor
pop
sbb
push
aam
lods
aad
imul
cli
xchg
inc
fild
popf
mov
jb
jg
xor
xchg
mov
add
in
jl
out
in
and
and
sbb
mov
mov
pop
push
pop
hlt
lea
or
mov
inc
sub
gs
add
mov
icebp
jle
mov
sti
cmps
push
xlat
je
rcr
in
push
xchg
mov
mov
idiv
add
outs
int
mov
mov
cld
loope
(bad)
jmp
mov
iret
and
jge
cmp
mov
sbb
call
in
xor
and
mov
push
popf
pop
call
mov
jbe
sbb
mov
dec
cmp
inc
cmp
pushf
fnstsw
popa
push
stc
cmp
lods
ins
into
jecxz
adc
fistp
sahf
(bad)
push
stos
jmp
cmp
add
inc
xor
sbb
shr
inc
adc
pop
lods
pop
popf
(bad)
int
(bad)
fmul
jle
jmp
dec
js
sub
adc
sti
stc
add
push
dec
add
adc
dec
push
mov
iret
sbb
xchg
cdq
test
lods
or
or
out
test
in
sbb
add
xor
push
pop
(bad)
pop
jns
mov
sub
mov
aam
int
dec
(bad)
jp
aaa
add
lahf
addr16
jb
xor
outs
(bad)
ss
cmp
fcmovne
and
push
jmp
pop
inc
and
jne
sub
cmp
xor
add
loop
add
cs
aas
mov
out
xchg
push
push
mov
out
jecxz
pop
xchg
dec
stc
jno
xor
cmp
pop
faddp
clc
call
mov
pop
aam
sub
jle
repz
addr16
sahf
les
cs
pop
sub
test
ja
scas
out
dec
aaa
ja
lahf
iret
mov
sbb
ficomp
jl
pop
test
pop
add
jmp
test
mov
sub
pushf
inc
push
pop
pop
inc
push
in
and
push
xor
(bad)
and
fisub
xchg
xor
gs
test
sbb
jo
xor
dec
inc
jns
dec
jle
div
(bad)
icebp
or
push
mov
inc
jmp
leave
nop
cmp
jno
add
sahf
enter
pop
xchg
sub
mov
mul
add
repnz
mov
add
test
addr16
mov
xchg
cmp
mov
les
popf
push
data16
lock
imul
repnz
dec
adc
sahf
xchg
test
add
mov
sar
ret
arpl
bound
or
lock
sub
push
fldcw
fwait
or
int
fisub
jmp
jae
push
dec
pop
xchg
dec
xchg
dec
add
mov
cmp
push
xlat
loop
rol
cs
sbb
ds
dec
in
int3
imul
mov
fiadd
dec
and
jmp
cmps
sub
inc
xchg
or
call
idiv
and
mov
ss
retf
outs
sti
add
sti
sti
lahf
mov
fst
adc
cdq
push
aad
clc
nop
jmp
ds
(bad)
xor
call
daa
pop
xlat
(bad)
js
pushf
lahf
add
mov
dec
lds
gs
lock
jnp
and
(bad)
ds
and
dec
adc
inc
ror
mov
and
adc
fsubr
push
inc
push
or
add
test
mov
push
lahf
fst
test
fidivr
out
jmp
out
jns
bound
inc
jle
sti
push
test
mov
retf
mov
call
push
fist
dec
dec
mov
sub
popa
and
iret
mov
imul
ret
in
lods
stos
fs
popa
push
mov
cmp
sar
div
scas
or
loopne
mov
pop
scas
inc
cwde
xchg
jo
ds
pop
fcom
mov
jl
adc
fisttp
sbb
jle
bnd
scas
xor
jb
xchg
cwde
mov
imul
lock
es
adc
mov
arpl
aad
loopne
add
cmps
xchg
mov
add
div
lods
out
sbb
lods
mov
data16
sub
sub
mov
dec
push
mov
rol
shl
mov
shl
xor
mov
daa
js
mov
into
fs
das
fwait
ins
fld
mov
xchg
add
sbb
loopne
and
(bad)
out
mov
mov
fnsave
mov
jne
es
out
adc
add
sti
add
mov
(bad)
lods
or
jmp
mov
dec
aas
aaa
push
mov
xor
(bad)
mov
cmps
(bad)
sar
xchg
test
mov
outs
cli
fstp
push
add
and
xchg
push
mov
pop
cwde
int
rcr
mov
data16
scas
arpl
fsub
in
adc
lahf
add
jle
out
test
jo
ficomp
mov
push
pushf
cmp
pop
cli
dec
movs
test
das
pop
mov
addr16
repz
sbb
outs
scas
push
mov
jb
daa
sbb
pop
pop
(bad)
iret
out
dec
mov
inc
dec
stos
xchg
retf
and
ror
mul
mov
dec
scas
popa
jmp
jmp
je
dec
(bad)
test
hlt
popa
fistp
loopne
stos
cmp
ret
pop
xor
mov
pop
and
sti
sbb
out
adc
ins
retf
pop
mov
dec
pop
push
jmp
dec
cmc
mov
push
bound
inc
cdq
bound
in
cli
push
fbstp
ins
dec
(bad)
pop
sub
xchg
sbb
call
cmp
lods
inc
mov
and
push
(bad)
aad
mul
sbb
fnstcw
adc
mov
push
sub
fst
dec
(bad)
mov
sti
push
(bad)
sub
dec
xchg
mov
inc
ins
add
ja
inc
addr16
inc
ret
pop
das
pusha
popa
inc
mov
and
scas
and
jp
repz
outs
cdq
mov
repz
retf
popf
(bad)
sub
cmp
aam
sub
cwde
adc
repz
(bad)
stc
mov
fcom
shl
das
std
add
(bad)
lock
call
ret
add
dec
sar
cmp
mov
sub
call
fisttp
xor
and
push
mov
add
and
test
cld
sbb
not
shl
and
rol
das
into
loope
ins
(bad)
xchg
sub
out
mov
jge
rcl
icebp
add
inc
pop
js
xchg
jb
lock
stos
in
cmps
adc
mov
cld
xlat
or
sub
test
add
dec
in
cmp
es
mov
and
mov
xor
hlt
xchg
push
out
cmp
lahf
ret
shl
inc
stos
int3
inc
inc
aas
ds
test
lods
jg
xchg
xchg
sbb
call
inc
fldcw
cli
iret
inc
aad
fldcw
xor
cdq
mov
into
mov
pusha
mov
push
push
aad
outs
mov
fwait
cmp
xchg
hlt
pusha
mov
out
ret
mov
fwait
jae
dec
add
clc
call
mov
jbe
mov
int
ins
pushf
jmp
cmp
pop
xchg
pop
test
jo
dec
and
imul
in
cli
jae
shr
jmp
mov
xchg
popa
dec
jecxz
out
mov
inc
jmp
add
cdq
mov
fwait
in
xchg
sbb
sbb
ficomp
in
mov
dec
test
dec
sub
aad
and
jecxz
movs
loop
cwde
shl
les
mov
xlat
jb
sub
dec
call
retf
or
sbb
xchg
and
test
pop
test
es
adc
inc
jmp
jno
scas
aaa
mov
icebp
stos
outs
adc
adc
dec
xchg
cwde
sti
scas
fs
mov
rcr
cmp
jmp
call
fs
add
push
stos
data16
xchg
mov
daa
add
sti
or
mov
outs
aam
pop
(bad)
adc
inc
inc
add
adc
aad
pop
dec
mov
mov
aaa
jbe
popa
pushf
sar
call
out
in
jb
jno
imul
sahf
pop
xchg
out
and
in
in
jb
shl
call
pop
mov
jl
leave
int
outs
and
push
jb
ss
test
movs
pop
bound
pop
xchg
ror
out
cmp
inc
(bad)
ja
fs
sub
xor
dec
(bad)
call
add
lea
imul
call
mov
pop
dec
xchg
clc
dec
push
aaa
add
lods
call
popa
out
push
ins
cs
push
ret
and
popf
lods
jle
xchg
xlat
test
mov
rcr
lahf
add
jae
xchg
mov
xchg
mov
call
test
pop
dec
push
mov
iret
inc
inc
stc
ret
or
or
out
out
test
jmp
das
cmp
adc
xchg
sbb
mov
mov
xor
xchg
mov
mov
mov
cmps
ja
sub
aam
xchg
push
into
lods
pop
movs
pop
push
je
xchg
adc
jmp
mov
daa
test
push
(bad)
pusha
jmp
ja
ins
sbb
sub
mov
and
es
repnz
cmp
mov
push
pop
mov
(bad)
sbb
inc
mov
es
xor
mov
sub
out
xchg
pop
loope
sbb
xor
bound
jecxz
popf
aaa
sub
(bad)
mov
popf
jl
jg
js
pop
mov
loop
dec
jb
lock
test
call
adc
xor
dec
cmp
or
(bad)
cmp
jle
xchg
out
mov
cwde
daa
sbb
mov
es
repz
mov
popf
adc
adc
mov
dec
iret
mov
std
loop
loope
outs
lock
or
rol
clc
icebp
ins
lahf
pop
ss
lds
int3
mov
add
arpl
je
out
cs
sahf
and
ret
out
rol
cs
jns
push
enter
push
sbb
stos
sbb
or
iret
inc
or
sub
scas
push
inc
in
int
push
test
inc
and
inc
xor
xor
and
jmp
mov
inc
cwde
std
adc
rcl
leave
mov
out
mov
xchg
repz
sub
aad
ins
inc
mov
push
jge
push
cmps
ds
out
ds
nop
les
pop
xor
out
lea
sti
and
jp
xchg
push
jnp
cmp
mov
push
adc
mov
sub
fld
call
in
je
jne
mov
mov
cmp
sahf
in
lods
(bad)
mov
mov
jne
cli
cmp
cdq
jb
and
sbb
sub
jo
fnsave
out
shr
outs
into
les
jle
ins
sbb
aaa
xchg
mov
inc
pushf
sbb
mov
dec
pushf
push
push
test
xor
sbb
push
jge
pusha
in
es
leave
sub
retf
scas
adc
outs
imul
jg
sub
mov
dec
xchg
adc
movs
loop
jmp
sub
inc
add
test
test
jns
outs
lds
dec
push
inc
mov
pusha
add
jmp
scas
inc
popa
or
cmp
rcr
jno
or
fist
pop
lods
mov
mov
sub
mov
xchg
sbb
sub
mov
mov
shl
jmp
dec
icebp
pop
into
dec
or
mov
add
xor
jp
into
scas
push
stos
sbb
push
jp
aam
imul
shl
aas
push
dec
mov
sbb
(bad)
cmp
fmul
sub
inc
jnp
adc
lahf
call
jp
and
ds
ds
lds
(bad)
test
push
retf
xor
push
push
ds
ret
push
movs
pop
push
adc
inc
clc
(bad)
mov
scas
lods
cmp
imul
add
sar
mov
xor
pop
arpl
nop
aad
shr
or
mov
dec
outs
outs
xor
js
pop
pop
mov
ins
mov
out
ud2
stc
jbe
scas
outs
iret
or
sbb
in
and
hlt
mov
jo
pushf
jl
ja
test
fnsave
jno
shl
in
lds
mov
push
or
ins
into
shl
out
jae
jmp
imul
int
jbe
(bad)
adc
mov
pop
test
inc
jbe
shl
loop
mov
push
es
pop
adc
imul
cmp
cmp
pop
fild
je
push
daa
(bad)
cmps
jmp
es
imul
dec
call
push
les
pop
jb
dec
pop
sub
dec
xchg
dec
sti
out
adc
and
inc
and
(bad)
into
jge
and
pop
ret
popf
nop
pushf
lock
sahf
shr
loope
and
add
dec
pop
inc
iret
into
in
sub
inc
mov
pop
or
and
mov
sbb
lahf
mul
sar
inc
test
cmc
ret
addr16
cmp
xchg
aas
cli
push
mov
mov
sahf
cmp
xchg
lock
rol
loope
lods
and
test
call
jb
inc
int
repz
retf
icebp
retf
adc
and
cli
fwait
push
in
aas
fwait
inc
push
das
pop
loopne
xor
gs
jnp
(bad)
into
mov
ins
xchg
into
setns
sahf
loop
or
jns
fcomp
push
jae
cs
jp
jle
fs
pop
push
xchg
pop
cmp
int3
repz
push
mov
leave
inc
jmp
test
loopne
and
jg
jno
loope
int
icebp
pop
sub
jo
adc
(bad)
push
cmps
mov
repz
in
sub
outs
pop
out
adc
pop
xor
test
cmp
call
xchg
lock
mov
sbb
fsubr
and
pusha
mov
add
int3
adc
daa
xor
xor
xor
pop
test
repz
sbb
push
imul
jecxz
jb
call
stos
mov
mov
push
push
outs
cmp
inc
xchg
pop
stos
cmp
mov
push
mov
mov
add
aaa
sbb
in
test
push
test
add
scas
(bad)
sti
fcomp
cli
cmp
pop
es
stos
ror
xchg
gs
pop
or
cmp
xor
(bad)
mov
mov
xchg
inc
sub
pop
sti
jne
inc
add
add
mov
xchg
scas
mov
and
sar
shl
push
or
xor
out
push
pop
sar
xchg
xchg
ins
rcr
les
add
mov
inc
repz
int3
push
(bad)
xor
mov
and
add
mov
jmp
mov
sbb
xchg
xlat
mov
sbb
pop
xor
lds
xchg
in
bnd
je
sub
call
sub
pop
xlat
out
sbb
xchg
xor
mov
pop
jmp
adc
sub
cmp
(bad)
in
(bad)
push
mov
lds
test
sbb
pop
sbb
inc
push
les
mov
push
mov
test
ret
push
clc
mov
cmp
cli
pop
rol
popf
scas
stc
rcr
(bad)
sbb
scas
adc
(bad)
add
retf
inc
push
repz
mov
hlt
jle
addr16
push
aad
cwde
jo
xor
ss
(bad)
pushf
jge
cmp
sbb
out
fdiv
push
mov
sbb
inc
xor
lahf
fild
xlat
pop
cld
mov
mov
mov
inc
inc
retf
mov
rcl
inc
xchg
push
jbe
retf
xor
aas
push
fst
mov
das
inc
arpl
nop
in
in
pop
push
adc
int3
movs
fnsave
sbb
or
inc
add
mov
cmp
mov
or
sbb
or
ins
cmp
in
pop
inc
rcl
mov
dec
cmps
pop
out
mov
cmp
dec
stos
inc
dec
mov
cmp
mov
push
lds
or
(bad)
cmp
dec
movs
mov
jl
in
inc
jne
xor
rcr
pushf
lods
outs
jg
or
dec
hlt
mov
pop
outs
divps
cld
outs
lahf
mov
or
fstp
dec
fisttp
mov
test
push
ret
in
pop
out
pcmpeqd
push
pop
xor
pop
cmps
dec
repnz
push
(bad)
hlt
push
pop
fs
ret
mov
xor
lods
sbb
jl
mov
mov
sbb
movs
retf
push
in
shr
ret
icebp
retf
lea
scas
(bad)
repz
add
mov
sub
xchg
mov
sbb
sub
imul
sub
pop
mov
imul
sar
lods
jne
fistp
fdivrp
jne
mov
dec
jb
outs
mov
and
fidiv
add
sti
arpl
mov
das
mov
fdivr
mov
dec
out
in
mov
push
mov
aad
ja
and
(bad)
jmp
mov
sub
cs
cwde
dec
sub
cwde
sub
in
ficom
and
fwait
cli
lods
or
dec
add
data16
pushf
and
test
test
inc
ss
mov
adc
bound
jecxz
push
or
pop
push
xchg
xor
and
inc
add
push
xchg
or
fcom
sub
dec
add
push
shl
push
mov
lds
push
into
inc
inc
and
cmp
add
in
movs
scas
sahf
dec
jmp
mov
or
retf
xchg
(bad)
xor
inc
in
fcomip
xor
add
or
outs
jns
inc
outs
jns
adc
push
push
and
or
fs
sbb
nop
adc
ss
loope
xchg
fwait
cld
cmp
data16
xchg
clc
retfw
adc
icebp
jb
inc
jge
jbe
std
jns
imul
gs
cdq
sbb
cli
lss
adc
cmps
mov
xchg
dec
add
loope
ret
cmp
test
jae
in
jecxz
retf
xor
call
mov
push
and
push
aas
pop
dec
popa
mov
in
xlat
pop
and
test
cmp
pop
and
xor
fiadd
fisubr
or
iret
pop
ret
mov
cmps
daa
test
sbb
out
add
jmp
lock
daa
iret
daa
stc
aad
mov
push
push
jmp
das
xchg
and
lods
or
xchg
cmp
pop
cmp
sbb
and
push
add
xchg
pop
aad
push
push
cmp
outs
outs
lock
popa
(bad)
mov
push
jne
xor
in
call
mov
jno
jmp
nop
push
ret
and
movs
and
mov
and
mov
mov
imul
fcmovb
and
iret
xor
lea
test
stos
jae
sbb
repz
sub
out
pop
rol
pop
jge
ss
inc
jbe
repz
xor
sub
cmp
inc
bound
and
mov
mov
add
and
shl
cmp
pop
mov
in
push
enter
sub
shl
call
fwait
or
leave
push
sub
mov
ror
jecxz
(bad)
clc
xor
push
call
loope
hlt
jg
cmc
xchg
inc
sbb
ret
pop
les
adc
sahf
leave
ds
mov
or
or
cmp
push
imul
std
add
mov
push
and
pusha
imul
sbb
sahf
iret
ins
sbb
das
mov
xor
call
pushf
mov
(bad)
pop
jnp
lds
pop
jo
lods
jne
xor
push
dec
dec
fist
mov
jmp
mov
mov
rcr
xor
rcl
dec
mov
retf
pop
mov
aaa
cmps
mul
scas
cmp
xchg
rcl
outs
cs
scas
add
dec
cwde
sub
leave
lock
cmp
lock
mov
scas
pop
sbb
sahf
movs
push
xchg
inc
push
xchg
mov
cwde
jo
pop
adc
inc
out
fadd
loope
pop
cmp
or
add
shl
ret
lods
mov
mov
and
sub
pusha
adc
lods
movs
sub
cmp
dec
pop
xor
add
arpl
cmps
push
pop
adc
repnz
adc
scas
sbb
dec
mov
shl
inc
in
add
imul
sbb
shl
mov
imul
push
int3
test
mov
lods
cli
fild
sub
inc
in
xchg
mov
dec
push
inc
mov
mov
or
in
ror
pop
dec
sbb
aad
(bad)
bound
mov
call
lods
(bad)
stc
xchg
(bad)
daa
test
inc
mov
inc
dec
jmp
add
out
xchg
jmp
jnp
div
inc
xchg
dec
push
inc
rep
ds
js
dec
xor
push
fwait
mov
lods
ss
repnz
mov
and
push
push
push
or
mov
xchg
leave
call
das
retf
int
mov
ss
cmc
pop
outs
cdq
and
aam
pushf
je
inc
xor
imul
cmp
movs
mov
and
cmc
and
int3
mov
fs
cmp
fnstcw
ins
jmp
shl
mov
lea
movs
lods
int3
enter
sbb
jbe
jmp
loopne
inc
jecxz
stos
dec
mov
daa
sahf
jle
shr
mov
pop
and
pop
sbb
sub
in
call
or
(bad)
and
pop
push
jbe
push
inc
mov
mov
bound
push
jmp
shl
mov
imul
adc
pop
push
push
dec
loop
xchg
xor
adc
cmps
jbe
fst
xor
lock
outs
inc
(bad)
clc
jne
(bad)
dec
jno
adc
mov
outs
test
in
ror
cmp
add
ins
ret
loope
xlat
int3
jno
movs
mov
mov
les
cdq
(bad)
add
nop
lahf
imul
xor
jne
xchg
bound
pop
pusha
call
bswap
sahf
xchg
call
jnp
cmc
pop
loop
sub
ret
pop
mov
add
test
and
mov
mov
les
push
inc
ret
pop
lock
xor
(bad)
sbb
mov
into
mov
pop
leave
push
cs
jl
int
pusha
push
rcr
lods
jno
in
adc
inc
pop
pop
jg
and
aas
lods
and
dec
push
ret
mov
cmp
test
bound
mov
cmp
in
mov
or
jmp
aas
aaa
push
xchg
xchg
mov
mov
fwait
push
shl
add
mov
jl
sub
mov
jle
test
adc
jecxz
pop
jb
fimul
sar
dec
push
mov
inc
je
xor
cld
mov
jae
lods
mov
mov
mov
dec
(bad)
pop
jmp
or
cs
jg
(bad)
fdiv
sahf
cs
aam
es
cmovne
ins
inc
cs
xchg
test
pop
jo
lahf
mov
xor
outs
and
in
mov
retf
mov
dec
mov
test
pop
es
push
cli
out
ja
imul
jb
push
cdq
popf
ret
push
es
data16
mov
ins
cmp
jns
int3
xchg
mov
mov
lahf
dec
fadd
pop
test
push
call
push
add
dec
call
iret
xchg
mov
(bad)
int3
std
pop
mov
popw
add
mov
loopne
inc
rcl
jb
push
mov
dec
jle
sbb
js
xor
mov
sub
jne
jle
or
push
pop
les
xor
nop
test
ret
ja
aas
into
outs
stos
mov
lea
mov
mov
mov
sub
or
sbb
push
add
dec
push
retf
stc
or
jbe
addr16
jo
in
shr
rcr
test
aam
mov
mov
pop
test
cmp
dec
and
dec
sbb
sub
jnp
cmps
ins
xchg
adc
cli
pop
or
lds
or
ja
pop
jb
push
or
aad
dec
rcl
cmp
arpl
imul
jmp
push
and
(bad)
and
or
sahf
ret
(bad)
ins
int3
cmp
push
cmp
js
idiv
push
adc
mov
adc
lods
movs
mov
mov
cli
push
sbb
loope
mov
not
aam
rol
leave
ins
inc
jle
or
mov
dec
addr16
mov
xchg
dec
imul
sub
js
test
sbb
loop
test
std
mov
pop
shr
add
repz
inc
cdq
pop
fdiv
jmpw
dec
cld
xlat
push
xchg
jbe
dec
arpl
pusha
stos
inc
mov
pop
(bad)
xchg
sub
pop
cdq
iret
pop
xor
cmc
test
mov
and
jmp
xor
idiv
retf
lods
xchg
jae
cmp
scas
and
leave
push
je
cmp
xor
scas
movs
lods
add
loop
cld
rol
or
dec
ins
aad
retf
sbb
out
fucom
cdq
daa
cmc
sbb
gs
cmp
fwait
xchg
cmps
loop
inc
scas
sbb
pop
(bad)
mov
sahf
jmp
and
mov
pusha
(bad)
mov
jne
jge
push
int3
daa
out
or
ins
jge
mov
cwde
bound
aas
jge
cdq
pop
pop
mov
fcomp
or
imul
mov
(bad)
aam
jge
pop
push
repnz
nop
push
mov
pop
int3
in
add
cmps
mov
jecxz
mov
mov
cmp
stos
mov
iret
jne
lds
loopne
(bad)
or
sbb
xchg
(bad)
jmp
loope
jmp
arpl
xchg
imul
jge
sahf
popf
retf
dec
je
lods
xor
in
jne
rol
mov
xchg
stc
inc
(bad)
push
or
xor
xchg
sub
in
pop
pop
push
push
jo
popa
repz
div
loop
push
fwait
cmps
jb
inc
lds
inc
stc
xchg
fistp
sbb
or
sar
(bad)
jle
or
inc
add
andps
inc
xchg
out
test
and
xor
ins
dec
or
(bad)
enter
movs
repnz
mov
pushf
fst
rcr
pop
push
scas
repz
add
xchg
fild
jne
lahf
inc
mov
inc
pop
adc
and
add
leave
mov
xchg
in
popf
sbb
xchg
push
xchg
pop
test
xchg
adc
ficomp
arpl
mov
fbstp
test
push
pop
mov
cmp
ds
sub
div
(bad)
pop
inc
das
inc
fsubr
sub
sbb
shl
scas
xor
sbb
xor
mov
call
adc
or
scas
not
fs
jle
in
jmp
mov
xchg
je
sub
pusha
and
dec
pop
dec
push
dec
sbb
fistp
or
push
lods
push
and
imul
clc
push
pusha
push
cmp
add
scas
cmp
and
xchg
psubb
int
inc
mul
xchg
lods
fucom
and
jle
sbb
aaa
mov
lock
dec
and
push
daa
or
dec
in
dec
jp
xchg
fsubr
push
dec
ret
pop
push
mov
clc
jg
adc
jae
mov
inc
leave
and
aad
in
jg
push
inc
mov
mov
mov
test
push
movs
cmps
ins
scas
fdiv
sbb
into
jno
and
and
mov
ja
addr16
jmp
or
js
rcr
stos
das
ret
mov
push
add
(bad)
(bad)
dec
loope
stos
aaa
inc
int3
cmc
sahf
push
nop
fsubr
mov
lods
mov
scas
jge
retf
and
sbb
rcl
test
mov
inc
pop
bound
icebp
mov
ror
jl
dec
(bad)
dec
jge
jae
mov
arpl
fisttp
add
enter
push
push
mov
test
int
push
push
xlat
jbe
clc
push
pusha
push
inc
sub
int3
and
xchg
lahf
inc
out
dec
mov
popa
int3
jge
push
sub
cmps
(bad)
iret
xchg
jae
lahf
ds
and
test
push
xchg
loopne
dec
lock
imul
mov
cmp
lods
adc
jnp
cmp
sub
xchg
aas
gs
add
adc
daa
dec
sbb
(bad)
inc
dec
in
push
add
or
pop
mov
fwait
pusha
ret
sub
int3
push
adc
leave
hlt
add
(bad)
leave
jne
jo
xchg
xchg
test
cmp
mov
jnp
xchg
es
sbb
push
sub
sbb
jmp
in
sahf
loop
add
shr
int
sbb
call
addr16
(bad)
xchg
adc
jo
fistp
iret
daa
add
ret
push
lahf
popf
mov
loope
cld
int3
test
mov
mov
fcom
jns
xchg
sub
stos
outs
sbb
mov
stos
jns
add
dec
rcr
xchg
pop
cmps
into
xchg
pop
fidiv
cmp
inc
popf
mov
gs
inc
sub
sub
les
inc
imul
and
call
pushf
pop
dec
sti
push
sahf
(bad)
sti
mov
xchg
rol
sbb
pop
les
mov
xchg
fs
movs
lods
les
in
xchg
loop
xchg
jp
or
mov
das
fwait
sub
sbb
mov
mov
movlhps
rol
fistp
mov
xor
sar
mov
rcr
jnp
add
fidivr
ins
cmc
push
pop
ins
pop
scas
mov
adc
inc
out
stos
push
cs
sub
inc
popf
popf
jge
sub
sub
sub
add
in
pop
or
bnd
cdq
pop
paddb
jle
cmp
mov
ja
pop
sti
xor
leave
cmps
mov
repz
mov
ret
loope
shl
cld
push
test
loope
cmp
(bad)
out
aaa
movs
mov
mov
ret
jbe
xchg
ret
and
mov
cld
int
sub
test
inc
pusha
iret
movs
pop
inc
dec
and
cs
and
jmp
test
call
add
divps
(bad)
aam
sar
add
iret
sar
cld
ins
(bad)
fld
fstp
or
mov
jge
add
jne
loope
dec
xchg
xchg
inc
pop
addr16
ret
jae
ret
mov
pop
aam
mov
push
loop
pop
mov
ja
inc
in
(bad)
sbb
push
and
and
das
les
fst
cmp
fadd
into
lods
repnz
inc
mov
and
sbb
sbb
inc
sbb
mov
cmp
mov
mov
mov
mov
stos
test
pop
inc
or
xchg
scas
ins
xor
jle
push
sbb
(bad)
cmps
mov
xchg
jno
in
into
sahf
sbb
mov
mov
jecxz
test
fmul
lods
add
and
push
mov
inc
xor
xchg
sub
adc
lea
cmp
and
or
xchg
aas
pop
push
jns
adc
daa
push
data16
xchg
in
xchg
push
xor
popf
push
jnp
lods
mov
mov
add
jno
adc
sub
jmp
inc
adc
in
add
lahf
adc
inc
popa
enter
jl
ror
mov
inc
or
pop
mov
and
gs
add
jno
stos
stc
scas
xlat
icebp
test
cmp
popf
or
dec
adc
aas
(bad)
cvtdq2ps
ds
or
shl
mov
mov
xchg
xchg
and
push
inc
imul
xlat
pushf
cld
enter
(bad)
mov
xor
jle
push
scas
ror
ja
test
lods
(bad)
(bad)
aaa
(bad)
call
sub
xor
loope
add
pop
out
sbb
jmp
xor
add
in
sbb
scas
ds
pushf
dec
cmp
push
frstpm(287
sbb
jl
lods
scas
cmps
lock
data16
inc
jle
cmp
cmp
xchg
(bad)
ds
sbb
cmp
sub
sub
mov
call
test
dec
scas
or
jb
gs
je
push
sti
pop
fcom
mov
movs
std
pop
rol
adc
cmp
(bad)
xor
xor
mov
jb
leave
cdq
mov
sahf
or
pop
aad
jne
adc
fld
mov
arpl
xchg
and
push
dec
xchg
pop
inc
pop
std
shr
retf
dec
pop
mov
aad
ja
movs
xchg
push
sar
push
ja
jecxz
mov
xchg
inc
lahf
xchg
dec
jns
retf
(bad)
(bad)
xchg
(bad)
sbb
mov
add
test
sahf
jne
cli
fnsave
aas
xchg
int3
pushf
cmp
or
mov
xor
mov
daa
cld
les
xor
or
mov
mov
movs
jmp
xor
out
test
gs
sbb
jae
adc
inc
and
inc
inc
mov
adc
adc
into
add
push
push
push
jl
ins
mov
sti
scas
dec
leave
xchg
retf
pop
pop
xchg
dec
sar
and
mov
sti
xchg
mov
sahf
jno
jnp
jecxz
or
mov
cmp
pushf
sahf
nop
lock
pop
mov
(bad)
mov
or
dec
mov
or
and
mov
into
jecxz
rcl
inc
ins
loope
sbb
or
mov
add
mov
sbb
and
xor
aad
mov
pop
sub
and
(bad)
nop
mov
mov
(bad)
mov
push
sub
xchg
shl
push
mov
(bad)
jns
stos
dec
push
int
cdq
(bad)
ss
aad
mov
dec
mov
adc
xor
xor
xor
loopne
mov
or
in
and
(bad)
dec
dec
jb
pop
enter
sar
sub
test
out
jmp
mov
sub
cmp
aaa
inc
mov
cmp
lods
shl
push
mov
shl
dec
ss
movs
sub
jo
sbb
pop
movs
aas
sbb
adc
repnz
add
add
sbb
popa
xchg
mov
pop
(bad)
lock
pop
inc
xor
nop
cmp
sub
or
cmp
dec
push
pushf
test
mov
sbb
out
fdivr
jl
mov
sub
ror
or
stc
nop
and
jl
ss
xchg
ins
out
test
in
(bad)
adc
ror
adc
mov
mov
gs
add
jmp
scas
(bad)
mov
nop
dec
pop
sbb
push
pushf
cmp
push
scas
retf
ror
cmc
xor
push
mov
test
popf
sti
xlat
into
cmp
ss
or
dec
jp
aad
push
inc
pop
ss
fstp
pop
fsubr
mov
xlat
inc
push
pop
addr16
aas
hlt
jb
fs
fisttp
(bad)
aas
leave
gs
mov
xchg
push
aaa
imul
jmp
movs
pop
daa
push
gs
popa
into
sub
inc
sub
mov
test
fwait
test
setae
icebp
shr
fs
jl
xor
(bad)
dec
pop
int3
in
jno
dec
addr16
(bad)
cmp
pop
mov
cmps
fs
repz
xchg
ins
jbe
sbb
idiv
loope
sub
stos
outs
(bad)
push
les
cdq
and
jp
test
rol
mov
add
cld
add
lock
inc
repz
xchg
call
mov
xor
jne
sub
xchg
(bad)
cld
das
stos
cwde
fist
push
sub
xchg
call
fiadd
popf
xor
ja
mov
in
pushf
xchg
outs
cli
sub
push
ret
ficom
out
out
dec
int
rcr
dec
add
mov
clc
xor
mov
js
adc
clc
mov
push
sbb
push
je
mov
out
and
cmc
fs
xchg
inc
clc
or
push
bound
aam
jecxz
add
sbb
mov
push
outs
popa
sbb
clc
out
popf
sbb
sbb
ret
enter
aam
or
neg
cdq
ror
pop
cld
out
and
xchg
jl
(bad)
sahf
bound
pop
cli
xchg
push
inc
out
adc
and
sbb
call
pop
enter
movs
inc
jb
jnp
stc
in
mov
les
inc
cmp
stos
retf
sbb
popf
retf
pop
sub
ficomp
xchg
in
push
aad
and
rol
mov
pop
inc
hlt
xchg
fwait
into
repnz
or
cmp
pop
mov
out
mov
adc
add
loope
xchg
lods
mov
clc
push
cwde
mov
rcr
jmp
movs
shr
jp
mov
pop
outs
jae
push
mov
and
imul
loopne
xor
stos
dec
daa
clc
jle
mov
mov
mov
xor
sub
rcr
add
inc
fcmovnu
in
pop
mov
pusha
xchg
lods
jns
jmp
repz
add
ja
sbb
(bad)
mov
sub
jmp
lods
xchg
jae
mov
cdq
or
or
enter
mov
ret
cdq
jnp
ins
mov
outs
ins
cld
or
jno
loopne
sbb
sar
xchg
mov
sub
mov
xchg
sti
repnz
jge
adc
enter
paddq
mov
punpckhdq
inc
inc
push
sub
pop
enter
hlt
and
leave
adc
pushf
pop
or
jmp
xchg
pop
pop
cmp
push
mov
inc
jnp
arpl
cmp
mov
jno
in
nop
mov
ss
(bad)
push
mov
inc
retf
push
(bad)
inc
outs
cmp
idiv
out
pusha
push
jmp
fbstp
shl
pop
retf
add
lods
leave
pop
or
sbb
scas
jb
pushf
rol
sub
outs
jecxz
jo
dec
cmp
xor
clc
cmp
xor
adc
dec
lds
into
add
or
push
stc
mov
inc
mov
jg
mov
repz
sub
mov
inc
out
ret
pop
dec
or
inc
popf
in
adc
mov
add
cmp
das
mov
jbe
push
not
sbb
pop
shl
test
sbb
enter
jae
aas
xchg
ror
ds
pop
push
xor
pop
lds
daa
retf
pop
cmps
sbb
mov
xor
or
ins
mov
(bad)
les
into
loopne
and
push
jmp
xor
stc
pop
cmp
in
stos
jb
(bad)
jo
push
sbb
jbe
test
add
int
enter
push
jmp
iret
ss
push
cmp
popf
fistp
cmc
mov
jae
movs
jle
loopne
fwait
and
dec
out
mov
push
repz
mov
sbb
push
enter
mov
clc
repnz
popf
push
mov
mov
mov
xchg
xor
jp
out
pop
shl
std
sar
imul
hlt
jae
(bad)
(bad)
mov
test
add
(bad)
js
sbb
and
rol
pop
push
xchg
outs
out
mov
fisubr
(bad)
sub
lock
sbb
ror
mov
dec
pop
and
loope
push
jle
rcl
jo
mov
out
sbb
or
(bad)
and
dec
dec
xor
fbld
jb
push
repz
xchg
fidivr
mov
ret
fstp
repnz
inc
pop
js
fs
mov
jg
cmp
mov
and
cmp
push
lods
(bad)
hlt
mov
cmc
shr
and
adc
hlt
aam
push
push
loop
pusha
cli
test
adc
add
idiv
mov
fnstenv
adc
jp
mov
cmp
push
xchg
repnz
xor
inc
retf
mov
and
ja
bound
mov
fwait
adc
cmc
jle
call
inc
sti
adc
dec
mov
sbb
cwde
imul
js
cmp
push
clc
addr16
add
mov
xchg
jne
(bad)
loopne
cmp
aad
and
sub
inc
std
sub
jle
mov
mov
repz
pop
inc
add
arpl
jmp
push
ds
(bad)
sbb
add
pusha
push
rcr
pop
and
(bad)
or
in
jnp
pop
adc
sub
mov
xchg
lods
in
stos
mov
jl
inc
add
or
(bad)
mov
jmp
add
cmp
sub
retf
gs
mov
int3
xor
or
scas
loope
push
push
(bad)
jmp
and
in
sub
dec
cmps
and
fsub
dec
inc
rcl
adc
xchg
xor
inc
lock
fsub
or
(bad)
sbb
shr
jbe
test
repz
das
mov
and
ret
mov
mov
int
mov
push
jb
inc
lock
push
add
add
push
pop
mov
cmovge
loop
xchg
inc
mov
jo
mov
in
mov
push
stos
and
inc
fmul
xchg
sar
(bad)
movs
add
mov
test
mov
adc
fsub
pop
mov
jl
lahf
das
jecxz
popa
adc
mov
mov
push
les
mov
ficom
retf
in
sbb
enter
aaa
push
frstor
mov
and
adc
mov
xchg
xor
xor
cmp
mov
push
imul
gs
not
or
inc
xchg
sub
(bad)
mov
jns
mov
and
mov
xchg
dec
repnz
into
xor
imul
inc
jnp
pop
push
sbb
xchg
mov
mov
or
lods
pop
sub
fnsave
or
(bad)
lods
int3
sahf
call
loope
int3
sbb
popa
data16
xor
mov
xchg
or
int
cmp
sub
dec
mov
shl
clc
push
dec
in
sbb
mov
imul
mov
loopne
cmp
jmp
lock
std
rcr
out
mov
jno
dec
aas
data16
and
shr
mov
mov
or
leave
inc
mov
fistp
iret
leave
imul
dec
jmp
shl
bound
xor
(bad)
(bad)
pushf
pop
sti
(bad)
daa
dec
sub
push
enter
sub
aam
lea
pop
stc
out
inc
sub
dec
sbb
xchg
adc
add
adc
ret
pop
movs
popa
ds
fstp
sti
or
or
dec
inc
or
fsubr
mov
repnz
cmps
clc
bound
sub
or
sbb
adc
push
jp
stc
(bad)
dec
aad
sub
and
jle
sub
push
and
xor
in
xchg
push
xchg
or
dec
sub
ja
mov
sar
push
xchg
fs
dec
test
inc
inc
into
pop
adc
mov
push
lods
or
jl
dec
xor
stos
(bad)
fwait
xor
push
push
popf
push
inc
cli
push
inc
inc
fdivp
ja
(bad)
(bad)
movs
stos
fst
mov
xchg
stc
dec
cmp
pop
push
push
sbb
push
nop
sub
sbb
iret
pop
sub
dec
push
mov
mov
ss
inc
push
out
sub
(bad)
ins
(bad)
jle
addr16
outs
and
pop
(bad)
xor
pop
icebp
or
xchg
cmp
pop
pop
(bad)
cs
and
jl
bnd
xor
xor
retf
sub
sahf
out
cli
add
jbe
pop
mov
cwde
push
call
fld
out
ins
inc
ins
retf
out
pop
cmp
mov
call
cs
test
mov
iret
xchg
enter
push
(bad)
cmp
inc
out
retf
push
in
xchg
pop
loopne
mov
mov
aas
popa
xchg
and
xor
xchg
adc
stos
cmp
daa
imul
xor
movs
nop
mov
pop
out
and
aaa
rol
pop
ds
je
mov
mov
jb
mov
lahf
repnz
sub
pop
in
icebp
arpl
mov
add
xchg
cwde
mov
enter
stos
lea
pop
aad
gs
sub
cmc
or
push
jmp
inc
scas
xor
pop
ins
mov
aaa
xor
push
cmp
fwait
aaa
dec
adc
inc
fild
dec
outs
es
loop
inc
es
mov
cmp
test
mov
(bad)
stc
cmp
arpl
push
mov
dec
sahf
push
pushf
scas
push
push
cmps
fs
retf
popf
pushf
mov
add
lds
(bad)
cmp
loopne
cmp
mov
mov
adc
jb
fwait
sbb
and
lock
mov
or
cli
mov
leave
dec
and
dec
js
test
sbb
adc
(bad)
icebp
inc
out
mov
adc
gs
mov
fiadd
add
push
pop
movs
lea
fs
mov
test
test
outs
inc
in
outs
mov
out
in
shl
jbe
aad
out
or
fiadd
dec
stc
jg
lahf
test
(bad)
fcomp
mov
(bad)
mov
mov
xchg
outs
lds
pop
xchg
je
lahf
sbb
fisttp
arpl
mov
push
jge
bound
ds
and
sbb
test
shl
xor
dec
push
mov
jecxz
stos
dec
lds
xchg
sub
dec
cmps
push
test
jno
pop
push
and
mov
lock
call
pop
dec
fistp
aad
adc
fwait
jne
mov
push
jnp
xchg
loopne
(bad)
aad
fimul
dec
push
fucomip
xchg
sbb
jl
arpl
shl
sar
jp
stc
stos
in
push
das
dec
ret
mov
or
xor
mov
mov
xor
mov
dec
dec
pop
inc
or
mov
mov
sub
cmps
(bad)
rcr
jnp
jns
in
add
jmp
mov
mov
(bad)
inc
pop
push
(bad)
cmp
sbb
fld
pop
ds
frstor
icebp
(bad)
enter
and
adc
imul
mov
idiv
jp
and
sub
in
sar
fisttp
ret
cmp
push
push
fisttp
pop
mov
mov
xor
movs
repz
sub
fisub
inc
cmp
mov
daa
jbe
bound
pop
hlt
stc
icebp
add
push
out
std
jecxz
push
add
cdq
call
test
sbb
enter
sbb
out
mov
push
dec
out
ja
shl
(bad)
sti
leave
cmp
scas
in
add
cs
retf
xchg
dec
adc
pop
mov
cs
or
dec
jge
push
adc
and
mov
retf
mov
xchg
aad
aam
stos
xchg
stos
ds
shl
sbb
pushf
adc
pop
jle
mov
push
lahf
sub
mov
adc
sbb
cmps
cdq
pop
pusha
inc
ins
popa
imul
jo
mov
push
fcom
(bad)
dec
loope
cdq
adc
push
push
adc
push
in
mov
and
cld
test
mov
loope
cmp
jmp
pop
cwde
or
mov
stos
xchg
das
inc
mov
or
sbb
jmp
add
pop
mov
ret
cmp
fwait
cli
jo
ins
fadd
push
sar
fmul
sti
push
lds
pop
jmp
add
add
xchg
ss
cmp
push
aas
mov
inc
pop
hlt
leave
pop
jle
fwait
inc
daa
and
push
test
div
cmp
aaa
aam
icebp
and
ds
aam
js
shr
nop
imul
push
loop
xlat
jg
xor
pushf
pop
push
fstp
push
xchg
imul
(bad)
pop
in
add
int
in
mov
lahf
sbb
movs
mov
xor
test
mov
jmp
sbb
jno
sub
jl
out
xchg
aam
imul
arpl
and
leave
pop
jge
add
movs
sahf
ins
adc
add
sub
int
or
loop
cmp
js
scas
or
push
es
inc
inc
push
xchg
jg
sti
add
jle
pop
(bad)
sub
xchg
out
pop
mov
scas
lods
call
inc
in
cmp
daa
fcmovnb
mov
lods
mov
mov
(bad)
dec
repnz
sbb
fdivr
daa
push
hlt
dec
sbb
or
pop
int
xchg
push
pop
or
mov
into
jb
hlt
cmp
aam
js
push
retf
gs
adc
mov
aaa
xlat
add
nop
(bad)
or
hlt
jne
ja
cmps
lds
cld
pushf
add
test
fild
cmps
xchg
lds
fist
jmp
fwait
adc
adc
xor
fwait
add
test
and
retf
hlt
ret
and
fmulp
fdivr
scas
lock
jge
pop
js
pop
adc
xor
gs
or
xor
fwait
call
in
ds
cwde
adc
jge
cdq
in
push
movs
push
mov
cmp
xchg
sbb
xor
xor
xchg
(bad)
sub
mov
stos
dec
ins
xchg
ins
adc
sub
mov
gs
test
xor
sub
ret
addr16
pop
fwait
lods
repz
and
stos
iret
and
mov
scas
push
test
sti
call
data16
pop
jecxz
cmp
cdq
ja
push
xchg
push
rol
fidivr
push
daa
sub
sbb
or
cmp
ss
inc
shl
call
inc
test
aas
cmovb
mov
add
and
inc
mov
cmp
popa
sbb
dec
imul
sub
call
stos
cmp
mov
jecxz
push
neg
or
fiadd
adc
int3
rol
outs
xchg
icebp
or
adc
loope
mov
sub
cld
lds
in
test
rol
sub
pop
inc
and
scas
or
popa
or
jo
test
pop
sar
retf
xchg
pop
jg
push
mov
outs
mov
pop
dec
mov
jge
sub
xchg
test
std
enter
or
jns
sbb
das
lock
mov
mov
and
mov
mov
or
pop
pop
idiv
sub
sbb
pop
sti
lds
aas
jge
xor
pop
aas
mov
in
dec
in
shl
add
xchg
xchg
mov
lea
jge
js
test
sbb
lods
jge
jle
or
mov
jbe
les
jae
sbb
pop
out
dec
jae
(bad)
push
movs
cdq
mov
loope
xchg
pusha
mov
cld
inc
adc
jb
add
inc
jo
inc
call
dec
and
inc
je
in
push
adc
xor
push
and
aad
fs
sahf
mov
push
sbb
mov
call
mov
pop
mov
sub
mov
xchg
cmp
push
pushf
mov
cmp
pop
mov
mov
mov
adc
mov
push
mov
jmp
outs
jo
dec
loop
dec
retf
ret
scas
retf
jg
test
sub
push
jmp
or
jbe
(bad)
aas
aad
push
sti
nop
arpl
adc
popf
mov
and
daa
sahf
lahf
popa
nop
iret
xchg
adc
movs
iret
xchg
lds
fs
mov
xor
gs
cmps
inc
push
sbb
dec
push
out
into
push
and
jns
das
xchg
mov
fwait
pusha
push
cmp
lods
mov
mov
test
add
sahf
shr
xlat
adc
mov
adc
pop
jns
rcl
call
sub
or
in
cmp
xchg
shl
sar
aaa
mov
mov
das
or
push
add
je
mov
xor
pop
xchg
test
ds
stos
aad
jne
retf
lods
push
out
fld
cmps
push
sub
clc
ficomp
mov
daa
retf
js
mov
inc
adc
clc
dec
retf
sti
int
add
jl
cmp
pop
jmp
fld
fst
mov
bound
jl
shr
adc
ret
sbb
(bad)
push
imul
(bad)
cmp
aaa
push
pop
pop
or
push
jg
test
cmps
inc
stos
push
das
sbb
gs
or
mov
std
mov
(bad)
lods
inc
cmp
sub
pusha
lds
pop
jns
stos
gs
ins
(bad)
fcom
je
inc
call
sbb
lods
lahf
ret
dec
fistp
fmul
jl
push
cmp
xor
movs
inc
mov
mov
fwait
test
and
pop
aas
aas
in
inc
loope
push
and
mov
xor
mov
inc
and
xor
cmp
std
adc
jecxz
sbb
inc
es
loop
jbe
dec
mov
mov
and
inc
fisub
outs
mov
push
mov
push
push
jno
jo
mov
in
cmp
sbb
cdq
xchg
imul
mov
inc
jno
jo
and
add
sar
xor
lods
addr16
rol
cmp
sbb
and
dec
mul
fwait
jmp
pop
call
sbb
inc
push
(bad)
call
ret
sub
aad
je
xchg
in
mov
xor
mov
inc
dec
ret
jmp
cmp
loop
ss
xor
loope
or
jmp
xlat
in
cwde
and
loopne
push
sub
retf
xor
mov
mov
jmp
rol
dec
inc
or
or
aam
repnz
retf
inc
call
sbb
jo
or
push
pusha
cli
xor
in
frstor
scas
push
gs
das
cmp
mov
mov
pop
mov
stos
push
mov
in
sub
add
pop
in
data16
ja
rol
out
mov
jle
out
and
ret
mov
xchg
retf
add
test
jg
(bad)
repnz
test
xchg
(bad)
xlat
cmps
in
cmp
jp
inc
lahf
ret
inc
ins
fbstp
push
or
cmp
test
div
mov
scas
inc
mov
xchg
adc
ret
pop
enter
test
or
cdq
push
jns
fldenv
cmp
mov
pop
pop
push
ror
pop
std
push
test
mul
cmp
xchg
dec
int
fidiv
adc
mov
mov
xchg
mov
fistp
xor
fsub
movs
loopne
aam
inc
mov
aam
jmp
les
stc
xor
sahf
and
(bad)
sub
ins
pop
mov
js
(bad)
xor
and
rcr
neg
arpl
retf
add
sub
add
dec
call
xchg
dec
xchg
pop
xchg
xchg
mov
xor
addr16
(bad)
js
das
jmp
sbb
or
int
sub
xchg
aad
mov
into
data16
rol
sbb
cli
or
or
pop
mov
or
cmp
sti
pop
(bad)
mov
(bad)
popa
jo
mov
les
and
jmp
mov
repz
punpckldq
cdq
je
(bad)
push
aas
adc
and
inc
(bad)
std
dec
imul
test
(bad)
and
pop
inc
and
or
xchg
dec
fmul
xlat
add
cmp
rcr
shl
fs
adc
add
add
cmp
and
and
fnsave
inc
pop
mov
jle
ret
retf
stos
and
mov
jnp
shr
push
cmps
add
mov
test
sar
add
in
fs
adc
jae
(bad)
mov
xchg
stos
je
ins
js
push
sbb
lds
pop
inc
mov
and
icebp
adc
repnz
ins
add
jnp
xchg
je
mov
add
jne
sbb
call
fisubr
ins
fxch
adc
(bad)
or
call
shr
popf
dec
jp
jmp
ret
or
shl
enter
mov
into
xchg
jo
lahf
mov
fwait
xchg
cmp
sub
and
inc
xlat
shr
aam
ret
inc
pop
aam
xchg
call
sbb
cmps
mov
enter
movs
cwde
call
popa
es
ret
xchg
adc
sbb
jne
mov
add
cmc
cwde
jno
pusha
ret
mov
sub
data16
(bad)
fmul
stc
push
push
clc
mov
lds
jo
(bad)
sbb
enter
mov
ror
(bad)
cmp
test
xor
sbb
daa
cwde
or
and
push
pop
adc
ficomp
mov
jnp
dec
icebp
jp
jecxz
dec
inc
sbb
pushf
inc
pop
ds
inc
out
popa
in
stos
or
dec
imul
shl
cdq
repz
and
retf
sbb
xlat
out
test
xchg
(bad)
cmps
push
sub
loop
push
lock
(bad)
cmc
(bad)
lahf
jo
cmps
mov
outs
sub
or
stc
nop
mov
in
shl
push
sar
adc
push
jecxz
lds
test
in
pop
ins
mov
out
mov
fcmovnbe
fdiv
jle
in
xchg
inc
cmps
jo
mov
loop
into
leave
sbb
sbb
sbb
xor
push
js
mov
ret
jp
push
nop
pop
bound
movs
adc
mov
jo
icebp
jb
pop
mov
mov
bound
and
dec
in
lods
mov
ds
mov
mov
lds
add
jp
das
mov
or
gs
test
in
and
add
cmp
icebp
inc
icebp
push
fist
and
hlt
repz
sbb
enter
cdq
fcmovnbe
dec
sub
in
sub
cld
in
dec
fst
repnz
in
mov
lahf
xchg
mov
ins
jge
dec
mov
pusha
ja
jmp
inc
lahf
pop
mov
and
or
cmp
and
inc
stos
mov
call
dec
jae
push
add
fisttp
js
in
and
push
shr
jns
fild
push
sbb
fidivr
test
aam
inc
movs
dec
push
daa
pop
aas
or
lds
mov
sbb
sub
push
push
out
xchg
ins
dec
out
mov
mov
xchg
icebp
into
pop
or
repnz
xchg
stos
cmp
xchg
mov
push
mov
push
hlt
retf
dec
lock
pop
mov
loop
jae
mov
or
mov
cmp
scas
daa
jae
int
dec
sub
movs
mov
movs
xchg
push
cmps
lea
mov
mov
jg
movs
popf
sar
jge
ds
icebp
test
sub
add
mov
cli
leave
pop
push
inc
pop
push
cmc
call
fcmovu
(bad)
fisub
(bad)
and
ret
cmp
push
in
jl
loope
stos
not
pop
push
xor
pusha
jbe
movs
push
ins
inc
mov
push
sub
push
imul
ins
adc
ret
xor
mov
out
mov
jmp
in
ret
pop
mov
sub
ja
add
mov
push
push
cld
and
sar
or
sbb
mov
xchg
xchg
mov
imul
in
adc
and
int3
movs
jo
xchg
push
mov
aas
test
(bad)
movs
mov
adc
and
mov
iret
sar
(bad)
push
stc
(bad)
cmc
jmp
push
sub
fmul
mov
xor
pop
fild
push
add
push
pop
or
sub
mov
pop
aad
(bad)
retf
retf
aas
inc
cld
imul
adc
imul
dec
xor
in
movs
dec
call
in
inc
sbb
or
or
dec
dec
(bad)
cmc
sbb
pushf
aas
popa
add
pop
cli
dec
inc
xor
mov
or
lahf
add
into
jns
jmp
add
pop
inc
(bad)
mov
inc
add
or
icebp
cmp
loop
(bad)
lea
in
sbb
push
in
inc
out
nop
popa
inc
cdq
push
(bad)
jb
push
(bad)
aas
fldenv
retf
sub
fs
xchg
fisub
or
(bad)
and
in
or
aaa
push
xor
int3
out
lahf
mov
loope
and
and
enter
pop
shl
mov
cmp
sbb
mov
xchg
ins
sub
rcl
mov
ret
or
test
mov
sub
(bad)
pop
add
xchg
jo
js
(bad)
es
push
out
xchg
test
cmp
ror
ss
and
sti
adc
push
or
pop
ins
test
rcr
jae
push
fxch
pop
pusha
cmp
push
add
mov
aaa
push
out
add
dec
mov
lea
xlat
icebp
ds
ror
aad
ss
cmc
or
xor
push
shld
lahf
cwde
xchg
loope
push
std
shr
sub
hlt
gs
loope
mov
sub
out
in
mov
jae
push
or
pop
inc
fistp
test
adc
in
push
adc
push
xchg
call
(bad)
out
xor
je
push
cwde
movs
sbb
iret
sub
pop
sbb
and
idiv
xchg
add
loop
add
sbb
and
mov
cmc
pop
xor
cmps
dec
jns
inc
pop
push
imul
and
and
mul
ret
cs
std
cmp
sti
mov
test
sbb
push
sub
les
pop
jl
mov
xchg
dec
jne
lahf
int
sahf
imul
dec
repz
cmc
std
ret
jmp
in
xlat
inc
movs
clc
xor
mov
lock
sahf
shl
rcl
dec
les
cmp
ins
mov
rcr
adc
pusha
fwait
inc
sbb
(bad)
out
fsubr
aas
sbb
addr16
sar
adc
aad
inc
ret
addr16
sbb
mov
fmul
mov
jbe
fisub
push
and
dec
test
dec
cdq
xchg
je
sub
rcl
ins
lock
shl
pop
mov
or
mov
xlat
cmp
jle
fld
cli
jne
stc
out
dec
mov
jg
add
fsub
add
xchg
out
into
gs
addr16
addr16
jbe
xor
clc
or
sbb
xor
lods
cmps
aas
and
retf
adc
dec
pop
gs
xor
xchg
mov
out
retf
push
sub
movs
std
adc
(bad)
lea
add
cmp
cmp
pop
mov
stos
jb
fadd
adc
js
mov
imul
mov
es
dec
popa
push
ds
push
mul
(bad)
sub
mov
mov
and
into
fldcw
fild
or
push
xlat
dec
lea
cmc
cmp
add
xor
add
push
mov
icebp
jmp
cmps
retf
jg
jmp
enter
into
pop
iret
mov
fcom
movs
or
mov
int3
xchg
repnz
pop
mov
out
movs
xchg
test
std
mov
and
jne
out
push
lods
pushf
std
cld
cmps
xchg
pusha
(bad)
cmps
xlat
jns
mov
pop
push
jne
mov
adc
cmp
cwde
or
mov
mov
mov
or
ja
push
adc
shl
imul
retf
hlt
add
or
and
int
inc
sahf
int
rcl
cmp
aaa
push
jg
inc
out
inc
fadd
jno
popa
fidiv
push
test
in
aas
push
mov
fucomp
repz
inc
dec
leave
test
out
ds
and
(bad)
push
pop
gs
cli
dec
mov
popa
sahf
je
cmps
imul
leave
mov
mov
push
sbb
jnp
sbb
sub
sub
xor
data16
sbb
adc
test
or
mov
sbb
(bad)
xchg
sub
mov
jo
(bad)
lahf
daa
cld
mov
push
ret
ds
outs
enter
pop
dec
xor
fwait
pop
mov
out
inc
repz
add
xor
fadd
mov
cmps
mov
sub
in
sub
ins
call
retf
jmp
call
or
out
cmp
jnp
sbb
mov
test
push
ss
movs
ins
data16
add
pop
adc
ret
mov
rcr
in
xor
cmp
xor
cwde
es
loope
out
add
jno
in
pop
fist
pop
ja
int
cmp
rcl
add
xchg
aad
cmp
pop
jno
pushf
cli
aaa
mov
sahf
xchg
inc
mov
or
movs
out
shl
jb
mov
out
call
add
out
pop
or
dec
jmp
inc
imul
test
aam
in
sbb
add
aam
cmps
push
retf
inc
xchg
jo
mov
xchg
stc
imul
shl
pop
cmp
push
xchg
add
mov
popf
jmp
mov
lds
xchg
jl
or
rcl
(bad)
sti
inc
lds
jns
jns
pop
and
pusha
cli
int
jecxz
data16
rol
push
sub
(bad)
lods
repz
pop
test
push
fdivr
popf
mov
int3
jnp
retf
mov
aas
icebp
xchg
pop
inc
pop
push
loopne
pushf
lock
lds
lea
adc
das
inc
add
sub
inc
jo
inc
and
dec
aaa
aam
or
mov
push
push
fld
xchg
fcmovnbe
xchg
adc
stos
push
loop
mov
jl
push
(bad)
or
xlat
fcmovne
jbe
mov
mov
repz
ins
pop
cmp
imul
mov
or
aaa
push
dec
mov
mov
mov
fucomip
mov
mov
inc
ins
jnp
idiv
ins
push
or
cmp
cdq
or
sub
popa
xor
or
scas
cmp
cmps
sbb
jmp
lds
mov
aaa
cwde
je
inc
enter
push
pop
adc
retf
pop
jecxz
ds
imul
nop
add
mov
inc
(bad)
sub
pop
movs
test
fwait
pop
sub
pop
je
(bad)
jns
ret
push
cmp
xchg
inc
popa
push
xchg
mov
mov
inc
or
sbb
push
out
in
xor
sti
and
scas
sub
mov
jle
jb
pop
iret
xor
lea
js
xchg
adc
push
push
cmps
(bad)
sti
out
adc
push
stos
sbb
push
mov
mov
out
sbb
hlt
jecxz
pushf
scas
shl
inc
dec
sbb
sub
jmp
jmp
or
cwde
mov
ds
mov
xchg
jle
push
lock
fadd
pop
sub
xchg
fs
push
cmp
sub
and
lods
pop
(bad)
jle
cmps
(bad)
pop
dec
call
lods
sub
popa
fwait
cmp
addr16
jmp
and
addr16
jne
(bad)
and
call
les
stos
imul
pop
dec
ins
ins
mov
je
in
into
into
xchg
dec
xor
adc
xlat
jae
dec
jnp
neg
dec
out
adc
push
xchg
inc
stos
jle
dec
push
icebp
scas
(bad)
movs
add
adc
xor
mov
cmc
inc
cwde
sub
or
jge
and
or
sbb
icebp
xchg
sbb
fs
adc
nop
fs
mov
adc
xor
lahf
mov
fcmovnu
mov
add
mov
add
outs
inc
std
ins
mov
push
mov
jmp
stc
test
dec
xor
pop
clc
lahf
and
daa
mov
cs
cmp
push
loopne
xor
loope
(bad)
in
mov
in
push
xchg
int3
mov
repz
outs
out
xor
aad
add
cmpxchg
mov
stos
pushf
ds
test
xchg
pop
in
xor
lahf
inc
xor
xor
lahf
mov
mov
in
cli
cmp
out
jae
mov
call
push
jns
jmp
dec
push
in
jno
cdq
(bad)
retf
or
sub
mov
inc
fdivr
dec
out
test
dec
push
jae
mov
(bad)
iret
mov
cld
push
hlt
movs
daa
inc
lahf
push
(bad)
test
push
sbb
dec
fs
bound
jge
mov
test
mov
jmp
pop
lea
cmp
daa
lea
(bad)
cmc
xchg
and
mov
loop
les
lds
or
popa
xchg
adc
sbb
loope
or
sbb
loope
mov
scas
int3
leave
mov
pop
add
lock
pop
loop
sub
retf
push
add
mov
out
pop
add
push
sti
(bad)
icebp
mov
outs
cmp
es
fild
mov
stos
rcl
inc
jae
test
xchg
(bad)
ror
push
call
jp
push
sar
and
cmps
leave
psubd
mov
jnp
jmp
cmps
sbb
arpl
lock
jb
call
out
stc
ret
ds
add
(bad)
leave
ja
mov
hlt
push
fwait
mov
das
push
test
outs
lods
(bad)
jns
push
loop
cli
in
movs
fild
and
cmps
pop
cmp
or
push
pushf
xchg
and
push
aam
mov
cs
xchg
sub
mov
out
add
jp
mov
add
sti
pop
loopne
ret
xchg
and
cli
fidivr
repnz
add
push
and
push
dec
xchg
mov
xchg
xchg
shl
adc
xlat
dec
pusha
xor
retf
cdq
mov
mov
and
fst
or
daa
mov
mov
mov
or
outs
aad
xor
sti
or
je
imul
cs
mov
out
iret
sub
pop
xor
or
leave
out
push
int
lods
push
sub
inc
jmp
xor
aam
push
clc
adc
fisttp
mov
cmp
repz
fcmovnbe
into
cmps
outs
push
imul
cmp
fbstp
mov
or
mov
sbb
(bad)
sbb
ds
shl
sub
nop
jg
ins
(bad)
pop
xchg
pusha
loop
inc
cmp
cs
imul
dec
sbb
(bad)
xor
jp
repnz
(bad)
cmps
jg
adc
and
sub
pushf
inc
xor
icebp
mov
sti
inc
sbb
mov
les
add
xchg
pushf
xchg
sbb
ret
and
test
sbb
aam
inc
inc
ins
inc
adc
adc
or
add
in
(bad)
call
cmp
inc
sub
mov
out
jo
pop
dec
ja
sub
jl
pop
inc
sub
add
push
add
cmp
cli
pushf
sub
adc
pop
adc
lds
push
sub
inc
mov
mov
mov
add
cmp
or
dec
pop
cmp
je
es
int
pop
mov
lods
pop
adc
xchg
xor
outs
loop
push
push
dec
(bad)
adc
sti
inc
js
xor
fstp
or
mov
jo
pop
xor
xchg
and
in
adc
adc
jo
or
add
jmp
jmp
(bad)
fnstenv
xlat
sahf
cdq
ds
xchg
add
mov
cld
push
fdivr
int3
test
hlt
data16
xlat
test
pop
cmp
cmp
hlt
jle
and
stos
stos
test
sahf
aad
jecxz
mov
fiadd
jmp
sub
js
(bad)
mov
imul
out
in
es
and
sbb
call
adc
loope
fnstenv
ret
mov
add
and
xchg
out
pop
push
imul
popa
and
imul
lds
add
fwait
mov
cmps
mov
mov
mov
rcl
inc
retf
xchg
push
xor
ret
mov
loopne
sub
pop
xor
mov
stc
int3
cmp
dec
clc
shl
(bad)
retfw
int3
repnz
sub
mov
pop
rcr
xchg
or
dec
xchg
cmps
xchg
sbb
adc
sbb
lods
popf
jb
push
ins
(bad)
in
vmovups
ins
loopne
sbb
mov
scas
jae
push
push
fldenv
cmps
and
mov
jp
pop
mov
pop
out
cmps
jne
xchg
xchg
retf
cmp
cmp
in
mov
nop
mov
cmp
scas
test
adc
add
(bad)
out
retf
sbb
in
cmp
cmp
inc
jl
and
imul
movs
(bad)
not
or
aam
and
retf
sub
sahf
xchg
mov
mov
push
jge
jp
xor
pop
mov
pop
dec
pop
les
(bad)
popa
jb
dec
sbb
adc
xchg
xor
aas
lock
enter
adc
or
das
add
pop
cmp
dec
sbb
mov
push
jmp
jmp
out
mov
fs
out
or
ret
test
(bad)
push
inc
pop
lods
mov
mov
jne
dec
test
(bad)
cs
add
loope
stos
fcom
adc
add
sar
out
jle
sbb
(bad)
xchg
and
jp
pop
sbb
dec
lods
inc
inc
pop
dec
aaa
mov
pop
inc
mov
push
rcr
push
in
(bad)
jmp
push
ds
inc
inc
shl
gs
std
out
adc
mov
stos
jnp
mov
mov
pusha
iret
mov
and
inc
lods
push
mov
mov
fidiv
xchg
mov
xchg
sbb
adc
ins
and
repz
out
ror
scas
lea
in
dec
add
xchg
push
aaa
ror
shl
ja
imul
and
mov
inc
addr16
inc
xchg
retf
out
mov
jae
mov
retf
ret
into
pop
sub
repz
push
nop
call
inc
daa
lods
xchg
je
adc
pop
fsqrt
enter
xor
das
lods
fist
je
rcl
loope
cmps
jmp
lods
outs
fimul
pop
add
add
je
pop
sbb
fbstp
xor
push
shr
jl
jbe
or
sbb
test
adc
sbb
pusha
jle
stos
push
(bad)
mov
(bad)
fsub
repnz
push
arpl
(bad)
shl
push
(bad)
out
outs
ficom
add
add
sub
pop
ins
popa
mov
pop
xor
es
push
adc
(bad)
and
fnstsw
out
mov
icebp
mov
xchg
pop
sbb
cmp
in
fiadd
int
xchg
or
mov
pop
xchg
outs
adc
cli
sbb
mov
(bad)
(bad)
cmp
xor
mov
mov
mov
cmc
jne
cmp
xor
mov
ds
cmp
mov
mov
movs
inc
neg
xchg
dec
xchg
ins
pop
xchg
pop
clc
aas
and
push
pushf
stos
xor
int3
and
push
sub
push
jnp
test
jmp
sub
or
ins
jb
les
lea
aas
adc
dec
daa
hlt
and
or
pop
push
mov
xchg
xchg
fcomp
popa
lock
mov
dec
(bad)
into
sub
xchg
rcl
mov
push
retf
lods
pop
lds
daa
xchg
xchg
mov
mov
push
inc
pop
pop
cld
inc
xchg
inc
fadd
inc
sub
jno
pushf
jb
add
call
lds
pop
cmps
add
lea
out
cmp
mov
leave
in
in
and
clc
dec
mov
(bad)
rcl
mov
aas
add
outs
jnp
pushf
dec
xchg
dec
shl
mov
mov
imul
ss
inc
fcomip
push
dec
mov
sub
shl
cdq
(bad)
iret
and
xchg
push
inc
push
call
adc
or
push
icebp
out
shr
cmps
movs
cmps
and
icebp
cwde
iret
cmp
sbb
iret
imul
cwde
imul
add
fcomp
xor
sbb
xor
inc
mov
push
ja
mov
xor
jno
popaw
cmps
inc
bound
shl
fsub
aaa
stos
dec
pop
add
lahf
xchg
in
sbb
addr16
loopne
jle
pop
int
pop
sahf
sbb
out
dec
sbb
sub
sahf
inc
mov
out
xor
pop
inc
adc
shr
es
je
sbb
jecxz
pop
or
mov
sub
movs
sub
out
jns
sub
ds
nop
aam
and
and
mov
pop
sub
fsubr
imul
retf
div
pop
xor
push
sub
in
fld
push
pop
not
nop
inc
add
mov
out
dec
(bad)
enter
lea
daa
aam
and
push
call
lds
cmp
dec
(bad)
and
fcmovnbe
add
stos
pop
cmp
dec
dec
(bad)
cmc
lods
or
in
mov
mov
and
in
sub
cmp
(bad)
mov
ret
push
add
adc
push
retf
jmp
mov
push
add
pop
mov
loop
xchg
adc
in
pop
jl
rol
sti
lods
push
into
lds
mov
ins
cld
imul
sub
mov
adc
xor
xchg
aam
or
sub
ret
sti
add
leave
jecxz
or
xchg
outs
hlt
pop
rol
int
jle
fsqrt
xor
add
add
mov
add
xchg
jmp
rcl
cmp
fst
arpl
stos
aaa
out
mov
dec
mov
mov
cmc
aad
loopne
mov
inc
popf
sbb
rol
sub
jnp
mov
dec
lds
repz
cmps
push
int
dec
pusha
jecxz
fucomp
push
pop
stos
adc
cmps
stos
push
lea
pop
lahf
mov
xchg
xor
sub
leave
adc
fdivr
mov
in
mov
mov
enter
push
nop
inc
mov
ficomp
pusha
sub
sub
aaa
xor
loop
shl
dec
sub
std
inc
and
dec
push
mov
rcr
xchg
sub
cwde
inc
in
repnz
sub
dec
outs
push
sbb
ja
movs
cmp
lds
out
std
xchg
inc
nop
or
jae
cmp
mov
sub
mov
sbb
pusha
cs
mov
jae
sti
bswap
sbb
mov
jmp
imul
push
pop
test
xor
jmp
sub
push
call
arpl
dec
out
lea
push
xchg
sub
(bad)
mov
or
inc
adc
bound
test
arpl
and
inc
daa
mov
sub
shr
pop
jmp
push
mov
push
test
shr
inc
ins
xchg
xor
pop
sub
push
and
loopne
dec
mov
nop
jmp
into
fist
adc
shr
push
imul
fs
not
daa
nop
jmp
lea
lahf
icebp
adc
gs
scas
fsubp
in
mov
ret
xchg
xchg
test
lea
push
leave
inc
ds
pop
stos
fsubr
mov
rol
mov
and
out
jmp
mov
test
div
xlat
pop
(bad)
std
xchg
mov
pusha
jo
fucomip
xchg
lods
inc
dec
mov
or
fld
and
cld
push
in
and
push
sahf
lds
or
sbb
push
push
sbb
dec
rcr
fcmove
and
frstor
sub
xor
and
and
inc
int3
dec
push
and
pop
pop
(bad)
ds
shr
scas
xor
fs
pop
xchg
or
push
dec
gs
xchg
dec
in
pop
pop
movs
pop
mov
adc
mov
mov
out
adc
jmp
(bad)
mov
xchg
add
test
in
pusha
aaa
xchg
cmp
stos
loope
xor
mov
jnp
push
jg
lock
sti
push
sbb
mov
mov
jbe
ins
shl
fdiv
inc
cli
mov
sar
mov
fild
mov
push
jg
int3
repnz
mov
cmps
into
lea
mov
jle
sahf
mov
push
pop
outs
sub
aas
das
ins
and
cld
jbe
adc
or
cmp
and
push
ror
jae
fucom
mov
cdq
or
jnp
jl
clc
cmp
inc
ds
xchg
jo
repnz
xor
pushf
pop
mov
bound
push
mov
in
cld
cld
das
and
jmp
aam
dec
jmp
sbb
inc
jecxz
out
fcmovnb
ret
shl
das
loope
jnp
loope
and
adc
add
jg
js
mov
xchg
ret
or
stos
push
inc
mov
das
or
cmovnp
inc
jbe
scas
loope
cwde
mov
lods
pop
ins
adc
outs
add
mov
ret
out
repz
and
and
fcom
xchg
jne
xor
in
ficom
cmps
aad
jg
mov
mov
add
jmp
sbb
into
shl
cmps
fs
lea
cmp
ds
sti
cmp
mov
pop
push
mov
add
xchg
pop
mov
sbb
sub
cmps
hlt
xor
pop
xor
pop
or
mov
aaa
mov
cmp
ror
lods
inc
and
mov
jmp
stc
movs
aam
dec
jmp
jno
inc
inc
mov
jmp
jmp
sub
test
mov
imul
mov
sub
lds
out
xchg
aaa
mov
ds
mov
cli
addr16
fadd
xor
imul
push
popf
sub
mov
int
lods
mov
push
pop
scas
cmp
sub
std
(bad)
aas
cmp
pop
and
cmp
pop
mov
icebp
sub
hlt
imul
sub
aaa
pop
leave
or
fbld
(bad)
int3
mov
xor
jbe
ret
call
cmps
fmul
add
push
cmp
movs
loop
movs
sub
cmp
mov
(bad)
mov
xor
out
repz
inc
fimul
xchg
xor
fwait
dec
jecxz
fistp
(bad)
fadd
cdq
jle
xchg
stos
loope
dec
push
gs
dec
repnz
cmps
scas
daa
dec
in
test
je
clc
sub
jno
mov
(bad)
cmps
in
sub
imul
xchg
dec
in
jne
cs
inc
sbb
jmp
add
pop
lock
push
arpl
retf
in
push
(bad)
fidiv
jno
or
pop
call
popa
jmp
movs
ds
idiv
test
xor
and
jmp
mov
loop
test
xchg
push
cwde
jno
jmp
mov
repz
imul
push
popa
dec
mov
adc
xlat
popf
fdivr
push
sbb
cmp
ret
sbb
cmp
mov
ror
push
jns
loope
xchg
pop
mov
and
mov
sbb
hlt
ja
add
push
cmp
dec
push
mov
dec
or
jno
popf
daa
hlt
mov
inc
out
push
shl
add
ins
or
shr
pop
icebp
add
arpl
mov
and
lock
test
es
mov
dec
mov
loope
xchg
rcl
sub
aad
jno
or
(bad)
in
fs
or
js
cmp
adc
aaa
cmp
inc
xchg
stos
mov
add
pop
cld
xor
mov
mov
cwde
hlt
stos
inc
jecxz
jns
or
in
mov
pop
(bad)
arpl
sub
jl
adc
fisttp
shr
(bad)
mov
repnz
dec
out
add
pop
pop
icebp
mov
add
add
dec
jbe
fs
outs
xor
xchg
mov
pop
inc
sbb
arpl
mov
(bad)
das
jl
sub
cmp
and
mov
or
pop
xchg
jg
lahf
sub
mov
scas
dec
ins
push
test
sbb
cmp
or
cld
pop
adc
push
cmp
pop
ja
push
fisttp
pop
xchg
mov
sbb
and
fcom
aas
loope
imul
fnsave
pop
push
imul
shl
fsubr
je
push
mov
es
data16
jo
mov
aam
fsubrp
pop
cmp
xor
cwde
inc
test
stos
cdq
out
ss
in
dec
ss
enter
xor
push
push
jo
fisubr
outs
(bad)
call
sbb
mov
out
jecxz
iret
in
pop
(bad)
mov
cmp
push
fwait
out
out
pop
adc
adc
adc
push
scas
jae
fisub
xor
cmp
adc
dec
dec
sub
mov
pop
xchg
arpl
sahf
dec
push
pop
cwde
rcl
mov
push
cmps
pop
pop
and
adc
loope
outs
sub
push
dec
add
jmp
push
outs
or
mov
cmp
aaa
mov
cs
cmps
scas
mov
inc
ss
lock
sub
ds
out
and
hlt
mov
outs
jns
loopne
imul
mov
inc
std
mov
and
dec
dec
mov
add
fbstp
mov
stc
xchg
bound
rol
sub
xor
shl
or
and
out
mov
add
inc
inc
fadd
retf
sbb
lock
out
jge
and
mov
xchg
push
add
test
fs
(bad)
pop
pop
mov
out
out
jbe
adc
cmp
xor
sar
mov
(bad)
leave
mov
xor
sbb
and
jmp
mov
leave
stos
xchg
les
mov
sbb
push
pop
xor
aam
mov
jl
add
pop
repnz
dec
sahf
jg
xor
cmps
mul
call
mov
mov
xor
mov
adc
ss
hlt
scas
fcomp
push
pop
call
pop
das
ror
call
addr16
les
jle
xor
xchg
data16
imul
ror
adc
xor
add
cmp
cmc
pop
cli
fisttp
out
mov
push
jnp
sub
sbb
pusha
jg
imul
ret
aam
dec
scas
call
sub
pop
clc
je
push
or
rcr
fnsave
retf
into
loopne
leave
dec
in
and
cmps
outs
lea
inc
sar
sub
cli
mov
retf
cs
loopne
std
fwait
adc
lods
sahf
sbb
lods
dec
adc
and
sub
adc
dec
push
unpcklps
je
sub
clc
(bad)
stc
push
test
aam
bound
pusha
ret
iret
dec
add
mov
loop
push
and
popa
push
mov
loope
icebp
(bad)
xlat
mov
std
xchg
or
movs
in
shr
rcr
data16
mov
jge
cmps
ret
dec
cmp
mov
jge
mov
mov
inc
in
test
(bad)
xor
int
dec
push
dec
and
in
pop
or
dec
fsub
mov
sbb
fisubr
jnp
addr16
jnp
dec
in
mov
repnz
clc
push
mov
and
add
dec
inc
cld
push
cmp
mov
and
sub
push
mov
int
lahf
mov
jp
inc
cmps
inc
sbb
movs
(bad)
xor
dec
movs
xor
push
jg
dec
pop
mov
inc
add
ins
add
(bad)
and
(bad)
jo
imul
outs
push
xor
popf
xor
xor
call
adc
mov
les
jg
sbb
or
lds
cmp
(bad)
sub
and
sub
test
push
gs
push
and
pop
lds
arpl
jmp
sbb
sub
dec
pop
add
cmp
(bad)
idiv
pop
mov
inc
pop
call
sub
lods
test
push
outs
scas
mov
fdivrp
imul
push
loope
mov
jnp
daa
retf
xor
shl
cmp
pop
push
xchg
push
push
outs
sub
xchg
and
outs
aas
adc
les
inc
repnz
sub
cmps
mov
movs
and
ss
cli
push
xchg
scas
jo
adc
inc
add
add
fs
dec
cli
jecxz
mov
mov
ret
pop
or
pop
fidivr
dec
clc
or
push
push
repz
sbb
rcl
xlat
sub
xor
call
call
mov
aaa
call
arpl
je
call
and
jl
pushf
jbe
mov
jns
jmp
(bad)
jp
and
(bad)
jmp
push
inc
push
mov
test
or
push
mov
dec
mov
dec
jnp
sbb
jmp
inc
das
ret
pop
retf
sub
fs
cmp
call
rol
(bad)
aam
cdq
xor
sbb
sbb
movs
mov
out
sub
repz
mov
lods
add
cmp
push
pop
fidivr
dec
test
jecxz
je
cmc
pop
scas
cs
cmps
cmp
inc
mov
test
push
ds
or
fsub
dec
jmp
xor
mov
retf
frstor
xchg
push
adc
imul
aas
xchg
test
retf
or
and
stc
dec
jg
jbe
mov
jno
and
(bad)
loopne
dec
call
lods
cdq
inc
jno
mov
cli
inc
jecxz
sbb
pop
cmp
cwde
cmp
jle
nop
(bad)
(bad)
cld
rcr
adc
jbe
sahf
adc
push
adc
push
cs
fcmovnb
mov
test
sub
push
and
xchg
rcl
cdq
jecxz
push
sub
mov
scas
cmp
in
pop
add
and
leave
into
xchg
jns
jo
jmp
xchg
add
adc
sbb
or
(bad)
cmp
pop
mov
out
sti
ins
test
push
sbb
test
mov
jae
fmul
pop
or
dec
and
stos
cmp
xchg
inc
mov
sub
jmp
and
cmps
sub
outs
sub
mov
clc
xchg
inc
push
popf
fsub
scas
fld
jb
addr16
pop
enter
in
xor
aas
cmp
cmp
cmps
popf
out
jmp
fmul
ficomp
mov
cs
cld
fs
dec
dec
rol
ss
sti
xchg
ins
das
das
out
rcr
shl
ret
dec
test
sbb
cmp
into
sub
fidiv
sbb
int3
gs
movs
cs
push
test
and
add
movs
xor
add
mov
push
pop
pop
dec
mov
stc
test
out
cld
push
lds
in
adc
out
cwde
or
mov
adc
mov
dec
jno
add
or
cmp
add
imul
add
mov
sub
dec
loope
cmp
les
(bad)
pop
mov
test
ss
inc
add
mov
cmp
xchg
pop
cmp
inc
call
cmp
(bad)
lock
push
retf
lods
loopne
arpl
jecxz
ins
xlat
clc
xchg
and
lahf
dec
fdivr
pop
pushf
add
faddp
mov
fiadd
rcr
loop
xchg
je
mov
sub
cmp
lock
lods
push
(bad)
jmp
push
sti
mov
xchg
rcr
dec
xor
std
push
rcr
adc
scas
sub
cmp
mov
ins
xchg
xchg
push
out
mov
test
pop
leave
ds
mov
mov
nop
daa
push
movs
mov
cmp
cmp
js
jl
pop
movs
add
pusha
pushf
imul
mov
push
xchg
mov
ds
mov
std
(bad)
pop
or
out
mov
push
retf
cmps
call
fld
je
clc
out
mov
fisttp
xor
jg
scas
push
lods
mov
sub
leave
enter
sti
gs
cmp
cmp
hlt
adc
retf
cli
aaa
mov
pushf
pop
push
mov
outs
dec
jmp
cwde
and
sub
ds
fcomip
mov
lock
and
jo
sbb
and
out
js
jnp
stos
pop
adc
pop
pop
outs
pop
mov
xchg
xchg
mov
jmp
es
lods
dec
adc
enter
in
pop
add
pop
pop
fmul
jecxz
inc
dec
bnd
adc
scas
xchg
nop
sti
push
inc
loope
cmp
dec
pop
das
sub
ret
je
cmp
inc
adc
dec
push
xor
ds
outs
add
enter
push
jns
and
mov
ret
nop
mov
lahf
cmp
shl
mov
dec
pop
xor
mov
adc
push
mov
arpl
mov
jmp
and
or
shl
mov
das
xor
ins
jo
iret
inc
inc
cmp
hlt
nop
out
inc
repz
lods
jmp
mov
push
or
shl
mov
ins
inc
rcr
dec
and
out
stos
jg
adc
or
bound
adc
sub
test
or
out
scas
mov
imul
in
adc
aaa
adc
cmp
mov
shr
arpl
xor
fchs
and
jb
shl
mov
cmp
ds
sub
rcl
(bad)
fwait
pop
mov
inc
aam
cs
fisubr
mov
sbb
test
clc
stc
xchg
inc
dec
jo
mov
mov
inc
pop
ret
dec
xor
dec
dec
inc
xor
push
repz
lods
and
or
pop
hlt
mov
fstp
mov
add
out
out
inc
ds
jmp
inc
dec
mov
jnp
inc
dec
push
js
mov
loopne
xlat
cmp
(bad)
popf
daa
gs
and
cmp
icebp
test
shl
sar
int
repz
outs
or
mov
sub
add
adc
push
fadd
repz
pop
push
jno
xchg
popa
pop
sub
fist
scas
xlat
cmps
call
bound
pop
out
in
lds
jnp
out
bound
or
jns
pop
test
mov
xor
jmp
in
jb
pop
mov
sub
sub
mov
inc
js
xchg
ja
sub
jecxz
push
push
push
in
int3
inc
icebp
jg
mov
add
or
and
ja
dec
ret
mov
mov
push
(bad)
int3
sub
pop
push
or
push
and
hlt
push
dec
cld
ror
xor
or
dec
inc
mov
std
inc
(bad)
adc
jne
ret
xor
jne
addr16
aam
mov
or
retf
int
add
xor
mov
jns
push
mov
cmp
sub
test
lahf
mov
push
push
fdiv
push
std
xchg
arpl
fwait
int3
or
clc
adc
sub
js
je
or
test
add
push
dec
xchg
pop
test
and
add
mov
push
pushf
ins
mov
adc
pop
add
enter
rol
sbb
icebp
xchg
xor
and
(bad)
sti
in
push
outs
cmps
and
inc
adc
mov
(bad)
jmp
jmp
xchg
aam
jmp
and
xor
sti
pop
and
xlat
push
shr
dec
imul
inc
and
mov
ins
(bad)
jmp
ja
int3
xor
ins
sbb
das
das
and
dec
adc
xchg
xor
push
fbld
sbb
(bad)
mov
jmp
and
mov
loopne
pop
nop
xchg
push
mov
inc
dec
sbb
das
push
(bad)
jmp
add
mov
scas
loop
mov
xor
adc
mov
out
idiv
push
out
ins
mov
test
push
dec
aad
xor
xlat
mov
cwde
movs
xchg
dec
js
push
mov
popa
push
mov
lds
add
in
nop
pmaxub
pop
push
adc
dec
es
mov
in
clc
sub
sbb
xor
test
repz
fwait
mov
jle
sub
clc
jmp
dec
add
inc
bound
mov
test
jmp
jl
iret
sub
mov
cmps
or
sahf
inc
fucomip
repz
sub
xor
ss
sbb
xor
imul
mov
jno
mov
shr
popa
adc
and
fldcw
cmc
retf
adc
sbb
mov
adc
xor
repz
add
xor
jb
outs
xor
mov
mov
call
fadd
fiadd
mov
in
mov
mov
out
in
xor
cs
or
xchg
mov
dec
test
call
xchg
xor
dec
inc
sub
lds
xor
and
das
cdq
dec
ins
push
xchg
ror
cmps
or
pop
jbe
nop
repnz
or
xchg
sub
inc
xor
inc
cwde
mov
mov
sar
xchg
pop
add
pop
fild
test
xchg
imul
int3
retf
sbb
cmp
cmps
add
cli
arpl
ds
jo
pop
or
push
push
cmps
or
dec
or
in
(bad)
jb
shr
outs
cmp
int
sub
push
cmp
add
ss
mov
adc
add
push
pop
xor
cmp
out
dec
es
xchg
pop
pop
scas
loopne
dec
sub
push
add
(bad)
xchg
sbb
xor
rcr
and
icebp
fisub
cmp
int3
mov
xor
dec
inc
out
sbb
cmp
ds
lods
mov
test
jmp
jns
cmps
out
xor
adc
add
push
dec
xchg
xchg
inc
inc
test
mov
repz
cmp
cmp
dec
and
outs
inc
test
loopne
xor
cmp
aaa
cld
xchg
sub
movs
xlat
or
and
push
mov
call
js
pop
push
cmp
mov
js
xchg
xchg
shl
ins
push
jne
je
jecxz
sub
adc
pop
js
lods
js
sar
sub
xor
push
sysenter
repz
xor
dec
push
sbb
out
aad
mov
loop
mov
mov
fs
inc
dec
addr16
dec
mov
xor
gs
outs
or
enter
pop
scas
mov
mov
sub
retf
add
rcl
xchg
push
xor
(bad)
sub
addr16
cmps
cmp
outs
inc
ror
cs
mov
mov
pop
imul
lds
pop
test
cmp
prefetcht2
out
xor
push
adc
xor
loope
fwait
idiv
push
cmove
add
inc
jmp
mov
rcr
aad
clc
js
icebp
push
dec
sti
(bad)
jmp
shr
adc
ja
xor
jne
fs
sbb
xor
xchg
add
out
add
pop
in
(bad)
and
pop
pop
and
ins
xchg
pop
clc
stos
hlt
xchg
mov
retf
loope
rcl
fwait
movs
push
cmp
aas
mov
js
inc
mov
and
(bad)
mov
mov
jmp
ss
lods
mov
int3
les
in
cmp
neg
lahf
mov
retf
ja
push
sbb
bound
cmp
nop
inc
push
dec
push
cli
fcmove
cwde
sub
cmp
inc
jl
cs
push
movs
test
cld
inc
std
test
sbb
sub
sub
sbb
mov
xchg
std
dec
mov
les
push
push
mov
jg
pop
cmp
xlat
mov
cmp
or
shl
mov
in
and
or
cmovno
test
lahf
add
push
into
inc
xchg
sbb
repz
sub
sub
mov
popf
pop
lods
sub
xor
add
sti
pop
push
jo
lock
fwait
jne
cmps
push
data16
mov
dec
mov
push
xchg
pop
addr16
adc
or
(bad)
je
aad
or
leave
xor
pop
fcmovb
clc
mov
test
or
or
xchg
fcom
mov
and
sbb
jne
in
xchg
cwde
mov
retf
cmps
xchg
cmp
inc
rep
js
imul
shl
test
jecxz
popa
shl
mov
scas
jne
or
adc
pop
add
test
inc
(bad)
clc
fcmovnbe
aas
mov
int
lock
mov
cmp
add
enter
xchg
push
adc
dec
xor
jae
ins
sbb
jmp
mov
xor
push
add
cli
out
clc
dec
mov
lods
and
popf
pop
push
popa
enter
pushf
mov
scas
and
sar
mov
inc
xor
aas
mov
and
fcom
jmp
loopne
xchg
clc
mov
cmp
sbb
pop
std
inc
aaa
hlt
sbb
out
push
adc
jns
fisubr
adc
mov
jecxz
dec
bound
(bad)
scas
cmp
inc
xlat
mov
sub
push
(bad)
xchg
dec
jae
sub
jno
dec
dec
adc
inc
call
jg
loope
pop
push
loope
push
cmps
xlat
inc
and
ret
dec
and
adc
pop
stc
sub
mov
aam
add
mov
jae
(bad)
push
jb
mov
inc
adc
and
jp
cmps
mov
loope
xor
push
mov
adc
cmp
outs
fwait
dec
lods
pop
sub
push
jmp
sub
int
movs
inc
push
int3
xor
ret
loope
(bad)
bound
xchg
add
stc
push
mov
mov
mov
add
cmp
ja
sub
(bad)
jg
outs
mov
pop
out
aas
out
inc
setp
inc
pavgb
and
cmc
scas
loopne
into
into
sbb
pop
jbe
jnp
sar
stos
imul
loope
je
add
ds
add
pushf
fld
rol
ss
cmp
in
in
xchg
cwde
cmp
fisub
stos
ret
mov
jmp
sub
gs
inc
adc
(bad)
pop
in
cli
stc
loope
or
push
sbb
pop
sbb
add
xor
inc
xor
jl
dec
mov
sbb
fmul
aam
xor
mov
mov
rcl
jae
xchg
xchg
(bad)
dec
out
movs
into
adc
sbb
xchg
pop
stos
movs
xor
or
fnsave
leave
mov
ror
pop
push
mov
push
dec
pop
jmp
imul
adc
push
jge
jno
ds
sbb
pop
cmps
or
rcl
mov
aad
(bad)
fisub
mov
cmc
cmc
push
adc
cmp
das
(bad)
jne
loope
mov
popa
loope
cmps
lods
xor
out
pop
and
cmp
pop
leave
mov
test
pop
call
mov
popf
aaa
xor
in
push
retf
fadd
lock
adc
or
push
inc
hlt
mov
int
jne
add
push
mov
xor
xchg
cmp
es
fs
push
dec
cdq
cwde
out
test
mov
dec
leave
inc
adc
smsw
xor
push
xor
pop
sub
push
push
loope
test
xor
mov
mov
add
adc
ret
pushf
cmp
xchg
in
xchg
icebp
push
sub
jecxz
out
xchg
and
int3
retf
fst
jnp
xor
pop
lods
out
shl
daa
jae
xchg
imul
sbb
test
jmp
and
dec
or
les
jne
xor
sahf
dec
jle
xchg
adc
pop
jno
xchg
sub
xor
or
fidiv
test
ss
popa
push
mov
and
mov
mov
stos
inc
inc
xchg
pusha
cmc
xor
shl
jae
xchg
out
icebp
push
fld
out
les
cmp
pop
dec
fs
xlat
jo
pop
call
xor
cld
sbb
mov
adc
mov
add
lea
xchg
repz
mov
sti
adc
mov
out
stos
cmp
sbb
push
mov
mov
sbb
addr16
push
mov
pop
xchg
or
inc
dec
mov
mov
push
inc
repz
popa
mov
stc
or
cmp
adc
push
jbe
push
mov
cmp
stos
test
(bad)
stc
add
xor
push
je
cmp
mov
adc
jg
xchg
jo
mov
add
enter
cmp
pop
jns
out
das
xor
mov
test
dec
mov
xchg
call
repz
bound
dec
cwde
int
hlt
jns
mov
das
cld
pushf
sub
mov
test
and
or
pushf
in
xchg
adc
jno
sub
fwait
adc
popf
movs
pop
mov
jns
sub
mov
popa
dec
xor
sbb
push
adc
mov
jne
xchg
jge
int3
inc
fisubr
add
data16
xchg
nop
das
sbb
(bad)
outs
and
das
cdq
popa
js
ins
mov
stos
mov
dec
and
lea
inc
xchg
jle
movs
push
and
push
test
ins
xor
test
mov
mov
mov
mov
inc
push
cmp
adc
dec
clc
in
push
(bad)
ja
loopne
ds
je
adc
jne
sub
movs
push
adc
adc
dec
push
pop
repz
cmc
mov
xchg
adc
stc
aad
(bad)
std
nop
lock
sub
xor
sub
mov
mov
iret
jmp
pop
sub
mov
rcr
jae
loopne
sbb
jne
pusha
mov
adc
leave
out
test
dec
jp
fnstcw
dec
mov
xchg
inc
dec
jmp
out
sbb
sbb
neg
mov
sbb
in
cdq
fiadd
jp
cmc
and
or
adc
push
dec
cmp
ret
dec
adc
and
and
popf
(bad)
sbb
std
mov
xchg
lds
mov
jne
sbb
cmp
rcr
and
test
cmp
shr
mov
loop
mov
sti
and
jb
lds
mov
sbb
cmp
push
scas
push
and
dec
jne
mov
xchg
or
je
mov
push
inc
(bad)
or
cmovae
in
mov
xor
mov
xchg
add
jns
add
rcr
jg
arpl
pop
or
rcr
mov
mov
mov
xchg
retf
sub
popa
push
jbe
add
or
cld
popf
jae
or
jne
lods
jb
lds
(bad)
mov
fcmovnbe
fiadd
add
test
out
cmc
mov
xor
fnstenv
sbb
jg
cmps
and
out
call
mov
test
arpl
mov
mov
ret
pop
cmp
mov
cld
sub
sub
cld
and
jp
or
lock
lods
mov
push
pop
fstp
mov
sub
add
mov
and
mov
mov
xchg
sahf
xchg
dec
xchg
dec
pop
sub
mov
mov
xchg
and
popa
fldenv
mov
cmp
leave
rcl
loop
xchg
adc
pop
cli
dec
add
add
imul
daa
sahf
jbe
jg
lahf
push
in
jno
sub
and
xor
scas
adc
test
dec
movs
xor
inc
sub
jecxz
out
leave
imul
stos
pushf
mov
add
nop
mov
adc
or
mov
xchg
ffreep
outs
ins
mov
inc
je
addr16
dec
mov
cli
call
sbb
shr
mov
jmp
in
pusha
(bad)
xlat
lods
ins
add
sub
mul
cmps
sub
aad
jecxz
out
out
call
bound
xor
loope
retf
add
mov
fistp
adc
sub
in
cmp
cwde
fcom
stos
inc
pusha
or
xchg
leave
loop
dec
loop
iret
add
jae
loope
push
daa
sub
aaa
mov
inc
xor
mov
jge
push
and
ins
imul
inc
int3
push
jb
(bad)
jmp
neg
jns
pop
push
pop
cwde
ja
cdq
adc
mov
inc
shr
(bad)
not
ds
lea
cmp
xor
iret
mov
fs
aaa
or
pop
loope
push
inc
cmc
adc
mov
(bad)
std
jno
jmp
rol
cmps
mov
movs
(bad)
jle
fldcw
cmp
es
int
fdivr
and
mov
xchg
adc
and
pop
mov
pop
inc
or
retf
ror
les
fisubr
das
(bad)
and
mov
sbb
fmul
dec
pop
jb
sub
jecxz
inc
push
push
cmps
test
fisttp
les
into
push
xchg
or
inc
dec
jp
xor
cld
mov
inc
cmp
jle
mov
push
stos
xor
dec
aad
pop
mov
rcr
test
cmp
inc
and
pop
nop
dec
jbe
cmc
mov
dec
jge
(bad)
clc
jle
call
shl
mov
stos
cmp
loope
mov
xchg
mov
in
and
int
inc
popa
jbe
dec
pusha
dec
jb
frstor
or
pop
jmp
fcom
mov
pop
mov
in
jg
adc
mov
das
push
mov
fwait
cmp
mov
add
bound
fnsave
pop
mov
mov
addr16
pop
xor
jecxz
frstor
inc
push
aam
add
adc
sahf
mov
mov
dec
sbb
fstp
int3
cmc
cmc
pop
clc
imul
xchg
imul
repz
pop
cmp
in
lea
fstp
(bad)
enter
push
xor
pop
es
push
push
push
test
push
adc
popa
popa
out
test
aaa
repnz
xchg
xor
pop
lahf
jmp
(bad)
popa
pop
ret
inc
aam
or
or
adc
ret
adc
sbb
jecxz
mov
add
pop
jl
sub
push
inc
pop
mov
jle
and
xor
ret
cmp
or
pop
call
outs
adc
scas
jge
or
xchg
inc
push
movs
dec
adc
sub
loopne
xor
aas
loope
and
out
xchg
xlat
inc
(bad)
xchg
retf
push
in
fild
setge
sub
mov
mov
push
lock
xchg
popa
xor
sbb
movs
mov
fild
and
out
add
rcl
lods
xchg
xor
push
sub
cmp
out
push
pop
push
xchg
shl
aam
stos
sub
dec
imul
mov
cs
pop
pop
mov
pop
mov
fldenv
sahf
fnsave
popf
aam
mov
js
pop
inc
int3
dec
cmps
cmp
xor
and
in
test
jnp
mov
pop
adc
ins
scas
jl
cmp
packssdw
clc
stos
inc
xchg
ror
and
pop
call
sbb
cmc
xchg
aas
stc
scas
shl
pop
cmp
push
mov
outs
sub
jg
pop
xor
cmps
and
popa
xor
jl
(bad)
pop
push
dec
arpl
aad
jmp
cmovl
es
cmp
hlt
outs
add
retf
push
add
push
mov
lds
dec
les
mov
sbb
sub
xchg
gs
dec
imul
sbb
adc
jb
ss
cmp
(bad)
stc
dec
(bad)
sbb
dec
pop
push
mov
cmps
sub
dec
sub
sbb
sub
cmc
outs
cs
jnp
cwde
ret
xor
outs
mov
adc
push
mov
clc
and
popa
cdq
cs
adc
mov
gs
jb
sbb
jle
adc
xor
and
arpl
int
out
add
jl
retf
cdq
cli
inc
xchg
jbe
(bad)
jg
mov
daa
push
jbe
in
jmp
out
pop
mov
in
fcomip
mov
add
lahf
and
imul
(bad)
int
cmc
iret
xrelease
pop
cmc
loop
jns
int3
xor
hlt
es
(bad)
popf
jg
cmps
les
mov
imul
xor
mov
push
mov
sbb
mov
jl
or
fild
loope
inc
fld
enter
pop
dec
jg
pop
je
stos
inc
jb
inc
push
retf
jecxz
sbb
push
retf
mov
xor
push
jmp
mov
push
xchg
int3
stos
jns
js
or
xlat
sti
adc
test
jmp
(bad)
inc
sub
mov
add
repz
mov
pop
cmp
xor
or
mov
in
pop
jp
jle
or
sbb
cmp
pop
jle
cmp
ja
cmp
ficomp
(bad)
cmp
mov
cmps
out
out
cmp
add
cli
or
test
(bad)
rol
repnz
push
jecxz
push
out
imul
fadd
jmp
(bad)
ret
out
repnz
outs
les
pop
mov
xchg
nop
adc
and
jo
xchg
mov
sub
xchg
dec
adc
mov
in
add
cmp
jecxz
test
mov
dec
das
(bad)
(bad)
lds
lods
call
add
lahf
ret
inc
inc
aaa
and
(bad)
and
adc
or
cmp
pop
out
sbb
mov
out
mov
scas
mov
test
leave
dec
(bad)
cmp
cli
lea
xchg
data16
jmp
cmp
and
fnstcw
mov
retf
or
jge
jp
cmp
push
xor
inc
push
jae
jl
scas
or
inc
ins
mov
daa
xor
in
push
sbb
call
loope
adc
movs
and
popf
mov
les
push
jmp
imul
imul
mov
mov
push
and
jne
dec
push
xor
mov
test
mov
(bad)
sbb
dec
addr16
(bad)
or
scas
xor
mov
mov
jb
and
sbb
(bad)
jl
fist
xchg
add
imul
data16
popf
push
push
leave
mov
in
fwait
sbb
aas
in
adc
scas
push
scas
inc
xchg
push
dec
pushf
push
fstp
dec
push
out
inc
jmp
xchg
sbb
out
fild
push
jp
ja
cmp
pop
mov
rcl
repnz
dec
xchg
mov
jne
rcr
dec
int3
rcr
sub
test
sbb
nop
and
adc
fdiv
or
test
push
loope
icebp
je
lods
jmp
jmp
mov
test
sbb
aas
xchg
push
das
xchg
pop
shl
mov
aam
add
xor
xchg
lahf
movs
addr16
fiadd
mov
jecxz
push
sub
inc
jnp
(bad)
xchg
jmp
fsubp
jo
jns
dec
push
pop
mov
pop
test
(bad)
push
loopne
dec
jmp
mov
lahf
fst
mov
lds
xor
sub
or
mov
mov
pushf
js
cli
dec
icebp
mov
and
ror
adc
mov
stos
int3
push
mov
je
push
dec
(bad)
pushf
pop
aas
sar
pushf
jmp
dec
imul
test
(bad)
pushf
adc
mov
mov
push
jmp
jge
cmp
inc
mov
sti
je
jge
mov
inc
add
test
pop
shl
sahf
pop
or
pop
xor
xor
adc
lea
neg
or
lahf
push
stos
imul
pushf
sar
imul
call
pop
mov
jb
mov
jge
mov
stos
sbb
xor
stos
dec
jns
loopne
js
sub
aaa
ror
scas
pop
cwde
idiv
dec
stc
mov
fstp
aad
clc
stos
test
push
fucomp
aam
in
jbe
repz
jg
mov
ins
(bad)
retf
int3
shl
cld
sub
xchg
mov
jns
stos
xlat
idiv
push
cli
mov
and
adc
addr16
fistp
sub
imul
inc
lods
fldenv
add
ins
jns
cwde
push
or
add
fs
nop
popf
in
nop
xchg
outs
rcl
shl
in
jb
jae
mov
or
jb
inc
pop
xchg
push
fs
dec
pop
in
lods
dec
inc
push
add
loopne
mov
mov
fcmovne
jns
mov
xchg
xor
div
repz
sub
fdivp
cmps
enter
loopne
shl
mov
leave
push
jnp
in
or
in
stos
aaa
jbe
mov
sub
(bad)
mov
dec
mul
xchg
pop
call
movs
call
jns
xchg
jns
aaa
stos
add
outs
les
cmp
pop
dec
ficomp
ins
push
out
and
cdq
jge
mov
call
mov
loope
pop
neg
shl
ret
inc
fucom
and
int
add
sbb
and
lock
or
push
pop
sub
mov
push
aaa
pop
repz
jle
pop
sbb
jge
xor
xor
test
or
(bad)
in
xchg
jno
jns
mov
inc
add
mov
pop
xor
dec
test
or
out
push
imul
push
adc
clc
or
adc
dec
cld
repnz
out
inc
xor
aas
pop
push
je
add
aas
xor
stos
outs
pusha
(bad)
mov
pop
add
ja
jae
cmp
push
loopne
or
jmp
and
mov
lds
xchg
fild
call
cmps
aam
push
fstp
mov
aad
inc
dec
stc
mov
cs
iret
in
repz
(bad)
shl
jo
sbb
sbb
push
xor
sar
jl
in
mov
mov
mov
int3
gs
imul
jl
daa
add
mov
xor
fwait
xchg
inc
dec
adc
lods
les
xchg
jge
xchg
leave
lock
psraw
jg
mov
out
sbb
adc
push
xor
loopne
pushf
cld
icebp
mov
inc
test
test
adc
jp
push
sbb
cmc
inc
(bad)
mov
add
sbb
cdq
addr16
inc
push
jmp
or
add
xor
mov
push
pop
sub
int
jle
push
fcmovnbe
mov
or
rol
call
xchg
dec
not
mov
ror
xor
cwde
ins
dec
psubb
js
cli
xchg
pusha
inc
std
push
fnsave
jnp
adc
mov
jb
mov
xor
iret
cmps
add
or
push
dec
pop
dec
push
cmps
fidiv
sti
(bad)
(bad)
and
xor
jno
cld
pushf
(bad)
das
neg
dec
dec
inc
sar
popf
mov
in
out
bound
outs
jl
(bad)
out
and
lahf
jp
(bad)
jg
ror
push
mov
push
add
jmp
gs
fist
fsub
xchg
loopne
and
lds
daa
outs
xchg
xor
(bad)
pop
adc
test
in
inc
pop
std
push
es
ror
icebp
push
jae
fnsave
ss
jge
sub
add
cdq
fimul
xchg
sub
sub
inc
pop
popf
xchg
mov
div
or
sub
daa
outs
fldcw
jo
jge
inc
inc
(bad)
arpl
cmp
adc
pop
cmp
dec
adc
add
ins
aas
pop
(bad)
(bad)
push
mov
cmp
mov
into
xchg
cdq
ror
dec
cli
adc
or
dec
pop
mov
push
arpl
xor
fsub
xchg
in
imul
push
push
mov
or
test
and
(bad)
hlt
int
mov
dec
cmps
out
sub
in
xchg
xor
arpl
retf
push
out
pop
pop
mov
in
js
mov
lahf
add
imul
idiv
push
js
push
cmp
outs
sub
int
mov
mov
mov
xchg
mov
pushf
out
jmp
pusha
push
or
push
or
push
and
sbb
add
mov
xor
fdivr
adc
dec
push
dec
imul
sub
pop
repz
cmp
(bad)
fsub
mov
inc
jbe
cmp
jno
cwde
sbb
add
xchg
arpl
push
in
and
js
data16
mov
mov
mov
adc
or
or
mov
jle
xor
loope
outs
adc
imul
ins
jmp
or
and
mov
push
inc
pushf
rol
add
rcl
popf
cli
jecxz
movs
retf
mov
aaa
outs
rcr
jo
in
adc
aas
arpl
xchg
cmp
int3
fmulp
fdiv
repz
dec
into
shr
scas
icebp
jg
or
or
mov
mov
loopne
sbb
adc
lock
mov
jns
push
stos
push
sub
cmp
sahf
sbb
popf
mov
in
fdecstp
cmp
sub
add
pop
call
cmp
push
mov
int
das
fistp
lds
int3
mov
xchg
mov
fiadd
(bad)
fdivr
call
jge
mov
ret
je
push
mov
pop
cmp
mov
pop
test
mov
and
das
(bad)
pop
inc
pop
fbld
and
mov
dec
push
inc
mov
xchg
jmp
cmps
and
dec
mov
pusha
shl
retf
test
aas
into
jg
push
and
dec
es
scas
xchg
xor
add
mov
enter
icebp
les
sti
test
idiv
mov
mov
mov
sbb
add
stc
fnstenv
jmp
inc
adc
or
pop
push
fisubr
sub
mov
stos
xchg
imul
out
aam
ds
stc
jmp
out
dec
and
xchg
xchg
ror
jbe
sbb
add
mov
xor
xchg
cmp
dec
mov
and
pop
(bad)
fcmovnu
inc
imul
mov
pop
sub
shl
jmp
fadd
retf
stos
inc
pop
jl
popa
outs
outs
push
dec
ror
es
js
or
cmp
xchg
adc
xchg
and
cmp
xchg
sub
add
inc
vmread
sbb
lahf
jecxz
jl
xchg
fwait
retf
push
mov
push
or
scas
jne
adc
fisttp
out
ds
pop
jle
out
xor
mov
movs
jo
aas
ficom
test
outs
(bad)
daa
jne
adc
push
xor
lods
add
pusha
xchg
sub
adc
es
call
sbb
mov
mov
repnz
jae
push
or
leave
popa
add
push
cmc
repnz
loop
out
pmaxub
ins
mov
mov
call
push
xlat
jecxz
mov
xchg
mov
push
cmp
xchg
xchg
ret
push
xor
pop
icebp
fwait
xor
mov
cmp
push
lods
movs
icebp
pop
clc
inc
(bad)
pop
adc
mov
xchg
fwait
push
mov
fld
jg
(bad)
nop
dec
push
jmp
(bad)
adc
add
add
das
ins
in
jmp
mov
mov
out
or
inc
bound
call
mov
inc
push
and
dec
add
stos
call
push
jb
bound
jns
scas
sbb
movs
add
sub
inc
lock
mov
shl
retf
xor
imul
call
imul
jmp
inc
pop
fs
dec
js
sbb
xchg
xchg
adc
mov
sbb
bound
call
(bad)
loope
std
mov
js
sbb
icebp
push
xchg
dec
(bad)
ficomp
loop
or
mov
or
in
jno
push
(bad)
pop
test
out
(bad)
cdq
aaa
rcr
rol
leave
xor
cld
pusha
out
push
jnp
hlt
pop
ret
add
push
in
(bad)
popa
add
cmp
cmps
(bad)
cs
cmp
sbb
loope
pop
inc
int3
cs
and
(bad)
push
adc
es
fwait
xor
lock
lea
gs
sbb
je
rcr
ins
js
and
cld
cmp
outs
and
sub
ret
fmulp
ins
cmp
cmp
lea
xor
retf
arpl
mov
xor
add
jge
fld
mov
outs
sub
shl
(bad)
daa
neg
dec
mov
scas
and
test
(bad)
cld
or
fsub
mov
and
out
sub
in
or
bound
hlt
or
push
xchg
sbb
outs
adc
cs
(bad)
std
add
mov
push
outs
repnz
jo
cs
aam
push
and
stos
sub
and
icebp
xchg
and
dec
aas
retf
inc
in
or
out
sbb
rol
bound
les
jmp
cmp
and
sbb
xchg
add
xor
push
in
out
addr16
fs
cmp
and
call
cwde
jo
cmp
das
adc
cli
cmps
shr
push
iret
out
jb
(bad)
out
aad
in
or
and
bound
jmp
push
cdq
imul
mov
jns
outs
pop
movs
rcr
(bad)
movs
fs
sahf
mov
adc
imul
dec
fs
retf
adc
fs
dec
add
enter
mov
dec
pop
cli
inc
push
jns
cmp
push
out
or
jnp
fcmovb
out
ror
and
dec
imul
inc
hlt
arpl
adc
mov
adc
xchg
mov
out
xor
mov
loopne
enter
adc
mov
je
mov
sahf
int3
push
lea
addr16
xlat
lock
mov
hlt
or
jmp
sub
retf
ret
lods
jns
mov
imul
ret
or
int
sahf
sub
add
pop
mov
xor
popf
adc
fisubr
pop
cmps
sbb
mov
cs
hlt
inc
sub
xchg
js
inc
jp
jne
jae
push
int3
mov
push
out
dec
sbb
adc
sub
and
sub
cmp
movs
push
and
mov
or
and
ret
push
movs
mov
imul
mov
or
push
and
jnp
fsubr
cld
mul
mov
pop
cmps
jge
mov
test
lods
jle
mov
mul
iret
aam
or
(bad)
jl
mov
push
mov
sahf
add
stc
xor
xchg
adc
int3
dec
dec
dec
pop
popf
adc
pop
stc
out
dec
ja
es
jnp
(bad)
xor
adc
mov
adc
cmp
int3
test
pop
gs
mov
rcr
popf
dec
mov
and
shl
xor
stos
adc
and
bound
sbb
and
es
jmp
js
mov
dec
add
es
ins
xchg
mov
popa
pop
pop
lods
push
(bad)
and
adc
and
das
pop
and
push
test
sub
sub
cmp
mov
cmc
mov
mov
bound
test
pop
imul
sbb
inc
sub
push
dec
test
jb
push
mov
pusha
jbe
push
jp
mov
push
xlat
xchg
mov
out
into
add
(bad)
fldenv
inc
test
add
rcr
pop
or
cmc
movs
sbb
jmp
imul
sbb
(bad)
adc
sar
sti
bound
push
jnp
mov
mov
icebp
popf
mov
test
jmp
cmp
mov
bound
ficom
leave
loopne
dec
inc
push
cmps
add
imul
rcr
ins
xchg
sbb
loopne
sbb
push
call
inc
adc
jns
les
(bad)
loopne
cmp
popf
bound
adc
xchg
xor
mov
xchg
mov
es
loope
sbb
bound
rcl
movs
(bad)
fisub
lods
icebp
xchg
pop
or
std
movs
call
out
pop
hlt
daa
xchg
sbb
jg
loop
jne
jg
sub
fcomp
outs
sbb
pop
jbe
iret
mov
cmp
push
loopne
jmp
xor
gs
xchg
pop
ret
push
push
leave
mov
jmp
popa
cmps
and
sub
aad
les
(bad)
xchg
add
jb
adc
sbb
push
sahf
mov
lock
(bad)
cli
movs
cmps
adc
das
test
and
iret
or
enter
mov
or
cmp
repz
repnz
mov
inc
sbb
and
fsub
or
inc
test
popf
xor
cwde
dec
rol
push
adc
sub
push
pop
lahf
push
mov
test
ror
cmc
sbb
inc
pop
shl
or
xor
sbb
fadd
sti
out
inc
stc
cld
ret
daa
cmp
lock
and
leave
in
rcl
lods
out
xchg
outs
add
adc
(bad)
shr
fmul
and
test
pop
jns
bound
imul
pop
push
ret
and
dec
movs
fs
movs
out
sbb
into
adc
sub
push
std
mov
out
xlat
fs
mov
out
icebp
mov
mov
mov
data16
in
sar
scas
leave
adc
(bad)
inc
out
les
mov
bound
ficomp
aaa
xor
push
rcl
cdq
pop
xor
in
mov
stos
pop
enter
adc
add
mov
cmps
pop
ret
aas
push
nop
int3
int3
xor
(bad)
or
out
das
neg
scas
mov
test
int
and
xor
adc
shl
data16
fwait
arpl
cmp
arpl
addr16
dec
jno
adc
aaa
pop
out
repz
push
shl
pop
push
hlt
push
adc
aam
cmp
push
leave
jecxz
cmp
fs
std
inc
jns
call
pop
xor
pusha
popf
sbb
loop
inc
into
pusha
sbb
(bad)
fs
test
pop
rcl
push
movs
jmp
jno
xor
loop
jecxz
push
out
push
jl
cmps
pop
fwait
sub
movs
pop
hlt
mov
jl
jnp
inc
ja
and
and
hlt
xchg
rol
jecxz
sub
xlat
xchg
add
or
inc
jbe
mov
rcl
mov
mov
ds
sub
retf
mov
ret
out
in
call
imul
rol
dec
xor
or
iret
stos
xor
sub
mov
mov
js
mov
jo
add
jb
out
cvttps2pi
pusha
push
mov
jmp
xchg
loop
into
dec
fimul
mov
out
add
mov
xchg
pop
push
je
jle
stos
cmp
leave
xchg
fs
adc
scas
mov
icebp
xchg
and
or
fdivr
rcr
xchg
push
add
out
(bad)
and
lods
test
or
out
pop
mov
loope
xor
dec
mov
mov
arpl
fcomp
aas
push
int3
cmps
cmc
popa
mov
mov
rcl
data16
movs
retf
or
cli
aam
xchg
pop
sbb
inc
ins
xlat
idiv
pop
fwait
lds
push
ja
loop
xchg
or
jg
or
jne
jb
xchg
push
pop
pop
clc
push
xor
xor
imul
mov
aas
jno
pop
push
dec
xor
mov
xlat
movs
test
pop
jnp
inc
in
xchg
(bad)
pop
push
mov
adc
ss
sub
or
test
sbb
push
mov
xlat
outs
inc
fdivr
aam
(bad)
cmp
dec
lods
test
fisubr
add
in
gs
add
out
jmp
jne
fld
hlt
pusha
out
(bad)
mov
pop
(bad)
aaa
or
cmps
add
xor
cdq
mov
pop
icebp
ds
fiadd
retf
pop
jg
pop
xlat
dec
cld
out
imul
sbb
in
outs
dec
scas
sahf
inc
sbb
push
mov
cmp
scas
mov
mov
pop
mov
inc
cwde
js
sbb
xchg
sub
xchg
push
push
jbe
aas
scas
lea
jg
sub
xor
out
inc
or
aad
bnd
lahf
in
fwait
inc
inc
nop
movs
rcl
jge
sbb
cmps
xchg
adc
sub
in
xchg
into
or
jmp
sub
jae
fs
sar
shl
dec
lock
xchg
aaa
loope
faddp
jbe
cmp
push
inc
add
inc
mov
mov
jbe
push
repz
lods
xor
mov
iret
dec
arpl
dec
sbb
or
and
sbb
jno
sbb
mov
add
jb
lea
in
test
iret
int3
(bad)
xlat
shl
xor
mov
mov
adc
in
les
test
int3
inc
aas
push
out
test
stc
pop
mov
lea
sub
hlt
sahf
add
ret
sub
sub
loope
aad
jo
fnstcw
mov
jno
push
push
fiadd
sahf
mov
add
mov
cmp
pop
jnp
loop
jl
mov
bound
xchg
or
add
xor
mov
push
fst
adc
cmps
sbb
or
xchg
and
sub
popa
mov
pushf
rcl
jl
popf
jmp
sbb
or
and
cmp
in
mov
mov
scas
ss
or
push
ret
or
add
jae
cdq
fst
pop
ss
shr
mov
cmps
loope
jae
dec
aas
pop
add
das
ins
xchg
xlat
xor
or
fsub
mov
(bad)
lods
cmc
leave
mov
aaa
mov
cwde
mov
xchg
ss
push
mov
lods
test
jle
jbe
jge
mul
stos
lahf
daa
or
cli
ror
jne
add
xor
sbb
push
pop
mov
out
pop
in
adc
cmp
cwde
les
lds
inc
fcom
mov
jo
jle
add
test
or
sahf
adc
dec
in
sub
enter
leave
bound
fisubr
inc
pop
jbe
sbb
(bad)
sub
das
inc
inc
in
ins
jns
pushf
mov
sbb
cld
jne
push
retf
cdq
addr16
xchg
mov
clc
dec
cmp
lock
or
test
neg
sub
jb
fiadd
cmc
rcr
mov
pop
inc
mov
pusha
out
cmp
adc
xchg
in
or
loop
push
mov
fcomp
mov
xchg
fisub
jge
sar
int
pop
add
sub
jge
push
xor
mov
mov
int3
lahf
daa
(bad)
or
cmp
sahf
pop
and
outs
ja
adc
jge
inc
rcl
jns
sub
cmp
mov
sbb
sbb
cmp
(bad)
cli
pop
and
lods
mov
pop
xchg
cdq
pop
dec
pusha
xlat
mov
iret
add
clc
cmp
xor
test
test
fsubr
mov
(bad)
cmps
adc
adc
sbb
jg
and
mov
stos
imul
dec
jbe
lods
add
out
jae
xor
ror
jmp
lods
cmp
and
xchg
jbe
and
cmp
or
xor
sub
pop
lock
in
hlt
cli
nop
scas
shl
repnz
inc
dec
mov
inc
cmp
lods
popa
add
sbb
aad
scas
xor
out
adc
adc
fisubr
clc
adc
fild
pop
cmps
stc
dec
dec
xchg
repz
pop
push
in
xbegin
popf
mov
repz
mov
icebp
ja
add
test
jae
out
imul
mov
xlat
dec
(bad)
cmp
jmp
dec
cmc
mov
ret
pop
sbb
cmp
mov
xchg
xchg
cmp
mov
sub
pusha
lahf
rcl
mov
add
movs
fild
cmps
lock
int3
stc
dec
jno
out
test
and
aas
movs
jno
not
jb
mov
or
sti
sahf
sbb
popa
ror
and
xchg
out
out
add
pop
scas
inc
dec
test
lds
inc
imul
out
es
inc
ss
pop
(bad)
jmp
sub
outs
cmp
push
out
test
sar
push
dec
lock
jnp
xor
jg
sub
xor
es
xor
mov
push
(bad)
dec
stos
es
xlat
test
aas
sbb
arpl
sub
and
push
adc
dec
outs
adc
xlat
loopne
fwait
lock
mov
sahf
mov
mov
xchg
inc
fldz
scas
movs
cwde
jmp
sbb
inc
push
inc
push
fisub
mov
shl
int
hlt
dec
push
addr16
jns
inc
adc
mov
cmp
sar
mov
mov
pop
and
fild
mov
scas
add
fst
ja
scas
cmp
and
add
and
movs
xor
xchg
xchg
xchg
out
into
jnp
jecxz
ret
mov
enter
mov
pop
imul
addr16
xchg
mov
push
cmps
jmp
lock
xor
dec
shl
cmp
fdivr
sub
scas
(bad)
sub
or
stos
nop
out
icebp
xchg
lods
in
xlat
xchg
iret
jg
fwait
jne
xlat
mov
nop
(bad)
xor
pop
and
inc
push
stos
fiadd
sbb
jge
(bad)
pop
push
frstor
clc
retf
cmc
enter
push
out
fidiv
inc
leave
xchg
add
inc
adc
pop
or
and
fwait
pop
dec
jmp
jmp
adc
popf
or
push
stos
les
repnz
inc
sahf
cmps
mov
pusha
xchg
ss
shl
fldenv
xor
jne
and
pop
icebp
push
xchg
pop
(bad)
or
mov
pushf
adc
cmps
ss
xlat
push
popf
pop
sbb
xor
pusha
(bad)
sub
sti
push
std
pop
adc
inc
shr
and
pop
stos
add
imul
inc
jmp
xor
outs
enter
cmc
push
sbb
outs
mov
dec
mov
jb
push
inc
ja
mov
and
xchg
mov
dec
mov
lahf
fs
hlt
add
push
shr
lods
dec
(bad)
test
test
out
setl
pusha
fnsave
jae
inc
or
add
ror
aas
and
data16
in
pusha
ins
ficom
(bad)
jle
call
(bad)
pop
fcomp
pusha
mov
dec
inc
mov
xchg
loope
gs
mov
and
push
fstp
sub
addr16
shr
sub
inc
pop
push
call
out
dec
add
out
mov
mov
adc
adc
sub
xchg
mov
adc
jmp
int
(bad)
les
mov
jbe
and
fs
mov
xchg
aas
lock
in
mov
addr16
hlt
lea
aas
fucomp
stc
outs
jbe
out
mov
mov
sbb
mov
push
jo
cmps
lock
inc
adc
sti
and
ret
and
jle
repnz
movs
enter
ror
dec
das
cwde
and
aad
enter
push
lea
dec
rcr
aas
mov
xchg
div
xlat
push
mov
sub
xchg
hlt
xlat
push
int3
inc
add
jge
adc
jp
sbb
lods
mov
add
jle
lods
movs
fdiv
sub
bound
jmp
(bad)
mov
lea
sub
ins
imul
mov
mov
(bad)
mov
cmps
das
test
jnp
mov
pop
jle
out
mov
pop
stc
pop
xchg
fdivr
aas
xchg
or
push
outs
(bad)
lahf
pop
xor
adc
outs
test
movs
inc
cld
sar
inc
jbe
sub
adc
sub
outs
sub
test
aad
or
ja
mov
push
dec
neg
fisttp
mov
scas
test
ds
xor
popf
test
les
jno
aaa
test
icebp
and
in
mov
pusha
ins
xchg
rcl
add
das
out
cmps
in
jo
push
pop
inc
idiv
adc
cwde
sub
adc
gs
aaa
mov
jns
scas
iret
imul
aaa
pushf
aaa
(bad)
mov
stos
inc
bound
arpl
fcomip
div
or
punpckhwd
fisub
or
je
cmp
sbb
(bad)
dec
lock
adc
jnp
jg
cmps
shr
stc
cdq
push
xor
retf
sbb
xchg
mov
push
pop
pop
jnp
mov
xchg
gs
daa
adc
fisttp
jno
addr16
outs
xlat
loope
mov
pusha
ins
rol
adc
hlt
stos
lods
sbb
cs
mov
(bad)
fisttp
es
inc
adc
stos
xchg
pop
add
jge
ret
push
sbb
mov
or
out
jle
ja
mov
adc
pop
push
ins
movs
stos
fwait
jae
inc
in
into
cdq
push
stos
jle
add
mov
outs
push
test
push
call
mov
and
adc
in
js
imul
jl
push
dec
shl
inc
lock
imul
pop
cdq
jo
(bad)
stos
(bad)
jge
sahf
adc
pop
jo
fild
sub
jle
mov
(bad)
repz
push
inc
(bad)
retf
and
das
lahf
inc
adc
ficomp
xor
js
cli
mov
lods
xchg
(bad)
repz
or
sbb
test
pop
jmp
dec
adc
and
mov
jns
and
idiv
ret
fbld
jns
scas
mov
mov
mov
(bad)
movs
xor
adc
jne
stc
xlat
pop
mov
test
mov
jnp
fdivr
enter
sub
cmp
xchg
fdivr
fsubr
dec
data16
sbb
gs
inc
pop
xchg
or
imul
and
sbb
(bad)
fwait
loopne
mov
push
or
lahf
dec
out
mov
test
cli
mov
push
cli
test
mov
xchg
mov
frstor
test
and
stos
pop
lods
fstp
jl
jb
mov
mov
sbb
xor
xchg
or
lahf
xchg
in
ret
fnsave
xor
sti
mov
enter
dec
js
push
imul
sbb
mov
or
mov
jb
sbb
jbe
rcl
mov
(bad)
imul
xchg
outs
out
outs
push
jbe
cld
rol
psubusb
ins
sbb
test
sub
sbb
xor
ja
xchg
or
sub
sbb
mov
jl
imul
inc
adc
or
xchg
(bad)
xor
mov
(bad)
mov
sub
add
or
push
std
dec
or
pop
pop
stc
in
mov
(bad)
xchg
xchg
pop
ins
xor
jp
repnz
out
arpl
and
enter
sub
outs
push
sbb
mov
rcl
clc
xchg
aas
cmp
mov
push
push
mov
movs
not
push
bnd
or
ror
std
mov
jge
movs
or
mov
dec
pop
out
sbb
jns
dec
sbb
cmp
push
ds
xor
retf
sahf
lods
inc
add
test
jns
std
mov
js
jecxz
in
mov
dec
in
out
mov
and
dec
mov
cmp
cli
int
push
(bad)
ins
sti
cmp
pusha
shl
sub
xchg
jo
inc
test
inc
xchg
retf
out
push
jno
xchg
loope
dec
mov
xchg
ds
or
and
frstor
cmp
stos
test
stos
in
cmp
xchg
push
daa
inc
adc
std
xor
push
pop
jl
xchg
sbb
or
xchg
add
dec
jecxz
mov
ret
sub
ss
mov
sub
push
and
scas
xchg
ins
dec
or
adc
stc
dec
ss
mov
sub
mov
test
outs
ds
mov
out
sub
push
stos
pushf
sbb
sbb
in
loope
pop
pop
fimul
mov
(bad)
mov
in
test
in
ror
jbe
or
xchg
frstor
clc
out
aas
not
adc
or
fwait
cdq
push
push
mov
or
mov
int3
xor
add
xchg
outs
daa
xchg
cmp
jmp
dec
stos
test
daa
xchg
retf
xor
or
mov
cmp
adc
into
jne
dec
ret
pop
jecxz
jae
lods
hlt
inc
mov
jmp
pop
sahf
push
dec
(bad)
fst
(bad)
mov
xchg
scas
call
loop
jle
add
xor
fwait
data16
mov
push
jns
lods
xchg
pusha
jecxz
jmp
out
das
ror
rcl
and
inc
fst
call
loope
pop
lods
pushf
repnz
jmp
mov
fstp
xchg
xchg
jecxz
mov
dec
cs
push
(bad)
cmp
nop
das
and
push
call
mov
fldcw
fcom
(bad)
push
xor
jnp
ror
push
sub
push
std
add
mov
in
sbb
jns
mov
fs
faddp
cmps
fs
sbb
cmp
mov
or
pusha
not
js
pop
adc
cmp
xchg
pusha
fild
repz
jbe
xor
push
pop
add
jns
xor
jo
jb
repnz
xchg
repnz
or
cs
pusha
cmp
imul
mov
popf
pop
ins
push
aas
(bad)
jmp
pop
cmc
mov
mov
ror
call
rep
sub
(bad)
das
jb
sahf
sar
cmp
jns
aad
mov
fisttp
mov
sar
mov
cmp
pusha
jg
jno
mov
jle
dec
cli
aad
or
push
push
retf
in
inc
sbb
sub
cmp
mov
pop
jno
ret
sbb
mov
sub
push
xchg
(bad)
jg
test
push
adc
test
stos
out
add
retf
jne
int
sahf
inc
add
xor
retf
mov
int
loopne
cwde
hlt
jmp
scas
xlat
iret
inc
daa
popf
dec
push
stos
addr16
and
inc
in
stos
cs
out
jne
out
shl
sbb
xchg
xchg
cli
xchg
or
mov
arpl
push
mov
call
ja
push
scas
ror
xchg
loope
repnz
pushf
(bad)
mov
pop
fnstcw
sub
mov
sub
in
dec
jns
clc
in
lods
sub
call
cld
and
push
outs
mov
(bad)
push
adc
mov
sub
jg
push
adc
dec
test
rcl
sub
in
fsubr
out
xchg
enter
shl
dec
mov
mov
loop
pop
test
or
call
mov
xchg
cdq
hlt
daa
push
mov
jnp
cmps
or
xchg
icebp
in
in
or
daa
iret
rcl
sub
repz
movs
add
ja
in
lahf
lock
mov
shr
dec
mov
cmp
lds
retf
fisttp
fmul
fimul
xor
and
add
cli
jne
jmp
mov
repnz
and
lods
call
cmp
jge
popf
jmp
sahf
(bad)
pop
pop
mov
(bad)
icebp
ret
push
push
addr16
adc
cdq
cmp
pop
retf
(bad)
mov
jno
imul
repz
retf
mov
popf
jle
imul
call
mov
add
sub
sub
in
jnp
stos
int
add
sbb
iret
or
loopne
mov
rcr
adc
(bad)
in
shr
sahf
push
sub
add
test
ins
pushf
adc
leave
mov
ficomp
ror
xchg
add
(bad)
jbe
cld
sub
jne
or
push
jbe
div
inc
cmp
stc
cmps
aad
or
sub
lods
js
lock
mov
mov
mov
jno
push
leave
push
cmp
fst
xchg
rcr
xor
hlt
mov
inc
cmp
ror
daa
popa
stc
div
cmp
fsub
jecxz
jmp
je
in
(bad)
dec
out
outs
ret
pusha
stc
js
push
mov
pop
jmp
ret
mov
jo
mov
sbb
dec
sbb
jmp
(bad)
jns
jbe
retf
(bad)
push
js
dec
push
xor
push
push
es
ds
or
shl
hlt
fcmovnu
sbb
or
out
sahf
sub
sub
mov
(bad)
lea
mov
dec
inc
test
cmps
shr
dec
adc
sbb
cmp
mov
mov
or
push
push
test
mov
sub
add
sar
sub
pop
test
inc
mov
fucomi
ds
fwait
mov
(bad)
lds
retf
add
add
adc
clc
out
sbb
push
pop
cmp
jno
adc
jle
jbe
and
cmp
push
or
dec
or
sbb
cmp
fbld
out
push
jne
mov
pusha
mov
test
xchg
loope
sar
and
inc
inc
pop
inc
pushf
or
scas
add
stos
xor
add
daa
enter
cmps
mov
pop
dec
push
mov
aad
add
and
das
mov
mov
fcomp
sbb
pusha
jecxz
jnp
cli
fs
sub
test
out
in
pop
sub
fsubr
(bad)
inc
pushf
pop
les
shl
outs
outs
push
dec
inc
vmovq
pushf
ins
mov
fucom
retf
adc
jne
jne
jmp
icebp
mov
dec
mov
imul
add
jbe
cld
mov
fidivr
lds
sti
jg
out
mov
inc
dec
ins
sub
cs
or
pop
xlat
js
mov
jae
inc
fucomi
sbb
stos
pop
dec
push
jb
and
das
imul
cmp
ficomp
movs
(bad)
es
(bad)
aas
mov
adc
dec
push
xchg
movs
mov
jnp
jmp
bound
dec
into
loopne
cmp
pop
mov
xor
or
inc
sti
jae
ins
inc
ss
jp
fild
jecxz
test
adc
(bad)
jne
push
rol
ror
fsubr
neg
in
cmp
mov
dec
jmp
sar
push
xor
inc
(bad)
pushf
test
sbb
pusha
pop
mov
add
ins
ficomp
jmp
add
stos
lea
test
cld
aaa
sub
mov
test
jno
(bad)
ins
in
sahf
mov
mov
push
movs
iret
enter
mov
fisub
dec
out
stos
push
cmp
shl
int
loopne
mov
je
test
aas
pop
mov
push
(bad)
cmp
and
jecxz
mov
pop
inc
sub
add
ss
jle
stos
add
mov
pop
cmp
out
push
or
repz
pop
cdq
push
in
mov
push
cmp
jne
test
add
cmps
retf
pop
inc
xchg
lahf
iret
and
push
adc
rcr
mov
loope
pop
call
out
sub
jge
mov
sbb
jecxz
xor
loope
shr
(bad)
les
push
cmps
ja
popa
mov
scas
shl
ja
inc
push
aaa
xor
or
je
fstp
ins
jecxz
mov
imul
rol
retf
dec
add
and
(bad)
ja
jg
outs
test
fcomp
sub
pop
ret
into
out
out
pop
bound
outs
out
test
iret
and
mov
cmc
out
add
loop
pusha
inc
dec
jnp
in
pushf
sbb
repnz
jnp
leave
jno
xchg
stos
xchg
fmul
inc
jb
push
inc
loopne
in
scas
pop
jecxz
call
adc
xchg
(bad)
xchg
mov
mov
pop
sbb
mov
pushf
inc
fmul
ins
pop
dec
in
xor
xor
mov
fiadd
and
xchg
push
and
cmc
pusha
fistp
inc
imul
iret
push
mov
in
outs
or
push
and
mov
fimul
push
jge
retf
pop
fnstsw
inc
inc
xor
cld
push
mov
test
jno
pop
clc
mov
je
xchg
mov
sar
icebp
jnp
es
dec
sbb
jmp
push
cmp
sar
jge
cmc
sar
nop
jmp
adc
ss
mov
mov
and
aaa
pop
sbb
scas
popf
and
mov
popa
fbld
xchg
frstor
movs
out
sahf
test
mov
cmp
popf
test
xor
mov
mov
pop
add
leave
ds
out
xchg
push
jnp
push
dec
mov
fcmovne
adc
daa
sub
shl
loop
test
jge
sbb
and
daa
inc
je
les
fs
adc
jb
xchg
sar
and
cwde
sub
mov
adc
in
xchg
jecxz
mov
mov
hlt
test
xchg
jmp
mov
cdq
movs
fsqrt
sub
sbb
xor
dec
test
enter
pop
xchg
push
mov
add
push
rcr
rol
add
pop
scas
leave
popa
sbb
lea
pusha
ins
or
and
cmp
sahf
in
dec
(bad)
cli
out
dec
enter
les
push
mov
xor
popa
jbe
pop
push
outs
pushf
popf
xor
mov
(bad)
pop
cmp
pop
inc
add
mov
(bad)
cli
bswap
inc
or
out
fisub
sub
nop
inc
(bad)
into
mov
sbb
dec
push
sub
xor
cmp
inc
sbb
pushf
push
ror
pop
bound
cli
pop
xchg
mov
cli
lods
(bad)
mov
adc
loope
adc
popf
mov
and
jns
sahf
push
push
sbb
imul
jno
push
int3
ins
adc
xor
pop
pop
xchg
add
lock
test
test
test
aaa
in
cmp
jmp
mov
test
mov
je
repnz
lock
daa
out
gs
pop
push
pop
pop
ins
inc
in
xor
(bad)
xchg
push
fs
xchg
stos
mov
or
mov
movs
pop
or
idiv
ja
push
cli
lahf
add
int
lods
pop
stos
out
adc
sahf
mov
stos
js
outs
in
xchg
lods
pop
dec
add
sub
xor
je
mov
xchg
daa
popf
test
push
iret
jae
imul
push
out
dec
or
jecxz
inc
mov
(bad)
sbb
sub
mov
cwde
push
js
inc
and
cmp
pop
scas
jno
imul
cmps
das
sub
sbb
stc
ss
fwait
mov
push
lock
scas
rcr
sbb
inc
movs
sbb
or
sti
jecxz
pop
popa
xor
jge
mov
cmp
movs
pop
btc
addr16
dec
pop
(bad)
xchg
cmp
jl
pop
and
mov
xchg
leave
out
hlt
in
test
push
push
(bad)
pop
or
jne
cmovbe
sbb
jge
sbb
inc
push
cli
jne
or
mov
mov
(bad)
cld
mov
lock
clc
push
adc
test
inc
mov
dec
mov
(bad)
push
pop
lods
inc
dec
js
aam
dec
in
and
fldenv
dec
retf
mov
in
add
pop
jbe
fldenv
(bad)
pop
inc
inc
xchg
pushf
mov
mov
jne
pop
cld
es
jp
push
in
cli
test
(bad)
jbe
push
sbb
adc
(bad)
int3
clc
pop
pop
xchg
or
sbb
cmp
push
aad
adc
imul
mov
add
xlat
or
ja
sahf
pusha
sbb
loopne
mov
sub
retf
stos
adc
xor
shl
mov
jns
lods
mov
adc
add
int
cmp
mov
push
lods
xlat
push
out
mov
leave
stc
xor
(bad)
and
inc
push
out
push
cmp
inc
fabs
imul
aaa
repnz
jnp
jp
push
leave
dec
int
loope
mov
inc
jne
shl
arpl
mov
push
xor
leave
cwde
cdq
add
mov
mov
sub
jo
push
(bad)
mov
data16
add
mov
mov
mov
mov
mov
lods
pop
out
out
repnz
fwait
inc
and
xchg
push
fs
stc
mov
(bad)
pop
test
aad
ret
push
lods
push
aaa
or
cmps
mov
mov
in
imul
and
cmc
loopne
mov
adc
mov
pushf
test
movs
lods
out
sar
jb
cld
mov
cmps
cld
in
pop
je
aad
mov
cs
mov
(bad)
sub
add
psllw
xor
add
push
ret
dec
mov
sbb
fucomi
retf
(bad)
push
pusha
shl
das
aaa
mov
inc
cs
jb
stos
or
mov
pop
pusha
imul
jge
jecxz
dec
jmp
push
rcl
dec
test
icebp
imul
scas
mov
ffree
(bad)
mov
pop
addr16
div
cmc
push
mov
scas
fwait
enter
je
in
cmps
jle
sbb
dec
push
jo
cmp
push
push
mov
sub
sti
push
ret
iret
aas
xchg
sbb
not
pop
loopne
inc
cbw
xchg
xchg
inc
pop
or
mov
jns
aaa
cmp
pop
and
sbb
shr
imul
(bad)
aaa
pop
and
mov
call
cmps
mov
mov
or
loope
repz
jmp
adc
pop
fimul
clc
mov
lock
cmp
(bad)
pop
pop
arpl
and
(bad)
jnp
rol
inc
ds
add
xor
aam
pop
xchg
xor
mov
repz
cwde
jnp
push
sub
pop
inc
and
adc
pop
jnp
mov
cmc
cmps
out
(bad)
jl
cmp
ins
xchg
inc
enter
dec
call
cmc
add
ret
xor
iret
jg
dec
sbb
cmp
xchg
daa
push
arpl
adc
(bad)
loopne
push
pavgusb
jl
push
and
pop
loopne
(bad)
out
and
int3
and
(bad)
push
(bad)
int
call
inc
push
push
aad
in
adc
or
(bad)
pop
arpl
gs
sbb
daa
push
ret
sbb
sub
data16
ret
std
mov
retf
and
push
ror
es
add
jmp
lds
outs
cmp
repnz
std
call
push
fucomp
push
sbb
scas
hlt
or
cmps
xlat
adc
popf
pop
dec
fdivr
sub
ret
jmp
in
dec
pop
mov
pop
dec
es
test
in
pop
dec
ss
pop
push
sbb
cmp
pop
test
movs
fld
xchg
adc
mov
xchg
push
retf
push
fs
mov
push
shr
sub
mov
test
or
stos
fadd
and
mov
push
mov
push
movs
xchg
icebp
scas
cmp
mov
leave
adc
test
(bad)
(bad)
retf
and
and
ret
aaa
out
adc
jns
call
rcl
ret
push
fwait
pusha
inc
scas
es
jl
pop
or
sbb
aas
push
jo
movs
popa
jbe
(bad)
mov
ins
sub
in
repz
sahf
xor
aad
push
and
mov
or
mov
pop
into
inc
sbb
in
cmp
mov
pop
imul
mov
jmp
nop
push
mov
call
lock
dec
push
icebp
mov
pop
push
mov
xchg
xchg
pop
mov
pop
pop
xchg
imul
daa
cmc
sub
cwde
mov
push
cmps
sbb
or
jb
aad
cmp
and
sbb
(bad)
add
sub
stos
sbb
pushf
out
data16
cld
and
pop
ret
jns
lds
hlt
jno
in
dec
xchg
leave
es
xor
mov
repnz
(bad)
shl
sub
or
cwde
jle
scas
xor
push
sbb
(bad)
call
mov
jecxz
sub
test
mov
lods
or
xor
and
dec
or
sbb
pop
mov
(bad)
jmp
pop
out
inc
imul
mov
into
shl
mov
pop
jecxz
test
adc
stc
push
cli
and
inc
push
push
mov
shl
dec
(bad)
sti
inc
out
and
enter
out
sahf
data16
adc
out
imul
in
ja
xchg
pusha
or
cmp
xor
aas
and
cmp
or
icebp
mov
xlat
scas
pop
fyl2x
ss
sti
cmps
add
sub
in
pand
aaa
test
mov
(bad)
in
sbb
push
ffree
arpl
mov
and
lods
pushf
popf
or
push
jmp
dec
inc
and
jnp
pop
fs
xchg
mov
add
adc
mov
jle
mov
sub
imul
lods
cmp
mov
imul
pop
nop
cmp
mov
xchg
inc
jecxz
cdq
leave
sbb
xchg
jne
jge
sub
iret
add
adc
or
dec
(bad)
push
or
ret
call
lods
imul
fidiv
xchg
das
xchg
mov
dec
jecxz
lods
cmp
cdq
push
jmp
call
int3
push
mov
mov
push
nop
and
ficomp
sub
jo
into
in
outs
push
push
and
inc
push
inc
or
mov
jle
lea
push
add
or
es
cmp
pop
inc
retf
jmp
ret
rol
pushf
jb
aam
pop
mov
inc
imul
xchg
add
adc
int
sub
inc
jae
add
inc
push
mov
lea
movs
nop
push
in
push
stos
loope
push
mov
jmp
jo
loope
mov
ja
nop
xor
or
cmp
mov
jp
cs
and
sub
jbe
test
test
popa
push
shr
(bad)
loope
dec
test
pause
jbe
test
dec
clc
add
fstp
and
das
xchg
bound
out
pusha
int
sbb
lock
test
inc
aad
jmp
xchg
shr
(bad)
fstp
ja
retf
scas
jecxz
mov
xor
ss
repnz
pop
das
ja
mov
jp
hlt
adc
stos
push
pop
mov
call
ret
mov
test
dec
fdiv
xor
aad
cmc
jge
inc
push
add
or
or
xchg
pop
xchg
lea
in
pop
cmp
add
dec
mov
jo
inc
xor
sub
test
xchg
aas
pop
fs
leave
jp
(bad)
fucomi
popa
or
pandn
sbb
jb
mov
xchg
jge
enterw
ss
jbe
pop
cld
pop
mov
mov
dec
lock
sar
mov
sbb
jl
stos
test
dec
push
(bad)
cmc
and
les
mov
sub
dec
pop
jae
inc
sbb
jo
(bad)
and
call
sbb
cdq
mov
dec
sahf
pop
retf
cmp
and
mov
ins
mov
and
(bad)
ja
mov
outs
and
mov
test
and
repz
lfs
sub
and
sbb
cmp
sub
mov
cmc
jnp
pop
mov
and
call
pushf
ret
mov
fidiv
js
xor
and
adc
inc
xchg
loopne
(bad)
int3
xor
out
dec
and
repz
stos
outs
xchg
shl
ins
sbb
push
mov
div
aaa
stc
cdq
or
sbb
jle
(bad)
aam
ss
and
(bad)
std
and
pusha
cmp
ret
or
and
xchg
and
mov
mov
popa
mov
inc
ror
cmc
sbb
cmp
pop
mov
mov
dec
dec
xchg
add
add
shl
add
push
push
cmc
push
xchg
mov
inc
or
fcmovu
test
repnz
and
sub
adc
nop
sbb
push
enter
jmp
aam
push
aas
test
sub
xor
test
outs
inc
fcmovnb
lds
lods
gs
push
mov
mov
call
cmc
call
aas
xchg
jns
and
daa
inc
leave
mov
sub
xchg
inc
jl
xor
add
imul
cmp
loopne
aaa
mov
nop
push
fcom
sbb
(bad)
stc
push
mov
(bad)
push
push
jmp
xchg
out
pop
add
inc
pop
mov
lock
mov
xchg
inc
push
arpl
adc
test
js
inc
xchg
xor
sub
mov
or
add
mov
pop
rcl
dec
jmp
inc
push
mov
sub
jge
ins
xchg
inc
mov
cmp
push
shl
push
pop
mov
cmp
nop
aam
clc
stc
bound
cmps
jp
in
adc
sahf
icebp
jg
mul
jge
and
sub
inc
les
sbb
pop
and
dec
pop
and
mov
jg
loope
dec
and
fsubrp
cmp
push
inc
jne
inc
or
and
or
scas
pop
and
aas
jecxz
adc
dec
aas
xor
mov
loopne
cli
xchg
lahf
xchg
xor
adc
std
mov
adc
dec
loop
xor
test
mov
jge
stos
mov
mov
(bad)
and
dec
mov
add
mov
aas
mov
gs
adc
or
or
mov
mov
call
cmp
dec
mov
xchg
fcom
lea
adc
add
push
or
xchg
push
fist
into
fisttp
les
jmp
pop
pushf
les
daa
in
ja
scas
imul
stos
mov
fild
sti
mov
outs
inc
cmc
mov
cli
mov
mov
adc
sar
inc
push
dec
mov
(bad)
push
jb
jbe
cmp
mov
mov
int
mov
enter
adc
(bad)
psllq
or
jp
adc
sahf
aaa
cmps
adc
mov
in
daa
cmp
test
lea
pop
jle
mov
pop
add
or
sub
add
push
sti
sbb
in
nop
ror
repnz
into
mov
pop
and
aas
aam
jbe
xchg
inc
ins
cwde
xor
jno
mov
data16
cmps
sbb
xor
out
jmp
cmp
outs
sbb
outs
push
adc
sti
mov
jnp
rol
test
pop
imul
push
nop
ds
xchg
dec
fnstsw
add
mov
scas
xchg
cdq
mov
cs
loope
in
loopne
aad
mov
jmp
dec
mov
lods
aam
push
add
or
(bad)
mov
dec
add
cmp
aam
cmps
and
scas
pop
ror
arpl
mov
adc
out
jmp
dec
es
jae
repnz
mov
mov
scas
cmps
cmp
rcr
jg
dec
sbb
jno
test
xor
pop
icebp
xor
dec
jmpw
xor
dec
and
mov
iret
or
call
mov
out
and
ins
scas
outs
loope
lock
addr16
ret
imul
add
ins
out
push
jne
mov
and
mov
push
outs
xchg
pop
or
loope
ds
and
cmp
imul
mov
mov
sub
jecxz
imul
cmp
push
or
lds
addr16
out
(bad)
loop
xchg
mov
mul
scas
jecxz
sar
xor
mov
mov
adc
rcl
inc
or
adc
sahf
in
pop
call
mov
out
fimul
ret
dec
pop
enter
mov
mov
loope
mov
test
in
or
xchg
inc
inc
and
imul
stos
mov
pop
dec
pop
jae
pop
test
add
push
bswap
ret
jno
lods
mov
mov
xor
rcl
or
aam
cmp
push
jb
pusha
adc
mov
(bad)
icebp
adc
imul
adc
es
cs
xor
cli
push
rcr
adc
ja
mov
dec
lods
(bad)
and
(bad)
out
and
jmp
iret
sub
push
out
dec
push
add
fidivr
pop
test
pop
xchg
ja
into
add
lds
mov
dec
nop
in
enter
adc
xlat
imul
dec
scas
mov
mov
jne
jmp
int
pop
out
jae
mov
sbb
adc
stc
mov
fist
pop
adc
lahf
scas
loope
sub
add
add
loope
mov
ins
in
movzx
pop
ror
test
lods
in
mov
cmps
mov
inc
xor
cmp
fwait
scas
aad
nop
data16
dec
out
inc
jg
not
mov
cli
jmp
jecxz
push
test
lea
xor
mov
loopne
mov
mov
mov
out
rcr
mov
stos
mov
rcr
(bad)
mov
xchg
scas
and
jmp
and
outs
mov
and
jns
daa
or
test
dec
fild
gs
inc
mov
push
push
popa
xor
stos
xor
lea
xor
int3
icebp
add
hlt
int3
imul
push
imul
dec
ror
into
fwait
add
dec
popa
lds
adc
push
add
and
(bad)
(bad)
popf
pop
push
xchg
xchg
jecxz
sub
cmp
data16
mov
inc
xchg
popf
or
fwait
adc
inc
movs
xchg
test
and
xor
xbegin
mov
jnp
js
fst
icebp
stos
cmp
mov
cmp
clc
mov
jbe
jo
mov
adc
sub
scas
js
push
lahf
shr
outs
adc
pop
jecxz
or
outs
(bad)
in
pop
rol
fisubr
jg
jl
push
pop
mov
and
movs
sbb
xchg
sub
or
jl
mov
adc
rol
inc
xchg
aad
sbb
int
cwde
mov
sub
icebp
pop
add
dec
sub
xchg
scas
sar
push
and
aad
cld
out
ins
sub
(bad)
adc
cs
fisubr
daa
dec
or
mov
gs
scas
in
out
dec
push
jl
mov
and
sbb
(bad)
scas
or
jbe
(bad)
dec
neg
push
jp
call
pop
loope
sbb
adc
dec
jno
mov
mov
add
jmp
mov
mov
xor
lea
ss
cmps
dec
jg
ret
sub
mov
lods
xchg
call
jecxz
or
nop
enter
mov
dec
mov
and
out
push
int
adc
pushf
aas
push
out
mov
rol
(bad)
sbb
inc
mov
sbb
mov
jmp
pop
jge
xchg
sub
aaa
(bad)
js
push
imul
add
mov
inc
ins
add
leave
nop
xchg
mov
pop
(bad)
in
fwait
das
stos
jl
mov
push
push
movs
(bad)
cmp
stos
jecxz
inc
cmp
retf
sbb
mov
and
pop
ret
std
xchg
xchg
rcl
ins
ret
cmp
je
pop
adc
inc
jbe
imul
xchg
inc
xor
movs
add
sbb
dec
sub
dec
icebp
push
(bad)
rcr
xor
cmp
test
cmp
cld
adc
call
push
arpl
mov
add
not
leave
dec
mov
jle
gs
push
push
jmp
sub
int
and
mov
mov
outs
ret
push
xor
push
mov
mov
(bad)
mov
test
push
cdq
xor
into
mov
mov
pop
cmc
daa
xor
fs
or
sbb
cmp
pop
(bad)
pop
mov
pusha
mov
mov
jo
jmp
sbb
jmp
(bad)
jbe
mov
cli
fxch
add
data16
ror
fmul
inc
push
aaa
ins
pop
test
call
int3
cmp
mov
cmps
pop
xor
int
je
sub
mov
xor
es
inc
aam
int3
test
(bad)
lods
push
pop
and
cmp
push
dec
mov
in
mov
call
cmp
mov
in
dec
mov
mov
lock
push
test
lods
aad
cmp
cmc
jp
and
sahf
sti
xchg
sub
xchg
lods
ins
and
in
cmp
fwait
inc
sub
stos
loopne
addr16
lock
data16
dec
mov
sbb
dec
lahf
jle
push
out
sub
shr
fdivrp
repz
movs
xchg
retf
mov
add
sub
jns
ins
fstp
push
repnz
ret
js
add
and
ss
(bad)
(bad)
fsubr
lods
xor
cld
cmpxchg
pushf
sub
dec
inc
jp
xchg
out
das
sub
inc
xor
dec
jo
sti
add
setbe
jle
mov
mov
retf
mov
fimul
jge
sub
in
xchg
mov
push
out
push
jnp
jbe
push
sbb
xchg
xchg
neg
in
sbb
test
mov
test
pushf
pop
inc
ja
push
mov
scas
sbb
push
adc
enter
xor
arpl
inc
add
add
stc
push
int3
or
dec
push
mov
scas
fistp
jge
sub
push
call
in
jge
in
in
out
adc
pop
out
dec
inc
repz
arpl
mov
ins
lods
retf
rol
das
xchg
push
adc
jp
movs
jmp
mov
lea
movs
repnz
push
sub
sbb
repz
cwde
adc
jle
(bad)
mov
addr16
stos
mov
mov
ret
out
adc
push
cmp
enter
test
xor
and
sar
xchg
and
out
jo
cmp
jle
xor
add
in
xchg
std
jg
or
cmps
mov
push
js
fld
loop
ror
mov
out
inc
stos
mov
popf
sub
xchg
mov
or
or
scas
retf
or
dec
cmps
sub
stos
inc
mov
arpl
jge
rol
ins
mov
fidivr
cmp
pop
dec
sub
dec
cdq
inc
movs
sti
cmp
loop
int3
fs
ins
out
adc
enter
cmp
in
fmul
lds
and
sbb
bound
cmp
sbb
and
adc
aaa
aas
and
jbe
ja
jp
loope
dec
daa
std
(bad)
mov
pop
and
lahf
loop
xchg
push
mov
pop
cmps
mov
xor
add
lods
push
gs
test
imul
cmp
test
outs
pop
xor
pop
pop
sbb
pop
jb
pop
mov
jmp
and
rol
rcl
icebp
cdq
leave
ret
das
mov
mov
shl
test
retf
lods
push
aad
clc
ret
add
test
xor
pusha
call
stc
(bad)
aas
mov
adc
pop
and
dec
mov
xchg
int
xchg
jns
dec
outs
mov
aad
(bad)
lock
out
mov
xchg
xchg
loop
loope
mov
(bad)
pop
cs
js
mov
xor
repnz
xchg
mov
push
cmc
dec
inc
add
push
sar
pop
aad
xchg
aad
cli
cmc
dec
add
or
sbb
mov
or
sbb
fwait
repz
push
sbb
jge
sub
jmp
lds
lock
add
retf
(bad)
aad
adc
mov
cld
ds
add
out
push
mov
js
outs
pop
and
ret
mov
or
inc
push
push
and
jge
xor
jmp
call
mov
pop
pop
jb
pcmpgtd
lods
(bad)
sti
addr16
aaa
dec
add
jnp
cmps
enter
call
pop
pop
or
push
cs
out
pop
lea
xchg
inc
scas
mov
test
movs
pop
adc
dec
test
je
cmp
add
sub
rcl
mov
fiadd
xchg
push
inc
fwait
sub
xchg
mov
retf
popa
push
jmp
retf
pop
cwde
push
add
or
jmp
out
div
jl
xchg
adc
stos
icebp
dec
mov
inc
sti
jb
call
popa
add
mul
push
cmp
call
in
dec
pop
sub
pushf
rol
and
fdivr
icebp
dec
(bad)
sub
mov
loope
mov
and
sub
enter
jmp
and
jae
jnp
cwde
pop
add
xchg
movs
jmp
jns
sub
mov
pusha
shl
push
mov
add
cmps
jge
adc
push
fwait
imul
(bad)
pop
and
(bad)
xchg
sbb
mov
jg
ins
call
stos
fldcw
sub
inc
fwait
rol
sbb
xchg
cld
or
and
add
or
or
popf
rcl
aaa
push
jmp
es
xor
fsub
loop
xchg
cdq
push
push
or
ins
rcr
add
nop
int3
adc
call
cmp
inc
xchg
sar
add
test
mov
repz
mov
iret
mov
sbb
scas
push
les
clc
aaa
push
push
popf
pop
add
pop
loopne
sub
scas
fistp
jb
mov
test
inc
sub
or
push
lea
or
hlt
into
out
push
inc
inc
test
xchg
retf
aam
sbb
dec
push
xchg
movs
xor
xor
inc
aas
stos
pushf
jns
and
fldenv
out
cmp
push
imul
retf
xchg
xchg
dec
fs
xchg
sbb
or
or
add
mov
sub
jo
adc
mov
fld
leave
pop
jmp
mov
test
sahf
fidivr
(bad)
and
push
clc
dec
push
jge
aam
sbb
jbe
dec
xchg
std
sub
sub
scas
pop
(bad)
sbb
in
jbe
or
pusha
sti
bound
xor
pop
xor
ret
(bad)
jns
sub
and
call
sub
fdiv
or
rep
ret
mov
mov
jo
mov
jb
ja
cwde
(bad)
fld
dec
hlt
repz
xchg
lods
retf
adc
jo
lock
mul
dec
jp
mov
mov
xchg
sub
sub
lock
lods
enter
out
shl
mov
and
xchg
xor
pop
aad
add
jne
add
jne
mov
adc
adc
je
ret
pop
pop
pop
push
xchg
push
add
push
(bad)
cwde
lahf
jl
mov
adc
loope
cmps
xor
jns
xchg
sub
adc
mov
xchg
and
push
add
jo
cmps
cs
mov
mov
cmps
rcr
jp
dec
cwd
mov
icebp
loop
add
pop
ins
mov
mov
push
inc
inc
call
nop
inc
push
fdivr
mov
adc
cmp
in
jno
rcl
sub
or
es
dec
mov
cmp
sbb
nop
in
imul
sar
out
repz
shl
inc
add
cmp
push
adc
or
mov
and
leave
lds
cmp
in
cdq
mov
outs
jo
add
lahf
cmp
push
dec
sub
stc
pop
retf
jnp
mov
or
and
sbb
sbb
mov
int3
pop
xchg
push
inc
or
jno
adc
mov
arpl
pop
jmp
and
adc
dec
or
lods
mov
fsubr
lods
stos
(bad)
sahf
int3
xchg
pop
rcr
mov
test
pop
outs
mov
fcmovb
pop
adc
jbe
ds
arpl
jb
jb
jmp
mov
xor
cwde
sbb
xor
sub
adc
push
add
xchg
add
xor
lds
or
cmp
movs
xchg
adc
(bad)
sbb
push
(bad)
repz
or
sub
mov
inc
imul
add
in
popf
dec
mov
push
(bad)
stc
out
in
loopne
neg
mov
xor
push
imul
cli
jno
and
in
sub
sbb
cs
gs
mov
sub
adc
movs
push
push
imul
outs
cmps
into
pop
ds
or
sahf
push
shl
mov
jbe
dec
fstp
dec
scas
jecxz
xor
btr
fsubr
ret
iret
scas
jge
mov
push
pop
jae
lds
fcomp
leave
dec
sbb
sbb
shr
loopne
test
adc
call
iret
adc
aam
xchg
in
inc
out
je
sbb
inc
repz
clc
xor
adc
fxch
jns
mov
sub
fiadd
dec
pop
movs
mov
cdq
(bad)
mov
mov
mov
pop
repz
mov
stos
fnstcw
enter
dec
fstp
inc
jo
and
and
mov
lds
sbb
test
mov
push
iret
cld
enter
cmps
mov
cs
inc
or
loopne
sbb
in
stc
sub
leave
mov
data16
movs
mov
test
sti
mov
jo
inc
mov
test
aas
inc
push
and
loopne
mov
jg
clc
repnz
ja
jbe
aaa
mov
stos
dec
dec
ficomp
lds
mov
jl
add
push
fstp
call
mov
clc
clc
nop
addr16
cmp
(bad)
aad
adc
shr
imul
pop
hlt
arpl
enter
sbb
rcr
push
mov
pop
sbb
dec
or
(bad)
pop
cwde
xor
xor
or
pop
xchg
mov
push
sbb
cmp
clc
or
mov
aam
xchg
outs
outs
cmp
dec
hlt
and
inc
push
stos
pop
push
test
addr16
sub
(bad)
mov
xchg
mov
arpl
xchg
(bad)
gs
ins
mov
jmp
fcomp
mov
mov
jp
loopne
jmp
push
pop
test
xor
sub
aas
pop
pop
dec
mov
and
out
sbb
loop
repz
mov
int
push
fs
dec
int3
sbb
mov
mov
ret
pop
jecxz
push
sahf
xchg
and
mov
iret
fidivr
sahf
push
xchg
ds
or
pop
test
pop
ficomp
cmps
inc
repnz
adc
fadd
out
js
or
dec
mov
popa
pushf
(bad)
xor
xchg
inc
and
mov
sub
pop
cmp
mov
xchg
in
inc
pop
jns
out
pop
nop
or
test
(bad)
add
or
jmp
and
ror
mov
xor
and
ja
fiadd
xor
stc
cli
aad
cmp
jne
xchg
in
nop
jg
cwde
out
adc
fidivr
imul
dec
ret
imul
add
ins
cmp
outs
lahf
or
(bad)
mov
inc
and
imul
mov
or
das
or
scas
xchg
or
dec
push
dec
and
(bad)
aam
xchg
pushf
pop
add
aad
push
in
aad
mov
push
or
fsubr
les
bnd
dec
jecxz
dec
adc
mov
test
ror
cld
sub
mov
movs
js
and
and
ret
add
js
sub
popf
stos
ins
cmp
jne
jmp
push
inc
sar
(bad)
mov
mov
mov
rcr
add
out
cmp
and
pop
mov
fild
and
cmps
icebp
mul
(bad)
out
fwait
push
out
mov
mov
fldenv
sti
mov
aas
in
lahf
shl
xor
mov
movs
dec
dec
(bad)
cld
and
(bad)
into
mov
mov
push
mov
data16
(bad)
shr
ja
xchg
add
sbb
xchg
mov
and
pop
leave
pop
inc
adc
retf
adc
cdq
xchg
out
inc
cwde
aaa
mov
cmps
loope
sub
cwde
push
mov
dec
or
xor
ret
inc
mov
cs
and
fdivr
xchg
in
idiv
fidiv
or
jmp
pusha
pop
loop
ficom
xchg
imul
sbb
(bad)
sub
mov
xchg
addr16
in
inc
inc
add
mov
ss
into
ss
movs
lea
aaa
imul
hlt
push
dec
push
loop
imul
add
pop
pushf
ins
iret
imul
rcl
(bad)
jge
ins
popa
mov
sti
fdiv
jb
cmp
(bad)
xchg
or
call
fistp
fcomip
mov
ja
pop
jmp
test
shl
mov
or
pop
jae
fiadd
lea
mov
jb
aaa
test
sahf
icebp
inc
aas
(bad)
mov
cmc
jecxz
ds
jae
or
mov
lock
adc
ss
mov
pop
add
adc
pop
in
inc
and
outs
ret
ret
cmp
ffreep
nop
inc
adc
mov
add
mov
fst
not
or
mov
sbb
sbb
xlat
leave
fwait
scas
and
cmc
dec
cld
adc
xlat
outs
pop
aam
jmp
in
dec
out
inc
shl
out
call
aas
jae
or
adc
icebp
fdiv
mov
outs
in
push
xor
(bad)
daa
fnstenv
add
and
pop
cmp
jns
jg
sbb
mov
xor
das
ins
jp
shl
fwait
sbb
or
xchg
push
shl
movs
repz
jmp
stos
jns
sbb
jns
jl
jnp
data16
mov
jae
adc
cs
mov
cmp
pop
into
cld
push
sub
repz
pop
mov
add
and
sbb
push
mov
test
cmps
jl
out
test
sbb
cdq
les
and
daa
dec
data16
sar
add
pop
sub
push
js
aam
in
push
xchg
or
loop
push
xor
arpl
test
or
div
adc
cmp
test
fbstp
outs
mov
adc
mov
pop
mov
repnz
fcmovnbe
inc
xor
jno
xchg
movs
sar
xchg
ins
fyl2xp1
test
aam
jge
adc
mov
cli
gs
fdivrp
pushf
hlt
mov
clc
and
xchg
daa
mov
dec
and
lods
push
xchg
and
cmps
ins
or
push
push
retf
mov
popf
pushf
sub
stc
push
mov
ret
xor
xor
sub
(bad)
imul
popa
sbb
stos
pop
aaa
pushf
sub
jle
jb
or
inc
mov
addr16
jne
push
loopne
sub
xor
inc
in
fnsave
dec
sbb
mov
sahf
jbe
lods
std
aad
mov
xchg
jno
sub
sub
push
imul
xchg
ja
add
mov
jo
es
xor
push
not
lds
icebp
or
xor
dec
add
icebp
xor
test
ret
push
dec
mov
call
test
sahf
lods
mov
sub
add
(bad)
jmp
mov
dec
das
push
and
jle
sub
movs
fbld
out
out
pop
sbb
push
(bad)
aam
outs
lahf
and
clc
push
push
mov
cmp
sbb
push
cmp
retf
inc
pop
sbb
aam
and
fs
stos
add
mov
dec
cmp
call
lods
lods
popf
push
sbb
jle
(bad)
push
inc
dec
leave
push
je
and
xor
cdq
arpl
jne
dec
mov
into
mov
sti
dec
cwde
push
inc
xchg
mov
scas
or
out
mov
pop
push
(bad)
mov
jae
cdq
ja
jne
mov
paddsw
data16
jmp
into
popf
push
gs
mov
movs
sahf
sbb
add
pop
mov
add
sub
adc
mov
sub
adc
imul
jo
outs
hlt
inc
push
adc
aad
pop
mov
neg
das
imul
pop
loope
int
loopne
push
into
ss
add
rcr
sub
rcl
pop
mov
movs
in
rol
cmp
add
gs
fucomi
sub
popa
xor
pop
pop
dec
xchg
ja
cmps
cmp
pusha
ret
xor
pop
inc
lods
inc
shr
shl
jb
jmp
test
mov
cmp
push
loope
pop
ja
or
xchg
jns
jecxz
lea
lahf
xor
cdq
mov
mov
pop
iret
mov
fisubr
imul
adc
mov
in
movs
js
cli
sbb
inc
jecxz
rcr
(bad)
dec
loope
inc
pop
cmp
(bad)
cwde
cmp
sbb
test
cli
loop
xlat
je
popf
ror
inc
clc
(bad)
fwait
push
cmp
pop
jecxz
pop
mov
leave
icebp
push
sbb
add
mov
jecxz
es
lock
mov
ror
push
jg
xor
sbb
inc
ficomp
mov
popf
xchg
mov
in
pop
push
pop
ds
jo
pop
pusha
xchg
pop
icebp
jno
xor
(bad)
and
mov
ds
inc
jno
xchg
test
in
call
in
jge
sbb
inc
lahf
xchg
(bad)
in
mov
dec
(bad)
inc
xchg
sub
mov
xor
out
cmp
dec
aaa
jne
int3
in
stc
(bad)
sub
add
sbb
ss
ds
sbb
in
dec
mov
push
cmc
push
xchg
xchg
dec
and
data16
dec
test
jno
dec
pop
aad
dec
rol
push
repnz
mov
data16
(bad)
jge
xor
cmp
in
push
mov
cmc
cli
fcmovne
mov
xchg
retf
ins
mov
or
iret
pop
popa
ret
into
mov
pushf
scas
pusha
push
cli
mov
mov
iret
into
pop
(bad)
sti
ss
push
inc
(bad)
push
popa
aaa
cld
sti
imul
jmp
mov
xchg
pusha
jl
jnp
cmp
mov
mov
bnd
lea
cli
sbb
repnz
fmulp
xlat
push
jmp
call
mov
cdq
push
xor
pop
lods
call
iret
mov
mov
or
nop
jno
dec
pop
jge
adc
movs
data16
sub
nop
mov
lock
xchg
ds
movs
push
jae
add
test
xchg
clc
and
(bad)
rcr
inc
pop
shl
sti
and
js
or
sbb
jbe
loop
mov
arpl
pusha
mov
aam
(bad)
shl
dec
and
lds
js
xlat
arpl
mov
inc
push
or
xchg
sbb
inc
mov
dec
pop
ss
test
fsub
ret
loope
pop
jg
dec
movs
faddp
xchg
sub
add
mov
or
cmp
and
loopne
adc
rcl
mov
cmp
call
dec
jbe
xor
imul
jb
in
das
(bad)
sbb
rcl
fwait
outs
xor
and
pop
adc
mov
fs
test
mov
pop
call
adc
stos
fisubr
ror
dec
(bad)
enter
sub
rol
push
iret
jecxz
neg
and
mov
sti
mov
adc
mov
mov
test
stc
(bad)
mul
int
push
dec
imul
aad
fbld
mov
popa
nop
sub
out
lahf
fidivr
pop
fcomp
scas
jb
xor
and
mov
cmp
jl
fdiv
movs
sbb
push
ret
xchg
cli
(bad)
cli
(bad)
adc
int3
mov
(bad)
mov
push
jb
push
in
dec
in
(bad)
cwde
jge
or
xchg
fcmovb
cmp
jmp
pop
(bad)
cld
push
lods
lods
btr
(bad)
xor
aaa
jo
call
cld
test
sti
push
cmp
push
test
push
add
in
jmp
sahf
mov
loopne
iret
mov
lock
les
or
adc
xchg
jno
dec
outs
iret
movs
pop
inc
mov
(bad)
push
add
xchg
dec
xchg
xor
pop
xchg
ja
call
lea
pop
mov
cmp
out
repz
call
retf
bound
jmp
mov
iret
add
sar
sbb
xchg
cmp
or
arpl
aad
sbb
fwait
rdtsc
pop
jl
test
pop
cmps
fdiv
mov
mov
out
dec
lahf
pop
outs
mov
js
push
push
inc
int3
pusha
ficomp
jns
mov
mov
xchg
mov
shl
ins
std
stos
cld
cs
lahf
ret
(bad)
aad
mov
pop
mov
loope
mov
std
sbb
pop
outs
xchg
cs
dec
xchg
out
loop
push
retf
fisttp
mov
cmps
mov
or
movs
inc
push
adc
or
sbb
stos
pop
(bad)
mov
test
ret
retf
daa
adc
out
push
inc
retf
or
sbb
xchg
iret
push
mov
outs
jbe
pop
dec
jns
jle
call
pop
push
jno
lods
jns
jo
pop
pushf
xchg
sbb
cdq
(bad)
fld
jge
call
mov
jl
cmp
imul
int3
das
xlat
mov
adc
cmp
mov
push
fcmovnb
movs
int3
std
push
push
add
xchg
sub
imul
or
inc
je
or
mov
or
and
movs
mov
cmps
or
push
xchg
fimul
or
mov
xchg
sub
cmps
cmc
ins
outs
xor
xor
movs
xor
popf
add
movs
xor
add
pop
je
dec
jmp
inc
hlt
and
mov
inc
mov
rcl
cmp
(bad)
cmp
adc
sub
js
push
leave
popa
arpl
inc
xor
mov
adc
test
jl
enter
fs
xchg
pusha
mov
jne
fsub
add
sti
lods
add
enter
push
lahf
inc
add
sub
loop
mov
leave
jns
and
or
xchg
dec
mov
mov
add
pushf
mov
jecxz
sbb
pop
jle
repz
retf
sti
inc
or
sub
jb
outs
mov
mov
push
jp
jne
xchg
adc
out
fcomip
push
(bad)
mov
pop
dec
adc
pop
ds
add
ss
cmp
popa
mov
les
cmp
shr
adc
stos
inc
mov
scas
retf
lea
(bad)
out
ja
inc
jbe
mov
mov
xchg
mov
pop
jno
icebp
xchg
scas
dec
outs
xchg
out
push
or
mov
cmp
xchg
shr
fs
jnp
in
pop
mov
call
aad
inc
shl
xor
call
add
pop
nop
iret
je
mov
dec
cdq
push
call
fdiv
ret
iret
aaa
div
jno
stc
fcmovnb
test
cld
xchg
and
jecxz
repnz
daa
repz
mov
gs
call
(bad)
mov
sti
xchg
inc
ja
sar
lahf
push
sub
push
sti
ror
test
and
repnz
jo
pop
jp
fistp
mov
xor
sbb
dec
fstp
daa
and
dec
push
jno
(bad)
add
and
sub
call
pop
mov
cli
push
add
pop
xchg
sahf
cwde
and
mul
outs
shl
dec
xor
cmp
xor
cmp
adc
in
sub
or
shl
dec
lock
mov
inc
stc
jg
jne
pop
int
or
and
shl
neg
stos
scas
bound
pop
invd
and
int3
dec
mov
and
idiv
retf
rol
pop
fwait
xor
loop
(bad)
jae
test
cmc
push
jmp
jno
loope
jp
sub
enter
sbb
std
mov
jbe
push
push
setne
jmp
int3
addr16
xchg
cmp
loop
inc
or
(bad)
or
cmp
psubusw
aas
(bad)
scas
(bad)
push
xchg
out
fnstenv
(bad)
call
jae
fadd
inc
add
adc
inc
mov
mov
in
jbe
es
(bad)
cmp
aas
inc
inc
adc
jge
sub
hlt
std
sbb
push
movs
xchg
aad
adc
fisubr
(bad)
in
retf
or
add
imul
jnp
repz
dec
iret
fistp
fisub
sbb
lea
or
mov
cmps
or
test
ret
cmp
fisub
adc
sub
or
or
je
das
cmp
and
push
loop
mov
pop
popa
inc
and
lods
lock
mov
xor
in
mov
mov
mov
and
je
outs
xchg
xchg
mov
ss
daa
jo
mov
add
mov
sahf
fidivr
xlat
int3
mov
mov
iret
mov
jno
cmp
sbb
rcr
ins
mov
jg
repz
repz
(bad)
jnp
sbb
sar
mov
cmc
xor
xor
push
push
shl
mov
clc
xchg
loopne
movs
repz
leave
pushf
lods
sub
sub
jmp
mul
fnstenv
shr
icebp
pop
mov
mov
dec
cmp
fcom
mov
outs
into
repnz
lods
stos
enterw
addr16
int
fdivr
test
jbe
dec
xor
jbe
shr
adc
adc
pop
mov
test
mov
mov
and
mov
shr
add
outs
push
cmp
sti
adc
fdiv
in
neg
fadd
rcl
cmps
loope
dec
mov
jns
(bad)
sti
cmp
popa
scas
inc
les
inc
fcomi
mov
jmp
fsubr
movs
jecxz
sti
ins
out
gs
push
imul
sbb
mov
fs
pop
sub
and
and
fwait
adc
cmp
and
xchg
sub
cli
fwait
lods
lea
aad
cmps
js
out
nop
inc
sub
jne
push
(bad)
mov
loopne
inc
sub
pop
inc
dec
repz
imul
mov
mov
jo
xchg
retf
aad
stos
nop
xor
or
ds
jl
xchg
or
jo
leave
div
and
jno
arpl
adc
(bad)
arpl
or
iret
shr
xor
push
lahf
mov
cmc
xchg
scas
retf
shl
xlat
jnp
or
sub
sbb
ror
mov
xor
sbb
fidiv
retf
popf
(bad)
xor
adc
aas
mov
cdq
sbb
mov
add
xor
push
xchg
popa
jnp
adc
dec
idiv
xor
dec
(bad)
mov
sub
pop
xor
fild
daa
mov
push
out
fsubr
jmp
fs
jne
xor
dec
jb
scas
xlat
and
add
xchg
cld
add
fst
adc
mov
mov
mov
add
jmp
sub
js
dec
inc
nop
push
addr16
sbb
or
cwde
or
imul
hlt
out
aas
loope
jo
cmp
int
(bad)
rol
ds
cmp
mov
add
or
inc
pop
jmp
ror
loopne
add
mov
ret
repnz
xor
(bad)
or
inc
push
neg
(bad)
xor
mov
pop
xchg
mov
stc
push
dec
retf
xor
push
mov
gs
cmps
sub
out
jae
out
and
add
or
loopne
repz
jle
gs
call
outs
inc
jbe
and
mov
int3
stos
stos
adc
xor
push
test
sub
in
xchg
adc
jmp
aad
pop
sbb
jmp
fstp
popf
sub
jmp
retfw
add
outs
mov
in
inc
sar
cmp
in
or
int3
xchg
and
(bad)
mov
fcomi
loop
pop
mov
dec
cmp
movs
adc
mov
dec
aaa
pop
dec
pusha
(bad)
jno
jno
cmp
lahf
cld
int3
xor
addr16
mov
xchg
aas
int
popa
mov
xchg
ins
adc
data16
into
aaa
mov
ja
or
inc
rcr
xor
les
sahf
dec
jg
aam
movs
xchg
xchg
mov
(bad)
icebp
pop
mov
jne
add
xor
movs
mov
jne
push
in
jmp
jge
xor
xchg
xchg
push
cmps
add
pusha
jp
shl
cmp
adc
inc
cld
mov
inc
sub
push
sub
out
xchg
(bad)
cmp
or
sbb
push
mov
pushf
repz
cli
cld
std
ret
mov
xchg
jle
repnz
jg
push
fistp
fistp
jbe
xchg
push
scas
mov
xor
cmp
xor
das
push
mov
fadd
fsubr
lea
cmps
fcomp
(bad)
mov
cmp
inc
adc
loope
mov
imul
cli
scas
outs
loop
push
and
push
xchg
(bad)
adc
ficomp
ret
lea
xor
sbb
shl
int3
lahf
add
jle
mov
lods
arpl
xor
cmp
and
push
out
inc
xchg
push
(bad)
out
sub
sub
fst
push
dec
mov
ror
cli
and
loopne
add
xor
sub
int3
aad
fnsave
cmp
mov
inc
popa
popa
mov
mov
dec
pusha
outs
inc
ja
out
cmc
or
adc
sub
cld
ror
shl
cmps
int3
js
inc
push
daa
dec
inc
mov
jnp
mov
push
test
shl
ror
retf
adc
lods
dec
cmovp
jae
arpl
mov
dec
call
jns
hlt
ins
sub
fisub
or
fist
jmp
loop
mov
shr
xchg
pusha
sub
sub
push
(bad)
addr16
push
arpl
push
sbb
or
dec
xchg
sub
push
mov
pop
mov
cld
mov
mov
jns
sbb
imul
(bad)
mov
xor
mov
out
lods
sub
cwde
and
mov
test
mov
(bad)
mov
adc
xchg
sar
lods
scas
sub
rcr
jmp
in
mov
pop
in
je
gs
fcomi
mov
inc
bound
(bad)
movs
(bad)
jg
mov
sar
sub
leave
fisub
lods
adc
fcom
or
pop
cli
jg
mov
icebp
mov
pop
loop
dec
popf
lock
pop
les
enter
pop
xchg
out
dec
pusha
mov
jp
(bad)
pop
mov
sub
mov
mov
adc
mov
mov
shl
dec
pop
call
popa
cmps
xor
mov
fwait
clc
mov
ficomp
loope
ss
rol
test
jmp
xchg
jp
mov
xchg
retf
xor
cmps
hlt
and
js
shl
mov
xchg
in
sbb
xchg
aas
nop
ret
(bad)
call
out
xlat
fsub
add
jne
dec
push
enter
cmp
jg
mov
mov
or
leave
dec
iret
pushf
mov
repnz
fsubr
in
outs
and
sub
fwait
out
push
pushf
call
shr
inc
hlt
aaa
sti
iret
lahf
xchg
sbb
xchg
pusha
sahf
mov
or
nop
mov
in
pop
pusha
mov
mov
cmps
movs
test
clc
aad
push
push
or
jo
ret
sbb
xchg
dec
loope
test
sub
inc
mov
in
sbb
call
loope
push
das
repz
cdq
mov
lock
dec
and
xor
and
adc
cmp
jbe
inc
sti
out
xor
lock
into
adc
rcl
dec
aaa
aaa
sti
sbb
fld
out
and
push
dec
mov
jb
sbb
enter
cld
cmp
imul
gs
xor
pop
push
push
inc
jnp
(bad)
jge
lods
aad
or
cmps
push
call
cmps
add
push
sti
inc
rol
xchg
cmp
dec
in
push
enter
leave
add
push
or
xchg
test
test
js
dec
xor
cwde
out
rcl
and
mov
scas
dec
mov
sbb
dec
or
ds
mov
sub
mul
sub
jne
(bad)
in
cmc
push
jo
addr16
mov
fmul
adc
add
xchg
jae
jl
mov
dec
in
adc
int3
int3
add
sahf
in
std
mov
les
pop
(bad)
outs
xor
fild
(bad)
jno
and
mov
cs
and
mov
or
shr
sub
sar
pop
out
imul
mov
test
es
mov
fidivr
scas
or
pop
data16
cmp
ins
je
pop
or
inc
inc
shr
loope
adc
imul
fadd
jecxz
and
add
ror
jno
jecxz
int3
call
fst
add
retf
push
dec
ficom
int
xor
mov
mov
push
shr
js
lahf
push
movs
xor
repnz
lahf
ror
dec
push
mov
in
mov
jmp
inc
in
and
ins
test
outs
dec
mov
sub
sub
adc
dec
test
adc
dec
jle
jecxz
and
cmp
aaa
movs
dec
dec
xor
add
jl
push
cmp
loop
push
mov
mov
mov
(bad)
je
dec
jne
sbb
aam
scas
sbb
adc
js
aam
and
sbb
jl
jmp
mov
pop
jo
sti
stos
push
xor
jmp
loope
pop
sbb
xchg
mov
or
adc
das
shl
imul
inc
cld
jmp
add
and
and
xor
rol
(bad)
cmp
jl
cmp
pushf
int
sti
push
or
or
scas
(bad)
pusha
and
mov
outs
add
xchg
movs
adc
jnp
in
shl
int3
jmp
xchg
test
xchg
and
call
call
mov
dec
pop
push
lea
loopne
ror
int
retf
in
pop
jmp
in
adc
fild
stc
loopne
retf
xchg
jo
xchg
adc
inc
dec
lea
adc
lods
movhps
or
sahf
xor
pusha
cwde
push
ins
dec
cmp
sar
idiv
or
addr16
enter
mov
mov
add
xor
iret
cmps
jg
xor
mov
jne
dec
dec
shl
test
(bad)
int
cmps
cmp
and
pop
sbb
shl
jmp
or
je
loopne
xchg
ins
jg
aam
(bad)
scas
dec
aad
fwait
cmps
js
adc
xchg
(bad)
ins
(bad)
cmps
pop
lods
push
(bad)
int
mov
imul
push
inc
loope
add
adc
and
cmp
inc
dec
sar
push
push
into
ins
jmp
add
scas
sub
pop
loop
cmp
xor
fninit
adc
mov
or
add
rcr
pop
xchg
jnp
aaa
pop
mov
iret
lods
xor
icebp
inc
retf
das
sbb
scas
fwait
sti
add
es
aas
imul
fs
xchg
sbb
pop
pop
repnz
movs
ret
jne
pop
popa
movs
xor
adc
cs
lds
jae
mov
push
(bad)
out
fcmovne
jnp
xor
inc
aad
sub
mov
or
adc
sbb
ss
cmp
pusha
loope
inc
push
(bad)
sub
adc
popa
push
pop
xor
mov
xchg
or
cmps
pop
fbstp
push
call
add
push
adc
dec
jecxz
dec
ret
add
xchg
test
cmp
shr
inc
dec
push
popw
and
call
adc
mov
popf
retf
push
mov
jns
arpl
pop
dec
xor
sar
push
mov
mov
fsubr
jl
rcr
jle
aaa
inc
test
retf
add
mov
test
mov
xchg
fldenv
cmc
call
and
aad
sub
mov
mov
lds
sbb
or
les
dec
cld
cmc
movs
sub
mov
mov
cwde
popf
xchg
inc
loop
dec
leave
cmps
cwde
sub
mov
lock
test
loopne
add
inc
imul
dec
pop
pusha
loop
inc
outs
out
aam
lods
pop
and
ret
dec
mov
outs
call
mov
jl
cmp
fwait
cmp
rol
pop
mov
mov
xor
ins
adc
inc
mov
dec
mov
call
je
inc
jg
cmp
or
call
test
jmp
adc
dec
sbb
mov
sbb
adc
arpl
push
jne
test
fldenv
aaa
shl
jle
shr
jmp
inc
cmp
mov
push
je
and
dec
(bad)
add
inc
mov
xchg
cmp
and
cmp
sub
dec
mov
add
dec
ret
push
in
pop
push
mov
outs
sub
stos
adc
inc
pop
ja
push
push
xchg
inc
pop
mov
mov
out
jno
mov
mov
in
add
mov
sar
(bad)
add
inc
sbb
das
ret
loope
out
popf
not
xchg
or
mov
inc
iret
pop
push
out
enter
push
inc
dec
xor
sbb
dec
out
aam
sub
xchg
mov
mov
sti
lahf
jle
cmc
mov
push
cdq
mov
popa
and
dec
leave
xchg
or
popf
and
scas
push
sbb
jle
out
push
das
fwait
in
das
cmp
cmp
ds
ins
test
shl
ins
xchg
inc
arpl
mov
lock
mov
cmp
fld
stc
mov
jae
inc
push
mov
mov
xchg
sub
pop
pop
and
fisubr
pusha
xchg
iret
dec
mov
into
adc
fwait
lods
and
mov
mov
xchg
clc
add
xchg
mov
push
add
(bad)
jecxz
or
mov
push
scas
jmp
add
rcl
cmp
inc
retf
(bad)
rol
(bad)
push
xchg
fisub
cmp
shr
enter
inc
push
cmc
hlt
aas
call
mov
cmp
int3
jl
adc
fs
jmp
jmp
mov
enter
stos
dec
sub
sar
jecxz
add
pop
fcmovne
lahf
mov
fcom
int
cmp
jbe
lea
dec
mov
or
fbld
mov
mov
outs
mov
in
push
bound
or
dec
sub
push
nop
adc
and
or
sub
xor
mov
and
add
inc
cld
int3
jge
pop
in
jns
loopne
jg
fst
mov
(bad)
pop
mov
inc
dec
sbb
jnp
mov
pop
shl
dec
iret
retf
jno
add
cdq
xor
or
cmps
add
sbb
sahf
and
nop
xchg
mov
shl
xchg
das
in
int
jl
fs
outs
popa
dec
adc
lods
inc
sub
mov
out
dec
cs
es
imul
sbb
mov
cli
jns
sbb
add
imul
dec
ror
sar
sbb
xor
xlat
movs
pop
cwde
jg
dec
cmp
mov
enter
mov
outs
push
mov
test
pop
scas
cmps
dec
adc
pop
mov
mov
mov
pop
ja
inc
xchg
fwait
jg
mov
jle
lds
add
xchg
cmp
lds
aad
mov
push
jg
loope
aam
shl
sbb
sbb
xor
inc
mov
jne
pop
pop
sub
les
adc
call
loop
cdq
xor
fcom
cmps
ins
inc
les
mov
in
rol
cmp
or
jge
push
imul
ret
xchg
mov
cmp
or
xor
sti
xlat
dec
test
fcmovnbe
mov
push
cmp
cli
push
aad
in
cmp
mov
push
ficom
pop
dec
push
mov
xor
stos
rol
repnz
pop
xchg
mov
xchg
rcr
call
mov
pop
frstor
dec
ins
test
les
mov
das
int
sub
mov
xchg
mov
repz
mov
scas
(bad)
into
das
xchg
rcr
shl
lahf
lods
push
ret
mov
cmps
scas
add
fisttp
outs
mov
outs
ds
dec
jae
cmps
clc
inc
pop
jbe
jbe
push
lods
inc
xchg
(bad)
sahf
dec
xchg
and
sbb
dec
icebp
mov
pop
fs
cmp
rcl
test
add
lds
std
adc
out
pop
push
mov
into
sbb
jle
ror
push
ss
call
into
jmp
in
aas
shl
repnz
retf
mov
loopne
gs
mov
loope
iret
leave
dec
or
ds
mov
ror
jle
retf
outs
mov
popa
dec
pusha
mov
jns
imul
and
iret
pop
aam
mov
mov
push
enter
mov
inc
test
dec
fild
pop
xor
pop
ja
jmp
jns
inc
nop
push
pop
cwde
arpl
mov
aad
movs
xor
add
lock
call
mov
mov
retf
es
ror
cmp
out
sbb
mov
(bad)
(bad)
popf
dec
and
jns
fdiv
pop
arpl
in
ret
nop
std
sbb
or
inc
mov
push
pop
push
repz
mov
pop
sub
lock
pop
dec
je
inc
leave
dec
in
dec
cmp
mov
sbb
pushf
inc
ss
xor
mov
adc
push
push
leave
sbb
push
aaa
dec
bnd
das
pop
and
jp
add
jmp
setb
mov
push
cmp
cmps
or
stc
xchg
(bad)
arpl
mov
clc
cmp
and
daa
mov
adc
push
mov
enter
lods
push
xor
clc
inc
(bad)
(bad)
and
rcl
mov
stos
cmp
cmp
js
mov
xchg
stos
lods
inc
cmp
or
adc
jl
sub
dec
ret
xor
mov
xchg
nop
dec
mov
idiv
je
sbb
xchg
mov
xchg
ins
lahf
inc
xchg
sbb
jp
sti
dec
sub
inc
stos
into
sbb
mul
stos
xchg
sub
call
loope
imul
sub
or
mov
repnz
jns
xchg
out
or
enter
inc
out
and
add
jnp
loop
mov
inc
call
mov
jns
or
out
jbe
jb
jp
adc
dec
cmc
sti
pop
inc
mov
cli
movs
adc
lock
popa
jb
mov
push
mov
leave
ror
retf
xchg
pop
pop
add
push
test
out
mov
outs
add
xor
jno
cmp
int3
movs
(bad)
jns
sbb
jge
sbb
jbe
sub
jmp
mov
mov
xlat
loope
xchg
bound
(bad)
je
ss
jge
mov
push
sub
xchg
jb
gs
stos
xor
stc
into
xlat
neg
mov
xor
repz
sbb
sbb
sti
mov
outs
mov
or
mov
or
xchg
icebp
mov
sbb
mov
xchg
out
sbb
cmp
lahf
sbb
mov
cli
add
add
sub
into
retf
mov
add
lds
sub
in
push
xchg
jnp
scas
inc
jle
popf
jmp
lds
stos
shr
movs
cld
push
mov
mov
ret
loopne
ins
repnz
xor
mov
mov
test
sbb
jg
and
mov
xchg
aad
mov
in
data16
shr
outs
sub
not
scas
je
lods
jmp
pop
aam
popf
mov
inc
ret
mov
dec
and
mov
mov
inc
push
inc
cmp
into
data16
dec
cmp
scas
inc
into
xchg
adc
stos
test
retf
nop
je
jge
jnp
dec
std
mov
dec
loop
popf
push
mov
push
out
xchg
enter
lods
mov
jl
sbb
or
test
sub
loope
jo
xor
inc
ins
sbb
mov
and
int3
shr
pusha
arpl
ins
mov
lods
int
int3
jae
push
fwait
retf
dec
retf
mov
out
retf
stos
and
out
dec
push
stos
popf
sbb
cmps
pop
cmp
js
test
loopne
(bad)
mov
les
or
xchg
push
gs
mov
addr16
cdq
dec
popa
retf
pop
stos
mov
addr16
stc
mov
stos
nop
add
sub
int
adc
cld
(bad)
(bad)
std
jbe
hlt
xchg
cli
scas
nop
(bad)
(bad)
call
mov
adc
(bad)
sahf
mov
pop
pop
dec
mov
ins
push
(bad)
les
inc
push
sub
adc
sbb
cdq
xlat
push
movs
cmp
lods
jg
cmp
dec
lock
fld
ja
retf
adc
jge
and
call
sahf
stos
ror
fsubr
inc
imul
movs
dec
pop
sbb
shr
ins
pop
dec
rcl
std
fmul
or
mov
jno
mov
cdq
cmp
dec
fstp
dec
sub
sub
fstp
mov
shl
cmp
mov
lods
in
xchg
stos
push
lahf
mov
or
mov
test
(bad)
xor
add
inc
mov
xchg
dec
jb
stos
or
ins
fwait
xchg
xchg
fdivr
aad
(bad)
jns
and
mov
mov
xchg
cmp
or
cdq
cli
dec
ss
mov
fldenv
(bad)
mov
jecxz
out
leave
loopne
out
lahf
shr
xor
and
inc
daa
cli
call
xchg
inc
(bad)
jmp
mov
ds
sub
sub
jge
sbb
or
(bad)
cmp
adc
(bad)
push
int3
scas
fadd
add
pop
(bad)
fiadd
adc
pop
mov
je
mov
inc
sub
fcmovnbe
jecxz
or
pop
or
ins
sub
hlt
aas
xlat
or
xor
pusha
pop
int
aad
in
imul
and
xchg
push
add
gs
xor
test
xchg
inc
addr16
inc
mov
scas
inc
pop
(bad)
sbb
and
push
adc
ret
test
stos
or
pop
mov
dec
mov
sbb
rcl
or
aas
and
and
and
jge
in
outs
or
imul
ds
pop
inc
rcr
push
jnp
cmp
and
das
test
stc
mov
sub
sbb
push
dec
mov
sbb
xchg
inc
sub
aam
sub
push
adc
jne
jg
ret
xor
scas
out
or
sbb
mov
loopne
or
loop
jle
popa
popa
(bad)
push
in
in
inc
add
ins
cdq
shl
repnz
sahf
popf
pop
mov
int3
mov
retf
xchg
xchg
(bad)
xchg
or
ins
shl
gs
pop
rol
mov
dec
repz
es
mov
or
std
or
push
nop
es
dec
pop
test
enter
xchg
cwde
adc
xor
cmp
sti
lahf
jmp
mov
jno
sbb
xchg
dec
xor
ret
or
pop
inc
mov
adc
lods
dec
xchg
ret
mov
jb
cmp
outs
lds
es
ds
xchg
pop
cs
(bad)
(bad)
sbb
mov
lock
in
stos
mov
mov
cmp
dec
cmp
imul
ins
sbb
and
inc
sbb
clc
adc
stc
inc
shr
shr
jmp
mov
stos
jl
mov
pop
sbb
or
or
and
mov
test
inc
cmp
ins
push
cwde
into
(bad)
repnz
mov
and
push
in
pop
push
sub
jp
mov
jge
inc
(bad)
pop
xchg
fsubr
aas
rol
mov
rcr
out
out
int3
ss
xor
out
and
adc
rcl
sub
push
xor
mov
jbe
xchg
stc
es
je
mov
lahf
pop
into
data16
stos
push
xchg
test
push
and
pop
in
cli
mov
loop
ror
or
shr
jbe
shl
jns
test
inc
test
push
scas
cmp
imul
push
out
enter
cmp
(bad)
dec
jns
cmp
int
push
push
jns
jp
dec
cmp
lea
(bad)
jne
fcom
jecxz
jl
cmp
lods
out
mov
xchg
push
sub
cs
out
sahf
test
xchg
cmp
or
mov
xor
and
push
inc
inc
pop
push
pop
mov
out
xlat
mov
sahf
popa
repnz
xor
lahf
add
stc
loop
push
sbb
lea
or
sub
jno
shl
dec
xchg
pop
fisubr
outs
sub
jmp
dec
cs
fcomp
xchg
cmp
mov
xchg
jo
cdq
pusha
into
inc
leave
fnstcw
adc
clc
push
adc
mov
jns
lea
dec
mov
(bad)
pop
fild
sbb
and
dec
in
cmps
inc
add
mov
dec
adc
xchg
xchg
xchg
lods
ret
push
adc
xor
popa
xchg
out
mov
xor
ss
sbb
inc
xor
sbb
fxam
popf
(bad)
sub
aas
or
inc
mov
aas
xchg
out
out
popa
pavgw
test
jp
inc
popf
pop
cmps
clc
xor
jge
jp
aas
inc
and
jmp
lods
retf
push
ss
ret
fstp
push
in
inc
lock
movs
scas
lods
movs
sub
jbe
jl
test
dec
push
add
mov
pusha
sbb
outs
pop
(bad)
scas
(bad)
stc
aas
bound
fwait
aas
xor
ss
inc
mov
pop
ret
fist
sbb
ret
sub
outs
shl
pop
sub
or
xor
xchg
inc
add
push
imul
cmp
add
sbb
test
ror
aas
sub
jnp
jno
or
pop
and
clc
adc
and
mov
xchg
in
mov
add
push
aas
or
daa
add
rol
push
jmp
inc
imul
mov
jnp
call
jne
fdivr
mov
test
mov
jl
fsubr
jmp
bound
loope
jle
and
mov
aam
jns
pushf
xchg
mov
(bad)
(bad)
pop
sbb
cmp
shr
pop
pop
ds
pop
pop
mov
jb
imul
sub
adc
mov
mov
mov
popa
mov
enter
mov
sbb
mov
lds
cmc
and
sahf
fcom
loope
(bad)
or
pop
xor
pop
mov
jmp
arpl
test
outs
cmp
addr16
or
loop
(bad)
xor
pop
cwde
out
gs
fmul
scas
ds
jae
mov
xor
jmp
pop
(bad)
cmp
pusha
cmp
repz
sbb
push
popa
add
test
iret
mov
mov
(bad)
mov
cmp
cmp
ds
icebp
out
inc
or
sbb
lea
call
mov
xor
fsub
sbb
sbb
fist
fstp
push
iret
ins
or
enter
and
mov
lahf
dec
outs
dec
fidivr
jae
add
push
dec
dec
push
sub
in
icebp
movd
mov
xacquire
out
rol
pop
mov
cld
test
cmp
push
leave
xor
add
dec
or
(bad)
push
in
sbb
dec
movs
add
outs
cmp
outs
pop
je
daa
pop
enter
loop
test
cmc
ss
clc
sbb
(bad)
sbb
jne
push
inc
cmp
sti
mov
mov
jno
push
sbb
push
sar
xchg
adc
mov
add
xchg
mov
dec
sub
retf
xor
daa
mov
(bad)
mov
cs
cmp
rcl
(bad)
xor
and
scas
xchg
dec
mov
scas
int
dec
pop
(bad)
cmp
pop
test
cmp
mov
div
into
or
xchg
or
cmp
mov
mov
mov
fwait
not
ds
lea
dec
out
xor
repz
add
sub
loop
and
push
sbb
je
adc
dec
out
es
cmp
and
push
pop
inc
and
ss
sbb
retf
add
shl
call
call
call
mov
icebp
fs
xchg
in
cmp
enter
push
out
mov
(bad)
pop
test
add
or
jmp
cmp
fnsave
aam
movs
test
je
mov
adc
stos
inc
loope
cmp
sub
pop
or
pop
push
mov
movs
mov
stos
or
rcr
sbb
push
sbb
inc
inc
xor
xor
div
(bad)
cmp
mov
in
inc
push
out
xor
adc
xchg
and
mov
mov
sar
jle
outs
xchg
inc
iret
or
stc
lods
es
retf
xor
ror
pop
(bad)
mov
inc
dec
push
cmovb
push
cs
cmp
xor
push
dec
out
pop
sub
ret
ins
mov
rcr
call
int
push
lods
adc
test
mov
pop
dec
test
sub
adc
mov
push
sbb
and
je
pop
push
scas
sti
mov
(bad)
mov
mov
mov
push
lock
iret
add
sbb
loope
mov
adc
add
jne
jl
sahf
and
test
lods
(bad)
dec
dec
push
sbb
mov
adc
sbb
fst
xchg
push
add
add
xor
aam
fst
ins
lahf
retf
arpl
and
gs
fwait
out
stc
in
inc
add
and
inc
into
mov
inc
cmp
ror
pop
dec
pop
pop
xchg
movs
mov
xchg
jmp
sbb
ret
adc
lods
fbstp
and
mov
and
mov
jp
(bad)
mov
push
xchg
lahf
in
or
xchg
popf
not
dec
xlat
sbb
mov
fimul
sub
xchg
xchg
cmc
ret
repz
pop
call
shl
lds
push
ss
mov
enter
pop
or
enter
pop
mov
aam
jbe
push
test
sbb
xchg
mov
xlat
bndstx
inc
(bad)
in
movs
sub
movs
je
cmps
(bad)
out
sbb
adc
add
mov
adc
pop
or
and
sbb
popf
fwait
xchg
cdq
push
call
aas
add
addr16
jns
mov
movs
clc
jb
or
not
xchg
clc
fild
push
mov
push
stos
jb
push
test
or
xor
fs
jno
fcom
and
mov
mov
mov
sbb
mov
pop
int
push
out
inc
adc
push
pop
or
and
mov
dec
popa
cmp
out
(bad)
jge
sub
in
pop
cmp
jo
push
icebp
rcr
mul
pop
and
loopne
cmc
jne
xchg
jnp
test
ins
inc
test
adc
sbb
and
cmp
imul
xor
idiv
or
dec
cmp
(bad)
xor
cmp
cld
(bad)
jle
push
push
jbe
push
sar
jns
sbb
(bad)
in
lea
xchg
fnstenv
sub
fidivr
iret
iret
jno
call
or
adc
add
test
mov
xchg
push
in
mov
jg
push
(bad)
sub
lock
cwde
and
pop
push
and
jb
sahf
pop
cmp
test
sub
xlat
cmp
adc
and
mov
push
inc
cmps
or
outs
sahf
aaa
pop
cmp
adc
mov
cwde
jae
jmp
pop
mov
inc
mov
fidiv
jge
inc
cmp
enter
inc
xor
push
std
daa
push
js
mov
adc
push
dec
xchg
cmps
adc
fdivp
popf
dec
sub
sti
inc
cmp
or
sahf
and
lahf
or
mov
int3
xor
cmp
adc
test
stos
mov
xchg
xor
cmp
add
sub
add
mov
out
dec
popa
test
fild
adc
outs
push
pop
xor
pop
sbb
mov
jae
(bad)
and
sbb
shr
sbb
test
mov
mov
inc
inc
test
xchg
sbb
mov
jp
sbb
es
call
into
mov
rcr
sub
shr
push
gs
inc
mov
out
js
clc
loop
pushf
xor
or
cmp
xor
in
xchg
into
aad
out
rcr
mov
xchg
mov
pop
and
mov
inc
pop
in
sub
fisub
push
out
or
push
dec
neg
xchg
mov
cwde
sbb
ret
(bad)
(bad)
aam
mov
mov
movs
sbb
add
outs
dec
icebp
in
lea
push
and
enter
jnp
and
loop
inc
int3
cmc
rcl
pop
mov
xor
xchg
sahf
je
cmps
dec
and
dec
cmp
push
jns
jnp
xor
(bad)
pop
in
in
fstp
dec
inc
cmp
into
jne
or
ret
xchg
mov
add
pop
mov
cs
dec
dec
lds
adc
mov
cmp
gs
test
xor
lds
(bad)
rcl
pop
iret
mov
lahf
push
addr16
test
js
xchg
mov
(bad)
retf
outs
mov
daa
push
retf
sbb
push
adc
xor
jmp
bnd
outs
xchg
mov
pop
cmp
std
pop
pop
mov
sbb
es
iret
mov
test
call
aas
push
or
(bad)
dec
mov
pop
sub
pop
loopne
lahf
jns
fbld
gs
cmp
repnz
mov
gs
add
stc
mov
cmp
leave
loope
mov
aas
mov
push
je
ret
jge
add
jo
ret
bound
cmps
mov
or
(bad)
into
push
xchg
mov
sub
mov
out
push
jnp
popa
cmp
icebp
adc
mov
xchg
sbb
mov
jno
mov
inc
sbb
out
test
or
faddp
pop
and
sti
dec
push
jmp
aas
cdq
scas
loope
into
xor
cmps
and
stos
xor
lds
in
sahf
pusha
jno
push
loop
data16
mov
xchg
dec
je
nop
fwait
test
pop
int
fcomp
mov
aas
mov
pop
fnstsw
and
and
mov
or
push
les
mov
dec
push
push
sub
js
add
(bad)
push
leave
push
ins
xlat
(bad)
std
xor
mov
jnp
in
cmp
(bad)
data16
push
mul
inc
pop
call
cmc
pushf
test
sbb
into
cli
jae
or
xchg
jecxz
jmp
test
mov
inc
lock
jns
dec
cs
jne
retf
int3
xchg
lahf
lods
lods
ucomiss
popa
pusha
sar
inc
sahf
nop
push
cdq
mov
sub
mov
jmp
out
dec
dec
jb
scas
shl
call
ret
mov
add
push
aad
rcr
sti
inc
fprem
dec
jnp
in
fnstcw
xor
add
sbb
dec
imul
lahf
out
add
aas
adc
add
push
inc
fnsave
adc
call
mov
into
loope
add
loopne
fidivr
rcr
or
and
rcr
mov
and
(bad)
add
mov
and
mov
adc
dec
lahf
clc
cmps
mov
push
popa
inc
aas
lahf
sahf
mov
pop
dec
out
jbe
les
sbb
aas
sti
sbb
js
cmp
stos
setp
loope
lea
ss
inc
dec
(bad)
push
mov
jbe
ficomp
fs
xlat
xor
mov
dec
(bad)
xor
arpl
shl
or
aam
in
ret
adc
fnstenv
xchg
lea
cmp
dec
and
call
scas
xlat
or
lods
mov
mov
mov
ins
cmp
scas
or
scas
pop
push
mov
mov
sbb
sbb
rcl
pop
fcmovnbe
loopne
inc
add
call
(bad)
in
mov
scas
mov
mov
xor
push
dec
outs
stc
icebp
fwait
sub
std
mov
mov
jg
mul
mov
push
sahf
cdq
lods
in
outs
sub
mov
(bad)
jecxz
adc
rcl
ror
push
pop
xor
ja
inc
outs
pop
jno
leave
xlat
or
in
jg
adc
add
dec
pop
sbb
dec
pop
add
sub
icebp
push
dec
mov
xchg
aas
and
dec
jge
cmp
ja
retf
inc
mov
pop
(bad)
popa
xchg
fcom
cmc
popa
push
(bad)
sub
mov
jo
mov
leave
cmp
sub
mov
jmp
adc
adc
push
sbb
sub
cdq
rcl
jb
scas
and
cdq
push
shr
and
xor
cmp
mov
push
fidiv
jl
adc
std
gs
and
(bad)
sbb
mov
ret
imul
loopne
sbb
mov
xchg
jg
mov
cmp
add
mov
xchg
push
loop
pop
xchg
repnz
mov
mov
sub
sub
mov
or
xchg
in
mov
call
xor
inc
mov
sbb
cmp
pusha
dec
loop
cmp
mov
stos
jmp
ds
xchg
cli
mov
and
xor
mov
or
pop
loop
stos
sbb
xchg
in
push
push
repz
std
mov
dec
and
imul
mov
xchg
jmp
test
(bad)
cmp
adc
(bad)
repz
or
mov
mul
mov
fist
xchg
inc
mov
lds
cmps
dec
dec
mov
add
clc
sbb
aam
sbb
add
pop
inc
loop
fstp
out
mov
scas
sbb
push
mov
push
sub
jbe
dec
push
in
mov
jnp
outs
sti
cmp
popf
ret
lahf
call
mov
scas
fst
sbb
adc
and
add
scas
shl
add
jns
inc
stos
cmp
push
ds
shr
int
pop
popa
jns
aaa
sbb
scas
push
mov
jnp
sbb
imul
int
jne
mov
pop
test
and
jmp
xchg
leave
mov
push
dec
inc
dec
mov
cwde
test
or
sti
in
dec
mov
cmp
hlt
out
es
sbb
jmp
into
xor
xor
push
inc
addr16
fldenv
sbb
add
cmp
push
adc
push
mov
lds
scas
ins
mov
enter
pop
jmp
adc
push
inc
nop
addr16
out
popf
cmp
pop
shr
clc
jno
push
(bad)
and
add
mov
mov
ja
mov
stos
add
sbb
jg
inc
xchg
mov
ins
sbb
(bad)
stc
test
inc
loope
add
imul
outs
pop
xchg
pop
das
(bad)
(bad)
jnp
pop
cli
mov
scas
loop
or
mov
cmp
loopne
mov
out
inc
mov
cli
pusha
jb
in
jo
xor
fistp
mov
inc
inc
cmp
push
je
adc
sahf
push
loope
jl
mov
mov
loope
cdq
inc
je
popf
mov
cs
in
fnstcw
shl
sub
shl
jo
sub
mov
(bad)
cmp
or
jge
jnp
sar
xchg
cmp
popf
mov
or
inc
adc
pop
sbb
sti
mov
cli
cdq
jmp
or
mov
aas
or
sti
retf
movs
or
push
push
mov
les
inc
pop
jnp
xor
sbb
adc
push
(bad)
icebp
add
ja
pop
loope
ret
gs
ret
push
lock
jl
dec
iret
jg
mov
or
cmps
popf
(bad)
pop
inc
data16
jmp
das
dec
or
(bad)
fisub
leave
inc
scas
sbb
cmp
(bad)
daa
xor
aas
iret
pop
bound
xchg
ficom
lock
pop
std
xor
inc
dec
icebp
lahf
scas
aad
pop
lock
shr
ficomp
mov
sbb
gs
scas
sub
and
cmc
pop
lahf
push
inc
imul
jne
xor
xor
sbb
and
pop
mov
xchg
mov
hlt
jl
ins
xchg
(bad)
mov
cmps
mov
enter
popf
push
mov
outs
movs
inc
inc
neg
and
ja
mov
movs
in
nop
xlat
hlt
vandnps
inc
inc
loop
mov
sbb
sti
ss
cmc
sbb
aas
imul
fistp
jb
les
in
sbb
jns
sub
nop
fstp
push
cmp
cmp
mov
adc
and
std
push
cmp
retf
out
push
movs
inc
sub
fisubr
cld
or
xor
push
sub
or
and
aad
xor
dec
mov
ret
lock
and
repz
dec
pop
push
int
pop
repnz
xor
mov
mov
inc
rcl
push
repz
pop
jmp
daa
gs
movs
lahf
popa
std
mov
adc
push
mov
dec
jg
ret
xchg
jbe
popa
cwde
or
mov
fs
jno
(bad)
js
pushf
shl
and
add
popa
jnp
je
test
loope
aaa
enter
stc
push
xchg
rcl
in
mov
sbb
xor
es
in
mov
movs
xchg
jnp
pop
dec
pop
dec
dec
imul
ret
out
sahf
jp
sbb
outs
dec
jo
push
dec
add
sti
cmps
pop
xchg
jnp
sub
add
cmc
sar
cmp
mov
mov
aad
sbb
imul
jmp
ss
pop
in
data16
fmul
sbb
add
int
mov
out
inc
xchg
(bad)
pushf
adc
movs
jb
or
push
push
clc
stos
into
cmps
cmp
nop
je
push
mov
fwait
and
stos
popf
out
repnz
jae
repnz
fldenv
lahf
fdiv
mov
jae
pop
cmps
xchg
imul
xchg
in
arpl
mov
sti
xchg
push
loope
fdivr
pop
or
and
dec
mov
push
sub
mov
fistp
pop
push
dec
lock
jp
(bad)
in
pop
add
mov
cli
inc
jmp
dec
add
xor
xchg
push
cmps
pop
in
daa
sub
jnp
popa
repz
and
retf
das
idiv
cmp
mov
fcom
out
aad
push
jne
jmp
adc
outs
cmps
xchg
xchg
pop
es
shr
mov
mov
cwde
push
loopne
in
mov
lds
inc
imul
sbb
xchg
in
movs
lods
cld
add
call
test
adc
xchg
mov
add
xchg
and
(bad)
cmp
packsswb
mov
mov
sti
mov
lods
mov
lds
dec
dec
jno
(bad)
movs
scas
dec
jae
loopne
es
outs
mov
jp
into
out
cmp
std
jns
adc
rcr
cmps
jle
icebp
add
xchg
neg
in
mov
jmp
imul
test
xor
loope
sub
or
dec
jmp
push
rcl
and
sbb
mov
xor
push
mov
bnd
nop
(bad)
ret
cmp
retf
iret
mov
fidivr
cmp
cmpxchg
push
test
xor
les
mov
sbb
xor
fistp
sbb
and
and
rcl
enter
push
hlt
inc
jecxz
std
and
jne
dec
dec
jle
out
out
movs
pop
and
out
and
retf
sub
call
fistp
add
fisub
mov
adc
push
dec
and
and
ins
(bad)
(bad)
(bad)
add
sub
loopne
aas
adc
(bad)
mov
pop
outs
or
mov
or
push
aaa
dec
cwde
or
xor
mov
mov
cmp
inc
int3
sub
jae
ret
pop
xor
sub
push
mov
add
push
inc
icebp
lods
fwait
cmp
jg
xor
imul
and
cld
sub
sbb
call
mov
jno
iret
or
adc
mov
fwait
int3
push
(bad)
cwde
adc
stos
imul
cmp
mov
fcmovne
arpl
mov
jecxz
mov
jae
mov
pop
call
cmp
fwait
pop
pop
fistp
gs
pop
nop
inc
loope
pusha
jne
cmp
xor
ds
es
dec
jl
mov
jnp
pop
jae
arpl
mov
sbb
es
imul
jae
sub
xchg
xchg
ins
js
cmp
jne
pop
mov
iret
jmp
daa
mov
cld
sbb
sahf
jle
push
pop
popf
cmp
icebp
adc
scas
loop
shl
stc
scas
ror
jmp
inc
cmp
pop
imul
and
mov
out
(bad)
mov
ja
jge
mov
sbb
nop
xor
jae
pop
dec
ds
sar
jo
cmp
lock
mov
sub
(bad)
dec
xlat
pop
(bad)
sti
shl
jne
dec
(bad)
cli
int
bound
call
mov
pusha
mov
std
repz
pusha
rol
sbb
gs
pop
lea
xor
stos
shr
adc
mov
fcom
push
aas
iret
push
lods
outs
and
imul
mov
and
mov
out
fbstp
dec
pop
inc
cmp
push
mov
jne
idiv
outs
cmp
fwait
les
pop
mov
and
shl
push
clc
sub
jae
imul
sbb
pop
push
stos
imul
jne
mov
fwait
add
ins
loope
dec
dec
inc
add
dec
pop
inc
add
ficom
cmp
cdq
mov
loopne
repnz
inc
xchg
or
mov
push
pop
dec
loopne
inc
jno
ds
sbb
cmps
stos
jl
pop
mov
ins
lods
scas
sub
xchg
repz
fadd
aad
lahf
cmp
(bad)
xor
in
mov
sub
push
scas
xchg
sub
inc
cli
add
es
jg
mov
mov
out
(bad)
pop
popa
cmp
fistp
mov
push
xor
in
xlat
hlt
cmp
mov
adc
jne
cmps
loop
and
loope
out
mov
sub
out
xchg
pop
lds
repz
add
popa
in
daa
xor
fucomip
rcl
inc
mov
call
xchg
test
or
jno
ins
pop
popa
out
movs
je
fadd
nop
xor
test
jp
bound
test
scas
test
dec
outs
mov
imul
push
jns
fwait
shl
shl
or
ret
cmp
push
repnz
add
(bad)
push
(bad)
cdq
inc
or
or
dec
pusha
dec
popa
push
add
pop
retf
ins
mov
in
xor
ret
dec
fisttp
mov
call
scas
jae
ret
pop
cmps
sar
cmc
mov
pop
dec
iret
mov
push
jmp
js
repz
repz
add
push
icebp
xchg
int
pop
lods
data16
fnstcw
out
inc
inc
mov
inc
push
dec
jno
repz
jmp
cmp
jmp
scas
jl
outs
mov
inc
sbb
inc
fdiv
sub
shl
sub
xor
aam
mov
xchg
outs
push
hlt
sub
cs
push
or
or
cmps
and
push
sub
movs
and
mov
push
popf
addr16
ror
cmp
(bad)
jmp
push
jb
cmp
add
or
pop
adc
dec
nop
out
retf
jp
add
cmp
add
(bad)
push
mov
jmp
in
inc
(bad)
imul
(bad)
push
repz
adc
dec
aam
add
mov
add
retf
in
das
jnp
push
sar
cwde
ins
shl
mov
lods
mov
bnd
adc
push
sbb
mov
mov
loopne
das
lds
call
leave
push
js
popa
js
int3
cmps
adc
jmp
sbb
movs
pop
fdivr
mov
fadd
lock
xor
jno
xor
stos
popf
ja
adc
inc
ss
ret
shl
daa
pop
outs
xchg
gs
sbb
loope
add
jne
stos
sti
push
ja
push
adc
scas
ja
sbb
mov
mov
cmc
dec
shr
jg
jb
mov
out
mov
test
inc
sub
cdq
cmc
add
les
sub
stc
call
xchg
mov
jl
jnp
enter
test
(bad)
repz
int
xor
push
sbb
es
cli
sar
mov
sar
pop
rcl
stos
popf
push
dec
or
adc
mov
(bad)
and
gs
shl
pop
xchg
mov
dec
xchg
in
mov
dec
das
call
lods
cmps
adc
sub
pop
popf
je
inc
push
mov
xchg
inc
inc
mov
imul
mov
mov
imul
scas
dec
in
test
jmp
retf
retf
cmc
and
add
dec
jecxz
pop
xor
cmp
mov
dec
xor
or
ret
jno
mov
lea
inc
imul
call
mov
sti
pop
or
out
xchg
out
and
call
pop
clc
jb
cmp
adc
mov
pushf
mov
scas
mov
loop
xchg
(bad)
adc
jnp
test
(bad)
into
fiadd
rcl
fincstp
cmp
pop
jne
jge
mov
das
sbb
es
ja
mov
jb
js
ins
repnz
mov
stos
inc
mov
les
fs
or
rcr
dec
mov
jle
fnsave
jns
fwait
(bad)
(bad)
ds
scas
fcmovnbe
adc
fadd
arpl
mov
jns
push
repnz
clc
scas
mov
cmp
gs
jle
dec
adc
xor
inc
fsubr
pop
pushf
xchg
xchg
out
ret
push
mov
fcomp
ja
js
or
aas
bound
cmc
mov
cmp
icebp
mov
mov
pop
out
mov
lods
and
movs
sub
inc
mov
pop
sub
jecxz
fwait
mov
pop
stos
fdivr
outs
cmp
lds
sub
or
mov
jne
inc
or
dec
pop
test
add
fwait
add
scas
(bad)
xor
push
xchg
jecxz
adc
inc
jmp
pop
xor
loop
push
cld
xor
leave
mov
xchg
mov
cmps
les
test
fild
test
and
xor
scas
mov
and
aas
xchg
xchg
cmps
xlat
mov
inc
xor
mov
cmc
aad
ja
into
cmp
fdivr
out
ffreep
scas
jmp
push
mov
dec
lods
inc
shl
clc
imul
adc
jp
gs
icebp
stos
xor
adc
loope
push
jb
or
stos
or
loop
fs
and
stos
call
popf
xchg
xlat
stos
mov
add
(bad)
lods
jp
xchg
movs
popa
stos
ds
push
add
pop
ds
add
stos
pop
data16
push
pushf
dec
adc
hlt
mov
outs
and
(bad)
xor
sbb
stos
mov
xchg
imul
or
add
shl
sbb
mov
pop
stos
jg
add
dec
jle
cmp
add
(bad)
into
in
fwait
ja
mov
mov
test
cld
mov
cs
jecxz
inc
imul
mov
pop
push
mov
aad
or
xchg
or
pushf
jecxz
int
xchg
jecxz
inc
push
or
mov
into
add
int3
enter
lea
and
xchg
dec
jle
loopne
pop
stos
jl
or
dec
push
inc
xchg
das
mov
fsub
call
lea
xchg
inc
cmp
and
sub
xchg
popf
sub
jbe
fucomi
mov
retf
jg
xchg
cmp
arpl
and
outs
xchg
cmp
fistp
inc
mov
push
neg
xor
xchg
push
jp
and
stc
mov
not
sti
ds
jmp
enter
int3
ret
mov
in
mov
jp
dec
cmc
jnp
sub
outs
pop
movs
out
inc
fild
sbb
inc
cmp
clc
mov
scas
push
xchg
or
ja
sub
test
xchg
sub
in
pop
add
jno
imul
das
stos
(bad)
jbe
cmps
sub
xor
aad
push
push
mov
in
sub
mov
scas
aad
je
das
jge
sbb
loopne
test
sub
outs
aas
adc
and
jo
gs
add
mov
sub
out
dec
push
or
dec
lds
cmps
and
mov
xlat
popf
pop
mov
jp
or
add
addr16
test
fcomi
fnstenv
ss
int3
push
lock
outs
mov
mov
push
adc
dec
std
ret
cmp
xchg
div
jno
jle
push
fbstp
adc
test
scas
icebp
mov
dec
call
mov
mov
push
daa
fs
pusha
xor
repnz
retf
cld
pushf
aad
fcomi
outs
shl
or
iret
aam
mov
jne
stos
and
sbb
sbb
inc
popf
cmps
xor
jae
jle
push
cmp
xchg
fs
adc
push
adc
lock
sub
xor
push
pop
pop
pop
adc
jg
dec
adc
rcl
xchg
cmp
sbb
cmc
neg
imul
jl
push
outs
(bad)
outs
mov
outs
fidivr
pusha
dec
outs
dec
cmp
jge
bound
loopne
jp
mov
and
sub
fst
push
sbb
gs
lea
jbe
(bad)
fidiv
mov
mov
imul
and
fld
cmps
nop
icebp
add
mov
sbb
ins
pop
xchg
cld
fidiv
cmp
aam
adc
sub
fcom
arpl
push
jp
(bad)
push
mov
movs
push
outs
add
rcl
aam
cwde
xor
ficomp
inc
inc
call
jmp
ficomp
mov
stc
aam
jg
dec
cmp
mov
je
ret
or
sbb
lds
aad
int
add
mov
or
aas
dec
das
cmp
jns
arpl
inc
popa
dec
aad
mov
pop
ins
push
out
aad
push
pushf
frstor
sbb
push
fist
or
jp
xchg
push
(bad)
jb
sbb
mov
adc
sbb
mul
in
clc
daa
pop
lea
fisubr
mov
out
mov
pop
imul
jecxz
mov
fs
push
jle
leave
xchg
gs
jmp
pop
or
push
xor
pop
mov
pop
jl
jmp
shl
xor
popa
inc
scas
or
iret
fild
lods
int
dec
cmps
push
or
add
int3
jecxz
cmp
xchg
test
stc
sbb
in
or
(bad)
sub
fcom
mov
aas
mov
daa
daa
push
repnz
mov
fcom
retf
es
cmp
push
aad
mov
cs
sub
pop
jae
mov
xchg
and
sbb
fwait
int3
inc
mov
loope
lods
aad
fcmovnbe
jo
scas
cmp
fcomp
scas
scas
pop
(bad)
call
out
int3
aaa
loope
lods
test
and
sti
popf
lahf
or
fnstcw
(bad)
push
ja
xchg
in
mov
ficomp
add
jmp
jp
aas
outs
daa
sbb
xor
or
mov
sub
enter
mov
sub
adc
mov
(bad)
cli
inc
push
test
jne
(bad)
cmp
pop
out
and
sbb
pop
fnstenv
push
dec
mov
adc
nop
test
loope
push
sbb
int
aad
mov
js
dec
bound
jne
inc
scas
push
pop
fadd
test
cmp
push
push
pusha
inc
adc
inc
dec
pusha
imul
(bad)
outs
xor
fsub
in
(bad)
mov
jmp
add
xchg
popf
sub
cmps
retf
jo
(bad)
pop
dec
sub
cwde
push
jb
in
sar
cdq
jne
xor
test
and
dec
pop
or
adc
call
xchg
scas
pusha
add
adc
ins
in
xor
ss
or
or
stc
std
and
(bad)
shl
push
lock
sbb
xor
icebp
call
call
mov
ds
(bad)
adc
mov
outs
cmp
(bad)
xchg
sbb
les
push
ret
ds
sbb
adc
inc
es
and
add
pop
ins
dec
jo
xlat
mov
ret
inc
and
shl
jmp
push
in
jne
pop
inc
add
xor
mov
push
mov
mov
addr16
iret
mov
leave
ret
mov
test
mov
jp
fisttp
mov
mov
and
push
rcr
mov
ror
jno
push
push
push
mov
mov
les
cdq
mov
mov
out
mov
mov
mov
mov
in
mov
stos
xor
adc
nop
mov
dec
push
cmps
inc
fldenv
dec
fcomp
fcmove
pop
sub
test
inc
adc
popf
dec
out
(bad)
jno
dec
push
xchg
pop
pop
pop
pop
add
mov
scas
imul
bnd
gs
cdq
mov
adc
xor
sub
add
inc
jns
adc
push
xor
fsubr
jae
cld
(bad)
sub
addr16
jg
sbb
pop
enter
push
inc
inc
cmp
enter
inc
mov
mov
out
pop
test
out
(bad)
popf
push
push
paddw
imul
rcl
or
jge
movs
pusha
and
pushf
loope
cwde
sub
push
push
add
out
repnz
(bad)
popf
pop
dec
pop
repz
adc
scas
dec
push
hlt
sbb
and
jecxz
stos
sub
int3
mov
mov
cld
xchg
test
in
sub
inc
adc
push
fisttp
sub
xchg
loop
or
mov
mov
push
cmc
xor
add
hlt
movs
jg
xchg
jecxz
cli
jmp
jb
jmp
aas
sbb
lock
cmp
es
cli
xchg
and
sub
and
adc
cwde
sbb
stc
push
call
stc
mov
das
mov
pop
hlt
cmovo
mov
aam
mov
push
enter
adc
mov
inc
sbb
cmp
cmp
out
xchg
mov
lock
mov
and
(bad)
aam
ret
mov
push
xchg
or
xor
cmp
mov
ins
hlt
mov
popf
call
jne
sahf
jno
loopne
dec
daa
sub
in
dec
loop
mov
push
inc
mov
dec
hlt
sbb
mov
aad
add
push
gs
push
xchg
xor
scas
inc
push
jg
adc
dec
xor
cli
cmc
out
lods
mov
push
cs
adc
dec
js
sbb
dec
daa
or
popf
or
ja
pop
jl
adc
in
pusha
out
xor
xor
mov
xchg
outs
lahf
push
retf
jno
push
and
mov
xchg
mov
int
(bad)
out
popa
rcl
rol
aad
cmc
in
jge
(bad)
call
add
and
pusha
jnp
lods
or
xchg
jle
rol
fwait
in
sub
leave
add
inc
fdiv
les
in
cmp
or
pusha
jle
les
dec
cld
inc
dec
fist
pop
rcr
inc
stos
xchg
lds
aam
or
and
cwde
or
cmps
xchg
(bad)
push
imul
add
inc
ins
pushf
hlt
faddp
xlat
push
rcr
jno
icebp
test
out
cmps
mov
sub
imul
pop
jg
clc
dec
cli
les
popf
pop
and
push
lock
or
cli
fmul
out
rol
cmc
in
cmp
stos
pop
js
mov
call
mov
out
push
jnp
mov
(bad)
dec
cwde
outs
ret
mov
ja
sbb
xlat
sub
jmp
dec
xchg
add
ja
shl
cmp
fs
std
jae
pop
jmp
xchg
mov
cmp
adc
mov
xchg
cs
dec
imul
jno
call
inc
pop
dec
cmp
inc
mov
ins
or
lods
xchg
cmp
push
jns
sub
dec
push
mov
mov
mov
leave
mov
repz
or
ja
mov
clc
jecxz
mov
arpl
sbb
inc
cdq
scas
push
adc
dec
(bad)
lahf
cmp
cli
lds
pop
jae
dec
dec
in
popa
into
retf
aad
fisub
and
iret
fst
in
pop
xor
ror
push
mov
inc
dec
inc
repnz
lea
add
xor
stc
jge
test
mov
pop
std
fadd
(bad)
add
push
jbe
add
jmp
sti
inc
ror
jg
sub
cmp
jns
das
add
iret
data16
lock
mov
add
jno
jne
loop
lods
in
sbb
add
fnsave
imul
add
scas
dec
pop
jb
push
outs
loope
adc
jmp
repnz
add
fld
pop
das
or
add
xchg
fbstp
jns
mov
sub
cmp
test
push
dec
inc
sbb
push
outs
xor
or
outs
sub
(bad)
and
add
imul
add
push
pop
scas
call
leave
xchg
jl
inc
mov
adc
nop
cs
jl
cwde
fst
jne
enter
gs
sbb
xor
inc
data16
adc
retf
jle
pushf
or
or
xchg
test
in
sbb
fist
rol
jb
(bad)
mov
jl
sub
popa
lods
pop
movs
test
sbb
or
repnz
(bad)
rcl
adc
dec
mov
xchg
mov
lods
pop
push
pusha
lds
dec
(bad)
push
mov
pop
outs
pop
dec
loopne
inc
and
jae
jmp
jbe
xlat
iret
sbb
inc
xchg
stos
aaa
mov
sti
in
push
sub
fild
int3
fnstenv
test
retf
push
dec
inc
rcl
dec
mov
mov
pop
aad
outs
hlt
imul
int
imul
add
sar
sub
sbb
pop
inc
sub
aad
or
add
pop
enter
shr
sub
xor
outs
ja
int3
movs
xor
movsx
ja
scas
rcl
mov
fst
pop
stos
pop
ret
aaa
mov
pop
inc
mov
fistp
pusha
dec
push
cmp
cdq
cmp
repnz
icebp
callw
outs
xor
pop
aam
xor
and
pop
or
ja
or
mov
(bad)
fist
rcl
(bad)
push
ret
and
sub
(bad)
pop
and
call
mov
mov
mov
leave
jbe
and
dec
lea
push
adc
call
xchg
aas
enter
cmp
je
xchg
pop
call
dec
enter
stos
xchg
pop
(bad)
cdq
mov
fcom
sbb
cld
jbe
and
retf
arpl
pop
jae
push
mov
sub
outs
out
jge
inc
xchg
(bad)
push
hlt
sbb
into
imul
test
out
int3
fld
hlt
fstp
adc
add
or
sbb
add
mov
xor
jnp
sbb
mov
test
xchg
shl
xchg
popf
xlat
ins
(bad)
clc
sbb
mov
test
xchg
inc
iret
out
adc
sub
push
dec
mov
jp
pop
loope
dec
xchg
(bad)
fsubr
out
jb
push
add
popf
inc
xchg
inc
mov
outs
data16
mov
mov
out
jo
aam
imul
jne
xor
cs
sahf
(bad)
shl
sbb
inc
push
loopne
xor
inc
push
pop
jp
jns
mov
jne
ret
ds
add
fwait
add
aad
inc
shr
xor
xor
sub
cwde
cmp
repz
jp
xchg
add
and
sti
pop
jae
jae
jae
out
jecxz
cli
les
or
push
div
jp
sar
repnz
cs
sahf
(bad)
sti
sub
loop
dec
fdivp
inc
rcl
xchg
mov
pusha
push
mov
(bad)
jmp
mov
call
add
sub
clc
mov
pop
daa
push
and
push
outs
dec
push
popf
jo
retw
jb
adc
in
out
adc
push
sub
pop
js
icebp
push
lock
mov
aaa
dec
dec
out
call
dec
xor
sbb
imul
push
test
sti
xchg
out
shr
xchg
push
pop
in
jge
dec
push
jno
scas
cdq
and
pop
aam
jbe
ja
jmp
xlat
push
sbb
and
push
fwait
push
(bad)
or
push
sar
cmp
cmp
push
enter
das
rcr
and
dec
ins
xchg
pop
mov
push
jns
sbb
inc
outs
jno
inc
ins
xor
or
pop
adc
mov
shl
sbb
xchg
pop
adc
pop
inc
ficomp
mov
jle
ss
std
fdiv
test
sbb
jns
popa
idiv
mov
(bad)
jne
rcl
pop
aaa
out
sub
or
inc
or
pop
push
xchg
mov
and
in
aaa
mov
icebp
add
mov
push
shl
jo
test
inc
ret
(bad)
jne
ror
inc
sub
out
dec
fild
inc
jne
add
cmp
or
inc
push
xchg
pop
hlt
cld
clc
call
pop
xchg
stos
js
repnz
mov
mov
pop
dec
(bad)
add
mov
ret
xor
dec
cmp
aam
mov
mov
sbb
pop
push
cmp
xor
mov
fild
adc
pop
fiadd
into
sbb
popf
dec
adc
push
push
mov
sbb
sub
xchg
mov
mov
sbb
ins
mov
mov
mov
xchg
jp
in
sbb
cmp
daa
sbb
jae
dec
or
cdq
push
retf
adc
call
pop
ds
pinsrw
pop
add
cmp
loopne
dec
call
rol
sub
pop
out
push
imul
aaa
retf
call
cmc
fcomp
retf
pushf
jb
rol
rcpps
mov
pop
xlat
sub
das
lock
lock
xchg
inc
push
dec
xchg
ret
add
push
inc
call
inc
hlt
push
addr16
cmp
cli
jecxz
in
jno
aas
jl
jns
sti
in
jno
xchg
jle
sub
push
adc
adc
and
sub
dec
mov
mov
cs
repz
or
inc
(bad)
clc
and
fdivr
(bad)
adc
sub
cld
call
adc
push
add
mov
mov
mov
push
shr
out
test
and
xchg
int
xchg
stos
xor
dec
inc
xor
(bad)
xchg
pushf
idiv
jge
mov
movs
std
adc
adc
or
sbb
loopne
mov
pop
xchg
sub
jle
aaa
xchg
loop
jmp
xchg
dec
jle
mov
lea
gs
lock
cmp
jecxz
pop
lock
stc
cmp
or
push
inc
inc
pop
mov
push
int
es
repnz
or
jmp
int3
ins
mov
mov
sbb
mov
mov
mov
xor
imul
(bad)
xcrypt-ctr
cmps
sbb
jg
mov
jmp
mov
cmp
adc
lahf
xlat
loope
xchg
add
mov
push
repz
mov
jb
xchg
inc
popa
fild
fmul
test
mov
(bad)
xchg
rsqrtps
and
mov
cdq
fwait
fwait
xchg
jge
jae
jg
not
scas
push
inc
sub
fisubr
loop
dec
ficom
(bad)
jmp
gs
and
push
adc
bound
mov
dec
push
inc
js
outs
jle
sbb
(bad)
cli
jb
jb
out
inc
jle
add
movs
in
and
cmp
cmps
outs
rcr
jle
inc
call
clc
jo
or
scas
ja
xor
push
sub
xchg
popa
inc
lods
sbb
int3
ret
imul
das
or
dec
or
ins
fidiv
(bad)
pusha
in
arpl
xchg
pop
fcmovnb
adc
rcr
out
jecxz
imul
ret
mov
lea
pop
loopne
adc
jno
(bad)
xchg
outs
loope
mov
(bad)
pop
or
xor
or
repz
cmc
xor
mov
scas
mov
cmp
mov
leave
outs
mov
mov
gs
cmp
fidiv
or
mov
push
dec
hlt
mov
add
rcl
lods
fisttp
push
mov
daa
fadd
mov
lock
aas
pop
cmp
jns
pop
sub
push
and
cli
jge
in
sub
test
(bad)
cli
retf
dec
xchg
mov
scas
xchg
xor
(bad)
fcom
nop
mov
fisttp
xor
pop
add
push
mov
sub
mov
test
inc
mov
jge
fdiv
mov
jb
push
inc
jecxz
mov
pushf
adc
xlat
xor
div
jns
jmp
push
mov
sar
mov
jmp
lods
cmps
or
ins
sbb
(bad)
fidivr
xchg
adc
ja
xor
arpl
cli
ficomp
xor
jmp
fidiv
es
(bad)
mov
cmp
retf
push
mov
mov
je
out
sbb
cmc
dec
pushf
cmp
pop
push
mov
in
cmp
sub
xor
jecxz
cli
push
imul
fsubr
xchg
mov
push
adc
mov
call
cwde
and
nop
pop
cmp
imul
out
push
cdq
add
dec
push
outs
nop
fadd
(bad)
jecxz
push
fsub
test
(bad)
push
rcl
jno
and
pop
sub
repnz
jp
mov
shr
das
ss
jg
sub
dec
and
in
jnp
ret
aam
add
or
jmp
and
rol
mov
cs
pop
rcl
cvtps2pd
shl
fbld
sub
imul
sub
das
jne
dec
jno
ins
lds
fisub
push
gs
dec
inc
ins
jnp
mov
cmc
nop
popf
pop
sub
nop
xchg
or
movs
int3
rol
movs
mov
(bad)
mov
push
leave
out
sbb
sub
lods
pop
pop
popf
push
dec
scas
push
push
jl
std
or
mov
call
div
adc
or
add
int
inc
dec
xor
sbb
xor
mov
addr16
fucomp
xchg
and
icebp
retf
(bad)
mov
aad
dec
or
add
add
or
(bad)
imul
ror
or
fimul
fwait
retf
add
loopne
push
cld
not
(bad)
cmp
ret
xchg
movs
arpl
mov
rol
xchg
push
pop
sub
pop
jne
sbb
int
loope
rol
icebp
cld
pop
cmp
add
or
and
retf
aam
test
retf
sub
test
out
aad
inc
out
mov
adc
xor
in
outs
and
mov
pusha
ins
arpl
xor
ja
xor
jl
jo
sub
mov
sbb
out
push
push
aam
adc
imul
mov
and
test
sbb
push
mov
cmp
xchg
cld
jmp
ds
cmp
repz
pop
loopne
sub
dec
xchg
jmp
jmp
pop
cmp
sub
or
or
pop
cmps
jns
mov
pop
pop
sub
pop
pop
popf
xchg
dec
push
movs
loop
int3
pop
cli
pop
cmp
xlat
inc
in
xchg
out
jle
rcl
in
pop
add
dec
(bad)
retf
add
or
les
inc
stos
dec
test
test
je
stos
cli
adc
lods
out
outs
loope
dec
and
push
mov
mov
push
loop
and
stc
pusha
xchg
mov
stc
ds
inc
mov
jge
dec
jmp
out
out
sub
imul
inc
pop
ds
cli
mov
mov
std
pop
xchg
cmp
fcom
sub
mov
das
test
scas
xor
jge
adc
mov
clc
stc
pop
fwait
syscall
(bad)
loop
aas
int
xchg
add
cwde
mov
jb
sbb
jg
pop
jmp
add
push
je
out
cmps
dec
sub
outs
push
mov
xor
je
cli
jne
dec
dec
xor
xchg
sbb
pop
outs
arpl
js
inc
call
dec
xor
loopne
jle
xlat
sbb
adc
mov
xchg
jl
pop
push
xchg
pop
mov
bound
cmp
mov
fnstcw
add
mov
jne
out
lahf
adc
clc
loop
rol
jne
or
in
ins
sahf
fs
dec
cld
adc
popa
jb
cmps
mov
and
xlat
jecxz
loopne
repnz
adc
and
inc
dec
in
mov
sbb
push
jp
adc
mov
xlat
sub
adc
sbb
gs
imul
or
shl
xchg
call
and
aad
leave
lock
jo
shr
cmp
data16
xchg
pushf
test
test
dec
mov
add
fld
pushf
dec
push
and
or
bound
sti
dec
and
mov
mov
ds
outs
inc
out
xor
xchg
inc
mov
sar
imul
or
fstp
inc
pop
addr16
jle
fs
fstp
mov
rcr
ficomp
cmp
shl
jg
popf
push
out
sbb
mov
push
or
into
jbe
mov
jno
push
add
arpl
popf
stos
mov
or
pusha
xchg
stos
ins
cmp
(bad)
enter
mov
cmp
adc
inc
daa
bnd
out
lods
iret
push
aaa
jbe
bound
xor
xchg
call
push
adc
dec
bound
push
adc
call
test
pop
and
jecxz
push
cld
(bad)
test
or
mov
hlt
jg
stos
(bad)
push
cmp
test
vpaddusb
je
jnp
(bad)
pop
mov
shl
jae
shl
iret
mov
push
lock
loopne
xchg
ret
pusha
ret
jecxz
push
iret
out
sahf
fisubr
movs
leave
ja
pop
scas
add
mov
call
and
mov
jp
inc
addr16
cmp
pop
test
sbb
push
xchg
cmp
out
add
lahf
loop
jge
xor
adc
push
fidivr
xchg
daa
imul
popf
add
mov
mov
add
xchg
pop
adc
xor
inc
int
or
ret
stc
scas
pop
ds
movs
mov
xor
fld
pop
iret
and
jecxz
ins
movs
cmps
ja
push
aam
fs
rcl
jns
jne
rol
adc
xlat
mov
adc
icebp
outs
push
dec
movs
pushf
or
adc
xor
pop
push
call
or
jae
jl
pop
call
cli
rcl
push
mov
fnstsw
push
push
push
jecxz
out
clc
sbb
mov
in
jbe
xchg
mov
mov
mov
std
pop
ret
dec
pop
stos
inc
(bad)
mov
pop
imul
clc
lods
imul
cmp
enter
push
mov
jmp
add
jo
sbb
add
and
lea
bound
cmp
add
int3
in
(bad)
mov
jb
ficom
cmp
test
enter
(bad)
push
sar
xchg
scas
repz
sbb
mov
inc
pop
xchg
retf
mov
das
sti
sbb
cs
cmps
(bad)
cwde
mov
lea
xchg
scas
jo
cmp
mov
popf
mov
outs
add
shl
pop
xchg
out
push
pop
add
not
pushf
mov
and
aam
sub
jae
xor
stc
pop
lock
or
push
cmps
in
push
and
jb
jnp
pop
ins
cmp
inc
jb
in
dec
ss
push
jmp
jne
jecxz
jmp
mov
mov
ss
data16
jo
inc
inc
retf
pop
fstp
(bad)
mov
cld
mov
jmp
mov
mov
aad
ins
out
mov
jmp
pop
jecxz
jne
xor
adc
push
fild
cmp
mov
xchg
in
cdq
cmp
nop
mov
lods
imul
stc
xchg
ja
mov
ss
cli
popa
push
mov
or
jae
pusha
push
lds
out
addr16
ficomp
jo
std
aas
adc
es
lahf
dec
or
sub
inc
dec
adc
jns
jmp
mov
push
push
sub
cmp
xor
fwait
movs
jle
nop
pop
xor
xor
pop
cmp
stos
popf
adc
jmp
adc
sub
(bad)
enter
xchg
js
fs
(bad)
scas
adc
outs
popa
int
std
lods
mov
pop
frstor
scas
push
icebp
or
adc
xor
jae
add
retf
xchg
cmps
push
fdivr
jo
adc
mov
(bad)
adc
imul
or
inc
mov
add
out
jmp
inc
mov
nop
sahf
mov
add
xor
cwde
outs
(bad)
dec
mov
or
add
add
fdivr
popa
fst
sub
in
aas
cmc
je
sub
and
loop
sahf
in
daa
cmp
and
fimul
lds
mov
sti
xchg
data16
xlat
pop
xchg
sahf
push
add
sub
rcl
mov
cld
adc
mov
lock
cmc
mov
jle
cmp
xchg
out
jns
loope
inc
test
xchg
scas
bound
mov
cmc
loopne
add
mov
call
add
inc
jnp
jne
push
fisttp
mov
sub
jg
xchg
jmp
ins
outs
gs
sbb
push
clc
into
fmul
mov
pop
mov
push
adc
retf
imul
mov
(bad)
pop
mov
jl
mov
rcl
jb
test
jmp
fsub
jmp
adc
lock
je
mov
mov
sbb
sbb
hlt
aad
mov
call
fsub
loop
mov
push
jne
pop
(bad)
inc
jae
cwde
mov
out
cmp
mov
ja
rcr
lock
xchg
jae
add
repz
cmp
cmp
ds
lock
mov
or
movs
xor
mov
repz
call
add
or
je
xlat
loopne
pop
test
dec
inc
in
inc
(bad)
mov
xor
je
outs
dec
adc
retf
daa
push
sbb
leave
das
mov
dec
pop
lea
stc
out
ins
imul
test
mov
arpl
(bad)
imul
ret
jns
popf
je
es
test
jl
and
pop
mov
inc
jnp
mov
(bad)
mov
push
ret
dec
push
pop
xchg
mov
cdq
cmp
pop
ret
add
sbb
push
xlat
xor
cs
lock
pop
dec
pop
sub
dec
xchg
popa
jns
jp
leave
test
gs
pop
shl
in
nop
fwait
cmps
les
mov
lds
loopne
loope
mov
test
icebp
packsswb
xor
mov
mov
add
pop
aaa
xor
inc
dec
imul
(bad)
mov
mov
inc
pusha
(bad)
jmp
mov
push
mov
pop
or
aaa
sub
adc
adc
dec
fwait
xchg
aaa
mov
pop
inc
jae
aam
test
je
or
mov
cs
mov
scas
add
scas
retf
mov
mov
(bad)
pop
jmp
push
fdiv
sbb
outs
mov
dec
and
inc
mov
stos
dec
adc
ss
pop
lock
fstp
pop
stc
int
ja
loopne
loope
daa
xor
inc
shld
addr16
sub
sub
in
popf
push
bound
in
pop
hlt
mov
pop
(bad)
pusha
leave
add
inc
das
ror
fldpi
inc
pop
fs
pusha
inc
sub
and
stc
movs
out
dec
test
das
test
mov
inc
es
inc
in
dec
xor
mov
mov
mov
adc
inc
xchg
jle
xchg
push
cmc
outs
js
ja
jmp
xchg
push
xchg
cmc
jecxz
sbb
mov
or
adc
(bad)
in
dec
inc
add
fdivrp
retf
into
add
dec
in
cmc
sbb
into
xadd
pop
es
shr
adc
pop
adc
aas
shl
fistp
pop
inc
dec
mov
add
(bad)
je
add
add
inc
(bad)
push
mov
jge
pop
mov
and
mov
mov
cmp
arpl
in
lods
retf
in
out
nop
or
and
fisubr
pushf
mov
dec
jle
or
mov
sub
xchg
inc
repz
ds
mov
jl
pop
push
xchg
mov
or
pop
sbb
cs
test
movs
stc
ss
mov
inc
inc
loopne
ins
dec
jge
mov
popa
inc
movs
pop
jl
and
mov
(bad)
out
mov
xchg
cmp
sti
mul
icebp
(bad)
adc
cmp
push
enter
ss
inc
xor
(bad)
shl
push
jmp
push
lods
add
loope
cdq
scas
or
inc
push
push
mov
mov
(bad)
pop
ja
cmc
mov
nop
dec
pop
dec
movs
je
jg
ret
pop
in
pushf
xor
scas
dec
les
fistp
pop
(bad)
xchg
ds
dec
pusha
jle
shl
int
and
add
or
mov
push
mov
gs
add
dec
lods
ins
inc
xchg
sti
jmp
je
push
xor
adc
mov
ins
das
jmp
dec
xchg
movntq
cmc
test
imul
inc
es
pop
shl
sti
xchg
mov
test
dec
popa
xchg
imul
js
push
pushf
dec
and
xchg
add
mov
cdq
pop
(bad)
adc
sahf
ror
fidiv
inc
int3
sahf
hlt
ror
dec
push
retf
mov
(bad)
clc
pmulhuw
xor
mov
xchg
fdiv
pop
pop
icebp
in
add
scas
lods
xchg
fmul
jmp
mov
mov
jnp
cmp
jmp
aam
enter
jmp
cmp
jno
ja
inc
mov
push
aas
shl
retf
lahf
test
(bad)
add
push
dec
lahf
mov
push
(bad)
jl
xor
jno
out
aam
or
jns
outs
xchg
js
sbb
cmp
add
mov
cli
ins
jl
adc
pusha
mov
das
into
jmp
fidivr
call
movs
cmps
ins
sub
adc
inc
in
daa
mov
test
cmp
rol
sbb
clc
sbb
sub
mov
or
push
fcomp
loop
outs
sub
mov
mov
jno
mov
loopne
mov
ins
jge
repnz
and
addr16
pop
xor
sbb
sub
xchg
or
jecxz
xchg
call
ror
jns
scas
fwait
outs
fst
pop
push
mov
and
add
xchg
push
inc
cmps
and
pop
and
jg
or
mov
mov
out
leave
xchg
std
movs
sbb
and
rol
(bad)
cmc
mov
cmps
pusha
out
int
and
inc
xor
pop
scas
mov
das
sbb
mov
test
inc
add
mov
loop
push
call
mov
jge
and
dec
mov
sub
nop
cmp
mov
xor
xchg
push
(bad)
test
pop
xor
fcom
pop
pop
push
sbb
adc
outs
mov
scas
push
test
(bad)
int3
sahf
mov
rcl
imul
xchg
xchg
mov
add
adc
jno
stos
ja
add
lods
pop
fcomip
inc
movs
xor
and
add
test
pop
jmp
mov
mov
sub
mov
sub
jge
dec
jae
lahf
jl
or
add
jns
adc
xchg
sar
jmp
mov
ss
loop
sub
retf
push
mov
push
fild
fwait
xor
adc
imul
adc
mov
fild
dec
(bad)
sbb
cmc
int3
adc
sbb
jns
aad
popa
dec
test
or
mov
xchg
lds
mov
jge
or
sub
push
adc
lock
fbstp
inc
movs
push
sahf
out
aaa
retf
outs
mov
lea
test
into
xchg
lea
mov
adc
loope
or
cld
test
(bad)
dec
push
xchg
shl
push
push
out
call
in
sbb
push
popf
cmc
call
dec
jg
sub
mov
sub
frstor
adc
push
inc
fisubr
xchg
mov
ins
cmp
xchg
adc
pop
mov
jae
push
cmp
adc
loopne
sar
daa
sti
push
idiv
lods
lods
pop
in
inc
mov
fdiv
xchg
jmp
fwait
adc
pop
not
out
into
fnsave
mov
out
cwde
movs
inc
frstor
dec
repnz
les
mov
xor
dec
inc
cli
jae
mov
call
xor
fstp
aaa
cmp
aas
mov
mov
jmp
mov
(bad)
pop
in
mov
sub
dec
mov
or
jno
cmc
cdq
jns
in
adc
xchg
adc
cdq
ds
dec
test
repnz
sbb
mov
outs
fisubr
mov
mov
cs
or
cs
scas
out
out
pop
and
imul
xchg
adc
addr16
or
js
sub
mov
daa
jmp
daa
dec
push
neg
inc
add
iret
int3
xor
xor
mov
add
in
ins
mov
arpl
cmps
fsubr
and
sub
popa
pop
xchg
jg
xor
out
outs
xor
(bad)
repnz
out
ret
xchg
lock
mov
dec
and
outs
pop
dec
inc
and
sbb
push
mov
pushf
jmp
sbb
dec
xchg
popf
icebp
mov
(bad)
sbb
sub
jp
adc
jg
stos
xchg
add
sub
out
and
xchg
adc
mov
adc
cli
pop
push
cmp
stos
les
sar
xor
mov
cs
test
stos
out
dec
cld
xor
xchg
or
mov
cwde
mov
mov
outs
aaa
inc
cmp
xor
iret
xchg
or
jle
mov
inc
pcmpgtd
lods
fwait
cmps
test
xor
cmp
je
pop
iret
icebp
mov
add
mov
(bad)
out
cmp
lock
repnz
or
mov
rol
imul
mov
sbb
out
mov
lods
xor
imul
adc
cmc
sbb
pop
mov
sub
dec
std
stos
inc
jbe
js
push
fnstsw
push
ds
or
scas
and
push
clc
push
push
mov
es
imul
sbb
cdq
sbb
adc
fdiv
mov
cmp
jbe
jne
push
imul
adc
mov
mov
dec
dec
xchg
neg
xor
push
add
lods
mov
xchg
sub
fiadd
test
mov
jmp
int
test
aaa
push
mul
adc
fldenv
test
mov
ror
push
xchg
test
and
dec
ficomp
adc
inc
ret
cli
jge
mov
popa
push
mov
sub
mov
xor
dec
in
push
jecxz
adc
sub
imul
sub
push
mov
and
shl
inc
mov
sbb
(bad)
in
(bad)
enter
pushf
mov
inc
mov
add
xchg
mov
cli
sbb
les
add
aam
jmp
jmp
mov
pop
sbb
add
call
push
jb
in
mov
inc
imul
ss
icebp
pop
add
idiv
xor
mov
fist
mov
push
aad
push
mov
cmp
repnz
push
mov
pop
mov
out
push
aam
push
rcr
dec
cmp
dec
ret
ror
sub
adc
dec
jmp
mov
test
shl
shl
pop
dec
(bad)
ret
aam
adc
sti
jb
ja
inc
xor
test
mov
sbb
inc
pop
jns
xor
or
cmp
(bad)
stos
inc
xlat
repz
bound
inc
daa
or
xchg
movs
mov
test
std
loopne
js
mov
jbe
fst
retf
mov
jp
rcr
sbb
out
xchg
mov
sub
int3
xchg
mov
pop
inc
mov
add
cs
add
pusha
loop
dec
gs
pop
push
iret
push
inc
cmp
movs
scas
(bad)
dec
(bad)
out
dec
pop
retf
fiadd
and
pop
push
and
es
int
jl
pop
sub
mov
fstp
sahf
inc
inc
xchg
push
out
ds
jns
sar
out
xor
add
shr
cwde
aas
ds
in
jne
cdq
inc
xchg
jnp
mov
aaa
repz
rcr
daa
push
push
sbb
add
adc
xrelease
mov
ins
xlat
jb
ret
inc
lods
arpl
sbb
jno
neg
lods
lds
sub
xor
pusha
mov
mov
xchg
cmc
shr
mov
pop
xchg
mov
iret
xlat
outs
fcmovnb
(bad)
adc
push
cdq
(bad)
(bad)
mov
stos
jbe
mov
movs
in
push
mov
fcomp
xor
inc
je
mov
sahf
jp
mov
test
mov
or
fimul
out
outs
mov
adc
mov
pop
iret
arpl
add
jmp
xor
mov
pop
sub
pop
test
inc
xor
rol
inc
push
add
std
dec
jb
sti
imul
adc
push
mov
in
iret
fwait
pop
and
out
xchg
xchg
xor
pop
jne
outs
in
fild
mov
movs
jecxz
sub
jle
mov
popf
sbb
cmp
out
fidivr
into
xchg
sbb
rcl
dec
mov
stc
and
mov
pop
aas
loop
add
jmp
iret
jnp
cmp
jmp
cmp
push
out
add
push
mov
mov
cmp
dec
adc
lods
lahf
cli
mov
icebp
adc
repz
inc
mov
push
dec
xchg
rol
add
fdiv
mov
and
and
fs
mov
(bad)
dec
out
mov
es
jge
push
xor
cmc
cwde
mov
pop
inc
jno
or
imul
xor
cli
jecxz
dec
ror
jmp
cmps
lock
in
mov
(bad)
adc
inc
(bad)
push
xchg
mov
les
inc
jo
and
dec
fiadd
add
sub
bnd
push
mov
stos
jp
cmp
cwde
xchg
mov
sbb
mov
retf
push
add
sub
mov
ins
xchg
push
(bad)
dec
ins
idiv
pop
cmp
cmps
movs
jmp
inc
mov
mov
dec
xchg
pop
cmps
cmps
and
fidivr
sbb
test
inc
(bad)
ss
outs
mov
pop
jl
pop
push
jg
xchg
xlat
cmp
cmc
fst
pop
push
xchg
inc
adc
jp
mov
pop
js
outs
push
cld
(bad)
jnp
cmp
pop
mov
mov
mov
mov
in
inc
scas
jmp
jl
cmp
xchg
or
add
push
rcr
retf
(bad)
xlat
push
int
es
xchg
lods
mov
dec
push
mov
mov
(bad)
cmc
add
jge
sbb
leave
and
or
xor
sahf
adc
adc
adc
or
and
mov
jo
xchg
xchg
stos
lods
dec
fnsave
out
bound
pusha
movs
retf
and
add
sti
inc
push
fisttp
not
sub
popa
ret
retf
mov
xor
das
push
into
jmp
push
fstp
std
(bad)
push
add
inc
jno
inc
sub
out
sbb
rol
jae
adc
jmp
mov
ja
add
mov
mov
shl
and
cdq
loopne
or
xor
out
or
mov
push
rcl
js
test
out
cmp
int
das
test
cwde
adc
into
fwait
add
and
add
scas
loop
jg
push
mov
cmp
mov
jecxz
fsub
setns
(bad)
aam
push
adc
cmp
pop
push
aam
mov
or
adc
and
xchg
lods
xchg
xchg
cld
fistp
or
xchg
(bad)
push
outs
pop
jae
xchg
in
or
add
nop
or
cs
retf
(bad)
int3
push
jle
push
shl
jnp
lds
xor
pop
cmp
adc
dec
sub
xchg
mov
jmp
or
mov
mov
rol
and
fcmovu
dec
shl
sbb
mov
out
cmp
add
adc
shr
sbb
retf
fdiv
cmp
add
cmp
mov
dec
mov
mov
push
jl
xlat
and
fstp
pop
or
push
movzx
sbb
sbb
mov
loopne
test
inc
xor
inc
in
sub
mov
fsubr
jmp
loop
xchg
out
aad
aam
(bad)
xchg
shl
pop
out
je
mov
aas
inc
jnp
inc
jmp
push
jbe
push
mov
or
cdq
jbe
ins
inc
sti
popa
ins
or
mul
pop
and
enter
mov
test
mov
cmp
sub
nop
push
cmp
add
or
lods
dec
sub
xor
pop
loop
ja
mov
sub
and
sbb
leave
pop
add
jno
sbb
sub
or
sbb
fisttp
sti
inc
xchg
mov
inc
cwde
ret
je
dec
xlat
out
sub
arpl
cmp
(bad)
je
cmp
ret
pop
add
add
xchg
aam
cli
test
or
mov
test
cmp
dec
cmp
jle
icebp
lahf
cwde
loope
daa
out
repz
sub
ror
dec
in
cli
std
dec
push
and
jb
jbe
adc
xlat
xchg
xor
jmp
inc
push
sbb
sub
es
inc
dec
(bad)
lock
sahf
aas
pop
popf
adc
jae
sahf
ret
jo
iret
pop
pop
repnz
cmps
fisubr
sbb
into
adc
pop
jecxz
xor
pop
sub
pop
imul
mov
pop
dec
sbb
push
cmp
(bad)
xlat
xlat
inc
(bad)
stos
mov
jp
outs
gs
xchg
sub
sub
inc
pop
pop
jmp
lods
les
fld
xchg
pop
push
loop
popf
and
lock
jg
cmp
fcomp
test
cmp
(bad)
lea
mov
cmc
ret
es
pop
or
pop
add
fild
xchg
rol
bound
(bad)
daa
add
dec
scas
cmp
repz
les
lds
arpl
loope
retf
xlat
pop
cmp
cmps
ror
mov
pop
xor
(bad)
lahf
fbstp
ins
daa
cmp
xor
movs
jno
or
sub
rcl
jg
jb
ret
pop
cmp
lods
inc
or
push
pop
cdq
cmp
mov
pop
mov
sbb
sbb
wbinvd
add
mov
pop
mov
dec
and
mov
xor
adc
(bad)
mov
xchg
inc
clc
or
push
js
add
or
mov
adc
pop
mov
xlat
fiadd
sti
dec
sub
cmp
ins
retf
xchg
push
xor
mov
mov
call
fbld
cmp
pop
pop
and
sbb
mov
push
stc
mov
push
mov
push
int
sub
and
sub
xor
pop
adc
add
add
mov
xchg
pop
sbb
mov
push
mov
pop
inc
outs
jg
gs
ds
addr16
rcl
loopne
and
mov
cmps
rcl
push
ins
mov
pop
mov
rol
xchg
hlt
fwait
push
das
popa
or
mov
jo
ins
mov
mov
arpl
cmps
sbb
cmp
mov
push
imul
fnstsw
hlt
movs
ror
jmp
lock
cmp
jecxz
push
lahf
addr16
in
outs
cdq
aaa
dec
js
xor
push
pop
or
inc
dec
call
cmc
cld
fisubr
push
jmp
(bad)
shr
add
cld
std
cmp
and
(bad)
repnz
jno
inc
mov
mov
or
ret
xchg
(bad)
mov
xor
sbb
call
test
mov
cli
mov
rcr
pop
and
jl
nop
or
pushf
and
fcomp
je
jbe
mov
(bad)
leave
xchg
and
xor
sub
xchg
test
jmp
das
push
sti
pop
cmc
jl
stos
std
jl
sub
mov
mov
and
aaa
loopne
xor
(bad)
arpl
dec
lods
jge
ins
fs
lock
pop
and
int3
scas
pop
push
mov
sbb
lea
add
mov
pop
sub
or
repz
xchg
or
movs
rol
int3
out
mov
sub
jbe
xchg
int3
xchg
int3
test
shl
leave
xchg
leave
cmps
mov
stos
hlt
repnz
and
das
out
test
xchg
setns
sub
mov
push
xchg
fst
scas
stc
ins
mov
in
inc
sbb
in
inc
out
test
push
ret
stos
sub
test
push
inc
mov
imul
mov
jne
mov
xchg
cmp
aad
mov
std
sahf
popf
cmp
push
fimul
and
daa
retf
push
(bad)
and
retf
sbb
clc
push
push
and
fisubr
ins
inc
jl
xlat
and
sti
push
push
and
jge
cmp
es
push
daa
pshufw
mov
xor
push
or
(bad)
pop
sub
mov
jecxz
loopne
and
sbb
sbb
mov
dec
cld
mov
jl
loope
ins
data16
sub
in
pop
adc
or
aaa
sub
hlt
add
cmp
inc
fild
sub
xchg
or
sbb
push
pop
xor
mov
neg
cmp
fdivr
rcl
mov
lds
xor
clc
ins
in
rol
retf
mov
repz
fst
shl
ret
test
mov
not
mov
mov
and
or
not
jns
push
inc
pop
mov
cmp
data16
xor
lods
mov
sar
push
neg
cmp
adc
pop
push
retf
pushfw
mov
cmps
xor
jo
fs
cs
push
xor
jbe
(bad)
cwde
mov
and
std
ret
inc
test
mov
sbb
push
xchg
adc
add
or
push
xchg
push
xchg
loopne
lock
fdivr
popf
rcl
shr
jl
add
fild
retf
shl
fadd
sbb
sub
add
jbe
add
nop
adc
dec
in
fdiv
les
fistp
cmp
cmp
add
mov
sub
clc
pop
(bad)
in
or
cmp
adc
pop
mov
dec
jb
ins
sbb
not
push
xor
aas
sub
repz
loopne
or
dec
jle
(bad)
jmp
xchg
mov
(bad)
sbb
nop
push
or
adc
xchg
cmp
adc
xchg
xchg
push
pop
div
stos
cmps
shl
out
js
cmp
fwait
cmp
sar
inc
or
jno
scas
ins
pmulhw
pop
cmc
leave
jge
inc
call
sti
cmps
xchg
fmul
jmp
inc
shl
sbb
sub
xchg
std
lea
ja
sub
mov
fs
or
jl
in
or
stos
adc
cli
out
aas
(bad)
js
call
jp
sahf
mov
pop
pop
pushf
pop
data16
sahf
cmp
sub
ds
sub
mov
clc
push
fwait
out
test
push
fdiv
mov
mov
sub
mov
sub
loope
iret
adc
scas
xchg
mov
pop
imul
xor
scas
shr
inc
jmp
fs
pop
cmp
mov
cmc
(bad)
xor
mov
push
mov
clc
pop
shl
xchg
js
(bad)
ds
mov
mov
mov
bound
adc
movs
inc
arpl
popa
or
(bad)
mov
nop
mov
mov
shr
daa
and
mov
movs
add
jnp
and
fnsave
fcomip
daa
and
xchg
mov
imul
mov
or
je
ficom
add
jmp
je
lock
pop
rcr
mov
mov
mov
and
add
pop
ret
mov
add
daa
dec
pop
out
lfs
js
xchg
dec
imul
stos
addr16
ror
push
pop
sbb
jb
fcomp
inc
xor
and
dec
lock
cmp
in
lea
sub
push
cdq
aaa
xchg
mul
sbb
call
xor
add
push
outs
je
add
stc
xchg
jbe
lds
dec
and
outs
xchg
dec
ror
(bad)
dec
je
psubusw
mov
xor
and
(bad)
sub
mov
cmp
(bad)
mov
addr16
dec
xchg
mov
adc
pop
loope
bound
add
stc
xor
hlt
xchg
inc
cwde
xchg
adc
loop
xlat
mov
jb
inc
test
out
std
xlat
cmp
inc
std
mov
or
pop
lods
loopne
pop
(bad)
cmp
cmp
ja
mov
(bad)
ss
fmul
sbb
jmp
int
jg
xchg
or
pop
xor
in
cmp
iret
sub
ja
dec
push
scas
in
pop
cmp
adc
xor
push
ds
jmp
sti
and
lods
aaa
rcr
inc
push
iret
push
jo
push
sbb
xchg
movs
(bad)
into
in
mov
or
retf
(bad)
and
add
fsubr
in
mov
jae
cmp
stc
mov
or
xchg
sbb
mov
ret
stos
bnd
mov
adc
mov
pop
push
mov
fimul
aam
rol
scas
repz
sbb
dec
repz
jns
popf
rcr
jge
sub
neg
ins
pop
stos
mov
aas
inc
popf
lods
adc
jmp
push
stc
xor
test
mov
sbb
jbe
mov
fcmovne
dec
repnz
cdq
add
push
jo
jnp
pop
loop
dec
or
out
jmp
pop
adc
add
(bad)
inc
mov
nop
fwait
inc
push
out
fs
pop
fisttp
shl
and
or
sbb
xchg
in
loopne
pop
sub
push
outs
xchg
fld
clc
pop
shl
outs
sub
test
jne
sbb
movs
sti
daa
daa
xchg
pop
inc
cmp
cmp
adc
arpl
mov
stc
push
cmps
fcomp
fwait
sbb
imul
fadd
xor
dec
fwait
jbe
mov
pusha
adc
adc
iret
cld
test
dec
imul
test
fadd
mov
test
popa
jmp
jo
div
mov
xchg
mov
sub
retf
sub
push
add
pop
sub
dec
pop
fst
jno
and
xchg
add
inc
mov
xchg
push
div
aas
je
xlat
jge
mov
mov
arpl
mov
add
sbb
les
adc
sti
pusha
cmps
jnp
xchg
jne
mov
pop
data16
cwde
dec
push
mov
jge
mov
cmps
ins
(bad)
sti
jne
inc
cmps
dec
pop
xor
outs
add
nop
ret
xor
call
loope
mov
loope
into
and
adc
sub
push
add
test
lods
cmps
jecxz
pushf
xor
sbb
inc
les
mov
ror
xor
push
mov
add
inc
data16
mov
inc
mov
sbb
test
pushf
and
int3
jp
pushf
or
jno
mov
(bad)
pop
in
loop
jge
xor
loopne
ficomp
push
xchg
pusha
xchg
les
fsubr
out
add
test
pop
retf
jmp
stc
jecxz
jp
loopne
nop
aam
sub
(bad)
push
cld
mov
outs
adc
ror
int3
(bad)
xchg
jns
push
fidivr
xor
and
loope
push
jl
push
inc
sub
push
jmp
scas
lock
neg
or
leave
sbb
in
repnz
cmp
ss
push
sub
cld
movs
les
iret
pop
xor
fwait
cmps
mov
dec
sbb
ror
pop
push
sar
push
push
push
test
iret
xchg
adc
idiv
out
xor
clc
mov
sbb
push
iret
fidiv
jl
jecxz
dec
scas
sbb
cmps
neg
add
add
and
push
pop
mov
pusha
das
imul
sbb
out
loope
add
sub
cmps
icebp
mov
ds
mov
pop
jl
(bad)
and
das
aam
mov
sub
lea
mov
adc
xor
jno
mov
into
rcr
retf
dec
cld
xor
in
jge
xchg
test
jns
fcomp
inc
cdq
std
clc
mov
sbb
mov
retf
ficomp
loope
rol
pop
sbb
mov
jne
or
pop
stc
cmp
mov
mov
in
adc
imul
lods
sub
test
out
imul
bound
mov
daa
int
rol
std
movs
stos
mov
xor
adc
sub
adc
inc
popf
cmp
pop
mov
out
in
mov
clc
lahf
push
push
movs
(bad)
xchg
ins
test
sub
dec
pop
shl
faddp
shl
in
mov
loope
and
mov
loopne
inc
das
lahf
pusha
shr
nop
xchg
addr16
mov
mov
jno
mov
sub
xor
out
ss
inc
mov
movs
cmps
repz
adc
mov
out
push
mov
popf
jb
add
jge
outs
sahf
mov
scas
cmps
pop
dec
es
dec
dec
movs
xlat
pop
dec
sub
dec
test
in
dec
xchg
inc
mov
add
lods
frstor
sbb
adc
ret
loopne
fs
xor
stc
mul
jge
and
mov
mov
dec
jge
imul
out
cmp
mov
mov
data16
dec
mov
imul
into
dec
call
cwde
jp
scas
mov
xor
or
mov
cdq
lods
aaa
xchg
dec
test
cmps
sub
fistp
pslld
push
(bad)
mov
hlt
mov
adc
out
mov
ficom
sbb
sbb
jb
sub
mov
mov
call
rol
aaa
int
mov
cdq
adc
sti
and
fwait
cs
(bad)
xor
mov
test
jmp
jb
out
fwait
ja
and
pop
test
jp
or
cmp
(bad)
fst
mov
gs
and
int3
pop
ds
dec
mov
movs
mov
xor
mov
lods
jmp
mov
dec
fadd
sub
adc
repz
inc
sti
adc
adc
test
and
jo
test
mov
fld
(bad)
jg
js
mov
jno
test
in
jo
push
repnz
cmp
retf
push
mov
daa
xor
inc
retf
jp
xchg
das
stos
dec
fs
xchg
dec
pushf
ins
in
pop
idiv
ja
outs
movs
imul
jmp
imul
sub
repnz
or
adc
and
or
mov
cmp
out
repz
pop
pop
std
test
xor
ret
neg
sbb
mov
inc
ror
push
xor
popf
and
jg
fst
pushf
adc
aaa
mov
dec
fild
(bad)
out
xchg
xor
cwde
fcmovbe
xchg
and
xchg
xchg
jp
mov
std
repnz
or
inc
jbe
pusha
pusha
sbb
inc
dec
jmp
inc
add
sub
push
sbb
test
pop
imul
jo
rcr
scas
call
sbb
sub
or
xor
and
div
push
mov
pop
jmp
jmp
or
dec
sahf
idiv
mov
inc
mov
adc
div
scas
enter
lods
inc
xchg
loope
out
jmp
and
loope
xchg
cwde
cs
les
clc
ins
pand
leave
dec
mov
sub
sbb
and
outs
or
sbb
mov
adc
cmp
push
in
fmul
lods
loope
adc
cmp
or
jmp
xchg
inc
mov
popf
inc
sbb
pop
jmp
pop
loopne
mov
adc
mul
and
or
cmps
add
inc
addr16
inc
aam
add
sub
inc
or
xchg
pop
ss
adc
mov
jp
push
int3
xchg
dec
jne
jge
sbb
add
out
jnp
inc
pop
int
xor
dec
pop
(bad)
cmp
aaa
jbe
jmp
add
sub
into
pop
mov
sub
and
ror
xchg
pop
in
sub
cs
pop
cmp
pop
xchg
adc
xchg
jle
(bad)
push
stc
(bad)
xor
(bad)
pop
in
pop
push
out
arpl
shr
(bad)
xchg
pop
addr16
inc
std
push
inc
icebp
push
daa
push
scas
(bad)
stc
test
cmp
movs
jp
or
les
psubsb
repnz
into
cmovno
push
hlt
xchg
and
js
push
sbb
ds
div
xorps
rol
daa
scas
sub
xor
stos
les
adc
call
fld
pop
loopne
sub
out
sub
add
and
daa
xor
pushf
aam
or
movs
push
repz
fcom
popf
mov
jno
out
je
mov
imul
jmp
sbb
imul
cmp
hlt
mov
push
enter
pop
xchg
add
mov
xor
push
out
fmul
sub
push
push
fiadd
nop
retf
mov
call
mov
mov
pop
in
int
pop
sub
dec
out
sub
cmp
lahf
ins
dec
(bad)
cmp
(bad)
imul
mov
adc
mov
fistp
jnp
jle
mov
and
or
call
fsubr
mov
fsub
push
hlt
nop
adc
pandn
loope
add
cdq
xchg
push
xor
jmp
push
into
or
lods
leave
bnd
cdq
mov
ror
push
iret
and
pop
div
xchg
sbb
rcr
adc
dec
mov
(bad)
mov
push
push
jae
mov
ret
arpl
dec
out
add
stos
mov
mov
out
xchg
sbb
je
jge
sub
fmul
(bad)
enter
add
mov
lahf
sub
outs
mov
dec
stos
popf
ja
nop
cmp
into
enter
test
mov
sbb
in
pop
mov
pop
ret
ins
sub
pop
ds
lods
or
dec
jl
ret
xchg
and
inc
lahf
lea
popa
mov
outs
idiv
adc
fwait
dec
jno
mov
push
or
fdiv
xor
loope
clc
rol
lea
push
jbe
sbb
loop
sbb
fist
jns
imul
jp
inc
mov
or
test
jbe
mov
movs
in
mov
xor
outs
or
cmp
push
jg
jg
sbb
out
arpl
sbb
cmp
in
xchg
mov
pop
jns
ror
cmp
xchg
push
dec
dec
pop
outs
sbb
xchg
mov
stc
test
and
dec
sbb
adc
mov
or
(bad)
jnp
mov
jne
in
dec
std
dec
jmp
or
int3
sub
stos
rol
jbe
mov
pop
jmp
mov
mov
mov
sti
xor
and
or
jno
test
psubw
pop
jne
push
pop
push
ja
push
sub
adc
push
scas
stc
not
and
mov
push
xor
outs
sar
cs
and
lds
(bad)
pop
xchg
adc
mov
sbb
out
jns
or
or
xchg
adc
mov
mov
stc
data16
mov
cmc
movs
xor
int
dec
call
addr16
lds
stos
das
mov
(bad)
cdq
jne
cli
add
ins
sub
push
outs
or
jae
js
in
inc
or
add
xchg
and
mov
lock
int
jp
enter
sbb
pop
movs
in
ds
mov
rcr
push
jmp
push
das
inc
push
and
popf
mov
test
jmp
push
test
add
push
mov
inc
cmp
xchg
cmps
push
cmp
xor
pop
rcr
outs
cmp
aad
inc
test
mov
lods
not
jg
xchg
sub
in
xchg
push
pop
in
jne
or
rcr
inc
push
sar
icebp
mov
in
cmp
imul
aam
add
call
stos
xor
adc
push
cmp
repz
inc
jne
push
mov
mov
out
mov
xchg
outs
sub
dec
cmps
call
repnz
dec
ret
and
push
pop
add
xor
pop
push
or
pop
outs
xchg
xor
add
sar
mov
pop
dec
in
imul
out
js
retf
mov
mov
adc
push
pop
xchg
dec
icebp
adc
fstp
cld
pushf
jle
pushf
rol
or
mov
fild
hlt
jmp
mov
sbb
jge
dec
push
aaa
mov
mov
lock
or
jge
lahf
xchg
push
cmp
loop
adc
inc
mov
das
lods
not
mov
cmp
cmp
sub
fstp
mov
loopne
std
inc
push
sbb
aad
les
mov
test
xor
cmp
inc
add
fs
cdq
in
push
mov
jb
ds
std
pop
xchg
into
stos
xchg
bound
ds
mov
jecxz
mov
and
rcr
jbe
or
sbb
dec
xlat
xor
lea
out
popf
in
das
pop
rcr
loope
hlt
xor
push
jmp
rcl
cwde
leave
ins
ficom
test
je
mov
or
push
int3
enter
mov
int
sbb
mov
push
adc
vmovhps
pop
jne
stos
sbb
lea
jmp
sti
sub
cs
xchg
out
clc
iret
mov
clc
(bad)
pop
test
fbld
retf
cmc
iret
rol
mov
add
mov
test
inc
(bad)
aad
les
pop
sub
mov
std
add
lea
es
dec
pop
xchg
jle
mov
in
test
icebp
and
int
add
or
fs
lea
retf
daa
jge
aad
xor
pusha
sbb
push
(bad)
bound
mul
daa
and
sti
mov
push
cs
add
scas
jnp
and
outs
std
add
ja
int
ds
and
push
sbb
aad
dec
movs
ficomp
mov
test
test
mov
sub
xchg
push
pop
push
mov
sbb
data16
inc
scas
rcl
dec
icebp
cmc
xchg
scas
jb
sbb
mov
mov
les
xor
test
call
movs
sub
out
push
inc
addr16
mov
fcmovb
jo
xor
jo
xor
mov
div
xor
cmp
jno
outs
push
or
movs
or
retf
pop
cmp
mov
out
sub
sbb
xor
aam
or
mov
xor
loope
(bad)
xchg
ins
push
(bad)
sub
clc
sti
add
xor
mov
push
adc
jl
jp
(bad)
pop
adc
adc
fild
push
loope
ret
xor
mov
sub
sub
scas
add
sbb
xor
inc
(bad)
outs
ret
sbb
xor
(bad)
xchg
and
or
rol
adc
xchg
inc
xchg
xchg
mov
sub
push
fstp
xchg
movs
mov
gs
mov
inc
mov
push
jp
test
ret
pop
jnp
jo
movs
mov
cmp
sub
rcr
mov
sti
jle
retf
add
aad
mov
inc
mov
sub
mov
retf
test
shr
cmp
ins
lods
outs
scas
(bad)
enter
cmp
(bad)
rcr
mov
push
pop
or
or
mov
scas
dec
and
movs
pop
mov
repnz
inc
mov
mov
jbe
mov
xor
lahf
sub
lock
mov
inc
aam
add
fist
dec
and
repz
adc
lahf
push
in
(bad)
pop
aad
xor
jl
sbb
push
pop
stos
xor
mov
xor
xor
jg
mov
cmps
cmp
inc
rcl
and
adc
mov
das
loop
push
sub
clc
aad
jl
add
or
xor
cmp
push
dec
es
pop
inc
lahf
xchg
xor
xchg
mov
xor
in
(bad)
sbb
sub
div
call
imul
sti
call
and
pushf
dec
xchg
fidivr
or
push
outs
retf
jmp
push
lods
loop
aad
mov
jae
lock
imul
popa
jae
sbb
pusha
sub
fwait
jecxz
dec
hlt
push
sbb
or
dec
xor
ja
std
scas
icebp
outs
fwait
jne
(bad)
mov
addr16
inc
aaa
mov
inc
mov
pop
mov
xor
mov
add
aas
mov
aas
int
jb
or
jnp
xchg
push
sbb
sbb
scas
ret
out
cmp
rcr
(bad)
sbb
call
cs
pushf
cmp
xor
push
clc
sub
xor
push
nop
(bad)
popf
cs
ja
add
and
or
sub
inc
test
sbb
push
mov
sbb
jp
fnop
xchg
adc
leave
adc
and
nop
push
inc
mov
push
rcl
mov
xchg
gs
ret
sar
rcl
xchg
lea
or
fwait
or
test
ret
addr16
pusha
repnz
cmp
inc
push
sar
cdq
mov
mov
push
adc
arpl
in
pusha
mov
ret
mov
push
dec
cmc
mov
jmp
fnstsw
loop
lahf
mov
and
xchg
fadd
loopne
ins
mov
xor
shl
sbb
ins
jo
cmp
out
push
push
cs
rcr
cmps
adc
mov
es
repz
in
mov
cmp
in
push
xchg
mov
mov
retf
shl
aam
push
xchg
mov
jmp
loopne
or
xchg
dec
fwait
and
inc
sbb
adc
xor
div
repnz
adc
or
out
pop
xor
pusha
mov
push
scas
sbb
cmps
repnz
scas
jnp
jmp
xlat
movs
inc
push
xchg
jno
cmc
add
pop
aaa
xchg
cmps
pop
sbb
xor
into
xchg
out
int3
outs
jb
add
sbb
xor
aad
cwde
je
jmp
push
dec
pop
mov
and
jmp
neg
xchg
jns
(bad)
aaa
jne
or
sub
mov
add
sub
dec
dec
mov
stos
pop
ins
out
pop
add
ss
inc
push
retf
pushf
loop
fs
jecxz
jmp
data16
scas
daa
in
aam
arpl
cmp
adc
aas
fadd
rcl
dec
xlat
add
cmp
(bad)
retf
aam
mov
mov
mov
xchg
in
add
inc
sbb
xchg
xor
int
cmps
add
pop
push
or
adc
jl
push
cmp
pop
xor
push
enter
sub
retf
dec
jno
mov
clc
add
jge
push
loop
jne
jns
in
sub
mov
dec
and
addr16
pop
loop
movs
fs
or
dec
scas
into
ret
or
jmp
cs
jbe
in
mov
je
in
test
(bad)
ins
xchg
cld
dec
mov
imul
adc
mov
push
div
(bad)
mov
sub
rcl
addr16
int3
inc
adc
push
push
jbe
xor
iret
mov
adc
(bad)
stc
mov
or
sbb
cmps
ins
cmp
je
or
adc
je
imul
(bad)
pop
xlat
movs
mov
outs
inc
cli
(bad)
jmp
push
sbb
inc
dec
dec
add
jecxz
xchg
(bad)
call
retf
mov
push
dec
xchg
mov
xlat
jne
adc
jbe
inc
and
xor
sub
stos
cmc
push
pop
jo
mov
jo
cdq
add
pop
fidivr
call
jnp
cwde
repnz
fadd
pop
mov
imul
adc
adc
xchg
in
cmp
cwde
(bad)
emms
mov
es
(bad)
jbe
in
loope
(bad)
aad
cwde
std
nop
jl
(bad)
test
lods
push
jno
mov
mov
les
jle
xor
(bad)
xor
sbb
inc
jecxz
add
add
pop
repnz
icebp
rcr
push
mov
push
fcmovne
mov
inc
retf
xor
retf
xchg
mov
push
fstp
call
repz
sub
popa
cmp
inc
push
adc
inc
inc
mov
sub
das
jmp
cmps
ret
xor
jbe
push
sub
xchg
in
push
shl
lods
add
in
in
test
sub
retf
daa
call
icebp
xchg
cmps
xor
fnstsw
repnz
test
push
fwait
cmp
rcl
sub
lea
sbb
push
jb
in
add
mov
adc
(bad)
jns
xchg
adc
mov
test
mov
add
lock
jns
jmp
push
xchg
xchg
adc
xlat
loope
test
push
cli
mov
lahf
ja
push
inc
icebp
or
or
test
rol
or
push
jg
repz
out
add
pextrw
lods
mov
sub
rcr
push
dec
test
in
mov
adc
clc
test
jg
test
out
inc
and
mov
push
pop
jecxz
ret
xchg
xor
cmps
cld
fwait
sbb
mov
mov
aam
or
(bad)
sub
mov
fnstsw
mov
rcr
loopne
call
sbb
and
jle
cmc
ins
pop
int
inc
xor
bound
sub
repnz
and
bound
dec
test
aas
outs
movs
(bad)
outs
arpl
into
push
out
push
imul
rcl
scas
sub
pushf
popa
push
pushf
xor
test
test
push
popf
rcr
jns
rcl
out
gs
sbb
xchg
addr16
call
pushf
inc
test
xlat
cld
stc
adc
loope
pop
or
out
inc
and
jmp
out
dec
leave
push
popa
cmp
test
xchg
ret
fwait
retf
mov
adc
inc
outs
and
hlt
sbb
push
or
data16
jns
jl
sub
sub
popf
call
fcmovu
sbb
cmc
icebp
out
inc
scas
jle
xchg
add
pop
lods
into
adc
jno
push
adc
mov
push
imul
cmps
(bad)
xchg
inc
cmp
mov
jnp
xor
cmp
loopne
mov
sbb
aas
lahf
cmps
sub
xchg
out
outs
mov
scas
inc
jge
cmp
adc
lea
and
adc
lods
test
pop
add
and
rcr
fwait
jb
leave
push
stc
in
sbb
pop
out
ins
je
retf
jb
cmp
mov
mov
mov
inc
sub
movs
or
add
inc
mov
push
mov
shr
fcomp
add
aam
lock
loopne
cmp
mov
add
cdq
jge
scas
aaa
sti
out
sub
ins
cdq
xor
mov
pop
ja
jo
mov
dec
sbb
xchg
sbb
xor
xchg
cmps
push
add
test
scas
movs
fild
sbb
mov
jle
retf
ss
cdq
in
call
repnz
pop
aad
xor
sahf
xchg
movs
and
and
cmps
dec
add
(bad)
test
jnp
push
call
neg
cmps
xor
add
add
ds
xor
sub
or
int
inc
lahf
cmp
je
in
movs
mov
pop
les
inc
mov
sbb
cmp
shr
mov
cmp
std
sahf
stos
and
call
scas
icebp
xlat
aas
cli
mov
pushf
sub
xor
pop
fucomp
out
mov
ins
ret
fcomp
fwait
arpl
in
inc
sub
movs
pushf
aaa
push
out
inc
mov
mov
and
call
lea
push
je
out
xchg
imul
jo
stos
outs
adc
imul
xchg
xchg
mov
push
or
mov
fwait
xchg
add
mov
mov
jns
sub
adc
aaa
or
cli
sbb
jecxz
add
pop
imul
xor
inc
and
pop
cwde
mov
jae
repz
nop
stos
xlat
fnsave
mov
cld
movs
in
push
cli
mov
fdivr
mov
test
jmp
mov
jge
sbb
pop
and
imul
pop
add
out
shl
cmps
ror
add
jp
shr
or
jg
add
ret
xchg
cli
xchg
xchg
mov
cmp
jmp
push
pop
adc
and
fs
jmp
xor
popf
inc
mov
clc
dec
sbb
adc
mov
mov
cld
ss
js
aad
adc
arpl
movs
push
retf
and
retf
je
fisubr
or
dec
xchg
loopne
mov
jg
sub
sub
(bad)
sti
std
fist
xchg
cmc
jb
in
ret
ja
sub
cmp
cmp
movs
jnp
mov
sbb
sbb
or
adc
into
pop
xor
fld
out
push
pop
loope
adc
dec
xor
cmp
div
jne
xchg
dec
(bad)
(bad)
adc
push
je
cwde
rol
jg
xor
jmp
push
mov
cmc
jno
lods
les
pushf
imul
mov
pushf
push
rcl
or
int
fidivr
adc
jp
sbb
cli
xor
cli
pushf
adc
fwait
mov
in
mov
pop
cdq
dec
mov
mov
sub
cld
mov
mov
out
mov
lods
jbe
aas
sub
jmp
nop
jnp
sub
cld
inc
jbe
pushf
rol
dec
(bad)
in
movs
pop
push
or
cwde
jnp
fst
(bad)
out
(bad)
jmp
and
fwait
jl
add
cmps
cli
lahf
and
aaa
xor
push
jg
and
pop
in
les
mov
xor
push
iret
fwait
std
push
inc
(bad)
fist
jecxz
int
(bad)
mov
sbb
lahf
out
push
add
xchg
adc
add
sbb
cmp
add
inc
loopne
and
push
adc
nop
inc
adc
leave
fs
xchg
mov
loop
push
mov
sbb
les
stos
int3
(bad)
sbb
mov
(bad)
jbe
movsx
movs
or
mov
xor
ins
push
add
jle
data16
lahf
daa
mov
cmp
push
dec
repz
dec
jo
adc
lea
sbb
ss
jne
int
or
mov
(bad)
jg
jp
or
mov
rol
or
aad
pop
add
push
jmp
jnp
pop
hlt
mov
out
dec
call
inc
pop
jbe
lock
adc
mov
and
jmp
ja
pop
ror
pop
lods
std
cmp
jecxz
loope
aad
inc
mov
cmp
adc
sub
mov
pop
int
out
cs
iret
cmps
bswap
in
jle
or
mov
mov
and
bound
aam
iret
push
arpl
mov
clc
fs
add
dec
mov
adc
add
repz
fiadd
int3
mov
sti
js
jg
ror
enter
lock
adc
and
pushf
xchg
inc
cmps
aas
jbe
aaa
xor
push
lods
ficom
fistp
ss
cdq
sub
out
sub
xor
in
sar
leave
std
int3
(bad)
dec
scas
test
fcomp
mov
xlat
movs
push
jno
sar
and
sub
in
sbb
push
mov
pop
lods
pop
mov
dec
loopne
test
dec
stos
mov
or
int
in
lods
push
inc
dec
pop
sub
je
hlt
mov
sbb
out
inc
mov
inc
cld
movs
ja
pop
enter
sbb
mov
and
lea
mov
pop
or
or
and
cmp
jecxz
pop
pop
cmps
sar
cmp
inc
cli
mov
jnp
retf
push
push
mov
aad
dec
stos
xchg
push
cmp
loopne
xchg
pop
fistp
dec
sub
sub
in
in
(bad)
dec
mov
inc
popf
in
push
addr16
and
adc
jne
in
and
jge
push
xchg
ret
sub
push
stc
push
cs
lods
fisubr
pop
xchg
push
in
out
adc
fisub
fidivr
leave
out
sar
js
push
mov
test
push
jmp
xor
inc
(bad)
pusha
pop
scas
in
movs
icebp
push
dec
or
adc
xchg
mov
mov
jp
movs
sub
mov
mov
jle
add
push
xchg
mov
cld
inc
push
loope
cmp
jo
test
int
test
out
mov
(bad)
mov
xlat
mov
sbb
inc
in
jle
push
ret
xor
ficomp
inc
popf
mov
out
in
neg
push
(bad)
bound
or
xor
pop
mov
sbb
cwde
call
jmp
ss
mov
lods
cmp
mov
inc
bound
jg
mov
dec
mov
dec
mov
xor
jno
push
sbb
push
sub
push
int
mov
jge
dec
clc
dec
test
pop
pop
test
dec
dec
dec
shl
scas
adc
call
pusha
aam
mov
loope
ret
mov
sar
push
sub
mul
or
lods
cld
mov
ret
fxam
add
cmp
icebp
xor
mov
dec
(bad)
popf
jo
push
fnstenv
test
imul
stc
cmp
fisubr
dec
adc
pop
pop
jae
or
push
in
xchg
out
sbb
mov
jge
pop
xor
ins
sub
cmp
xchg
popf
das
and
or
xchg
rcr
push
xchg
cmp
dec
stos
cmp
mov
push
lods
jns
loop
test
mov
push
stos
(bad)
xor
fwait
push
pmulhuw
adc
and
lahf
add
jg
sti
dec
test
nop
xchg
push
adc
hlt
clc
repnz
jle
cmps
push
(bad)
dec
adc
sbb
inc
stc
and
data16
jbe
push
push
inc
sbb
mov
sub
fistp
sub
fwait
adc
aas
mov
ja
movs
sub
leave
lods
cld
std
fsubr
jle
mov
arpl
pop
pop
mov
pop
test
mov
nop
or
mov
gs
sahf
outs
push
addr16
cmc
jno
jl
and
adc
sub
dec
and
shl
dec
repz
mov
cmp
jne
push
outs
imul
adc
push
cmp
adc
push
cs
inc
into
cmc
je
sahf
xor
and
and
inc
into
out
and
lea
sub
push
mov
mov
mov
jmp
jmp
cmc
pop
and
add
sar
push
psllw
call
test
sti
push
jl
dec
inc
movs
jne
cwde
test
je
cmps
mov
sub
sub
loope
test
xor
mov
stos
(bad)
arpl
push
sub
fsubr
adc
and
iret
out
sahf
adc
into
sub
jo
jbe
ss
push
test
inc
mov
ja
loopne
repz
push
pusha
(bad)
xchg
repz
pushf
jo
sub
xor
(bad)
and
cmps
pop
lods
xchg
dec
or
fcmovbe
in
out
sub
jl
jnp
xchg
sahf
gs
clc
shr
in
nop
inc
cmp
lds
xchg
repz
push
xchg
jl
pop
jae
jae
(bad)
push
xchg
not
mov
js
rol
mov
mov
cdq
fwait
add
daa
imul
xchg
ret
cmp
sbb
dec
push
mov
cmp
imul
add
leave
fcomp
lock
daa
inc
mov
dec
call
ret
das
loopne
fstp
mov
hlt
inc
aam
cli
mov
jp
push
cld
stc
imul
pop
mov
push
pop
xchg
aaa
add
dec
or
lds
cmp
inc
pop
test
add
es
xchg
mov
or
cmp
int3
fnstsw
std
xchg
mov
cwde
mov
ret
loopne
pop
inc
jns
dec
jae
mov
fisubr
mov
popf
(bad)
(bad)
fdiv
popa
adc
adc
adc
mov
out
adc
pusha
icebp
inc
lods
mov
loopne
or
(bad)
pop
inc
and
cwde
mov
fistp
fs
cmp
push
push
iret
jl
inc
jmp
retf
xor
push
cmc
sub
mov
pop
cmps
cld
adc
(bad)
push
sub
jge
xchg
rcr
aad
add
and
mov
cwde
pop
and
add
push
cwde
mov
cmc
xor
int3
dec
out
ret
add
mov
call
lock
aaa
mov
inc
xlat
and
push
xchg
mov
adc
inc
ja
(bad)
inc
das
(bad)
call
jge
jp
lods
mov
mov
mov
jl
jle
bound
xor
aad
mov
stos
icebp
fisub
sahf
clc
jbe
pop
mov
lock
movs
push
xchg
outs
mov
loopne
imul
mov
pop
xchg
dec
inc
mov
into
mov
and
adc
aam
inc
ins
stos
mov
jmp
and
jg
adc
mov
sbb
fwait
pop
aad
pop
fdiv
and
outs
test
std
sub
outs
sti
in
mov
iret
imul
lds
pusha
xchg
jg
mov
cwde
jno
fsub
cmp
addr16
cdq
addr16
int3
jae
fisubr
inc
jns
fbstp
movs
ret
xor
cmp
xor
dec
mov
push
pop
cwde
stc
pop
add
es
mov
push
aad
xchg
cdq
adc
push
xor
scas
daa
repz
repz
cmc
test
jae
pop
xchg
xor
addr16
and
or
pusha
ds
inc
pop
jecxz
dec
or
jo
cmp
pop
xchg
push
and
jne
sbb
push
test
out
loope
sbb
mov
xchg
sbb
jp
pop
add
call
adc
xchg
icebp
in
jg
push
dec
test
ror
pop
push
(bad)
jg
js
or
jne
ficomp
stos
cmp
pop
xchg
jge
addr16
push
or
sub
mov
mov
ins
daa
mov
pop
and
lds
inc
imul
sub
out
sbb
or
mov
jl
pop
jo
ret
fidivr
aaa
push
imul
cmp
int
shl
mov
fs
je
out
fldcw
and
push
shl
xor
xchg
add
pushf
outs
jmp
icebp
popf
retf
inc
sti
repz
idiv
xor
mov
cli
and
(bad)
pop
push
mov
cmp
push
shl
pop
xchg
xchg
lea
aas
mov
mov
outs
or
loope
lea
mov
push
sbb
int
cs
mov
or
push
cli
push
mov
mov
inc
sbb
fsubrp
jge
jae
leave
fmul
(bad)
fsub
mov
jae
mov
jmp
push
call
sar
push
xor
movs
idiv
xor
jb
mov
rcl
pop
data16
xor
mov
ins
stos
mov
adc
cmps
pop
or
push
and
das
aad
ins
sub
mov
ds
cdq
sbb
push
rcl
mov
(bad)
or
cmp
les
and
mov
lods
retf
outs
(bad)
ficomp
dec
mov
inc
jp
in
dec
in
and
dec
shl
xchg
(bad)
cmp
inc
adc
inc
jnp
aad
and
or
loope
dec
sub
test
fistp
nop
mov
fcomp
cli
mov
mov
inc
iret
jnp
int3
push
wbinvd
jo
scas
mov
clc
out
xchg
fcom
push
test
in
fisubr
dec
popa
pushf
out
dec
or
sbb
jmp
push
aaa
stc
std
cdq
mov
jle
inc
cmp
lsl
stos
dec
icebp
mov
cmp
mov
scas
push
add
cmps
out
or
daa
jb
xchg
jg
pop
and
jmp
mov
jl
std
popa
call
dec
ss
rol
mov
dec
shr
ins
and
ret
xlat
mov
inc
xor
cmp
xchg
dec
inc
add
das
(bad)
repz
into
cmps
gs
dec
and
dec
xor
jns
out
inc
movs
xor
sub
lahf
cdq
fldlg2
jg
push
xchg
loop
and
lds
cld
sbb
sub
scas
aas
xchg
jecxz
adc
and
sbb
in
popa
loopne
and
mov
rcl
pop
ins
adc
dec
imul
sbb
or
adc
and
sub
into
pop
outs
xchg
cmp
pop
cmp
mov
mov
cmp
push
js
pusha
push
call
xor
lods
sti
adc
ja
and
jmp
bound
adc
push
inc
out
in
sub
xchg
mov
sbb
jns
enter
jp
clc
int
adc
or
jmp
xchg
cmp
xchg
cmp
sub
fmul
call
outs
es
jbe
lea
pop
repnz
jae
test
xchg
push
mov
lea
int
sahf
sbb
cmp
xor
and
in
or
pop
push
sbb
jecxz
scas
clc
cmp
ret
pop
jle
leave
out
jmp
mov
rcl
test
pop
xchg
jle
mov
xchg
int
mov
mov
jb
pop
pop
leave
sti
in
iret
mov
iret
lods
aad
(bad)
call
fisubr
mov
mov
add
jmp
cld
add
test
dec
fistp
push
movs
arpl
pop
xor
inc
fs
sub
mov
ret
idiv
std
fwait
xor
push
xchg
pop
(bad)
push
cli
fincstp
pop
pop
jg
jo
xchg
ffree
outs
adc
adc
cli
pop
pop
xchg
imul
dec
fbld
stos
(bad)
mov
sbb
in
(bad)
add
lahf
in
and
enter
ja
mov
sub
imul
outs
jmp
jnp
or
fnstcw
xchg
mov
cmp
xchg
mov
pop
shl
push
push
add
sub
pop
jno
out
mov
jnp
fst
add
sub
out
and
test
scas
popf
sti
xchg
ret
cdq
mov
bound
out
push
jae
jo
sub
inc
mov
test
shl
jecxz
xchg
call
inc
fwait
scas
inc
push
xchg
pop
(bad)
pushf
and
mov
mov
push
out
jecxz
xchg
jp
das
mov
and
shl
das
cld
inc
into
data16
cmp
jg
adc
xchg
or
mov
fldcw
jmp
stos
mov
jmp
cwde
and
retf
shl
pop
sbb
arpl
rol
jmp
xchg
fadd
in
cmp
js
xlat
in
scas
mov
lea
lahf
or
and
sbb
jmp
into
fdiv
sbb
jns
pop
jnp
pop
and
fmul
xor
pop
fsubr
xor
push
sub
sub
push
xor
stc
cmp
sahf
int3
sahf
cs
hlt
daa
push
stos
es
data16
icebp
or
stos
mov
mov
cmp
push
and
inc
test
push
cs
cli
xor
out
shl
cmps
mov
out
pop
inc
movs
sbb
push
retf
pop
test
xor
dec
not
dec
sbb
mov
out
push
or
into
mov
out
lea
jecxz
loop
mov
sbb
jno
fcomp
or
dec
jmp
inc
sub
lds
enter
add
and
push
pushf
pop
sahf
ds
inc
mov
add
push
out
push
cmp
pop
(bad)
sub
mov
push
mov
lods
dec
ror
push
jle
or
jmp
fcomip
xchg
jmp
repz
leave
fwait
dec
fcomi
clc
mov
jg
in
jle
(bad)
xor
xchg
mov
jae
fwait
and
xlat
sbb
mov
mov
fstp
movs
lock
fwait
int3
fild
lds
xchg
fisubr
cmp
test
fprem
idiv
pop
xlat
fdivr
mov
nop
sbb
in
pop
pushf
mov
mov
repnz
lds
mov
mov
mov
les
xor
adc
push
loop
fxch
jg
push
or
sahf
mov
iret
or
rcl
adc
mov
jno
int3
aam
ds
add
cmp
cmp
ss
cmps
ficom
mov
and
or
or
stc
fmul
add
sbb
mov
pop
xchg
div
mov
aam
pusha
lds
fisttp
push
mov
jo
(bad)
or
int
jmp
push
and
mov
mov
xchg
pushf
scas
ins
enter
icebp
sbb
int3
fbld
daa
mov
cmp
cld
in
pop
retf
js
loope
mov
add
cmp
loop
push
and
inc
jbe
imul
cmc
cmp
jecxz
push
test
sub
jecxz
sti
setnp
pop
cwde
clc
pop
loop
test
jns
pop
ficom
rcr
cmp
idiv
sub
adc
cmp
cmp
cmp
add
push
ja
adc
fild
imul
lds
mov
jmp
xlat
inc
daa
mov
pop
mov
jns
ins
sbb
fnstenv
sbb
adc
push
(bad)
cmp
movs
push
and
(bad)
movs
mov
push
mov
rcl
lahf
ret
and
retf
shl
xor
cmp
push
pop
jo
push
(bad)
lods
fistp
stos
fild
lods
or
cs
dec
xor
mov
push
sub
or
cld
mov
sbb
push
pop
icebp
mov
jge
cmps
jno
mov
or
sbb
repnz
push
adc
data16
inc
cmp
xor
ins
pop
cmps
lods
inc
mov
fbstp
cmp
inc
adc
sbb
into
xor
mov
aaa
xor
pop
imul
cs
test
sbb
icebp
or
mov
popa
sub
inc
imul
imul
add
jo
and
retf
cmp
out
cld
jecxz
mov
and
pop
in
mov
and
(bad)
xchg
dec
or
dec
mov
cmps
or
sub
sbb
fwait
cmp
xchg
shl
aaa
pop
js
xor
rcr
enter
sub
pop
mov
pop
shl
pop
nop
inc
pop
int3
xchg
mov
cmp
je
mov
(bad)
mov
loop
and
mov
stos
les
push
scas
jns
xor
cmp
cmp
ss
and
(bad)
cmp
sub
(bad)
shl
cdq
gs
fldl2e
js
xchg
mov
mov
repnz
icebp
or
mov
mov
add
fisttp
cmp
mov
(bad)
pop
xor
pop
add
push
sbb
jae
push
pushf
push
stos
js
in
cmp
test
in
push
enter
sub
sbb
push
and
mov
or
and
push
inc
jne
cli
outs
jp
fidiv
inc
adc
jns
je
retf
jb
scas
ins
in
lods
dec
xor
or
mov
imul
retf
das
outs
(bad)
sbb
lock
test
xor
adc
inc
dec
pop
and
(bad)
int
rcl
ds
fmul
icebp
xchg
out
js
adc
mov
inc
xlat
jge
push
inc
dec
data16
cdq
dec
repnz
adc
push
pop
inc
xchg
or
(bad)
xchg
test
cmp
in
(bad)
push
mov
loop
fild
cmp
push
in
sbb
cs
imul
pusha
adc
adc
add
jp
push
pop
push
call
fld
push
and
cmp
loopne
push
and
stos
add
sti
pop
jb
adc
pop
sbb
cmp
imul
idiv
adc
xor
mov
shr
test
and
cmps
out
mov
push
inc
stos
mov
in
lods
push
lods
xor
rol
push
lock
mov
mov
jmp
mov
xchg
and
pop
cmp
mov
out
je
iret
add
pop
add
fcom
dec
inc
add
xor
cmp
aas
mov
(bad)
xchg
addr16
adc
loope
mov
xor
or
ss
cmp
inc
sbb
add
mov
movs
jle
cdq
push
jmp
sub
sub
shl
loopne
scas
sbb
push
test
mov
loopne
xor
cmp
movs
jmp
adc
adc
fild
pop
xor
scas
mov
(bad)
xor
mov
xor
mov
adc
sub
mov
push
push
ret
retf
loop
adc
mov
cmp
cmp
push
pushf
mov
int
pop
add
mov
(bad)
mov
dec
(bad)
push
dec
(bad)
call
jecxz
aad
sbb
sar
jl
mov
xchg
mov
je
arpl
adc
dec
movs
pushf
sbb
mov
add
into
xchg
pop
add
pushf
fld
push
fdivr
or
push
jns
sbb
mov
jmp
xchg
cli
shr
jae
sub
add
js
shl
in
rcr
shr
icebp
pop
inc
inc
add
cmp
jl
inc
xor
add
push
cli
adc
dec
je
jo
push
sti
aas
dec
iret
sub
ja
mov
loop
push
retf
retf
jecxz
rcl
loop
or
add
and
add
aad
(bad)
jns
ret
inc
jg
add
and
xchg
movs
mov
imul
mov
dec
mov
add
leave
push
and
in
inc
(bad)
sbb
pop
jle
jl
lods
popa
mov
pop
scas
aaa
mov
jmp
(bad)
cmp
popf
add
loop
jno
je
loop
pop
cld
add
inc
mov
fstp
pusha
sbb
fs
pop
mov
mov
mul
mov
mov
fstp
movs
push
(bad)
aam
aad
fdivr
inc
sbb
adc
jl
mov
out
cmps
movs
jg
out
sbb
sbb
add
sbb
xchg
or
imul
movs
push
call
aaa
inc
xchg
fbld
fisttp
sbb
shl
in
dec
sub
fs
sbb
das
and
dec
mov
xlat
repz
xchg
or
xor
mov
out
repz
mov
shl
inc
(bad)
enter
sub
lds
jecxz
push
xor
sub
addr16
sub
lea
cmp
aam
in
xchg
outs
jnp
inc
mov
les
xchg
mov
pop
data16
inc
popf
mov
ins
jge
pop
cli
ret
(bad)
jnp
stos
cdq
cld
mov
jns
pop
xchg
xchg
clc
in
imul
or
xchg
sub
and
push
inc
xor
pop
xchg
mov
(bad)
jbe
test
or
sbb
mov
dec
sbb
jo
test
sub
aad
sub
dec
cmps
js
jmp
inc
fbld
loope
stos
mov
sti
and
pop
xlat
jne
fdiv
pushf
aad
cmp
stos
test
xchg
shl
sub
inc
popf
cmp
jecxz
inc
je
ja
arpl
jae
jae
adc
mov
das
in
nop
lods
mov
push
push
cdq
test
pop
mov
xor
sbb
bound
or
inc
inc
or
test
and
push
adc
leave
xchg
or
fild
shl
inc
and
pop
ins
add
inc
dec
add
stos
and
pop
pcmpeqd
dec
and
cmp
sub
adc
jnp
imul
mov
lea
cmp
jp
in
xor
dec
lds
(bad)
lods
cwde
test
pop
out
push
aad
ficom
movs
sbb
cmp
inc
sub
push
jmp
movs
adc
(bad)
arpl
(bad)
mov
daa
dec
cmc
imul
add
cdq
retf
rol
jo
mov
and
mov
xor
add
and
gs
xchg
rcl
jmp
jo
outs
mov
sub
and
fstp
adc
fst
inc
jecxz
inc
pop
xchg
mov
xor
lods
push
mov
and
frstor
shr
dec
xchg
aas
lea
push
lahf
(bad)
cmps
in
lods
lock
or
cwde
jbe
xchg
cwde
inc
mov
mov
pop
hlt
in
inc
inc
lds
mov
inc
add
jg
outs
shl
mov
xchg
aas
fwait
jae
mov
jmp
and
jnp
cmp
xor
xchg
not
test
mov
cld
mov
dec
sbb
sbb
lahf
int
movs
bound
jb
jae
or
sub
pop
push
dec
sbb
mov
mov
fdiv
pop
cmps
aad
mov
sbb
leave
cmp
pushf
scas
inc
fistp
inc
int
adc
test
sar
(bad)
dec
or
pop
fistp
ins
xchg
test
daa
xchg
pop
ror
ss
dec
in
dec
inc
inc
sahf
cmp
sar
repnz
xchg
cmp
sbb
hlt
sbb
in
mov
and
stos
cs
ss
fucomip
fld
dec
lods
cs
adc
pop
cmp
lds
push
sti
adc
int3
dec
and
mov
mov
push
mov
add
jge
or
mov
add
fs
xor
dec
and
outs
mov
in
xor
add
cmp
mov
arpl
mov
dec
or
shl
fist
aad
outs
adc
cmp
sub
fild
bound
xor
sub
cs
fdiv
les
out
call
mov
xchg
lahf
std
jmp
push
mov
sub
and
pop
add
loop
sbb
repz
push
fisttp
leave
gs
xchg
call
sbb
pop
jmp
outs
jne
icebp
ss
adc
in
jmp
dec
fwait
xor
std
loop
or
pop
pop
dec
and
outs
mov
push
sbb
cdq
or
dec
cdq
or
shl
adc
push
sar
(bad)
in
dec
push
dec
ficom
in
fisubr
mov
inc
ss
inc
push
ins
mov
out
mov
scas
shr
push
ds
inc
sub
adc
fldenv
cmps
repz
sbb
mov
popf
cmp
repz
nop
mov
ret
inc
ret
xchg
popa
(bad)
stos
inc
outs
lahf
xor
scas
daa
jecxz
stos
jl
xor
les
mov
sbb
lods
in
pop
xchg
adc
clc
jge
xor
aad
adc
pop
pop
sar
inc
(bad)
xor
ffree
clc
jle
mov
(bad)
mul
sti
inc
stos
stc
int3
sub
sbb
sbb
dec
push
fldcw
ins
int
mov
cmps
in
pop
mov
sub
mov
scas
jne
xlat
ins
shr
and
mov
dec
adc
mov
(bad)
popf
push
xor
fwait
je
in
pop
adc
mov
cmps
fstp
jl
shl
pushf
dec
mov
test
push
push
push
sbb
mov
je
mov
sbb
in
sbb
ds
inc
xor
pusha
pop
add
das
sbb
(bad)
dec
pop
addr16
stc
popa
pop
rcr
pop
xchg
inc
adc
or
and
sub
nop
xor
retf
sbb
in
adc
dec
ins
xchg
inc
pop
loopne
mov
mov
imul
mov
adc
and
fwait
retf
or
xlat
mov
add
adc
inc
mov
lds
mov
add
inc
sub
loop
xchg
mov
cmp
jmp
mov
(bad)
and
mov
add
adc
pop
dec
sub
xor
js
dec
sti
jge
mov
rcl
fsubr
mov
inc
xchg
cld
dec
adc
dec
fwait
retf
rcr
cwde
in
lds
outs
dec
add
jno
xchg
fist
sbb
push
or
pop
sbb
cmp
lds
je
ja
xchg
sub
pop
lahf
pop
mov
sbb
or
mov
xor
pop
(bad)
xchg
cmps
sbb
jl
popa
or
dec
pop
and
call
icebp
shr
mov
ins
sbb
data16
add
and
adc
mov
and
repz
call
cdq
cmc
leave
rol
das
xchg
pop
mov
push
sub
movs
hlt
sbb
out
mov
sbb
fst
shufps
std
not
jge
shl
mov
jg
xor
and
xchg
cmp
pop
sahf
ldmxcsr
mov
je
mov
adc
push
loopne
mov
sub
stc
dec
lods
cmp
in
mov
sar
fisub
push
push
xchg
lods
fsub
xchg
mov
xchg
cmps
pop
rcl
dec
out
shl
imul
cld
jno
(bad)
fnstsw
fld
lock
fcomp
(bad)
fwait
pop
add
dec
add
aaa
(bad)
fisttp
pop
push
loope
test
sti
jmp
sbb
aam
jl
jb
shl
adc
cmp
lea
push
ja
inc
mov
int3
push
and
dec
nop
xor
scas
jb
imul
sti
lea
pop
test
mov
js
sti
xor
cs
pop
imul
add
dec
sar
sbb
stos
stc
(bad)
xor
mov
or
shr
xor
jp
cs
push
cmp
loopne
or
mov
or
pop
inc
popa
mov
sbb
repnz
pop
mov
call
mov
fsubr
gs
imul
pop
mov
cmp
cmp
xlat
call
sahf
cmp
add
sub
arpl
out
sbb
dec
jno
js
loop
scas
retf
cmp
mul
mov
pop
mov
cmp
cli
shl
pop
int3
inc
pop
in
dec
bound
shr
mov
mov
pop
cdq
out
add
mov
cdq
in
in
xchg
ins
dec
mov
sub
popa
mov
jbe
test
in
push
sbb
xor
std
sub
imul
mov
push
addr16
cmp
xor
aas
dec
pop
hlt
inc
(bad)
xor
pusha
ret
out
jo
xor
and
cmp
in
adc
(bad)
pop
push
push
jp
loopne
or
mov
mov
sbb
(bad)
inc
sti
jecxz
mov
jbe
mov
and
lock
scas
stos
cdq
(bad)
out
test
pop
(bad)
mov
cmps
xchg
shl
sub
fidivr
outs
in
out
jecxz
daa
mov
inc
ret
jl
pop
or
shl
xchg
jge
pushf
or
adc
ret
sbb
or
cmp
cmp
out
sbb
dec
xchg
scas
iret
scas
pop
loopne
pushf
daa
mov
sub
xor
jae
outs
xchg
fsubr
xchg
pop
lods
mov
or
aad
push
adc
mov
and
or
fsub
lods
test
sbb
and
mov
mov
std
pop
fmul
sbb
mov
in
lods
int3
stc
sbb
mov
fcomp
lds
mov
fisubr
aas
push
in
xchg
in
arpl
mov
mov
in
or
push
aaa
mov
popf
imul
xlat
(bad)
cli
lds
mov
rcr
push
mov
jnp
mov
xchg
jno
jne
push
cdq
xor
fldenv
jns
enter
xchg
nop
in
mov
push
mov
push
jne
add
imul
je
and
test
push
ret
popa
mov
adc
dec
pusha
xchg
push
sub
(bad)
mov
dec
inc
sbb
sbb
and
jnp
bound
mov
push
call
test
adc
ret
push
stos
and
js
and
int
sbb
int
inc
sbb
mov
sbb
jmp
jge
aas
rol
mov
adc
mov
pop
retf
push
pop
gs
sub
or
ret
xchg
ret
dec
cmp
je
fimul
xchg
pop
cwde
not
imul
inc
dec
movs
xchg
fsub
lods
and
cmps
ins
pushf
lods
ins
cdq
ror
sbb
in
push
cmp
xchg
mov
cdq
add
imul
repnz
or
pop
inc
sub
stc
sbb
sub
sahf
add
jecxz
mov
icebp
cmp
add
nop
adc
int
and
adc
out
mov
fmul
test
daa
add
push
out
(bad)
pusha
ins
sub
jle
adc
es
rol
shr
push
ffree
dec
add
cmp
das
ret
movq
mov
xacquire
push
mov
retf
ds
mov
dec
adc
loope
and
inc
or
mov
rol
and
sub
repnz
mov
lods
mov
cwde
mov
mov
adc
or
cmps
or
mov
std
jg
sbb
rol
xor
mov
cli
test
or
sub
ss
stc
loopne
ret
div
icebp
fmul
jnp
sti
shl
leave
jns
(bad)
(bad)
and
cdq
xor
sub
mov
pop
sub
jge
inc
call
jmp
jmp
mov
lock
mov
test
popf
test
xchg
mov
inc
into
jne
loopne
xchg
mov
adc
sub
leave
ja
pop
and
stos
ds
ret
or
in
jge
and
sub
or
imul
(bad)
into
sub
xchg
jno
cmp
add
adc
mov
sbb
in
les
cmp
outs
pop
inc
and
sub
in
ins
push
lods
loopne
sbb
xchg
pop
jmp
push
in
or
(bad)
movs
inc
call
inc
ja
xchg
fwait
in
fild
push
mov
cmp
fld
jmp
movs
push
cld
mov
adc
lahf
xor
iret
ret
or
jo
jns
fldcw
ja
mov
sbb
scas
pop
sbb
stos
test
sbb
ret
scas
push
dec
inc
jl
mov
mov
xchg
fxch
ss
fstp
push
add
xlat
fisttp
je
push
add
jbe
sub
stc
sbb
xchg
hlt
jl
push
inc
ja
daa
adc
(bad)
cmp
sbb
jo
int
sbb
mov
daa
mov
dec
jg
mov
mov
pop
repz
sbb
or
dec
pop
ss
and
xor
(bad)
xchg
lahf
jl
sub
and
push
lock
loop
loopne
retf
jb
loop
push
(bad)
gs
xchg
add
inc
lock
pop
mov
xchg
and
in
retf
xchg
inc
movs
mov
iret
pop
imul
movs
inc
xor
sbb
enter
iret
or
jmp
add
or
mov
dec
jp
retf
jne
mov
pop
or
shl
mov
nop
out
sbb
jnp
sbb
popf
pop
je
sbb
(bad)
adc
sub
jo
push
xchg
sbb
lahf
cdq
cld
repnz
loopne
mov
ins
lea
ret
mov
dec
je
inc
aas
adc
adc
xor
adc
or
inc
cwde
inc
pop
test
loop
sub
cmp
xor
inc
out
jg
lea
or
push
jo
addr16
push
push
popf
dec
retf
into
fadd
pop
adc
int
xchg
nop
test
adc
and
lods
push
pop
pop
je
mov
cmps
imul
jle
xor
jp
test
xchg
cmps
popf
leave
push
enter
popa
sbb
data16
ss
fnstcw
xchg
adc
dec
ja
loop
mov
es
daa
xor
sbb
xlat
sbb
fdiv
sub
inc
inc
cmp
pop
into
js
pop
dec
lods
mov
imul
int
adc
ror
out
cld
call
add
jb
add
movs
sbb
sar
xor
jecxz
and
and
jbe
push
lahf
mov
add
clc
ror
(bad)
sahf
inc
inc
and
imul
and
pop
sbb
je
sahf
fisttp
sbb
inc
xchg
or
out
push
sbb
outs
imul
inc
sub
or
push
out
xor
xchg
xchg
dec
jno
fnstenv
fsubrp
je
adc
xchg
nop
pop
sub
push
nop
inc
jmp
ds
(bad)
adc
push
mov
stos
jp
cwde
mov
les
mov
mov
iret
xor
mov
mov
shr
or
jge
test
add
pop
inc
sub
sbb
shl
pop
jno
ret
mov
mov
jmp
cmp
inc
(bad)
pop
or
sahf
mov
adc
sub
jno
sar
(bad)
retf
or
dec
dec
pop
lahf
cs
repnz
jmp
jno
addr16
cmp
mov
and
sub
dec
outs
cmp
shl
jo
sbb
mov
in
mov
ror
pop
add
fdiv
sti
and
fldcw
rcl
adc
lods
hlt
stc
jo
into
mov
ss
and
cmp
retf
in
inc
mov
mov
mov
cs
icebp
push
mov
mov
les
mov
hlt
ins
clc
mov
stos
mov
adc
sbb
sar
inc
ss
inc
cmc
ds
into
cmc
mov
jbe
xchg
pop
cmp
sbb
(bad)
in
es
addr16
inc
pop
mov
pop
and
xchg
jb
dec
call
ror
mov
xor
dec
push
ret
ins
pop
mov
adc
and
inc
adc
pushf
jp
lods
ret
loope
add
jmp
rol
pop
dec
push
adc
xlat
sti
xor
es
pop
inc
or
sub
jle
cmc
and
mov
loop
imul
and
lea
out
mov
shr
lahf
fldcw
rcl
das
idiv
js
sbb
pushf
gs
mov
(bad)
jle
movs
(bad)
clc
xchg
mov
dec
push
in
xchg
loopne
dec
(bad)
mov
or
push
dec
push
sub
xchg
mov
je
xor
loopne
and
in
clc
aad
popa
mov
xchg
jl
addr16
xchg
sar
nop
dec
es
inc
xchg
mov
xor
add
out
pop
ja
test
(bad)
mov
xlat
ds
fnstsw
fisttp
sub
lahf
jmp
aas
and
movs
sbb
dec
packssdw
xchg
inc
neg
sbb
xor
loopne
inc
je
xor
es
mov
inc
adc
popa
repz
in
push
inc
std
(bad)
cmp
xchg
push
add
cmp
xor
xor
test
mov
jno
nop
mov
cdq
pop
pushf
inc
push
inc
fnstsw
dec
(bad)
pop
jne
sub
retf
mov
adc
fwait
xor
adc
sub
fimul
cmp
in
add
mov
pushf
movs
mov
mov
sar
inc
and
push
mul
scas
push
aaa
jmp
imul
arpl
pop
pop
outs
lds
imul
loope
test
call
jg
dec
jbe
stos
cmp
and
(bad)
or
adc
ficomp
xchg
hlt
mov
ret
add
mov
(bad)
pop
jle
pop
cmc
rcl
fidivr
into
xchg
xchg
or
xor
stos
jmp
aas
js
push
retf
in
not
sbb
sbb
inc
push
push
inc
loop
sbb
int
lds
jg
jmp
shl
inc
shl
movs
xor
push
mov
inc
pop
pop
cmp
jp
sub
pusha
das
lods
xlat
mov
push
sub
sahf
cli
xchg
test
js
pop
out
icebp
xchg
rcr
mov
(bad)
dec
jg
add
sbb
or
sti
enter
ins
outs
xor
dec
pop
cmp
sub
sbb
imul
imul
push
arpl
loopne
sub
dec
and
xchg
call
cmp
cmps
pushf
add
ror
adc
leave
ja
and
bound
ss
or
adc
add
ins
push
lods
test
add
mov
push
mov
(bad)
retf
cmp
pop
pop
cmp
or
mov
sbb
mov
xor
lock
push
mov
pop
mov
xchg
adc
add
sbb
rcr
loop
inc
and
pushf
es
ja
(bad)
movs
xchg
test
lock
rol
or
jno
idiv
adc
adc
xchg
cmp
fidiv
sar
sbb
dec
pusha
xchg
cmp
mov
lock
retf
add
dec
adc
cli
or
int3
add
inc
clc
ins
jb
and
or
mov
xor
dec
mov
pop
leave
push
rcl
mov
dec
popa
pop
call
push
or
adc
sub
push
sahf
xor
push
pop
pop
pop
push
cld
(bad)
aaa
sbb
sub
or
nop
jl
pop
xchg
jecxz
xchg
add
xor
rcl
add
ins
test
jo
fwait
loopne
repnz
cli
xor
or
mov
popa
pop
int
adc
(bad)
push
mov
in
cli
or
fnstcw
rcl
adc
ror
add
and
pop
enter
(bad)
cld
mov
pop
dec
cmp
or
or
lea
aam
inc
mov
or
(bad)
iret
retf
cmp
adc
addr16
pop
icebp
jno
dec
add
ss
clc
and
dec
adc
sub
cld
pop
sbb
jge
dec
cmp
scas
xchg
shl
(bad)
dec
outs
mov
xor
rcl
mov
xor
scas
dec
js
mov
(bad)
aas
push
add
jg
ror
adc
setge
dec
pop
push
je
or
xchg
call
push
cdq
sbb
lahf
mov
out
pop
sbb
daa
mov
push
sahf
js
(bad)
dec
mov
dec
adc
push
cmp
xchg
xchg
mov
repnz
fwait
add
fs
int3
int
outs
cmp
push
push
adc
mov
pop
nop
and
add
ficomp
sub
jge
stos
ret
add
push
add
mov
mov
fwait
xchg
pop
xchg
xchg
pop
bound
mov
sbb
sbb
push
enter
dec
mov
and
ret
neg
mov
mov
dec
sub
movs
or
cmps
xchg
stos
push
jg
daa
xchg
repnz
or
loope
sbb
rcr
les
or
outs
jbe
sub
dec
dec
pop
xchg
lods
mov
dec
inc
push
sbb
adc
xchg
push
ret
in
aam
add
mov
jp
mov
adc
sbb
mov
mov
(bad)
ins
rol
cld
std
mov
sbb
ret
fstp
fisttp
into
into
repnz
xchg
push
aam
addr16
push
(bad)
das
pop
pop
ja
jne
push
and
dec
sbb
jne
pop
xor
int
rol
int3
mov
sbb
retf
les
inc
sar
push
scas
ss
stc
sbb
cdq
fwait
mov
sub
cmps
mov
ficomp
cmp
jb
or
xchg
sub
and
dec
jae
add
loope
fmul
pop
jg
or
cdq
mov
aaa
inc
xor
adc
hlt
mov
dec
leave
addr16
enter
mov
pushf
mov
stc
inc
jecxz
cld
cmp
jne
dec
mov
aad
hlt
dec
sub
mov
or
inc
popf
int3
xlat
and
ss
call
mov
mov
lahf
arpl
gs
shr
repnz
pop
push
lds
jno
scas
shl
cld
pop
pusha
in
mov
pop
test
jmp
(bad)
shr
mov
or
mov
pop
sub
xchg
mov
and
gs
retf
out
adc
mov
or
call
js
call
test
or
fs
movs
out
call
mov
inc
mov
dec
loopne
add
or
out
inc
(bad)
add
push
jb
mov
(bad)
push
adc
mov
je
cwde
daa
int
sbb
adc
ret
and
mov
push
and
sub
inc
ret
inc
cdq
or
fwait
add
xchg
xor
iret
sahf
xchg
fisttp
(bad)
lods
inc
xlat
adc
in
aas
imul
cmp
cmps
sbb
sub
sub
mov
addr16
sbb
hlt
nop
xchg
fsubr
inc
mov
movs
test
xor
pop
jns
ficom
mov
je
pop
mov
cli
imul
aam
nop
aad
call
aad
jb
cmps
jnp
dec
adc
push
adc
or
movs
test
pop
add
int
jle
push
fldcw
push
js
sub
and
cmps
push
nop
popf
lods
(bad)
retf
mov
repz
sbb
xor
repz
adc
cmp
pop
rcl
push
sbb
mov
jmp
rol
mov
add
test
js
jo
add
or
add
jge
sub
rol
pop
fstp
jecxz
add
ins
pop
jmp
dec
stc
and
jmp
push
mov
cli
sub
lahf
sub
adc
aaa
fidiv
js
pop
mov
add
inc
push
push
pop
(bad)
rol
xchg
adc
mov
ror
scas
mov
push
inc
xchg
jo
and
sti
loopne
pop
adc
(bad)
xor
stos
cmp
jae
pop
iret
test
aad
or
daa
mov
jmp
sahf
in
sub
mov
into
mov
stc
add
pop
fsubr
xchg
inc
ror
fbld
jge
dec
ja
sbb
cmp
aam
sub
dec
mov
cmp
sbb
les
or
mov
adc
xchg
ja
outs
push
jno
icebp
xor
fld
popa
pop
xor
bound
adc
rcl
aam
jmp
xchg
push
popf
pop
lahf
aad
retf
mov
iret
mov
out
mov
pop
pop
lea
mov
neg
jg
out
jl
repz
cmp
cmp
jg
xor
mov
cld
clc
ins
mov
inc
ror
test
gs
sub
ret
jno
aas
cmp
out
jnp
ins
mov
loop
cdq
pop
(bad)
das
push
inc
fcmove
pop
sbb
dec
mov
call
push
or
push
and
add
dec
and
bound
jo
pushf
ret
shl
push
pop
retf
clc
push
mov
pop
out
jge
inc
mov
dec
pop
lods
push
aaa
imul
clc
mov
mov
xlat
pop
dec
xchg
lods
xor
pop
call
cdq
mov
dec
shr
leave
mov
adc
pop
add
push
cmc
addr16
int
dec
iret
fmul
int3
mov
cmp
add
stos
loope
fwait
xlat
mov
fmulp
int
pop
and
jns
lods
add
jns
lods
ror
iret
outs
mov
sub
ds
leave
clc
pop
cmps
sub
jl
dec
rcr
lods
mov
xor
push
mov
icebp
mov
mov
sbb
(bad)
and
add
je
lods
clc
pop
pop
addr16
xor
jnp
(bad)
(bad)
or
mov
dec
cmps
mov
pop
dec
adc
or
add
sbb
adc
jmp
sub
and
sub
fnsave
loop
or
in
sbb
(bad)
cld
pop
xor
(bad)
sub
retf
js
cmc
and
dec
shr
push
iret
stc
call
jmp
js
dec
shl
mov
xchg
sbb
repnz
push
aam
loop
ins
inc
dec
nop
cld
ror
(bad)
fsub
into
in
mov
adc
cmp
repnz
jns
inc
push
add
pop
stc
xor
or
inc
and
aam
ja
mov
jnp
pop
pop
or
jmp
(bad)
dec
cmp
cmps
cdq
xchg
adc
sbb
sub
retf
movzx
inc
dec
icebp
xchg
out
js
enter
fs
and
mov
adc
pop
es
outs
clc
popa
out
jp
cmp
xchg
mov
stos
cmp
dec
mov
ja
ins
popa
cmps
outs
adc
and
push
nop
add
add
lock
cmp
inc
sub
(bad)
movs
mov
and
adc
cmps
(bad)
cmp
fisttp
xor
push
leave
loope
xchg
jg
and
call
fcom
xor
dec
add
aas
sbb
repnz
stc
neg
mov
jmp
mov
sbb
loop
movs
mov
pop
dec
mov
sahf
mov
out
test
retf
push
scas
mov
adc
pop
inc
cmp
(bad)
and
cwde
addr16
hlt
push
(bad)
or
ret
sub
stc
icebp
addr16
add
pop
jbe
and
dec
or
cdq
jl
cmp
arpl
lea
pop
mov
gs
jl
ficomp
jl
pop
xor
ss
stc
jle
mov
div
mov
jne
xchg
sub
pop
and
xchg
jg
aas
mov
lahf
lds
xchg
or
call
pop
mov
pop
mov
sbb
push
stos
jmp
mov
sub
mov
sub
cmc
loopne
cmp
ins
adc
mov
inc
sar
xor
or
and
xchg
push
jbe
into
sar
les
je
in
ins
push
dec
sbb
inc
xlat
daa
mov
xlat
adc
jne
inc
data16
push
cmp
sahf
cmps
inc
icebp
ds
(bad)
call
mov
pop
mul
(bad)
jns
hlt
clc
fst
dec
jo
mov
pop
fidivr
out
push
push
push
dec
aaa
mov
or
(bad)
mov
lods
fs
ja
out
pushf
aaa
movs
cmp
lods
stc
mov
jbe
sub
stos
and
lds
cwde
fcmovnbe
dec
xchg
sbb
sub
leave
mov
push
ins
jge
xor
adc
pop
mov
mov
add
xchg
sub
in
es
sub
sti
(bad)
mov
pop
pop
dec
out
les
lahf
int
aas
call
enter
outs
ss
pop
mov
mov
pushf
mov
jnp
arpl
ins
sub
mov
shl
mov
dec
retf
rcl
in
jnp
cs
lods
pusha
push
mov
push
icebp
adc
inc
and
scas
out
ss
ret
fstp
dec
das
ds
xor
fmul
iret
aaa
imul
mov
sbb
in
inc
or
xor
mov
jmp
fbld
std
stos
pop
ja
gs
(bad)
(bad)
std
pop
movs
retf
inc
mov
cmp
pushf
dec
mov
inc
cmp
mov
jp
cs
mov
pop
test
jmp
aaa
push
pushf
adc
imul
xchg
push
loope
mov
push
inc
pop
add
mov
jge
(bad)
test
addr16
mov
adc
(bad)
cmps
shr
out
dec
(bad)
int3
or
loope
scas
xor
cld
(bad)
pop
xor
cwde
or
push
or
dec
or
jmp
fisttp
icebp
jno
mov
add
sbb
dec
(bad)
pop
pushf
cli
cmps
xchg
lea
cli
or
sbb
add
rcl
jne
lahf
mov
inc
lods
outs
outs
out
mov
adc
fidivr
cld
dec
test
or
and
enter
mov
pop
xchg
mov
inc
and
retf
xor
test
jb
stos
imul
cmp
cmp
jmp
enter
mov
ins
stc
scas
mov
ss
stc
in
scas
add
ja
bt
popa
retf
cmp
adc
pop
bound
inc
pop
nop
mov
lahf
xlat
data16
mov
or
scas
dec
add
xchg
lock
hlt
push
ins
mov
dec
inc
push
std
scas
xor
ret
or
xor
inc
pusha
sub
mov
cld
mov
in
call
ins
cmps
xchg
iret
scas
mov
in
push
sti
xor
fimul
shl
jge
xchg
xlat
push
aas
push
inc
dec
aad
arpl
mov
and
fsub
(bad)
popa
sub
mov
mov
add
push
fild
(bad)
jge
mov
push
sub
and
jmp
jl
test
pop
nop
push
add
sbb
add
repnz
stc
popf
leave
das
cmp
dec
and
jmp
aad
movs
mov
mov
or
and
bound
xor
je
inc
jmp
aas
inc
jne
adc
int3
ret
or
repz
push
call
inc
push
jo
std
jmp
push
dec
lds
jmp
push
test
xchg
inc
jns
fs
pop
dec
into
inc
pushf
pushf
jb
in
jb
xor
sbb
xchg
cmps
mov
stos
add
sbb
mov
push
js
cld
popf
and
es
mov
retf
addr16
(bad)
mov
fs
inc
nop
sub
sahf
dec
adc
loop
fisubr
repnz
shl
lock
xor
stos
push
mov
test
fs
inc
add
and
(bad)
div
push
les
or
xchg
adc
or
ficom
je
jle
ficomp
fwait
xlat
cli
lods
(bad)
aas
jmp
jp
inc
retf
xchg
rcr
fdiv
sar
cwde
aaa
jne
dec
sbb
test
int
jno
maskmovq
das
pop
pop
jmp
cmps
call
xchg
mov
or
(bad)
lock
and
dec
outs
xor
out
int3
push
or
inc
sbb
(bad)
sahf
sbb
test
in
or
fistp
(bad)
push
dec
mov
(bad)
sbb
inc
fld
fstp
sub
shl
mov
pop
nop
xchg
movs
xchg
dec
jne
aam
aam
retf
enter
(bad)
repz
cmp
xchg
sub
pop
mov
movs
loope
pop
and
lock
shl
cmp
xor
push
aam
jl
inc
inc
in
fidivr
cmc
or
inc
ins
xor
pop
fmul
mov
mov
imul
mov
cmp
fiadd
jnp
push
popf
adc
int3
retf
cmp
popa
or
shl
out
mov
fist
jmp
ds
sbb
jns
inc
test
mov
xchg
or
fistp
mov
hlt
mov
mov
or
adc
mov
test
leave
mov
daa
pop
inc
push
mov
in
xor
mov
sub
in
cmp
loope
jmp
arpl
(bad)
arpl
inc
and
push
xor
(bad)
(bad)
cmps
mov
jge
aaa
aas
pop
pop
ficomp
pop
imul
dec
add
inc
int
mov
rcl
inc
fadd
div
mov
les
js
pop
sub
sub
jmp
leave
mov
inc
nop
dec
pop
loope
xor
retf
sub
inc
mov
or
dec
adc
fs
in
jno
arpl
daa
xlat
pop
dec
test
outs
dec
int3
inc
mov
adc
ficom
dec
push
sbb
(bad)
das
das
ins
xor
sbb
(bad)
adc
stos
ins
mov
pop
jb
out
mov
fcomp
adc
pushf
mov
scas
mov
add
pop
pusha
push
into
sahf
sub
mov
movs
test
mov
(bad)
jmp
mov
mov
push
fstp
and
add
into
inc
pop
mov
les
adc
mov
fild
adc
sub
cld
mov
adc
or
add
icebp
jl
push
call
sbb
fs
cmps
call
cmps
inc
dec
lods
mov
fs
dec
jmp
or
pop
mov
sar
add
sti
dec
nop
add
ficom
xchg
dec
jmp
pxor
lds
pop
fild
das
in
icebp
nop
cmps
add
jo
cdq
ret
retf
jbe
mov
inc
mov
iret
cli
add
mov
sub
mov
iret
cmps
ficomp
and
jmp
sahf
mov
mov
ss
mov
div
push
fidiv
iret
jle
test
or
hlt
in
in
outs
xor
inc
(bad)
add
lods
sub
jmp
daa
into
sahf
dec
jmp
fucompp
lea
add
push
mov
mov
retf
xchg
xor
retf
fs
mov
popf
mov
xchg
or
add
outs
mov
sub
cmp
mov
sbb
adc
xor
stos
xchg
push
in
imul
and
adc
jbe
cmc
or
push
cmps
inc
movs
mov
mov
fidiv
and
js
dec
ins
and
in
imul
mov
aam
das
add
scas
jg
mov
push
pop
(bad)
(bad)
mov
(bad)
xchg
ret
sbb
cwde
or
int3
mov
inc
mov
loop
mov
movs
scas
test
push
adc
(bad)
es
dec
cdq
icebp
push
mov
push
dec
pop
test
ret
or
mov
mov
jl
mov
in
jo
mov
clc
push
mov
ret
cmp
popa
mov
add
cmps
loopne
das
(bad)
icebp
ins
(bad)
in
cmc
jge
inc
jbe
mov
sub
jbe
(bad)
jnp
gs
stos
lds
inc
dec
aam
jnp
push
jne
cmp
ret
xor
repz
mov
push
add
pushf
test
mov
cwde
cwde
lock
mov
pusha
call
adc
jl
dec
fcom
in
dec
je
fadd
or
adc
jnp
lea
pop
inc
cmps
das
adc
les
jmp
mov
fiadd
leave
loope
in
imul
inc
sub
and
adc
scas
cmp
mov
popa
add
xor
cdq
add
inc
jbe
xchg
scas
aad
rcr
ins
sbb
adc
xchg
adc
cld
pop
repnz
push
jmp
pop
xchg
mov
leave
imul
xchg
repnz
pop
enter
push
in
out
pop
or
push
jo
push
pop
adc
loop
and
inc
mov
adc
mov
int
les
and
jnp
adc
sbb
sub
fwait
mov
mov
fsub
add
fs
fisttp
pop
sbb
jmp
ret
cs
push
xchg
add
inc
jbe
into
xchg
xchg
icebp
jecxz
cmc
inc
call
push
je
stos
mov
enter
inc
out
rcr
jae
xchg
xchg
adc
rcl
icebp
fs
jecxz
mov
scas
les
mov
push
sub
sub
into
(bad)
push
mul
sub
cmp
out
xchg
int
sbb
sbb
inc
xlat
push
or
scas
cmp
jmp
ins
jmp
shr
aaa
mov
aam
out
pusha
xchg
inc
popa
xchg
retf
ror
aad
enter
fistp
mov
mov
sub
loop
pop
xor
scas
or
es
mov
or
out
jno
test
les
add
(bad)
mov
(bad)
sti
and
push
pusha
scas
icebp
retf
mov
jmp
xchg
push
xchg
pop
pop
in
nop
es
cs
cmp
push
das
or
out
pop
cdq
dec
out
ret
retf
and
movs
outs
sub
arpl
sub
xor
push
loopne
call
jle
in
dec
and
push
pop
(bad)
nop
test
call
push
jecxz
fs
and
pop
call
loopne
mov
pop
(bad)
enter
outs
pop
xor
jmp
push
fcmovbe
cli
push
add
cmp
mov
div
push
inc
fdivr
scas
adc
cwde
outs
cmps
retf
and
mov
dec
aas
popa
cmp
jnp
dec
sbb
sub
mov
mov
leave
add
mov
mov
aam
cmp
out
out
daa
aad
mov
and
les
cs
add
xor
sbb
jbe
and
loop
jae
retf
outs
mov
add
xchg
pop
pop
ror
jl
mov
invd
outs
out
mov
int3
cdq
jmp
sbb
xchg
cmps
int3
rol
cli
or
mov
into
and
jne
pop
dec
pop
in
pop
call
fadd
popa
and
mov
jmp
enter
cmp
jecxz
cli
add
(bad)
jl
ret
mov
aam
and
icebp
cmps
push
scas
sbb
dec
jl
mov
xchg
imul
(bad)
xchg
sub
push
xor
mov
cmp
popf
popf
stos
in
lods
mov
push
push
adc
lods
jmp
(bad)
adc
xchg
cmp
out
jno
cld
aam
and
jmp
inc
lds
sbb
mov
jno
jno
clc
dec
imul
fsub
pop
push
add
int
and
fsubr
sbb
pop
and
(bad)
mov
inc
pop
std
cmp
mov
mov
or
xor
cmp
mov
syscall
push
ss
je
xor
rcr
sbb
dec
popf
out
jo
gs
sbb
cmp
ins
adc
pop
xor
imul
xchg
(bad)
out
cmps
xchg
fs
push
icebp
call
sbb
dec
shl
jae
movs
sahf
jns
pop
(bad)
nop
mov
mov
inc
aaa
inc
(bad)
bound
mov
ret
push
out
push
xchg
mov
cwde
add
mov
cli
xor
sub
in
fwait
adc
jbe
pop
cmp
aam
dec
fldenv
mov
sti
xor
scas
scas
mov
mov
data16
test
cwde
popf
pop
sub
and
xchg
add
sub
sbb
test
inc
sar
cmps
sar
inc
push
hlt
jo
ja
push
scas
jl
push
add
xlat
fwait
pop
sbb
mov
push
lock
cmps
sbb
cmc
retf
xlat
cli
repnz
(bad)
mov
mov
ret
into
xchg
(bad)
(bad)
or
adc
popf
mov
pop
add
cwde
call
jno
sub
inc
xchg
mov
and
jle
stc
dec
push
scas
sub
mov
aad
movs
sub
out
pop
pop
cli
jle
xchg
dec
add
loop
aam
xlat
sahf
pop
jns
mov
or
mov
sbb
xchg
cmp
dec
(bad)
add
mov
and
cmp
and
ret
mov
xor
pop
les
sbb
jmp
leave
sbb
or
dec
adc
cld
loop
mov
mov
(bad)
push
repz
dec
push
fadd
aad
mov
ret
ret
push
stos
std
mov
int3
mov
js
call
mov
xchg
(bad)
push
ret
push
push
(bad)
das
loope
or
dec
stos
mov
sub
test
sub
xor
or
xor
dec
pop
test
push
mov
adc
mov
(bad)
adc
xor
retf
xchg
jae
stos
pop
jl
imul
mov
(bad)
or
mov
test
out
out
pop
jnp
sub
bnd
mov
or
aad
inc
dec
push
mov
(bad)
push
jle
in
pop
in
stos
push
add
in
hlt
sbb
outs
add
mov
sbb
mul
imul
cmp
cld
sbb
adc
sub
out
test
jl
xor
aam
pushw
cmp
outs
xor
pop
xor
stos
and
and
(bad)
cmp
ss
jnp
sbb
jle
sbb
cmc
cld
mov
jge
cmp
sbb
(bad)
clc
test
xor
push
aam
cmp
clc
not
cmp
jl
jno
lods
es
jle
ficomp
mov
cmc
mov
lods
pop
mov
pop
ror
or
xchg
retf
pop
pushf
push
dec
jl
pop
push
pop
out
inc
add
mov
test
sbb
retf
fbstp
cmp
test
leave
push
or
dec
inc
aad
ficom
sahf
or
jnp
xor
adc
data16
retf
into
in
add
test
leave
xchg
push
add
es
fld
adc
mov
or
cld
inc
std
dec
iret
mov
push
pop
nop
loopne
push
es
push
loop
sahf
sbb
or
mov
xor
jo
jge
xchg
sub
xchg
fisub
inc
adc
push
addr16
in
and
sbb
fwait
in
je
rcr
sbb
pop
jo
lods
inc
sbb
adc
add
ret
adc
inc
mov
pusha
(bad)
(bad)
icebp
push
loopne
cmps
mov
jmp
fist
pop
xlat
lods
mov
inc
adc
push
dec
and
xor
adc
fldcw
pop
push
adc
or
sbb
push
ins
and
(bad)
lods
jb
aas
push
sbb
lahf
xor
call
mov
test
arpl
sbb
adc
or
(bad)
push
cmc
imul
push
ja
les
lea
ja
or
push
or
scas
jno
mov
out
adc
jp
xlat
jge
pop
mov
(bad)
sbb
gs
inc
test
jbe
jmp
int3
aam
push
push
dec
mov
push
ins
mov
and
adc
scas
data16
je
mov
xchg
jns
cmp
pop
fs
shr
mul
das
cmp
push
xlat
imul
mov
jae
jns
dec
push
push
dec
repnz
adc
lods
cmps
out
push
jl
push
rol
mov
dec
jne
inc
xor
(bad)
push
in
mov
or
fisubr
jbe
xor
dec
mov
xor
pushf
mov
(bad)
xor
xor
mov
fstp
dec
and
adc
dec
mov
jmp
stc
stos
outs
daa
fwait
(bad)
imul
dec
mov
sub
dec
jl
arpl
cmp
xor
push
retf
dec
div
sub
mov
enter
mov
div
jl
(bad)
jno
cmp
pushf
(bad)
(bad)
or
sub
xchg
adc
xchg
mov
sub
fwait
(bad)
(bad)
das
jbe
shl
int
out
xchg
cmp
loopne
jge
inc
mov
sti
and
sbb
and
push
retf
scas
cld
rcl
dec
push
bound
jno
test
cmps
mov
mov
call
loopne
repnz
xor
int3
or
pushf
popa
jl
(bad)
in
mov
cmp
push
sbb
adc
push
loope
pop
aaa
sbb
sbb
iret
pop
mov
scas
xor
ja
mov
push
inc
loop
leave
call
(bad)
and
test
cmp
ja
add
xor
and
cmp
sbb
pop
mov
loop
mov
xor
adc
mov
mov
xchg
repnz
jl
pop
repnz
jnp
pop
retf
sbb
call
jg
mov
jg
hlt
mov
push
out
das
cdq
mov
dec
repz
mov
dec
icebp
jbe
mov
jb
(bad)
cmp
movs
in
xor
(bad)
fsubrp
push
popf
sahf
sahf
pop
stc
add
idiv
ja
mov
push
loope
jns
xchg
jl
pop
ins
and
fiadd
mov
xchg
or
test
sbb
xchg
enter
sahf
aas
(bad)
std
pop
icebp
in
inc
punpckhwd
xor
movs
loope
push
cdq
pop
leave
jge
dec
dec
jb
mov
fstp
ficom
mov
and
add
jb
cmp
mov
out
adc
cmp
and
(bad)
cmp
mov
sbb
mov
arpl
shr
mov
pop
data16
inc
movs
xor
cmp
test
ret
cmp
rcr
es
xchg
push
lods
xor
sub
xchg
mov
(bad)
jecxz
inc
inc
rcl
inc
mov
push
xor
cmp
(bad)
inc
cmc
dec
arpl
rcr
ins
leave
scas
sahf
ins
jo
fstp
push
push
cmp
inc
pop
jnp
je
mov
pop
test
push
leave
sar
push
push
sub
inc
mov
jae
cmp
inc
fwait
mov
leave
jns
inc
add
and
mov
mov
movs
iret
dec
aad
(bad)
scas
lds
js
or
(bad)
jbe
push
std
and
dec
cs
push
mov
pop
fcomp
xchg
sbb
adc
(bad)
push
and
in
enter
jnp
(bad)
retf
adc
fiadd
dec
ret
xor
pop
ins
retf
push
mov
push
fsub
inc
fstp
mov
out
leave
xchg
and
loopne
rep
xchg
test
movs
dec
sub
ins
mov
sbb
pop
jecxz
adc
or
dec
mov
nop
inc
xor
mov
sti
ss
enter
jo
mov
(bad)
and
xor
and
jp
xchg
rcl
js
xchg
test
fdiv
stos
std
outs
int3
pop
(bad)
mov
xchg
fisttp
jno
add
stc
mov
or
and
pop
mov
mov
cmp
ds
xchg
sbb
cmps
sub
aam
sbb
fsubr
sub
xchg
cli
sbb
jmp
jb
das
jmp
adc
movs
mov
xchg
add
cwde
adc
movs
inc
std
or
cld
jmp
test
fs
cs
jg
jle
lods
inc
xor
ins
fistp
jecxz
cmp
cld
adc
or
and
shr
push
cwde
cli
or
pop
mov
shl
mov
loopne
out
xor
jne
jp
xor
outs
in
mov
aaa
push
push
ss
fwait
(bad)
movs
addr16
ret
cmp
push
mov
fmul
or
mov
add
xlat
or
scas
outs
xor
cli
out
in
jmp
cli
inc
in
ss
cmp
xor
pop
sub
pop
xor
ins
mov
cdq
scas
dec
mov
mov
mov
xchg
cmp
sub
lods
xchg
imul
jmp
or
cmp
stc
sti
repz
out
xchg
or
add
aaa
(bad)
add
fldcw
ds
add
mov
hlt
adc
inc
in
shl
test
lea
or
add
adc
addr16
in
add
rcl
outs
stc
dec
popa
or
ins
sbb
ins
cmps
dec
je
into
adc
add
xchg
rcr
test
int3
sbb
mov
cmp
leave
out
xchg
xchg
add
pusha
(bad)
lock
into
pop
xchg
out
mov
push
idiv
push
push
pop
ja
or
xor
or
mov
sub
sti
movs
inc
sti
imul
cmp
jmp
in
add
cdq
sahf
jecxz
inc
jecxz
jecxz
loop
loope
hlt
push
mov
jmp
js
lahf
mov
mov
idiv
cmp
mov
movsx
pop
jb
addr16
(bad)
dec
xchg
mov
dec
movs
aas
inc
sub
add
dec
ja
nop
or
iret
icebp
arpl
(bad)
aas
test
lods
out
jle
add
mov
mov
cld
cmp
call
and
jecxz
std
dec
imul
xlat
mov
jmp
movs
dec
pop
adc
cmp
arpl
test
push
fsubr
adc
cmps
(bad)
mov
fisttp
rcr
push
mov
ret
jp
je
mov
call
adc
test
clc
cmp
cs
ins
and
xlat
test
fmul
ins
cmp
xor
sahf
fwait
fwait
cmp
cmp
adc
movs
jns
mov
push
and
cmps
mov
add
sbb
pusha
jbe
push
cs
and
jb
and
into
out
jbe
cmp
sbb
ins
lds
jp
sbb
cmp
clc
mov
aam
mov
push
mov
nop
sar
fidiv
pop
jnp
test
mov
icebp
scas
pop
(bad)
adc
pop
int
mov
(bad)
shl
push
pop
mov
push
inc
test
push
stos
and
inc
leave
xchg
out
rcl
les
xchg
sub
push
scas
dec
das
or
loopne
push
sbb
repnz
jmp
inc
cmps
mov
outs
addr16
adc
stos
ret
adc
cdq
dec
inc
add
stos
ins
mov
out
popa
sub
sti
arpl
out
or
inc
(bad)
bound
push
mov
xor
sti
adc
repnz
sar
add
scas
call
adc
mov
nop
mov
jle
leave
xchg
dec
mov
dec
push
nop
pop
xor
add
scas
push
test
std
rol
jge
jne
into
imul
adc
cmp
cmp
shl
jns
push
xchg
mov
nop
stos
rcr
call
jns
shl
out
cmc
les
or
mov
rcl
or
pop
mov
cwde
(bad)
mov
sub
xlat
push
in
jecxz
sti
mov
pusha
scas
nop
les
ret
je
push
in
mov
hlt
outs
retf
push
out
lods
mov
sbb
dec
push
xchg
rep
enter
xor
adc
(bad)
add
int
push
shl
ds
ficomp
lahf
out
mov
inc
jb
sbb
mov
loopne
lea
ins
cmp
loopne
push
fucomp
push
fdivr
stos
ss
fmul
fwait
retf
cmp
fmul
out
dec
lods
loop
and
pop
popa
outs
xchg
push
sbb
jl
push
ds
out
mov
repz
mov
addr16
xor
fwait
aaa
ss
pop
fs
iret
push
and
gs
int3
xchg
mov
cmp
jae
clc
iret
jg
dec
push
mov
jp
retf
aam
mov
aam
mov
inc
out
cmps
and
dec
(bad)
pop
sbb
jbe
jecxz
inc
xchg
ret
ins
sub
or
(bad)
aad
add
lds
dec
pop
out
outs
dec
jb
(bad)
cmps
in
xlat
out
ror
sbb
mov
gs
ja
mov
test
lock
xlat
sbb
movd
inc
rcr
ret
or
enter
movs
es
aaa
xchg
ja
mov
adc
fisttp
mov
push
mov
jecxz
icebp
scas
stc
mov
rcr
mov
xor
mov
pop
cmp
mov
mov
idiv
inc
fcom
out
lds
iret
sbb
mov
push
pop
and
xor
sub
aam
cmp
xor
push
mov
dec
sar
jne
js
fwait
push
scas
leave
rcl
push
push
into
mov
fwait
aaa
loop
cli
jge
fs
mov
jbe
fild
xor
sub
lods
mov
jl
cmp
ss
fnstenv
pop
loopne
lods
add
cmp
xchg
out
mov
pusha
xor
adc
jecxz
pop
dec
jmp
mov
xor
sbb
sub
lods
out
ins
jmp
daa
div
sbb
outs
sbb
loopne
jecxz
push
pusha
rcl
jns
test
jno
ret
mov
adc
inc
je
jmp
pop
pop
xor
pop
push
mov
pop
sti
and
(bad)
mov
jns
push
shl
adc
cmp
lods
int
aad
jl
sub
popa
inc
jno
adc
pop
dec
ins
outs
loope
or
inc
add
xchg
popf
stc
in
ds
jge
jmp
cmps
inc
ins
mov
mov
mov
jno
mov
out
sar
cld
push
add
mov
jo
xchg
and
stos
xchg
ror
jns
(bad)
outs
mov
fcom
jmp
sahf
push
retf
ret
push
test
ror
stos
movs
pop
push
bound
mov
inc
mov
cmps
inc
and
jmp
add
pop
adc
cmp
ret
jmp
inc
dec
cmp
inc
or
xor
fwait
jl
scas
inc
sbb
stos
push
out
cmp
out
pop
daa
mov
dec
pop
outs
mov
mov
add
push
rcl
rol
push
loope
adc
sub
fistp
ret
mov
jge
mov
adc
jle
mov
addr16
(bad)
scas
lahf
je
or
xchg
les
enter
test
ja
shr
fs
les
(bad)
xor
cmps
das
imul
call
xor
dec
das
sub
retf
ret
out
mov
inc
aad
xor
outs
sbb
in
(bad)
js
mov
and
adc
mov
pop
push
xchg
mov
cmp
mov
pop
clc
ss
das
adc
jae
mov
and
adc
iret
cli
mov
(bad)
sub
out
out
dec
xor
dec
pop
mov
add
dec
push
mov
and
mov
ins
adc
jns
shl
cmps
sub
ja
imul
rcl
dec
xor
jge
mov
call
xchg
jl
jmp
or
sbb
shl
ret
sub
pop
arpl
cs
cmps
(bad)
(bad)
sbb
or
add
stos
xor
lock
nop
in
add
jge
jl
and
inc
test
or
sbb
and
push
xchg
rol
fs
mov
pop
mov
adc
push
jl
inc
xor
inc
outs
mov
mov
bound
retf
test
push
ss
jb
and
movs
aas
shl
aad
or
shl
push
xor
ss
xor
cmp
adc
xchg
stos
dec
fisubr
inc
mov
ds
cmp
push
test
jmp
sub
stos
adc
shl
ss
mov
push
mov
xchg
add
sbb
cmp
fwait
mov
sbb
cmp
xor
xor
lock
pusha
lahf
push
gs
lds
mov
jae
cdq
push
pusha
stos
cmp
sub
sbb
(bad)
fwait
mov
sbb
lods
mov
inc
stos
or
push
mov
mov
out
mov
loopne
sar
fcomp
(bad)
xchg
pop
call
div
and
add
xor
call
pushf
mov
pop
imul
pop
fld
sbb
pop
dec
scas
imul
shl
jmp
mul
ror
jmp
pop
xor
test
stos
and
xor
retf
jnp
adc
adc
test
adc
add
add
inc
pop
pop
sub
xchg
ja
push
jbe
inc
ret
(bad)
xchg
imul
fbstp
ins
inc
vaddss
fbstp
mov
jl
out
mov
int
mov
fbld
cmp
iret
pop
sub
jbe
lds
xchg
stos
leave
(bad)
imul
jne
push
xchg
aas
sub
hlt
sub
pop
ficom
sub
imul
inc
pop
dec
js
or
push
outs
mov
pop
sbb
cmp
fbld
(bad)
stc
nop
mov
imul
jne
loopne
xchg
jge
and
add
imul
mov
cwde
push
or
je
xor
mov
push
aaa
mov
(bad)
mov
loopne
inc
es
sbb
pop
outs
leave
xor
fcmovbe
dec
retf
dec
adc
pusha
mov
movs
test
and
jnp
adc
arpl
mov
in
jp
and
std
pop
lock
mov
mov
mov
add
nop
in
je
int3
ins
and
ins
pop
xchg
(bad)
aas
inc
push
fsubr
daa
lock
mov
in
lea
jle
in
inc
cdq
add
pop
inc
cmps
adc
bound
inc
push
xchg
cmpps
icebp
(bad)
mov
pop
and
fild
lds
push
push
mov
mov
stc
and
adc
xchg
js
sub
and
push
xrelease
jmp
not
mov
xor
pop
jecxz
aaa
lock
mov
sub
test
pop
add
repz
scas
leave
std
xor
inc
jo
jbe
sub
pop
sar
test
addr16
nop
lea
repnz
movs
int3
push
ret
test
xchg
jno
jbe
inc
sbb
mov
add
push
mov
out
add
xchg
out
lea
jmp
fwait
es
jbe
enter
push
pop
and
xchg
div
or
and
(bad)
push
mov
(bad)
es
loopne
imul
mov
leave
dec
mov
scas
sbb
jge
pop
mov
aam
cmps
add
je
push
out
in
xor
xor
or
pop
push
pusha
sub
xchg
and
jbe
mov
jno
pop
xor
sub
jmp
les
adc
add
test
ret
stos
xor
mov
test
sub
dec
clc
inc
push
inc
(bad)
out
pusha
xchg
lock
retf
sar
fsub
mov
call
jg
adc
shr
bound
stos
fldenv
fcom
test
in
ja
ins
sti
ret
xchg
loop
push
xlat
jns
repz
mov
mov
jns
js
leave
and
cmp
ss
inc
and
add
sub
mov
retf
stos
loope
cmp
cmp
cmp
out
enter
mov
push
mov
int3
rcl
push
fwait
mov
push
mov
arpl
jbe
retf
fwait
shr
jnp
mov
(bad)
cmp
xchg
imul
mov
mov
xchg
bound
xchg
jnp
adc
icebp
xor
sbb
neg
jnp
mov
std
or
retf
add
rcl
jle
inc
inc
fcom
loop
mov
inc
mov
loope
in
add
adc
jns
mov
cmp
sub
stc
fcmovnu
add
out
inc
and
cld
aam
pop
std
inc
bound
fwait
enter
or
cmp
(bad)
ins
pop
dec
cmp
sbb
and
and
inc
and
cmp
pop
xchg
jne
retf
lods
pop
xor
push
pop
call
xor
and
repz
lock
(bad)
(bad)
shl
mov
(bad)
push
cmp
mov
in
xchg
fcom
mov
sub
lods
and
stos
xchg
and
shr
sbb
sbb
xor
sub
mov
xlat
scas
test
fcom
dec
jp
xchg
add
stos
xchg
cmp
pop
inc
je
imul
call
aam
int
jno
xor
push
push
jge
sub
loopne
out
ret
sub
daa
inc
test
mov
aam
mov
adc
jmp
leave
jp
stos
sar
movs
sub
and
cmp
rol
adc
aas
cmp
mov
xchg
jmp
pop
add
je
add
pushf
and
jmp
ja
add
jb
adc
xchg
jg
mov
jno
sbb
lods
inc
imul
test
mov
mov
or
xlat
or
aam
xor
enter
aas
or
ucomiss
call
shr
mov
add
xor
ds
push
add
cmc
mov
add
xchg
fist
ins
mov
add
and
daa
and
test
adc
lahf
repnz
repz
inc
inc
mov
and
bound
pop
adc
(bad)
out
shr
dec
mov
jge
jmp
nop
bound
pop
call
add
push
sbb
jbe
mov
cdq
(bad)
pop
cmp
ss
hlt
retf
dec
das
inc
adc
inc
cmps
stc
mov
pop
daa
jg
xchg
mov
or
xchg
ss
push
and
cmp
mov
repz
lea
scas
sub
jno
movs
add
add
sar
mov
jg
push
xchg
xchg
in
dec
out
adc
cwde
cmp
sbb
sbb
cmp
shl
push
fisub
cmp
into
js
dec
push
cs
into
mov
mov
call
adc
jecxz
dec
into
mov
dec
dec
aam
lds
popf
jp
pusha
adc
outs
xor
xchg
addr16
pop
std
jne
mov
es
lods
adc
jmp
pop
pop
in
jp
aas
test
xchg
fnsave
and
cld
jne
repnz
jns
stc
rcl
clc
cld
add
jl
or
imul
enter
sbb
ret
shl
dec
dec
jb
dec
cmp
mov
loop
(bad)
mov
push
xor
ins
xchg
inc
aam
hlt
mov
cli
pushf
addr16
mov
push
scas
scas
jmp
(bad)
mov
cs
jns
and
test
repz
je
icebp
daa
movs
inc
in
add
or
aam
pop
sbb
jnp
push
popf
out
add
call
test
jnp
mov
xor
hlt
in
mov
add
push
scas
cmp
(bad)
ret
and
adc
xchg
imul
mov
jb
test
xchg
getsec
adc
xchg
adc
call
pop
push
mov
test
stos
push
popa
test
and
pop
stos
imul
imul
cmp
dec
lods
pop
cmp
inc
mov
push
(bad)
(bad)
mov
mov
mov
sub
(bad)
cmps
or
aam
int
cwde
add
stos
imul
mov
cmp
lds
out
mov
push
sub
nop
test
in
test
cmp
aaa
into
(bad)
out
pop
mov
push
dec
lods
popf
mov
cmps
mov
jl
xchg
sbb
es
shl
xor
mov
stos
addr16
jl
or
jl
jl
and
pop
cmp
cli
scas
mov
jl
jecxz
mov
jne
retf
xor
adc
sahf
xchg
ds
or
test
in
ror
cmc
cmp
mov
or
addr16
sub
(bad)
ficomp
mov
add
dec
sub
repz
ins
data16
xchg
cmp
imul
cli
and
dec
xor
add
jns
mov
push
xor
pop
adc
adc
aam
stos
in
scas
ja
xor
test
fld
mov
pop
jno
repz
ds
mov
lds
or
pop
pop
sbb
dec
mov
cmp
adc
and
or
sti
jne
movs
mov
and
mov
pop
daa
scas
push
ss
xor
icebp
cld
inc
inc
push
push
shl
shr
lds
aas
xchg
arpl
pop
dec
mov
add
jp
imul
gs
and
int3
dec
push
fcmovnb
mov
pop
cmp
leave
fwait
mov
pop
int
mov
loop
pop
jae
sahf
dec
test
add
xor
mov
js
test
push
cmc
inc
std
es
dec
cmp
jnp
dec
popa
or
scas
jmp
iret
pushf
cmp
push
or
mov
sub
mov
lods
mov
xor
and
pop
mov
mov
pop
jbe
ror
inc
mov
xchg
pop
xchg
scas
retf
inc
loop
movs
stos
xor
std
leave
push
cld
out
js
das
out
cs
jnp
loop
sbb
push
dec
push
push
shl
xor
cmc
(bad)
xchg
(bad)
mul
call
push
xchg
mov
pop
outs
xchg
sub
shr
sub
or
imul
outs
sub
jb
sbb
fstp
imul
adc
cld
test
call
push
js
jp
mov
jge
fiadd
pop
cmp
outs
cmp
push
inc
sub
std
icebp
cmp
das
adc
jmp
outs
push
and
outs
mov
or
push
lock
ins
inc
pop
jecxz
xchg
pop
fwait
imul
xor
push
sub
into
enter
pop
and
push
pop
sti
lods
xchg
cld
aaa
sub
pop
jmp
or
pop
shr
divps
inc
pop
cmp
pop
push
leave
dec
lahf
popf
stc
cmp
loope
push
mov
push
shl
push
retf
repz
push
retf
push
mov
sbb
or
ror
aad
mov
or
comiss
(bad)
scas
(bad)
cmp
ror
sar
xchg
out
cmps
inc
xchg
xlat
data16
mov
mov
push
repnz
imul
mul
pop
and
and
sbb
xor
mov
mov
xchg
aad
cmp
and
sub
cmps
out
push
add
mov
fs
lods
mov
sti
in
(bad)
add
dec
xor
rol
and
fs
jge
jb
sahf
call
loopne
jmp
or
inc
xchg
mov
or
test
(bad)
mov
cld
adc
pop
mov
push
(bad)
mov
loopne
pop
or
ret
data16
je
adc
sub
cmp
add
xchg
lock
mov
sar
inc
ds
sub
xchg
mov
(bad)
bound
mov
je
push
and
lea
or
xchg
jmp
lods
sbb
push
dec
inc
jecxz
popa
push
or
stos
cmp
loop
(bad)
ror
pop
test
or
leave
sbb
pop
inc
mov
adc
mov
aad
xchg
xor
mov
dec
add
xchg
push
pop
movs
adc
xor
aaa
sbb
je
jno
(bad)
jmp
push
out
pop
inc
mov
pop
add
sbb
and
sub
xor
stos
cmp
fidivr
sar
add
addr16
js
sbb
push
mov
arpl
xor
in
xor
or
cmps
popa
jp
addr16
in
je
ror
push
scas
mov
push
dec
sub
jecxz
aaa
(bad)
xchg
pop
or
(bad)
fucomi
mov
out
inc
mov
mov
cmp
test
repz
inc
fs
and
shl
and
mov
retf
sar
fild
pop
mov
fidivr
in
es
jp
pop
(bad)
ret
xor
xor
(bad)
aad
jb
cwde
fmul
jg
cmps
dec
jg
ins
lds
mov
loopne
pop
popf
pop
push
rol
mov
dec
loopne
cmp
inc
fisub
stos
mov
mov
leave
repnz
cwde
and
dec
push
push
mov
in
xor
mov
scas
jno
mov
mov
pop
aas
cmps
cmc
scas
mov
jne
or
imul
cmp
push
clc
js
cmp
call
imul
loope
mov
sub
cmp
xor
lds
retf
mov
cmps
jnp
std
aam
jge
cwde
fnstenv
fwait
sub
(bad)
sbb
mov
dec
(bad)
push
push
jle
cdq
pop
in
arpl
push
daa
imul
push
push
test
call
fst
jno
les
inc
add
or
mov
stos
push
xchg
sub
mov
in
push
push
jle
repz
outs
and
mov
and
jg
leave
scas
call
nop
pop
sub
mov
cdq
push
or
push
lock
mov
and
adc
cmp
call
les
cmp
cmc
xchg
(bad)
daa
sub
or
test
sub
dec
nop
mul
scas
pop
sbb
movs
pop
xchg
aam
pop
cmp
sub
mov
imul
lahf
push
clc
in
add
jbe
mov
test
xlat
sub
loope
pop
addr16
test
loopne
leave
xlat
pop
out
in
mov
test
call
sti
inc
add
out
and
xchg
mov
jnp
or
mov
ss
inc
lahf
fsub
push
cmp
div
test
aad
push
es
shl
dec
popa
sbb
xor
push
and
mov
push
pop
cdq
pop
into
retf
data16
sub
js
or
hlt
test
mov
cmp
or
ret
aas
call
sbb
push
or
loop
imul
pop
cmps
retf
ins
ds
fwait
or
pop
jns
int
fwait
add
mov
sub
rcl
cmc
sbb
push
and
xchg
cmps
shl
mov
repz
xchg
cmp
fwait
iret
int
cmp
dec
rol
inc
scas
(bad)
push
inc
cmc
dec
or
cld
jl
add
sub
int3
inc
push
ja
cs
pop
xor
lds
xchg
xor
mov
(bad)
fld
cmps
(bad)
in
sti
or
push
movs
jno
or
adc
adc
call
jb
xchg
sbb
jo
mov
xchg
je
cmp
push
iret
fwait
sbb
mov
ficom
test
cmc
lds
jp
pushf
repnz
in
fadd
call
lahf
nop
sub
xlat
(bad)
dec
and
pop
push
repnz
sbb
inc
sbb
sbb
sbb
mov
jmp
add
(bad)
push
fistp
dec
xor
jbe
mov
mov
push
sbb
and
movs
mov
pop
mov
pop
rcl
mov
cld
divps
mov
cmp
cli
and
sbb
arpl
scas
cmp
addr16
xchg
pop
call
test
mov
shl
stos
loopne
mov
sub
mov
sar
pop
jecxz
push
lods
cmps
sar
add
push
(bad)
mov
adc
push
push
xor
cmp
das
stc
ins
ror
cld
aaa
pop
push
jmp
(bad)
in
(bad)
pop
mov
(bad)
or
sti
inc
or
adc
aam
push
pop
lds
mov
lods
aad
das
jge
mov
lods
dec
and
or
popf
jbe
idiv
mov
clc
cld
aaa
jno
jg
dec
pop
addr16
int
inc
mov
nop
and
pop
add
jne
je
jmp
int3
shr
cdq
aaa
sti
aad
movs
xchg
sahf
xchg
out
daa
scas
mov
scas
dec
adc
loop
fmul
cld
shl
mov
pop
add
ins
out
mov
xor
ror
dec
push
and
xchg
xchg
aas
xchg
pushf
jmp
inc
push
mov
lods
sbb
adc
xor
bound
fcom
imul
push
rcr
mov
jmp
push
outs
adc
div
pop
adc
aas
retf
jp
mov
fnsave
push
icebp
push
xchg
jae
dec
mov
cs
aam
jecxz
or
pop
and
xchg
xchg
dec
rcr
push
daa
xchg
inc
cmps
shl
int
lahf
adc
jmp
inc
mov
mov
or
or
sti
cmc
dec
out
in
and
ror
mov
test
xor
cmovbe
mov
in
jae
and
sub
fist
mov
aas
scas
add
xchg
sub
popa
pop
sub
sbb
adc
in
mov
mov
(bad)
dec
cmp
add
lock
mov
ins
adc
jl
out
push
fldenv
ds
cmc
and
and
aaa
mov
add
adc
icebp
rol
sbb
dec
ja
and
gs
mov
jmp
test
jl
sbb
inc
popf
repz
cmp
mov
xchg
sbb
aas
movs
fucomip
mov
dec
rcl
(bad)
mov
lods
sahf
and
fild
leave
fst
fwait
pop
and
sti
jecxz
mov
aad
je
add
mov
xchg
inc
out
and
mov
call
mov
out
(bad)
outs
mov
jg
stos
cmp
and
jmp
cmp
jge
sbb
sub
sbb
push
es
push
shr
xor
repz
ins
add
add
and
xchg
ins
sub
call
lds
movs
push
gs
mov
movs
xor
(bad)
lods
sbb
sahf
sti
adc
ret
ins
cmp
je
in
ficomp
imul
pop
inc
inc
pop
jbe
lds
mov
or
into
mov
mov
mov
movs
mov
dec
iret
mov
ret
pop
fisubr
inc
add
test
or
sub
enter
out
cmc
icebp
dec
fild
movs
adc
and
test
repnz
rcr
add
aad
nop
push
xor
and
test
and
push
das
sub
in
adc
or
dec
jno
cmps
(bad)
ja
inc
jns
dec
or
inc
ret
cld
out
popf
jne
test
cmp
cmp
mov
ss
and
out
test
and
mov
jecxz
mov
mov
sbb
dec
pop
loop
push
sub
mov
pop
or
cmp
sbb
jl
leave
pop
push
mov
add
jno
and
pop
outs
sbb
cwde
xchg
jae
lea
dec
sbb
gs
xchg
loop
scas
and
into
lea
push
mov
lahf
fstp
in
div
mov
scas
dec
clc
(bad)
cmps
fst
out
xchg
pop
std
mov
aaa
cmc
push
lahf
call
cmc
push
lods
jnp
adc
mov
pop
nop
add
push
pop
push
pop
xchg
popa
sub
aam
jne
mov
adc
je
push
sub
or
push
cs
mov
dec
mov
pop
xchg
aad
sbb
adc
pop
es
jmp
test
push
jl
xor
pop
pusha
sbb
cmp
add
xor
iret
xor
fwait
daa
mov
lahf
cli
sbb
adc
ins
hlt
movs
add
cmc
push
inc
lods
cmps
std
adc
jl
cmp
out
lock
(bad)
lahf
push
push
icebp
mov
inc
leave
aam
inc
sub
aad
inc
dec
not
(bad)
movs
mov
dec
mov
cmp
mov
repnz
dec
adc
mov
mov
push
pushf
push
or
cmp
push
cwde
mov
stos
frstor
iret
or
imul
mov
mov
jmp
mov
cmp
pop
jp
outs
inc
loop
xchg
js
add
loope
pop
xor
je
mov
rol
xor
pop
je
or
aad
or
ror
data16
fbstp
jmp
add
std
jae
inc
xchg
or
ins
imul
mov
push
pop
outs
push
adc
mov
jbe
inc
adc
sbb
cmps
sbb
dec
xor
xor
data16
movs
ficomp
mov
int
neg
sbb
sub
and
mov
popa
push
sub
retf
cdq
arpl
test
jl
cmp
int3
push
loopne
xchg
outs
sub
jbe
fcom
or
pop
inc
add
pushf
mov
dec
xchg
jmp
sub
in
sahf
jne
or
jo
pop
jmp
ret
loopne
(bad)
shr
sbb
call
outs
jmp
push
mov
jne
fisubr
mov
xor
stc
mov
movs
out
(bad)
sar
pop
test
cmps
movs
mov
mov
out
dec
cmp
cmps
adc
enter
and
add
ret
sub
into
pop
stos
ret
inc
(bad)
pop
stos
aam
movs
test
pop
xchg
and
cmp
mov
(bad)
xlat
and
xor
das
mov
and
cmc
dec
adc
mov
jecxz
and
pop
aad
or
pop
mov
mov
es
je
mov
pushf
cmp
pop
jmp
dec
call
test
out
add
sbb
or
mov
idiv
sbb
mov
mov
cmp
lock
mov
arpl
push
or
popw
dec
repnz
jg
xchg
and
hlt
mov
add
pop
pop
hlt
xor
scas
inc
xchg
js
loopne
cmps
mov
or
out
sbb
xchg
mov
dec
in
pop
mov
cmp
int
sbb
jle
mov
push
out
fist
or
das
aad
push
adc
into
ret
in
dec
sti
pop
xchg
sbb
mov
mov
push
dec
sar
pusha
test
sti
jmp
scas
inc
int
mov
xchg
jmp
fdiv
mov
mov
cmc
sahf
xchg
push
dec
hlt
retf
and
lods
jbe
adc
cmp
cmp
outs
fs
es
cmp
fimul
pop
shl
mov
js
xlat
and
movs
in
inc
mov
imul
sub
and
pop
fcom
aad
stc
lods
mov
sbb
hlt
imul
cmp
jmp
sbb
aam
pop
or
fidivr
mov
ret
fwait
adc
xchg
sahf
out
movs
jo
aad
push
and
call
das
out
add
cmp
jmp
cmp
lock
or
xchg
sub
test
pop
pop
pop
jb
sub
cld
cmp
sbb
les
dec
cmp
cmp
sub
mov
lds
mov
pop
and
je
jae
fs
mov
frstor
(bad)
out
cmp
mov
mov
pop
mov
or
sub
pop
jecxz
adc
or
xlat
inc
movs
inc
mov
add
jl
pop
loop
and
repnz
cmp
mov
sahf
xlat
xchg
shl
cmp
addr16
xchg
adc
(bad)
call
jo
sub
outs
xor
jns
call
add
std
push
xchg
dec
ds
mov
mov
int3
call
test
adc
(bad)
jle
and
int
or
jmp
dec
mov
test
add
inc
int3
loope
in
cmp
push
mov
icebp
outs
cmp
mov
add
push
xor
jae
ins
jns
int
or
ja
add
mov
sub
iret
pop
fsub
mov
mov
hlt
mov
mul
pop
lahf
icebp
test
mov
rcr
push
call
push
imul
mov
loope
mov
add
and
push
xchg
shr
mov
imul
sahf
xor
das
cmp
mov
add
xacquire
int3
js
dec
cdq
icebp
test
mov
in
sbb
pop
inc
hlt
jge
or
mov
pop
clc
jle
out
test
loopne
xchg
lods
addr16
aad
(bad)
cmc
xchg
mov
scas
jge
mov
push
push
fbld
call
xor
lds
outs
pop
inc
cmps
cwde
or
es
mov
fwait
loopne
xor
out
test
jnp
fs
xchg
shl
or
pop
ret
cmps
mov
hlt
ret
dec
sbb
inc
xchg
xor
adc
adc
cmp
cmp
jmp
adc
out
out
sbb
push
mov
rcr
retf
add
xlat
gs
jle
in
inc
jecxz
adc
sub
ret
(bad)
push
jmp
jns
inc
or
cmps
loopne
cmp
cmp
mov
leave
mov
dec
push
lea
mov
cld
adc
ins
mov
push
or
rcl
rcl
pop
inc
daa
xchg
xchg
adc
int
aas
add
dec
jge
xor
pop
xchg
jne
sbb
xchg
sub
loopne
in
mov
inc
outs
aad
lds
sbb
jae
ret
pop
out
jo
repnz
movs
dec
ins
lock
nop
out
cdq
xchg
dec
dec
std
stos
das
mov
dec
dec
pushf
movs
in
in
call
adc
fcom
stos
inc
leave
iret
jge
cmp
jecxz
mov
pop
xchg
in
cli
ds
xor
xor
popf
push
out
repnz
mov
fcom
mov
jl
retf
fild
cmc
dec
jmp
in
or
mov
or
and
fs
inc
mov
cmp
dec
ja
pop
cs
sbb
mov
pop
mov
movs
in
inc
mov
and
sub
fbstp
pop
das
push
mov
es
cli
and
push
into
or
xor
push
cdq
call
and
or
push
add
mov
add
movs
push
mov
mov
clc
sahf
(bad)
gs
call
ss
ds
jp
dec
lahf
das
jmp
jo
popa
mov
push
pushf
scas
movs
or
lea
dec
and
call
test
(bad)
stos
shl
or
dec
jl
mov
pusha
sbb
sti
fs
icebp
stos
push
inc
add
int
cli
xor
jo
adc
jns
daa
xchg
pop
(bad)
lods
les
out
inc
lea
jne
jmp
sub
adc
push
pop
leave
(bad)
movs
and
push
inc
mov
arpl
add
add
and
rcr
arpl
pop
jne
push
cmp
inc
xlat
and
fs
dec
mov
repz
mov
(bad)
and
pusha
stos
xchg
mov
inc
adc
xchg
pop
aad
sub
or
or
jp
dec
cmp
jae
xchg
inc
movs
adc
cmc
rcl
adc
mov
pop
rcl
rcr
mov
fisub
dec
in
ret
ror
xor
dec
push
push
retf
cdq
mov
and
xchg
push
or
sahf
test
jp
rcr
mov
add
in
mov
xor
jmp
test
push
out
push
and
jns
lods
rcr
mov
adc
leave
mov
loope
les
neg
push
addr16
scas
xchg
jno
(bad)
in
push
cmp
bound
xchg
push
ins
pushf
repz
and
mov
cs
shr
sub
mov
aaa
mov
and
push
xchg
and
adc
ins
fld
sbb
shl
cli
outs
xchg
fsub
stos
hlt
and
push
(bad)
lods
out
cmp
stos
push
dec
hlt
inc
sbb
cmps
ds
mov
loopne
sbb
xor
xchg
dec
cld
xor
mov
es
cmp
adc
mov
sbb
or
jbe
outs
into
cld
xchg
adc
dec
leave
out
mov
(bad)
xor
push
pushf
call
pop
pop
sbb
sti
mov
sub
xor
fisub
xlat
mov
mov
nop
jge
add
add
std
xor
lods
cwde
inc
pop
xor
leave
(bad)
pushf
cmp
inc
arpl
cmc
xor
in
fs
inc
sub
pop
sbb
mov
xchg
adc
mov
sub
add
pop
mov
arpl
jnp
(bad)
nop
xchg
push
jmp
aaa
pop
bound
out
xor
or
fs
(bad)
out
in
clc
xchg
(bad)
push
xchg
inc
sub
sbb
icebp
pop
jne
mov
mov
lods
dec
les
mov
hlt
imul
jo
jp
pusha
fst
dec
sbb
or
jmp
gs
popf
rol
xor
imul
push
push
jmp
outs
ret
into
add
add
push
rcr
lahf
or
pop
adc
xchg
and
out
out
lds
retf
dec
mov
ret
adc
(bad)
dec
cmp
iret
inc
mov
test
and
or
js
mov
nop
stos
xchg
jo
les
and
cdq
sar
pushfw
imul
pusha
and
movs
sbb
mov
mov
dec
repnz
inc
ins
xor
test
in
ins
inc
das
loopne
(bad)
adc
lods
fimul
mov
out
push
lods
maskmovq
imul
xchg
adc
sub
xchg
repnz
outs
enter
add
pop
push
mov
cli
mov
lock
add
mov
in
mov
call
xor
lds
out
test
pusha
dec
pop
sbb
sbb
pop
fstp
xchg
cmp
ret
movs
addr16
add
cmp
repz
mov
lock
call
shr
add
push
cdq
(bad)
data16
jnp
push
pop
inc
dec
lock
out
jle
sbb
mov
in
fstp
shl
js
pop
jno
bound
outs
das
enter
mov
sub
jl
jg
or
(bad)
inc
out
out
pminub
adc
mov
aam
scas
push
pop
dec
and
mov
mov
dec
mov
loope
div
scas
retf
daa
(bad)
in
fisttp
movs
(bad)
sar
mov
sub
lds
or
pop
ins
sbb
and
cld
cwde
add
inc
mov
mul
push
xor
popf
ss
pop
xchg
xor
sbb
shl
add
bound
stos
pushf
xor
adc
push
lods
mov
inc
ret
fistp
inc
xchg
(bad)
iret
call
cmp
push
push
sbb
pop
cmova
mov
lods
mov
add
(bad)
fld
mov
mov
push
addr16
ret
dec
xchg
add
call
aas
int
jp
test
adc
pop
fwait
repz
sub
push
popa
(bad)
int3
imul
fidiv
push
jmp
mov
cmps
jp
icebp
xor
sbb
add
xchg
lahf
cwde
(bad)
ficomp
xchg
mov
jmp
ficom
pop
xor
aaa
xor
addr16
inc
rcl
sbb
std
stc
jp
mov
cmc
xchg
ins
enter
xchg
je
push
test
arpl
sbb
pop
push
mov
dec
dec
push
les
jae
or
call
sbb
ins
mov
cmp
ss
sbb
sub
fld
inc
into
(bad)
dec
xchg
jae
aas
mov
inc
mov
aas
sub
lahf
push
sbb
cmc
sahf
nop
enter
xor
pop
pop
ficomp
mov
das
sbb
jge
pop
mov
cmc
dec
mov
call
in
add
outs
ret
test
pop
push
imul
lods
imul
aaa
mov
pop
adc
sub
xchg
and
push
push
imul
outs
stos
int
and
and
or
popf
int3
push
mov
movs
mov
xor
mov
add
xchg
fwait
push
aaa
xor
in
sub
adc
cmp
fs
dec
push
adc
pop
fmul
sub
ret
push
sti
leave
jmp
jo
(bad)
mov
adc
dec
lea
rcl
int
sub
pushf
pushf
jle
push
pop
mov
mov
cmp
aaa
xchg
movs
and
fstp
fld
pop
imul
int3
mov
jb
stos
xchg
xor
loope
sub
cmp
shl
loop
add
lods
ret
aam
cmp
and
retf
ret
mul
pop
aad
jbe
test
pusha
retf
mov
add
inc
xchg
pop
mov
imul
push
pushf
mov
movs
xor
movq
xchg
inc
icebp
add
mov
cmp
test
popa
xchg
adc
jl
sub
sbb
cmp
jl
scas
rcl
xchg
mov
jns
rol
in
pop
ins
jae
not
outs
ror
adc
in
fisttp
or
dec
jmp
jp
(bad)
std
repz
stc
sbb
ficom
std
xchg
and
add
mov
retf
daa
and
pop
and
xor
adc
mov
in
cs
jmp
sub
frstor
std
push
mov
aaa
adc
sar
add
inc
sbb
mov
add
and
add
in
push
lock
pusha
pop
mov
lahf
xchg
add
cmp
jp
lds
push
mov
stos
out
xor
pop
iret
jo
daa
cmp
inc
xor
and
stos
mov
fisub
rcr
jb
(bad)
mov
mov
and
sbb
xor
ror
lods
pop
mov
vcvtsi2ss
mov
pcmpgtd
pop
lods
out
aam
jo
addr16
aam
mov
in
stos
adc
inc
ror
pop
pop
fdivr
jb
pop
mov
das
sti
addr16
cmp
(bad)
xchg
imul
out
fs
mov
inc
sar
pop
popf
or
mov
sbb
pop
cmp
adc
xchg
bound
rcl
jb
dec
repnz
ret
or
mov
jno
dec
ja
inc
jno
retf
pop
std
or
leave
mov
mov
loope
pop
xchg
int
fwait
mov
ss
cdq
dec
adc
xchg
mov
jecxz
inc
mov
aas
arpl
or
in
push
mov
mov
cmp
dec
dec
xor
mov
cdq
(bad)
in
mov
neg
mov
mov
pop
push
(bad)
jge
shl
xor
bound
fsub
push
pop
push
mov
fstp
cmps
jno
ds
or
pop
outs
es
hlt
lahf
mov
fnstcw
jno
cmps
push
sub
push
popa
cdq
test
data16
stos
pop
sahf
or
(bad)
cmp
fwait
retf
aad
clc
mov
adc
jmp
ret
cmp
mov
inc
mov
xor
clc
dec
fs
or
pop
cmc
stos
ret
push
jbe
inc
lahf
mov
and
sbb
cmps
or
mov
inc
sub
xchg
mov
ins
cmp
in
mov
mov
stos
inc
cmp
daa
mov
idiv
mov
xchg
cmc
sbb
out
mov
xor
push
mov
cmp
cld
jne
pusha
push
out
and
es
fbstp
mov
into
cmp
loope
dec
dec
jecxz
leave
sbb
xor
jno
mov
inc
aas
push
loope
mov
xor
pop
in
sbb
push
(bad)
shl
cld
sahf
aam
mov
jmp
jbe
rcr
jo
adc
daa
loopne
xchg
pop
inc
jl
ins
adc
repnz
pop
lahf
jl
mov
pop
pop
fisttp
test
rcl
adc
hlt
div
cs
js
repnz
cmps
das
dec
int3
mov
lds
call
and
nop
or
jl
in
pop
inc
sahf
lods
inc
call
daa
test
and
bound
jmp
nop
jge
xlat
repz
out
out
fcmovb
adc
or
jo
stos
ss
inc
push
add
pop
lea
or
dec
cmp
sub
dec
and
push
jmp
dec
(bad)
xlat
lea
dec
test
and
adc
retf
test
and
inc
cmp
pop
outs
and
push
imul
hlt
lahf
mov
leave
or
push
mov
xor
out
lahf
call
call
iret
ja
out
lods
sub
adc
mov
pop
por
sub
xor
mov
add
xchg
mov
pop
adc
inc
mov
and
pop
sub
xchg
daa
sbb
mov
js
or
out
push
je
(bad)
adc
jle
mov
mov
xchg
pop
fdiv
inc
or
in
out
js
cmps
test
(bad)
and
push
sub
and
leave
fsub
cdq
ins
xor
xor
mov
jmp
cmps
cmp
imul
inc
mov
dec
mov
cmp
mov
sbb
jmp
mov
lahf
mov
add
inc
outs
and
lock
xor
mov
xor
push
clc
mov
sub
cwde
jno
add
mov
inc
hlt
or
push
ror
and
jge
test
das
cmc
cmc
enter
inc
mov
fldln2
adc
xchg
cmp
mov
rol
icebp
int3
add
cmp
push
push
cmp
pop
and
outs
sub
push
xor
dec
and
test
stos
jo
xchg
mov
stos
inc
shr
mov
fwait
pop
loop
sub
mov
pop
test
loope
push
pop
sub
jge
or
mov
movs
ins
movs
xor
push
ret
cs
cmc
mov
pop
aad
or
jmp
or
jp
stos
push
sbb
movs
cmp
mov
pop
(bad)
movs
in
in
mov
iret
xchg
popa
cs
or
sbb
test
jge
jmp
xor
cld
add
xor
push
inc
out
jns
rcr
jb
cmp
jo
sub
cmp
dec
sar
sti
bound
fsubr
je
retf
inc
les
fistp
rol
xor
jle
and
mov
pop
rcr
mov
repnz
in
test
inc
int3
mov
sub
lahf
xchg
fdivr
cmc
and
(bad)
cld
add
out
(bad)
cs
sbb
int
ficomp
loope
or
sbb
test
xor
rcl
mov
dec
mov
and
rol
sbb
jo
pop
push
adc
out
imul
stos
jb
mov
loopne
fnsave
mov
sbb
inc
sahf
in
sub
pop
enter
adc
cmps
mov
jns
adc
push
ins
cwde
inc
sub
pop
imul
mov
cwde
jmp
jmp
lds
add
push
push
jp
mov
push
loop
jbe
inc
retf
aam
shl
jns
sahf
popf
xor
add
or
add
fist
add
ret
mov
out
cmp
or
sbb
iret
and
push
add
sbb
stos
fwait
les
inc
and
xchg
out
sub
adc
jp
js
mov
retf
mov
jns
mov
outs
movs
push
iret
(bad)
ss
add
mov
scas
aaa
into
sbb
sbb
(bad)
fcmovu
dec
adc
not
aas
jae
adc
mov
shl
aaa
sub
jae
dec
out
cmp
jg
push
setns
hlt
cmc
aad
xor
sub
xor
mov
pop
sti
mov
mov
out
(bad)
pop
(bad)
push
xor
xchg
ficomp
rol
push
clc
jb
icebp
dec
mov
ja
int3
xchg
cmp
jge
adc
cmp
adc
pop
dec
xchg
enter
xchg
xchg
test
sub
add
sub
mov
call
or
and
(bad)
ds
pop
les
dec
mov
pusha
dec
and
aam
out
into
and
dec
popf
mov
add
jae
add
ficomp
sub
(bad)
in
aam
dec
rol
(bad)
std
sbb
in
pop
hlt
mov
and
mov
lock
rcr
lahf
add
rcpps
jb
push
mov
push
pop
mov
add
sahf
mov
jmp
retf
mov
jo
in
pop
sub
push
xchg
or
dec
mov
push
ins
nop
xchg
or
repz
push
retf
xlat
xchg
push
dec
movs
jae
rol
mov
js
cdq
and
aad
movs
sub
and
jno
mov
test
mov
cmp
aas
xchg
pop
sbb
ins
fld
push
cli
or
stos
dec
ja
ds
hlt
and
test
or
imul
aas
mov
and
push
jo
dec
dec
test
pop
cdq
mov
(bad)
add
xchg
std
lds
cmp
sbb
sub
inc
js
add
out
jmp
ins
pop
sub
adc
xor
gs
xor
ficom
dec
call
mov
jb
cmp
nop
pop
dec
cmp
and
cmc
sbb
mov
out
iret
cli
rol
dec
mov
fwait
or
call
dec
xor
out
imul
push
rol
fnstcw
add
lock
jae
xor
and
pop
cmp
pop
and
call
and
lods
enter
out
adc
cld
mov
cdq
jmp
or
sahf
xor
xor
or
mov
fadd
sub
or
repz
sub
mov
ins
imul
xchg
jb
imul
push
mov
test
gs
bnd
mov
push
in
out
test
push
movs
xchg
sbb
xchg
cdq
je
pop
adc
pop
push
add
shr
push
push
mov
pop
je
xor
push
stos
add
imul
ret
mov
dec
aas
leave
arpl
popa
pusha
fs
imul
fldcw
pop
bound
mov
jg
idiv
dec
adc
jb
rcl
sbb
std
fcom
stos
call
jmp
ret
push
retf
int3
sbb
stos
scas
test
in
sub
call
cmps
lea
push
and
inc
sar
cmc
ret
pop
retf
cmp
jns
cli
push
test
mov
div
add
jl
adc
add
cmp
idiv
and
mov
retf
sub
retf
adc
push
sar
fld
fs
push
icebp
(bad)
jns
jno
js
not
lods
lock
(bad)
inc
int
jne
das
int
jnp
loope
ins
cmc
jne
jb
jns
mov
bound
ss
adc
and
(bad)
mov
and
mov
xchg
jmp
and
scas
out
cld
(bad)
lea
xor
xchg
xor
in
mov
and
inc
sub
mov
sbb
ret
js
dec
pop
pop
and
mov
fcmovnbe
retf
dec
push
push
fldcw
lods
fsubr
in
push
add
mov
(bad)
push
sub
fwait
or
lods
clc
mov
jae
enter
mov
neg
push
xchg
or
xchg
jb
fwait
pop
int3
xchg
mov
jle
aam
inc
int
cwde
sbb
push
dec
pop
xlat
xchg
cmps
xchg
ds
push
jmp
push
and
add
aaa
test
jge
mov
outs
loop
push
scas
fs
xchg
outs
pop
ret
out
jle
xor
push
(bad)
icebp
sbb
je
cmc
xchg
stc
push
xor
gs
inc
jmp
mov
imul
add
cwde
cmps
arpl
push
xlat
loop
retf
add
push
cmp
jae
sub
jbe
add
or
xor
or
add
adc
gs
mov
loope
mov
xchg
adc
mov
cs
sub
(bad)
mov
and
inc
or
call
xchg
call
repz
adc
or
add
push
inc
dec
jge
pop
lahf
jmp
int
pop
int
dec
fwait
into
adc
scas
pop
add
mov
adc
add
and
dec
fstp
addr16
or
push
xchg
mov
mov
rcl
fsubr
push
push
mov
xchg
or
xlat
shl
loopne
hlt
out
jg
div
ror
sbb
movs
popa
sub
sbb
fstp
xor
nop
ror
fidivr
and
sbb
jne
ins
movs
ret
or
cdq
out
(bad)
pop
cmps
dec
push
cmp
(bad)
lods
and
add
or
js
mov
lods
xchg
xchg
sar
nop
add
jnp
fld
cmps
ret
mov
loopne
inc
and
push
fadd
mov
mov
movs
jp
xchg
and
movs
gs
push
jp
xor
out
lahf
mov
retf
imul
gs
fwait
jbe
lds
xor
sbb
and
div
add
in
test
push
loopne
push
push
push
stos
out
sub
cmc
clc
retf
and
stc
jo
je
jg
cs
xlat
cmp
call
out
shl
jmp
aam
fiadd
fs
xchg
pusha
mov
cmp
add
stos
int
sub
fcomp
aaa
int
mul
rol
hlt
nop
sub
out
out
push
dec
cmp
out
pop
sub
mov
sbb
retf
adc
aas
popf
sti
retf
scas
inc
mov
pusha
loope
jns
scas
sbb
add
mov
adc
push
cmp
adc
mov
imul
jmp
jae
xchg
stos
aam
push
mov
inc
xor
test
stc
in
sub
lods
mov
sub
xor
shl
or
xchg
aaa
es
sub
retf
push
aam
aaa
jg
and
sti
out
ja
loopne
jmp
inc
ret
push
fsubr
mov
fld
jge
pop
adc
xor
ins
adc
mov
push
fld
hlt
loope
ins
push
mov
stc
xor
push
inc
and
unpcklps
clc
stc
aaa
or
call
fst
mov
pop
or
dec
fmulp
aaa
repz
mov
rol
mul
sub
cs
pop
mov
test
xor
mov
sbb
sbb
xor
jmp
out
push
sbb
inc
push
js
aaa
add
lods
imul
gs
mov
iret
addr16
adc
mov
addr16
xlat
cmp
retf
loope
aam
xor
add
cmp
push
xchg
xchg
dec
jmp
adc
imul
les
jnp
jno
mov
push
mov
mov
jne
and
dec
mov
mov
mov
mov
int
jne
lds
fld
test
shr
(bad)
test
fs
fneni(8087
or
cld
and
push
sbb
imul
test
fisttp
loope
dec
repz
push
stc
sar
add
cmp
cmc
jno
fcom
pop
fsubrp
sbb
out
shl
cmp
mov
leave
lock
adc
jb
xrelease
dec
jle
sub
imul
(bad)
sahf
out
movs
mov
add
xchg
addr16
jecxz
push
rcl
inc
pushf
test
dec
pushf
daa
pop
mov
sub
xor
in
outs
inc
or
or
(bad)
jb
sbb
iret
jmp
fcom
int3
fisttp
mov
inc
pushf
xchg
and
mov
push
in
(bad)
lock
adc
dec
fadd
mov
cmps
mov
mov
push
retf
xor
pushf
pusha
popf
out
loopne
mov
xchg
and
sub
aaa
cmps
stc
sbb
and
popa
retf
mov
repz
push
leave
jb
jbe
sub
inc
cdq
ror
aad
xor
adc
fsub
add
xor
icebp
loope
adc
xor
jmp
mov
xor
jbe
and
call
pop
pop
xchg
cmp
pusha
in
sbb
inc
shl
push
mov
mov
dec
cdq
mov
inc
pusha
push
fld
sub
xor
mov
dec
sbb
mov
mov
aas
ss
into
mov
sbb
xlat
and
cmps
push
retf
push
jle
xchg
cmp
mov
push
xor
cmp
movs
cs
mov
dec
jne
dec
stos
imul
sbb
into
sbb
cld
bound
dec
imul
aad
cmp
sbb
xor
sub
in
les
sub
pop
sub
push
and
mov
pop
fst
js
push
clc
xchg
ins
(bad)
push
or
inc
sahf
out
xor
jbe
push
pop
jns
add
pop
jb
dec
enter
out
retf
test
jecxz
xchg
adc
cld
push
mov
(bad)
mov
adc
test
(bad)
fcomp
or
out
sar
push
ror
jmp
jnp
movs
sbb
push
dec
mov
repz
or
inc
inc
add
or
(bad)
(bad)
(bad)
cld
jno
clc
lods
test
cli
push
xlat
xor
addr16
xchg
fcomip
jmp
mov
enter
arpl
out
sbb
lock
add
outs
xchg
outs
mov
xchg
ret
jb
jl
not
js
lods
repnz
jmp
jecxz
add
and
inc
pushf
out
or
mov
clc
add
pop
or
pop
scas
or
sub
not
jecxz
jle
das
or
movs
inc
jge
sub
nop
outs
xor
hlt
adc
(bad)
mov
dec
test
in
lea
fmul
jno
adc
es
out
and
cmp
pop
jmp
mov
push
push
jns
sbb
loope
xchg
adc
bound
fstp
arpl
dec
xor
dec
movs
push
push
int
jg
(bad)
movs
jb
ret
push
mov
push
push
push
xchg
mov
fs
les
fldcw
pop
and
xchg
ins
daa
in
loope
sbb
jle
sub
add
mov
pop
cmp
dec
stc
lods
jge
cmp
fdivr
clc
std
mov
ins
adc
(bad)
jl
jmp
push
sub
xchg
push
sub
scas
sub
xor
mov
mov
aam
jmp
add
and
inc
in
sbb
pop
and
cmps
fstp
adc
psubsb
xchg
cmc
mov
pop
pop
push
cmps
xor
stos
sbb
add
push
inc
pop
shl
mov
stos
or
xchg
lahf
ins
imul
mov
cmps
jecxz
jp
cmp
and
(bad)
mov
outs
aam
idiv
add
daa
mov
push
(bad)
sbb
repz
and
inc
add
jle
xchg
bswap
mov
dec
sub
sbb
pushf
mov
mov
xchg
lds
adc
inc
test
cli
hlt
push
shr
xor
movs
dec
mov
add
mov
popa
(bad)
jmp
lock
mov
ds
cmp
or
mov
iret
pushf
sub
dec
mov
jge
shr
call
add
(bad)
cs
hlt
pusha
lods
iret
jge
scas
mov
mov
sub
xor
movs
std
pusha
ret
in
push
call
out
inc
mov
xchg
sub
add
pop
push
cmp
pop
mov
and
call
pushf
out
ins
sub
pop
mov
sub
xchg
mov
in
adc
loopne
mov
jg
repz
add
movs
sbb
mov
js
in
cmps
div
ja
sbb
and
div
cmps
add
(bad)
mov
pop
mov
sub
dec
sub
add
adc
adc
add
pop
pop
dec
test
call
ja
xchg
retf
movs
ficom
xor
ds
icebp
iret
push
ins
out
lock
push
pusha
mov
xor
mov
(bad)
xor
jns
ret
jmp
jno
mov
imul
and
push
leave
movs
out
add
cld
cmp
call
mov
mov
setge
sub
push
sub
mov
jmp
cld
inc
cdq
imul
fcom
pushf
jo
cmp
in
mov
imul
pop
cli
xor
and
loop
jae
cmps
xchg
pop
mov
jecxz
mov
imul
adc
ja
dec
push
fucomi
sub
ins
ins
push
bound
pop
mov
pop
(bad)
or
lds
dec
adc
ror
jmp
sbb
rol
or
inc
inc
(bad)
xchg
in
jo
xchg
bound
or
cmp
pop
cs
jle
dec
push
popa
sub
mov
cmp
and
sub
push
je
frstor
ds
xor
out
cdq
mov
jbe
mov
call
mov
das
fldcw
cmp
cmp
ins
push
aad
fldcw
popa
mov
iret
cmp
lea
cwde
jle
adc
push
scas
xchg
outs
dec
jnp
jnp
mov
cld
fs
sub
mov
daa
or
jns
dec
sub
iret
mov
in
es
push
cmc
fldlg2
aam
or
mov
in
xchg
jns
push
out
or
cmp
mov
rol
and
add
in
inc
adc
lods
arpl
sub
sbb
xchg
cmp
add
movs
mov
mov
outs
out
fnstenv
sbb
rol
xchg
int3
jp
sbb
cmp
je
dec
int3
dec
pushf
stos
pushf
jmp
mov
call
gs
push
lock
dec
cdq
in
add
ror
mov
mov
sbb
into
mov
vdpps
adc
mov
pop
lahf
pop
stos
sbb
push
sbb
rcr
mov
das
dec
popf
mov
or
(bad)
lock
xchg
dec
retf
and
add
into
int3
popa
pop
adc
mov
js
fadd
inc
add
xor
movs
repz
iret
jg
es
div
outs
loope
xchg
dec
pusha
fild
add
jo
xchg
cs
sti
xor
xor
fmul
push
int3
and
and
jmp
mov
fnstenv
cs
int3
out
je
push
sub
leave
in
xchg
cmps
xchg
push
je
jle
mov
inc
push
sbb
adc
mov
jns
cmp
arpl
pop
sti
inc
dec
jl
sbb
aaa
int3
aaa
push
(bad)
ja
and
push
mov
mov
rol
xchg
cmp
in
int3
xor
and
repz
popa
stc
outs
adc
mov
and
mov
xor
ins
cmps
fcmovu
rcr
adc
and
pop
inc
xor
adc
cmp
add
pop
add
hlt
mov
lock
jb
pop
sub
mov
push
inc
into
jnp
or
sbb
dec
cmp
jg
(bad)
std
cmp
jae
shl
pop
xchg
jg
xchg
xlat
fcomi
into
test
jno
outs
jno
sbb
jns
mov
mov
adc
fdivr
sub
jecxz
xchg
jmp
cmp
leave
std
ror
adc
fwait
sbb
jl
ds
dec
shl
pushf
mov
inc
into
es
cmp
repnz
adc
xchg
add
out
aas
mov
jp
mov
sbb
stos
popa
mov
push
test
lea
aam
movs
stc
(bad)
push
and
ja
(bad)
out
and
cmc
stc
aad
jle
(bad)
mov
mov
sbb
cli
ret
inc
repnz
popf
xchg
and
mov
xchg
mov
xchg
add
or
or
test
mov
cwde
in
mov
repz
mul
xchg
mov
mov
and
adc
fst
mov
lahf
add
sbb
(bad)
mov
jnp
pop
(bad)
mov
pop
hlt
ins
int
movs
(bad)
enter
std
pop
fcomp
lock
leave
cli
rcr
dec
jns
mov
inc
test
daa
mov
mov
mov
cmp
dec
call
sub
fwait
aad
pusha
imul
push
cs
push
(bad)
mov
adc
and
dec
sub
cmp
adc
or
and
push
add
jmp
dec
or
pop
test
enter
mov
test
ret
sbb
push
dec
mov
lods
stc
test
xor
adc
mov
add
int
int
xchg
call
xchg
pusha
in
mov
fs
pop
test
movs
mov
dec
sar
retf
pop
push
nop
sbb
dec
sub
mov
jb
mov
sbb
mov
mov
adc
out
mov
lahf
retf
mov
imul
in
mov
push
jne
stos
stos
mov
mov
jmp
mov
jp
loopne
in
mov
gs
push
xchg
mov
adc
mov
and
mov
jns
jb
push
imul
sbb
push
and
test
movs
fidiv
retf
push
dec
xchg
pop
out
mov
lods
mov
mov
mov
loopne
or
mov
outs
nop
and
dec
push
ja
mov
inc
daa
and
stos
mov
xor
loopne
ror
jmp
mov
test
adc
inc
jge
push
movs
push
xor
ds
fnsave
(bad)
push
cdq
cmp
retf
add
sub
rcl
inc
imul
jo
pop
repz
into
cmp
push
mov
mov
dec
dec
mov
jmp
push
outs
inc
xchg
int
inc
nop
imul
rol
out
and
popa
icebp
imul
push
cdq
sub
jecxz
sbb
and
stos
jae
xor
xchg
pop
ret
movs
cmp
dec
push
lods
lea
arpl
nop
aad
mov
rcl
leave
mov
int
and
or
jecxz
pop
mov
cmp
ficom
dec
fidivr
mov
inc
inc
shl
movs
dec
in
lea
pop
adc
mov
add
repz
jge
push
inc
mov
pop
and
addr16
push
pop
xchg
data16
and
out
dec
jmp
and
xchg
out
jecxz
imul
js
es
imul
rcr
mov
adc
(bad)
fiadd
bound
sub
sti
add
mov
lods
cmc
xchg
mov
mov
cli
in
xchg
and
mov
cmp
add
sub
dec
xchg
xor
xlat
rcr
xchg
arpl
out
xor
pop
add
pop
bound
mov
sbb
cmp
cli
inc
sbb
hlt
lea
ss
pop
jbe
psrld
push
mov
ins
and
pop
js
test
mov
cmp
mov
mov
in
push
add
sbb
out
mov
or
cli
push
mov
iret
das
pusha
sbb
imul
imul
clc
outs
jg
mov
jns
mov
in
adc
and
pmulhuw
mov
jb
lods
inc
push
lahf
inc
jno
out
adc
ins
dec
mov
test
addr16
adc
aaa
rol
inc
mov
and
inc
dec
call
or
cdq
add
rcr
pop
pop
pop
addr16
mov
push
and
lea
jo
cmp
outs
into
(bad)
mov
ins
lock
xor
xor
jl
lock
xchg
aas
mov
mov
sbb
mov
add
retf
mov
lahf
add
sti
jge
and
mov
pop
ins
xchg
enter
mov
push
data16
jge
(bad)
scas
adc
or
lds
je
sbb
pop
sbb
sub
jmp
adc
stos
adc
sbb
jge
adc
jge
xchg
pushf
add
jmp
mov
push
stos
outs
push
and
es
sub
jmp
adc
and
jg
(bad)
retf
(bad)
sbb
inc
dec
ins
lods
fiadd
pop
fnsave
in
xchg
ins
stos
adc
sub
lds
dec
ror
sub
mov
push
lods
xor
xchg
push
jmp
inc
jbe
jge
cdq
pop
shl
rcr
push
jo
call
cmp
xor
jmp
ret
push
pop
out
cli
mov
push
lods
call
sub
or
es
cli
cli
adc
outs
ins
or
ret
sub
jmp
xchg
pop
fs
ins
push
ss
jle
ret
jmp
jb
mov
dec
(bad)
pusha
push
sbb
test
daa
std
popa
sbb
lock
push
and
jecxz
or
popa
xor
pop
pop
dec
aad
pop
xchg
jg
mov
sub
cmp
stc
addr16
rcl
out
aam
outs
pop
pop
or
mov
in
or
cdq
int3
push
jmp
frstor
jecxz
and
adc
sub
shr
out
addr16
inc
cld
pop
ins
arpl
jp
mov
aas
test
cs
inc
dec
mov
jg
add
int
jno
test
or
mov
sub
xchg
adc
(bad)
push
cmp
dec
dec
adc
pop
pop
sub
fwait
cmp
cdq
shl
xchg
inc
jae
neg
dec
leave
mov
adc
cs
mov
or
adc
js
jg
cmp
jg
(bad)
xchg
or
cmp
adc
or
lds
imul
push
jae
jp
fstp
or
sbb
sbb
ret
out
movs
bound
test
dec
out
or
xchg
mov
xor
pop
push
or
(bad)
adc
adc
stc
mov
jmp
jno
inc
sub
pop
fist
xor
cld
hlt
retf
out
adc
fcomp
mov
test
dec
cli
daa
adc
js
int3
xor
(bad)
jl
pop
stos
xchg
pop
movs
mov
fdiv
push
pop
adc
or
js
mov
and
movs
call
adc
xor
mul
pop
les
inc
jmp
js
repnz
pusha
(bad)
movs
test
fs
sbb
lar
imul
movs
lock
jns
call
and
ss
lods
sahf
pusha
push
int
pxor
pushf
adc
xor
addr16
push
inc
add
ins
add
add
out
jbe
mov
imul
cld
xchg
jle
inc
push
cmp
xchg
xor
pop
test
pop
gs
cmp
xchg
xchg
jne
cmp
xchg
xor
enter
aam
sub
repz
fidiv
popa
or
mov
out
inc
bound
adc
es
pop
cmp
cmps
cmp
and
add
enter
out
pop
jmp
push
neg
lods
call
pop
arpl
inc
pop
adc
jle
fidivr
cmc
and
push
jnp
scas
(bad)
xor
cdq
xor
(bad)
loope
outs
push
inc
mov
push
pop
rcr
dec
sar
push
test
add
dec
repnz
push
ss
jo
fadd
(bad)
xchg
lods
cmp
das
and
nop
jmp
sub
cmp
dec
fistp
mov
neg
cli
sahf
cmp
scas
xchg
inc
and
ins
fwait
inc
fwait
leave
add
pop
add
je
push
cli
out
mov
sbb
sahf
or
(bad)
pop
cmps
inc
push
test
js
aas
push
ja
imul
out
lds
ins
cs
push
loope
das
pushf
jae
out
push
aad
test
xchg
jmp
jb
add
mov
dec
daa
mov
and
sub
or
jns
jns
psllq
jecxz
out
cdq
cmp
xor
aam
(bad)
jecxz
mov
dec
inc
in
cld
or
push
cmc
cmps
mov
call
sbb
mov
push
cmp
fwait
or
inc
and
sub
mov
rcr
mov
adc
inc
out
imul
pop
jle
adc
push
adc
and
test
or
mov
fild
dec
pop
es
dec
(bad)
push
fst
int3
jns
sbb
mov
cmp
gs
mul
sub
fmul
add
jge
lds
pop
adc
std
sbb
sahf
cmc
stc
mov
or
jge
sbb
or
adc
jge
mov
lahf
cmc
sub
(bad)
test
pop
mov
sub
movs
xor
aaa
in
mov
cli
stos
dec
jnp
mov
xchg
inc
mov
retf
or
arpl
inc
out
retf
lds
repz
in
stos
cmc
mov
pop
dec
push
std
in
or
and
push
xchg
mov
xchg
mov
cwde
rcr
sub
and
adc
in
fimul
sbb
fwait
xor
into
mov
push
rol
and
jns
lea
xchg
sub
push
inc
pop
xchg
xchg
test
add
mov
inc
mov
and
sub
pop
mov
test
test
inc
add
cmps
rcl
rcr
test
outs
daa
retf
add
int
int3
mov
mov
lahf
push
and
lea
js
xor
movs
test
mov
call
and
inc
add
xor
iret
nop
mov
xchg
fs
jmp
mov
pop
les
sahf
cwde
add
pop
repnz
jbe
fsubr
inc
ret
xchg
add
xor
cmps
mov
ficom
push
dec
rcr
gs
call
bound
test
push
sbb
out
and
mov
adc
out
out
dec
paddw
xchg
pusha
mov
test
into
fisub
ret
adc
je
test
sub
mov
inc
imul
or
add
or
jp
sub
in
xlat
in
stos
fisttp
nop
into
int
mov
(bad)
jmp
mov
mov
lea
sbb
pop
bound
les
dec
cld
test
(bad)
arpl
(bad)
cmp
jg
adc
cmp
inc
xchg
test
stos
push
jno
mov
ds
jno
ret
and
fild
loope
mov
pop
xor
gs
jne
retf
or
loope
test
iret
fwait
ins
adc
or
cwde
out
sbb
dec
dec
mov
mov
mov
mov
sbb
ret
dec
push
js
call
fimul
mov
add
test
xchg
pop
fwait
jmp
xor
aad
push
xor
mov
push
dec
clc
arpl
stc
dec
mov
push
scas
push
push
stc
xchg
sbb
mov
mov
ss
cmp
and
out
pop
fs
xlat
push
(bad)
sar
(bad)
stos
loopne
inc
jns
adc
aam
loope
push
cmp
retf
push
mov
sbb
xchg
cmps
mov
cld
int
mov
pop
clc
sbb
dec
stc
cs
push
lock
out
mov
(bad)
(bad)
es
aas
add
int3
sub
movs
xchg
bound
out
mov
add
mov
(bad)
cmp
inc
jbe
call
add
mov
mov
fisubr
rcl
fstp
jmp
push
repnz
nop
loope
(bad)
js
xchg
cwde
(bad)
cmp
cld
fimul
fwait
aad
dec
movs
cwde
xchg
inc
scas
or
xor
shl
das
mov
call
push
xchg
xor
retf
iret
mov
repz
or
sbb
inc
inc
or
neg
add
sbb
retf
mov
dec
dec
push
or
rol
push
jmp
xor
push
lods
je
pop
popf
xchg
andps
xlat
dec
and
mov
stos
adc
jge
jge
mov
das
add
mov
test
push
aas
sahf
div
or
jp
pushf
cmp
lods
push
push
ret
fs
ja
fsubr
repz
mov
and
xor
cmps
in
add
sub
daa
sbb
dec
mov
cs
mov
hlt
cmp
and
ffreep
or
inc
pop
fisubr
pusha
rcr
inc
loopne
push
push
movs
dec
push
lock
aad
push
xchg
(bad)
cs
add
dec
addr16
cmp
dec
sbb
mov
call
jge
js
add
int3
mov
jb
in
xor
es
jle
push
cmps
ss
retf
cdq
int
jne
retf
out
dec
pushf
jno
mov
mov
jle
sbb
mov
and
or
jno
test
inc
scas
arpl
jl
arpl
adc
bsr
cli
out
mov
loope
inc
jno
mov
or
cmp
lods
int3
fwait
push
cmp
sub
fsubr
retf
out
pop
sub
add
fwait
mov
inc
popa
or
cs
pop
test
push
cmp
(bad)
imul
fs
lods
test
pop
sub
je
fidiv
xchg
sbb
arpl
neg
mov
rol
lods
push
sti
fldenv
xor
clc
jg
pop
mov
fnstenv
xor
cs
rcr
ret
add
bound
inc
lahf
adc
xor
xchg
inc
enter
mov
mov
cld
jecxz
mov
pop
dec
sub
sbb
call
jb
hlt
mov
hlt
jle
xchg
cmp
cmp
lea
sub
mov
cmps
mov
dec
loope
jmp
fidivr
inc
(bad)
xchg
mov
pop
push
mov
sub
mov
out
jecxz
inc
and
stos
retf
stos
mul
ins
jecxz
sub
outs
dec
scas
aaa
ret
or
inc
xchg
mov
daa
dec
push
or
cld
(bad)
test
ins
in
not
mov
inc
pop
xchg
xlat
icebp
lea
jle
std
adc
test
pop
inc
mov
add
addr16
shr
repnz
cmp
jecxz
push
hlt
mov
jp
popa
pop
pop
xchg
mov
(bad)
sub
push
or
mov
xchg
outs
xchg
adc
mov
mov
push
lock
loop
cmp
imul
lods
bound
inc
les
js
out
jp
(bad)
mov
sbb
mov
mov
adc
aad
sti
outs
jl
pop
movs
fisub
(bad)
fdivr
inc
fidiv
push
je
out
fild
jp
aas
clc
adc
repnz
das
cmp
fsubr
scas
cmps
pushf
sub
imul
dec
mov
fimul
pop
fbstp
in
popf
pop
test
pop
aad
mov
retf
test
stc
cld
std
push
jge
xor
es
loopne
fsub
in
in
mov
push
sub
jg
inc
cmps
and
xor
mov
les
outs
(bad)
aad
in
sub
sbb
(bad)
push
mov
adc
mov
mov
mov
xor
push
mov
xchg
cmp
leave
sti
mov
xchg
mov
inc
adc
test
add
test
mov
xchg
sub
dec
loop
mov
xchg
ret
or
lahf
dec
jmp
cli
into
add
inc
div
(bad)
neg
mov
clc
das
pop
push
jno
out
in
ds
xor
and
jnp
(bad)
jmp
stc
stos
sub
movs
add
ins
pop
xchg
js
popa
aad
sub
clc
mov
outs
inc
sbb
(bad)
xor
js
mov
pop
fwait
aaa
xor
or
shl
xchg
dec
push
xor
inc
ja
mov
les
popa
or
cmp
out
push
pop
sti
pop
fs
inc
sbb
out
xor
lahf
push
jns
mov
repz
sahf
loope
leave
rcl
xor
loope
ja
std
inc
imul
pushf
call
ins
cmp
sbb
push
popf
(bad)
mov
adc
(bad)
jns
mov
cmp
xor
cs
xchg
stos
push
inc
lods
jmp
imul
cmps
pop
and
xchg
je
jmp
lds
cmp
cmp
and
fidiv
out
cwde
out
call
nop
mov
shl
out
push
ror
ss
addr16
test
fild
mov
sahf
xchg
sbb
and
fst
jecxz
test
xor
in
push
in
xlat
or
out
pop
fdiv
std
lea
jle
(bad)
mov
sbb
sar
xchg
add
add
push
loopne
stos
mov
dec
mov
ret
bound
mov
bound
push
sahf
mov
neg
inc
sub
inc
cdq
add
lahf
dec
pop
fidiv
inc
stc
mov
out
and
sub
xchg
imul
dec
out
xchg
xlat
push
jl
stos
out
in
test
(bad)
retf
ins
test
cmp
cmp
fwait
mov
dec
call
push
push
data16
mov
push
int3
mov
retf
test
repz
and
mov
sahf
pushf
mov
pop
or
lea
and
repnz
mov
xor
and
mov
(bad)
or
inc
mov
add
sbb
out
sbb
dec
xor
outs
dec
sub
aaa
fcomp
(bad)
cmp
fwait
pop
push
xchg
or
push
neg
aad
adc
mov
movs
adc
ficomp
test
pop
inc
mov
data16
icebp
enter
sar
cdq
div
lock
xor
and
and
std
in
ror
xor
xlat
iret
mov
jg
test
cmp
ins
sar
cli
push
mov
pop
int
mov
stos
in
xchg
call
or
sbb
xchg
dec
mov
or
jg
mov
push
jne
or
cmp
jmp
div
inc
icebp
fs
rcl
push
mov
sub
retf
call
dec
dec
pushf
ret
push
xchg
idiv
mov
mov
popf
retf
xchg
adc
retf
ds
jb
or
cld
test
int3
dec
dec
push
jg
cmp
ins
push
loopne
sub
sub
xlat
out
outs
fdivrp
mov
fst
sbb
bswap
jp
popf
sub
das
test
cli
add
and
sub
jns
in
mov
push
mov
mov
dec
push
call
dec
mov
inc
ins
dec
enter
mov
jmp
es
mov
mov
icebp
imul
fadd
pop
lods
mov
call
or
lahf
xchg
sbb
out
mov
dec
and
lods
push
lock
pop
repz
das
mov
fisub
adc
or
mov
out
out
retf
stos
and
xchg
mov
aam
inc
shl
sar
iret
mov
adc
retf
or
call
stos
ss
rep
sahf
jae
cwde
retf
sbb
sub
call
mov
sbb
and
add
loop
sbb
mov
jae
jb
cdq
scas
aas
int3
lock
xchg
ins
jae
out
or
sbb
cdq
in
in
xchg
sub
loopne
ja
pop
lods
jp
retf
ins
and
xor
(bad)
mov
pop
movs
push
in
and
mov
inc
jbe
pop
shl
maxps
dec
popa
inc
pushf
xor
(bad)
scas
fdiv
mov
and
adc
and
shl
int
xchg
gs
dec
lea
jecxz
sub
hlt
pop
mov
out
int3
add
shl
cmp
sbb
mov
ret
stc
mov
test
mov
dec
pop
cs
and
lds
sub
aam
ror
or
popf
cmp
xchg
jmp
mov
mov
retf
stos
scas
int3
aaa
jne
je
out
xor
fdivr
pop
iret
test
(bad)
xor
adc
aad
mov
or
mov
mov
jl
mov
hlt
bound
(bad)
lds
adc
pop
int3
mov
xchg
push
adc
mov
das
idiv
ins
arpl
in
in
push
sar
int
cmp
ins
push
repz
and
ins
repnz
cwde
mov
cs
dec
in
int3
push
jg
or
repz
xchg
in
mov
cmp
xor
pusha
das
dec
push
xchg
nop
and
ins
ss
sub
lods
xor
test
ja
test
inc
sub
fsub
stos
dec
int3
dec
adc
sbb
pop
adc
xchg
out
pop
jp
mov
pusha
neg
xchg
pop
movs
ret
repz
mov
and
pop
push
push
hlt
hlt
fstp
and
seta
outs
fisub
mov
and
js
ret
and
cs
jnp
iret
out
jbe
and
add
cmc
fstp
xor
(bad)
xchg
fidivr
push
jecxz
sub
ret
(bad)
xchg
movs
xchg
xchg
jle
xchg
(bad)
hlt
mov
test
ja
inc
mov
leave
or
jno
pop
out
popf
(bad)
cmp
ss
fwait
inc
stc
jle
mov
or
or
push
in
inc
mov
mov
or
lods
push
sbb
ins
arpl
pop
call
cmp
outs
ins
movs
div
cmp
lods
mov
cmp
ror
push
xor
test
inc
hlt
in
loope
sub
clc
test
out
sbb
sbb
pop
inc
mov
mov
mov
or
fisttp
sahf
cmp
jmp
lods
dec
pop
es
outs
test
xor
mov
or
fucomi
bound
test
je
adc
fwait
xchg
cmps
sahf
cmc
xor
iret
cwde
push
leave
inc
mov
inc
pop
shr
rcr
add
sahf
ins
(bad)
sbb
leave
enter
sbb
loope
std
mov
call
jmp
cmps
call
nop
sub
jne
cmp
xchg
sbb
repz
js
(bad)
jmp
inc
js
daa
pop
xchg
push
in
push
mov
mov
fwait
sbb
cs
sub
dec
and
cmp
fwait
cli
mov
test
lahf
cmovp
jb
sbb
dec
icebp
or
(bad)
jnp
push
sbb
pop
mov
pop
jl
lds
pop
adc
ret
je
sub
sub
adc
not
and
stc
push
loopne
mov
sub
movs
mov
hlt
nop
cmp
jge
cmp
mov
lea
lock
mov
sub
xchg
cld
not
ror
in
fadd
test
cmp
fidivr
jno
jle
sahf
je
xor
xlat
(bad)
xor
nop
mov
je
cmc
pop
push
mov
pop
rcl
jmp
addr16
jnp
sbb
ins
pop
sub
pop
gs
cmp
add
fcomp
aaa
push
mov
add
adc
cmp
mov
xchg
mov
lock
mov
mov
shl
pop
or
jbe
int3
inc
call
fisubr
mov
jl
and
mov
jno
mov
das
les
mov
sub
sub
jbe
mov
shr
pop
cmp
aas
ins
jg
packuswb
outs
out
jae
cmps
mov
inc
ja
mov
es
cmp
out
ins
push
sbb
ror
mov
popa
shl
mov
adc
retf
enter
imul
push
shl
ins
std
xchg
inc
mov
and
lods
or
call
or
mov
enter
dec
adc
jne
retf
push
and
pop
xor
movs
push
and
or
and
inc
aam
(bad)
push
cli
js
dec
cmp
push
jbe
sbb
call
scas
xchg
inc
inc
adc
xor
or
inc
iret
ficomp
mul
int
mov
push
mov
jb
jne
xchg
mov
(bad)
fnstcw
xchg
stos
xchg
mov
mov
or
xchg
pop
jmp
out
pop
xchg
xchg
rcr
jmp
push
cmp
imul
jns
jno
ins
sub
or
xor
pop
push
sub
inc
inc
cmps
test
enter
cmp
ror
ret
aam
sub
in
push
push
lds
into
sti
cmp
gs
dec
(bad)
pop
xchg
xchg
in
jne
fcomp
cli
scas
std
xor
or
cmp
jecxz
pop
gs
jns
fwait
ror
repz
imul
push
jbe
int
xor
mov
mov
xor
push
dec
mov
pusha
cld
mov
dec
data16
ja
jne
sbb
aad
loop
or
lods
popa
out
mov
mov
(bad)
jbe
mov
jp
out
mov
fld
loop
mov
loope
mov
mov
call
sbb
ret
push
sbb
adc
ret
pop
sbb
(bad)
ret
mov
rcr
cmp
aad
inc
ins
dec
push
cmp
vpinsrw
xchg
mov
mov
loop
movs
xchg
fild
jle
xor
push
std
xor
sbb
adc
pop
cmc
push
xor
fld
inc
shl
cmp
mov
dec
cmp
cwde
adc
adc
or
loopne
adc
lahf
push
(bad)
mov
mov
sub
(bad)
xor
(bad)
mov
(bad)
pop
fdiv
xchg
call
mov
dec
jl
(bad)
call
fcomi
xchg
jecxz
sbb
jbe
cmps
jge
adc
xlat
push
inc
and
cmp
nop
outs
mov
pop
jae
arpl
and
stos
test
in
sti
add
sub
rcr
(bad)
add
aam
loopne
add
test
ins
ins
push
cli
arpl
jl
out
dec
test
(bad)
out
pop
mov
fisubr
ins
adc
jbe
ficomp
adc
ss
in
xor
lea
or
push
jg
sbb
nop
clc
lds
jg
dec
mov
data16
cmp
push
push
sub
hlt
lea
test
jae
scas
push
push
retf
cmp
pusha
xor
fild
sti
xchg
pop
aas
fisubr
sbb
ret
mov
scas
sbb
xchg
jno
jns
push
adc
mov
fwait
jmp
sahf
jb
push
iret
and
scas
inc
xchg
jnp
aas
adc
xor
pop
sbb
mov
nop
jns
or
outs
cwde
int
mov
sahf
sti
pusha
ror
out
push
pop
cdq
pop
mov
ins
enter
movs
addr16
push
ds
arpl
test
adc
and
inc
pop
mul
jb
xor
in
std
mov
int
imul
and
jmp
int
mov
cdq
lods
std
jae
jp
push
sbb
shl
or
test
push
mov
out
movhps
shr
lock
mov
icebp
and
jno
into
jo
jg
pop
push
jp
pop
(bad)
stc
inc
int3
loope
cmc
stos
stos
mov
std
ficom
stos
mov
sbb
jg
(bad)
(bad)
jmp
mov
ret
lock
xchg
or
pop
not
aad
nop
push
in
add
push
pop
sub
nop
lea
ins
push
repnz
outs
and
pop
mov
mov
dec
test
fwait
pop
or
xor
idiv
mov
or
(bad)
pushf
adc
jmp
and
sbb
ror
fisub
daa
xor
xor
jmp
cmp
gs
dec
sbb
into
adc
lods
pop
pop
sub
push
add
xlat
sub
or
jmp
pusha
popa
outs
push
clc
ja
movs
(bad)
xor
loope
out
pusha
dec
xchg
call
xchg
dec
jns
add
int
je
int
lea
jne
stos
(bad)
pop
inc
mov
dec
jae
xchg
xchg
jl
mov
fnstenv
mov
ficom
add
adc
gs
test
sbb
int
fwait
xchg
test
rol
movs
xor
xchg
data16
cmps
retf
push
push
xchg
popf
movs
push
retf
cmp
aam
xor
loope
and
ss
(bad)
(bad)
mov
test
inc
sbb
lds
test
fild
or
jbe
clc
mov
add
push
xchg
cmp
jge
mov
pop
outs
in
lock
lea
dec
xor
(bad)
stos
pop
inc
scas
data16
es
sub
leave
mov
pop
pop
cwde
mov
jae
xor
jne
inc
cmp
stos
xor
xchg
or
mov
dec
push
in
out
jmp
add
xchg
xlat
sub
and
addr16
pop
(bad)
in
mov
pop
mov
mov
inc
loop
push
movs
cmp
test
(bad)
(bad)
es
mov
dec
adc
mov
outs
lahf
dec
mov
(bad)
aas
clc
cs
and
into
dec
mul
out
lods
int
mov
outs
push
add
cmc
adc
xchg
pop
shr
sub
test
(bad)
dec
xor
hlt
fld
into
or
out
mov
xchg
pop
or
fcmovnbe
mul
in
add
mov
dec
fsub
ret
push
pusha
or
and
cs
push
cdq
jp
mov
mov
xchg
out
loope
dec
xchg
shr
dec
xchg
jle
ss
lea
sahf
aam
out
aas
sbb
clc
mov
jmp
fmul
mov
cld
std
and
ds
ds
inc
inc
das
xchg
lahf
adc
jns
xchg
jmp
dec
push
pop
jecxz
js
push
mov
adc
mov
xchg
inc
jge
popf
xlat
and
adc
add
pop
add
mov
mov
mov
pop
push
sbb
dec
enter
dec
inc
iret
adc
ins
test
sti
mov
cmp
inc
cdq
(bad)
psraw
pop
sub
push
sbb
or
(bad)
mov
mov
xchg
dec
sub
dec
adc
test
inc
push
push
(bad)
pop
mov
int3
xor
jecxz
cdq
(bad)
dec
pop
ret
mov
fist
cwde
adc
mov
or
push
out
inc
stos
or
jle
fiadd
int
shl
sti
pop
ss
rol
or
sbb
jae
js
inc
pop
popa
sub
xlat
nop
jno
retf
xchg
dec
cmp
jb
test
pop
jge
mov
mov
ficom
jge
mov
icebp
lock
pop
int3
or
cwde
pop
jecxz
cmp
rcl
pop
das
xor
test
sub
mov
scas
sbb
xor
xchg
inc
ins
gs
outs
mov
icebp
icebp
test
sbb
and
in
sub
mov
xor
div
sub
jle
inc
movs
ins
cmp
add
stc
jne
sbb
pop
cdq
icebp
iret
xchg
mov
xor
mov
mov
adc
out
loop
xchg
mov
jmp
adc
mov
test
iret
mov
or
mov
dec
scas
imul
sbb
xchg
xchg
push
dec
test
pop
mov
popa
cld
test
xchg
mov
cwde
xchg
js
jo
push
mov
out
or
add
pop
in
in
sbb
add
(bad)
cmps
dec
xor
mov
retf
sbb
mov
je
mov
or
adc
cld
dec
std
loop
fs
fbld
mov
in
sbb
pop
mov
call
es
inc
dec
clc
or
xor
in
bnd
pop
push
test
sar
pop
dec
movs
add
pop
lock
adc
xchg
sub
ret
adc
mov
ins
retf
inc
fstp
lds
cli
hlt
and
mov
mul
sar
cmp
sbb
mov
stos
stc
neg
mov
(bad)
bound
lods
sbb
lods
imul
jo
xchg
push
cmp
adc
arpl
cdq
jmp
mov
and
mov
lea
or
cs
lds
push
out
mov
push
mov
jbe
inc
hlt
loope
pop
add
sub
repz
sar
push
aas
pop
sub
shl
gs
cmc
and
bound
fisub
pushf
aas
sub
call
mov
ins
cdq
cmc
shl
fwait
imul
mov
sti
adc
fisttp
(bad)
pop
jmp
retf
jo
lods
psrld
mov
inc
out
dec
mov
shl
not
call
(bad)
mov
lods
jg
mov
outs
push
pop
sbb
pop
xchg
xchg
(bad)
cli
int3
popf
or
mov
cmps
ftst
ficom
ds
fild
(bad)
xor
lahf
paddd
pusha
scas
cwde
and
cld
rcr
xor
fldcw
add
mov
mov
cmp
fimul
xlat
or
(bad)
jmp
sbb
rol
fwait
jne
bound
cmps
sti
pop
pop
imul
retf
or
jbe
jns
adc
lods
in
mov
dec
and
lds
sbb
jb
rcl
icebp
push
sbb
fs
pop
mov
lds
fmul
mov
(bad)
jge
jnp
mov
dec
in
cmc
lahf
sbb
out
sub
aad
adc
neg
push
and
xchg
and
shl
jne
and
push
sbb
and
imul
xchg
adc
je
sub
idiv
mov
xchg
jge
stc
pushf
popf
push
xchg
xor
pop
aam
pushf
stos
push
jge
mov
xchg
cmp
pop
pusha
inc
pop
dec
cdq
sub
hlt
lods
and
jg
je
ins
call
test
xchg
add
xor
js
sbb
push
cmps
loope
imul
icebp
mov
adc
xchg
adc
test
jb
das
and
dec
mov
in
xchg
cmp
je
and
adc
dec
jl
jne
dec
rcr
psrld
dec
cmp
sbb
inc
cmp
and
fisttp
or
fistp
movs
xchg
pop
rcl
dec
mov
pusha
jle
and
jns
jmp
inc
xor
iret
push
xlat
mov
sbb
cld
pop
rol
popa
or
icebp
adc
je
mov
movs
push
cmps
icebp
xor
fsub
inc
mov
dec
and
je
add
test
fst
xchg
cs
ins
pusha
test
jo
jmp
imul
xchg
xchg
sbb
mov
setnp
adc
gs
popw
xchg
mov
outs
das
or
retf
mov
xchg
call
sbb
adc
mov
dec
ja
or
shr
adc
xchg
mov
sti
scas
adc
dec
fstp
les
(bad)
xor
mov
fimul
dec
mov
and
pop
jecxz
out
shr
mov
jo
test
push
bound
mov
xor
xor
dec
xchg
mov
imul
and
pusha
movs
aaa
xchg
jg
fcmove
xor
lods
xchg
cmp
jl
lods
and
mov
jmp
dec
mov
mov
jl
push
loope
popf
inc
jbe
pop
xlat
dec
(bad)
jno
bound
inc
enter
sub
cmc
call
xchg
(bad)
(bad)
es
in
jle
stc
cmp
xchg
jp
jl
mov
pop
mov
arpl
and
retf
addr16
test
inc
ret
mul
dec
enter
inc
jnp
dec
add
js
sub
js
les
push
push
imul
push
or
sbb
dec
mov
call
or
int
mov
cs
addr16
push
(bad)
hlt
ins
(bad)
xlat
add
into
sbb
and
jmp
es
rcl
mov
sbb
add
jp
iret
sbb
das
je
imul
sbb
cmps
sub
pop
fbstp
cmps
in
fld
mov
xlat
and
jb
(bad)
fidiv
inc
cmp
scas
jae
test
hlt
pop
push
mov
or
ss
lods
cmp
das
fisubr
icebp
ds
movs
fucomip
cmps
dec
mov
iret
mov
fild
push
cmp
lds
stos
adc
add
or
les
jg
jo
jle
(bad)
fadd
adc
sbb
mov
outs
gs
mov
sahf
add
cmp
or
or
daa
ror
sbb
(bad)
mov
push
repnz
les
inc
bound
fwait
or
lea
xchg
pop
mov
imul
add
pop
jae
xor
ror
test
add
add
clc
cli
mov
jmp
sahf
push
dec
add
imul
jge
cwde
sbb
fs
sahf
imul
pop
clc
cmp
mov
out
mov
(bad)
push
push
loop
sub
fidiv
push
cli
call
push
cdq
and
jns
dec
jg
leave
or
fcomp
jl
xchg
icebp
push
push
mov
imul
ret
ret
adc
mov
push
sub
cs
into
(bad)
cwde
sub
sub
popf
push
cmp
adc
out
dec
lods
cmp
fild
jmp
stos
add
fild
sbb
push
push
mov
std
cmps
in
out
xchg
sub
ss
push
sbb
xor
inc
dec
imul
mov
pop
fs
jecxz
push
jecxz
inc
popf
sub
sub
pop
adc
add
mul
pop
sbb
aaa
dec
lods
cmps
adc
leave
imul
pop
stos
mov
test
push
mov
cmp
cmp
(bad)
xchg
test
in
sbb
cmps
pop
and
xchg
rcr
nop
jbe
add
or
pop
js
out
retf
movs
call
outs
xchg
xor
popa
(bad)
jl
pop
aas
js
dec
cdq
push
clc
or
cwde
ss
xor
add
lods
out
jmp
out
fisub
sbb
mov
push
add
int
sbb
cmp
inc
shr
pushf
xchg
inc
push
xor
jo
lahf
lds
out
fcomp
popf
ret
sbb
loopne
cmps
outs
jbe
ret
jmp
inc
add
movs
sar
xchg
in
(bad)
leave
jg
pop
mov
pop
push
mov
inc
jnp
dec
sub
bound
jecxz
xchg
scas
and
xor
cmps
pop
ficomp
sub
retf
retf
dec
stc
mov
(bad)
fisubr
cmp
jns
imul
mov
idiv
pop
ret
lea
retf
in
jns
or
sub
pop
or
retf
push
and
call
fcom
sbb
pop
cld
shl
sbb
jo
or
in
fild
inc
adc
jecxz
loop
add
pop
xlat
repz
ret
in
fsqrt
xor
mov
mov
xchg
jp
pop
lods
into
pusha
push
fsubr
push
sbb
movs
pop
fwait
aas
inc
lock
push
push
and
mov
int
jge
inc
enter
ja
mov
inc
dec
fcmovb
or
sub
pop
imul
imul
sub
daa
(bad)
fs
pop
test
(bad)
mov
cli
inc
jbe
and
ret
fnstsw
cmp
pop
inc
mov
stos
push
out
dec
in
pop
sahf
push
pop
repnz
test
nop
imul
retf
fcom
add
mov
push
or
mov
test
jl
jns
sub
add
mov
xor
cmp
inc
iret
shr
mov
imul
mov
inc
rcr
cwde
mov
jbe
or
neg
inc
push
push
add
adc
stc
sub
bound
lea
sar
enter
dec
retf
jns
dec
jmp
xor
sar
aad
retf
sbb
pop
dec
xchg
repnz
fwait
dec
sahf
push
xor
pop
inc
daa
(bad)
into
shr
push
mov
popf
ja
add
pop
sbb
outs
jne
inc
pop
out
mov
cmps
xchg
loopne
(bad)
pushf
mov
xchg
pop
mov
sub
neg
jge
cld
movs
retf
aas
adc
jmp
dec
mov
outs
xor
inc
mov
mov
imul
dec
retf
fs
xlat
pop
mov
push
ins
sub
ds
and
es
add
sbb
lds
sub
add
movs
and
dec
cwde
cli
or
mov
or
dec
leave
out
sbb
dec
pop
dec
push
leave
stos
jnp
outs
pop
mov
cmps
or
fiadd
dec
pop
jb
fidivr
xor
push
push
xchg
inc
(bad)
cli
jle
sub
sbb
adc
xor
les
in
xchg
aad
push
adc
in
(bad)
retf
lods
outs
not
mov
inc
push
imul
dec
jne
xor
xchg
mov
ds
pop
pop
push
enter
hlt
pop
xchg
cli
ins
std
jle
cmp
cmps
adc
xor
mov
nop
cmp
cmc
cmp
add
jns
call
stc
int3
adc
ss
pop
mov
lods
iret
nop
jecxz
mov
shl
aam
adc
jns
push
cli
pop
pop
push
out
pop
jae
or
sbb
into
mov
iret
jae
(bad)
out
xor
dec
jns
test
fmul
jge
enter
call
inc
outs
pushf
pop
xchg
push
outs
popf
sub
dec
outs
movs
add
std
adc
ins
push
inc
(bad)
int3
xlat
xor
add
dec
fcmovb
inc
stos
sbb
inc
cmp
fcom
arpl
push
fmul
inc
cli
sbb
mov
cli
out
hlt
cmp
fidivr
js
fmul
or
mov
cmp
daa
adc
mov
sbb
or
loop
dec
mov
or
push
js
mov
xor
jb
sbb
fld
rcr
inc
lock
ja
sub
nop
adc
stos
dec
sbb
push
lods
mov
data16
not
push
scas
inc
aaa
and
add
imul
aas
lods
cmp
cmp
xor
es
or
ret
push
loop
mov
out
repz
fmul
(bad)
mov
sbb
call
shr
adc
(bad)
test
mov
jg
cmp
pop
inc
push
mov
aam
test
xchg
loop
push
lock
adc
dec
fxtract
outs
fs
fidiv
jno
mov
mov
test
cli
into
sub
nop
(bad)
cmps
jl
bound
sbb
inc
mov
add
aam
(bad)
in
inc
cmc
js
cmp
xlat
mov
ret
stos
add
dec
aaa
popa
mov
pop
mov
inc
ins
push
movs
dec
(bad)
sub
add
mov
aaa
dec
cli
ss
dec
daa
push
jl
sub
int
push
int
adc
cli
mov
xor
or
adc
mov
ins
cpuid
mov
bound
pop
xor
push
je
xlat
nop
xchg
cwde
bound
aad
cmps
scas
movs
and
sbb
xor
fist
mov
pop
jp
inc
push
jecxz
push
push
sbb
outs
xchg
(bad)
in
push
push
jno
inc
push
hlt
and
push
jg
mov
in
arpl
xchg
mov
and
(bad)
into
dec
movs
mov
jnp
imul
scas
mov
loopne
repz
xchg
stos
mov
loope
push
and
ficomp
pop
cmp
daa
call
call
jle
aam
jmp
das
pop
cmps
rcl
aaa
not
xlat
addr16
add
mov
push
test
jmp
out
aam
mov
ret
(bad)
jns
fwait
aaa
in
dec
lds
out
pop
cmp
dec
mul
aam
or
fstp
jg
fcom
sub
inc
mov
mov
jbe
dec
sbb
cs
push
push
pop
gs
mov
fs
mov
cmp
jmp
dec
xlat
inc
fidiv
jne
inc
cmc
dec
dec
lds
mov
gs
pop
retf
fimul
outs
lock
cmp
in
xchg
cmp
gs
sti
sbb
call
repnz
movs
arpl
popa
xchg
aas
in
loopne
pop
mov
dec
movs
jle
mov
or
and
inc
and
cmovo
repnz
jecxz
mov
sti
xchg
test
je
add
xchg
enter
xor
mov
cmp
add
mov
icebp
out
mov
cmps
test
pop
mov
hlt
addr16
push
shr
test
jo
pop
jno
add
cld
push
into
or
dec
xchg
xchg
inc
push
cmp
jns
call
add
add
inc
push
sub
push
mov
adc
ret
lods
or
or
sub
jle
std
aam
and
mov
adc
test
iret
adc
clc
shr
sbb
cs
dec
sub
mov
(bad)
jb
loope
pushf
jmp
pop
call
pop
pop
shl
inc
adc
inc
sbb
mov
hlt
xor
cld
cmp
sar
movnti
movs
sub
retf
dec
fdivr
(bad)
out
pop
push
popf
inc
mov
dec
ror
push
pop
mov
retf
idiv
loopne
fsub
jle
or
adc
sbb
dec
repz
and
jmp
xchg
xchg
bound
enter
add
mov
imul
pop
xor
cs
ret
pop
std
aas
push
test
repz
cmps
ficom
dec
adc
retf
jne
call
outs
cmps
cwde
ret
test
jnp
mov
sub
loopne
mov
xchg
dec
aaa
movs
test
xchg
xor
jb
add
or
add
sub
jmp
push
push
in
and
mov
lds
add
sub
cmp
aad
popf
imul
imul
jbe
cmc
imul
enter
push
inc
mov
(bad)
in
ja
loope
movs
push
push
push
or
adc
cdq
pop
sbb
jbe
fisttp
jecxz
pop
lds
mov
hlt
push
(bad)
xchg
mov
lsl
or
aaa
int3
cdq
and
in
leave
jb
jle
mov
pop
in
sub
jmp
sahf
retf
cmp
ret
xchg
dec
mov
repz
dec
jno
fidivr
xchg
je
pop
add
push
and
pop
push
or
iret
dec
inc
mov
jmp
scas
pop
and
adc
fstp
movs
cmc
movs
call
fisubr
push
add
or
mov
inc
cmps
dec
fstp
ret
push
inc
mov
das
dec
mov
mov
pop
mov
jecxz
mov
(bad)
rcr
scas
enter
push
inc
(bad)
adc
test
jns
inc
push
cmp
arpl
push
jbe
dec
pop
loope
sbb
push
scas
scas
inc
ja
mov
dec
dec
mov
xchg
jnp
test
xchg
aam
xor
repnz
add
mov
es
mov
sbb
inc
and
dec
outs
mov
cld
mov
mov
dec
xor
or
addr16
aam
jmp
shr
repnz
out
jl
mov
add
(bad)
adc
xor
outs
mov
push
jmp
inc
nop
jle
sbb
sub
sbb
in
or
xor
inc
int
mov
push
cwde
mov
cmp
jg
jns
mov
jmp
aaa
pop
cmp
xchg
test
adc
int3
repz
push
mov
in
cs
jg
mov
pushf
and
and
and
sti
inc
aaa
add
fwait
dec
ret
xor
and
jmp
add
dec
neg
jecxz
movs
inc
cmp
mov
inc
fcomp
mov
fs
pop
ins
sub
cmp
or
fwait
test
xchg
jb
mov
dec
stc
mov
push
jge
mov
sbb
add
add
add
imul
(bad)
int
xchg
jns
popa
pushf
call
loop
push
add
in
add
inc
jae
or
pusha
pusha
jb
popa
pop
dec
mov
dec
pusha
mov
in
mov
jecxz
sub
pop
inc
enter
sbb
mov
dec
aam
push
shl
push
xchg
mov
or
inc
add
pop
mov
jmp
dec
(bad)
jecxz
jge
ja
jbe
enter
and
or
xlat
icebp
ja
fnstcw
cmp
push
arpl
sub
rcl
adc
xlat
or
in
(bad)
loop
inc
inc
imul
ja
daa
fwait
cmp
push
cmp
ret
retf
add
je
pop
test
stos
ja
dec
bound
xchg
ffree
push
scas
and
je
out
and
mov
icebp
and
adc
test
js
out
test
or
adc
inc
rcl
dec
xor
adc
and
enter
push
(bad)
xor
jmp
das
out
ret
sahf
sub
scas
or
nop
imul
cmp
popf
cld
and
xor
scas
outs
bound
fwait
cmp
outs
xchg
ret
ficomp
inc
ret
push
into
jbe
inc
pop
push
mov
jo
dec
push
fs
mov
add
das
std
xlat
jnp
jl
mov
dec
xlat
jne
inc
stc
(bad)
jmp
sbb
jae
dec
cmp
push
mov
inc
jo
xchg
enter
loop
mov
pusha
pushf
jo
scas
and
cmp
mov
inc
sbb
clc
jno
sub
and
outs
fmul
fiadd
shl
aad
js
mov
jg
jmp
aam
imul
dec
xor
retf
push
(bad)
sub
mov
retf
adc
push
into
add
out
loopne
add
arpl
icebp
inc
das
rcl
retf
loope
inc
xor
xchg
pop
movs
lea
mov
dec
ret
out
mov
addr16
cmp
lods
add
icebp
std
sub
ret
retf
add
push
push
popf
push
cwde
inc
out
inc
xor
push
jnp
lock
lock
rol
mov
xor
into
mov
out
xchg
fwait
dec
mov
jle
out
in
mov
adc
test
push
adc
test
pop
test
pop
fs
cmp
int
sub
jno
jmp
aad
lods
fiadd
inc
out
xchg
(bad)
call
jnp
mov
aaa
jecxz
jmp
dec
in
pop
adc
dec
cmp
pusha
nop
pop
sbb
(bad)
sbb
in
pop
rol
xchg
out
cmp
call
cmp
movs
adc
call
add
ficomp
sidtd
pop
in
xor
call
xchg
push
test
mov
mov
mov
test
call
es
(bad)
and
mov
or
mov
mov
aam
in
sbb
cmps
loopne
push
stc
sub
out
imul
mov
nop
add
nop
inc
xor
not
pop
xchg
dec
popf
shl
jge
lods
xlat
fsub
pop
cmp
gs
jb
clc
mov
int
add
xchg
in
ja
ret
std
pop
loop
inc
pop
(bad)
dec
icebp
push
inc
shl
sbb
test
out
or
sbb
arpl
ins
jne
not
xlat
xchg
arpl
repnz
adc
sbb
dec
inc
in
(bad)
mov
inc
jp
dec
iret
xchg
cmps
mov
inc
adc
jmp
inc
retf
cmp
push
iret
pop
jg
clc
int
jp
push
out
pop
sbb
(bad)
dec
xlat
jg
fnsave
in
jns
adc
imul
aam
call
jp
jmp
add
in
dec
pushf
jl
adc
inc
lods
cmp
cdq
push
xor
cmps
(bad)
mov
jecxz
(bad)
xchg
adc
inc
inc
fadd
pop
in
pop
mov
add
fnstenv
fist
das
(bad)
loop
dec
loopne
aaa
fcomip
add
cmp
fcom
mov
xor
imul
std
pop
neg
mov
sahf
dec
xchg
(bad)
and
sahf
enter
out
pop
mov
popf
jg
cmp
(bad)
ja
imul
jnp
fcmovnbe
pusha
cmp
leave
xchg
jns
cmp
mov
cmc
xor
mov
jmp
or
pop
pop
addr16
mov
cmp
push
inc
mov
sub
sub
and
loopne
(bad)
mov
lods
mov
inc
sar
xchg
aad
sbb
adc
jmp
js
xchg
cmps
jg
mov
and
jbe
xor
daa
pop
ds
stos
scas
idiv
sub
mov
fwait
add
mov
in
repnz
shl
fimul
add
arpl
iret
xchg
div
sbb
ins
xchg
dec
mov
jg
jg
stc
in
cmp
xchg
fdivr
adc
mov
mov
jg
(bad)
push
dec
or
repz
(bad)
daa
int3
push
sub
jns
pop
or
ss
dec
dec
or
cmp
dec
call
cwde
aaa
in
cwde
das
add
xor
dec
sub
je
push
sub
add
cli
jg
aaa
retf
pop
addr16
sbb
dec
das
add
outs
pop
pop
movs
retf
and
ret
repz
lods
ds
ins
and
cmp
mov
xchg
mov
mov
in
add
mov
fwait
inc
(bad)
sub
aas
lahf
shl
inc
call
daa
icebp
aaa
aam
dec
call
mov
int
dec
fild
fadd
adc
pop
inc
fadd
inc
adc
push
sub
out
mov
mov
stos
mov
fisttp
adc
xor
clc
jmp
nop
cli
push
rcr
hlt
imul
jb
cmp
in
adc
ret
cmps
sbb
sbb
add
dec
outs
sub
xlat
(bad)
lahf
retf
dec
dec
stos
aaa
add
arpl
sub
aas
and
push
and
mov
fistp
es
(bad)
mov
ins
clc
jns
hlt
in
ss
ror
mov
mov
out
aad
jge
outs
mov
xor
inc
fwait
add
mov
add
dec
mov
dec
mov
pop
mov
push
jmp
sub
movs
push
stos
outs
jne
aaa
cmp
data16
mov
xchg
imul
jmp
mov
pop
mov
add
mov
out
jge
mov
jge
add
retf
fwait
mov
jmp
lock
hlt
mov
inc
in
cmp
jno
or
jo
inc
fnstcw
hlt
scas
mov
test
push
out
and
jge
clc
pop
dec
gs
jae
pop
fldenv
hlt
(bad)
xor
pop
and
int
push
xchg
std
add
or
aaa
sbb
leave
sbb
pop
pusha
je
pop
ja
adc
jo
leave
rcl
sub
sti
cmp
rcr
popf
sub
ins
cmps
add
sbb
ss
mov
adc
fldcw
fmul
sbb
sub
test
dec
cmp
cli
jmp
push
xchg
adc
nop
push
loope
pop
add
adc
mov
inc
cwde
push
mov
in
sbb
out
sbb
adc
add
mov
or
lahf
adc
data16
and
ins
and
(bad)
(bad)
(bad)
into
addr16
jmp
stc
or
(bad)
sar
pop
sub
test
loop
int
or
or
lock
in
dec
xlat
inc
mov
dec
(bad)
cmp
loope
into
push
inc
pop
dec
dec
and
inc
imul
adc
in
inc
ror
adc
mov
fiadd
pop
dec
(bad)
test
sbb
aad
mov
and
mov
lock
test
mov
loop
sub
int3
dec
fadd
in
xor
imul
popf
jecxz
leave
or
sahf
mov
(bad)
sahf
mov
mov
stos
adc
xlat
std
mov
out
stos
scas
popf
inc
push
cs
int3
hlt
jno
mov
fnsave
loopne
cs
cmp
and
rcr
pop
jl
dec
push
std
xor
test
rol
in
adc
lea
ret
xchg
dec
rcr
dec
(bad)
cmp
leave
imul
mov
mov
and
inc
gs
and
adc
sub
jge
data16
retf
add
add
add
push
stos
inc
in
adc
or
and
jb
cmps
scas
(bad)
in
popa
sub
push
sbb
mov
pop
or
jle
aaa
cmp
or
test
add
sub
mov
js
stos
sbb
ret
add
dec
cdq
lock
stos
jbe
adc
pop
pop
xor
xor
cld
mov
mov
stos
add
daa
jecxz
xchg
and
(bad)
inc
cwde
xor
xor
rol
(bad)
xchg
psubusb
hlt
movs
in
shl
jbe
enter
arpl
dec
out
mov
push
xlat
sbb
(bad)
or
lods
loope
xchg
add
clc
lea
push
js
and
stos
jecxz
and
(bad)
rcr
xchg
sub
mov
sub
push
imul
aam
shl
sbb
outs
into
les
mov
rcl
adc
ret
test
rcr
(bad)
cld
sub
mov
stos
mov
aas
adc
test
mov
inc
lock
pop
test
dec
or
into
adc
pop
pusha
cmp
ret
inc
jne
xor
fld
pop
push
stos
js
stos
mov
mov
popf
dec
movs
and
aam
scas
and
adc
mov
and
dec
in
repnz
xor
inc
ret
or
pop
das
fnstcw
frstor
cs
xchg
call
daa
push
iret
sti
int3
lock
cmp
mov
in
jle
pop
xchg
push
adc
push
push
fidivr
ss
sub
ins
dec
stc
adc
adc
xchg
mov
hlt
test
aaa
in
aam
cmc
mov
in
daa
jno
aam
adc
rol
add
out
sub
mov
gs
sub
adc
push
jnp
aas
xchg
mov
jb
push
repz
test
sbb
and
pop
xor
add
mov
fcomp
add
add
push
sbb
repnz
fidivr
and
add
mov
lar
ins
xchg
mov
pop
dec
pop
(bad)
aaa
(bad)
rcl
aaa
jns
push
(bad)
ss
xchg
int
mov
call
test
pushf
jle
in
xchg
pop
(bad)
(bad)
fcom
es
sar
mov
push
and
mov
ins
(bad)
dec
js
xor
mov
lods
loope
sti
xor
test
inc
push
lock
sub
stos
jp
neg
push
jmp
pop
mov
imul
cdq
dec
sub
xor
popa
into
mov
icebp
stos
fsubrp
and
scas
icebp
xchg
popa
in
lahf
inc
adc
test
mov
out
call
cli
in
jo
ins
pop
push
ss
mov
adc
lods
jmp
cmps
jnp
cmp
outs
dec
jmp
adc
push
or
aaa
sbb
xchg
sub
(bad)
repz
ins
adc
mov
cmps
xchg
fst
mov
adc
push
into
and
ds
mov
loop
inc
mov
(bad)
rcl
lock
jp
inc
dec
xchg
sbb
in
ins
or
out
xor
ret
add
fnstenv
mov
xchg
ror
add
scas
xchg
dec
xor
xor
cmp
cmp
jp
test
adc
outs
inc
inc
or
aam
test
leave
pop
mov
ficom
outs
daa
inc
test
or
rol
daa
imul
int3
adc
and
inc
pop
jecxz
cmp
es
imul
push
test
cdq
test
sahf
inc
pop
movs
inc
add
adc
ror
pusha
stc
add
inc
push
cmp
mov
(bad)
jb
and
nop
xor
sub
aam
xor
dec
or
jecxz
xchg
xlat
test
ror
cs
imul
sub
int3
daa
outs
push
(bad)
mov
cmp
stos
aad
jmp
xchg
test
(bad)
std
xchg
test
xor
pusha
mov
sub
jne
mov
rcr
mov
fisttp
je
jne
repz
ret
movs
(bad)
std
imul
loop
pop
mov
push
pop
fistp
mov
aaa
inc
xchg
xor
in
sub
adc
jmp
mov
sub
sar
dec
std
pinsrw
pop
cmp
enter
and
lock
loopne
push
and
push
sub
sbb
xchg
fucomi
mov
int
sar
jmp
add
out
mov
popa
ror
dec
push
mov
mov
push
pop
sti
xchg
add
loopne
int
into
dec
bound
jmp
or
(bad)
sub
mov
hlt
jne
call
in
mov
movs
hlt
cwde
movs
fcos
dec
cmp
scas
in
retf
std
pop
dec
sbb
push
in
adc
iret
mov
mov
pop
mov
push
retf
add
(bad)
jns
jle
data16
mov
pop
loopne
repnz
jae
cmp
pusha
add
rcl
fdivr
push
cmp
fstp
stc
loope
mov
dec
pop
cld
not
push
retf
sbb
jg
xchg
inc
out
imul
jg
imul
jo
popf
stos
add
int3
ja
imul
popa
scas
repz
xor
pop
mov
mov
inc
aaa
cld
jmp
push
fwait
cwde
sub
loop
in
mov
cmp
repnz
dec
sar
adc
(bad)
jg
shr
xchg
ret
jecxz
lds
out
or
dec
in
mov
xor
add
mov
jns
out
fldcw
and
xchg
mov
shr
mov
mov
ror
shl
in
bound
xor
mov
mov
cmp
das
xor
popa
hlt
fcom
mov
xchg
ret
mov
push
(bad)
or
lock
sub
cld
or
out
and
mov
jne
inc
jb
fsub
mov
jmp
sbb
sub
pop
cmp
ss
data16
pop
pop
inc
mov
test
and
mov
sub
pop
aad
cmp
aaa
psllq
retf
jl
lds
pop
add
int
and
mov
and
inc
inc
ja
test
and
adc
mov
dec
mov
cmp
call
pop
cmovno
mov
inc
popa
out
jnp
movs
xchg
dec
ret
inc
sub
pop
mov
scas
cmc
push
pop
or
mov
cmps
add
pushf
outs
dec
aad
mov
mov
(bad)
jnp
mov
jmp
and
push
or
das
in
cli
iret
cmps
and
mov
and
pushf
popa
push
test
sub
inc
test
cmps
ret
or
test
cs
and
pop
or
cdq
sub
pop
dec
push
imul
sbb
aas
adc
push
fwait
dec
scas
xchg
ja
ja
adc
imul
add
daa
fsubr
cmp
mov
loopne
pop
or
sub
pop
mov
jno
mov
cmp
cmps
jne
sub
xor
pop
movs
sbb
(bad)
mov
cmp
jmp
cdq
ss
cmps
jb
sub
sub
retf
mov
inc
add
add
pop
rol
cmp
out
out
xlat
inc
pop
lods
mov
dec
mov
shr
add
push
mov
data16
inc
das
fbld
pop
aaa
int
inc
imul
pop
push
jg
xchg
inc
inc
pop
mov
ret
dec
and
xchg
xchg
lods
cmp
inc
not
pop
imul
sub
cmovb
in
push
arpl
pusha
adc
jae
cld
into
mov
ins
hlt
or
xor
dec
adc
adc
inc
jo
mov
pop
dec
dec
loopne
add
sbb
pusha
test
sbb
pop
das
jmp
icebp
lea
mov
int
xchg
iret
mov
scas
es
pushf
(bad)
or
cmp
push
fild
aas
iret
cdq
push
(bad)
clc
ss
aad
in
mov
ja
xor
js
dec
int3
push
dec
cdq
or
and
mov
and
mov
mov
aas
jne
sbb
daa
push
(bad)
pop
mov
dec
outs
ror
or
loopne
xchg
push
test
aaa
jecxz
mov
push
hlt
pop
fdivr
call
pop
and
fwait
jno
retf
xor
push
movs
cmp
sbb
mov
sub
ficom
add
and
stc
mov
and
sbb
jmp
sub
lods
(bad)
lea
fbld
mov
out
fmul
pop
mov
retf
aas
cmps
retf
adc
repz
mov
retf
out
push
movs
imul
mov
inc
jmp
test
mov
push
dec
mov
aas
mov
imul
pop
sub
push
mov
jnp
jne
or
mov
arpl
and
rcl
sub
dec
dec
loop
xor
in
retf
jb
add
push
int3
add
sar
repnz
jo
xor
movs
retf
add
adc
dec
stc
retf
or
fstp
test
xsavec
jle
fisttp
adc
jle
fcmovnb
inc
cs
es
rcl
cmp
mov
lea
stc
ja
mov
cmp
push
aam
pop
push
sbb
jo
repz
xor
sti
les
lods
nop
mov
xor
jmp
mov
fucom
cmp
rcl
inc
or
adc
and
pop
and
cld
jb
loop
sub
xchg
movs
sbb
aas
iret
mov
cld
cmp
push
mov
inc
and
pop
sub
(bad)
scas
ror
jns
(bad)
jmp
xchg
and
mov
add
or
inc
pop
imul
aas
gs
in
imul
movs
or
sbb
push
cmp
xchg
sahf
cdq
or
add
aas
xchg
sbb
retf
jnp
xchg
xchg
clc
out
lock
push
push
push
jns
repz
lahf
movs
cmp
std
hlt
je
shl
test
mov
and
push
cli
sub
loopne
dec
push
dec
pop
adc
push
jbe
ss
mov
mov
add
adc
pop
jge
popa
jnp
sbb
adc
mov
jecxz
int3
hlt
sub
aas
scas
cld
push
and
fdiv
mov
xchg
(bad)
jbe
xchg
mov
sub
(bad)
repnz
lods
pop
or
push
pop
mov
mov
xchg
into
jmp
xchg
xchg
call
add
mov
xor
push
mov
(bad)
out
nop
outs
in
stc
xor
dec
push
xchg
xchg
add
pop
pusha
inc
ja
std
out
mov
js
rol
or
scas
jmp
dec
xor
xacquire
faddp
mov
cld
pop
jnp
push
leave
pop
ins
add
std
ss
fs
jmp
in
mov
jae
mov
stos
sub
adc
jge
cmp
or
jg
mov
jae
xchg
push
les
test
jnp
into
mov
adc
dec
mov
sub
(bad)
stos
loope
or
retf
clc
dec
ficom
inc
mov
inc
shl
(bad)
mov
ret
loopne
add
repz
out
add
lahf
xchg
xor
push
mov
sub
xchg
in
or
movs
imul
mov
stc
ins
adc
pop
jb
pop
pop
ins
dec
(bad)
dec
ins
in
or
push
mov
rcl
adc
ins
loopne
pop
inc
fimul
into
cmp
into
outs
jecxz
adc
inc
cmp
push
pop
mov
cmp
sbb
push
loope
loopne
mov
lock
movhlps
test
hlt
aas
test
in
enter
paddb
jge
rcl
jnp
ja
inc
imul
mov
xchg
popf
xor
xchg
xor
add
test
xor
xor
or
xchg
sti
iret
cmp
(bad)
inc
sahf
imul
shl
mov
sbb
mov
icebp
inc
fnstenv
jp
pop
inc
out
push
xchg
ja
mov
mov
ret
xchg
cli
cmps
jle
mov
call
inc
stos
jge
int
aaa
cmp
hlt
pop
dec
pop
jge
stos
stos
mov
dec
add
or
cmp
xor
mov
imul
sub
xor
cmp
push
push
sar
ret
push
or
pop
fs
sbb
pop
rcl
frstor
shr
xchg
gs
dec
inc
bound
jl
and
adc
jbe
xchg
ret
or
(bad)
cs
retf
dec
add
fucomi
mov
add
sub
pop
pop
test
repz
ja
push
mov
pop
lods
je
add
(bad)
cld
or
aaa
and
add
pusha
mov
xchg
mov
ins
cmp
iret
mov
clc
and
call
xor
aad
cmp
stos
sub
sub
out
dec
sbb
or
repnz
dec
data16
adc
mov
pop
pushf
sub
push
cld
mov
inc
xchg
into
dec
push
xchg
dec
sub
xor
jmp
div
mov
sti
mov
pop
in
sbb
pushf
dec
js
push
adc
rcr
pop
mov
popa
sti
xchg
cmp
and
cmc
mov
mov
shl
xchg
(bad)
in
xor
mov
push
loope
ficom
mov
cmps
xor
jge
jmp
push
(bad)
adc
sub
sub
jle
push
xor
lods
fsubr
dec
inc
inc
retf
dec
push
push
sbb
aam
add
inc
add
or
push
jge
push
imul
push
ret
imul
or
in
mov
cmp
jb
cli
lds
and
clc
sub
(bad)
mov
sub
mov
pop
pop
or
jne
inc
jmp
push
mov
mov
xor
repz
(bad)
jmp
out
sti
(bad)
loopne
out
xchg
dec
outs
dec
mov
aad
test
and
pop
rcl
sub
xchg
popf
inc
add
sar
ror
or
push
das
test
out
jae
push
inc
cmp
outs
cmp
hlt
ins
in
sbb
dec
xchg
sbb
add
test
cmp
sub
jae
mov
jno
ja
adc
inc
dec
sbb
pop
jmp
(bad)
out
fadd
add
push
xchg
cmp
adc
xchg
cli
popf
mov
xor
xchg
loope
retf
jge
xchg
into
mov
lock
or
add
jns
sti
mov
(bad)
iret
push
mov
jge
xchg
fwait
cdq
retf
sti
icebp
mov
inc
repz
and
sbb
movs
fild
vmovaps
xor
es
data16
jl
cwde
(bad)
test
xlat
and
pop
cmps
xor
cmp
in
sbb
jbe
nop
dec
pop
inc
stos
mov
fist
fidiv
pop
mov
test
(bad)
and
pushf
ins
ss
(bad)
loop
imul
cld
ret
mov
leave
loop
unpckhps
inc
mov
icebp
or
retf
jmp
mov
inc
psubq
lds
push
xchg
test
rcl
mov
pop
sub
pop
gs
mov
sub
mov
push
cmc
cmp
dec
dec
jmp
in
pop
push
das
iret
test
retf
jne
mov
into
xlat
sti
jmp
push
test
inc
xor
and
push
or
add
jns
add
std
(bad)
mov
or
mov
cs
hlt
cmps
xchg
adc
adc
repnz
mov
psrad
sbb
cmp
mov
dec
aad
sbb
adc
in
mov
sub
cmp
dec
jbe
mov
mov
pop
sbb
fidiv
iret
(bad)
adc
pop
jg
std
pop
movs
jmp
lahf
adc
popa
jmp
addr16
pop
xchg
sbb
push
lock
inc
movs
js
adc
loopne
clc
cs
sub
dec
sbb
rcl
xchg
cld
mov
leave
jmp
lods
push
sub
nop
mov
(bad)
daa
iret
push
leave
add
jmp
push
adc
mov
out
mov
and
div
adc
mov
fnstcw
int
mov
and
dec
rcr
sub
add
(bad)
(bad)
sbb
inc
adc
inc
push
in
cmp
fcomp
imul
xchg
and
adc
or
jle
xor
add
call
mov
loop
pop
mov
pop
mov
sub
popa
imul
out
jnp
gs
sub
shl
in
adc
mov
lea
rol
pop
mov
mov
outs
inc
out
xor
ja
das
xor
mov
in
add
adc
inc
jne
adc
fs
dec
xchg
add
outs
xchg
bound
es
jle
es
lods
jbe
hlt
(bad)
adc
popf
jno
cdq
repz
sahf
mov
xchg
push
cmp
sub
sbb
and
iret
mov
sti
addr16
icebp
lods
sbb
ret
add
or
rcl
adc
sbb
sub
mul
in
outs
cld
mov
mov
nop
(bad)
fld
pusha
enter
fild
ins
sub
adc
ins
xchg
sbb
cli
push
ins
mov
js
sbb
or
lods
inc
leave
pop
imul
xor
daa
pushf
pop
sub
xor
mov
xchg
cdq
repz
leave
ret
xor
ror
lds
in
pop
mov
ins
jno
retf
jno
stc
inc
mov
pop
out
add
lods
(bad)
pop
retf
inc
sbb
dec
test
pop
jne
outs
jmp
add
jp
arpl
jecxz
iret
dec
mov
cmp
adc
popf
cmp
inc
xchg
std
adc
ins
cld
out
add
push
outs
pop
sbb
mov
xchg
mov
jle
or
movs
sbb
daa
mov
mov
push
jbe
cmp
mov
add
sub
mov
imul
pop
add
stos
and
sub
dec
imul
mov
mov
xlat
jl
xor
jmp
popf
sbb
sbb
les
fisttp
or
and
mov
mov
jmp
jmp
in
xchg
inc
in
jb
cmc
sti
je
sbb
fild
sbb
cwde
and
ret
jo
jp
mov
stc
ret
cmps
or
and
cmp
dec
jns
movs
inc
pop
xor
xor
jmp
lock
mov
and
adc
add
loope
ins
mov
push
and
pop
jle
ins
pop
adc
lahf
sbb
add
mov
xor
inc
jg
jmp
pop
inc
jmp
int3
xlat
or
or
and
stc
data16
out
test
test
pop
cmp
mov
gs
dec
mov
gs
dec
xor
in
out
pop
mov
retf
jno
aad
cmp
das
push
cmp
sti
inc
outs
lods
adc
inc
jge
ret
mov
loope
clc
xchg
adc
mov
mov
sar
cmp
dec
pop
sub
push
inc
adc
enter
mov
cmps
jbe
fs
daa
cmp
pop
xchg
bound
fdiv
jo
ror
mov
mov
test
cmp
add
dec
ins
ins
mov
jg
pusha
shl
push
ret
sahf
loope
and
test
inc
xchg
push
pavgb
xchg
lea
stos
xchg
daa
dec
adc
(bad)
pop
cmp
and
movs
pop
les
inc
mov
ss
or
xchg
sub
xchg
jle
cmps
xchg
cmps
adc
mov
into
jns
xchg
jns
push
xor
mov
sub
cwde
retf
(bad)
jnp
pop
stc
dec
test
cmp
retf
sbb
outs
pop
ror
mov
or
adc
jmp
loopne
pop
jno
jno
jns
inc
dec
cmp
dec
dec
std
dec
or
clc
lea
sar
mov
cmp
mov
pop
add
inc
sar
sbb
lods
aad
ins
stos
imul
cmps
sahf
push
pop
cmp
cmps
out
cld
jae
inc
push
sbb
outs
imul
xchg
and
mov
lea
xchg
jno
addr16
lods
push
sbb
out
icebp
mov
and
dec
dec
push
aaa
ds
and
aam
push
jb
push
mov
cmp
outs
pusha
cwde
ins
push
mov
in
mov
mov
pop
add
(bad)
adc
mov
pushf
(bad)
ins
mov
ret
inc
icebp
call
sub
lea
mov
clc
jle
ror
or
(bad)
hlt
xchg
add
aad
fidivr
pop
addr16
push
lods
movs
add
jmp
(bad)
cmp
sbb
inc
leave
jns
fldenv
mov
cmc
(bad)
lock
dec
mov
cmp
cmp
in
pusha
jmp
shl
ret
cmp
test
rcl
xor
daa
fiadd
(bad)
or
cmp
hlt
(bad)
and
das
jbe
sub
pop
mov
ror
pop
lock
loop
fstp
or
fnstenv
out
mov
add
and
mov
jo
mov
jo
data16
push
mov
xor
mov
sbb
out
cld
xor
test
xor
push
popa
jge
push
jmp
sbb
out
inc
js
jno
arpl
push
push
xchg
inc
mov
xchg
push
dec
add
loopne
and
cmc
and
mov
inc
and
and
mov
adc
and
adc
aad
or
mov
cld
add
fbstp
jnp
mov
ja
int
xor
(bad)
idiv
ret
mov
into
xchg
add
mov
pushf
dec
jbe
xchg
inc
inc
outs
loop
es
jns
mov
or
icebp
stos
push
imul
adc
pushf
aad
pop
add
sub
add
fcmovbe
imul
shl
mov
pop
inc
dec
and
int
pop
ins
sbb
test
mov
pop
icebp
call
mov
inc
push
dec
ret
cmp
jle
push
sbb
stc
popa
fsubr
pop
xor
inc
clc
cmp
cmp
mov
outs
push
jae
outs
out
bound
add
(bad)
sub
and
add
and
dec
movs
push
(bad)
ja
nop
fldcw
out
popf
je
jge
jne
jp
adc
sub
sub
out
mov
mov
and
pop
outs
in
ins
xor
jle
ds
jp
push
mov
(bad)
fcmovne
loopne
mov
aad
pop
loopne
mov
pop
pop
pop
mov
loop
movs
or
add
pop
out
pop
in
ret
add
jb
test
xor
cwde
cmp
or
popf
mov
fwait
xor
jnp
and
adc
outs
cmp
or
neg
xor
nop
push
xchg
out
rcl
fstp
pop
mov
pop
cmp
aad
dec
dec
mov
in
sti
and
les
ret
lods
cmp
ss
ds
sub
xchg
aas
retf
pop
out
retf
sub
in
sbb
dec
sbb
inc
dec
add
jo
add
loop
and
mov
stos
repz
dec
sbb
push
adc
bound
xor
and
and
adc
call
js
mov
or
xor
out
arpl
rcl
adc
outs
inc
retf
shl
xchg
in
(bad)
push
fisttp
(bad)
nop
xor
inc
push
(bad)
sbb
push
adc
in
mov
push
or
js
mov
mov
mov
inc
sub
mov
jne
(bad)
cmc
dec
out
bound
pop
sbb
dec
jg
adc
adc
(bad)
div
pop
mov
xor
hlt
jne
fxch
pop
fwait
lods
es
push
dec
retf
iret
mov
adc
test
xor
and
dec
std
movs
sub
mov
lea
addr16
dec
js
int3
fild
adc
not
lock
shr
mov
stc
mov
lahf
loope
loop
mov
jl
out
pop
mov
ret
in
or
je
movs
cmp
mov
ret
rcl
sub
cmp
ror
fistp
jbe
and
adc
push
retf
fsubr
outs
call
cmp
cmp
call
lea
inc
loopne
push
jbe
xchg
push
inc
sbb
fisttp
mov
jae
adc
or
mov
fdiv
rcr
and
or
fsubr
loop
mov
adc
sti
or
outs
push
aad
cmc
push
mov
push
aam
or
mov
mov
test
xchg
iret
mov
sub
xchg
call
cmps
add
mov
int
shr
int
mov
aam
push
retf
stos
push
push
and
test
mov
mov
pop
hlt
mov
xor
dec
dec
dec
lock
addr16
push
push
or
mov
cs
les
pop
mov
imul
and
loopne
add
xor
pop
add
dec
and
iret
push
sub
rol
mov
inc
push
fstp
out
lock
mov
pop
adc
jle
jno
ins
int
inc
jg
popa
sub
xor
sbb
add
mov
scas
pop
fwait
pop
jp
loope
cmps
stos
dec
cmps
jg
dec
retf
nop
rcr
pop
ins
scas
sbb
adc
int
aaa
or
dec
out
lods
subps
fbstp
xchg
and
push
cmc
mov
shr
mov
movs
fwait
xor
sbb
add
mov
and
(bad)
frstor
stc
and
imul
xchg
add
test
add
fimul
ret
push
mov
stc
fiadd
pop
mov
(bad)
ficomp
shl
jl
dec
cld
lock
push
dec
pop
test
mov
mov
inc
cwde
retf
retf
mov
arpl
imul
or
iret
call
cmp
(bad)
lock
inc
out
cmp
test
dec
adc
imul
dec
sub
xchg
pop
pop
add
adc
push
pop
xchg
ret
jge
retf
lds
das
(bad)
mov
adc
cmp
stos
les
cmp
xor
in
push
pop
in
xor
pop
in
push
retf
dec
int
enter
mov
adc
out
mov
leave
ret
xchg
xchg
inc
sbb
push
jns
addr16
(bad)
ror
jge
imul
scas
mov
cwde
int
das
add
push
and
pusha
jmp
add
lea
adc
xor
neg
push
xor
mov
jle
mov
push
push
mov
jo
adc
pop
dec
out
ror
idiv
out
mov
movs
daa
pop
jg
cmp
lods
ins
mov
push
mov
mov
sbb
mov
lahf
jne
sbb
scas
jns
sbb
jmp
xchg
pop
xchg
jp
loopne
add
enter
aad
aas
scas
jb
sbb
shr
fmul
bound
(bad)
pop
or
add
sahf
jp
sbb
lahf
mov
xchg
and
das
inc
add
jg
aad
dec
xchg
js
and
or
retf
(bad)
mov
das
div
cwde
cdq
(bad)
jnp
jb
in
sbb
cmp
loopne
mov
and
inc
mov
jecxz
xor
cmp
cdq
xor
and
pop
xlat
arpl
inc
arpl
arpl
out
repz
jnp
fs
xchg
inc
jle
pop
pop
mov
retf
fbstp
lods
dec
repnz
add
push
jnp
stos
dec
in
shl
(bad)
clc
test
or
enter
push
cmps
cdq
mov
mov
inc
mov
call
xor
mov
sbb
push
push
or
sbb
dec
shl
sub
bound
pop
bound
or
cmp
push
jmp
ret
pop
cmp
cmp
and
pushf
cdq
imul
push
add
inc
mov
pusha
jbe
and
xchg
(bad)
push
bound
add
mov
in
xor
mov
sbb
push
and
jp
jg
pop
sbb
mov
pop
fistp
mov
into
or
ds
in
add
pushf
leave
pushf
sbb
push
retf
pushf
(bad)
xor
arpl
lds
sti
sbb
mov
sub
cmc
clc
xlat
in
xor
adc
add
daa
ja
mov
mov
pop
dec
gs
push
jmp
out
pop
inc
or
pop
and
jmp
lahf
adc
mov
(bad)
add
xchg
enter
(bad)
sahf
mov
popa
push
mov
adc
ror
and
add
sub
stos
inc
adc
(bad)
xchg
iret
push
mov
mov
sti
mov
mov
call
mov
dec
and
push
sub
cmp
imul
xchg
jns
cmp
mov
aas
push
mov
pop
mov
mov
fcmovnu
inc
data16
adc
arpl
cdq
or
mov
(bad)
imul
mov
rol
(bad)
bound
rcl
bnd
out
mov
aad
out
scas
hlt
xor
loop
ja
inc
inc
pop
sbb
pop
push
lahf
inc
mov
sbb
jp
dec
mov
clc
ret
adc
pop
mov
sbb
hlt
imul
and
mov
sbb
retf
(bad)
loop
and
push
push
dec
pop
dec
fidiv
pop
mov
lea
cli
push
std
sbb
movs
dec
or
add
rol
or
aam
call
push
addr16
loopne
cmp
push
mov
mov
(bad)
pop
cmp
xchg
ret
outs
call
jge
mov
addr16
dec
cmp
mov
aas
in
mov
xor
mov
sub
inc
push
pop
mov
xchg
shl
rcl
xchg
scas
pop
adc
or
pop
mov
hlt
aaa
push
fisttp
jp
(bad)
cs
push
je
xchg
pop
int3
sub
mov
jmp
mov
repnz
xchg
adc
test
sbb
xchg
lock
xchg
pop
std
cdq
or
xchg
rol
loope
sub
adc
sub
(bad)
add
add
ds
mov
fstp
xor
push
jle
jb
jae
fadd
(bad)
out
fdivr
add
inc
ss
adc
int
(bad)
mov
xchg
mov
test
scas
mov
pop
clc
gs
scas
pop
imul
in
jmp
inc
jp
push
and
or
push
ja
movs
dec
pushf
pop
repnz
xchg
ds
mov
retf
cld
lods
ins
jne
add
xlat
fstp
test
enter
repnz
fisttp
imul
xchg
ror
xchg
xchg
cmp
(bad)
mov
int3
inc
int
jl
push
in
daa
or
pop
aas
dec
sub
jmp
aas
aaa
xor
bound
fidivr
mov
or
jnp
test
mov
xor
aas
sub
adc
ds
cmps
cdq
add
repz
out
mov
stc
cwde
push
ja
cs
add
movs
icebp
cmps
outs
mov
ins
jecxz
retf
loope
pop
mov
stos
cmp
and
cdq
jae
loope
pusha
mov
jl
sbb
xchg
popf
push
cld
sub
repz
inc
adc
loop
mov
sbb
loopne
fbstp
dec
xchg
sbb
add
cwde
mov
xchg
test
jnp
push
in
adc
adc
nop
mov
mov
cmp
in
dec
push
cmc
jge
(bad)
sti
pop
or
mov
xor
aad
jbe
jbe
dec
imul
sbb
shl
call
xchg
pop
sbb
mov
retf
popa
fadd
add
loopne
sub
xor
cmps
jmp
adc
mov
call
mul
xor
push
jns
jne
add
repnz
in
mov
in
and
pop
xor
xchg
sub
adc
dec
jbe
add
repnz
and
mov
mov
test
jno
nop
shl
lock
push
les
mov
dec
int
sbb
xor
popa
ficom
xor
fsub
in
sbb
fld
fmul
and
jae
imul
push
sbb
jnp
popf
pop
mov
jns
mov
or
loopne
mov
je
sbb
xchg
xor
cmp
mov
adc
mov
sbb
dec
pop
outs
sahf
jl
mov
stos
sub
cmp
rcl
fdivr
js
xor
imul
movs
push
into
push
xchg
mov
test
clc
retf
lock
xchg
mov
scas
cmp
mov
(bad)
mov
inc
push
xchg
aaa
mov
bound
cdq
and
dec
lods
(bad)
mov
mov
push
ds
jecxz
add
mov
mov
mov
cmp
xor
sub
retf
fdivp
mov
adc
fdivr
push
loope
sbb
cmp
or
mov
not
mov
sbb
es
push
ds
jmp
and
add
jnp
ja
sub
xchg
xor
test
fst
mov
nop
or
mov
xor
inc
ja
int3
pop
and
(bad)
out
xor
enter
ja
mov
jl
mov
std
int3
pop
in
rol
jns
outs
jbe
xor
test
(bad)
shr
rcl
bnd
jp
call
ins
retf
or
outs
(bad)
outs
mov
xrelease
sbb
dec
mov
pop
sub
jmp
sbb
mov
jp
jle
jmp
push
bound
cwde
shl
and
add
mov
push
cwde
add
rol
mov
test
retf
mov
adc
test
xchg
add
aam
je
es
test
and
mov
out
adc
data16
in
inc
xchg
jns
mov
or
pop
ja
pop
cmp
mov
in
and
inc
add
sbb
imul
ds
xchg
dec
jmp
jp
loope
movs
add
adc
jp
jge
cmp
data16
jle
(bad)
in
xchg
cmc
sub
call
cmps
and
sbb
push
adc
pusha
cmps
pop
mov
(bad)
jmp
sbb
mov
call
(bad)
movsx
imul
xor
in
jb
xchg
retf
mov
ror
fwait
cmps
jae
ins
pop
fstp
fwait
fwait
add
mov
add
pop
xor
mov
and
sub
int3
mov
mov
jecxz
inc
jl
mov
xchg
out
les
pop
dec
fcomp
sar
cmp
push
(bad)
push
stos
xchg
pop
or
(bad)
mov
retf
mov
jnp
inc
repnz
pop
mov
loopne
mov
test
sub
jl
sti
pushf
xchg
inc
test
xlat
(bad)
pop
adc
std
aas
mov
xchg
xchg
and
pusha
cmp
dec
jmp
shl
or
pop
push
mov
idiv
dec
inc
adc
popa
adc
dec
jnp
jmp
pop
(bad)
in
mov
ins
inc
inc
shl
daa
lock
stos
rcl
adc
add
retf
ror
xor
out
loopne
adc
(bad)
outs
xor
xchg
xor
jecxz
pop
push
in
(bad)
daa
int
fwait
int3
test
push
or
arpl
pop
push
inc
jg
cwde
inc
push
xor
mov
mov
add
inc
pop
test
add
call
rcl
xor
(bad)
aam
aaa
sahf
xchg
inc
lds
fs
stc
and
rol
out
mov
sbb
call
pop
pop
jge
sahf
data16
shr
arpl
add
out
push
add
or
int3
scas
push
lods
lea
loopne
outs
dec
xchg
sub
sub
aad
js
arpl
je
cmp
jne
repz
dec
and
movs
push
xor
into
nop
adc
fimul
bound
add
sbb
ror
cmp
out
xchg
mov
dec
mov
add
pop
push
ins
cmp
fadd
ret
in
data16
into
mov
jb
or
xchg
mov
sub
fisttp
mov
test
cmc
sar
retf
and
mov
test
xlat
popf
imul
dec
test
xor
les
retf
sbb
push
imul
or
push
dec
push
dec
outs
out
xor
adc
movs
daa
push
cmp
add
js
mov
jecxz
scas
fistp
lods
pop
jb
mov
ror
fwait
(bad)
jo
mov
mov
sub
adc
fs
jns
stos
sub
inc
inc
(bad)
push
jbe
push
jb
xchg
fild
fisttp
inc
jl
inc
add
stos
fwait
scas
stc
inc
loopne
dec
add
push
addr16
xchg
mov
in
push
push
loopne
retf
add
push
(bad)
fist
dec
ja
enter
gs
pop
mov
pop
in
dec
xchg
imul
cld
cmp
mov
xchg
inc
mov
xchg
cmp
retf
add
lods
pop
call
dec
(bad)
out
dec
jmp
push
and
mov
jmp
or
movs
call
pop
xchg
movs
pop
cmp
xchg
lds
nop
xor
inc
xchg
nop
cmp
push
sub
ins
sbb
aaa
dec
aaa
pop
and
ds
fnstcw
retf
int
mov
and
sbb
xchg
fbld
and
scas
stos
xor
lahf
pop
in
sbb
mov
dec
push
xchg
pop
js
mov
cmp
cdq
arpl
xor
inc
dec
cwde
xchg
and
test
ret
les
je
(bad)
jl
int3
cli
or
mov
fs
add
jmp
and
pusha
arpl
inc
test
jg
and
push
cli
jno
pop
lods
xchg
sbb
add
aam
cmp
xchg
cmp
pop
arpl
push
mov
cmp
pop
inc
sub
or
retf
mov
inc
xchg
inc
aad
inc
add
cmc
out
cmp
pop
loope
fnstsw
aam
pushf
push
call
sub
adc
mov
jmp
idiv
mov
jb
cdq
adc
sahf
adc
clc
in
mov
ret
and
xchg
pop
out
pop
loope
loop
popa
in
(bad)
(bad)
lods
sub
psubd
sub
mov
int
mov
mov
pushf
dec
cmps
xlat
shl
call
jge
xchg
push
jmp
xor
mov
push
(bad)
pop
mov
adc
pop
retf
sbb
cld
mov
xchg
mov
jg
or
xor
fisubr
dec
jp
push
bound
(bad)
mov
pop
inc
cmps
seta
sub
(bad)
sbb
push
xchg
loope
inc
pop
inc
mov
mov
sbb
inc
adc
add
shr
jae
xchg
jge
sbb
mov
sbb
inc
xor
jno
pop
push
mov
movs
retf
sbb
sbb
shl
lods
fnstsw
aas
or
in
sub
scas
jo
pop
div
and
lods
scas
mov
push
lds
jne
jmp
xchg
xchg
fs
pop
gs
mov
push
aas
xchg
mov
fimul
cld
or
pop
js
mov
rcr
fidiv
xor
and
jae
mov
(bad)
rep
hlt
xchg
in
ins
xchg
into
mov
fcom
add
jg
cmp
imul
jl
pop
cmp
or
sahf
fwait
neg
mov
icebp
daa
aas
inc
mov
push
pop
mov
adc
ret
addr16
mov
jae
(bad)
in
mov
pop
push
loopne
mov
pop
test
xchg
scas
lea
push
enter
pop
or
inc
pop
mov
fadd
cmp
retf
dec
or
xor
or
push
jg
mov
repnz
loope
push
adc
sbb
add
movs
aad
movs
ret
sbb
push
imul
xor
fsubr
and
pop
mov
or
push
adc
sbb
vpsrld
test
ret
je
retf
(bad)
not
sbb
bnd
inc
shl
clc
push
push
cmps
jl
jno
inc
lock
adc
lods
mov
push
adc
into
cli
call
stc
adc
pop
xchg
fs
push
sbb
test
ret
inc
inc
ins
jnp
jns
cs
inc
(bad)
sub
inc
pop
mov
sbb
inc
sahf
xchg
sbb
jecxz
push
lods
fld
sbb
xor
sbb
jl
jecxz
push
push
test
jnp
pusha
add
jp
inc
dec
mov
cld
sub
mov
dec
lods
xchg
cld
lods
push
mov
shl
pop
nop
loopne
add
call
retf
or
xchg
les
fimul
pop
xor
add
push
in
jmp
call
pop
jg
push
sub
js
out
nop
ja
arpl
sub
mov
leave
sub
jecxz
xchg
data16
cs
mov
sbb
lds
push
fcomi
lods
imul
xchg
loope
pop
and
clc
test
jae
mov
in
mov
dec
xor
push
mov
movs
mov
nop
aas
pushf
xchg
and
repnz
xchg
aam
xchg
and
cmp
lock
mov
xor
pop
cld
xor
adc
jecxz
jl
mov
ds
dec
int
pop
jle
adc
cld
or
icebp
cmp
(bad)
(bad)
cmp
lds
add
outs
add
(bad)
rcl
lods
cs
sti
data16
sbb
icebp
ss
scas
fst
lds
sbb
push
jge
test
outs
inc
pop
fs
cli
add
add
in
cmp
push
push
mov
pop
aas
add
std
adc
xor
jg
xlat
cmp
or
pop
or
mov
repnz
pop
cmc
inc
push
fistp
cmc
mov
mov
xchg
movs
lds
es
enter
or
dec
mov
mov
xchg
pop
xor
mov
mov
pop
jne
rcl
aaa
fistp
sbb
lods
xchg
cmp
sbb
int
mul
loopne
mov
clc
pop
imul
clc
mov
adc
inc
stc
xor
out
out
pusha
push
cwde
cmp
dec
push
sbb
neg
loope
mov
aas
in
pop
mov
(bad)
push
push
lods
adc
cmp
jnp
adc
out
jnp
xchg
jae
add
and
dec
mov
shr
into
dec
loopne
retf
lahf
push
clc
xor
les
jmp
lock
adc
inc
(bad)
clc
js
fs
and
pushf
jbe
add
es
adc
mov
shl
push
aas
nop
dec
int3
into
(bad)
dec
xor
cmc
mov
sbb
mov
mov
xor
out
popf
ja
pop
push
ret
popf
xor
add
xor
and
mov
hlt
fcomp
enter
test
cmp
xor
or
loop
mov
lahf
dec
or
lods
mov
mov
mov
mov
stos
(bad)
ja
push
ret
pop
xchg
sub
cli
ins
jg
retf
mov
enter
ins
mov
dec
add
mov
mov
mov
mov
xchg
cmp
cli
fs
mov
inc
test
data16
cmp
lods
(bad)
adc
inc
jp
xchg
arpl
data16
dec
push
mov
(bad)
icebp
xchg
in
shl
fbld
mov
pop
cmp
mov
retf
pop
idiv
shl
and
inc
movs
mov
or
xor
inc
adc
int
lods
in
xlat
inc
retf
jns
sub
xor
sub
mov
lods
fdiv
ins
mov
sub
mov
cdq
and
xchg
sbb
sbb
sub
call
adc
xor
jp
sbb
(bad)
cmp
mov
xchg
add
mov
and
mov
aas
ja
loope
inc
test
outs
(bad)
mov
push
call
cld
ins
hlt
add
sbb
in
jno
cmp
jp
cdq
mov
add
lea
cwde
adc
or
pop
cs
rol
mov
bnd
sbb
push
mov
inc
ins
stos
push
(bad)
dec
jo
shl
addr16
std
mov
cmps
aas
mov
stos
aas
xchg
pop
rcl
and
adc
dec
xor
mov
jns
xor
push
js
cli
stos
adc
ror
adc
fdivr
(bad)
sar
(bad)
mov
bswap
dec
outs
ss
in
and
loope
xchg
xlat
dec
inc
aas
shr
mov
pop
(bad)
pushf
xchg
mov
mov
pop
test
outs
and
push
mov
das
mov
int
dec
jg
or
xor
int3
shl
out
pop
dec
mov
mov
sub
scas
mov
retf
mov
(bad)
mov
out
and
fstp
jno
mov
js
sub
dec
std
mov
dec
fstp
not
xchg
xor
jbe
clc
imul
push
mov
jb
repz
ins
jns
add
cmp
sub
jb
inc
xchg
ins
movs
out
or
aam
inc
icebp
lea
in
sbb
or
outs
stos
mov
push
ror
mov
shl
push
and
push
leave
clc
aad
inc
cmp
jp
in
out
out
jecxz
xchg
mov
lea
imul
mov
test
push
sub
sbb
mov
cmps
cmp
mov
push
inc
stos
outs
push
push
cmp
fwait
cld
fucomp
imul
lea
jns
mov
packsswb
jmp
push
lds
mov
jp
xchg
or
mov
cs
mov
jo
outs
iret
mov
loopne
xchg
rcl
sbb
push
pop
add
cmps
ret
jmp
pop
cld
(bad)
inc
fdiv
mov
aas
add
clc
fistp
push
cld
ins
xchg
cdq
scas
dec
inc
into
ja
xchg
test
pop
push
outs
xchg
inc
fdiv
push
mov
push
test
push
mov
in
outs
xlat
add
hlt
out
in
ficomp
or
jo
ins
add
mov
add
retf
sub
dec
jle
shl
jnp
icebp
cmp
(bad)
jmp
dec
inc
push
sub
int3
mov
sbb
jg
push
mov
jo
pop
push
push
in
les
xor
sub
movs
or
xchg
iret
ss
mov
pop
(bad)
shr
jmp
or
sub
adc
push
js
and
push
je
and
sub
dec
mov
sbb
(bad)
xlat
ja
inc
sub
dec
jo
mov
imul
push
mov
shl
jp
mov
cli
xor
mov
mov
pop
pop
es
and
push
(bad)
fwait
(bad)
fadd
sti
ja
leave
jb
pop
nop
dec
push
es
stos
mov
movs
jecxz
add
cmp
ja
sub
adc
ss
mov
push
xchg
cld
jmp
sub
bnd
mov
cdq
push
mov
jae
sbb
jle
(bad)
imul
xchg
inc
dec
cmp
leave
mov
and
jge
adc
inc
xchg
jae
ret
addr16
aad
call
in
xchg
test
pop
xor
mov
data16
mov
je
xor
dec
push
jne
xchg
out
fwait
cmp
fstp
inc
int
das
hlt
sbb
mov
pop
movs
popa
pop
std
hlt
cdq
or
stc
aaa
sbb
sbb
xor
hlt
pop
xor
dec
mov
ret
jnp
jl
stos
sub
and
or
xor
cmp
mov
test
std
and
lea
iret
stc
aas
xchg
int3
sbb
cmp
arpl
test
mov
inc
mov
int
adc
xor
dec
shl
inc
cmps
rol
fsubr
popf
add
icebp
dec
mov
cmp
dec
xchg
arpl
mov
sbb
or
pop
(bad)
xor
inc
or
out
fnstenv
or
sar
mov
pop
ins
mov
mov
lods
sbb
and
loop
mov
lea
fnstsw
retf
inc
push
jmp
test
jbe
lods
mov
xor
sar
aad
test
adc
ja
xlat
fdivr
pop
push
popf
sbb
addr16
inc
dec
adc
shl
sub
pop
jo
push
hlt
adc
test
mul
rcl
jl
retf
fdiv
or
fisub
and
mov
mov
sar
adc
(bad)
pop
inc
aaa
into
mov
add
jmp
in
mov
dec
gs
push
dec
repnz
adc
lds
js
dec
outs
ins
out
add
cdq
mov
lahf
add
jae
cwde
fwait
outs
addr16
push
fs
mov
add
out
xchg
jb
adc
or
jg
mov
mov
inc
pop
and
push
inc
jae
cs
cmps
sub
jg
sbb
idiv
outs
jmp
xor
ins
adc
bnd
sub
dec
sbb
vpcmpgtd
popf
fxch
sti
jg
ror
add
mov
mov
jecxz
popa
sahf
or
arpl
imul
test
lods
or
xchg
inc
xchg
movs
xchg
lds
cmp
add
cmc
sub
dec
daa
dec
bound
ja
push
shl
ins
leave
sbb
adc
les
movs
(bad)
sbb
xor
xchg
lods
xchg
test
or
mov
mov
inc
leave
clc
icebp
xor
mov
adc
ret
das
jne
cmp
push
mov
mov
or
mov
xor
pusha
mov
adc
inc
mov
inc
jmp
mov
out
mov
inc
push
xchg
add
stc
movs
fiadd
jmp
popa
dec
into
stos
xor
add
sub
xor
nop
sub
xchg
pop
jg
mov
mov
imul
inc
jb
test
lds
dec
inc
push
jmp
jmp
inc
cmp
outs
add
push
stc
cdq
aad
stc
mov
aam
sbb
sub
pop
inc
test
dec
push
cmp
adc
dec
xor
sub
(bad)
ins
mov
cmp
imul
mov
add
push
aas
call
test
shl
outs
fstp
sub
cmp
clc
mov
dec
sti
mov
fild
xor
xor
pop
push
adc
cmp
sub
jecxz
pop
add
shl
loop
mov
mov
xchg
and
cmp
jns
xchg
cmp
xor
pop
and
dec
lods
jne
sbb
cmc
sbb
push
pop
xchg
(bad)
lea
mov
push
xchg
push
loopne
add
sar
fnstsw
mov
xor
mov
dec
mov
int3
push
movs
inc
jmp
iret
retf
lods
xchg
stos
ss
xchg
in
xchg
xchg
inc
clc
push
data16
mov
out
cmp
fild
mov
fs
int3
pop
cmp
pop
fdiv
pop
push
mov
sbb
aaa
xchg
jg
inc
sbb
or
test
sbb
push
cwde
mov
sub
std
inc
addr16
jae
adc
inc
lods
shr
pusha
push
xchg
popa
test
sahf
in
icebp
xchg
gs
repnz
ficom
arpl
jbe
es
test
fst
movs
jmp
add
lds
inc
push
into
fs
mov
inc
sbb
or
cld
push
dec
dec
add
fucom
push
cmp
icebp
xor
cld
cli
rcr
(bad)
sub
and
lahf
inc
push
retf
sub
test
dec
mov
xchg
fadd
loop
mov
or
jle
jle
les
xor
neg
in
js
push
fwait
lods
mov
push
push
adc
push
call
fstp
xchg
(bad)
out
ds
jp
pop
xchg
fucomp
lock
retf
aas
je
push
inc
imul
out
jo
das
xchg
adc
xchg
adc
add
inc
repnz
(bad)
sahf
out
cmps
es
shl
rol
xor
je
out
repnz
popf
cmc
pop
dec
clc
cmp
push
pop
sar
ror
ror
(bad)
in
adc
cli
ja
int
lods
ja
mov
cmps
cmp
movs
jb
sub
mov
jle
pop
jge
mov
rcl
ja
adc
jmp
outs
nop
dec
fstp
push
jne
bound
mov
sar
addr16
in
xchg
outs
mov
fucomi
(bad)
out
jae
push
pop
and
lea
scas
sbb
sbb
mul
int
mov
out
jecxz
fist
mov
shl
nop
sbb
mov
into
cld
adc
sub
and
pop
add
mov
data16
push
pop
out
sub
es
comiss
adc
rol
das
into
sbb
pop
pop
xchg
push
pop
and
call
push
mov
add
je
addr16
inc
dec
cdq
inc
fwait
imul
or
arpl
adc
aaa
jecxz
cmc
retf
mov
push
dec
in
gs
in
xchg
mov
test
xor
addr16
mov
in
icebp
addr16
mov
fbld
mov
js
cmp
push
or
leave
popa
stos
inc
mov
aas
push
(bad)
xlat
mov
scas
inc
fldcw
mov
(bad)
jmp
mov
jp
scas
scas
std
ret
into
cmp
mov
mov
fld
pop
sbb
rcr
pop
movs
pop
pop
enter
inc
(bad)
sbb
iret
call
loopne
xor
jmp
int
sbb
imul
pop
dec
dec
in
cmp
test
test
adc
xor
and
scas
cmp
adc
sti
stc
xor
mov
sbb
jle
les
mov
sti
push
test
lds
jne
aad
popf
sub
out
xor
push
or
add
aas
add
push
add
fldcw
add
out
push
add
xor
retf
pop
jne
fs
cwde
xlat
outs
pop
dec
cld
stos
adc
sbb
xchg
out
cmp
ss
pop
dec
shl
push
ins
xor
jmp
pop
mov
inc
fstp
aad
mov
sbb
punpcklwd
iret
movs
push
push
pop
popf
(bad)
mov
loop
cmps
pop
dec
mov
les
mov
je
xor
int
ret
jmp
(bad)
scas
jne
jl
mov
adc
dec
push
lods
hlt
fadd
or
iret
push
xchg
cmp
leave
inc
shr
mov
ja
lea
dec
dec
push
enter
cmp
or
adc
fwait
and
xlat
popf
sub
lods
adc
ja
mov
call
les
mov
inc
pop
aaa
aad
ss
popa
mov
and
or
cmps
mov
retf
sub
pop
mov
xor
movs
rcr
mov
scas
stos
or
pop
data16
push
fwait
mov
in
or
inc
(bad)
fs
push
test
inc
jnp
jge
jmp
cmp
call
mov
test
adc
cdq
jg
or
aaa
mov
call
pop
pop
repz
lods
xor
xchg
xchg
mov
xchg
test
aas
xchg
cmp
sbb
jp
inc
lods
movs
arpl
xor
lea
ins
or
fxch
outs
mov
jno
push
mov
(bad)
mov
push
mov
xchg
pop
push
cs
test
push
and
pop
jl
fsubr
adc
test
mov
cld
mov
mov
and
xchg
pop
das
adc
pop
loope
pop
mov
out
les
repz
ret
mov
aaa
rol
jle
sbb
xchg
ins
xor
inc
mov
and
inc
call
pop
fidivr
pop
adc
mov
gs
push
les
pop
jmp
xor
and
shr
sub
jl
leave
out
cs
or
hlt
cmp
adc
scas
push
cmp
or
(bad)
cmp
iret
movs
fwait
inc
and
arpl
pop
cs
adc
fstp
or
jl
ins
sbb
mov
aas
aas
pusha
mov
mov
xor
xor
fadd
push
lock
add
fcmovnu
pop
and
mov
xchg
jns
mov
fwait
jmp
dec
jae
leave
mov
fidiv
loopne
pop
xor
lods
mov
cwde
mov
pusha
aaa
std
iret
xchg
and
xchg
mov
mov
stc
xor
lds
dec
mov
(bad)
jnp
adc
cdq
arpl
dec
js
dec
fs
cmp
addr16
xlat
clc
sub
push
repnz
outs
lock
retf
jmp
pop
dec
jmp
cmps
mov
out
ja
cmp
cmp
fnstenv
push
inc
sbb
lahf
cmp
adc
fcmovnb
scas
add
mov
mov
nop
ja
hlt
sub
(bad)
or
xor
shl
mov
xchg
cmp
dec
pop
jo
inc
cmp
xchg
div
inc
adc
cmp
push
cmp
jmp
call
aaa
jae
call
sub
adc
movs
mov
push
jno
ret
dec
xchg
repz
mov
mov
mov
xchg
or
std
cmp
adc
dec
aas
test
popf
add
push
rcr
and
dec
pop
inc
or
les
in
push
pop
jnp
pusha
gs
cmc
or
xor
aas
and
mov
fdiv
jo
mov
into
jnp
xchg
push
mov
outs
lods
icebp
sub
push
test
xor
ja
mov
jmp
fisubr
scas
das
mov
push
sub
lock
inc
ins
pop
ret
(bad)
lods
push
xchg
js
cdq
in
and
shr
popf
sti
pop
(bad)
pop
mov
adc
jae
enter
adc
xor
lods
ret
(bad)
ficomp
in
mov
fsubr
mov
or
mov
test
and
mov
in
outs
dec
push
call
fsub
pop
inc
mov
pop
xchg
mov
into
mov
stos
push
push
jae
dec
or
sub
xchg
aam
call
mov
fcompp
fmul
stos
push
push
jae
aaa
mov
add
mov
cmp
or
outs
retf
push
and
xor
xor
pop
sub
(bad)
in
call
mov
cwde
mov
mov
dec
ins
or
xchg
fcom
xchg
fisub
dec
push
ret
cdq
pop
lea
cmp
pop
mov
xor
mov
outs
dec
and
sbb
jmp
pop
cdq
jns
mov
lods
(bad)
inc
cdq
loop
push
inc
cmp
movs
arpl
inc
scas
pop
sub
arpl
lods
mov
adc
cmp
mov
jge
jbe
add
or
inc
rol
inc
inc
mov
sti
and
xor
cs
cmps
inc
mov
gs
fiadd
dec
cmc
sub
(bad)
cld
retf
or
cld
mov
jne
out
test
inc
lds
stos
jmp
mov
imul
mov
mov
nop
(bad)
(bad)
sbb
and
cmc
jo
cmp
pop
push
fidivr
or
push
and
mov
adc
push
xor
cmp
add
push
(bad)
mov
push
or
inc
fs
popf
mov
cmp
in
mov
push
pop
xchg
retf
jp
and
pop
sbb
mov
pop
xor
scas
repz
inc
inc
enter
add
jg
jno
and
pop
lock
fisttp
fimul
call
mov
cmc
(bad)
jmp
inc
nop
inc
lea
outs
cmp
hlt
mov
pmaxub
or
sub
jmp
xchg
stc
or
xor
(bad)
jecxz
add
mov
fldenv
dec
mov
adc
jmp
jbe
hlt
sbb
sbb
outs
stos
xor
in
lahf
into
or
dec
lds
call
loope
or
out
inc
adc
xchg
inc
push
mov
pop
inc
mov
int3
mov
fs
retfw
jnp
pop
push
xor
(bad)
sbb
mov
popa
and
pop
sub
ins
(bad)
call
rcl
call
aad
xchg
js
in
mov
loop
jg
aad
push
xchg
(bad)
out
lea
aas
sbb
fsubr
test
jae
push
jmp
jb
out
push
xor
jmp
mov
mov
test
das
mov
les
test
mov
jo
jbe
mov
pop
shl
jmp
or
sbb
nop
in
or
jmp
loope
daa
or
nop
dec
pop
dec
push
imul
and
and
daa
sar
pop
xchg
sub
gs
push
mov
cmp
xor
lods
xlat
add
outs
lahf
cmps
popa
scas
in
sahf
aaa
shr
out
sub
push
inc
in
fucompp
dec
test
das
sar
pop
mov
and
fidivr
mov
scas
inc
test
(bad)
in
dec
pop
mov
nop
add
xchg
daa
dec
dec
xlat
je
pop
and
lods
aas
add
retf
(bad)
ss
mov
ds
jbe
mov
cs
out
call
jmp
pop
mov
jno
scas
jns
in
or
add
(bad)
jge
je
push
cmp
dec
cdq
imul
or
out
add
pop
push
cmp
pop
cmp
fcomi
sbb
test
cwde
and
mov
(bad)
retf
ja
out
out
cmp
lods
fisub
jge
add
fidivr
in
sub
inc
xchg
fwait
nop
xor
int
mov
sub
add
fmul
clc
or
(bad)
mov
xchg
aam
xor
push
outs
stos
inc
cmp
in
jae
rol
nop
xchg
ins
rcr
sub
jne
fst
cmps
js
or
mov
fs
jecxz
xor
js
pusha
gs
fwait
imul
inc
mov
add
push
xchg
jecxz
xor
mov
daa
push
lahf
das
int3
and
mov
jne
push
mov
xchg
adc
dec
xor
bnd
or
mov
test
rcl
dec
ins
jmp
and
xchg
add
cmp
ss
cld
in
cwde
inc
sbb
rol
jnp
adc
dec
jns
aas
mov
lahf
dec
dec
mov
pop
call
dec
test
test
bnd
adc
adc
into
push
pushf
push
mov
call
mov
ror
repz
or
outs
fdiv
movs
push
xor
test
in
inc
stos
(bad)
lds
ret
fisubr
inc
retf
pop
xor
push
jns
ret
and
lods
icebp
cwde
(bad)
xlat
icebp
xchg
push
or
mov
pop
fbld
adc
jmp
pop
popa
repnz
pop
es
sub
pop
mov
test
pushf
inc
lea
cli
cmps
and
rol
test
mov
sbb
dec
push
inc
mov
dec
cmp
sbb
inc
sub
in
inc
mov
aad
sub
in
sbb
inc
xchg
xor
out
mov
fs
imul
fsubr
add
xchg
inc
add
pusha
call
ins
or
stc
retf
sbb
jo
(bad)
fidiv
ret
ret
ret
jp
loop
xchg
jns
mov
pop
xor
sub
ds
test
mov
cmp
ret
leave
lahf
out
sbb
stos
sub
outs
mov
lods
push
push
imul
cld
ret
xlat
adc
call
ret
repnz
sahf
and
mov
cmp
jmp
ins
cmp
pop
pushf
hlt
retf
mov
scas
xchg
pop
cld
test
stc
aad
aam
addr16
fld
pop
mov
push
aaa
movs
cmp
push
and
inc
xor
jns
jno
jecxz
imul
movs
cli
aad
mov
inc
mov
xor
xor
add
call
fcmovnu
fsub
inc
cmp
sbb
pushf
das
(bad)
cmp
and
and
movq
mov
dec
ret
(bad)
cwde
add
xchg
test
into
enter
inc
jmp
shr
repz
xor
add
push
fwait
(bad)
xchg
cmps
faddp
in
jge
(bad)
push
dec
add
adc
out
push
xlat
push
xchg
push
aad
stos
arpl
sbb
pop
addr16
fldenv
(bad)
mov
push
mov
jmp
cmp
push
inc
dec
test
sbb
in
sbb
push
retf
jbe
pop
pop
dec
mov
mov
jmp
cmp
or
push
pop
out
popf
xor
mov
inc
retf
(bad)
dec
mov
sbb
inc
mov
mov
shl
retf
mov
dec
rcl
dec
push
mov
dec
sar
add
enter
out
add
out
dec
adc
sub
dec
cwde
mov
and
icebp
xchg
add
mov
jnp
cmp
pop
add
cmp
jmp
add
dec
mov
popf
scas
jne
dec
test
push
or
adc
xor
(bad)
in
sbb
test
mov
or
js
dec
push
ror
sbb
xchg
je
ss
sub
xchg
pop
adc
dec
mov
or
push
xchg
(bad)
pop
fimul
dec
jae
sub
pop
dec
pusha
push
inc
gs
cmp
inc
mov
cdq
ret
dec
daa
test
imul
test
loop
popa
fmul
sub
or
dec
fisttp
fbld
or
mov
dec
shr
xor
pop
sub
dec
repz
fcomp
call
scas
aaa
and
or
je
push
retf
clc
sbb
cmps
mov
pop
clc
dec
push
xor
stc
in
inc
mov
dec
repz
inc
inc
dec
sbb
or
jmp
cmp
inc
std
retf
ss
adc
shl
jbe
add
xor
and
sbb
lock
sub
xor
push
or
in
push
js
cdq
stos
mov
dec
cmc
(bad)
xchg
jmp
cmovo
xchg
xor
mov
fsubr
fild
push
pop
rol
shl
fwait
xchg
lds
mov
mov
inc
test
xchg
adc
push
lahf
pushf
add
or
mov
xchg
inc
test
dec
loope
mov
xchg
mov
fisttp
xchg
out
sub
lods
aam
xchg
and
xchg
pop
and
push
bound
jb
loope
sub
pop
lds
mov
push
test
push
cmps
retf
fdivr
cmps
and
into
inc
(bad)
jge
mov
mov
pop
add
xchg
jno
pop
and
mov
mov
daa
fisub
es
aas
adc
ror
or
mov
in
mov
ret
jno
pop
mov
push
mov
mov
add
or
pop
aaa
stos
lock
fadd
outs
fidivr
retf
mov
cmp
push
dec
nop
mov
cmps
or
int
(bad)
aad
cmp
or
mov
mov
pop
mov
pop
dec
inc
add
mov
(bad)
mov
shr
jbe
mov
add
or
stos
mov
sbb
or
stos
test
lock
jecxz
add
sub
add
bsf
inc
adc
clc
inc
xor
fwait
sti
push
jmp
mov
test
inc
xlat
cmc
retf
into
sar
repz
xchg
ret
aaa
and
mov
jmp
in
(bad)
icebp
cmp
xchg
mov
cmp
retf
out
push
mov
sbb
outs
movs
inc
lds
jmp
xor
in
fld
cld
adc
push
inc
addr16
shr
pop
loopne
loopne
sub
cli
cmp
call
dec
fstp
ss
mov
mov
sbb
andnps
mov
pusha
mov
in
cmps
scas
mov
cmc
hlt
ja
hlt
adc
les
repz
repnz
cdq
dec
cdq
movs
adc
mov
pop
cmc
das
mov
ret
dec
xor
retf
dec
popa
in
and
xor
mov
jb
cmp
out
cmp
inc
ffree
adc
cli
mov
xor
loope
push
jno
fcomp
cmp
ficom
cwde
ror
adc
dec
stos
fsub
in
sbb
dec
mov
or
int3
xor
inc
mov
sub
hlt
mov
xchg
sub
outs
mov
push
push
jmp
xchg
loope
pop
add
into
aas
stc
or
stos
rcl
(bad)
mov
push
(bad)
push
inc
rcl
and
inc
jb
retf
and
iret
clc
mov
out
hlt
pusha
push
das
fdivr
push
push
mov
loope
cmp
mov
mov
sbb
movs
sub
lds
fs
nop
popa
call
sbb
sbb
ja
adc
pop
movs
xor
fs
pop
sar
dec
stos
cmp
mov
push
dec
test
int3
mov
leave
push
push
push
(bad)
call
pop
add
mov
pop
enter
test
or
sub
xor
adc
ja
js
lahf
sar
jge
stc
mov
imul
push
mov
push
mov
adc
sub
test
xchg
dec
adc
scas
adc
or
xchg
stos
clc
repnz
inc
cmp
push
mov
es
fwait
icebp
cmp
fsub
push
xor
lods
bound
inc
xor
sub
(bad)
enter
jmp
pusha
adc
ja
or
push
mov
or
stos
jmp
fisubr
icebp
and
sub
pop
push
adc
icebp
es
pop
mov
pop
push
std
fmul
fist
mov
rol
aam
in
lds
sub
js
or
test
push
retf
pop
pop
jne
out
lock
dec
mov
and
add
xor
ficom
and
adc
nop
jae
push
outs
cdq
xchg
pop
inc
sub
(bad)
test
xchg
cli
daa
popa
or
inc
pop
push
aad
xor
faddp
cmp
fcomp
cwde
std
fucomi
sar
cmp
push
lahf
mov
or
and
imul
or
xchg
add
and
inc
sbb
jb
in
mov
adc
std
and
shl
and
repnz
popf
(bad)
add
lods
out
dec
popf
mov
jp
clc
test
cmp
retf
inc
push
outs
add
mov
jns
fnstenv
sub
mov
pop
sub
and
cld
in
sbb
and
out
js
shl
pop
push
sub
push
test
dec
arpl
inc
sbb
pop
sub
inc
pop
in
ret
jmp
add
sbb
retf
mov
int3
ror
ret
dec
fwait
mov
int
and
mov
dec
dec
mov
enter
push
bound
dec
or
mov
or
ins
sbb
neg
loop
xor
xor
and
xor
mov
cpuid
mov
xchg
or
or
icebp
add
jl
test
xlat
mov
lods
mov
push
clc
div
xlat
push
push
test
js
mov
jne
xor
mov
adc
sub
popf
sub
lock
push
inc
aaa
hlt
test
mov
push
icebp
sar
mov
xchg
inc
pop
push
sub
xor
inc
pusha
sub
mov
and
enter
sbb
adc
popf
pushf
inc
pop
fcom
sbb
loop
out
lock
sbb
mov
adc
dec
mov
cdq
jns
icebp
push
mov
jo
jbe
ret
std
pop
fdiv
popf
xchg
ins
inc
jbe
aaa
fnstsw
jl
test
pusha
and
cmps
mov
setno
cld
loop
repnz
mov
dec
mov
or
dec
or
adc
push
scas
into
mov
stc
xor
pusha
les
mov
std
cmps
loopne
leave
out
jecxz
lds
das
and
push
mov
imul
pand
imul
(bad)
loopne
pop
push
repnz
mov
add
push
fcomp
ret
jo
in
xchg
out
sbb
fcomp
inc
repnz
sti
dec
jnp
ret
popa
fidivr
lock
add
and
pop
add
iret
cmp
push
add
nop
push
inc
push
sbb
inc
mov
stos
adc
je
xchg
(bad)
cmc
fcmovnb
sbb
or
sbb
push
sub
dec
xor
jns
in
sbb
mov
lock
fs
pop
daa
hlt
pop
sar
les
cmp
jmp
mov
adc
daa
push
daa
inc
popa
xor
mov
or
std
arpl
and
sar
test
mov
jl
mov
ret
sar
sub
not
push
stos
std
js
ret
add
xchg
mov
lods
mov
lea
loope
(bad)
shl
pop
xchg
test
and
lahf
sub
loopne
mov
adc
cmps
and
mov
idiv
inc
mov
pop
aad
iret
lea
sub
push
sub
addr16
xchg
sub
es
sbb
nop
fwait
rcl
adc
dec
mov
push
mul
push
test
push
jb
xor
jnp
push
mov
xchg
in
dec
mov
nop
ficom
call
adc
lock
scas
push
add
or
dec
jbe
mov
or
fnsave
pushf
pop
scas
rcl
cmp
dec
fsubr
mov
pop
xchg
inc
(bad)
popa
pop
sub
rol
inc
shl
retf
jl
add
cmp
aaa
inc
enter
dec
cmp
jne
pop
xchg
mov
cs
xor
cli
add
pop
scas
dec
add
push
ja
addr16
jp
or
bound
fadd
cdq
loop
xor
and
xchg
dec
imul
mov
outs
sub
mov
cmps
retf
es
mov
or
xchg
or
ffree
pop
stos
xor
push
push
cmps
mov
les
pop
ja
push
push
ins
push
mov
inc
ror
mov
sbb
cmp
ror
adc
aas
mov
movs
xor
inc
daa
xchg
push
adc
addr16
lea
icebp
movs
ins
rcl
dec
jecxz
fdivp
data16
sahf
add
cmps
cmps
xor
cmp
xlat
lea
jmp
cmp
pop
icebp
ds
mov
sbb
sbb
cmovp
xlat
test
ins
push
cwde
cmp
xchg
add
xor
mov
jne
push
popa
jno
xor
pop
arpl
in
stos
loope
jno
inc
hlt
mov
pop
cmps
adc
clc
push
sub
cmp
mov
push
ds
mov
ret
je
adc
loop
int3
or
cmp
and
icebp
pop
cmp
and
mov
call
jns
fwait
adc
pop
jae
add
push
mov
add
adc
cmp
aaa
mov
call
sub
je
inc
cmc
inc
mov
div
(bad)
xlat
pop
mov
jnp
out
sbb
or
pop
aad
jg
aad
pop
into
(bad)
push
cli
sub
jb
and
ins
and
das
retf
xor
shl
(bad)
ret
mov
jbe
mov
or
lds
cmp
push
push
cmp
lds
xchg
test
pop
add
cld
add
hlt
enter
xchg
gs
js
inc
mov
push
mov
retf
(bad)
(bad)
add
dec
mov
aad
xor
aad
outs
add
outs
call
sub
or
mov
and
push
pop
add
sub
jnp
adc
in
or
cmc
push
test
mov
adc
call
and
cdq
or
push
dec
retf
inc
inc
(bad)
inc
mov
rol
dec
xchg
cmp
cmp
inc
pop
cmp
shr
pusha
jb
xchg
jle
ror
push
or
pop
fild
je
jo
sbb
xchg
addr16
fstp
das
in
js
fcom
lock
pop
mul
imul
les
push
add
push
mov
or
out
pop
dec
or
push
(bad)
in
in
inc
fcmove
jbe
pop
and
aad
mov
pop
ficomp
push
std
mov
or
or
mov
push
inc
xchg
sbb
add
mov
xor
sbb
ficom
xchg
mov
int
xchg
iret
jle
push
fisubr
ret
mov
pop
clc
scas
adc
cmp
sub
pop
fmul
mov
dec
xchg
jl
imul
stos
stos
xchg
inc
and
push
hlt
mov
add
add
clc
scas
jmp
add
retf
push
arpl
mov
mov
ds
pop
sbb
or
std
rcl
js
add
stc
inc
shl
add
push
xor
and
xchg
clc
cs
and
(bad)
jbe
xchg
pushf
rcl
mov
jmp
inc
ins
jmp
test
(bad)
push
jnp
or
xchg
xchg
jne
cmp
fldcw
cwde
cmp
push
push
mov
cli
rol
mov
jge
inc
push
mov
cld
jge
mov
lds
dec
push
mov
push
lock
push
cmps
call
cld
imul
mov
int
div
xchg
pop
jecxz
outs
jmp
xor
sub
jns
fist
out
cli
inc
pop
push
push
adc
(bad)
adc
test
neg
xchg
stos
cwde
mov
add
and
stc
bound
call
add
fwait
sub
fsubr
(bad)
and
pop
mov
pop
int
push
push
cdq
lods
popf
fwait
xchg
sahf
push
retf
leave
popa
cmp
clc
add
xchg
gs
int3
jae
adc
pop
cmp
adc
mov
shl
push
(bad)
(bad)
dec
xor
sub
pushf
repnz
ins
cmp
xchg
aas
loopne
jecxz
ds
retf
cmp
xor
push
test
(bad)
(bad)
mov
outs
ficom
push
push
pop
add
mov
scas
mov
push
clc
xchg
sbb
dec
fdivr
xlat
jno
test
xchg
mov
sbb
stos
and
mov
and
or
mov
fcmovnbe
repnz
adc
and
nop
mov
add
push
and
xchg
push
rcr
cmp
xchg
push
mov
push
arpl
dec
mov
sbb
(bad)
xor
sbb
test
and
fs
xor
adc
xchg
das
inc
cmp
div
bound
(bad)
sub
shl
adc
into
movs
stos
cmp
inc
icebp
sbb
lods
or
push
imul
jne
sahf
(bad)
or
fucomi
cmp
aam
gs
adc
push
adc
(bad)
mov
add
add
gs
push
adc
pop
sbb
xchg
mov
fsubr
or
xchg
dec
loope
pushf
jo
cmp
pop
inc
jo
imul
mov
scas
inc
in
sbb
mov
adc
inc
icebp
ja
and
bound
test
scas
movs
gs
dec
xor
int
inc
aad
sbb
xor
mov
adc
mov
daa
ja
cdq
mov
fs
lods
dec
jne
dec
js
xchg
call
(bad)
mov
jo
test
mov
jae
jae
or
cmp
stos
push
cmps
fsub
mov
cmp
daa
push
sbb
xchg
movs
xchg
fidiv
and
iret
pop
sub
sbb
enter
retf
jmp
xchg
sub
enter
xor
pop
int3
xlat
sub
aas
cs
repz
call
pop
dec
mov
jp
jbe
in
mov
sbb
loop
movs
ja
mov
lods
dec
jp
jno
repnz
fprem
cmp
sahf
ror
mov
push
lods
add
daa
mov
jae
aam
int3
mov
aas
test
sub
or
jns
mov
cs
rcr
(bad)
imul
mov
hlt
cmp
or
sub
pop
fdivr
mov
jae
lds
imul
fisub
sub
push
sbb
xor
scas
cmp
lds
mov
sub
jmp
adc
cmp
ret
mov
jns
mov
adc
mov
mov
cld
mov
jmp
sbb
loopne
sub
xchg
stc
ret
ss
sub
inc
icebp
ret
sbb
mov
adc
movs
inc
dec
sbb
xor
cmp
push
xchg
sub
push
clc
add
sub
push
or
fldenv
test
pusha
shl
ss
into
jl
imul
sti
stc
push
vmovsd
lea
sub
mov
fsubr
sub
loop
jl
or
or
(bad)
mov
outs
mov
inc
icebp
fsubr
imul
xchg
test
imul
cmps
xor
(bad)
in
jecxz
ins
sar
push
pop
enter
rcr
mov
ds
sahf
cs
dec
retf
outs
cmp
mov
loop
push
or
xchg
ret
sbb
dec
stos
retf
es
lods
ja
inc
sbb
cdq
mov
add
ins
loopne
sbb
por
mov
xlat
rol
mov
out
cwde
mov
(bad)
sub
call
sbb
xchg
fwait
stos
jle
pop
ins
dec
inc
dec
cmps
stc
in
arpl
jno
(bad)
aaa
fsubr
sub
dec
adc
and
loope
test
cmp
shr
and
(bad)
mov
inc
and
mov
jmp
push
ja
xor
mov
sub
lods
fsubr
lea
push
arpl
inc
(bad)
pusha
stos
jo
mov
pop
les
push
lods
sbb
xor
loop
jno
faddp
mov
jl
mov
sbb
push
rcl
mov
aaa
rcr
ins
inc
pop
push
retf
dec
es
push
call
pop
test
sub
loope
jmp
xchg
nop
data16
mov
mov
cmp
pop
jnp
into
out
les
cli
aam
mov
push
in
and
aam
les
sbb
jmp
xor
lahf
push
cmp
(bad)
push
jmp
add
mov
lods
xor
sub
push
test
jge
loope
ds
mov
dec
jle
jl
out
in
les
or
rcr
mov
cmps
cwde
popf
imul
in
call
pop
mov
cmps
daa
lods
mov
jne
retf
xlat
and
pusha
shl
push
and
popa
push
cmp
xlat
push
or
and
lods
movs
xchg
mov
rcr
fbstp
fld
xlat
dec
mov
cmps
push
test
sub
ins
pop
adc
imul
xor
stos
int
test
adc
add
cmp
outs
xchg
mov
movs
cmp
shr
jb
mov
cld
xchg
lock
(bad)
movs
call
into
jbe
clc
repnz
jl
mov
push
in
ret
outs
push
mov
mov
in
int3
cmps
dec
rol
rcr
mov
jg
cmp
adc
int
std
cmp
pushf
push
jl
add
push
and
ds
out
push
xchg
or
pop
and
mov
jmp
pop
and
or
adc
xchg
xor
and
es
adc
and
int3
pop
pusha
dec
std
mov
aam
adc
test
jnp
jge
rol
retf
scas
jl
inc
aad
fdiv
push
aas
ja
pop
aad
cmc
std
into
mov
test
pop
push
aas
(bad)
pushf
xchg
jp
jo
jbe
mov
mov
push
repnz
bound
or
int
xchg
aam
adc
inc
jne
iret
add
xor
andps
xchg
mov
sub
xchg
xor
call
js
(bad)
fmul
fisttp
inc
sub
xchg
ret
jne
ret
add
imul
add
test
adc
inc
push
xlat
push
stos
or
test
and
jecxz
sar
ret
xor
jo
mov
mov
push
sub
jg
shl
mov
aas
pop
bnd
or
sbb
push
push
adc
add
xor
cmp
and
push
cld
fwait
(bad)
mov
(bad)
mov
pop
dec
sub
jns
pop
pop
lahf
inc
clc
mov
mov
in
out
out
test
adc
add
mov
cmp
push
out
stos
nop
stc
ror
or
repz
into
aas
push
add
nop
sub
hlt
arpl
adc
mov
dec
(bad)
adc
ficom
test
ret
fcos
pop
leave
pusha
mov
push
arpl
jno
cmps
jb
add
fisub
cmp
jge
jns
pushf
push
xor
cmp
fbstp
dec
jae
xlat
cmp
das
fstp
adc
out
ret
xrelease
push
mov
and
mov
pop
mov
adc
xor
mov
xor
pop
(bad)
test
daa
add
stos
sbb
or
pushf
add
mov
or
push
dec
sbb
and
inc
cmp
aam
dec
int3
ins
and
(bad)
int
cdq
mov
movs
mov
sbb
dec
ret
push
jbe
les
(bad)
mov
cmc
(bad)
jp
call
frstor
push
aaa
mov
cwde
cwde
repz
mov
aaa
into
aad
mov
(bad)
mov
cmp
call
pushf
jecxz
or
mov
add
jmp
stos
loope
xor
sub
(bad)
cmp
mov
scas
cmp
test
mov
pop
push
in
mov
lock
sbb
jge
fwait
lock
push
and
mov
xchg
imul
xor
xchg
fwait
sub
and
loopne
mov
cs
mov
xor
jb
inc
repz
movs
mov
push
outs
rep
hlt
jecxz
aam
adc
les
mov
test
rol
pop
add
push
stos
sbb
and
jmp
or
js
jmp
adc
(bad)
fadd
stc
pop
dec
sbb
fcomip
cmp
hlt
dec
jnp
out
xor
sar
in
mov
(bad)
or
push
jl
dec
pop
xlat
test
pop
pusha
movs
or
fwait
mov
jmp
xchg
pop
call
mov
pusha
(bad)
fucomi
imul
ins
add
or
fist
sbb
(bad)
outs
clc
stos
sar
call
sahf
sub
xor
cmc
add
jecxz
cwde
enter
jecxz
inc
cmp
pop
dec
pop
in
in
rcr
test
fnstcw
scas
scas
adc
pop
inc
ins
loopne
(bad)
mov
push
stc
scas
push
int
(bad)
and
jp
fdiv
addr16
dec
loop
pop
cmps
sbb
mov
push
mov
and
shl
lock
sub
or
scas
mov
ds
movs
leave
ret
push
mov
mov
(bad)
xlat
in
pop
stos
jnp
push
addr16
lahf
jae
cs
fidiv
in
(bad)
mov
inc
cdq
pushf
clc
jns
mov
movs
std
data16
pop
or
xor
cmc
sub
cdq
imul
or
push
fstp
shl
sbb
or
push
aam
jle
(bad)
fsubr
or
pop
iret
je
xor
mov
mov
xchg
push
sub
mov
std
fsub
mov
loopne
daa
xchg
cmps
pop
movs
adc
jecxz
loopne
mov
push
push
mov
push
xor
jge
push
cmp
int
jne
inc
dec
cmp
sub
cld
js
inc
cmp
and
xchg
mov
adc
ins
jl
push
jecxz
call
sti
bound
nop
add
push
pop
aas
add
cmp
adc
sub
xchg
lahf
mov
ret
mov
daa
lods
inc
inc
mov
xchg
push
push
ret
scas
dec
or
jmp
cmp
mov
jp
js
cmc
int3
aas
data16
ror
add
pop
arpl
out
adc
inc
sbb
and
dec
lock
fnsave
push
jno
inc
jbe
and
in
ret
mov
pushf
inc
mov
sbb
fs
jmp
inc
push
js
loop
fldcw
rcl
cmp
imul
lock
mov
ficomp
mov
icebp
inc
(bad)
jp
and
mov
shl
pop
cld
mov
mov
leave
pop
pop
sbb
and
or
and
sbb
jp
test
aad
mov
repz
pop
clc
xor
les
mov
xchg
fnstcw
jo
ret
add
xchg
mov
aad
xor
test
enter
xchg
jae
dec
call
jb
(bad)
test
push
push
and
std
push
cmps
jmp
jecxz
dec
mov
xor
mov
add
retf
fisttp
addr16
jg
push
arpl
mov
popa
fnstenv
outs
loopne
hlt
retf
stos
call
je
push
xchg
ins
inc
sbb
cmp
fwait
push
fs
in
mov
cld
push
ja
cli
aaa
dec
and
das
mov
test
test
sbb
loop
in
and
pop
inc
add
test
xor
add
stos
push
je
add
xor
sti
push
jmp
mov
or
ins
mov
cmp
pop
or
xor
(bad)
mov
adc
fild
add
cli
outs
mov
sub
xchg
fimul
dec
dec
enter
aaa
push
(bad)
xor
div
aas
int3
test
push
scas
inc
push
pop
sub
(bad)
push
xchg
mov
popf
adc
dec
minps
mov
xchg
xchg
dec
mov
mov
or
push
jmp
shl
push
adc
(bad)
mov
push
imul
xchg
mov
and
or
cwde
cwde
pop
or
test
jp
sub
jb
push
sbb
pop
push
cld
add
sub
xlat
pop
jo
sub
ins
jnp
ds
mov
(bad)
popa
inc
push
mov
mov
fcom
(bad)
cs
imul
pop
push
xchg
pop
ret
in
movs
ds
rol
cli
cmp
inc
jne
xor
jo
dec
fldcw
xchg
nop
rcl
popf
dec
xchg
push
sub
(bad)
push
pop
aas
es
xor
int3
mov
loop
mov
sbb
mov
out
ins
mov
test
lods
sub
xchg
call
(bad)
movs
jl
enter
outs
jb
pop
in
sti
jle
sbb
and
in
mov
xor
pop
fstp
out
jge
cmp
cmp
cmp
push
jl
jne
cs
xchg
out
push
jmp
idiv
cmp
ret
sidtd
neg
mov
xchg
ja
cs
xor
xchg
jae
jnp
dec
inc
pop
rol
xor
pop
das
push
xor
in
loop
or
sub
mov
mov
adc
jnp
jno
lea
icebp
xor
std
adc
cmp
in
xlat
mov
jmp
fcomip
mov
call
movs
mov
mov
in
jbe
(bad)
or
jno
mul
imul
cmp
mov
push
repnz
inc
fstp
jle
call
das
cmp
mov
daa
pusha
xchg
mov
dec
and
jbe
lods
ja
stc
arpl
ja
xor
jg
jmp
imul
inc
cmps
sbb
cmp
cli
mov
fwait
push
xchg
(bad)
fs
inc
cmp
(bad)
or
or
sbb
mov
call
mov
popa
fs
popa
cmpps
jp
adc
retf
(bad)
test
mov
pushf
loopne
mov
lahf
nop
add
dec
popf
cmp
cmp
sbb
mov
xchg
cmps
(bad)
xlat
daa
jnp
or
cmp
mov
ret
xor
cmp
cmp
fwait
inc
(bad)
out
adc
and
bound
and
stos
rcr
pop
jb
add
outs
inc
cmp
mov
je
mov
pop
adc
push
or
mov
lahf
push
or
jl
pop
dec
xor
mov
das
lods
mov
jbe
jo
or
mov
dec
xor
add
sub
scas
push
test
push
sub
aad
xor
sub
jae
lods
test
and
fwait
lods
retf
fwait
(bad)
(bad)
fisubr
mov
cmp
push
pop
imul
cdq
pop
(bad)
jge
int3
cs
push
add
ss
sub
push
push
sbb
and
pop
out
retf
pop
sub
sti
lods
hlt
addr16
and
jns
arpl
cmp
movzx
ins
test
fnstcw
cmp
adc
cmp
sbb
scas
fdivr
xchg
mov
cmp
push
mov
shr
and
mov
jne
jp
call
jne
sbb
mov
xchg
scas
sbb
test
cmc
les
popf
cmp
loopne
and
xchg
cmp
cmp
(bad)
in
ret
sbb
lea
mov
int
fnstsw
pcmpgtd
and
xor
sbb
pmulhw
(bad)
add
ficomp
cmp
loope
dec
mov
jmp
leave
movs
outs
pop
jg
movs
jecxz
cmc
fs
mov
adc
xchg
hlt
loop
push
dec
test
stos
ins
pop
mov
(bad)
mov
sbb
into
(bad)
stos
rol
adc
repz
push
pop
xchg
cmp
mov
lods
shl
push
pop
inc
(bad)
adc
retf
xlat
fdivr
out
cmc
add
std
lods
inc
gs
int3
mov
adc
int
pop
xchg
jne
sbb
add
enter
mov
inc
fisttp
and
mov
pusha
jnp
mov
cmps
xor
mov
add
movs
add
out
sub
imul
in
push
xor
mov
pop
sub
ror
mov
cld
adc
or
cwde
rcl
adc
rcl
mov
xchg
sahf
xchg
push
sub
into
(bad)
enter
jb
leave
sbb
scas
pop
ret
imul
ss
jg
jle
(bad)
jb
add
cmp
pop
and
lahf
mov
jl
sahf
inc
aam
sti
call
mov
or
add
xor
fmul
sub
shl
add
xchg
sbb
out
mov
mov
adc
push
add
pusha
rcr
xchg
inc
mov
dec
push
cmp
mov
mov
lea
add
imul
(bad)
lods
xchg
stos
lea
in
mov
loopne
mov
xor
lods
and
mov
or
fidiv
adc
push
mov
xor
mov
add
inc
fidiv
mov
inc
aas
fcmovbe
dec
out
outs
movs
sub
gs
dec
cmc
sub
in
lods
pop
adc
test
jo
imul
mov
pop
pop
lods
fld
enter
je
outs
stc
hlt
dec
ja
or
jmp
dec
fs
lods
adc
aam
xchg
inc
adc
sbb
repz
gs
dec
push
pop
arpl
or
xlat
mov
and
loope
sbb
xchg
pop
sti
std
lahf
repz
mov
pop
(bad)
cdq
aaa
push
(bad)
mov
dec
aas
adc
xchg
jp
sti
pusha
add
addr16
push
jnp
loop
daa
jge
popf
aas
aaa
dec
push
sub
fdivr
pop
shl
pop
pop
push
jnp
scas
stos
(bad)
cmps
mov
and
cli
stc
pop
mov
mov
mov
or
sahf
mov
xor
dec
adc
jl
sbb
in
movs
int
dec
in
in
ret
sub
out
xor
or
inc
outs
adc
int3
push
mov
pop
retf
add
jl
mov
mov
add
xor
loope
js
xchg
movs
push
sub
add
sbb
push
cmps
inc
push
adc
push
mov
adc
add
jge
stos
repz
mov
jecxz
xor
and
stos
mov
pop
ja
mov
retf
pop
ficomp
fisttp
data16
push
xor
stos
mov
dec
popaw
arpl
rol
mov
retf
fsub
lods
push
push
sub
mov
xor
pop
add
daa
jbe
enter
mov
mov
sti
adc
and
jns
into
add
fpatan
lds
mov
hlt
hlt
test
xor
and
xchg
xor
sub
jl
sar
adc
(bad)
dec
movs
aad
cmc
or
pop
xchg
jne
xlat
shl
sbb
je
xor
iret
mov
scas
cld
idiv
mov
or
movs
ins
add
mov
pop
fcom
dec
leave
fs
xor
mov
jle
cs
mov
cmp
add
movs
scas
dec
call
cmps
in
or
les
ret
push
sti
add
(bad)
inc
or
push
loop
ja
ins
lock
into
movs
cmp
xor
in
inc
push
mov
push
and
cmp
add
add
cmp
inc
pop
lea
fmul
jo
or
push
aad
add
push
fcmovnb
mov
std
in
pop
outs
jmp
and
mov
leave
test
cmp
fcmovne
and
aas
jmp
sub
sub
movs
lods
scas
pop
inc
inc
sub
xchg
aas
push
sbb
xchg
jg
sbb
mov
rcl
scas
mov
sbb
(bad)
push
or
sbb
aam
push
loope
aam
popf
sub
mov
clc
or
inc
hlt
inc
(bad)
call
(bad)
push
cmps
sub
lods
ret
push
push
add
retf
cmp
lea
repnz
clc
icebp
add
jmp
mov
(bad)
mov
fdiv
test
(bad)
adc
mov
call
pop
test
mov
xchg
sbb
repnz
scas
jecxz
mov
imul
dec
popa
inc
or
or
movs
and
adc
scas
dec
daa
mov
adc
push
dec
push
clc
inc
call
ss
ds
out
mov
test
scas
cmp
das
jnp
xchg
sbb
mov
mov
hlt
loope
xchg
sbb
fidivr
scas
mov
div
jmp
mov
cmp
into
add
xor
xor
and
ror
cmps
fcom
popa
or
std
jbe
sub
outs
mov
mov
sahf
repz
(bad)
std
push
pop
sti
mov
mov
xchg
das
xor
bswap
frstor
xchg
out
mov
cmp
cmp
cmps
ret
dec
or
hlt
xchg
mov
pop
sub
pusha
fsubrp
fcom
dec
sbb
neg
mov
movs
cmps
xor
push
je
hlt
scas
jmp
pop
pop
mov
and
(bad)
jmp
test
cmp
xlat
stos
mov
mov
xchg
sub
dec
inc
enter
jmp
mov
mov
add
stos
jae
(bad)
jns
iret
adc
fs
ja
ret
hlt
lods
cmp
push
mov
sub
rcl
movs
imul
mov
xor
mov
dec
add
or
stos
out
nop
sub
pop
jecxz
mov
jge
sbb
data16
lahf
xor
add
outs
xor
dec
jmp
sti
sub
pop
fisubr
nop
stos
test
mov
dec
fmul
leave
cs
cmp
mov
fidivr
push
repnz
jl
nop
push
mov
(bad)
xchg
inc
pushf
pop
out
or
xchg
push
or
mov
push
(bad)
xor
int
mov
rcr
sbb
sub
xchg
fidivr
arpl
sbb
push
pop
(bad)
aad
xchg
xchg
sbb
xchg
hlt
add
cmp
aaa
jns
pusha
(bad)
push
jp
push
cmp
dec
or
stc
loop
sbb
mov
into
sbb
(bad)
mov
popa
jne
(bad)
nop
add
arpl
addr16
adc
sbb
sub
cwde
movs
aam
push
inc
sbb
divps
add
pusha
jmp
rcr
scas
fwait
or
adc
ja
cdq
inc
retf
cmc
retf
sbb
(bad)
call
push
arpl
retf
div
addr16
mov
or
loopne
lods
in
push
push
ds
retf
jo
mov
xor
lock
daa
ss
mov
fbstp
clc
sbb
xchg
or
sbb
fnstcw
jmp
inc
pop
dec
push
mov
push
push
jns
xor
out
cmp
mov
int
clc
dec
sub
lods
push
test
icebp
push
aam
jo
push
sub
cmps
aad
aam
add
shr
push
xchg
xchg
mov
idiv
add
dec
push
mov
adc
add
cmp
shl
ins
jo
lods
push
lods
inc
push
pop
ret
(bad)
aas
jl
pop
(bad)
cli
int3
sahf
xor
neg
adc
dec
jnp
pusha
mov
dec
lods
dec
dec
adc
stos
inc
jmp
dec
shr
inc
cmp
mov
lods
dec
(bad)
(bad)
mov
add
(bad)
pop
mov
or
out
loop
ret
mov
int3
pop
xchg
test
cli
or
pop
test
cmp
push
xchg
xchg
iret
cmp
scas
dec
aam
mov
je
call
adc
or
xchg
es
cmps
mov
inc
test
sbb
push
xchg
mov
xchg
xchg
test
jo
xor
lds
add
jns
sub
pop
fisttp
and
call
(bad)
pop
mov
push
fsubr
and
out
or
ins
(bad)
je
fnstsw
daa
gs
mov
lds
mov
ds
cmc
jmp
sub
xlat
add
xchg
sub
pop
mov
mov
xchg
xchg
out
in
(bad)
jne
adc
sti
shl
nop
sahf
out
sub
js
mov
into
inc
ret
dec
mov
dec
aam
cwde
inc
xchg
sub
mov
or
dec
sbb
ins
shl
pop
sub
and
mov
jbe
dec
or
stos
mov
bound
push
into
sub
sub
pusha
out
push
out
retf
dec
fld
bound
cmps
sbb
mov
popf
cmp
inc
icebp
ins
fucom
xchg
cdq
or
and
sub
neg
rcl
push
or
call
xor
stos
sti
sub
xchg
daa
xor
mov
add
pusha
add
int3
in
pop
and
repnz
lods
pop
cmp
dec
adc
pushf
mov
xchg
cmps
mov
adc
mov
dec
xor
sub
or
jecxz
sub
xor
sub
lea
loopne
cs
ins
cmp
sbb
adc
mov
cmp
loop
push
jmp
mov
(bad)
not
or
inc
test
nop
sbb
(bad)
mov
adc
int3
cmps
add
jge
mov
mov
enter
jecxz
sub
(bad)
jnp
hlt
push
(bad)
movs
out
add
inc
mov
shl
ins
inc
xchg
das
aaa
and
mov
in
lods
das
inc
out
jmp
rcr
cmp
jnp
jge
pcmpgtw
adc
in
fistp
test
ins
mov
add
or
loopne
int3
mov
inc
xchg
mov
gs
sub
cmps
sbb
pop
gs
add
pop
pop
(bad)
mov
xchg
xor
mov
cdq
cdq
dec
mov
sub
inc
stos
ja
cmp
and
out
xchg
adc
and
inc
inc
fsub
xor
test
in
jge
ficom
cmp
out
mov
ret
pushf
and
ret
xchg
fmul
jb
xlat
pop
jnp
(bad)
fimul
mov
and
push
pop
sbb
sub
stos
mov
daa
add
inc
mov
or
movs
aad
dec
add
jbe
jbe
sbb
adc
sbb
(bad)
ror
xchg
xchg
movs
push
in
cmp
and
loopne
sub
push
jge
sbb
add
mov
jbe
jle
loop
into
addr16
push
add
or
in
mov
scas
enter
arpl
mov
shl
rol
mov
cmp
push
inc
mov
ror
pop
test
push
test
mov
fcomp
sti
cmp
sbb
repz
ror
hlt
mov
repnz
jecxz
xchg
jg
ret
loopne
int3
ret
outs
ficomp
aad
cs
out
mov
das
fcmovnb
in
mov
stos
mov
add
movs
test
push
idiv
repnz
es
ret
cmp
pop
pop
adc
or
fwait
and
mov
add
popf
packsswb
mov
pop
jbe
mov
sbb
pop
arpl
pusha
sbb
adc
jnp
pop
ja
lahf
cdq
sub
pop
loope
adc
or
xor
mov
pop
sar
dec
call
cmc
add
aas
xchg
sar
adc
sbb
inc
int3
inc
shl
or
xchg
mov
inc
in
ret
pop
aam
mov
mov
cmps
shl
pop
pop
dec
shr
test
popf
jo
mov
ss
mov
inc
pop
dec
inc
dec
in
lods
xor
add
(bad)
pop
fwait
push
xor
sub
in
sub
fbld
pop
aas
test
scas
add
outs
push
adc
jge
clc
push
(bad)
push
clc
mov
js
push
push
sti
stos
test
bound
jecxz
jle
jae
mov
mov
retf
out
out
inc
sbb
packuswb
push
xchg
(bad)
fidivr
sbb
ja
or
iret
xchg
mov
cmps
mov
xlat
daa
lock
aad
xlat
xor
ror
xchg
jne
stos
nop
dec
and
je
cmp
adc
(bad)
daa
fldlg2
mov
dec
scas
adc
imul
ficomp
cwde
leave
jmp
sub
loope
ror
sar
cli
inc
fnstenv
jmp
lods
fst
lods
ins
add
or
and
push
nop
out
pusha
jle
in
add
ds
dec
cmp
mov
inc
in
mov
xchg
jne
dec
(bad)
hlt
dec
jge
pop
gs
mov
popa
out
sbb
jns
jg
addr16
(bad)
pop
call
pop
push
aam
outs
ins
push
not
ffree
(bad)
mov
cmp
jle
aaa
mov
aam
frstor
leave
sub
pusha
cwde
retf
out
test
test
or
cmp
stos
in
jp
in
mov
fist
jae
mov
ins
imul
pop
fisub
aad
aas
push
jle
xor
ror
or
cmp
cld
add
mov
rol
into
dec
sub
pop
adc
mov
and
push
stos
mov
mov
mov
jbe
mov
mov
or
cmp
mulps
xchg
adc
loopne
out
xchg
xchg
push
and
and
jecxz
movs
mov
scas
call
cmp
call
mov
xchg
test
in
scas
dec
cmp
mov
mov
xchg
call
xchg
push
or
or
xchg
loope
loope
mov
das
pop
jo
dec
xor
jmp
pop
xor
push
enter
xor
push
pop
test
out
mov
and
pop
xchg
(bad)
mov
leave
dec
loope
inc
(bad)
cmp
inc
mov
jbe
ins
jnp
mov
or
mov
and
mov
sbb
inc
or
sub
data16
retf
sub
adc
jp
int3
xchg
dec
ret
inc
dec
push
nop
adc
jo
call
movs
pop
mov
imul
ss
and
pop
mov
jg
jl
dec
cmp
mov
cdq
adc
out
jmp
rcr
(bad)
fldcw
imul
and
mov
iret
mov
xchg
clc
daa
xchg
push
push
das
push
add
cmp
bound
and
fdivr
add
frstor
mov
mov
pop
mov
loop
sub
rcr
jns
loope
scas
push
mov
push
jmp
add
inc
int3
lods
arpl
adc
lahf
push
lods
and
mov
pop
fst
ins
dec
pop
sti
shl
or
sbb
push
mov
jbe
pop
mov
jb
dec
xchg
out
ret
mov
popa
ret
mov
and
dec
or
mov
lea
test
xchg
inc
cmp
mul
je
aaa
mov
in
sbb
mov
push
or
lock
imul
jp
push
enter
scas
mov
jl
lea
call
fcom
mov
in
stc
repnz
jg
mov
add
cmps
cli
xor
loop
add
pop
pop
aas
es
fild
or
add
fbld
add
in
in
stos
adc
mov
pop
fs
cmp
imul
shl
push
inc
ins
mov
pop
fst
mov
mov
retf
mov
jecxz
push
andps
inc
in
ret
adc
mov
mov
bound
sub
std
mov
xchg
pop
sar
stos
and
out
sbb
(bad)
movs
sbb
sub
retf
pop
inc
pushf
sub
mov
xchg
jmp
mov
mov
imul
jb
sahf
out
push
mov
mov
popa
adc
mov
jmp
sti
test
cld
in
sub
pop
mov
cs
jle
and
mov
adc
lods
mov
xchg
repnz
imul
fs
lods
test
or
inc
dec
ja
lea
pushf
jg
mov
test
pop
cmp
xchg
fdivrp
xor
(bad)
pop
xchg
mov
adc
jg
mov
and
(bad)
(bad)
xchg
xor
cmp
fucomi
inc
test
jbe
dec
lods
mov
repz
push
push
jae
and
test
sub
retf
stos
xchg
push
cmc
enter
clc
sub
scas
lahf
aad
mov
mov
sbb
les
push
rcr
mov
cmp
fisttp
sbb
mov
iret
jbe
mov
repz
ds
bound
xchg
push
inc
fs
cs
ss
cmp
sar
mov
aas
mov
mov
mov
cmps
mov
push
loopne
xor
stos
cmp
push
xchg
call
push
push
jmp
push
pop
loopne
xchg
jbe
fstp
in
push
jle
repnz
mov
sub
cwde
jns
in
mov
lods
mov
fimul
int
push
mov
push
xchg
or
add
outs
push
aam
out
(bad)
test
or
push
xchg
and
outs
mov
stc
cmp
stc
push
dec
into
inc
xchg
pop
push
add
popa
out
pop
sar
out
push
lds
nop
aad
(bad)
mov
dec
dec
xchg
inc
cmp
cwde
mov
repz
push
mov
sub
pop
imul
mov
pop
lods
fdiv
sub
xlat
mov
push
or
dec
jmp
cli
js
mov
sbb
retf
ret
dec
fwait
push
jns
push
aam
arpl
mov
outs
pop
and
(bad)
mov
pop
jmp
fld
cld
sbb
into
dec
cmp
jmp
mov
xchg
push
or
and
shl
ror
addr16
mov
pop
aad
pop
outs
popa
pop
ja
sbb
push
dec
repz
imul
push
in
xchg
pusha
or
lods
popa
lea
in
mov
pop
rol
stc
pushw
imul
inc
mov
scas
dec
mov
adc
fwait
xchg
jle
hlt
xchg
icebp
ja
ror
xor
and
(bad)
push
or
and
leave
mov
sub
loopne
scas
xor
pop
or
xlat
pop
(bad)
ins
adc
enter
lock
arpl
dec
mov
test
daa
sbb
es
xor
or
sbb
fisttp
scas
add
pop
fisttp
js
dec
inc
in
or
popf
xor
pop
cmp
into
jmp
inc
xchg
push
pop
fs
mov
jmp
in
adc
aas
xchg
cwde
jns
pop
adc
lahf
sbb
loope
mov
rcr
mov
out
je
ret
clc
push
pushf
in
jb
jnp
mov
call
ins
mov
ret
sub
pusha
dec
adc
(bad)
div
adc
add
mov
push
rol
cmps
cmc
jle
sbb
adc
or
mov
iret
test
cs
cdq
fild
call
xchg
push
mov
push
jno
adc
xchg
cmp
jae
sbb
test
push
jns
imul
or
pushf
adc
xchg
pop
push
mov
pusha
mov
sbb
in
out
inc
leave
xor
pop
sub
scas
sar
mov
sub
aad
test
mov
push
xchg
adc
xchg
jmp
sti
(bad)
and
xor
sbb
loop
hlt
adc
lea
(bad)
call
imul
stc
enter
ret
push
mov
add
inc
mov
xor
dec
in
clc
push
dec
and
sahf
in
loopne
fucomi
xchg
dec
sub
jmp
mov
sbb
cmps
mov
dec
jne
xchg
(bad)
dec
dec
fincstp
add
xor
repnz
test
aaa
fcom
fst
sbb
cld
fst
xchg
outs
cli
pusha
pop
(bad)
mov
pop
xchg
adc
push
push
cli
push
pushf
sub
and
hlt
mov
or
dec
in
mov
and
lods
ret
sub
movs
mov
mov
shr
xchg
adc
cwde
stos
xchg
pop
jo
(bad)
jb
les
or
xor
iret
scas
pop
test
lahf
push
jb
mov
pop
add
inc
mul
push
cmps
out
sub
pop
pop
mov
xchg
mov
mov
push
popf
movs
mov
movs
lods
popa
push
jmp
imul
jp
lods
iret
fidiv
pop
leave
or
cld
in
gs
jb
sub
stc
pop
or
jmp
and
push
dec
cmps
pop
cmp
and
push
mov
mov
retf
dec
cli
or
dec
or
mov
(bad)
out
ja
je
push
and
sbb
lock
mov
and
add
jle
pop
out
loopne
shr
(bad)
cmp
(bad)
cmp
cmps
dec
or
push
dec
mov
sub
pop
div
jge
or
jmp
gs
jp
sub
scas
xchg
jmp
cmp
jns
sbb
addr16
mov
out
adc
aaa
lods
loope
xchg
leave
dec
fnstenv
jge
and
call
mov
fst
mov
lods
js
sub
lods
cmp
mov
cmp
push
pop
jg
mov
cs
into
sub
nop
dec
pop
test
mov
push
dec
or
lods
aaa
stc
cmp
popf
imul
out
jl
inc
imul
jb
int3
push
mov
pop
es
lock
add
je
repz
xchg
dec
mov
imul
in
addr16
xor
mov
movs
xor
lods
frstor
add
push
(bad)
leave
pop
stc
pop
xchg
pusha
add
movs
out
or
pop
fsub
call
inc
pop
lahf
push
and
loopne
and
add
stos
je
shl
pop
cmp
pop
(bad)
bound
dec
cld
jp
mov
stc
and
or
mov
xchg
scas
fwait
rcl
xor
push
jg
je
or
pop
out
(bad)
jp
mov
inc
ret
in
lods
out
sub
push
movs
mov
jne
sti
enter
jae
test
inc
jae
dec
jnp
hlt
fmul
inc
popa
fmul
add
retf
push
das
mov
and
xchg
gs
xor
cmp
jecxz
sub
cmp
cmp
sub
and
sbb
idiv
(bad)
jbe
jo
ret
in
dec
sbb
pop
jp
(bad)
xlat
iret
add
mov
sub
stc
je
push
fs
and
adc
cmp
mov
fimul
and
mov
sub
pop
jae
fsubr
xor
mov
inc
inc
aam
jbe
add
fst
sub
ret
mov
das
xchg
jg
jno
aaa
sbb
mov
les
xor
aas
mov
sbb
jns
jecxz
add
nop
inc
mov
mov
push
add
(bad)
sti
fs
std
call
test
push
popf
and
shr
xchg
call
rcl
in
sub
jno
sar
shl
or
add
pop
pop
dec
xlat
pop
ror
imul
jp
xchg
(bad)
push
adc
dec
ror
les
xchg
jb
enter
inc
shl
sbb
repz
sbb
loope
nop
(bad)
ss
cmp
into
and
pusha
aad
cmp
mov
arpl
cmps
jo
dec
or
xchg
bound
(bad)
sahf
enter
cmps
inc
inc
pop
pop
(bad)
mov
repz
xchg
imul
icebp
ss
cmp
sbb
mov
jle
dec
cli
inc
test
push
pop
call
pop
outs
sti
iret
mov
jecxz
or
add
daa
hlt
add
inc
popa
and
pop
mov
inc
jns
xor
retf
ja
add
sub
rcl
fst
cmp
dec
mov
outs
aad
xchg
lahf
pushf
pop
push
fmul
cmp
and
jbe
pop
pushf
outs
mov
push
imul
shr
leave
stos
es
data16
lods
cmc
mov
popf
inc
scas
mov
jp
in
mov
mov
loop
test
pop
fcomp
stc
ja
out
jp
aam
fwait
push
dec
adc
add
(bad)
or
fwait
cmps
jle
dec
cmps
push
dec
xor
into
add
loope
jae
cmp
sahf
xchg
stos
adc
dec
outs
in
loope
push
add
aam
adc
jmp
lds
xchg
int
int
(bad)
pop
inc
arpl
xor
and
ret
jecxz
dec
lock
jnp
sub
out
pushf
retf
stos
outs
inc
add
jne
out
sub
popa
mov
rol
sub
mov
add
add
and
mov
sub
ja
jne
shl
mov
push
xchg
sbb
xor
clc
ins
mov
push
dec
pop
sbb
ja
add
fiadd
pop
sub
and
rol
iret
mov
add
ins
retf
cmp
das
sub
push
inc
jle
push
xlat
jo
fisttp
xchg
aad
xor
dec
inc
mov
sbb
(bad)
outs
(bad)
push
ja
and
nop
icebp
jmp
dec
cmps
outs
pop
outs
add
call
pcmpgtd
cmps
sbb
push
sub
or
ins
push
xchg
jbe
in
mov
test
lahf
not
adc
or
movs
aaa
xchg
inc
jb
add
mov
dec
out
dec
push
dec
push
hlt
xchg
test
out
ins
pushf
xor
and
xor
and
clc
iret
adc
test
ds
inc
ja
mov
out
(bad)
fsubr
cli
lods
lods
xchg
push
jp
add
pop
(bad)
sbb
adc
ins
add
test
or
loopne
call
push
add
pop
mov
add
cmp
push
jne
push
sahf
ins
sub
cmp
cdq
inc
aad
jbe
inc
shr
fnsave
cmp
dec
enter
gs
push
les
dec
test
inc
sbb
mov
xor
aad
and
lahf
dec
out
gs
cmc
cmps
mov
ins
sbb
icebp
clc
fcmovnu
retf
or
xchg
std
mov
cmp
stos
in
sbb
cli
inc
mov
and
sub
scas
test
adc
cmps
cmps
cmp
mov
(bad)
pop
or
(bad)
push
aas
retf
mov
fcomi
stc
inc
mov
aas
xor
jb
or
mov
add
ret
shl
daa
xchg
cmps
outs
jnp
clc
mov
test
and
cmp
and
in
gs
neg
ds
add
lock
scas
add
sub
repz
adc
repz
add
mov
mov
mov
gs
dec
jg
sbb
ret
dec
inc
cmp
inc
in
dec
leave
mov
inc
(bad)
or
mov
push
popf
test
je
pushf
(bad)
jmp
outs
shl
int3
icebp
push
cmp
fisttp
sub
and
mov
jle
xlat
dec
push
fiadd
leave
in
call
xlat
jbe
cmp
call
jge
in
mov
vcvtss2sd
popf
sub
add
call
in
push
or
pop
jecxz
(bad)
mov
test
das
repnz
cmp
les
sub
mov
xor
sbb
cwde
adc
mov
adc
imul
mov
femms
pop
sar
xor
nop
lods
pop
clc
call
sbb
cmc
add
stos
sub
inc
inc
add
push
and
enter
call
pop
push
into
inc
dec
leave
or
aas
shl
inc
jbe
mov
(bad)
ss
xor
inc
mov
mov
or
lods
inc
rol
repz
inc
mov
jmp
adc
adc
sub
out
push
jnp
sbb
xor
sbb
sbb
jmp
gs
add
inc
cld
or
mov
or
in
outs
rcl
inc
mov
arpl
and
cs
xchg
lahf
jge
push
mov
pop
cli
(bad)
iret
xlat
imul
push
shr
enter
adc
fbstp
push
inc
cmps
adc
push
fist
fyl2x
lea
xor
push
pand
mov
mov
sbb
sub
ss
jp
mov
jmp
sbb
mov
jae
loope
test
lods
(bad)
mov
call
add
mov
je
pop
aam
vandnps
mov
in
mov
je
jno
sub
dec
imul
push
inc
popf
jns
daa
adc
movs
mov
mov
xor
mov
imul
pop
push
jne
jge
or
or
pop
aam
fsub
call
add
or
data16
adc
scas
imul
dec
cmp
cwde
sub
push
lahf
lds
arpl
jns
out
mov
mov
sahf
sbb
retf
jae
ins
aaa
shl
push
sub
nop
lods
push
out
mov
aad
inc
scas
xchg
push
sbb
js
lock
repnz
cs
in
cmps
inc
test
dec
adc
test
int3
mov
add
xor
cmp
(bad)
jecxz
popa
mov
and
inc
mov
je
loope
add
push
ret
scas
cmp
call
push
nop
(bad)
and
ret
add
in
ret
call
lahf
mov
jbe
cmp
push
sbb
pop
or
jne
or
cmp
cmp
push
pop
and
jp
sbb
test
call
adc
ret
or
pop
out
in
and
movs
jbe
lds
shl
movs
call
jno
or
shl
push
dec
sahf
fwait
pushf
aaa
adc
nop
xor
popf
xchg
in
xchg
pop
pop
cmc
push
div
ftst
and
xor
shl
inc
jmp
mov
adc
aad
mov
mov
mov
mov
iret
add
lea
adc
fidiv
dec
data16
mov
and
or
das
fdiv
mov
jl
mov
mov
ret
mov
shl
sub
push
pop
sbb
jg
jne
int3
cmp
adc
les
add
or
iret
ds
test
pop
out
in
mov
pusha
fucomi
cmp
dec
sub
push
xchg
fadd
xchg
mov
sahf
lock
push
loop
add
cmp
fwait
icebp
inc
mov
mov
shr
jno
fistp
pusha
xor
sub
or
dec
mov
cwde
sbb
loopne
mov
or
in
ins
stc
jp
mov
ficom
push
push
repz
jecxz
aaa
push
je
mov
adc
xor
ret
and
mov
sbb
cmp
push
or
imul
sub
mov
pop
sahf
retf
push
in
(bad)
xchg
mov
loop
icebp
adc
fld
dec
(bad)
cmp
pusha
xor
mov
cdq
shr
pop
sar
add
pusha
push
pop
call
jbe
movs
jnp
std
mov
mov
fsubr
jno
jp
inc
adc
jns
xchg
sahf
pusha
movzx
inc
mov
nop
test
mov
pop
enter
lock
mov
add
in
cmp
mov
out
xlat
mov
stos
int3
cmp
dec
lock
mov
fidivr
rcr
fistp
and
in
std
arpl
or
push
mov
mov
pop
into
jp
inc
sub
gs
jo
sub
pusha
rcl
add
adc
cmp
out
outs
or
aaa
or
mov
xchg
jp
mov
push
iret
cmps
cmp
ds
fisubr
or
mov
or
imul
outs
mov
add
mov
sbb
mov
das
push
xor
push
cmp
out
add
lods
adc
ret
das
mov
es
dec
rcl
gs
sub
add
nop
mov
cmp
sbb
ds
mov
test
or
ins
push
popa
push
ret
xchg
ret
jp
icebp
mov
js
int3
dec
mov
lods
mov
push
dec
int
sub
mov
sbb
sbb
(bad)
and
mov
sar
sar
mov
sub
sbb
aas
pop
and
in
jmp
dec
or
inc
in
stc
mov
cmp
sub
fidiv
dec
jo
hlt
je
inc
stc
gs
jmp
adc
shr
jno
inc
add
mov
jl
sar
retf
adc
inc
xor
sbb
push
leave
or
jb
arpl
inc
or
jl
loopne
pop
or
jne
cmp
mov
retf
cmp
push
fbld
mov
(bad)
mov
xor
xchg
cmps
cmp
stos
add
aad
push
data16
scas
call
xchg
jno
leave
fidivr
adc
pop
push
and
pop
xor
hlt
jp
mov
cmp
shr
push
sti
(bad)
sub
jl
mov
pop
sub
cmp
(bad)
push
arpl
sub
or
mov
jb
scas
sar
dec
mov
out
(bad)
cwde
lods
jns
fwait
leave
in
mov
gs
push
scas
rep
mov
lods
jecxz
mov
pop
mov
mov
xchg
lds
(bad)
fsubr
xor
mov
mov
jle
push
scas
daa
push
(bad)
sub
mov
or
xor
sub
inc
or
xchg
icebp
inc
lods
int3
cld
mov
cli
and
mov
pop
cs
idiv
pop
xor
mov
outs
mov
aad
and
add
adc
add
jae
call
add
leave
push
fwait
mov
das
push
fnsave
jbe
mov
sub
cmps
mov
xor
dec
inc
rcl
sbb
jge
mov
cmp
pop
sub
cmps
movs
stos
add
repz
das
lea
mov
dec
aad
bound
int
gs
in
cmp
lock
rol
popf
in
hlt
xor
in
ja
mov
out
out
mov
out
out
fcomip
cmp
mov
mov
loope
mov
inc
jle
(bad)
cmp
dec
fimul
stos
out
mov
test
fist
push
add
xor
je
xchg
push
cmp
sub
inc
mov
ja
push
jle
jle
push
push
outs
or
addr16
std
cmp
ins
jae
adc
sub
retf
sahf
movs
scas
cmp
pop
mov
sub
xor
in
ficomp
call
jo
and
inc
aad
jge
cmc
mov
mov
fwait
loopne
gs
fimul
in
out
fadd
and
sti
out
std
adc
popf
enter
(bad)
mov
adc
mov
ror
into
pop
loope
pop
dec
push
(bad)
fisubr
xor
js
push
mov
jecxz
int
int
jno
mov
dec
and
test
add
int3
pusha
fild
fldenv
mov
gs
(bad)
mov
sub
or
push
mov
mov
cmps
or
mov
cmp
mov
cld
stos
cli
fisubr
ds
mov
imul
cmps
nop
jb
stc
js
xor
fmulp
retf
rcr
(bad)
mov
xchg
test
mov
xchg
mov
enter
outs
and
xor
xor
ret
ret
add
fiadd
sbb
xor
push
scas
mov
lea
or
and
xlat
jns
mov
dec
sbb
xchg
jmp
jb
push
cmps
pop
mov
inc
or
mov
repz
(bad)
cs
mov
movntq
lock
pop
inc
dec
pushf
mov
dec
fmul
xchg
sti
sti
sbb
pop
ror
adc
add
and
xchg
mov
mov
in
(bad)
adc
clc
push
hlt
xchg
pop
adc
pop
adc
pusha
add
mov
aam
imul
lods
jmp
sbb
lds
fldenv
push
stos
push
outs
rol
lods
pusha
push
jno
shr
and
fild
imul
sbb
je
ficom
mov
jmp
rcr
loop
in
mov
jmp
mov
cmps
sub
add
cmp
cmp
pop
adc
clc
push
cmp
pop
nop
stc
aas
jg
push
fcmovnbe
inc
push
jecxz
loop
add
daa
clc
jle
push
ja
or
inc
mov
popf
add
xchg
loope
sbb
mov
pop
jbe
and
pop
mov
add
sub
push
cmps
or
(bad)
jmp
mov
cld
mov
xlat
pop
pop
(bad)
dec
test
push
ret
jmp
(bad)
dec
je
push
stos
frstor
cmp
xchg
jecxz
adc
ins
in
jno
scas
cli
retf
mov
xor
or
(bad)
add
ins
mov
rcr
adc
jg
addr16
push
push
rol
adc
(bad)
mov
xchg
fwait
push
repnz
jmp
loope
xchg
adc
ss
cld
daa
sti
jnp
and
nop
adc
pop
cmps
hlt
pushf
adc
sbb
cmps
inc
call
rcr
inc
imul
add
cld
out
bound
shl
sub
call
and
outs
xor
sub
imul
mov
jbe
in
std
pop
idiv
jae
test
scas
loop
into
xor
cld
into
adc
xor
inc
in
enter
stos
ins
dec
rol
scas
xor
pushf
pusha
adc
ret
xchg
ror
ins
inc
retf
stc
popa
mov
jp
add
or
ins
sbb
enter
cmp
(bad)
arpl
inc
jl
mov
mov
adc
ret
xchg
xor
call
ret
xchg
ins
in
in
xor
pop
pop
dec
div
sbb
jne
push
sbb
les
test
sub
xchg
inc
test
xchg
push
cmp
xchg
mov
cs
test
inc
mov
sti
pop
inc
push
es
xchg
adc
add
gs
enter
pusha
mov
mov
mov
add
mov
adc
or
fsubr
mov
call
push
pop
push
mov
and
mov
test
push
fs
push
out
pop
loopne
adc
dec
push
push
mov
sbb
jb
add
mov
push
xlat
lock
bound
xchg
xchg
pop
addr16
push
push
sbb
loope
cmps
aaa
jno
add
shr
mov
sbb
call
test
cmc
mov
les
cmps
pop
rcl
rcr
(bad)
xor
adc
sub
rcr
les
or
xchg
in
sub
icebp
cmp
and
sbb
add
sub
dec
pusha
scas
mov
aad
mov
fsub
sub
les
ins
xchg
scas
or
pop
xchg
or
mov
(bad)
fldenv
sub
mov
jne
ja
adc
mov
sub
xlat
or
mov
push
ffreep
ja
dec
mov
mov
cwde
mov
clc
aas
push
pop
pop
scas
aad
mov
add
pop
fisttp
dec
adc
es
sub
jmp
cmp
dec
jle
es
adc
push
cmp
cmp
xor
(bad)
into
xor
xchg
jg
pop
xor
xchg
cmp
mov
outs
xchg
adc
mov
shl
and
sbb
xchg
mov
aad
mov
fisub
add
cs
(bad)
arpl
push
jno
adc
jmp
dec
(bad)
dec
jg
fwait
mov
mov
(bad)
cmps
fld
cmc
jo
inc
jle
movs
mov
xchg
or
or
shl
sbb
pop
mov
inc
ret
jge
push
or
in
dec
fisttp
stos
push
sub
sahf
dec
popa
or
dec
ret
push
out
arpl
jl
dec
cmp
lock
xor
mov
inc
jl
in
pushf
test
push
mov
lea
push
xor
and
retf
call
xor
xor
mov
(bad)
cdq
xchg
or
lahf
inc
jb
push
je
and
mov
push
stos
pop
gs
mov
aam
dec
mov
cld
sbb
hlt
cmp
and
dec
push
mov
in
pop
xchg
adc
enter
inc
nop
mov
sub
aad
daa
jb
sar
jnp
icebp
mov
and
ror
jge
sbb
xchg
loope
iret
rcl
cmps
adc
pop
jmp
(bad)
mov
dec
inc
div
rol
jmp
dec
sub
or
imul
and
repnz
call
lock
cwde
ret
dec
dec
addr16
sbb
dec
cdq
mov
xor
mov
fbstp
dec
stos
(bad)
retf
(bad)
mov
push
xor
mov
sbb
add
aam
in
push
pop
jle
addr16
inc
xchg
jge
es
scas
bound
and
aas
retf
jmp
shl
out
ds
test
jg
enter
xchg
xchg
add
call
sahf
jae
pop
lds
(bad)
out
inc
dec
neg
mov
pushf
add
test
int3
sbb
mov
mov
outs
sub
xor
dec
pop
mov
daa
pop
jmp
retf
inc
add
icebp
mov
and
iret
iret
clc
cmp
push
mov
retf
cmp
mov
push
mov
mov
mov
adc
and
pop
mov
ins
popa
inc
ret
or
dec
in
cli
add
push
mov
xchg
cmp
fist
sub
movs
nop
xchg
xor
mov
call
mov
mov
shr
imul
mov
adc
mov
and
mov
out
jmp
jecxz
(bad)
and
pop
rol
xchg
add
sti
push
mov
out
sub
ret
mov
xchg
inc
push
push
jmp
mov
xor
mov
adc
inc
mov
das
xor
fcom
push
dec
mov
push
xlat
leave
sbb
cmp
out
xor
cld
jmp
dec
push
jbe
mov
mov
xor
dec
sub
mov
mov
or
rol
inc
pop
movs
mov
call
xchg
xor
adc
cdq
sub
stc
jbe
xchg
loope
cmp
pushf
(bad)
scas
mov
mov
push
nop
mov
test
fldenv
sub
in
cmp
in
fmul
test
adc
dec
arpl
inc
adc
and
jecxz
popf
jmp
cmp
push
sbb
bound
adc
fdivr
jmp
das
fist
dec
mov
jmp
dec
jmp
and
mov
imul
loope
xor
adc
into
push
loop
xlat
or
and
pop
dec
call
mov
mov
loop
(bad)
sub
fidivr
(bad)
out
mov
inc
cmp
or
dec
int3
jo
ss
sub
lods
push
and
push
mov
and
test
out
cmps
adc
xchg
ret
mov
arpl
ret
pop
push
js
xchg
cmp
pop
pop
sbb
pop
sub
dec
(bad)
mov
test
jno
pop
add
into
sub
add
dec
retf
outs
leave
mov
or
sub
or
mov
fisttp
test
cmps
call
addr16
add
adc
mov
push
mov
mov
loope
xchg
cmc
cmp
push
ja
aas
mov
(bad)
xchg
jecxz
xchg
ret
mov
or
cmp
into
mov
shr
lea
push
lea
iret
and
popf
inc
mov
xor
das
enter
lahf
push
jno
sbb
out
imul
mov
add
and
pusha
xchg
mov
ror
scas
sbb
jnp
or
je
xchg
or
push
rol
adc
mov
or
aas
pop
lock
mov
adc
push
or
mov
aam
movs
into
xor
lahf
sahf
mov
push
pusha
jmp
ret
mov
repnz
push
daa
fdiv
fisubr
mov
cmp
jbe
(bad)
retf
mov
mov
gs
cmps
out
add
retf
aam
test
outs
push
repz
aam
sti
repnz
hlt
add
pop
sbb
pop
out
movs
inc
fwait
lock
sub
add
add
xor
adc
movs
or
test
addr16
into
pushf
push
fbld
clc
inc
xor
jb
add
xlat
xchg
push
test
mov
stos
mov
dec
shl
cmp
mov
and
dec
push
(bad)
int3
sbb
jnp
rcr
push
js
ret
out
into
pop
test
and
ret
mov
fidiv
ffreep
loop
icebp
push
out
dec
daa
lods
lds
cld
call
mov
fnstsw
cmp
mov
jge
leave
aam
cmp
data16
pop
jmp
mov
aam
cmp
and
aam
jne
sbb
and
mov
aas
dec
jg
cmps
(bad)
in
jb
add
div
pushf
in
repz
dec
mov
sar
fcom
mov
fnstcw
call
in
leave
test
dec
jne
sub
mov
fild
dec
xor
jno
int
jb
jmp
int
pop
aas
xor
or
jns
inc
and
jbe
out
ja
mov
push
mov
ret
and
and
push
adc
out
outs
in
jb
imul
in
adc
push
pop
mov
call
gs
test
and
ret
mov
jle
(bad)
ja
push
and
add
fiadd
xor
(bad)
inc
mov
cmp
mov
jo
mov
test
dec
inc
out
fidiv
inc
mov
mov
popf
popa
mov
cmp
cli
retf
test
xchg
call
pop
ins
dec
jmp
popf
cdq
jbe
mov
ret
enter
push
mov
cmps
data16
(bad)
cdq
xor
push
cmp
mov
ds
xchg
cdq
xchg
adc
stos
jg
cdq
(bad)
jg
or
inc
jne
outs
mov
aaa
pop
aad
push
inc
jmp
push
and
xlat
icebp
loop
fwait
nop
xchg
push
adc
loop
inc
mov
mov
and
scas
dec
js
inc
fisttp
loopne
fcom
sub
mov
jae
xchg
(bad)
in
or
es
pop
int3
pushf
dec
and
out
or
jo
xsha256
cmps
adc
dec
shr
xchg
stos
push
out
fisttp
adc
call
fisub
inc
cmps
daa
mov
inc
push
test
repz
and
aad
dec
inc
loopne
inc
push
push
es
jle
sbb
sbb
ja
sub
mov
xchg
test
dec
aad
xor
mov
je
jnp
jge
mov
pop
dec
and
push
packsswb
test
xor
pop
push
js
or
lahf
jle
cmps
cmp
pop
lods
jmp
(bad)
or
cmp
icebp
bound
loop
(bad)
pop
xor
xor
std
dec
adc
or
jne
pop
fiadd
pusha
arpl
aad
push
jle
pop
out
pop
mov
mov
dec
cmp
(bad)
mov
scas
stos
iret
loopne
xor
ret
dec
push
mov
mov
add
sti
jg
xlat
pop
mov
rcl
adc
mov
data16
dec
xchg
in
sub
sub
cmp
mov
jmp
push
popf
outs
cwde
push
data16
push
pop
scas
ficomp
sbb
jns
(bad)
out
movd
adc
adc
rcl
mov
mov
cmp
iret
(bad)
mov
and
pop
xchg
sahf
into
sbb
xchg
lds
(bad)
mov
(bad)
rcr
ror
push
and
fmul
or
mov
push
or
or
imul
cmp
mov
fmul
mulps
jae
push
aas
out
shl
lods
jge
xchg
push
popa
sbb
enter
nop
mov
mov
pop
mov
das
pop
cmp
pop
inc
push
aad
pop
dec
addr16
shl
(bad)
pop
arpl
mov
xchg
cli
xor
rol
call
test
jecxz
imul
mov
ins
enter
inc
xchg
mov
xchg
sub
cmp
or
adc
rcl
dec
cmp
stc
mov
push
fisttp
jl
push
xlat
add
retf
pop
mov
xchg
cmps
shr
cmp
outs
out
xor
and
rcl
push
ret
mov
mov
scas
lds
lahf
ret
stos
pop
repz
mov
(bad)
lds
jp
push
sub
xor
dec
cdq
jns
mov
sub
(bad)
mov
ror
adc
inc
aaa
xor
sbb
push
in
in
fild
mov
xor
xlat
fs
jmp
xor
mov
inc
imul
gs
icebp
dec
sub
adc
fimul
cdq
ds
int
outs
mov
jns
sahf
mov
fcmovbe
sbb
adc
rcl
mov
cmp
call
(bad)
pop
jb
add
into
add
cdq
es
test
test
adc
and
inc
retf
test
aam
xchg
adc
mov
cmp
movs
dec
pusha
push
sbb
jp
xchg
mov
sub
cs
mov
mov
jnp
cdq
jae
xchg
int3
push
xor
pop
sbb
xchg
call
ja
imul
sub
mov
aas
aaa
fs
jb
(bad)
(bad)
sub
jae
cmps
cmc
cmps
stc
push
mov
xchg
arpl
cmp
sbb
cld
jnp
add
push
and
sub
ret
in
fidivr
aaa
cmp
push
jmp
xchg
or
jecxz
cmp
xor
pop
and
int3
cmp
pop
inc
push
fcom
mov
into
aam
mov
aad
pop
stc
mov
sub
popf
add
adc
ror
in
jmp
pop
les
imul
inc
in
fdivr
cli
cmp
pop
xchg
lea
push
aas
xchg
call
mov
imul
mov
mov
retf
xchg
lock
adc
and
sbb
jns
fisub
inc
mov
cs
or
cmc
push
ror
pushf
in
dec
lea
movs
or
mov
jl
clc
push
fsubr
daa
arpl
psubusb
dec
dec
push
and
cdq
mov
and
inc
xchg
test
adc
xchg
sub
fs
pop
lahf
add
dec
or
or
and
jnp
push
or
jle
punpckhdq
lock
pop
dec
or
call
pop
sub
in
in
mov
stc
cmps
jmp
xchg
adc
jae
xor
test
ds
mov
adc
ror
mov
push
lock
(bad)
mov
lods
sbb
lea
loopne
shl
sti
sub
mov
shl
mov
ds
into
clc
rol
cs
jp
imul
mov
push
mov
xchg
jnp
(bad)
ds
and
mov
fwait
lock
aas
inc
(bad)
es
vpcmpeqw
scas
(bad)
cli
sub
scas
inc
add
aaa
iret
getsec
push
fisubr
movs
loopne
adc
das
sbb
xchg
dec
mul
movs
aas
adc
cmps
pop
test
cli
cmps
pop
dec
pop
xchg
jg
test
imul
test
cmps
leave
not
mov
fild
clc
jnp
cld
das
popa
mov
pop
cmp
cli
adc
xor
sub
mov
push
ins
(bad)
out
and
lock
loope
mov
bound
clc
nop
loope
popa
dec
int3
fiadd
dec
sbb
jle
neg
and
clc
sub
cmps
xlat
fdiv
std
cmp
adc
inc
(bad)
xor
sub
adc
mov
ds
adc
xchg
add
sub
cmp
icebp
adc
pop
addr16
fldenv
add
cmp
adc
enter
cmps
ror
out
xchg
mov
mov
push
xchg
push
imul
daa
pop
stc
out
jb
jecxz
sub
movs
mov
fst
outs
scas
mov
rol
(bad)
pop
lea
(bad)
popf
ins
add
out
nop
push
dec
stos
test
mov
inc
icebp
fst
(bad)
fidivr
jecxz
jno
aad
push
ror
mov
repnz
cli
mov
in
xchg
cdq
jns
cmps
mov
(bad)
dec
mov
xor
cld
outs
(bad)
es
dec
add
or
sub
jne
(bad)
or
clc
pusha
mov
jmp
fild
aad
movs
das
jp
je
repz
das
js
mov
jg
lock
sub
in
add
pop
jne
sahf
push
enter
cmc
sbb
mov
jne
adc
mov
cmc
outs
adc
pop
cld
mov
das
dec
test
ror
add
shl
and
(bad)
jg
out
push
cmp
sbb
ss
or
js
cmps
loop
jbe
lods
icebp
ror
mov
push
push
cdq
sbb
jnp
cmps
and
lea
fistp
and
and
sbb
jmp
rcl
sub
test
hlt
or
xor
imul
sbb
or
inc
or
pusha
jge
mov
pop
xor
scas
fidivr
into
pop
fadd
pop
or
aad
jl
or
dec
in
push
retf
add
loop
fstp
xor
in
aaa
cmp
dec
fwait
je
push
and
into
or
les
clc
push
loope
jle
xchg
bound
ss
push
cmps
xor
sub
enter
cwde
cmps
sub
adc
fsubr
mov
sub
pop
mov
inc
ins
(bad)
sub
push
and
jl
ds
(bad)
pop
sar
and
adc
fmul
or
jns
fwait
sbb
adc
lahf
js
lea
pop
inc
mov
inc
mov
pop
int
add
and
xor
add
jp
mov
sub
gs
loope
(bad)
(bad)
sbb
daa
in
mov
mov
jnp
loope
lahf
fisubr
sub
repz
pushf
add
ins
jecxz
mov
out
xchg
jne
ss
xchg
dec
cwde
mov
cmp
stos
adc
test
repnz
xor
test
(bad)
mov
mov
sbb
cmp
daa
(bad)
pop
push
inc
xchg
daa
jecxz
daa
jno
(bad)
inc
loop
sub
rcl
adc
popa
mov
loop
or
jae
mov
cmp
xor
imul
ins
or
xchg
mov
out
in
std
repnz
sysret
pop
add
scas
in
out
mov
jmp
adc
jbe
mov
je
sahf
jl
rcr
cld
test
je
mov
cmp
sar
xor
out
ret
adc
(bad)
sbb
add
fwait
mov
add
popa
sbb
inc
js
scas
popa
pushf
jmp
cmps
(bad)
les
add
adc
outs
lahf
into
and
pop
cmp
push
fld
outs
add
mov
xor
pop
into
push
movs
mov
stos
dec
call
fwait
cmc
cmc
rcr
and
push
loopne
push
loopne
sbb
mov
pop
cdq
mov
mov
int
mov
out
scas
add
jo
(bad)
out
frstor
mov
mov
cmp
(bad)
cmp
mov
mov
pop
inc
inc
mov
in
scas
cmp
xchg
xchg
jb
(bad)
mov
retf
fimul
pusha
js
pop
xchg
xchg
push
inc
and
dec
(bad)
dec
dec
std
push
dec
jae
xchg
push
sbb
xchg
adc
push
in
call
xor
adc
in
and
inc
imul
cmp
pop
dec
into
mov
push
sti
(bad)
sbb
mov
or
es
push
cmp
xor
jne
out
pushf
mov
fcomp
test
mov
jo
push
(bad)
adc
push
fimul
je
cmp
imul
add
xchg
dec
xchg
das
imul
movs
cmp
pop
clc
mov
sbb
fld
xchg
add
lods
bound
out
xor
sbb
cmp
pop
jo
lods
rol
and
sub
inc
cmp
hlt
inc
sbb
stos
and
xor
(bad)
retf
xchg
aaa
push
cmp
xchg
xchg
(bad)
enter
and
mov
adc
jo
sbb
call
adc
sbb
and
push
pop
(bad)
jmp
add
cs
mov
js
pop
data16
pusha
pop
fstp
sbb
test
(bad)
push
psrlq
fs
jmp
and
mov
mov
aas
js
jb
or
(bad)
outs
mov
inc
daa
lods
mov
nop
dec
adc
test
vporq
pop
xor
xchg
cs
mov
sbb
add
dec
sub
dec
and
xor
cs
xor
lods
push
pop
shl
imul
sub
scas
aam
daa
call
es
xchg
pop
jo
or
or
outs
jo
inc
sub
(bad)
sub
jb
pop
xor
lahf
and
mov
imul
mov
aas
(bad)
xor
jp
cmp
xor
mov
inc
or
mov
jecxz
xor
inc
hlt
or
bound
pop
js
ror
cmps
push
call
in
jp
jnp
repz
iret
ins
xor
pop
(bad)
dec
scas
(bad)
push
push
mov
add
adc
xchg
das
in
push
mov
bound
adc
adc
push
arpl
js
cmc
sub
cmp
or
out
jbe
or
sahf
mov
mov
test
hlt
dec
test
sub
loopne
popa
sar
xchg
add
retf
iret
data16
pop
mov
daa
cmovs
mov
mov
xor
push
jae
jns
cmp
je
sbb
push
push
jg
outs
ins
sbb
or
xchg
fidiv
ret
inc
test
xlat
and
or
lea
icebp
out
dec
pop
push
ss
sbb
aad
dec
push
cs
loopne
push
xchg
div
jns
fs
sti
fisubr
icebp
fdiv
xor
push
fs
pop
daa
cs
ud1
sahf
and
stos
dec
fyl2x
push
push
jns
call
dec
xchg
imul
jbe
jmp
std
mov
and
jecxz
cld
adc
aad
fwait
dec
mov
sbb
jmp
jle
mov
iret
pusha
add
dec
ja
rcl
jbe
popa
add
test
pop
clc
inc
call
add
icebp
cli
push
jo
mov
lds
ja
arpl
stos
inc
sub
add
arpl
nop
xor
cmp
jp
push
add
addr16
push
push
or
mov
dec
sub
adc
clc
xor
cmp
sbb
cmp
push
fwait
xchg
mov
aam
(bad)
and
push
lock
add
add
adc
clc
test
push
loop
fistp
add
lea
xchg
movs
jnp
jbe
push
push
mov
ins
lods
mov
sub
add
jmp
jb
shl
jno
xor
gs
xcrypt-ecb
cmps
into
pop
fadd
dec
push
pusha
adc
lods
mov
ins
inc
mov
mov
mov
jns
mov
lahf
cmc
aam
inc
dec
rcl
scas
or
imul
inc
(bad)
push
mov
push
xchg
into
aas
mov
or
jbe
jg
xor
cmc
dec
inc
mov
ret
and
hlt
push
push
push
pop
and
mov
ss
push
sahf
jnp
lea
ja
(bad)
cli
fs
add
and
xchg
(bad)
shr
push
mov
mov
fld
loopne
ficom
mov
and
aaa
add
fs
(bad)
jge
jo
mov
sahf
cmp
inc
sub
scas
in
or
sbb
outs
inc
xchg
and
test
add
cwde
fucomp
movs
adc
in
iret
add
test
or
sub
arpl
ror
bound
sbb
push
push
ja
ret
inc
or
pop
lods
pusha
aaa
jmp
outs
sub
mov
push
lock
mov
pushf
cmp
push
mov
lods
or
nop
mov
fsub
fmul
adc
fs
test
enter
(bad)
cli
dec
pushaw
mov
lahf
fld
xchg
lea
pusha
lea
cmp
setg
push
mov
ret
dec
(bad)
shr
xchg
push
add
adc
sub
jl
addr16
dec
mov
lods
ficom
jae
inc
pop
iret
mov
push
jg
xor
js
xchg
les
dec
pop
ins
int3
pop
sbb
jecxz
mov
shl
push
into
mul
into
or
movs
and
out
cmps
int3
enter
sbb
adc
ins
pop
dec
pop
dec
xor
jne
imul
dec
addr16
jbe
fs
xchg
test
xlat
pusha
je
mov
pop
pop
adc
cmp
pextrw
sub
xchg
adc
xchg
fsub
test
gs
pop
mov
out
popf
mov
inc
adc
movq
out
iret
lock
test
rcl
(bad)
lea
frstor
jno
push
fild
inc
push
enter
popa
aam
movs
mov
es
shr
call
outs
jnp
xor
fsub
and
mov
push
ins
sub
jne
add
fidivr
mov
dec
ret
jg
xlat
mov
mov
mov
into
pop
sbb
cmp
fstp
add
ret
outs
mov
push
inc
push
loope
movs
ret
or
cmp
jg
xchg
popf
adc
pusha
in
pop
lock
mov
jge
loopne
and
cmc
ror
jae
addr16
jp
jne
int3
inc
xor
push
sub
scas
cmp
call
(bad)
adc
push
add
mov
outs
and
pop
push
test
mov
pop
and
(bad)
fcmovu
cdq
lds
xor
cmp
jo
lahf
fiadd
mov
inc
jecxz
dec
xchg
sub
in
pop
push
mov
test
sub
jg
sub
mov
push
xor
cld
lea
xchg
aaa
sahf
or
add
add
cmp
push
xchg
push
mov
or
dec
mov
cs
xlat
sub
add
cwde
stos
in
lahf
jle
or
jg
add
clc
add
push
push
daa
pop
pop
mov
out
add
xor
and
call
mov
aam
push
call
movs
mov
dec
jb
das
pusha
fisubr
outs
(bad)
adc
mov
enter
or
ss
cmps
mov
and
xchg
or
mov
mov
pusha
(bad)
out
(bad)
cmps
dec
test
adc
data16
dec
push
or
inc
jnp
cmp
sbb
mov
adc
lods
out
popf
adc
xchg
popf
stc
push
add
out
into
test
fucomp
mov
ss
outs
retf
les
pop
mov
cmp
sub
xchg
cmps
cwde
mov
aad
push
inc
push
clc
dec
mov
ss
fmul
jnp
scas
and
shl
in
in
test
mov
outs
jns
jl
or
cmp
or
add
mov
jmp
sub
mov
jmp
mov
sub
lea
or
pop
(bad)
mov
test
push
(bad)
jo
icebp
adc
push
mov
adc
xchg
out
xor
fwait
outs
and
mov
in
add
inc
xor
push
inc
(bad)
call
enter
pop
fld
test
sar
in
les
test
pusha
adc
dec
scas
cdq
jnp
xchg
sub
(bad)
or
data16
sbb
into
lods
push
into
cmp
pop
sbb
dec
add
mov
lods
push
(bad)
in
cmp
mov
into
fcmovnb
sbb
jae
rcl
sbb
mov
add
repnz
xchg
cmp
mov
cmovg
imul
retf
adc
je
call
jbe
retf
push
shl
dec
sub
sub
popf
lods
pop
and
pop
sub
jle
daa
push
sub
out
and
dec
rol
xchg
(bad)
imul
xor
or
add
(bad)
lock
cmp
cmp
xor
or
ror
hlt
mov
hlt
iret
cli
adc
movs
fs
(bad)
sub
push
or
and
jae
outs
push
icebp
adc
movs
jno
shl
sub
dec
mov
imul
or
rol
push
mov
pop
xor
mov
push
pop
je
adc
mov
fs
sti
lds
paddusb
push
sub
cs
and
repnz
test
mov
inc
pop
mov
sub
outs
ja
movs
sbb
adc
mov
ins
dec
aad
(bad)
ret
mov
mov
daa
or
xchg
das
mov
mov
aad
and
or
fsubr
push
lods
outs
in
cwde
popa
inc
xor
push
mov
mov
xor
in
mov
int3
inc
mov
(bad)
xchg
fild
adc
scas
ror
push
scas
enter
sbb
fisubr
out
dec
ja
retf
mov
inc
xor
icebp
inc
idiv
jne
sar
adc
jne
cmc
nop
xor
push
fsub
aaa
pop
bound
cmp
add
sub
xor
lds
cdq
data16
(bad)
stc
fwait
inc
or
sub
add
pop
(bad)
cld
aam
enter
add
adc
call
in
jbe
ret
ins
mov
mov
je
pusha
out
xchg
push
(bad)
call
pop
jmp
repz
iret
in
add
adc
push
ret
shr
mov
fcmovne
and
loope
div
retf
mov
or
pushf
mov
xchg
and
cld
dec
and
jb
je
push
inc
divps
or
mov
cmp
jnp
inc
je
push
mov
jae
dec
push
ss
loop
(bad)
out
pop
dec
int
movs
mov
in
loop
pop
scas
mul
ret
cmp
jmp
loop
dec
sbb
jmp
imul
ins
out
scas
or
fsub
pop
mov
push
data16
pop
mov
psrlq
pop
xchg
dec
xchg
aam
and
repz
lods
jmp
icebp
cmp
cmp
mov
xchg
push
and
stos
mov
(bad)
pushf
push
or
imul
push
les
jbe
ret
push
mov
inc
sbb
aam
mov
add
adc
mov
sbb
and
sub
adc
daa
sti
in
(bad)
adc
cmp
adc
jmp
add
xchg
sti
(bad)
jno
pop
xlat
push
pop
sub
and
inc
inc
aam
cmps
cmp
jg
(bad)
mov
jo
call
in
or
pop
sar
dec
sub
bound
sahf
fchs
cmp
cmp
sub
iret
(bad)
out
inc
ficom
(bad)
pushf
not
cmp
add
xor
lds
push
cs
cwde
repnz
push
sti
movs
loopne
or
aad
jno
fwait
ins
push
pop
data16
pushf
in
inc
shl
cli
fcmovb
outs
push
leave
mov
dec
mov
xor
xor
or
xchg
out
outs
outs
and
cwde
mov
dec
lahf
iret
sub
icebp
or
mov
jmp
stos
or
push
test
push
jp
ins
or
nop
ret
or
mov
mov
fwait
repnz
inc
jo
pop
xchg
cmp
and
call
xchg
sub
fld
mov
sbb
jbe
sti
push
call
mov
or
cmp
mov
inc
mov
jmp
sti
stc
and
sbb
sbb
retf
sti
or
push
mov
fisttp
cmps
lds
sub
sub
xor
lods
pushf
dec
sub
repz
leave
inc
cs
xchg
mov
rol
push
fs
inc
adc
push
inc
mov
stc
(bad)
pop
cmp
sahf
inc
daa
inc
fild
pop
data16
add
inc
sahf
call
in
ins
inc
mov
int3
in
test
loopne
movs
push
push
sub
and
rcl
arpl
icebp
call
lods
(bad)
push
jo
ret
mov
mov
cld
es
fsub
mov
cdq
imul
mov
enter
(bad)
xchg
test
(bad)
int3
inc
inc
sbb
mov
cmp
cmp
mov
jne
leave
inc
outs
repnz
mov
arpl
sub
push
push
adc
pop
call
jnp
xor
icebp
fs
fnstcw
mov
xor
adc
push
sbb
inc
adc
ds
jl
mov
pop
pop
mov
mov
(bad)
not
addr16
pop
and
dec
or
xchg
sub
lds
icebp
mov
ror
enter
dec
or
enter
mov
movs
out
xlat
in
cmp
sar
sti
jmp
inc
lds
hlt
mov
or
(bad)
or
push
mov
and
add
shl
cmp
sbb
icebp
in
push
mov
in
jmp
test
sti
jl
ja
popf
int
fimul
retf
inc
pop
jae
cmp
in
arpl
cmp
clc
fsub
scas
repnz
cmp
xchg
and
mov
loop
push
sbb
out
inc
sub
repz
xor
jns
mov
jae
sub
and
push
std
inc
sub
push
repnz
movs
push
and
inc
pusha
icebp
popa
cmp
arpl
ret
mov
push
clc
enter
mov
xchg
or
cdq
icebp
and
jl
ins
and
popa
leave
xchg
jmp
mov
adc
xchg
xchg
jg
mov
mov
add
push
or
jl
cwde
jle
jge
jno
and
and
and
stos
mov
and
add
ret
jp
pop
in
push
pop
test
mov
out
cmp
leave
xor
cmp
or
pusha
pop
aaa
sar
int3
repz
ret
fcmovnu
lock
movs
dec
out
jl
lds
sbb
jno
cmp
scas
in
and
inc
test
scas
pop
push
inc
bound
cs
add
and
xchg
sub
sub
punpcklwd
inc
mov
mov
push
enter
lahf
mov
ret
sub
fild
sub
stc
aad
scas
scas
enter
sbb
push
fcmovne
cmp
mov
xor
add
int
sub
push
inc
aad
hlt
inc
pop
bound
dec
push
je
fcom
pop
int3
(bad)
xchg
movs
push
sub
inc
push
dec
cmp
in
pop
sbb
and
out
stc
mov
cmp
jg
sbb
sbb
sar
add
dec
cmp
rol
or
sub
xor
push
(bad)
(bad)
sub
jmp
aam
push
sbb
fwait
dec
retf
jns
push
out
mov
pop
and
call
push
mov
stos
mov
retf
mov
pusha
(bad)
retf
hlt
cmp
cld
mov
cmp
pop
jmp
or
sbb
push
clc
std
mov
rol
mov
mov
add
pop
test
fsubr
scas
mov
push
dec
loope
pop
xor
popf
int3
jl
or
sub
rcr
and
ret
int
mov
jl
xchg
jns
mov
ins
push
lds
out
mov
xchg
jno
sbb
ret
clc
add
push
xlat
mov
and
fiadd
xchg
in
fsub
adc
in
fstp
(bad)
cli
add
loop
pusha
mov
or
fisub
das
ret
sbb
stos
push
arpl
xor
xchg
pop
xchg
xor
mov
lods
scas
xchg
push
jmp
test
int
pop
jnp
push
out
mov
out
outs
aam
pusha
sub
loopne
gs
sub
pusha
ins
test
pop
aaa
and
cmps
repz
xor
mov
cmp
mov
(bad)
loop
test
jmp
ja
xchg
scas
fcom
popa
ss
and
mov
arpl
sub
out
or
dec
adc
sbb
mov
std
mov
(bad)
daa
push
or
pop
ins
data16
dec
test
outs
push
ins
outs
mov
cmp
push
test
pop
mov
popf
adc
stos
cmp
arpl
clc
add
(bad)
aas
fcmovne
xlat
mov
push
push
ins
pop
cmc
pop
add
loope
test
ret
jae
push
imul
out
sbb
mov
xchg
jae
pop
sub
loop
je
or
std
popa
push
jmp
sbb
stos
xchg
fadd
xchg
adc
and
jbe
xchg
xchg
pusha
in
add
mov
cdq
rol
call
add
sbb
call
sub
scas
sbb
pop
movs
sbb
inc
popa
lahf
jecxz
xchg
inc
xchg
ret
aas
jl
xchg
dec
and
adc
fist
sar
jge
das
push
lods
movs
stc
ss
mov
es
jo
and
mov
jo
(bad)
mov
ja
in
enter
push
daa
addr16
sbb
xor
mov
daa
fisttp
mov
retf
or
add
stos
ss
rcl
mov
push
sub
pop
mov
pop
pop
sub
jl
pop
aad
pop
outs
cld
xor
xchg
sbb
loope
mov
pop
dec
push
mov
and
mov
in
and
mov
ss
jae
pop
xchg
icebp
push
movs
cli
adc
test
scas
mov
push
pop
idiv
scas
stc
comiss
pop
(bad)
(bad)
adc
jb
fcmovnbe
loopne
addr16
mov
in
push
(bad)
xchg
repnz
dec
dec
arpl
or
js
fwait
stos
or
add
out
cmps
or
popa
pop
push
ins
or
lds
adc
mov
push
jbe
in
setns
je
mov
push
fdiv
sub
xchg
jno
test
loopne
pop
inc
adc
aaa
call
pusha
(bad)
pusha
cmp
test
jno
lahf
jp
mov
xchg
and
pusha
std
mov
stos
jne
cmps
jno
fild
add
adc
mov
mov
in
cmp
jle
xlat
push
cmp
loope
enter
bswap
xchg
mov
aaa
inc
mov
sbb
mov
int
add
cli
sub
mov
mov
retf
dec
lods
in
fcmovnbe
hlt
aas
xchg
sub
dec
mov
(bad)
or
cmps
(bad)
ss
into
pop
jmp
adc
outs
jecxz
leave
in
je
dec
mov
cmps
sub
fsub
adc
add
ins
into
and
out
and
mov
dec
adc
outs
jo
mov
xchg
dec
shr
aam
xchg
push
xchg
adc
mov
pop
add
cmps
and
dec
mov
mov
std
dec
dec
fld
arpl
mov
rcl
in
xchg
xor
hlt
in
and
retf
add
sahf
adc
les
std
ja
push
bound
bound
sub
imul
adc
jno
call
rol
add
loop
mov
cdq
in
das
sbb
and
sti
dec
mov
sti
ins
push
sub
jne
cs
and
and
daa
and
xchg
push
cmp
pop
std
push
push
push
arpl
pusha
jp
fstp
fadd
inc
pop
pop
jl
ds
fsub
sbb
xor
mov
xor
aad
cmp
mov
aad
(bad)
std
nop
(bad)
fcom
pop
cld
imul
lahf
out
je
in
xchg
adc
loope
xor
fs
push
dec
aas
test
xchg
test
pusha
xchg
call
leave
loope
call
sbb
mov
and
cmp
mov
xchg
cmp
sahf
call
in
sbb
ds
pop
or
xor
into
pop
push
imul
idiv
out
push
aam
xchg
mov
test
adc
cli
or
pop
stos
pop
mov
cmps
movs
or
movs
aam
shr
xchg
test
push
scas
push
out
and
ss
mov
dec
mov
repz
sub
sti
pop
lods
repz
push
ins
das
in
sbb
push
pop
(bad)
into
xchg
hlt
cdq
push
out
call
jno
cwde
jmp
mov
fidivr
fdiv
leave
push
stos
movs
and
and
jge
push
loopne
(bad)
fwait
enter
das
lock
outs
mov
icebp
enter
mov
jl
adc
xchg
jb
aam
mov
ret
cmp
rcl
sub
mov
fwait
push
outs
cmp
sbb
call
add
adc
push
stos
add
mov
sbb
dec
mov
xor
gs
sbb
jg
xor
sbb
lods
add
push
pop
aam
movs
xor
aad
mov
cmp
mov
push
mov
sbb
mov
shl
pop
retf
fidiv
imul
sar
pop
mov
pop
cmp
cli
mov
jb
inc
nop
push
dec
jp
sti
push
sub
mov
bnd
sub
push
jno
pushf
push
push
xchg
inc
daa
and
leave
pop
inc
inc
adc
add
mov
lods
or
push
stc
pushf
dec
push
pusha
and
cdq
je
lea
xchg
jecxz
and
xor
lahf
dec
cs
cdq
es
dec
jne
fwait
push
sub
cmc
xchg
inc
nop
mov
mov
or
jne
dec
cmp
(bad)
in
jge
sbb
(bad)
xchg
mov
and
cmp
fcom
movs
jns
mov
jle
mov
sbb
lods
loope
add
jae
xor
xor
xchg
mov
or
ins
rcr
in
mov
push
shr
cdq
xor
add
push
sbb
push
jle
lahf
out
jnp
rol
mov
test
bound
(bad)
repnz
adc
xchg
repz
adc
inc
sbb
fwait
ret
or
xchg
sub
loopne
imul
xchg
cmp
add
(bad)
jo
jo
test
mov
out
push
mov
pop
fidivr
(bad)
jg
je
aam
xchg
(bad)
jmp
or
push
jg
loop
mov
loopne
mov
loop
adc
sti
pop
or
dec
(bad)
fidiv
int
adc
jae
loope
mov
rcl
lock
adc
push
std
retf
rol
inc
sub
lock
sbb
cmp
pop
or
cmp
loop
mov
ficom
inc
or
(bad)
mov
adc
inc
daa
mov
sti
cmp
in
loope
nop
call
clc
lds
xchg
mov
mov
xor
mov
sar
out
push
sti
jne
int3
xor
lea
push
or
jbe
or
je
cmp
nop
jecxz
sub
sar
push
movs
test
dec
dec
aad
push
scas
or
lods
sbb
xchg
outs
xchg
cmp
in
xor
daa
fadd
push
fisttp
repz
pop
mov
cmc
pop
push
and
cmp
ja
imul
fwait
add
add
pop
js
mov
xor
(bad)
pop
stos
sbb
jmp
fcomp
add
pop
ja
data16
retf
loop
out
push
icebp
data16
mov
in
ja
or
repnz
mov
in
cmc
xchg
add
(bad)
xchg
outs
adc
lock
xchg
imul
pusha
or
outs
test
sub
in
(bad)
ins
into
sbb
adc
mov
jo
mov
inc
pop
cmp
je
mov
cmps
cmp
into
jp
pop
in
xlat
call
cwde
mov
xchg
cmp
test
pushf
adc
iret
push
(bad)
fmul
aad
paddw
mov
mov
mov
stos
out
aam
lds
loop
mov
lods
repz
loope
repz
sub
add
pop
(bad)
sbb
cmc
dec
pop
fdivr
add
jp
(bad)
dec
fadd
stos
pusha
(bad)
into
or
dec
and
ja
mov
and
(bad)
int
jle
lds
pop
lds
leave
mov
or
sbb
xchg
pop
out
fcomp
ins
je
lahf
stos
push
inc
das
mov
and
push
jne
mov
jno
sar
cmp
push
cmps
cs
dec
shl
aam
xor
and
icebp
pop
xchg
test
outs
mov
popf
xor
lahf
in
ja
adc
jg
test
xor
(bad)
pop
fidiv
sub
out
xor
stc
mov
mov
call
mov
sbb
sbb
sbb
aam
xchg
(bad)
ret
pop
in
pushf
aam
lods
icebp
push
pop
pop
sbb
dec
leave
dec
std
in
fwait
mov
mov
dec
retf
je
inc
loope
or
dec
sar
add
retf
and
pop
inc
sbb
adc
cmp
enter
retf
pop
fisttp
mov
jp
fsubr
jne
add
lock
adc
add
inc
(bad)
lds
mov
xor
xchg
sbb
dec
push
dec
add
ds
adc
lahf
xchg
sbb
mov
out
sub
popa
dec
mov
pop
push
push
xor
adc
test
ss
je
sub
nop
sbb
jmp
out
fcomp
sub
fcomi
adc
outs
lds
push
add
hlt
or
rol
stc
repnz
cwde
mov
in
mov
push
out
out
or
inc
in
push
xor
je
cld
out
or
ins
xchg
cdq
lea
add
int
inc
cmps
and
fucomip
test
jns
jns
pop
fcom
sbb
out
xor
mov
std
push
addr16
in
push
mov
jl
int3
sbb
sub
xchg
cmp
inc
push
cs
ss
test
pop
popa
or
lea
aad
or
adc
retf
fiadd
aaa
int3
in
xchg
cmp
or
cmp
ja
lods
cwde
(bad)
xor
jbe
movs
push
pop
push
stos
sub
sub
not
movs
stos
stos
sub
mov
and
out
xor
outs
inc
jb
lods
jmp
and
mov
hlt
in
inc
mov
lahf
fstp
sbb
mov
call
retf
or
dec
std
inc
and
push
mov
arpl
adc
adc
add
cmp
xchg
adc
repz
sub
pop
in
add
mov
jmp
push
add
out
mov
sub
pop
lods
cmps
pop
sbb
sti
ja
xor
std
mov
bound
xor
cs
test
popa
xchg
scas
cmp
sub
xchg
add
inc
jnp
sbb
sbb
or
pop
mov
ja
in
ror
jp
cmps
fisubr
xchg
jae
sub
and
out
cmp
cmp
lods
nop
xchg
or
mov
cmp
push
push
sbb
shl
(bad)
es
je
movs
(bad)
add
mov
(bad)
or
dec
jecxz
cmp
dec
add
mov
shl
jmp
inc
add
icebp
and
pop
dec
(bad)
xchg
pop
cmp
mov
push
stc
inc
cdq
imul
addr16
dec
xor
mov
popa
pop
push
dec
and
test
std
inc
loope
int
mov
xlat
mov
xchg
gs
(bad)
repnz
pushf
mov
ins
lock
push
mov
fadd
sub
sub
xchg
pop
pop
sahf
dec
push
jb
dec
dec
xor
xchg
dec
sbb
xlat
pand
fisttp
lahf
pop
out
dec
or
test
stos
stos
and
add
pop
icebp
in
push
outs
xchg
out
test
bnd
jne
xor
test
mov
stos
xor
pop
mov
mov
sbb
dec
psrad
sub
pop
pop
ins
mov
xchg
out
push
sahf
dec
or
jg
or
pushf
(bad)
add
adc
sbb
mov
rcl
iret
inc
nop
push
xor
mov
cmp
pop
jmp
out
xchg
dec
xchg
mov
ds
or
fist
test
inc
inc
pushf
xchg
in
(bad)
shr
adc
int
push
inc
mov
jnp
(bad)
jg
(bad)
stos
inc
jg
add
push
jno
(bad)
sbb
pop
mov
cmp
(bad)
jno
shl
mov
scas
adc
retf
ins
or
movs
or
mov
imul
xor
jnp
rcr
jbe
retf
scas
clc
test
adc
bound
das
mov
sub
adc
mov
call
test
pop
pop
push
cmp
div
in
inc
stos
or
add
outs
fwait
push
pop
and
pop
pop
cld
into
cdq
push
ficom
ret
jo
movs
jle
retf
popa
ds
add
pop
jmp
sahf
fstp
push
(bad)
stos
sti
inc
or
mov
push
adc
ins
xor
push
xlat
mov
mov
out
mov
fist
scas
sbb
jecxz
push
sahf
movs
sti
lds
mov
(bad)
clc
jae
fiadd
outs
fld
xchg
sar
(bad)
fcmovnbe
daa
movs
ins
cld
push
fwait
repnz
movups
xchg
mov
fstp
jle
movs
adc
out
mov
xchg
xchg
xchg
test
lods
xchg
ret
repz
popf
fild
fldenv
out
xor
fisttp
enter
mov
sar
lds
add
push
push
dec
or
sub
and
shl
data16
xor
shr
push
mov
cli
outs
adc
icebp
inc
mov
cmp
scas
call
data16
ret
pop
imul
(bad)
ja
mov
aad
loopne
out
fiadd
xor
add
in
or
jmp
js
aam
mov
push
fcmovnb
(bad)
vmwrite
arpl
mov
jg
sub
js
push
pusha
or
xchg
pusha
push
push
aad
sub
cwde
pop
fwait
or
mov
mov
aaa
xor
xchg
xlat
add
mov
fnstcw
pop
sbb
inc
mov
shr
imul
fldcw
in
sbb
fist
sar
ins
stc
push
(bad)
xchg
push
lea
add
cmps
jne
stc
xor
clc
fdivr
dec
mov
repnz
jle
dec
xor
imul
cmp
mov
jge
push
inc
mov
mov
sar
inc
enter
pop
enter
jnp
pop
dec
xlat
cmp
fwait
sub
std
mov
jno
repz
mov
push
or
(bad)
or
jge
mov
sbb
sbb
hlt
sub
aas
test
mov
inc
popf
sbb
pop
sub
or
add
sbb
das
nop
xor
pop
int3
add
test
add
xor
cmp
out
pop
es
sub
add
jge
push
xor
ja
nop
les
loop
gs
mov
push
and
pop
loope
add
aaa
cmp
mov
mov
mov
mov
mov
push
and
mul
std
les
leave
js
popa
cmp
shl
pop
iret
fdiv
push
xor
push
pop
add
hlt
jl
mov
xor
outs
xor
xchg
cld
int
loop
pop
cmc
jp
xchg
sub
mov
addr16
inc
sbb
sete
xlat
nop
in
stc
cli
or
mov
(bad)
in
mov
mov
not
iret
push
xor
jo
jmp
jno
mov
jp
sbb
ins
xchg
outs
pop
mov
sbb
add
fmul
xor
mov
retf
rol
push
push
cmp
and
retf
out
lods
and
fadd
aas
push
sub
popf
mov
pop
popf
adc
xchg
sbb
push
push
dec
ret
xchg
or
out
bound
fisttp
cmp
sbb
ror
and
mov
fmulp
outs
cwde
dec
jmp
mov
fidiv
xor
jecxz
sbb
daa
ja
std
xor
shl
shr
clc
mov
lock
out
(bad)
push
test
sub
or
push
xor
je
test
cld
pop
into
jg
xor
test
mov
out
outs
cmp
fstp
popf
fild
lahf
sbb
sub
inc
mov
jne
xbegin
dec
sub
push
ja
mov
pop
leave
pop
shr
dec
out
push
popf
push
xor
loope
dec
sbb
xchg
xchg
add
pop
xchg
mov
mov
xlat
ins
mov
add
aas
sbb
dec
jnp
repnz
or
out
lods
pusha
mov
loop
pop
nop
(bad)
retf
loopne
dec
push
dec
call
mov
test
or
(bad)
sub
out
ffree
int
dec
out
cmps
inc
inc
retf
cs
inc
mov
cmp
dec
stos
inc
mov
mov
add
and
and
test
cld
aam
in
mov
sub
mov
xor
adc
jg
rcl
xchg
or
sti
cmp
jmp
sbb
lods
ret
scas
out
mov
cld
or
popf
sahf
jg
int
in
cld
je
dec
sub
in
mov
sbb
adc
inc
push
lods
in
rcr
ret
inc
enter
or
pop
icebp
imul
mov
push
js
fwait
pop
enter
mov
mov
mov
inc
int
adc
cmp
call
fild
add
sub
xor
inc
or
lds
push
mov
push
xchg
mov
inc
js
test
mov
inc
xlat
gs
mov
cmp
sbb
scas
monitorx
jg
jno
sbb
xchg
add
dec
sbb
jg
push
push
push
in
(bad)
mov
jnp
pop
mov
cmp
cmps
xor
leave
imul
and
lea
inc
std
fnstenv
pop
nop
add
or
push
daa
dec
bound
xchg
mov
lds
(bad)
hlt
dec
add
jae
mov
mov
mov
jns
xcrypt-ctr
cmps
cdq
nop
loope
sbb
adc
test
jge
pop
adc
dec
mov
test
gs
ja
and
or
fild
sbb
or
add
mov
add
ja
pop
mov
loope
sbb
inc
mov
sub
inc
add
icebp
sbb
push
imul
test
mov
loop
ret
mov
adc
xor
out
xor
push
das
popf
xor
pop
inc
sbb
ja
xor
imul
clc
repnz
out
mov
(bad)
push
fst
dec
call
inc
fbld
mov
(bad)
push
enter
movs
cli
imul
ficomp
push
mov
mov
sbb
leave
int
xchg
mov
mov
xor
lahf
stos
adc
clc
add
inc
(bad)
pop
test
outs
mov
aas
vandnps
cmp
or
in
mov
add
stc
fisttp
xchg
aad
jbe
sub
adc
or
add
aad
push
and
xlat
sub
stos
push
pop
iret
aad
sub
push
push
cmc
sbb
dec
adc
hlt
cmc
cdq
fdiv
mov
xor
lahf
add
(bad)
mov
hlt
jnp
call
adc
ret
jno
sub
xchg
inc
pop
adc
cmp
sahf
ins
xchg
xlat
imul
push
int3
cmps
jg
stc
popf
or
mov
mov
sbb
pop
ins
cmps
push
and
xchg
fsubr
push
inc
adc
(bad)
cmp
jg
cmc
lds
mov
add
nop
retf
or
bound
mov
stos
loopne
push
cmp
ficomp
xchg
jg
dec
push
lds
push
pop
inc
ins
mov
inc
fdiv
mov
mov
lods
mov
xchg
add
mov
mov
xor
in
cmps
inc
sbb
push
push
pop
cld
add
cmp
cmp
std
jge
adc
dec
push
sbb
jl
ja
popf
ss
movs
push
push
clc
push
loope
cs
ins
imul
int3
out
ss
dec
mov
and
ret
mov
push
cwde
ss
leave
std
mov
(bad)
xchg
dec
shl
in
jle
aam
ror
inc
(bad)
cmps
cmp
sbb
add
dec
add
out
imul
push
in
les
js
sub
xchg
push
std
fs
pop
mov
and
fistp
xchg
push
inc
cld
lds
out
or
movs
(bad)
mov
and
cmp
or
or
fisub
ja
sbb
fiadd
or
das
add
repnz
ins
adc
mov
scas
jb
fs
jle
mov
pop
sti
out
mov
cmp
leave
(bad)
push
xor
nop
adc
int
pusha
push
imul
xchg
retf
inc
or
aam
push
sbb
or
loopne
int
ins
cmp
cs
aaa
mov
call
inc
sbb
movs
pushf
das
xlat
loopne
and
jmp
out
pushf
mov
jl
xchg
call
push
mov
inc
out
stos
mov
jb
pop
mov
jne
inc
pop
sbb
imul
(bad)
dec
(bad)
lock
xchg
ins
(bad)
enter
in
push
test
(bad)
xchg
mov
adc
stos
jp
mov
or
dec
mov
cmp
xchg
(bad)
push
rcl
cmps
loop
in
pop
add
stos
fild
fadd
hlt
inc
jo
and
inc
cld
sub
fwait
loopne
bound
xlat
aam
repz
fidiv
ror
in
scas
ss
hlt
jns
add
push
stos
sbb
sbb
and
add
inc
jno
mov
enter
in
adc
retf
jbe
push
out
mov
out
(bad)
mov
jnp
cs
lea
outs
mov
cli
pop
les
mov
add
mov
jge
in
xor
sub
addr16
and
into
add
xchg
mov
jae
sbb
jge
sub
popf
xor
es
loop
mov
fld
push
pop
or
fwait
cmps
scas
mov
jp
cdq
sub
and
xchg
and
jg
(bad)
in
cwde
cmp
in
and
push
dec
mov
lahf
in
add
test
mov
loopne
mov
mov
add
popa
stos
mov
daa
jnp
out
cmp
push
sahf
sub
xchg
and
xor
imul
fs
xor
add
dec
mov
sub
sbb
in
jmp
cmps
cld
sub
sar
inc
out
loope
mov
loope
pop
mov
cmc
imul
add
xlat
mov
sub
adc
pusha
cwde
xor
sbb
imul
repnz
sub
mov
loop
stos
ins
sahf
push
ins
repz
cdq
mov
leave
jl
bound
rcl
scas
or
js
push
imul
arpl
out
and
jns
xchg
mov
ja
cs
mov
adc
push
hlt
fdiv
jns
fldcw
mov
sub
cmp
mov
ss
mov
in
leave
and
out
cmc
sub
add
pop
mov
mov
bound
sub
jnp
xor
xor
add
or
mov
sar
cmp
daa
or
in
outs
fs
xchg
iret
sub
push
ret
mov
and
xchg
ret
sar
push
out
or
bound
sbb
push
sub
mov
sub
mov
xor
sbb
daa
into
inc
retf
cmp
push
lock
cmp
leave
mov
mov
add
cmp
inc
(bad)
in
xor
imul
scas
jp
mov
jg
or
adc
test
dec
jmp
jnp
aas
pop
ins
sub
in
arpl
cwde
in
inc
inc
jge
xor
cs
sub
xor
clc
out
mov
loope
pusha
pop
retf
in
dec
push
pop
scas
lock
aad
cmp
(bad)
xor
mov
in
out
fbstp
mov
loop
loope
cmp
in
and
cdq
sub
inc
test
inc
aad
dec
arpl
mov
and
leave
retf
pop
dec
mov
pop
sub
(bad)
mov
dec
and
cs
call
ja
aam
sbb
dec
dec
fcom
in
cmc
shl
jns
cmp
jno
or
adc
jne
push
mov
pop
jg
sub
(bad)
xor
int3
cmp
xor
cdq
ins
adc
xchg
out
mov
push
mov
sbb
sub
shl
mov
ja
sub
jp
jnp
pop
pop
push
stc
shr
aaa
shl
ins
repz
inc
daa
stos
loop
add
mov
(bad)
pop
ss
pop
dec
mov
(bad)
ja
jne
mov
xor
sbb
ja
(bad)
adc
mov
pop
or
popa
ds
fstp
mov
mov
jmp
imul
shl
xchg
fwait
pop
sti
out
ins
stc
jl
mov
xchg
mov
mov
jne
cmp
xchg
sahf
inc
add
inc
movnti
inc
sub
loop
pop
and
mov
rcl
stos
mov
xchg
test
mov
inc
push
leave
push
mov
out
xlat
jmp
retf
xchg
push
test
popa
sbb
jb
ins
pop
jb
add
dec
lods
pop
(bad)
jmp
fist
xor
imul
cdq
test
xor
stos
(bad)
js
stos
aam
mov
loop
jmp
retf
ins
mov
mov
out
out
hlt
cmc
(bad)
repz
std
xchg
fisttp
loopne
mov
mov
in
(bad)
popa
pop
xor
sbb
ds
stos
sbb
pop
jmp
push
(bad)
mov
inc
xchg
out
mov
or
bound
xor
add
cs
in
jbe
mov
sbb
mov
mov
ds
test
sar
cwde
push
jne
ror
mov
add
and
ins
fistp
inc
dec
das
popf
aaa
sbb
popa
call
cwde
cli
xor
cld
ss
inc
in
dec
lods
dec
outs
test
adc
cmc
jge
imul
mov
push
pusha
hlt
push
add
fucomi
loopne
fs
push
and
movs
les
mov
push
xchg
das
cdq
aaa
stos
es
pop
mov
add
push
jl
push
or
and
sub
add
ins
xor
call
std
fwait
stos
sub
xor
mul
fcmovb
imul
xchg
or
jbe
and
outs
loop
xor
js
adc
cmp
push
jns
hlt
ficomp
mov
pusha
neg
xor
(bad)
xlat
mov
mov
xor
jae
mov
xor
lods
fdecstp
lahf
sbb
and
add
outs
mov
xlat
push
sub
inc
push
dec
outs
test
mov
push
sub
or
stc
es
(bad)
test
hlt
call
add
xor
mov
push
fwait
jmp
jno
jo
je
rcl
hlt
or
push
xchg
lock
cmp
les
popf
pop
je
(bad)
out
push
into
mov
imul
rol
or
jnp
addr16
outs
outs
cwde
jle
xchg
fcmovu
mov
scas
js
and
test
rol
or
mov
push
mov
fwait
adc
mov
lods
lods
mov
fstp
in
sub
cmp
and
cmp
push
sar
adc
das
rol
mov
jmp
stc
mov
mov
jb
or
fbstp
out
in
jecxz
xor
xchg
aas
push
adc
mov
pop
sbb
jnp
cmps
sbb
xor
sub
or
jle
retf
lahf
sbb
push
enter
outs
movs
dec
and
add
idiv
les
add
loope
mov
cwde
mov
aad
jbe
push
mov
xlat
mov
mov
imul
(bad)
fst
out
xchg
sub
jle
fnstcw
mul
dec
mov
mov
mov
and
scas
cmps
push
in
fld
enter
sti
in
jp
mov
add
jge
scas
xor
jbe
inc
out
adc
mov
cmp
mov
(bad)
or
add
imul
in
and
and
cwde
sbb
jnp
push
dec
xchg
add
ins
sub
sti
sbb
fs
ret
cmp
or
inc
push
mov
sbb
sti
lods
gs
mov
ins
rcr
dec
add
xor
retf
out
lea
popf
mov
pusha
fs
retf
(bad)
call
xchg
or
(bad)
dec
pop
lahf
jbe
fidivr
fisubr
push
scas
jp
(bad)
and
inc
mov
loop
sub
lods
pop
out
sub
cmps
cld
mov
pop
ins
mov
inc
in
inc
mov
fucomp
sub
cld
fisttp
mov
add
pop
out
xchg
add
jne
and
mov
and
cmp
mov
xor
aaa
cmp
sbb
cwde
sbb
cli
aad
mov
in
pop
call
jo
bsf
xchg
add
imul
push
jg
push
adc
or
dec
je
rcr
cmp
(bad)
icebp
sti
cdq
jae
rcl
scas
push
div
test
popf
adc
test
int3
test
(bad)
cwde
dec
lahf
stos
cmp
and
and
xchg
pop
adc
neg
or
shl
add
dec
aad
pop
ins
shr
retf
xor
stc
xor
sar
mov
mov
out
(bad)
mov
ret
js
or
xchg
lahf
xchg
inc
out
pop
movs
jmp
jae
ret
outs
mov
daa
inc
aad
and
mov
mov
aaa
xchg
cmps
les
into
or
lea
pop
dec
push
push
adc
cmp
dec
pop
jmp
cmp
clc
loope
mov
jnp
(bad)
jae
and
(bad)
mov
loopne
push
mov
dec
and
or
cmp
dec
or
nop
sub
jae
gs
ja
stos
mov
inc
mov
pop
test
and
(bad)
push
mov
outs
lds
jp
xor
dec
ins
pop
hlt
jl
fldz
cli
cmp
mov
add
retf
cmp
ja
pop
(bad)
test
ss
imul
jmp
sub
mov
ins
lahf
scas
imul
mov
(bad)
jmp
loopne
ss
repz
sub
cdq
int3
adc
(bad)
fst
faddp
cdq
sub
pop
jecxz
mov
fst
aam
int3
cmp
rol
mov
iret
bound
jecxz
inc
in
jge
mov
int
mov
mov
add
push
dec
(bad)
push
mov
push
dec
xchg
movs
rcr
popa
es
stos
adc
ret
adc
push
inc
dec
sbb
stc
sbb
in
test
pop
out
push
xchg
repz
jae
ds
fcmovne
push
jl
mov
lods
(bad)
and
int3
xor
xchg
mov
dec
xchg
push
and
dec
sub
popa
loopne
imul
dec
cmc
gs
jecxz
cld
cmp
test
ins
lods
hlt
(bad)
cmp
retf
mov
sbb
hlt
jle
mov
adc
stos
jmp
les
add
dec
addr16
push
add
lea
dec
lods
push
dec
outs
lock
adc
mov
fwait
pushf
lods
xchg
icebp
and
mov
cwde
pop
out
xor
lods
lock
sbb
sub
dec
push
popa
imul
shl
jmp
loop
cld
fwait
cmps
aas
jge
sub
add
cld
xchg
cmc
and
adc
pushw
cwde
aam
(bad)
lahf
push
mov
(bad)
in
stos
adc
pop
lods
repnz
in
jae
sti
dec
fsub
pop
or
outs
push
cli
iret
das
repz
jbe
test
inc
cmps
add
sbb
xchg
push
in
int3
sahf
pop
adc
cmp
into
adc
jo
shl
loop
sbb
and
mov
push
pinsrw
jmp
push
mov
sub
shl
xor
je
push
hlt
jl
or
mov
mov
fcmovu
mov
cmp
movs
mov
push
jae
shl
retf
ret
out
cmp
and
out
out
movs
(bad)
fnstcw
and
cwde
mov
push
inc
pop
or
or
fnstcw
jnp
and
dec
push
ss
jmp
aam
mov
xchg
aas
inc
cmp
test
mov
test
fnstenv
xchg
xchg
stos
sbb
iret
xor
inc
lahf
push
call
popa
outs
inc
add
arpl
imul
mov
and
adc
int3
mov
jge
les
xor
and
push
rcr
stos
xchg
xchg
fdiv
push
ss
cmp
mov
mov
xchg
stc
test
loope
add
test
or
pop
jp
jl
imul
pusha
test
push
aam
add
push
mov
cli
mov
rcl
call
mov
push
mov
and
mov
cmp
adc
sbb
imul
repz
xor
xlat
mov
mov
ins
(bad)
popa
sbb
clc
xor
mov
and
mov
cs
ja
or
xchg
std
ficomp
mov
add
shl
je
es
xchg
xor
xchg
in
mov
mov
inc
add
mov
in
mov
test
cli
lds
dec
icebp
dec
push
jecxz
shl
retf
cld
in
adc
pop
and
test
adc
cdq
sbb
pop
sbb
sahf
fwait
sbb
ins
mov
outs
jp
xor
pusha
mov
xchg
mov
shl
fs
outs
sub
cmps
js
fs
call
loope
lods
stos
retf
xchg
(bad)
mov
(bad)
xchg
inc
xchg
sub
and
and
mov
xchg
mov
xchg
stos
mov
or
add
lods
clc
cmps
xor
mov
xor
cmp
je
sbb
mov
ss
mov
hlt
mov
mov
call
test
sub
jg
(bad)
rol
push
nop
loope
cmps
push
daa
push
daa
sub
jne
mov
mov
jecxz
inc
pushf
pop
pushf
xchg
or
sub
movs
push
enter
cmp
outs
fcmovnb
fisttp
jmp
icebp
cdq
and
(bad)
cmp
mov
mov
push
lahf
push
jnp
pop
inc
cwde
cmp
lods
or
pop
lock
xchg
xchg
imul
or
aaa
sub
loopne
xchg
adc
retf
aam
test
xor
cmp
leave
scas
jmp
add
ds
lea
ins
fwait
movs
mov
fsub
imul
repnz
arpl
outs
ins
les
dec
cmp
in
lds
sbb
adc
sbb
mov
mov
js
sbb
jecxz
pop
lea
jp
xor
test
inc
mov
jecxz
test
sar
adc
retf
out
push
sbb
add
pushf
xor
lds
lahf
adc
jp
pop
movs
jmp
or
leave
test
jp
mov
(bad)
stos
jp
cmp
xchg
enter
aad
ja
loopne
nop
inc
outs
out
mov
and
or
outs
scas
retf
aam
cmp
mov
arpl
rcl
lods
jne
sub
dec
shl
and
retf
sub
inc
sub
xchg
ficomp
mov
push
mov
fnstcw
ret
adc
cmp
push
add
in
aad
or
pop
dec
sbb
into
je
hlt
cmps
outs
cmp
or
(bad)
pop
dec
adc
addr16
xor
lods
pop
retf
call
push
stos
sub
ret
dec
inc
js
in
into
push
add
sub
out
outs
adc
mov
(bad)
imul
xchg
int
inc
into
cmp
sbb
das
add
movs
into
call
ret
mov
dec
loop
cmps
sbb
adc
sbb
dec
add
lods
jb
dec
stos
fs
mov
cdq
adc
retf
dec
jns
mov
mov
pop
jmp
and
fmul
cmp
mov
mov
inc
call
cmps
in
xor
adc
dec
xchg
mov
mov
mov
sar
mov
inc
sub
test
out
or
fidivr
jp
sti
jb
cmp
and
and
jns
xor
repz
repz
rol
data16
jg
lahf
loop
fadd
scas
not
or
pusha
adc
or
jp
jns
xor
mul
mov
fild
adc
lahf
fisttp
adc
stc
mov
rcr
rol
sub
ins
xor
jae
(bad)
ins
xlat
cmp
mov
mov
cmp
xchg
fild
rcr
sbb
ror
push
jmp
(bad)
out
repz
cmps
pushf
push
push
cld
js
movs
mov
loopne
xor
mov
mov
inc
fistp
jle
fist
je
add
fcom
addr16
dec
push
add
jmp
inc
aas
loope
shl
lock
jmp
xchg
repnz
pop
call
mov
scas
inc
retf
ins
leave
aaa
cmp
mov
or
cmp
dec
xor
cmp
mov
(bad)
pop
lods
movs
fucom
ds
mov
pop
mov
xchg
add
sbb
xor
(bad)
pop
call
push
pop
push
jle
add
pop
aad
mov
retf
pop
xor
inc
test
cmc
data16
and
and
clc
loopne
scas
int
push
jge
lds
fwait
lahf
adc
or
jle
arpl
mov
popf
loope
add
in
dec
adc
mov
cli
and
add
(bad)
dec
mov
xor
fdiv
inc
pop
mov
bound
and
enter
cmps
cmp
cmp
or
aaa
xor
out
es
jo
test
cmp
cmps
popf
push
jno
ror
pop
shl
int3
pop
mov
(bad)
stc
fs
adc
or
mov
xchg
adc
(bad)
sub
mov
stc
xchg
out
mov
push
rcl
mov
(bad)
lahf
out
(bad)
push
outs
xchg
and
cmp
jle
in
imul
test
sti
fild
mov
gs
and
push
ins
fwait
fwait
jge
inc
and
inc
jmp
and
aad
adc
pop
outs
jmp
fcom
out
inc
xchg
add
out
pop
enter
jecxz
dec
inc
add
mov
pop
cmps
fld
or
push
adc
inc
scas
dec
and
icebp
sub
fidiv
nop
jecxz
dec
hlt
push
sar
aad
ins
repz
dec
push
enter
mov
adc
jb
inc
ror
pavgw
retf
jl
adc
pop
outs
int3
movs
aam
push
add
xor
jne
xor
aad
loop
std
jae
pop
fnsave
pop
mov
mov
mov
rol
mov
repnz
fcomi
ret
rcl
int
addr16
inc
mov
sbb
lds
arpl
out
sbb
ror
pop
test
jnp
lds
or
sbb
test
add
out
je
push
dec
aad
cdq
jbe
add
cwde
cmp
out
or
jg
cmp
pop
pusha
hlt
mov
test
aam
sub
mov
pushf
mov
loopne
xor
cmps
mov
ret
pop
ds
nop
jbe
sub
loope
mov
out
and
cli
push
loopne
fdiv
inc
jmp
dec
or
rcr
ret
mov
fdiv
cmp
ficom
sub
mov
out
add
or
xchg
pop
dec
mov
clc
push
clc
pop
aaa
outs
arpl
push
xlat
clc
ror
add
and
ins
js
sub
mov
push
arpl
add
div
lea
dec
call
jmp
inc
cmps
and
cmp
mov
out
jl
jmp
dec
pop
cmps
ret
les
jle
dec
repnz
test
fwait
(bad)
sar
inc
out
mov
lods
dec
or
shl
pop
jnp
adc
pusha
push
or
lods
mov
push
enter
and
(bad)
je
mov
arpl
ss
mov
mov
in
(bad)
stc
(bad)
mov
enter
es
jno
test
mov
xchg
mov
cwde
cmps
push
test
neg
cmp
mul
push
mov
push
ds
mov
inc
adc
addr16
out
add
push
(bad)
mov
int3
xchg
in
(bad)
int
jmp
dec
(bad)
mov
mov
(bad)
idiv
xchg
clc
push
push
retf
or
fstp
aas
dec
(bad)
imul
call
inc
rcr
xchg
mov
ja
call
mov
bound
mov
add
mov
hlt
iret
mov
and
xlat
das
push
adc
mov
stc
xchg
lods
adc
imul
pop
shl
mov
dec
test
pop
popf
bnd
(bad)
xchg
in
ds
ja
loopne
jecxz
push
mov
adc
bound
dec
(bad)
sub
push
xor
clc
cmp
mov
sub
test
addr16
mov
daa
xchg
scas
and
pushf
out
push
push
scas
sub
add
cmp
jecxz
sub
out
add
es
push
dec
inc
mov
and
cdq
cli
lock
mov
(bad)
xchg
(bad)
popa
fst
mov
pop
add
retf
mov
out
push
bound
jae
inc
repnz
dec
push
xlat
test
cmp
addr16
outs
out
ret
xchg
(bad)
sar
and
or
mov
mov
inc
inc
adc
arpl
or
sbb
jnp
add
mov
xchg
out
popf
test
cwde
(bad)
xchg
lock
add
loope
call
pop
sub
jge
(bad)
dec
adc
inc
mov
sar
xor
rol
paddusb
xor
lock
mov
sti
mov
and
inc
xor
xchg
inc
xor
add
xor
inc
sahf
add
test
dec
cmp
mov
push
aas
sub
(bad)
icebp
fist
dec
and
jns
das
adc
dec
cdq
retf
pusha
mov
out
leave
stos
xchg
mov
aam
mov
sbb
addr16
int3
movs
dec
fcmovne
aam
outs
repnz
sbb
jmp
add
adc
mov
inc
pop
stos
or
push
loope
aas
jbe
in
sub
outs
or
xchg
xor
mov
aam
dec
scas
jns
scas
jnp
aas
adc
jbe
scas
out
push
out
adc
fcomp
stos
push
inc
mov
dec
inc
movs
adc
mov
clc
mov
jp
mov
and
pop
out
push
cmp
lahf
jmp
stos
jne
ret
dec
pop
leave
ret
dec
jnp
sub
push
cdq
jo
(bad)
lods
xlat
mov
mov
cmp
jns
sbb
rcl
cmc
addr16
pop
add
jns
dec
pop
add
lods
cwde
xor
inc
bnd
pop
imul
mov
mov
jbe
call
adc
fistp
xchg
data16
xchg
and
ds
sub
lock
mov
data16
cwde
(bad)
rcl
sbb
imul
in
mov
mov
sbb
sbb
dec
dec
daa
mov
lods
or
inc
int3
clc
fnstsw
jo
mov
(bad)
nop
cmps
fld
inc
mov
(bad)
ss
sub
movs
push
mov
movs
int3
bound
mov
popf
aam
push
aad
fisub
in
pop
dec
es
fiadd
lahf
jbe
mov
sbb
dec
popa
bound
pop
xchg
sbb
jmp
call
pop
or
sti
mov
into
mov
aad
ret
sar
add
mov
lock
or
and
add
ret
cmc
ret
repnz
adc
mov
push
add
popa
adc
popf
or
popa
and
es
add
aam
jae
xchg
and
mov
cwde
dec
sub
jp
xchg
jo
xor
int
add
add
xor
or
push
or
add
push
cdq
jae
jle
loopne
shl
sbb
xor
pop
(bad)
push
inc
mov
mov
imul
pop
(bad)
retf
aaa
fwait
mov
or
call
xor
sbb
jae
xchg
nop
mov
popf
cmp
adc
stos
mov
dec
(bad)
sar
mov
pop
jmp
xchg
mov
into
mov
add
dec
dec
dec
xchg
imul
lea
mov
mov
cli
mov
sub
imul
(bad)
fisub
fcom
leave
mov
push
xor
idiv
adc
cmp
js
call
xlat
push
mov
les
retf
loopne
xchg
out
pusha
add
mov
paddusw
pop
movs
xchg
push
in
mov
xchg
sub
cmp
js
sahf
mov
xlat
inc
ds
mov
hlt
xchg
mov
or
call
fild
dec
mov
jae
dec
or
fsub
ins
sub
sti
ins
shr
lock
mov
das
leave
fmulp
pusha
add
push
mov
or
outs
mov
inc
cld
mov
loopne
jmp
pop
rol
mov
xchg
mov
stc
mov
jle
push
daa
addr16
sahf
nop
push
xchg
xor
dec
aas
cmp
mov
fwait
mov
in
shl
call
mov
dec
in
iret
push
clc
jp
outs
retf
adc
inc
mov
ins
add
test
mov
add
fcomp
ins
(bad)
pop
mov
pushf
fist
and
out
dec
push
pushf
ret
test
in
mov
mov
jl
xchg
jne
sub
outs
mov
int
jo
jo
push
fidivr
out
movs
ret
les
(bad)
pop
xchg
cmp
aad
cmp
push
shl
mov
retf
(bad)
lock
test
mov
fst
mov
dec
imul
xchg
and
call
mov
inc
sbb
(bad)
and
in
outs
xlat
shl
jp
mov
push
retw
cs
and
mov
arpl
sub
cmp
mov
cmps
mov
cs
clc
mov
adc
imul
mov
test
mov
xchg
inc
mov
cli
mov
push
ins
cmp
iret
rcr
out
inc
cmps
pop
xchg
(bad)
fimul
push
sbb
sti
pop
sub
push
test
out
(bad)
pop
push
outs
xchg
mov
hlt
in
mov
fistp
and
dec
push
push
sahf
dec
cmc
mov
mov
movs
push
sbb
jae
and
inc
cmc
pop
push
push
push
sbb
test
popa
sahf
es
inc
retf
(bad)
in
fnstcw
cs
or
pop
jb
loopne
jecxz
jmp
mov
xor
stos
fstp
outs
stos
arpl
movs
sbb
or
mov
fucomip
pop
ss
(bad)
lods
call
add
xchg
push
sbb
mov
mov
fnstenv
call
pusha
fmul
dec
fsubr
js
movs
data16
sbb
xor
cmps
mov
lods
push
or
jge
and
push
add
xlat
iret
sbb
out
or
nop
loope
ret
jmp
push
sbb
fistp
adc
lea
dec
in
call
xchg
sub
sbb
aas
mov
aas
jl
arpl
popa
push
test
mov
inc
jl
pop
vpsubusw
sbb
push
retf
aam
mov
popa
pop
jp
dec
stc
inc
jo
or
jmp
test
cmp
(bad)
(bad)
icebp
push
movs
jecxz
mov
jg
dec
repnz
in
sub
fsubrp
or
jo
(bad)
std
movs
fs
sbb
ja
test
pop
xchg
out
mov
xor
out
push
sub
pop
mov
mov
cmp
inc
(bad)
pop
sbb
mov
inc
(bad)
and
imul
popf
idiv
mov
call
in
or
mov
stos
xchg
in
fs
cmp
mov
lds
mov
test
das
pop
jge
int3
shr
addr16
pop
xor
cdq
pop
iret
lea
test
xchg
cli
ja
mov
jbe
xchg
test
jno
mov
mov
xchg
mov
dec
leave
pop
fld
nop
sbb
ret
mov
xor
enter
mov
ret
(bad)
pop
ret
mov
fimul
xchg
lahf
mov
push
mov
push
cli
aam
or
leave
push
mov
mov
xchg
or
mov
inc
sahf
adc
dec
or
or
fisub
add
jge
mov
arpl
imul
and
push
inc
pop
push
pop
in
or
pop
sti
sti
(bad)
mov
push
adc
xchg
and
and
out
dec
inc
imul
pop
(bad)
pop
or
mov
xchg
jb
shr
push
adc
dec
add
pop
pop
cmp
movs
arpl
mov
xchg
inc
(bad)
in
hlt
adc
fist
cmp
xchg
imul
or
scas
fucomp
je
cmc
scas
dec
gs
push
cmp
mov
inc
ins
pusha
or
xchg
pop
stos
and
loop
leave
mov
fldcw
dec
dec
sahf
sub
dec
(bad)
cmc
dec
xlat
mov
cmp
mov
mov
ret
xor
icebp
(bad)
xchg
sub
cmp
inc
leave
mov
aaa
rcr
dec
inc
and
out
ficom
push
add
loopne
mov
test
in
inc
and
pop
fcmovb
sub
lods
int3
test
mov
push
icebp
bound
push
mov
push
lods
fmul
adc
push
fiadd
xchg
pop
test
call
fwait
imul
mov
xlat
cwde
scas
jne
xchg
jns
add
int3
inc
jmp
add
in
leave
or
test
mov
fs
inc
ins
adc
push
test
js
add
lods
movs
jnp
frstor
mov
mov
jo
push
sub
cmp
cmp
mov
lds
cmps
fwait
push
sbb
sbb
and
fwait
inc
xor
(bad)
aad
inc
aam
push
sbb
(bad)
imul
push
test
jnp
inc
inc
push
adc
cmp
mov
mov
pusha
cli
into
adc
dec
imul
dec
xchg
push
shr
lahf
and
push
into
dec
xor
xchg
callw
jae
sub
inc
and
xlat
jl
jne
or
cmp
inc
or
fnstenv
in
adc
rcl
into
mov
bound
inc
retf
in
inc
sbb
ror
adc
sti
dec
pushf
(bad)
aas
fld
popf
pop
pop
inc
add
fs
shr
js
out
cmp
or
mov
pop
(bad)
aas
fnstsw
dec
sub
mov
and
fwait
pop
and
adc
scas
imul
mov
or
jmp
mov
pop
jno
sar
out
call
(bad)
aad
mov
fild
addr16
outs
push
call
mov
mov
retf
dec
mov
jl
pop
jmp
dec
fsubp
mov
xlat
pop
jb
popa
(bad)
jge
cs
xchg
push
lea
inc
jne
nop
(bad)
jno
in
popf
idiv
ins
dec
(bad)
fnstcw
hlt
mov
mov
push
arpl
cmp
loop
push
shl
inc
fidiv
rcr
mov
les
pop
ins
cld
int
sub
push
mov
(bad)
out
(bad)
fnstcw
outs
xor
outs
jne
ror
mov
in
outs
in
in
add
jb
jle
cld
sub
jne
(bad)
in
std
pop
stos
or
sbb
pushf
push
fisttp
inc
sub
clc
(bad)
and
mov
push
mov
jbe
lahf
je
hlt
xlat
test
mul
push
mov
inc
sub
fucomi
mov
pop
or
out
xchg
fwait
adc
add
idiv
jmp
dec
mov
retf
mov
popa
and
jmp
mov
loope
movs
fldcw
mov
fsubr
test
push
pop
add
mov
cmc
jae
cld
jg
(bad)
out
mov
les
ficom
add
jecxz
clc
sbb
jle
cmps
push
mov
cmps
jb
imul
movs
js
push
fs
ffree
repnz
mov
xor
sub
lea
pop
mov
add
fs
pushf
push
ds
imul
movs
or
xor
pop
mov
loop
mov
add
xor
inc
jbe
nop
loop
ss
jle
lods
aaa
push
(bad)
xor
mov
sbb
and
cli
lock
xchg
push
std
push
add
pop
mov
pop
lods
loope
push
mov
add
cmp
retf
sub
mov
jns
mov
pop
div
andps
add
and
jg
test
dec
or
jmp
sub
add
mov
fs
cmp
out
out
and
sti
loop
leave
aas
mul
and
inc
into
adc
int3
movs
leave
add
push
int3
push
retf
cmps
and
ret
cmp
pop
popa
leave
add
or
jge
cmps
sub
mov
inc
xchg
mov
push
aaa
(bad)
dec
fnstenv
cmp
in
popf
sar
jo
jo
lahf
call
pop
sar
gs
pop
neg
dec
lahf
paddusw
ss
xchg
iret
nop
push
dec
push
cli
pop
add
cmp
pop
cmps
jns
lods
dec
scas
mov
add
sbb
cwde
sub
dec
sub
mov
xchg
shr
xchg
sahf
aaa
sbb
ins
sub
movs
cmps
shr
push
jnp
in
in
mov
imul
dec
es
call
and
mov
dec
inc
(bad)
in
dec
fnstsw
lds
shl
cli
inc
loope
add
push
repnz
mov
inc
cmps
rcr
shl
cmc
je
pop
or
mov
and
je
inc
fwait
jbe
push
and
outs
test
movs
cdq
mov
inc
pushw
outs
mov
and
push
out
adc
add
or
ins
hlt
dec
cmps
stos
push
pop
popf
and
dec
jecxz
cmp
inc
mov
and
loopne
addr16
fwait
aad
and
inc
cmps
cli
loopne
lock
or
xlat
xchg
pop
add
adc
bound
pop
loop
mov
sar
ret
xchg
push
cmp
mov
je
pusha
out
es
xor
iret
lds
add
scas
out
fild
sbb
inc
jne
fisttp
cld
jmp
pop
lahf
loop
bound
retf
add
fldcw
ja
cmp
add
push
mov
enter
lods
cmp
imul
lods
pandn
lods
out
jo
mov
mov
sbb
sub
inc
mov
mov
mov
jp
mov
sbb
adc
(bad)
hlt
cwde
ret
jno
sub
call
sub
call
ja
pop
fmul
mov
jnp
add
retf
jne
cmp
std
mov
lock
pop
test
fnstsw
cmp
daa
lahf
pop
jle
jno
and
pop
jns
iret
inc
mov
imul
xchg
out
outs
mov
out
cmp
add
jecxz
mov
shld
stos
mov
das
cmps
into
data16
xor
out
in
and
mov
in
inc
jb
sbb
call
js
fidiv
and
jp
mov
mov
sbb
xor
js
gs
jnp
xchg
fstp
jl
leave
mov
push
push
jp
xchg
xchg
add
jmp
std
sti
fdiv
xlat
jo
mov
call
mov
mov
pop
arpl
sbb
adc
imul
ins
mov
xchg
jl
rcl
or
pop
mov
and
daa
ret
mov
mov
push
sar
xor
cmps
push
inc
pushf
fisubr
xor
push
test
xor
call
push
ins
dec
nop
loope
pop
clc
xlat
xchg
icebp
sbb
out
aad
ficomp
push
jge
or
mov
pop
mov
and
push
in
aaa
mov
dec
outs
(bad)
mov
shl
mov
pop
out
mov
daa
hlt
push
push
pop
hlt
push
ja
mov
repz
hlt
call
(bad)
out
push
mov
ret
jns
inc
inc
pop
retf
mov
mov
or
std
or
movs
loope
addr16
in
repnz
pop
or
mov
sbb
inc
scas
sbb
sub
cmps
xor
aam
or
add
jb
xchg
mul
aas
mov
or
mov
cmp
(bad)
fnstenv
movs
or
inc
or
sbb
cmp
fdivr
push
gs
jne
push
rol
mov
repz
xchg
sub
jle
jl
outs
push
iret
bound
fwait
test
mov
pop
mov
mov
adc
int
mov
mov
arpl
iret
xor
and
sub
fsub
jg
mov
push
jmp
adc
jae
mov
ja
jbe
push
test
fld
mov
sub
sub
mov
dec
into
mov
push
push
cmps
test
sbb
(bad)
push
scas
push
std
adc
mov
mov
jb
xchg
or
shr
inc
xchg
pushfw
mov
sbb
sub
inc
mov
test
pop
shl
mov
push
push
pop
dec
cmp
cmp
fadd
cmp
jnp
cmp
push
fsub
xchg
lea
gs
mov
call
test
inc
mov
xor
inc
out
fmul
inc
jns
das
mov
cdq
call
xor
scas
sub
xchg
mov
rcr
movs
push
xchg
mov
cmp
add
out
push
mov
or
sub
fistp
movs
retf
adc
inc
dec
sbb
sub
push
mov
test
push
and
cmp
jl
inc
adc
fs
push
sbb
adc
aas
sahf
or
das
int3
addr16
push
adc
test
int3
mov
adc
gs
and
add
jno
push
outs
sub
cwde
pop
pop
adc
jle
int
imul
dec
adc
(bad)
movs
retf
sub
in
mov
cmp
mov
shl
xor
popa
shl
(bad)
(bad)
aam
adc
adc
pop
pop
pop
call
push
push
push
lock
leave
test
xor
sbb
out
cmp
iret
adc
inc
daa
call
out
push
das
dec
push
lods
cs
mov
and
rcl
dec
sbb
push
and
fs
(bad)
out
retf
and
mov
pop
xlat
inc
sub
dec
in
lds
test
jp
push
sbb
gs
sbb
adc
scas
fdiv
xchg
push
shl
ss
pop
mov
cs
sub
sub
retf
cmc
jl
mov
retf
fdivr
(bad)
xchg
lahf
outs
pop
(bad)
xchg
cmp
sbb
out
adc
xchg
iret
jle
daa
jo
jl
xor
jmp
add
ja
mov
pop
xchg
add
idiv
jne
(bad)
fst
push
sub
mov
int
jecxz
test
cmp
cli
sub
psllw
leave
cmp
lds
xor
(bad)
cmp
jg
mov
retf
inc
sti
sbb
pop
sbb
jecxz
stc
into
fnstcw
rcl
sbb
dec
inc
dec
xchg
sar
call
icebp
arpl
jmp
push
inc
imul
mov
ins
scas
ror
in
(bad)
cmp
aad
test
nop
movs
push
xchg
inc
dec
fdivr
fcom
lods
in
xor
adc
mov
cmp
and
adc
jns
push
retf
fld
push
mov
push
lods
xchg
sbb
and
ficom
fld
ds
jle
sbb
fsub
jge
data16
setno
pop
call
scas
das
adc
push
ins
inc
pusha
sbb
mov
jp
jae
fld
lahf
(bad)
stos
jg
div
(bad)
dec
add
scas
mov
loope
xchg
nop
ja
jne
push
fsubr
xchg
sub
dec
xchg
cmp
cmp
ficomp
das
or
int3
ret
adc
mov
mov
je
cmp
jle
out
xor
push
mov
xchg
stos
repz
idiv
sbb
std
or
add
mov
push
icebp
in
xchg
push
cmps
xchg
mov
jle
push
sbb
popa
bswap
cmps
dec
pop
dec
pop
or
fsubr
out
or
fxch
push
aaa
fs
movs
pop
into
mov
mov
lods
ins
add
loope
xor
ret
inc
stos
setae
rol
and
mov
lds
cs
xchg
cmp
pop
rol
out
ds
rcl
add
xlat
call
xor
jnp
mov
and
and
loopne
movs
data16
jns
jae
std
adc
push
add
neg
xor
pop
mov
jbe
imul
stc
repnz
pushf
arpl
mov
pusha
and
jecxz
fucompp
cmp
cmp
xchg
xor
in
xor
out
jno
sub
mov
xor
retf
push
hlt
cmp
mov
xor
mov
out
jp
jl
push
mov
jmp
push
outs
mov
aas
stos
jae
sahf
addr16
mov
sahf
rol
pop
loopne
and
push
mov
add
adc
mov
mov
(bad)
dec
and
xchg
xchg
mov
fstp
jg
xor
cdq
add
cmps
int
sbb
mov
push
movs
in
jp
out
scas
dec
jge
jle
dec
or
(bad)
cld
fldcw
and
(bad)
pop
pop
iret
sub
nop
into
lahf
mov
cli
daa
stc
lahf
or
test
inc
pop
add
mov
sub
test
push
imul
fcomp
inc
out
mov
push
ficom
inc
pusha
mov
les
jne
dec
mov
imul
bound
add
pushf
jns
sti
add
inc
mov
jmp
or
ds
clc
aam
fwait
and
add
lods
popa
mov
push
pop
data16
xor
scas
jo
cli
adc
sub
jns
push
into
mov
push
xlat
jns
outs
jns
cmp
iret
fwait
cs
adc
fwait
or
retf
dec
inc
or
shl
pusha
sar
dec
jp
out
jb
add
test
out
mov
call
inc
pop
cmp
xchg
jbe
push
test
ret
mov
inc
sar
sti
fcomp
pushf
je
pop
dec
jle
in
lods
sbb
or
pop
sbb
bound
pusha
repz
mov
jb
test
out
and
dec
dec
jns
lahf
fisttp
jg
(bad)
test
inc
push
clc
stos
inc
or
xchg
fwait
and
(bad)
xchg
repz
pop
popa
jmp
add
xor
outs
mov
mov
and
test
mov
test
movs
add
pop
jnp
data16
std
nop
inc
xchg
or
push
sub
loopne
jecxz
jae
xchg
jno
enter
cmps
popa
sub
sub
push
jno
daa
inc
xor
fadd
cdq
frstor
popa
mov
inc
cmp
(bad)
pop
imul
xchg
(bad)
adc
clc
(bad)
shl
cmp
jmp
or
pop
rol
fs
mov
pop
sbb
pop
mov
cmp
div
mov
pop
mov
mov
(bad)
and
mov
shr
aaa
push
retf
(bad)
aad
les
jno
out
xchg
cmp
adc
push
sbb
push
xchg
daa
in
in
dec
mov
stos
mov
pushf
(bad)
cwde
jb
loop
push
add
xor
add
ins
rol
add
lea
xor
sub
arpl
int
retf
sar
pop
cmps
mov
sub
jge
mov
or
cmp
faddp
aam
jle
mov
pusha
fst
xor
jp
pop
add
sbb
gs
pop
fisubr
rol
mov
xchg
mov
cmc
call
sti
push
in
jns
cmps
cmp
adc
loope
cs
adc
pushf
call
dec
stc
inc
movs
xchg
out
cmp
nop
xor
retf
into
nop
push
imul
sbb
add
jo
(bad)
loopne
xchg
in
cs
jb
test
dec
(bad)
sbb
jmp
fimul
mov
mov
mov
shl
les
dec
add
sub
fnstenv
xchg
jo
rol
and
into
mov
sub
fst
out
push
in
push
gs
in
xchg
(bad)
sbb
test
jmp
fisttp
sub
shl
cld
out
jg
fsub
add
fsub
(bad)
dec
loope
je
xor
push
xchg
mov
jp
xor
pop
jg
mov
pop
or
push
jl
iret
dec
push
mov
call
and
out
loope
(bad)
jmp
xchg
add
add
lods
adc
mov
cmc
cmp
inc
cmp
jmp
mov
push
f2xm1
aam
mov
push
adc
sub
rcr
rcl
and
sub
outs
fidivr
mov
mov
jl
add
fsubr
mov
ret
pop
das
add
sti
jb
fcomp
add
test
mov
xor
dec
mov
fldcw
scas
add
pushf
shl
scas
jg
test
xor
xchg
sbb
in
xlat
mov
push
xlat
lea
pushf
dec
stos
and
add
inc
mov
or
adc
arpl
jns
jge
gs
test
enter
pop
out
lahf
sahf
retf
mov
jle
push
retf
nop
xchg
sub
mov
fwait
test
movs
and
ret
jp
loop
retf
sub
mov
xchg
pop
mov
les
xor
scas
sub
dec
cli
or
cmps
adc
jg
cmps
jl
movs
test
sbb
loop
mov
int
push
xchg
cmp
or
aas
mov
xchg
mov
bound
lods
cmp
sar
(bad)
jle
dec
mov
mov
std
sbb
call
jno
mov
or
repz
test
mul
cmps
cld
mov
ss
js
test
xor
jns
mov
sub
jmp
xchg
cmc
mov
imul
(bad)
daa
sbb
std
stos
js
push
add
xor
lds
and
mov
cmps
cmp
mov
push
sbb
sbb
mov
arpl
lock
int
or
adc
xor
aam
pop
ds
imul
retf
or
je
int3
out
(bad)
out
xor
gs
push
mov
dec
ja
lods
mov
add
in
push
cmc
pop
inc
sbb
pop
loope
loop
push
xor
mov
add
in
add
mov
out
and
fwait
mov
dec
sub
ss
mov
sub
lock
pop
ret
xor
ins
adc
and
cmp
neg
ins
leave
cmp
mov
sar
rol
inc
in
push
inc
scas
or
aad
pop
data16
loope
pop
das
iret
mov
pop
and
jb
or
cmp
add
jmp
dec
inc
mov
pop
sti
push
push
fild
sahf
or
ret
(bad)
jmp
inc
mov
cmp
aas
stos
sbb
ror
ja
stc
fcmovb
adc
adc
mov
inc
pop
invd
cdq
add
aad
fmul
cwde
mov
fcom
cmp
inc
lods
pop
imul
pop
jp
in
jne
mov
movs
sbb
clc
sbb
adc
cs
aaa
dec
jbe
(bad)
lahf
dec
mov
mov
pop
mov
dec
xchg
test
xrelease
pusha
call
xchg
loopne
imul
outs
out
pop
mov
pop
aas
adc
mov
into
popa
in
fld
lods
fadd
stc
popa
xchg
loopne
and
mov
or
dec
xor
push
jl
xor
push
inc
ret
in
push
jb
xchg
jp
adc
aaa
and
xchg
outs
nop
or
pop
jb
or
xchg
ss
add
push
pop
sub
inc
mov
xor
pop
int3
cmc
xchg
enter
inc
mov
or
mov
test
movs
pushf
daa
xor
push
addr16
pop
sub
pop
dec
into
sti
sub
test
out
repz
lods
fsubr
lods
ins
cmp
fcomi
movs
xchg
outs
fld
(bad)
mov
cmps
xchg
xchg
mov
jae
add
xchg
int
jecxz
shl
inc
dec
mov
icebp
adc
data16
xlat
cmp
mov
ror
cmp
xchg
inc
fwait
mov
pop
out
pop
jge
aas
sbb
jbe
jmp
jp
loopne
popa
add
rcr
dec
xor
je
scas
int
out
push
push
imul
(bad)
pop
inc
mov
fst
aas
aam
aaa
jecxz
sbb
pop
sbb
fnstsw
sti
inc
adc
cli
dec
adc
mov
or
(bad)
ret
retf
outs
jecxz
and
jbe
mov
pop
adc
mov
mov
(bad)
jo
sub
js
sbb
aam
jmp
sub
xchg
popa
scas
and
(bad)
pop
add
lahf
cmc
sub
mov
mov
pop
ja
out
mov
fwait
div
sbb
jo
inc
xor
adc
cdq
test
cwde
not
das
dec
rol
ror
clc
push
cwde
idiv
sub
into
mov
call
sub
ficom
sti
xor
sbb
cmc
inc
shl
movs
stc
xchg
popa
mov
sar
adc
xchg
in
aas
lea
fld
je
daa
rcl
leave
xchg
and
movs
or
dec
sbb
lods
test
neg
sbb
rcr
retf
nop
mov
sub
xor
popf
icebp
pop
add
aas
dec
jecxz
xchg
stos
repz
scas
movs
ja
jno
push
inc
push
(bad)
(bad)
mov
sub
and
repnz
sub
push
loopne
adc
movs
inc
fcom
pop
aaa
xlat
scas
retf
mov
(bad)
add
mov
pop
and
jne
jnp
sub
inc
pop
in
movs
aad
leave
hlt
std
cdq
hlt
cwde
inc
mov
inc
fs
cmp
xchg
cld
pop
mov
push
lock
add
jl
adc
fsub
mov
or
jae
jle
retf
pop
sbb
lods
fimul
ins
lods
stos
ficomp
inc
mov
mov
inc
jno
push
data16
ds
inc
fdiv
or
xchg
mov
mov
loope
sti
sub
ins
mov
push
or
dec
(bad)
gs
outs
and
cwde
loopne
retf
aad
test
dec
jbe
add
mov
arpl
fild
(bad)
mov
mov
xlat
dec
add
add
ja
cmps
mov
(bad)
aam
push
cmp
sahf
and
call
sub
mov
adc
es
jmp
test
lock
mov
cmps
inc
push
fisttp
(bad)
fmul
inc
add
xchg
aad
ins
mov
mov
and
fstp
aas
and
add
cmps
mov
dec
and
icebp
sti
shl
fsubr
addr16
cmc
xchg
pop
inc
push
std
mov
in
out
(bad)
and
adc
ror
push
sbb
jg
(bad)
jae
mov
dec
jbe
pop
fcmove
xchg
push
and
add
cs
retf
arpl
pop
add
aad
es
xor
sbb
addr16
sbb
lods
mov
pop
out
repnz
push
rol
shr
sbb
ins
lock
sub
ja
idiv
add
enter
inc
or
fwait
lds
mov
push
rcl
mov
and
push
mov
out
pop
cmp
test
or
add
mov
nop
and
int3
stos
test
ins
(bad)
fldcw
cmp
lds
ins
fcmovnu
sub
dec
test
dec
es
leave
mov
and
xlat
jbe
aad
ins
in
sbb
pop
jmp
(bad)
push
call
lahf
mov
add
out
popf
pusha
push
retw
out
xor
(bad)
mov
pop
sub
dec
mov
dec
popa
movs
ss
(bad)
sti
retf
add
inc
push
clc
aam
cmp
int3
pop
xchg
clc
stos
test
loope
loop
es
daa
pop
xlat
fild
mov
pushf
sahf
and
xlat
call
push
mov
cmp
aaa
jns
retf
adc
mov
xchg
fisttp
xchg
jp
inc
mov
(bad)
mov
ins
cdq
movs
popa
das
sbb
xor
sbb
(bad)
mov
mov
mov
xchg
xchg
jecxz
xor
stc
mov
sbb
loop
sub
cld
aam
mov
pop
je
dec
dec
lods
mov
repz
fadd
sbb
xchg
test
mov
sti
jp
adc
adc
loopne
push
int
and
daa
scas
mov
inc
int3
and
imul
sar
pop
data16
or
lea
(bad)
cmp
(bad)
hlt
pop
arpl
cmps
test
pop
lds
adc
mov
xchg
cmp
nop
xchg
sub
out
push
aad
and
fsub
outs
pushf
aad
mov
jne
and
jl
clc
dec
mov
sbb
sbb
(bad)
ficomp
(bad)
fld
mov
pop
aas
jb
cli
test
gs
inc
push
push
es
pop
popf
das
neg
push
pop
mov
fld
ror
cmc
imul
aad
pop
mov
rol
xor
push
shr
shl
ficomp
arpl
addr16
push
inc
retf
pop
addr16
pusha
or
inc
mov
push
les
push
out
fcom
jl
and
movs
es
adc
add
out
cmp
popa
jo
sbb
xlat
mov
add
sub
push
mov
movmskps
movs
sub
xor
push
aam
sub
(bad)
jbe
dec
aad
mov
int3
in
stos
retf
aas
(bad)
fwait
mov
jne
add
js
in
mul
pop
inc
daa
add
sub
jne
sbb
mov
and
inc
es
xor
dec
sbb
or
adc
sahf
xor
inc
push
mov
dec
adc
ja
mov
js
bound
xchg
mov
scas
cmps
test
(bad)
xor
adc
pop
and
mov
or
movs
jp
xor
scas
or
fld
mov
push
aad
sbb
(bad)
and
fwait
adc
lahf
fdivrp
pop
inc
and
lock
jge
mul
out
cs
jno
pop
in
fadd
pop
leave
push
(bad)
out
mov
popa
add
stos
dec
or
cld
loopne
ja
mov
(bad)
cmp
sar
(bad)
stc
jbe
out
out
mov
clc
aas
mov
cli
and
mov
(bad)
retf
out
ins
and
pop
jnp
sub
bound
pop
mov
fs
cs
rcl
inc
addr16
sbb
sbb
(bad)
lods
aad
pusha
fld
pop
jecxz
ss
dec
retf
test
int3
fdivr
push
push
push
bound
ror
sub
addr16
jo
(bad)
sbb
jno
clc
loop
(bad)
jecxz
pop
sub
inc
ficom
jo
in
pop
add
pop
sti
inc
mov
js
iret
and
pop
ror
sub
cmp
outs
pop
mov
ins
lods
add
jmp
mov
cdq
pop
or
mov
cmovle
fnstsw
jmp
test
leave
imul
cmp
xchg
cmps
jae
push
pop
(bad)
jg
loope
ja
dec
push
mov
imul
jl
mov
pop
dec
loop
neg
dec
les
mov
movs
ss
jge
movs
cli
pop
add
and
lods
fsqrt
jge
stos
mov
(bad)
jp
and
mov
bound
test
xchg
jb
add
pop
cwde
or
pop
jo
mov
loopne
pop
jno
fldenv
fwait
scas
jmp
pusha
jmp
xor
outs
out
pusha
xchg
sbb
or
inc
sub
imul
std
aas
and
adc
xchg
hlt
xor
mov
scas
inc
lods
push
scas
sar
sub
or
js
js
rol
mov
fnstsw
rol
in
pop
shl
fimul
call
push
shr
or
adc
push
push
adc
jns
mov
pusha
pop
lods
hlt
imul
jp
adc
xchg
(bad)
pop
pushf
shl
test
add
cmp
xor
xchg
int3
cmp
push
aaa
pop
dec
bnd
push
push
sbb
sub
inc
or
aaa
mov
jecxz
outs
add
retf
iret
repnz
jmp
in
scas
ds
enter
data16
and
aam
adc
push
xchg
das
inc
stos
lods
dec
inc
out
push
mov
push
js
int
push
das
xchg
es
ror
mov
daa
xchg
lods
pop
lea
cmps
sbb
mov
ret
sti
push
les
lock
sti
dec
iret
jno
and
mov
or
test
and
sub
dec
xchg
xor
mov
sar
cli
bound
fldenv
xor
pop
and
scas
inc
int
adc
ins
push
jnp
bound
mov
movs
inc
sti
adc
mov
mov
out
jg
inc
xlat
das
rol
sub
jne
pop
mov
cmp
fwait
js
add
or
xchg
mov
inc
push
shr
pop
lahf
xchg
fwait
inc
popa
or
lods
inc
sub
aas
xchg
add
stc
mov
xchg
arpl
jno
jecxz
jp
daa
(bad)
cwde
ss
mov
ret
(bad)
pop
xor
dec
in
jl
js
iret
jecxz
cmc
ja
iret
push
cmps
outs
mov
cmc
js
daa
sub
aas
mov
pop
aaa
(bad)
jo
and
xchg
enter
adc
jmp
mov
cdq
or
(bad)
pop
ret
xchg
inc
mov
jl
(bad)
or
pop
ret
sbb
cdq
nop
mov
xchg
movs
jl
and
mov
mov
in
lods
push
or
add
cmp
aaa
scas
cmps
pusha
fnstcw
outs
xchg
pusha
hlt
stos
movs
call
imul
xchg
mov
cs
je
outs
ins
sar
aaa
inc
call
into
imul
daa
sti
(bad)
jae
jo
mov
stos
push
mov
arpl
repz
ret
data16
or
mov
in
hlt
cmp
sysret
adc
mov
faddp
or
int
cmps
sbb
jp
fst
cld
push
pop
ret
stos
shl
jge
lods
pop
lock
mov
aad
fnstcw
fdiv
jmp
out
popf
dec
shr
add
leave
shl
and
shr
pop
mov
sti
mov
jl
sbb
(bad)
aad
fdiv
inc
jns
out
and
push
add
fstp
icebp
dec
out
add
das
daa
ret
sahf
sbb
mov
adc
into
pop
dec
ret
fistp
push
call
mov
adc
test
or
das
cmp
and
and
les
ins
pop
cwde
push
imul
test
inc
nop
pushf
ficom
adc
jmp
fmul
mov
xlat
popa
js
mov
(bad)
test
ficomp
dec
xor
jmp
and
rcl
movs
cli
jle
mov
ins
jge
sub
pop
sbb
stos
(bad)
mov
aam
retf
mov
out
push
stc
sbb
fbld
ficom
ins
mov
daa
inc
push
clc
out
addr16
mov
push
(bad)
iret
pop
pop
ficomp
dec
stc
fwait
mov
xchg
out
aas
ficom
outs
inc
dec
rcr
pushf
dec
sub
mov
pop
xor
pop
imul
aas
fbstp
cdq
push
dec
push
outs
xor
cwde
mov
dec
pop
or
mov
and
ss
mov
mov
repz
fidivr
sub
or
inc
xchg
(bad)
jae
ficom
cmp
dec
adc
fcomp
(bad)
jmp
dec
mov
inc
push
mov
in
jo
mov
sub
pop
rcl
test
arpl
jae
test
repnz
push
popa
sbb
push
ja
ficomp
in
(bad)
mov
mov
sub
outs
xchg
gs
test
fwait
jp
dec
sub
jo
jae
cli
test
xor
rol
push
push
and
mov
pop
mov
rcl
mov
or
jmp
pusha
loopne
jmp
mov
shr
out
inc
outs
mov
push
add
(bad)
in
mov
jno
and
enter
mov
cmp
xor
iretw
lds
xchg
shr
out
lods
mov
cmp
or
fsubr
addr16
mov
sbb
sbb
mov
loopne
daa
xchg
lock
mov
mov
pushf
fcomp
in
mov
jge
aad
ds
xchg
inc
(bad)
scas
adc
dec
ins
adc
adc
icebp
sbb
cmc
fsubrp
out
out
sar
in
adc
adc
pop
xchg
sbb
ja
aam
retf
pop
jl
xor
iret
mov
iret
mov
push
add
push
loope
xor
mov
xchg
sbb
rcl
dec
add
pop
xor
pop
daa
sbb
mov
ror
in
push
xchg
sub
addr16
fdivr
jecxz
(bad)
(bad)
(bad)
lock
adc
ret
aam
mov
push
iret
and
(bad)
pop
jmp
xchg
and
pop
retf
xor
call
(bad)
mov
ss
push
addr16
(bad)
aaa
cdq
bound
or
push
(bad)
jb
movs
pushf
inc
jae
mov
mov
in
mov
out
js
cmovo
xchg
jnp
dec
fs
pop
(bad)
and
mov
pop
dec
shl
lods
jno
pop
fnstcw
dec
sbb
dec
dec
push
retf
inc
adc
xor
nop
call
fcomp
outs
pop
mov
mov
dec
cmps
push
and
leave
jmp
jmp
lods
xchg
fwait
mov
nop
pushf
in
movs
push
scas
jne
sti
jno
xor
mov
retf
push
ja
fcomp
and
xor
movs
xor
movs
add
mov
loopne
sub
imul
jp
dec
(bad)
dec
int
pop
xchg
scas
and
add
push
add
cmps
mov
int3
push
jno
jb
and
mov
inc
sbb
xchg
sbb
push
clc
and
movs
adc
cdq
scas
cdq
pop
jbe
xchg
daa
dec
pop
fnstcw
outs
xlat
inc
not
push
xchg
or
arpl
and
fdiv
jmp
sub
push
cmps
(bad)
lds
cmp
add
loopne
sbb
sbb
push
push
pop
push
adc
inc
aam
pop
cmp
mov
jle
adc
mov
sbb
loop
cmc
and
inc
add
rol
inc
pop
jmp
sbb
sub
mov
xlat
test
sub
and
mul
shl
ss
mov
mov
(bad)
daa
loope
fldcw
inc
cwde
dec
mov
or
pop
pushf
jb
repnz
shl
add
rcr
dec
xchg
cmp
pop
clc
mov
movs
dec
daa
sti
mov
dec
je
adc
and
pop
ins
inc
icebp
lods
mov
or
mov
dec
pop
mov
fdiv
mov
dec
scas
scas
and
fbld
shl
pop
mov
push
pop
pop
loopne
adc
and
jbe
test
scas
or
popa
xlat
pop
dec
mov
xor
add
jns
mov
repz
in
outs
push
and
cmp
test
or
or
sub
pop
mov
jne
adc
fs
mov
ins
cmp
push
sar
inc
hlt
in
push
and
aam
jg
arpl
(bad)
pop
xchg
cdq
ds
mov
in
xchg
jmp
xor
aas
cmps
or
jne
inc
ins
add
rcl
sbb
sbb
mov
ja
data16
mov
jmp
call
and
add
dec
jae
xor
rcl
mov
or
inc
(bad)
pop
rol
push
mov
out
loopne
(bad)
imul
out
add
pop
lods
inc
jo
mov
(bad)
cmp
push
aas
ficomp
std
cmp
sahf
mov
scas
adc
test
xor
pop
or
fsub
clc
fst
xor
ret
in
fisubr
mov
add
repnz
pop
inc
dec
pushf
inc
jg
dec
pop
daa
pop
jne
push
ror
clc
inc
retf
inc
push
xchg
mov
call
aas
pop
mov
mov
int3
xor
out
or
addr16
scas
push
aaa
xchg
pop
sbb
lods
rol
mov
rol
lods
xor
ss
int
cwde
push
(bad)
push
inc
movs
stc
retf
(bad)
shl
ficomp
add
imul
xchg
pop
rcl
xchg
repnz
in
repnz
dec
fiadd
imul
call
push
lods
push
ins
stc
outs
mov
(bad)
loope
rol
aas
dec
and
imul
push
mov
stc
js
(bad)
gs
mov
cmp
fprem
xchg
or
pop
ret
fdivr
add
mov
sbb
or
cdq
mov
popa
aas
push
add
adc
movs
sysenter
aam
fidiv
and
out
inc
imul
std
cmp
mov
push
mov
jl
call
mov
and
push
xchg
arpl
in
stos
push
inc
scas
jge
stos
xchg
scas
push
fsub
jmp
inc
push
or
xchg
out
arpl
ss
inc
jle
cdq
jb
xchg
cmp
fidiv
ret
dec
mov
iret
add
inc
jecxz
mov
js
jmp
mov
loope
fimul
and
lods
scas
sub
pusha
xchg
call
sbb
icebp
cs
mov
das
xchg
mov
test
mov
mov
mov
sbb
mov
out
xor
pusha
movs
push
adc
jo
shl
test
js
mov
scas
into
mov
xchg
lods
mov
fldenv
mov
adc
popf
inc
dec
arpl
fwait
iret
cdq
inc
cdq
cmp
into
sub
ret
clc
sbb
xchg
xor
jg
retf
mov
daa
mov
pop
inc
and
push
mov
cmp
jle
fstp
outs
or
pop
cli
cmp
jle
inc
xchg
mov
loope
jbe
and
xor
jp
(bad)
jg
mov
mov
mov
pop
push
cld
mov
push
sub
cli
pop
les
shr
mov
arpl
cmp
sbb
(bad)
mov
adc
mov
stos
loop
mov
dec
ror
jmp
sub
or
ret
cs
mov
js
sbb
lahf
xchg
and
mov
jne
and
addr16
(bad)
cmp
outs
xor
in
cs
dec
pop
sub
cmps
out
pop
(bad)
stos
fild
push
pop
cwde
imul
addr16
cmp
pusha
std
sub
sar
pop
enter
mov
cwde
push
cmp
cmp
out
rol
jne
das
outs
fcom
xchg
mov
out
gs
jge
xchg
add
add
addr16
out
mov
enter
xchg
mov
popf
cmp
or
fsubr
jle
test
or
loop
(bad)
xor
test
pop
test
imul
mov
shr
cmp
mov
clc
inc
jl
mov
(bad)
stc
out
leave
mov
fstp
scas
call
xor
movs
push
gs
popa
out
outs
out
bound
repnz
loope
xchg
sub
xor
pop
mov
fwait
pop
pop
popf
int
repz
sub
test
xchg
dec
stos
daa
es
rol
sbb
cdq
cs
pop
sub
xchg
push
push
(bad)
shl
pop
xchg
movs
push
sahf
lods
adc
test
push
rol
pop
add
mov
ss
aad
mov
bound
ror
shl
psadbw
mov
or
sub
mov
(bad)
(bad)
in
je
and
push
inc
mov
xchg
mov
add
mov
ficom
ss
int
test
ret
rcr
adc
mov
dec
into
adc
outs
mov
call
ins
sub
inc
fs
push
iret
imul
add
ja
daa
jbe
mov
call
jno
xchg
js
test
idiv
cli
clc
lea
pop
in
dec
pop
adc
sbb
gs
push
std
jg
jne
inc
cmp
mov
adc
xchg
cmp
jbe
sub
inc
mov
cmps
sar
or
iret
mov
cli
ss
push
cmp
fcom
mov
pop
fcmovbe
inc
shl
(bad)
out
sub
stc
mov
push
ja
clc
add
jle
je
int
cld
shl
push
pop
pop
push
cmp
pushf
pop
adc
aaa
inc
mov
out
fst
xchg
test
sahf
mov
xchg
sti
(bad)
loop
fist
rcl
shl
int
jge
fcom
xchg
sbb
xor
stos
les
sub
mov
lods
bound
test
loopne
mov
jg
sbb
inc
add
bound
or
cli
push
mov
mov
fwait
xor
imul
cmp
ror
and
enter
pop
dec
push
cmp
ret
and
sbb
push
lods
mov
shl
sbb
add
ins
jecxz
pop
xchg
sub
test
int3
push
lahf
sub
add
or
pushf
mov
mov
mov
mov
push
sbb
push
rcr
dec
mov
fwait
daa
cmp
lock
mov
lahf
sbb
cmp
jo
nop
repnz
xor
mov
xor
add
sti
ja
xchg
add
fdivr
xchg
cmp
adc
rcl
movs
inc
pusha
shr
in
cmp
push
jl
push
push
aam
cli
ins
lods
and
int3
(bad)
dec
ret
xor
fwait
aas
jb
push
cs
stos
add
fbld
dec
sbb
xor
push
jnp
adc
adc
leave
and
inc
xchg
xchg
push
jne
js
xchg
xor
cmps
fiadd
sub
scas
inc
retf
mov
out
fldl2t
push
cdq
test
push
push
fs
or
xor
mov
lods
adc
ins
stos
mov
xchg
push
mov
add
icebp
jmp
ins
inc
clc
pop
ds
iret
cmp
pop
and
jecxz
es
cmp
add
(bad)
pusha
add
aad
cli
cmps
jns
adc
retf
adc
clc
add
je
stc
jmp
and
es
mov
shl
xchg
cli
dec
or
pop
mov
jge
jno
push
hlt
daa
mov
mov
pop
mov
push
dec
fcomp
pop
clc
sbb
test
repnz
ret
or
jne
mov
cli
inc
ret
repz
xor
adc
fisub
sbb
ins
mov
cs
retf
fist
jp
sub
leave
rcl
(bad)
int3
ficom
mov
sar
push
push
fdivrp
or
push
jnp
jb
jb
adc
or
movs
(bad)
sub
je
push
fadd
fld
adc
add
jge
push
xor
ret
lods
xchg
jnp
or
sahf
jo
sbb
cmp
xchg
xchg
cli
jo
sbb
imul
test
daa
jnp
inc
xor
push
aam
call
cwde
es
push
repnz
lds
xchg
hlt
aas
sub
je
sbb
sbb
dec
or
push
mov
mov
adc
xchg
push
in
test
add
aaa
or
ins
js
sub
ror
sub
and
sbb
rcr
dec
outs
jb
iret
clc
in
idiv
repz
mov
sbb
lods
mov
iretw
add
mov
retf
cmps
retf
out
iret
cli
cmp
inc
pusha
lea
add
imul
out
mov
push
lock
in
xchg
sbb
inc
sub
or
xchg
ins
inc
sbb
scas
iret
fnstenv
ror
mov
inc
cmp
scas
inc
movs
ins
jl
ret
into
fcmovne
push
sbb
xchg
mov
ins
adc
sub
stos
in
or
lahf
ds
pop
push
repz
mov
push
jge
ret
or
and
adc
mov
adc
adc
sub
adc
test
aaa
jb
mov
cmp
aam
pop
pusha
dec
mov
sub
mov
push
jbe
mov
scas
retf
xor
pop
add
pop
(bad)
scas
mov
push
push
dec
(bad)
retf
jns
xlat
mov
fsubr
and
and
out
xchg
test
rcl
cmps
mov
xchg
fldcw
pop
xchg
ret
sbb
and
imul
ss
inc
icebp
push
sbb
adc
iret
test
stc
push
pop
sbb
aas
scas
xchg
imul
aas
ins
or
aad
cmovle
ror
movs
lods
in
fs
mov
pop
adc
mov
mov
sub
or
aaa
adc
stos
es
je
dec
loop
push
sub
xlat
jmp
add
ror
inc
iret
das
data16
pop
movs
mov
fcmovb
inc
outs
repnz
mov
or
sub
jb
jno
add
div
rol
dec
cmp
fsub
push
ret
mov
pusha
fisttp
repnz
mov
adc
shr
das
pop
pop
div
lock
push
addr16
push
aad
fwait
dec
xor
fidiv
fiadd
das
cmps
pop
movs
mov
pop
jb
call
div
loopne
in
(bad)
lea
push
shr
jae
leave
aad
addr16
ret
push
add
push
pop
pmaxub
jno
push
inc
aad
jp
cmp
mov
arpl
movs
imul
jno
pop
inc
mov
sar
pushf
and
dec
popa
sub
xchg
imul
lods
push
mov
out
fimul
cmp
xchg
fwait
mov
or
xchg
jmp
stos
inc
sub
mov
add
stc
add
iret
(bad)
movs
pop
mov
add
je
jnp
in
ins
xchg
mov
or
push
jnp
dec
(bad)
sub
pusha
push
stos
rcl
ins
movs
fdivr
sbb
sbb
sar
mov
pop
or
ins
jne
inc
xchg
lds
aas
ficomp
enter
push
dec
ja
cs
scas
pop
mov
rcr
add
es
jo
mov
or
stc
fiadd
cmp
fmul
fisub
mov
mov
std
sbb
(bad)
out
into
ins
cmc
xchg
pusha
sub
imul
mov
stos
xlat
adc
add
loope
loop
xlat
(bad)
pop
(bad)
ds
ds
sub
xor
dec
or
and
stc
fisub
and
arpl
xchg
stc
or
clc
jp
das
ficomp
or
mov
or
shl
jle
es
jne
jno
adc
mov
sub
aas
enter
stos
out
jmp
lods
cwde
sbb
dec
aad
mov
mov
xlat
mov
xor
popa
push
clc
js
inc
xchg
inc
retf
setbe
leave
sub
cmp
mov
mov
je
sar
not
inc
dec
or
and
(bad)
or
test
rcr
aad
or
ret
pushf
mov
xchg
xchg
mov
mov
(bad)
loop
and
les
retf
xchg
sbb
adc
dec
out
icebp
mov
cld
repz
mov
sub
out
mov
mov
inc
xchg
(bad)
retf
test
or
in
mov
inc
adc
dec
pop
aas
ss
fneni(8087
cli
ins
int3
or
push
sub
mov
test
fidiv
in
pop
sub
jae
(bad)
clc
lock
shl
sub
lods
sbb
sbb
push
sub
(bad)
mov
loopne
call
movs
fmul
sbb
aam
scas
pextrw
lea
mov
jle
fcom
xor
les
inc
mov
clc
(bad)
rcl
sbb
shl
pop
push
ins
xor
jno
hlt
retf
stos
call
ins
push
adc
js
movs
jnp
aas
xchg
stos
(bad)
xchg
push
pop
mov
fistp
repnz
push
xor
repz
jg
fistp
sub
aad
jne
in
mov
arpl
das
push
cmps
stc
push
xchg
ds
add
clc
jl
fisub
and
push
mov
mov
push
loop
(bad)
mov
ret
mov
data16
xchg
xchg
fdivr
or
jle
jg
mov
push
or
sbb
xor
mov
pop
and
sar
mov
cmp
or
mov
jnp
inc
pop
aas
outs
ins
jo
push
cmps
push
jle
cmp
mov
sbb
imul
pop
pushf
pop
and
dec
mov
sti
call
das
pop
hlt
and
enter
xchg
dec
and
in
sbb
test
vmovss
push
dec
fstp
and
push
jnp
pop
loop
sbb
pop
pusha
pop
inc
dec
jne
repz
sbb
or
dec
pop
inc
loope
mov
mov
push
dec
and
(bad)
push
cwde
xchg
cdq
push
xor
cmp
mov
pushf
sti
xchg
jmp
popf
add
sbb
or
dec
into
fwait
jecxz
jb
xor
lea
pop
stos
aaa
aam
dec
and
cmps
mov
ror
(bad)
fnstcw
mov
addr16
sbb
and
add
jae
ret
test
pop
das
xchg
addr16
inc
ins
call
mov
or
gs
mov
sub
les
push
fwait
std
push
repz
mov
or
mov
daa
dec
ret
jecxz
sbb
rol
cmp
add
daa
mov
ja
inc
sub
add
jle
mov
in
imul
clc
outs
popf
xlat
push
out
fidiv
xchg
push
push
inc
push
adc
out
call
(bad)
stos
lods
ja
ja
retf
mov
fdiv
ds
add
jbe
fsubr
pop
or
(bad)
inc
pop
arpl
and
rcl
or
or
fimul
xchg
xchg
add
out
(bad)
jle
out
mov
push
idiv
aaa
jmp
popa
out
aas
fimul
arpl
xchg
movs
stos
iretw
sbb
mov
mov
fidivr
sbb
ss
pop
sub
pop
pop
imul
adc
(bad)
aad
mov
aaa
jne
xlat
retf
inc
mov
mov
mov
xor
call
mov
outs
shl
(bad)
fs
push
aad
mov
jmp
mov
stos
sbb
adc
xor
je
popa
int3
push
call
pushf
dec
cmc
add
test
lods
push
ins
mov
sbb
dec
dec
(bad)
aam
hlt
(bad)
xchg
js
data16
aaa
mov
cmp
inc
mov
or
mov
outs
inc
loope
fcomp
sar
into
retf
xchg
or
punpckhbw
fisttp
ror
adc
lods
inc
stos
sbb
ja
add
stos
stos
sbb
xchg
(bad)
ror
fmul
sbb
test
sub
loop
hlt
mov
aam
add
out
cmc
mov
pushf
mov
lods
mov
outs
sti
mov
inc
add
(bad)
dec
xchg
std
sub
xchg
xlat
ja
inc
and
inc
or
ds
fisttp
sub
inc
lods
and
xchg
and
test
lahf
mov
fwait
add
cmp
pop
das
cmp
mov
pop
popf
daa
mov
mov
cmp
inc
dec
int3
(bad)
cmp
ins
pop
cmps
jns
(bad)
cmp
rcr
jb
fcomp
sbb
int
shr
int3
add
es
fstp
fcom
(bad)
pop
add
fwait
jl
fidiv
out
mov
mov
das
sbb
and
jecxz
jl
adc
and
pop
xor
clc
enter
movs
imul
cld
sbb
call
es
adc
cld
jecxz
adc
xchg
adc
call
les
cld
(bad)
call
outs
push
mov
ins
fbld
push
and
sub
repnz
imul
mov
xor
add
(bad)
in
and
cli
lea
mov
add
cdq
jecxz
inc
std
mov
or
enter
data16
test
mov
mov
adc
add
aas
adc
jmp
imul
js
aam
movs
pop
mul
push
mov
push
lods
ins
dec
add
mov
stos
fadd
es
xchg
mov
or
test
sbb
loop
cmp
shr
cld
idiv
add
scas
in
js
jmp
push
fwait
mov
xadd
mov
push
(bad)
sahf
clc
push
push
popa
cmc
sbb
repnz
fcomp
out
clc
repz
cmp
dec
cmc
inc
aas
outs
loope
push
inc
test
mov
mov
jo
scas
cmp
xchg
mov
into
ins
ret
push
pop
mov
pop
xchg
inc
test
fmul
fcmovnu
push
retf
imul
sbb
sub
xchg
add
mov
into
pop
xchg
ret
mov
call
aaa
mov
(bad)
push
arpl
xor
and
dec
pusha
dec
xor
mov
jecxz
mov
shl
call
jbe
adc
icebp
jno
fidiv
test
push
loope
gs
mov
jmp
sub
cmps
adc
rcr
cmp
xchg
xchg
push
push
(bad)
imul
lds
mov
push
mov
pop
adc
daa
jnp
ds
shl
ja
sbb
mov
push
les
jl
inc
or
imul
shl
popa
call
popa
nop
xchg
retf
mov
mov
adc
mov
in
shr
in
cmp
js
pushf
xchg
fistp
ret
iret
out
mov
mov
js
add
push
jno
add
fwait
mov
ret
inc
loop
jp
aad
xchg
dec
mov
movs
in
sbb
pop
mov
daa
loopne
std
push
sbb
pop
xlat
add
jge
xchg
pushw
xor
mov
mov
pop
scas
icebp
ins
inc
push
aam
add
and
test
xchg
fst
pop
and
jo
xor
retf
adc
inc
jns
icebp
retf
xor
ror
xlat
popa
jp
test
xchg
scas
out
or
nop
cmp
adc
stos
push
outs
mov
sbb
adc
mov
cmps
xor
and
and
out
jae
(bad)
int
mov
retf
loopne
and
iret
lds
in
sbb
arpl
ret
shl
pop
cwde
jnp
and
fwait
cmps
stos
in
test
xchg
in
mov
int3
pop
lock
pop
pop
pop
popf
fsubr
addr16
sub
push
shl
inc
jle
jmp
into
pop
aas
jno
ds
out
inc
pop
xchg
inc
xchg
ret
mov
lahf
out
push
popa
lods
fimul
mov
inc
int3
jns
clc
and
cmp
lds
dec
cld
cmp
adc
shl
jge
xor
mov
cmp
and
xchg
pop
rcl
test
pop
sti
cmps
mov
mov
or
clc
icebp
and
cmc
inc
jns
daa
mov
cmc
out
mov
cld
jl
rcr
mov
add
and
fcomi
pop
inc
jmp
sbb
sbb
ret
add
jns
sbb
(bad)
push
jg
jbe
movs
and
lods
xlat
xchg
sbb
dec
cmp
cld
mov
dec
cmp
(bad)
and
and
hlt
leave
fcmovu
add
mov
mov
cdq
mov
xor
sub
sub
ficomp
cmc
mov
push
ret
and
jns
test
inc
cmp
and
sub
imul
push
inc
mov
jp
mov
and
xchg
xor
inc
nop
repnz
(bad)
ret
mov
ja
dec
jae
mov
fstp
adc
das
ret
mov
adc
sahf
ins
mov
addr16
aaa
out
sbb
test
lahf
out
mov
or
push
xor
dec
sbb
xchg
jle
xchg
push
pop
retf
xchg
pusha
sub
sbb
mov
fst
mov
shl
xchg
xor
fwait
sub
fmul
fdivr
enter
je
ds
mov
add
leave
outs
(bad)
hlt
mov
dec
loope
dec
pusha
jne
popa
add
xor
out
int
xor
int3
mov
xchg
pop
fwait
ret
clc
push
push
sbb
scas
gs
add
test
rcr
push
cmc
retf
dec
jbe
jp
into
loop
out
jo
cli
jnp
sar
pop
lods
inc
shr
ror
dec
mov
mov
outs
inc
inc
mov
(bad)
setge
push
xor
stc
lods
adc
lds
push
and
arpl
and
pop
cmp
pushf
cmps
lahf
les
xchg
and
cli
add
iret
fimul
adc
outs
xchg
int
jbe
ret
pop
repz
hlt
cmps
mov
into
xchg
fs
iret
adc
cmp
push
or
cmp
adc
int
or
sahf
fst
xchg
push
pop
movs
outs
pop
imul
mul
aad
inc
in
ss
jge
sub
jmp
lds
sub
pop
xor
cmps
mov
adc
inc
or
add
sub
jle
mov
or
sbb
mov
stos
dec
dec
ins
mov
push
mov
cmp
xor
mov
jbe
inc
push
jo
mov
neg
cs
in
sbb
adc
mov
sub
adc
ss
movs
adc
or
mov
sub
test
add
pushf
adc
daa
ja
dec
pop
outs
push
push
jp
push
das
add
aad
pop
(bad)
outs
xchg
sahf
retf
scas
mov
aas
mov
cmps
mov
xchg
int3
push
pusha
adc
(bad)
dec
dec
sbb
add
push
sbb
push
fwait
xchg
fadd
add
(bad)
adc
(bad)
jne
les
mov
imul
aaa
jle
mov
mov
popa
pop
cld
sbb
mov
adc
arpl
adc
push
call
push
popf
add
mov
xor
test
retf
jb
dec
les
dec
repnz
lea
mov
jmp
mov
dec
jb
cmp
jmp
retf
lock
pop
enter
out
xchg
push
in
addr16
jb
(bad)
(bad)
cli
ror
inc
(bad)
data16
push
jl
dec
gs
pusha
pop
xchg
xor
xor
mov
mov
call
pop
in
retf
sub
movs
fnsave
pop
push
xor
test
sbb
das
adc
mov
add
mov
mov
push
sub
movs
xchg
cwde
jae
aam
shl
inc
sub
push
addr16
movs
and
sbb
pop
adc
mov
fdiv
inc
adc
sub
retf
inc
push
test
mov
and
lea
fild
fsubr
push
outs
sahf
pop
dec
xor
jae
push
xchg
std
xchg
pop
out
lods
adc
psubw
push
or
adc
mov
inc
add
int
ss
inc
sub
pop
jmp
into
(bad)
mov
inc
movs
mov
(bad)
fst
push
sbb
xchg
arpl
xor
jns
popf
scas
sbb
pop
inc
mov
loopne
adc
sub
push
sub
or
int3
pop
mov
stos
mov
and
pop
in
stc
lock
mov
add
scas
cmp
sub
pop
fsub
jnp
movs
pop
movs
inc
dec
pop
sahf
sbb
inc
dec
bound
mov
test
jp
jns
sahf
sbb
add
enter
es
sub
xchg
bound
xchg
(bad)
imul
js
mov
jl
bound
stos
sbb
adc
jb
outs
sub
sahf
push
lods
jle
fwait
xor
xor
adc
xor
int3
scas
ss
inc
jmp
pop
repz
rol
jl
adc
add
xor
cmps
pop
cmp
in
mov
movs
in
fist
addr16
pop
sbb
stos
or
test
fistp
cli
jmp
ss
dec
sbb
mov
and
jae
add
mov
mov
cmp
retf
arpl
push
fadd
std
scas
retf
jle
movs
jns
or
pop
jg
sub
in
fmulp
fs
jns
push
pop
cmps
dec
retf
aas
fst
cmp
outs
(bad)
mov
(bad)
mov
xor
sbb
bound
pop
ins
pop
test
push
movs
addr16
xchg
jge
ret
jae
jo
sbb
xchg
fs
movs
fdivr
adc
or
add
mov
ret
adc
fwait
sbb
js
push
mov
inc
in
and
rcr
push
lods
or
cmp
jb
stos
push
pushf
call
inc
fisubr
(bad)
mov
fcmovnb
outs
sbb
mov
and
clc
loop
push
fsub
out
aad
sbb
pop
and
sub
sub
mov
xor
xor
call
lock
pop
and
and
inc
add
pusha
ret
into
cmp
stc
call
pop
cwde
int
jl
sub
push
mov
pop
repz
(bad)
bound
cld
push
push
mov
inc
retf
mov
pusha
dec
imul
nop
scas
in
mov
pop
nop
inc
push
(bad)
bound
adc
push
das
bound
jg
aaa
retf
scas
(bad)
out
cmp
and
push
fsubr
repnz
je
push
dec
jnp
add
iret
outs
aas
test
(bad)
dec
add
push
mov
dec
mov
dec
push
xchg
cmp
cmp
adc
inc
sub
movs
popf
sbb
add
nop
push
xlat
push
mov
jb
push
jp
xchg
xor
movs
cmp
inc
enter
mov
jne
mov
mov
push
pop
test
(bad)
int
pop
xor
mov
inc
and
shr
mov
ds
and
icebp
adc
jl
or
cmp
popf
vrcpss
sti
xchg
pop
dec
and
mov
ja
stos
dec
fistp
sbb
int3
cmp
sbb
lds
in
jge
aad
pusha
jmp
cmp
and
sbb
and
mov
leave
jnp
int
je
adc
pop
fbstp
mov
sahf
xchg
inc
xor
fdiv
and
out
or
push
test
xchg
and
imul
dec
xchg
mov
mov
ss
inc
pop
call
dec
stos
ins
mov
bnd
lods
mov
pop
stc
repnz
sub
scas
sti
movs
adc
loope
sbb
pop
jl
push
mov
mov
test
push
popa
enter
pusha
stos
mov
ins
call
add
cli
mov
test
loop
call
jae
mov
sub
ja
adc
call
sahf
jecxz
pop
push
scas
fsubr
mov
test
push
cld
mov
data16
mov
mov
dec
imul
sbb
xor
fisttp
mov
jmp
and
adc
sbb
inc
adc
ins
js
fistp
in
sbb
clc
daa
iret
mov
pop
xchg
cli
pop
push
repz
inc
cwde
aam
int3
repz
or
sub
dec
jb
jmp
or
lea
lods
sbb
mov
push
sar
jno
push
stc
test
xchg
data16
sbb
pop
out
sub
sti
in
xchg
mov
xor
sub
out
jle
mov
dec
daa
test
imul
push
mov
das
and
jle
sbb
imul
mov
sbb
cmp
mov
adc
push
fwait
outs
scas
cdq
pop
iret
jl
xor
lock
lds
xchg
lods
jnp
jl
push
in
lods
pusha
jo
mov
adc
or
mul
pop
repnz
cli
ss
dec
mov
aad
xchg
test
out
stos
inc
push
loopne
xchg
jb
jo
jbe
rol
jno
and
dec
sahf
mov
and
pop
cmp
xor
lock
mov
xor
imul
cwde
push
mov
pop
inc
movs
cmps
or
sahf
mov
cmovs
repnz
dec
jle
nop
add
add
sbb
mov
pop
rol
cmp
inc
add
sti
push
aas
cmc
jecxz
dec
xchg
es
dec
push
pop
pop
mov
xchg
cmps
js
jbe
xor
push
into
hlt
dec
imul
add
ja
mov
mov
xor
daa
mov
xor
loopne
fist
add
scas
adc
out
jne
out
fisub
adc
cmp
and
lahf
imul
jg
jnp
pop
mov
xor
dec
out
out
lds
stc
mov
sub
mov
cmp
sbb
rcr
jae
push
cld
imul
mov
lods
jg
xor
jmp
mov
stos
adc
and
adc
out
and
add
jmp
push
mov
std
cmps
jbe
(bad)
sbb
mov
dec
fisttp
imul
inc
nop
dec
sahf
sbb
cmp
pop
push
lods
mov
cmp
jl
sbb
nop
(bad)
nop
fsubr
shl
inc
or
mov
mov
arpl
inc
mov
jmp
xchg
dec
loope
(bad)
aas
cmc
fsubrp
enter
and
inc
dec
mov
dec
push
mov
rcr
mov
pop
or
jmp
loope
scas
pop
je
or
clc
jmp
mov
int3
adc
imul
sahf
mov
or
ficom
jno
mov
into
scas
mov
xor
pusha
xor
shr
cmp
retf
call
ret
xor
pop
retf
mov
xlat
jns
dec
test
rcr
dec
aas
xchg
dec
dec
cld
fsubr
icebp
sub
xor
cdq
test
jb
sbb
mov
out
push
inc
or
fnstcw
sbb
gs
jnp
sub
inc
repz
cdq
jmp
call
fdiv
cmp
jne
loope
mov
ds
retf
ins
sar
mov
xchg
jmp
mov
sbb
xchg
out
jl
fwait
adc
mov
lods
out
nop
outs
cmp
jg
stos
ss
or
test
lods
movs
mov
fild
mov
retf
jnp
push
std
xchg
rcl
and
mov
dec
jecxz
mov
and
fbstp
pop
(bad)
push
fst
rcl
outs
jmp
fwait
out
leave
inc
movs
retf
push
and
add
std
cmp
or
mov
nop
out
lahf
ins
xchg
xchg
inc
xor
mov
(bad)
jmp
xchg
outs
and
sti
adc
fidiv
push
addr16
mov
inc
sar
fdiv
push
stos
jmp
pop
or
or
call
adc
ror
mov
lods
hlt
inc
lds
inc
stos
pop
mov
push
mov
movs
scas
sbb
sahf
imul
push
push
mov
xor
shl
xor
(bad)
xor
stos
out
es
out
inc
cmp
loope
jns
push
pop
imul
out
int3
leave
add
sbb
outs
lea
aam
lock
jo
xor
repz
shl
int
in
ror
clc
call
lds
jb
push
aad
mov
pop
and
dec
sahf
pop
loopne
ret
cli
fwait
neg
jb
shl
push
xchg
mov
xlat
jmp
call
mov
adc
cmp
dec
call
xor
mov
sub
cs
sbb
or
cli
ds
pop
sbb
mov
cmps
sbb
or
push
int
xchg
enter
test
pop
out
push
xchg
addr16
push
adc
in
cmc
xchg
lahf
dec
adc
jno
push
dec
hlt
sub
cdq
out
out
mov
popa
jno
cs
fwait
sub
test
and
arpl
(bad)
ficom
jns
sar
or
push
fmul
pop
call
push
mov
push
inc
mov
data16
xchg
sbb
ror
push
cdq
test
xor
cmps
out
call
push
addr16
xor
push
dec
mov
jns
mov
daa
fimul
or
aas
pop
adc
jbe
dec
xchg
aas
enter
adc
cmp
enter
dec
out
push
gs
xor
fs
frstor
(bad)
enter
xlat
(bad)
cmp
and
jmp
or
icebp
cld
mov
leave
mov
hlt
sbb
mov
shl
test
js
and
(bad)
movs
cmp
fidiv
jmp
loop
pop
es
xchg
fwait
mov
mov
inc
scas
sbb
stc
or
not
in
mov
call
push
test
pusha
cdq
mov
push
sub
les
test
out
add
cmp
pusha
sub
pop
mov
sbb
cmp
pop
adc
pop
sbb
fiadd
pop
dec
push
cli
dec
loop
mov
aad
adc
pop
mov
enter
hlt
outs
out
pop
fnclex
cmp
data16
fs
xchg
or
movs
sub
dec
add
test
sub
test
xor
mov
cmp
inc
push
cld
mov
lea
ins
mov
bound
test
sti
movs
mov
lea
(bad)
out
cmp
xchg
mov
mov
push
xchg
dec
pop
fs
or
inc
push
sti
cmp
cmp
jg
sbb
mov
rcl
mov
mov
ss
jns
xchg
mov
sub
mov
ret
push
xor
mov
mov
and
shl
mov
gs
xor
adc
or
fist
dec
clc
fcomi
mov
imul
bound
fsub
ret
inc
adc
in
pop
iret
mov
nop
das
das
jl
rcl
test
xor
imul
cmp
les
push
mov
ins
and
sub
inc
mov
in
push
stos
add
dec
neg
in
mov
lds
repnz
sub
and
jne
bound
outs
stos
js
out
cwde
ret
xor
call
(bad)
push
repz
cmp
(bad)
pop
lock
iret
sbb
xchg
sub
lds
stos
ret
sahf
fwait
imul
pusha
ret
loop
rcr
dec
or
int
(bad)
adc
lds
or
mov
xchg
fcomp
mov
pop
add
sbb
xlat
iret
sbb
pop
sbb
(bad)
movs
mov
mov
pop
inc
test
pop
(bad)
(bad)
in
dec
xchg
jbe
mov
and
mov
scas
mov
adc
or
or
ret
rol
imul
xchg
cwde
sub
mov
and
pop
cld
clc
nop
cli
nop
fild
dec
pusha
mov
stos
pushf
aam
dec
in
lea
mov
xor
call
adc
mov
sbb
cli
nop
out
jl
cdq
jge
jecxz
pop
mov
mov
cmp
cmc
mov
sub
aam
call
xor
jae
adc
(bad)
shl
adc
push
js
movs
push
sbb
xchg
int
mov
mov
xor
js
ins
repnz
push
xchg
xor
das
sbb
out
xchg
(bad)
mov
inc
mov
pusha
cdq
fsub
or
pop
nop
(bad)
sti
adc
clc
cmp
or
icebp
adc
fisubr
sub
xor
out
mov
and
push
or
adc
rol
mov
fimul
jge
imul
jbe
inc
scas
sahf
xor
iret
gs
in
pop
dec
cs
out
out
sar
fsubr
dec
loope
mov
cdq
push
popa
inc
push
fucom
ja
mov
cmp
push
cmp
mov
mov
lock
test
test
ds
cmp
xchg
sub
fmul
xchg
shl
or
jbe
mov
or
outs
pop
cmp
pop
mov
jo
mov
lods
pop
fistp
add
push
mov
mov
sbb
pop
pop
jmp
rol
inc
xor
push
jae
std
jno
sahf
lds
fisttp
pop
popf
mov
push
sti
mov
jns
xor
and
movs
mov
sub
push
in
dec
(bad)
and
sbb
add
push
jmp
loop
cmp
lods
cld
xchg
lds
sub
gs
lea
loope
fiadd
cmps
mov
or
aam
push
lock
into
mov
inc
out
xchg
or
into
xchg
mov
cmp
enter
sub
es
dec
mov
in
pop
jo
aad
fwait
or
fnstsw
dec
add
stos
std
jbe
cdq
xor
push
fadd
fwait
ret
xor
cmp
mov
mov
xor
add
mov
mov
fidiv
rol
push
icebp
es
mov
and
arpl
xchg
pop
mov
call
jb
pop
or
xchg
jl
loop
popa
(bad)
pop
xlat
inc
xlat
push
adc
in
fdiv
fnstenv
jmp
imul
xlat
adc
nop
adc
add
gs
dec
(bad)
lods
sbb
clc
xor
cmp
push
jmp
and
push
lods
(bad)
repz
call
push
pop
arpl
out
cmc
xlat
xchg
mov
movs
push
and
imul
push
rcr
or
jl
shl
ret
jle
pusha
sbb
call
xchg
sahf
loope
and
push
aad
div
aas
dec
rol
fisubr
cld
and
sub
es
jmp
cmp
cmp
ret
sbb
iret
cmp
mov
(bad)
jno
mov
jae
cwde
ja
inc
jge
push
push
xchg
pop
aaa
shr
sub
das
ja
jge
xor
test
(bad)
mov
arpl
xor
or
push
loopne
scas
push
push
lods
(bad)
in
fdiv
mov
mov
hlt
(bad)
cs
cmp
push
aam
pop
or
dec
bound
mov
loop
les
into
pop
aam
mov
mov
sbb
mul
rcr
or
test
push
gs
lds
sub
shr
adc
js
pop
pop
sbb
popf
iret
dec
sahf
xor
arpl
aad
imul
jle
imul
fcmovb
mov
or
ret
ins
add
leave
add
lahf
fimul
ja
retf
js
jae
clc
(bad)
push
icebp
xchg
and
sub
mov
ss
repz
retf
push
stos
fnstenv
xchg
lock
add
popa
jl
and
call
xchg
or
xor
mov
mov
inc
inc
inc
je
mov
rol
add
pop
inc
dec
ret
adc
inc
push
movs
push
jmp
xor
jl
aas
movs
pushf
popa
pop
push
fcomp
loope
xor
add
ins
jns
push
and
adc
enter
dec
outs
or
mov
xor
and
and
(bad)
int3
jg
call
sbb
cs
out
jle
dec
mov
aad
sub
cmp
ss
ins
ja
mov
call
jle
fld
xchg
jg
loopne
mov
(bad)
xor
fld
repz
push
pop
pop
loope
into
push
loop
(bad)
mov
shl
and
ins
test
jmp
loop
push
pop
lock
sahf
mov
scas
and
retf
and
pop
pop
pop
fist
mov
aam
sbb
jo
pop
lahf
inc
add
push
mov
sub
mov
cmps
mov
dec
mov
push
hlt
in
lods
call
add
inc
lock
nop
pop
dec
test
ret
mov
lahf
and
inc
js
mov
sbb
inc
loopne
dec
cmp
mov
neg
mov
xchg
mov
jae
mov
mov
cmp
sti
push
cli
jl
lds
push
adc
push
rcl
xor
nop
das
pop
sbb
adc
ins
in
cld
inc
stos
test
ret
or
std
or
lahf
mov
call
dec
jb
and
iret
cmc
je
lea
cmp
fimul
outs
dec
xchg
repnz
dec
adc
pop
stos
inc
inc
ins
icebp
push
mov
xor
not
jmp
dec
out
sti
ja
jbe
mov
jb
push
xchg
adc
xchg
mov
pop
jle
cdq
mov
gs
push
cld
js
dec
pusha
dec
mov
stos
in
hlt
outs
inc
ja
ret
ds
cmps
pop
jp
add
inc
xchg
and
repnz
or
(bad)
xchg
pop
mov
push
sbb
test
das
lods
outs
or
clc
mov
dec
mov
adc
xor
into
xor
jg
jae
movs
jecxz
ret
lahf
and
fnstsw
fsub
frstpm(287
cwde
xor
pop
fs
mov
(bad)
sahf
sbb
xor
pushf
in
and
cmp
xchg
and
or
mov
xor
mov
outs
cmp
int3
(bad)
(bad)
lock
mov
fild
add
imul
mov
sbb
movzx
push
test
or
fucomi
pusha
sbb
lea
mov
cwde
retf
scas
xchg
movs
(bad)
jb
icebp
jmp
mov
shr
int
or
push
dec
pop
pop
cld
and
add
cmc
loope
(bad)
iret
mov
jae
pop
mov
push
xchg
aas
stc
call
pop
mov
add
xchg
pop
dec
sub
inc
movs
sub
add
xor
ins
lods
xchg
and
test
xchg
jp
in
push
jbe
movs
mul
or
pop
jmp
mov
xor
mov
cmp
call
out
leave
aas
mov
ja
jmp
jae
mov
add
setae
in
aad
sub
dec
mov
lock
fs
adc
dec
rcl
xchg
and
xlat
cmc
sahf
sbb
ret
or
adc
das
mov
jg
add
mov
cmp
dec
sar
and
call
inc
mov
or
stos
pop
int
jcxz
push
leave
jb
lea
adc
xor
xchg
cmp
pop
pusha
scas
add
shr
sbb
and
xchg
mov
leave
out
sub
test
ja
jb
fwait
rol
std
loop
out
loope
out
mov
and
popf
mov
xchg
imul
mov
movs
rcr
fcos
jle
ins
(bad)
dec
dec
sbb
dec
pop
add
(bad)
xchg
dec
mov
cmp
jo
inc
out
mov
ss
sbb
fist
std
sub
sti
sbb
xchg
icebp
test
inc
test
mov
cli
push
and
sti
aad
mov
test
mov
and
daa
dec
jb
and
xlat
mov
popf
mov
stos
ret
sub
push
push
sbb
or
or
xchg
or
stc
mov
mov
xchg
adc
push
out
cmp
test
(bad)
(bad)
fidivr
pop
cli
pop
adc
test
mov
add
les
(bad)
clc
cs
out
jecxz
in
nop
add
sti
jne
rep
mov
mov
shr
pop
rol
xchg
loop
add
(bad)
xchg
in
cli
sbb
xor
adc
ins
aas
xlat
in
mov
or
adc
and
daa
addr16
scas
cmps
call
(bad)
push
jmp
jmp
push
iret
cli
or
add
movs
jmp
cmc
push
pop
ds
jnp
mov
js
jns
scas
jecxz
add
loopne
xchg
sbb
loopne
daa
add
inc
outs
xchg
sub
(bad)
das
(bad)
cmp
sbb
out
jo
push
adc
aam
aam
or
ins
sbb
or
fwait
push
inc
cmps
dec
jae
dec
mov
(bad)
mov
jnp
jo
xchg
into
leave
jecxz
loop
push
and
push
ror
retf
fld
sbb
inc
add
xchg
jl
mov
stc
sub
or
es
sub
and
dec
add
dec
dec
int
sbb
add
arpl
iret
mov
mov
jb
rcr
dec
sub
stos
ds
cmps
daa
mov
mov
pop
push
or
jns
cmp
inc
xor
xor
jno
xchg
jle
jae
call
mov
pop
test
jmp
jge
lahf
xchg
xor
push
jmp
xlat
lahf
popa
fdiv
adc
ror
je
sahf
repnz
mov
idiv
fst
pop
xchg
out
nop
mov
jae
jl
ins
sub
loopne
sbb
(bad)
cli
test
jb
inc
mov
int3
add
push
sbb
cmp
ins
cmc
sahf
out
stos
cmps
loope
and
ret
push
mov
jmp
xchg
sti
or
mov
xor
push
shl
adc
(bad)
rol
adc
loop
xor
sar
sbb
pop
cs
lea
popa
dec
mov
lods
sahf
adc
jmp
enter
shl
int3
and
cs
mov
mov
adc
outs
sub
(bad)
bound
and
lea
es
in
fisttp
jl
dec
pop
sbb
jnp
or
sbb
or
div
and
add
jl
imul
outs
fstp
cmc
xchg
pusha
push
pop
in
nop
(bad)
call
cdq
sbb
sbb
repnz
mov
and
popa
pushw
sub
popa
jmp
div
sar
mov
jecxz
mov
(bad)
call
mov
xchg
jg
es
loope
lahf
nop
cs
pop
inc
ins
fild
int3
mov
rcl
jns
dec
in
push
dec
inc
mov
icebp
push
or
aaa
out
or
lods
loopne
mov
sub
lods
xor
mov
lea
sub
mov
sub
sti
jnp
retf
xchg
sti
push
(bad)
mov
shr
popa
push
xor
aas
shl
dec
sti
add
jge
ret
js
jns
jmp
xchg
pushf
lock
mov
ror
daa
pop
ins
mov
test
pop
jne
mov
int
jne
sub
cmp
sbb
das
cli
push
ja
push
push
sub
lds
gs
loope
adc
stos
or
or
hlt
stc
add
imul
mov
rcl
jp
scas
(bad)
adc
ja
adc
xor
mov
sti
jge
ins
fstp
mov
(bad)
rol
sbb
inc
ins
mov
add
out
add
push
adc
out
call
inc
cmp
push
adc
es
test
dec
ins
mov
adc
and
aad
mov
mov
xor
adc
fnstcw
mov
pop
ror
sbb
call
xor
and
mov
xchg
mov
mov
sbb
mov
ficom
xor
gs
sub
push
push
pop
and
push
(bad)
dec
(bad)
jno
arpl
(bad)
mov
sahf
fs
fsubr
or
jmp
jno
loop
dec
fsubp
mov
sub
(bad)
lods
pop
lods
xchg
push
jg
ds
pop
inc
lods
cmp
inc
(bad)
fbld
mov
dec
popa
fiadd
xor
(bad)
jge
adc
push
inc
iret
mov
adc
dec
sub
dec
nop
inc
add
add
cmp
inc
movs
fsub
inc
adc
ror
fwait
daa
mov
fdivr
or
(bad)
push
xchg
push
sub
cmp
or
mov
shl
mov
jge
pop
je
xor
mov
mov
cmps
and
mov
das
outs
inc
dec
pop
xor
out
mov
adc
xchg
sub
repz
jb
test
aad
repnz
push
and
dec
div
out
sbb
pop
cs
repz
sti
loopne
shl
loopne
(bad)
cmc
xchg
sbb
int3
xchg
jle
inc
jb
cmps
mov
and
mov
in
push
xor
in
imul
aas
bound
pop
ds
and
mov
push
(bad)
ins
je
out
push
cmps
mov
sbb
mov
icebp
sub
push
fisttp
out
sub
dec
mov
dec
outs
or
in
in
call
xchg
(bad)
jne
test
movs
cmp
xchg
outs
mov
fstp
scas
cmps
jmp
push
dec
mov
dec
sti
mov
and
dec
mov
sbb
sbb
mov
test
stos
rcl
push
in
aam
push
push
cmp
push
(bad)
pop
out
fdiv
int3
aam
les
or
push
adc
mov
fadd
dec
test
adc
cli
push
xor
push
add
mov
movs
cmp
mov
or
mov
lea
mov
or
mov
cmps
cmps
xor
arpl
pop
fsub
inc
mov
mov
push
ror
adc
xchg
ficom
mov
jne
push
vpaddd
shl
jp
adc
movs
jmp
out
mov
mov
repnz
jne
pop
jg
imul
adc
outs
dec
inc
dec
dec
js
in
and
fsubr
xchg
push
cmp
in
and
ds
push
imul
sub
movs
mov
mov
bound
pop
mov
aad
sbb
rcl
shr
cmp
add
sub
test
push
push
mov
fwait
inc
cmp
adc
mov
and
rcl
adc
or
cmps
push
std
cmps
sbb
sbb
xor
in
xchg
sar
dec
stc
mov
cwde
lock
in
jne
sub
or
fcom
div
inc
dec
adc
aas
add
cmp
mov
sub
fwait
cmp
imul
sub
pop
mov
mov
or
mov
mov
push
dec
cdq
pop
out
test
lock
sbb
hlt
not
ins
scas
rcr
clc
ds
imul
rol
mov
lods
shl
add
adc
jnp
nop
cwde
cdq
sbb
sbb
dec
test
lock
cmp
out
scas
xor
add
shl
mov
pop
pop
int3
add
xlat
mov
std
push
mov
pushf
out
mov
cmp
inc
(bad)
cli
xlat
std
lods
pop
dec
rol
sbb
gs
repz
jmp
cmp
jp
mov
test
dec
jg
in
jl
xor
pop
inc
push
data16
in
rcl
das
xchg
cmc
jo
popa
loop
in
adc
cmps
sar
scas
rol
sub
and
or
lods
cmp
test
inc
xor
sbb
leave
add
mov
pop
sbb
jno
cmc
xchg
jae
jmp
xor
std
xchg
sbb
sbb
ins
hlt
sbb
lods
adc
cdq
mul
xor
es
pop
or
jl
pop
and
mov
shr
mov
adc
pop
ror
(bad)
mov
jne
es
cmp
and
(bad)
into
movs
test
ror
mov
retf
adc
jmp
adc
fwait
inc
cdq
(bad)
cmp
dec
cld
daa
mov
imul
dec
(bad)
jp
stc
push
add
rcr
jae
jo
in
out
and
inc
and
(bad)
push
push
xor
gs
mov
test
pop
cmps
mov
push
mul
test
push
add
retf
iret
mov
or
mov
inc
xchg
movs
(bad)
fbstp
or
add
xor
mov
loope
mov
jne
clc
push
iret
pushf
adc
or
xlat
xchg
push
mov
mov
xchg
cmps
jo
call
cld
adc
dec
rol
sbb
add
gs
pop
sbb
lds
ror
aad
cld
jle
ror
mov
hlt
cmp
hlt
(bad)
mov
fisubr
ins
xor
add
mov
mov
mov
jmp
ins
pop
sahf
das
sahf
movs
add
stc
bound
cmp
(bad)
sbb
popa
ds
add
mov
mov
cmps
mov
fwait
out
mov
sti
cmp
(bad)
pushf
retf
pop
cmp
push
stc
es
mov
outs
sbb
loop
test
push
jmp
popa
adc
mov
les
cmps
push
xor
xchg
(bad)
dec
(bad)
repnz
adc
imul
(bad)
sbb
out
push
sahf
lea
add
inc
jbe
nop
dec
push
mov
mov
mov
mov
pop
jnp
xor
mov
or
sar
dec
jmp
jg
jns
xor
and
add
or
mov
push
xor
call
pusha
(bad)
xchg
scas
mov
sbb
xchg
cs
adc
fadd
(bad)
pop
je
sbb
push
not
loopne
sbb
add
inc
frstor
aam
out
ret
push
sbb
sti
not
hlt
test
pusha
xchg
inc
aas
push
inc
(bad)
scas
mov
cmp
mov
jmp
jbe
push
xor
dec
rcr
xchg
pop
lods
addr16
call
mov
lods
mov
and
fnstcw
jno
cdq
in
ds
mov
push
scas
xor
jns
fcom
add
sahf
push
push
push
jae
cmp
out
mov
in
and
mov
fmul
mov
rol
out
and
mov
movs
xor
imul
mov
jne
int
fsub
pop
xchg
and
into
add
cs
fadd
movs
stos
and
and
jb
jb
add
stos
ins
in
inc
cmp
fcmovnb
mov
js
cli
mov
pcmpeqw
lock
imul
inc
mov
xor
ss
jb
dec
gs
das
fst
scas
data16
fwait
mov
jnp
mov
std
xlat
mov
jecxz
iret
sbb
push
mov
sub
aad
mov
dec
or
mov
inc
(bad)
adc
frstor
test
cmp
inc
mov
gs
xor
cmp
inc
lods
addr16
mov
loopne
cmp
inc
rcr
je
ins
neg
xchg
jmp
fisttp
fistp
or
and
push
js
mov
push
dec
retf
and
dec
int
dec
in
cmp
(bad)
(bad)
div
mov
popa
cmp
imul
pop
ins
or
dec
push
into
(bad)
hlt
adc
add
(bad)
daa
stc
dec
mov
and
outs
xor
enter
into
icebp
fucomp
adc
sbb
adc
in
std
je
xor
inc
call
sub
outs
bound
cmp
fs
mov
mov
daa
and
cmp
push
xchg
dec
ret
pop
jne
lods
push
cmp
jo
or
pushf
hlt
sbb
adc
sub
mov
lods
add
pop
fs
sub
ds
(bad)
dec
jp
jp
and
push
xlat
cmp
jmp
pop
ins
dec
pop
sub
mov
sub
dec
cmc
push
mov
shl
mov
movs
pop
into
(bad)
mov
fwait
lea
sub
frstor
aaa
dec
in
nop
xor
je
jp
mov
aam
stos
and
pop
add
add
pop
and
cmp
out
int
lock
std
aam
imul
daa
sub
mov
out
imul
pop
retf
loope
push
popf
movs
icebp
mov
adc
or
add
or
ins
bound
scas
and
out
rcr
jno
mov
pop
pusha
in
(bad)
mov
stos
(bad)
out
mov
and
retf
or
push
call
mov
(bad)
dec
or
push
cmp
fld
rcr
movs
push
rcr
jae
clc
add
int3
js
test
pop
je
sub
retf
fadd
(bad)
mov
jge
jg
imul
jno
xor
sub
push
jbe
or
in
shr
jne
push
scas
(bad)
test
psubsb
xor
push
mov
add
and
sbb
cmp
pop
repz
fldenv
or
scas
inc
lahf
out
scas
push
jmp
cli
test
xchg
xor
out
aad
aas
stos
mov
mov
int3
push
cmp
int
push
lea
push
rcl
fs
sti
mov
ficomp
repz
mov
jbe
loope
ins
ds
imul
cdq
or
cmp
inc
dec
dec
add
mov
xchg
xchg
jae
cmp
call
sub
sub
jp
mov
ins
jnp
(bad)
aad
and
mov
xor
inc
push
imul
mov
ins
and
lock
xchg
inc
in
adc
xor
push
cmps
in
ins
push
push
call
jl
push
fimul
cs
sub
xchg
and
mov
hlt
lods
or
inc
(bad)
jae
stc
xor
icebp
push
int3
mov
(bad)
and
jne
and
xor
rcl
jg
add
sub
jnp
retf
fisub
lods
scas
xor
mov
ins
hlt
cli
fnstsw
xor
xchg
push
sub
in
retf
in
xor
enter
rcr
pop
push
movs
cld
hlt
mov
mov
and
adc
push
pop
push
jb
(bad)
adc
xor
lds
cmp
mov
jl
popa
mov
sub
add
inc
push
aaa
out
push
push
iret
rol
aam
test
dec
fild
out
cmp
push
and
dec
pop
nop
add
test
dec
adc
inc
sub
xchg
sub
sbb
enter
add
jmp
jmp
sub
push
stc
push
jno
mov
loopne
jg
mov
outs
jl
lds
sbb
xor
xchg
in
mov
push
xchg
xlat
in
jns
repnz
out
jnp
add
jns
pop
jl
jecxz
fninit
xor
or
jmp
cmps
sbb
in
(bad)
lods
mov
jp
jle
or
fwait
dec
loop
add
fidivr
ret
cmc
scas
jecxz
jmp
add
cdq
sub
cwde
shl
fcomp
cdq
add
inc
jns
xchg
bound
sbb
mov
stos
mov
in
ret
mov
movs
xor
adc
dec
retf
repz
push
sub
mov
and
adc
fcomp
fcomp
inc
outs
and
int
pusha
xchg
inc
ins
mov
jg
mov
push
mov
cmp
je
jbe
call
fidiv
xchg
jg
mov
xchg
in
stc
mov
and
sub
and
test
or
js
cmp
movs
lahf
mov
mov
aaa
outs
(bad)
push
lock
scas
mov
jp
pop
in
rcr
cld
jne
outs
lods
xor
add
xor
inc
xor
add
addr16
sbb
popf
adc
mov
mul
retf
cdq
dec
xchg
sub
or
(bad)
pop
ds
lock
mov
xor
cmps
and
in
mov
adc
mov
div
ss
int
sbb
cdq
scas
push
es
mov
mov
lock
shr
sbb
xor
mov
lods
mov
jl
or
(bad)
fstp
outs
arpl
scas
icebp
push
loope
sbb
out
xchg
xchg
fld
aaa
push
inc
mov
iret
sub
inc
loop
lahf
rol
cmps
scas
and
enter
jne
test
dec
in
les
dec
js
repnz
or
jns
leave
mov
aad
sub
fild
push
sub
mov
stos
jno
dec
or
sbb
xor
jge
xchg
or
rcl
test
je
fsubr
aaa
int
add
add
mov
push
shl
mov
ret
iret
xlat
test
push
pushf
mov
jno
mov
inc
out
dec
adc
ret
pushf
dec
es
leave
cmps
leave
lea
ins
push
lds
add
mov
sbb
push
cmp
dec
mov
inc
xchg
xchg
sub
cli
sub
jl
push
fiadd
sbb
lea
xor
stos
movs
mov
inc
add
aaa
xor
scas
sub
xchg
das
add
pop
sub
mov
ins
and
call
push
mov
mov
movs
ds
jne
shr
cs
mov
fisubr
cmps
add
mov
jg
sub
jo
fcomp
movs
push
(bad)
fldcw
mov
jmp
sub
daa
push
push
sahf
inc
loopne
add
ret
jae
and
xchg
scas
jle
push
mov
sub
frstor
clc
enter
mov
or
xchg
test
sbb
mov
mov
daa
mov
add
mov
jo
jns
jns
xchg
dec
fdiv
adc
adc
push
mov
lods
lahf
and
dec
xchg
push
gs
div
inc
jnp
pop
mov
mov
push
aad
bound
cmps
sbb
(bad)
outs
or
addr16
pushf
stc
mov
add
fdiv
mov
arpl
in
and
loope
mov
cmp
shl
sub
lea
xchg
and
loope
bound
test
dec
test
hlt
cli
or
bound
xor
js
pop
call
push
ror
int
(bad)
std
cmp
inc
mov
retf
fstp
xchg
jge
les
sub
js
aaa
or
cs
xchg
add
outs
mov
push
movs
jecxz
fisttp
mov
or
xor
pop
push
arpl
cmp
cli
sbb
sar
push
sub
xor
je
sbb
jae
dec
aaa
and
xchg
clc
jg
stc
xor
push
popa
jo
bound
and
push
cmc
sar
mov
add
push
fmul
cmp
pushf
inc
lea
mov
mov
loope
jne
ins
es
or
or
jl
test
adc
in
jg
ins
ins
xor
mov
test
in
loop
push
jp
push
mov
push
mov
xchg
jb
inc
arpl
repz
fistp
in
sub
jae
iret
mov
add
cmp
jae
inc
adc
and
lds
push
sbb
and
loopne
dec
pop
icebp
fs
sub
sbb
rol
and
xchg
icebp
mov
cmp
pop
test
mov
inc
sub
outs
daa
mov
sub
push
sbb
jl
aad
scas
rol
popa
bound
mov
sbb
push
adc
cmp
fiadd
jmp
(bad)
mov
mov
add
sbb
loope
out
inc
test
jns
cdq
sub
sti
jecxz
mov
mov
jle
imul
das
push
dec
push
dec
push
inc
mov
mov
xchg
ins
xchg
test
sbb
and
fstp
cmp
push
mov
jns
cmp
xchg
jns
lods
loope
fldcw
outs
dec
lds
ds
ins
out
loope
inc
outs
inc
mov
xchg
push
rcl
pop
stos
jnp
outs
lods
dec
push
fcomp
push
jp
jl
mov
out
into
xchg
pop
push
xchg
or
test
xor
xchg
(bad)
int3
pop
(bad)
xlat
adc
adc
mov
cmp
pop
out
dec
or
(bad)
std
daa
repnz
fcmovnb
cmps
add
push
hlt
mov
enter
or
fs
loop
push
push
mov
inc
test
ja
shl
cmc
mov
test
aas
or
test
mov
jb
cmp
dec
push
cli
gs
das
scas
lock
mov
xchg
call
enter
lock
or
pop
push
and
add
mov
jno
inc
rcr
fs
out
in
xor
mov
iret
mov
pop
aam
xlat
or
and
mov
and
mov
into
or
xchg
data16
(bad)
in
dec
pop
and
xor
loope
or
mov
int3
rcl
shl
xor
in
(bad)
mov
mov
jl
in
jne
cmp
sub
popa
rdmsr
mov
mov
test
cwde
(bad)
jno
inc
sub
or
loopne
sub
fcmove
dec
jo
stc
or
and
imul
ins
cmps
fadd
fistp
or
scas
mov
mov
sbb
in
and
add
xchg
hlt
arpl
adc
jle
stos
sbb
xchg
adc
mov
imul
mov
or
pop
daa
cmc
xchg
test
std
cmp
and
pop
test
jl
sbb
sti
xor
out
sbb
jmp
mov
jae
ss
mov
fwait
mov
adc
enter
mov
pop
fadd
cli
gs
nop
in
popa
mov
dec
(bad)
cwde
xchg
mov
lds
mov
or
ficom
xchg
sub
in
ins
out
outs
inc
xor
call
mul
pop
std
dec
jge
repz
sbb
les
test
inc
mov
mov
mov
call
push
mov
sub
das
pushf
retf
cmps
mov
cs
xchg
in
sar
cmps
hlt
mov
(bad)
jge
movs
aas
sbb
mov
fstp
lahf
hlt
ret
shr
xchg
les
cmp
sbb
arpl
retf
in
das
mov
rcr
mov
pop
sidtd
repnz
xchg
or
push
xor
cmp
ss
pop
adc
arpl
iret
xchg
and
jge
push
cli
and
xchg
ds
sub
pop
rol
imul
daa
or
mov
inc
fs
add
bnd
fidivr
cmp
fadd
stos
test
dec
pop
xor
sbb
leave
in
stos
(bad)
mov
inc
vpcmpgtb
mov
clc
std
inc
inc
arpl
mov
sub
add
sbb
inc
retf
cmp
mov
xchg
out
xchg
(bad)
repnz
xor
test
(bad)
scas
adc
fcom
repz
push
or
data16
addr16
sbb
jle
pop
push
retf
jae
push
enter
out
sub
into
xlat
cmc
inc
(bad)
cmp
add
pop
out
cli
arpl
icebp
adc
mov
jmp
jmp
cmp
dec
rcr
mov
mov
fs
bound
sbb
and
push
adc
fmul
push
cmc
lods
sbb
clc
mov
mov
fnstsw
mov
ret
mov
addr16
push
push
aam
push
sub
fs
sbb
movs
jl
push
ins
ret
xor
push
xor
shl
shl
sub
sub
adc
adc
stos
jb
std
adc
sbb
(bad)
fdecstp
jbe
pop
jle
xor
xor
push
dec
aam
dec
jecxz
xor
(bad)
clc
inc
mov
mov
or
mov
mov
push
inc
retf
pushf
add
cwde
mov
mov
pop
cs
shr
cmp
jmp
iret
cmp
add
xchg
out
sbb
arpl
cmc
movs
scas
mov
cld
mov
add
mov
xchg
loopne
jg
push
adc
mov
push
fyl2xp1
jns
mov
xor
mov
jno
stos
dec
je
cmc
sub
adc
in
jg
lods
(bad)
mov
and
xchg
into
ds
xor
xchg
cmp
das
test
jbe
movs
mov
inc
mov
sub
sbb
mov
or
repnz
pop
xor
leave
outs
add
mov
fsubr
xor
pop
mov
push
jno
or
inc
(bad)
adc
mov
jmp
or
sub
xchg
cmp
dec
jg
add
or
mov
(bad)
jno
lahf
xchg
mov
adc
call
lea
xor
dec
xchg
mov
(bad)
add
icebp
pusha
js
jg
xchg
or
mov
dec
outs
pop
push
loop
jg
adc
iret
aam
xchg
add
out
or
xchg
mov
es
out
and
xor
ins
xchg
jo
dec
mov
adc
push
cmp
mov
push
stos
sub
mov
or
and
xor
in
std
unpckhps
pop
sub
jb
push
or
sub
jge
lahf
sbb
jg
shl
ja
cdq
dec
xor
imul
push
jmp
jmp
out
mov
mov
mov
sbb
inc
ficomp
inc
sub
pop
test
sbb
out
push
fdivr
das
dec
out
dec
rcl
adc
cmp
jl
push
dec
mov
loop
mov
jge
jmp
lahf
mov
add
cmp
sbb
mov
adc
jg
dec
xchg
mov
mov
jmp
and
jae
fwait
jmp
sbb
int
fs
outs
push
pop
(bad)
cmp
fwait
xor
xchg
add
sbb
and
loopne
lea
popa
xor
or
pusha
add
out
inc
ins
clc
shl
retf
sub
add
idiv
sbb
xor
iret
mov
inc
loop
int3
js
movs
cdq
jge
mov
cmc
sar
addr16
jg
scas
movs
bnd
xchg
jne
test
icebp
jmp
mov
xchg
ins
in
test
mov
sahf
mov
inc
jne
les
clc
and
pusha
cdq
sub
add
or
in
pop
int
push
add
jns
popf
jb
scas
not
xchg
xchg
je
sub
fwait
jmp
fucomip
mov
push
rcl
sbb
pop
push
(bad)
jo
repz
stos
mov
jecxz
shl
pop
push
fs
or
icebp
imul
mov
enter
cld
adc
cdq
repz
stos
jmp
jp
fwait
add
add
imul
pcmpgtb
repz
and
jnp
sbb
pop
xchg
cmp
pop
hlt
ja
fiadd
cmps
(bad)
jne
fisttp
add
imul
inc
test
cmp
lods
movs
and
fst
(bad)
les
and
sub
movs
sbb
push
mov
(bad)
fnstenv
stc
data16
xor
pusha
and
mov
add
push
cmp
mov
push
dec
adc
inc
xchg
mov
idiv
add
and
mov
fisub
repz
sub
sbb
cmps
add
inc
push
repnz
xlat
mov
lahf
stos
jmp
xor
cvtdq2ps
fldcw
or
dec
mov
imul
xor
repnz
shl
xchg
fs
xchg
mov
pop
dec
add
fsub
(bad)
in
in
test
fld
sar
jbe
xor
in
mov
jmp
bound
movs
movs
jl
xchg
stos
add
xor
jbe
iret
jbe
cmp
push
pop
mov
popa
pop
popf
push
adc
mov
ja
pusha
xor
movs
jle
or
str
mov
movs
out
pop
inc
inc
pop
call
in
adc
sub
and
adc
outs
gs
xor
mov
sub
dec
add
adc
add
cmp
mov
cmp
loopne
inc
scas
movs
fcmovnb
xor
jmp
jg
sub
jg
(bad)
lahf
js
cs
cld
inc
idiv
fbstp
xchg
xlat
std
push
(bad)
push
out
ret
adc
scas
jb
(bad)
sub
xchg
mov
cmp
mov
dec
mov
jge
stc
shl
sti
dec
adc
in
sti
cmp
mov
clc
adc
dec
sahf
jb
jl
pop
stc
mov
call
fwait
(bad)
jne
sahf
inc
and
imul
scas
mov
popf
adc
pop
aad
mov
sbb
imul
data16
mov
pop
hlt
push
retf
shr
call
cli
cwde
data16
dec
shl
sar
pop
cs
sar
mov
bound
movs
aaa
in
mov
mov
jb
ins
xchg
fwait
mov
or
hlt
xlat
dec
pusha
daa
inc
xor
adc
popa
(bad)
pusha
adc
adc
sbb
push
cmp
mov
bound
fsub
pusha
in
(bad)
shr
movs
lahf
add
and
mov
jb
pop
cmp
sub
hlt
fwait
jmp
xchg
hlt
pop
xchg
gs
scas
jb
cld
jge
sub
fsubrp
xor
call
jmp
dec
pop
repz
cli
(bad)
pop
add
pop
lods
test
inc
mov
dec
pop
scas
cwde
xor
stc
push
push
stos
std
stos
cld
cmp
dec
and
icebp
fcom
into
cdq
test
mov
xor
icebp
sbb
clc
cmps
and
(bad)
inc
fidiv
sbb
std
arpl
dec
fist
cmc
inc
jg
mov
cdq
push
xchg
dec
popa
dec
shl
and
outs
jbe
mov
xchg
mov
jnp
inc
pop
xchg
mov
mov
jnp
ss
adc
push
pop
cs
pop
leave
gs
int
les
push
and
je
mov
arpl
xchg
inc
aad
inc
icebp
lea
fcomp
adc
scas
push
cmp
fild
push
pop
dec
xlat
and
push
push
faddp
imul
mul
mov
mov
cmp
lahf
jecxz
mov
dec
fistp
xchg
xor
sub
fst
dec
add
stc
inc
push
int3
rcr
and
fimul
xchg
xchg
std
(bad)
mov
call
jmp
add
movs
pop
sbb
aad
cmp
jo
push
das
lods
scas
mov
add
sub
adc
fst
and
add
arpl
mov
out
jns
rol
rol
mov
xchg
ror
mov
ds
push
jmp
ret
mov
sub
enter
or
jne
mov
(bad)
(bad)
cmps
adc
mov
in
clc
pop
jp
or
pxor
mov
cmps
scas
mov
jmp
adc
scas
xchg
adc
jle
leave
xor
lock
jmp
ss
dec
jge
nop
outs
jb
fstp
xchg
sbb
jb
cmp
test
fbstp
adc
push
jmp
fwait
dec
fdivr
nop
jmp
pop
stos
sahf
push
int3
int
mov
add
cmp
movs
retf
jno
xchg
arpl
jmp
pop
jns
inc
cmp
ds
das
sub
dec
arpl
jo
adc
fld
cmp
xor
dec
in
stos
ins
popa
push
mov
call
clc
or
jl
in
(bad)
lahf
iret
shr
dec
push
add
lds
dec
clc
shl
push
xchg
mov
cmp
cld
test
and
mov
pop
(bad)
jae
int3
push
mov
mov
jg
jbe
adc
jnp
add
xor
int3
mov
dec
ins
xor
mov
cmc
push
imul
or
xchg
pop
ret
in
in
loop
leave
mov
shl
sub
nop
test
ds
pop
bound
jne
imul
scas
or
mov
inc
push
fsub
sbb
stc
pop
rcl
pop
into
lods
inc
pop
ficom
icebp
das
imul
popf
jl
lods
xchg
repz
jp
cmc
sub
xchg
fisttp
rol
sub
lods
sub
dec
push
lahf
fdiv
pop
push
jmp
sub
shl
push
add
fmul
and
cmps
cmp
jnp
push
adc
sbb
pop
mov
sbb
cmps
cwde
hlt
fs
mov
popf
mov
sub
or
mov
mov
test
fild
pop
mov
dec
div
or
mov
inc
sbb
xlat
xchg
(bad)
mov
dec
mov
retf
in
(bad)
(bad)
cli
dec
ins
dec
mov
fldcw
inc
jmp
mov
cmps
popa
inc
repnz
mov
push
imul
fs
lods
cmp
sub
sbb
xor
in
push
dec
mov
lds
xor
mov
adc
je
mov
test
jae
fwait
into
pop
mov
retf
mov
orps
and
repnz
daa
cmp
rcr
xchg
inc
fdiv
lods
xchg
add
(bad)
pop
shr
mov
inc
mov
fnstcw
sahf
cmp
inc
cmp
test
jmp
mov
mov
stos
out
ins
enter
mov
push
push
mov
cmp
cmps
xlat
add
popf
repnz
xchg
sbb
pop
cmp
(bad)
popf
mov
push
pop
js
xchg
xchg
sub
push
test
test
push
das
ds
cdq
fs
xchg
test
mov
sbb
sbb
outs
cmp
add
and
push
sbb
(bad)
inc
mov
in
adc
mov
push
ret
xchg
outs
cmp
outs
pop
xchg
into
cmp
and
dec
xor
dec
pushf
fldenv
mov
cmp
xlat
loope
daa
ja
sub
test
rol
fsubr
loopne
fstp
int3
in
sbb
leave
sbb
adc
mov
cmps
cmp
and
dec
pop
ret
pop
loope
jg
stos
mov
and
cmp
cli
fwait
stos
stos
scas
in
retf
fsub
push
pop
jns
scas
cmps
sbb
or
loop
addr16
mov
xchg
jg
dec
jnp
rcl
stc
cld
sbb
dec
inc
retf
ins
in
and
jno
pusha
xchg
jo
push
in
in
jnp
pusha
sahf
sbb
fild
push
push
sbb
push
loope
pop
cmp
xchg
mov
stos
mov
leave
dec
cmp
out
test
(bad)
inc
rcl
stos
sub
gs
and
mov
pop
and
fninit
aas
bound
ds
data16
adc
(bad)
in
jp
and
std
xor
sahf
enter
repz
lock
jae
push
sbb
lock
retf
sub
sub
or
add
inc
movs
xor
sbb
js
aaa
sbb
je
xlat
inc
pop
scas
push
stc
adc
add
icebp
xchg
pop
outs
aas
pop
les
mov
test
dec
inc
jle
sbb
addr16
and
fwait
stos
sbb
sbb
sbb
jns
adc
add
jl
sbb
jo
ss
push
popa
push
sub
mov
cmp
pop
push
pusha
mov
inc
pop
and
cs
xchg
jne
inc
push
dec
jno
xor
loopne
sbb
cmp
jmp
add
cmps
adc
lods
or
dec
out
dec
dec
dec
sbb
mov
or
add
xchg
mov
test
(bad)
push
jge
adc
sbb
cs
adc
cmp
icebp
gs
mov
jg
sub
(bad)
jne
js
sbb
jo
cmp
es
jecxz
xlat
pop
or
imul
inc
pop
adc
rcl
xlat
lea
push
inc
loope
lock
inc
mov
xlat
shl
into
sbb
adc
add
and
xor
push
sub
pop
push
daa
mov
fs
jno
and
jns
push
jo
lods
ins
push
adc
pop
lea
jmp
jnp
mov
cmp
inc
jbe
(bad)
push
mov
sti
das
sub
js
pop
ds
or
push
scas
pushf
ds
ins
mov
jae
xchg
fisttp
scas
or
sub
pop
sub
cmps
cmps
push
push
pop
pop
or
push
in
or
mov
mov
in
push
pop
imul
push
push
add
jns
in
in
nop
retf
call
sbb
pop
mov
push
mov
inc
test
sbb
or
call
(bad)
aad
in
dec
inc
imul
fwait
xor
scas
or
sub
add
ja
les
cli
mov
sbb
scas
test
clc
cmp
pop
dec
inc
repz
push
dec
dec
dec
test
les
test
xor
mov
inc
xor
dec
inc
fs
mov
cmp
add
mov
sub
repz
rcl
jecxz
dec
outs
popf
sbb
ins
outs
out
sbb
cld
ror
pop
jl
das
sub
dec
mov
xchg
jb
inc
and
pop
mov
fcmovne
sbb
jl
jmp
sub
scas
xor
adc
sar
popa
mov
push
fmul
(bad)
fxch
pop
push
push
add
imul
inc
rcl
or
inc
mov
aas
add
inc
mov
leave
pop
clc
mov
dec
push
mov
retf
gs
jno
(bad)
mov
cwde
or
push
mov
retf
cli
(bad)
dec
mov
lds
pop
scas
and
dec
push
push
dec
inc
or
jle
mov
out
xor
movs
popf
pushf
cmp
sbb
xchg
push
icebp
and
outs
mov
retf
adc
pop
aaa
cmp
dec
sub
adc
mov
sbb
mov
ds
mov
sub
mov
cld
mov
or
pushf
test
cmps
cmp
cmp
mov
call
repz
push
push
adc
leave
adc
rol
mov
cmp
adc
cmp
xor
dec
outs
inc
pop
repnz
lahf
ds
call
lods
mov
dec
jo
jo
push
or
das
data16
and
sldt
lds
iret
in
seta
jmp
xor
cmp
shl
mov
popa
stos
xor
sub
pop
jg
and
mov
dec
mov
jbe
int
cmp
sbb
push
test
ins
out
cdq
sbb
jp
xor
adc
out
push
xor
outs
pop
cmp
and
fucomip
mov
mov
push
out
inc
xor
in
nop
xchg
scas
std
jg
mov
mov
outs
cmp
cmp
mov
inc
je
in
stos
add
fcomip
jmp
das
popf
bound
push
xlat
iret
(bad)
mov
jle
adc
nop
jmp
inc
xor
loop
cmps
xchg
sbb
mov
pop
js
je
and
shld
mov
fs
mov
mov
jp
inc
stc
jbe
xchg
add
xor
loopne
inc
mov
dec
ror
stos
jne
es
popa
sbb
mov
loope
xchg
mov
enter
mov
idiv
jo
into
out
fsub
mov
icebp
xor
xchg
scas
pop
cmc
in
addr16
and
push
push
loope
into
in
fistp
(bad)
fadd
dec
cdq
cmps
mov
pop
adc
call
js
js
loopne
lods
rcr
add
jg
nop
sub
sub
or
sti
icebp
clc
dec
push
in
mov
jmp
push
fdiv
dec
xchg
add
inc
push
mov
push
jp
daa
call
xchg
ret
mov
dec
scas
inc
ret
mov
push
add
mov
(bad)
dec
push
es
aas
dec
dec
xchg
mov
xchg
adc
popa
jne
pop
fst
push
lds
push
daa
mov
jmp
xor
xor
pop
sub
cmp
mov
retf
xor
mov
pop
int
push
rol
inc
dec
push
pop
jmp
ins
bound
aad
fcom
sbb
sbb
fsubr
inc
scas
adc
mov
(bad)
cmp
aas
sar
cmps
push
jmp
cmp
popa
aam
mov
xor
sub
(bad)
daa
into
ja
adc
in
adc
cmp
jnp
fstp
pop
je
push
mov
je
jne
and
gs
pop
xchg
and
das
(bad)
scas
mov
stos
idiv
sbb
rol
wrmsr
xchg
push
pop
jge
ja
in
inc
adc
(bad)
imul
test
aad
mov
mov
mov
movs
mov
sbb
fbstp
cld
aam
shl
pusha
into
pop
and
test
cli
rcl
das
and
out
jno
adc
(bad)
xor
jae
sub
mov
cmc
sub
ret
popf
call
inc
xlat
jnp
iret
test
xchg
in
mov
mov
ins
stc
and
test
test
(bad)
mov
adc
mov
out
sahf
in
cmp
movs
add
std
aad
outs
and
stos
push
xchg
inc
cmp
jmp
push
cmc
jle
or
sbb
xor
add
fwait
adc
popa
in
jmp
xchg
add
test
mov
jb
adc
ret
imul
iret
bound
xchg
in
push
idiv
mov
or
stos
and
ins
adc
cmp
test
or
(bad)
test
xchg
repz
pushf
pop
int
push
mov
sbb
dec
ins
jae
cmp
and
sbb
adc
dec
push
test
(bad)
fadd
shl
hlt
fmul
clc
mov
xor
pop
fadd
mov
repz
xor
dec
imul
sbb
push
pushf
cdq
imul
jge
lea
pusha
push
and
stos
sub
std
sub
sub
mov
ins
mov
pop
jmp
or
mov
loop
imul
xor
outs
fwait
mov
pop
test
jg
dec
call
cmp
jnp
inc
hlt
mov
or
add
sbb
call
adc
mov
mov
jne
xchg
in
repz
sbb
pop
jl
movs
and
addr16
adc
sbb
test
sub
jmp
stos
fsub
clc
mov
les
sub
fistp
jmp
lods
(bad)
sub
fisub
rol
clc
mov
pusha
mul
add
and
icebp
push
adc
pop
pop
pop
mov
sbb
sbb
cld
mov
add
retf
dec
leave
sub
dec
push
lods
(bad)
or
out
jbe
movs
xchg
call
mov
push
das
test
jge
lea
fcomp
cmps
inc
inc
test
mov
jle
jle
lahf
mov
in
xor
not
cmp
add
xchg
loopne
mov
call
into
imul
loopne
sub
or
push
xchg
fs
push
stos
add
jnp
fsub
(bad)
mov
mov
sbb
popf
outs
cmp
sti
retf
out
dec
ja
xor
and
or
lock
mov
and
fistp
divps
push
sbb
jno
or
dec
and
aam
sbb
shr
sub
loope
fmul
std
arpl
rol
dec
sub
test
enter
fwait
xchg
scas
adc
mov
dec
mov
call
(bad)
hlt
loope
test
dec
aas
jmp
pop
imul
cmp
ror
mov
or
mov
mov
test
sbb
aas
xor
pop
hlt
mov
xor
je
sbb
mov
xor
mov
mov
loope
or
les
mov
and
shl
push
mov
or
pop
push
aas
mov
add
or
pop
mov
dec
sbb
cmp
push
sbb
scas
dec
mov
aam
leave
jne
add
stos
out
add
push
push
loopne
cmp
add
xor
push
das
mov
and
mov
or
(bad)
push
in
jbe
jl
sbb
cmp
cmps
cwde
fisttp
inc
daa
cld
or
and
xchg
push
ins
mov
mov
ror
js
or
mov
cli
int
or
dec
pop
scas
lds
add
or
inc
in
imul
gs
loop
shl
bnd
gs
ret
(bad)
aam
mov
inc
fstp
push
jecxz
js
enter
xchg
push
out
and
pushf
movs
int
pop
leave
xor
and
sub
inc
jp
jnp
jge
(bad)
or
mov
or
stos
in
dec
mov
in
clc
mov
xor
or
lods
mov
test
(bad)
imul
cmp
push
cli
sub
and
scas
ret
in
test
rcl
mov
adc
pop
mov
pop
aam
mov
imul
mov
mov
ins
pop
and
sahf
imul
das
(bad)
xor
xchg
(bad)
rcl
mov
pop
xchg
mov
adc
mov
mov
inc
test
push
mov
and
adc
mov
add
mov
push
cmp
cmps
sahf
lock
sub
addr16
je
fbstp
add
cmp
and
pop
push
sub
test
not
test
ins
pop
cmp
sub
out
jmp
fild
inc
jns
fdivr
pop
mov
adc
repnz
push
icebp
sbb
push
fldenv
ins
add
shl
mov
jnp
sub
mov
in
test
and
mov
mul
movs
inc
fistp
es
into
loop
jbe
dec
sbb
xchg
retf
sub
xlat
add
enter
movs
loop
jge
mov
in
(bad)
jmp
push
(bad)
pusha
gs
(bad)
cmps
jp
test
dec
or
or
sbb
outs
push
nop
data16
push
stc
cdq
push
stos
test
xor
imul
xchg
mov
arpl
jo
shl
test
ss
push
xchg
lds
out
inc
lds
adc
dec
cmc
loop
mov
shl
stc
xchg
xchg
ins
push
mov
sbb
pop
cdq
das
lea
cs
(bad)
aam
sahf
jp
xor
and
or
mov
jbe
and
mov
jmp
dec
dec
int
mov
popa
mov
xlat
imul
lahf
add
fdivp
stos
ret
movs
cmps
sub
mov
mov
lock
test
inc
push
rsm
dec
xor
es
fld
add
xor
push
adc
(bad)
or
nop
imul
sbb
sub
out
aad
jge
push
dec
leave
or
sahf
cmp
cmp
nop
xor
push
adc
js
lahf
cld
shl
and
lods
cdq
dec
cdq
in
adc
add
emms
daa
fbld
mov
sub
mov
fcomp
sub
jmp
mov
in
inc
retf
loope
rcl
mov
jmp
xchg
shl
push
stos
ret
ds
test
cmp
hlt
loope
xbegin
dec
(bad)
icebp
cli
test
fwait
adc
and
ss
inc
xchg
loope
(bad)
bound
mov
push
mov
add
(bad)
mov
repnz
stos
rol
mov
cmp
inc
jno
jg
ins
xchg
leave
repnz
jns
add
test
pop
mov
xchg
nop
sbb
push
push
mov
inc
loope
inc
in
sahf
pop
mov
icebp
popa
rcr
xor
jns
add
in
out
jns
push
push
scas
xor
jp
jle
movs
fisub
call
lock
cmps
adc
inc
push
xor
add
xchg
(bad)
aas
or
dec
(bad)
mov
das
pop
test
je
gs
jmp
pusha
inc
aaa
add
scas
or
out
mov
adc
loope
fstp
push
repz
mov
xor
add
inc
jbe
mov
cmp
cmc
popf
icebp
pop
dec
dec
les
mov
aaa
dec
add
sub
jge
cs
xor
into
sbb
inc
adc
aam
pop
push
push
das
mov
jne
(bad)
or
ror
loope
fisubr
dec
jbe
sbb
pop
fldenv
scas
xchg
clc
loopne
hlt
pop
pop
push
add
and
cmps
(bad)
cli
out
jg
xchg
adc
mov
in
mov
mov
test
pop
jmp
adc
les
push
arpl
das
pop
mov
xor
push
rcr
cmp
or
js
xchg
test
push
mov
popa
mov
cmp
adc
outs
pop
inc
jmp
mov
in
in
in
imul
add
test
ins
sbb
popf
mov
push
movs
ss
ret
xor
or
sahf
xchg
xchg
ror
push
clc
test
adc
sbb
mov
inc
dec
ss
ja
scas
enter
sub
call
pop
cmp
push
fwait
movs
leave
sub
add
(bad)
mov
cmp
int
sti
jg
aam
cmps
ficomp
nop
push
xor
mov
push
lods
(bad)
jg
add
std
pop
mov
jmp
sub
mov
xor
push
pop
mov
dec
loop
rcl
arpl
rcl
lock
push
pop
dec
xchg
cwde
stos
int3
loope
cmp
jl
xchg
mov
add
mov
stos
adc
stos
pusha
add
call
inc
inc
(bad)
cld
dec
mov
dec
or
enter
mov
out
mov
outs
fiadd
imul
out
sbb
bound
inc
dec
or
es
test
mov
pop
mov
inc
inc
fld
add
pop
dec
repz
in
sbb
add
pop
js
repz
pop
mov
fbstp
ror
xchg
xor
hlt
ds
sbb
scas
sub
mov
cmp
adc
jle
neg
test
mov
pop
loope
pop
scas
sbb
(bad)
jns
adc
hlt
arpl
mov
retf
dec
sub
loop
push
push
inc
cmp
xor
dec
pop
stos
sbb
push
std
popf
pop
add
pop
dec
scas
pop
pop
fisttp
bound
ret
in
and
iret
push
push
jns
inc
pop
xchg
cmp
div
ret
outs
sub
scas
fs
push
imul
and
aad
dec
inc
fs
aam
mov
sub
fwait
adc
clc
addr16
xchg
push
ret
mov
push
xchg
xor
xchg
jbe
jg
jmp
sysenter
pop
popf
jmp
clc
(bad)
xchg
mov
in
cwde
outs
fld
cmc
(bad)
mov
inc
rcl
test
(bad)
jp
and
loop
movs
arpl
repz
and
pop
adc
inc
push
push
cwde
xchg
lods
mov
pop
xchg
lods
das
mov
sahf
and
jl
adc
push
pop
(bad)
adc
mov
mov
pop
nop
lods
stos
mov
in
(bad)
out
jg
iret
sub
xor
(bad)
xchg
jno
div
jbe
test
dec
mov
jp
sub
pop
int
sbb
dec
es
stos
(bad)
pop
sar
xor
dec
mov
and
add
bound
pop
dec
imul
pop
mov
(bad)
cld
adc
ficomp
int
popf
test
mov
cmp
pushf
jmp
leave
arpl
stos
sub
inc
or
sar
pushf
std
sub
xor
adc
scas
xchg
pop
or
push
arpl
leave
jae
fsubp
cld
xor
aad
iret
js
fs
push
sub
enter
pusha
and
les
out
push
aas
aas
pop
shl
and
push
sub
fisttp
movs
sti
jg
call
stos
in
in
arpl
ss
es
dec
sbb
gs
popa
test
pop
and
adc
jge
(bad)
fwait
and
and
xchg
(bad)
call
cmps
inc
jmp
(bad)
clc
out
pusha
mov
jge
jmp
test
sbb
and
in
xor
js
lods
xchg
adc
adc
in
stc
sahf
dec
ja
pop
retf
mov
jl
mov
fnstsw
adc
push
mov
xchg
repz
dec
dec
jmp
div
aas
aas
cli
jae
leave
adc
xchg
sub
jns
leave
sbb
inc
xor
scas
add
jmp
inc
inc
jns
push
ins
push
sbb
pop
call
stos
inc
lea
div
xchg
jno
mov
imul
out
fcmovb
dec
mov
xchg
popf
mov
xchg
fcom
int
pop
add
xchg
inc
xor
rol
fld
adc
add
sbb
and
popa
or
es
movs
mov
pushf
push
mov
inc
xchg
ja
lods
imul
inc
pop
cmp
xor
out
adc
or
sbb
inc
loope
in
movs
stc
clc
aad
cmc
imul
ds
data16
pop
push
iret
retf
sub
sti
pop
mov
mov
sub
pop
add
ins
shr
mov
ret
mov
xor
in
stos
adc
adc
dec
dec
ror
pop
xchg
enter
ror
ins
sub
xor
sbb
jg
jnp
mov
inc
cmp
js
sbb
mov
mov
mov
(bad)
repnz
or
and
cmp
iret
mov
cmps
mov
xlat
xor
sahf
out
shl
movs
cmps
(bad)
cmp
mov
or
es
sbb
mov
cdq
mov
data16
add
xor
stos
arpl
or
push
pusha
les
cmp
imul
sbb
sbb
movs
mov
in
mov
arpl
fs
xor
test
mov
adc
push
arpl
cmp
inc
loopne
add
add
xlat
movs
and
jo
pop
inc
jns
inc
test
cmps
test
repnz
int3
inc
pop
int
arpl
jnp
mov
dec
push
push
push
fnstenv
push
fdivrp
ret
xor
jbe
movs
mov
sti
ret
push
mov
das
sar
cmp
mov
add
ret
dec
ret
(bad)
nop
xchg
adc
xor
pop
scas
shl
jbe
push
inc
adc
stos
push
cmc
(bad)
sub
(bad)
mov
outs
sub
fisub
jl
and
lods
jmp
dec
ret
repnz
mov
sub
adc
sbb
jae
adc
pop
out
xor
mov
push
loop
sbb
xchg
in
les
xor
xor
inc
lock
jle
call
shr
leave
pop
das
mov
fisub
ds
and
ror
repnz
cld
in
jne
lods
mov
(bad)
jp
shl
and
out
arpl
sub
loop
in
or
mov
xor
mov
mov
out
ficomp
mov
dec
pop
ja
mov
inc
cdq
and
outs
scas
pop
dec
out
cli
call
test
jno
std
inc
sbb
lods
nop
mov
mov
push
loope
outs
pop
sub
fidiv
fdiv
imul
jnp
cmps
into
hlt
mov
pop
fwait
mov
sbb
or
fistp
jge
clc
pop
or
or
icebp
mov
loop
sqrtps
xchg
push
xchg
sbb
call
(bad)
test
cwde
in
sub
mov
retf
mov
push
dec
(bad)
or
xor
scas
sbb
sub
jge
xor
mov
sub
js
cmp
push
jge
push
sub
add
xchg
jno
mov
xchg
add
in
mov
rep
or
addr16
mov
aaa
neg
pop
push
es
mov
les
retf
shl
inc
les
xchg
sub
xchg
pop
(bad)
xchg
mov
inc
jns
or
sub
loop
bound
sub
fcmovnu
cmp
sar
outs
and
mov
mov
daa
jmp
add
sub
in
mov
xchg
adc
addr16
and
lea
stc
call
inc
pop
lods
and
mul
clc
fs
fsubr
faddp
xchg
pop
xchg
jbe
loopne
dec
out
les
(bad)
mov
sub
cmp
or
sub
add
xlat
nop
int3
pop
xchg
push
and
(bad)
movs
push
mov
xchg
jp
hlt
dec
xchg
(bad)
or
out
add
or
and
sub
dec
adc
mov
fnsave
ret
add
lods
cmp
and
fyl2x
aam
pop
dec
and
or
sbb
movlps
dec
fsub
fdivr
int
mov
nop
pop
jl
pop
mov
mov
les
xchg
rol
out
leave
stos
add
ins
and
ss
std
pop
add
adc
mov
adc
mov
fcom
nop
sub
push
mov
shl
mov
sti
add
in
mov
mov
xor
add
add
dec
repz
xor
mov
jmp
dec
dec
xchg
out
aam
adc
or
adc
jns
(bad)
adc
jnp
mov
ret
stos
das
or
add
stos
test
adc
inc
adc
stos
or
in
pop
lea
in
jae
(bad)
ds
mov
rol
add
inc
leave
jecxz
add
inc
adc
nop
xchg
jg
mov
xchg
pop
imul
and
icebp
out
dec
pop
call
std
cwde
or
xor
sub
js
pop
and
and
cmp
call
push
jmp
mov
xor
add
jg
jnp
sti
pop
data16
out
xor
jle
outs
jmp
mov
sub
movs
xor
test
mul
je
(bad)
mov
push
test
mov
mov
add
ret
add
jns
movs
ret
sub
xor
and
pop
test
inc
das
xchg
icebp
stos
out
pop
int3
gs
jmp
jecxz
pop
inc
or
pop
mov
pop
mov
icebp
dec
(bad)
sbb
pop
movs
ss
lods
shl
movs
cmp
sub
pop
sub
addr16
daa
xor
sbb
xor
in
ds
or
sbb
and
out
iret
dec
lahf
daa
fistp
xor
pop
enter
dec
adc
pcmpeqw
mov
dec
and
retf
and
in
daa
ss
mov
pop
adc
ret
dec
outs
cwde
shr
adc
or
push
fdiv
adc
aam
inc
cmp
outs
fcmovnb
jbe
jp
dec
dec
out
pop
mov
jne
push
dec
add
aas
push
cmp
xor
repz
sub
mov
add
and
xchg
adc
sub
xchg
push
sbb
jmp
mov
cli
repz
mov
mov
shl
aaa
ss
inc
sbb
test
mov
pop
mov
stos
inc
je
adc
dec
xor
rol
mov
mov
xor
push
push
dec
mov
xchg
aas
rcl
jne
test
mov
xchg
outs
add
arpl
dec
mov
shl
aam
int
sub
xchg
mov
and
cmps
cli
sbb
xchg
mov
pop
jnp
mov
or
sub
aam
sub
fnsave
inc
mov
mov
bound
mov
fucom
jecxz
mov
cwde
in
test
add
sar
sahf
scas
outs
mul
adc
ret
mov
pop
popa
push
dec
cmp
loopne
inc
popf
adc
dec
mov
aaa
xchg
call
add
movs
dec
xchg
cmps
mov
stos
xchg
ja
js
lock
hlt
icebp
push
lds
shl
sti
jmp
int
push
ins
rol
cdq
(bad)
jae
sbb
jo
js
xor
ret
mov
xchg
and
dec
mov
lods
pusha
jecxz
out
sub
sub
shr
cmp
sbb
pop
sbb
cli
mov
mov
jo
ficom
xor
adc
cwde
fucom
jmp
jbe
mov
aam
stc
cmp
inc
mov
xchg
dec
cmp
repz
and
ja
mov
add
repz
sub
stos
jns
lods
cmp
inc
sbb
pop
cmc
fcmovu
or
pop
stc
leave
jmp
jge
and
mov
push
sbb
je
loopne
pushf
mov
(bad)
div
xchg
ins
pop
cmps
dec
test
push
xchg
xor
jg
adc
ins
out
inc
cmps
repz
(bad)
cmp
(bad)
imul
rol
xor
sbb
enter
sar
fmul
cmc
xchg
push
mov
sub
cdq
mov
lahf
test
mov
lock
sub
popa
jle
add
push
add
dec
cmp
adc
adc
inc
adc
mov
adc
sar
fmul
or
jmp
xor
push
push
cld
mov
pop
mov
jno
jbe
(bad)
out
or
cld
adc
fstp
fsub
or
and
push
stc
pop
dec
addr16
mov
call
mov
inc
mov
sbb
push
cmc
dec
push
cmp
inc
je
pushf
shr
cmps
pop
mov
out
push
dec
sub
mov
xor
bound
adc
hlt
cdq
xor
outs
or
in
sahf
adc
(bad)
fsub
adc
out
call
mov
push
fld
dec
and
gs
mov
aas
nop
jp
retf
sbb
mov
ficom
cmp
aas
aas
sub
sub
push
aas
push
rcr
dec
scas
xlat
ror
xor
xor
mov
xlat
or
stos
xchg
pop
ret
add
inc
mov
push
aaa
mov
inc
cmp
ror
movs
sbb
sbb
mov
mov
bound
(bad)
movs
sub
loopne
outs
iret
jp
cmp
cmp
movs
pop
or
(bad)
js
lock
pop
test
fxch
shl
inc
mov
into
cmp
mov
fdiv
pushf
xchg
stos
jnp
inc
fcomp
and
fs
out
std
pop
jle
cld
pop
cmp
jnp
add
sbb
push
sti
inc
jmp
dec
out
xchg
jmp
mov
dec
mov
mov
cli
movs
test
xlat
and
out
and
jp
jle
inc
xchg
sub
jb
cs
inc
in
or
jp
xor
test
mov
in
or
lahf
jecxz
pusha
pop
push
xlat
push
loope
fadd
leave
jecxz
push
call
sub
inc
push
xchg
fimul
call
sbb
mov
and
adc
leave
jb
adc
mov
lds
setp
ja
stos
sbb
in
cli
or
add
push
scas
enter
ret
nop
and
imul
sbb
gs
xor
outs
stos
jae
hlt
les
mov
fistp
push
mov
inc
pop
xchg
cmp
adc
pushf
jb
jge
add
adc
int3
ja
into
ja
movs
push
out
pop
repz
jne
sbb
(bad)
daa
xchg
sub
sub
retf
sub
and
lahf
repz
mov
ins
mov
inc
popf
inc
sbb
fistp
fild
xor
cmp
jmp
rol
sbb
mov
jne
nop
mov
jle
mov
call
pop
sub
and
mov
jmp
add
mov
mov
in
scas
pop
lds
test
fs
xchg
and
dec
outs
sbb
mov
xor
cwde
imul
(bad)
jo
inc
mov
jg
jne
packssdw
rol
dec
jmp
cmps
push
retf
mov
pop
mov
stos
repnz
ret
cmp
mov
xchg
icebp
jmp
add
cmp
ins
mov
mov
aas
test
rcr
out
fcmove
push
iret
int
aas
lock
test
mov
scas
enter
pop
add
loop
sub
clc
add
sbb
adc
inc
or
push
call
test
sar
xchg
dec
mov
xor
int
je
or
sub
cmp
dec
es
jp
lea
fisubr
dec
daa
jp
inc
or
inc
into
fadd
or
cmps
pop
mov
adc
xchg
xor
lea
mov
data16
in
ja
scas
adc
pop
ret
clc
lock
sbb
cli
push
out
or
fld
jp
fisubr
and
xor
mov
push
popa
mov
mov
jne
movs
loopne
sub
aam
outs
int
daa
cmp
xor
fistp
not
inc
push
scas
mov
inc
mov
sub
sahf
jg
rol
out
sub
bound
fsubr
je
retf
sub
imul
(bad)
sbb
cmp
add
jo
sbb
mov
sbb
cmp
outs
lock
cmp
dec
pop
aas
jae
ror
daa
inc
lock
stc
xchg
sbb
jg
shl
push
inc
retf
out
scas
pop
jae
add
fidivr
mov
mov
dec
sub
cmp
mov
outs
push
int
xchg
or
xchg
sub
dec
cmp
fcomp
and
int3
jmp
clc
mov
mov
test
rol
out
enter
scas
xor
out
rol
faddp
push
out
sub
pop
cmc
add
cmc
inc
sbb
sub
jmp
out
sub
dec
in
sbb
nop
push
xlat
mov
inc
dec
mov
lock
inc
retf
jbe
ret
cmps
(bad)
xor
adc
ins
lock
jae
xchg
mov
pusha
cmp
xchg
cmp
repz
mov
inc
icebp
mov
mov
repz
push
stc
inc
pusha
sbb
fwait
sub
mov
mul
aad
sub
push
ret
bsr
std
rcl
fisub
mov
xor
xor
sbb
aaa
sti
test
pop
sub
lahf
daa
daa
pop
jmp
ins
cs
popf
or
jl
fild
jp
test
push
sbb
or
scas
out
xchg
sbb
movups
(bad)
pop
pop
jae
sbb
mov
pop
sbb
and
add
clc
out
inc
sbb
lods
push
sbb
(bad)
je
or
pop
aas
jno
cmps
arpl
jns
inc
rol
jle
cmp
push
inc
xor
movs
kmovb
ror
jg
sbb
in
cli
repz
lahf
mov
sub
cmp
out
inc
outs
push
or
shl
ret
inc
add
aas
je
lea
lahf
(bad)
idiv
inc
pop
pushf
sbb
inc
jo
hlt
sti
push
sbb
xor
mov
std
or
(bad)
(bad)
and
adc
ds
jmp
xor
cli
dec
(bad)
mov
mul
adc
pop
push
(bad)
cmp
mov
in
pop
fwait
and
arpl
aaa
(bad)
fdivr
ja
jo
jmp
jb
mov
push
inc
mov
fwait
xchg
push
sbb
mov
(bad)
scas
jb
mov
jb
pop
retf
enter
pop
pop
push
jecxz
sbb
add
jbe
std
daa
and
pop
mov
sahf
mov
jae
in
dec
retf
jle
sar
leave
repz
add
mov
add
fcomp
test
das
cli
aaa
test
mov
stos
imul
jmp
shl
js
jbe
(bad)
(bad)
adc
pop
xchg
mov
push
mov
mov
js
enter
mov
inc
nop
arpl
mov
pop
das
mov
jg
cmps
int3
adc
fdiv
fs
call
mov
mov
cwde
mov
loope
fwait
data16
cmp
call
fimul
stos
adc
ja
leave
and
xchg
out
add
sbb
jmp
fdivr
scas
(bad)
cmps
xchg
js
(bad)
mov
mov
dec
jl
sar
ja
sub
cmp
mov
sar
cwde
xchg
sbb
add
adc
daa
lods
fisub
jle
xlat
adc
push
cs
and
lahf
add
push
inc
add
jns
dec
push
call
pop
inc
loope
jmp
fidivr
inc
(bad)
adc
or
or
shr
sti
cwde
popf
push
cmps
mov
add
sub
test
lods
dec
sbb
sbb
adc
int3
or
sbb
push
jne
inc
mov
loope
xor
push
scas
das
ins
cmp
es
inc
pop
stc
jle
call
lods
xor
mov
and
call
sbb
test
adc
aas
cmps
push
add
jecxz
aaa
imul
xor
cmp
or
test
fnsave
sbb
out
push
jmp
pop
aas
add
xchg
mov
cmp
mov
(bad)
rcl
sbb
aaa
sub
scas
enter
ss
vpminub
sahf
and
dec
xor
lods
hlt
adc
add
sbb
movs
mov
inc
les
lock
adc
push
or
add
je
fwait
pop
mov
pop
sub
ret
adc
cmp
sub
mov
jmp
push
ins
push
mov
jecxz
fcom
movs
jecxz
jle
stc
imul
data16
leave
pushaw
mov
mov
cmp
sub
je
rcr
xchg
ss
add
loopne
mov
(bad)
jmp
push
xchg
jo
ss
sub
sub
mov
xchg
adc
ja
cmp
into
stos
cs
movs
sahf
or
or
mov
ss
cmp
xchg
cmp
pop
fld
jl
mov
xor
pop
mov
jmp
jmp
mov
out
mov
inc
mov
mov
mov
outs
ds
xchg
pop
lods
cdq
add
stos
loope
dec
dec
mov
dec
movs
int3
sub
imul
jno
push
inc
push
jecxz
repz
imul
test
idiv
outs
dec
jmp
jg
je
push
lods
int3
fdivr
loop
mov
dec
std
out
push
mov
pusha
dec
jge
(bad)
ss
add
scas
rcr
and
enter
mov
scas
mov
mov
xor
jmp
cmc
in
mov
mov
jae
popf
loope
sbb
fist
call
cs
test
push
cmp
stc
dec
xor
fs
sbb
xor
ror
cmps
in
xlat
rcl
adc
jo
fimul
jecxz
adc
ss
xlat
jg
jo
ja
mov
sbb
sbb
rcr
mov
xchg
adc
movs
ins
sub
xchg
mov
xchg
mov
sub
in
sub
iret
cmps
cmp
das
mov
mov
sub
add
adc
ds
loop
(bad)
mov
mov
dec
sub
add
aam
or
out
adc
mul
dec
mov
stos
imul
enter
jmp
add
xchg
stc
dec
xor
adc
fdiv
add
inc
pusha
jbe
test
lock
and
fcomi
in
jne
dec
test
pusha
(bad)
fsub
push
push
push
mov
lods
jne
into
add
push
cmps
cdq
mov
xor
jecxz
out
ja
mov
sbb
sub
enter
push
mov
retf
jl
cmc
adc
sbb
cmp
mov
mov
inc
adc
jne
dec
mov
out
or
mov
push
add
iret
push
fld
call
ss
jne
mov
mov
inc
sbb
or
sub
dec
rcl
dec
pop
retf
ss
sbb
iret
call
rcl
adc
les
jno
pop
mov
dec
in
sar
pop
inc
jmp
xchg
daa
dec
mov
fnstsw
int3
or
ja
fsub
mov
xchg
enter
retf
cli
(bad)
sbb
rcr
jns
inc
fcom
ret
add
adc
pop
jmp
pop
fwait
xchg
test
pop
xor
and
mov
mov
or
pop
test
mov
es
xchg
or
call
jecxz
ja
hlt
jbe
jle
jmp
sti
mov
gs
test
pop
sub
outs
adc
xchg
dec
(bad)
or
shl
call
push
adc
cmp
mov
jo
popa
aad
mov
fisub
ficomp
dec
repz
stos
clc
lods
pop
adc
loop
xor
and
popa
loope
jmp
pushf
mov
fs
push
mov
inc
push
mov
mov
and
mov
jmp
cmp
push
cld
test
icebp
mov
xlat
xor
call
test
xor
sub
mov
dec
and
nop
adc
inc
lock
pushf
add
test
int3
sub
mov
jno
sub
(bad)
in
js
inc
dec
push
pop
xchg
push
outs
mov
mov
sbb
mov
test
loop
inc
sub
dec
jns
cmp
mov
ins
pushf
pop
push
test
fwait
out
push
fisubr
push
push
pusha
(bad)
es
int3
pop
fwait
clc
cli
test
ins
xchg
adc
(bad)
call
xor
daa
pop
push
lods
xchg
push
fcmovbe
nop
dec
(bad)
push
inc
push
in
xchg
push
sub
inc
inc
pusha
mov
(bad)
dec
and
test
dec
add
ret
or
xchg
adc
ja
sbb
stos
mov
xor
xor
jmp
cmps
int3
push
lea
aam
popa
(bad)
add
mov
cs
mov
fidivr
ins
addr16
xor
stos
out
icebp
mov
adc
fwait
outs
call
mov
fcmovne
mov
shr
fbstp
mov
sub
fst
cmp
dec
pop
jne
xchg
jle
cld
scas
push
xor
fnstenv
pop
sbb
hlt
pushf
popf
dec
leave
dec
fdivr
(bad)
fld
out
cdq
call
push
aam
xchg
enter
aas
int
rcl
or
das
ret
arpl
out
out
or
and
arpl
in
xlat
sbb
sbb
sahf
outs
pop
(bad)
hlt
mov
cld
idiv
call
cdq
bound
push
cmps
into
repz
popa
and
ins
pop
sub
adc
pop
ret
out
mov
inc
(bad)
dec
mul
sbb
inc
inc
clc
dec
(bad)
popa
jge
(bad)
stc
push
pusha
daa
iret
ja
cwde
out
sub
adc
and
mov
rcl
push
out
mov
mov
mov
add
loope
rol
mov
sbb
mov
test
jne
sti
out
mov
dec
imul
mov
retf
stos
ficomp
out
je
pop
jo
xor
mov
xchg
and
sbb
jge
push
(bad)
jmp
in
ins
rcr
inc
sbb
sub
cmc
add
dec
(bad)
lock
sti
movs
adc
fwait
add
inc
mov
xchg
jbe
cmc
ins
cmp
lea
dec
icebp
cwde
jbe
ss
pop
push
xor
xor
test
leave
loope
daa
cmp
xchg
(bad)
sti
fisttp
dec
jmp
sub
stos
sub
push
rcl
sbb
retf
sub
dec
addr16
sbb
fwait
mov
pop
hlt
fadd
ret
arpl
sbb
push
add
mov
data16
sbb
push
pop
sahf
and
jmp
xchg
push
push
mul
(bad)
jne
dec
sbb
cmp
push
pusha
inc
xor
ja
push
in
test
jge
into
cdq
sub
lea
sbb
cmp
lds
(bad)
retf
imul
cmp
ret
sbb
xor
add
sti
out
shl
(bad)
mov
jne
call
lods
mov
movs
pop
test
mov
or
push
int3
mov
pop
cmps
jmp
xlat
lods
rol
aaa
clc
jae
sub
pop
push
sti
movs
(bad)
inc
mov
cmp
cmp
in
push
mov
int
dec
scas
fsub
aas
sbb
dec
pushf
ins
dec
jno
movs
stos
ja
mov
loop
pop
cmp
xor
das
popa
fcom
add
movs
jne
jne
lods
into
jg
icebp
jo
mov
mov
mov
jge
dec
pop
pusha
xchg
add
jmp
int3
jp
pop
mov
pop
and
push
xchg
sbb
int
mov
jle
xchg
retf
(bad)
xor
icebp
inc
jmp
out
xchg
xor
bswap
fistp
in
mov
nop
sub
push
in
inc
popa
cdq
mov
and
cmp
mov
sahf
sbb
ja
cmc
imul
pop
mov
int3
jnp
adc
cld
leave
cmc
xchg
push
jg
pop
push
cld
(bad)
out
xor
sbb
inc
into
sar
xchg
or
fmul
repnz
test
push
test
add
iret
lods
cmova
aad
push
xchg
rcr
mov
push
push
movs
dec
or
ins
mov
cmp
jnp
push
cli
fs
cmp
push
mov
mov
test
adc
neg
arpl
sub
ds
and
mov
push
pop
cmp
in
popa
xor
jns
push
(bad)
pop
rcr
add
push
inc
outs
pop
rcl
jno
xchg
outs
inc
jmp
ins
pop
xchg
int
or
rcl
or
cmp
xor
push
pop
push
cmp
adc
mov
ficom
scas
jle
imul
and
xchg
mov
mov
cmp
ds
shr
push
pop
popa
cld
fs
aas
sub
fdivr
cmps
aad
sti
retf
(bad)
jo
nop
xchg
dec
movs
sub
adc
iret
dec
mov
imul
inc
mov
or
push
mov
xchg
scas
(bad)
push
imul
sti
push
iret
les
pop
retf
xchg
or
sbb
jecxz
mov
shl
sbb
mov
cld
test
(bad)
sub
adc
int
mov
jno
nop
and
cmp
rcr
pop
jo
loope
xor
cmps
frstor
jmp
or
dec
aas
enter
mov
stos
pop
shl
(bad)
out
sub
(bad)
jp
leave
or
mov
or
adc
int3
and
scas
lea
mov
int3
clc
popf
stos
rol
bound
xchg
in
xchg
dec
jecxz
push
sti
rcr
into
adc
(bad)
mov
cmp
imul
add
push
pop
push
xchg
aad
mov
and
shr
ror
and
retf
bound
adc
xlat
mov
push
jns
xchg
cmp
xor
and
popa
aam
ins
cmp
jns
sahf
sub
aam
dec
pop
add
jne
dec
or
imul
shufps
fmul
jge
sbb
add
enter
inc
addr16
add
mov
push
sub
jg
mov
sub
arpl
push
out
outs
ss
xchg
jle
push
dec
sub
mov
inc
popa
xlat
daa
mov
ret
mov
cmp
jb
mov
xchg
pop
mov
sahf
push
and
movs
mov
add
mov
mov
sub
and
fucompp
fdivr
not
fisub
leave
push
cmc
rcr
out
dec
cli
or
sti
pop
push
fdivr
aad
xor
pop
cmc
cmp
inc
shl
retf
(bad)
jmp
dec
cmp
call
in
test
pop
mov
out
test
int
cmp
shld
cmps
fwait
mov
fmul
xor
imul
ds
in
(bad)
pop
xlat
mov
jnp
(bad)
fadd
pop
inc
lods
pop
fisttp
mul
or
lahf
jl
mov
pop
rcl
mov
inc
(bad)
in
push
(bad)
mov
mov
aam
mov
jge
push
add
mov
xor
mov
cwde
movs
dec
lds
mov
scas
iret
pop
and
dec
sahf
(bad)
sbb
les
cmc
jl
xor
or
mov
stc
jbe
jbe
xchg
mov
stos
adc
fwait
not
in
jecxz
fdivr
pop
and
xor
lods
cdq
jge
sub
lods
fmulp
mov
jae
adc
in
pop
inc
bound
call
mov
out
mov
imul
in
dec
adc
lea
in
imul
stos
xchg
adc
inc
cmc
jne
cwde
add
scas
sar
shl
sbb
(bad)
in
push
gs
fcmovu
jg
jae
fbld
mov
daa
jmp
das
(bad)
imul
inc
jno
enter
adc
sbb
imul
stos
sbb
xor
sbb
scas
mov
push
hlt
mov
fld
pop
xor
mov
std
xchg
jbe
mov
adc
fdivr
data16
arpl
adc
inc
sub
mov
jns
add
dec
rol
cmps
xchg
es
test
rcl
mov
daa
push
ins
ret
dec
xor
scas
std
sub
cmps
xor
test
inc
mov
bound
movs
pushf
mov
and
push
and
pop
mov
outs
xchg
outs
jo
mov
inc
adc
mov
mov
dec
je
add
inc
pop
out
xor
pop
idiv
fimul
sub
xchg
outs
call
sub
pop
push
sub
fstp
(bad)
inc
ds
mov
fadd
adc
retf
sbb
call
jmp
test
adc
pusha
imul
imul
imul
mov
xchg
inc
cmp
cld
fidivr
or
mov
leave
out
outs
sbb
enter
adc
jg
and
mov
mov
sahf
or
inc
repz
cwde
sub
mov
mov
es
test
inc
leave
pop
ja
xchg
fsubr
out
xor
iret
cli
(bad)
cmps
and
push
xor
cld
jnp
jl
jmp
push
retf
repz
mov
in
jae
or
or
fwait
data16
sbb
push
add
jno
arpl
popf
xor
mov
jmp
push
mov
shl
lock
test
pop
and
lahf
mov
push
cmp
jo
jle
mov
cmps
arpl
(bad)
out
sar
arpl
or
mov
mov
xchg
jbe
retf
and
push
adc
jmp
icebp
jl
mov
les
mov
mov
pop
fcomip
dec
pop
xor
cmp
pop
enter
fsubr
ss
movs
popa
inc
push
inc
out
cmp
mov
cmp
jae
movs
test
repz
clc
and
movs
push
dec
icebp
lea
icebp
push
cmps
mov
xchg
xlat
dec
lock
mov
mov
pop
retf
pop
repz
sub
mov
mov
loop
int3
fbld
or
push
out
aad
mov
aam
and
adc
adc
mov
or
add
dec
dec
mov
test
addr16
push
leave
or
xchg
ds
xchg
mov
mov
xchg
inc
in
loope
cmps
sub
pop
xchg
sub
mov
xchg
pop
push
jnp
outs
(bad)
lods
jnp
sar
inc
ror
cli
pop
das
aad
out
mov
mov
fwait
sub
lods
inc
cmp
loopne
test
es
repz
dec
mov
out
(bad)
mov
imul
popa
xor
cmp
push
and
sub
xchg
out
js
punpckhbw
rcr
rcl
fucom
xlat
add
aas
movs
jge
mov
mov
es
adc
cmp
adc
call
and
stc
lods
push
cmp
fsubr
leave
shr
(bad)
js
jnp
jg
jne
xchg
fmul
mov
xchg
fwait
rcl
popf
fld
jne
add
lock
nop
jmp
pop
mov
rcr
loope
cmc
push
xchg
adc
xchg
clc
mov
rol
fild
jne
sbb
mov
int
js
in
mov
mov
int3
and
adc
leave
nop
cmps
fwait
in
nop
push
push
mov
fmul
add
mov
xor
mov
outs
ror
shl
repz
xchg
pop
xchg
cli
out
dec
push
add
int3
popa
scas
sbb
xor
push
pop
jg
inc
mov
fsub
mov
mov
sbb
pop
pop
and
mov
mov
push
mov
les
movs
test
frstor
adc
and
xchg
retf
mov
push
sbb
cwde
fimul
imul
xor
cmp
(bad)
in
outs
sub
mov
bound
test
call
pusha
inc
cmp
shl
jo
jns
daa
add
push
nop
dec
ror
out
leave
lock
jmp
jl
call
jno
mov
call
in
jecxz
sahf
sub
xchg
or
out
fdivr
js
push
ret
mov
loop
fcomp
adc
ja
xchg
or
cmp
in
retf
or
xlat
out
push
pushf
xchg
neg
inc
ret
mov
loope
(bad)
movs
inc
sub
icebp
retf
xor
not
pusha
sbb
mov
sbb
add
and
dec
movs
xchg
jecxz
into
popa
in
mov
cmp
pop
lock
(bad)
or
jmp
nop
stc
cmp
push
ja
xor
ret
add
add
out
pushf
pop
and
and
stc
ja
dec
shl
sahf
adc
xchg
into
ficom
out
cmp
sub
es
push
std
cli
dec
leave
adc
or
out
and
inc
imul
je
jnp
lahf
jbe
repz
push
push
add
enter
rcl
push
outs
arpl
ret
xor
add
pop
add
mov
stc
xor
lea
xchg
xchg
inc
stos
mov
cld
das
mov
and
stos
ins
mov
sub
add
adc
stc
jnp
(bad)
test
inc
pop
pop
dec
lahf
xor
adc
mov
aad
dec
jnp
outs
popf
jg
adc
mov
jmp
jno
push
mov
jmp
and
and
hlt
mov
and
pop
data16
(bad)
inc
call
xor
xchg
inc
cmp
aam
nop
sub
xor
mov
arpl
jecxz
or
adc
mov
sub
push
out
dec
cmc
cmc
or
xchg
shl
jne
dec
fcomip
sbb
sahf
shl
fadd
(bad)
add
daa
xchg
sub
nop
jecxz
cmp
mov
cmp
pop
stos
push
shl
add
loop
out
mov
mov
in
sub
mov
inc
movs
lods
mov
cmps
movs
sbb
mov
int
sbb
adc
retf
push
fbstp
sub
je
cwde
test
push
dec
rcl
rol
inc
repz
fldcw
in
jmp
lahf
jmp
inc
gs
xlat
test
scas
and
or
aas
sar
mov
xchg
jo
and
push
fisub
mov
mov
and
jl
mov
jo
add
push
test
inc
pand
or
fcmovbe
shl
dec
mov
cld
mov
movs
fs
mov
out
lock
and
cmp
shl
data16
std
retf
inc
sub
xor
adc
push
retf
push
dec
xor
nop
jecxz
movs
jecxz
dec
mov
repnz
push
cdq
jne
push
jmp
movs
rol
aas
xchg
xor
jo
clc
push
stc
pusha
jno
cmps
movs
jns
mov
call
pop
pop
lahf
cwde
sub
push
inc
int
xchg
je
fcomp
nop
stos
or
push
mov
sbb
mov
cwde
aam
pop
xor
cmps
adc
xchg
mov
imul
or
and
ja
daa
cmp
or
out
loopne
into
fwait
pusha
retf
bnd
(bad)
outs
or
or
sti
pop
inc
int3
pop
push
int
jno
xchg
lods
cmps
push
xchg
xor
add
pop
test
adc
pop
out
jmp
pusha
cdq
les
sbb
cli
ja
sbb
pop
int
stos
mov
loop
push
stos
mov
mov
movs
pop
jecxz
(bad)
aaa
fst
test
push
mov
rol
and
push
xchg
push
mov
out
arpl
adc
add
inc
test
jnp
iret
or
les
cmp
pop
sub
mov
(bad)
inc
neg
mov
xchg
loopne
add
jns
mov
adc
dec
or
bound
pop
jb
cli
out
std
loopne
icebp
gs
repz
add
xchg
les
fist
js
movs
sahf
imul
or
ret
mov
test
and
pop
out
cli
jl
mov
sub
loop
mov
inc
adc
or
std
adc
add
push
mov
xchg
push
cmp
out
jl
mov
mov
mov
bound
ins
div
inc
xor
jns
popf
mov
push
sub
add
adc
dec
jecxz
in
cs
adc
es
cdq
loopne
repnz
sub
fimul
and
jp
test
adc
adc
jmp
call
sti
(bad)
ss
add
add
push
and
(bad)
int3
sbb
leave
sub
pop
ja
lea
push
cwde
dec
mov
mov
(bad)
rcr
test
jmp
xchg
shl
fs
cmp
leave
mov
rol
cs
xchg
jne
in
lds
mov
push
jno
and
mov
mov
inc
xchg
inc
inc
mov
mov
mov
pop
add
cmps
scas
xchg
adc
mul
xor
out
repnz
dec
lds
aam
push
dec
ret
inc
fwait
pop
icebp
pushf
cwde
sub
pop
mov
sub
mov
ror
add
and
pop
and
movs
movs
mov
and
push
(bad)
jge
jmp
pop
push
mov
mov
or
add
imul
cmp
nop
pusha
inc
iret
pusha
push
scas
adc
dec
adc
sub
sar
jbe
scas
call
cmp
xor
lahf
xor
ins
and
push
mov
or
mov
jl
or
loope
lods
jmp
xor
daa
sub
std
cwde
cmp
mov
xchg
std
clc
sub
bound
dec
and
and
push
ins
js
inc
jb
push
rcr
sbb
cdq
pop
or
dec
jbe
pop
and
mov
js
sbb
dec
adc
retf
add
mov
in
or
dec
stc
mov
mov
mov
jmp
mov
fbstp
push
xor
push
mov
mov
sbb
int3
mov
xor
and
mov
adc
pop
jmp
test
mov
mov
adc
nop
jp
dec
stos
jbe
fsub
call
or
in
jo
(bad)
cmp
inc
mov
jns
jne
push
inc
mov
aad
add
aas
fldcw
sbb
mov
fisub
stos
mov
xchg
adc
pop
add
or
test
push
sub
xchg
or
mov
sbb
fcomp
adc
sbb
rcr
fcmovu
add
mov
lods
add
mov
sahf
jge
mov
pop
mov
push
mov
(bad)
arpl
jle
mov
push
in
ds
je
sbb
popa
cli
lods
mov
add
push
or
repz
sub
stos
out
push
jg
pusha
aad
icebp
xlat
sub
or
pop
xlat
sbb
add
mov
repz
mov
leave
inc
add
mov
pushf
shl
repz
sbb
wrmsr
jle
xchg
sub
out
call
jmp
dec
shl
repnz
adc
jne
sbb
les
push
xor
dec
add
lea
adc
outs
ret
into
ror
outs
sbb
cdq
dec
inc
dec
mov
(bad)
out
call
imul
mul
pop
daa
idiv
sti
push
xchg
retf
bound
ret
or
neg
pop
xchg
aam
pop
mov
daa
cmc
leave
mov
out
cs
mov
shl
jb
xor
rcr
push
push
cs
jge
repz
aas
cwde
push
enter
push
cs
inc
push
repz
sar
inc
loopne
xor
cld
push
jb
(bad)
ds
cmp
shr
std
xor
fst
fsub
sub
pop
(bad)
dec
sub
dec
mov
lods
pop
fnstsw
inc
mov
out
sbb
and
jne
add
femms
or
sbb
mov
ret
adc
popf
mov
xchg
mov
jno
jo
sub
and
(bad)
jmp
dec
aad
int
dec
jo
cwde
jl
inc
push
movs
push
retf
popf
push
add
jae
sub
hlt
gs
pop
jp
jne
cwde
xchg
add
ror
xor
push
(bad)
mov
sub
sub
ret
adc
inc
mov
xchg
repnz
adc
and
xor
test
pop
(bad)
jge
aam
or
or
out
add
add
ds
inc
test
(bad)
mov
jno
push
cmp
push
les
add
or
mov
or
cmp
push
test
jecxz
cmp
not
inc
das
repnz
clc
or
sub
mov
je
mov
xchg
xchg
pop
(bad)
dec
inc
shl
add
dec
sbb
adc
jo
jecxz
inc
push
fdiv
pop
in
imul
xchg
jmp
aam
xchg
rcl
neg
outs
jmp
and
out
cmp
pusha
outs
mov
pop
sbb
shr
fimul
lods
jns
aad
das
add
push
repz
inc
(bad)
jmp
pusha
inc
sbb
and
push
test
xor
mov
sub
std
call
push
cli
cs
mov
rcl
or
lock
aaa
dec
std
sub
scas
ret
shl
lods
popa
clc
retf
sbb
cmp
jo
cmp
sub
mov
mov
movs
rcl
sub
imul
push
aad
(bad)
add
pop
mov
sbb
retf
and
sar
inc
sbb
(bad)
out
inc
sbb
add
call
pop
mov
out
ja
daa
vpmacsdql
mov
pop
fwait
popf
stos
jbe
cmp
gs
add
(bad)
out
dec
je
leave
mov
icebp
mov
adc
cmps
xchg
ins
jo
mov
push
inc
dec
rcr
mov
loope
xchg
or
adc
inc
repnz
jl
pusha
sbb
adc
or
cwde
mov
les
add
and
and
dec
adc
adc
jmp
cmc
or
(bad)
std
mov
cs
xor
mov
pop
mov
(bad)
lock
inc
mov
in
xchg
stos
push
jo
aaa
pop
sbb
ret
aad
imul
cs
aam
dec
pop
mov
daa
sub
pushf
icebp
cmps
push
bound
push
test
push
std
mov
pop
lea
xor
dec
mov
stos
or
mov
pop
(bad)
jno
xor
pop
pushf
push
sub
or
popa
dec
movs
call
mov
lods
iret
jle
repz
icebp
dec
int3
(bad)
jmp
sub
jns
mov
mov
cld
xchg
xor
outs
sub
jp
ds
mov
adc
std
mov
pop
jle
xor
repz
ins
xchg
std
shl
jne
rol
xor
inc
xchg
inc
enter
arpl
sub
pop
nop
xor
mov
adc
loop
retf
xor
push
pop
outs
and
cmp
popa
push
xchg
push
dec
daa
or
xchg
dec
addr16
dec
test
ss
and
cmps
fs
add
stos
mov
cmps
pop
hlt
pop
adc
arpl
aaa
dec
mov
ja
pop
mov
add
ss
inc
mov
or
xchg
outs
or
inc
inc
pop
fisttp
pop
imul
adc
lods
mov
lods
loopne
dec
ret
retf
jnp
lods
stos
(bad)
ss
ror
dec
fadd
nop
mov
fist
and
fsubr
(bad)
cmc
inc
xor
inc
je
xchg
and
cmp
xchg
push
out
in
add
fst
clc
popf
js
cwde
(bad)
xor
scas
push
jge
movs
and
mov
pop
add
sahf
xor
sub
inc
mov
jle
(bad)
leave
mov
cmp
retf
lea
mov
jmp
push
nop
dec
sub
jp
jmp
or
xchg
dec
push
iret
sub
aad
outs
adc
mov
jo
sub
cmp
push
sti
aas
mov
in
push
ins
pop
retf
inc
mov
sbb
jl
mov
push
mov
cvtps2pi
fnstenv
jl
les
xor
inc
gs
mov
or
cmp
sahf
push
jmp
cld
(bad)
ds
adc
pop
or
inc
sbb
or
pop
test
inc
pop
fnstenv
sub
sub
jge
ss
jmp
icebp
out
jbe
inc
fild
cmc
out
into
stos
bound
ds
fwait
or
inc
sub
repz
out
xor
popf
mov
xor
sub
jbe
or
ret
mov
jnp
ja
pop
xor
mov
mov
fstp
int
fcmovu
fbstp
sub
out
cmp
pop
ret
ficom
push
mov
call
xchg
or
jp
pop
jg
loopne
jbe
imul
inc
mov
retf
xchg
loopne
pop
and
cli
sbb
daa
xchg
daa
push
fiadd
dec
jl
dec
mov
sti
xchg
jmp
inc
dec
imul
test
mov
out
sub
fisubr
xchg
and
int
jmp
(bad)
loope
ins
inc
xchg
cmp
push
fnsave
lods
adc
sub
or
hlt
jnp
adc
sbb
loope
mov
jp
sub
dec
mov
lahf
inc
in
xchg
and
mov
outs
les
xor
dec
cli
outs
js
mov
es
pop
mov
cli
xchg
cmp
in
sbb
mov
xor
mov
or
ret
mov
popa
lods
ins
pop
adc
int3
pop
sub
jmp
cwde
clc
jecxz
cwde
in
fwait
jnp
out
clc
mul
mov
cmp
cli
sbb
cmps
adc
push
dec
push
cmps
call
iret
aaa
add
mov
loopne
mov
dec
sub
dec
loop
push
jg
jno
pop
cmps
xor
push
jle
dec
cmps
cld
jge
pop
leave
jno
push
ret
repz
sub
adc
add
jecxz
mov
push
xlat
jg
addr16
mov
(bad)
inc
mov
jge
adc
sti
pop
loop
lea
xchg
in
push
lods
sar
gs
outs
iret
or
mov
xchg
enter
push
outs
dec
repz
cwde
xchg
movs
add
mov
movs
std
cmps
loope
je
and
lds
and
and
scas
call
adc
dec
sahf
stc
mov
in
sub
stc
sbb
dec
mov
pushf
lahf
test
sub
xchg
fidiv
mov
or
adc
push
xlat
scas
mov
in
out
inc
scas
data16
mov
nop
gs
sbb
jnp
dec
mov
mov
aam
cmp
cmp
xchg
push
cmp
in
jns
sub
and
xor
inc
shl
(bad)
mov
add
test
(bad)
mov
inc
shl
popf
push
test
inc
lods
mov
addr16
(bad)
scas
cmp
mov
out
inc
or
ret
int
aaa
jp
iret
or
pop
add
mov
adc
test
leave
test
mov
jge
xchg
push
aam
xchg
mov
ficomp
pop
dec
ins
les
inc
out
jns
(bad)
and
call
retf
jmp
cs
retf
or
mov
jl
stos
lods
movs
idiv
or
pop
dec
fwait
dec
jns
imul
push
jne
cmc
outs
clc
idiv
sub
mov
popf
ror
lds
cs
dec
sbb
inc
mov
sub
mov
fisub
(bad)
xchg
mov
retf
sbb
pop
lods
iret
mov
mov
cs
mov
retf
adc
cmps
dec
sub
sub
ss
sub
jbe
adc
or
cmp
stos
inc
lea
clc
push
out
xor
or
sbb
lahf
fimul
daa
inc
fadd
(bad)
jmp
sub
pop
das
push
rol
pop
xchg
inc
ds
mov
leave
push
inc
fiadd
imul
loope
bnd
cwde
mov
mov
js
sbb
inc
stos
call
xor
repz
loope
in
mov
push
mov
repnz
dec
dec
loop
cmp
scas
and
and
outs
mov
hlt
jo
aad
mov
retf
add
es
je
adc
sub
mov
sbb
daa
daa
cdq
bound
in
shl
adc
in
lar
cs
inc
iret
movs
lahf
mov
pop
retf
ror
and
pop
xor
outs
xor
pop
pop
xor
sbb
push
fwait
in
ins
dec
adc
push
daa
pop
and
leave
retf
sbb
std
data16
repnz
mov
xor
mov
pop
lahf
sbb
push
test
retf
adc
xlat
jo
jno
mov
lock
and
imul
cdq
inc
sbb
inc
lahf
xchg
out
pushf
neg
pop
mov
xchg
jne
ret
mov
push
cmp
or
mov
add
in
leave
(bad)
into
sub
daa
nop
jmp
rcl
xchg
add
sbb
stos
icebp
sub
and
shl
jecxz
scas
scas
imul
sub
cmps
mov
in
add
cmp
sar
pop
jmp
dec
or
imul
mov
inc
sahf
popf
jno
and
sbb
ins
add
inc
jae
pop
sbb
mov
out
inc
imul
fwait
and
enter
mov
adc
outs
sbb
sbb
jecxz
pop
(bad)
and
cs
pop
mov
stc
outs
or
out
clc
mov
xchg
or
fld
jecxz
lds
pop
call
std
cli
(bad)
xchg
pusha
pop
pop
test
push
(bad)
sar
cmp
pusha
scas
fbld
pusha
mov
xlat
jnp
repz
scas
add
clc
sbb
mov
dec
sub
push
push
jbe
popa
add
fcomp
stos
jl
cld
mov
ss
out
out
jmp
mov
shl
or
pop
xor
push
xchg
xor
mov
data16
retf
mov
(bad)
xor
scas
fwait
clc
fld
movs
loope
mov
js
mov
cmp
inc
jnp
xchg
pop
pop
out
pop
inc
mov
jns
imul
addr16
out
sub
das
cmc
pusha
cdq
cs
neg
pop
out
movs
pop
ins
shl
jnp
stos
and
xor
pop
test
xlat
mov
test
test
aad
sub
pop
ss
xlat
adc
sbb
sub
dec
(bad)
xchg
into
pop
and
push
push
test
es
push
or
popa
std
ds
loopne
movs
rcl
aas
inc
mov
(bad)
call
lods
aas
xlat
mov
shl
pop
fcom
stos
mov
or
xchg
imul
in
test
sti
mov
inc
rol
adc
outs
mov
push
mov
sbb
adc
or
mov
and
das
enter
bound
pop
cwde
or
pop
pop
dec
pop
dec
push
stc
pop
mov
mov
imul
fsub
push
sub
cld
jbe
xor
add
mov
adc
mov
es
lahf
dec
retf
xchg
rcl
sbb
imul
mov
or
adc
push
xchg
or
cdq
shl
loop
xor
ins
add
jo
mov
or
ss
cmp
adc
push
and
fsub
ret
and
fisub
movs
(bad)
adc
ins
dec
sbb
add
jno
and
shr
pop
arpl
inc
sbb
outs
std
xchg
jbe
jecxz
mov
mov
aaa
popf
sbb
ret
(bad)
adc
(bad)
paddsb
aas
fidivr
out
inc
sbb
dec
jae
xchg
mov
leave
and
and
mov
mov
cmps
push
rcl
es
sub
and
jp
mov
xor
(bad)
push
addr16
cmp
or
(bad)
icebp
and
xor
sub
jb
cmc
shr
xchg
hlt
jbe
shl
sub
lods
push
mov
or
lods
pop
arpl
mov
jge
push
mov
adc
inc
mov
mov
rol
sub
xchg
fsub
mov
mov
sub
cmp
popa
dec
cdq
repnz
mov
jmp
inc
test
call
out
lds
inc
add
outs
sub
add
cli
jae
aaa
sbb
fnstcw
adc
sub
icebp
icebp
repz
cld
add
xor
loopne
mov
cmps
inc
adc
push
pop
or
(bad)
xchg
sbb
pop
xor
add
and
and
push
sbb
out
mov
xor
mov
mov
aas
mov
pop
int3
xor
dec
xchg
mov
jp
bound
push
fldenv
and
add
push
push
xor
adc
mov
xchg
push
mov
mov
or
shr
mov
outs
xor
dec
gs
nop
test
stos
ret
ins
test
push
or
cmps
clc
pushf
in
nop
mov
bound
mov
mov
fmulp
push
stc
in
retf
push
fucom
or
xchg
mov
int
lahf
inc
adc
retf
push
mov
push
lea
pcmpeqd
xchg
enter
mov
out
mov
sub
mov
xchg
lods
push
aas
pop
cmps
int3
sahf
jnp
pusha
jge
test
ret
or
or
pop
hlt
cwde
icebp
test
sub
lods
mov
pop
xchg
jmp
push
and
lock
xchg
push
(bad)
push
dec
adc
stos
int3
retf
and
add
pop
das
mov
cmp
or
jae
mov
jns
imul
cs
leave
jb
mov
jmp
dec
test
inc
imul
outs
test
mov
cli
imul
leave
cmp
xchg
std
shr
outs
xchg
push
sub
pusha
xor
cmps
or
rcr
xchg
fild
xchg
in
fadd
addr16
add
mov
cmp
sub
sbb
leave
out
stc
out
jl
jp
xor
cdq
sub
cmp
or
or
xchg
mov
fwait
mov
sub
xchg
ins
cmp
sti
sub
jg
and
dec
inc
dec
in
mov
jbe
cmc
test
xchg
outs
cmps
sbb
mov
sub
mov
loopne
pushf
jmp
push
enter
jnp
mov
mov
out
xor
loop
xlat
ins
bound
retf
out
jno
xchg
adc
es
stos
xchg
sub
rol
dec
jge
mov
adc
xor
ins
in
fsub
inc
jecxz
(bad)
mov
shl
movs
sbb
sub
or
inc
fiadd
pop
je
xchg
jmp
push
fld
sub
dec
jno
pop
sbb
mov
push
sbb
inc
mov
nop
sahf
test
push
adc
imul
dec
fdiv
adc
cmp
pop
hlt
in
lahf
call
icebp
fsubr
fadd
adc
cld
stc
mov
aas
sub
shl
push
loop
fdivrp
rcr
push
or
cdq
xchg
icebp
add
mov
or
loope
sbb
mov
pop
dec
cmp
mov
jbe
bound
cmp
cdq
int3
add
stos
mov
pop
xchg
and
(bad)
pop
mov
sub
pusha
xor
pop
cmps
or
adc
mov
sahf
out
mov
test
shr
xchg
test
and
int3
jecxz
jg
pop
mov
leave
mov
or
lds
xchg
mov
push
ret
mov
jmp
(bad)
mov
pop
xchg
std
or
ds
les
inc
rcl
neg
aam
push
mov
ss
lods
inc
pushf
lea
les
dec
(bad)
in
mov
int
outs
inc
lds
xor
sbb
cmp
lahf
xchg
neg
dec
cmp
nop
mov
inc
xor
sub
xchg
jb
(bad)
stos
xor
aad
popa
pop
xor
cmp
mov
push
scas
push
add
into
shr
test
and
fdivr
mov
adc
pop
cmp
inc
outs
mov
inc
pop
les
sbb
inc
icebp
mov
nop
jo
std
inc
std
mov
pop
aam
xchg
push
sub
sub
mov
and
dec
add
add
pop
movs
dec
div
jle
pusha
jle
pusha
jp
adc
inc
iret
(bad)
fsub
sbb
jmp
(bad)
sub
xchg
imul
or
mov
(bad)
mov
sub
pop
jg
mov
mov
cmps
mov
test
mov
jo
cmp
cmp
mov
sahf
sti
out
ret
fstp
add
pop
mov
pop
(bad)
ficomp
test
out
aad
arpl
out
sub
add
pop
rcr
push
movs
mov
stos
sbb
jge
sti
xor
mov
jge
dec
psllw
mov
mov
jns
adc
pop
iret
inc
mov
mov
pop
and
pop
les
mov
sbb
xchg
cmp
jmp
sbb
xchg
mov
xor
mov
inc
push
ins
mov
sub
adc
push
(bad)
int
push
or
mov
aam
jecxz
mov
stos
add
xchg
mov
xchg
clc
daa
jb
int
mov
out
adc
in
(bad)
jmp
je
pop
lahf
and
fcomp
cwde
xor
sub
lea
lods
adc
aaa
scas
test
sub
or
(bad)
sub
jge
push
(bad)
xor
gs
cmp
(bad)
int
mov
aas
fucomi
loopne
add
sbb
dec
ror
push
dec
mov
outs
sahf
loope
cmp
adc
push
mov
mov
test
lds
jae
push
add
dec
cmp
hlt
add
and
inc
sbb
sub
out
pop
or
dec
inc
clc
push
je
mov
jno
jmp
movs
cwde
mov
stos
sub
jecxz
cmp
dec
or
jmp
pop
mov
add
inc
test
xchg
in
test
shl
dec
out
sbb
in
sub
out
sub
adc
adc
(bad)
jnp
inc
sbb
jge
clc
sub
cmp
jg
or
dec
loope
xchg
mov
outs
sbb
adc
inc
ss
xor
cmp
add
loopne
inc
pop
jmp
in
ret
icebp
mov
sub
jl
or
fisubr
test
sbb
dec
jns
pop
sub
or
pop
mov
sub
out
push
call
cmps
cwde
arpl
inc
out
adc
retf
cmp
ror
push
inc
mov
inc
adc
repz
pop
inc
aad
data16
dec
addr16
aas
cdq
aaa
cmp
retf
pop
pop
ror
xchg
push
mov
out
cwde
cs
add
jae
and
gs
lock
rcl
lds
es
gs
movs
inc
clc
push
inc
retf
sbb
mov
mov
cmp
xchg
repnz
push
es
in
sbb
ret
sub
jl
movs
or
pop
fsub
push
mov
sbb
sbb
ret
inc
jl
ret
or
mov
mov
xor
ja
mov
cmp
(bad)
cli
sub
cmps
mov
div
mov
add
jecxz
scas
jmp
sbb
(bad)
or
loope
jo
repz
ret
rcr
movs
cdq
jbe
sahf
inc
scas
sub
sbb
dec
inc
test
outs
and
clc
movs
xlat
add
lea
mov
js
pop
cs
cdq
jmp
mov
sbb
inc
add
mov
pop
cmp
sar
jne
push
mov
sub
push
aad
cmps
dec
hlt
or
push
add
xor
pop
in
mov
mov
mov
jne
enter
mov
imul
(bad)
mov
mov
mov
mov
lock
jle
cmp
mov
int3
mov
xor
sub
in
ret
xchg
cmc
sahf
ins
push
inc
adc
scas
enter
je
jae
sbb
popa
sahf
pop
pop
scas
mov
adc
fsubr
cmps
mov
add
mov
sar
sub
xor
std
add
mov
sub
js
sub
fstp
pop
loop
int3
add
mov
test
cli
and
fild
adc
(bad)
pop
push
add
(bad)
pop
xor
xor
sbb
out
ja
fimul
inc
sbb
fs
cmp
arpl
inc
sbb
clc
add
jnp
ret
mov
cmp
mov
sub
ins
das
mov
into
cmp
cmps
pop
push
dec
mov
xor
add
test
and
nop
das
lods
inc
sub
pop
adc
retf
ins
cmps
aam
daa
cmp
push
sub
and
dec
in
pop
es
xchg
jo
sbb
xlat
(bad)
jle
add
retf
inc
(bad)
cld
xor
adc
repnz
jge
or
dec
or
or
mov
sub
(bad)
push
sbb
daa
pop
dec
fcmovnu
xchg
out
sub
jns
iret
cli
aas
js
bound
and
pop
jno
sub
cld
loope
xchg
les
or
add
inc
sbb
xlat
out
sbb
sbb
loop
in
push
or
cmps
fstp
push
fdivr
aad
mov
out
addr16
inc
imul
sub
addr16
fisttp
jmp
xchg
dec
add
mov
fisubr
or
or
cmc
pop
call
fild
out
or
push
shr
or
ret
adc
dec
(bad)
loopne
mov
adc
jns
dec
push
and
cmp
jecxz
cli
aam
rcl
cmp
es
ss
xchg
cwde
les
dec
cmp
mov
push
outs
mov
jbe
sub
movs
add
xor
out
mov
es
mov
dec
cmp
inc
popf
cs
sbb
mov
push
icebp
fadd
inc
inc
call
add
ins
lock
mov
mov
dec
(bad)
sbb
jl
loop
fwait
sbb
rcr
pop
mov
push
mov
mov
fldcw
sbb
shl
push
push
shl
das
xchg
or
jp
push
mov
mov
mov
cmp
mov
es
jle
dec
cli
das
pop
mov
cmc
adc
cmp
sbb
mul
lock
xchg
movs
mov
sub
jmp
stos
jecxz
loopne
mov
jle
data16
movs
sub
out
dec
mov
cmp
stc
push
adc
mov
ret
dec
sti
xor
and
aaa
pop
retf
(bad)
and
inc
retf
mov
xchg
stos
jne
shl
test
scas
addr16
mov
adc
ret
cmp
or
or
stc
ficom
sub
cmp
fs
jae
cdq
adc
ret
adc
cmc
lea
mov
icebp
adc
push
popf
add
mov
dec
adc
push
js
push
and
cmps
fdivr
mov
mov
dec
pushf
inc
push
mov
pop
retf
push
in
mov
fldcw
or
cmp
pop
nop
mov
lods
lahf
mov
sub
enter
inc
sbb
jecxz
add
sar
mov
inc
adc
stos
mov
mov
mov
aam
dec
ins
(bad)
xlat
daa
xchg
fild
test
and
fist
(bad)
push
push
neg
add
and
test
jecxz
ficomp
inc
ficom
pop
xchg
jne
pop
sbb
dec
adc
xor
cld
ins
pop
enter
lahf
pop
les
std
xor
cs
scas
fwait
push
js
inc
outs
add
arpl
xor
stc
mov
movs
ins
icebp
cmps
stos
sti
or
sbb
(bad)
iret
or
sahf
pushf
add
(bad)
outs
dec
mov
mov
les
sub
(bad)
add
cmp
and
out
ret
fucom
mov
shl
dec
aas
mov
test
stc
iret
adc
mov
outs
aas
pop
sub
clc
std
xchg
ja
lahf
ss
jl
mov
out
sub
stos
test
pop
and
dec
cmps
fadd
fcmovnbe
xchg
movs
cdq
pop
or
cmp
cmp
scas
inc
push
mov
(bad)
jp
sbb
xor
ja
pop
test
iret
fldcw
fist
mov
inc
fnstcw
sub
inc
mov
mov
lahf
xchg
xchg
mov
mov
rcl
data16
jno
jge
adc
jb
jge
cs
add
(bad)
dec
mov
mov
mov
call
lods
sbb
sbb
test
xlat
int3
stos
pop
adc
pushf
xchg
fild
dec
fst
pop
fnstcw
mov
icebp
sub
jg
pop
pop
fwait
cmp
mov
addr16
cmp
out
shl
nop
add
(bad)
mov
push
push
sbb
jbe
mov
iret
push
pop
mov
shr
imul
fwait
mov
aam
leave
xor
push
xchg
xor
push
div
rol
sbb
xor
pop
sub
push
add
aaa
jno
jns
test
cmp
mov
out
imul
dec
fdivr
and
movs
push
pop
push
push
test
jmp
cwde
xlat
lods
les
fimul
js
in
gs
jmp
dec
pop
xor
inc
mov
add
popa
dec
mov
in
test
xor
fadd
xor
push
mov
cmc
cmp
les
jno
js
fwait
xchg
mov
leave
xchg
inc
push
xor
rcr
das
imul
rcl
mov
outs
gs
sub
jmp
inc
dec
pop
cs
fnstenv
in
shl
dec
cmps
shl
popf
icebp
jne
pop
mov
lods
mov
jecxz
mov
clc
mov
xor
addr16
outs
repnz
pushf
jmp
pushf
add
xchg
pop
mov
pop
in
and
inc
push
mov
add
jne
mov
xchg
retf
fisub
and
sbb
jmp
rcr
dec
cli
and
sub
call
ss
sub
sub
pushf
xor
enter
xchg
xor
outs
xor
pop
mov
push
rcr
pop
push
sub
adc
retf
shr
push
fistp
mov
fwait
test
pop
or
mov
mov
mov
sti
icebp
ins
sti
pop
std
fist
jbe
je
push
or
or
or
mov
adc
shl
xlat
int
fdivrp
mov
or
fidivr
inc
and
int
mov
push
jge
jmp
aas
push
sub
aad
pop
sub
mov
mov
sahf
mov
cmp
fwait
dec
cmp
idiv
inc
push
in
out
pop
aam
out
mov
push
in
mov
jle
pushf
in
int3
pop
js
lods
push
sbb
inc
addr16
or
hlt
cld
mov
pop
mov
aas
xor
(bad)
mov
call
cmp
pop
scas
gs
movs
or
lea
mov
xchg
rcl
movs
push
and
(bad)
xchg
push
scas
dec
out
sbb
pushf
dec
and
mul
mov
xchg
cli
push
hlt
jg
jo
xchg
outs
mov
sub
sbb
mov
aas
mov
dec
mov
std
mov
pop
jle
xor
movs
jno
pop
(bad)
push
int3
xor
push
jae
jmp
pop
mov
add
xchg
and
retf
outs
cmp
and
sub
fnstsw
lea
mov
sbb
movs
ror
out
add
cld
and
outs
xor
(bad)
add
test
add
cmp
or
push
mov
scas
int3
jbe
aam
inc
xor
sub
cli
aas
or
push
scas
or
hlt
hlt
add
(bad)
dec
mov
(bad)
xor
push
pop
mov
jle
and
dec
push
fxch
pop
(bad)
or
inc
popa
or
in
xor
lds
fyl2xp1
mov
mov
int
adc
lods
pushf
xchg
into
mov
ja
adc
cmp
int3
cli
xor
mov
aad
dec
mov
mov
mov
xchg
stos
push
sbb
fs
ja
add
cs
fs
inc
dec
ds
mov
sub
and
(bad)
adc
mov
enter
push
cmp
(bad)
stos
gs
enter
popa
les
pop
hlt
imul
sub
test
inc
fxch
and
jge
sub
fiadd
xor
sti
test
or
xchg
scas
add
mov
mov
adc
dec
dec
mov
sbb
mov
shl
inc
pop
mov
les
dec
dec
or
shr
push
adc
repz
dec
test
arpl
inc
and
sub
sub
and
imul
sub
ret
add
mov
stos
xor
mov
sub
lods
aam
push
sbb
mov
jnp
int3
add
push
out
mov
cs
movhps
mov
fdivr
pusha
(bad)
mov
or
js
out
sbb
in
scas
cld
sub
movs
mov
ins
sub
cmps
std
movq
inc
inc
gs
push
adc
pop
loopne
mov
sti
call
jg
gs
cmps
stos
lock
outs
push
jae
inc
dec
sbb
adc
clc
mov
js
and
imul
gs
sub
ins
rol
mov
addr16
push
dec
or
mov
cs
leave
scas
cmp
or
stos
ret
call
mov
dec
jl
or
aad
mov
pop
cld
daa
lods
dec
mov
nop
imul
jmp
mov
les
mov
mov
and
add
adc
sbb
in
mov
aad
imul
push
mov
adc
or
mov
cmc
dec
jno
mov
or
adc
pop
mov
in
pop
xor
ins
push
pop
pop
ret
cmc
mov
cmps
inc
pop
inc
jmp
mov
lods
repz
jnp
outs
call
pop
outs
xchg
imul
xchg
mov
lods
pop
push
push
hlt
pop
addr16
call
call
adc
push
cmp
cmp
out
xlat
stos
dec
ds
adc
aam
pop
je
(bad)
dec
fistp
(bad)
push
ins
in
cmp
ins
sbb
inc
aad
cmp
loop
mov
cmp
sti
shl
push
stc
push
adc
adc
and
push
neg
xor
sbb
mov
push
loop
dec
mov
mov
inc
xchg
inc
adc
push
das
mov
fdivr
push
dec
jbe
loop
scas
fiadd
mov
std
retf
stc
adc
mov
sbb
in
jge
fistp
sub
dec
clc
sar
jecxz
sub
xlat
or
dec
sbb
mov
sub
dec
bound
mov
mov
adc
fs
pop
dec
pop
inc
push
(bad)
fwait
outs
lock
push
push
cmps
xlat
mov
sub
sahf
sub
inc
fwait
out
data16
jnp
daa
pusha
sbb
or
jnp
ror
jns
outs
mov
pop
mov
hlt
inc
out
retf
add
bound
sub
loope
add
xchg
scas
adc
not
cmp
adc
leave
jnp
test
test
and
es
aas
test
xchg
jg
jo
sti
fcmovnbe
cdq
pop
nop
ja
imul
lahf
adc
fwait
imul
push
lods
lock
jmp
lock
icebp
leave
mov
mov
sub
mov
clc
inc
loop
jno
sbb
mov
loope
sub
cmp
add
sbb
sub
dec
push
inc
test
mov
cmps
add
sub
fst
outs
xchg
je
lea
cmc
pusha
cmp
fild
cwde
imul
lds
mov
neg
bound
aam
cmp
pop
div
push
mov
push
cld
jmp
gs
mov
(bad)
push
jg
mov
sar
call
cmps
in
push
jo
add
mov
dec
mov
xor
xor
sbb
aas
arpl
lods
icebp
xor
bound
mov
cdq
dec
sbb
pop
hlt
jecxz
fiadd
jecxz
ficom
jnp
pop
mov
into
push
mov
test
pop
jns
push
and
enter
xor
push
sub
cmp
ja
ja
jno
test
or
mov
sub
sub
pushf
dec
or
xchg
inc
fisub
int3
dec
or
and
pop
xor
xor
sbb
hlt
mov
imul
stos
xchg
pop
in
push
inc
cmp
cmp
std
cmps
stc
xchg
mov
loopne
and
jmp
sar
shl
ss
das
cmp
gs
cs
sub
mov
xor
jle
inc
retf
scas
mov
push
test
and
stc
ins
dec
arpl
data16
lahf
inc
not
mov
mov
repnz
dec
sti
lea
add
je
add
bound
inc
dec
cmp
aaa
cmp
xor
sub
xchg
ins
popa
retf
call
add
cld
scas
xor
mov
cmps
retf
sub
jb
jns
mov
out
mov
in
lods
mov
(bad)
pop
xor
std
xor
out
or
call
test
cmc
jle
mov
fs
and
xor
mov
imul
push
(bad)
jne
or
jnp
aaa
mov
xor
xchg
fiadd
dec
out
add
in
arpl
or
and
cmp
imul
dec
rcr
dec
push
(bad)
cmp
stos
jno
add
sbb
sub
in
hlt
mov
jmp
loop
push
into
cmc
in
rcl
pop
gs
jno
mov
jae
aad
test
frstor
adc
jle
leave
xor
lods
ror
mov
int
les
pop
and
sub
cmps
dec
jecxz
arpl
or
inc
scas
rcl
and
and
and
cmp
mov
icebp
fsub
std
ja
(bad)
xlat
or
jge
and
push
aaa
(bad)
daa
call
sahf
nop
and
nop
out
lods
dec
imul
adc
mov
push
inc
enter
pop
push
sbb
push
pop
int
push
xor
xor
xchg
mov
inc
jg
cmp
pop
js
adc
mov
sbb
xor
fwait
arpl
jg
add
pop
leave
int
adc
scas
sub
repnz
push
gs
lock
adc
cmp
cmp
mov
ja
xchg
push
pushf
mov
lahf
push
aas
fist
mov
div
jl
stos
(bad)
stos
das
hlt
addr16
lock
out
adc
cs
jo
js
sbb
test
inc
sbb
sti
inc
in
sub
stc
dec
sbb
fnsave
and
mov
hlt
push
xor
sbb
dec
push
or
cdq
dec
test
xor
or
pop
push
sub
test
inc
adc
or
loope
in
pmovmskb
or
shr
jmp
(bad)
pop
jne
sub
pop
(bad)
dec
movs
xchg
sbb
cmps
push
xchg
cmps
sub
dec
cmc
out
push
pop
jl
dec
or
add
mov
aad
mov
(bad)
int
push
adc
xor
inc
xchg
adc
jbe
rol
sub
pushf
test
mov
mov
cmp
push
shl
into
scas
scas
sub
jp
and
hlt
jo
add
out
jbe
xlat
mov
jl
lea
inc
ret
mov
mov
inc
push
arpl
out
test
inc
and
fisub
rcr
pusha
push
into
or
sbb
lahf
retf
jecxz
in
dec
dec
sub
cli
fsubr
mov
adc
pusha
stos
inc
add
pop
(bad)
cmc
jnp
xor
xchg
rcr
and
int3
fild
in
inc
inc
outs
icebp
sahf
loop
js
dec
popf
push
scas
fld
cli
sub
dec
std
data16
jmp
push
lahf
push
sbb
xchg
or
sahf
lahf
fwait
push
inc
add
leave
xor
loope
dec
adc
data16
mov
mov
icebp
(bad)
fisub
push
adc
jnp
jmp
add
mov
sbb
xchg
das
sbb
(bad)
ins
mov
div
or
xor
std
add
fiadd
jecxz
(bad)
add
and
cmp
mov
pop
enter
inc
popa
jbe
jmp
cmp
jo
dec
and
sub
mov
sub
inc
jne
stos
pop
out
jp
xchg
push
ret
repz
jo
sub
aaa
xchg
popa
dec
pop
inc
jg
(bad)
dec
xor
in
icebp
std
fld
push
sbb
inc
xchg
dec
or
(bad)
cmc
inc
in
jb
adc
pop
and
or
inc
cwde
mov
stos
fdiv
jns
push
ret
inc
push
hlt
icebp
mov
repz
add
or
out
and
add
dec
mov
jno
aam
jb
sar
stos
mov
fistp
adc
lock
mov
pushf
sub
mov
call
add
cs
mov
xor
pop
icebp
inc
dec
ffreep
fs
and
nop
cmp
lds
in
adc
outs
out
loop
gs
ins
sbb
fstp
cmc
push
dec
push
sbb
mov
mov
mov
xchg
fidivr
push
pop
pop
jmp
xor
hlt
sub
mov
xchg
jmp
jae
mov
(bad)
mov
push
xlat
xchg
pop
and
xor
outs
popa
mov
cld
push
xchg
fisubr
jl
and
addr16
arpl
jnp
gs
push
cdq
mov
push
mov
sbb
cli
aam
ss
adc
out
push
ss
jecxz
fwait
xchg
jmp
sub
lds
adc
jns
and
xchg
repz
xor
mov
es
cmp
shl
pop
pop
xor
mov
mov
xchg
pop
sbb
mov
cmp
mov
lahf
adc
hlt
mov
mov
xchg
movs
cmc
push
jne
cdq
sub
test
scas
fimul
retf
gs
or
outs
xchg
xchg
movs
add
jo
push
inc
cs
icebp
adc
jns
mov
lods
cmp
hlt
iret
xchg
xlat
loopne
xor
pop
fs
push
xchg
push
jae
jb
pop
das
sahf
jle
cmps
scas
jecxz
int
jb
loope
leave
ror
adc
retf
or
idiv
adc
xor
push
adc
cwde
push
jns
xlat
sub
sbb
jae
arpl
loop
mov
xchg
inc
inc
scas
xchg
(bad)
lea
aas
push
cli
or
jnp
shl
pop
int
push
mov
dec
mov
mov
daa
xchg
adc
(bad)
xor
xchg
xlat
test
sbb
(bad)
vcvttss2si
pop
mov
mov
fild
bound
inc
fild
int3
and
pop
ins
sahf
fst
in
push
jmp
data16
fstp
mov
jl
add
fstp
je
in
mov
sub
nop
pop
push
in
or
push
loopne
sub
cld
mov
mov
retf
loopne
pop
mov
adc
dec
dec
retf
mov
scas
xchg
out
sbb
xor
int
mov
lock
fsubr
jle
xor
outs
xor
pop
mov
push
fs
out
mov
test
retf
shl
rol
xchg
dec
mov
aad
push
dec
popf
inc
mov
add
test
in
(bad)
cmp
adc
test
jo
mov
shl
lods
sar
(bad)
adc
sub
std
cmp
sub
fs
ins
xor
dec
xchg
jg
mov
add
je
sub
add
jnp
iret
xchg
icebp
xor
mov
dec
nop
push
push
xchg
fiadd
mov
clc
xor
sub
cmp
js
sub
dec
ins
ret
mov
ror
clc
push
and
adc
push
push
out
sahf
xor
sub
dec
sbb
mov
xlat
imul
popf
dec
pusha
shl
dec
iret
mov
aas
jae
and
mov
ds
(bad)
addr16
push
mov
retf
sbb
popf
mov
popa
xor
(bad)
in
scas
jp
xor
movs
cld
lods
ins
xor
or
or
out
adc
(bad)
mov
cs
mov
and
sbb
mov
aad
scas
out
pop
or
jmp
repz
scas
push
jge
mov
push
mov
in
(bad)
jae
lods
mov
pop
(bad)
xchg
int3
lods
push
icebp
(bad)
sbb
push
xchg
cmp
xchg
nop
loop
(bad)
cld
bound
xchg
inc
xchg
push
jg
and
jle
std
fldcw
xchg
add
push
xchg
sub
push
in
sub
or
stc
xor
stc
xchg
or
ret
dec
and
test
movs
call
push
fidiv
dec
lods
cmp
cmps
dec
mov
pop
push
cmp
add
fmul
ret
jecxz
cli
pop
push
pop
ja
push
stos
imul
(bad)
imul
sub
dec
push
or
adc
daa
push
out
dec
cmp
mul
cli
cmp
in
cmc
dec
mov
inc
inc
cmp
stos
jecxz
inc
iret
xor
(bad)
xor
mov
pop
xlat
cmps
aaa
mov
test
pop
fdiv
out
jb
rcr
bound
rcr
and
int3
or
jno
pop
cld
data16
mov
cld
jp
int3
cmp
ja
mov
ret
pop
adc
imul
xacquire
fdiv
clc
shl
xor
mov
out
ror
shl
xchg
mov
(bad)
in
(bad)
outs
jge
push
pop
cmps
test
pop
repnz
mov
pop
mov
lods
int3
push
xchg
push
xor
dec
int3
in
scas
jno
adc
sub
mov
cmp
or
cmp
fnstenv
jl
inc
imul
into
sbb
es
pop
mov
(bad)
jnp
sti
repz
or
fld
sub
mov
pushf
xchg
push
inc
ins
cli
and
cmp
jne
or
mov
stc
pop
(bad)
dec
ds
cwde
ror
div
in
push
retf
mov
jmp
fcmovu
inc
pop
pop
jnp
retf
jecxz
inc
mov
cmp
mov
cmc
dec
mov
jns
in
(bad)
jmp
cmp
mov
add
test
repz
push
test
ret
hlt
jne
enter
mov
inc
ja
fmul
add
sub
adc
cmp
lods
js
jp
call
fcomi
jl
or
(bad)
in
and
adc
add
pop
jno
mov
jbe
sub
xchg
xor
daa
push
pop
dec
mov
repnz
mov
rcl
xor
push
and
retf
inc
pop
aaa
mov
fld
dec
dec
rcr
mov
mov
mov
fst
movs
xchg
out
shl
and
idiv
inc
sub
call
popf
neg
fisub
cmp
sti
shl
jns
in
lods
sti
push
les
cmp
mov
int3
sbb
add
mov
pop
cmp
shl
or
pop
adc
loope
sub
lods
int
repnz
stos
pop
mov
jns
or
mov
push
loop
nop
cmp
dec
mov
popa
mov
jbe
pop
sub
sbb
std
mov
in
xor
cmp
inc
mov
mov
mov
mov
jecxz
and
aaa
xchg
es
test
cmp
dec
loope
mov
mov
out
loope
pop
cs
imul
xchg
(bad)
pop
ss
xchg
(bad)
jno
or
scas
stc
mov
inc
dec
test
xor
imul
push
cmps
fsubr
icebp
adc
js
sbb
enter
call
or
or
mov
mov
add
sti
lods
cmp
sar
fist
les
loopne
pop
rcl
jl
and
jg
ret
and
lds
(bad)
in
ss
dec
inc
shl
pop
fsub
sub
sti
lahf
not
mov
(bad)
mov
and
xchg
dec
mov
scas
inc
push
ins
jno
jbe
stos
std
es
ror
inc
xchg
sbb
add
fwait
dec
mov
push
adc
xchg
and
inc
add
dec
push
mov
inc
(bad)
int3
popa
add
add
sub
jne
mov
sti
inc
je
jae
call
dec
fwait
pop
out
jo
and
inc
lock
adc
sub
cli
shr
or
in
in
leave
lahf
adc
or
and
jbe
shl
jle
imul
push
sub
xchg
inc
jo
arpl
std
push
cmp
test
add
retf
arpl
stos
aam
sbb
xor
jmp
mov
retf
pusha
ret
scas
inc
outs
xchg
dec
mov
cmps
mov
in
mov
xchg
jmp
fistp
std
or
pop
imul
int
or
in
adc
inc
sub
imul
iret
lods
mov
test
cmp
aas
repz
add
retf
mov
out
das
clc
into
ret
xchg
rol
cs
pop
push
xlat
adc
cmp
fsubr
into
inc
cmps
push
(bad)
sub
or
popf
push
lea
sti
jns
cmp
push
or
adc
(bad)
daa
dec
cmp
or
test
nop
mov
xchg
pushf
sbb
push
test
xchg
nop
add
xchg
cmp
push
cmp
and
add
jge
mov
dec
scas
bound
adc
xchg
aam
retf
mov
mov
retf
sub
sbb
sbb
pushf
retf
loope
inc
imul
fst
cs
mov
mov
and
inc
mov
sub
mov
sub
movs
xacquire
dec
ficomp
out
jecxz
xor
and
inc
or
inc
jmp
adc
pop
xor
imul
pop
push
cmc
add
push
leave
push
into
cmps
pop
sbb
into
ja
push
mov
inc
sbb
pushf
jno
cli
sub
sbb
push
mov
in
retf
ret
(bad)
in
cmc
comiss
mov
mov
(bad)
pop
push
mov
mov
pop
xor
int3
and
pop
add
fs
and
cmp
into
cdq
bound
or
addr16
dec
add
dec
popf
add
push
(bad)
and
js
mov
sahf
cmp
inc
(bad)
adc
xor
leave
jp
mov
in
(bad)
shl
jno
repnz
mov
inc
jle
out
(bad)
in
xor
mov
pop
xchg
push
(bad)
push
ss
sub
icebp
push
push
sti
mov
sbb
add
inc
out
mov
inc
mov
into
push
fsubr
ds
or
lahf
fsub
dec
or
adc
(bad)
mov
in
sub
dec
in
les
cmp
aas
xchg
outs
shl
push
popf
mov
mov
sbb
xchg
xchg
or
mov
push
sbb
retf
sub
adc
adc
sub
stc
movs
dec
pop
push
popf
jno
sbb
jb
gs
jnp
inc
les
sub
sbb
sbb
ret
loop
mov
inc
pop
adc
mov
push
aad
(bad)
push
jno
jg
lock
lock
cmp
nop
push
js
pop
pop
or
fwait
sub
jecxz
adc
jecxz
inc
sbb
and
add
imul
retf
xor
xor
inc
cmp
cmc
stos
imul
jne
test
jbe
jae
outs
cmp
loopne
cmc
scas
pop
out
sub
adc
movs
cmp
jae
call
jg
out
cld
aam
sbb
sub
cdq
shl
jge
test
rcl
loope
or
nop
xchg
iret
lds
sbb
push
push
test
mov
xlat
leave
or
retf
cmove
cmps
jecxz
in
jae
cmps
in
mov
daa
fs
stos
retf
std
lods
out
cmps
jp
mov
std
mov
es
fwait
not
adc
add
loop
out
or
mov
(bad)
(bad)
mov
xorps
lahf
pop
retf
rcl
adc
cmp
mov
enter
sbb
test
es
push
neg
cli
push
push
sbb
aaa
scas
lea
cmp
scas
(bad)
nop
xor
mov
sti
repnz
push
or
jb
lock
cdq
or
inc
xor
aam
in
xor
lea
mov
and
rol
ret
sbb
or
cld
addr16
inc
mov
and
shl
mul
test
(bad)
les
mov
test
dec
sub
pop
inc
xor
dec
fwait
mov
cld
lods
push
or
mov
sbb
enter
ins
sub
pop
jge
hlt
outs
pop
add
js
inc
push
push
dec
jns
fsubr
outs
out
or
lds
adc
out
lods
shl
mov
jnp
or
fstp
repnz
test
rcr
xor
add
retf
xchg
cmp
outs
sar
cmps
xchg
xor
jp
or
div
ret
mov
xor
lock
add
add
and
pop
and
ficom
push
xchg
or
and
or
push
ins
mov
push
mov
adc
cmp
jno
lods
sub
fist
sti
cmps
mov
adc
shl
shr
push
push
xor
jno
sbb
sbb
sti
xor
pop
or
cmps
adc
adc
ret
push
lods
jl
mov
mov
jmp
mov
mov
leave
int
fwait
loopne
icebp
(bad)
outs
js
retf
dec
out
sbb
je
lods
(bad)
or
scas
shl
sar
fwait
lods
(bad)
loope
or
or
mov
leave
jmp
leave
cmc
mov
fistp
add
cmp
mov
cmp
(bad)
jecxz
fwait
arpl
jle
sbb
jnp
push
stc
mov
sub
or
sbb
aaa
into
mov
lea
stos
data16
out
mov
movs
or
cwd
mov
cld
pop
aaa
xchg
mov
push
clc
aaa
js
imul
callw
xchg
scas
repnz
push
call
xchg
in
and
loope
dec
and
adc
xor
mov
push
retf
mov
mov
xchg
push
cmp
jl
bnd
dec
sub
pop
and
mov
xor
shl
in
or
dec
and
test
dec
retf
repnz
mul
mov
dec
mov
or
lahf
sub
dec
or
sub
lea
add
and
jmp
push
rcr
mov
mov
pop
inc
ins
mov
idiv
push
cmp
es
dec
push
data16
pushf
adc
inc
test
push
push
outs
cld
or
inc
ret
xlat
dec
pop
jge
mov
sbb
das
xor
or
jbe
adc
mov
arpl
scas
adc
cmp
std
pop
mov
(bad)
xchg
xchg
jbe
sub
scas
and
xchg
xchg
(bad)
sbb
xchg
outs
fidivr
jmp
jne
loop
lods
jg
aad
loop
mov
rcr
jp
ins
aaa
xor
pop
test
(bad)
in
mov
adc
sbb
pop
(bad)
cmc
push
dec
adc
push
aas
outs
mov
pop
outs
out
sbb
dec
in
ror
mov
out
mov
sub
dec
cld
das
and
dec
ret
jg
hlt
hlt
or
inc
sub
pop
movs
adc
test
nop
mov
idiv
rcl
stc
xchg
je
stos
fwait
jo
dec
xchg
mov
sar
lahf
ret
and
in
psrad
mov
scas
push
dec
into
and
aas
test
aaa
mov
ds
les
pop
pop
div
je
cmp
jmp
call
neg
dec
(bad)
sbb
js
sbb
cmp
cmp
in
adc
mov
fwait
jne
ja
jecxz
pushf
dec
fwait
mov
xor
xchg
xchg
lahf
lods
mov
push
outs
movs
and
aas
cld
mov
mov
add
push
mov
xchg
dec
add
jp
lods
retf
sbb
inc
mov
push
mov
addr16
gs
out
imul
mov
pushf
xchg
test
jne
(bad)
or
hlt
xlat
jo
shl
jmp
cwde
fwait
adc
push
sbb
xor
inc
inc
ret
mov
imul
mov
ins
add
popf
pop
shr
repnz
sub
movs
popf
mov
push
aad
xor
jle
jl
pop
and
push
sti
xchg
push
mov
inc
add
add
lea
les
xor
pop
jle
sahf
ret
ins
shr
push
mov
test
xlat
ins
adc
pop
cmp
push
pop
mov
lds
stos
push
fldcw
jg
pop
mov
ins
rol
jge
retf
sti
nop
js
push
rcr
jmp
stc
lods
je
xor
(bad)
jb
lahf
mov
repnz
and
add
(bad)
shr
add
les
or
movs
dec
push
jecxz
add
adc
fucomip
or
and
mov
push
iret
jnp
(bad)
das
push
or
cld
in
add
ins
repnz
outs
call
cli
mov
adc
push
scas
and
mov
ins
cmp
fidiv
mov
cmp
and
push
jne
xor
ja
arpl
push
push
fisttp
(bad)
sub
enter
(bad)
fild
ins
sub
jge
xchg
or
scas
pop
cmps
out
jecxz
dec
adc
ficom
gs
push
pop
ins
int
test
fimul
jmp
out
stos
mov
arpl
add
cmps
neg
add
rol
(bad)
lods
xchg
add
aad
mov
retf
xor
sbb
int3
pop
hlt
mov
mov
or
jne
ja
out
sbb
dec
or
mov
jb
fisttp
repnz
and
nop
jnp
mov
pop
cmp
fld
arpl
lods
cmps
icebp
(bad)
mov
mov
xor
fdiv
push
int
cwde
cmps
retf
imul
fcomp
in
nop
in
adc
and
pop
arpl
fimul
pop
cmps
adc
push
rol
repz
mov
scas
and
pop
cld
stos
sahf
mov
sub
pushf
inc
loope
(bad)
and
(bad)
clc
mov
cmp
ret
sbb
lahf
push
retf
cmps
aaa
mov
sbb
adc
push
out
mov
mov
xchg
sub
sub
jge
iret
mov
xor
call
and
repnz
pop
xchg
or
ja
stos
pop
scas
add
push
sub
imul
sub
and
push
jg
lods
dec
outs
dec
mov
inc
rol
pop
stc
dec
push
mov
or
shr
lds
mov
inc
push
pop
pushf
ror
hlt
hlt
add
xchg
and
xor
jp
inc
pop
aas
or
dec
gs
test
out
push
movs
cmc
ins
loop
mov
stc
in
or
inc
shl
ins
sbb
into
ret
mov
cld
daa
lods
icebp
div
xor
retf
adc
xchg
mov
call
mov
push
jnp
(bad)
push
rcl
sub
int3
sbb
xlat
out
lds
mov
push
lods
ds
daa
test
dec
and
in
ins
addr16
and
cwde
xchg
and
ss
in
daa
lea
cmp
pusha
push
xchg
sbb
push
mov
xchg
fst
pop
mov
cmp
sub
ret
inc
and
jg
inc
and
int3
xchg
cmps
sub
cdq
in
ja
hlt
test
mov
adc
adc
mov
retf
jle
push
lods
(bad)
(bad)
adc
pop
pop
hlt
cmps
stos
push
jns
sbb
sub
mov
hlt
imul
or
xchg
dec
ins
ins
or
add
mov
ds
cmp
(bad)
ss
in
stos
pop
in
mov
xchg
push
or
mov
loopne
jo
out
pop
stos
imul
cmps
and
pop
pop
push
inc
jmp
jl
es
adc
xor
dec
mov
mov
arpl
and
pop
mov
cmovnp
jbe
sbb
add
dec
lods
sahf
fisttp
test
outs
ins
popa
call
fld
add
lahf
jg
daa
push
mov
fisub
test
out
(bad)
and
test
inc
sub
sub
bound
pop
ror
mov
mov
mov
jne
cs
cmps
mul
sub
and
retf
xchg
imul
mov
pop
and
xchg
jae
clc
jg
push
inc
sbb
add
jp
enter
mov
inc
out
and
inc
or
jne
daa
jmp
inc
sub
shl
popa
mov
push
and
xchg
retf
mov
lea
dec
lds
push
fs
and
mov
xlat
sti
(bad)
jmp
xchg
fcom
cld
mov
pop
sub
mov
jb
and
xchg
(bad)
pushf
clc
and
mov
ins
jnp
aam
clc
xor
repnz
sub
fwait
mov
pop
push
mov
or
dec
aaa
mov
pop
push
push
sbb
sub
dec
mov
rcr
adc
sahf
pushf
jmp
fwait
sbb
repnz
stos
sbb
pop
mov
add
jg
dec
repnz
mov
es
sbb
jge
or
(bad)
dec
or
test
push
dec
cld
or
adc
mov
or
pop
mov
xor
cs
inc
out
jecxz
fmul
aas
adc
and
fldcw
cdq
jns
repz
hlt
jg
and
shl
xor
cmps
dec
dec
fiadd
ret
jmp
inc
push
xor
js
dec
test
cmp
(bad)
jo
popa
fadd
loop
jl
test
jae
or
repnz
in
adc
js
mov
push
scas
pop
pop
push
popa
lahf
mov
jmp
xchg
xchg
or
inc
push
adc
sbb
mov
pop
pop
repz
xor
xchg
fs
sbb
pop
cld
mov
and
sbb
xor
das
mov
sub
cwde
out
push
jecxz
inc
mov
mov
aad
add
push
add
or
mov
clc
shl
test
sbb
inc
adc
sbb
lods
add
lea
add
mov
rol
add
xor
push
mov
adc
stos
fist
or
lds
lods
call
push
sbb
mov
(bad)
dec
push
mov
fbstp
pushf
mov
xlat
(bad)
test
movs
push
test
ret
jmp
lea
test
aas
mov
cwde
outs
xor
sbb
mov
les
stos
dec
push
fist
mov
test
or
xchg
xchg
mov
test
adc
mov
sahf
repnz
jnp
mov
xchg
sub
cld
mov
popa
in
jno
popf
jmp
dec
mov
loopne
ror
xchg
jns
dec
xor
das
inc
retf
and
and
leave
test
push
mov
inc
push
jne
or
or
jmp
mov
or
mov
push
or
sbb
into
add
lahf
inc
rcr
data16
jg
mov
sub
xchg
popa
retf
mov
xchg
push
fild
call
rcr
gs
sub
push
or
jno
cmp
and
out
sbb
rcr
aad
push
ss
adc
cmp
inc
retf
ins
repnz
data16
xor
in
mov
cmp
sub
in
retf
mov
rcl
add
cmp
mov
or
in
call
push
idiv
popf
bound
adc
inc
adc
or
mov
repnz
loope
sbb
or
xchg
mov
aaa
inc
mov
jmp
sub
(bad)
das
jno
sbb
push
adc
bound
(bad)
imul
retf
(bad)
xchg
or
in
or
cmp
retf
(bad)
adc
outs
push
xor
retf
jno
mov
call
test
pop
je
adc
in
ins
inc
add
mov
xchg
sbb
in
xchg
sub
push
lds
jg
mov
push
jecxz
pop
dec
push
push
xchg
xchg
push
scas
push
jg
pop
mov
je
pop
jl
lods
lahf
adc
mov
add
xchg
popf
jo
repnz
dec
imul
cmp
scas
jp
imul
aaa
cmps
add
fisubr
call
pop
sub
loope
xchg
ins
into
pop
je
movsx
jl
repnz
sbb
mov
retf
mov
push
mov
dec
sub
pop
enter
cmp
pop
push
mov
mov
fdiv
test
cld
xchg
scas
xchg
(bad)
dec
push
push
imul
pusha
mov
shl
cmp
sar
jge
rcr
loop
push
fldcw
jmp
sbb
aas
push
or
xlat
int
aam
mov
and
enter
jbe
je
pop
mov
dec
pusha
outs
cmp
mov
iret
pop
scas
int3
sbb
cmc
sbb
shl
push
retf
adc
jo
sbb
(bad)
lock
test
xchg
cdq
cmc
ins
xor
mov
ins
and
pop
hlt
xchg
sub
and
mov
mov
inc
jge
mov
ror
inc
(bad)
pop
int
xchg
xchg
xor
int3
shl
dec
dec
xor
xor
or
inc
loopne
jne
pop
ret
ss
or
inc
inc
es
cmp
sbb
neg
push
pop
dec
iret
mov
add
repz
inc
sbb
and
scas
ret
inc
jl
mov
xchg
mov
mov
cmps
pop
lods
and
pusha
add
cmps
aad
fsub
test
and
add
cwde
ret
mov
xor
xchg
(bad)
lock
inc
out
sti
and
dec
nop
pop
add
stos
(bad)
leave
dec
jb
fldcw
(bad)
and
out
cdq
cmp
and
inc
mov
daa
fstp
and
(bad)
icebp
jle
or
jg
or
cmps
cmp
jg
shr
cdq
sbb
mov
push
(bad)
jno
mov
pop
(bad)
push
jl
cdq
push
int
ss
popa
jne
mov
cmps
imul
ins
inc
bound
add
scas
sbb
jmp
xchg
sar
test
in
mov
pop
ja
pop
inc
and
std
fldenvw
and
jo
ins
adc
ficom
sbb
nop
shl
ja
sbb
push
mov
fcomp
jbe
dec
jecxz
sar
xlat
int
adc
cmps
push
(bad)
jb
xchg
cmp
mov
cmp
adc
jmp
pop
stos
xlat
dec
pop
jae
inc
clc
bound
mov
adc
cmp
and
cmp
cmp
xor
add
loop
shl
lods
push
stc
ja
daa
xchg
data16
lea
and
sbb
xor
loopne
lods
mov
test
fidiv
sub
sub
in
fldcw
xor
ja
sbb
(bad)
jl
(bad)
mov
push
adc
cmp
xlat
stos
retf
and
rcl
xchg
iret
(bad)
pop
es
push
or
pop
je
and
jb
test
and
lock
clc
jmp
and
out
gs
dec
xor
sub
jg
adc
int
clc
vpcmpeqd
imul
test
dec
cmps
mov
aam
dec
xchg
imul
sub
dec
in
and
jnp
rcr
shl
dec
mov
adc
sbb
pop
ds
pop
mov
out
sub
adc
(bad)
and
push
mov
fsub
retf
xor
xor
hlt
repz
ss
enter
add
cdq
sub
push
out
cmc
mov
sbb
xchg
ss
scas
mov
out
cs
jp
mov
sbb
sub
cdq
pop
aaa
rol
pop
movs
in
repz
add
dec
out
ss
inc
push
xchg
jge
cmps
add
je
mov
inc
mov
xor
xchg
sbb
call
les
jp
imul
xchg
into
push
push
add
xchg
rcl
push
call
and
mov
adc
add
ret
xchg
mov
lfs
pop
pop
(bad)
aad
stos
int
sub
cmps
mov
add
pop
inc
stos
inc
sbb
or
mov
dec
pop
fsubr
add
fdivr
push
or
and
mov
pop
std
or
pop
scas
in
inc
sbb
cmp
add
imul
pop
rol
mov
inc
rol
jecxz
int3
xchg
pop
sub
pop
sbb
stos
ss
dec
lods
push
into
adc
in
jmp
rcl
aam
xor
js
je
pop
(bad)
pop
test
test
or
pop
push
scas
scas
add
dec
out
sbb
jbe
inc
adc
sub
out
int3
sbb
hlt
jmp
(bad)
xchg
xor
sub
pop
pop
sahf
sub
push
jmp
popf
jg
test
sbb
das
pop
sub
xchg
repnz
inc
pop
push
call
leave
cwde
lea
dec
cmps
shl
and
popf
inc
push
dec
int
popf
adc
popf
mov
aad
call
mov
push
(bad)
clc
ror
xchg
nop
xor
xchg
dec
out
sub
dec
das
(bad)
adc
cmps
retf
aaa
inc
push
adc
into
mov
pop
push
into
xor
lods
test
xchg
lea
leave
mov
shl
cmps
dec
adc
adc
cmps
jecxz
mul
retf
jbe
push
mov
ss
pusha
aas
inc
(bad)
dec
out
adc
mov
mov
push
mov
xor
ins
outs
(bad)
sub
ja
jl
mov
lods
and
in
stos
dec
sbb
sub
ret
(bad)
sar
imul
and
dec
icebp
(bad)
pop
pop
pusha
sahf
loope
sub
cs
or
mov
push
mov
add
int3
ins
mov
not
lods
adc
cdq
in
gs
loope
push
out
fstp
xor
int
test
(bad)
xchg
in
cmps
cmps
mov
mov
aam
ins
xchg
sar
ds
mov
xor
and
inc
sub
retf
pop
enter
loope
add
push
lock
xchg
push
xchg
jge
fwait
push
jns
push
not
sub
pminsw
pusha
scas
outs
call
in
mov
mov
pop
push
inc
aad
enter
leave
lea
push
ins
xor
adc
mov
sbb
cmp
ret
cld
lods
xchg
or
and
xor
lahf
sar
mov
inc
or
or
fild
adc
push
sbb
cli
and
cmps
cmp
(bad)
pop
popa
ret
loop
inc
dec
popa
xadd
jp
mov
push
lock
push
sub
lods
add
(bad)
retf
sub
xor
loope
aad
xor
sti
mov
jb
mov
cli
push
shl
adc
jo
arpl
dec
je
std
fimul
pop
xchg
xchg
jg
pop
es
mov
cmp
in
xor
lea
les
dec
scas
cmps
lea
popa
xor
mov
mov
jnp
push
movs
sub
jg
ds
add
pop
(bad)
fcomi
push
mov
dec
mov
ss
pop
mov
icebp
ficom
je
cmp
ss
(bad)
scas
pop
in
xlat
cmp
mov
jmp
sar
lea
popf
repnz
sub
sub
rol
daa
sub
repnz
mov
mov
mov
jae
mov
adc
leave
xchg
leave
and
jno
ficomp
xchg
cmp
inc
stc
gs
mov
add
cmp
jmp
in
mov
outs
or
jae
js
and
out
sbb
sbb
repz
stos
sbb
inc
mov
outs
cmc
pop
adc
ret
push
or
xor
fild
jmp
mov
push
ins
sub
das
push
cld
jmp
ins
inc
dec
mov
or
and
fisttp
les
xchg
mov
mov
pop
jmp
loop
inc
fs
lock
pop
mov
movs
or
lahf
les
addr16
or
aam
and
xchg
rcl
xor
ret
rcl
shl
push
in
arpl
cmp
xchg
or
xor
clc
mov
cmp
jo
sbb
rol
std
(bad)
ss
pop
dec
imul
(bad)
les
mov
test
mov
scas
xor
je
jge
mov
in
xchg
fld
lock
mov
mov
(bad)
fs
xor
and
aam
scas
mov
cmc
and
test
int
sub
lea
jo
sbb
hlt
dec
xlat
xchg
jp
std
add
jbe
cwde
cmp
retf
ja
mov
aas
sbb
test
xchg
jbe
retf
inc
sbb
popf
mov
mov
stos
gs
fcomp
das
sub
mov
adc
dec
jl
xchg
pop
fcom
movs
(bad)
and
sub
mov
cwde
mov
hlt
mov
push
cs
test
ret
xor
leave
lds
push
dec
stos
sbb
clc
call
cmp
int3
movs
inc
jg
int
xchg
pop
sahf
cli
cli
out
jne
cmp
aad
ficom
adc
mov
sub
add
mov
or
rol
pop
mov
imul
daa
fnstcw
push
cmp
pop
cld
imul
adc
jbe
js
push
clc
sbb
cwde
loop
pop
int3
hlt
cmp
fmulp
cmp
aas
and
(bad)
sbb
cmp
data16
pop
es
daa
pop
dec
pop
mov
jo
retf
outs
mov
sbb
nop
xor
sub
pop
mov
fcomp
fs
in
icebp
inc
in
mov
lds
or
shl
adc
repnz
sbb
sub
mov
fst
arpl
rcl
loope
sbb
xchg
dec
cmps
xor
jae
mov
pop
pop
and
loopne
movs
mov
movs
jecxz
fild
out
fcmove
or
xlat
punpcklbw
(bad)
iret
or
pop
xor
lods
dec
cdq
sar
popa
xor
out
sbb
and
and
push
pop
push
mov
or
ret
cwde
push
ss
out
jle
ss
loope
cmc
push
mov
(bad)
xchg
out
cmps
sahf
jae
adc
sbb
iret
shl
hlt
mov
iret
add
lock
aad
dec
aam
xchg
jl
mov
pop
out
scas
das
mov
(bad)
sbb
mov
gs
shr
jge
test
push
mov
mov
inc
or
xchg
push
pop
xchg
mov
cmp
pop
jl
jns
jne
(bad)
jns
pushf
inc
popf
enter
xchg
out
xor
loop
cmp
sub
or
es
pushf
cmp
cmp
sub
ja
(bad)
aas
enter
mov
and
nop
or
or
int
pop
xlat
into
inc
or
(bad)
pop
mov
out
int
scas
fsubr
loopne
data16
dec
xchg
call
inc
ficom
jb
xchg
adc
call
inc
or
bound
xlat
mov
mov
and
jno
addr16
adc
push
and
sub
lods
movs
das
sub
jmp
mov
and
sub
inc
outs
out
inc
xchg
int
shl
xchg
mov
jmp
add
jns
test
or
xor
aad
imul
lock
fucomip
pop
lahf
mov
add
inc
cmc
push
sbb
push
repz
idiv
ret
pop
stos
pop
jae
xchg
jns
repnz
aad
sbb
fisub
ficomp
xchg
mov
dec
imul
mov
jle
xchg
sub
push
das
ret
fs
cmp
faddp
popaw
popa
bound
cdq
fldenv
ja
popa
(bad)
fwait
hlt
pop
jo
push
mov
push
pop
pop
scas
sar
push
push
mov
mov
dec
mov
loopne
jb
xchg
jmp
dec
mov
les
idiv
push
mov
sub
and
fcomp
into
mov
cmp
cs
mov
imul
sti
fcmovb
cld
sbb
cmp
add
push
and
test
cmp
cwde
dec
aad
test
or
stos
ret
xchg
push
gs
jns
mov
xlat
cmp
jnp
scas
mov
cld
cdq
mov
test
(bad)
fwait
inc
inc
(bad)
or
pusha
mov
cmp
xchg
mov
add
inc
mov
imul
js
call
call
cdq
mov
retf
mov
icebp
jg
mov
dec
sub
pop
sbb
ror
aad
mov
mov
mov
or
and
adc
cmp
xchg
stc
push
je
dec
mov
mov
in
outs
iret
idiv
pusha
dec
xor
jns
jl
or
pushf
add
fidivr
mov
cmp
jp
int
push
jmp
jmp
shr
cld
or
repnz
in
in
mov
in
pop
adc
inc
shl
sub
retf
pop
mov
aas
les
fwait
dec
cmp
pop
std
call
mov
mov
and
inc
mov
push
or
(bad)
int3
dec
mov
mov
mov
or
xchg
jmp
pop
push
jbe
in
xchg
push
xor
pop
push
das
mov
fadd
outs
hlt
mov
xchg
mov
mov
pop
sub
test
inc
icebp
pop
lods
push
stc
sti
inc
add
mov
movs
fmul
pop
test
or
ret
cmp
adc
add
dec
loopne
gs
mov
movs
dec
out
xchg
shl
cs
xor
pop
cmp
add
cs
sbb
xchg
push
scas
adc
adc
push
dec
imul
scas
xchg
cmp
fild
fldln2
in
mov
shr
cmps
jne
mov
hlt
add
pop
add
fldcw
cmps
ja
pop
xchg
popa
jge
push
jbe
mov
jp
dec
int
repz
scas
sub
and
out
and
cdq
pop
sub
dec
jmp
xchg
test
inc
ficom
mov
cwde
xor
fistp
cmp
les
outs
mov
ja
movs
pop
cld
das
jmp
mov
or
fldenv
aad
or
loopne
cmp
add
imul
sub
cmp
or
std
popf
push
jmp
jmp
push
inc
aas
pop
pmulhuw
xchg
xlat
push
fnstcw
aad
jnp
sub
or
(bad)
and
adc
dec
add
add
push
repz
stos
nop
sub
sbb
mov
mov
jne
ja
scas
lds
mov
call
bound
shl
inc
jbe
sti
jns
cmps
jno
test
pop
xchg
movs
mov
into
xor
xor
loope
pop
sub
push
addr16
or
mov
enter
xor
inc
lea
mov
add
mov
add
gs
jecxz
fnstcw
inc
(bad)
jmp
retf
adc
outs
and
pop
popf
and
out
add
jo
lods
sahf
scas
sar
push
fimul
hlt
fsub
je
pop
loop
call
jge
cwde
xchg
inc
mov
lock
lock
or
enter
push
or
cdq
inc
jns
xor
push
and
mov
icebp
in
mov
aad
jmp
cmps
cmp
push
in
iret
cmp
mov
cs
pop
jecxz
cmp
movs
inc
mov
jge
inc
add
sub
mov
fwait
mov
fdiv
repnz
rol
xchg
sub
in
fisttp
dec
(bad)
(bad)
jmp
adc
mov
idiv
jmp
(bad)
sti
int3
fdivr
xchg
aad
stc
and
jno
jnp
xor
adc
(bad)
adc
int
pop
cmp
movs
or
sub
cmp
mov
pop
cmp
in
mov
daa
sbb
pop
sub
test
fdivr
jo
xor
sbb
lods
cmp
fiadd
mov
push
aaa
int3
xchg
iret
inc
sub
pop
ret
xlat
cs
add
sub
test
or
push
int3
and
adc
mov
or
fwait
sbb
cmc
dec
addr16
jae
loop
fcmovnu
dec
scas
and
lock
into
sub
fsub
outs
stos
or
fidiv
xchg
out
je
sbb
push
aad
and
shl
dec
xchg
mov
ret
mov
js
aam
int
or
hlt
(bad)
bound
int
lds
in
xchg
loopne
and
neg
cmp
cmps
inc
adc
sbb
mov
aam
das
xchg
fcomp
adc
cmc
mov
ja
call
sar
imul
jne
enter
fisub
icebp
mov
ins
data16
out
jns
mov
cli
je
aas
adc
movs
test
dec
push
repz
or
xchg
lahf
mov
fwait
adc
mov
cmp
ins
aam
xor
cmp
jae
(bad)
lods
in
xor
int
and
cmp
stc
std
cld
aam
ins
popf
(bad)
fcomp
test
push
add
das
sbb
out
ds
xor
mov
xchg
lea
test
cs
mov
push
clc
cli
test
jmp
lods
or
xor
push
pop
cmps
mov
xor
or
mov
sbb
mov
imul
icebp
into
mov
mov
popf
push
xchg
adc
push
clc
mov
aas
lock
mov
in
mov
xor
ins
dec
push
xchg
int
arpl
xchg
sti
and
or
into
mov
or
loopne
cld
and
cmp
inc
out
nop
nop
xor
mov
add
int
call
loopne
push
xchg
mov
mov
xchg
xchg
mov
fcomp
jo
js
ds
push
nop
pop
repnz
push
int
iret
jae
sub
shl
jl
aam
cmp
aas
or
xor
sub
mov
xchg
or
fcom
and
call
sbb
daa
mov
ds
ds
cmp
jg
jmp
in
mov
and
cdq
mov
dec
idiv
ret
mov
or
sub
xor
sub
repnz
in
das
lahf
repz
std
and
dec
mov
pop
outs
jle
(bad)
adc
cmovs
sbb
inc
pop
push
mov
adc
out
sti
and
add
xchg
nop
adc
rol
inc
repz
inc
xor
fs
mov
mov
add
leave
(bad)
fnstenv
add
out
iret
jl
aad
(bad)
cmc
rol
inc
pop
fsubr
add
imul
out
js
fadd
ins
ret
pop
and
sbb
xchg
arpl
(bad)
pushf
pop
jne
addr16
lods
fsub
cmp
adc
and
xor
push
arpl
gs
inc
xor
inc
mov
push
dec
movs
ficom
or
stos
jl
ins
ss
push
push
sbb
js
and
xlat
add
sub
add
jle
and
cmps
xchg
(bad)
push
pop
test
in
xlat
jo
leave
sub
sti
pop
ret
cwde
adc
fcmovnb
sub
cmp
lea
push
not
pop
mul
jne
xor
ins
psrld
pop
xor
xchg
lods
adc
aad
icebp
repnz
push
push
in
sbb
(bad)
fucomi
cs
ret
test
xchg
sbb
dec
aam
shr
leave
retf
fs
int3
ins
sbb
inc
pop
jmp
mov
adc
jle
pop
sub
mov
cmp
sub
movs
test
fcmovnbe
add
test
jmp
stos
adc
push
jg
cmps
or
daa
dec
push
lea
and
(bad)
(bad)
stos
xchg
rcr
ds
jg
cmp
test
xchg
xor
aad
(bad)
push
jg
fstp
data16
(bad)
cmc
xchg
pop
test
scas
add
inc
repnz
jmp
xchg
push
sbb
push
bound
mov
test
(bad)
cwde
inc
mov
pop
xchg
xor
mov
push
xor
jmp
ror
sti
rol
mov
cmps
jae
pop
retf
sub
mov
inc
add
repnz
dec
mov
dec
and
inc
imul
or
adc
mov
(bad)
imul
idiv
jne
xor
loop
mov
(bad)
movs
jbe
push
xlat
stos
leave
add
clc
stos
or
(bad)
mov
int3
xchg
mov
js
inc
jbe
xchg
fwait
cmp
sub
sbb
jmp
cmc
adc
shl
pop
shl
ror
xchg
in
pop
mov
mov
leave
or
lods
mov
(bad)
mov
and
push
adc
das
(bad)
sbb
in
xlat
fadd
xchg
loop
mov
outs
mov
das
loope
xor
pusha
cs
std
or
mov
call
cli
int
cli
inc
mov
or
lods
das
inc
sbb
cli
call
lea
js
(bad)
imul
cmp
ret
retf
scas
js
jbe
scas
pusha
jnp
test
les
or
test
dec
dec
xor
icebp
push
icebp
inc
sar
iret
xchg
mov
pop
fwait
jo
push
loop
(bad)
aad
jmp
mov
in
or
rcr
aad
fs
xabort
or
aad
sub
gs
sub
fs
add
out
mov
xor
pop
test
cwde
mov
out
call
mov
jno
xchg
cs
out
jg
inc
adc
cli
ins
in
(bad)
cmp
cmp
xor
fpatan
cld
ret
lahf
or
ja
jb
add
popf
int3
stos
dec
inc
inc
cmp
mov
pop
(bad)
test
sbb
lahf
xor
add
sub
mov
clc
sub
stc
into
nop
jle
mov
sbb
add
xlat
(bad)
repz
and
inc
enter
out
pop
pop
repnz
cmp
sbb
daa
mov
bound
mov
das
shl
dec
sub
sub
pop
lods
jns
test
lods
mov
push
pop
xlat
enter
mov
dec
or
xchg
mov
in
es
lods
cmp
aad
icebp
iret
int
lds
mov
xchg
jmp
(bad)
sahf
xchg
mov
push
imul
lods
sub
leave
push
mov
mov
mov
inc
push
shl
xchg
inc
xor
call
push
and
cmp
fucom
inc
imul
mov
push
push
ja
push
dec
lahf
add
not
fnsave
lods
int
outs
mov
cmp
jne
inc
mov
jo
movs
fst
lods
xor
push
pop
pop
aas
lock
loop
fistp
add
xor
jno
dec
xchg
ja
mov
movs
and
sbb
jmp
inc
mov
or
jno
push
fs
cmps
cmp
add
mov
mov
jae
fwait
and
inc
add
pusha
xor
jmp
fcom
test
or
stos
outs
stos
xchg
push
dec
repz
pop
in
aaa
mov
or
fcomp
pop
pop
mov
add
pusha
repnz
jg
jo
int3
xchg
mov
xchg
out
or
imul
arpl
les
call
push
daa
out
xor
or
or
and
mov
push
xor
jbe
add
jmp
aad
lds
mov
jmp
arpl
cmps
sbb
push
adc
inc
cmp
jne
and
out
sbb
inc
sub
lods
pop
xchg
cli
xor
(bad)
loopne
or
dec
jae
add
jg
jo
mov
cmp
popa
add
enter
jae
xor
dec
mov
aad
fiadd
(bad)
cmp
or
jmp
in
mov
in
test
outs
sub
pop
mov
jnp
mov
rcr
pop
ins
mov
push
xor
out
dec
cmp
add
sub
dec
mov
adc
fsub
inc
inc
lds
jmp
(bad)
and
pusha
sub
fst
mov
xlat
push
shl
icebp
mov
sahf
xchg
or
lods
std
outs
data16
push
mov
sub
xor
ds
in
push
das
mov
out
sbb
sbb
dec
(bad)
add
mov
push
lods
cmp
mov
in
imul
xchg
mov
int
pop
fld
sbb
cmp
ror
popf
stos
sar
mov
nop
repnz
cmc
add
pop
push
jle
cld
inc
pusha
jge
hlt
mov
inc
out
dec
mov
xlat
fmulp
xchg
shl
scas
in
dec
push
rcl
xchg
gs
mov
sub
push
pop
dec
sub
inc
adc
int
and
jae
out
push
or
mov
sub
lock
inc
adc
not
mov
in
(bad)
pop
jnp
iret
and
(bad)
sti
fadd
mov
and
push
mov
add
push
jae
retf
aas
sbb
mov
push
rcr
dec
adc
shr
ret
cwde
leave
call
clc
xchg
cmp
inc
inc
adc
dec
jmp
push
inc
ss
out
and
test
sbb
inc
and
pushf
je
and
and
cmp
jmp
cdq
ja
or
pop
addr16
mov
or
das
pop
jmp
pop
ds
xor
jnp
adc
jb
jg
(bad)
xor
fild
inc
sub
dec
call
cmp
adc
adc
enter
test
rcr
sbb
add
mov
call
sahf
pop
jno
in
mov
adc
dec
cmps
imul
fsubrp
loope
pop
cmp
jo
xor
or
ins
cmp
(bad)
retf
pop
inc
adc
lock
jmp
fs
out
mov
adc
push
pop
test
add
inc
push
sbb
mov
(bad)
nop
lahf
or
fst
add
xchg
loop
mov
xchg
fs
mov
cmc
xor
cmp
fidiv
jl
adc
je
pop
inc
imul
icebp
xchg
(bad)
cmp
fs
mov
or
scas
scas
cld
nop
cmp
test
jge
mov
sub
mov
inc
xchg
push
dec
xlat
jbe
inc
imul
jns
js
mov
mov
adc
loopne
icebp
mov
jne
push
inc
and
dec
sub
into
pop
ret
mov
mov
jb
mov
sbb
pinsrw
xor
pop
mov
push
out
mov
sti
out
add
(bad)
sub
sub
out
rol
jno
inc
mov
inc
test
mov
in
jae
adc
pop
cmp
mov
add
(bad)
(bad)
cld
adc
dec
cld
(bad)
push
loop
popf
ficomp
mov
and
mov
push
push
std
jnp
mov
ret
mov
adc
xlat
xchg
push
mov
jno
enter
jmp
push
cmps
fcom
xchg
nop
popa
mov
imul
xchg
xchg
lahf
leave
into
xlat
sub
jmp
outs
mov
xlat
adc
mov
(bad)
retf
stos
popf
mul
pop
sbb
std
or
arpl
out
aam
das
stos
fcomp
and
hlt
sahf
jne
pop
daa
pop
ss
repnz
data16
out
jns
pop
fwait
jecxz
or
mov
mov
push
pop
cmp
push
daa
(bad)
daa
scas
dec
xchg
cli
cld
aam
popa
xor
cmp
dec
jae
sbb
adc
dec
pop
jl
not
mov
sahf
adc
pop
jmp
sub
pop
push
add
pop
mov
jmp
in
inc
(bad)
retf
aad
jp
retf
bound
lahf
rol
jge
dec
clc
jg
xchg
mov
loop
pushf
out
add
packssdw
bound
repz
test
sub
xchg
loop
cmps
sbb
push
les
hlt
test
pop
stc
pop
in
lea
xchg
outs
push
jecxz
push
sti
adc
mov
pop
mov
retf
dec
addr16
pusha
jge
or
call
ins
aad
ins
push
cmc
mov
daa
sub
mov
ds
sbb
cmp
mov
outs
xor
mul
push
jmp
shl
cmp
push
dec
xor
dec
mov
and
dec
int3
mov
daa
popf
pop
cli
mov
sub
xor
leave
test
iret
adc
push
or
int
xor
mov
mov
push
mov
xlat
test
mov
jg
repnz
push
mov
test
mov
scas
iret
test
fmul
add
adc
pop
mov
xchg
jl
mov
jo
dec
sbb
das
pop
xor
xor
jle
loop
mov
imul
pop
out
aam
push
ins
(bad)
in
mov
fist
call
lds
ins
dec
int3
add
lock
cld
fwait
imul
lds
pop
inc
jns
in
fimul
push
xor
pop
jge
jg
mov
leave
xchg
or
fcmovu
sub
imul
xor
pusha
inc
cmp
jae
jb
cmp
mov
or
mov
cs
dec
or
rcr
mov
cmp
cmps
xchg
jmp
movs
jecxz
mov
xchg
test
movs
(bad)
call
or
ss
pop
xor
call
inc
add
mov
hlt
test
(bad)
mov
lock
outs
mov
jmp
xor
mov
mov
dec
dec
loop
out
add
addr16
push
sahf
mov
jne
cmp
mov
leave
add
pop
jmp
retf
fild
sahf
in
mov
int
hlt
sbb
sbb
mov
ja
push
in
mov
cmp
sbb
xor
cmc
push
das
mov
mov
std
mov
xchg
pop
inc
cdq
sbb
int3
inc
(bad)
pop
sub
dec
cli
stos
pop
shl
push
dec
jne
adc
jno
adc
dec
cdq
ret
jbe
sahf
pop
(bad)
pop
call
add
(bad)
repz
and
or
mov
test
pop
in
push
dec
dec
adc
fbstp
stos
test
div
cwde
dec
movs
push
mov
sti
ins
popa
(bad)
(bad)
jmp
xchg
dec
sub
sub
jno
in
movs
lea
out
sahf
mov
adc
movs
dec
inc
sub
mov
lea
jecxz
sub
mov
dec
cli
xchg
jbe
cld
sub
test
pop
aas
and
inc
xchg
test
sub
cmps
pop
cmp
les
jmp
xor
mov
sbb
sbb
push
into
dec
xchg
loope
or
mov
fist
mov
mov
xchg
cmp
dec
jle
xchg
inc
aas
(bad)
mov
cwde
mov
push
cmc
out
repz
lea
push
jg
das
iret
dec
pusha
sbb
adc
mov
add
pusha
dec
leave
in
dec
jmp
call
sub
xchg
cwde
pushf
jmp
or
loopne
jae
add
(bad)
jg
ror
mov
lods
imul
stos
stc
jb
not
add
popa
cmps
xchg
das
inc
das
pop
stos
pop
imul
mov
cli
pushf
ss
cld
push
add
repz
xor
sbb
int3
pop
jge
lock
inc
add
ss
stos
mov
movs
(bad)
enter
mov
ret
ss
leave
js
aaa
jmp
in
mov
xor
gs
test
nop
pop
fimul
add
xchg
outs
push
std
adc
retf
jo
mov
out
in
dec
call
jb
fisttp
outs
mov
(bad)
mov
xchg
push
arpl
push
push
dec
mov
pop
jno
or
jg
repnz
popa
pop
mov
mov
scas
repnz
jl
mov
mov
sbb
add
retf
and
pop
mov
fild
pop
imul
inc
jb
sbb
xchg
jl
mov
pop
mov
hlt
sbb
call
dec
ds
or
repnz
sbb
mov
nop
ins
(bad)
call
jl
fs
nop
mov
aas
aad
and
fmul
and
cmp
ja
movs
xchg
in
sub
pop
std
sbb
shl
ret
scas
or
cmps
imul
xchg
arpl
push
or
call
push
jnp
dec
rcr
jae
jb
add
fld
mov
pop
mov
mov
and
jo
xor
pop
lock
les
sub
sbb
bound
aam
sub
rol
test
jno
aam
push
data16
gs
add
dec
mov
xchg
jae
scas
imul
cmp
cli
(bad)
lods
xor
fcmovb
test
daa
std
leave
aam
lea
inc
push
loop
lahf
std
in
cmp
popa
inc
and
out
add
cmps
pop
repz
popa
inc
add
cmps
cdq
popf
jns
pop
xchg
push
jp
daa
cdq
es
mul
nop
cli
pop
je
cli
popf
lods
dec
push
push
rcr
jge
outs
dec
pusha
outs
das
and
mov
inc
mov
aam
daa
mov
sbb
inc
and
mov
xor
movs
sbb
fwait
shr
in
push
push
test
repnz
sbb
into
popa
sub
nop
mov
fadd
xor
fwait
ss
fwait
xchg
xchg
add
ss
test
mov
retf
cs
sti
dec
(bad)
nop
lea
fcom
push
adc
lods
and
in
sbb
pop
jbe
mov
jp
xlat
into
push
aaa
repz
jno
iret
jmp
pop
pop
dec
and
test
popf
test
xchg
leave
int
cmp
rcr
jge
jno
out
addr16
cs
pop
mov
sub
sar
sbb
push
inc
fwait
xchg
inc
sbb
xchg
popf
and
and
(bad)
(bad)
js
repz
jae
out
and
sub
test
ret
dec
lock
aas
and
cwde
(bad)
push
retf
and
loop
pop
dec
jnp
jge
jb
sub
and
mov
js
jp
in
mov
popa
loop
sub
mov
push
retf
jle
push
push
pop
sbb
jno
cmp
adc
add
adc
(bad)
mov
popf
push
jns
and
xchg
out
lahf
movs
aam
sbb
mov
jle
imul
cmp
jns
mov
push
aas
inc
jge
or
jmp
iret
int
mov
cmp
add
pusha
dec
cmp
inc
mov
sar
lds
mov
arpl
js
js
daa
cs
(bad)
jp
test
push
test
add
inc
cmps
cld
dec
stos
jo
stc
cmp
out
arpl
or
mov
mov
cmps
fsubr
sub
push
cmp
(bad)
fsubr
add
jns
call
retf
add
push
sbb
xor
clc
faddp
mov
arpl
ja
fsubr
mov
mov
sub
(bad)
pop
add
test
xlat
out
sub
mov
mov
out
jle
rol
mov
and
out
ja
fild
push
cmp
dec
in
adc
mul
mov
ja
imul
jae
cmp
loopne
dec
in
call
xchg
es
mov
and
(bad)
sub
mov
xchg
jmp
push
pop
mov
adc
rcr
pop
fisubr
je
(bad)
mov
jle
ss
xchg
xor
cmp
mov
sbb
push
or
dec
xchg
add
(bad)
(bad)
fild
add
inc
nop
addr16
repz
jmp
(bad)
clc
fild
pop
jmp
popf
xor
iret
add
popa
pop
xor
es
mov
add
repz
sub
mov
adc
icebp
jnp
lds
dec
adc
leave
mov
or
pop
ss
mov
xchg
mov
out
push
or
mov
sbb
inc
and
stos
sub
sbb
pop
fisub
sbb
xor
mov
xor
femms
dec
lock
mov
pop
xchg
out
xor
cmps
xor
cmp
pop
je
mov
(bad)
xchg
mov
je
cmp
popa
loop
xchg
fs
xor
ja
push
(bad)
popa
in
fld
leave
inc
dec
imul
xor
dec
test
pusha
out
xchg
fwait
sbb
inc
ficomp
in
push
loop
movaps
xor
push
rep
sbb
push
jns
retf
cmp
cli
icebp
xor
fdivrp
sbb
pop
clc
inc
pavgw
jmp
popa
pop
push
mov
stos
push
test
xchg
sub
add
adc
aas
pop
sub
rcl
test
xor
test
adc
cmp
ret
mov
loopne
stos
dec
cmps
aam
sbb
leave
test
in
pop
push
dec
test
adc
mov
loop
test
test
adc
cdq
out
cwde
sub
scas
retf
lods
adc
imul
js
int3
dec
push
out
dec
dec
push
adc
hlt
sbb
mov
test
(bad)
pop
xor
cld
out
jbe
and
dec
push
adc
adc
push
cmps
leave
jecxz
cld
cmps
hlt
scas
jae
xlat
call
vcvtpd2ps
mov
pop
fbld
push
(bad)
pop
jmp
out
sbb
aad
test
sub
or
xor
jno
in
adc
sub
push
call
gs
jmp
stos
(bad)
mov
inc
lahf
loope
test
fs
cmp
cmp
ja
sub
mov
std
rcr
inc
xor
aad
xor
adc
mov
mov
mov
loop
aad
or
je
xchg
stos
add
adc
push
stc
stos
mov
adc
jp
and
push
xor
and
sbb
fidivr
fcmovnbe
cmp
adc
hlt
mov
sbb
sbb
mov
or
jge
(bad)
test
fnsave
icebp
pop
and
test
xchg
ins
sub
xchg
add
pop
sub
jmp
dec
push
cmp
inc
mov
push
ins
test
lds
fs
push
jmp
stos
pop
dec
clc
loop
je
jmp
mov
(bad)
outs
leave
push
and
mov
jne
dec
rol
in
movs
inc
iret
push
inc
mov
mov
fmul
clc
cld
jo
xchg
pop
cmp
hlt
inc
in
add
mov
cmp
jb
pop
push
push
(bad)
fsubr
sub
cli
test
jecxz
or
mov
jae
add
psubsb
jmp
popa
sub
mov
cmp
jo
test
push
xor
sub
mov
dec
mov
and
fs
push
pusha
leave
pop
fistp
ret
jle
lahf
rol
test
repnz
(bad)
fadd
jno
pop
jnp
(bad)
jo
cld
xor
mov
loopne
jns
dec
das
xchg
jo
adc
out
add
pop
xchg
lods
lahf
and
test
ror
or
inc
out
push
pop
push
mov
cmps
xor
mov
xlat
(bad)
fbld
push
and
cdq
mov
leave
adc
iret
jg
add
cdq
ret
cmps
ins
call
mov
jne
rol
scas
nop
(bad)
jge
cmp
dec
ret
pop
(bad)
jne
repnz
jno
repnz
lods
and
dec
cdq
sbb
and
in
jns
xchg
test
jae
or
cmp
in
mov
sar
mov
push
lahf
fwait
popf
xchg
jb
shr
dec
dec
scas
ja
test
addr16
jecxz
sub
adc
xchg
stc
mov
test
rol
jg
or
inc
dec
test
inc
adc
leave
jle
aad
lds
(bad)
sub
push
test
jle
call
popf
rcr
lods
push
repnz
clc
hlt
ret
add
adc
pusha
clc
(bad)
mov
push
dec
dec
and
and
inc
adc
jecxz
loope
dec
leave
inc
push
push
push
sbb
fdiv
movs
mov
hlt
lahf
mov
imul
icebp
ret
mov
fcmove
adc
mov
xor
mov
and
push
cdq
inc
addr16
ds
std
and
sahf
jmp
les
mov
sub
add
pop
les
push
ins
xchg
mov
(bad)
into
sub
push
adc
stos
lea
cmps
into
fmul
sbb
add
shr
mov
mov
js
xor
mov
push
dec
push
aad
sub
stos
(bad)
mov
push
pop
and
out
sbb
inc
add
ins
sar
addr16
mov
test
mov
pop
xlat
pop
inc
jne
pushf
pop
mov
hlt
mov
dec
add
outs
mov
sbb
ret
imul
xchg
aas
mov
retf
mov
ins
int3
shl
inc
rcl
ficom
(bad)
stos
xor
dec
iret
aad
mov
mov
(bad)
out
pop
mov
aad
xor
pop
mov
jge
mov
jbe
add
inc
loope
jne
jae
mov
dec
ss
test
dec
mov
sahf
jecxz
xor
daa
test
xor
xchg
ret
fsubr
xchg
popa
enter
cs
aaa
mov
jg
and
shl
shr
shl
mov
inc
adc
dec
aas
cld
jge
mov
and
ja
push
retf
or
or
aaa
mov
xor
mov
(bad)
sahf
fisttp
xchg
mov
pop
retf
add
sbb
jl
sbb
or
mov
jo
in
xchg
shr
and
inc
adc
push
cs
or
push
imul
lods
jecxz
cwde
popa
fmul
or
es
mov
pop
adc
or
pop
xor
(bad)
pop
jno
test
in
adc
cmp
or
xchg
mov
ret
xor
push
(bad)
mov
push
inc
js
or
lds
fistp
mov
push
les
cmp
shl
jae
and
mov
push
imul
out
aaa
rol
nop
test
jne
dec
mov
jle
mov
aaa
cmp
outs
into
stc
inc
(bad)
fcomp
movs
xlat
gs
mov
shr
jl
pusha
jns
lods
jb
inc
test
mov
push
fsub
pop
iret
loopne
xlat
or
les
xor
jl
jns
mov
mov
adc
pop
rcr
std
sar
sub
inc
mov
mov
fwait
adc
(bad)
pusha
pop
ins
and
pop
call
xchg
dec
sar
push
xor
and
and
mov
loope
dec
or
in
call
(bad)
retf
push
pop
add
mov
popa
cmps
add
and
ss
dec
cmp
jge
and
mov
or
jge
js
pop
(bad)
jle
mov
jg
cmps
push
xchg
popa
daa
cli
mov
xchg
imul
clc
imul
ror
jns
test
ss
sbb
les
lds
add
std
out
lock
dec
inc
pop
ss
cmps
xchg
js
pop
in
xor
lods
mov
jecxz
push
cmp
pop
(bad)
jb
xor
mov
into
adc
xchg
loope
or
outs
pusha
fdiv
add
sti
xlat
hlt
adc
mov
sbb
sub
pop
bound
mov
mov
or
jmp
bound
arpl
dec
ins
es
les
leave
pop
stos
xor
(bad)
cmp
mov
retf
test
icebp
cmp
popa
test
mov
and
int3
lea
sbb
mov
cmp
pushf
and
mov
sub
xor
jnp
xchg
fs
cmp
imul
(bad)
mov
mov
retf
stos
fs
mov
mov
stos
lods
xor
loop
dec
and
nop
(bad)
mov
dec
out
cld
mov
xor
nop
aas
mov
loopne
mov
shl
fcom
add
cmp
les
cmp
mov
(bad)
add
out
inc
aad
sbb
pop
inc
ss
aam
scas
out
and
je
test
add
std
pop
out
jnp
inc
lea
mov
xchg
xchg
inc
test
add
stos
lds
es
shl
cmps
test
xlat
pop
leave
int3
xchg
(bad)
mov
cmp
jmp
xor
int
adc
loope
loope
in
scas
add
or
mov
fidivr
icebp
jno
iret
or
(bad)
mov
jecxz
cmp
jbe
sahf
dec
cmps
in
pop
jae
sti
adc
sbb
rcr
fdivr
ficom
or
arpl
xor
and
gs
mov
pop
push
sub
div
into
nop
pop
inc
or
push
stos
push
jne
test
daa
out
xchg
sar
retf
outs
pushf
xchg
fisub
popa
jns
cmp
(bad)
and
shl
xor
loope
pop
add
sub
xor
shl
aad
pop
mov
jp
mov
mov
(bad)
pop
push
sub
loopne
and
push
mov
rol
rcr
push
ja
leave
or
fst
mov
push
sbb
lock
mov
push
xchg
fiadd
xchg
dec
fimul
jge
jecxz
xchg
lods
shl
or
jmp
pop
popa
and
mov
or
cdq
mov
movs
mov
dec
js
(bad)
mov
cmp
ins
out
add
sub
pop
in
dec
arpl
push
bound
pop
jmp
les
push
fwait
or
push
cmps
jmp
enter
je
cmp
dec
mov
lock
outs
mov
dec
and
retf
cli
ret
outs
jmp
jb
in
leave
sbb
js
xchg
adc
push
adc
and
cmps
test
mov
mov
outs
push
scas
daa
push
dec
cli
adc
in
arpl
cmps
or
jno
xor
movs
vmread
dec
push
dec
and
and
shr
pop
push
push
retf
test
lods
jo
fstp
nop
retf
stc
push
(bad)
and
loop
add
fwait
add
push
jg
mov
sti
pop
mov
in
xchg
mov
in
aas
and
inc
cmp
fidivr
retf
sar
mov
and
mov
xchg
iret
imul
jge
cmp
pop
xchg
jbe
push
inc
jo
ror
mov
sub
xor
jb
sahf
imul
add
xchg
pusha
call
sti
sub
test
test
jmp
cmp
(bad)
outs
xor
mov
nop/reserved
cmps
leave
in
in
repnz
add
pop
mov
dec
sahf
retf
jns
fnstcw
jle
push
sti
(bad)
or
aas
test
fnop
push
sti
jecxz
test
call
cwde
hlt
mov
test
icebp
jmp
in
pop
loopne
and
es
aas
ss
sbb
movs
and
adc
js
cmp
pop
mov
sub
or
xchg
jl
sub
in
push
xor
jnp
mov
jne
rol
movs
push
cmp
add
xor
idiv
mov
outs
movs
stos
mov
lock
mul
adc
psrlq
dec
jmp
repz
sub
shl
jl
neg
sbb
(bad)
and
mov
ins
inc
add
je
scas
add
retf
test
jb
sbb
fs
push
jge
mov
push
repz
jp
sbb
repnz
cmps
fistp
add
rcl
lea
dec
add
in
out
xor
mov
and
mov
cmp
(bad)
fidivr
push
fisttp
jge
or
bound
adc
mov
ins
xor
test
mov
test
and
iret
pop
loop
inc
adc
ret
xchg
mov
or
xchg
jbe
sub
xchg
movs
out
out
add
in
xlat
jge
xchg
mov
mov
mov
(bad)
ja
repz
shr
or
daa
or
and
mov
ins
pop
sbb
pop
mov
dec
sub
xchg
and
mul
pop
add
gs
sub
mov
icebp
cmp
cmps
push
sbb
icebp
add
and
jg
add
jge
jne
loop
gs
pop
add
popa
jge
cmp
scas
in
dec
inc
ficom
dec
adc
retf
sti
std
(bad)
fwait
js
fdivr
jns
dec
ds
lods
out
mov
loope
pusha
and
in
ret
push
cmp
mov
sbb
in
popa
int
and
nop
loop
leave
in
and
add
inc
in
aaa
mov
test
icebp
fdiv
pop
sahf
mov
lods
xchg
sub
mov
ss
sti
loope
xor
push
add
sahf
jo
xchg
xchg
jne
dec
mov
and
mov
inc
xor
jb
inc
mov
pushf
pop
call
in
gs
fild
cmp
push
in
xchg
xor
push
and
in
inc
mov
pop
mov
test
(bad)
dec
and
shl
out
aad
shl
sub
add
cs
pop
mov
cmc
push
popf
adc
push
ss
xchg
leave
fstp
jmp
jns
or
mov
gs
test
js
inc
addr16
push
loopne
adc
ret
lods
or
and
cmps
mov
jecxz
sti
imul
(bad)
jbe
pop
lds
retf
stos
stos
loopne
jno
push
cmps
sbb
cmps
into
push
xchg
es
push
mov
sub
mov
mov
mov
mov
aaa
xor
add
clc
inc
cmp
mov
pop
(bad)
movs
mov
push
adc
and
scas
out
push
cwde
(bad)
pop
mov
sahf
fld
fidiv
jmp
in
or
in
jmp
fmul
xchg
mov
sbb
jmp
dec
add
out
retf
arpl
leave
(bad)
sub
outs
sbb
mov
jl
lods
xchg
pop
sub
xor
in
add
push
pushf
cli
(bad)
mov
pop
cmp
daa
jle
fistp
test
xchg
cli
(bad)
add
jo
ret
mov
mov
xlat
pop
pushf
add
adc
inc
mov
mov
cli
out
add
icebp
cli
retf
mov
sbb
idiv
mov
jnp
dec
cmps
fidiv
sbb
xchg
xor
pop
mov
cmps
sub
fbld
shl
nop
fiadd
cli
aad
and
ins
cdq
fucomi
or
adc
gs
mov
sub
dec
shl
icebp
dec
data16
pop
and
xlat
repnz
test
(bad)
fld
sahf
mov
or
(bad)
xor
jp
ins
scas
sbb
gs
dec
sbb
dec
push
cmp
gs
fwait
sub
sub
ret
ins
push
lock
cwde
inc
mov
jl
mov
push
pop
mov
jb
test
xchg
pusha
enter
sub
in
dec
or
retf
aas
lahf
(bad)
stc
ins
stos
in
pop
dec
dec
fcom
fmul
push
sub
repz
cmp
mov
ja
add
mov
adc
loope
in
pop
mov
hlt
cld
shl
sub
cld
xchg
mov
inc
dec
mov
xchg
push
or
pop
test
loope
mov
dec
jecxz
arpl
and
inc
aad
mov
jge
mov
lea
sbb
sahf
cs
mov
cmps
(bad)
in
repnz
jns
inc
cmp
arpl
int
pop
or
mov
fld
out
push
xchg
je
xor
outs
cmp
call
lds
stos
adc
pop
push
or
and
sub
jo
xor
jns
mov
cmc
arpl
fst
popa
xor
cmp
das
loopne
sub
fstp
add
cmps
mov
mov
and
scas
shl
cmp
adc
mov
mov
shl
lahf
add
mov
ret
(bad)
jns
mov
mov
mov
(bad)
cmp
in
data16
lods
xchg
inc
sub
fisubr
pushf
loop
pop
cdq
sbb
imul
imul
lock
mov
pcmpeqd
cmp
cs
add
xchg
enter
mov
jmp
pop
data16
jne
and
dec
aam
call
div
cmp
or
fldcw
bnd
jne
jne
adc
(bad)
test
(bad)
xchg
pop
adc
lahf
daa
push
ror
pop
mov
adc
fs
mov
jae
lods
ror
add
cmp
add
push
adc
das
add
xor
cdq
and
inc
sahf
ins
fdiv
sbb
out
movs
or
sbb
dec
sbb
daa
fadd
in
in
xlat
pop
fild
pop
and
les
(bad)
adc
jmp
jmp
and
jge
ins
jae
into
pushf
ins
lock
dec
pushf
cmp
into
sub
xor
jnp
push
cld
mov
or
div
in
push
cli
sti
outs
cmps
xor
adc
sub
imul
test
ror
jb
sub
dec
ficomp
out
aas
push
fistp
push
cli
sub
dec
cdq
xor
rol
add
(bad)
dec
xchg
outs
dec
jne
jnp
(bad)
retf
rcr
lahf
outs
out
lock
and
rcr
retf
popa
and
or
inc
mov
ds
out
sbb
dec
xor
aad
pop
call
pop
scas
jmp
or
pop
test
pop
dec
push
cmps
lahf
and
add
rcl
ins
inc
push
std
das
push
sahf
ins
xchg
mov
aas
(bad)
and
jns
les
aad
popa
or
sbb
pop
pop
cwde
and
cmp
and
cmp
movs
mov
adc
dec
sbb
and
xchg
in
sbb
outs
(bad)
sbb
mov
adc
nop
add
jns
mov
inc
clc
cmp
cmp
lahf
lock
loop
cmps
xor
test
ins
and
xchg
(bad)
call
xlat
and
out
mov
or
pop
sahf
(bad)
enter
cmp
movs
je
mov
popf
icebp
ret
mov
xor
pop
inc
mov
je
push
iret
jge
push
sub
std
mov
dec
shl
inc
push
iret
cwde
mov
(bad)
imul
shr
push
xor
dec
ds
xor
fwait
jle
popa
ret
nop
jne
in
enter
loope
pop
call
xchg
jno
sbb
ja
cmp
and
ret
das
arpl
cmp
int
pop
mov
jp
adc
mov
sub
ret
iret
scas
jbe
call
adc
xchg
jmp
fsub
cmps
or
cwde
mov
jmp
xor
xor
jno
xchg
and
scas
out
push
(bad)
jmp
lea
mov
(bad)
cmps
inc
sahf
retf
fsub
mov
out
mov
mov
jecxz
push
jp
fisttp
jg
inc
fldenv
cmp
mov
enter
in
pop
sbb
ja
adc
add
fmul
jne
or
mov
adc
or
adc
in
aad
out
pop
idiv
and
xor
mov
std
mov
outs
loope
mov
add
inc
out
add
into
mov
or
xor
pop
pusha
ss
push
hlt
icebp
out
pop
pusha
pop
xor
jmp
cdq
(bad)
out
sub
popf
xchg
xor
push
lock
push
stos
mov
js
ror
int3
mov
loope
mov
adc
xchg
pop
push
movs
in
repz
outs
jo
(bad)
mov
ins
pop
inc
sub
and
icebp
or
outs
sbb
lods
in
mov
sub
jl
jl
push
mov
mov
into
dec
fmul
bound
loop
lds
fidivr
adc
push
mov
retf
ins
adc
cmps
dec
cmp
std
addr16
out
xchg
mov
cmp
stos
dec
jns
mov
push
jae
pop
aas
jb
(bad)
push
xor
es
push
enter
dec
test
loop
dec
mov
sub
mov
sub
fidiv
dec
cmp
(bad)
xchg
dec
retf
and
push
and
mov
add
sub
mov
sub
mov
(bad)
and
and
pop
inc
pop
arpl
or
ja
xchg
jle
push
fldenv
jb
retf
popf
sub
rcr
adc
add
shl
sbb
jge
push
pop
fdiv
or
je
stos
lock
adc
add
jmp
jbe
cdq
mov
push
cmp
out
inc
adc
leave
pop
ins
imul
mov
call
add
out
je
imul
loope
call
sub
or
ret
push
mov
in
and
cwde
fwait
stos
loopne
popf
jne
enter
cmp
mov
inc
mov
clc
sub
(bad)
cdq
call
cmps
aas
xchg
jmp
mov
scas
(bad)
jns
inc
movs
inc
jl
push
clc
jns
aam
push
popf
push
arpl
mov
(bad)
fs
xchg
ja
jecxz
out
int
push
dec
sbb
test
xchg
adc
loopne
inc
and
and
push
and
movs
fiadd
std
mov
ss
aam
dec
dec
jne
xlat
enter
mov
adc
mov
xor
jl
int
(bad)
out
iret
aad
mov
inc
and
pop
jg
and
arpl
loope
retf
adc
push
pop
xor
push
mov
ins
cmps
pop
mov
(bad)
mov
pusha
and
je
mov
cmp
test
or
ficom
mov
mov
push
xchg
cmp
add
mov
sti
test
gs
aaa
xchg
jo
push
ret
mov
arpl
scas
pop
retf
mov
out
jmp
ret
mov
(bad)
out
push
aas
pop
pusha
inc
jg
push
sbb
jb
push
and
sbb
mov
fwait
pop
fs
cld
loop
cmp
xchg
mov
mov
mov
repz
jnp
idiv
cmp
stc
mov
jmp
xor
mov
dec
movs
std
mov
imul
jl
pop
call
xchg
sti
ret
test
mov
pop
int3
jmp
mov
adc
cli
inc
das
repnz
and
mov
dec
cmps
rcr
shl
ret
and
jb
fwait
lahf
call
popa
add
ins
dec
retf
movs
add
out
data16
repz
sbb
jle
or
mov
lods
fnsave
sbb
adc
and
ins
push
inc
fbstp
in
mov
clc
scas
mov
aaa
jg
call
hlt
int3
jo
fneni(8087
in
mov
inc
(bad)
xlat
mov
ror
adc
and
stc
shl
into
sbb
sbb
cmc
or
movs
test
rcl
call
sub
and
mov
xchg
and
lea
mov
inc
scas
outs
adc
fmul
push
adc
inc
sbb
scas
das
adc
mov
arpl
fbld
iret
clc
(bad)
xchg
sub
cmps
inc
dec
hlt
add
dec
call
sbb
adc
push
cs
enter
clc
pop
ja
mov
test
neg
mov
and
nop
inc
jnp
inc
xor
push
into
dec
(bad)
hlt
pop
fwait
(bad)
out
stc
mov
sbb
xor
mov
sbb
or
jp
pop
(bad)
cld
push
fist
hlt
lock
enter
jnp
movs
lahf
dec
call
nop
mov
enter
push
fneni(8087
adc
xchg
or
fidivr
cmp
test
jo
ja
pushf
das
aad
cld
inc
and
ror
jmp
pop
out
mov
push
fisttp
xlat
scas
xchg
mov
mov
pop
cld
js
pop
into
adc
pusha
pop
jne
xor
and
cmp
mov
(bad)
std
mov
neg
and
and
retf
add
jg
mov
in
sub
push
push
fimul
jle
jle
fmul
sub
loopne
xchg
(bad)
fisubr
in
ror
daa
mov
frstor
std
stos
or
arpl
add
inc
rcl
js
stc
jge
and
xchg
(bad)
xor
sub
out
fdiv
prefetchwt1
xchg
fidivr
int
mov
inc
pop
inc
daa
imul
push
adc
sbb
mov
popf
jge
push
cmc
sbb
cmp
cli
pusha
out
leave
lahf
mov
and
shr
arpl
out
sub
sub
aaa
xchg
xchg
dec
cmp
or
mov
cmp
mov
cdq
inc
and
(bad)
cli
je
xchg
pop
ror
lds
int
inc
(bad)
nop
xchg
fwait
and
out
or
pop
jecxz
mov
js
pop
cmp
mov
pop
shr
jmp
sar
adc
movs
mov
imul
scas
cmp
out
inc
mov
out
movs
mov
jmp
lahf
sbb
stc
loopne
fs
sbb
shr
add
sbb
out
push
out
and
xor
sub
out
fdiv
stos
data16
jge
pop
movups
loope
push
ss
pop
mov
mov
cmc
mov
(bad)
xor
sbb
ret
push
movs
inc
scas
or
scas
mov
retf
ret
pop
lahf
mov
sub
add
mov
dec
in
push
cli
adc
aas
dec
cmp
leave
xchg
test
jbe
jg
mov
jmp
jle
(bad)
mov
ss
aam
stos
inc
sub
push
pop
(bad)
call
sbb
loopne
sbb
stc
sbb
sbb
mov
repnz
cld
mov
dec
mov
xchg
gs
push
pop
nop
pushf
cld
jbe
push
mov
pop
cmps
cld
pop
push
pop
repnz
jg
sub
scas
adc
adc
in
or
pop
test
outs
cmp
or
inc
ror
scas
mov
test
lods
mov
dec
xor
(bad)
mov
jmp
enter
add
lea
mov
xchg
std
sbb
mov
jo
lods
movs
or
retf
inc
inc
mov
xor
ins
sbb
cmp
fstp
fnstsw
pop
xchg
lods
sbb
xchg
mov
sbb
mov
pusha
mov
add
fidivr
out
aas
push
pop
cmc
cmp
pop
shl
dec
(bad)
sahf
fsubr
sub
mov
inc
fisttp
retf
pop
adc
cmp
pop
stc
pusha
imul
ja
adc
and
xor
cmp
inc
stc
pushf
loope
add
ins
sahf
rcr
mov
aaa
xor
or
out
dec
out
test
(bad)
ret
enter
scas
adc
outs
push
dec
stos
dec
cmp
outs
fisttp
scas
loopne
in
lock
scas
scas
ja
(bad)
dec
imul
inc
push
test
mov
sahf
push
jg
test
mov
pop
sub
ja
pop
inc
sbb
stos
mov
and
dec
cmp
arpl
ret
test
push
out
mov
xor
std
lea
imul
leave
inc
outs
jl
hlt
mov
and
mul
call
icebp
jmp
jnp
xor
std
mov
cs
jbe
push
pushf
popf
popa
int3
push
daa
call
add
push
push
in
pop
ret
and
pop
enter
jge
in
mov
stos
das
ror
clc
setg
sbb
sub
lea
addr16
cwde
mov
mov
fsub
xor
out
sub
rcr
pop
cmp
or
retf
xor
scas
push
popf
lods
add
inc
out
mov
xchg
mov
cmp
mov
bound
jl
ret
inc
pop
out
mov
jo
push
div
push
pop
pushf
dec
jne
cmp
test
pop
shl
mov
into
pop
xor
in
jle
call
hlt
lods
inc
ret
dec
sar
pop
or
mov
sahf
ss
sub
pop
adc
inc
xchg
mov
or
push
add
sub
cmps
js
jnp
inc
pushf
sub
lahf
xchg
call
sbb
jg
mov
xchg
push
cmp
sub
inc
adc
mov
iret
sub
out
in
test
rcl
add
cmp
sub
(bad)
aam
push
pop
test
jle
pusha
push
xor
sbb
mov
add
or
sbb
sbb
and
mov
pusha
lods
dec
push
ja
and
daa
popf
adc
scas
imul
inc
jmp
jle
in
mov
jno
mov
lods
mov
jbe
into
mov
jmp
pop
cld
add
xlat
clc
inc
cmp
pop
pop
cmp
ins
(bad)
mov
ds
pop
sahf
outs
xor
je
sbb
fidiv
or
xor
push
push
repnz
pop
(bad)
outs
or
sti
or
jmp
dec
add
loop
aas
fmul
adc
cmps
xchg
mov
(bad)
arpl
pop
ror
leave
loop
adc
xlat
mov
sub
cmps
cmp
std
stos
push
loop
ins
popf
scas
and
or
mov
cmp
sbb
aam
test
sahf
mov
mov
or
or
pushf
cld
dec
cmp
loope
adc
cs
inc
jmp
idiv
sub
sbb
into
or
jb
jmp
cs
lock
xchg
pop
out
inc
pop
sbb
(bad)
mov
test
std
call
dec
sub
aad
cmps
out
in
and
aad
mov
sbb
retf
mov
jp
mov
stos
xor
stos
mov
movs
or
push
pop
or
xor
fidiv
xchg
jg
pop
inc
fwait
push
cmp
dec
xor
push
in
hlt
jecxz
or
xor
or
ret
mov
dec
repnz
mov
cmp
jns
xchg
lods
ins
push
mov
pop
int
test
in
je
daa
mul
sbb
in
push
mov
jns
ds
push
loopne
shl
cmc
dec
(bad)
mov
fild
ins
rcr
dec
mov
fdivr
cmovge
sbb
aaa
dec
and
jne
int
sbb
or
outs
loope
adc
sbb
sbb
daa
cmps
fcomp
into
cmp
xchg
pop
sub
rcr
and
ss
fstp
xchg
mov
dec
xor
xchg
aas
add
jo
gs
pop
jg
fxch
push
nop
retf
sub
in
jbe
add
jp
cmp
mov
mov
add
rol
xor
bound
xor
sbb
inc
sub
cs
lock
out
mov
inc
rcr
repz
push
mov
dec
push
mov
sub
mov
pusha
xor
push
lds
pop
sub
sub
in
push
mov
inc
add
jmp
rcr
push
fucomip
add
mov
pop
pop
scas
movs
mov
retf
xchg
add
jnp
inc
and
in
imul
ret
push
xlat
dec
nop
add
push
sahf
inc
scas
ins
repnz
gs
sbb
and
idiv
cld
ror
test
mov
xor
icebp
neg
cmp
add
cld
mov
jb
sub
sub
clc
retf
lods
and
cmp
dec
fist
xor
ror
mov
and
enter
out
lock
shr
mov
pusha
cmp
cmp
aas
mov
aas
mov
and
add
xchg
sub
ja
mov
inc
stos
add
fs
mov
or
shl
cmp
add
cmp
ret
clc
dec
ins
out
dec
imul
mov
add
cmp
xlat
movs
mov
ret
xchg
fisubr
(bad)
fdiv
inc
jle
sub
and
push
cmp
mov
(bad)
std
jmp
add
push
in
fs
pop
aas
sbb
nop
sub
adc
or
mov
mov
jmp
push
(bad)
(bad)
cmps
sbb
test
popa
in
into
int3
jl
rcl
dec
gs
mov
push
or
pop
xchg
scas
mov
push
bound
or
sub
fisttp
fild
stos
daa
or
sbb
xor
cmp
jle
lods
mov
mov
jnp
das
test
fdiv
sbb
(bad)
fmul
mov
ret
cmp
inc
jl
add
pop
dec
mov
jl
mov
sub
push
(bad)
pop
cmps
or
shl
imul
mov
hlt
fidivr
and
jno
adc
xchg
jmp
inc
stos
ss
loopne
inc
mov
push
pop
addr16
add
jbe
pop
and
clc
xchg
stos
adc
mov
mov
into
div
sti
mov
(bad)
test
pop
xor
lea
sbb
or
jns
adc
sub
scas
test
in
sbb
jg
iret
scas
sub
cmp
pop
cmc
movs
push
imul
dec
xor
ins
push
add
sub
aaa
pop
sub
mov
add
test
ret
fmul
por
clc
pushf
or
add
adc
aam
mov
inc
movs
push
and
add
loope
xchg
into
adc
xor
ret
les
jbe
and
(bad)
mov
sbb
das
xchg
sub
outs
push
mov
push
dec
in
mov
inc
push
adc
loope
outs
retf
sbb
xchg
dec
test
movs
fstp
cli
sub
mov
sbb
(bad)
adc
push
mov
xchg
mov
or
shl
and
ds
int3
stos
pop
pop
fprem1
push
add
sbb
or
in
(bad)
pop
dec
jmp
mov
mov
add
cmps
xchg
jno
ficomp
add
neg
inc
ret
fcomp
xchg
jo
mov
cmp
popf
loopne
adc
push
jns
in
mov
pop
push
clc
movs
pop
push
pop
mov
mul
fstp
add
aas
pop
adc
cwde
neg
adc
and
push
and
movs
xor
push
fistp
das
xchg
push
imul
cwde
es
out
mov
int
or
sub
pop
inc
or
and
sbb
mov
mov
and
(bad)
jl
cld
enter
jae
dec
inc
cwde
push
cmp
popf
xchg
dec
scas
adc
and
ins
popf
je
fidiv
popf
retf
pop
test
das
and
hlt
(bad)
jns
movs
out
jl
aam
or
or
sub
mov
popf
scas
popa
pop
inc
inc
jl
xchg
out
lods
clc
popf
es
mov
idiv
les
mov
aaa
retf
js
mov
test
sub
(bad)
rcr
add
xchg
adc
bound
imul
xor
or
cwde
fmul
cmp
jecxz
or
cmp
sub
(bad)
icebp
pop
mov
scas
jmp
xchg
int3
adc
xor
jg
retf
and
xor
push
adc
(bad)
out
aam
mov
scas
mov
fstp
mov
cmp
aaa
jl
adc
xor
(bad)
pop
push
lods
call
dec
addr16
nop
pop
push
mov
sub
dec
ins
stos
mov
lods
adc
xor
enter
into
(bad)
in
cmp
int
sbb
nop
fisubr
loope
adc
stos
and
adc
aas
in
fsubr
adc
add
aaa
and
call
lods
push
inc
jnp
push
icebp
jbe
fwait
or
retf
int3
mov
mov
int
std
es
pop
xchg
popa
add
cmp
xchg
inc
push
dec
int3
mov
dec
in
nop
mov
icebp
push
mov
call
dec
lock
in
ficom
mul
xchg
sbb
pop
or
retf
aam
mov
pop
lods
cmp
push
in
pop
movs
scas
mov
xor
jp
clc
jns
lahf
xor
fnstcw
ds
into
into
fdivr
xchg
arpl
cmp
xchg
arpl
sub
aas
sub
std
push
imul
push
push
in
xchg
clc
add
pop
mov
lods
sub
adc
stos
add
xor
test
fwait
in
and
sbb
retf
xchg
enter
push
inc
push
mov
sbb
movs
or
popf
and
push
std
cs
xor
pop
ins
(bad)
test
stos
daa
les
xor
push
popf
repnz
mov
(bad)
jle
mov
cmp
movs
test
repz
imul
mov
js
sub
sub
pop
or
ds
jl
dec
cmp
and
inc
xchg
aam
div
pop
out
lods
jp
xor
sbb
push
mov
or
dec
cli
push
jmp
push
push
pop
cmc
imul
sbb
push
push
mov
fsub
fisttp
adc
xchg
jbe
ret
inc
push
push
lock
call
jmp
mov
or
sbb
dec
rcl
pusha
ins
mov
in
movs
push
cmp
mov
cmp
add
cmp
cli
outs
icebp
adc
and
fidivr
mov
mov
cmp
jnp
scas
lock
addr16
adc
xlat
out
ror
adc
ins
pop
ss
xchg
out
ficomp
add
inc
rol
retf
or
mov
sbb
or
xchg
xor
je
repz
cmp
je
cwde
sti
loope
out
jbe
outs
inc
ror
xor
xchg
adc
arpl
ret
enter
jo
in
and
mov
and
xor
sbb
inc
fidivr
sbb
jmp
arpl
mov
repnz
ret
adc
inc
inc
and
ins
daa
clc
xchg
arpl
sub
int3
popa
ds
sbb
adc
out
mov
nop
repz
or
sub
lock
retf
push
pop
test
xor
sti
int
mov
popa
push
mov
mov
mov
cmc
push
inc
pop
mov
xchg
scas
cmp
sar
xchg
jge
jne
mov
jae
xor
ins
(bad)
test
push
outs
mov
xchg
ins
and
pop
mov
jnp
(bad)
pop
ins
pop
ud1
test
pusha
xchg
mov
aas
fimul
jge
jns
clc
data16
mov
cmps
mov
pop
xor
inc
mov
imul
scas
sub
cmp
dec
mov
retf
es
stos
mov
call
cmp
push
push
out
in
sub
dec
jp
adc
pop
aad
test
imul
xchg
xchg
lock
repnz
push
shr
jmp
adc
xor
pop
mov
push
or
xor
cmps
mov
inc
shl
shr
and
jmp
(bad)
inc
or
push
add
test
stos
xchg
and
xor
mov
shl
mov
inc
test
jecxz
cmps
push
add
test
adc
xchg
add
mov
sbb
dec
aas
adc
mov
adc
leave
xlat
(bad)
retf
dec
sbb
mov
sbb
jo
fbld
xchg
das
mov
push
icebp
shl
push
pushf
jecxz
push
dec
out
xor
fistp
(bad)
ds
cmp
loop
inc
push
dec
mov
loopne
xchg
addr16
fisubr
xchg
std
(bad)
leave
push
pop
dec
sbb
jmp
mov
adc
scas
sar
out
jns
push
cmp
mov
cdq
xchg
popf
je
and
clc
or
jge
inc
push
sub
push
fs
dec
cmps
gs
lea
inc
cmp
push
sbb
sti
jmp
sub
rcr
in
enter
in
pop
std
cli
neg
pop
ss
test
or
xchg
hlt
mov
push
pop
xchg
or
mov
cmc
shl
jl
repnz
pop
rcl
cmc
ret
repz
scas
iret
jmp
add
test
stos
lahf
imul
mov
(bad)
out
push
es
addr16
and
addr16
mov
int
(bad)
inc
adc
ficomp
lahf
add
sbb
ret
xor
sub
(bad)
mov
clc
jns
cmp
xchg
out
sub
cld
(bad)
sbb
xchg
daa
aad
in
add
cdq
xchg
(bad)
(bad)
(bad)
fldcw
inc
fdiv
inc
ins
das
icebp
call
push
mov
int
sahf
sub
out
push
jb
xchg
sub
mov
inc
jmp
shl
repz
or
cmp
jno
jp
mov
and
enter
loope
ret
gs
mov
loopne
push
fcmovne
jnp
xor
(bad)
xor
mov
fidiv
ror
aam
mov
(bad)
nop
xor
hlt
out
hlt
aaa
mov
movs
and
or
jp
cld
sub
and
lods
xchg
sbb
into
mov
adc
jg
xchg
repnz
das
fld
std
xchg
pop
shl
lods
addr16
fild
cmp
shl
mov
xor
mov
js
cmp
xchg
xlat
jg
sbb
xor
inc
imul
mov
add
test
and
mov
movs
mov
or
xchg
call
jbe
add
sar
mov
loop
jns
pop
test
loop
repnz
push
push
out
jo
cmc
mov
push
sbb
ins
rcl
dec
and
cwde
pop
dec
cmp
mov
push
and
sbb
push
cmp
dec
push
das
add
push
xchg
push
es
retf
mov
sub
and
js
ins
retf
or
scas
sub
cwde
mov
adc
or
jg
lods
push
aam
stos
pop
je
ins
add
push
stc
lock
pop
mov
rcr
cmp
popa
cmp
lods
movs
lods
mov
lahf
push
lods
in
enter
repnz
inc
fsubr
jno
or
fucomp
sub
cmps
xchg
loop
test
inc
cmp
mov
movs
mov
xor
leave
and
xchg
es
mov
ja
es
lds
sub
out
ldmxcsr
repnz
jmp
add
xor
jle
mov
pop
inc
addr16
or
mov
aaa
sub
jae
sub
pop
push
push
dec
pop
pop
std
retf
cmps
aad
inc
sbb
ja
sbb
and
(bad)
xchg
xchg
adc
mov
mov
mov
fisub
in
out
mov
in
dec
inc
pusha
xchg
dec
cmp
aas
in
loopne
jecxz
loopne
jp
mov
iret
into
test
lods
jno
mov
xchg
push
shl
outs
cwde
test
add
inc
mov
xor
sahf
add
retf
xchg
xchg
xchg
or
or
jecxz
mov
popf
movs
in
jle
xchg
div
and
mov
mov
clc
and
pop
dec
mov
fist
cmps
push
cmc
mov
xchg
jbe
popa
ss
mov
push
aaa
xor
gs
(bad)
mov
xchg
push
popa
popf
mov
test
pop
sbb
and
or
daa
inc
or
cmp
xchg
mov
xor
call
test
cld
dec
lods
or
cld
sbb
sub
cs
mov
rol
xchg
test
cld
ret
std
in
add
or
add
xchg
fstp
iret
sbb
in
ins
test
in
and
xor
mov
cmp
sub
rol
and
jmp
aad
dec
retf
in
inc
outs
inc
movs
pop
test
(bad)
dec
mov
leave
xor
fucom
mov
mov
and
pop
inc
dec
xchg
popf
inc
aad
sbb
and
mov
jns
ret
adc
cmp
mov
es
xor
sub
leave
cmp
in
cwde
lock
inc
fimul
jl
or
mov
dec
cs
jno
pop
(bad)
push
jg
shl
(bad)
jg
mov
inc
pop
(bad)
push
pop
sti
xor
sub
arpl
mov
cld
sbb
adc
mov
adc
mov
pop
leave
mov
pop
sub
test
inc
outs
ror
enter
scas
inc
push
int
pop
ret
(bad)
je
xchg
addr16
in
retf
sub
sub
mov
jl
pop
imul
call
sub
shr
or
add
fnstenv
(bad)
stc
neg
mov
push
call
adc
xchg
xlat
adc
mov
adc
add
lds
rcr
clc
hlt
or
inc
xlat
sub
je
dec
push
repz
and
and
fild
cmp
add
add
std
test
pop
mov
jg
test
ins
push
dec
shl
or
push
xor
and
dec
inc
jmp
or
call
or
xchg
push
rol
xor
ret
add
outs
or
mov
jle
xchg
dec
je
imul
mov
add
fwait
gs
pop
lea
fist
retf
mov
movs
das
arpl
hlt
ins
mov
and
sahf
addr16
cdq
and
test
sbb
mov
sti
sub
pop
add
dec
jge
loopne
(bad)
out
fidivr
ds
gs
inc
sahf
(bad)
push
mov
sti
sub
xchg
xor
sar
fbstp
mov
test
pusha
rcl
or
dec
ds
dec
add
cmps
dec
jo
jno
int
ror
jecxz
jb
or
mov
(bad)
iret
dec
iret
adc
jne
mov
int
and
(bad)
push
add
aad
ret
rol
xchg
push
push
in
stos
cmp
xchg
mov
mov
dec
mov
sub
sar
fidiv
pop
xor
dec
pusha
pop
push
ds
jge
mov
add
cmp
mov
mov
ret
sbb
je
iret
xchg
fisttp
add
push
nop
loop
push
mov
ds
test
aaa
ror
push
jne
fsubp
and
je
mov
jmp
movs
fdiv
in
popa
add
pusha
mov
dec
ffree
adc
popa
push
mov
bound
lods
inc
add
or
jno
add
push
inc
in
xchg
push
adc
inc
(bad)
sahf
xor
adc
mov
test
and
xchg
xor
imul
jmp
ret
repnz
retf
mov
and
pop
repz
mov
adc
and
mov
cs
or
movs
mov
or
pop
pop
test
not
or
mov
xchg
loope
imul
fmul
xor
mov
xor
jl
loopne
out
fcmovnbe
das
sbb
jns
add
mov
dec
sar
mov
adc
mov
xchg
adc
push
loope
push
add
mov
lock
or
mov
aaa
lock
fisttp
clc
jne
out
stos
movs
and
mov
push
inc
mov
cmp
sub
mov
stc
cmp
inc
mov
imul
inc
push
xchg
lods
neg
and
inc
pop
inc
scas
fs
inc
mov
xor
or
repnz
scas
data16
cdq
fnstenv
ret
add
push
sar
push
xor
jbe
add
xchg
mov
out
je
fild
pop
fcom
jecxz
and
in
xchg
jecxz
mov
test
pop
pop
xchg
xor
xchg
imul
repz
jge
sahf
pop
aam
out
xchg
pop
pop
push
lds
xchg
sbb
sub
push
and
sbb
fild
sahf
xor
and
stos
shr
adc
std
adc
test
cmp
sub
lods
call
cmp
neg
push
rdtsc
or
ins
add
lods
daa
jmp
cmp
lods
je
mov
pop
lods
mov
pop
cmp
(bad)
cmp
retf
lahf
sti
xor
sub
mov
test
cmp
push
inc
movs
cmp
push
or
jle
arpl
(bad)
ins
sbb
inc
mov
in
les
stos
fst
imul
or
dec
shr
mov
cmove
repz
nop
mov
or
adc
ja
mov
mov
sbb
mov
mov
call
mov
test
or
mov
fs
cmps
(bad)
mov
int3
push
mov
adc
sahf
pop
in
pop
and
push
clc
jle
cs
pop
push
pop
nop
sbb
call
jmp
and
push
cmp
or
jmp
fmul
shl
fisttp
iret
push
imul
push
in
adc
jl
pusha
sub
jnp
xor
aaa
xchg
mov
ret
dec
js
outs
fimul
inc
push
and
mov
jle
jmp
pop
and
retf
xchg
mov
shr
cmp
(bad)
neg
xor
add
add
mov
(bad)
popf
pop
pop
(bad)
leave
jne
addr16
(bad)
cmps
push
ret
jg
test
aaa
xor
jl
or
inc
mov
or
xchg
xor
jmp
xchg
adc
jl
into
or
dec
dec
nop
hlt
dec
pop
jl
cmp
jge
aas
lahf
arpl
adc
pop
das
loope
(bad)
adc
dec
pusha
(bad)
mov
sub
popa
mov
push
cmps
dec
movs
movs
cmp
test
int
lock
jge
mov
mov
jle
pop
mov
scas
or
enter
cdq
fld
sar
push
dec
xor
pop
adc
sub
add
pop
cld
icebp
rol
std
sbb
adc
shr
jl
inc
push
sar
push
les
adc
push
call
pop
inc
ret
ins
mov
leave
jae
fnstenv
iret
xchg
(bad)
adc
cmp
mov
push
mov
iret
adc
popa
call
dec
jo
(bad)
xchg
jecxz
and
and
pusha
push
clc
pop
push
fmul
loop
test
pusha
outs
xchg
stos
jb
je
fadd
fistp
mov
ins
pop
sub
dec
inc
xchg
or
mov
fld
repz
mov
mov
sbb
mov
data16
adc
stos
test
leave
and
je
and
daa
xor
sahf
pusha
push
leave
cmp
icebp
mov
xchg
bound
add
mov
out
mov
add
mov
lahf
jmp
rol
jo
mov
nop
fs
jecxz
xor
cmp
ret
call
into
push
test
mov
mov
inc
mov
in
xlat
icebp
loop
rol
cld
push
inc
cmp
std
jp
cmp
mov
xchg
sub
adc
std
sbb
xchg
push
scas
xor
imul
dec
mov
in
xchg
sub
mov
aad
and
push
loope
xchg
test
mov
loop
je
fcmovbe
ror
mov
cmp
div
sub
adc
ror
or
mov
and
mov
and
jp
mov
dec
loopne
sbb
xor
adc
rcr
les
jecxz
ins
test
pop
push
mov
sbb
push
fbld
pop
sbb
push
icebp
stc
mov
cdq
mov
sbb
mov
dec
mov
add
fidiv
sub
popf
xchg
jmp
jno
push
cmc
rol
in
cdq
jp
sbb
nop
jo
fst
dec
clc
xchg
push
xchg
out
adc
adc
loop
mov
push
ds
sub
lods
rcr
movs
inc
scas
mov
into
sub
fldenv
arpl
shl
retf
in
push
lods
fst
fwait
and
xchg
xor
or
dec
(bad)
shr
pop
movs
add
cmp
test
ss
sahf
pusha
cmp
mov
shr
sub
(bad)
int
inc
push
shr
test
xor
inc
cwde
cld
push
sti
sbb
push
inc
xor
push
and
jmp
push
lahf
adc
outs
aas
push
inc
scas
fsubr
rcr
mov
lods
lods
cmp
xchg
xchg
sbb
dec
mov
xor
scas
cld
ror
cmp
dec
sub
pop
push
and
mov
and
jmp
int
pop
lea
sti
cmp
inc
arpl
js
scas
dec
out
test
cmps
cmp
and
xor
out
aam
jno
jno
push
loope
xor
xchg
clc
sbb
pop
aad
imul
mov
(bad)
adc
and
mov
ret
or
(bad)
scas
xor
jge
ss
out
ss
dec
jo
push
outs
cdq
dec
or
imul
repnz
pop
rcl
jp
adc
xor
out
jmp
es
xchg
mov
pusha
pop
mov
idiv
fisubr
dec
ins
xor
test
bound
enter
add
sub
xchg
(bad)
gs
arpl
cld
jle
fisub
es
into
sbb
lahf
mov
jp
cs
jne
dec
ins
or
mov
add
or
ret
fistp
adc
mov
mov
xor
out
js
pop
ds
cmp
loopne
mov
pop
or
jns
add
add
sub
push
jne
mov
pop
add
xlat
pop
cmp
shr
or
cli
inc
xchg
and
pushf
or
sub
fwait
pop
add
rcl
cmp
and
call
pop
cs
fld
and
leave
stos
fisubr
add
xchg
(bad)
xchg
pop
fld
test
add
div
mov
shr
ror
outs
popf
into
jg
sub
enter
jno
mov
dec
lods
pop
or
xchg
sbb
and
ins
rcr
in
in
mov
jb
adc
iret
out
jno
sub
sub
push
into
jp
outs
ja
hlt
xchg
push
push
xor
out
ror
and
mov
fcomip
jns
mov
xor
mov
js
test
pop
loop
ror
loopne
repz
xor
jbe
ret
push
jnp
adc
sahf
pusha
mov
aaa
test
xchg
xor
mov
rcl
push
cmp
es
scas
ffreep
(bad)
inc
enter
add
mov
pop
jne
inc
or
cmp
dec
hlt
xor
jg
test
pop
and
(bad)
outs
lea
mov
sub
int
jg
cmp
test
popa
cmp
outs
aad
xchg
jnp
out
shl
add
dec
jl
adc
test
mov
add
jae
cwde
or
sahf
cmps
sahf
xchg
or
jmp
and
xchg
cli
je
pop
test
aaa
loopne
xchg
mov
and
xchg
push
inc
call
xor
ins
push
jmp
inc
dec
push
cmps
mov
jge
and
sti
test
jb
rcr
jns
cmp
inc
imul
sbb
pop
jbe
out
in
sub
inc
aam
in
movs
mov
jmp
pop
bound
ror
mov
fmul
push
add
ins
gs
sahf
cmc
in
stos
xchg
inc
lods
ret
push
ret
mov
ds
loopne
pmullw
xor
xor
dec
sbb
cmps
jns
pushf
sbb
mov
stos
pop
or
jl
sbb
imul
or
ror
fsub
out
mov
xchg
jns
jb
movs
cmps
push
lds
push
sbb
sub
pusha
push
or
addr16
cmps
jmp
adc
jbe
shl
aaa
ret
inc
fstp
cmp
in
in
ret
scas
sar
(bad)
movs
cmp
mov
(bad)
cdq
push
popw
xchg
xor
int3
shl
xchg
dec
daa
mov
test
or
or
push
sbb
out
mov
les
and
clc
loopne
adc
jecxz
dec
jle
mov
or
add
call
lock
aad
push
mov
retf
mov
adc
add
out
cmp
fimul
pop
mov
gs
xor
mov
add
mov
jecxz
cmp
pushf
cmp
jne
js
cmc
pop
mov
xchg
jnp
mov
sub
push
pcmpgtw
and
jne
xchg
add
aaa
test
jg
sahf
ins
stos
mov
push
loop
jmp
cmps
mov
mov
add
jae
enter
ja
mov
test
mov
stc
cdq
fstp
inc
test
mov
mov
ror
or
push
cs
test
test
pop
sbb
cmps
pushf
xchg
xchg
and
(bad)
into
add
mov
aam
mov
push
dec
fild
mov
idiv
dec
mov
mov
pusha
mov
mov
mov
add
rol
dec
pop
jl
xchg
iret
mov
fisttp
mov
in
and
or
test
out
mov
jmp
in
push
shr
jne
mov
xchg
lea
pop
sbb
jmp
or
daa
cli
sub
in
dec
pop
out
jmp
jecxz
mov
pop
jns
dec
jecxz
out
push
popa
fisubr
das
imul
out
iret
sub
cmp
shl
test
ror
sub
js
jl
add
stos
pop
dec
or
jmp
mov
test
and
cmp
jno
sahf
aam
pop
fimul
sub
sbb
out
in
stos
xor
adc
in
mov
mov
mov
jmp
sahf
push
push
xchg
repnz
stos
(bad)
(bad)
push
xlat
pop
sbb
sbb
or
aaa
cmp
xchg
(bad)
cld
fsubr
jbe
lea
pop
mov
sub
sub
frstor
sub
sub
inc
retf
push
je
(bad)
jp
cld
mov
mul
in
cmp
ror
cdq
arpl
pop
retf
jge
push
(bad)
into
pop
xchg
leave
fist
scas
idiv
pop
mov
fmul
outs
adc
push
jecxz
adc
inc
stc
jo
pop
movs
mov
fs
xchg
(bad)
jae
cmp
aad
jge
mov
add
xor
add
xor
aam
dec
or
push
js
bound
arpl
aam
popf
iret
clc
ins
pop
dec
je
pusha
out
data16
loope
pusha
dec
and
sbb
jp
cmp
enter
aam
call
lods
mov
mov
(bad)
loopne
push
fwait
dec
or
fwait
ds
cwde
les
ja
int3
push
push
dec
adc
jns
xlat
ror
imul
(bad)
adc
js
pop
icebp
test
mov
pop
mov
leave
inc
retf
mov
xor
add
cwde
sbb
inc
dec
jp
mov
sbb
pop
jae
fisub
push
repz
aam
ins
xchg
ins
imul
add
bound
jmp
and
shr
pop
push
fcom
xor
push
ja
xchg
or
xchg
pop
shr
fmulp
enter
sbb
inc
pop
ins
mov
imul
es
in
and
cmp
stos
test
sub
nop
outs
ret
(bad)
jb
add
fisubr
pop
into
movs
shl
sbb
sti
push
int3
inc
mov
fbstp
cmc
outs
adc
jmp
xchg
cmps
inc
mov
pop
ret
dec
sbb
inc
inc
(bad)
mov
std
outs
push
xlat
mov
cs
lock
sahf
xchg
ror
mov
repz
push
sar
push
mov
retf
add
mov
test
neg
dec
aas
popa
clc
cmp
push
popa
jmp
jl
mov
xor
mov
rcr
mov
lods
pop
xchg
lock
inc
iret
and
mov
out
cmc
fsubrp
popf
jb
imul
and
pop
fdivr
dec
push
cli
test
push
aaa
loop
jbe
clc
sub
xor
lods
aam
popa
lods
xchg
daa
mov
icebp
sbb
add
stc
mov
add
jnp
inc
das
mov
fdiv
shr
jg
xchg
or
xchg
pop
and
dec
push
rcr
addr16
fadd
dec
sbb
movs
xor
(bad)
jb
sbb
dec
xor
pop
adc
push
jmp
(bad)
xchg
push
in
jecxz
mov
adc
sub
sub
jmp
test
mov
not
dec
inc
adc
dec
call
(bad)
neg
imul
test
mov
dec
movs
xor
jge
push
inc
std
mov
ds
clc
xchg
(bad)
adc
mov
rol
fcomp
push
popf
xchg
add
test
lds
lds
mov
adc
fs
jo
daa
push
lahf
pop
pop
das
mov
imul
pop
div
stc
push
mov
call
push
repnz
dec
pop
cwde
lods
js
mov
rol
add
pop
lods
adc
sub
mov
lea
iret
cmp
cmps
shl
mov
push
loop
mov
je
or
push
jo
scas
jge
push
push
xor
icebp
jnp
sub
xor
push
clc
mov
inc
je
xor
pop
inc
bound
jno
jecxz
adc
xor
jecxz
pop
ja
(bad)
clc
(bad)
je
jl
popf
mov
cmp
outs
xchg
cmps
je
push
mov
cdq
cwde
cmps
xchg
push
mov
cli
xor
sti
(bad)
xchg
push
adc
mov
ja
jne
call
aaa
out
jbe
push
cmps
(bad)
iret
push
sbb
xchg
push
lock
mov
push
pop
iret
push
push
xchg
fidiv
shl
int
mov
and
dec
test
adc
leave
ret
jb
jns
xor
out
ret
mov
sbb
pop
jmp
lods
push
jge
int3
out
xchg
sbb
gs
mov
or
pop
cmp
inc
ret
popf
push
lea
lahf
out
pop
xchg
call
loope
and
cwde
addr16
scas
xchg
mov
mov
loopne
pusha
mov
lea
leave
sbb
femms
cmc
inc
sbb
(bad)
dec
add
dec
mov
outs
mov
or
rol
aam
(bad)
fldenv
call
lahf
xlat
dec
mov
outs
and
ins
push
fnsave
jmp
jb
sbb
xor
xor
shl
cmps
mov
cmp
pushf
mov
pusha
fs
and
(bad)
rcl
mov
in
push
(bad)
movs
dec
outs
sub
je
popf
(bad)
pop
add
xchg
cmp
push
ret
cmp
mov
pop
push
std
cmp
mov
movs
jl
cmps
jbe
mov
(bad)
fwait
shl
pop
mov
aas
or
test
mov
pop
into
mov
lods
fwait
add
outs
mov
and
int3
mov
aad
push
outs
mov
cli
mov
push
xor
cmp
mov
pop
movs
inc
rcr
sub
lods
mov
nop
mov
push
nop
ds
dec
adc
push
jno
sbb
jmp
dec
add
ret
xchg
(bad)
in
push
dec
enter
(bad)
fidiv
mov
outs
stos
icebp
mov
mov
xchg
not
xchg
sub
jg
loopne
jo
mov
mov
ja
(bad)
(bad)
cmp
push
push
ficomp
lods
test
sub
or
jmp
stc
js
ss
push
sbb
out
dec
xchg
mov
and
hlt
add
mov
sbb
adc
jb
out
jns
mov
jecxz
push
adc
test
js
and
in
ins
retf
fsubp
and
addr16
sbb
mul
nop
pushf
jmp
scas
mov
dec
daa
inc
add
clc
leave
cmp
ins
test
and
mov
in
data16
fwait
jns
call
xchg
dec
fwait
clc
loop
pop
sar
fstp
sbb
sahf
mov
xchg
outs
mov
xchg
dec
pop
cwde
(bad)
inc
repz
xor
push
movs
out
pop
aam
jo
pop
inc
mov
ret
js
gs
sahf
and
retf
call
jp
aam
push
fwait
arpl
pop
or
lahf
outs
dec
push
and
cmp
and
iret
scas
inc
into
inc
jo
scas
xor
icebp
jno
lods
retf
mov
cmp
stos
pop
mov
push
cmp
call
popf
mov
add
popf
into
stos
mov
psubd
pop
mov
mov
xor
les
mov
nop
hlt
gs
cmp
xchg
adc
add
add
xchg
lds
jne
or
shl
pop
mov
mov
in
push
(bad)
out
ins
mov
test
stos
or
test
and
mov
cdq
popf
(bad)
xor
and
mov
jnp
inc
adc
mov
adc
sub
dec
push
in
lock
aad
rol
sahf
aam
adc
icebp
sbb
stos
rcr
pop
pop
jns
cmp
mov
popf
mov
inc
jg
stc
push
mov
int
dec
aas
xor
imul
mov
imul
sbb
and
cwde
shr
pop
call
dec
out
call
pop
js
in
mov
sub
jmp
and
fbld
mov
es
sub
fs
mov
inc
fs
mov
daa
cld
mov
movs
lds
ror
lahf
cwde
fstp
xchg
clc
mov
mov
or
xor
je
sbb
cdq
sbb
aas
shl
movs
jno
mov
ja
jo
inc
and
sar
(bad)
push
retf
(bad)
in
(bad)
int
pop
dec
and
push
push
sbb
add
pop
dec
outs
in
push
movs
repz
lds
sbb
call
pop
push
cmp
mov
jl
or
stos
sbb
pop
test
enter
imul
inc
and
jne
sub
daa
shr
popf
pop
in
adc
adc
xchg
bound
sbb
xchg
(bad)
js
cmps
sbb
sbb
xchg
lds
call
adc
bound
in
fwait
retf
(bad)
js
pop
push
sub
xchg
xor
outs
jg
inc
test
fs
jl
mov
or
pop
clc
bound
sub
jne
jl
or
cmp
push
pushf
sub
jecxz
dec
mov
mov
dec
std
cmp
pop
ja
pop
shl
lods
xlat
cmps
push
push
enter
sbb
int
cmp
jb
in
dec
rcl
jmp
mov
or
and
xor
sti
xor
test
inc
shr
push
pop
mov
dec
out
xor
mov
sahf
and
sar
push
retf
xor
iret
loope
fs
pop
dec
mov
loopne
xchg
jecxz
data16
loop
add
repz
sbb
cs
cmp
mov
outs
fxch
xchg
adc
mov
mov
sbb
mov
call
popf
adc
scas
jecxz
pop
dec
out
mov
stos
sbb
in
jbe
dec
out
jg
xchg
(bad)
fcmovne
sub
cli
pop
retf
les
xchg
and
dec
pop
jnp
mov
int3
mov
sbb
mov
test
xchg
jle
sti
rcr
retf
data16
sbb
inc
faddp
push
fdiv
add
outs
fcomp
cwde
mov
xor
inc
dec
or
scas
pop
(bad)
push
xlat
repz
pop
(bad)
cld
push
rol
in
stos
sub
test
ret
add
stos
sbb
inc
(bad)
jge
mov
xchg
cli
outs
inc
fisub
fstp
ins
dec
xor
inc
mov
scas
(bad)
sti
mov
nop
call
jae
movs
add
mov
clc
loop
fs
stos
ret
jp
or
repnz
xor
push
stc
cld
bound
mov
js
sbb
(bad)
adc
lahf
and
lods
cli
arpl
inc
ins
cmp
mov
inc
jge
out
add
cmp
inc
stc
xor
cmp
push
out
addr16
movs
push
mov
dec
daa
ret
sbb
push
mov
xchg
stc
mov
pop
adc
jno
pushf
iret
mov
mov
or
popa
mov
fdiv
pop
jmp
out
out
retf
inc
in
dec
inc
stc
xchg
(bad)
bound
dec
jne
pop
xlat
ret
je
xbegin
push
jl
sbb
gs
lods
pop
xchg
sbb
mov
mov
push
shr
daa
ins
sbb
int
dec
popf
xlat
add
(bad)
aam
in
and
xchg
(bad)
dec
loop
and
(bad)
cmp
(bad)
jbe
add
push
je
ds
push
dec
fdivp
leave
dec
mov
gs
jb
or
lods
(bad)
or
movs
push
pop
clc
js
and
bound
pushf
add
push
pop
loop
add
xchg
mov
pop
fcomip
shr
sbb
shr
cmc
and
jmp
out
into
mov
fisub
loopne
into
test
mov
ins
mov
jecxz
call
ret
ins
ins
push
imul
jno
mov
movs
rol
sub
push
cmp
push
popf
or
mov
cmp
cmc
stc
add
xchg
push
jle
jnp
xlat
dec
or
fwait
(bad)
fmul
xchg
mov
repnz
sub
hlt
xor
mov
sbb
rol
jp
out
mov
sbb
(bad)
jns
test
pushf
and
cmp
and
je
jae
test
popa
mov
push
daa
fs
add
ds
retf
shl
mov
jg
daa
stos
adc
pop
xchg
mov
and
mov
jmp
push
pop
lahf
imul
dec
out
repz
jmp
sbb
jmp
pop
add
mov
mov
xor
pavgw
push
repnz
push
fisubr
scas
jb
ret
sbb
(bad)
and
fdivp
inc
repnz
lock
mov
ins
and
dec
frstor
cmp
mov
daa
popf
mov
mov
cmps
inc
push
xor
sub
punpckhdq
shr
inc
daa
jnp
jge
sub
add
push
ss
cwde
stos
outs
mov
jmp
cmp
mov
xchg
iret
out
push
ror
shl
icebp
push
in
cmp
shr
push
jno
inc
mov
adc
mov
clc
ret
push
cmp
adc
dec
sahf
cwde
stos
xor
cmp
cmp
call
inc
loope
ret
ss
(bad)
dec
dec
shl
mov
inc
aaa
mov
sbb
mov
std
xchg
xlat
xchg
cmp
ins
vpminub
xor
push
test
mov
or
pushf
jb
dec
lods
aaa
rcr
arpl
lods
sbb
shr
jne
jno
xchg
lea
pop
jmp
jne
test
fcomp
adc
ja
hlt
sbb
mul
int
popf
xchg
mov
cs
enter
(bad)
mov
sub
retf
jno
xor
js
sbb
or
jge
mov
je
add
cwde
pop
dec
fstp
sub
fdiv
popa
mov
ret
imul
sbb
outs
jbe
push
je
push
icebp
arpl
shl
enter
call
std
push
mov
xchg
jge
rol
mov
leave
cld
jmp
popf
xchg
xor
leave
rcr
mov
das
adc
nop
dec
jmp
jnp
aas
es
pop
mov
xchg
jl
sbb
sbb
jne
and
div
mov
mov
call
pop
xor
jle
das
outs
pop
ja
popa
popa
adc
popf
fcomp
pushf
xor
gs
ss
push
sub
cmpxchg
adc
mov
mov
jae
lahf
inc
jg
and
in
ins
sbb
mov
inc
xor
sbb
jne
pop
push
lods
sar
in
outs
mov
dec
bound
mov
add
mov
(bad)
or
fnstsw
stos
and
cmp
leave
(bad)
jae
and
mov
lods
rol
lods
mov
push
mov
movs
in
push
shr
outs
imul
push
mov
pop
jecxz
into
imul
xchg
lods
jae
pop
je
test
cmp
xor
sub
sub
cwde
fsubr
push
mov
xchg
movs
cmps
mov
mov
stc
mov
pop
jb
mov
cmp
sbb
add
push
inc
xor
mov
loop
jg
clc
lock
sbb
mov
mov
rcr
lock
cwde
scas
or
mov
mov
lods
mov
imul
fldenv
fbld
pop
inc
clc
push
sbb
movs
add
pushf
sub
in
inc
and
and
xchg
mov
ja
js
xchg
mov
(bad)
(bad)
xor
movs
adc
lods
pop
inc
pop
cmp
dec
sahf
in
sti
int
(bad)
fsubr
dec
bound
cli
int3
add
dec
call
fild
jmp
cli
loope
fisub
jbe
mov
movs
js
sbb
sti
push
sbb
xor
or
jns
rcl
mov
adc
and
sbb
adc
shr
(bad)
stos
int
popf
jg
inc
out
mov
repz
cmp
push
xchg
pop
dec
pop
dec
cmp
and
cmp
mov
mov
aam
pop
adc
adc
int3
stos
cmp
fstp
xor
mov
xor
push
data16
xor
jno
(bad)
mov
cmpps
test
(bad)
xchg
(bad)
fcom
push
dec
xchg
fpatan
jbe
add
jg
sbb
data16
fmul
mov
and
mov
and
add
push
cdq
lods
loopne
cmps
ret
enter
jmp
fisubr
lods
add
jbe
jl
in
lock
(bad)
jmp
inc
js
ret
pop
dec
leave
daa
adc
or
push
xchg
mov
out
icebp
mov
push
dec
jge
jnp
leave
xor
jecxz
pop
gs
xchg
mov
dec
popa
cmps
es
retf
test
pop
push
sbb
sbb
lea
test
aad
gs
jnp
inc
lock
daa
push
retf
ja
sub
mov
(bad)
mov
sbb
rcr
sar
test
daa
adc
pop
test
mov
iret
fs
and
xchg
inc
scas
in
sbb
cmp
jnp
adc
or
daa
iret
ret
xor
pop
mov
mov
je
shr
int3
pop
pusha
xchg
out
lds
push
jns
xchg
push
xlat
xor
mov
shr
pop
outs
pusha
sar
sbb
(bad)
xchg
mov
dec
pop
(bad)
lods
or
loope
fs
jl
jno
fadd
(bad)
and
cmps
mov
(bad)
pop
loopne
repz
xlat
cmc
xor
mov
lods
or
or
dec
fcomp
pop
test
bound
sbb
cmp
mov
mov
repnz
jnp
inc
xchg
inc
xchg
outs
ds
std
mov
je
das
and
sbb
daa
cmp
in
imul
sbb
scas
push
adc
sub
push
out
in
and
cmp
jno
jmp
fistp
jge
mov
sbb
sbb
add
jo
stos
mov
mov
xchg
leave
cs
out
das
ds
jle
aaa
jo
test
out
lahf
stc
ins
cmc
mov
and
push
icebp
pushf
ds
xchg
xchg
sub
pmulhw
mov
loop
ffree
add
mov
inc
out
jg
shl
ins
xchg
adc
xor
out
cmp
adc
ds
xchg
lock
pop
les
call
dec
push
dec
int3
inc
xchg
cmp
std
jp
mov
repnz
outs
div
cmps
stos
loop
pop
mov
or
es
stc
es
push
push
and
sub
mov
or
xchg
inc
aam
dec
or
cmps
push
dec
sar
or
ins
jb
mov
dec
mov
xor
repz
lahf
or
or
jno
cmps
or
cmp
enter
xor
adc
mov
out
js
jno
(bad)
xchg
stos
int
(bad)
jne
cdq
adc
(bad)
pusha
add
lods
data16
or
cmova
and
pushf
jecxz
sub
jno
mov
fs
fcomp
inc
mov
dec
inc
aam
adc
ret
push
sub
push
sahf
cwde
dec
jnp
retf
add
(bad)
lods
test
cmp
arpl
rcr
out
fwait
adc
jbe
call
cmps
in
fcmovnu
push
xchg
sbb
je
loop
adc
xchg
cs
xor
enter
jo
and
imul
xchg
xor
cli
cmp
mov
jno
test
movs
push
sbb
jmp
popa
or
mov
jecxz
aam
push
or
pop
mov
jns
in
popf
push
movs
out
jecxz
hlt
ja
push
cmp
push
push
aaa
sar
bound
das
fldcw
xchg
aas
jmp
cs
jg
and
(bad)
push
sub
jno
div
lods
(bad)
pop
(bad)
movs
cmps
mov
js
xchg
xor
mov
cmp
xor
out
xor
fwait
mov
icebp
pushf
loope
frstor
cld
pop
mov
shr
das
ins
mov
adc
fdivr
sahf
xchg
fdiv
pop
popa
mov
hlt
xor
fdiv
fistp
jg
dec
aas
cs
enter
sub
xchg
mov
fcomi
popf
xchg
dec
dec
inc
ret
or
jmp
pop
inc
pop
rcl
and
adc
dec
and
dec
adc
pushf
add
fsubr
fcmovne
xchg
cmp
sub
inc
in
adc
xchg
mov
xchg
add
sahf
in
or
or
mov
mov
hlt
dec
mov
cmps
in
aam
inc
sub
push
cmp
stos
addr16
jno
ja
icebp
ret
jmp
jnp
dec
rol
aad
fdivr
or
leave
cld
inc
je
(bad)
xchg
mov
repz
dec
mov
jmp
(bad)
push
and
mov
jmp
jge
add
mov
aam
mov
enter
pop
and
daa
dec
lock
add
fwait
rcl
dec
inc
pop
lahf
imul
int3
lods
popf
jno
(bad)
leave
jae
inc
(bad)
fsubr
stos
dec
or
inc
sbb
loope
mov
std
xor
jge
outs
cs
shr
neg
mov
sbb
sbb
ins
jns
pop
xor
fldcw
imul
push
dec
shr
stos
xor
push
pop
sub
xchg
ret
xchg
pop
xchg
sub
cmp
lea
sbb
loope
and
ins
mov
shl
lods
dec
xchg
jg
push
es
out
lahf
xor
std
js
movs
mov
rol
outs
std
and
or
add
shl
in
div
cdq
cwde
das
inc
xor
bound
cmp
fwait
lea
cmc
vpsubsb
movs
adc
add
sahf
jge
fwait
sbb
push
data16
mov
pop
mov
sbb
repnz
jno
or
je
mov
or
add
jbe
pop
aas
out
xchg
jp
lock
aad
popa
pop
lea
sbb
mov
and
inc
jle
pop
fcom
jp
and
xor
not
mov
retf
pop
mov
push
dec
lock
inc
mov
pop
jno
ss
jmp
jo
ror
mov
in
or
out
mov
or
pop
sbb
pop
js
jp
retf
xchg
xchg
call
int3
nop
and
fdivr
hlt
bound
jmp
dec
jg
add
and
push
xchg
adc
iret
cmp
sub
sahf
xor
xor
not
jmp
pop
xlat
cs
mov
pop
out
lock
dec
loopne
push
mov
xchg
cmps
sar
or
int3
xor
pop
push
dec
nop
mov
call
xchg
dec
sub
jb
xchg
jecxz
cwde
mov
icebp
pop
sbb
push
mov
dec
adc
dec
dec
call
push
sub
push
scas
mov
sub
ret
jne
mov
xlat
jne
sub
std
leave
fisttp
shl
xchg
iret
mov
jno
lea
dec
jge
jmp
inc
mov
or
xor
loope
push
aas
popa
and
or
outs
xor
inc
pop
jl
jns
push
shl
les
imul
std
das
sub
adc
and
mov
fdiv
pop
in
xchg
sbb
stos
push
add
xchg
cdq
push
xor
(bad)
fs
cmp
pop
(bad)
aad
push
pop
ror
lods
mov
mov
sbb
xlat
ss
jecxz
test
pop
das
or
out
(bad)
jnp
xchg
push
rcr
lods
adc
mov
inc
(bad)
sahf
or
gs
cmps
sub
adc
xor
dec
lods
cmp
push
adc
mov
jge
push
aad
mov
push
(bad)
les
sti
mov
leave
or
mov
ins
xor
cs
fimul
jg
jae
ror
mov
dec
js
enter
sti
mov
mov
or
mov
pop
or
scas
pop
or
mov
xor
iret
std
push
retf
jecxz
rol
add
adc
adc
test
mov
push
adc
xor
push
call
mov
jo
stc
mov
lahf
push
leave
aad
sub
out
or
outs
aaa
(bad)
jb
adc
fld
std
int
xchg
lea
test
xchg
(bad)
sbb
repz
fwait
mov
test
xor
sub
ins
or
sub
jge
pop
xor
(bad)
or
xor
loop
ss
xor
call
dec
aas
nop
mov
mov
sar
int3
les
(bad)
fisub
dec
mov
call
cmp
enter
cmc
mov
push
cmp
(bad)
ffree
rol
clc
adc
(bad)
loope
int
adc
fadd
int3
(bad)
fld
dec
dec
jecxz
mov
shl
test
fcmovu
mov
sub
mov
pop
test
in
push
repz
call
retf
mov
icebp
sub
mov
mov
cmc
pop
adc
test
jnp
pop
mov
inc
adc
into
inc
movs
rol
lds
in
dec
xlat
jmp
sub
adc
xor
xor
pop
mov
jnp
sub
pop
mov
jae
mov
jb
sbb
test
aas
lea
jp
lods
or
push
ss
pop
xor
inc
dec
dec
in
sub
xchg
call
dec
mov
cmp
and
ret
mov
in
cdq
lods
fcomp
in
out
and
push
sahf
push
and
xchg
leave
xchg
leave
fidiv
call
pop
ret
sahf
stc
stc
dec
mov
fdivr
dec
scas
cwde
sbb
pmullw
shl
call
jge
test
dec
pop
adc
(bad)
mov
or
cdq
xchg
cmc
into
aaa
mov
movs
sub
pop
leave
jmp
cdq
xchg
iret
nop
pop
jge
test
xlat
adc
adc
or
sbb
push
clc
add
iret
leave
xor
pop
xchg
sti
fild
jo
sbb
push
xchg
repnz
das
push
pop
out
dec
inc
add
jp
and
int3
ins
dec
sar
nop
cmp
fcom
jno
lahf
dec
jbe
xor
push
into
sbb
mov
push
xor
outs
jg
inc
inc
mov
mov
retf
xchg
and
sti
pop
add
fisubr
in
ret
and
pop
mov
push
inc
(bad)
cdq
ror
mov
outs
jmp
inc
inc
push
call
or
lods
xchg
sub
nop
js
mov
jbe
pushf
pushf
sub
jg
test
pop
xchg
sbb
mov
inc
jmp
call
nop
cmp
retf
in
push
jo
icebp
ins
and
ins
mov
xor
push
lods
push
in
push
sar
je
imul
idiv
lods
sti
adc
into
push
cmp
xchg
bnd
addr16
in
jno
xor
rcr
inc
enter
pop
mov
mov
mov
and
in
or
leave
ret
mov
pop
dec
pop
lahf
rol
out
out
ficomp
or
jmp
repz
aam
stos
adc
in
pop
and
jg
inc
loopne
inc
sbb
add
fstp
sub
pop
inc
cmp
pop
ds
jg
fld
push
or
cmp
cmp
pop
loope
aaa
(bad)
adc
int3
retf
clc
test
inc
mov
cs
in
repz
sub
xchg
jnp
mov
jp
stos
jl
mov
loope
ja
std
sub
fdivr
sbb
pop
(bad)
fld
and
push
shl
cmps
jne
cmps
xor
inc
fild
jmp
push
sub
jmp
mov
sub
daa
mov
adc
cld
adc
out
es
inc
in
lock
iret
sbb
adc
pop
fcomp
pop
retf
jbe
out
push
ds
lods
sbb
jecxz
imul
mov
and
cmps
daa
in
leave
daa
aas
add
fwait
cdq
(bad)
into
adc
add
jmp
scas
mov
in
sub
add
push
ins
sub
sub
push
dec
dec
fisttp
push
cmc
test
pusha
mov
cmp
rcr
adc
push
mov
fwait
adc
pop
lahf
xor
daa
repnz
fcmovnu
lock
xchg
dec
xchg
ins
cdq
xchg
movs
lock
mov
inc
sub
ins
enter
xor
cmp
adc
mov
enter
aas
jnp
(bad)
push
add
fld
outs
outs
push
retf
aaa
aam
jg
inc
mov
repnz
pop
(bad)
jmp
fsub
jecxz
daa
adc
retf
jmp
push
xchg
push
(bad)
jge
lock
push
and
push
in
in
pushf
xchg
push
xchg
inc
fsub
pop
mov
out
jl
pop
shr
cmp
and
mov
test
outs
pop
push
cs
mov
add
les
je
out
xchg
or
xchg
sub
shr
data16
shl
pop
mov
inc
retf
ret
inc
inc
sub
or
and
xor
lock
inc
cmp
push
fdivr
xchg
xor
jge
cmp
add
movs
add
push
pop
cld
pop
inc
(bad)
fiadd
ds
aad
mov
in
test
sub
xchg
test
lods
div
les
loop
jnp
aad
or
push
stos
or
pop
lock
mov
hlt
mov
sub
imul
pop
cmps
pop
lea
out
cmp
dec
inc
pop
pop
jl
aad
cmp
ja
inc
imul
sar
pop
cli
or
push
dec
jo
mov
shr
(bad)
add
xor
push
push
out
call
cs
dec
xchg
movs
stos
test
inc
fld
add
sbb
clc
adc
sub
(bad)
out
(bad)
jns
ret
or
push
mov
imul
call
outs
pop
aad
pop
cwde
mov
fwait
mov
inc
fsubrp
push
sahf
sbb
out
jg
xchg
(bad)
ins
ror
rcl
dec
jo
jb
fsubr
nop
add
inc
fucomi
jl
cs
and
sbb
xchg
pop
aas
add
sbb
std
jne
ins
mov
inc
xor
jge
dec
jl
shl
fmul
sub
pop
mov
xchg
add
sub
call
dec
mul
push
xchg
aad
mov
dec
in
je
daa
test
add
sub
fucom
xchg
jns
or
loop
and
fcomp
dec
in
mov
test
repz
mov
pop
mov
stos
xchg
pop
sbb
add
inc
and
es
and
pop
pop
stos
and
mov
arpl
dec
loop
loopne
cmp
ja
out
aam
je
cmp
sub
iret
(bad)
cli
clc
mov
out
scas
das
sub
mov
leave
call
sbb
popa
ja
or
mov
fbstp
add
fistp
ds
shl
push
lods
jbe
test
cmc
test
enter
shr
mov
sbb
mov
pop
adc
fwait
inc
pop
push
xchg
test
outs
call
imul
dec
mov
pop
fistp
push
(bad)
rcl
pop
ret
js
ins
jae
iret
ror
push
imul
xchg
jne
mov
xchg
pusha
repz
jae
clc
lahf
jmp
ss
pop
call
call
jp
pop
aad
jg
adc
seta
leave
imul
push
aas
and
je
cdq
mov
inc
(bad)
pop
scas
xchg
loope
std
cld
push
repz
push
les
jno
popf
movs
or
push
xor
dec
dec
dec
sub
add
pop
loope
mov
xor
add
(bad)
mov
fdiv
test
es
test
sbb
mov
inc
jl
pop
sbb
test
adc
mov
push
fidivr
outs
mov
cmps
outs
(bad)
cs
in
cmp
mov
js
in
ins
cli
imul
into
jo
fwait
dec
pop
jge
xchg
stc
and
cmp
push
pop
addr16
adc
adc
mov
cmp
push
aaa
fxch
lods
mov
or
push
rcr
xchg
xor
es
cmp
sbb
es
fiadd
and
popf
lahf
xchg
sar
xor
push
xor
fs
push
or
push
scas
push
and
add
and
ret
xor
adc
repz
add
mov
inc
add
mov
outs
fisub
jno
out
gs
mov
and
sub
push
rcr
cmp
loope
dec
sbb
mov
enter
dec
sub
loope
cli
xor
cmp
mov
aas
xor
mov
push
mov
or
out
stos
movzx
and
and
adc
push
rol
inc
scas
(bad)
sbb
jne
cmps
push
mov
jbe
mov
aad
inc
jae
jae
jne
inc
adc
pop
ss
sar
lfs
pushf
xor
jo
cmp
sbb
bound
mov
jge
es
push
jl
xchg
(bad)
add
loop
scas
mov
das
xor
out
popa
test
call
dec
retf
je
jns
and
and
popa
mov
add
mov
lahf
dec
sbb
popa
aam
push
mov
or
pop
xchg
lods
call
aaa
xchg
mov
xor
popf
pop
out
mov
push
hlt
outs
push
sub
test
mov
test
fwait
jne
pop
mov
test
xlat
pop
daa
mov
add
push
xchg
into
push
(bad)
stos
lods
mov
stos
retf
add
out
xor
mov
iret
lds
je
pop
or
aam
mov
sub
mov
push
inc
inc
(bad)
les
pop
sbb
mov
dec
xor
xor
jb
mov
ds
pop
dec
sub
call
cmp
movs
pop
sub
outs
add
aas
fldcw
in
jl
pop
inc
or
test
inc
retf
fidivr
fild
in
push
and
pop
mov
cld
adc
push
inc
add
shr
pushf
xor
loopne
in
mov
hlt
jno
cmps
stos
adc
js
jo
das
fadd
iret
test
sub
dec
out
call
repz
mov
mov
aad
xchg
fdiv
out
shl
sub
out
stos
mov
cmps
ins
push
movs
(bad)
push
gs
mov
dec
xchg
fwait
cld
ds
(bad)
aam
fbld
retf
les
xchg
push
mov
cmc
retf
mov
pop
jmp
fs
push
dec
mov
cli
jp
mov
cld
pop
jmp
popf
cmp
push
push
bound
dec
xchg
and
in
jecxz
std
retf
iret
dec
stos
(bad)
inc
xchg
stos
or
and
je
jge
xor
pop
mov
cwde
retf
fisttp
mov
sti
fsub
sub
adc
cmps
or
dec
jmp
inc
inc
adc
mov
rol
mov
pop
cld
popf
rcr
or
lds
popa
mov
cdq
mov
and
lahf
out
and
scas
fwait
xor
rcr
fisttp
cmp
sub
xor
fwait
dec
cwde
xlat
xor
pop
dec
xor
adc
push
and
hlt
mov
xor
(bad)
dec
addr16
adc
in
mov
loop
rol
push
sbb
pop
adc
dec
(bad)
in
popa
not
loope
mov
stc
xchg
loope
out
sub
push
shl
xor
or
dec
cmps
stos
push
aad
xor
repnz
mov
cdq
mov
pop
push
pop
jl
xchg
cmp
clc
outs
adc
nop
call
mov
push
fcomp
jns
xchg
xchg
aam
or
clc
shr
(bad)
iret
mov
inc
sahf
pop
inc
xor
sahf
cmps
adc
mov
and
add
xor
data16
xchg
dec
lahf
or
cmp
cmp
adc
jmp
inc
cs
dec
scas
xlat
dec
ret
pop
sub
jb
sub
push
int
mov
push
pop
xchg
cwde
loop
rcr
inc
mov
pop
out
push
cmp
out
je
pop
dec
lds
jmp
cmp
cs
arpl
and
cmps
and
(bad)
add
sbb
push
inc
retf
je
hlt
and
dec
retf
jmp
retf
mov
ror
fbstp
inc
sub
loop
dec
enter
push
shl
in
imul
mov
loop
xchg
loope
mov
rol
push
call
ins
sub
xchg
inc
jge
in
cmp
mov
mov
pop
scas
cli
aad
cmovns
push
add
inc
imul
fld
sbb
mov
and
adc
push
push
aam
mov
xlat
inc
daa
call
je
or
push
push
clc
fnstcw
adc
imul
shl
ds
adc
or
xchg
pushf
push
fisubr
ret
and
push
(bad)
jl
lds
jae
imul
pop
fiadd
xor
shl
add
push
pusha
inc
add
sbb
retf
leave
mov
mov
fistp
mov
gs
cmc
xor
imul
jmp
xchg
int
mov
cmp
mov
cmp
inc
pop
xchg
test
mov
add
nop
xchg
mov
addr16
mov
popa
xchg
inc
pop
push
aaa
push
out
inc
cmp
lods
pop
sahf
test
ds
ret
stc
add
pop
(bad)
aam
sbb
push
mov
shl
xchg
les
outs
mov
jle
ja
data16
in
mov
icebp
cmp
cdq
or
push
push
add
jge
and
xchg
inc
sbb
or
push
rcr
dec
pop
xchg
add
lea
mov
xor
int
cmp
or
add
jb
(bad)
jnp
cld
ins
adc
and
add
test
loopne
xor
cmp
push
(bad)
stos
int3
lea
add
call
cmp
ds
je
popf
xor
cmp
and
xchg
jmp
add
xor
lock
sar
les
cmp
sahf
cmp
xlat
mov
inc
pop
adc
movs
xor
cli
mov
xchg
dec
fisub
mov
lods
fiadd
jbe
dec
nop
scas
cmp
sbb
loop
gs
jl
jp
and
mov
int3
jne
mov
jle
jo
cmp
and
add
dec
add
loopne
js
(bad)
icebp
fild
push
sub
ror
in
dec
cmps
pop
mov
and
fcomp
fwait
mov
xchg
push
cmps
ja
mov
pop
outs
mov
xchg
xchg
jne
dec
cmps
jbe
push
inc
mov
and
scas
pop
sub
push
mov
push
xchg
lea
dec
rcl
pusha
aaa
or
jnp
cmp
test
jnp
adc
ss
pop
sti
mov
or
cmp
mov
adc
mov
mov
xchg
int
add
adc
xor
pop
add
xchg
enter
jl
xchg
dec
mov
push
xchg
movs
int
test
inc
or
jae
push
loope
sbb
es
shl
scas
lods
mov
xlat
ret
xor
loop
enter
or
ds
(bad)
repz
xchg
stos
jmp
xor
rcr
scas
loope
(bad)
mov
cmc
adc
add
jne
call
jg
push
std
test
add
lock
adc
jl
cmc
xchg
sbb
pop
in
xchg
cld
outs
cld
fcom
leave
sti
clc
add
mov
cld
shr
push
mov
push
sub
imul
push
sbb
adc
pop
rcr
movs
icebp
rol
sbb
adc
adc
imul
and
adc
outs
add
push
inc
pop
mov
push
adc
jo
cdq
(bad)
cmp
add
add
das
push
popa
inc
sub
imul
std
mov
sub
ds
xor
ins
jp
add
xor
fwait
pushf
push
ins
lahf
imul
mov
bound
aam
add
mov
adc
push
adc
in
les
lds
or
hlt
push
loope
outs
addr16
shl
bound
sub
movs
and
xor
je
ins
inc
dec
fild
outs
sub
push
push
mov
push
stc
iret
xor
or
push
and
cmp
jnp
xchg
popa
inc
mov
mov
mov
mov
ss
std
pop
sahf
aaa
leave
es
aad
inc
push
xchg
jmp
push
ins
sub
jmp
inc
pushf
or
fisttp
into
pop
cwde
inc
lea
push
xchg
lds
xchg
xchg
sub
xor
xor
enter
sub
pop
movs
test
into
push
ss
into
sub
pop
jge
shl
adc
pop
pop
xor
retf
out
jnp
push
jne
mov
pop
cmp
cmp
or
add
scas
and
lds
sbb
dec
mov
(bad)
fld
inc
out
mov
gs
sbb
aaa
cdq
ss
push
jl
mov
in
sbb
clc
inc
stos
push
xchg
daa
inc
test
inc
cmp
pop
mov
sub
jno
mov
(bad)
mov
das
lods
scas
jl
scas
into
sub
out
sar
pop
and
pop
(bad)
xchg
ja
out
std
cmp
and
xchg
ds
std
cmp
sub
dec
sub
fwait
rcr
mov
adc
mov
sbb
cli
jmp
mov
sbb
int
loope
push
inc
adc
not
sbb
lock
mov
ss
jae
js
retf
popa
js
retf
add
mov
mov
pop
imul
sub
(bad)
in
cmp
jns
add
into
ret
std
aad
ja
ins
cmp
dec
sub
(bad)
xchg
sti
adc
outs
cmpxchg
jnp
push
mov
mov
sbb
jno
jae
test
cmp
pop
and
xor
test
and
cmp
(bad)
sbb
dec
sub
out
pop
fiadd
daa
xchg
iret
imul
jno
cmps
gs
scas
xchg
xchg
mov
loope
mov
js
sub
mov
aad
dec
sub
fwait
adc
xor
arpl
clc
(bad)
fst
jne
out
push
outs
mov
cmp
and
aam
ins
pop
and
cmc
imul
repnz
jne
sub
or
ror
fwait
cmp
aam
out
mov
push
mov
frstor
ds
pop
into
dec
ficomp
mov
inc
iret
cdq
lahf
in
nop
(bad)
jnp
xchg
fstp
xchg
(bad)
into
xchg
fcomp
fidivr
sub
push
jb
popf
xchg
xchg
and
stc
stos
cmp
adc
aaa
mov
sbb
in
popa
adc
movs
push
jl
stos
stc
test
cmps
add
push
mov
pop
cmps
in
fcom
push
mov
lahf
test
mov
mov
hlt
jnp
lds
sbb
pushf
jecxz
push
dec
leave
add
pop
adc
ror
xchg
mov
cdq
cmp
xchg
sar
mov
fiadd
arpl
xor
cmp
pop
mov
xor
mov
jae
sub
mov
jecxz
inc
or
test
dec
xor
and
jmp
ins
mov
dec
dec
in
lds
inc
fdivr
mov
mov
mov
sti
mov
lock
mov
push
adc
mov
adc
xchg
and
mov
fadd
jge
mov
pop
pop
dec
je
test
fimul
or
adc
jg
xchg
loop
add
shl
cmp
aas
push
sbb
pushf
std
mov
outs
sar
mov
pop
sbb
(bad)
aam
leave
mov
aam
loopne
js
leave
add
inc
push
out
pop
daa
cwde
stc
sub
sub
sar
clc
sbb
push
stos
imul
push
mov
out
push
mov
pop
movs
nop
pop
cld
enter
mov
dec
das
push
dec
fsub
cmp
mov
das
rcl
cli
mov
loop
test
xor
push
repz
mov
and
aaa
mov
hlt
sbb
xchg
sbb
inc
inc
neg
cmp
out
sahf
jbe
cmc
imul
adc
lock
shl
fwait
push
inc
outs
mov
mov
jb
int3
movs
mov
cmc
xchg
sahf
cld
out
mov
ja
and
sub
push
sti
mov
add
cwde
xor
sbb
fxch
or
xchg
and
push
stos
out
ror
dec
dec
push
pop
(bad)
test
in
pop
(bad)
adc
mov
inc
and
pop
retf
xchg
xchg
ret
test
xor
ins
push
adc
outs
xchg
lahf
pop
mov
pusha
and
sar
leave
or
test
pop
jb
or
or
push
push
mov
mov
and
jbe
retf
xor
mov
add
stc
ins
cs
adc
int
push
xor
sub
mov
xor
inc
jns
jnp
sub
leave
cmp
xchg
xor
push
lds
test
mov
push
popa
out
shl
add
cli
(bad)
retf
stos
inc
pop
push
and
mov
jns
ret
xchg
rcl
dec
iret
xor
xor
outs
or
push
xchg
xchg
adc
sub
adc
and
pop
inc
lds
mov
in
cmp
sub
das
out
jmp
nop
dec
jne
xor
idiv
inc
test
imul
iret
(bad)
(bad)
out
jg
push
mov
rcr
dec
xchg
xchg
(bad)
loope
sbb
pop
add
add
je
jb
pop
int
dec
inc
vmovaps
inc
pusha
mov
cmp
fdiv
inc
cmps
jmp
retf
jp
in
retf
dec
cld
sbb
mov
cdq
sub
in
repz
pushf
sahf
mov
fistp
or
pop
movs
test
jg
push
fwait
into
xchg
xchg
xor
push
cmp
xchg
lahf
(bad)
jmp
mov
(bad)
bound
cmp
xchg
hlt
push
pop
std
mov
or
xchg
mov
jp
loopne
imul
jbe
xor
fs
enter
leave
mov
test
push
push
sub
stos
icebp
jge
mov
xchg
stos
and
and
push
pop
push
push
push
cmps
fmul
aam
fldcw
xchg
mov
mov
xchg
ins
retf
or
neg
out
push
mov
pop
jle
add
cmps
and
sbb
dec
daa
js
scas
push
dec
xor
cmp
jnp
inc
sbb
retf
addr16
cld
lea
pop
leave
jmp
inc
pusha
test
into
add
inc
dec
sahf
out
xchg
and
scas
js
shl
sub
test
sbb
cld
pusha
es
ret
clc
sub
fcomp
jmp
scas
jbe
jno
adc
aad
mov
and
pop
xor
mov
retf
psubsb
xor
mov
js
mov
sub
(bad)
sub
adc
sub
push
push
loopne
dec
loope
push
sub
(bad)
pop
mov
adc
stos
cwde
jl
xchg
and
scas
(bad)
test
push
popa
push
fwait
jo
pop
jmp
push
test
mov
in
push
cs
imul
fsub
mov
mov
fimul
aaa
add
ret
jmp
xchg
xchg
pop
dec
lahf
adc
aad
jg
lahf
shl
and
dec
fstp
outs
cwde
dec
dec
imul
repz
outs
and
fsubrp
mov
sub
mov
clc
jno
retf
test
test
shl
loope
cmc
mov
int3
pop
add
xsha256
cmps
push
or
lds
xor
(bad)
sbb
fadd
mov
cmc
out
icebp
imul
push
push
cwde
sub
mov
ja
mov
fdiv
or
pop
inc
in
xor
rcl
gs
add
cmc
xor
in
fs
repnz
jns
mov
pop
adc
sbb
icebp
push
es
imul
push
ins
add
lahf
(bad)
neg
mov
cmp
mov
into
xchg
repz
xchg
push
mov
fwait
stos
in
cmc
addr16
test
mov
jns
xor
sbb
daa
es
inc
popa
hlt
xchg
add
cld
add
and
xchg
(bad)
fidiv
fwait
leave
lods
sub
dec
jecxz
js
loope
sbb
mov
mov
loop
xchg
push
into
mov
stos
in
lahf
fcmovu
sahf
cmp
push
ds
mov
(bad)
mov
add
sbb
push
push
jge
add
(bad)
arpl
pop
(bad)
leave
mov
test
ins
mov
fcmove
out
xchg
xchg
aam
outs
cmp
stos
popa
mov
and
cmp
test
push
in
(bad)
es
loopne
stos
add
icebp
dec
or
add
mov
data16
addr16
sbb
mov
cmp
jle
scas
and
inc
outs
call
ltr
mov
pop
and
nop
psubusw
stc
ins
add
retf
scas
call
iret
xor
jecxz
popf
inc
int3
pop
jns
add
ins
mov
sbb
hlt
mov
or
mov
dec
push
jno
sbb
inc
mov
jno
push
in
mov
push
addr16
push
fisub
and
adc
ss
sbb
outs
int3
mov
xlat
loop
test
pop
and
mov
data16
adc
mov
inc
push
xchg
jecxz
mov
pop
lods
mov
dec
cmp
mov
in
jmp
cli
mov
push
adc
cli
mov
sub
fstp
std
lahf
cmc
adc
cmp
sub
mov
jne
retf
test
cs
fucom
cwde
inc
sqrtps
stos
push
xchg
pushf
pop
cmp
ins
(bad)
jno
xchg
je
repnz
call
stos
dec
mov
hlt
xor
push
inc
shl
mov
popf
ds
fidivr
mov
pop
inc
retf
fldenv
sbb
cmps
xor
xor
cmp
mov
sbb
scas
add
lods
mov
or
adc
(bad)
outs
or
pop
ret
ja
push
sar
push
mov
shl
pushf
cmp
lods
fcomp
fsubr
adc
push
stc
daa
dec
mov
pop
addr16
add
mov
mov
cli
sar
dec
adc
push
mov
repz
movs
fild
ss
mov
jbe
gs
inc
push
(bad)
pusha
loope
pop
fmul
sbb
and
inc
fst
cmp
adc
lock
xchg
mov
rcl
pusha
mov
frstor
sbb
jnp
push
sbb
mov
rcr
js
xchg
stos
pop
inc
stos
dec
pop
cwde
loope
push
add
std
xchg
mov
loopne
retf
cli
outs
mov
pushfw
outs
movs
sbb
cmps
std
sahf
adc
cwde
out
ins
inc
adc
mov
out
pop
inc
pushf
or
movs
xchg
mov
ror
or
cmp
mov
test
loopne
pop
fwait
stos
push
scas
inc
pop
bound
sub
push
mov
test
push
mov
push
test
(bad)
es
cmc
dec
outs
or
adc
js
(bad)
mov
int
cmp
mov
inc
loop
sub
lock
pop
popa
aas
jbe
mov
jle
(bad)
sbb
dec
sub
add
lods
bound
add
sbb
out
and
jl
shl
call
nop
xchg
mov
push
fnsave
dec
cdq
push
dec
jmp
inc
jmp
xor
cmovnp
dec
es
movs
mov
mov
xchg
(bad)
loopne
outs
lds
call
or
popa
xor
push
and
mov
retf
mov
pushf
push
jp
ror
(bad)
or
push
sub
xchg
scas
nop
mov
movs
pop
repz
call
or
push
cmp
xor
dec
or
mov
sub
mov
mov
add
mov
cmp
push
aam
and
pushf
imul
mov
push
xor
sbb
fmul
sub
add
dec
cs
(bad)
jle
mov
aam
movs
(bad)
jmp
mov
ret
cld
mov
imul
mov
(bad)
and
loop
adc
sub
movs
push
retf
aaa
or
add
rol
dec
fcom
pop
movs
or
push
repnz
xor
in
mov
cld
mov
pop
nop
jbe
push
adc
(bad)
frstor
push
sbb
ret
test
dec
sbb
push
sbb
inc
iret
adc
and
sub
cs
add
mov
jge
push
test
or
popf
push
mov
scas
imul
dec
inc
adc
mov
jne
pop
test
xor
lods
icebp
push
ja
rcl
movs
push
sub
sbb
pop
stos
lods
in
leave
cmps
fs
pop
or
outs
cmc
mov
call
das
movs
jo
rcl
stc
push
jle
fiadd
aad
mov
push
pop
push
mov
mov
ins
or
mov
nop
xchg
daa
cmp
pop
adc
mov
dec
retf
fstp
lods
nop
jb
dec
add
arpl
cdq
push
rol
js
xor
sub
lds
mov
ss
in
sahf
inc
cwde
add
fidiv
cmp
paddsb
or
addr16
inc
mov
jne
mov
test
lods
je
push
jb
fwait
in
mov
call
xchg
js
sub
cmp
rcr
aaa
jne
call
sbb
mov
push
cmc
mov
shl
rcl
xchg
add
xchg
test
sub
mov
sbb
sub
pop
push
xor
sar
xchg
arpl
cmps
mov
jne
jp
vpunpckhdq
cdq
sbb
or
pop
xchg
cmp
pop
jecxz
nop
fst
mul
lods
or
pop
aam
gs
xor
shl
loopne
ret
mov
adc
cmps
sub
adc
scas
and
cmp
inc
mov
hlt
mov
in
fs
mov
adc
sahf
fwait
and
dec
rcl
sub
cmps
pop
out
jbe
aad
pop
stc
mov
inc
mov
arpl
imul
pusha
or
inc
out
ss
gs
mov
xchg
imul
xchg
adc
add
fisttp
lea
sbb
leave
inc
xor
(bad)
in
add
xchg
push
sub
test
std
xor
sbb
inc
stc
rcl
loop
std
outs
fnstenv
rcr
sub
nop
jns
cmps
xchg
jmp
push
dec
mov
ds
push
mov
xor
jo
scas
arpl
jno
stos
loopne
adc
sahf
(bad)
cmp
jns
enter
jns
sub
stos
jg
and
jbe
or
push
ror
mov
ins
push
hlt
xchg
loope
pop
cmp
std
std
adc
js
popf
shl
cmp
lea
stc
jne
push
cli
out
xchg
sub
and
mov
xor
mov
ins
dec
inc
jle
inc
out
and
dec
imul
rol
outs
add
dec
fstp
sbb
movs
push
adc
neg
jns
sub
mov
xchg
(bad)
jp
sti
sar
xchg
and
frstor
push
sub
ret
mov
outs
pop
jbe
mov
and
jmp
sub
and
push
push
cmp
vcvtps2pd
icebp
imul
xchg
xor
pop
daa
ret
in
ficomp
or
lahf
(bad)
je
and
mov
retf
add
pop
xchg
pushf
ficomp
inc
sbb
jl
ins
xlat
mov
in
pop
mov
(bad)
mov
das
add
sbb
ja
jecxz
stc
fbstp
dec
pop
xchg
(bad)
cmp
or
retf
xchg
cld
fdiv
and
neg
pop
pop
sbb
lods
or
and
add
aam
retf
sar
adc
xchg
pusha
push
jb
mov
std
shl
cmps
jns
loope
daa
cmc
pop
stos
or
xor
pop
sub
test
or
dec
jnp
icebp
xchg
jmp
stos
dec
adc
fst
arpl
dec
add
sti
fsubr
jmp
cmp
pop
push
push
push
xor
mov
mov
gs
iret
mov
pop
jp
std
outs
mov
dec
sbb
push
pop
(bad)
and
addr16
dec
sbb
in
jle
repz
iret
loope
jne
es
out
cwd
cmp
xchg
lock
cmps
mov
pop
cdq
mov
pop
cld
stc
inc
cmp
sub
cwde
adc
aaa
lock
mov
adc
scas
test
mov
mov
mov
jp
and
idiv
(bad)
repnz
mov
das
inc
mov
fld
inc
sub
shr
ror
and
mov
into
push
fnstcw
push
fidiv
inc
ficomp
(bad)
test
sub
call
push
adc
dec
and
test
xchg
je
mov
shl
hlt
mov
dec
adc
and
outs
stos
xor
out
ror
dec
jl
out
sub
mov
and
shl
inc
gs
lock
into
inc
fild
pop
aad
lea
inc
or
or
ret
enter
std
xor
dec
mov
pop
push
cwde
xor
mov
stos
xchg
adc
mov
mov
mov
fisttp
sub
xor
push
in
les
sub
push
push
adc
fnstsw
lahf
jb
jnp
jb
jae
push
xchg
repz
and
push
cmp
push
pop
lea
gs
add
mov
jge
and
outs
xor
outs
mov
loopne
cmps
jp
cwde
(bad)
pushf
shr
rcr
gs
add
jo
dec
outs
nop
mov
stos
sbb
movs
dec
(bad)
std
cmp
out
mov
(bad)
adc
rol
arpl
enter
add
call
and
add
std
(bad)
repz
call
jmp
or
push
mov
sub
rcl
retf
adc
daa
cli
and
mov
idiv
bound
sbb
sub
jae
inc
and
(bad)
scas
pop
jg
jge
mov
jno
popa
add
pusha
je
jb
retf
pop
ds
or
jle
jl
mov
adc
xchg
mov
movs
adc
xchg
loope
jle
out
neg
mov
sbb
int3
retf
addr16
cmp
ret
push
jae
cmp
in
int3
mov
lods
dec
mov
xchg
adc
pushf
data16
jb
adc
xor
sbb
pop
cmp
mov
stc
popf
out
ss
ret
jb
shl
pusha
aaa
inc
aas
adc
sahf
aam
sub
nop
(bad)
lahf
xchg
pop
dec
xor
stos
cdq
push
mov
jne
pop
mov
push
dec
fcomp
je
jge
icebp
jns
mov
movs
cmp
pop
add
test
ins
das
xchg
iret
xor
mov
and
test
hlt
push
(bad)
dec
stc
test
cmp
dec
xchg
inc
mov
mov
cld
pop
pop
cmp
xchg
ror
or
popa
cmps
inc
mov
shl
pop
(bad)
pop
adc
fild
xor
fld
adc
test
pop
dec
sti
inc
dec
int
addr16
inc
sbb
mov
mov
dec
mov
cmp
leave
int3
test
sti
mov
mov
mov
and
add
mov
cdq
bound
or
loopne
xchg
hlt
or
cmp
add
hlt
out
dec
xor
jmp
in
stc
fbld
clc
cld
mov
adc
cli
mov
test
icebp
or
rcl
stos
sti
into
dec
xor
adc
jbe
pop
or
out
js
repz
je
outs
es
adc
adc
movs
std
push
test
or
pusha
jmp
sysret
mov
sub
repnz
ds
mov
test
or
and
mov
xchg
popa
cmps
adc
push
push
mov
repnz
out
push
cmp
xor
and
hlt
ret
pop
pop
mov
outs
inc
inc
and
ds
das
jbe
add
ror
pop
jae
push
xlat
scas
dec
sahf
loop
mov
xchg
(bad)
bound
and
jns
jne
imul
jae
sub
gs
call
in
pop
out
push
mov
(bad)
mov
sub
mov
lea
lds
lahf
jl
retf
push
and
sbb
fbld
cmp
inc
pop
jmp
jb
xor
mov
sbb
cmps
jp
(bad)
push
pop
pop
inc
popa
jp
mov
pop
test
cmp
jo
dec
fs
into
xor
mov
test
jecxz
pop
or
call
mov
inc
push
or
mov
ds
fcom
rol
aaa
or
mov
jns
movs
jo
fild
call
clc
dec
popf
pop
cld
mov
fwait
push
aas
jecxz
mov
dec
jmp
lods
stc
aaa
aad
adc
(bad)
(bad)
(bad)
out
stc
mov
push
mov
push
out
cmp
pop
or
les
ret
push
gs
movzx
in
out
mov
scas
cmp
arpl
mov
inc
rcl
xlat
aam
sbb
inc
inc
mov
and
cmovbe
sbb
int3
xor
sub
bnd
rol
scas
mov
push
jo
sub
adc
jge
sbb
stos
adc
push
cmp
adc
jne
xor
daa
mov
pop
inc
jg
mov
rol
aaa
ror
test
cmp
fld
mov
dec
imul
in
add
(bad)
shl
ret
xchg
lock
imul
je
popf
iret
pop
inc
ss
fild
ds
adc
cs
movs
sub
shl
sahf
div
mov
clc
and
sbb
xor
sub
scas
ins
aam
daa
xchg
xchg
test
(bad)
push
movs
push
test
xchg
adc
mov
jmp
rcr
jmp
int
mov
fist
adc
jmp
pop
xchg
add
pushf
jae
dec
retf
mov
add
sti
inc
ja
xor
sbb
stos
jle
adc
mov
mov
mov
jge
jle
into
inc
sub
pop
or
fcmovne
mov
(bad)
or
arpl
adc
mov
fadd
fild
jmp
mov
fdivp
push
mov
dec
repnz
mul
lock
mov
outs
xchg
outs
pop
leave
lahf
ret
mov
iret
push
cli
xchg
mov
test
pop
daa
rol
fidiv
ja
in
sub
cmp
pop
out
lahf
int
mov
outs
jne
mov
(bad)
sahf
inc
ret
push
mov
lds
mov
leave
arpl
sbb
adc
xor
add
mov
add
pop
std
iret
jle
out
repnz
adc
sahf
psllw
mov
cdq
mov
pop
sbb
arpl
mov
mov
sub
push
jmp
dec
ds
mov
retf
lods
arpl
pop
das
movs
push
(bad)
pop
pop
lods
arpl
(bad)
jns
out
imul
xor
and
cmps
pop
(bad)
mov
lahf
hlt
push
and
das
and
(bad)
popa
cs
inc
ficom
sub
inc
retf
fnsave
mov
test
scas
xor
jo
call
push
in
xor
jbe
dec
push
div
xor
pop
aam
fld
mov
pop
fist
dec
inc
jno
fld
pop
xor
and
and
in
adc
mov
test
in
out
fwait
ret
dec
cli
lods
mov
push
mov
cwde
jae
movs
mov
jb
test
fst
lahf
repnz
retf
mov
push
sub
test
mov
dec
enter
push
enterw
stc
mov
mov
mov
xor
call
mov
mov
mov
push
push
pop
or
cmp
mov
xchg
mov
jbe
leave
cmps
sub
mov
jae
push
popa
and
je
push
or
push
push
pop
outs
(bad)
pop
loopne
sar
mov
test
fidivr
ins
or
sub
cmc
in
push
mov
inc
das
pop
ss
xor
(bad)
rol
cmp
and
pop
and
movs
stos
into
and
lods
mov
or
pop
sbb
xchg
popa
mov
pop
adc
into
or
std
call
test
inc
xchg
lahf
sub
rcr
add
and
hlt
mov
data16
push
push
pop
jo
pushf
xor
fild
enter
cmp
inc
je
nop
popf
push
xchg
jne
loop
adc
repz
mov
push
mov
adc
in
mov
cwde
xchg
sub
xlat
pop
mov
int
test
pop
push
call
mov
and
sbb
into
inc
adc
out
cmp
cmps
fld
add
jg
xor
fsub
push
cli
ds
call
bound
mul
ficomp
or
iret
ds
(bad)
mov
fld
mov
stc
inc
fwait
loop
inc
add
pop
inc
aam
stc
(bad)
(bad)
mov
in
or
jmp
fdivr
das
jne
pusha
pop
xchg
push
jmp
jmp
inc
in
jo
or
pop
sbb
pop
das
dec
xchg
inc
fld
jmp
jge
pop
xchg
data16
lahf
sbb
cmp
aas
jne
xlat
mov
sbb
ss
shr
stos
push
adc
lods
jg
cmc
clc
cwde
inc
push
mov
adc
dec
jp
test
data16
dec
mov
push
je
pushf
mov
in
loope
repnz
aam
fisttp
push
pop
fistp
retf
test
imul
test
and
fsub
mov
pop
ret
xchg
add
xor
push
iret
adc
add
lahf
push
sti
ror
aam
push
xlat
out
push
inc
and
out
sbb
bswap
shr
sahf
ins
lahf
jge
push
and
addr16
mov
je
stc
sbb
into
push
push
idiv
fucomip
inc
outs
dec
jp
mov
add
cmps
cmc
fwait
adc
push
push
and
mov
and
movs
cmp
ins
jo
dec
push
dec
scas
sub
je
dec
cli
xor
icebp
and
sbb
jmp
push
mov
xor
loop
pop
jl
or
adc
lahf
int
mov
mov
in
and
jb
dec
dec
(bad)
mov
daa
scas
xchg
jl
and
scas
ret
gs
mov
fdivr
mov
rcr
movs
jl
dec
out
xchg
not
mov
test
test
mov
sbb
xchg
mov
inc
ds
fwait
mov
fdivr
mov
and
fld
push
sbb
or
or
outs
cmps
cmps
loop
jp
mov
pop
mov
push
push
loop
fist
out
gs
add
jnp
daa
jmp
adc
mov
shl
mov
or
sbb
push
(bad)
lea
jg
(bad)
data16
xchg
jge
pop
jmp
inc
scas
and
push
xchg
pop
add
lea
add
or
dec
xchg
mov
(bad)
sub
stos
add
dec
jl
dec
ins
aas
adc
sub
ins
mov
inc
xchg
pusha
setb
dec
inc
int3
cmp
retf
sub
test
inc
push
stos
and
mov
rol
std
inc
sub
in
iret
adc
dec
pop
cwde
loope
mov
xor
mov
pop
mov
js
xor
inc
xor
fld
ins
dec
jmp
cmc
jge
repnz
es
inc
xchg
enter
scas
adc
daa
xchg
je
pop
pop
push
push
repnz
pop
or
mov
inc
fisub
cmps
dec
jae
or
test
mov
cld
(bad)
pop
and
cld
or
gs
jle
neg
fmul
adc
shr
fsubrp
dec
push
xor
ins
sbb
mov
xor
shr
mov
aam
inc
ds
out
test
and
jmp
fst
adc
add
fcmovnbe
out
inc
ss
jo
int
mov
jne
(bad)
mov
loopne
xlat
sti
mov
jo
rcl
enter
ret
into
movs
push
add
(bad)
or
test
mov
stos
mov
add
test
sbb
and
lock
jg
js
xor
in
dec
loopne
leave
mov
xchg
push
pop
inc
jbe
(bad)
shl
add
imul
inc
inc
aas
ds
std
xchg
fcom
xchg
jle
(bad)
mov
inc
inc
jmp
scas
mov
pop
cs
mov
popa
mov
push
push
push
xor
lahf
jno
jecxz
add
xchg
idiv
rcl
fld
dec
and
sbb
cmp
inc
mov
fcom
cmp
clc
sahf
inc
mov
call
mov
jg
les
ds
repz
add
sbb
xchg
dec
jo
adc
pop
jmp
push
lds
and
inc
mov
shl
repnz
push
pop
jmp
mov
add
(bad)
ss
fcomp
mov
add
add
out
stos
mov
mov
cmp
and
lahf
mov
mov
xor
jns
cmps
popa
pop
es
aaa
mov
fsubr
fmul
iret
mov
or
push
mov
loop
xor
loop
jp
mov
and
sbb
popa
xchg
inc
out
sbb
setno
add
in
dec
arpl
sub
icebp
sbb
in
jl
das
add
dec
lahf
mov
int3
(bad)
adc
xor
(bad)
mov
or
mov
jg
adc
push
sbb
clc
je
sar
inc
dec
ss
ins
(bad)
xchg
lea
movs
mov
or
int
pop
push
shl
mov
adc
cmps
pop
pop
out
xchg
imul
pusha
or
test
dec
sbb
jecxz
pop
mov
sar
inc
loope
xor
ins
mov
femms
in
inc
stos
pop
cmp
adc
in
jg
scas
imul
icebp
sti
pop
in
mov
push
inc
mov
mov
adc
ror
or
xchg
daa
inc
call
outs
inc
cmp
mov
cmp
(bad)
loope
push
imul
aaa
test
or
xor
xor
mov
cmp
addr16
cmc
cli
leave
dec
push
mov
adc
retf
mov
push
xchg
hlt
stos
push
xchg
pop
xor
push
aaa
jmp
cmp
push
and
call
jg
mov
popa
int3
jo
in
adc
push
pop
push
add
mov
ret
jg
jne
push
call
mov
std
inc
sti
test
pop
dec
jle
push
add
lock
push
cli
push
(bad)
jge
mov
xchg
inc
xor
adc
out
in
jg
mov
pop
sub
add
mov
pop
(bad)
out
and
sbb
out
xor
jp
dec
dec
ror
aam
cwde
out
xchg
jne
sahf
xchg
mov
fstp
rcr
aad
sub
je
fs
sub
pop
cld
sub
or
aaa
push
test
sub
xchg
bound
call
in
aam
sbb
mov
mov
div
nop
and
(bad)
mov
and
jbe
push
dec
add
jecxz
push
or
cmp
sbb
leave
lahf
test
and
popf
test
movs
sbb
and
(bad)
iret
adc
dec
xor
push
jnp
addr16
(bad)
in
leave
add
sub
dec
lods
aam
xchg
pop
adc
sbb
push
add
lods
mov
adc
push
int3
outs
or
aas
bound
add
mov
imul
cmp
or
out
imul
add
sti
xchg
(bad)
fsubp
ret
sub
pop
arpl
pop
fsub
xchg
push
sti
inc
mov
gs
pop
loop
sbb
xchg
mov
fsub
rol
or
add
sbb
fld
movs
mov
jbe
inc
xchg
adc
mov
sbb
clc
push
adc
or
mov
lods
xchg
loop
xchg
scas
pop
fisttp
mov
lahf
enter
cld
sahf
in
cmp
popa
jmp
pusha
add
xor
xchg
int3
xlat
mov
or
loope
loope
or
imul
fwait
adc
clc
dec
pop
mov
mov
push
fsubp
mov
push
loope
loopne
mov
inc
inc
call
or
mov
not
or
cld
sbb
sub
cmp
dec
xchg
jbe
aad
jbe
loopne
lods
adc
ins
sbb
xchg
sar
add
sti
outs
cmp
cdq
dec
sub
call
add
jbe
(bad)
fadd
cwde
adc
xchg
sub
loope
pop
cld
ret
daa
aas
inc
fimul
fidiv
and
addr16
ss
xchg
inc
stc
xchg
call
push
xchg
jecxz
lods
scas
cwde
in
mov
dec
repnz
xchg
cmps
mov
add
or
pop
push
das
xor
jo
imul
pushf
retf
scas
shr
mov
popa
mov
and
ss
mov
jbe
pop
cld
retf
fcom
sub
fcmovbe
es
(bad)
and
mov
ins
ss
jg
mov
inc
dec
jmp
imul
loope
sub
dec
sbb
loopne
mov
in
push
push
and
mov
call
out
aas
jmp
nop
lea
loopne
jb
xchg
data16
fmul
ins
shr
or
(bad)
adc
iret
mov
loop
sub
popf
sub
mov
jae
ret
mov
iret
xchg
loopne
xor
fsub
lea
mov
push
jmp
loope
xchg
pop
adc
xchg
daa
mov
or
mov
lahf
xchg
rcl
ret
scas
pop
scas
mov
in
repz
xor
fwait
pop
jbe
dec
outs
mov
jp
aam
mov
aam
outs
test
fidivr
in
repnz
xchg
mov
sub
adc
xor
or
outs
call
shl
or
cmp
or
shr
adc
out
sti
add
jmp
or
or
xchg
ja
mov
test
fimul
enter
imul
cmp
test
repz
cld
rcl
test
neg
xor
ds
stos
inc
adc
ins
jl
mov
xchg
mov
test
xchg
loopne
push
mov
push
shr
pop
popa
fdivr
jmp
movs
pop
mov
cmp
push
pop
jb
push
enter
dec
sbb
xchg
lds
(bad)
ret
mov
mov
rcr
enter
xor
or
out
(bad)
jmp
sub
inc
mov
test
mov
outs
test
push
mov
mov
enter
fadd
sub
popa
xchg
fidivr
ds
aaa
cmp
loopne
sahf
pop
pop
adc
mov
outs
sub
sbb
push
cmp
clc
and
adc
rcr
mov
ret
inc
pusha
sbb
out
movs
mov
nop
stc
jno
dec
pop
mov
pop
jmp
mov
jbe
pop
in
shr
lds
mov
rcr
pusha
fcom
lds
sub
test
lock
ins
inc
arpl
pop
jbe
scas
mov
adc
(bad)
loopne
pop
jmp
pop
in
mov
mov
popa
xchg
xlat
sbb
out
retf
push
call
data16
call
(bad)
dec
cmp
call
sbb
pop
pop
mov
push
mov
sbb
(bad)
cmc
inc
frstor
and
dec
lds
mov
fwait
les
xor
aaa
add
lock
aam
jno
pop
jno
retf
dec
ficom
sub
repz
scas
lahf
cld
in
xchg
daa
arpl
popa
aaa
cmp
shr
jb
pushf
add
stc
xchg
scas
mov
jmp
add
loop
cmp
outs
ins
clc
shl
test
pop
ror
push
stc
jecxz
aaa
in
adc
mov
(bad)
fmul
inc
je
mov
mov
xchg
pop
push
movs
mov
sbb
pop
jp
rcr
mov
mov
dec
cmp
in
mov
xchg
cmp
hlt
mov
mov
xchg
jge
rep
das
push
and
push
daa
out
jle
aaa
dec
cmp
mov
ins
xor
sub
fwait
cmps
cmps
hlt
mov
sub
jl
aad
xchg
shl
xor
dec
jle
repnz
add
sub
int
jno
dec
ss
pop
mov
inc
lods
push
call
pop
xlat
(bad)
neg
jecxz
xor
jg
arpl
mov
icebp
inc
add
jo
cmp
test
jmp
or
mov
sbb
inc
test
inc
ja
imul
add
and
fwait
jbe
and
(bad)
lock
lods
movs
ret
iret
imul
mov
jmp
sub
pop
shr
inc
lock
mov
imul
cmp
adc
xchg
ds
(bad)
pop
mul
mov
cmp
outs
xchg
pop
xlat
pop
adc
jbe
cmps
mov
jo
mov
fs
pusha
sbb
shl
sub
movs
or
sbb
sahf
loop
in
or
add
int
xchg
cmp
(bad)
adc
mov
setl
adc
push
inc
inc
push
xor
adc
cmp
fisubr
cs
fs
hlt
add
ret
div
ss
data16
imul
fidivr
bound
push
sbb
inc
pop
test
mov
cmp
and
(bad)
repnz
sub
sbb
push
sub
ins
mov
jns
xchg
mov
call
mov
and
out
inc
ret
fistp
sti
add
jle
(bad)
sbb
xacquire
ja
mov
cmp
jle
fs
sbb
add
mov
scas
jmp
jo
inc
pop
cmps
test
fild
push
xchg
jl
stc
aad
and
mov
sub
cdq
pop
and
ss
or
icebp
pop
stc
xchg
and
pop
pop
xor
pop
cmp
sbb
inc
test
cli
inc
xchg
mov
xchg
fbstp
jo
adc
add
out
xor
jo
mov
cli
ror
add
movs
sbb
push
pop
fidiv
push
int3
dec
pop
and
retf
mov
retf
or
or
cld
cmps
shl
cmp
mov
int
mov
push
enter
dec
mov
xchg
sbb
or
call
jge
inc
repz
pop
shr
das
popf
test
ret
sub
mov
push
in
ja
ret
add
dec
fisubr
sub
in
fldenv
(bad)
int3
push
(bad)
sub
jns
lahf
mov
mov
sbb
mov
cmp
or
das
cmp
sti
test
(bad)
test
js
std
dec
cmc
adc
cmp
nop
mov
xchg
fdiv
in
loop
xlat
jo
iret
inc
push
test
and
mov
push
mov
pop
add
xchg
hlt
(bad)
sbb
aas
xor
pop
lods
sbb
sub
adc
xchg
pusha
sub
pop
add
test
sub
in
mov
(bad)
and
sbb
inc
in
popa
xor
movs
stos
xchg
adc
cmps
jmp
pop
xor
mov
cmp
repz
sub
leave
fsub
loopne
add
sbb
adc
ja
shl
shr
jbe
mov
mov
mov
xchg
mov
pop
mov
ret
sbb
mov
xlat
push
adc
or
icebp
sar
in
stos
je
imul
fistp
mov
mov
fnstsw
xor
jnp
jae
adc
and
mov
sahf
inc
xor
dec
arpl
dec
pop
dec
fimul
push
das
aad
inc
loope
fsubp
loopne
cwde
mov
sub
aad
sbb
jno
jge
mov
xchg
and
cmovl
repnz
add
mov
movs
push
inc
call
inc
lods
jo
pop
sub
mov
push
xchg
mov
mov
xchg
mov
fucomip
sub
aaa
lahf
jecxz
add
xor
movs
and
repnz
and
mov
mov
or
sar
fsub
pop
add
mov
sub
adc
xchg
push
sub
cmp
pop
and
dec
into
xchg
push
(bad)
or
mov
jle
cs
aas
movs
adc
aam
mov
out
jne
pusha
popf
cdq
sbb
not
xchg
cmp
cmp
test
loope
out
ret
pop
cmps
xchg
bound
test
out
dec
test
dec
dec
jg
ins
and
jns
push
cmps
push
sbb
bound
ja
sbb
xchg
sbb
mov
pusha
std
mov
sub
dec
jecxz
and
fs
stos
jne
or
mov
mov
mov
jno
test
mov
xor
or
adc
inc
jp
xchg
out
addr16
out
clc
push
mov
ins
and
jno
out
mov
cmp
xchg
dec
jbe
nop
push
cmps
repnz
ror
mov
mov
push
dec
mov
pop
jae
push
pop
jmp
mov
repz
std
(bad)
call
lahf
dec
mov
std
scas
dec
mov
(bad)
retf
push
mov
jmp
(bad)
nop
jbe
mov
sbb
jo
out
or
ret
mov
ffreep
cmp
out
js
sub
aas
add
mov
jmp
fbld
cdq
inc
pop
jae
dec
mov
scas
outs
push
enter
ja
into
shl
out
jg
loopne
lods
jmp
inc
jbe
mov
jmp
push
adc
inc
ins
mov
mov
(bad)
fsubr
repz
ret
arpl
fldcw
mov
or
popf
mov
test
cmp
jnp
fisttp
and
dec
inc
(bad)
mov
sbb
inc
stos
add
mov
mov
mov
push
ret
sub
xor
mov
and
xor
outs
dec
scas
adc
stos
sti
out
in
pop
xchg
add
ret
or
movs
sbb
mov
fiadd
mov
dec
fucomi
test
(bad)
jmp
cmp
in
hlt
ror
and
fild
rsqrtps
pop
sub
rcl
dec
xchg
sar
mov
pop
push
outs
cmp
sahf
jb
gs
pop
rcr
in
(bad)
fwait
xchg
retf
mov
add
xchg
loop
inc
cwde
jge
add
xchg
and
xchg
aad
aad
or
mov
jp
xchg
jmp
ds
xchg
test
add
jbe
fsubr
(bad)
scas
cli
imul
xor
adc
lods
mov
push
repz
cmps
jmp
(bad)
add
inc
push
xor
jno
jl
outs
ja
push
add
std
pop
int3
mov
mov
sbb
leave
xchg
imul
sub
adc
jp
mov
cmps
enter
add
cmp
pop
and
push
pop
mov
icebp
mov
leave
pop
cmp
sub
mov
push
(bad)
push
xchg
mov
jo
adc
xchg
jnp
xchg
adc
outs
xor
ret
adc
inc
neg
ror
push
or
lods
(bad)
retf
es
sbb
mov
sub
(bad)
stc
movs
arpl
jle
fstp
lea
jecxz
mov
idiv
push
imul
lds
inc
leave
ja
pop
add
imul
xchg
not
lods
ret
mov
jae
and
repnz
popa
or
and
and
push
test
aam
icebp
mov
into
jp
(bad)
jb
loopne
pop
aad
push
sbb
(bad)
ret
pusha
inc
inc
lock
iret
cmps
and
call
push
push
push
mov
jno
icebp
aaa
and
lea
das
pushf
test
rcr
add
push
mov
int
xchg
nop
pop
cmp
pop
outs
inc
js
jne
dec
rcl
leave
cmc
adc
outs
push
lock
xchg
dec
push
cs
xor
arpl
sbb
fs
gs
(bad)
push
out
call
dec
add
lods
lock
dec
pusha
pop
in
loope
(bad)
shl
icebp
cmps
mov
(bad)
hlt
mov
jns
or
mov
mov
inc
and
aas
push
ins
mov
icebp
mov
sub
mov
inc
or
sahf
jo
mov
in
xor
scas
inc
and
ds
iret
push
das
enterw
in
jecxz
jns
dec
div
dec
pop
add
add
pop
xor
int
sar
loopne
in
loope
dec
xlat
or
cmc
or
mov
aad
lahf
xor
sub
dec
xor
adc
add
stc
retf
push
cmp
inc
ficom
adc
movs
sub
adc
jg
jmp
scas
fisub
mov
adc
xor
mov
lea
sub
jmp
leave
(bad)
(bad)
inc
sub
(bad)
fcom
in
int3
xor
xlat
push
mov
stc
aas
mov
jno
sub
int3
pop
mov
sub
cmc
gs
pop
loopne
test
push
mov
loop
lods
mov
sub
sbb
mov
jp
jne
adc
adc
mov
or
imul
fdiv
sbb
and
add
jnp
rcr
test
daa
int
add
(bad)
jle
pop
sahf
je
xor
or
push
add
aas
test
call
cmp
mov
out
outs
ins
pop
pop
cs
inc
push
out
std
dec
lea
pop
mov
push
mov
dec
jmp
cli
push
fist
add
out
xor
fsub
cwde
adc
or
xlat
(bad)
js
or
je
xchg
(bad)
xlat
ds
mov
dec
add
arpl
neg
cli
push
fadd
jns
jo
shl
rcr
dec
mov
xchg
in
outs
ds
push
jmp
inc
(bad)
dec
daa
jg
jno
ficom
out
push
fwait
and
retf
mov
mov
xor
imul
in
dec
inc
cmps
sbb
leave
cld
sti
loop
jmp
dec
and
ret
push
fs
push
xchg
pop
xor
int
bound
out
jnp
xchg
(bad)
imul
ret
aaa
adc
nop
scas
mov
sbb
cmp
fmul
adc
mov
cmp
pop
cdq
and
mov
mov
inc
jne
add
xchg
sub
pop
xchg
test
dec
mov
inc
retf
lock
fstp
xchg
shl
arpl
ret
cmp
sub
fldz
icebp
adc
(bad)
retf
inc
jne
adc
(bad)
lock
sbb
cmp
sbb
xor
enter
popf
push
push
sub
(bad)
push
inc
mov
out
jge
stc
je
mov
cli
in
retf
cmp
(bad)
mov
les
cld
adc
ret
jns
imul
jo
les
jmp
or
dec
rcr
push
mov
and
loope
fwait
call
dec
clc
xor
cmp
jns
xlat
xlat
and
mov
jl
sub
xchg
jle
jbe
mov
aam
jb
sbb
(bad)
test
pop
push
jno
das
mov
popa
gs
scas
shr
sbb
pop
sbb
cmps
loope
xchg
arpl
pop
add
das
fisttp
inc
pop
out
std
cmps
ret
call
or
sti
psrad
mov
lods
xor
xchg
in
sub
cmp
inc
ds
xlat
mov
and
fs
test
jmp
mov
push
loope
les
mov
and
xchg
adc
daa
dec
outs
push
add
jno
arpl
xlat
or
arpl
out
jnp
or
and
push
sbb
rcr
lea
fld
xlat
and
out
div
stos
add
dec
cmp
jle
mov
mov
idiv
push
jne
or
stc
sub
mov
jmp
psubusw
mov
pop
jmp
loopne
pop
dec
or
stc
je
adc
jo
imul
retf
dec
dec
test
mov
mov
xchg
mov
sub
mov
nop
sti
and
inc
cdq
je
iret
movs
sub
inc
push
and
add
loop
and
sahf
mov
ret
cmp
call
sub
fld
mov
je
mov
test
jns
mov
cmp
mov
push
jne
adc
xchg
repz
jecxz
mov
movs
jne
xchg
mov
inc
arpl
outs
add
test
frstor
or
cld
cmp
push
xor
pop
test
pop
ficom
mov
test
adc
xor
inc
fistp
jg
nop
fnsave
cld
add
call
imul
and
adc
daa
ret
repnz
adc
fwait
gs
and
pop
mov
std
hlt
imul
sar
jno
cdq
je
inc
fld
add
push
cmc
dec
in
(bad)
(bad)
sbb
ror
mov
movs
hlt
or
(bad)
not
cmps
dec
scas
jl
mov
adc
xor
adc
lods
fldcw
test
loop
test
test
mov
sbb
bound
jns
(bad)
adc
pop
aam
ret
arpl
xchg
cdq
mov
shl
push
cmp
jle
add
ret
pop
aam
cmp
push
xchg
mov
sub
mov
repnz
lock
icebp
mov
push
gs
aas
aas
in
addr16
cmp
sub
cs
xchg
mov
dec
out
orps
pop
add
jge
jecxz
mov
adc
movs
repz
mov
fimul
xor
test
sub
cmp
pop
popf
test
outs
xchg
(bad)
(bad)
std
cli
aam
lahf
inc
lock
cmps
cmp
sbb
ins
cmp
fimul
jge
mov
in
inc
leave
out
cli
outs
xchg
fwait
push
out
lea
pop
push
js
mov
cmp
lods
mov
push
add
jecxz
fcomi
cmc
aam
or
fwait
hlt
push
jle
sub
inc
mov
daa
xchg
cmp
lods
outs
test
jge
mov
test
inc
xlat
popf
mov
cli
xor
inc
xor
and
test
retf
pop
jl
ror
mov
mov
repz
mov
or
retf
pop
push
xchg
aad
cli
adc
in
pop
shl
bound
pop
mov
pop
mov
stc
cld
mov
arpl
test
add
cli
outs
xchg
cmp
lods
add
mov
jo
or
call
cmp
pop
pop
mov
adc
int
sbb
or
int
cld
out
cld
jl
push
daa
and
and
js
and
xchg
and
std
xchg
lds
sbb
pop
icebp
sbb
adc
daa
xchg
std
stc
inc
fidiv
repnz
and
mov
or
aas
loopne
push
fisub
call
dec
pop
jle
in
cmps
jo
cdq
sbb
repz
repz
jp
mov
push
cdq
pop
(bad)
in
push
leave
push
and
hlt
sub
inc
clc
xchg
jmp
and
ja
and
rol
addr16
loop
retf
aam
mov
sti
add
popf
inc
test
aaa
or
(bad)
dec
enter
or
mov
mov
inc
cmp
lods
loop
adc
push
sbb
loopne
call
ss
cmp
out
pop
lds
stos
sub
shl
sbb
adc
pop
mov
les
or
pop
and
jl
xor
dec
cs
enter
cmps
in
out
push
test
pushf
sbb
push
pusha
sub
ds
nop
or
inc
xchg
dec
and
jb
nop
outs
jle
pusha
sbb
test
or
mov
fdiv
mov
or
fsub
scas
pop
(bad)
mov
into
cmp
(bad)
mov
lods
lea
push
jbe
or
sbb
rcr
sbb
lea
push
sbb
in
sti
fbstp
icebp
ret
aam
das
(bad)
sub
out
in
fimul
xchg
outs
add
(bad)
cmp
mov
or
mov
div
push
dec
xor
mov
inc
scas
arpl
cwde
out
iret
mov
mov
into
mov
repz
out
sub
ins
movs
xchg
mov
dec
cmc
dec
jns
mov
lea
mov
in
pop
sbb
jmp
fwait
imul
fbstp
(bad)
push
dec
sub
fistp
out
hlt
shl
adc
sbb
movs
aaa
push
fisubr
push
pop
dec
mov
rol
mov
jmp
daa
cmps
cmp
lea
retf
jmp
(bad)
mov
retf
sub
ret
in
or
pop
shr
xchg
fst
add
dec
ror
pop
ds
jmp
fs
scas
ret
inc
sti
es
mov
ins
popf
mov
xchg
jmp
pop
pop
repz
inc
xor
imul
movs
in
fwait
pop
push
jns
or
ret
aam
mov
add
push
push
xchg
dec
imul
pop
push
jecxz
fsubr
and
pop
stc
aaa
std
cmp
shl
ss
add
mov
and
scas
add
xor
push
xor
and
adc
xchg
mov
sbb
jmp
push
cdq
sub
icebp
sbb
sub
arpl
mov
mov
mov
or
clc
popf
cmp
cmps
test
pop
adc
enter
sub
inc
xor
in
cmp
sbb
arpl
sbb
mov
movs
outs
mov
sub
cmp
mov
pop
(bad)
mov
jns
stc
and
call
xchg
xchg
loope
(bad)
in
call
pop
aad
aad
push
pop
push
push
push
pop
jnp
out
outs
push
ds
and
retf
mov
movs
dec
sub
frstor
fist
push
ret
sub
dec
jl
aas
in
sahf
jle
mov
out
and
dec
sub
std
aam
gs
cmp
adc
inc
sar
add
xor
dec
stc
mov
ins
sub
adc
mov
loope
xchg
stos
iret
dec
inc
pop
int3
ss
dec
xor
test
mov
sub
or
rcl
mov
shl
cmp
xor
add
jecxz
and
fwait
shr
clc
(bad)
shl
int3
repz
inc
mov
xchg
inc
xchg
loopne
push
loope
adc
inc
fcmove
call
(bad)
ds
xchg
cmp
dec
dec
int
dec
iret
icebp
arpl
xor
out
rcl
cmps
in
jae
sub
or
xchg
mov
out
pusha
jnp
cdq
test
mov
(bad)
fdiv
push
test
sbb
jbe
sub
rol
push
xor
cmp
cdq
scas
jle
cmp
pop
cmps
cmp
stos
adc
mov
fimul
sbb
adc
jl
mov
mov
mov
cmp
retf
jmp
or
mov
out
or
popf
out
sub
stos
cdq
adc
lds
aad
loope
(bad)
xor
scas
and
inc
out
jl
imul
xchg
xchg
add
push
scas
pop
xchg
inc
jmp
pop
xor
cdq
mov
fisub
movs
test
mov
das
ins
sbb
and
mov
cli
stos
xchg
sbb
xchg
or
adc
dec
sbb
inc
movs
sete
pop
pop
repz
test
adc
stos
mov
add
dec
fist
add
pop
xor
mov
stc
ins
hlt
cwde
push
sbb
(bad)
jle
jecxz
call
jne
xor
loope
test
mov
mov
cmp
push
add
daa
cld
cmp
imul
jb
sub
inc
int
push
pop
cld
mov
repnz
inc
dec
popf
call
inc
push
inc
pop
dec
popf
dec
iret
jbe
and
test
sbb
jg
dec
fwait
cmp
inc
ret
dec
jb
and
push
lods
push
mov
ins
aad
leave
fiadd
pop
jp
cmp
pop
jno
push
imul
sub
xlat
test
and
pusha
pop
jecxz
clc
hlt
inc
mov
hlt
test
lods
int
lods
sub
iret
xchg
mov
mov
dec
cmp
pop
enter
loop
lds
fwait
mov
loopne
sahf
pop
mov
stos
ss
and
or
mov
jae
rcr
mov
or
dec
inc
inc
nop
mov
add
push
jae
fldenv
cdq
xor
sub
add
dec
xor
sti
or
or
aam
push
inc
in
mov
jmp
sub
out
bound
fwait
and
hlt
imul
bound
ds
leave
push
das
pop
mov
icebp
mov
mov
add
ja
xchg
jb
adc
nop
leave
push
lea
clc
loopne
sbb
popa
push
push
add
adc
aam
mov
cld
sub
adc
xor
lahf
out
xchg
cmps
mov
int
push
pop
mov
dec
sub
les
fwait
cwde
sar
pop
cs
xor
out
adc
pop
in
loope
les
inc
enter
test
inc
fcomp
cmp
imul
pop
and
jle
ret
push
pushf
mov
xchg
inc
ret
in
rol
mov
inc
cld
clc
push
jnp
loope
lods
xor
ja
jbe
dec
pop
mov
or
or
add
ret
out
mov
inc
jl
push
cmp
xchg
sub
jne
sti
mov
sar
addr16
inc
cli
mov
xchg
in
and
xchg
dec
lods
mov
bound
cli
test
imul
and
ror
into
mov
cmp
jno
mov
fistp
mov
in
xor
cmps
xchg
xor
loop
inc
mov
push
cmc
inc
mov
les
cmps
(bad)
mov
arpl
fs
pop
sbb
or
cdq
std
inc
ja
xor
fisub
inc
mov
and
imul
cwde
inc
out
jmp
add
hlt
lahf
pop
and
push
push
jb
loopne
sub
das
lds
fwait
mov
clc
sub
fnstenv
popf
xchg
dec
lods
adc
movs
(bad)
and
mov
xor
ja
jmp
std
and
jae
aas
cmp
daa
outs
fstp
call
iret
inc
push
lods
loop
cmc
sub
icebp
push
mov
punpckhdq
xor
and
add
sbb
hlt
jmp
cmp
sub
loope
call
dec
xchg
sub
push
loope
xor
and
sbb
ficom
cmp
ret
mov
arpl
pop
dec
test
jecxz
outs
rcr
mov
pop
add
stos
mov
iret
repnz
mov
enter
jb
(bad)
pop
jp
sti
clc
xchg
ror
jle
pop
hlt
xor
popf
inc
inc
push
mov
pop
add
lahf
call
xor
dec
mov
cmp
in
aam
cmp
xchg
cdq
imul
adc
ror
loope
jns
xor
pop
cmp
imul
mov
imul
popa
(bad)
bound
icebp
push
xor
fwait
inc
add
mov
or
bound
jle
enter
dec
adc
and
and
in
push
xor
test
aad
xchg
jecxz
cmp
add
and
xor
aad
lea
hlt
push
sbb
cli
xchg
pop
(bad)
jbe
and
cld
add
add
xlat
in
call
stc
sub
fbstp
sub
mov
mov
mov
rcl
add
adc
dec
out
inc
dec
jo
mov
xchg
cmp
push
xchg
mov
addr16
push
or
in
jbe
cs
xlat
jae
icebp
call
lea
jmp
in
stos
mov
xor
jae
mov
xchg
sbb
arpl
xlat
test
retf
aaa
cmp
ret
adc
inc
push
mov
mov
bound
mov
dec
add
lahf
aad
repz
mov
add
sbb
cli
mov
jno
ss
loope
mov
push
test
mov
aad
(bad)
cmp
int3
cwde
outs
inc
mov
fsubrp
lds
xchg
jp
aaa
fs
cs
ret
fs
scas
je
sahf
call
es
pushf
iret
xlat
enter
out
mov
retf
imul
sub
movs
inc
push
(bad)
fild
iret
retf
pop
push
cwde
mov
movs
daa
push
fst
adc
xchg
cmc
sub
scas
add
(bad)
and
sub
out
inc
int3
cmps
fnstenv
mov
fimul
scas
add
sbb
in
dec
ss
mov
push
int3
mov
call
push
fst
push
retf
and
ror
pop
int
adc
xor
in
jmp
or
adc
loope
or
stos
mul
push
popa
pop
scas
mov
cmp
fnstcw
sub
cmovp
pushf
push
jmp
or
fdiv
stos
mov
sub
mov
es
mov
adc
mov
inc
lock
jae
test
sbb
jo
fidiv
aad
xchg
repz
sti
cmp
aas
sti
cmp
cld
pop
xlat
ins
ss
adc
pop
add
jge
mov
push
add
rcl
inc
rcr
jmp
mov
inc
push
idiv
gs
mov
seta
in
xchg
out
movs
aam
out
(bad)
jne
aam
mov
jle
out
cs
call
mov
add
push
xor
mov
cmp
cmp
out
sar
xor
(bad)
pop
or
jno
ror
inc
jge
push
dec
push
mov
sbb
cmp
adc
jmp
fsubr
inc
push
int3
add
lods
dec
imul
je
in
sahf
retf
sub
or
or
fisub
pop
xor
xchg
cmp
shl
(bad)
(bad)
xor
lods
ss
mov
xor
pusha
jmp
mov
jg
cmp
xchg
push
inc
ja
cmps
scas
cmp
push
rcr
ud0
push
cwde
(bad)
jg
leave
int
mov
xor
nop
fs
and
call
jo
gs
inc
inc
or
push
call
push
sub
and
jne
shl
js
pop
jge
ret
or
dec
lahf
outs
retf
jecxz
adc
movs
mov
jae
dec
push
test
movhps
or
adc
jmp
std
pop
dec
popf
or
mov
mov
push
cmp
cmp
shr
pop
dec
mov
mov
add
push
jb
cmc
mov
mov
loop
addr16
jno
jl
lods
je
pop
mov
das
push
ss
mov
sub
mov
stos
in
xor
hlt
popf
pop
lock
test
and
cld
cmp
or
ins
sti
call
(bad)
outs
push
es
fstp
cmp
pop
call
sub
call
cmp
das
pushf
scas
addr16
clc
cdq
sub
xor
retf
sbb
add
push
call
movs
and
retf
retf
jecxz
jp
mov
dec
retf
xchg
movs
imul
sub
pop
fsub
sbb
mov
xor
neg
and
in
iret
pushf
fild
sub
pushf
jmp
arpl
bound
daa
adc
test
cmps
jne
xor
repz
jmp
pop
cmp
mov
sub
in
je
sub
lahf
or
retf
pop
fild
mov
hlt
mov
xchg
in
push
ja
push
hlt
mov
fst
adc
push
push
sub
lds
sbb
mov
mov
or
cmp
dec
(bad)
retf
inc
and
cmp
ror
xchg
loopne
jne
push
fnstenv
sbb
sbb
xchg
cld
scas
dec
call
mov
stos
pop
repnz
icebp
inc
pop
scas
repz
cmp
call
jbe
popf
and
dec
movs
dec
sub
add
xor
jb
mov
fbld
add
aaa
pop
inc
push
pop
dec
clc
psubq
loopne
sbb
mov
jge
rol
(bad)
std
mov
push
addr16
push
jmp
jle
mov
std
idiv
(bad)
shr
cmps
retf
call
xchg
mov
pop
std
daa
jns
jno
dec
dec
icebp
and
or
rol
adc
into
xor
int
and
aas
xchg
dec
sbb
mov
mov
lock
nop
adc
sbb
mov
je
sub
mov
inc
jnp
lea
dec
pop
sbb
bnd
(bad)
movs
pop
push
xchg
mov
test
mov
ins
mov
inc
ret
adc
and
inc
ins
(bad)
jo
fld
lea
imul
not
retf
or
hlt
jl
lods
jne
xlat
retf
not
adc
loop
and
or
cmp
mov
clc
mov
ds
mov
lds
into
xor
popa
outs
bound
xor
adc
jns
scas
jbe
sbb
rcl
inc
jae
jg
pop
mov
mov
push
push
lahf
out
sar
ror
fcomp
movs
adc
bound
movs
ss
pop
xchg
stos
sub
fwait
pop
call
mov
stc
stos
pop
sbb
dec
pop
mov
ret
push
sub
fcomp
push
adc
mov
mov
cwde
daa
push
adc
jbe
cmc
fs
lock
lods
inc
mov
and
xor
stc
push
and
lds
jae
(bad)
les
jo
push
and
cmp
push
not
fidiv
ret
pop
lods
aam
in
xor
stc
jnp
test
mov
cs
(bad)
sub
leave
daa
retf
repnz
into
pop
jmp
add
loope
sub
jno
aas
(bad)
lods
cmp
and
ret
dec
cmp
ret
adc
shl
dec
and
mov
mov
and
and
aaa
sbb
fisubr
out
mov
dec
out
jne
arpl
push
mov
mov
cld
cwde
addr16
outs
cmc
test
aad
jge
fdiv
inc
pop
lods
and
mov
jns
shl
pop
daa
into
xchg
fcmovnbe
js
adc
cmc
sbb
or
cmc
push
sub
inc
rol
arpl
mov
cmps
xor
jnp
pop
mov
inc
add
mov
mov
push
cwde
pop
add
dec
xor
in
es
inc
xor
mov
inc
movs
(bad)
in
sbb
and
leave
int
dec
sbb
jmp
or
push
stos
ret
xchg
mov
push
mov
jnp
jae
fld
retf
sbb
cmp
inc
mov
pop
xor
sbb
leave
iret
clc
gs
rol
cmp
pop
cmc
xor
jae
retf
or
icebp
adc
xor
pusha
push
jb
dec
mov
xlat
fild
adc
aaa
cmc
bound
arpl
xor
jmp
xchg
mov
mov
inc
jo
cmps
sub
data16
rcr
lea
(bad)
fdiv
pop
(bad)
jno
jbe
jb
lods
dec
fwait
cmp
retf
cmp
movs
fst
pop
add
pop
outs
lahf
ja
scas
int
push
or
je
mov
adc
mov
out
les
aas
inc
inc
sbb
cmps
iret
mov
xor
mov
mov
xchg
fiadd
cdq
jnp
fwait
(bad)
jae
idiv
test
leave
ret
imul
les
or
ins
lods
mov
jmp
lock
ret
jns
outs
push
mov
or
out
mov
in
ds
js
mov
lea
cmp
push
test
pop
mov
mov
xchg
scas
clc
xchg
dec
dec
mov
xchg
cmp
fbld
in
pop
inc
jmp
cs
pop
jno
call
aad
retf
and
mov
fs
movs
sub
pop
sar
fdiv
sbb
xchg
ss
popf
dec
xor
mov
mov
jge
jecxz
and
sub
dec
inc
scas
jle
mov
jmp
push
in
pop
mov
pusha
aad
retf
loopne
dec
retf
in
jno
(bad)
pop
sahf
int3
outs
stc
stc
call
ror
outs
(bad)
pop
xchg
arpl
and
jbe
popa
nop
rol
mov
add
dec
pop
push
in
push
jmp
cmc
repz
cdq
sbb
xchg
je
fxch
pop
fsubr
jecxz
call
(bad)
in
jle
jo
dec
inc
mov
cmps
fldenv
hlt
enter
ret
push
xchg
pop
ficom
(bad)
or
push
leave
mov
icebp
mov
adc
push
lahf
jne
mov
cmp
inc
in
sti
mov
les
xchg
xchg
jle
jp
or
xor
inc
out
sub
mov
xorps
in
push
leave
push
cmp
shl
cmc
mov
aam
fwait
test
inc
jbe
jno
movs
mov
aaa
xchg
inc
jae
jne
jns
mov
stc
jp
push
pop
rol
and
cmp
sbb
and
push
pop
mov
mov
retf
dec
jbe
cmp
cmp
lods
sbb
inc
jl
unpcklps
dec
pop
sti
mov
pop
sub
adc
mov
icebp
add
aaa
jge
push
popa
add
dec
jecxz
pop
inc
fs
hlt
out
pop
xchg
sub
xlat
mov
push
aas
and
xlat
push
mov
in
push
aas
repnz
aaa
pop
fidiv
pop
xor
xchg
dec
cmp
xor
push
inc
retf
push
pop
in
(bad)
into
aaa
sub
aaa
out
popf
inc
jg
dec
inc
call
cmc
mov
add
(bad)
mov
push
sbb
jne
adc
(bad)
fldcw
bound
sar
je
mov
aad
xor
sub
repz
cdq
loopne
fdiv
aad
push
popf
mov
in
loop
xchg
in
ds
daa
jbe
jno
aas
call
cmp
call
repz
jmp
enter
jbe
jmp
push
jo
fisttp
ins
xchg
nop
mov
ins
(bad)
mov
pop
ja
jle
cs
leave
test
pop
add
push
sbb
jl
mov
push
and
xchg
mov
cld
jns
mov
retf
adc
data16
and
xchg
nop
int3
call
out
jecxz
mov
aam
cmp
xchg
ss
out
rcr
push
jmp
mov
push
mov
jbe
jg
jg
int
jmp
xchg
shl
(bad)
arpl
mov
mov
out
sub
xor
adc
das
mov
icebp
shl
enter
mov
and
or
out
adc
cmps
outs
(bad)
and
stos
lods
aaa
lods
mov
dec
jge
imul
cmps
jo
out
ja
ret
fisttp
sbb
shl
fadd
and
jl
in
push
inc
pop
mov
(bad)
ror
stos
dec
xor
xchg
aad
lds
out
adc
aaa
retf
xor
add
push
cmps
jge
ss
or
sbb
push
xor
pop
or
inc
int3
lds
das
mov
imul
outs
xchg
test
leave
adc
imul
or
popf
mov
loopne
mov
add
adc
cmps
mul
pcmpeqb
mov
repnz
or
dec
add
xor
daa
xchg
xor
fs
movs
push
add
sub
fidivr
je
xor
dec
cmp
inc
jae
xor
test
jnp
fist
jg
jnp
shr
lock
popa
dec
cmps
xchg
and
mov
inc
mov
ins
dec
in
loop
(bad)
jl
xchg
and
ds
stos
push
dec
dec
call
dec
movs
test
xchg
je
mov
or
sub
ror
pop
retf
adc
outs
mov
arpl
pop
test
and
retf
lods
out
sub
out
test
ins
js
dec
add
in
inc
imul
jge
dec
call
dec
cmc
add
addr16
scas
fimul
popa
repz
inc
(bad)
mov
xor
les
call
pushf
pop
daa
adc
fdiv
xor
jae
sbb
scas
dec
popa
imul
retf
leave
shl
adc
xchg
leave
sbb
cmp
xchg
out
jne
pop
mov
push
mov
lods
pop
out
adc
(bad)
mov
xor
adc
dec
pusha
lea
loope
fstp
retf
pop
cs
and
pop
sbb
mov
xchg
loop
leave
cld
aad
add
mov
fimul
push
(bad)
sahf
jnp
inc
mov
iret
mov
and
sbb
sbb
jns
(bad)
jmp
mov
cld
fcmovu
lea
push
(bad)
fwait
call
shr
stos
out
cmps
ins
clc
retf
mov
inc
add
loop
cmp
or
cs
sub
daa
lock
cmp
and
fild
jbe
int
xchg
mov
lds
hlt
(bad)
in
pop
jl
mov
fs
pop
mov
in
fwait
and
push
sbb
pop
adc
push
cli
daa
ret
push
(bad)
or
rcr
jne
lea
gs
jle
mov
data16
aaa
andps
lods
lods
daa
addr16
outs
sub
pop
xchg
mov
popa
jl
jbe
mov
dec
jnp
pop
test
sbb
pop
neg
aas
cmps
pop
sub
push
add
fwait
icebp
sub
cmp
jle
and
cld
lock
add
mov
retf
popa
das
adc
jne
or
movs
repnz
push
movs
mov
ja
mov
in
pop
xor
ror
stc
xchg
data16
scas
dec
xchg
cmp
push
(bad)
je
ror
and
mov
nop
rcr
into
(bad)
repz
imul
loope
fdivr
sub
pusha
fnsave
in
out
ja
xor
pop
mov
push
sar
cmps
outs
cmp
or
mov
jl
inc
dec
push
xchg
dec
and
imul
pop
dec
iret
retf
out
sub
mov
test
aaa
lods
jo
cmp
aaa
cld
xchg
imul
cwde
movs
add
jb
xchg
push
lock
rol
je
clc
adc
pop
int
sbb
sbb
rdpmc
sbb
cmps
in
cmc
or
sti
(bad)
or
out
loope
or
je
stos
inc
pop
in
mov
les
jno
pop
pop
cmp
mov
adc
scas
fcomp
xchg
pop
into
(bad)
sub
(bad)
mov
pop
xlat
cli
dec
fcom
out
jecxz
push
mov
pop
fcomp
xchg
mov
fsubr
fwait
pusha
dec
gs
jge
imul
add
repz
xchg
arpl
pop
in
rep
inc
sub
mov
inc
int
xor
adc
call
std
pop
sub
pop
adc
dec
out
and
iret
xlat
mov
add
shl
mov
pop
jmp
mov
jmp
imul
or
jmp
cmps
push
add
rcl
mov
xchg
dec
or
sti
sbb
jmp
setge
sub
enter
mov
(bad)
idiv
dec
scas
mov
lods
leave
test
in
leave
stos
dec
pop
cmps
push
in
push
imul
out
xchg
pop
mov
pop
sbb
loop
cmc
sbb
jg
xor
mov
and
hlt
sub
retf
inc
cwde
mov
int
push
shl
mov
in
xchg
and
and
mov
loopne
(bad)
push
aam
cs
int
ds
xlat
scas
cmp
push
shl
fdivr
mov
call
and
mov
icebp
mul
ret
loopne
fmul
xlat
lods
stc
loope
mov
cmp
adc
sub
or
cdq
mov
push
leave
mov
push
jmp
ja
out
push
jo
in
fwait
pop
pop
rol
and
inc
and
pop
retf
or
jge
dec
ss
push
mov
and
push
jns
pop
std
mov
ds
add
dec
dec
or
rol
inc
cmps
mov
ret
jmp
mov
push
mov
out
inc
fwait
iret
test
adc
xchg
lahf
xor
imul
cmp
push
inc
or
mov
cs
loope
daa
lods
push
sbb
and
pop
(bad)
xor
clc
jns
movs
sbb
cwde
lds
inc
test
jmp
popa
and
or
in
(bad)
fs
pushf
mov
jae
retf
aad
jg
inc
fsubr
or
nop
jl
cmps
jecxz
jecxz
sub
ins
ret
sbb
jo
sar
ds
test
xor
push
fiadd
dec
or
fcomp
mov
xor
jp
sbb
call
ss
push
and
call
inc
sbb
inc
mov
out
sbb
out
jne
mov
or
imul
ins
and
jne
and
add
enter
pop
gs
into
sub
inc
jbe
xchg
hlt
out
test
ins
fst
ja
movs
shr
into
fist
pop
(bad)
push
(bad)
hlt
fsub
mov
fcmovbe
loop
dec
(bad)
rcl
push
jmp
inc
(bad)
jmp
jge
adc
mov
fcmovbe
stos
leave
dec
in
sub
mov
jne
cmps
push
and
and
stos
dec
adc
data16
(bad)
xchg
fiadd
nop
lahf
cmps
or
sahf
and
pop
push
sbb
aad
jp
mov
sub
adc
mov
mov
and
stc
cmps
xchg
jae
xchg
pop
popa
push
sti
dec
mov
jnp
in
(bad)
cmps
or
or
out
test
popa
jo
stos
cmp
js
rcl
aas
inc
inc
and
mov
cdq
xor
sbb
mov
sub
popa
add
jmp
test
int
and
sbb
mov
push
mov
inc
fstp
sub
mov
mov
xchg
push
dec
dec
nop
or
test
scas
adc
dec
inc
arpl
jle
jge
inc
outs
mov
push
ror
adc
mov
mov
out
in
retf
cwde
xchg
add
ss
pop
mov
frstor
xor
sub
jae
stc
or
leave
loopne
rcl
xor
cmp
ror
mov
ins
or
in
rcl
stos
jnp
jne
mov
dec
ds
cmps
mov
into
cmp
jbe
aas
jg
mov
in
inc
dec
mov
sti
fsubp
data16
mov
jno
mov
jp
fwait
scas
jmp
test
mov
jns
rcl
adc
add
call
outs
scas
daa
ret
into
ins
sub
and
jbe
movs
xor
cs
add
mov
jle
mov
stc
xchg
stc
jo
push
jns
adc
pop
inc
mov
jae
mov
dec
push
sub
mov
and
repz
test
nop
shl
cmps
(bad)
inc
mov
inc
mov
shr
dec
outs
mov
add
loope
xor
inc
inc
sub
dec
les
add
pop
mov
dec
jge
push
in
ins
addr16
fbld
xchg
inc
cmc
sahf
cmps
mov
push
push
call
xor
(bad)
dec
push
xlat
xchg
push
popa
push
sub
mov
fisub
pop
aaa
mov
cwde
in
loope
sub
sbb
inc
mov
out
gs
xchg
lea
stc
in
mov
dec
pop
and
leave
mov
push
icebp
cmc
stos
pop
xchg
sbb
ror
push
push
xchg
or
push
in
mov
ja
dec
shrd
jno
xchg
sub
jae
cmc
inc
nop
addr16
dec
hlt
cmp
aad
lahf
loope
aam
js
mov
daa
xor
jb
psubb
or
mov
pop
into
or
outs
mov
push
sti
hlt
and
out
aad
inc
sub
dec
and
inc
fiadd
int
xor
pushf
jp
loopne
ret
add
js
fsubr
(bad)
cwde
test
adc
adc
lahf
push
cmp
sub
enter
sbb
cmp
imul
push
xor
les
retf
push
adc
pusha
and
xchg
lahf
mov
out
mov
mov
fsub
sub
mov
ja
cmp
pop
mov
loope
adc
pop
add
xlat
aad
mov
add
inc
or
dec
mov
add
sar
inc
add
leave
pop
jns
loopne
ins
xor
movs
mov
push
push
sbb
mov
retf
mov
xor
in
fadd
mov
(bad)
xchg
inc
iret
adc
dec
lahf
into
scas
and
pop
xor
dec
scas
dec
push
cmps
push
dec
push
adc
or
ret
in
lds
rcr
lods
sbb
mov
jno
mov
jns
loop
or
popf
(bad)
sti
in
imul
(bad)
xchg
xor
xor
xor
rcl
mov
push
in
sub
cmps
sbb
mov
fisttp
mov
(bad)
sbb
(bad)
pop
(bad)
sbb
aaa
mov
into
scas
icebp
add
test
xor
and
retf
cmps
xor
int
(bad)
mov
pop
leave
xchg
mov
mov
pop
sti
jo
fmul
ins
and
shl
lods
xor
sbb
pushf
div
mov
or
mov
sbb
pop
shl
jecxz
sub
mov
mov
mov
int
cld
ret
rcl
(bad)
std
jae
and
and
mov
ins
daa
xor
mov
push
xchg
data16
btr
xor
lahf
shl
or
(bad)
mov
mov
add
pop
cmp
push
add
je
adc
retf
adc
aaa
xchg
sbb
lods
xor
imul
push
xchg
mov
shl
test
push
icebp
std
and
jno
inc
das
dec
add
dec
movs
mov
pusha
cmp
call
pusha
mov
stc
mov
push
stc
push
in
and
shr
lods
push
lds
xchg
xchg
jno
and
(bad)
jg
mov
daa
sahf
test
ins
mov
xchg
xlat
dec
std
es
ret
cmp
daa
jp
out
test
mov
aad
and
fbld
mov
add
les
or
ds
xor
dec
fcmovne
pop
js
fisubr
arpl
sbb
push
pusha
jo
cmps
sub
(bad)
jns
mov
and
sub
or
aaa
addr16
sbb
push
xchg
xchg
mov
jge
xchg
clc
xlat
dec
pop
pusha
and
xor
jmp
and
cmps
xchg
test
dec
sbb
add
in
mov
out
mov
out
rol
pop
mov
cld
inc
mov
sbb
push
cld
call
jmp
rcr
(bad)
xor
fisub
mov
(bad)
cmp
mov
pop
cmp
xchg
mov
mov
ror
mov
pop
push
add
popf
push
jge
push
imul
stos
repnz
adc
or
(bad)
mov
xor
cli
jno
xchg
inc
xlat
std
fld
sub
cmp
fsubr
lds
arpl
repnz
mov
fst
sbb
retf
pop
je
call
sti
mov
or
sbb
mov
fsubr
mov
leave
imul
adc
imul
not
mov
shl
jecxz
lock
(bad)
sbb
mov
cmc
cmps
loope
ds
std
dec
daa
jnp
arpl
or
pop
int3
dec
mov
push
jmp
in
shl
xor
inc
je
add
push
femms
sub
push
xchg
mov
cli
out
sbb
stc
mov
sti
dec
cmc
imul
loop
fs
ds
stos
and
jno
jo
jl
mov
shl
push
and
jmp
cmp
stc
push
pop
lods
jle
push
shl
in
jb
cmp
mov
pop
adc
js
pop
retf
add
outs
js
jns
jmp
sub
pop
into
pop
test
mov
jmp
add
mov
mov
pop
sub
sub
add
jle
xor
ins
aam
mov
lea
cmp
movs
neg
fwait
adc
inc
(bad)
cmc
mov
inc
push
mov
mov
and
int
jbe
sbb
sub
test
sti
xor
fiadd
mov
mov
mov
gs
ret
adc
push
inc
push
imul
xor
es
and
xchg
jns
inc
sbb
cmp
sar
dec
bound
popa
cmp
(bad)
fiadd
out
mov
jge
pop
xor
mov
xor
and
or
mov
xor
mov
icebp
add
inc
and
popa
jp
sti
out
loope
ss
xchg
cdq
xchg
arpl
cmp
push
das
aas
mov
test
sbb
xor
cmp
iret
xor
jmp
ja
or
and
gs
mov
test
and
jae
add
push
inc
mov
fisttp
or
xchg
dec
jmp
or
leave
mov
outs
sub
in
sbb
adc
stc
sub
hlt
mov
outs
mov
push
mov
movs
or
lods
retf
jmp
enterw
addr16
mov
or
mov
fld
sbb
bound
popf
add
or
dec
dec
not
xor
cmps
mov
cli
fistp
adc
pop
aad
popfw
or
jle
fnsave
ret
adc
test
popa
pushf
lods
mov
ror
(bad)
jb
jl
les
and
dec
mov
jbe
push
jmp
push
jns
ins
or
movs
mov
sub
daa
xlat
sub
adc
int3
add
inc
call
dec
std
js
jg
jl
add
ret
repnz
dec
data16
sub
(bad)
call
fdivr
iret
and
mov
and
cld
sbb
sbb
retf
outs
sub
sbb
and
mov
add
sub
fstp
and
push
cmps
and
xchg
push
ja
dec
mov
stos
dec
rol
sub
pusha
mov
jg
fwait
shr
ja
test
xlat
inc
or
imul
stc
repz
call
cld
into
pop
popa
jmp
outs
and
lods
movs
sub
inc
pusha
mov
ret
xchg
cmc
cmp
push
test
into
mov
(bad)
imul
or
adc
mov
jg
mov
jo
add
or
jns
add
in
cmp
aas
cld
jecxz
and
mov
int
pop
retf
jmp
ins
pop
addr16
call
repnz
ins
or
(bad)
pop
push
mov
push
gs
dec
add
jg
push
jmp
add
cmp
xor
rcl
mov
mov
fist
inc
fucomp
lods
in
jmp
lea
stos
jg
xchg
js
pusha
inc
inc
outs
sub
fcomp
or
lods
pop
add
dec
dec
lea
xchg
lds
std
lea
mov
shr
fs
int3
and
pop
sti
mov
sbb
sbb
nop
ret
stos
jb
sub
enter
loope
aam
sub
popa
ror
idiv
popf
mov
mov
pop
pop
and
jle
mov
pop
sbb
mov
or
mov
mov
inc
add
sbb
push
jmp
xchg
jo
or
lea
mov
int3
and
and
add
lods
jne
sti
add
adc
or
dec
or
mov
sub
jg
in
push
arpl
(bad)
and
fist
fidivr
cmp
inc
push
jns
pop
pushf
and
add
imul
dec
addr16
xchg
stos
push
sub
icebp
xchg
mov
lahf
cdq
cmc
call
test
xchg
jmp
mov
jmp
cwde
popa
jae
iret
sub
fnstenv
dec
mov
mov
cmp
mov
outs
pop
out
pop
int
or
push
mov
push
mov
gs
or
clc
push
pop
sbb
clc
lahf
test
cwde
mov
loope
test
xor
fnsave
mov
sub
dec
mov
rol
sub
push
push
test
xor
inc
sub
mov
mov
push
mov
xor
mov
ins
outs
pop
retf
xchg
mov
mov
fwait
nop
stos
test
xchg
rcl
or
pop
jle
jg
call
pop
sbb
mov
add
push
rcl
imul
clc
ror
push
sbb
mov
test
xchg
call
and
iret
shr
mov
imul
shl
pop
retf
xlat
outs
test
xchg
push
add
ins
push
xchg
inc
repnz
jo
jp
xchg
and
push
and
(bad)
stc
icebp
idiv
adc
lds
xor
lods
sub
adc
dec
mov
test
ds
enter
adc
mov
inc
(bad)
jae
pop
dec
lock
mov
call
imul
lods
int
loopne
sti
sahf
mov
and
data16
xor
jmp
ds
das
in
mov
popf
mov
int
inc
iret
mov
lahf
sbb
cmp
sti
arpl
and
lock
xor
test
cmps
xor
mov
jnp
adc
loop
icebp
mov
jg
int3
cvtdq2ps
(bad)
fisub
sub
lahf
mov
push
jbe
fdecstp
mov
addr16
mov
add
mov
dec
inc
clc
inc
jo
out
loope
sbb
cwde
ds
xlat
jbe
ss
out
cmp
pop
jae
adc
js
cdq
out
aad
and
(bad)
jo
cmps
mov
cmps
sub
cs
mov
dec
jge
fadd
pop
push
rcr
pop
jmp
or
fistp
inc
sti
scas
out
push
cmps
(bad)
push
jl
inc
test
popa
hlt
daa
mov
nop
mov
hlt
jnp
mov
sti
fiadd
shl
fwait
inc
push
pop
gs
stc
pop
push
stc
imul
mov
repnz
sahf
mov
iret
lock
mov
add
mov
loopne
xlat
sti
les
add
sbb
push
leave
retf
(bad)
stos
push
xchg
mov
test
and
ret
mov
push
sbb
lods
repnz
inc
dec
sbb
sub
pop
adc
xor
xlat
(bad)
sbb
mov
mov
push
mov
pop
sbb
mov
in
enter
cmp
mov
add
cmovo
and
jno
pop
test
push
adc
inc
sub
push
lea
int
imul
xor
jae
xchg
adc
stos
cmp
ficomp
ss
addr16
cmp
movs
mov
out
and
mov
cs
cmp
and
in
mov
inc
lahf
xor
inc
je
push
pop
test
mov
js
sub
dec
addr16
mul
sbb
mov
in
pusha
addr16
and
cmp
(bad)
bound
or
jmp
cdq
cmp
jb
clc
in
sbb
inc
pop
int
cwde
sub
mov
xchg
sbb
inc
jmp
mov
mov
int3
outs
lds
movs
(bad)
in
fwait
or
fwait
xchg
out
or
xchg
stos
dec
bound
xchg
add
adc
dec
mov
mov
pop
jae
jp
cmc
imul
scas
mov
pop
loop
jg
push
pop
xchg
sbb
jno
push
test
das
jb
enter
ins
pop
pop
scas
(bad)
scas
inc
scas
(bad)
int
stos
ins
test
xchg
inc
xor
and
xor
mov
cdq
dec
sub
aam
cld
xor
inc
inc
(bad)
pop
mov
xchg
add
mov
(bad)
icebp
dec
mov
rcr
lock
popaw
inc
fcmovbe
popa
pop
adc
jp
call
and
inc
add
mov
push
xchg
je
pop
mov
stos
jl
rcl
or
lahf
xor
imul
pop
push
sbb
out
fld
cs
stc
push
fcmovu
jmp
add
daa
popa
and
pop
xor
dec
and
cmp
popa
and
aaa
and
(bad)
fs
dec
inc
sbb
loopne
cmp
cwde
js
aaa
push
cld
sbb
fdivp
dec
fsub
jge
sbb
jbe
or
jmp
jno
scas
sub
xlat
ret
scas
rol
cdq
outs
out
xor
add
int3
hlt
push
xchg
add
dec
or
pusha
inc
xor
inc
sub
sahf
ret
mov
daa
xor
(bad)
into
sub
inc
mov
mov
ret
retf
int
mov
xor
cmp
sbb
in
adc
fsubr
ds
scas
fstp
inc
xor
jg
icebp
std
mov
mov
sbb
mov
shr
xor
movs
push
mov
rcr
sbb
ins
mov
hlt
loop
in
sub
addr16
pop
loop
cld
dec
sbb
out
and
inc
dec
pop
in
out
sub
aad
push
mov
addr16
popf
fs
out
rcl
jg
cmp
ret
add
scas
pop
mov
add
inc
adc
ds
xchg
ja
adc
pop
movs
lahf
xor
cmc
jmp
jg
shl
in
std
mov
cmp
add
dec
and
imul
ror
push
aas
add
jp
add
mov
push
inc
or
ds
sahf
adc
and
add
fild
enter
int
push
lods
inc
and
aam
pop
cld
pop
not
or
int3
mov
(bad)
jbe
loop
adc
and
sbb
outs
inc
jns
ss
xor
fidivr
cdq
push
jmp
mov
into
scas
imul
ins
mov
xchg
(bad)
movntss
push
or
jbe
pushf
popa
jmp
ret
sbb
test
ret
or
push
ins
xor
ret
fmul
cmc
or
sahf
cmps
adc
and
fwait
jb
pop
out
mov
push
lds
and
sub
daa
sub
xchg
retf
mov
repnz
mov
inc
mov
inc
lahf
and
fld
bound
jnp
sub
stos
cmps
in
les
in
daa
test
repnz
dec
sbb
mov
inc
in
dec
pop
retf
in
mov
pushw
fidiv
aaa
push
or
lock
jecxz
pop
popf
fstp
mov
mov
add
nop
imul
mov
ror
(bad)
bound
clc
fsub
jno
mov
pop
push
arpl
aaa
pop
push
arpl
mov
arpl
jmp
xchg
data16
xchg
popf
add
xor
jmp
cwde
inc
sub
jns
mov
mov
mov
or
ins
add
xor
sub
cmp
sub
mov
push
loope
retf
repnz
cmps
jmp
xchg
xlat
jmp
sbb
push
lods
xchg
test
leave
rcl
push
mov
or
cdq
lods
movs
cmps
stos
push
retf
and
sbb
push
fmul
(bad)
(bad)
xchg
push
popa
aaa
or
arpl
mov
jp
ins
lahf
stos
add
mov
add
sti
hlt
ins
pop
pusha
mov
xor
sbb
mov
es
fwait
jecxz
pop
mov
and
lahf
inc
jmp
cld
xor
sub
mov
sbb
inc
dec
ret
outs
outs
sub
xor
gs
jp
or
fs
push
mov
dec
dec
jmp
nop
into
icebp
and
mov
out
mov
loopne
sub
out
mov
and
xchg
retf
push
or
push
popf
pop
xchg
imul
and
shr
inc
jmp
mov
out
pop
jno
(bad)
fwait
retf
and
push
cmp
cdq
or
jae
arpl
sar
mov
sti
leave
rcr
cdq
push
fwait
imul
push
mov
lds
pop
push
iret
pop
and
out
lods
loopne
push
xchg
repnz
mov
mov
outs
sub
and
shl
fld
data16
jae
xchg
push
aad
test
inc
cmp
xor
(bad)
cmp
test
push
test
xchg
stc
bound
inc
test
faddp
test
stc
loop
mov
sti
pop
shl
and
jb
sub
push
pop
push
xchg
inc
sbb
pusha
dec
sub
(bad)
cmc
ins
and
fst
lods
xchg
scas
pop
cmps
sub
jnp
pushf
sub
retf
cmp
test
xor
ficom
inc
loopne
adc
or
ss
pop
outs
jle
jne
repz
push
in
nop
mov
pop
sub
inc
sub
mov
retf
inc
mov
xor
pusha
inc
rol
aad
ds
leave
lea
int
dec
cmps
dec
cmp
ror
xchg
imul
call
jo
inc
inc
xor
ins
movs
shr
aas
lds
fstp
xchg
enter
xor
mov
inc
adc
mov
in
sbb
sub
mov
aas
push
in
mov
pop
pop
or
cmp
xchg
cwde
test
jecxz
fs
neg
jae
and
xor
ins
ret
cmps
outs
jle
retf
add
push
dec
xor
fnstcw
mov
repnz
push
and
jecxz
inc
or
outs
and
or
lea
sbb
nop
popa
lods
retf
pusha
sub
and
or
sbb
mov
(bad)
iret
(bad)
mov
cmps
cmp
dec
fstp
arpl
pop
add
mov
dec
pop
arpl
fist
push
push
in
push
addr16
mov
in
daa
sub
gs
jno
fs
fld
inc
mov
sub
shl
in
xchg
adc
cwd
and
loopne
and
adc
mov
mov
les
and
fist
fsub
cmp
sub
(bad)
aam
cmp
jmp
nop
xchg
sub
dec
sbb
loop
scas
sub
retf
push
in
ins
sahf
and
sti
push
sub
xchg
mov
(bad)
ds
mov
fidivr
js
das
push
jo
popf
out
movs
cli
shr
add
in
imul
adc
push
js
push
hlt
dec
arpl
xor
test
push
dec
mov
sbb
sbb
sub
mov
nop
mov
loope
in
inc
lahf
adc
aad
push
mov
popf
xchg
add
or
xchg
jns
stc
fstp
into
sub
mov
cmps
pusha
scas
cs
push
cli
inc
and
mov
xor
mov
lods
xor
int3
xchg
sub
bound
jge
daa
cli
adc
or
push
fs
rcl
mov
xchg
xchg
mov
xor
push
sbb
sahf
add
mov
xlat
cmp
std
jbe
pop
and
into
sub
inc
fdivr
in
push
(bad)
push
mov
into
sbb
gs
lods
out
cmp
sub
cmp
pop
loope
xlat
mov
loopne
fmul
imul
add
sbb
out
into
lds
cmp
pop
mov
or
ffree
dec
ins
cmp
fisub
test
ret
fwait
push
mov
not
in
push
out
retf
std
or
add
add
adc
aad
cmps
jb
ins
sbb
inc
add
sub
outs
scas
loop
shl
adc
out
outs
jno
pop
enter
push
push
push
fist
faddp
test
fadd
pop
scas
in
mov
cmp
in
xchg
je
cmp
mov
push
xor
test
cmp
stos
and
sbb
mov
call
dec
test
adc
xor
popf
in
dec
cli
in
adc
mov
das
inc
and
push
jmp
xor
hlt
mov
arpl
push
das
nop
pop
retf
lock
push
sub
inc
test
shr
inc
mov
dec
jle
and
sti
dec
and
pop
sti
retf
push
pop
push
(bad)
in
into
jge
jae
push
test
fild
cmp
sbb
enter
pusha
sub
pop
sbb
shl
add
xchg
sbb
aad
and
pop
xlat
mov
sahf
mov
leave
es
cmps
out
hlt
push
movs
in
iret
mov
movs
pop
lods
mov
pop
stos
and
sub
mov
(bad)
mov
int
xchg
mov
mov
scas
ja
inc
test
leave
ja
xchg
outs
mov
daa
inc
cs
jmp
dec
jp
pop
mov
add
jmp
ins
add
xor
add
and
dec
cmp
mov
imul
ret
fwait
jo
das
sbb
movs
or
mov
or
fst
fistp
jns
push
cmp
mov
add
pop
xchg
inc
mov
inc
mov
lds
pop
idiv
nop
popa
test
sub
rol
call
and
pushf
mov
push
iret
cmp
push
fisttp
retf
das
enter
nop
xchg
sbb
test
out
jno
aam
inc
call
es
jbe
rcl
pop
mov
out
jmp
pop
lock
aaa
scas
sti
mov
call
mov
dec
fisubr
lds
jmp
mov
mov
pop
and
lods
add
mov
stos
rol
shl
dec
or
or
sti
mov
es
mov
lods
out
pop
push
out
jbe
or
mov
sbb
not
dec
popf
sbb
arpl
ss
lds
dec
jae
inc
pop
test
cwde
fstp
sub
push
add
(bad)
out
cmp
push
jp
and
sub
test
mov
xor
add
(bad)
xor
daa
inc
(bad)
(bad)
lock
hlt
mov
scas
les
dec
test
push
(bad)
div
pusha
sti
sub
inc
add
or
xchg
cmps
mov
(bad)
inc
dec
adc
ja
mov
(bad)
loopne
into
sub
push
push
in
lock
cmps
xchg
in
cmp
repnz
clc
mov
sub
into
cmc
xchg
into
jp
ret
jge
adc
pushf
add
ficom
ja
hlt
and
pop
xor
imul
pop
int
fidivr
pop
xchg
push
add
ret
or
xchg
adc
xchg
jmp
xchg
pop
sbb
pop
fcmovnbe
mov
and
push
and
and
xor
inc
movs
xchg
cmp
in
xor
jbe
inc
ins
fbld
xchg
aam
(bad)
out
popa
aad
fldln2
stos
cmps
in
inc
push
rcr
(bad)
dec
lock
mov
pop
or
mov
adc
pop
xlat
pop
outs
push
scas
lds
inc
stos
add
sbb
cmp
test
xchg
push
popf
movs
inc
fidiv
pop
addr16
dec
sub
jnp
lds
ins
(bad)
pop
pop
cmp
std
push
(bad)
xor
mov
sub
dec
push
jno
add
and
mov
lock
dec
and
mov
ins
lods
jg
adc
or
test
pop
xlat
jb
push
cs
(bad)
pushf
sub
sub
out
dec
mov
dec
pop
pop
jo
push
and
(bad)
dec
scas
retf
popf
ins
push
cmp
gs
retf
sbb
shl
in
test
retf
mov
cmps
mul
test
or
leave
xor
inc
popa
sub
push
test
pop
pop
jns
inc
repz
mov
and
xchg
xor
cmp
push
scas
xchg
adc
jp
retf
fisttp
dec
ins
cmp
adc
(bad)
fcom
adc
mov
cmp
sbb
inc
jecxz
add
(bad)
(bad)
std
mov
aaa
out
mov
jmp
mov
lods
or
xchg
sbb
mov
loope
and
div
sub
ss
fldenv
iret
pushf
adc
fstp
imul
add
pop
movs
call
lock
loope
bnd
fstp
dec
pop
inc
out
push
call
push
fcmovnu
xchg
call
adc
out
es
xor
in
leave
push
sub
add
bswap
gs
loopne
mov
(bad)
adc
sbb
sahf
and
push
sub
pop
and
pop
scas
and
push
mov
adc
stc
jle
scas
inc
cmp
retf
jne
jge
push
pop
mov
mov
das
cmp
jge
ja
push
dec
les
dec
stos
pop
push
sbb
icebp
mov
cli
retf
sub
xor
jl
inc
add
lods
push
dec
adc
jnp
xor
movs
test
je
bound
nop
sar
jmp
js
mov
sbb
mov
cli
les
mov
push
xchg
jecxz
cmp
(bad)
mov
mov
mov
cmp
loope
push
hlt
and
inc
jg
push
pop
jnp
(bad)
stos
mov
add
retf
sbb
int
(bad)
enter
in
xchg
cmp
xor
push
xchg
fwait
ds
and
shl
lods
rcl
scas
dec
scas
imul
icebp
xchg
ins
ss
inc
stos
mov
jg
cs
ror
and
xchg
pusha
sub
in
lea
maxps
ret
sahf
stos
sub
fistp
leave
cmp
mov
push
xchg
pop
xlat
dec
inc
rcr
dec
(bad)
pop
xchg
es
popf
xor
popf
push
jp
sbb
loop
es
cld
dec
pop
leave
inc
adc
push
out
movs
mov
call
pop
xchg
inc
ret
and
aad
enter
mov
sbb
stc
adc
or
icebp
dec
cmc
movs
dec
popa
mov
es
call
mov
pop
mov
ret
and
out
and
or
mov
retf
push
lods
fcomp
xchg
mov
dec
bnd
mov
xor
xor
cmps
aas
inc
cli
push
(bad)
xchg
jne
test
jl
mov
aad
pop
xchg
call
and
add
fnstenv
in
dec
bound
add
cs
(bad)
xchg
dec
dec
sbb
aaa
mov
or
mov
mov
mov
je
repz
jb
sbb
fbstp
aad
add
and
stc
int
push
xor
scas
ins
cmp
sub
jmp
cmp
push
mov
pop
lods
push
inc
stos
mov
mov
pop
dec
retf
js
pop
cmp
mov
add
pop
in
inc
call
pop
jecxz
adc
mov
xchg
cmp
inc
pop
aad
dec
xor
mov
pusha
das
sub
ror
loope
sbb
fisub
clc
ins
pop
xor
retf
(bad)
cmp
xchg
fbld
add
test
jnp
xor
add
and
pop
stos
fisttp
inc
or
add
pop
out
(bad)
mov
xchg
call
retf
push
cmp
xor
inc
cmp
xchg
ret
mov
dec
test
inc
mov
and
sub
or
test
out
cmp
sbb
cdq
je
out
push
dec
(bad)
sti
sahf
pavgb
data16
and
adc
xor
test
adc
ret
das
leave
jge
xchg
pushf
lds
outs
and
pusha
xor
mov
pop
sub
pop
popf
add
pop
pop
xor
pop
je
cmp
mov
jge
adc
and
cmc
cwde
pop
or
popf
outs
ret
xchg
xchg
cmp
cmp
rcl
inc
mov
push
or
sti
mov
out
mov
jle
fiadd
cdq
and
cmps
mov
lea
cmp
sbb
aam
cmp
iret
sbb
daa
repnz
mov
pusha
jae
xchg
sub
xchg
or
mov
fimul
std
pushf
aas
jg
mov
(bad)
pushf
in
addr16
lods
xchg
cmp
jecxz
inc
xor
xchg
cwde
inc
jmp
sub
sbb
dec
pop
or
mov
sti
push
les
sub
test
bound
mov
out
jmp
push
test
int
mov
pop
imul
mov
arpl
and
in
js
inc
repnz
mov
jle
pmaxsw
out
clc
xor
cmp
call
mov
sti
stos
add
xchg
nop
sub
push
sub
or
sub
leave
and
add
pop
add
cmp
ja
ret
xor
pop
mov
repz
fisttp
pop
test
stc
(bad)
xor
lods
push
shr
jne
mov
cmp
loopne
(bad)
adc
mov
inc
fld
pop
out
mov
mov
popf
push
cdq
mov
add
xor
enter
jne
jmp
cli
bound
mov
test
push
sub
inc
stos
xchg
dec
or
pop
aaa
xchg
inc
mov
je
daa
cmps
clc
pop
or
dec
mov
mov
lods
adc
cmp
repz
xchg
cld
jne
mov
mov
pop
leave
stos
mov
cwde
fld
push
sbb
nop
ins
mov
or
lds
sbb
repnz
mov
push
lods
mov
gs
xchg
pop
outs
pop
mov
inc
xchg
jmp
xor
xchg
dec
fadd
cmc
or
xor
xchg
jmp
test
hlt
ds
xor
dec
shl
adc
es
sbb
and
dec
and
enter
es
xlat
cmp
pop
ds
pop
out
les
ret
shl
dec
or
mov
sahf
setbe
sbb
pop
in
sub
iret
xchg
sbb
inc
push
pusha
outs
call
adc
sbb
dec
xor
cmp
add
(bad)
push
call
imul
jo
mov
xchg
mov
repz
ss
stos
ds
mov
call
cmps
out
xor
repz
mul
clc
clc
or
rol
enter
xchg
mov
icebp
push
adc
(bad)
or
mov
jmp
(bad)
in
and
mov
pop
dec
and
mov
cmp
sbb
(bad)
adc
dec
(bad)
or
push
stc
add
cmc
jmp
cdq
push
(bad)
in
ds
sahf
dec
sub
add
ja
es
mov
sub
xor
push
mov
scas
lods
sbb
and
cmps
inc
pop
mov
fldpi
jb
inc
mov
pop
xor
cmp
cmp
sub
shr
pop
inc
adc
xlat
inc
retf
int
mov
call
pop
adc
mov
imul
or
int
sahf
push
sbb
jmp
sbb
cmps
push
inc
(bad)
dec
xchg
inc
xor
jecxz
ja
jne
jg
es
and
cmp
and
fisubr
sbb
js
lea
(bad)
rol
and
jmp
inc
test
pop
inc
jecxz
int
push
ins
mov
cmp
dec
xchg
test
pop
in
js
loop
rcl
mov
fwait
test
es
inc
ss
add
dec
icebp
or
ins
push
retf
add
retf
add
mov
repz
jnp
push
ins
mov
ret
xchg
pop
xchg
xchg
imul
sti
pushf
addr16
push
xor
jp
rcr
or
mov
ja
leave
call
xor
push
ret
jmp
add
mul
rol
xchg
dec
add
sbb
cmp
sub
mov
cdq
ds
orps
test
xchg
xchg
inc
enter
fidivr
int
pop
xchg
mov
outs
fisttp
loope
mov
fcom
push
fwait
mov
dec
mov
icebp
retf
pop
popa
mov
out
fs
adc
and
jg
adc
pop
push
clc
xor
movs
xchg
shr
add
cmp
dec
push
xor
retf
call
adc
and
rol
mov
sub
cmps
loop
xor
loopne
call
add
pop
jb
mov
or
rcl
add
pushw
lahf
jbe
std
push
vrangesd
jp
jge
jge
cmps
int3
dec
(bad)
sbb
(bad)
int3
ret
(bad)
jmp
test
push
cmp
xlat
pop
bound
mov
push
pop
gs
pop
call
lock
std
jbe
fcom
ja
sbb
lahf
mov
xor
dec
mov
aas
fadd
push
xchg
xchg
mov
je
fisub
mov
inc
push
sbb
movs
or
xchg
movs
adc
add
repz
cli
push
cmp
mov
inc
leave
ja
(bad)
mov
pop
ret
sbb
add
cwde
inc
push
dec
cmp
xor
test
push
mov
stos
cmp
fild
call
xchg
fcmovb
out
pop
out
pushf
dec
sub
cld
sbb
je
popa
or
fnsave
retf
jle
pop
mov
sbb
sbb
add
cmp
das
ds
adc
dec
in
jecxz
dec
lods
mov
fidivr
adc
popf
jmp
inc
cld
jae
mov
add
jb
jg
and
addr16
cmp
and
push
mov
mov
jecxz
xor
out
call
dec
lock
bnd
add
lock
imul
inc
dec
sub
jns
shr
mov
xor
inc
sub
xor
jnp
sub
popf
push
xor
and
mov
sti
call
popf
jg
mov
and
xchg
xor
imul
cmps
in
xor
xor
faddp
jbe
ds
ds
jle
std
popa
aam
push
retf
push
(bad)
sar
sub
cld
sti
repz
xlat
(bad)
fst
mov
and
mov
jecxz
inc
mov
das
ins
movs
loop
add
or
or
call
aaa
sub
psadbw
dec
loopne
mov
mov
add
sbb
not
leave
(bad)
(bad)
or
loop
js
add
push
leave
je
shr
push
xchg
out
cmps
(bad)
ds
out
mov
jbe
sbb
xchg
out
retf
adc
leave
popf
call
js
jae
and
xchg
adc
jbe
retf
imul
out
xchg
push
inc
(bad)
imul
hlt
(bad)
ror
jae
(bad)
cmp
or
not
scas
inc
mov
arpl
lds
mov
leave
ds
je
lahf
adc
dec
repnz
arpl
ror
cmps
jge
jmp
in
int3
and
stc
out
mov
push
call
xor
mov
jge
push
jge
(bad)
ror
ror
loope
push
shl
out
inc
mov
mov
xor
pop
in
push
or
cmps
mov
or
or
sbb
icebp
jno
push
sub
iret
push
out
aam
mov
pop
push
push
pop
ret
call
iret
out
adc
push
jg
(bad)
fsub
imul
scas
and
add
jmp
mov
out
rcr
movs
(bad)
cmps
adc
bound
or
mov
adc
add
repz
and
dec
add
sub
add
fisubr
cwde
cmc
jbe
sub
inc
clc
test
fs
gs
mov
dec
icebp
mov
dec
adc
cdq
daa
jecxz
adc
cmc
stc
xchg
fwait
and
push
and
add
mov
gs
daa
or
jl
outs
in
inc
sbb
daa
mov
fwait
cmp
sub
(bad)
push
lea
adc
inc
pushw
pop
in
fnstenv
adc
add
lock
push
stos
out
test
push
ins
stc
ins
neg
push
lgs
sbb
mov
mov
mov
jno
mov
pop
mov
in
cmp
xchg
pop
xchg
fmul
aad
retf
mov
sub
cli
aam
ss
xor
jmp
aam
mov
iret
test
jb
loope
adc
and
repnz
add
sahf
fild
repnz
jg
inc
xor
add
jmp
in
jb
(bad)
(bad)
fisubr
pop
repz
inc
push
xchg
jnp
push
test
daa
and
add
push
out
lock
mov
sbb
outs
cmp
push
in
pop
mov
adc
sbb
cmp
inc
or
fadd
push
mov
cmps
xchg
sti
push
jb
xor
gs
rcr
call
jmp
pop
sbb
add
pop
shl
mov
ret
mov
rol
iret
fisubr
add
in
add
pcmpgtw
arpl
mov
cmp
lods
jle
inc
sbb
pop
lods
xor
loope
or
popa
pop
icebp
cmp
cwde
sub
gs
stos
imul
and
inc
and
int
repz
in
es
push
sub
retf
div
sbb
addr16
jecxz
addr16
int3
push
imul
sti
inc
mov
or
jae
pop
dec
cmp
jb
dec
outs
test
into
mov
xchg
cmps
ficom
jg
xchg
or
cmp
gs
cmp
std
cmc
jl
lea
pop
in
add
jne
call
lea
adc
rcr
add
stos
popf
pop
pop
mov
jnp
dec
pop
js
xchg
mov
push
scas
inc
jecxz
in
pusha
adc
sbb
or
cmc
in
dec
or
ficomp
jb
pop
test
pshufw
xor
xchg
clc
jmp
jmp
mov
movs
sbb
clc
adc
and
push
stos
inc
cmp
aas
sub
mov
dec
je
aas
mov
ins
data16
fst
inc
sub
fs
into
xor
jmp
shl
inc
repz
pop
push
(bad)
mov
adc
push
xchg
test
mov
in
sbb
adc
sub
jge
shr
mov
cmp
rol
dec
jle
pop
dec
mov
out
mov
pusha
and
outs
daa
ss
mov
adc
pop
addr16
dec
pop
mov
push
neg
jno
sbb
inc
sub
pop
fistp
cmc
inc
retf
jne
jl
dec
dec
push
push
add
repnz
and
or
add
jnp
arpl
jge
mov
jmp
popa
jno
ror
(bad)
dec
lock
shr
cmp
push
push
and
mov
jge
fisubr
mov
jno
cmp
mov
int3
jb
in
retf
push
mov
mov
push
mov
push
sub
inc
out
mov
bound
sub
mov
gs
cmp
push
cs
adc
jmp
loopne
out
xor
inc
dec
add
jb
adc
cmp
mov
iret
jns
imul
xor
mov
xchg
jno
retf
sbb
add
outs
push
inc
mov
fnsave
mov
into
jmp
mov
imul
(bad)
push
xor
push
inc
lahf
das
frstor
inc
jl
lds
clc
imul
scas
sbb
fdivr
into
out
(bad)
fs
xor
scas
xchg
sbb
cmp
fldcw
xor
dec
fnstenv
mov
xor
outs
sti
into
cmp
adc
jo
repz
push
or
mov
add
sub
bnd
fs
xor
jnp
push
jo
call
cmp
cwde
int
clc
aam
sub
clc
std
xor
xor
stos
lds
mov
dec
sub
fnstenv
test
add
fisubr
cmp
gs
lahf
out
add
pop
mov
or
inc
and
mov
xchg
dec
push
ins
push
fs
das
push
sbb
sbb
xor
inc
jne
mov
aas
cmp
ds
mov
in
lea
inc
sbb
shr
rol
frstor
fcmovb
sbb
pop
das
or
pop
dec
mov
mov
es
out
es
movs
mov
mov
ret
mov
cwde
nop
add
mov
ss
call
out
stc
icebp
stos
inc
fwait
mov
mov
sub
in
aad
call
(bad)
pop
adc
mov
lock
or
mov
neg
lahf
dec
push
addr16
loop
nop
(bad)
(bad)
aam
pop
aaa
add
adc
fcmovb
imul
lods
in
idiv
out
jge
ret
cmp
jle
repnz
jo
mov
call
out
mov
or
push
iret
lahf
stos
stos
sub
pop
mov
mov
or
mov
mov
dec
xor
adc
pop
mov
mov
(bad)
mov
shr
fild
and
or
outs
retf
ins
adc
mov
(bad)
cmp
xchg
adc
pop
sbb
mov
loope
out
call
mov
sub
sbb
and
pop
sbb
mov
fld
cld
out
ins
mov
mov
pop
movs
inc
ficomp
shr
in
loopne
mov
adc
and
loopne
aad
cmp
outs
adc
mov
cmp
mov
xor
imul
out
aas
adc
nop
sahf
pop
xchg
sub
or
and
pop
movs
mov
mov
fstp
mov
inc
mov
jl
sar
gs
clc
fst
xor
cmps
shl
mov
scas
in
pop
jb
and
and
add
cmp
dec
cdq
push
(bad)
std
cwde
add
aaa
bound
(bad)
jmp
or
les
jbe
add
leave
loop
add
adc
add
xlat
dec
outs
dec
fdivr
popf
and
and
xchg
or
mov
mov
in
inc
mov
xlat
outs
loope
and
jge
or
adc
jmp
repz
in
cmps
stos
and
mov
mov
adc
cmp
daa
and
fld
pop
rcr
mov
ret
gs
mov
xlat
stos
outs
les
lock
div
mov
dec
mov
sub
ins
cmp
retf
call
adc
lds
and
aas
dec
push
inc
fsub
mov
shl
cli
jns
adc
fs
xchg
adc
bound
lods
jo
mov
jle
or
inc
inc
pop
lock
ins
inc
adc
or
dec
push
mov
vmovdqa
adc
sub
pop
xlat
int3
xchg
mov
in
fimul
imul
jnp
iret
fwait
aam
adc
lds
out
and
(bad)
sbb
pushf
dec
add
add
hlt
sar
push
mov
in
adc
aaa
fisub
hlt
js
lods
xchg
jnp
out
int
add
add
adc
rcl
fwait
rcl
cmps
adc
aaa
cld
fdiv
pop
xor
sti
jmp
jle
push
xor
std
cmps
sbb
xchg
and
xchg
xchg
bound
cmp
and
adc
into
push
cmc
in
jno
test
mov
sbb
stos
imul
xchg
shr
out
push
mov
push
inc
or
xchg
push
(bad)
mov
nop
scas
inc
mov
mov
out
mov
xor
pusha
sti
pop
xchg
sbb
cmc
adc
jno
inc
dec
and
(bad)
out
mov
push
mov
and
fsubr
aam
clc
xchg
call
or
out
cmc
inc
xchg
mov
lds
sahf
and
jecxz
push
popa
les
ret
loope
xchg
adc
shr
pop
js
sub
dec
ja
add
pop
adc
mov
push
fs
mov
mov
(bad)
(bad)
in
(bad)
pusha
clc
repz
mov
dec
xlat
add
arpl
daa
shl
push
sub
dec
pop
mov
(bad)
dec
push
inc
mov
aam
inc
nop
dec
enter
push
sub
push
inc
sub
stc
add
inc
mov
data16
pop
pop
mov
out
in
mov
sbb
leave
fisubr
call
scas
loopne
pop
xchg
push
aam
je
addr16
(bad)
jp
cld
inc
imul
and
in
pop
push
imul
scas
out
mov
repz
pop
scas
xor
addr16
loopne
pop
ret
or
mul
or
xchg
outs
xchg
mov
jle
sbb
jb
les
and
icebp
xchg
test
lock
test
push
push
movs
fs
cmps
in
cmps
jae
inc
jbe
pop
pop
mov
(bad)
fidivr
mov
push
cmp
xchg
outs
loopne
push
xor
or
dec
cld
push
sbb
inc
mul
addr16
push
stos
(bad)
movhlps
repz
retf
and
shr
push
or
pop
aam
in
xchg
jbe
dec
mov
mov
jne
ret
pop
dec
xchg
and
ja
xor
sub
mov
push
test
in
das
call
imul
(bad)
dec
or
out
imul
cwde
loop
cmp
(bad)
call
nop
mov
(bad)
ins
pop
outs
jns
jo
mov
outs
adc
mov
inc
sub
test
gs
push
test
shr
dec
daa
test
ret
pop
rol
inc
fstp
or
cmp
mov
add
in
cmp
jbe
lea
mov
jmp
cdq
popa
pop
daa
push
xchg
aas
sbb
imul
mov
mov
pushf
fst
ins
das
ins
mov
jle
jnp
jge
push
fs
sbb
dec
aam
mov
sbb
cmp
xor
add
inc
nop
mov
inc
jp
push
inc
in
ins
pop
xchg
adc
sub
aas
test
ror
cdq
sbb
dec
imul
sti
aas
jmp
es
push
push
sar
mov
loop
dec
mov
gs
jg
shl
push
pop
xchg
lock
(bad)
sub
mov
sbb
ins
lahf
sbb
xchg
(bad)
push
xor
dec
gs
stc
pop
(bad)
jmp
mov
(bad)
imul
inc
lea
retf
push
sbb
(bad)
jb
enter
mov
ret
push
fbld
mov
in
mov
ss
sub
(bad)
xchg
fs
dec
inc
in
in
daa
xchg
in
add
lahf
cmp
xchg
fs
mov
add
adc
jmp
stos
inc
leave
out
pop
pop
stos
fdiv
cdq
aaa
pop
xor
pop
xchg
les
loopne
lods
xor
dec
or
popa
and
mov
or
adc
iret
xor
loopne
and
aaa
or
call
sub
mov
sub
add
cmp
scas
enter
cmp
popa
cmp
mov
cmp
mov
into
xlat
dec
(bad)
rcr
jb
aaa
inc
arpl
jno
daa
outs
fwait
popa
cli
iret
or
iret
mov
adc
and
inc
shl
sbb
push
dec
sbb
xchg
push
inc
or
or
out
sbb
push
cmp
push
ret
xor
mov
cmpps
jg
ss
xchg
inc
pop
(bad)
mov
pop
dec
pusha
stc
sbb
cmps
jg
push
dec
and
adc
cli
movs
pop
gs
mov
mov
fistp
inc
not
imul
adc
mov
adc
loop
mov
xchg
jmp
push
xor
dec
aas
ret
repz
shl
scas
inc
xor
cs
test
xchg
arpl
add
clc
out
xlat
cmc
sar
and
inc
xor
xchg
scas
xchg
test
sub
xlat
dec
mov
mov
adc
jo
mov
pop
and
cmp
out
jno
jbe
dec
mov
div
rol
and
dec
fstp
scas
sbb
push
pop
sub
iret
int3
and
sub
push
mov
add
inc
out
add
mov
inc
pop
(bad)
fisub
shl
cmp
stos
adc
(bad)
out
hlt
into
fist
lods
push
aas
xor
sti
iret
and
jg
or
outs
retf
movs
rcr
jecxz
sbb
jecxz
jecxz
xor
ins
push
movs
fild
pop
dec
sbb
test
mov
in
int
das
in
jnp
xor
sub
lds
mov
(bad)
mov
mov
jns
stos
(bad)
jnp
popf
xchg
dec
sbb
scas
xchg
push
cmc
mov
push
mov
mov
pop
push
dec
push
scas
and
add
lods
sub
cmc
(bad)
push
jge
jb
xchg
movs
(bad)
cli
or
ins
jb
mov
pop
sbb
jmp
jb
cmp
ss
lods
mov
pusha
mov
pusha
jmp
sbb
or
ret
popa
or
mov
loop
jcxz
retf
aam
nop
or
and
cwde
iret
jo
jb
xchg
(bad)
fadd
lods
sbb
iret
out
inc
outs
mov
popaw
leave
rol
test
xchg
mov
das
sub
cld
ffreep
aaa
sub
cli
xchg
cmp
cmp
rcr
into
inc
shl
mov
lods
fdiv
cmps
popf
cmc
inc
jg
cli
daa
dec
mov
test
lahf
(bad)
lock
movs
scas
ret
pop
inc
cmp
cmp
adc
push
mov
in
ds
ins
push
adc
test
mov
or
in
rcl
xor
call
push
hlt
xchg
cmp
xchg
add
repz
ror
add
jns
lods
cwde
push
test
xchg
cld
dec
retf
mov
mov
or
inc
movs
add
mov
mov
sbb
mov
push
mov
out
xchg
rcl
shl
mov
jle
stos
in
into
mov
outs
pop
xor
xchg
and
iret
sbb
mov
jmp
in
jl
and
dec
push
cmp
dec
sahf
mov
jb
mov
test
jmp
in
stc
ja
lds
popaw
cmps
push
popf
or
test
fdiv
mov
cmc
jmp
sub
mov
dec
cmps
clc
mul
cld
adc
ins
jge
out
rcr
sysenter
pop
add
dec
jo
(bad)
mov
cld
mov
(bad)
xor
mov
cmc
mov
lods
cli
into
pushf
push
adc
mov
cmp
aas
mov
movs
test
leave
aam
repz
es
movs
push
movs
shr
sbb
call
cs
popf
mov
jns
pop
pusha
daa
mov
pop
sub
pop
cmp
int3
jb
enter
add
lahf
or
or
stos
mov
cmp
push
jmp
add
dec
les
ss
cwde
add
pusha
leave
or
or
push
mov
popf
test
fwait
sub
pushf
dec
mov
retf
leave
cmp
or
inc
sbb
sbb
dec
dec
mov
dec
rol
or
and
int3
pop
imul
pusha
lods
xchg
or
push
mov
xchg
pop
ss
xor
(bad)
jmp
bound
mov
sub
xor
out
jne
or
jns
xchg
fsubr
lds
stc
xchg
xor
and
ror
jb
push
mov
pop
fs
cdq
out
xor
mov
push
push
or
jae
call
setns
add
jle
inc
or
sar
mov
adc
into
xchg
pop
and
xlat
sub
jmp
(bad)
in
xor
cmp
xor
in
sbb
sbb
sub
mov
mov
xchg
daa
push
mov
test
or
push
imul
add
dec
adc
pop
int
addr16
mov
gs
push
push
mov
ror
or
jmp
bnd
test
enter
xchg
pop
mov
jae
repnz
xchg
push
js
push
das
push
gs
jo
fwait
cli
out
int3
xchg
cdq
mov
out
mov
xor
dec
cmp
lock
fdecstp
test
xchg
jns
jae
in
loopne
aas
(bad)
into
mul
imul
ja
das
push
jecxz
cmp
cmps
xor
adc
sbb
pusha
cmp
imul
jnp
cmp
fnstcw
nop
js
(bad)
int
das
lods
hlt
xor
xchg
mov
(bad)
int
imul
mov
dec
adc
test
mov
(bad)
in
aam
movs
es
push
loopne
mov
xchg
scas
dec
xlat
xor
or
ret
xchg
push
jge
les
mov
push
push
add
mov
pop
dec
or
and
ins
jnp
sbb
jle
dec
push
ds
inc
enter
cmp
ja
cmps
or
pusha
push
mov
mov
jmp
retf
pop
jecxz
loopne
cwde
and
mov
data16
aaa
inc
ror
xor
dec
js
rol
cmp
mov
sbb
leave
lea
mul
jns
neg
sti
xabort
push
push
stos
lods
cld
xchg
add
call
add
push
in
mov
dec
out
adc
mov
xor
push
add
jns
test
push
mov
xchg
dec
pop
test
inc
outs
imul
sti
mov
popf
adc
push
mov
pop
ror
adc
sar
pop
cmc
(bad)
lock
or
dec
mov
iret
call
sbb
add
adc
jbe
dec
(bad)
(bad)
inc
lods
lock
dec
dec
(bad)
leave
cmp
sbb
(bad)
sbb
push
int
jo
xchg
mov
cld
and
imul
mov
or
sub
xchg
pop
outs
pop
sbb
pop
in
lods
cmp
lods
out
push
xchg
outs
ror
adc
(bad)
daa
fld
xchg
or
mov
mov
adc
hlt
ja
pop
adc
scas
test
push
sub
jl
enter
dec
inc
lds
stos
mov
mov
mov
rol
(bad)
lock
clc
add
sub
add
shl
cs
add
sbb
je
xlat
and
rol
cld
mov
ds
adc
sti
sub
adc
es
add
mov
adc
loop
mov
jmp
dec
dec
mov
stos
mov
shl
test
jg
loopne
jecxz
int3
ins
in
clc
xor
jmp
lods
jge
adc
mov
in
push
push
jae
ins
pop
mov
hlt
outs
pop
leave
jbe
xor
or
icebp
sti
cwde
call
mov
jmp
mov
xor
xor
jg
push
pop
xlat
jbe
test
call
xchg
out
jne
iret
sub
into
lahf
adc
fimul
mov
fstp
cmp
ror
stc
ror
push
mov
les
xchg
jmp
or
imul
xchg
popa
outs
adc
shl
aas
and
js
ins
ja
(bad)
mov
xor
fcom
xchg
push
scas
cmp
and
ja
xchg
pop
call
repz
addr16
xchg
inc
int
add
(bad)
ins
js
and
xor
cmps
sub
loope
ins
inc
push
test
and
cmp
inc
imul
inc
sbb
mov
daa
cmp
das
pop
mov
in
dec
aad
xchg
push
clc
xor
xchg
dec
dec
adc
cmps
imul
mov
enter
lahf
ins
out
mov
mov
data16
cld
and
dec
sbb
(bad)
mov
mov
fwait
sbb
add
mov
or
icebp
movs
xchg
add
scas
(bad)
aad
push
and
jae
xchg
lods
data16
mov
xor
pop
xor
test
sar
cmps
sbb
mov
sub
xor
mov
iret
sbb
xchg
jne
aad
imul
fwait
pop
fs
and
mov
ficom
sbb
fwait
sti
push
dec
inc
clc
jp
loop
and
push
rcl
pop
inc
lods
into
inc
or
into
test
push
lods
pop
push
push
push
mov
addr16
ficomp
push
xchg
stos
ss
pop
jns
push
fisttp
and
sub
xor
jns
jmp
scas
fmul
mov
aad
sbb
xchg
dec
push
push
inc
fsubr
sahf
or
stos
(bad)
inc
call
js
hlt
test
push
xchg
sub
pop
jl
mov
int
sbb
sbb
pop
adc
jbe
sbb
inc
mov
jge
cmp
nop
push
xor
fcomi
mov
mov
pop
or
jle
jle
cmp
jnp
push
jno
and
icebp
lahf
bound
and
mov
inc
adc
movs
pop
fs
jecxz
retf
or
or
iret
pop
div
loopne
jecxz
xor
cmp
push
enter
test
xor
jl
sub
jo
(bad)
test
test
sbb
fisub
sub
ss
adc
inc
nop
lahf
cli
xchg
into
in
mov
mov
sub
xor
xchg
cmp
or
cmp
daa
in
retf
push
movs
and
int
mov
adc
push
jmp
inc
js
dec
sub
push
ficom
cwde
jl
mov
and
sbb
div
sbb
popa
lds
mov
retf
or
(bad)
enter
fcomp
lahf
retf
rol
jge
int
jl
or
mov
(bad)
mov
enter
(bad)
outs
pop
push
dec
int
outs
cmps
mov
aad
ror
add
or
gs
and
adc
push
scas
jae
mov
lods
ins
sub
call
lock
push
pop
or
sub
leave
ds
mov
mov
dec
cmp
in
cli
inc
xchg
lods
dec
adc
add
mov
dec
popf
icebp
pop
cmp
push
stos
jge
nop
xchg
mov
xchg
mov
out
cs
sub
xchg
(bad)
pusha
xchg
mov
inc
jnp
cmp
pop
add
outs
mov
retf
test
popa
sub
dec
fsubp
test
xchg
push
sub
stc
test
aas
in
sbb
in
mov
adc
xchg
sbb
cmp
or
sbb
xchg
mov
xor
xor
push
jns
inc
into
out
retf
clc
(bad)
cli
loopne
scas
dec
push
int
sbb
push
rol
test
jl
aaa
pop
aaa
jae
jno
inc
push
rol
cmp
stc
iret
jns
inc
fincstp
push
xor
adc
pop
cmp
loope
test
movs
mov
out
icebp
addr16
clc
or
xchg
mov
pusha
rcl
scas
pop
retf
cmc
gs
inc
push
inc
sbb
sbb
(bad)
mov
dec
loopne
dec
cmps
xchg
xor
repnz
jmp
or
and
cmps
retf
outs
call
and
ret
(bad)
pop
dec
xacquire
xchg
ja
push
mov
fidiv
ja
psrld
js
mov
div
pushf
cs
add
cmp
mov
sbb
cwde
out
sbb
jo
fs
jge
arpl
sti
cmp
jo
shr
jmp
pop
inc
data16
xchg
mov
lods
cmp
fsubr
cli
retf
add
jl
sub
xor
cmp
fs
stc
cld
adc
int
mov
retf
jnp
sar
mov
add
cld
ror
je
jmp
push
xor
adc
aas
cmp
push
sbb
jl
jnp
in
bound
addr16
clc
add
mov
xchg
add
and
cmp
fs
in
lds
inc
ins
pop
add
cmc
mov
cli
lahf
dec
(bad)
ret
mov
push
shl
push
mov
(bad)
jae
int
xor
loop
js
outs
jmp
test
or
mov
inc
fsub
and
xchg
cmp
fsub
ja
mov
sar
clc
jb
out
je
jl
sahf
xchg
jbe
cmp
pop
aad
xchg
pusha
mov
sbb
lods
(bad)
rcl
cmp
retf
xor
addr16
ror
test
mov
pushf
jbe
in
in
xor
cld
stos
push
xor
rol
ret
pop
xchg
js
mov
add
in
adc
or
cmps
ds
mov
cli
push
test
push
cmp
sbb
test
mov
ds
xchg
jmp
inc
(bad)
clc
sar
cdq
movs
aad
in
cmp
loop
aad
xor
or
js
mov
jl
xchg
mov
adc
push
idiv
fild
neg
inc
nop
fcmovb
mov
shr
stos
push
(bad)
dec
test
push
js
pop
sbb
sub
and
mov
aaa
pop
stos
out
pushf
in
adc
jecxz
nop
mov
add
or
inc
dec
lahf
xchg
aaa
dec
test
mov
jno
jb
cdq
xor
inc
outs
fcomp
xor
xchg
cs
fcom
jnp
cld
mov
ja
jg
sub
hlt
sbb
fld
mov
inc
mov
outs
shl
xor
in
jns
ret
cmp
lock
fs
call
xchg
xlat
sub
out
sti
sbb
sar
iret
sub
fild
sbb
mov
dec
ja
fxch
and
retf
test
ss
dec
dec
test
cli
ret
add
pop
call
es
mov
(bad)
mov
push
aam
xchg
nop
mov
jns
cmps
bound
es
int3
adc
mov
cs
inc
les
ret
xor
out
xchg
sbb
jle
pop
lods
pop
and
mov
cld
cmp
jo
jbe
loope
jns
rcr
adc
sbb
add
push
lds
pop
lock
inc
hlt
inc
push
xor
add
sar
mov
dec
pop
jp
js
or
lds
adc
repz
mov
jmp
cmps
sahf
push
jns
and
test
loop
imul
cmp
(bad)
das
xor
pop
movs
inc
push
adc
ret
cld
pop
mov
dec
fst
aad
pop
les
adc
enter
imul
cmps
mov
or
pop
in
push
rcr
in
paddusw
push
dec
fbld
and
js
mov
mov
pusha
jae
pop
pop
fimul
in
push
(bad)
jne
aas
arpl
dec
dec
out
jmp
cdq
pop
retf
mov
add
xor
mov
lods
inc
jle
mov
imul
xchg
cmps
cli
cld
and
mov
dec
mov
retf
imul
mov
pop
and
push
pop
scas
fdiv
mov
cwde
push
and
out
xchg
aad
dec
mov
sub
test
daa
fnstcw
adc
dec
aam
sub
push
and
loopne
test
inc
(bad)
jl
test
xor
xlat
or
(bad)
pushf
pop
arpl
mov
jp
(bad)
les
iret
sti
and
sbb
sti
fs
sbb
jl
sub
dec
inc
nop
mov
pop
out
add
pop
int3
push
cmps
das
in
inc
popa
(bad)
xchg
retf
jmp
ins
sbb
add
jno
(bad)
mov
push
sub
cmps
mov
test
inc
mov
xor
pop
loop
rcl
and
or
call
and
ror
push
sbb
out
sub
sub
mov
call
fldcw
es
mov
pushf
sbb
fnstcw
fwait
mov
es
mov
xchg
rcl
inc
outs
ja
xor
inc
bnd
pop
push
std
es
jno
sub
fiadd
mov
rol
rol
mov
dec
mov
enter
clc
(bad)
call
sar
mov
adc
je
fs
popa
aad
xchg
and
xor
xchg
outs
in
in
test
(bad)
cmp
mul
ret
bound
imul
mov
cmp
out
dec
inc
jns
in
push
add
aad
xchg
adc
cdq
adc
push
(bad)
int
sbb
dec
lea
jmp
xchg
push
xor
xor
jg
js
add
sub
ret
mov
movs
(bad)
cs
adc
pop
mov
jl
mov
pop
mov
sti
scas
push
push
mov
mov
mov
push
into
or
add
mov
xor
pop
mov
mov
out
popa
push
or
cdq
cmp
sbb
sbb
cmps
mov
pop
mov
add
pop
dec
in
das
xchg
lock
adc
xor
pop
jp
mov
ja
mov
mov
(bad)
sbb
inc
inc
cmp
xor
jg
jns
mov
jmp
jmp
fmul
mov
xor
xchg
into
lahf
adc
add
ret
mov
hlt
lock
or
stos
int3
jns
out
repnz
pop
dec
sub
loopne
add
outs
leave
cmc
jbe
icebp
(bad)
fsubrp
adc
aaa
cmp
sbb
pop
js
inc
xchg
sbb
ror
fcomp
std
bound
fnstcw
mov
cmp
adc
out
push
dec
ret
jnp
repnz
jmp
sbb
(bad)
jns
or
add
xchg
shl
call
mov
out
cwde
out
daa
cmp
jecxz
fnstsw
jmp
push
xchg
jno
jns
fnstsw
out
pop
adc
or
bound
pop
mov
pop
dec
mov
fstp
pop
cmp
ds
(bad)
pusha
inc
loope
mov
pop
dec
scas
or
stos
test
dec
imul
push
adc
mov
clc
mov
fcom
fisubr
push
sub
jae
mov
xor
sbb
inc
cmps
repz
movs
fld
pop
outs
cmp
cmps
stc
ins
fs
call
mov
push
pop
leave
call
inc
cmp
pop
aaa
mov
pop
or
pushf
jle
rcr
sub
sbb
xlat
cld
xor
iret
xor
inc
js
(bad)
dec
mov
mov
jbe
jg
jp
fwait
out
adc
shl
ins
loopne
out
adc
mov
cwde
pop
icebp
xchg
jle
xchg
dec
fsub
std
sbb
xchg
jg
je
test
dec
pop
test
adc
or
sub
test
outs
les
mov
sbb
lea
adc
xor
les
nop
loopne
sub
fmul
mov
mov
in
and
popa
sbb
jns
pushf
clc
pop
sub
repz
push
test
inc
and
cdq
adc
lds
mov
jnp
xlat
in
outs
lods
pusha
cmp
xor
or
outs
pop
pop
ds
sub
push
mov
sub
fild
stos
arpl
pop
outs
ret
push
mov
loopne
in
shl
imul
push
inc
and
pop
pushf
mov
mov
test
and
mov
jg
out
xchg
call
pushf
cmp
dec
mov
mov
and
pop
mov
mov
daa
cmp
xchg
mov
aad
dec
test
(bad)
mov
mov
pusha
ret
prefetcht2
popfw
mov
cmps
mov
cli
icebp
mov
in
shl
lock
adc
mov
sbb
mov
aam
jbe
xchg
adc
xchg
push
int3
add
sbb
push
rol
ds
cmp
icebp
adc
ds
ficom
and
rol
and
repz
jge
mov
jno
(bad)
out
aas
adc
mov
test
push
sub
jnp
cmps
aaa
mov
jmp
xor
lahf
xchg
ret
dec
test
or
aaa
and
fld
xchg
rol
pushf
jmp
pop
and
popa
mov
ins
loope
mov
and
xchg
dec
cmp
ins
push
retf
add
pop
inc
loop
int3
and
sbb
sbb
(bad)
jae
mov
xchg
push
mov
test
ror
jmp
jecxz
xchg
movs
lods
xor
aam
loopne
popf
jle
xchg
push
retf
jnp
inc
jb
(bad)
and
cwde
xchg
and
scas
into
inc
in
sbb
add
adc
inc
pop
or
pop
pop
sbb
push
and
call
(bad)
pop
ret
dec
and
out
fmul
fiadd
(bad)
popf
xlat
cmps
mov
adc
dec
out
push
inc
into
add
fbld
mov
cmp
xor
dec
dec
push
xchg
test
(bad)
hlt
jo
xor
xlat
push
sbb
mov
mov
inc
pop
addr16
pop
sub
sbb
icebp
pop
in
mov
pop
mov
sbb
inc
sahf
pop
pop
mov
inc
enter
mov
outs
out
cmp
pop
or
jecxz
mov
sbb
aad
call
aam
loopne
jg
test
sub
push
pop
aad
dec
inc
add
inc
push
outs
xor
fild
ja
add
vrsqrtps
retf
push
outs
add
test
cli
mov
stos
(bad)
cli
in
push
or
ins
and
jge
lods
add
jl
test
mov
sbb
lods
(bad)
cmc
ins
scas
mov
push
xchg
das
inc
test
mov
aaa
pop
lods
rcl
ret
sub
cs
loop
iret
inc
sbb
mov
sub
out
rcl
call
jbe
(bad)
xor
stos
mov
adc
jge
add
lds
lahf
pop
call
bound
imul
ja
push
scas
push
jmp
jb
adc
xor
inc
sbb
mov
adc
or
cmps
scas
cs
cwde
fistp
add
pop
inc
dec
cwde
es
push
pop
cmp
mov
(bad)
cld
lods
and
sar
test
mov
push
int3
inc
and
clc
fdiv
lahf
jno
pop
cwde
repz
test
jle
shl
mov
add
adc
outs
sar
(bad)
cld
inc
sub
fs
jp
lods
sbb
sub
outs
stc
add
inc
ficomp
int
mov
pop
and
push
mov
int3
addr16
cmp
(bad)
fisubr
imul
xchg
nop
cld
je
inc
add
jae
in
cmp
loopne
jae
pop
lock
movs
inc
popa
fwait
cdq
sahf
hlt
push
pop
outs
call
fiadd
xor
mov
cmps
xchg
leave
or
pop
jg
mov
ss
and
xchg
mov
jnp
(bad)
jmp
inc
movs
mov
(bad)
adc
aas
test
mov
pop
sbb
push
push
push
jle
mov
push
(bad)
loopne
or
sub
test
lock
and
ja
pop
inc
jae
pop
in
jmp
cmp
jle
ret
mov
or
loopne
mov
lock
mov
xor
ficom
pop
dec
out
lea
pop
ins
cmps
jmp
imul
leave
add
test
sbb
mov
in
retf
xchg
and
sub
outs
dec
inc
inc
xor
mov
jmp
adc
(bad)
rcl
or
adc
or
add
push
pop
mov
mov
sub
push
push
mov
push
jge
pop
arpl
mov
or
mov
(bad)
jb
xor
fcmovb
add
mov
les
mov
mov
jo
and
fwait
dec
scas
adc
outs
fadd
ins
lea
sti
dec
sbb
inc
rcr
cdq
jnp
mov
rcr
sub
add
dec
ficom
dec
cmp
pop
sbb
dec
mov
pop
test
sub
popf
fnsave
pop
add
jl
pushf
cwde
sahf
adc
sub
test
(bad)
icebp
xor
lea
xchg
jecxz
mov
adc
or
mov
xchg
inc
popa
push
mov
cmp
inc
mov
cmp
in
out
aas
inc
cwde
pop
pop
cld
push
and
mov
data16
jmp
ins
lock
sub
cmps
xchg
fucom
fidivr
popf
je
mov
repz
xor
aaa
push
shr
sbb
cmp
test
call
mov
push
pop
xor
hlt
adc
pop
jge
(bad)
out
in
mov
pop
cmp
xor
cmps
gs
cmps
and
and
xchg
cmp
add
pop
loopne
pop
sbb
test
mov
mov
pop
xor
shl
xor
adc
push
cmc
push
fdivr
cmp
test
in
cmp
bnd
sbb
cmps
out
(bad)
lock
add
ja
loop
mov
sbb
repz
lods
xchg
cmp
sub
mov
cmc
mov
cmp
leave
dec
out
clc
sar
inc
push
or
out
push
int
push
call
ss
fcomp
std
scas
mov
mov
test
mov
(bad)
stos
or
ss
cmp
add
ins
mov
fdivr
retf
mov
fisubr
jmp
cmp
(bad)
pop
cdq
lods
into
cmc
xor
arpl
mov
aad
hlt
xchg
mov
xor
jmp
mov
js
jns
test
inc
xchg
fsub
or
pslld
jo
retf
xlat
push
loop
sbb
jnp
add
call
mov
inc
bound
hlt
pop
push
push
stc
xchg
cdq
pop
shr
or
pop
les
hlt
outs
enter
xchg
mov
mov
adc
in
ins
js
in
rcr
movs
pop
in
sub
mov
sbb
das
mov
cmps
mov
movs
sbb
add
mov
movs
movnti
xor
inc
ret
loope
mov
outs
dec
adc
jne
sub
rcl
(bad)
sahf
pop
in
adc
test
(bad)
and
mov
cmp
addr16
leave
popf
fild
sbb
call
(bad)
movs
fcmove
movs
mov
mov
mov
test
cld
mov
cmp
pop
int
daa
inc
in
sbb
shr
daa
dec
or
bound
daa
sti
popa
mov
cmps
pop
or
shr
call
xor
je
(bad)
mov
sbb
sub
(bad)
mov
movs
inc
pusha
mov
cmps
mov
xchg
inc
inc
sub
outs
iret
out
sub
mov
aas
jmp
pop
fs
shl
mov
retf
popf
mov
or
fs
add
es
adc
iret
lds
cmp
push
mov
aad
mov
fdiv
repnz
ins
pop
ret
push
mov
and
(bad)
les
dec
xor
add
and
push
cmp
and
mov
dec
mov
and
push
(bad)
ins
sbb
fwait
in
cmp
aaa
movs
arpl
xchg
add
das
addr16
sbb
popa
nop
retf
imul
xor
mov
jecxz
and
dec
ret
push
sub
push
in
fldenv
aam
mov
pop
sub
xchg
test
arpl
sti
hlt
in
arpl
repnz
gs
lock
cmp
sar
in
xlat
loop
aas
in
iret
frstor
dec
mov
loope
xchg
arpl
sbb
fmul
sub
in
(bad)
aad
outs
sbb
repnz
dec
pusha
pop
in
cmp
push
add
mov
cmp
push
cmp
jne
fld
dec
xchg
leave
fadd
dec
cmps
fdivr
jns
cmc
lahf
shr
stc
mov
push
jg
sbb
sub
sbb
and
cmp
mov
push
adc
xchg
je
cld
dec
push
(bad)
out
xor
dec
lock
pop
add
les
push
cdq
(bad)
mov
inc
retf
cli
in
imul
test
and
cmp
dec
aam
sbb
arpl
iret
dec
(bad)
das
xchg
in
xchg
sbb
cmp
jge
xchg
aad
call
repnz
sub
inc
repnz
stos
xchg
fstp
sbb
push
mul
inc
cmc
add
rol
rol
mov
xchg
xchg
sub
add
push
sbb
mov
jle
push
push
push
out
retf
xchg
or
out
shl
stc
repz
pop
popa
hlt
lock
jns
enter
(bad)
hlt
test
lods
inc
cmp
loop
xchg
call
fild
push
ror
or
mov
mov
push
lock
ret
dec
aaa
adc
cs
out
daa
lods
test
rol
popa
add
adc
add
sub
and
movs
jae
fnstcw
dec
adc
jae
call
ror
inc
neg
scas
jecxz
lds
imul
jge
xchg
sub
xchg
cli
cld
cmps
cmp
dec
mov
push
psrad
mov
lods
jno
push
seto
sbb
lods
daa
inc
cwde
ret
outs
(bad)
std
jge
scas
adc
xchg
or
adc
jmp
rcr
outs
popf
push
fild
iret
sub
inc
adc
clc
pusha
(bad)
nop
or
loope
in
leave
gs
inc
das
lea
jbe
lds
popa
in
icebp
add
ds
les
or
mov
mov
fs
data16
xor
repnz
fistp
ja
mov
xor
jo
enter
jmp
ret
cmp
pop
pop
jns
pop
imul
fwait
cmp
jbe
dec
xor
fucomp
leave
out
rcr
pushf
test
ds
jmp
add
(bad)
push
jp
push
mov
dec
nop
xchg
fild
pop
mov
push
lods
dec
add
mov
jbe
cs
xor
pop
int3
add
fidivr
stos
lods
lock
add
sbb
push
pop
or
xor
jmp
jb
pop
and
movs
mov
push
push
arpl
fst
xor
and
movs
mov
xchg
cmp
lods
mov
xchg
mov
mov
mov
call
enter
cs
jl
test
in
shr
xchg
scas
in
add
pop
jmp
cmp
movs
sar
ins
push
jle
sbb
or
rol
pop
hlt
xor
mov
sti
aam
gs
rol
cwde
shl
ficomp
add
mov
push
cmps
xor
(bad)
cwde
pop
js
push
jno
je
fisub
sub
fisttp
and
(bad)
cmp
jmp
movs
mov
les
pshufw
jae
mov
lock
xor
repz
xor
mov
adc
sbb
push
add
push
add
mov
mov
lods
dec
push
push
dec
mov
fwait
sbb
aaa
xor
push
xchg
test
or
ficom
xor
xor
inc
adc
add
movs
cmp
hlt
fist
inc
sub
sub
(bad)
pushf
scas
sti
cmp
dec
mov
in
fwait
xor
ja
imul
ror
out
test
jmp
jmp
js
sub
cmps
xor
call
add
and
call
mov
jns
popf
call
test
inc
popf
mov
das
xchg
outs
adc
setae
or
cmp
in
adc
test
aaa
or
mov
in
inc
cs
enter
out
imul
push
dec
daa
rcl
scas
std
cmp
adc
ss
or
xlat
inc
lahf
push
sti
mov
sub
lds
cmp
stos
jbe
int
in
test
and
push
cmps
sub
xchg
xor
in
lock
cmp
fst
sub
sub
dec
xor
hlt
sub
jle
cmp
pop
lock
push
cmp
mov
fld
aad
mov
mov
nop
aas
adc
or
mov
dec
mov
mov
xchg
leave
iret
pop
clc
mov
sbb
loop
sti
bound
push
xor
iret
sbb
jmp
stos
in
ins
pop
xlat
ins
xchg
mov
daa
and
(bad)
lahf
xor
or
adc
xor
add
xor
cmp
jle
jle
adc
clc
stos
cld
in
movs
jmp
into
test
mov
ret
call
ficomp
rcl
mov
lea
loop
xchg
xor
push
and
loopne
cmps
add
bnd
repnz
pop
adc
push
jo
retf
cs
popf
(bad)
push
xchg
test
xchg
push
inc
adc
mov
cwde
inc
inc
inc
test
fcompp
lahf
shl
or
dec
mov
fsubr
mov
push
sti
test
adc
dec
and
push
xor
cdq
jnp
loope
movs
test
scas
xchg
leave
xor
sub
dec
popf
std
out
push
adc
(bad)
push
push
jmp
daa
jne
xor
div
movs
add
adc
in
sub
fwait
ror
cmp
push
retf
pusha
add
shr
push
sub
inc
nop
addr16
sub
add
push
adc
mov
jae
mov
sbb
lods
arpl
add
shl
cmp
ins
xchg
pop
mov
bound
out
cld
iret
repz
mov
mov
sbb
gs
xor
jge
into
mov
adc
push
xchg
in
sub
pop
in
mov
enter
shl
stos
aam
push
movs
add
arpl
fist
gs
mov
rcl
sbb
(bad)
jmp
(bad)
clc
adc
inc
cld
pop
jnp
lods
inc
fs
cmp
sbb
fmul
out
sahf
hlt
mov
sbb
popf
inc
in
push
add
gs
out
enter
adc
jno
pop
dec
mov
outs
in
sub
and
pop
not
cmp
and
mov
mov
into
cmps
mov
ja
xor
xchg
pop
je
or
out
xchg
add
pop
dec
xor
aad
mov
jae
jle
dec
stc
pusha
in
push
push
ret
cdq
cli
inc
sar
cmps
ja
loop
push
add
mov
sbb
push
or
inc
outs
aaa
or
out
sti
loope
sbb
push
lods
fwait
(bad)
popf
mov
es
shr
mov
cmp
daa
cmp
ret
stos
pusha
mov
jl
fadd
out
jns
pop
ret
pop
mov
fcmovnu
dec
retf
xor
cmp
mov
xchg
jno
cmp
inc
cmp
addr16
jmp
mov
and
int3
pop
xchg
fcom
dec
cmp
fadd
inc
lds
clc
int
loope
(bad)
xchg
pop
movs
sbb
sti
sub
push
cmp
rcl
fistp
mov
in
rcr
dec
mov
imul
enter
lock
dec
ja
and
loop
in
mov
loopne
mov
cmp
lea
xchg
xchg
add
pop
adc
mov
and
das
cmp
scas
mov
outs
cmp
push
(bad)
dec
stc
addr16
xor
int
dec
loop
or
ja
leave
sub
fwait
push
xchg
mov
loopne
cmp
lds
ja
or
xchg
cmp
mov
cmps
pop
(bad)
jecxz
jns
dec
(bad)
in
pushf
and
stc
inc
ret
or
and
pop
sbb
adc
adc
sbb
xchg
inc
adc
imul
les
loop
ja
repz
ficom
or
hlt
xchg
adc
ins
outs
daa
xchg
sub
into
sbb
xchg
aam
adc
mov
in
sbb
dec
mov
mov
pop
jno
das
cmp
fsubr
push
inc
push
jno
cmp
jnp
not
jae
popa
test
or
or
push
mov
stos
sbb
aaa
mov
xchg
mov
cmps
and
push
push
inc
push
sub
cld
push
mov
jae
mov
jo
pushf
out
push
in
repnz
ficom
imul
inc
add
out
inc
xor
movs
dec
and
push
xor
jae
cli
inc
ret
xchg
out
je
pop
(bad)
mov
psubsw
or
outs
dec
push
push
xor
xchg
pop
and
test
test
popa
jg
xchg
jmp
int
pop
mov
mov
pop
xchg
xchg
lods
mov
or
aad
call
adc
out
je
push
cwde
cmps
pop
repz
outs
mov
push
push
loope
xchg
push
movs
xchg
dec
cmp
inc
sbb
push
mov
xchg
push
mov
mov
call
cli
in
sbb
es
imul
sti
cmp
fistp
lds
xchg
aad
xor
mov
xlat
xchg
out
call
cmps
or
add
ss
jnp
fxch
(bad)
jne
mov
and
loopne
pop
gs
push
pop
lahf
dec
pop
icebp
in
mov
lock
push
sbb
sub
in
addr16
jecxz
xor
add
jb
movs
iret
mov
sub
inc
bswap
fistp
mov
ja
popf
pop
sub
push
mov
jbe
neg
fs
pop
jmp
or
pop
inc
dec
outs
xlat
push
mov
jle
in
mov
ins
scas
cmp
sub
int3
jle
stos
xchg
(bad)
call
xor
imul
lea
out
cmp
int3
pop
jp
inc
lods
jge
and
jno
lahf
mov
push
sahf
mov
mov
xlat
in
jg
lds
stc
(bad)
mov
repnz
adc
xchg
jnp
dec
cmp
pop
in
sbb
sub
jp
in
add
fist
pop
ss
shl
xchg
rcr
aam
cmp
int3
sbb
xor
push
cmp
cmc
cmp
push
dec
mov
push
sub
pop
mov
push
pop
repnz
pusha
mov
mov
and
fisub
sub
cli
int3
int
scas
push
xor
sar
fcom
pop
(bad)
inc
repnz
inc
or
jnp
out
imul
fdiv
mov
jmp
outs
scas
shr
push
push
jnp
push
and
cmps
pop
add
dec
rcr
mov
dec
jo
dec
mov
and
xchg
mov
test
add
dec
push
dec
sti
add
lds
dec
ds
(bad)
je
rcl
and
xchg
and
xor
pop
mov
push
pusha
data16
test
test
cli
push
sub
aas
inc
retf
jns
inc
aad
and
sub
push
das
jge
cmp
mov
pop
ins
mov
dec
dec
lahf
mov
mov
pop
or
xchg
(bad)
mov
sbb
cmp
pop
aaa
aas
pop
dec
or
jp
fstp
sub
pop
int3
mov
ror
sbb
adc
pushf
sbb
add
adc
(bad)
ja
cmps
ror
repnz
mov
div
stos
ss
push
jbe
outs
pop
fdivr
pop
push
bnd
movs
mov
sub
cwde
inc
mov
std
stos
and
sub
pop
mov
mov
jne
xor
mov
loop
add
daa
loopne
call
in
sbb
mov
sub
cwde
cli
sbb
rol
and
retf
dec
sub
pop
in
loop
jnp
bound
jns
push
sar
xchg
xor
push
rcl
sar
outs
mov
scas
into
mov
(bad)
mov
xchg
mov
sbb
shr
test
test
push
xor
xor
push
mov
pop
xor
add
xchg
push
hlt
xchg
adc
and
fwait
repnz
sub
jo
jno
add
cmp
call
mov
je
stos
rcr
gs
lods
mov
xchg
test
jnp
mov
cmp
sbb
outs
xchg
mov
imul
bound
xchg
fwait
xor
sbb
inc
mov
jp
xchg
test
cmp
movhlps
addr16
stos
xor
mov
out
pop
cmp
shl
retf
clc
push
push
mov
repnz
sub
mov
push
mov
clc
cdq
(bad)
xchg
test
sti
xor
sbb
adc
test
xchg
xchg
cld
xchg
jo
sbb
inc
xchg
stos
adc
lds
jne
dec
imul
xchg
and
aaa
js
mov
inc
mov
jae
out
and
retf
cmps
(bad)
mov
adc
pop
lock
xor
inc
sbb
sbb
scas
outs
sahf
imul
jmp
popa
cmp
xchg
push
aad
rol
test
push
retf
and
in
rcl
xor
inc
push
std
call
sbb
pop
or
fisub
fnsave
pop
and
mov
mov
das
lea
xor
mov
push
mov
imul
jle
(bad)
outs
sub
mov
call
pop
mov
test
pop
lahf
sbb
push
imul
in
imul
js
adc
fcmovne
sbb
push
cmc
pop
push
mov
push
sbb
cmp
mov
(bad)
cmps
icebp
inc
movs
xchg
adc
xor
sbb
inc
jmp
pop
sub
fiadd
cmps
mov
mov
add
clc
outs
leave
data16
push
sub
ret
in
retf
(bad)
icebp
dec
cmps
idiv
das
and
jbe
pusha
dec
cmc
xchg
(bad)
mov
and
retf
js
icebp
inc
int3
dec
cmp
push
lods
std
imul
pop
jae
ror
jecxz
in
cdq
xor
stos
(bad)
jp
push
mov
jne
cmc
mov
pop
xchg
repnz
xor
sbb
cmp
sub
xlat
ja
stos
pop
cmps
xchg
xchg
adc
mov
imul
push
in
repz
mov
hlt
xlat
frstor
mov
and
outs
fdivr
ja
shl
mov
mov
cmp
xchg
jno
mov
je
mov
fidivr
adc
leave
scas
inc
sbb
sbb
in
call
in
xchg
mov
loope
sbb
popf
adc
imul
fs
out
int
inc
popf
int
sahf
xor
scas
rol
mov
add
adc
addr16
ds
add
loope
jp
dec
fidivr
pop
aam
leave
xchg
jp
mov
add
lods
xchg
sti
push
sti
add
inc
xchg
cmp
mov
pop
loope
call
mov
ret
add
and
(bad)
push
scas
popa
push
or
xor
xchg
inc
mov
sbb
ins
jb
xor
scas
test
xchg
pop
xor
mov
push
repz
std
inc
ret
xor
aam
test
mov
pushf
or
push
sbb
sbb
jnp
sub
retf
pusha
push
xor
push
cmp
xchg
inc
cmp
(bad)
mov
addr16
push
mov
add
fimul
pop
inc
mov
sti
jnp
mov
rdpmc
out
adc
inc
jl
push
xchg
call
push
scas
xchg
jecxz
jmp
mov
push
or
vcvtdq2pd
add
sub
in
out
adc
sub
add
sysret
lods
mov
xchg
xor
adc
into
sti
pop
mov
popf
xor
sub
mov
xchg
out
sbb
lods
outs
cmp
pop
daa
xchg
sub
mov
outs
ror
or
sbb
pop
ss
cmc
les
or
jb
add
xlat
clc
push
(bad)
or
jb
jne
(bad)
jns
and
pop
add
pop
mov
xor
mov
aas
call
mov
les
inc
rol
jmp
pushf
ret
sbb
sub
loopne
aad
retf
jl
xchg
push
adc
ins
int3
lahf
mov
push
nop
int
call
sti
lea
in
movs
ss
lods
adc
inc
adc
retf
inc
mov
or
xor
push
fbld
lods
lods
xlat
pop
lods
inc
popaw
movs
pop
inc
mov
mov
retf
inc
adc
inc
and
mov
out
lahf
mov
and
test
xchg
loop
xor
xchg
pop
in
inc
mov
mov
add
or
retf
and
std
xchg
scas
push
outs
scas
loop
sub
out
adc
lahf
fadd
cmp
cmp
mov
mov
cmp
push
fsubr
pop
imul
inc
and
mov
imul
dec
jl
lahf
leave
repnz
(bad)
mov
mov
add
jecxz
fsubr
sub
movs
push
imul
inc
test
sub
or
dec
mov
jo
repnz
jns
scas
loope
ret
jnp
inc
lock
xor
jl
pop
int
jb
mov
push
jle
inc
(bad)
jl
mov
dec
mov
out
jae
repnz
popa
mov
rcl
pop
xor
in
adc
cmp
pop
aas
rcr
call
xor
ds
ret
cmp
jne
rcr
stos
loop
jg
and
test
pushf
xor
cmp
cmp
push
lock
cdq
repz
xor
add
mov
mov
lods
in
in
hlt
(bad)
sbb
sub
aad
or
arpl
mov
(bad)
adc
push
sbb
xchg
mov
dec
push
add
pop
dec
sahf
test
ja
xor
inc
and
sbb
rol
cmps
retf
mov
jno
mov
xchg
xor
xchg
xchg
jno
mov
dec
in
js
fiadd
mov
xor
fsubp
imul
mov
lea
daa
test
loope
pop
dec
cmc
push
out
aad
cld
js
mov
mov
or
(bad)
cmp
js
ja
pop
pushf
cwde
pop
xchg
je
adc
outs
leave
imul
xchg
fwait
jle
scas
mov
cmp
add
ins
stos
call
scas
loop
push
jmp
push
movs
mov
lds
hlt
pop
mov
push
fsubp
mov
add
cmp
xor
lods
enter
test
cwde
(bad)
addr16
inc
xchg
cmp
mov
repz
sub
sub
jns
mov
sahf
and
dec
inc
bound
std
pop
(bad)
mov
xchg
cvtpi2ps
or
loopne
retf
loop
arpl
pop
inc
pop
add
pop
and
dec
inc
add
mov
jle
inc
add
scas
push
adc
shl
jno
(bad)
add
add
inc
mov
mov
test
ins
shr
mov
sbb
inc
xor
js
dec
cmp
cld
mov
sbb
out
icebp
mov
jae
mov
pop
ror
aas
pop
push
mov
imul
add
push
sti
push
fstp
ror
jmp
jl
mov
lock
pop
out
cmps
push
sahf
icebp
mov
clc
in
sub
test
push
out
and
fs
retf
mov
int3
xor
or
jl
stos
fldcw
xor
stc
inc
add
or
jl
aaa
or
lock
imul
mov
je
addr16
pushf
jmp
test
adc
cmps
les
ss
dec
out
add
loope
loop
or
mov
adc
jmp
xor
sub
add
adc
jl
jmp
inc
test
push
mov
dec
in
inc
sbb
in
jae
cmp
cmps
shr
in
pop
mov
xchg
inc
add
stos
repz
cmp
stos
pop
je
cmc
mul
xor
stos
push
pop
ins
out
add
push
jmp
pusha
mov
dec
pop
cmps
jecxz
xlat
and
mov
sub
push
sub
stc
adc
pop
vpsubusw
xchg
out
int
xor
out
dec
jmp
shr
mov
jno
push
mov
fsubr
into
test
mov
(bad)
fdiv
pop
push
js
test
sub
(bad)
dec
xchg
mov
dec
sbb
cs
lods
(bad)
in
jg
push
add
push
jecxz
das
(bad)
stos
(bad)
enter
jmp
fs
mov
(bad)
ror
retf
xchg
call
pop
popa
push
gs
mov
js
sbb
das
or
push
jnp
test
inc
pushf
retf
push
idiv
icebp
mov
ja
mov
clc
pop
pop
test
int3
cmc
arpl
lods
leave
adc
pop
sub
push
add
mov
out
leave
fbstp
pop
data16
mov
pop
or
ret
jge
mov
aam
inc
cmp
cs
inc
adc
or
xchg
call
repz
in
mov
stos
mov
mov
test
mov
mov
and
mov
shr
movs
in
and
mov
lods
lods
sbb
fbstp
adc
xchg
fyl2x
xor
xor
fist
pop
daa
adc
jmp
popa
pop
push
sub
or
xor
out
lods
test
out
sbb
popa
loop
aam
push
mov
pop
stc
pop
cmps
bound
sbb
pxor
mov
push
arpl
sub
shr
jmp
add
bound
pop
mov
(bad)
and
and
test
inc
test
mov
mov
pop
fwait
sar
cmp
pop
xchg
push
xchg
mov
jp
mov
mov
ja
push
jo
jo
mov
daa
pushf
xchg
jae
add
push
sbb
int3
(bad)
mov
inc
outs
jo
jo
mov
and
push
fidivr
mov
mov
js
mov
repnz
retf
mov
movs
shl
mov
(bad)
cmp
iret
inc
add
pop
popf
shr
mov
ds
out
mov
loop
fsubr
sbb
cld
adc
or
dec
sbb
cmp
xchg
push
xor
adc
mov
adc
and
clc
addr16
mov
out
int
cdq
dec
loope
fcomp
xchg
mov
adc
adc
pop
ja
popf
mov
or
sbb
xor
push
test
jns
(bad)
lea
cli
(bad)
and
xchg
dec
cmps
cmp
pusha
sbb
pop
xor
sub
or
outs
cmp
fs
mov
add
jne
popf
or
cmp
mov
scas
sub
cmp
push
int
sub
outs
test
xlat
bound
push
das
lahf
jbe
stc
stos
xchg
(bad)
sbb
ret
mov
dec
mov
loope
movs
mov
mov
add
call
pop
mov
sub
hlt
xchg
dec
daa
gs
fstp
push
xor
icebp
bound
adc
pusha
dec
fcom
xlat
dec
push
push
pop
lods
pop
not
lea
das
cwde
(bad)
cmp
mov
jmp
jns
adc
dec
dec
jge
pop
sbb
sar
mov
jg
lea
(bad)
ret
xor
mov
xlat
jg
vscalefps
std
xchg
(bad)
and
and
shr
stos
fwait
pop
push
mov
sar
push
arpl
cmp
lods
pop
jge
ds
dec
sbb
out
aaa
je
xchg
mov
cdq
imul
mov
iret
mov
pop
xor
mov
lods
mov
dec
imul
outs
fidiv
sbb
xor
imul
fidiv
mov
lahf
xchg
xchg
push
into
adc
sahf
dec
mov
cmps
jmp
ror
(bad)
das
(bad)
imul
add
cmps
push
mov
jmp
jae
push
dec
jmp
or
gs
mov
enter
jge
(bad)
aam
(bad)
xlat
(bad)
sbb
xor
mov
push
or
dec
fild
inc
mov
outs
cmp
and
lock
retf
jmp
cmps
sbb
mov
xchg
out
xchg
sti
sbb
push
dec
add
mov
(bad)
ret
inc
hlt
pop
imul
jmp
push
bound
add
jnp
out
jne
lahf
mov
data16
adc
mov
mov
jg
call
(bad)
fcmovb
xor
adc
lods
sbb
and
into
mov
pop
add
mov
and
test
pop
pop
pop
or
rcl
add
test
mov
mov
xor
ds
retf
rcr
jbe
loope
mov
pop
adc
outs
cmp
addr16
cli
(bad)
test
(bad)
fadd
lahf
mov
pop
(bad)
icebp
test
out
mov
sar
adc
mov
or
fisubr
and
push
out
or
cwde
xor
out
shr
inc
imul
aas
xchg
pop
cmp
ins
or
test
push
sbb
call
je
mov
add
in
test
lock
mov
pop
cmps
inc
mov
pop
test
inc
js
sbb
or
pop
out
add
scas
mov
sub
mov
movs
int
dec
push
nop
push
test
sub
mov
sbb
cmps
stos
leave
jmp
in
and
push
fcmovbe
(bad)
lock
in
repnz
sub
and
prefetch
xchg
les
add
jmp
mov
xchg
ss
inc
dec
sub
aaa
sbb
mov
ror
sub
cmp
pusha
imul
loop
bound
fcom
sbb
ja
fidivr
mov
xchg
pop
pop
inc
inc
enter
out
pop
cmp
cmp
xor
mov
aaa
mov
xor
shr
adc
sbb
jno
sub
call
fdivr
fsubr
(bad)
aaa
cmp
or
add
in
rcr
sub
int
pop
fld
pop
leave
std
rcl
or
inc
aaa
imul
mov
jg
adc
loopne
addr16
nop
xor
xor
cmp
sti
jnp
fistp
inc
cmps
dec
and
dec
sbb
fild
and
sub
idiv
lods
dec
mov
pop
ds
push
call
inc
and
mov
mov
rol
xor
or
lahf
sub
adc
add
test
arpl
(bad)
outs
and
add
sbb
ret
(bad)
push
ins
xor
into
xor
mov
das
pop
mov
test
pop
sbb
push
sahf
mov
mov
fdiv
sbb
cmp
mov
bound
sub
jbe
jo
inc
sbb
ret
sbb
jns
lods
jb
mov
jmp
jo
xchg
mov
(bad)
cmps
jle
(bad)
rcl
sbb
(bad)
adc
daa
clc
or
xchg
sub
mov
retf
(bad)
in
mov
(bad)
mov
shr
popa
adc
ins
cmc
mov
ret
add
add
add
int3
push
jmp
and
mov
jg
sahf
mov
cmp
push
adc
mov
jbe
push
mov
sub
mov
cmp
pop
adc
mov
pop
push
and
and
cmp
rcr
sub
jp
ss
sar
inc
stc
push
mov
(bad)
adc
fist
aam
push
sub
arpl
add
xor
cs
adc
sub
inc
pop
push
push
cdq
dec
ds
and
jp
or
sbb
xor
mov
fcom
sub
jg
xlat
movs
mov
inc
cmp
cmps
sub
jnp
stos
push
jo
ins
push
int
adc
jmp
nop
jnp
mov
jg
call
fwait
rcr
test
daa
ss
les
inc
dec
or
cmp
jp
cmp
aad
mov
mov
pop
adc
pop
test
es
cmp
test
xor
pushf
pop
pop
inc
not
and
fld
mov
nop
int3
ss
add
stos
mov
pop
jae
shl
ds
jb
jae
push
icebp
test
in
(bad)
mov
imul
sbb
or
retf
xchg
jmp
leave
dec
les
mov
mov
ds
fmul
push
out
in
jb
(bad)
fcmove
sub
rol
jbe
pushf
aam
leave
lods
mov
push
mov
jmp
enter
cmp
push
cmp
dec
stos
jae
lods
dec
jmp
push
mov
hlt
nop
fnstenv
outs
js
out
test
mov
test
(bad)
data16
sub
xchg
inc
xchg
jmp
xchg
add
xchg
adc
add
data16
ret
inc
or
pop
into
pop
jno
cmp
movs
or
xchg
sti
xchg
jb
mov
arpl
jmp
retf
ja
iret
addr16
shl
mov
dec
inc
push
inc
and
mov
ja
dec
jge
jge
loopne
inc
adc
xchg
aad
gs
test
xor
stos
adc
push
or
push
add
popf
cmp
add
sbb
lahf
and
test
out
or
jmp
outs
pop
hlt
cmp
push
mov
mov
xchg
push
sub
mov
ds
rcl
popf
push
sub
pop
mov
loopne
mov
pop
pop
inc
xor
cli
dec
rol
loop
mov
lea
fwait
cmp
mov
xor
adc
ja
push
and
les
aas
iret
ret
push
push
sbb
push
fwait
cmp
pushf
xchg
xor
rcr
in
sub
jle
pop
aas
scas
in
stos
test
jp
xor
neg
std
daa
jecxz
(bad)
fwait
imul
jp
int3
leave
popf
fs
pop
jmp
call
cmp
(bad)
mov
sub
movs
inc
push
mov
lods
repnz
int3
movs
(bad)
(bad)
sbb
(bad)
fprem
mov
sub
(bad)
push
sub
fld
jp
add
adc
retf
or
sub
sub
or
(bad)
std
popf
div
das
mov
push
push
scas
bound
lods
js
call
xor
out
cmp
add
push
xor
ret
cmp
(bad)
js
addr16
xchg
cmp
and
mov
cmps
into
mov
(bad)
xchg
sbb
mov
jmp
rcpps
dec
addr16
in
cs
jbe
daa
mov
pop
push
loopne
(bad)
daa
inc
pushf
or
and
sbb
dec
lea
mov
xchg
pop
jg
sbb
cmp
mov
jae
xor
std
iret
mov
ins
retf
sub
add
mov
mov
mov
hlt
pop
fsubr
ret
dec
xor
mov
(bad)
mov
stc
dec
outs
mov
dec
push
jae
mov
loop
sar
mov
(bad)
daa
mov
div
pop
xchg
adc
retf
call
pusha
jg
aam
aad
inc
pop
mov
or
loope
stc
dec
hlt
jmp
fsubrp
imul
add
aad
dec
xor
push
xchg
pop
sti
mov
pop
jmp
xchg
jo
mov
add
mov
imul
stos
or
rcr
pop
test
pop
mov
sub
loopne
mov
mov
xor
mov
push
int3
inc
sbb
scas
pop
out
sub
inc
rol
stos
xchg
dec
popf
or
mov
mov
cmc
jl
ds
stos
imul
in
sub
data16
mov
test
aad
retf
shr
push
loop
xor
jne
ins
shl
xchg
and
lds
sahf
loop
xchg
pop
call
xchg
dec
sahf
int3
test
push
push
shl
push
leave
dec
ret
inc
ds
mov
mov
cmps
sub
cmp
cmp
xchg
fistp
lds
push
stos
(bad)
mov
or
mov
in
aaa
addr16
movs
cmp
fild
xchg
in
jmp
jb
retf
sub
or
(bad)
aas
mov
cmps
add
test
push
int3
lea
cmp
sbb
mov
xor
sbb
popa
lods
push
mov
clc
mul
aam
and
push
pop
mov
xlat
out
data16
jmp
xchg
cs
ret
scas
add
pop
pushf
mov
cld
mov
ficom
sub
xor
and
repnz
in
jle
lock
(bad)
cmp
pop
mov
fdivrp
and
cmp
xchg
push
adc
mov
out
push
repnz
inc
ins
loop
mov
mov
sbb
mov
popa
ficomp
sbb
cld
dec
nop
sub
lock
sbb
dec
or
out
adc
pop
idiv
ret
dec
cld
mov
fs
mov
push
ret
imul
outs
adc
adc
sub
mov
sub
nop
jecxz
das
mov
or
in
add
and
(bad)
jae
push
aaa
xor
pop
mov
push
outs
hlt
xchg
xchg
dec
cmp
in
jge
mov
mov
popf
or
mov
jmp
aam
pop
or
jl
rol
int3
test
fs
xor
push
adc
add
inc
cmp
xor
jp
adc
cmp
fistp
cmp
int
test
push
cs
add
mov
fucomp
xor
psubd
sbb
into
(bad)
and
and
ret
ret
or
adc
xor
mov
jne
mov
out
or
inc
xchg
mov
popa
and
iret
mul
ret
out
cdq
jae
inc
add
mov
add
aaa
mov
cmp
mov
(bad)
jmp
call
xchg
sbb
xor
test
push
mov
in
cmp
jb
fs
inc
mov
gs
loopne
add
inc
loope
(bad)
jl
add
or
xlat
lahf
(bad)
push
mov
mov
or
push
cmp
aad
xchg
lea
jl
pop
cmp
nop
cmp
es
lahf
call
(bad)
xor
push
sti
dec
mov
add
pop
pop
mov
pushf
inc
pop
arpl
ds
sbb
es
adc
out
sub
mov
fisttp
mov
mov
adc
mov
hlt
jbe
jnp
cwde
aas
cmp
aam
arpl
imul
jmp
xchg
imul
ins
xchg
and
stc
nop
(bad)
retf
ret
dec
fld
ret
inc
dec
daa
xlat
xchg
add
imul
lods
(bad)
rcr
add
mov
stos
add
lds
mov
popa
inc
js
pushf
imul
adc
loope
outs
jmp
push
push
jg
or
rcr
mov
popf
outs
adc
and
scas
lods
movs
iret
fdiv
adc
movs
push
jno
pop
and
loope
fbstp
inc
mov
xchg
test
xor
inc
jnp
in
dec
mov
inc
fs
shl
and
loope
mov
retf
push
fidiv
jmp
test
das
mov
push
mov
inc
fcom
stc
imul
fild
repz
sbb
jmp
and
xor
fimul
mov
mov
inc
lea
push
mov
(bad)
into
dec
ror
(bad)
jl
mov
mov
cmp
mov
cmps
ins
aam
fldenv
cwde
retf
shl
js
fiadd
push
xor
repz
cmp
add
and
sub
cdq
sub
jo
aaa
inc
enter
repnz
test
and
xchg
repnz
sbb
mov
icebp
pop
shl
test
shl
xchg
mov
fist
xchg
test
hlt
xor
and
rsqrtps
add
popf
push
call
xor
xor
xor
fsubr
xchg
push
push
imul
test
jbe
ins
sub
cmc
lods
lods
add
fadd
shr
adc
fs
cmps
jmp
inc
add
leave
imul
cs
xchg
outs
lods
fs
loope
xor
repnz
fdiv
jo
aad
repz
sbb
sahf
movs
outs
push
adc
xchg
ret
mov
inc
pop
xor
adc
dec
hlt
fimul
or
mov
jno
jnp
xlat
jnp
loopne
mov
retf
push
inc
lods
dec
pop
pop
jnp
sbb
bound
clc
gs
adc
push
mov
dec
(bad)
ins
repnz
and
test
xchg
xor
sbb
inc
add
(bad)
push
xor
fwait
retf
mov
hlt
inc
inc
inc
call
xchg
dec
and
stc
mov
popa
rcl
sub
pusha
cmp
lock
dec
push
lock
in
bound
push
addr16
(bad)
aas
shl
int
mov
jbe
imul
in
ret
and
mov
and
wrmsr
add
add
cmp
test
dec
push
cdq
mov
and
and
cmp
ret
cmp
(bad)
adc
adc
xor
dec
and
add
pop
add
shr
lods
mov
icebp
cmp
inc
jp
cdq
les
movs
test
loopne
scas
test
jle
ficom
sar
(bad)
jmp
or
cmps
and
test
fisub
out
add
mov
add
pop
sub
leave
pop
dec
enter
sahf
fild
jmp
push
cmp
pop
and
loopne
pop
repnz
sbb
or
mov
jno
cmp
mov
xor
jns
int
ror
imul
or
dec
sbb
push
repnz
fcomp
int
pop
iret
xchg
or
mov
push
jecxz
jmp
xchg
and
ret
mov
adc
lahf
lahf
pop
mov
scas
inc
adc
mov
stc
pop
pop
push
test
lahf
xchg
cwde
pop
pop
adc
or
and
outs
xchg
mov
in
lds
mov
xor
retf
mov
and
out
sub
or
idiv
xlat
aam
aad
push
arpl
add
rol
xor
jge
ins
out
jecxz
add
xor
xchg
dec
cld
imul
adc
xchg
jo
jmp
mov
cmp
lea
or
cmp
lods
and
xchg
mov
xor
mov
mov
cmp
sub
dec
aad
dec
aas
xchg
and
enter
inc
pop
mov
adc
push
jno
push
cwde
dec
cmp
pop
and
js
jp
dec
sub
outs
pop
push
test
or
into
icebp
das
xor
sti
ret
mov
scas
out
cmps
xchg
mov
shl
cmp
mov
push
sbb
cmp
jno
arpl
mov
sti
xor
loope
ret
outs
sbb
sub
push
jecxz
pop
int3
arpl
jnp
in
je
push
push
sub
cmc
push
clc
test
sbb
sub
cmp
sti
adc
mov
xchg
cmp
into
sbb
xchg
or
sbb
jne
pop
mov
cmps
sbb
sub
les
mov
push
fwait
jo
stc
jae
xchg
push
adc
(bad)
repnz
fs
lea
js
or
xor
push
rol
fdivr
daa
loope
ins
sub
cmp
inc
test
lods
xchg
pop
add
cmp
(bad)
in
xchg
out
iret
lods
pop
bound
outs
(bad)
mov
imul
jg
iret
scas
(bad)
push
push
mov
loope
shr
jle
(bad)
outs
lahf
pushw
sbb
mov
mov
pop
lds
cmps
mov
fnstcw
cmc
mov
fst
stos
test
push
push
les
mov
int
push
push
test
push
mov
push
push
stos
jae
mov
adc
xchg
mov
lss
stos
cmp
iret
push
dec
loopne
sub
(bad)
leave
pop
pop
rcr
jbe
sub
call
xor
cmps
in
addr16
dec
pop
call
in
movs
push
mov
inc
dec
hlt
popa
sub
pop
loope
adc
ds
test
lahf
rol
mov
xchg
into
outs
sahf
gs
sti
std
loope
add
rcl
sub
adc
xchg
mov
popf
ffreep
mul
(bad)
aas
and
or
cmp
jmp
loop
xchg
adc
stos
or
xchg
or
jecxz
test
ss
sbb
mov
push
inc
aam
sub
xchg
rcl
pop
or
add
or
ret
hlt
cmp
mov
dec
outs
jo
push
dec
dec
out
(bad)
jno
mov
and
das
push
in
popa
adc
in
cld
cmc
out
pop
push
add
out
xor
js
sbb
movs
adc
into
inc
retf
add
jp
sti
xchg
std
add
xlat
imul
pop
dec
je
mov
nop
cmp
inc
dec
enter
sti
inc
rol
add
push
stc
fst
pop
(bad)
mov
(bad)
fsub
out
sub
scas
fld
js
cdq
mov
mov
dec
jle
into
(bad)
mov
jl
jo
jle
or
and
and
aas
sbb
cli
sub
ds
adc
dec
sub
lahf
mov
clc
cmp
mov
ins
jl
mov
jno
pop
stos
push
mov
pop
dec
jge
inc
cmp
dec
ss
pop
js
and
pop
int
add
inc
imul
adc
push
lahf
xor
and
sahf
cmp
jmp
cmp
popa
inc
inc
retf
jle
ror
fs
sub
mov
pop
add
test
loopne
loop
(bad)
fmul
ja
cmc
push
imul
sub
jne
sub
je
sahf
ins
lahf
loope
add
dec
std
jecxz
pop
jnp
shr
mov
dec
or
loop
fsub
inc
in
ins
out
or
out
aaa
push
and
outs
ret
xchg
push
cmp
popa
cmp
mov
mov
sub
loopne
in
stos
lods
out
(bad)
rol
add
lock
or
scas
les
ja
inc
inc
dec
pop
or
int
mov
pop
movs
cs
pop
adc
push
jecxz
rcr
icebp
ror
fs
adc
out
mov
pushf
fidivr
pop
jae
shl
fist
rcl
inc
mov
imul
shr
fild
mov
or
sbb
jbe
mov
pop
pop
jns
sbb
into
popa
dec
ftst
and
lea
push
xor
mov
add
pop
or
ds
dec
ror
imul
into
enter
dec
call
shl
fsub
mov
loopne
adc
fild
lahf
xchg
adc
cmp
mov
mov
dec
test
sbb
test
ret
ins
fstp
shl
pusha
adc
shl
pop
mov
mov
clc
lock
jecxz
(bad)
call
sub
jmp
add
pop
xor
jmp
fist
pop
or
and
or
add
in
(bad)
sahf
daa
mov
inc
xchg
mov
rcl
cmps
in
ja
dec
pop
bound
int
stc
jb
mov
mov
call
(bad)
in
js
and
movs
ins
cs
mov
sub
mov
cmps
outs
mov
imul
inc
inc
pushf
mov
inc
xor
and
xchg
sub
and
jo
cmps
xor
cmp
fistp
pop
inc
out
push
ret
lds
stc
or
xor
push
aam
imul
mov
pop
jecxz
inc
shl
adc
add
fst
aam
jbe
mov
repnz
sti
setne
mov
jmp
dec
jmp
sar
loope
jb
mov
fist
fdiv
(bad)
jmp
jl
ins
push
aam
dec
pushf
ret
sub
out
cwde
movs
and
fs
xor
out
mov
cmp
cs
xchg
(bad)
in
and
inc
jo
jg
push
leave
cmp
dec
sar
cld
jb
jnp
hlt
inc
jl
xor
nop
sbb
mov
lods
(bad)
les
je
pop
leave
es
sti
add
jge
jb
cmp
cmp
dec
lods
mov
push
jmp
(bad)
daa
add
enter
outs
fwait
mov
in
jecxz
stos
jbe
push
imul
lock
movs
pop
cmc
outs
xchg
jl
jo
in
les
pop
arpl
repnz
jae
clc
adc
dec
daa
ret
in
mov
scas
sbb
lea
adc
pop
sbb
sbb
ins
pop
xchg
scas
out
aad
out
or
jno
and
and
data16
xor
xor
xor
cmp
ja
xchg
and
push
xor
in
cmps
cmp
test
int
int
cmp
fwait
cmc
ins
call
push
cmp
pop
aas
cwde
push
cmp
fnstenv
xchg
das
ss
add
into
pop
jmp
push
cli
inc
fld
xchg
das
inc
hlt
cmps
adc
mov
and
sub
xor
pop
or
rcr
mov
je
jne
pop
in
shl
dec
jmp
xrelease
loope
push
mov
jl
sbb
aam
push
aam
sbb
push
sahf
xor
and
ja
mov
and
aam
dec
pop
fcom
ss
jl
mov
fcomp
rcr
mov
add
mov
fisub
test
or
and
shl
push
je
adc
stos
add
scas
pop
pop
aas
ret
out
cs
mov
ret
int3
inc
or
push
outs
sahf
in
xchg
push
adc
pusha
sbb
or
add
cwde
mov
add
dec
fidivr
push
rcl
sub
int
aam
rcr
adc
pop
nop
or
sahf
mov
pop
sbb
int
dec
and
sbb
push
es
xchg
repz
adc
ficomp
xchg
adc
(bad)
movzx
es
call
inc
imul
in
mov
push
mov
lds
xchg
mov
(bad)
or
mov
add
xor
fidivr
and
aam
retf
xchg
in
(bad)
popf
fisub
rdpmc
stc
jb
cs
push
xchg
dec
icebp
test
pop
inc
pop
jge
xor
adc
add
(bad)
mov
xor
xor
shr
icebp
retf
ret
xchg
(bad)
adc
xchg
dec
repnz
rol
dec
rcl
dec
cld
mov
mov
sbb
mov
inc
lea
xchg
pop
inc
jno
cli
stos
and
stos
cmp
xchg
or
pop
add
fs
cmp
cmp
and
pop
mov
(bad)
mov
cmp
hlt
jl
cmp
cmp
call
dec
add
ficom
ins
das
cli
lahf
or
jnp
lahf
xchg
mov
push
xchg
jns
jo
sbb
enter
sub
into
imul
inc
xor
gs
cdq
push
outs
push
stos
push
cmp
je
retf
mov
test
push
fs
out
jmp
add
push
xchg
leave
jne
adc
mov
xchg
pop
xchg
and
test
out
push
inc
xchg
inc
xor
mov
pushf
and
std
(bad)
fiadd
(bad)
jecxz
shr
sbb
xchg
jne
push
or
gs
or
pop
inc
add
pusha
cmp
outs
push
xor
out
ins
mov
ds
mov
jg
clc
xor
add
pop
mov
data16
inc
nop
xchg
xor
(bad)
div
neg
pop
ret
movs
or
in
mov
repz
or
inc
sbb
xor
fdivr
inc
push
ret
inc
ss
push
out
dec
cmp
(bad)
mov
call
sub
sub
adc
mov
bswap
xchg
out
js
add
(bad)
rcr
iret
jg
dec
push
cs
sub
jmp
jl
aam
mov
dec
xor
out
push
repz
jnp
inc
pop
mov
daa
lea
scas
mov
paddsw
aaa
fs
pop
lea
mov
mov
aas
movs
inc
in
and
addr16
cmps
mov
jg
and
push
mov
push
mov
adc
xchg
shr
pusha
and
sub
adc
jno
ror
imul
call
call
jmp
pop
sub
test
ss
(bad)
push
cmp
mov
cmps
pop
fwait
sub
sub
and
hlt
pop
loopne
jecxz
and
cmp
jg
jle
aaa
sti
push
mov
cmc
ins
iret
sti
div
scas
ror
adc
pop
mov
or
jne
enter
pop
stos
call
cmp
mov
ret
xchg
xor
jmp
nop
inc
jb
inc
out
inc
jb
enter
cmps
movs
or
push
pop
into
jnp
test
pushf
inc
into
xchg
int3
adc
add
cmc
out
jo
xchg
push
mov
sbb
test
dec
adc
dec
jecxz
das
add
or
pop
bound
inc
cld
pop
and
and
icebp
xchg
test
jg
outs
dec
in
xor
jmp
les
rcr
push
pop
les
pop
in
mov
out
xlat
mov
out
jmp
push
or
jmp
cli
push
jecxz
push
jmp
push
or
mov
and
stc
xchg
xchg
sbb
or
inc
or
popf
xchg
test
js
fdivr
icebp
inc
add
xor
sahf
pop
aaa
jb
cmp
idiv
int3
push
fisubr
inc
std
test
movs
mov
xchg
jbe
icebp
push
fs
dec
inc
fs
je
loopne
enter
jns
loopne
ja
dec
enter
cwde
cmp
sub
in
neg
and
into
clc
test
cmp
call
or
mul
mov
xchg
cmp
ins
mov
les
outs
add
push
adc
stos
aaa
xor
pop
sbb
jne
push
jnp
push
jle
sub
mov
and
inc
add
mov
xor
pop
dec
jmp
retf
xor
push
seta
mov
inc
fmul
daa
test
xchg
popa
lea
(bad)
ficom
imul
sub
clc
xor
xchg
iret
mov
mov
or
lea
mov
sti
push
add
loop
dec
pop
ds
jbe
imul
mov
out
dec
dec
cmp
mov
inc
inc
ss
mov
mov
aaa
push
pushf
cmp
cld
(bad)
mov
pusha
jmp
repz
data16
push
sti
loop
sbb
(bad)
arpl
mov
xor
jae
pop
shr
mov
mov
cmp
or
mov
sbb
pop
inc
jge
addr16
inc
adc
xchg
dec
pop
xor
adc
in
xor
call
test
out
mov
scas
sub
addr16
jo
mov
dec
push
rcr
inc
push
add
data16
mov
lds
lahf
int
mov
sbb
mov
pop
shr
js
push
gs
and
jle
imul
cmp
(bad)
idiv
das
mul
aaa
mov
adc
jl
add
test
mov
sub
inc
push
and
adc
xchg
sub
(bad)
push
cmp
cmps
leave
push
xor
scas
je
jno
xor
(bad)
in
or
inc
cli
xchg
aam
pop
and
adc
xchg
nop
jns
push
ds
cmp
or
mov
push
inc
int3
mov
pusha
push
int
mov
mov
inc
shl
(bad)
fiadd
retf
dec
test
pop
mov
adc
imul
mov
leave
imul
in
or
retf
sbb
aad
xor
int
lods
mov
loope
pop
adc
push
sub
push
inc
adc
dec
and
mov
xor
jo
lds
dec
push
cmovge
mov
imul
in
mov
pop
dec
push
dec
or
mov
stc
add
mov
dec
inc
xchg
movs
call
fild
mov
cs
inc
pop
or
jno
adc
mov
mov
push
pop
fiadd
sbb
arpl
ret
mov
retf
in
jecxz
jno
push
cs
or
or
xchg
js
xor
sbb
xor
pop
stos
retf
sbb
sub
mov
clc
mov
movs
sbb
mov
cmp
sahf
adc
inc
mov
daa
into
and
xlat
stos
mov
ret
add
inc
jne
sub
cmps
xor
rol
test
or
cmp
sub
bnd
mov
(bad)
ret
pop
add
fild
shr
dec
repz
div
les
adc
inc
jb
xor
loopne
jmp
mov
loope
mov
push
pushf
and
cmp
stos
stc
outs
xor
enter
pop
outs
lahf
shl
xchg
ss
adc
es
fadd
adc
(bad)
sub
and
jle
fcmove
outs
xchg
and
sar
lock
cmp
sub
std
push
mov
movs
dec
inc
shl
jmp
nop
retf
stos
cmp
push
int3
xor
jo
icebp
pop
ins
ret
and
pop
mov
ja
out
jb
iret
jg
mov
pushf
data16
daa
rcl
dec
and
fs
xlat
push
and
add
lods
clc
mov
mov
ja
jns
jae
ret
dec
add
rcr
inc
pop
mov
out
sbb
xchg
cmps
sar
mov
stc
adc
xchg
clc
lock
scas
xchg
cmp
fwait
stc
std
popa
mov
nop
imul
mov
inc
mov
retf
fisttp
dec
pusha
fidiv
(bad)
in
ror
dec
test
iret
int3
test
inc
pop
sbb
push
lahf
les
ds
jns
push
fisub
fadd
imul
fs
ins
pusha
xor
(bad)
jns
scas
addr16
inc
es
iret
and
fs
inc
jmp
fadd
int3
adc
out
push
cwde
aaa
mov
imul
add
sbb
nop
call
sbb
cpuid
push
in
mov
(bad)
push
xor
pop
in
ins
jne
popf
pop
fsub
test
dec
jae
outs
fs
push
sbb
scas
pop
add
mov
imul
or
ret
ja
test
dec
addr16
jge
adc
out
mov
std
outs
clc
bound
loope
pop
ds
popf
popf
outs
loope
or
cmc
push
imul
test
call
test
push
sub
hlt
mov
mov
jle
and
ins
int
arpl
cmovl
sbb
adc
das
clc
sahf
das
retf
mov
xor
fcom
jecxz
cmp
inc
dec
jg
fsubr
push
push
push
inc
cmps
push
stc
and
sti
dec
jl
rcl
cwde
popa
sti
inc
adc
test
adc
adc
push
pop
aam
out
cmp
imul
pop
mov
xchg
jmp
adc
cdq
xchg
inc
xchg
std
in
push
and
dec
jb
sub
jecxz
jmp
cmp
push
pop
adc
leave
arpl
push
imul
xchg
jge
sti
jns
add
sbb
aas
mov
(bad)
fisttp
movs
mov
daa
cmp
repnz
pusha
stc
ja
mov
push
in
inc
push
add
add
loopne
inc
adc
jbe
das
mov
dec
adc
push
xlat
pop
out
xchg
xchg
add
pop
pop
ds
sbb
or
pushf
xchg
daa
adc
mov
fisubr
fst
pop
sahf
push
test
jp
test
pop
push
mov
xlat
enter
ror
sti
adc
or
lods
inc
lds
adc
xor
bound
lock
pop
xchg
sar
push
stc
xor
mov
push
in
je
int
jns
mov
and
fst
xor
(bad)
adc
jp
addr16
idiv
(bad)
gs
jg
mov
mov
sar
jl
and
push
iret
sbb
mov
sub
scas
sti
xor
pop
repnz
repz
pushf
sti
shr
or
mov
xor
shl
or
mov
dec
push
jp
sub
iret
jle
dec
push
push
jp
mov
jmp
test
inc
(bad)
and
mov
mov
clc
xchg
dec
popf
jl
out
mov
pop
jmp
add
pop
js
neg
sbb
ror
cdq
ins
xchg
fprem1
scas
int3
retf
sub
test
test
loopne
adc
pop
out
mov
in
sbb
jp
fild
bound
scas
in
inc
mov
jp
xor
sahf
pop
fwait
bound
in
repz
sub
xchg
stos
mov
xor
and
cmc
jl
out
jg
mov
push
jl
iret
jns
pop
stos
push
fdivr
sbb
mov
xchg
xor
jnp
xchg
mov
inc
inc
xchg
(bad)
mov
sub
sbb
or
fwait
mov
fs
cwde
jp
aas
jmp
mov
cmp
vpsrlq
aam
push
mov
(bad)
iret
jge
inc
std
stos
call
dec
out
inc
jmp
sub
fistp
cwde
and
dec
push
jp
sub
mov
call
mov
outs
jp
mov
and
pop
mov
inc
loop
xchg
mov
sub
mov
mov
stos
or
pop
test
add
mov
popf
xor
daa
mov
test
or
loope
jbe
adc
stc
xor
xchg
mov
pop
mov
out
shl
call
neg
ss
outs
adc
sub
ret
xchg
popf
jp
enter
out
xchg
es
inc
test
xor
pusha
inc
out
fwait
mov
mov
nop
ins
mov
idiv
dec
inc
retf
cdq
xor
mov
sbb
(bad)
fucomip
and
add
xor
push
mov
or
je
retf
call
mov
push
push
fnstenv
pop
lahf
inc
ja
and
push
push
mov
sub
call
jmp
jnp
push
sbb
jl
sub
push
aaa
or
aas
imul
test
mov
mov
dec
int
jle
add
fld
sub
addr16
or
cmp
lea
cwde
rcr
sub
inc
repz
or
dec
and
push
lar
push
mov
loop
enter
clc
daa
aad
xchg
fimul
cs
pusha
push
sub
sbb
aad
add
imul
jmp
cmp
rol
addr16
fistp
out
fisubr
inc
call
int3
lds
das
mov
mov
stc
mov
and
imul
lods
push
push
mov
add
inc
jo
pop
shl
rol
xor
mov
push
xchg
xchg
outs
arpl
pop
ret
cdq
and
test
jo
rcl
cmp
mov
add
out
mov
xchg
sbb
and
fmul
fsubr
movlps
lods
mov
nop
fwait
repnz
sbb
outs
mov
mov
cmc
inc
jo
adc
stos
popa
xchg
call
sbb
nop
retf
pop
mov
and
pop
and
adc
icebp
jo
dec
mov
aam
repnz
sbb
idiv
sahf
and
xchg
pop
jp
shl
fimul
sub
(bad)
mov
sbb
in
cdq
bnd
and
jmp
es
mov
in
inc
lea
aaa
imul
rcl
adc
sub
xor
pusha
std
xchg
aam
or
scas
mov
jae
dec
out
adc
out
fcomp
movs
lods
push
dec
les
cmp
xor
test
jne
hlt
ret
cmp
sub
jg
cmps
das
xor
push
inc
fmul
add
sub
outs
les
rcl
xor
xor
clc
pop
(bad)
fisub
lea
ret
and
xchg
xchg
out
mov
std
add
fcom
pop
dec
adc
enter
cmps
(bad)
repnz
in
fnstenv
call
xchg
(bad)
and
pushf
inc
sbb
add
jnp
test
jno
ins
fnsave
shr
les
push
adc
xor
sti
arpl
test
jne
adc
mov
cmp
sbb
inc
(bad)
xor
push
xchg
cwde
fcmovbe
lds
sti
popa
es
addr16
sub
jp
mov
push
ss
cmp
test
mov
jmp
bound
push
jge
fbstp
push
pop
pusha
mov
mov
movs
mov
mul
mov
in
sub
retf
add
cmp
jno
movs
dec
push
sub
aaa
dec
cmp
pop
sub
pop
push
ins
pusha
scas
sub
std
lahf
jnp
cmp
fstp
xor
push
push
jp
pop
iret
dec
xor
hlt
pop
icebp
jno
ret
adc
std
in
sbb
or
in
xor
and
inc
mov
ds
daa
or
mov
arpl
xchg
fld
lods
mov
retf
jnp
dec
inc
repz
retf
pop
pop
xor
and
or
mov
cmps
in
mov
ja
push
mov
out
popf
mov
jp
(bad)
mov
stos
cmp
jmp
rcr
push
sbb
jg
repnz
jns
mov
push
jns
in
jae
push
push
push
adc
dec
mov
add
xchg
mov
scas
mov
jge
or
mov
jnp
or
loop
test
(bad)
(bad)
mov
cmps
cmp
xor
pop
out
in
fild
cmp
or
push
sbb
dec
add
xor
sbb
out
popa
pop
push
sbb
cmp
cmp
neg
add
std
loope
jle
imul
sub
inc
mov
inc
push
(bad)
jmp
ret
xor
dec
dec
or
jge
xor
bound
(bad)
je
mov
jnp
arpl
repz
ja
add
and
xchg
icebp
lods
in
push
ja
leave
repz
loopne
pop
adc
inc
adc
movs
pop
cmc
mov
sbb
mov
push
pop
sbb
nop
mov
cdq
daa
xchg
inc
adc
and
mov
std
mov
cmp
mov
movs
cs
bound
lock
xor
xchg
sbb
adc
dec
jb
adc
fmul
xor
loope
jl
fs
push
fadd
mov
adc
icebp
out
cmp
fwait
in
ins
sar
in
test
mov
das
repnz
fdivr
jl
adc
push
lods
jo
xor
stos
xor
and
(bad)
lahf
mov
hlt
pop
not
pop
aaa
and
or
push
(bad)
adc
scas
cmp
push
mov
stos
leave
or
mov
or
push
and
push
cmp
out
xchg
and
repnz
mov
in
cmc
adc
aaa
xchg
pop
pop
shr
push
jp
and
adc
inc
jecxz
jbe
dec
pusha
push
dec
push
test
jl
int
ins
cmp
adc
dec
call
jp
ss
std
clc
test
int3
cmp
push
ret
loopne
jecxz
mov
xor
xchg
rol
mov
jl
(bad)
dec
dec
xor
xchg
inc
aad
mov
fbld
sbb
push
jnp
out
fld
push
imul
imul
mov
leave
vphaddwd
ss
jmp
xor
(bad)
jmp
mov
mov
jns
(bad)
or
and
mov
sub
xchg
jl
sub
pop
mov
cmc
add
or
jae
jae
test
jmp
fwait
rcr
xor
movs
leave
lds
push
adc
sub
mov
xchg
mov
or
pop
aam
sub
lods
les
adc
stos
imul
mov
scas
ja
sar
in
dec
inc
cmp
pushf
fwait
push
ins
mov
pop
mov
std
jnp
clc
test
pop
hlt
or
jno
or
mov
mov
mov
pop
push
xor
or
jo
sahf
lock
in
xchg
sti
cmc
mov
jl
or
out
cwde
fwait
or
pop
rcr
ror
test
leave
jo
or
inc
push
dec
ja
push
fst
test
test
cmp
imul
jnp
bound
sub
or
out
add
pop
ja
(bad)
dec
sub
sub
fadd
sbb
push
mov
out
add
cli
adc
sbb
(bad)
xor
mov
jbe
test
movs
jnp
push
cld
stos
dec
sub
or
sbb
sbb
pop
or
mov
fdiv
mov
add
xchg
xor
ds
jnp
shl
cmp
and
xchg
pop
movs
je
add
mov
push
add
jb
(bad)
std
mov
jae
inc
bound
sbb
jl
add
add
or
sub
jns
outs
mov
pusha
and
inc
sbb
mov
frstor
stos
mov
loop
(bad)
mov
(bad)
retf
xchg
das
jo
push
mov
pop
mov
add
ins
and
add
int
xchg
jle
cdq
pop
nop
mov
sub
pop
les
mov
xor
or
(bad)
mov
cmps
push
mov
(bad)
lods
sahf
mov
mov
rcl
pop
mov
xlat
pusha
imul
add
imul
sbb
adc
mov
cmp
jo
dec
call
xor
xchg
mov
mov
ss
sub
stos
add
fsub
inc
xor
sub
add
(bad)
jmp
xor
sbb
xor
test
mov
sbb
mov
shl
shl
mov
repz
les
jecxz
sub
jg
test
jne
std
std
daa
int3
add
mov
sbb
push
xlat
pop
add
aaa
add
push
add
adc
inc
sbb
test
jge
aaa
push
sahf
fcmovnu
jmp
mov
sbb
dec
jmp
jae
adc
and
stos
cld
and
add
sahf
jb
or
leave
mov
(bad)
loope
mov
addr16
stos
jmp
loop
sub
jecxz
mov
(bad)
sti
xor
aas
sub
or
sbb
push
dec
xchg
xor
leave
push
and
mov
ror
adc
outs
xchg
retf
cwde
lea
sti
and
repz
xchg
cmp
mov
add
rol
xchg
add
sub
aas
mov
add
(bad)
sub
cmp
mov
inc
mov
into
popf
adc
jle
data16
(bad)
(bad)
jl
sbb
add
sub
js
cdq
hlt
pop
jp
dec
fwait
mov
pop
and
out
dec
adc
mov
mov
jnp
pop
div
les
fcom
cli
adc
outs
lahf
sar
sub
mov
xor
mov
enter
js
ret
jbe
cmp
sub
push
popf
inc
push
cs
scas
mov
movs
cmp
jbe
ret
jmp
sbb
je
xchg
and
sub
fisttp
mov
(bad)
adc
stos
fiadd
xchg
adc
xchg
clc
in
scas
out
bound
fmul
shl
pop
or
out
xchg
xchg
adc
retf
mov
nop
imul
add
mov
mov
mov
addr16
test
repz
jmp
push
fisub
cmps
aas
add
ror
dec
jg
hlt
add
and
cmp
jge
mov
pop
loop
or
jg
pop
shl
xchg
pushf
mov
mov
pusha
pop
adc
sbb
call
mov
mov
inc
jg
hlt
pop
scas
inc
sbb
loope
test
jp
sub
mov
loopne
std
jae
add
ror
xor
leave
xchg
das
jmp
jns
stos
scas
retf
cwde
movs
pusha
sbb
or
jb
aad
or
xor
mov
xchg
pop
xchg
popa
and
pop
push
xchg
adc
mov
smsw
sub
mov
pop
into
stos
push
imul
xor
arpl
ja
fmul
or
push
mov
push
inc
sbb
cmp
cmps
xor
lods
test
cmp
call
ret
lods
stos
sbb
add
or
ror
inc
int3
call
xor
fld
xor
xor
imul
(bad)
pop
xchg
cld
sti
adc
fcomp
jl
fistp
sub
push
repz
enter
(bad)
xchg
in
add
cwde
xchg
jp
ror
pop
cmps
push
or
fist
dec
out
dec
xchg
test
cdq
retf
pop
sbb
shl
(bad)
mov
aaa
jae
xlat
js
xor
fsubrp
dec
jae
xchg
or
neg
xlat
jae
push
je
jge
fcmovnbe
gs
popa
jb
mov
data16
mov
sub
fs
mov
mov
push
cli
ja
pop
cmp
aam
ret
sti
repz
adc
lahf
sub
dec
cdq
mov
cmps
or
repz
in
pop
lods
xor
(bad)
push
dec
mov
outs
fcomp
jb
xor
lods
cmp
push
(bad)
jmp
pop
aam
inc
lahf
mov
ss
ds
popf
mov
call
push
cmp
enter
loope
out
dec
add
xor
or
test
add
pop
pop
imul
ds
mov
inc
mov
mov
inc
das
sub
xor
mov
pop
aam
ror
sub
out
jo
int
cwde
lds
mov
push
sbb
mov
dec
xor
pop
sub
imul
fsubr
xor
and
addr16
and
xchg
jb
rep
adc
cmp
push
push
mov
xor
movs
mov
and
inc
add
jno
cld
add
jae
xchg
cli
xchg
jge
xchg
out
neg
icebp
cmp
xor
ss
(bad)
cmp
stos
sbb
movs
int3
scas
mov
stos
(bad)
scas
mov
(bad)
out
cmps
or
and
or
and
(bad)
scas
inc
xchg
mov
inc
std
jmp
or
xor
js
jp
shr
std
mov
movs
jo
fild
call
cwde
popf
push
cmc
xchg
aam
fs
xchg
fcomp
repnz
mov
retf
xor
xor
movs
jno
sub
outs
daa
pop
rcr
not
xchg
rep
mov
jnp
cmp
mov
jge
mul
retf
popf
pop
mov
stos
sub
fst
add
jbe
or
and
inc
aas
fstp
pop
mov
in
jge
(bad)
mov
xlat
inc
dec
pop
shl
push
and
fld
xor
dec
hlt
call
push
fstp
(bad)
fistp
add
jge
dec
cmp
pop
lea
jae
push
jl
cmp
cmps
inc
add
nop
pop
out
mov
ins
mov
xlat
mov
(bad)
movs
arpl
mov
push
mov
mov
jle
mov
push
push
(bad)
add
jmp
iret
and
push
rcl
mov
cmc
enter
iret
fcom
mov
xchg
(bad)
aam
jmp
and
push
maskmovq
imul
cmp
shr
pop
pop
int3
lods
(bad)
imul
(bad)
(bad)
ins
(bad)
test
ins
addr16
and
cmp
addr16
or
push
mov
mov
mov
mov
cmp
sub
xchg
and
xchg
int
jnp
sub
ss
movs
mov
(bad)
mov
xchg
mov
(bad)
sub
jo
fcomi
pop
fadd
inc
mov
sti
ret
mov
test
push
pop
movs
jg
inc
sub
ds
xor
inc
cmc
es
pop
in
test
xor
movs
or
(bad)
fiadd
mov
fld
(bad)
sbb
and
dec
std
aaa
sbb
pop
or
pusha
je
jnp
cli
shl
imul
pop
pop
(bad)
aad
xchg
inc
jo
(bad)
push
inc
adc
retf
mov
inc
pop
pop
rol
xor
aas
(bad)
into
imul
push
push
and
es
out
lds
fnsave
shr
data16
mov
xchg
out
inc
mov
in
stc
jno
sbb
pop
es
xchg
adc
loope
and
stos
and
cmp
mov
enter
out
pop
test
mov
iret
mov
pop
aas
icebp
clc
fsub
push
es
mov
lods
(bad)
lock
xchg
stos
imul
mov
add
cs
mov
sbb
mov
(bad)
pop
or
pop
push
mov
(bad)
jp
call
sub
jb
or
stos
ret
cdq
mov
sahf
sub
lahf
(bad)
and
in
pop
sbb
sub
mov
sub
and
ja
test
ret
ret
mov
xor
adc
xor
jmp
jmp
add
and
movs
sbb
push
or
loope
popa
scas
popf
out
cmp
(bad)
jecxz
add
or
cmp
push
fcom
repz
mov
mov
sar
and
fild
mov
hlt
pop
lahf
fucomip
push
dec
out
movs
dec
fstp
jp
cmp
push
push
and
popa
jae
dec
xor
ins
adc
inc
cmps
cmp
cmc
pop
movs
ret
inc
fnsave
xor
outs
dec
iret
addr16
out
push
mov
js
lods
mov
sub
push
fwait
xor
mov
push
mov
or
push
dec
int3
pop
mov
aad
push
rcl
jmp
test
lock
fldpi
fnstcw
xor
jo
mov
lds
push
xor
and
out
sbb
mov
fiadd
cmpps
xchg
nop
push
or
repnz
mov
(bad)
(bad)
xor
jp
out
add
shl
dec
fs
inc
outs
sbb
jns
clc
loop
inc
(bad)
stos
test
cmp
xor
ror
outs
fnsave
push
jnp
pop
add
dec
(bad)
aad
(bad)
call
and
sbb
pop
push
test
pop
add
call
data16
out
push
sbb
sar
test
mov
pusha
push
push
sbb
cdq
(bad)
(bad)
hlt
pop
sub
(bad)
sub
dec
ins
(bad)
scas
gs
mov
in
in
ret
std
test
out
sbb
xchg
je
lahf
je
cmp
or
xchg
jle
mov
dec
sbb
xor
in
xchg
dec
hlt
loop
in
push
and
mov
xchg
jb
jbe
push
fsub
je
movs
dec
push
fwait
and
xchg
jmp
lods
xlat
lods
push
dec
push
cmps
add
add
inc
jae
add
pop
shl
cwde
fld
cmp
ds
movs
ss
sbb
hlt
push
cdq
inc
es
jecxz
pop
addr16
(bad)
ins
and
sub
cmp
popf
hlt
xchg
stc
pop
aaa
aam
inc
(bad)
mov
test
adc
add
loopne
push
jbe
dec
dec
sbb
cld
into
pop
mov
imul
js
(bad)
out
shr
dec
jmp
xlat
add
loopne
(bad)
aaa
or
dec
push
das
push
shl
dec
cmp
dec
in
daa
cmp
mov
rcl
pop
arpl
cmp
xchg
and
into
sti
jmp
daa
sar
test
mov
sbb
int
jbe
push
popf
and
push
or
in
jno
movs
sub
mov
test
jmp
fsubr
aam
arpl
push
and
mov
jle
lock
adc
retf
jp
int
imul
test
cmp
leave
inc
pop
xchg
push
or
dec
rcl
pop
adc
inc
int
and
push
or
mov
stos
sar
daa
test
mov
jecxz
jl
jg
adc
inc
jge
xor
ror
addr16
adc
push
ret
xlat
mov
mov
mov
inc
dec
(bad)
xchg
hlt
xchg
rcl
shr
add
pop
and
cmc
leave
ret
mov
adc
inc
and
xchg
icebp
dec
sar
xchg
ret
or
mov
sub
imul
push
jb
push
aaa
inc
mov
mov
(bad)
fsubr
ret
dec
xchg
pop
out
xor
push
sbb
adc
loopne
rol
push
repnz
mov
xor
pop
cmp
push
clc
pusha
mov
mov
jns
in
jnp
imul
outs
das
test
sahf
pop
retf
fistp
imul
inc
out
add
aaa
inc
je
xchg
imul
repnz
ficomp
push
xor
je
icebp
nop
fstp
pop
inc
adc
rcr
xlat
inc
int3
sbb
push
mov
sbb
lahf
jge
pop
xor
lods
sti
jge
retf
out
jecxz
or
pop
inc
ret
call
mov
imul
(bad)
add
xchg
mov
fiadd
outs
cdq
repz
inc
or
xchg
(bad)
imul
cmp
add
lods
sar
sub
rol
stos
mov
push
mov
adc
int
sbb
sub
repz
xchg
or
dec
arpl
js
aad
push
(bad)
sbb
cmp
inc
or
(bad)
aad
popf
std
push
or
dec
test
sbb
adc
inc
in
push
std
mov
cmps
adc
lods
jmp
mov
or
push
sahf
mov
adc
jns
pushf
sub
mov
add
push
pop
(bad)
stos
div
out
pusha
adc
shr
xchg
outs
push
loope
sti
lds
jl
out
cli
and
jmp
out
adc
aaa
jmp
and
mov
jno
sar
movs
sub
retf
ins
scas
push
push
pminub
scas
xor
dec
fwait
xchg
retf
std
icebp
mov
cwde
add
and
and
shl
fstp
aad
retf
cbw
test
pop
repz
pop
test
or
xor
int
ja
jle
xor
shl
adc
jno
mov
adc
pop
xor
xchg
cmp
dec
rcr
pop
hlt
pop
dec
fucomi
sti
(bad)
cli
test
sub
add
repnz
pop
out
lahf
cli
jg
push
mov
mov
sbb
loop
mov
sar
pop
(bad)
mov
ins
repz
movs
add
sub
addr16
fnstsw
stos
dec
ins
sub
push
push
sbb
mov
in
adc
inc
or
mov
cli
out
adc
mov
or
dec
idiv
test
dec
into
sar
mov
add
xor
pusha
dec
mov
ins
jge
pop
and
push
pop
movs
lea
dec
scas
push
ja
fwait
mov
sar
push
fldcw
cmp
mov
cmp
inc
retf
inc
adc
movs
push
mov
repnz
sbb
(bad)
jo
push
add
mov
int3
stc
call
add
xor
inc
idiv
rcr
pop
or
mov
pop
mov
sbb
and
loop
aaa
fcomp
popf
scas
xchg
xchg
cs
fisttp
push
int
leave
ret
daa
mov
enter
xchg
inc
out
mov
or
xchg
jno
add
sbb
fbstp
aas
sbb
lods
outs
imul
dec
or
jbe
sub
not
scas
mov
push
pop
xchg
inc
xchg
or
std
xlat
mov
retf
dec
pop
imul
repnz
gs
lea
rcr
(bad)
mov
inc
repnz
sti
jmp
shl
sub
cmp
mov
push
stos
mov
sub
(bad)
(bad)
icebp
cmovb
inc
bound
fisttp
mov
pop
pop
dec
sub
popf
adc
and
les
nop
adc
aad
aas
or
cmp
movs
mov
call
dec
xchg
lods
daa
jp
fadd
cld
xor
rcl
mov
out
sub
and
rcr
idiv
shl
dec
out
and
adc
mov
ss
jmp
jecxz
jmp
ja
sbb
das
out
inc
enter
fldpi
sub
add
jmp
(bad)
sub
or
xchg
xchg
mov
pop
or
test
sub
outs
dec
cmp
outs
imul
inc
xor
in
jae
dec
jecxz
jb
cli
and
data16
sbb
dec
push
(bad)
pop
gs
or
sbb
jg
inc
cmp
sbb
loopne
fnstsw
dec
xchg
fisub
popa
enter
fisub
dec
pusha
ss
jmp
(bad)
push
daa
sub
pop
adc
es
adc
and
stc
imul
and
ret
rcl
cld
add
pop
cld
push
add
xchg
cs
jo
or
xor
and
and
xor
lock
push
cmp
mov
in
sahf
xchg
js
push
or
xor
imul
add
movs
mov
and
pop
cmps
pop
int3
dec
add
ins
inc
in
push
and
cmp
ja
int3
xchg
ret
aad
call
lds
cs
loope
hlt
aad
jae
shl
mov
sbb
fwait
enter
and
loope
test
ror
inc
sbb
rcr
cmc
out
sahf
dec
iret
test
in
fstp
mov
cmp
mov
hlt
loop
pop
sub
das
dec
mov
xchg
cmp
xor
or
cli
jbe
stc
pop
jle
repnz
leave
sub
es
xor
movs
sub
jae
and
stos
loopne
rcl
adc
fwait
mov
sub
jns
jge
repnz
mov
push
fwait
cmc
jmp
icebp
test
or
adc
add
rcr
test
fsubr
sahf
js
pop
mov
aam
mov
sub
xor
ja
dec
into
leave
fild
jle
sub
ja
cmp
mov
sub
mov
pop
pop
and
cmp
test
(bad)
dec
inc
fucomi
inc
icebp
ror
mov
mov
out
push
int3
pusha
(bad)
jns
call
test
(bad)
cmp
(bad)
push
mov
xor
and
push
mov
jae
cmps
in
mov
cmc
and
pushf
and
mov
jbe
mov
stos
in
popf
es
retf
cmps
jmp
cmps
cmc
ja
fmul
in
and
sbb
cwde
cmp
push
push
scas
jnp
jmp
jg
mov
cmp
mov
aam
mov
xchg
ins
pop
cmp
pop
jge
inc
stos
inc
pop
ins
adc
xchg
add
nop
mov
add
call
dec
out
sbb
outs
mov
xchg
adc
pop
push
or
adc
push
mov
add
jnp
in
ss
cmp
hlt
xchg
xor
sub
cli
mov
jmp
ret
add
std
out
mov
and
jmp
in
aad
pusha
daa
cmp
clc
push
pop
mov
adc
add
movs
mov
cmc
(bad)
into
cmp
adc
sub
jg
push
push
and
mov
or
ss
or
jl
mov
inc
mov
fsubr
and
mov
fisubr
sti
aas
inc
or
cmp
loope
stos
pop
ins
je
mov
cmp
push
in
call
jmp
push
xchg
xor
retf
pushf
call
pop
(bad)
jl
pop
bound
mov
loop
outs
or
rcr
aas
pop
xor
ret
cdq
cmp
dec
mov
inc
shr
push
add
jno
js
test
sub
js
fmul
and
mov
sub
sbb
xchg
aas
pop
or
fst
gs
unpckhps
cmps
push
(bad)
mov
sub
fs
stos
(bad)
adc
repnz
rol
or
mov
adc
jl
lahf
xor
jp
retf
add
sbb
pop
mov
push
jb
cmp
stos
sbb
or
sbb
jnp
and
xor
add
ret
loopne
push
into
nop
dec
movs
dec
xor
mov
mov
add
pop
imul
iret
scas
push
cmps
mov
sub
bound
scas
clc
xor
out
or
lea
call
mov
and
call
pop
sbb
jle
or
test
popf
mov
call
cmps
je
jl
test
mov
cmp
push
mov
fadd
stc
push
sub
pop
xor
fnstcw
add
in
push
jo
xor
add
repnz
das
xor
inc
xchg
add
or
stc
mov
sub
shr
sub
mov
push
jbe
inc
fcomp
and
gs
push
pop
in
push
inc
jae
(bad)
mov
mov
bound
xor
sub
push
repnz
stos
call
(bad)
(bad)
xchg
sbb
and
repnz
icebp
ja
pop
add
dec
jbe
arpl
sahf
sbb
mov
das
and
or
adc
or
retf
mov
aad
mov
mov
lea
and
pusha
es
and
and
mov
pusha
push
push
mov
ret
wrmsr
adc
aad
xchg
iret
jl
inc
cwde
je
sbb
(bad)
pop
jne
mov
(bad)
mov
push
add
rol
or
rcr
mov
cmps
xchg
(bad)
out
sti
pusha
retf
lock
cmp
inc
sbb
rcr
loopne
and
movs
or
cmps
push
js
setns
lods
leave
lds
test
or
lds
push
aam
jo
std
sub
rol
es
or
leave
pop
sbb
cmp
aas
fs
sub
js
mov
pop
shr
sti
sbb
or
push
call
add
mov
out
shr
addr16
sbb
push
retf
mov
adc
jmp
stos
rcr
mov
or
mov
lock
sbb
ds
in
pop
pop
inc
and
sub
es
sub
mov
fucomip
sub
leave
out
mov
hlt
fldln2
pop
mov
push
aaa
dec
mov
retf
test
cmp
cld
retf
dec
lods
xor
sbb
into
out
or
mov
or
jbe
dec
retf
cmp
jecxz
les
or
cmp
retf
les
inc
gs
sbb
mov
aaa
adc
popf
gs
adc
mov
lods
mov
(bad)
ja
mov
iret
bound
sahf
mov
add
jle
outs
out
daa
lea
push
ds
fcmovne
fnstsw
sar
cmp
cs
mov
mov
int
inc
adc
dec
icebp
dec
clc
lods
sub
call
cmp
rcl
(bad)
outs
adc
jo
cmp
test
add
(bad)
stos
sub
lock
sysret
popa
add
ret
retf
mov
ret
mov
sbb
xlat
dec
mov
fsubr
(bad)
lods
ror
ja
and
xor
or
push
aaa
cmc
ret
inc
mov
mul
sub
or
std
dec
or
mov
rol
dec
aaa
leave
outs
stos
push
sub
push
test
out
sti
xchg
outs
jnp
call
out
jmp
xchg
mov
xor
mov
pop
and
or
mov
adc
pop
iret
movs
out
ja
sbb
(bad)
or
dec
shl
(bad)
push
xor
mov
arpl
dec
mov
shr
pop
fwait
mov
in
sbb
cmp
sub
sahf
sar
dec
call
mov
mov
mov
adc
lea
gs
popf
jge
push
inc
dec
repnz
repz
sar
fwait
stc
mov
and
repnz
cld
adc
sbb
jnp
dec
adc
(bad)
cld
add
jb
test
adc
push
adc
das
xchg
sbb
ror
fcomp
cmp
sbb
leave
mov
sub
hlt
jmp
scas
mov
lods
dec
ficom
sbb
rcr
into
xchg
pop
push
cmp
inc
cmp
lods
sub
mov
cmp
adc
jae
or
mov
mov
or
lahf
test
(bad)
std
mov
ins
adc
dec
ss
neg
int3
mov
inc
cmp
pushf
pop
or
cwde
(bad)
daa
jle
ins
xor
dec
jmp
xchg
es
daa
sbb
mov
nop
sar
inc
mov
xor
cli
or
popa
cmp
cmp
pusha
shr
dec
mov
inc
int
mov
add
sub
outs
aas
cmps
sbb
pop
out
inc
cmp
push
rcr
pop
inc
inc
cmp
dec
push
pop
outs
xchg
(bad)
push
in
fnstenvw
or
mov
call
dec
loop
mov
jno
jb
fcomp
jne
xlat
loopne
data16
mov
push
inc
xor
and
inc
mov
inc
fsubr
pop
dec
test
test
(bad)
clc
mov
push
inc
stos
aaa
clc
repnz
push
aam
or
xor
fwait
pop
pop
stos
js
mul
leave
lock
dec
mov
jbe
xor
xchg
xor
ins
clc
pop
xchg
jb
in
dec
mov
in
push
ds
sahf
test
dec
mov
aam
or
sbb
lahf
addr16
adc
daa
mov
fwait
dec
cwde
mov
jmp
arpl
mov
lods
push
adc
(bad)
push
fimul
test
mov
std
xor
in
xchg
inc
xor
mov
xlat
pop
test
inc
(bad)
xchg
mov
icebp
paddb
inc
ins
call
mov
add
(bad)
jge
in
scas
or
xor
ret
popa
or
push
xchg
ss
aad
or
int3
jg
mov
push
int3
dec
retf
cwde
jns
cmp
daa
push
les
jae
stos
sahf
pop
xor
or
lods
inc
enter
mov
ret
rcr
shl
call
adc
out
aam
sbb
stc
xor
and
cmp
dec
test
push
sbb
ret
js
ror
inc
or
into
adc
test
repz
out
pop
ds
jle
adc
jmp
mov
inc
xchg
jo
or
imul
push
addr16
js
fs
fidivr
sti
cmps
(bad)
push
mov
mov
inc
adc
popa
lahf
cmp
aad
mov
push
fst
jb
ror
sub
and
mov
push
sbb
loope
in
jecxz
std
push
bound
cmp
cli
dec
stc
fld
cmp
jmp
sub
fisttp
aas
out
(bad)
std
sbb
fcomp
fs
inc
jl
jg
pusha
mov
in
push
pop
push
dec
lods
adc
cmp
mov
pop
and
pop
rcr
mov
stos
push
jne
cmp
xor
sbb
into
jl
pop
test
and
mov
jbe
cmp
cli
ins
daa
add
inc
jl
mov
inc
xchg
int
scas
mov
xchg
push
test
fiadd
ret
dec
push
xor
pop
jmp
fnstcw
clc
mov
vrcpss
jle
ret
mov
add
lods
mov
(bad)
(bad)
rol
mov
jns
cmp
stos
in
jmp
mov
mov
add
test
pop
call
loopne
cmp
imul
daa
int
sub
imul
add
in
jae
rcl
addr16
xchg
xchg
adc
ss
mov
add
mov
mov
aaa
daa
es
cwde
pop
rcl
adc
pop
loop
(bad)
gs
out
mov
sub
jecxz
sub
loope
sub
fsub
ret
mov
push
mov
std
lods
nop
cli
jg
and
adc
push
dec
cld
xor
paddd
aas
std
ss
scas
lea
hlt
aas
sub
xchg
jb
pop
sti
xchg
push
inc
(bad)
fdivr
pop
gs
adc
mov
cmp
clc
pop
xchg
jbe
mov
das
(bad)
inc
repz
inc
ja
adc
pop
pushf
mov
popf
adc
ins
mov
rol
dec
outs
shl
in
idiv
call
jmp
repz
scas
icebp
xchg
push
mov
mov
ret
mov
imul
stos
inc
cwde
(bad)
(bad)
loopne
into
sar
mov
mov
test
mov
mov
xor
mov
pop
push
fs
cmp
mov
loope
dec
inc
call
xchg
popa
pop
adc
sbb
outs
push
mov
sbb
mov
lods
lahf
sbb
addr16
jge
cmp
xchg
enter
or
pcmpeqw
(bad)
fcomp
imul
jp
mov
mov
sbb
mov
clc
(bad)
ds
jno
xchg
ror
aad
mov
lock
xchg
push
sar
icebp
xchg
xchg
inc
(bad)
pop
mov
dec
xor
xchg
jnp
jno
in
pop
pop
aam
push
fwait
pushf
jecxz
inc
arpl
cmp
fstp
ret
adc
cmp
inc
(bad)
ins
mov
test
cmp
movs
dec
outs
sar
(bad)
and
xchg
xor
lds
pop
mov
cmp
and
jns
mov
dec
dec
push
inc
rcr
pop
sub
nop
scas
jae
pop
iret
or
out
mov
mov
(bad)
fwait
inc
add
push
iret
call
dec
popa
sbb
dec
or
idiv
jae
dec
shr
push
sub
xor
dec
sub
movs
fdiv
stc
sub
cmp
dec
dec
inc
jmp
xchg
xchg
jle
icebp
in
and
jb
pop
dec
pop
jp
pop
jge
fs
test
nop
(bad)
out
or
sub
xchg
shl
pop
sub
mov
iret
inc
test
enter
in
inc
dec
add
aaa
sbb
sbb
outs
jmp
dec
mov
shl
mov
pop
pusha
rcl
aad
arpl
push
lods
dec
pop
inc
dec
mov
or
retf
mov
ins
sub
fmulp
fwait
jp
pop
jmp
ss
inc
push
cli
loope
stos
xchg
cmp
scas
shl
sti
xchg
lock
sti
push
lods
loope
daa
sbb
xchg
gs
jnp
pop
fcom
loop
push
xor
and
rol
adc
jecxz
inc
add
rcr
(bad)
out
xor
mov
jp
test
inc
(bad)
jmp
sub
mov
or
sar
inc
hlt
cli
inc
push
dec
leave
call
(bad)
add
fimul
arpl
sbb
repz
fist
jmp
jl
hlt
mov
sub
pop
sub
and
mov
dec
cdq
and
rol
mov
or
add
or
sbb
in
push
mov
mov
sar
test
sbb
adc
push
or
std
xor
add
cld
ds
and
daa
bnd
das
xor
dec
rcr
jge
lock
xchg
jns
movs
push
cmp
or
mov
mov
icebp
ins
int3
cmp
cmp
jb
pop
xchg
(bad)
shl
stos
pop
mov
push
mov
loopne
pop
and
push
test
int3
les
cmp
addr16
or
sub
leave
cs
mov
hlt
movs
pop
fwait
loopne
push
cdq
sub
add
clc
and
dec
adc
dec
jmp
cmp
or
lea
sbb
in
std
into
out
fst
pop
test
jl
xchg
enter
pop
mov
repz
pop
daa
jmp
xor
adc
mov
ins
dec
(bad)
xor
cmp
mov
or
stos
xchg
sub
in
retf
inc
fwait
or
cs
(bad)
cli
nop
push
mov
out
cwde
mov
jp
xchg
clc
mov
push
jne
mov
rcl
lahf
nop
lahf
sub
inc
inc
movs
pop
fist
call
pusha
repnz
pop
jge
xchg
mov
add
mov
movs
jl
dec
add
cmp
adc
leave
sahf
dec
adc
mov
sbb
or
and
mov
cs
cld
sbb
lods
(bad)
dec
push
out
lahf
mov
dec
jmp
xchg
loopne
add
sub
push
or
xor
jns
sti
out
mov
repz
inc
add
mov
movs
scas
std
pop
jge
push
imul
into
inc
sbb
mov
xor
stc
sbb
xlat
mov
movs
daa
adc
xor
mov
pop
jae
cmc
pop
sub
jg
jnp
mov
ror
repnz
popa
mov
xchg
into
mov
shl
vpsubusw
pop
push
nop
in
jnp
xchg
jmp
pop
push
iret
fcom
mov
xchg
pop
and
xchg
retf
sub
mov
sbb
xchg
adc
pusha
addr16
and
cld
mov
or
cmp
mov
lods
jg
rcl
xchg
jo
push
push
jmp
cs
push
xor
sub
xor
mov
movs
into
dec
or
cmp
push
repnz
xchg
cmp
imul
pop
out
sbb
lea
jg
dec
sub
dec
dec
xor
xchg
jae
cvtps2pd
das
icebp
cmp
pop
sahf
dec
mov
mov
in
xchg
ret
adc
jg
xchg
push
mov
xor
rol
add
mov
jns
test
stc
push
dec
(bad)
jns
adc
adc
or
call
cld
movs
(bad)
call
mov
cmp
scas
sbb
rol
mov
nop
mov
fadd
push
aas
cmp
push
enter
lea
xchg
cs
sar
fcom
or
fmul
adc
fadd
(bad)
retf
gs
cmps
push
xchg
xchg
test
add
push
(bad)
leave
xlat
out
into
shr
loope
idiv
movs
dec
adc
cmp
inc
mov
cmc
xchg
mov
pop
add
dec
test
sub
pop
add
mov
cwde
push
lahf
push
push
jne
stos
ret
out
je
std
jmp
lds
loopne
dec
stos
aaa
mov
dec
(bad)
xchg
adc
pop
mov
sbb
push
push
in
outs
lds
mov
or
ins
xchg
ret
ror
sub
or
das
outs
fwait
mov
enter
clc
popf
or
jb
inc
xlat
mov
adc
cmp
cld
movs
int
fs
shr
fmul
stc
add
xlat
push
test
cmp
scas
cmp
ror
cmp
sar
loop
stos
cs
aad
mov
stc
xchg
add
inc
test
popf
cwde
and
mov
push
cli
fsubr
lds
push
mov
(bad)
call
inc
and
mov
and
adc
stos
add
sbb
sbb
mov
cmps
cmp
movs
rol
sbb
nop
sbb
gs
repz
mov
jmp
jbe
ficomp
in
ficom
xchg
sub
sbb
mov
push
push
arpl
add
ret
push
xchg
sahf
mov
ror
into
mov
in
xor
ret
(bad)
xchg
add
mov
mov
push
loope
xor
fbld
sub
daa
es
jmp
pop
repnz
sub
pop
fwait
cmps
(bad)
dec
xlat
iret
jae
cmp
mov
div
pop
test
push
mov
pop
div
dec
sahf
leave
call
mov
pop
stos
pushf
(bad)
and
test
sbb
sub
inc
push
xchg
mov
mov
inc
push
jo
in
mov
xor
popa
addr16
push
(bad)
lock
pushf
mov
adc
mov
mov
fstp
inc
pop
sub
jl
jae
imul
dec
jo
scas
loop
repz
rol
xchg
push
pop
mov
div
pop
cmps
out
add
xor
or
das
xor
adc
sub
push
cmp
push
pop
cmp
sahf
cmp
(bad)
sub
(bad)
fidiv
jne
mov
dec
shl
int3
pop
dec
lock
in
cld
lods
adc
pop
out
std
shl
cmp
inc
cmp
(bad)
int
add
sar
jmp
call
and
pushf
das
mov
(bad)
outs
test
(bad)
and
test
test
inc
mov
rcr
xchg
mov
push
cmp
enter
shl
push
bound
aas
cmp
scas
lds
repz
mov
in
jbe
and
test
ins
popa
add
cmps
xchg
enter
fs
loopne
push
inc
mov
inc
xchg
adc
ret
mov
add
ja
add
popw
popa
ins
xor
sbb
add
mov
enter
mov
add
mov
cmc
push
sub
fistp
dec
xchg
stc
push
mov
enter
int3
dec
repz
or
addr16
sti
mov
inc
jmp
jmp
jno
jle
sub
xchg
fcomp
xchg
adc
mov
xchg
call
cmp
prefetch
(bad)
push
mov
add
or
mov
popa
hlt
shr
inc
fidivr
and
imul
data16
jbe
and
xor
ins
pop
push
cmps
and
mov
fdiv
cmp
xor
lea
push
clc
pop
push
mov
push
out
jb
sti
xchg
out
xchg
out
(bad)
fild
jecxz
pop
add
push
dec
ret
dec
or
sahf
shl
jno
push
test
sti
int3
stos
sbb
fisub
dec
or
add
gs
ins
int
nop
xchg
nop
push
xor
mov
bound
mov
jae
cmp
inc
stos
out
cmps
shl
cmp
test
xchg
in
ins
stos
jno
lea
loope
xchg
mov
pusha
jle
push
ja
scas
sbb
and
adc
fadd
out
inc
enter
lds
(bad)
in
cmps
iret
mov
je
cmp
iret
les
mov
sbb
jo
es
inc
xlat
adc
inc
pop
fst
data16
jno
retf
mov
xchg
sub
iret
dec
cmp
xchg
sti
pop
add
mov
mov
or
pop
push
scas
bound
ror
mov
call
pop
ins
out
adc
push
add
lods
inc
sub
aaa
xor
(bad)
sub
rol
xchg
mov
add
stos
fcmovnbe
imul
inc
in
fldenv
dec
test
cmp
pop
sub
int
loope
loopne
inc
fwait
ins
xchg
mov
xchg
call
sub
or
cwde
jbe
ret
adc
iret
rol
les
mov
inc
add
xor
ficomp
cld
std
scas
add
lods
cmp
jo
cs
into
push
xchg
fdiv
jl
mov
les
sbb
das
popa
cmc
in
or
das
ds
int3
sbb
and
aas
scas
call
in
(bad)
stos
pop
xor
jnp
(bad)
sbb
mov
(bad)
out
mov
cmp
dec
movs
mov
daa
mov
jl
mov
jno
pushf
add
dec
lds
out
push
shl
lea
ds
and
sub
sbb
or
or
add
repz
jne
jge
jmp
stos
mov
mov
pop
dec
push
and
adc
mov
fisub
jno
stc
imul
stos
cmp
xchg
sbb
adc
pop
cmp
dec
sub
ss
jp
stos
bnd
call
out
or
xchg
sbb
mov
pop
dec
jp
or
dec
fsubr
ret
(bad)
add
out
mov
lahf
pop
push
not
jns
ins
push
mov
aaa
sti
(bad)
rcr
out
pop
adc
jge
(bad)
adc
and
cli
popf
loop
jnp
cmp
add
(bad)
aas
test
dec
cmp
or
mov
hlt
push
xchg
out
cmp
push
in
in
adc
or
pop
rcr
mov
lods
(bad)
adc
mov
ret
into
inc
and
sub
sub
jg
dec
jmp
jp
inc
jmp
push
mov
in
adc
fistp
push
mov
jno
aas
jno
ret
(bad)
jo
fisubr
daa
mov
and
in
(bad)
(bad)
sub
mov
and
int
stos
mov
push
jl
hlt
dec
inc
fnstcw
mov
mov
xchg
push
cmp
pop
loopne
push
sub
mov
inc
pop
loope
(bad)
jg
jnp
xchg
or
xor
ss
hlt
or
jp
icebp
add
push
and
sbb
or
adc
inc
inc
daa
dec
add
cmps
or
mov
cmp
mov
adc
sbb
cli
push
js
pop
repz
cmp
sar
xor
pop
shr
loopne
(bad)
loop
js
icebp
in
mov
dec
scas
add
xchg
xchg
inc
aas
test
pop
cli
sar
aam
(bad)
dec
xor
(bad)
mov
or
ficom
popa
push
push
sub
sbb
push
loop
inc
and
ret
(bad)
popf
mov
fisubr
jb
sbb
mov
jle
mov
xor
dec
lea
pop
sahf
addr16
mov
pusha
add
sahf
cmp
push
call
jns
cmp
hlt
das
pusha
aam
push
mov
and
ss
in
jge
sub
shr
arpl
neg
mov
loope
leave
mov
xchg
test
cmps
mov
cmp
push
lds
mov
jns
(bad)
mov
movs
pop
dec
and
pop
aam
inc
aam
push
in
and
ret
sbb
int3
inc
pop
es
(bad)
movs
movs
lahf
pop
iret
and
pop
jbe
push
push
fdiv
imul
into
mov
push
je
ror
(bad)
fdiv
movs
adc
push
ficom
loopne
(bad)
imul
jp
loopne
outs
nop
je
sub
inc
jmp
movs
pop
pushf
mov
repz
mov
inc
lock
and
repnz
fdiv
outs
dec
jo
pop
mov
xor
rcr
xchg
and
ror
jge
loop
inc
sub
push
jp
pop
jle
add
cmps
inc
sub
pmovmskb
rol
repnz
ss
sti
jnp
sub
(bad)
lods
mov
ja
cwde
paddq
movs
ds
test
shl
xchg
mov
jle
sbb
mov
jnp
xchg
mov
fcomip
sub
sub
fucomp
xor
in
or
cdq
cmp
outs
xbegin
cmp
mov
mov
xlat
out
pop
mov
jmp
pop
pop
adc
lods
imul
cld
push
jno
add
push
mov
adc
nop
ret
xor
std
int3
pusha
fisttp
mul
jl
icebp
ja
in
mov
sub
jl
mov
(bad)
mov
popf
mov
ret
inc
and
jl
pusha
pop
mov
or
inc
icebp
mov
inc
mov
add
js
mov
push
jl
fincstp
cmp
ss
xor
nop
dec
mov
jmp
in
push
ss
fist
dec
mov
adc
rol
xor
test
fidiv
out
adc
or
mov
scas
xor
mov
xor
xchg
fwait
imul
push
inc
rol
dec
stos
lahf
or
rcl
bound
xchg
aaa
and
jl
push
mov
pop
fstp
pop
mov
inc
push
dec
mov
xor
or
sbb
jmp
and
cmp
outs
stos
sbb
and
out
aad
(bad)
outs
mov
xor
xor
cmp
inc
inc
(bad)
jecxz
jnp
call
pop
stc
add
push
mov
dec
and
pop
push
pop
cdq
inc
pop
movs
ja
and
(bad)
jns
(bad)
mov
cmp
int3
adc
add
xchg
iret
stc
dec
fbstp
inc
add
mov
add
movs
dec
add
in
call
mov
add
stc
adc
mov
out
xor
push
shl
dec
(bad)
aam
xor
cmps
mov
sub
fsubr
mov
push
and
mov
dec
div
xlat
mov
pop
jnp
aad
enter
in
and
call
push
fsubr
and
jp
(bad)
mov
mov
(bad)
test
gs
add
rol
rol
bound
(bad)
jb
sbb
out
dec
xchg
xor
aad
les
jg
cmp
aam
jbe
dec
xchg
loopne
mov
dec
jle
ins
mov
es
xchg
leave
ss
js
jno
mov
imul
mov
in
adc
fadd
daa
sub
cwde
fs
mov
shl
push
lds
popf
cmp
add
pop
push
mov
cmps
pop
movs
mov
mov
neg
push
mov
sbb
div
add
mov
movs
loope
test
mov
dec
xlat
jo
mov
pop
test
bound
movs
loope
xchg
div
scas
fsubr
mov
(bad)
jp
ds
and
jmp
shl
mov
xchg
adc
popf
call
mov
add
sbb
add
jecxz
aaa
es
fcom
aam
sbb
fnsave
adc
push
jl
stos
mov
out
xor
jge
(bad)
fld
rol
mov
movs
sti
pop
in
clc
dec
loopne
ss
mov
push
jb
jle
mov
rcl
into
jmp
int3
div
cdq
lock
arpl
pop
(bad)
xchg
loopne
and
inc
mov
jp
xchg
lahf
mov
scas
outs
jle
cdq
je
xor
mov
add
fwait
sub
pop
fadd
push
lahf
adc
or
jbe
sub
adc
push
mov
cmp
cld
mov
loop
jae
ret
xor
add
cmp
aaa
pushf
jnp
dec
(bad)
xchg
test
xchg
jo
bswap
mov
repz
pop
fild
cmp
js
scas
xchg
hlt
shl
sbb
enter
aad
das
xchg
repnz
div
and
push
push
mov
rol
sti
inc
fnstcw
push
popa
mov
xor
retf
xor
in
ja
dec
sbb
iret
sub
pop
fcmovu
hlt
jge
mov
jo
scas
inc
mov
sub
stc
lock
inc
jle
xor
add
test
and
movs
pop
inc
cmp
mov
cmps
dec
arpl
dec
clc
xchg
pop
adc
adc
pop
aaa
pushf
test
sahf
js
jl
shl
xchg
dec
push
stos
inc
or
jle
xchg
test
sbb
jns
mov
mov
fsub
sbb
lock
mov
lea
sub
push
lods
and
add
add
xlat
or
into
xor
enter
xor
das
bound
arpl
retf
lods
fwait
shl
mov
mov
fwait
es
jp
mul
ret
(bad)
xchg
sti
fidivr
pop
xchg
out
mov
je
jge
sub
jb
out
sahf
sbb
cmp
cdq
ror
push
bound
sub
pop
add
xor
sub
xchg
bound
sub
pop
jge
stos
add
sub
push
pusha
cdq
rol
ror
shl
scas
adc
cmps
das
xchg
jl
and
jle
xchg
xor
sbb
lock
or
and
into
cmp
pop
popf
lods
jmp
push
mov
pop
stos
das
mov
gs
pusha
int3
pop
mov
mov
inc
call
push
mov
loopne
jp
sub
fwait
leave
mov
sub
or
or
lea
mov
loope
aas
jmp
cmp
inc
jmp
dec
out
ja
dec
and
jb
push
dec
sbb
jno
adc
push
mov
mov
sti
mov
or
movs
push
xor
mov
mov
call
(bad)
or
push
mov
retf
sbb
mov
ja
aaa
or
sbb
jmp
sub
mov
clc
inc
pusha
sub
js
repnz
sub
push
stc
sbb
jmp
adc
test
inc
cmp
mov
xor
sub
neg
inc
scas
rcl
jp
mov
pop
cmp
retf
jae
lahf
in
aad
cwde
fild
idiv
cmp
push
sbb
cmp
inc
cmps
mov
out
rcl
sti
int3
push
mov
dec
enter
call
xor
jg
mov
jno
aaa
out
leave
inc
cmp
jg
and
xchg
nop
xchg
cmp
gs
jp
cmp
aas
mov
inc
jb
cmp
repz
push
out
push
xor
ret
test
(bad)
fwait
cmp
mov
push
inc
and
lds
xlat
fnstsw
fs
es
dec
mov
popf
fwait
sub
pop
sahf
mov
retf
retf
adc
(bad)
fsub
fsubr
inc
or
imul
dec
mov
adc
fs
test
push
pusha
(bad)
stos
pop
dec
cvtdq2ps
and
hlt
push
data16
push
int3
sub
sub
inc
adc
fisttp
into
repz
pop
inc
add
loopne
sub
and
ins
mov
jne
ss
add
pop
movs
sub
jns
jmp
cmps
fbstp
pusha
dec
pop
lds
add
xor
cmp
or
xchg
lds
xchg
cli
mov
and
add
(bad)
jbe
lock
sub
addr16
push
popf
mov
pop
cld
pop
arpl
cmp
mov
call
arpl
cmp
inc
loopne
aam
cli
mov
jo
xchg
fistp
mov
and
imul
sbb
aas
sbb
sub
add
ds
je
adc
mov
sbb
jg
mov
test
push
and
xor
inc
add
and
shr
ins
cmp
mov
movs
inc
cmp
and
sbb
rcl
adc
call
inc
xchg
or
jno
sbb
cmp
movs
lahf
pop
and
mov
lahf
iret
inc
sub
loope
pop
or
or
shl
jp
pushf
pop
dec
ret
(bad)
xchg
inc
out
repz
mov
test
dec
inc
cmp
jo
popa
aad
loopne
jle
aad
cmp
sbb
dec
cmp
inc
cmp
cmp
in
lds
in
data16
pop
mov
mov
inc
jo
and
mov
nop
add
inc
inc
(bad)
xchg
jmp
stc
scas
xchg
jmp
cmp
out
jecxz
(bad)
pop
das
or
loope
add
add
stc
mov
or
retf
sbb
ins
pop
xor
pop
cld
mov
call
fdivr
mov
ins
sbb
std
js
jmp
pop
lea
data16
ret
and
aas
retf
sti
inc
lods
add
ins
pop
scas
rcl
movs
pusha
xor
jp
mov
mov
mov
enter
cmp
jne
xchg
sub
shl
jne
mov
inc
sub
xchg
push
int
stos
pop
adc
arpl
sub
add
retf
xor
icebp
ficom
mov
dec
sbb
arpl
test
adc
mov
cld
or
xlat
(bad)
and
mov
outs
jmp
sahf
stos
or
fnstenv
ins
arpl
lea
cdq
mov
mov
add
idiv
cmp
jb
adc
in
sbb
mov
mov
rcl
and
cmp
mov
aaa
dec
fistp
and
inc
scas
(bad)
adc
push
sbb
cmps
push
mov
rcl
stos
mov
retf
retf
adc
test
movs
clc
fisttp
adc
sahf
push
push
or
pop
int
and
pop
jo
or
in
ret
test
int3
fldcw
push
(bad)
(bad)
xor
scas
lods
sbb
(bad)
lods
imul
add
add
call
cmp
inc
lea
fs
popf
aas
in
xchg
int
cmp
push
inc
adc
xchg
xor
pop
fadd
movs
inc
addr16
ficomp
adc
mov
mov
adc
mov
adc
jmp
adc
mov
scas
and
xchg
retf
push
jns
enter
cmps
movs
sbb
sub
cmp
xchg
jns
je
test
inc
ss
add
test
pop
xchg
jno
ins
std
mov
into
adc
bound
fnstsw
je
mov
in
dec
(bad)
pop
mov
dec
mov
jno
ret
jmp
xlat
ds
scas
mov
pop
scas
add
xchg
push
or
cmovg
retf
mov
in
test
scas
in
hlt
lods
and
mov
jmp
mov
mov
jns
cmps
cmp
mov
std
xchg
xor
sub
mov
iret
in
int3
pusha
inc
pusha
jns
ret
shl
movs
xlat
jne
pushw
cwde
push
fiadd
mov
lods
rcl
dec
sub
aam
dec
sbb
fnstcw
dec
mov
mov
pop
and
jne
pop
lahf
jl
loop
and
sbb
jle
shr
push
inc
inc
cli
push
inc
dec
pop
push
call
out
cmp
jp
test
scas
mov
xchg
fist
cmc
push
jle
arpl
or
dec
test
or
pop
jo
push
inc
xchg
add
leave
and
mov
les
leave
push
adc
and
pop
gs
adc
add
cmps
test
popa
icebp
sahf
das
cmps
push
aas
sub
pop
aas
mov
adc
(bad)
and
rcl
or
retf
sbb
or
xor
ins
loope
int
jmp
jae
xchg
dec
push
jecxz
loopne
jle
mov
hlt
inc
(bad)
in
(bad)
das
mov
ror
bound
ja
sbb
adc
push
outs
jge
movs
scas
ss
pop
push
push
mov
jle
or
clc
outs
xchg
ret
mov
jmp
jg
neg
imul
stos
mov
sti
push
sbb
imul
dec
mov
das
arpl
jne
push
scas
icebp
retf
test
sbb
(bad)
xor
push
mov
add
xchg
popa
xor
fadd
imul
test
jl
mul
inc
sahf
adc
push
leave
cld
push
scas
test
stos
cmps
rol
push
adc
test
xor
ror
adc
inc
adc
movs
dec
pusha
outs
out
pop
jmp
jge
adc
xchg
lds
inc
retf
push
dec
pop
inc
cmps
push
test
inc
xchg
add
dec
mov
mov
ret
push
push
in
icebp
push
xchg
xchg
fistp
xchg
inc
lods
push
jl
stc
(bad)
push
lods
cld
out
sbb
xor
mul
pop
jle
data16
in
push
sub
mov
mov
cld
rcl
(bad)
cmp
fwait
out
jne
or
push
out
sbb
js
sub
scas
arpl
call
arpl
push
(bad)
iret
fld
dec
fild
mov
in
mov
adc
(bad)
add
mov
xlat
mov
fst
xchg
jmp
cs
xor
rcr
push
mov
cmp
je
and
int3
sub
shl
loope
gs
jg
scas
out
pop
aaa
mov
mov
cmc
adc
in
mov
pop
shr
or
(bad)
iret
scas
cmps
sbb
xchg
mov
stos
enter
sar
pop
xor
cmps
dec
add
hlt
or
add
xchg
fld
sbb
pop
popf
mov
sub
sub
push
mov
lock
neg
add
inc
aam
aas
sahf
ins
dec
fs
ret
imul
pop
cmc
push
retf
fwait
dec
out
daa
fnstsw
fidivr
shl
nop
sub
mov
sbb
mov
mov
mov
cli
xchg
hlt
adc
xor
out
popf
imul
mov
push
push
xor
test
sar
ja
loope
sbb
push
xor
inc
ror
fist
stos
mov
xchg
adc
or
mov
cmp
outs
xchg
retf
push
iret
or
lds
(bad)
shl
jnp
add
jg
dec
push
inc
push
not
outs
and
fst
fisttp
push
clc
fiadd
sti
inc
cmp
xchg
(bad)
call
xor
jle
lds
adc
imul
xor
iret
(bad)
jp
jmp
loope
daa
xor
stos
imul
data16
cmc
sbb
and
hlt
mov
pop
cld
dec
jae
xchg
mov
enter
cmp
int3
sub
popa
xchg
sub
mov
test
mov
jp
mov
fcom
sub
mov
outs
xchg
add
mov
cli
jecxz
scas
ret
mov
loop
ror
xchg
mov
sbb
sbb
dec
pop
jns
jb
inc
and
jmp
add
or
and
mov
mov
loopne
sub
pop
pop
add
jge
sbb
ds
outs
cmp
pop
sub
xchg
retf
dec
jo
retf
cs
mov
push
or
repnz
sahf
scas
mov
ja
mov
mov
or
call
cs
jmp
mov
and
out
retf
xchg
xor
enter
aad
push
pusha
loope
pop
adc
jae
repz
or
xchg
jecxz
into
fstp
cmps
jle
mov
push
mov
inc
sub
jmp
or
(bad)
push
mov
add
xlat
xchg
dec
pop
scas
mov
push
xchg
fucomip
retf
mov
sar
ret
jg
shl
xchg
dec
push
pop
pushf
neg
mov
push
jne
cmps
stc
mov
add
xor
cmps
cmp
mov
mov
mov
xchg
push
and
push
ret
in
xchg
jge
fcmovnu
int
movs
jl
sub
sbb
push
movs
and
mov
fstp
xor
rcl
repz
icebp
int3
test
outs
ins
xor
xchg
mov
dec
retf
fisttp
or
adc
xchg
int
sbb
(bad)
int
les
stos
dec
jl
stos
pop
mov
dec
inc
daa
int3
scas
scas
inc
adc
imul
cmps
xor
push
aas
addr16
je
pushf
inc
aam
pop
es
add
cdq
cs
call
add
jo
push
xchg
add
sub
call
inc
cmp
stos
inc
fwait
gs
ds
leave
call
cwde
rcr
mov
add
jp
xchg
sub
inc
push
(bad)
sub
dec
cmp
xchg
push
inc
fmulp
in
in
dec
jns
sahf
adc
lods
and
aas
test
inc
jno
call
cmps
movs
mov
push
iret
(bad)
out
movs
sbb
call
mov
lahf
scas
sbb
div
mov
inc
mov
add
jge
shr
shl
in
dec
cwde
mov
sahf
loopne
shr
test
retf
cmps
mov
pushf
repz
sbb
pop
call
push
enter
cmp
mov
add
adc
sbb
scas
stos
mov
xor
stos
push
dec
in
dec
or
call
or
mov
gs
sti
push
loope
cmc
stos
test
test
mov
pop
enter
push
aas
hlt
jmp
sub
xchg
or
arpl
xor
push
add
mov
pushf
dec
inc
mov
pop
aam
and
pop
mov
outs
jp
xor
popa
loop
pop
cmp
mov
jecxz
xchg
ss
inc
(bad)
jp
(bad)
or
ins
ror
jb
jmp
xchg
pop
rcr
pop
jle
aaa
or
sbb
imul
je
movs
adc
mov
mov
add
jns
adc
push
jl
ffree
mov
(bad)
cld
fiadd
sub
jo
adc
sar
scas
add
lods
stos
add
js
xchg
es
call
mov
jl
xchg
push
push
adc
sbb
hlt
fsubr
or
xlat
clc
pop
cmp
dec
stc
xchg
(bad)
scas
pop
stos
scas
add
cmp
lods
movs
aad
sub
mov
es
cs
push
out
inc
test
mov
dec
mov
cli
stc
jae
push
adc
retf
jb
test
pop
sbb
cmc
add
cmp
gs
sub
mov
mov
(bad)
mov
xor
sbb
ins
sub
cld
sub
sub
outs
add
out
inc
addr16
leave
mov
(bad)
jmp
dec
dec
loopne
clc
xchg
jmp
jl
fistp
(bad)
repnz
ins
xchg
pushf
fs
xchg
sbb
cdq
clc
fwait
in
cmp
mov
or
inc
ds
jnp
mov
call
mov
mov
ret
and
test
hlt
xchg
dec
push
push
shr
dec
adc
dec
mov
or
fnstcw
mov
jmp
ja
es
pop
jnp
xchg
add
mov
int3
adc
mov
inc
mov
xchg
iret
jbe
bound
add
sub
retf
je
leave
cs
push
mov
loopne
mov
adc
sbb
xor
inc
sbb
pop
jmp
push
pop
push
mul
push
enter
push
out
push
call
jg
mov
push
cmp
push
xchg
lods
adc
mov
cli
push
fst
and
ins
dec
scas
jbe
sub
jg
les
mov
(bad)
jnp
movs
adc
cmps
sub
mov
jp
bsf
xchg
icebp
pop
mov
scas
sub
outs
sub
movs
xor
pop
loopne
push
fwait
mov
out
xor
jle
aas
mov
jmp
sub
push
rdmsr
les
inc
aad
mov
pusha
xchg
rcr
mov
cmp
cmp
stc
lock
jne
or
jmp
clc
addr16
sbb
nop
mov
jnp
jg
add
add
in
adc
pop
dec
fwait
jp
pushf
jb
add
or
sbb
movs
out
int
rol
mov
cmp
mov
popa
mov
(bad)
push
mov
xor
push
adc
jp
dec
xlat
rcr
inc
jae
test
repnz
lahf
(bad)
fnstenv
lock
movs
call
jbe
mov
cmp
nop
inc
xchg
nop
jp
or
sti
cli
dec
and
jb
fwait
xor
jle
xor
popf
dec
and
bndstx
rcr
out
cmp
or
das
ret
push
nop
shl
sti
aas
data16
cs
repz
out
repz
xchg
mov
movs
pop
pop
xchg
test
xchg
add
test
aam
hlt
int3
fwait
ins
mov
and
inc
jb
lahf
sbb
imul
xchg
test
push
jno
mov
neg
daa
retf
pop
cmps
cli
test
cs
lock
push
outs
les
cwde
mov
hlt
pop
and
cs
pop
mov
xchg
in
mov
jnp
jecxz
or
cmp
mov
cmp
xchg
jo
xchg
cli
pop
sub
mov
xchg
xchg
cmp
icebp
or
and
nop
add
pop
jmp
mov
mov
std
pop
push
fs
pop
mov
xchg
fwait
stc
retf
pushf
xchg
jmp
add
or
lods
cmc
cmps
cmp
cwde
(bad)
dec
rcr
int
mov
fwait
hlt
addps
or
ret
sar
outs
les
inc
mov
adc
mov
dec
test
mov
rcr
pop
test
rcr
xchg
pop
out
push
xor
mov
mov
mov
sbb
ret
or
fidiv
xchg
jo
dec
bswap
es
repnz
jle
xlat
xor
or
sub
(bad)
call
stos
ja
dec
out
sbb
out
mov
adc
add
jnp
mov
mov
ja
push
adc
(bad)
mov
mov
jno
sahf
loop
pushf
leave
ret
mov
cmp
pop
and
or
pop
inc
fldlg2
mov
dec
jg
inc
hlt
imul
cs
and
inc
inc
or
jmp
or
(bad)
push
stc
adc
add
xor
sbb
jecxz
add
mov
stos
sbb
stos
dec
repnz
cmp
je
hlt
mov
cmp
in
ret
xor
pop
sub
pop
inc
mov
push
sub
sub
and
add
mov
cmc
jecxz
(bad)
pop
xchg
or
dec
mov
pop
out
mov
push
sbb
fmul
shl
sti
xor
les
iret
fisttp
sbb
stos
adc
repnz
adc
int
mov
sub
and
mov
dec
(bad)
lds
add
sbb
imul
add
cwde
scas
pop
adc
jb
retf
inc
mov
cmp
xor
in
mov
das
sti
loop
fprem1
sub
(bad)
pop
sub
out
clc
inc
fld1
imul
mov
outs
mov
mov
mov
(bad)
push
loope
aaa
rcl
or
lods
test
nop
dec
(bad)
aaa
ins
fnsave
fbstp
call
pop
fimul
pop
test
div
aam
xchg
(bad)
cli
jo
add
or
imul
rol
xchg
ret
fld
outs
xor
aas
ins
out
sahf
shr
xor
call
jbe
lock
es
xchg
add
mov
stc
jns
add
or
or
dec
cli
xchg
cmp
dec
call
loop
mov
ja
call
xor
adc
mov
jle
mov
shr
push
fsubr
push
push
xchg
enter
rcr
fdiv
lock
je
pop
and
sub
or
mov
fiadd
jnp
add
je
adc
mov
cmc
mov
pusha
mov
clc
in
sub
xchg
sub
sub
(bad)
mov
mov
pusha
xlat
jne
jmp
movs
stc
pushf
and
aad
sub
mov
pop
lea
imul
add
ret
ss
xchg
or
jmp
pop
adc
enter
and
mov
dec
mov
gs
int3
mov
iret
lea
add
sbb
or
cmp
loop
shr
pop
nop
or
pusha
out
cmp
aas
fdiv
jmp
loope
into
lods
mov
xchg
jnp
retf
ds
in
inc
aas
repnz
dec
mov
inc
out
mov
fnstcw
addr16
adc
lods
mov
xchg
(bad)
xchg
popa
mov
dec
push
jae
out
jnp
movs
ins
loopne
xor
(bad)
in
out
jmp
cli
mov
gs
ror
int
bswap
icebp
adc
stos
and
mov
or
add
adc
mov
js
mov
cwde
mov
inc
fstp
ret
push
sub
loopne
add
mov
leave
xor
inc
cmps
dec
fadd
icebp
cmp
jg
test
test
jmp
xor
adc
cdq
mov
xchg
aam
jmp
cmc
daa
clc
adc
sbb
adc
jecxz
ins
popf
push
rcr
jae
mov
sub
jecxz
ins
xor
daa
mov
mov
das
add
cld
mov
and
div
fstp
cdq
mov
xchg
mov
xor
jecxz
lds
and
mov
jle
scas
test
mov
xor
mov
fxch
hlt
pop
push
push
mov
xchg
into
stc
xchg
mov
xor
pop
retf
sub
inc
aad
cmps
sub
mov
inc
or
stc
aam
pushf
call
data16
adc
adc
sub
jmp
and
je
or
mov
sbb
lds
cmp
mov
cmp
or
sahf
jmp
mov
mov
xlat
scas
movs
mov
adc
ror
out
ds
imul
mov
into
adc
mov
push
xor
popa
jno
push
clc
xor
pop
data16
dec
fcomp
clc
sub
icebp
cmp
push
dec
arpl
xlat
xchg
jmp
and
jmp
daa
cmp
dec
sahf
sbb
push
and
loope
mov
mov
fimul
retf
mov
or
push
push
cmp
and
shl
repz
fdivp
cmp
imul
cmc
cmp
movs
cmp
int3
mov
ins
lea
shr
bnd
xchg
cwde
push
or
sub
fstp
ret
aam
lds
adc
add
lds
out
jno
adc
sub
add
adc
movs
pop
retf
pop
pop
lahf
lock
fcmove
mov
mov
(bad)
les
mov
jge
in
mul
xor
(bad)
(bad)
stos
pop
movs
iret
shl
ss
jno
sbb
pop
jecxz
int3
jp
js
mov
or
or
fld
push
mov
popf
dec
fidiv
sbb
and
ins
mov
sbb
push
popf
inc
xor
fisttp
push
xchg
repz
jle
stos
add
inc
fbld
and
out
add
add
out
xchg
push
jle
and
sub
inc
pop
pop
or
jecxz
jecxz
aad
out
cmp
test
mov
and
and
fidiv
repnz
rcr
loop
or
or
je
in
push
sbb
lods
xor
cmp
mov
sbb
mov
shl
mov
mov
in
push
or
aam
cmp
push
lds
(bad)
mov
push
ret
scas
sbb
loop
mov
mov
aaa
(bad)
inc
fisubr
cdq
jbe
dec
leave
scas
icebp
popf
sub
int3
mov
cmp
jno
mov
mov
jle
add
and
pop
push
(bad)
mov
int
retf
pop
data16
std
ffreep
and
je
dec
xchg
call
out
mov
cs
in
shl
jno
call
inc
sub
aas
arpl
fidivr
sub
mov
pusha
inc
ret
mov
inc
rol
test
or
popf
fst
jl
rcl
push
cdq
sub
jl
mov
jo
rol
or
xlat
xchg
pop
mov
pop
adc
pop
mov
icebp
enter
dec
jmp
sar
xor
push
add
in
das
push
repz
pop
jp
mov
aam
mov
ja
sub
cwde
or
iret
into
xlat
mov
sub
sar
(bad)
popa
es
lahf
in
jbe
shl
jl
and
xchg
xchg
stc
jne
ret
mov
leave
jmp
cmps
lock
sahf
icebp
jg
xchg
leave
and
xor
popa
jecxz
add
mov
in
mov
pop
pop
push
push
sbb
pop
mov
jg
sti
dec
in
mov
sbb
sahf
jmp
into
pop
mov
sub
xor
cmc
(bad)
(bad)
fdivr
fs
sub
(bad)
jns
sbb
loop
mov
mov
cli
sbb
test
scas
imul
mov
pop
xor
jne
test
sbb
or
mov
cdq
push
stos
sub
cmp
pop
cld
pop
ds
inc
or
cli
aaa
pop
(bad)
xchg
xchg
inc
ins
ror
sbb
hlt
pop
adc
or
dec
fidiv
pushf
int
loope
inc
mov
call
out
aam
jle
pop
mov
data16
push
popf
inc
leave
or
or
sahf
movs
and
push
lods
movs
adc
mov
int3
pop
dec
sbb
sub
xchg
imul
je
add
fwait
sbb
push
sbb
xor
mov
fsubr
cmp
fistp
push
cmp
sub
call
adc
std
sub
stc
stos
call
(bad)
fsubr
mov
(bad)
mov
mov
sbb
ss
add
jp
(bad)
(bad)
sbb
dec
(bad)
adc
cmp
retf
imul
out
ret
cmp
cdq
out
jp
cmc
(bad)
push
push
punpckhbw
mov
int
sahf
sbb
outs
mov
or
mov
jb
rcl
outs
inc
inc
js
sahf
adc
adc
dec
lods
ficom
sub
aas
inc
jg
xlat
mov
dec
xor
pop
mov
mov
jmp
pop
cmp
pusha
dec
call
not
fimul
int3
xchg
sbb
pop
test
xor
mov
call
imul
mov
mov
jecxz
push
cmps
jo
cmc
mov
repz
pinsrw
js
or
pop
pop
dec
sbb
xchg
adc
mov
push
mov
icebp
cmps
nop
jmp
or
pop
xchg
adc
xor
cdq
cmp
fimul
sbb
pop
mov
jle
jno
mov
mov
sub
scas
xor
rol
sub
pop
test
mov
popf
pop
cmp
stos
pop
dec
retf
mov
xchg
mov
(bad)
cmp
inc
or
cmp
or
loope
scas
or
(bad)
jb
xchg
sbb
les
sub
mov
loop
call
in
aaa
mov
repnz
jo
dec
aas
into
pop
add
pop
js
xchg
std
cmp
dec
xor
rol
adc
xchg
mov
setne
repnz
jbe
test
call
aaa
mov
push
cmp
dec
or
and
adc
sahf
adc
cmp
loopne
loope
cmp
xor
repz
or
cmp
test
out
(bad)
scas
call
mov
dec
add
pop
retf
add
pop
out
addr16
add
mov
add
add
outs
or
rcr
fadd
mov
cmps
xor
jecxz
bound
jmp
mov
shl
xor
lds
jne
jle
neg
mov
repnz
cmp
fistp
mov
xchg
mov
and
popf
pusha
adc
outs
ret
pop
push
(bad)
mov
xor
pop
add
mov
mov
dec
retf
es
inc
call
ss
jecxz
inc
mov
dec
mov
cmps
xor
mov
lock
sbb
inc
dec
pop
jp
jae
je
or
clc
jp
add
mov
test
cli
sbb
xlat
mov
bound
out
enter
(bad)
sti
cmp
adc
push
(bad)
mov
sub
pop
fdivr
adc
jno
fldcw
sbb
(bad)
add
fcmovnbe
push
xchg
mov
cmc
push
es
sbb
jmp
and
stc
xor
stos
sbb
(bad)
mov
sgdtd
cmp
xchg
repz
mov
cmps
cmp
mov
test
cmp
push
lahf
aas
lahf
sbb
adc
call
jno
or
sub
mov
mov
inc
jmp
sbb
adc
inc
js
sub
cmp
and
and
loopne
test
cli
dec
imul
jmp
and
addr16
jl
jo
cdq
test
(bad)
int
mov
sbb
addr16
dec
(bad)
mov
jecxz
add
nop
jmp
fnstsw
fild
xor
ret
sub
or
add
(bad)
ja
jns
loop
jmp
sub
jl
js
mov
mov
fdiv
cmp
ror
mov
or
and
mov
fidivr
ins
mov
into
push
out
inc
push
sti
leave
xor
std
lds
sahf
iret
cmp
and
lds
jbe
xchg
fistp
push
and
or
inc
mov
cmc
jne
and
or
(bad)
pop
int
push
cmps
lea
inc
pop
iret
mov
lock
es
and
and
aam
imul
push
test
lea
les
pop
sbb
xor
enter
xchg
and
push
pop
std
int
jl
arpl
outs
or
psrld
add
mov
dec
fimul
test
test
lods
cmp
aaa
fistp
sbb
push
adc
fstp
push
xchg
xchg
sub
(bad)
xor
scas
pop
into
mov
dec
je
inc
jp
sub
out
fwait
stc
mov
xor
jnp
xor
xchg
outs
fwait
and
test
jae
xchg
aam
lea
lock
leave
pop
mov
inc
fs
cmp
retf
aaa
and
sahf
int
add
sahf
xlat
mov
ds
mov
cld
sbb
mov
pop
mov
lea
rcr
push
pusha
lahf
data16
sbb
stos
xchg
cmp
fisubr
shl
jmp
hlt
and
mov
mov
mov
cmp
cmps
sub
or
or
xchg
into
int3
das
loope
mov
div
jno
cwde
lds
jp
aad
push
imul
cli
push
stc
xor
cmp
retf
sub
and
aam
cmp
lods
scas
push
ret
push
jns
dec
xor
mov
cmp
int3
push
or
jg
loope
xor
(bad)
sbb
sbb
dec
or
mov
or
test
mov
xchg
jo
repz
mov
jno
outs
stc
inc
adc
rcl
lods
push
(bad)
inc
mov
cmp
push
call
vrsqrtps
sub
ds
das
inc
in
sbb
push
es
cld
fdivr
sub
push
out
lahf
bound
iret
lods
inc
pushf
ret
mov
out
shr
ss
std
and
cmp
rcl
sub
clc
inc
jmp
or
pop
in
sub
bound
xor
sbb
mov
ja
mov
ja
add
adc
mov
out
adc
or
push
nop
push
rcl
mov
adc
push
cmp
test
dec
aas
ds
mov
jmp
hlt
loope
inc
mov
retf
sbb
(bad)
icebp
leave
into
aam
ss
stos
sub
popf
cmp
adc
lods
test
add
les
cmps
mov
sbb
and
aam
mov
mov
jo
add
jge
cmc
(bad)
cmps
push
shl
scas
pop
(bad)
inc
cmp
xor
xor
sub
inc
jp
out
jg
cli
mov
jmp
sar
push
pop
in
cdq
out
inc
mov
jl
sahf
mov
xchg
mov
xlat
fcom
jecxz
dec
dec
adc
iret
scas
inc
cmp
push
pop
sbb
jmp
ret
mov
in
mov
sub
xchg
enter
imul
bound
mov
sbb
push
mov
repz
clc
push
pop
adc
push
sbb
and
xchg
cmp
loopne
loope
xor
scas
ja
test
fmul
xchg
push
pop
push
fist
movs
jne
push
lea
iret
faddp
(bad)
xchg
mov
mov
outs
mov
jmp
adc
(bad)
into
mov
pcmpgtw
loope
mov
push
pop
(bad)
pop
dec
pop
rol
loopne
push
xor
(bad)
aam
add
sbb
and
mov
cmp
in
sub
or
les
gs
jae
mov
test
mov
dec
(bad)
dec
enter
jmp
dec
push
les
inc
lea
icebp
push
push
nop
out
sub
mov
jmp
sahf
inc
les
cwde
mov
dec
mov
in
push
ficomp
or
xchg
aam
pop
jae
sub
jmp
outs
dec
ret
pop
out
ret
mov
push
dec
enter
icebp
jge
add
movs
jbe
push
enter
(bad)
stos
aam
(bad)
fidivr
std
rcl
cmp
repnz
ret
enter
call
xchg
je
loopne
push
cld
mov
xchg
and
sub
stc
or
fstp
retf
inc
arpl
lahf
arpl
call
dec
mov
cld
sub
inc
ror
adc
lea
stc
or
mov
jns
mov
or
xchg
scas
jmp
xchg
cmp
ret
retf
add
push
xchg
ja
in
jno
sub
imul
and
in
shl
inc
nop
adc
and
retf
mov
jg
stos
add
jle
addr16
add
pop
mov
sbb
dec
nop
adc
mov
shl
popa
aam
into
aad
mov
ins
mov
or
xchg
add
test
or
daa
jmp
shr
inc
mov
fist
test
or
iret
pusha
movs
ucomiss
mov
les
xchg
inc
sti
hlt
mov
stos
clc
inc
sub
in
adc
call
cdq
xor
ins
imul
test
ss
aas
xor
idiv
inc
les
mov
repz
test
(bad)
mov
inc
cmp
iret
mov
and
xchg
xchg
hlt
push
push
out
xor
test
sub
aad
push
retf
sar
mov
inc
cs
js
sbb
and
xchg
pop
mov
dec
call
xor
or
jecxz
and
loop
jns
test
mov
fcomp
int
ds
inc
mov
inc
ins
je
enter
adc
dec
mov
push
std
jl
add
inc
ins
popf
add
or
xchg
mov
xor
int
fcomp
sub
mov
add
popa
aad
and
xchg
adc
xor
xor
and
or
dec
xor
sub
stc
ins
mov
xor
les
xchg
mov
int3
adc
cli
aas
into
xchg
cmc
jo
mov
lods
in
test
sbb
xor
xchg
jg
fdiv
xchg
xor
add
sub
(bad)
in
cmp
sbb
cmp
test
inc
mov
mov
cmp
push
xchg
fdiv
cwde
push
pop
xchg
mov
dec
not
adc
cmps
fiadd
rcl
int
and
jo
xlat
movs
jecxz
cmp
into
stc
popf
in
push
out
push
inc
pop
mov
xchg
lock
sub
cmp
mov
xchg
mov
test
add
and
cmp
sub
adc
test
cmp
add
inc
stos
aad
jg
sbb
cmps
cmp
movs
mov
or
sar
xchg
push
fninit
lea
repnz
jmp
popf
call
xchg
fist
jb
pop
add
sub
inc
push
cmp
dec
test
sbb
scas
pop
outs
dec
jmp
(bad)
cld
xor
sub
or
or
fidivr
popa
je
inc
and
adc
pop
sbb
add
aad
sbb
fdiv
stos
arpl
cs
ror
and
aaa
push
xchg
mov
popa
cmp
sub
dec
dec
das
push
ror
jg
sub
ja
xchg
xlat
sbb
neg
in
nop
xor
mov
bound
ret
mov
jae
std
(bad)
lock
cld
add
sub
popf
out
cmp
push
dec
pushf
fld
fwait
mov
cmps
cwde
ja
loop
mov
call
pusha
xor
loope
and
outs
iret
jne
jmp
pop
ficomp
rol
dec
xor
pop
fsubp
mov
pop
add
push
imul
retf
in
pop
imul
dec
sbb
daa
je
test
enter
icebp
push
inc
sub
push
pop
push
(bad)
mov
cmovnp
xor
inc
cli
addr16
fisub
push
and
sbb
adc
push
mov
dec
fisttp
xchg
fiadd
test
stos
fistp
push
dec
jmp
(bad)
mov
xor
(bad)
(bad)
(bad)
xchg
add
push
sub
xchg
int
fisttp
push
xor
lea
loopne
inc
sub
out
add
pop
inc
mov
rcl
sbb
push
dec
pmaxub
mov
sbb
ret
aaa
pop
cmc
jne
xchg
cdq
ins
mov
retf
(bad)
jge
jo
sbb
push
adc
adc
xchg
cdq
cwde
fldcw
xchg
push
mov
in
inc
jg
sbb
lock
xchg
dec
out
lahf
fidiv
enter
cmp
inc
test
xchg
aam
into
cmp
cs
(bad)
sub
enter
mov
sbb
add
(bad)
lgs
mov
in
mov
ficom
in
mov
mov
jnp
add
daa
lods
push
das
and
lock
dec
push
into
idiv
cmp
jnp
cli
cmp
pop
push
or
xchg
mov
std
fist
or
out
sbb
jne
mul
(bad)
mov
stos
into
dec
popf
jae
xchg
push
pushf
push
sbb
dec
cmps
and
(bad)
push
and
imul
(bad)
ins
inc
(bad)
and
jle
std
and
cmp
into
and
xor
in
push
pop
in
(bad)
fldcw
in
aaa
or
push
in
jle
xchg
out
call
dec
push
or
xchg
pop
int
xor
pmaxsw
lea
or
movs
call
push
push
into
icebp
jl
jns
or
mov
int
in
push
fistp
mov
xchg
not
or
stc
xchg
daa
and
test
and
mov
mov
mov
fsubr
push
inc
test
push
das
fnsave
popf
jns
mov
scas
mov
fild
jbe
cs
push
dec
mov
pushf
dec
pop
mov
repnz
enter
add
mov
or
adc
(bad)
mul
mov
ja
outs
jb
jge
xchg
pusha
adc
dec
sub
xchg
in
or
cmp
and
out
enter
retf
mov
sti
sbb
adc
mov
pop
idiv
sbb
test
leave
pop
fld
scas
mov
cwde
pop
adc
and
xchg
cmp
sbb
push
dec
test
cmp
leave
jns
or
mul
cld
ja
outs
cmp
add
ret
and
shl
xchg
fstp
or
mov
ss
call
adc
pop
jecxz
sahf
sub
and
mov
popa
jae
aas
inc
stos
jecxz
mov
(bad)
aam
jo
cmp
repz
pop
jecxz
pop
out
in
push
shr
pop
in
inc
adc
gs
add
leave
push
ror
xchg
dec
imul
mov
hlt
repnz
test
daa
push
inc
jo
cmp
push
and
sbb
or
dec
in
jne
add
push
lahf
mov
into
(bad)
imul
adc
pusha
es
mov
mov
out
(bad)
jp
lods
and
repz
push
xchg
jle
sub
(bad)
adc
aad
jmp
inc
mov
inc
push
stos
js
test
ficom
icebp
lea
daa
jno
ret
shl
bound
in
fwait
xchg
movs
jp
mov
pop
sub
ja
movs
jp
adc
sub
stc
arpl
callw
dec
stc
mov
pop
push
push
or
inc
xchg
jae
jae
lds
inc
push
sbb
stos
add
lahf
or
cli
mov
mov
sub
je
jmp
loope
jae
bound
js
ds
xchg
stos
pop
xor
cwde
ffreep
or
(bad)
cmp
xchg
xchg
fsub
dec
ja
sub
mov
mov
and
and
into
clc
int3
adc
std
gs
into
inc
sbb
xlat
pop
pop
ds
mov
push
imul
cmps
mov
in
les
cs
adc
xor
inc
rol
in
fimul
mov
jnp
ins
pop
cmp
repz
adc
or
pop
adc
mov
add
loop
retf
mov
int3
mov
gs
pop
push
mov
les
sub
add
je
daa
popa
mov
mov
dec
je
or
mov
mov
(bad)
(bad)
icebp
push
sub
pop
xchg
mov
pop
mov
or
mov
ror
imul
sub
inc
inc
jno
add
pop
and
retf
sbb
aam
sbb
xchg
jno
sbb
loopne
js
mov
or
jmp
lock
or
sub
jl
arpl
sbb
dec
xchg
(bad)
jmp
sar
jmp
enter
fdiv
pusha
xor
add
test
sbb
mov
jle
pop
test
and
dec
mov
mov
lock
pop
dec
xor
and
fld
out
dec
pop
int
cld
inc
inc
push
je
pop
pop
bound
or
stos
(bad)
push
popf
lahf
jno
add
cmp
retf
das
into
mov
xchg
xor
add
rol
pop
mov
jb
xlat
pushf
icebp
(bad)
cmp
fidivr
mov
in
mov
pusha
sbb
in
in
inc
and
jp
(bad)
and
adc
rcr
mov
jmp
and
push
push
add
or
iret
cmp
outs
jmp
pop
and
loopne
cmp
and
pop
sbb
cs
icebp
addr16
outs
xchg
cli
repz
lahf
out
cmp
jb
sbb
cmp
and
mov
add
pop
sar
mov
jge
int3
inc
jo
mov
stos
test
sub
iret
push
ror
test
test
add
shl
push
jp
cli
jl
and
(bad)
xchg
xor
call
fist
cld
jae
lock
add
jae
and
out
dec
gs
xchg
push
lahf
sub
imul
(bad)
in
repnz
mov
fisubr
push
xor
test
ins
fld
into
out
sub
jbe
lods
sti
pop
outs
mov
push
lods
retf
xchg
xor
jne
dec
or
xor
movzx
xchg
shl
push
loop
call
and
inc
test
scas
fild
mov
cmp
xchg
pop
fst
pop
(bad)
xor
mov
addr16
pop
xchg
sbb
dec
repnz
sbb
arpl
or
dec
jno
sbb
lea
mov
retf
adc
add
inc
scas
dec
in
(bad)
iret
(bad)
test
dec
ins
test
pop
adc
(bad)
xchg
adc
xchg
adc
push
mov
in
xchg
out
repnz
arpl
outs
into
(bad)
jp
pop
fstp
pop
inc
lock
pop
sbb
scas
js
xchg
stos
sub
aaa
jno
rcr
adc
lods
mov
or
or
mov
int3
ret
jge
inc
xlat
es
xchg
jmp
aas
cli
clc
and
push
adc
push
repnz
sti
fsub
mov
mov
fmul
scas
add
dec
mov
cli
cs
xlat
mov
and
fnstsw
pop
bound
outs
mov
aam
nop
push
cmp
sub
loopne
daa
cwde
jecxz
xchg
cs
jnp
pushf
das
xchg
in
fs
pop
and
popf
pop
pop
xchg
inc
aaa
sub
cwde
sub
mov
sbb
(bad)
stc
call
sbb
mov
add
das
add
adc
dec
mov
stos
jge
pop
les
cmp
and
add
mov
(bad)
ds
(bad)
jbe
in
inc
push
mov
adc
in
lahf
std
pop
pop
clc
jns
push
pop
or
sbb
fs
inc
dec
push
adc
jns
jmp
adc
mov
xchg
sub
popf
add
in
sub
sbb
jecxz
in
dec
test
cmps
sbb
pop
das
ror
jp
repnz
int
cdq
outs
cwde
outs
add
aam
jp
cmp
imul
inc
cmp
and
std
sbb
(bad)
jge
(bad)
sbb
retf
ins
call
inc
aam
and
(bad)
jl
test
cs
sbb
stc
mov
fisubr
retf
lods
push
pop
enter
mov
push
outs
or
(bad)
pop
adc
fwait
xchg
sbb
loopne
fs
push
push
mov
(bad)
(bad)
push
mov
adc
mov
jmp
cmc
js
out
add
nop
repz
add
ret
jg
loope
pop
outs
and
add
xchg
sbb
shl
and
stc
loope
or
mov
mov
xchg
and
xor
std
add
pushf
je
adc
lods
xchg
adc
jge
stc
or
cmp
sub
repnz
fwait
add
icebp
adc
fimul
dec
cld
jo
shl
or
(bad)
ffreep
arpl
rdmsr
or
mov
iret
icebp
das
or
sub
pop
imul
clc
jno
inc
adc
fnstenv
(bad)
or
push
sub
in
(bad)
pop
or
das
and
aas
retf
out
sub
inc
lahf
or
js
ror
(bad)
leave
mov
mov
xor
push
pop
cmp
inc
int
lds
enter
cmp
leave
push
(bad)
sbb
and
pusha
ror
ja
je
and
mov
scas
mov
aam
stos
lods
rcr
inc
adc
xor
jmp
mov
pop
jbe
fbstp
movs
and
cmp
int
sub
mov
adc
movs
dec
sub
dec
pop
xor
cmps
xlat
push
lock
cmp
xchg
into
sub
inc
addr16
or
xor
push
mov
or
jge
mov
xor
imul
hlt
sbb
cli
in
mov
scas
jae
bound
xchg
jle
mov
pop
adc
scas
mov
and
jl
jb
push
adc
add
jnp
cld
pop
jne
push
mov
xchg
cmp
ja
fld
jmp
pop
fwait
pop
and
pusha
jp
mov
popa
mov
push
mov
shl
push
pop
mov
pop
lds
daa
and
push
add
mov
add
and
aam
dec
ins
loope
add
in
movs
xor
mov
fisttp
imul
jmp
xchg
push
cmps
rcl
adc
jg
call
mov
sbb
test
fcomp
addr16
sbb
jl
sbb
or
or
mov
cmp
jge
jge
push
push
push
or
inc
sub
mov
ror
push
iret
or
bound
lods
repnz
mov
jnp
sbb
cld
out
rcr
outs
xchg
loopne
ja
xchg
cmp
ds
or
pop
xlat
bound
sub
test
imul
push
das
xor
sti
xchg
ficomp
aad
cwde
int
dec
mov
sbb
out
je
add
sub
mov
retf
ss
dec
push
int
leave
enter
ins
test
sub
mov
adc
dec
dec
mov
mov
mov
push
enter
inc
push
pop
jl
cmp
fcmovu
sbb
cmp
fwait
into
dec
jge
add
mov
sbb
xchg
jo
mov
mov
pop
xchg
popf
pop
leave
cmp
mov
push
jae
sub
sub
in
mov
outs
cmc
inc
lahf
scas
cdq
mov
ss
orps
or
rcl
mov
dec
pop
dec
in
jmp
cwde
sar
mov
xchg
lods
std
fs
jmp
lds
sub
or
cmps
loope
fist
lods
push
jl
mov
shl
out
or
shl
test
outs
gs
push
setg
jp
jns
int3
andps
fadd
fs
cdq
dec
jo
xchg
je
pop
xor
mov
imul
repnz
dec
push
cmp
in
je
cmps
in
mov
mov
dec
sub
fstp
or
and
xchg
pop
std
stos
in
ret
xchg
pop
mov
(bad)
fcom
fimul
or
or
xchg
sub
je
jmp
and
(bad)
dec
pop
mov
shl
mov
sub
inc
push
and
es
xor
nop
dec
pop
sub
fsub
mov
cdq
rcl
cmp
bswap
mov
mov
test
and
mov
lea
and
or
xchg
bound
jg
cmp
call
xlat
pop
lahf
(bad)
shl
fcmove
mov
imul
sbb
jmp
out
icebp
mov
adc
stos
dec
push
es
cmc
imul
neg
xor
test
xor
pop
jo
xor
sti
xchg
mov
push
cli
or
ja
jmp
push
jl
in
mov
jno
aad
xchg
imul
add
xchg
ins
adc
ss
push
inc
out
xor
jno
dec
sub
in
mov
ror
(bad)
xchg
lock
xchg
sbb
aas
arpl
adc
das
inc
xor
in
mov
(bad)
call
dec
dec
mov
push
cmps
(bad)
aaa
lahf
sbb
mov
shr
(bad)
aam
dec
out
sbb
aaa
cmp
mov
pop
mov
dec
lea
add
push
stc
pop
out
inc
fwait
mov
mov
pop
mov
aam
pop
daa
mov
mov
jmp
xchg
imul
push
jno
push
pop
sub
mov
inc
jns
xor
push
loope
mov
jmp
dec
cmp
sbb
push
sub
inc
(bad)
les
and
loope
ret
adc
ficom
fsubr
mov
(bad)
ret
jae
push
xor
push
out
fcomp
arpl
xchg
pop
stos
bound
or
xchg
jb
jge
mov
ja
inc
scas
fs
inc
add
cli
and
fmul
sbb
jg
cmp
sub
jnp
(bad)
out
or
mov
or
in
inc
clc
ins
scas
shl
mov
or
mov
adc
or
mul
or
mov
shr
clc
inc
jl
sub
jnp
inc
push
jnp
sub
or
push
mov
inc
mov
jmp
aam
cld
xor
int3
icebp
jns
int
cmc
enter
cmp
shl
retf
add
jb
sub
popa
daa
pop
xchg
arpl
pop
mov
pop
dec
adc
adc
(bad)
aad
pop
out
iret
cmc
add
cli
sbb
lea
(bad)
jmp
std
jl
out
and
jmp
mov
int3
push
push
push
xchg
movs
je
ror
imul
jg
mov
jmp
mov
in
pop
inc
fs
push
and
and
xor
sbb
sub
inc
retf
adc
out
jo
sbb
push
call
pop
outs
cs
push
dec
jl
fdivr
test
ficomp
push
add
inc
and
pop
fdiv
and
imul
scas
jo
das
ficomp
nop
dec
iret
push
jns
retf
retf
popa
shr
mov
mov
mov
push
hlt
sbb
popf
gs
mov
xchg
push
sub
shr
cmc
jmp
movs
fdivr
in
add
inc
inc
daa
dec
mov
dec
jae
mov
stc
sbb
sbb
jne
addr16
pop
out
and
mov
mov
or
repnz
ins
or
mov
pop
aas
loop
pop
sub
inc
sahf
scas
cwde
add
(bad)
in
shr
dec
sub
ja
or
add
push
jp
outs
addr16
xchg
adc
sbb
imul
and
outs
fdivr
and
cmp
popa
cdq
and
imul
pop
cmps
xchg
adc
pushf
ins
fdivr
arpl
into
dec
xor
and
jmp
daa
pop
loopne
neg
xchg
dec
mov
mov
sbb
stos
xor
ret
pop
pop
in
stc
dec
sar
push
pop
mov
scas
dec
sbb
enter
ror
rol
jae
adc
jnp
pop
lock
xchg
sahf
inc
sbb
sti
xchg
out
push
(bad)
out
jp
gs
sub
(bad)
jmp
mov
sti
das
(bad)
popa
hlt
int
dec
icebp
retf
scas
shl
lods
dec
aaa
jge
js
sbb
jno
das
mov
outs
xchg
lea
les
test
iret
mov
sub
mov
xchg
iret
jbe
icebp
sub
shr
pop
sub
add
jbe
pop
bound
lods
arpl
cmp
pop
lds
cmp
daa
pop
rol
(bad)
jns
int
xor
lea
push
dec
test
sbb
in
adc
cli
or
ficom
fcomp
scas
pop
mov
push
pop
mov
dec
sahf
in
xchg
ins
pop
pop
js
pop
arpl
enter
test
fisttp
stos
sbb
adc
in
or
and
adc
mov
push
add
mov
mov
mov
nop
add
shl
pop
bndldx
or
xchg
repz
sti
retf
mov
imul
push
iret
push
ds
mov
int
lock
push
add
push
(bad)
movs
(bad)
and
imul
mul
cmp
mov
jb
ins
(bad)
mov
and
cmps
test
cmp
hlt
imul
mov
ret
movs
mov
pop
std
adc
xchg
out
cli
out
add
dec
mov
fld
push
imul
cmp
cmp
fdivr
xchg
pop
xchg
sbb
sahf
mov
outs
jmp
cs
push
inc
cmp
out
xor
sbb
and
ja
jmp
inc
jnp
push
dec
ss
pop
pop
stos
pusha
adc
lahf
enter
mov
dec
sbb
stos
imul
inc
push
xlat
lea
sub
push
adc
jo
call
mov
sbb
mov
pop
or
mov
scas
lea
or
mov
lahf
cmp
or
adc
pop
inc
rol
pop
pop
lahf
dec
xor
pop
cmp
cmc
pop
mov
lods
mov
dec
pop
mov
iret
adc
hlt
cwde
xlat
xor
add
loope
dec
ins
sbb
add
xchg
(bad)
aaa
sbb
lods
rcl
out
lods
rcr
loopne
push
mov
in
ins
pushf
imul
outs
call
retf
push
popa
into
sbb
inc
je
sti
mov
shl
(bad)
pop
mov
mov
jnp
inc
cmp
dec
or
jecxz
lea
(bad)
aas
pop
fwait
div
stos
pop
aas
fsub
shl
int
imul
int
retf
out
sbb
xor
pop
mov
add
sbb
mov
mov
mov
mov
mov
stos
xchg
push
pop
jns
jmp
ret
mov
pop
inc
add
or
push
sti
jae
test
jp
popf
aad
mov
adc
cli
(bad)
out
prefetch
or
js
aas
arpl
popf
mov
out
in
sub
es
sbb
jecxz
cmps
cs
sbb
cdq
movs
cdq
pop
pop
lds
jecxz
enter
mov
add
rol
push
dec
in
cmp
ins
push
xchg
cld
hlt
cs
jae
rcpps
sbb
outs
add
adc
or
repnz
imul
shl
inc
test
xor
fst
es
dec
es
repz
pusha
push
lds
fwait
sub
xchg
inc
sub
sar
or
jno
jl
and
stos
into
retf
add
jmp
std
adc
inc
icebp
or
or
dec
stc
add
mov
pushf
ret
into
je
sub
inc
mov
add
cli
pop
jo
add
mov
mov
push
adc
retf
and
push
sbb
dec
in
adc
or
dec
loopne
jp
dec
mov
cmp
jl
scas
mov
inc
inc
cmp
mov
fxch
test
dec
and
mov
sub
dec
push
xchg
cmp
imul
jmp
jmp
aaa
enter
scas
jnp
jl
aam
jno
lods
cmp
ja
lods
jne
and
cmps
xchg
imul
addr16
rol
dec
add
pop
xor
pusha
push
(bad)
adc
mov
mov
fnstsw
retf
push
popf
xchg
jecxz
inc
mov
cs
loope
ror
jmp
loop
in
pop
xor
sti
bound
repnz
pop
in
add
jmp
setge
push
xchg
lods
imul
xor
ds
int
mov
sbb
mov
mov
mov
jmp
adc
push
sub
cli
in
mov
mov
mov
in
clc
daa
add
(bad)
fdiv
xor
test
mov
movs
dec
cmps
outs
inc
xor
leave
push
enter
dec
lds
sar
push
ret
pop
mov
(bad)
fstp
ins
rol
stc
dec
inc
loopne
aas
dec
call
sbb
pop
popf
mov
mov
mov
mov
ins
(bad)
xchg
imul
mov
dec
sti
fbld
cmp
adc
pop
cmp
movs
data16
ins
add
shr
pop
test
sbb
ror
lds
xchg
aaa
cs
or
cmc
pop
dec
mov
imul
mov
xchg
cdq
jl
xchg
int
xor
fnstenv
cmp
cmp
ror
or
stos
mov
sbb
(bad)
fnstsw
adc
pop
and
cmp
xchg
call
pop
rol
jae
outs
stos
out
test
push
sbb
cwde
jl
sbb
jmp
jne
lds
xchg
mov
cmp
mov
or
xchg
pop
mov
mov
mov
mov
jle
(bad)
out
and
rcl
push
inc
lds
clc
mov
hlt
lods
push
push
retf
ins
jno
push
sub
pop
addr16
mov
mov
fidiv
lea
(bad)
mov
add
call
aad
add
aas
adc
jmp
add
(bad)
sti
loopne
mov
sbb
push
inc
jbe
adc
mov
pop
mov
icebp
mov
rcr
ja
sub
ret
retf
or
inc
inc
ja
jmp
xchg
xbegin
adc
mov
js
add
dec
enter
sti
in
outs
movs
popf
cli
mov
pusha
mov
pop
push
adc
sub
add
dec
xchg
and
(bad)
call
jmp
aad
or
call
aam
sbb
ss
jmp
int
mov
into
mov
fucomip
ins
fadd
lds
and
xor
and
push
sti
mov
xor
rcr
jge
ret
mov
(bad)
out
out
xchg
ja
addr16
ins
push
cmp
scas
dec
jle
int3
pop
inc
push
daa
sub
aas
xor
mov
frstor
pop
dec
inc
(bad)
pop
adc
or
aas
add
addr16
enter
cmp
cli
and
mov
xchg
jo
xchg
mov
loopne
push
scas
dec
sub
dec
js
cld
sbb
pop
jmp
(bad)
mov
push
mov
adc
jp
dec
xchg
xor
mov
fiadd
push
cwde
call
push
(bad)
shl
fstp
sbb
jns
xchg
bound
cmps
mov
loope
(bad)
dec
std
inc
inc
push
addr16
mov
cmps
jl
lea
add
adc
dec
mov
mov
(bad)
test
pop
shl
daa
(bad)
in
jge
mov
xlat
add
xchg
push
lods
sub
dec
fdivp
sbb
test
sub
mov
mov
retf
inc
sub
sbb
sar
mov
push
ss
cmp
jmp
aas
inc
out
cmp
or
cmp
in
and
cmc
retf
jnp
mov
in
push
push
mov
outs
imul
ss
daa
mov
dec
mov
test
dec
aaa
(bad)
xor
pop
test
and
dec
mov
mov
sub
mov
jbe
and
pusha
popw
sub
xchg
pop
daa
sbb
(bad)
lock
dec
inc
push
push
inc
jno
mov
cmp
dec
fmul
nop
pop
(bad)
loopne
push
ins
in
fwait
nop
push
push
xchg
aaa
popf
or
or
lock
push
mov
pop
inc
int
pop
int3
in
dec
ins
push
sub
mov
icebp
ss
loop
xchg
leave
adc
nop
pop
adc
sbb
and
xor
jo
shl
add
sub
dec
push
xchg
xchg
inc
push
daa
aam
iret
test
xor
ss
xchg
pop
mov
ret
call
fistp
sbb
popa
mov
ins
(bad)
cmovs
loope
repz
jae
enter
xchg
(bad)
jo
in
cmp
loopne
ins
std
je
je
je
push
mov
mov
or
icebp
push
rcl
pushf
les
loopne
jg
jge
push
movs
(bad)
push
cwde
(bad)
repz
fcmovnb
inc
fistp
xchg
fnstcw
dec
iret
sti
cmp
pop
add
ins
int3
in
cwde
mov
push
inc
lea
or
iret
mov
inc
mov
cmp
ror
sub
fnstenv
add
add
int3
or
aam
cmp
mov
mov
test
mov
test
in
dec
or
inc
iret
xor
clc
xor
mov
jae
push
nop
mov
jno
pop
jmp
divps
sub
sbb
xadd
or
mul
xchg
nop
inc
sbb
cmps
push
mov
push
ja
jns
(bad)
aam
mov
std
mov
mov
loope
pop
imul
jmp
dec
iret
aaa
pop
adc
jb
mov
mov
retf
mov
ins
dec
or
mov
dec
arpl
sbb
mov
adc
loopne
(bad)
mov
push
push
cdq
or
add
sti
xchg
ret
(bad)
mov
push
pop
lods
xchg
sbb
cmps
mov
xchg
dec
int
(bad)
jp
jb
call
mov
or
add
movs
fdivr
loop
push
fistp
pop
push
call
push
cmp
pop
mov
(bad)
dec
in
mov
adc
dec
xor
pusha
pop
adc
jmp
xchg
and
data16
push
fbstp
pop
mov
inc
jae
dec
icebp
xor
ss
jecxz
aas
push
adc
xor
xor
cs
or
ins
mov
scas
add
pop
loope
mov
sahf
pop
lods
fisub
int
ins
mov
jge
sbb
pop
shl
sti
pushf
sbb
xor
push
arpl
les
(bad)
loop
mov
(bad)
dec
call
add
movs
or
or
inc
sbb
mov
call
mov
and
dec
ds
pop
cmps
lds
ja
inc
push
(bad)
lods
adc
in
and
add
xchg
jnp
jmp
pop
rcr
and
sbb
xchg
out
test
cmps
mov
loop
cmp
cmp
mov
sub
xor
and
dec
enter
in
xchg
sbb
jge
repz
xchg
fwait
cli
adc
mov
test
dec
xchg
clc
jl
add
nop
and
clc
add
push
sub
mov
ret
movs
sbb
adc
popf
neg
mul
icebp
test
into
jge
jg
std
mov
xchg
or
repnz
jmp
les
xchg
iret
push
xchg
addr16
bound
aas
xor
mov
xchg
ret
pop
loope
popa
sbb
or
retf
push
(bad)
outs
cmp
push
outs
cld
lods
ret
arpl
adc
fnstcw
jg
out
je
dec
push
and
fstp
xor
push
adc
sahf
jmp
mov
jns
cmp
sar
xchg
jns
push
outs
xor
sbb
std
or
out
add
lea
lods
cmp
jnp
inc
cmps
cwde
addr16
sub
xor
sub
jle
add
push
(bad)
aad
jnp
push
lods
inc
(bad)
mov
lods
test
mov
test
fs
add
push
cmp
fbstp
sub
push
pop
lds
in
mov
jmp
and
fdivr
push
stos
mov
fldenv
push
push
lock
jl
js
push
jns
lahf
mov
add
fs
xchg
dec
inc
mov
aam
mov
scas
mov
mov
int
xor
rcr
bound
dec
push
dec
mov
call
lods
adc
ret
mov
lods
dec
xchg
sub
adc
mov
in
cmps
gs
imul
adc
mov
and
out
lds
pop
pop
mov
xchg
fsubp
icebp
mov
inc
or
bound
imul
push
jbe
mov
push
ret
add
mov
jb
sub
adc
out
inc
mov
pop
imul
cmp
dec
mov
fxch
jecxz
adc
scas
fstp
add
push
sti
xor
sbb
enter
pushf
push
pushf
inc
mov
xlat
mov
outs
push
or
inc
stos
pop
dec
jae
test
or
popf
outs
or
push
mov
pushf
push
pop
xchg
aad
mov
or
pop
mov
movs
jae
adc
and
pop
and
fsub
ds
mov
push
push
(bad)
sub
cdq
mov
jne
mov
shl
js
push
ffreep
fldcw
es
jmp
out
jbe
sahf
ror
push
iret
jmp
pop
sub
adc
in
add
fdiv
adc
hlt
fldenv
xor
jl
in
mov
jmp
inc
sbb
aad
out
mov
aam
fmul
scas
mov
and
xchg
add
sar
repnz
jmp
daa
(bad)
cmp
fldenv
out
std
and
pushf
mov
mov
ins
repnz
lods
lea
ins
push
aad
mov
mov
js
cmps
push
push
in
sbb
and
aaa
xchg
pop
loop
or
pop
sahf
out
xchg
jb
xor
jnp
xchg
sbb
pop
sbb
mov
cmp
repnz
sbb
mov
sti
xchg
xchg
les
mov
dec
cmc
pop
sub
mov
fs
xor
pushf
add
cmp
call
xchg
or
jl
dec
ret
lods
pop
add
cmp
pop
jmp
pushf
sti
push
mov
cwde
jbe
lds
sbb
jno
ret
fdivr
scas
inc
mov
rol
int
pop
pop
or
or
addr16
xchg
cmp
jmp
or
xchg
mov
cmp
push
out
mov
lods
push
aaa
push
or
push
cmp
out
jge
lds
cmp
jnp
xchg
aas
cmp
imul
mov
loop
xor
lods
dec
pop
xor
lods
ss
test
push
push
mov
lea
test
sub
(bad)
push
test
je
jne
inc
xchg
cmc
shl
inc
mov
dec
xor
stos
mov
xor
gs
lods
mov
sti
outs
mov
sbb
or
mov
xor
jl
mov
inc
or
in
xor
test
push
mov
sahf
outs
inc
in
cmp
ins
fdivr
sub
push
jmp
dec
dec
adc
mov
and
xor
stos
xchg
jl
mov
jne
xor
sub
adc
retf
js
cdq
movups
hlt
inc
mov
stos
int3
adc
shr
test
sub
add
sbb
xor
sub
mov
pop
pop
repnz
dec
stos
adc
scas
and
xchg
sub
int3
aas
rcl
mov
(bad)
xor
call
jae
xchg
jbe
xchg
outs
push
out
ret
ins
lods
cs
pusha
mov
or
aas
sub
mov
mov
jae
and
mov
pop
mov
fisttp
inc
lock
adc
jp
jg
in
pop
sbb
push
cmps
out
nop
ret
pusha
push
pop
xchg
ror
push
fs
mul
mov
push
(bad)
cmp
ins
jl
cmp
ds
add
dec
clc
inc
xchg
aas
(bad)
sbb
int3
mov
jmp
retf
mov
hlt
sub
pop
popf
add
stos
(bad)
cmp
lahf
mov
iret
test
push
mov
in
pop
fadd
dec
repnz
mov
fisttp
jnp
mov
repz
mov
outs
or
aas
test
(bad)
ins
inc
clc
jns
repz
xchg
inc
push
add
outs
or
addr16
call
pop
mov
js
sub
xchg
cmp
or
push
and
xchg
push
adc
add
push
hlt
dec
add
push
and
mov
pop
pop
mov
pusha
jge
in
sub
fist
or
push
jge
xchg
add
adc
xchg
sbb
mov
into
pop
outs
add
mov
cli
test
pop
in
(bad)
popa
out
bound
inc
sahf
pop
mov
push
dec
jp
push
daa
scas
dec
xchg
xor
lea
(bad)
outs
push
sbb
mov
mov
mov
fild
adc
inc
sahf
mov
or
pop
mov
addr16
fwait
mov
cmp
jge
lahf
and
in
stc
jnp
cmp
xchg
lea
xchg
es
xchg
das
xor
dec
imul
mov
repnz
fisubr
in
pop
cmp
inc
inc
lock
and
cmp
adc
mov
scas
adc
add
ret
xchg
out
xor
mov
sbb
bound
cmps
call
add
shr
mov
in
mov
push
int
pop
je
inc
shr
or
retf
in
mov
sub
fcomp
ins
fld
ror
add
or
(bad)
pop
pop
xchg
sbb
sbb
add
xor
call
cmp
mov
mov
enter
mov
adc
js
mov
movs
pop
and
or
retf
fwait
jmp
inc
jne
mov
dec
loopne
aaa
jp
push
sbb
mov
sub
popf
loopne
inc
dec
aas
cmp
xor
shr
jl
sub
movs
jbe
es
jp
mov
jge
pop
push
arpl
sbb
int
pop
cwde
sub
imul
lahf
sub
arpl
imul
imul
mov
movs
dec
pop
sbb
jecxz
popa
call
or
outs
pusha
dec
mov
out
leave
and
pop
icebp
fwait
int
mov
mov
add
into
and
fcmovne
sbb
jae
(bad)
cmc
dec
add
call
sbb
stos
pop
mov
(bad)
or
fisttp
ins
lods
hlt
inc
adc
(bad)
mov
fcomp
dec
test
mov
ja
sbb
inc
ss
sbb
lods
jl
ret
fwait
or
xchg
daa
pushw
inc
jl
push
sub
leave
shl
cld
dec
fisttp
mov
call
or
clc
push
dec
push
ins
jo
je
adc
inc
pop
lahf
push
stos
xor
dec
cs
shr
(bad)
shl
ins
mov
adc
xor
icebp
call
jno
jl
dec
js
inc
(bad)
loope
mov
mov
mov
inc
or
cmps
inc
sbb
lds
mov
into
(bad)
call
mul
cmp
and
iret
sub
aad
fcomp
popa
cmp
es
dec
mov
lds
leave
inc
out
and
gs
out
pop
cld
lahf
and
(bad)
ins
xchg
push
mov
mov
or
and
inc
jmp
(bad)
sub
daa
xlat
js
test
aas
push
push
iret
cmp
aam
mov
push
dec
adc
dec
stc
sbb
je
(bad)
iret
sbb
lods
fistp
pop
add
(bad)
jge
xchg
mov
loop
or
mov
pop
cmp
lahf
inc
sub
push
repz
dec
mov
jg
scas
pop
sbb
dec
and
imul
std
stos
dec
lods
jmp
js
in
inc
adc
jp
aaa
push
daa
arpl
mov
jne
enter
dec
push
retf
dec
jae
clc
sub
push
int
mov
mov
cmps
mov
ficomp
ja
sub
mul
ins
xor
pop
mov
out
mov
loop
dec
jmp
pop
inc
pop
imul
jne
adc
xor
xor
or
in
push
mov
xor
push
retf
shr
mov
enter
lsl
add
sbb
repnz
test
je
mov
pop
(bad)
call
ins
imul
rol
call
mov
mov
and
test
jmp
adc
or
ja
dec
xor
nop
jle
loope
xor
int3
jg
or
outs
pop
mov
dec
xor
shl
add
add
mov
out
mov
jmp
bound
syscall
or
(bad)
cmc
mov
icebp
inc
stos
cmp
xor
cmc
fdiv
test
add
inc
adc
(bad)
jl
aas
pop
push
fild
pop
lds
out
sbb
mov
add
or
cmc
es
pop
cmp
cmps
ret
js
adc
out
cli
push
test
mov
dec
mov
mov
test
push
les
xor
nop
xor
lock
ins
pushf
sbb
jmp
xchg
push
les
cld
fcom
cmps
inc
out
adc
jns
je
xor
js
inc
mov
mov
aam
mov
xchg
int3
inc
jg
mov
push
mov
pop
adc
inc
mov
inc
hlt
or
adc
loopne
repnz
inc
mov
movs
cmp
inc
or
xchg
iret
ss
mov
pop
loope
int3
popf
cwde
dec
cmc
repnz
ss
add
aam
stos
jns
sub
repz
adc
std
adc
sub
sub
ins
inc
sar
dec
daa
mov
sbb
xor
js
inc
cmp
bound
sub
mov
push
jbe
xchg
stos
fs
das
int
xlat
lea
sar
stos
cmp
ds
mov
fld
or
dec
in
sahf
mov
test
add
call
pop
dec
jne
mov
pop
xor
and
pmulhw
cmp
and
cmc
fnstcw
or
daa
ins
int
jle
cwde
outs
add
mov
pop
mov
(bad)
mov
add
sbb
call
inc
mov
mov
push
jb
push
xchg
(bad)
rcl
(bad)
xchg
sub
or
pop
test
pop
mov
inc
int3
and
clc
mov
fild
push
xchg
mov
sbb
sub
or
ins
es
cmp
scas
sub
mov
inc
int
dec
and
leave
sahf
popf
dec
cmp
mov
mov
ja
out
(bad)
jmp
call
shl
hlt
out
jno
test
test
mov
hlt
dec
jno
push
lahf
lea
mov
fld
cmc
hlt
inc
lock
pop
dec
cmps
adc
test
mov
nop
dec
imul
inc
cld
jge
push
and
pop
xor
sub
mov
mov
ret
retf
push
or
or
sub
int
clc
cmp
sbb
dec
retf
jae
movs
cmp
mov
loop
sbb
std
outs
push
in
xchg
ins
jl
cmp
dec
or
add
cmp
mov
adc
mov
mov
movs
call
inc
xchg
cmc
fsubr
and
cmp
(bad)
cmp
xor
xor
mov
test
cmp
dec
add
jmp
xchg
lds
imul
push
js
dec
inc
(bad)
(bad)
shl
add
jg
sub
mov
or
pop
enter
mov
mov
push
popf
fs
push
cmp
icebp
in
jp
sub
mov
mov
pop
(bad)
mov
nop
mov
cmp
push
mov
or
rcl
js
outs
xlat
pop
mov
adc
xchg
sar
cmps
mov
dec
jb
sar
in
(bad)
adc
pop
dec
sub
or
sbb
pop
adc
add
pop
pop
cmp
lds
repnz
ja
ins
out
popf
sbb
mov
fwait
scas
dec
push
xchg
inc
dec
sub
mov
cdq
arpl
cli
stos
adc
mov
push
ins
xor
add
dec
or
js
jmp
push
je
sbb
stos
dec
push
(bad)
mov
xchg
cmp
js
jb
std
and
call
inc
push
inc
daa
clc
ret
pop
adc
sub
xchg
cmps
test
das
packuswb
je
dec
jp
and
inc
mov
rcr
cwde
adc
popa
sub
add
sbb
adc
ds
imul
scas
shl
cmp
jmp
mov
ins
psubusb
dec
lods
sub
mov
movs
sbb
iret
ins
frstor
pop
mov
mov
cmps
repz
scas
sub
jbe
dec
jbe
imul
dec
cmp
sub
test
pop
rcr
jle
jns
jno
xor
shl
ficom
repnz
push
call
popf
xor
and
add
cmc
icebp
mov
push
mov
xor
aaa
cdq
loopne
and
imul
add
jo
sti
cmps
jp
sbb
or
xchg
stos
pop
and
fist
push
or
inc
int
jns
jecxz
mov
cli
mov
out
not
push
clc
inc
xor
fadd
rol
rol
mov
inc
and
fwait
dec
xchg
inc
leave
mov
loopne
push
jb
leave
mov
out
xchg
sbb
sub
pop
data16
or
leave
push
fdivr
fxch
int3
call
test
(bad)
xor
push
sbb
dec
xor
mov
shl
in
or
pop
mov
das
jb
sub
aam
or
dec
fadd
adc
fnsave
movups
xchg
sub
mov
adc
xchg
adc
xchg
hlt
cmp
sub
ror
int3
stos
push
sub
jo
pushf
repnz
mov
in
pop
(bad)
call
mov
cdq
or
and
in
ins
xor
or
in
fdivr
icebp
les
ins
std
shr
retf
push
add
sbb
or
xchg
mov
scas
ins
inc
ins
std
or
jno
cmp
push
pop
cmp
(bad)
and
xchg
test
clc
adc
int
inc
scas
rol
cmp
imul
or
and
sub
cmp
cli
mov
xor
sub
mov
retf
retf
mov
dec
rol
(bad)
pushf
(bad)
cli
icebp
bound
push
sar
inc
xor
push
cmp
mov
pop
(bad)
cmp
inc
dec
(bad)
gs
(bad)
xchg
imul
mov
icebp
sbb
shr
cmps
(bad)
cmp
cmps
bound
ret
mov
les
jp
sbb
pop
sbb
mov
or
div
mov
push
sub
adc
push
cmp
and
fist
dec
cmps
jmp
adc
shl
sahf
retf
es
pop
jge
dec
mov
push
rol
outs
popf
inc
xor
jne
pop
aam
adc
cdq
repz
mov
mul
cmps
and
adc
rol
add
mov
jmp
pop
loop
mov
jge
xor
sub
add
add
fcomp
adc
pop
pmaddwd
(bad)
mov
bnd
xchg
pop
je
mov
inc
sbb
sub
fstp
nop
xchg
pop
fsub
jle
add
xor
fdiv
push
lahf
and
and
and
dec
ins
movs
scas
shl
mov
pop
jmp
popa
push
xor
das
dec
cmp
dec
cwde
das
jne
and
fbstp
jnp
push
stc
pop
adc
push
hlt
push
test
ret
add
mov
test
and
lods
pop
or
inc
sbb
loop
mov
ds
pop
fistp
ss
dec
pop
and
imul
or
call
xchg
jb
inc
test
aas
pop
mov
aas
movs
pusha
dec
sbb
mov
fild
out
pop
push
and
or
inc
adc
mov
cwde
mov
mov
mov
inc
dec
ds
(bad)
(bad)
nop
jbe
mov
std
pop
(bad)
sub
add
or
push
cmp
fimul
inc
jae
adc
les
outs
bound
sub
lock
sub
jnp
xor
sub
test
imul
ror
and
sub
aam
icebp
jae
jno
aaa
sahf
xor
adc
ficomp
mov
call
repz
imul
into
adc
aam
jle
xor
inc
push
or
jecxz
adc
inc
dec
add
mov
push
ds
and
in
ss
adc
lds
push
sti
gs
pop
imul
jnp
idiv
scas
imul
je
iret
out
or
jle
xor
aas
ret
mov
mov
push
push
scas
lahf
mov
es
daa
fdiv
push
jl
test
stc
mov
movs
and
bound
jo
xor
jb
sbb
int3
loopne
mov
test
mov
call
push
inc
test
movs
pop
fwait
mov
xchg
and
lods
inc
fs
sub
xlat
out
pop
mov
data16
xlat
jns
loop
in
xchg
rol
stos
ror
cmp
ret
(bad)
ds
adc
cmp
ja
xor
int
pop
ss
jecxz
test
adc
push
adc
add
mov
retf
les
(bad)
fisubr
int3
iret
rol
loop
leave
pmaxsw
push
sub
mov
xchg
mov
cmp
daa
ja
cmp
push
neg
jnp
jno
repz
test
ds
jge
retf
jecxz
dec
stos
adc
daa
cmp
(bad)
inc
je
rcr
xchg
push
inc
daa
in
lods
jb
and
bound
or
push
dec
fsubr
adc
fimul
scas
ret
sbb
out
mov
dec
ficom
fs
(bad)
mov
push
mov
gs
jg
popa
jnp
bound
mov
push
(bad)
fsubr
inc
aam
imul
inc
pop
add
es
rcr
jmp
sub
std
dec
dec
sub
cmp
dec
jmp
dec
in
sub
ret
mov
cmp
xchg
xor
sub
fsub
or
cmc
add
(bad)
push
add
inc
push
idiv
jl
lods
addr16
adc
add
(bad)
(bad)
icebp
neg
pop
mov
jg
or
outs
into
daa
jmp
xor
hlt
inc
mov
pop
clc
sub
js
aad
adc
pop
xor
xor
sub
stos
or
sub
out
mov
les
stc
out
das
xchg
loopne
cmps
out
push
jno
dec
inc
adc
je
adc
test
movs
jecxz
jg
out
(bad)
cli
out
cmp
enter
in
mov
fistp
adc
icebp
jbe
dec
xchg
(bad)
call
sub
outs
push
je
inc
int
pushf
fild
sbb
push
dec
out
lea
cli
loop
add
cdq
pop
mov
(bad)
or
push
mov
cli
cmp
mov
jmp
or
and
inc
inc
int3
jmp
cdq
pop
dec
inc
xor
pop
cmp
sub
pop
mov
cmp
aas
movs
sub
mov
sub
out
dec
mov
mov
lea
adc
fidivr
xor
pop
adc
ja
push
push
test
cli
xchg
lock
sbb
lock
mov
out
push
test
cmp
retf
fld
xchg
pop
adc
jg
outs
aas
cld
cld
jg
sbb
xor
cwde
adc
mov
hlt
push
rcl
stos
in
pop
jecxz
sbb
(bad)
sar
mov
daa
popa
ins
inc
or
xchg
add
xor
add
data16
aaa
xor
repz
cmp
mov
hlt
mov
dec
lahf
pusha
jns
inc
popa
jne
pop
ret
inc
nop
or
gs
adc
fwait
dec
mov
push
fwait
adc
mov
and
imul
inc
repnz
in
dec
outs
addr16
and
and
pop
xchg
inc
mov
xchg
mov
pop
dec
cdq
fidiv
movs
push
iret
clc
mov
inc
rdmsr
jmp
jl
movs
call
psrad
outs
and
jno
mov
jno
and
xor
jne
mov
or
enter
retf
dec
cvtdq2ps
and
fwait
data16
sub
dec
dec
push
lods
push
mov
push
mov
data16
aam
sti
push
aaa
out
test
aam
push
mov
loop
sbb
fcomp
or
sub
mov
lods
(bad)
mov
adc
push
mov
bound
cmp
add
mov
pop
jb
and
xchg
imul
jns
pop
and
or
std
gs
dec
mov
les
cwde
rol
push
out
test
jmp
xchg
adc
sub
push
retf
sub
mov
out
inc
pusha
push
stos
in
nop
std
out
icebp
mov
stos
xchg
sub
out
xor
xor
push
sbb
(bad)
xlat
sbb
fcmovu
std
jmp
add
pop
push
mov
data16
jmp
stos
jo
ret
aad
fsubr
stc
mov
shl
inc
adc
movs
outs
dec
push
ja
cmp
or
push
das
dec
pop
mov
xchg
and
xchg
out
fwait
and
mov
icebp
rcr
shr
movs
test
stc
push
inc
xchg
dec
jg
pop
enter
cld
fstp
jecxz
sbb
inc
outs
outs
jae
push
icebp
lahf
dec
inc
cmp
push
std
jb
dec
(bad)
movs
pop
adc
xor
les
mov
xchg
inc
sti
pop
les
push
push
mov
xchg
js
cmp
ja
cwde
push
scas
mov
cwde
pop
sbb
ret
ret
out
inc
cdq
inc
sahf
pop
ins
mov
xchg
imul
mul
stos
frstor
into
(bad)
in
lahf
mov
loope
mul
mov
xor
cmc
xchg
ja
pop
xchg
sbb
test
inc
es
jmp
ror
fst
sub
mov
lods
lods
mov
mov
js
and
(bad)
call
xchg
and
enter
mov
sti
retf
ds
nop
div
inc
out
xchg
and
push
nop
mov
inc
pop
jbe
sahf
out
pop
sub
mov
adc
mov
xchg
outs
xlat
pop
jo
mov
jns
icebp
sub
scas
in
imul
popa
and
add
in
inc
mov
xchg
xlat
adc
stos
rol
mov
daa
sbb
imul
(bad)
dec
in
sbb
(bad)
dec
outs
out
scas
inc
xor
imul
jecxz
fsubr
adc
ror
sbb
ret
loop
imul
push
icebp
pusha
fisub
pusha
rcr
cmp
(bad)
xchg
xor
inc
mov
into
and
jae
xor
pop
mov
or
fs
cmp
js
test
inc
shr
iretw
adc
or
mov
sbb
and
push
inc
dec
pop
xchg
mov
mov
movs
sub
xor
push
and
push
mov
xlat
push
xlat
pop
out
nop
hlt
sahf
adc
ret
xlat
inc
loopne
cwde
sub
popf
popf
or
jl
neg
js
add
pop
jnp
aas
jle
xor
inc
stos
dec
addr16
(bad)
loopne
dec
test
fisttp
in
aas
lods
inc
dec
cmps
outs
mov
push
sbb
push
dec
sub
rcl
int3
or
call
sahf
mov
and
sbb
outs
das
inc
add
xacquire
dec
xor
dec
mov
ret
xchg
popa
xchg
aaa
push
jg
dec
add
mov
inc
jle
cmp
dec
rcr
sub
mov
sub
test
xlat
xchg
push
aas
unpckhps
push
pop
cwde
and
or
sbb
add
mov
jle
cs
lahf
or
les
test
jg
xchg
and
pop
pushf
rcr
fisttp
cmp
sbb
(bad)
shl
cld
imul
adc
mov
cmp
scas
jns
rcl
js
pop
frstor
push
inc
test
retf
(bad)
in
loop
shufps
jl
xchg
loop
iret
pop
push
sbb
adc
inc
(bad)
leave
or
or
xor
out
jae
mov
and
mov
and
icebp
jns
(bad)
and
cs
cmps
pop
out
xchg
pop
sbb
pusha
pop
mov
mov
stos
es
fbld
jg
test
mov
jne
cmp
arpl
xor
clc
jge
pop
mov
xchg
vpshlq
fadd
jg
push
inc
push
jg
fcom
inc
mov
add
call
and
stos
je
push
(bad)
xor
and
add
pop
lds
push
loope
test
dec
jle
jb
fisubr
pop
add
push
dec
mov
xchg
out
aaa
fs
sbb
or
ret
data16
daa
jg
xchg
fiadd
scas
sbb
cwde
data16
sar
jae
int
lahf
loopne
fdecstp
sahf
adc
fist
sbb
mov
and
fist
push
enter
ror
adc
xor
mov
mov
and
xchg
cmp
jle
vmwrite
mov
and
std
or
stc
pop
xor
xchg
dec
adc
ins
jnp
out
mov
mov
inc
xchg
lods
or
in
push
mov
jmp
loop
cdq
or
jno
push
(bad)
(bad)
imul
xor
ins
ficom
push
icebp
cld
test
cld
mov
lahf
stos
cmp
cmp
push
test
dec
int
jmp
inc
iret
call
test
rcl
pop
mov
leave
cmp
jg
mov
int
outs
pop
mov
popf
cld
mov
pop
or
add
dec
retf
repz
icebp
push
rcr
xlat
add
sti
xchg
retf
ins
cwde
andps
dec
aaa
sub
pushf
retf
xor
inc
xor
mov
out
out
in
xor
popf
in
in
mov
jmp
and
pop
pop
(bad)
ret
add
repz
imul
mov
jno
imul
push
pop
stos
cmp
inc
jno
stc
out
test
test
xor
(bad)
pop
add
(bad)
mov
test
cmps
pop
jno
stos
dec
cld
hlt
mov
(bad)
adc
cmp
aad
bound
cld
mov
outs
or
addr16
xchg
mov
xchg
cmp
dec
and
aam
cmp
inc
mov
add
inc
clc
call
cwde
loope
in
push
int
mov
xchg
fist
pop
cmc
pop
push
jbe
sbb
cmp
(bad)
mov
xchg
sbb
mov
inc
lds
pop
retf
sub
cmps
hlt
mov
outs
inc
into
cmps
pop
cmc
add
arpl
add
lea
inc
or
inc
add
adc
jg
stos
add
fsub
xor
adc
test
xor
jb
push
pop
pushfw
stos
icebp
fnstenv
scas
jp
cli
je
push
lods
fnstsw
adc
shr
mov
jae
jo
mov
bound
mov
movhps
sub
jbe
in
and
mov
ret
out
jp
mov
popf
test
test
pop
out
or
pop
out
repz
in
test
cli
jo
jae
dec
fsubr
jmp
mov
mov
nop
mov
dec
sub
ret
mov
sub
jl
hlt
fs
lea
mov
leave
mov
repnz
jmp
ror
mov
in
in
jnp
mov
adc
in
loope
stos
mov
call
or
jne
ret
push
mov
lock
sar
jb
loope
cs
mov
jo
retf
fdivr
nop
sbb
int
popa
jne
cs
jne
sar
lds
adc
or
in
outs
add
jp
xchg
dec
jnp
xchg
xchg
and
inc
cs
in
xchg
mov
xchg
in
fidivr
mov
pop
addr16
push
jl
cdq
add
aaa
or
and
aaa
icebp
fnstsw
stc
stc
mov
pop
popf
mov
jmp
jmp
and
scas
sti
or
pop
fistp
popa
jp
pop
hlt
jmp
pop
add
cmp
fsubr
pusha
mov
and
(bad)
mov
scas
sub
dec
hlt
push
fwait
mov
or
mov
lods
(bad)
pop
and
popa
and
mov
mov
dec
push
into
dec
mov
js
push
out
daa
shl
mov
inc
xchg
add
xchg
xor
call
mov
nop
cli
ja
aaa
pop
pop
dec
pop
icebp
cmp
test
xchg
pop
adc
js
dec
mov
and
jecxz
push
dec
int
in
out
push
push
jg
jge
outs
es
adc
mov
dec
sub
mov
ds
add
push
xchg
rcl
cs
(bad)
test
pop
(bad)
mov
ins
rcl
dec
mov
and
mov
or
xchg
sub
xor
mov
mov
sbb
lea
repz
jo
ja
add
loope
xor
mov
clc
daa
ror
out
lock
(bad)
rcr
cmp
mov
cmp
movs
test
int3
xchg
dec
jbe
dec
mov
outs
test
movs
mov
or
fbld
xor
mov
aas
in
mov
sbb
icebp
(bad)
jecxz
mov
jae
cmp
xchg
std
mov
sub
mov
hlt
(bad)
xchg
push
div
cmp
test
xchg
test
add
popf
cld
mov
pusha
jb
mov
stos
pop
jmp
ret
popf
xchg
jo
jbe
xor
ret
das
push
add
sti
cmc
rcl
jae
shl
mov
add
lock
pop
mov
lahf
add
fbstp
mov
xchg
lea
pop
aam
add
mov
jecxz
cwde
jno
push
or
(bad)
sar
repz
mov
cmp
ret
jmp
pop
xlat
cmp
rcl
push
lods
in
out
int3
mov
pusha
push
mov
push
xchg
fwait
mov
ins
retf
pushf
dec
lds
addr16
pop
out
movs
mov
add
push
sub
mov
xor
mov
aaa
into
addr16
addr16
xchg
pop
(bad)
in
xchg
adc
and
inc
sub
pop
sbb
push
sub
or
mov
shl
jno
xchg
dec
cmp
imul
shl
add
cmp
lds
outs
dec
xor
cmp
adc
xchg
clc
int
mov
scas
dec
mov
call
mov
pusha
dec
pop
and
dec
cmp
iret
and
add
add
shr
aam
pusha
add
inc
jl
sub
or
outs
cmp
(bad)
sbb
xor
sbb
test
out
and
icebp
xchg
jmp
pop
sub
mov
jge
add
xor
mov
push
(bad)
xchg
cld
sub
shl
ret
outs
xchg
rsm
iret
cmp
jp
cmp
fwait
gs
mov
ror
mov
fsub
sub
adc
cwde
xchg
scas
inc
or
clc
inc
fld
add
aam
inc
mov
and
dec
mov
in
xlat
bound
xchg
fmul
inc
scas
xchg
mov
mov
mov
dec
push
ror
ret
scas
or
add
xchg
xor
out
cmp
cmp
and
dec
sbb
mov
add
adc
cmp
sub
out
in
ret
in
mov
sub
jge
sbb
hlt
cmp
xchg
cwde
inc
dec
inc
jae
pop
fnsave
pop
in
xor
and
jne
add
jecxz
fucomip
push
cmp
imul
lods
pop
push
in
push
ss
push
dec
shl
or
ds
jno
and
sti
not
ins
and
(bad)
(bad)
pop
lea
push
or
add
outs
xchg
xchg
cld
das
sbb
movs
push
mov
fisubr
loopne
xchg
mov
jge
push
xchg
daa
test
jnp
movs
pop
movs
sbb
sub
retf
jae
jne
aas
loopne
xlat
jns
pop
cmp
ficomp
popf
in
movs
add
movs
sub
or
rol
mov
mov
data16
add
cmc
cmp
adc
arpl
jmp
idiv
pop
inc
add
jge
mov
nop
push
out
(bad)
imul
xor
test
test
dec
leave
out
mov
jg
push
or
pop
mov
stos
pop
cli
pop
sub
add
jb
test
cmc
mov
test
push
stos
jmp
in
xchg
out
mov
pop
cmp
fsubp
lods
(bad)
das
lahf
xchg
call
outs
imul
add
inc
movs
xor
mov
mov
mov
mov
retf
jae
mov
cmovbe
test
inc
test
cwde
fs
jmp
out
jns
fsub
adc
bound
jecxz
push
movs
loope
mov
imul
lds
sbb
pop
or
sbb
sub
jmp
cmp
xchg
jg
fnstcw
gs
mov
into
add
push
cmc
fcmovne
aas
std
xor
fwait
mov
xor
in
sub
cmps
cmp
pop
sar
push
popa
retf
int3
data16
cs
pop
std
and
cs
jge
rcl
fcomp
jmp
js
and
add
rcr
js
into
out
adc
movs
bnd
out
push
cmp
jb
hlt
call
adc
push
mov
push
xchg
popf
stc
retf
pop
test
fwait
or
sub
and
push
sbb
and
shl
fisubr
bnd
mov
push
pop
test
std
mov
xlat
pusha
sub
das
aas
je
push
test
into
mov
mov
loop
jno
rcr
iret
jo
xor
jecxz
les
add
jns
mov
repnz
loopne
inc
mov
imul
cmp
movs
js
sbb
cmp
mov
push
outs
dec
std
mov
lea
sub
push
rcr
aas
xor
and
stc
adc
mov
sub
add
fcmove
and
or
fisubr
lea
bound
fidiv
jae
lds
inc
call
(bad)
loopne
push
xchg
sbb
mov
adc
arpl
sub
cli
(bad)
pusha
jnp
int
jmp
xchg
mov
cwde
call
div
into
idiv
popf
mov
mov
xchg
repnz
dec
pop
dec
push
or
jae
scas
mov
and
adc
jg
xor
xchg
sub
add
mov
adc
rcl
lods
scas
and
in
cmp
out
movs
push
pop
xor
dec
rol
jae
das
add
xchg
in
stos
nop
test
dec
push
fimul
mov
arpl
cmc
push
mov
iret
mov
in
mov
cmp
sub
sbb
(bad)
fcmove
cmp
and
out
test
xor
out
js
dec
mov
adc
mov
rol
in
mov
imul
add
lods
cmp
inc
rcr
iret
scas
mov
and
iret
mov
retf
mov
(bad)
jmp
imul
mov
push
adc
clc
push
jno
retf
mov
popf
fimul
jne
add
arpl
sub
xor
pop
scas
ins
jmp
jmp
cdq
mov
ret
pop
adc
scas
xor
push
or
sub
outs
das
pusha
or
push
je
outs
xchg
shr
mov
dec
push
sbb
mov
repz
jl
push
mov
fst
ret
pop
ss
iret
push
xchg
aas
dec
shl
adc
lods
jae
test
jg
push
inc
dec
fild
iret
and
mov
sub
loopne
mov
mov
jno
cmp
addr16
dec
push
add
adc
pop
data16
and
rcl
dec
clc
sbb
retf
ret
imul
stos
into
(bad)
cmps
inc
push
jb
cs
add
mov
pop
fadd
inc
and
cmp
pop
outs
and
in
pusha
movs
fadd
neg
addr16
mov
pop
mov
inc
adc
mov
lahf
ins
aaa
jnp
dec
lahf
scas
inc
cs
mov
xor
xor
inc
add
push
stc
dec
mov
push
in
shl
cmps
out
mov
pop
das
inc
fidiv
dec
ficomp
repnz
out
imul
cmc
jmp
mov
pop
nop
push
dec
inc
into
and
jg
xor
jns
call
push
push
(bad)
das
inc
push
xor
inc
inc
in
adc
mov
aam
adc
loop
pop
cdq
call
ins
add
mov
push
add
cld
cs
jbe
rol
jge
mov
pop
pusha
pop
(bad)
loopne
mov
xchg
push
mov
push
jp
lock
shl
dec
or
bound
test
dec
shl
xchg
xor
inc
(bad)
fistp
pop
xchg
jle
mov
daa
cmp
inc
fimul
add
pop
cmp
js
aad
adc
and
sub
in
adc
mov
push
dec
jns
ss
jle
sbb
gs
movs
push
std
repnz
jb
and
test
inc
call
jmp
outs
jb
movs
fnsave
test
cmps
sahf
mov
jg
test
cmc
xor
ss
bound
arpl
(bad)
adc
div
mov
out
js
sub
cwde
imul
mov
push
mov
lds
retf
dec
arpl
mov
push
int3
cs
shl
(bad)
outs
jne
mov
sar
jne
movs
hlt
sbb
loop
(bad)
fnclex
jnp
pop
jecxz
push
or
adc
jno
sub
fwait
cli
out
scas
aad
mov
loop
xor
fstp
popf
rcr
mov
iret
mov
frstor
mov
jnp
push
sahf
bound
pop
jnp
int
gs
jl
inc
or
pop
dec
and
sti
jo
jmp
xor
mov
repz
dec
dec
sbb
(bad)
push
add
sar
adc
retf
stc
std
cmp
and
pop
push
cmp
aad
xor
mov
(bad)
clc
sbb
cmp
push
hlt
aam
aam
xchg
std
fdiv
or
jmp
iret
adc
(bad)
ja
pop
sub
mov
dec
das
pop
jbe
pop
jg
cmp
or
clc
repnz
call
cmp
inc
dec
mov
jle
mov
call
sub
xor
(bad)
cmp
adc
inc
imul
sub
retf
retf
mov
icebp
inc
adc
xchg
mov
cmp
popa
pop
cmps
cdq
lahf
fs
lea
jno
pop
fcomp
xchg
mov
sbb
xchg
sub
bound
rep
inc
jmp
add
mov
loopne
xchg
jb
pop
fstp
add
cmp
dec
out
jmp
in
repnz
jl
les
cli
dec
mov
push
(bad)
cmp
cmp
push
cmc
loope
pop
dec
push
movs
xchg
sbb
imul
das
jg
sub
jl
pop
push
push
xchg
ss
test
dec
inc
inc
mov
mov
aaa
cmps
jne
int3
xchg
or
shr
jle
push
sbb
outs
push
pop
test
push
pop
jne
jb
pop
pushf
add
mov
enter
sar
pop
add
and
(bad)
fst
and
nop
sub
sahf
loope
xchg
ins
or
jecxz
arpl
popf
dec
fs
dec
int3
out
jmp
cmp
sbb
inc
mov
jns
inc
inc
aas
pop
(bad)
retf
mov
rcr
inc
mov
add
fdiv
imul
out
loope
icebp
mov
daa
sub
stc
inc
and
dec
mov
xlat
mov
sbb
int
mov
inc
sub
and
mov
out
add
jbe
jecxz
inc
mov
jnp
sub
ds
inc
test
dec
bound
leave
xchg
xor
add
adc
sbb
lahf
(bad)
and
inc
mov
or
push
jmp
loope
sub
cmp
push
mov
xchg
std
jnp
sub
or
pop
jl
push
push
or
or
or
es
add
fdivr
sub
in
daa
pop
popf
retf
jecxz
sbb
js
fbld
dec
imul
cdq
xchg
shl
and
fbstp
cmps
add
stc
and
xchg
in
and
and
call
ins
(bad)
push
imul
mov
ror
es
jno
outs
add
mov
pop
addr16
enter
cmps
test
pop
or
cli
repnz
adc
out
imul
xor
and
fidiv
hlt
cmp
cli
rcr
jne
fwait
xchg
cmp
test
cld
sbb
jmp
pop
jo
iret
mov
push
sar
ins
cmp
popa
xchg
mov
xchg
jnp
jae
bound
aam
sbb
add
jne
hlt
mov
mov
es
shl
retf
and
sub
sbb
scas
rcr
sti
es
pop
retf
mov
nop
ja
mov
jl
xor
xchg
push
jb
daa
or
xchg
scas
jecxz
sbb
out
outs
into
push
inc
ds
jmp
imul
js
fnstenv
imul
lock
sbb
xchg
pop
cdq
nop
xor
inc
jnp
ins
retf
cmp
lock
iret
cld
cdq
push
cmp
lods
jns
or
into
clc
sub
in
(bad)
mov
jo
xchg
test
lods
adc
(bad)
mov
outs
sar
and
pop
add
add
sbb
and
outs
pop
outs
rcr
xor
retf
or
fidiv
pushf
push
mov
mov
rol
mov
mov
cs
dec
stos
cld
mov
mov
mov
stos
dec
push
inc
fwait
jns
mov
add
cmp
adc
aaa
sbb
es
lods
add
mov
xor
fwait
push
std
adc
dec
out
jae
jmp
xchg
xchg
gs
lods
push
dec
cmp
inc
pop
dec
dec
push
aad
add
push
mov
fstp
cmps
popa
icebp
pushf
int
sub
mov
enter
fild
outs
pop
neg
outs
xchg
adc
mov
sbb
cmp
add
push
xchg
les
adc
jmp
ss
test
jmp
mov
pop
dec
jecxz
add
mov
daa
imul
hlt
sbb
mov
hlt
jno
mov
and
xor
sbb
pop
popa
bound
jo
sbb
fist
mov
(bad)
das
pop
(bad)
dec
push
push
pop
jno
xor
mov
push
je
rcl
imul
xchg
movs
or
inc
aad
nop
das
pop
push
loop
inc
adc
or
add
jne
lock
jmp
js
aas
repz
adc
in
mov
sbb
add
xor
arpl
add
cmc
add
jb
test
mov
inc
movs
inc
sahf
repz
xchg
ja
push
ficom
or
test
add
fidivr
sbb
in
xor
loope
sar
cmc
test
or
push
addr16
fiadd
test
mov
gs
cmps
sahf
dec
retf
pop
push
leave
in
or
retf
xchg
outs
inc
add
xchg
lock
ds
dec
mov
mov
pushf
jbe
call
jnp
cmp
xchg
jne
shl
pop
sbb
push
xchg
and
rol
scas
(bad)
aas
lods
dec
pop
mov
mov
or
xchg
ret
stos
stc
out
or
or
mov
inc
cwde
push
scas
mov
mov
mov
aaa
jns
xor
add
mov
mov
push
int
(bad)
jb
jbe
hlt
jl
xlat
pop
sub
ss
ja
mov
dec
ins
(bad)
fs
adc
or
pop
mov
jl
pop
or
add
jl
pop
das
inc
in
clc
mov
lea
cli
pop
sub
gs
rol
push
mov
push
sub
shr
add
inc
std
clc
cmp
inc
int
sbb
fiadd
push
into
ins
aaa
add
not
mov
pop
test
lods
pop
inc
jecxz
jb
test
out
mov
or
mov
jecxz
and
dec
jb
fist
popa
xchg
(bad)
mov
push
mov
(bad)
outs
cmps
sbb
or
mov
out
or
mov
stos
adc
sub
cdq
cmps
xor
push
div
jg
mov
popf
in
xchg
pop
ins
scas
dec
adc
mov
sbb
lahf
mov
arpl
add
call
aam
imul
xor
dec
mov
push
xor
imul
sar
mov
clc
dec
out
and
dec
call
mov
dec
cmp
mov
addr16
and
ds
test
adc
cmp
xor
ret
inc
pop
hlt
inc
icebp
into
mov
retf
ds
stc
je
or
or
imul
aaa
es
pop
stos
mov
(bad)
out
ins
ficom
pop
mov
jbe
das
mov
stc
xor
sbb
jb
push
mov
mov
stos
pop
jae
mov
test
dec
or
add
test
in
or
stc
cs
sahf
push
dec
jae
xor
pop
add
call
stc
fld
fldenv
int3
jns
scas
jmp
xor
push
and
call
aad
cmp
mov
(bad)
cmp
aam
jp
add
mov
movs
jns
sbb
outs
and
aam
mov
inc
or
or
mov
enter
jns
xor
lds
aas
das
mov
clc
xlat
int
xor
rol
jmp
(bad)
int
xchg
mov
movs
rep
(bad)
cmp
fbstp
push
pop
push
push
xchg
rcl
xchg
mov
jg
xchg
enter
js
xlat
and
or
iret
push
sbb
sub
daa
test
mov
xchg
xchg
mov
xchg
and
loope
mov
ficom
adc
popf
sti
push
jg
repz
and
pop
inc
mov
rcr
mov
push
stos
cld
jge
sub
mov
test
pop
dec
sub
nop
sub
add
add
cmp
push
lods
ins
fst
sbb
(bad)
bound
inc
repz
mov
pusha
ins
cmp
push
mov
aas
add
ror
mov
or
push
jb
sub
bound
loope
daa
je
in
js
shr
mov
dec
enter
stos
stos
lods
xchg
mov
(bad)
dec
cmp
cmc
ror
push
aad
pop
popa
push
jge
test
sahf
(bad)
fwait
repnz
ret
pop
ins
cs
pop
(bad)
or
cmp
daa
xchg
loop
or
movs
adc
adc
fisub
cs
int
push
into
stos
hlt
inc
push
and
and
in
dec
(bad)
clc
cdq
cs
pop
cmc
sub
sub
out
movs
lahf
xor
xchg
sbb
xlat
sub
inc
in
push
sbb
mov
call
sbb
ror
inc
sub
xchg
mov
jns
test
pop
hlt
dec
pop
xchg
movs
iret
(bad)
out
adc
push
inc
mov
cmc
movs
fsub
add
mul
mov
mov
mov
jno
sbb
fcom
cmc
into
and
dec
pop
les
jecxz
xor
dec
adc
inc
jne
and
addr16
stos
or
or
stos
dec
push
jae
dec
xchg
inc
in
aaa
mov
lds
jbe
and
mov
sahf
nop
fidivr
ins
arpl
lea
or
scas
in
or
(bad)
clc
daa
jns
or
xor
lahf
addr16
pop
push
xchg
fadd
fcmovnbe
cmp
retf
jbe
loop
mov
jge
call
and
aam
sbb
icebp
bound
push
push
jecxz
enter
cmps
rcl
test
push
mov
idiv
jg
push
dec
xchg
xchg
icebp
ja
sub
and
jae
test
jno
or
add
fs
int3
pop
push
cdq
pop
xor
xchg
push
outs
sbb
adc
fimul
out
xor
jno
adc
aaa
jno
in
add
dec
int
scas
adc
pop
ret
push
sbb
or
jns
into
das
and
in
popa
clc
(bad)
pop
xchg
in
aam
xchg
inc
sub
jo
ret
neg
push
out
or
(bad)
jno
loopne
mov
xor
fisub
retf
xor
enter
test
jbe
jnp
pop
mov
sub
fcomp
cmp
or
in
cmp
popa
pop
and
mov
adc
adc
inc
cmp
aam
push
pop
stos
cli
or
push
(bad)
xchg
and
scas
icebp
cwde
sub
lahf
dec
lods
xchg
jmp
je
ins
add
inc
cmpps
retf
repnz
or
call
ins
jmp
inc
jne
bound
enter
dec
push
cmp
push
push
add
aas
adc
cli
lds
ret
rcr
fidiv
je
sti
cmps
out
or
sub
stos
sbb
mov
push
fldenv
push
jbe
sbb
retf
xchg
sub
int3
fstp
pusha
test
addr16
xor
stc
jns
ficomp
cmovno
movs
push
out
scas
daa
aas
les
cld
test
(bad)
xchg
jo
callw
mov
cmp
mov
ja
retf
sub
dec
rcr
add
cmps
div
cmp
or
mov
add
imul
out
outs
fstp
mov
scas
movs
xor
fmul
and
pop
pop
call
and
add
jmp
pop
addr16
mov
(bad)
movs
xor
int3
out
bound
xchg
cmp
mov
push
nop
movs
out
xchg
push
les
jecxz
mov
stos
mov
inc
jno
fwait
jno
mov
xchg
das
mov
sub
push
push
or
mov
(bad)
popf
mov
aaa
push
into
out
pop
cmp
scas
adc
lahf
loopne
and
add
dec
adc
xchg
fidiv
pop
sbb
addr16
ins
or
cmp
or
setle
sahf
dec
loopne
xchg
outs
jnp
or
in
jo
push
jle
idiv
mov
iret
rcr
mov
cmps
xor
pop
push
ret
cli
std
inc
repz
cmp
inc
or
push
mov
fsub
sbb
movs
adc
iret
jp
loopne
pop
mov
cmps
mov
mov
pop
ds
rcl
leave
enter
xlat
push
jnp
cwde
xor
mov
cmp
rep
push
and
mov
jp
push
aaa
loopne
rol
mov
jnp
or
or
pusha
lds
std
mov
test
aaa
xchg
fdiv
and
sbb
rcl
jl
and
adc
rol
cmp
mov
pop
xchg
aam
ficomp
pusha
(bad)
adc
test
mov
fistp
sahf
push
push
push
test
(bad)
mov
dec
xchg
sub
mov
je
sub
and
sti
xor
xchg
shl
mov
xor
push
cwde
stos
xchg
push
mov
dec
dec
jmp
popa
repnz
jge
mov
js
test
and
sbb
out
shl
push
std
aas
and
test
push
(bad)
scas
mov
mov
fs
cmp
das
int
sbb
loop
xchg
jmp
out
hlt
jle
jo
or
cmp
test
int
js
(bad)
mov
xchg
mov
test
cmp
and
rep
xor
int3
je
jmp
ins
out
sbb
leave
(bad)
clc
sub
cmps
push
imul
cmp
xor
xor
sbb
and
fiadd
ficomp
adc
aad
mov
pop
cld
lea
stc
js
add
mov
lods
cwde
inc
or
fwait
cmp
sbb
inc
dec
out
dec
sbb
push
pusha
pusha
sub
fnsave
pop
or
call
enter
push
mov
int3
ror
adc
push
leave
and
push
adc
adc
aaa
popa
jbe
pop
fs
das
mov
shr
(bad)
sub
cli
out
dec
sbb
aam
leave
inc
and
mov
mov
je
shr
sbb
fst
mov
mov
hlt
jl
xchg
mov
mov
sub
jbe
mov
and
mov
ja
and
call
or
or
inc
sti
sub
inc
xor
xchg
sub
push
or
xlat
div
xor
jle
aaa
test
shr
cmp
sbb
jmp
fsubr
mov
push
dec
ins
mov
loop
mov
stos
add
mov
sbb
imul
push
sub
lahf
ret
sub
leave
aaa
sbb
mov
push
mov
pusha
mov
fisubr
js
call
dec
cmc
mov
mov
xor
and
sub
mov
xor
aaa
xchg
cmps
cmp
das
sar
push
or
pop
in
pop
imul
imul
lahf
(bad)
push
sub
fsubr
mov
mov
aam
mov
dec
test
ret
sbb
ja
mov
mov
xor
sub
(bad)
fistp
in
lods
cmp
sbb
xor
or
add
in
into
jnp
cli
imul
(bad)
mov
icebp
cld
mul
scas
mov
jnp
push
bnd
iret
pushf
popa
ja
repnz
mov
inc
sbb
inc
imul
arpl
add
jnp
das
out
xchg
xchg
or
repz
xchg
sahf
and
xchg
fld
xor
mov
adc
cdq
test
or
mov
adc
add
sahf
out
retf
push
xchg
add
mov
adc
pop
mov
mov
test
lods
push
arpl
cmp
mov
mov
push
(bad)
fwait
mov
push
mov
mov
jno
mov
jmp
add
jbe
sar
out
jo
mov
es
enter
xchg
cmps
movups
pop
mov
jns
mov
jmp
pop
add
test
mov
ss
repz
lods
sub
sub
xor
fbstp
inc
or
rcr
daa
xchg
and
aam
inc
scas
lahf
in
out
in
(bad)
mov
push
mul
sti
or
cmps
imul
leave
dec
fucomi
adc
lds
and
mov
jno
sub
loop
mov
in
mov
xchg
or
lods
leave
jbe
add
mov
ja
test
xor
stos
(bad)
daa
cmp
lahf
fld
pop
mov
je
sbb
cmp
call
push
jecxz
pop
pop
xchg
inc
(bad)
call
gs
jle
jae
and
mov
and
mov
or
movs
dec
nop
xor
push
inc
addr16
(bad)
cmp
pop
test
mov
hlt
jl
cmp
pushf
into
mov
imul
call
xchg
push
push
push
ins
xlat
mov
ret
movs
mov
lods
jecxz
add
push
pop
cmp
xor
mov
icebp
jecxz
and
mov
fldenv
mov
lods
arpl
in
pop
addr16
jle
and
push
mov
hlt
loop
ficomp
mov
fwait
jo
pop
fwait
test
popa
push
(bad)
mov
pop
mov
cwde
xchg
cmp
inc
lods
pop
pushf
add
mov
push
push
jb
(bad)
pushf
push
retf
out
jmp
or
xor
shl
in
xor
dec
xor
sub
sbb
mov
mov
mov
xchg
cs
adc
out
imul
dec
retf
(bad)
cmp
fwait
outs
jle
rcl
jns
dec
or
loope
dec
leave
aaa
jp
fwait
adc
mov
imul
imul
test
pusha
jno
cli
test
gs
sbb
call
sar
jmp
jne
sub
call
pop
pop
mov
mov
and
xor
cmp
xchg
clc
push
leave
sub
cli
cmp
call
push
cmp
dec
out
stc
add
dec
inc
fcos
and
mov
sub
ds
out
in
retf
jns
fld
inc
adc
dec
call
sub
fwait
mov
mov
sti
das
bound
sub
sub
push
inc
add
(bad)
jbe
mov
push
jge
xor
dec
xchg
cmc
add
adc
cmp
mov
fnstcw
dec
sub
addr16
xlat
das
jne
dec
sti
retf
pop
(bad)
addr16
and
(bad)
ret
ds
mov
xor
sbb
in
cmps
ins
jge
iret
sti
fist
lds
cmp
cld
das
push
inc
mov
and
pop
push
pop
mov
jl
xchg
xchg
fcmovnb
scas
sahf
iret
dec
mov
inc
into
ret
sbb
xlat
cld
sub
adc
aam
cmp
js
xchg
dec
add
outs
mov
out
sub
dec
mov
cmp
inc
sbb
(bad)
xchg
pop
mov
adc
dec
pop
jo
jmp
mov
ins
les
stos
(bad)
and
jae
inc
pop
lods
pusha
es
in
mov
enter
mov
jg
rol
pop
push
inc
leave
daa
ja
jle
adc
push
movs
lods
mov
lock
sahf
mov
mov
mov
cmc
shl
add
mov
xlat
mov
shr
sub
jne
es
pop
jns
cmp
inc
push
std
lea
icebp
ja
cdq
xlat
dec
mov
jb
loop
in
cmp
cmp
inc
mov
sub
add
mov
and
imul
pop
sub
xchg
pop
add
or
outs
mov
add
pop
xchg
out
pop
jno
js
mov
mov
xchg
out
dec
jns
sahf
pop
das
pop
call
sub
test
push
jo
mov
xor
je
or
cmp
cmp
or
or
xchg
shl
mov
and
push
sbb
fst
pop
je
and
loopne
fsubr
gs
inc
dec
mov
jecxz
scas
ret
push
add
shl
or
or
mov
call
rcl
(bad)
cmp
or
mov
les
test
ins
mov
ja
dec
retf
lds
mov
loop
and
sbb
lock
or
js
loop
int3
scas
mov
pop
shl
pop
in
loop
add
add
gs
shl
outs
xor
mov
repnz
sub
cmp
dec
idiv
mov
pop
mov
push
jbe
add
mov
mov
pusha
(bad)
xchg
sbb
push
jo
sahf
jecxz
push
cwde
push
jns
dec
sbb
in
mov
mov
mov
ror
sbb
adc
mov
sti
pop
in
sub
fild
cmp
jp
jmp
and
xchg
mov
and
push
xchg
into
(bad)
xchg
xchg
push
fnstsw
fcmove
(bad)
clc
lock
sub
test
cmp
mov
in
bound
lods
inc
pop
std
repnz
loop
test
xor
push
mov
(bad)
cmp
xor
cli
fstp
jnp
les
fdivr
rol
mul
push
xchg
and
in
adc
cmp
ins
inc
call
dec
es
popa
cmp
jecxz
fst
arpl
sub
mov
xchg
inc
add
pop
mov
gs
(bad)
or
jno
mov
fidivr
fdiv
dec
loope
out
cmp
scas
pop
(bad)
repnz
mov
sub
push
(bad)
out
and
inc
push
dec
idiv
xor
sbb
cmps
(bad)
lods
jge
jg
or
jecxz
cmp
sbb
jnp
xchg
xchg
mov
rcr
push
fs
pop
mov
push
shld
push
clc
xchg
mov
pushf
jmp
adc
mov
mov
inc
pop
mov
inc
xchg
int
jecxz
push
push
pop
mov
retf
test
rcr
cdq
and
pop
imul
pusha
jge
or
fldcw
push
repnz
or
mov
cmps
cmp
pop
pop
adc
ins
xbegin
or
loopne
(bad)
je
inc
mov
jmp
inc
inc
jo
pop
cmp
xor
inc
mov
inc
(bad)
fwait
xor
(bad)
mov
int
dec
aad
jl
gs
sbb
js
or
lock
aam
ds
push
sbb
sub
or
push
icebp
dec
xor
mov
jnp
sub
mov
cmps
fst
pop
cmc
push
push
repnz
pop
popf
pop
cli
fild
fs
not
and
call
cmp
fs
push
xchg
cs
sbb
sar
or
test
add
mov
mov
into
clc
mov
cdq
shl
inc
out
js
adc
lods
fbstp
loope
popf
inc
pop
cmp
add
lock
xlat
stos
xchg
test
sbb
jmp
lods
or
test
rcr
add
xchg
fs
adc
(bad)
pop
cmps
push
scas
(bad)
push
cmp
cmps
ins
cld
sbb
fisubr
(bad)
enter
mov
ret
pop
test
and
push
cmp
inc
push
pop
xchg
xchg
retf
jg
fwait
lahf
cmp
fidiv
enter
int
les
pop
out
jns
out
mov
push
add
cmp
pop
fcomp
pop
gs
cmp
xchg
inc
adc
push
les
and
dec
sub
xor
mov
fld
iret
mov
pushf
sti
sbb
jmp
pop
and
dec
out
jecxz
retf
data16
jmp
fild
mov
adc
fcom
sub
push
sub
sahf
jae
sub
ja
adc
xchg
and
call
jl
int3
fidivr
pushf
shr
das
and
aad
nop
ror
pop
push
xor
push
mov
or
in
movs
rcl
and
mov
es
xor
add
out
shr
xchg
rcr
(bad)
neg
in
sbb
fs
and
push
xchg
push
jae
and
in
add
inc
push
sahf
push
div
mov
cmp
sar
mov
push
sub
fcmovu
or
jecxz
into
cmp
stos
jns
push
enter
inc
out
cmp
add
cmp
les
dec
cmp
sub
jmp
xor
or
movs
loope
int3
frstor
pop
jmp
add
movs
rcl
push
mov
dec
imul
fcomi
jmp
ds
iret
out
repnz
mov
fwait
cwde
sbb
sbb
mov
add
inc
jo
es
cmp
mov
in
or
sbb
add
push
pop
pop
outs
lahf
mov
or
cwde
dec
adc
adc
inc
mov
cwde
pop
sbb
inc
and
pop
cwde
xor
mov
aaa
sub
pop
cmp
inc
ins
push
es
mov
lahf
mov
cmps
outs
ret
jnp
sbb
in
pop
xchg
or
clc
adc
cmp
cmc
clc
xlat
outs
imul
jns
in
dec
call
iret
xor
dec
je
rcl
and
cmp
pop
(bad)
movs
(bad)
mov
push
and
leave
not
cs
xor
mov
dec
pop
sti
pop
ror
or
mov
(bad)
out
pop
cmp
lock
push
adc
scas
pop
push
rol
test
pop
int3
arpl
and
jg
call
int
cmp
xchg
(bad)
dec
push
loop
jnp
mov
into
xor
mov
xor
xlat
cmp
movhps
xchg
inc
sbb
mov
jl
jmp
mov
lds
dec
xchg
dec
leave
inc
mul
fs
push
and
ins
and
lahf
xchg
add
xor
jae
call
dec
mov
dec
cdq
cmc
push
idiv
mov
sub
pop
inc
fisubr
xchg
cmp
rcl
adc
sub
in
repz
dec
cdq
mov
sub
aad
mov
in
and
addr16
cdq
inc
leave
mov
ror
sbb
adc
ror
fimul
bsf
jo
or
ret
and
mov
repnz
mov
jle
outs
in
sar
daa
cmp
aad
ss
cmc
test
imul
(bad)
and
mov
int3
mov
cwde
adc
fwait
stc
xchg
cmp
sub
sub
fcmovne
or
sub
cmp
(bad)
fwait
and
xlat
cli
dec
jns
shl
jne
out
mov
sub
inc
push
enter
in
imul
loop
stc
int
or
inc
leave
push
pop
repnz
fwait
jmp
loop
fcomip
jle
stc
in
not
mov
pop
movs
loopne
pop
sahf
xchg
sar
mov
dec
pushf
test
fs
push
arpl
xor
mov
pop
sti
and
and
mov
or
sbb
adc
mov
jnp
and
mov
arpl
xchg
out
in
daa
mov
mov
je
mov
std
and
call
mov
data16
in
mov
pusha
pusha
scas
repnz
and
fist
sub
pop
mov
pushf
push
out
push
jmp
(bad)
mov
je
cmps
ds
adc
stc
xacquire
mov
jmp
xor
xor
push
data16
or
pop
ror
pop
sti
out
push
push
push
add
retf
sbb
nop
jmp
sbb
mov
aaa
(bad)
and
ins
outs
jae
and
imul
out
push
xchg
out
loope
mov
push
mov
imul
mov
jle
pop
cmp
and
outs
repz
or
jl
or
mov
imul
ins
mov
out
and
retf
into
(bad)
push
xchg
sbb
inc
push
movs
fnstsw
fs
mov
lock
call
jl
cmp
push
mov
pop
pop
sbb
out
dec
lds
enter
jecxz
xchg
or
repz
jb
add
mov
sbb
inc
inc
fstp
dec
sub
daa
xchg
dec
mov
and
rcr
sbb
in
xor
pop
enter
pop
or
jp
pop
retf
in
xchg
popw
push
xchg
sar
in
push
dec
fwait
mov
xor
loope
jae
in
push
push
dec
dec
sti
jbe
stos
and
mov
iret
jb
cli
adc
enter
fimul
int
fsubr
scas
push
mov
addr16
test
or
mov
neg
(bad)
leave
stos
mul
push
sub
mov
cmps
mov
cmps
dec
add
fimul
stc
mov
rcl
enter
std
pop
push
lods
ins
add
sbb
in
mov
out
ja
sub
jmp
push
out
dec
imul
sbb
xor
ds
sahf
push
inc
cld
es
dec
sbb
xlat
das
cmp
in
clc
rcl
dec
ja
lods
fmul
xor
jae
sbb
jno
addr16
xchg
and
mov
(bad)
jp
sub
dec
jbe
adc
push
fistp
cs
adc
pop
pop
mov
sar
add
inc
dec
out
aaa
cmp
outs
mov
int
cmp
cmp
ficom
cmp
es
push
aam
inc
pop
sahf
cmps
into
cmp
daa
les
or
or
outs
push
or
inc
mov
mov
mov
int3
xchg
in
test
cmp
ins
(bad)
div
sub
out
and
mov
hlt
adc
call
mov
and
xchg
aad
xor
jl
xchg
std
mov
neg
dec
outs
xor
push
retf
adc
xchg
sbb
sbb
add
lds
dec
(bad)
and
das
out
test
mov
add
push
in
xor
sbb
repnz
jecxz
push
mov
cmp
data16
(bad)
mov
or
test
popf
inc
loop
js
and
add
jbe
sahf
dec
adc
sbb
les
enter
mov
ja
pop
mov
jnp
outs
sar
mov
(bad)
mov
dec
jbe
pusha
xor
sub
ror
sbb
or
ss
mov
in
in
cmp
mov
fild
or
mov
mov
mov
mov
adc
jge
imul
mov
push
cmp
xchg
(bad)
and
mov
add
xor
or
pop
xchg
mov
aad
push
ret
aaa
xchg
or
cs
mov
xchg
rcr
xlat
push
pop
xchg
aaa
xchg
std
push
test
xor
mov
in
loop
test
inc
pop
sbb
in
push
adc
cs
aad
mov
mov
mov
test
push
je
bound
add
in
dec
mov
ret
aaa
cmp
adc
(bad)
push
imul
test
mov
(bad)
fs
jmp
dec
xor
pop
icebp
imul
test
ret
mov
pop
das
xchg
popf
imul
jo
repz
jmp
out
aad
shl
mov
push
mov
sub
pop
push
enter
bound
xchg
test
loope
xor
jo
push
push
gs
aam
push
pop
test
jnp
mov
repz
dec
out
lock
ins
idiv
cli
loopne
(bad)
outs
pusha
mov
lea
push
mov
push
jl
push
sub
cmps
data16
or
pop
lods
mov
mov
pop
add
xchg
dec
icebp
mov
stos
in
push
imul
ret
pop
xor
add
(bad)
out
push
mov
jb
ror
js
(bad)
gs
into
(bad)
fsubp
jb
add
or
enter
xchg
xchg
pop
retf
jmp
inc
gs
es
jo
xchg
fcom
jbe
ret
cmps
ret
dec
mov
mov
push
mov
sbb
sbb
pop
mov
jne
dec
(bad)
mov
cli
jae
in
adc
pop
clc
sub
push
cld
mov
add
xchg
push
mov
mov
sbb
mov
(bad)
in
in
pop
pop
mov
fisttp
pusha
push
aas
scas
jg
cdq
cmp
mov
add
in
mov
sub
jl
jl
ins
in
mov
cmps
fldl2e
xor
icebp
pop
add
sti
lahf
fwait
adc
xchg
arpl
sub
fdivr
rcr
jo
and
adc
mov
cwde
push
(bad)
mov
add
ss
ins
js
stos
test
(bad)
jl
lock
stos
and
pop
out
lods
xchg
rol
xor
in
in
mov
add
adc
in
repz
clc
imul
xor
jae
jne
pop
hlt
addr16
shl
dec
pop
sahf
jnp
xchg
inc
scas
mov
je
mov
xchg
clc
or
dec
in
in
push
rol
pop
xchg
add
and
xor
lds
mov
jo
mov
addr16
add
pmaxub
pop
and
dec
dec
stos
mov
pop
sub
adc
xchg
call
mov
mov
gs
imul
add
push
add
xchg
adc
xchg
pop
repz
pop
cmp
out
or
shl
sbb
loope
dec
xor
clc
bound
mov
mov
pop
mov
mov
add
imul
sub
std
fwait
push
pop
inc
xor
sbb
(bad)
js
xor
sub
daa
push
je
cmp
scas
ret
mov
xchg
(bad)
sar
es
mov
fisttp
pop
add
add
pop
faddp
dec
iret
or
mov
add
outs
sub
js
jae
lahf
pop
add
inc
test
lods
cmp
dec
mov
jo
int
outs
add
cwde
out
pop
jb
addr16
sub
jns
sbb
adc
push
clc
pop
call
or
xor
pop
scas
(bad)
sbb
jnp
imul
inc
mov
rcl
clc
ins
cld
rcr
cmp
das
xchg
jg
dec
or
das
inc
in
outs
les
es
ds
add
pop
fsub
inc
mov
lea
scas
pop
and
aaa
fdivr
pop
popa
das
stos
icebp
je
mov
shl
popf
adc
sbb
in
aam
inc
or
cmp
sbb
in
xor
sar
jnp
call
and
inc
test
(bad)
push
or
addr16
fadd
push
int
fs
dec
push
jb
ficom
xchg
xchg
xchg
dec
das
push
push
iret
adc
dec
sub
(bad)
pop
mov
pop
and
nop
mov
mov
paddd
test
adc
xor
popa
(bad)
push
push
out
dec
push
xor
inc
and
ds
mov
mov
and
or
push
push
lea
mov
add
(bad)
inc
dec
lea
dec
movs
xchg
add
cdq
aas
lock
xchg
jns
add
dec
lea
jmp
push
aad
(bad)
jae
cs
xor
xor
movs
sbb
call
push
mov
mov
xlat
nop
rcl
scas
dec
(bad)
mov
fimul
mov
dec
xchg
mov
lds
dec
cmps
nop
pop
pop
adc
lahf
xchg
(bad)
fisub
call
xor
les
pop
sub
jnp
into
sahf
icebp
adc
jmp
shr
cmps
dec
mov
inc
sbb
out
push
data16
mov
ret
je
fimul
push
jno
in
jp
(bad)
dec
sbb
mov
fdiv
adc
int
in
sub
mov
out
inc
(bad)
jle
inc
jae
dec
cmps
or
cld
mov
adc
fisttp
sbb
push
xchg
loopne
push
aaa
aam
fnstcw
pmuludq
mov
pop
mov
rol
lahf
sub
cmp
push
sti
pop
sbb
pop
xchg
popf
loop
retf
cmp
jb
push
aad
call
push
retf
icebp
lea
push
inc
fbstp
sbb
scas
add
mov
ins
sti
mov
xor
cmps
inc
add
std
movs
xlat
mov
lock
and
add
mov
and
test
and
ins
xchg
aaa
ss
cmps
jge
sub
fsub
mov
mov
out
sti
popf
add
add
inc
popf
mov
(bad)
adc
xor
(bad)
adc
aaa
lock
lods
jbe
mov
jmp
cmp
dec
cwde
push
dec
or
scas
push
adc
repz
call
out
mov
jecxz
arpl
fs
sub
lea
sbb
(bad)
popa
dec
call
mov
xchg
pop
fnsave
sahf
shr
or
and
fist
ins
ret
dec
aam
and
mov
enter
adc
rcl
dec
mov
repnz
xchg
mov
mov
jmp
outs
and
xchg
cwde
div
mov
in
(bad)
je
add
adc
jp
mov
lea
outs
in
mov
pop
dec
retf
cmp
ret
inc
leave
test
inc
pop
pop
mov
lds
rcl
xchg
pop
jl
clc
push
inc
std
sub
je
popa
stos
dec
in
stos
push
js
test
je
inc
inc
ds
add
mov
sub
dec
les
dec
dec
bound
jbe
jmp
in
mov
jns
lods
imul
cmp
mov
loopne
fwait
mov
add
push
imul
sub
hlt
es
dec
(bad)
dec
(bad)
xchg
fmul
push
mov
inc
jmp
fs
bound
es
jae
push
(bad)
lea
jl
js
cdq
loopne
dec
scas
cmp
pop
sbb
movs
movs
cmc
add
or
out
ret
xlat
enter
add
add
sub
mov
pop
pop
sti
cmps
cmp
push
add
add
sbb
cmp
in
mov
das
sub
mov
add
fwait
pushf
repnz
fwait
arpl
push
std
ror
mov
xchg
lods
retf
ja
sbb
xor
ror
lock
pop
push
lods
or
in
call
imul
lahf
dec
call
(bad)
je
adc
xor
es
ret
sub
mov
faddp
mov
dec
(bad)
xchg
cdq
sub
popf
mov
dec
fnsave
push
test
or
jle
jg
fs
pushf
cdq
and
mov
into
daa
cli
xchg
xor
pop
add
pop
in
push
std
inc
call
jg
fild
cmc
dec
jnp
outs
add
and
xor
retf
in
ficomp
std
xor
mov
mov
lahf
hlt
push
rcl
jns
mov
jmp
(bad)
jnp
jo
(bad)
cli
pop
int
les
jnp
mov
stos
mov
arpl
or
or
js
js
mov
push
fnstsw
mov
popa
int3
push
sbb
push
int
mov
data16
adc
xchg
and
push
push
fdivr
gs
stos
add
out
xchg
out
fisttp
ficomp
cmp
xor
ret
scas
int3
scas
xlat
in
lahf
fst
mov
ret
and
(bad)
mov
pop
or
loopne
push
dec
jmp
in
jne
cli
or
jne
iret
movs
in
cdq
lds
es
xor
shl
pop
cmp
popf
xchg
and
pop
shl
inc
xor
cmp
xlat
and
into
push
xchg
addr16
movs
imul
fld
xor
enter
mov
jmp
or
dec
(bad)
in
cdq
enter
and
jecxz
call
stos
int3
or
clc
mov
dec
jmp
int
cld
out
bound
int
jg
and
lds
enter
xchg
add
push
mov
xor
pop
mov
lds
retf
inc
xor
push
jle
jae
push
sub
xchg
dec
fxch
sti
pop
jns
lods
pop
cmps
test
in
or
(bad)
xchg
je
and
xchg
sahf
xor
sub
inc
scas
js
stc
out
pop
fsubrp
hlt
cpuid
or
fld
fadd
fisubr
aaa
call
jnp
pop
xchg
enter
imul
fs
ds
push
inc
xor
in
cmps
std
movs
aas
adc
imul
sub
mov
cvtpi2ps
cmp
das
movs
pop
repnz
xchg
dec
test
stos
add
bsr
sbb
mov
cmps
and
mov
shl
xlat
sti
ja
push
xor
jecxz
and
ss
int3
xor
aam
adc
mov
pop
imul
cli
mov
inc
cld
push
fstp
bound
enter
ja
iret
pop
jbe
xor
push
sbb
ss
or
or
cwde
setle
pop
xor
movs
lock
xchg
data16
pop
push
repnz
aaa
xor
sar
mov
inc
jnp
mov
jp
xchg
pop
xchg
mov
inc
mov
adc
xor
push
pusha
cmps
dec
sbb
ins
pop
scas
nop
repnz
pushf
mov
and
pop
sbb
cmp
xor
and
xchg
adc
sub
xchg
jmp
sar
pop
push
dec
push
dec
or
sbb
inc
adc
ror
push
add
add
retf
mov
movs
cmc
mov
ins
into
ret
mov
or
add
pop
fisubr
cmps
pop
ja
pop
ret
push
leave
test
jmp
mov
test
out
sti
cs
cli
push
adc
mov
movs
push
or
and
in
dec
cdq
xor
cs
mov
addr16
inc
(bad)
cmp
cli
fisub
popa
sub
imul
inc
or
jecxz
pushf
outs
and
pop
mov
ins
imul
test
push
aad
add
fadd
aas
in
mov
inc
(bad)
in
je
sub
dec
push
je
call
rcl
push
mov
xchg
inc
add
cs
pop
adc
dec
fmul
mov
cs
mov
push
push
adc
mov
mov
hlt
stc
cmc
mov
cdq
xchg
adc
sbb
mov
pop
push
bound
aas
sti
ds
aam
xchg
jmp
mov
pop
jp
cmovb
adc
push
pop
cld
cmps
not
jp
cld
clc
fwait
fwait
loop
(bad)
dec
add
ret
and
mov
jp
adc
xchg
test
dec
nop
mov
and
mov
xor
mov
lea
sbb
inc
push
jge
mov
push
pop
je
stos
xchg
call
mov
mov
or
outs
pop
sbb
int
push
out
and
pop
adc
int3
ret
movs
jl
push
cmp
cmp
gs
sub
pusha
dec
pop
sahf
push
inc
daa
mov
lds
jo
pop
stc
mov
addr16
push
cmp
and
adc
aaa
movs
xor
loopne
add
out
or
xchg
mov
push
enter
sbb
xchg
inc
cmp
or
mov
pop
sub
dec
push
jae
sbb
push
xchg
or
(bad)
stos
mov
into
pusha
aam
ins
nop
xlat
jns
lods
sti
mov
push
shl
js
and
test
shl
inc
ss
or
adc
push
in
add
enter
frndint
cs
sub
jnp
cmp
xchg
mov
push
jle
push
sar
lods
fistp
movs
into
push
call
cwde
in
push
xor
clc
cli
leave
mov
xor
pop
sbb
push
jge
(bad)
daa
mov
std
cld
mov
inc
mov
mov
out
retf
lods
cli
jns
mov
in
retf
push
lock
push
xor
leave
jae
mov
retf
cdq
sbb
clc
pusha
sbb
outs
or
sub
xchg
or
pop
popa
lods
(bad)
sahf
arpl
js
sub
scas
xchg
xor
pop
es
dec
aam
icebp
pop
and
test
mov
adc
and
in
retf
inc
jmp
add
ret
test
cwde
rcl
dec
mov
push
mov
mov
jae
lahf
sub
push
sub
jmp
fnstenv
mov
push
sbb
xchg
rcr
in
inc
and
lds
mov
jne
adc
xchg
enter
sbb
mov
xchg
xchg
jl
aas
jmp
inc
test
mov
cmp
xor
jmp
arpl
push
(bad)
test
jmp
repz
aam
lea
call
lods
jge
enter
mov
cwde
sub
dec
xchg
jns
add
sub
mov
les
xchg
mov
adc
retf
imul
push
into
push
push
ds
add
aas
sahf
popf
pop
mov
dec
dec
push
(bad)
jle
fistp
cmps
shr
add
adc
shl
lea
jg
push
repnz
repz
and
imul
mov
and
add
jge
xchg
arpl
mov
test
ss
jle
push
jns
inc
jp
inc
js
fld
daa
loop
pop
lea
ror
mov
push
into
push
push
movs
into
and
ficomp
pop
in
add
in
mov
and
out
inc
repnz
add
shr
mov
push
movs
in
xor
es
push
pop
fidiv
bound
arpl
cmp
jno
dec
jns
call
cmp
mov
js
jmp
ins
add
inc
push
pop
dec
mov
loopne
div
test
dec
or
das
sbb
xor
rcl
mov
dec
(bad)
pop
mov
xchg
cmp
jge
mov
xor
jo
popa
mov
jmp
mov
aad
retf
sbb
dec
jns
push
add
out
mov
dec
aas
mov
xchg
and
adc
cdq
jmp
sub
mov
cmps
js
ja
mov
gs
jp
or
adc
ins
sbb
arpl
or
xchg
leave
add
aam
pusha
xor
orps
cmp
mov
xor
repz
push
aam
and
jle
sub
mov
lea
jl
push
sbb
arpl
pop
mov
fnstcw
sti
cli
test
stc
int3
jne
inc
ja
fdivr
ds
jmp
das
push
and
mov
sbb
into
push
sub
cmp
cdq
cmp
mov
adc
fisub
fld
sbb
push
push
retf
mov
jb
mov
xor
dec
js
fidivr
dec
js
mov
fiadd
jmp
test
movs
aad
xchg
stos
jb
loop
rcl
shl
cmp
je
jns
pushf
popf
jno
pop
mov
jno
cli
leave
adc
lods
push
in
loop
sub
inc
and
pushf
lods
and
and
sub
ret
pop
mov
sbb
or
lods
stc
aam
pop
jecxz
adc
sbb
pop
mov
inc
mov
mov
and
test
sub
retf
xlat
cmp
cmp
pop
sub
jle
push
cmps
and
inc
retf
jl
push
idiv
add
stc
shl
jl
out
lods
dec
cld
movs
(bad)
outs
cmovnp
sti
push
mov
xlat
sbb
leave
(bad)
xchg
dec
add
xchg
and
mov
cli
dec
pop
jne
imul
test
leave
ins
in
push
xchg
fwait
adc
xchg
fwait
scas
out
sbb
repz
int
loope
mov
push
out
sub
cmp
push
leave
mov
pop
mov
jle
push
sbb
xchg
stos
cdq
ss
rcl
mov
jo
dec
call
repnz
call
or
test
cmp
les
add
jae
sub
ret
mov
push
fnsave
pop
adc
jbe
xchg
popf
adc
jp
shl
imul
das
mov
inc
aas
pop
in
sbb
sub
lea
retf
fldenv
mov
pop
xlat
push
dec
mov
test
adc
jne
xor
in
push
push
movs
mov
ja
hlt
adc
cmps
push
xchg
inc
leave
mov
mul
data16
add
jmp
mov
pop
setg
leave
out
lahf
lds
inc
cld
pop
fisubr
cmp
fisubr
daa
fisttp
das
imul
jmp
mov
arpl
inc
adc
jae
sbb
sub
pop
jmp
mov
lods
repz
sar
test
shl
and
jge
int3
mov
sbb
out
dec
icebp
xchg
sub
pop
lahf
shl
push
push
fldcw
dec
sub
pop
jl
dec
int
repnz
ins
ss
cs
xor
mov
rol
in
repz
das
jmp
shl
out
mov
in
ds
mov
xchg
loope
dec
xchg
pop
push
leave
ja
push
into
sti
jp
push
cmp
adc
fcomp
(bad)
popf
adc
dec
fcom
mov
call
sbb
pop
inc
movs
dec
clc
sub
rcl
push
xchg
push
jo
sahf
sub
mov
int
ins
dec
(bad)
xchg
adc
je
adc
jns
in
(bad)
scas
mov
sub
ins
hlt
popf
aam
shr
enter
inc
xor
xor
sub
mov
jnp
xor
dec
ficom
cmc
mov
sub
fld
call
and
pop
push
fneni(8087
cmp
es
mov
sbb
pop
arpl
push
pop
push
lds
mov
dec
into
cmps
cmp
dec
inc
xor
add
mov
and
ret
add
data16
jg
mov
cwde
jl
push
lds
xor
xor
out
dec
stos
iret
jns
or
mov
or
je
aaa
sbb
fwait
sub
popf
imul
and
daa
add
mov
(bad)
mov
push
cdq
cmp
adc
mov
cmp
sbb
cmp
add
mov
sbb
ins
and
pop
or
inc
push
or
sub
jb
jnp
push
jbe
pop
cmp
mov
jl
jo
adc
push
cld
pushf
dec
jae
dec
std
cmp
cs
jmp
xlat
xchg
mov
sbb
repnz
or
(bad)
fbld
imul
lods
dec
sub
mov
dec
dec
bound
jae
push
inc
dec
cmp
ds
mov
cs
push
sbb
cmp
jno
or
shl
push
std
or
cmp
fdivr
ss
(bad)
cld
aas
or
stos
dec
in
and
repz
fsub
rol
mov
or
pop
int
mov
movs
std
mov
sbb
dec
jno
popa
cmps
aam
mov
daa
test
stc
mov
jne
aas
push
ins
inc
out
stc
lods
sub
xchg
add
push
inc
and
jo
outs
(bad)
ds
rol
shl
in
stos
sub
loopne
jno
push
cmps
xchg
sub
jns
fst
xchg
sbb
mov
lahf
cld
lods
or
push
mov
sub
pop
adc
adc
sbb
push
adc
test
push
dec
in
add
pop
xor
mov
out
stos
mov
jmp
pop
pop
add
push
fsubr
cmps
jns
xchg
jbe
sbb
adc
and
or
sub
sub
mov
push
or
fucom
in
xor
out
pushf
repz
cmp
std
pop
sti
push
inc
pop
or
xchg
lea
inc
movs
dec
imul
pop
inc
dec
jbe
xlat
sbb
jge
or
push
stos
push
mov
cmc
push
addr16
and
pop
scas
xor
data16
cmps
ret
jae
ins
sub
enter
sub
call
jmp
cmp
or
imul
add
das
in
mov
imul
dec
fiadd
adc
push
repz
frstor
bsf
cwde
pop
dec
pop
sub
(bad)
daa
dec
imul
push
jae
inc
je
pop
inc
hlt
cwde
cmp
pop
or
sub
hlt
pop
mov
(bad)
ds
imul
push
adc
lahf
mov
arpl
or
mov
push
loop
add
pop
xor
jle
jecxz
adc
ss
test
fcom
or
or
scas
and
fldcw
outs
pusha
(bad)
call
push
mov
cli
cs
inc
sbb
add
adc
cmp
loope
lods
sub
mov
xor
jecxz
stos
fisttp
or
shr
cmp
xchg
scas
mov
shl
and
mov
push
push
dec
push
inc
lock
iret
cmp
adc
inc
push
or
push
ret
fdivr
xor
add
jl
push
test
push
mov
xchg
and
rcl
mov
sar
and
nop
test
xchg
add
fsub
mov
xchg
pop
mov
mov
shl
inc
jge
sahf
aas
inc
add
cmp
out
test
or
mov
inc
jo
mov
xor
cwde
pusha
das
jmp
sub
mov
adc
jne
stos
pop
mov
in
int3
and
mov
inc
inc
out
int3
rcr
dec
inc
cmp
cdq
imul
xchg
adc
loope
call
stc
(bad)
cmp
xchg
pop
int
dec
push
pop
daa
adc
fistp
lods
mov
jle
cld
fnstsw
out
mov
imul
xchg
push
bound
inc
lods
jge
out
dec
lods
xlat
dec
in
mov
out
fs
out
xchg
adc
dec
popa
and
(bad)
ficom
out
jmp
inc
rcl
int
and
int
fistp
cmp
jle
mov
out
dec
fsubr
xor
call
dec
jns
mov
dec
cmp
jg
cmp
les
cmp
shl
pop
outs
test
and
inc
jg
and
repnz
mov
scas
scas
mov
mov
pop
call
(bad)
mov
or
out
test
mov
xor
sbb
fsub
scas
retf
loopne
pusha
mov
adc
dec
cmp
dec
sbb
push
outs
call
sub
lahf
lods
xchg
mov
add
pop
fimul
int3
cwde
dec
or
imul
in
mov
mov
cwde
cmps
xor
call
pmuludq
call
xlat
(bad)
jl
add
push
cmp
fdivr
test
inc
or
add
mov
xchg
jno
jb
test
lods
in
inc
mov
or
jmp
pop
mov
pop
cmp
add
out
mov
xlat
aam
in
(bad)
fwait
push
rol
mov
push
pop
jp
pop
push
mov
movs
iret
or
(bad)
inc
retf
or
jae
shr
mov
dec
sbb
imul
loope
adc
xlat
rol
test
pop
push
jae
nop
into
dec
lock
imul
mov
out
push
lds
rcl
xchg
jbe
add
test
mov
movs
stc
jo
loope
outs
lahf
sahf
in
jns
mov
and
movs
in
inc
test
imul
rcl
jne
rcr
daa
mov
out
imul
fdivr
cld
shr
lock
lock
sub
sub
cmp
je
stos
xor
dec
les
xchg
mov
inc
jmp
into
daa
xor
mov
in
aas
loopne
cmps
addr16
repnz
lahf
(bad)
leave
loope
lds
jne
dec
cdq
cmp
push
push
mov
je
sub
ins
inc
out
and
imul
push
sub
jl
ror
jo
adc
loop
(bad)
xchg
jmp
mov
dec
push
pop
sar
sbb
xchg
retf
mov
pop
out
xchg
test
inc
jl
ror
aam
cmp
push
push
mov
xor
retf
mov
pop
ret
(bad)
jl
pop
mov
jno
inc
retf
sub
push
fs
test
add
mov
leave
cmp
jge
loope
push
inc
out
in
call
arpl
bound
mov
inc
push
push
mov
cmp
mov
rcl
xchg
mov
popa
inc
dec
out
js
mov
clc
mov
sahf
popa
mov
rcl
and
mov
push
dec
cmps
pop
retf
frstor
xchg
xchg
dec
test
sti
inc
mov
fidivr
and
pop
inc
mov
add
daa
and
xlat
ja
or
jbe
shr
ins
pop
cmp
mov
cmp
push
pop
stos
pusha
jb
mov
push
ficomp
mov
adc
rcl
dec
add
or
mov
push
lea
jb
jle
cs
cmp
cwde
cmps
mov
push
int
test
sbb
in
mov
js
sub
add
or
fdiv
or
sti
sbb
xchg
fisubr
adc
cmp
enter
stos
out
leave
cmp
dec
push
mov
repz
(bad)
dec
cmp
call
and
sub
imul
add
or
jne
inc
stos
das
(bad)
cmps
fidiv
nop
add
pusha
cmp
movs
imul
pop
add
jmp
test
imul
jbe
fcomp
adc
xchg
mov
lock
inc
mov
pushf
jg
xchg
push
std
sub
and
into
xor
sahf
mov
imul
xor
or
mov
xchg
mov
out
(bad)
sahf
sti
call
inc
sub
jns
xlat
mov
repnz
pop
add
cmp
enter
sub
mov
jmp
jmp
js
sbb
add
mov
adc
icebp
jge
dec
aad
mov
mov
daa
ds
xor
add
push
sbb
lahf
cmps
inc
push
mov
inc
out
push
sub
call
xchg
(bad)
(bad)
jmp
jmp
cwde
adc
cmp
std
push
or
sahf
in
out
fs
cwde
(bad)
jne
arpl
(bad)
and
push
xor
and
cmp
jp
outs
call
scas
add
in
in
cmp
out
add
dec
(bad)
imul
mov
mov
adc
(bad)
test
ja
xor
cmp
dec
out
imul
add
dec
dec
lahf
mov
jmp
gs
aam
dec
push
mov
cmc
sub
in
xchg
or
jae
lods
jae
out
imul
inc
lds
in
mov
in
fs
ret
adc
cmps
retf
cdq
lock
xor
(bad)
shl
leave
jle
mov
ins
add
fidivr
lds
inc
movs
outs
popa
adc
sbb
inc
mov
add
mov
daa
sub
and
mov
jge
or
rcl
sub
add
fnsave
fwait
lea
mov
pop
and
jne
ins
push
sub
ror
jmp
sbb
lock
mov
clc
jnp
ja
mov
fstp
jno
sbb
in
pop
call
repz
cwde
and
nop
int3
(bad)
sbb
inc
mov
stos
gs
jg
mov
sbb
or
jmp
repz
retf
xor
xchg
sbb
push
stos
and
mov
aas
test
shl
in
cmp
dec
mov
jmp
imul
xchg
js
shl
push
in
lods
xchg
enter
xor
mov
jp
jae
fcmovnb
sub
push
rcl
sar
cmp
movs
loope
(bad)
je
div
sub
mov
sbb
inc
movs
dec
jmp
and
xchg
dec
sbb
mov
mov
xchg
fcomip
mov
inc
test
xor
mov
iret
jle
jmp
mov
aam
in
in
mov
mov
movs
ret
sbb
mov
popf
fist
lock
jb
push
rcl
scas
sub
adc
push
mov
add
xchg
mov
mov
aam
xchg
in
repz
cld
mov
add
dec
loop
add
scas
xor
hlt
loopne
out
or
cli
fst
push
push
jae
inc
in
cli
jmp
test
add
inc
mov
dec
out
cdq
mov
jns
into
fidivr
add
out
jmp
inc
push
or
fsub
pop
and
adc
daa
rcl
mov
out
es
add
call
fdivrp
sub
sbb
fstp
(bad)
or
loop
js
adc
cmp
add
mov
out
pop
into
adc
les
xor
adc
inc
(bad)
xor
add
add
dec
shl
jmp
or
repz
(bad)
mov
sub
fistp
popa
dec
nop
pop
mov
inc
sub
xor
jnp
mov
xor
outs
pushf
in
mov
sti
(bad)
cs
bound
push
xchg
dec
fcom
mov
aaa
sahf
cmp
xor
jp
adc
inc
cwde
or
aas
and
jmp
mov
or
lock
sbb
xchg
and
mov
cmp
xchg
addr16
test
imul
retf
sbb
pop
imul
vmovd
cmp
jne
repnz
cmps
in
push
xchg
mov
mov
xchg
out
and
mov
xchg
popa
popa
(bad)
retf
jmp
fisubr
in
fld
sbb
lock
fcmovb
push
xchg
or
fldenv
add
outs
push
push
pop
cmp
adc
jp
and
movs
and
xor
mov
or
push
loopne
idiv
stos
jnp
pop
jns
cli
jmp
add
aad
lahf
xchg
add
aaa
sbb
loope
scas
(bad)
movs
add
add
sbb
or
pop
jp
or
sti
popf
es
cmc
jne
jnp
out
push
sbb
aas
pop
mov
pop
and
pop
xor
xor
inc
ins
dec
adc
nop
push
es
repnz
pop
xor
mov
push
sub
ret
ja
mov
push
mov
cs
jbe
pop
inc
jne
mov
out
inc
lods
xchg
fprem1
aad
dec
out
fst
pushf
jmp
and
pop
and
push
push
out
loopne
xchg
stos
xchg
or
mov
jns
(bad)
sub
dec
rcr
adc
mov
pop
popf
loopne
mov
jbe
jle
pop
pop
inc
dec
sbb
xchg
or
aas
push
or
rcl
jnp
mov
ret
pop
outs
sbb
mov
(bad)
mov
mov
push
mov
cmp
cmps
xor
pop
cmc
jle
lods
call
js
bound
pop
add
sub
mov
xor
dec
mov
dec
or
xor
xchg
mov
ret
or
cmps
add
fstp
sbb
inc
mov
or
(bad)
jp
mov
hlt
ror
mov
cdq
loope
loope
ds
popf
ret
in
mov
cwde
call
fdiv
retf
int3
mov
sub
movs
fadd
ins
push
xchg
push
call
icebp
shl
xor
jno
hlt
or
xchg
or
mov
imul
sub
aad
add
pop
or
adc
jbe
jmp
imul
jae
cmp
mov
mov
pop
or
daa
lahf
(bad)
mov
(bad)
ss
jo
movs
mov
inc
pop
cmp
dec
add
xor
add
xchg
push
xor
pop
(bad)
dec
int3
inc
fcomp
push
jne
mov
cli
aaa
imul
and
and
xchg
das
outs
ret
test
out
xchg
lds
fstp
adc
test
(bad)
xchg
and
mov
test
inc
scas
jns
sub
sub
mov
adc
push
scas
add
pop
dec
ss
adc
push
ret
(bad)
dec
repz
sbb
movs
and
xchg
pop
mov
int3
inc
fnstsw
into
inc
div
jbe
(bad)
jo
jne
xor
call
test
mov
mov
std
mov
xchg
movs
imul
mov
loope
(bad)
jecxz
and
mov
test
mov
dec
mov
mov
push
dec
lea
mov
pop
aaa
out
sbb
push
xchg
sub
stos
push
xchg
xchg
loop
sar
cmp
add
dec
gs
push
leave
ss
bnd
jl
gs
cmc
mov
das
mov
jmp
xchg
xor
std
mov
rcr
pop
dec
(bad)
lds
(bad)
push
push
jecxz
cmp
iretw
ss
adc
push
into
or
call
inc
jp
push
mov
and
retf
aaa
inc
dec
pop
movs
or
test
pop
xor
dec
adc
outs
dec
xchg
pushf
mov
(bad)
jnp
in
pop
xchg
add
mov
dec
or
rol
sub
xor
pop
mov
xchg
repz
repnz
inc
xor
jns
popf
pop
inc
int3
sub
sbb
or
call
jecxz
sahf
sub
adc
mov
xchg
mov
add
outs
fistp
mov
int
stos
out
loop
dec
(bad)
shl
inc
mov
enter
push
push
dec
mov
jmp
jl
mov
ds
xchg
jecxz
sbb
lods
or
loop
inc
xchg
jmp
js
cmp
into
mov
pop
jae
in
sub
xor
push
push
sub
es
out
test
mov
loope
jb
inc
mov
jmp
addr16
retf
aaa
cdq
xchg
imul
int
imul
stos
or
jl
inc
mov
or
fisttp
aaa
mov
add
xchg
pop
pop
adc
fwait
test
(bad)
ret
iret
pusha
retf
adc
fwait
jo
sbb
pop
loopne
add
pavgb
sub
stc
out
inc
rol
pop
cmp
les
popa
aaa
mov
push
(bad)
sti
inc
mov
retf
daa
in
mov
xor
outs
adc
cmp
push
(bad)
daa
test
fistp
into
jge
mov
or
fsubp
je
popf
cli
mov
sbb
ds
mov
xchg
sbb
xor
or
mov
mulps
cs
cmp
(bad)
nop
ins
sbb
xchg
repz
xchg
dec
jmp
mov
xor
jmp
xor
cld
leave
retf
pop
mov
or
daa
movs
pop
in
(bad)
cld
cmp
std
cld
add
stos
(bad)
fmul
mov
ins
xchg
sahf
retf
gs
pop
sub
inc
fistp
jmp
fidivr
dec
pop
mov
stc
pop
mov
inc
out
pop
or
jmp
dec
inc
or
xchg
iret
sub
jb
cdq
call
pop
dec
or
fs
push
ja
je
pop
mov
xor
dec
fsubr
xchg
cwde
ins
and
popa
cmp
push
and
aaa
adc
xchg
jmp
sub
adc
jne
mov
(bad)
fwait
pop
mov
mov
(bad)
movs
adc
test
mov
push
mov
xor
rcr
test
sbb
pusha
fsubr
ret
shr
mov
(bad)
jecxz
dec
push
jb
aad
cmp
xchg
(bad)
lahf
mov
cs
push
jmp
ret
movs
cwde
jb
inc
in
xor
and
movs
call
idiv
cs
adc
aas
pop
or
sbb
fwait
jmp
cmp
mul
dec
fcom
rcl
pop
xor
xor
hlt
mov
pop
fsubr
mov
stos
dec
out
push
pop
mov
add
adc
pusha
outs
xchg
push
icebp
sub
ins
ret
cld
xchg
jmp
out
inc
sub
and
(bad)
xchg
jmp
pop
gs
or
pop
clc
jl
push
sub
jg
push
jae
adc
mov
and
imul
icebp
jl
loop
fsub
mov
xchg
jmp
dec
shl
clc
xlat
jbe
(bad)
enter
jle
dec
xchg
and
dec
xchg
repnz
xchg
out
push
aam
and
imul
fiadd
push
inc
sbb
scas
lods
cmp
mov
push
adc
mov
push
mov
sbb
xchg
mov
cld
cmp
pop
jne
add
xlat
jg
mov
movs
call
add
jle
mov
adc
data16
push
fimul
imul
add
movd
mov
adc
test
jg
sub
add
add
inc
jns
inc
mov
or
(bad)
repz
dec
test
push
and
sub
loope
movs
cmp
inc
jge
pop
nop
cmp
mov
push
or
aas
add
clc
enter
mov
and
xor
aaa
(bad)
mov
out
sub
lahf
cs
jnp
sahf
pop
fadd
movs
and
lods
xor
cdq
mov
inc
mov
shl
mov
ffree
jl
dec
jbe
out
iret
lds
xor
push
and
dec
mov
lock
adc
aad
xor
(bad)
jp
test
push
xor
jmp
pop
imul
dec
pop
add
aad
movs
add
fmul
adc
xchg
clc
cmps
dec
push
or
inc
sub
ss
jo
sti
pop
arpl
mov
mov
jnp
scas
(bad)
ror
ins
cmps
dec
lods
jns
stos
jl
xor
push
adc
sbb
jl
pop
xchg
cmp
pushf
xor
fstp
out
jno
xchg
jne
retf
mov
(bad)
mov
mov
mov
jmp
addr16
adc
ror
ins
xchg
push
retf
outs
mov
and
mov
or
ja
fistp
push
cs
iret
stos
push
inc
daa
sbb
dec
dec
rcr
xchg
lahf
ins
push
psrlw
mov
cmp
cld
pop
lods
push
push
ja
and
add
xchg
jecxz
mov
push
scas
inc
call
retf
cmps
cmps
adc
div
in
jle
popf
paddb
xchg
jbe
std
mov
test
jo
sbb
push
mov
ja
call
dec
leave
mov
icebp
gs
daa
loop
inc
mov
jns
adc
mov
mov
lock
xor
sub
add
lods
push
cmp
dec
push
retf
jbe
lock
mov
mov
in
loopne
out
push
cmp
out
js
add
dec
pop
dec
fcomp
inc
add
outs
cmp
inc
xchg
out
adc
xchg
in
or
mov
cmps
shl
add
jns
xor
sub
(bad)
mov
and
imul
push
cmp
push
sbb
mov
in
rol
jns
test
test
je
mov
aad
mov
pushf
mov
in
adc
cli
xchg
or
push
clc
loop
int
mov
iret
in
pusha
pop
call
mov
scas
jge
imul
mov
xlat
xchg
mov
mov
inc
mov
adc
or
jae
mov
call
cmp
int
call
fistp
push
imul
xchg
aad
out
xchg
inc
imul
mov
loopne
mov
push
push
retf
test
and
in
shl
inc
lds
fidivr
xchg
xchg
push
or
js
addr16
dec
fstp
xchg
mov
inc
sbb
mov
icebp
or
xchg
call
mov
jo
pushf
shl
jb
xchg
test
xchg
dec
mov
sub
mov
jns
xchg
rcr
inc
cmp
mov
and
add
adc
mov
inc
mov
shl
mov
out
inc
push
pop
ror
mov
mov
jns
es
and
jno
push
cs
adc
xor
popa
(bad)
in
ret
retf
jbe
mov
mov
mov
or
xor
cmps
cmp
push
sti
movs
sub
ret
jae
clc
sub
push
cli
cmp
xchg
fdivr
mov
and
inc
mov
mov
sahf
push
les
icebp
mov
and
rcl
test
xchg
popf
(bad)
sub
and
sub
or
and
push
and
jbe
jl
adc
or
xchg
sbb
adc
bound
xor
les
push
dec
or
adc
pop
mov
pop
scas
pop
xlat
ins
push
jp
call
pop
fcom
fisub
out
or
pop
pop
vmread
outs
inc
push
dec
aam
and
push
add
jmp
mov
lds
add
add
rol
(bad)
lods
cwde
push
nop
not
js
jmp
fimul
or
rcr
(bad)
pushf
je
jns
stos
xor
ins
loopne
out
mov
sar
in
je
mov
sub
xchg
test
stc
(bad)
xor
(bad)
jg
xchg
cmp
cli
mov
dec
mov
mov
jmp
cmp
sbb
jns
or
nop
pop
mov
mov
arpl
mov
scas
push
cmp
call
cld
ins
fwait
adc
movs
add
xchg
popf
(bad)
(bad)
mov
mov
(bad)
scas
call
push
sbb
mov
out
cdq
cmp
pop
nop
ror
xchg
mov
and
pop
out
out
mov
mov
jmp
rcr
aam
clc
mov
gs
ror
mov
dec
lods
mov
jno
fsub
mov
shr
inc
or
mov
add
out
outs
lds
push
pop
cmp
cli
hlt
sub
test
mov
jg
push
add
lahf
scas
xchg
inc
inc
pop
inc
mov
lahf
sar
sbb
lds
lods
test
inc
out
movups
mov
scas
adc
aad
sub
or
imul
pop
inc
xor
and
imul
rcl
sub
add
push
ins
add
mov
mov
xor
dec
ret
adc
pusha
dec
je
xchg
cs
adc
inc
sub
push
adc
es
ret
repnz
xchg
inc
icebp
enter
popa
jns
cli
out
lea
in
bound
rol
fisubr
mov
hlt
pop
pop
mov
fld
jmp
add
cmp
and
pop
and
outs
into
dec
sub
sub
sbb
cmc
and
mov
fcomp
inc
and
jne
and
dec
lock
xor
(bad)
xchg
and
test
test
cmp
xchg
inc
xor
lea
mov
outs
nop
call
inc
fcmove
pop
ss
jmp
push
inc
pop
aad
fs
cdq
cmp
push
ror
ss
sbb
add
adc
add
scas
mov
pop
out
popf
fcmovbe
idiv
jp
out
lahf
cmps
hlt
mov
mov
cmp
cld
mov
imul
fnsave
call
jae
add
pop
dec
jns
push
test
mov
pop
jp
les
popf
adc
cmp
aam
jle
xlat
inc
mov
fisttp
jmp
jmp
mov
cld
ror
add
ret
addr16
in
mov
add
adc
aad
push
or
mul
mov
ret
out
mov
call
and
jmp
mov
lock
retf
call
mov
and
outs
push
mov
dec
inc
push
jmp
cmp
cmps
add
stc
aaa
fst
cs
add
jnp
stc
lods
loop
stos
inc
out
inc
int3
bnd
dec
adc
xchg
unpcklps
fs
mov
and
cmp
test
loopne
movs
sti
cmp
jmp
or
icebp
ror
mov
or
mov
ins
jl
shl
outs
in
es
popa
push
pop
and
mov
ss
out
cmp
hlt
mov
outs
sbb
mov
xor
push
jp
cmp
mov
movs
pop
das
loope
or
pop
gs
lods
sub
fild
cmp
lahf
add
fs
test
adc
and
fnstenv
sbb
lahf
out
iret
mov
dec
loop
cwde
dec
pop
jecxz
call
xlat
(bad)
nop
rcr
test
adc
sub
jo
or
repz
cmc
lahf
ret
inc
sbb
mov
leave
popf
es
ss
mov
pop
jb
es
sar
pop
outs
add
sahf
std
cli
dec
push
pop
shl
repz
lods
icebp
repz
jb
sub
jnp
test
cmp
inc
adc
sub
sub
dec
pop
cwde
add
adc
or
cmp
les
push
addr16
jp
add
cs
ret
(bad)
sub
test
ror
rep
in
push
xchg
cdq
push
sub
xor
add
outs
shl
jnp
into
sbb
inc
jecxz
lods
mov
push
mov
sub
mov
sub
pop
dec
pop
dec
sahf
mov
fisttp
pop
das
repz
cmp
imul
sbb
lahf
add
aad
adc
jp
fcomp
mov
out
test
pop
sub
test
frstor
xchg
or
sbb
push
mov
inc
(bad)
jecxz
add
jp
in
push
sbb
aam
add
add
psrad
or
js
outs
popa
hlt
mov
das
or
mov
xchg
fcom
mov
or
fwait
inc
addr16
mov
sbb
lods
retf
push
pop
lods
int3
ja
sti
call
mov
cmp
ins
and
and
mov
mul
idiv
mov
pop
mov
ins
cmp
mov
ins
lock
sbb
inc
push
fdiv
cmp
sbb
sub
sti
sub
lahf
mov
sbb
retf
retf
or
xchg
adc
mov
xor
sub
shr
mov
gs
sub
add
inc
jo
xchg
mov
push
and
sbb
xor
mov
(bad)
(bad)
(bad)
pop
dec
in
push
or
int
shl
nop
and
fnstenv
shr
dec
mov
xchg
popa
pushf
popa
mov
dec
xlat
int3
xchg
dec
mov
repz
out
clc
or
mov
pop
sbb
into
xchg
(bad)
cmp
jge
pop
pop
xchg
bound
or
xchg
mov
inc
shr
bound
xchg
cmps
fwait
mov
in
jne
leave
pop
(bad)
(bad)
out
mov
stos
not
cmps
inc
pop
clc
jmp
(bad)
into
jge
test
pushf
mov
and
iretw
and
out
in
dec
and
adc
outs
sub
jno
cmp
loop
pop
int
aas
xchg
mov
daa
leave
mov
sub
sub
imul
mov
aas
or
(bad)
push
out
iret
(bad)
jg
xchg
mov
lods
add
je
and
cli
mov
neg
in
out
test
in
cdq
pusha
mov
ins
push
imul
fimul
cmp
stos
xor
jae
fcom
(bad)
icebp
pop
popa
sub
xlat
and
shl
imul
fwait
gs
lds
clc
push
sub
bts
nop
fld
pop
mov
jecxz
call
jae
pop
ja
ret
push
xchg
adc
sahf
fwait
jge
cli
call
popf
cmp
push
bound
sahf
jmp
(bad)
mov
dec
(bad)
repnz
cld
push
popf
loopne
or
inc
mov
sbb
cmps
test
cmps
sub
dec
ja
sub
int
scas
in
mov
movs
mov
or
stos
into
rol
mov
(bad)
jge
xor
sti
ret
dec
sbb
dec
add
add
aad
inc
aad
test
and
inc
sbb
movs
repnz
xor
adc
iret
fldenv
outs
pop
inc
jne
cld
jo
ss
pushf
hlt
mov
call
add
outs
(bad)
ds
or
aas
pop
movs
and
in
xchg
pop
mov
mov
fiadd
cmps
cmp
(bad)
pop
pop
mov
dec
jg
mov
fwait
int3
fs
inc
push
outs
in
in
shl
push
sti
adc
pop
ret
sahf
xchg
inc
add
loopne
push
pop
adc
iret
fimul
fwait
add
mov
sar
push
imul
xchg
inc
or
(bad)
in
(bad)
push
cmp
repz
dec
xor
pop
in
(bad)
mov
jl
jl
mov
pop
push
xor
dec
dec
(bad)
loope
mov
jae
dec
pusha
mov
pusha
pop
sbb
cmp
mov
(bad)
and
adc
sbb
rcr
stos
ds
jg
cmps
and
pop
and
or
mov
jb
mov
je
jmp
xchg
pushf
mov
lea
dec
jns
arpl
fild
das
test
push
fcomip
mov
push
and
popf
imul
shl
repz
aaa
cdq
sub
cdq
pusha
mov
ds
cmp
popf
mov
ret
pusha
fdiv
call
test
into
and
ins
(bad)
aam
popf
add
int
jl
xor
pop
adc
and
xchg
stos
cdq
pop
out
test
dec
jae
popf
loope
(bad)
add
out
sub
ins
push
jp
mov
mov
inc
clc
popf
add
mov
mov
fldenv
and
or
movs
cdq
out
call
xor
xor
pop
push
daa
retf
and
fs
sahf
sbb
leave
and
enter
pop
adc
rcl
mov
cmps
or
pushf
call
add
aas
ins
push
xchg
pop
and
lods
iret
xchg
jmp
repnz
xchg
adc
(bad)
sbb
cmp
adc
daa
push
adc
fwait
xchg
xchg
mov
inc
(bad)
adc
imul
or
rol
scas
je
int3
adc
and
sub
jae
je
inc
int
xchg
(bad)
or
xor
icebp
or
sub
pop
inc
xchg
lds
mov
jbe
sub
loope
sbb
daa
js
sub
push
jae
outs
ja
inc
mov
imul
pop
add
pop
push
mov
pop
pop
cmc
mov
lds
pop
(bad)
sbb
jne
inc
mov
mov
inc
mov
leave
push
push
xchg
mov
xchg
aam
xor
sub
or
pop
mov
mov
adc
mov
retf
pusha
dec
cld
add
retf
cli
cmps
and
mov
inc
cli
retf
add
or
fwait
ror
(bad)
call
mov
aad
jp
or
mov
add
mov
mov
loopne
and
(bad)
push
pop
add
(bad)
sbb
and
data16
ror
push
jecxz
cmp
out
(bad)
scas
shl
add
shl
dec
repnz
aad
pop
scas
enter
inc
stos
push
das
clc
mov
sub
push
test
dec
fadd
ins
sar
nop
pop
inc
inc
sub
sbb
repz
retf
ror
fild
inc
jns
ror
ins
add
(bad)
jmp
out
fmul
mov
xlat
pop
ss
jecxz
test
and
mov
jns
mov
fs
test
repnz
cmp
and
int3
push
pop
pop
push
cld
adc
loop
jns
int3
jns
sbb
aas
sub
inc
rcr
mov
push
cs
retf
addr16
or
jo
into
pop
mov
push
ror
ins
stos
pop
push
icebp
hlt
mov
jb
xor
dec
jmp
es
bound
mov
mov
xchg
leave
popa
int3
mov
mov
pop
rol
mov
loopne
or
add
add
push
ins
or
and
xchg
mov
sub
jae
pushf
and
pop
in
jl
mov
sti
xchg
xchg
sub
loope
dec
push
bound
cs
test
mov
pop
call
out
and
cld
sub
jp
call
inc
(bad)
jb
aas
push
or
push
test
dec
ja
movs
xchg
frstor
ja
push
test
lahf
adc
add
xchg
aam
xor
add
pop
inc
inc
test
cli
mov
jmp
out
pop
test
mov
mov
or
dec
adc
sbb
push
mov
nop
shl
pop
out
xchg
mov
or
sub
popf
div
ds
test
jp
sbb
lahf
test
xor
inc
cmp
js
sbb
int3
iret
mov
nop
mov
jl
fld
or
scas
idiv
ror
daa
push
push
xor
and
out
into
sbb
loop
movs
retf
xor
jge
jbe
dec
icebp
sti
mov
push
push
xchg
mov
add
sbb
outs
repnz
push
sahf
iret
inc
cmps
call
add
push
js
cs
bound
xchg
data16
je
cmp
popf
fisubr
ins
pop
adc
dec
lods
scas
shl
inc
adc
push
loop
inc
add
lods
cmc
aam
jle
and
jl
lods
xlat
mov
les
sub
inc
jbe
push
pusha
fs
mov
pop
lock
mov
dec
inc
or
(bad)
mov
push
xchg
out
sysexit
lea
cmc
and
sbb
mov
sub
pushf
pusha
sbb
adc
jo
cmp
lock
mov
inc
aam
inc
xchg
cmp
retf
xchg
mov
fst
movs
aaa
test
pop
loopne
and
jb
pop
adc
les
idiv
jp
icebp
and
leave
dec
mov
adc
pop
or
push
push
inc
dec
mov
cs
fimul
cmp
test
fcomp
gs
retf
test
jle
fistp
push
sbb
call
div
mov
call
mov
daa
jecxz
imul
push
sbb
in
mov
icebp
push
jbe
mov
daa
and
adc
cwde
and
ss
aaa
add
mov
movs
push
cli
sbb
aad
push
mov
dec
xchg
mov
sub
push
int
ror
loopne
lods
dec
adc
rcr
cmp
adc
xor
arpl
aaa
mov
mov
call
inc
cmps
add
jmp
loope
cld
sbb
lahf
push
leave
sbb
cmp
add
cmp
mov
out
dec
pop
out
cmps
sbb
jno
lahf
xor
jg
ins
sti
jge
push
adc
int
es
loope
(bad)
jmp
dec
or
mov
add
rcl
in
xchg
jae
enter
sub
add
stos
fwait
jmp
outs
ds
test
call
(bad)
out
into
loop
aas
les
xor
push
test
dec
(bad)
jmp
mov
bound
jl
mov
jg
push
ret
adc
gs
scas
(bad)
pop
dec
mov
ret
loope
js
xlat
mov
pop
call
pop
int
jp
out
cmp
mov
je
dec
dec
sbb
out
jmp
or
push
rol
xchg
xchg
sub
xchg
pop
inc
or
repnz
mov
lock
or
loopne
and
fwait
jmp
out
pushf
cmp
mov
cmp
xchg
imul
pop
add
add
out
int3
or
adc
adc
xchg
mov
cmps
mov
sbb
pop
xor
xchg
out
(bad)
mov
into
and
jl
adc
push
or
push
xlat
mov
mov
int
cmp
sti
outs
fcmovu
adc
dec
mov
adc
jo
imul
push
fcmovnb
fnstsw
imul
jg
(bad)
mov
add
and
pushf
xabort
(bad)
xchg
pop
out
mov
add
sbb
xor
data16
pop
shl
adc
xor
add
out
lods
call
mov
jae
sbb
test
jmp
cwde
jp
int3
movs
xchg
out
ins
loop
and
jle
fs
lods
je
sub
fisttp
push
jns
mov
popa
rcl
hlt
(bad)
add
mov
sbb
dec
cmp
push
jl
or
push
add
mov
into
or
cmp
push
xchg
into
jp
retf
jne
arpl
(bad)
inc
fiadd
jmp
or
cmp
fdiv
mov
dec
les
jg
cmps
loope
jle
rol
ss
xchg
xor
add
mov
stos
xchg
xor
sbb
repnz
or
jns
stos
add
mov
push
seto
ret
or
movs
shl
push
sbb
cmp
out
fstp
(bad)
je
data16
lds
jae
movs
out
adc
(bad)
push
sub
sbb
gs
aad
xor
clc
sahf
mov
adc
xor
mov
adc
cdq
xchg
cli
mov
inc
sbb
repz
in
inc
ja
in
add
xchg
rol
mov
call
inc
dec
jo
or
cmp
outs
mov
xchg
mov
mov
in
int
fcmovnbe
jge
dec
adc
sbb
inc
jno
repz
fnstsw
call
xchg
and
fidivr
clc
fld
iret
pop
push
cmp
xchg
cmc
not
xchg
or
pop
gs
cmp
ret
push
leave
ins
jmp
ja
mov
lods
cdq
sub
lods
push
jg
or
mov
mov
scas
cwde
mov
xchg
scas
mov
int
inc
data16
mov
pop
and
jo
adc
das
cdq
xor
and
std
xchg
mov
jmp
and
loop
push
sbb
mov
mov
movs
aas
setp
ficomp
inc
pop
push
and
pop
mov
js
fwait
xlat
out
(bad)
and
iret
in
and
sbb
mov
retf
movs
sbb
dec
cmp
mov
mov
and
div
sub
cdq
icebp
in
pop
sbb
jbe
std
cmp
stc
mov
mov
and
retf
inc
add
pop
scas
jnp
out
mov
aad
mov
(bad)
adc
dec
push
or
jb
mov
push
or
ror
and
adc
ds
xor
sub
int3
fist
test
stos
cmp
outs
mov
pushf
inc
mov
sbb
xchg
mov
out
push
sbb
int3
imul
mov
iret
push
xor
pop
loop
cmp
js
push
inc
fcomp
and
push
adc
in
cmp
xchg
je
mov
mov
or
xor
ins
or
ss
(bad)
mov
rcl
inc
or
xor
xor
sahf
or
es
fadd
pushf
mov
retf
stos
neg
fcomi
xchg
cmp
clts
xor
mov
jae
mov
cmp
and
cwde
or
lds
out
push
pop
(bad)
(bad)
nop
xchg
pushf
pop
sbb
xor
repnz
add
data16
push
in
aas
adc
fcomp
xor
xor
pop
cld
cmp
jl
push
add
ja
add
pop
repz
cmp
aas
and
xor
jns
lea
ret
mov
xor
lods
mov
or
bound
lods
dec
mov
into
sbb
jbe
jbe
ja
call
nop
cmp
movs
ret
(bad)
mov
jp
arpl
pop
(bad)
aaa
(bad)
(bad)
cli
std
cmp
outs
test
sub
pop
icebp
mov
xchg
(bad)
xor
pop
xor
pushf
jl
int3
mov
ins
in
push
pop
sub
and
outs
mov
sqrtps
ins
or
rcr
fild
pop
aam
sti
jle
out
int
sub
je
test
fld
xchg
in
xor
sub
xor
das
inc
cwde
jl
cmp
sbb
leave
clc
imul
sti
pop
ja
mov
sbb
lea
into
imul
(bad)
cmp
dec
out
stos
mov
cmps
push
outs
repz
ja
shl
ret
repnz
out
sti
mov
test
cmps
ret
mov
das
xchg
test
push
(bad)
ror
mov
pop
int
mov
out
movs
test
jle
mov
test
inc
loop
mov
cmp
push
repz
outs
fnop
pop
mov
push
stc
and
sbb
ins
aam
adc
jne
cmp
cmp
into
mov
sub
or
mov
mov
dec
stos
(bad)
in
mov
aas
add
and
sbb
and
fbstp
mov
mov
jmp
inc
in
cs
adc
leave
jbe
sub
leave
cmp
aam
ror
pop
add
fdiv
dec
(bad)
stc
repnz
mov
adc
int3
ss
sub
(bad)
pop
movs
pop
pop
pop
inc
sbb
xchg
adc
jmp
movs
aam
mov
mov
xor
push
ins
mov
(bad)
rcl
call
add
jnp
sbb
add
jmp
push
cmp
mov
adc
pushf
fisttp
mov
data16
xchg
add
mov
jb
adc
rcr
sbb
stos
popa
push
jle
iret
sub
fistp
pop
arpl
mov
cmp
outs
mov
iret
iret
push
inc
pusha
cmps
push
clc
nop
dec
or
sub
jp
cld
push
push
mov
jns
outs
push
mov
mov
jecxz
icebp
sbb
or
mov
mov
sub
test
inc
dec
out
jg
sub
cdq
or
sub
lds
psllq
imul
mov
or
push
jle
jmp
es
inc
cmc
dec
jp
mov
sub
enter
add
or
cs
pop
pop
push
mov
sbb
and
adc
cmovg
test
mov
leave
dec
fstp
call
add
adc
or
ins
les
int
std
and
popf
movs
(bad)
imul
and
sbb
inc
push
adc
push
pop
fwait
jo
bound
dec
push
data16
arpl
and
push
rcl
out
mov
and
call
inc
hlt
jne
pop
xlat
vpmacssdd
mov
pop
outs
in
or
add
inc
jo
lods
xor
adc
call
test
inc
out
jmp
xchg
pop
fisttp
jne
mov
pushf
mov
inc
pop
pusha
or
js
inc
and
cmp
cwde
or
lds
shl
in
inc
aas
lahf
int3
jo
scas
rcr
mov
lock
fnstsw
adc
mov
fsub
aas
repnz
popa
call
sahf
mov
les
cmp
(bad)
sahf
test
sbb
xor
loope
mov
sbb
sbb
in
inc
hlt
das
mov
repnz
leave
cdq
inc
mov
push
dec
dec
call
repnz
cli
fnstsw
repz
xchg
lea
scas
dec
sbb
stos
cmp
push
jae
mov
scas
lds
ror
adc
aam
movs
adc
mov
psraw
xchg
mov
mov
ror
aas
(bad)
idiv
pop
out
push
mov
pop
dec
ins
cmp
out
or
int
sub
and
cmp
pop
mov
push
mov
in
sub
(bad)
cmp
movs
inc
sti
int
mov
pop
(bad)
jge
sub
jae
lds
outs
jl
xchg
jbe
mov
push
shr
nop
movs
sbb
lock
cmp
cmps
nop
mov
push
call
fmul
add
sub
mov
xchg
jp
inc
inc
pop
retf
adc
rol
aas
in
outs
jno
or
movs
js
out
push
int
pop
or
clc
mov
sar
es
and
or
sar
jge
xor
and
addr16
out
lahf
in
shl
lods
jl
sti
xor
retf
mov
or
dec
mov
xchg
shl
jecxz
retf
jge
add
mov
fs
fnstcw
popa
push
push
fild
imul
test
sbb
in
outs
aad
pop
retf
jne
mov
nop
(bad)
imul
jns
jo
dec
ins
shl
arpl
out
and
rol
pushf
(bad)
js
addr16
jb
or
sbb
push
ss
sub
icebp
aaa
mov
mov
and
inc
test
outs
(bad)
push
mov
fisubr
pop
mov
sbb
int3
push
sti
scas
inc
jns
mov
adc
or
inc
sbb
ins
and
fadd
stc
pop
xchg
cmp
sbb
ret
sub
stc
add
or
(bad)
enter
dec
jge
dec
in
mov
lahf
sub
sub
and
push
popa
mov
inc
dec
clc
outs
cmps
lods
retf
jp
xchg
sbb
loop
lea
xchg
push
neg
call
jo
cld
ror
test
mov
imul
es
stc
out
daa
or
(bad)
jp
dec
(bad)
push
retf
push
mov
in
in
cmps
inc
sub
mov
mov
sbb
jo
mov
in
call
add
fild
scas
lea
mov
in
cmp
dec
add
xchg
xchg
xchg
inc
div
(bad)
out
push
jecxz
push
es
push
int
mov
cdq
daa
xchg
sbb
jbe
nop
es
add
scas
bound
pop
movs
or
imul
loope
shl
jle
stos
or
xchg
scas
pop
cmp
(bad)
dec
jg
jp
es
sar
push
sub
or
(bad)
in
lea
sub
call
pop
sar
ficom
sbb
lods
sahf
bound
mov
data16
jmp
lock
loope
popa
jecxz
xchg
adc
pop
xchg
xor
idiv
push
not
idiv
or
mov
jo
cmp
adc
fcomp
and
pop
fs
jne
call
dec
push
cwde
lods
mov
enter
gs
mov
mov
in
ja
cdq
movs
shr
aad
sbb
ds
sub
out
adc
loopne
mov
mov
and
xor
pop
aas
xchg
mov
enter
scas
pushf
add
cmc
aam
cmc
pop
fwait
out
xadd
jb
pusha
sbb
(bad)
in
loop
sbb
adc
cmp
mov
lea
mov
add
jle
xchg
xchg
inc
rcr
push
sub
std
fcmovnu
inc
and
push
gs
adc
(bad)
fwait
add
scas
jo
add
lods
or
and
div
icebp
test
test
ret
out
jbe
dec
cmp
mov
fcomip
icebp
inc
cmps
loop
push
ret
jmp
mov
adc
inc
test
loopne
repnz
push
jecxz
dec
xor
adc
cmp
sub
cld
lock
sbb
rcl
(bad)
sbb
fidiv
cli
cdq
sahf
jmp
ret
cmps
lds
xlat
jnp
(bad)
aad
cmp
ins
xchg
inc
sub
stos
rol
pop
push
leave
std
aaa
mov
sti
mov
sbb
imul
push
mov
mov
sub
leave
xchg
add
add
inc
and
out
imul
(bad)
push
push
in
and
outs
adc
add
and
dec
sub
push
and
xchg
sub
push
mov
fisttp
dec
loopne
mov
cwde
cmp
out
loop
cs
dec
jne
into
push
(bad)
fimul
and
xor
push
daa
(bad)
aad
test
pop
sub
fldenv
test
mov
xor
call
repnz
out
mov
mov
retf
sti
adc
call
jo
test
retf
aaa
int
xor
sbb
xchg
dec
inc
mov
int3
inc
push
cmp
push
and
mov
inc
imul
inc
cmps
fist
arpl
mov
jl
pop
mov
pop
mov
or
jb
jge
add
mov
pop
dec
and
scas
push
int3
and
dec
push
jnp
(bad)
or
xchg
inc
out
sbb
or
jns
inc
mov
add
addr16
mov
in
mov
mov
and
fadd
mov
cmps
ret
adc
pop
aas
das
or
loop
push
mov
in
outs
push
mov
sub
and
(bad)
in
stos
jl
inc
scas
ret
xchg
and
mov
xchg
cmp
outs
add
dec
add
inc
push
jmp
push
cwde
cmp
xchg
stos
mov
cli
cdq
dec
(bad)
sbb
pop
push
in
jg
repnz
retf
(bad)
cmp
xchg
jl
pop
ds
or
add
pop
jbe
or
aad
nop
aam
movs
inc
inc
fs
(bad)
lea
loope
ss
push
imul
es
push
xor
or
arpl
jecxz
fwait
cmp
or
push
in
push
adc
jbe
pop
push
int
movs
fwait
lods
jle
rcl
jb
test
sub
cli
retf
int3
std
fimul
xor
mov
stos
inc
and
inc
xor
popa
jg
int3
mov
repz
cmp
xor
jno
lods
jbe
nop
push
push
lea
push
mov
jmp
push
push
inc
aas
sub
pop
pop
sahf
mov
call
xchg
popf
loopne
pop
mov
xchg
sub
(bad)
bound
ins
add
les
mov
jecxz
mov
das
mul
or
rol
jecxz
add
add
push
sbb
xor
repnz
cli
stos
push
xchg
retf
add
push
push
movs
sub
fs
js
mov
pusha
int3
fild
xchg
cmc
lods
jg
sbb
sub
(bad)
adc
enter
cmp
fcmovnb
fst
cmp
pop
jns
mov
pop
jb
int
and
es
xlat
add
xchg
jg
pop
xor
jecxz
adc
(bad)
stos
arpl
out
jge
cmp
in
xchg
add
mov
add
not
out
push
sub
cmp
aas
imul
jmp
ds
ret
push
cmp
add
mov
mov
aas
rol
sbb
std
retf
push
xchg
mov
or
push
shl
xor
in
out
xchg
sbb
dec
mov
jmp
inc
aad
out
mov
mov
je
popf
lahf
jge
pop
mov
xchg
sbb
push
adc
push
xchg
inc
imul
pop
add
int3
or
int
sbb
xor
lahf
fistp
dec
mov
jmp
repnz
dec
cmps
xchg
nop
add
fdivr
sbb
lods
cmp
call
adc
fxtract
cmp
mov
xchg
push
shr
xor
lea
neg
adc
adc
cmps
pop
pushf
int3
and
mov
mov
jge
pop
loopne
xchg
jg
cmp
bound
outs
fnstcw
cmp
shl
imul
inc
jmp
iret
pcmpgtw
lods
dec
or
adc
sub
outs
fbstp
push
xchg
sahf
or
xor
int3
push
push
(bad)
jmp
mov
mov
sub
lods
out
out
push
icebp
paddsb
mov
stos
jmp
add
sar
xchg
push
sub
xlat
(bad)
mov
mov
and
and
jmp
mov
leave
shl
jb
mov
and
test
or
fmul
xchg
push
push
imul
adc
arpl
adc
jnp
jae
jns
jl
adc
shl
inc
lahf
popa
mov
inc
push
adc
fld
in
adc
test
int3
push
psrld
retf
mov
aaa
jle
leave
cmp
fs
dec
retf
(bad)
cmp
call
mov
stos
nop
pop
and
pop
mov
stc
inc
lods
xor
repnz
retf
inc
sar
add
jne
rcl
test
das
adc
mov
setge
pop
jo
icebp
xor
dec
jl
push
dec
clc
in
dec
imul
mov
hlt
dec
sbb
out
pop
imul
enter
xor
inc
shl
(bad)
push
call
test
mov
jp
jmp
lahf
inc
shr
inc
jge
and
test
sub
repnz
test
push
mov
dec
in
xchg
xor
adc
imul
push
ss
call
add
pop
lahf
sbb
cmps
retfw
pop
xor
ret
add
and
out
lods
dec
sar
mov
add
repz
inc
and
mov
sub
cmp
mov
sub
jecxz
cmp
fst
sbb
jge
xchg
push
aam
loopne
sbb
jns
pushf
loop
dec
xor
imul
out
mov
dec
mov
adc
and
adc
cmp
mov
cmc
gs
aam
ret
in
fld
lods
call
push
adc
out
pop
jbe
mov
stos
add
inc
retf
push
add
and
push
addr16
cmc
add
dec
cmp
adc
mov
dec
mov
pop
int3
add
mov
clc
rol
or
inc
nop
(bad)
mov
push
test
cwde
sub
push
pop
in
aad
jle
aam
dec
mov
add
sbb
jae
push
push
pop
adc
adc
jg
(bad)
jmp
shr
aas
ja
fcomip
(bad)
fnstcw
mov
push
and
jbe
cmp
test
test
outs
lock
jmp
pop
outs
or
test
jecxz
mov
inc
push
pop
jle
leave
mov
out
es
and
pop
mov
leave
and
cmps
sti
xor
ds
mov
pusha
inc
out
inc
cld
int
jne
or
dec
or
xor
inc
sahf
(bad)
mov
sub
xchg
dec
test
xchg
sbb
pop
loop
imul
icebp
cmc
cmp
aam
imul
xchg
lock
cmps
nop
loope
std
ror
sbb
sahf
fmul
xchg
fiadd
(bad)
pop
daa
retf
jno
sub
stc
pusha
lahf
dec
or
shr
push
scas
dec
or
sub
aas
neg
loope
jp
je
out
push
and
mov
jge
fsubr
addr16
sbb
push
loop
mov
xchg
in
sub
cwde
stc
adc
push
pushf
rcr
mov
mov
mov
in
jg
fsubr
mov
call
cld
inc
imul
adc
stos
in
push
in
out
repnz
xlat
xchg
into
or
out
mov
sahf
inc
aam
retf
scas
pop
stos
dec
addr16
cmp
xor
jb
(bad)
call
sbb
test
mov
jbe
xchg
mov
movs
jne
or
mov
loopne
or
shld
dec
bound
push
stc
cmp
push
(bad)
or
lds
pop
test
(bad)
push
push
scas
ins
jno
mov
pop
into
(bad)
pop
xor
pop
mov
pop
xchg
int3
jmp
xor
mov
(bad)
mov
jae
outs
imul
fwait
sbb
adc
dec
mov
dec
cmps
inc
add
xchg
(bad)
ds
jmp
aam
mov
mov
jp
xchg
sub
pop
dec
aad
or
mov
mov
pushf
cmp
rol
rcl
fs
mov
retf
inc
test
shl
fsincos
xor
imul
cmps
pop
out
sub
jns
inc
repz
(bad)
stos
mov
jg
or
mov
jmp
(bad)
cs
inc
loope
pop
les
mov
pop
cmp
add
inc
stc
mov
or
iret
mov
ins
mov
push
outs
jle
movs
rcl
gs
pop
sti
add
pop
movs
xor
dec
sub
iret
lahf
in
xchg
in
and
popf
and
jb
jg
push
jo
shl
dec
test
rol
ret
inc
adc
xor
jmp
jmp
nop
test
test
add
cli
sub
aas
xchg
data16
aas
mov
fisub
mov
loope
pop
out
stos
inc
push
add
add
mov
and
sub
mov
imul
sub
mov
popf
adc
dec
dec
int3
cld
mov
sahf
and
mov
cmc
dec
ins
cdq
push
and
test
mov
mov
and
mov
jae
aad
push
rcr
popa
add
pop
cmps
jg
mov
inc
mov
add
adc
push
int
or
cmp
imul
jae
inc
hlt
div
das
sbb
add
scas
call
pop
movs
add
inc
mov
and
mov
imul
je
(bad)
fcom
(bad)
aad
mov
out
xchg
mov
inc
inc
sar
scas
test
aad
push
push
mov
mov
add
in
jno
ss
inc
and
or
in
sub
mov
lea
inc
(bad)
ds
cld
int3
jbe
pushf
lea
out
test
xor
xor
xchg
cmp
test
mov
cmp
cmps
clc
js
push
pop
je
adc
mov
lods
cmps
shl
mov
jmp
fsub
repnz
mov
shl
(bad)
pop
cmp
(bad)
jb
jbe
cmp
jne
(bad)
fld
jb
dec
data16
mov
or
sub
rol
(bad)
and
xchg
mov
push
fwait
cmp
dec
jmp
dec
sub
idiv
jle
inc
and
ror
mov
inc
stos
jecxz
mov
dec
dec
dec
mov
or
mov
jle
mov
test
and
sti
daa
and
or
xchg
lock
xor
ins
cmc
les
push
sbb
mov
jb
xor
sub
sbb
out
sub
sbb
mov
dec
sub
fcom
xchg
cmp
lds
gs
icebp
sub
mov
cs
repz
add
cld
loope
xchg
das
dec
iret
add
jge
mov
ins
test
rcr
sbb
add
mov
xchg
push
adc
cmp
pop
jmp
push
cld
xchg
xor
mov
push
and
aaa
dec
in
inc
mov
pop
(bad)
jmp
jp
mov
sbb
push
and
push
push
mov
repnz
mov
(bad)
mov
mov
cmps
ror
aaa
xor
arpl
mov
(bad)
mov
pop
add
xor
sbb
mov
cwde
jl
gs
mov
shr
std
mov
jnp
addr16
stos
jno
mov
xchg
dec
mov
push
fcmovne
push
movs
fisttp
jle
ret
mov
dec
sub
jmp
fs
add
mov
adc
xor
xor
iret
lock
repnz
inc
add
stos
sahf
sub
jno
lods
inc
je
mov
ret
mov
popf
xchg
loopne
sub
les
cdq
or
sti
adc
xor
scas
mov
xchg
scas
xchg
mov
or
outs
clc
lods
adc
mov
cmp
and
test
mov
jle
ss
push
pop
jae
cld
fs
xchg
les
sahf
cs
test
mov
and
sub
push
nop
and
and
xchg
sbb
idiv
jno
imul
xor
int3
push
sbb
and
mov
pop
inc
pop
js
xchg
add
dec
jmp
int3
inc
push
mov
cmp
mov
mov
inc
(bad)
pop
call
pop
retf
mov
and
pop
xor
and
ja
mov
jbe
test
push
out
xchg
rcl
ds
imul
shl
mov
icebp
mov
and
out
xlat
repnz
jp
push
loopne
int
pop
xchg
sub
cmc
mov
inc
push
dec
stos
pop
jp
movs
xor
and
jp
lahf
sub
arpl
test
xchg
or
jg
xchg
(bad)
rcr
fiadd
pop
dec
fsubr
bound
or
xchg
out
mov
pop
sbb
lods
adc
aaa
mov
sbb
dec
int3
data16
std
mov
clc
movs
xchg
xor
int
sub
repnz
inc
ret
stos
pop
div
lea
int3
les
fiadd
cs
fs
mov
add
add
ss
call
in
jle
cmp
aaa
(bad)
adc
scas
enter
ret
cld
pop
xor
xor
push
movs
rcr
lahf
loopne
ror
pop
sbb
push
call
xlat
jmp
sub
dec
sub
mov
jl
aam
push
inc
aaa
pusha
in
sahf
hlt
push
in
add
pop
out
add
or
push
mov
popa
add
in
loop
pop
aad
xchg
jae
pop
cld
xchg
mov
jge
mov
push
jae
aad
fcomp
adc
push
test
aas
mov
pop
repnz
mov
or
push
test
dec
lahf
mov
push
repz
movs
in
or
cdq
(bad)
cmps
xchg
into
test
mov
popf
adc
dec
stc
add
sub
jg
fucom
mov
sbb
mov
ficomp
jmp
loop
loopne
sub
in
jg
mov
inc
in
pop
sub
dec
fs
cmp
push
jmp
fcompp
add
mov
pop
push
push
in
mov
cmp
mov
mov
clc
sahf
sub
hlt
arpl
sbb
adc
jmp
xchg
jnp
sbb
out
cmp
sar
or
jae
cs
out
int3
push
add
daa
or
add
push
mov
sahf
inc
xchg
sub
test
and
xor
jns
adc
xor
outs
imul
mov
arpl
cmps
scas
jnp
test
test
outs
js
and
jae
adc
retf
fcomp
ins
icebp
xchg
jle
mov
test
mov
retf
std
push
mov
jg
cwde
jb
xor
je
ret
push
std
aas
lods
test
sub
xchg
lods
inc
jp
and
mov
fcom
cdq
xor
repz
fiadd
je
pushf
hlt
nop
mov
(bad)
addr16
dec
outs
in
lds
das
loope
pop
push
mov
push
lods
mov
push
push
ins
rcl
call
or
fisttp
dec
inc
mov
out
and
lods
(bad)
sbb
out
out
pop
pop
fbstp
and
popa
mov
and
pop
jo
sub
pop
js
retf
int3
cmp
fld
sub
popf
sub
shl
xchg
fsubrp
mov
pop
push
mov
mov
shl
retf
xor
mov
arpl
(bad)
(bad)
nop
(bad)
jmp
call
fwait
inc
movs
xchg
(bad)
aad
sub
inc
aas
fisttp
js
jno
mov
cdq
fwait
and
pop
mov
jno
fs
jl
rol
pusha
push
inc
loope
(bad)
popf
jmp
(bad)
imul
ins
mov
mov
in
cdq
and
cmp
mov
cmps
bound
and
sub
jmp
loop
fdivp
das
aam
mov
dec
mov
jle
aad
arpl
push
jb
adc
test
mov
and
inc
ja
ficom
xchg
adc
aam
jmp
sbb
and
cld
push
and
push
loop
movs
or
lods
inc
mov
jecxz
xchg
mov
fisttp
dec
adc
push
outs
pop
cmps
fist
lea
xor
inc
or
leave
dec
mov
xchg
xor
in
fstp
inc
dec
mov
stc
push
dec
mov
xlat
xor
popa
(bad)
pop
or
fldcw
fdivr
loope
jb
sbb
mov
ss
cmp
push
clc
cmp
ja
mov
stos
adc
xchg
std
lds
(bad)
int3
adc
xchg
gs
dec
push
jnp
call
dec
ins
stc
mov
ss
shl
arpl
jmp
pop
pop
cmps
sbb
js
retf
jnp
push
jmp
sbb
and
loopne
mov
sti
fcomp
dec
test
pop
dec
jno
push
popf
scas
lods
adc
cli
and
jl
cmps
out
xor
dec
pop
xchg
and
cwde
pop
popf
cmps
outs
pop
ror
push
or
sti
cmc
sbb
cmp
pop
xchg
jge
jmp
mov
fwait
lock
std
es
mov
cmp
aad
jnp
popa
add
jbe
or
push
sbb
mov
popf
push
hlt
in
movsx
cs
push
daa
daa
add
mov
mov
cmp
push
popf
pop
arpl
test
ret
dec
jmp
sub
int3
sbb
mov
adc
push
sbb
fadd
cmp
jmp
mov
mov
shl
fwait
dec
pushf
adc
stc
punpckhwd
fidivr
jg
dec
in
(bad)
ins
movs
or
jbe
sbb
lods
sub
popa
and
mov
and
enter
cmp
xchg
mov
mov
push
dec
pop
push
ins
dec
xchg
ror
test
into
mov
movs
cmp
cmp
cmp
mov
mov
dec
jg
xchg
jg
xor
push
mov
in
test
cmp
and
and
xor
aad
ds
push
ins
pop
sbb
jb
outs
inc
push
(bad)
xchg
pop
dec
pop
cmps
(bad)
mov
add
pop
imul
xor
mov
mov
call
(bad)
mov
call
rcl
loopne
jne
adc
retf
ud2
or
fistp
jl
rcl
mov
mov
add
mov
call
test
inc
adc
lock
je
(bad)
cmp
push
add
aad
js
jns
pop
inc
sar
xchg
lea
pop
mov
jbe
pop
or
mov
cmps
xor
nop
retf
in
jb
pop
(bad)
sbb
sub
xchg
dec
add
pop
(bad)
and
fist
std
ret
and
adc
adc
sub
call
(bad)
(bad)
xor
mov
xchg
ffree
push
push
icebp
ss
cdq
cwde
dec
cmps
imul
and
ss
jno
jbe
adc
fisub
dec
adc
fs
ds
cmp
int
and
je
rol
(bad)
inc
inc
dec
fidivr
imul
int
cmc
call
add
out
sub
movs
sahf
fmul
loope
fst
xchg
scas
dec
adc
fcomp
stos
inc
mov
jg
xor
sub
retf
push
lahf
dec
or
xchg
sub
retf
sti
jle
popf
jne
dec
das
adc
sti
cld
test
ja
xor
pop
dec
push
ins
jne
gs
mov
dec
loopne
inc
push
add
clc
jge
movs
sbb
pop
mov
push
sbb
inc
lahf
pop
aam
in
shr
cmps
sub
fadd
jno
sub
sar
sub
push
cmp
push
and
sbb
daa
hlt
mov
retf
mov
dec
mov
sahf
mov
xor
out
mov
bound
adc
and
inc
test
fisubr
adc
and
and
sub
xchg
sub
and
cmp
or
mov
cmp
jno
mul
sub
mov
cld
push
std
dec
add
fldcw
jmp
div
push
cwde
loope
hlt
repz
jl
mov
and
es
bswap
cli
mov
mov
nop
rcl
es
div
mov
shr
sub
ret
dec
dec
inc
(bad)
mov
lods
or
pop
add
dec
jb
add
inc
arpl
gs
inc
dec
mov
sub
stos
gs
jg
retf
xor
fisttp
xchg
pushf
mov
sub
mov
or
xchg
sub
in
or
(bad)
sub
mov
pop
sti
lahf
sub
(bad)
sbb
add
xchg
mov
sub
scas
rcr
xor
hlt
dec
and
out
(bad)
jae
icebp
and
fisub
loop
mov
mov
popa
xor
cmp
mov
mov
enter
pusha
and
xor
ja
jae
call
jg
(bad)
fmul
xchg
or
dec
js
or
adc
shl
dec
xchg
aam
mov
xor
bound
out
pop
jecxz
or
mov
push
dec
mov
xchg
movs
(bad)
sub
xor
push
and
lods
in
mov
fsub
cmp
jecxz
(bad)
sbb
fisub
cmc
xchg
cmp
div
pop
jge
push
leave
gs
mov
outs
loop
jb
fnsave
jl
sub
adc
fsub
sub
cs
fild
dec
dec
push
push
ins
(bad)
call
push
jle
test
call
fisubr
jnp
xchg
sbb
sub
outs
dec
daa
ror
scas
sub
xor
push
and
cmp
retf
stos
out
dec
clc
mov
(bad)
xchg
mov
add
or
xor
push
(bad)
mov
cld
mov
mov
int
test
fidiv
lea
das
mov
pop
addr16
or
test
in
stos
pop
adc
jle
inc
aad
out
xchg
ins
jne
push
dec
mov
(bad)
in
loopne
mov
xchg
imul
sub
mov
(bad)
lahf
add
dec
pop
add
mov
mov
cmps
push
xchg
cwde
push
and
jmp
fwait
cmps
push
imul
cmps
xchg
xchg
loopne
push
div
jge
(bad)
xor
cmovns
lods
sub
mov
inc
lods
mov
pop
add
mov
cmp
push
les
mov
push
int3
test
dec
cmp
xor
adc
lods
adc
sti
xor
arpl
sub
ret
jmp
dec
fsubr
mov
sub
jno
sti
jmp
out
icebp
stos
fcmovne
mov
test
fnstcw
jmp
push
mov
push
push
dec
adc
inc
push
push
inc
push
shr
pop
or
xor
outs
fldenv
mov
and
in
xor
mov
jnp
push
test
push
(bad)
imul
stos
(bad)
dec
dec
push
dec
mov
outs
shr
fwait
lods
mov
lods
repnz
mov
push
xchg
pop
test
retf
cmp
je
xor
and
mov
push
bound
clc
mov
ret
add
js
and
cmp
mov
push
push
mov
in
jbe
sub
fdivr
adc
rcl
and
shl
adc
mov
stos
sub
(bad)
jnp
lds
gs
std
xor
pop
jbe
repnz
inc
fstp
(bad)
not
rol
xchg
shl
inc
jmp
lahf
mov
retf
mov
in
cmp
outs
dec
push
scas
test
push
cmps
cmc
inc
test
adc
in
sbb
in
ins
inc
jne
rcl
cli
push
in
lds
test
fwait
in
(bad)
test
shr
loopne
adc
arpl
adc
xchg
lahf
rcr
cmp
out
adc
aas
ss
cmp
xor
inc
push
jno
clc
jnp
cmp
sbb
inc
and
lods
fild
in
jmp
cmp
mov
ins
stos
test
ins
mov
and
lahf
and
push
sub
jno
cli
adc
ds
jle
imul
test
jecxz
aaa
sub
cwde
add
out
add
cmp
fs
repz
jmp
ror
jg
cmps
or
add
in
cmps
das
mov
inc
in
sbb
xchg
es
psrlq
jmp
shl
jns
jecxz
inc
adc
iret
movs
add
mov
jmp
bound
jmp
add
or
in
jl
adc
mov
mov
xchg
push
ins
jge
jbe
mov
and
popa
xchg
sub
loop
mov
and
ins
loopne
xchg
leave
popf
or
ins
mov
mov
test
div
into
dec
outs
mov
xchg
rep
mov
and
jp
test
and
fxch
xlat
cmp
pop
and
clc
test
dec
or
pop
cld
mov
mov
mov
lods
(bad)
push
dec
(bad)
dec
inc
aam
mov
dec
retf
mov
repnz
icebp
dec
jbe
adc
popa
push
dec
jmp
fnsave
dec
inc
imul
lock
pop
push
jge
call
add
aaa
popaw
mov
scas
out
or
addr16
lods
inc
mov
inc
mov
fs
jmp
fistp
mov
mov
push
fwait
jecxz
dec
call
and
lock
xor
aad
inc
pop
jne
and
pop
adc
scas
dec
push
xor
(bad)
sub
dec
cmp
cmp
push
ins
mov
and
pushf
or
repz
loopne
call
mov
mov
xor
sub
ja
push
scas
and
getsec
addr16
mov
sub
shl
add
hlt
call
fcmove
sbb
adc
push
test
pusha
add
sub
dec
fisttp
jo
pop
mov
fld
cs
stos
rcl
xchg
inc
jbe
ins
retf
sub
ins
lods
dec
xchg
test
adc
jecxz
push
outs
out
jo
add
pusha
pop
cmp
fldenv
cmp
inc
lock
sahf
cwde
mov
mov
popf
mov
push
mov
lods
pop
pop
jge
and
and
pop
shl
mov
mov
xchg
ds
ffreep
scas
and
and
push
cli
mov
mov
test
test
and
enter
div
jno
loopne
ficomp
or
cmp
jb
mov
sbb
xchg
hlt
fisubr
cmps
outs
mov
add
mov
mov
jmp
bnd
pop
jb
sti
adc
dec
retf
xor
pop
mov
mov
fwait
xchg
lock
retf
ins
lods
mov
stos
or
punpcklbw
xor
push
add
clc
pop
int
adc
scas
pop
enter
rep
hlt
xchg
cmps
dec
loope
out
jbe
cmc
or
addr16
std
outs
movs
leave
inc
mov
xor
data16
ret
xchg
inc
out
sbb
inc
imul
add
shl
dec
pop
test
lods
mov
(bad)
arpl
and
xlat
pop
stc
xchg
xor
out
fwait
inc
or
cmp
jge
rol
mov
aas
clc
repz
and
in
loop
pop
(bad)
and
sub
adc
mov
dec
sub
jge
movs
ds
test
mov
add
stc
xchg
ja
sbb
push
mov
pop
cwde
js
(bad)
in
neg
lea
mov
xlat
jg
adc
arpl
add
into
cmp
xor
fidivr
fdivr
mov
scas
cwde
inc
jb
xchg
pop
sar
xchg
pop
xchg
test
xchg
mov
shr
jp
sub
pop
mov
je
dec
test
sti
mov
or
pop
cmp
loopne
inc
scas
xchg
add
in
mov
adc
cs
mov
call
add
mov
xchg
imul
ficomp
xchg
pop
push
push
xchg
dec
adc
inc
imul
push
arpl
loopne
inc
sub
mov
fdivr
pusha
add
mov
jp
ins
xor
movs
xor
loope
repz
(bad)
fild
mov
fs
mov
leave
push
mov
and
retf
sahf
mov
pop
ficom
dec
dec
call
frstor
push
fcmovnu
mov
enter
mov
pop
xor
inc
dec
movs
test
pop
pop
(bad)
sti
sub
mov
movs
fldenv
xchg
daa
push
fwait
cwde
fnstcw
mov
lahf
rep
or
xor
or
fnstcw
adc
jl
xchg
mov
xchg
lds
jbe
leave
ss
xchg
lea
sub
adc
jnp
xchg
gs
push
jo
ffreep
(bad)
sub
(bad)
nop
ss
push
pop
xchg
ret
aam
loopne
jmp
adc
shl
xlat
add
mov
mov
cmc
sar
fstp
mov
lock
ss
call
and
lds
inc
mov
sahf
mov
xchg
daa
push
xor
jecxz
dec
test
dec
in
retf
sub
bound
aad
adc
inc
in
xchg
scas
mov
out
stc
pop
jae
sub
push
(bad)
test
push
or
sbb
cmp
jo
movs
or
mov
add
pop
pop
mov
jmp
shl
lods
nop
movs
pop
ins
mov
sbb
sub
pop
jns
cmps
sbb
mov
mov
cmps
pop
push
sub
and
sbb
stos
xchg
repz
mov
in
push
in
repnz
adc
in
ss
fcmovnb
push
fist
sub
sbb
mov
and
mov
or
sub
gs
mov
jmp
jae
jno
cs
ret
repz
ins
(bad)
jle
adc
icebp
mov
jo
lahf
or
ss
(bad)
pop
cmp
dec
xchg
push
mov
pop
aad
push
jns
adc
fcom
adc
jb
push
mov
xchg
and
(bad)
cld
jl
mov
aad
add
and
inc
(bad)
out
sahf
mov
pop
xchg
push
adc
pusha
add
xlat
add
arpl
pop
push
add
call
jg
movs
mov
shr
push
adc
inc
(bad)
(bad)
aam
ins
cmp
aas
(bad)
(bad)
bound
ss
or
movs
add
aas
ret
inc
cmp
fs
out
test
into
adc
aaa
cmp
cdq
pop
lahf
cmc
add
jecxz
xor
lock
push
or
jmp
movs
inc
lods
jecxz
call
add
mov
stos
in
cmp
fistp
fwait
dec
jg
movs
mov
mov
cmp
jp
das
push
data16
dec
dec
push
adc
xchg
mov
mov
jne
not
int3
js
and
imul
jns
cmp
mov
cmp
or
inc
xor
hlt
fcmovu
pop
sub
ds
mov
push
jmp
ins
ins
mov
rol
and
mov
mov
pop
jno
fistp
jne
xchg
push
test
ftst
mov
mov
inc
pusha
pop
and
sbb
xor
cmp
push
mov
jno
mov
jnp
mov
xchg
out
sbb
jl
xchg
lds
and
das
cwde
(bad)
pop
cmp
sbb
fiadd
cld
push
mov
sbb
jnp
aad
fs
mov
ins
pop
nop
cld
inc
adc
pop
mov
test
and
pop
cmp
push
xor
sbb
inc
retf
mov
jecxz
or
mov
jp
hlt
mov
enter
or
jb
fisubr
jecxz
adc
(bad)
jle
sbb
jno
xchg
xchg
or
arpl
add
test
or
jo
mov
fdivr
xor
repnz
lock
or
adc
das
ss
cmp
rcr
aaa
arpl
sub
out
outs
cdq
xor
(bad)
dec
sbb
xchg
cli
push
sbb
in
jmp
xor
xchg
pop
mov
mov
dec
sbb
xchg
sub
inc
dec
mov
sbb
imul
shl
mov
shl
and
pushf
movs
test
bts
xor
mov
cmp
mov
(bad)
lea
mov
ins
jmp
sbb
xor
rol
inc
cld
lock
dec
mov
adc
mov
(bad)
stos
dec
stos
cmp
cli
mov
repnz
movs
mov
push
sub
mov
sub
pop
push
xor
lods
cmp
les
iret
sub
div
cwde
sub
lds
stos
pmaxub
lahf
ins
data16
daa
data16
(bad)
stc
in
jp
adc
(bad)
fs
mov
(bad)
fiadd
jl
aas
jge
xchg
jno
xor
pop
inc
xor
mov
inc
out
push
xor
imul
mov
dec
outs
mov
jbe
scas
adc
lods
push
outs
cmp
scas
xchg
out
hlt
in
xchg
cmp
pushf
sbb
fist
pop
sub
mov
stos
outs
mov
cmp
leave
jno
sbb
cmc
push
mov
cwde
jmp
nop
sbb
dec
shl
jmp
xor
shl
lea
mov
sbb
retf
imul
xchg
mov
cdq
mov
jecxz
cmp
xchg
and
push
dec
aad
inc
ins
sahf
dec
push
or
add
inc
mov
loopne
mov
enter
test
xlat
sbb
jl
jmp
push
xlat
(bad)
pop
pop
mov
into
popf
xchg
push
and
leave
mov
imul
and
inc
mov
imul
xchg
fwait
sahf
or
pop
iret
movs
pop
xchg
and
inc
loopne
mov
in
pop
or
pusha
icebp
ins
arpl
fcomp
rcl
add
fs
lea
inc
pop
add
mov
arpl
cmp
rol
sbb
repnz
movs
and
idiv
xor
mov
scas
mov
mov
dec
sub
jmp
mov
ja
mov
adc
in
movs
inc
cmp
scas
addr16
jbe
ins
cmp
in
xor
fidiv
push
or
in
lods
cmp
popf
cmp
out
hlt
movs
or
(bad)
(bad)
cs
add
lods
fistp
push
mov
cmp
out
jnp
punpcklwd
aad
pop
sti
mov
enter
dec
addr16
and
imul
cld
arpl
mov
test
add
test
rcl
cs
mov
pop
jle
mov
jmp
dec
sub
cmp
dec
mov
jmp
outs
iret
lock
cmp
js
cmp
dec
(bad)
push
jl
adc
hlt
xchg
cs
pop
mov
mov
mov
sti
(bad)
mov
xor
xchg
mov
pop
out
xchg
lahf
pop
and
int3
mov
xchg
cmp
test
pop
sbb
not
or
and
xchg
daa
ins
xor
je
lahf
test
push
into
cmp
(bad)
inc
mov
push
mov
in
loope
fiadd
shl
push
sub
mov
icebp
ins
mov
imul
mov
rol
je
outs
fistp
out
scas
add
adc
arpl
or
or
sar
cmc
rcl
and
dec
mov
sub
(bad)
jp
cmp
movs
push
fild
pop
ror
sbb
dec
(bad)
idiv
inc
push
cmps
pop
cmp
cli
push
sub
mov
sub
enter
pop
mov
push
movs
ret
dec
push
cmc
cmc
lea
and
clc
test
adc
mov
jmp
ins
pop
mov
nop
dec
or
xchg
push
fnstsw
les
out
jg
pop
mov
add
add
xchg
xor
cli
mov
test
das
mov
xlat
aam
test
inc
sbb
sub
jmp
(bad)
outs
ror
pop
lahf
out
add
test
and
sub
cmp
pop
push
xchg
inc
sbb
pop
push
and
xchg
pop
ins
inc
push
or
rcr
inc
or
adc
xor
fcmovnu
sub
jg
or
cmp
rcl
xor
retf
ror
repz
(bad)
jb
mov
daa
int3
mov
into
dec
pop
mov
adc
push
retf
pop
stc
mov
and
mov
test
inc
mov
rol
fwait
int3
les
or
test
movs
pop
(bad)
cmps
dec
push
out
ret
repz
xchg
dec
test
ja
les
(bad)
in
loope
or
sar
test
js
push
daa
jmp
das
mov
(bad)
pop
inc
enter
cmps
adc
dec
pop
outs
dec
push
out
jge
adc
lods
xchg
mov
imul
inc
stos
icebp
movs
dec
retf
xor
jae
mov
outs
jae
or
xor
test
jo
pop
(bad)
jmp
mov
out
add
sahf
cmc
in
test
jge
repnz
sahf
push
popf
mov
dec
sar
mov
inc
retf
mov
mov
or
call
xor
enter
jo
cmp
xor
aas
js
imul
jmp
(bad)
mov
addr16
fcomip
sbb
(bad)
out
data16
int
jo
dec
shl
(bad)
mov
lods
movs
xor
adc
xor
fisub
shl
rcl
or
sbb
push
movs
out
iret
jecxz
std
and
push
add
pop
dec
clc
xor
push
sti
pushf
movs
mov
jecxz
outs
push
mov
lods
or
test
cs
aaa
shl
scas
aad
push
ror
adc
mov
sub
pop
sbb
sub
pop
ds
ret
mov
inc
or
push
fld
ficom
cwde
icebp
imul
rol
and
repz
(bad)
pop
rol
jae
inc
test
mov
sub
arpl
push
imul
jmp
inc
or
mov
mov
dec
iret
push
inc
xchg
mov
(bad)
pop
push
out
xor
pop
mov
sub
dec
and
pop
dec
dec
sbb
xchg
dec
jno
sbb
mov
cs
pop
cmp
fmul
push
xchg
push
les
imul
jns
inc
(bad)
stos
mov
or
icebp
adc
js
aaa
cwde
std
pop
les
and
iret
mov
mov
leave
sbb
(bad)
dec
push
lods
mov
lds
and
add
popf
scas
sub
fisub
xor
in
dec
loop
pop
mov
mov
das
pop
std
adc
sti
push
cmp
or
mov
push
dec
jno
fs
jp
push
adc
jno
arpl
mov
inc
out
cdq
cmp
stc
lahf
out
cmp
ret
lods
mov
in
pushf
push
push
jle
nop
mov
shl
xchg
cmp
push
pop
xchg
loop
int3
ins
lds
or
mov
mov
xor
fld
fst
cs
add
fistp
mov
and
push
fcomi
and
popf
in
xchg
xor
nop
loopne
xchg
stos
jns
nop
cmp
sub
add
push
adc
xchg
xor
mov
xchg
xchg
stos
fs
adc
in
(bad)
mov
fcomp
inc
stos
pusha
js
inc
js
lahf
mov
push
mov
sbb
out
(bad)
adc
mov
jmp
jnp
jge
mov
ficomp
cli
ins
(bad)
sbb
pop
test
div
(bad)
arpl
popf
jb
int3
xchg
lods
in
mov
ja
sahf
call
sbb
stc
fdivr
cli
rol
loopne
push
loop
cmc
jb
scas
sub
jge
push
ss
out
dec
dec
mov
mov
lahf
mov
fcom
jge
retf
das
hlt
push
mov
xor
ds
jecxz
stos
xchg
repnz
jge
mov
push
sub
stos
jb
retf
or
sub
sub
jnp
mov
cmp
bound
test
cmp
lahf
mov
adc
sub
jae
in
fcmove
inc
aaa
mov
adc
xlat
nop
push
xchg
mov
cmp
lock
aas
add
jmp
sbb
pushf
test
cmc
(bad)
scas
mov
imul
(bad)
sub
mov
js
ds
std
and
arpl
outs
jecxz
pop
int
adc
jecxz
pusha
shr
adc
dec
aas
xchg
xchg
mov
fadd
jge
retf
jb
cdq
mov
ret
cwde
mov
test
xor
and
out
leave
jnp
jle
pushf
ret
mov
sub
pop
loopne
daa
out
xor
jae
xchg
je
adc
xchg
dec
or
mov
xchg
lahf
push
popf
xor
add
pop
(bad)
and
out
loopne
pop
mov
(bad)
out
ret
xchg
fst
inc
xchg
jmp
das
scas
jmp
lock
and
mov
mov
push
std
(bad)
dec
jae
popa
jle
or
add
dec
test
sub
lahf
aad
mov
std
pop
call
mov
jp
pop
jne
stos
xlat
inc
xor
pop
sbb
xchg
mov
fdivr
mov
inc
je
inc
iret
lea
mov
test
adc
xchg
stos
inc
arpl
and
test
xchg
or
sub
jecxz
mov
jne
lea
ror
ficom
mov
ss
jbe
ficomp
jle
mov
les
xor
and
mov
xchg
pop
fbld
xlat
pop
scas
add
xchg
mov
rcl
cwde
adc
push
inc
mov
mov
ret
xor
xchg
xchg
inc
cdq
int3
or
jp
movs
mov
out
push
xchg
ja
and
push
dec
mov
xor
jo
jno
mov
sbb
pop
sub
out
add
xlat
clc
or
dec
xlat
or
or
shr
push
xor
(bad)
pop
bound
xor
leave
or
xor
adc
xchg
push
add
adc
fstp
dec
dec
mov
sbb
mov
xchg
repz
jg
and
cmp
xchg
aaa
sahf
add
rcr
aad
movs
nop
push
adc
pop
mov
and
push
jge
fimul
inc
adc
in
scas
jnp
xor
loop
jno
in
xor
icebp
mov
fadd
bound
popa
pop
jb
ja
std
adc
cdq
fcom
cwde
xchg
xor
mov
xchg
mov
sbb
mov
adc
mov
movs
mov
loopne
adc
cmps
xor
xchg
lock
inc
clc
pop
xchg
gs
div
or
aad
cmp
fs
pop
pextrw
ds
mov
sub
push
sahf
popf
pop
stc
mov
aaa
mov
movs
and
call
pop
mov
js
or
aaa
jae
jp
imul
mov
shl
fwait
out
call
inc
jmp
xor
add
push
xor
sub
(bad)
push
iret
sub
mov
daa
scas
cmp
cld
test
sub
aas
js
lea
sub
jnp
fldcw
pop
sub
xor
push
xchg
mov
push
(bad)
or
(bad)
mov
(bad)
jno
scas
sub
push
ror
sub
add
in
cdq
out
js
pop
mov
push
dec
out
daa
stos
sti
lods
add
call
xlat
repnz
ins
mov
adc
push
in
imul
dec
adc
push
shl
push
mov
std
test
xchg
sbb
cdq
push
jne
test
mov
stos
outs
xor
icebp
mov
jae
test
adc
push
adc
adc
dec
sbb
fadd
pop
cmps
sbb
imul
cmp
or
dec
cmps
xchg
mov
mov
xchg
push
leave
imul
int3
movs
lods
into
sub
rcr
mov
xor
sbb
fadd
aaa
js
lea
mov
fmul
inc
xchg
sti
std
pop
ins
out
mov
popa
jbe
add
fnstenv
jns
les
mov
loop
loop
adc
add
adc
pop
popa
popa
xchg
push
inc
mov
fstp
mov
lea
cs
xlat
cmp
popf
lock
cs
sbb
aam
enter
xor
xchg
std
mov
lahf
dec
loope
aam
fisttp
aas
(bad)
fld
fst
inc
cmp
add
mov
jne
in
pop
fidiv
lock
xchg
xchg
inc
(bad)
fcom
pop
mov
(bad)
inc
push
fs
shl
loopne
cwde
scas
mov
test
jmp
add
hlt
mov
xor
inc
or
mov
(bad)
scas
scas
add
add
sub
sbb
jbe
adc
cli
arpl
xor
(bad)
into
or
mov
fnclex
stos
loopne
push
mov
sar
les
pop
push
add
mov
mov
cmp
xchg
mov
pop
adc
repz
ret
outs
cmps
cmp
inc
rcl
xchg
adc
push
mov
jmp
out
outs
cmps
and
in
xchg
jno
aad
and
xchg
aad
push
int3
call
retf
jne
loop
ss
mov
xor
mov
mov
in
or
mov
daa
psubusb
xor
stos
and
push
hlt
pop
add
loope
push
pop
pop
sti
(bad)
pop
inc
cli
aaa
cmp
ret
jne
or
in
(bad)
aas
push
add
bound
ds
ficomp
inc
repnz
or
jae
mov
imul
adc
inc
(bad)
pusha
pop
lods
inc
ds
fsub
jecxz
cmp
push
pop
shl
xchg
mov
mov
xor
(bad)
mov
xor
mov
ficom
lods
push
sub
mov
stos
xor
and
pop
jmp
aam
pop
hlt
popf
push
inc
sbb
push
out
out
mov
jg
jmp
cmp
jg
shl
out
dec
sahf
lods
mov
xor
push
(bad)
jne
mov
(bad)
jp
aas
push
cmps
sub
cmp
mov
loopne
push
cmp
cmp
mov
mov
jge
xchg
(bad)
cld
inc
sbb
mov
in
dec
dec
shl
and
sbb
mov
pop
mov
jbe
pop
mov
leave
les
js
add
sbb
out
xchg
adc
sar
or
pop
loope
out
cmps
dec
or
and
cmp
scas
sbb
popf
pusha
fistp
imul
xlat
sub
adc
and
xor
fcom
fsubp
inc
js
mov
adc
and
push
fs
lods
or
sub
xor
fist
jb
scas
xchg
fs
imul
fs
jmp
mov
cmp
pop
pop
not
les
es
add
and
sub
mul
jns
in
in
and
sub
xchg
mov
mov
arpl
test
(bad)
fsubr
ficomp
pop
mov
sbb
push
mov
dec
adc
mov
mov
fsubr
std
pop
dec
pusha
fcom
push
sub
pop
mov
mov
inc
adc
out
fdiv
fwait
push
pop
loop
pop
shr
pop
dec
inc
mov
icebp
bound
jo
sahf
jo
add
jecxz
mov
je
pop
inc
add
bound
xor
ror
imul
pop
sar
outs
sub
out
cs
jno
adc
or
add
aam
out
mov
int
repnz
out
(bad)
xchg
loope
pop
or
sub
mov
jno
pusha
jecxz
test
and
mov
cmp
cmc
sub
sub
jb
add
fadd
push
in
mov
pop
mov
inc
hlt
sti
test
popa
xchg
and
dec
sbb
inc
in
inc
cmp
sub
mov
jp
es
sbb
popa
or
out
jecxz
xchg
cmp
cmp
out
pop
jge
xor
pop
(bad)
xchg
clc
les
jne
mov
ins
shl
mov
lock
xchg
mov
in
in
add
call
adc
in
pushf
test
sbb
xchg
xor
mov
jno
jbe
dec
pop
push
xlat
jle
pop
sbb
js
outs
ror
ja
cmc
inc
mov
loope
mov
mov
loopne
or
cli
cdq
cmp
daa
adc
loope
bound
and
out
into
mov
leave
mov
jne
imul
jb
lahf
dec
push
cmps
enter
ss
adc
ds
ins
sbb
mov
add
add
std
fstp
jbe
xchg
das
jnp
push
cmp
dec
and
cmovns
xor
sub
jne
bsf
inc
repz
rcr
aas
cmp
dec
into
mov
aad
and
and
dec
(bad)
pop
or
out
(bad)
or
mov
out
cmp
aaa
or
and
(bad)
xchg
or
xor
in
sbb
xor
btr
push
pop
shl
loop
xchg
nop
lods
test
inc
bound
mov
pop
add
icebp
mov
mov
movsx
inc
jne
fnstenv
inc
mov
fimul
(bad)
retf
lds
lea
inc
jecxz
cdq
mov
mov
lea
push
sbb
rcl
jmp
lahf
sub
inc
adc
inc
lds
push
mov
dec
xchg
inc
inc
clc
pop
fisub
mov
push
test
rcl
outs
outs
imul
pusha
leave
mov
fucomi
pop
jb
jb
fs
shr
into
(bad)
sub
std
imul
and
pcmpeqw
xchg
fsubr
int3
add
or
xchg
sub
out
(bad)
xor
movs
cdq
mov
xchg
ja
cmp
mov
pushf
xor
inc
mov
xchg
pushf
mov
ss
sbb
sub
or
xchg
popf
sahf
int
cwde
into
xlat
into
jmp
loop
cmp
gs
mov
mov
neg
xchg
shr
and
cmps
(bad)
hlt
push
out
add
into
gs
hlt
pop
(bad)
out
leave
shl
xor
dec
out
(bad)
push
dec
adc
bsr
jle
repz
call
ror
loopne
add
xlat
push
pop
or
outs
or
(bad)
in
add
popa
inc
mov
inc
outs
ret
mov
mov
and
mov
jg
ds
xchg
xor
aaa
cmp
aam
and
add
lods
inc
cmps
add
pop
dec
push
mov
test
add
clc
inc
out
(bad)
das
mov
sub
and
xchg
fs
retf
(bad)
fucomp
xor
jge
clc
mov
and
inc
add
pop
lods
add
or
pushf
pusha
xor
call
xor
cli
test
fdivr
iret
in
inc
push
jo
das
dec
sub
xor
xchg
adc
jno
ja
je
add
outs
jne
inc
cmps
hlt
mov
jmp
out
stos
jp
xchg
loopne
gs
jl
rcl
lock
xchg
jne
jb
sub
sub
push
pop
sub
in
cmp
jecxz
test
sub
cmp
adc
cmp
sub
mov
test
ds
sahf
mov
push
iret
xchg
xchg
ja
les
mov
into
mov
jne
dec
xchg
xchg
fcomip
scas
bound
adc
outs
adc
retf
jp
lahf
mov
mov
addr16
or
and
shl
push
jmp
fldpi
fisttp
cmps
das
call
or
sti
cli
jl
aad
push
outs
shr
xchg
mov
out
int3
fidiv
add
dec
leave
cs
and
out
jns
mov
call
or
outs
jg
sub
and
mov
ret
data16
inc
aad
cld
mov
dec
repnz
cwde
xchg
add
and
push
dec
lods
dec
int
cmps
pop
jecxz
arpl
cdq
loop
inc
out
loope
push
fcom
daa
and
popf
mov
fs
sub
cmps
out
shl
fs
lods
outs
mov
outs
inc
icebp
cmp
addr16
stos
mov
(bad)
es
ins
xor
push
imul
setl
pop
cmp
int3
pusha
jbe
pop
mov
out
add
lea
inc
cdq
xchg
adc
stos
add
pusha
aaa
mov
sbb
pop
fs
or
mov
add
ins
test
lods
inc
mov
push
pop
leave
lods
fisttp
cmp
js
pop
inc
pushf
call
xchg
pop
inc
pop
xchg
or
push
prefetcht1
ss
sub
mov
adc
push
inc
pop
jo
movs
push
imul
mov
pop
mov
mov
or
jle
push
sbb
xor
outs
pop
into
gs
mov
out
ins
mov
sbb
sub
cld
or
inc
int3
mov
xor
sahf
push
aaa
sub
push
mov
ss
xchg
sbb
outs
ret
pusha
dec
sbb
bound
push
mov
loope
cli
cs
inc
addr16
cmc
mov
fsub
cmp
cli
out
cs
inc
jmp
or
jmp
push
inc
hlt
aam
dec
cmp
dec
push
jae
and
aam
push
xchg
push
jne
(bad)
cmp
iret
inc
adc
sbb
iret
jmp
sub
jle
imul
repz
mov
fstp
test
pop
pop
in
jae
sub
and
xchg
and
or
xchg
fsub
push
cmps
fdivr
daa
dec
xor
(bad)
pushf
xchg
sbb
icebp
push
jo
dec
inc
dec
jae
mov
add
xor
xor
pushf
cwde
into
cmp
dec
pushf
loopne
push
outs
sub
xor
scas
shr
cmp
jle
scas
push
adc
or
in
je
add
test
enter
add
mov
jno
inc
aam
dec
icebp
mov
mov
sbb
pop
adc
outs
jg
movs
xchg
gs
sti
mov
(bad)
sahf
xor
mov
scas
xchg
scas
int
fstp
sub
add
pxor
mov
into
jmp
jmp
add
mov
mov
cs
int3
sbb
jecxz
mov
aas
cmp
jge
movs
add
pop
ja
jns
or
xor
sbb
fimul
and
pop
div
cmp
shl
mul
call
lea
pop
stos
scas
lock
mov
dec
sub
dec
fwait
adc
paddusw
adc
push
in
sbb
add
ja
adc
dec
dec
shl
add
jp
cmp
or
fst
mov
add
(bad)
jecxz
lock
scas
xor
mov
xchg
test
icebp
hlt
pop
leave
packsswb
adc
outs
out
adc
mov
push
sbb
mov
push
test
ja
mov
cmp
adc
cdq
adc
adc
jp
in
test
or
adc
into
fcom
popa
nop
in
(bad)
retf
scas
push
pop
inc
push
gs
pop
fidivr
and
addr16
ss
adc
stos
inc
out
xchg
jp
inc
xchg
push
dec
push
repnz
shr
pop
pop
into
push
jecxz
sahf
stc
xchg
sbb
push
dec
mov
jbe
push
(bad)
jmp
mov
inc
adc
mov
mov
and
cmp
sbb
inc
(bad)
jb
mov
pop
push
imul
mov
push
mov
pop
push
dec
retf
out
jge
or
dec
mov
and
inc
mov
dec
jmp
ja
or
cmps
leave
jbe
xchg
adc
out
dec
icebp
in
fwait
daa
adc
add
cmps
add
cmp
stc
jecxz
adc
repz
call
push
std
inc
xchg
and
out
lods
push
jns
nop
sub
inc
es
mov
stos
mov
xor
dec
les
js
sub
sar
xor
pop
iret
ss
inc
test
sbb
scas
cld
dec
div
inc
(bad)
retf
shr
retf
rol
pop
jle
(bad)
and
mov
into
inc
in
ins
pop
inc
cmc
(bad)
and
cli
mov
mov
mov
shl
fsubr
adc
jp
xor
icebp
dec
(bad)
pop
fistp
add
and
cmps
xchg
scas
daa
sbb
outs
cmp
jmp
mov
inc
ror
push
or
adc
(bad)
and
mov
lahf
(bad)
cmp
jns
cmp
and
nop
mov
ret
les
and
pop
in
or
jnp
push
xor
movs
xchg
and
std
add
jae
enter
loopne
in
rol
shl
pop
ror
fsub
in
stc
adc
repz
fimul
fidiv
mov
std
xchg
sub
cmps
or
or
pop
imul
sub
dec
pop
(bad)
jbe
sub
ins
sar
lock
mov
xor
xor
div
add
mov
pop
fdivr
fistp
dec
sbb
xchg
arpl
ret
fiadd
adc
xchg
push
arpl
sub
dec
cmp
lds
xor
repz
push
jne
loope
popf
or
sahf
popf
inc
adc
scas
push
sti
jle
push
jb
xor
jmp
in
xchg
mov
inc
dec
fdivrp
mov
sub
in
popa
pop
adc
es
aam
in
enter
sub
enter
loopne
idiv
lahf
push
jo
out
mov
add
inc
inc
out
shl
and
adc
sbb
loop
lahf
imul
es
fwait
iret
jno
jmp
jmp
or
pop
movs
test
bound
sbb
mov
mov
dec
loop
mov
dec
jmp
push
(bad)
js
leave
imul
stc
js
and
in
les
sub
fidiv
xor
mov
mov
repz
cwde
pop
cmp
add
(bad)
fmul
loopne
jl
popf
(bad)
hlt
pop
js
dec
jnp
test
adc
repnz
out
xchg
imul
and
mov
push
dec
test
cmp
scas
int3
leave
inc
cld
movs
bound
mov
adc
(bad)
std
retf
out
xchg
mov
sti
inc
(bad)
xchg
imul
push
and
movs
pushf
mov
mov
in
jae
mov
mov
dec
cli
sub
enter
sbb
jl
out
mov
push
hlt
adc
comiss
adc
neg
mov
imul
xchg
ss
pop
cld
inc
pushf
jge
ror
add
inc
cmp
mov
and
pop
pop
fcom
shl
or
inc
clc
leave
lds
fstp
jnp
and
xor
std
fist
ss
sub
adc
sub
sti
sbb
lods
pop
ja
pop
xor
or
or
scas
ror
fucomp
fisubr
mov
pushf
and
jnp
popf
mov
ss
push
clc
jge
sub
mov
and
pop
sub
mov
or
aas
pop
shl
mov
pop
outs
adc
jmp
and
daa
pop
add
imul
push
adc
cs
jne
psraw
or
dec
cmc
dec
call
or
mov
adc
loope
ins
ret
dec
les
shr
lods
mov
jg
sub
stos
(bad)
or
cmp
popf
into
test
mov
repz
scas
ret
cmp
adc
jmp
loopne
in
cld
lahf
and
jo
out
jle
int3
jns
mov
add
in
mov
jmp
mov
push
and
ins
pop
std
push
ja
stos
lock
test
(bad)
pop
mov
(bad)
mov
xchg
cs
mov
lds
mov
mov
mov
cmps
adc
xor
mov
jmp
call
ss
jb
out
(bad)
addr16
lds
or
push
in
test
mov
adc
loope
inc
push
sbb
cwde
cmp
in
(bad)
mov
sbb
rol
sub
sub
(bad)
mov
push
and
outs
dec
dec
xchg
and
dec
xchg
jns
mov
mov
cmp
into
push
outs
lds
lock
leave
jnp
movs
push
das
in
sbb
nop
cmp
stos
xor
xor
shl
sahf
xchg
cmp
jge
dec
inc
dec
lea
mov
dec
les
jae
movs
les
inc
shr
jmp
dec
dec
add
add
fiadd
out
xor
sub
inc
push
xchg
in
push
mov
adc
enter
xchg
jge
jns
mov
das
pop
stc
xchg
adc
test
dec
dec
push
sbb
repnz
shl
adc
jl
xor
push
push
sbb
test
das
(bad)
adc
sti
sbb
pop
lods
sub
sbb
fld
push
add
inc
sub
dec
sbb
mov
xor
push
ds
icebp
xchg
mov
xchg
sbb
xchg
or
pop
inc
dec
inc
leave
neg
jge
push
jmp
mov
std
aas
call
in
out
ins
sbb
imul
ins
cmps
test
cwde
pop
and
or
mov
sub
pusha
mov
in
dec
push
xchg
cs
or
loope
or
popa
push
mov
aaa
dec
lea
imul
or
cmp
int3
jmp
int3
ins
xor
nop
push
cmps
arpl
out
xchg
adc
pop
fiadd
push
push
rcl
jae
add
nop
sbb
mov
lahf
cmp
mov
add
push
sub
or
aad
lods
(bad)
test
sti
rcr
lfs
cmp
(bad)
add
mov
lahf
in
mov
daa
push
aam
in
mov
test
and
xor
pop
jb
(bad)
push
int3
sub
xor
sub
adc
popa
sub
xchg
stos
pop
or
mov
repnz
lods
ds
inc
mov
jl
jb
sub
jmp
dec
sub
das
cmp
retf
iret
test
xor
and
int3
dec
xchg
retf
mov
pushf
stos
cmp
aad
jns
hlt
xor
or
dec
jbe
adc
pop
(bad)
out
adc
lds
or
xchg
cld
jne
scas
leave
in
daa
cmp
in
add
cld
mov
and
or
jg
inc
test
int
inc
jne
in
cmp
int3
jle
or
adc
ds
pop
jl
gs
sbb
addr16
mul
jne
aaa
data16
pop
sbb
js
into
imul
xor
push
stc
xchg
mov
ds
xor
rcl
rol
jns
psubusw
dec
mov
adc
pop
push
mov
das
loope
mov
int
push
mov
test
movs
leave
jae
add
xchg
(bad)
push
nop
mov
add
adc
stos
push
addr16
cli
jl
pop
ins
fnstcw
icebp
pop
iret
js
cwde
dec
enter
adc
das
cmps
xchg
push
stos
cmp
ins
xor
enter
add
nop
mov
js
sub
sbb
lds
mov
cmp
stos
lea
push
and
sti
das
mov
retf
sbb
mov
dec
mov
in
pusha
or
addr16
add
and
mov
test
inc
shl
aad
adc
ins
lahf
(bad)
add
repz
or
mov
dec
mov
les
test
mov
xchg
outs
call
xor
xor
pop
xchg
jae
ror
dec
push
in
retf
or
push
retf
inc
add
or
jg
sub
xor
sti
push
les
mov
arpl
mov
xlat
stos
cmp
pop
pop
sbb
je
jne
stc
jne
retf
jge
cwde
jae
repz
cwde
jo
adc
pop
dec
dec
sub
in
nop
xchg
or
adc
sbb
jge
pop
(bad)
out
sbb
ficom
mov
mov
adc
pop
scas
xchg
jno
repnz
adc
in
shr
scas
mov
mov
jmp
xchg
in
xor
mov
push
dec
retf
loope
mov
mov
inc
ficomp
push
mov
test
ror
mov
je
mov
retf
loopne
push
or
or
push
mov
in
rcr
add
shr
shl
xchg
je
mov
mov
and
inc
test
mov
(bad)
fisttp
xchg
add
fucomip
push
mov
push
cmps
gs
ds
xchg
(bad)
or
and
push
daa
cmps
repz
in
not
mov
popf
sbb
dec
mov
stos
sub
push
push
shr
retf
pop
sbb
mov
sub
test
or
inc
xor
shr
lds
icebp
or
into
add
mov
sub
(bad)
fcmove
jno
cwde
retf
sub
bound
sbb
out
xchg
adc
xlat
cmp
rcl
sbb
(bad)
mov
sbb
movs
xchg
(bad)
dec
add
mov
jae
mov
mov
push
aam
addr16
jb
mov
ins
ja
push
push
or
lahf
leave
ret
fdiv
sbb
cmp
movs
dec
fnstsw
shl
push
es
ret
add
mov
xor
inc
xor
inc
mov
inc
cmp
mov
or
gs
aas
xor
movs
in
jbe
test
xchg
dec
sbb
push
mov
pop
aam
sbb
sar
icebp
push
jle
fidivr
push
inc
shl
cdq
and
out
lock
into
push
ins
sbb
sub
inc
inc
push
sbb
dec
and
fwait
sti
aas
js
call
mov
(bad)
nop
pushf
in
dec
ret
xchg
in
mov
or
fs
scas
fwait
stos
fstp
mov
mov
jge
or
loop
ret
scas
cmp
das
dec
ror
pushf
push
(bad)
mov
pop
xor
call
dec
das
mov
das
mov
mov
dec
mov
mov
ror
mov
rcl
lods
and
lahf
call
aas
cmps
out
dec
cmp
bound
cmp
(bad)
ja
out
mov
inc
out
jbe
(bad)
xor
sbb
aaa
push
aad
into
movs
movs
sub
push
cmps
xor
icebp
jo
mov
jnp
add
out
mov
push
and
mov
add
mov
js
push
cmps
mov
fadd
or
loopne
xchg
dec
xchg
and
add
dec
mov
jmp
retf
xchg
mov
mov
(bad)
das
in
pop
mov
inc
and
fcomp
push
or
add
mov
push
imul
push
pop
pop
std
inc
adc
sub
pop
push
out
(bad)
outs
retf
cld
mov
fsubr
sub
xchg
add
in
and
xor
pop
push
adc
mov
sub
sbb
cmp
jp
shl
sar
mov
out
out
(bad)
fistp
push
outs
xor
xor
cmp
and
enter
mov
cmp
sbb
jns
xchg
fnstenv
jbe
lock
hlt
sub
ss
imul
bound
call
shl
xchg
test
test
dec
mov
mov
xchg
mov
pushf
mov
sti
dec
stc
push
stos
mov
lahf
push
inc
sbb
pop
pop
mov
inc
daa
add
lock
test
unpcklps
cmp
mov
stos
push
out
mov
imul
sti
jbe
je
jne
push
out
xchg
(bad)
(bad)
sahf
aam
mov
push
or
scas
in
mov
mov
dec
fisttp
add
mov
mov
mov
repz
int3
ror
fxch
scas
pop
sbb
sbb
aad
xor
dec
loope
fs
inc
cmp
ins
cdq
add
sbb
push
aad
ret
mov
ret
dec
(bad)
jl
in
test
ds
loopne
pop
loopne
jmp
xor
xor
test
jno
aas
pop
and
dec
stos
popa
jns
mov
jg
push
pop
lea
call
inc
loope
data16
jae
inc
push
cmps
std
push
dec
rcr
sar
ds
sbb
cmp
mov
loop
sbb
xlat
sahf
je
(bad)
cmps
pop
out
inc
mov
(bad)
in
pop
ja
jecxz
xor
sbb
in
js
mov
fwait
or
and
mov
push
ins
stc
and
mov
and
dec
jmp
js
movs
int3
jb
call
push
arpl
ins
aaa
int
es
sub
pop
and
leave
mov
push
sbb
push
test
aaa
adc
gs
std
and
xor
fmul
(bad)
in
in
loop
das
rcr
push
add
dec
enter
add
adc
inc
mov
stos
mov
fild
out
div
out
cmp
fbstp
inc
mov
sbb
mov
pop
inc
xchg
and
adc
and
test
jg
push
call
add
ins
leave
xchg
jne
xchg
jbe
xchg
and
cmp
ss
dec
mov
ins
out
inc
mov
push
int3
or
push
xor
xor
int
nop
push
mov
mov
(bad)
std
bound
test
jmp
les
push
push
(bad)
jmp
cmps
jmp
xchg
push
add
xchg
(bad)
mov
add
mov
arpl
sbb
mov
xor
js
mov
movs
or
test
mov
fistp
cmp
add
ja
in
ret
fld
push
mov
sbb
mov
movs
dec
xor
pop
pop
ins
(bad)
fs
mov
push
inc
scas
lods
(bad)
imul
je
outs
shl
mov
push
adc
jo
faddp
mov
cmp
inc
or
mov
pop
mov
imul
nop
fwait
daa
ja
aad
daa
fsubr
fisttp
icebp
jmp
daa
outs
xor
(bad)
pop
nop
jo
sbb
loopne
gs
dec
ins
xchg
cli
and
and
pop
push
mov
jge
or
scas
call
adc
mov
sub
sahf
pop
nop
push
clc
push
and
inc
xor
(bad)
mov
cld
stos
loope
sahf
adc
ficomp
and
jecxz
ret
scas
ror
dec
mov
mov
lea
sbb
sub
sub
jp
icebp
(bad)
hlt
and
jnp
push
fwait
adc
mov
inc
jae
push
fdivrp
inc
popf
mov
jmp
or
hlt
ins
mov
push
outs
mov
lds
les
cmp
ror
test
cmp
jg
add
xlat
add
repz
and
hlt
adc
int3
mov
mov
hlt
fdiv
jmp
jecxz
cld
xor
add
je
jp
cld
inc
fnop
shl
jge
test
scas
push
sahf
mov
cmp
fwait
shl
enter
enter
std
cld
lods
fdivr
(bad)
(bad)
add
mov
push
aam
add
lock
xchg
(bad)
ins
pop
fcom
popa
loop
and
cli
inc
jg
push
push
push
xchg
jecxz
(bad)
mov
adc
es
and
(bad)
sub
test
xlat
push
push
add
jl
stos
and
dec
pushf
adc
mov
(bad)
fnstsw
xor
mov
repz
data16
cmp
and
and
mov
pop
(bad)
pop
adc
inc
int3
mov
shr
jp
sti
mov
ins
pop
add
inc
movs
(bad)
fnstcw
adc
xor
push
mov
dec
dec
add
shl
femms
pop
or
icebp
outs
dec
sbb
loop
je
gs
ds
loop
jle
or
aam
push
scas
mov
or
sub
jge
(bad)
jle
add
in
pushf
jp
dec
scas
jge
sbb
sub
or
pop
outs
pop
mov
cwde
int
shl
sub
inc
imul
xchg
mov
rcr
inc
inc
call
fadd
and
cmp
loopne
jp
cmps
push
push
(bad)
int3
in
das
mov
xor
in
daa
push
mov
lahf
out
(bad)
loopne
xchg
add
and
pop
cld
pop
add
xchg
test
shr
mov
outs
push
cmp
scas
std
dec
repnz
xchg
cwde
(bad)
ss
pusha
or
xor
add
sbb
das
mov
jmp
add
stos
push
bound
and
inc
fild
push
mov
and
and
mov
sbb
repnz
ss
lahf
cs
mov
jge
xchg
mov
sub
xchg
out
hlt
pusha
xor
jb
jbe
rol
jl
call
(bad)
jbe
inc
push
ds
xchg
add
loopne
dec
cmp
mov
inc
xchg
call
xor
sbb
sbb
dec
pop
add
test
ins
dec
mov
mov
push
hlt
call
adc
clc
ds
cmp
adc
sbb
mov
xchg
pop
call
ins
add
pushf
outs
sar
sti
adc
pop
scas
mov
outs
les
xor
popa
fadd
in
sbb
adc
xor
mov
mul
fimul
mov
push
push
cdq
dec
ffreep
pushf
and
in
xchg
call
sub
(bad)
js
inc
push
cs
xchg
in
dec
cwde
sbb
and
sbb
(bad)
xchg
inc
lahf
gs
fsub
mov
mov
cmp
(bad)
lods
icebp
cmc
push
pop
xchg
dec
xchg
sub
int3
fld
ds
push
fmul
push
int
xor
popa
and
xchg
add
xchg
mov
retf
cmp
xor
xchg
sahf
fistp
pop
adc
cmp
jge
les
inc
xchg
xchg
out
pop
xchg
aam
(bad)
sbb
adc
add
dec
es
je
pop
sbb
mov
jmp
xor
data16
jmp
or
jo
cmps
(bad)
arpl
loopne
push
jb
rcl
jmp
jno
rcl
es
jnp
popa
sbb
sub
pop
and
adc
mov
ja
jnp
mov
lods
jbe
addr16
xchg
add
fisttp
jp
retf
in
dec
jecxz
aas
(bad)
in
push
clc
mov
xchg
cmp
cmp
out
fmul
dec
pop
xchg
lahf
or
inc
mov
les
cdq
jp
mov
mov
or
inc
cmp
xor
dec
sbb
outs
jae
cmc
shl
sub
sbb
mov
std
not
stos
xor
dec
mov
and
dec
repz
jns
xchg
mov
loope
jl
add
enter
adc
push
pop
jno
mov
pushf
ins
and
iret
les
cli
pop
inc
sbb
mov
add
cmp
mov
lods
repz
es
jp
cli
push
xor
ror
mov
in
in
xor
xor
movs
dec
dec
mov
xor
bound
pop
sub
scas
dec
inc
jmp
add
jmp
test
shr
cmp
lods
inc
jne
lods
sahf
popf
loope
add
xchg
gs
push
sti
sbb
fistp
pop
push
leave
mov
(bad)
mov
inc
add
out
pop
popf
pop
imul
mov
lods
add
(bad)
fnstenv
sti
mov
xlat
ret
sub
inc
pusha
mov
mov
xlat
xor
leave
push
cdq
sbb
and
test
xor
in
and
xchg
cmp
lds
hlt
add
inc
int
fist
test
pop
(bad)
jae
push
not
pop
out
sbb
enter
and
clc
mov
in
push
shl
(bad)
jno
mov
push
outs
scas
mov
sub
scas
jne
dec
aad
dec
rcr
fld
fs
and
mov
xchg
and
inc
neg
scas
dec
xor
(bad)
sti
sti
jle
movs
push
dec
and
xchg
mov
dec
cld
out
or
inc
sub
enter
add
popf
xor
xchg
sti
xor
xchg
xor
jg
add
cmps
add
cs
push
xor
(bad)
push
out
mov
(bad)
jg
cmp
enter
sbb
push
cmp
scas
xchg
xor
jae
push
cwde
add
mov
addr16
aam
mov
ror
sbb
lock
daa
shl
std
pushf
and
scas
pop
push
pop
je
inc
retf
push
pushf
adc
inc
test
std
pop
sbb
shl
mov
fisub
jno
pop
xor
stos
adc
pop
or
cli
sub
push
sti
stos
cli
and
inc
xor
lahf
dec
push
dec
shl
or
push
test
cli
adc
fs
sbb
and
retf
aad
adc
test
mov
sbb
loopne
bnd
dec
outs
mov
test
nop
jmp
mov
and
sub
dec
or
je
repz
mov
pop
int3
(bad)
adc
xchg
push
jo
ins
xchg
inc
jo
stos
fs
sbb
jmp
lods
inc
mov
loopne
loop
sub
cmp
loop
mov
js
jmp
call
dec
ins
outs
add
movs
sbb
or
mov
pop
es
stc
sbb
ror
sbb
fdivr
clc
push
inc
popf
repz
fimul
push
repnz
sub
mov
or
jo
lds
test
outs
mov
pop
cs
in
pop
cmp
mov
adc
cli
call
sub
sbb
inc
adc
pop
test
add
or
pop
ins
rcl
mov
imul
(bad)
pop
mov
arpl
pop
pop
cmp
inc
loop
cmp
mov
shl
push
cld
inc
add
xchg
into
pop
push
in
mov
stc
sbb
loop
enter
popf
cmp
sti
jnp
sbb
call
lock
push
adc
mov
and
aam
test
mov
push
pop
pop
outs
lahf
das
das
sbb
(bad)
mul
icebp
rcr
lea
pop
lods
or
cmps
ja
xor
retf
cmp
cdq
les
jecxz
pop
stc
cmp
scas
fimul
push
mov
add
fisubr
neg
int3
pop
mov
pop
div
lods
jbe
or
imul
inc
add
mov
sub
cs
or
push
mov
test
or
add
mov
pop
nop
dec
(bad)
loop
adc
mov
mov
aas
test
adc
push
fstp
out
adc
xor
cwde
push
inc
pop
rcr
pop
aad
mov
outs
dec
lds
or
cmp
mov
das
das
sbb
shl
xchg
mov
jmp
ins
lock
es
adc
pop
or
xor
mov
frstor
jle
loop
dec
not
mov
retf
lahf
out
arpl
adc
push
rcr
lock
jne
in
xchg
leave
dec
fs
sub
mov
repnz
pusha
dec
sub
out
icebp
lods
lea
mov
sbb
push
frstpm(287
idiv
pop
clc
dec
sbb
sbb
pop
xor
bswap
daa
outs
fist
(bad)
lahf
cmp
adc
cmps
popa
sbb
leave
in
sbb
repz
sbb
(bad)
in
xchg
pop
sub
mov
ja
mov
jecxz
outs
dec
out
cli
sbb
sahf
sub
add
and
in
idiv
cmp
cld
xchg
jo
popf
imul
inc
retf
jmp
js
jae
leave
or
and
and
out
addr16
jmp
cmp
jno
pop
int3
in
jo
add
inc
sub
cmp
leave
popa
lods
sti
ins
or
adc
mov
mov
cmp
icebp
dec
rol
cmp
ins
das
adc
shr
fld
sbb
ror
cmp
inc
mov
mov
stos
leave
push
cdq
adc
test
jb
sti
mov
pop
fstp
xor
sar
or
dec
pusha
ss
or
jb
adc
mov
les
outs
xor
xchg
cmp
pop
sbb
or
leave
fmul
retf
and
mov
mov
lods
js
cwde
mov
outs
lods
cld
pushf
add
sbb
ficom
jg
dec
cdq
sbb
jge
xchg
paddb
stos
popa
call
inc
ss
retf
pop
and
pop
jae
xchg
std
xor
push
mov
loopne
jle
push
jle
cs
adc
out
js
repz
lods
xchg
add
pusha
rcr
inc
lods
adc
mov
jmp
mov
fstp
dec
neg
sbb
mov
clc
dec
and
fild
mov
xchg
jle
jecxz
movs
sub
push
mov
push
mov
nop
xchg
addr16
ret
mov
adc
rcl
pop
xchg
dec
fcomp
test
(bad)
in
fs
sbb
call
or
fcomip
aas
jg
add
mov
sub
cmp
push
ja
fisub
arpl
lea
es
jp
scas
scas
xor
int3
mov
stos
dec
(bad)
jae
or
push
test
cmp
and
sub
daa
mov
cmp
loope
sbb
out
lods
pop
sbb
xor
fwait
movs
pop
fisttp
cmp
mov
cmc
jo
mov
push
sbb
fcos
sub
movs
pop
xor
popf
std
ret
and
in
push
push
test
sbb
xchg
xchg
and
pop
push
and
mov
jne
jns
das
jb
add
xor
push
pushf
sbb
pop
in
pop
test
enter
mov
fcmove
sbb
push
xor
mov
jp
xchg
xchg
mov
and
jno
out
mov
or
rcr
push
xlat
iret
cmp
sbb
or
cmp
add
sbb
and
dec
(bad)
and
sahf
ins
mov
jno
push
adc
mov
jmp
sub
jmp
xchg
push
pop
push
push
jp
pop
es
mov
pop
vzeroupper
mov
push
std
jg
iret
mov
sbb
icebp
mov
repnz
cmps
retf
push
fwait
jbe
retf
mov
xchg
(bad)
imul
cmp
repnz
fdivr
push
pop
movs
fld
(bad)
in
xchg
add
sub
push
in
xchg
mov
or
or
push
xchg
dec
int3
xor
fmul
stos
cmp
(bad)
das
aaa
ds
stos
xchg
and
inc
jns
adc
mov
mov
jns
test
inc
cwde
cli
or
mov
vpunpckldq
arpl
cmps
outs
and
push
in
dec
dec
push
xchg
dec
or
scas
mov
mov
push
or
in
loop
and
sub
lds
sahf
dec
fild
daa
or
mov
lods
inc
jmp
cdq
jbe
xor
mov
loope
sbb
mov
jno
and
in
ret
fsub
lods
sub
outs
in
adc
mov
pushf
shl
mov
push
mov
and
cvttps2pi
jb
test
push
lds
xor
mov
adc
pop
cmp
loop
aam
or
(bad)
in
xor
jp
inc
or
mov
pop
adc
mov
sbb
cdq
sbb
enter
and
cmp
fiadd
(bad)
xchg
and
push
xor
mov
inc
daa
mov
leave
lods
hlt
push
(bad)
test
icebp
sbb
fbld
in
pop
lock
jbe
jno
mov
sbb
loop
cmp
add
sub
test
sbb
sbb
imul
dec
in
out
ret
pop
push
sbb
in
icebp
jae
in
std
xor
push
arpl
add
kmovw
dec
and
out
bound
inc
pop
aas
ret
popf
iret
mov
xchg
adc
cmp
aaa
adc
fmul
xchg
adc
jmp
mul
iret
pop
out
stc
mov
mov
xchg
out
ja
test
adc
dec
add
mov
jp
rol
call
xchg
mov
or
test
adc
sub
jl
ins
mov
cmp
sub
loope
or
daa
pop
xchg
pop
cmp
mov
lahf
sbb
add
push
arpl
inc
xchg
les
push
loope
and
inc
fbld
push
iret
sub
inc
dec
mov
in
je
lods
out
out
inc
call
aas
dec
rcl
push
mov
fisttp
dec
mov
cdq
and
mov
fnstsw
mov
iret
jnp
inc
xor
xchg
in
cmp
push
lods
pusha
sbb
mov
dec
and
mov
fnstsw
out
shr
push
shl
fld
push
pushf
jp
rcr
push
aam
nop
out
cmp
mov
mov
jmp
ffreep
sbb
adc
les
(bad)
jns
mov
adc
retf
(bad)
aam
cld
sbb
sub
sub
bound
fcmovnbe
adc
xor
(bad)
sbb
dec
fcomp
lea
push
xor
popf
adc
(bad)
not
ins
mov
xchg
scas
call
cld
cmps
pop
aaa
mov
cmp
push
jno
jecxz
neg
jmp
std
mov
sub
stc
pop
and
out
push
popf
jno
into
dec
mov
jb
lods
ja
aaa
sub
sub
jmp
or
bound
mov
sbb
xor
mov
sub
rcr
and
adc
dec
pushf
cmp
jmp
dec
aaa
dec
mov
repz
sub
pusha
pop
stos
ret
in
or
test
jnp
(bad)
and
arpl
test
cmps
dec
xor
add
idiv
arpl
jo
sbb
aas
mov
sbb
pop
ficom
pusha
add
scas
mov
es
xor
cmp
pop
pop
jge
or
(bad)
arpl
ja
or
xor
adc
or
mov
fs
pop
xchg
cmc
cli
ss
sub
test
or
and
dec
gs
inc
fbstp
retf
in
setle
loop
push
scas
out
call
iret
sub
mov
pop
mov
repz
dec
imul
ss
pop
mov
push
mov
add
add
and
lahf
xchg
jne
into
jo
fwait
lods
not
add
fistp
test
pusha
mov
add
adc
outs
cmps
jne
push
scas
push
push
mov
xor
xchg
sbb
sub
pop
mov
repnz
or
test
pop
setle
jnp
push
in
dec
mov
loopne
mov
cmp
test
loope
test
xchg
stc
into
dec
add
mov
cmp
icebp
dec
out
shl
sti
cmp
jg
mov
inc
imul
mov
inc
gs
xor
adc
outs
sbb
aas
jne
inc
into
ins
xchg
ss
mov
inc
(bad)
test
mov
or
xlat
dec
cmp
jp
imul
(bad)
cmp
ficom
mov
in
div
lahf
push
out
imul
and
cdq
out
out
icebp
lahf
push
or
and
cmc
or
fsubrp
push
or
repnz
jnp
es
enter
pop
or
and
mov
loopne
xor
(bad)
rcl
sbb
js
and
(bad)
pop
mov
stos
sbb
jb
xchg
pop
iret
push
jb
mov
mov
jle
pushf
inc
jb
test
xchg
outs
cmp
mov
cs
and
call
cmp
xchg
mov
push
sbb
sbb
rcr
pop
xor
dec
(bad)
jg
mov
lods
cwde
jmp
jmp
in
and
ret
pop
jecxz
and
sbb
icebp
cwde
movs
(bad)
jnp
pop
sbb
cmp
fimul
call
into
shl
pop
pop
push
sbb
ins
retf
mov
jge
cld
pop
and
mov
xchg
fiadd
fidiv
push
or
sbb
xor
mov
and
jae
arpl
adc
xchg
mov
int
xchg
cli
mov
pop
fbstp
aaa
inc
xor
pop
cmp
ficomp
dec
inc
pop
and
jl
in
jecxz
not
out
ds
xor
test
icebp
(bad)
idiv
xor
xor
movs
xchg
cmp
or
sub
outs
jg
sbb
add
repnz
(bad)
push
mov
pop
cli
xor
jb
sar
pushf
fwait
test
call
out
shl
call
xlat
mov
cld
xor
cmp
out
and
jle
push
enter
cmp
xchg
push
ret
fxch
dec
sahf
sbb
cmps
out
push
xchg
test
xchg
inc
jl
mov
push
pop
fwait
hlt
fisttp
sahf
into
sbb
jl
out
xor
stos
push
pop
mov
push
aaa
xor
or
test
out
fcom
lds
dec
lea
pop
repnz
cld
cdq
ret
movs
loopne
stos
xchg
movs
jbe
add
retf
add
dec
sar
sbb
push
inc
sub
das
xchg
nop
repnz
ins
icebp
or
jne
sbb
lahf
and
std
or
jae
adc
idiv
xchg
fwait
and
mov
jb
in
mov
jmp
call
xor
movups
dec
imul
add
mov
dec
dec
(bad)
sbb
sbb
xchg
add
mov
retf
sbb
fidiv
mov
sbb
aam
push
inc
ret
jmp
mov
or
cmp
(bad)
jmp
adc
aas
daa
popa
stc
fsubr
inc
cdq
xor
ret
xchg
jne
ret
iret
inc
sub
cmps
add
push
xor
mov
popa
inc
fild
icebp
adc
dec
dec
cli
and
mov
mov
xor
xchg
sti
jne
push
call
push
adc
sub
nop
xor
les
cmp
adc
test
pusha
icebp
ss
inc
xchg
pop
xor
dec
push
jo
jns
les
mov
push
in
cdq
xchg
imul
or
test
iret
scas
mov
test
pushf
xchg
mov
fwait
imul
mov
retf
(bad)
loop
cmp
push
pop
push
mov
sub
sub
imul
dec
mov
mov
pop
inc
pop
push
mov
jo
sti
int
push
inc
sub
jbe
mov
cmp
add
add
aad
aaa
xchg
dec
iret
ret
aad
xchg
dec
shl
push
loop
adc
movs
sub
and
mov
add
inc
daa
mov
mov
rcr
and
loope
sbb
loop
enter
retf
rcr
retf
fnstcw
(bad)
inc
sub
repz
adc
sbb
mov
xor
sbb
adc
pop
popf
scas
inc
shl
imul
jg
mov
pop
adc
aas
inc
loop
or
adc
lahf
inc
pop
adc
dec
icebp
arpl
(bad)
arpl
data16
lea
mov
scas
mov
add
cmp
js
test
or
add
loop
rcl
xor
jmp
cwde
cmp
and
aad
enter
std
test
mov
bound
xchg
jo
mov
mov
xor
mov
add
pop
lods
or
cs
cmp
jae
xchg
sar
(bad)
adc
dec
inc
(bad)
cmp
repnz
cdq
or
xor
dec
ss
stc
pop
sbb
sbb
inc
sub
in
and
lock
aas
and
enter
xchg
loop
test
(bad)
or
lods
and
mov
xor
test
inc
clc
clc
sbb
movs
int
rol
setg
movs
adc
call
adc
cmc
dec
clc
out
dec
lods
call
das
loope
rcl
push
ins
and
fbld
test
add
sahf
lods
push
loopne
outs
push
jns
data16
sub
xchg
inc
js
fistp
int
sub
pop
js
loope
mov
sub
sub
ret
(bad)
daa
mov
sbb
jg
rcl
out
xchg
add
js
pop
cmp
jmp
(bad)
test
or
inc
mov
shl
stos
and
in
fnstenv
fs
mov
mov
popf
ror
outs
aaa
cwde
loopne
fstp
pop
inc
dec
(bad)
sub
mov
push
ret
jnp
xchg
cs
(bad)
xor
outs
cli
int
and
xchg
and
dec
jecxz
scas
es
cmps
adc
ja
inc
add
xor
inc
retf
push
(bad)
jns
jp
frstor
and
mov
mov
mov
xchg
in
mov
inc
iret
ja
mov
not
xlat
in
cmp
cmp
jnp
(bad)
sub
xchg
(bad)
(bad)
bound
sub
call
out
fisttp
imul
(bad)
das
(bad)
xor
mov
out
mov
inc
jle
div
(bad)
or
inc
scas
fistp
add
push
loopne
inc
push
pop
in
lods
mov
lods
out
xor
xor
push
iret
in
inc
(bad)
out
cs
lods
push
push
add
lock
out
not
test
fld
(bad)
cwde
xor
inc
lea
add
jbe
mov
push
and
clc
cmp
xchg
xchg
dec
leave
add
out
mov
aam
movs
inc
cld
out
stos
mov
test
mov
add
mov
add
jnp
adc
or
mov
jbe
push
ja
xchg
jecxz
jmp
rcl
imul
pop
lahf
mov
or
cmp
sbb
cli
cmp
(bad)
sbb
cmc
mov
mov
pop
shl
lods
push
mov
mov
cld
cmp
leave
xor
jecxz
inc
fdiv
pop
mov
pop
cwde
cwde
or
daa
or
scas
push
push
not
jl
and
rol
addr16
into
mov
mov
mov
jl
lahf
(bad)
mov
loopne
adc
idiv
out
cwde
mov
pop
sar
jmp
enter
mov
adc
mov
addr16
aad
cmp
jne
mov
out
sbb
add
fcmovne
jge
xor
sub
cmps
cdq
js
xchg
addr16
lods
lock
std
and
in
repz
jmp
jae
and
enter
cmp
dec
xor
mov
rol
push
in
jp
xchg
out
mov
outs
inc
(bad)
nop
les
je
jb
imul
out
inc
mov
retf
adc
leave
lahf
out
adc
lock
mov
or
out
movs
loope
cmps
dec
push
gs
fistp
jbe
pop
pop
fist
push
xchg
(bad)
xor
mov
lds
call
fcom
adc
mov
cdq
jl
dec
add
adc
scas
jae
cdq
aas
lods
or
mov
sbb
xchg
out
dec
dec
inc
adc
xchg
aas
or
xchg
sbb
inc
(bad)
ins
fwait
popf
loop
mov
inc
cdq
dec
pop
aam
xchg
sbb
fisubr
fs
addr16
les
shl
mov
dec
prefetchw
or
shl
mov
pop
sbb
fidivr
dec
clc
xor
call
(bad)
stc
repnz
rol
dec
fs
xchg
test
imul
jmp
in
nop
test
out
aaa
or
mov
shl
sbb
jmp
or
push
lea
sbb
mov
xchg
js
cmp
sbb
jbe
inc
push
mov
and
call
xchg
adc
push
fidiv
xor
mov
gs
adc
sar
rcl
pop
mov
mov
dec
pop
push
sub
stc
lods
ins
push
(bad)
in
test
std
je
data16
mov
pushf
arpl
cs
hlt
push
into
gs
sub
cs
sub
mov
(bad)
aam
pop
push
repz
mov
(bad)
fnstsw
ins
in
or
in
in
xchg
adc
xchg
inc
in
loopne
pushf
lods
(bad)
shr
je
mov
(bad)
dec
mov
test
fidiv
sbb
imul
mov
pop
(bad)
lock
xchg
mov
sub
mov
sub
sub
neg
xor
sti
imul
or
push
cmps
es
xor
dec
shl
and
add
jmp
mov
jp
dec
cs
cld
sbb
and
inc
shl
mov
inc
sub
xor
dec
sub
mov
popa
dec
fstp
mov
aaa
xchg
xchg
mov
push
test
mov
pop
jbe
popf
mov
mov
fs
inc
inc
add
push
mov
xor
stc
jge
mov
aaa
fadd
popa
jo
test
pop
mov
retf
push
clc
loope
lock
fdivrp
outs
out
jle
das
add
addr16
bound
ins
outs
cmps
push
adc
call
push
popa
or
sbb
popf
jp
call
add
inc
pop
adc
fisubr
push
cmc
adc
push
cmps
aad
xlat
pop
inc
add
loop
ret
cmp
test
inc
loop
int
push
push
addr16
mov
mov
push
dec
sahf
rcr
sub
cld
lahf
push
adc
pusha
push
pop
movs
xchg
inc
or
shr
into
in
xchg
gs
jbe
add
xchg
js
mov
cmc
jg
test
and
jne
sbb
pop
dec
shl
stc
test
sar
push
and
and
push
jge
add
imul
fwait
inc
nop
lahf
dec
fidiv
pushf
aas
inc
mov
and
or
xchg
enter
aam
out
pop
xor
pop
pop
push
stc
mov
bound
cmc
dec
pusha
mov
or
test
mov
sbb
fst
int
push
sbb
imul
rol
rol
sahf
cmp
xchg
pop
mov
xchg
push
in
out
sbb
mov
xchg
arpl
add
stc
ror
mov
mov
(bad)
retf
mov
mov
jbe
push
inc
add
and
mov
rep
add
pop
std
and
sub
(bad)
ds
sbb
rcl
xchg
jmp
rcl
cmps
jmp
gs
fs
add
jns
out
int
jne
dec
or
out
mov
test
fprem
retf
cmp
mov
add
iret
push
push
lahf
mov
push
(bad)
scas
add
imul
jge
icebp
lods
pushf
add
mov
pop
enter
out
mov
and
repz
ss
inc
add
inc
dec
cmps
mov
push
ficom
stos
cmp
xchg
push
cld
dec
fs
ret
(bad)
cmp
lock
sbb
jae
scas
in
fisub
(bad)
jb
push
jo
lea
ins
fdivr
ins
jecxz
jnp
ror
daa
call
sar
xlat
mov
popa
dec
pop
repnz
repz
push
inc
sahf
and
in
sbb
xchg
cmc
popf
sbb
mov
sub
or
aas
adc
stos
add
inc
bound
cmp
xchg
ds
bound
cmps
inc
push
mov
adc
ret
test
int
rcr
les
and
cmc
in
loopne
add
fcom
je
xchg
loop
inc
pop
fsubr
(bad)
pop
sub
int
sti
fisubr
sub
xor
mov
outs
sbb
mov
out
dec
push
cmp
cdq
jg
push
xor
loope
pop
pop
and
or
ds
jmp
and
adc
add
sahf
mov
gs
das
mov
cli
pusha
ret
fiadd
or
out
movs
sub
sahf
es
pop
push
mov
mov
sar
mov
jae
retf
xor
xchg
xor
outs
cmp
push
hlt
(bad)
xor
out
xchg
jmp
out
adc
nop
cli
xchg
adc
pop
ret
xor
jmp
stos
dec
mov
push
in
xchg
ins
xor
jmp
xchg
xchg
addr16
xlat
outs
xchg
xchg
test
xor
push
xor
pop
fincstp
fisub
and
rol
ret
movs
(bad)
outs
or
movs
jmp
mov
pop
pop
push
and
pop
cs
xchg
aas
xor
or
div
lahf
lds
push
and
cmp
les
or
cmp
or
into
call
push
or
enter
iret
inc
loope
pop
sbb
(bad)
xor
fsub
xor
pop
xchg
xor
fidiv
xor
and
and
inc
loopne
cmp
in
jmp
adc
or
gs
aaa
and
push
mov
pop
xor
mov
daa
movs
retf
mov
push
mov
mov
mov
add
stc
mov
xchg
pop
or
out
mov
mov
cmps
call
test
imul
jae
add
popa
stos
mov
(bad)
xor
jle
stos
ret
aad
ins
add
sbb
scas
test
push
pop
adc
(bad)
inc
lahf
xchg
add
jne
test
out
rcr
stos
mov
xchg
in
cld
xchg
dec
lds
inc
or
lock
pusha
test
inc
sbb
lahf
push
or
mov
jle
add
pusha
ja
xchg
inc
das
out
jge
push
outs
aaa
lea
jbe
sti
in
pop
pop
loop
cmp
inc
imul
mov
js
dec
and
cmp
or
int3
dec
outs
pop
bound
push
jne
mov
mov
retf
in
jl
mov
add
iret
sub
lods
das
jnp
aam
enter
sub
jns
enter
cmps
push
or
mov
loopne
stos
int3
jg
sub
sub
movs
movs
cdq
xchg
jmp
add
xchg
jecxz
test
xlat
jno
jmp
call
loop
xchg
push
pop
jle
icebp
jmp
addr16
xchg
push
push
sahf
cmp
cs
test
pop
mov
clc
or
stc
xchg
nop
push
les
js
sub
call
xor
jle
add
jno
loopne
mov
xor
push
mov
outs
sahf
xchg
sbb
inc
mov
adc
in
fimul
aaa
adc
call
cwde
xor
mov
fistp
mov
pop
fsubrp
ins
ins
mov
jno
inc
pop
es
push
or
adc
dec
pop
mov
xchg
or
ja
pop
enter
scas
dec
gs
mov
ins
mov
in
dec
lods
pop
push
cld
push
ficom
stos
mov
mov
add
or
xor
mov
rol
iret
cmp
inc
cmp
outs
(bad)
xlat
icebp
loop
mov
push
lods
and
mov
(bad)
jmp
ret
(bad)
retf
dec
jnp
or
mov
push
dec
or
cmp
jo
sub
arpl
jno
aam
mov
std
pop
movs
cmps
cmp
faddp
movs
fidivr
add
movs
sub
add
test
mov
(bad)
lea
retf
imul
jmp
xchg
iret
test
(bad)
sbb
rcr
inc
ret
ins
ins
xchg
ds
leave
adc
mov
stos
inc
or
sbb
sbb
pop
ins
mov
imul
(bad)
jmp
mov
adc
vmovaps
adc
in
(bad)
nop
gs
xchg
push
xor
sahf
inc
mov
or
aaa
fs
dec
mov
cmp
ds
push
add
aad
imul
or
fwait
out
xor
popa
mov
aaa
push
jns
add
xchg
xor
retf
sbb
mov
(bad)
aam
inc
push
cmp
(bad)
ja
jp
dec
pop
cmps
jne
pop
dec
mov
cmps
jecxz
mov
jle
jbe
popa
sti
cmp
push
shl
mov
mov
loopne
in
mov
ja
xor
jge
iret
jno
and
xchg
jp
add
xchg
xrelease
mov
fist
int
pop
jnp
cmp
ficomp
and
xor
jb
xchg
mov
jmp
and
xchg
mov
call
cli
sar
rcr
(bad)
adc
cmp
jae
cmps
dec
pop
push
xchg
sti
mov
lahf
or
mov
fsubr
jnp
repz
loop
push
int
xchg
adc
arpl
das
mov
repz
jne
test
cmp
mov
add
les
lds
in
stc
retf
push
jnp
cmp
je
(bad)
clc
mov
mov
imul
mov
push
adc
ja
popa
add
adc
or
not
push
call
retf
mov
inc
add
dec
aad
out
cmp
clc
mov
les
xchg
mov
mov
pop
icebp
xor
inc
or
(bad)
or
in
and
and
fisttp
fbstp
or
cld
rcr
bound
std
mov
sbb
jp
cmp
xchg
retf
dec
movs
scas
mov
and
mov
add
shr
ins
test
adc
mov
in
test
into
inc
in
xchg
mov
jb
xor
pop
sbb
jo
ret
movs
stos
cmp
repnz
pop
adc
and
pusha
xchg
and
retf
js
bound
mov
inc
and
pop
add
paddsw
jno
mov
icebp
sub
xchg
mov
idiv
mov
pop
pop
xchg
and
and
pop
std
fimul
pop
pop
popa
out
lods
lds
mov
ins
mov
popa
hlt
push
jl
fiadd
or
aad
repz
cli
aam
xchg
inc
xchg
cli
mov
(bad)
ret
cmp
jne
(bad)
hlt
addr16
adc
add
test
lea
add
cmps
xor
pop
jle
enter
adc
sbb
clc
scas
rcr
sahf
inc
and
and
sti
dec
pop
scas
std
(bad)
out
les
mov
cwde
xlat
xor
add
mov
xchg
rcl
xor
or
push
adc
cmp
xchg
(bad)
cmp
sbb
sbb
jle
inc
xor
clc
sbb
jle
add
in
fs
pop
sbb
push
loope
leave
xchg
jmp
aaa
fistp
dec
retf
mov
test
jl
cmp
mov
in
pop
cwde
imul
pop
outs
js
lods
xor
jo
push
pop
dec
dec
cmp
(bad)
aam
mov
sub
push
xchg
cli
loope
(bad)
mov
jmp
outs
mov
cmp
pop
das
mov
bound
stc
leave
mov
adc
push
sub
dec
add
cdq
xor
mov
mov
xchg
pop
ror
cmp
add
clc
out
test
xchg
xor
(bad)
call
xor
jno
in
jo
inc
lock
ret
xchg
dec
mov
imul
ret
cmp
push
cmp
test
out
sbb
iret
aaa
popa
test
es
cdq
aas
xor
mov
jae
pop
stos
popa
nop
pop
xchg
int
(bad)
call
cdq
arpl
jl
mov
aaa
xchg
xor
push
out
xor
(bad)
icebp
or
adc
add
psubsb
stos
loop
mov
push
and
lds
add
fs
addr16
icebp
cmps
into
or
cwde
add
lea
or
mov
mov
dec
into
cli
and
enter
aam
dec
push
lods
sbb
sub
xor
push
ins
adc
sbb
dec
dec
out
fnstsw
stos
xchg
sti
mov
out
sbb
fidivr
mov
or
sti
fidiv
adc
xor
mov
sbb
mov
push
outs
pop
cmp
xchg
xor
adc
sbb
add
adc
inc
and
add
add
pop
or
push
and
mov
in
sbb
push
add
xlat
sub
adc
cmc
in
adc
loope
inc
push
mov
out
neg
rcr
push
mov
mov
or
mov
ins
into
inc
xchg
sub
push
fisubr
sbb
jno
adc
mov
and
(bad)
and
push
add
sar
inc
xchg
cli
nop
test
inc
clc
iret
push
pop
cmp
ds
mov
loop
outs
sti
mov
mov
outs
pop
aam
mov
jg
dec
outs
fisttp
aas
fstp
add
mov
inc
jo
mov
pop
mov
mov
and
cdq
xor
jae
cmps
push
push
pop
(bad)
push
jbe
mov
pushf
shr
mov
mov
pop
lods
jne
iret
push
mov
out
mov
dec
or
mov
push
sbb
push
or
fwait
adc
ins
dec
lahf
bound
(bad)
xlat
sub
test
loopne
ja
dec
loop
adc
enter
adc
js
ss
or
(bad)
dec
mov
mov
outs
call
(bad)
sahf
cmp
pop
cmps
scas
pop
scas
sbb
mov
test
test
jb
mov
shr
fisub
xchg
cmps
ret
mov
out
sbb
add
sub
aam
cmp
fisubr
jg
dec
aad
cmc
jno
fwait
stos
popa
cmp
aaa
ficom
aaa
pop
mov
mov
test
mov
fisub
daa
xchg
dec
shl
push
xor
mov
sahf
test
cmp
xor
popf
xchg
cmp
imul
call
jecxz
aaa
outs
in
push
xchg
xchg
add
mov
xchg
push
jp
or
outs
gs
sbb
(bad)
nop
repnz
fwait
add
jnp
lods
push
and
cmp
lods
(bad)
jmp
or
mov
dec
out
je
mov
inc
add
jnp
and
(bad)
sub
inc
add
inc
mov
add
test
xlat
or
loope
xchg
(bad)
mov
cmp
xchg
into
and
add
xor
jo
and
jl
push
pop
pop
or
push
xor
push
mov
push
cs
fst
mov
jmp
shl
iret
mov
std
inc
fcmove
pop
cmp
out
int3
loopne
loopne
repz
mov
push
or
ds
jle
lods
scas
mov
cmp
sti
fwait
jl
xchg
cmps
aam
bnd
pop
ja
lds
pop
add
cwde
outs
jge
push
and
shl
mov
mov
xchg
sub
dec
mov
or
cmps
out
adc
push
nop
inc
bound
sub
mov
in
(bad)
into
popf
outs
pusha
cmp
outs
push
dec
mov
repnz
mov
adc
mov
enter
mov
pop
inc
cmp
aas
adc
xchg
sub
test
pushf
jp
pusha
aam
mov
repz
pushf
aad
int3
and
test
fucomi
sbb
jne
mov
repz
retf
mov
mov
fiadd
jl
inc
mov
(bad)
xor
push
sbb
inc
dec
popf
sti
xchg
jecxz
sbb
in
stos
push
loope
ss
mov
sti
mov
mov
add
retf
pop
push
int3
xchg
pop
cwde
cmp
mov
comiss
adc
pusha
retf
pop
push
push
jb
movs
inc
push
or
push
sbb
pushf
jecxz
lea
int3
mov
test
je
pop
int3
inc
mov
fist
jns
sub
sub
dec
jecxz
stos
das
inc
(bad)
jb
jp
jnp
pop
xchg
jge
mov
fsubp
test
repz
adc
push
out
dec
and
icebp
jo
out
pop
fwait
loop
mov
cmp
shr
dec
enter
dec
aam
aaa
int
sub
scas
bound
shr
sub
pop
inc
xchg
aas
rcr
xchg
jnp
enter
add
adc
fimul
mov
jle
jne
out
fbstp
outs
or
movs
dec
and
xor
push
jecxz
cs
outs
loop
add
leave
mov
or
daa
fadd
xchg
movs
jmp
out
fs
scas
xchg
fsubr
sti
sub
cmp
cli
inc
or
retf
das
mov
cmc
out
out
pop
push
lea
push
rcl
add
xchg
lods
test
ror
or
sbb
pop
mov
xor
xchg
mov
fidivr
in
xchg
cmp
sub
mov
hlt
mov
adc
out
push
or
sub
mov
and
add
xlat
jg
loope
jno
sbb
and
dec
push
(bad)
jg
add
pop
adc
dec
pop
jne
hlt
scas
pop
jb
mov
stos
in
mov
lahf
jmp
adc
inc
mov
test
jnp
ins
push
jo
fwait
add
inc
push
xor
enter
dec
mov
test
mov
pop
lahf
or
or
jge
cmp
int
jns
(bad)
dec
mov
mov
xchg
xchg
push
xchg
sub
sbb
mov
cmps
outs
pop
and
add
dec
cdq
mov
rol
push
sbb
retf
add
in
push
scas
mov
out
cmps
aas
or
push
mov
push
adc
test
mov
jle
push
imul
inc
push
push
cmp
sbb
les
lods
in
sub
inc
inc
int
jae
mov
addr16
push
out
iret
push
mov
xchg
je
dec
jp
mov
cmps
adc
int
sub
push
xor
mov
pop
pop
test
out
add
repnz
shl
lock
daa
cdq
enterw
les
push
cmp
xchg
data16
sbb
or
mov
popa
sbb
mov
les
cmp
cld
cmps
adc
mov
xor
push
aaa
jg
pop
loope
lods
dec
fbstp
mov
nop
loop
xor
stc
and
popf
movs
aam
pop
jl
jae
or
jno
sub
mov
push
mov
push
xor
dec
jae
(bad)
lds
ins
out
xchg
and
and
push
ds
push
cmp
in
call
xchg
in
retf
sub
cmp
das
popf
push
pop
loope
call
imul
stc
jl
cmc
out
cmps
shr
fild
scas
ins
dec
xor
call
xor
fidivr
mov
hlt
xchg
ret
sbb
mov
int
mov
dec
adc
sti
add
cdq
test
inc
aam
and
js
xchg
sbb
pop
mov
repnz
ficom
shl
aas
aaa
pushf
xchg
cmp
push
dec
mov
jg
div
in
ins
rcr
push
or
(bad)
pop
sbb
push
adc
add
inc
mov
imul
les
out
ins
sub
nop
push
(bad)
rol
push
xor
dec
sub
out
xchg
arpl
sub
sub
cmp
loop
xor
or
lock
push
cli
inc
aam
mov
xchg
add
xchg
in
push
or
cmp
inc
cdq
pop
inc
test
test
mov
retf
jne
jg
outs
pop
jbe
aas
cmp
(bad)
iret
gs
cmp
xor
loope
sahf
movs
mov
push
loop
lds
mov
pop
shl
(bad)
fisub
ret
aad
and
jo
es
mov
mov
jno
add
and
xchg
ret
ins
mov
push
xchg
dec
dec
adc
push
xchg
lahf
mov
fisttp
jg
or
inc
mov
pop
xor
jl
inc
cmp
fdivp
imul
fmul
hlt
sub
jmp
dec
jge
in
movs
or
dec
inc
nop
inc
push
jmp
mov
xchg
outs
mov
mov
mov
xor
das
or
and
mov
movs
adc
jmp
outs
dec
hlt
pop
pop
mov
inc
push
dec
call
cmp
add
push
xchg
mov
jmp
adc
clc
(bad)
jmp
jmp
sar
pop
in
dec
adc
or
jge
call
sbb
push
jbe
push
test
lds
jmp
into
push
inc
push
and
ins
push
mov
cmp
pop
mov
ss
fsubp
push
mov
lock
cdq
je
mov
cmp
push
sbb
rcr
aad
popa
mov
push
mov
push
fadd
fcomp
and
inc
mov
or
int
fs
out
sub
sub
mov
cld
and
or
dec
rcr
xchg
lahf
cmps
dec
cmps
xor
xchg
sbb
mov
inc
push
mov
les
loopne
enter
mov
call
inc
pop
jns
imul
lods
xchg
les
push
sbb
jp
sub
fiadd
out
sti
sbb
cmp
sbb
cwde
packsswb
xor
jnp
dec
sti
mov
or
(bad)
retf
inc
mov
ja
popa
enter
loop
int
jl
add
push
adc
cwde
jmp
cdq
rep
stos
loop
int3
adc
gs
push
rol
mov
dec
out
sbb
push
fdiv
push
add
ja
adc
cmp
test
pop
push
and
add
outs
cmps
mov
cdq
push
mov
ins
adc
mov
lahf
xchg
push
push
jmp
call
xchg
cmp
xor
add
enter
jg
push
enter
inc
mov
dec
adc
bound
push
int3
es
push
les
or
and
xor
retf
xchg
(bad)
xor
or
nop
xchg
(bad)
movs
jecxz
or
mov
dec
data16
or
mov
jmp
xchg
nop
repz
sbb
js
ds
adc
xor
ficomp
shr
mov
call
test
pop
sub
popa
mov
xor
lods
aas
mov
mov
cmp
push
loop
sub
sub
scas
pop
cmp
test
movs
test
outs
test
out
adc
add
dec
ret
int3
add
and
xchg
push
pcmpeqw
sbb
jp
sbb
outs
into
sub
out
jbe
add
shr
push
frstor
dec
int
lds
ret
jmp
pop
jno
sub
jmp
pop
stc
jnp
xchg
bound
gs
mov
or
push
lods
add
and
xchg
xchg
xchg
loope
cmp
mov
inc
xchg
and
mov
sub
sti
push
sub
adc
and
(bad)
lods
nop
jp
out
nop
mov
mov
cwde
sub
gs
fcom
sbb
adc
dec
repz
push
(bad)
icebp
rcl
push
rcr
inc
xchg
pusha
mov
loopne
xlat
dec
xchg
cmc
jns
in
mov
pop
fs
adc
jae
mov
fldcw
enter
in
aas
clc
cmc
add
push
leave
shr
or
jns
and
push
mul
lahf
fnstsw
popf
push
jns
(bad)
dec
sub
mov
push
ds
jb
aas
cmps
(bad)
repz
mov
das
imul
add
fdivp
xchg
repnz
daa
dec
jae
fwait
and
dec
pop
sub
and
stos
stos
jle
add
pop
pusha
rcr
(bad)
xor
jno
mov
push
jecxz
(bad)
and
xor
add
jbe
adc
jb
mov
ins
and
lahf
pop
adc
dec
aaa
xor
pop
xchg
jo
mov
dec
fld
add
sub
fadd
jp
cmp
lods
dec
cmp
(bad)
(bad)
repz
sub
test
add
dec
adc
xchg
xor
and
sub
fwait
jns
out
pop
inc
jg
pop
xor
mov
mov
rcl
clc
inc
sub
mov
mov
test
fimul
mov
jp
mov
mov
fcomp
push
ins
fs
and
push
dec
sub
xor
outs
mov
in
repnz
addr16
cmps
mov
xchg
lock
push
cmp
mov
xor
cmp
adc
ficom
(bad)
jg
test
mov
xchg
add
pop
in
inc
cmp
loop
scas
call
mov
mov
out
dec
enter
cmp
in
push
shl
push
leave
sub
or
out
test
mov
adc
and
ja
or
xor
or
add
idiv
(bad)
iret
jne
inc
push
mov
adc
mov
inc
addr16
adc
loop
fiadd
add
out
xchg
into
les
mul
lods
shl
pop
push
cmps
push
adc
push
pop
loope
xchg
stos
cwde
pop
imul
jmp
push
sub
imul
adc
data16
xchg
and
or
imul
sub
ficomp
pop
xor
pop
lea
xchg
jmp
xor
ins
int3
leave
mov
inc
movs
rol
ss
cld
rcr
test
cmps
xor
imul
shl
mov
mov
or
js
dec
sbb
inc
push
inc
jmp
popa
mov
or
adc
cmps
jnp
sar
sar
push
sbb
shl
inc
pop
imul
jb
sbb
xor
pop
add
push
pushf
sub
popa
inc
lock
and
mov
mov
pop
jne
mov
rcr
mov
cmps
and
push
enter
mov
ret
sbb
xor
jns
sar
imul
xchg
mov
adc
pop
add
mov
sbb
jge
sbb
jle
jo
cmc
sbb
stos
fstp
mov
pop
dec
cli
add
aaa
mov
addr16
jmp
dec
leave
sahf
jg
pushf
xchg
inc
adc
imul
jg
cld
inc
add
cld
cmc
cdq
xchg
dec
xchg
and
lea
jo
mov
add
pop
push
lods
sbb
lods
arpl
jle
inc
hlt
aam
ds
(bad)
fistp
mov
movs
mov
push
mov
(bad)
fdiv
minps
sub
xchg
inc
mov
dec
mov
cli
xor
popa
adc
mov
pop
call
mov
outs
(bad)
cmps
iret
or
inc
jmp
sub
fdivp
push
and
mov
loopne
in
pushf
fild
lods
jl
add
loope
xchg
xchg
stos
sbb
add
pop
mov
lds
push
sub
fiadd
fs
movs
add
cmp
jg
pop
mov
inc
and
addr16
fwait
test
pop
rcl
imul
xlat
jle
sub
das
repnz
cld
push
inc
push
pop
test
add
(bad)
cmp
jle
fild
pop
mov
mov
xchg
iret
rcl
and
aaa
mov
je
fdiv
and
mov
mov
daa
push
and
jle
pop
add
inc
rcl
mov
fsub
mov
push
mul
xor
sbb
dec
adc
test
mov
mov
fdivp
nop
jae
jb
ret
retf
lds
ror
scas
or
retf
xchg
cmp
into
fsubrp
xor
ins
retf
aaa
fwait
sbb
jns
dec
ins
in
lahf
popf
jg
mov
add
dec
adc
fldenv
clc
jno
pusha
jmp
cwde
shl
add
and
popa
aam
and
jb
clc
shl
ror
pop
cmps
jnp
cdq
pop
sbb
shl
into
std
mov
lock
mov
inc
inc
fwait
jl
mov
hlt
or
pop
push
fistp
imul
inc
and
ins
pop
clc
pop
ret
mov
sbb
jmp
ja
fwait
test
popf
or
ins
add
or
dec
outs
fidiv
pop
les
dec
pushf
into
movs
out
sub
ret
jle
jbe
mov
leave
xchg
jp
(bad)
arpl
cwde
cmp
dec
aam
and
arpl
sbb
inc
push
imul
mov
inc
mov
jmp
and
(bad)
ins
rcl
das
or
or
jne
mov
inc
rcl
adc
add
pop
stos
(bad)
sub
xor
inc
push
clc
add
push
scas
ja
inc
loop
pop
ret
test
sbb
dec
js
push
dec
cld
sub
aad
mov
push
push
fcmovnb
pop
xlat
cdq
sub
fnstcw
lahf
xor
je
test
pop
test
add
enter
push
mov
xchg
add
adc
dec
call
cdq
repnz
and
pop
xor
movs
cmp
xchg
fist
mov
fdivrp
pop
or
sub
pop
out
retf
fnsave
rcr
mov
pop
push
stos
jbe
cmp
xor
adc
pop
loopne
repnz
repz
jmp
xchg
dec
or
shr
jnp
test
retf
test
aad
mov
or
xchg
fiadd
cdq
shr
stc
or
loop
out
repz
and
sbb
arpl
outs
sub
mov
call
loop
mov
cmps
aam
out
scas
outs
pop
shl
aas
inc
test
and
dec
sbb
pop
shl
cli
push
in
jnp
push
out
mov
mov
jbe
cmp
inc
add
pop
sbb
(bad)
sbb
pop
aam
pop
scas
shr
push
scas
in
xor
xor
das
mov
xchg
arpl
test
cmp
jne
mov
or
cmp
cmps
js
mov
ret
jmp
xchg
inc
adc
pop
push
adc
sub
iret
xor
in
paddusw
and
dec
mov
jae
inc
adc
test
dec
cli
add
push
pop
je
jo
mov
jnp
test
std
xchg
and
xchg
(bad)
(bad)
xchg
fisub
cmp
or
xor
cmp
lahf
shld
sbb
mov
add
imul
dec
xlat
cmp
aam
(bad)
pushf
mov
int3
into
std
sar
(bad)
sub
cld
sub
ficomp
dec
scas
retw
cdq
fs
adc
xchg
lock
dec
loopne
test
jp
pop
(bad)
sub
std
ror
mov
outs
lahf
jb
dec
lahf
retf
jne
stc
cmp
fisubr
jnp
jns
fmulp
push
ret
mov
and
mov
sbb
dec
inc
jmp
mul
jb
mov
xlat
ficomp
sub
push
daa
mov
mov
(bad)
sbb
js
mov
sub
push
mov
movs
dec
cmps
lds
pop
jp
out
scas
jge
in
and
sahf
mov
aaa
sbb
dec
fimul
mov
into
push
push
mov
inc
ror
jo
out
or
cs
scas
push
sbb
xchg
jl
sar
ret
out
push
cwde
mov
push
cmp
mov
clc
enter
adc
adc
xchg
pop
xchg
sub
ja
sahf
xchg
mov
test
mov
jecxz
iret
jp
jns
and
xchg
fistp
ficom
jg
sbb
add
jne
addr16
inc
icebp
int3
arpl
inc
dec
inc
sub
lods
xor
repz
mov
mov
pushf
push
adc
stos
pop
mov
pop
mov
test
in
sbb
dec
shr
adc
jne
and
mov
mov
std
imul
hlt
and
movs
mov
or
scas
mov
push
cwde
loop
ins
jno
rcr
mov
xor
cld
add
adc
movs
pop
lea
dec
dec
arpl
mov
sti
call
ds
push
push
push
(bad)
sub
mov
sbb
or
push
loope
mov
arpl
adc
mov
rcl
and
fmul
cmp
outs
pop
das
mov
add
adc
push
sub
clc
aaa
ficomp
fs
cld
sbb
adc
xlat
push
sbb
cmps
mov
and
mov
adc
lahf
push
cmp
cmp
sub
mov
xor
mov
fmul
jge
adc
cmp
jl
xchg
dec
lock
call
mov
add
popa
inc
outs
mov
xchg
jnp
stos
daa
cmps
mov
pop
iret
push
xchg
loopne
cmp
daa
test
shl
mov
sub
push
mov
int
and
rcl
or
pusha
ins
xor
stos
pop
pusha
jne
popa
ins
jno
mov
mov
push
mov
mov
push
std
mov
cmps
push
lods
mov
sub
stos
adc
rcl
addr16
(bad)
cmp
in
pop
sbb
scas
adc
movs
lods
push
stos
std
mov
movs
adc
hlt
mov
daa
sbb
lahf
scas
fwait
pusha
cld
mov
xchg
dec
inc
test
and
imul
xor
mov
xchg
xchg
aas
inc
xchg
or
aam
clc
sbb
mov
xchg
js
mov
out
xchg
enter
adc
xchg
mov
jnp
enter
mov
outs
xchg
push
xchg
aam
stos
mov
js
mov
xor
jl
jmp
mov
mov
dec
sub
gs
or
ja
test
ins
call
sub
shr
retf
movs
mov
add
jmp
bound
mov
icebp
outs
pushf
je
and
clc
cmps
inc
mov
fimul
test
cmp
push
cmp
sbb
mov
mov
test
sub
pop
push
sub
xor
fcom
add
cmp
sub
sub
jle
je
in
test
pop
inc
push
stos
fbld
movs
and
and
sub
in
mov
cmp
dec
lods
and
cmp
ins
add
push
(bad)
aas
stos
xor
mov
mov
aaa
inc
xor
xor
leave
imul
enter
inc
mov
repz
push
pop
cmp
ret
outs
lods
imul
jecxz
stos
cmp
(bad)
add
je
and
or
rcl
lahf
imul
rcr
movs
pop
mov
clc
mov
inc
dec
jg
(bad)
lahf
jg
fld
(bad)
sbb
jmp
inc
mov
inc
ds
iret
in
inc
cmps
scas
imul
jmp
adc
xor
lds
xchg
push
add
sub
push
punpckhdq
test
stc
pushf
ins
outs
cwde
jb
mov
mov
jmp
xchg
outs
xor
sub
or
or
jle
add
imul
cmp
imul
adc
jmp
inc
cmp
push
mov
in
out
cmps
dec
pop
imul
sbb
adc
push
add
shr
(bad)
cmp
xchg
out
or
xchg
pop
or
aaa
jne
or
mov
add
push
sub
adc
out
adc
xor
sahf
xor
fwait
clc
int
sub
cs
addr16
sbb
push
mov
fcomi
ja
test
cmp
inc
cmp
test
fbstp
fadd
inc
(bad)
std
sahf
les
cmp
jg
inc
and
(bad)
call
push
add
sahf
push
sbb
sbb
xchg
fnstcw
enter
in
and
test
(bad)
cmp
inc
bound
cmp
inc
(bad)
sub
mov
push
xor
adc
mov
mov
dec
into
jp
xchg
ja
mov
(bad)
jge
pop
pop
pop
sub
and
mov
jo
xchg
call
lock
stos
(bad)
fdecstp
xchg
sub
push
fdiv
jb
dec
sbb
lea
jge
dec
and
mov
mov
sub
mov
push
add
aam
popf
or
mul
sahf
mov
jp
mov
ss
ror
stc
fdivr
pop
nop
add
sbb
push
dec
cdq
jle
or
pop
sbb
ror
es
ret
ins
cld
test
ja
push
xor
jb
shr
mov
ret
retf
ret
loop
push
ins
stos
enter
xchg
mov
fmulp
test
mov
imul
scas
cmp
das
shl
movs
cli
mov
cmp
pop
movs
push
adc
test
sub
loopne
jo
and
mov
out
rdtsc
lock
sub
shr
sbb
(bad)
(bad)
mov
adc
lock
(bad)
stos
mov
js
pop
mov
cmp
pop
loope
(bad)
ja
jg
inc
into
pop
push
scas
stc
retf
retf
leave
cdq
and
xor
dec
jp
mov
push
xchg
jnp
test
mov
dec
bound
ja
ins
jg
mov
mov
dec
push
lods
push
je
(bad)
xor
cmps
loop
aad
mov
ficom
outs
mov
(bad)
mov
jge
fldcw
in
sbb
push
push
xor
test
cmc
hlt
fistp
jb
or
jnp
push
mov
retf
outs
sbb
shufps
dec
ins
cli
(bad)
push
test
mov
mov
xor
cmp
into
cmp
dec
test
fnstcw
mov
mov
(bad)
push
ficomp
inc
adc
jb
cld
gs
mov
cmp
mov
into
mov
pop
push
mov
mov
pusha
imul
pop
movs
aad
cmps
xchg
sbb
mov
call
(bad)
cld
addr16
inc
dec
(bad)
and
ins
cld
cmp
or
mov
clc
mov
add
out
adc
xor
pop
sbb
ret
pop
ja
xor
xchg
pusha
mov
out
fnstenv
loope
sub
cmps
jle
pushf
jae
out
dec
outs
push
push
add
xor
fnsave
movs
push
int
jmp
mov
xchg
pop
imul
mov
ins
mov
jmp
push
or
add
(bad)
mov
sbb
or
nop
int
(bad)
arpl
xchg
xchg
nop
loope
stos
mov
repnz
jo
retf
jmp
jle
and
das
and
(bad)
pop
push
in
jne
fsubr
push
aam
and
imul
adc
cmps
dec
xchg
data16
dec
jns
adc
div
fisub
xor
jmp
inc
mov
into
or
pop
in
enter
cmp
movs
pop
aas
inc
neg
(bad)
pop
test
je
mov
add
aaa
(bad)
pop
test
jne
pop
dec
nop
sbb
movs
sbb
sbb
jle
pop
cmc
and
pushf
cs
mov
push
sar
xlat
xor
(bad)
xor
push
les
xchg
cmp
bswap
or
xchg
daa
pop
sahf
dec
aam
xchg
nop
stos
cmp
loop
push
and
sub
sti
ret
xor
pop
arpl
push
jae
dec
pop
out
test
jb
pop
aas
repz
(bad)
stc
xor
out
pop
aas
mov
xchg
or
xchg
fucom
push
frstor
cs
sbb
ins
mov
dec
jmp
outs
(bad)
retf
add
addr16
push
(bad)
ins
cdq
mov
jmp
pop
jg
ja
lds
pop
sbb
xor
psrlq
ror
ds
call
in
retf
movs
daa
ss
aam
mov
push
mov
enter
fcomp
out
popf
rcr
in
cmp
and
mov
sub
(bad)
fcomip
xor
sahf
dec
mov
mov
rcr
and
cmp
cld
fsub
fiadd
mov
fcom
imul
mov
daa
out
aad
test
sti
popf
mov
(bad)
int3
dec
daa
jg
ficomp
popf
and
jg
adc
and
push
mov
daa
dec
imul
stos
jno
or
test
fidivr
addr16
hlt
add
in
push
out
out
movs
sub
push
mov
mov
cwde
sbb
adc
jo
or
bound
inc
arpl
add
in
icebp
cli
xor
pop
xor
aam
cmps
or
call
mov
push
or
das
sub
retf
jge
mov
test
cmp
jne
es
push
movs
aad
pop
fs
xor
push
push
les
pop
push
push
fst
lahf
fcomp
jno
pop
test
rol
sahf
push
call
inc
inc
and
lds
or
nop
shr
(bad)
das
and
mov
and
cwde
cs
popf
cmp
cmc
mov
std
popf
and
cmp
add
sub
xchg
dec
xchg
and
mov
jle
in
bound
outs
scas
xor
sub
or
pop
lods
pop
retf
cmps
inc
push
rol
ret
xchg
jmp
xchg
test
mov
mov
inc
or
ror
aad
xchg
and
mov
mov
cmps
xchg
mov
fwait
push
xchg
outs
xor
lahf
icebp
sbb
or
in
xor
ja
aas
push
adc
push
xor
inc
outs
xor
xchg
cmps
mov
jl
or
fbstp
fadd
retf
xchg
mov
pop
mov
mov
xchg
pop
fsubr
or
leave
outs
xchg
and
cwde
int3
cmp
mov
cmp
dec
inc
cs
push
mov
cmps
sbb
neg
add
sub
xchg
jge
(bad)
rol
mov
arpl
lds
outs
or
xor
sahf
lahf
pop
dec
sub
out
sbb
out
jmp
lahf
jbe
enter
clc
aas
and
inc
adc
pop
(bad)
xor
cmp
aas
test
in
sbb
ja
les
xchg
mov
or
(bad)
outs
test
mov
xor
mov
xchg
outs
retf
(bad)
shl
fcomp
leave
mov
in
xchg
gs
jl
adc
jbe
adc
jbe
call
call
cs
sub
add
loopne
lods
(bad)
stos
aam
ror
mov
add
das
fisubr
retf
or
xchg
lods
pop
mov
out
dec
pop
test
jl
not
cmp
jns
mov
dec
xchg
lods
icebp
arpl
or
inc
xchg
(bad)
je
lahf
out
inc
and
out
scas
scas
push
jle
leave
(bad)
and
arpl
push
jb
das
pandn
mov
enter
push
mov
jmp
rcl
pop
cmp
fild
push
sbb
ins
sub
mov
movs
(bad)
call
xlat
fistp
and
or
rcl
fst
(bad)
cmp
sbb
or
(bad)
outs
test
or
xchg
ja
xor
inc
(bad)
std
(bad)
stos
seto
fucom
repz
stos
mov
or
pop
add
add
sbb
add
adc
ret
sbb
ja
inc
cmc
mov
movs
cmp
push
jmp
xor
test
mov
xlat
or
mov
and
cld
sbb
xor
loope
fmul
push
aas
cdq
loopne
pop
pop
mov
pop
push
or
shr
cmp
retf
mov
dec
and
fist
in
inc
xchg
fiadd
inc
aaa
out
popa
xor
imul
ror
or
xor
add
rcl
(bad)
fistp
dec
adc
outs
pmulhuw
add
mov
xchg
mov
fild
(bad)
retf
ja
and
jp
mul
(bad)
push
mov
mov
cs
push
or
xchg
sbb
pop
and
and
push
xchg
mov
icebp
jae
nop
pop
scas
push
adc
imul
call
out
add
cwde
in
jo
jge
adc
loope
enter
pop
or
or
jbe
pushf
xor
cvtpi2ps
push
dec
rcl
mov
adc
and
xor
inc
cdq
adc
fisttp
and
inc
mov
mov
movs
sub
icebp
mov
pop
mov
or
xchg
hlt
sbb
fadd
inc
rcr
push
dec
sbb
xor
and
mov
lock
jmp
inc
sub
imul
movs
mov
add
stc
cmp
mov
inc
es
enter
add
pushf
cmp
sbb
inc
(bad)
and
icebp
jecxz
aam
xor
xchg
iret
mov
ja
push
xchg
ins
dec
xor
cmp
(bad)
stc
cwde
and
add
jns
pop
call
mov
loopne
arpl
cli
jmp
sub
or
sub
cs
mov
xor
fs
jnp
lds
stos
mov
jbe
add
scas
fistp
jnp
dec
or
adc
seta
mov
(bad)
and
mov
pusha
jecxz
dec
aaa
mov
mov
xchg
jg
or
test
cmp
dec
push
inc
mov
mov
mov
stos
nop
idiv
inc
pop
lea
neg
leave
call
xlat
retf
sbb
mov
pop
call
inc
shr
mov
aas
push
adc
mov
add
xchg
sbb
stos
cmp
push
xchg
test
ror
dec
cdq
mov
fild
(bad)
ss
popa
add
in
jb
pop
pop
sbb
cmp
push
push
cmp
xor
shl
stos
push
in
(bad)
sbb
add
aad
test
mov
loope
xor
xlat
scas
cmp
push
xchg
ret
xchg
mov
add
sbb
test
adc
push
or
test
add
mov
dec
xor
cmp
sub
jbe
cli
mov
int3
into
mov
or
cdq
mov
cdq
ins
out
jnp
mov
dec
outs
out
pop
sbb
inc
and
mov
test
mov
movntq
push
sbb
mov
dec
sub
ds
mov
push
clc
and
loope
pop
mov
sbb
dec
sbb
sub
dec
fcmovb
out
and
fldcw
jg
cmp
or
mov
mov
cld
out
xchg
push
lock
aad
cwde
jnp
pop
dec
mov
sub
stos
and
hlt
lods
test
ins
(bad)
mov
(bad)
mov
mov
in
adc
daa
jmp
xchg
stos
fdivr
jne
test
mov
jo
push
shl
(bad)
and
mov
cmp
xchg
fmul
scas
jnp
add
(bad)
mov
daa
and
retf
imul
cmp
dec
outs
mov
push
test
and
out
mov
sahf
push
xor
gs
inc
push
je
test
test
push
jmp
inc
mov
pop
adc
call
aam
cmp
jbe
outs
mov
sbb
xor
push
repz
outs
imul
cs
push
jge
mov
je
cdq
and
mov
inc
(bad)
loopne
les
dec
stos
pop
ins
xchg
pop
mov
push
fisubr
or
ins
or
in
sbb
push
sub
repnz
data16
jg
fsubr
dec
xchg
xchg
lahf
dec
and
push
stos
pushf
dec
mov
(bad)
out
push
dec
inc
jle
sub
lods
and
adc
fild
xchg
push
sti
pop
out
cdq
add
sahf
push
ja
jo
fild
mov
(bad)
(bad)
or
sbb
inc
add
push
jl
in
std
daa
jo
cwde
cmps
data16
mov
in
movs
pop
mov
xor
push
js
mov
dec
ins
xor
mov
stc
jno
or
and
mov
sub
xor
dec
fdiv
mov
jnp
jecxz
pop
call
fisttp
mov
lds
loope
add
nop
xchg
loope
cmps
xchg
call
xchg
jmp
add
lds
add
dec
pop
movd
cmp
pop
arpl
mov
sub
loop
push
xor
dec
pop
or
jle
movs
jb
cmp
mov
mov
out
scas
imul
stos
ins
stos
int3
jp
call
lods
mov
call
cwde
cld
jbe
adc
add
fcmovb
mov
arpl
pop
mov
(bad)
enter
in
cld
ss
adc
push
out
ror
and
test
fwait
(bad)
frstor
jecxz
js
ins
or
lods
sbb
(bad)
arpl
fs
cmp
mov
pxor
pop
adc
js
sahf
fld
lods
jmp
or
mov
xchg
mov
push
adc
mov
pusha
cdq
xor
(bad)
and
test
inc
jnp
loopne
and
jb
cmps
(bad)
ficom
ins
inc
cmps
(bad)
adc
in
dec
clc
int3
enter
dec
data16
mov
popa
cli
retf
stos
sbb
add
jl
jl
std
pop
shr
jle
stos
cmp
adc
cmp
int3
pop
jp
pop
pushf
push
pop
aas
adc
inc
mov
aad
ds
push
fwait
sar
out
in
pusha
cmc
(bad)
aas
pop
cmc
mov
pusha
clc
enter
jae
mov
and
scas
jge
sub
mov
aas
pop
jp
jo
fild
push
sub
push
iret
shl
cmp
xchg
scas
mov
mov
clc
leave
(bad)
jnp
mov
cmp
int
adc
(bad)
rcl
push
xchg
jae
inc
or
stc
(bad)
and
dec
jge
shl
hlt
pushf
xchg
fbstp
sbb
sub
out
mov
mov
test
lock
dec
les
pop
sub
mov
pop
mov
call
jno
cmp
movs
adc
ror
push
mov
inc
mov
and
cmps
aad
add
sbb
adc
and
test
in
outs
dec
xchg
or
cmps
mov
jg
sub
je
or
jne
jmp
repnz
shl
jmp
test
loope
and
gs
dec
jle
cmps
cli
ja
adc
mov
stos
sub
nop
es
test
ficomp
jnp
cpuid
push
mov
inc
fistp
stos
cmp
sbb
or
dec
ds
pop
stos
nop
fisub
or
adc
inc
lock
push
or
rol
rcr
enter
lods
adc
pop
ds
adc
pop
pop
jae
movs
retf
icebp
and
or
push
ret
in
scas
mov
push
push
jns
push
pop
cli
mov
jae
xchg
push
pop
push
fld
ins
fstp
sbb
jmp
fcmovbe
test
xchg
add
jp
or
and
sub
xor
out
shl
loop
xchg
scas
es
mov
add
bound
inc
cmp
xor
or
icebp
mov
push
push
add
aas
push
mov
add
cli
push
mov
xor
cmc
or
jge
enter
adc
(bad)
jge
(bad)
pop
das
leave
push
stc
fld
mov
mov
sub
jae
cmp
stc
loope
ret
sbb
xchg
fadd
in
and
rcr
sub
mov
test
(bad)
jl
fdiv
cmp
sub
outs
int3
pop
and
push
test
inc
xchg
push
mov
xchg
mov
loop
retf
mov
iret
mov
test
iret
in
pop
sub
mov
and
dec
add
cli
fmul
outs
out
mov
sbb
and
push
jecxz
xor
and
int
cli
or
test
into
fisub
imul
cmp
jb
inc
shl
lods
pop
add
sar
sub
mov
ja
mov
add
ret
sub
mov
or
scas
pushf
mov
das
sbb
(bad)
mov
mov
lods
(bad)
leave
les
adc
sub
mov
aad
and
pop
jl
test
add
mov
sahf
jge
rcl
jl
loopne
movs
fdiv
pop
(bad)
xor
cmc
test
inc
jb
std
cmp
scas
mov
xlat
or
inc
mov
clc
ss
ds
jg
pop
xchg
and
out
add
mov
xchg
adc
scas
xor
test
test
or
xor
retf
fisttp
loop
stos
cmp
jns
lock
adc
in
adc
fisub
popa
lds
push
push
fistp
jnp
popf
inc
inc
pop
push
sbb
nop
repnz
cld
push
mov
outs
dec
stc
jp
lods
mov
imul
mov
ja
int3
xlat
sahf
lea
mov
jns
in
adc
in
out
repz
mov
test
sbb
jmp
mov
dec
pop
out
aas
xor
cld
xor
xchg
rcl
fucomp
lock
and
cdq
pop
and
mov
mov
rcr
mov
or
(bad)
adc
(bad)
cmps
fmul
daa
scas
add
inc
retf
mov
mov
imul
inc
jle
inc
push
pop
int
and
pop
mov
add
leave
hlt
xchg
aad
stos
aad
sub
dec
aaa
fcomi
mov
xor
sub
mov
cmp
stc
(bad)
popf
cmp
(bad)
pop
mov
loopne
(bad)
mov
mov
ins
aaa
std
aaa
loopne
pop
gs
dec
scas
mov
or
sar
stc
sbb
sbb
jmp
mov
mov
mov
mov
cdq
aad
enter
mov
pop
or
inc
inc
cmps
nop
fidiv
sub
push
mov
push
les
sbb
rol
pusha
lahf
or
dec
(bad)
ins
inc
push
mov
cmps
jge
mov
shl
call
popa
mov
repnz
in
dec
inc
mov
add
ret
out
mov
push
cdq
adc
jle
dec
jmp
mov
pop
test
push
idiv
call
(bad)
dec
push
or
or
js
adc
in
rcl
retf
test
retf
mov
sub
and
imul
fldenv
frstor
jp
pop
cmc
xor
cmp
sbb
xchg
sbb
dec
sbb
or
sbb
push
jns
fnstsw
daa
jl
ja
leave
mov
push
xlat
imul
push
std
dec
mov
cmp
mov
jle
ja
out
adc
sub
outs
aas
pop
add
or
loopne
cmp
jl
cmp
push
mov
cmp
mov
adc
fbld
sbb
sub
sbb
repz
xchg
or
sub
gs
pushf
ins
mov
mov
jne
jo
scas
mov
xchg
add
sbb
mov
out
dec
aad
sub
mov
jne
je
pop
cld
push
aam
or
or
xchg
(bad)
repz
sub
hlt
sub
data16
pushf
jecxz
cdq
mov
lahf
in
lahf
push
clc
mov
mov
stos
push
loop
test
retf
out
xor
out
rcr
push
ins
test
xchg
sub
mov
bound
inc
mov
rcr
jge
cdq
push
leave
outs
ret
pop
push
jb
rol
outs
and
(bad)
pavgw
rcl
jae
cmp
adc
push
lahf
mov
cmps
popa
adc
jecxz
mov
test
xor
xor
push
inc
jo
pushf
cmps
cld
in
jl
jmp
push
pop
pop
pop
adc
pop
or
dec
int
sub
adc
pushf
loop
dec
dec
push
pop
mov
sbb
js
mov
sub
and
(bad)
push
je
ret
les
inc
xchg
shr
add
and
movs
leave
pop
shl
fnstsw
cmp
xchg
xor
into
fcmovb
mov
add
xlat
out
ss
cmps
pushf
or
push
sbb
mov
mov
iret
adc
sar
mov
xor
push
enter
adc
cmps
inc
jnp
dec
movs
xchg
adc
mov
or
clc
mov
and
cmp
retf
call
sub
lahf
call
pusha
push
push
sub
call
push
hlt
retf
sub
dec
jg
ret
add
leave
push
cmps
aaa
mov
inc
jb
repz
mov
call
jp
push
out
mov
loope
pop
xchg
jmp
ret
(bad)
cmps
movs
push
outs
cli
dec
pop
add
or
jns
fld
arpl
push
pop
enter
and
xor
leave
and
fwait
dec
enter
dec
cwde
add
mov
jno
mov
cmp
inc
clc
push
movs
inc
rol
inc
pop
mov
sub
mov
and
aam
push
cmc
(bad)
mov
int3
mov
je
das
ja
stos
imul
out
dec
shl
fdiv
cmp
iret
sub
mov
jmp
mov
(bad)
popf
xchg
and
xlat
stos
add
inc
arpl
sbb
movs
add
or
add
fs
pop
retf
in
mov
inc
mov
loopne
je
retf
les
push
and
loopne
push
mov
sub
pop
test
mov
mov
add
idiv
call
push
retf
and
std
and
pop
cmp
xchg
add
lea
test
mov
stos
ftst
xadd
dec
mov
pushf
cmp
iret
jno
(bad)
jmp
adc
cs
mov
mov
jne
jno
(bad)
sbb
adc
ds
repnz
jmp
xchg
push
mov
cmp
vmread
mov
hlt
(bad)
and
(bad)
pop
pop
cmp
mov
cdq
jmp
mov
iret
ins
stc
leave
dec
mov
cmc
setne
sar
push
outs
push
hlt
adc
int3
ds
adc
and
mov
jns
test
pusha
in
adc
sub
movs
sbb
jbe
test
lea
icebp
addr16
xchg
(bad)
jbe
add
xchg
mov
mov
and
loop
mov
ds
xchg
scas
xchg
push
xor
xchg
sbb
fsub
in
adc
sub
push
jecxz
daa
hlt
or
mov
nop
inc
cmp
mov
rol
pushf
pop
sub
sahf
into
lahf
jmp
mov
adc
inc
in
add
inc
(bad)
int3
inc
ja
dec
mov
aas
sub
outs
sub
mov
dec
jmp
lds
mov
fmul
cwde
stos
mov
mov
clc
push
sbb
cmp
hlt
push
out
inc
dec
(bad)
loopne
xlat
or
lods
sbb
inc
(bad)
movs
(bad)
out
leave
pop
jge
ret
loope
lods
mov
out
pushf
loop
lods
add
clc
stos
xor
sbb
xlat
ret
iret
mov
(bad)
test
js
xor
pop
enter
shl
and
movs
in
cmc
inc
iret
test
pushf
scas
mov
cpuid
inc
xor
sub
cmps
push
outs
cmp
sbb
dec
adc
or
cli
mov
ins
add
fisttp
call
jo
mov
lods
sub
cmc
repz
outs
(bad)
jmp
pop
lods
mov
pop
jae
sub
enter
jmp
mov
adc
cmp
out
pop
and
jecxz
sbb
or
ss
inc
xchg
sub
(bad)
or
push
idiv
adc
lods
jmp
out
jb
cmp
mov
and
into
jno
inc
out
clc
jg
jb
xchg
lahf
inc
retf
fmul
loop
test
retf
lods
popf
pop
arpl
sub
xlat
call
sbb
push
dec
xor
cmp
mov
jmp
and
adc
rol
cli
loope
pop
xchg
lea
les
xor
xlat
stos
je
test
(bad)
mov
pop
cmps
sub
and
adc
fcmovne
je
test
jmp
mov
(bad)
and
les
or
call
lds
mov
(bad)
movs
sub
gs
adc
cs
(bad)
sub
adc
push
jns
dec
pop
imul
inc
jp
inc
inc
std
test
mov
fimul
jns
jne
adc
lock
cmp
sbb
xor
out
sbb
rcl
jbe
xchg
mov
cmp
or
jmp
jae
xor
mov
xchg
dec
out
jmp
mov
mov
pusha
mov
cld
call
mov
pop
out
call
lahf
pop
sahf
xchg
adc
out
pop
jg
mov
cmps
cmp
pop
stc
imul
jmp
out
sti
add
sar
jecxz
push
into
xchg
xor
push
xchg
mov
mov
or
mov
jmp
enter
lods
ss
loope
shl
loop
aad
dec
mov
lgs
aas
fcom
les
xlat
imul
xchg
xchg
mov
idiv
dec
adc
lahf
jo
adc
mov
and
cwde
jg
fisubr
mov
cmp
push
pop
pop
sbb
mov
imul
jp
icebp
adc
retf
adc
adc
add
xchg
pop
add
clc
inc
in
push
mov
out
xchg
pop
jecxz
inc
cmp
scas
lds
rcl
adc
mov
out
sub
jo
pop
push
jns
mov
lahf
shr
xchg
js
stc
pop
pushf
push
add
xlat
scas
mov
aaa
dec
inc
cmp
gs
add
push
mov
dec
xchg
mov
pop
sbb
sbb
cli
or
add
ror
stc
inc
cmp
cmp
inc
repz
lahf
mov
jbe
popf
push
gs
scas
ja
ja
add
popa
cs
xor
xchg
retf
jo
loope
cdq
mov
mov
in
cmps
xor
pop
xor
pop
fs
jnp
les
inc
std
ja
scas
jbe
mov
push
jns
push
out
adc
(bad)
and
xor
sbb
add
out
xchg
sub
ins
outs
shl
sub
mov
pop
fiadd
std
xor
fwait
ret
mov
jge
cmp
mov
jecxz
bound
movs
out
cmp
enter
push
push
add
sbb
inc
xchg
sbb
push
js
add
mov
int3
int3
jge
pop
pusha
inc
jle
retf
and
jmp
pop
add
fwait
xor
jmp
mov
js
mov
sbb
je
rcl
mov
inc
loop
xlat
das
pop
fsub
xchg
push
clc
ss
xor
je
cmps
mov
pop
cmp
cmp
(bad)
mov
cmp
jecxz
xchg
je
ja
sbb
shl
pop
push
jnp
mov
jne
dec
out
shl
jb
movs
dec
mov
jmp
pop
mov
mov
inc
mov
mov
fnsave
mov
pop
and
inc
pusha
int
xor
adc
push
jo
sbb
in
loope
stos
inc
cmp
sbb
int3
(bad)
daa
in
dec
push
pusha
arpl
xchg
pop
call
and
jbe
ins
dec
ffree
rol
mov
mov
sbb
ja
push
popf
loop
pop
fs
aam
dec
movs
jb
add
(bad)
or
xchg
loop
scas
cmp
pop
ret
sti
push
or
mul
and
movs
ins
push
xor
iret
outs
sbb
inc
cdq
push
(bad)
stos
mov
add
fsub
xchg
dec
call
hlt
xor
fwait
pop
cmp
repz
mov
movs
pop
xchg
fdiv
push
add
aam
(bad)
inc
mov
jle
sub
retf
xchg
jmp
push
jae
cwde
mov
dec
sub
xchg
xchg
mov
pop
cmp
adc
or
rcr
in
icebp
sahf
js
jbe
jmp
xor
or
mov
push
iret
mov
int3
push
cwde
push
clc
bound
in
xchg
stos
sbb
mov
out
dec
xchg
popf
pushf
mov
pop
ret
(bad)
sbb
jns
out
scas
fdiv
loope
js
mov
inc
pop
and
cmovbe
inc
add
pop
mov
fcomp
and
shl
xor
arpl
add
or
cmp
sub
fsubr
int
sbb
and
inc
sahf
ss
adc
add
js
pop
das
outs
arpl
sub
dec
int
jns
mov
add
xor
push
(bad)
dec
jmp
dec
adc
pop
pushf
xchg
(bad)
(bad)
or
cmp
movs
ret
push
xchg
adc
mov
ds
lea
lds
enter
add
dec
leave
shl
nop
movs
or
xor
jns
add
sbb
push
lods
sar
push
jg
xchg
mov
xor
xchg
cmc
cdq
adc
ss
and
cld
unpckhps
sub
int3
push
fbstp
pmullw
ins
jl
or
and
jmp
movs
xor
daa
jp
cmps
dec
lods
(bad)
jmp
push
leave
cmp
add
adc
adc
or
jg
add
jle
push
push
and
mov
adc
fisttp
shl
addr16
cmp
mov
xchg
push
cmp
push
mov
leave
fmul
inc
add
xchg
cli
mov
jae
push
inc
push
mov
fwait
lods
in
or
retf
fimul
in
(bad)
mov
stc
les
ror
fdivr
xchg
sbb
rcr
mov
mov
cmc
es
shl
sub
cmp
inc
dec
mov
call
xor
push
pusha
cmps
scas
sub
std
sub
or
mov
movs
into
push
pop
add
imul
call
in
adc
xchg
sub
aaa
xchg
add
xor
or
cmp
or
mov
or
xchg
mov
cwde
mov
push
mov
gs
cs
and
enter
pop
push
stos
jp
mov
mov
jnp
inc
and
mov
out
mov
or
xchg
cld
test
sub
fs
mov
scas
dec
test
sub
clc
sbb
out
mov
pop
xchg
arpl
imul
cmp
iret
sub
or
mov
lahf
scas
cmps
(bad)
sti
cmp
das
inc
adc
pop
pusha
out
and
ror
dec
jl
cmc
loopne
cli
mov
clc
mov
fcmovne
add
mov
(bad)
push
call
dec
jnp
sbb
into
daa
fmul
daa
cmp
add
cmp
loopne
jnp
pop
pop
out
xor
add
movs
xchg
ffreep
xlat
into
jmp
xchg
xor
and
ds
push
fbstp
mov
inc
cmp
cmp
or
out
jp
mov
cli
xor
into
jg
mov
enter
xchg
cmps
aas
adc
or
mov
je
push
imul
add
adc
cmp
data16
jae
sub
jae
push
push
adc
bnd
lea
idiv
data16
push
jecxz
mov
jne
inc
jl
aad
mov
(bad)
outs
jmp
mov
mov
inc
pop
ins
mov
pop
retf
aam
(bad)
fidivr
add
scas
xor
mov
ret
pusha
arpl
fistp
push
std
sub
mov
int
adc
out
push
leave
imul
add
cmc
loope
movs
fwait
sub
mov
inc
xchg
jmp
xor
jg
out
gs
sub
jmp
mov
mov
mov
pop
add
jbe
add
pop
push
div
shl
test
mov
mov
add
mov
daa
add
push
sbb
or
cwde
stos
adc
sti
pop
je
retf
lea
in
test
mov
rol
jo
and
xchg
jns
leave
test
mov
push
sbb
or
in
loope
xor
jl
fwait
jecxz
xor
mov
pop
arpl
out
ret
pushw
aam
pop
loopne
mov
push
mov
lods
and
in
div
jg
inc
mov
jle
push
lock
xchg
dec
push
rcr
mov
mov
xor
jge
sub
test
push
mov
repz
dec
adc
stos
and
push
inc
pop
jmp
stc
and
pusha
sahf
add
xchg
push
daa
jo
or
pop
add
dec
into
mov
mov
(bad)
retf
scas
std
fld
xor
jmp
(bad)
rcr
imul
fstp
cwde
les
jne
sbb
shl
dec
xchg
imul
dec
das
hlt
adc
aam
cdq
xchg
jmp
jle
and
push
retf
jns
add
test
jmp
dec
push
adc
inc
xor
jne
mov
cwde
in
out
lahf
mov
push
jmp
icebp
movs
sub
inc
mov
adc
sub
jnp
fdivr
in
jl
int3
jmp
les
cdq
lods
inc
paddb
inc
xor
das
inc
ror
xor
ds
fisubr
aaa
mov
ds
ficomp
and
stos
stc
or
(bad)
pop
inc
push
stc
ret
xor
sbb
jmp
xlat
mov
test
test
inc
jns
and
push
rol
dec
ins
in
loopne
mov
push
ror
push
add
or
dec
mov
inc
stos
ss
jge
mov
loopne
mov
call
mov
xchg
mov
fldcw
dec
jmp
mov
xchg
mov
jae
sbb
rcr
scas
shr
mov
mov
push
push
cdq
shr
xor
dec
adc
test
pop
fbstp
mov
pop
stos
(bad)
cli
sbb
or
adc
stos
rcr
les
ja
out
jle
pop
ret
and
int3
dec
cmc
pop
es
xor
push
call
(bad)
cmp
sbb
and
jno
cmp
sbb
stos
scas
sar
out
jne
(bad)
cmp
push
mov
sub
scas
inc
out
jae
js
push
pop
int
into
cmps
fcomp
push
pop
fs
les
mov
inc
jne
add
repz
rcl
jb
scas
popf
aaa
fdivp
pop
in
push
xor
mov
adc
into
shl
pop
rcr
xchg
enter
fs
inc
push
jle
pop
mov
push
pop
adc
jecxz
scas
in
mul
(bad)
cli
or
mov
int3
mov
ret
push
mov
xor
xor
add
mov
mov
ret
add
inc
xor
jge
test
les
aam
fisttp
add
aam
add
sub
iret
movs
iret
in
mov
and
dec
hlt
retf
jg
sbb
icebp
mov
neg
aaa
mov
sbb
mov
mov
in
movs
xchg
ror
sahf
sbb
ror
add
mov
sub
pop
push
aas
nop
mov
or
out
lock
mov
mov
and
pop
mov
scas
ins
fsubr
and
push
inc
sub
fnstcw
xor
mov
pop
out
fucomi
in
dec
cld
mov
mov
fimul
iret
mov
arpl
pop
pop
pusha
dec
popf
mov
adc
fidivr
fdivr
add
out
int
pop
push
push
imul
jne
gs
imul
or
dec
in
pop
sub
push
pop
sbb
jbe
mov
inc
sbb
add
aas
data16
cmp
clc
mov
xor
mov
imul
mov
xchg
mov
out
sub
aas
ins
xor
cld
xchg
xor
push
lods
stos
and
daa
shl
frstor
clc
clc
adc
or
dec
lahf
xor
add
les
je
push
jle
cdq
(bad)
xchg
clc
test
test
ss
add
loopne
shl
jns
pop
cs
enter
pop
pop
or
pop
jmp
push
mov
loop
es
jbe
mov
lods
jbe
pop
ins
cmp
mov
xor
mov
jo
cmp
sar
call
pop
stos
cmp
pop
dec
mov
and
pop
iret
push
aad
inc
mov
sub
dec
mov
lods
in
sub
jp
cmps
pop
sti
cdq
push
aam
xchg
inc
adc
xchg
enter
fdiv
int
lods
je
xlat
rcl
fld
(bad)
in
les
aad
xchg
jg
mov
cmp
xor
inc
mov
mov
ror
aaa
dec
mov
adc
dec
fbstp
and
mov
fcom
std
fisttp
loopne
mov
jb
outs
inc
jo
imul
pop
pop
ret
out
aam
and
(bad)
and
bound
sbb
sbb
jmp
and
push
out
pusha
fisub
and
pop
test
lock
idiv
push
into
mov
xchg
rol
aam
psubusb
push
xchg
xlat
mov
sar
mov
mov
xor
ret
push
inc
rcl
out
sahf
add
cld
or
jmp
xchg
or
cmp
pop
scas
dec
push
pop
mov
xor
cmp
adc
sub
add
xor
in
or
ror
loope
dec
pop
int3
pop
push
sbb
cmp
jae
cmp
adc
ja
dec
cmp
mov
data16
mov
jge
dec
ja
cmps
and
out
fwait
push
leave
inc
and
(bad)
xor
fdivrp
and
sub
in
ror
not
in
lods
call
add
lds
test
adc
call
fdivr
or
ret
fsub
pop
sbb
fsubr
inc
pop
xor
in
pusha
nop
jge
and
(bad)
and
inc
sbb
mov
inc
inc
mov
push
imul
ins
push
daa
sbb
ret
dec
cli
cmp
adc
fisub
pop
test
div
sub
pop
imul
jecxz
adc
cwde
stc
popa
jle
cmp
xor
sub
mov
enter
add
pop
adc
cmp
cs
in
mov
ja
mov
fdiv
leave
mov
push
test
mov
cli
fcom
loop
dec
(bad)
xor
push
data16
aas
mov
and
cmps
scas
and
fs
or
mov
clc
push
cmp
lods
pop
ffree
sbb
xchg
push
sbb
push
imul
and
js
or
nop
pop
inc
push
push
sbb
jns
mov
xor
gs
jmp
data16
or
scas
stos
outs
pop
inc
sbb
cmps
mov
cmps
stos
popa
call
jp
shr
call
jecxz
mov
aaa
in
push
leave
stos
cld
xchg
push
jmp
jo
int
mov
inc
inc
sbb
jbe
pop
imul
es
int
xchg
ret
mov
stos
sub
push
imul
jnp
xchg
retf
mov
cwde
(bad)
xor
sbb
add
hlt
fimul
lahf
lahf
sub
stos
add
jmp
fs
movs
ret
xlat
push
or
fmul
int3
sbb
shl
mov
retf
jb
dec
movs
xchg
aam
push
pop
jp
push
leave
loope
stc
adc
cvttps2pi
call
push
jl
rep
jbe
jae
inc
cli
add
xchg
jns
or
inc
add
es
jmp
scas
or
scas
or
mov
sar
and
dec
push
retf
add
cli
hlt
sub
jmp
jmp
stos
movs
inc
xchg
adc
jb
and
gs
mov
inc
sti
ds
fcom
ret
sahf
lods
ins
int3
std
jl
aas
outs
dec
jb
mov
sub
in
mov
add
enter
imul
cmp
xlat
or
or
sar
outs
jnp
and
mov
cmp
inc
nop
dec
sub
aam
cmp
sub
pop
cmp
xor
adc
push
jecxz
movs
daa
xor
(bad)
int
fcom
aaa
push
jmp
push
dec
lods
mov
mov
and
dec
sbb
sbb
sbb
adc
dec
lods
test
pop
in
mov
iret
cmp
dec
mov
xchg
fisubr
imul
mov
xor
jmp
ds
or
outs
mov
loopne
cmc
test
mov
push
rcr
loope
pusha
jae
jecxz
cli
push
jg
and
mov
inc
cmp
mov
retf
mov
xor
push
jmp
cmp
ror
daa
dec
rcr
xor
repnz
jp
pop
fs
mov
cmp
(bad)
sahf
or
mov
scas
inc
mov
pop
sahf
sbb
pop
lahf
xor
out
adc
adc
ret
or
in
jbe
in
cmc
mov
cmp
adc
ins
clc
mov
sub
fnstenv
loop
test
push
jmp
nop
aas
stc
inc
cs
pop
cli
mov
pop
imul
addr16
mov
ret
ret
es
mov
mov
(bad)
out
call
add
addr16
sub
movs
cwde
xor
adc
cdq
xor
scas
daa
ror
neg
icebp
add
pop
mov
adc
in
call
outs
jl
xor
leave
sub
push
pop
dec
popf
into
sub
inc
fnstsw
add
mov
movs
mov
test
shl
movs
fisttp
adc
and
sub
push
or
inc
std
movs
and
test
and
push
fdiv
jge
frstor
(bad)
lock
jmp
imul
adc
add
add
leave
push
sub
mov
fstp
adc
loope
sub
outs
fcmovne
fbld
mov
bound
dec
call
in
aaa
lock
ja
xchg
test
dec
jg
jg
cmp
sub
aad
stos
lock
lock
(bad)
mov
encls
fmul
xchg
sbb
push
rol
mov
fcmovnu
sbb
or
leave
jmp
mov
cmovp
dec
jg
or
leave
push
pop
(bad)
xlat
test
out
mov
mov
into
mov
inc
and
pop
les
clc
mov
in
mov
jge
add
cmc
push
add
or
and
aaa
cmp
jno
mov
mov
push
lods
leave
sub
jle
inc
mov
push
ins
(bad)
jmp
dec
cmps
call
xor
sbb
jnp
jae
jg
push
jmp
and
ds
push
les
add
rcr
or
call
xchg
ficom
pop
div
mov
xchg
push
mov
xchg
cdq
aad
xor
or
jbe
and
cmp
cmp
or
xchg
cmp
or
aam
mov
inc
jno
xchg
sbb
xchg
xor
mov
mov
movs
(bad)
xchg
or
jno
mov
dec
sbb
xchg
lahf
sub
adc
fwait
mov
pop
dec
xchg
fwait
inc
out
push
inc
xor
mov
hlt
je
inc
out
into
outs
fisttp
(bad)
pop
scas
adc
xchg
iret
mov
and
cmp
xchg
sub
sbb
and
test
mov
dec
mov
adc
or
inc
pusha
test
(bad)
data16
jnp
sbb
loopne
das
cmps
pop
je
xchg
dec
mov
ja
cs
push
dec
xor
mov
push
cmp
mul
xlat
jb
pop
and
xor
mov
xchg
outs
mov
div
sbb
out
loop
out
mov
mov
idiv
cmp
imul
pop
aam
push
sbb
paddusb
sub
pop
mov
mov
mov
movs
aas
push
repz
(bad)
into
bound
lods
sub
retf
add
pusha
and
cmp
mov
sub
xor
cmps
(bad)
cmp
jle
shl
lock
sub
ficom
out
fcomp
mov
push
not
in
pop
xchg
test
inc
jne
mov
cmp
inc
nop
int
outs
sub
test
cli
cmp
sti
sti
add
icebp
adc
inc
fstp
xchg
xchg
and
and
sub
jno
lods
pop
mov
nop
add
imul
lods
pop
cmps
jge
xchg
ds
pop
dec
add
jge
loop
pop
fmul
and
hlt
dec
sub
push
jbe
or
xchg
(bad)
div
sahf
fimul
fldenv
lods
fdiv
and
shr
imul
pop
ja
jnp
push
loope
mov
pop
daa
cmps
cwde
iret
out
cmp
fstp
jns
idiv
push
jmp
pop
jp
mov
(bad)
xchg
xor
mov
and
inc
jae
fwait
imul
les
aaa
enter
mov
mov
add
fsubr
cmp
pop
cmc
add
adc
lock
and
shl
cmp
sahf
imul
xchg
int3
not
xchg
(bad)
cmp
and
out
mov
fld
lock
enter
(bad)
gs
sub
and
(bad)
sti
jb
out
pusha
push
ror
push
add
cmc
addr16
jno
xor
mov
push
mov
jecxz
jne
sbb
inc
movs
jle
sahf
pop
scas
jbe
sar
ret
pop
push
sub
mov
or
(bad)
mov
shr
jmp
push
jbe
leave
adc
sub
fdiv
je
stos
mul
push
inc
mov
sbb
sub
aaa
repnz
loopne
ror
pushf
js
add
adc
push
sbb
xlat
cmps
jns
push
mov
jmp
adc
mov
sbb
xchg
or
or
add
(bad)
sub
into
mov
sbb
add
clc
test
mov
sbb
adc
aaa
inc
mov
mov
jp
or
add
mov
in
cli
xchg
ss
fs
jne
fwait
mov
not
imul
call
cmp
fcomp
push
pushf
ret
daa
(bad)
aas
pop
sbb
mov
mov
test
mov
rcr
mov
jp
inc
dec
call
outs
sar
pop
inc
std
sbb
jg
add
addr16
in
adc
fucomip
push
inc
aad
pop
stos
aad
imul
outs
dec
xor
out
ja
or
repz
mov
aad
shl
and
out
pop
arpl
test
ds
add
adc
sar
xlat
std
out
popf
push
(bad)
pop
scas
dec
sub
xchg
cld
es
stc
adc
dec
xchg
inc
outs
pop
or
out
mov
sbb
dec
push
and
dec
ret
cmp
outs
sub
test
and
jnp
jo
mov
data16
sahf
enter
test
jl
mov
mov
xchg
imul
mov
shr
dec
pusha
xchg
sub
cmp
xchg
das
cld
call
in
adc
mov
test
lds
sub
push
retf
mov
fimul
sbb
add
lock
and
and
rol
pop
dec
pop
ja
push
popa
mov
ret
adc
mov
mov
xchg
dec
ins
mov
lahf
add
jae
pop
cmp
aaa
jmp
(bad)
sbb
and
ja
fwait
push
mov
and
sbb
outs
cld
adc
call
(bad)
xor
sbb
lahf
fidiv
xchg
or
xor
mov
jo
push
push
enter
pop
loop
fsubr
shl
popa
or
inc
inc
xor
pop
mov
pop
loop
cmps
dec
sahf
sub
mov
mov
ja
mov
pop
out
imul
and
push
out
mov
das
je
mov
(bad)
hlt
cmp
sahf
aaa
pop
aaa
das
call
outs
mov
and
(bad)
outs
sbb
jae
fidiv
lods
shr
xchg
(bad)
adc
add
sub
dec
cld
(bad)
jmp
or
add
push
nop
and
sbb
clc
xlat
imul
dec
les
aad
sub
mov
imul
call
mov
aam
inc
xor
out
shr
cmps
jle
adc
xor
ds
pop
jl
aaa
sub
inc
mov
movs
adc
aas
add
xchg
repz
mov
mov
dec
ds
dec
jns
mov
aaa
jae
inc
pushf
inc
xor
lea
pop
movs
inc
inc
(bad)
push
dec
and
pop
cmp
sahf
dec
outs
sub
mov
aad
push
sub
dec
sar
rcr
add
and
adc
xchg
jl
sahf
pop
sti
xchg
cmp
loopne
jb
(bad)
cmp
ss
pop
jp
dec
dec
add
retf
sbb
sbb
jg
imul
add
xchg
cld
rol
imul
dec
or
add
jo
test
mov
pop
sub
and
push
jl
in
jb
mov
jecxz
lock
or
in
and
sbb
pop
add
aam
mov
(bad)
inc
xor
ss
(bad)
sub
ins
push
mov
inc
bound
sub
or
push
lea
mov
and
(bad)
push
add
nop
call
jae
dec
inc
jnp
sub
xchg
jl
in
pop
fcom
jg
add
test
in
sbb
jmp
jo
aas
outs
movs
mul
xor
xchg
fisub
cwde
mov
sbb
cwde
in
jmp
inc
movs
or
outs
dec
popa
dec
std
jge
retf
inc
cmp
sub
dec
jns
push
sar
adc
fimul
jo
mov
lahf
sbb
cs
pusha
mov
aad
or
int3
data16
sar
dec
add
ss
lock
push
mul
call
les
ss
add
(bad)
cmp
dec
jmp
and
jae
test
pop
and
jb
mov
xchg
repnz
jmp
fwait
bound
mov
aad
lock
sbb
or
add
sub
popa
jae
jbe
fwait
mov
sub
push
cmp
or
sbb
xor
aaa
in
cwde
or
ret
dec
push
sub
cs
push
fild
iret
push
mov
out
mov
movs
retf
icebp
mov
xchg
fs
stc
loop
retf
loop
leave
call
inc
cli
into
cmps
cmps
lock
test
sbb
aas
(bad)
jae
cmp
adc
add
ins
aaa
cmp
dec
rcl
sbb
cmp
mov
cwde
sub
aas
mov
push
fst
repz
cmc
nop
jmp
and
js
out
sti
sub
mov
mov
ins
popf
icebp
and
das
scas
loop
mov
ror
cmps
cmp
hlt
ins
mov
loopne
mov
cmp
jno
in
int
(bad)
cmp
out
jle
(bad)
es
jmp
shr
xchg
xor
jns
sbb
in
mov
mov
jbe
and
xchg
daa
adc
mov
jg
bound
jno
sub
hlt
fmul
mov
cs
sti
sbb
loop
fisttp
fidiv
cmp
mov
test
push
xchg
js
gs
mov
jg
inc
aam
dec
ins
or
adc
inc
push
cld
ss
jmp
push
mov
test
inc
add
push
int
push
(bad)
in
mov
gs
push
mov
rol
xor
pop
stc
ins
xlat
or
(bad)
fisub
mov
sbb
aad
push
or
ret
loop
push
mov
ror
dec
jae
mov
pop
sub
push
cmp
xlat
and
jmp
xor
pop
dec
test
mov
mov
sbb
push
lods
daa
je
sbb
xor
sub
or
fadd
jo
sub
mov
movs
mov
test
jb
pop
inc
ror
int
adc
arpl
xor
stos
push
or
(bad)
mov
nop
mov
ret
into
loopne
mov
ins
cmp
lahf
stos
push
mov
pop
fsubp
or
fcomp
xlat
mov
je
das
push
cmp
sbb
adc
daa
jnp
jmp
iret
inc
mov
cmp
aaa
xor
out
mov
rol
dec
ret
es
inc
dec
std
inc
cmps
test
mov
pop
ins
mov
test
mov
mul
add
je
dec
mov
push
pusha
jle
call
cli
mov
xchg
(bad)
pop
(bad)
mov
mov
clc
pop
stos
push
test
and
jg
jge
mov
mov
dec
or
ret
test
out
pushf
icebp
mov
lods
pusha
int3
xchg
mov
push
cld
xchg
cwde
mov
and
jl
push
dec
scas
sti
inc
das
dec
cs
sahf
clc
xchg
xchg
cmp
repnz
inc
adc
cmp
and
jmp
data16
push
aam
out
and
push
xor
sub
and
push
shl
(bad)
out
shl
and
cmp
mov
or
repz
mov
jo
sti
test
outs
je
scas
dec
cmp
xchg
pop
shl
mov
jp
xchg
mov
pop
loopne
mov
jg
sub
mov
jle
movs
adc
pop
(bad)
out
in
cmp
pop
push
add
mov
cmp
stos
mov
cmp
cmp
repnz
scas
mul
out
(bad)
movs
and
adc
lds
shl
dec
dec
dec
jge
cmp
mov
mov
out
pop
test
sahf
xchg
mov
ins
mov
inc
fld
add
and
or
stc
xor
sti
cli
sub
xchg
in
lock
inc
ds
sub
mov
push
mov
jmp
outs
fucompp
dec
lods
pop
fstp
in
test
or
xchg
mov
or
push
push
mov
and
cdq
test
sar
cwde
adc
repz
or
jl
dec
push
jge
push
shl
xor
retf
sbb
(bad)
stos
mov
arpl
sbb
inc
jb
add
push
sbb
pop
cld
test
dec
push
cmp
mov
outs
stos
cs
xchg
fucom
and
dec
mov
test
ja
xchg
mov
and
and
popa
add
push
leave
pusha
ins
pusha
xor
mov
pop
(bad)
push
add
fwait
inc
ret
and
stos
cmps
pop
jae
inc
xor
clc
fldenv
push
push
inc
aam
pop
rcr
xor
int
cli
cmp
dec
mov
cmp
push
lods
leave
or
jge
jb
into
in
mov
lock
fs
int
cwde
push
jmp
aad
(bad)
fidiv
fcmovnb
inc
sti
sbb
xor
adc
and
rcr
inc
xor
mov
ret
je
das
mov
cmp
daa
repz
loopne
jge
cmp
add
ins
imul
aas
and
sub
jno
add
push
pop
out
xlat
mov
lock
std
les
popf
into
imul
mov
push
repnz
cmc
or
loope
add
push
pop
push
jle
mov
mov
jo
mov
movs
mov
xchg
add
aam
jmp
mov
and
and
dec
jg
mov
xchg
mov
jg
test
shl
aas
jae
and
jae
mov
xchg
sbb
(bad)
push
jmp
ud0
sbb
in
aas
add
mov
xchg
xchg
xchg
sub
mov
cmp
sbb
hlt
jmp
mov
and
sbb
mov
cli
mov
pop
push
je
popf
xor
mov
movs
xor
pop
xlat
lea
sbb
int
loop
test
lds
push
aam
outs
or
mov
and
or
bound
shl
xlat
js
fs
or
sub
mov
ror
xor
push
sub
sub
shl
loope
sti
int
ins
fistp
out
cmps
jmp
(bad)
mov
jmp
inc
dec
(bad)
jle
shl
pop
fwait
xor
psraw
mov
scas
loop
dec
mov
mov
nop
lahf
add
rol
pop
shl
cmps
dec
mov
mov
es
cmp
jp
(bad)
fwait
xor
and
fdivr
xchg
stc
pusha
dec
je
gs
dec
or
cmp
jle
or
pop
xchg
clc
or
xchg
and
ds
adc
sbb
jecxz
pop
mov
test
jp
ins
sbb
dec
aas
ret
out
or
pop
fisttp
adc
(bad)
sbb
push
inc
daa
dec
movs
xchg
out
pushf
test
jle
aam
xor
mov
inc
and
in
shl
and
push
mov
nop
pop
push
pop
lods
mov
enter
adc
or
inc
sbb
lahf
stos
int
out
mov
(bad)
ficomp
jp
lea
into
xchg
dec
scas
popa
test
ficom
dec
cmp
dec
pop
cmps
pop
mov
pop
mov
and
cli
les
adc
fst
hlt
mov
mov
stc
daa
aaa
cmps
in
lods
mov
movs
das
xor
dec
inc
pop
leave
dec
dec
and
dec
div
into
cmovp
popa
in
xchg
rol
add
pop
xlat
loopne
out
stc
xchg
mov
pop
daa
test
movs
xor
jnp
call
stc
test
pushw
mov
sar
sub
idiv
cmp
jo
push
add
lods
(bad)
call
rcr
and
nop
xchg
dec
pop
inc
sbb
mov
ins
rcl
mov
xchg
scas
and
test
xchg
jge
pop
jge
mov
mov
pop
push
(bad)
cmp
fbstp
jmp
in
jp
jno
mov
xor
or
std
cmp
dec
mov
retf
arpl
push
test
or
mov
int3
enter
test
fcom
mov
adc
test
add
mov
push
into
and
fistp
fidiv
aaa
add
fwait
mov
aad
ret
xor
(bad)
mov
fisub
pop
add
rcl
mov
jae
xor
jle
dec
xlat
add
mov
lods
aaa
xlat
mov
inc
adc
fdiv
adc
sbb
aad
push
fld
fs
pusha
cmps
pop
cmp
cmps
ins
pop
iret
cmp
fldcw
mov
sub
in
scas
ss
scas
movs
cmps
mov
mov
fidiv
scas
(bad)
and
inc
imul
es
retf
jmp
sbb
dec
int
jmp
mov
add
daa
cmp
mov
cmps
addr16
ja
movs
aad
sbb
ins
sar
shr
into
jno
loope
push
sbb
jg
push
xchg
cmps
call
daa
(bad)
inc
jmp
in
jno
mov
sub
stos
mov
(bad)
in
cld
xchg
mov
loop
int
out
retf
mul
push
ins
aaa
xor
inc
lods
jne
push
inc
xchg
push
enter
or
(bad)
shl
loop
aas
mov
jnp
cld
xor
nop
dec
fs
xor
xor
retf
cmps
test
cwde
xchg
fisubr
jl
pop
leave
sbb
sub
jmp
mov
xchg
test
xlat
mov
ins
lds
fwait
aad
ret
(bad)
dec
sbb
stc
fld
fadd
cmps
mov
es
div
out
and
popa
xchg
mov
repz
mov
neg
enter
rcr
call
sbb
outs
xor
mov
loop
jge
cdq
shl
fisttp
mov
cmc
mov
mov
pop
iret
adc
sahf
mov
mov
aad
mov
jle
shl
lods
add
repz
pushf
inc
adc
jmp
popa
out
xchg
ror
ja
adc
jmp
mov
xor
xchg
mov
fild
repnz
push
sub
mov
out
and
shr
mov
push
xchg
hlt
out
rcl
scas
mov
cmp
bnd
inc
and
(bad)
push
cmp
add
mov
test
mov
mov
div
or
xor
loopne
dec
mov
dec
in
push
sbb
popf
rcr
out
or
loope
ja
jmp
add
mov
or
aas
ror
test
lods
cmp
push
dec
mov
cwde
and
pop
pop
dec
jno
sub
in
fidivr
mov
and
pop
pop
jmp
jl
inc
pop
cli
mov
fisttp
movs
sbb
aad
dec
cmps
aam
imul
stos
lods
gs
loope
mov
loopne
push
outs
add
mov
sti
test
cmp
mov
mov
cs
(bad)
or
mov
aam
ror
push
gs
ins
(bad)
aas
add
adc
pop
mov
fld
(bad)
ret
push
jnp
iret
ss
xlat
mov
out
adc
aas
mov
loop
loopne
xchg
cmp
jle
sub
bound
iret
jl
or
xchg
and
mov
cli
in
retf
inc
cld
pop
call
or
mov
push
pop
mov
in
cmp
arpl
cmc
mov
stos
aad
inc
shl
pop
clc
dec
add
loopne
out
cld
pop
test
enter
pop
rol
push
pop
mov
rcl
mov
cmp
ja
outs
enter
sub
xor
loope
or
xor
outs
movs
sbb
push
xchg
sub
int
stc
mov
(bad)
in
shr
mov
pop
fimul
add
push
popf
sub
mov
push
sub
inc
lods
push
hlt
sbb
or
xor
pushf
push
aas
fnsetpm(287
cmps
mov
test
sub
or
jmp
js
or
fistp
mov
sbb
shr
lahf
dec
mov
jb
mov
xor
(bad)
jmp
add
outs
mul
jmp
or
fmul
sbb
sbb
mov
sub
inc
push
std
and
jle
mov
cmp
pop
or
movs
push
outs
mov
jne
mov
jl
cmp
push
ja
sahf
push
rcr
repnz
sub
sub
dec
jae
div
push
pop
jge
ss
les
mov
les
pop
in
mov
pop
xor
movs
sub
ds
aas
adc
fcmovbe
sbb
repz
inc
shr
sti
aaa
aam
sub
ficomp
xchg
push
pop
mov
sbb
inc
push
xchg
jmp
cmp
push
sahf
or
es
stos
adc
lea
or
lahf
adc
pop
test
(bad)
(bad)
in
jns
cmp
pop
xchg
mov
mov
mov
pop
fcomp
sbb
iret
pop
jle
retf
add
pop
push
inc
mov
mov
into
ret
xchg
and
mov
sub
pop
mov
imul
mov
gs
hlt
adc
add
aaa
mov
add
mov
loope
adc
outs
xchg
fsub
push
jl
daa
add
mov
mov
fisubr
push
xchg
ins
cli
push
push
repnz
jnp
fstp
jns
pop
mov
test
push
push
push
mov
inc
std
rcr
aad
inc
jbe
bound
mov
lds
outs
(bad)
in
ror
lock
pushf
or
ffreep
je
hlt
fmulp
js
mov
retf
fdivr
lds
pop
mov
jmp
loop
mov
fld
and
lds
mov
xor
jl
imul
or
inc
cmps
jecxz
mov
out
add
outs
cmp
adc
sub
in
int3
lods
int
mov
lods
ins
lock
adc
es
sbb
xchg
jmp
retf
imul
shl
call
mov
mov
clc
in
push
das
xchg
jmp
sub
stc
ins
add
arpl
fadd
inc
lea
loop
cmp
ss
fldcw
dec
and
dec
pop
xchg
mov
xchg
and
push
xlat
inc
mov
inc
cmp
shr
lahf
sbb
or
sub
push
pop
and
popa
mov
mov
movs
(bad)
repnz
bound
not
ficom
outs
bound
mov
js
xchg
cmp
push
mov
cmp
sbb
mov
adc
movs
and
xlat
retf
inc
xchg
(bad)
dec
pushf
jmp
paddusw
inc
jo
add
sub
mov
js
or
pop
jge
add
cld
(bad)
loopne
add
aad
ret
arpl
gs
lods
scas
jno
and
pushf
mov
cld
mov
fdiv
dec
adc
sub
movs
or
pushf
iret
stc
pop
jno
jl
(bad)
rcl
cmps
push
sub
fld
ffree
iret
add
test
sbb
aaa
ds
adc
pop
cmp
sbb
sbb
loope
(bad)
sbb
sti
push
or
sub
movs
pop
in
or
xchg
mov
rcr
retf
xchg
in
cli
xor
je
out
into
sub
shl
inc
mov
xchg
ja
jbe
lea
outs
sub
retf
data16
fsub
cmp
scas
mov
jl
add
(bad)
int
ss
aam
pop
sub
retf
push
test
aam
loope
sbb
cmp
iret
mov
repnz
cwde
dec
movs
push
lea
aas
adc
sbb
xchg
popf
sub
adc
bound
fwait
mov
push
mov
or
cwde
inc
icebp
ja
jmp
call
push
dec
or
rol
cmps
dec
add
fadd
add
stos
retf
stos
hlt
jae
fld
push
and
pop
adc
call
mov
test
sbb
iret
add
je
imul
sub
ret
test
lods
int
pop
dec
xor
add
ja
shl
bound
sahf
das
test
push
pop
pop
xchg
sub
fnstcw
(bad)
pop
pop
fucom
imul
out
or
lods
inc
fild
outs
loope
mov
jp
movs
mov
(bad)
pop
jge
inc
leave
rcr
aaa
fsub
jmp
mov
mov
ss
in
shl
cmp
pop
dec
hlt
xor
xchg
pop
jb
mov
push
xor
xchg
shl
sbb
call
mov
iret
das
jg
mov
cwde
repz
and
les
into
push
pop
leave
(bad)
pop
adc
in
neg
iret
fwait
aam
mov
or
cmp
push
pop
jns
push
sub
and
mov
out
cmc
xlat
lods
call
(bad)
retf
movs
mov
dec
push
pop
dec
mov
div
mov
jge
into
adc
jl
jb
pop
mov
mov
shr
pop
jle
mov
mov
pop
in
or
inc
jns
mov
push
adc
into
or
pop
xor
cmp
push
aas
movs
adc
out
mov
call
sar
arpl
mov
cs
cdq
and
mov
mov
xor
pop
pop
in
jle
push
pop
stos
adc
or
push
es
push
fild
dec
retf
mov
shl
cmp
fadd
jle
shr
shr
aad
dec
psubusw
mov
add
sbb
pop
fisttp
fwait
xchg
pop
nop
mov
xor
cmps
fsubr
call
xor
fist
test
jo
daa
cwde
pop
stos
mov
and
cwde
fld
pop
test
scas
and
or
loope
inc
jmp
sub
in
add
aaa
sub
(bad)
out
rcr
dec
push
cmp
jne
jl
add
ret
shl
addr16
mov
mov
inc
cmp
and
pusha
aad
fs
cs
adc
loopne
out
in
and
cli
icebp
inc
imul
idiv
lahf
or
inc
adc
cwde
je
jbe
sub
jmp
push
jae
pop
bound
dec
fiadd
stc
out
xor
mov
inc
das
cdq
cmp
dec
fwait
mov
jne
cmps
mov
mov
out
nop
mov
stos
fsub
popa
pop
fimul
cmp
loop
call
ins
adc
mov
pop
push
or
(bad)
pop
(bad)
sbb
scas
ret
in
call
add
inc
leave
not
mov
pop
mov
into
loopne
test
pop
es
sti
add
addr16
stc
and
sub
jmp
cmp
mov
inc
mov
push
sub
pop
xor
addr16
outs
dec
push
push
rcr
mov
les
je
fisub
push
(bad)
sbb
rol
imul
sbb
xchg
scas
fldz
das
push
loope
jl
jmp
std
adc
push
mov
mov
xchg
push
inc
sbb
test
call
jnp
xchg
ds
mov
pop
addr16
and
push
test
pop
movs
push
dec
or
int
mov
add
mov
pop
inc
and
pusha
clc
repz
dec
sar
gs
mov
ins
int
adc
mov
call
xchg
(bad)
das
je
pop
or
nop
mov
inc
mov
mul
lods
das
mov
push
xlat
adc
popf
inc
xor
push
jo
xchg
xlat
sub
out
sahf
pop
enter
push
mul
pop
out
cmc
imul
lea
ins
sahf
popa
and
call
xchg
or
add
xlat
and
inc
daa
push
sbb
dec
loop
inc
sar
fmul
xor
jp
inc
mov
push
pushf
xlat
sub
xor
leave
sahf
out
inc
out
rol
xchg
or
mov
mov
aaa
inc
imul
xchg
push
push
scas
xor
fisub
jl
cs
push
adc
movs
or
ret
sbb
sub
cmp
je
mov
jmp
inc
xor
xchg
sbb
jle
pop
pop
stos
cmps
inc
pop
fsincos
xchg
pop
xchg
inc
fiadd
jno
(bad)
leave
cmp
stos
cmp
jecxz
xor
std
stc
inc
sub
adc
sbb
jmp
addr16
lods
xlat
cmps
jbe
jbe
leave
(bad)
test
dec
jl
inc
cmp
out
jl
mov
sahf
btc
out
scas
pop
or
nop
int
pop
pop
enter
mov
iret
dec
mov
pop
xor
mov
popf
add
cmps
mov
ja
fimul
pushf
in
mov
movs
and
lods
in
and
pop
sub
mov
inc
ror
outs
mov
mov
aam
pop
test
sub
js
retf
sub
ins
mov
sbb
loope
xchg
sub
jecxz
sub
inc
cmps
and
or
(bad)
xchg
inc
idiv
sub
inc
sti
dec
xor
ret
mov
loopne
pop
scas
adc
scas
(bad)
inc
mov
pop
sub
sub
dec
ret
add
dec
mov
xor
ficomp
mov
jge
(bad)
sahf
test
mov
test
mov
inc
ja
jne
xor
and
call
fmul
mov
pusha
fsub
mov
add
cmp
dec
jle
cmp
xor
dec
imul
jae
fwait
aam
pop
loope
lahf
ret
ins
rcr
pop
pop
inc
xchg
out
push
cmps
fwait
lds
dec
(bad)
ss
popa
xchg
jmp
lock
mov
push
dec
jg
jnp
cwde
ss
jb
or
xor
int3
int3
mov
dec
pop
int3
out
not
ins
xchg
ret
jmp
adc
jne
out
retf
sub
mov
loope
mov
ins
pop
sbb
add
dec
movs
and
lea
add
push
daa
loop
mov
inc
aas
add
inc
xor
iret
dec
pushf
mov
sbb
mov
iret
(bad)
(bad)
out
(bad)
mov
lock
cmp
iret
and
pusha
jnp
mov
cdq
movs
push
push
jl
or
and
adc
scas
daa
cmp
mov
imul
mov
and
push
out
imul
iret
in
xor
xchg
mov
ja
inc
pop
es
repz
stos
ficom
mov
inc
pushf
movs
mov
push
out
cmp
loop
jae
xchg
jns
add
cmp
mov
xchg
outs
test
mov
pop
jmp
iret
sub
ror
out
inc
scas
or
(bad)
mov
adc
scas
mov
jp
iret
mov
cwde
sub
jnp
inc
movs
fidiv
jp
or
mov
adc
xor
fdiv
dec
into
or
sub
call
jl
popf
fs
jge
arpl
jle
pop
dec
jno
cdq
dec
xlat
dec
popf
les
pop
into
div
inc
add
ret
mov
outs
call
and
jle
cs
cli
imul
adc
cwde
fs
xor
(bad)
cmps
rcr
push
fdiv
push
stos
xor
jmp
push
iret
mov
in
je
pushf
push
push
test
fisub
fidivr
sbb
and
and
and
inc
adc
data16
dec
inc
dec
jge
leave
dec
xor
js
and
or
pop
xchg
stos
(bad)
adc
ins
jp
into
test
xchg
jle
ret
in
pop
dec
imul
pusha
sar
cmps
pop
dec
xor
mov
fstp
sub
gs
sbb
sub
dec
outs
inc
inc
ret
sub
add
pop
xor
and
xor
cmp
out
xor
sbb
fdivr
pop
outs
push
sar
jns
push
test
mov
sub
cmp
lock
add
loopne
push
sub
in
lods
pop
dec
test
mov
and
pop
gs
push
and
xchg
jmp
add
lods
push
in
push
sub
in
sar
js
scas
pop
sahf
xor
jns
and
imul
mov
addr16
ret
inc
out
inc
xor
(bad)
sbb
inc
(bad)
and
cmps
xchg
mov
add
ficom
dec
sbb
sub
pop
dec
jbe
and
and
dec
das
jbe
mov
mov
mov
xor
jno
mov
arpl
cmp
sahf
jnp
test
ret
sub
(bad)
xor
ja
sub
fisubr
fist
inc
mov
aad
gs
int3
out
dec
inc
jnp
dec
mov
test
adc
or
cmp
push
int3
sti
mov
cmc
rcr
nop
mov
loop
xor
xchg
(bad)
cmp
jns
mov
clc
jp
(bad)
clc
mov
scas
sbb
inc
jecxz
(bad)
cmp
mov
pop
sub
adc
stc
inc
rol
push
mov
sbb
vpmaxub
(bad)
aaa
loopne
in
rcr
mov
dec
fistp
dec
addr16
in
int
mov
mov
xchg
(bad)
adc
cmp
inc
mov
push
sub
push
and
xor
cs
and
push
push
dec
xchg
adc
jo
adc
and
pusha
and
mov
arpl
inc
cmp
stc
pop
adc
xchg
ret
xchg
mov
leave
sbb
push
or
stc
pop
repz
ror
in
jne
add
sbb
popa
mov
adc
xchg
jp
dec
cmp
jg
and
inc
sub
jo
in
and
aad
das
loopne
jmp
jl
jge
sti
xchg
fsub
repz
cmp
mov
mov
jnp
jmp
mov
sbb
mov
mov
jmp
xchg
jo
rcr
dec
retf
imul
les
xor
stc
cmp
mov
mov
nop
push
fsubr
sub
loope
shl
xchg
iret
xchg
dec
sub
out
mov
(bad)
aad
mov
int
aam
mov
test
movs
imul
mov
sbb
vmwrite
inc
dec
pop
movs
ins
inc
cwde
pop
(bad)
daa
inc
arpl
jmp
xor
ficomp
cmp
add
xchg
sub
or
shl
mov
test
(bad)
mov
mov
inc
inc
sbb
jnp
sbb
pop
aas
add
rcr
xor
add
out
in
dec
movs
add
outs
(bad)
pop
cmp
and
pop
jb
in
xchg
jno
pop
sub
clc
jl
mov
or
jecxz
icebp
and
sub
imul
or
mov
dec
stos
je
clc
daa
fbld
outs
xchg
sti
or
outs
pusha
xor
les
je
and
or
test
(bad)
outs
into
and
lock
adc
sub
mov
aad
scas
xor
sbb
(bad)
or
adc
repnz
mov
jge
(bad)
xor
daa
stc
out
test
mov
ss
and
outs
scas
scas
in
repz
or
mov
add
mov
push
lahf
push
jbe
outs
pop
repz
pop
xor
lods
mov
js
shl
outs
push
dec
rcl
ror
popa
push
in
daa
xchg
pop
mov
es
add
test
sar
arpl
std
out
xor
fisub
int
div
xlat
cmps
jle
add
and
mov
jo
jbe
or
sub
inc
inc
jle
adc
or
ins
jl
(bad)
xchg
dec
mov
jo
dec
fdivr
mov
mov
stos
inc
push
add
jp
cld
adc
mov
jmp
jecxz
push
sub
imul
mov
adc
(bad)
aas
retf
mov
jle
xchg
fdivr
xor
shl
sbb
push
or
add
retf
rcr
mov
es
test
mov
mov
inc
lock
jmp
mov
imul
mov
xchg
fmulp
fisttp
js
pop
and
or
call
jp
movs
out
or
outs
pop
arpl
cdq
js
in
gs
les
adc
ss
sub
dec
pop
xor
out
or
mov
(bad)
data16
sbb
aam
(bad)
jnp
mov
add
adc
pop
and
mov
adc
fs
ja
aas
add
fcomip
sbb
imul
cmp
push
nop
ret
mov
aam
mov
jno
pushf
cdq
cmp
ins
push
bound
sub
push
or
in
lods
jbe
int3
push
repz
loopne
movs
xchg
jle
or
push
inc
popf
je
inc
movs
in
add
xlat
mov
xchg
std
jg
cmps
daa
jge
retf
adc
push
cwde
pop
or
add
lods
(bad)
or
data16
pop
(bad)
and
test
stos
jbe
mov
dec
sub
inc
push
vunpcklpd
jmp
lahf
adc
sub
pop
nop
es
cld
(bad)
call
addr16
mov
loop
js
ins
mov
imul
stc
cld
xchg
adc
inc
or
cmc
push
pushf
test
mov
or
movs
or
mov
and
xchg
test
add
adc
in
jmp
pop
dec
sahf
push
jb
ja
inc
popf
mov
or
mov
add
outs
jle
out
dec
push
xchg
cmp
mov
dec
and
add
sbb
scas
mov
addr16
cmp
icebp
push
mov
push
push
xlat
cmps
mov
adc
sysenter
daa
mov
jae
retf
stos
mov
in
push
jecxz
shr
ret
adc
and
int3
ja
or
adc
stos
fcompp
xchg
dec
cli
gs
pusha
pop
aad
pop
and
cmp
call
xor
mov
out
mov
mov
sub
je
mov
mov
das
sub
cwde
cdq
ret
mov
mov
ret
push
push
cmp
adc
js
add
(bad)
rcr
xor
inc
cdq
fist
and
aas
push
call
mov
loopne
xor
scas
lods
lods
add
xor
ins
call
sbb
xchg
push
dec
test
jb
pusha
arpl
test
or
and
and
fsubrp
mov
ins
pop
or
lea
les
pop
dec
add
mov
xlat
and
cs
scas
lahf
arpl
mov
mov
jb
rol
pop
std
in
outs
mov
in
cmp
sbb
cmp
cwde
push
push
xor
cmc
push
mov
mov
pop
xchg
(bad)
or
mov
mov
aam
cmp
xchg
dec
pop
js
sub
mov
mov
xor
int
test
xor
int
inc
mov
dec
in
sbb
loope
pop
mov
xchg
mul
pop
mov
cmp
stc
xchg
mov
inc
adc
pushf
sub
repnz
sbb
mov
dec
xor
sbb
stc
push
das
jae
adc
push
xchg
in
sub
jmp
xchg
add
cmc
jl
ret
repnz
repnz
test
sahf
push
cmp
add
mov
pop
gs
dec
(bad)
icebp
mov
in
pop
push
cmp
cmps
jg
fld
mov
fcom
mov
popf
jecxz
pop
cmps
pop
rcr
cs
clc
pushf
pop
push
jmp
push
aas
pop
cmp
pop
out
add
xchg
xor
xor
cmps
xor
mov
mov
jno
in
push
out
jg
scas
jle
(bad)
pop
stc
jo
pop
mov
out
in
sbb
mov
or
ja
aam
loop
outs
call
push
push
(bad)
xor
cwde
mov
mov
sub
dec
xchg
add
jb
stc
aam
xlat
push
or
adc
mov
dec
jmp
xchg
jnp
jo
fwait
js
push
jo
dec
imul
pop
popa
fidiv
arpl
or
test
dec
xchg
sbb
leave
push
aad
inc
xor
stos
pop
add
inc
pop
daa
dec
xchg
mov
pop
loop
test
push
test
popa
dec
pop
das
fdivr
std
cmp
cmp
pop
nop
lahf
in
dec
int3
xchg
xchg
mov
jo
dec
xor
hlt
pop
call
sub
data16
sbb
pop
jp
and
push
mov
hlt
arpl
xchg
bound
movs
jnp
push
push
cmp
xchg
or
rcr
repz
(bad)
fcomp
icebp
sbb
dec
add
enter
mov
(bad)
stos
dec
aas
scas
shl
(bad)
pusha
mov
cmp
pop
push
jbe
inc
ss
or
movs
mov
repnz
dec
ins
in
add
mov
stos
int3
retf
mov
lds
into
pop
lods
mov
fidiv
add
hlt
sahf
add
jno
push
inc
or
jae
repz
test
and
jnp
xchg
xchg
call
mov
push
pop
sub
mov
and
push
repnz
sub
fild
rol
frstor
not
retf
test
and
popa
ret
fs
or
ret
mov
cmp
into
shl
push
ror
mov
ret
push
add
pop
cmp
dec
jnp
outs
in
inc
xor
add
dec
xor
jmp
mov
pop
jbe
adc
arpl
cmp
add
popa
xor
fld
add
div
es
mov
fnsave
or
das
popa
call
pop
pop
sbb
cdq
pusha
aaa
lds
mov
jnp
sbb
in
push
mov
adc
push
in
add
clc
or
ret
mov
and
neg
lea
outs
adc
jbe
lahf
and
(bad)
aas
sbb
push
inc
xor
fsubr
aas
js
pop
test
add
jae
loope
sar
xor
pusha
mov
add
aas
cmc
mov
loope
inc
jns
push
cmp
pop
repz
push
push
xor
das
push
loope
and
push
adc
pop
rcl
lods
imul
out
cwde
stos
sahf
leave
(bad)
movs
fdiv
test
loopne
ror
retf
jbe
repz
mov
cdq
or
repz
movs
imul
inc
test
xchg
arpl
sti
pusha
fcmovnb
mov
aaa
sub
pop
jb
enter
dec
dec
sbb
aas
jmp
mul
jo
in
sub
sbb
je
in
inc
jne
push
inc
pop
sbb
adc
jnp
adc
mov
and
add
adc
or
jle
xchg
(bad)
outs
call
cdq
mov
aad
jl
cmp
idiv
and
int3
stos
pop
sbb
ret
mov
es
repnz
add
dec
push
(bad)
inc
arpl
mov
mov
aam
mov
dec
mov
aad
outs
sub
sti
loope
mov
cmp
mov
aam
stos
xor
in
mov
and
ror
inc
into
es
mov
xchg
xor
xchg
jp
or
sbb
cmp
cmps
(bad)
push
xchg
sub
sbb
stos
lds
or
inc
cvttps2pi
pop
int3
sbb
xlat
shl
mov
mov
(bad)
cs
push
push
mov
sahf
das
jmp
inc
scas
push
leave
arpl
dec
push
stc
ret
mov
mov
enter
hlt
fcom
idiv
cld
pop
aaa
adc
and
mov
dec
or
lods
lea
push
(bad)
fldenv
popa
test
sub
adc
sub
icebp
cmp
(bad)
mov
in
jecxz
inc
dec
mov
enter
xor
or
inc
je
inc
push
clc
mov
jnp
adc
jecxz
sti
cmp
mov
iret
pop
mov
movs
mov
push
jmp
sub
mov
fadd
fdiv
(bad)
and
xchg
in
popa
out
dec
sbb
push
aas
pop
cdq
pusha
in
pop
int3
fwait
and
enter
dec
cwde
dec
mov
sub
mov
arpl
cmps
loop
mov
xor
xor
pop
add
add
jbe
in
dec
pop
outs
adc
adc
push
xor
push
jl
lock
sub
push
ja
push
jae
jg
sub
jmp
popa
fimul
or
dec
dec
scas
mov
shr
xchg
jmp
add
jp
dec
sub
in
mov
data16
jae
clc
iret
inc
fistp
mov
push
sbb
and
cli
ficom
fcom
and
sbb
sti
or
mov
mov
inc
fcmovnb
enter
pushf
fwait
movs
dec
jecxz
rcl
retf
cmps
jbe
pop
mov
mov
sar
fmul
nop
lods
xlat
loop
rol
pop
cs
xlat
lods
or
fmul
and
jmp
add
mov
push
or
mov
inc
push
xchg
jno
fwait
mov
pop
add
les
stos
sub
sub
mov
push
cli
(bad)
xor
mov
lahf
shl
add
ins
jl
loopne
ficomp
xchg
retf
pop
add
cwde
retf
jle
pop
(bad)
jge
push
sub
pop
fcomip
aas
nop
jmp
fld
(bad)
adc
jne
jl
add
div
or
pop
sahf
lods
cmp
call
addr16
shl
repz
xchg
inc
or
outs
fsubr
rcl
jecxz
(bad)
pop
movs
retf
aam
ret
mov
inc
mov
add
pop
xor
add
mov
dec
push
adc
aam
xchg
inc
loopne
test
mov
add
sub
in
xchg
lea
dec
xor
imul
mov
or
sub
ins
mov
or
out
pop
mov
and
push
pop
clc
mov
pop
xchg
mov
mov
mov
stos
add
jg
dec
fs
mov
lahf
push
cmp
iret
push
outs
into
repnz
add
shr
xchg
cmp
fwait
in
data16
cmp
mov
and
bound
sbb
cmps
and
cmps
jb
movs
xchg
sti
jle
stos
sbb
mov
test
cmps
mov
(bad)
mov
pop
push
lahf
adc
and
in
hlt
push
movs
add
std
(bad)
popf
dec
push
scas
(bad)
sbb
arpl
lock
add
mov
stos
mov
inc
mov
pop
shr
jmp
scas
scas
and
shl
ror
mov
jp
data16
xchg
xor
jge
lds
mov
lods
inc
pop
sti
cmc
adc
imul
std
push
inc
aas
fcmovb
sbb
js
in
rol
loop
ror
test
lahf
aas
push
int
daa
cwde
xchg
xchg
test
fiadd
cmp
adc
movs
inc
test
test
stc
lds
data16
test
jle
inc
xor
(bad)
sar
rep
loope
push
js
arpl
mov
ds
idiv
fdivr
adc
pop
xchg
or
inc
jl
jnp
mov
and
shr
mov
mov
ret
pop
sar
movs
jmp
(bad)
(bad)
sub
dec
mov
jmp
mov
mov
xor
mov
daa
repz
enter
shl
mov
inc
popf
jp
data16
fwait
psubusb
xchg
mov
test
bound
sbb
add
cld
ret
test
sbb
mov
es
mov
out
jle
jnp
or
push
adc
xchg
ss
retf
test
js
adc
dec
add
or
ret
xor
pop
fwait
jmp
ret
in
sar
cmp
les
jno
adc
into
sbb
cmp
int3
mov
inc
ss
ja
inc
inc
sub
sub
shl
dec
xchg
push
xchg
addr16
mov
cli
stos
lods
adc
pusha
inc
(bad)
mov
pusha
xchg
cmp
sbb
mov
push
int
shr
dec
enter
ret
shl
in
sbb
pop
xchg
aas
pop
sub
out
loope
mov
mov
add
sbb
lock
popf
js
pushfw
daa
sti
lahf
cmp
das
inc
mov
add
dec
push
pop
cmps
lods
mov
or
xchg
inc
adc
jecxz
and
dec
or
add
jnp
leave
jbe
add
(bad)
jmp
les
hlt
xchg
pop
dec
or
or
leave
jl
xchg
jle
lods
and
sbb
inc
mov
fwait
mov
pop
adc
jl
cwde
mov
push
add
mov
rol
ins
retf
or
sbb
inc
repz
xor
push
ficomp
push
push
dec
push
mov
in
js
test
aam
into
(bad)
js
jg
ficomp
sub
int3
fnstsw
imul
xchg
jnp
sub
rcl
pop
(bad)
out
loope
xor
adc
mov
xchg
cmp
mov
sub
pop
out
fidiv
cmp
lds
lods
into
jge
outs
and
ret
aas
jp
out
dec
call
mov
neg
push
aas
mov
fldcw
jno
cld
xchg
(bad)
push
and
(bad)
push
test
out
xor
arpl
int
push
jmp
inc
cdq
cmp
jg
sbb
and
stc
rol
hlt
shl
js
idiv
daa
dec
stc
rcl
adc
mov
and
std
out
(bad)
data16
or
xor
mov
mov
mov
mov
lahf
mov
inc
fwait
pop
(bad)
fdivr
jnp
aaa
or
xchg
repz
pop
push
test
sub
xor
mov
push
pop
scas
repnz
int
sbb
mov
inc
arpl
and
push
stc
xchg
xor
mov
xchg
(bad)
out
es
ror
mov
add
test
ror
jecxz
sbb
fadd
xchg
daa
pop
cmps
in
mov
lock
sti
sub
stos
sub
sub
pop
fwait
xor
jb
jmp
out
and
out
mov
jo
mov
xor
movs
rep
outs
cwde
xlat
retf
into
push
or
mov
dec
mov
pmuludq
pop
xchg
(bad)
bound
mov
dec
daa
(bad)
aad
dec
sub
(bad)
outs
addr16
mov
mov
cmps
xchg
es
push
mov
fdiv
dec
dec
cs
leave
add
pop
ds
addr16
sub
nop
xor
outs
inc
stc
push
cwde
jmp
sar
jbe
pop
sahf
cmp
arpl
aam
inc
mov
js
aas
pop
jmp
adc
xchg
or
repnz
in
push
int
add
loopne
mov
loopne
mov
xlat
mov
retf
fnstenv
sub
adc
fucom
push
js
push
repz
fdivr
dec
dec
test
and
inc
xor
and
shl
pop
shr
les
bnd
lea
or
or
(bad)
xor
dec
inc
pop
sub
call
mov
(bad)
out
sbb
lods
iret
push
add
sub
cs
sub
ds
mov
cmp
leave
pop
imul
lahf
je
int3
xor
js
xlat
inc
push
mov
rol
mov
mov
inc
xlat
add
sub
add
pop
add
lds
sbb
push
cmp
push
or
add
repz
mov
(bad)
js
sbb
out
inc
fisub
mov
mov
nop
jecxz
dec
jne
and
mov
pop
adc
rol
adc
xchg
mov
sahf
mov
pop
xchg
in
push
out
es
pop
std
and
bound
push
xchg
fld
jle
cmp
loop
cmp
xchg
or
sar
xchg
ret
rcl
cmp
shr
xor
xor
dec
mov
(bad)
sub
dec
xchg
sub
sub
das
jg
add
xor
mov
ds
inc
xor
sbb
push
jno
and
mov
lods
cmp
ss
gs
ror
xlat
je
daa
jp
ret
sbb
cmc
(bad)
mov
mov
mov
adc
add
popf
cmp
outs
sub
and
pop
xor
mov
out
add
or
inc
and
and
pop
dec
mov
inc
lods
fdiv
jg
rol
xor
shr
mov
dec
cld
cmp
(bad)
call
scas
arpl
sub
mov
mov
push
push
gs
cmp
or
jb
in
clc
lahf
mov
mul
dec
add
dec
xor
outs
and
shr
xor
mov
xor
xor
and
or
ret
or
nop
(bad)
xchg
pop
daa
(bad)
mov
and
inc
addr16
inc
out
inc
add
mov
inc
int3
jge
dec
sub
(bad)
mov
fdivr
imul
hlt
fdivrp
call
test
push
arpl
and
xchg
cs
repz
or
out
stos
pop
xor
js
or
fimul
sbb
xchg
sub
out
mov
push
xchg
jg
xchg
and
ud0
jbe
lahf
xor
mov
xchg
mov
fs
std
arpl
lods
or
or
pop
and
or
data16
inc
mov
or
sbb
mov
xor
nop
xchg
add
fs
mov
ret
fidiv
mov
addr16
jmp
push
daa
in
cmc
sub
(bad)
cmp
mov
adc
mov
mov
loopne
mov
push
lods
jns
pop
cwde
xchg
push
pop
sahf
test
mov
xchg
xor
pop
and
and
lods
mov
js
pop
push
push
imul
add
and
adc
mov
enter
test
lods
jne
mov
jno
and
stos
mov
outs
call
mov
push
cmp
fidivr
out
jns
cmp
enter
je
sub
pop
fucomp
scas
jne
or
and
inc
xor
cmp
fistp
jecxz
imul
and
movs
in
jg
std
bound
hlt
mov
jb
cld
je
cmc
repnz
xchg
aam
std
call
mov
push
out
xchg
adc
push
and
pop
mov
cmp
mov
mov
sub
and
pop
mov
cmp
or
adc
or
jmp
ror
sbb
jae
jle
hlt
push
add
adc
gs
cmc
xor
pushf
clc
jmp
sti
mov
(bad)
js
iret
arpl
outs
mov
push
xlat
icebp
xor
lds
arpl
pop
cmp
cld
xchg
test
inc
shl
mov
ja
and
popa
in
and
dec
movs
imul
cmp
pusha
mov
cmp
sar
out
mov
sbb
cmp
or
(bad)
mov
push
ss
xchg
in
call
sub
add
xlat
data16
or
pop
sub
sbb
pop
and
cdq
or
sbb
leave
dec
mov
in
dec
pop
shr
movs
dec
lea
jecxz
retf
jmp
sub
lahf
rol
xchg
inc
mov
add
retfw
push
inc
dec
aam
mov
cs
cs
add
or
dec
stos
enter
adc
out
lea
xor
jo
test
xchg
pop
scas
mov
movs
xchg
mov
jmp
push
lods
out
jnp
movs
(bad)
jmp
test
push
shl
fnsave
adc
fst
mov
push
gs
jp
adc
sub
push
add
add
add
push
push
sbb
or
and
into
add
or
mov
jmp
adc
stos
mov
sbb
xor
xchg
jl
daa
into
mov
push
stc
jle
sub
cmps
popa
vmovdqa
push
sahf
mov
aas
popa
(bad)
or
scas
adc
and
jno
div
daa
lds
out
inc
push
clc
add
cli
out
jbe
mov
ror
cmp
jo
enter
jbe
pop
sti
add
mov
test
mov
adc
enter
xchg
sbb
popa
dec
pop
sub
(bad)
les
sahf
jmp
frstor
call
cli
je
ret
aad
and
add
out
das
mov
jmp
jno
hlt
cmp
test
cmc
ds
dec
dec
push
dec
ins
mov
dec
mov
outs
jns
jno
fisttp
loopne
fldcw
icebp
sahf
push
shr
push
jge
mov
cmp
ror
fnstsw
and
addr16
lea
add
aam
xor
sbb
push
cmps
sbb
movs
repz
xchg
pop
pop
sub
sub
mov
jle
and
pusha
push
std
mov
xchg
mov
pop
jnp
push
idiv
sbb
sbb
js
mov
mov
inc
lods
adc
rcr
daa
repz
mov
sub
shr
xchg
ins
pushf
rcl
push
aas
cli
mov
add
push
data16
inc
ret
outs
gs
jge
jbe
mov
nop
or
mov
lods
push
movs
lods
jmp
jp
mov
push
repz
jp
mov
push
jecxz
mov
retf
xchg
xchg
sahf
xchg
cmp
cwde
push
fs
sub
pop
dec
inc
xor
sub
test
lods
sti
jge
push
jg
push
mov
pop
mov
push
add
mov
(bad)
in
pop
mov
mov
test
outs
add
mov
fld
cmp
jge
dec
into
arpl
sub
add
xor
pop
mov
test
dec
xchg
xchg
mov
mov
and
(bad)
loopne
pop
leave
mov
dec
iret
ja
(bad)
xchg
into
mov
pop
ret
scas
mov
inc
dec
fldcw
dec
xor
sbb
add
jg
add
cmc
dec
ret
sub
imul
stos
ret
inc
(bad)
xchg
push
mov
sbb
ds
inc
(bad)
xchg
add
dec
lods
out
lahf
sub
shld
stos
or
(bad)
fcom
dec
scas
jp
jb
lods
ds
adc
aas
sub
into
mov
xor
aas
(bad)
in
lods
stos
adc
dec
mov
pop
inc
jecxz
pusha
test
hlt
xchg
mov
dec
retf
arpl
aaa
leave
loope
sub
movs
fidiv
mov
or
std
movs
fist
cmps
sub
imul
adc
es
and
sub
adc
mov
mov
iret
in
(bad)
out
xor
jle
mov
jmp
outs
int
iret
out
shl
cmp
popa
sahf
cwde
or
sub
push
cmp
push
aaa
daa
add
repnz
ins
retf
or
mov
stos
xor
leave
jg
pop
dec
cdq
xor
inc
(bad)
hlt
bound
dec
xor
je
sub
(bad)
jno
fisubr
data16
pop
inc
xchg
aad
gs
cmp
jmp
iret
in
dec
xchg
arpl
push
mov
push
mov
inc
jecxz
push
jge
pop
neg
mov
mov
jae
faddp
mov
js
jmp
cmc
mov
push
pop
xor
call
and
stc
aam
addr16
test
enter
fdiv
dec
stos
jp
mov
or
pop
sub
fbld
fist
xor
mov
rcr
xchg
(bad)
xor
scas
mov
mov
adc
mov
add
cmp
cli
xchg
push
aaa
sub
scas
adc
test
inc
mov
push
mov
cdq
xchg
jmp
sbb
add
hlt
ja
jmp
adc
popa
mov
loopne
dec
mov
adc
aaa
xor
ficomp
mov
mov
jmp
mov
xor
mov
(bad)
push
fistp
mov
sub
nop
(bad)
jno
in
xlat
sbb
arpl
ss
fldcw
dec
pop
test
xchg
repnz
pop
cdq
dec
mov
inc
lds
es
xor
dec
sar
in
push
movs
push
xor
cmp
ins
mov
mov
stos
mov
mov
loop
xor
rcl
movs
or
jmp
jnp
lea
jp
sub
fsubr
jnp
mov
jmp
lods
jbe
pop
sbb
movs
ja
mov
(bad)
clc
into
hlt
mov
mov
cdq
out
pusha
rcl
fbstp
jmp
stos
jp
leave
push
iret
cdq
push
add
sub
jge
cmp
lds
push
xor
cdq
push
or
jb
jbe
adc
adc
jne
cwde
scas
call
jmp
pop
xor
cmp
test
mov
add
dec
jge
lock
pusha
xor
test
out
div
push
mov
out
in
xchg
inc
or
xchg
in
retf
test
push
sub
ror
shl
outs
sub
jge
cmps
jae
test
mov
jl
cmp
xor
and
sub
mov
mov
mov
jp
js
xchg
cmp
mov
fstp
rol
lods
add
imul
and
add
mov
movs
push
xor
mov
aam
or
and
int3
xchg
jnp
sbb
(bad)
(bad)
lds
fwait
jno
dec
dec
sub
mov
and
sti
sub
pop
xchg
xchg
loope
mov
xor
jo
adc
jmp
xchg
or
rcr
or
or
shr
dec
or
in
ds
xchg
ret
fcmovb
xchg
xor
sbb
lock
jg
jmp
or
into
mov
loop
sar
mov
out
mov
sub
adc
ins
mov
cld
cmc
inc
xlat
jb
xchg
jp
mov
ret
inc
mov
xlat
xchg
(bad)
fistp
dec
dec
add
jns
push
cmp
inc
mov
fisub
mov
mov
xor
pop
fcom
dec
jle
mov
dec
int3
mov
cld
pop
push
dec
retf
(bad)
xchg
mov
cmp
in
les
jno
or
xchg
xor
outs
add
dec
es
mov
in
jne
push
push
sub
sub
out
push
sbb
jge
in
movs
iret
cmps
add
es
bound
or
mov
fadd
fwait
test
mov
dec
fiadd
or
leave
fisubr
xacquire
jb
nop
sahf
sub
fcmovnbe
adc
jo
(bad)
test
mov
jge
fist
movs
popa
xchg
leave
push
lahf
fadd
push
and
jge
fcom
mov
outs
lods
xchg
fnsave
dec
adc
les
fnclex
shr
mov
mov
xchg
out
adc
scas
stos
int3
std
test
cmp
adc
ins
xor
nop
into
fbstp
adc
push
pop
push
arpl
push
add
bound
sub
jmp
add
rcr
aad
dec
jns
mov
sub
and
mov
push
push
push
cmp
and
(bad)
mov
sub
lds
and
adc
js
xchg
(bad)
xlat
outs
jmp
push
add
mov
sub
inc
mov
dec
fisttp
shl
test
mov
mov
jmp
and
cmp
stos
pop
mov
mov
in
shl
pop
mov
das
in
ins
lock
ds
retf
mov
jg
fimul
test
in
shr
push
dec
stos
mov
fidiv
jp
enter
cmps
jb
ja
pushf
xchg
pop
adc
cmp
lds
jae
xchg
jp
ss
mov
stos
int
stc
mov
(bad)
lea
loop
sahf
jo
lods
les
or
and
dec
(bad)
mov
xor
div
retf
push
jo
dec
pop
in
xor
iret
bound
jecxz
(bad)
int3
xor
sbb
aas
nop
or
imul
and
inc
mov
(bad)
xor
push
and
fadd
add
ins
mov
movs
jnp
cmps
retf
mov
sub
or
gs
je
xor
rol
xchg
sbb
pop
xor
lods
bound
add
jne
fcomi
sti
jp
add
ins
xchg
test
add
lods
stos
hlt
push
std
adc
jno
nop
sub
or
lds
xchg
mov
pop
mov
jmp
mov
mov
mov
cld
ja
fldenv
or
sbb
add
mov
mov
enter
cld
push
jle
inc
out
jecxz
call
fcomp
cmps
ss
nop
sub
push
(bad)
mov
repz
in
xchg
and
fxch
shr
loope
test
push
sub
fist
sub
lock
ds
mov
dec
dec
push
out
pop
jecxz
push
ret
ficomp
jno
shl
cs
std
lds
aam
sbb
outs
(bad)
lea
pop
push
push
cmc
mov
mov
fimul
pop
xor
inc
out
mov
cmp
mov
mov
cmps
or
scas
mov
ins
arpl
mov
mov
jo
adc
cwde
mov
pop
out
int3
cmp
inc
inc
sti
(bad)
ficomp
(bad)
fadd
add
mov
mov
(bad)
shl
je
gs
rcl
xchg
xor
ror
dec
mov
add
outs
jmp
jg
fisubr
test
int
xor
sub
imul
mov
stc
or
fcom
(bad)
into
and
mov
movs
stc
cmp
es
mov
repz
and
and
dec
cwde
adc
fild
jmp
jge
fsubr
mov
xor
push
ss
clc
push
je
dec
xor
mov
jo
or
cmp
fsub
and
mov
pop
bound
(bad)
dec
cwde
jecxz
or
or
or
gs
imul
jb
push
js
push
jmp
shl
retf
sbb
test
rol
jge
push
add
push
int3
movs
dec
cmp
adc
aas
add
stc
jbe
xor
std
arpl
pop
cmp
jae
cld
push
scas
mov
ret
(bad)
stc
sar
pop
and
inc
inc
sahf
loope
std
out
mov
inc
sub
out
adc
and
shl
xchg
stc
jbe
outs
(bad)
adc
out
int
pushf
cmp
stos
mov
jnp
inc
scas
jecxz
outs
aam
sub
pop
test
out
stos
mov
sub
xchg
inc
out
jmp
and
jp
xor
inc
dec
mov
adc
jmp
aam
clc
clc
in
mov
xchg
(bad)
in
jns
xor
inc
jge
cmp
int
arpl
xchg
sbb
sbb
inc
and
mov
push
pushf
jno
fstp
stc
inc
cmp
iret
xchg
rcr
sbb
adc
xchg
popa
ss
cmp
fadd
xor
pop
jge
ja
aam
outs
sahf
xchg
cdq
and
sbb
(bad)
fld
in
pop
int
inc
dec
fistp
adc
out
add
inc
adc
inc
adc
ja
and
stos
in
scas
(bad)
es
mov
into
sub
cmp
mov
and
or
sbb
pop
daa
sub
sub
dec
imul
scas
stc
int
mov
jnp
test
or
test
call
push
mul
psubd
sbb
stos
mov
outs
jne
xor
xor
mov
mov
adc
mov
out
icebp
add
cmp
sub
jno
test
cmp
cmp
sbb
fld
dec
sbb
push
pop
push
les
dec
test
pop
je
clc
test
add
aad
jae
and
cmp
inc
sub
stos
or
mov
add
mov
or
pusha
pop
cmp
sub
in
jo
fimul
dec
stc
outs
in
lock
xor
cmp
sahf
fistp
inc
dec
ret
push
sbb
dec
xchg
test
clc
aad
or
or
adc
jecxz
push
jae
loop
add
adc
push
cli
push
sar
push
jecxz
out
mov
sub
push
rcr
sub
out
jg
jle
(bad)
sbb
clc
out
popa
cmps
shl
inc
push
pop
pop
adc
or
xchg
outs
aas
jmp
mov
xor
and
push
nop
pop
xchg
inc
mov
inc
imul
dec
cs
and
pop
sbb
in
test
out
cmp
cmp
scas
jb
shl
sub
shl
mov
mov
adc
pop
adc
jns
mov
loopne
sub
xchg
fisttp
jns
pop
sub
cmp
bnd
mov
xchg
and
and
inc
cs
adc
cmp
les
mov
in
stos
in
xor
dec
lahf
mov
add
movs
jae
xchg
icebp
and
(bad)
dec
add
sbb
push
sub
lea
lods
cld
or
loopne
scas
mov
fld
shld
loopne
popa
bound
daa
push
scas
mov
mov
add
mov
xchg
add
jo
add
inc
and
push
bound
inc
or
(bad)
fcomp
popf
dec
popf
pop
cmp
mov
jbe
dec
pop
sti
inc
lds
bound
pop
or
cmps
gs
push
repnz
cwde
ror
daa
pop
cli
ins
pop
cwde
jnp
or
or
stos
lds
jno
imul
adc
jns
jo
fistp
push
sbb
or
jne
pop
pop
in
sti
fwait
shr
push
xchg
adc
cmp
push
and
inc
fwait
or
push
lock
movs
ss
in
ins
or
clc
cmp
call
adc
in
arpl
dec
dec
sahf
or
inc
inc
jae
dec
cmc
inc
iret
retf
jo
in
cmps
scas
stos
loope
xor
or
fcomp
adc
pop
and
xor
daa
ss
push
pop
cmp
push
scas
fwait
dec
sbb
in
and
loopne
xchg
jmp
and
push
mov
jmp
dec
popa
mov
jns
fucomip
sbb
inc
addr16
inc
in
add
pop
div
mov
int
push
jae
mov
lds
push
sub
sub
xchg
nop
jno
repz
clc
imul
and
mov
pop
mov
dec
sbb
fsubr
pop
fdiv
push
mov
mov
pop
lock
push
inc
xchg
pop
xchg
mov
loop
pop
out
mov
dec
jge
xchg
aad
jbe
ret
cdq
or
or
cmp
imul
das
test
sub
scas
jmp
jb
(bad)
mov
mov
out
and
mov
adc
jg
add
loope
loope
jb
xor
xchg
int3
mov
add
enter
pop
fwait
sbb
lds
inc
dec
lock
inc
add
in
das
ss
push
stos
cmp
adc
xchg
mov
or
outs
add
hlt
pop
push
inc
jmp
xchg
mov
fiadd
push
cs
icebp
sbb
scas
mov
adc
jmp
push
pop
lock
out
push
xchg
and
mov
xor
jl
adc
sub
sub
and
loopne
pop
es
stos
inc
inc
dec
or
jne
cmp
popa
cmc
neg
xchg
fsub
sub
mov
sar
aam
sbb
mov
jnp
(bad)
mov
xor
aas
stos
sbb
stc
pusha
aas
push
jp
fs
pop
or
je
adc
in
jo
outs
fdivrp
jb
or
into
mov
mov
popa
xchg
mov
ror
retf
popf
test
and
out
jge
or
mov
push
mov
push
outs
dec
add
mov
imul
(bad)
stc
sub
cmps
jg
outs
sub
mov
pop
mov
repz
mov
scas
or
xor
mov
js
ins
fwait
or
js
das
and
retf
inc
test
push
lea
mul
out
hlt
mov
inc
gs
(bad)
in
and
lods
out
adc
cwde
xchg
fwait
mov
stos
lods
aas
shl
or
dec
push
fcomp
jnp
push
push
mov
jb
jo
adc
addr16
in
inc
lods
int3
mov
mov
repnz
ins
les
xchg
mov
mov
mov
add
into
lods
jns
(bad)
adc
cmp
retf
mov
jecxz
push
scas
in
mov
fisttp
xchg
pop
fist
sbb
aaa
out
daa
pusha
and
cmp
sub
js
scas
push
xor
cmp
fimul
dec
movs
mov
xor
mov
sti
push
adc
stos
pusha
imul
fwait
iret
mov
mov
cli
imul
jnp
xchg
(bad)
push
imul
test
push
shr
jmp
repnz
dec
fsubp
cli
push
and
adc
fstp
iret
sub
cmp
gs
jbe
int
push
or
shl
push
(bad)
mov
adc
and
ja
leave
stos
mov
cmp
jo
in
dec
stos
sub
cwde
and
lods
loop
mov
dec
adc
repnz
mov
pop
aas
frstor
sbb
adc
cli
cli
popa
mov
xchg
aad
jp
inc
aam
fld
ficom
adc
das
push
in
add
add
pop
imul
mov
inc
mov
pop
sub
iret
push
int3
mov
mov
in
lea
cmps
ror
sahf
xor
sub
cmp
inc
fidiv
xchg
pop
inc
repnz
ss
retf
inc
xor
scas
int3
cmp
xchg
or
add
test
mov
xchg
ret
mov
fprem
into
jb
add
inc
stos
mov
into
dec
(bad)
repz
dec
call
(bad)
pop
pop
jns
push
jne
cdq
dec
cmp
mov
cli
sbb
mov
xchg
cmp
out
pop
inc
fprem1
daa
or
addr16
mov
xlat
mov
adc
jle
aaa
loop
dec
or
cmps
mov
mov
repz
push
mov
jmp
les
idiv
sbb
xchg
es
jbe
clc
leave
lahf
jecxz
dec
icebp
sbb
aaa
dec
(bad)
(bad)
inc
push
popa
and
leave
lock
adc
pop
push
xchg
(bad)
xchg
div
or
ja
push
aam
leave
mov
retf
add
imul
cmp
push
add
lock
inc
pop
clc
add
shl
jle
ds
fisttp
xchg
inc
adc
(bad)
jmp
push
stos
and
adc
inc
arpl
cmp
call
aam
cmp
jp
xchg
xlat
or
inc
mov
dec
mov
mov
test
outs
jle
pushf
or
fst
loope
push
sub
jo
inc
retf
pop
mov
pop
(bad)
daa
dec
test
jb
mov
retf
lock
sti
add
pop
pop
jnp
sub
ret
lea
adc
push
or
jbe
in
inc
loopne
and
idiv
cmp
xchg
iret
push
push
ds
jmp
lods
push
mov
jecxz
cdq
(bad)
ja
icebp
push
add
cmp
cmp
cmp
xchg
cmps
or
movs
fist
inc
mov
icebp
ins
sub
inc
push
ss
push
and
movs
jmp
and
imul
sub
cmp
cmp
ss
mov
xchg
(bad)
jne
inc
pop
aaa
xlat
daa
pushf
pop
cs
cmp
jnp
jl
push
mov
push
and
push
call
shl
out
and
push
fwait
inc
sub
lahf
lods
ret
dec
pop
add
jecxz
sbb
adc
dec
pop
mov
adc
cmp
call
xlat
fimul
push
fldenv
push
push
(bad)
stos
dec
inc
call
repnz
out
imul
pop
sbb
cmp
jmp
xchg
push
dec
arpl
and
push
mov
inc
adc
gs
pop
scas
out
cmp
mov
cmc
mov
mov
xor
adc
lock
xor
sbb
mov
jnp
ins
(bad)
push
call
sti
shr
jo
movs
call
cmp
jbe
dec
push
add
nop
je
cmp
jnp
xchg
dec
cs
xchg
dec
jg
gs
arpl
pop
cmp
sub
leave
mov
inc
mov
outs
test
not
dec
jno
add
aas
jbe
add
mul
pop
adc
and
or
arpl
jmp
ds
mov
xor
sub
lock
clc
imul
mov
(bad)
fld
or
mov
mov
cmp
in
pop
mov
out
out
maskmovq
sub
mov
lea
sbb
ds
xchg
and
nop
fsub
les
jmp
imul
outs
sbb
jno
inc
add
jg
push
cli
jecxz
repnz
push
lods
sub
icebp
cmp
shr
fimul
mov
test
fldcw
fistp
push
aas
std
jb
sub
sbb
arpl
cwde
out
fldcw
dec
loope
sub
cs
fld
sub
std
fadd
xchg
mov
cmp
sub
aaa
mov
fld
mov
icebp
dec
lock
mov
dec
lock
and
add
push
mov
mov
ins
xor
mov
adc
jnp
push
int3
xor
mov
push
adc
imul
pop
push
daa
lahf
dec
mov
pop
(bad)
fs
pop
mov
mov
lahf
jle
arpl
push
lahf
push
dec
jb
dec
or
push
inc
add
sbb
pushf
rcl
jno
add
(bad)
sbb
mov
mov
fwait
or
(bad)
mov
pop
inc
and
jge
hlt
aaa
xor
popa
hlt
adc
fldenv
jle
arpl
pop
pop
cmp
and
aaa
add
nop
cmc
gs
push
dec
cmp
xchg
les
fisub
xchg
fcomp
pop
ins
popa
pop
bound
mov
sbb
(bad)
jb
inc
adc
imul
clc
aas
sub
loope
xchg
or
call
inc
jecxz
out
pop
pop
fiadd
mov
ins
adc
test
dec
adc
jg
xchg
pop
adc
push
lds
lods
cmps
push
xor
pop
or
dec
test
push
or
adc
sub
div
mov
daa
scas
in
out
push
jne
pop
test
cmp
sub
pop
add
push
mov
fdivr
cdq
jns
movs
loop
jo
(bad)
jnp
inc
jno
mov
dec
test
jp
mov
(bad)
dec
je
jbe
arpl
aam
enter
iret
fnstenv
push
into
pop
sub
jae
fisub
(bad)
shl
loop
xor
cmp
xchg
pop
mov
dec
iret
push
jno
test
(bad)
jmp
inc
shl
int3
jl
xchg
ins
in
add
std
cmp
leave
xchg
mov
cmp
or
repnz
and
data16
mov
pop
retf
push
scas
xchg
sub
mov
sub
mov
inc
push
out
outs
pop
fnstsw
call
sbb
inc
lea
movs
jg
xor
xchg
test
out
cmp
pop
lahf
xor
stos
push
and
mov
push
or
sub
out
cli
stc
js
xchg
and
sti
jge
out
neg
(bad)
std
add
or
aaa
int
mov
and
adc
lock
xchg
pop
push
ja
inc
push
pop
pop
sbb
xor
xor
int
push
sbb
stos
xchg
mov
outs
mov
pop
inc
cmp
xor
xchg
add
inc
inc
pop
mov
push
jl
adc
imul
popf
inc
jp
ss
scas
mov
push
std
data16
sbb
or
loope
iret
mov
imul
scas
std
aam
shr
es
adc
mov
pusha
push
dec
xor
jnp
(bad)
mov
xor
cmc
into
outs
out
lods
imul
or
mov
stc
fst
call
cmp
add
sbb
inc
lahf
cmp
into
pop
and
jecxz
xor
pushf
in
or
pop
sub
jbe
mov
push
sbb
fcom
or
mov
popa
jns
mov
pop
sub
pop
sbb
sub
inc
xchg
call
mov
out
ror
push
pop
sbb
call
add
cmps
(bad)
mov
cmps
popa
mov
add
movs
icebp
int
xor
mov
mov
in
pop
jno
dec
adc
mov
and
ret
cdq
or
mov
xchg
lods
sbb
inc
mov
sbb
push
stc
test
or
jecxz
and
dec
push
xchg
(bad)
gs
out
or
dec
cld
cs
std
cmp
aaa
mov
rcr
pop
fwait
out
sub
or
xlat
stos
xchg
jecxz
jnp
lods
pop
loope
xchg
cli
iret
aas
push
dec
out
enter
push
or
mov
sub
lods
ins
lods
clc
mov
cld
call
out
push
repz
cmps
mov
add
js
xchg
out
mov
push
in
push
push
jae
cmps
and
jg
mov
push
push
aas
repz
pop
sbb
(bad)
mov
mov
pop
cs
mov
cwde
cmp
dec
outs
xchg
test
(bad)
sub
in
movs
outs
cmc
xchg
shr
call
dec
mov
movs
or
bound
xchg
enter
fwait
mov
sbb
data16
in
push
mov
loop
jbe
popf
and
test
outs
push
push
pop
jmp
jmp
jmp
and
pop
adc
cmps
sub
xchg
pop
(bad)
ds
jp
in
js
adc
rcr
sbb
movs
xchg
ror
adc
dec
or
dec
(bad)
push
xchg
and
or
shl
ret
iret
bound
cmp
push
sub
das
pop
mov
add
retf
shr
pushf
xchg
dec
dec
add
pusha
jg
adc
sub
out
mov
(bad)
repnz
into
dec
lock
sar
imul
out
sbb
mov
mov
retf
in
dec
xlat
dec
clc
dec
xchg
sbb
aas
cmps
vcmpss
mov
and
mov
call
push
or
fwait
test
xchg
push
sub
mov
adc
retf
pop
dec
mov
cmc
adc
mov
rcr
(bad)
outs
xchg
xchg
sub
call
(bad)
sar
mov
fld
pop
inc
hlt
rol
fldenv
ret
jbe
scas
int3
mov
in
and
mov
sub
mov
sti
fist
pop
cmp
xchg
call
push
loop
jmp
push
jmp
into
or
jmp
xor
rcl
or
pop
(bad)
add
out
xchg
mov
ja
sbb
and
ror
sbb
xchg
xor
add
mov
in
cmp
pop
inc
movs
xchg
out
std
shl
hlt
jg
mov
repnz
imul
pop
sahf
cmp
mov
push
nop
push
pop
dec
in
sti
sar
lods
popa
xchg
adc
bound
scas
cmp
adc
fs
push
inc
pop
mov
imul
fist
inc
sub
pop
loope
inc
cmp
mov
test
sub
mov
outs
lock
dec
add
jl
xor
retf
cmp
out
les
hlt
push
sbb
icebp
or
test
hlt
add
inc
out
ja
xchg
scas
sti
add
xor
fwait
es
push
ror
jae
cmp
and
dec
push
cmp
loope
push
add
mov
popf
lods
sub
adc
ficomp
jge
aas
loop
and
dec
mov
mov
jmp
bswap
push
push
int3
dec
sub
sub
xchg
mov
push
dec
cwde
jnp
dec
mov
or
sub
sbb
mov
imul
sub
daa
sbb
sub
retf
pop
adc
lahf
in
call
(bad)
inc
sub
dec
retf
push
sbb
cmc
mov
cmp
jp
in
cmp
aad
sar
xchg
js
and
popa
fcomp
shl
and
leave
out
sub
xlat
out
popa
imul
inc
mov
pushf
inc
ret
enter
(bad)
pop
mov
repz
sbb
push
mov
cli
sbb
ss
jns
or
pop
fcom
push
jecxz
outs
pop
cmp
push
imul
test
int
push
(bad)
cmp
or
jb
mov
push
shl
xchg
dec
sbb
push
inc
test
aaa
add
mov
mov
sbb
pop
cld
out
cmps
movs
stc
mov
mov
outs
jmp
and
adc
fnsave
and
(bad)
imul
ja
xlat
or
or
mov
dec
add
sbb
inc
rcl
movs
les
inc
push
push
cdq
data16
inc
retf
push
imul
das
add
fnstcw
pop
mov
add
cmp
out
fcom
mov
pop
loopne
jp
aas
shl
push
add
xor
ret
adc
pop
cmp
das
je
adc
imul
sbb
leave
test
sub
aas
js
pop
mov
scas
cmp
bound
jb
pop
xchg
mov
push
jnp
xchg
ret
cld
push
aaa
mov
dec
pop
push
mov
jmp
call
pop
stos
in
in
dec
sbb
jle
cmc
push
add
xchg
jecxz
cmps
out
rcl
in
cmps
sub
lods
iret
ins
sahf
mov
dec
mov
ja
sub
jno
test
jbe
js
cmps
test
pop
dec
mov
aam
dec
out
mov
cmp
das
fimul
xchg
adc
xor
and
mov
rcr
dec
imul
push
add
in
add
aam
inc
je
lahf
(bad)
push
icebp
mov
nop
movs
div
repnz
mov
ins
inc
and
cmp
stos
lahf
imul
loop
mov
aam
cmp
mov
movs
mov
xchg
loop
test
imul
jmp
sub
mov
mov
dec
xchg
bound
xor
push
mov
fstp
in
into
inc
add
sbb
sbb
cmp
cmp
pop
aas
pop
fwait
mov
xchg
mov
adc
(bad)
mov
lods
mov
ficom
es
pop
or
xor
jge
or
mov
mov
add
inc
lock
pop
sbb
shr
sbb
inc
inc
push
daa
nop
pop
mov
rcr
das
mov
push
aas
and
cmp
(bad)
nop
push
in
ffree
lods
push
das
aad
shl
cmp
jnp
sub
fisttp
xchg
dec
push
add
push
ds
fistp
test
std
into
and
push
out
adc
push
push
nop
mov
add
sbb
ins
lea
cwde
push
lods
cmps
aas
std
fwait
jp
jne
inc
(bad)
mov
cmp
sbb
das
cmps
inc
mov
sti
popf
inc
mov
mov
jb
in
popa
push
or
int3
push
repz
std
call
or
je
sbb
jge
jle
pop
jge
xchg
lods
sbb
mov
arpl
out
jp
imul
and
dec
add
in
icebp
pop
in
das
add
sub
add
inc
sub
dec
in
or
shr
mov
pop
lock
iret
push
lock
cmp
sldt
push
xor
and
pop
pop
jno
not
cmp
sub
jecxz
sbb
and
pop
pop
call
shr
jle
stc
mov
and
dec
outs
mov
jge
push
push
and
in
sub
stos
inc
push
inc
mov
shr
dec
xchg
lea
mov
imul
test
xchg
fadd
jmp
cwde
popf
loop
mov
pushf
les
adc
test
(bad)
push
je
adc
xchg
(bad)
mov
and
cld
bound
mov
adc
xor
fwait
jne
mov
loop
and
xchg
and
sbb
jmp
jmp
xor
inc
test
and
fnsave
mov
cdq
(bad)
jne
add
xchg
xchg
repnz
int
add
mov
(bad)
pop
cld
pop
mov
add
movs
sub
inc
sub
add
iret
inc
fst
hlt
sub
pop
pop
dec
imul
sub
mov
rol
int3
add
mov
leave
xor
add
or
mov
aad
dec
add
in
addr16
fwait
push
cld
add
and
addr16
xchg
test
cmp
mov
jle
lock
adc
sbb
sbb
scas
jb
test
inc
jmp
push
dec
push
mov
adc
call
inc
jo
inc
fldcw
pop
or
jns
cmp
or
mov
sub
push
stc
lods
dec
lea
rcr
fs
sub
(bad)
sbb
retf
cmp
lar
test
mov
aaa
mov
sar
inc
mov
stos
jne
outs
lahf
push
(bad)
fisttp
hlt
mov
out
(bad)
mov
xor
and
in
adc
cld
(bad)
dec
push
sub
jge
inc
movs
pusha
mov
scas
xchg
sub
jmp
mov
out
sbb
cwde
in
ret
out
dec
jmp
lahf
inc
push
jno
adc
and
faddp
pop
pop
fnstenv
loope
xchg
mov
or
cmp
push
rol
outs
stos
outs
mov
imul
cmps
jb
cdq
fnsave
push
xchg
sub
lfs
and
xchg
mov
xchg
arpl
inc
fisubr
mov
jmp
cmps
lods
mov
loope
aaa
ins
stos
leave
movs
int
dec
(bad)
call
or
mov
cld
test
xchg
adc
ss
push
pop
inc
pop
cmc
test
mov
mov
xchg
test
or
enter
push
je
repnz
xchg
push
mov
or
cmps
add
inc
xchg
ret
xor
out
test
mov
push
enter
push
dec
xor
cwde
nop
add
es
jp
mov
data16
repnz
repz
sti
push
push
sub
pusha
sbb
sub
xchg
xor
(bad)
fstp
xor
sub
cmc
(bad)
mov
adc
or
mov
sub
retf
iret
pop
das
or
mov
mov
paddq
imul
out
call
cmp
pinsrw
lods
nop
(bad)
mov
xchg
scas
sti
push
pop
arpl
sbb
mov
faddp
mov
leave
cmp
rol
or
add
xchg
popf
adc
jmp
adc
pop
in
xchg
add
inc
lock
rcr
jg
fnstenv
push
cmp
and
(bad)
lock
lock
repz
clc
in
movs
cmp
test
out
mov
cmp
imul
add
xchg
mov
mov
fld
xor
add
add
inc
or
xchg
or
es
retf
adc
hlt
arpl
dec
(bad)
int3
jl
mov
mov
leave
push
loopne
mov
inc
push
(bad)
mov
push
mov
shl
jb
ss
add
lods
push
ja
mov
test
inc
adc
bound
rol
adc
pop
sbb
cmps
push
mov
arpl
in
std
clc
aad
mov
push
js
jmp
cmps
adc
ficomp
pop
mov
jp
dec
add
mov
das
jbe
xlat
jle
cmp
adc
stos
je
cmp
cld
sbb
add
icebp
and
adc
pop
call
jae
pop
fidivr
mov
mov
cdq
jecxz
pusha
rcr
pop
fs
mov
ds
(bad)
outs
loope
and
and
xor
int
ficom
dec
cmp
cmc
and
enter
out
mov
inc
adc
adc
hlt
enter
push
push
mov
and
sub
cli
add
and
sahf
in
and
daa
push
fdivr
mov
mov
xor
and
lahf
dec
test
jmp
xchg
jnp
ins
ss
xchg
jle
push
xor
adc
jg
pop
jno
repz
ficom
cmp
test
cli
fisttp
cmp
or
call
in
adc
outs
call
ret
cs
pop
cmps
lahf
into
out
int
push
push
pushf
adc
or
push
clc
xor
dec
push
xchg
leave
and
out
sbb
xchg
mov
in
dec
cli
shl
leave
xor
push
daa
push
loop
outs
aas
sbb
mov
mov
in
dec
clc
dec
popa
pop
fild
aaa
mov
add
mov
pushf
aad
fmul
xchg
pop
dec
fsub
mov
ins
add
mov
lods
and
popf
xor
mov
pop
les
mov
jecxz
pop
test
jno
xchg
aam
gs
jmp
mov
sub
inc
lahf
fcomp
sar
and
retf
sbb
dec
repz
adc
cmp
loopne
and
lahf
imul
jg
lods
fs
xor
push
cmp
stos
ja
in
scas
ja
(bad)
out
enter
mov
in
mov
jno
mov
ja
rcl
sub
outs
nop
mov
shl
inc
dec
xchg
out
loope
push
int3
ret
outs
mov
cwde
enter
inc
jne
add
ror
stc
retf
add
test
jmp
mov
js
adc
movs
push
int3
xchg
cmps
mov
xchg
or
out
(bad)
imul
mov
stos
fst
mov
sbb
shl
mov
test
jo
stc
add
mov
jns
xor
rol
jno
addr16
or
dec
and
adc
jle
sbb
arpl
cdq
mov
dec
pop
inc
push
mov
sub
cs
dec
adc
cmp
sub
enter
clc
or
scas
push
gs
rol
cwde
pop
cmps
ja
inc
out
in
mov
aam
mov
push
mov
mov
or
mov
pop
imul
cmps
retf
dec
mov
bound
jo
inc
stc
mov
pop
(bad)
push
iret
or
pushf
ins
cmp
je
cmc
jmp
add
push
xchg
loop
add
and
iret
ret
loopne
add
iret
(bad)
addr16
pop
xchg
dec
pop
test
push
aas
iret
jp
ficom
inc
pop
nop
in
aas
push
jb
ins
pop
in
ins
dec
cmp
sbb
push
cwde
xlat
push
popa
bound
sti
fwait
pop
or
mov
push
ja
jne
dec
push
cmp
in
into
rcr
ror
hlt
xchg
dec
fimul
pop
(bad)
or
xor
or
jp
xor
popf
outs
test
loope
shr
mov
pusha
(bad)
in
mov
imul
outs
jne
scas
sbb
pushf
in
jae
test
jno
cmp
ficom
aas
out
mov
loope
es
cmp
std
jmp
test
pop
stos
jle
jbe
mov
or
pop
and
jmp
mov
ja
jmp
and
popf
dec
pop
dec
hlt
fwait
cwde
scas
mov
push
lock
je
jle
sub
add
inc
jne
or
test
mov
(bad)
repz
cmp
cmp
stc
arpl
or
(bad)
dec
jbe
call
jmp
fsubr
dec
and
outs
or
adc
aad
gs
mov
movs
movs
or
je
sub
jg
icebp
mov
jbe
jmp
push
cmp
cmp
inc
cmp
add
jbe
xor
cs
and
mov
or
pop
sbb
jg
mov
cmp
jmp
or
mov
pop
jmp
popa
pop
lods
fmul
mov
jg
xchg
push
sar
mov
int
xlat
cmp
sub
and
ret
jns
in
mov
xor
adc
jo
push
leave
not
adc
push
mov
xor
fisttp
dec
add
adc
psubusw
jmp
jmp
ret
nop
mov
mov
ss
popa
inc
movs
cmps
shr
in
and
or
xor
sti
aaa
movs
jmp
sti
or
pop
mov
fs
fs
xchg
cwde
and
xlat
hlt
mov
add
xor
push
sahf
sahf
push
xchg
sbb
sub
iret
inc
stc
and
push
lea
pop
out
(bad)
and
fst
xchg
xor
and
jne
stos
cmps
(bad)
int
sub
sbb
mul
dec
ss
out
jnp
call
ret
xor
push
cmc
les
int3
movs
cmps
cmp
fcomp
shr
jmp
mov
imul
stos
fstenv
std
mov
add
mov
cli
sub
dec
pop
mov
jne
cmp
inc
aaa
popa
lds
jmp
scas
int
pop
hlt
jp
lods
test
pop
in
xor
xor
(bad)
aam
jbe
mov
pop
jne
and
inc
jae
xchg
shl
pushf
fwait
mov
(bad)
dec
adc
cmp
jne
fistp
imul
test
(bad)
jb
cmc
cmp
imul
movs
dec
retf
mov
in
vpsubsw
or
sbb
add
loope
(bad)
sbb
sbb
or
mov
outs
or
xchg
scas
xchg
lods
pop
outs
pop
mov
xlat
push
icebp
and
push
mov
std
mov
add
or
loop
nop
jmp
out
add
xor
mov
jp
ds
(bad)
jg
es
mov
js
ret
bound
inc
mov
(bad)
lods
lea
add
sub
mov
and
sub
sar
mov
and
inc
(bad)
sub
push
fs
mov
mov
ds
fs
(bad)
cli
jmp
jo
jmp
inc
mov
jbe
mov
mov
push
and
enter
mov
popf
in
and
dec
in
out
push
cs
call
xchg
jnp
cdq
add
xchg
hlt
pop
cmp
cwde
jne
ds
in
daa
test
fadd
and
inc
test
jecxz
push
jno
cmps
test
ror
cmp
and
mov
cmp
imul
fisttp
adc
iret
test
xchg
push
movs
popa
and
fstp
pop
and
pop
xor
cmp
mov
mov
dec
add
mov
mov
lods
sbb
adc
cdq
leave
sti
add
pop
(bad)
jnp
mov
in
mov
ds
xor
retf
shl
xchg
xlat
mov
push
xor
(bad)
and
nop
xlat
repnz
inc
dec
xor
jae
in
nop
cmp
arpl
add
repz
cmp
(bad)
jg
retf
xor
ss
xchg
xor
imul
jmp
sub
adc
je
imul
aam
jne
jmp
pop
mov
(bad)
fisttp
rcl
inc
mov
es
int
in
(bad)
or
mov
push
dec
mov
fistp
loopne
call
jnp
lods
aaa
or
pop
inc
call
fcom
push
je
and
xchg
(bad)
fidiv
popa
sbb
mov
cmps
es
inc
imul
push
(bad)
(bad)
out
mov
nop
inc
mov
movs
push
xlat
inc
lahf
xchg
or
sub
loop
pop
fnstsw
jp
popa
pop
in
mov
dec
xor
aaa
aad
loope
movs
push
pop
xor
mov
sub
imul
loopne
hlt
pop
pop
dec
jo
mov
sub
cmp
(bad)
pop
xor
inc
retf
add
movs
pop
mov
cld
(bad)
jnp
out
add
(bad)
xchg
sar
lods
mov
std
jno
jmp
lods
inc
outs
push
arpl
popa
(bad)
lods
mov
mov
sti
fdiv
sbb
jb
inc
push
jp
out
sub
rol
inc
popf
jecxz
push
push
cmp
inc
or
sub
aad
mov
dec
iret
and
pop
xchg
cwde
bound
cdq
sub
call
pusha
mov
inc
mov
imul
mov
arpl
sar
jmp
aas
mov
jmp
xor
and
fisttp
jne
pushf
shl
dec
dec
mov
jbe
clc
dec
dec
xchg
mov
push
loopne
xchg
cmp
mov
outs
and
sbb
les
loope
jne
(bad)
mov
push
push
mov
enter
cmps
push
pushf
and
inc
imul
inc
ds
push
cs
sbb
push
pop
push
call
retf
repz
pop
std
mov
(bad)
test
cmps
add
ja
imul
xchg
es
icebp
jb
int3
leave
xchg
cmp
aam
stc
popa
mov
jne
mov
jo
mov
sahf
and
js
inc
pop
pop
inc
(bad)
inc
stos
scas
cmc
mov
xchg
push
jmp
(bad)
ret
push
test
in
(bad)
jl
clc
sub
lods
add
pop
(bad)
cmps
add
xor
or
cmc
push
in
out
out
rol
xor
pop
imul
lods
xor
or
fnstcw
sbb
jmp
fld
push
and
(bad)
call
xchg
inc
jg
out
cld
imul
fisubr
and
(bad)
jmp
mov
and
out
or
(bad)
mov
jge
ror
adc
(bad)
xor
pop
mov
aas
cmp
cmp
arpl
in
mov
mov
setae
dec
ss
out
ds
pop
stc
sub
sub
hlt
push
jno
cmp
jne
daa
jmp
cli
les
pop
cmp
daa
(bad)
ins
out
pop
dec
mov
adc
and
or
lods
mov
jae
cdq
ds
jns
ds
fmul
fld
imul
cmp
mov
and
je
jbe
in
(bad)
jmp
imul
clc
mov
movs
inc
aaa
pop
push
mov
push
mov
movs
rol
push
(bad)
xlat
push
es
in
pop
adc
mov
movs
dec
cmps
pushf
adc
fwait
mov
pop
imul
mov
add
dec
jg
leave
push
aaa
pop
imul
std
fwait
mov
retf
pop
mov
loopne
xchg
cmc
shr
and
jmp
cs
dec
jnp
mov
mov
jg
movs
pop
inc
xchg
clc
fs
das
inc
test
fcmovnbe
popf
mul
mov
and
shl
(bad)
pusha
jbe
xor
ret
pop
stos
and
push
dec
repz
push
(bad)
adc
retf
jnp
in
imul
jbe
pop
lods
push
jp
add
xchg
dec
lods
sub
gs
cli
jae
sub
add
es
inc
xor
daa
pop
pop
jnp
fs
sub
stos
sbb
xchg
cmp
fild
jmp
adc
(bad)
xchg
loopne
aas
stos
cli
xchg
cwde
movs
xchg
cmp
out
sbb
rcl
mov
xchg
mov
mov
lods
cmps
sub
fisubr
adc
shl
xor
je
ins
call
add
popf
ret
aam
sbb
lahf
clc
int3
mov
xor
ins
sub
stos
push
lods
add
mov
loop
inc
push
xchg
dec
dec
loopne
push
test
iret
cmps
mov
dec
ins
cld
jb
loop
cmp
and
test
cmp
or
ja
lds
(bad)
mov
test
jp
and
xchg
push
add
clc
pop
fisub
lea
cs
jmp
xor
inc
cmp
ret
sahf
cs
popa
cmp
into
push
and
int
loopne
push
lds
call
outs
ss
loopne
loopne
iret
shl
push
cmp
es
jno
call
in
in
cld
dec
fdiv
pop
dec
mov
xor
sar
jmp
sbb
fucom
inc
shl
xchg
rcr
sub
pop
fnstcw
xor
push
lods
or
enter
mov
pop
dec
sahf
dec
mov
add
not
xchg
mov
add
retf
scas
or
xchg
xchg
gs
mov
scas
inc
and
aam
lods
inc
ins
int
hlt
xor
sbb
mov
xor
std
jb
pop
repnz
mov
loopne
pusha
scas
pop
loopne
xchg
rcl
lock
push
sub
dec
jp
scas
xor
lock
xor
call
xor
inc
pop
cmp
jle
pop
xchg
fs
pop
push
fist
push
pusha
scas
cwde
xor
jmp
or
or
fisttp
add
pusha
mov
or
sub
retf
dec
jmp
es
lods
sub
sub
xchg
push
push
enter
inc
jae
xor
lds
je
mov
sti
mov
cs
sbb
cmp
fwait
in
dec
mov
adc
or
in
push
outs
sub
adc
xchg
or
add
pop
mov
or
cdq
jg
xchg
sbb
xlat
je
sbb
mov
push
jno
or
loopne
jmp
sbb
xchg
mov
adc
xchg
adc
xor
out
xchg
inc
xor
inc
mov
enter
ins
mov
mov
js
cmp
mov
rcl
push
aaa
std
push
daa
mov
mov
cmp
jmp
(bad)
cmp
jecxz
imul
scas
adc
adc
xor
xor
out
arpl
xor
(bad)
mov
mov
xor
fistp
add
mov
popf
out
and
xor
push
sbb
push
mov
and
loopne
dec
inc
lahf
mov
mov
sahf
loopne
cmp
cli
mov
xchg
idiv
xor
repz
push
ret
movs
ds
add
add
pop
push
jae
sub
stc
sar
faddp
cwde
mov
cmp
push
sub
bound
(bad)
movs
mov
out
cmp
pushf
xor
mov
popa
out
retf
mov
jb
aam
cld
jae
out
das
(bad)
mov
pop
int3
xchg
sar
(bad)
sbb
sbb
cwde
inc
push
mov
sbb
jb
jnp
int
ret
scas
sub
sbb
cmc
push
xor
adc
jle
inc
mov
cli
loop
mov
mov
retf
mov
fldcw
cmp
jp
pop
in
xchg
sub
out
mov
fnstcw
cs
or
call
ins
sub
xchg
jo
movs
int3
out
inc
or
test
cmps
in
in
pop
frstor
add
loop
(bad)
adc
scas
loop
sub
jecxz
arpl
xchg
pop
mov
adc
sub
inc
dec
xor
rol
jbe
mov
scas
sbb
enter
data16
loope
or
pop
sti
mov
and
ins
mov
pushf
mov
mov
xchg
xchg
movs
dec
adc
push
test
and
(bad)
pop
icebp
cmp
jl
pop
imul
inc
daa
pop
rcr
jge
pop
push
sbb
loopne
out
mov
gs
pop
pop
les
movs
cmps
jl
inc
bound
sbb
test
push
mov
icebp
cdq
test
cli
mov
add
push
mov
sbb
inc
rol
push
push
pushf
dec
xor
sar
xchg
mov
mov
ss
in
icebp
dec
call
push
and
cmc
ret
cmp
loope
xchg
shl
inc
pop
lds
push
push
sub
mov
inc
sbb
aad
stos
retf
adc
dec
outs
enter
mov
mov
test
mov
xchg
repz
cs
in
retf
pop
loopne
push
and
data16
enter
jmp
ins
push
cmp
test
inc
and
(bad)
loope
ins
icebp
js
inc
popa
arpl
pop
mov
sbb
jns
sub
or
xchg
jecxz
mov
push
inc
outs
mov
fsub
shl
adc
ret
mov
mov
and
pop
adc
fidivr
int
popf
xor
in
sub
mov
xlat
and
fwait
or
mov
cmp
sahf
dec
gs
lahf
(bad)
xor
clc
pusha
movs
in
sbb
sub
xor
enter
js
lods
jne
repnz
push
cld
cmps
push
jecxz
add
ds
cmp
popa
ins
or
pop
mov
add
clc
leave
mov
push
or
ror
lods
add
mov
pop
sbb
pop
cmc
cvtdq2ps
push
dec
xchg
adc
jp
mov
inc
int
jl
push
(bad)
inc
ja
xchg
mov
xchg
inc
dec
mov
pop
adc
jg
jle
push
scas
mov
les
push
sahf
mov
adc
daa
cmp
pusha
in
and
fwait
out
in
ds
fld
jecxz
push
out
sub
leave
xchg
jo
jbe
aas
cli
popa
mov
xor
les
sub
fnstenv
jp
or
pop
push
xchg
jae
mov
mov
add
add
sahf
add
xchg
popa
cli
int
adc
pusha
repz
std
mov
pop
mov
cmp
cmps
push
mov
sub
test
push
sub
ins
xor
xchg
push
out
(bad)
dec
ret
pop
adc
xor
cmp
jnp
push
push
inc
xchg
rcr
sub
push
std
adc
push
jb
movs
dec
pop
shl
scas
fwait
call
shl
or
jb
setb
push
not
and
ins
push
and
cwde
stos
mov
mov
xor
jg
add
cli
rcl
jnp
clc
ins
sbb
std
aad
push
mov
das
imul
call
lods
xchg
sbb
xor
pop
jmp
or
jo
rcl
xchg
pop
adc
(bad)
cmp
js
leave
xor
cmp
pusha
sub
fdiv
cmc
dec
arpl
addr16
aam
adc
pop
inc
les
mov
mov
adc
lds
jns
dec
mov
arpl
jae
sahf
ror
movs
imul
stos
gs
xor
shl
call
sub
push
or
push
jmp
cmps
and
mov
add
xchg
fwait
cmps
mov
jbe
das
cmp
cmp
xchg
lods
fs
cmp
sub
mov
cwde
pop
in
fwait
adc
sub
xor
sbb
fdivp
sub
sub
shl
jge
pop
ja
and
cli
add
mov
push
mov
repnz
iret
(bad)
shl
sbb
mov
or
ror
jmp
jo
fadd
adc
sub
add
adc
adc
iret
add
and
or
stos
iret
sbb
sbb
lahf
adc
or
enter
into
sahf
cmp
pop
mov
adc
(bad)
pop
mov
pusha
je
mov
movs
orps
imul
add
push
mov
shr
or
add
adc
not
mov
pop
xchg
push
gs
call
out
pop
sbb
push
cmp
or
cmp
mov
rcr
adc
mov
int3
xor
and
sahf
xchg
pop
mov
jp
xor
in
push
shl
cli
outs
inc
or
out
push
pop
arpl
cmps
or
aam
jo
mov
out
popf
loop
test
jmp
and
sahf
cld
dec
das
mov
sahf
cld
sub
(bad)
pop
pusha
sbb
mov
loop
adc
sub
gs
scas
mov
mov
retf
jmp
jle
cmp
add
jecxz
fist
cmp
sbb
mov
push
xor
push
mov
mov
push
fild
pop
lds
mov
into
push
out
push
icebp
pop
add
pop
sbb
sbb
cmc
inc
dec
add
fisub
xlat
retf
imul
mov
xchg
(bad)
lea
mov
fiadd
cdq
mov
imul
jbe
popf
sub
loop
and
xchg
retf
sbb
sub
imul
lock
and
cmps
gs
jmp
xor
cwde
push
push
mov
pop
mov
cmp
add
fwait
in
dec
sub
or
xchg
std
push
xor
dec
pushf
sub
dec
mov
pop
cli
popf
mov
mov
push
mov
call
mov
in
les
inc
fsubp
sub
out
mov
jecxz
sbb
inc
cmp
cmp
sti
mov
scas
shl
sbb
add
pushf
pop
push
fsubr
in
int3
cmps
mov
call
pop
sbb
scas
ins
jge
(bad)
(bad)
add
mov
aam
nop
push
jo
jno
push
xor
xchg
ja
loope
fnsave
xor
ficom
mov
jl
shl
ja
out
lock
sti
fisttp
push
push
ja
repz
xlat
dec
retf
mov
push
jo
je
adc
std
(bad)
fist
ror
(bad)
inc
add
jmp
add
cwde
jns
popf
mov
lods
in
sbb
push
leave
out
jno
cs
(bad)
jge
cmp
in
and
mov
mov
dec
outs
adc
popa
loope
stos
and
(bad)
mov
movs
sub
js
adc
mov
adc
push
adc
sbb
mov
sbb
data16
xchg
fild
xor
jae
daa
push
push
pop
sbb
mov
imul
lea
ror
popf
sub
xlat
cs
jno
sub
js
cld
fucomi
and
in
push
sbb
lahf
cmp
fiadd
dec
test
popa
jnp
enter
sbb
pop
sar
in
sbb
xchg
(bad)
jl
(bad)
out
inc
mov
cs
cmps
or
movs
jb
and
std
cmps
jmp
pop
outs
nop
fnstenv
xchg
adc
inc
adc
dec
pop
add
call
sub
addr16
(bad)
out
push
pop
and
retf
mov
xchg
mov
mov
xchg
cmp
aad
and
mov
and
mov
mov
or
aas
pop
mov
icebp
and
jmp
aas
stos
and
or
dec
aam
rcl
pop
sbb
fiadd
int3
xor
cmc
dec
inc
mov
fsubr
inc
xchg
mov
les
pusha
jnp
pop
fst
in
fwait
inc
pop
mov
inc
mov
clc
and
dec
and
or
aam
(bad)
aad
jl
arpl
inc
or
hlt
sbb
aam
scas
mov
jno
or
and
ss
adc
dec
repnz
bound
inc
lock
jo
cwde
cwde
sub
and
push
cmp
ins
call
and
push
shl
or
xlat
fistp
cmp
inc
sbb
outs
(bad)
push
push
cmps
mov
sub
cmps
pop
rcl
hlt
or
xchg
iret
push
sar
inc
and
cmp
fld
int
push
std
rcr
push
dec
loop
imul
sti
lahf
mov
or
loopne
pop
lods
jbe
data16
xchg
and
xlat
sub
jecxz
pop
xor
gs
(bad)
out
jbe
cmp
call
push
xor
int
sub
mov
mov
pop
mov
in
pop
ja
mov
mov
lods
push
test
or
dec
bound
mov
sbb
lahf
imul
pushf
cli
es
enter
das
and
push
neg
dec
push
dec
xlat
inc
push
test
add
icebp
repnz
mov
out
add
ror
sub
cmp
call
sbb
(bad)
sbb
jb
iret
push
aam
iret
ror
test
stos
jmp
ds
mov
loope
mov
mov
mov
fadd
(bad)
push
pop
and
popa
not
dec
or
jo
add
stc
pop
(bad)
fsubrp
cmp
cmp
cld
and
inc
push
inc
jmp
setp
xor
sbb
lds
ret
add
xchg
mov
mov
fisubr
jno
aad
xchg
mov
(bad)
dec
mov
mov
cmps
mov
push
fsubr
mov
mov
adc
xor
mov
jp
shr
xor
mov
cmp
push
movs
adc
lods
shl
retf
in
iret
es
mov
inc
out
jmp
dec
adc
sub
sub
jp
dec
mov
adc
or
das
repnz
mov
call
cmp
out
push
inc
in
je
pop
out
mov
jl
mov
bound
ret
jg
mov
push
inc
popf
add
cmps
nop
xor
fwait
mov
cmps
shl
addr16
rcl
js
(bad)
push
cmp
cmps
test
lock
scas
ss
and
add
lods
repnz
retf
retf
lods
pcmpeqw
xchg
cmp
repnz
ins
push
ffreep
push
ins
fucomi
jle
cmp
cmp
out
inc
and
retf
jns
mov
mov
clc
sub
xchg
jp
add
mov
pop
retf
in
sub
jle
and
and
adc
cwde
sbb
adc
cmps
aad
ins
adc
mov
adc
(bad)
js
daa
arpl
inc
bound
xor
hlt
push
std
mov
push
ins
imul
or
ins
mov
data16
scas
push
jae
imul
stos
mov
mov
fstp
xor
xchg
mov
arpl
test
das
mov
sub
xchg
das
pop
xchg
(bad)
enter
and
cmp
jmp
lea
cmp
push
movs
cmp
jl
imul
cmp
inc
lahf
add
push
das
push
rcr
into
jb
mov
aam
lods
or
stos
push
push
mov
pop
jbe
jb
mov
rol
pusha
mov
push
sahf
and
dec
inc
popa
sbb
and
xlat
call
scas
push
mov
fwait
and
repnz
dec
inc
add
mov
xchg
inc
dec
xchg
stc
inc
repz
or
or
pop
inc
fneni(8087
inc
aad
and
pop
mov
add
inc
lods
and
mov
push
xor
fs
dec
fimul
shl
sbb
add
add
movs
xchg
sbb
mov
sub
jmp
cmp
cdq
add
pop
std
and
jbe
jg
fs
iret
outs
out
sub
mov
and
add
sub
mov
enter
xchg
shr
sbb
xor
sub
cmc
xor
push
cmps
jp
pop
call
cmp
sbb
js
push
and
addr16
mov
and
je
pop
sbb
mov
inc
xchg
fnstenv
comiss
rol
xchg
adc
sbb
js
pop
outs
mov
imul
out
lahf
iret
sub
int
mov
add
popa
(bad)
call
push
mov
sbb
pop
sbb
ins
sahf
adc
mov
loopne
cmp
sbb
adc
pop
mov
pop
xor
add
sub
pop
xor
cmc
inc
movs
or
ds
hlt
rcl
cli
mov
pop
or
retf
dec
dec
in
pop
and
out
pushf
sbb
or
dec
xchg
cmps
xchg
or
dec
je
mul
jecxz
push
push
push
mov
xchg
sub
cmp
push
in
movs
inc
lds
or
movs
shl
es
out
(bad)
mov
cli
repnz
sub
mov
lds
mov
test
add
cdq
jg
jp
(bad)
xchg
cmp
lds
mov
jo
dec
ins
push
jmp
mov
jo
or
jle
popa
repz
(bad)
fbld
in
add
pop
push
jp
rcr
lods
call
cld
cmp
ss
dec
pop
rol
inc
xor
stos
movs
sub
or
add
and
sar
xor
popf
sub
cmp
mov
std
rcl
mov
in
cmp
sub
mov
rcr
pop
push
cmp
fisttp
jns
xor
(bad)
scas
sub
lock
mov
popf
movs
fld
lock
push
repnz
out
xlat
imul
jg
imul
imul
call
lods
and
addr16
int
sar
iret
test
out
lahf
cmp
ror
mov
(bad)
cmp
xchg
stos
and
push
fst
inc
inc
mov
push
mov
outs
pop
cwde
add
pushf
mov
aam
jmp
clc
popf
lahf
iret
in
in
push
mov
scas
fs
and
xor
or
push
inc
jns
sbb
xor
cmp
pop
jg
repnz
push
add
jae
cmc
jae
pop
xchg
xor
aam
xchg
pop
sbb
dec
out
jecxz
ds
dec
xor
(bad)
retf
lock
add
xchg
xchg
mov
lods
fnstsw
xchg
or
cmp
(bad)
jne
dec
pop
mov
mov
rol
cmp
rcl
out
pop
js
stos
ins
inc
mov
sub
push
jnp
iret
mov
push
jl
je
xor
and
pop
addr16
jb
xchg
jo
cld
ins
retf
pop
sar
addr16
push
and
scas
cdq
lods
sar
inc
arpl
ins
ret
xlat
dec
jge
adc
add
sub
mov
pop
je
stos
ds
es
push
dec
inc
cmp
(bad)
dec
mov
sub
sbb
mov
int
scas
test
sub
retf
loopne
fldenv
arpl
push
push
js
and
add
test
rol
sbb
push
dec
and
add
stos
cli
fisubr
mov
cdq
push
pushf
aas
pushf
jmp
sbb
sbb
aad
add
sub
(bad)
gs
lods
movs
pop
pop
pusha
pushf
and
in
adc
xor
cmp
sbb
addr16
or
es
or
sub
sub
inc
test
sub
xchg
adc
(bad)
sbb
pop
mov
mov
hlt
aam
cmps
or
cmc
stc
adc
dec
inc
pop
jecxz
ss
add
cmp
inc
inc
cmps
arpl
mov
sub
sub
lods
adc
popf
loop
pusha
and
jo
jnp
out
std
loope
std
xchg
push
jp
cs
les
ss
mov
pop
add
cs
dec
or
iret
cmp
xor
lods
fisttp
mov
inc
rcl
cmp
mov
adc
adc
gs
pop
cmps
iret
xchg
fsub
mov
mov
bnd
cmp
and
cwde
mov
ins
nop
sbb
jmp
sti
and
jno
fst
pop
retf
shl
pop
xchg
cmp
add
fimul
scas
repz
ins
pop
lea
loop
adc
push
scas
mov
out
and
pop
mov
add
gs
test
dec
mov
stos
data16
icebp
es
outs
sbb
jmp
out
xchg
inc
cmp
mov
mov
sbb
adc
es
fwait
pop
and
std
stos
mov
add
pop
movs
popf
mov
(bad)
push
or
sub
push
jge
ror
jmp
xchg
das
bound
movs
movs
inc
add
nop
mov
dec
sbb
shl
add
xchg
inc
iret
cmp
mov
ja
je
cmp
adc
repz
pop
es
cmp
pop
nop
lock
mov
adc
push
(bad)
loop
std
cmp
pop
xlat
jmp
mov
std
add
(bad)
jmp
xor
ret
xchg
sbb
cs
xchg
push
pop
mov
test
sbb
mov
dec
push
ins
imul
push
leave
pop
push
gs
add
jmp
popf
add
sub
mov
mov
sar
es
add
push
mov
cwde
loop
pop
cwde
out
hlt
xor
lods
xchg
cmp
mul
push
pop
push
fmul
into
cwde
mov
int
or
fsubr
mov
xor
mov
jg
ret
mov
enter
jb
sbb
data16
mov
icebp
push
scas
adc
mov
int3
adc
mov
and
push
mov
addr16
icebp
xor
jp
int3
int
out
scas
out
fs
iret
loope
add
xchg
test
pop
ja
dec
or
mov
sub
test
inc
or
dec
hlt
cmp
adc
(bad)
push
push
jne
or
push
sahf
(bad)
pop
mov
ret
int
dec
push
sub
shr
sti
xchg
sub
(bad)
int3
mov
push
cmp
sub
sar
xor
xchg
pop
sub
jne
aam
test
test
fwait
popf
int
or
je
retf
ror
jmp
push
push
push
sub
in
push
cmp
xchg
enter
add
sub
jb
bound
(bad)
xor
or
add
xor
jg
dec
sbb
xchg
(bad)
nop
push
jg
lods
in
pop
mov
daa
stos
in
fsubp
push
imul
cmp
(bad)
stc
pushf
fcomp
mov
jnp
jae
xchg
les
cwde
ficomp
jl
cmp
lods
lods
inc
daa
aas
mov
dec
and
sbb
fwait
mov
outs
push
data16
cld
les
in
xor
dec
push
enter
mov
sbb
(bad)
xchg
popf
or
in
fist
imul
adc
pop
fdiv
and
pop
(bad)
push
cwde
out
adc
mov
stc
out
idiv
xchg
pop
xlat
cmp
mov
movs
adc
ret
cmp
pop
xlat
jle
outs
cs
aaa
push
jp
xchg
mov
inc
mov
pop
adc
mov
xchg
cld
test
jmp
not
shl
xor
pop
mov
adc
ret
in
jl
mov
stos
sbb
hlt
into
outs
cmp
mov
xchg
xchg
add
loop
(bad)
pop
rcr
fcomp
sub
inc
mov
ins
retf
lds
mov
mov
and
inc
mov
xchg
mov
xlat
retf
mov
jmp
fdivrp
add
inc
rcl
adc
mov
jnp
stc
xchg
mov
ins
or
outs
mov
xchg
add
dec
pop
jne
xchg
sahf
ret
call
ins
xor
(bad)
loopne
scas
xor
pop
adc
add
push
cmps
mov
or
mov
jne
mov
cmp
and
inc
dec
pop
xor
pop
mov
push
int3
xlat
sbb
sbb
addr16
sub
shl
int
aaa
cmp
hlt
outs
fisttp
call
xchg
nop
sbb
cmps
mov
out
jecxz
xchg
or
nop
cld
mov
xor
mov
mov
out
not
es
neg
push
xchg
rcl
fs
xor
dec
shl
sar
fnstcw
hlt
inc
loopne
into
pop
push
and
ja
cdq
sahf
sti
pop
jmp
pop
rol
les
fadd
xchg
iret
int
inc
dec
cmp
test
(bad)
int
jmp
stos
arpl
cmp
dec
in
or
mov
adc
lods
mov
push
in
(bad)
loopne
cmp
inc
xor
dec
add
popa
mov
sar
mov
mov
icebp
dec
loop
test
sbb
add
xchg
sahf
pop
jnp
je
ins
sbb
int3
hlt
pusha
ss
mov
jmp
push
int3
hlt
nop
test
inc
xchg
adc
imul
nop
push
cmp
or
mov
mul
xchg
cmp
fdivr
push
adc
pop
mov
call
out
mov
enter
mov
mov
mov
sub
sti
repz
mov
fld
xchg
aas
rcr
push
cmp
push
mov
and
aaa
pop
and
push
repnz
(bad)
out
and
add
push
xor
add
std
pop
push
or
mov
mov
pop
pop
jp
jbe
xor
shl
add
mov
lock
push
push
push
in
cmpxchg
xor
sub
xchg
out
lods
xor
xor
mov
push
jnp
retf
fild
test
ins
shr
push
cmp
ror
jno
fmul
lds
outs
cmp
aad
sub
ins
inc
fisttp
mov
stos
pushf
and
imul
push
js
mov
and
cli
jb
test
push
mov
pop
aaa
mov
fsub
adc
lods
cmp
mov
or
sub
cdq
sbb
xchg
(bad)
pop
inc
mov
dec
pop
or
in
mov
sub
into
sbb
jmp
fs
(bad)
out
or
mov
mov
fsubp
sbb
mov
xor
fcmovnbe
in
pop
call
fs
mov
add
mov
mov
push
and
popf
lea
xchg
and
int3
jg
inc
loope
push
pop
or
mov
mov
dec
not
dec
rol
push
ret
pusha
loope
imul
stos
mov
cmps
xchg
mov
sub
jne
push
int
dec
cmp
jb
jg
xchg
je
sbb
jl
or
push
pop
cld
mov
daa
cmp
mov
pop
jle
push
or
(bad)
mov
mov
lea
cld
adc
lea
loop
jecxz
xchg
jno
in
jno
out
or
cmps
cmp
jb
sub
out
loope
movs
aaa
jae
inc
and
jmp
jg
lock
iret
movs
jg
(bad)
(bad)
fst
aaa
cmp
push
mov
jg
call
xchg
repz
daa
push
mov
enter
repz
shl
sub
xchg
and
scas
sub
xchg
jmp
ins
mov
xor
push
push
xor
into
popa
push
ins
pushf
adc
cmp
sbb
ins
sbb
add
inc
xor
cld
mov
mov
sub
data16
das
fwait
mov
inc
xor
ret
mov
cmp
adc
add
cmp
mov
mov
or
dec
cmp
scas
sbb
sub
inc
mov
mov
leave
leave
push
int3
cmp
jo
lods
cwde
push
cmp
(bad)
out
fstp
sbb
and
mov
imul
cwde
mov
mov
(bad)
pop
jl
out
cdq
pop
xchg
lock
mov
loop
push
cmp
jge
movs
lock
jo
mov
call
push
inc
jnp
mov
pop
bound
sub
fcom
and
inc
fmul
push
(bad)
jmp
ret
sbb
into
adc
iret
(bad)
pop
enter
punpckhbw
fbld
pop
mov
mov
fidivr
xchg
jnp
fs
pop
jg
sbb
cld
push
dec
xchg
dec
xchg
jno
ss
enter
sti
or
dec
test
rcr
scas
or
cli
in
imul
dec
pop
or
inc
xlat
in
push
cmp
or
mov
mov
cld
xchg
mov
leave
xchg
mov
xchg
leave
retf
out
mov
jno
sbb
xor
mov
xlat
fs
(bad)
int3
cdq
xchg
jb
inc
int
cld
fdivr
xchg
mov
fisttp
dec
sbb
lea
add
or
pop
adc
sbb
xchg
fstp
pop
sbb
rcl
dec
mov
out
cmp
out
stos
mov
out
sub
xor
retf
jmp
inc
and
shr
mov
mov
mov
xor
pop
push
xor
pop
lea
adc
pusha
dec
xchg
push
shr
mov
mov
imul
push
retf
icebp
lds
xchg
xchg
push
pop
jb
popf
repnz
adc
inc
ret
pusha
and
cmp
dec
inc
aad
add
xor
inc
rcl
movs
and
and
push
lea
lahf
test
lahf
stc
pop
and
in
data16
or
adc
push
and
add
in
das
addr16
dec
pop
mov
adc
dec
stos
dec
cmps
jp
cli
mov
sub
(bad)
push
xchg
pop
xchg
and
lahf
test
and
xor
nop
out
(bad)
fadd
mov
pop
cmps
xchg
sbb
xor
mov
inc
ins
fdiv
mov
cmp
outs
push
sub
shr
call
mov
dec
bound
add
sbb
push
add
ja
add
mov
mov
lods
pop
xchg
das
test
and
xchg
or
fwait
pop
add
stos
adc
xor
lods
push
cmp
xchg
imul
cmps
xor
movsx
movs
into
sub
pop
stos
or
mov
outs
sub
cmps
mov
enter
add
mov
mov
cmps
popa
or
jl
(bad)
retf
test
adc
cmps
adc
push
lds
cmc
xor
dec
imul
or
cmp
cmp
jl
fcmovb
mov
mov
shl
and
js
mov
sbb
dec
shr
xchg
mov
test
ror
mov
jbe
daa
stos
sti
and
sti
jle
movs
jnp
xchg
and
mov
jno
dec
and
inc
sar
jecxz
xor
pop
jecxz
jge
ret
xchg
leave
cmp
sar
retf
leave
add
pop
xchg
mov
sbb
das
jp
test
mov
xlat
addr16
jp
jb
in
sbb
xor
mov
or
cld
inc
loop
iret
jo
fdivr
gs
fldenv
xor
adc
mov
sbb
push
add
or
outs
sbb
mov
ret
ficomp
adc
gs
imul
jbe
dec
call
unpckhps
nop
lock
sar
bound
mov
mov
or
xchg
in
push
movs
pushf
xor
mul
popa
aaa
lods
pushf
sbb
push
je
test
sahf
sbb
data16
(bad)
adc
inc
test
adc
push
test
mov
clc
ja
rcl
(bad)
lods
push
test
shl
leave
fisubr
fisubr
jns
xchg
pop
pusha
xor
es
jg
or
jl
ja
int
test
in
sub
or
popf
lods
mov
dec
mov
sub
das
jne
mov
mov
outs
cmp
xchg
call
mov
inc
or
mov
nop
dec
(bad)
pop
bound
ja
cmps
(bad)
(bad)
sti
mov
jmp
mov
data16
add
icebp
in
inc
or
pop
ss
fisub
pop
pop
push
pop
push
test
cmp
push
mov
lea
adc
std
repnz
mov
call
iret
aas
push
in
adc
add
xchg
dec
jge
frstpm(287
out
add
mov
push
in
lahf
lahf
stos
scas
fdiv
into
or
or
mov
pop
jnp
sar
or
out
out
xchg
ja
mov
aam
adc
pop
pop
or
pop
cs
inc
stc
jno
data16
inc
inc
lods
jge
and
pop
daa
mov
dec
out
cmc
mov
aam
dec
clc
mov
std
jmp
call
jae
inc
xchg
sahf
xor
xchg
fcomp
nop
rcr
xchg
or
adc
retf
fwait
cmps
xor
pop
loop
push
addr16
sub
lds
adc
outs
cmp
sbb
adc
adc
xchg
xchg
sar
mov
call
push
push
mov
pop
rcr
sbb
movs
les
jb
dec
push
mov
test
pop
arpl
dec
enter
rcr
in
dec
es
mov
jnp
or
push
jg
mov
mov
xchg
xchg
loopne
mov
sub
push
aaa
adc
pop
pop
test
sbb
mov
pop
fimul
stos
retf
add
mov
and
stos
gs
and
arpl
pop
test
add
fsubr
and
sbb
jmp
popf
xlat
xchg
cmp
in
mov
ret
repz
fsub
call
or
dec
jne
(bad)
psrlw
pusha
xchg
test
mov
sbb
adc
sti
adc
mul
inc
dec
inc
or
and
xchg
mov
repz
jno
push
cli
(bad)
lock
xor
adc
or
jmp
popf
repz
sbb
inc
movs
ins
pop
call
popa
adc
ja
xchg
jl
mov
test
stc
push
cld
dec
fs
fdivr
xchg
sbb
ja
jg
fnstcw
outs
add
sub
mov
push
jmp
pop
scas
xlat
scas
and
fwait
lea
sub
js
movs
aam
ins
int
mov
(bad)
pop
mov
icebp
(bad)
std
aad
js
je
es
push
outs
adc
and
jmp
push
pop
dec
dec
adc
and
popf
test
lds
ret
inc
and
mov
xchg
pop
mov
adc
ficom
cmp
nop
jne
fiadd
(bad)
mov
ret
int3
sbb
push
pop
jns
mov
aaa
jmp
cmp
jmp
pop
cdq
sti
xor
push
mov
movs
push
xor
mov
sub
pop
or
cmp
pop
mov
mov
fld
(bad)
iret
sub
push
aaa
neg
inc
fbstp
inc
lock
lds
hlt
sub
pop
mov
mov
mov
mov
clc
push
dec
inc
mov
js
ss
and
mov
mov
mov
push
dec
cmp
jno
sbb
es
push
inc
jb
dec
push
adc
outs
out
push
mov
cmp
sub
add
popf
aaa
and
pop
dec
mov
xchg
(bad)
retf
ss
mov
xor
pop
outs
add
dec
nop
(bad)
adc
dec
shl
mov
cs
sub
das
adc
in
cmp
sti
cmps
aaa
and
pushf
mov
outs
mov
xor
repnz
xchg
jl
sti
add
pop
iret
fisub
pop
adc
sub
mov
push
nop
or
inc
inc
jecxz
loope
adc
js
add
stc
dec
add
jno
out
(bad)
dec
add
pusha
cs
inc
in
loopne
jp
push
test
mov
pop
rcr
jmp
jno
cmps
pushf
pusha
dec
addr16
dec
fistp
stc
push
call
pop
mov
stos
push
and
jg
mov
or
dec
jb
dec
cld
and
sar
inc
jmp
push
adc
cmc
scas
scas
scas
xor
push
fadd
int
retf
or
loopne
or
mov
add
mov
pop
add
push
fimul
or
cmp
add
mov
int3
out
push
nop
in
fiadd
add
fcomp
jecxz
call
fistp
dec
mov
dec
loope
push
sbb
xchg
or
inc
lahf
fistp
or
sbb
and
jmp
aad
sub
mov
inc
jne
dec
ss
push
stos
dec
mov
or
dec
xchg
mov
dec
(bad)
stos
sub
mov
jo
mov
push
daa
adc
and
cs
adc
shl
xchg
or
and
loopne
vmovss
loope
repnz
and
clc
pop
dec
push
clc
movs
ja
out
rol
lock
sub
inc
fwait
scas
or
packuswb
sar
mov
xor
mov
mov
or
mov
xor
add
pop
hlt
xchg
inc
jge
add
mov
fcmovnb
xor
mov
(bad)
jecxz
inc
xor
fdivrp
or
movs
pop
not
mov
lods
fisttp
not
repz
jp
int3
aad
cli
mov
in
mov
pop
jle
push
push
jmp
and
sbb
xchg
shr
out
in
repz
rol
inc
pop
sbb
xor
and
popa
ss
bound
mov
cmps
aaa
scas
adc
int
xchg
ss
adc
aam
jno
adc
xor
sub
lea
scas
popf
in
test
mov
cwde
adc
or
pop
retf
xor
sub
cmc
scas
pop
and
dec
(bad)
inc
(bad)
(bad)
pop
jae
xchg
push
mov
aad
and
(bad)
sbb
mov
dec
jp
into
cmp
mov
mov
push
js
mov
mov
imul
out
pop
adc
rol
xchg
stos
mov
jge
mov
test
(bad)
out
rcl
and
into
or
mov
push
movs
clc
loopne
push
das
jg
dec
mov
xchg
mov
push
add
sbb
ficomp
xchg
lods
dec
lods
fild
adc
lds
adc
adc
cmp
push
or
test
stos
adc
test
push
cmp
mov
inc
mov
sub
rcl
(bad)
jo
cs
sar
aaa
popf
and
es
jle
mov
pop
shl
xchg
fisttp
push
push
addr16
sub
jp
jge
mov
pushf
and
or
xchg
pusha
stos
or
stos
adc
std
jecxz
add
mov
std
pop
test
in
adc
cld
pop
ret
cmps
lea
adc
clc
aaa
test
enter
std
jg
(bad)
mov
xor
std
sti
add
fadd
in
ins
inc
dec
pop
jo
addr16
sbb
out
pop
es
mov
cmc
data16
mov
cwde
stos
fistp
fcmovbe
into
rcl
std
cld
inc
mov
dec
mov
test
shr
jnp
pop
(bad)
jnp
push
das
push
popa
xor
jge
jmp
ss
aaa
and
cmp
jg
pop
push
out
rol
mov
push
out
pusha
les
(bad)
cmp
cmp
xchg
rcr
jge
jle
xchg
jl
pushf
daa
xor
das
pop
in
shr
adc
mov
test
or
jmp
xor
push
mov
out
test
sti
mov
mov
pop
(bad)
cmp
inc
cmp
rdpmc
iret
mov
xchg
mov
nop
fcomp
xchg
and
push
and
shl
xchg
cs
std
cmp
pop
movs
sbb
enter
clc
maskmovq
idiv
pop
(bad)
cmc
xor
and
adc
popf
dec
pop
sub
dec
cmc
loope
or
lods
daa
push
lea
sbb
xor
sbb
je
adc
(bad)
xchg
push
sub
jle
dec
call
aas
retf
sub
xchg
cmps
pop
xchg
jmp
aas
dec
sbb
mov
rol
or
jecxz
nop
icebp
jno
jno
pop
cmp
mov
mov
aad
add
push
mov
jb
push
sbb
mov
or
int
cdq
stos
xlat
mov
pop
ss
mov
or
fstp
pop
sbb
rcl
jae
push
mov
mov
xor
pop
add
test
xchg
pop
sub
call
sar
jmp
sub
std
cmps
fdivr
mov
lahf
xchg
xor
xor
sub
lock
mov
push
cmp
iret
mov
pop
xor
nop
inc
xchg
je
add
dec
sbb
pop
mov
mov
sub
or
(bad)
gs
scas
inc
fs
and
dec
push
push
pop
pop
jecxz
push
loope
fmul
rol
in
sbb
add
iret
pop
(bad)
xchg
jl
jae
popa
hlt
cmp
jg
mov
jg
clc
test
push
cmps
imul
dec
push
dec
retf
xor
retf
lods
cmp
adc
push
ds
jecxz
cs
push
sbb
mov
xor
and
jl
dec
pusha
cmp
push
dec
in
jp
or
cmp
xchg
les
pop
adc
mov
int
mov
cmp
push
das
mov
jmp
ins
mov
jnp
xor
out
mov
mov
xchg
sahf
xor
or
sti
push
sub
cmp
xchg
push
pop
jns
mov
dec
and
jbe
push
add
inc
cmp
mov
retf
stc
push
xchg
lock
mov
jmp
ins
inc
add
daa
in
push
mov
dec
out
aas
push
ds
fs
lods
fwait
mov
imul
dec
or
stc
idiv
fnstsw
adc
cli
inc
sbb
pop
test
call
adc
cmp
icebp
ja
out
shl
jg
movs
fistp
jae
mov
jl
add
stc
xlat
jnp
retf
les
fwait
cmp
push
xchg
sub
jbe
je
lods
mov
leave
pusha
or
adc
inc
jns
and
push
inc
gs
ds
jns
loop
push
(bad)
mov
pop
sbb
mov
popf
adc
xchg
ds
add
movs
inc
cmp
into
pop
adc
adc
(bad)
jmp
adc
lock
mov
cdq
and
push
push
repnz
push
dec
pop
sub
icebp
outs
push
gs
mov
fs
xor
inc
icebp
pop
out
cmps
in
cmps
dec
mov
test
repnz
ins
push
inc
cmp
add
pop
adc
cmp
push
das
mov
pop
sbb
popa
in
adc
nop
push
loope
or
jg
xor
sub
sbb
inc
mov
pop
test
div
pop
pop
pop
fnstsw
pop
fdivr
out
(bad)
jp
cs
mov
pop
movs
sbb
je
jecxz
jge
adc
xlat
mov
mov
and
sub
sahf
push
movs
cdq
push
cmps
test
sub
dec
or
or
or
push
xor
cmps
xchg
pop
es
inc
xor
jne
xchg
test
adc
sahf
ret
dec
push
fdivrp
xor
sub
jp
mov
pop
pop
scas
fidiv
xchg
dec
stos
jg
pop
adc
aas
adc
xor
add
aam
inc
cmp
xchg
les
mov
dec
stos
test
inc
and
call
and
cmp
jle
adc
xor
pop
ja
stc
and
fcomp
(bad)
test
idiv
jl
sar
iret
(bad)
retf
xchg
lods
lods
(bad)
push
mov
cld
mov
out
lods
jp
icebp
pop
cdq
sahf
fisub
or
adc
cwde
mov
mov
ret
ss
xchg
dec
xor
jg
adc
cmp
rcl
pusha
dec
ficom
aad
dec
cmc
(bad)
pop
fsub
xchg
xchg
scas
pop
pop
cmp
mov
add
or
mov
mov
in
sbb
jnp
xchg
arpl
add
loopne
scas
dec
push
aaa
ds
mov
aam
sbb
fdivr
(bad)
sahf
mov
test
adc
dec
jmp
fist
cmp
in
sbb
sbb
push
dec
inc
add
mov
xchg
or
lds
ret
stc
mov
retf
add
push
inc
xor
dec
aas
rcr
inc
push
and
cmc
or
test
mov
leave
or
mov
scas
pop
aaa
mov
rcl
pop
ds
dec
mov
addr16
shr
and
sbb
daa
repnz
adc
or
cli
nop
xor
int3
cmp
leave
mov
mov
xor
aas
push
mov
mov
shr
mov
mov
popa
hlt
sub
or
dec
(bad)
ret
mov
arpl
jo
xor
inc
cmp
push
pop
sbb
and
jo
adc
cmp
add
and
leave
cld
mov
scas
arpl
fisttp
popa
out
arpl
je
rcr
push
mov
ins
add
sub
pop
ret
xlat
movs
lock
mov
inc
sbb
cmps
jp
outs
sub
fistp
pop
hlt
gs
sbb
cmps
inc
ins
sbb
iret
test
call
outs
rcl
mov
sub
jg
sub
jmp
jp
cwde
cld
pop
pop
mov
(bad)
jmp
pop
aas
push
mov
inc
pop
xor
stos
xor
xchg
shl
loopne
ret
pop
mov
adc
jns
inc
mov
call
push
in
call
inc
cmp
movs
or
jmp
cli
call
push
not
imul
outs
inc
jne
inc
add
sbb
cmc
push
jecxz
lds
mov
push
sub
fmul
nop
sub
pop
(bad)
das
cli
sub
mov
push
loope
cmp
cmps
mov
or
mov
cmp
jbe
add
xchg
sbb
outs
jge
push
inc
xchg
pusha
sar
das
and
mov
sar
dec
out
adc
arpl
lods
cmp
aaa
mov
mov
pushf
mov
push
sbb
shr
repnz
sbb
ds
rcr
mov
mov
ins
add
push
mov
cmps
stos
mov
lods
aaa
imul
into
cmp
xor
loopne
push
push
dec
push
push
or
add
mov
mov
test
call
mov
or
pop
iret
and
ds
ins
xor
jnp
(bad)
leave
iret
in
loopne
stos
jmp
cmp
xlat
add
mov
add
pop
dec
adc
add
mov
xchg
xchg
dec
stos
scas
mov
stos
add
dec
adc
inc
sub
sbb
scas
add
push
and
lods
push
ficomp
loope
jae
or
cmp
mov
bound
out
pop
sbb
and
(bad)
cmp
aas
ror
xor
dec
xchg
dec
int3
xor
or
and
mov
test
pop
mov
clc
cli
js
(bad)
dec
jl
repz
xlat
jg
cmps
jge
dec
cmp
retf
xchg
mov
fs
dec
popf
sti
and
das
call
and
dec
in
aas
adc
mov
mov
push
shr
ja
xchg
cmc
jbe
dec
or
mov
jp
pop
xchg
inc
jns
sub
xor
adc
js
and
out
outs
jmp
xor
in
ja
das
pusha
mov
scas
je
shl
cwde
push
cld
test
xor
dec
enter
popf
into
popf
bound
movs
push
lods
pushf
call
stos
inc
hlt
xchg
mov
add
and
sbb
es
loopne
je
inc
int
std
jecxz
add
gs
mov
pop
jae
mov
ins
adc
retf
mov
outs
xor
(bad)
int
jp
xchg
xor
ja
or
in
cmps
lods
pushf
and
mov
mov
push
(bad)
or
mov
adc
and
in
stos
adc
mov
inc
jno
pop
add
call
call
in
shl
dec
sub
jae
(bad)
push
(bad)
aam
retf
adc
or
push
gs
mov
or
add
data16
dec
adc
adc
mov
(bad)
cmc
push
ds
pop
fsub
jno
fmul
push
popf
repz
nop
cld
data16
xchg
mov
add
ja
jp
retf
js
pusha
lods
xor
adc
dec
pop
jecxz
jne
and
jl
push
mov
lahf
aas
and
xor
int
xor
imul
and
dec
inc
inc
dec
scas
cmp
loope
ret
push
test
ja
test
std
sub
mov
outs
adc
mov
add
dec
or
pop
mov
cs
outs
or
or
jp
icebp
inc
loopne
fs
jecxz
xchg
sar
lods
mov
stc
icebp
jp
dec
push
jnp
(bad)
or
outs
inc
iret
mov
push
bnd
or
lods
xchg
inc
gs
fs
xchg
fdiv
sub
xor
stc
ret
jp
outs
adc
jmp
mov
fimul
or
or
xchg
stos
pop
push
loop
xchg
and
cld
cld
mov
clc
pop
jmp
(bad)
jnp
sti
cmps
fxtract
(bad)
pop
push
cmps
call
dec
fiadd
jl
jmp
cmc
pop
push
or
loope
icebp
mov
into
dec
push
cdq
je
sub
iret
popf
call
(bad)
movs
mov
cmps
in
jmp
cwde
adc
imul
add
and
aas
je
scas
sub
sub
mov
mov
repnz
ret
xchg
add
loopne
push
or
in
fdiv
hlt
fidiv
cmp
xchg
dec
push
cmp
scas
das
jb
adc
lods
pop
test
cmps
iret
mov
test
dec
loopne
jmp
mov
mov
jg
or
movs
cmp
ss
mov
mov
sbb
mov
cmps
and
push
(bad)
icebp
xchg
sbb
xor
or
cmps
mov
jmp
push
jb
scas
mov
loop
jmp
mov
aam
loop
add
ins
or
loope
inc
or
sbb
push
inc
mov
pop
sub
out
cmc
cmp
enter
mov
aas
or
sbb
lock
retf
or
adc
scas
les
and
cwde
stos
inc
adc
ja
les
ins
dec
mov
cmp
or
mov
push
sbb
add
adc
shl
cmp
sbb
pop
mov
test
outs
stc
pop
jmp
sbb
and
push
out
pusha
inc
cmp
pushf
sub
fs
arpl
dec
and
ins
enter
lods
fdiv
jo
pushf
pushf
pop
pusha
jno
aas
and
ins
lea
cmps
cld
sub
pop
stc
das
xor
out
mov
jmp
sbb
mov
loop
test
bound
out
jo
adc
mov
jl
sbb
push
jb
inc
xor
add
in
fdiv
xor
adc
jno
xor
in
imul
out
and
inc
std
and
sbb
adc
dec
in
mov
sub
pusha
xchg
les
clc
inc
mov
test
inc
loopne
sbb
hlt
sub
ins
push
mov
dec
int3
sar
fisubr
adc
lea
mov
jmp
cld
mov
mov
shr
out
push
push
in
jne
mov
(bad)
and
inc
std
in
push
sbb
outs
mov
inc
mov
jmp
and
lods
fbstp
mov
or
push
shl
jmp
rcl
mov
idiv
icebp
and
cmpps
fmul
repz
sub
movs
ret
mov
push
cmp
pop
inc
loopne
rcl
push
xchg
xor
push
mov
rcl
pop
dec
into
xlat
xor
cmp
in
and
add
cmc
in
repnz
inc
dec
shl
or
mov
add
pop
or
push
ds
adc
out
adc
jmp
fistp
cs
mov
ret
add
mov
or
mov
push
stos
jmp
jbe
rep
cmp
push
idiv
cmp
out
lds
mov
sbb
cld
cli
imul
movs
mov
mov
adc
inc
stc
cmp
mov
ins
adc
and
rol
ret
sub
retf
mov
xchg
and
and
push
test
lods
add
nop
int
mov
arpl
ret
xor
and
sbb
xchg
fild
mov
clc
fcomp
inc
leave
sub
daa
push
jb
shl
adc
paddd
jbe
cwde
pushf
sub
icebp
mov
hlt
pop
aam
mov
outs
das
sbb
jne
adc
cs
loopne
jmp
fwait
dec
ins
scas
fwait
hlt
dec
xchg
add
mov
mov
ret
lods
std
pop
fdiv
shl
mov
sbb
inc
pop
popf
xchg
and
jecxz
addr16
mov
mov
das
cmp
test
aaa
dec
nop
push
mov
mov
jae
shl
enter
mov
or
xchg
mov
ins
mov
pop
cli
retf
fcom
scas
dec
mov
jp
or
xchg
or
les
sar
inc
out
cld
mov
sbb
mov
mov
push
xor
pop
sahf
mov
out
dec
les
mov
repz
sub
inc
xor
arpl
loop
mov
add
pop
push
push
jns
jle
cmp
or
stos
push
or
mov
(bad)
enter
inc
popf
xchg
mov
nop
push
and
pushf
xor
cmps
inc
sbb
and
cmp
xor
inc
mov
iret
inc
push
cmps
dec
push
xor
loope
mov
sub
clc
inc
loope
dec
mov
(bad)
cmp
retf
jno
add
cmp
dec
sbb
iret
or
mov
push
sub
pop
mov
add
sub
fist
movs
ins
aad
pusha
call
rcr
jns
outs
imul
out
push
cmp
mov
loopne
movs
jno
adc
pop
retf
sub
jno
mov
stc
movs
inc
xor
and
mov
xor
cs
ins
cmps
cmp
jno
jge
pop
dec
push
sbb
push
mov
jb
and
jnp
and
fld
inc
mov
scas
int
push
fisttp
fbstp
pop
cmp
xchg
xor
pop
and
out
mov
call
xchg
push
mov
aas
mov
test
and
xor
xor
add
je
int
sub
cmp
push
jmp
cmp
mov
adc
or
lods
fs
loop
ins
(bad)
cmp
xchg
and
sbb
sub
cmp
inc
stos
ret
xchg
xor
retf
mov
dec
pusha
mov
shl
bound
mov
rcl
push
mov
jnp
pop
sub
lods
mov
dec
cmp
sahf
int
neg
mov
sbb
(bad)
jae
cwde
push
loop
jle
adc
data16
inc
or
jno
mov
jno
sbb
add
xchg
enter
cmp
loop
pop
daa
loope
arpl
adc
jno
dec
scas
mov
mov
xor
mov
inc
cmp
xlat
and
(bad)
sbb
jne
xchg
dec
inc
dec
imul
pusha
sbb
inc
test
(bad)
xchg
movs
dec
je
popf
gs
imul
jo
rcr
jmp
adc
push
cmp
imul
cmps
xchg
xlat
mov
mov
sbb
or
fld
jecxz
adc
pop
popa
xlat
aaa
sbb
push
loopne
fisttp
dec
shr
inc
jb
jecxz
mov
inc
mov
pop
iret
ficom
idiv
sub
cld
pop
jecxz
pop
xor
retf
lock
pop
cld
and
je
xor
mov
mov
sar
or
xor
ins
call
inc
adc
xor
ds
mov
jno
lds
ins
test
dec
ror
adc
mov
jns
aad
adc
xchg
cmp
and
mov
dec
bound
scas
lods
aad
pop
mov
jns
iret
pop
loop
pushf
add
lds
ja
sbb
into
mov
xor
push
push
add
retf
out
ds
aaa
xor
dec
inc
xor
push
bswap
aad
adc
mov
add
stos
rcl
pop
sub
mov
aaa
imul
call
das
test
jmp
jnp
fnstcw
jno
int
jmp
and
mov
or
cld
jnp
in
arpl
lods
push
pop
mov
cmp
or
jb
adc
retf
lea
retf
shl
aam
fwait
sub
ffree
stc
mov
frstor
cld
add
xor
add
or
jb
dec
mov
loope
in
sar
daa
xor
imul
or
sub
jbe
rcr
aaa
mov
inc
lods
repnz
mov
test
fs
adc
and
dec
cli
mov
movs
jp
shr
int3
in
mov
inc
ja
push
in
mov
sar
xchg
stos
jl
add
push
and
dec
mov
into
lea
enter
push
rol
mov
mov
loope
push
outs
dec
and
es
jbe
stc
cmp
sub
mov
mov
jl
xor
jl
jo
jo
movs
div
jmp
xchg
popa
xchg
and
push
out
sar
and
mov
rol
outs
dec
xchg
adc
mov
mov
gs
inc
pop
fcmovbe
lods
sbb
xor
jle
loope
pop
out
leave
fsubr
push
fild
lahf
imul
mov
jp
xor
push
stos
or
jbe
push
push
cdq
cld
mov
xor
jno
outs
enter
cmp
or
(bad)
outs
les
jle
call
fistp
sub
add
inc
call
xor
test
mov
inc
jns
loopne
clc
pop
dec
sbb
push
inc
xchg
mov
lds
xchg
sub
cmps
aad
mov
push
gs
add
jo
jmp
xor
stos
loop
pusha
stos
mov
fisub
popa
push
call
mov
adc
mov
jb
fldenv
imul
or
(bad)
ins
(bad)
bound
(bad)
(bad)
jecxz
hlt
aaa
xlat
addr16
xor
sub
loopne
fdiv
(bad)
and
repz
jae
fadd
xchg
lods
xchg
add
add
in
scas
sbb
sbb
fistp
daa
or
mov
(bad)
mov
ins
and
ins
leave
dec
dec
cli
cmp
ins
ret
cmp
sub
mov
pusha
hlt
adc
cmp
adc
rcl
ret
stos
sub
and
cwde
ja
jne
or
mov
xor
outs
sub
push
js
add
inc
es
cmps
push
inc
ds
out
mov
lock
fs
icebp
jo
jl
and
jno
call
(bad)
fimul
push
xor
cli
pop
je
mov
pop
mov
stc
or
mov
js
and
stos
into
sub
pop
jne
shr
lods
push
addr16
ins
jl
xlat
les
lds
out
jge
scas
sar
shr
jae
int
pop
js
addr16
inc
rcl
mov
dec
(bad)
pop
ror
add
stos
mov
push
mov
pusha
mov
repnz
mov
shl
sub
in
retf
xchg
cs
in
adc
pop
sbb
mov
pushf
dec
or
(bad)
ja
int3
(bad)
sub
sbb
repnz
jno
test
sahf
out
dec
or
jmp
imul
loop
or
dec
jle
es
cmps
jl
psubusw
dec
out
jno
and
or
xchg
ret
repnz
ins
cmps
lahf
xchg
test
(bad)
sub
or
lods
pop
mov
dec
and
in
or
xchg
mov
arpl
lea
fsubr
jge
pushf
or
repnz
pop
rcr
fistp
jnp
dec
jb
jae
jo
inc
cli
enter
cmp
and
outs
retf
mov
cmc
push
or
or
mov
imul
mov
leave
std
add
cmp
sub
out
inc
jg
out
cmp
inc
cdq
fmul
push
std
jo
(bad)
pop
pop
shl
loope
shr
shl
pop
lods
call
hlt
rol
out
test
mov
pusha
imul
jl
mov
dec
int
push
mov
ins
inc
adc
xor
jbe
mov
jo
xor
jbe
pop
sub
mov
jnp
push
pusha
imul
xchg
sti
cmp
and
loop
or
xchg
dec
pop
pop
or
or
outs
fwait
push
ficomp
push
push
adc
mov
adc
nop
nop
aas
cmp
dec
cmp
scas
outs
into
mov
push
popf
inc
rol
cli
dec
jmp
cs
jmp
xchg
add
mov
xchg
pop
and
pop
fs
lock
dec
push
lahf
add
movs
std
or
push
rcr
sbb
or
sbb
jb
dec
xor
int
mov
adc
sub
mov
mov
pop
add
shr
mul
cld
and
outs
jo
inc
aaa
jl
sub
mov
ins
sbb
sbb
jmp
push
mov
fisub
shl
cmp
xor
pop
sub
dec
int
sti
sub
cmps
movs
push
xchg
add
xchg
pushf
sub
jle
jo
dec
retf
in
mov
test
xlat
int3
adc
mov
push
mov
add
xchg
(bad)
push
lock
dec
adc
xchg
iret
mov
push
rcl
xor
push
cmp
sbb
sbb
mov
mov
mov
dec
dec
mov
rcl
jle
pop
mov
lock
das
adc
aas
cmp
xor
push
into
movs
jge
xor
dec
add
lods
mov
jne
imul
and
shr
xchg
(bad)
mov
mov
retf
into
jo
cmp
push
cmp
scas
or
mov
sub
(bad)
jge
es
sbb
pop
cmp
xchg
mov
rcl
dec
or
pop
fidivr
mov
push
mov
mov
and
ret
shl
cmp
jge
mov
pop
sbb
jle
fiadd
jg
jl
add
mov
mov
xchg
iret
rol
pop
(bad)
jecxz
mov
pop
xor
repz
jo
out
cli
retf
(bad)
retf
mov
sbb
in
adc
pop
mov
and
sbb
fiadd
(bad)
mov
cmps
fsub
test
fstp
pop
dec
cdq
and
inc
sti
sti
clc
push
add
xchg
(bad)
data16
rcl
das
mov
loope
rol
or
test
nop
mov
mov
or
jae
lods
(bad)
shr
and
sbb
std
idiv
test
(bad)
cmp
shl
test
mov
push
pop
push
or
test
loop
and
addr16
add
cmp
call
fwait
mov
iret
out
xchg
retf
xor
hlt
or
mov
jnp
aas
dec
pop
sbb
mov
movs
lods
dec
mov
sub
sub
sub
(bad)
jae
xor
jne
jae
or
push
cmp
mov
jbe
pop
jmp
popf
or
push
pop
and
out
mov
cmps
stc
mov
pop
add
daa
pushf
jmp
imul
lea
cmp
cmc
sbb
ins
add
push
jnp
popa
je
push
rcr
dec
out
add
inc
movs
mov
pushf
xchg
pop
inc
push
outs
sub
imul
fwait
cmp
mov
mov
clc
bound
sti
retf
or
fdiv
aaa
inc
sbb
movs
inc
mov
xor
dec
xor
stc
sar
(bad)
js
(bad)
mov
arpl
pop
xchg
inc
mov
push
xor
push
repnz
push
push
lods
mov
mov
je
jo
jge
mov
test
sbb
cmp
(bad)
repz
inc
in
jmp
and
push
push
fsubp
out
and
jmp
inc
sbb
lods
or
jmp
(bad)
sbb
in
sbb
sub
jle
stos
gs
int3
rcr
push
jmp
test
and
push
xchg
xchg
or
fs
icebp
out
je
add
push
ins
ins
dec
ins
not
cmp
inc
in
dec
mov
test
lahf
inc
inc
into
imul
mov
shl
test
dec
(bad)
std
adc
into
inc
retf
in
pop
test
dec
or
pop
mov
test
cmp
outs
icebp
aas
sub
lahf
jp
mov
repz
inc
(bad)
cld
rcr
push
push
push
shl
cli
push
xchg
mov
sbb
jecxz
test
inc
cmps
stc
inc
cli
pop
repnz
inc
rcr
dec
cmps
js
fs
pop
adc
mov
inc
repz
sahf
vmovdqu
hlt
sar
mov
mul
(bad)
inc
cli
ret
test
sbb
inc
(bad)
mov
jl
outs
pop
add
mov
add
sub
inc
(bad)
ins
xor
sub
dec
fsubr
shl
loop
ror
iret
mov
jbe
daa
xchg
fstp
dec
jno
sti
adc
enter
rcl
cmp
test
inc
adc
out
add
dec
xor
cmp
addr16
out
fnsetpm(287
sub
inc
cmps
and
sbb
add
test
lock
jmp
int3
sbb
xor
(bad)
mov
xchg
fbstp
adc
bound
fsubr
mov
or
and
(bad)
pop
cdq
shl
fs
retf
jmp
inc
add
gs
bound
fstp
shl
aad
in
adc
xor
int3
or
inc
xchg
and
dec
and
out
pushf
data16
and
icebp
sahf
scas
sar
test
imul
outs
jp
aas
scas
in
out
and
lea
xchg
aaa
mov
enter
cdq
bound
jl
xchg
cmps
loop
or
imul
and
test
xchg
nop
or
aaa
push
xor
jnp
inc
aas
sbb
call
sbb
xchg
aad
repnz
mov
fsub
mov
mov
or
sar
sub
cmp
mov
inc
jg
adc
loop
or
pop
mov
and
pusha
imul
jg
dec
js
add
mov
push
mov
mov
mov
mov
xor
icebp
test
aas
and
std
or
jae
push
adc
(bad)
arpl
cmps
and
adc
sar
sub
cmp
jecxz
mov
mul
push
adc
je
dec
pushf
inc
push
dec
push
mov
loope
xor
(bad)
sbb
cs
dec
in
cmp
or
jp
jg
mov
push
icebp
push
dec
lock
sbb
jae
inc
and
cmp
pop
pop
push
dec
paddd
cmp
dec
xchg
loope
push
(bad)
sub
(bad)
(bad)
jb
cmc
scas
icebp
lds
xchg
out
adc
and
test
xchg
jne
jge
fcomp
pop
jo
xor
in
pop
jno
mov
jbe
retf
jl
push
add
hlt
fwait
lock
in
mov
jae
cmp
enter
cs
or
or
add
sar
xlat
je
adc
xchg
pop
ret
pop
data16
mov
push
push
jg
and
xchg
push
cmp
in
daa
pop
push
call
lds
mov
scas
jno
test
daa
fdiv
xchg
pushf
fisub
lods
fcomi
jns
nop
in
mov
mov
test
scas
icebp
mov
(bad)
sahf
xchg
fild
pop
mov
das
retf
pop
dec
push
sbb
shl
int
stos
push
cmps
bound
sub
cmp
push
sub
inc
fldenv
jo
in
jne
inc
xchg
popa
mov
scas
mov
pop
(bad)
adc
jle
xchg
fld
out
sbb
jae
and
mov
push
mov
xlat
sub
inc
out
aas
mov
or
jo
cdq
(bad)
gs
fmul
cmp
cli
push
jnp
mov
xor
sub
fisub
pusha
repz
push
xor
cmp
mul
inc
mov
jmp
jnp
xor
adc
pushf
cmp
bound
movs
jmp
mov
cmp
fmul
mov
in
and
jl
repnz
pop
push
push
cld
sti
shl
mov
arpl
pusha
(bad)
dec
shl
call
inc
pop
sub
add
cmp
out
test
sbb
jle
sbb
in
sbb
sub
add
mov
bound
push
js
mov
out
aam
loop
add
inc
jno
mov
sub
xor
cmp
or
xchg
push
stos
outs
xchg
iret
dec
or
or
lods
inc
retf
imul
pavgw
fcom
add
call
push
mov
rcl
dec
bound
mov
call
inc
movs
test
push
xor
inc
adc
ret
icebp
cmps
xor
stc
(bad)
sar
pop
aaa
div
push
stc
mov
mov
sbb
xor
and
adc
test
les
arpl
lahf
mov
jl
fadd
cmc
dec
mov
adc
das
push
mov
arpl
shl
(bad)
cmp
or
(bad)
push
mov
mov
aas
push
sbb
xchg
xor
or
pop
lea
jmp
mov
dec
inc
sti
pop
inc
xlat
mov
pushf
neg
push
test
clc
in
mov
and
adc
and
jno
clc
sahf
cmps
sub
xchg
iret
ret
xchg
cld
shl
add
in
jae
daa
mov
pop
inc
jl
and
arpl
pop
xor
lods
sar
aam
aas
dec
mov
cmp
mov
mov
retf
mov
sub
inc
fs
lock
xor
cmp
outs
rcr
mov
mov
jmp
dec
fimul
pop
lea
cmp
xor
mov
into
cwde
fwait
nop
pop
addr16
out
stc
pop
or
ficom
cld
aad
push
fs
xlat
cmps
sbb
xchg
pop
test
jle
sbb
mov
add
and
es
loopne
mov
xlat
lock
in
push
sti
int3
xchg
outs
jns
cmp
push
cmp
push
dec
pop
pop
pushf
jno
outs
pop
imul
xchg
sbb
push
mov
fdivr
sbb
(bad)
ins
neg
in
add
dec
fiadd
inc
push
fild
cli
pextrw
pop
movs
adc
xor
js
arpl
cld
xor
jle
pop
into
cdq
lds
and
pop
je
mov
adc
inc
sub
jl
ins
lock
mov
out
push
or
int3
sub
stos
arpl
mul
frstor
jp
ds
cmps
mov
push
sub
rcr
inc
cmp
pop
in
push
sti
cmp
xchg
jmp
add
pusha
scas
dec
loop
dec
and
lock
dec
movs
sbb
test
and
fwait
mov
out
icebp
pop
sub
inc
or
push
dec
in
fldenv
das
repnz
pop
inc
mov
xchg
push
xchg
mov
inc
mov
repnz
daa
mov
es
(bad)
push
ds
pop
lds
lods
and
push
jno
or
or
jmp
xor
or
jle
jns
and
sub
jnp
dec
push
xor
dec
sub
imul
cmps
shl
or
stos
pop
call
clc
push
or
es
cdq
mov
dec
mov
test
mov
xor
pop
sub
xchg
adc
jbe
xchg
repnz
int3
and
rol
sbb
pop
aad
push
xor
sbb
lahf
(bad)
mov
push
fmul
pop
cmp
adc
cmps
clc
mul
inc
test
inc
pop
xchg
lahf
adc
test
gs
and
xor
hlt
mov
call
arpl
stos
jge
mov
inc
jne
retf
and
es
add
xchg
lahf
cmp
adc
rcr
sub
in
je
ret
inc
hlt
std
inc
shr
pop
mov
dec
push
pop
pushf
lahf
xor
mov
(bad)
and
shl
mov
adc
jns
imul
pop
mov
shl
outs
repnz
(bad)
cmp
and
inc
mov
shl
mov
inc
sub
fcmovnu
not
push
sahf
pop
cmp
outs
aam
out
and
popa
mov
shl
xchg
fdivr
retf
aaa
mov
sbb
xchg
mov
test
aam
mov
xlat
mov
cmp
pop
jnp
(bad)
cmp
test
xor
in
les
mov
xchg
cmp
pop
repz
or
iret
jmp
in
and
cmc
stos
xchg
sub
xchg
stos
das
xchg
retf
mov
fldenv
cs
dec
push
hlt
lock
mov
mov
fsub
or
aas
daa
sbb
cmp
(bad)
lea
mov
pop
sbb
scas
(bad)
fiadd
(bad)
outs
scas
rcr
loopne
cld
inc
shl
push
jae
push
jl
imul
or
xor
jne
jne
mov
in
cs
inc
dec
lea
push
test
in
aam
pop
pop
sbb
push
dec
and
mov
or
pushf
imul
sub
je
jge
add
dec
dec
es
mov
lock
jns
push
cmp
jecxz
fmulp
retf
add
xlat
adc
dec
push
jne
jecxz
jnp
mov
ins
pusha
jno
test
sbb
inc
xchg
or
push
addr16
xchg
inc
scas
loopne
or
pusha
jp
das
bound
frstor
add
cmp
repnz
pop
xor
into
inc
sub
jbe
sbb
jl
cs
mov
aam
rol
sti
ss
inc
push
inc
les
sti
sbb
sti
sub
fwait
mov
or
cwde
jmp
scas
aad
or
loope
pushf
imul
ins
out
or
jle
xor
lds
jns
push
or
cs
ret
test
sti
scas
out
jg
lea
dec
dec
jmp
or
test
repnz
(bad)
mov
lock
pop
aas
dec
loope
cli
jmp
scas
or
xchg
xor
push
popf
out
xlat
jo
int
retf
mov
daa
out
std
(bad)
ins
sar
mov
ja
xchg
adc
test
ror
das
lahf
or
pop
push
aaa
dec
add
xchg
mov
inc
sbb
or
push
dec
push
cmp
or
cmp
lock
jecxz
out
gs
call
shr
(bad)
es
loop
mul
and
cli
lea
std
mov
int3
fld
sti
jp
push
mov
data16
(bad)
mov
rcl
gs
mov
shl
cs
add
int3
out
xlat
clc
inc
dec
xchg
ins
rol
sbb
and
add
stos
in
xchg
mov
xchg
mov
inc
nop
ret
sbb
mov
(bad)
das
jo
sbb
adc
xchg
rcl
das
and
push
sub
hlt
mov
dec
icebp
sbb
(bad)
pop
jo
xchg
ds
pop
popf
lock
ins
fwait
out
repz
pop
push
aas
add
(bad)
das
lods
pop
inc
dec
data16
xor
xor
popf
das
mov
jne
cmp
add
imul
jle
push
rol
dec
and
pop
in
mov
int3
pop
adc
pushf
xor
mov
hlt
adc
clc
cmp
(bad)
xchg
rcr
aaa
sti
dec
mov
jmp
xchg
pop
out
cmp
push
or
cwde
cmp
push
push
pushf
loope
mov
in
and
mov
adc
enter
jp
out
lods
sub
mov
sbb
adc
push
inc
call
in
das
shl
mov
imul
rcl
push
mov
cmp
or
ds
stos
sub
gs
push
mul
mov
mov
in
jecxz
ret
ror
cmp
movs
ins
aas
pop
loopne
jb
jbe
fsub
retf
ja
in
push
or
jp
or
cwde
jno
xor
ja
xchg
xchg
stc
push
iret
dec
pop
jbe
mov
xchg
loop
dec
(bad)
out
pop
mov
mov
jg
push
js
(bad)
or
lods
xor
jmp
adc
(bad)
sahf
jge
fidivr
add
push
cli
jmp
inc
add
xor
je
int3
and
lahf
mov
(bad)
das
inc
aaa
test
arpl
bound
xchg
js
mov
jnp
ds
or
sub
or
xchg
lods
mov
rol
and
icebp
inc
ds
and
repnz
mov
jmp
mov
aad
pushf
div
retf
jae
repnz
jo
mov
js
add
in
(bad)
stc
pop
and
or
outs
mov
loope
sahf
push
xchg
mov
fdiv
mov
cmp
sar
xor
or
(bad)
xor
jno
dec
aad
aaa
push
adc
mov
inc
int
pop
inc
leave
out
stc
mov
xor
icebp
repnz
int
dec
dec
sub
ins
idiv
jge
xor
sar
into
adc
mov
dec
mov
lock
xchg
leave
imul
xchg
popf
cmps
mov
ds
movs
imul
mov
mov
lods
adc
stc
adc
(bad)
jge
mov
mov
xor
stos
inc
push
sbb
dec
into
jmp
es
(bad)
ss
dec
int3
loop
xchg
jne
mov
xor
pop
adc
push
loope
cmps
pop
jge
jo
inc
mov
fiadd
enter
mov
sbb
std
out
jns
bound
adc
in
sar
loop
fdivrp
sahf
push
aam
mov
fadd
je
in
mov
icebp
pop
out
mov
cmp
test
dec
mov
in
inc
jecxz
fnstsw
xor
mov
dec
outs
jnp
out
mov
mov
mov
add
lea
cld
or
mov
jecxz
clc
cmp
cmp
scas
inc
cmps
sahf
push
pusha
icebp
mov
shr
js
aaa
faddp
jo
push
jno
mov
enter
inc
clc
adc
pop
ret
add
add
push
or
retf
icebp
and
mov
jp
clc
(bad)
jns
adc
push
dec
xchg
test
out
mov
das
rcl
add
mov
jecxz
jo
scas
pop
dec
fist
cmp
push
and
or
inc
cld
movs
fistp
shl
shl
(bad)
jb
xchg
bound
jmp
imul
and
inc
sub
stos
fdiv
test
(bad)
aas
jb
inc
loop
(bad)
and
aas
mov
(bad)
mov
sahf
and
popf
sub
out
daa
stc
sub
push
jmp
call
inc
out
loope
and
sbb
cmps
stos
push
popf
iret
loop
mov
dec
jnp
fwait
add
pop
lods
stc
test
jmp
cmp
jne
jnp
or
sub
mov
mov
lahf
arpl
push
push
dec
in
and
mov
enter
jbe
pusha
mov
mov
addr16
jle
(bad)
jmp
into
or
jo
loope
jge
xchg
dec
hlt
mov
imul
sahf
mov
mov
mov
jmp
sub
xor
mov
loopne
push
lahf
out
mov
cld
mov
xlat
aas
sbb
dec
arpl
retf
jbe
add
and
xchg
in
shr
push
adc
mov
xchg
sub
sahf
call
and
(bad)
mov
out
cmps
add
or
mov
dec
test
ret
cmc
js
jbe
inc
cmp
out
adc
or
mov
cs
push
mov
add
cwde
lds
lock
and
sbb
push
jno
out
inc
mov
mov
jecxz
rol
pop
ret
(bad)
lds
outs
call
test
push
retf
les
pop
and
cmp
jo
lds
int3
cmps
cmp
dec
test
js
mov
cmc
data16
inc
jmp
pop
call
mov
mov
cli
cmp
xchg
(bad)
pop
jmp
adc
in
(bad)
lods
xchg
call
fwait
and
jns
shl
inc
int
fisttp
or
pop
out
das
mov
dec
aaa
mov
mov
dec
mov
push
popf
adc
test
jae
int3
dec
ret
fdiv
(bad)
or
shl
xchg
cdq
xchg
ja
ja
fwait
add
push
push
cmp
scas
lods
adc
sbb
hlt
dec
jle
sbb
bound
dec
sub
daa
push
push
iret
inc
xor
(bad)
cmc
or
ins
and
dec
sbb
in
cmp
aam
retf
mov
shr
stos
cmps
loop
lock
adc
pop
cmp
cli
popf
or
fwait
mov
mov
inc
push
jmp
mov
mov
and
sbb
sbb
jg
sbb
jmp
adc
jbe
dec
xor
inc
aas
xchg
mov
repnz
lea
adc
xor
scas
dec
xchg
pop
rcr
adc
popa
es
mov
xor
and
shr
ja
call
mov
push
mov
dec
cld
ins
inc
ret
mov
sbb
pop
int3
dec
pop
fs
(bad)
jmp
ja
push
test
fwait
dec
outs
ins
sbb
jle
(bad)
push
mov
stc
xor
mov
cwde
inc
scas
cmc
and
xlat
mov
pop
pop
xchg
in
push
imul
ins
fwait
call
sub
repnz
jle
sbb
fcomi
sbb
jno
retf
jle
pusha
(bad)
jle
arpl
jns
cwde
cdq
mov
push
(bad)
sub
rol
inc
xchg
sti
rol
jne
add
movs
sbb
scas
jno
push
and
sbb
movs
lock
add
jg
push
das
mov
jne
int3
shrd
dec
mov
xor
stc
ss
dec
ds
sbb
(bad)
xlat
jecxz
repz
leave
(bad)
push
arpl
out
bswap
sbb
jmp
mov
scas
(bad)
ja
mov
test
adc
sub
sbb
xor
pop
cmp
push
pop
pop
or
mov
mov
inc
test
es
pop
enter
lea
rcl
and
sbb
add
call
test
add
xor
enter
loop
lods
inc
pop
add
ret
ret
xchg
fdivr
or
int3
add
add
push
pop
scas
aas
sti
sbb
adc
popa
test
xor
or
and
or
inc
sti
inc
xlat
dec
in
push
mov
cmps
push
sub
sub
adc
cmp
jmp
cld
jns
in
inc
jge
pusha
outs
fnstenv
xor
inc
sub
sub
jge
xchg
sti
pop
movs
push
xor
cmp
dec
jecxz
sub
push
lahf
fisttp
daa
mov
(bad)
in
and
rcl
inc
or
dec
pop
cli
std
fmul
push
cmp
stos
in
inc
dec
push
jae
and
std
bound
ret
in
or
stc
sub
push
jb
or
arpl
hlt
mov
icebp
xor
inc
stos
jbe
fnstenv
aas
dec
enter
pop
cmps
adc
lods
sbb
fst
in
jo
js
pop
cmps
sbb
out
arpl
xor
shr
(bad)
pusha
push
out
sub
mov
dec
repnz
jb
addr16
or
jnp
and
or
loop
scas
lods
aad
repnz
mov
(bad)
sbb
sub
push
jmp
mov
xor
inc
das
aaa
popa
fwait
cli
xlat
mov
and
or
mov
ds
idiv
scas
sbb
mov
js
popa
aam
mov
push
or
dec
test
aad
jnp
(bad)
scas
inc
push
mov
and
and
popa
movs
daa
in
outs
mov
mov
loop
ret
mov
mov
out
into
adc
pop
mov
cld
test
ret
in
jg
mov
lods
jmp
mov
das
bound
lock
xchg
push
cs
xor
aaa
fnstenv
daa
jo
pop
inc
adc
sahf
dec
xor
cmp
inc
mov
and
cli
in
jne
adc
das
push
inc
dec
pop
js
cmc
or
mov
repnz
mov
fimul
scas
sub
leave
xor
add
xchg
dec
adc
lock
cmps
in
mov
push
xchg
push
fsub
xchg
mov
arpl
retf
test
adc
add
icebp
mov
mov
cmp
cmp
fs
(bad)
lock
nop
dec
inc
adc
sub
xchg
jb
jb
pop
inc
or
mov
mov
or
(bad)
xor
fbld
jae
inc
outs
ret
movs
dec
repnz
jp
(bad)
mov
jbe
mov
jmp
inc
lock
sti
xor
pop
lock
push
xchg
je
scas
xor
loope
cmp
sbb
xchg
pop
ror
iret
dec
sub
jp
inc
mov
sub
jp
stc
lods
fsubr
and
sbb
lods
xor
aas
imul
push
(bad)
mov
in
and
daa
push
addr16
jae
or
and
daa
pushf
inc
(bad)
sub
xchg
adc
lods
jo
prefetch
mov
mov
aas
imul
mov
inc
xor
data16
push
push
jo
cmc
mov
cmp
loop
sbb
cmp
rol
mov
movs
pop
dec
repnz
sbb
and
retf
add
xchg
test
ins
jb
lea
jb
jo
mov
scas
sub
ret
lea
cmp
cmp
mov
sti
fidivr
inc
shl
sbb
out
pop
loopne
inc
in
and
mov
dec
jnp
fs
pop
dec
fisubr
gs
(bad)
jne
jae
sbb
(bad)
cmp
push
pop
push
mov
push
call
ret
int3
je
imul
(bad)
in
ins
xchg
cmp
in
loop
stos
add
mov
xchg
mov
test
leave
cwde
push
mov
loope
jp
popf
xchg
ss
clc
(bad)
gs
rcr
stos
ret
enter
ja
push
das
retf
fnsave
fldcw
in
sub
pop
pop
stos
inc
shr
and
ins
dec
cmp
add
jnp
cmp
retf
or
xchg
mov
mov
ja
cmps
xor
and
pop
stos
ins
nop
cmc
pop
mov
dec
inc
inc
pop
retf
clc
fs
das
add
ficomp
les
leave
pop
rcl
(bad)
mov
popa
js
lods
mov
or
loope
mov
push
and
mov
push
add
xchg
or
out
iret
sub
aas
inc
xchg
add
mov
xor
std
and
jmp
pop
mov
sub
inc
pusha
popf
adc
sub
mov
loop
jno
lock
daa
ja
(bad)
sub
sti
jp
rcr
cmp
loop
ss
imul
lahf
popf
popf
pop
ror
add
lods
xor
stos
adc
test
fs
sub
fs
(bad)
sbb
add
push
iret
inc
inc
xchg
dec
shl
mov
xor
push
lods
repnz
cld
pop
mov
(bad)
imul
ja
pop
fnstcw
aad
and
add
cmp
sub
or
aas
xchg
ins
fisttp
aaa
pop
adc
aam
out
pop
mov
sbb
je
jl
and
aaa
leave
or
sbb
(bad)
mov
ins
xor
jne
div
xchg
retf
mov
add
jecxz
shl
ins
sub
xchg
call
cli
xor
ror
jle
out
cmp
add
or
popf
pop
inc
mov
jbe
push
iret
test
in
movs
xchg
mov
sub
mov
loop
int
xor
pop
test
jge
in
ficom
and
retf
in
pop
popf
out
xchg
rol
loopne
xor
mov
adc
jbe
stos
je
rcr
sbb
sub
dec
lock
push
mov
jae
pop
fsub
sti
mov
in
repz
sbb
push
aas
pusha
fld
xchg
inc
xchg
add
loopne
xchg
mov
(bad)
lea
(bad)
xchg
(bad)
add
out
bts
cmp
(bad)
cmps
xlat
hlt
pop
cmp
xchg
mov
loop
ud0
adc
je
aam
xor
mov
mov
test
nop
int3
js
xchg
rcr
mul
ja
test
icebp
jmp
pushf
xchg
dec
dec
loope
cli
adc
pop
cld
xor
and
retf
cs
icebp
xchg
mov
outs
outs
push
cmps
stc
(bad)
stc
sbb
aad
cmp
jo
adc
cmp
aad
inc
add
sbb
in
outs
pusha
jbe
jg
inc
mov
dec
push
or
rcl
fiadd
jle
or
mov
adc
fimul
mov
imul
dec
pop
jns
dec
mov
xchg
mov
cwde
dec
inc
xor
xor
xor
xchg
idiv
call
sub
add
xrelease
(bad)
jg
stc
rol
loopne
xor
pop
and
mov
movs
inc
push
mov
push
pop
pop
addr16
jmp
ret
mov
lods
and
dec
xlat
mov
mov
jecxz
jae
in
popf
test
sub
mov
push
xchg
retf
cmp
xor
aam
sub
das
int
cwde
adc
outs
into
cld
and
and
fwait
mov
xor
lahf
dec
lahf
xchg
sbb
in
fisub
adc
sahf
push
ins
xchg
mov
xor
ins
and
adc
ins
and
ins
(bad)
ins
fwait
push
mov
and
cdq
jnp
out
lds
push
test
inc
pop
scas
not
jb
std
and
pop
jne
mov
aas
std
(bad)
and
mov
xor
add
and
jg
mov
movs
cmp
mov
loope
mov
push
in
pop
movs
out
test
cmp
(bad)
fcom
xor
jmp
sub
sahf
and
test
repnz
cmp
pop
into
xchg
popa
inc
mov
mov
shr
sub
loop
sahf
not
pop
add
and
dec
loopne
das
inc
add
cmc
or
inc
sub
aaa
inc
test
add
repnz
test
push
lods
leave
or
pop
and
cmp
fisub
jbe
mov
fisttp
mov
mov
fsub
sub
call
and
fidivr
fcom
sbb
or
in
loope
imul
in
iret
dec
test
sub
xchg
sbb
and
mov
(bad)
bound
mov
out
enter
mov
repnz
push
xchg
jae
or
cmps
in
bound
sahf
jne
sbb
dec
sti
mov
adc
imul
rcr
call
push
retf
cmp
ror
pop
aad
outs
jl
jbe
bound
adc
les
test
adc
mov
test
sbb
xchg
lahf
push
pop
inc
(bad)
jg
mov
pop
test
ds
out
sub
add
aas
xchg
sbb
mov
cmp
in
xchg
es
push
cwde
dec
xor
or
fistp
frstpm(287
idiv
xor
stc
cs
jg
sub
scas
mul
lods
sbb
push
add
jg
es
neg
fs
push
xchg
cmp
iret
mov
test
test
sub
mov
sub
mov
pop
inc
sbb
push
mov
sbb
adc
dec
popa
(bad)
std
add
inc
hlt
inc
daa
repnz
and
call
push
mov
xchg
xor
and
add
jmp
sub
lea
inc
jo
jbe
imul
fwait
mov
sub
sub
mov
pop
and
mov
icebp
call
inc
lods
inc
icebp
dec
xor
xchg
es
(bad)
jp
inc
loopne
sbb
les
xor
jae
into
mov
daa
loopne
pop
pop
adc
aam
add
lahf
pop
push
aas
repnz
add
(bad)
movs
dec
adc
loopne
leave
jl
sub
mov
gs
jmp
(bad)
sub
call
fcmovnb
bnd
vpunpckhbw
push
or
push
xor
dec
ror
int
inc
jecxz
inc
adc
mov
iret
sub
sub
dec
das
or
jl
jns
mov
dec
fst
add
xchg
addr16
pop
push
and
cmp
adc
mov
iret
arpl
(bad)
mov
out
das
sahf
pop
mov
push
loope
sub
neg
repz
cld
scas
pushf
sbb
adc
xor
es
loope
mov
or
mov
xor
rcl
or
push
int3
push
iret
test
inc
scas
xchg
es
int
push
inc
ds
mov
jbe
out
sbb
das
mov
inc
push
add
dec
in
test
adc
mov
in
lods
(bad)
mov
enter
ss
out
repnz
sub
ja
xor
repnz
pop
xlat
scas
sti
ror
dec
sub
pop
push
fsqrt
out
ret
bound
push
out
rcr
push
cmp
aas
dec
repnz
cmp
loope
in
out
jg
sbb
add
adc
loop
sbb
xchg
and
xchg
xchg
push
adc
sbb
ret
sbb
cld
jb
fistp
and
pop
imul
jecxz
fs
repz
add
scas
sbb
cmps
push
mov
jo
pop
cwde
push
inc
add
inc
retf
aaa
inc
cdq
ffree
pop
pop
dec
cld
jmp
xchg
cdq
rcr
xor
and
sbb
sahf
(bad)
das
jg
cmc
scas
pop
or
and
or
test
bound
cdq
je
in
xchg
test
pusha
punpckhbw
test
cmp
push
int
xor
mov
iret
push
imul
mov
sbb
adc
dec
cdq
int3
fnstenv
dec
jmp
cmp
ins
mov
lds
dec
pop
dec
push
cmps
mov
or
fs
xchg
xchg
icebp
retf
cmp
std
out
nop
scas
loopne
inc
fisubr
xor
or
push
enter
ret
sti
mov
scas
(bad)
jge
jb
cmps
leave
push
and
xlat
add
and
cdq
dec
push
movs
dec
xchg
stc
repz
dec
iret
jg
lea
outs
add
mov
aaa
or
and
mov
cmp
mov
mov
adc
(bad)
leave
add
push
loopne
push
loope
push
cmps
bound
sbb
neg
js
cmp
dec
inc
sbb
imul
div
push
xor
pop
repz
mov
xor
idiv
inc
clc
mov
rol
test
xchg
inc
jmp
mov
in
jp
pushfw
aam
cmp
push
(bad)
loope
push
sbb
imul
pop
addr16
mov
call
bts
push
pop
or
les
lods
pop
adc
mov
jmp
push
pop
test
sub
lds
lock
ficom
in
popf
xor
fisubr
movs
adc
pop
popf
or
addr16
cmps
mov
pop
sti
fwait
imul
iret
inc
fs
and
ret
fwait
cmc
jne
repz
scas
xchg
mov
jg
pop
or
movs
add
xchg
mov
mov
adc
mov
ds
in
sbb
call
bound
inc
fdiv
sub
cs
pop
mov
fisttp
jmp
push
inc
or
in
jl
mov
sbb
lds
loope
into
mov
shl
hlt
cdq
repnz
inc
sub
outs
mov
sub
add
fadd
mov
fimul
push
mov
jmp
and
sub
in
add
dec
inc
mov
add
pushf
lods
push
dec
out
(bad)
cli
dec
push
leave
xor
add
cmps
mov
hlt
sub
lock
or
repnz
cli
rol
out
(bad)
cs
lods
sbb
fidiv
push
nop
arpl
add
loopne
or
in
test
sti
push
popa
int3
inc
jl
mov
mov
(bad)
inc
sbb
pop
out
add
jno
je
adc
adc
mov
xchg
pop
jae
mov
sub
dec
sub
popf
outs
xor
les
push
dec
test
push
add
inc
das
sbb
cmps
rol
fadd
push
sbb
lahf
dec
in
inc
dec
fld
sbb
xchg
int3
xchg
outs
pop
enter
xor
out
scas
call
mov
mov
call
push
and
scas
pop
mov
inc
dec
cld
mov
int3
xor
rcr
(bad)
pop
movs
pop
stos
vmread
push
jmp
clc
and
add
aas
int
and
int3
inc
jnp
adc
(bad)
iret
bound
mov
ins
ss
fiadd
xchg
mov
fisttp
cmps
xchg
bound
mov
fadd
fcom
inc
in
fisubr
mov
jne
add
or
cld
loop
add
jnp
cmp
mov
or
stc
and
jmp
test
clc
mov
lea
(bad)
jb
or
lahf
push
ja
add
or
arpl
push
sub
mov
repz
hlt
outs
mov
stc
mov
in
sbb
cmp
lahf
es
int3
mov
or
mov
into
and
cs
add
icebp
pop
mov
push
push
sbb
in
ret
in
arpl
sbb
jmp
(bad)
jb
iret
in
in
test
addr16
and
aas
mov
or
or
cmp
sbb
inc
lock
dec
retf
sbb
dec
push
xchg
fcmovu
(bad)
mov
dec
fdiv
adc
push
dec
dec
pusha
rol
cmp
mov
ins
push
stos
cmp
sti
jo
push
and
sub
test
xchg
in
mov
sbb
mov
mov
es
stc
fs
cs
jmp
jns
(bad)
outs
sub
pop
mov
clc
mov
jno
out
std
adc
ss
dec
or
rol
ins
sub
inc
shl
cmp
cmp
lods
mov
sub
mov
sbb
inc
stc
aad
jnp
imul
cmp
xchg
movs
and
int
dec
sub
(bad)
mov
inc
mov
sub
mov
std
gs
pop
sbb
(bad)
add
dec
hlt
pusha
fisubr
jo
jo
adc
call
add
ins
and
cmp
pop
jo
and
mov
icebp
fbstp
cwde
test
pop
ret
scas
(bad)
xlat
jmp
inc
rcl
xor
ffreep
mov
jg
fadd
adc
xor
sahf
retf
out
or
and
movs
mov
mov
cmp
cmp
fistp
or
inc
mov
cmc
xchg
mov
jle
lods
cmp
inc
jbe
mov
clc
loopne
les
dec
int3
inc
aas
xchg
add
xor
sub
mov
add
mov
lods
jmp
(bad)
mov
jle
and
(bad)
push
push
outs
not
icebp
pop
sub
ss
scas
mov
popa
call
lds
mov
add
xor
pusha
jp
sbb
mov
mov
mov
pop
pusha
lahf
cwde
push
popf
xchg
and
shl
lock
daa
lods
push
mov
out
ins
pop
cli
cld
mov
fadd
nop
jb
push
sub
popf
jmp
out
or
lods
mov
call
push
add
ds
mov
xor
adc
jno
mov
lock
(bad)
(bad)
popa
nop
pop
adc
mov
push
mov
ds
add
clc
pusha
push
(bad)
mov
add
ret
adc
sub
aaa
sub
push
jae
jecxz
fcom
push
dec
mov
xor
jno
add
pop
dec
test
sbb
mov
xor
cmp
mov
add
jmp
inc
ds
mov
jmp
sbb
dec
clc
leave
mov
dec
scas
aas
out
or
push
ds
outs
clc
mov
data16
rcl
sahf
sqrtss
pop
cmp
cmps
fldenv
xchg
mov
and
pop
mov
or
inc
fmul
loope
mov
mov
pop
xchg
cmp
arpl
pop
jno
and
push
or
xor
xor
pop
add
lahf
inc
fcomp
cwde
jo
(bad)
cmp
jecxz
js
fidiv
scas
adc
inc
movs
test
adc
dec
(bad)
jge
push
int
iret
fs
dec
stos
xlat
inc
adc
bts
push
fmul
enter
aam
pop
mov
mov
rcr
mov
mov
ret
adc
or
push
fist
aas
data16
xchg
jo
mov
push
imul
mov
jmp
fnstenv
jg
adc
shl
mov
in
sub
or
iret
mov
test
dec
xchg
and
push
sub
add
ins
dec
sbb
xor
outs
repnz
adc
xor
mov
fcomp
sub
fimul
ss
imul
les
sub
fwait
std
dec
(bad)
cs
inc
out
test
aaa
das
xchg
retf
jg
sbb
ret
mov
enter
out
cdq
cli
ja
push
out
cdq
call
fcomp
jo
mov
cmps
push
xchg
js
sbb
sbb
cmc
dec
enter
and
loopne
ds
(bad)
cmp
(bad)
mov
mov
je
pop
inc
(bad)
cli
shl
xor
(bad)
mov
stos
push
sbb
pop
jle
ins
mov
mov
mov
imul
dec
aam
das
mov
in
fisttp
movs
dec
imul
adc
push
jl
movs
pop
jle
jg
repz
scas
ins
mov
aad
ret
mov
xor
daa
push
ds
pop
jg
int3
push
retf
jnp
out
loope
in
xchg
and
enter
xor
cwde
push
mov
cwde
pop
das
in
sbb
push
lods
mov
pop
push
xor
cmc
ins
adc
mov
rcl
push
jnp
adc
mov
std
aam
mov
std
es
outs
call
sbb
push
pop
mov
add
into
popf
fistp
inc
mov
ret
dec
enter
dec
or
jp
inc
lahf
pop
cmps
retf
mov
xor
or
jb
sub
mov
push
inc
stc
arpl
mov
retf
(bad)
cwde
ret
lahf
jo
ret
sbb
xor
sub
add
lods
cmps
sub
and
pmaxub
cmp
xchg
inc
mov
fmul
or
xchg
out
pavgw
into
pop
mov
push
xor
add
fild
pop
outs
cmc
jle
cwde
in
bound
iret
pop
and
pop
cmps
enter
xor
dec
mov
inc
movs
out
inc
aaa
fild
sahf
or
fxch
push
pop
inc
mov
pop
cmp
mov
mov
leave
xor
retf
test
(bad)
inc
stos
clc
xchg
cmps
and
add
imul
xchg
shr
jle
in
xchg
xlat
mov
adc
stos
adc
in
mov
push
xor
cdq
or
outs
pop
dec
push
imul
cs
adc
popf
pop
popa
sar
dec
push
into
xchg
sub
xchg
sbb
pop
lods
cmp
(bad)
adc
push
(bad)
aad
cmp
stc
ret
fbstp
add
call
lea
test
push
ja
sbb
sbb
mov
push
(bad)
test
sub
sbb
and
xor
ds
test
inc
and
or
jmp
pop
scas
ins
pushf
mov
(bad)
mov
rdmsr
pop
sbb
outs
loope
inc
xchg
fs
add
lods
xchg
add
cmp
push
out
ins
loop
and
int3
or
sbb
popf
adc
std
and
mov
shl
dec
add
jnp
jo
sbb
jns
add
ret
imul
(bad)
stos
test
mov
jbe
adc
add
mov
das
lds
dec
push
(bad)
rol
ror
das
ret
in
scas
inc
rol
inc
mov
lock
and
add
add
or
cmp
arpl
addr16
fwait
cmp
mov
push
inc
nop
and
pop
sbb
jmp
retf
daa
retf
mov
and
and
ret
xchg
pop
jmp
jns
cmp
mov
dec
lock
dec
sbb
test
ror
sub
cld
fldenv
push
movs
jns
jl
adc
das
scas
push
stos
push
xor
aaa
cmp
mov
data16
jbe
ret
mov
push
daa
cmc
add
add
mov
call
in
sub
scas
stos
push
push
in
jb
inc
arpl
inc
sbb
cmp
add
imul
(bad)
mov
mov
cmps
fidivr
cdq
out
xor
mov
pop
jns
jmp
inc
and
cmp
jge
mov
call
add
mov
or
sub
dec
xchg
ret
dec
sahf
inc
lods
pop
xchg
sbb
or
mov
movs
imul
jle
mov
(bad)
jle
std
and
in
(bad)
cmp
xchg
pop
ds
mov
shr
push
pusha
jge
inc
cli
xor
cld
hlt
in
(bad)
aam
pop
xor
cmp
(bad)
mov
sub
gs
stos
mov
mov
imul
fsub
cmps
in
imul
jne
pop
sub
psubd
clc
shl
jmp
sub
push
mov
push
mov
pop
nop
ret
or
ret
mov
js
sbb
pop
hlt
icebp
repz
ss
fist
add
or
sub
jge
add
lods
inc
pop
push
ret
and
dec
sub
pop
xor
(bad)
jmp
mov
inc
(bad)
mov
jl
push
mov
aad
push
xchg
sbb
xchg
push
pop
xchg
mov
jl
mov
mov
inc
xor
xor
xlat
adc
and
lock
repz
and
sbb
popf
and
fnstenv
or
or
xchg
jmp
std
pop
out
xor
add
leave
fist
push
arpl
xor
mov
mov
and
or
fsub
xchg
sub
ror
outs
fld
xor
pop
mov
les
in
add
lahf
mov
es
sub
sbb
and
aaa
dec
aam
addr16
out
adc
inc
pop
pop
add
movs
arpl
fcmovb
ds
push
mov
loopne
fcom
mov
dec
xchg
fistp
cmp
xor
clc
push
xor
mov
inc
(bad)
popf
pop
out
fild
and
mov
jge
or
pop
pause
push
xchg
aam
pop
jo
cmp
or
jg
clc
push
test
call
pusha
lahf
pop
icebp
or
xor
pop
pop
push
lds
rol
in
xor
aaa
aaa
test
arpl
fisttp
sbb
inc
fidivr
out
hlt
pushf
mov
adc
outs
mov
mov
sbb
dec
scas
imul
es
bnd
lahf
pop
jns
push
fld
pusha
push
pop
in
cmp
jecxz
xchg
push
mov
jecxz
sbb
xchg
add
sub
xchg
cld
fwait
scas
dec
mov
inc
into
popf
ret
pop
xor
push
div
sbb
cmp
sbb
imul
lock
(bad)
into
bound
enter
xlat
imul
add
xor
repnz
cmp
popf
jl
stos
adc
pop
movs
sub
aas
or
pushf
in
scas
(bad)
inc
sub
xor
sbb
fdiv
sahf
aaa
mov
cdq
in
mov
fild
adc
jnp
and
fstp
dec
dec
or
ror
mov
jbe
leave
fst
fbld
jo
test
jmp
jmp
adc
dec
scas
xchg
shr
in
retf
clc
and
call
pop
sub
cmp
fyl2x
push
dec
les
fdiv
mov
sub
jnp
mov
fs
add
enter
jmp
out
ins
and
push
fsubp
or
xchg
test
cld
sbb
cli
jbe
push
and
movs
push
mov
stos
push
test
in
add
mov
cmc
cmp
sub
pop
mov
mov
cmps
pop
in
fidivr
adc
jle
aad
jecxz
jne
dec
aam
call
popa
aas
outs
movs
in
pop
push
jnp
mov
stc
imul
icebp
inc
fptan
pushf
nop
mov
jno
js
mov
jne
fs
icebp
and
and
outs
movs
mov
mov
mov
nop
leave
and
and
popf
add
mov
or
ficom
mov
jne
test
ss
fsubr
jecxz
cmp
pop
and
fidivr
ja
jl
in
and
cmp
mov
add
call
adc
mov
bound
aad
xchg
xchg
(bad)
sub
xor
mov
int
loop
out
cmc
daa
shl
fcomp
ror
jo
dec
jae
(bad)
lods
pop
push
dec
or
push
and
cmp
in
xchg
retf
outs
mov
mov
lahf
ja
js
fsub
ficom
sbb
jb
sub
out
hlt
shl
dec
in
mov
(bad)
lods
adc
call
push
test
retf
or
mov
(bad)
jmp
int3
in
mov
fild
enter
cmp
movups
xchg
jmp
inc
or
mov
loop
outs
and
and
lahf
mov
movs
ret
and
aaa
cld
adc
or
dec
cli
cmp
retf
arpl
cmps
sub
fcmovbe
out
jno
mov
or
mov
add
mov
push
out
mov
add
mov
mov
test
jns
sbb
fwait
sbb
inc
ror
pushf
mov
jb
fdiv
sahf
outs
dec
xchg
and
test
cmp
sar
arpl
enter
inc
jge
push
jge
cli
add
dec
call
adc
add
mov
ss
and
(bad)
sti
jmp
add
lds
ins
dec
sbb
test
(bad)
pushf
out
enter
xor
stos
mov
push
xlat
int
and
inc
retf
ja
dec
call
jecxz
call
and
dec
sbb
stos
sbb
push
jg
pop
mov
mov
sti
xor
add
push
arpl
and
lods
push
sti
shl
pop
sahf
test
movs
mov
push
sbb
shl
out
pop
je
jmp
dec
and
mov
sub
pusha
shr
sub
pop
mov
xor
cmp
inc
xlat
ret
addr16
pop
int
inc
loopne
and
dec
dec
ins
es
push
xor
sub
push
jg
lock
adc
mov
in
adc
(bad)
inc
ret
pop
or
xlat
hlt
push
jb
or
and
mov
mov
dec
cmp
mov
dec
mov
outs
in
test
stc
nop
xor
retf
retf
movs
out
or
jns
dec
out
sub
inc
lods
cmc
fucomi
mov
ror
(bad)
mov
into
xchg
mov
dec
xor
sub
sbb
scas
inc
js
out
(bad)
js
pop
out
pushf
fs
mov
mov
movs
mov
push
pop
pusha
sbb
xor
or
and
ret
rcl
out
jge
scas
push
(bad)
ret
cdq
inc
repnz
and
cmc
xchg
xchg
aad
out
add
push
adc
or
xor
and
push
mov
and
inc
fist
mov
aas
rol
push
inc
sar
add
jmp
push
lods
or
daa
xor
cmp
adc
and
dec
dec
fnstenv
ja
shr
addr16
dec
les
and
fadd
rcl
sbb
xor
push
pop
push
or
jne
xchg
sub
sar
xor
dec
stc
bound
xchg
and
xor
pop
ret
movs
push
cwde
jbe
enter
fmulp
enter
ror
sahf
add
mov
inc
xor
hlt
sbb
ret
in
and
dec
mov
add
mov
add
or
xchg
mov
out
sbb
ins
pushf
jns
push
jmp
(bad)
aaa
repz
pop
pop
hlt
int
xchg
sub
pop
not
jg
mov
mov
mov
mov
jne
shl
pop
and
mov
mov
dec
jbe
push
ins
sub
sar
adc
js
call
jmp
pop
sub
and
pop
sub
and
shl
mov
push
or
inc
gs
into
and
sub
hlt
fiadd
in
ins
les
icebp
jl
cmp
test
pop
xor
xor
pushf
fiadd
out
xlat
xor
(bad)
cli
mov
jmp
inc
jle
sub
sub
jp
scas
aad
repnz
pop
jge
not
lock
sti
fild
mov
sbb
(bad)
xlat
mov
add
(bad)
jge
jle
sub
push
add
pop
sbb
lea
loopne
aas
adc
jb
sub
cli
and
scas
gs
xor
add
sahf
mov
aam
stos
retf
mov
repz
stc
arpl
mov
js
xor
mov
pop
jmp
or
dec
xor
or
and
mov
push
adc
cmp
dec
push
adc
xchg
jp
test
in
xlat
lahf
sti
out
xchg
inc
cmp
in
aad
mov
fistp
jle
and
sub
xchg
sub
and
or
add
xchg
ficom
enter
test
aam
fdiv
clc
loop
jle
and
pop
adc
dec
push
and
pop
and
pop
pop
dec
push
push
sub
call
xchg
mov
xchg
inc
add
jmp
(bad)
out
loopne
into
pop
mov
sub
(bad)
lds
or
divps
lods
arpl
call
mov
repnz
cmp
sbb
jb
clc
sahf
inc
imul
mov
add
cmps
cmp
out
lea
jb
ret
pop
sub
popf
jnp
jae
pop
cmc
pop
popa
pop
movs
imul
lods
pop
push
ss
or
xor
arpl
(bad)
ja
and
dec
repz
(bad)
mov
adc
push
jae
js
ret
sub
adc
adc
mov
xchg
repz
mov
lea
cmp
cmp
je
adc
push
fwait
adc
aad
ret
pop
xchg
or
ror
cdq
or
inc
fadd
fcom
not
sub
mov
pop
adc
retf
rcr
aam
mov
mov
xchg
je
fdivr
sbb
(bad)
and
repz
ret
bound
mov
dec
imul
outs
lock
out
daa
adc
mov
push
sub
xor
pop
mov
test
and
cmp
adc
loope
fidivr
mov
sub
mov
cmp
ret
(bad)
sbb
xlat
pop
jnp
push
cs
pop
shr
jge
dec
push
repnz
push
or
ret
jb
push
jne
lods
xchg
cdq
or
xor
je
and
jl
cmps
arpl
or
aam
dec
adc
popf
push
gs
mov
jno
inc
add
js
mov
adc
std
shr
push
retf
mov
popf
inc
or
xchg
ja
mov
add
dec
or
leave
mov
nop
jge
daa
add
sub
adc
and
add
fdiv
lods
add
call
pop
repz
inc
sub
ret
sub
call
mov
mov
inc
add
(bad)
jae
lods
movs
jle
ret
xor
sti
pop
ds
inc
pop
mov
mov
test
adc
push
mov
in
imul
cmp
mov
pop
pop
jo
dec
test
into
test
ins
fld
mov
pusha
outs
sub
mov
sub
jg
aad
stos
(bad)
ja
jae
add
cmps
call
sbb
mov
inc
sbb
sub
(bad)
sbb
pop
push
inc
or
dec
retf
and
dec
(bad)
movs
ficom
add
into
xor
repz
push
ror
movs
ss
mov
pop
inc
add
loopne
into
inc
jmp
or
clc
int
imul
sbb
data16
dec
jecxz
add
pop
jne
add
and
xchg
loop
in
rol
and
push
dec
bswap
jl
mov
mov
inc
or
femms
mov
inc
(bad)
pop
lahf
cmp
sub
mov
or
sahf
mov
inc
push
aad
xor
adc
push
and
cmp
sbb
push
aad
clc
jne
repnz
jnp
int3
push
pop
push
mov
adc
jge
jae
ret
movs
aaa
pop
aad
movs
cmp
or
pushf
sub
xchg
mov
in
xchg
scas
sub
rol
push
cmp
sub
jnp
test
mov
inc
fld
xor
lock
repz
xlat
fld
lods
inc
lahf
dec
jmp
or
lods
dec
inc
xchg
mov
arpl
sub
push
cld
or
(bad)
sub
mov
push
hlt
xchg
push
adc
add
in
sub
ja
adc
ja
fs
sub
add
push
lds
and
iret
daa
test
xchg
fs
dec
int3
icebp
rol
jbe
aaa
jmp
(bad)
jmp
xlat
pop
jne
xor
lahf
in
pop
sbb
div
(bad)
sbb
(bad)
rol
shl
sbb
ja
movs
cmps
fsub
jbe
jae
repz
xchg
stc
sahf
int3
(bad)
mov
nop
leave
fimul
mov
mov
inc
(bad)
jge
jmp
(bad)
retf
cwde
adc
scas
icebp
cmp
aaa
xchg
test
or
popa
xchg
mov
daa
dec
int
es
fisttp
cmp
add
mov
test
jo
push
and
jecxz
jecxz
stos
push
clc
pop
(bad)
adc
inc
in
stos
cmp
add
rol
outs
in
add
inc
or
and
aad
lock
adc
jno
xchg
dec
xor
(bad)
icebp
sahf
lea
es
push
and
dec
(bad)
idiv
cld
lock
xchg
push
xchg
fisub
or
ret
adc
das
xchg
mov
and
mov
xor
pop
repnz
push
mov
jl
mov
sbb
out
fsub
movs
fwait
jmp
xchg
xor
push
test
pop
jle
popa
xchg
or
rcl
mov
lock
adc
dec
xchg
enter
inc
(bad)
mov
mov
mov
mov
jmp
movs
inc
push
or
mov
mov
mov
movs
in
sbb
and
and
mov
into
retf
jp
out
mov
xchg
pop
jnp
inc
xor
repnz
popa
and
rcr
jno
jae
mov
movs
cmp
enter
into
cmp
push
fild
or
imul
xchg
mov
and
cmp
test
adc
jno
sub
or
neg
inc
jb
or
call
xchg
cwde
jo
sbb
sbb
dec
pop
lock
jns
or
xchg
cmp
bound
mov
adc
stos
push
add
ret
into
fidivr
adc
mov
and
jmp
pop
xor
stos
(bad)
clc
push
cmps
into
jp
inc
(bad)
or
fs
adc
pop
sbb
adc
fnstsw
push
lock
mov
lods
jmp
dec
push
jb
add
push
jmp
pop
jg
sbb
sbb
xor
add
gs
movs
test
fild
ds
jmp
test
(bad)
mov
dec
test
scas
fsubr
je
adc
pop
lahf
mov
inc
inc
hlt
push
xor
retf
movs
lahf
icebp
and
popf
push
mov
mov
cdq
inc
xor
xor
and
mov
lods
push
push
mov
jge
jnp
ret
and
push
cmp
in
and
mov
loope
jl
and
push
push
mov
cmp
div
cmp
out
cmp
and
mov
push
xlat
dec
cmps
xchg
loop
jae
mov
pop
clc
sti
adc
add
je
cmp
add
mov
cmp
add
inc
retf
xchg
add
cmp
and
mov
scas
cmps
mov
sub
xchg
mov
sub
xchg
cmp
cmp
or
jmp
pop
pop
stc
(bad)
mov
adc
outs
pusha
or
mov
fs
test
mov
cmp
shr
adc
out
call
dec
into
popa
sbb
inc
mov
cmps
test
iret
mov
push
sub
xlat
pop
fdivr
sub
je
and
mov
sub
addr16
push
mov
mov
lods
sti
pop
pop
popa
in
imul
stos
jle
fistp
leave
ins
pop
ss
add
cli
mov
mov
call
xchg
call
mov
mov
or
xor
data16
es
test
mov
dec
xor
jecxz
pushf
movs
rcr
inc
std
sbb
push
stos
sbb
mov
out
mov
test
div
mov
dec
and
push
retf
xchg
fwait
or
pop
inc
cmc
ret
or
push
or
sar
inc
movs
cwde
outs
add
fwait
jg
(bad)
adc
xchg
fs
pop
fnstenv
sub
inc
cmc
fcom
in
add
mov
lea
sbb
inc
adc
daa
jge
or
and
lahf
ja
not
into
or
stc
adc
ins
or
ja
out
(bad)
mov
sub
xor
lods
jne
xor
lods
push
xchg
fstp
bound
or
iret
stc
lods
out
iret
push
pop
add
jecxz
jl
shr
cli
dec
jl
call
dec
mov
add
add
dec
mov
push
adc
ret
cmp
into
adc
xor
sub
in
jmp
pop
sbb
adc
adc
rcr
int3
retf
int
test
pop
ja
jae
mov
and
xchg
jg
ret
dec
pop
and
jbe
xchg
into
add
setg
outs
in
out
fwait
or
daa
movs
push
aas
lahf
(bad)
daa
jbe
adc
mov
push
inc
xchg
jbe
enter
movs
push
jnp
xchg
retf
dec
scas
add
mov
mov
adc
dec
movs
or
push
cmps
dec
and
or
sub
call
dec
or
movs
ins
sub
icebp
xchg
push
jne
push
lods
(bad)
sbb
dec
int
inc
xlat
and
mov
sub
idiv
sahf
jo
aas
cmps
scas
lea
adc
rol
inc
loopne
push
mov
das
sbb
leave
add
fmul
push
dec
(bad)
loop
stos
repnz
jmp
int3
jmp
lahf
push
mov
iret
mov
fnstsw
sub
mov
fst
xor
mov
sbb
in
mov
(bad)
fidiv
imul
add
xchg
push
hlt
pop
xchg
push
push
cmps
sbb
test
ficom
(bad)
retf
fs
cdq
cmc
pusha
nop
sub
adc
push
ins
movs
fs
lods
mov
xchg
(bad)
mov
and
add
rol
shl
and
int3
add
repz
mov
aad
leave
inc
xchg
add
add
adc
push
scas
(bad)
loop
xor
inc
mov
test
mov
pop
mov
inc
lea
push
clc
sub
fbstp
and
add
ss
mov
inc
ror
or
add
cmp
cmp
arpl
nop
push
adc
loope
pop
pop
and
xchg
int3
pop
cwde
test
out
sbb
inc
jb
inc
mov
cdq
push
jmp
loop
ret
mov
pop
xor
out
sbb
mov
out
adc
(bad)
pop
retf
xchg
pop
retf
xor
lea
push
dec
adc
push
shr
jo
mov
scas
cmps
(bad)
and
jnp
jp
jb
stc
push
jbe
test
jecxz
cmp
sub
mov
add
cmp
shl
push
pop
pop
jbe
adc
cmps
mov
mov
nop
push
jmp
(bad)
rol
(bad)
aas
adc
inc
jb
lods
ror
xchg
sub
xchg
and
inc
jae
pop
cmp
pop
inc
icebp
push
shr
adc
mov
push
push
mov
mov
cmp
jb
pusha
outs
xor
mov
mov
xor
pop
xor
cmc
mov
pop
xor
adc
and
xchg
movs
jmp
sub
dec
jp
adc
int3
xchg
xor
mov
cmp
xchg
cli
or
ins
or
sub
(bad)
mov
stos
push
enter
scas
push
jmp
std
sbb
stos
(bad)
out
mov
ins
out
add
sub
push
adc
pop
fdiv
cmps
mov
xchg
jmp
addr16
cmc
test
xor
iret
imul
xchg
push
hlt
iret
imul
test
ret
hlt
int3
jg
in
jp
pop
dec
ret
dec
call
stos
pop
mov
jbe
lea
push
xor
add
stos
mov
enter
pushf
add
adc
fmulp
lahf
pop
sbb
jnp
dec
mov
aaa
rcr
mov
xchg
inc
ficom
stos
mov
cdq
stc
or
jmp
xor
ficomp
pop
(bad)
xor
stos
xor
push
jmp
mov
outs
jmp
addr16
add
leave
dec
and
push
pop
xchg
cmps
jo
or
and
repz
jg
inc
push
int3
mov
or
mov
adc
xor
push
sub
add
mov
movs
mov
retf
sub
mov
je
stos
cli
gs
mov
pop
add
jno
les
sub
xor
xor
adc
std
mov
mov
les
mov
sbb
mov
adc
(bad)
and
sbb
xchg
(bad)
sub
popa
add
sbb
mov
retf
mov
jle
push
pop
aad
std
cmps
xchg
dec
popf
add
or
out
mov
cdq
cmps
push
add
adc
push
xchg
stc
mov
bound
cdq
pop
outs
fwait
xor
dec
ja
sub
rol
in
ss
jle
pop
jae
inc
xchg
lea
ja
sub
sub
call
mov
(bad)
dec
call
push
mov
push
adc
(bad)
ins
out
add
dec
fadd
mov
dec
push
(bad)
cmp
fwait
mov
cmc
xchg
or
lahf
les
scas
es
jl
jo
and
les
popf
(bad)
xlat
ror
fistp
mov
mov
xor
jmp
shl
pop
out
mov
mov
call
test
mov
add
sti
sbb
push
mov
xchg
mov
and
mov
ret
xor
jnp
rcr
lods
(bad)
mov
adc
mov
xlat
cwde
aas
into
pop
pusha
and
pop
mov
xchg
cmps
out
and
popa
inc
jl
outs
add
adc
(bad)
scas
jo
push
mov
pop
ja
inc
dec
push
or
popa
cmp
call
into
adc
sbb
xchg
test
enter
add
xor
jns
and
gs
je
sub
(bad)
stos
sub
jnp
sbb
add
pop
cdq
addr16
leave
push
dec
pop
xchg
cdq
mov
dec
adc
push
sub
mov
add
dec
into
sar
lahf
imul
jle
inc
mov
ja
adc
mov
pushf
pop
mov
adc
jg
mov
ss
jmp
push
sub
leave
(bad)
jmp
adc
adc
int3
retf
xor
stos
adc
mov
add
adc
pop
jbe
out
sbb
adc
mov
fiadd
pop
iret
or
adc
push
xor
sbb
(bad)
fisttp
adc
(bad)
bound
dec
push
lea
jmp
mov
or
push
rol
mov
adc
mov
int
popf
add
sbb
mov
mov
and
iret
pop
loopne
(bad)
jle
outs
jne
(bad)
cmps
jmp
jmp
add
and
in
test
add
and
mov
rcl
dec
mov
add
(bad)
mov
dec
jns
mov
adc
test
or
sbb
xor
inc
icebp
push
inc
leave
enter
not
cmp
fxtract
mov
push
std
mov
sub
aas
ins
inc
pop
pop
dec
ja
and
xor
jno
jl
mov
sub
fild
jns
out
xchg
sbb
pop
shl
jp
mov
xchg
addr16
je
out
xor
fs
cdq
call
pop
lea
loop
sub
push
mov
fnstcw
xchg
into
cmp
xchg
add
outs
scas
ins
push
js
imul
mov
test
sub
sbb
lahf
xchg
(bad)
dec
mov
push
mov
xor
push
js
shl
cmps
nop
sbb
js
jmp
jecxz
les
mov
movs
inc
pop
retf
xor
inc
out
xor
cmp
rcl
pop
in
stos
cmp
sbb
idiv
cmps
push
mov
ins
sahf
sbb
dec
test
or
in
retf
sub
or
in
lods
lds
inc
sahf
xor
mov
jmp
inc
sar
inc
xor
cmovno
enter
add
sbb
dec
jmp
movs
cwde
push
adc
inc
fistp
pop
xchg
inc
(bad)
std
adc
jmp
fimul
in
pop
imul
into
pushf
cld
jp
adc
or
fwait
and
enter
div
out
setno
mov
dec
dec
push
cdq
sub
sar
fldenv
inc
xchg
loop
mov
inc
mov
call
dec
rcr
mov
in
pusha
loop
dec
jne
or
jno
and
push
jmp
jne
addr16
push
enter
cmp
lea
daa
xchg
and
inc
pop
lahf
or
sti
in
out
pop
sbb
call
mov
dec
xchg
cdq
fldcw
push
inc
sbb
inc
mov
xor
inc
aam
cld
cmps
jmp
loopne
stc
popf
cmp
imul
(bad)
cmp
loopne
jae
cmp
test
pop
mov
jecxz
jg
and
inc
les
pop
mov
icebp
xchg
cmp
pop
mov
add
hlt
(bad)
cmps
jmp
and
fcom
int3
xchg
lods
fnstsw
push
sbb
add
pop
jle
mov
retf
in
ins
mov
xor
scas
mov
jp
mov
adc
mov
retf
adc
dec
mov
sti
out
(bad)
addr16
ss
jmp
fdiv
cwde
les
cmps
rcr
jg
fnsave
mov
lock
pop
dec
jmp
inc
rcl
scas
aas
das
adc
jecxz
test
dec
pop
jbe
push
mov
pushf
jo
je
in
imul
adc
neg
call
test
add
mov
repz
ret
push
lods
fsubp
and
aas
in
repnz
or
(bad)
icebp
aas
cld
fimul
nop
xor
push
aas
or
aad
call
push
je
jno
mov
adc
xor
dec
out
mov
xchg
je
(bad)
ins
sbb
mov
inc
cld
mov
xor
cli
mov
icebp
(bad)
xor
lods
xchg
callw
dec
push
inc
pop
es
movaps
mov
int3
dec
mov
clc
mov
add
mov
fnstenv
movs
dec
enter
dec
lock
in
push
sbb
adc
aaa
shl
cmp
iret
test
sub
jae
test
pop
stc
jno
and
scas
aam
add
adc
sti
add
add
shl
xchg
outs
(bad)
push
inc
aas
jl
push
add
push
xor
xor
xchg
fstp
inc
jo
xor
pop
cmps
std
fwait
popa
jmp
clc
adc
aad
imul
xchg
into
pop
(bad)
cmp
and
mov
add
sar
mov
dec
and
(bad)
repnz
or
push
scas
rol
jbe
jnp
mov
xchg
sub
sub
ja
mov
js
push
inc
cmp
add
push
cld
sub
mov
mov
sbb
fucomip
mov
leave
lahf
rcr
xchg
repz
nop
int3
ror
push
nop
jo
jecxz
add
or
jge
ror
add
icebp
cmp
out
shr
xchg
xor
jp
xchg
xor
js
sub
jo
cmp
clc
(bad)
inc
inc
sbb
sbb
lods
ins
retf
dec
dec
and
push
inc
inc
mov
xchg
push
in
xchg
loopne
and
das
adc
je
test
test
fistp
xlat
cld
mov
cmc
sub
ret
cli
jl
mov
cmp
xchg
xchg
rcr
in
fcomp
inc
stos
retf
inc
adc
out
imul
es
or
lahf
adc
outs
es
stos
and
lods
mov
jne
push
gs
cli
stos
sbb
imul
adc
cdq
pop
mov
in
fcom
aad
push
xchg
mov
cmp
test
jg
mov
(bad)
xchg
sub
ret
ret
pop
push
in
push
jne
push
push
and
mov
aad
in
pop
mul
mov
int
sub
sbb
aaa
rol
(bad)
cmps
adc
stos
ja
adc
repz
aam
je
out
sub
pop
xor
jno
xor
cdq
adc
sub
shl
lea
shl
(bad)
xchg
icebp
and
sar
jbe
inc
dec
std
arpl
jbe
dec
(bad)
repz
dec
shl
cmps
mov
or
cmps
jl
and
xor
xor
nop
mov
shr
mov
cmp
sbb
adc
pop
mov
push
xchg
xchg
or
push
inc
xor
fsub
xchg
out
and
or
(bad)
lea
add
push
xchg
test
adc
xor
std
repz
scas
cmp
pop
pop
movs
push
ins
retf
add
in
mov
and
enter
fmul
daa
cmps
sub
jmp
sahf
mov
imul
dec
mov
dec
(bad)
clc
push
dec
cmp
push
cmps
jno
inc
jno
pusha
xchg
push
and
jl
pop
test
pop
push
push
mov
push
test
dec
movs
out
mov
shl
mov
ret
inc
mov
ins
xchg
jne
adc
lods
hlt
je
jmp
std
sbb
retf
(bad)
mov
leave
sbb
inc
sbb
ds
jl
jge
pop
inc
mov
xchg
cmps
xor
ss
repnz
je
jmp
ja
lds
repz
pop
mov
movs
inc
lahf
(bad)
stos
inc
(bad)
aad
push
xor
sub
push
sub
jno
movs
xchg
jl
in
call
mov
inc
lods
jecxz
out
lods
xor
dec
fldcw
sub
jmp
retf
xchg
aas
adc
into
sub
ror
xchg
ins
mov
jnp
(bad)
out
loop
cmp
sbb
jno
loopne
call
and
cmp
mov
and
mov
call
jne
sbb
and
dec
mov
es
xchg
mov
push
ss
mov
dec
int3
xor
sbb
adc
push
(bad)
push
(bad)
loope
inc
pop
jnp
push
push
nop
call
jl
xchg
inc
add
stos
inc
sbb
shl
clc
sti
fiadd
int3
xchg
and
xchg
xchg
fcmovbe
mov
jmp
call
mov
or
std
add
std
scas
mov
pop
xchg
cs
cmp
in
(bad)
sahf
out
test
and
or
xor
in
ins
loopne
mov
pop
jmp
mov
fsub
mov
xchg
pop
jae
stc
sbb
inc
leave
in
clc
jmp
inc
es
sub
xlat
add
sub
jb
sub
pop
es
xor
jp
and
add
imul
mov
add
and
mov
and
das
call
ins
add
inc
fisttp
add
stc
icebp
ins
and
xchg
push
and
push
jmp
jbe
cwde
mov
std
pop
cmp
pop
pop
(bad)
lods
push
in
cmp
lods
mov
mov
push
cmp
push
jmp
(bad)
xor
(bad)
xor
and
scas
mov
cmps
push
in
and
xor
mov
cs
xchg
ror
push
test
pushf
or
xor
mov
push
push
add
or
jge
sub
mov
adc
test
not
les
jb
loope
(bad)
push
cmp
jne
test
sahf
cmp
mov
and
sub
dec
xlat
jne
or
xchg
push
dec
test
fistp
call
test
pop
add
xor
or
cs
je
cld
rcr
dec
popf
mov
cmp
pushf
fisub
and
xchg
jns
cli
jp
inc
adc
movs
call
jge
jnp
aaa
outs
leave
mov
mov
jne
rol
cmps
les
xchg
stos
icebp
dec
jae
cmps
pop
es
or
or
(bad)
mov
inc
(bad)
mov
jmp
ins
xchg
call
cmc
add
cmp
xor
dec
sub
xchg
push
fimul
clc
cmp
pop
enter
push
cmc
push
xchg
and
pop
xchg
mov
ja
pusha
mov
fld
push
cmp
cmp
pop
pop
aas
je
jo
sbb
or
inc
clts
cmp
mov
outs
stos
mov
sbb
pop
adc
push
dec
xchg
popa
adc
sar
cmps
mov
add
fdivr
add
jnp
in
push
std
or
adc
mov
jg
add
(bad)
sbb
gs
and
scas
iret
xchg
push
xor
jg
xor
push
jmp
sahf
test
sub
movs
ss
fisttp
dec
fld
movs
hlt
inc
pop
pusha
cmp
in
outs
xchg
pushf
enter
cmps
lds
push
in
test
xchg
popf
dec
sbb
pop
hlt
scas
inc
mov
(bad)
int
cld
stos
test
push
pop
push
stos
imul
addr16
jb
aas
cmp
cmc
rol
adc
cmp
out
inc
inc
into
push
and
in
add
or
mov
and
or
sub
add
jnp
push
rol
pop
sti
scas
cmp
fiadd
sub
sub
loope
add
ds
ss
push
dec
mov
mov
sbb
pusha
fild
xchg
add
mov
pop
inc
hlt
popa
retf
xchg
xchg
das
or
adc
stc
xchg
(bad)
int
dec
inc
rcl
or
stos
int3
add
ins
add
mov
aas
rcl
xchg
jbe
daa
or
(bad)
jp
xor
jbe
adc
nop
mov
retf
xchg
add
sti
jne
push
add
packuswb
cli
mov
outs
cld
mul
(bad)
jge
(bad)
push
lods
xchg
inc
bound
mov
and
cmp
sub
jge
lods
test
add
cld
xchg
arpl
sbb
int
outs
mov
sub
test
ss
imul
scas
and
cwde
xchg
dec
jmp
mov
not
push
xchg
lock
mov
in
movs
xchg
js
xor
imul
rcr
mov
cs
inc
cmp
jle
mov
inc
dec
call
lahf
cld
mov
sbb
dec
movs
repnz
scas
cmp
jg
out
in
test
aaa
ins
int
xor
xchg
xchg
clc
mov
sub
push
mov
add
rcl
or
addr16
cmp
and
enter
es
in
bndstx
aaa
sub
pushf
sub
dec
rol
loop
adc
push
imul
jecxz
jecxz
shr
adc
xchg
addr16
das
std
call
mov
pop
inc
pop
stos
outs
cmps
lock
add
rcr
sbb
jns
fs
dec
mov
xor
leave
and
cmps
int3
mov
inc
mov
jae
pop
mov
adc
popa
push
mov
push
pusha
frstor
cmp
dec
mov
push
sbb
sbb
int3
aam
shl
mov
mov
cdq
sbb
xchg
je
xor
or
loopne
lahf
mov
inc
paddusb
lock
pop
mov
lea
push
mov
mov
adc
and
push
mov
mov
fiadd
dec
mov
xor
mov
mov
push
inc
div
push
jns
loope
adc
add
xor
xchg
aaa
lds
push
mov
add
int
loopne
jle
scas
vmovsldup
movs
lods
cmp
ds
cmc
xchg
cmp
out
xchg
inc
inc
add
(bad)
xor
sbb
or
inc
loope
sbb
jg
and
push
cli
in
sahf
jge
jo
xor
dec
mov
jae
and
sub
cld
jae
into
cdq
loop
add
in
jns
mov
jecxz
adc
pop
pop
ds
sbb
in
repnz
movs
bound
arpl
pop
cmp
sub
mov
inc
pop
inc
aas
icebp
(bad)
and
add
movs
push
cli
ffreep
add
lahf
sbb
test
cli
jg
mov
xlat
repz
mov
lock
inc
shl
sahf
pop
mov
cmp
in
cld
out
das
arpl
add
stos
(bad)
imul
and
inc
push
push
jns
push
pop
add
push
xor
retf
inc
outs
fwait
shr
imul
fwait
lods
adc
adc
lods
je
pushf
leave
js
mov
enter
ret
push
into
ins
int3
sar
lahf
and
jne
sbb
rcr
adc
push
jmp
cld
pop
push
(bad)
push
jae
dec
cli
pop
(bad)
pop
mov
inc
mov
mov
(bad)
cli
add
out
stc
jno
adc
push
mov
jmp
push
call
and
jno
and
fs
data16
sub
jo
mov
xor
adc
mov
or
jnp
fstp
fldcw
fwait
fs
fiadd
and
fild
enter
shl
rol
test
xchg
xor
mov
dec
jmp
mov
mov
enter
out
fwait
gs
xchg
or
jns
sar
add
sbb
fdiv
repz
mov
pop
cmp
movs
mov
ds
jmp
push
dec
jle
mov
popf
sbb
arpl
dec
pop
les
sbb
push
xchg
pop
aad
mov
int
ss
dec
mov
pusha
mov
xchg
cmps
sbb
cwde
lds
add
mov
ins
fwait
(bad)
repnz
fdiv
popf
imul
add
sub
hlt
mov
pop
test
out
dec
fucomip
hlt
outs
jb
cs
inc
fs
jecxz
add
pusha
push
cmp
fld
sub
mov
nop
call
or
lds
bound
out
scas
mov
dec
int
call
push
push
out
or
ins
pop
gs
dec
add
dec
out
inc
hlt
inc
loopne
or
mov
push
aam
sbb
repnz
or
xchg
test
ins
pop
mov
push
pop
mov
push
outs
imul
jl
nop
dec
mov
jge
mov
movs
sbb
inc
ret
sahf
imul
mov
ins
xchg
lahf
mov
add
lahf
mov
and
popa
jb
dec
xlat
inc
inc
pop
test
jae
pop
xchg
call
in
xchg
and
dec
xor
dec
cld
add
adc
jb
test
fld
pop
fst
xlat
sahf
in
and
lds
adc
mov
cmp
mov
(bad)
cwde
movs
out
fcom
fcom
jecxz
mov
mov
leave
adc
dec
and
pop
fnstenv
mov
mov
ret
and
in
dec
sub
pop
arpl
fwait
popf
bound
or
fstp
inc
mov
xchg
mov
pop
fs
sub
sbb
or
stos
and
jmp
push
or
pop
push
imul
fs
jle
sti
cmp
jb
mov
out
sub
dec
call
rol
jg
push
sub
inc
push
adc
jecxz
daa
jmp
aad
add
repnz
loope
adc
(bad)
shl
jbe
cmp
clc
sar
nop
out
outs
push
(bad)
add
into
add
add
and
dec
imul
lock
jnp
or
retf
dec
cmp
stos
(bad)
jb
scas
cs
mov
xor
lahf
mov
and
pop
adc
rcr
(bad)
and
xchg
jno
pop
xchg
ins
add
mov
std
enter
test
jnp
sub
adc
ins
sbb
sbb
sub
mov
xor
clc
sub
fimul
sub
xor
lods
and
xchg
mov
add
out
test
loop
jnp
cmp
inc
cmps
and
test
mov
or
jae
jl
cdq
aas
push
sub
sbb
pop
jne
mov
pop
mov
push
pop
or
xchg
mov
les
lock
mov
push
mov
and
idiv
repnz
hlt
xchg
inc
inc
lahf
sbb
fs
bound
jmp
data16
sbb
pop
ins
cwde
jmp
or
sub
clc
cmp
xchg
mov
shr
add
retf
es
mov
cli
dec
aaa
jne
mov
outs
test
and
fist
xor
xchg
add
pop
sbb
leave
imul
icebp
sbb
xor
gs
push
in
xchg
add
mov
leave
lahf
sub
push
sub
ret
cli
aad
xchg
mov
sbb
gs
mov
lahf
jge
sub
push
push
mov
and
adc
adc
test
lds
jp
xchg
inc
data16
(bad)
ss
fwait
mov
mov
mov
call
popa
xor
xor
test
xor
cwde
cmp
mov
mov
mov
and
or
cmp
xor
inc
mov
sbb
pop
and
(bad)
inc
cmp
push
mov
rcr
test
test
out
push
idiv
jns
nop
(bad)
xlat
push
sub
push
pop
(bad)
imul
fisub
popf
out
or
xor
mov
daa
dec
adc
hlt
(bad)
adc
rol
dec
lods
mov
cvtpi2ps
stc
out
mov
(bad)
sub
add
int
call
ret
pusha
mov
sub
lock
push
std
push
jns
push
sahf
push
push
loope
movs
or
jae
loopne
sub
add
fdiv
mov
cmp
imul
(bad)
enter
test
out
mov
or
mov
mov
gs
jecxz
(bad)
xor
test
pusha
shl
dec
add
dec
mov
xor
inc
aaa
jb
cwde
jbe
scas
fsub
pusha
mov
xor
es
mov
or
xor
test
scas
mov
jnp
add
push
cmp
push
std
pop
xchg
arpl
push
jae
adc
sbb
cmc
or
xchg
(bad)
pop
xor
out
add
mov
jp
repz
dec
and
pop
lea
movs
das
push
ret
mov
aad
call
scas
xchg
in
sub
lods
mov
lahf
(bad)
fiadd
movs
inc
lahf
not
sti
mov
fcomp
jp
mov
lods
ja
jnp
movs
sub
cwde
jle
scas
mulps
jae
(bad)
adc
scas
adc
test
pop
(bad)
xor
call
dec
inc
pop
sbb
aas
mov
xchg
sbb
shr
stos
fst
out
cdq
jmp
pop
pop
arpl
xchg
sub
sbb
daa
enter
das
adc
lods
retf
adc
cmp
mov
jmp
jo
dec
mov
jp
push
popf
loope
sbb
cmps
(bad)
cmp
inc
mov
fld1
les
and
scas
jmp
cli
mov
sti
nop
lods
mov
sbb
pushf
xchg
add
shl
mov
test
bound
je
test
push
adc
mov
cld
lds
into
xchg
cli
add
xor
loop
mov
neg
aas
fcom
pop
cmp
xor
push
les
shl
fld
add
mov
xchg
xor
loop
and
ins
out
xchg
or
mov
push
repz
dec
nop
pop
dec
aad
ss
xadd
lea
retf
xor
cmp
mov
mov
ficomp
xor
jg
rcl
mov
mov
loop
js
repnz
dec
xchg
pop
xchg
mov
test
sar
add
inc
xchg
pop
xchg
sub
xor
mov
imul
(bad)
xor
ins
mov
xchg
jns
leave
mov
mov
sub
xchg
mov
pop
xchg
xor
into
fs
popf
jb
add
inc
add
bound
mov
push
sbb
(bad)
cdq
pop
imul
cmp
dec
fistp
sbb
adc
leave
jmp
sar
sbb
cmc
nop
gs
sub
jge
aas
inc
enter
xor
nop
into
cmp
jmp
ins
pop
cs
shl
cmp
imul
mov
into
and
sub
loop
stos
mov
fld
outs
sub
inc
adc
dec
movs
mov
or
dec
data16
cmc
and
idiv
mov
xchg
(bad)
or
jge
cwde
add
pop
icebp
lds
cmp
daa
jns
rcl
sub
es
and
inc
pop
inc
and
sub
xchg
sub
cmps
mov
pop
mov
pop
es
xor
sbb
leave
dec
mov
sahf
dec
call
pop
cdq
fs
(bad)
mov
pop
jno
popf
push
inc
push
pop
add
lea
addr16
jmp
adc
ficom
pop
and
push
ret
cdq
nop
sahf
cli
mov
cwde
cmps
push
retf
repz
mov
add
sbb
mov
out
or
(bad)
or
jp
mov
xchg
popf
cmps
or
gs
xchg
inc
bound
dec
cmp
xchg
cmps
cmc
xlat
cmc
dec
inc
ins
cmp
jo
imul
pop
in
xlat
push
mov
cmp
push
aaa
ss
in
enter
rcr
dec
sub
lock
xor
out
dec
cmps
sub
call
dec
mov
cmp
cld
pop
mov
cmp
retf
sub
cmps
xchg
mov
int3
fisttp
cmp
push
(bad)
hlt
mov
fistp
gs
push
dec
inc
dec
pop
addr16
shr
lods
repnz
rcl
jecxz
sub
pop
dec
mov
sub
(bad)
mov
pop
adc
and
push
add
add
add
xchg
adc
pause
or
or
dec
push
jo
jle
fmul
pop
mov
pop
dec
jnp
mov
ret
add
(bad)
rol
icebp
mov
adc
dec
sbb
jmp
mov
sahf
dec
dec
int3
leave
cmps
cmp
es
pop
xor
dec
pop
jo
in
or
push
mov
int3
fs
fdivr
adc
sbb
movs
dec
and
sub
inc
sub
or
cmp
mov
mov
lods
in
and
dec
sti
inc
inc
mov
daa
outs
bound
cmc
mov
retf
xor
or
xor
add
(bad)
fstp
fwait
pop
lock
pop
xor
pop
sbb
jg
rcr
mov
ins
mov
fwait
repz
loop
push
push
dec
leave
xchg
call
or
lahf
in
pop
mov
sbb
cmc
sub
and
es
mov
jmp
mov
push
mov
popf
push
cmp
sub
or
and
sub
push
lea
add
and
cdq
shl
in
pusha
cdq
mov
sbb
(bad)
ins
adc
es
hlt
pop
test
mov
sbb
push
cdq
mov
inc
pop
ud2
xchg
xor
dec
sbb
jnp
rcr
inc
dec
sbb
mov
cs
mov
cmp
cmp
fxch
mov
fsubr
or
pop
sar
fwait
dec
jmp
pop
mov
popa
pushf
add
add
jns
rcl
fwait
mov
ins
ret
mov
dec
jbe
xchg
leave
add
push
popf
inc
push
retf
retf
shl
push
jg
imul
mov
jp
shr
mov
mov
adc
test
inc
add
cmp
add
aam
ss
adc
mov
xchg
xor
movs
retf
into
sub
ins
sub
sar
adc
xor
xlat
inc
jg
jne
mov
push
aad
sub
add
push
lods
push
or
loop
ror
cmps
ja
jge
mov
xchg
sar
xor
adc
adc
mov
inc
in
pusha
(bad)
inc
fwait
cmp
jns
mov
(bad)
sbb
call
cmp
stc
int3
mov
pushf
sub
cmp
fldenv
test
nop
pop
mov
les
sbb
pop
mov
fisttp
test
cmp
jnp
lods
cmp
(bad)
mov
hlt
js
adc
(bad)
aaa
mov
inc
les
lock
retf
fimul
jmp
cmp
push
cmp
or
(bad)
jne
ret
pop
js
xor
imul
and
adc
lahf
inc
mov
imul
pop
repnz
cmc
or
fbstp
retf
push
push
mov
adc
sbb
inc
xchg
sti
push
fnstenv
xor
arpl
fld
pop
retf
pop
pop
cmps
add
pop
mov
mov
cli
dec
and
outs
push
sbb
imul
dec
inc
fiadd
lea
add
xor
out
and
pop
or
repz
test
pop
std
div
xchg
aas
ficomp
mov
sti
cmc
sti
rcl
ror
daa
inc
push
xchg
fdiv
pop
popf
and
cdq
nop
and
hlt
sbb
jne
ret
jmp
dec
pop
and
aam
cmp
rcr
mov
mov
in
in
call
sbb
in
aas
mov
push
daa
push
repz
push
mov
scas
mov
pop
jle
mov
fsubr
pop
loope
pop
xor
je
aad
inc
(bad)
nop
fimul
mov
cmps
cmp
leave
jo
mov
jge
es
jecxz
fprem1
push
(bad)
xlat
cmps
pop
int3
rcr
push
or
push
mul
jle
leave
std
je
sbb
aad
pop
fldcw
mov
inc
lods
fs
repz
inc
jp
out
dec
mov
cmp
fsubr
mov
cmp
sar
add
lds
adc
adc
in
popf
daa
xchg
jp
jno
shl
and
aad
fimul
or
retf
push
cmp
xchg
push
xchg
xor
push
fisttp
push
jmp
outs
sub
movs
stos
test
into
sbb
dec
xchg
jb
ret
test
fisttp
pop
pop
mov
popa
in
xor
je
iret
mov
mov
int3
sti
jmp
por
test
add
inc
push
stos
inc
imul
mov
cdq
add
jns
xor
dec
adc
stos
mov
int3
push
es
or
outs
sbb
xchg
xchg
sub
push
sbb
xlat
jns
xchg
inc
mul
mov
and
or
push
(bad)
icebp
inc
cmps
xor
add
jge
mov
jnp
or
(bad)
arpl
inc
sbb
and
std
test
loopne
fbld
mov
and
jge
fcomi
pop
lahf
mov
retf
out
or
cmp
cmc
sub
mov
sar
bound
std
in
and
inc
test
rcl
in
icebp
scas
out
cmp
sub
add
rcl
and
lea
and
ja
jl
push
mov
ins
xor
mov
cmps
hlt
xchg
cmp
arpl
jne
dec
ss
sti
xlat
ins
add
cmp
mov
pop
shl
pop
(bad)
pop
mov
push
adc
stos
daa
out
fisttp
add
mov
icebp
arpl
sbb
xlat
iret
pop
call
push
sub
sbb
ds
sub
push
retf
cdq
outs
outs
push
cmp
loopne
or
out
xchg
jg
mov
jg
push
cmp
add
fdiv
push
in
dec
cmp
loop
mov
shr
inc
cmp
xchg
arpl
int
arpl
jb
aas
cmps
out
js
shr
fild
test
(bad)
cmps
mov
stos
lock
cmp
rol
pop
fbstp
or
xor
push
lods
call
dec
jle
bound
or
les
out
rol
jno
clc
bound
popf
inc
(bad)
pop
fld
aas
add
out
sub
popa
inc
scas
mov
jl
and
push
xchg
xor
xor
jle
cmp
(bad)
sub
in
mov
adc
mov
and
hlt
and
outs
jmp
dec
mov
add
adc
cmp
jmp
dec
inc
sti
mov
out
test
xchg
cmps
lods
ins
sahf
adc
dec
lds
(bad)
call
rol
fucomp
leave
mov
fnsave
jnp
mov
sahf
xchg
push
sbb
mov
mov
inc
add
adc
cmps
pop
dec
xchg
mov
fucomi
out
les
ja
pop
adc
gs
mov
mov
fstp
xor
sub
or
cmp
mov
sub
xchg
jnp
(bad)
rol
mov
jns
fcom
fsubrp
pop
jbe
jmp
pop
sub
clc
fimul
mov
push
stos
mov
xor
outs
xchg
ja
xchg
nop
xchg
mov
int3
jmp
push
in
or
mov
cmp
xchg
cld
jne
cmp
mov
ins
(bad)
and
mov
and
and
popa
lahf
cwde
xor
jbe
inc
dec
jge
fs
shl
das
call
add
sti
mov
fsub
xchg
jne
and
js
pop
or
nop
mov
cmp
mov
(bad)
inc
call
dec
ja
in
mov
xlat
xor
jb
gs
inc
cmps
xchg
mov
idiv
nop
mov
and
lock
pop
adc
sbb
loop
out
imul
sahf
pushf
pop
push
jmp
clc
cmp
inc
icebp
outs
jl
or
popf
xchg
dec
mov
inc
fidiv
hlt
add
(bad)
imul
sbb
shr
gs
sub
xor
xchg
test
ss
cmps
mov
stos
ret
xor
fsub
test
cmp
shl
xor
arpl
mov
push
mov
jmp
sub
mov
xchg
loope
in
pop
push
repz
push
xor
or
jmp
mov
cmp
movs
jp
(bad)
mov
clc
in
loope
jle
ss
xchg
jle
cmps
sub
pop
sub
or
test
loope
mov
push
cmp
jbe
mov
cmp
lea
hlt
push
sbb
mov
mov
imul
sbb
dec
add
xchg
xor
cmc
popa
addr16
or
popf
and
dec
jb
add
(bad)
add
sbb
sub
mov
popf
test
mov
and
test
sub
loope
and
je
rol
adc
pop
loopne
jmp
loope
cmp
ret
adc
mov
rcr
and
push
mov
ds
fstp
inc
dec
cmp
cld
dec
lock
out
pop
(bad)
gs
and
sbb
dec
aam
test
sbb
jbe
loopne
dec
xor
ins
ret
mov
mov
pop
mov
jl
adc
stc
ret
outs
or
loope
inc
movs
cmp
rcl
in
jmp
push
mov
push
(bad)
sbb
jmp
mov
jge
jmp
repz
mov
cli
(bad)
ror
mov
std
das
pushf
and
imul
nop
ins
out
mov
inc
sub
mov
rol
popa
fs
xor
or
stos
adc
cmp
push
cmovl
fs
xor
aam
into
dec
inc
icebp
mov
sub
jbe
bsr
aaa
test
lods
call
lahf
mov
mov
lahf
mov
fsub
gs
pop
nop
(bad)
retf
ins
rol
call
mov
mov
out
not
les
jns
in
add
dec
call
xchg
jo
inc
bound
or
mov
xchg
loop
cmp
out
in
sub
shr
lds
or
push
call
loope
or
pop
jmp
cmp
mov
jl
fmul
sbb
ror
add
cmc
adc
call
inc
pop
test
pop
pop
stos
adc
cmp
push
cmp
addr16
xchg
mov
lahf
daa
je
cmp
xchg
ret
xchg
pop
xor
pop
sbb
or
jmp
pop
adc
retf
in
sbb
loope
xchg
or
mov
mov
add
lea
dec
dec
addr16
and
mov
je
call
mov
scas
inc
sbb
add
loope
data16
push
icebp
jl
jmp
stos
xor
repnz
nop
aaa
sbb
in
mov
scas
aad
pop
mov
push
sahf
push
sub
dec
sub
(bad)
cmp
aam
pop
ror
sar
sub
xchg
pop
dec
cdq
sub
loop
xor
mov
sbb
ins
rol
pop
repnz
jl
mov
(bad)
jmp
fstp
out
push
push
mov
les
or
mov
test
mov
and
retf
push
or
jbe
loope
push
stc
add
jle
jmp
arpl
sub
add
fisubr
imul
adc
scas
in
cli
jo
pop
dec
fsub
sbb
dec
pop
inc
(bad)
fistp
out
add
rcr
scas
mov
adc
fist
xchg
scas
outs
mov
jmp
add
pop
pop
stos
fisub
push
lahf
or
fwait
jbe
imul
mov
out
mov
cwde
dec
push
sub
hlt
je
xor
sbb
nop
mov
xlat
jne
lods
sbb
add
loope
fidiv
dec
mov
adc
jmp
outs
jb
and
pop
popa
mov
into
std
rcr
stc
mov
hlt
in
mov
mov
sub
call
dec
scas
pop
scas
outs
jmp
arpl
jmp
cs
hlt
pop
pop
inc
jmp
pop
cld
ret
sbb
nop
loope
pop
mov
adc
xor
cmp
inc
and
and
xchg
(bad)
sbb
pushf
lahf
mov
scas
test
dec
scas
aad
mov
pop
mov
loope
repz
int3
into
(bad)
test
test
mov
test
lods
adc
add
and
test
mov
mov
aaa
in
cmp
pop
mov
add
pop
mov
ins
sbb
sbb
int
inc
sar
mov
pop
loop
cmp
retf
iret
xchg
push
sti
retf
jg
je
pop
xor
xchg
xor
cmp
ss
add
push
or
sahf
shl
aas
daa
mov
push
jmp
loope
cmp
cli
cmp
cli
(bad)
mov
jl
rol
popf
mov
and
push
sub
pop
hlt
ins
enter
sbb
push
jo
jbe
xor
or
int3
test
loop
iret
xor
inc
mov
arpl
cdq
mov
xor
and
popf
call
std
(bad)
icebp
mov
pop
or
fwait
and
js
sar
dec
jge
lods
stos
out
inc
xor
in
xchg
mov
ins
retf
dec
or
inc
fstp
iret
jno
cmp
mov
out
push
outs
imul
mov
sti
out
sbb
and
push
hlt
stc
hlt
out
fcom
jbe
or
sbb
jnp
popw
call
cld
inc
imul
dec
mov
xchg
das
out
pop
pop
out
nop
sahf
dec
mov
icebp
ret
test
addr16
idiv
test
lods
push
dec
cli
pandn
mov
movs
mov
retf
cmp
out
in
add
rcr
mov
cmp
mov
jle
leave
in
pop
(bad)
jns
idiv
dec
push
adc
and
cli
les
mov
(bad)
mov
in
out
sub
out
adc
pushf
jmp
lea
enter
push
add
add
add
jns
nop
shr
and
outs
dec
nop
xor
sar
sbb
stc
xchg
mov
loope
(bad)
loop
in
xchg
mov
iret
or
aam
iret
(bad)
mov
fwait
jp
ja
push
xlat
or
ret
rcr
xor
lahf
and
es
icebp
int3
xor
popa
outs
add
aad
mov
xor
mov
push
jb
rcl
xor
ins
or
movs
cdq
ret
xchg
iret
inc
dec
aam
mov
iret
jb
stos
fadd
loop
add
call
out
js
and
cli
nop
enter
or
xchg
xor
cmp
mov
aaa
sub
cmp
in
clc
jnp
lods
mov
mov
dec
cdq
mov
push
cmp
inc
adc
and
cmps
neg
push
and
pop
mov
dec
adc
(bad)
jmp
mov
test
push
test
sub
std
jns
push
fs
jbe
xor
shl
(bad)
gs
jle
ins
aaa
movs
mov
cmp
imul
ja
mov
out
cmps
out
inc
jne
fld
push
in
mov
inc
popf
xchg
jnp
mov
cmps
fbld
pop
in
dec
dec
sub
mov
call
inc
inc
retf
inc
jo
hlt
push
mov
lods
cmp
addr16
inc
xor
aaa
or
mov
sbb
sub
push
mov
sub
imul
pop
mov
add
add
or
mov
test
scas
cld
cmps
aas
push
loope
cmp
aad
mov
pusha
sub
fbld
retf
sub
add
ja
cmp
pop
cmp
out
cdq
dec
sub
jle
pop
or
xor
fcmove
test
mov
mov
rcl
pop
sbb
hlt
fwait
call
pop
sub
jno
sbb
mov
test
pop
jmp
mov
ret
ins
ret
or
ret
mov
xor
mov
xchg
mov
shr
sbb
pop
rcr
in
ret
jecxz
mov
rol
pop
jno
ret
popf
mov
pop
jno
repnz
iret
mov
mov
mov
iret
pop
xchg
popa
jp
dec
or
inc
(bad)
aad
aaa
sub
bound
(bad)
retf
in
xor
jo
xchg
out
mov
outs
jo
aam
loopne
cs
bound
ja
jns
xchg
sbb
sub
stc
add
ficom
xchg
inc
adc
lea
je
push
outs
sub
sti
cwde
fstp
retf
cld
dec
pop
dec
out
out
add
shl
add
xchg
mov
push
sbb
mov
xlat
leave
mov
into
cdq
sbb
popf
sub
pop
jns
into
fild
loopne
fistp
nop
cmp
cli
mov
jb
lods
imul
jl
das
sti
test
adc
inc
mov
xlat
or
shr
lock
mov
adc
cmp
outs
je
xor
clc
jmp
mov
jmp
lods
cmp
xchg
xchg
fs
mov
adc
pushf
stos
xor
fisttp
and
mov
test
mov
push
jnp
push
aaa
repz
mov
push
loope
jge
xchg
or
(bad)
js
add
call
pop
pop
sti
clc
iret
push
adc
and
int3
inc
ficom
cmp
adc
je
imul
inc
call
cmp
mov
and
stc
lods
add
xchg
in
sar
add
jbe
jno
xor
and
cmp
sbb
test
xor
jae
jg
cmps
jg
inc
sbb
fcom
test
xlat
lods
imul
rcr
call
sub
lock
fs
cmp
pop
mov
or
xchg
push
jb
mov
dec
add
loope
je
mov
mov
inc
xchg
stos
int3
loop
jg
jbe
xchg
xchg
sub
in
xchg
sub
mov
icebp
push
pop
ret
sbb
mov
pop
add
sbb
nop
add
adc
mov
inc
dec
mov
dec
(bad)
ficom
ds
or
retf
stc
ret
lods
push
mov
aad
jmp
sbb
test
sbb
and
outs
xchg
shl
or
jbe
mul
dec
mov
adc
dec
pop
mov
pushf
das
enter
lock
and
xchg
stc
jmp
pushf
pop
retf
sbb
jg
rcl
jns
or
jle
icebp
sub
sub
outs
dec
adc
int3
repnz
outs
or
int
dec
xchg
add
add
mov
(bad)
stc
test
dec
arpl
in
jb
stos
add
mov
or
ds
test
pop
xchg
in
add
adc
scas
sub
loope
shl
lods
dec
cs
pusha
push
test
xchg
mov
jo
dec
data16
dec
fisub
add
loopne
cmp
test
ss
fbstp
jnp
xor
xor
dec
mov
mov
shl
sbb
test
cmp
bound
cmp
xor
mov
xchg
and
mov
mov
cmp
mov
dec
jae
dec
jae
test
icebp
cld
sbb
xor
pop
leave
pop
jbe
jno
scas
inc
xchg
aam
pop
pop
mov
or
push
imul
rol
(bad)
popf
mov
mov
ds
xlat
add
fcomp
cmp
sti
mov
fnsave
(bad)
test
mov
movs
daa
outs
in
sbb
push
movs
loope
in
retf
push
push
es
(bad)
int3
push
fst
hlt
adc
(bad)
pop
lods
and
pop
dec
pusha
mov
or
xor
loope
mov
out
or
push
add
cmc
repz
int
fstp
inc
std
hlt
jecxz
into
aaa
adc
(bad)
mov
sub
jb
mov
add
rcr
or
jb
sub
mov
and
xchg
sbb
cmp
test
mov
mov
sti
imul
rol
call
mov
push
and
jae
pop
nop
jo
and
arpl
je
loopne
mov
mov
mov
int
pushf
xchg
mov
mov
mov
pop
out
xchg
pop
inc
pop
mov
mov
jg
dec
jmp
cmps
rcl
out
sub
xchg
jnp
sub
mov
push
jp
sbb
ret
sub
inc
ror
inc
js
out
jp
or
hlt
int3
jmp
pushf
es
movhps
jne
ja
out
ja
out
pop
js
jmp
cmc
xchg
xor
je
mov
into
pop
pop
mov
cmp
lods
fwait
lods
lea
xor
and
shr
sbb
mov
xor
daa
popa
mov
mov
inc
rcl
repz
sub
or
mov
daa
or
sub
sub
mov
call
cmp
mov
je
cmc
pop
xchg
cmps
lods
stos
xchg
clc
xlat
jnp
or
jp
cmps
pop
mov
xor
inc
std
pushf
mov
adc
inc
pusha
shl
push
jb
inc
jno
cmp
stos
cmps
add
cmps
xor
popa
sahf
adc
push
mov
(bad)
jnp
cmp
pusha
dec
(bad)
jo
jmp
pop
icebp
mov
pop
sar
aam
mov
lods
pop
jnp
mov
cmps
dec
xlat
xchg
jmp
das
call
or
aad
cmps
adc
imul
pop
shl
aam
or
into
jo
xchg
int3
fsub
popa
jbe
pop
or
sbb
mov
pop
mov
jo
sbb
sub
dec
aas
and
or
imul
sbb
cmp
add
and
mov
dec
leave
stc
mov
cmc
mov
jns
enter
out
mov
retf
fld
pop
push
aad
leave
xor
test
stos
into
mov
movs
or
call
add
pop
scas
fcom
jae
popa
sbb
in
jle
pop
stos
outs
dec
imul
inc
adc
adc
xor
jb
js
in
xor
rcl
lods
daa
mov
jae
pop
xor
sbb
(bad)
or
cmc
nop
cmp
and
inc
pop
push
dec
xor
cwde
lea
(bad)
xor
loopne
jmp
fdivr
aaa
in
push
push
movs
in
pop
movs
push
outs
aaa
dec
dec
adc
dec
ss
or
(bad)
cmp
adc
pop
shl
jb
retf
bnd
leave
fisttp
fidivr
mov
xchg
sbb
ss
test
arpl
pop
inc
xor
xchg
mov
mov
push
cmp
pop
mov
lods
pop
es
jl
(bad)
adc
(bad)
shl
in
popf
xchg
test
mov
cmp
mov
pop
daa
dec
(bad)
xchg
pop
cmp
into
inc
mov
stos
fdivrp
hlt
leave
es
fidiv
dec
hlt
and
sbb
in
loop
cmps
jg
pop
out
stmxcsr
and
and
mov
adc
xchg
cmps
xchg
xchg
fnstsw
in
push
aad
or
mov
xchg
push
and
mov
sar
jmp
mov
adc
push
xchg
sbb
bound
add
mov
aad
sub
inc
and
in
inc
(bad)
pop
mov
addr16
push
pushf
push
xor
or
pop
fwait
sbb
xor
push
jb
xchg
fdiv
xchg
add
inc
xchg
pushf
dec
jns
fucomip
enter
add
xchg
pop
(bad)
cs
pop
dec
nop
out
pop
call
adc
in
sbb
movs
aam
test
sub
fdivr
jl
mov
test
pop
push
dec
es
dec
and
xor
bound
out
(bad)
fistp
mov
test
push
ror
mov
retf
sub
stos
aaa
sbb
xchg
pop
stos
xlat
sti
retf
xor
and
cmp
mov
pop
stc
movs
std
mov
and
sahf
dec
inc
adc
and
call
sbb
int3
mov
mov
(bad)
jp
mov
test
ss
cmp
push
push
ret
pop
and
aas
dec
jp
xor
xor
pop
mov
fmul
mov
mov
lods
pop
mov
pop
mov
rcl
lods
jbe
xor
adc
repnz
lods
outs
push
mov
add
cmp
cmps
ss
adc
jmp
sti
xchg
pop
inc
ror
mov
imul
addr16
pushf
push
mov
rol
pop
dec
push
shl
lea
add
cmp
mov
or
ret
enter
cmp
cwde
icebp
daa
mov
aas
add
cmp
(bad)
xchg
pusha
dec
dec
cmp
push
into
call
cmp
shl
test
lock
push
sbb
rol
test
dec
xor
sbb
test
mov
cs
mov
xor
xor
jnp
dec
in
push
gs
and
mov
movs
ss
xchg
jbe
xchg
mov
in
mov
mov
pop
jo
cmps
icebp
enter
shr
fucomip
push
jl
and
imul
mov
(bad)
cmp
mov
lock
nop
(bad)
and
unpckhps
xor
call
in
mov
inc
ss
jnp
mov
adc
sub
std
mov
mov
not
movs
push
adc
rol
mov
std
(bad)
std
mov
call
sbb
in
xlat
mov
sub
and
and
xlat
pop
pop
test
pop
or
cdq
dec
pushf
bound
popf
(bad)
xor
add
xchg
(bad)
(bad)
arpl
dec
dec
ret
xor
sbb
movs
pop
adc
and
xor
sub
not
xor
xchg
cmp
out
jge
pusha
retf
adc
cmc
mov
adc
popa
into
xor
aas
mov
scas
mov
jle
or
dec
movs
fs
sub
clc
mov
stos
pop
pop
and
(bad)
mov
int3
sar
(bad)
push
cmp
imul
lea
mov
lea
vunpckhps
sub
sub
and
adc
outs
jmp
es
mov
imul
fcom
sbb
ds
retf
xchg
cmp
sbb
push
hlt
xor
xchg
inc
cmp
mov
xchg
cmc
adc
imul
adc
cwde
std
add
xor
lea
push
sub
loopne
push
sub
add
xchg
xchg
pop
aad
push
and
sahf
not
ret
push
sub
ja
jl
sbb
repnz
add
xchg
dec
call
mov
add
rcl
fmul
scas
push
mov
(bad)
shl
xor
pinsrw
(bad)
lods
fist
fld
sbb
cmps
shr
retf
or
push
and
mov
outs
cmp
push
adc
pop
push
push
xor
and
adc
out
aam
mov
inc
cmp
adc
test
inc
aam
or
sbb
shr
add
jns
out
jmp
mov
scas
fiadd
and
mov
sub
add
push
mov
sub
shl
aaa
outs
stc
jmp
ds
imul
add
clc
mov
pop
pushw
fild
adc
fsubr
cmps
adc
jbe
scas
mov
sub
dec
sbb
mov
ret
and
dec
inc
int
dec
nop
scas
fistp
(bad)
dec
std
ss
lods
push
sbb
enter
mov
icebp
inc
lock
sub
jne
(bad)
xor
inc
std
inc
loop
mov
and
mov
pushf
pushf
push
sub
jns
cmc
les
cmps
out
mov
jb
push
or
pop
in
dec
test
push
int
mov
ins
or
cmps
enter
mov
adc
push
scas
sti
sub
rol
stos
fcom
inc
jno
(bad)
(bad)
add
mov
in
pop
inc
jle
fmul
xchg
mov
(bad)
mov
das
adc
sub
mov
cmp
add
data16
arpl
js
ins
je
addr16
call
(bad)
aas
push
test
mov
ror
mov
push
cli
dec
jne
push
sti
ins
or
lds
ja
leave
arpl
mov
loope
stos
fdecstp
ins
lds
adc
pop
stos
lods
dec
stos
xchg
xor
ret
inc
in
(bad)
imul
sub
mov
xor
int3
jl
jp
(bad)
movs
add
xchg
jle
cwde
pusha
sbb
test
mov
mov
or
dec
mov
add
sub
call
push
push
outs
dec
sbb
gs
push
scas
in
pop
loopne
inc
shl
fcomp
cmps
add
inc
popw
or
bound
arpl
xchg
mov
bound
sub
mov
je
pop
xchg
outs
pop
lods
movs
cli
pop
je
or
cmp
push
jnp
fimul
dec
and
call
out
jnp
sub
repnz
std
cmc
idiv
jbe
popf
sub
cwde
inc
add
or
js
pop
fidiv
add
jg
sbb
cld
cmp
xor
fsubr
retf
mov
into
mov
add
jne
test
pop
addr16
jge
push
addr16
mov
fs
pop
lods
sbb
mov
mov
adc
mul
jg
xchg
inc
cli
in
jle
rcl
jne
cmp
sbb
test
mov
add
push
imul
xor
jae
test
sbb
jl
mov
xchg
jecxz
fsubr
ror
jg
movs
mov
xchg
xchg
sbb
retf
xor
scas
push
sti
sub
dec
stc
jmp
in
jne
mov
adc
out
clc
call
(bad)
dec
(bad)
(bad)
int3
inc
cmp
cmps
icebp
ret
cmps
cmp
dec
lock
mov
sub
mov
call
mov
in
push
popa
aad
movs
mov
pop
inc
in
clc
jle
mov
push
ficom
repnz
daa
clc
not
mov
xor
cs
stc
push
nop
jge
add
mov
xchg
iret
fadd
fiadd
inc
in
and
jnp
jae
xor
cmp
jns
data16
dec
xor
inc
es
outs
stos
sbb
arpl
fadd
add
inc
call
sub
shr
int
jmp
mov
add
imul
inc
fdiv
fmul
mov
inc
iret
sti
xchg
syscall
enter
mov
daa
test
and
dec
aas
dec
test
scas
xor
js
jae
sbb
or
xlat
inc
mov
xchg
lahf
dec
mov
mov
les
inc
imul
jl
test
lods
test
test
mov
ins
jmp
add
and
mov
retf
and
fisttp
test
(bad)
fnsave
inc
imul
call
jmp
int3
xchg
push
push
cli
jae
(bad)
cmp
xchg
adc
nop
add
mov
jbe
mov
push
mov
jbe
xchg
xchg
jmp
pop
xchg
push
repnz
in
mov
jns
add
dec
adc
ret
xchg
xor
daa
xor
clc
cld
sub
shr
ja
dec
push
outs
pop
ret
(bad)
xchg
std
rcl
adc
or
cwde
xchg
dec
(bad)
sub
test
popa
mov
xor
fs
popa
(bad)
out
fidivr
add
imul
aas
ror
jg
mov
clc
sahf
movs
jp
scas
sub
cs
iret
mov
aad
test
or
stos
neg
inc
push
mov
repnz
add
xor
mov
jne
and
pop
add
xlat
push
dec
fcom
pop
shl
stos
jne
out
icebp
test
cli
rcl
jge
cwde
mov
pop
int3
jb
shl
and
xlat
fs
mov
es
mov
add
sbb
shr
iret
fcmove
xor
stos
or
jmp
xlat
and
ret
add
rol
int
loopne
test
out
pop
add
(bad)
lods
adc
js
daa
and
(bad)
in
into
rcl
sbb
imul
sbb
xchg
shr
mov
fdiv
and
mov
mov
adc
(bad)
jl
into
xchg
sti
jbe
pop
pop
mov
cmp
cmp
mov
xchg
mov
lock
out
sub
(bad)
cmp
popf
ja
push
xchg
out
push
shr
push
pop
daa
fs
push
mov
and
jbe
jp
sahf
mov
inc
sbb
pop
jge
mov
mov
enter
dec
sahf
jmp
loopne
std
sub
call
js
pop
repnz
ret
jnp
dec
jno
test
jno
nop
xor
mov
xchg
lahf
push
adc
mov
jnp
xchg
add
or
xchg
mov
imul
daa
push
nop
mov
sbb
lock
xor
arpl
push
inc
fisubr
aaa
(bad)
or
mov
les
cs
clc
popf
scas
shl
mov
loop
int
xchg
gs
icebp
pushf
inc
mov
mov
mov
jp
fisub
inc
mov
fbstp
(bad)
dec
je
popa
ss
sbb
push
pushf
movs
jmp
std
in
push
pop
(bad)
and
out
jl
push
movs
adc
sub
adc
adc
jmp
mov
dec
inc
mov
fwait
ins
xchg
leave
outs
jg
cmc
cmc
jmp
shr
sub
xchg
cmp
aam
shr
mov
in
xlat
mov
or
sti
mov
daa
cdq
adc
dec
scas
out
imul
mov
ins
popa
xor
dec
add
out
jae
call
jg
mov
cmp
dec
test
(bad)
not
sbb
mov
arpl
and
pop
sbb
push
je
cdq
popf
jae
loop
mov
mov
fidiv
mov
mov
test
push
in
jle
sub
sbb
push
pushf
fadd
jae
xchg
and
inc
push
add
mov
sub
loop
aaa
xchg
(bad)
mov
xchg
mov
sti
push
(bad)
scas
sub
push
fsub
mov
cmps
mov
fnstcw
push
lods
dec
cld
jbe
ins
inc
push
mov
stos
cmps
loope
pop
movs
mov
push
and
pop
cmc
ret
js
or
ds
test
jle
push
jns
scas
retf
sub
xor
fimul
out
das
in
mov
dec
data16
mov
pop
ror
mov
mov
aas
movs
sub
xor
push
mov
mov
scas
cmp
dec
push
xor
sub
fist
inc
pop
cmp
pop
lock
inc
xchg
push
cmp
fwait
inc
sti
cmp
cmc
cwde
int3
out
int
sub
mov
scas
push
jno
mov
sbb
ja
fbld
fisubr
dec
enter
mov
and
lea
add
test
test
clc
pop
mov
mov
or
cmp
sbb
shl
and
pop
stos
fldpi
cmp
lods
daa
push
ins
pop
dec
xchg
int
mov
jmp
js
dec
mov
cs
push
test
push
cmps
add
mov
mov
xchg
mov
add
pop
ss
mov
std
scas
xor
pop
xchg
push
push
add
std
xor
add
je
int3
test
sbb
push
in
and
dec
imul
add
xor
pushf
jbe
push
mov
out
out
movs
sar
add
and
fs
or
out
sbb
cdq
mov
mov
out
sbb
dec
mov
scas
popf
cli
test
popa
(bad)
cmps
loop
es
push
xor
xchg
movs
movs
xor
or
pop
adc
je
mov
jne
xchg
shl
scas
mov
mov
xchg
pop
mov
xor
xor
std
add
call
inc
test
jmp
test
push
jmp
fwait
dec
test
or
mov
adc
sbb
and
sbb
imul
push
pop
or
sub
dec
(bad)
mov
mov
ins
cmc
xor
das
mov
and
outs
pop
or
xchg
scas
rol
fwait
xlat
shl
or
or
fs
cmp
call
outs
loope
or
mov
dec
aaa
cmp
addr16
push
das
aad
std
bound
add
push
sahf
pop
sub
mov
imul
mov
push
push
or
sti
pop
xchg
push
popf
jecxz
hlt
mov
lods
test
mov
push
pop
adc
mov
mov
lods
add
loopne
lods
stos
test
jg
retf
repz
sub
push
jg
push
dec
push
enter
lods
int3
jecxz
cmp
pop
iret
sub
repz
ret
sti
out
fisub
cmc
pop
mov
push
sub
jne
test
mov
movs
das
scas
push
or
xor
or
mov
in
jmp
shr
cmc
pop
fwait
test
xor
fst
pop
bound
sub
mov
stc
adc
inc
test
fiadd
int
test
sar
and
xor
sahf
(bad)
add
push
je
pop
push
aaa
shl
jne
mov
bound
orps
cmp
inc
push
aam
push
test
xor
iret
cmp
scas
xor
jle
imul
div
mul
out
mov
inc
mov
int3
js
sbb
mov
and
pop
sbb
icebp
xchg
mov
xor
jb
cmp
push
dec
fmul
clc
std
loope
push
movs
test
(bad)
dec
xor
jnp
xchg
pushf
(bad)
std
stc
jecxz
loopne
pop
jns
js
xchg
push
pop
fist
xchg
mov
aam
sub
push
aam
jno
or
leave
mov
xchg
repnz
stos
cmp
add
into
mov
jnp
xchg
cmp
mov
adc
xor
(bad)
xchg
or
and
sub
sar
pop
mov
(bad)
nop
mov
cmc
scas
mov
loop
mov
mov
jge
ret
adc
pop
mov
jmp
lds
daa
je
cmp
test
push
pop
add
retf
hlt
fcomp
sub
and
pop
adc
push
stc
adc
aam
repz
cwde
adc
(bad)
fwait
loop
(bad)
fbstp
enter
sub
ja
push
cld
push
pushf
outs
pushf
jle
in
pop
ret
movzx
dec
inc
mov
test
arpl
jge
pop
shr
loopne
inc
sti
xchg
scas
nop
cmc
and
mov
es
push
clc
sbb
call
cmps
pop
or
dec
test
fldcw
leave
sbb
jmp
cmp
popa
or
and
(bad)
cwde
(bad)
fsubp
popf
stos
push
out
imul
popf
cs
(bad)
fnsave
vcvttpd2dq
dec
xor
shr
pop
cmps
retf
das
lods
shr
xor
mov
or
std
repz
or
cmp
sbb
cmp
mov
xchg
pop
mov
cwde
aaa
out
sti
mov
add
mov
mov
daa
fistp
adc
mov
out
dec
mov
dec
test
pop
mov
xchg
mov
jp
jmp
cld
out
loop
mov
jmp
in
das
xchg
js
stos
xchg
and
setnp
inc
adc
sbb
xchg
push
mov
pop
push
daa
(bad)
hlt
ss
pushf
retf
push
ins
and
retf
inc
jmp
mov
xchg
cdq
mov
mov
cmp
in
xchg
ret
(bad)
in
idiv
cmp
pop
mov
into
push
adc
fxch
test
(bad)
sbb
div
jne
popf
mov
pop
fwait
test
es
out
or
sbb
ja
rol
jg
maskmovq
idiv
dec
mov
xchg
pop
mov
sub
jge
xchg
cdq
aam
xor
mov
mov
out
add
imul
jne
dec
mov
jecxz
push
jmp
and
ja
cmp
bound
jge
pop
push
jne
and
retf
lods
inc
push
dec
mov
pusha
and
into
sbb
adc
cs
js
pop
or
sti
das
pop
mov
inc
xchg
and
ins
push
call
lock
pop
(bad)
pusha
adc
xchg
in
mov
sub
fcom
sbb
loope
mov
jle
push
sbb
mov
mov
(bad)
int3
out
rcr
call
mov
mov
mov
mov
adc
outs
mov
in
(bad)
in
xchg
add
adc
inc
push
out
(bad)
adc
popa
out
or
and
fs
or
mov
push
jmp
inc
cmps
push
jne
leave
mov
aam
dec
iret
hlt
adc
ins
imul
jmp
imul
cmc
jp
jno
shl
fadd
mov
xchg
fnsave
jae
ret
and
fisubr
data16
ja
mov
in
imul
ja
addr16
clc
sahf
gs
and
push
idiv
out
mov
add
or
std
les
popf
jg
add
or
into
sbb
jo
pop
mov
inc
mov
adc
stc
or
scas
or
xor
pop
sbb
mov
call
fdiv
jbe
lods
fnstsw
icebp
xor
jge
adc
and
mov
adc
add
(bad)
out
xchg
in
test
mov
(bad)
or
aam
jbe
adc
lahf
scas
call
fcom
jnp
outs
test
(bad)
ror
push
and
fwait
shl
inc
inc
mov
test
outs
adc
(bad)
xor
aad
cmps
ds
int3
push
cli
xchg
js
js
mov
into
icebp
aam
cld
pop
mov
xchg
(bad)
push
mov
mov
lea
or
inc
mov
outs
pop
cs
jmp
or
jge
inc
mov
and
shl
sbb
lock
push
sahf
lods
pop
mov
jb
ins
jns
movs
jne
bound
and
push
int
inc
(bad)
fcom
jmp
into
les
das
in
xor
mov
test
fwait
push
xchg
div
stos
pop
icebp
sahf
shl
mov
add
xor
ja
stos
les
cmp
fstp
add
movs
mov
mov
jecxz
jge
popa
gs
and
imul
and
xor
mov
jae
xchg
imul
test
fisttp
jge
test
inc
mov
or
and
adc
retf
sbb
cmc
test
add
adc
data16
and
shr
fisttp
jecxz
ret
stos
(bad)
and
cmp
stc
push
push
ds
fs
inc
ds
mov
push
bound
in
int3
fist
std
push
xchg
jno
(bad)
mov
or
sbb
sbb
dec
xlat
sbb
pop
ror
jecxz
inc
dec
addr16
scas
jnp
loope
repnz
or
add
fisttp
and
jecxz
ds
inc
ror
mov
cwde
mov
inc
mov
dec
and
add
rcr
out
and
mov
cmp
push
dec
std
jae
popf
xchg
or
int3
gs
xor
mov
cs
mov
cmp
xor
cmp
stos
out
add
jmp
push
loopne
sbb
leave
or
or
dec
xchg
mov
pop
dec
jo
fadd
jnp
mov
ret
cmp
aad
mov
pop
call
nop
lods
sub
pop
mov
inc
pusha
hlt
cwde
fisub
inc
ffreep
popa
add
dec
loope
scas
sahf
adc
push
out
mov
sub
dec
adc
xchg
xor
in
jle
aas
idiv
test
aas
outs
push
shl
fistp
loope
sahf
mov
test
push
adc
sbb
add
mov
test
jl
jns
sahf
sub
add
and
(bad)
jae
jns
dec
xchg
inc
js
xchg
mov
je
mov
jb
frstpm(287
pop
or
ins
call
test
inc
aam
sub
pop
dec
mov
es
imul
scas
dec
ret
pushf
ror
dec
mov
lods
xor
fst
sbb
repz
hlt
(bad)
fisubr
(bad)
jmp
ret
add
jl
mov
jno
js
stc
cmps
popf
(bad)
std
daa
outs
lahf
cmp
shr
loope
loopne
xchg
(bad)
shr
js
and
jne
ja
sub
mul
cs
movs
pop
test
push
xchg
mov
frstor
adc
sbb
data16
and
pop
push
dec
ins
outs
jbe
cmp
xlat
je
pop
pop
inc
adc
inc
das
(bad)
call
or
add
mov
push
cmps
clc
xchg
dec
mov
ins
cmp
test
in
in
inc
mov
(bad)
or
loop
lea
adc
fisubr
test
xor
dec
lods
inc
jmp
mov
sbb
loopne
loope
cli
dec
fwait
int3
ret
mov
lods
pop
adc
inc
repz
test
add
cmc
jg
std
mov
pop
fdivrp
push
cdq
dec
enter
div
cld
sbb
mov
test
jae
pop
pop
sbb
stc
adc
jb
scas
in
jp
inc
fcom
in
scas
or
imul
cmc
xchg
xor
jge
lahf
xchg
ss
lods
out
mov
xor
pop
es
sub
jno
dec
loopne
in
adc
jmp
shl
jmp
sar
jge
aad
inc
dec
fstp
inc
dec
fldcw
and
jl
mov
imul
call
dec
cwde
lods
scas
outs
xchg
ficomp
pop
inc
lods
cmc
aaa
in
and
jl
jb
add
mov
mov
nop
(bad)
add
pop
clc
add
pushf
or
sbb
jmp
xchg
std
jbe
(bad)
or
cmp
dec
scas
mov
je
inc
xor
movs
sub
lods
jg
pop
jb
cwde
inc
jecxz
mov
les
dec
popf
dec
fisttp
push
fnstsw
mov
arpl
loop
cli
loop
retf
inc
into
push
aam
dec
xor
cmps
loope
push
dec
sti
adc
mov
retf
fcomp
cmp
jns
jecxz
cmps
mov
push
loopne
xor
ret
pop
ins
jnp
leave
loope
mov
mov
mov
sti
pxor
fucomi
pop
jl
test
add
or
(bad)
sub
repnz
dec
loop
push
aas
push
inc
push
and
cmp
fadd
add
and
call
jne
pop
sub
inc
movs
add
mov
dec
div
mov
iret
fwait
dec
xlat
movs
jae
stos
mov
(bad)
adc
adc
mov
stos
push
xchg
in
sbb
push
push
dec
ror
outs
mov
sub
sahf
retf
and
mov
xor
std
fcmove
cmp
or
inc
lods
or
fwait
inc
sahf
xchg
daa
rcr
sar
add
adc
jge
adc
jp
fcom
sbb
dec
arpl
or
nop
mov
pop
popa
fwait
sbb
xor
push
mov
sub
leave
mov
cmp
pusha
add
lods
cdq
jle
sti
push
push
sbb
fbstp
icebp
push
imul
stc
sub
retf
mov
movs
repz
xchg
int3
into
cmc
addr16
xor
mov
cmp
xor
imul
mov
js
mov
sbb
sahf
push
push
dec
sbb
mov
daa
add
fcomp
or
xor
pop
add
les
sbb
push
adc
mov
out
cmp
pop
pop
popf
or
inc
ror
mov
mov
sar
lahf
shl
cmp
sub
dec
jge
or
dec
stc
popw
mov
test
into
lock
lods
leave
pop
into
mov
push
sbb
jg
fisubr
movs
adc
lock
mov
sbb
cli
jecxz
mov
adc
dec
(bad)
xchg
pop
cs
cmps
push
out
pop
retf
jmp
aad
add
cmp
je
adc
mov
fstp
mov
int
push
or
imul
mov
addr16
mov
enter
shr
dec
cs
out
pop
or
sub
pop
jg
sub
mov
push
or
(bad)
adc
fyl2xp1
imul
in
push
addr16
faddp
ins
int3
hlt
or
fld
cli
jp
retf
rol
xchg
leave
and
sub
std
arpl
xor
mov
sbb
in
(bad)
leave
and
movs
mov
add
(bad)
xchg
or
fmul
inc
adc
scas
mov
jmp
adc
mov
sbb
push
repnz
pop
mov
dec
add
(bad)
adc
pop
cmp
cmc
stc
fucomi
or
addr16
add
push
das
stos
pop
add
mov
jno
lock
in
mov
(bad)
jno
jmp
loopne
movs
xor
jns
add
pop
xchg
xchg
mov
sub
jno
das
pop
into
dec
iret
dec
les
daa
dec
sahf
jp
or
shl
cmp
mov
lock
sub
mov
mov
jne
xchg
sbb
add
pop
ret
or
sub
cmp
mov
int3
leave
sub
rcr
sar
and
jno
rol
scas
rol
mov
leave
(bad)
clc
and
into
inc
out
fst
inc
call
mov
push
jp
jl
addr16
adc
enter
call
hlt
xor
jl
xchg
out
enter
jp
ins
pop
outs
xor
xchg
cmp
adc
dec
(bad)
arpl
test
adc
xor
retf
mov
push
adc
cli
sahf
mov
imul
or
pop
jge
pop
jmp
mov
mov
cmp
inc
mov
mov
sub
fstp
iret
loop
das
xchg
xchg
in
sbb
inc
pop
inc
nop
sahf
xchg
shl
aad
xor
mov
pop
push
inc
gs
push
jnp
mov
call
xchg
nop
mov
mov
push
jecxz
movs
scas
cli
and
pop
xor
aas
cld
mov
dec
mov
shr
fwait
movs
aam
or
xchg
jne
rcr
mov
dec
cmp
cwde
(bad)
dec
mul
fwait
aad
(bad)
jle
cmps
mov
xlat
dec
mov
aaa
cmp
mov
pop
je
daa
xchg
xchg
push
aas
dec
cmp
(bad)
jno
cs
repnz
jecxz
jle
cmp
outs
add
test
cmp
mov
pop
int3
dec
inc
pop
push
mov
add
dec
fistp
xchg
lock
add
sbb
sbb
mov
bound
in
arpl
loop
aam
xchg
cmp
fadd
cmc
cmp
xor
outs
mov
in
js
push
ja
imul
mov
sar
jmp
mov
into
jb
pusha
scas
and
jecxz
js
or
jb
jmp
leave
pop
dec
adc
jne
mov
add
je
jo
ret
ret
and
mov
js
fst
gs
xchg
bound
xchg
or
fcom
mov
fild
in
dec
jl
jae
or
sbb
push
popa
test
cmp
cmp
fsub
outs
out
pop
ss
dec
push
inc
cld
dec
xchg
sbb
imul
sbb
mov
std
das
dec
adc
mov
cmp
int3
add
fwait
enter
ret
jmp
loope
cwde
cmp
ins
repnz
jns
in
ins
pop
imul
sahf
jg
or
xor
aam
iret
sub
pop
mov
push
xchg
je
add
(bad)
mov
mov
lds
xchg
jp
sbb
in
adc
fcom
mov
push
imul
and
and
and
sub
or
mov
(bad)
fdiv
call
mov
test
icebp
mov
sub
adc
add
repnz
stos
mov
push
cwde
cld
movs
fst
jae
mov
xchg
jnp
fsubr
jae
test
dec
invlpg
and
jbe
jns
mov
out
dec
jno
loope
jp
jno
fiadd
loop
es
xlat
inc
mov
bound
jmp
sbb
lods
test
mov
pop
inc
hlt
jo
fs
jb
data16
jl
push
call
jge
imul
add
jns
(bad)
add
add
fistp
inc
repz
hlt
sub
and
jmp
add
mov
xlat
dec
(bad)
xchg
jno
jp
hlt
aas
xor
jle
or
stos
lods
retf
idiv
cld
xor
inc
ds
ins
enter
data16
data16
mov
enter
stos
cmps
punpckhbw
jns
push
pop
jl
add
xlat
xchg
dec
or
ret
jge
stc
jmp
data16
jg
inc
cwde
int
(bad)
mov
(bad)
mov
cmps
call
movs
rol
and
call
jmp
sti
aaa
out
out
adc
retf
or
ror
xor
cmp
mov
pop
cmp
and
and
adc
jae
mov
into
adc
jge
add
cmp
or
arpl
or
sub
ins
add
pop
xor
cmp
adc
mov
jp
pop
lahf
leave
xchg
dec
pop
stos
and
jo
out
inc
xchg
xchg
dec
arpl
lods
loopne
pop
dec
mov
and
iret
jmp
or
in
gs
popf
xchg
cmc
je
jb
test
xor
fist
and
and
ror
out
mov
cmp
shl
cmp
lds
call
movs
rol
cli
pusha
lods
addr16
cmp
in
ret
and
xchg
add
cmp
out
mov
adc
push
jp
dec
(bad)
cmp
sbb
ja
arpl
cmp
(bad)
ja
cmp
mov
sbb
(bad)
adc
jle
imul
lds
lock
(bad)
jno
xor
bndcl
push
cwde
and
test
aaa
enter
pop
sar
test
or
shl
xor
pop
es
lea
mov
aas
or
icebp
sub
mov
dec
pop
pusha
cmps
push
sahf
cmps
out
into
pushf
jne
std
push
adc
adc
cmp
push
cmc
ja
push
sar
pop
addr16
mov
adc
push
fwait
aam
shl
dec
sbb
and
mov
fldcw
adc
push
push
stos
call
cs
outs
jns
and
mov
(bad)
arpl
ins
pop
inc
jo
fs
xor
mov
ret
push
addr16
neg
cwde
adc
imul
add
imul
sub
cmps
out
and
xchg
mov
dec
(bad)
mov
mov
xor
enter
mov
sbb
mov
adc
push
jle
mov
add
cmps
cmp
ins
dec
imul
es
fstp
adc
xchg
sbb
inc
cmp
jg
fist
xor
xor
mov
ret
les
(bad)
test
sub
ja
xchg
push
push
ins
push
mov
cmp
fsub
mov
xchg
cmc
pop
aad
push
xor
(bad)
cmp
add
mov
retf
adc
mov
inc
cmp
xchg
imul
sub
daa
outs
ins
aaa
fisttp
inc
mov
mov
sbb
jl
adc
les
mov
(bad)
(bad)
push
pop
fcmovb
add
stc
fwait
and
mov
bound
call
or
xor
mov
aam
icebp
sti
test
jae
jae
mov
xchg
inc
outs
mov
fs
mov
xchg
and
cmp
(bad)
repnz
dec
pop
leave
cli
enter
cmp
je
in
dec
dec
aad
(bad)
icebp
sar
mov
les
xor
sbb
push
xor
jnp
sbb
sti
fstp
clc
push
ds
loop
scas
inc
mov
pop
push
aaa
cmps
cmp
push
or
call
ds
outs
sahf
jmp
ds
push
jbe
ret
(bad)
hlt
ins
lods
je
sbb
test
int3
and
mov
push
dec
and
pusha
out
mov
push
add
or
xor
adc
adc
cwde
movq
mov
jl
pmulhw
iret
xor
xchg
push
retf
fwait
cmp
jnp
cmps
(bad)
inc
sub
in
xchg
addr16
jp
aaa
mov
popf
add
add
or
push
test
add
movs
(bad)
stc
push
in
add
fcomp
test
or
sbb
pop
inc
pop
imul
jp
or
pusha
mov
pusha
ficomp
pop
dec
les
jae
movs
test
mov
nop
push
xchg
inc
test
mov
(bad)
(bad)
cmp
or
adc
jno
mov
retf
jmp
push
ja
int3
out
repz
sahf
fld
jl
fadd
dec
stos
sub
fst
mov
dec
push
or
push
sub
int
xor
sahf
push
jne
sub
or
lds
cli
sub
mov
inc
sub
js
xchg
add
gs
sar
or
xor
out
fcmovnbe
int
and
sbb
enter
jecxz
repnz
clc
out
ficomp
xor
(bad)
(bad)
mov
(bad)
ds
imul
and
jmp
mov
mov
dec
out
xchg
in
xchg
enter
das
fwait
sbb
imul
mov
enter
sub
jl
mov
les
xlat
and
pop
std
pushf
add
or
adc
inc
ins
mov
in
xchg
mov
jne
ds
and
xchg
dec
movs
jnp
cld
das
jno
pop
popa
int3
stos
xor
out
fwait
mov
es
call
xchg
repnz
pop
out
sti
lods
(bad)
cmp
das
imul
call
sbb
jb
mov
in
js
dec
sub
(bad)
mov
aad
mov
adc
scas
dec
aas
int3
stos
mov
test
popf
popf
ret
xlat
xchg
mov
stos
or
fild
scas
push
(bad)
xchg
outs
pop
test
mov
lock
inc
dec
std
sub
pop
mov
pop
loopne
push
adc
jg
ror
movs
mov
mov
ds
mov
out
(bad)
cli
inc
imul
and
mov
lea
xchg
mov
sbb
jle
cli
jno
or
fcom
mov
scas
cli
out
data16
retf
xor
lods
and
add
sbb
mov
or
pop
std
push
xchg
lods
adc
lods
or
mov
push
jo
jnp
aas
clc
inc
mov
cld
fwait
test
stc
mov
mov
mov
aad
pop
jge
and
jg
mov
cmp
fisttp
mov
xchg
mov
mov
xchg
mov
clc
inc
sbb
test
les
ins
lahf
call
lds
das
sub
or
push
fcom
bound
xchg
mov
pop
inc
(bad)
jge
movs
xor
mov
sub
ret
mov
iret
jnp
test
pushf
xor
jb
loop
enter
call
adc
or
cmp
ret
in
pusha
xor
mov
pop
aad
inc
or
es
lds
add
cmp
stos
cdq
ins
out
inc
and
retf
sbb
cdq
xchg
int
shl
mov
cmp
xchg
cmc
retf
inc
xchg
jle
in
xchg
pop
cwde
xor
push
ins
int
shl
sar
(bad)
out
pushf
xchg
xchg
jo
push
push
or
xchg
in
pop
mov
jge
imul
add
imul
sbb
sub
jg
add
mov
push
push
inc
cmps
push
pushf
cmp
in
mov
cld
adc
sahf
inc
xchg
jg
adc
icebp
mov
and
cmp
push
ret
pop
adc
cmps
ins
(bad)
pusha
mov
inc
sbb
jg
jge
ja
inc
mov
dec
cmps
cmp
and
enter
mov
sub
add
fsubrp
ss
popa
mov
adc
pop
pop
out
les
push
js
cmps
and
jmp
cli
arpl
sub
mov
(bad)
repnz
or
pop
mov
pusha
aaa
or
sub
pop
fimul
mov
leave
movs
cvtps2pi
mov
push
cmp
jmp
into
mov
add
mov
mov
fwait
aam
dec
push
mov
add
iret
test
je
dec
sbb
das
adc
jne
xor
neg
shl
or
or
dec
push
add
sahf
retf
dec
dec
shr
cmp
jb
cmp
repnz
ins
lea
cmp
fcmovnb
mov
add
adc
cmp
pop
add
retf
cmp
xor
jp
mov
sti
addr16
ins
sbb
lds
cwde
jnp
add
imul
call
mov
dec
cmp
int
xchg
bound
movs
cmp
push
pop
fmul
mov
scas
inc
or
mov
fsub
and
cmp
push
fstp
stc
xlat
jno
je
mul
push
and
leave
addr16
xor
pop
stos
retf
popf
add
xchg
inc
bound
jmp
sub
fdivr
popf
jbe
into
fild
sbb
leave
repz
jbe
out
cld
xor
jb
lds
fmul
out
rcr
mov
xor
nop
test
rcr
push
lods
fadd
or
adc
lds
out
dec
xchg
adc
mov
nop
jnp
xchg
add
fstp
data16
hlt
xchg
jbe
enter
iret
push
adc
mov
jo
cmp
retf
sub
push
mov
dec
sti
scas
jmp
inc
test
pop
mov
xchg
or
mov
mov
sbb
aaa
cmp
push
mov
xor
sub
sub
mul
and
ret
or
mov
jnp
(bad)
adc
adc
loopne
inc
popa
mov
xor
sub
cs
push
pusha
sub
stos
bound
dec
je
xor
mov
pop
sub
shl
pop
cld
test
gs
jp
loop
js
(bad)
stc
fidivr
or
std
xchg
sti
int3
mov
repnz
stc
shl
add
cdq
popf
stos
imul
cmp
pusha
jg
out
push
mov
xor
mov
fdiv
push
jb
mov
(bad)
test
pop
daa
sahf
fild
in
push
push
dec
jmp
jb
mov
lea
enter
and
jo
xor
jns
pop
adc
ja
pop
sbb
dec
dec
gs
sub
add
cmp
in
in
pop
mov
popa
add
mov
test
arpl
mov
bound
arpl
inc
mov
aas
mov
xchg
mov
loopne
jecxz
and
aaa
xchg
test
xchg
and
sbb
xchg
rcl
fxam
add
shr
dec
pop
pop
enter
xchg
and
in
adc
or
loope
cmp
shl
fwait
xchg
mov
(bad)
iret
leave
pop
jmp
cmc
dec
jl
ror
push
lea
outs
pop
int3
cmc
adc
adc
push
and
xchg
jmp
pushw
lods
mov
(bad)
aaa
rol
bound
push
sub
jmp
daa
add
xchg
fisttp
push
sar
fistp
es
inc
xchg
iret
sbb
test
cmps
jo
inc
sbb
and
add
lahf
inc
dec
mov
in
mov
sub
inc
cld
jno
jmp
sub
lea
test
xchg
inc
aam
lods
push
cmp
jns
mov
sbb
cs
xchg
ror
sub
fbld
cmps
xor
sahf
ret
stos
popf
(bad)
stos
sub
lock
xchg
inc
jl
cdq
repz
lods
cmps
outs
stos
test
inc
ror
sbb
(bad)
and
push
cwde
xchg
ret
jbe
mov
sbb
pushf
inc
cli
xchg
cdq
fisubr
sbb
(bad)
rcl
call
(bad)
test
das
jg
mov
cs
popf
out
pop
xor
into
push
into
dec
sbb
or
and
mov
fidiv
cld
scas
push
outs
add
add
sub
in
adc
jp
loope
hlt
call
mov
ins
cmps
push
push
into
or
sub
cmps
or
loope
clc
lahf
stc
jbe
mov
pop
add
cdq
(bad)
jmp
icebp
fwait
and
dec
sbb
pop
and
sbb
mov
xor
mov
inc
jmp
stos
ret
lods
nop
push
push
sbb
xor
xchg
cmp
neg
xor
lods
cmp
hlt
icebp
push
inc
dec
mov
jns
mov
xor
sub
and
mov
mov
mov
ss
ins
add
sub
jp
in
rcl
cmp
imul
pop
push
inc
push
xchg
movs
rol
adc
cmp
cmp
int3
push
push
jb
dec
into
shl
push
cmc
or
jl
adc
adc
lock
aas
adc
fdivr
out
int3
adc
xlat
cmp
in
jno
mov
lahf
dec
dec
xchg
inc
(bad)
imul
xor
mov
xor
pop
and
jl
lds
or
rcl
or
push
call
xor
(bad)
lds
fisttp
sti
xor
xchg
mov
add
inc
cdq
dec
fimul
jge
loop
jmp
mov
xchg
or
mov
or
rcr
lods
push
stc
out
mov
pusha
or
sbb
sub
or
fwait
iret
mov
mov
mov
rol
cli
jb
loope
adc
gs
adc
and
icebp
xor
jbe
push
pop
push
int
xor
dec
sbb
pop
shl
popf
sbb
mov
shl
push
(bad)
sbb
rcl
hlt
and
mov
test
inc
into
ja
fimul
or
movs
jns
shl
inc
jns
cmp
jg
addr16
sar
push
out
adc
adc
cmp
xchg
scas
pop
jl
nop
imul
add
push
sahf
mov
and
dec
gs
mov
cmp
ins
retf
mov
mov
adc
scas
and
nop
(bad)
push
call
jno
fucomp
xchg
stc
push
(bad)
aad
inc
dec
pop
mul
repnz
mov
ret
gs
outs
push
sbb
jge
mov
and
imul
aas
scas
xchg
lahf
mov
nop
mov
call
add
clc
sbb
xchg
inc
sbb
sub
std
scas
pop
inc
sub
jle
xchg
mov
push
call
div
add
cmps
mov
mov
stos
out
dec
leave
inc
jae
pop
push
bound
cwde
aas
test
das
push
inc
adc
test
adc
mov
inc
test
scas
cmp
mov
xchg
inc
jmp
pop
fs
sbb
sti
aaa
or
(bad)
enter
sar
pop
cmp
push
aam
inc
inc
sbb
inc
mov
lods
xchg
inc
ja
sbb
inc
out
or
mov
cmp
push
push
sbb
add
(bad)
repz
inc
jl
inc
ins
movs
popf
mov
jbe
idiv
xlat
mov
repz
fwait
mov
xchg
in
mov
sbb
mov
into
shl
in
mov
out
inc
fs
adc
jmp
inc
retf
xor
xor
test
out
shr
sti
pop
adc
push
pop
fistp
adc
adc
bound
xchg
cld
lea
jg
pop
adc
fisub
push
std
and
inc
mov
add
jecxz
pop
dec
push
jno
cmp
retf
jecxz
stos
jge
jge
pop
lods
push
sub
movs
xchg
sub
sub
mov
lahf
xchg
sbb
repz
mov
popf
jbe
or
les
cmp
cmp
pop
xchg
and
cmp
pop
add
sub
scas
dec
cmps
pusha
shl
pop
push
fwait
mov
icebp
xchg
fwait
adc
xor
shl
mov
aaa
fcom
shr
adc
inc
in
out
mov
fild
push
xchg
shr
and
xchg
(bad)
cmc
pop
pop
and
sbb
jnp
pop
fst
in
sbb
xchg
in
add
pushf
mov
out
mov
mov
cmp
cmp
(bad)
cwde
push
js
in
imul
push
fcom
jg
cmps
gs
in
data16
sbb
or
or
and
cmp
add
gs
adc
popa
xchg
jge
pop
psllq
push
loope
mov
cmp
adc
mov
dec
adc
jg
cli
push
sub
mov
mov
pop
arpl
imul
test
xlat
mov
add
int3
pop
les
lods
mov
adc
dec
push
jo
jge
mov
fdivr
sar
mov
sbb
add
xchg
mov
xchg
test
imul
dec
arpl
neg
retf
mov
push
mov
pop
inc
or
mov
pop
js
inc
pushf
(bad)
jl
das
mov
stc
mov
sub
ds
adc
scas
adc
inc
outs
call
cmp
fdiv
sbb
out
and
mov
cmc
in
stos
xchg
push
pop
or
mov
and
mov
out
lods
push
aaa
je
xchg
outs
mov
push
cwde
inc
(bad)
adc
jnp
cmp
xchg
adc
out
mov
cmp
add
xchg
mov
in
jg
xor
(bad)
xchg
cli
dec
rol
rol
retf
inc
popf
ins
xor
fs
inc
and
cmp
add
add
dec
stos
ins
icebp
push
mov
jg
movs
popa
sub
loopne
in
sbb
dec
push
sahf
(bad)
out
mov
add
(bad)
push
arpl
xchg
cmps
or
cmp
sti
sub
mov
test
mov
fdiv
dec
sbb
loope
mov
fwait
sar
inc
sbb
call
femms
div
(bad)
sub
ret
push
ret
jno
xor
mov
pop
cmps
pop
movs
mov
pop
add
mov
or
jmp
hlt
sub
or
test
mov
jno
movs
aad
movs
xchg
mov
stc
pop
mov
or
int3
push
inc
mov
sahf
rol
call
into
hlt
push
pop
or
test
mov
pop
jmp
clc
mov
clc
add
dec
mov
sub
xchg
xlat
sbb
movs
sbb
outs
sub
jmp
xchg
sub
jle
jne
shl
call
ret
pop
loop
pop
xor
xor
jne
jp
iret
mov
out
mov
jge
mov
in
inc
push
imul
call
arpl
sti
pop
cld
push
scas
mov
mul
aas
dec
jmp
aam
pop
xlat
out
iret
jge
push
xor
popf
mov
movs
push
mov
and
adc
not
cmc
ins
dec
add
mov
adc
mov
mov
mov
jmp
repnz
int
push
or
xlat
add
inc
or
retf
cdq
mov
int3
sti
dec
push
popa
cmp
xor
xchg
call
fstp
jb
mov
lock
pop
std
xchg
out
add
mov
and
xor
jno
sub
shl
jns
cld
mov
sbb
inc
ret
pushf
or
adc
jge
push
push
nop
pop
out
mov
or
rcl
inc
out
sbb
sbb
xchg
xor
jmp
fnstsw
jmp
push
cmp
xchg
adc
xlat
add
mov
out
add
pop
pop
sub
xor
cdq
scas
adc
xor
dec
ja
or
das
push
sbb
mov
(bad)
mov
rol
cmp
adc
in
cmp
sub
and
lock
das
cld
push
leave
cmps
or
aaa
pop
adc
dec
sub
mov
sub
test
cli
das
imul
(bad)
mov
pushf
ins
outs
xchg
cs
adc
dec
pop
test
add
push
mov
nop
and
ins
cmps
loopne
fsubr
scas
lods
rcr
push
push
or
push
call
out
xchg
jecxz
xchg
dec
mov
aad
sub
mov
push
aam
pop
cmp
and
or
mov
sbb
push
adc
lds
inc
scas
cdq
mov
inc
cdq
dec
push
sti
sub
or
mov
stc
iret
jne
add
mov
xchg
je
sahf
mov
and
pop
dec
fcom
pop
outs
ror
sahf
jne
xor
(bad)
fsubr
mov
rcl
mov
daa
call
mov
inc
jmp
and
int3
adc
mov
test
lock
mov
adc
cmc
and
jmp
or
sub
mul
mov
push
sbb
addr16
dec
fild
aad
and
and
push
mov
sub
aam
pushf
cmp
and
ds
inc
(bad)
leave
or
mov
pop
outs
dec
sti
sub
mov
add
imul
lds
inc
sub
add
clc
sub
mov
mov
pop
mov
bound
retf
outs
pop
dec
jns
mov
mov
repz
dec
nop
or
ffree
sbb
mov
in
inc
loopne
dec
jbe
dec
dec
cmp
inc
dec
sub
stc
mov
pop
sbb
fist
adc
mov
imul
cmp
push
stos
leave
xlat
pop
mov
std
push
loopne
mov
das
loopne
cmp
dec
xchg
test
push
jnp
adc
sub
cs
fisttp
movs
adc
xor
dec
or
gs
cmps
lahf
shr
dec
sbb
mov
jo
fidiv
or
xor
imul
or
inc
in
push
mov
dec
sub
cwde
mov
and
int
mov
jp
push
cmp
xchg
jge
dec
mov
jno
sub
std
add
sbb
cwde
repnz
fisubr
xchg
(bad)
inc
push
xchg
mov
or
out
or
add
repnz
out
call
outs
cdq
sub
sbb
mov
add
dec
cmp
mov
jbe
repnz
jno
add
mov
xor
add
pop
or
add
test
ds
add
inc
aaa
mov
and
pop
out
cmp
add
(bad)
lahf
adc
aas
or
adc
test
ret
iret
mov
test
fcom
pusha
dec
mov
fidivr
jae
pusha
add
popa
xchg
sar
jae
adc
mov
jae
jmp
jge
fdiv
push
xchg
xor
mov
imul
ret
and
mov
mov
jnp
sub
int
stos
ret
int3
call
sbb
sbb
pop
lods
(bad)
loopne
aam
pushf
repnz
xchg
pusha
inc
dec
sub
outs
xor
retf
lea
bound
xor
xchg
jge
test
sbb
enter
fstp
jle
mov
cmp
and
in
adc
xor
in
xlat
cmp
pop
or
lock
shl
pop
std
fistp
push
mov
pop
int
mov
or
jno
loop
lahf
xor
xchg
loopne
imul
mov
into
nop
mov
outs
enter
or
repnz
ja
push
jmp
daa
rol
cld
and
xlat
inc
int3
mul
aas
xchg
and
xchg
push
push
popf
movs
cmp
pop
push
lods
(bad)
cmp
and
dec
sub
cmp
fcomp
movs
pop
push
test
and
inc
mov
repnz
or
or
or
and
or
push
xchg
rcl
sub
xor
cwde
cmps
not
popf
aam
xor
lods
sub
sar
cmp
cli
rol
fs
clc
sub
cmc
mov
fwait
outs
imul
enter
dec
inc
jl
push
jnp
cmps
add
mov
inc
(bad)
xchg
aas
mov
pop
mov
push
js
adc
jge
test
in
xor
inc
mov
mov
stos
(bad)
(bad)
and
add
pop
daa
xor
xchg
into
push
lahf
lods
dec
xor
xchg
repz
pop
popf
nop
jl
and
shl
jp
and
imul
mov
std
inc
xor
mov
loop
int3
add
rol
fcmovnb
xor
xor
xor
dec
jl
jnp
into
or
jne
sbb
xchg
lock
ja
add
or
pop
shl
stos
mov
mov
dec
sub
pushf
and
inc
test
call
pop
aaa
test
cmps
mov
sub
push
sti
push
inc
sbb
stos
jne
pop
out
lods
and
aam
rol
pop
in
xlat
or
ins
das
stos
and
xor
dec
xchg
jbe
push
push
ins
or
xor
shr
fsub
add
(bad)
nop
pop
mov
add
xor
addr16
adc
idiv
or
rcr
mov
call
push
mov
mov
fldenv
les
push
cmp
aaa
cmps
jnp
fldenv
iret
push
xlat
fsubr
frstor
ds
push
mov
dec
xchg
test
jecxz
or
and
push
in
lods
push
mov
pop
add
and
cmp
or
or
push
out
ss
ror
jb
add
adc
adc
fmul
jp
and
mov
pop
cmp
adc
mov
mov
mov
mov
cmp
cmp
cld
mov
cmps
push
shr
dec
pop
call
aas
xchg
repz
add
popf
mov
mov
or
into
hlt
pop
mov
mov
jno
(bad)
mov
(bad)
(bad)
repz
and
mov
cmp
imul
arpl
les
popf
add
ficom
(bad)
enter
adc
mov
cmp
sub
xor
in
xchg
sub
arpl
mov
loope
icebp
cmp
call
(bad)
loopne
mov
inc
cmp
dec
fcom
or
cmp
(bad)
mov
rol
add
shl
pop
or
adc
inc
xor
or
dec
test
scas
sahf
mov
ins
popa
ret
rcl
mov
mov
xchg
add
mov
cdq
stc
dec
call
clc
hlt
dec
loopne
imul
mov
sub
imul
popa
and
jecxz
mov
pop
cli
cmp
xchg
jmp
jo
(bad)
mov
loopne
nop
sbb
jecxz
mov
and
test
cli
mov
hlt
stos
adc
inc
mov
into
ds
mov
out
test
arpl
cmp
imul
cwde
loop
pop
push
push
inc
movs
hlt
out
cli
aaa
jno
loop
xchg
rol
adc
call
mov
(bad)
in
fcom
mov
pop
jnp
and
or
(bad)
sbb
or
mov
imul
push
sar
pop
mov
mov
jp
mov
push
inc
enter
loope
inc
push
outs
inc
or
out
mov
int3
dec
mov
outs
mov
ret
call
mov
sahf
and
pop
pop
sbb
cld
stos
fs
lods
icebp
inc
arpl
push
xchg
mov
test
or
jl
sub
sub
mov
mov
in
pop
or
ins
inc
pop
and
xor
repnz
xor
inc
jbe
pop
xor
into
adc
ret
cmp
xor
add
imul
shl
xchg
iret
mov
in
out
addr16
addr16
popa
push
jle
xchg
ficom
adc
adc
pop
test
arpl
xchg
fwait
push
sahf
clc
pushf
outs
add
and
mov
adc
sub
cmp
fidiv
push
sbb
jnp
fwait
add
adc
push
or
dec
add
sbb
sar
retf
imul
(bad)
jb
jbe
retf
jb
sub
dec
add
add
(bad)
jmp
in
inc
push
pop
retf
(bad)
sbb
inc
fbstp
repz
mov
mov
adc
jb
inc
loope
fistp
ds
arpl
js
mov
imul
cdq
inc
xchg
das
sbb
cld
xchg
cli
add
ret
fs
jae
pop
xlat
stos
push
repnz
inc
nop
or
or
xor
test
dec
(bad)
push
aas
lock
xlat
adc
add
sub
or
je
jo
add
daa
xor
aas
in
sub
in
or
xor
mov
gs
jb
repz
push
rcr
test
pop
in
ror
ret
adc
movs
fwait
jg
add
pop
cmp
xchg
ins
mov
mov
add
(bad)
in
sbb
sub
icebp
sbb
cdq
dec
xor
ret
pusha
cmp
lds
mov
sbb
(bad)
adc
leave
mov
push
sub
push
mov
mov
mov
lahf
mov
xor
xor
push
sub
pop
jns
or
jge
sbb
js
push
mov
cmps
xchg
pop
adc
sbb
fcmovnu
lods
pop
push
mov
sbb
mov
mov
or
or
mov
pop
sbb
push
jmp
xchg
adc
push
jo
mul
pop
or
mov
movs
shl
xchg
pop
push
jno
stos
mov
aas
dec
push
push
xor
cmp
dec
outs
repz
pop
xchg
test
cs
aad
cmovle
or
je
jg
out
jo
aam
add
mov
std
mov
jl
dec
push
adc
jp
mov
jg
xchg
jl
xchg
ja
cwde
or
stc
xchg
xor
adc
mov
jne
and
fs
cmp
outs
fwait
cwde
daa
pop
jb
gs
mov
les
(bad)
sub
push
daa
mov
std
pushf
ins
xchg
cmc
push
sbb
cmp
inc
lea
or
dec
xchg
sbb
test
ror
sub
test
push
adc
pop
js
out
mov
lahf
(bad)
scas
cmps
jmp
xor
sub
sub
cs
lahf
push
ins
stos
fs
ficom
sbb
fisubr
xor
jo
sbb
retf
cmc
repnz
or
cmp
(bad)
adc
ins
mov
neg
test
jnp
and
jge
xchg
adc
pop
in
leave
push
sub
cmp
jecxz
lods
mov
outs
popf
or
xor
xchg
gs
xchg
pop
mov
jnp
or
(bad)
cs
retf
push
imul
jg
iret
and
lea
cmps
push
out
sahf
gs
pop
sbb
repz
sub
pop
and
add
jge
xor
jo
shl
std
sbb
lods
add
cmps
xor
call
inc
mov
and
daa
cwde
sbb
pop
ins
sub
jmp
es
leave
push
outs
mov
push
test
adc
ror
jbe
ins
xor
mov
out
stos
fs
cdq
jae
aam
jge
imul
shl
retf
jne
jl
call
fwait
mov
jmp
daa
mov
gs
adc
iret
push
inc
xchg
iret
cmp
pop
and
or
inc
inc
pop
xor
lock
bound
xor
inc
inc
shl
adc
mov
pop
mov
push
and
sbb
jnp
add
mov
xchg
sub
jno
cli
mov
push
sbb
imul
sti
xchg
xor
sub
xchg
mov
pop
mov
clc
(bad)
in
cmp
adc
or
sbb
jecxz
pop
dec
jmp
sub
into
mov
jmp
outs
retf
popf
(bad)
adc
jne
cdq
pushf
cmp
mov
shl
pop
adc
ss
or
pop
outs
fisub
imul
jns
sub
push
sub
jne
int
fs
push
rcl
xchg
daa
sub
and
shl
sub
xchg
jb
lock
ins
imul
mov
cmp
or
pop
adc
fisub
sar
test
fwait
mov
hlt
ret
push
(bad)
fxam
mov
shl
xchg
lods
or
xchg
retf
or
pop
xchg
stos
popa
js
or
les
repz
fst
add
retf
push
xchg
test
enter
inc
lea
xor
neg
fldenv
iret
and
and
mov
rcr
stos
dec
xchg
mul
outs
add
scas
(bad)
pushf
(bad)
aad
dec
aaa
sub
loope
xlat
fisttp
test
jl
add
push
and
icebp
mov
nop
and
pop
call
xchg
test
adc
add
pop
cwde
repnz
jmp
mov
nop
jmp
sbb
mov
ret
jp
jge
jae
add
popa
sub
and
or
mov
mov
and
stos
pop
pop
test
and
loope
movs
dec
movs
mov
pop
scas
scas
les
push
retf
pop
jge
sbb
pop
jb
(bad)
imul
pop
jmp
das
sbb
mov
mov
sbb
(bad)
call
adc
push
mov
data16
dec
pusha
cld
sbb
inc
jmp
cwde
ins
push
inc
ins
retf
rol
xor
add
xor
inc
pushf
fcomp
inc
(bad)
fst
sar
retf
pop
jnp
mov
mov
(bad)
push
xor
and
pop
int
cmovno
xchg
xor
stos
(bad)
addr16
in
dec
shr
out
xchg
sti
in
popf
pop
sbb
int3
inc
dec
ret
loope
movs
out
pushf
into
or
popf
ja
push
xchg
loop
jge
pop
sbb
dec
ret
imul
ror
adc
repz
add
push
popf
ins
mov
or
stc
rcr
popa
gs
stc
div
push
push
dec
or
in
int3
sbb
pushf
cs
comiss
mov
sub
mov
xchg
das
adc
sub
ror
cmp
jno
dec
sub
rol
movs
out
mov
leave
ins
and
fstp
and
or
out
xor
mov
dec
repz
push
nop
jbe
loop
popf
inc
and
push
mov
sbb
inc
dec
xchg
fdivr
push
add
lock
outs
cwde
xlat
pop
add
repnz
pop
or
ja
dec
and
out
inc
add
(bad)
aam
xor
lock
jns
jne
aaa
repnz
push
lods
leave
push
and
mov
inc
fs
ds
shl
add
cmp
or
aam
xlat
cmp
xor
xor
pop
cmps
mov
and
dec
pop
sbb
inc
aaa
jmp
xor
inc
jp
(bad)
outs
adc
dec
xor
(bad)
push
lods
add
jecxz
fiadd
cmp
in
jb
iret
lods
sub
cmp
jge
rcr
out
dec
or
jmp
xchg
sbb
and
push
inc
add
fild
lock
and
push
fnstenv
bound
adc
mov
push
ins
sub
push
hlt
or
mov
xchg
cmp
addr16
ds
test
je
pop
push
(bad)
mov
pushf
xchg
call
rcl
mov
jmp
jne
dec
cmc
push
sbb
out
add
pushf
jp
push
ins
stos
out
retf
mov
aad
repz
div
fadd
vmwrite
jle
sbb
jno
mov
lods
mov
pusha
cmps
shr
sub
pop
adc
je
loopne
jnp
add
outs
data16
or
and
push
inc
push
(bad)
mov
xlat
cmp
add
mov
sbb
inc
clc
xchg
mov
sbb
imul
mov
xchg
pop
push
add
scas
sub
jno
mov
mov
imul
pop
cs
xchg
jle
or
aaa
mov
fmul
std
cld
fdivrp
xchg
mov
mov
fs
or
add
xchg
pop
loop
push
add
shl
pop
pop
rcl
mov
data16
mov
fisttp
popf
int3
pop
scas
dec
in
adc
imul
xchg
pop
pop
xchg
movs
sbb
enter
push
jl
xor
into
xchg
lods
arpl
cmps
push
push
cmp
cmp
cli
mov
mov
mov
fsubrp
sar
mov
ss
fsub
fst
jmp
adc
pop
call
neg
call
mov
out
lea
jp
popf
fstp
mov
sbb
lods
es
inc
aad
add
pop
out
scas
(bad)
and
in
push
in
sbb
data16
iret
dec
inc
(bad)
fstp
int3
cli
adc
ins
ins
in
fcomp
push
cmp
sbb
mov
adc
push
scas
sub
ret
xchg
push
xor
imul
test
sub
std
ds
sub
jb
cmps
sub
dec
push
aam
call
jg
mov
(bad)
pop
mov
add
jge
inc
loope
dec
jmp
ds
jno
cdq
mov
lock
jae
sahf
jne
cmps
cdq
mov
inc
push
(bad)
retf
push
aad
test
xchg
pop
lock
sbb
in
xchg
int
push
xor
nop
add
cwde
inc
jae
call
dec
push
movs
push
xor
jbe
pop
out
push
mov
xchg
ss
jmp
and
idiv
pop
rcl
movs
ja
cmp
lods
cmps
jle
adc
and
cmp
stc
mov
xchg
in
sbb
push
inc
mov
out
jle
and
or
hlt
fld
xchg
nop
retf
nop
enter
inc
push
cmps
outs
fcmovnu
xchg
mov
loope
mov
stos
inc
sti
sub
hlt
sub
sub
fld
jno
pop
fwait
cmc
xchg
push
in
sub
sbb
adc
loop
mov
or
push
aas
jno
inc
sti
arpl
sub
nop
lds
les
adc
fwait
iret
and
ffreep
mov
dec
pop
(bad)
imul
out
aad
mov
jle
movs
lahf
leave
push
push
add
ror
xor
mov
jmp
mov
ins
push
ret
cmps
and
jge
and
rcl
adc
sbb
mov
je
pop
stos
jge
xor
or
and
jno
adc
imul
xchg
jl
mov
xor
fnstcw
call
hlt
dec
inc
icebp
movs
ins
ds
sbb
icebp
or
mov
lods
out
xchg
aad
add
jmp
and
sbb
sbb
xchg
pop
pushf
(bad)
sahf
sbb
jmp
inc
add
cmp
and
jbe
imul
rcl
and
ficom
jae
inc
div
sbb
inc
push
ror
daa
popa
pop
and
jb
clc
fidivr
fstp
ins
xor
mov
cmp
mov
adc
jmp
mov
or
dec
iret
xchg
adc
add
xchg
mov
mov
nop
adc
jmp
mov
cmps
mov
into
xchg
ret
sbb
mov
mov
mov
cmp
and
enter
mov
jl
in
mov
xchg
push
ins
push
aaa
cdq
hlt
inc
out
loope
jo
jmp
imul
rol
mov
mov
mov
pop
(bad)
mul
push
mov
(bad)
jnp
mov
sti
or
mov
xchg
xlat
dec
inc
ja
div
rcl
enter
mov
jnp
mov
lock
repz
hlt
mov
andpd
cs
and
pushf
and
lea
clc
push
push
shr
fs
fld
imul
adc
sub
push
xchg
sbb
pop
test
fld
loope
mov
push
adc
push
sbb
(bad)
mov
push
jo
cli
push
or
(bad)
add
imul
mov
xor
cmps
sub
loope
scas
jno
push
mov
call
gs
and
std
sbb
daa
adc
mov
enter
scas
sub
call
(bad)
cmc
aas
lods
push
and
adc
push
(bad)
push
mov
imul
xor
mov
push
sub
and
push
lea
or
ficom
rcr
es
(bad)
cmp
lock
cs
jb
jge
stc
xor
push
and
jb
xor
call
mov
xor
push
ret
out
mov
sub
adc
sahf
rol
mov
add
cmc
mov
sbb
(bad)
add
mov
cmp
loope
inc
xor
into
ror
stos
js
xor
mov
inc
lods
movs
inc
lock
mov
inc
inc
shl
jbe
sub
aad
shl
jge
cmp
mov
scas
and
adc
movs
fs
fld
inc
aad
aas
sbb
cmc
sbb
movs
sbb
aaa
pop
lods
fwait
movs
sbb
add
mov
pop
xchg
cmp
mov
sbb
scas
inc
add
ins
out
rcr
adc
fadd
cli
jp
or
or
sbb
xchg
jp
neg
jle
enter
cmp
arpl
lods
lods
pusha
stos
leave
mov
sub
mov
pop
retf
or
fst
xchg
loop
xchg
mov
xchg
push
push
sub
popf
or
jge
repnz
or
jp
hlt
push
(bad)
mov
fistp
and
cmp
pusha
sbb
(bad)
iret
dec
adc
nop
or
in
dec
call
inc
xchg
push
(bad)
out
inc
aas
jno
sahf
sub
inc
push
idiv
fldcw
pop
xor
cmp
add
mov
sub
ds
aaa
enter
xchg
dec
bswap
das
mov
or
dec
xor
std
push
fild
hlt
sbb
and
add
push
call
add
and
(bad)
test
popa
imul
fs
test
dec
inc
mov
inc
fld
sbb
lea
aam
rcr
mov
mov
imul
lahf
loope
retf
push
ds
enter
or
mov
mov
sub
dec
sbb
inc
je
jae
loopne
inc
or
cli
fbld
popf
div
xchg
jns
xchg
fwait
mov
jmp
jne
mov
clc
fucomip
adc
mov
cmp
mov
or
inc
jmp
adc
pop
movs
pop
mov
mov
pushf
xchg
sahf
adc
xchg
nop
sti
inc
and
push
inc
lahf
pop
jbe
pop
or
aaa
push
jo
xchg
push
mov
mov
hlt
mov
mov
in
fild
gs
cmp
lds
mov
cld
out
cli
pop
add
add
mov
out
fs
xor
sub
retf
dec
cmps
jmp
mov
cmp
test
jmp
jl
push
ss
mov
pop
dec
leave
icebp
mov
mov
cmp
inc
into
out
mov
mov
rol
xor
sub
jno
int3
pop
mov
jns
pop
pop
pop
sahf
nop
mov
push
pop
out
(bad)
fcomp
jmp
adc
data16
mov
in
cs
pop
popf
xchg
fisub
mov
jmp
mov
dec
and
jno
cli
dec
in
cld
or
jp
popf
popa
jle
into
stos
and
adc
mov
(bad)
mov
add
mov
mov
outs
push
(bad)
scas
je
jno
call
mov
ret
in
ret
mov
add
mov
push
pavgb
mov
out
or
adc
pop
push
xor
adc
rcr
jne
sub
addr16
inc
sbb
(bad)
fwait
out
mov
inc
push
pop
mov
dec
pop
test
inc
scas
inc
data16
sbb
mov
call
test
hlt
mov
into
(bad)
add
div
or
test
in
(bad)
jg
jmp
xchg
shl
test
mov
data16
adc
jb
sahf
(bad)
sbb
sar
cs
in
sbb
cmp
loopne
push
inc
mov
dec
test
in
movs
jnp
ret
cwde
ficom
pop
into
ja
mov
nop
out
fcom
dec
fs
mov
lods
stos
xchg
or
and
movs
ins
add
(bad)
mov
pop
jmp
fwait
jno
sbb
inc
inc
icebp
add
sar
add
inc
sti
jb
mov
in
pusha
mov
pusha
push
ret
sahf
call
mov
or
sbb
icebp
test
out
repnz
cmp
add
pop
sub
mov
push
inc
sbb
cmc
data16
cwde
or
and
cmp
and
pop
xor
pop
push
ds
jmp
and
cmp
retf
rcr
jl
std
movs
push
xor
mov
cdq
imul
outs
aaa
cmp
aad
pusha
idiv
and
jns
jl
clc
(bad)
out
push
icebp
int3
fld
push
jo
adc
movs
mov
(bad)
out
xchg
mov
shr
mov
lods
out
xchg
out
mov
mov
(bad)
ret
out
push
mov
cmp
mov
pop
jb
adc
xchg
shld
mov
popf
mov
into
nop
sbb
rol
add
cmp
and
push
mov
dec
sub
mov
shr
enter
ss
cdq
sbb
iret
rcr
push
jne
xor
or
pop
cmp
sbb
hlt
mov
dec
mov
adc
in
lock
inc
loope
mov
push
dec
ror
test
adc
dec
iret
neg
scas
jg
daa
and
in
push
movs
mov
test
cmp
rol
pop
jmp
or
inc
(bad)
fidivr
fcom
stc
mov
nop
stos
neg
xchg
cmps
shl
add
sub
add
sbb
loope
imul
in
in
pusha
xchg
jecxz
scas
push
mov
in
fldz
or
push
(bad)
out
hlt
mov
inc
arpl
xor
cmp
fwait
outs
cdq
jns
loope
neg
push
rcl
rcr
std
xor
lds
dec
addr16
out
outs
add
push
sbb
data16
push
inc
outs
xor
adc
cmp
cmp
nop
(bad)
xor
pmulhw
in
sub
mov
ss
or
pop
aas
div
adc
repz
gs
call
xchg
fst
add
dec
mov
inc
fild
(bad)
nop
call
jl
inc
aam
stos
xor
js
loopne
inc
pop
lock
pop
in
and
pop
inc
pop
add
xor
dec
in
xchg
mov
pop
in
lea
in
and
inc
xchg
cmp
movs
ret
test
sbb
fs
add
mov
ret
test
cmps
lea
and
dec
loopne
fwait
call
fnstcw
outs
pushf
cdq
sbb
jmp
push
lods
cli
shr
and
enter
scas
ins
fdivr
rol
into
xchg
mov
xchg
fs
lea
retf
mov
(bad)
sub
out
pop
int
es
lea
or
sub
and
ja
retf
pusha
shl
or
pop
popa
dec
xchg
repz
mov
fistp
mov
retf
in
adc
dec
or
stc
mov
fidivr
jae
jae
aaa
stos
test
and
test
out
movs
push
clc
adc
cmps
repnz
and
sahf
xor
loop
pop
out
mov
mov
xor
fprem
fnstsw
fdivr
sub
ins
inc
jle
(bad)
lods
scas
jo
add
bound
call
out
dec
ret
adc
popa
cmc
jl
lods
rcr
jnp
fs
arpl
or
cmp
les
push
xchg
push
sbb
lea
sub
jno
outs
mov
lock
push
adc
cmp
cmps
xor
test
sub
enter
popf
pushf
pop
sub
add
aaa
rcl
mov
mov
push
mov
adc
inc
cmps
pop
icebp
sbb
stos
neg
or
sbb
push
cmps
(bad)
fnstenv
call
idiv
sub
jl
push
and
daa
jnp
dec
add
inc
mov
push
push
(bad)
retf
cmps
push
int
test
lods
xor
sbb
xchg
inc
jg
pop
mov
fstp
cli
mov
or
jmp
or
jmp
cli
fwait
dec
arpl
or
push
xor
in
cmp
outs
add
mov
xor
daa
lea
cmc
das
leave
and
sbb
pop
iret
mov
or
arpl
dec
ja
mov
js
inc
das
cs
cmp
mov
shl
fmul
(bad)
repz
icebp
aam
push
inc
stc
push
cdq
and
js
mov
jge
mov
and
(bad)
loop
inc
outs
shl
addr16
xchg
and
cmps
(bad)
inc
mov
jg
and
pop
or
js
psubsb
ret
adc
int3
jnp
inc
test
test
mov
mov
rcl
movs
lds
sub
mov
sar
add
ret
jmp
push
sbb
nop
repz
adc
jmp
or
out
dec
loopne
mov
and
in
imul
aam
fcmovnbe
repz
push
(bad)
pop
adc
mov
inc
sbb
add
push
jbe
pop
std
ror
jne
unpckhps
out
adc
dec
pop
xchg
push
jae
mov
in
ret
xor
push
test
(bad)
es
sbb
scas
add
jmp
cld
ret
mov
arpl
cli
repz
pop
and
jmp
inc
pop
sub
int
fidivr
cmp
int
nop
jge
test
imul
push
sbb
aas
adc
adc
cdq
dec
mov
mov
pop
add
fild
cmp
jns
lahf
dec
into
xchg
sahf
mov
iret
push
jo
pusha
fstp
cmp
sahf
sbb
inc
mov
mov
test
and
mov
int3
sbb
pop
or
cmp
mov
leave
aad
push
lea
add
mov
rol
lds
pusha
mov
fimul
cwde
xchg
or
sub
xor
xor
enter
popf
and
sub
xor
jecxz
sbb
pushf
loope
rol
push
sbb
(bad)
in
adc
xor
sub
lahf
and
bound
test
mov
xor
jmp
mov
mov
stos
xor
inc
jcxz
int
mov
hlt
adc
jae
loopne
or
popa
cmp
(bad)
cli
out
dec
jle
mov
and
rcl
mov
mov
inc
shl
clc
ficomp
push
mov
popf
ja
mov
pop
fidiv
sbb
ss
add
mov
mov
mov
mov
sub
neg
fstp
pop
push
or
scas
bound
mov
sbb
enter
add
and
movs
pop
scas
aas
sub
sub
scas
addr16
cmp
ror
dec
aam
repnz
outs
ret
xlat
rcl
ins
inc
mul
inc
adc
dec
repz
rcl
push
jmp
pop
icebp
sub
sbb
jp
ins
ret
mov
and
push
cwde
adc
loope
sahf
and
ins
add
inc
jbe
std
loopne
ins
xchg
test
add
pop
retf
sbb
sbb
cmps
iret
outs
xlat
push
ffree
pop
or
or
cmp
shr
or
test
and
mov
xchg
xchg
icebp
push
jns
lods
(bad)
sbb
push
pop
mov
mov
aam
jl
xchg
jns
out
out
mov
imul
adc
cmp
xchg
or
and
cli
mov
pop
lahf
jno
push
dec
push
jmp
std
dec
mov
stos
icebp
inc
mov
sbb
test
fnstcw
retf
(bad)
out
jp
test
cmp
fcom
jg
mov
aam
lds
push
xlat
cmps
imul
adc
mov
add
mov
fwait
in
push
push
mov
pop
or
push
ret
push
adc
mov
cmp
or
into
out
es
je
sub
test
ins
sbb
sbb
add
hlt
(bad)
pushf
and
cmp
pop
in
and
cwde
js
mov
gs
in
pop
repnz
xchg
adc
mov
cld
int3
arpl
add
push
push
and
xchg
mov
jmp
fcom
retf
adc
push
mov
mov
rcl
(bad)
repz
in
daa
pop
push
bound
mov
inc
xchg
cwde
shl
lods
in
ffreep
stos
ror
pop
mov
mov
(bad)
nop
or
jns
lock
and
ror
xor
scas
cmp
push
test
retf
in
lds
push
mov
cmp
mov
enter
rol
test
jle
mov
clc
add
cmp
fwait
or
fsub
mov
push
movs
shr
add
add
ins
mov
stos
or
lds
pop
cmp
dec
fld
mov
movs
push
push
data16
mov
cld
stos
and
sub
movs
push
lds
mov
jg
mov
xor
xchg
cmps
arpl
out
cmp
dec
(bad)
mov
inc
fistp
pop
and
std
movs
call
fwait
add
inc
xor
lahf
push
movs
inc
call
sbb
faddp
inc
bound
jp
mov
sub
cmps
fist
dec
call
daa
ret
mov
jmp
or
cmp
sub
aam
push
xor
shl
cs
xor
inc
pop
mov
sub
jl
push
repz
cmp
cdq
int
inc
rcl
fcompp
gs
pop
and
fisttp
push
dec
or
outs
cmp
test
fld
icebp
stos
cli
xor
ror
fdiv
mov
add
(bad)
mov
push
dec
popf
push
push
hlt
shr
jb
sub
inc
jbe
shr
std
div
push
mov
pushf
dec
pop
xchg
pop
mov
pop
sahf
gs
adc
mov
sbb
pop
loop
fist
rcl
repz
addr16
mov
pop
jl
jns
dec
out
sub
push
mov
sbb
cmp
push
sub
mov
xchg
dec
repz
add
mov
sbb
fwait
sbb
dec
jmp
push
sar
es
leave
cmp
sbb
xor
ss
adc
popa
lahf
mov
jp
cmp
out
push
xor
cmp
fldcw
dec
or
cmp
pop
cmp
sub
jo
test
ficom
repz
fcomp
pop
jp
jno
test
movzx
mov
mov
adc
and
idiv
push
mov
xchg
fwait
leave
dec
call
xor
cmp
push
inc
iret
je
imul
and
mov
adc
xor
jmp
cli
shl
jecxz
push
jno
int
add
rcl
cmp
or
and
ret
dec
mov
push
sbb
mov
jp
push
rcr
push
scas
in
mov
cmp
ret
inc
jmp
pop
mov
or
fs
mov
test
outs
pop
inc
jmp
mov
mov
jbe
(bad)
adc
sub
xchg
lods
sbb
inc
into
jg
mov
call
mov
sbb
push
lahf
std
jmp
adc
or
aaa
shl
sbb
mov
pop
aam
xor
xor
mov
adc
jg
cmp
outs
ja
pop
push
test
ds
push
pop
not
pop
pop
jecxz
xor
jge
jecxz
int
sbb
ins
pop
jmp
call
popa
mov
packsswb
dec
icebp
rcr
pop
test
sbb
popa
and
or
add
jns
push
add
add
loop
fadd
cs
enter
ret
and
xchg
movs
imul
(bad)
shl
dec
test
dec
xchg
cwde
jbe
test
lock
aad
add
jmp
pop
retf
jge
imul
xor
fwait
(bad)
jp
out
adc
sbb
mov
push
xchg
fist
repz
in
dec
mov
rcr
xchg
cmp
inc
(bad)
outs
ret
sar
out
push
xor
mov
push
xchg
xlat
mov
sbb
(bad)
or
adc
stos
xchg
or
xor
sbb
fisub
cmp
sar
pushf
lods
idiv
jecxz
retf
lods
push
dec
repz
out
aad
xlat
fild
xchg
xchg
(bad)
pushf
cli
mov
dec
lahf
pop
popa
xor
fbld
sbb
scas
es
adc
sbb
adc
loop
pusha
popa
pop
xlat
pop
pop
repnz
lea
mov
fstp
push
add
sbb
int
imul
in
mov
dec
dec
mov
aaa
push
push
imul
lds
ror
ret
test
popa
(bad)
stc
pushf
push
(bad)
repz
push
push
daa
cmc
xchg
test
push
push
inc
pop
pushf
push
es
and
mov
mov
xor
dec
int3
inc
js
in
movs
fs
(bad)
xchg
into
fmul
mov
push
pop
add
and
pop
mov
mov
les
in
push
add
xchg
icebp
xor
(bad)
addr16
mov
mov
inc
fist
call
dec
das
test
adc
or
lock
daa
push
movs
sub
xor
jl
jmp
std
inc
imul
mov
jmp
add
sbb
neg
call
lea
pop
mov
cmps
out
popf
dec
pop
mov
or
pop
into
cdq
mov
push
push
cmp
pusha
mov
pop
fimul
mov
cmps
adc
pop
fsub
popf
sbb
lea
fndisi(8087
mov
loopne
mul
stos
pop
aam
ins
jp
test
inc
jle
pop
mov
movs
sti
fmul
xchg
loopne
push
xor
dec
in
push
gs
movs
and
xchg
and
mov
sbb
cld
lods
lea
iret
not
in
rep
add
pop
mov
ror
adc
clc
jmp
jp
cmp
jg
(bad)
neg
add
mov
fcomp
xor
mov
das
mov
sbb
dec
std
es
addr16
inc
push
and
sub
movs
jle
loopne
jp
(bad)
mov
outs
jb
in
sub
shl
cwde
lods
and
or
icebp
xchg
jmp
mov
dec
mov
rcr
push
shr
leave
xchg
dec
adc
das
scas
jecxz
mov
aaa
xchg
mov
jns
ret
ins
sbb
xor
xor
outs
pop
stos
mov
cmc
fwait
imul
mov
mov
xchg
fiadd
stc
je
test
loope
test
std
or
adc
inc
xor
test
dec
cmp
sbb
xor
jb
bound
pop
push
mov
js
push
fimul
pop
jmp
and
cs
addr16
test
js
pop
sub
dec
stc
adc
scas
cld
and
inc
out
movs
sbb
jg
in
iret
pusha
sbb
inc
inc
xor
outs
mov
mov
cmc
xor
ins
push
cdq
sub
mov
xchg
dec
xor
cs
adc
inc
rcl
popf
test
pushf
je
test
(bad)
adc
jmp
sbb
cmps
jmp
lock
popf
push
hlt
inc
cmp
mov
sub
mov
ins
fwait
pop
mov
dec
movs
jo
cmp
push
sbb
dec
push
ins
jae
cmp
dec
inc
js
test
push
cmp
fadd
leave
div
nop
cli
out
sti
pop
inc
jns
add
imul
loopne
stos
in
rcl
(bad)
xchg
push
arpl
xor
cmp
cmc
push
push
fidivr
dec
sub
mov
push
fxtract
pusha
xchg
xchg
cmc
xchg
imul
push
cld
bnd
mov
mov
mov
or
push
add
mov
cmc
and
pop
xor
mov
(bad)
aad
jp
sar
cmps
jae
retf
fidiv
out
add
test
movs
sbb
inc
mov
cmp
sub
ffree
test
sbb
add
int3
jne
into
sbb
sub
cli
xchg
sub
dec
mov
test
cmps
fwait
mov
scas
pop
push
lds
mov
es
and
outs
repz
mov
xor
mov
mov
addr16
int
cmp
jmp
popa
mov
jge
outs
pop
lock
out
iret
dec
sbb
leave
xchg
mov
sti
test
ins
dec
cmp
inc
loop
addr16
mov
pop
dec
ins
addr16
xor
mov
jae
jmp
pop
lods
dec
gs
push
adc
out
dec
and
pop
lahf
dec
cli
sub
outs
lea
push
cdq
push
lea
sbb
test
call
push
in
dec
imul
add
repnz
xchg
add
sub
cmps
mov
jbe
in
sub
sub
xchg
inc
push
mov
adc
xchg
mov
sub
fld
mov
xlat
add
jl
call
dec
enter
outs
jl
test
in
sub
fwait
dec
cmp
test
stos
adc
inc
call
sub
mov
iret
mov
pop
sub
mov
add
fild
je
inc
stc
leave
fdivr
add
movs
jp
inc
jne
cli
outs
jne
push
call
lahf
pop
xchg
cdq
fistp
lea
adc
arpl
int3
dec
fldln2
outs
lock
adc
xchg
cmp
ins
lahf
cmps
cmp
cwde
movs
std
loopne
sub
and
test
mov
stos
movs
aaa
repnz
xchg
and
add
leave
jne
fdivr
pushf
push
stos
ins
or
inc
sbb
ret
xor
sahf
or
jle
into
pusha
jg
jbe
xor
movs
add
add
sub
shr
ret
jnp
aam
add
cmp
sbb
xor
adc
popa
adc
inc
xchg
test
js
or
xchg
xchg
sbb
or
das
sub
imul
mov
adc
mov
mov
jno
sti
push
cmp
xor
call
jnp
sub
std
cmp
push
adc
pop
sbb
mov
repnz
inc
pop
mov
(bad)
jns
fisubr
fadd
jl
pop
les
(bad)
stos
push
nop
and
push
mov
fwait
jns
add
cmc
imul
push
xchg
mov
retf
je
mov
popf
inc
jne
sbb
and
push
mov
cmp
loope
sbb
xor
sub
imul
sbb
xchg
or
add
cmc
sub
inc
or
jge
mov
rcl
daa
fild
(bad)
out
dec
xor
shl
popa
rcr
or
ins
xchg
pop
or
dec
(bad)
je
and
inc
add
int3
cmc
mov
pop
sbb
inc
loop
lea
jp
push
addr16
dec
jns
ss
dec
add
cmps
ds
inc
mov
imul
sub
mov
test
mov
mov
sub
ss
dec
pop
leave
pop
push
and
cmc
cs
fild
ins
ja
ss
sbb
adc
pushf
jae
xchg
and
test
dec
or
mov
mov
jbe
push
jnp
xor
in
push
(bad)
retf
shl
mov
cmps
ins
sbb
cmps
sub
je
into
(bad)
sti
push
cwde
aam
jge
js
ror
out
and
and
sbb
test
movs
mov
into
pop
mov
rcl
mov
xor
fld
jae
jbe
jmp
cmp
push
es
(bad)
cdq
inc
mov
or
daa
pushf
sbb
or
xor
and
mov
dec
stos
imul
adc
lods
mov
sti
jmp
pop
cmc
push
clc
and
xlat
jmp
shl
sbb
sbb
mov
mov
shl
jmp
or
lea
and
dec
retf
xor
(bad)
push
iret
mov
cmp
mov
pop
daa
movs
dec
pop
ins
ror
in
jl
fst
cmp
xor
jle
jo
cdq
dec
or
test
adc
stc
or
mov
daa
or
popf
mov
jge
sub
or
dec
loopne
(bad)
pop
retf
add
push
ret
les
pusha
aas
adc
mov
(bad)
pop
push
imul
in
mov
dec
inc
adc
ret
shl
xor
jl
cs
inc
sqrtps
dec
pop
sbb
test
into
xchg
mov
or
pop
arpl
jo
adc
les
mov
outs
jl
mov
ficomp
xchg
idiv
cmc
mov
fldcw
add
xchg
std
jb
sub
xor
xor
add
jnp
pop
cdq
jbe
adc
xchg
inc
ja
xchg
cmp
jno
daa
iret
mov
and
mov
adc
lds
aaa
push
fnstenv
or
out
inc
dec
dec
or
push
retf
int3
adc
mov
dec
jle
and
nop
jmp
or
fild
scas
outs
or
test
popa
imul
jb
push
mov
jns
inc
pusha
aaa
(bad)
push
mov
mov
(bad)
outs
dec
lods
mov
pop
ret
(bad)
fwait
movs
stc
aad
popa
dec
cwde
xchg
mov
dec
or
adc
es
call
nop
cmps
jl
sub
shl
push
mov
add
dec
rcl
das
arpl
mov
ret
addr16
mov
inc
sbb
mov
ds
test
addr16
dec
or
xor
enter
es
jnp
popa
xor
and
gs
add
xor
loopne
or
aas
jecxz
mov
lods
(bad)
loopne
or
in
iret
pop
(bad)
cmp
cmp
mov
repnz
pop
dec
pop
dec
and
sub
(bad)
xchg
cmc
jmp
ins
stc
ret
cmp
dec
pop
xchg
mov
aam
idiv
push
lds
sbb
push
push
mov
jbe
dec
mov
test
(bad)
adc
and
pop
retf
test
add
(bad)
(bad)
lahf
(bad)
cmp
cdq
imul
cmp
mov
imul
mov
push
mov
dec
(bad)
cwde
xor
outs
cwde
hlt
mov
int3
pop
fisubr
fcom
cmp
or
mov
mov
dec
scas
sbb
xchg
cmp
aaa
mov
inc
cmp
cmp
rol
mov
push
aam
and
dec
out
xchg
lock
arpl
inc
jmp
adc
(bad)
(bad)
pop
sbb
test
addr16
dec
retf
es
push
sbb
iret
mov
nop
dec
js
xchg
popa
nop
mov
mov
mov
shl
xor
cmps
inc
dec
jae
mov
add
fdivr
rcl
in
cs
push
(bad)
push
lods
adc
sub
pop
pop
pop
fst
inc
pop
dec
mov
push
jmp
mov
sbb
rcr
ins
push
js
xchg
fwait
adc
shr
imul
ficomp
jnp
mov
fs
pop
mov
xchg
mov
inc
aad
jae
lock
sbb
inc
push
cld
adc
ret
and
movs
in
jnp
pushf
lahf
dec
ss
dec
fisubr
ja
or
ds
add
daa
jecxz
loope
lea
mov
retf
pop
mov
or
repz
imul
test
test
mov
mov
adc
pop
push
sub
jmp
loope
(bad)
ins
and
xlat
call
fwait
in
push
fisttp
adc
repnz
(bad)
test
xchg
ror
xchg
ja
ins
pop
div
jo
dec
gs
(bad)
bts
dec
and
jle
retf
and
loopne
stos
cmp
and
aas
xor
fisubr
test
cmp
xchg
mov
mov
dec
lds
imul
movs
movs
cmp
sahf
cmp
mov
cmp
js
addr16
jle
sub
mov
jb
xchg
mov
je
lods
pusha
not
dec
jne
test
test
cmp
imul
fmul
enter
sahf
stos
cmps
pop
xor
inc
shr
pop
add
lock
xor
inc
mov
mov
fwait
xchg
stos
imul
push
shl
pop
pop
pop
mov
ja
mov
mov
mov
fsubrp
cmp
or
repz
jge
iret
push
mul
mov
push
jge
mov
scas
data16
cs
mov
call
retf
adc
push
xchg
inc
frstor
xlat
repnz
inc
ins
mov
inc
into
push
fidiv
test
ja
scas
dec
or
adc
jnp
add
loop
fsubr
pop
jp
repz
shl
inc
ficomp
mov
adc
in
pop
in
xor
fbld
jns
mov
pop
push
retf
lock
ret
mov
dec
mov
jmp
mov
aad
into
lahf
adc
(bad)
push
pop
sbb
jge
jle
cmp
pop
mov
fbld
outs
and
lahf
and
ins
(bad)
and
xor
sbb
jne
into
dec
scas
es
or
adc
imul
shl
jmp
repnz
pop
jae
retf
std
sbb
push
mov
mov
xor
pop
sahf
dec
fbstp
add
icebp
jle
data16
out
pmulhuw
cli
cmp
jl
sbb
sub
je
sti
scas
out
inc
xchg
imul
lahf
in
mov
add
test
sbb
fdiv
fbld
loop
and
movs
and
sti
nop
not
stos
jmp
lods
push
imul
jnp
jae
in
bound
in
push
or
inc
mov
iret
aaa
dec
cmps
fnstsw
push
lods
pop
or
and
mov
repnz
imul
fimul
pop
add
inc
jne
cmp
jmp
add
mov
dec
jne
jge
xchg
pop
(bad)
(bad)
add
stos
xchg
stos
xchg
aaa
sahf
enter
fnsave
and
retf
cmc
repz
std
loope
sub
mov
test
or
jmp
clc
cmp
ins
stos
arpl
popa
pop
jo
pushf
or
mov
fild
shl
jg
xchg
imul
(bad)
jge
add
or
mov
ret
fcomp
dec
cmc
nop
movs
adc
out
icebp
push
fsub
cld
out
out
cmps
inc
mov
aam
(bad)
ins
loopne
adc
sbb
shl
mov
ja
jne
pop
inc
(bad)
shl
(bad)
js
lods
idiv
mov
mov
cld
mov
and
aaa
outs
inc
push
out
mov
scas
mov
mov
out
adc
mov
mov
push
or
cwde
xchg
int3
pop
cs
stc
fcomi
cwde
ja
outs
(bad)
cmp
out
mov
pop
pop
jns
in
repnz
mov
test
mov
ins
mov
fstp
in
xchg
loop
lds
ret
rcr
popf
sub
xchg
cmp
and
pop
call
mov
out
jg
push
jnp
xlat
fst
jae
repnz
adc
sub
pushf
arpl
fcom
jp
aad
loopne
and
add
inc
mov
addr16
xchg
push
nop
movs
and
jo
and
sub
sbb
push
xor
(bad)
jmp
dec
sbb
sar
pop
mov
jle
sar
cwde
ja
sub
pop
inc
and
inc
jbe
inc
bound
ins
jns
addr16
lock
ss
(bad)
inc
mov
mov
push
cmp
gs
and
lahf
scas
mov
sub
fmul
and
loope
cmps
test
lods
sub
dec
jmp
popa
dec
push
rcr
jnp
ret
lahf
and
sbb
test
shl
int3
add
jb
mov
push
shl
jecxz
xor
cmp
movs
inc
js
and
adc
inc
inc
xlat
push
cmp
movs
scas
mov
iret
sub
je
(bad)
lock
pop
mov
push
cmp
in
imul
sbb
push
mov
popf
mov
pushf
shl
sub
cdq
ja
cmps
test
enter
outs
and
pop
jmp
pop
push
and
mov
out
leave
dec
das
pop
mul
sub
sub
dec
fstp
add
cld
pop
add
push
gs
mov
fld
leave
and
sar
dec
cli
push
jne
sahf
xor
mov
(bad)
sti
and
push
push
cwde
test
sub
and
arpl
loopne
and
sbb
shr
mov
mov
inc
sub
sbb
fisub
and
retf
mov
(bad)
rcr
mov
adc
xchg
xlat
fucom
in
mov
sub
mov
xchg
mov
dec
loopne
out
in
jge
ret
push
(bad)
ds
lds
pop
fs
das
mov
ins
test
imul
aas
in
in
imul
fidivr
xor
jno
hlt
jns
fisttp
imul
in
das
cli
aad
jns
push
mov
push
std
fist
xchg
into
adc
jmp
jl
and
or
movs
push
jb
inc
mov
xor
ins
cwde
xor
jl
mov
in
inc
and
ret
enter
jae
lock
sahf
add
(bad)
scas
mov
out
scas
mov
imul
sbb
jae
xchg
dec
ins
inc
xchg
cmp
into
mov
dec
mov
inc
shl
xchg
jno
ja
mov
pop
and
fistp
stos
aas
outs
fnsave
inc
int3
xor
(bad)
jb
push
repz
neg
push
cmps
fisub
jns
jle
outs
inc
inc
mov
mov
out
imul
arpl
xor
fnstcw
pop
loope
and
rcl
cmp
push
mov
xchg
iret
gs
cmp
push
dec
cmp
inc
jecxz
bound
fmul
test
lock
les
stos
cmp
ins
add
inc
push
pop
loop
(bad)
and
aad
mov
pop
jne
dec
(bad)
stos
(bad)
loope
lods
fild
cmp
lock
aam
cmps
clc
mov
test
xchg
ss
push
xchg
mov
jp
cmp
pop
je
xor
sub
ret
dec
(bad)
jo
cmp
fisub
push
leave
xor
pop
pop
cs
pop
ds
push
xchg
xchg
push
jbe
xchg
cmc
push
mov
inc
adc
aam
imul
into
cdq
or
push
and
dec
fs
and
in
fiadd
lock
cmp
fmul
lock
fwait
cdq
sbb
pop
movs
mov
ret
sub
push
cmp
sti
sar
adc
pop
leave
jo
test
ins
test
js
pop
enter
cmp
outs
mov
push
push
sub
dec
dec
xchg
and
call
fsubp
inc
shl
(bad)
pusha
movs
aas
scas
not
mov
sub
xor
dec
ror
sbb
xor
fwait
jno
pop
jo
shl
and
int
mov
mov
mov
loopne
push
ror
test
loopne
mov
mov
pop
fsubr
fcom
cmp
xchg
(bad)
adc
ss
jnp
fadd
movs
ficom
loopne
ret
xchg
mov
sti
test
xchg
addr16
xchg
dec
cmp
(bad)
mov
repz
dec
(bad)
not
jne
push
adc
and
aam
or
rcl
jmp
(bad)
jmp
adc
add
xchg
cmp
lds
jb
test
fwait
jge
sub
aaa
call
cmp
scas
jmp
shr
inc
mov
lea
adc
push
into
ins
fsub
adc
ret
sub
fmul
in
loopne
mov
lea
push
std
xor
adc
xor
push
das
inc
or
test
loop
test
xor
(bad)
jns
fisub
imul
mov
push
push
stos
sbb
loop
test
mov
call
jg
repnz
cmp
mov
push
mov
call
inc
loope
jnp
(bad)
cwde
push
(bad)
retf
xor
add
movs
retf
xchg
lods
scas
mov
ins
adc
loope
adc
xchg
sbb
in
gs
fisubr
and
iret
sbb
pop
cld
imul
push
popf
jp
mov
pusha
out
pop
clc
aad
(bad)
or
je
bound
jb
test
shr
nop
fnsave
cdq
or
bound
or
pop
push
cwde
mov
push
inc
xchg
xchg
enter
loope
add
fnsave
xlat
jl
inc
(bad)
in
and
adc
test
mov
outs
dec
(bad)
mov
and
fidiv
fwait
mov
sbb
cmp
mov
mov
sbb
data16
in
fwait
dec
in
imul
xchg
aaa
lahf
sub
aam
stos
adc
loop
mov
and
push
fnstsw
repnz
push
fs
and
inc
ss
cmp
ret
or
jno
ins
adc
push
xchg
mul
cmps
mov
or
out
inc
mov
cmp
js
jecxz
push
lock
or
rol
(bad)
movs
(bad)
nop
sti
sub
mov
push
sahf
js
fisttp
xchg
xor
sub
cmps
mov
cmp
adc
stc
fwait
call
mov
in
sbb
push
repz
stc
dec
stos
or
scas
xlat
iret
(bad)
xchg
dec
fmul
inc
clc
pop
lea
or
std
sbb
fadd
jg
loop
dec
mov
sub
push
mov
mov
fiadd
aaa
lods
in
dec
ins
ins
scas
scas
mov
jne
dec
cld
cmp
and
icebp
inc
sub
lea
pop
lds
inc
ret
xor
cmps
push
movs
sahf
sub
sahf
and
dec
repnz
les
cld
sti
push
cmc
int3
xchg
cmp
push
pop
jb
mov
iret
cmp
es
xchg
jb
mov
dec
push
outs
data16
xchg
repnz
in
jge
retf
fiadd
js
or
pushf
mov
mov
enter
cmps
xchg
jl
cmp
aad
mov
mov
mov
out
lds
adc
popf
dec
mov
xchg
mov
arpl
jecxz
xlat
push
div
in
lock
loop
lods
cmp
or
xchg
mov
mov
stos
mov
xchg
ja
sub
push
sbb
xor
mov
push
loope
pop
xchg
(bad)
xchg
scas
jge
retf
mov
add
sub
sub
(bad)
pop
dec
das
ror
jmp
pusha
fmulp
in
test
mov
bound
inc
sbb
ret
fsub
cwde
fmul
mov
mov
retf
clc
pop
pop
xchg
test
dec
js
pop
and
and
sbb
addr16
dec
sahf
fwait
xchg
or
pop
mov
xchg
sub
sbb
inc
dec
gs
popf
aam
xlat
mov
push
add
mov
xchg
or
data16
out
ins
inc
mov
popf
mov
mov
sti
adc
cwde
xor
xor
repnz
push
push
fmul
ins
jb
movs
ror
in
clc
lahf
xchg
mov
cmp
sbb
mov
pop
fs
inc
popf
and
dec
movs
mov
stc
push
and
into
rcl
cdq
in
inc
lahf
pop
push
inc
jmp
std
stos
outs
call
sti
sbb
daa
fcomi
pop
std
push
daa
sbb
sbb
fnclex
(bad)
retf
retf
sti
stos
(bad)
out
scas
or
inc
mov
pop
test
xlat
adc
gs
push
mov
imul
cmps
sbb
inc
and
loope
inc
aas
sub
sub
sub
hlt
push
addr16
out
inc
outs
pop
hlt
repnz
cmc
pop
jno
sub
clc
out
pushf
test
aam
sar
ret
std
ror
iret
out
add
mov
mov
(bad)
mov
loopne
fisttp
mov
ret
fnstcw
out
int3
inc
pop
sub
mov
out
repz
popa
outs
aaa
aas
movs
xchg
outs
lods
stos
or
or
mov
cmp
ss
pusha
mov
cdq
jae
xchg
xchg
mov
call
shl
push
push
cmps
ss
cdq
push
retf
and
add
inc
pop
mov
lods
shl
inc
pop
pop
fwait
test
fstp
mov
sub
stc
pushf
or
cmp
push
shl
das
stc
jmp
pop
pop
xchg
int3
dec
test
cwde
cmp
out
lock
sub
clc
mov
xchg
loope
xchg
push
mov
and
daa
outs
xchg
pop
dec
jns
jmp
(bad)
pop
fcom
sbb
mov
femms
mov
loop
jae
loopne
shl
fnsave
sub
xor
outs
jne
imul
sbb
jne
imul
cmp
xchg
adc
jle
out
push
cmp
push
aam
cwde
add
mov
inc
push
push
push
or
push
push
adc
int
mov
fiadd
fwait
add
xchg
cld
scas
jmp
pop
xchg
test
xchg
push
sub
xchg
jnp
xor
ficom
fisttp
pop
push
add
pop
mov
inc
dec
and
fstp
pop
or
dec
dec
xchg
jns
mov
jmp
push
cld
cmp
jl
dec
sub
ds
push
mov
push
dec
ror
and
jmp
(bad)
push
pop
xor
sbb
pop
jbe
xor
cmp
push
and
push
popa
sbb
sbb
hlt
daa
dec
xchg
sub
or
pop
imul
dec
call
pop
scas
jmp
mov
or
mov
imul
fsubr
adc
(bad)
mov
stos
out
movs
adc
dec
int3
sub
ins
sahf
ret
(bad)
jg
in
popf
cmps
fwait
enter
adc
sub
lock
pop
push
or
xchg
pop
popf
loope
(bad)
inc
mov
xlat
inc
adc
stos
jl
ret
mov
enter
mov
mov
xor
or
pop
mov
ja
mul
clc
dec
pop
(bad)
rol
les
lahf
fcomp
imul
xchg
repnz
into
push
inc
ret
in
push
cld
sub
and
jge
movsx
add
outs
cdq
(bad)
stos
sub
fidivr
xchg
dec
dec
add
cli
cs
test
(bad)
rcl
test
jecxz
xor
(bad)
aam
sbb
add
jno
mov
jmp
sbb
mov
outs
retf
ret
loope
push
adc
das
inc
fiadd
xor
shl
stc
adc
hlt
mov
cmp
popa
or
repnz
cmc
dec
jnp
rol
cwde
(bad)
ror
movs
aaa
icebp
jnp
outs
pop
add
addr16
ret
cdq
adc
mov
ja
sub
movs
fcom
iret
test
cmp
arpl
adc
popa
mov
xchg
int3
mov
mov
xlat
hlt
leave
movq
pop
sti
mov
dec
inc
cmc
mov
or
cmps
push
jo
mov
inc
lods
ffree
mov
or
cmp
rsm
loopne
imul
mul
xchg
shl
sbb
push
aad
cli
jge
loopne
push
(bad)
xor
mov
rcr
push
dec
das
outs
jmp
mov
push
mov
jbe
pop
(bad)
xor
and
adc
nop
(bad)
push
jb
adc
out
sub
cmp
add
shr
xchg
cli
in
call
sbb
xchg
in
sub
aam
dec
adc
int
sub
sbb
cmp
mov
lods
(bad)
scas
sbb
lahf
cwde
cli
gs
push
gs
xlat
aam
mov
pop
mov
jae
sbb
int
cli
mov
(bad)
add
sbb
clc
mov
push
inc
loop
lods
add
outs
aaa
push
(bad)
aam
scas
jo
add
and
(bad)
outs
xor
jmp
std
cmps
data16
aas
cwde
dec
sub
repz
jmp
popf
mov
jl
jnp
cwde
dec
mov
in
jg
or
mov
xchg
cmp
sub
popf
shl
cwde
jbe
ja
mov
ficom
add
jno
adc
outs
cmp
ror
lods
push
add
nop
mov
test
out
cwde
test
dec
cmp
imul
lock
call
inc
cmp
push
sub
rol
mov
sbb
pop
inc
sub
movs
adc
push
or
mov
pop
loop
outs
add
loopne
jge
push
std
int
rcr
loope
fs
push
mov
sub
mov
push
xor
mov
hlt
into
mov
push
cwde
dec
push
xchg
jb
dec
or
jb
(bad)
leave
daa
push
or
rcr
xchg
clc
rol
shr
out
aas
sub
sub
(bad)
sbb
pop
faddp
scas
jb
scas
push
mov
sub
je
ds
xor
daa
cld
lahf
inc
lds
fist
cmp
out
in
es
test
fcomi
xor
mov
xchg
movs
push
add
mov
or
lods
sti
cmps
mov
lea
mov
rol
pop
test
int3
jo
shl
daa
ror
jmp
cmc
lods
adc
push
mov
mov
das
in
push
sbb
out
icebp
loope
test
mov
and
mov
int3
stos
mov
add
push
hlt
movs
sub
jb
daa
repnz
mov
pushf
xchg
test
cmp
pop
jl
sahf
fistp
jnp
fldcw
jge
int3
sar
and
data16
retf
cmps
mov
cmp
xor
out
in
xor
mov
inc
repz
mov
in
stos
aad
ror
(bad)
sbb
push
mov
and
in
and
xchg
adc
jbe
mov
stos
inc
lods
std
sbb
retf
inc
cmps
add
cmc
and
sbb
je
retf
scas
and
cmp
xor
inc
mov
stos
mov
test
xchg
pop
add
rcl
stos
mov
jae
stos
movs
cmc
adc
mov
push
retf
pop
or
mov
pop
push
push
mov
fucomi
enter
dec
ret
cmp
imul
idiv
inc
rcl
jmp
xchg
pop
mov
andnps
mov
xor
adc
cld
adc
sub
(bad)
cmp
adc
xchg
(bad)
(bad)
(bad)
neg
mov
addr16
and
test
test
inc
shl
sahf
sub
jne
cmp
push
adc
ret
cmp
or
mov
sub
push
adc
add
fs
loopne
xor
shl
cld
scas
adc
jg
data16
(bad)
fist
rcl
frstor
enter
mov
cmp
imul
mov
xchg
inc
mov
sub
mov
pop
push
push
je
mov
push
jne
inc
fldenv
push
xor
mov
nop
or
std
lahf
out
cmps
xor
xchg
xchg
dec
fst
les
mov
inc
out
or
call
mov
adc
lahf
fild
jp
jle
loope
cmp
sub
mov
or
cmps
sar
adc
lods
inc
ret
repz
mov
pop
rol
mov
add
push
pop
sub
jno
popa
cmp
dec
jmp
aam
xchg
ret
cmc
cmp
sahf
mov
sub
mov
jecxz
outs
adc
hlt
outs
loope
inc
in
retf
sahf
in
or
or
or
retf
neg
sar
sahf
pop
loop
mov
push
sub
test
jp
xchg
dec
in
cmp
ret
imul
retf
int
xor
(bad)
in
or
scas
pop
push
xor
cli
pop
jecxz
cmc
mov
mov
or
imul
dec
in
push
das
aaa
pop
cwde
int
add
nop
sbb
push
mov
mov
or
jl
aam
mov
mov
dec
add
cmp
pop
cmp
add
ins
jp
daa
cdq
lods
repz
test
rcr
loope
cmc
sub
xor
mov
sbb
sub
inc
ror
call
jno
out
jns
lods
cli
js
std
jae
push
mov
test
repz
ret
or
mov
je
sbb
mov
mov
xchg
mov
mov
mov
repz
add
movs
xchg
ss
fwait
xor
and
cmps
ret
ror
into
stos
lods
mov
push
call
dec
movs
jle
sub
or
retf
dec
xor
shl
ins
jb
inc
mov
mov
fnstcw
or
pop
sub
mov
sbb
sti
cmp
or
in
fld
mov
jmp
push
addr16
fild
sub
xchg
push
mov
dec
mov
and
mov
dec
das
idiv
mov
test
lea
je
or
test
scas
(bad)
jp
sbb
pusha
sbb
sahf
sbb
or
iret
in
bound
mov
cmp
add
imul
es
imul
cmp
dec
cmp
xchg
ret
scas
adc
das
mov
push
cli
repz
pop
inc
add
push
(bad)
or
adc
inc
xor
mov
or
push
jns
mov
idiv
dec
mov
push
pusha
mov
fdiv
cmps
dec
push
add
mov
mov
xchg
pop
sub
mov
es
mov
mov
pop
mov
pop
shl
test
inc
cmp
inc
xor
inc
arpl
rcl
cmps
or
and
les
addr16
xor
movs
dec
xchg
sub
cmp
das
pop
les
jo
cmps
rcr
aas
jb
sbb
shl
or
daa
jle
test
lods
dec
push
xlat
sub
pushf
cmps
es
jno
loopne
push
mov
add
popf
cmp
mov
pop
stos
call
ret
std
scas
fadd
push
dec
mov
push
pop
jmp
lock
sar
add
add
lock
jnp
adc
arpl
lds
and
out
pop
dec
dec
inc
sahf
jg
add
cmp
out
mov
push
cdq
cmp
nop
jecxz
clc
fistp
sbb
shl
or
and
stc
mov
xchg
(bad)
push
xor
mov
stos
(bad)
inc
sbb
xchg
and
(bad)
cmps
jns
push
sub
mov
mul
sbb
gs
and
jmp
mov
in
aad
out
or
dec
or
or
fwait
jae
inc
mov
test
sub
jne
mov
ror
xchg
retf
add
shl
(bad)
out
cmps
int
mov
lods
xchg
cmp
and
jl
stc
pop
out
mov
gs
dec
adc
aas
push
jno
in
retf
(bad)
in
mov
ret
pop
fstp
fild
cmp
and
adc
pop
mov
sahf
out
and
sub
cmp
xchg
cmp
dec
sti
aaa
sbb
inc
iret
ret
ja
lahf
push
and
xchg
push
fs
inc
jb
or
test
ss
cmps
std
mov
sbb
outs
fild
bound
push
frstor
mov
inc
sbb
imul
xchg
inc
pop
dec
enter
adc
icebp
jmp
pop
addr16
rep
inc
sti
pop
or
jge
push
and
cld
(bad)
repz
sahf
jmp
xchg
addr16
(bad)
jo
fisubr
stc
cdq
mov
cmp
mov
into
adc
mov
xchg
mov
dec
mov
addr16
cld
pop
inc
pushf
ds
pop
outs
adc
cmp
adc
(bad)
int3
xchg
and
sbb
pop
bound
repnz
icebp
ds
cmps
push
lea
cmps
inc
cli
jnp
dec
push
sub
pushf
xor
jmp
das
aaa
mov
movs
jge
aas
jecxz
dec
mov
mov
lds
das
cmovg
push
xchg
mov
sub
jb
icebp
cli
aas
loopne
xor
adc
mov
or
or
add
cmps
xchg
aas
repnz
cmps
lock
mov
add
ret
fsub
fdiv
mov
daa
cmc
fnstsw
adc
jnp
mov
mov
add
mov
nop
xchg
or
or
inc
inc
jp
enter
jb
imul
sub
ja
pop
push
adc
jp
inc
inc
pop
mov
mov
mov
aam
xchg
mov
bound
adc
push
sti
movs
sbb
sub
cmp
arpl
std
inc
rcl
dec
inc
xor
or
out
and
sub
jb
gs
shl
or
dec
or
xchg
test
cmp
ror
mov
bound
cdq
fcomip
ror
pop
in
cwde
push
add
cmp
std
outs
iret
sub
inc
push
mov
ds
pop
and
xchg
and
add
test
scas
std
imul
rol
ins
clc
push
mov
jg
ficom
xlat
or
sbb
jo
jo
call
and
call
jno
jge
jmp
cmp
arpl
fdivr
sar
adc
xor
pop
out
xchg
cli
div
shr
fcom
mov
push
jge
rcr
neg
dec
cwde
dec
and
xchg
dec
jnp
pop
dec
adc
mov
xor
push
aas
cmp
mov
mov
(bad)
cmp
stos
cmp
jge
add
lods
jecxz
cmps
mov
imul
push
inc
lock
lock
cdq
mov
outs
movs
push
in
adc
addr16
push
aaa
dec
test
sti
xchg
jge
cdq
test
sub
or
and
pop
xlat
test
sbb
cwde
and
push
ins
pushf
into
xor
gs
adc
dec
pop
jecxz
adc
(bad)
out
mov
fsub
xchg
dec
jnp
push
dec
mov
push
and
and
push
inc
sub
cmp
dec
add
ins
xchg
enter
inc
or
aas
xchg
inc
dec
daa
jae
ins
cmps
jp
inc
or
je
sub
retf
xor
pop
jmp
fstp
lea
push
iret
or
mov
jge
xchg
mov
push
jmp
lahf
bound
adc
cvtps2pi
lods
jl
fbld
fisub
jno
test
ins
mov
fisubr
neg
pop
mov
stc
mov
cmp
xor
in
enter
jmp
jnp
rcr
(bad)
add
retf
xor
in
retf
dec
cmp
mov
cmp
or
mov
sub
sbb
(bad)
and
js
xchg
fild
inc
ja
call
sub
lods
hlt
mov
adc
sbb
inc
rcr
test
pop
cmp
mov
push
adc
test
cmp
xchg
push
cmp
(bad)
dec
inc
test
stc
cmp
addr16
mov
stc
bnd
or
test
jg
inc
add
xchg
out
sub
into
in
aad
ins
sbb
call
scas
pop
or
and
sbb
in
icebp
mov
or
jl
mov
lods
sbb
xlat
xchg
add
gs
dec
or
pop
push
jle
shl
mov
(bad)
mov
dec
mov
fld
sti
ins
int3
retf
xchg
shr
pop
push
dec
cli
pop
imul
jl
or
and
dec
xor
jns
fst
dec
sub
cld
mov
ret
js
loope
jecxz
ret
out
adc
add
imul
pop
repnz
push
sub
les
stc
sub
mov
pop
movs
or
aas
inc
fwait
dec
gs
adc
imul
clc
push
iret
icebp
(bad)
cli
cli
ret
sub
push
mov
in
sub
jge
stos
fbld
gs
retf
mov
mov
mov
or
ret
mov
outs
cwde
(bad)
les
bound
icebp
adc
jo
das
xchg
(bad)
push
jmp
xchg
mov
jle
in
clc
daa
jmp
(bad)
mov
pushf
fwait
clc
cdq
loop
xchg
ss
rcl
add
das
lds
into
mov
inc
or
iret
cmp
pop
sti
jnp
sbb
outs
inc
sahf
stos
popf
dec
xchg
shr
or
fld
dec
xchg
adc
mov
jge
out
or
int3
add
or
xchg
fnstcw
dec
fnstcw
push
mov
cmp
sbb
in
dec
nop
mov
or
inc
int
mov
mov
sub
xchg
mov
pop
dec
add
adc
xor
mov
rcl
cmps
dec
stos
sub
(bad)
push
fsubr
add
xor
push
sub
xlat
push
push
maxps
pop
lods
add
cmp
adc
mov
pusha
daa
pop
jle
pusha
(bad)
call
jecxz
xchg
mov
add
cmp
ds
jmp
in
xor
fnstcw
stc
pop
push
xor
sbb
movs
bound
sub
aad
sbb
test
ja
cwde
sub
xchg
jne
mov
sar
xor
xchg
xchg
ins
sbb
xchg
rcr
int3
push
sahf
add
pop
jmp
repz
test
push
shl
cmps
int
jno
mov
ret
in
inc
aas
popf
xchg
shl
data16
cmp
and
mov
jecxz
cmp
xchg
sbb
pop
mov
in
mov
arpl
lahf
push
cld
out
add
adc
sub
pop
mov
jge
lock
mov
pop
(bad)
aaa
out
xchg
cmps
retf
push
add
cmp
cli
cdq
hlt
pop
jnp
fld
gs
or
stos
push
adc
xor
jns
jbe
push
in
sbb
and
je
in
or
mov
adc
dec
ret
adc
dec
fsubr
inc
adc
addr16
mov
mov
jge
or
and
aaa
imul
pop
ss
mov
add
out
sub
fist
dec
test
jecxz
mov
xchg
(bad)
cmp
test
push
pop
repz
int3
pop
paddw
mov
stos
ds
dec
int3
aaa
gs
dec
(bad)
stc
imul
fnstenv
cmp
daa
xchg
mov
sahf
xchg
inc
pop
sbb
cmp
lods
sbb
dec
pop
lds
ret
sub
xlat
and
and
xchg
sbb
shl
dec
pop
or
dec
xchg
pop
adc
jne
xchg
sub
push
sbb
lods
shr
pushf
mov
push
dec
in
sub
inc
add
sbb
xor
jnp
loope
cmc
xor
add
push
dec
and
sahf
iret
xchg
fld
adc
jbe
mov
jmp
pop
pushf
sub
je
loop
mov
cmps
xor
jg
cmps
jp
dec
push
cpuid
mov
fisub
adc
retf
xchg
sbb
push
(bad)
cld
ret
ins
mov
(bad)
xor
jno
(bad)
out
mov
(bad)
inc
jge
xor
int
cmp
cs
xchg
aam
aas
ins
js
jo
test
inc
pop
shl
rol
jno
neg
mov
aad
jge
ja
dec
imul
xchg
frstor
call
mov
mov
ss
jb
xchg
pcmpgtb
sub
jbe
push
xor
js
out
jp
fistp
shl
pop
int3
dec
call
mov
leave
xchg
ret
cmp
in
jecxz
mov
push
mov
sar
popa
jp
pop
test
mov
ss
pop
ror
and
cmp
jp
cmps
nop
push
add
sbb
push
xchg
out
ss
mov
ins
inc
dec
fcomp
pop
inc
dec
addr16
adc
movs
add
add
rcr
cld
addr16
ds
jns
cmp
xlat
div
cmp
adc
add
or
xchg
sbb
mov
fld
rcr
pop
push
fistp
xor
pop
js
push
sti
pusha
and
movs
das
out
mov
mov
(bad)
or
int3
call
xchg
jae
pop
mov
dec
jno
add
rol
adc
mov
cmps
inc
mov
adc
stos
test
retf
rcr
fdiv
dec
sbb
inc
aam
fisttp
jbe
push
shl
inc
shl
ds
inc
test
call
das
mov
popa
mov
fisttp
call
sub
pop
clc
cs
daa
and
fwait
cmp
lahf
loopne
in
mov
cmp
les
pop
jl
adc
cs
aas
push
(bad)
jbe
(bad)
jmp
out
xor
push
call
mov
xor
fcmovnbe
fiadd
xchg
inc
push
lock
(bad)
push
xor
dec
mov
jno
ficomp
in
inc
test
retf
inc
in
ficom
jl
and
into
idiv
arpl
push
clc
push
pop
fdivr
movs
xchg
lds
or
ficom
add
fiadd
add
loop
jnp
ror
add
push
inc
int
ret
aad
neg
jne
ret
idiv
sar
inc
mov
shl
mov
jp
xchg
out
sbb
adc
or
xchg
jp
sbb
icebp
sbb
sbb
loope
hlt
inc
popa
jb
add
xor
imul
es
loop
xlat
mov
mov
push
test
adc
scas
shl
call
push
xchg
loope
mov
mov
mov
mov
sbb
sub
jns
mov
xor
jge
sub
iret
xor
xor
call
sti
pusha
mov
jle
mov
in
imul
or
jl
pop
outs
inc
pop
fcmovnbe
pcmpeqw
cs
push
in
jmp
xchg
rol
mov
out
bound
inc
add
xchg
lds
dec
xor
xor
jbe
ret
cs
adc
jp
repnz
loopne
in
call
(bad)
sbb
or
stos
mov
jl
jae
xor
in
daa
mov
adc
cmp
out
ds
jb
fcmovne
lods
in
jnp
data16
inc
or
inc
imul
out
jmp
jp
stos
jmp
mov
mov
shl
ins
inc
retf
popf
push
xor
imul
iret
(bad)
xchg
dec
dec
dec
sar
loop
jmp
sbb
xchg
jbe
add
test
(bad)
sbb
or
imul
push
adc
jnp
mov
ja
cmp
pop
mov
inc
and
xor
ret
xchg
retf
das
jmp
movs
sbb
data16
cmovg
push
repz
xor
retf
call
inc
jnp
pop
jg
mov
mov
test
(bad)
mov
mov
cmps
xor
pop
jno
test
sbb
jecxz
adc
sbb
pop
sbb
push
jg
xchg
lahf
mov
jo
sub
fstp
pop
mov
xor
movs
idiv
mov
ds
jge
dec
ss
and
nop
xor
int3
out
mov
mov
jb
mov
push
xor
les
push
div
sub
ins
icebp
ficom
add
cmp
xchg
jmp
into
mov
(bad)
mov
push
into
(bad)
icebp
xchg
mov
xor
sahf
in
out
pusha
lods
inc
out
cwde
and
xchg
(bad)
repnz
xchg
xor
jecxz
cmp
xchg
fdiv
push
arpl
jmp
sub
jo
retf
or
push
cs
mov
dec
cmps
lea
out
pusha
call
mov
call
in
pop
pop
lock
sub
pop
inc
xchg
fnsave
sbb
les
aas
lock
pop
mov
xor
pop
adc
lock
and
mov
and
push
jmp
leave
inc
fiadd
ror
cdq
imul
dec
xor
jns
test
ins
pop
es
mov
or
pop
xchg
sbb
cmps
xor
adc
cmc
les
cmp
pop
retf
call
adc
pop
xchg
mov
xchg
push
inc
hlt
daa
cmp
(bad)
clc
test
arpl
test
jbe
and
into
sub
add
cs
iret
inc
and
push
sub
pop
(bad)
ret
push
jno
inc
cmc
fldcw
inc
cs
lock
dec
cli
jmp
push
xchg
loopne
pop
add
rol
stc
cmp
in
shl
add
stos
(bad)
adc
cmp
shl
out
lds
pop
out
and
mov
jmp
arpl
cs
cmp
inc
push
pop
cmps
jns
ret
xor
(bad)
repz
xor
mov
pop
jle
pop
dec
call
cmps
mov
pop
lods
mov
mov
sar
movs
out
jl
pop
xchg
xchg
fadd
jno
and
mov
add
mov
mov
cmp
sub
or
fadd
jge
mov
pop
dec
mov
xchg
mov
sub
sub
(bad)
adc
pop
js
cmpxchg
inc
push
push
jl
xor
adc
in
rol
mov
add
gs
cli
(bad)
ficom
add
add
xchg
sbb
aas
adc
cmps
cmp
lods
mov
stos
mov
cli
mov
call
ffree
and
test
sti
and
lods
aam
call
test
mov
mov
jb
es
inc
inc
aad
add
cmp
push
and
popf
imul
or
pushf
inc
cmp
outs
and
push
sahf
stc
mov
ret
test
adc
dec
pop
into
or
test
lea
inc
scas
pop
push
dec
lahf
stc
out
push
inc
cmp
sbb
sbb
pusha
xor
pushf
sbb
adc
inc
sbb
xor
cmp
push
push
inc
mov
sbb
add
popf
cmp
mov
adc
or
and
clc
mov
rol
mov
dec
pop
mov
xchg
inc
aas
sub
loop
jmp
mov
push
jl
bound
xor
aam
jle
les
lea
out
cmp
sub
inc
adc
push
push
jmp
sbb
sbb
or
dec
or
fdivr
pop
retf
neg
pop
(bad)
push
cs
scas
sahf
ins
rol
test
xchg
clc
mov
(bad)
dec
and
jne
inc
pop
cmc
fmul
jno
je
arpl
shl
xchg
adc
xchg
(bad)
push
mov
sub
ret
xlat
es
sar
push
adc
cs
fwait
jmp
jg
dec
xor
xchg
(bad)
cwde
ja
pusha
and
in
popa
mov
rcr
(bad)
and
add
mov
jbe
sahf
xor
and
addr16
call
sbb
test
ret
add
loope
xor
push
fcmovb
or
cdq
inc
xor
mov
sub
popa
push
pop
fnsave
push
mov
call
push
jmp
popf
out
jge
mov
idiv
mov
sbb
mov
jb
and
and
cli
and
inc
pop
cmp
push
fild
push
(bad)
fwait
pop
xor
cmp
and
je
jmp
enter
icebp
mov
out
xchg
lods
dec
push
data16
add
fld
sbb
or
mov
out
icebp
jo
(bad)
je
sbb
je
jb
pusha
inc
adc
daa
mov
movs
push
shl
lods
or
cmp
iret
sbb
jo
ret
inc
mov
push
jae
mov
sub
mov
fisub
out
mov
(bad)
adc
mov
(bad)
mov
popf
ror
aaa
fucomi
lock
lods
or
sub
push
leave
jl
jl
inc
sbb
rcr
xchg
push
ret
clc
nop
int
cld
mov
ret
pusha
in
jl
clc
mov
adc
jmp
xlat
pop
test
mov
out
sub
xchg
dec
sbb
adc
pop
sbb
sub
inc
add
jmp
fst
aam
adc
lds
mov
jmp
xor
ret
xchg
shl
mov
pusha
call
aas
or
sub
xchg
lods
jbe
sbb
and
out
dec
daa
jl
and
or
xor
pop
dec
adc
(bad)
mov
mov
test
mov
adc
int
mov
es
in
dec
daa
cmp
pop
add
and
push
js
xchg
and
test
(bad)
pop
loop
or
mov
cmps
pusha
outs
int
test
dec
and
mov
imul
lds
fimul
and
arpl
loope
in
sbb
jae
sub
loope
leave
adc
xor
cld
push
sbb
jb
adc
add
loope
push
mov
out
mov
cmp
add
out
mov
xchg
and
jb
arpl
sub
outs
addr16
dec
(bad)
and
jne
push
xor
or
cmps
icebp
cmp
shl
retf
jg
mov
call
popf
mov
pop
(bad)
mov
aas
fnsave
repz
mov
mov
retf
cmps
mov
and
xchg
push
jmp
mov
in
inc
les
ins
or
or
xor
stc
into
mov
call
push
retf
gs
or
(bad)
int3
cwde
hlt
xor
inc
mov
mov
sbb
push
outs
(bad)
fwait
mov
sub
iret
mov
inc
sahf
mov
call
stos
mov
shl
inc
pop
add
inc
mov
push
sub
loop
mov
lock
and
mov
add
add
icebp
add
mov
ja
outs
fneni(8087
sub
cmp
mov
jp
in
and
iret
push
mov
sti
jmp
jno
xchg
sti
dec
jl
call
movs
das
xlat
iret
cmp
inc
js
fadd
or
mov
test
test
cmc
(bad)
fistp
clc
in
(bad)
adc
or
jmp
pop
int3
or
adc
cli
and
or
add
mov
ins
scas
ins
inc
pop
fnsave
dec
lods
stos
mov
or
or
lds
pop
repz
sbb
mov
jp
daa
push
push
loope
ja
xchg
fild
xor
repnz
fidiv
leave
daa
mov
fld
xchg
test
jp
stc
sbb
cmp
lahf
in
or
ja
shr
fs
sbb
cwde
div
je
(bad)
ret
pop
inc
cld
test
or
or
cmp
aas
mov
xorps
pop
iret
mov
push
mov
mov
dec
jns
sbb
outs
add
sti
push
test
sub
bound
sub
mov
stos
xchg
repnz
loopne
inc
sbb
in
scas
or
ret
(bad)
(bad)
popa
cs
clc
fcmovnb
cmp
test
popa
mov
push
mov
push
add
sbb
xchg
ret
mov
dec
inc
je
adc
and
sar
jecxz
push
xchg
dec
das
in
adc
stos
scas
mov
fsubr
out
dec
fwait
push
dec
dec
in
push
dec
jl
dec
pop
mov
pop
xor
ins
retf
lea
push
lock
xor
fisubr
sub
movups
mov
sbb
pop
jns
jle
shr
mov
mov
jne
loop
jnp
ret
and
xchg
in
adc
(bad)
mov
shl
call
rcl
jmp
(bad)
fs
les
adc
push
es
adc
xor
cmp
in
xchg
cmp
ds
jg
mov
adc
push
push
jno
cmp
add
or
xchg
mov
inc
(bad)
jp
in
dec
cmp
ret
xchg
dec
sti
add
(bad)
icebp
push
dec
jmp
push
and
test
lods
(bad)
call
aas
je
hlt
int3
lahf
scas
lea
enter
cld
xchg
fimul
(bad)
sbb
or
xchg
nop
adc
push
retf
imul
and
clc
(bad)
loopne
loopne
stos
dec
(bad)
les
mov
dec
sbb
shl
test
(bad)
push
movs
xchg
sar
jmp
cmp
fist
fistp
mov
pop
push
test
mov
and
je
push
mov
pop
sub
push
fnsave
or
mov
int
cmp
and
fst
out
mov
xlat
push
jae
outs
scas
lock
outs
sbb
cld
adc
inc
jne
or
adc
and
lahf
cmp
xor
mul
add
(bad)
xor
jge
adc
mov
jae
inc
shr
jp
xchg
out
jnp
and
cmps
or
(bad)
das
ins
sbb
xor
pop
outs
ins
xchg
adc
icebp
addr16
scas
aam
sbb
scas
rcr
jge
dec
cmc
aad
outs
cmps
imul
sbb
fcomip
sub
and
lods
inc
xadd
bound
popa
or
add
xchg
mov
icebp
pop
and
out
add
add
dec
cmp
add
fwait
pop
sysexit
push
inc
jno
mov
adc
pop
mov
loope
lea
stc
int3
sub
in
mov
cwde
mov
js
(bad)
xor
ret
jmp
mov
mov
mul
inc
rol
lock
rcr
gs
and
xchg
inc
dec
xor
out
arpl
add
call
repz
fcmovb
neg
jbe
mov
aaa
or
push
mov
inc
and
pop
das
pusha
xchg
jp
jno
push
mov
jg
jne
or
add
xor
cmp
js
stos
sub
loope
inc
or
in
shl
adc
xchg
int3
and
add
sbb
test
and
scas
test
lea
mov
jmp
sbb
out
retf
test
inc
sub
sbb
add
mov
add
and
ror
xchg
mov
dec
or
dec
mov
xlat
enter
inc
add
fs
hlt
call
dec
in
pop
mov
add
int3
sbb
out
pop
in
cmps
imul
enter
movs
or
loope
xor
pop
mov
or
xchg
sbb
push
dec
cmp
das
iret
rcl
inc
inc
retf
out
out
loope
dec
sbb
cmp
inc
(bad)
out
enter
pop
imul
stos
lods
push
test
pop
mov
jo
into
mov
data16
push
es
cmps
jne
push
mov
push
out
in
int3
stc
enter
mov
jae
ret
leave
sbb
xchg
outs
lods
(bad)
int3
sbb
repnz
sbb
lahf
add
sbb
cmps
cdq
lock
iret
ja
mov
fisttp
repnz
xlat
sub
mov
mov
out
adc
cld
ins
sbb
call
fiadd
pop
dec
xchg
mov
pop
xchg
je
cmovbe
cmps
scas
pop
or
cld
cmp
cmp
lock
push
fist
popa
inc
add
inc
pop
pop
daa
js
jecxz
pusha
jns
cmp
mov
xchg
xor
or
dec
into
inc
add
xchg
jg
cmp
xor
sub
js
mov
test
sbb
dec
pushf
xchg
jb
or
mov
pop
xor
ret
cmp
adc
mov
js
(bad)
lock
js
dec
add
retf
inc
shl
jb
or
fldenv
xor
stc
lods
jmp
(bad)
popf
aas
pop
cld
test
into
(bad)
aam
pop
mov
jge
in
or
scas
jmp
cdq
aam
pop
jle
sub
pop
pop
jmp
in
pop
sbb
mov
ffreep
jo
stc
sti
push
jno
cmp
test
xchg
les
shr
dec
pusha
shl
mov
push
push
pop
mov
lods
out
pop
fwait
pop
pop
mov
push
push
mov
out
dec
xlat
lds
clc
add
out
loop
gs
pop
xor
mov
pusha
push
sbb
arpl
stos
mov
mov
xchg
nop
icebp
cs
fcom
jl
stos
ret
loopne
in
sbb
mov
push
cmp
adc
loop
shl
(bad)
xchg
mov
lea
std
jecxz
cli
sub
jmp
xchg
std
rol
cmp
outs
fs
call
jg
pop
mov
imul
hlt
jbe
and
mov
cmp
retf
cmp
aaa
jb
jno
or
(bad)
ja
mov
mov
dec
imul
js
pop
jmp
mov
or
dec
mul
je
aam
popf
xchg
and
aaa
(bad)
mov
ins
cs
fmul
fcom
pop
sbb
dec
mov
dec
mov
test
fs
stos
daa
push
repz
(bad)
mov
push
jo
popf
pop
stc
(bad)
xchg
cmp
call
sub
ja
pop
div
mov
inc
jmp
jmp
dec
sub
pop
mov
mov
les
or
adc
shl
lahf
out
in
pop
mov
dec
dec
stos
aas
leave
cs
out
xor
jp
and
jmp
add
aaa
and
lods
inc
mov
xor
mov
jle
adc
push
shl
mov
inc
or
and
xchg
std
inc
or
sub
icebp
(bad)
cmp
mov
or
unpckhps
outs
mov
out
sbb
xchg
test
cmp
cld
enter
xor
imul
inc
retf
push
ror
retf
lea
imul
jmp
and
mov
and
xchg
loope
iret
(bad)
cmp
(bad)
cli
mov
(bad)
push
and
test
cli
jmp
jo
das
call
enter
xchg
dec
ret
mov
aad
shr
mov
jmp
ret
mov
loop
mov
mov
cmp
xor
mov
cmps
lods
mov
ins
push
int
jne
shr
mov
ror
(bad)
mov
ja
push
mov
fnstcw
call
retf
and
inc
in
jmp
mov
sub
sub
ins
push
and
add
mov
sar
push
mov
mov
loopne
ret
popf
push
pop
imul
sbb
dec
sub
sub
int3
add
sub
ds
aam
in
and
in
and
(bad)
jnp
dec
fidivr
lahf
mov
loop
stos
pop
rol
jle
bound
or
mov
out
ror
push
icebp
inc
dec
xchg
out
das
dec
xor
mov
sub
lods
push
in
mov
pushf
inc
inc
mov
test
cmps
call
jl
and
inc
(bad)
adc
pop
mov
mov
mov
sbb
leave
fisttp
add
cmps
adc
aad
aad
dec
push
shl
mov
cwde
xor
leave
mov
int
rcr
sub
inc
int
in
stos
arpl
push
aas
add
icebp
pushf
les
pushf
mov
loopne
pop
add
(bad)
xor
mov
jnp
cmc
cmp
pop
arpl
jne
imul
xchg
out
(bad)
mov
scas
sti
arpl
ja
xor
and
push
sub
inc
aaa
push
sub
imul
mov
jle
daa
pop
aad
cmp
out
or
pop
push
fmulp
and
test
inc
ins
sar
dec
je
mov
clc
push
icebp
cld
mov
repz
movs
retf
stos
lds
xchg
scas
jns
mov
cwde
lds
das
push
idiv
ror
imul
sbb
shl
mov
xchg
daa
mov
or
icebp
jecxz
sub
dec
xor
sbb
or
ror
leave
jmp
inc
push
icebp
aas
mov
mov
adc
mov
and
inc
imul
sub
arpl
xchg
cmps
inc
retf
cmp
add
inc
iret
cmc
and
and
pop
aas
lods
dec
sub
and
mov
inc
das
dec
fidiv
push
jg
pop
sti
or
aad
je
mov
cwde
mov
and
popa
ds
mov
or
cmp
push
jmp
add
imul
and
xlat
pop
enter
icebp
cmp
push
mov
jle
(bad)
and
popa
shl
mov
sub
jnp
xchg
mov
stos
and
dec
jmp
outs
or
jg
push
push
or
or
cmp
jns
sbb
ins
(bad)
into
and
ret
scas
es
call
in
add
xor
cmp
leave
imul
iret
pop
inc
(bad)
cld
cmp
in
push
ja
test
rcl
cmp
sub
push
sar
jg
adc
ins
sub
fstp
add
sbb
(bad)
in
popf
add
mov
popa
add
pop
and
repz
push
das
mov
fs
lods
jne
push
fidiv
arpl
loopne
sub
and
xchg
jge
dec
xchg
shl
bound
inc
cli
fcmovnb
adc
mov
sbb
outs
popf
popa
mov
arpl
ret
mov
push
push
and
pop
bound
mov
inc
adc
jnp
outs
in
loopne
mov
jnp
pop
or
fwait
pop
ror
aaa
mov
push
jle
stos
cmp
scas
test
popf
pop
int3
pop
xor
or
dec
sar
pop
rcl
outs
adc
lea
push
jecxz
fldenv
xor
push
jmp
add
or
push
jmp
iret
cmp
rcl
jl
mov
repz
xor
loop
sub
pop
retf
adc
repz
(bad)
into
mov
cmp
int
mov
test
jns
scas
scas
pop
add
add
icebp
les
rol
shl
sahf
icebp
(bad)
std
mov
inc
loop
(bad)
mov
jl
std
nop
js
ins
popf
int
inc
mov
clc
ss
inc
call
lea
out
rcl
stos
inc
push
inc
aam
mov
mov
pop
movs
sbb
pop
jo
icebp
pusha
arpl
bound
and
cld
pusha
je
sbb
mov
(bad)
xlat
jp
cmp
int3
test
adc
(bad)
test
sbb
push
inc
scas
iret
neg
imul
stc
xor
pop
enter
repnz
out
mov
pop
neg
or
add
mov
xchg
mov
push
mov
fcomi
fisub
sbb
or
mov
mov
cmp
sbb
dec
mov
pop
mov
push
pop
lock
aam
pop
nop
jl
mov
jb
sbb
push
mov
sub
xor
gs
add
sar
rcr
popa
pop
vhaddps
leave
inc
inc
aad
mov
out
jmp
neg
rcl
pusha
adc
je
or
or
retf
stos
ret
add
push
iret
dec
dec
fnstcw
loopne
out
inc
lods
push
adc
scas
jge
fwait
cmp
pop
push
mov
sbb
ret
lods
sbb
dec
push
jmp
sub
push
mov
jge
in
test
rol
lahf
cld
inc
fistp
icebp
jmp
sbb
xchg
inc
mov
sub
outs
and
popf
popa
(bad)
mov
jg
adc
sar
inc
scas
es
and
mov
or
into
mov
call
es
out
push
cmp
(bad)
pushf
mov
pusha
popf
cmp
mov
shl
cmp
add
xor
push
jne
mov
leave
retf
dec
cmp
mov
sbb
sbb
sahf
adc
xchg
inc
push
jl
add
ret
pop
jmp
jle
gs
repz
ds
add
arpl
test
out
(bad)
sbb
ja
out
(bad)
jle
jp
outs
cli
jg
jp
cmp
xchg
ds
rol
cmp
add
fwait
(bad)
out
sub
push
xor
jbe
xchg
mov
(bad)
fld
pop
hlt
sbb
jecxz
jo
es
(bad)
call
outs
cmp
jne
xchg
xor
jecxz
xchg
mov
jp
je
pop
adc
sub
enter
or
adc
xchg
pusha
pop
push
mov
movs
imul
pushf
xchg
dec
out
push
push
mov
sti
outs
jae
stos
iret
ss
mov
test
xchg
and
sbb
iret
mov
neg
xor
adc
push
in
dec
(bad)
adc
pusha
imul
stos
iret
mov
stos
dec
pushf
and
and
ins
arpl
cdq
xchg
into
cmp
pop
call
aaa
pop
popf
dec
icebp
or
cmp
pop
(bad)
repz
rcl
adc
addr16
mov
push
ins
loope
push
mov
mov
and
scas
and
mov
pushf
loope
jne
and
ins
mov
pop
xchg
je
aam
push
sub
das
in
das
fimul
je
jmp
fwait
call
push
iret
das
in
das
mov
fisubr
mov
fstp
pop
mov
enter
fnstsw
inc
call
cmp
(bad)
adc
xor
cmc
out
cs
scas
es
loopne
pop
jmp
mov
aad
(bad)
loope
inc
dec
jae
movs
fs
les
mov
cmp
mov
sbb
mov
cmc
fiadd
(bad)
scas
sbb
xchg
cmp
jmp
mov
inc
xchg
jle
xchg
je
das
outs
lods
dec
and
pop
or
mov
(bad)
mov
fdiv
xchg
adc
inc
mov
retf
call
sub
xchg
adc
jb
mov
mov
or
nop
and
fiadd
sahf
dec
jecxz
push
retf
xchg
ss
inc
int
cld
mov
cmp
outs
lods
sbb
daa
push
scas
push
xchg
sar
add
pop
dec
out
rcr
sbb
pop
and
call
bound
daa
ins
ss
in
mov
cmp
mov
sub
les
mov
cmps
or
nop
push
xor
add
mov
xor
push
repnz
cmp
(bad)
xchg
or
inc
adc
sbb
mov
inc
bound
movs
pushf
inc
addr16
mov
cmp
jns
add
and
pop
mov
mov
test
addr16
ret
out
xchg
sahf
arpl
(bad)
lock
stos
adc
cwde
cmp
setl
xchg
sti
test
pop
jae
push
inc
and
(bad)
jno
xchg
pop
pop
pop
xor
mov
xor
pop
push
mov
shl
ins
dec
push
push
leave
dec
jl
(bad)
push
mov
repz
test
push
dec
and
test
mov
hlt
dec
dec
inc
scas
stos
mov
cwde
daa
push
sbb
sub
adc
neg
(bad)
add
inc
nop
pop
leave
jbe
xor
jle
xchg
pop
mov
dec
sbb
sbb
cmps
mov
xchg
and
test
jbe
dec
ficom
js
fimul
xchg
pop
ins
mov
mov
sub
(bad)
imul
nop
rcl
cmp
lock
lods
sbb
jl
inc
aaa
std
push
mov
mov
mov
fisubr
mov
in
retf
daa
mov
push
sub
loope
lods
jmp
inc
sub
mov
adc
cmp
inc
scas
bound
les
loop
dec
dec
stc
outs
pop
retf
dec
mov
in
jb
jnp
xor
cmp
mov
xor
repz
jns
je
sbb
jmp
lock
mov
aad
mov
push
clc
dec
pop
jo
dec
loop
aas
aam
add
xchg
pop
cdq
int3
lea
add
ret
retf
pop
psraw
sar
cmp
fstp
pop
xchg
mov
jmp
cld
stc
jmp
xor
retf
icebp
mov
inc
pop
jecxz
stos
pop
sub
cld
add
xchg
(bad)
enter
jns
movs
sar
nop
push
and
outs
sub
out
xor
jne
sti
xor
inc
leave
adc
pop
out
nop
add
retf
vpsubsb
loop
xor
hlt
mov
mov
les
fwait
sub
push
sub
out
repnz
jne
jns
(bad)
out
lods
repz
dec
shl
std
adc
mov
add
gs
cmp
and
call
mov
cld
cld
punpcklwd
sar
(bad)
push
popf
aad
(bad)
xchg
scas
mov
pop
call
mov
rol
rcr
sar
sub
rcr
dec
inc
mov
popf
cli
stos
in
push
call
fcom
int
aad
fnstcw
imul
test
xor
cmp
mov
movs
fld
movs
inc
into
jns
jne
not
ins
fidiv
out
inc
sub
call
push
arpl
or
imul
pusha
dec
jnp
(bad)
out
mov
lahf
xor
or
pop
sbb
inc
or
das
loope
mov
call
mov
in
lods
stos
aam
lods
lahf
jbe
data16
ss
jg
jge
call
pop
xor
ret
retf
mov
out
cmp
je
xchg
dec
push
mov
lock
arpl
loope
mul
repnz
nop
lods
in
aam
xor
dec
cmp
or
ja
movs
loop
push
and
dec
jecxz
stos
and
xor
retf
leave
lea
lock
cli
adc
fild
cmc
sub
cwde
pusha
ins
or
xchg
ret
test
ss
(bad)
push
int3
int
inc
int
test
mov
call
inc
lods
cs
(bad)
xchg
mov
pop
or
mov
scas
inc
xchg
mov
adc
pusha
stos
(bad)
push
xor
sbb
je
push
cmp
aas
mov
loop
test
in
ds
mov
ja
jmp
ja
sbb
mov
mov
icebp
mov
push
ins
sbb
stos
jecxz
lahf
jmp
or
mov
pop
cdq
jl
mov
ret
loope
mov
adc
adc
jl
push
test
cmp
and
popf
adc
test
test
mov
adc
pop
in
mov
cmp
mov
xchg
or
jae
fmul
cmp
xor
fsubr
stc
daa
inc
xchg
inc
adc
mov
or
cmp
push
pop
int
scas
pop
clc
jle
ret
and
mov
rcr
les
dec
add
push
jge
jge
lea
push
jo
test
outs
push
repz
aam
int
shl
mov
imul
mov
sti
cld
aad
mov
mov
or
add
loop
das
cmp
jo
sbb
push
cmp
int
scas
pop
jmp
dec
arpl
pop
xor
sbb
in
or
dec
aad
in
lock
push
xchg
in
dec
imul
and
dec
(bad)
jae
in
int
in
jo
cmp
test
std
(bad)
dec
mov
hlt
pop
retf
xchg
sbb
or
int3
rol
popa
pop
mov
lock
std
jae
xchg
aas
mov
xor
mov
dec
and
mov
and
xchg
push
mov
sub
das
cmps
inc
mov
mov
jmp
cmps
mov
sahf
daa
inc
xor
xchg
imul
out
pop
out
add
mov
and
mov
in
daa
add
add
(bad)
and
inc
aad
cs
cmp
(bad)
xlat
or
in
or
popf
sbb
pop
movs
retf
popa
mov
dec
cmp
ficomp
popf
pop
cwde
xchg
repz
sbb
sbb
cmp
popa
dec
pop
xor
mov
mov
inc
rol
xchg
mov
and
or
mov
(bad)
dec
mov
jp
pop
clc
ins
inc
push
and
pusha
out
and
std
mov
mov
sbb
shr
pushf
call
imul
lea
cmps
pusha
scas
sbb
xor
leave
lea
mov
jae
daa
jg
pusha
(bad)
mov
hlt
push
rcl
jl
nop
daa
popa
add
push
call
inc
mov
cmp
(bad)
sbb
mov
and
jle
and
dec
loopne
and
and
ins
dec
ffreep
cdq
mov
fisttp
dec
or
xchg
dec
pop
mov
jnp
inc
sar
push
inc
out
dec
push
fdivr
lea
add
ss
pop
in
adc
sub
out
jle
xlat
pop
sbb
dec
out
loop
cmp
imul
or
mov
popa
pop
push
dec
jae
rol
jnp
dec
push
in
mov
push
xor
add
add
dec
push
(bad)
mov
pop
ss
cmp
jb
mov
nop
add
jne
xor
enter
or
out
mov
jge
aam
test
lods
or
jg
add
rcl
nop
imul
jne
int3
shl
mov
sbb
arpl
xor
adc
xchg
mov
mov
lds
ins
push
inc
and
outs
icebp
ret
popf
arpl
sub
jmp
pop
push
scas
out
(bad)
mov
ret
into
sub
call
jnp
mov
mov
pop
xchg
and
jl
in
xor
sbb
push
movs
(bad)
xlat
(bad)
mov
inc
out
push
jg
clc
jae
cmp
jp
mov
xchg
fdiv
push
xlat
cmps
mov
loop
pop
jb
mov
arpl
in
xor
inc
push
inc
jecxz
cmps
dec
cmp
aas
ja
ret
rol
cmp
add
cmp
ror
(bad)
inc
(bad)
jmp
es
sahf
pop
lods
mov
mov
fst
call
dec
repnz
sub
dec
add
pop
mov
pop
cmps
fbld
in
dec
iret
lock
repz
in
adc
and
cmp
test
add
std
or
push
sbb
cmps
test
dec
mov
adc
sar
cmc
and
xor
dec
pop
loop
(bad)
jns
xor
fcom
sbb
mov
lods
test
(bad)
cdq
fwait
add
cmp
hlt
push
dec
sbb
pushf
lea
cmp
in
push
xchg
mov
repnz
push
xor
stos
(bad)
and
mov
push
push
js
fcomip
jb
cdq
int3
jnp
stos
mov
add
icebp
dec
mov
mov
xor
add
aaa
(bad)
lea
jnp
add
xor
cmp
stos
sbb
mov
ds
repnz
repnz
push
bound
jno
mov
pusha
and
push
sbb
lahf
adc
sub
loopne
jmp
mov
out
pop
test
and
sub
jl
cdq
shr
cmp
inc
adc
adc
xchg
jb
in
fucomip
fdiv
adc
fadd
mov
arpl
push
ins
ficom
test
ds
or
dec
shr
call
push
stos
enter
xor
and
mov
mov
mov
aaa
not
fist
fisub
push
cmp
dec
xchg
scas
cmp
lods
pop
xchg
das
cmps
push
sbb
test
aad
jle
lahf
sub
or
int
xor
jo
into
push
sub
mov
cmps
mov
cs
ins
aad
jecxz
out
cwde
mov
sahf
shl
push
jmp
pop
arpl
inc
movs
adc
ror
and
lahf
test
jne
inc
mov
xchg
or
dec
dec
iret
enter
mov
popa
dec
jnp
or
mov
xor
xchg
lea
repnz
outs
jle
pushf
sbb
test
enter
adc
sbb
les
jns
sti
pop
iret
and
jg
retf
xor
and
dec
loop
mov
push
and
ja
and
push
cmps
in
int
inc
and
nop
cli
cmp
bound
call
sar
xor
loopne
cmp
and
clc
mov
mov
cmps
pop
or
call
adc
mov
push
mov
mov
mov
(bad)
push
out
imul
xor
std
xchg
xchg
cmps
or
clc
lock
jg
into
imul
mov
jle
inc
and
push
jae
imul
adc
retf
mov
xchg
pop
jp
daa
mov
dec
jmp
sbb
add
bound
fcom
pop
test
cmp
ja
test
push
mov
aas
mov
add
stos
inc
fwait
jle
push
test
dec
nop
sbb
lahf
fwait
sub
adc
dec
xchg
aaa
xor
mov
pop
sub
(bad)
add
jmp
(bad)
loope
dec
les
pushf
repnz
mov
outs
pop
jne
mov
add
rol
mov
dec
popf
and
int3
xchg
movs
push
test
loopne
add
aas
push
cmp
dec
fimul
fild
sbb
mov
jl
hlt
jne
fisubr
jmp
cmp
aam
xor
dec
test
fdivp
dec
inc
into
in
cdq
sub
jg
dec
dec
xor
fiadd
inc
(bad)
nop
push
retf
adc
jnp
imul
clc
or
pop
mov
lahf
pop
xchg
and
cmps
sbb
nop
and
adc
(bad)
out
mov
mul
jno
nop
xor
add
cmp
xchg
mov
pop
test
mov
sbb
icebp
lock
outs
xchg
xlat
sub
lods
daa
test
ins
mov
stos
cmp
cmc
clc
cmps
jl
movs
(bad)
std
jg
pop
js
lods
pop
xchg
jmp
pop
push
mov
test
jne
cmp
popf
call
repnz
ror
mov
(bad)
mov
xchg
repnz
cwde
cmp
mov
or
sub
hlt
or
push
test
lds
(bad)
mov
mov
imul
in
xchg
test
shl
ret
dec
dec
ret
call
jne
push
sub
and
cs
les
aad
ss
in
sbb
xchg
or
jae
(bad)
mov
lods
push
imul
sub
das
addr16
xchg
inc
out
fimul
xor
daa
adc
sub
retf
out
div
jb
je
dec
sbb
hlt
icebp
aaa
(bad)
sub
xor
pop
jl
sbb
mov
jo
fimul
sti
push
mov
pop
jl
xchg
repnz
xor
cmp
or
add
inc
cld
stos
jl
inc
jecxz
js
(bad)
mov
ret
push
imul
pop
ja
test
xor
push
mov
repz
js
call
inc
pop
pusha
inc
jo
aad
icebp
ret
pop
mov
iret
sbb
xor
and
adc
mov
cmp
inc
(bad)
ja
and
sti
pop
dec
add
imul
ins
mov
mov
aaa
std
ror
and
div
ret
movs
das
(bad)
ins
inc
adc
icebp
out
jmp
rol
fsubr
outs
inc
into
push
inc
pop
mov
add
sbb
lds
jg
in
mov
sub
mov
icebp
sub
test
stc
outs
pop
fcomi
scas
iret
ja
adc
clc
imul
retf
add
cmc
dec
mov
jnp
outs
push
jg
(bad)
pop
imul
sbb
fdiv
in
mov
push
xchg
test
dec
outs
std
stos
add
pop
imul
ins
mov
pop
not
mov
adc
sar
cli
pop
retf
dec
pop
(bad)
js
in
cld
mov
sahf
lock
jns
inc
inc
inc
or
ror
fnstcw
jne
pop
add
call
pop
push
push
arpl
add
ss
or
loop
inc
inc
cdq
jl
cmp
fwait
cmc
mov
pop
jp
(bad)
fnstsw
jb
sahf
inc
xor
imul
mov
bound
inc
pop
pop
ja
cwde
(bad)
lea
pop
sbb
mov
push
mov
adc
jae
xchg
dec
sub
pop
je
(bad)
es
sbb
repnz
mov
fimul
cmp
mov
mov
sti
repz
out
ss
idiv
sub
lods
xchg
(bad)
mul
cmps
mov
cmp
mov
pop
imul
and
mov
pop
dec
out
ins
lahf
int
inc
ja
adc
adc
xchg
pop
mov
inc
daa
in
scas
pop
xlat
jmp
ret
(bad)
cmp
faddp
mov
mov
xchg
fs
test
add
mov
mov
cmp
xor
inc
clc
mov
in
jl
outs
aaa
int
mov
or
fidiv
add
push
dec
cmp
call
iret
(bad)
xchg
sbb
mov
fcmovbe
sbb
jle
in
bound
call
xor
pop
cmp
push
pushf
lods
inc
mov
inc
popf
dec
cmp
sbb
ds
mov
and
pmovmskb
std
pop
bound
aad
and
sub
mov
pusha
cmp
pusha
or
jmp
dec
test
ror
or
push
idiv
and
cmp
or
pop
jecxz
jecxz
lea
iret
inc
push
js
pop
add
adc
jmp
and
bnd
sbb
cli
push
or
mov
repz
sub
scas
lods
(bad)
jl
add
or
pop
add
cli
mov
lods
mov
stc
jmp
outs
jae
push
dec
test
stos
xchg
or
dec
stos
in
fs
ret
data16
add
add
adc
jno
pop
xor
bound
sbb
gs
imul
in
mov
jmp
xchg
mov
xor
xchg
addr16
(bad)
cmp
stos
fisub
out
sub
inc
cmc
(bad)
fbstp
push
daa
test
jae
arpl
mov
push
sub
outs
arpl
push
mov
in
rol
pop
xor
pop
sub
add
aam
out
or
shl
push
add
xlat
jecxz
xor
fmul
add
rcl
(bad)
mov
inc
aad
pusha
cli
ins
xor
and
bound
outs
aaa
adc
in
or
out
sbb
lahf
xchg
aad
adc
repnz
push
test
or
xchg
loopne
dec
pop
xchg
or
ds
bound
cmc
aas
mov
jecxz
and
add
jle
aam
sbb
add
and
xor
xchg
mov
add
scas
outs
pop
mov
mov
lds
inc
cli
das
mov
pop
jmp
sbb
adc
adc
js
sti
adc
loope
push
dec
mov
add
ror
call
jno
das
mov
inc
push
dec
popf
inc
(bad)
lahf
mov
movs
sbb
in
inc
test
or
(bad)
repnz
inc
mov
xchg
jl
retf
cdq
retf
jbe
mov
cmp
xor
sub
dec
retf
pop
aaa
jnp
dec
shr
mov
test
push
mov
fld
fcomp
add
or
movs
xchg
lea
mov
mov
push
inc
sub
mov
stos
mov
lock
dec
jnp
sub
sahf
jmp
pop
adc
(bad)
int
leave
leave
repnz
das
pop
sub
mov
ret
fidivr
and
mov
pop
scas
push
(bad)
pop
push
or
retf
pusha
inc
test
sub
retf
sahf
loope
sub
push
loop
cmps
dec
stos
retf
std
mov
sub
test
in
jae
imul
rcr
pop
int
mov
add
add
push
inc
inc
rcr
aas
test
enter
icebp
jo
aas
sti
bound
pop
mov
jb
cmp
das
vpsubusw
add
ds
mov
jecxz
pop
in
call
retf
xchg
leave
lock
jecxz
xor
fmul
lahf
shr
cmp
cmp
xchg
shr
fsubr
mov
inc
push
popa
jne
push
jge
and
adc
push
cmc
mov
mov
add
jecxz
out
movs
rol
jecxz
ins
adc
and
scas
and
add
aam
adc
jmp
jno
jmp
jbe
and
adc
push
mov
mov
std
jae
ja
pop
sbb
sub
and
jns
cmp
jl
into
adc
push
mov
lods
xor
cmp
sbb
mov
add
sti
fucomp
test
jmp
pop
imul
dec
lea
push
mov
pop
clc
adc
xchg
cmps
mov
jbe
pushf
mov
iret
jl
xor
xchg
mov
cmp
(bad)
data16
icebp
jae
fistp
nop
push
dec
adc
hlt
inc
mov
(bad)
fbld
aas
ss
mov
mov
frstor
fwait
mov
jmp
adc
cmp
lahf
mov
adc
movs
js
movs
mov
xor
arpl
cs
push
mov
lods
mov
jns
icebp
xchg
pop
mov
fs
mov
pop
lock
icebp
sahf
out
je
ficom
dec
jmp
int3
les
int
in
stos
dec
cmp
popa
(bad)
(bad)
push
test
imul
sub
jecxz
jbe
push
or
call
sbb
jmp
push
xor
nop
mov
aas
arpl
nop
pop
cld
xor
fiadd
adc
std
out
or
fsub
jb
sub
aas
dec
mov
and
cmp
lahf
cmp
nop
pop
mov
inc
pop
pop
popf
int3
pushf
jno
xchg
jne
mov
popa
cmp
dec
shl
hlt
inc
loop
loope
xor
add
xchg
push
dec
cmp
gs
mov
std
call
jge
outs
adc
push
jmp
out
add
and
lock
ins
dec
add
jo
adc
jae
imul
js
inc
xchg
(bad)
mov
mov
jle
adc
xor
aam
push
pop
imul
pusha
sub
jecxz
and
(bad)
int3
shl
je
lock
aad
xchg
xor
xor
cdq
lds
rcl
jle
xor
fstp
psubusb
ja
aaa
addr16
je
mov
add
adc
dec
pop
sbb
das
cmp
test
pop
cmp
inc
jle
out
int3
popf
scas
pop
mov
pop
sar
xor
cld
stos
fsub
dec
rol
pop
cmp
mov
xor
mov
fld
sar
inc
cmps
inc
mov
mov
dec
mov
ret
add
loop
inc
int
push
iret
dec
shl
jne
adc
ret
adc
popf
mov
je
dec
(bad)
or
fdivr
jecxz
add
pop
xchg
sub
out
loopne
xor
stc
jmp
rcl
imul
xchg
xor
mov
jns
(bad)
gs
ss
mov
add
pop
ins
or
jb
sbb
movs
jbe
mov
dec
data16
jne
es
add
stos
dec
inc
mov
inc
sub
pop
mov
cmps
mov
setno
fcmovne
mov
stc
addr16
mov
xchg
pop
mov
xor
mov
fld
inc
mov
into
xchg
adc
adc
into
mov
mov
out
jno
xor
sahf
cmc
pusha
push
mov
jge
fs
mov
call
std
cmc
push
xchg
test
xor
(bad)
mov
ins
test
xchg
loope
sub
sub
or
(bad)
fst
ret
(bad)
xchg
pop
popa
aam
mov
int
pushf
and
and
add
enter
in
xchg
xchg
sub
mov
adc
imul
xor
addr16
and
and
push
pop
xor
push
jecxz
sbb
jnp
sub
jmp
mov
mov
gs
mov
dec
les
stos
repz
stc
loopne
xchg
pop
outs
pop
cmp
(bad)
sbb
pop
xchg
repz
in
int
clc
add
adc
in
jae
sahf
adc
inc
cmp
in
push
jl
shr
jnp
sub
mov
js
loopne
and
rol
mov
mov
and
js
inc
add
pushf
mov
or
jae
add
fnstsw
ja
xchg
clc
mov
ins
push
add
mov
add
movs
ror
or
hlt
push
mov
sahf
push
pop
stc
sti
(bad)
jbe
aad
pop
mov
ficom
inc
js
jmp
(bad)
jl
jge
fsub
mov
wrmsr
pusha
cmp
stos
push
daa
std
xchg
xchg
mov
pop
add
aaa
xor
xor
inc
test
jecxz
xchg
xchg
jae
jle
rol
pop
(bad)
jg
jmp
sub
cmc
sahf
iret
ss
xchg
in
xchg
scas
jmp
dec
mov
popa
sub
mov
hlt
adc
dec
out
hlt
push
loop
imul
push
sbb
aas
add
and
and
daa
inc
shl
call
sub
mov
test
into
repnz
std
outs
jmp
sub
paddw
je
xor
retf
and
and
fiadd
inc
xor
xor
push
(bad)
push
retf
lods
mov
push
fnstcw
mov
jp
xor
dec
sbb
dec
repnz
add
jb
dec
jmp
jae
inc
and
daa
(bad)
sar
inc
cmps
lock
(bad)
repz
or
sar
push
jb
pop
ds
push
cmp
imul
lods
mov
sub
add
pop
popa
jns
(bad)
push
or
lds
adc
or
jnp
mov
repnz
int
mov
std
mov
sahf
je
int
test
lods
les
jnp
push
cmps
inc
pusha
mov
xchg
mov
es
xchg
outs
(bad)
call
adc
nop
lods
leave
out
into
xchg
in
repnz
or
and
(bad)
add
leave
test
bound
mov
pop
movs
push
mov
pop
call
loop
bound
jecxz
mov
cmp
(bad)
scas
es
pop
mov
push
dec
push
xchg
es
fidiv
test
mov
(bad)
rcl
leave
(bad)
mov
push
cld
xor
push
xchg
sub
or
push
jmp
or
inc
scas
gs
scas
fldlg2
mov
dec
mov
adc
(bad)
fmul
call
xchg
leave
imul
mov
add
mov
dec
out
clc
call
adc
pop
retf
dec
pop
xor
jno
mov
outs
retf
rcl
adc
ja
xchg
js
ss
lods
dec
popf
add
mov
or
mov
dec
repnz
inc
inc
dec
mov
and
mov
stos
fsubr
and
inc
jp
sahf
fadd
push
pop
pusha
cmp
leave
xor
scas
(bad)
dec
leave
imul
imul
in
dec
bound
jo
inc
imul
dec
out
rcl
icebp
rcl
es
or
and
inc
sbb
sahf
jo
out
fs
jecxz
out
mov
(bad)
sbb
sahf
push
pusha
or
hlt
lock
add
in
inc
es
movs
(bad)
mov
jo
cmps
mov
out
mov
push
jbe
sbb
add
mov
bound
daa
push
add
cld
call
push
cdq
pusha
push
mov
lock
add
sti
xchg
and
outs
outs
push
jmp
lods
bndstx
mov
dec
retf
call
mov
cmp
loop
frstor
sub
rcr
cmps
retf
into
mov
pusha
mov
cmp
or
sub
jg
pop
pop
and
aam
rol
enter
sub
arpl
(bad)
fist
aam
adc
sub
(bad)
js
pop
mov
xchg
push
adc
in
(bad)
fmul
push
add
adc
jns
mov
sbb
js
into
jge
sbb
(bad)
fwait
mov
push
fs
jo
imul
sub
ficom
scas
or
mov
dec
push
or
xchg
cmp
or
daa
sub
enter
add
mov
add
xchg
aas
push
movs
imul
js
icebp
mov
add
add
sahf
cmp
jbe
xor
cmp
(bad)
mov
mov
xlat
rcl
std
mov
xor
mov
les
xor
int
mov
les
fistp
mov
loop
lea
jmp
jle
sub
push
push
pop
(bad)
mov
add
iret
outs
pop
mov
push
scas
mov
clc
cdq
call
mov
cdq
cmp
test
pop
imul
and
dec
lahf
xchg
push
icebp
pop
mov
inc
inc
lea
sub
pushf
xlat
imul
cdq
dec
xchg
sub
out
loop
adc
in
ret
fistp
(bad)
popf
pop
dec
mov
popf
xlat
fucomip
mov
xchg
pop
pop
sub
xor
mov
adc
dec
int3
(bad)
jae
adc
add
inc
rcr
or
or
loopne
gs
fisttp
xchg
dec
and
cmp
idiv
aaa
rcr
mov
jmp
adc
adc
cmp
les
mov
repnz
fs
ss
mov
imul
mov
inc
lock
xchg
test
jmp
leave
out
cld
mov
repz
sti
addr16
mov
outs
or
pusha
into
sub
data16
ret
test
cmps
in
jae
or
push
inc
pop
jne
cmp
cmp
cmps
shl
lods
mov
or
adc
(bad)
fimul
imul
jge
xchg
cmp
imul
aam
adc
sbb
pop
push
call
arpl
dec
jl
retf
or
movs
adc
sub
loop
and
gs
sub
mov
jns
fimul
mov
popa
xor
fs
sub
shr
add
cdq
out
push
fstp
ret
sar
mov
mov
add
xor
add
test
loope
adc
mov
pop
mov
mov
sbb
and
out
out
xor
and
pusha
inc
xchg
inc
jb
mov
xchg
xor
and
ja
jg
cli
ja
adc
call
xor
jge
pop
retf
retf
sar
sbb
test
pop
cli
movs
frstor
fmul
adc
jecxz
pop
mov
sti
pusha
(bad)
mov
jmp
xchg
rcr
sbb
add
or
stos
out
sbb
adc
es
sbb
mov
test
nop
sub
mov
and
and
(bad)
jnp
js
enter
out
movs
adc
jg
cs
or
push
jge
dec
fld1
ficom
movs
mov
mov
pop
push
mov
sbb
enter
cmps
ret
xor
mov
cmps
es
pop
or
nop
mov
js
outs
gs
mov
out
pop
push
pop
mov
cmc
jle
bswap
fwait
(bad)
(bad)
ja
cs
mov
mov
in
inc
fcomp
loope
fucom
ins
cwde
icebp
xchg
inc
test
push
cwde
ins
add
enter
or
mov
sbb
and
pop
pop
lds
jge
and
push
xchg
add
mov
shr
not
shl
push
icebp
call
rcl
mov
call
cmp
mov
push
jmp
(bad)
scas
inc
xchg
mov
pushf
aaa
sbb
sbb
pop
lea
not
(bad)
push
cmp
popf
stos
cwde
popf
sbb
imul
std
xchg
push
(bad)
mov
add
jns
jg
jl
mov
mov
jno
jle
out
inc
es
push
jg
aad
dec
xchg
push
hlt
cmps
inc
cmp
neg
ins
rcl
push
in
cmc
xor
pop
add
dec
pop
ss
jbe
dec
arpl
xor
fisttp
fsubr
dec
es
push
loopne
leave
sub
mov
ss
dec
cli
pop
mul
ds
xchg
mov
adc
ja
aaa
xor
loop
cld
test
xlat
adc
fnstenv
ja
mov
xchg
xchg
shl
inc
add
xor
popa
in
dec
pop
cmps
repz
test
js
lahf
inc
mov
lea
(bad)
sti
clc
jae
ss
cmp
mov
and
xchg
xchg
push
push
adc
scas
pop
jecxz
pop
mov
leave
clc
push
cmp
cmps
into
rcl
(bad)
sbb
hlt
imul
(bad)
cli
add
pop
pop
pop
out
xor
cmp
in
jp
fs
int3
push
xor
jno
push
sbb
lock
lds
xlat
dec
pop
(bad)
(bad)
mov
retf
in
inc
cld
imul
mov
mov
(bad)
xlat
test
sbb
mov
stc
inc
outs
xchg
dec
pushf
cmp
cdq
in
xchg
jbe
adc
sbb
lock
dec
pcmpgtb
in
jns
mov
in
jbe
dec
mov
xchg
adc
movs
out
cli
shr
mov
outs
loop
movs
mov
cld
cmp
push
in
outs
cdq
scas
outs
fcomp
jmp
sub
push
jne
jae
int
or
add
xchg
xchg
jecxz
dec
ror
push
loope
mov
inc
push
add
mov
jmp
jecxz
inc
cmp
push
jmp
jno
jecxz
push
push
outs
call
push
and
ror
adc
mov
daa
lods
ss
pop
dec
outs
ds
add
xchg
mov
dec
xor
xchg
pop
push
leave
scas
addr16
pop
icebp
gs
add
pop
js
ret
mov
in
mov
or
jno
mov
gs
add
outs
(bad)
jmp
ror
mov
jle
xor
sar
pop
arpl
cmp
mov
xchg
sbb
or
neg
inc
inc
test
xchg
lea
pop
xchg
inc
in
retf
push
in
lods
push
xchg
dec
xchg
cwde
pop
int3
stc
push
and
scas
sbb
bound
sbb
jmp
stos
or
inc
sub
in
pop
adc
hlt
xchg
jg
jmp
jb
std
out
lods
(bad)
jae
fadd
js
(bad)
fld
es
pop
cmp
pop
je
sahf
fadd
cli
inc
and
sbb
sub
cmc
xchg
dec
push
xor
test
popf
test
int3
popa
mov
inc
icebp
or
movs
or
push
iret
(bad)
in
lahf
cli
mov
mov
fs
pop
or
repz
leave
mov
mov
jbe
push
std
inc
mov
pop
inc
sbb
adc
aad
pop
fstp
push
inc
in
jmp
mov
aad
pop
mov
mov
(bad)
pop
in
adc
push
out
addr16
pop
xchg
lahf
out
xchg
ud0
xor
mov
or
xor
adc
out
xor
xor
mov
and
movs
push
ret
(bad)
mov
jb
xchg
lods
adc
mov
mov
hlt
frstor
call
pop
push
test
sbb
or
pop
call
xchg
push
mov
mov
cdq
mov
jnp
jle
pop
jecxz
cmp
pop
jnp
test
lahf
addr16
scas
cmp
int
add
add
cmp
test
or
or
pop
sub
xchg
loope
cs
mov
inc
inc
cs
aaa
jb
cmp
mov
sbb
sbb
adc
lods
adc
sar
jae
cmc
lds
cdq
ds
sbb
xchg
sub
(bad)
xlat
fild
sbb
mov
mov
stos
add
pop
or
(bad)
mov
mov
inc
push
cmp
ins
push
inc
int
(bad)
xchg
xor
les
shr
outs
or
xchg
mov
repnz
sar
push
pop
mov
jmp
sahf
cwde
inc
arpl
cmp
or
add
mov
sbb
aas
pop
pop
(bad)
pop
pop
mov
push
int3
and
or
and
popa
shl
xchg
cmp
mov
dec
test
add
ret
xchg
or
cmps
lock
push
adc
push
xchg
cmp
mov
cwde
pop
xchg
add
xor
sub
retf
ja
sbb
imul
jns
sbb
mov
leave
dec
movs
nop
jbe
pop
pop
or
inc
pop
sbb
sbb
inc
call
push
int3
fs
scas
mov
jg
lods
fld
mov
jle
add
hlt
add
ins
inc
cmps
mov
mov
loopne
rsqrtps
xor
jbe
push
in
jge
out
xor
xor
mov
iret
pop
sar
(bad)
sbb
pop
cmp
and
scas
adc
icebp
sub
xchg
push
(bad)
cmp
inc
xlat
pop
icebp
add
repz
pop
pop
cmc
add
mov
push
in
add
adc
retf
jge
pop
or
xchg
(bad)
imul
fimul
lods
mov
das
and
stc
push
and
out
and
retf
cmp
dec
in
push
fwait
stos
fsub
imul
inc
imul
aam
xchg
and
in
dec
jbe
mul
add
mov
inc
ja
in
dec
jge
inc
lahf
mov
xlat
aad
inc
add
aaa
and
in
movs
dec
sub
dec
dec
push
add
shr
cdq
ds
(bad)
fwait
movs
mov
mov
pop
jp
loop
xor
lods
push
stos
popa
jb
sub
cmps
xor
movs
lea
cmp
xchg
mov
sar
daa
cmp
xchg
les
stos
dec
fwait
test
inc
fld
into
jle
pop
mov
(bad)
cmp
add
mov
cmp
fdivr
jg
out
mov
add
hlt
imul
cmc
jp
xchg
mov
mov
mov
mov
sbb
lods
jge
(bad)
aad
jno
into
lods
dec
sub
clc
ret
mov
add
mov
js
inc
jle
cmps
jo
fmul
fild
cmp
and
mov
in
rcr
or
bound
mov
jmp
inc
mov
inc
push
enter
lods
not
inc
adc
inc
push
or
pop
jmp
neg
cmp
inc
call
jmp
fsub
cmp
mov
retf
int3
call
mov
out
pop
int3
add
movs
adc
adc
fidivr
ins
sahf
sbb
(bad)
jge
xchg
pushf
mov
dec
mov
mov
pusha
ficom
(bad)
sbb
fincstp
dec
popa
mov
scas
fcmovnbe
inc
out
add
ret
or
mov
lea
dec
adc
adc
ror
test
mov
xor
das
out
pop
adc
push
repz
push
call
push
sti
pushf
in
movs
add
xor
mov
mov
lods
out
mov
imul
outs
mov
lods
mov
aaa
repz
cmps
ret
cmp
and
hlt
ret
add
mov
push
imul
repz
(bad)
mov
lock
sahf
mov
dec
ins
mov
push
adc
fadd
and
jg
popa
repnz
cs
ret
jo
mov
icebp
leave
add
repz
push
jmp
bound
daa
xchg
or
cmp
or
xchg
dec
cmps
mov
enter
sub
call
int3
or
cwde
out
jae
sbb
mov
sub
sub
repz
inc
cmp
pushf
inc
mov
pop
mov
icebp
repnz
xor
iret
cmp
stc
xchg
icebp
pop
adc
loopne
xchg
fwait
add
dec
pop
(bad)
pushf
and
ins
sti
loopne
(bad)
int
cs
dec
adc
sub
mov
mov
sub
mov
jno
fs
jno
push
or
push
iret
mov
adc
dec
inc
cmp
or
pop
adc
add
adc
ret
inc
ds
mov
das
xor
in
dec
cmp
push
movs
stos
lea
nop
fnstenv
push
ins
lea
in
or
jbe
and
enter
inc
icebp
ret
das
push
xor
mov
jb
xlat
stos
sbb
jge
mov
std
mov
sbb
mov
mov
pop
fsubr
push
inc
rol
pop
stos
and
add
(bad)
mov
cwde
or
ffree
inc
mov
jl
mov
(bad)
mov
mov
sbb
pop
lahf
hlt
in
sbb
cmps
adc
push
push
bound
jp
add
xchg
add
std
and
int
fldl2e
pop
jno
xlat
es
sbb
inc
and
adc
lods
push
imul
jbe
adc
pop
mov
bound
lods
out
jmp
int
shl
(bad)
jmp
pop
iret
(bad)
sbb
mov
mov
push
gs
test
lods
fsubr
dec
mov
add
pushf
rcl
push
xor
dec
rcr
repnz
stc
sbb
cmps
addr16
aad
xor
sub
scas
mov
cmps
inc
mov
xchg
mov
dec
mov
inc
js
jge
jae
push
(bad)
push
adc
mov
loopne
jmp
aad
inc
push
xchg
lods
add
rcr
ret
outs
inc
dec
ffreep
inc
ds
or
dec
ins
sbb
sbb
and
out
jg
pop
jl
lock
test
dec
jle
push
(bad)
sahf
imul
sbb
push
shr
imul
int
adc
sbb
pushf
xchg
fcmovnb
jmp
mov
or
je
mov
push
test
(bad)
mov
sti
int
ror
retf
jmp
in
jbe
mov
test
pop
xchg
jb
daa
pop
movs
mov
imul
fcomip
out
iret
in
cmp
gs
lahf
ja
sub
retf
cmp
je
call
sbb
jne
pop
ret
pop
xchg
push
loopne
or
rol
xor
dec
mov
mov
call
inc
daa
dec
fnstenv
call
sub
sar
ja
loopne
arpl
push
movs
inc
xchg
dec
mov
cmp
or
ficomp
(bad)
int3
ins
pop
cmp
sti
dec
and
push
sti
pushf
test
or
or
dec
mov
mov
lahf
fcomp
je
pop
mov
js
into
add
imul
push
pusha
adc
add
sbb
test
dec
xchg
in
mov
outs
add
inc
test
adc
and
add
push
mov
mov
push
jo
repz
ins
mov
push
inc
int3
outs
(bad)
out
in
inc
test
push
jge
sbb
outs
aad
xchg
pop
shl
pushf
enter
xchg
and
out
std
fwait
and
adc
lock
jbe
mov
jae
clc
fs
gs
lods
and
test
fwait
in
cwde
sbb
shl
rol
dec
dec
push
repz
ss
push
sub
ror
outs
add
lods
shr
mov
call
push
push
xor
jae
push
xor
jb
outs
add
in
mov
je
xor
sbb
dec
sbb
push
inc
or
sbb
jmp
fwait
cmc
test
sub
loop
rcr
mov
mov
push
repnz
je
pop
push
syscall
lods
cdq
adc
xchg
rol
or
sub
cmp
mov
xor
enter
or
sub
loope
xchg
dec
add
ins
scas
xor
push
js
js
mov
add
and
push
dec
push
adc
mov
out
push
test
bound
outs
ja
or
mov
mov
test
dec
dec
popf
loopne
jb
sub
xchg
pop
popf
pop
je
jns
dec
or
pop
adc
call
cmps
lock
dec
fild
cmp
rcr
push
sbb
xlat
and
rcr
shr
jle
stos
mov
aas
cmp
data16
xor
push
fcmovb
scas
arpl
cmps
push
mov
jne
sub
(bad)
xlat
push
imul
xchg
pop
adc
cwde
push
pop
mov
mov
(bad)
in
adc
mov
sub
pusha
adc
lods
rcl
and
cmp
sbb
mov
or
jge
mov
out
aam
cmp
es
sahf
mov
and
xor
push
jbe
sbb
mov
addr16
inc
aam
mov
xchg
xchg
fidivr
adc
cli
xchg
add
aam
mov
enter
xor
pop
xchg
xor
into
push
cdq
xchg
add
jg
pop
push
fbstp
imul
mov
cmp
arpl
cdq
lock
pop
fdivr
cmps
jg
sbb
cli
and
pop
adc
jp
lock
or
add
pusha
fadd
ror
mov
xchg
cmp
add
ss
int3
cmps
inc
out
fisubr
cmp
ja
and
sahf
sbb
lahf
sub
sbb
lea
mov
dec
inc
sbb
in
push
push
(bad)
retf
mov
pcmpgtd
mov
jne
pop
test
cmps
mov
and
fisub
pop
outs
mov
mov
xor
jle
call
jmp
fwait
dec
shl
ds
cmc
push
ret
sub
or
popf
stos
dec
mov
ffree
pop
and
xor
dec
scas
push
add
arpl
shl
cmps
push
cmp
movs
adc
ret
push
aam
std
jb
mov
mov
ds
add
xor
push
sbb
push
shl
pop
and
cmp
jns
sbb
cli
(bad)
jmp
sbb
push
mov
xchg
stc
pop
adc
loopne
xchg
or
test
js
loopne
popf
pop
outs
push
cmp
out
dec
or
xor
adc
mov
cmp
sti
mov
pop
xchg
mov
or
outs
outs
jo
push
cli
dec
arpl
add
mov
sbb
je
sub
push
sub
mov
inc
(bad)
mov
scas
or
adc
pop
loopne
push
call
xchg
mov
fstp
cmp
mov
push
mov
push
xor
addr16
(bad)
cmp
inc
test
pop
fisttp
adc
xor
cmps
stos
frstor
sbb
cmp
adc
mov
xor
pop
jae
xchg
mov
pop
and
(bad)
fcom
mov
sbb
aaa
loope
(bad)
xlat
cli
adc
ficomp
aaa
aam
(bad)
scas
push
and
rcr
jmp
(bad)
adc
jb
aas
add
lock
sbb
fwait
les
mov
cmp
inc
mov
aaa
jecxz
mov
adc
in
int
cmp
and
jb
cmp
mov
mov
in
aam
dec
or
sti
es
outs
push
ds
aaa
rcl
fcmovbe
sti
enter
outs
xor
cmp
call
mov
xor
cmp
jmp
cmps
(bad)
addr16
or
or
fimul
push
sub
retf
arpl
mov
push
sbb
iret
cmc
outs
mov
xor
mov
sbb
jnp
pop
push
and
popf
test
test
mov
imul
add
into
jnp
pop
xchg
jmp
mov
inc
(bad)
jb
mov
xor
(bad)
sbb
mov
xor
sahf
sub
lds
addr16
ins
test
ds
mov
jbe
shl
je
leave
ja
jle
dec
popa
cmp
shr
adc
pop
cmp
movs
lods
sub
(bad)
in
jmp
repnz
cmps
and
xchg
cld
hlt
xchg
(bad)
cmp
inc
das
xchg
cmp
xchg
push
jle
loope
(bad)
sub
xor
xchg
enter
push
in
jo
lods
fcomp
push
push
or
xchg
ficom
jno
shr
imul
xchg
cmp
xchg
out
stos
jb
mov
jae
and
dec
jle
retf
adc
xor
xlat
fsubr
mov
push
jae
pop
sbb
dec
imul
enter
mov
cld
loope
ss
rcr
lahf
aad
loop
xchg
ror
inc
mov
fwait
scas
dec
and
mov
fs
mov
mov
nop
push
cmp
lea
cmp
mov
mov
cmp
sub
clc
xchg
std
inc
mul
in
fdiv
enter
and
push
push
pop
mov
mov
popf
call
cdq
xor
cli
jae
sbb
cmp
outs
add
cmp
(bad)
push
test
push
sbb
fwait
sbb
repz
loope
sbb
fldenv
test
mov
fisttp
mov
jp
les
xchg
bound
or
push
add
popa
and
adc
fisubr
sub
in
scas
iret
lahf
scas
adc
cmc
enter
shl
outs
pop
les
push
mov
sbb
jns
push
sub
scas
ja
xchg
(bad)
mov
jp
dec
dec
dec
xchg
mov
xchg
jp
and
das
push
loope
xchg
cmp
and
mov
jmp
nop
fwait
into
cmp
mov
pushw
fnstenv
test
add
xlat
cdq
mov
push
shl
inc
and
fild
xbegin
test
mov
cli
ror
add
dec
nop
test
jo
pop
fnstenv
outs
dec
xchg
xchg
mov
jo
add
and
xchg
dec
std
dec
scas
enter
retf
js
loop
xchg
add
cmp
js
inc
out
sbb
lahf
jo
mov
dec
pop
(bad)
out
int
shl
lahf
cmp
xchg
popf
repz
mov
jno
call
and
jns
inc
sub
enter
in
cmp
push
or
xchg
dec
pop
int3
je
(bad)
in
dec
fimul
add
cmc
aaa
icebp
and
mov
mov
push
sbb
mov
cwde
xchg
pushf
aam
les
push
fldenv
aaa
and
inc
movs
pop
retf
loop
arpl
or
les
adc
in
push
enter
xor
mov
add
xchg
out
imul
daa
pushf
xchg
dec
jb
inc
push
mov
and
mov
out
mov
lods
out
das
rcl
das
sub
add
dec
adc
push
(bad)
in
or
sbb
xor
iret
cli
sbb
ss
leave
sbb
(bad)
jne
xlat
and
iret
ror
lds
inc
enter
addr16
fs
cmps
retfw
mov
out
and
mov
ja
and
xadd
js
add
push
inc
push
xchg
hlt
cwde
add
fs
sti
arpl
and
stos
enter
pop
cmp
loop
add
inc
movs
push
rcr
jnp
mov
int3
mov
in
arpl
and
push
xchg
ins
mov
mov
cmp
mov
mov
outs
mov
arpl
xchg
inc
std
sar
leave
(bad)
push
cwde
outs
sbb
mov
lods
inc
ret
xchg
dec
push
dec
mov
call
(bad)
ss
dec
repz
mov
fisttp
pop
add
dec
xchg
stos
cdq
xchg
cmp
jnp
xchg
xor
scas
rol
rcl
cmps
(bad)
dec
jmp
adc
mov
jmp
fild
pop
xchg
shl
das
or
aam
mov
fist
push
ja
in
fild
ss
(bad)
out
xor
ja
and
mov
stos
into
adc
je
add
into
fucomip
adc
test
pop
push
pushf
cdq
popa
rol
fsubp
jno
cs
ins
mov
sub
or
(bad)
bound
out
mov
inc
dec
pop
and
cmc
fmul
mov
jge
inc
jae
sub
clc
inc
pushf
or
mov
push
arpl
(bad)
jbe
and
sub
jo
xchg
int3
jae
mov
lods
sbb
in
sub
adc
inc
scas
and
lods
retf
xchg
push
push
push
and
jmp
cmp
sti
or
pop
test
push
mov
push
push
mov
mov
clc
lock
stos
fcomp
(bad)
mov
push
loopne
cdq
out
outs
movs
lods
adc
mov
and
mov
daa
cs
in
(bad)
outs
mov
je
es
or
inc
inc
jl
and
fisttp
cdq
jo
xchg
jl
stos
push
mov
sub
repz
mov
(bad)
push
or
inc
les
aad
xchg
retf
jecxz
sbb
ret
mov
xchg
cmps
mov
jmp
add
add
movs
xchg
or
pop
call
add
(bad)
or
shl
mov
push
cdq
icebp
cmp
xor
retf
ret
in
loop
pusha
add
or
sbb
repnz
daa
xor
sbb
rcl
jae
xor
or
(bad)
mov
ror
dec
ror
test
imul
scas
sub
add
pop
mov
pop
(bad)
pop
or
and
xor
scas
popa
cmp
or
ins
jmp
jl
mov
push
inc
xchg
sbb
stos
repz
jo
jmp
rcl
dec
or
push
mov
ja
sbb
cmps
mov
pop
(bad)
in
loop
adc
mov
sbb
xor
mov
sub
in
ror
call
sub
xor
jge
sub
rcr
sub
xlat
aaa
in
movs
gs
push
repnz
inc
shl
outs
push
or
push
scas
daa
out
rol
dec
xchg
mul
mov
pop
add
mov
scas
mov
lods
jecxz
and
ja
pop
jae
fstp
cmps
xchg
mov
fwait
mov
rol
mov
clc
pop
dec
mov
test
jae
outs
xor
mov
pop
and
lds
xor
push
or
fist
fsubrp
mov
push
je
cmc
inc
mul
jl
lods
scas
jp
bound
sar
mov
inc
xchg
cdq
push
sub
mov
fnstsw
(bad)
jge
sub
retf
ds
test
out
in
push
mov
xchg
xlat
outs
sahf
pusha
movs
mov
or
mov
test
out
movs
cmc
inc
fnstsw
int
ds
(bad)
cmp
loopne
mov
(bad)
mov
adc
fwait
jecxz
stos
popf
adc
(bad)
mov
jmp
sahf
fstp
(bad)
mov
call
mov
or
xchg
repz
scas
stos
(bad)
es
pop
scas
dec
emms
xchg
sti
fld
(bad)
inc
fist
sar
mov
hlt
outs
dec
or
sbb
mov
dec
push
fst
aam
fnstsw
(bad)
ficom
pop
iret
call
mov
fmul
aas
lahf
popf
inc
or
popa
cs
scas
ret
mov
and
cmp
or
push
inc
int3
int
add
jae
xor
in
sub
ds
test
xchg
jns
adc
fucom
xchg
adc
gs
xchg
sub
xlat
sbb
(bad)
push
(bad)
loop
push
(bad)
ficomp
jmp
imul
cmp
add
fidiv
mov
xor
mov
push
sbb
loope
ja
sub
aaa
repz
and
cli
test
lods
push
ret
shr
cli
fdiv
inc
loop
imul
xor
in
lods
(bad)
scas
mov
adc
add
lds
dec
outs
jb
rcl
xor
xchg
cld
test
mov
loop
imul
or
sbb
xchg
push
call
mov
imul
pop
and
aaa
sbb
pop
push
cwde
inc
and
and
jnp
imul
pushf
out
hlt
or
or
push
cmp
mov
dec
cmp
and
sbb
(bad)
jmp
jl
jecxz
adc
adc
lods
movs
dec
dec
call
les
pop
pusha
mov
frstor
and
je
jp
inc
scas
cmp
adc
or
xchg
mov
movs
mov
jmp
or
mov
mov
iret
inc
jno
xor
idiv
outs
(bad)
sub
ret
idiv
jg
cld
cmp
in
inc
sahf
adc
retf
add
jno
sbb
xchg
jle
and
(bad)
jmp
push
addr16
cmp
push
out
cmps
out
(bad)
in
mul
lock
jbe
and
ins
add
aam
cdq
ja
push
mov
add
(bad)
pop
mov
shr
cmps
cmp
pushf
cmps
inc
sbb
xor
(bad)
movs
jb
loopne
inc
enter
push
xor
sbb
addr16
adc
(bad)
sar
jge
and
or
fisubr
sar
mov
or
pop
addr16
dec
xchg
inc
jo
xor
inc
inc
pop
jl
div
(bad)
mov
aas
pop
jg
adc
lea
sub
add
and
jb
sub
pushf
rol
adc
lea
rcl
mov
xchg
and
inc
sbb
addr16
sbb
xchg
pop
jns
arpl
call
xor
mov
sbb
test
sahf
pop
imul
loope
adc
jge
fadd
push
outs
out
mov
ret
sbb
scas
jmp
xchg
and
or
or
mov
pop
mov
(bad)
xor
mov
push
fld
xor
test
int3
retf
test
test
xor
je
icebp
and
mov
xchg
mov
inc
call
retf
data16
mov
cwde
ret
push
push
iret
gs
out
xchg
jno
push
int3
mov
xor
imul
sti
push
sub
cmp
clc
sbb
popf
pop
pop
sahf
inc
and
(bad)
mov
retf
test
dec
xchg
inc
mov
xor
xchg
mov
adc
lods
inc
dec
mov
push
iret
out
jmp
mov
repz
cmc
loopne
mov
and
or
leave
mov
das
push
mov
ins
push
xor
push
test
fxch
sbb
cmp
movs
ret
sub
inc
and
sar
pop
(bad)
loop
into
jbe
out
dec
or
fistp
ror
imul
jne
test
hlt
in
pop
lea
mov
jae
sti
leave
int
mov
(bad)
jnp
push
lock
(bad)
mov
adc
add
pop
xchg
stos
mov
movs
cmp
sub
jae
dec
push
mov
dec
cs
sub
xchg
mov
ror
xor
xchg
stc
and
and
push
inc
jge
xchg
add
psubusw
push
(bad)
aas
add
mov
les
jg
pop
pop
add
loope
aaa
push
sar
dec
stc
loope
loopne
sbb
fstp
mov
jne
push
mov
xor
test
and
add
(bad)
mov
mov
push
outs
(bad)
mov
cmps
push
xor
pop
xchg
test
(bad)
les
jmp
mov
out
jmp
inc
sti
test
in
test
add
jecxz
ds
xchg
dec
pop
mov
inc
pop
daa
inc
inc
repnz
jno
and
and
sbb
(bad)
fimul
ins
push
mov
jg
push
mov
push
mov
movs
cmp
repnz
inc
jb
sbb
adc
jl
lods
repnz
mov
dec
les
out
sti
jne
ficomp
inc
pop
and
sub
sti
pop
mov
push
push
rol
jmp
mov
or
mov
sub
push
js
and
fucomp
push
js
sbb
mov
cs
call
rcl
or
mov
sbb
stos
and
loop
outs
inc
aad
and
mov
add
and
and
pop
add
xchg
fst
pusha
adc
xchg
inc
mov
cs
mov
sbb
rcl
xchg
pop
push
into
outs
mov
in
mov
add
xchg
lea
ror
jg
lahf
(bad)
dec
mov
jne
dec
les
add
xor
call
mov
(bad)
pop
rcr
jmp
stos
and
sub
or
or
mov
mov
inc
mov
retf
adc
push
push
cmp
sub
push
test
jl
and
ret
jp
nop
outs
addr16
mov
mov
inc
push
xor
add
les
or
in
cmps
ss
cmp
(bad)
cmp
lds
add
aaa
in
jle
cmp
cmp
inc
(bad)
mov
rol
xchg
jne
mov
xchg
mov
mov
inc
(bad)
cmp
sub
jmp
call
aaa
div
sub
sub
and
clc
in
cld
nop
aas
xlat
rcr
mov
and
lds
push
mov
and
gs
or
add
mov
or
in
adc
out
push
dec
retf
dec
ja
adc
fbstp
pop
aad
mov
lea
pop
les
mov
(bad)
jmp
test
xchg
icebp
fst
push
imul
pop
iret
movs
das
stc
and
pop
push
cmp
mov
fcmovb
and
cmps
xor
(bad)
mov
sbb
adc
adc
jbe
add
push
aas
xor
(bad)
dec
xor
dec
mov
retf
or
frstor
cwde
ret
rcl
loopne
lds
mov
ret
pop
scas
mov
dec
sub
or
add
add
mov
mov
out
cwde
gs
retf
fldcw
lds
(bad)
fisubr
fwait
scas
push
stos
adc
adc
sbb
std
mov
add
mov
mov
loope
repnz
or
push
stos
cmp
or
lods
je
xchg
int3
push
adc
pop
mov
ds
and
adc
add
mov
and
es
or
cmp
mov
and
shl
inc
mov
cmc
movs
jno
sar
jne
mov
cmp
scas
mov
or
fist
jl
push
fs
loop
xor
pop
fs
rcl
mov
arpl
push
(bad)
clc
and
ss
add
jne
fcomip
jb
es
add
aaa
cmp
mov
stos
cli
push
inc
call
loopne
sar
mov
mov
fidiv
or
dec
sar
test
dec
lock
aaa
push
enter
push
loope
add
mov
push
aaa
repnz
hlt
pop
push
leave
cmps
jns
fisttp
xchg
les
fistp
mov
inc
repz
int
imul
add
jecxz
or
leave
adc
movs
movs
mov
or
and
arpl
stos
cwde
push
pop
sar
add
xchg
stos
lds
mov
or
rol
xchg
sbb
ret
mov
adc
cmp
mov
xchg
jno
cmps
jae
mov
xchg
(bad)
(bad)
jmp
loopne
xor
or
or
(bad)
repz
dec
jl
mov
cmp
jecxz
(bad)
neg
fs
sub
movs
call
add
dec
push
pop
jmp
int
mov
inc
add
shl
sub
int
xor
test
dec
gs
jb
dec
xchg
cwde
rcr
inc
xor
jg
fld
aas
cmp
inc
not
jge
inc
leave
fnsave
mov
popf
and
dec
ins
push
std
sub
(bad)
aam
add
test
cmp
lods
daa
add
sub
sub
mov
fcmovnb
in
and
stos
clc
jl
or
push
out
retf
and
xchg
(bad)
out
push
adc
adc
arpl
or
lds
outs
pop
xor
inc
sbb
(bad)
test
jle
pop
fiadd
int3
or
imul
or
mov
jb
pop
xchg
mov
dec
out
arpl
mov
adc
lock
inc
xlat
call
and
sbb
and
xor
(bad)
shl
sub
popf
jbe
mov
xlat
ins
sbb
in
in
in
dec
or
jnp
cmp
mov
ret
inc
es
loopne
xor
or
jge
jmp
mov
cmp
xor
jbe
cli
or
iret
addr16
ret
sbb
jg
lock
dec
inc
inc
pop
mov
stos
gs
inc
jbe
xchg
mov
mov
pop
retf
xchg
call
out
dec
aaa
out
scas
sub
loop
out
jne
imul
daa
call
cli
dec
sub
inc
mov
retf
dec
adc
pushf
test
je
stos
xchg
and
adc
sub
mov
sub
mov
adc
sbb
aaa
jb
nop
xchg
rcr
sti
mov
iret
(bad)
push
bound
(bad)
pop
and
test
sbb
inc
dec
stos
loopne
or
sar
pop
push
inc
mov
mov
mov
outs
push
dec
sbb
lea
jnp
lock
ror
and
into
mov
inc
jbe
add
push
aas
jo
lods
add
sbb
adc
mov
push
cmp
out
cmp
xchg
and
xor
push
cmps
sbb
add
mov
inc
jmp
aam
and
jo
sub
mov
xchg
pop
out
push
(bad)
sbb
paddsb
repnz
cs
pop
call
in
loopne
dec
loopne
pushf
pop
mov
push
push
or
mov
retf
iret
gs
fistp
daa
push
sti
cli
sbb
pop
mov
pop
imul
pop
pop
mov
(bad)
push
cmp
adc
cmps
scas
fidivr
push
and
call
sbb
xor
(bad)
(bad)
(bad)
jb
std
inc
bound
push
pop
add
pushf
cmp
pop
imul
jmp
push
ret
xchg
(bad)
jns
arpl
clc
sbb
mov
inc
xor
cmp
and
imul
mov
loop
aad
loopne
or
push
cld
dec
pop
push
daa
sub
pop
sub
push
cmps
int
(bad)
ret
fwait
stos
scas
mov
dec
mov
push
xor
test
jp
sbb
out
xchg
ss
sbb
movs
ret
and
mov
or
sbb
or
(bad)
ror
dec
jl
stos
push
ds
cmp
mov
dec
pop
sbb
mov
or
mov
sbb
or
sub
jae
sbb
es
loopne
lock
fwait
shl
bound
cmp
add
or
popa
sbb
mov
rcr
jge
sub
movs
add
or
xchg
outs
in
cld
xchg
sahf
or
xchg
mov
mov
test
adc
fwait
out
sub
jle
jecxz
ret
cmps
pop
loop
mov
jp
outs
jmp
imul
aam
ret
mov
jo
inc
add
jb
fldlg2
rcl
and
push
mov
adc
dec
cmp
fwait
enter
mov
or
mul
ins
mov
or
sti
das
fmul
stos
xchg
pusha
mov
stc
pop
xor
inc
iret
mov
inc
iret
dec
and
leave
push
cmp
adc
stc
xor
jp
cdq
pop
xor
mov
(bad)
shr
ror
sti
xchg
push
xor
into
inc
adc
jbe
fwait
mov
pop
push
push
xor
jno
ss
sbb
or
das
rol
cmc
jl
xor
lods
jo
aas
das
sti
pop
and
icebp
into
stos
push
dec
test
sar
fild
pop
inc
pop
rcr
addr16
aad
ret
jno
(bad)
fisub
push
arpl
push
aam
xor
jb
cmc
pop
ret
je
add
jle
or
repnz
pop
mov
in
out
mov
and
inc
cmp
or
and
cmp
sbb
cmp
div
mov
jl
cdq
pushf
sub
xchg
sti
ret
cld
ds
or
imul
(bad)
mov
sahf
dec
fld
aad
and
push
inc
test
mov
xchg
ins
ins
sbb
(bad)
or
jno
fistp
dec
or
movs
leave
jmp
cld
and
pop
inc
leave
push
inc
xor
rcl
add
nop
xchg
int3
or
test
jo
cmc
pop
xchg
jbe
pushf
leave
lds
inc
(bad)
jg
mov
(bad)
and
into
or
push
ins
test
fwait
retf
inc
inc
sbb
sub
fcmovnb
loope
cld
sbb
xchg
push
ins
loopne
push
(bad)
fcmovu
retf
loopne
fsubr
cmc
jbe
jnp
mov
sbb
movs
dec
sahf
mov
mov
pop
push
jae
pop
clc
wbinvd
xchg
and
dec
int
sbb
loope
out
cmp
inc
fwait
dec
inc
mov
lods
mov
xor
inc
stos
xor
adc
jmp
xor
cmps
pop
dec
mov
hlt
leave
xor
div
pushf
lods
fwait
ins
pop
sti
ror
les
add
add
sub
movs
mov
mov
inc
(bad)
(bad)
je
jnp
xor
imul
es
cmp
pop
imul
out
call
push
outs
(bad)
pop
daa
adc
mov
imul
jmp
adc
mov
push
out
(bad)
mov
mov
outs
jnp
cmp
(bad)
das
ret
gs
shl
scas
lods
nop
and
rcr
into
leave
add
sub
mov
sti
mov
aaa
rcr
cmp
loopne
pop
sub
sar
out
cmp
inc
(bad)
das
jne
xor
scas
dec
mov
ret
inc
lods
adc
fld
(bad)
repz
pop
jmp
dec
add
test
(bad)
out
mov
dec
cmp
test
in
icebp
add
pusha
sub
and
(bad)
mov
push
dec
push
fsub
add
push
jp
xchg
jl
and
ins
dec
push
icebp
xor
arpl
in
cld
xchg
ret
lahf
(bad)
pusha
push
jecxz
push
or
(bad)
or
(bad)
iret
and
dec
jno
lea
cli
lock
mov
jmp
out
fnstenv
stos
push
mov
jecxz
icebp
xor
popa
retf
push
nop
aam
out
sub
aad
test
rcr
pop
dec
aas
gs
les
inc
mov
mov
sbb
xchg
out
je
xor
mov
out
pop
hlt
push
int3
cmp
jne
adc
js
je
out
push
shl
mov
dec
(bad)
test
xchg
dec
ins
rol
cmp
dec
sub
retf
pop
xchg
inc
mov
shl
sbb
sbb
loopne
outs
loop
in
mov
out
adc
add
push
ds
and
or
out
fst
jmp
sbb
idiv
imul
fmul
or
pop
dec
push
cli
(bad)
and
sbb
aas
adc
mov
aam
icebp
je
add
jmp
sbb
call
mov
shl
jp
sbb
and
jmp
add
ret
adc
cmp
push
std
loop
cmp
(bad)
jmp
repz
jns
(bad)
addr16
loopne
or
xchg
iret
dec
push
mov
jne
dec
cmp
(bad)
call
dec
xchg
shr
mov
xor
pop
dec
jmp
cdq
jg
outs
push
sti
cli
imul
add
xchg
add
and
es
cwde
call
bound
retf
imul
pop
fild
pushf
je
ficom
stc
mov
jp
in
xor
pop
call
jne
or
xchg
aas
popa
mov
sub
push
fld
sti
and
xchg
addr16
ret
fwait
in
jle
les
stos
int
dec
push
mov
mov
jecxz
loopne
mov
mov
pushf
xchg
xor
popa
sahf
push
pop
daa
xchg
sbb
and
aaa
pop
xlat
arpl
add
jns
jmp
(bad)
icebp
sbb
mov
mov
cmp
fcomp
inc
jle
pushf
and
push
sub
push
dec
inc
xlat
mov
sbb
js
mov
adc
sbb
hlt
mov
adc
inc
shr
sbb
cmp
fldcw
(bad)
push
mov
jge
cmp
mov
or
icebp
fild
jo
jmp
shl
scas
or
mov
adc
(bad)
xchg
in
out
dec
inc
cmp
mov
fnstsw
fs
stc
or
aaa
mov
pop
adc
mov
xchg
ja
add
and
psrad
out
cli
nop
add
sub
call
add
mov
mov
cmps
shl
scas
or
imul
aam
mov
scas
mov
mov
push
fs
mov
mov
sub
and
push
adc
jmp
jns
add
repz
or
mov
cmp
in
repz
dec
mov
popf
pop
mov
mov
jnp
pushf
fnsave
add
xchg
jno
pop
push
pusha
in
xor
mov
call
sub
call
cwde
mov
aam
mov
pop
repz
nop
nop
mov
jo
inc
push
inc
bound
and
loopne
mov
dec
je
jo
std
std
scas
shr
into
js
sub
pop
lods
(bad)
dec
xor
dec
jp
jecxz
mov
fadd
and
lods
(bad)
loope
push
aam
pop
(bad)
adc
aam
jmp
pop
push
stos
shl
lahf
repz
jecxz
mov
test
and
or
push
mov
rep
(bad)
xlat
dec
dec
jns
sub
imul
mov
mov
mov
lock
pushf
xchg
and
shr
outs
xor
jecxz
cmps
ret
test
jp
pop
mov
cs
scas
call
loopne
out
std
push
wbinvd
mov
test
add
jge
in
daa
daa
and
mov
(bad)
sti
adc
xor
ret
lods
icebp
sbb
clc
ret
push
mov
sub
cli
or
das
bound
das
inc
fisttp
and
or
out
lods
inc
mov
retf
cmp
sub
lahf
pop
out
loope
mov
int3
adc
lods
cmp
and
in
shl
cmp
cmp
(bad)
xchg
lds
jne
pop
and
push
mov
jmp
xor
pop
sbb
iret
les
aas
rcr
or
icebp
or
cs
daa
movs
ret
jne
outs
or
movs
cmp
adc
mov
dec
mov
jbe
es
in
das
icebp
jl
retf
add
pop
and
fs
sbb
cli
inc
gs
cli
or
sub
mov
xchg
sub
outs
mov
and
inc
cmp
ds
jne
add
xor
fcomp
ds
mov
jno
ret
jmp
inc
lea
push
mov
std
xchg
jg
dec
mov
daa
sbb
inc
jae
lahf
push
fwait
sbb
mov
mov
(bad)
push
xor
jmp
lahf
lahf
mov
mul
pop
dec
faddp
mov
ins
popa
pop
js
inc
inc
pop
and
add
cmps
ror
xchg
enter
xor
out
scas
xor
daa
pushf
loop
xchg
mov
or
jo
push
inc
xchg
mov
push
xchg
push
push
add
jge
adc
daa
pop
xchg
call
ficom
scas
inc
movs
js
dec
sub
add
outs
xchg
cmp
fbstp
loop
retf
mov
cmp
inc
xlat
fwait
popf
xor
push
test
sbb
mov
xchg
sub
mov
js
push
mov
pushf
inc
or
inc
(bad)
sub
fcom
(bad)
push
ret
pop
bound
or
fadd
dec
iret
repnz
and
(bad)
xor
(bad)
leave
loopne
and
rcr
push
lea
push
stos
cmps
push
inc
or
fs
push
cmp
adc
aas
inc
enter
sti
popa
adc
mov
ds
shr
(bad)
sbb
sbb
retf
f2xm1
stos
dec
mov
add
xchg
(bad)
sti
jns
repnz
cwde
retf
popf
mov
push
ins
les
repz
xchg
jge
repz
jmp
addr16
xchg
shl
sub
in
jmp
outs
xlat
xor
dec
das
sti
gs
aas
(bad)
push
jbe
pop
fdiv
or
ja
mov
mov
xor
jmp
(bad)
mov
jbe
lods
movs
popa
loope
lods
enter
push
mov
aaa
jecxz
fisub
frstor
sbb
sti
xchg
xor
pop
jl
mov
aam
xor
cli
mov
pop
test
jmp
inc
icebp
add
fsubr
cmp
aaa
push
push
shr
jbe
lea
sahf
in
mov
ficomp
jns
dec
cwde
repnz
stos
in
and
test
out
es
dec
mov
ret
(bad)
mov
cmp
cmp
sub
xchg
cmp
rcl
fwait
lock
sahf
mov
mov
push
in
adc
lea
shl
mov
pop
clc
ja
and
jbe
adc
aas
xchg
cmp
mov
and
les
lods
add
cmp
jb
sub
jno
mov
mov
std
mov
mov
mov
cmp
repz
push
or
jmp
test
add
push
jne
pop
ja
adc
in
sar
out
pop
pop
jae
xor
dec
sti
add
outs
pop
adc
xlat
addr16
inc
sub
rcl
cli
out
and
xor
mov
mov
outs
shr
cmp
mov
add
sub
xchg
mov
push
jns
inc
or
fiadd
push
inc
jnp
and
pop
and
pop
cmp
fld
imul
xor
mov
jnp
push
loope
mov
cmp
in
movs
js
inc
int3
test
mov
ret
movs
ja
leave
scas
call
lock
enter
out
fst
push
mov
or
inc
xor
adc
js
jg
jno
test
xchg
fdivr
fstp
pushf
jg
ins
in
jb
lods
ftst
xor
sub
push
sbb
je
in
and
scas
adc
mov
hlt
sar
fnsave
adc
or
sub
xor
and
mov
sbb
jge
push
bound
mov
arpl
xchg
in
xor
add
jl
dec
xor
xor
jmp
push
mov
sbb
pop
je
xor
nop
scas
mov
fbstp
cmp
mov
not
or
dec
jp
pop
sub
and
sub
xchg
icebp
cmps
push
mov
adc
xor
stos
mov
xor
lock
pop
jge
adc
ins
adc
or
xor
xchg
jg
dec
int3
sbb
retf
adc
in
push
out
xchg
mov
in
mov
inc
aam
inc
cmp
lock
call
cli
popf
out
or
xchg
stos
retf
mov
cmps
enter
or
jle
ins
sbb
cdq
jmp
(bad)
std
or
jg
push
xlat
push
int
jl
mov
mov
mov
add
pop
add
mov
data16
sbb
inc
int
cmp
inc
(bad)
mov
lahf
out
out
test
lods
dec
push
sub
adc
cmps
adc
jne
ins
mov
jns
adc
mov
aam
mov
jg
and
shl
rol
shr
mov
mov
scas
mov
adc
cdq
test
mov
test
pop
add
daa
inc
mov
mov
pushf
xor
add
pusha
sbb
aaa
pop
xchg
mov
sti
inc
pop
dec
int
outs
mov
icebp
or
dec
mov
xchg
and
jns
scas
sahf
ja
loope
and
and
xchg
repz
xor
fwait
push
jmp
movs
push
pushf
or
test
pop
xchg
mov
sar
inc
lahf
gs
jp
sbb
jb
enter
xchg
std
rol
mov
or
or
jge
mov
adc
add
add
aas
popa
loop
push
push
inc
cs
dec
aas
mov
fwait
jmp
jno
test
jecxz
jecxz
pop
enter
mov
xor
mov
ret
test
xlat
pop
outs
push
jp
stc
std
aas
out
pop
mov
sub
stos
add
in
cwde
push
pop
ret
xchg
call
(bad)
fnstcw
mov
pop
add
imul
inc
loop
jnp
aaa
push
xchg
pop
push
(bad)
xor
inc
ja
loop
jmp
test
out
xor
out
in
pushf
and
add
repz
rcl
or
shr
add
jmp
adc
ret
mov
pusha
xor
and
fadd
mov
and
mov
hlt
lds
inc
mov
icebp
cmps
pop
or
adc
(bad)
adc
mov
test
dec
and
xor
std
aas
shl
(bad)
movs
retf
or
(bad)
jne
ins
out
pop
mov
sbb
lods
ftst
call
and
std
inc
scas
xor
(bad)
mov
test
cmc
repz
fistp
neg
cmp
or
inc
or
lea
jg
jae
std
adc
lods
mov
pop
mov
mov
loop
cwde
popf
outs
arpl
in
call
test
in
push
mov
popf
mov
cwde
adc
clc
adc
add
add
(bad)
jne
psubusw
daa
(bad)
and
fwait
xor
jnp
fdivrp
lock
hlt
push
stos
nop
mov
frstor
cld
sub
or
lock
dec
in
dec
or
outs
mov
xchg
stc
pop
jae
enter
mov
push
xor
cmps
xor
jno
shr
xor
push
lahf
mov
push
fcmovbe
add
jmp
mov
fs
dec
sbb
cmps
mov
cmp
mov
jge
mov
js
mov
mov
fsub
adc
sti
cmp
lods
push
mov
ds
xchg
addr16
mov
daa
push
cmp
xchg
not
pushf
mov
or
ror
(bad)
movs
push
add
out
std
mov
fld
mov
retf
pop
mov
pop
loopne
scas
mov
xchg
call
loopne
ds
xor
ror
dec
push
scas
sbb
xchg
pop
push
retf
dec
div
fsubr
enter
movs
mov
jmp
(bad)
lahf
push
push
rol
loopne
dec
bound
ret
out
les
test
jo
cmp
mov
imul
in
xchg
sar
in
cmp
lods
inc
push
(bad)
fiadd
mov
sbb
mov
pop
jbe
or
pop
call
dec
cmc
call
in
sahf
push
sub
cmp
mov
dec
xchg
ror
dec
ret
test
rcl
nop
inc
or
or
mov
cmp
jno
pop
cmp
inc
sbb
sbb
xchg
hlt
add
cmp
adc
push
xchg
and
or
fisttp
jnp
es
cdq
xor
(bad)
xchg
mov
mov
das
push
popa
jno
clc
inc
adc
ficom
dec
int3
dec
repnz
cmp
pop
cmp
mov
sbb
jmp
imul
jae
sub
ja
sbb
mov
ins
jmp
dec
inc
add
pop
lods
jmp
mov
enter
and
pop
adc
lods
into
xor
mov
jle
add
jbe
in
push
jg
nop
repz
movs
es
or
imul
push
dec
(bad)
data16
mov
mov
stos
imul
pushf
data16
jo
xor
cwde
cmps
inc
cwde
jmp
je
lds
in
jnp
push
rcr
aas
pop
push
aam
jp
inc
mov
jg
test
dec
cmps
jmp
shr
lahf
(bad)
sahf
push
jb
xchg
cwde
fs
ins
push
push
push
mov
sbb
dec
sub
pop
outs
cld
adc
mov
inc
ret
fstp
pop
adc
lds
pop
xor
xchg
jbe
push
and
std
fadd
lahf
jp
mov
popf
popa
sbb
gs
adc
mov
js
repnz
xchg
mov
aas
push
inc
push
rcr
fmul
daa
retf
test
ret
arpl
cwde
mov
int3
fsubr
test
sbb
xchg
cs
sub
jg
mov
xor
sub
aam
lods
mov
fs
cmp
frstor
push
repnz
retf
cmp
outs
cmp
cli
xchg
pop
add
xor
retf
ja
xchg
icebp
xor
jbe
mov
sbb
fdivr
cmps
jne
pop
stos
jno
into
sub
and
popa
push
in
mov
add
imul
stos
jns
pop
xchg
cmps
mov
sub
test
ret
mov
popa
mov
xchg
pop
fild
cmp
(bad)
mov
jno
fwait
aas
cmps
mov
cmc
jae
sbb
cmc
mov
or
fsub
or
push
inc
inc
hlt
test
pop
inc
sbb
rol
and
shr
aam
sar
ret
cmp
faddp
inc
fnstenv
push
jnp
mov
(bad)
jle
movs
mov
ins
out
sub
sub
into
xchg
dec
jl
(bad)
adc
inc
sbb
mov
cmp
fucomi
mov
push
imul
dec
cmp
or
jo
mov
or
stc
sub
xlat
lahf
out
jbe
stc
lock
jmp
mov
in
ret
icebp
mov
cmc
jo
jbe
out
add
push
repz
or
jmp
sub
js
es
jmp
cwde
push
mov
int
jle
cmc
mov
push
cli
dec
cwde
bound
or
cmp
adc
(bad)
jle
pusha
xchg
repz
jmp
xor
(bad)
pusha
jg
adc
mov
xor
das
aaa
imul
rcl
in
iret
jle
sahf
dec
out
jbe
mov
and
je
xor
hlt
add
sbb
fild
pushf
pop
daa
pushf
xchg
and
jmp
js
cld
xchg
aad
test
jb
xor
in
jae
cs
loopne
fst
fidiv
fisubr
popa
data16
add
arpl
mov
stc
or
xlat
imul
ja
rcr
daa
pop
add
cdq
xchg
ret
dec
test
xchg
jb
or
dec
or
add
jnp
rcl
xor
int3
or
je
in
std
pushf
dec
mov
jne
sub
sbb
inc
cmp
xchg
pop
(bad)
sub
fsub
rcr
inc
cmp
sbb
cmp
test
inc
cmc
call
mov
out
sub
pop
into
pop
sub
mov
or
call
dec
and
loop
(bad)
sub
sbb
loopne
pop
inc
pop
ror
test
jmp
dec
pop
push
xchg
cmps
fisubr
nop
sub
mov
sub
add
shl
jecxz
and
and
xchg
inc
cmp
xchg
pop
fld
pop
cmp
inc
test
int3
xor
jae
inc
inc
dec
sti
sbb
stos
dec
mov
cmp
icebp
adc
add
inc
dec
sub
add
call
jae
loope
je
push
call
ss
or
jnp
xchg
rcr
mov
addr16
cmp
jnp
shl
call
pop
movs
int
dec
gs
stos
cld
aad
ss
mov
add
out
mov
sbb
pop
mov
push
mov
scas
lea
fcom
or
xor
enter
sbb
stc
les
sbb
jo
mov
fwait
pop
xor
rcl
jge
mov
scas
out
in
fnstenv
call
neg
pop
bound
dec
pop
jge
and
jge
push
mov
pushf
dec
lahf
xchg
xchg
pop
cwde
xor
jl
fbstp
repnz
fstp
inc
cmp
xor
dec
jnp
dec
cmp
jbe
push
popa
and
mov
add
and
and
and
pop
mov
push
xchg
retf
jbe
cmp
sub
pop
add
inc
xchg
push
adc
xchg
pop
in
hlt
sub
adc
(bad)
in
mov
and
mov
sbb
loope
jg
fidivr
xchg
push
movs
outs
in
push
fwait
lds
ins
punpckhwd
push
or
aas
js
pusha
icebp
pop
xchg
pop
hlt
and
jb
push
ins
loopne
call
push
ficom
loop
xor
retf
xchg
push
cmp
or
pop
ins
push
or
(bad)
xlat
xor
test
mov
fst
pop
ret
inc
sub
inc
stos
pop
(bad)
sbb
cmp
mov
inc
cmp
cs
dec
arpl
mov
xchg
sbb
sbb
aam
leave
in
loope
mov
jmp
imul
std
icebp
test
add
pop
loope
jae
cli
mov
pushf
add
(bad)
cmc
call
pmaxsw
aam
test
fs
xchg
ret
xor
out
mov
rcl
jmp
sub
ins
loopne
inc
sbb
jb
ror
jb
test
sub
mov
inc
es
je
fdivr
add
repnz
sub
jb
or
and
cmps
mov
repnz
mov
outs
ins
loope
sbb
lock
jecxz
sub
jecxz
arpl
cwde
cmp
dec
cli
xchg
ins
clc
sbb
pop
ret
add
cmp
in
add
mov
es
push
dec
fdivr
icebp
add
(bad)
lock
push
add
jb
and
xor
aad
xchg
and
push
mov
mov
test
movs
sbb
ret
inc
push
pushf
adc
cmp
iret
mov
add
movs
ja
mov
pop
repnz
cld
push
cmp
aas
jmp
push
test
mov
jbe
outs
test
arpl
mov
jmp
sbb
xchg
or
jae
sar
push
push
cmps
mov
sbb
cdq
mov
inc
and
or
push
push
mov
mov
mov
inc
std
sar
jp
mov
test
push
(bad)
bound
xor
inc
in
inc
lock
jne
outs
add
data16
jg
pushf
lock
sbb
jl
popf
and
(bad)
adc
mov
bound
sbb
mov
add
dec
pop
sbb
in
adc
fcmove
call
sub
xor
cwde
inc
cmp
sub
xchg
sub
inc
inc
jge
pop
mov
out
jmp
xchg
imul
xchg
mov
jae
or
xchg
push
cmps
(bad)
mov
fnstenv
pop
fnstcw
jl
sub
cmp
mov
pop
inc
or
jb
xchg
call
sahf
aad
add
mov
out
push
cmp
aaa
push
mov
inc
push
(bad)
mov
xor
jo
test
sbb
mov
xchg
cmps
popf
pop
stos
out
or
or
mov
(bad)
pusha
mov
ss
jns
pushf
rcl
jp
xchg
xor
mov
cmp
pop
sbb
jo
mov
mov
clc
jecxz
jmp
out
inc
gs
ins
out
jle
dec
pop
stos
jae
pop
test
mov
in
not
pushf
pop
sbb
loop
cs
int3
dec
add
(bad)
push
lds
pop
aas
outs
mov
fsubrp
or
call
mov
push
adc
and
daa
push
or
inc
pop
mov
scas
mov
into
retf
loope
push
or
or
call
jbe
inc
pop
movs
repz
retf
and
jecxz
add
out
xchg
pop
in
popf
cmps
dec
loop
pop
xor
fadd
call
arpl
or
aas
dec
ret
jnp
rol
pop
shl
test
inc
dec
loop
nop
data16
cli
sub
lahf
sub
dec
nop
adc
xchg
out
cmps
xchg
test
fcomip
pop
outs
shl
scas
ins
pop
inc
jbe
xchg
inc
mov
retf
cmp
lea
fs
cmc
popa
adc
outs
inc
lahf
loop
jnp
ja
dec
jp
mov
add
dec
enter
icebp
sub
mov
jp
jnp
ja
test
xor
sbb
fist
mov
pusha
pop
loope
inc
pop
xor
cwde
je
xchg
pop
xchg
cmp
movs
xchg
in
call
fistp
fstp
sbb
add
cmp
xchg
xchg
cs
jo
sbb
outs
nop
rcr
(bad)
push
hlt
xor
in
jle
icebp
sbb
lods
js
xchg
dec
xlat
push
movs
mov
stos
daa
add
mov
test
pop
inc
popf
adc
outs
inc
adc
push
xor
lahf
xlat
mov
daa
inc
mov
push
xchg
aam
xchg
int
(bad)
imul
popf
add
loopne
out
fcom
pop
inc
lods
dec
mov
sub
xor
mov
retf
sub
pop
fst
shr
dec
into
sub
inc
jne
les
aam
mov
lea
test
lock
bswap
sub
inc
jae
sbb
xchg
fldenv
push
inc
ret
cmps
cli
push
pop
jb
dec
xor
sar
inc
sti
cmp
adc
(bad)
push
fs
pop
or
iret
(bad)
adc
xchg
retf
les
pop
xor
cmps
xchg
mov
cs
cdq
and
mov
sbb
test
add
fadd
shr
data16
push
sub
mov
mov
scas
and
sbb
in
jg
push
lods
lea
cdq
ja
push
push
lds
or
out
inc
pop
xchg
(bad)
jmp
jbe
not
sti
adc
call
xor
jmp
aam
cmps
cmp
cs
cmp
fwait
aaa
cmp
ins
mov
mov
jge
mov
shl
mov
xor
rcl
popa
enter
fadd
iret
mov
sbb
jns
out
inc
push
icebp
pop
rcr
dec
dec
mov
add
inc
rcl
mov
jne
ja
push
test
pop
nop
jmp
mov
popa
inc
mov
retf
vmovdqa
inc
or
test
ja
dec
outs
xchg
mov
cli
push
and
jle
inc
movs
adc
dec
ret
jo
addr16
out
ror
je
jne
imul
xchg
les
and
jmp
push
cmp
or
jnp
jns
add
shl
daa
jmp
lahf
pop
mov
xchg
das
ins
int
fld
sub
cld
retf
and
jmp
push
jge
and
(bad)
cmp
and
fsubr
add
push
mov
mov
(bad)
lods
fnstenv
mov
add
mov
inc
jle
sbb
imul
(bad)
imul
imul
aad
scas
pop
push
mov
pop
cmps
repz
aam
jmp
(bad)
gs
push
sti
xchg
into
int
rcl
push
out
mov
rcl
enter
dec
fld
jl
jmp
adc
(bad)
in
sub
ja
push
mov
cs
push
fild
jmp
bound
xlat
mov
movs
loopne
cmp
pop
push
xchg
mov
nop
popa
out
addr16
es
sbb
cld
ret
pop
cmc
mov
xchg
stc
add
test
mov
movs
or
daa
ss
call
daa
(bad)
add
(bad)
jecxz
fsubp
(bad)
jbe
mov
shr
cld
shr
test
shl
push
or
cmp
mov
loopne
js
loope
ret
out
pop
sub
fwait
test
sub
fs
add
mov
inc
mov
mov
cdq
ret
dec
dec
push
lea
xchg
xor
nop
dec
les
mov
in
and
rcr
gs
pop
jb
scas
test
imul
jmp
ins
jmp
addr16
(bad)
outs
(bad)
xchg
sub
xchg
aaa
cmps
icebp
jae
pop
jmp
adc
push
jnp
mov
xchg
mov
ins
movs
push
into
fs
ds
retf
cli
add
mov
mov
sti
test
and
fist
pop
cmps
xor
push
inc
movs
out
mov
imul
push
jl
mov
aaa
adc
sbb
push
lock
mov
mul
push
or
xor
and
jecxz
mov
int3
(bad)
jp
and
xor
and
xor
hlt
mov
sbb
jmp
mov
fdiv
cdq
dec
cmp
xchg
call
cmps
or
movs
inc
mov
std
push
call
jmp
mov
push
lods
in
inc
adc
iret
push
fwait
pop
xchg
out
(bad)
je
pop
pop
rcl
ret
dec
adc
sbb
pop
iret
leave
lods
xor
cli
adc
lea
jmp
inc
mov
(bad)
pop
fs
repz
lahf
call
add
cmp
loope
dec
adc
jle
push
mov
adc
cmc
xchg
push
arpl
repnz
mov
loop
cmp
mov
(bad)
and
xchg
xchg
clc
in
cs
pop
stos
stos
jns
fmul
lock
retf
push
push
push
sub
in
imul
mov
mov
push
pop
mov
dec
(bad)
sar
ret
test
pop
repz
sub
lods
xchg
push
push
inc
pop
ret
(bad)
mov
or
in
push
xchg
hlt
push
arpl
push
loop
call
push
inc
outs
and
mov
or
pop
or
mov
js
es
dec
scas
bound
xchg
data16
jno
xlat
test
mov
jmp
cs
and
arpl
sub
jl
jl
sbb
push
mov
int
cmp
inc
add
es
and
cmp
rcr
and
(bad)
pop
jo
iret
stc
and
and
dec
lods
addr16
adc
xchg
in
sbb
loope
iret
or
fdivr
sub
aam
sbb
test
into
jae
dec
cmp
call
out
ret
push
rol
(bad)
out
test
fs
pop
fst
push
add
inc
js
and
lock
add
call
into
(bad)
push
clc
mov
mov
ret
pop
call
int3
add
jmp
out
rol
int3
dec
inc
ror
mov
jns
cmp
push
mov
mov
cld
xor
ret
ret
mov
ss
mov
xor
(bad)
sbb
aad
sbb
sub
push
in
mov
les
loop
jge
scas
and
jmp
adc
pop
clc
movs
sbb
out
(bad)
mov
in
mov
arpl
inc
aaa
shl
lock
xchg
idiv
loop
dec
movs
mov
mov
test
push
jecxz
cmp
mov
fstp
ins
xor
fdivr
shl
mov
repnz
sub
movs
out
push
lds
lods
jne
xchg
jbe
out
dec
ret
mov
pop
mov
sbb
(bad)
push
push
es
popf
push
pop
xchg
stos
add
push
jae
pusha
test
xchg
or
dec
fsubr
cmp
ss
push
push
movs
and
inc
pop
mov
sbb
or
and
in
push
loop
out
inc
retf
inc
(bad)
pop
push
or
in
jle
js
sub
pop
or
fisttp
dec
xchg
and
xlat
enter
mov
retf
mov
dec
rcl
push
loope
mov
jae
popa
ds
in
ins
jae
bound
sbb
or
sub
es
cld
inc
add
mov
and
jge
data16
mov
jno
or
jno
adc
pop
cmps
inc
pop
jl
jl
add
outs
bound
ins
(bad)
hlt
jno
rcl
jae
mov
mov
adc
nop
dec
or
sub
push
test
out
pop
sub
inc
stos
dec
lods
push
dec
mov
int3
loopne
enter
std
cmps
loopne
and
push
call
jl
js
aaa
pushf
sub
cmp
(bad)
jp
paddusw
popf
and
jg
ror
inc
mov
cmp
sti
cmps
retf
sbb
or
push
movs
sbb
push
push
cdq
add
cmps
mov
cwde
call
push
pop
jle
movs
cld
ja
sbb
(bad)
cmp
repz
pushf
jg
or
retf
mov
(bad)
and
jb
dec
or
jecxz
dec
add
fwait
ins
or
mov
dec
mov
gs
fnsave
pop
cwde
movs
movs
dec
sbb
call
cld
pop
pop
push
and
nop
iret
ret
sbb
push
push
sbb
xor
pop
or
add
fwait
call
sub
(bad)
ds
jo
sub
aad
cmp
gs
in
xchg
adc
fcomi
stos
ins
mov
dec
jmp
inc
sbb
mov
cmps
pop
scas
dec
jmp
scas
mov
ins
jbe
pushw
adc
jno
cmp
movs
and
loope
or
sahf
xchg
push
sbb
xor
fist
jno
scas
shl
push
xor
stc
xlat
jge
retf
mov
mov
xor
daa
std
mov
push
fcom
loope
adc
out
add
mov
jmp
add
mov
fwait
sub
in
movs
sbb
(bad)
adc
aas
in
int
lock
cwde
std
ror
mov
or
mov
cmc
mov
fldcw
aaa
movs
mov
mov
xchg
push
imul
xlat
jg
mov
fild
aaa
(bad)
fimul
ret
bound
push
mov
imul
mov
push
and
(bad)
and
inc
rol
push
pop
cmp
push
ins
ret
adc
or
mov
mov
jae
xchg
je
je
ret
adc
sub
(bad)
jnp
jb
fdiv
mov
inc
ja
mov
ret
sbb
pop
push
dec
xchg
aas
and
mov
fs
cmp
xor
adc
mov
scas
pop
xor
adc
inc
mov
jae
test
push
mov
and
int3
popa
rol
loop
mov
lahf
scas
cmp
adc
repz
pop
int
jmp
or
and
push
dec
add
fmul
mov
and
jne
inc
pop
adc
rol
je
int3
imul
add
test
arpl
enter
jb
idiv
xchg
loop
mov
adc
fwait
les
ja
xor
repz
ins
cmp
cmp
cmp
jb
popa
add
sbb
cmc
cmp
ja
jae
xchg
das
ret
jg
or
mov
jecxz
mov
push
mov
jg
daa
imul
cmp
(bad)
faddp
fwait
sti
push
popf
jmp
aaa
pop
push
out
push
ins
into
xor
test
imul
or
in
add
mov
or
fld
inc
scas
xchg
pop
mov
ins
cmp
dec
mov
clc
addr16
inc
test
mov
mov
outs
movs
pop
inc
(bad)
push
inc
leave
rol
mov
pushf
ins
imul
call
jns
ret
aaa
push
pop
add
das
out
stos
lea
xchg
lock
push
sub
add
or
int3
pop
nop
jmp
jae
push
dec
xchg
in
inc
sub
es
or
sbb
add
jbe
popa
dec
idiv
popf
idiv
mov
sub
push
push
mov
xchg
mov
(bad)
cmp
outs
push
dec
xchg
xchg
sbb
mov
stos
mov
aad
movs
cs
mov
jmp
push
xor
test
das
out
push
lock
sbb
push
mov
mov
js
xrelease
jmp
dec
std
(bad)
(bad)
ret
push
jne
hlt
stc
jl
pusha
push
cmp
retf
jne
leave
(bad)
push
push
mov
sbb
in
shr
test
push
and
daa
jp
push
lds
jns
pushf
loope
jmp
jo
pop
rcr
mov
pop
out
imul
lods
fxch
dec
in
push
dec
in
and
mul
cmp
cmp
push
(bad)
out
imul
mov
pop
cs
pusha
jae
ins
(bad)
fisubr
or
adc
inc
cmps
data16
repz
call
or
mov
sub
push
pop
cmc
outs
(bad)
pushf
ds
push
xchg
xor
dec
jecxz
xor
adc
pop
sar
jno
loop
lock
push
cdq
xor
and
inc
xchg
adc
add
cmps
movs
jbe
adc
addr16
pusha
les
and
mov
xor
mov
aam
push
leave
xchg
arpl
test
jmp
pop
imul
mov
add
add
bound
xchg
xor
dec
int3
imul
jp
in
(bad)
mov
sub
inc
icebp
xlat
jbe
cmps
jo
in
imul
push
push
into
sub
hlt
ja
cmp
mov
out
in
setno
mov
sub
mov
dec
sub
mov
jae
adc
cmp
xor
adc
inc
adc
mov
outs
dec
dec
nop
das
add
loop
jne
and
inc
in
dec
pop
out
(bad)
scas
mov
popf
mov
xchg
mov
fcomp
sbb
add
fwait
mov
enter
add
push
or
xchg
jmp
sbb
test
mov
movs
loope
mov
rcl
stos
xor
(bad)
adc
pop
push
fwait
or
ror
inc
sbb
pop
cwde
push
adc
icebp
fiadd
out
xor
xchg
push
loop
jb
xchg
sub
movs
sub
xor
push
call
sub
jo
xlat
lods
ja
das
add
imul
mov
fs
into
sar
dec
or
jb
pop
(bad)
jp
push
jae
(bad)
sub
mov
fwait
sub
fdiv
ss
sbb
jge
scas
out
loopne
mov
inc
jle
sub
jae
push
cs
out
jg
mov
or
rcl
pop
in
movs
add
xchg
fidiv
xor
inc
jg
cmp
mov
cld
scas
in
pop
(bad)
pop
sub
sub
jo
jmp
cmps
aam
clc
sbb
sti
mov
xor
dec
aad
retf
jae
jecxz
mov
inc
movs
js
mov
or
outs
xchg
scas
ret
(bad)
push
cli
cld
gs
xchg
cmc
push
gs
mul
sbb
jns
and
inc
push
fidivr
push
dec
adc
or
mov
out
outs
sbb
dec
pop
ins
bound
push
mov
inc
jno
cmp
jmp
mov
popa
sub
push
cmp
pop
mov
stc
out
mov
and
mov
fcomip
loopne
scas
jle
cld
xlat
adc
fidiv
and
outs
scas
mov
loop
jle
xchg
js
dec
sbb
jmp
es
std
mov
imul
repnz
add
jne
or
pop
(bad)
stos
mov
jnp
cli
and
cmps
rcr
lock
jle
push
push
xor
into
inc
gs
aaa
popf
mov
jne
test
inc
jae
stos
sahf
icebp
aad
dec
rol
mov
popa
add
add
sbb
pop
fnstsw
cmp
(bad)
loop
fidivr
mov
or
sahf
daa
mov
(bad)
pop
sbb
js
xlat
test
out
int3
retf
mov
ds
mov
test
jmp
push
imul
ins
outs
lahf
in
test
stc
and
mov
push
and
pop
mov
adc
xchg
sbb
dec
push
out
sbb
push
gs
fcomp
push
arpl
popa
stos
push
push
ins
dec
ret
sti
xor
cmps
inc
add
xor
push
pop
jnp
cdq
leave
mov
and
pop
mov
int3
ret
iret
stc
lock
pop
sub
loope
or
pop
cwde
popf
dec
xlat
test
cmp
sbb
fdiv
push
sbb
(bad)
mov
push
push
call
push
xchg
jmp
cld
xchg
or
sti
out
mov
xchg
aaa
stos
xchg
xor
mov
push
add
shl
(bad)
mov
push
dec
mov
int3
add
and
(bad)
ins
pop
mov
fnstenv
sar
ins
dec
aam
sbb
fcomp
ins
loop
and
dec
rcr
mov
out
cld
or
dec
mov
push
in
pop
pop
(bad)
mov
cld
ins
retf
aaa
add
cmp
mov
xor
inc
nop
call
(bad)
das
sbb
mov
outs
xchg
add
add
les
pop
adc
jmp
and
sbb
aam
mul
mov
cmp
xor
adc
cdq
pop
mov
inc
lahf
jl
div
out
push
mov
mov
je
push
add
cmc
icebp
ins
pop
and
imul
dec
ret
dec
or
mov
enter
sbb
js
dec
stos
xchg
icebp
push
das
xchg
aas
push
sub
jg
popf
into
or
adc
ins
mov
fiadd
push
add
mov
jge
and
into
je
pop
iret
push
add
mov
cmps
and
test
fstp
loop
or
test
push
(bad)
jo
mov
xchg
outs
test
fimul
and
inc
pop
in
je
xor
add
cli
(bad)
movs
ret
lods
test
lods
jnp
cmc
jg
jno
rcr
sub
pop
cmp
jb
cmp
sbb
pop
fs
or
fs
sub
pushf
adc
mov
sbb
add
dec
iret
xchg
aam
jle
xor
or
and
sbb
aas
cmps
ja
sub
jmp
jge
sbb
clc
icebp
retf
pop
adc
mov
pop
inc
aad
mov
(bad)
lods
jge
jno
push
mov
imul
xchg
test
cs
adc
iret
adc
jno
or
leave
push
pop
mov
mov
out
sbb
jnp
test
mov
popa
popa
or
cmp
xchg
sub
and
xchg
daa
inc
xchg
cmc
mov
cwde
xchg
inc
vsqrtss
sbb
enter
mov
jmp
into
jae
bound
add
or
(bad)
nop
retf
jb
idiv
inc
xchg
into
cwde
mov
shl
aam
sub
jmp
and
mov
lahf
pop
ins
(bad)
les
jmp
das
xchg
sub
push
call
xchg
test
push
mov
fisubr
mov
int
push
dec
pop
addr16
mov
add
sbb
push
int3
jns
sbb
xor
push
sbb
addr16
leave
imul
lock
stc
mul
cmps
dec
pop
fdiv
imul
fidivr
pop
data16
pop
sub
lods
xchg
push
fnstcw
bound
push
dec
sbb
sbb
clc
mov
movs
push
pusha
and
daa
and
xchg
sub
push
sbb
test
aaa
push
fild
xchg
xchg
vandps
jb
aad
or
retf
jge
ret
enter
lea
mov
imul
dec
cmp
int3
std
cmc
lds
and
lods
test
inc
adc
ja
dec
push
or
into
jge
pop
inc
fsqrt
into
xchg
sbb
lea
fisubr
add
xchg
sbb
push
ret
or
mov
retf
stc
(bad)
stos
fstp
nop
cdq
(bad)
dec
mov
leave
out
cmp
int3
jg
popa
shr
push
adc
mov
adc
sub
imul
shr
xchg
lahf
(bad)
call
int3
pop
int
sahf
lea
push
sub
xor
push
test
cs
cdq
add
(bad)
xchg
adc
sbb
lahf
xchg
mov
sub
(bad)
inc
jp
pushf
sbb
push
mov
add
or
add
fbld
xor
inc
ficomp
mov
jno
sbb
pop
imul
push
not
inc
std
ret
mov
mov
push
xchg
lea
mov
out
fs
fild
mov
mov
xor
leave
xor
call
cli
daa
push
adc
mov
stc
(bad)
into
sub
aas
mov
icebp
rcr
(bad)
and
in
add
and
(bad)
std
sub
mov
pop
int
push
push
out
call
fcomp
jnp
loop
ficomp
cmps
mov
push
mov
pop
cs
inc
lea
mov
mov
cld
retf
jae
sbb
push
adc
call
cwde
aas
add
stos
cmp
pop
mov
dec
adc
cmp
icebp
imul
(bad)
in
mov
adc
lods
(bad)
fiadd
sti
adc
or
adc
sbb
sub
push
push
pop
mov
add
mov
std
adc
lock
jmp
fs
mov
push
jne
mov
ins
loop
dec
mov
arpl
adc
adc
adc
mov
push
push
adc
sbb
mov
xchg
test
xor
(bad)
scas
xchg
jo
or
lods
sbb
(bad)
sbb
mov
pop
adc
mov
pusha
inc
jmp
lods
and
pop
add
mov
fld
inc
mov
push
cmp
call
mov
rcl
or
adc
mov
gs
push
or
scas
mov
ficomp
js
push
sub
mov
inc
and
jns
xor
std
mov
mov
push
(bad)
xor
mov
push
add
mov
cmp
shr
test
jg
lock
aad
inc
int3
push
pop
push
sbb
mov
test
add
retf
retf
mov
loopne
xor
addr16
leave
bound
pop
sub
inc
xchg
mov
sub
retf
xor
dec
ins
and
push
movs
add
sub
nop
imul
push
jle
cmc
jmp
hlt
cs
stos
out
xchg
test
test
adc
pop
outs
out
(bad)
imul
div
jae
mov
lds
lods
es
xor
xlat
mov
pop
test
std
ins
jo
pop
sbb
mov
ret
push
sbb
leave
jae
push
(bad)
fidiv
movs
push
adc
xor
inc
fldenv
jne
test
mov
jne
add
jno
imul
cmp
outs
xchg
mov
stc
pop
and
fwait
or
and
sbb
inc
stos
jnp
jmp
mov
jns
inc
cmps
leave
pushf
out
test
ins
adc
popa
jae
enter
retf
in
push
xchg
int
leave
rcl
iret
sbb
sub
stc
shl
and
test
popa
lods
inc
scas
test
cli
push
push
push
lea
movs
daa
pop
mov
mov
and
sahf
add
in
test
push
pop
cmp
inc
inc
dec
daa
fdiv
mov
outs
mov
cli
bound
and
mov
shl
repz
adc
jae
xlat
cmc
or
inc
mov
lds
and
mul
dec
inc
fmulp
push
mov
xor
xchg
popf
push
test
je
fs
fsub
mov
cmc
push
xchg
out
int3
mov
in
push
cmp
mov
pop
xchg
out
(bad)
call
push
mov
out
mov
mov
nop
leave
stos
xor
and
push
jp
fmul
sbb
add
cld
mov
stc
and
sbb
pop
fisubr
mov
adc
or
stc
mov
sbb
mov
add
pushf
cmp
sbb
mov
cmp
sbb
fcomip
jecxz
aam
shl
sbb
neg
or
(bad)
cmps
ins
popf
(bad)
int3
pop
push
mov
adc
fs
cli
xor
ins
loope
jnp
mov
mov
imul
mov
mov
(bad)
jmp
mov
je
loope
sub
jmp
xchg
push
test
inc
mov
adc
(bad)
sub
in
fbstp
inc
add
sbb
pop
mov
sti
in
jmp
loopne
ficomp
aaa
(bad)
pop
cmp
pop
mov
sub
sub
push
cmp
sub
push
pop
aad
pop
hlt
popf
and
mov
or
mov
push
std
leave
pop
pop
out
adc
aam
adc
pusha
icebp
sbb
dec
push
repnz
cmps
jmp
inc
push
push
cli
pusha
aas
mov
call
mov
pop
mov
cmp
mov
mov
inc
xchg
adc
sub
pop
xchg
and
dec
xchg
dec
xor
add
push
(bad)
lea
add
cs
dec
aad
push
add
je
inc
sbb
push
lock
iret
cmc
inc
addr16
inc
xor
mul
jo
dec
ins
adc
out
ror
repz
jg
leave
mov
sub
mov
sub
leave
cdq
add
mov
mov
aam
call
push
xor
shl
jmp
dec
sub
adc
jge
dec
inc
add
mov
push
add
aas
mov
cmps
pop
lahf
add
pop
loope
pushf
cmps
out
fist
inc
xor
(bad)
cli
pop
jo
les
jmp
sub
pop
outs
and
xor
rcl
inc
fwait
in
sub
push
inc
and
outs
xchg
movs
sbb
int
push
out
data16
fdiv
push
lahf
jge
push
scas
sahf
scas
cwde
cmp
pop
sub
std
jb
ror
leave
xor
xchg
sub
in
(bad)
dec
jl
pusha
(bad)
jmp
shl
lods
inc
add
push
bound
scas
jl
shl
stos
adc
pop
loop
fs
push
add
ret
ror
idiv
inc
and
inc
test
popf
fwait
iret
and
xor
adc
cld
dec
pop
push
icebp
jg
cmp
loopne
push
es
mov
adc
pop
jle
pop
lods
stos
test
xor
out
arpl
add
gs
push
loopne
(bad)
fimul
bound
inc
adc
jnp
pop
fld
adc
rol
dec
retf
add
jo
add
enter
fdivr
add
hlt
sti
leave
mov
imul
xchg
mov
mov
mov
cmc
call
sub
push
mov
pop
div
ret
out
adc
inc
mov
mov
mov
dec
imul
test
jbe
outs
call
data16
iret
and
xchg
inc
test
add
fnstenv
sub
outs
push
jmp
or
inc
popa
nop
es
dec
imul
(bad)
fbld
or
loope
les
mov
mov
dec
movs
es
inc
sub
fstp
ror
or
xchg
dec
cmp
adc
mov
jg
xor
push
and
scas
and
xlat
movs
mov
push
push
adc
fsub
or
and
push
xchg
or
clc
add
or
sbb
push
or
or
pop
pop
jno
jmp
(bad)
test
dec
mov
scas
inc
mov
cmps
enter
pusha
mov
mov
mov
(bad)
mov
aas
or
or
imul
cmps
push
std
or
and
outs
cs
fisub
add
jmp
mov
outs
fwait
in
fcmovnu
pop
xchg
aad
sub
clc
ja
xchg
js
add
dec
cmps
hlt
je
jg
pop
popf
ret
addr16
pop
and
sub
mov
test
dec
xchg
mov
or
fild
mov
outs
add
add
sbb
dec
lods
(bad)
call
(bad)
and
imul
xor
sbb
fld
mov
jmp
ins
movs
loopne
in
shl
(bad)
fist
popa
stos
inc
mov
(bad)
push
stc
inc
mov
js
mov
mov
shl
jo
inc
xchg
ror
dec
ret
jl
addr16
add
xchg
aad
lods
fdivrp
mov
cld
daa
inc
pusha
in
pushf
or
(bad)
js
pusha
mov
sub
(bad)
stos
xor
fnstsw
and
aam
js
leave
push
pop
pop
xor
arpl
fst
cs
mov
in
xor
(bad)
fidivr
stos
mov
cli
xchg
dec
outs
and
and
out
jl
cmps
(bad)
cmps
xlat
jmp
sbb
xor
add
int
cmp
jne
xor
fcom
sub
(bad)
iret
and
les
call
fs
repz
sbb
in
pusha
jecxz
cli
call
mov
or
xchg
jl
cmp
sbb
push
jge
and
xor
xor
adc
cmp
adc
sbb
push
loop
mov
jo
call
shl
push
sbb
imul
mov
dec
push
pop
cmp
mov
xchg
sahf
in
lds
mov
loopne
push
pop
not
mov
inc
xchg
dec
cmc
rcr
rcr
mov
xchg
xchg
adc
pop
ret
sub
daa
es
jle
cwde
lea
sahf
ret
jae
aam
fcomp
retf
push
in
dec
aam
pop
push
ror
pop
repnz
daa
sub
sbb
wrmsr
pop
jnp
sub
in
outs
push
mov
ficomp
cli
push
pop
pop
xor
jno
mov
xor
push
sbb
in
pop
arpl
and
ins
mov
mov
cmp
outs
dec
and
or
sub
lahf
inc
dec
inc
icebp
xor
add
(bad)
and
idiv
in
(bad)
cmp
xor
cmps
adc
cmp
mov
sbb
and
xchg
scas
cmp
sbb
(bad)
pop
ret
jge
xor
dec
mov
dec
sahf
ss
cwde
loop
(bad)
mov
jbe
sbb
mov
fistp
lahf
shl
pop
ins
add
inc
call
or
bound
cwde
xchg
ss
mov
mov
inc
movs
pop
sbb
popa
add
or
dec
mov
inc
add
push
pop
push
mov
cmp
leave
dec
xor
cmp
add
mov
lock
and
fucomip
or
pop
shr
js
mov
xchg
imul
je
inc
mov
sub
movs
ret
mov
push
test
stos
mov
mov
sub
push
and
or
mov
and
inc
jno
cli
adc
mov
cmp
xor
in
mov
jae
add
xor
dec
adc
cmp
cld
cli
mov
sbb
mov
mov
inc
and
mov
ja
xchg
test
ds
movs
je
dec
jo
icebp
or
mov
fdiv
loopne
pop
jno
das
sbb
ret
add
ins
out
int
or
push
cmp
das
outs
cmp
pop
dec
mov
cmp
inc
imul
xor
outs
hlt
ror
xchg
mov
shl
movs
ror
mov
push
inc
mov
sbb
xor
jge
dec
(bad)
push
popa
push
xchg
iret
popf
(bad)
lods
pushf
push
ja
xchg
leave
inc
repnz
adc
stos
lahf
mov
es
cmp
aam
mov
unpcklps
add
mov
cmp
jl
les
fisub
in
or
xlat
ss
inc
(bad)
leave
int
dec
div
dec
push
sti
push
xlat
mov
leave
jbe
mov
fisttp
fisubr
push
ja
jmp
stos
test
inc
outs
lods
in
out
mov
and
pop
adc
aad
jne
and
icebp
aaa
sub
jmp
push
inc
(bad)
jno
xor
icebp
pop
sti
(bad)
push
arpl
fdiv
ss
mov
add
imul
add
mov
push
inc
je
sub
call
stc
call
mov
lods
adc
fsubr
popa
fs
xor
inc
pop
add
xor
jmp
cli
pusha
fs
sub
mov
fistp
enter
and
inc
mov
inc
cmp
aas
out
push
jmp
(bad)
fldcw
push
nop
pop
dec
fidiv
xchg
xor
rcl
test
out
pop
inc
push
fild
xor
inc
lods
xchg
nop
inc
clc
mov
jnp
lock
xchg
inc
mov
call
mov
sbb
cmc
ins
cmc
or
push
clc
xor
mov
or
pop
sbb
mov
(bad)
into
cld
bound
xchg
jae
shl
mov
push
mov
(bad)
jnp
pop
adc
adc
aas
mov
add
imul
cdq
ss
ret
and
xor
repnz
int
repnz
and
mov
sti
sbb
lods
out
xor
fcom
mov
pop
lods
push
lahf
pop
or
iret
into
(bad)
ficomp
into
js
mov
(bad)
push
sbb
jge
mov
push
out
ficom
add
cmps
cmp
popf
fiadd
out
dec
(bad)
xor
cmps
push
add
add
push
and
sbb
inc
out
das
sar
sub
jle
add
and
mov
inc
mov
rcl
sub
fsubp
call
pop
add
cmp
stos
cmp
sar
xor
pop
dec
scas
sahf
jp
or
mov
xor
ror
push
shl
jae
sbb
jg
add
loope
mov
sub
loop
jbe
ror
mov
shl
std
push
ins
jl
or
dec
cmp
imul
xor
fisttp
aad
xor
call
mov
cmps
ja
add
add
lahf
loopne
enter
adc
push
jecxz
jns
jo
push
test
xchg
lods
mov
adc
lods
inc
sti
dec
jno
dec
(bad)
jne
and
jecxz
test
lds
push
test
inc
test
loope
or
xchg
shl
adc
sub
mov
std
mov
xor
(bad)
push
push
loopne
sbb
mov
nop
aaa
sbb
mov
add
cmp
xor
inc
xchg
pop
dec
push
pop
les
pop
jo
sbb
lea
ds
mov
les
mov
adc
sbb
pop
popf
out
dec
jbe
sub
fwait
(bad)
pusha
push
mov
add
pop
cmp
sub
cmc
test
pushf
je
aam
repz
ss
frstor
pusha
scas
or
jmp
(bad)
xchg
or
mov
jmp
dec
inc
push
xor
mov
and
bound
icebp
js
jns
popf
push
add
jmp
lds
mov
xchg
hlt
xchg
adc
mov
or
rcl
cdq
mov
mov
sar
stc
pop
push
movs
not
push
pop
shr
add
cs
mov
xor
pop
out
mov
call
js
dec
xchg
jmp
outs
jecxz
pop
and
pop
and
adc
call
adc
mov
sbb
add
rol
je
mov
xchg
repz
xchg
ins
call
add
cmp
sub
lods
inc
xor
pop
cmps
push
and
lea
ds
adc
mov
xor
adc
mov
xchg
cld
test
pop
popf
aam
adc
js
je
mov
lahf
mov
lods
push
pop
xor
fimul
jg
lea
ds
lock
and
loop
mov
or
lds
push
add
sbb
dec
int
das
fimul
ins
cmp
ins
repnz
mov
stos
icebp
aaa
leave
pop
popa
sar
jp
(bad)
push
test
push
push
sub
loope
hlt
sub
mov
movs
adc
shl
sbb
test
mov
fild
jb
or
jo
xor
ret
pop
pop
push
jnp
add
inc
imul
stos
mov
in
add
mov
mov
outs
push
and
mov
ror
sahf
sub
pop
ins
(bad)
fiadd
or
(bad)
cmp
pop
or
push
and
pop
jb
push
xor
out
ja
iret
into
(bad)
sub
sub
sbb
and
pop
fdiv
scas
sub
movs
inc
xor
repz
push
mov
push
mov
test
movs
xor
or
sub
in
cmc
jae
xchg
dec
(bad)
jle
xchg
int
jge
in
repz
dec
xchg
jmp
or
xor
das
dec
ins
inc
xor
call
jmp
cld
jbe
dec
inc
popf
out
xor
cmps
retf
push
shr
jae
mov
mov
dec
cwde
mov
inc
mov
inc
cdq
mov
pushf
mov
arpl
push
imul
cs
fdivr
aas
mov
enter
retf
iret
push
cmp
test
xor
stos
mov
pop
fcomp
ins
sbb
mov
cmp
or
or
and
xlat
das
push
inc
out
cmc
jmp
mov
pop
fisttp
jbe
ja
scas
xchg
adc
and
stc
addr16
mov
jmp
mov
cs
cld
pop
xor
cld
loope
adc
pop
cmp
ss
ss
test
cmp
out
pop
xchg
in
fnstsw
sbb
xor
outs
in
nop
xor
cmp
mov
test
adc
test
arpl
retf
call
icebp
pop
cmp
(bad)
stc
retf
mov
jg
call
stos
dec
pop
cmps
aad
shl
sbb
sbb
jmp
addr16
enter
ds
into
cmp
add
jae
sub
cmp
mov
nop
pop
scas
in
cdq
ja
movs
xlat
inc
sbb
pop
sbb
outs
sbb
jo
out
sub
arpl
pop
adc
dec
mov
xor
pop
push
cli
movs
and
jl
xchg
cdq
hlt
push
sub
aad
jb
std
adc
xchg
cmp
(bad)
pop
sar
and
fs
test
stos
sbb
xchg
cmp
(bad)
sub
pop
or
jb
xlat
sbb
xchg
xchg
jmp
mov
adc
jo
inc
push
cmps
inc
aam
mov
scas
adc
je
mov
mov
jns
mov
mov
or
push
pop
inc
les
adc
xlat
loopne
xor
xlat
cmp
push
test
jo
jns
jo
jae
push
call
mov
loope
cld
xchg
jb
pop
mov
leave
push
jne
aas
sbb
in
jae
mov
sbb
xchg
sbb
lea
or
push
imul
sbb
pop
mov
jnp
mov
outs
(bad)
xchg
mov
dec
out
les
mov
hlt
das
or
xchg
adc
out
out
rcl
dec
leave
es
repnz
dec
add
adc
es
ror
dec
cwde
sub
pusha
push
add
jg
adc
inc
inc
fdivr
daa
mov
push
retf
ror
jno
pop
mov
into
jae
pop
xchg
push
movs
and
jno
inc
pop
stc
jp
xchg
cmps
mov
pop
gs
ja
xchg
xor
cdq
dec
mov
loope
mov
mov
retf
inc
call
add
jne
add
mov
push
out
xchg
ds
hlt
xchg
push
daa
lds
jb
cmc
pop
hlt
jg
pop
adc
inc
push
pusha
cmp
cmp
add
push
xor
xchg
sub
jno
sub
and
add
jle
call
xchg
loopne
fwait
jp
xor
mov
or
xchg
popf
mov
jmp
in
icebp
cmp
or
es
(bad)
fisttp
enter
lods
jbe
xor
push
lods
imul
mov
cmp
mov
sub
aaa
fidivr
les
imul
mov
ror
pushf
dec
outs
mov
sub
cmp
loop
call
ss
ins
hlt
sub
mov
add
ja
ror
sub
inc
inc
xor
repz
and
ret
push
sbb
(bad)
cmp
pop
sub
mov
rol
push
pop
icebp
add
sbb
loope
dec
mov
les
test
sub
stos
inc
dec
pop
enter
jae
add
fs
pop
push
outs
add
retf
jmp
les
iret
std
lods
or
pop
sub
add
adc
stc
into
cmps
in
mov
xor
adc
pop
pushf
ret
jo
mov
jbe
cdq
sub
rcr
xor
ss
pusha
adc
dec
mov
cmp
cmp
push
jnp
loopne
adc
push
scas
dec
push
sbb
adc
mov
mov
pop
loope
int3
inc
and
cmp
mov
and
into
test
lods
cld
or
push
push
mov
not
call
aas
ins
pop
push
xchg
pusha
(bad)
cmp
nop
adc
dec
xor
fist
outs
imul
adc
xchg
push
sub
pop
push
lea
pop
xor
mov
hlt
or
pop
shl
xor
sbb
mov
or
out
ret
hlt
cmc
mov
daa
repnz
add
dec
push
push
pop
leave
mov
rcl
mov
lea
push
pop
cli
xchg
mov
fs
xor
cmp
add
jbe
jns
jmp
jo
dec
sbb
daa
adc
inc
xor
jle
enter
scas
rol
and
jnp
add
or
push
mov
lock
push
ja
test
sub
aam
mov
imul
mov
fimul
and
push
js
fs
or
clc
lea
test
jnp
jo
pop
fs
outs
adc
jge
adc
int
sub
into
or
xchg
push
push
fwait
mov
lock
dec
or
mov
xchg
outs
imul
cmp
jecxz
ret
inc
(bad)
dec
aaa
xlat
xor
vrcpss
pop
loope
or
sbb
jns
mov
ins
ja
xchg
mov
xlat
fucomp
dec
xor
cmp
lods
shl
stos
adc
and
out
jmp
adc
fidivr
xchg
adc
dec
hlt
push
div
mov
adc
xchg
pushfw
out
pop
repz
aam
out
(bad)
inc
or
mov
push
lods
xor
outs
pop
test
dec
ror
loopne
xchg
in
jae
mov
dec
adc
jae
in
or
cdq
(bad)
sbb
push
mov
pop
jae
xor
out
push
nop
adc
push
cmp
mov
mov
loopne
inc
xor
xchg
xor
pop
push
pop
jmp
popa
xchg
fsubp
pop
sbb
pushf
sub
retf
lods
gs
jmp
or
je
sbb
cmp
mov
stos
inc
jle
div
add
ins
pop
popf
push
xlat
xor
pusha
clc
lods
pop
fidiv
pushf
push
jb
dec
call
ss
lods
dec
mov
mov
(bad)
in
or
mov
fadd
(bad)
push
cmp
(bad)
aaa
stc
lahf
push
leave
cmps
add
call
pop
fnsave
and
add
fld
aaa
inc
jne
xor
push
mov
into
push
adc
leave
dec
loop
out
cmp
or
pop
cmp
vaesdec
outs
jp
or
call
inc
in
imul
icebp
and
lds
leave
aam
jno
mov
jbe
repz
ds
loope
scas
cmp
xlat
retf
(bad)
jbe
int
iret
lds
fimul
nop
adc
jmp
test
dec
mov
push
sti
mov
push
sub
and
(bad)
lock
pop
xchg
inc
jmp
sahf
(bad)
add
imul
ret
inc
xlat
or
mov
cmp
mov
push
jl
lods
(bad)
push
cld
xchg
mul
rcl
adc
jo
repz
push
xchg
mov
mov
ins
jne
xchg
and
and
addr16
pop
aas
sbb
mov
and
jne
adc
mov
inc
mov
inc
ins
mov
sub
loopne
sbb
cmc
mov
stos
sti
dec
dec
pop
fwait
push
push
cld
cmp
mov
in
xchg
imul
jle
lea
sub
xchg
xor
(bad)
mov
sti
aas
add
mov
shl
dec
and
mul
mov
cdq
mov
bound
hlt
and
jbe
sub
adc
inc
xchg
dec
nop
fs
shl
cs
add
mov
mov
fild
imul
and
stos
(bad)
shl
adc
pop
xor
div
mov
xor
outs
push
xchg
pop
ret
popf
jo
add
xor
jbe
out
pop
mov
rcr
cld
sbb
aas
pop
fisub
cdq
cmc
push
fcomp
push
shl
and
sahf
fs
inc
sti
pop
jg
es
push
xchg
jle
xor
aam
xchg
out
sbb
or
enter
dec
fs
dec
push
aas
stc
scas
lock
inc
xchg
sub
cmc
and
inc
nop
pop
xchg
jmp
movs
dec
inc
adc
and
sbb
cmp
cmp
jbe
mov
out
or
movs
test
push
add
xor
pop
sbb
ja
sub
popa
sahf
fxam
icebp
fiadd
popf
daa
pop
stc
cmp
cmp
mov
inc
ret
aas
dec
push
jecxz
push
out
sahf
icebp
mov
gs
out
imul
imul
mov
inc
xchg
cld
mov
mov
test
stc
lock
inc
add
out
adc
and
add
jno
mov
enter
retf
hlt
inc
inc
jo
mov
jae
mov
xchg
lods
xchg
and
daa
lea
in
jns
inc
cdq
stos
mov
aad
mov
push
aad
je
mov
inc
(bad)
in
jmp
ja
jg
aad
xchg
je
pop
iret
pop
push
jno
or
cmp
ss
push
mov
sti
inc
pop
add
sub
mov
mov
jge
retf
pushf
and
test
fld
push
cwde
fidiv
jne
fs
enter
(bad)
xor
and
daa
sub
int
loope
fdivr
mov
xchg
mov
xor
std
sub
sub
push
xchg
inc
or
mov
aam
mov
adc
pop
daa
or
punpckhbw
test
stos
loopne
dec
jge
lods
fldln2
mov
push
popf
daa
mov
js
in
loop
mov
std
mov
pop
loope
into
mov
adc
not
inc
push
ret
mov
jp
mov
repnz
adc
dec
dec
hlt
ret
test
in
push
adc
push
xchg
enter
fstp
pop
push
dec
lds
repz
cli
sbb
int3
cli
jnp
pop
imul
call
cmc
sbb
pop
stos
iret
call
out
add
jno
pop
call
test
xlat
imul
call
push
call
mov
icebp
add
adc
jns
cmps
fisttp
and
jg
cmp
cmp
test
xor
fsubr
cmp
lock
sub
pop
(bad)
mov
mov
jb
pop
push
inc
loop
adc
and
pop
(bad)
scas
xchg
inc
(bad)
dec
mov
push
fwait
add
movs
pop
mov
sbb
pop
push
pop
es
pop
aad
lods
sti
adc
push
xchg
std
add
sbb
mov
jnp
loopne
mov
shl
mov
std
add
jecxz
(bad)
mov
push
in
xor
jbe
test
aas
sbb
push
out
sbb
xchg
sbb
bound
inc
stos
add
and
and
cwde
add
dec
xor
push
out
xor
sbb
loope
jne
sbb
pop
mov
test
inc
repnz
sub
scas
pop
pop
push
mov
jno
stc
sti
jae
jmp
not
and
mov
jo
inc
(bad)
jae
cdq
mov
or
in
leave
pop
mov
push
rcr
and
popf
push
cmps
push
retf
jmp
shl
dec
leave
sbb
addr16
and
fld
aad
neg
mov
pop
mov
aaa
mov
pop
cmp
sub
mov
xor
mov
jbe
out
iret
push
test
mov
dec
and
adc
inc
call
xchg
inc
jl
sbb
sub
sub
mov
lods
enter
cmp
repz
and
push
cli
cld
fld
fcom
lods
pop
fisubr
gs
in
add
push
ins
cmp
imul
aaa
stos
or
push
pop
jb
push
iret
or
pusha
mov
lock
iret
jno
jbe
mov
in
or
cmp
pop
imul
or
scas
(bad)
mov
fdivp
xor
xchg
inc
sbb
pop
jl
add
mov
jl
lods
mov
and
jle
and
int3
cmc
push
push
cs
(bad)
std
(bad)
scas
sub
adc
or
add
jns
repnz
std
call
jnp
xchg
add
mov
int3
ret
jnp
adc
xchg
push
mov
stc
jo
rol
sbb
loope
lahf
js
and
scas
in
sub
inc
mov
adc
popa
xchg
not
out
repz
or
xor
mov
push
sbb
jae
sbb
vpcmpgtw
stos
sbb
loopne
movs
inc
jmp
jnp
loope
imul
movs
xor
jnp
aam
jb
mov
inc
dec
outs
lds
mov
lea
pop
jge
loopne
or
mov
in
movs
cld
cmp
or
and
int3
add
pusha
mov
mov
jmp
out
pop
in
cmp
adc
or
jnp
push
cmc
sub
nop
xor
xor
in
add
dec
sub
loope
movs
rcr
(bad)
loop
not
jo
cmp
mov
popf
test
sbb
je
jmp
mov
xchg
lahf
movs
lods
inc
lock
sub
outs
retf
jne
push
jnp
fwait
dec
push
stc
mov
inc
stos
pusha
js
sbb
pop
imul
xchg
call
sti
jp
call
jge
popa
out
xor
adc
inc
ins
call
and
mov
jne
jl
sti
mov
dec
cmp
mov
inc
mov
jmp
adc
or
je
add
outs
mov
out
jl
icebp
stos
aas
push
adc
jo
adc
cmp
or
or
or
cdq
out
cwde
cs
pop
test
arpl
lods
repz
dec
out
xlat
scas
call
test
dec
inc
mov
cli
sbb
pop
outs
sar
mov
inc
rcr
lea
das
(bad)
call
dec
mov
and
mov
sbb
mov
mov
ins
xchg
cdq
jmp
or
xchg
sub
mov
sub
add
dec
ret
popa
lods
test
retf
push
shl
(bad)
out
hlt
aaa
call
aas
(bad)
pop
mov
xchg
and
sub
xchg
dec
test
fld
cmp
shl
cwde
aaa
aam
mov
lock
push
add
jbe
retf
or
xchg
(bad)
pop
loope
mov
xchg
and
cmp
into
in
mov
bound
mov
dec
movs
cmp
loopne
movs
push
fs
loope
retf
out
in
cdq
fisttp
seto
mov
pop
shl
retf
std
aas
xor
cwde
out
dec
call
aam
shl
add
push
and
bound
gs
gs
jnp
adc
icebp
in
dec
mov
test
pop
jbe
dec
out
push
imul
mov
cld
jnp
hlt
mov
imul
jg
pop
xor
pushf
movs
test
pop
or
push
shl
or
mov
fistp
dec
add
loope
in
mov
out
iret
movs
pop
xchg
cmp
shl
or
rol
scas
sar
clc
mov
adc
push
pop
cmp
(bad)
in
gs
push
in
sbb
cs
repnz
mov
ss
push
test
out
cmp
and
jge
lea
outs
pop
cmp
dec
hlt
rcr
jno
pushf
mov
jmp
xchg
call
fisttp
mov
add
pop
xor
repz
xchg
popf
call
inc
outs
dec
dec
dec
sub
cmps
fs
into
pop
xchg
push
shl
mov
les
sar
jmp
retf
adc
in
xor
pop
xlat
test
add
lock
sub
add
dec
pop
nop
xchg
xor
xchg
mov
test
xchg
mov
inc
mov
std
ret
mov
outs
jg
ins
xchg
fs
adc
jnp
adc
dec
and
into
xlat
mov
sti
fistp
shr
adc
popa
div
cmp
sahf
add
xor
cs
push
fistp
out
push
mov
ret
sbb
pushf
call
outs
popa
iret
lock
pop
js
fistp
xor
fnsave
mov
mov
mov
hlt
div
add
lods
in
push
les
sub
and
daa
dec
add
cmc
mov
xchg
fmul
and
(bad)
dec
or
(bad)
cmp
xchg
retf
js
mov
jmp
iret
push
fcomp
mov
int
clc
dec
dec
inc
cs
xor
mov
jns
jle
iret
pop
cli
jmp
push
jge
fcomp
pop
push
enter
xchg
xchg
inc
cmps
ret
mov
iret
fisttp
jae
sub
mov
or
push
cmps
mov
sub
bound
arpl
xlat
or
dec
js
ss
ja
xlat
cmp
pop
shr
jge
xor
nop
mov
jbe
xchg
mov
pop
xchg
not
es
push
imul
loop
hlt
sar
mov
inc
lea
push
clc
outs
fidivr
ins
lea
cmp
imul
loop
xchg
icebp
pop
repnz
cli
pop
pop
pop
call
add
jbe
pop
lock
rcl
or
jns
lods
or
mov
retf
cmp
mov
jmp
xor
js
mov
mov
hlt
nop
ja
mov
push
xchg
repz
arpl
pop
xlat
mov
ror
jae
enter
jo
dec
loopne
cmps
or
push
scas
shl
(bad)
pop
sbb
cmp
inc
nop
jmp
hlt
mov
int3
and
mov
xor
adc
push
je
mov
out
xor
add
(bad)
mov
lods
push
add
push
cmp
ja
hlt
sub
daa
xor
dec
push
jp
std
dec
inc
add
mov
aaa
sub
sub
mov
in
ds
mov
mov
ja
and
bound
loopne
xor
call
inc
or
out
rcr
jmp
sti
push
push
(bad)
mov
mov
cmc
ins
add
dec
rol
test
or
repz
repz
std
pop
pop
push
imul
push
pop
adc
ins
pop
push
pop
rcl
or
jnp
jns
aad
ins
fdivrp
jmp
mov
cld
cmp
jl
or
inc
call
pop
shl
or
cmps
das
bsr
pop
dec
mov
test
jmp
(bad)
es
out
scas
cmp
pop
cmps
(bad)
ds
and
lods
jo
ss
jb
push
ins
pop
push
dec
and
pusha
ins
lock
fiadd
xchg
adc
(bad)
xchg
inc
pop
push
sbb
int3
jmp
aad
test
cmc
or
add
ins
xor
jecxz
push
sub
retf
sbb
sub
jo
adc
out
cld
shl
mov
ds
icebp
ins
xchg
dec
cmp
fistp
sub
mov
fcom
mov
sub
int3
adc
add
cmps
jne
pop
mov
push
and
xchg
push
jns
(bad)
sbb
enter
cmp
call
addr16
pop
or
aas
cld
cmp
jmp
loop
fwait
pop
fldenv
std
push
cmps
ret
aaa
xchg
dec
jl
mov
add
leave
pop
scas
push
push
repz
inc
neg
pop
sub
lock
mov
shr
cmps
and
int3
dec
pusha
dec
jbe
das
mov
dec
push
fsub
sub
adc
into
rcr
ds
ins
(bad)
sbb
sysret
pop
lahf
jle
fdiv
pusha
inc
push
push
out
daa
fwait
sbb
mov
stos
pusha
inc
mov
ja
lods
sbb
adc
repnz
jns
fmul
mov
adc
ja
mov
mov
sar
pop
dec
push
inc
cmps
push
push
xchg
xchg
adc
mov
dec
movs
(bad)
jmp
scas
cmps
inc
fs
inc
sar
fistp
adc
xor
test
xchg
mov
ja
inc
cmc
mov
pop
bound
xor
mov
ret
xor
mov
or
xor
jmp
fwait
mov
leave
adc
pop
cmp
out
aas
mov
lea
cmp
loopne
fwait
push
imul
shl
retf
imul
rol
mov
inc
pop
cli
adc
fnstenv
mov
mov
rcr
xor
mov
lods
mov
cmp
cmp
inc
mov
test
jne
cmp
mov
add
ss
dec
call
or
jmp
adc
(bad)
sub
dec
leave
cs
stos
daa
add
repz
sahf
dec
add
adc
rcr
pop
and
mov
clc
mov
retf
cmp
push
dec
mov
sbb
inc
mov
rcr
dec
adc
dec
ret
xlat
(bad)
and
jmp
or
aas
cmps
ja
sti
dec
push
outs
shl
cmp
push
scas
fiadd
dec
in
out
mov
sub
push
jecxz
sar
div
dec
mov
mov
les
ins
fcmovnb
add
ret
int3
cmp
pop
add
add
sub
adc
outs
stos
sub
xor
ins
in
jnp
clc
dec
dec
jno
xchg
sub
scas
movs
mov
mov
movs
test
ds
xchg
scas
ins
and
pop
adc
rcl
ds
xchg
cld
icebp
fistp
loope
mov
nop
adc
and
jmp
mov
aaa
cmp
daa
out
test
jp
and
test
fdivrp
fadd
push
xor
icebp
inc
add
js
mov
ret
in
inc
ror
mov
xchg
sbb
inc
pop
push
leave
push
out
lods
sahf
sub
aam
and
mov
pusha
pop
data16
out
cmp
mov
ret
cmp
mov
clc
out
retf
push
sbb
cmp
jmp
lds
mov
sbb
call
pusha
sub
sbb
test
sbb
fld
popf
sub
or
fisub
sub
retf
shr
aam
loope
mov
stc
jns
cld
retf
xlat
inc
jne
mov
jae
mov
jp
cmps
sahf
sbb
aad
ficomp
(bad)
fcom
(bad)
test
or
inc
mov
fs
jg
in
or
mov
pop
pusha
sti
jb
jne
push
popf
syscall
pushf
mov
inc
dec
sub
andps
sar
dec
xor
fcomp
jmp
xchg
adc
xlat
clc
adc
fisttp
pop
ret
add
sbb
inc
out
jb
inc
jae
sub
jnp
shl
fst
mov
call
repz
fistp
mov
cmp
inc
loopne
jo
push
dec
test
push
xchg
cmp
(bad)
popa
je
cdq
pop
xor
pop
cli
loop
out
ja
cmp
cwde
inc
mov
cmp
ret
(bad)
jne
mov
(bad)
ret
int3
inc
xor
pop
push
in
adc
or
mov
and
inc
or
inc
shl
add
jae
mov
jns
stc
outs
adc
pop
sub
or
loop
mov
xor
pusha
iret
out
push
call
scas
pop
xchg
mov
ins
pop
mov
aam
in
ret
mov
(bad)
sti
mov
rcl
xchg
idiv
imul
lods
push
pop
sbb
ret
inc
aas
data16
xlat
cmps
add
(bad)
mov
in
inc
cmp
sar
popf
adc
mov
push
ins
cwde
add
rcl
retf
add
cmp
mov
cli
adc
cmp
ret
jle
aad
cmp
mov
clc
cmp
jns
adc
cmps
push
int
xor
sub
fwait
sbb
sbb
and
ror
retf
in
into
cmp
ret
adc
push
push
icebp
or
adc
inc
ss
(bad)
cmp
rcl
dec
cmp
jnp
je
outs
pop
clc
imul
cli
(bad)
(bad)
mov
dec
sbb
xchg
lods
ret
lock
bound
inc
hlt
or
add
lods
(bad)
std
retf
arpl
xchg
mov
jmp
ins
sub
cmp
push
cmp
mov
cmp
mov
arpl
add
mov
fcom
push
push
pop
push
pop
push
and
jl
or
pop
ds
(bad)
scas
lds
call
dec
mov
test
cmp
xor
ret
sti
fwait
and
ss
xchg
mov
mov
sbb
stos
clc
fnstsw
daa
dec
lea
aas
or
cld
lods
in
sub
pop
jmp
in
jo
clc
mov
mov
xor
add
push
imul
fwait
and
jbe
out
dec
sub
pushf
pop
xchg
or
dec
ficomp
pusha
sub
jo
add
push
aaa
dec
outs
call
(bad)
mov
or
sub
(bad)
jno
lods
in
xor
popa
cdq
xchg
pushf
lea
mov
mov
jbe
cmps
inc
gs
mov
leave
mov
dec
dec
jp
pop
and
(bad)
pop
inc
dec
mov
dec
inc
fwait
and
(bad)
fst
movs
add
lods
adc
xchg
cs
imul
leave
dec
add
push
adc
pop
jle
sub
(bad)
shl
add
xor
(bad)
lds
mov
sar
pop
movs
sbb
xchg
imul
sbb
mov
pop
in
add
cld
jbe
(bad)
dec
mov
and
sub
les
add
cmc
outs
test
call
data16
idiv
xchg
sub
mov
push
cmp
int
xorps
ins
xchg
sbb
int3
push
xchg
lock
lahf
fs
push
xchg
jnp
sbb
stos
in
or
addr16
ror
sbb
cmp
jno
jg
out
or
or
xor
ret
popa
idiv
mov
xchg
das
in
mov
inc
jl
in
xchg
sub
xor
xchg
pop
inc
pop
int3
add
push
stos
push
mov
jns
(bad)
mov
or
test
retf
adc
movs
jae
ins
lods
cdq
mov
jg
loopne
mov
sbb
jnp
ficom
jmp
cmc
mov
fstp
mov
(bad)
mov
sti
mov
popa
stos
mov
rcr
ficom
(bad)
call
add
cmp
ror
lods
lahf
or
add
cmp
loop
scas
push
addr16
neg
and
xor
adc
add
ret
and
ins
test
xor
xchg
popf
mov
shl
mov
call
jge
stos
jmp
dec
test
xor
cmp
fst
das
imul
adc
cmp
xchg
lods
rcr
sahf
adc
push
pop
xor
ins
cmps
pop
xchg
movs
xor
stc
in
out
stos
xchg
addr16
jecxz
aas
sub
push
add
push
ins
mov
and
in
leave
xchg
mov
inc
scas
sbb
mov
mov
stc
sbb
imul
pop
fwait
out
sbb
jg
dec
sbb
mov
push
push
fcomp
scas
mov
inc
gs
je
pop
mov
les
loopne
jbe
rcr
dec
jmp
int
stc
inc
push
lea
and
cmp
adc
stos
inc
rcr
inc
mov
lods
fs
push
cmp
cmc
hlt
pop
push
xchg
mov
and
out
jecxz
fild
repz
sbb
movs
stos
mov
test
aam
mov
imul
or
sbb
stos
push
adc
xor
jge
or
lods
sub
jge
jns
sub
dec
lods
(bad)
shl
fst
movs
add
out
inc
bound
repz
mov
cs
call
repnz
aaa
gs
out
or
jo
std
test
dec
nop
pusha
gs
and
lds
pop
xor
and
icebp
leave
sub
and
int
jo
and
add
cmp
push
test
call
out
ret
pop
jecxz
movs
mov
xchg
xor
call
sbb
fisttp
je
jae
aad
aad
pop
pop
mov
lock
and
sub
popf
mov
int3
cwde
fist
mov
mov
(bad)
mov
inc
call
pop
sub
ds
popa
push
stos
test
push
int
call
loop
sub
ret
inc
fcomp
push
fnstsw
inc
jno
mov
dec
xchg
jmp
push
push
sahf
mov
xor
pop
push
push
sub
cmp
sub
sahf
das
call
(bad)
stc
fild
(bad)
and
dec
xchg
leave
mov
push
std
mov
dec
test
out
lahf
inc
sbb
jb
aas
loop
iret
cdq
enter
sbb
jmp
jg
(bad)
in
lods
div
sar
movs
xchg
pushf
(bad)
and
rcr
retf
jo
dec
mov
(bad)
push
jecxz
xor
mov
or
out
and
push
mov
jnp
xor
movups
jmp
movs
mov
dec
mov
jns
inc
mov
fisubr
lods
push
test
scas
rol
in
xor
sar
mov
xchg
xchg
or
iret
test
push
push
jno
jmp
mov
aad
dec
push
push
cmp
mov
or
stos
icebp
jno
jl
loopne
cdq
or
ins
retf
pop
sub
jbe
fadd
jl
movaps
or
gs
jle
loopne
and
imul
seto
cmc
mov
jp
ins
mov
pop
mov
shr
out
fsubr
sbb
retf
push
xchg
cmp
in
mov
adc
and
data16
push
mov
idiv
sti
xchg
inc
mov
out
sub
jns
(bad)
inc
lods
in
inc
push
loopne
mov
mov
pop
lock
retf
dec
xor
data16
sbb
xor
xchg
sbb
jp
retf
dec
xchg
mov
adc
iret
in
mov
or
sti
push
cwde
cmps
ja
lock
repnz
push
movs
mov
or
xchg
and
pop
jbe
arpl
push
sbb
add
(bad)
dec
mov
imul
jae
cmps
ins
push
mov
jg
sbb
xchg
test
(bad)
iret
push
mov
dec
addr16
mov
inc
loop
or
cmc
jp
icebp
loope
push
jmp
mov
std
(bad)
cmc
mov
cmc
sbb
mov
js
(bad)
retf
mov
das
dec
sub
xchg
push
sbb
inc
pop
iret
mov
push
xchg
xchg
ficom
sub
and
dec
mov
out
ins
(bad)
cld
pop
pop
inc
stos
retf
js
(bad)
into
push
stos
inc
int3
sbb
adc
mov
outs
mov
mov
fild
inc
pop
outs
sbb
fld
push
ficom
mov
inc
cmp
jae
in
test
sti
imul
es
add
mov
ret
scas
xlat
repz
fs
call
call
(bad)
mov
sbb
and
mov
jno
pushf
inc
stc
test
ins
imul
cmp
push
test
push
xor
shl
pop
cld
arpl
xchg
sub
(bad)
push
sub
bound
jl
test
push
data16
(bad)
mov
jbe
add
xor
jmp
cmp
adc
or
aaa
mov
add
test
std
aam
jmp
adc
mov
out
xor
scas
pusha
inc
add
mov
hlt
pop
mov
pop
add
mov
fcomi
mov
das
fcomp
dec
pop
icebp
sahf
call
inc
stos
es
cmp
les
out
jge
leave
int3
jmp
mov
repnz
fisttp
aam
clc
je
or
aad
ror
pop
ret
sbb
jp
shr
sbb
mov
xor
jne
fisub
mov
mov
add
addr16
sub
aam
or
fisttp
jp
or
pop
mov
pop
mov
push
aam
retf
aas
mov
and
int
xchg
push
lds
push
js
icebp
leave
sub
lea
sub
test
dec
sub
sbb
mov
sbb
jb
retf
enter
jae
inc
cmp
pop
mov
outs
jecxz
scas
inc
je
jo
or
mov
mov
aad
and
mov
data16
fnstcw
rcr
cmp
fild
jbe
mov
cld
sub
jl
or
(bad)
out
pop
ret
addr16
pop
adc
arpl
(bad)
into
jo
fcmovb
sbb
pop
push
push
xchg
(bad)
cmp
inc
and
mov
sub
test
ror
and
or
fcomi
adc
adc
test
neg
mov
(bad)
xor
aas
test
push
and
call
mov
xchg
push
in
dec
push
push
clc
mov
and
mov
loopne
sti
cld
call
mov
lahf
mov
fucom
sbb
mov
push
bound
push
inc
loope
es
sbb
xor
sub
and
repnz
xchg
fucomip
gs
mov
push
pop
les
mov
xlat
adc
add
gs
mov
sbb
idiv
arpl
scas
in
ins
cmp
push
not
mov
not
push
dec
sahf
out
dec
and
popf
mov
icebp
pop
cmp
jg
cld
sbb
(bad)
scas
jnp
stos
dec
inc
lds
xor
add
data16
cmp
cmc
mov
jg
and
(bad)
pop
retf
test
call
rol
sub
dec
xlat
hlt
mov
stos
imul
xchg
pop
inc
inc
jns
jecxz
mov
int3
xchg
jns
sub
nop
dec
mov
cld
popa
and
aam
paddb
push
cmps
fnstsw
dec
daa
sbb
inc
loopne
mov
inc
ss
mov
(bad)
push
jl
pusha
cli
pop
ffreep
sbb
push
sub
clc
inc
out
test
sub
or
inc
xlat
lods
fcomp
push
cmp
mov
inc
inc
popf
pushf
mov
sub
jle
sub
je
add
test
xchg
imul
in
scas
in
or
stos
jg
(bad)
mov
mov
jbe
inc
pop
call
mov
scas
nop
xor
cmc
jae
movs
xchg
pop
push
cmc
push
sbb
jg
call
aaa
add
sub
cmp
mov
imul
jl
neg
movs
retf
ins
or
xor
outs
mov
scas
lea
sti
jg
pop
adc
cmp
cmps
mov
jnp
add
gs
jmp
sbb
dec
adc
mov
jmp
jnp
pop
mov
push
fild
jno
pop
xor
iret
addr16
aad
loope
imul
call
add
dec
xchg
mov
mov
mov
push
push
dec
jae
in
loop
sbb
repz
in
(bad)
enter
(bad)
push
push
inc
push
repnz
jecxz
aas
and
dec
mov
mov
in
add
sub
dec
sub
icebp
clc
mov
lea
jns
lods
fwait
push
lds
inc
mov
out
sbb
sahf
std
mov
scas
adc
jg
inc
mov
sbb
mov
inc
sub
cmp
imul
bound
cli
cmc
adc
popa
adc
jmp
out
push
(bad)
jbe
scas
outs
sbb
and
inc
and
(bad)
push
(bad)
mov
mov
dec
leave
or
iret
dec
rcl
mov
in
pop
lock
inc
icebp
bound
call
jg
shr
int3
dec
(bad)
sub
loopne
mov
and
std
push
out
add
ins
jg
hlt
jnp
int3
iret
sbb
cdq
out
test
loopne
push
mov
inc
lods
(bad)
mov
inc
mov
mov
not
inc
imul
xor
retf
cmp
in
scas
xchg
aam
add
std
pop
adc
je
mov
aam
or
or
pop
out
sar
push
jns
cli
mov
arpl
clc
scas
mov
adc
retf
pop
aad
(bad)
ins
mov
mov
or
imul
mov
fsubr
popa
into
out
iret
push
mov
clc
mov
imul
pop
or
jno
add
inc
push
daa
sahf
int
jmp
aas
test
pop
and
or
or
fist
cs
stc
cmp
pop
stc
mov
out
add
pop
(bad)
retf
adc
out
push
inc
test
mov
push
out
jne
pop
xchg
ficomp
sbb
pop
lea
in
dec
(bad)
ror
out
loop
or
les
icebp
push
adc
push
dec
lods
or
dec
adc
cdq
mov
push
and
dec
movs
and
push
pop
test
je
sbb
jns
xor
pop
pop
(bad)
inc
scas
imul
cmp
jl
fsubr
pop
mov
sbb
cmp
loope
inc
sbb
jns
inc
xchg
ss
push
sub
hlt
push
xor
dec
adc
xor
fnstenv
loope
addr16
les
dec
push
int
push
in
or
xor
mov
push
jecxz
lahf
cmp
cmc
iret
fcmove
inc
scas
mov
retf
sbb
adc
or
cmc
leave
mov
add
fs
pushf
or
dec
adc
sbb
pop
inc
mov
addr16
or
mov
cld
jmp
rcr
push
mov
jecxz
movs
or
lahf
xor
les
or
rcl
xor
jp
(bad)
in
xchg
popa
sbb
pop
mov
xchg
arpl
mov
dec
jae
in
and
inc
dec
gs
mov
sbb
inc
mov
xor
xchg
dec
and
pop
xchg
mov
sahf
sub
pusha
inc
xor
ret
std
jbe
jle
sbb
sub
in
adc
movs
xchg
popf
sub
sti
or
push
mov
and
popf
cli
pop
xchg
pop
or
jp
jge
clc
lahf
adc
push
jno
dec
dec
mov
retf
cdq
jmp
adc
or
inc
pop
xchg
xlat
cmp
int3
mov
push
mov
pop
loop
dec
cmp
inc
das
std
xlat
int3
jmp
or
aaa
xchg
sahf
bound
sbb
gs
push
outs
xchg
lock
inc
inc
arpl
inc
pop
int
inc
(bad)
repnz
mov
ret
mov
fild
jge
mov
sbb
lds
cli
or
lods
push
adc
pop
ret
movs
int3
push
cs
imul
cmp
sti
xchg
inc
lods
imul
push
inc
gs
sub
mov
mov
adc
xor
ror
loop
test
xor
ss
mov
xchg
retf
fdiv
adc
dec
cmps
inc
outs
sub
sbb
pusha
gs
popf
and
dec
push
sti
add
jb
daa
jp
mov
shl
inc
mov
sub
xor
jg
xchg
call
stos
sbb
daa
call
je
dec
cmc
mov
cmps
add
jl
(bad)
jmp
in
jns
leave
add
jb
sub
in
int
or
sub
push
hlt
inc
shr
or
xor
adc
imul
push
inc
xchg
scas
jp
cmp
(bad)
and
push
mov
(bad)
xlat
mov
xchg
or
dec
neg
jb
mov
jl
mov
sbb
dec
pop
xchg
xor
jmp
aam
adc
jae
sub
push
mov
adc
xlat
leave
retf
adc
mov
imul
sbb
dec
outs
xchg
xchg
dec
and
dec
add
loope
aas
cmp
jne
shl
test
adc
ficom
jmp
jne
daa
mov
aas
mov
inc
dec
test
push
push
xor
jb
inc
fs
pop
retf
ret
mov
push
sbb
jns
dec
pop
cmc
div
xchg
fsub
out
sub
dec
jge
xchg
test
sti
mov
mov
(bad)
cmp
popa
sbb
fs
arpl
xchg
inc
iret
xor
or
add
xor
dec
iret
xchg
sbb
xor
std
sub
(bad)
sbb
fcmove
mov
push
push
stos
push
xchg
imul
jno
and
mov
jns
jge
xor
jecxz
fcmovu
lock
dec
loope
pop
cs
pop
mov
mov
mov
pop
popa
and
jp
sahf
aad
cmp
ds
inc
xchg
retf
jno
xor
or
loope
mov
sub
add
mov
(bad)
xlat
mov
ret
dec
jbe
les
dec
sub
push
mov
cs
push
push
loope
sub
ror
adc
and
mov
mov
push
xchg
retf
push
cmp
mov
add
mov
fdivr
and
repz
(bad)
jecxz
neg
push
xchg
sub
push
mov
cmp
je
adc
pop
cmp
scas
add
loope
sbb
and
jp
add
cwde
xchg
stos
inc
hlt
xchg
inc
push
sbb
in
addr16
or
fwait
fwait
jmp
inc
push
sub
movs
fs
hlt
dec
pop
aam
dec
mov
mov
ret
mov
fdivr
pusha
push
fsubp
fstp
xchg
jbe
lods
loopne
mov
sbb
ret
mov
das
imul
(bad)
pop
mov
mov
pop
fist
add
popa
xchg
sahf
jae
pop
dec
popa
pop
xchg
and
pop
xor
aad
cdq
leave
jl
inc
std
movs
xchg
push
rcl
daa
cs
add
lahf
sahf
pop
dec
ret
sbb
xor
push
adc
jbe
push
xor
and
sti
mov
test
je
push
nop
jbe
movs
inc
movs
dec
inc
gs
jmp
stc
pop
retf
test
repnz
xchg
push
(bad)
aas
test
call
aaa
fdiv
add
jo
shl
jmp
push
lahf
popf
mov
iret
push
cmp
pushf
pushf
xor
sahf
jne
xchg
gs
(bad)
mov
push
call
arpl
call
mov
movs
jmp
popf
mov
cvtdq2ps
push
mov
paddw
cmc
(bad)
xchg
pop
xchg
in
xlat
popf
add
and
das
ror
stos
or
pushf
pop
es
cli
popa
fidiv
jp
pop
jbe
sbb
call
jecxz
enter
xchg
and
retf
pop
inc
xchg
mul
add
cmps
cmp
jg
inc
mov
jmp
in
sbb
pop
pop
fwait
mov
ss
pop
push
fsub
hlt
xor
sbb
fnstcw
sub
mov
ins
jl
xchg
push
(bad)
retf
pop
mov
rcl
adc
aas
sub
and
cmp
outs
lds
xchg
mov
push
mov
pop
inc
cmp
aaa
jle
pop
test
call
jp
sub
(bad)
xchg
pop
push
dec
adc
fsub
(bad)
adc
js
xor
or
jns
mov
pusha
and
loope
std
fsubr
mov
xor
nop
mov
xchg
loopne
xor
cmp
test
movs
aaa
sub
retf
out
mov
xchg
test
(bad)
lds
mov
fisubr
mov
fcmovu
retf
sub
jbe
mov
in
sar
add
cmp
mov
xchg
xor
stc
cmc
jno
push
push
sub
cmps
mov
pop
daa
mov
cs
xchg
(bad)
cmps
rcl
imul
aas
cld
push
mov
movs
push
or
and
push
(bad)
sbb
add
mov
rol
out
push
lds
cmp
jns
fild
fwait
mov
pop
dec
or
(bad)
ja
xchg
pop
mov
cdq
sar
pop
(bad)
xor
jb
pusha
pop
jle
xchg
add
sahf
scas
retf
pop
int3
pop
mov
(bad)
imul
fnstcw
adc
or
cs
xor
(bad)
scas
(bad)
xlat
mov
pop
int
and
lods
push
scas
repnz
mov
mov
int
cli
aam
jp
daa
(bad)
xor
dec
adc
mov
mov
lods
sub
out
pop
xchg
dec
in
mov
xor
mov
jo
dec
inc
push
push
shr
xchg
lea
outs
inc
mov
aam
add
stos
mov
xlat
fild
jp
push
pop
stc
pop
jae
ret
div
xchg
inc
ficomp
call
push
add
xlat
mov
jno
scas
push
sbb
es
rcr
and
xor
pop
pop
stc
sub
and
xchg
or
push
inc
lock
xchg
popf
push
jmp
sub
and
lds
jbe
mov
and
cwde
ja
jg
and
cmps
jne
lods
push
jmp
xchg
mov
jp
or
xor
(bad)
sbb
cmps
add
dec
ret
sbb
std
scas
call
(bad)
sti
ret
mov
and
jbe
mov
xor
jae
bound
xor
ss
sar
mov
lods
adc
nop
mov
daa
mov
fisttp
dec
adc
or
cmp
(bad)
dec
cmp
or
data16
xor
test
cmp
outs
lods
stc
add
cli
aam
call
mov
lea
mov
ss
or
in
or
pop
iret
ds
test
popf
jmp
pop
mov
into
js
test
imul
call
sub
dec
fucomp
inc
push
arpl
jecxz
sub
mov
mov
and
mov
aaa
test
int3
ret
pop
inc
shl
leave
push
xchg
fmul
pop
pop
ja
cmp
rsm
rol
push
mov
stc
lods
nop
aas
inc
sbb
cmp
add
in
test
push
and
fild
fnstcw
sbb
jg
js
pop
das
loopne
xor
mov
pop
fimul
jp
aas
mov
push
and
mov
push
dec
cmp
pop
(bad)
xchg
adc
mov
mov
jae
adc
ins
fcomi
cmp
mov
jbe
sub
and
lods
sbb
pop
xor
hlt
stos
sbb
fcomp
pop
push
movs
cwde
retf
lock
dec
xchg
fcom
cmp
dec
imul
inc
pop
jne
pushf
adc
add
jp
sub
push
in
jle
mov
mov
xor
push
rcl
(bad)
in
leave
sbb
push
adc
ds
fs
loop
xchg
test
imul
loopne
int
sbb
jl
push
or
nop
inc
xchg
addr16
mov
xchg
cld
imul
xchg
cmps
pop
mov
fs
sbb
mov
sub
aam
je
mov
inc
lahf
out
out
xor
or
mov
repnz
setge
int
sub
cmp
fist
fidiv
pop
xor
fs
nop
mul
popa
dec
adc
cmps
test
adc
push
enter
add
mov
sub
sbb
xchg
jle
xor
sub
xor
loopne
repnz
scas
or
cmp
repz
gs
fs
xchg
sar
jo
sub
cmp
rcr
ja
clc
mov
jne
push
mov
and
cmp
cs
pop
es
sub
es
mov
in
test
mov
aas
mov
je
imul
cld
xchg
jo
aad
add
pop
add
cmp
arpl
sbb
int
xchg
outs
in
xchg
clc
sahf
mov
sub
lock
test
add
add
jecxz
push
fdivr
ret
sub
jno
inc
jo
in
jecxz
adc
adc
jns
inc
shl
pop
inc
inc
jecxz
je
jmp
pop
xchg
dec
xchg
sar
imul
xor
in
mov
int3
cmps
cmps
mov
fcom
jns
mov
das
push
inc
adc
xchg
retf
mov
out
in
shl
iret
and
or
fstp
lds
jle
push
inc
mov
mov
pop
pop
pop
jno
js
cdq
lahf
in
or
inc
out
ss
aaa
loopne
mov
mov
test
and
test
xlat
inc
sub
test
lods
add
mov
add
mov
dec
gs
mov
jns
mov
scas
xor
jle
cdq
out
aaa
movs
xor
pop
cmp
push
xor
add
mov
scas
addr16
cli
add
test
sub
imul
outs
inc
data16
mov
(bad)
dec
pusha
xor
call
in
outs
movaps
sbb
jo
xor
push
fs
hlt
push
or
fs
and
fsub
(bad)
(bad)
(bad)
nop
and
shl
(bad)
sub
xor
jno
fs
mov
xchg
call
sbb
mov
mov
sub
in
push
call
(bad)
add
dec
adc
or
bound
stos
adc
(bad)
jmp
outs
and
xor
cmp
test
mov
fsubrp
shl
push
xor
dec
(bad)
movs
mov
push
std
fistp
rol
mov
sub
cmc
push
and
inc
push
pusha
push
sub
xor
in
inc
pop
(bad)
mov
dec
mov
les
adc
enter
es
clc
mov
fisubr
es
fld
push
loop
pop
scas
retf
fcomp
enter
lahf
dec
jge
pop
ins
bound
test
inc
mov
dec
dec
(bad)
mov
test
jg
sbb
cmp
shr
vxorps
mov
arpl
out
pop
xlat
fld
mov
jb
adc
push
adc
fild
cmp
shl
mov
mov
sbb
in
cli
dec
fsub
push
scas
in
(bad)
mov
jne
adc
and
jo
jmp
aad
enter
rcr
test
nop
frstor
sbb
sub
push
inc
sub
mov
in
or
jbe
cwde
or
retf
xor
jne
xchg
scas
jge
or
aas
sub
in
pop
mov
jmp
jbe
loopne
sub
or
adc
add
inc
xchg
mov
leave
xchg
ja
pop
hlt
mov
cmps
pop
ins
inc
adc
and
jbe
movs
lahf
or
movs
push
or
stos
mov
inc
cmp
adc
mov
gs
int
mov
jmp
out
push
pop
cmp
or
aad
xor
adc
pop
jmp
push
push
cmp
dec
fistp
jmp
shr
jno
shr
xor
sbb
mov
jns
icebp
sub
mov
mov
std
retf
cwde
addr16
xchg
xor
pushf
xor
sbb
sub
in
std
inc
int
stos
mov
sub
jns
cmp
dec
cmps
pop
movs
lods
inc
sub
jmp
icebp
add
sub
pop
jne
pop
push
xchg
dec
push
call
(bad)
sahf
out
js
int3
dec
pop
sub
or
in
jbe
push
out
(bad)
mov
jbe
push
icebp
lock
jge
in
and
sub
shr
retf
and
push
add
jns
inc
xchg
addr16
cmps
out
jg
fcomp
sahf
mov
lds
in
or
pop
sbb
push
adc
outs
aad
mov
or
in
cli
pop
push
daa
fld
pop
enter
pop
dec
jp
or
xchg
jmp
mov
inc
sub
mov
mov
dec
repnz
add
and
aad
icebp
and
vmread
mov
add
scas
push
push
test
push
push
aas
cmp
icebp
jno
add
inc
mov
push
outs
add
cmp
popf
push
sub
push
inc
sub
add
inc
repz
push
push
pusha
daa
pop
loope
popa
ins
inc
cwde
dec
leave
jb
xor
gs
xor
out
clc
adc
int
shl
or
push
push
jg
xchg
sti
movs
xchg
cs
xchg
mov
jb
retf
xor
test
fs
jle
jae
mov
(bad)
sbb
mov
push
stc
cmp
push
adc
aad
cmp
or
movs
bound
sbb
mov
dec
rcl
pop
jo
cli
lods
ss
or
in
mov
xchg
pop
inc
ret
push
mov
hlt
xchg
and
scas
not
loop
xchg
adc
lahf
enter
sub
sbb
outs
cld
(bad)
xor
add
bound
mov
or
cdq
ja
std
cmc
sbb
(bad)
out
add
in
push
jp
jno
ret
pop
mov
mov
and
mov
push
gs
mov
fcmovne
icebp
movs
sub
call
sub
jns
push
lods
jo
mov
sub
xchg
jns
xor
jno
sub
mov
retf
xchg
jno
ins
mov
cmp
pop
fist
(bad)
push
std
cmp
outs
popf
mov
xchg
les
add
fninit
inc
repnz
data16
xchg
prefetcht2
cmps
stc
mov
mov
mul
(bad)
test
push
xchg
call
dec
in
push
call
es
pop
and
shl
sbb
jbe
pop
sub
cmp
dec
aam
rcl
scas
and
mov
pop
ins
scas
mov
add
in
gs
inc
ret
ret
cmps
xlat
shl
xchg
jecxz
pop
mov
jp
jne
test
inc
int3
xor
scas
cmps
retf
pop
stos
popa
in
mov
fstp
add
mov
lock
cmc
sub
cdq
je
inc
out
or
add
js
xchg
or
pushf
(bad)
fadd
mov
cmp
int
test
jmp
fs
ja
pop
xchg
push
adc
mov
dec
xchg
fdiv
jne
cmp
out
pop
jg
dec
sub
(bad)
jmp
shl
mov
cmps
xchg
sub
scas
lock
xor
pop
cld
sbb
mov
cmp
(bad)
aaa
and
push
xchg
inc
inc
sbb
inc
inc
mov
stos
mov
xlat
jb
ret
xor
rol
and
push
xchg
ins
dec
xor
fwait
test
add
xor
cmps
add
mov
fstcw
and
mov
out
pusha
lods
aaa
dec
and
mov
test
pop
sahf
ffreep
icebp
js
add
popf
jne
dec
xor
dec
cmp
rcl
movs
xlat
inc
mov
std
outs
mov
mov
retf
ret
(bad)
adc
call
jo
mov
cmp
stos
mov
mov
xchg
cld
sar
fimul
es
out
fldcw
inc
add
stos
or
addr16
hlt
and
adc
cmp
movs
sub
fstp
and
jge
pop
repnz
retf
cmps
outs
lods
mov
xor
fdivr
aam
or
cmp
jge
cmp
clc
and
out
ja
scas
mov
lahf
out
lods
ins
sbb
scas
mov
xor
ins
loopne
xchg
sub
add
fcmovnu
pop
and
scas
out
pop
cwde
(bad)
call
repz
mov
push
pop
mov
retf
and
std
nop
mov
jmp
clc
push
mov
popf
dec
inc
(bad)
test
retf
or
fdivr
cmp
mov
or
enter
adc
sub
xor
sti
lock
test
sub
(bad)
repz
lock
sahf
push
add
movs
lods
cmp
out
jl
ret
xlat
fistp
pushf
pop
popa
jnp
jbe
outs
add
call
inc
xor
ret
div
dec
cwde
xor
ss
pop
in
scas
xchg
xchg
scas
cwde
push
ret
pop
mov
jg
add
pop
mov
scas
mov
mov
popf
and
iret
cli
push
int3
pop
add
xchg
sub
addr16
ins
jnp
mov
(bad)
ror
push
xor
mov
das
xor
add
mov
mov
xor
xchg
arpl
push
icebp
sbb
inc
arpl
mov
inc
dec
ds
out
sub
jae
add
loopne
cli
and
xor
movs
fisttp
cmp
(bad)
pop
dec
imul
xor
in
mov
mov
xlat
push
xchg
pop
call
jnp
js
pop
test
dec
or
push
enter
out
mov
or
push
inc
pop
xchg
fsub
in
mov
cmps
lds
cmp
mov
mov
repnz
pop
adc
pop
outs
loopne
gs
loope
ret
dec
jecxz
pop
repz
sbb
push
fbstp
test
inc
xchg
jecxz
test
mov
jae
retf
xor
xor
mov
popa
(bad)
cmp
jmp
mov
imul
mov
adc
ins
iret
idiv
mov
(bad)
mov
jnp
pop
mov
sahf
loope
inc
and
les
dec
xchg
cdq
mov
dec
test
scas
cmps
xchg
or
ror
cmps
lahf
or
adc
icebp
sbb
fld
movs
es
xchg
fidivr
(bad)
jnp
dec
test
or
sbb
xor
cdq
dec
sbb
or
jae
in
add
cmc
test
sahf
pusha
scas
jmp
dec
or
dec
mov
mov
jg
mov
dec
dec
into
mov
lea
aaa
push
ja
rol
out
push
mov
push
fs
adc
int3
imul
mov
int3
xchg
jle
fbstp
mov
jbe
int
fcomp
mov
mov
push
(bad)
call
cmps
in
inc
std
imul
ss
push
xor
xchg
jle
mov
out
sbb
jmp
jecxz
sti
test
gs
adc
push
movs
inc
loope
mov
data16
jmp
inc
cmp
mov
stos
push
retf
test
mov
adc
pop
inc
cli
lahf
xchg
and
jb
jge
jb
xor
enter
aam
adc
inc
pop
mov
stos
jb
mov
push
jg
pusha
and
fstp
cmp
aad
mov
sub
in
imul
add
scas
lea
sub
adc
mov
push
nop
clc
mov
pop
sub
fsubr
mov
mov
out
iret
cmp
nop
outs
or
mov
push
out
inc
jbe
enter
fisttp
shr
in
jle
inc
iret
jae
imul
ins
cli
test
aam
std
es
(bad)
mov
jmp
in
jnp
cdq
sbb
push
mov
and
pusha
inc
push
aam
test
in
cli
cmps
cs
aad
aad
outs
dec
jno
aas
cmp
push
adc
jl
ss
rcl
sub
jg
bound
loopne
sub
mov
push
inc
inc
inc
mov
(bad)
(bad)
mov
xor
xchg
sbb
rol
(bad)
imul
and
jb
call
jecxz
add
jo
jnp
sbb
push
jo
stos
sar
mov
scas
cwde
bound
add
fucom
rcr
daa
arpl
xchg
xor
out
cmp
sub
sbb
and
js
sbb
push
les
mov
or
in
push
jo
(bad)
addr16
or
mov
dec
cmp
jg
popf
outs
pop
add
add
xchg
retf
test
ror
jecxz
pop
(bad)
push
mov
xchg
arpl
mov
sbb
aad
jnp
int
call
(bad)
adc
imul
push
or
mov
fcom
cmp
out
jae
sbb
lahf
xor
jge
push
sbb
or
add
jb
pop
jg
rol
mov
cmp
lods
jae
mov
scas
aad
adc
outs
jae
ret
fs
lods
sti
push
sbb
pop
in
(bad)
cmp
pop
scas
sbb
inc
inc
add
cli
cmc
sub
or
pushf
int
movs
ret
pushf
imul
dec
inc
fcom
sub
sub
sahf
lds
pop
add
dec
retf
jmp
add
cmp
add
inc
rol
inc
add
jmp
dec
retf
adc
sbb
or
sbb
outs
xor
cmp
jg
shl
sar
sbb
test
xor
(bad)
lock
jmp
jl
dec
pop
and
jg
iret
test
iret
push
mov
cmps
fimul
sbb
mov
inc
imul
scas
loope
ror
mov
dec
out
int
loope
out
movs
and
add
sub
lock
lea
inc
jle
mov
xchg
fimul
fisubr
mov
ins
xchg
xchg
test
push
or
and
icebp
jmp
dec
adc
mov
dec
cmp
pop
sbb
int3
adc
jecxz
xchg
cs
dec
in
cmc
push
imul
and
sub
and
add
cmps
xchg
ficomp
sahf
sbb
shl
jecxz
sub
jp
push
mov
xchg
je
pop
dec
mov
cmp
mov
mov
icebp
or
mov
retf
outs
cmp
xor
lods
jmp
xor
dec
(bad)
in
jl
shl
aaa
in
retf
cld
das
popf
push
inc
clc
mov
fmul
repnz
sub
mov
jne
imul
inc
xor
fmul
add
data16
aas
inc
ins
lds
xchg
repnz
jb
loop
add
jnp
sbb
xchg
mov
mov
gs
sub
leave
sbb
int3
pop
in
adc
movs
jg
nop
fld
and
dec
mov
sti
imul
push
(bad)
rcr
add
sbb
or
mov
inc
push
fs
fild
jmp
sbb
stos
sub
popa
or
sbb
mov
xchg
pusha
mov
mov
(bad)
push
stc
add
frstor
std
pusha
imul
add
pop
cmp
push
xchg
and
pop
pop
mov
sub
xor
fs
enter
shl
mov
call
jl
rol
fst
adc
mov
dec
cmps
pop
pop
pop
(bad)
aad
jp
vmwrite
popa
mov
enter
add
dec
shrd
stos
out
cmp
loop
fimul
sbb
aas
ds
inc
stos
jne
test
push
movs
(bad)
fwait
js
xchg
pop
loopne
jp
mov
jp
scas
sub
pop
adc
dec
in
mov
repnz
sar
push
add
loopne
cld
cmps
(bad)
jno
inc
retf
fs
mov
or
lahf
in
add
pop
je
jbe
lock
(bad)
addr16
ins
jge
jmp
add
inc
outs
mov
sbb
jle
ins
push
sub
mov
hlt
mov
loop
fiadd
push
xor
or
(bad)
pushf
cli
add
adc
repnz
fnstcw
add
pop
sub
cmp
aas
sbb
add
push
fmul
or
movs
jb
aaa
cmc
(bad)
push
cwde
sti
dec
xchg
(bad)
test
in
dec
js
data16
push
js
jns
adc
push
mov
inc
cmps
or
xchg
xor
xor
mov
push
dec
add
lods
xchg
sbb
(bad)
rcl
xchg
clc
dec
stos
loopne
ret
mov
stos
(bad)
mov
xchg
call
cmp
fimul
or
pushf
cmp
sahf
ins
pop
xor
cld
xchg
fcmovb
movs
(bad)
mov
jp
add
pushf
stc
xchg
jle
xor
mov
push
mov
inc
jnp
daa
jno
xchg
outs
push
mov
mov
retf
jecxz
dec
xor
(bad)
shr
push
jns
inc
adc
ror
jno
outs
pop
xchg
daa
mov
and
fwait
rcl
jg
push
out
adc
mov
xor
lods
pop
pop
mov
xchg
jbe
push
aaa
and
mov
jno
sti
add
push
arpl
pop
retf
nop
mov
adc
fwait
mov
mov
stos
xchg
mov
retf
xor
in
les
outs
xchg
cmp
fimul
push
jecxz
mov
push
fstp
sbb
les
movs
and
mov
mov
ret
push
dec
fdivr
xchg
psraw
lea
test
enter
pop
pop
les
pop
adc
or
loope
push
dec
adc
xchg
in
mul
or
jl
adc
mov
adc
dec
pop
jge
xchg
cli
add
cli
addr16
addr16
loop
aas
jnp
popa
add
xchg
jb
mov
push
ins
cmp
sbb
sbb
inc
or
pop
xchg
lea
loop
fild
and
xor
inc
xor
or
dec
sahf
out
out
test
popa
ins
xchg
add
in
fiadd
cmps
cmp
cmps
adc
mov
lds
add
xchg
xor
inc
js
mov
jl
dec
xchg
nop
and
idiv
lock
pop
in
test
scas
mov
push
mov
xchg
xchg
add
pop
add
sahf
(bad)
mov
(bad)
cmp
cs
leave
mov
jp
inc
test
and
hlt
cwde
hlt
pop
and
out
stos
ja
pop
aad
mov
mov
adc
and
mov
dec
js
pshufw
inc
(bad)
jo
in
mov
add
fucom
xchg
ds
fidivr
or
cmps
jmp
cli
cld
cmps
cmc
imul
mov
push
push
mov
ins
mov
jl
xor
pop
lock
dec
in
out
int3
(bad)
ror
and
stc
add
addr16
bound
cmps
add
inc
fsub
into
xchg
mov
mov
add
stc
mov
and
es
outs
ss
push
dec
pop
ds
gs
fstp
jle
lea
sti
call
mov
inc
(bad)
cmp
mov
pusha
push
xor
push
retf
fcom
pop
pop
cmovp
out
stos
repnz
test
(bad)
call
retf
push
loopne
sbb
cmp
setnp
pop
pop
pop
mov
pop
dec
add
push
inc
loop
xor
stc
mov
loop
(bad)
mov
pop
loopne
loopne
sar
sub
fdiv
mov
inc
xchg
jmp
jbe
jmp
mov
test
iret
cmc
mov
in
adc
xchg
fimul
fs
or
daa
test
(bad)
lea
(bad)
into
jmp
cmp
pop
xor
ins
vunpckhps
lds
push
xchg
and
jb
pushf
pop
pushf
cli
jg
aam
push
lahf
mul
add
push
shl
stc
dec
mov
sub
icebp
sub
ins
mov
sub
(bad)
sub
shr
ss
xor
retf
mov
imul
jl
sbb
daa
je
ret
mov
sbb
sub
movs
es
push
int3
int
jl
sbb
adc
pop
cmp
stc
lods
movs
and
adc
and
jo
movs
jne
lock
lahf
push
retf
loopne
das
sti
and
mov
sub
inc
fs
sbb
jns
loopne
sub
jne
mov
lds
pop
sbb
retf
or
lock
mov
repnz
adc
pop
jge
xchg
test
mov
mov
xor
lods
or
gs
rcr
inc
in
(bad)
cmc
jae
loop
adc
jmp
bound
mov
shr
inc
jmp
mov
sbb
fs
stc
inc
sbb
jmp
repnz
shl
and
mov
sbb
mov
push
lock
or
fidivr
and
push
rcl
(bad)
xor
sbb
or
xchg
or
cdq
cmp
mov
mov
inc
push
sub
mov
sub
pop
lock
and
cli
(bad)
retf
retf
fmul
retf
seto
push
xchg
jne
pop
jo
mov
movs
mov
xacquire
push
mov
out
xchg
inc
mov
jecxz
push
out
add
mov
retf
and
adc
(bad)
xor
pop
and
adc
ret
shr
fcomp
inc
test
sub
ret
mov
mov
mov
lock
sbb
test
ja
lahf
(bad)
aad
pop
fldcw
gs
inc
sub
std
shl
(bad)
retf
stos
add
jmp
pop
adc
pushf
mov
mov
xor
clc
mov
add
mov
(bad)
jnp
xchg
mov
std
popf
fwait
push
cmc
inc
and
nop
dec
in
mov
inc
add
out
ret
ss
add
xchg
stos
fucomp
cs
push
fiadd
ror
call
popf
adc
fld
fstp
call
add
in
jae
dec
aas
pop
inc
sub
movs
and
mov
add
pop
rol
push
ja
push
movs
(bad)
fnsave
push
jo
mov
jb
mov
jecxz
add
mov
retf
mov
jns
add
jmp
repz
in
mov
jmp
mov
inc
xor
call
pop
sbb
xor
cmp
aam
inc
imul
les
mov
pop
mov
sub
mov
jecxz
in
add
xchg
loop
xor
inc
imul
clc
fisubr
xchg
adc
jmp
mov
jle
call
loop
fs
outs
mov
out
outs
inc
arpl
lods
mov
vpsrad
or
daa
ret
mov
xchg
and
movs
adc
and
test
sti
cmp
(bad)
push
jge
iret
mov
push
dec
inc
inc
or
sbb
fs
aam
(bad)
mov
mov
cmp
adc
mov
mov
add
pop
push
inc
mov
pop
sub
rcr
pop
mov
test
sub
sbb
xchg
mov
and
cmps
pop
mov
jno
push
pop
jle
shl
mov
fsubp
dec
imul
cmp
jge
scas
jo
imul
mov
add
dec
mov
mov
retf
pop
popf
mov
dec
cmp
cs
idiv
ds
into
pop
in
pop
jmp
mov
and
or
xor
mov
xor
pop
enter
inc
and
push
sbb
call
mov
mov
int
sar
je
adc
dec
cmps
aas
(bad)
aaa
in
es
or
(bad)
inc
mov
cmc
add
mov
xor
test
xlat
lock
pop
dec
jp
(bad)
mov
xor
dec
pop
push
outs
add
sbb
sti
jne
and
es
int3
movs
mov
icebp
mov
jns
jmp
gs
fwait
fwait
pusha
push
pop
aad
or
iret
inc
imul
xlat
jbe
xor
into
sbb
jns
sbb
mov
xchg
addr16
dec
xlat
push
dec
loop
out
rol
mov
ds
rcr
lods
dec
push
xor
lahf
xlat
sar
mov
sbb
addr16
jne
std
test
outs
addr16
sbb
in
lods
addr16
ja
pop
arpl
push
sub
cmp
lahf
mov
mov
adc
jne
(bad)
jns
test
mov
cdq
(bad)
(bad)
fdiv
sbb
pop
add
add
or
lahf
out
je
inc
enter
aad
scas
mov
out
ret
and
mov
xor
cmp
cwde
xor
xchg
dec
mov
xchg
call
in
xchg
adc
cwde
jl
pop
call
mov
cmp
dec
add
dec
dec
push
inc
mov
mov
sub
cmp
das
inc
int3
jmp
inc
lods
jp
movs
xchg
dec
pop
fucom
cwde
cli
ror
sbb
inc
adc
jb
bound
lds
push
imul
pop
and
dec
dec
scas
lds
mov
jle
cmp
pop
sub
(bad)
outs
fiadd
imul
(bad)
mov
sbb
(bad)
rcr
int3
push
push
jns
pop
mov
icebp
pop
push
add
sti
xchg
sub
mov
(bad)
shr
ss
cwde
jno
inc
ret
lods
pop
jo
js
lods
and
add
sub
jne
nop
bound
ds
sbb
into
adc
mov
push
pushf
das
lea
dec
addr16
mov
fwait
sbb
leave
adc
mov
outs
lock
aaa
sub
cs
jl
and
mov
mov
cmovo
loopne
bound
sbb
outs
push
(bad)
cli
inc
dec
xor
ins
sbb
mov
fsubr
fistp
std
mov
jecxz
mov
inc
outs
mov
sub
push
inc
jo
lds
sub
sub
fstp
mov
nop
push
out
add
push
movhps
sbb
jg
mov
cmps
sbb
les
test
pop
and
cmc
or
dec
outs
mov
add
xor
mov
test
test
cli
inc
leave
ins
je
cmps
inc
repnz
popa
(bad)
push
xchg
mov
push
lods
push
test
pop
unpcklps
outs
mov
adc
les
and
dec
in
imul
dec
cld
in
push
lahf
iret
imul
inc
push
adc
call
jp
pop
jmp
xor
in
dec
xchg
and
mov
aas
adc
xchg
inc
push
xlat
hlt
icebp
outs
es
and
push
fnstenv
xor
xor
dec
xor
and
imul
jl
in
add
fwait
push
(bad)
ret
xchg
int
movs
jmp
xchg
ficom
ja
stc
outs
popf
sbb
das
and
xchg
les
cmp
imul
sub
jmp
mov
mov
mov
pop
dec
cmp
cwde
jne
stos
pop
add
rol
jns
add
shl
xlat
mov
dec
xchg
jns
add
ins
retf
pop
dec
mov
or
jne
push
jnp
std
je
loop
dec
pop
dec
into
stc
arpl
cmp
popa
sti
loope
hlt
cmp
mov
xchg
retf
sbb
imul
pushf
xlat
mov
outs
xor
out
mov
les
test
xchg
mov
sahf
xor
dec
and
mov
aas
mov
sub
and
test
xchg
out
les
fcom
or
shl
mov
mov
pushfw
ins
dec
mov
sub
mov
sub
arpl
loopne
jmp
mov
inc
scas
les
sub
jno
imul
push
imul
inc
aad
outs
call
cmp
mov
xor
cmps
sub
addr16
push
pop
sbb
loop
shr
loopne
jnp
cli
pop
jmp
lock
dec
mov
scas
cmps
pop
loop
dec
(bad)
xchg
test
shl
add
ror
cmp
adc
ja
dec
xor
sahf
scas
outs
popa
xchg
fstp
xchg
push
mov
jb
xor
and
in
dec
xor
dec
adc
hlt
popa
das
cmp
push
cmps
sbb
pop
pop
mov
hlt
dec
xchg
sub
mov
mov
popf
shl
int
sbb
mov
cmp
les
sbb
sbb
inc
mov
and
mov
xor
pop
push
and
xchg
jmp
dec
pop
mov
pop
jae
(bad)
test
dec
ins
adc
popf
inc
into
scas
aas
movs
sub
pop
adc
dec
stc
pop
mov
int3
retf
call
jnp
and
test
xchg
test
jmp
cmp
mov
cwde
(bad)
fcom
push
sbb
jae
mov
add
and
clc
leave
push
xchg
or
add
jmp
imul
js
popf
repnz
mov
xor
mov
xchg
mov
adc
hlt
xchg
mov
retf
shl
push
sub
sbb
xchg
mov
sub
sbb
adc
jl
mov
mul
cmc
xchg
mov
xchg
jecxz
shl
lock
sub
mov
mov
imul
pushf
pop
aas
mov
mov
mov
sbb
mov
mov
ins
aaa
test
pop
sub
or
mov
xchg
ret
cmp
xor
jnp
out
jmp
mov
rol
cmps
ins
push
add
arpl
fisttp
mov
lea
(bad)
mov
das
popa
cmp
imul
xor
sub
arpl
sub
or
outs
push
imul
cmc
mov
repnz
test
xor
or
mov
push
xor
into
xor
lods
fst
rol
inc
clc
adc
bound
test
(bad)
pop
mov
jle
mov
xchg
cdq
pop
dec
xor
and
repnz
pop
inc
mov
jo
sub
mov
stos
jno
dec
popw
xlat
pop
mov
xor
out
popa
aas
sub
addr16
jne
ja
or
add
mov
pop
cmp
xor
mov
addr16
jb
mov
aaa
bound
stos
pop
add
jo
mov
push
scas
ins
inc
or
add
in
enter
cmc
fwait
inc
push
pop
mov
cwde
sbb
iret
cmp
iret
cmp
sbb
fdiv
inc
fild
inc
loop
(bad)
shl
sti
aam
fisubr
jmp
xor
jb
or
mov
jne
push
(bad)
(bad)
cs
cmp
jb
and
or
or
div
(bad)
dec
mov
fs
push
fadd
xchg
jmp
jmp
iret
das
sub
into
fwait
mov
js
lds
mov
ret
not
sbb
sbb
das
ins
and
jecxz
adc
jb
(bad)
loopne
neg
mov
leave
loopne
imul
call
dec
push
int
out
sub
rcr
inc
out
mov
lods
xchg
mov
loope
inc
pop
std
jl
rcr
loope
rcr
(bad)
jo
iret
out
out
mov
movs
or
pusha
add
jno
jo
jle
pop
add
cdq
xchg
adc
out
pop
and
mov
jp
call
or
jle
ins
dec
xchg
mov
adc
das
out
xchg
dec
inc
lods
into
and
pop
mov
adc
adc
aad
jecxz
jge
jnp
mov
lods
test
scas
inc
clc
cld
dec
lods
mov
jge
mov
mov
hlt
test
mov
test
xor
mov
int
cmp
pop
jno
xor
sbb
je
mov
inc
jecxz
mov
push
das
fldenv
es
jno
cld
and
repnz
call
mov
jns
aad
xchg
(bad)
adc
pop
mov
lahf
pop
outs
dec
inc
xor
ja
dec
sahf
adc
push
mov
jmp
mov
mov
push
cwde
outs
bound
test
jl
aad
add
mov
retf
push
loope
sbb
(bad)
test
adc
pop
mov
(bad)
mov
sub
xor
ficomp
fcomp
(bad)
fadd
retf
call
jmp
sbb
call
and
cmp
repnz
sbb
adc
sti
cmp
add
push
(bad)
mov
and
les
das
cmps
add
and
adc
fld
and
xchg
in
sti
dec
int
stos
aad
add
mov
dec
ret
push
adc
shr
xchg
(bad)
jmp
mov
(bad)
jl
jge
pop
or
cmp
lahf
test
(bad)
enter
jl
std
shr
out
jne
dec
fwait
inc
int3
shl
ins
xor
jmp
shr
push
cmp
pop
inc
popa
lods
mov
jge
sub
inc
mov
mov
lea
inc
xor
cmp
or
mov
inc
mov
lods
lahf
push
xor
jle
inc
sub
in
movs
mov
add
nop
mov
pusha
adc
hlt
or
xchg
adc
stos
jae
push
dec
popa
pop
mov
mov
sar
dec
push
and
cmp
(bad)
pop
mov
cmp
nop
fsub
ds
xor
fstp
pop
sbb
aam
imul
ret
jmp
test
mov
push
arpl
dec
outs
mov
jge
cmps
jge
push
mov
ins
mov
jmp
bound
inc
out
cmc
xchg
sub
xchg
inc
cmp
push
fcmovnu
sbb
add
aam
add
adc
sub
cmps
mov
jle
dec
test
xchg
pusha
dec
mov
clc
push
daa
or
cmp
mov
div
call
mov
inc
(bad)
call
pop
stos
test
add
pop
jmp
imul
stos
mov
rol
cld
loopne
fcom
movzx
pop
mov
or
xchg
mov
lds
repz
jo
mov
mov
inc
call
add
stos
sub
popa
addr16
mov
cmp
sub
adc
cmps
fucomp
pop
test
lock
addr16
ss
xlat
and
(bad)
ins
(bad)
(bad)
clc
ds
add
inc
cmps
add
dec
sti
shl
jbe
and
jo
push
push
mov
mov
ss
xchg
repnz
out
outs
int3
repnz
xor
mov
lea
sub
cmp
aam
mov
dec
push
inc
jp
xor
push
add
xchg
jbe
test
inc
dec
sub
and
mov
cmp
adc
pop
aaa
sub
fadd
inc
push
in
std
shl
dec
out
cs
sbb
lea
mov
sub
and
jo
fild
cmps
xchg
and
pop
push
push
inc
jns
pop
dec
jmp
gs
inc
fwait
or
and
add
mov
jp
loop
call
fs
xchg
cmp
lods
scas
jle
sbb
xor
out
jno
cmp
loopne
push
ret
movs
mov
cmp
jl
push
in
cld
pop
stos
dec
sub
cmp
mov
scas
jmp
pop
mov
clc
xchg
popf
fcmove
xchg
push
out
(bad)
cmp
and
mov
push
mov
xchg
test
jo
shl
add
daa
pop
sar
outs
clc
int
addr16
add
retf
cmps
adc
aad
pop
and
enter
test
adc
pop
retf
dec
(bad)
and
out
imul
imul
push
or
xor
daa
xchg
imul
adc
xlat
popf
push
cmp
xchg
xor
push
ja
icebp
jbe
sbb
retf
or
push
test
sti
inc
rcl
sub
adc
daa
out
stc
sub
push
dec
dec
pop
pop
mov
pop
gs
repnz
push
jb
jne
or
dec
adc
aad
add
into
xor
xor
adc
inc
int
or
fbld
mov
adc
mov
adc
(bad)
dec
fnsave
cmp
sti
call
cmp
(bad)
jo
adc
push
fwait
sbb
add
jnp
mov
cmpxchg
sub
jecxz
lods
in
shl
xlat
cmp
mov
or
mov
out
sbb
aam
scas
fsub
jmp
packsswb
pop
and
sub
cmps
inc
pop
test
dec
adc
sbb
aaa
sbb
rol
stos
xor
xchg
inc
pop
daa
div
pop
dec
neg
jb
das
add
pop
sub
adc
jae
xchg
mov
inc
cmp
daa
std
hlt
and
and
ins
fld
sbb
nop
ds
jbe
pusha
and
pop
out
lods
aas
xor
mov
dec
out
add
add
(bad)
pop
sub
sbb
test
adc
and
gs
mov
int
jae
add
adc
pop
mov
add
in
cmp
dec
xor
jnp
mov
inc
int3
cmovnp
arpl
test
ret
sub
mov
or
push
push
ret
out
pop
sub
mov
aas
jle
push
(bad)
inc
jle
pop
sbb
push
pop
push
out
retf
push
mov
xchg
into
cmp
dec
inc
cmp
xor
jb
pop
aad
lock
cmp
js
jge
push
fcomp
jb
(bad)
adc
or
dec
mov
call
or
clc
mov
shl
sbb
shr
das
dec
push
or
mov
and
fidivr
neg
add
or
jp
fdivrp
lods
stos
aas
ins
pop
inc
ins
mov
lods
ja
and
sub
or
int
sub
jmp
xchg
xchg
retf
stos
sbb
add
add
dec
cmp
inc
sbb
dec
push
and
cmps
cmp
cmps
retf
sub
test
or
xor
cmp
add
jbe
bound
adc
cs
or
sbb
std
pop
addr16
dec
int3
inc
jecxz
out
daa
inc
shl
adc
lods
inc
sahf
cmp
sub
push
ss
xchg
mov
dec
add
aaa
jle
nop
fst
mov
shr
sub
jbe
xchg
popa
xchg
mov
mov
imul
push
int3
es
sbb
inc
idiv
xor
push
push
test
cmp
mov
sub
pushf
mov
jecxz
jg
in
add
fistp
in
mov
(bad)
jecxz
loopne
stc
std
dec
call
mov
(bad)
idiv
sbb
movs
pop
push
mov
test
call
jp
and
push
outs
dec
mov
add
shl
jns
mov
dec
ins
add
adc
add
sbb
test
push
dec
mov
and
fistp
lods
mov
outs
data16
ret
mov
xor
inc
gs
push
mov
mov
pusha
out
cmp
retf
mov
lea
rol
push
cmp
add
test
cdq
pop
test
iret
mov
mov
iret
ret
or
call
cli
xchg
sbb
hlt
fidiv
xchg
fisttp
scas
out
int3
movs
push
push
addr16
fst
icebp
mov
fwait
xchg
mov
ja
and
aaa
dec
or
add
pop
sbb
adc
mov
rol
jle
mov
and
hlt
sbb
push
fadd
mov
cdq
xor
rcl
pop
addr16
add
stos
inc
ja
ficomp
cwde
movs
xor
ins
retf
fistp
sub
sub
mov
mov
cs
sub
jp
xor
repnz
push
jbe
and
add
cwde
xchg
fdivp
call
out
std
mov
xchg
jno
cmp
and
mov
jge
push
jns
retf
cld
jmp
fst
icebp
in
popf
inc
test
inc
(bad)
out
(bad)
stos
push
mov
pusha
repz
jl
lock
pop
inc
rcr
jecxz
mov
xor
call
pop
push
movs
pop
pop
dec
movs
call
fidiv
(bad)
jmp
mov
cld
ins
cmc
fstp
dec
cmp
cmc
rcr
xor
xor
mov
sbb
out
push
jb
dec
jle
pop
bound
mov
lds
stos
outs
cmp
inc
add
movs
pop
addr16
mov
and
into
pop
fs
mov
icebp
cdq
inc
push
aam
push
dec
cld
inc
push
and
inc
sahf
add
pushf
adc
cs
in
push
and
sbb
cmps
adc
bound
fstp
jmp
daa
stos
dec
cmc
jecxz
leave
mov
pop
repnz
gs
or
loopne
clc
adc
aad
ins
in
repz
(bad)
push
lods
mov
or
push
sub
int3
outs
push
out
das
adc
sar
xchg
fldcw
dec
sbb
cwde
jo
repnz
cwde
enter
scas
das
lods
cmp
push
daa
jmp
bound
and
mul
push
push
mov
aad
xor
fild
and
(bad)
imul
lahf
pop
mov
xchg
lock
inc
icebp
nop
cmc
push
bnd
ds
mov
push
or
addr16
ja
adc
cld
out
test
add
(bad)
jecxz
dec
rcl
adc
push
dec
mov
xchg
out
(bad)
retf
mov
mov
dec
lea
jmp
inc
aaa
jbe
push
loope
packsswb
ds
retf
push
inc
adc
pop
clc
movs
pop
dec
shl
int
(bad)
mov
cwde
sbb
fucomi
sbb
xchg
jns
mov
dec
ja
sbb
cmps
movs
push
dec
movs
add
fcom
push
aas
dec
fstp
jo
xchg
xor
movs
rol
or
popa
cmp
xchg
add
cmp
aam
rcr
fnstcw
jg
sbb
dec
scas
mov
cli
stc
(bad)
fsub
movs
popf
xchg
sub
sti
sbb
ins
push
pop
xor
inc
pop
cmp
mov
mov
sbb
inc
xchg
sbb
add
lock
mov
jmp
jmp
jg
int3
push
clc
xchg
inc
js
cmp
adc
scas
xor
popa
sahf
loope
add
push
inc
div
icebp
sbb
xor
sub
ins
xchg
outs
je
pop
icebp
sbb
loope
mov
lds
mov
cmp
(bad)
pop
jg
ins
cmps
sbb
xchg
mov
push
push
je
cli
xchg
sbb
push
dec
mov
nop
dec
std
mov
push
(bad)
lock
adc
jns
es
sbb
repnz
xor
fsub
add
xor
pushf
lods
es
pushf
pop
fwait
xor
mov
pop
and
mov
xlat
sbb
or
mov
sti
and
and
push
mov
push
shl
xchg
ret
cdq
pop
call
push
into
adc
loop
out
lock
mov
out
ret
div
imul
ficomp
shr
repz
sbb
mov
or
xchg
push
(bad)
push
rcl
dec
jno
pop
sbb
mov
stos
or
js
jecxz
inc
loop
or
not
pop
sub
aam
jl
jmp
test
pusha
popa
pop
mov
lods
hlt
jg
cmp
cmp
xor
mov
icebp
dec
cmc
fistp
in
push
ss
jp
das
js
test
stos
xchg
mov
pusha
clc
cdq
jmp
mov
cmps
push
loop
sub
std
popf
out
ja
(bad)
push
mov
data16
sub
inc
dec
adc
pop
lods
cmp
xchg
in
out
into
push
sub
and
or
nop
clc
jne
in
fstp
push
mov
out
ret
pop
add
xchg
push
pop
xor
push
aas
sub
inc
jae
pop
shl
jp
pop
jo
cmp
inc
adc
test
jae
jle
and
fst
xchg
int3
mov
loop
jg
rcl
or
jl
mov
ins
retf
mov
ror
aaa
jmp
fmul
mov
inc
mov
mov
add
add
sbb
cmc
leave
mov
pop
ins
pop
es
inc
shr
out
mov
jo
test
ret
dec
push
loop
sub
mov
es
icebp
cmp
imul
in
ret
clc
call
in
shl
or
pop
mov
loope
sbb
mov
adc
cwde
mov
scas
(bad)
or
cmc
lock
popa
jnp
rol
rol
add
es
mov
and
js
and
imul
push
mov
rcl
shr
mov
mov
or
jl
dec
jecxz
ret
pop
movs
add
mov
out
dec
push
mov
les
push
mov
repnz
movs
in
repnz
cmc
fcmovne
mov
pop
das
bound
xor
mov
sbb
mov
das
or
add
loopne
mov
imul
push
mov
xchg
xor
and
push
sub
dec
lods
push
hlt
fdivr
(bad)
fwait
mov
addr16
jne
cmps
call
sub
add
or
cmp
iret
daa
push
out
pop
stos
mov
sub
jp
fld
xor
push
pushf
(bad)
lock
cmps
gs
cwde
pusha
sub
sub
into
push
mov
cmp
mov
dec
(bad)
mov
ins
jae
xor
sbb
push
jns
push
or
int
jns
in
retf
inc
cmp
std
je
outs
bndstx
retf
cwde
repnz
sbb
sbb
repnz
push
rol
jno
jno
pop
dec
movs
xchg
daa
repz
(bad)
jl
xlat
or
rcr
mov
push
into
inc
xchg
leave
pop
(bad)
jle
(bad)
nop
jl
inc
push
cli
fdiv
mov
test
stos
jle
dec
mov
sub
(bad)
in
nop
fwait
jo
mov
ror
ds
fadd
jl
dec
sar
and
mov
mov
mov
repnz
cdq
push
scas
add
sbb
pop
aam
hlt
fisttp
pushf
lahf
(bad)
pop
cmp
jl
popf
retf
es
sbb
push
jmp
mov
outs
xor
nop
and
or
jns
retf
in
out
cmp
xor
xor
int
mov
and
pop
jmp
sub
jmp
xor
push
cli
inc
inc
imul
out
push
test
fmul
inc
add
add
jnp
fdivr
(bad)
cli
add
inc
gs
or
sub
adc
lds
push
pop
dec
add
adc
add
push
jmp
ficom
xor
aam
sub
mov
sub
outs
jmp
cmps
xchg
and
rcr
mov
sub
rcl
outs
pop
pop
imul
hlt
leave
movs
dec
xchg
pop
les
int3
fs
dec
iret
mov
icebp
add
(bad)
leave
inc
mov
fisttp
mov
cmp
jmp
icebp
push
in
(bad)
pop
in
and
and
aas
adc
sahf
add
inc
cmp
mov
stc
mov
test
fcomi
retf
dec
out
adc
es
and
in
mov
cli
mov
add
fistp
lahf
or
jnp
jge
or
pop
jg
pop
sub
into
(bad)
repz
clc
push
xchg
ds
out
es
inc
dec
(bad)
neg
dec
daa
mov
mov
xchg
es
adc
nop
fisttp
jb
in
xchg
add
shl
cld
mov
daa
sti
call
sbb
mov
inc
jg
adc
movs
pop
ins
fnstcw
sbb
outs
nop
xor
pcmpgtw
jg
sub
sub
dec
mov
mov
fsub
ret
ret
stc
test
aaa
mov
push
inc
xchg
movs
pop
push
pop
in
mov
sub
pop
xor
sbb
cdq
(bad)
xor
inc
adc
ja
ror
sub
jg
sub
sub
imul
popf
es
in
sub
cmp
cmc
xor
(bad)
jmp
cdq
inc
push
out
daa
ret
test
(bad)
je
test
xor
adc
cmps
pop
inc
sbb
xchg
jg
push
(bad)
out
pop
pop
xchg
cmp
jae
cmp
xchg
aas
sub
out
enter
dec
mov
test
xor
add
ret
fcomi
fs
popf
dec
lds
dec
cwde
fsincos
xor
idiv
jbe
loopne
push
cmp
mov
and
and
xor
iret
clc
cmp
icebp
and
and
xchg
adc
sysret
dec
pop
fsubr
mov
aam
loopne
icebp
std
pop
inc
cld
sbb
adc
jl
xchg
int
mov
dec
pop
aam
cmps
mov
shl
ds
cs
movs
ficomp
sbb
into
mov
sub
xchg
jne
les
out
loopne
(bad)
aas
(bad)
out
adc
dec
xor
inc
cmp
ins
or
cmps
pop
stos
jmp
aad
out
push
cmc
jmp
es
cmp
(bad)
fs
add
cwde
arpl
mov
sub
ret
dec
test
pop
out
push
ret
add
inc
test
leave
dec
add
add
xor
sub
mov
pop
imul
mov
pop
shr
adc
mov
fstp
ret
movlps
push
sbb
enter
dec
fs
lods
xor
push
sub
inc
es
mov
rol
pusha
icebp
inc
addr16
jb
sub
cmps
cmps
xchg
mov
addr16
cmp
std
call
adc
cmps
outs
(bad)
sti
jle
dec
and
jbe
push
push
jge
lea
pop
cwde
ja
or
mov
aad
push
adc
xor
aas
adc
push
or
inc
int
int3
add
sub
enter
push
loopne
pusha
movsx
pop
fstp
cmp
push
push
xchg
jp
add
push
xlat
dec
(bad)
jge
(bad)
aaa
and
in
sub
mov
xlat
movs
and
jg
fcmove
and
mov
icebp
jno
ror
idiv
in
ja
mov
adc
data16
lods
arpl
test
fwait
cli
jne
(bad)
rol
mov
inc
lods
push
pop
dec
cmc
out
jb
rol
mov
aas
add
movs
pop
jge
inc
or
cmp
sub
jns
ret
add
dec
out
sti
adc
jle
(bad)
stos
(bad)
fimul
out
iret
jmp
jecxz
sti
pop
in
mov
push
out
fwait
js
cmp
mov
mov
jne
push
jge
xlat
ror
mov
lahf
cmps
xchg
repnz
cmp
mov
lahf
cmc
leave
ds
data16
add
aas
int
inc
fs
popa
mov
adc
lock
(bad)
scas
mov
dec
(bad)
xor
or
aam
pop
jge
(bad)
shl
popa
leave
repz
and
mov
je
push
xchg
inc
mov
pop
out
(bad)
hlt
cs
aad
pop
or
xchg
rcl
push
fbld
pushf
loop
jle
xor
out
fild
mov
aas
sbb
sub
(bad)
xor
mov
or
out
mov
lds
rol
aad
imul
ss
pop
pop
pop
cmps
inc
dec
hlt
xor
addr16
sub
and
and
cmp
test
mov
mov
std
dec
imul
jmp
dec
cmc
mov
pop
and
movs
mov
jp
lock
aas
icebp
adc
mov
xchg
sub
push
push
in
xchg
into
xchg
mov
repz
pop
push
out
mov
adc
rcl
fbld
mov
mov
inc
sbb
in
and
into
cld
into
pop
xchg
mov
push
outs
ds
imul
js
lods
xchg
pop
push
lods
test
in
jle
mov
push
mov
leave
loope
fsub
cs
push
pop
pop
or
sub
mov
les
ss
je
int
lds
in
jmp
aad
and
inc
ss
fimul
shr
ret
xchg
sbb
in
pop
sbb
mov
dec
loope
fisub
xor
add
mov
aam
les
lock
or
pop
imul
hlt
push
sets
ds
xlat
out
mov
mov
cmp
or
int3
and
cmp
mov
ret
std
out
jo
mov
movs
arpl
pushf
jle
sbb
sbb
cmp
dec
jmp
pop
shr
pop
push
fidivr
sbb
shl
xor
cmp
xchg
sbb
or
xchg
bound
xchg
xchg
lock
add
in
je
cmps
imul
ret
(bad)
iret
popf
jae
rcl
mov
leave
out
imul
cmp
dec
and
push
push
sbb
popf
into
cmp
and
jmp
mov
jg
cmp
push
inc
xor
das
out
jl
push
and
sub
outs
push
fst
sbb
pop
xchg
jno
jmp
inc
imul
repz
fisub
dec
setae
or
inc
pop
adc
ds
adc
dec
daa
inc
adc
mov
ficom
pop
aad
dec
into
popf
pop
mov
arpl
adc
aam
jg
add
sbb
dec
or
jmp
xor
sbb
pop
xchg
lds
test
mov
push
mov
rcl
imul
int3
lds
jecxz
test
xchg
pop
es
push
std
into
cmp
js
mov
in
out
fst
pop
sbb
mov
mov
pop
call
adc
mov
xchg
fwait
mov
push
push
jb
ss
enter
retf
rol
xchg
push
xchg
fld
bound
sub
push
mov
fstp
mov
pop
mov
in
mov
or
xor
rcl
adc
cmps
sar
jmp
jmp
xor
out
lds
test
sbb
mov
mov
cs
aaa
scas
call
repnz
repz
mov
(bad)
(bad)
data16
arpl
enter
jle
mov
cld
stc
jae
dec
daa
jp
dec
hlt
cwde
gs
sub
ja
jbe
dec
cmp
clc
fdivrp
or
inc
inc
jb
inc
push
adc
ror
cmp
lods
jne
add
nop
inc
popa
xor
jb
cmps
jp
or
pop
add
std
icebp
and
fldenv
xchg
lock
cmp
xchg
fisub
pop
and
js
pusha
mov
int3
imul
mov
pop
shr
xor
cmp
xor
cmp
sti
sub
jmp
fimul
in
fst
cmps
mov
push
push
adc
sahf
shr
mov
(bad)
leave
dec
xchg
adc
sbb
jge
xchg
add
into
push
ss
int
and
pop
stc
fiadd
scas
inc
push
mov
xor
or
inc
in
sbb
and
and
push
pop
mov
mov
or
lds
xchg
push
or
ret
or
hlt
stc
cmp
loopne
shl
xchg
clc
movlps
cmp
sub
or
int
inc
fsubr
jmp
sub
sbb
and
(bad)
dec
sub
jl
fs
xchg
mov
xor
sbb
mov
xchg
dec
aaa
push
jbe
loopne
mov
loop
adc
ins
xchg
aas
cdq
add
xchg
(bad)
mov
pop
out
adc
pop
iret
push
(bad)
stc
sbb
inc
ins
in
aas
sbb
pop
call
retf
mov
nop
bound
push
aaa
mov
add
rol
mov
cmp
sub
jmp
push
cmp
icebp
mov
add
ret
cwde
out
loop
push
inc
rol
sbb
mov
push
dec
das
jp
xchg
or
mov
cwde
jmp
jmp
pusha
dec
scas
jb
addr16
fmul
imul
jmp
push
pop
lock
hlt
lds
std
fistp
repz
retf
inc
pop
mov
adc
xor
pop
inc
pusha
xchg
push
mov
and
dec
psubusw
lock
cmps
dec
push
push
mov
cmps
clc
hlt
jno
clc
dec
test
ror
mov
add
jmp
(bad)
adc
out
repz
popf
out
inc
movs
xchg
das
push
jnp
not
jl
push
es
add
mov
jg
xchg
or
inc
mov
jp
and
dec
leave
loopne
sahf
in
add
imul
out
cmp
(bad)
jl
nop
shl
push
imul
jnp
sub
mov
sub
test
in
adc
int
push
fidiv
push
rcr
pop
shl
leave
hlt
mov
rol
mov
in
adc
jb
lods
pop
(bad)
icebp
aam
(bad)
lods
dec
xor
mov
add
bound
ins
(bad)
jno
dec
les
sub
fst
loop
lock
mov
mov
rol
sbb
mov
dec
repnz
test
push
or
shl
mov
adc
rol
ds
inc
out
jb
jno
addr16
fisub
fild
scas
inc
lods
xlat
stos
(bad)
sysenter
outs
or
dec
pop
out
cmc
add
lock
add
mov
les
aaa
fisttp
(bad)
loope
or
loop
sbb
mov
jbe
xchg
(bad)
mov
mov
cmps
mov
cld
cmp
arpl
jmp
add
imul
xchg
sub
cwde
bound
fild
fild
pusha
xor
pusha
and
scas
paddd
rcr
arpl
cmova
xor
loop
add
or
jp
xor
mov
scas
inc
test
scas
and
xlat
pop
sbb
and
loopne
pop
aas
mov
mov
inc
nop
sbb
lods
movs
inc
xor
push
sti
add
adc
pop
dec
aaa
jge
mov
in
adc
push
pop
fwait
adc
out
push
jnp
jnp
cmp
or
les
mov
sub
dec
vminpd
cs
cld
mov
aaa
enter
cmp
test
loope
push
int3
(bad)
jle
cmp
cmp
cs
fisttp
leave
imul
test
in
mov
push
neg
jnp
mov
das
test
jns
in
xor
ret
mov
mov
js
mov
and
mov
jmp
jmp
xor
ficomp
out
pop
mov
jp
gs
sbb
fincstp
mov
retf
bound
mov
add
jo
stos
xor
mov
data16
add
xchg
push
xor
test
adc
mov
inc
mov
mov
and
mov
inc
stos
retf
pop
in
or
inc
scas
inc
lds
cld
mov
xchg
rcr
outs
adc
stc
(bad)
cli
push
cmps
mov
pusha
mov
cmps
repz
mov
and
inc
and
ins
jecxz
inc
out
dec
lahf
inc
xor
inc
mov
mov
xor
loop
fst
ins
dec
sahf
pop
enter
fadd
mov
cdq
push
dec
adc
mov
inc
cmp
xor
int
dec
nop
mov
cmps
push
dec
or
push
ret
cmp
jl
sub
adc
movs
sub
jne
jo
scas
and
dec
sub
fmul
call
icebp
or
mov
imul
aam
shl
xchg
pop
aas
mov
or
mov
jns
mov
cmps
imul
mov
or
icebp
fwait
mov
xor
cld
sub
and
ins
add
test
ds
in
test
sub
mov
test
shl
in
test
xor
or
mov
pop
xor
int
push
pop
sbb
lods
push
cmp
outs
mov
aas
scas
shr
xchg
sub
add
movs
pop
fild
das
add
adc
pop
lahf
jne
jmp
ja
dec
movs
mov
dec
mov
loopne
push
pop
jle
lods
inc
cmp
inc
inc
add
adc
inc
jns
cdq
fisttp
call
or
xchg
stos
stos
aam
enter
xor
arpl
and
aad
pop
push
lds
mov
ds
xchg
test
test
les
sbb
popa
imul
mov
mov
mov
push
or
and
cmp
cmp
js
push
mov
xchg
add
icebp
xchg
pop
xchg
push
mov
jns
push
sar
fwait
mov
fidivr
jnp
call
(bad)
outs
in
inc
jecxz
imul
push
out
nop
mov
xchg
into
idiv
outs
and
jp
xor
jb
mov
out
jb
ret
cld
mov
dec
addr16
lock
int3
fcmovnb
adc
jne
sub
and
mov
test
je
add
jmp
cli
push
xor
(bad)
div
dec
addr16
add
(bad)
repnz
lea
mov
aaa
(bad)
push
imul
inc
jl
xchg
xor
cwde
repz
gs
cmp
test
loop
mov
xor
(bad)
int3
fist
cmp
mov
dec
cmps
ror
jle
std
(bad)
arpl
xchg
fistp
inc
into
jmp
lods
pop
dec
pop
cmps
aad
into
ror
push
xor
gs
je
or
test
push
or
pop
mov
clc
(bad)
adc
xor
and
setae
dec
jb
(bad)
mov
mov
outs
stos
nop
push
pop
mov
fmul
in
pop
push
sbb
mov
fldcw
clc
lods
cmp
xor
into
sbb
xor
clc
xchg
dec
iret
outs
add
ret
icebp
jnp
sub
jmp
lods
aad
pop
add
jecxz
(bad)
push
je
daa
neg
pop
cmp
lock
icebp
loopne
inc
sbb
mov
pop
aad
pop
jg
lds
adc
stc
xchg
fs
in
xor
(bad)
jnp
mov
jp
push
xchg
inc
mov
iret
ss
(bad)
dec
mov
or
in
(bad)
lock
push
cmp
or
add
xchg
mov
or
xor
sub
mov
add
inc
push
add
mov
mov
jo
push
outs
inc
push
push
push
gs
pop
add
push
jne
push
cmp
ds
add
jp
mov
xor
add
lds
sbb
into
call
push
nop
add
imul
push
sbb
in
scas
lahf
push
std
dec
(bad)
out
mov
shl
or
popa
stos
int
dec
mov
dec
out
sub
test
aad
popa
inc
jge
enter
dec
mov
xchg
stc
fistp
xchg
push
mov
ds
iret
repnz
aas
cpuid
add
test
xor
fild
xchg
push
jae
inc
mov
imul
jae
or
enter
push
jne
pop
aam
jp
jae
inc
cdq
mov
jg
cmp
sub
mov
cmp
das
loope
adc
cld
ins
div
fnstcw
leave
ret
sbb
retf
or
and
test
cmp
pop
in
out
movs
mov
cmp
or
mov
and
mov
test
xchg
sub
enter
hlt
ds
daa
ds
xchg
jp
adc
adc
xchg
lds
daa
or
push
mov
add
cdq
adc
pusha
das
in
fisub
call
add
sub
pop
sti
mov
or
jp
shl
inc
add
sbb
xlat
loop
in
add
mov
mov
xor
mov
push
leave
and
inc
jae
ret
call
or
in
(bad)
imul
out
(bad)
cli
sub
sar
movs
(bad)
dec
push
popf
pop
inc
lds
(bad)
fisub
lods
mov
inc
fs
call
push
and
js
xchg
shr
call
xchg
lea
pop
add
enter
sub
inc
xor
aaa
push
xor
scas
leave
(bad)
loop
sbb
push
or
pop
mov
jle
mov
test
mov
inc
sbb
add
shl
retf
pop
dec
lods
div
cdq
shr
movs
loop
sbb
aas
sbb
mov
cmp
cli
stos
(bad)
aaa
or
pop
jb
jecxz
jg
xchg
es
stos
xchg
jge
cwde
dec
lahf
iret
fwait
out
sbb
fadd
lods
cdq
adc
mov
lods
mov
sub
inc
leave
sub
push
inc
stc
retf
adc
push
inc
(bad)
icebp
jmp
cmp
call
sub
xchg
dec
mov
dec
mov
icebp
push
pop
and
xlat
cmp
dec
lods
data16
aaa
mov
dec
add
out
jnp
cmp
sahf
xchg
rcl
inc
les
(bad)
push
std
inc
push
jmp
add
ja
xchg
jl
es
test
cdq
test
in
and
push
scas
adc
dec
push
mov
cmp
ins
or
fadd
sub
mov
mov
int3
pop
sbb
jmp
sahf
jns
inc
aas
pop
jmp
mov
cmp
push
pop
and
das
pop
les
sub
aaa
jb
test
je
inc
ja
pop
cmp
rol
sbb
ror
xor
mov
data16
ret
pop
fwait
call
jge
xchg
cmp
aas
xchg
call
sub
mov
inc
mov
mov
jge
outs
sub
and
jmp
dec
mov
or
shr
dec
cmps
addr16
outs
int
movs
mov
cmp
stos
sbb
sbb
add
icebp
je
call
mov
call
loop
movs
int
pushf
dec
inc
arpl
retf
shl
cmps
gs
test
inc
bound
call
sbb
or
push
icebp
jne
xchg
mov
leave
daa
rcl
mov
out
adc
test
loopne
enter
and
(bad)
int3
fbld
fs
(bad)
mov
jp
(bad)
loopne
es
rcl
cmp
push
stc
pop
mov
jo
das
and
arpl
je
test
mov
mov
jl
jp
xor
mov
(bad)
pop
aam
shr
or
mov
sbb
rol
add
out
add
ja
addr16
outs
addr16
lock
pop
cmc
xor
pop
fwait
aas
xchg
dec
cld
loopne
inc
cmc
mov
ja
cmp
popa
scas
dec
test
push
fld
mov
push
mov
mov
lods
rcr
dec
adc
out
inc
add
dec
imul
mov
call
xor
addr16
xor
sbb
cmp
pop
out
lea
or
mov
or
xor
test
sbb
loopne
movs
mov
movs
mov
jecxz
retf
das
mov
das
xchg
xor
mov
sbb
dec
push
mov
jp
loope
xchg
clc
addr16
rcl
sbb
dec
in
sbb
dec
push
test
imul
jge
mov
mov
xchg
movs
pop
nop
loope
sub
mov
jmp
pop
dec
rcl
pop
dec
pop
cs
jbe
(bad)
ja
loop
lods
aam
mov
lods
das
sub
(bad)
mov
imul
or
fwait
call
loopne
lock
call
xchg
popf
bnd
adc
mov
loop
push
adc
ins
out
fiadd
inc
scas
cmp
div
retf
shr
lods
mov
add
xchg
adc
inc
mov
or
int3
xor
ja
add
out
stc
daa
push
(bad)
in
dec
pop
inc
(bad)
out
add
mov
jmp
lods
mov
pop
sub
add
ret
pop
lods
adc
arpl
push
hlt
lahf
cs
aam
sub
daa
mov
or
aam
movs
push
mov
cmp
popa
mov
sub
mov
dec
repnz
pop
aam
sub
cs
adc
mov
cmp
shr
and
mov
mov
adc
and
jmp
and
or
outs
inc
(bad)
mov
mov
scas
(bad)
dec
sbb
inc
push
push
push
mov
fwait
(bad)
fisub
mov
xchg
push
cmp
jbe
jg
lods
stc
and
and
mov
mov
mov
add
dec
jp
std
mov
jnp
je
and
shr
or
adc
push
ins
mov
neg
les
inc
out
pusha
dec
test
test
xchg
aaa
mov
or
scas
and
or
dec
and
popf
outs
sbb
movs
mov
inc
fsub
or
dec
jge
cmp
mov
cmp
mov
mov
jo
mov
and
aaa
jne
push
sbb
rol
and
mov
(bad)
mov
mov
ror
cmp
mov
mov
jae
in
cmp
and
and
or
and
jbe
js
hlt
jbe
mov
outs
push
xchg
mov
push
push
dec
add
arpl
arpl
or
and
pop
mov
sub
push
push
pop
mov
imul
mov
shr
clc
retf
push
inc
mov
cmp
test
push
cdq
movs
xchg
cmp
sub
stc
in
cmp
call
ret
out
mov
call
sahf
add
xor
pop
sbb
sti
push
nop
lock
pop
mov
out
icebp
or
inc
loop
lds
stos
test
sti
push
jg
jno
push
dec
dec
(bad)
or
inc
imul
movs
pop
or
das
inc
test
lods
pop
retf
dec
loop
test
xlat
mov
xchg
jbe
sbb
out
sub
add
ins
mov
sub
or
fistp
mov
int3
xchg
and
push
(bad)
cld
dec
push
mov
enter
shl
in
xchg
adc
loope
and
xor
adc
call
mov
add
push
sub
add
push
ror
aam
shr
or
call
jno
add
cli
xchg
adc
rcr
push
jns
je
out
xor
pusha
mov
int
outs
jecxz
push
dec
pop
pushf
dec
daa
aas
mov
mov
repnz
pop
icebp
inc
fld
stos
lods
in
push
ins
out
pop
scas
sbb
gs
ret
inc
loopne
jbe
cs
cmp
retf
xlat
(bad)
dec
(bad)
pop
push
xchg
cs
push
pop
fisub
cs
push
jge
mov
popa
pop
mov
loop
ret
repnz
fdiv
mov
outs
jne
push
(bad)
loop
mov
ret
or
pop
and
out
das
mov
out
(bad)
push
imul
js
aas
lds
out
cmp
mov
fs
fild
push
ins
xchg
ja
or
andnps
je
push
adc
dec
call
cmp
stc
aaa
xor
out
jbe
hlt
inc
inc
pop
mov
xchg
das
jmp
leave
mov
jnp
mov
xchg
je
or
or
pop
pop
and
and
mov
mov
dec
mov
inc
lods
adc
fld
mov
in
xchg
pop
inc
xchg
mov
ds
test
or
mov
imul
adc
fwait
cmp
aas
(bad)
sbb
cwde
mov
jmp
(bad)
mov
scas
mov
jnp
loope
mov
inc
jl
cmp
ja
mov
jg
scas
pop
xlat
out
xor
je
cmp
ja
push
stos
dec
and
lock
xchg
or
xchg
adc
pop
arpl
cli
pop
lahf
pop
mov
cmp
inc
sahf
loope
pop
jnp
sahf
mov
dec
sub
out
adc
mov
scas
push
jle
mov
retf
adc
std
dec
(bad)
fldcw
mov
lods
popf
sub
(bad)
in
data16
(bad)
imul
mov
sti
cmp
pop
or
xor
out
cmp
sub
xchg
cmp
in
loope
shr
xor
cmp
jmp
push
xchg
aam
cmp
pop
push
pop
pop
cmp
(bad)
loopne
adc
div
mov
push
pop
lea
(bad)
or
sub
lods
dec
repnz
mov
dec
scas
sti
pop
mov
aam
add
jge
(bad)
mov
(bad)
sub
xchg
push
pop
push
pop
aas
(bad)
or
adc
in
arpl
or
push
into
popf
(bad)
and
pop
or
sahf
js
mov
mov
push
cmps
push
int
test
pop
or
jbe
lods
fldcw
hlt
xor
jne
pushf
mov
fisub
and
or
out
sbb
test
scas
in
(bad)
and
dec
movs
movs
mov
jmp
jb
shl
pop
pop
(bad)
sub
cld
adc
retf
repnz
sub
in
retf
mov
mov
movs
and
mov
ficom
test
jmp
in
inc
sub
rcl
push
fwait
shl
push
sahf
outs
dec
fist
push
rcr
inc
jg
mov
fadd
dec
xchg
fnstsw
sbb
gs
and
jge
lds
outs
dec
dec
bound
sahf
aad
repz
sbb
(bad)
xchg
sbb
sti
sar
push
xlat
out
lock
lock
mov
sub
sub
xchg
add
pop
(bad)
pop
jnp
push
repz
int3
jmp
leave
popa
imul
fstp
jno
jecxz
mov
(bad)
jbe
stos
xchg
mov
cmps
xchg
add
stos
aad
ret
sbb
mov
pushf
or
std
pop
mov
sub
cli
xchg
pop
adc
fld
outs
pop
dec
jns
cwde
sbb
shl
add
or
adc
ss
loopne
frstor
jmp
mov
push
jno
dec
iret
sbb
pop
ret
jnp
xor
mov
adc
add
mov
xchg
scas
mov
es
mov
in
es
(bad)
pushf
adc
sbb
adc
aad
shl
daa
add
out
mov
cmp
inc
in
sub
sub
mov
jecxz
(bad)
div
movs
push
imul
(bad)
fadd
xchg
mov
xlat
mov
mov
aad
fcomp
adc
mov
mov
jecxz
push
rep
sbb
xchg
fild
push
in
add
sar
ins
out
ins
into
loop
stos
dec
xchg
ss
cmp
push
adc
or
outs
retf
mov
icebp
cmps
sub
sbb
in
out
sbb
jecxz
mov
push
mov
dec
shl
mov
cdq
es
pushf
push
mov
fwait
dec
sub
repnz
lock
call
sub
or
pop
jl
push
retf
mov
jae
mov
cmp
pop
xor
(bad)
mov
jle
pop
in
iret
dec
das
jb
inc
imul
(bad)
jge
out
inc
fcmovu
xor
jnp
add
push
push
pushf
leave
add
cld
mov
xchg
lds
pop
pop
cmc
imul
mov
xor
mov
test
dec
inc
es
or
aas
mov
mov
sub
mov
or
scas
int3
fld
aam
lahf
sahf
das
sub
sub
addr16
fcomp
xchg
mov
clc
jb
mov
sbb
pop
daa
push
inc
rol
push
dec
in
jne
mov
out
in
(bad)
lods
mov
gs
cli
ins
and
jecxz
mov
add
jnp
mov
pop
cmp
mov
xchg
mov
jp
mov
fld
fbstp
inc
adc
and
pavgb
mov
sub
push
sub
dec
pop
cmp
arpl
dec
repnz
push
xchg
scas
in
push
fldl2t
ds
adc
jns
add
sub
lock
(bad)
int
mov
cmp
mov
sbb
or
xor
push
cwde
xor
in
hlt
ja
fist
jg
and
push
push
adc
cdq
pop
test
jmp
jne
sbb
sti
push
sbb
shl
loope
and
adc
mov
push
cld
and
cmp
inc
mov
fcomi
stc
add
sahf
mov
jne
jp
ficomp
movs
leave
lea
das
cmpxchg
popa
retf
inc
dec
pop
pop
cs
mov
popa
mov
xor
pushf
mov
jmp
lock
pusha
push
mov
add
shl
xchg
cmps
in
test
pop
xchg
(bad)
dec
xchg
adc
nop
and
dec
cmps
sbb
inc
mov
aas
mov
hlt
and
pop
das
pop
scas
xor
pop
xor
dec
xchg
cmps
add
aam
or
mov
jmp
cmp
jnp
xchg
cld
inc
dec
mov
cdq
shl
retf
sub
inc
jecxz
xchg
icebp
xchg
cmps
inc
pop
sbb
sbb
mov
xchg
mov
fsub
mul
mov
ss
dec
mov
pusha
int
out
cli
mov
lds
push
inc
cmp
les
jbe
add
pop
mov
jecxz
lea
lea
mov
inc
lods
cmp
dec
sub
and
nop
jge
in
in
sub
test
push
mov
fstp
fcmovne
xchg
sub
jmp
sub
xchg
(bad)
out
ret
xchg
cmps
out
inc
add
push
jle
pop
fistp
nop
and
mov
pop
cwde
cmp
in
fmul
imul
sbb
je
fistp
mov
inc
cli
(bad)
bound
call
ud0
xor
test
imul
mov
fild
or
mov
scas
and
mov
cmp
gs
ss
xor
inc
push
ss
mov
xchg
(bad)
push
xor
sub
mov
ret
pop
or
add
sub
mov
adc
cmp
aas
out
cmp
jmp
data16
adc
xor
lods
cmp
loopne
inc
sub
jbe
out
hlt
movs
retf
repnz
jle
cmp
mov
fsub
jne
lods
mov
jns
call
std
or
mov
push
inc
lock
mov
xor
aad
movs
sahf
xchg
lea
mov
inc
dec
retf
xchg
repnz
ret
jmp
mov
imul
adc
fst
shl
stos
addr16
and
ret
sbb
mov
in
gs
enter
and
out
and
lahf
lods
mul
dec
mov
pop
mov
sbb
ds
test
xchg
adc
and
pop
jbe
pop
cs
cmp
in
int
xchg
scas
xchg
push
xor
mov
loopne
js
pop
lods
hlt
lods
xor
pop
push
jecxz
fs
sub
into
ds
stos
pop
imul
adc
mov
sub
xchg
cmps
mov
in
xchg
es
cmp
xor
mov
xor
sbb
stos
adc
mov
cmp
sbb
push
dec
ret
pop
pushf
pop
jno
ins
popa
outs
jg
(bad)
mov
(bad)
jmp
cdq
inc
dec
mov
test
loop
std
jp
push
mov
aad
pop
add
stos
and
mov
icebp
mov
fisubr
int
ficom
sbb
and
pop
jl
push
fcmovb
xchg
sbb
inc
mov
pop
xor
retf
or
lock
cmp
scas
mov
and
xchg
test
push
mov
or
fisttp
dec
xor
mov
fild
std
jle
sbb
xchg
or
cmp
mov
cmps
mov
add
or
cld
mov
mov
push
in
shr
xchg
xor
cli
mov
fild
sti
aaa
aad
xor
mov
add
gs
cwde
sub
outs
fist
push
sbb
push
and
leave
push
pop
pop
sub
fnstsw
mov
pop
imul
xor
inc
inc
fild
xchg
ins
retf
loop
(bad)
lods
add
(bad)
push
push
(bad)
xchg
push
data16
ins
outs
jae
xchg
sub
aas
sub
push
mov
ror
push
jae
repnz
add
aas
repnz
inc
scas
push
push
rol
xchg
scas
inc
lods
xchg
movs
out
shl
fpatan
jno
pop
call
repz
out
dec
mov
xor
xchg
sbb
fstp
sub
aas
dec
mov
cmp
ja
jo
pushf
push
push
movs
jne
test
push
(bad)
movs
ds
xchg
dec
jge
and
and
sbb
jmp
push
cdq
cmp
cmp
ins
fnstcw
mov
clc
mov
xor
retf
sahf
(bad)
mov
push
xor
jno
shl
dec
add
jmp
xchg
(bad)
adc
ret
nop
jmp
fdivr
cmp
inc
sbb
and
jo
mov
cmps
imul
mov
lods
repz
xchg
popf
adc
cli
sub
in
outs
stc
sti
push
dec
(bad)
icebp
push
js
xchg
test
neg
push
xchg
mov
inc
sbb
mov
in
in
stos
mov
addr16
push
mov
lds
cmp
call
sub
popf
fdiv
fucomp
loope
inc
mov
(bad)
fmul
jno
mov
and
mov
mov
out
mov
cmp
pop
stc
out
push
mov
aam
or
(bad)
bnd
xchg
sub
das
inc
icebp
call
cld
xchg
test
mov
push
(bad)
push
cmp
clc
das
pop
les
sub
xlat
push
movs
cmp
push
cwde
jp
sub
dec
mov
outs
cmps
shl
add
lock
sub
fsub
and
mov
add
gs
pop
dec
pushf
and
repnz
cmc
inc
jmp
mov
popa
pop
push
out
sbb
(bad)
push
sub
add
sbb
inc
sbb
loope
(bad)
cmp
push
dec
cmc
jae
movs
ficomp
cmp
mov
mov
outs
or
test
leave
cmc
lods
push
out
mov
dec
jp
loop
jne
loop
sub
(bad)
mov
xor
in
idiv
test
dec
cmp
push
movs
pop
jecxz
shl
add
push
iret
lds
icebp
pop
mov
mov
or
mov
stos
push
sbb
sub
rcr
xchg
dec
jp
cmp
cs
jb
pop
test
rcl
and
fbld
mov
call
ficomp
pop
add
jo
push
repz
jg
fidiv
(bad)
stos
fstp
dec
inc
je
popf
shl
mov
data16
push
push
addr16
dec
jne
or
and
lahf
ins
and
mov
mov
add
or
sub
pop
jbe
dec
rcr
scas
inc
in
lea
out
leave
ins
jp
ror
call
push
mov
mov
sub
repnz
(bad)
xchg
jg
cmp
xor
dec
data16
ss
and
fst
leave
mov
add
adc
cwde
push
add
add
daa
push
not
scas
mov
push
push
cmp
sub
aam
sub
add
push
push
cdq
mov
ror
add
mov
pusha
sti
mov
pop
fucomp
cmp
xor
jbe
hlt
push
sub
pop
or
rol
ret
lahf
data16
fimul
outs
add
call
pop
dec
es
adc
pop
sti
fidiv
jl
push
xchg
inc
mov
jns
pop
retf
jmp
rol
stos
out
adc
sub
es
rcr
je
jg
jb
inc
stos
movs
pop
dec
mov
adc
in
adc
aas
or
mov
mov
cmps
fwait
stos
add
mov
sahf
push
pop
inc
leave
arpl
stos
sub
cmc
sub
xor
(bad)
in
ins
cmp
adc
les
in
bound
in
add
gs
mov
pop
pop
jnp
push
cdq
mov
sub
sbb
cmps
inc
clc
cmp
pop
repnz
xchg
or
xchg
and
xchg
cwde
sar
adc
(bad)
cmp
dec
rol
lahf
loop
xor
inc
adc
mov
test
int
pop
test
test
aaa
movs
fwait
(bad)
sub
sub
dec
in
dec
cld
les
sahf
adc
dec
into
mov
ins
dec
cld
ds
ret
dec
stos
or
sub
push
into
retf
and
pusha
or
xchg
push
and
or
cmp
(bad)
pop
(bad)
xchg
push
lods
pop
jnp
movs
das
ja
inc
and
gs
je
jl
mov
je
jg
xor
cld
adc
lds
out
xor
out
scas
jecxz
xchg
icebp
std
and
scas
je
cmp
push
xor
gs
jle
clc
jbe
jecxz
dec
and
add
mov
push
ret
mov
pusha
stos
retf
repz
jg
test
or
adc
retf
pop
ins
dec
pop
pop
push
pop
in
inc
dec
pusha
push
call
sub
(bad)
xchg
inc
fisub
xchg
sub
ret
iret
sub
mov
and
sub
pop
(bad)
mov
outs
sbb
jmp
adc
outs
mov
pop
ret
xchg
je
in
lea
mov
fsubr
mov
test
push
iret
mov
fsub
sahf
retf
hlt
mov
outs
fs
fdivr
xor
mov
push
rol
inc
jo
xor
aas
loop
push
sbb
lds
push
xchg
lds
pop
mov
dec
dec
out
jle
and
xchg
xchg
mov
sub
cmps
dec
std
jg
jp
sahf
mov
stos
outs
stc
xor
retf
cmp
int
push
sub
adc
xor
jp
jbe
lds
inc
outs
(bad)
in
pop
repnz
ja
mov
push
pop
dec
and
mov
inc
xor
in
out
adc
ficomp
imul
push
aaa
std
xchg
popf
pusha
aad
dec
out
iret
lock
push
or
jne
jle
test
dec
cmc
cmp
pushf
mov
mov
cwde
push
pop
in
lea
int
sub
mov
shr
test
push
or
mov
push
scas
cmps
and
xchg
stc
dec
(bad)
jl
jle
pop
and
loope
enter
(bad)
shl
and
in
or
test
inc
neg
scas
inc
adc
pop
pop
jb
jb
loop
jmp
or
stos
test
jl
mov
xchg
nop
lods
cwde
inc
mov
retf
inc
cmp
adc
iret
mov
cmp
icebp
out
or
(bad)
add
lea
fwait
dec
in
fcmovb
and
retf
sub
pop
in
cwde
pushf
std
mov
test
retf
push
inc
push
mov
ins
pop
call
movs
stos
jmp
js
aaa
push
lock
push
out
ins
and
icebp
or
loopne
push
shl
xor
push
jp
jmp
jp
mov
mov
or
inc
aam
shr
les
xchg
mov
stos
adc
inc
sahf
(bad)
movs
sbb
jns
inc
mov
ja
jle
cmp
hlt
jnp
xor
xor
aaa
mov
sub
dec
aad
and
or
pusha
shl
cmp
hlt
push
dec
daa
push
data16
adc
cli
int3
lods
jo
les
arpl
add
div
mov
repnz
ins
cmp
and
cwde
hlt
jmp
in
and
fild
push
popf
push
xor
mov
push
js
aam
out
cdq
movs
lds
mov
fdivp
int3
(bad)
daa
sahf
fidivr
jae
mov
xchg
cld
pop
sahf
mov
lods
(bad)
ja
jle
fs
and
rcr
mov
ins
daa
push
cld
sub
sbb
sahf
stc
jb
xor
sbb
mov
popf
push
(bad)
adc
jp
mov
dec
mul
jmp
xor
and
sti
inc
add
cmps
(bad)
cmp
jns
int
lea
out
pop
add
pop
rcr
mov
bound
jne
loope
in
adc
push
sbb
outs
mov
movs
leave
mov
cli
xor
in
xchg
pop
and
sbb
pop
dec
loop
mov
cmp
ret
inc
out
arpl
xchg
imul
mov
pop
adc
dec
sub
jns
sub
and
cmp
(bad)
pop
scas
in
cdq
xor
jmp
pop
lods
pop
iret
(bad)
jl
inc
adc
push
push
hlt
fild
pop
aaa
jne
cmp
or
cs
xchg
(bad)
enter
(bad)
nop
inc
outs
aas
fild
shr
(bad)
shr
mov
(bad)
cmps
mov
bound
movs
pop
test
scas
loop
ins
mov
sub
inc
inc
sub
cmp
sti
fistp
mov
dec
ins
jecxz
loope
sbb
xchg
cmp
shr
in
push
inc
aam
sub
or
lds
sub
lock
das
cli
daa
push
das
and
idiv
inc
jmp
fnstcw
mov
popa
sahf
movs
daa
cmps
pushf
movs
mov
and
or
ror
adc
cmp
sub
jae
or
jmp
sbb
scas
dec
imul
cmp
mov
arpl
or
ins
cmc
sub
scas
not
repz
data16
xchg
jl
adc
xchg
lea
inc
xchg
js
add
retf
inc
xchg
test
daa
or
ins
add
ror
iret
lods
(bad)
inc
into
(bad)
int3
and
mov
sub
mov
lds
std
and
pop
sar
je
cwde
adc
int3
rol
sbb
(bad)
pop
push
xchg
scas
jmp
add
cmp
mov
fild
xor
dec
cmps
movs
add
mov
mov
mov
stc
ret
jle
and
mov
ss
mov
idiv
sub
add
inc
(bad)
fcomp
xor
rcr
dec
pushf
sbb
les
daa
(bad)
std
(bad)
push
cmp
(bad)
adc
xchg
not
jne
pushf
jmp
and
and
xor
or
add
stos
push
mov
jns
pusha
and
cdq
cmps
mov
mov
jecxz
sub
jae
lock
(bad)
push
popa
fcom
stc
jle
mov
xchg
jo
jnp
in
popf
mov
sbb
ja
jmp
push
fmul
adc
mov
fild
cmps
int
les
inc
inc
pusha
movs
mov
or
adc
out
popa
cmp
cmp
xchg
not
and
out
jmp
xchg
mov
or
test
jne
imul
scas
and
or
and
push
int3
pusha
(bad)
rcr
pop
out
jecxz
and
fsubr
icebp
inc
mov
iret
xor
popa
aam
mov
aaa
add
or
ins
(bad)
aam
push
push
push
jbe
mov
inc
sbb
stc
add
jp
leave
mov
dec
pop
mov
mov
mov
jecxz
es
pop
add
clts
adc
in
aaa
aam
dec
ss
mov
cmp
loopne
out
pop
test
jp
and
pop
dec
mov
jno
inc
jb
jecxz
push
or
push
dec
push
cmp
ja
push
rcr
xor
pop
sbb
adc
and
mov
fild
push
pop
inc
xchg
xchg
mov
sub
and
out
neg
out
call
mov
push
pop
sbb
sbb
and
jecxz
add
hlt
sbb
xchg
mov
add
call
jae
jle
jae
mov
pop
lea
test
jg
push
(bad)
push
loope
push
inc
jmp
xor
pop
or
push
(bad)
jae
mov
add
sbb
jne
hlt
sub
bound
pop
pop
mov
(bad)
call
iret
cs
rcr
jl
mov
fldenv
push
pop
outs
and
sbb
pop
jnp
push
inc
mov
test
pushw
adc
xchg
cmp
mov
mov
xor
sub
out
pop
jbe
xchg
cmp
xor
pop
popf
jmp
es
pushf
sub
mov
mov
pop
fldenv
or
packssdw
in
inc
mov
xchg
mov
sahf
popf
stos
cmps
movs
pop
out
(bad)
cld
dec
adc
jecxz
fist
mov
and
mov
popf
sbb
pop
(bad)
push
aam
ins
sbb
mov
mov
cmps
mov
repz
jge
(bad)
lds
xchg
push
push
xchg
xchg
cmp
xor
inc
inc
pop
scas
or
adc
(bad)
mov
sub
cli
add
lea
aam
mov
(bad)
mov
mov
mov
mov
adc
fwait
mov
pop
and
test
jb
jmp
lods
fiadd
test
pop
cmove
and
lea
and
int
jns
and
sub
and
jns
lods
pop
shl
mov
les
and
mov
add
ss
gs
ss
xchg
jecxz
add
das
push
call
dec
ins
retf
sbb
push
popf
add
push
mov
xor
pop
pushf
(bad)
push
lods
mov
jno
dec
int3
mov
xchg
mov
push
mov
(bad)
popa
add
shl
and
lods
fwait
stos
test
cmp
pop
mov
retf
mov
mov
nop
sub
add
jle
popf
mov
mov
outs
mov
daa
les
mov
xlat
xchg
retf
idiv
mov
aam
ret
jg
mov
leave
or
xchg
dec
ins
aaa
mov
cmp
mov
adc
add
xchg
rol
sahf
fcomp
jno
outs
loop
(bad)
stos
ins
scas
push
mov
xor
adc
sbb
in
cmc
push
sahf
imul
add
mov
cwde
mov
sbb
or
adc
daa
ja
data16
movs
push
cli
out
xlat
(bad)
js
mov
repz
pusha
adc
mov
xchg
pop
(bad)
fcomp
idiv
mov
rcl
rol
fcom
sub
data16
(bad)
jns
push
add
(bad)
(bad)
push
add
mov
xchg
lods
sub
repnz
call
dec
mov
mov
adc
mov
out
retf
retf
push
out
loop
xor
scas
sbb
(bad)
jo
jp
sub
and
inc
xchg
(bad)
scas
call
inc
repz
addr16
xchg
arpl
je
mov
leave
clc
adc
xchg
jne
adc
lods
and
dec
in
ror
xor
push
push
mov
shl
clc
pop
push
adc
adc
pop
outs
sub
pop
xchg
or
sub
cmp
push
lock
inc
xchg
div
mov
add
xchg
int
fwait
call
in
xlat
in
mov
or
ret
(bad)
loop
scas
rcr
inc
aam
dec
cmp
dec
cmps
and
cmc
xchg
mov
push
and
fs
jecxz
adc
inc
nop
loop
xchg
xchg
shr
pop
mov
mov
add
mov
sbb
movs
call
sbb
data16
xchg
mov
shl
mov
shl
es
mov
and
or
hlt
adc
fdivp
pop
call
inc
imul
ds
xchg
and
inc
mov
in
push
(bad)
lods
mov
iret
xchg
gs
cmp
pop
push
jmp
out
test
addr16
daa
loopne
jne
jp
aad
add
jecxz
lahf
and
fdivr
ffreep
mov
mov
test
arpl
inc
inc
fst
int
retf
pop
lea
into
retf
(bad)
fistp
inc
enter
jo
and
in
fcmovnbe
aad
or
and
aas
inc
lea
jmp
rcl
mov
sbb
xor
add
nop
int
cmp
push
mov
sub
mov
outs
mov
stos
ror
pop
dec
jbe
adc
movs
jae
sub
pusha
or
xchg
sahf
push
rol
(bad)
push
jmp
ins
mov
dec
(bad)
(bad)
pop
inc
and
sbb
int
push
xchg
and
sti
cmp
mov
mov
les
pop
out
adc
adc
jecxz
sbb
jmp
aad
push
inc
mov
dec
add
xor
cdq
add
adc
lock
sbb
add
enter
push
pop
lods
std
sahf
xor
aas
aam
mov
mov
add
ret
sub
inc
shl
jecxz
nop
(bad)
jmp
adc
and
lods
dec
push
and
dec
pop
js
jns
xchg
retf
xor
sar
pop
int3
ss
in
mov
inc
je
movs
cmp
cmp
adc
inc
xchg
je
cmps
xor
mov
rcpps
sbb
xor
push
rcr
lahf
adc
mov
mov
mov
and
outs
xchg
jle
loopne
or
pop
xor
pop
or
or
sub
js
bound
ja
xor
jae
fsub
rol
pop
icebp
pop
jmp
scas
jo
or
dec
repz
mov
mov
daa
xor
adc
or
push
ins
shl
int3
cs
aad
je
call
sti
test
mov
xchg
mov
push
jge
cmps
ds
in
out
in
jecxz
test
push
(bad)
sub
sbb
jbe
hlt
add
push
mov
mov
nop
sub
xor
sbb
push
push
in
arpl
and
or
xor
test
xor
fcom
loop
shr
ret
xchg
arpl
push
imul
(bad)
inc
into
fwait
retf
jmp
xor
xlat
mov
cmp
mov
pop
mov
dec
or
popf
xor
sahf
push
mov
mov
or
cmovp
xchg
sbb
shr
ins
jg
dec
xor
pop
mov
in
(bad)
scas
movlps
int
into
aaa
mov
inc
inc
and
call
mov
test
icebp
out
popa
push
or
inc
sar
mov
or
clc
cmp
cmp
xor
pop
mov
xchg
cmp
mov
mov
cmps
and
ror
fcomp
outs
inc
mov
and
out
retf
cmp
pop
mov
mov
test
or
stc
stc
adc
adc
inc
jno
mov
mov
sub
mov
xchg
iret
pop
dec
xchg
or
xor
push
pushf
imul
out
scas
(bad)
enter
mov
adc
lahf
lock
movs
jns
pop
jae
cdq
push
sbb
jno
pop
fidiv
cs
xchg
and
aam
pop
sub
out
push
mov
ins
or
xchg
or
lods
jp
sbb
mov
jg
push
test
(bad)
in
shl
out
lods
in
adc
adc
sub
shl
push
sahf
pop
test
mov
sub
sub
mul
data16
mov
push
adc
out
add
or
push
je
mov
sbb
jge
cwde
cmp
cmp
push
inc
inc
or
retf
adc
sub
mov
es
dec
mov
jp
inc
(bad)
cli
push
imul
mov
dec
in
mov
dec
(bad)
test
xor
jl
mov
int
aam
sti
inc
popa
and
sub
ss
and
jns
cli
(bad)
adc
pusha
movs
and
rol
cmps
cdq
aas
inc
jp
jnp
mov
enter
add
ins
dec
sbb
in
mov
nop
adc
pop
pop
outs
cs
xor
in
imul
jmp
xor
mov
mov
jns
mov
aad
dec
outs
xlat
and
cmc
cmp
mov
push
xlat
mov
push
shr
in
int
popf
xchg
fbstp
and
out
imul
jp
cli
mov
pop
ror
cld
adc
pop
test
scas
adc
mov
jb
mov
in
xchg
test
mov
sub
and
cmp
xor
jbe
ret
repnz
jbe
push
jecxz
int
neg
cdq
inc
jno
add
sub
dec
rcr
xchg
cdq
xor
cmps
cs
sti
out
sub
arpl
not
icebp
scas
push
lods
inc
ins
loope
cmp
sub
inc
cmp
mov
movs
sub
arpl
mov
jae
mov
mov
mov
add
sbb
mov
stc
pop
sub
xchg
xor
jne
repz
xchg
jnp
adc
fcomp
add
xchg
cld
in
add
in
push
int3
jb
test
adc
(bad)
and
std
or
fidivr
out
pop
push
arpl
(bad)
sub
sbb
pop
inc
(bad)
lock
jle
ins
sbb
sbb
mov
xchg
dec
or
test
retf
mov
mov
lds
pop
pusha
shr
xchg
iret
jmp
jge
pusha
or
lahf
lock
jle
inc
or
mov
icebp
xchg
jmp
sbb
aam
mov
mov
pop
jns
out
int3
fistp
jns
nop
inc
mov
mov
mov
scas
cld
xor
jmp
loop
in
int
fwait
jbe
(bad)
imul
mov
cmp
arpl
dec
shr
adc
cmp
and
add
scas
fisttp
(bad)
jle
pop
or
cmps
test
pop
add
mov
jbe
sbb
ins
or
fwait
mov
je
push
scas
sub
repnz
xor
repnz
imul
pop
inc
fbld
pop
movs
adc
pop
adc
lods
lahf
jae
sub
jg
das
pop
dec
inc
cld
arpl
or
push
mov
pop
sbb
cmps
inc
popf
mov
adc
idiv
adc
push
dec
sub
xchg
movs
(bad)
lea
in
sahf
mov
lods
pop
retf
rcl
xchg
out
pop
test
mov
xor
rol
sub
aam
frstpm(287
daa
jle
jl
mov
push
out
cmp
cmp
cmc
cmps
add
iret
out
in
ja
and
sahf
sub
scas
push
sbb
pop
test
ins
mov
push
dec
mov
jb
cwde
push
push
scas
test
shl
xor
xchg
icebp
inc
xchg
pop
scas
or
pop
popa
cmp
mov
cdq
mov
cs
push
cmp
cmps
retf
or
jmp
pop
pop
xchg
int
ficom
pusha
jge
fldenv
add
dec
test
add
mov
or
cmps
sbb
jl
inc
sahf
mov
(bad)
ficomp
inc
sbb
or
aad
pop
sub
icebp
sub
clc
mov
jbe
pop
jl
fdivr
ins
loopne
inc
retf
cli
call
ins
addr16
dec
jl
ret
sbb
neg
add
jg
mov
adc
dec
jbe
mov
btc
xchg
in
mov
std
xchg
pop
push
lods
mov
add
arpl
scas
pop
fdivr
jecxz
mov
popa
inc
imul
nop
mov
inc
adc
add
and
cmp
aaa
nop
ror
add
gs
inc
loopne
adc
movs
mov
dec
enter
jns
cli
shr
xor
cmp
push
jmp
mov
push
dec
mov
gs
sbb
mov
shr
popf
dec
inc
xor
adc
mov
nop
push
out
out
mov
pop
push
adc
sub
jbe
in
sub
(bad)
stos
inc
adc
pop
add
and
sub
test
push
repnz
jne
add
jnp
jp
(bad)
fisttp
mov
or
mov
inc
jle
shl
dec
dec
sbb
cmp
push
push
cmp
es
dec
mov
push
aam
cmps
xor
jo
aam
push
mov
int3
push
pop
mov
popa
inc
cmp
inc
or
inc
push
int3
(bad)
out
sub
jmp
fcomp
or
and
daa
mov
loop
or
addr16
mov
xlat
mov
cmp
cmp
retf
call
sub
loopne
mov
xor
loopne
scas
sub
jbe
mov
movs
push
jnp
push
sbb
push
pop
outs
dec
mov
addr16
mov
loop
pop
test
stc
dec
inc
mov
pop
dec
pushf
leave
mov
dec
mov
mov
mov
pop
mov
inc
jg
scas
and
lods
mov
adc
in
push
pop
sub
and
sub
mov
pop
inc
lds
test
inc
sahf
mov
mul
adc
in
in
imul
sar
jmp
inc
jne
icebp
mov
adc
sbb
inc
and
add
xor
pop
fldenv
push
mov
stos
and
dec
pop
lea
fimul
push
cs
fldlg2
sbb
xor
arpl
dec
adc
nop
loopne
sbb
test
jle
scas
add
dec
sub
mov
clc
mov
repnz
xchg
or
and
jmp
mov
sbb
mov
mov
out
adc
(bad)
and
ret
cmc
arpl
addr16
sub
nop
mov
lods
mov
cdq
in
loop
out
(bad)
mov
push
iret
cmp
imul
cwde
arpl
stc
lods
js
pop
fdiv
sub
sub
es
lahf
sti
ja
mov
dec
(bad)
gs
mov
cdq
pop
sub
xor
loopne
test
cld
xchg
cwde
push
mov
bound
push
mov
(bad)
stc
inc
sub
enter
shl
and
sbb
jbe
loope
mov
stos
sub
xchg
call
pop
xor
scas
jmp
jge
jbe
dec
loop
add
pop
pop
jmp
mov
iret
call
mov
gs
lods
add
and
lea
mov
loope
mov
jne
icebp
mov
xor
leave
shl
jecxz
or
cmp
leave
and
adc
test
push
cmp
imul
pop
dec
js
jge
mov
call
cwde
fcomi
pop
fidivr
jg
cmp
cmp
js
pop
imul
fidivr
imul
push
retf
sbb
dec
mov
shl
(bad)
iret
hlt
adc
mov
imul
(bad)
sub
add
not
stos
(bad)
into
shr
(bad)
mov
cli
in
cli
push
mov
jmp
out
loopne
add
lods
jmp
out
iret
icebp
loopne
test
sub
imul
xor
jecxz
fld
and
(bad)
ja
movs
jne
cmp
int
push
mov
dec
clc
sbb
repnz
add
jecxz
push
jle
(bad)
mov
pop
jnp
icebp
addr16
inc
sbb
into
pushf
xlat
aas
add
cmp
(bad)
rcl
and
mov
push
out
sub
xchg
mov
xor
icebp
fadd
imul
cmps
jno
mov
sbb
sub
add
fdivr
test
xor
push
xchg
shl
mov
xchg
adc
aaa
pop
in
das
dec
mov
mov
pushf
dec
mov
ja
lahf
xor
ins
push
mov
push
push
loop
and
adc
std
and
(bad)
ds
int3
mov
pop
frstor
cmp
mov
movs
and
jl
mov
or
std
lea
shl
sub
scas
test
jg
jp
clc
mov
aad
mov
imul
sbb
mov
mov
add
and
fisub
xor
mov
jbe
dec
push
fistp
lahf
outs
(bad)
in
jecxz
mov
int
in
jb
mov
outs
sahf
add
call
add
jb
out
xlat
(bad)
fistp
pop
cld
push
ins
jno
jbe
or
dec
mov
out
jmp
jnp
sbb
jbe
(bad)
mov
ret
lds
ret
call
and
aam
test
inc
or
in
addr16
jmp
js
sti
and
jl
aam
push
fs
addr16
mov
aaa
loopne
sbb
retf
enter
iret
mov
iret
or
add
sub
sub
in
xchg
mov
mov
pop
stos
xor
jnp
xlat
lds
push
fld
fstp
pop
fld
mov
out
aad
cmps
or
neg
movs
add
inc
movs
pop
mov
pop
sbb
pop
rcr
retf
xor
xchg
test
popf
xor
mov
outs
inc
call
dec
mov
bound
jno
imul
sbb
aas
push
(bad)
pop
adc
pop
retf
dec
jo
push
jmp
mov
dec
mov
es
jecxz
in
push
xchg
int
and
adc
jns
(bad)
not
and
ret
and
jecxz
nop
jbe
int3
fisttp
aas
xchg
jo
cmps
mov
icebp
into
aad
iret
add
pop
sti
mov
mov
mov
add
or
icebp
adc
xor
pop
inc
std
xor
xchg
sar
addr16
ror
fimul
inc
ss
shl
cmp
add
pop
sahf
daa
test
lock
xor
(bad)
xor
mov
jge
mov
ror
xor
add
cmp
xlat
jmp
mov
cmc
add
int3
into
xor
push
outs
mov
push
(bad)
inc
ret
xchg
xchg
imul
fstp
jns
inc
and
xor
(bad)
jno
icebp
adc
(bad)
push
add
sub
cmp
xchg
jae
test
dec
jne
sub
inc
addr16
arpl
sbb
add
scas
or
repnz
(bad)
cmc
scas
fdivr
jbe
data16
lods
mov
sbb
add
sub
jg
sbb
push
mov
iret
adc
and
fistp
mov
les
pop
pushf
inc
xchg
lods
cmps
mov
cdq
jns
pop
sub
loop
inc
inc
(bad)
xchg
inc
icebp
or
test
icebp
popf
lea
iret
pop
out
cmp
dec
in
inc
enter
jge
or
ins
add
cmc
das
sbb
(bad)
retf
mov
and
bound
sbb
cmp
xchg
dec
fdivr
push
dec
fimul
into
(bad)
xor
inc
(bad)
pop
aas
clc
std
in
lahf
pop
inc
int3
cmp
sub
adc
xchg
adc
es
cmp
cwde
inc
xchg
add
fadd
icebp
xor
repz
ja
xor
rcr
add
sahf
pop
rcl
cmp
jb
loop
push
and
mov
je
and
mov
cmp
nop
mov
pop
adc
in
cmp
aaa
inc
lods
ins
ss
cmp
xchg
dec
push
mov
cmps
mov
sbb
mov
sbb
cmp
(bad)
jp
push
add
and
xor
data16
adc
icebp
push
std
or
shr
cld
jb
fs
ss
scas
push
out
xor
xor
aas
in
sti
inc
jp
idiv
mov
inc
lock
sub
data16
ja
fwait
mov
das
imul
gs
add
mov
cdq
(bad)
fcmovnb
pop
mov
sub
and
and
and
push
mov
ja
(bad)
mov
ja
pop
test
sbb
sahf
jne
jmp
out
push
and
pusha
cmp
mov
fsubr
or
push
pop
in
imul
ds
fdiv
adc
repnz
push
movs
xchg
js
pop
jge
test
add
adc
repz
mov
ror
mov
add
sub
mov
leave
movs
sub
mov
sub
and
sti
cmp
ja
sbb
outs
push
xor
add
jo
sbb
out
add
(bad)
jb
inc
ss
test
and
xchg
push
xor
jmp
inc
aam
imul
xor
imul
xchg
cmps
lock
xchg
into
inc
retf
mov
and
cmps
mov
loope
jnp
(bad)
cwde
inc
pop
imul
cmp
jmp
daa
add
jb
cmp
sub
jns
pop
arpl
inc
adc
call
mov
and
xchg
mov
inc
push
mov
rol
push
inc
aas
mov
sbb
adc
add
adc
mov
rcl
sbb
jmp
adc
jg
daa
js
inc
xchg
pushf
adc
out
adc
ins
add
scas
sahf
cdq
fwait
inc
icebp
ja
ins
dec
pop
js
nop
inc
movs
adc
mov
shl
jge
push
mov
cmp
jnp
push
cmp
(bad)
cld
mov
imul
(bad)
emms
movups
pop
push
int3
ja
jle
dec
or
das
inc
xchg
mov
sub
adc
div
es
mov
movs
jle
test
popa
add
or
leave
mov
push
out
cmps
fstp
xlat
pavgw
leave
loop
je
sti
mov
xchg
sub
arpl
fisub
scas
cs
add
dec
mov
adc
sub
or
and
sbb
mov
jno
enter
jo
or
repnz
pop
mov
add
push
ret
je
dec
cs
mul
sub
xor
fbstp
sub
dec
pop
imul
dec
or
lock
in
imul
repnz
dec
or
xor
mov
int3
fdiv
pop
dec
call
push
dec
addr16
retf
mov
inc
ss
stc
lods
je
pusha
jne
sub
or
loope
loop
add
bound
cli
cdq
inc
cmps
mov
cli
pop
sub
psubd
and
add
push
(bad)
sub
inc
std
inc
jmp
pop
mov
loope
dec
shr
inc
add
push
push
aad
cmc
je
test
pop
mov
fsubr
jae
aas
dec
sbb
jp
lock
sahf
retf
jno
in
fstp
adc
sub
test
inc
ins
sub
out
dec
stos
xchg
cli
sub
enter
jp
push
movs
push
shl
iret
push
(bad)
adc
in
xor
or
adc
mov
jmp
leave
shl
or
mov
cmp
(bad)
hlt
pop
cmp
cmc
inc
xor
xlat
(bad)
inc
sahf
cmps
adc
icebp
stos
dec
jmp
ud1
es
jmp
sbb
movs
jo
fdivr
add
mov
mov
xchg
and
mov
add
jb
xchg
push
cmps
int3
sub
jne
cdq
outs
inc
adc
jl
xchg
xor
adc
out
xor
mov
dec
sbb
aaa
mov
clc
pop
inc
out
xlat
jnp
jle
std
pop
aas
adc
je
lea
out
or
add
cmp
in
adc
xchg
and
aad
xor
mov
sti
add
imul
test
jp
dec
adc
fwait
dec
fwait
inc
movs
outs
cmp
loope
jmp
sbb
mov
sub
dec
(bad)
test
(bad)
jmp
sbb
popf
xchg
push
mov
ja
in
or
into
int3
xchg
push
cli
in
sbb
lahf
fisubr
mov
fdiv
inc
idiv
lea
or
loopne
or
xchg
nop
sub
scas
xchg
dec
mov
lds
int3
xor
sti
adc
jl
dec
cmp
imul
sbb
push
stos
mov
cmps
rcl
ja
dec
hlt
int3
pop
jns
fnstsw
pop
sbb
(bad)
cmp
retf
sbb
rcr
mov
adc
imul
inc
mov
(bad)
icebp
mov
jmp
cwde
jp
inc
and
mov
movs
sbb
cmp
fxch
popa
pop
add
mov
arpl
popf
neg
addr16
lods
(bad)
pop
mov
pop
adc
jbe
rcr
movs
add
inc
lods
mov
shl
cmp
cmps
fidiv
popf
fucom
scas
inc
mov
ss
jno
xor
jbe
dec
and
in
outs
cmps
adc
cmp
cmp
cmp
ficom
mov
add
dec
sub
push
mov
mov
and
adc
dec
int
test
inc
xor
dec
pop
xchg
int
mov
inc
sub
push
and
test
div
jecxz
xchg
scas
bound
xor
cdq
repnz
call
xlat
popf
mov
nop
cmps
sbb
(bad)
dec
mov
jbe
int
push
cdq
adc
pop
sar
call
test
inc
lea
jle
std
(bad)
fldl2e
and
push
(bad)
pushf
daa
(bad)
nop
pop
sub
rcl
mov
fsubr
das
div
xchg
mov
mov
mov
push
dec
test
ins
(bad)
cli
dec
cmp
xlat
fisub
pop
mov
mov
retf
in
shl
inc
cmp
mov
sbb
xor
push
jo
clc
dec
popa
popa
das
mov
out
sar
xor
aaa
dec
popa
mov
mov
mov
cmps
inc
inc
jae
adc
jmp
popf
scas
and
ret
fisubr
mov
shl
inc
inc
mov
dec
cmp
cmp
hlt
xchg
call
jl
pop
and
imul
movs
fnstenv
jmp
sub
loop
loop
lods
mov
cli
pop
aam
in
pusha
mov
mov
dec
cli
mov
cmps
jmp
mov
mov
xchg
xchg
in
adc
push
icebp
push
mov
jno
aaa
shl
inc
repz
mov
push
pop
cmps
bnd
adc
mov
sbb
sub
lock
mov
jge
cdq
inc
repz
jmp
outs
mov
add
or
pusha
dec
loopne
clc
xchg
push
call
jge
(bad)
push
rcr
cdq
rcl
std
cmp
mov
sub
gs
xor
test
xchg
xchg
jnp
push
jmp
inc
int3
mov
xchg
xchg
cmp
and
adc
jecxz
(bad)
and
pop
and
dec
xchg
lahf
dec
adc
ror
lock
xor
fiadd
cmc
ds
mov
or
adc
mov
sub
daa
cmp
pop
das
push
bound
jmp
cs
mov
inc
ror
pop
adc
int3
mov
or
sub
mov
dec
pop
ret
stc
jmp
push
in
mov
scas
mov
repz
push
and
mov
mov
xor
xchg
jne
sbb
and
cmp
mov
mov
sbb
pop
std
xchg
dec
or
mov
outs
dec
std
clc
call
pushf
xchg
movs
jge
mov
retf
test
xor
xchg
dec
ss
ins
repz
(bad)
cmp
jecxz
push
mov
xchg
pop
rcr
inc
scas
push
rcl
fisub
jnp
push
xchg
xor
adc
and
test
mov
imul
stos
pusha
in
mov
lea
btc
imul
lods
xchg
jbe
jae
jmp
fdiv
xchg
out
push
mov
adc
add
xlat
int
dec
(bad)
stc
fsubr
fidivr
push
mov
cmp
sbb
mov
sub
xchg
dec
sbb
cli
lock
mov
retf
std
in
sbb
test
adc
fs
push
add
push
mov
mov
adc
sbb
test
imul
xor
ja
shl
cmps
out
les
cmp
xchg
dec
aam
stc
pop
popa
movs
mov
cmc
push
xor
mov
pushf
inc
jmp
jmp
ins
stos
in
idiv
xchg
mov
test
adc
ret
and
cmps
push
jmp
scas
mov
enter
add
dec
push
sub
cmp
scas
jg
cmp
cmp
mov
cwde
push
out
jbe
xchg
aad
xchg
int
cmc
arpl
sub
and
in
test
push
xor
adc
mov
pop
fdiv
dec
jmp
rcr
mov
pop
fild
daa
outs
test
cdq
push
jnp
popa
cmps
push
daa
(bad)
xchg
call
retf
mov
add
lahf
inc
enter
in
inc
and
adc
jnp
(bad)
pop
cmp
ins
jae
pop
loope
mov
hlt
loopne
popf
cs
shl
cmp
call
add
mov
dec
enter
ins
cmp
test
xor
xor
sub
pop
fldcw
mov
stos
and
jno
scas
xchg
cdq
pop
imul
sar
mov
icebp
ret
jmp
inc
icebp
xor
dec
xchg
xor
mov
and
lea
dec
inc
jl
cmp
stos
mov
mov
inc
fisttp
icebp
and
movd
frstor
mov
stc
das
and
dec
rol
pop
ins
adc
dec
xor
nop
enter
loop
xor
sbb
movs
nop
xchg
stos
and
nop
or
fldcw
ret
jno
jecxz
stos
mov
push
adc
or
add
add
jmp
leave
aas
mov
sbb
(bad)
stc
cs
ds
sbb
dec
push
mov
add
xlat
les
jl
pop
cmps
cwde
push
(bad)
mov
mov
outs
adc
pop
stc
adc
mov
in
jbe
pop
jg
fdivr
ja
jbe
or
les
pavgw
adc
call
cdq
or
das
jbe
dec
xor
cwde
mov
cmp
sbb
add
add
out
or
pop
ret
loope
jecxz
mov
test
inc
cmp
xchg
xor
and
fs
sbb
inc
inc
aad
shr
jmp
xchg
out
xchg
adc
add
pop
out
movs
xchg
pop
xor
hlt
aaa
xor
repnz
and
inc
jl
mov
cli
add
adc
dec
pop
jo
bound
stos
in
pushf
cwde
add
jle
mov
loopne
jbe
ret
xchg
push
sbb
pushf
inc
outs
add
jmp
add
or
ret
sbb
iret
push
lahf
rcl
iret
jmp
mov
outs
and
(bad)
adc
mov
bound
mov
cmp
cdq
and
sti
mov
jmp
and
icebp
test
sub
mov
pop
adc
mul
jg
fimul
pop
bound
cli
inc
outs
or
mov
cmp
inc
and
ins
xor
push
jns
data16
push
cmp
cmp
pop
mov
inc
cmp
imul
sub
popa
mov
nop
(bad)
add
cmp
and
test
add
sti
stc
xchg
sar
gs
call
scas
scas
dec
adc
mov
mov
pop
(bad)
dec
cmps
ret
int3
push
int
(bad)
fwait
xor
fimul
and
cmc
dec
mov
push
fistp
aam
cs
es
fs
adc
xor
into
into
add
loope
test
das
mov
js
in
sbb
mov
repz
dec
dec
inc
xchg
mov
(bad)
mov
pop
lds
dec
push
outs
cmps
sbb
jmp
mov
dec
pop
cli
and
ins
shl
in
add
jge
in
xor
aas
dec
shl
mov
push
adc
in
popa
lods
sbb
es
mov
scas
mov
mov
icebp
cdq
adc
xchg
or
xchg
or
xchg
test
adc
cli
xor
enter
inc
(bad)
mov
aas
test
fdivp
dec
pop
ss
xchg
xor
jp
push
addr16
or
inc
push
add
jecxz
and
add
fldcw
loope
imul
repnz
int
fs
loope
(bad)
retf
mov
outs
retf
into
or
scas
mov
inc
inc
in
std
xchg
mov
fsub
lds
add
cwde
mov
push
repnz
and
mov
sub
arpl
je
mov
mov
adc
fsub
jmp
sub
and
mov
repz
(bad)
jno
push
jo
mov
push
mov
push
ror
ret
or
xchg
jnp
push
imul
and
sbb
not
or
in
xor
frstor
sub
das
aam
loop
in
in
xchg
mov
aaa
je
out
imul
cmps
int3
daa
popf
cmovnp
adc
(bad)
cmp
addr16
loopne
mov
dec
sub
retf
push
pop
ins
push
leave
dec
xor
sar
adc
adc
stc
mov
out
rol
cwde
and
add
and
(bad)
std
pop
jecxz
push
test
pop
mov
pop
xchg
in
int3
scas
sub
xchg
in
sbb
inc
xacquire
loope
inc
mov
push
mov
in
arpl
add
mov
jmp
inc
fs
xlat
push
push
sar
pop
jno
cmp
xor
ss
je
adc
or
cmp
outs
mov
pop
pop
dec
(bad)
xchg
jno
adc
xor
std
es
cs
or
jmp
jne
jb
cli
test
mov
(bad)
sahf
inc
cs
cmp
cmc
xchg
push
mov
and
or
or
sub
aaa
xchg
add
ds
test
mov
push
adc
cwde
adc
aaa
mov
inc
loop
pusha
test
xchg
xor
jne
out
ja
ror
cmp
jmp
int
retf
push
push
push
dec
push
pop
daa
test
xor
rep
mov
inc
mov
sub
pop
mov
adc
pop
cmp
lods
in
mov
mov
pop
(bad)
jg
pop
test
sub
jmp
push
mov
inc
inc
(bad)
adc
cmps
retf
dec
cmp
mov
fisub
mov
jae
test
cdq
jl
add
and
rol
cmp
fs
sbb
ss
or
push
aad
and
mov
dec
(bad)
mov
aam
adc
sbb
lock
cwde
and
cmps
in
mov
in
jo
mov
ds
push
gs
icebp
in
sub
cmp
data16
ins
and
fld
aam
adc
jg
rcr
sub
or
dec
sub
add
cmc
mov
addr16
outs
rcr
fwait
mov
les
inc
fdiv
push
lahf
and
daa
sub
ss
faddp
sbb
call
sahf
imul
push
retf
pusha
fldcw
jns
xchg
pop
addr16
not
jle
pop
mov
jge
or
inc
inc
xor
mov
outs
sti
outs
les
retf
scas
sbb
dec
and
fimul
add
jbe
adc
pop
ins
out
xor
call
push
scas
call
dec
cmp
push
cmp
dec
or
imul
shl
test
mov
mov
adc
adc
inc
aam
ins
add
(bad)
inc
cmp
xor
mov
adc
popf
fild
dec
add
lods
mov
sub
or
enter
xchg
pushf
jne
mov
js
pop
xchg
sar
fbld
inc
hlt
dec
mov
inc
daa
fnstenv
jecxz
push
xchg
sub
ss
shl
repnz
(bad)
xor
movs
(bad)
jbe
jge
loop
jmp
repnz
sub
or
dec
ja
xor
adc
xchg
push
xchg
or
movs
and
dec
mul
mov
xchg
and
pushf
lea
pushf
lahf
jmp
inc
test
mov
into
or
xchg
jge
in
mov
xor
icebp
xchg
loope
mov
je
retf
sub
int
mov
fidiv
or
push
sub
cmps
cdq
push
aas
jg
xchg
and
cmps
js
les
sahf
jmp
mov
jle
into
lods
into
add
jmp
push
pusha
and
push
fidiv
gs
cmp
shl
leave
leave
and
sbb
fcom
mov
in
jae
mov
mov
sbb
js
jmp
pop
push
(bad)
xchg
popf
sub
push
xor
sahf
inc
test
test
pop
push
sub
pop
cld
call
adc
imul
mov
in
mul
in
dec
mov
push
cdq
inc
outs
jmp
xor
jg
iret
xchg
leave
(bad)
cli
(bad)
mov
jecxz
xor
stc
popf
mov
xchg
arpl
xor
pusha
and
and
daa
sbb
inc
push
arpl
mov
xor
arpl
mov
xchg
push
adc
retf
ds
dec
push
mov
popf
mov
sbb
dec
push
and
sbb
jg
xchg
lea
inc
pop
scas
call
les
cli
in
(bad)
push
jnp
shr
shl
jnp
adc
dec
popa
mov
cmp
mov
jecxz
add
mov
add
jp
xor
in
cmp
or
mov
pop
mov
xor
mov
pop
mov
ja
hlt
mov
sbb
push
popf
sti
test
and
outs
mov
push
test
call
or
imul
out
sub
mov
fisttp
sub
ds
mov
dec
mov
mov
inc
not
enter
ja
sbb
stos
bound
(bad)
div
mov
jg
ret
lahf
push
xchg
mov
sbb
inc
lods
inc
add
sbb
cmp
pop
or
movs
fiadd
(bad)
(bad)
push
xor
es
imul
add
jmp
imul
push
sbb
arpl
jecxz
dec
pop
and
iret
pop
je
jp
dec
inc
aaa
das
add
lahf
jb
mov
fxch
add
xchg
dec
adc
xchg
cld
xchg
pop
pop
jmp
mov
jmp
lds
pop
div
add
push
call
sub
data16
sbb
inc
adc
stos
mov
sbb
push
sub
jae
or
out
or
push
cdq
dec
jae
xor
cli
dec
or
test
and
es
cmp
in
pop
arpl
xor
pop
inc
mov
pop
pop
push
rol
pushf
lahf
dec
mov
ret
cmps
ret
mov
xor
jg
pop
ins
fcom
adc
mov
mov
xchg
pop
sbb
cmp
rcr
mov
repz
mov
mov
imul
cs
(bad)
rcl
adc
mov
add
scas
js
sub
rol
adc
bound
(bad)
mov
mov
mov
or
fdivr
push
fs
popa
mov
or
rcl
add
retf
enter
and
outs
sar
adc
adc
mov
add
mov
pop
push
iret
scas
int
cmp
nop
add
(bad)
fwait
daa
sar
mov
leave
sub
loop
(bad)
in
jb
daa
outs
dec
lds
mov
stc
cmps
jns
fmul
dec
inc
jmp
popf
rcl
out
lea
cmp
cmp
sub
jmp
stc
test
test
add
cld
test
out
pop
repnz
dec
xchg
pop
test
(bad)
les
icebp
enter
mov
clc
retf
sub
mov
scas
pushf
and
and
sub
inc
add
push
stos
mov
shl
dec
xor
fdivrp
dec
sbb
mov
xchg
clc
xchg
daa
or
retf
xor
int3
jecxz
dec
xor
(bad)
fs
and
call
in
inc
fld
jbe
adc
icebp
gs
sbb
xor
mov
cwde
je
xor
mov
lds
push
ficom
pop
movs
xchg
dec
mov
shl
jge
sbb
imul
es
jmp
lods
inc
shl
mov
out
idiv
and
jne
aam
lea
jb
adc
push
xchg
popf
cmp
push
adc
icebp
and
fild
mov
sbb
and
mov
retf
xchg
mov
pop
push
jns
sbb
xchg
add
ja
pop
cmp
inc
sub
pop
fwait
sbb
cdq
xor
cmp
scas
xor
dec
or
fdiv
dec
fsub
jl
pop
in
clc
in
hlt
cmps
ins
imul
mov
out
mov
dec
jecxz
pop
mov
pop
inc
mov
adc
js
inc
ficom
inc
movs
fldcw
shl
ficomp
and
pop
sti
mov
stos
stos
in
mov
out
push
in
or
jb
lds
push
lahf
and
outs
sbb
inc
rol
sub
nop
mov
dec
mov
jne
push
js
out
xchg
fsub
test
inc
add
leave
les
push
add
paddw
push
sub
in
jg
inc
push
std
xchg
movs
test
add
jns
popf
pop
push
inc
stc
mov
push
jne
jge
retf
sub
js
ja
or
inc
and
fs
pop
ret
cmp
out
(bad)
addr16
aam
test
out
cmp
add
push
in
and
stos
xor
test
push
or
xchg
sub
xor
test
dec
fild
add
mov
hlt
push
add
ins
pop
mov
mov
test
push
das
and
popf
sti
loop
push
clc
hlt
cwde
pop
mov
(bad)
imul
sbb
pop
fwait
fwait
mov
mov
xor
imul
mov
cmp
retf
inc
pop
jle
fdivr
cld
sar
aas
cli
cmp
and
xchg
jp
xchg
push
ret
cdq
or
sub
fmul
arpl
stos
fisttp
fld
xor
ficom
loope
aam
add
inc
leave
or
inc
push
adc
popf
dec
mov
xor
cld
push
dec
cmp
mov
test
shr
cmp
mov
test
popa
inc
xor
sub
in
push
popa
xchg
jmp
(bad)
push
mov
shl
and
aaa
cmp
cmp
jne
dec
mov
mov
fdivr
aad
adc
xor
repz
jno
push
dec
lds
in
aas
clc
jmp
fdivr
adc
lock
add
bound
not
jecxz
out
cmc
fadd
sub
data16
das
jmp
fisttp
fwait
jb
hlt
or
out
ret
and
repz
shr
in
das
pop
jle
test
int
or
sbb
pop
jne
mov
adc
js
bound
daa
shr
fst
sbb
es
jecxz
mov
jmp
mov
outs
lock
popf
mov
rcl
inc
mov
mov
sbb
and
jg
rol
into
and
and
mov
popf
pop
(bad)
adc
call
sbb
mov
(bad)
jl
fild
jge
mov
add
mov
mov
jno
mov
lds
int
sbb
(bad)
mov
cld
lods
mov
push
xchg
(bad)
ds
xor
jb
std
cdq
sub
push
jl
jl
pop
imul
push
mov
aas
ss
aam
pop
sub
dec
aaa
dec
dec
push
and
enter
dec
sbb
push
xchg
jnp
dec
ja
cmp
or
push
jge
icebp
xor
fwait
out
shl
outs
sahf
sbb
in
lods
jnp
jbe
pop
jo
pop
jge
cs
test
fistp
jp
mov
icebp
sbb
or
cld
int
sbb
stos
(bad)
mov
cmp
ret
mul
ret
jb
rol
pop
cmp
cmp
xchg
push
jg
cmp
iret
mov
mov
dec
sti
pop
sbb
jb
test
push
inc
movs
(bad)
test
jecxz
cs
(bad)
into
jp
(bad)
(bad)
in
sub
call
aaa
test
xchg
xchg
sub
(bad)
cli
mov
es
mov
push
jecxz
aas
popa
test
mov
test
cmp
jns
xchg
popf
add
and
cmp
mov
(bad)
movs
das
cmp
and
or
ret
lods
ret
lds
mov
inc
scas
xchg
mov
(bad)
mov
adc
and
pop
mov
pop
dec
xchg
dec
mov
mov
push
sbb
dec
push
fstp
mov
xchg
jle
xor
(bad)
xchg
bound
retf
jecxz
or
xchg
dec
cld
call
mov
xchg
mov
jns
push
add
and
mov
sbb
ss
movs
cmp
pusha
fsubr
inc
fisubr
hlt
pusha
pop
jno
cmp
xchg
or
retf
push
jmp
(bad)
inc
mov
fstp
xor
mov
adc
inc
push
xchg
rcr
cmp
out
jmp
jle
pop
adc
jno
out
inc
mov
dec
mov
cmps
push
fcom
fiadd
add
test
mov
scas
mov
push
inc
sahf
(bad)
fxch
imul
jp
into
shl
mov
lods
enter
sbb
mov
scas
jge
ror
out
xor
mov
pop
shr
pop
(bad)
dec
inc
enter
daa
mov
lods
addr16
mov
repz
popa
add
retf
adc
fdiv
mov
and
jne
or
cdq
pop
jl
xor
bound
in
mov
into
(bad)
mov
ficom
jle
test
cmp
cmps
pop
outs
mov
(bad)
sar
aaa
std
bound
push
dec
ret
nop
dec
mov
jle
cmp
cmp
(bad)
(bad)
jnp
shl
jmp
aad
leave
mov
and
imul
sub
mov
js
sahf
add
or
push
xchg
popf
mov
xor
nop
rol
and
xchg
xor
scas
js
or
fidivr
or
inc
inc
out
mov
mov
pop
and
mov
rcl
or
(bad)
push
test
cmp
or
loop
push
adc
pop
aad
jbe
es
cmps
mov
jp
push
(bad)
mov
into
mov
inc
dec
(bad)
and
fidiv
inc
cdq
movs
mov
ds
mov
ror
adc
push
ror
inc
stos
das
call
and
inc
push
test
std
push
dec
jbe
(bad)
xor
add
jle
sub
mov
xor
repnz
xor
mov
cs
loopne
imul
mov
imul
loopne
retf
add
inc
leave
push
push
and
ja
mov
and
xchg
dec
popa
sbb
xor
push
retf
dec
cmps
mov
inc
dec
sub
repz
pusha
out
rol
jmp
jnp
push
ret
addr16
mov
xchg
gs
movs
pop
or
popf
mov
mov
cs
sub
bound
hlt
and
xchg
jecxz
lea
xor
aaa
(bad)
fsubr
(bad)
cs
inc
je
or
cmp
fwait
repnz
pushf
jns
dec
mov
jmp
dec
push
lock
xchg
pop
icebp
rol
arpl
sub
push
sahf
sub
mov
xchg
dec
fisub
inc
aaa
test
stos
lock
or
dec
data16
mov
and
dec
(bad)
ficom
ins
test
jle
xor
aam
pop
test
es
push
push
test
test
add
dec
and
stc
clc
push
js
(bad)
sbb
and
inc
aam
ret
inc
call
mov
jno
aaa
in
cmps
out
mov
iret
push
popa
mov
addr16
dec
xchg
adc
movs
xchg
pop
jns
ss
or
push
lods
pop
or
nop
and
fsub
sub
jae
and
and
or
cmp
cmc
fdiv
imul
cmp
stos
pop
jnp
pop
ss
test
nop
or
lahf
pop
out
sbb
adc
lahf
clc
push
mov
in
test
mov
scas
push
(bad)
fnsetpm(287
aad
clc
inc
xchg
cld
lods
addr16
mov
adc
test
retf
scas
in
and
(bad)
out
jge
retf
outs
adc
pop
sub
and
add
outs
jle
(bad)
mov
mov
sti
mov
clc
(bad)
push
cdq
jg
adc
mov
imul
test
repnz
jns
fs
add
in
shl
mov
cdq
mov
(bad)
sub
mov
cmp
sub
bound
jns
int3
mov
jmp
cmp
in
(bad)
std
pop
adc
add
fldcw
mov
mov
fucompp
mov
icebp
cdq
add
mov
mov
(bad)
not
jge
sbb
cmp
push
adc
les
add
fcom
mul
mov
adc
es
out
adc
pop
jne
jb
(bad)
rcl
push
mov
sbb
and
test
jns
xor
inc
or
mov
mov
stos
mov
jbe
cvtpi2ps
xlat
sbb
dec
sub
gs
add
outs
cmp
pushf
sub
sbb
mov
data16
arpl
mov
xchg
jle
lods
sbb
or
(bad)
shr
mov
push
sub
ds
or
out
popa
aaa
(bad)
repnz
dec
add
fwait
jmp
ins
push
std
adc
or
div
icebp
pop
push
mov
dec
fcomp
movs
xlat
or
into
sbb
pop
hlt
push
(bad)
cmp
aaa
add
and
std
int3
ins
or
std
mov
inc
xchg
in
mov
iret
xchg
enter
retf
stc
daa
push
cmps
inc
fisub
mov
and
xchg
lahf
adc
jbe
mov
fisttp
test
lock
scas
xor
mov
adc
call
pushf
xlat
mov
scas
ret
lock
test
dec
cmp
mov
mov
fnstenv
scas
pop
out
neg
mov
mov
shl
popf
dec
and
mov
lock
adc
mov
push
sub
out
xor
out
sub
test
loope
inc
or
push
mov
xor
aas
jecxz
imul
sbb
cs
push
xchg
adc
mov
push
loop
mov
cmp
outs
mov
and
loop
sub
retf
into
xor
inc
xchg
adc
mov
cmps
stc
jmp
pop
leave
fsub
xor
and
mov
fs
fs
add
pushf
imul
inc
jns
push
sbb
push
movs
jbe
inc
addr16
add
in
push
into
mov
dec
mov
xor
inc
pop
xchg
retf
push
test
mov
mov
pop
push
inc
sbb
(bad)
mov
sub
ret
push
daa
fiadd
ret
sbb
test
adc
mov
cmp
hlt
cwde
xchg
fist
jne
pop
xchg
scas
ins
retf
sub
add
daa
pop
mov
jecxz
cmp
out
mov
shr
aas
(bad)
(bad)
sti
pop
fistp
sub
lock
mov
mov
call
sbb
inc
fwait
mov
ret
sti
into
scas
fcmovnbe
data16
gs
cmc
inc
pop
in
sbb
stc
jp
dec
mov
sbb
mov
shl
in
pop
sub
sub
jmp
inc
push
gs
(bad)
push
frstor
or
in
cmps
adc
not
jmp
sbb
sbb
popf
(bad)
pop
mov
and
xor
sub
xor
icebp
mov
test
dec
sbb
cmp
loopne
bound
in
leave
add
jg
ja
push
scas
mov
lods
pop
das
mov
mov
push
and
fwait
ja
or
lahf
sub
stos
or
push
aad
test
(bad)
outs
jmp
mov
(bad)
jecxz
mov
xchg
enter
lahf
mov
pop
test
fld
push
inc
xor
aaa
xchg
jnp
sub
pop
rcr
addr16
push
popa
mov
aas
or
into
lfs
outs
jl
dec
mov
jl
ins
mov
push
jmp
lahf
inc
adc
fs
mov
scas
push
outs
push
call
cmp
xchg
and
not
jne
aas
jecxz
and
xchg
dec
fstp
mov
and
mov
sti
shr
mov
cmp
and
dec
mov
lock
xor
xchg
ret
ret
mov
cmc
jl
ja
out
push
loopne
fwait
cs
sbb
pop
gs
outs
xor
inc
jge
push
dec
pop
inc
xor
fwait
shl
lds
mov
jne
dec
in
(bad)
fcmovu
jnp
fisttp
das
lods
stos
pop
cmp
jbe
jns
outs
inc
jbe
in
sub
sbb
dec
not
pop
xor
sar
mov
or
cmp
push
movs
mov
adc
dec
loope
inc
ins
out
jle
or
jmp
div
in
dec
sbb
outs
dec
(bad)
xchg
aaa
cmps
stos
test
jno
rcr
jnp
pop
mul
sub
enter
cwde
dec
js
cmovbe
in
mov
outs
jge
jns
call
xor
mov
mov
add
sub
push
dec
fiadd
ficom
jl
dec
pushf
stos
scas
cli
or
ds
test
xor
stos
neg
fnsave
aam
movs
popf
icebp
sti
mov
cli
cmp
icebp
or
movs
arpl
(bad)
or
jne
or
adc
and
add
and
dec
jae
enter
mov
in
fisub
arpl
repz
out
push
mov
pop
sub
icebp
scas
enter
sbb
mov
adc
pushf
dec
nop
aad
mov
call
or
fldenv
sahf
push
sahf
cld
inc
xlat
add
in
cmp
repnz
mov
mov
repz
(bad)
mov
sti
push
jp
fdiv
pusha
mov
fsub
pushf
std
jg
mov
mov
jnp
sub
pop
push
shr
and
mov
fld
outs
add
pusha
in
and
clc
inc
xchg
call
fmul
shr
sbb
loop
in
xor
lods
lods
pop
out
or
in
fcomp
test
shl
push
nop
sub
xchg
cli
icebp
(bad)
sub
adc
jmp
pop
inc
lods
into
rol
add
retf
or
lea
ds
sub
stc
mov
sbb
push
stos
or
push
cld
aas
dec
add
xchg
(bad)
and
les
mov
loope
add
sbb
xchg
fdiv
mov
mov
das
add
dec
sar
(bad)
cmp
int3
add
test
dec
dec
xchg
mov
pop
fimul
sbb
stos
loopne
jmp
(bad)
das
call
adc
pusha
(bad)
xor
fld
lods
mov
add
cmps
xchg
dec
test
adc
mov
iret
jle
test
ja
shl
sub
dec
xor
retf
jb
or
fs
adc
mov
icebp
mov
lds
lahf
lods
mov
std
popf
lahf
push
in
hlt
add
shr
out
mov
xchg
and
or
jmp
pop
into
imul
sahf
jns
clc
cmps
sbb
lahf
scas
push
xchg
adc
jbe
mov
shr
or
cmc
pushf
ret
cmc
cmc
jbe
jp
push
sbb
out
imul
mov
out
add
or
xor
shr
push
movs
mov
sbb
cmp
jae
std
shl
sub
movs
sbb
stc
test
xchg
mov
retf
es
fisub
dec
aas
add
mov
xor
pop
call
jmp
jp
icebp
stc
add
aaa
adc
cmps
jmp
int3
mov
xchg
jp
sub
aad
fsubr
cli
jmp
sahf
jp
jae
in
(bad)
xchg
cmps
(bad)
cmp
sub
sbb
inc
ret
add
(bad)
cmp
sub
xchg
icebp
pop
in
repnz
and
mov
jp
fscale
mov
push
xchg
push
jmp
loope
stos
push
in
pop
nop
data16
cli
mov
loope
mul
pop
retf
mov
(bad)
jmp
cld
jp
pop
add
cdq
addr16
push
and
push
push
fcomp
mov
xchg
dec
mov
add
(bad)
and
xor
pop
imul
repz
scas
mov
ins
inc
adc
adc
imul
or
sbb
imul
fldcw
repz
enter
add
fild
lds
and
cmps
mov
sub
mov
push
push
adc
sbb
packuswb
daa
ins
sahf
add
jbe
aaa
repz
mov
dec
cdq
frstor
leave
aaa
xchg
sub
mov
push
adc
inc
mov
enter
and
addr16
mov
mov
mov
pop
xor
cs
sbb
pop
pop
in
fld
and
int
dec
cdq
dec
test
push
add
xchg
shr
inc
sbb
push
mov
push
push
cmp
outs
mov
push
retf
push
jle
push
sub
mov
outs
aam
sub
enter
in
add
fcomp
stc
push
inc
sar
bound
test
hlt
mov
add
dec
and
jo
xchg
js
stos
iret
mov
(bad)
mov
mov
in
adc
cwde
jg
arpl
pop
mov
pop
adc
(bad)
cmp
ja
fcomp
push
pop
stc
ins
(bad)
call
mov
jg
ins
adc
or
sbb
repz
into
push
cmp
add
xor
jl
or
ret
xchg
inc
mov
mov
lods
out
int3
mov
xchg
int3
(bad)
push
pusha
sub
xchg
shr
mov
stos
gs
jmp
sub
ficom
sub
rcl
adc
jge
cli
outs
pop
xor
jae
mov
nop
ja
and
iret
sbb
retf
mov
xchg
push
jmp
fs
pop
mov
jge
inc
sti
fs
sbb
(bad)
sti
int
jmp
pop
test
jecxz
mov
and
sbb
pop
mov
xchg
stos
cs
adc
xchg
xchg
push
mov
cdq
jno
scas
fidiv
mov
add
and
sbb
gs
inc
mov
push
iret
cwde
cwde
mov
mov
and
movs
mov
fisttp
mov
lock
or
cld
mov
jge
add
imul
xchg
mov
jb
push
mov
out
mov
out
loop
test
xchg
push
mov
adc
std
xor
dec
mov
(bad)
cs
sbb
pop
aas
pop
imul
(bad)
fidivr
inc
inc
cmp
in
je
pusha
add
jnp
or
(bad)
xchg
adc
pusha
and
dec
add
ror
sub
(bad)
xchg
mov
sbb
fnstsw
jl
cs
jnp
lods
outs
cmp
mov
fmul
inc
call
xchg
xchg
movs
or
sub
add
adc
leave
fdiv
add
retf
test
popa
dec
(bad)
sar
dec
cld
imul
ret
shl
nop
mov
pop
dec
inc
je
mov
(bad)
xchg
sbb
inc
jns
xor
jp
and
sbb
imul
scas
test
dec
jge
or
iret
pop
mov
outs
call
out
in
sub
mov
push
xchg
in
in
pop
lock
or
lock
jg
mov
out
stc
sbb
setb
lock
cwde
in
je
lock
pushf
push
out
xchg
mov
icebp
iret
sub
mov
mov
inc
in
les
mov
repnz
(bad)
sti
mov
retf
popf
jle
jge
cmp
ret
cmp
and
movs
hlt
mov
lods
inc
sbb
or
repz
cmps
jno
shr
inc
cmc
and
jbe
mov
push
clc
add
add
sub
push
(bad)
jb
movs
xor
(bad)
call
add
jbe
jns
not
fisttp
xchg
mov
das
push
out
movs
cld
jns
mov
out
fnstcw
pop
inc
sti
xchg
lock
pushf
sub
mov
out
int
hlt
repnz
and
xchg
sar
lds
data16
loopne
mov
jo
or
jns
xor
icebp
jne
mov
pusha
les
xchg
mov
call
or
int
pop
jno
aaa
inc
fadd
int
push
cwde
mov
dec
in
adc
fnstcw
add
dec
fs
mov
mov
and
loope
lea
inc
cs
mov
xor
push
jecxz
pop
sbb
or
jp
(bad)
(bad)
mov
ss
mov
test
arpl
(bad)
ja
out
mov
mov
jb
jp
popf
or
ret
mov
imul
adc
mov
xchg
add
in
dec
mov
aam
pop
pop
pop
adc
add
inc
das
jb
pop
icebp
outs
or
push
popa
repnz
mov
push
out
inc
mov
ror
scas
ss
sub
mov
fs
inc
jbe
rcl
or
inc
pop
or
data16
xchg
add
adc
sub
xchg
ds
or
enter
lea
xchg
pop
push
sar
(bad)
shr
or
lds
inc
mov
mov
pop
fs
es
loope
ficom
dec
pop
(bad)
imul
pusha
cmp
mov
out
retf
mov
into
dec
adc
scas
cwde
lahf
imul
dec
jmp
pushf
ret
mov
retf
push
in
cwde
stos
sahf
mov
sbb
sub
data16
cmp
mov
dec
inc
js
mov
scas
push
sbb
jnp
and
cs
adc
mov
mov
mov
adc
aas
jne
push
or
fst
push
or
fwait
aad
arpl
shl
int3
jmp
inc
or
push
movs
xchg
mov
xlat
cmps
shr
out
push
or
fdivr
cmps
daa
mov
test
ins
stos
or
scas
add
cwde
popa
cmps
repz
jp
mov
loopne
push
out
or
movs
loope
push
or
enter
jo
cmp
and
loop
pop
fist
fnstcw
cmps
dec
mov
adc
je
and
adc
xor
adc
fwait
(bad)
cmps
pop
scas
neg
test
mov
fisttp
test
cmp
or
aad
leave
cmp
cmp
fstp
(bad)
mov
mov
sti
adc
fist
jbe
outs
in
sbb
lods
pop
dec
push
mov
enter
sub
mov
fst
add
pop
mov
fs
in
aaa
sahf
inc
outs
mov
xchg
mov
nop
hlt
jmp
add
call
loopne
mov
mov
int3
fild
pop
mov
scas
pop
xlat
aad
mov
retf
push
cmp
xor
sbb
shl
es
mov
xchg
data16
pop
(bad)
adc
jns
cmp
ja
mov
dec
test
mov
sbb
loop
xchg
arpl
dec
test
retf
pop
lods
(bad)
nop
and
push
ficomp
xor
out
pop
lahf
jmp
stos
repz
aam
or
dec
ret
enter
ret
push
loopne
mov
retw
push
movs
xchg
cmps
or
inc
int3
sahf
pop
or
out
movs
daa
cmc
pop
pop
fs
adc
lds
jle
(bad)
mov
xor
lahf
mov
mov
mov
ins
jecxz
popa
popf
cld
inc
mov
sub
ror
cmp
int3
jmp
jle
mov
fmul
(bad)
mov
push
xchg
test
xor
scas
arpl
add
jp
mov
jbe
push
mov
dec
jg
out
push
fidivr
test
stc
or
cmps
jnp
mov
mov
fbstp
repnz
shl
std
fwait
sahf
(bad)
fistp
mov
push
xor
cmp
pop
mov
sbb
jle
pop
mov
dec
sbb
imul
retf
test
push
sub
jp
iret
xchg
cmp
add
xor
mov
fwait
jo
fcom
jo
call
(bad)
pop
sub
xor
test
icebp
aad
adc
jg
sbb
aad
jl
xor
outs
ret
push
jle
cmps
jl
xchg
or
arpl
push
jbe
jp
cdq
cmc
jno
inc
jo
inc
sbb
mov
or
add
cmp
push
icebp
sbb
inc
add
in
xor
shr
mov
sub
stc
xor
cli
test
jecxz
inc
xor
or
add
popa
not
in
jno
loope
xor
int
retf
jmp
xchg
inc
bound
retf
mov
xor
cmc
cmp
lahf
shl
pop
out
xor
outs
cs
push
pushf
(bad)
inc
dec
push
repz
dec
jg
cmp
and
imul
cwde
push
mov
xchg
add
not
sbb
dec
into
popf
(bad)
mov
jg
iret
mov
cs
push
dec
push
mov
call
xchg
sti
xchg
add
aas
xor
sub
sbb
lahf
fcom
rol
das
aaa
loopne
outs
inc
add
cld
in
shl
shl
retf
and
adc
mov
imul
ins
in
js
cmp
inc
cmp
retf
es
pop
sub
cmc
mov
jmp
out
outs
fistp
adc
not
scas
and
scas
loope
xchg
pop
mov
jg
data16
pop
mov
adc
jno
push
xchg
xor
sub
fldcw
push
mov
inc
cdq
jecxz
das
jmp
fsub
rol
sub
inc
std
xchg
add
jns
mov
jg
movs
mov
icebp
mov
lock
retf
jns
pop
lahf
cmp
or
jnp
cmp
push
lahf
mov
hlt
push
xor
cmp
fiadd
mov
or
mov
xchg
adc
jl
cli
lods
ja
mov
sbb
clc
(bad)
test
cmp
pop
leave
(bad)
(bad)
pop
xchg
and
int
xabort
and
ffreep
aaa
mov
fidivr
ins
cdq
sbb
mov
mov
xor
jbe
cmps
and
xchg
push
jb
sbb
inc
xchg
jle
or
loop
and
jb
leave
sub
leave
and
push
pop
or
scas
or
rcl
mov
add
leave
lea
sbb
jae
fcomi
mov
pop
mov
jnp
jo
jmp
ret
fadd
imul
sbb
pop
mov
fstp
jmp
jmp
dec
mov
xchg
repz
cmp
nop
sub
scas
stc
jp
inc
jns
jno
sub
or
movs
xchg
mov
aad
cmp
ret
(bad)
lock
fsubr
fcomp
test
dec
fwait
adc
inc
inc
aaa
mov
cwde
push
dec
es
push
sub
and
mov
ret
pcmpgtb
add
and
lods
sti
mov
and
push
xor
push
push
clc
sub
test
pop
cmp
out
(bad)
fnstsw
scas
cmp
mov
cmps
aas
jne
inc
add
(bad)
xchg
or
jne
test
jge
xor
mov
push
stos
(bad)
dec
stos
xchg
addr16
sub
addr16
aas
pusha
or
in
loop
add
mov
shl
out
push
fmul
push
pop
mul
stos
jecxz
mov
test
push
dec
addr16
mov
sti
add
int3
inc
retf
xchg
lods
xchg
sub
jns
mov
lods
pop
or
adc
adc
push
dec
retf
pop
dec
jmp
das
dec
mov
sbb
repz
xchg
hlt
or
dec
mov
cdq
test
lods
(bad)
push
xchg
mov
inc
mov
pusha
inc
cmp
jno
xchg
and
mov
add
mov
cmps
or
mov
jp
mov
dec
pop
sbb
les
je
xlat
stc
gs
jno
sbb
jecxz
pop
pop
pop
jl
into
sbb
pop
bound
jmp
jle
cmp
adc
stos
add
xor
cs
ret
fbld
sbb
mov
popf
sub
xlat
popf
cmp
xor
add
loopne
xchg
addr16
pop
push
jnp
fmul
jbe
push
movs
clc
adc
add
ja
js
xchg
arpl
outs
stc
inc
jp
jecxz
fidivr
std
inc
sub
mov
out
retf
and
movs
jne
add
pop
lods
(bad)
mov
adc
cdq
add
mov
int
cmp
sub
and
ror
sub
adc
push
outs
js
cmps
mov
sbb
dec
ret
(bad)
into
inc
push
mov
cld
les
or
les
or
ret
rol
jle
rcl
imul
or
lds
push
dec
adc
loope
stc
inc
enter
xchg
cmp
addr16
sub
enter
lods
in
rep
inc
xchg
ins
and
inc
sbb
jae
lods
add
ins
retf
and
cmp
mov
ret
sbb
cdq
mov
loopne
mov
movs
inc
inc
popa
popa
push
aad
push
jp
cs
or
push
pop
jae
ds
push
and
into
fisttp
xchg
test
jecxz
jae
sub
jmp
pop
dec
cdq
sub
in
dec
in
test
cmp
in
inc
mov
nop
fwait
inc
inc
adc
fisttp
aas
int3
sub
js
(bad)
inc
aad
adc
xchg
xchg
cmp
inc
ficomp
dec
out
and
xchg
mov
dec
fwait
clc
pop
shr
cmp
pop
in
sub
xchg
bound
mov
sbb
or
fiadd
pop
aad
cmp
jp
test
repz
xor
inc
ror
pop
jge
test
mov
jnp
nop
xlat
mov
adc
mov
rol
nop
pop
cmp
dec
jns
in
push
imul
mov
lock
call
sbb
sub
inc
and
shr
dec
out
mov
leave
sar
sub
and
test
repnz
cdq
cmp
add
mov
cmps
stos
aad
cmc
out
call
jmp
cwde
in
xor
pop
mov
xor
pop
das
cli
xchg
xchg
clc
daa
inc
mov
sbb
fsub
retf
jb
je
or
or
shr
mov
mov
repnz
cmps
add
pop
das
or
sub
aam
mov
mov
test
jmp
aas
sbb
in
retf
cmp
cmp
cmp
dec
imul
adc
mov
mov
call
pop
pop
or
mov
cmc
cmp
jmp
adc
std
jnp
int
jp
aad
test
arpl
push
inc
and
add
bound
(bad)
stos
jmp
inc
cwde
mov
gs
mov
mov
mov
rcl
cmp
mov
retf
repz
mov
cmps
mov
xor
mov
cmps
xchg
sbb
(bad)
pushf
pop
in
adc
or
loope
sbb
repnz
jp
pushf
mov
test
push
jmp
cmc
out
lods
clc
cmp
jle
pop
(bad)
retf
add
xor
sbb
loope
sub
cmp
scas
movs
stos
mov
push
mov
fst
sbb
jecxz
sbb
fild
push
xor
stos
in
arpl
scas
cmp
jp
cmc
dec
mov
jnp
inc
aad
jle
dec
aam
pop
popf
inc
rcl
aad
out
and
cmp
mov
je
(bad)
sub
fdivr
test
mov
push
cld
pusha
xchg
ret
shr
inc
push
je
and
shr
outs
mov
addr16
repz
or
shl
ins
or
inc
cdq
jmp
inc
jns
in
xor
push
inc
mov
adc
jae
mov
mov
and
inc
jnp
cmp
xchg
mov
outs
(bad)
(bad)
mov
add
ja
ds
ja
and
out
sbb
mov
es
pusha
ins
aad
adc
int
lea
rcl
fcom
enter
sbb
fisubr
and
out
add
mov
jns
mov
lahf
mov
and
iret
xor
push
call
cld
test
push
into
repnz
pop
stos
or
dec
mov
fwait
leave
mov
and
mov
or
fidiv
sub
pop
fcmovu
pop
or
dec
fidivr
ret
cmpxchg
sub
in
inc
call
into
sub
jmp
inc
gs
repnz
sbb
mov
shr
rol
adc
and
cmc
cmp
dec
mov
call
xchg
mov
push
sbb
adc
imul
push
call
sbb
jmp
mov
arpl
cmp
out
sub
out
lea
movs
leave
mov
sbb
xchg
adc
fcomp
aaa
xchg
into
sbb
dec
int
or
push
push
mov
jns
sbb
sub
cmp
mov
outs
test
adc
cmp
mov
icebp
ins
pop
ins
jnp
sti
push
jg
xor
sub
jns
mov
mov
retf
mov
pop
movs
xor
mov
pop
or
adc
addr16
jmp
leave
cs
fistp
repz
fidivr
add
inc
into
cmp
jge
(bad)
int3
cmovno
dec
icebp
in
hlt
or
sti
test
sub
xlat
clc
mov
fdivr
mov
sbb
dec
ret
or
lahf
jae
(bad)
and
adc
or
jnp
aam
dec
cs
xchg
mul
fwait
inc
cmp
mov
sbb
fld
sti
mov
and
add
into
shr
or
mov
stc
shr
push
xchg
add
push
mov
ffree
out
jmp
das
ss
dec
out
push
xchg
in
xor
cmp
pop
xchg
sub
scas
into
in
mov
nop
retf
movs
lods
clc
loop
dec
fwait
adc
pop
test
inc
dec
jecxz
ds
or
mov
mov
cmp
clc
push
or
xchg
imul
jg
or
xor
adc
in
mov
pop
nop
mov
in
imul
adc
jne
pop
cli
lea
sub
hlt
xor
sub
inc
pop
jge
(bad)
lds
sbb
dec
mov
dec
je
in
int3
or
addr16
lods
xor
cmps
cmp
daa
mov
or
popf
int3
jge
mov
cmps
xor
or
and
mov
scas
pusha
push
fdivr
push
inc
popa
mov
inc
outs
pop
mov
xor
or
outs
xor
(bad)
clc
call
mov
adc
loopne
or
retf
fisub
imul
fwait
(bad)
out
mov
jne
mov
mov
and
fs
lock
adc
jo
xor
ds
mov
inc
test
mov
aad
add
hlt
(bad)
mov
fstp
div
mov
sbb
int3
dec
mov
xchg
ret
ja
pop
mov
addr16
sub
(bad)
cld
out
aad
in
sbb
jae
fcomp
cmps
int3
rcr
mov
out
mov
dec
and
push
in
and
inc
pusha
in
std
cmps
les
sbb
jne
jmp
jbe
xor
adc
cwde
das
inc
add
cmp
inc
cmp
sti
dec
(bad)
pop
jo
mov
mov
dec
jp
inc
dec
push
pop
fcom
inc
xor
inc
retf
jne
sar
mov
mov
test
outs
outs
pop
mov
inc
inc
xor
push
(bad)
imul
loope
inc
mov
je
ss
add
in
mov
dec
lods
mov
push
adc
push
cmp
in
pushf
inc
jmp
out
or
mov
loopne
or
retf
aas
inc
ficom
mov
pop
push
movs
mov
pop
ss
adc
ja
fiadd
cmp
retf
jnp
sbb
test
pop
shr
retf
sbb
(bad)
dec
js
aas
and
jmp
jae
sbb
add
call
retf
jno
cmc
mov
imul
mov
out
(bad)
cli
and
sbb
xchg
lods
mov
div
adc
xchg
mov
adc
iret
push
cwde
sbb
cwde
or
push
fst
adc
movs
enter
aaa
add
push
imul
xor
call
mov
mov
sbb
cs
or
pop
mov
adc
movs
adc
xchg
test
jb
add
addr16
stos
out
adc
addr16
mov
sub
iret
adc
aam
dec
sub
jl
rcr
adc
ja
arpl
inc
jo
data16
xchg
cmc
xchg
jl
mov
xor
xchg
out
mov
mov
dec
ss
fwait
jmp
(bad)
sbb
fndisi(8087
ds
jnp
sbb
xchg
int
nop
icebp
pop
sub
xor
js
inc
rcl
fsubp
aad
xchg
retf
je
pop
lahf
jg
pop
push
test
fadd
mov
adc
leave
adc
imul
dec
aas
and
xor
jb
daa
imul
js
das
xchg
in
stc
add
outs
inc
aam
cmps
push
jl
push
jnp
aas
pop
aas
inc
or
fild
in
xchg
imul
sub
test
push
sub
cmps
cmp
push
adc
cmp
ficom
push
retf
imul
js
dec
pop
mov
mov
das
inc
cmp
jno
mov
mov
mov
jbe
out
das
(bad)
into
nop
lock
mov
lods
dec
(bad)
xchg
ins
and
jmp
pop
outs
in
add
adc
int3
and
and
inc
je
shl
inc
lds
push
iret
fnstsw
mov
movs
adc
dec
inc
sbb
mov
mov
lock
pop
xor
dec
mov
test
rol
retf
daa
lods
outs
lock
jno
inc
ret
inc
ss
mov
adc
add
(bad)
cmp
inc
fucom
pusha
mov
stos
mul
mov
adc
cmp
cmps
out
xchg
out
(bad)
sbb
stos
jns
mov
mov
test
shl
ins
push
lods
jbe
mov
cmp
pop
adc
mov
in
fisubr
ffreep
jecxz
adc
gs
jmp
dec
lahf
dec
inc
movups
loopne
mov
sbb
imul
fist
and
jl
xlat
or
add
(bad)
cmps
aas
aas
pop
iret
stos
jnp
sbb
lea
movs
cmc
jnp
or
addr16
ret
sub
adc
test
retf
mov
or
ss
cs
pop
push
das
arpl
sub
mov
xchg
sub
jno
imul
xchg
repz
imul
(bad)
sub
nop
pop
std
jae
sbb
jmp
inc
(bad)
js
xchg
(bad)
fidivr
or
or
xchg
stos
xor
sbb
push
ret
cmp
aas
in
mov
std
mov
sub
fwait
inc
adc
jae
mov
stos
adc
add
in
push
loopne
or
jl
jle
dec
imul
int3
add
bound
rol
sbb
stos
xlat
pop
push
ss
xchg
adc
sbb
ror
add
fild
(bad)
sbb
push
in
push
and
sbb
pusha
mov
xor
cdq
bound
sbb
aas
movs
xchg
push
sbb
jecxz
cli
lds
test
dec
pop
and
jmp
sub
pop
ds
bound
sub
adc
push
(bad)
jns
cdq
push
sbb
push
mov
(bad)
add
jl
sub
gs
ret
test
arpl
paddb
jnp
retf
aam
cli
or
push
scas
or
add
mov
jnp
ja
xchg
mov
push
xor
outs
add
jg
pop
in
and
fisttp
and
ins
mov
cwde
test
mov
imul
sub
pop
jecxz
and
add
cmp
cmps
(bad)
cs
and
aas
std
fs
pop
outs
inc
sub
imul
dec
lods
inc
push
lea
sbb
(bad)
dec
fistp
(bad)
sub
jns
jle
cmp
repnz
stos
xor
rol
(bad)
neg
addr16
std
rcl
cmps
not
jg
stos
mov
jnp
test
leave
in
sahf
sub
jno
ins
ret
in
fld
mov
imul
dec
stos
and
iret
repnz
fild
sbb
mov
mov
in
jecxz
scas
lods
data16
cs
stc
dec
repz
or
inc
xor
mov
fs
stos
sbb
inc
loope
jmp
jp
jg
and
xlat
dec
sahf
push
sub
push
dec
jb
dec
dec
icebp
int3
bound
repnz
fld
es
das
(bad)
xchg
mov
cmp
popa
push
loopne
pop
sub
mov
pop
aas
into
inc
xlat
(bad)
cmp
mov
mov
cmp
jne
pop
and
iret
leave
pop
push
adc
jnp
pop
adc
scas
xchg
outs
sbb
xor
push
mov
sbb
dec
dec
scas
or
shl
mov
mov
dec
loope
dec
and
and
cmp
call
int3
pop
rol
fcomp
fsub
mov
add
sbb
inc
btc
push
mov
in
mov
rcl
mov
jbe
xor
in
add
xchg
ret
cmovne
leave
sbb
mov
push
ins
dec
ja
push
cmps
pop
mov
mov
jne
(bad)
cs
or
shl
pusha
push
jmp
test
retf
fistp
mov
stc
add
aad
in
cmps
xchg
jns
call
xor
mov
pop
aaa
div
mov
cmp
cmp
in
and
std
cli
dec
mov
xchg
xchg
sti
jle
cmc
cmp
scas
pop
outs
movs
sub
dec
js
rcr
mul
out
and
(bad)
mov
imul
dec
popf
mov
add
inc
mov
and
pop
das
or
xrelease
xchg
sub
lods
dec
lahf
jmp
mov
inc
push
shl
adc
les
adc
outs
sahf
fldcw
cmp
cwde
inc
cmps
retf
adc
push
xchg
dec
xchg
sbb
sbb
push
in
cwde
mov
mov
dec
cmp
pop
mov
cwde
sub
loopne
adc
cld
jo
xor
fmul
cwde
(bad)
pop
and
dec
jne
out
inc
sub
rcl
or
les
add
mov
xor
cmps
push
or
dec
sti
icebp
pop
and
arpl
pop
xchg
js
out
cmps
cmp
fld
sub
arpl
imul
or
push
jnp
or
xchg
or
mov
sti
ret
inc
fild
push
mov
adc
xor
(bad)
nop
imul
cmp
mov
scas
jecxz
mov
or
cmps
or
or
add
pop
(bad)
rol
jno
scas
stc
es
mov
in
stos
in
test
popf
jae
sbb
mov
mov
ins
or
xlat
jle
pop
pop
and
inc
ret
xchg
xchg
xchg
cmc
mov
xor
jno
jno
pop
and
jmp
bound
pop
and
dec
adc
dec
aam
adc
sub
ds
sub
xor
rcl
fcomp
inc
mov
rol
icebp
inc
js
inc
dec
push
out
jo
leave
lea
shl
cmc
jmp
xor
int3
popa
retf
mov
cs
mov
fwait
stos
(bad)
call
sub
sub
mov
push
aaa
push
sbb
fistp
cdq
cmps
jb
pop
xor
sar
movs
scas
lahf
jle
sbb
test
cmp
sub
jne
jmp
ja
sub
cmp
add
imul
mov
fistp
je
xlat
aad
sbb
clc
pop
mov
test
das
test
sub
jno
cmc
cmc
push
inc
cld
push
add
(bad)
cmc
xchg
mov
call
paddb
adc
and
cmp
nop
pop
ds
mov
or
push
pushf
aad
and
inc
xor
push
sti
in
cmps
lock
(bad)
push
dec
xor
ds
sub
(bad)
jmp
xchg
(bad)
hlt
jl
cmps
ja
mov
xchg
cli
loope
pop
pop
shr
pop
pop
xchg
mov
sti
adc
mov
leave
inc
mov
rcl
cmp
daa
dec
pusha
pop
jp
je
mov
jnp
inc
bnd
ds
mov
test
inc
out
sar
in
pop
retf
mov
aam
loope
mov
jmp
je
popa
and
stc
lods
push
stos
popa
retf
enter
fs
lock
mov
push
adc
inc
sahf
ret
lods
retf
pusha
and
daa
cmp
inc
push
cs
rcl
cmp
pop
lock
jae
addr16
fst
cmp
mov
and
dec
lods
mov
dec
pop
xlat
and
dec
lahf
jp
ss
lds
pop
sbb
pop
retf
cmp
adc
or
ud1
out
cmps
(bad)
cmps
je
std
sar
dec
into
sbb
push
sub
jg
lock
sbb
jae
mov
pop
push
shr
data16
jle
or
aas
fnsave
pop
xor
loopne
fsubr
nop
cmp
ret
mov
cmp
mov
add
adc
fisttp
es
mov
rcl
sub
fcom
xchg
xchg
mov
jge
cmps
jmp
mov
pop
call
jg
push
jl
add
not
icebp
push
(bad)
sub
aad
imul
mov
out
adc
adc
inc
stc
pop
pop
movs
push
into
adc
cmp
pop
cmc
pop
add
pop
mov
test
add
push
stc
mov
xchg
dec
cdq
mov
xchg
loope
mov
mov
nop
sbb
pop
inc
(bad)
std
cmp
popa
retf
fisttp
push
push
dec
scas
sub
and
jno
inc
les
ja
cmp
cmp
cmp
adc
sbb
mov
push
dec
popa
mov
(bad)
xlat
xor
scas
inc
pop
sub
loop
repz
xchg
or
out
sbb
int3
pop
imul
dec
arpl
adc
mov
aad
out
fadd
fisttp
loopne
pop
sbb
iret
dec
addr16
mov
fld
fwait
(bad)
jb
dec
shr
or
dec
jnp
jmp
pop
fpatan
jp
jbe
arpl
and
les
xor
jmp
inc
cmp
mov
push
das
out
fistp
outs
and
loop
push
stos
jl
cmp
daa
(bad)
push
(bad)
(bad)
jle
ds
nop
in
dec
jb
and
leave
xchg
std
nop
out
cld
imul
fld
scas
sub
into
sti
test
stos
leave
(bad)
out
dec
xchg
jge
or
call
or
loope
ins
lock
arpl
ss
inc
sbb
mov
xor
int3
nop
push
sbb
jge
test
mov
ficom
test
push
push
xchg
inc
pop
lods
xchg
cmp
cmc
jno
(bad)
mov
xchg
(bad)
cdq
jecxz
jne
and
sbb
jg
sub
out
test
xchg
push
test
lds
mov
hlt
or
inc
jmp
cmp
xchg
xor
or
mov
jne
bound
pushf
stos
mov
inc
pop
inc
sub
mov
and
lods
sub
cmc
call
mov
or
push
adc
cmp
add
push
sbb
outs
push
mov
adc
mov
or
jge
rcr
sub
in
int
out
sbb
inc
arpl
out
ss
pushf
stos
jo
and
jo
and
xchg
jae
repnz
xor
mov
(bad)
lahf
frstor
mov
iret
lahf
push
(bad)
jo
arpl
push
add
test
ss
push
pop
lods
inc
stos
(bad)
xchg
int3
pop
or
inc
int3
xchg
std
cbw
jo
(bad)
sub
sti
arpl
push
imul
mov
mov
jb
ror
pop
iret
imul
or
mov
push
imul
pop
ds
jge
push
xchg
xor
push
je
(bad)
into
fs
xchg
sub
jl
inc
mov
xor
test
push
mov
adc
adc
add
adc
fldenv
cli
xor
pop
adc
adc
mov
pop
pop
scas
jmp
sti
loope
sti
mov
mov
cld
ins
call
inc
ds
sti
inc
aam
adc
loop
jns
aam
imul
mov
pmaddwd
test
xchg
stc
push
xchg
in
popf
imul
daa
dec
bound
leave
(bad)
and
pusha
fsubr
sbb
enter
dec
or
pop
xchg
lds
aaa
sbb
data16
xchg
popa
pop
sub
mov
cmps
lock
push
inc
jl
mov
ret
sbb
aam
bswap
pop
push
nop
mov
imul
cdq
out
sub
sbb
pusha
push
mov
xor
dec
push
jmp
call
lds
push
into
pop
sbb
int
and
jne
mov
cs
lods
daa
mov
dec
ret
add
cs
mov
shr
mov
pop
cli
inc
xchg
popa
popa
cmps
cmp
popf
push
mov
mov
cmc
add
adc
ret
fidiv
jmp
fcmovnu
mov
fs
pushf
inc
cdq
ds
dec
mov
test
lea
adc
aaa
stc
jg
test
sub
inc
mov
sahf
jb
inc
sub
inc
rcl
pop
imul
push
xchg
sub
ds
fstp
dec
enter
mov
imul
adc
cmc
sub
adc
xor
hlt
mov
or
mov
int3
lea
mov
aaa
call
mov
in
mov
out
inc
cmps
(bad)
addr16
fidivr
(bad)
aas
sub
cmp
arpl
cmps
push
popa
jno
mov
mov
push
add
mov
jbe
cmp
sbb
dec
pop
les
adc
(bad)
adc
adc
sbb
adc
mov
gs
add
adc
(bad)
mov
icebp
test
in
scas
push
test
sbb
push
push
mov
and
xor
push
repz
ins
inc
or
push
clc
cmp
movs
rcl
push
pop
int3
jp
hlt
jge
int
ret
cld
jg
jge
bound
test
jmp
popf
fiadd
jbe
fmul
jae
popw
xchg
jno
ja
stc
(bad)
pushf
xor
mov
ds
adc
out
scas
pop
pop
and
pop
sub
and
xor
mov
inc
jns
aas
inc
leave
das
push
push
or
(bad)
mov
xchg
jecxz
int3
repz
ret
and
mov
xchg
adc
push
or
mov
imul
movs
data16
aaa
(bad)
stc
call
inc
jp
inc
mov
dec
xchg
adc
pop
add
std
popf
icebp
dec
xor
pop
stos
xchg
mov
lea
mov
sahf
ds
call
mov
xchg
inc
or
repnz
aam
dec
push
iret
adc
dec
es
cmp
and
or
mov
jne
xchg
push
int3
push
fld
movs
(bad)
cld
ds
mov
mov
xor
movs
js
dec
cwde
aam
jmp
addr16
ror
ins
popf
out
ja
cmp
(bad)
stos
lods
mov
and
adc
out
loope
(bad)
fstp
mov
mov
mov
call
or
dec
add
add
and
mov
cli
pop
and
and
mov
jg
retf
add
imul
movs
xchg
dec
sbb
mov
into
cdq
mov
add
jb
outs
mov
outs
dec
ds
cmp
ror
jl
mov
(bad)
add
sbb
xor
push
jns
gs
and
lods
in
imul
lds
les
js
inc
sub
mov
push
push
fldenv
ss
push
sti
inc
pusha
push
sub
lock
sub
loopne
pop
pop
enter
add
jmp
mov
dec
mov
loope
test
iret
mov
hlt
dec
jb
cld
jmp
dec
adc
pop
and
mov
neg
xlat
gs
dec
gs
dec
mov
loope
(bad)
jmp
fldcw
aaa
xchg
shr
loop
sub
dec
cs
xchg
vandps
gs
xchg
out
jno
js
push
addr16
lods
cdq
sub
test
ss
or
ins
test
fwait
sub
mov
lahf
sub
stos
xor
loope
cli
sbb
push
jmp
mov
mov
cmp
jmp
std
fldl2t
jb
stos
rcl
into
stc
sub
sbb
(bad)
out
inc
xchg
fdivr
jo
adc
sahf
push
cmp
mov
and
ret
push
add
or
int
jmp
lea
(bad)
sub
sbb
das
cmp
into
fisttp
sub
mov
push
mov
jge
inc
jns
outs
iret
leave
cld
jnp
inc
pushf
add
je
dec
jg
in
cmc
mov
sub
ror
cmp
in
mov
ins
dec
mov
pop
inc
(bad)
add
xor
pop
dec
or
dec
pushf
lahf
ins
xchg
xor
adc
inc
sub
stc
pop
jp
gs
push
addr16
(bad)
sbb
in
xor
xor
xchg
lods
js
add
push
(bad)
push
in
in
sbb
jne
mov
mov
ret
dec
mov
outs
dec
cs
bound
out
dec
popa
or
adc
push
(bad)
lods
fcomp
daa
jne
sbb
lahf
dec
sub
adc
stc
inc
adc
lea
xor
iret
and
push
popf
push
cs
cmp
sbb
clc
pand
sbb
aas
int
jnp
leave
mov
pop
and
xor
mov
push
lea
pop
or
mov
loopne
sbb
fcmovnb
in
fsubr
inc
hlt
ret
in
and
and
sub
lock
cmp
xlat
add
inc
mov
sub
push
mov
ins
jne
into
cwde
ins
mov
mov
pop
jmp
enter
lea
sbb
repz
(bad)
mov
jecxz
sbb
or
aaa
jns
dec
outs
push
push
mov
and
dec
test
pop
cmps
cmp
jnp
sbb
jmp
or
imul
mov
lods
ret
mov
stos
test
and
adc
dec
sub
mov
xlat
mov
cmp
pop
sbb
fidivr
inc
int
adc
sub
inc
rcr
loope
mov
pusha
pop
xchg
add
jecxz
mov
mov
movs
sub
mov
in
sub
jmp
mov
and
or
sbb
push
push
inc
in
in
out
pop
sti
xor
test
es
mov
sbb
retf
test
or
push
jp
lods
pop
cwde
scas
test
rcl
fist
es
sub
outs
repnz
inc
dec
dec
out
and
or
idiv
jbe
es
inc
pop
cli
jp
adc
ins
mov
jb
retf
mov
sbb
fistp
inc
aas
xor
adc
cdq
cwde
repz
js
sti
push
inc
dec
js
sub
hlt
add
dec
push
into
pop
ror
jmp
jns
mov
adc
out
pop
loope
mov
jmp
jbe
pop
adc
push
cmp
inc
popf
rcr
stos
ror
fst
mov
inc
xchg
mov
clc
adc
and
push
push
shl
inc
(bad)
fild
out
mov
add
push
push
or
dec
out
jle
jb
out
(bad)
mov
add
dec
and
lea
aaa
bound
into
ret
data16
test
enter
int3
jg
nop
inc
gs
pop
cmp
mov
inc
mov
push
mov
neg
mov
shr
add
in
div
mov
jge
das
scas
mov
push
push
test
inc
mov
fst
push
movs
dec
mov
je
(bad)
fmul
stc
cwde
data16
or
and
push
pop
xor
dec
xlat
cmp
cmps
scas
pop
(bad)
std
push
mov
jl
cmp
sahf
imul
sub
sbb
in
(bad)
in
sub
xor
paddb
fstp
mov
mov
add
stos
or
sub
mov
pop
jo
dec
xor
stos
add
lea
inc
sub
dec
leave
repnz
icebp
cmp
in
jne
pop
sbb
jmp
jno
nop
pop
fldenv
ret
mov
in
jl
imul
pop
in
inc
pop
out
pusha
cmp
outs
or
pop
retf
ja
fs
sub
xor
nop
add
(bad)
imul
ja
lahf
mov
sub
mov
inc
stc
sub
jmp
mov
lsl
test
fwait
xchg
ror
imul
xchg
add
mov
cs
popa
stos
repnz
jmp
aad
or
ja
scas
rcl
ins
leave
mov
into
mov
lahf
cmps
sub
dec
inc
mov
sub
cmps
mov
and
es
ret
mov
aad
push
jns
mov
sub
cmp
mov
movs
xchg
or
icebp
jbe
jl
les
xor
mov
mov
imul
jmp
ret
sub
imul
rcl
jns
sar
in
repnz
sbb
xlat
jnp
push
inc
fwait
(bad)
daa
clc
cmp
pop
ja
ret
mov
sahf
out
add
pop
int3
ins
and
aaa
adc
jle
adc
loop
sbb
mov
outs
adc
mov
sahf
sub
or
sub
pop
adc
mov
nop
or
cs
aas
hlt
mov
xor
push
scas
xor
popa
pop
bound
mov
mov
lahf
les
and
ret
xor
sbb
in
shl
sti
fcmovnb
(bad)
push
cld
mov
mov
int
jae
adc
std
pop
mov
pop
jecxz
das
and
call
inc
xor
jmp
sbb
int3
push
pop
enter
jae
sub
test
call
sub
adc
sbb
push
imul
repz
adc
arpl
sbb
jmp
sbb
xlat
mov
push
(bad)
cmc
pop
out
shr
sub
jb
push
out
adc
cli
mov
pop
jecxz
xor
xor
(bad)
arpl
retf
xlat
mov
mov
jl
adc
scas
inc
xchg
xchg
mov
outs
pop
bound
push
in
adc
call
cmps
jns
retf
sbb
ret
dec
mov
mov
arpl
or
and
lock
mov
add
call
mov
or
xor
and
push
out
aam
inc
scas
xor
xchg
sbb
lea
push
ror
les
dec
xor
loope
ss
xchg
sbb
gs
loop
cli
sub
nop
clc
ror
movs
inc
je
push
jne
out
(bad)
iret
push
xor
jecxz
fidivr
in
ins
fcomi
jecxz
mov
push
xchg
inc
xor
cmps
jp
dec
mov
sbb
cmps
in
inc
jl
loopne
xchg
xor
jecxz
cmp
cmps
jbe
xor
inc
mov
ja
jno
mov
push
mov
sub
dec
mov
rcr
mov
scas
stos
mov
sbb
jno
adc
mov
cmp
adc
add
std
adc
push
cdq
repz
add
mov
sti
xor
xor
js
push
inc
cmp
cdq
movs
in
test
inc
lods
mov
mov
mov
outs
pop
inc
and
jbe
addr16
pop
popa
cdq
cmp
push
cmp
fisttp
dec
push
(bad)
mov
mov
cld
mov
add
pop
sbb
cmp
mov
daa
jmp
nop
mov
mov
dec
mov
or
mov
mov
sbb
add
sub
jno
pop
out
dec
pop
adc
imul
mov
inc
shl
mov
call
adc
mov
jmp
mov
dec
cmp
mov
fldenv
sti
and
adc
rol
ss
cld
not
(bad)
retf
mov
cwde
adc
or
mov
push
xchg
jp
(bad)
sbb
mov
sti
cmp
stos
stos
push
and
push
je
out
shl
or
pushf
dec
inc
sbb
retf
imul
push
jp
das
fild
and
iret
dec
int3
push
(bad)
in
and
aaa
sub
push
pop
mov
stos
fcom
lock
mov
test
cwde
cli
cmps
mov
ret
xchg
pop
inc
sub
sbb
mov
das
out
call
int
scas
inc
jmp
cld
push
loopne
mov
xor
mov
mov
loopne
je
ss
pop
ds
loop
pusha
imul
jb
adc
jmp
arpl
inc
mov
adc
sbb
retf
call
add
push
(bad)
shr
mov
or
mov
xchg
adc
pop
cli
std
add
xchg
les
enter
cdq
ror
sbb
outs
call
mov
add
push
out
jb
imul
inc
xchg
movs
mov
and
push
mov
call
fdivr
push
lods
imul
or
cmp
stos
leave
mov
pop
sbb
xor
inc
mov
push
(bad)
stc
inc
icebp
mov
add
xor
mov
push
add
lods
lds
outs
sbb
xor
mov
gs
and
sub
not
ja
into
pop
adc
les
in
push
outs
dec
push
xor
fst
clc
loop
js
mov
jl
lea
test
inc
or
dec
jae
push
fs
leave
ror
adc
cmp
lods
js
int
aaa
inc
sbb
jae
add
sbb
add
dec
cmp
xchg
ret
push
cmp
jecxz
popa
xchg
clc
out
add
pop
out
call
sub
mov
mov
sub
and
mov
jmp
cs
pop
sti
sub
sbb
and
inc
pop
add
fcomp
inc
xchg
iret
pop
adc
xor
outs
sbb
sub
xor
je
sub
mov
cmps
rcl
dec
(bad)
fwait
mov
in
(bad)
loopne
cmp
pop
ret
sbb
enter
sub
lock
mov
cmps
and
cld
fsub
mov
ins
sbb
sbb
iret
push
loopne
xchg
mov
ret
dec
call
cdq
push
aas
cmp
test
mov
xor
inc
inc
inc
xbegin
jns
in
sbb
leave
mov
mov
xchg
movs
stc
mov
ins
push
fbstp
pop
ret
jo
cwde
jmp
jns
inc
mov
sub
add
imul
repnz
popw
mov
xor
jmp
pop
clc
jb
les
mov
ins
bnd
in
adc
sbb
push
or
and
xchg
aam
push
daa
cmp
aas
pusha
js
mov
enter
sar
or
ret
jp
mov
es
call
add
stos
jnp
xchg
shl
xor
push
sbb
lods
call
jmp
hlt
push
mov
icebp
je
push
pop
out
repnz
mov
mov
in
arpl
inc
mov
imul
outs
rcr
cs
mov
movs
out
jmp
rol
or
shr
fist
ins
rcr
out
or
popf
test
xchg
imul
sbb
fstp
imul
jmp
test
daa
jmp
stos
cld
arpl
jp
add
xor
divps
scas
add
pop
pop
push
cmc
sahf
mov
dec
xor
jb
daa
retf
in
mov
test
cmp
ret
or
cmps
sub
push
xor
dec
sub
retf
inc
add
std
pop
inc
test
pusha
add
xor
cmp
jne
mov
jge
fisub
ss
jl
and
enter
pop
cld
nop
mov
fcmovbe
repnz
and
addr16
or
sub
cmps
ds
mov
or
sub
mov
jns
dec
jl
out
inc
aad
cdq
mov
and
je
daa
dec
mov
sbb
fsub
out
dec
adc
jae
not
pop
xchg
fsub
xchg
lock
and
test
add
add
jmp
(bad)
cmps
push
lods
ficom
and
sbb
loope
test
es
scas
and
out
push
mul
shr
cld
aad
lods
and
fcom
popa
cmp
inc
ja
adc
inc
fiadd
adc
dec
mov
adc
inc
jne
in
mov
jne
sub
inc
jns
mov
or
jmp
mov
into
icebp
aam
mov
js
inc
outs
mov
in
sbb
or
xchg
movs
shl
push
dec
retf
cs
adc
mov
mov
mov
add
push
dec
jno
shl
ret
sub
call
pop
jnp
lods
dec
push
out
dec
adc
rol
(bad)
imul
xchg
aam
(bad)
test
cmp
gs
int3
aam
(bad)
ret
adc
jge
xor
ja
sub
aad
xchg
mov
or
jmp
jbe
add
repz
pop
imul
sti
(bad)
push
sub
out
pushw
and
fadd
dec
mov
dec
and
sub
clc
cmp
xchg
clc
(bad)
sbb
loope
fbstp
push
retf
mov
xchg
xchg
pushf
adc
push
jp
push
aas
sbb
xchg
out
scas
sbb
dec
xor
sahf
xor
pop
lds
inc
push
mov
cli
mov
repz
std
sbb
(bad)
mov
xor
arpl
in
cmp
jle
fwait
jae
out
lods
pop
cmc
movs
pop
mov
or
mov
loope
and
push
repnz
imul
sbb
jle
dec
scas
fisttp
cmp
(bad)
mov
loope
ret
jnp
(bad)
cmps
and
cdq
add
xor
inc
or
mov
and
dec
je
jb
cmp
fstp
jmp
or
xchg
adc
cli
add
push
mov
arpl
ds
jne
jecxz
(bad)
out
push
addr16
ret
and
pop
lods
inc
in
jmp
push
test
fwait
stc
xor
(bad)
das
xchg
outs
std
xchg
addr16
out
jecxz
daa
jnp
mov
xchg
ins
jmp
mov
lods
add
loopne
push
mov
push
mov
mov
repz
imul
icebp
in
movs
(bad)
popf
out
sbb
scas
jg
popf
imul
outs
cmps
cmp
inc
pop
rol
mov
out
fcom
loope
mov
loopne
mov
les
ins
icebp
dec
mov
inc
jmp
dec
idiv
out
add
mov
and
mov
outs
(bad)
in
or
lods
icebp
fwait
loope
mov
xchg
sub
call
xchg
mov
dec
xchg
outs
repnz
jbe
js
xchg
pop
in
addr16
loop
inc
pop
dec
mov
push
rcr
xchg
jp
loope
sub
dec
call
push
jle
mov
and
out
(bad)
sub
sbb
xchg
pop
shr
inc
pusha
inc
dec
sbb
dec
mov
les
lods
or
aaa
rol
push
fprem
push
mov
mov
dec
fdiv
(bad)
sbb
imul
mov
mov
push
cmps
retf
cmp
call
in
shl
cs
out
in
mov
mov
mov
repnz
jne
and
loopne
inc
int3
cmp
mov
xor
outs
out
mov
mov
idiv
cwde
shl
mov
into
out
push
test
imul
retf
mov
fdivr
mov
cld
out
pop
push
pop
cs
sub
shl
sti
jmp
imul
mov
aam
add
les
jmp
pushf
ror
cld
sub
push
xor
or
mov
adc
shl
cmp
adc
inc
dec
jo
out
push
sbb
mov
and
and
stos
inc
clc
in
sbb
shl
fiadd
(bad)
xchg
(bad)
shl
mov
test
pop
fsubr
inc
mov
call
fisubr
repz
ret
(bad)
ss
stc
add
out
(bad)
ret
and
inc
sub
fisubr
mov
out
inc
es
sub
xor
call
lahf
clc
add
lds
mov
daa
mov
jae
inc
jl
push
dec
cmp
fcom
rol
mov
in
fcomp
cs
sub
push
and
pop
pushf
clc
mov
(bad)
shl
and
mov
fistp
loopne
cmps
iret
out
iret
shl
enter
xchg
jnp
pop
outs
cdq
inc
adc
sar
dec
in
imul
rcl
cmp
mov
jb
push
xor
and
dec
mov
popf
jg
push
movs
les
fldcw
jmp
cwde
(bad)
sbb
aaa
push
mov
mov
fsubr
out
mov
mov
lods
rcl
mov
adc
ror
in
jns
dec
xor
push
scas
sbb
into
push
adc
fstp
imul
mov
retf
in
xchg
out
cmps
inc
pop
pop
xchg
retf
add
leave
and
cmp
sbb
fs
adc
shl
dec
xor
repz
adc
mov
nop
fnstsw
cmp
cmps
pop
mov
cmp
jle
xlat
mov
pushf
xor
and
mov
adc
sub
dec
test
xor
and
adc
jl
sti
popa
fdivr
pop
in
aad
mov
jecxz
call
xchg
int3
inc
xor
inc
fs
imul
aad
lea
inc
cld
push
aaa
jg
call
push
test
inc
jno
adc
push
mov
cmp
add
xor
mov
or
bound
dec
push
lods
cmps
sbb
scas
inc
sub
fst
pop
stc
data16
sahf
pop
cmps
add
enter
data16
movs
xor
push
push
adc
push
clc
stos
stos
mov
cmp
and
pop
pop
xchg
lahf
push
adc
and
pop
sahf
add
adc
push
(bad)
push
sbb
cmp
mov
xor
inc
ficomp
xchg
and
and
inc
popf
outs
cmp
push
lock
je
in
pusha
je
xchg
jmp
das
mov
aam
push
lods
fistp
jne
xor
inc
dec
add
dec
sbb
(bad)
or
ds
iret
push
pop
jo
popa
dec
push
lods
add
push
gs
adc
int
inc
pop
push
cwde
or
mov
xlat
clc
(bad)
out
imul
cwde
sbb
stc
mov
in
pushf
pop
mov
(bad)
jecxz
dec
ins
jns
inc
into
mul
push
add
xchg
inc
add
jmp
xchg
inc
push
add
jno
and
adc
fbld
test
or
xchg
jnp
ins
mov
pop
enter
xchg
xlat
cld
sub
adc
(bad)
pusha
inc
fwait
mov
in
aam
mov
leave
bswap
push
test
fsubrp
(bad)
std
daa
adc
sti
dec
adc
mov
sub
imul
sub
neg
shl
or
fimul
es
push
(bad)
mov
xchg
icebp
jnp
leave
fisttp
sahf
or
mov
outs
aas
inc
xchg
push
mov
je
cmp
jbe
adc
bound
cmp
nop
adc
ins
mov
ror
cmps
mov
sti
xor
mov
and
stos
add
fcom
push
imul
dec
(bad)
or
fwait
dec
lods
(bad)
rcr
push
sahf
xchg
test
add
sti
cs
sbb
xchg
xchg
fs
dec
pop
pop
(bad)
and
xor
loope
jb
push
push
mul
push
sub
gs
hlt
or
inc
xor
or
out
imul
lea
jp
jge
or
test
lods
sbb
call
inc
loop
test
leave
add
or
jge
pop
xor
or
pop
jecxz
aaa
stos
push
movs
scas
lock
clc
fndisi(8087
leave
push
jle
or
es
pop
test
fwait
xchg
dec
les
add
in
daa
jne
hlt
pop
pop
cmp
cmp
imul
cmp
pop
and
in
retf
pop
rol
movs
imul
adc
retf
out
add
(bad)
fsubr
mov
ja
jg
loop
push
mov
psubd
mov
movs
stos
xchg
mov
test
stos
imul
mov
or
gs
inc
mov
mov
push
repnz
nop
cmps
lea
sahf
clc
or
es
and
shr
dec
ins
push
lea
sub
push
xlat
jb
mov
int3
xor
push
and
push
xchg
hlt
pop
repnz
pop
adc
mov
dec
in
nop
aaa
add
adc
shl
test
add
es
call
push
jmp
aad
pop
mov
dec
imul
mov
in
cmp
cmp
mov
pop
pop
sti
push
dec
mul
lea
cdq
mov
adc
mov
(bad)
movs
loopne
adc
ins
aam
xchg
ret
sub
(bad)
mov
or
mov
push
mov
sbb
ds
clc
loope
xchg
pop
das
jo
fcomp
mov
out
and
sub
(bad)
movs
add
push
shl
cmp
loopne
mov
cmp
enter
adc
xchg
fdiv
cwde
jno
int
ror
in
mov
push
cmp
fcom
push
jb
scas
dec
xchg
or
ja
pop
or
adc
idiv
ja
(bad)
std
cmp
stc
push
xor
sbb
mov
dec
or
pand
or
sti
mov
ficomp
adc
scas
js
push
xchg
or
icebp
jne
repz
and
xchg
lahf
mov
or
push
push
dec
daa
jns
xor
jno
aas
inc
dec
call
add
in
dec
jb
xor
js
push
(bad)
sti
or
mov
lock
inc
fst
retf
cmp
cdq
mov
int
add
jmp
dec
es
sub
scas
jnp
ds
xchg
std
dec
pusha
ficomp
nop
cmp
dec
mov
mov
fiadd
pusha
daa
sub
not
in
xchg
sar
cmp
retf
test
int
fwait
retf
xor
or
inc
jb
cs
or
call
xchg
call
out
mov
xor
les
adc
loopne
aam
pop
xchg
call
clc
outs
cmp
mov
(bad)
stos
mov
add
mov
jnp
shl
sub
xchg
mov
sti
adc
(bad)
test
xchg
aam
popa
std
mov
leave
inc
xor
mov
cmp
pop
push
sar
in
fwait
mov
ror
int3
cmp
mov
pop
cmp
xor
dec
jnp
fs
ja
cmp
das
pop
mov
mov
inc
adc
jno
mov
or
mov
pop
mov
ror
jmp
pop
cmc
mov
add
sbb
jg
or
retf
into
cmp
aam
inc
adc
sbb
sub
sbb
cmp
xchg
(bad)
into
enter
inc
jno
leave
retf
xor
sub
out
mov
adc
sahf
jmp
loope
jg
jns
inc
dec
in
cmp
mov
cmc
scas
mov
popf
nop
mov
xchg
push
pop
lea
or
cmp
pop
jns
add
call
add
add
mov
sbb
adc
or
test
jp
jp
sti
dec
fs
popf
(bad)
(bad)
push
adc
jb
fist
mov
mov
jb
popf
and
add
sbb
lods
je
ins
pop
jge
nop
xor
jnp
jge
add
rcl
adc
wbinvd
sub
mul
inc
mov
daa
out
and
sub
es
cs
or
cmps
inc
out
jb
dec
or
cmps
cmc
xchg
add
add
fcomp
outs
stos
mov
jne
imul
jnp
lock
and
mov
ja
pusha
inc
jge
fistp
add
repnz
dec
mov
xor
inc
add
sub
int3
push
mov
inc
pop
retf
retf
inc
shl
mov
fild
push
mov
movs
outs
cmps
loopne
paddusw
push
inc
mov
cmc
dec
in
sub
mov
push
xor
cld
inc
mov
sti
repnz
sub
jbe
mov
dec
adc
shl
or
out
lea
mov
shr
icebp
push
(bad)
in
xchg
mov
cmps
add
mov
lods
jmp
fisubr
pop
sbb
jp
pop
out
mov
mov
cmps
iret
sub
cmp
xor
xor
jb
xor
push
mov
loope
mov
fs
sbb
les
pop
fwait
and
repnz
(bad)
xchg
call
lds
sub
push
mov
pop
mov
mov
call
int
xor
out
fsubp
inc
inc
and
pop
or
aam
fldenv
std
aas
add
sub
inc
cmp
sbb
xchg
imul
mov
out
mov
mov
pop
(bad)
mov
(bad)
jne
or
sbb
fistp
les
inc
aas
or
or
(bad)
inc
dec
imul
mov
stos
sub
fs
scas
ins
mov
adc
inc
inc
ror
pusha
jg
xchg
inc
adc
mov
pop
out
and
test
in
test
sbb
pop
xor
sbb
out
sub
and
ja
push
cmc
cli
popf
aaa
add
sub
xor
test
mov
dec
and
push
ret
cmps
mov
retf
xchg
imul
or
div
imul
nop
push
sbb
adc
shl
aas
pop
pop
movs
rcr
fcom
and
push
jne
dec
stc
xchg
je
cwde
adc
or
hlt
pop
mov
mov
pop
push
pushf
mov
sub
sub
xchg
mov
sub
adc
(bad)
jb
outs
mov
sub
and
xchg
pop
sub
jge
push
in
lock
or
xchg
iret
arpl
inc
mov
mov
outs
aam
arpl
fild
(bad)
std
aad
loop
ret
out
int
(bad)
sub
and
push
xor
jecxz
pop
stos
push
daa
pop
inc
xor
mov
cs
add
xor
(bad)
mov
pushf
les
cmp
aad
das
or
jo
jmp
dec
fwait
cs
test
mov
adc
adc
xor
sub
xchg
xor
lods
or
and
push
repnz
and
pushf
sti
jbe
mov
aad
xchg
jns
icebp
pop
fild
jl
xor
mov
mov
test
call
jge
push
dec
push
call
mov
or
pop
inc
mov
push
loopne
pop
mov
std
jnp
xchg
cmp
pop
add
adc
pop
fidivr
inc
(bad)
lahf
xchg
push
inc
push
rcr
xor
sub
idiv
or
or
mov
rcr
adc
mov
rcl
(bad)
movs
or
add
pop
fdivr
inc
icebp
or
jbe
fbld
xor
mov
test
adc
cmp
call
lahf
(bad)
jno
sub
sbb
xlat
mov
pop
sub
push
leave
enter
or
js
daa
sahf
cmps
movs
mov
mov
test
test
test
icebp
outs
mov
out
pop
xor
cmp
mov
jmp
inc
std
mov
test
cs
jns
xor
scas
call
lds
xchg
jmp
imul
push
mov
jecxz
push
push
int3
xchg
cmp
pop
aam
js
push
(bad)
ror
test
sti
outs
sti
mov
out
not
cmp
jge
inc
arpl
dec
gs
add
out
push
rcl
into
(bad)
mov
dec
xchg
mov
jbe
pop
leave
jle
push
xor
lea
pop
sbb
sbb
push
fnstcw
test
scas
in
mov
mov
mov
(bad)
dec
pop
pushf
ret
sbb
and
sub
mov
pusha
fmul
aaa
fcomp
test
fs
(bad)
enter
cmp
cmp
sti
push
loopne
xor
rcl
addr16
out
sahf
adc
add
fwait
cmp
cdq
ins
jmp
and
xchg
mov
or
sub
scas
out
outs
push
jne
inc
lods
in
or
xor
and
and
push
jecxz
adc
iret
mov
cli
aaa
jecxz
mov
lahf
out
cmc
jae
push
jp
sub
xchg
mov
mov
rcr
push
push
push
jl
sbb
mov
out
pop
inc
add
hlt
or
scas
inc
lods
mov
(bad)
pop
dec
(bad)
inc
je
ins
and
push
mov
cmp
inc
mov
sbb
icebp
sti
pushf
mov
in
cmp
call
imul
outs
adc
cmp
out
adc
and
or
out
out
push
out
pop
or
jmp
pop
push
xchg
pop
aas
cmp
sbb
jmp
pop
int3
popa
mov
push
cld
add
pop
adc
mov
mov
test
sbb
(bad)
mov
test
fisub
xchg
pop
push
xor
dec
and
clc
addr16
enter
call
out
inc
add
xchg
inc
outs
cmp
add
sbb
psubd
(bad)
fcom
mov
add
cmc
cmps
into
or
pop
scas
popf
mov
pop
divps
mov
aas
(bad)
mov
fnstsw
jne
xchg
addr16
mov
mov
or
or
icebp
pop
inc
add
fcomi
push
adc
inc
mov
sbb
ds
cmps
(bad)
in
xor
inc
mov
ror
dec
mov
ret
ror
fs
pusha
add
test
(bad)
sub
or
test
or
test
jge
ins
std
mov
pop
movs
pop
mov
jge
cmp
in
enter
fild
push
push
add
mov
(bad)
leave
aad
fsubp
les
out
jo
mov
jns
out
out
sub
daa
ins
pop
nop
inc
test
imul
or
push
nop
call
ja
xchg
out
xor
loope
into
shl
jnp
mul
jecxz
icebp
or
aaa
out
mov
sub
loope
adc
fild
and
ret
cmp
fcomp
retf
cmp
fadd
xor
cmps
rol
shr
pop
pusha
cmp
stc
pushf
aas
push
movs
mov
fs
imul
jge
imul
pusha
pop
mov
ret
out
lds
push
inc
js
ss
push
stc
and
clc
and
bound
xlat
imul
ins
fwait
leave
jno
lahf
push
and
xor
ror
leave
dec
or
dec
add
add
pop
xchg
pop
mov
daa
out
sub
push
and
bound
daa
rcl
xchg
jge
popa
sbb
inc
pop
fwait
xchg
sub
mov
scas
cmp
sub
push
movs
xor
mov
mov
lods
out
fisubr
add
int3
js
stos
or
jmp
(bad)
std
jae
sub
xchg
ss
pusha
adc
enter
cdq
add
and
mov
mov
jns
and
jle
mov
test
lock
inc
cmp
mov
jge
inc
lods
movs
in
scas
movs
sbb
loopne
fldenv
in
inc
sbb
jmp
int3
push
ja
out
(bad)
mov
js
sahf
(bad)
jbe
pop
test
jae
xchg
and
jnp
inc
or
sti
popf
adc
sahf
mov
ins
mov
ins
add
inc
ss
jns
fdivr
jno
and
in
loope
out
pop
push
repnz
xchg
int
sbb
pusha
mov
mov
loope
xchg
pop
pop
retf
je
jmp
or
test
xchg
test
cmp
push
pop
movs
std
xor
pop
add
ss
jge
sub
add
push
out
imul
and
fldenv
(bad)
pop
add
sbb
into
pop
stos
movs
xchg
xor
cmp
cld
or
and
shl
cmp
hlt
test
into
cli
out
adc
mov
inc
sub
jnp
mov
push
movs
cmp
pushf
inc
test
ja
outs
les
mov
enter
push
pop
xor
lock
cs
mov
aad
sbb
int3
inc
jnp
cmp
pushf
inc
xor
jnp
mov
lock
cmp
imul
call
pop
xchg
xchg
lahf
ja
stc
cs
push
movs
movs
shr
pop
push
pop
pop
xor
lahf
sub
mov
mov
push
movs
lock
xor
ret
adc
mov
and
mov
repz
dec
retf
enter
xchg
je
xchg
das
add
adc
push
mov
retf
inc
aad
adc
mov
data16
cwde
and
inc
add
jbe
sub
fistp
dec
push
cwde
mov
add
cmp
lds
adc
inc
cdq
iret
xor
call
push
sahf
pop
push
popf
mov
cmp
sbb
push
inc
adc
pop
(bad)
xchg
cmp
jecxz
mov
mov
mov
clc
push
push
rol
sub
jae
and
xchg
loopne
outs
sbb
iret
sub
and
loopne
test
sahf
jnp
push
mov
mov
lods
int
(bad)
popa
or
popf
call
jge
(bad)
xor
jg
ins
add
ficomp
imul
fnstsw
sbb
add
and
mov
push
jmp
jmp
push
sub
jns
popf
adc
sub
mov
or
adc
(bad)
mov
dec
xor
stc
pop
jb
imul
cs
pop
push
push
mul
pop
push
pop
mov
(bad)
js
xor
mov
mov
mov
pop
es
rcl
into
push
push
mov
scas
sti
adc
aaa
dec
les
sbb
sub
addr16
sar
in
hlt
mov
es
mov
mov
or
jle
retf
test
test
es
dec
mov
or
mov
div
dec
das
stos
outs
and
(bad)
js
shl
push
push
into
jl
pushf
lahf
sahf
sti
mov
rcl
enter
mov
add
push
dec
shl
cmc
out
cdq
mov
lock
inc
aaa
pop
retf
or
add
adc
xor
clc
inc
lods
test
(bad)
sbb
mov
pushf
fs
test
call
jmp
hlt
sar
ficom
bound
cmp
jg
nop
ins
out
or
cld
adc
add
inc
(bad)
cvtps2pd
adc
retf
lods
in
fcomp
dec
mov
push
sbb
xor
inc
fisub
call
inc
jg
mov
shl
cmp
cmps
int
pop
sbb
addr16
push
adc
jno
mov
int
pop
inc
les
js
xchg
sub
xchg
cwde
into
xchg
repnz
mov
and
jecxz
retf
lock
in
out
fs
pop
mov
fild
movs
data16
and
add
add
icebp
or
pop
mov
inc
push
xor
xor
xchg
mov
dec
ret
lods
shl
or
sbb
dec
imul
push
mov
push
cs
xchg
loopne
jmp
ss
arpl
sbb
sub
(bad)
outs
repnz
or
mov
rcr
mov
push
movs
popf
xlat
sub
cwde
test
test
xor
(bad)
retf
mov
(bad)
adc
pusha
adc
jmp
gs
push
shl
push
jle
mov
pop
das
jo
les
cwde
mov
pushf
xchg
cs
out
int3
dec
jno
pop
call
push
and
and
push
pusha
cmp
xchg
mov
sti
sbb
sbb
sti
pop
movs
call
mov
out
aaa
jnp
aaa
sub
out
mov
imul
int
add
inc
add
cmps
pop
inc
and
sub
ja
pop
adc
jl
push
xchg
xchg
push
mov
xor
mov
jne
jmp
jae
add
in
movs
loop
gs
xor
inc
mul
scas
pop
int
das
push
pop
pop
push
out
cld
inc
jo
xchg
data16
jp
and
nop
(bad)
push
out
(bad)
neg
repnz
jno
mov
rol
mov
pop
adc
dec
or
sahf
mov
enter
std
fwait
push
inc
xchg
loope
nop
in
lahf
and
sahf
(bad)
and
or
and
or
test
dec
fbld
xor
xlat
pop
rol
(bad)
pop
loopne
mov
ds
cmps
outs
stc
dec
mov
fs
cmp
jmp
add
add
mov
cmc
mov
add
inc
adc
and
cmp
adc
scas
data16
pop
hlt
mov
jp
sub
jecxz
lods
nop
jno
int3
sub
adc
push
jbe
repz
dec
cmps
add
(bad)
xor
dec
shr
sti
loopne
mov
push
and
sbb
enter
call
add
stc
xchg
call
xchg
sbb
jno
stc
dec
jmp
mov
stc
jle
repnz
pop
fild
xchg
or
cs
dec
ja
mov
aaa
push
ins
clc
mov
push
movs
inc
outs
or
lods
(bad)
clc
fld
add
push
fild
and
add
cwde
mov
out
mov
in
das
mov
push
repz
mov
xchg
int3
pop
mov
mov
push
out
nop
pop
pop
mov
mov
sahf
movs
(bad)
das
xchg
xchg
cmp
mov
leave
int3
fsubr
xor
lea
mov
(bad)
pop
pop
jmp
stos
lods
sbb
xor
xchg
aas
mov
leave
mov
or
inc
int
mov
stos
sbb
adc
mov
push
mov
adc
xchg
arpl
push
sar
sub
sbb
push
push
rol
lock
iret
fs
aam
xchg
and
clc
cmp
das
cs
inc
aas
sub
aas
push
xchg
arpl
adc
mov
mov
mov
pop
adc
leave
lods
sub
lock
mov
adc
sahf
jmp
push
mov
cmps
in
sahf
outs
and
ror
fcom
repnz
nop
inc
das
cdq
jg
lock
out
jns
add
dec
aam
popa
jnp
inc
jmp
mov
mov
fldcw
rcl
dec
xor
call
push
je
out
fwait
cmps
and
xor
repz
adc
sbb
je
std
jbe
pop
xlat
lods
movs
jle
cmp
outs
dec
or
dec
jmp
mul
inc
pop
mov
push
pushf
xchg
mov
dec
cmps
jo
pushf
stc
xchg
(bad)
jmp
xchg
aaa
cli
int
xchg
sti
ret
mov
lods
xlat
push
mov
adc
or
pop
sbb
pop
js
sub
scas
loopne
stos
push
sub
fstp
sub
cs
mov
aam
push
jge
ins
mov
les
push
push
jmp
inc
mul
into
add
imul
xor
sub
mov
push
ins
pop
cmc
mov
jmp
cmps
cmp
les
into
js
sub
sub
jmp
sub
jne
mov
sub
retf
mov
cdq
jbe
outs
mov
(bad)
cwde
sti
(bad)
pop
aas
movs
aad
pop
lods
mov
mov
in
jns
inc
push
test
js
int
xor
test
cli
adc
or
(bad)
push
cs
xor
jns
pop
(bad)
lock
cdq
loop
int3
mov
xor
and
and
ja
sub
push
scas
movs
or
sub
test
aaa
fld
mov
pop
jno
call
jp
(bad)
outs
dec
mov
mov
xor
test
jnp
das
rol
xchg
add
dec
arpl
aaa
mov
xchg
push
mov
(bad)
cli
(bad)
cmp
or
cli
bndstx
pop
fldenv
fs
leave
xchg
sbb
mov
xchg
fist
xchg
ss
or
aas
mov
jno
pusha
jmp
mov
(bad)
jmp
mov
arpl
dec
inc
ret
scas
adc
or
xor
jg
loope
mov
lea
pop
loope
loope
(bad)
sbb
and
mov
pop
inc
dec
jmp
xor
rol
mov
mov
inc
fwait
mov
jecxz
and
cmps
fistp
shr
add
cmp
cmps
cmp
cmp
out
mov
pop
push
pop
pavgw
xchg
cmp
int3
inc
and
sub
fwait
stos
adc
adc
sbb
mov
movs
les
pop
scas
and
cli
xchg
test
in
(bad)
mov
int3
mov
das
sub
mov
cld
hlt
mov
ret
sub
cmp
add
sti
enter
in
popf
push
(bad)
jp
jmp
and
cld
push
add
rcr
enter
leave
lods
adc
push
lods
(bad)
xchg
mov
push
inc
stos
fdivp
jo
leave
pop
ror
add
(bad)
mov
mov
dec
mov
and
cmp
shr
(bad)
scas
outs
xchg
add
addr16
cmp
mov
fsub
into
push
leave
int3
call
and
cmp
les
out
std
xlat
mov
mov
outs
fnstcw
mov
pop
mov
jns
call
mov
or
out
rol
(bad)
or
ins
sbb
cmps
push
mov
jo
sub
xchg
xchg
mov
and
in
jmp
or
int3
push
pop
loope
scas
cmp
fcomp
stos
pop
loop
inc
and
fdiv
inc
jbe
test
and
xchg
cmps
xchg
and
int
xor
mov
jp
xchg
mov
das
(bad)
or
ds
add
stos
cmp
fistp
in
repnz
jmp
cmps
push
add
je
fdivr
retf
mov
push
rol
xor
jmp
and
mov
ins
mov
pusha
inc
fdivr
(bad)
adc
add
sub
addr16
cmp
(bad)
sbb
inc
test
imul
mov
mov
cwde
je
jae
push
mul
aam
cli
int3
push
jne
mov
hlt
xor
add
pop
add
(bad)
pop
loope
ret
lahf
je
out
aam
lock
in
cli
mov
retf
gs
test
cmp
cli
push
add
and
movs
dec
xchg
mov
add
test
into
data16
xchg
lock
cdq
ss
fmul
inc
and
add
mov
jle
ror
add
cmp
gs
movs
ret
(bad)
nop
pop
mov
push
or
dec
rcl
pop
arpl
fist
xchg
in
push
mov
inc
loop
xchg
jecxz
pcmpeqw
pop
fstp
mov
xchg
xor
jb
inc
adc
mov
test
sbb
rol
out
xchg
push
push
imul
aas
xchg
mov
mov
ret
push
dec
loope
int3
clc
and
pop
scas
test
fnstsw
xchg
xlat
add
cmps
lods
out
out
fmul
sti
push
fidivr
ret
fisub
push
jnp
(bad)
ja
add
js
sahf
pop
xchg
jle
pushf
xchg
jo
adc
daa
jo
sbb
call
jp
inc
call
jns
sub
(bad)
add
cmps
movs
jne
sbb
mov
int
ror
hlt
into
call
push
and
cmp
pop
jne
inc
mov
in
xor
out
jecxz
mov
sbb
dec
test
shl
pusha
push
stos
dec
push
mov
mov
inc
sub
adc
sub
or
mov
leave
out
ror
frstor
pop
sub
push
scas
int3
out
lds
fnstsw
leave
or
aas
(bad)
adc
inc
xchg
xor
xchg
mov
rcl
lods
ret
cmp
mov
(bad)
jbe
sub
shl
cmp
cmps
pop
ss
jmp
daa
psrad
adc
test
aas
pop
fidiv
js
popf
push
push
icebp
dec
and
or
sbb
push
sahf
pop
ins
pop
sbb
data16
sub
sbb
add
stos
cs
in
sub
add
xor
sbb
jns
sbb
jg
(bad)
cmp
pop
mov
lock
fnstsw
test
sahf
xchg
mov
test
je
push
sub
sar
retf
mov
sub
xchg
fcmovnb
dec
ss
inc
inc
outs
out
test
mov
xlat
aad
fimul
push
fldenv
aaa
iret
daa
cmp
cli
aam
mov
mov
adc
cmps
cmc
mov
shl
mov
cdq
inc
in
test
pop
test
out
adc
sbb
jmp
dec
scas
popa
lds
xlat
call
jge
adc
cdq
or
out
lea
jb
clc
(bad)
into
and
and
push
in
push
mov
add
(bad)
dec
xor
popa
frstor
mov
xor
sar
test
(bad)
and
lahf
sub
dec
add
mov
shl
inc
sbb
jle
fisttp
dec
sahf
std
lahf
jp
xor
adc
sbb
xchg
or
inc
mov
repnz
xor
jecxz
sbb
out
cmps
or
dec
add
xchg
mov
and
pop
out
sar
ja
jb
mov
push
dec
pop
sbb
icebp
jno
jl
ret
ds
and
test
dec
pop
stos
jmp
sbb
aam
sbb
sbb
lds
sbb
out
mov
mov
mov
xlat
idiv
(bad)
adc
into
addr16
push
push
into
or
test
repnz
and
or
mov
movs
push
pop
mov
mov
ins
popa
dec
aas
xchg
mov
sahf
mov
dec
or
or
sti
and
jno
pop
loop
(bad)
imul
fsubrp
sbb
aaa
outs
xchg
push
mov
fisubr
mov
mov
mov
sub
shl
or
jp
fwait
cmp
cwde
push
fisttp
js
(bad)
xchg
loope
gs
lods
push
xlat
bound
aas
fsubr
mov
cwde
cmp
enter
(bad)
(bad)
xor
je
cmc
pushf
jne
cmp
mov
test
cmps
jno
inc
mov
jnp
fdivr
loope
in
cmp
sbb
push
adc
test
adc
jb
mov
popf
repz
out
or
adc
mov
cmp
mov
mov
psubd
jp
repz
or
push
mov
jmp
cmp
repnz
pop
and
pop
nop
jmp
test
push
or
ss
inc
addr16
jmp
dec
arpl
pop
int
retf
push
gs
cmc
jmp
leave
call
sub
sbb
dec
rcl
out
xor
aas
ins
adc
xchg
xor
lods
call
dec
ins
popf
outs
iret
cmp
lods
(bad)
test
xchg
std
sub
dec
sub
cmp
ins
jb
aad
push
mov
add
out
rol
and
leave
push
(bad)
and
cmps
dec
xor
daa
jo
pushf
inc
mov
add
dec
jno
fcomp
inc
xor
sub
or
pushf
sahf
push
jns
ins
pop
push
test
(bad)
mov
sbb
xor
stc
xchg
push
adc
clc
inc
add
sbb
(bad)
repnz
jle
push
pop
lods
push
xchg
sub
cwde
iret
cmps
sahf
rol
sbb
cmp
cmps
mov
mov
mov
sub
dec
sub
mov
sub
cmp
sub
mov
jecxz
push
sub
mov
fstp
push
cmp
out
mov
dec
(bad)
in
loopne
xchg
mov
pusha
cwde
sbb
in
mov
call
pushf
retf
loope
add
repnz
dec
pop
pop
mov
je
inc
rol
ja
cmp
out
and
and
fisub
mov
pushf
add
addr16
and
js
inc
pop
in
pop
mov
pop
xchg
in
mov
push
xchg
mov
cmp
das
cmps
inc
or
ror
dec
aaa
mov
xchg
call
jb
sbb
xchg
lahf
push
mov
icebp
mov
mov
sbb
mov
imul
aam
sub
hlt
(bad)
xchg
sub
push
inc
adc
clc
cmp
mov
push
jmp
cdq
push
pop
inc
stc
add
sbb
popa
push
arpl
xchg
scas
loop
inc
dec
mov
aas
ficomp
sbb
lea
sbb
mov
out
enter
imul
mov
ret
and
push
fadd
pop
xchg
push
out
adc
mov
mov
cmc
stc
push
test
jne
mov
jae
shr
xor
sub
mov
push
jmp
push
mov
sbb
add
mov
and
cmp
inc
clc
jne
xor
add
dec
adc
lods
mov
xor
pop
push
mov
mov
mov
pop
movs
pop
dec
and
dec
push
pop
das
lods
stc
mov
rcl
jp
lock
sub
popa
fsub
stos
xchg
ss
iret
jns
cs
ins
stc
leave
lahf
fimul
xlat
add
fwait
xchg
pop
xchg
xchg
pop
jge
push
mov
fld
jmp
dec
sbb
pop
xchg
inc
push
mov
das
or
pop
jmp
lds
cmp
dec
mov
jo
mov
sbb
lods
cmps
push
xchg
adc
les
inc
mov
push
rol
ss
push
retf
cmp
test
sub
out
ret
or
dec
outs
xchg
rcl
popa
mov
jmp
jo
lock
fcomp
out
xchg
sbb
js
out
and
pop
dec
adc
or
pop
dec
jmp
bound
add
sub
(bad)
inc
stos
mov
mov
cdq
ds
xor
and
or
adc
inc
es
inc
(bad)
(bad)
cmps
xchg
mov
movs
cmc
rol
(bad)
(bad)
sub
iret
imul
std
lods
jg
test
adc
push
sar
push
fwait
inc
cmp
xor
loope
ins
cmp
push
mov
jnp
xchg
dec
pop
inc
pop
pushf
cmc
add
fmul
push
arpl
pop
jo
mov
dec
mov
mov
dec
or
mov
pop
ficomp
xchg
mov
or
mov
jl
int
retf
or
xor
xchg
loop
mov
pop
or
push
in
or
je
scas
xor
push
gs
call
mov
cmps
jl
fmul
outs
jmp
rol
les
dec
inc
jnp
xchg
popf
retf
out
inc
enter
aaa
push
xchg
jmp
cmps
sbb
jno
repz
cmp
cwde
mov
add
xor
imul
in
mov
fist
ret
adc
imul
clc
mov
aaa
mov
cmps
rcl
retf
call
in
xchg
jle
out
scas
fdivr
jo
xor
push
mov
ret
jno
push
out
jle
popa
push
aam
retf
(bad)
lods
xor
xchg
out
jo
mov
mov
out
xor
shl
std
daa
mov
imul
shld
sbb
into
mov
mov
and
hlt
dec
out
scas
shl
in
mov
mov
xor
es
adc
xchg
mov
call
xor
xor
sbb
(bad)
stc
jecxz
and
or
cmp
scas
adc
rcr
addr16
cld
into
lock
test
pop
dec
pusha
arpl
jmp
repnz
out
xchg
mov
rcr
fidiv
push
xor
sbb
popf
or
gs
fisub
or
cmp
sub
adc
iret
test
adc
jg
dec
fwait
xchg
fmul
sbb
xchg
or
out
mov
shl
fdiv
or
pop
mov
cmps
jne
mov
adc
mov
aad
dec
lds
sub
pop
retf
adc
dec
clc
push
test
div
movs
mov
(bad)
shl
mov
pop
stc
pop
lds
dec
jb
loop
sub
fcomp
mov
pop
pop
xor
fsub
leave
mov
outs
je
inc
inc
pop
ja
add
jns
push
sbb
sahf
jge
(bad)
nop
lods
hlt
ins
sub
inc
icebp
shl
push
dec
std
clc
xchg
cwde
jle
jge
pusha
cli
dec
dec
mov
and
cmp
into
div
(bad)
xchg
cld
ins
icebp
sub
jg
call
cmc
int
movs
jbe
aaa
or
add
mov
jge
add
loope
xchg
bound
ret
inc
movs
jmp
fist
test
ret
dec
mov
mov
push
bound
xchg
mov
mov
inc
inc
mov
es
fadd
push
in
mov
hlt
mov
mov
cmp
adc
cmp
and
jp
out
loopne
fcomp
iret
xlat
inc
fwait
cdq
stc
xlat
ins
inc
fiadd
sub
sub
cwde
mov
sub
sub
or
test
and
adc
lds
inc
pop
push
inc
gs
adc
inc
adc
mov
repnz
cmps
sahf
stos
mov
inc
xchg
jle
icebp
iret
fwait
loopne
dec
addr16
data16
adc
icebp
mov
enter
xor
(bad)
movs
inc
mov
iret
mov
fnsave
inc
ja
popa
ror
sbb
xchg
sbb
adc
sbb
cwde
inc
pushf
into
fsubr
stc
sti
fcomi
jnp
icebp
nop
pop
push
mov
int3
push
add
push
inc
jae
mov
and
adc
xor
lahf
cmps
(bad)
xchg
idiv
fxch
push
mov
ss
pop
sbb
sbb
mov
fbld
push
and
add
(bad)
dec
sbb
push
jno
loopne
jl
adc
out
(bad)
call
hlt
(bad)
jmp
push
inc
in
sbb
add
mov
stc
int
inc
sbb
sub
inc
pop
cmp
xchg
jp
pop
mov
inc
push
shl
cmp
lds
int3
jg
icebp
xor
sti
add
cmps
mov
pop
in
out
fsub
mov
and
adc
push
xchg
call
pop
sbb
lea
call
hlt
outs
pop
popa
mov
or
add
or
cvttps2pi
mov
enter
aas
(bad)
adc
inc
xchg
retf
xor
mov
xor
mov
fdivp
out
or
adc
jg
imul
and
fisttp
gs
and
jnp
mov
out
lea
push
cmc
sub
pop
pop
cmp
fsubr
push
retf
jo
call
(bad)
std
repz
push
pop
inc
jg
adc
jge
div
jmp
lds
lea
das
and
add
cwde
lods
cmps
jecxz
jle
jg
dec
jmp
je
jp
iret
fidivr
imul
std
hlt
leave
fisub
lods
fadd
loope
adc
dec
cmps
out
jecxz
sbb
pop
dec
lea
(bad)
outs
inc
nop
pop
add
push
mov
sbb
aaa
outs
imul
repz
cmp
cmps
stos
mov
movs
adc
adc
gs
jae
ja
jo
mov
xchg
bound
movs
repnz
scas
dec
dec
stc
and
sub
pop
xchg
pop
push
aad
cmp
xor
sbb
sbb
sahf
inc
inc
inc
sahf
punpckhwd
mov
inc
retf
push
cld
xchg
add
bound
mov
adc
sbb
xor
mov
and
pusha
retf
inc
enter
inc
inc
lds
lahf
stos
xor
adc
sub
xchg
mov
and
mov
cmp
dec
shl
push
inc
stos
jl
hlt
ret
inc
les
loopne
into
jno
shr
out
das
ds
aam
jne
sbb
lea
sub
cmc
in
in
inc
lods
adc
imul
aas
inc
pop
popf
dec
pushf
jns
mov
jecxz
pop
or
cs
mov
shr
int
xchg
xor
and
aas
fs
mov
fist
sub
cmc
dec
nop
cwde
jp
out
imul
(bad)
fmul
and
int
aaa
addr16
push
(bad)
in
leave
test
add
jge
(bad)
stos
popf
cmp
inc
xchg
jo
jmp
dec
xchg
push
mov
js
mov
test
xor
mov
(bad)
stos
int3
add
mov
dec
dec
jo
imul
sub
popa
xchg
or
scas
icebp
pop
mov
daa
neg
sub
sub
adc
or
shl
or
ret
mov
dec
mov
mov
pop
bound
jnp
retf
(bad)
repnz
call
out
push
push
jbe
lds
ss
lea
repnz
jne
cld
push
das
mov
adc
test
push
add
daa
and
sahf
lahf
(bad)
xchg
sbb
dec
xor
add
stc
fst
addr16
jo
xor
sub
mov
loopne
and
mov
jns
scas
lahf
jb
jno
hlt
mov
loopne
and
cwde
jbe
jmp
iret
out
push
ficom
into
test
dec
cmp
adc
or
es
neg
mov
and
dec
cmps
inc
mov
jne
in
call
mov
cmp
ret
add
adc
retf
xor
popa
pop
(bad)
fiadd
test
fst
retf
std
loopne
rcr
rol
pop
xchg
call
test
fldlg2
fstp
scas
pop
imul
imul
mov
push
test
movs
into
fstp
(bad)
cld
xchg
inc
sub
sbb
jb
push
xchg
outs
xor
aas
pop
ds
fld
ret
popf
sbb
fcomi
rol
fs
mov
fwait
(bad)
push
ja
jge
or
or
out
jb
push
jns
outs
adc
pop
pop
nop
pop
xor
xor
xor
(bad)
fcmovnbe
and
in
pop
int3
cmp
xchg
jo
pop
inc
mov
das
call
mov
and
and
jmp
call
mov
fwait
popf
mov
ss
icebp
push
xor
mov
or
xor
inc
data16
fmul
cmp
in
jmp
push
mov
mov
js
imul
pop
mov
mov
in
sbb
pop
add
jl
dec
push
(bad)
and
push
dec
jmp
push
lahf
cmps
in
or
jbe
dec
aas
mov
and
out
js
push
xchg
shl
add
retf
fwait
mov
xchg
dec
dec
jmp
mov
cdq
repnz
call
pop
pop
cli
inc
jg
push
arpl
push
ja
ins
jge
mov
jmp
push
cmp
sub
or
je
mov
xchg
xchg
fimul
pushf
loope
outs
cmp
dec
push
mov
pop
push
inc
push
cmp
sbb
jecxz
pushf
out
mov
push
xor
js
movs
xchg
jg
jg
loop
mov
add
cmps
xchg
cmp
dec
adc
(bad)
and
sti
std
sbb
xchg
out
jg
cmp
adc
ror
xchg
mov
mov
sbb
jg
scas
out
pop
fcmovbe
push
xchg
push
test
dec
stos
mov
mov
push
jb
gs
pop
ins
mov
in
push
arpl
and
jo
movs
inc
add
adc
mul
mov
add
dec
push
je
scas
dec
cs
test
or
push
(bad)
fld
test
fdiv
mov
or
out
movs
int
mov
add
add
mov
outs
sti
mov
cmp
cli
rcr
inc
dec
imul
xchg
sub
push
push
test
cwde
mov
sub
out
dec
icebp
mov
jnp
push
push
dec
bswap
and
dec
push
mov
mov
xchg
cs
xchg
ret
icebp
pop
xchg
daa
xlat
inc
cmp
les
gs
test
aam
jmp
mov
adc
cmps
dec
loop
jb
and
sub
push
sbb
xchg
push
fs
or
push
jbe
and
(bad)
test
push
(bad)
sub
dec
iret
sbb
add
cmp
rcr
and
inc
xor
jg
(bad)
mov
inc
sbb
(bad)
ins
rcl
jb
ins
dec
inc
hlt
sub
jl
jmp
repnz
lea
dec
fidivr
fnsave
leave
ins
adc
rol
fwait
js
aad
mov
xchg
das
(bad)
sar
rol
add
adc
hlt
nop
les
into
adc
sbb
std
pop
cli
cs
sub
test
shr
sbb
iret
leave
lods
iret
in
clc
or
addr16
test
mov
push
arpl
ds
push
je
ins
test
int3
popa
(bad)
mov
sub
dec
cwde
fs
jmp
xor
xor
fsub
outs
test
pop
jmp
imul
add
(bad)
and
dec
push
std
out
je
pop
mov
movs
mov
hlt
cmc
aad
out
pop
pop
mov
cmp
add
sbb
call
retf
mov
dec
out
ret
xor
js
sbb
cmps
pop
pop
adc
fwait
popf
retf
sbb
pop
lock
or
jmp
fdiv
sbb
pop
imul
cmp
inc
out
dec
add
mov
xor
or
sbb
dec
cmp
outs
mov
enter
sahf
dec
test
fidiv
pop
(bad)
jmp
xchg
mov
addr16
call
and
mov
shl
cmp
nop
ret
cwde
xlat
ret
(bad)
xor
ror
into
push
and
repnz
loopne
cmp
lock
inc
stc
aam
je
or
dec
aad
mov
repnz
out
ds
inc
pop
jg
mov
inc
ret
add
fdiv
fwait
mov
sar
movs
xchg
sbb
cmps
mov
jae
dec
ror
jne
scas
cmp
ret
stc
jmp
fdiv
lods
mov
scas
xchg
mov
in
(bad)
cmc
inc
xor
add
sbb
pusha
sbb
mov
adc
sbb
neg
push
mov
and
sbb
imul
aad
jmp
ja
sbb
jle
movs
cmp
fiadd
sub
cmp
sbb
sar
in
sbb
jp
ins
xchg
xchg
in
shl
mov
push
or
les
sbb
std
and
stc
or
cmp
xchg
sbb
sub
lods
pop
cmp
(bad)
imul
fidiv
add
xchg
(bad)
retf
cmc
jo
sti
xlat
ins
neg
std
pop
pusha
push
xlat
shl
dec
mov
cwde
dec
pop
(bad)
cmp
pop
mov
pop
dec
inc
idiv
mov
jmp
out
pop
mov
mov
jmp
push
jns
push
ds
jbe
xor
jne
sbb
shr
jno
scas
pop
pusha
adc
xchg
jbe
inc
mov
mov
cmc
dec
in
out
pop
adc
stos
cmp
jmp
pop
test
pop
mov
jle
ret
cmp
(bad)
lods
jne
mov
retf
pop
and
push
in
jle
cmps
mov
gs
imul
in
pop
retf
xchg
mov
and
loope
cmps
adc
popa
es
imul
mov
fwait
and
jmp
sub
and
dec
mov
ss
mov
and
cmc
sub
sub
mov
mov
not
rcl
repz
les
call
retf
test
add
(bad)
adc
mov
mov
call
bound
and
and
or
jns
inc
mov
jmp
adc
nop
pop
xchg
mov
mov
add
mov
adc
mov
stos
test
ffree
outs
jmp
in
or
pop
shr
pushf
sbb
mov
cmp
dec
mov
mov
popf
mov
ss
mov
and
movs
call
bound
add
dec
sti
pushf
and
jo
mov
cmp
test
daa
jbe
outs
out
and
cmp
dec
push
xchg
cmp
sar
jmp
sub
mov
and
mov
out
aad
dec
jg
fiadd
scas
in
mov
and
or
dec
out
fist
or
ret
int3
outs
sub
je
out
jb
xchg
loop
pop
jnp
pop
add
dec
lock
xor
out
jbe
xor
dec
repz
fisttp
push
out
push
sahf
or
add
push
out
jp
int3
fbld
mov
push
sub
mov
das
stos
fcom
dec
inc
pop
aaa
out
inc
cli
cmp
pusha
or
mov
jmp
and
mov
mov
test
sub
fnstsw
icebp
jo
add
sbb
in
mov
bound
push
scas
lea
les
enter
cdq
cmps
popa
mov
inc
je
pop
mov
sahf
arpl
or
sbb
xchg
punpckhbw
enter
cli
adc
lock
lds
jne
jno
adc
mov
in
popa
lods
cmps
push
cmp
xchg
sbb
xlat
pop
and
mov
jle
push
jp
and
rcr
and
push
scas
pop
xchg
mov
scas
add
dec
sbb
mov
loope
dec
mov
xchg
xchg
or
std
fcomp
mov
iret
adc
jecxz
cmp
icebp
jo
jmp
jnp
jecxz
imul
stos
(bad)
enter
sbb
scas
jnp
cld
push
js
int3
shl
retf
xrelease
and
adc
gs
shr
sbb
mov
xchg
pop
in
dec
push
pop
(bad)
and
(bad)
xchg
mov
jbe
inc
push
push
(bad)
sub
jmp
jns
adc
mov
je
add
(bad)
(bad)
ds
dec
push
mov
dec
cmps
outs
sbb
(bad)
jecxz
(bad)
jle
push
dec
dec
pop
rcr
adc
xchg
shr
inc
lahf
cmp
pop
jg
mov
(bad)
in
or
iret
cmp
cmp
sbb
(bad)
jb
pop
repnz
enter
daa
aam
outs
xchg
mov
jmp
loopne
xchg
sub
popa
scas
pop
imul
pop
mov
leave
cmp
inc
dec
xor
pop
jns
pushf
into
adc
fisubr
sub
(bad)
imul
jmp
sub
jl
(bad)
jmp
bound
inc
dec
jmp
adc
mov
mov
imul
ret
xlat
mov
and
jns
push
and
mov
iret
or
inc
pop
fst
add
and
outs
sub
movs
jbe
inc
je
jecxz
nop
and
sub
fistp
mov
retf
mov
inc
sbb
inc
pop
cmp
jecxz
add
mov
xlat
xchg
shr
fist
xor
adc
cs
std
test
cmp
jp
pop
loopne
mov
or
fwait
adc
scas
sahf
test
shr
cdq
out
rcl
inc
dec
mov
js
ins
cs
(bad)
cli
inc
ss
cmps
jb
adc
pushf
cmp
aad
aad
outs
inc
push
neg
sbb
push
aaa
ret
add
sbb
xor
pop
out
adc
sbb
mov
out
lea
cmp
(bad)
not
cmp
arpl
(bad)
pop
pushf
dec
sahf
in
mov
pop
loope
in
push
loopne
cmp
dec
xor
mov
(bad)
fdiv
jmp
sbb
mov
mov
stos
xor
aaa
retf
add
dec
mov
xchg
nop
lods
xchg
mov
xor
cmp
lods
mov
mov
fcom
push
push
lods
adc
xlat
cdq
(bad)
pop
dec
bound
out
test
pop
xor
sub
les
mov
and
pop
adc
daa
mov
sub
pop
movs
push
sar
dec
ds
or
or
clc
movs
(bad)
(bad)
xor
and
cmp
jmp
lods
sti
int
sbb
add
xor
loop
es
jp
fidivr
cmps
sub
nop
xor
and
sub
cwde
xchg
pop
fnstsw
xor
xchg
loopne
(bad)
hlt
fidiv
in
xchg
mov
mov
cmp
jmp
fiadd
nop
sar
stc
arpl
jmp
stc
stc
push
cmps
adc
sahf
pop
out
mov
sbb
mov
cmp
and
xor
call
xor
out
jb
jg
cmp
push
and
inc
aaa
or
inc
push
sbb
outs
popf
test
xor
xlat
xor
ss
fsin
pop
push
mov
ret
pop
dec
test
movs
jmp
adc
scas
inc
adc
loopne
test
push
inc
inc
mov
sub
movs
inc
mov
mul
not
lods
xchg
fmulp
dec
sbb
add
push
sbb
std
aam
fcmovnb
mov
or
les
mov
call
add
test
mov
and
mov
repnz
mov
mov
ins
sub
and
adc
rol
sbb
sbb
xchg
jns
imul
imul
scas
inc
push
dec
in
loop
jmp
mov
xchg
test
and
cs
sub
inc
mov
aas
add
shl
or
mov
xchg
mov
push
pop
(bad)
aam
mov
xchg
xlat
jbe
retf
ss
icebp
cmp
mov
inc
fisubr
dec
sub
fnstenv
push
sub
jmp
sub
push
stos
ficom
xchg
js
xor
test
pop
jge
das
in
les
or
test
push
lods
out
xor
pop
sub
sahf
push
mov
mov
jmp
add
sets
mov
hlt
clc
call
push
repz
gs
lock
add
icebp
aas
push
sahf
retf
sbb
lods
call
call
cwde
cmp
cld
cmp
mov
movs
and
jp
mov
fst
push
push
test
arpl
cwde
cmp
lahf
mov
mov
addr16
sbb
(bad)
(bad)
push
fdivp
jecxz
or
push
mov
dec
push
rcl
cli
ror
fucomip
add
dec
adc
ja
cmp
into
xor
push
cmp
out
cmps
add
loope
jge
in
and
lahf
imul
aaa
movs
xor
mul
out
(bad)
jno
inc
fisubr
adc
inc
sbb
rcl
mov
and
sub
fadd
mov
xchg
mov
sbb
ret
sub
push
xor
or
aaa
int3
add
neg
add
adc
inc
outs
mov
and
mov
sub
dec
mov
pop
in
jmp
nop
call
loop
mul
ret
mov
add
sti
pop
dec
pop
(bad)
call
ins
inc
sbb
outs
or
adc
lods
sub
shr
test
popa
push
das
jmp
retf
mov
fistp
sbb
ins
adc
sti
mov
nop
inc
(bad)
clc
push
mov
pop
in
js
add
xchg
aas
cmp
mov
pop
adc
dec
inc
sub
shl
hlt
jmp
fmul
mov
arpl
adc
jl
stc
pop
xchg
jb
movs
mov
adc
mov
shl
pop
je
aam
or
pop
cld
add
test
xor
test
mov
push
or
ror
and
retf
jmp
add
dec
sahf
jnp
xchg
jp
xchg
cmp
sub
fs
popf
mov
pop
pop
movs
shl
out
push
ja
fild
sbb
or
inc
(bad)
jg
cmp
xchg
stos
pop
movs
push
out
cmps
jl
out
add
(bad)
mov
test
mov
xchg
xlat
nop
retf
jle
popf
int3
or
fldenv
call
loopne
mov
xor
push
cmps
outs
repnz
sbb
jae
inc
cwde
icebp
retf
xor
mov
xchg
mov
jge
xchg
ds
mov
icebp
mov
jg
ja
sub
push
mov
sub
push
mov
xchg
imul
pop
push
test
jnp
xchg
jmp
jno
add
mov
mov
loop
jge
test
pop
inc
or
call
sub
push
pop
or
aaa
fsub
mov
jmp
jle
(bad)
iret
xor
push
ficomp
sar
mov
test
mov
pmullw
sbb
iret
dec
cmp
pop
aaa
out
test
mov
mov
aad
neg
adc
pop
pusha
scas
and
imul
and
lods
mov
ja
ss
mov
pop
inc
or
out
adc
xlat
sti
xchg
mov
ins
pop
(bad)
adc
xor
rcl
psubusb
mov
mov
cli
jbe
js
inc
and
sbb
mov
pop
inc
shr
out
xlat
rcl
lahf
aam
push
ss
or
mov
push
aad
or
jnp
xchg
aaa
or
push
sbb
outs
cmp
stos
dec
sub
inc
data16
fcomp
pop
cmp
jo
xlat
cs
sub
(bad)
push
and
(bad)
sahf
fsubr
or
sbb
mov
pushf
cmps
sub
pop
aam
mov
ficom
bound
pushf
inc
imul
or
push
stc
fisttp
pop
mov
or
in
pop
ret
loop
mov
arpl
push
sub
push
mov
pop
gs
add
cmp
sbb
ficom
cdq
lds
imul
jmp
mov
lea
pop
test
lds
xor
or
ss
xchg
sbb
jmp
ret
and
or
push
imul
mov
stos
sub
adc
in
mov
or
jne
lods
sub
fsubp
jl
cvtps2pd
sub
adc
push
cmp
add
je
adc
mov
scas
add
sahf
mov
dec
fnstenv
add
push
xlat
push
ficom
fisub
gs
pop
(bad)
stos
addr16
xor
(bad)
jnp
add
dec
es
dec
lods
jl
pop
inc
pop
cmp
adc
aaa
dec
(bad)
sti
mov
cmps
jmp
pushf
fild
ja
mov
cmp
rcr
loopne
adc
shl
pusha
and
push
shr
inc
push
loope
icebp
not
pop
ins
call
cmp
sbb
mov
inc
(bad)
popf
xchg
push
mov
fmul
push
mov
outs
xor
aaa
fcom
out
je
stos
ret
cs
call
shl
stc
and
ror
ss
ret
or
shl
push
loope
stc
xchg
pop
shr
out
sub
repnz
(bad)
sub
aas
sub
ins
sub
imul
mov
jnp
inc
loope
shl
loopne
enter
test
cwde
fs
mov
cli
mov
(bad)
and
call
adc
pop
arpl
lea
outs
mov
jb
or
add
aaa
push
xor
sti
in
jmp
jae
into
fisubr
adc
adc
retf
popa
ins
stos
mov
rol
cmps
inc
fwait
push
icebp
jg
jae
add
jno
pop
sbb
cs
add
add
mov
pop
xor
sahf
cli
arpl
xlat
mov
ror
test
out
sbb
scas
pop
or
or
add
arpl
sti
and
push
xchg
or
xchg
xchg
loop
test
xor
jl
cdq
aas
cmp
jbe
lods
test
or
jne
sbb
pop
cdq
jnp
cmp
pop
or
xor
imul
add
icebp
inc
jmp
push
out
enter
fimul
fidiv
mov
fdivrp
cmps
xchg
mov
cld
push
outs
jno
loop
inc
xor
mov
cmp
pushf
or
cmp
je
jo
lock
inc
add
sbb
fldcw
push
inc
xchg
std
test
loop
pop
sub
icebp
sub
push
fcmovne
push
call
sbb
xchg
adc
jmp
jno
rol
scas
push
inc
jmp
xchg
cmp
dec
test
dec
stos
jl
popf
rol
mov
lods
or
pop
es
in
or
fstp
popa
xlat
fistp
movs
dec
ror
ret
add
shr
popa
adc
xchg
adc
or
add
outs
inc
icebp
cmp
int3
mov
xchg
in
inc
in
push
add
pusha
rol
pop
call
fldcw
outs
cmp
out
pop
xor
jno
loopne
(bad)
stos
movs
pop
pop
sub
cmp
mov
lods
push
mov
jg
or
ds
pop
sub
(bad)
es
cmp
cmp
cdq
fstp
sub
fcomp
xor
jl
adc
nop
retf
push
mov
add
ja
xchg
push
xor
mov
inc
dec
adc
pop
xor
sar
(bad)
ja
test
mov
or
call
data16
aad
ret
dec
mov
push
sub
rcl
xor
outs
dec
fstp
int
mov
jp
clc
inc
stc
in
xor
icebp
jg
push
xlat
cmp
hlt
dec
jb
sbb
int3
xlat
lock
mov
fistp
scas
sar
xor
push
int3
cdq
and
icebp
or
sbb
outs
jo
and
cmp
jns
cld
dec
aaa
push
retf
lods
add
mov
xlat
pop
xlat
(bad)
or
sbb
push
jecxz
jle
lahf
outs
and
cs
nop
and
jns
mov
(bad)
mov
adc
inc
and
xchg
add
aaa
xchg
xchg
or
dec
lods
or
(bad)
test
(bad)
xchg
ins
pop
sub
(bad)
cmp
pop
(bad)
mov
mov
pop
test
and
mov
jo
pop
jg
cld
ds
adc
jmp
(bad)
clc
ficomp
mov
mov
push
sbb
jo
out
pop
adc
loope
mov
jbe
add
jne
fcom
sahf
cmps
mov
enterw
sub
rcr
xchg
imul
lods
mov
js
xchg
and
mov
jno
or
pop
add
mov
push
xchg
lsl
(bad)
leave
add
sti
bound
lea
jno
fidiv
adc
mov
movs
or
mov
ja
jo
xor
mov
push
or
stc
in
jg
out
ins
adc
mov
xchg
mov
retf
mov
inc
test
mov
test
(bad)
fucom
lds
xchg
sbb
(bad)
int3
(bad)
fstp
sub
pop
inc
sub
push
pop
dec
shl
dec
sub
pusha
std
ret
leave
pop
xchg
and
xchg
xchg
mov
lahf
aad
sbb
inc
mov
sbb
ja
and
pop
in
fisttp
mov
mov
(bad)
retf
cmp
outs
clc
bound
sbb
pop
fcmovnb
or
xchg
je
inc
pop
lahf
cmps
ja
in
push
push
rol
mov
fldenv
stos
(bad)
mov
shl
movs
jecxz
aam
aam
les
cli
je
shr
arpl
fucomi
mov
mov
jp
xchg
dec
mov
cmp
inc
adc
(bad)
cmps
stos
push
scas
repz
jle
ror
mov
js
cmp
add
ins
cli
inc
call
lods
inc
aam
fiadd
rcl
ss
ror
jne
loope
xchg
idiv
add
gs
and
push
push
icebp
ss
mov
into
add
and
ficomp
sbb
pop
es
and
mov
test
loopne
fiadd
jmp
xchg
or
rcl
mov
mov
mov
imul
sub
ret
leave
mov
push
outs
jmp
sub
dec
mov
addr16
gs
sub
and
int
and
jae
xor
pop
aaa
fbstp
push
scas
sti
sbb
imul
pop
and
pop
dec
enter
mov
or
cmp
xchg
mov
pop
sbb
(bad)
mov
sbb
les
movs
loope
in
or
retf
(bad)
jp
sbb
sub
sub
fiadd
outs
pop
xchg
out
stc
mov
add
pop
hlt
jmp
lods
sub
cli
pop
add
int
xor
popf
inc
das
rcr
sti
and
out
add
ja
xchg
and
sbb
les
bound
std
(bad)
int
mov
inc
adc
inc
jne
nop
ret
mov
jns
retf
shr
mov
pop
jo
mov
and
pusha
add
fstp
ins
dec
xchg
add
ins
or
xchg
pop
sub
inc
jg
and
xchg
pop
lods
shl
lahf
xchg
mov
retf
popf
dec
hlt
push
je
push
xchg
jo
ret
ins
loope
pop
mov
inc
mov
inc
xor
mov
xchg
popf
xchg
adc
xchg
push
cmp
or
in
xor
jae
or
ja
and
cmp
bound
aas
ja
fwait
ins
and
stos
loope
popa
sub
xor
mov
mov
cs
pop
and
add
jg
lock
mov
sub
and
out
out
inc
mov
xchg
idiv
mov
repnz
mov
mov
sub
jle
mov
out
jmp
outs
mov
bound
mul
(bad)
and
push
push
(bad)
retf
sub
out
mov
jl
stos
movs
inc
fiadd
cli
and
aad
cmp
mov
mov
(bad)
mov
aam
jmp
cmps
push
push
sub
jmp
ins
cli
sbb
inc
jae
retf
inc
sub
mov
sub
cvtps2pd
fs
inc
adc
cmps
jmp
ss
(bad)
repz
mov
(bad)
fsubr
mov
xchg
mov
mov
(bad)
jmp
mov
inc
pop
fwait
xor
stos
dec
and
sub
xrelease
mov
scas
jge
aam
mov
adc
mov
(bad)
popa
int3
xlat
or
ret
dec
arpl
or
jle
shl
aas
inc
push
jbe
sub
cmp
retf
and
mov
and
adc
fmulp
mov
call
repnz
int
push
movs
jmp
push
loop
stos
neg
aas
adc
iret
push
sub
mov
inc
(bad)
fstp
cs
fwait
sahf
sub
call
fcmovnb
call
and
inc
push
mov
pop
push
and
and
xchg
or
scas
inc
aad
ins
loope
xor
cld
mov
sbb
cdq
gs
call
xchg
(bad)
mov
or
mov
cmp
cld
imul
fst
mov
adc
call
jp
pop
pop
mov
and
jmp
out
adc
fisub
mov
jno
in
jmp
mov
fstp
xchg
mov
push
xchg
xchg
and
push
ja
daa
and
aas
arpl
mov
inc
xchg
fst
or
imul
jno
das
dec
jle
mov
outs
daa
xchg
es
fistp
sub
dec
or
out
out
fsub
iret
xchg
jne
jne
fidiv
inc
mov
les
or
(bad)
cmps
jbe
pavgw
ja
add
cmp
mov
mov
push
mov
ror
les
lahf
xchg
and
ins
imul
xor
add
in
jo
xchg
call
out
xor
mov
push
fnsave
and
adc
out
sbb
outs
add
jo
test
adc
adc
gs
sbb
(bad)
out
inc
xchg
pop
jae
mov
enter
out
lock
or
add
(bad)
test
fld
(bad)
or
xor
ja
xchg
xchg
or
sbb
push
xor
cmp
std
inc
jmp
lock
add
or
push
test
rcl
out
pop
add
fsubp
mov
add
test
loop
arpl
int3
or
pop
and
imul
es
enter
or
fucomip
mov
mov
stos
inc
fistp
ins
xor
ins
mov
mov
outs
cmp
lods
(bad)
cld
sbb
add
sbb
ja
test
mov
(bad)
test
mov
adc
leave
loope
scas
les
cmp
cmp
lds
and
aad
jp
idiv
add
stos
aas
cmps
imul
sub
ds
mov
add
dec
cmp
fcmovnu
cmp
mov
push
das
stos
push
es
shr
jecxz
xor
ror
adc
cmp
dec
mov
adc
jmp
jns
aam
mov
mov
out
fdiv
movs
ficomp
push
xor
jnp
out
mov
jg
xchg
adc
ja
mov
push
mov
sub
icebp
dec
mov
(bad)
cld
jb
sbb
sbb
mov
xor
pop
push
jg
jmp
cmp
and
call
xor
sbb
les
and
in
or
sub
fidivr
nop
sahf
data16
iret
cld
mov
add
sbb
nop
adc
aas
xor
add
xor
mov
(bad)
add
inc
sub
xor
fsub
cmps
pop
jae
xor
xchg
hlt
and
fisttp
aas
loope
or
in
aam
jne
fcmovnbe
sbb
push
xchg
xchg
add
sbb
or
pusha
scas
mov
cdq
(bad)
sub
and
xlat
fdivr
lock
dec
sbb
mov
ja
ret
in
daa
add
mov
arpl
arpl
inc
inc
call
or
repz
cmp
fcomp
test
lahf
(bad)
sbb
hlt
xor
mov
test
movs
xchg
hlt
cwde
into
cs
sub
add
sub
sub
aas
jecxz
iret
push
xchg
ja
xor
sub
fs
stos
aas
cmps
adc
xor
adc
popf
sub
cmc
mov
popf
cmps
out
add
rcl
sub
sub
xchg
xor
inc
rcr
sub
add
push
das
and
mov
sub
ja
stos
jge
mov
and
fwait
ins
sbb
add
stc
add
xor
outs
mov
push
dec
dec
aas
test
and
shl
lahf
adc
sbb
call
int3
mov
in
xor
mov
hlt
scas
pop
ror
retf
adc
fmul
inc
mov
stc
and
(bad)
fwait
clc
stos
dec
or
add
pop
cmps
das
push
cli
and
and
mov
in
repnz
dec
sub
mov
ds
test
inc
arpl
mov
adc
(bad)
adc
or
push
scas
inc
mov
mov
push
(bad)
inc
sar
call
outs
ins
sub
fisubr
add
cmp
sbb
and
mov
aam
cmp
cs
int
stos
enter
mov
xlat
scas
retf
mov
pop
cmp
loope
adc
ror
push
fadd
arpl
dec
test
frstor
dec
scas
push
pop
sub
pop
xor
adc
sti
add
ret
mov
(bad)
dec
out
sub
pop
mov
pop
sub
adc
pop
sub
iret
xor
cdq
cli
pop
loop
ficomp
cmp
add
(bad)
lock
pop
sub
shl
fwait
sub
aad
in
test
or
push
lahf
push
adc
je
add
jg
movs
ret
(bad)
cli
or
mov
mov
sahf
inc
dec
xor
mov
mov
data16
(bad)
jno
(bad)
ins
enter
mov
cld
push
pop
or
retf
fucomi
xor
xchg
fidiv
aad
jl
mov
mov
dec
movs
xchg
jo
and
mov
add
ins
jge
outs
shr
push
(bad)
pop
and
ins
inc
sbb
rcl
sub
xchg
aaa
ss
or
(bad)
pusha
xchg
ret
fistp
daa
mov
movs
arpl
push
lds
xor
xor
test
pop
mov
fnstcw
xlat
sub
aas
loope
shl
xchg
pop
ret
jl
pop
mov
mov
data16
cwde
dec
scas
jecxz
loope
dec
dec
push
jmp
sub
adc
aaa
std
in
sbb
pop
repnz
aas
xchg
cli
call
aas
adc
dec
retf
arpl
sub
lods
sub
out
in
repnz
sbb
mov
jae
rol
je
xor
call
popa
ret
sbb
mov
cmc
or
mov
jbe
shl
ins
nop
dec
sub
test
cwde
sub
push
frstor
fs
into
mov
in
shr
lahf
adc
add
repnz
ss
jg
xor
out
inc
scas
neg
mov
outs
cdq
sub
in
or
adc
sub
out
call
mov
xchg
or
sti
sbb
cmps
and
xor
in
retf
into
fmul
sub
popf
aas
or
cdq
lock
and
mov
rcl
mov
push
out
hlt
push
add
push
pop
es
jge
inc
xor
fdiv
or
ins
retf
adc
cmp
xchg
cld
mov
dec
pushf
mov
hlt
sti
add
das
lods
out
pushf
shl
ins
lahf
cmp
sar
xor
and
adc
adc
js
adc
(bad)
daa
lock
cmp
in
or
popf
call
xchg
(bad)
cs
lahf
fld
pop
scas
jl
cmp
sbb
xlat
pop
cmps
push
jno
cwde
out
rcr
dec
cmp
jbe
repnz
out
lods
sub
test
mul
into
jp
push
fist
push
xchg
cmp
test
sbb
inc
mov
mov
lods
mov
in
xchg
push
xlat
psrlq
or
enter
cmp
hlt
push
shr
sbb
mov
xor
xchg
mov
xchg
cmps
pop
add
mov
loope
adc
xchg
add
iret
jne
jbe
ja
sub
ins
sub
repnz
(bad)
sbb
jl
xchg
sub
pop
xchg
mov
push
xchg
jo
shl
ds
mov
add
mov
pop
mov
hlt
inc
popa
push
jmp
add
fadd
gs
retf
gs
cmp
aad
test
inc
movs
js
xor
pop
add
fs
dec
movs
xchg
cwde
enter
inc
cmp
jne
arpl
xchg
inc
out
jg
mov
add
push
push
std
ret
sub
movhps
gs
jecxz
int3
mov
retf
popf
test
jmp
xchg
jmp
(bad)
fisttp
outs
lock
xchg
sar
adc
icebp
test
and
gs
psubq
xor
lock
jmp
sub
jno
mov
push
mov
jge
inc
in
xor
xor
mov
mov
call
in
push
sub
sub
add
dec
inc
fstp
mov
push
pusha
or
arpl
call
dec
cmc
mov
stc
mov
jl
mov
cwde
mov
aaa
inc
call
call
xchg
(bad)
add
xor
outs
sahf
loope
sub
scas
and
sub
(bad)
dec
arpl
fild
out
and
rcl
not
aad
in
into
dec
xchg
adc
cmps
push
ss
inc
mov
mov
mov
mov
mov
out
into
inc
lock
in
mov
aam
jne
mov
test
xchg
inc
in
mov
neg
test
pop
inc
daa
fisttp
loopne
xor
call
bound
inc
push
test
std
movs
xor
fdiv
push
xor
scas
or
sbb
cmp
push
loop
mul
pusha
adc
dec
xor
les
push
dec
fdivr
in
pop
stos
movs
loope
(bad)
xor
shl
inc
fnstenv
xor
sub
les
push
sbb
addr16
xchg
pushf
shl
(bad)
push
hlt
out
and
in
imul
jo
ret
mov
leave
out
imul
jne
dec
inc
fcom
int3
gs
out
add
gs
pop
repz
pusha
cmps
or
push
ds
pop
rol
mov
das
in
pop
dec
in
jmp
(bad)
jp
dec
loop
loop
mov
popa
test
pop
push
icebp
mov
retf
cmp
loop
sbb
xchg
daa
push
aad
xor
sbb
sbb
mov
jmp
lock
test
icebp
xchg
xchg
aam
aad
outs
shl
sub
sbb
push
pop
scas
jno
and
adc
iret
inc
xchg
mov
ret
movs
pxor
mov
jmp
bound
mov
or
ret
aaa
int3
dec
cmp
leave
sub
jecxz
je
lahf
pushf
repz
leave
cmc
fidivr
fcom
fnstsw
adc
jnp
inc
xlat
and
xor
mov
(bad)
iret
enter
add
aaa
sbb
mulps
push
jo
(bad)
push
push
xorps
fistp
fs
jb
push
hlt
cwde
ror
jbe
mov
cld
mov
fild
stc
data16
adc
loop
or
mov
sub
call
ret
jo
dec
stos
rcr
xlat
mov
and
mov
pop
pushf
jno
push
inc
icebp
test
test
push
aam
xchg
iret
sti
jo
lea
xor
shl
push
call
(bad)
dec
lods
ss
mov
ja
ja
adc
(bad)
mov
shl
call
jmp
push
arpl
mov
pop
jns
fld
adc
ffree
ins
loope
mov
cmps
rcr
push
add
icebp
or
push
shl
(bad)
sahf
adc
xchg
imul
cdq
xchg
inc
push
mov
movs
push
and
sbb
fstp
pop
pop
test
into
mov
mov
inc
outs
hlt
push
sub
lds
fcom
add
cwde
xchg
adc
xchg
aam
ins
jp
pop
adc
sbb
or
sbb
dec
sbb
inc
xchg
mov
cld
mul
add
cmc
out
(bad)
into
rcl
ds
ficomp
call
add
dec
int3
inc
clc
pop
pop
imul
test
jne
mov
cmp
cmp
mov
fisub
pop
gs
pop
sub
sbb
retf
inc
jp
adc
aas
stc
inc
adc
out
(bad)
pushf
jmp
pop
add
lock
enter
xchg
mov
icebp
jo
add
adc
sub
test
mov
data16
out
mov
retf
xor
aad
pusha
xchg
or
mov
sbb
ror
hlt
add
jno
stc
cmps
in
arpl
fsub
jno
retf
shl
xor
pop
in
sub
les
pop
(bad)
outs
mov
mov
movs
movs
fiadd
clc
sbb
jno
inc
add
and
retf
mov
mov
lock
sbb
ret
pop
mov
(bad)
cmps
outs
push
fxch
cmp
cli
dec
retf
aad
mov
mov
or
mov
pop
xor
dec
jg
add
push
push
push
int3
xor
mov
pop
mov
xchg
mov
lahf
lds
push
in
cmp
xchg
add
push
push
enter
sub
ss
icebp
aas
jmp
xchg
push
sub
call
int3
loop
lods
mov
int
mov
imul
stos
es
xchg
call
(bad)
push
test
stc
dec
movs
inc
xchg
inc
cdq
movs
test
test
pop
aam
xor
mov
les
inc
jmp
push
call
mov
cs
sub
inc
adc
or
dec
retf
stos
adc
sub
loope
or
xor
imul
jle
mov
inc
pop
jp
fiadd
jns
pop
dec
pop
dec
pushf
adc
mov
or
mov
jmp
or
sbb
shl
xchg
(bad)
push
pop
pop
ins
add
fs
and
lds
jl
xor
mov
mov
jmp
out
ins
push
mov
xchg
fisubr
(bad)
or
inc
xor
jp
mov
jb
pop
pop
xor
jmp
xchg
ja
fiadd
jle
shl
popf
sub
mov
call
mov
ins
mov
mov
cmp
fucomp
fimul
sub
push
leave
jnp
add
cmps
loopne
sub
wbinvd
mov
jne
cmp
mov
dec
xor
or
aam
push
dec
xchg
pop
cdq
cmp
jle
push
not
and
cld
mov
test
jmp
dec
cld
movaps
bound
shl
add
mov
fldcw
add
xor
xchg
das
inc
and
repnz
xchg
lods
aas
dec
ss
je
push
push
cmp
loop
or
fst
ins
popf
mov
iret
ror
fdivp
cld
repz
push
(bad)
scas
pop
ins
fdivr
lahf
or
mov
mov
shl
inc
push
push
lahf
push
shl
mov
mov
daa
sbb
jb
push
test
ret
adc
mov
jb
or
arpl
sti
fsub
shl
scas
into
dec
cmp
jmp
fbld
jge
cmp
sbb
jo
add
cli
scas
push
cwde
aas
adc
xor
and
inc
xchg
pushf
push
outs
and
adc
mov
xchg
dec
push
push
push
sbb
xchg
mov
(bad)
aaa
mov
mov
fcomp
or
add
and
sti
mov
lds
test
jb
(bad)
rcr
cmps
push
add
movs
out
loopne
pop
add
dec
enter
xor
push
push
js
mov
add
jecxz
add
shr
dec
jne
pushw
mov
jg
mov
popa
inc
popf
in
ret
rcl
mov
stos
xchg
mov
push
mov
fcom
iret
mov
ret
pop
cmp
sti
xchg
mov
jbe
jp
je
sahf
je
inc
(bad)
push
ja
adc
pushf
mov
call
inc
cdq
push
push
add
(bad)
push
daa
(bad)
push
xchg
movs
lds
mov
sbb
das
idiv
pop
in
bound
(bad)
cmp
aaa
movs
adc
(bad)
jmp
stos
cmp
fisttp
mov
mov
mov
mov
daa
int
jg
outs
nop
test
cmp
pushf
cld
jmp
loopne
fisub
xor
mov
(bad)
pusha
lss
inc
lahf
xor
ret
enter
mov
ret
call
mov
dec
aaa
mov
gs
pop
mov
scas
mov
sbb
inc
xor
pusha
mov
mov
adc
inc
sbb
push
mov
and
mov
out
cs
or
xchg
and
push
aaa
jns
sub
sub
fdivr
dec
adc
les
daa
les
pop
aam
or
fdiv
xchg
sbb
test
(bad)
mov
adc
jno
dec
add
inc
sub
jge
scas
pop
mov
push
and
sbb
std
inc
or
or
outs
lods
fist
jb
xor
push
push
movs
add
sub
lods
sub
push
mov
outs
bound
pusha
adc
jnp
sub
sbb
mov
movs
push
data16
xchg
shl
xchg
pop
dec
xor
mov
mov
pop
out
rcl
dec
(bad)
popf
adc
pop
push
out
imul
(bad)
pop
loop
or
lahf
and
loopne
xchg
es
ficomp
pop
arpl
mov
mov
sar
mov
xor
loope
xchg
mov
push
mov
test
xchg
and
add
adc
mov
lods
pop
mov
fld
jne
out
mov
shr
addr16
cmps
adc
movs
fbld
gs
mov
jge
mov
call
xchg
outs
or
push
jo
lds
stos
stc
in
lds
test
aaa
ror
adc
mov
xlat
(bad)
xchg
(bad)
std
push
mov
icebp
cmp
aaa
mov
dec
jne
(bad)
mov
dec
lock
fwait
inc
inc
out
cs
dec
cmps
add
pusha
mov
and
push
stos
aas
sub
clc
add
loope
ds
stos
jns
data16
in
test
inc
cmc
cmps
femms
cld
call
mov
cmp
adc
jns
iret
cmc
mov
mov
int3
dec
dec
cmp
sub
js
sub
xor
dec
add
dec
add
(bad)
mov
mov
mov
movs
cmc
add
or
push
xor
cmps
mov
and
int
lds
jbe
jno
push
cmp
mov
jmp
mov
add
dec
lock
test
fsub
mov
sbb
jge
js
mov
jbe
cli
push
lods
test
pop
call
retf
std
es
mov
sub
cmp
adc
(bad)
sahf
mov
loope
loopne
dec
clc
fimul
push
xchg
add
cmp
test
and
in
cmp
and
mov
(bad)
outs
cmp
pop
movs
sbb
inc
fsubrp
mov
cmps
sti
outs
aas
(bad)
jge
mul
mov
cmp
xchg
fdivr
push
jmp
push
inc
jle
push
(bad)
(bad)
lahf
mov
xchg
mov
fst
sbb
nop
inc
stos
xchg
add
push
pop
rcl
jg
pushf
xchg
repz
not
retf
jp
cld
inc
pop
mov
loope
xchg
cmps
dec
pop
jns
mov
jl
cmp
inc
mov
mov
mov
fnstsw
(bad)
push
dec
push
sbb
mov
scas
test
jno
aad
nop
in
rcl
xor
pop
xchg
sbb
or
or
inc
cmp
xchg
cli
lahf
xchg
repz
sub
call
aaa
lock
adc
cmp
cmp
jne
sub
xchg
mov
fcomp
sub
jns
xchg
add
test
xor
mov
or
mov
pop
adc
mov
push
movs
cmp
mov
int
inc
xchg
pop
mov
enter
and
test
pusha
in
retf
fwait
in
lock
les
mov
jo
call
call
jecxz
xlat
dec
xchg
out
adc
ret
and
mov
jg
sti
loope
addr16
or
xchg
fcom
ret
in
(bad)
dec
dec
push
test
(bad)
push
test
cs
jl
sbb
xchg
dec
mov
mov
push
add
dec
add
jge
int
xchg
aaa
(bad)
sub
or
mov
mov
or
pushf
in
dec
jp
push
push
dec
loop
cld
pop
das
pop
mov
or
jae
in
jl
mov
retf
dec
test
sub
imul
(bad)
sub
inc
scas
adc
gs
adc
hlt
add
xor
sahf
mov
ins
inc
cld
sub
aas
pop
xor
aas
cld
dec
pop
add
push
retf
push
lea
xor
mov
(bad)
scas
push
cmp
and
mov
(bad)
shl
sti
shl
pop
push
inc
fs
xor
scas
and
xchg
jle
xchg
stc
and
fild
mov
fidiv
arpl
fild
xchg
dec
cmps
les
lods
gs
or
ins
dec
jns
les
out
and
push
je
mov
lods
push
ja
stos
mov
loopne
add
push
sbb
sti
out
jecxz
mov
cmp
push
pusha
mov
cs
ror
outs
or
dec
jae
sbb
fnstsw
pop
hlt
sbb
dec
clc
outs
mov
mov
ds
jmp
cld
sbb
ins
or
pop
test
pop
push
outs
add
les
ret
popa
idiv
in
add
mov
retf
cs
inc
mov
push
inc
push
sbb
and
jns
sub
fisub
popa
mov
push
adc
ja
xchg
push
arpl
jmp
test
sahf
lods
xchg
cmp
and
in
xchg
lahf
scas
cmp
pop
jns
ficomp
mov
inc
and
leave
(bad)
imul
test
push
push
add
pusha
pop
push
push
in
mov
mov
or
cmp
jnp
jns
cmp
pop
xchg
sbb
mov
out
dec
in
je
scas
pushf
add
mov
jl
rol
xor
rol
pop
repz
pop
leave
xchg
cmp
mov
loopne
pop
retf
cmp
retf
xor
sti
xor
mov
les
test
jne
pop
ret
cdq
gs
mov
jb
push
les
hlt
mov
mov
inc
fisub
pop
add
dec
popf
xchg
xchg
stc
xchg
js
sbb
out
jbe
xchg
cmp
ret
data16
repnz
push
jne
push
add
xchg
aaa
sbb
test
clc
xchg
add
mov
inc
out
test
adc
aas
lahf
mov
sti
(bad)
gs
push
ret
movs
test
cdq
jae
cmps
xchg
adc
icebp
jo
jmp
mov
add
add
and
es
mov
xchg
cwde
mov
add
mov
mov
enter
push
cdq
ds
jecxz
mov
loop
xor
dec
or
imul
inc
nop
push
pop
mov
sub
dec
cmp
icebp
sub
shr
cmp
dec
(bad)
inc
inc
xchg
jmp
jb
push
cmp
mov
sbb
ret
dec
lds
(bad)
sbb
int3
js
ds
dec
xchg
jp
pusha
mov
mov
out
pop
ret
push
push
loopne
jmp
movs
mov
fsubp
push
or
aas
es
xchg
cmp
or
adc
rcr
adc
test
inc
push
loopne
cmps
(bad)
mov
jno
pop
lods
mov
bound
inc
cmp
xor
pusha
mov
mov
(bad)
dec
out
fwait
pop
xchg
lods
mov
scas
pop
fisttp
pop
push
popf
iret
out
sbb
jecxz
xor
sub
xor
jp
xor
(bad)
fbstp
cli
pop
call
loope
fcmovne
xchg
movs
ficom
lods
mov
pushf
in
fist
in
fstp
xlat
data16
xlat
in
lea
nop
mov
mov
push
gs
jns
aas
js
lods
jmp
lahf
mov
add
jmp
mov
in
mov
mov
rcr
and
push
cmp
in
adc
les
retf
cmp
das
jno
mov
(bad)
add
neg
into
sub
sbb
je
push
mov
sub
mov
fnsave
arpl
mov
jb
(bad)
stc
das
and
out
mov
sub
sbb
test
cmc
xor
in
inc
mov
int3
(bad)
cld
jl
mov
lods
nop
je
cmp
cmps
push
mov
cmps
jae
bound
mov
(bad)
jmp
stos
daa
xor
sbb
sti
inc
cmc
inc
out
xchg
mov
leave
je
inc
push
pop
cmp
or
es
push
xor
push
push
jbe
cmc
push
dec
es
xchg
(bad)
(bad)
cmp
icebp
addr16
cdq
in
fsubr
jbe
pop
lahf
xchg
int
test
ins
lods
out
dec
dec
push
sbb
or
xlat
cmp
int
pop
or
lock
pop
loopne
or
rcr
fs
dec
xchg
dec
jne
neg
mov
fstp
es
mov
mov
and
jbe
hlt
jmp
and
pusha
bound
popa
fsub
sub
jge
jmp
data16
test
(bad)
push
pop
ret
mov
and
sub
fisubr
or
dec
dec
ret
mov
and
loopne
push
pop
les
xor
or
sub
push
jb
pop
inc
add
adc
xchg
sub
repz
dec
or
adc
dec
in
adc
mov
xchg
mov
scas
into
mov
xlat
pop
xchg
movs
in
dec
cld
xchg
xor
ds
sbb
test
lods
(bad)
or
fwait
push
inc
mov
mov
dec
enter
mov
cwde
mov
jecxz
test
pop
sub
pop
(bad)
sbb
sbb
xchg
cmp
lock
sbb
and
cmps
push
pop
test
xchg
pop
loop
ret
jle
mov
xchg
and
and
int3
enter
rol
jle
dec
adc
jbe
add
das
add
mov
sbb
fmul
mov
in
push
jge
loop
repnz
mov
jle
retf
mov
scas
jmp
xlat
add
gs
mov
mov
int3
xchg
imul
inc
cmp
dec
lock
test
adc
rcl
sbb
hlt
inc
out
out
fcom
lea
pop
icebp
sub
test
add
pusha
call
sub
xor
mov
dec
aad
cld
jne
aad
iret
and
mov
mov
or
pop
out
aad
add
in
or
cmp
push
fsubr
hlt
mov
ror
sub
mov
dec
cdq
dec
in
sbb
push
cmp
jp
mov
mov
inc
inc
dec
cmp
add
push
sub
add
shr
pop
jne
movs
ins
int3
jg
adc
jns
inc
mov
sbb
cmps
mov
daa
(bad)
lock
pusha
test
in
push
fisubr
add
ds
popf
fidiv
or
sub
setns
mov
loopne
iret
cmp
pop
xchg
pushf
pop
mov
or
add
push
rcr
test
pop
mov
xchg
pusha
xor
popf
test
inc
sub
pop
mov
pop
lahf
jg
repnz
sbb
iret
and
dec
outs
pop
std
mov
lods
repz
les
test
je
retf
nop
test
jne
jb
or
xchg
mov
out
sub
loopne
leave
enter
adc
nop
loop
fild
test
js
lea
(bad)
jl
pop
(bad)
out
adc
cmc
stc
sahf
jno
test
push
sti
cmp
outs
xor
bound
jbe
mov
jb
test
cmp
adc
cld
add
jl
loopne
lahf
cmc
xchg
push
or
mov
sub
movs
sbb
int
and
lea
pop
loopne
int
call
jg
ss
fstp
pop
sahf
push
or
xchg
push
mov
in
mov
push
div
dec
mov
adc
ret
sbb
pop
fdivp
xchg
call
repnz
jl
push
ror
loope
lods
call
lods
push
(bad)
in
sub
sbb
loopne
add
jmp
pop
inc
xor
and
(bad)
xchg
ja
dec
outs
lods
sub
mov
adc
pop
xchg
test
sub
outs
add
add
sub
xor
dec
jge
inc
push
dec
adc
sahf
lahf
pusha
out
fsubr
mov
int
hlt
sar
(bad)
js
sub
push
cmc
cwde
inc
xchg
sub
push
std
xchg
add
arpl
in
iret
mov
cld
sar
imul
fsub
push
sbb
adc
add
test
or
ficom
push
pop
push
xchg
inc
fst
mov
je
fsubr
aam
fnsave
jb
or
inc
xlat
sub
add
and
movs
data16
iret
add
mov
mov
push
test
(bad)
in
inc
mov
mov
pop
push
sub
in
mov
aaa
and
jge
scas
pop
(bad)
fimul
mov
mov
in
adc
push
into
jle
(bad)
push
mov
aas
add
aad
push
sbb
pop
sbb
es
int3
or
sub
xchg
ficomp
adc
inc
addr16
mov
xchg
push
stos
push
mov
and
(bad)
retf
push
mov
sar
fdivrp
or
cmp
jmp
and
fldcw
mov
mov
mov
push
pop
sub
jnp
push
sti
ret
xor
mov
jb
ins
adc
addr16
fild
pop
mov
cdq
es
or
jle
in
cmp
stos
inc
sar
mov
mov
into
sub
outs
sbb
pop
clc
pmulhw
das
push
mov
in
or
push
dec
push
das
sub
pop
add
jo
mov
loopne
and
pop
ins
out
push
sub
(bad)
adc
pop
mov
cmp
loope
adc
scas
sahf
xchg
pop
(bad)
add
lea
push
in
leave
mov
xchg
sar
or
fnstenv
aas
mov
retf
aas
adc
retf
add
push
pop
cwde
mov
js
jge
mov
inc
dec
cmps
into
cld
not
pop
mov
inc
cmp
movsx
jp
rol
sub
pop
xor
jne
aaa
add
xchg
cmps
out
sbb
sub
xor
test
fmul
cmp
jno
cli
mov
loope
shl
push
jp
(bad)
push
add
pop
add
dec
mov
ffree
pop
mov
dec
or
lds
sub
std
mov
leave
out
jmp
and
adc
pop
mov
test
leave
xor
dec
cld
jl
jb
rep
pop
int
in
and
std
xchg
sbb
jbe
pop
adc
xchg
outs
xor
sub
push
pushf
repnz
sub
mov
clc
xor
add
mov
test
mov
sbb
dec
fwait
push
sub
pushf
and
pop
push
ror
push
fnsave
jmp
out
mov
and
mov
mov
mov
jp
aad
sub
loop
or
mov
add
mov
loopne
cmp
push
jnp
jmp
pop
inc
test
and
push
push
stos
jnp
sub
scas
ret
into
mov
xchg
fcmovb
out
ret
sub
aas
fsubr
scas
sar
xlat
sbb
fld
dec
or
rcr
xor
movs
bound
or
mov
xor
mul
jmp
mov
fs
and
sbb
es
add
sub
data16
jns
mov
cs
dec
mov
jp
pop
cmp
jecxz
adc
in
div
int
lea
ficomp
dec
inc
push
in
lods
sbb
xor
jns
out
mov
fwait
in
mov
hlt
arpl
add
rcr
test
dec
adc
ins
gs
adc
aas
iret
iret
inc
test
add
push
fld
jmp
xor
loope
jns
xchg
outs
mov
(bad)
ins
xlat
or
add
vxorps
or
fucomi
mov
jnp
mov
pop
sbb
jmp
outs
cmp
bound
mov
jo
test
mov
daa
call
scas
and
dec
es
ret
hlt
cwde
scas
xchg
xchg
cmp
push
mov
mov
sub
adc
add
out
cwde
mov
mov
or
sub
cdq
inc
icebp
bnd
cmc
push
push
seto
sub
jmp
call
and
add
pop
jmp
adc
cli
retf
iret
ror
adc
ret
out
pop
xchg
pop
hlt
cmp
mov
jecxz
xchg
stc
pushf
pop
inc
ja
sub
mov
rol
adc
xor
mov
sbb
jmp
and
and
lods
mov
cmp
rcr
xor
in
test
imul
out
call
or
jnp
xor
rcl
or
lock
and
call
push
stc
jmp
push
pusha
dec
fdivr
inc
retf
aad
sub
and
sub
dec
loopne
das
sub
xor
and
popf
pop
pop
test
mov
cmp
lds
retf
repz
dec
jp
fdiv
xor
cmp
jle
in
jl
(bad)
ss
mov
adc
push
lahf
sub
imul
fisub
leave
clc
xchg
dec
mov
mov
fidivr
sbb
test
fsub
outs
inc
scas
xor
mov
stos
mul
loop
mov
fidivr
movs
cmovp
sar
inc
adc
mov
push
sub
and
cdq
rcl
add
inc
and
iret
pushf
pop
dec
pop
jle
inc
sub
mov
mov
add
xchg
sbb
xchg
push
sti
push
adc
mov
push
popa
and
into
stc
dec
nop
js
nop
and
pop
gs
jg
aad
sti
mov
cmp
lods
and
jae
lock
xchg
fldenv
jae
frstor
pop
scas
mov
loopne
adc
jp
imul
pop
ds
fs
inc
xchg
cmp
add
imul
movs
shr
and
std
jb
cmp
stc
mov
jmp
pop
dec
add
mov
call
mov
sbb
fnsave
dec
mov
aam
cmp
pop
test
fst
mov
dec
or
(bad)
and
push
sub
inc
jl
cmc
stos
in
adc
inc
adc
push
mov
adc
push
add
and
lds
rcr
mov
out
int
add
push
daa
test
push
jg
rcr
int
xchg
add
cmp
push
jmp
repnz
cmp
xchg
sbb
std
xor
dec
mov
inc
cld
mov
push
jle
cmp
inc
jle
push
xchg
retf
(bad)
dec
aam
out
idiv
xchg
push
stos
mov
fdivr
fcom
inc
ss
movs
sub
fcom
cld
les
into
inc
inc
pop
dec
data16
cmovl
mov
jae
mov
clc
jp
popa
add
ret
mov
push
not
push
mov
je
stos
js
sbb
lahf
in
sti
or
unpcklps
fisubr
retf
fcom
enter
cmp
inc
mov
(bad)
shr
inc
lock
fldenv
in
xor
adc
inc
es
js
push
sub
fcom
iret
mov
cmp
or
loope
das
jmp
xchg
popa
and
(bad)
mov
ins
imul
dec
sbb
ds
rol
ds
mov
adc
movs
add
arpl
xchg
push
jbe
mov
cdq
jae
and
fmul
(bad)
std
neg
shl
fdiv
adc
cmp
ss
push
aam
adc
out
movs
mov
sub
imul
and
fcmovnbe
aas
mov
mov
jp
rol
mov
and
or
int
ja
and
push
(bad)
jnp
lods
mov
mov
add
jp
lods
push
scas
int
jne
mov
inc
idiv
sbb
xchg
sbb
jo
daa
pop
cmp
adc
icebp
movs
inc
(bad)
push
and
sbb
mov
mov
push
outs
arpl
aaa
stos
ret
stos
popa
pop
dec
in
clc
out
ds
out
shr
cwde
loop
ror
push
sbb
jecxz
inc
and
push
sbb
outs
sar
(bad)
fdivr
movs
or
xor
mov
mov
xchg
ror
sub
loopne
jns
mov
dec
pop
adc
cmp
rcr
pop
sub
bound
sbb
(bad)
lods
sub
or
arpl
ds
pop
cs
push
pushf
mov
(bad)
cmp
xchg
xchg
add
or
push
out
inc
pop
pop
add
sbb
adc
sbb
xor
jne
cmp
dec
xor
movs
sub
cmp
adc
sbb
add
aaa
test
aam
sub
ja
sahf
push
aam
inc
xchg
sti
repnz
scas
mov
push
ret
int
mov
cmp
xchg
ret
inc
outs
xchg
pop
sbb
mov
(bad)
ins
mov
fistp
mov
pushf
cmp
jmp
hlt
(bad)
mov
rcl
out
retf
pop
push
mov
jg
gs
repnz
sub
mov
jae
inc
je
xchg
jnp
cs
xor
and
pop
cmps
frndint
aas
fcom
mov
pusha
js
adc
fsub
and
add
and
pop
imul
add
mov
fcomp
pusha
loop
ror
jp
sub
mov
mov
push
or
call
jnp
add
xchg
shr
stos
or
add
push
fnsave
mov
aaa
push
mov
sti
or
mov
outs
jnp
jl
sbb
dec
cli
adc
pop
push
test
lods
cdq
and
cmp
inc
outs
pop
shl
pop
mov
cld
push
jge
and
bound
jg
mov
lahf
int
in
int
lds
dec
dec
sub
jae
scas
dec
int
(bad)
ja
sbb
sti
xor
clc
das
pop
push
jnp
aam
inc
adc
xor
addr16
daa
sub
cmps
outs
jg
jg
inc
sbb
xchg
jl
pop
adc
jb
and
in
out
push
or
mov
jge
in
jb
mov
aaa
mov
mov
mov
fsub
in
scas
sti
fistp
mov
loopne
in
push
push
mov
outs
adc
pushf
or
jb
inc
jo
dec
aaa
dec
stc
adc
dec
jne
adc
mov
and
push
jmp
sbb
push
(bad)
xchg
push
outs
dec
(bad)
je
mov
test
push
or
mov
cmp
test
push
add
add
sub
cmc
jbe
ss
dec
fidivr
es
stc
and
test
xor
movups
push
mov
mov
push
in
xor
out
xlat
lea
test
inc
out
adc
push
fcmovbe
jp
xchg
inc
sbb
or
adc
in
inc
js
or
inc
ret
jb
inc
lds
xor
mov
fild
arpl
loop
leave
and
pop
loope
ins
and
cmp
lock
(bad)
push
inc
cmp
pop
adc
adc
std
or
retf
dec
mov
shl
call
push
movs
out
and
das
out
inc
and
js
and
and
mov
mov
jle
sub
test
sti
push
aas
xchg
test
inc
sbb
loopne
and
jno
xor
jb
push
sub
cmp
sti
xchg
add
pop
add
fistp
rol
scas
xchg
iret
stos
call
mov
adc
cmps
fcomp
frstor
xor
je
aas
imul
(bad)
fsub
jno
scas
dec
add
ins
test
jmp
xchg
hlt
lods
int
in
js
ins
push
(bad)
mov
jbe
rol
add
arpl
dec
nop
push
sbb
fwait
dec
or
jmp
pop
das
mov
test
pop
cmp
test
mov
int
fiadd
gs
aas
int3
fidiv
jmp
outs
outs
imul
iret
adc
fsubr
mov
retf
sub
loop
stc
jns
adc
sub
adc
sbb
sbb
or
or
imul
xlat
jmp
dec
imul
loop
jle
sbb
push
daa
and
dec
dec
pop
inc
cmc
dec
jle
pop
jb
cmp
mov
and
push
ja
mov
cmp
xor
cmp
dec
sub
mov
mov
mov
adc
ret
es
xchg
out
cmps
adc
mov
push
es
jbe
add
push
adc
dec
lahf
into
jae
xchg
sbb
pop
inc
arpl
mov
ja
call
and
cmps
pop
data16
sub
arpl
jle
cmp
or
jl
add
cmp
jmp
mov
fild
jmp
push
(bad)
mov
and
cmps
adc
mov
ins
push
sbb
js
sbb
pop
inc
mov
je
int3
xor
dec
dec
inc
sbb
pop
adc
add
or
(bad)
cmp
out
dec
or
test
xchg
or
repnz
popa
cs
push
add
je
icebp
popf
mov
jle
cdq
inc
mov
ret
cmp
cmp
lods
mov
test
(bad)
fidiv
or
arpl
jle
std
loop
(bad)
es
sbb
popa
addr16
pop
jecxz
xchg
dec
mov
dec
and
addr16
popf
mov
rol
fnsave
cmp
(bad)
cmc
push
xor
jg
lea
inc
cmp
in
jp
xor
pop
icebp
dec
push
push
sub
(bad)
sbb
dec
pop
fadd
push
dec
mov
mov
pop
add
scas
ret
stos
inc
jmp
sbb
or
xor
mov
mov
aam
test
jle
xchg
pop
fiadd
movups
sub
jge
mov
js
iret
push
jmp
inc
(bad)
test
jmp
sbb
push
xchg
jge
fcomi
stc
jecxz
jg
sahf
jno
pop
pop
inc
sub
das
mov
xchg
popa
test
imul
jecxz
cli
jl
dec
nop
bound
or
or
push
stos
xchg
sahf
test
inc
aad
sub
dec
pop
sti
jnp
sub
rol
mov
add
lds
inc
cmp
(bad)
pushf
push
ss
adc
cmps
hlt
stos
mov
xor
add
pop
cmp
div
fst
imul
enter
ror
movs
or
lods
retf
and
shl
repnz
sub
adc
push
mov
ja
stos
fwait
arpl
sub
mov
sub
cdq
xor
mov
and
mov
repnz
retf
xchg
mov
xor
mov
aam
sbb
jne
push
mov
add
or
and
pop
mov
jo
pushf
jecxz
(bad)
xchg
mov
push
jae
test
test
mov
xlat
xor
sbb
jb
jo
dec
mov
outs
jbe
sbb
sbb
pusha
test
inc
xchg
xchg
push
fidivr
mov
adc
xchg
pop
jb
pop
ret
neg
idiv
fdivr
inc
pop
adc
push
jmp
and
mov
pop
retf
jbe
and
retf
inc
add
lds
mov
clc
das
fist
xor
stos
jo
daa
cmc
mov
push
popa
and
xor
mov
daa
dec
add
dec
retf
lods
in
sbb
inc
jnp
cmps
data16
dec
sub
adc
jmp
adc
pop
pop
pop
int
call
pusha
or
xchg
ficomp
mov
mov
pop
mov
push
push
sub
shr
addr16
jge
cmp
imul
jecxz
xchg
mov
and
xchg
div
aas
jmp
repnz
adc
fisttp
sbb
xlat
mov
or
jle
jnp
test
xchg
cmp
aad
xchg
pop
cwde
sbb
adc
push
fisttp
jl
fisubr
mov
xchg
add
out
push
or
and
and
test
pop
cwde
lahf
data16
push
inc
movs
mov
pop
and
aam
xchg
adc
rcr
sti
mov
pop
es
xchg
mov
jmp
fst
mov
sub
pop
push
inc
jmp
lahf
dec
xchg
sub
push
loope
cmp
int3
repnz
cmp
add
xchg
jmp
and
mov
mov
push
les
ds
pusha
adc
cs
add
sub
fwait
ja
or
jae
or
and
push
test
adc
fadd
ret
jo
std
gs
sbb
ins
pop
fdivr
and
cwde
dec
xchg
cld
pop
push
into
mov
and
push
gs
sti
lods
xchg
pop
or
popf
lods
sar
or
inc
aad
adc
mov
dec
mov
xchg
es
sbb
nop
ins
test
movs
xchg
sub
ins
pop
gs
mov
adc
in
mov
inc
cld
dec
fild
aaa
cmp
addr16
xchg
xchg
enter
cmp
repnz
rcr
inc
push
cli
je
popa
inc
js
dec
sbb
fmul
fisttp
xchg
cli
retf
push
jle
les
push
and
sbb
mov
push
sbb
fmul
push
xor
mov
jg
push
test
pop
xchg
sti
dec
cmps
int
cwde
test
mov
stos
fninit
adc
data16
push
and
adc
mov
les
mov
cwde
imul
jns
xchg
pop
movs
xor
mov
fnsave
xor
addr16
into
test
scas
enter
mov
cmp
inc
cld
pusha
jecxz
hlt
out
jmp
mov
retf
pop
enter
loope
add
xchg
cmps
cdq
jmp
(bad)
call
lea
mov
into
je
outs
xchg
cld
imul
or
jmp
lds
fwait
popa
test
repz
jmp
ja
push
add
lock
mov
mov
push
xor
nop
fstp
or
mov
mov
cmps
dec
ja
in
push
outs
xor
lods
call
pop
inc
outs
loope
mov
aad
call
leave
cmps
rcl
push
call
cmps
mov
xchg
(bad)
push
repnz
push
mov
aaa
mov
shl
mov
mov
mov
cdq
out
(bad)
out
inc
in
loopne
mov
lock
popf
sbb
enter
movs
scas
push
mov
gs
clc
mov
dec
push
(bad)
cld
xchg
mov
jle
sahf
fmul
inc
xchg
adc
dec
rol
inc
into
cmp
jbe
stos
dec
ret
out
pop
xchg
mov
int3
stos
sbb
mov
(bad)
mov
inc
xchg
add
lds
cdq
fild
pop
neg
pushf
push
fnstsw
arpl
cmps
inc
bound
push
daa
pusha
inc
and
cmp
cs
mov
pop
mov
inc
add
mov
pop
lods
enter
sub
and
xchg
repz
push
add
xor
inc
mov
pop
hlt
dec
cli
xchg
outs
or
push
dec
sub
dec
sub
push
inc
or
int3
mov
mov
cmp
dec
push
enter
and
mov
aas
fistp
sbb
inc
adc
jmp
push
push
mov
push
pop
rcr
adc
sbb
adc
pop
out
push
and
pop
popa
push
dec
popa
jns
jne
mov
rcr
mov
ins
xchg
lahf
movs
cmps
(bad)
mov
js
pushf
out
add
jbe
sub
stos
or
not
(bad)
jns
inc
mov
(bad)
mov
xlat
daa
push
cmps
shr
pop
out
mov
test
xor
int3
pop
sahf
mov
push
add
push
retf
mov
lock
adc
push
add
fcomp
cwde
inc
mov
jl
cmp
fsubr
pop
cmp
sahf
imul
nop
repz
out
lahf
sbb
lock
adc
dec
shr
dec
out
mov
repnz
repnz
jo
jns
xlat
mov
jle
addr16
jns
or
sbb
in
fdivr
ret
ret
cmp
push
xchg
sub
fwait
shl
sub
ja
pop
pop
sub
out
mov
ins
fistp
aaa
js
mov
(bad)
sub
sti
pop
jp
push
pop
mov
mov
fld
pop
jne
xor
scas
into
setbe
sub
shr
inc
add
jne
les
push
test
mov
mov
mov
sub
jl
push
mov
xor
add
(bad)
in
sti
or
dec
xor
into
sbb
imul
cmp
pop
sbb
push
sub
inc
test
cli
fidivr
pop
(bad)
call
gs
or
pop
or
imul
sub
xor
outs
sub
ja
fdivrp
cmp
sbb
aas
xor
loopne
leave
push
push
scas
push
aad
xchg
cmp
(bad)
icebp
lea
adc
out
cld
cmp
sub
inc
(bad)
push
lahf
retf
pop
ret
inc
mov
clc
xor
jge
mov
loop
shr
cmp
pop
push
and
je
call
add
clc
les
(bad)
fcmovu
(bad)
sub
push
inc
loope
and
sub
add
pop
cmp
test
jg
arpl
into
pop
es
fisubr
mov
mul
rcl
into
repz
inc
adc
aaa
add
sub
pop
test
xchg
out
fistp
stos
cmps
(bad)
(bad)
out
iret
jmp
sub
xchg
pop
push
loop
add
pop
movs
jmp
cld
or
pop
aam
mov
cmp
gs
push
sbb
out
or
ja
je
jge
add
mov
cmp
ret
test
stos
mov
pop
retf
cmp
ds
sti
sbb
jge
xchg
fstp
xor
cmp
fistp
push
xor
cwde
mov
ss
dec
dec
std
fldcw
jl
dec
aam
stc
mov
and
ret
jecxz
push
dec
fnstsw
jp
xchg
inc
fsub
pop
sub
jns
add
pop
adc
mov
mov
or
sub
lods
mov
ret
push
push
shl
jb
xor
mov
xchg
mov
je
int3
sub
push
out
mov
ss
outs
lods
adc
ins
mov
test
fistp
jb
sar
(bad)
xchg
mov
jle
inc
cmp
fdivr
jb
jo
or
imul
scas
jl
stos
jne
sub
cmps
cmp
mov
(bad)
cmc
fincstp
push
jl
add
fst
ret
lock
push
enter
imul
cwde
and
movs
or
xchg
jbe
in
js
iret
mov
adc
pushf
or
clc
cmp
test
mov
bound
mov
retf
jb
int3
sub
setnp
mov
mov
loopne
pusha
mov
bound
mov
pop
cmp
or
sub
mov
fst
pop
mov
dec
in
add
cmp
push
fsub
xchg
fcmovu
jae
inc
cmps
(bad)
jl
popf
xchg
jo
sbb
cmp
push
fild
jno
aad
out
jge
cmp
or
push
and
imul
mov
in
inc
pop
push
ins
adc
es
sub
or
pop
mov
mov
int
jno
add
das
outs
in
fbstp
jle
inc
push
aad
(bad)
test
push
arpl
or
movs
push
inc
and
cli
cwde
or
sub
cld
std
jmp
mov
call
push
or
xchg
lods
mov
out
mov
bnd
xchg
rcr
mov
fstp
int3
adc
test
add
iret
out
inc
(bad)
dec
sbb
xor
adc
jg
pop
mov
mov
(bad)
lods
dec
pop
lds
pop
cmp
js
sar
lds
jmp
dec
xor
mov
pop
push
push
ror
iret
loop
mov
push
adc
jmp
mov
cmp
sub
sub
and
popf
dec
rcl
outs
loopne
(bad)
mov
add
cmp
dec
add
mov
stos
mov
out
loop
fdiv
jecxz
sub
ins
fist
neg
jmp
int3
sub
mov
mov
mov
sbb
(bad)
nop
mov
inc
popf
mov
daa
xor
stc
popa
sar
sbb
jbe
test
gs
xor
sub
mov
sub
into
sbb
sub
pushf
enter
or
push
out
sub
jp
adc
(bad)
push
outs
test
ret
mov
xchg
inc
scas
popa
jbe
ficomp
mov
adc
sub
ds
adc
xchg
add
inc
arpl
cmp
ss
je
imul
jle
dec
in
retf
test
ror
xor
inc
push
ds
or
mov
and
xlat
loopne
push
or
pop
int
xor
sub
ret
outs
sti
or
sub
out
fcmovnu
call
sub
pop
in
or
jb
ror
outs
scas
push
jnp
push
inc
mov
xchg
fiadd
xor
ror
mov
retf
add
mov
and
mov
cmp
sbb
cmp
mov
xchg
dec
adc
data16
jmp
addr16
fisttp
cmp
sbb
mov
or
jecxz
mov
imul
scas
outs
sbb
cli
cs
rol
stos
or
test
shl
xchg
pop
dec
fadd
jnp
mov
leave
fwait
push
adc
popf
push
jge
lds
adc
inc
xchg
mov
stc
or
int
push
mov
(bad)
jbe
and
mov
xchg
sub
add
call
sub
sbb
jns
pushf
jmp
mov
push
jge
xor
sub
pop
cmps
adc
cs
ja
push
xchg
popa
leave
lea
stos
xor
mov
adc
xchg
shl
and
daa
dec
jmp
out
cmps
outs
xchg
jmp
add
jmp
and
jbe
mov
jns
mov
(bad)
and
inc
unpcklps
test
sti
mov
push
adc
aam
idiv
loopne
loope
into
addr16
add
inc
(bad)
push
add
sahf
loop
xchg
sub
popf
cmps
call
movups
xchg
xchg
jp
bound
or
lock
mov
pop
mov
getsec
std
(bad)
adc
add
test
lds
out
pop
repz
call
(bad)
cmps
cmp
sbb
idiv
push
mov
jg
lods
dec
imul
dec
add
inc
sub
movs
loop
fdivr
inc
push
xor
inc
mov
cli
outs
and
rcl
inc
push
sub
adc
pop
retf
in
call
xchg
and
out
pmuludq
in
pop
inc
inc
cmp
push
sub
hlt
pop
mov
call
push
mov
push
dec
mov
sbb
or
jle
jl
arpl
pop
addr16
pusha
adc
sub
scas
and
jp
fs
fbstp
push
jg
sub
mov
sbb
push
inc
dec
xchg
mov
stos
inc
jnp
push
mov
mov
pushf
xor
jecxz
rol
or
jmp
ficomp
jg
pop
sub
bound
push
movs
(bad)
dec
in
or
int
sti
push
xor
or
cmp
pop
xchg
mov
add
mov
ja
(bad)
in
and
dec
sub
fisubr
sbb
ret
inc
sbb
or
ss
pop
shl
pop
daa
push
fist
test
and
push
add
jb
pop
pop
ja
movs
rcr
ret
shl
cs
loop
adc
sbb
aas
mov
mov
pop
in
nop
add
mov
call
mov
ror
movs
or
adc
xchg
lahf
hlt
inc
in
enter
sub
xchg
pop
push
xchg
ror
pop
adc
mov
test
mov
mov
fimul
clc
mov
adc
cmc
cli
push
retf
pop
jmp
fs
add
push
or
sbb
popa
push
fwait
movhps
sub
sub
and
mov
push
sub
push
or
dec
add
add
or
sbb
mov
test
and
or
push
clc
or
jecxz
sub
inc
push
mov
sbb
cmps
mov
mov
pop
fs
sub
in
bound
mov
mov
cli
js
ror
push
adc
or
push
mov
pop
jmp
jmp
mov
pop
xor
out
push
inc
sahf
in
les
xchg
in
int3
pop
call
push
test
ret
and
mov
push
lods
into
cmp
dec
out
or
pop
daa
retf
jb
inc
jbe
mov
into
add
sub
adc
sub
out
add
cmc
repz
push
mov
xchg
push
push
in
(bad)
xchg
out
cmc
xor
retf
(bad)
stc
jl
fdiv
cs
pop
xor
fisttp
(bad)
sti
fisttp
fisub
push
bound
sbb
add
or
sbb
dec
loop
cmc
dec
ins
leave
push
stc
out
out
add
mov
ret
xchg
add
inc
mov
ds
ins
movs
lods
outs
hlt
or
or
call
je
push
les
sub
cli
jns
repz
lock
lods
(bad)
loope
popf
cmps
sbb
mov
xor
jnp
scas
dec
(bad)
jmp
cmps
stos
fld
out
adc
add
lods
neg
pop
or
mov
ret
imul
icebp
addr16
dec
pop
lods
pop
mov
push
in
mov
pop
shr
mov
(bad)
cwde
gs
(bad)
or
call
mov
in
mov
xchg
ret
push
mov
or
mov
or
jge
mov
push
imul
shl
ins
push
data16
jmp
scas
mov
clc
aas
pop
int
mov
(bad)
(bad)
jnp
stos
pop
sub
adc
shl
into
jnp
dec
rcl
xchg
jns
mov
add
jl
out
hlt
adc
mov
cmp
fbld
pop
push
sub
out
mov
and
imul
jne
pop
in
mov
push
jl
sub
imul
sub
xor
outs
jo
mov
out
mov
out
mov
ret
scas
jp
adc
sub
add
mov
push
xor
mov
(bad)
pop
mov
or
shl
pop
jle
test
arpl
pop
cdq
sti
mov
retf
lods
iret
or
push
xor
fwait
cmp
push
mov
int
mov
shr
(bad)
in
and
mov
ins
ins
adc
mov
js
cwde
fdiv
add
lahf
add
push
xchg
jnp
fcomp
or
and
daa
mov
jns
jp
aam
test
dec
mov
movs
movs
popa
add
xchg
cli
pop
jbe
imul
lds
fsub
adc
aad
cmp
mov
setb
push
fimul
aaa
add
imul
fisubr
movs
jmp
or
scas
xchg
fisttp
xchg
out
pop
int3
shl
movs
cmp
stos
jp
pop
call
pop
cmp
cmps
cmc
nop
fisubr
xchg
cmp
dec
cmp
bound
or
xchg
js
mov
inc
popf
pop
leave
mov
or
xchg
cmp
lds
mov
inc
cli
inc
shr
mov
xor
jmp
stc
jge
add
in
cs
or
ss
pushf
jge
and
jnp
push
mov
cmp
daa
test
mov
xor
loopne
idiv
test
mov
push
jmp
pop
cwde
or
add
dec
xchg
retf
cmp
iret
and
mov
rol
mov
test
mov
fs
cmp
ret
in
or
sbb
mov
fmul
xor
ret
cs
and
stc
ret
jno
and
lods
fmul
pop
cmp
mov
shl
rol
out
sbb
in
push
push
push
mov
sbb
(bad)
adc
rol
in
and
(bad)
sub
adc
pop
sub
in
clc
jmp
sahf
push
jo
mov
clc
jo
and
ja
lahf
in
inc
jno
repnz
fiadd
data16
adc
out
push
pusha
xchg
xor
scas
fs
cmp
sub
inc
ins
shl
sbb
sbb
add
cld
aad
sbb
inc
scas
xor
xchg
sub
push
inc
(bad)
and
pop
mov
mov
cmp
push
push
int
dec
(bad)
cmps
iret
pinsrw
fbstp
cs
cmp
out
mov
pusha
jecxz
dec
mov
dec
pop
test
pop
add
sub
xchg
sbb
test
mov
cmc
and
aad
mov
dec
cmp
mov
mov
cmp
add
fistp
clc
xchg
das
rcr
les
mov
mov
jns
bound
mov
leave
cmp
add
and
loope
ficom
and
jne
mov
jmp
xor
clc
or
test
mov
mov
cmp
ins
or
mov
sbb
mov
dec
push
lds
lea
outs
sub
scas
fs
cmc
cmp
mov
fist
cmp
dec
aad
fsubrp
push
mov
(bad)
lea
ins
scas
test
pop
stos
pushf
xlat
aad
sbb
xlat
add
adc
push
ror
loop
fmul
lock
scas
mov
jb
aaa
js
xlat
and
mov
sub
mov
fs
out
loopne
gs
ds
inc
mov
shr
dec
or
xor
xchg
hlt
add
jo
retf
dec
in
sbb
dec
loopne
xor
xor
pop
leave
jbe
push
fsub
test
fistp
mov
sub
enter
loope
adc
ss
mov
adc
inc
push
inc
xchg
ins
cmp
or
jno
xchg
add
adc
sbb
rcl
int3
mov
xchg
or
scas
dec
retf
push
movs
dec
fcomp
jl
imul
pop
mov
cmp
in
xchg
ror
ins
jl
clc
mov
mov
in
ins
dec
cmp
jbe
icebp
dec
jmp
push
icebp
retf
movs
cmps
xlat
mov
int
sub
cmp
xor
jbe
out
mov
push
add
fnsave
repnz
ins
jae
ret
jnp
add
sub
push
mov
js
or
mov
shr
adc
addr16
cld
inc
xor
call
or
mov
hlt
add
fdiv
daa
mov
inc
jnp
stos
les
dec
and
mov
and
sub
sub
call
pop
sub
xchg
xchg
or
jo
sub
aam
shl
mov
shl
aaa
fist
mov
in
leave
sar
or
iret
mov
lds
aam
xor
xchg
(bad)
and
inc
fsubp
js
test
stos
sbb
movs
pop
(bad)
fisttp
test
arpl
or
xchg
adc
jne
ds
inc
xchg
ins
pop
xor
ret
and
cmps
xchg
push
mov
test
into
test
jnp
fld
mov
sbb
mov
arpl
dec
lea
mov
dec
sbb
movs
jo
cmps
mov
dec
lods
pop
movs
fwait
shr
dec
cmp
adc
call
mov
cmp
bound
lods
iret
dec
das
mov
jo
ss
mov
aad
adc
cli
jecxz
das
or
sbb
cld
cmp
sahf
sub
push
mov
jp
es
nop
cld
push
sub
outs
daa
fmulp
or
out
std
or
sbb
lods
dec
pop
js
rcpps
mov
jnp
fdiv
xchg
push
xchg
push
sbb
out
jb
cdq
cmp
(bad)
dec
mov
or
pop
mov
push
pop
test
dec
add
mov
push
scas
xchg
jmp
xlat
js
in
mov
inc
pop
and
xchg
push
xchg
aad
ins
cmps
sbb
lds
sub
push
cs
push
outs
scas
in
lods
push
(bad)
sbb
out
out
dec
push
mov
loopne
dec
outs
test
xchg
cmc
pop
pop
pop
dec
add
in
popf
out
xchg
xchg
xor
(bad)
aas
pop
sub
test
popf
sbb
xor
shl
mov
push
call
push
sbb
(bad)
cmp
inc
jae
dec
leave
jo
movs
lds
jecxz
hlt
sub
test
sbb
(bad)
dec
loop
fisttp
popa
push
iret
mov
or
sub
dec
push
push
ficomp
lds
out
mov
inc
mov
pop
dec
or
mov
jo
mov
test
add
clc
add
dec
xchg
es
fld
jmp
jbe
ja
dec
mov
stos
(bad)
and
sar
jnp
sti
push
lea
in
push
mov
leave
add
jo
ret
sub
je
inc
aas
or
adc
cs
rcl
add
cmp
rcl
out
daa
fcomp
pop
adc
and
aam
mov
ss
jo
mov
lods
retf
in
das
pop
pop
xchg
icebp
dec
outs
sar
cmps
iret
adc
cli
pop
mov
test
sub
ss
les
cld
shl
sub
gs
fwait
dec
jno
sbb
addr16
push
dec
shr
jp
mov
in
xchg
gs
mov
gs
add
mov
xchg
shr
sbb
jbe
stos
mov
cmp
mov
outs
mov
mov
push
mov
xchg
inc
in
ins
mov
jmp
pop
in
jge
jecxz
movs
mov
jbe
jns
and
mov
xor
xchg
sub
mov
je
data16
push
sub
movs
sbb
cld
and
scas
mov
addr16
loopne
in
mov
dec
dec
pushw
fbld
push
pop
ja
cs
retf
test
jno
jo
into
push
loop
jle
aad
neg
repnz
test
rcl
mov
dec
and
cmp
sub
push
mov
iret
sub
int
jne
jb
jg
xchg
jnp
loope
outs
xor
mov
aas
enter
adc
imul
test
inc
iret
xchg
cmp
sbb
or
mov
out
or
scas
outs
fimul
pop
ror
xlat
cmps
xchg
pop
adc
fmul
xor
jo
(bad)
int
shl
in
test
pop
mov
sar
mov
inc
out
mov
pop
jl
mov
jb
sub
test
xchg
aad
sar
or
and
pop
jae
adc
rol
sub
jg
addr16
(bad)
retf
xchg
cmps
(bad)
retf
pop
jecxz
or
pushf
cmp
inc
lea
ficomp
push
dec
repnz
sbb
mov
jp
fimul
jae
pop
popa
lahf
adc
push
jmp
cld
cld
outs
int3
jmp
stos
mov
cmp
cs
jns
dec
mov
push
jge
imul
(bad)
ret
mov
sub
into
pop
(bad)
(bad)
int3
dec
out
enter
jge
scas
or
dec
sbb
scas
add
(bad)
js
xlat
adc
pop
inc
ja
movs
push
inc
and
cmp
adc
xor
mov
retf
jns
xor
(bad)
hlt
mov
leave
jmp
mov
mov
lock
call
movs
pop
jns
jns
int
retf
xchg
sar
adc
rcl
stc
dec
pop
out
repnz
sub
adc
popa
adc
cmp
push
pop
pop
pop
mov
test
rol
push
mov
pop
mov
retf
pushf
in
call
xor
fs
fsub
jae
cmps
call
fwait
push
mov
(bad)
aas
sti
jae
pop
push
leave
je
push
adc
mov
(bad)
out
cmp
inc
xchg
jnp
out
addr16
gs
loop
call
add
pop
or
and
mov
xchg
(bad)
ins
retf
adc
in
push
fidivr
jae
gs
mov
dec
push
stos
mov
test
dec
mov
fst
sub
test
pop
repz
jae
mov
sbb
mov
(bad)
ds
stos
iret
sahf
fmulp
mov
xchg
xchg
and
mov
adc
cmp
inc
aas
ds
xor
xchg
jp
xchg
jbe
hlt
mov
mov
adc
leave
sbb
daa
jmp
mov
cwde
mov
jmp
call
cmp
xchg
pop
pop
loope
out
leave
jno
ins
push
loope
clc
and
adc
or
add
ja
sub
(bad)
ins
add
loopne
dec
mov
or
or
dec
add
int
dec
fld
cli
popa
aad
cli
mov
add
scas
sbb
test
inc
mov
xor
xchg
mov
fistp
imul
push
xor
loop
adc
test
test
dec
ret
ds
movs
(bad)
inc
outs
inc
cmp
test
cld
popf
(bad)
xchg
jle
xchg
movs
movs
icebp
xchg
xchg
push
fidiv
aaa
cmp
cmps
cli
xor
neg
loop
iret
fmul
sbb
push
(bad)
movs
mov
aas
mov
jmp
xor
mov
jb
sub
xchg
lock
jp
aad
sbb
inc
xchg
test
push
(bad)
in
push
outs
inc
xchg
mov
icebp
cmps
ja
inc
lds
bound
push
out
nop
cmp
jne
and
jne
dec
imul
mov
sbb
sti
xchg
and
lea
shl
outs
sub
dec
xor
repnz
add
sub
mov
idiv
out
mov
(bad)
(bad)
scas
test
and
dec
mov
xor
bound
aad
adc
dec
fucomp
dec
xor
add
sbb
outs
fmul
mov
int3
or
jp
xchg
push
(bad)
or
adc
add
je
loope
les
mov
inc
clc
sub
pusha
xchg
adc
xchg
aas
push
or
inc
(bad)
xor
jns
repz
call
mov
iret
or
or
je
cmp
neg
clc
ins
dec
ret
call
pop
jb
sub
pop
pop
pop
and
cmps
cs
mov
retf
inc
pop
les
ret
cmovae
adc
mov
adc
jge
mov
and
loope
popa
popa
jbe
pop
mov
(bad)
mov
or
ret
mov
leave
sub
push
fmul
sub
jnp
cmp
mov
dec
sub
imul
cmp
int3
sub
sbb
fwait
cmps
mov
ja
mov
dec
and
pop
pop
dec
daa
or
jb
xor
cli
mov
xchg
mov
and
pop
cwde
cli
xor
add
out
aas
ret
adc
hlt
sub
shl
mov
push
ds
push
adc
xchg
push
cmp
add
pop
push
jb
movs
xlat
xor
push
jne
push
call
sti
xlat
dec
int
inc
cwde
push
mov
mov
xchg
pop
sbb
jbe
push
push
lahf
shr
xor
xchg
popa
loope
push
mul
call
in
sbb
push
adc
lds
mov
iret
test
mov
sub
rcr
push
mov
outs
mov
adc
mov
jno
movs
dec
inc
xchg
mov
jg
lds
xchg
xorps
mov
push
mov
fimul
ror
dec
add
(bad)
or
leave
push
sbb
xor
xor
sub
enter
les
pusha
jg
xor
es
(bad)
out
jb
mov
or
or
sbb
adc
mov
fld
sub
xchg
enter
ins
xor
push
and
test
popa
mov
ja
cwde
sar
inc
adc
fistp
shr
and
pop
test
jnp
adc
jo
adc
(bad)
in
arpl
mov
fimul
daa
ficom
(bad)
retf
mov
pop
sbb
lahf
les
cmp
sbb
int3
and
push
mov
jmp
out
inc
in
test
(bad)
(bad)
je
push
mov
ins
jae
cld
out
arpl
into
(bad)
mov
int
pop
aaa
fwait
hlt
outs
fistp
in
mov
stc
sub
(bad)
lock
cmp
push
mov
lea
(bad)
xchg
(bad)
pop
adc
inc
cmps
(bad)
vmovupd
xor
aad
pushf
in
ins
inc
mov
jae
cmp
outs
(bad)
aad
mov
in
pop
xor
inc
push
(bad)
add
sbb
xor
inc
enter
jbe
mov
or
lds
std
aas
lds
jns
(bad)
iret
call
cs
cmps
cmc
bound
sbb
or
xor
(bad)
cmc
or
jl
pop
iret
sbb
dec
das
imul
push
push
or
cld
sbb
aas
and
mov
cli
lds
sahf
push
mov
mov
fdiv
pop
pusha
jl
and
frstor
imul
movs
inc
jne
out
fdivr
repnz
and
aad
cmp
mov
or
jp
push
push
ret
aas
(bad)
push
gs
dec
mov
out
outs
or
jp
test
inc
dec
sbb
iret
add
pop
ret
add
test
adc
lds
sub
dec
cmp
ficom
cmp
lahf
sbb
and
xchg
cmps
add
mov
jp
or
and
in
ins
adc
push
mov
xor
mov
adc
mov
out
out
xlat
jg
jbe
jl
(bad)
and
dec
adc
(bad)
std
(bad)
cmp
test
scas
mov
mov
jno
pop
test
and
pop
xchg
adc
ficom
dec
dec
es
jnp
imul
(bad)
adc
push
push
leave
mov
fldcw
xchg
ret
or
fstp
mov
push
sub
push
jne
mov
sbb
pop
cmp
mov
mov
lea
mov
sub
arpl
stc
xor
loopne
retf
xlat
push
dec
and
or
inc
jp
in
je
dec
or
bsf
mov
sub
popa
mov
outs
not
or
sbb
push
iret
dec
pop
cmc
xchg
test
pop
mov
adc
inc
sti
sub
ret
mov
push
fdivr
jbe
jns
or
stc
gs
test
daa
xchg
imul
mov
fisub
push
sub
outs
xor
jbe
xchg
cmc
xor
mov
iret
leave
jge
add
idiv
cs
pop
push
sti
ins
jl
mov
push
cmp
repnz
lea
jecxz
cwde
mov
dec
pop
mov
mov
mov
pop
jmp
shr
jns
pop
sub
mov
ss
inc
outs
int
mov
dec
ror
in
(bad)
js
mov
inc
test
mov
push
lea
sbb
fisub
jge
sub
movs
cmc
xchg
adc
mov
ins
in
sti
inc
popf
or
pop
retf
jle
outs
test
nop
xor
aas
or
lds
cmp
mov
mov
icebp
dec
scas
and
jp
mov
call
mov
mov
ret
sub
mov
mov
(bad)
or
lods
xchg
adc
pop
mov
cmp
mov
js
rcr
and
aam
stos
nop
stos
inc
xchg
(bad)
out
addr16
cmp
inc
xor
movs
sbb
push
and
inc
ret
bound
je
std
in
or
pop
ficomp
sti
dec
cmps
xchg
push
iret
adc
pop
cmps
xor
mov
repz
jns
retf
sub
and
jge
mov
rcl
call
cmps
out
sub
scas
data16
mov
loopne
adc
and
arpl
fisub
pop
or
imul
add
lods
or
or
shl
out
lahf
clc
enter
add
jns
and
scas
pop
inc
mov
xor
pop
pop
dec
cld
lds
icebp
mov
fstp
fsubr
fwait
es
shl
ret
xor
je
addr16
or
dec
sbb
daa
popa
fs
in
test
xor
mov
icebp
pop
jecxz
mov
and
je
sar
mov
pop
jns
mov
xchg
pop
add
(bad)
cmps
stos
int3
(bad)
mov
jno
lock
lods
popf
loope
dec
pusha
ret
inc
add
lea
pushf
cmp
push
(bad)
addr16
(bad)
imul
test
push
dec
mov
xchg
ret
out
and
push
inc
push
test
inc
sbb
leave
mov
sar
push
xchg
adc
jnp
cdq
rcl
shl
(bad)
fisub
push
lea
inc
jns
movs
mov
movs
pop
daa
push
imul
pop
inc
lods
pop
jnp
mov
popf
ds
out
mov
dec
mov
hlt
inc
xchg
inc
mov
push
pop
daa
(bad)
mov
fwait
bound
int3
inc
cmp
(bad)
xlat
fcom
fnstenv
sahf
lods
popf
in
or
outs
cmps
and
adc
and
mov
sub
dec
inc
not
aas
fimul
adc
aaa
scas
push
jbe
fdiv
dec
nop
cmps
mov
sbb
jb
pop
jecxz
xchg
(bad)
out
iret
aad
add
push
dec
(bad)
sti
mov
jmp
and
nop
pop
mov
scas
sahf
and
push
fist
fadd
fdiv
or
enter
test
inc
cmp
or
inc
fstp
fdivr
inc
fsub
sub
mov
daa
and
or
retf
fdiv
retf
or
sti
jecxz
rol
xor
cmp
out
(bad)
push
push
ss
adc
call
sub
dec
mov
pusha
cld
dec
jae
adc
xor
xlat
mov
mov
cmp
enter
mov
cmps
mov
les
cmp
out
ror
mov
cdq
xchg
into
movs
dec
pop
into
fidivr
inc
(bad)
lods
stos
xor
je
xor
adc
(bad)
cs
xchg
lock
jecxz
cmp
cmc
jg
pop
scas
xchg
lods
pop
dec
mov
aaa
(bad)
sbb
mov
sub
or
ins
test
cli
repnz
lods
fwait
add
xchg
xchg
push
addr16
or
bswap
xchg
adc
jge
jo
push
inc
inc
stos
adc
pop
seto
inc
enter
adc
data16
xlat
inc
mov
pop
sbb
or
retf
sbb
or
jmp
cmps
cwde
cmps
push
or
pop
adc
pusha
cmp
fs
pop
sahf
js
hlt
popf
dec
ja
jg
jmp
push
xchg
pop
bnd
or
(bad)
mov
cs
xchg
les
adc
pop
scas
add
or
add
sbb
out
movs
add
cmps
sbb
mov
push
jb
loop
push
shl
cmps
in
dec
pop
(bad)
push
or
inc
push
adc
inc
mov
and
test
sbb
pop
lods
jp
outs
(bad)
sahf
jmp
aas
mov
mov
movs
mov
out
and
repnz
jae
and
sar
or
xchg
aam
push
mov
cwde
mov
mov
nop
sub
inc
and
(bad)
cwde
icebp
mov
mov
inc
int
or
xchg
or
sub
shl
fist
xchg
cli
and
test
push
mov
rcr
int
xor
push
cmps
push
pop
adc
add
(bad)
fst
test
in
mov
in
cmp
ins
cmp
mov
das
pop
in
das
into
gs
push
ins
push
(bad)
push
out
sbb
sar
xchg
into
mov
pop
add
arpl
mov
fild
jmp
adc
mov
shr
mov
fcom
sbb
mov
retf
das
imul
arpl
mov
jns
or
xor
adc
outs
xor
shl
dec
sub
add
cmps
leave
sub
jb
add
jb
jno
loop
pop
stos
dec
sub
cwde
aas
push
shl
enter
hlt
in
jns
inc
add
dec
frstor
add
push
(bad)
jl
sti
jge
adc
ins
xacquire
ror
cmps
addr16
les
xor
pop
in
stos
cmp
xchg
add
pop
mov
icebp
jb
enter
es
inc
call
data16
cld
xor
push
jbe
shl
gs
mov
outs
push
xlat
aaa
imul
leave
sub
or
or
clc
sub
cmp
jne
xchg
popf
outs
(bad)
mov
mul
popa
push
xor
and
push
mov
and
mov
(bad)
sbb
fstp
test
ret
xor
daa
dec
dec
mov
xchg
pop
lods
call
cmc
sbb
push
leave
xchg
cmp
and
arpl
stos
jo
stc
xchg
inc
cwde
lods
aad
adc
xchg
pop
and
neg
pop
xchg
inc
jb
icebp
jmp
movs
push
jmp
mov
lods
mov
(bad)
sbb
jge
sbb
mov
add
mov
pop
shl
mov
or
push
sahf
dec
sbb
or
setno
in
xor
adc
xor
js
and
ror
mov
pop
push
jnp
(bad)
in
mov
inc
inc
jmp
retf
and
xchg
cmp
inc
mov
mov
xchg
cmp
pop
pushf
cmps
cmps
outs
test
mov
ror
pushf
ja
push
dec
push
xor
js
xchg
or
mov
jmp
mov
(bad)
loopne
cmp
push
add
jae
scas
loopne
jecxz
jg
xlat
xchg
fadd
xchg
sar
jecxz
jne
adc
addr16
movs
xor
and
fisub
jl
inc
jno
mov
sub
into
popf
adc
(bad)
or
test
mov
cmp
int3
xor
add
xchg
pop
scas
mov
fstp
mov
test
sub
aas
aaa
fist
std
js
and
sbb
fst
mov
arpl
mov
cmps
sbb
jg
ret
dec
(bad)
jmp
pop
xor
cld
call
cmp
cmp
xor
and
cmpxchg
cli
jmp
movs
enter
dec
mov
fmul
sar
in
cmovp
popf
push
les
pop
popa
(bad)
cmp
fadd
(bad)
lods
and
adc
pop
ins
(bad)
xchg
std
or
shr
(bad)
lods
(bad)
sbb
pop
sar
loop
dec
std
call
xchg
stos
out
into
addr16
add
ret
mov
in
adc
cld
push
dec
mov
inc
mov
push
xchg
jge
(bad)
fldcw
dec
ja
lods
int3
adc
push
inc
mov
fldenv
mov
mov
(bad)
imul
cmp
push
sub
mov
pusha
mov
repnz
lock
mov
mov
stos
xchg
fdiv
jnp
cmp
pop
loope
pushf
add
(bad)
imul
mov
and
or
push
scas
cs
frstor
jns
inc
xchg
mov
imul
std
push
test
or
pop
jo
xor
cli
pusha
fs
out
xor
mov
dec
leave
xchg
inc
iret
(bad)
loope
or
adc
jg
lahf
push
mov
mov
fnstcw
or
and
push
int
cwde
scas
inc
call
cmc
popa
add
in
retf
push
das
jb
hlt
mov
stos
in
push
mov
jmp
je
or
jge
cwde
adc
imul
sub
and
inc
retf
sub
ins
fld
push
jne
mov
dec
and
cmp
pop
loop
mov
or
jb
call
push
pop
dec
mov
dec
cmp
in
pop
imul
cmp
jmp
aad
or
adc
dec
movs
or
cmp
sahf
or
test
jl
sbb
jb
loope
pop
cmp
and
xchg
shr
adc
xchg
xchg
daa
call
fld
jno
sbb
push
cmp
jmp
dec
pop
xchg
mov
sub
clc
mov
mov
push
loope
sbb
push
mov
add
scas
adc
(bad)
pop
jp
push
mov
push
out
pop
aam
xor
int
lods
push
fisub
jnp
iret
les
dec
jnp
xor
fdivr
xlat
das
jmp
mov
shl
cmp
(bad)
iret
stos
sbb
imul
sub
sub
or
xor
ins
repz
jle
sbb
mov
cmp
int3
pop
jbe
cmp
inc
add
sbb
push
popa
sub
inc
jns
clc
loopne
dec
xor
inc
cmp
jge
pusha
cs
cmp
jae
pushf
jg
cmc
cs
movs
adc
sub
(bad)
imul
pusha
loope
mov
movs
pop
mov
addr16
pop
xor
jmp
adc
(bad)
sahf
popf
fidiv
enter
mov
jle
jne
loopne
sar
sahf
js
xor
ja
sub
fst
(bad)
jl
lds
repnz
outs
dec
test
mov
test
ss
inc
fstp
neg
clc
push
call
mov
das
mov
jle
adc
inc
push
sub
dec
daa
mov
pop
mov
xchg
inc
(bad)
(bad)
(bad)
call
inc
dec
and
inc
cmp
ret
inc
inc
repz
add
mov
pop
movs
mov
loop
inc
imul
xchg
stc
mov
push
jae
lea
fstp
xchg
xchg
or
mov
push
out
or
jecxz
mov
lods
es
in
or
std
push
mov
ret
mov
test
add
adc
mov
lods
in
daa
mov
imul
je
push
jae
xchg
push
mov
dec
jg
(bad)
sbb
xchg
jg
outs
pop
sbb
stos
inc
xchg
jb
iret
cwde
mov
fs
inc
sar
nop
loopne
fild
test
(bad)
bnd
pushf
mov
mov
jp
int3
rcl
xchg
mov
pop
in
sar
sub
mov
xchg
test
pop
call
lea
mov
mov
mov
mov
dec
pop
xchg
retf
sub
out
sqrtps
loope
fldenv
into
aam
add
lock
jbe
hlt
ret
push
jg
(bad)
mov
push
shr
xchg
dec
xchg
dec
inc
mov
and
dec
mov
ret
cmp
add
jbe
xor
mov
cmp
fstp
repnz
mov
call
mov
mov
shl
push
mov
and
lock
push
jmp
xor
push
cmp
imul
jb
or
or
retf
clc
mov
and
cmp
xchg
mov
loope
mov
and
mov
movs
or
jns
call
xchg
pop
jmp
int
out
hlt
dec
call
or
ins
add
aad
into
lock
xlat
xchg
jg
fmul
test
mov
test
aad
out
pop
push
into
inc
in
cmp
sub
jns
mov
sbb
call
xor
push
pop
out
push
or
adc
or
dec
mov
in
les
cmp
mul
cld
ror
pop
inc
test
mov
sbb
ins
and
test
push
sbb
and
test
sub
test
inc
(bad)
jmp
sub
jmp
sbb
lods
js
push
jmp
adc
shl
adc
push
bound
mov
push
or
jl
into
(bad)
fsubr
adc
mov
mov
imul
cmc
ror
into
adc
jmp
dec
cld
mov
mov
mov
and
ins
mov
loopne
push
ja
movs
jno
dec
add
out
mov
jo
sbb
les
(bad)
pop
sti
mov
or
dec
shr
mov
test
inc
aas
popf
adc
mov
movs
cs
(bad)
std
mov
push
and
pushf
rcr
fldcw
push
fld
xor
outs
movs
sahf
sub
cmps
ds
push
not
ficom
jp
daa
mov
in
loope
cmp
mov
push
dec
pushf
jmp
jmp
stos
and
fsub
xchg
scas
sbb
and
inc
cmps
shl
fdivr
fld
(bad)
dec
in
in
or
push
and
inc
fisttp
mov
rol
xchg
jb
mov
test
pop
cmps
dec
and
in
test
js
xchg
mov
or
cmps
(bad)
mov
call
add
jae
call
fmul
fwait
in
mov
push
mov
call
mov
add
xchg
lds
add
xchg
sbb
add
cmp
mov
shl
sbb
loope
int3
sbb
xchg
aaa
mov
xor
jns
cmps
or
mov
fld
ins
clc
sbb
pop
and
add
xor
mov
jmp
push
jmp
(bad)
call
xchg
fwait
mov
mov
jnp
sub
jo
xlat
xchg
inc
mov
cmps
sbb
dec
jmp
push
and
mov
out
mov
and
sub
inc
(bad)
ins
test
sub
push
mov
push
jmp
push
xchg
repz
or
clc
stos
(bad)
mov
ret
in
lods
push
scas
jp
test
mov
jmp
jmp
xchg
ret
inc
test
cs
arpl
jg
push
in
pop
aas
sub
jbe
popa
(bad)
loop
mov
stos
add
xchg
clc
cmp
pop
push
stos
cdq
mov
push
(bad)
movs
pop
repz
jecxz
add
lods
or
push
dec
fisttp
mov
jmp
dec
out
pusha
cmp
push
lods
mov
cmp
xor
xor
sahf
hlt
or
std
call
aas
ins
or
xchg
xchg
and
in
xor
xchg
push
int3
fadd
mov
rcr
xchg
mov
nop
sti
mov
sub
jne
(bad)
inc
sub
ret
add
fnstcw
sti
mov
adc
sub
dec
xchg
mov
ins
fwait
mov
pop
push
adc
jnp
sub
in
leave
jae
(bad)
and
or
es
icebp
xchg
in
std
(bad)
jl
cmps
shl
aad
and
pop
test
rcl
cmps
xor
and
pop
ss
sbb
push
or
out
cmc
jl
mov
add
test
pop
mov
cmps
int
jo
aaa
push
cmp
hlt
jecxz
cmc
fwait
inc
push
mov
or
sbb
test
jne
out
or
adc
push
int3
adc
inc
fadd
sahf
sub
std
dec
jmp
pop
jp
cmp
call
or
fs
cmp
jne
repz
test
rcl
outs
jge
iret
ja
hlt
pop
in
push
jne
je
sub
xchg
ss
mov
jg
mov
icebp
fadd
(bad)
push
jg
jne
in
js
pop
ror
cmc
daa
xchg
mov
pop
sbb
or
xchg
ss
mov
mov
clc
mov
int3
jns
outs
(bad)
lock
icebp
ins
cmp
dec
add
cmp
sub
or
mov
mov
pop
and
fst
js
adc
scas
mov
adc
inc
cmps
push
daa
sub
and
inc
call
mov
test
jecxz
ss
mov
adc
jno
imul
dec
jnp
or
mov
cwde
mov
cmp
cmp
retf
inc
daa
rcl
sti
mov
xchg
pop
mov
inc
or
jmp
xchg
push
scas
clc
jb
pop
ret
dec
jmp
lock
sub
mov
int
mov
shr
adc
pop
xchg
popa
xchg
out
idiv
xchg
and
pop
sub
mov
(bad)
mov
ffreep
and
lds
div
sub
mov
sub
fmulp
(bad)
je
add
js
iret
out
lods
push
mov
jge
cdq
xor
jns
adc
int3
(bad)
mov
out
adc
mov
xchg
xor
ins
push
xor
popf
dec
cwde
imul
inc
stos
push
mov
(bad)
ret
cdq
pop
xchg
sub
mov
jne
jg
push
adc
sbb
xchg
out
lds
adc
xchg
out
inc
add
fnstsw
push
arpl
xchg
dec
mov
and
bsf
das
inc
mov
add
es
ss
dec
popa
mov
mov
dec
clc
rep
sbb
pop
(bad)
cmp
(bad)
jl
loopne
fs
(bad)
retf
test
mov
xor
sub
xor
cli
shl
adc
cld
cmp
push
pop
scas
adc
xchg
sbb
pop
scas
lea
adc
mov
into
int3
adc
rol
cmc
xchg
test
or
retf
jl
es
(bad)
fisttp
iret
psubd
or
scas
mov
pushf
fwait
lds
jp
push
movs
jno
or
adc
fstp
stos
mov
push
pop
movs
aaa
inc
dec
shr
fdiv
cmp
inc
enter
mov
arpl
push
mov
and
scas
nop
pop
das
lahf
mov
xlat
fadd
jmp
scas
pop
cli
js
out
xor
pusha
push
jmp
mov
mov
xor
mov
xor
dec
fstp
and
add
inc
fild
enter
mov
pop
xor
xchg
call
dec
cwde
push
ret
ja
pop
scas
pusha
mov
sbb
div
sub
xchg
data16
xor
xchg
shl
fwait
push
ins
in
retf
dec
xchg
aad
je
mov
cmps
imul
data16
je
dec
xchg
stos
mov
pop
arpl
jbe
cld
adc
sbb
sbb
shl
dec
sti
pop
inc
mov
(bad)
pop
sub
add
inc
je
loop
loope
fisttp
mov
icebp
mov
push
leave
stc
dec
pop
or
mov
imul
jge
ins
dec
fdivr
retf
jo
push
pop
scas
mov
test
test
fiadd
sub
(bad)
cmp
mov
xchg
jae
dec
xor
into
mov
xor
les
lock
mov
push
loope
sbb
and
std
mov
(bad)
inc
jmp
ret
xchg
add
icebp
movs
jmp
nop
mov
fidivr
aaa
inc
adc
or
jbe
ins
jecxz
es
imul
lock
es
std
(bad)
adc
in
in
sahf
jo
(bad)
and
stc
adc
ret
jl
lods
shl
mov
addr16
cmc
jp
adc
test
mov
fbld
daa
xor
scas
or
inc
add
sbb
adc
adc
mov
sub
cmp
or
scas
cli
repnz
cs
jl
or
arpl
pop
adc
xchg
or
adc
cmp
scas
pop
jle
pop
adc
mov
add
adc
jo
fsub
sbb
push
dec
aas
int
mov
mov
pop
(bad)
adc
and
sti
movs
pop
sub
call
in
addr16
adc
cmp
mov
add
cmps
sbb
cmp
mov
inc
mov
test
sub
mov
jmp
jbe
stos
dec
mov
lahf
jns
rcr
sub
sbb
sbb
xchg
add
call
inc
jl
dec
sbb
jo
aad
cmp
sub
or
push
xor
push
cld
or
sbb
outs
sbb
pusha
iret
bound
mov
fwait
ret
adc
xor
ss
adc
in
cmp
pop
cmps
inc
push
movs
mov
fdivr
movs
rcl
sbb
push
cmp
fsubr
sub
and
xlat
push
mov
pop
push
jle
add
push
test
mov
add
sbb
xor
cwde
cmp
jns
xchg
and
push
push
pusha
jle
push
xor
repnz
xor
or
and
cmp
or
fisubr
(bad)
push
sbb
mov
ret
outs
loop
loope
jbe
aad
add
xor
out
and
call
add
xchg
mov
stc
lods
mov
inc
dec
je
pop
push
jge
sbb
mov
xchg
inc
aas
lods
adc
add
gs
sub
push
xchg
xchg
mov
pop
mov
lock
ret
jo
aas
cmps
adc
call
sub
pop
push
iret
mov
dec
cmp
mov
and
adc
or
mov
adc
cwde
jmp
mov
lock
cli
and
cdq
sbb
das
call
cmp
push
inc
pop
mov
xor
or
sahf
test
loope
loop
mov
cmp
jo
and
cmp
push
(bad)
jae
and
out
test
clc
cld
cmps
icebp
(bad)
mov
sbb
fs
neg
jecxz
mov
leave
jns
or
push
std
or
ret
test
xchg
dec
pop
daa
xor
mov
pop
out
fidiv
mov
inc
push
ret
push
repnz
imul
enter
jp
adc
xor
xlat
xchg
pop
xchg
xchg
ja
enter
add
out
ins
push
xor
jp
mov
xor
jecxz
fsubr
loope
into
sahf
mov
sbb
cmp
loopne
popf
pushf
(bad)
pop
aad
test
inc
movs
ror
enter
xchg
and
enter
cmp
jl
mov
inc
stos
ss
loop
imul
jp
cwde
out
jo
push
inc
push
sub
jns
xchg
adc
cmp
mov
cmp
ret
push
xlat
mov
sub
push
data16
mov
dec
sub
fidivr
jmp
sub
mov
sbb
outs
iret
out
inc
push
jnp
dec
in
mov
xchg
outs
sti
das
jae
mov
test
mov
out
lock
and
(bad)
or
lods
inc
xor
not
iret
lods
cmc
mov
lds
scas
push
cmc
mov
add
or
dec
call
jns
nop
inc
push
push
es
adc
fistp
xchg
out
out
jae
or
cld
or
push
pop
xchg
sub
sub
popf
add
xor
mov
mov
mov
or
cwde
pop
sbb
xlat
push
std
div
test
sub
dec
push
ror
and
inc
mov
pop
xor
push
cmps
sub
xor
scas
arpl
jno
lahf
les
or
jb
fmul
dec
(bad)
call
sbb
rcl
out
retf
cmp
scas
mov
outs
or
jae
ror
movs
push
mov
loopne
ds
out
ins
stos
mov
ins
scas
addr16
ins
mov
cmp
mov
into
out
retf
fsubr
retf
sub
repz
mov
xor
stos
ret
sub
in
mov
xchg
xchg
or
mov
int3
out
inc
pop
movsx
jo
push
cld
sbb
mov
xchg
cmp
scas
repnz
cmp
leave
ret
into
mov
xlat
mov
loope
ret
mov
je
jp
(bad)
outs
mov
lea
cdq
shr
add
jmp
mov
popa
gs
or
and
std
mov
ror
call
arpl
scas
aaa
loope
inc
ja
lods
shr
int
pop
sbb
inc
push
in
mov
jns
xor
mov
pop
cmp
cwde
movs
sbb
push
fstp
leave
mov
inc
push
ss
xchg
dec
cmp
or
adc
out
xchg
cmp
loope
and
repnz
push
dec
mov
jle
sti
enter
(bad)
pop
and
sub
cmc
mov
jns
inc
lods
dec
scas
das
in
test
mov
in
out
adc
inc
sub
or
adc
sub
add
sbb
cmp
arpl
push
and
cld
(bad)
xor
imul
outs
outs
mov
adc
iret
popa
dec
jns
fbstp
cmovno
xchg
mov
add
popa
scas
mov
clc
xor
jnp
dec
add
pop
cdq
repnz
cmp
jecxz
jp
cli
jo
xor
mov
mov
jns
retf
(bad)
jmp
dec
dec
mov
add
or
movs
xchg
in
jg
fsubr
xor
movs
(bad)
movs
mov
adc
icebp
lods
pop
adc
pop
imul
sbb
sub
vunpckhpd
adc
pop
dec
sub
pop
ror
xor
cmp
pusha
je
mov
fs
sub
rol
sbb
mov
push
xchg
pop
in
mov
and
mov
aam
push
(bad)
inc
mov
pop
or
ss
outs
mov
push
add
shl
adc
mul
jle
xchg
jno
es
push
call
popa
out
mov
pop
cmp
rcr
pop
call
xchg
jb
pushf
iret
fistp
ja
push
out
aad
mov
jb
sbb
leave
add
dec
(bad)
fwait
leave
and
pop
jle
in
xlat
dec
sti
sar
bound
sub
loop
(bad)
jne
adc
mov
mov
xchg
mov
push
cmp
adc
fs
adc
push
popa
and
adc
dec
cmp
sbb
or
mov
mov
push
add
gs
(bad)
mov
fadd
pusha
sahf
rol
mov
xchg
xor
jge
add
out
clc
or
xor
mov
sbb
cmc
cdq
adc
test
outs
cmp
aad
mov
popf
inc
xchg
popf
imul
inc
int3
push
ss
fimul
test
scas
bound
or
add
or
stc
dec
pushfw
movs
xchg
in
bnd
imul
push
or
popa
lea
push
ss
push
iret
pop
es
inc
dec
scas
sti
push
sahf
ja
stc
movs
(bad)
fadd
pushf
ret
jne
xor
or
inc
pushf
sbb
cld
mov
(bad)
sahf
cmp
iret
jmp
mov
xor
xchg
mov
mov
mov
clc
fld
out
addr16
lds
mov
mov
inc
addr16
ins
push
mov
data16
iret
popa
outs
das
repz
push
ins
int3
push
lock
xchg
cmp
push
leave
scas
cmc
aad
dec
fst
fwait
aas
arpl
cmp
cmp
mov
cmps
xchg
retf
or
inc
dec
stc
ins
or
adc
fisttp
adc
mov
pop
arpl
bound
sbb
pop
fidiv
xchg
fistp
cs
shl
sub
sar
(bad)
sbb
lock
frstor
cmp
push
jae
push
and
jmp
inc
mov
enter
xor
je
jp
sbb
jo
gs
pop
mov
shl
jne
and
movs
imul
pushf
mov
retf
outs
gs
pusha
mov
mov
ror
or
pop
push
inc
out
xor
mov
and
inc
addr16
(bad)
cld
xor
ret
inc
lahf
mov
xor
ja
push
stos
scas
xchg
dec
in
sub
sub
jns
adc
es
icebp
mov
cwde
xchg
retf
bound
ins
fcmovb
dec
mov
inc
push
popf
sahf
ror
retf
adc
mov
div
xor
mov
lahf
lea
add
jmp
mov
xor
sbb
shl
aam
fild
sbb
stos
xor
mov
setnp
and
rol
mov
pushf
jg
rcl
gs
push
pop
jbe
and
inc
sbb
adc
dec
daa
aad
rcr
out
xchg
cmp
pop
lods
fst
push
int3
ss
jne
mov
jp
jae
xor
stc
cmp
mov
das
fwait
add
mov
xchg
cmc
push
lock
hlt
mov
stc
push
cmp
je
jle
sbb
mov
pcmpeqw
(bad)
cli
push
cmp
rcr
neg
(bad)
ss
int
data16
out
clc
lock
cli
jecxz
jb
push
mov
scas
in
pushf
loope
(bad)
hlt
add
repz
mov
xor
out
xchg
xchg
inc
xchg
inc
lods
adc
imul
call
das
push
push
(bad)
jle
push
inc
cmp
jmp
in
push
and
xchg
movs
push
icebp
or
mov
add
pop
jbe
sbb
adc
sub
nop
imul
mov
adc
fisub
rol
or
call
push
mov
out
test
les
adc
push
adc
repnz
imul
hlt
dec
in
pop
mov
xlat
scas
fbstp
out
aam
aad
or
sub
jp
inc
loope
cmp
ret
sub
scas
xchg
mov
sub
bound
or
ds
cmps
and
out
jg
div
dec
pop
hlt
pop
sar
jmp
shr
push
je
mov
imul
pop
mov
inc
cmp
cld
inc
fwait
cs
sub
loop
mov
push
lahf
popf
jns
and
out
(bad)
mov
xor
pop
jae
repnz
popa
test
imul
lds
rcr
sbb
xchg
and
mov
scas
jnp
(bad)
xchg
or
stc
mov
data16
repnz
sub
add
pop
(bad)
dec
jp
out
mov
out
and
sub
inc
dec
cmp
pop
jmp
arpl
fcmovne
mov
nop
or
and
repz
lea
jecxz
cmp
add
or
xchg
adc
xchg
icebp
mov
or
(bad)
stc
sub
cmp
jns
gs
cmp
daa
(bad)
aas
addr16
fmul
imul
mov
popa
ror
(bad)
sahf
xchg
sub
xor
sub
pop
or
pop
mov
mov
inc
in
sahf
es
jl
test
mov
mov
es
mov
int3
inc
int
lds
push
or
movs
add
sbb
push
lock
repnz
xchg
lock
gs
inc
ins
mov
sub
mov
cmp
hlt
mov
dec
adc
mov
mov
aam
clc
push
pushf
pusha
mov
or
jmp
adc
pushf
lds
repz
rcl
mov
mov
xchg
or
jl
dec
test
mov
sahf
shl
ins
cld
add
repz
mov
sti
in
pushf
inc
sbb
cmp
xlat
imul
pop
push
into
cmp
mov
xchg
scas
test
lock
and
inc
ror
inc
nop
mov
dec
lahf
inc
icebp
outs
cmps
jae
pusha
mov
ins
adc
xchg
push
push
and
and
xchg
in
cmp
shl
loopne
loop
mov
addr16
(bad)
icebp
mov
cmps
(bad)
jmp
xchg
mov
(bad)
pop
in
retf
aaa
lods
shl
lods
push
push
fwait
sub
dec
or
jo
adc
mov
sub
retf
mov
dec
lea
retf
push
fs
pop
fld
mov
call
clc
sbb
lds
mov
mov
in
test
dec
out
or
jecxz
jecxz
int3
and
and
sbb
retf
(bad)
in
add
sbb
xchg
mov
sbb
xchg
sub
add
push
cmps
mov
lea
add
(bad)
push
popf
mov
sub
jo
cmp
adc
push
mov
push
std
aas
add
pop
mov
cld
adc
dec
push
das
rcl
test
stc
or
push
scas
xor
sbb
adc
adc
dec
adc
pop
icebp
and
retf
xchg
adc
add
jnp
add
adc
leave
cmps
cmp
push
enter
repz
(bad)
retf
sar
stos
(bad)
mov
adc
into
push
call
repnz
xchg
inc
loopne
test
dec
icebp
push
sbb
adc
(bad)
mov
shl
mov
sub
sub
cmps
push
pop
inc
sub
idiv
mov
int
adc
mov
jg
push
in
or
jae
out
loopne
stc
stc
jae
sbb
or
cmp
pop
cld
inc
sub
cmp
or
sahf
jg
mov
adc
cmp
pop
mov
dec
jo
std
adc
inc
lods
xchg
aad
xchg
fistp
pop
lock
pop
mov
aad
imul
call
lods
mov
or
jmp
cdq
xor
pop
(bad)
iret
xor
xor
data16
lahf
adc
sub
or
(bad)
cli
imul
lahf
push
loop
imul
adc
out
or
dec
mov
pusha
ds
xor
out
xchg
adc
inc
ret
lods
push
pop
mov
aas
and
sub
xor
mov
push
adc
js
sbb
mov
js
cld
add
outs
into
cmp
cs
shr
sti
xchg
in
xchg
jns
imul
mov
fstp
rol
loop
dec
dec
mov
test
mov
test
cs
ins
mov
scas
fimul
sbb
test
shl
pop
mov
addr16
or
lods
fistp
push
xor
adc
push
fwait
ds
gs
cwde
pop
bound
call
es
mov
stos
inc
enter
sbb
adc
jp
popa
loop
sahf
hlt
mov
adc
mov
shl
fld
jg
ds
mov
mov
cmp
inc
pop
mov
lods
sbb
xchg
push
sub
aaa
das
dec
fdiv
fwait
and
xchg
add
out
repnz
loop
stos
dec
es
in
or
inc
ret
ja
or
iret
les
test
or
loope
push
inc
scas
sub
sbb
or
in
jae
ja
sbb
outs
or
ret
mov
mov
dec
mov
sub
repnz
iret
cld
push
ss
mov
xchg
fcmovne
popf
call
leave
dec
push
fild
mov
jmp
jb
aas
test
push
dec
adc
ss
push
jg
ret
rol
inc
push
adc
xor
sub
cld
bound
mov
pop
sahf
jmp
outs
mov
shr
not
ja
enter
jnp
cwde
out
(bad)
jmp
push
and
jnp
fs
pop
adc
and
sub
cmp
inc
js
jmp
cmp
cmp
sbb
cmp
jb
push
mov
movs
lock
sbb
in
sub
fwait
repz
jle
add
out
std
inc
mov
sub
shr
sbb
xchg
xchg
ds
clc
out
ja
out
add
pusha
pop
les
cmp
mov
and
mov
push
cwde
sahf
xor
ins
js
xor
cmps
xor
sbb
adc
or
jns
pushf
ins
sub
and
icebp
rol
leave
sbb
add
xor
out
es
xchg
sub
jp
inc
push
cmp
cmp
pop
scas
and
std
(bad)
js
test
push
stc
mov
bound
mov
out
das
dec
test
cmp
fidivr
push
push
sbb
test
jns
inc
xor
dec
jmp
push
add
push
popf
dec
fwait
repz
dec
setle
pop
int
xor
xchg
jge
lds
mov
push
inc
and
ds
cmc
push
xor
mov
pop
sub
ins
jecxz
sub
repnz
cdq
(bad)
aaa
add
ja
data16
jmp
adc
sub
lods
sbb
or
icebp
bound
shl
jl
sub
cmps
pop
jbe
pop
mov
out
fwait
add
mov
mov
jmp
call
ja
xchg
mov
clc
in
push
mov
cld
sti
mov
mov
lds
fnstcw
in
fs
mov
pop
aam
inc
arpl
je
aam
and
pop
imul
inc
inc
adc
mov
ins
clc
in
push
(bad)
iret
fidivr
mov
lods
push
pop
ja
mov
lock
or
inc
inc
out
test
retf
sbb
jecxz
int3
imul
fldenv
ds
xchg
pop
imul
ss
(bad)
dec
int3
pop
out
or
sub
xor
xchg
xchg
call
aas
mov
mov
sub
fstp
adc
shl
pop
push
mov
cmp
popf
lock
(bad)
cmc
imul
aas
inc
xor
xor
sub
in
popf
or
sub
dec
clc
jnp
fxch
in
int3
inc
dec
add
jmp
(bad)
sbb
add
call
test
push
test
(bad)
xor
fidiv
xor
sub
shr
sbb
xor
dec
dec
lds
mov
loopne
pop
loope
xchg
sbb
aaa
cs
sub
inc
scas
jg
ins
mov
xor
xchg
(bad)
adc
xor
popf
and
fdiv
sub
xor
aaa
aad
mov
jecxz
popa
pop
enter
xchg
push
inc
pop
pusha
lods
xor
push
mov
scas
scas
repnz
fwait
scas
loopne
popa
pop
jg
dec
adc
rcr
xor
iret
les
and
ds
mov
test
movs
push
push
loop
sub
sti
add
loope
push
scas
sbb
retf
cmp
repnz
jmp
add
and
outs
or
stos
jo
cld
xchg
repz
outs
push
push
test
inc
or
icebp
jl
and
mov
or
dec
dec
loop
mov
inc
(bad)
fbstp
push
dec
add
repnz
loopne
out
mov
fisttp
(bad)
fdivr
jmp
add
push
pop
scas
cld
xchg
mov
rcr
pop
cmp
fldenv
cmp
pop
shl
adc
stos
popa
and
cmp
jae
test
or
(bad)
aad
and
(bad)
(bad)
or
and
std
push
dec
fld
xchg
xchg
(bad)
pop
popa
add
xchg
inc
sbb
jl
fsub
(bad)
fdivr
aaa
and
in
aaa
or
ficomp
fs
outs
ret
popf
(bad)
fsubr
pop
hlt
add
xchg
mov
add
movs
xor
push
arpl
fsub
mov
loope
xchg
mov
and
test
movs
sbb
pop
mov
mov
call
and
pop
xlat
xchg
ficom
and
je
jb
cwde
aad
jmp
cmp
dec
inc
sub
add
pop
sbb
dec
test
(bad)
iret
jge
rcl
retf
aam
dec
(bad)
arpl
call
daa
mov
push
stos
jne
imul
rol
cs
fcom
out
add
rcl
adc
aam
mov
ror
fdivr
(bad)
int3
cmps
int3
cs
hlt
cmp
stos
xchg
div
sub
dec
loop
(bad)
clc
ret
sti
jp
loope
imul
mov
sti
xor
inc
dec
nop
hlt
pop
mov
xchg
test
mov
popa
out
test
inc
aas
std
pop
xor
pop
aad
outs
or
daa
cwde
sahf
jp
cmp
xor
shl
push
xchg
mov
xchg
xchg
sub
or
mov
mov
pop
lahf
sbb
add
cmp
xlat
ja
cmp
leave
cdq
out
aam
scas
stos
stos
mov
mov
mov
inc
(bad)
shr
enter
cmps
gs
enter
ins
test
pop
repz
xor
mov
in
es
call
out
mov
lea
add
xchg
cmps
sti
sbb
or
jo
push
pop
neg
fcom
ss
xor
xlat
inc
jb
and
call
push
(bad)
mov
lea
pop
fwait
push
pop
mov
and
stos
popf
aam
dec
fs
and
in
inc
jnp
sbb
in
xchg
fcomp
dec
lods
lods
push
stos
push
test
ss
push
fdivr
sbb
popa
and
sub
in
dec
ret
aaa
xchg
mov
push
push
fsub
aad
push
and
push
test
or
pop
ins
pushf
adc
push
mov
xchg
xor
cmovle
sbb
pusha
mov
arpl
arpl
cmps
xchg
jle
jmp
inc
out
aam
cmp
neg
ret
in
(bad)
ins
xchg
mov
int
mov
lds
hlt
sub
sub
push
popa
fwait
mov
cdq
movs
pop
arpl
cmp
out
mov
js
mov
cmps
out
ins
dec
mov
dec
or
push
jne
jns
mov
ss
sbb
sahf
inc
mov
inc
ins
jmp
movs
(bad)
pop
jp
test
pop
out
mov
lods
cmp
push
nop
sbb
adc
dec
or
mov
mov
mov
sbb
xlat
xlat
cmp
ins
mov
adc
mov
pop
mov
xchg
inc
arpl
adc
and
lods
rol
sbb
adc
jae
(bad)
pop
mov
out
cs
sti
push
sub
test
call
push
(bad)
mov
inc
pop
shl
inc
push
or
or
and
sbb
stos
xchg
xor
pop
shl
into
mov
push
imul
xchg
sbb
jae
arpl
into
aam
and
retf
push
mov
test
ficomp
jg
adc
sub
pop
add
mov
sti
mov
cmp
mov
xor
and
or
dec
pop
call
sbb
fcmove
int
lds
inc
out
inc
inc
mov
outs
int3
test
lahf
dec
sub
push
jns
sti
or
shr
jp
aam
sub
outs
sbb
(bad)
fimul
stc
mov
cmp
adc
in
dec
mov
mov
xchg
fidiv
leave
add
or
fstp
outs
jae
dec
xchg
gs
pusha
adc
les
(bad)
je
mov
leave
aas
loop
sub
sbb
out
sbb
loopne
std
cwde
pop
enter
mov
push
nop
mov
push
jmp
adc
iret
adc
dec
mov
push
jecxz
adc
aas
in
outs
mov
dec
test
lds
scas
int3
cmp
pop
xchg
or
add
push
mov
inc
push
push
fst
(bad)
not
test
mov
idiv
mov
neg
jecxz
mov
ret
(bad)
xchg
push
test
xchg
hlt
inc
jno
sbb
in
pop
(bad)
neg
loop
sbb
or
sar
repnz
push
mov
(bad)
aad
xchg
cmp
mov
repnz
push
mov
(bad)
push
arpl
push
jae
repz
adc
mov
inc
ss
retf
push
pop
aas
pop
or
xchg
outs
std
popf
popf
dec
cwde
arpl
(bad)
mov
sahf
sub
icebp
mov
dec
pop
out
xchg
mov
and
cmp
mov
mov
fnstsw
mov
test
arpl
pop
movs
push
sbb
push
movs
mov
push
les
imul
mov
jno
add
daa
hlt
xor
mov
shl
mov
jb
xor
add
cmps
imul
out
fdivp
push
push
test
pop
mov
mov
movs
lods
mov
mov
pop
div
test
out
fidivr
js
mov
scas
retf
popa
js
aas
xchg
scas
(bad)
loop
lods
pop
(bad)
in
gs
adc
retf
cmp
pop
lock
in
cmc
mov
data16
mov
dec
inc
ins
xchg
jb
and
rol
sbb
movs
xor
mov
cmc
loop
mov
ins
pop
add
es
push
adc
fsubr
stos
cmps
add
sbb
adc
push
sti
sbb
jne
add
int
add
cs
sub
nop
mov
pop
cmp
mov
pop
pop
popf
mov
adc
sub
and
(bad)
pop
push
add
jp
aam
xchg
les
jo
dec
fnsave
pop
mov
inc
pop
xor
sub
div
xor
(bad)
repz
dec
mov
jmp
std
sub
fcmovnu
fdiv
inc
adc
daa
push
(bad)
stos
out
stos
out
inc
or
mov
pushf
lods
mov
fyl2x
add
call
jo
nop
pop
sbb
push
shl
ja
sub
adc
test
and
retf
test
mov
into
fs
lds
lods
mov
jmp
push
sub
dec
xlat
pop
outs
leave
add
sbb
outs
ds
mov
out
bound
sbb
lods
inc
ret
fbld
mov
pop
sub
fidivr
xchg
(bad)
inc
or
or
mov
add
or
jo
sbb
lea
test
push
push
jbe
mov
mov
(bad)
gs
pop
nop
xchg
push
imul
push
cli
mov
mov
sahf
call
or
int3
enter
mov
pop
push
inc
(bad)
sub
and
xchg
(bad)
popf
mov
add
ds
xor
(bad)
fucomip
loop
pop
sbb
inc
xchg
pusha
inc
or
add
inc
add
or
mov
loop
fucomi
cmp
das
je
(bad)
lock
pop
pop
sbb
sub
(bad)
enter
bound
add
inc
xor
fld
jle
std
repnz
leave
pop
movs
bound
pop
retf
jmp
jge
hlt
sub
sbb
daa
les
add
jae
fnstenv
push
call
outs
dec
jge
xchg
pop
mov
and
dec
scas
cmp
cmps
je
(bad)
sub
lea
ins
sub
das
add
clc
jecxz
sbb
call
in
popf
mov
(bad)
sbb
sbb
es
movs
cmp
jno
fnstsw
jg
and
mov
jbe
ss
pop
ret
fadd
cmp
mov
push
test
out
pop
repnz
jno
and
cmps
push
adc
and
sub
xor
or
xchg
or
js
out
and
js
test
or
vmovntdq
mov
fcomp
mov
pop
cmps
inc
lods
jo
mov
into
add
das
(bad)
jmp
inc
pop
push
mov
aaa
(bad)
jns
int
push
and
push
pop
outs
pushf
mov
xor
jae
cmp
dec
scas
pop
mov
std
mov
movs
dec
fs
xor
in
sub
arpl
gs
ss
push
add
xor
mov
push
cmp
test
out
inc
pcmpeqw
imul
sub
xchg
push
shl
xchg
fs
or
hlt
bound
test
jb
jb
xor
iret
lods
xor
and
inc
sti
push
push
lds
sbb
push
xor
mov
jbe
cmp
or
(bad)
imul
mov
dec
hlt
push
cmp
or
(bad)
jl
ret
cmp
fidivr
cmp
inc
cs
shl
and
dec
jg
sbb
ja
scas
test
xchg
lea
jg
imul
stos
call
(bad)
stc
pop
push
add
adc
ret
bound
mov
push
out
push
add
adc
aad
and
retf
xor
mov
inc
mov
pop
xchg
mov
(bad)
xchg
adc
or
mov
dec
jecxz
mov
cmp
adc
add
cwde
test
popa
pushf
(bad)
fcmove
test
jb
popf
mov
or
xor
ror
add
mov
mov
mov
fs
sub
jg
mov
mov
adc
int
xchg
(bad)
(bad)
imul
mov
std
call
clc
leave
push
push
cmp
dec
mov
(bad)
imul
dec
out
push
ss
mov
sub
hlt
ret
cmp
inc
push
pop
outs
push
cmp
xor
push
fisttp
xchg
popf
gs
not
arpl
call
xlat
mov
mov
dec
xchg
jo
(bad)
pop
push
lock
clc
adc
xor
aad
inc
adc
xchg
pop
jg
outs
jge
sti
adc
mov
in
sti
pop
aaa
icebp
mov
test
mov
stos
outs
xor
lods
xchg
mov
repnz
jg
or
mov
xor
push
retf
(bad)
addr16
add
aaa
cmp
xor
jns
jae
iret
out
jge
pop
movs
imul
ds
icebp
xor
fiadd
pushf
add
mov
nop
in
repz
dec
jl
(bad)
adc
sub
test
push
(bad)
out
cmp
bound
add
bound
dec
fisttp
mov
jmp
jno
jb
dec
dec
outs
dec
inc
add
dec
push
movs
push
paddusw
push
int3
and
out
sub
pop
in
lds
hlt
or
sbb
(bad)
stc
xchg
rcl
sbb
gs
je
not
js
cs
xor
add
into
sbb
ja
pop
lods
mov
add
into
ins
push
push
psrlq
in
(bad)
cs
stos
mov
aad
add
cmps
addr16
cdq
adc
icebp
ds
(bad)
xor
shl
or
stos
or
iret
sbb
(bad)
and
cs
jle
xchg
js
push
fldcw
jp
sub
fcmove
icebp
mov
sub
pop
aam
or
pop
add
aaa
dec
imul
cmp
out
mov
and
mov
(bad)
jp
push
repz
add
push
lds
xlat
dec
xor
cmp
(bad)
fwait
push
in
and
inc
outs
das
test
int3
mov
add
imul
push
and
xchg
mov
(bad)
in
mov
and
stos
stc
or
cdq
retf
or
rcl
push
in
cld
dec
mov
dec
or
popa
retf
into
cmc
leave
lock
and
add
jno
sub
pop
push
(bad)
xchg
push
cmovbe
jle
test
mov
int
sbb
xor
sahf
and
push
or
xor
scas
lahf
jecxz
xor
or
mov
jbe
jo
cmp
adc
cmp
pop
fimul
test
mov
mov
jne
fdiv
jmp
xor
in
lds
jns
mov
dec
lods
ror
mov
fisub
inc
rcl
mov
jmp
push
sub
js
dec
or
sbb
add
dec
sbb
hlt
jnp
adc
lock
pop
gs
and
test
push
xchg
test
or
jno
test
push
mov
movs
xor
jb
add
jne
dec
xor
shl
and
mul
outs
adc
inc
outs
cs
dec
data16
xor
cmps
sbb
ss
dec
xor
imul
cmps
lods
xchg
je
or
mov
dec
repnz
xchg
push
int3
fistp
loopne
add
jae
ror
neg
(bad)
les
or
pop
push
(bad)
or
jp
mov
push
psadbw
out
jb
cwde
push
imul
movs
ss
xchg
push
inc
cmps
mov
adc
lahf
shl
lods
mov
sbb
mov
xchg
inc
dec
xor
test
mov
std
mov
pushf
xchg
pushf
ret
inc
es
aas
in
cmc
push
retf
add
push
mov
and
xlat
and
xchg
cmp
lock
pop
cld
dec
clc
cld
inc
je
or
dec
jb
loopne
(bad)
inc
icebp
dec
mov
cmc
mov
call
ins
dec
repz
into
dec
adc
mov
inc
mov
push
call
sbb
xchg
add
fisubr
or
mov
inc
pop
inc
loop
cld
ins
ds
inc
adc
pushf
mov
fadd
mov
mov
lock
mov
scas
mov
repnz
out
dec
pop
xor
pop
jbe
imul
retf
mov
pusha
jp
sbb
rcl
add
out
cmps
mov
sbb
lock
pop
jbe
repnz
ds
mov
push
and
mov
xchg
fs
cmovae
sbb
and
or
and
inc
sub
movs
ficom
and
push
inc
mov
pop
mov
and
xor
dec
pop
jae
cmp
enter
movs
imul
arpl
or
rol
call
push
fist
jae
xor
nop
xchg
mov
mov
mov
test
mov
push
cld
imul
iret
sub
jae
clc
pop
lea
push
xbegin
out
(bad)
lea
adc
aad
or
enter
imul
scas
mov
cmp
push
test
dec
cmp
mov
xor
xor
mov
into
(bad)
dec
xchg
sbb
out
adc
jl
push
mov
call
xchg
and
adc
cmc
test
clc
jl
je
mov
scas
loope
shl
adc
stc
or
stos
inc
cpuid
(bad)
fcomp
jbe
cld
jp
inc
ds
mov
mov
jo
loopne
nop
mov
test
jge
cmp
aam
(bad)
jns
arpl
mov
dec
inc
addr16
popa
(bad)
(bad)
imul
ret
nop
movs
pop
lock
imul
call
push
loope
sbb
mov
jne
mov
jge
jno
call
jmp
adc
pusha
in
mov
inc
add
movs
xlat
add
mov
pop
mov
mov
imul
and
retf
push
clc
gs
cld
jnp
stc
imul
add
(bad)
sti
pusha
popa
dec
sar
sub
inc
mov
add
int
iret
cmps
jmp
dec
stc
sub
call
jmp
aas
imul
adc
inc
xor
push
inc
sub
push
shr
loope
jne
cmps
mov
xlat
popa
mov
adc
or
popf
add
ss
add
sub
int3
mov
xchg
sub
jno
aaa
es
pop
lock
mov
das
mov
in
out
es
fistp
ret
shl
pop
xor
jno
stos
test
hlt
je
push
xor
jnp
fcmovnu
or
push
jl
ins
xor
pop
pop
xchg
mov
loop
loope
stos
or
in
inc
ret
cli
add
xor
aad
stos
fdivr
out
xchg
mov
mov
adc
cmp
jecxz
retf
ins
retf
rcl
cmp
mov
bound
push
mov
add
mov
icebp
jecxz
mov
test
retf
xor
cmp
mov
(bad)
adc
inc
aaa
lahf
jae
mov
cmps
in
push
ins
sbb
pop
(bad)
iret
fbstp
icebp
cwde
movs
mov
xchg
test
pop
cmp
xor
sub
push
xchg
push
clc
inc
sub
mov
movs
inc
dec
xchg
bound
ds
(bad)
jge
and
mov
push
in
das
and
test
pop
stos
mov
mov
popf
sbb
pop
cdq
mov
sti
xor
rcr
fidiv
mov
lods
xor
int3
adc
shl
sub
ins
push
cmp
call
out
push
adc
push
or
cmp
(bad)
adc
cwde
inc
pop
inc
push
push
retf
test
xchg
psllq
push
fdiv
sub
sub
dec
imul
ror
imul
addr16
push
outs
stc
xor
das
ds
cld
sbb
jge
mov
dec
ja
mov
imul
mov
cmc
ds
jns
mov
(bad)
nop
cmp
cld
mov
or
test
sti
daa
in
cmp
inc
in
mov
(bad)
cmp
and
out
les
mov
ss
lds
inc
scas
push
fwait
test
jp
test
cmps
movs
jg
loop
shl
sub
mov
xchg
das
mov
shl
pop
xchg
adc
cmps
jl
cmp
dec
pop
aad
das
jecxz
shl
ror
iret
mov
sub
adc
js
pop
cld
repz
data16
mov
jns
mov
xor
mov
jae
in
arpl
pusha
in
push
shr
fmul
dec
jp
pandn
cmp
call
ret
push
les
aam
sbb
das
and
or
fdivr
out
clc
js
push
aad
jmp
adc
or
popa
outs
fsub
add
aas
into
nop
in
xor
push
into
sbb
cmc
mov
push
(bad)
out
(bad)
bound
pop
mov
xchg
xchg
push
test
cmp
sub
and
push
fidivr
or
jno
add
cmps
repz
push
cli
push
in
mov
out
(bad)
dec
test
and
jle
fdiv
scas
rol
add
sub
pop
pop
(bad)
sub
repz
gs
pop
ss
and
sub
pushf
push
adc
fnsave
mov
add
xchg
sub
repnz
sbb
scas
jmp
mov
dec
arpl
(bad)
xchg
and
jb
xchg
jbe
jns
mov
jne
rcl
(bad)
xor
lds
fisub
movs
out
mov
fcom
test
rol
das
jns
inc
test
dec
sub
out
xlat
(bad)
push
rol
and
adc
fisttp
repnz
pop
(bad)
xchg
pop
or
pop
(bad)
out
icebp
es
mov
jnp
aaa
jle
bound
and
jp
enter
scas
add
mov
cmp
adc
inc
or
sbb
pop
jl
fidiv
mov
dec
mov
jns
fnstcw
test
rcr
mov
in
xor
push
loopne
hlt
jnp
movs
shr
and
and
inc
pop
mov
add
jle
xchg
mov
lock
shl
shl
pusha
sbb
add
fidivr
mov
daa
mov
mov
test
inc
or
retf
stc
cdq
(bad)
loope
outs
(bad)
ss
adc
pop
mov
inc
call
adc
pop
sub
(bad)
xor
(bad)
mov
cmp
inc
(bad)
and
leave
xchg
ins
xchg
xchg
lahf
ficomp
test
std
daa
mov
sbb
mov
mov
mov
fdivr
stc
cmp
(bad)
mov
xchg
and
dec
adc
pop
or
xchg
xchg
(bad)
stc
icebp
and
sub
jge
jmp
fidiv
fwait
push
or
rol
add
xchg
stos
dec
bound
lock
retf
push
xor
sub
aad
test
xor
dec
mov
fdivr
xor
outs
ss
gs
and
mov
sub
xchg
push
pop
inc
jne
sub
aas
pop
loop
adc
cs
cmps
mov
jl
ror
fstp
or
loop
ja
jmp
sbb
cmc
pop
aam
mov
dec
jnp
jbe
bound
int3
in
add
lock
xchg
pop
cmp
mov
add
ja
jle
add
mov
jnp
pop
bound
(bad)
xor
jo
in
xchg
sti
sub
pop
loope
cmp
sahf
std
stc
ins
into
sbb
inc
movs
sub
jmp
int
adc
icebp
lock
adc
(bad)
sbb
pop
push
jae
stos
sbb
mov
sbb
cmp
mov
retf
(bad)
jbe
pushf
call
push
add
outs
iret
jno
in
lock
fmul
sbb
dec
movs
imul
stos
xor
je
cli
in
xor
cmc
xchg
mov
push
sub
stos
ds
jmp
lock
mov
sbb
out
mov
rol
sbb
inc
outs
mov
lea
xchg
mov
xchg
aam
mov
idiv
mul
idiv
or
inc
add
test
xchg
fwait
popf
mov
mov
pop
and
dec
xlat
dec
inc
shr
pop
aad
dec
data16
ficomp
out
popf
in
inc
fwait
ror
add
jnp
inc
out
inc
add
out
test
in
outs
adc
scas
sub
xor
push
xchg
cmp
jge
(bad)
inc
dec
inc
imul
push
mov
mov
inc
xchg
cmp
push
loopne
and
mov
adc
jle
jo
mov
sbb
sbb
xlat
push
mov
push
cmps
xchg
inc
or
test
test
adc
mov
adc
cld
push
mov
mov
mov
sar
test
mov
pop
mov
sub
pop
out
into
retf
sub
and
rcr
int
jae
pusha
mov
xor
repnz
xchg
dec
inc
add
inc
jmp
adc
in
or
push
add
cld
mov
pop
fist
lods
movs
loope
adc
clc
shl
mov
lds
mov
retf
mov
je
jmp
imul
(bad)
not
cmp
or
and
adc
je
sahf
enter
or
aam
adc
out
mov
xor
aam
repnz
ret
push
adc
xor
jb
push
jl
adc
mov
dec
mov
lock
out
sbb
ret
int
(bad)
pop
out
mov
xor
imul
dec
or
inc
or
in
sti
movs
nop
test
data16
je
imul
fnsave
(bad)
pop
push
mov
leave
stos
lods
test
(bad)
scas
es
jb
in
sar
jb
push
leave
or
inc
adc
pop
xlat
jecxz
call
mov
es
push
mov
xor
pop
cmp
mov
xor
test
push
pop
scas
push
xchg
mov
jo
mov
adc
cdq
add
sbb
ror
jl
stos
es
push
push
sbb
ins
cmps
repnz
call
and
sbb
call
shl
jae
xlat
je
scas
cmp
jg
lea
(bad)
sbb
aam
mov
dec
(bad)
xchg
in
out
in
es
push
mov
push
cdq
cmp
movs
sub
enter
cmp
jmp
lds
and
pop
rol
scas
add
iret
into
lods
and
xor
mov
pop
movs
push
fmul
in
push
add
or
inc
jg
into
jge
js
das
xchg
inc
add
mov
loopne
pop
(bad)
les
fist
add
aad
into
das
add
aaa
daa
push
xor
call
ss
ins
imul
js
jnp
mov
sub
jo
cwde
jmp
xlat
shl
add
ja
sbb
inc
lock
lods
sub
pop
push
mov
cld
pusha
sbb
mov
adc
mov
imul
xchg
mov
dec
push
mov
jne
adc
inc
mov
push
sar
mov
mov
das
pushf
cmp
inc
add
inc
and
loope
or
xlat
xor
fisub
in
xlat
push
out
jmp
fwait
sub
adc
(bad)
cmp
add
stc
push
adc
jno
aam
(bad)
iret
movs
push
addr16
xor
inc
jg
mov
punpckhbw
xchg
mov
push
and
and
outs
ins
dec
stos
shl
repnz
outs
xor
shl
lods
rcl
and
dec
inc
mov
ins
cmps
shr
push
jecxz
pop
xor
(bad)
pop
xchg
mov
sbb
cli
call
mov
add
or
aad
scas
iret
adc
jb
jle
jno
sub
mov
(bad)
inc
dec
out
mov
sbb
(bad)
data16
loope
xor
cmovg
outs
mov
ds
mov
fs
cwde
or
mov
adc
je
dec
lock
xchg
jbe
mov
lods
dec
push
mov
data16
mov
cli
rol
in
in
outs
arpl
dec
clc
out
add
and
jl
inc
(bad)
in
(bad)
and
xchg
loop
es
or
adc
mov
fcom
jg
retf
rol
cmp
test
mov
jno
lds
into
movs
stos
in
pusha
xor
or
or
jmp
and
pop
or
scas
fs
sub
arpl
push
repnz
in
pop
jo
pop
or
xor
xchg
retf
mov
add
mov
and
(bad)
xlat
push
rcl
xchg
je
jg
pop
sub
xor
pop
mov
cmps
jmp
cmp
xchg
add
pop
sbb
clc
mov
in
pop
repnz
rcr
cs
jg
js
(bad)
fwait
jnp
adc
je
mul
ins
repnz
cwde
sub
push
lods
push
movs
dec
push
mov
add
cmps
loopne
sbb
hlt
pushf
xor
lahf
cld
mov
test
nop
mov
add
out
mov
sub
out
loop
fsub
das
mov
call
pop
sbb
sti
cmp
in
mov
inc
std
fidiv
lods
stc
inc
out
retf
dec
outs
rep
shl
daa
inc
mov
jne
mov
sbb
inc
enter
outs
nop
loope
dec
jne
movs
das
push
xlat
xor
dec
stc
push
xchg
add
loopne
adc
lds
gs
ins
add
fnclex
mov
outs
pop
jecxz
mov
nop
imul
(bad)
sub
ret
loopne
pop
loope
test
mov
mov
mov
inc
cmp
add
dec
clc
jbe
xor
xchg
push
cmp
xchg
int3
pop
inc
ror
pop
and
iret
jns
add
jb
mov
xor
lahf
fwait
push
add
push
cld
movs
retf
(bad)
cmps
enter
fcmovb
push
mov
lods
xchg
lea
cmps
add
sub
mov
cmp
sbb
popa
out
push
pusha
mov
sbb
push
sub
or
push
inc
cmps
retf
mov
jb
pusha
sbb
and
push
or
div
dec
mov
inc
dec
push
push
mov
cmp
and
and
addr16
stos
fwait
in
mov
sub
sbb
std
or
jp
or
rcl
ins
fsqrt
sahf
xor
dec
mov
mov
sbb
out
inc
dec
or
les
fld
jle
inc
xor
xlat
es
popf
in
push
sar
sbb
mov
pop
push
test
push
into
push
lds
in
push
push
sbb
iret
sub
imul
cld
xchg
std
hlt
cmps
call
frstor
add
sub
mov
push
shl
test
mov
add
jae
mov
imul
pop
mov
aas
jg
mov
ss
and
add
jne
xor
retf
outs
shr
mov
repnz
cmp
fdivr
aaa
dec
sub
inc
call
stc
movs
push
jl
ficomp
add
sub
mov
pop
mov
pop
mov
or
call
sub
sbb
jne
jnp
jle
rcl
ins
or
push
and
popf
push
and
xor
mul
pop
and
nop
sbb
cdq
mov
repnz
mov
mov
lods
add
and
mov
pop
add
loopne
ss
and
je
imul
into
jge
sbb
sti
mov
shl
jno
xchg
out
jno
aas
and
xor
add
pop
push
push
mov
and
(bad)
xchg
jmp
(bad)
jo
add
jmp
or
xor
clc
enter
jns
and
ja
xor
xor
and
push
mov
sbb
les
dec
les
cmp
sub
mov
adc
test
loope
jae
and
test
jae
mov
mov
mov
jge
popa
hlt
inc
enter
push
mov
scas
push
adc
mov
jo
lods
inc
xor
sub
std
push
movs
call
adc
cld
or
aam
sub
in
int3
sbb
mov
adc
std
jne
xchg
and
test
std
pop
xlat
lea
movs
pop
mov
shl
mov
jg
mov
pusha
(bad)
hlt
lea
jne
mov
xchg
nop
xchg
movs
mov
mov
and
jns
pop
xchg
sbb
pop
mov
mov
mov
adc
jecxz
mov
test
aas
and
pop
add
add
mov
add
(bad)
mov
(bad)
leave
fidiv
fwait
(bad)
(bad)
enter
dec
cmp
scas
xchg
cmp
pop
fidiv
push
(bad)
jle
lock
push
inc
adc
lods
pop
adc
test
js
jmp
dec
xchg
sub
or
mov
scas
and
clc
fisttp
or
pop
cs
cmp
jo
add
aas
adc
jmp
jp
pop
jge
call
mov
ret
sbb
jnp
inc
pushf
rcr
sbb
ret
in
push
jmp
ficom
fst
sub
inc
push
repnz
mov
push
jnp
mov
mov
push
sahf
mov
int
sar
rol
mov
lock
ret
inc
jl
ret
sub
add
push
outs
push
add
test
push
push
shl
sub
cld
ds
push
lds
ds
push
sbb
sbb
mov
(bad)
xor
pusha
sub
mov
xor
or
sbb
pusha
xchg
jg
stos
cmp
in
int3
adc
bts
ins
pop
test
out
push
cmp
int
pop
pushf
push
jmp
xchg
lods
cmc
popf
shl
jmp
in
lea
push
daa
mov
retf
inc
inc
xchg
out
test
bound
jp
push
pop
mov
pop
dec
mov
pop
popf
pop
pop
mov
rcl
stc
popf
shr
aaa
ss
push
call
fbstp
cmp
outs
or
dec
mov
add
inc
ret
popf
imul
jno
or
idiv
add
test
call
mov
hlt
pop
xchg
xchg
repz
and
je
adc
adc
ret
add
inc
fdiv
cmc
sbb
dec
dec
xor
fs
imul
adc
ror
pop
push
ins
test
adc
cmp
inc
loope
(bad)
ins
xor
rol
test
movs
xor
repnz
pop
push
push
sub
xchg
fstp
or
lea
adc
(bad)
adc
ss
jae
out
or
sub
call
clc
sub
adc
out
ins
int3
adc
outs
add
sbb
(bad)
gs
mov
adc
sbb
xchg
cmp
aas
mov
add
aam
mov
add
cmps
xchg
cmp
test
xchg
sbb
std
jno
push
adc
and
pop
jmp
std
retf
cmp
(bad)
scas
pop
div
call
mov
mov
aaa
dec
xchg
and
in
xlat
and
mov
inc
cld
neg
call
sub
push
pop
gs
(bad)
lea
lds
scas
in
rcl
xchg
fimul
clc
push
and
adc
shr
inc
jne
ret
and
push
sbb
jae
out
and
popf
test
(bad)
cmps
mov
push
or
icebp
inc
and
jns
jbe
push
sbb
loop
sahf
inc
hlt
cmp
mov
cld
add
mov
or
pmaddwd
pop
je
and
pop
jo
aas
cmps
test
shl
mov
daa
aas
mov
repz
mov
hlt
mov
and
and
sbb
mov
or
push
xchg
or
xchg
adc
or
pop
and
stc
lahf
or
in
outs
or
sbb
mov
and
push
dec
xlat
xor
and
in
dec
(bad)
shr
and
mov
leave
adc
shr
mov
retf
loopne
aam
mov
push
push
addr16
push
push
fdivr
mov
(bad)
mov
jl
jmp
clc
mov
clc
sbb
cmp
jo
push
jecxz
test
adc
cmp
loopne
xor
js
mov
aas
fwait
jb
rcr
lods
std
add
shl
adc
jno
and
into
jge
jge
and
(bad)
fpatan
cmp
mov
syscall
dec
jmp
test
sub
push
dec
jns
aas
out
out
sub
or
in
cmps
jne
retf
je
pop
repnz
lock
xchg
pop
push
loope
dec
ins
jnp
sbb
add
lahf
neg
fldcw
xchg
mov
and
xlat
outs
dec
sub
add
repnz
sbb
(bad)
test
sbb
test
xor
lea
sub
movmskps
inc
idiv
adc
mul
fwait
and
test
stos
nop
sti
test
push
lea
xchg
mov
daa
xor
jnp
popa
out
sub
fdivr
or
jns
jmp
add
and
je
sar
xor
ja
test
jg
lock
mov
add
pop
sub
dec
add
sub
adc
lea
aas
sbb
fwait
sub
sbb
mov
or
mov
(bad)
loopne
aas
push
call
repnz
cmp
mov
outs
iret
test
sub
cld
aaa
movs
push
clc
ins
dec
jb
pop
popf
dec
inc
xchg
dec
and
pop
cmp
test
bound
mov
les
std
(bad)
aam
dec
mov
and
xchg
mov
fimul
(bad)
ins
push
ins
xor
xchg
sub
jle
pop
shl
test
sahf
test
push
jmp
xor
or
ins
mov
xlat
sbb
jmp
lods
inc
lods
xor
mov
ins
xor
in
or
xor
xchg
sub
sub
push
sub
daa
xor
pop
sub
push
inc
mov
sbb
test
mov
scas
stos
cmp
add
call
xchg
adc
pop
jno
jg
ds
inc
xchg
mov
dec
xchg
mov
mov
dec
jb
push
add
ret
sbb
les
out
xchg
ret
sbb
pop
add
mov
ss
out
push
outs
adc
adc
add
inc
movs
out
sub
adc
mov
in
cmps
adc
and
fs
xor
lahf
call
sbb
mov
sbb
xlat
aad
xor
or
xchg
and
mov
pushf
cdq
clc
cdq
dec
jns
je
nop
dec
loop
pop
adc
jle
ret
or
and
pop
in
fisub
mov
jl
out
push
xor
or
ds
xchg
movq
stc
jns
neg
push
and
cmp
out
(bad)
push
loope
dec
jbe
dec
push
bound
sub
mov
outs
inc
std
adc
mov
jecxz
loope
test
push
add
xchg
ret
aad
and
mov
and
jecxz
jo
and
test
and
jge
out
sub
fdivr
jo
idiv
scas
xchg
xchg
call
xor
dec
(bad)
or
adc
xchg
repnz
mov
popf
inc
in
fidiv
push
and
adc
or
inc
fcmovu
icebp
cmp
rol
xor
sbb
sbb
cmp
adc
(bad)
jecxz
mov
jo
fcomip
gs
(bad)
mov
cld
bound
dec
xor
inc
inc
fnstcw
xchg
jmp
mov
add
lock
mov
dec
in
dec
pop
mov
dec
mov
cli
dec
pop
mov
cmp
bound
loopne
xor
pop
mov
pop
idiv
mov
jge
mov
pop
(bad)
xchg
test
sub
add
fisttp
xchg
pop
dec
repnz
xchg
ja
dec
mov
add
or
aaa
sub
inc
or
pop
movlps
add
xchg
aaa
ds
mov
xor
jmp
aas
xchg
xchg
mov
in
fbld
cmc
pop
ficom
lock
(bad)
cmp
or
fist
xchg
mov
lds
call
and
and
or
cmps
idiv
xchg
(bad)
cmp
jns
jl
out
mov
in
daa
mov
mov
sbb
or
and
jmp
dec
inc
fld
lods
rcr
shl
cmp
mov
cmps
xor
pop
mov
xor
popa
adc
shl
rcr
test
ins
add
mov
add
dec
mov
sbb
lods
mov
xchg
mov
test
std
xor
dec
pop
or
push
inc
js
outs
into
inc
pop
mov
fld
dec
push
in
pop
add
les
jnp
xor
jbe
dec
rcr
daa
adc
jmp
xor
pushf
shl
mov
ret
dec
shl
cdq
push
ins
call
stc
aad
xor
sub
add
xchg
addr16
xor
jmp
test
(bad)
gs
in
or
inc
arpl
iret
cmps
pop
mov
xchg
jle
or
in
jne
lea
cld
call
pop
call
call
leave
mov
movs
mov
push
ds
pop
or
(bad)
sub
cmp
out
pop
and
test
es
push
in
popa
das
test
aam
fwait
ret
push
or
sbb
jb
jo
mov
adc
mov
mov
cmc
or
clc
push
hlt
dec
popa
jmp
mov
mov
mov
mov
lahf
xor
push
enter
sub
push
ret
arpl
fsubr
frstor
sbb
stc
mov
in
out
bound
pop
sbb
xchg
pop
jge
push
pop
xchg
(bad)
outs
sub
mov
adc
mov
adc
std
or
loop
pusha
mov
cmp
and
sub
mov
imul
cmps
loopne
xor
mov
dec
cmp
xor
dec
mov
outs
jmp
xchg
loope
or
movs
cmp
mov
mov
fbld
retf
mov
xor
jg
mov
xchg
scas
jmp
xchg
mov
das
in
pop
mov
xor
test
adc
inc
shl
adc
sbb
adc
adc
fwait
cmovg
sub
stos
in
pop
jnp
or
mov
aas
and
mov
(bad)
stc
inc
jge
(bad)
cmp
sti
(bad)
sar
int
fdiv
test
xchg
call
sbb
pop
cmps
add
or
mov
and
sahf
mov
dec
sbb
pop
push
dec
mov
pop
call
ins
dec
or
out
mov
adc
inc
ret
pop
or
lock
jns
push
fcom
retf
xchg
out
pop
xchg
lea
sbb
fwait
ss
or
sbb
in
or
mov
push
repz
mov
cli
scas
gs
push
imul
xchg
cmp
in
gs
daa
imul
fwait
jp
dec
adc
enter
mov
daa
clc
pop
das
xor
hlt
in
lock
pop
sbb
jl
jmp
(bad)
mov
jl
lahf
and
jb
jno
jbe
enter
jmp
cld
in
inc
mov
and
mov
aas
mov
or
sub
mov
mov
mov
push
jmp
repnz
ins
push
push
adc
sbb
fld
or
movs
cmp
movs
repnz
fwait
xchg
mov
sbb
sbb
cmc
out
je
add
xchg
push
jge
shl
cmp
add
pop
sub
test
mov
js
js
shl
das
sbb
adc
sub
repnz
xchg
cmp
sbb
xchg
rcr
shr
and
cmp
int3
mov
movs
and
rcl
push
cwde
pop
cld
out
test
or
outs
aad
int3
repnz
lods
mov
mov
mov
icebp
test
fs
pop
jg
mov
xchg
dec
mov
in
pusha
outs
xor
pop
in
mov
inc
stos
js
push
push
ror
xor
adc
gs
fld
icebp
jns
es
jecxz
cs
es
adc
bound
cwde
mov
and
arpl
push
pop
jg
fs
xchg
mov
pop
mov
add
icebp
jnp
ret
cs
xchg
xor
dec
mov
sbb
pushf
sub
cmc
inc
sbb
in
mov
(bad)
xchg
test
stc
repz
enter
sbb
inc
inc
jge
mov
aam
ins
div
sbb
jno
lods
inc
ja
pop
ret
push
in
sub
inc
mov
fdiv
(bad)
push
das
xor
cmp
dec
push
cmp
add
jb
out
sahf
mov
fst
test
mov
jmp
xchg
lahf
in
push
jae
enter
aas
dec
cmp
(bad)
mov
mov
retf
xor
xlat
shl
or
adc
adc
clc
in
loopne
test
adc
jnp
lods
ins
popa
and
ficomp
mov
pop
cmp
scas
int
fs
xchg
cs
cwde
jl
fdivr
shl
xchg
jle
jno
aam
imul
pusha
sbb
xchg
xor
out
cmps
rol
push
jmp
mov
inc
cmc
xor
inc
sub
pushf
or
pop
loop
pop
fcomp
lds
sbb
lds
iret
gs
nop
cmps
cmp
and
fsubr
test
dec
dec
rcl
or
mov
inc
rcr
xchg
and
lea
adc
push
pop
inc
call
movs
(bad)
mov
xchg
mov
loop
imul
aas
inc
mov
inc
pop
cmps
test
fidiv
pushf
or
xchg
test
xchg
pop
push
or
daa
std
outs
push
pusha
sbb
call
add
fs
out
mov
popf
pop
pop
retf
or
imul
push
lahf
bound
les
add
daa
jb
dec
xor
sub
mov
dec
imul
jmp
repnz
jecxz
adc
inc
pop
daa
push
scas
in
pop
out
jo
pop
mov
xlat
(bad)
xchg
lods
cli
mov
xchg
adc
add
es
ins
leave
pop
out
ret
jmp
or
lock
stos
sub
jp
adc
(bad)
rcl
pusha
in
sbb
ins
and
mov
das
or
shr
add
jo
xor
das
cmp
fdiv
outs
and
clc
sbb
cmp
scas
ins
js
in
xchg
adc
xchg
mov
(bad)
push
cmp
mov
pushf
cmp
push
shl
sub
xlat
mov
inc
jbe
push
xor
mov
push
loope
fcmovnbe
lahf
pusha
xor
cmp
jb
add
or
shl
stos
mov
pop
inc
arpl
dec
xor
inc
push
xor
imul
push
(bad)
jle
jnp
shr
stc
jecxz
lock
pop
push
test
scas
loopne
push
ins
icebp
repz
jge
int3
push
mov
and
inc
das
push
jmp
(bad)
inc
lods
fwait
adc
or
ret
stc
leave
test
inc
or
mov
lods
push
push
adc
jg
xchg
add
adc
pusha
lods
(bad)
sbb
imul
aas
and
jo
mov
pop
jae
fcmovnbe
bound
gs
adc
mov
mov
lods
jns
das
daa
ds
adc
xor
fnstenv
lahf
dec
mov
inc
repz
pop
ins
cmps
mov
repz
jae
cmc
or
pop
test
push
mov
psraw
std
aam
xchg
fdiv
mov
push
jae
ret
mov
es
lods
pop
cmps
dec
pop
fldlg2
push
push
jae
push
(bad)
mov
dec
aas
ror
or
jns
push
add
sub
xchg
cs
xchg
das
repnz
fbld
inc
push
sbb
xchg
push
mov
xor
xchg
daa
popa
mov
cmp
mov
inc
lahf
xchg
or
test
shl
inc
mov
in
and
mov
and
scas
pop
mov
cmp
push
outs
push
mov
int3
out
sti
jae
out
mov
dec
and
popa
in
xor
sub
(bad)
test
dec
data16
icebp
outs
ret
lea
mov
xchg
mov
icebp
pop
and
fdiv
and
mov
sbb
xor
push
and
daa
ss
fsubr
pop
mov
ins
(bad)
jns
adc
sub
in
push
das
pop
mov
ins
fwait
outs
stos
rol
fidiv
scas
mov
xchg
cmp
repz
int
xor
aam
iret
push
jno
xchg
jl
inc
xchg
adc
and
cmp
mov
mov
je
jmp
imul
je
jns
add
xchg
sbb
repz
mov
pop
jbe
repnz
movs
inc
sbb
push
outs
(bad)
js
mov
add
out
fwait
sar
pushf
xchg
xor
repz
pushf
or
pop
or
call
sub
mov
rcl
inc
fidivr
aaa
mov
nop
sbb
xchg
retf
pop
sub
lds
mov
sahf
(bad)
jg
add
stos
mov
adc
inc
mov
scas
pop
mov
push
push
fs
xchg
and
mov
mov
xchg
mov
dec
push
into
cmp
cmp
xchg
cmp
sub
and
gs
cmp
repz
dec
shl
cs
sbb
jbe
cmp
jle
add
jmp
jmp
(bad)
xchg
inc
retf
mov
jo
les
or
nop
xchg
push
loope
fst
xor
add
(bad)
pusha
push
inc
out
leave
and
fsubr
xor
dec
cmp
cld
sbb
imul
mov
outs
and
fidiv
cld
aad
icebp
(bad)
leave
push
ja
and
out
repz
pop
pop
fnstsw
push
sbb
push
fidiv
outs
mov
fmul
std
xchg
(bad)
adc
inc
cmp
(bad)
pop
cmp
sar
xchg
jecxz
dec
les
mov
iret
inc
fisub
jecxz
jl
into
mov
cmps
ins
(bad)
and
mov
outs
mov
lock
xchg
xlat
inc
or
out
movs
mov
nop
xchg
push
xor
mov
adc
xor
(bad)
idiv
xchg
jnp
div
outs
push
pop
clc
cmp
and
mov
jae
in
xor
xchg
or
lea
int
nop
xor
test
sub
test
add
mov
jmp
outs
shl
in
cmp
dec
sbb
mov
add
and
push
mov
inc
scas
xchg
ja
jbe
icebp
cmps
dec
inc
mov
scas
call
sbb
add
push
push
pusha
outs
lods
sahf
leave
mov
ss
popa
push
stos
test
movs
leave
cmp
in
cdq
adc
call
cmp
fnstsw
int3
pusha
push
dec
fimul
sar
js
test
or
scas
into
movs
aam
cmp
sub
xlat
stc
sar
add
jne
xor
jo
retf
jno
jge
fst
retf
push
sub
pusha
fs
loope
jmp
xchg
lods
pop
and
and
push
in
jmp
pop
stos
push
retf
out
call
out
pop
ret
inc
outs
xchg
lds
inc
add
xlat
and
mov
movs
jbe
mov
jg
xchg
push
jns
mov
or
xchg
inc
fst
pop
xor
cmps
cmps
mov
or
inc
shr
push
pop
jmp
adc
mov
aas
pop
add
out
sar
retf
test
mov
xchg
mov
sbb
clc
pop
mov
sbb
nop
cld
and
pop
xchg
rcl
aas
mov
popf
retf
aaa
or
xor
loope
push
jbe
xchg
fs
sbb
jl
adc
mov
cmp
cmp
scas
adc
sahf
jmp
jmp
dec
imul
or
or
sub
dec
xchg
sti
pop
mov
in
inc
std
xchg
jg
cmps
aam
mov
cs
shr
daa
cmp
jg
mov
sub
xchg
dec
pop
mov
mov
mov
mov
push
jae
cli
loope
test
xor
clc
pop
sub
in
gs
je
push
sub
cmps
out
mov
cmp
inc
imul
sub
mov
lock
xor
adc
js
fisub
mov
pop
cmc
or
int
inc
push
fnsave
push
xchg
push
mov
ds
fmul
mov
test
ja
lods
inc
pop
(bad)
fst
pop
cmc
cmp
cmp
and
add
xlat
cli
xor
imul
in
pop
nop
fwait
cmp
loopne
dec
pushf
dec
dec
push
mov
loope
cmps
and
mov
(bad)
aam
(bad)
call
and
movs
inc
mov
jnp
or
sub
mov
pop
and
aaa
nop
sbb
adc
stos
ret
xchg
inc
sbb
push
js
jne
mov
iret
daa
mov
shl
jb
inc
sbb
cld
aas
in
(bad)
loope
ret
jno
pop
inc
pop
int
adc
scas
out
pop
or
sub
push
mov
sahf
imul
pop
xor
jmp
xchg
xor
stc
cmp
inc
call
push
stos
push
xchg
or
ret
out
enter
mov
xchg
div
or
fcomp
and
outs
scas
adc
fld
jb
mov
(bad)
push
jecxz
xchg
pop
add
and
fucomip
call
push
cdq
scas
push
adc
adc
sbb
out
push
pusha
xor
mov
xor
ja
dec
or
pop
and
mov
lahf
add
sbb
mov
pusha
(bad)
outs
jecxz
dec
test
xchg
(bad)
daa
fistp
fdivr
xchg
push
cwde
(bad)
cmps
inc
xchg
das
inc
shl
in
stos
retf
std
jnp
fisubr
arpl
call
xchg
cmp
fs
into
pop
shl
lods
and
mov
in
lock
loope
out
sub
mov
xlat
and
adc
mov
cmp
add
adc
pop
add
outs
cdq
mov
rol
inc
jmp
mov
pop
bound
dec
(bad)
mov
and
mov
int3
ficom
stos
scas
inc
int3
loop
jmp
and
jo
scas
idiv
xor
mov
mov
push
(bad)
loopne
xor
jo
jns
dec
mov
ja
jle
mov
push
inc
imul
mov
jmp
in
cmp
dec
aad
mov
jno
xchg
mov
das
adc
or
push
jne
(bad)
adc
das
pop
lock
mov
inc
pop
mov
jne
mov
iret
outs
cmps
jecxz
nop
mov
mov
popf
inc
out
mov
mov
cmp
repz
rcl
cmp
gs
int
(bad)
ror
jmp
mov
mov
daa
mov
(bad)
pop
and
jge
adc
jg
and
aam
out
xor
push
pop
push
pushf
not
pop
and
add
(bad)
arpl
add
pop
(bad)
pop
jmp
inc
xor
out
ss
adc
mov
daa
mov
inc
xchg
xchg
sbb
shr
pop
das
fcomp
dec
les
je
cmp
int3
mov
adc
lods
call
popa
sub
mov
sbb
xchg
jae
call
pop
aaa
or
ror
add
cmp
push
cmp
stc
mov
jmp
xor
mov
push
(bad)
jp
jle
and
test
ja
out
mov
xchg
out
push
mov
dec
jle
xchg
lock
add
xchg
movs
fistp
out
es
push
xchg
in
jle
jle
iret
fild
and
lods
mov
mov
in
aaa
fwait
sbb
or
add
adc
stos
xor
pusha
mov
ja
out
out
scas
jmp
fwait
jo
cmp
ret
aaa
in
std
sbb
test
mov
jg
or
dec
inc
jno
mov
aas
cmp
xchg
imul
mov
data16
popf
es
adc
in
repnz
iret
or
xor
cmp
imul
and
adc
jecxz
xor
sub
cld
pcmpeqb
xor
sub
scas
xor
inc
outs
out
stc
jg
(bad)
bnd
scas
retf
ror
jo
ins
cmp
mov
sti
xor
out
or
bound
push
cmp
xchg
mov
add
or
mov
and
jno
in
nop
mov
add
ret
es
or
add
cs
xchg
push
mov
in
ja
(bad)
scas
fisttp
sar
dec
cmc
adc
mov
test
cmp
(bad)
movs
xor
pop
add
imul
xchg
mov
out
lock
sbb
mov
xchg
popa
jg
int
aas
push
fcom
aad
or
xor
fs
nop
xchg
inc
(bad)
retf
jns
lds
mov
or
aaa
loope
xchg
les
(bad)
neg
sar
out
sbb
mov
push
or
arpl
in
jb
pushf
push
test
xor
stos
repz
jmp
mov
jo
add
sub
enter
pop
pop
hlt
push
mov
push
push
cdq
xchg
addr16
test
fnstsw
jae
adc
pop
cmp
dec
inc
xchg
out
cmp
icebp
adc
push
mov
dec
fwait
jg
add
sti
cmp
and
mov
push
push
mov
jno
aam
loop
cmovnp
mov
aam
mov
xchg
mov
sbb
cmp
je
or
outs
popa
jmp
push
xchg
cmp
jecxz
jmp
cdq
mov
sbb
or
mov
mov
sub
or
loopne
ss
push
cmps
mov
pop
popf
jmp
lods
test
pop
push
mov
adc
stos
jae
ret
pop
or
in
test
scas
push
mov
xchg
(bad)
mov
jecxz
in
mov
inc
mov
(bad)
cmp
imul
add
in
dec
or
(bad)
in
mov
idiv
outs
mov
xor
add
mov
inc
push
jle
pop
data16
bound
sub
mov
call
out
mov
jne
les
stos
fstp
mov
outs
mov
lods
ds
cmp
cmps
mov
xor
cdq
and
xchg
test
inc
rcl
sub
jne
imul
sahf
call
inc
dec
sbb
sbb
push
stos
xchg
out
adc
lock
jg
gs
cmps
cmc
jl
(bad)
(bad)
out
xchg
rcr
push
adc
loop
stc
ds
jmp
adc
mov
mov
ins
push
push
jl
(bad)
(bad)
mov
int
xchg
js
xchg
repz
je
jne
jns
aam
popf
cwde
xchg
rol
mov
movs
outs
inc
xchg
xchg
(bad)
and
add
or
dec
(bad)
lea
adc
test
or
and
in
lods
mov
pop
(bad)
mov
inc
(bad)
xchg
icebp
(bad)
or
inc
adc
jge
(bad)
repz
pusha
xor
mov
lods
dec
dec
add
adc
shl
jo
enter
vmwrite
aad
pusha
das
push
ret
shl
js
mov
pushf
push
rcr
ret
add
pop
pop
aas
or
mov
cmc
mov
mov
call
popf
into
out
and
sbb
sbb
daa
xor
pop
or
jmp
mov
fld
sub
fcmovnu
dec
cli
mov
push
sub
mov
dec
repnz
adc
push
xchg
cmc
jbe
inc
ins
lahf
ret
sar
or
daa
fidiv
pop
sbb
pop
push
mov
cli
cmp
rcr
inc
mov
push
lods
xchg
jns
mov
push
inc
lds
xor
mov
test
repz
pop
dec
sub
jl
sbb
fstp
cmp
push
fadd
add
xchg
and
pop
mov
es
xchg
jne
aas
xchg
clc
addr16
pop
loopne
enter
sub
inc
mov
psrad
ss
outs
pushf
pusha
outs
fld
movs
jle
xchg
inc
in
cmp
add
jbe
inc
and
pop
je
inc
(bad)
icebp
sbb
ins
stos
out
sahf
add
xor
mov
cmp
jecxz
add
lock
shl
add
mov
pop
mov
mov
jno
mov
pop
test
not
bound
xchg
xchg
or
pop
loopne
sub
cmp
fstp
lock
cmp
cmp
add
mul
jl
dec
xor
cwde
shr
jns
retf
clc
add
push
retf
gs
adc
aas
pop
push
mov
ret
and
and
add
test
mov
fsub
push
push
int3
les
mov
lock
nop
popa
mov
aaa
fimul
mov
std
mov
xlat
fisttp
test
dec
lods
mov
mov
outs
jns
adc
cmp
int
add
mov
push
push
jbe
push
pop
adc
je
lahf
outs
xchg
adc
mov
retf
fwait
jp
or
mov
jge
rol
mov
cmps
mov
cmp
mov
cmp
sub
push
add
out
cmp
scas
adc
push
(bad)
or
cwde
mov
xor
arpl
dec
xchg
test
mov
mov
popf
arpl
mov
jmp
dec
rol
retf
pop
and
push
aam
xlat
sub
sub
or
mov
jle
push
(bad)
cmps
les
mov
add
push
or
shl
bound
and
mov
sub
dec
or
je
pop
mov
call
push
pop
imul
aaa
or
cmps
shr
out
cmc
dec
mov
or
push
clc
sahf
mov
mov
or
dec
stos
jno
out
lods
pop
adc
mov
add
adc
push
cmp
cmp
xchg
inc
adc
retf
pop
loop
mov
mov
mov
push
dec
aas
fimul
xor
mov
push
inc
sar
test
push
add
sets
daa
jmp
and
inc
movs
xchg
mov
pop
mov
add
rcl
inc
cmp
dec
call
bound
push
fisubr
ret
les
fdiv
xchg
adc
ins
cmp
and
outs
xchg
xor
daa
and
and
pop
leave
push
popa
loope
in
jb
rol
cwde
scas
pop
mov
or
and
pop
jl
out
dec
fxch
shl
or
cmp
retf
mov
rcl
(bad)
dec
(bad)
out
fistp
lahf
inc
(bad)
(bad)
push
xchg
fsubr
inc
inc
xchg
into
jae
movs
mov
sahf
aas
lea
out
scas
dec
mov
out
dec
adc
fnstcw
xor
pushf
test
cdq
and
arpl
mov
jmp
sbb
inc
pop
mov
aad
fadd
or
push
mov
mov
mov
inc
lods
lock
stc
mov
shr
mov
adc
pop
sar
push
add
cmp
mov
xor
stc
push
pushf
push
dec
or
stc
arpl
callw
cdq
cmp
out
push
or
sbb
mov
shl
ss
push
or
dec
das
mov
and
jbe
and
pop
iret
iret
leave
scas
sub
cs
mov
mov
add
and
jmp
int
les
jle
push
or
in
mov
sbb
mov
and
add
in
cwde
sbb
xor
and
jl
sar
mov
cdq
lock
outs
and
ins
stos
or
ret
sbb
data16
outs
sub
mov
mov
data16
and
or
mov
add
mov
adc
enter
(bad)
and
lock
push
(bad)
shl
jg
mov
loope
add
xor
or
mov
(bad)
fld
mov
xchg
and
cmp
dec
sbb
mov
popf
in
call
pushf
mov
into
jmp
inc
je
add
or
cli
pop
mov
clc
adc
int3
or
jle
cmp
movs
push
jno
sti
mov
(bad)
cmp
shl
inc
sti
rol
adc
inc
push
push
std
or
movs
xchg
cmps
cmp
scas
add
es
pushf
mov
or
repnz
(bad)
dec
(bad)
mov
iret
sub
dec
fcom
fsub
xchg
add
pop
ds
in
jg
into
(bad)
push
popf
(bad)
sbb
add
cwde
cli
int
dec
sub
les
add
(bad)
mov
mov
cld
outs
adc
ret
sbb
inc
push
sti
mov
in
jmp
fdivr
xchg
jo
cmp
outs
repz
jg
call
xor
xchg
repz
push
fistp
xor
dec
dec
mov
clc
mov
(bad)
lock
(bad)
js
add
sahf
adc
rol
push
ret
mov
int
inc
mov
cmps
cld
xchg
push
fnstcw
pop
shr
in
jo
popf
push
jmp
out
sbb
push
loop
icebp
cwde
inc
xchg
dec
loope
addr16
sub
shl
ror
fwait
jae
sub
imul
in
push
rcl
xor
mov
inc
xor
jnp
cmc
ror
retf
pop
daa
sub
scas
mov
aad
sbb
jbe
out
hlt
(bad)
cmp
cmc
jmp
shl
pop
xchg
arpl
stc
sti
adc
xor
lock
cwde
cmp
outs
inc
mov
loop
xchg
xchg
push
cmp
leave
lods
push
cmps
mov
and
push
dec
xor
ins
xchg
adc
stos
sub
pop
out
out
call
mov
hlt
pop
out
mov
push
mov
dec
(bad)
retf
repnz
push
leave
fistp
fmul
mov
stos
(bad)
test
add
or
cmc
sbb
add
sub
pop
mov
lahf
sahf
sbb
stos
add
iret
jno
pop
mov
arpl
arpl
and
adc
movs
inc
je
enter
icebp
push
hlt
out
push
push
xchg
mov
hlt
inc
mov
mov
cmp
fisubr
dec
fisttp
mov
push
xchg
daa
mov
sub
bound
xor
retf
xchg
xchg
rol
arpl
stos
aas
iret
sbb
xchg
pop
jae
xchg
pop
cs
fcomp
or
sub
add
outs
adc
jg
mov
rol
push
adc
jbe
pusha
jl
xchg
xlat
xor
inc
push
and
enter
mov
pushf
mov
dec
push
dec
or
cmp
out
push
test
int3
jb
lods
call
and
frstor
xchg
scas
js
jne
or
pop
pop
es
sbb
das
pop
mov
into
xchg
int
repnz
mov
jo
jle
inc
inc
jno
into
pop
push
sub
scas
push
fs
fidivr
fs
outs
sub
add
cmp
pop
fidivr
xor
pop
shl
mov
xchg
test
(bad)
dec
test
jl
mov
jmp
jmp
loope
std
pushf
sbb
hlt
and
es
add
test
int
and
cld
scas
or
dec
and
adc
outs
pop
mov
hlt
jmp
jne
mov
jnp
call
jae
pop
adc
cld
pop
xor
cwde
clc
jno
fwait
mov
cmp
jo
xor
pop
clc
fnstsw
sahf
and
loope
in
jecxz
aaa
or
sub
into
ret
sbb
mov
sub
jns
inc
sbb
mov
pop
add
fsubrp
ja
aam
or
in
in
push
dec
pop
shr
test
xor
ins
cwde
xchg
clc
rcl
mov
data16
cmps
push
cmp
mov
and
ss
xor
in
mov
push
imul
pop
and
mov
popf
scas
ss
pop
ror
pop
cmp
or
pop
inc
push
fnstsw
adc
imul
pop
dec
or
cdq
cmps
and
fsubp
adc
ins
loope
push
int3
lods
repz
mov
dec
xchg
jae
out
int
pusha
das
mov
or
adc
call
pop
iret
push
pop
mov
(bad)
ficomp
mov
push
pushf
mov
daa
cmps
mov
(bad)
scas
adc
push
sbb
dec
sbb
push
jmp
inc
(bad)
pop
cs
cmps
adc
outs
ss
rol
es
adc
test
retf
mov
and
shr
push
fs
jmp
add
das
fld
stos
add
mov
lds
mov
mov
jl
jnp
sbb
test
test
into
hlt
movs
push
out
xlat
mov
ffree
lea
mov
inc
push
push
daa
xor
mov
into
mov
mov
cmps
pop
pop
dec
or
push
adc
imul
sub
dec
or
jne
push
pop
or
icebp
mov
xchg
xchg
fstp
xor
cmp
hlt
daa
mov
dec
cli
bswap
stos
rcr
push
or
lock
mov
cmc
(bad)
dec
xor
push
cmps
cld
aas
jp
add
push
dec
cmc
lods
fild
andnps
loopne
pop
gs
shr
stos
dec
es
fs
cld
add
repnz
movs
ret
jns
mov
jnp
(bad)
retf
loop
mov
sbb
push
stc
enter
ja
dec
or
ds
or
sub
pop
sbb
or
dec
cmp
xchg
ret
mov
mov
ss
push
scas
sub
test
lods
ret
jg
jl
pop
popa
sbb
or
push
cdq
test
test
mov
sar
sub
test
push
sahf
sti
das
outs
xor
dec
adc
sub
(bad)
pop
and
jp
push
fcom
jmp
les
jmp
push
(bad)
jmp
pop
pusha
stos
sub
imul
imul
cmp
mov
out
out
mov
mov
je
(bad)
and
and
sub
cmc
mov
daa
and
fldcw
adc
ins
popf
sub
adc
cmps
jbe
bound
mov
mov
sub
add
ret
mov
push
sbb
mov
dec
call
xchg
lahf
jg
in
fisttp
lahf
sub
les
xchg
outs
mov
push
fmul
xor
inc
pop
(bad)
fiadd
jge
cmp
inc
fwait
adc
test
xor
xor
dec
outs
dec
and
mov
jp
scas
mov
dec
je
xchg
test
or
mov
mov
push
popf
sar
dec
mov
pop
outs
jnp
test
inc
shl
je
je
fucom
jmp
adc
nop
dec
push
icebp
imul
lods
jne
sub
aam
ins
fild
(bad)
mov
pop
mov
xchg
(bad)
cld
fwait
test
and
lods
enter
mov
neg
inc
mov
jg
inc
adc
test
jg
mov
cmc
push
xor
inc
jb
fwait
rdpmc
test
out
dec
pop
mov
push
test
shl
cmp
ja
pop
hlt
add
fnstenv
inc
mov
movs
mov
dec
xchg
and
test
mov
stos
and
aaa
cmps
stos
ja
add
ficomp
iret
jg
and
sub
push
shl
lods
mov
fdivp
mov
inc
repnz
cmc
sub
cs
sub
ficom
mov
or
loop
mov
xor
mov
fsub
cmps
jecxz
sbb
pop
sub
cmp
mov
ins
sbb
lods
test
xchg
and
retf
test
sbb
out
fistp
sbb
fild
je
lahf
addr16
sub
loopne
mov
jb
and
inc
in
dec
popa
pop
(bad)
adc
hlt
or
add
stos
mov
ds
cmp
mov
jae
mov
xor
push
or
sbb
pusha
dec
fmul
out
(bad)
sbb
jo
mov
push
or
loopne
push
sub
xchg
out
mov
cmp
sub
xor
jg
mov
xor
sbb
es
push
repz
mov
cdq
dec
cmp
das
mov
(bad)
repz
enter
xacquire
jmp
(bad)
mov
(bad)
mov
xchg
sub
std
and
sahf
pop
push
(bad)
aas
clc
movs
lods
jbe
jbe
jmp
out
nop
xor
rol
jno
push
ficom
mov
mov
loopne
xor
sub
stc
xchg
in
push
or
sub
and
into
enter
xchg
(bad)
jnp
jmp
mov
cmp
or
loope
inc
jecxz
shl
push
int
out
pusha
hlt
mov
in
mov
mov
in
jp
in
pusha
inc
push
cmp
ins
sub
mov
jg
and
fld
push
(bad)
out
cld
push
call
rol
cmc
(bad)
stos
jns
or
inc
pop
mov
mov
imul
jmp
add
sub
call
add
jge
dec
shl
jo
mov
cld
adc
in
shl
outs
adc
mov
mov
out
scas
lea
mov
mov
or
push
ret
sub
dec
in
xor
add
lock
mov
shl
fistp
ja
mov
mov
call
push
mov
add
mov
and
and
add
leave
es
push
in
fdivrp
outs
cmp
(bad)
dec
jbe
in
push
lahf
dec
mov
jnp
mov
iret
aas
pushf
rol
aad
jno
jge
lea
ror
and
int3
jmp
xlat
or
jno
xor
mov
test
jno
dec
mov
jl
clc
jecxz
pop
sub
ins
icebp
stc
cmps
jmp
sbb
aaa
sub
push
push
pop
les
inc
mov
jmp
fstp
cmp
outs
mov
xchg
jl
(bad)
xlat
les
pop
xor
cmp
fdivr
adc
aad
push
repnz
aad
pop
add
jb
test
jmp
stos
test
fwait
(bad)
sub
rcr
push
jbe
dec
(bad)
leave
cmp
push
outs
aaa
sub
add
iret
or
cwde
cs
pusha
fcomp
mov
out
mov
jmp
addr16
nop
out
mov
mov
std
in
lds
pushf
jl
outs
sbb
jle
int
inc
jl
xor
pop
aam
arpl
lods
mov
adc
leave
sub
cmps
movs
xor
push
adc
push
fidivr
mov
lds
cmc
add
dec
sbb
xchg
mov
fdivr
fwait
push
sub
ds
fadd
xor
jl
mov
xlat
ds
mov
inc
aaa
or
pop
inc
(bad)
jmp
fucompp
fs
(bad)
je
jb
jle
ins
test
and
sbb
outs
sbb
mov
jge
cmp
in
mov
and
sbb
add
scas
les
mov
repnz
sbb
mov
add
dec
rol
(bad)
mov
inc
rcl
jb
movs
xchg
fldz
xchg
or
mov
xchg
mov
xlat
jo
mov
(bad)
test
jo
xor
mov
pop
fs
and
inc
stos
imul
jno
fstp
xchg
retf
cvttps2pi
nop
mov
iret
cdq
gs
push
inc
push
loope
push
push
dec
(bad)
nop
or
pop
mov
inc
cmc
xchg
xor
and
dec
sub
enter
add
sti
mov
lock
jp
sbb
pop
pop
aaa
or
mov
rcl
rcr
ds
pusha
push
mov
add
test
adc
mov
clc
xchg
retf
jb
stos
outs
dec
add
hlt
popa
fs
addr16
inc
dec
(bad)
dec
pop
xor
movs
imul
in
sub
mov
inc
inc
push
or
icebp
xor
popa
push
jle
xor
xchg
xor
xlat
and
mov
pop
mov
mov
popa
mov
sub
(bad)
cmps
stc
dec
jecxz
dec
fs
icebp
daa
and
rcr
in
sbb
das
test
mov
cli
jg
pand
dec
inc
mov
aaa
out
addr16
xchg
jp
(bad)
push
in
popa
imul
movs
fcmovnu
mov
fsubr
mov
jno
sbb
jne
mov
pop
and
pusha
mov
stos
or
hlt
or
adc
out
retf
inc
xchg
ins
fwait
xor
mov
cmps
jae
imul
outs
sahf
cmps
pop
es
push
cmp
jo
jg
dec
sbb
bound
repz
pop
pop
repz
std
les
mul
ret
loopne
adc
dec
pop
pop
dec
stos
or
scas
jecxz
iret
fs
mov
fcmovu
push
stos
rcr
mov
jecxz
and
or
or
sti
fcomp
jns
iret
inc
and
shl
ret
xor
sbb
push
adc
jnp
sub
mov
xchg
ret
and
hlt
(bad)
fimul
dec
repnz
mov
adc
in
mov
lock
pop
out
aaa
cdq
test
sti
popf
stc
sbb
cdq
lock
das
dec
jne
(bad)
sbb
outs
inc
clc
dec
cmp
dec
ror
leave
push
sub
cs
lahf
mov
fld
xlat
ret
push
mov
lock
and
test
adc
cmp
mov
mov
adc
adc
data16
imul
scas
test
outs
and
popf
pusha
nop
or
mov
stc
fistp
push
loop
inc
add
rcr
test
sub
scas
shr
fwait
cmp
mov
sahf
(bad)
ins
jnp
outs
sub
mov
mov
mov
(bad)
mov
imul
sub
sti
lds
repnz
sub
mov
movs
(bad)
cvtpi2ps
dec
inc
lahf
gs
and
sbb
or
mov
dec
hlt
(bad)
push
jno
pop
adc
neg
cdq
push
pop
fs
sbb
xor
sbb
imul
xor
mov
div
mov
xchg
push
mov
fld
in
cmps
(bad)
addr16
gs
ins
jmp
push
push
sbb
(bad)
dec
and
push
push
pop
rcr
cmp
call
ins
lods
inc
jl
jecxz
cmc
xor
sub
out
dec
mov
xchg
js
and
retf
mov
repz
cmp
and
mov
xor
retf
jp
push
push
hlt
inc
in
mov
clc
pusha
movs
dec
test
pop
mov
mov
test
pop
add
pop
call
(bad)
sub
jmp
mov
enter
cmp
jge
dec
ret
xor
test
cmc
mov
scas
jle
inc
fwait
retf
cmp
lea
or
mov
call
cli
mul
cmp
lahf
adc
je
sub
pop
in
(bad)
cmp
pop
inc
inc
mov
jmp
bound
adc
mov
out
xor
popf
mov
jg
jg
popf
sub
fistp
movs
dec
or
inc
dec
lds
icebp
xor
jo
lods
movs
or
shl
jb
shr
(bad)
arpl
stos
push
xor
jg
int3
mov
mov
push
jnp
adc
xchg
adc
or
in
jle
dec
(bad)
(bad)
add
sbb
mov
xchg
out
hlt
sub
push
cs
out
xor
fucomp
xor
leave
mov
mov
jmp
movs
xor
les
mov
(bad)
push
pop
ss
ret
stos
or
ds
and
fidivr
mov
outs
and
mov
xchg
movs
pop
and
(bad)
mov
mov
xor
cs
inc
dec
sbb
in
clc
(bad)
or
enter
sbb
mov
jnp
ret
sbb
ja
mov
jmp
aas
ds
loop
mov
arpl
jge
enter
mov
scas
mov
fistp
push
sbb
pop
and
out
xchg
repnz
pop
ss
adc
(bad)
idiv
jmp
out
test
fldz
add
cdq
sahf
sub
aaa
mov
and
js
sahf
mov
fnstsw
mov
cmp
inc
call
fsubrp
arpl
lock
lock
scas
sub
(bad)
dec
sub
xchg
cdq
fstp
movs
push
xchg
dec
and
stos
adc
cmp
mov
push
cmp
mov
jmp
push
aad
das
mov
imul
cmps
add
mov
ds
jne
outs
aas
and
xor
dec
cdq
int3
iret
push
sub
sub
xrelease
sbb
or
jb
push
sti
ss
test
cmp
push
movs
mov
test
out
push
mov
sub
retf
dec
cs
test
shl
jge
sbb
mov
loopne
sbb
mov
jg
pop
pop
(bad)
jo
in
pop
pop
mov
ss
jbe
jg
rcr
fistp
xchg
es
or
add
cli
push
in
js
mov
jbe
cli
adc
in
movs
ficomp
in
es
(bad)
and
xchg
ficomp
repnz
adc
dec
test
lods
mov
loope
dec
mov
xchg
loop
or
xchg
inc
test
scas
and
int3
mov
xchg
push
lods
push
xor
hlt
sbb
addr16
adc
jmp
push
sahf
scas
add
sbb
movs
sub
gs
mov
fwait
loope
(bad)
int3
xlat
adc
or
lahf
push
popf
or
pusha
loopne
and
cwde
jmp
add
dec
and
enter
xor
sub
push
dec
pop
cmp
pop
or
stc
jae
sub
aas
add
lahf
aad
sbb
push
or
out
adc
push
push
sub
sti
sbb
lods
mov
add
pop
test
popf
fwait
iret
lds
xchg
outs
into
jmp
popf
inc
jmp
leavew
push
call
(bad)
nop
cld
ins
push
les
repz
dec
dec
sbb
stos
int
add
jecxz
mov
sub
pop
loop
out
int3
push
stos
pushf
pushf
stos
cmp
pop
push
popa
mov
shl
cmp
jns
das
adc
inc
jge
aaa
pop
push
mov
aaa
out
jge
cmp
data16
enter
fs
ins
test
test
movs
sub
mov
sbb
in
jp
cmp
fs
cmps
pushf
fnstsw
mov
aam
mov
pop
jge
jae
xor
inc
loop
pop
mov
or
pop
and
inc
pop
movs
mov
cmp
inc
bound
or
add
push
movs
or
(bad)
idiv
sbb
and
loop
mov
sbb
cmp
in
inc
push
inc
or
lods
ja
mov
ss
retf
jecxz
sqrtps
pop
mov
add
pop
enter
adc
mov
push
stos
xor
addr16
jno
jnp
in
out
in
sbb
or
js
pop
push
sti
in
imul
out
xor
inc
movs
fsub
lock
jmp
cmovs
and
xchg
push
xor
add
sbb
test
mov
pop
xchg
add
call
or
cmc
retf
or
xchg
push
pop
inc
push
mov
mov
pop
das
xor
push
or
data16
cmp
mov
inc
das
jg
or
jmp
test
es
mov
nop
dec
lock
stc
retf
xchg
js
xor
pop
scas
cmp
sub
ds
add
cmp
jae
fwait
sub
adc
stos
inc
xor
js
lods
inc
push
or
dec
and
jb
and
pusha
xchg
mov
stos
and
movs
inc
pop
ret
xor
leave
mov
imul
jb
and
cmc
in
mov
neg
jl
push
ja
push
shl
and
cdq
mov
leave
pusha
ins
xor
push
cs
xor
adc
add
xchg
fldcw
xor
jbe
pop
jae
(bad)
sbb
dec
jne
or
lea
cmp
pop
out
cmps
cmps
ins
ret
movs
call
sbb
aam
lock
ss
adc
stos
sbb
dec
imul
or
fld
lods
xor
dec
jmp
(bad)
fs
movs
xor
xor
les
cli
test
jnp
movs
sub
imul
ret
aas
xor
(bad)
dec
pop
adc
or
es
mov
adc
mov
lds
add
sbb
xchg
fidivr
test
out
jmp
mov
js
pop
repz
push
add
out
dec
mov
mov
push
sub
push
test
pop
sbb
hlt
jmp
pop
push
adc
push
sbb
(bad)
(bad)
nop
dec
outs
ins
fnstcw
xchg
cmp
fdivr
jmp
xchg
jbe
loope
fwait
pop
jle
xlat
add
popf
jnp
nop
sti
fisttp
sbb
int3
test
mov
pop
lods
ins
dec
scas
scas
or
mov
xor
add
add
pop
test
xlat
(bad)
(bad)
push
cmp
les
cli
sbb
fmul
cmps
loopne
leave
stc
lods
inc
ss
xchg
adc
js
dec
or
jns
push
mov
loopne
(bad)
outs
gs
cmp
ror
fiadd
sub
push
stc
test
pushf
fsubp
popa
mov
jns
push
repnz
shr
add
add
push
sbb
fst
sbb
or
jmp
adc
dec
mov
mov
imul
(bad)
push
or
lock
dec
test
xchg
mov
out
popa
popf
(bad)
xor
loopne
lock
cmp
adc
push
sub
mov
addr16
sub
pop
add
dec
sub
adc
aad
pop
mov
cmp
cmp
(bad)
xor
cld
dec
push
xchg
outs
or
mov
sar
xchg
inc
push
mov
(bad)
pop
and
mov
movs
push
lods
xlat
icebp
fldl2t
push
sti
cmp
push
inc
cmp
inc
outs
je
jmp
into
add
sbb
mov
or
sub
sub
adc
jae
cmps
fs
and
cmp
sbb
shl
lahf
pop
nop
cmc
ss
mov
xchg
push
inc
jnp
jnp
stos
retf
jo
xor
enter
mov
test
sbb
mov
and
outs
clc
in
inc
adc
test
(bad)
xlat
push
mov
push
adc
retf
stc
sahf
in
sbb
or
mov
mov
mov
bound
es
xchg
sub
clc
test
loopne
pop
jnp
adc
hlt
and
je
mov
daa
call
les
push
pop
ret
pop
sbb
setle
lock
lds
dec
add
push
rol
ins
or
adc
test
iret
dec
sbb
and
imul
jb
mov
jne
rcl
jmp
mov
pop
mov
dec
mov
sqrtps
arpl
ins
sbb
enter
aas
mov
xor
pop
lea
mov
clc
dec
push
(bad)
(bad)
pop
ds
push
mov
add
stos
scas
mov
jmp
mov
fidivr
(bad)
int3
test
cdq
mov
ins
cmp
imul
jne
shl
js
pop
loop
cdq
ret
fisubr
pop
ror
scas
movs
and
xor
fs
pusha
xor
cmp
sti
or
scas
inc
pop
mov
in
mov
int3
test
cmp
sub
clc
push
xchg
ret
int
into
and
jmp
rol
jo
pop
in
stos
outs
scas
fwait
xor
xchg
push
dec
or
aas
int3
mov
sub
jb
inc
mov
xchg
push
pop
push
retf
push
pop
xor
pushf
ins
out
retf
cmp
pop
xchg
dec
jnp
jb
cmp
mov
jbe
rcl
inc
mov
(bad)
(bad)
icebp
fimul
push
sub
pushf
add
test
inc
pop
pushf
push
call
jae
dec
jge
jl
out
aas
stc
std
paddusb
hlt
mov
sahf
inc
jae
inc
out
and
into
es
inc
lea
or
add
mul
mov
jae
stc
imul
push
cmp
sub
fwait
pop
lds
stos
jbe
xor
jecxz
stc
nop
cmp
psraw
and
movs
cmp
rcr
cmp
loopne
sbb
adc
in
or
add
(bad)
ins
cmp
jae
mov
cli
pop
call
sbb
out
(bad)
std
dec
(bad)
mov
repz
mov
loop
or
(bad)
jmp
cmp
adc
and
adc
popf
out
dec
and
mov
mov
xor
fs
cmp
jb
aas
ja
aam
(bad)
xor
std
retf
int
ja
add
jae
xchg
(bad)
popf
inc
je
pop
aad
xchg
repnz
repz
mov
loop
or
jae
pop
sbb
sbb
(bad)
jecxz
int
mov
push
mov
call
scas
cs
daa
iret
stos
and
scas
mov
add
mov
inc
add
fwait
leave
cmp
dec
outs
pop
ret
iret
int3
xor
retf
arpl
test
push
mov
mov
in
cmp
xchg
cmp
and
loopne
push
jns
mov
sub
lods
jecxz
in
push
or
or
pop
dec
and
mov
dec
cmp
in
mov
fsub
pop
push
adc
js
sbb
rol
sub
cmps
shr
adc
add
cs
mov
jmp
(bad)
stc
mov
es
add
xchg
mov
xchg
jge
loop
or
push
loop
sahf
mov
sub
mov
movs
retf
mov
out
cmp
pop
push
mov
push
out
push
mov
sbb
or
cmp
fsub
out
mov
and
jbe
mov
adc
push
xor
repnz
leave
sti
daa
enter
mov
retf
stos
lock
retf
ins
sub
fmul
fbld
stc
pop
test
sub
sub
xor
ds
pop
mov
ins
jge
cmp
push
fcmovnbe
jns
sbb
mov
push
inc
stos
cmps
sub
sub
or
xchg
in
mov
dec
pusha
dec
arpl
(bad)
mov
je
ret
push
mov
xchg
and
lods
cdq
push
jmp
push
fs
xor
dec
shl
addr16
aad
div
jb
sub
jbe
push
and
stos
sbb
jno
jbe
int
in
xchg
ss
cmp
xchg
sub
xchg
adc
sub
mov
movs
sbb
cmps
ins
mov
popf
sbb
or
pop
test
shl
imul
dec
js
jns
ins
rcr
sbb
lahf
arpl
test
inc
mov
mov
mov
loopne
ficomp
imul
and
mov
loopne
dec
or
push
pop
ret
xchg
fistp
shl
(bad)
and
imul
aam
push
fwait
mov
mov
test
inc
xlat
ins
pushf
lea
push
js
sub
fiadd
mov
and
mov
imul
out
or
lods
cmp
aam
add
hlt
cmp
(bad)
lea
inc
bound
xor
ja
add
or
mov
test
pusha
data16
shl
test
imul
ins
inc
fdivr
int3
fidiv
loope
mov
xchg
pop
or
mov
das
mov
lock
cdq
xor
imul
fnsave
adc
sub
cdq
test
sbb
xor
xchg
adc
fs
data16
sbb
call
test
pop
das
lds
jns
or
push
push
add
imul
inc
pop
inc
push
ret
fs
push
(bad)
cmp
jl
dec
ja
cmp
movs
sbb
jmp
xchg
cmp
inc
mov
jns
jnp
xchg
xchg
xchg
xchg
or
(bad)
lods
or
pop
dec
popa
sbb
and
mov
lods
adc
mov
mov
gs
fisttp
mov
scas
callw
fld
pop
scas
xlat
scas
add
jne
jnp
xor
aas
inc
mov
adc
ins
mov
dec
inc
imul
jbe
mov
mov
and
aaa
cmp
test
push
cmp
scas
or
(bad)
fild
mov
in
pop
sbb
dec
loope
cmp
or
cli
mov
ror
mov
ds
pop
push
or
push
ins
arpl
cld
and
test
sti
sbb
jmp
cs
add
adc
or
jns
test
fwait
cmp
add
add
mov
jle
add
fst
add
sub
jecxz
adc
std
test
pop
mov
jge
retf
ret
inc
jl
and
scas
fpatan
ret
mov
stos
pop
(bad)
hlt
sub
ja
mov
clc
imul
sar
jle
ja
push
mov
mov
shl
out
or
jmp
cmps
jmp
jge
aam
fbstp
or
mov
push
in
mov
xor
stc
mov
jb
cdq
mov
push
mov
xchg
pop
add
push
lahf
ins
xor
aaa
(bad)
inc
rol
inc
cmc
and
inc
xchg
push
push
jmp
jns
(bad)
mov
loope
sub
xchg
ins
ins
pop
ds
sbb
or
movs
retf
push
push
mov
test
retf
mul
repz
xchg
in
sub
bound
add
mov
mov
es
imul
or
fstp
dec
dec
shl
test
jmp
fisttp
jecxz
cli
add
adc
pop
inc
pop
mov
stc
mov
lea
push
subps
cmps
mov
mov
in
cmp
(bad)
sbb
inc
mov
xchg
xchg
fs
mov
xchg
dec
xlat
popa
inc
cmp
mul
mov
xlat
arpl
loopne
ds
imul
imul
bnd
mov
push
addr16
std
rcl
popf
ds
aaa
mov
mov
xor
mov
pushf
mov
xchg
cmps
fmulp
clc
and
mov
jge
out
and
mov
(bad)
loop
dec
xor
ss
int
cmp
xor
sbb
test
pop
push
scas
add
imul
jge
cwde
pushf
sar
push
inc
js
iret
jmp
jo
jbe
or
add
(bad)
xlat
jbe
daa
add
test
int3
dec
or
mov
mov
gs
out
mov
neg
(bad)
shr
jbe
adc
loope
imul
cmp
test
sub
jo
cld
cmp
iret
xchg
cmp
jb
retf
mov
adc
dec
add
in
shr
cwde
test
in
rcl
add
sti
or
and
dec
bound
std
adc
(bad)
adc
sbb
movs
mov
gs
push
sub
jb
adc
jae
pop
adc
dec
pop
sbb
pop
push
cmp
inc
xlat
jbe
xchg
cmp
xor
cmps
mov
add
add
icebp
mul
or
and
pushf
push
icebp
inc
pop
clc
and
(bad)
nop
jecxz
bswap
daa
and
xchg
cld
mov
add
and
cs
outs
cwde
cmp
or
ficom
daa
sub
dec
rcl
and
push
or
sub
inc
call
shr
add
enter
iret
in
pop
jmp
and
dec
sbb
dec
jne
daa
mov
icebp
mov
lods
stos
and
mul
pop
mov
jb
add
(bad)
sub
fidivr
xor
fcomi
xchg
mov
fcmovnbe
cmps
cli
icebp
mov
arpl
fadd
scas
or
mov
push
ins
dec
mov
pop
mov
inc
bound
inc
sub
rcr
sahf
sub
adc
adc
fsubr
int
pop
xor
and
lock
in
nop
and
cmp
fisttp
dec
out
inc
mov
add
mov
stos
(bad)
adc
xor
inc
sub
pop
ret
push
inc
sub
dec
adc
imul
or
xchg
ins
nop
mov
xchg
popa
mov
in
dec
pop
mov
pop
dec
cld
popa
stos
loop
or
inc
jno
pop
lds
shl
and
push
(bad)
adc
mov
and
mov
inc
movs
ja
je
sbb
dec
mov
sbb
cs
out
dec
xchg
lods
add
out
pop
sti
mov
cwde
cmps
push
xor
mov
xchg
int
leave
push
nop
or
repz
mov
popw
xor
lock
nop
mov
jmp
pop
cmp
bound
jge
ds
movs
pop
push
mov
vpsadbw
mov
nop
int
add
dec
mov
mov
inc
sbb
hlt
inc
movs
and
pop
mov
shl
push
sahf
push
pop
adc
jbe
scas
push
xchg
fstp
ja
sbb
inc
aas
(bad)
das
pop
das
push
or
xchg
out
xor
call
lods
cmp
mov
clc
xchg
lock
sub
ins
mov
xchg
cmc
and
jbe
imul
lahf
sbb
and
mov
and
retf
ins
adc
jecxz
xchg
mov
and
jle
sub
pop
test
dec
sbb
dec
push
lock
ins
xchg
std
jg
add
sar
mov
jnp
fsubrp
out
sub
xchg
lea
hlt
fwait
push
cmp
out
pop
ins
outs
fistp
lods
(bad)
sar
stos
mov
test
hlt
hlt
jmp
jmp
ds
adc
xchg
and
dec
sub
xor
jmp
inc
sbb
pop
lods
(bad)
out
mov
shl
and
loop
dec
xchg
dec
mov
xchg
aad
cmc
push
sub
into
ror
repz
ss
cwde
sbb
or
test
mov
inc
sahf
ret
loop
and
(bad)
fcomp
or
bound
inc
(bad)
cld
movs
xchg
inc
add
or
bound
jecxz
mov
xchg
jnp
in
dec
adc
outs
call
mov
mov
inc
div
adc
clc
or
mov
jae
mov
das
xchg
push
add
or
dec
fnsave
clc
jns
ins
pop
inc
in
xchg
lea
xchg
movs
out
aaa
mov
push
pop
xchg
outs
cmp
or
aas
lds
or
mov
jmp
dec
in
shr
mov
cli
cs
sahf
leave
stc
call
scas
add
cld
pop
mov
adc
sbb
retf
call
shl
adc
xor
lds
mov
out
imul
hlt
enter
or
stos
xor
mov
sbb
ficomp
jecxz
jns
pop
add
mov
popa
dec
xchg
pop
sbb
mov
or
in
mov
pop
fwait
push
mov
mov
inc
jl
jno
cmp
xchg
mov
dec
(bad)
loop
std
sub
sar
xor
sbb
int
xchg
shl
xchg
cmp
mov
enter
sti
je
push
inc
cli
pop
mov
inc
call
cmp
mov
int3
add
sbb
add
out
push
std
xor
xchg
lea
jp
arpl
push
test
(bad)
out
int
(bad)
std
inc
repnz
ins
jmp
mov
adc
icebp
daa
sub
cmp
(bad)
(bad)
pop
neg
dec
pusha
cmp
test
add
push
or
div
sbb
ficomp
push
jno
test
mov
adc
push
push
sti
neg
(bad)
jmp
adc
adc
push
pop
dec
fucomip
sbb
jo
mov
test
cwde
scas
jl
int
cmp
or
push
dec
loope
dec
in
repz
add
pop
jb
or
nop
adc
and
jae
nop
(bad)
fiadd
in
lea
xchg
outs
dec
sti
mulps
lahf
mov
inc
inc
out
add
fild
fs
jecxz
in
xchg
inc
cdq
js
nop
xchg
dec
mov
(bad)
fnstenv
cmp
pop
in
sub
bound
cli
mov
leave
inc
je
je
addr16
test
xchg
int3
or
mov
push
imul
xchg
or
push
repnz
imul
fbstp
sub
or
dec
retf
fnstcw
xor
mov
sbb
into
lahf
dec
fld
mov
enter
(bad)
jbe
mov
stc
xor
mov
fidiv
retf
mov
loope
in
add
pop
mov
icebp
je
mov
rep
adc
fsubr
fmul
les
jle
add
fld
arpl
jg
fidivr
push
xchg
inc
cdq
ins
leave
mov
mov
and
cmps
cdq
outs
pop
mov
adc
(bad)
jne
jae
arpl
jge
outs
rcl
mov
fadd
bound
sub
push
jle
fcom
xlat
cdq
cwde
mov
jl
ret
cmp
fcmove
push
mov
shl
ror
dec
(bad)
stos
pop
test
aad
movs
jg
sub
mov
or
jmp
sbb
add
cmc
pop
std
pusha
mov
or
rcl
adc
int
mov
push
adc
out
add
jl
fwait
mov
mov
fmul
aaa
push
out
popf
jno
test
clc
es
mov
inc
dec
jne
and
adc
xor
dec
mov
scas
push
inc
cld
mov
jns
add
imul
mov
push
sbb
in
inc
ret
and
loope
mov
dec
push
pushf
pushf
movs
jmp
pop
cld
sub
adc
dec
outs
mov
mov
ins
lea
outs
aam
jge
add
and
shl
and
stos
daa
ins
repz
adc
dec
fsubrp
(bad)
ins
inc
pop
je
pop
mov
retf
jns
mov
mov
push
mov
movs
pop
(bad)
and
mov
sub
leave
pop
arpl
xchg
pop
jle
mov
xor
(bad)
and
clc
dec
jecxz
das
xchg
in
fst
dec
(bad)
jns
mov
pusha
cmc
and
xchg
adc
hlt
inc
push
lds
push
xchg
mov
xor
mov
bound
jl
clc
xor
cmp
and
fsub
in
xlat
push
test
fadd
cdq
jnp
and
sub
inc
jl
arpl
es
pop
dec
mov
fisub
push
cmovp
mov
scas
inc
mov
test
fist
or
xor
mul
clc
sbb
popa
push
loopne
push
sbb
push
push
push
add
mov
mov
loope
or
or
xchg
shl
adc
push
test
mov
aaa
fstp
pop
rcl
or
enter
out
outs
jl
sti
jle
cmps
sbb
cmp
cdq
pop
rcl
rol
push
lods
and
push
add
jle
dec
pushf
cmps
mov
sub
loope
add
cmp
out
bound
lea
cld
xchg
retf
rol
sbb
push
out
wrmsr
outs
mov
mov
xchg
jle
rol
sbb
jmp
adc
add
xchg
push
ror
popa
push
xlat
lods
xlat
pop
(bad)
gs
or
iret
pop
(bad)
cmp
shl
scas
add
mov
mov
test
js
sbb
icebp
xchg
repz
ret
test
and
out
mov
pop
cdq
jl
outs
icebp
(bad)
or
push
xchg
and
stos
gs
enter
out
(bad)
mov
cmp
jmp
cdq
jo
test
sub
sub
ret
enter
out
add
rcl
jns
pop
or
push
cmp
outs
push
dec
(bad)
(bad)
inc
and
les
or
(bad)
jmp
or
popa
add
ds
sbb
adc
jecxz
jnp
jnp
add
rcr
mov
and
neg
dec
es
pop
jle
iret
xchg
push
push
mov
sbb
fdiv
adc
into
std
out
jne
cmps
rol
push
jle
popf
dec
lods
lods
pusha
repnz
icebp
jmp
adc
sbb
inc
clc
bnd
nop
ja
fdiv
mov
sahf
sub
test
je
nop
sub
sub
jl
aam
or
lea
inc
jae
(bad)
xchg
in
pop
je
fs
dec
cdq
test
es
fs
sbb
mov
mov
cli
(bad)
shl
out
ja
dec
fadd
adc
aas
inc
jle
adc
mov
push
add
push
nop
inc
stos
xchg
imul
mov
(bad)
into
test
push
je
bound
push
mov
shl
jbe
mov
or
fiadd
or
mov
push
addr16
push
scas
inc
adc
jl
mov
dec
inc
xor
and
retf
icebp
in
and
mov
cmps
push
cmp
push
or
xchg
mov
fbstp
out
mov
lock
mov
or
adc
shl
lods
pop
test
cmp
inc
sbb
icebp
dec
lock
inc
enter
xchg
movs
dec
repz
test
loopne
out
(bad)
xchg
push
dec
pop
je
dec
mov
sbb
test
add
xchg
and
mov
and
pop
sub
ja
outs
cmp
jae
inc
push
or
shl
push
hlt
test
(bad)
sahf
and
call
xchg
jbe
out
sahf
add
mov
(bad)
lock
xchg
xchg
or
push
mov
cmp
arpl
loopne
popa
ins
in
mov
push
inc
adc
bswap
inc
jle
sbb
mov
cli
mov
loop
xor
mov
jl
jl
pop
dec
lea
push
fsubr
pop
add
test
xchg
pop
ret
sub
imul
arpl
lods
xchg
mov
(bad)
loope
repnz
sub
dec
cmps
sub
adc
lods
sbb
jmp
fimul
add
cmp
push
sti
xor
add
jg
push
pop
bound
arpl
call
or
or
retf
mov
jg
pop
mov
repnz
les
and
out
xchg
out
xor
lods
jmp
mov
retf
je
xor
xchg
add
pop
mov
and
mov
fsub
nop
mov
pop
mov
or
mov
loope
out
bound
mov
push
add
es
xor
imul
fucomi
xor
dec
pop
jae
jmp
scas
hlt
xor
mov
gs
cld
lods
movs
push
mov
cwde
push
int
mov
jp
mov
iret
jle
xchg
movs
cld
stos
mov
retf
cs
imul
in
call
xor
xchg
adc
aad
dec
(bad)
clc
dec
push
adc
mov
out
xor
xor
cmp
(bad)
xlat
pop
add
shr
dec
out
inc
mov
add
dec
sub
sub
or
push
repz
mov
xchg
pop
aad
js
enter
xchg
les
imul
inc
mov
dec
xor
scas
pop
mov
leave
add
enter
dec
aaa
add
loope
sub
cmp
jg
(bad)
dec
adc
repnz
mov
or
aad
repz
ror
lods
and
aam
mov
sahf
in
and
movs
dec
adc
adc
out
out
int3
mov
movs
inc
sbb
data16
xchg
scas
sub
ja
(bad)
mov
imul
loop
add
idiv
xchg
ds
and
jp
xor
out
icebp
inc
fwait
imul
add
jmp
cmps
jp
add
lds
xchg
mov
aad
rcr
outs
jb
mov
cmp
xchg
test
call
idiv
cmp
shl
dec
stc
in
inc
loopne
stos
jae
nop
or
lock
mov
bound
in
mov
xor
dec
pop
xor
or
mov
cmp
out
sbb
mov
inc
movs
imul
sbb
rcl
push
shl
mov
out
ss
mov
imul
stos
pop
cmp
retf
addr16
movs
movs
test
or
pop
xlat
mov
lock
fs
cmc
clc
movs
sub
xor
arpl
add
and
dec
imul
lds
mov
mov
cli
in
or
lahf
sahf
inc
fsubr
adc
sbb
sbb
adc
bound
jnp
push
mov
jecxz
sub
int3
loopne
sub
xchg
ja
sti
les
ret
int
out
iret
push
cmp
cld
test
jae
push
cmp
push
add
sti
jle
jns
test
out
sub
adc
mov
xchg
dec
sub
jmp
inc
push
arpl
pusha
adc
sub
xor
push
ins
fdiv
adc
dec
rcl
test
mov
sbb
in
and
pop
push
add
(bad)
js
fdiv
arpl
push
inc
xchg
leave
pop
outs
cmc
out
push
not
int3
int3
pop
pop
adc
in
jl
adc
sub
ret
rol
add
scas
bound
dec
pusha
inc
aad
lods
hlt
and
dec
out
repz
(bad)
out
jbe
and
pop
pop
dec
adc
test
mov
mov
iret
movs
ins
repz
cmps
enter
xchg
mov
lds
fcomp
movs
es
outs
pop
ins
inc
in
or
lahf
xor
retf
or
pop
mov
loopne
mov
xor
jae
and
inc
pop
pop
ins
les
lds
into
test
or
cmps
loop
mov
xor
pop
repnz
jp
fcomp
pop
pop
mov
test
mov
popf
loopne
xor
cmp
movs
xor
push
mov
cmps
ror
jge
fwait
add
xor
dec
out
mov
stos
adc
and
in
push
aas
xchg
outs
fild
cmp
bound
mov
xchg
fiadd
adc
nop
sub
mov
push
cmp
mov
in
add
dec
pushf
pop
out
pop
push
scas
sbb
sbb
push
shl
lea
dec
call
cmp
pop
fistp
sahf
xchg
movs
jl
or
jns
mov
xchg
adc
xor
xchg
mov
inc
(bad)
mov
lds
xor
addr16
add
lock
mov
mov
test
inc
xor
fdiv
outs
shl
scas
(bad)
pop
shl
or
adc
push
adc
push
lahf
mov
push
xchg
scas
(bad)
cmp
fdiv
or
imul
imul
jb
or
inc
adc
push
jne
shl
call
pop
sub
mov
xor
xor
add
test
sub
stc
xchg
mov
adc
adc
add
fisttp
das
imul
cmp
inc
in
loopne
adc
push
and
lods
jp
push
sahf
pusha
ss
cmps
retf
mov
adc
pop
or
stos
int3
fwait
cmp
add
sub
fistp
mov
imul
xchg
adc
push
sub
aad
sub
pop
and
fstp
scas
in
pop
push
icebp
ds
pop
and
stos
cmp
mov
xchg
dec
cmp
add
in
mov
dec
push
in
ss
dec
clc
sub
push
sbb
fild
scas
les
in
inc
int
pushf
add
mov
jl
and
pop
jmp
jbe
fldl2t
das
retf
xlat
xchg
ins
shl
fwait
lea
call
push
and
push
(bad)
sbb
scas
mov
inc
test
dec
cmp
pop
mov
imul
push
(bad)
cmp
out
jecxz
loop
or
repz
cmp
push
cmp
push
loope
(bad)
mov
add
mov
(bad)
xlat
lahf
xchg
clc
and
(bad)
jnp
xchg
popf
rcr
sub
push
std
and
nop
xor
out
inc
sub
adc
or
push
nop
stc
fidivr
xor
mov
sahf
pop
loop
pop
into
xchg
xor
test
or
jnp
in
adc
sub
adc
adc
hlt
inc
jecxz
mov
mov
out
push
das
jo
fsubr
jmp
or
mov
xchg
fdivrp
dec
adc
xchg
ins
in
sub
hlt
pop
jmp
pop
inc
dec
not
int3
jmp
je
jecxz
retf
imul
icebp
shr
leave
sbb
(bad)
shl
scas
cs
int3
jl
xchg
std
cmp
int3
or
xchg
sub
stos
sub
std
in
cmps
call
addr16
sub
inc
add
pusha
loope
fs
cdq
sub
arpl
cwde
xor
test
pop
(bad)
mov
stos
add
or
xchg
ins
outs
int3
jo
inc
jecxz
add
outs
sub
mov
jmp
test
cmps
add
push
jbe
dec
xchg
jle
popa
fdivr
test
add
out
jb
jno
clc
mov
cmp
pop
fwait
test
jne
repz
inc
sahf
xchg
scas
mov
es
neg
ficomp
sar
sar
xor
cwde
push
cmp
int
ss
imul
movs
add
fwait
int3
(bad)
cld
ins
cld
cmp
(bad)
xchg
mov
cmps
xchg
mov
inc
shl
push
lods
ret
(bad)
pop
iret
jg
mov
push
push
ja
(bad)
inc
dec
push
je
jo
aas
not
cmp
aad
shl
in
sbb
cmps
mov
pusha
out
xchg
inc
retf
cmc
stc
and
push
sbb
cmp
scas
xchg
xchg
and
xchg
retf
inc
xor
test
push
fiadd
mov
jp
mov
fiadd
in
movs
xchg
jbe
push
inc
cmp
sub
adc
mov
add
add
push
daa
rcr
dec
aas
movs
repz
cli
scas
mov
in
int
icebp
js
test
test
push
popa
jp
jg
sub
mov
mov
inc
sbb
hlt
mov
add
vpmaxub
retf
mov
and
icebp
arpl
and
mov
xor
sub
neg
jb
xchg
lock
add
mov
out
push
push
es
pop
adc
pusha
imul
adc
shl
ss
out
inc
enterw
adc
in
in
out
mov
add
mov
cmps
les
sbb
jge
ja
daa
ss
sbb
push
hlt
das
add
rcr
push
enter
mov
scas
and
inc
sbb
popf
jmp
pop
ds
enter
inc
scas
fisttp
cdq
jmp
push
(bad)
pop
ret
dec
ret
retf
cli
fild
fldcw
xor
addr16
shl
xor
dec
or
fsub
fld
xchg
fwait
cwde
sub
lahf
pop
shr
lods
add
das
push
mov
inc
inc
and
xor
movs
aad
jge
add
jb
retf
shr
xchg
push
call
(bad)
(bad)
fnstsw
pop
adc
xchg
ss
test
add
retf
mov
sub
cmp
int
mov
les
push
jge
cwde
mov
fsubr
inc
mov
jno
call
ins
jle
aam
add
cwde
sub
icebp
cs
scas
mov
out
pop
add
pushf
inc
loopne
int
and
loop
nop
sub
sbb
fs
dec
fcomp
mov
nop
rcl
mov
retf
stos
sbb
ins
add
jecxz
aad
js
ret
xor
mov
fistp
retf
jecxz
mov
ins
sahf
movs
jbe
fwait
jl
push
fadd
das
out
loopne
aad
cmp
or
jg
mov
jge
test
shl
dec
xor
xor
or
mov
pusha
jge
push
call
daa
cld
test
pushf
lahf
add
sub
adc
push
sub
out
add
and
retf
pop
cwde
mov
loopne
sub
xor
aaa
mov
cmp
mov
scas
in
into
mov
or
aaa
cmps
cmc
sub
fdivr
mov
pusha
stos
enter
leave
sub
pop
adc
and
push
out
push
mov
xchg
enter
movs
cld
cmp
loop
cmps
out
(bad)
out
cmps
es
call
loope
je
dec
jecxz
sbb
adc
outs
fs
gs
test
jo
and
icebp
mov
pop
mov
mov
aas
dec
sbb
xlat
mov
push
adc
or
iret
add
(bad)
imul
repnz
or
sub
fistp
push
ins
cmp
fbstp
pop
iret
adc
fmul
xchg
mov
xor
repz
mov
mov
xor
jl
jo
xlat
mov
neg
cmc
ins
sub
mov
push
addr16
push
fstp
mov
inc
push
lods
dec
xchg
(bad)
add
pop
aad
test
sahf
cmp
test
dec
xchg
dec
xor
mov
mov
or
ficomp
and
jmp
xor
push
inc
mov
xchg
pop
stc
cmp
idiv
mov
xor
(bad)
in
or
movs
fst
push
cld
test
into
bound
inc
inc
sub
adc
xor
ret
pop
mov
ret
mov
inc
pop
dec
cdq
jno
into
nop
cmp
jp
jle
cmp
sub
psraw
(bad)
stc
(bad)
jmp
and
mov
xchg
cld
sti
cmc
das
sar
rcr
mov
ins
call
push
leave
int
jle
push
mov
jns
adc
cmp
js
rol
inc
sub
popa
inc
lods
sub
or
jbe
in
sahf
push
dec
jns
lods
popa
lds
sar
xor
xchg
and
(bad)
sbb
cmp
xchg
add
pop
jno
pusha
cli
and
and
dec
ror
lods
jne
in
pop
lds
mov
add
or
cmp
(bad)
adc
jmp
push
hlt
jg
dec
mov
in
sbb
mov
mov
dec
inc
pop
inc
adc
pop
dec
xchg
push
jo
push
fwait
out
pusha
es
outs
sub
gs
outs
movs
sbb
out
pop
mov
cli
stos
into
cmp
cs
add
mov
cmp
fcom
push
cmp
mov
fst
ror
pop
xchg
shl
jns
sub
and
cmp
or
cli
push
lods
pop
jno
jl
jp
mov
rcr
cmc
in
jmp
dec
dec
pop
mov
mov
or
ret
(bad)
div
push
pop
jnp
push
repz
adc
enter
in
sub
lea
fmul
repnz
jne
in
xchg
mov
dec
rcl
cmc
mov
popf
inc
sbb
push
jp
ja
or
fist
ret
pop
sub
in
retf
call
xchg
push
cwde
movs
int
repz
xchg
or
push
outs
dec
fwait
clc
lods
dec
mov
mov
mov
sub
or
sbb
inc
mov
js
enter
mov
js
xor
lea
stc
pushf
pop
sbb
call
jmp
aas
cmps
cmc
daa
pop
scas
adc
test
inc
stos
add
stos
pop
addr16
inc
cli
and
test
sbb
cdq
pop
push
and
mov
push
mov
stos
xor
pusha
push
add
add
mov
jnp
icebp
leave
lahf
mov
repz
pop
mov
das
mov
lock
add
sub
push
movs
cmp
adc
xor
cmc
cmp
push
sub
stc
ins
(bad)
mov
and
shl
cmps
push
popf
movs
jb
loopne
div
imul
ficomp
jmp
pop
stc
ins
mov
xchg
pop
test
vmovsldup
imul
aam
test
jecxz
push
pushf
fist
out
test
push
jmp
iret
push
xor
in
sub
sbb
jle
(bad)
pop
shl
mov
pop
sbb
cmp
jae
add
jle
pop
je
xchg
and
sbb
pop
push
mov
or
pop
push
repnz
retf
push
and
cld
scas
(bad)
mov
dec
mov
sbb
inc
call
stos
jmp
adc
cmp
sbb
retf
sbb
fucomip
and
jnp
shl
inc
pop
aad
xchg
mov
sbb
and
jns
adc
ins
int3
mov
stc
sub
aaa
mov
push
mov
out
sbb
retf
loopne
ret
or
fdivr
mov
xor
cmp
in
pop
push
test
lods
cmps
(bad)
mov
clc
sbb
jbe
sbb
mov
ss
and
lds
pop
add
mov
mov
jmp
pusha
movs
cmp
pop
dec
(bad)
enter
sub
ret
push
or
daa
scas
imul
cwde
rcl
cmp
cmps
xchg
test
push
mov
scas
push
adc
mov
and
es
adc
in
cmp
sti
xor
mov
sub
and
mov
clc
mov
inc
icebp
jbe
scas
out
jbe
dec
xor
xchg
pop
or
std
push
mov
cmovno
xchg
mov
outs
cs
pop
push
push
pop
inc
fadd
test
sbb
popf
nop
stc
das
fidiv
gs
mov
mov
adc
cmps
popa
int3
sbb
add
xor
mov
test
mov
aaa
jge
or
add
xchg
(bad)
rcl
addr16
push
into
push
call
sub
xchg
in
mov
(bad)
(bad)
push
adc
sbb
dec
add
push
jnp
iret
and
push
cs
add
inc
mov
xchg
fwait
ins
jo
xchg
clc
gs
and
sahf
ret
jl
mov
fcomp
cmp
dec
stos
cdq
xor
lock
sub
mov
push
mov
sti
sbb
repz
mov
arpl
mov
xchg
push
xlat
stos
xlat
or
imul
xor
or
or
std
shl
out
xchg
icebp
pushf
aam
jle
push
test
cmp
retf
retf
mov
fldenv
adc
sub
jmp
dec
pop
push
ret
sub
jns
mov
test
pusha
and
mov
push
add
scas
push
cmp
leave
dec
das
cwde
loope
and
xlat
pop
test
rcr
icebp
mov
shl
push
push
lock
pop
mov
mov
sub
(bad)
fld
mov
sub
fidiv
leave
inc
sub
xlat
dec
gs
xor
fsubr
add
vmwrite
pop
pop
inc
push
ret
div
mov
cmp
pop
adc
cmc
jmp
push
mov
sub
mov
jne
inc
sub
push
xchg
jae
adc
add
sbb
leave
pop
push
xchg
or
mov
push
pushw
cmps
sbb
clc
cmp
out
aaa
push
adc
mov
or
sbb
mov
nop
sbb
das
or
or
mov
call
push
push
cmp
dec
loope
or
pusha
sub
pop
imul
push
sti
lods
mov
mov
sbb
hlt
cmp
sbb
shl
push
xchg
ret
mov
in
cmp
jne
sbb
data16
les
or
sar
mov
jbe
and
rol
enter
push
call
cmp
mov
sbb
retf
sbb
xor
pop
pop
movsx
sub
fist
sub
lea
adc
mov
jl
jmp
sahf
xlat
adc
in
sar
sbb
bnd
mov
add
push
test
std
in
stc
xor
dec
in
push
test
jbe
mov
inc
and
nop
popa
ins
xchg
jae
icebp
dec
adc
loop
mov
leave
xchg
mov
(bad)
mov
push
aaa
xchg
sbb
pop
adc
jns
mov
jnp
jle
cmps
leave
xor
push
push
dec
jmp
adc
jo
sbb
inc
scas
mov
(bad)
in
and
mov
imul
fisubr
mov
xchg
inc
stc
cmps
cwde
push
or
out
lds
sub
(bad)
and
nop
sub
loope
cmp
int3
popf
psllq
mov
pop
add
mov
and
loop
test
addr16
sub
into
pop
pop
aaa
mov
adc
push
or
mov
into
clc
dec
push
mov
xor
add
inc
and
mov
xchg
push
dec
mov
xor
or
mov
sar
fdivr
scas
(bad)
scas
sub
mov
fsubr
cwde
dec
pop
xchg
mov
(bad)
fcom
or
hlt
and
pop
fld
xor
inc
mov
inc
lea
aas
cs
push
sahf
test
es
lods
int
test
popf
xchg
leave
lock
mov
push
mov
mov
sbb
or
pop
mov
cld
xor
xor
pop
call
xor
in
loop
mov
xor
outs
rol
mov
add
in
retf
adc
mov
dec
push
push
xor
push
pop
push
xor
movs
push
call
push
scas
pop
add
sti
and
cmp
cdq
xchg
(bad)
cvtpi2ps
int3
jnp
pop
mov
or
ror
adc
push
sbb
jle
cwde
and
arpl
out
and
mov
out
out
sub
push
mov
push
mov
int3
xor
add
pop
dec
mov
mov
cli
popa
lods
repnz
cmp
and
inc
retf
aas
add
cmp
or
icebp
sbb
dec
std
ss
xchg
lds
movs
or
mov
test
(bad)
movs
xor
cmp
sbb
in
fnstsw
inc
psrlw
cmps
mov
stc
jo
scas
pop
call
bound
fmul
inc
rcl
lock
mov
or
js
push
or
sub
pushw
retf
cli
xchg
cmp
aaa
inc
sar
add
push
mov
mov
out
fs
xchg
retf
xor
mov
mov
dec
pop
mov
cmp
ins
mov
inc
sub
sub
iret
ret
mov
gs
out
(bad)
outs
mov
int3
popf
jge
pushf
mov
cmc
enter
mov
sahf
cmp
jmp
mov
mov
arpl
retf
push
xlat
ret
mov
and
sti
sbb
cmp
mov
xor
or
xchg
ss
outs
mov
mov
push
mov
xor
mov
dec
push
xchg
cmc
fld
sub
ret
pop
fwait
js
xchg
repnz
adc
dec
mov
shl
pop
test
adc
mov
xlat
int
xor
or
cld
fild
or
fadd
test
cld
ficom
cmps
mov
lds
fild
xor
pop
add
jb
jg
push
add
dec
jmp
cmc
mov
leave
ds
cli
test
or
mov
(bad)
or
jp
sbb
fild
dec
jmp
add
inc
push
popf
sub
sub
add
stos
test
js
mov
and
int
retf
imul
imul
sbb
push
jnp
mov
add
out
in
sbb
loop
jnp
mov
xor
mov
out
fstp
inc
mov
xchg
jp
cdq
mov
xchg
sti
mov
pop
ins
rcr
sbb
lods
xchg
mov
clc
sbb
xor
jecxz
loop
sbb
xor
ficom
add
inc
fstp
xor
push
(bad)
dec
call
cmc
xor
in
cmp
pop
add
ss
daa
mov
ins
xchg
enter
xchg
push
ja
adc
daa
pop
xchg
xchg
pop
xor
push
sub
cmps
mov
pop
cmp
mov
mov
cmp
sub
retf
mov
aam
xor
cli
inc
or
jmp
retf
retf
ss
sbb
in
adc
add
cmps
add
inc
xchg
or
mov
or
sbb
inc
div
dec
or
xor
pop
cmp
ror
outs
push
sub
vpsrld
mov
mov
fisub
sub
punpckhwd
ja
mov
std
in
(bad)
or
cmp
call
lock
arpl
repnz
adc
adc
cmp
jns
push
mov
inc
nop
shl
test
pop
sar
mov
push
repnz
jb
cmps
pop
or
fnstcw
repnz
in
stos
adc
nop
pop
or
mov
loope
cmp
call
adc
mov
pop
movs
rcl
stos
(bad)
sar
dec
fist
pushf
lea
movs
loopne
loopne
jo
pop
shl
pop
push
aad
jecxz
aad
cmp
inc
sbb
sub
cmc
std
cli
pmaddwd
sub
jmp
(bad)
pop
sbb
cli
das
outs
adc
lahf
add
popf
dec
dec
loopne
loope
cmp
xor
xor
ins
(bad)
xchg
jno
loop
aam
cdq
into
neg
jb
sub
jecxz
inc
aas
xor
xchg
adc
sahf
loopne
xchg
xchg
je
cld
adc
push
push
jl
cmp
push
jo
sar
jns
xchg
inc
jne
(bad)
clc
mov
and
mov
fidivr
and
call
lods
repnz
jp
test
push
ret
inc
not
jl
pushf
sub
push
adc
stc
push
push
push
jae
stos
inc
sbb
adc
mov
sti
jno
mov
jae
ja
rol
adc
push
or
xchg
out
pop
cmps
mov
inc
adc
fidiv
adc
cmps
dec
je
xchg
mov
(bad)
xor
or
out
or
pusha
test
cmp
popf
sub
test
daa
jmp
push
sbb
sbb
or
ds
push
dec
dec
push
imul
ret
mov
jno
xlat
xor
ja
(bad)
cmp
xchg
repnz
inc
pop
push
push
add
scas
cmps
outs
loopne
std
inc
jp
mov
in
mov
dec
fwait
jns
inc
sub
int
mov
data16
stos
pop
push
movs
jae
(bad)
movs
jmp
lock
or
and
mov
cli
iret
retf
enter
in
xchg
loope
fwait
or
push
sbb
adc
imul
imul
jmp
imul
or
adc
mov
fidiv
int3
dec
ins
mov
jge
mov
or
test
mov
test
jp
scas
fnstcw
mov
ins
pmuludq
pop
push
sti
cmp
pop
adc
in
jmp
pop
in
pop
or
sub
sub
adc
vmovdqu
nop
sbb
retf
adc
xchg
xor
or
push
ret
lock
dec
mov
fbstp
add
ja
xchg
(bad)
or
and
push
test
jo
pusha
push
mov
cmc
clc
add
xor
int3
jecxz
mov
mov
int3
mov
daa
aaa
xchg
stc
fistp
mov
lea
movs
call
dec
xor
arpl
shl
js
das
(bad)
out
jno
xor
gs
cwde
nop
daa
in
or
mov
out
stos
fidivr
fs
fwait
push
mov
jb
stos
mov
pop
xchg
fisubr
xchg
push
or
mov
adc
mov
(bad)
mov
je
mov
retf
jns
add
cmps
aaa
push
dec
sbb
mov
xor
lds
jmp
pop
jae
in
test
cmp
pop
add
mov
dec
pusha
and
adc
ins
sub
push
jmp
stc
or
mov
xchg
jmp
push
pop
add
outs
inc
jmp
in
push
xchg
adc
call
pop
movs
stos
arpl
(bad)
and
pop
mov
pop
sahf
test
xor
dec
sar
popf
jns
mul
(bad)
mov
push
jle
inc
sahf
add
dec
in
aas
test
sub
aaa
mov
data16
dec
iret
and
jmp
sbb
jecxz
add
fdivr
push
ja
loope
xchg
jae
push
dec
cmp
xor
je
sub
por
or
add
retf
repz
stos
inc
repz
outs
ffreep
sub
mov
lods
or
push
mov
or
sbb
sbb
or
ds
int3
dec
ds
pop
int3
mov
inc
push
in
adc
cdq
loope
mov
jle
xor
mov
test
dec
mov
aas
addr16
cmp
xor
std
xor
(bad)
jmp
mov
or
mov
or
sub
imul
fdivr
data16
test
cmps
mov
out
aad
cmp
imul
je
mov
inc
dec
inc
inc
in
les
rol
inc
das
loope
es
jmp
mov
add
dec
lahf
(bad)
repz
cmps
repz
push
movs
adc
cmc
pop
dec
xchg
or
xchg
ss
or
jl
scas
and
dec
cmp
xchg
dec
loop
dec
inc
leave
xchg
cmc
mov
cwde
lods
shl
or
cmp
into
xchg
sub
jmp
aas
push
push
inc
inc
stos
dec
iret
addr16
ret
test
in
loope
call
sbb
inc
or
mov
ja
mov
in
mov
or
mov
pop
push
dec
jae
jle
xchg
jge
xchg
sub
hlt
popf
sbb
in
loop
adc
int
sub
cwde
push
pop
mov
call
mov
pop
sbb
sub
cmp
push
adc
rcr
cwde
cmps
mov
mov
aad
test
cmp
dec
jge
push
jg
jg
adc
xchg
stc
pop
xchg
mov
lea
mov
scas
xor
cmp
das
sbb
mov
add
inc
cdq
js
inc
sti
sub
ds
mov
pop
or
xchg
mov
je
xchg
or
pop
xchg
sub
mov
stos
ror
xor
in
adc
and
push
sar
xchg
or
and
ss
fadd
ss
fidivr
or
sbb
dec
rcr
adc
imul
hlt
cld
adc
sub
sub
dec
mov
lahf
dec
test
movs
stc
fidivr
or
adc
in
xchg
jp
mov
gs
loopne
out
outs
movs
push
lods
jmp
xchg
daa
aam
jae
lods
aam
dec
stc
bound
mov
mov
mov
mov
and
sbb
cli
fst
sub
sahf
neg
cmp
sahf
mov
call
adc
cdq
pop
out
and
sbb
ret
hlt
lahf
test
sub
imul
loop
sub
mov
cmp
pusha
xchg
adc
push
pop
lahf
jmp
mov
sbb
ror
test
sbb
mov
pushf
and
leave
jne
stos
push
nop
mov
dec
ins
loope
sbb
fldenv
icebp
jnp
sub
test
or
test
neg
xchg
pop
pushf
dec
dec
jle
mov
pop
push
and
hlt
popf
fs
sbb
xchg
add
test
mov
or
sub
mov
fist
xor
xor
je
sbb
inc
adc
(bad)
aam
(bad)
jl
xchg
xchg
cmp
push
mov
push
out
mov
repz
jmp
sub
stos
jne
xlat
fwait
pusha
jnp
dec
ror
js
(bad)
push
cmp
dec
leave
cdq
or
fwait
scas
test
sub
add
popf
(bad)
cld
jnp
or
fidiv
aam
cmp
push
push
push
sbb
pusha
adc
mov
into
and
mov
icebp
and
out
xchg
and
rol
mov
push
adc
mov
add
jmp
ror
mov
pop
inc
cmp
or
jge
ss
mov
pop
shl
or
inc
call
mov
and
(bad)
xchg
or
sbb
inc
inc
por
test
hlt
test
xchg
aad
and
cmp
dec
push
imul
rol
jnp
out
xor
inc
(bad)
xor
ins
pop
inc
mov
int
xor
mov
cli
mov
scas
pusha
pop
xchg
ror
add
jne
adc
fs
cmps
push
lods
pop
cwde
iret
or
cmp
push
xchg
jnp
add
inc
and
jnp
xchg
cli
push
fwait
iret
inc
dec
ss
in
adc
(bad)
mov
nop
icebp
sbb
and
push
inc
jbe
cmc
fs
scas
aam
frstor
sar
int
jbe
adc
and
sbb
xchg
imul
and
inc
xchg
push
add
add
jmp
cmp
addr16
pop
lock
(bad)
mov
cmp
inc
xchg
and
fwait
or
mov
jns
adc
shl
and
in
dec
mov
aas
sbb
scas
push
xchg
fadd
xchg
and
stos
dec
sbb
sub
bnd
pusha
retf
mov
jne
rcr
js
les
lock
cdq
jnp
push
cmps
stc
jle
inc
aam
cmc
outs
xchg
sub
push
scas
jmp
dec
adc
pushf
sbb
ror
ins
out
push
or
xor
xor
mov
(bad)
in
es
cmp
mov
or
stos
mov
push
cmp
dec
mov
rol
and
add
or
xor
je
mov
xchg
and
sbb
pop
jmp
in
mov
dec
jnp
and
push
mov
mov
or
popa
sub
mov
push
push
adc
mov
mov
cmp
sbb
mov
xchg
adc
sbb
retf
hlt
inc
push
pop
jbe
dec
and
push
imul
pop
cmp
inc
cmps
mov
loope
(bad)
popa
dec
outs
fnstcw
pop
sub
pusha
cmp
aas
jecxz
ins
add
mov
scas
xchg
loop
das
ret
(bad)
sbb
jle
dec
daa
out
adc
xor
fistp
sti
dec
idiv
mov
pop
pushf
mov
stos
sbb
cmc
xchg
push
ins
mov
int
push
icebp
ficom
adc
sub
mov
das
test
lods
inc
sub
sbb
popf
mov
xlat
daa
ja
mul
mov
imul
mov
jmp
ins
and
mov
or
jbe
cmps
adc
enter
jmp
mov
jmp
mov
add
int3
ins
and
mov
inc
das
inc
sbb
nop
adc
jb
adc
push
xchg
mov
repnz
shr
pop
fcomp
repz
pop
mov
inc
movs
(bad)
and
(bad)
jnp
retf
xchg
mov
retf
inc
int
bnd
popa
aad
mov
aam
pop
mov
leave
jmp
mov
push
fld
inc
mov
push
cmp
and
cmp
xchg
imul
fwait
sub
sbb
outs
adc
ja
adc
and
movs
inc
mov
mov
js
rcr
aam
mov
inc
xchg
clc
inc
repz
clc
or
addr16
cwde
lods
mov
jmp
xchg
push
xor
inc
jg
cdq
mov
cld
(bad)
ds
inc
sub
adc
sbb
adc
pop
icebp
mov
dec
lods
je
mov
aaa
jmp
sbb
(bad)
and
pushf
adc
shl
cli
cdq
mov
or
ds
push
cld
dec
jmp
inc
sub
rol
ror
jmp
(bad)
loopne
pop
sbb
jno
enter
cmc
or
pop
sub
adc
push
or
dec
inc
and
shl
mov
outs
loop
icebp
(bad)
jne
cs
jmp
xchg
call
jbe
cmp
cmps
xlat
fs
mov
pop
push
cmp
ret
cwde
cmps
mov
sub
ja
das
dec
aad
xchg
xchg
mov
push
or
iret
test
sub
sbb
jno
add
(bad)
jns
fwait
or
push
cwde
sbb
mov
imul
mov
dec
and
or
sub
pop
push
(bad)
in
dec
jnp
addr16
mov
xchg
loope
les
sbb
push
xor
inc
cdq
imul
js
add
(bad)
mov
xchg
inc
lods
cwde
sub
push
popf
shl
xor
or
push
mov
in
or
arpl
fist
repz
pop
loopne
mov
pop
inc
in
jle
push
jmp
adc
xchg
push
test
mov
add
push
arpl
jne
jns
movs
retf
imul
lds
mov
(bad)
loop
or
outs
sub
mov
rdtsc
mov
popa
adc
dec
sti
pop
push
hlt
adc
out
dec
icebp
mov
or
es
movs
mov
fcmovne
push
fidivr
jg
test
push
popa
test
and
leave
call
scas
fucom
fbstp
mov
mov
push
xchg
xlat
or
rcl
mov
adc
xor
iret
jns
mov
or
sub
imul
ins
imul
scas
fcom
in
cmp
lea
or
scas
test
js
cmps
imul
jo
in
addr16
sbb
jp
ss
sahf
dec
mov
push
cmp
(bad)
into
mov
sahf
ds
inc
and
xlat
dec
dec
ins
pop
add
fwait
cmps
mov
mov
dec
and
sar
sub
cli
dec
jp
cs
mov
call
je
inc
std
dec
pop
sub
scas
push
mov
je
outs
addr16
jge
addr16
dec
leave
mov
mov
mov
shr
xchg
mov
cmp
fisttp
ss
pop
jg
stos
dec
je
mov
push
int3
ss
loope
ret
mov
in
sub
stos
sub
adc
xor
xor
fs
sahf
out
out
jne
mov
xlat
or
(bad)
outs
xchg
inc
adc
mov
xor
cmps
dec
push
sub
and
hlt
es
mov
mov
cli
sbb
jmp
add
sbb
xchg
inc
inc
jmp
sbb
ret
mov
pop
jno
lods
fsubr
fistp
pop
repz
mov
popf
popa
(bad)
jae
sub
mov
pop
xor
(bad)
or
jo
ja
clc
in
adc
movs
adc
loope
or
mov
test
ror
call
call
and
ds
clc
dec
mov
(bad)
outs
jle
mov
adc
(bad)
cwde
jne
repnz
lods
jb
or
aam
xor
jmp
pushf
mov
mov
pop
nop
push
mov
push
mov
rcr
dec
rol
(bad)
cmp
inc
cmp
sbb
aaa
xor
mov
test
mov
sub
cwde
add
inc
popa
push
xor
aas
and
and
xchg
fnstenv
jne
mov
jno
inc
inc
in
stc
mov
pushf
pop
shr
dec
xlat
inc
sar
shl
sbb
inc
pop
(bad)
or
call
fs
sub
in
out
mov
ds
add
lods
dec
leave
jae
call
mov
pop
sbb
sti
cmp
out
cwde
inc
cmc
inc
es
cs
das
mov
sub
xchg
inc
clc
sbb
xor
sub
mov
pop
das
jg
jecxz
fs
dec
movs
mov
(bad)
outs
test
jo
ror
je
xchg
sti
mov
sbb
and
ss
or
je
cmp
lock
loopne
xchg
into
xor
das
ins
enter
les
mov
test
gs
jl
cmps
imul
imul
add
in
das
dec
or
inc
push
loope
dec
cwde
or
out
pop
js
dec
or
or
popa
mov
neg
into
ret
in
fbld
mov
cmps
out
test
das
push
xchg
mov
in
test
hlt
nop
cli
mov
popa
scas
pop
jns
mov
dec
xchg
jg
pop
or
inc
movs
outs
pusha
aam
or
pop
pop
pusha
sbb
push
pop
dec
fsub
mov
cli
sbb
jmp
adc
jge
bound
adc
inc
sbb
lahf
fmul
cli
add
adc
mov
stos
rcr
ror
adc
sub
ret
pop
call
and
xchg
cs
rol
popa
cmp
dec
sahf
push
aad
fistp
cmc
push
dec
test
pop
stos
mov
sbb
jns
lock
mov
adc
jb
xchg
out
int3
xor
pusha
jo
mov
push
jmp
jne
or
(bad)
movs
mov
sbb
ret
xlat
jnp
(bad)
cmp
jg
test
lods
xor
pop
cmp
fstp
jb
adc
es
dec
gs
btc
sbb
lds
into
ret
sub
jle
imul
js
mov
(bad)
mov
ins
(bad)
jmp
cmps
mov
mov
fcom
pop
cmp
pop
or
inc
adc
cmp
lock
dec
mov
mov
add
retf
pusha
jne
ds
pop
lock
cmps
push
jbe
jae
inc
mov
imul
xor
mov
xor
mov
stc
stc
jne
es
pop
jb
or
xor
cmc
scas
ret
(bad)
fild
les
add
pop
cdq
add
add
add
jl
loope
adc
mov
or
mov
in
cld
push
push
arpl
push
sbb
adc
push
lahf
push
sar
dec
(bad)
inc
stc
rcl
sbb
sub
jae
sub
xor
jge
add
loopne
rcl
pusha
push
mov
pushf
adc
pusha
ror
shl
mov
cmps
cld
es
pop
pop
or
repz
movs
outs
add
leave
lock
rcr
pusha
and
inc
test
cld
test
inc
jb
daa
mov
test
mov
or
xchg
pop
es
cmp
or
mov
xchg
or
mov
ss
not
inc
dec
in
pop
jae
mov
sbb
mov
mov
shl
repnz
sbb
mov
pop
aas
pop
pop
jmp
inc
lock
add
inc
das
dec
retf
or
push
fst
sub
fsub
(bad)
retf
xchg
mov
out
xor
call
in
inc
mov
sbb
retf
lods
retf
jo
sbb
stc
(bad)
aad
sar
(bad)
and
scas
pop
jb
inc
add
out
rcr
jle
ja
pusha
inc
push
fcmovnb
jb
not
mov
pop
mov
scas
call
leave
mov
cmps
and
call
adc
jnp
mov
sub
push
jmp
popa
mov
inc
pop
cmp
out
xor
sub
dec
out
lods
inc
mov
retf
inc
sbb
cwde
fistp
enter
mov
retf
xchg
ror
inc
outs
pop
lods
xor
js
daa
mov
xchg
xchg
jno
cmp
call
test
or
cwde
jl
jns
jne
cmp
int3
inc
add
repz
adc
dec
xor
adc
stc
retf
pop
jo
aas
xor
add
test
and
mov
push
pop
push
aad
dec
xor
sbb
jae
imul
cdq
jno
push
pushf
push
adc
scas
xchg
or
in
aad
sub
out
loope
or
xchg
dec
fsub
nop
xor
jb
popa
cs
in
push
adc
pushf
sbb
cli
imul
stc
lods
int
dec
mov
push
jne
push
aas
dec
(bad)
leave
fild
and
out
stc
pop
pop
movs
hlt
fld
xchg
lods
cmp
and
mov
in
cmc
jmp
add
fimul
cmp
mov
pop
dec
sub
call
xchg
out
pop
mov
retf
sar
sub
and
scas
clc
sub
test
mov
mov
shl
movs
leave
in
mov
push
les
and
fisub
rol
je
(bad)
cmp
hlt
jmp
iret
add
cmc
and
(bad)
pusha
dec
call
loop
scas
pop
sbb
xlat
inc
adc
add
push
fisub
sub
adc
xor
add
cmp
add
ins
or
jmp
xor
ins
sbb
mov
rcl
dec
dec
cmc
ficomp
pop
or
cmps
bsr
pop
inc
(bad)
imul
cmps
pop
std
add
inc
mov
call
in
enter
push
jbe
xor
sub
mov
ds
lods
dec
lock
inc
popa
retf
inc
push
cdq
pop
add
xchg
repnz
push
sub
lods
jle
pop
cld
mov
xchg
sbb
or
inc
xor
mov
mov
or
add
(bad)
nop
jge
xchg
scas
pushf
fcom
outs
xchg
xchg
add
mov
mov
stos
push
and
mov
retf
arpl
or
jecxz
mov
lods
dec
or
xchg
dec
data16
jno
fwait
push
and
int
stos
cdq
cmp
daa
pop
out
inc
loop
adc
or
inc
add
push
cli
lods
shl
jg
inc
dec
(bad)
(bad)
sbb
push
xlat
fwait
dec
pop
jmp
mov
push
dec
xchg
stos
push
or
push
das
lods
mov
sahf
ret
inc
cli
push
or
pop
cwde
xor
call
mov
gs
ja
push
cmps
jp
leave
inc
out
fadd
push
popa
jmp
mov
enter
mov
xor
int3
xchg
imul
and
loopne
sbb
xchg
(bad)
lods
leave
cmp
stos
shr
mov
imul
call
push
lds
pop
or
and
cmp
mov
sbb
aas
shr
mov
push
fcomp
imul
out
mov
or
movs
sar
popa
lea
add
imul
mov
std
mov
xchg
adc
clc
sbb
enter
adc
shr
xchg
lds
(bad)
shl
sub
sbb
imul
mov
hlt
arpl
sbb
lods
fiadd
pop
pushf
in
pop
sub
sar
xchg
aam
add
sub
xlat
pusha
icebp
inc
xchg
out
or
repnz
inc
cmp
ret
sahf
push
adc
pop
jbe
out
(bad)
jno
xchg
jmp
dec
in
adc
inc
xchg
shr
cmp
aas
or
jecxz
xchg
sub
cs
sbb
stos
inc
outs
fistp
push
les
mov
xor
dec
(bad)
lds
lods
ins
add
inc
ror
in
jno
jns
mov
rcr
sbb
cdq
hlt
sbb
xchg
in
push
pop
xor
inc
jae
aaa
jae
sbb
test
sbb
ins
in
enter
loop
mov
xchg
ins
xchg
xchg
je
jmp
cmps
cmp
retf
loope
shl
pushf
inc
mov
ret
add
xor
imul
loope
ss
mov
stos
repz
shr
sar
div
and
jno
sbb
inc
fnstenv
sbb
in
mov
jg
fwait
lea
mov
inc
psrld
add
nop
cld
repnz
jmp
jl
mov
mov
or
cmps
add
xchg
cli
jge
xchg
neg
repz
push
out
push
xchg
daa
xor
fisub
bound
push
mov
dec
mov
mov
daa
outs
jl
jge
retf
push
fistp
pop
mov
je
pop
lahf
mov
arpl
retf
sub
jae
adc
lahf
jl
pop
iret
push
mov
jae
jle
cmp
cmp
cmp
arpl
lock
add
cmp
les
stc
clc
bound
repz
test
addr16
mov
push
sbb
rcr
addr16
cmps
mov
mov
cmp
lods
in
ds
test
ret
push
inc
js
jl
xor
ret
cmp
inc
shr
lds
ins
fistp
mov
lds
adc
inc
sub
push
pop
fbstp
retf
dec
mov
neg
in
in
adc
(bad)
push
and
jmp
xchg
xor
loop
adc
repnz
cmps
nop
loop
hlt
jae
mov
xor
jne
push
mov
lea
jb
push
push
add
push
call
mov
out
dec
mov
cmp
adc
and
sbb
xchg
and
jne
xchg
cdq
adc
rcl
and
out
js
pop
adc
sbb
(bad)
nop
in
loopne
leave
sub
pop
cmp
lock
adc
pusha
cs
add
pop
setno
sub
and
mov
adc
scas
sub
push
imul
xchg
jp
xchg
push
mov
lock
inc
and
dec
add
adc
and
xor
push
mov
retf
clc
out
jp
out
dec
call
dec
push
jno
test
add
jns
cmp
dec
adc
sbb
xchg
push
gs
xor
mov
push
or
mov
adc
ret
push
sub
xchg
mov
adc
dec
cmp
lds
imul
gs
ret
xchg
xchg
jmp
cmc
dec
loop
mov
pop
jmp
popf
loop
popf
pop
push
sbb
push
and
aam
sub
div
push
(bad)
pop
call
xor
or
pop
stos
jl
mul
inc
inc
int3
inc
sti
inc
jmp
fimul
sub
sbb
jo
jge
adc
and
jno
nop
sub
mov
mov
outs
and
aad
lods
hlt
add
cmp
aaa
pop
adc
movs
(bad)
cwde
retf
lods
lea
xchg
data16
(bad)
cmp
pop
lahf
jns
push
cmp
shl
mov
add
and
in
(bad)
(bad)
mov
adc
xor
movs
movs
ds
mov
hlt
lock
pop
add
fistp
fadd
dec
or
xchg
sub
pusha
push
jns
sar
jmp
dec
ins
cmp
dec
sub
jl
out
mov
stos
mov
mov
sub
sub
mov
and
sub
sbb
mov
retf
sbb
pop
cmc
outs
push
xchg
(bad)
mov
pop
das
fadd
pop
mov
in
(bad)
sti
leave
and
push
mov
xchg
jl
mov
push
jecxz
xchg
and
jl
sub
outs
push
add
out
pop
cld
push
outs
inc
jmp
mov
cmp
mov
jecxz
mov
push
jno
hlt
xchg
arpl
(bad)
int3
std
scas
scas
lods
rcr
loop
fs
jbe
mov
inc
xor
out
jae
or
call
(bad)
mov
(bad)
adc
scas
ds
xchg
out
xlat
jb
xor
mov
pop
imul
push
fsubrp
sti
ret
ret
pop
(bad)
(bad)
jmp
out
int3
adc
retf
dec
adc
jnp
jno
jns
add
std
mov
cwde
jmp
in
add
jecxz
dec
adc
dec
ins
or
xchg
pop
inc
retf
iret
inc
mov
cld
movs
movs
xchg
repnz
push
hlt
adc
out
mov
movs
jmp
imul
movs
(bad)
push
addr16
pop
std
jns
ins
mov
std
iret
sbb
inc
inc
sub
cld
sbb
call
pop
in
inc
or
sbb
out
cmc
mov
cdq
mov
inc
mov
inc
aas
mov
cs
xchg
cmps
fistp
sub
(bad)
pushf
ror
arpl
ins
sbb
dec
fist
sub
repnz
ins
inc
imul
mov
in
pop
je
mov
rep
repz
mov
push
adc
jb
stos
fwait
mov
ror
push
ds
inc
outs
cli
cmps
ds
aam
dec
repz
pop
push
pusha
(bad)
adc
dec
xor
jle
lods
mov
(bad)
xor
mov
jmp
lahf
fistp
xchg
repz
adc
or
call
mov
push
je
lock
loope
cwde
rcl
xor
dec
ss
mov
xor
and
xchg
cmp
adc
mov
jo
and
mov
fadd
imul
or
push
xchg
cmp
les
and
lds
scas
pop
das
adc
and
test
ss
sub
call
jmp
cmps
not
mov
xor
push
fwait
call
fsubr
hlt
inc
icebp
jae
jb
mov
xchg
(bad)
(bad)
jecxz
jno
out
push
push
sbb
mov
mov
scas
out
sahf
mov
mov
repz
and
sbb
fcomp
lock
retf
scas
(bad)
shl
rcr
add
ins
mov
or
jnp
xchg
stos
ret
stos
fcomp
or
in
xchg
test
dec
bound
and
cld
xchg
mov
xchg
push
xor
sbb
into
imul
call
enter
mov
lds
shl
jmp
jbe
nop
push
stc
enter
sub
fimul
sub
xor
jbe
pop
(bad)
sbb
int3
inc
imul
loope
push
inc
imul
out
ds
sar
ins
idiv
lea
call
add
add
xlat
pop
imul
push
jb
daa
xchg
sbb
fdivr
cdq
mov
(bad)
outs
xor
jbe
aaa
js
xchg
cmp
dec
jns
sub
ds
in
iret
inc
sub
adc
popa
(bad)
call
or
ins
pusha
or
sti
cmp
aam
out
mov
out
sbb
cmc
mov
sti
inc
lods
add
adc
into
and
push
fwait
stos
push
sti
(bad)
cmc
push
fistp
jg
ins
ret
mov
movs
fisub
cs
aaa
inc
neg
jnp
sti
xlat
push
mov
pop
xchg
cmc
xor
or
xor
jecxz
jge
movs
scas
nop
movs
sbb
aaa
inc
xchg
xor
mov
sbb
cmp
je
sbb
or
repz
cs
sbb
or
loop
and
sub
js
push
fstp
jae
mov
test
retf
fmul
repz
scas
fst
pushf
out
ret
in
mov
cmp
pop
js
lds
adc
add
inc
lahf
sub
test
rcr
aaa
sbb
cld
imul
pop
and
call
push
xchg
sub
(bad)
mov
aas
xlat
mov
ins
push
push
movs
shr
mov
xchg
add
enter
or
daa
test
push
ins
mov
fistp
cmp
aas
aas
sti
ds
ins
jmp
mov
repnz
adc
pop
adc
add
cmps
mov
bound
inc
outs
push
into
mov
scas
rcr
pop
cld
and
mov
in
push
or
dec
xor
inc
inc
xor
or
jno
aaa
sbb
sub
dec
xchg
add
rcl
adc
data16
jmp
neg
sbb
jno
in
mov
xor
neg
iret
xchg
cwde
test
in
xchg
cs
dec
or
in
scas
dec
inc
sbb
aam
into
xor
in
adc
mov
repnz
xlat
sub
and
pop
inc
push
cmps
xchg
out
add
arpl
and
imul
xchg
cmc
pop
inc
int
pushf
out
clc
inc
jno
cmp
jne
xor
enter
adc
shl
iret
sbb
iret
or
add
(bad)
dec
shr
mov
ins
jns
mov
pop
adc
cmp
sub
loope
adc
repnz
mov
cmp
mov
in
inc
cmp
adc
inc
sbb
inc
jg
div
stos
jne
push
outs
mov
add
scas
leave
push
data16
inc
popa
dec
xor
imul
pop
inc
pusha
loopne
mov
call
mov
mov
adc
or
cld
lahf
dec
mov
loopne
sbb
cmp
xlat
pusha
sub
in
test
or
mov
fwait
jb
dec
movs
pusha
pop
add
into
dec
xchg
out
cmp
jns
xlat
pushf
or
fld
cmp
pop
test
dec
xor
sti
jb
inc
dec
rcl
outs
or
xchg
(bad)
adc
pop
mov
or
adc
mov
mov
imul
mov
xor
push
pusha
adc
xchg
movs
mov
mov
mov
jecxz
rol
sar
fs
fsub
aaa
xchg
mov
mov
or
rol
shl
js
je
add
jmp
repnz
sub
xor
int3
mov
cmp
push
pop
add
rcr
or
shl
and
mov
arpl
es
gs
retf
repz
push
xor
(bad)
ds
clc
inc
dec
popf
jg
je
xchg
ret
add
add
imul
adc
jno
sbb
fadd
dec
(bad)
popf
scas
jmp
retf
xor
shl
repz
repz
pop
cmp
ret
fdiv
gs
fs
and
pop
push
fidiv
inc
jne
jecxz
call
cli
into
aad
mov
test
or
imul
dec
jae
(bad)
pusha
inc
xchg
xchg
mov
mov
stos
inc
sbb
sub
pop
test
adc
pop
sbb
aam
sbb
jns
lods
scas
cmp
mov
shr
fldpi
hlt
lods
add
sbb
out
int
push
mov
or
repz
mov
fimul
cmp
daa
cld
sub
aaa
dec
mov
dec
push
jecxz
iret
mov
mov
sub
movs
pop
xchg
dec
xchg
inc
add
call
sbb
inc
jmp
hlt
sbb
adc
into
sti
in
imul
aam
dec
out
mov
loop
test
jne
jle
sbb
and
and
cdq
lahf
jl
push
sub
adc
jl
mov
adc
dec
shl
bound
jo
in
xor
test
dec
sub
popa
fstp
and
cmp
sbb
daa
popf
xor
fwait
addr16
sti
or
lea
mov
mov
cmp
xchg
sbb
int
pop
loope
add
fmulp
lods
jae
dec
jmp
repz
cli
cmp
(bad)
imul
or
jmp
stc
pop
call
xchg
adc
adc
jns
pop
in
fimul
push
dec
nop
and
or
in
mov
inc
fst
pop
gs
fcomp
mov
push
int
jae
lldt
jge
xor
leave
xchg
mov
push
shl
adc
cmc
leave
test
mov
mov
pop
cmps
mov
stos
lods
jmp
push
mov
mov
push
mov
and
ds
loopne
sbb
lock
push
mov
es
pop
fistp
sbb
xor
lock
bnd
shr
push
pop
bnd
fmul
nop
mov
js
mov
retf
push
es
pop
stos
(bad)
cmp
aaa
cmc
js
div
lods
xchg
prefetch
sahf
out
or
inc
scas
repnz
push
or
jmp
xchg
adc
cdq
out
pop
pop
xchg
inc
push
pop
inc
fchs
jmp
and
push
xchg
enter
fcomp
cmp
movs
std
dec
jae
das
movs
pop
push
lea
adc
xchg
outs
lods
mov
sbb
sbb
pusha
add
or
ins
inc
icebp
jmp
shr
outs
cli
jecxz
mov
cmc
into
sar
or
and
dec
cli
add
pop
inc
xlat
push
imul
inc
cmp
outs
div
and
in
and
sub
aas
inc
jg
stos
and
shr
(bad)
cmp
xchg
ins
pop
mov
pusha
enter
pusha
jp
dec
mov
stos
(bad)
pusha
jo
fwait
sub
push
fnstenv
pop
les
mov
adc
sbb
das
neg
xchg
aad
std
xor
xchg
ins
ins
scas
stc
jmp
jb
out
ins
or
gs
adc
dec
push
push
js
out
imul
mov
(bad)
and
mov
clc
inc
jmp
retf
and
sub
test
stos
loope
add
loopne
cmp
pop
mov
popf
call
jmp
imul
scas
jg
(bad)
nop
sahf
and
mov
ja
xchg
test
cld
into
pop
cmps
push
shl
aaa
sar
mov
lods
adc
mov
(bad)
movs
(bad)
shl
or
bound
or
add
lock
in
retf
mov
push
add
inc
inc
add
jno
les
test
mov
or
out
mov
movs
daa
scas
mov
clc
fadd
js
sub
stos
or
icebp
xor
cmc
cmp
cmp
(bad)
inc
sub
jnp
mov
inc
stos
or
popf
pop
push
xchg
jno
push
pop
cs
xchg
mov
pop
sbb
mov
(bad)
cmp
lds
push
fwait
fs
push
fnsave
or
mov
out
adc
mov
push
(bad)
mov
sub
in
cmp
jl
lods
pop
out
sbb
ror
arpl
cmp
jge
imul
(bad)
mov
mov
dec
aas
pushf
xor
test
nop
in
and
(bad)
cwde
fwait
jne
pop
pop
jns
jge
cs
mov
dec
dec
mov
jae
sahf
sar
push
sub
push
fcmovb
push
jmp
cmp
sub
leave
add
pop
enter
mul
aaa
inc
loope
dec
(bad)
or
xchg
or
sub
inc
push
dec
inc
jae
and
inc
sbb
sbb
mov
popa
test
fabs
mov
cmp
outs
mov
jmp
mov
jl
jbe
in
adc
add
das
and
fdivp
or
cmp
fcom
retf
xchg
xor
std
out
push
jb
hlt
sbb
mov
imul
loope
pusha
add
fs
xchg
xor
adc
add
jb
inc
xor
dec
js
xor
inc
cmp
pop
lahf
pop
push
mov
fdiv
pop
dec
xchg
xchg
mov
imul
fwait
add
pop
or
data16
add
push
or
xor
xchg
gs
push
loope
adc
mov
or
jg
jae
aas
xchg
sbb
fstp
iret
or
(bad)
lea
mov
cmp
push
call
dec
adc
xor
sub
mov
add
lea
jne
mov
or
inc
mov
adc
add
(bad)
jnp
and
ret
sub
popa
imul
push
cmp
fs
pop
fdivr
jg
or
out
cmps
mov
rcr
xor
cld
leave
clc
std
adc
stos
mov
push
jecxz
mov
pop
add
fistp
jmp
movzx
adc
mov
xchg
and
mov
push
and
(bad)
jns
in
mov
ret
xor
in
(bad)
pop
stc
aas
cmp
call
(bad)
jecxz
fadd
loop
nop
cmp
pop
in
stos
out
push
mov
sbb
loope
sub
or
cmp
cld
out
dec
lds
sbb
adc
div
(bad)
outs
adc
sub
and
mov
adc
(bad)
je
sbb
inc
stos
icebp
test
mov
push
xor
xor
ror
jnp
mov
fsub
lahf
jle
dec
mov
fadd
pushf
fucomp
jmp
sub
outs
ins
jbe
outs
or
xchg
scas
add
test
rol
leave
or
sub
ins
mov
sub
jns
push
or
mov
pop
push
nop
cmps
adc
cmp
dec
inc
shr
pop
mov
popa
popf
jns
and
pop
pop
retf
adc
cmp
aas
scas
(bad)
xlat
repz
mov
push
adc
fidivr
add
and
fcomp
call
clc
stos
leave
mov
pushf
cdq
je
bound
push
inc
ret
add
mov
push
scas
pop
xchg
add
in
xchg
cmp
inc
js
out
cmp
sahf
hlt
clc
or
stos
imul
rcr
adc
or
stos
test
rcr
mov
mov
or
sahf
inc
sbb
ret
mov
je
gs
xor
xchg
mov
dec
rol
cmp
idiv
xchg
mov
mov
push
ds
lds
inc
js
fnsave
sub
push
pop
fcmovbe
jb
imul
in
scas
dec
mov
rcl
dec
dec
fcmovb
int
dec
mov
stos
push
dec
cmp
retf
ins
cmps
xor
stos
cmp
pop
inc
dec
cmp
cs
or
icebp
out
pop
mov
ins
les
pushw
mov
sub
mov
xchg
mov
mov
or
or
push
stc
mov
mov
jne
cmps
mov
and
outs
addr16
and
mov
inc
mov
data16
(bad)
push
sub
inc
addr16
(bad)
push
test
(bad)
loop
push
xchg
imul
adc
cmps
mov
dec
or
push
jmp
rol
ror
cmps
lods
mov
mov
sbb
cmps
ret
ds
inc
shl
mov
data16
push
xchg
lds
repz
inc
jmp
adc
jae
mov
pop
xor
or
and
cmp
loopne
mov
sbb
in
pop
mov
in
leave
push
xchg
jl
dec
pop
sbb
cli
daa
test
sub
je
(bad)
out
iret
push
mov
and
add
inc
jbe
xor
sbb
mul
push
cli
jae
jge
repz
inc
xor
(bad)
adc
jns
xchg
jp
fidiv
fcom
enter
push
mov
adc
dec
dec
nop
fmulp
adc
xlat
sbb
in
shr
(bad)
dec
push
sti
mov
jmp
in
inc
sbb
inc
mov
adc
bound
sbb
sahf
jge
loope
repz
xchg
sahf
retf
ins
xchg
dec
in
sbb
xchg
mov
xor
cwde
cmp
adc
push
mov
fld
inc
retf
pop
jno
mov
rcl
pop
push
out
scas
add
cmp
sub
ret
pop
mov
sub
outs
mov
push
lea
jmp
popa
xchg
dec
and
mul
add
imul
mov
and
push
xchg
add
aaa
cmp
lock
and
cmps
xchg
dec
bound
aas
outs
sbb
jo
jg
push
mov
sub
push
cmp
loope
jmp
push
pop
sbb
leave
pop
(bad)
xlat
or
sbb
xchg
and
mov
sar
loope
(bad)
push
or
pusha
(bad)
mov
push
inc
loopne
pop
adc
or
mov
enter
or
cmp
shl
call
jns
fwait
mov
sbb
ins
popa
mov
retf
mov
xchg
stos
fstp
loop
mov
xor
and
push
jl
or
and
out
lods
scas
lods
out
xchg
jl
add
les
ja
int
mov
mov
pop
sbb
or
clc
outs
add
(bad)
push
cmp
add
mov
mov
out
and
sub
xchg
pop
enter
aad
mov
jmp
pop
push
inc
mov
sub
movs
clc
ins
mov
cmp
mov
arpl
out
sub
jp
js
hlt
outs
lods
mov
lock
sub
fcmovu
mov
adc
movs
pop
sub
in
pop
jmp
push
sbb
xchg
fdivrp
js
je
enter
mov
ins
xor
and
inc
adc
outs
mov
aad
pushf
and
pop
pop
cmp
sar
sub
mov
inc
jmp
(bad)
mov
sbb
mov
jno
xchg
and
mul
leave
mov
sahf
movs
pop
in
pop
push
xchg
jle
xchg
jns
fcom
dec
mov
xchg
fnstsw
outs
inc
jbe
and
das
pop
sbb
mov
xlat
scas
or
mov
xchg
(bad)
inc
sub
sbb
out
test
pop
popf
outs
hlt
jmp
out
fbstp
mov
ins
pop
lea
mov
mov
in
xchg
jne
fsubr
add
ret
inc
xor
mov
test
sbb
sub
jne
stc
movs
mov
scas
xchg
sbb
popa
dec
(bad)
cli
lock
cmps
push
sbb
mov
mov
repnz
cdq
in
adc
xchg
inc
cmp
add
and
mov
js
cmp
pop
mov
mov
push
jae
pop
lahf
fbstp
in
sub
mov
mov
cli
movs
ficom
sar
stos
adc
in
cmp
fst
sti
retf
sbb
div
add
jnp
push
fist
fwait
and
ret
(bad)
cmps
jnp
test
mov
mov
mov
outs
and
adc
aam
lods
int3
sub
jp
mov
fimul
cmc
ret
std
or
xchg
push
inc
xor
out
imul
(bad)
jns
ja
push
mov
pushf
test
jecxz
sub
pop
cmp
inc
xchg
sar
and
xchg
aas
int
push
sub
mov
mov
push
jmp
or
cmp
(bad)
sbb
out
fs
mov
mov
sub
or
sahf
cmps
enter
xchg
cs
call
ret
retf
loop
fist
jbe
mov
or
in
lods
loope
jae
jmp
mov
ins
mov
ret
(bad)
fsub
mov
test
mov
(bad)
retf
repz
out
cs
mov
in
loop
mov
ds
mov
add
fsubr
cs
mov
hlt
push
xlat
sbb
fwait
adc
enter
sub
jbe
push
lahf
and
push
xchg
jmp
mov
push
out
and
mov
pop
xabort
dec
pop
sub
sbb
mov
stos
gs
rcl
es
inc
retf
jnp
rcr
push
cmps
ror
inc
scas
xchg
mov
popa
sar
xchg
cmps
sub
icebp
xlat
in
inc
sub
sbb
cdq
lods
inc
sahf
push
mov
or
leave
push
stc
js
mov
or
xor
pop
data16
jge
jo
fwait
idiv
out
adc
ds
adc
mov
sbb
std
stc
or
xchg
fwait
int
je
repnz
mov
xor
outs
sbb
sahf
add
jl
sahf
lahf
or
rol
mov
repnz
push
fsub
mov
fild
adc
les
in
aad
dec
loope
cdq
push
imul
push
aas
retf
push
mov
cmp
sbb
xor
sub
dec
jge
jl
push
fs
mov
iret
cmp
cmp
mov
or
mov
fcmovu
test
daa
popa
outs
lds
mov
sbb
call
int3
jo
fdivr
pop
gs
outs
lds
out
sahf
mov
inc
inc
imul
aad
add
inc
mov
mov
xchg
(bad)
retf
sar
sar
retf
dec
mov
mov
test
int
(bad)
dec
push
mov
ins
jns
cs
jecxz
xchg
cmp
pushf
dec
pop
add
call
std
sub
mov
imul
outs
add
sahf
jmp
push
push
out
mov
sbb
bound
gs
popf
add
mov
outs
mov
idiv
jmp
mov
call
xor
dec
clc
dec
mov
es
xor
inc
add
xlat
inc
in
dec
rcl
sub
add
pop
push
cmps
add
sahf
cmps
sub
int
imul
cld
nop
mov
add
lds
mov
add
int3
jb
mov
xchg
sub
aas
xchg
shr
jbe
fstp
fnstsw
cli
aaa
mov
loop
call
mov
mov
sub
stc
shl
pop
test
cld
std
rol
mov
retf
pop
js
inc
adc
push
or
push
stos
not
or
sbb
mov
test
jg
outs
xchg
mov
mov
in
sti
rcr
jmp
fnsave
jmp
int
scas
aam
arpl
adc
mov
into
sbb
out
mov
in
lods
movs
out
sub
xor
mov
add
pop
std
jb
mov
adc
cmp
les
sahf
hlt
daa
push
movs
fs
sahf
sbb
ja
inc
cmp
sbb
ss
mov
jmp
or
mov
jns
jnp
xor
mov
lahf
(bad)
cld
les
jmp
inc
mov
iret
add
xchg
leave
inc
mov
aam
mov
ins
xor
xchg
or
dec
mov
push
mov
pushf
ret
pop
cdq
jp
jbe
fwait
sub
xlat
test
sahf
bound
mov
aam
inc
scas
sub
jge
push
scas
pop
rcl
mov
or
pushf
idiv
xor
inc
dec
sub
iret
cli
icebp
pop
outs
rcl
sub
inc
int3
and
and
jmp
popa
(bad)
ss
cdq
mov
popa
test
cld
xchg
mov
ds
mov
cld
fs
stos
mov
mov
ins
clc
cmp
mov
(bad)
jmp
clc
sbb
or
jl
cmp
xchg
pop
xchg
mov
xor
mov
sar
data16
xchg
leave
add
das
iret
jno
xor
mov
addr16
dec
add
dec
(bad)
jmp
inc
(bad)
mov
xor
jbe
out
xlat
sub
test
push
outs
(bad)
clc
sub
cmc
xchg
xor
cld
or
(bad)
jo
cwde
in
jle
iret
inc
dec
(bad)
jnp
ja
sub
jp
pop
jns
ret
push
jecxz
aaa
xchg
xor
(bad)
loopne
lahf
cli
sahf
out
mov
mov
mov
jmp
mov
inc
shr
cmp
xlat
jne
out
jmp
outs
inc
jmp
lds
cwde
sbb
test
iret
sub
cs
call
sub
mov
out
mov
mov
in
push
arpl
repz
ret
pushf
inc
(bad)
sbb
lods
sbb
gs
lods
arpl
arpl
nop
outs
je
aam
jbe
or
push
stc
mov
lods
(bad)
push
dec
mov
stc
movs
arpl
daa
cmps
sti
cmp
xchg
sbb
(bad)
ins
sub
test
push
hlt
push
mov
mov
mov
retf
retf
inc
sub
bound
add
(bad)
repnz
(bad)
enter
repz
mov
xchg
adc
xchg
or
(bad)
lahf
iret
cmc
or
outs
scas
and
and
cmp
add
repz
leave
sub
sub
shl
xor
mov
popf
sub
ftst
adc
mov
ret
add
push
imul
jbe
gs
jns
pop
rcr
loop
pop
add
cmp
loope
push
mul
cmp
xor
add
mov
hlt
scas
mov
inc
retf
push
xor
jg
add
xchg
ret
mov
dec
test
xor
push
dec
in
retf
mov
scas
xchg
mov
nop
stos
adc
test
dec
xchg
aas
repnz
xor
stos
sbb
movs
cmp
rsqrtps
stos
sti
sub
cmp
push
sar
inc
je
sahf
pop
out
xor
mov
stos
loop
out
sti
pop
sub
loopne
fsubr
lgs
loope
mov
jle
fadd
jns
popa
ja
inc
fs
add
test
pusha
inc
adc
aam
retf
call
jno
lods
pop
scas
lea
fstp
add
inc
xor
aad
nop
add
jle
das
and
xor
das
dec
xchg
ja
sub
jl
adc
(bad)
cmp
jl
push
or
stos
pop
sub
ficomp
add
sub
jge
and
sbb
mov
jo
imul
and
(bad)
mov
int
call
cld
mov
cmp
jecxz
lahf
(bad)
mov
pop
(bad)
jp
jmp
and
mov
or
push
and
xchg
inc
pusha
jbe
jle
push
outs
mov
adc
sti
in
dec
add
xor
pand
cmp
hlt
mov
loope
shl
fild
jle
outs
test
or
sub
and
cmp
loopne
mov
and
aad
into
test
sub
popa
iret
dec
fmul
xor
jl
jbe
jp
sti
jnp
icebp
mov
test
jae
mov
jns
jae
mov
popf
cwde
pop
jo
in
mov
xchg
jbe
and
pop
sub
test
(bad)
jg
scas
jnp
add
outs
sahf
int
loope
fld
(bad)
out
xor
adc
fdivr
stos
call
xor
push
dec
and
pop
sub
inc
mov
fwait
push
inc
ins
and
in
cmc
popa
stc
sub
mov
adc
sar
div
out
enter
fisttp
in
(bad)
fwait
push
add
sub
in
mov
push
cmps
ja
push
mov
sbb
cmp
mov
leave
add
pop
and
ret
dec
push
(bad)
cmp
out
fwait
(bad)
aas
popa
lods
jne
sbb
and
sahf
jmp
jmp
imul
sbb
push
das
sbb
add
(bad)
ss
out
fwait
pop
fst
mov
(bad)
or
pop
out
push
adc
aaa
call
push
pop
lds
fwait
xchg
test
mov
fld
cmp
cmp
jp
jae
out
stc
aad
or
push
movs
xor
mov
adc
(bad)
push
xchg
shl
enter
and
jecxz
stos
adc
aas
adc
mov
cli
out
push
add
pop
rcr
cmc
dec
push
(bad)
and
or
imul
out
test
push
aad
add
loopne
pop
sbb
lods
test
loope
sbb
ret
lahf
pop
inc
mov
mov
dec
enter
jge
idiv
adc
fld
popa
push
and
mov
loopne
jno
sub
pushf
(bad)
xlat
and
aad
mov
cmp
and
cmp
ja
pushf
popa
mov
fwait
les
sbb
std
mov
cld
test
retf
sbb
push
cli
in
mov
jne
mov
jbe
xor
invd
fs
daa
pop
pop
dec
popa
sub
mov
test
mov
enter
pop
rcl
fcmove
and
icebp
adc
mov
or
loop
(bad)
sub
xchg
sbb
fadd
pop
mov
and
test
mov
mov
mov
out
add
mov
sbb
xor
dec
adc
mov
pop
mov
addr16
fild
push
xchg
cmp
shr
xchg
aaa
out
adc
inc
int
(bad)
sbb
adc
aaa
mov
xchg
xchg
retf
push
test
lahf
cmc
lods
and
ror
int3
push
test
loopne
jb
int
fst
mov
push
jmp
les
into
dec
ja
out
sub
scas
adc
jb
clc
in
jle
mov
jbe
in
sbb
cmp
les
cmc
mov
push
mov
aas
in
retf
or
pop
and
pop
ja
jo
mov
and
shr
fmul
cmp
push
mov
loope
xchg
aaa
popa
cmps
(bad)
adc
ror
cmp
aas
call
jle
ins
sub
xor
jle
dec
stos
mov
fsub
inc
(bad)
mov
adc
add
xchg
jae
push
pusha
in
fs
fwait
outs
and
inc
popf
and
pop
scas
test
gs
jle
icebp
int
dec
fist
mov
repz
cmp
idiv
jb
movs
call
sti
sti
sbb
jae
mov
out
pop
mov
or
mov
ja
ja
push
test
xor
in
stos
mov
inc
sbb
rcr
je
push
pop
push
pop
mov
push
mov
imul
lahf
cmp
cmps
mov
cmp
sar
push
ss
aam
test
mov
sbb
push
add
or
lea
dec
pop
pause
pop
sub
dec
test
mov
cmp
aaa
push
mov
or
imul
cld
test
aad
sbb
xchg
and
jmp
lock
out
inc
add
les
dec
aas
jns
inc
ins
loopne
pop
or
outs
xor
int
xor
jmp
mov
jne
mov
jle
xbegin
aad
outs
sub
enter
int3
mov
push
and
jmp
ss
sub
int
aad
mov
aas
loop
inc
cmp
mov
ja
inc
addr16
dec
(bad)
fld
aas
push
data16
inc
xchg
pop
ss
popf
mov
adc
mov
xchg
test
loope
inc
outs
inc
sti
push
cld
pop
add
mov
cwde
inc
adc
fldenv
push
cs
not
aam
into
add
dec
int
ins
mov
fcomip
sbb
int3
shl
mov
mov
cwde
aas
aam
rcr
pop
pop
push
(bad)
imul
in
pop
aad
rcr
mov
lahf
or
mov
retf
in
jns
pop
adc
loopne
and
mov
popa
push
mov
adc
and
(bad)
pop
pop
xchg
xlat
ds
imul
popa
aam
or
stos
mov
ins
inc
jg
aaa
int
push
dec
xor
cmc
xor
movs
mov
fwait
and
jle
retf
adc
xchg
outs
pop
xor
stc
fdivrp
stos
sub
fs
sbb
leave
movsx
inc
add
dec
outs
lds
into
xlat
lea
les
sbb
adc
xor
sbb
in
or
call
xor
jnp
jns
push
cmp
addr16
or
sub
xchg
sub
ja
movs
cdq
mov
inc
push
in
gs
cwde
loop
lahf
cmps
nop
int3
in
lods
adc
inc
add
stc
mov
mov
jecxz
push
dec
jns
in
adc
mov
shl
mov
push
repz
mov
shl
aaa
dec
add
in
pop
add
inc
mov
pop
imul
repnz
aas
or
leave
push
lods
scas
fxam
(bad)
rcr
inc
dec
jg
test
cmc
adc
lea
rol
mov
inc
push
pushf
push
loop
push
call
push
push
ins
mov
mov
sub
jno
in
retf
aas
mov
adc
loope
ds
pop
outs
cmp
data16
push
sbb
ror
sti
std
xor
add
pop
out
xor
in
fs
(bad)
sbb
fistp
jae
and
pop
scas
not
movs
mov
ja
add
sub
ja
or
mov
and
jbe
dec
mov
and
mov
gs
jle
pusha
inc
push
(bad)
cli
lods
mov
aad
and
fsub
loopne
push
push
call
or
ror
mov
daa
add
jmp
jae
sub
fprem
bound
sub
lahf
in
or
mov
(bad)
les
stc
jno
outs
inc
shr
lea
pop
jge
mov
fidiv
lods
popa
jg
les
adc
cmps
xor
jmp
call
mov
pop
xor
pop
push
add
cmps
xchg
push
aad
in
or
and
push
gs
imul
repz
sub
aas
dec
jmp
mov
pop
fldcw
pop
push
enter
dec
cld
xchg
(bad)
test
sub
movs
or
stos
dec
movs
enter
pop
sbb
dec
push
jne
push
fwait
mov
and
or
movs
jmp
in
jo
hlt
shr
xchg
mov
add
jp
add
or
imul
pop
push
out
out
sahf
xchg
out
jecxz
aaa
or
mov
inc
and
mov
adc
sbb
mov
test
outs
or
retf
fistp
popf
punpcklwd
retf
sub
push
enter
test
mov
sar
push
mov
push
cmc
cmp
pop
sub
sub
icebp
adc
add
lods
push
jnp
jp
pushf
ds
fisttp
dec
jmp
inc
arpl
mov
(bad)
cmc
fwait
call
sub
in
repz
je
cmp
jae
dec
in
or
dec
or
xor
jmp
inc
pusha
sbb
inc
push
or
inc
jnp
sbb
out
movs
shr
mov
(bad)
and
mov
enter
aaa
sar
dec
(bad)
mov
xor
cs
inc
cld
loopne
lahf
pop
jmp
cmc
popf
sbb
cwde
sbb
xlat
mov
mov
or
lds
cmps
pop
mov
or
sub
scas
xor
inc
mov
inc
mov
add
sbb
shl
inc
mov
imul
(bad)
(bad)
mov
push
xchg
pop
fadd
fadd
ret
call
cs
loopne
int
test
lock
popa
push
std
inc
out
inc
xor
mov
xchg
ret
jno
adc
inc
in
lods
adc
cmp
fnsave
dec
jbe
hlt
jo
mov
fsub
cmp
aam
push
cmp
retf
mov
(bad)
arpl
out
sub
mov
inc
leave
pusha
inc
mov
and
cs
rcr
add
xchg
xchg
push
fcomip
aas
pop
cmc
jge
ret
mov
mov
inc
cdq
jp
and
out
jb
fidiv
sub
push
addr16
es
(bad)
mov
stc
pop
bound
imul
adc
dec
mov
cmc
push
pop
adc
loop
ins
jg
inc
mov
test
(bad)
in
call
in
outs
and
mov
sbb
aad
rcl
fwait
sbb
sbb
pusha
jns
xor
daa
cwde
in
mov
add
aam
xchg
mov
movs
jge
mov
rcr
ret
jecxz
jae
mov
sub
cmps
repz
int
pop
outs
and
cld
pop
xchg
mov
push
push
popa
nop
sub
mov
test
sti
ins
mov
lods
or
pop
aad
jbe
(bad)
cmp
xchg
adc
cmp
jns
repz
jbe
jae
iret
ss
cmp
stc
test
xor
imul
into
push
sbb
cs
cmp
dec
sbb
inc
popf
stos
push
ss
int
out
in
xchg
mov
jmp
sahf
pusha
das
adc
enter
mov
and
cwde
lds
call
out
out
leave
mov
inc
fiadd
sub
or
pop
(bad)
in
xchg
fmul
shl
mov
pop
into
push
fsub
dec
mov
push
or
enter
push
pop
xchg
(bad)
loopne
ret
clc
mul
mov
xchg
add
lahf
out
mov
add
rcl
add
pop
xchg
loope
mov
mov
lods
jno
and
and
mov
stos
inc
int3
out
and
xchg
into
pop
dec
pop
mov
push
and
push
inc
out
(bad)
mov
sub
xchg
mov
jno
(bad)
and
or
fsub
inc
outs
cmp
mov
pop
cmp
js
les
fsubr
sub
push
adc
pop
imul
ret
ins
cmp
sub
fnsave
nop
sub
scas
and
dec
push
mov
jno
mov
jb
(bad)
pushf
iret
imul
stc
pop
sbb
mov
inc
xchg
retf
je
cdq
cmps
mov
or
dec
hlt
xchg
scas
mov
jge
repnz
mov
and
shl
mov
movs
xchg
jne
sti
stc
push
loope
xchg
fild
ins
test
pop
(bad)
fadd
pusha
popa
rcr
lods
dec
pop
push
leave
pushf
and
add
stos
ret
retf
jle
sbb
fld
adc
add
adc
xor
dec
repnz
(bad)
lahf
mov
or
lea
mov
popf
push
mov
mov
cmp
add
dec
add
(bad)
or
xor
sub
inc
mov
xor
jge
aad
sub
sub
dec
mov
cmp
stos
sub
mov
mov
push
enter
xchg
pop
jmp
jle
(bad)
and
rol
dec
mov
pop
mov
and
dec
sub
add
arpl
pop
add
loopne
pop
dec
out
call
mov
push
stos
lea
jmp
iret
dec
out
pop
sar
(bad)
mov
cwde
fcomi
popa
mov
pop
cli
push
push
mov
fst
push
xchg
sub
adc
push
rcl
mov
fwait
call
adc
int3
js
sub
or
pop
pop
mov
stc
rcr
fstp
fist
and
adc
xor
or
fidivr
mov
aaa
nop
mov
rol
push
ins
adc
jb
jl
dec
adc
jae
sbb
add
add
sub
add
xchg
or
cdq
addr16
out
push
ja
xor
pop
push
mov
xor
lock
xlat
shr
ja
cli
xchg
push
push
add
jns
xor
int3
mov
adc
fwait
stc
test
push
mov
jmp
out
jge
push
xor
scas
out
xchg
out
and
pop
cmp
fnstsw
mov
cmp
lods
mov
mov
xchg
inc
mov
jl
jmp
pop
dec
and
(bad)
js
dec
jg
xchg
jle
mov
outs
lods
movs
adc
sar
mov
mov
adc
pop
je
call
test
in
in
or
in
enter
adc
xchg
push
test
(bad)
cs
adc
ds
dec
pop
fldcw
xchg
and
in
or
test
lahf
push
in
push
add
xchg
xchg
push
sbb
test
or
mov
std
mov
div
icebp
or
dec
add
fild
cwde
xor
xor
loope
and
out
sbb
js
sub
push
push
ins
add
repz
xchg
mov
loop
xchg
mov
aad
in
fiadd
gs
leave
dec
jae
ret
shr
xchg
es
into
add
dec
mov
inc
jge
pop
inc
push
rol
mov
xlat
and
hlt
aam
push
jl
xor
cmp
pop
cmps
adc
inc
ficom
retf
rcl
xchg
idiv
scas
loopne
pop
xor
cmp
sti
push
popa
ja
or
dec
mov
addr16
jbe
das
mov
push
pop
add
and
outs
faddp
fisub
arpl
mov
mov
outs
adc
lock
and
push
sbb
adc
jg
sub
add
cli
(bad)
ins
jbe
pop
push
or
inc
stc
dec
cmps
icebp
cld
add
mov
outs
test
mov
xor
push
retf
arpl
mov
clc
ja
cmp
gs
out
retf
call
ds
adc
inc
xor
and
(bad)
int3
xor
and
and
(bad)
and
inc
sub
test
dec
xor
jne
adc
fwait
loop
xor
or
mov
xor
fild
sti
ins
scas
and
push
enter
call
arpl
mov
jb
lock
cs
pop
in
(bad)
xchg
sbb
sbb
pop
jbe
fidiv
aam
out
xor
mov
cdq
test
jno
rcr
sub
ins
pop
pushf
push
js
jbe
loop
mov
mov
jl
hlt
cdq
pop
dec
movs
fwait
pop
pop
jecxz
imul
or
retf
jmp
xchg
dec
lods
or
mov
inc
pop
fisttp
arpl
fdiv
scas
adc
xor
aaa
inc
jl
and
or
cmp
fisttp
or
rcl
mov
shl
add
das
cmp
imul
xchg
or
imul
inc
push
inc
pop
xor
ins
jns
stc
sbb
mov
xchg
mov
add
out
mov
mov
rol
jge
mov
inc
inc
mov
dec
mov
xchg
movs
sbb
inc
pop
(bad)
xchg
pop
inc
dec
pop
popa
xchg
es
mov
sub
pusha
pusha
imul
scas
xor
xchg
mov
imul
aad
call
outs
add
ds
into
adc
xor
idiv
ret
mov
push
(bad)
scas
mov
lods
mov
lahf
jle
hlt
mov
adc
mov
rol
mov
pop
xchg
std
dec
mov
and
mov
push
stos
movs
imul
call
dec
inc
pop
ins
(bad)
sbb
or
mov
cmp
inc
lods
loopne
dec
shl
enter
cmp
cwde
xor
pop
xchg
adc
adc
out
cli
lds
rcr
aam
push
xor
aaa
test
jmp
mov
add
mov
lods
imul
fsub
xor
std
sub
sub
add
cmps
jbe
sbb
xchg
push
in
popa
aad
ss
es
ja
push
dec
cmp
cli
xor
sub
mov
in
xchg
enter
push
push
sbb
jecxz
arpl
cld
adc
cmp
test
jmp
dec
lea
push
icebp
mov
mov
mov
sbb
lock
push
jne
sub
pop
xor
dec
xchg
push
pop
(bad)
dec
arpl
out
cmp
jmp
aam
outs
mov
daa
add
retf
loop
mov
adc
stos
call
dec
(bad)
cmp
or
das
jns
inc
dec
inc
das
lods
repz
cli
cmps
loopne
jle
inc
push
pop
mov
leave
mov
push
loopne
inc
test
fdiv
rcr
mov
cmp
and
mov
mov
sub
jne
lds
adc
push
repz
lock
mov
jmp
mov
aaa
mov
icebp
(bad)
lods
dec
or
fistp
adc
out
je
jo
cli
test
inc
inc
cli
loope
adc
arpl
popa
fist
mov
adc
in
jle
jae
cmps
and
rcl
dec
jno
mov
ins
in
clc
mov
test
out
leave
mov
pop
clc
and
push
pop
inc
xor
popf
es
xor
nop
pop
mov
mov
jo
pop
sbb
add
dec
sbb
sti
mov
xchg
inc
or
add
mov
lods
lock
iret
and
ins
dec
in
dec
fst
aam
add
aad
fwait
cmp
and
inc
sbb
jg
jb
fs
daa
dec
sbb
adc
mov
cmp
jbe
mov
sub
pop
push
jno
push
push
mov
jae
inc
jno
lods
call
ret
cmp
push
or
inc
ret
mov
and
xchg
or
or
mov
(bad)
repz
push
les
cmps
lods
mov
in
loop
xor
cmp
mov
fmul
ror
gs
(bad)
fstp
push
popa
mov
adc
rol
retf
mov
loope
jp
repz
enter
sub
adc
scas
mov
js
daa
aad
push
cdq
pop
mov
or
out
push
sub
out
(bad)
jge
pop
cmp
cmp
mov
mov
mov
mov
les
(bad)
enter
push
mov
imul
cs
call
aad
jg
rol
movs
std
push
mov
jae
scas
out
dec
dec
pop
out
repnz
sahf
cld
sub
push
popa
sbb
sub
cmps
jns
jno
pushf
out
mov
add
mov
outs
jg
mov
call
sbb
cmp
je
sub
pop
adc
mov
lock
fild
mov
aaa
outs
hlt
sub
mov
sub
or
dec
xchg
push
jae
cmps
pop
jne
fstp
jmp
repnz
pop
add
bnd
inc
pushf
sahf
jnp
fs
mov
stc
xor
push
sbb
mov
enter
jnp
hlt
dec
fadd
pushf
cmp
mov
xor
imul
rol
icebp
inc
pop
sbb
dec
push
test
inc
aad
sbb
outs
(bad)
test
int3
out
fsincos
cmps
xchg
or
lea
jp
hlt
dec
ja
lods
data16
xchg
mov
stc
pop
inc
push
out
or
clc
in
xchg
mov
xchg
cmp
push
rcl
cmp
stos
clc
adc
dec
adc
jnp
stc
mov
or
push
inc
add
or
jae
mov
push
xor
sbb
pop
mov
cli
scas
aam
sbb
rcr
add
ds
sub
ins
daa
retf
jne
popf
adc
scas
dec
fist
icebp
aad
mov
xor
pop
mov
jae
fnstenv
js
cmp
xor
stc
and
sti
lock
scas
fs
das
dec
sbb
into
iret
sti
retf
test
sub
ins
daa
sbb
movs
mov
test
cld
int
cli
sbb
iret
adc
mov
int3
xchg
sbb
adc
jmp
pop
(bad)
cmp
push
iret
inc
fist
pop
sub
pop
aad
xor
mov
inc
div
pop
and
call
pop
mov
enter
call
dec
popf
out
mov
dec
jp
sub
and
push
enter
ret
movs
scas
pop
jo
jo
sub
mov
mov
ja
mov
aam
pop
cwde
add
xchg
sar
mov
fwait
jmp
cdq
pop
pop
or
into
sub
ins
div
test
cdq
sbb
ins
push
data16
cmp
sub
in
and
pop
and
ins
add
pop
sti
gs
retf
icebp
push
jae
mov
ja
sbb
mov
cmp
cmc
sahf
popa
mov
pop
nop
pop
sbb
lods
adc
arpl
dec
pushf
je
fild
ins
cmp
fwait
(bad)
cmp
popf
push
adc
jo
pop
pop
jb
jmp
imul
cmp
fist
je
fwait
shl
xlat
mov
fwait
stos
sbb
fs
mov
in
rcr
popa
stos
and
fidiv
ins
sbb
sub
dec
sub
dec
mov
sti
test
dec
mov
add
cli
(bad)
shl
imul
xlat
push
add
push
xor
aam
dec
ret
shl
mov
retf
push
mov
aaa
pop
es
jecxz
cmps
xor
or
push
and
push
xor
adc
pop
repz
dec
dec
fimul
sbb
mov
xchg
or
cwde
and
pop
jb
add
cmp
fisubr
xor
out
jbe
cwde
outs
leave
jae
and
(bad)
(bad)
(bad)
jecxz
cli
retf
ret
out
mov
in
rol
or
jl
cmc
jnp
xchg
or
mov
(bad)
test
test
call
adc
jno
fild
mov
push
sub
xchg
ficomp
call
dec
fsub
and
adc
popf
int
cmp
(bad)
not
and
adc
stos
(bad)
test
sahf
sub
xor
cs
(bad)
pop
pop
add
mov
add
and
bound
dec
inc
adc
sub
adc
mov
pop
stos
ficom
jne
mov
cld
dec
xor
sub
inc
inc
mov
mov
rol
gs
mov
adc
mov
popf
bound
ret
sbb
popa
inc
(bad)
mov
push
jecxz
add
fldl2e
add
pop
test
popf
in
cmp
ins
(bad)
addr16
xchg
push
shr
in
sahf
jl
push
lahf
and
ja
icebp
mul
lds
outs
add
dec
dec
or
hlt
into
leave
movs
(bad)
stc
adc
jne
jge
daa
xchg
stos
jecxz
dec
adc
push
fidivr
enter
mov
jo
aad
shr
iret
out
(bad)
shr
mov
imul
xchg
xchg
mov
leave
mov
sub
call
enter
(bad)
push
(bad)
outs
sahf
adc
and
sub
out
dec
jmp
out
std
(bad)
mov
mov
push
mov
(bad)
std
pop
inc
mov
push
sub
add
or
xor
push
andps
jnp
mov
xor
xor
add
xchg
test
mov
(bad)
ins
push
(bad)
pushf
sub
dec
and
mov
mov
pop
adc
mov
retf
jo
cmp
js
pop
and
push
mov
popa
cld
inc
pop
call
imul
test
call
sub
xchg
or
add
xor
ins
out
pop
mov
dec
jae
sbb
fnstcw
push
dec
outs
mov
sbb
fnstcw
adc
and
sar
jno
jge
ret
jnp
adc
pop
in
sub
rcr
test
test
cld
or
sahf
adc
lahf
js
imul
ins
imul
adc
in
(bad)
cmp
fistp
pop
xor
cs
dec
mov
jo
or
ret
test
test
test
pusha
push
xlat
fninit
ret
(bad)
pushf
xchg
cmp
xchg
div
das
das
and
into
jno
cdq
fild
inc
cdq
and
adc
les
jae
mov
adc
push
push
mov
adc
jl
test
mov
sar
test
rol
fisttp
int3
(bad)
imul
mov
repz
in
daa
pop
cld
push
sbb
fcmove
mov
popf
arpl
jg
sti
and
push
push
ds
mov
ins
out
movs
scas
cmp
adc
and
pop
les
imul
cwde
icebp
adc
and
leave
or
lea
push
xchg
imul
add
jae
cmp
sub
fisub
ss
movs
test
scas
push
add
stos
int3
and
or
sbb
or
inc
icebp
(bad)
sbb
stos
pushf
jmp
jmp
arpl
scas
sahf
jmp
hlt
test
je
mov
imul
bound
scas
sbb
jb
adc
mov
or
dec
xchg
push
pop
in
jl
xchg
mov
or
stc
cld
mov
int3
jmp
jmp
aaa
push
xchg
add
popa
mov
xchg
jne
xchg
mov
test
sahf
mov
in
push
ret
idiv
adc
(bad)
icebp
push
sub
sbb
xor
jle
xchg
inc
stc
jg
test
jge
jg
cwde
lds
mov
cmp
test
jmp
jl
inc
not
into
dec
xor
bound
fimul
leave
pushf
retf
stc
fisub
add
xchg
jne
jb
daa
sub
fst
dec
jg
(bad)
jb
push
dec
mov
mov
jecxz
xor
push
sub
cmp
(bad)
jmp
jb
push
xor
lea
pop
mov
sbb
xor
jo
hlt
or
xchg
stos
xor
adc
xor
loopne
or
fwait
mov
fsub
sub
push
mov
test
xlat
xchg
call
in
pop
sub
out
sahf
call
mov
push
dec
dec
push
leave
sar
adc
jo
cmp
xor
std
das
adc
inc
ror
sub
cmp
(bad)
sub
nop
fbld
adc
in
icebp
mov
lock
dec
(bad)
push
xor
adc
mov
xor
inc
push
cmp
out
hlt
fsub
stos
sbb
rcl
ins
inc
and
stos
imul
dec
inc
dec
lea
ins
pop
push
or
mov
gs
popf
retf
call
xor
dec
(bad)
lods
cmp
mov
retf
add
nop
mov
aas
xor
movs
aam
rdtsc
rcl
movs
pop
jno
mov
cmp
dec
fnstenv
retf
pop
fcomp
test
xor
(bad)
mov
mov
(bad)
xchg
inc
(bad)
mov
lods
(bad)
mov
leave
adc
and
jecxz
cld
test
call
xchg
jne
xlat
call
lock
sub
call
inc
xor
and
xlat
jmp
xchg
cmp
push
loop
xor
in
jecxz
mov
cwde
xlat
inc
jns
pop
rol
mov
ss
jp
lahf
call
mov
out
push
sub
jl
stos
mov
mov
fmul
mov
(bad)
movs
loop
mov
nop
dec
push
push
or
(bad)
repnz
fisttp
sahf
jmp
outs
paddw
(bad)
jecxz
lds
xlat
scas
daa
rol
das
(bad)
xor
out
xchg
mov
fstp
jl
ret
mov
sbb
test
xchg
cld
fistp
mul
mov
pop
daa
and
shl
pushf
mov
lods
xchg
jbe
into
arpl
repnz
jmp
xor
adc
sbb
mov
jl
js
add
(bad)
sub
rcl
sub
int
or
(bad)
lea
dec
push
lds
dec
cld
ins
in
mov
ds
xor
xchg
imul
xchg
or
xchg
adc
and
dec
mov
pop
cmp
mov
imul
sbb
enter
jp
daa
dec
fistp
sub
sbb
jbe
rcl
push
loopne
mov
int
push
sub
push
xchg
jmp
pop
adc
test
push
inc
shr
cmps
add
adc
xchg
popf
adc
adc
jl
out
dec
fbstp
mov
pop
dec
dec
dec
out
mov
pop
dec
or
dec
imul
cli
pop
mov
iret
sar
mov
or
mov
xchg
cld
loopne
out
jno
cld
pop
add
imul
adc
xor
stos
adc
mov
push
mov
inc
mov
iret
retf
fist
pop
cmp
inc
loop
ja
icebp
xor
aas
in
rcr
stos
mov
inc
inc
test
pop
std
sahf
das
(bad)
mov
test
and
xchg
int3
add
loopne
shl
and
push
xchg
mov
fstp
push
mov
push
mov
xor
xlat
fwait
mov
sbb
and
xchg
ins
pop
jmp
add
push
jge
(bad)
int
sahf
lahf
xchg
sub
aas
daa
mov
das
adc
push
in
lahf
sti
repnz
push
out
add
retf
loope
shrd
call
loop
ficom
xor
push
or
or
popa
fst
imul
push
movs
dec
outs
add
outs
dec
ja
cs
out
mov
gs
ss
test
lahf
out
mov
dec
fistp
int3
leave
leave
vminss
sbb
imul
inc
enter
cdq
and
enter
mov
pop
leave
sub
aaa
not
imul
jge
jmp
cwde
fnstenv
jb
sub
ret
push
dec
and
mov
sub
lea
mov
cmps
and
call
fnstcw
add
inc
repz
cmps
ficomp
nop
mov
mov
jne
add
mov
test
in
pop
jg
test
sbb
retf
jb
add
test
jp
test
inc
inc
popf
or
adc
mov
mov
enter
les
popf
inc
fisub
aas
cmp
push
nop
pop
xchg
mov
or
cld
pushf
jecxz
cmp
sub
jns
adc
outs
arpl
cli
mov
adc
jno
call
dec
std
or
aaa
clc
neg
fs
stos
or
popf
jo
adc
movs
or
ds
cmp
push
pop
icebp
xchg
mov
int
lds
adc
mov
je
mov
lock
and
push
pusha
adc
sahf
pop
das
in
dec
pop
outs
clc
loope
add
push
mov
jns
push
push
push
imul
xchg
lods
ins
rcl
fcmovnu
push
mov
(bad)
and
and
xor
test
sbb
loop
test
push
lock
pop
fdiv
sahf
sub
jnp
(bad)
push
sub
not
add
test
(bad)
pop
sbb
mov
nop
push
test
das
jg
jg
pop
cmp
or
stc
ret
push
pop
inc
pop
pop
div
sub
xchg
popf
ud0
or
test
loop
imul
cmc
imul
push
mov
adc
mov
pushf
dec
dec
shl
repz
push
les
cdq
loop
pop
jge
mov
xchg
push
jo
in
iret
ss
sub
jp
or
sbb
movs
and
mov
call
mov
cmps
aaa
outs
or
fsubr
shl
mov
lock
ss
push
cld
outs
imul
mov
inc
xor
lea
and
and
fistp
mov
es
xor
push
and
out
ja
cwde
cmps
push
dec
mov
dec
pop
ins
inc
les
pushf
(bad)
lea
push
cmp
mov
jnp
rol
imul
ja
or
sar
mov
lds
cmp
(bad)
scas
lahf
cmp
repnz
adc
xchg
xor
fisub
jmp
cmp
je
xor
aam
pop
out
idiv
add
jbe
mov
mov
leave
xor
mov
test
pop
add
jle
int
add
scas
push
pop
outs
std
jecxz
and
imul
ror
lods
and
cwde
xchg
ins
xchg
arpl
daa
out
add
fnstsw
sbb
scas
push
adc
enter
arpl
popa
test
mov
xor
rcr
bound
cmp
sbb
test
inc
mov
in
div
ja
call
mov
xchg
dec
push
fsubp
out
mov
ret
mov
outs
(bad)
mov
mov
pop
inc
repnz
pop
es
(bad)
push
jne
jp
jo
lods
pause
push
add
inc
mov
mov
inc
jae
cmps
jl
repz
xchg
jmp
xchg
lods
stc
inc
pop
adc
scas
outs
les
pop
js
cwde
arpl
into
pop
xchg
in
mov
mov
jmp
inc
sub
jl
and
pop
sbb
arpl
aad
dec
pop
jmp
jbe
fst
pop
push
add
or
loop
out
adc
mov
daa
mov
inc
pop
(bad)
shl
inc
retf
es
sbb
push
out
xor
in
jne
jp
fwait
mov
mov
int
push
in
lods
shl
imul
xor
jmp
dec
(bad)
mov
jmp
xchg
dec
test
push
xor
cmp
inc
cmp
lock
(bad)
mov
cmp
popa
pop
movs
push
test
sbb
cmp
mov
ja
mov
test
cmp
xchg
add
(bad)
loop
movs
xor
std
jp
lds
inc
jl
jg
cmp
sbb
sub
ret
pusha
fwait
or
xchg
mov
pushf
or
and
push
cs
sbb
outs
pop
fnsave
adc
int3
mov
test
inc
cmp
xchg
cmovnp
js
fisub
xchg
hlt
fidiv
daa
xchg
fild
mov
cmp
rcl
test
or
imul
sbb
lods
xchg
lahf
jmp
xchg
xchg
stos
jae
inc
lods
and
fwait
icebp
ss
sbb
mov
push
cmp
or
hlt
repnz
out
pop
sbb
gs
ss
pop
mov
jno
xchg
test
jp
imul
call
ds
mov
or
xor
aad
push
and
add
(bad)
jmp
sub
and
jns
shr
sub
sub
dec
outs
jl
(bad)
daa
(bad)
fdiv
shr
dec
outs
xor
test
mov
mov
and
enter
pop
(bad)
inc
popa
sub
mov
mov
dec
dec
xchg
mov
mov
jbe
xlat
imul
fwait
mov
push
mov
or
stos
inc
and
xchg
add
fld
stc
mov
dec
inc
xor
es
dec
idiv
xchg
mov
leave
mov
jl
lea
test
adc
or
sub
sub
in
pop
or
mov
mov
dec
bound
push
sub
js
cmps
xor
push
mov
sti
ds
imul
ins
xlat
mov
enter
pop
xor
daa
ss
into
pop
daa
sub
ja
xchg
inc
cmp
sbb
ret
shl
push
pusha
call
mov
push
or
push
icebp
std
daa
pop
add
leave
test
xchg
mov
push
pop
mov
push
int3
jp
dec
cwde
popa
or
and
jle
rcl
movs
mov
cmc
out
retf
mov
enter
ja
xchg
mov
mov
mov
movs
sub
pop
mov
mov
packssdw
jmp
pop
ins
mov
call
cmp
fstp
jbe
and
fwait
push
add
or
dec
mov
sbb
ins
stc
out
ret
in
xor
sub
cmc
out
inc
jmp
out
ss
mov
fcomp
lods
pop
movs
xchg
push
and
nop
(bad)
xor
lods
mov
xlat
pop
inc
out
imul
sti
jnp
cld
cmps
dec
enter
pop
inc
mov
adc
or
icebp
js
neg
xor
xchg
(bad)
fldln2
cmp
mov
std
movs
je
sub
push
pop
jno
xor
pop
(bad)
js
adc
jo
xchg
mov
sbb
pop
adc
jmp
or
sar
fcmovu
movs
push
push
test
mov
pop
in
lea
stos
pop
xchg
fst
xchg
pop
std
pop
fs
push
loope
jg
ins
push
lahf
aad
mov
push
(bad)
loopne
aas
mov
shl
lds
mov
cmp
fucomi
pop
stos
cld
adc
xor
(bad)
into
jns
xor
in
aad
scas
or
cdq
enter
out
dec
xchg
and
jmp
mov
in
mov
fs
adc
cmp
repz
rcr
ror
jecxz
push
test
push
out
inc
push
shr
or
std
in
mov
cmc
bound
inc
fisub
int3
out
cmp
and
data16
jmp
iret
mov
retf
cld
inc
pop
sbb
les
outs
pop
xor
mov
(bad)
fild
mov
pop
inc
pusha
cdq
mov
pop
hlt
in
jns
inc
fsub
push
push
mov
adc
dec
or
loope
into
dec
sub
jne
xor
jb
into
sbb
adc
xor
cld
out
sbb
sbb
out
mov
push
es
mov
rcr
gs
sub
pop
jl
xchg
cwde
or
adc
out
sub
jne
mov
adc
inc
sub
bound
sub
dec
stos
stos
gs
pop
jae
xchg
hlt
fiadd
add
sbb
inc
inc
xlat
fcom
cmp
iret
shr
imul
pop
sub
je
jns
xor
nop
aad
int3
mov
jmp
push
in
out
and
push
adc
sbb
cli
mov
adc
add
adc
icebp
dec
sbb
jnp
je
jl
psubsw
(bad)
fld
xchg
(bad)
pause
xchg
sar
sar
das
mov
dec
jnp
dec
or
dec
adc
sub
mov
push
jmp
push
sub
mov
mov
clc
mov
push
jp
mov
mov
clc
pop
jne
icebp
pop
loope
(bad)
sti
ins
mov
cwde
cmps
mov
adc
pop
and
repz
cmp
rcl
cmps
pop
int3
xor
push
stos
sub
push
xchg
cmp
cmp
mov
cdq
cli
mov
cmp
push
jge
dec
and
push
push
sbb
jb
nop
mov
mov
test
int
inc
fld
mov
imul
call
mov
sahf
mov
xor
jae
mov
cmps
sbb
adc
pusha
(bad)
jno
into
cmps
sub
stos
mov
xor
rcr
fild
popa
dec
inc
xor
(bad)
nop
jns
pusha
gs
and
mov
pop
ja
jbe
(bad)
(bad)
movs
jnp
dec
jmp
lods
add
or
mov
sub
cmp
jno
jl
jb
xor
(bad)
jmp
jno
xchg
data16
and
cmp
and
mov
sub
mov
inc
in
adc
inc
pusha
loopne
push
mov
loope
ins
lea
jle
mov
xor
jmp
hlt
ja
clc
xor
mov
sar
shl
into
addr16
pop
and
xor
mov
(bad)
jbe
loop
add
xchg
adc
mov
in
mov
pop
mov
sub
call
(bad)
mov
cs
push
push
fld
lods
adc
bound
ret
mov
xchg
dec
movs
movs
xchg
sub
scas
push
mov
mov
mov
loop
inc
xchg
fnstsw
add
ror
mov
fiadd
xchg
add
ds
cdq
mov
xor
out
xchg
nop
dec
mov
data16
dec
enter
bound
out
jge
xor
scas
test
pop
js
loop
pop
repz
jmp
sbb
pushf
pop
mov
in
push
pushf
mov
cmps
lods
div
mov
sbb
jnp
movs
popf
in
call
pushf
mov
pusha
and
enter
xor
frstor
jns
mov
or
jg
push
xlat
mov
pop
neg
leave
adc
or
jne
js
push
add
lods
mov
pusha
push
out
dec
cmp
pop
adc
in
cli
pop
or
jp
adc
out
jb
jns
cmp
js
jnp
and
pop
sbb
adc
xor
push
mov
sub
nop
add
call
int
cmp
xor
(bad)
(bad)
jmp
loop
std
add
dec
mov
fwait
push
inc
bound
inc
aad
dec
call
pop
inc
add
fwait
pop
outs
stos
jg
aaa
mov
dec
ror
lock
and
pushf
mov
cmp
ins
(bad)
adc
push
aaa
pop
push
mov
jo
aad
pop
and
pusha
ds
xchg
push
push
mov
mov
ds
int3
adc
aad
movs
jmp
jge
add
sub
adc
jge
mov
mov
(bad)
sub
push
jb
lods
test
pop
sti
mov
xor
scas
fs
pop
pop
aaa
pop
push
or
pop
movs
sub
pop
pop
dec
xchg
mov
pop
pop
data16
stos
jmp
cmps
xlat
repnz
mov
not
in
jnp
hlt
je
mov
cdq
popa
jns
jae
adc
dec
adc
ss
scas
mov
fcomp
ins
mov
std
stc
and
push
fidivr
sub
push
(bad)
inc
xor
jo
and
jbe
pop
dec
(bad)
js
sbb
pop
retf
ret
cmps
add
push
push
sub
or
mov
add
js
rcl
adc
(bad)
lahf
(bad)
xchg
pop
push
mov
adc
pop
add
pop
retf
xor
xchg
push
jle
inc
adc
(bad)
xor
xor
and
adc
push
not
movs
shl
int
in
mov
mov
ins
out
jmp
push
and
jns
shl
lahf
icebp
imul
push
adc
xchg
dec
add
in
in
into
js
or
add
test
lahf
test
rol
inc
mov
mov
rcr
ficom
cmp
dec
and
into
xchg
out
cmp
repz
jbe
inc
retf
je
xchg
sub
popf
ror
enter
cmp
sub
jecxz
sub
and
fpatan
(bad)
mov
fwait
push
into
jmp
fist
inc
push
mov
out
pop
fadd
ret
dec
jbe
jmp
in
jns
mov
aam
in
ss
jle
xor
test
dec
sub
push
enter
adc
bound
sub
scas
mov
out
ja
pop
jns
sub
push
xchg
jle
aas
xchg
loopne
es
or
jecxz
fsub
sbb
into
mov
mov
test
sub
stc
in
call
cmp
dec
or
jne
or
outs
cdq
adc
daa
mov
dec
push
adc
push
inc
clc
jge
sti
ror
in
jp
pop
add
ret
aad
adc
and
daa
loope
enter
rcl
push
inc
sar
ret
inc
push
out
xor
jge
(bad)
loop
jecxz
int
add
or
inc
fsubr
rol
(bad)
push
fistp
add
cwde
mov
xchg
pop
pop
(bad)
dec
xchg
pushf
fcmovnbe
push
and
out
xor
sub
int3
mov
in
nop
mov
cmp
lods
add
xor
jmp
mov
data16
leave
sbb
inc
mov
movs
ja
fld
stos
sbb
or
in
xchg
add
fcomp
pcmpgtd
dec
adc
enter
cmp
mov
fwait
xchg
sbb
lea
movs
jle
(bad)
pop
and
ss
(bad)
mov
dec
dec
sub
ins
add
shl
pop
xchg
int3
sub
es
add
imul
cdq
ret
pop
jl
cwde
jb
popf
in
int
shr
les
add
(bad)
push
ins
std
rcl
push
repz
popf
add
out
sbb
enter
ins
push
jmp
in
popa
fcmovbe
sub
jl
mov
iret
in
clc
xchg
pop
shl
loopne
ins
mov
das
cmp
outs
pop
xor
xor
shl
mov
adc
and
add
mov
popf
in
xchg
pop
jno
mov
inc
add
mov
jecxz
xlat
adc
lock
outs
cmps
aaa
inc
into
addr16
xchg
mov
dec
dec
add
and
and
retf
ror
xchg
frstor
loopne
mov
mov
inc
movs
pop
cmp
sub
cmp
sub
or
mov
test
cmp
ja
les
pop
sbb
adc
jb
icebp
out
(bad)
inc
sub
in
cmp
xchg
fcomip
test
cmp
cli
out
xor
pop
imul
mov
stos
nop
xchg
hlt
inc
and
enter
xchg
gs
add
mov
idiv
gs
xchg
cli
aam
popf
jge
ins
adc
mov
call
rcr
xchg
retf
inc
lahf
and
(bad)
stc
popf
jp
repz
rcl
mov
dec
into
lods
ds
xchg
add
xor
adc
jo
sbb
or
mov
out
pop
xlat
mov
xor
mov
fisub
shr
cmp
add
mov
cdq
out
enter
clc
xor
test
xchg
xor
inc
stos
not
mov
sbb
push
mov
or
sbb
dec
ror
mov
push
and
dec
out
imul
xor
xor
jg
iret
jb
ja
lock
xchg
lahf
mov
ds
test
popa
mov
or
sbb
bnd
dec
pop
mov
hlt
mov
jo
xchg
inc
pushf
mov
lods
inc
jnp
lods
sub
leave
mov
sar
jne
xor
mov
std
cmp
xchg
fldenv
add
ficom
adc
push
(bad)
mov
mov
or
sub
xor
sbb
sub
pop
je
out
push
dec
nop
pop
xor
imul
fld
into
sahf
fdiv
(bad)
inc
mov
xor
outs
dec
stos
imul
cmp
shl
(bad)
sbb
sbb
mov
test
ins
adc
or
fisttp
es
xor
stos
push
movs
mov
jl
cwde
rcl
jo
fs
es
rcl
movs
outs
aas
int3
dec
(bad)
fcmovu
je
and
(bad)
test
mov
mov
cmp
and
adc
pushf
out
(bad)
retf
inc
aam
div
push
pop
retf
enter
mov
int
or
dec
or
inc
push
mov
inc
cmp
adc
ret
mov
js
sub
int
data16
(bad)
adc
adc
(bad)
lods
ror
scas
adc
dec
cmp
loope
dec
ins
inc
sbb
fsub
pop
cli
dec
xor
sbb
ret
xor
sub
push
fdiv
jmp
add
push
sub
sar
call
into
repz
pop
daa
(bad)
cmp
call
popf
xchg
shl
inc
in
sbb
add
pushf
popa
sub
ror
mov
div
repz
pop
and
and
push
imul
and
cdq
imul
inc
test
(bad)
lods
hlt
add
push
pop
inc
leave
shl
mov
sbb
push
pop
cvtdq2ps
(bad)
cld
into
mov
pop
mov
inc
jge
frstor
mov
outs
sub
rol
mov
std
aaa
bound
inc
mov
test
stos
movs
pop
add
ins
out
sbb
addr16
movs
int3
lea
stos
setns
xchg
stc
lea
mov
xchg
mov
shl
ins
rcr
outs
test
push
cmps
jecxz
test
mov
mov
adc
inc
js
ja
inc
int
inc
arpl
pop
pop
in
inc
leave
and
and
imul
scas
jae
xchg
(bad)
add
int3
lds
pop
pop
xchg
ret
jno
mov
push
dec
push
cmps
jmp
call
pop
ins
retf
(bad)
aam
inc
ret
popa
pop
cmp
pushf
xor
inc
ins
sub
dec
jo
pop
out
call
inc
lahf
cmp
js
cmps
inc
leave
imul
adc
in
into
sub
adc
add
jp
lock
push
push
sbb
sbb
imul
mov
sbb
mov
aaa
das
xchg
cdq
pop
test
pop
ss
mov
fstp
addr16
sub
(bad)
jmp
jno
repnz
xor
or
(bad)
mov
push
xor
sbb
loop
push
hlt
or
dec
neg
jae
cmps
ficomp
popf
push
mov
push
dec
jne
add
pusha
xchg
jmp
hlt
mov
push
lds
dec
pop
mov
shr
icebp
es
ins
pop
das
pop
inc
nop
fdivr
add
test
jne
xor
push
sbb
sbb
dec
or
out
or
jns
rcl
sbb
mov
push
aas
(bad)
lock
stc
push
ss
cmp
vpsubq
movs
iret
add
mov
das
imul
or
int3
cwde
or
mov
adc
adc
retf
jl
cmp
xchg
jno
dec
push
add
dec
fisubr
inc
sub
retf
mov
dec
jae
jge
inc
ins
adc
add
jp
(bad)
adc
int
mov
mov
or
add
sub
cli
pusha
mov
sysret
jo
sahf
lahf
call
or
int
sahf
xchg
add
andps
repz
xlat
mov
out
aad
test
imul
adc
aad
xchg
mov
test
dec
call
xchg
cmp
int3
sub
sar
add
stc
fmul
sub
xlat
add
daa
(bad)
popa
cwde
cmps
pop
jge
cmps
push
add
or
or
cli
call
stos
rcl
pusha
push
sub
mov
jmp
mov
cdq
jecxz
in
push
cmp
pop
cmp
xor
mov
cli
pop
sub
inc
xlat
jp
mov
or
jmp
fcomp
jecxz
lahf
imul
cmp
add
add
out
int3
mov
jp
ja
cmp
out
out
cmp
or
mov
mov
scas
imul
mov
in
fadd
lahf
ret
mov
add
cmp
mov
push
loop
pusha
push
add
xchg
and
push
adc
(bad)
jmp
das
lods
cmp
inc
and
call
movs
ret
jae
out
cli
pusha
pusha
popa
mov
add
jmp
sbb
shl
arpl
retf
cmps
lds
test
gs
sbb
neg
jno
cmc
dec
sub
shl
imul
inc
(bad)
push
mov
xor
push
fdivrp
jno
dec
cmp
fstp
in
adc
and
fwait
inc
mov
mov
ins
imul
pop
arpl
jo
jno
(bad)
jno
js
cmps
rep
loop
jg
xchg
in
push
mov
push
sub
call
xchg
inc
fistp
mov
fistp
mov
aad
xor
xchg
out
mov
mov
push
imul
rcr
js
sbb
(bad)
out
inc
xchg
inc
mov
add
lahf
mov
enter
pop
push
ficom
pop
leave
jae
retf
popf
cmps
lods
daa
iret
push
jne
bound
push
dec
leave
dec
(bad)
pop
mul
xor
mov
mov
cmps
sub
mov
outs
and
inc
das
cld
(bad)
dec
sub
not
leave
sahf
call
sbb
pusha
test
nop
aaa
jmp
xchg
sti
js
mov
mov
fidiv
rcr
or
movs
or
push
xor
daa
add
addr16
outs
dec
mov
xchg
test
int
or
(bad)
xchg
xchg
dec
sbb
ficomp
enter
imul
adc
cmp
stos
sub
fst
retf
or
dec
iret
add
mov
inc
push
inc
cmp
jb
pop
out
mov
enter
inc
call
por
add
xor
aad
xchg
out
dec
cmp
xor
cld
retf
pop
cmp
sub
popf
mov
dec
out
mov
jle
fisttp
stc
mov
jb
dec
fdiv
cmp
mov
jmp
xchg
mov
into
jg
dec
sub
push
add
test
jnp
addr16
or
ss
dec
je
or
dec
mov
fiadd
mov
retf
aas
icebp
retf
mov
icebp
push
push
pop
sbb
bnd
and
mov
test
cmp
mov
push
ins
daa
out
push
cmp
push
loope
loop
xchg
movs
enter
clc
inc
jmp
idiv
jne
xor
push
fwait
stc
(bad)
cmp
xor
(bad)
retf
sub
int3
mov
mov
mov
sbb
mov
sar
das
push
xchg
(bad)
cmp
jnp
shl
push
push
aam
cmp
pop
adc
pop
out
loop
mov
mov
sar
pop
pushf
push
jb
sub
mov
data16
out
popf
xchg
(bad)
cmp
scas
sbb
xchg
out
stos
dec
cmp
repz
ror
or
sti
sbb
cdq
push
loope
neg
ja
mov
call
inc
lock
push
pop
mov
or
ret
lock
ret
int
shl
adc
or
dec
or
and
push
mov
scas
jmp
cmps
lock
fs
xor
and
loopne
and
adc
shl
xor
test
rol
pop
fcmovnbe
jno
shr
nop
call
sbb
pop
popf
(bad)
mov
cmps
imul
ss
mov
outs
lock
push
ret
adc
fucomip
in
cmp
and
gs
in
sahf
aaa
repnz
pop
bnd
adc
sbb
imul
icebp
adc
dec
in
inc
jl
(bad)
inc
nop
adc
fwait
mov
pop
add
push
out
int3
nop
outs
mov
mov
idiv
sbb
mov
retf
mov
cmp
nop
mov
popa
popf
in
add
(bad)
cld
int
inc
(bad)
shl
inc
std
pop
ret
sub
outs
add
jmp
iret
fwait
xlat
sbb
dec
pushf
sub
aam
stc
push
inc
xchg
dec
sbb
push
add
adc
mov
push
outs
add
out
cmc
sub
xchg
ins
lods
std
(bad)
push
imul
neg
scas
fdivp
sbb
and
ror
aam
cmp
push
sub
repnz
in
xchg
out
stos
or
push
(bad)
fisubr
push
movs
push
iret
jae
rcl
lods
sti
rcr
pushf
inc
hlt
daa
cmp
sbb
pop
enter
and
mov
xchg
in
(bad)
ds
in
int3
mov
push
jb
xchg
pop
in
(bad)
into
dec
lahf
push
(bad)
mov
add
cld
aad
data16
inc
adc
jl
mov
inc
fdivr
gs
je
loopne
icebp
pop
mov
inc
xchg
pushf
pop
fbld
pop
add
jbe
mov
das
fidivr
jp
repnz
jl
ins
mov
and
rcl
fbld
outs
or
jge
fisub
call
repz
shr
xchg
jl
xor
adc
add
jae
mov
xchg
inc
sbb
in
(bad)
mov
(bad)
in
pop
add
or
sub
xor
inc
jecxz
sub
mov
pop
sub
pop
jns
movs
push
int
or
stc
jecxz
add
add
rcr
jge
out
out
imul
add
jp
add
inc
push
sub
or
ss
pop
shr
xlat
add
rcr
in
or
mov
xor
pop
dec
mov
(bad)
gs
and
jne
js
adc
push
bound
mov
sbb
sbb
fisttp
sbb
inc
inc
lock
out
nop
pop
in
xchg
add
xchg
fild
inc
imul
pop
les
pop
add
xor
sub
cmp
xchg
sbb
cli
sub
add
push
mov
shl
push
sub
cmp
shl
inc
enter
js
loope
pop
sub
cmp
dec
adc
loopne
xchg
pop
movs
icebp
xor
cmps
bnd
movs
pop
inc
imul
xchg
push
pushf
in
dec
mov
fdiv
mov
sar
or
or
rcl
inc
jae
adc
jg
jmp
movs
pop
call
cmc
scas
push
xlat
mov
push
dec
xchg
movs
int
push
mov
sub
(bad)
mov
aaa
inc
or
repnz
out
sub
sub
push
outs
sti
xor
fprem
push
ret
lods
inc
jecxz
test
cmp
dec
push
or
(bad)
and
outs
dec
jle
pop
outs
scas
or
or
mov
nop
jne
xchg
adc
sbb
test
push
std
mov
push
xor
push
or
sub
sub
jmp
cmp
cmp
repnz
and
inc
or
mov
fwait
sbb
jecxz
mov
mov
dec
imul
mov
inc
fnstenv
pusha
mov
cld
push
stos
int3
ret
cwde
shr
mov
mov
test
sbb
je
icebp
add
ret
adc
pop
sahf
call
repz
jne
inc
cli
jmp
mov
pushf
in
xor
push
sbb
loope
test
ds
fwait
cld
jg
bound
mov
add
xor
cmp
xlat
aad
lahf
pop
(bad)
lods
lods
ja
scas
xlat
outs
xor
mov
inc
pop
adc
push
jnp
add
ins
jp
add
mov
push
repnz
jg
sub
jp
loopne
xor
jbe
pop
mov
inc
ficomp
cwde
call
repnz
dec
jne
dec
mov
or
dec
and
lds
pop
aad
cmp
popf
push
adc
imul
inc
and
mov
pop
shr
push
xchg
mov
adc
js
aam
popa
add
je
xor
push
adc
sar
pop
cmp
jo
mov
dec
mov
jns
(bad)
iret
or
dec
jae
cmp
aad
movs
rcl
sub
(bad)
mov
push
mov
xor
push
dec
jno
sbb
aad
push
sub
out
shl
ja
loopne
or
in
adc
(bad)
mov
xchg
dec
jns
aas
mov
adc
xor
inc
es
neg
mov
push
xchg
movs
jmp
push
cmp
out
call
cmc
pop
add
cmp
or
aas
outs
gs
mov
xchg
push
cdq
mov
jp
mov
lods
cmp
clc
pop
sbb
mov
aas
sbb
loop
inc
stos
mov
fdiv
cmp
dec
shl
repz
ds
dec
adc
adc
pop
cmp
movs
(bad)
or
test
or
imul
pop
test
xchg
mov
ja
lock
icebp
xor
bound
in
push
leave
shl
xchg
dec
(bad)
jo
test
sub
and
adc
sbb
fstp
dec
push
xor
inc
and
(bad)
fdiv
ss
fcomp
repnz
mov
dec
push
inc
xor
dec
test
div
mov
pop
loope
mov
sbb
pextrw
sub
addr16
cmp
sbb
cmp
rcl
rol
loope
scas
fild
stos
jnp
pusha
and
cwde
mov
mov
dec
jb
mov
or
mov
dec
out
push
in
xor
xor
inc
xor
jne
mov
test
mov
out
jecxz
add
add
cmps
fsub
dec
loop
sub
pop
call
and
js
jne
mov
fnstsw
or
int
jae
stc
cmp
cld
call
sbb
pop
mov
mov
das
xchg
fisub
push
retf
dec
dec
jl
sub
and
(bad)
in
push
dec
jnp
adc
xchg
mov
ss
mov
cli
sar
push
fsub
inc
daa
add
ins
rol
stos
fsub
xchg
dec
mov
pop
mov
jno
cmp
mov
test
jmp
mov
fcmovnbe
and
sbb
inc
or
rol
(bad)
out
call
aas
ss
fcmovu
in
arpl
dec
icebp
data16
xor
movs
ficomp
pop
ret
(bad)
mov
les
and
or
cwde
lea
(bad)
cs
dec
ror
xor
push
sbb
xor
sbb
scas
push
sbb
pop
lds
aad
and
sub
ror
xchg
out
imul
xor
out
adc
fsubr
outs
mov
cmp
dec
mov
push
xor
int3
xchg
aas
xchg
sbb
push
sbb
mov
pop
xchg
fdiv
push
jae
ds
add
sti
ret
push
hlt
jbe
ror
push
movs
mov
mov
and
pop
ss
xor
sub
cli
test
es
jge
xor
icebp
push
ins
mov
js
test
bound
repnz
and
pop
idiv
fimul
mov
mov
xor
or
dec
cld
arpl
ss
mov
cmc
xchg
inc
push
in
inc
push
je
imul
pop
or
inc
inc
xlat
sti
sbb
shl
mov
dec
inc
dec
inc
mov
push
dec
fisub
push
retf
xchg
push
mov
mov
add
or
aam
jecxz
cmp
ins
xchg
mov
adc
mov
jmp
add
push
imul
call
sti
cmps
mov
imul
bound
fnstcw
fwait
jno
sub
lock
sbb
push
shl
sub
mov
es
inc
sbb
daa
cmps
popa
inc
sbb
dec
sub
mov
sbb
mov
lods
and
jne
les
sti
pop
imul
out
in
sbb
or
test
test
fnstsw
int3
push
push
cwde
or
inc
loope
xor
sub
test
inc
mov
mov
xchg
shl
and
mov
imul
jmp
pop
add
jle
dec
imul
int
mov
pushf
sti
adc
push
or
add
push
(bad)
jl
mov
adc
int
cmc
dec
xchg
mov
mov
sbb
leave
pusha
int3
cmc
cmc
add
mov
mov
(bad)
pop
jg
hlt
pop
in
push
fst
shl
add
mov
push
push
pop
stos
(bad)
xor
inc
sbb
jg
test
pop
cld
sub
movs
push
in
stc
push
jge
and
sbb
sub
pusha
adc
fsub
xchg
icebp
repz
rol
stc
daa
dec
sbb
lds
jmp
jns
push
call
pop
push
cmp
cli
in
jp
mov
xchg
adc
je
fs
push
sahf
and
dec
mov
rol
(bad)
dec
movs
popa
into
pushf
lods
cld
test
inc
ficom
mov
xchg
adc
out
push
mov
les
adc
into
adc
test
mov
(bad)
adc
cdq
call
sbb
jae
jne
sub
or
cld
sbb
repnz
mov
test
test
stc
lods
lock
or
cmp
gs
cs
std
repz
imul
jmp
lods
repz
mov
sahf
pop
and
int
aam
and
mov
sbb
push
fidivr
std
sub
xchg
and
xchg
xor
mov
in
fdiv
ds
adc
das
push
in
retf
shr
and
push
aad
sub
loop
inc
pop
outs
push
movs
leave
inc
cmps
cmp
adc
ret
mov
and
sbb
xchg
or
xchg
fdivr
adc
ja
xchg
clc
aas
stos
gs
xchg
sub
mov
push
sbb
fsub
mov
fisubr
int
sbb
call
movs
mov
jg
xchg
push
aam
mov
xor
adc
shr
jnp
dec
cdq
shl
xchg
add
mov
in
mov
push
push
push
xor
ret
fisttp
jns
fld
mov
or
and
xlat
fdivrp
in
popa
pusha
inc
cmp
les
dec
mov
stos
stos
mov
scas
adc
mov
mov
cld
in
cld
add
test
fbstp
repz
and
shr
retf
jae
dec
je
push
call
rcr
mov
es
dec
in
scas
xlat
xchg
jmp
jnp
outs
add
scas
(bad)
and
daa
retf
cmp
(bad)
dec
cmps
or
jmp
das
(bad)
in
loop
pusha
js
loopne
mov
rcl
inc
jo
mov
pop
sbb
clc
jmp
xlat
mov
inc
mov
push
lods
icebp
cmps
sub
lods
cmp
rol
popf
inc
mov
push
inc
mov
or
out
lods
aaa
sti
adc
js
and
or
inc
fdiv
mov
call
push
pop
jp
mov
stc
test
jno
sar
in
(bad)
fwait
cwde
pop
movs
rcl
and
addr16
aas
fiadd
jns
js
pop
imul
scas
sbb
cld
js
jo
dec
imul
rol
push
pop
push
mov
iret
int3
nop
sub
sbb
jb
pop
pusha
or
jl
cmp
or
aam
jns
shl
and
xor
adc
mov
es
fcomp
mov
cmps
in
add
sbb
sub
stc
dec
addr16
daa
adc
stos
les
push
rol
xchg
mov
enter
nop
sbb
xchg
jmp
and
xchg
add
(bad)
mov
cmp
retf
enter
add
fucomip
pop
out
and
xchg
mov
retf
push
mov
cmp
lds
test
outs
ins
adc
xor
pop
int3
push
je
test
cmp
call
xchg
mov
pop
xor
jmp
ret
(bad)
cmp
call
xchg
sub
fldcw
ds
jb
inc
jmp
imul
shl
dec
cmp
aam
push
pushf
add
rol
push
dec
jl
sub
icebp
test
iret
(bad)
push
adc
or
addr16
or
push
inc
or
nop
add
inc
xchg
jno
es
ror
sub
sub
js
mov
in
mov
test
push
dec
(bad)
push
in
fisttp
adc
dec
sbb
mov
jg
mov
test
pop
push
cmp
adc
jbe
inc
pushf
shr
sub
or
sbb
mov
movs
in
out
arpl
add
div
imul
xor
xor
mov
and
call
hlt
(bad)
popf
frstpm(287
ja
data16
push
js
shr
xor
aad
mov
pop
push
fs
imul
adc
out
or
cmp
fadd
scas
or
pop
movnti
retf
test
push
sbb
(bad)
jmp
daa
xchg
(bad)
dec
sub
fsubr
pop
shl
sub
xor
lods
imul
sub
mov
test
aaa
sub
jle
in
fcmovbe
ds
in
xor
jle
popf
retf
xlat
addr16
push
(bad)
js
pop
push
sub
ret
std
cs
loopne
cli
cmp
jbe
jns
sub
dec
rcl
dec
popf
xor
lahf
mov
mov
imul
call
outs
push
pop
(bad)
xchg
mov
clc
mov
jne
lods
xor
cmp
rol
retf
cmp
dec
retf
mov
pop
loope
pop
shr
push
mov
xor
std
or
(bad)
jne
dec
and
push
gs
cmp
sbb
jb
fisttp
call
or
sub
jmp
iret
ins
cmp
data16
inc
ja
in
adc
fdivr
dec
push
push
(bad)
jno
sbb
cli
retf
sbb
cmp
loopne
cdq
ret
mov
imul
mov
rcr
cdq
mov
mov
ds
or
data16
and
test
(bad)
aaa
cmp
pop
pop
push
icebp
pop
sbb
popf
add
sub
jb
sub
retf
daa
pop
imul
adc
cli
movs
adc
in
sbb
sub
gs
hlt
xchg
push
test
repnz
push
or
inc
or
xor
inc
cmp
jb
test
loop
call
pop
movs
loop
js
retf
fisubr
sti
cmp
cmp
outs
test
icebp
in
aaa
jbe
rcr
fcom
jb
mov
ret
in
cs
xchg
jl
and
movs
push
jl
push
mov
inc
mov
ss
pop
mov
gs
pop
out
loopne
shl
(bad)
fsubr
adc
retf
inc
xchg
test
xchg
out
aaa
data16
call
dec
lahf
imul
(bad)
and
sub
pop
ja
jg
mov
add
xchg
lds
pop
dec
and
dec
xchg
sbb
sbb
cmp
push
dec
or
push
xor
leave
dec
and
jbe
int3
inc
retf
pusha
shl
cmp
adc
dec
cmc
inc
repz
pushf
xchg
inc
stc
mov
mov
inc
jmp
mov
loope
xor
fld
adc
dec
cmps
cmps
cmp
movs
dec
in
mov
dec
lods
sub
cmp
arpl
rol
inc
pop
push
std
sbb
and
mov
push
mov
cmp
mov
call
mov
mov
scas
mov
or
pop
mov
xchg
jl
iret
jnp
push
mov
into
sub
cmp
push
test
pop
mov
cmp
cmp
and
xchg
and
xor
imul
inc
mov
sti
fldcw
lods
sbb
scas
or
pop
mov
arpl
mov
fucomi
jl
push
push
fisub
mov
fidivr
cdq
mov
sbb
shr
and
add
mov
pushf
inc
add
cmc
and
scas
mov
(bad)
push
mov
mov
lock
add
push
shl
test
pop
sub
mov
popf
cs
inc
mov
pop
movs
das
arpl
cmp
in
push
fmulp
repnz
lods
dec
adc
or
in
imul
push
arpl
call
push
imul
out
inc
out
inc
ins
inc
jns
xor
mov
adc
mov
cmp
mov
xor
fld
call
jmp
xchg
cmp
adc
test
jmp
mov
loope
popf
dec
je
(bad)
push
imul
fnstenv
add
mov
cmp
sahf
adc
sbb
and
bound
(bad)
inc
aaa
rcl
sbb
push
or
inc
retf
cmp
out
addr16
cwde
cdq
inc
retf
stos
popa
fwait
cmp
cdq
inc
(bad)
xor
jae
stos
jge
mov
in
mov
jle
xchg
in
dec
push
mov
pop
pop
cdq
out
pop
dec
scas
xchg
xchg
mov
dec
shl
dec
xchg
popf
js
cwde
in
mov
sahf
cld
iret
xchg
inc
xor
ficomp
je
and
out
push
jmp
push
push
cmps
push
or
lahf
xchg
jmp
mov
push
ret
out
jo
popa
push
fdiv
and
inc
or
outs
mov
xor
sub
cs
outs
mov
addr16
and
aas
pop
pop
push
(bad)
mov
adc
aam
(bad)
lahf
stc
lods
jnp
lods
adc
add
scas
pop
and
fsub
sub
mov
cwde
sti
add
push
aam
lods
pop
mov
ret
or
mov
imul
outs
sub
test
or
fbld
xchg
push
rcr
sbb
sub
ja
cs
dec
sbb
jmp
daa
or
repz
jl
xor
push
mov
popf
sub
jb
fcom
jmp
mov
imul
xor
in
mov
ds
mov
cld
mov
inc
push
lods
or
dec
mov
(bad)
jl
and
bound
xor
sub
sub
ds
dec
lahf
adc
cwde
cmp
js
cmp
pop
and
lods
pop
xor
mov
in
pop
sub
cs
mov
cmp
int3
ja
(bad)
pop
out
in
scas
test
mov
and
mov
jge
xchg
cs
pushf
outs
ins
and
icebp
pop
loope
and
test
inc
jmp
jnp
adc
add
retf
mov
imul
mov
and
mov
or
jmp
outs
xor
ret
in
or
dec
push
inc
(bad)
xor
mov
(bad)
pop
mov
dec
pop
sbb
adc
scas
push
sub
cli
inc
dec
sar
ficomp
jbe
add
mov
and
cs
mov
jg
mov
out
add
xchg
movs
inc
lods
lock
or
sub
or
adc
mov
mov
jb
xlat
mov
loope
push
(bad)
scas
ret
mov
ins
fdivp
and
xchg
dec
jnp
jecxz
mov
cmp
xor
mov
nop
xor
push
ficomp
popa
mov
and
add
and
sahf
mov
lock
rep
dec
lods
xchg
loope
mov
push
leave
int
cmp
sub
mov
sub
dec
inc
lock
sub
inc
sub
popf
sbb
(bad)
shr
lock
stc
xor
loope
pop
stos
bound
retf
mov
pop
mov
inc
fidiv
pushf
cmp
stc
shl
sbb
sbb
add
dec
and
add
ret
outs
sub
mov
rcr
push
cdq
jnp
cmps
push
mov
push
lock
je
test
push
xchg
(bad)
pop
ficom
pushf
jbe
lea
push
clc
sbb
jne
xchg
mov
pop
xchg
popf
mov
push
lahf
jl
mov
dec
ja
ds
xor
jge
pop
dec
mov
lock
sub
pop
mov
outs
push
mov
jmp
adc
scas
adc
cld
stos
out
jne
iret
add
repz
cmp
cld
pop
es
inc
jno
setae
mov
fcomp
and
aas
xchg
push
xlat
lock
xor
inc
sbb
and
sbb
dec
movs
cld
or
jl
sbb
sub
pop
jae
jne
and
jmp
sahf
in
xor
stos
and
or
xchg
inc
jl
fisttp
shr
sbb
(bad)
push
les
pusha
pusha
mov
cmp
push
mov
outs
fstp
lahf
fdiv
pop
loope
xor
push
popf
(bad)
(bad)
stc
dec
dec
pop
es
mov
clc
xor
repz
iret
outs
ror
cli
pop
jnp
mov
call
adc
clc
addr16
mov
adc
adc
ins
push
mov
adc
jo
lods
lods
fld
push
(bad)
mov
add
mov
fwait
jmp
(bad)
das
inc
xor
cmp
mov
retf
mov
daa
imul
retf
xchg
jg
mov
and
daa
mov
loopne
sbb
xchg
lods
daa
hlt
mov
mov
loopne
sub
hlt
fstp
fmul
or
push
or
mov
bound
mov
sbb
(bad)
pop
ins
xchg
or
test
cwde
xchg
lock
ja
fild
xor
sub
lds
icebp
call
push
(bad)
clc
repz
out
mov
and
dec
mov
fidiv
inc
xor
and
push
push
psubsw
ins
into
stc
shl
jle
sahf
xor
es
pop
imul
inc
add
mov
es
inc
jmp
mov
(bad)
add
movs
and
pop
and
cs
mov
enter
or
lds
and
jb
push
pop
loop
outs
fsubr
leave
sub
imul
xchg
(bad)
fdivr
aam
loop
sahf
pop
cmp
sub
mov
xchg
adc
inc
aaa
adc
xor
mov
pop
out
xchg
dec
pop
mov
leave
mov
div
cs
imul
out
fwait
(bad)
cmp
mov
add
movhps
push
cli
inc
adc
xor
loopne
xchg
mov
repnz
cmps
js
aam
dec
fild
cmp
shl
or
data16
fldcw
xchg
aaa
stos
enter
cmps
pop
lahf
jecxz
into
popw
pop
test
inc
test
cs
add
lock
mov
inc
cmp
aaa
mov
call
test
mov
out
push
adc
ret
sub
and
rol
xor
adc
js
and
xor
push
enter
repnz
or
lahf
xor
test
mov
bound
(bad)
sub
ja
cmp
in
(bad)
xor
outs
lahf
adc
push
mov
push
push
inc
mov
pop
cmc
ja
repnz
mov
cdq
mov
inc
add
aam
mov
icebp
pop
pop
in
xchg
cmp
icebp
and
icebp
int3
or
mov
cdq
(bad)
xchg
mov
dec
pop
xor
cmc
mov
mov
fsubp
mov
dec
add
iret
ficom
sbb
mov
outs
and
inc
aas
xchg
in
fcmovne
or
sub
arpl
inc
jge
es
lods
ret
hlt
pop
mov
shl
inc
das
mov
rcr
sub
xchg
adc
adc
xor
jmp
inc
xor
or
push
mov
neg
jmp
in
repz
add
pushf
lods
jecxz
sti
cwde
sub
pop
xor
inc
inc
or
sar
jge
lods
xchg
aam
push
mov
out
mov
out
int
or
fldcw
sar
sti
adc
push
jno
outs
(bad)
(bad)
pop
xlat
lds
loope
inc
xor
inc
jae
iret
outs
mov
sub
push
mov
lods
and
imul
inc
and
sar
pushf
scas
push
push
(bad)
hlt
xor
push
in
mov
mov
adc
mov
adc
ins
aad
mov
or
fimul
dec
dec
aas
jmp
mov
lds
push
add
sar
add
nop
or
xor
mov
xchg
fmulp
mov
cmp
xlat
xchg
add
and
or
shl
push
sub
ret
dec
or
jmp
rcr
movs
and
adc
iret
aam
sbb
ins
pop
xchg
xchg
dec
pop
sti
jp
outs
and
push
add
add
pop
xchg
in
jmp
jae
shl
sbb
lods
das
scas
or
pushf
add
pop
scas
jle
test
popf
pop
movd
(bad)
shl
add
cmp
sbb
stos
loope
pusha
mov
mov
adc
sbb
(bad)
addr16
push
lahf
fucom
inc
popf
adc
xchg
mov
xor
test
fs
stos
enter
mov
push
daa
sub
and
xor
xchg
mov
dec
out
push
rcl
mov
das
inc
iret
cld
mov
fdivp
jecxz
mov
sti
jle
jno
imul
mov
aam
adc
add
sbb
push
lods
mov
dec
pushf
popf
test
push
push
inc
inc
jg
jmp
adc
cmp
sar
inc
retf
adc
shld
or
push
sub
push
jb
ret
ss
mov
mov
(bad)
ja
and
jle
pop
mov
inc
jno
loop
mov
retf
aas
mov
je
mov
pop
cmps
jno
sbb
xchg
or
ret
sub
push
adc
lds
jno
and
pop
add
fmul
dec
loop
push
loop
jp
add
and
dec
loopne
push
cmps
out
add
push
push
jmp
pop
and
data16
mov
icebp
adc
cwde
inc
mov
sub
jnp
ret
imul
pusha
fwait
cld
jle
jmp
cmpps
cmc
sub
adc
lsl
test
enter
aad
and
sub
cmp
stc
and
sti
movs
das
xchg
xlat
(bad)
fdiv
dec
push
ret
jecxz
lods
sbb
xor
(bad)
mov
push
in
add
push
mov
add
or
pop
shr
or
cmp
(bad)
push
mov
sbb
push
inc
jle
mov
(bad)
fldcw
aam
pop
push
sbb
mov
out
dec
int3
mov
sbb
and
inc
sub
adc
test
addr16
push
mov
adc
jge
sub
out
pop
cld
rcr
cs
jl
fist
mov
push
out
xchg
xor
lods
idiv
mov
in
cld
ins
addr16
loopne
or
inc
cs
fld
mov
sub
add
in
pop
movs
es
mov
pop
dec
adc
mov
es
sub
jmp
aas
sub
das
jge
retf
je
inc
ja
rol
or
mov
rol
das
lods
lahf
xor
ficom
stc
(bad)
fild
xor
jp
int3
inc
cmp
mov
out
xchg
stc
outs
repnz
jo
mov
out
cmp
call
fsub
mov
aas
ins
cmps
rcl
mov
sti
in
cmp
push
xor
push
ss
jnp
fimul
mov
pop
stc
mov
or
loop
ror
shr
xchg
push
cli
aas
inc
add
dec
jmp
retf
cmp
dec
inc
xchg
jmp
sar
popa
fsubr
push
dec
mov
sahf
sbb
push
dec
sbb
lds
inc
ss
inc
xlat
ficomp
push
mov
mov
bound
add
xchg
ss
mov
lea
mov
and
mov
icebp
idiv
xchg
or
push
mov
shr
repz
pop
sub
pop
imul
jo
xchg
jmp
lahf
(bad)
cmovno
mov
loopne
sbb
cdq
and
and
loopne
pop
adc
mov
mov
je
cmp
pop
push
or
jo
int
mov
xor
popfw
(bad)
adc
and
mov
mov
jmp
icebp
lds
xor
mov
cli
data16
cs
and
jg
retf
arpl
repz
push
dec
sbb
or
cli
push
push
push
mov
sbb
and
data16
shl
lahf
xor
or
ins
and
xor
mov
ja
xchg
sub
xlat
adc
mov
not
iret
push
adc
rcl
test
pop
ss
(bad)
or
mov
sbb
scas
push
jmp
add
pushf
inc
leave
mov
aam
test
jns
mov
cld
cmp
jb
push
aas
scas
pusha
push
jno
or
retf
mov
jno
or
fcompp
mov
push
test
shl
jbe
dec
jae
and
lea
int
cmp
mov
outs
dec
rol
fld
ins
sub
les
push
fldenv
call
mov
(bad)
xchg
mov
jle
pop
xchg
fst
scas
sbb
fild
adc
fcos
inc
gs
mov
jo
pop
and
scas
adc
mov
jecxz
jl
jle
add
lea
cmp
test
inc
shr
fisttp
push
aad
add
add
adc
dec
add
cdq
cmp
mov
xchg
dec
mov
test
add
inc
sub
or
ins
mov
pop
mov
ins
popf
jae
inc
popa
fisubr
jno
cmps
xchg
jnp
jbe
ret
dec
les
push
sub
out
call
push
pop
stos
push
xchg
jo
(bad)
cmc
xor
pop
sub
retf
inc
cmps
mov
xchg
in
inc
mov
ss
pop
aad
lods
in
adc
bswap
fistp
mov
fist
add
fs
shl
pop
outs
je
inc
je
or
mov
je
pop
push
jmp
dec
(bad)
ds
add
inc
rcl
test
add
sbb
sti
inc
aas
sub
repnz
cmp
mov
sub
in
jnp
pop
inc
and
movs
sbb
mov
popa
call
loope
fmul
mov
jmp
mov
cwde
sub
clc
and
sub
arpl
hlt
imul
lods
and
outs
fmul
cld
std
sbb
mov
retf
or
or
mov
loopne
mov
adc
fimul
lock
jg
lods
and
pop
mov
stc
repnz
data16
push
sub
stos
hlt
and
aad
add
sbb
xchg
sub
rcl
xor
jns
cmp
xor
jl
pusha
addr16
cwde
das
and
add
sub
dec
das
ins
mov
fadd
xchg
fs
add
vpaddsb
and
out
jbe
pop
sar
int
and
hlt
ins
sub
loopne
mov
sbb
cmp
sbb
dec
lods
inc
dec
mov
sbb
clc
pop
cli
push
mov
ins
mov
xchg
mov
mov
push
jmp
loopne
cmps
and
sub
or
jo
dec
add
dec
in
add
xchg
mov
mov
sub
pop
mov
rol
dec
inc
adc
xor
sbb
and
cmp
test
pop
lahf
cmp
mov
in
fsubrp
fstp
xchg
shr
jl
jmp
ins
sub
cmps
sahf
mov
mov
das
sub
sub
retf
push
pushf
aas
mov
movs
dec
sbb
push
push
jmp
dec
inc
mov
pop
lods
ja
adc
sub
jg
jo
(bad)
movs
push
and
cmp
retf
jne
sbb
cwde
iret
les
mov
ins
jns
jmp
jl
sub
test
xor
aas
xchg
out
imul
add
jns
sub
inc
fbstp
jno
push
sbb
gs
mov
sbb
clc
int
xchg
lea
pop
cmp
xor
pop
out
push
rcl
pop
xchg
xor
sti
daa
inc
push
call
ficom
jg
jno
fmul
cmp
bound
cmp
in
cld
dec
arpl
sbb
out
jmp
lock
pop
call
psubd
mov
sub
out
fucompp
jmp
jl
mov
mov
retf
not
pop
repz
pusha
test
mov
or
icebp
rol
ds
in
movs
scas
in
int3
shl
stos
shr
hlt
dec
ins
xchg
jl
mov
adc
jl
not
in
std
pushf
call
(bad)
inc
xchg
sub
dec
add
pop
mov
ins
outs
jmp
dec
xchg
div
add
inc
cmps
jae
sar
or
fcmovnbe
mov
jae
ror
sbb
mov
punpckhbw
imul
mov
sbb
cmp
rcl
scas
add
push
arpl
ror
stos
inc
dec
ds
adc
fs
test
mov
(bad)
scas
jp
(bad)
dec
out
clc
loop
cli
stc
push
js
test
imul
or
repz
test
and
xchg
xchg
xchg
mov
imul
and
ins
cmp
leave
shl
mov
stos
fisttp
imul
(bad)
fstp
pusha
lods
inc
retf
jp
add
adc
in
push
rcl
js
mov
icebp
cmps
retf
sub
push
loope
inc
jmp
and
lahf
lods
xor
rcr
cmc
mov
daa
dec
inc
mov
loop
das
inc
aaa
jmp
shl
jl
push
es
mov
ret
mov
scas
ja
fbld
out
imul
mov
mov
dec
xchg
push
test
call
jle
repnz
mov
arpl
into
xor
ret
(bad)
sbb
test
push
arpl
les
(bad)
lock
fmulp
xor
mov
xor
jno
mov
mov
mov
and
xchg
adc
hlt
getsec
xchg
cmp
out
sub
push
or
fs
push
adc
dec
sbb
adc
cmp
(bad)
hlt
jp
cmps
adc
cld
rcr
mov
cld
fidiv
fiadd
xor
or
cmp
push
cmp
fimul
sub
fdivr
jecxz
mov
xchg
stos
jmp
xchg
ror
jae
fst
repz
xor
push
or
xchg
mov
retf
jl
fisttp
xor
inc
pop
pop
pop
push
and
mov
push
daa
fdiv
jbe
xchg
retf
jecxz
inc
lods
jnp
fist
cmp
mov
fwait
mov
sub
mov
add
pop
(bad)
in
in
int3
addr16
leave
loope
push
mov
push
leave
in
pop
push
fnstenv
jle
mov
(bad)
outs
sti
pop
ins
mov
sbb
mov
push
cmp
sbb
mov
dec
in
std
imul
xchg
fnsave
arpl
mov
gs
std
sub
retf
pushf
mov
cmp
sti
mov
div
outs
adc
js
jmp
mov
(bad)
pop
pop
rol
mov
sbb
sub
jno
add
push
push
mov
xor
movs
push
dec
fild
cwde
and
mov
ret
inc
push
jmp
push
mov
ins
xchg
rcr
retf
push
or
fisttp
xor
movs
mov
sbb
out
dec
rcr
lods
fs
push
pop
bound
adc
stos
scas
push
fld
outs
bound
mov
pop
and
fwait
pop
mov
cs
adc
and
lods
xor
sub
ja
mov
dec
cli
ss
fwait
pop
stos
mov
sbb
fsubr
outs
repz
addr16
aas
add
cmp
cmp
fild
inc
aas
cmps
xlat
sub
jb
movs
dec
rol
or
call
sub
fcmovne
jp
push
fwait
push
push
xchg
(bad)
js
push
js
cmps
mov
mul
adc
sahf
mov
test
xchg
xchg
std
and
rcr
sub
scas
inc
add
xchg
inc
lods
adc
loopne
dec
cmps
inc
jg
push
in
mov
or
mov
stos
pop
js
lods
je
push
aaa
fdivr
sub
inc
ror
sti
sar
fist
and
out
pop
or
test
in
inc
jbe
outs
cwde
mov
movs
leave
mov
daa
es
and
add
cli
jns
dec
mov
xchg
add
sub
push
inc
pop
call
cmp
loope
test
push
inc
inc
xor
mov
jbe
das
sbb
mov
jmp
push
pop
push
sub
aaa
mov
dec
inc
sub
jmp
adc
mov
and
(bad)
enter
xchg
and
and
mov
out
xchg
mov
das
pop
xchg
cmps
or
add
gs
add
add
idiv
fst
push
daa
mov
mov
enter
fsubr
xor
jmp
mov
std
mov
out
out
hlt
sub
mov
in
scas
fwait
inc
call
movs
lea
or
ds
in
jno
pop
xchg
dec
adc
add
jmp
sub
sub
mov
test
loopne
shl
sub
xor
push
mov
rcr
icebp
mov
jg
les
jmp
cmp
add
lahf
pop
mov
loop
iret
aas
push
mov
sbb
adc
xchg
add
mov
pop
arpl
xor
mov
xchg
ret
xchg
xlat
cmps
and
ror
cmp
scas
fcomip
cld
leave
test
pop
cmp
add
into
add
cmps
adc
sbb
aaa
jmp
dec
scas
sub
cmp
retf
push
gs
imul
and
push
push
loopne
adc
adc
inc
sub
ds
mov
sbb
xchg
dec
popw
push
rol
jne
xlat
call
mov
ins
movs
dec
xchg
pop
js
or
std
loope
(bad)
ss
mov
(bad)
call
add
cmc
mov
mov
jg
xor
push
int3
dec
push
or
mov
out
out
mov
pop
fwait
int
ss
ror
leave
pop
jo
xchg
sub
jae
and
cmp
jo
pusha
cli
dec
gs
shr
cli
mov
fisub
rol
push
stc
jo
dec
int3
sub
xchg
je
sbb
jnp
jge
arpl
outs
pop
hlt
stos
mov
neg
push
retf
js
or
lea
mov
test
xor
pop
icebp
loope
xlat
fdiv
movs
lea
fbstp
(bad)
mov
mov
push
push
adc
sub
aad
cmp
mov
or
inc
dec
(bad)
push
dec
sbb
pop
addr16
outs
jno
repz
adc
adc
cmps
(bad)
iret
fwait
in
loope
movs
mov
jle
out
jns
aas
fmul
cmc
out
fs
hlt
add
dec
adc
lods
mov
xor
and
add
ins
retf
je
add
repz
pusha
cmp
into
pop
enter
cli
dec
adc
in
(bad)
ja
lods
xor
jmp
mov
cmp
mov
push
push
mov
jb
aas
call
call
adc
push
push
mov
xchg
out
add
mov
(bad)
clc
or
add
loop
push
std
mov
pop
imul
ret
mov
scas
push
xchg
mov
add
sbb
std
pop
fdivr
adc
mov
push
cmp
and
loope
and
retf
pop
adc
movs
jmp
retf
or
mul
shl
inc
add
imul
out
cwde
mov
std
arpl
adc
cmps
push
xor
pop
lods
xchg
mov
cmp
inc
xchg
sub
cs
pop
dec
jnp
add
jp
test
fsub
scas
js
les
add
adc
int
mov
aas
(bad)
cs
push
sysenter
call
int
gs
nop
add
pop
push
sub
xchg
js
lock
faddp
mov
ins
std
lea
lea
call
ror
shr
mov
cmc
shr
inc
stc
cmp
in
sub
sbb
cmp
imul
jno
push
test
jo
(bad)
repnz
dec
lods
aaa
jno
pop
ins
mov
stos
add
clc
dec
cmp
movs
ja
adc
xchg
int
xchg
sub
sbb
ds
ins
ror
lock
and
movs
inc
fisub
adc
adc
daa
inc
dec
cmp
push
or
push
fidiv
outs
ret
outs
mov
dec
mov
sub
ins
mov
push
xchg
xchg
mov
push
push
lock
sub
xor
ja
(bad)
pushf
mov
and
and
popa
call
sahf
jbe
sbb
stc
mov
dec
fwait
ins
jo
scas
pop
add
(bad)
popf
shr
inc
fist
es
pop
ja
and
nop
jno
jb
hlt
aaa
(bad)
push
cmp
pop
call
lahf
mov
mov
pop
push
gs
mov
pop
pushf
out
jmp
aaa
sti
mov
mov
iret
adc
mov
sub
adc
sub
jmp
mov
pop
adc
rol
std
fdiv
outs
repz
int
dec
jbe
adc
jg
cmp
adc
ja
rcr
hlt
imul
test
std
push
andnps
cld
aaa
test
cmp
mov
and
movs
scas
fild
and
add
rcr
rol
jno
fiadd
xor
mov
pushf
add
push
lahf
jb
jle
mov
jecxz
loopne
js
dec
(bad)
pop
test
mov
cli
in
stos
das
stos
inc
in
sub
ret
jae
movs
mov
push
fs
inc
sbb
test
xchg
xor
and
retf
and
mov
jmp
call
push
leave
push
pop
pop
mov
cli
jno
mov
push
inc
push
leave
mov
sub
pop
les
loopne
xor
jno
pusha
and
mov
mov
sub
jno
xchg
lods
dec
sti
stos
or
jmp
add
and
mov
inc
xadd
out
iret
pusha
int
ins
icebp
mov
js
mov
xchg
pop
sub
popa
daa
movs
push
movs
test
xor
out
scas
xchg
xor
cli
dec
jae
jns
cmc
iret
aad
adc
sbb
fcmove
push
into
int
shl
lods
ret
call
or
leave
jb
pop
ss
jb
cmps
push
add
xor
push
dec
add
test
sahf
fstp
pop
push
adc
or
inc
or
mov
popa
mov
mov
out
sub
(bad)
mov
dec
call
mov
popa
pop
pop
push
dec
mov
gs
cld
lea
push
addr16
daa
clc
arpl
sub
pop
jo
mov
fcmovne
test
dec
adc
scas
inc
or
inc
cmps
(bad)
add
adc
mov
imul
(bad)
(bad)
stc
mov
mov
mov
pop
add
stc
shl
dec
out
dec
fbstp
ss
xchg
adc
dec
pop
or
or
cmc
lods
mov
pop
je
lds
loopne
xor
sti
pop
loope
loope
fiadd
sub
cdq
fadd
aas
shl
jmp
mov
leave
mov
dec
push
push
(bad)
mov
xor
scas
imul
sahf
push
mov
aad
outs
cmc
mov
dec
adc
mov
shl
add
jmp
mov
push
stos
jge
in
inc
mov
(bad)
dec
cmc
das
stos
mov
xlat
jl
leave
pusha
push
xchg
sbb
jae
icebp
jmp
cwde
in
xchg
xor
sbb
dec
mov
dec
adc
mov
push
stos
jo
cld
adc
add
cmp
inc
xchg
and
test
std
pop
mov
fs
sbb
and
cli
mov
cmp
stos
aaa
pop
add
push
es
jge
cmp
cmps
aad
leave
scas
xor
mov
(bad)
fld
int
out
or
sbb
in
cdq
jno
call
shl
sbb
jb
jno
pop
fdiv
mov
clc
mov
inc
jns
inc
jae
out
jp
cmp
nop
push
sub
sub
imul
fwait
mov
pop
in
mov
push
pushf
out
jmp
xor
scas
add
cmp
push
sahf
cmp
mov
leave
nop
adc
in
scas
pop
stos
sub
call
and
or
out
push
mov
fwait
sbb
into
xchg
mov
dec
mov
jno
ja
dec
into
xchg
push
and
nop
dec
lods
mov
xor
shl
cmp
clc
and
(bad)
adc
fcomp
fdiv
pop
cmp
repz
in
ins
add
data16
cmp
inc
iret
add
mov
mov
call
in
hlt
fnstcw
fisubr
pop
fs
inc
lock
scas
or
mov
xor
jns
mov
push
add
dec
xor
push
popf
pop
push
cmps
mov
xchg
mov
mov
or
mov
hlt
mov
xchg
cmp
and
js
mov
pop
arpl
fs
test
jae
add
stos
xchg
jle
pop
out
push
test
and
stos
xor
outs
mov
fist
jmp
pop
outs
and
dec
lods
retf
out
fnstcw
jbe
adc
jne
add
pop
and
xor
dec
sub
retf
cmp
outs
and
lock
mov
jns
aas
mov
cmps
test
inc
push
cdq
es
pusha
sub
ret
ds
ret
xchg
adc
add
add
push
test
je
lods
inc
scas
cmp
xchg
add
mov
add
(bad)
mov
cmp
inc
dec
push
test
mov
inc
adc
fcmovnu
push
out
mov
jl
mov
mov
adc
sub
ins
fldcw
mov
loope
xchg
adc
sbb
or
jle
mov
xor
pop
pop
jmp
push
(bad)
adc
shl
or
push
xchg
and
test
call
mov
mov
xor
call
sub
lods
fdivr
mov
push
jno
mov
jns
cmp
mov
jl
retf
push
retf
lahf
sar
cld
cmp
push
or
mov
dec
dec
repz
in
sbb
in
cmp
or
les
or
xor
mov
mul
in
shl
das
fstp
shl
mov
clc
jle
aaa
(bad)
loopne
call
jb
ret
sar
push
xchg
jp
sar
mov
repnz
cmp
mov
push
(bad)
call
aam
xchg
jns
scas
mov
xchg
adc
xor
lods
(bad)
xchg
xor
mov
lods
mov
inc
jmp
dec
cmp
sbb
xchg
add
ret
adc
sbb
jmp
inc
lea
jecxz
fstp
idiv
mov
scas
popa
ss
inc
push
pop
pusha
adc
add
stc
sub
mov
movs
dec
jae
and
xor
call
cmp
movs
stc
and
fwait
scas
loope
shl
xchg
cmp
add
loop
lea
mov
out
frstor
outs
ror
mov
mov
add
ss
pop
(bad)
jne
daa
not
ja
(bad)
mov
ror
aaa
lods
gs
lods
into
mov
add
popa
popa
xlat
sbb
dec
retf
arpl
cmp
and
mov
aas
mov
or
mov
gs
test
ja
adc
addr16
icebp
add
call
ins
mov
mov
mov
xlat
cmp
rol
or
pop
cmp
rcr
jbe
popa
inc
xchg
adc
fs
inc
mov
dec
dec
ret
jnp
sub
mov
push
mov
sub
sbb
inc
xchg
sub
xor
addr16
aad
fdiv
loop
movs
and
jb
test
out
mov
mov
push
shl
mov
push
out
ret
enter
jmp
pop
cs
push
pop
mov
gs
xchg
xlat
test
(bad)
test
or
iret
and
test
scas
push
add
(bad)
pusha
jne
push
jb
stos
daa
fcmovne
adc
jne
mov
inc
mov
sbb
xchg
cmps
loopne
repz
ret
add
sbb
add
or
xor
les
jmp
enter
retf
lods
cmp
pusha
out
bndldx
inc
cmp
aas
adc
mov
sub
pop
dec
mov
push
cld
call
fnstsw
pop
fcom
(bad)
jbe
dec
outs
std
adc
sub
jno
scas
sbb
fisubr
out
mov
stos
push
xor
lds
ja
cmp
inc
jo
fld
adc
es
cld
sub
inc
dec
mov
mov
or
xor
aas
xor
fs
leave
clc
movs
pop
push
mov
adc
test
shr
xchg
xor
mov
xchg
jo
mov
mov
mov
(bad)
(bad)
scas
or
int
shr
iret
add
mov
mov
aad
adc
icebp
mov
mov
cmps
shr
cmc
(bad)
jmp
mov
xor
add
es
sbb
nop
pop
stos
fs
test
ja
mov
sbb
lock
std
addr16
xor
dec
adc
(bad)
dec
scas
push
or
mov
lods
sbb
daa
mov
std
xor
pop
sub
lods
sub
bound
dec
xor
sub
dec
inc
fisttp
adc
jns
call
jbe
push
push
cmp
cmp
adc
add
sbb
inc
sbb
dec
cld
rcl
push
pop
cmps
pop
jmp
es
cmp
add
sub
cmp
loope
mov
mov
cmp
xchg
jge
sbb
mov
sub
scas
and
fild
jno
jbe
out
and
pop
and
dec
ins
sbb
jmp
mov
cmc
mov
rcl
std
cwde
sbb
xchg
mov
mov
xchg
in
mov
jnp
daa
sub
and
retf
dec
pusha
fsubr
cmp
and
inc
push
jae
addr16
aas
dec
xor
cli
xchg
(bad)
cmps
popa
push
in
dec
sbb
in
push
call
mov
mul
sbb
fwait
imul
scas
pop
les
mov
xchg
cmp
xchg
shl
and
pusha
pushf
mov
hlt
popf
add
sub
stc
lods
mov
sub
call
or
test
movs
push
xor
mov
jecxz
cmp
mul
(bad)
xchg
add
fwait
movs
hlt
pop
adc
(bad)
dec
fild
mov
pop
inc
pushf
sbb
(bad)
scas
test
es
data16
dec
loope
loopne
mov
ret
sub
fadd
inc
popa
arpl
xor
fcomp
xor
xchg
sub
or
adc
jae
xor
outs
jmp
add
imul
test
add
add
push
dec
(bad)
out
loopne
jg
cmc
mov
lds
stos
ret
cmps
cld
or
pop
ffree
pop
icebp
adc
add
sub
jae
cmp
jno
inc
pusha
jb
mov
sbb
in
and
stc
inc
jno
push
pop
out
dec
shr
(bad)
mov
ins
sub
cmc
imul
outs
cmc
fld
out
push
adc
or
xchg
push
and
loop
cmp
inc
jno
test
add
fstp
sbb
clc
sbb
cmp
mov
movs
fidiv
iret
push
mov
mov
xor
pusha
push
push
sbb
or
sti
aad
and
pop
mov
stos
xor
cwde
mov
out
add
sbb
xor
xor
int3
fistp
in
xchg
fucomip
ja
call
dec
je
repz
pop
pop
fidivr
ret
jns
out
dec
sahf
push
daa
inc
mov
mov
pop
fmulp
out
ret
jb
imul
test
mov
test
rcr
sub
jne
sub
cwde
arpl
push
movs
ret
cmp
outs
push
(bad)
mov
aad
xchg
lods
std
icebp
adc
cmp
arpl
lods
xor
push
pop
sti
(bad)
and
xchg
js
pop
dec
xor
dec
mov
mov
and
das
int3
cmp
mov
push
clc
cmp
inc
xor
retf
xor
pop
cmp
retf
iret
push
jmp
stos
fist
cmp
lods
jg
jg
pop
xchg
xchg
mov
mov
xchg
add
xchg
test
jne
imul
shl
int3
jl
lock
mov
gs
mul
daa
jae
jae
jmp
mov
add
iret
fwait
inc
add
in
jg
inc
movs
rcl
jmp
mov
pusha
inc
pop
push
dec
sbb
mov
mov
xor
xchg
arpl
mov
mov
cmps
sbb
loopne
sar
adc
sahf
add
(bad)
adc
rcl
push
push
out
cmp
ror
pushf
(bad)
sar
jle
push
mov
inc
pusha
loope
mov
cmp
dec
leave
out
out
inc
mov
xchg
cmps
adc
mov
push
adc
ja
out
rol
cmp
fwait
call
(bad)
repnz
mov
dec
inc
jg
sbb
dec
mov
push
xchg
xchg
retf
leave
push
sub
xor
jae
sahf
cmp
xchg
mov
inc
inc
loope
mov
data16
push
xor
scas
adc
pop
add
sub
int
dec
pop
movs
bnd
jg
sti
jnp
dec
ret
test
movs
xchg
mov
repz
imul
jno
cmps
jns
sub
xchg
jecxz
nop
mov
movs
adc
cmc
pop
or
aad
pop
test
cmps
mov
xor
cmp
cmp
dec
sub
add
mov
cwde
add
jne
jns
cmps
mov
call
fwait
call
(bad)
in
hlt
add
test
fwait
or
ds
sub
jmp
pop
cmp
out
xchg
pop
xchg
adc
out
cmc
xchg
jg
arpl
fs
push
and
xor
mov
push
popf
push
es
sbb
or
dec
dec
lahf
inc
ficom
ret
xchg
lods
fdiv
inc
shl
xor
pop
or
add
(bad)
cmp
mov
adc
cmp
mov
adc
repz
test
ret
nop
fsubr
cs
call
nop
scas
scas
out
je
popf
(bad)
cmps
(bad)
lock
out
scas
pop
test
jp
jns
inc
push
cmc
mov
push
sahf
mov
jnp
mov
(bad)
sahf
add
cmp
push
dec
mov
inc
mov
add
and
in
xchg
sub
sahf
in
mov
aas
mov
imul
sub
test
shl
rep
shl
inc
or
xor
xor
imul
pop
popf
mov
pop
pop
test
repz
inc
jae
xchg
arpl
popf
aaa
cmp
mov
test
cld
arpl
nop
fmul
std
repnz
cmps
(bad)
outs
adc
xor
xor
fiadd
xchg
xor
jmp
data16
ins
inc
pop
test
push
xchg
and
or
test
rol
xchg
xor
cmp
test
cmp
adc
push
sahf
pop
or
cmps
sub
lods
lea
imul
or
ror
cs
fnstcw
and
dec
jle
pop
xor
and
lods
jbe
rol
in
sub
mov
push
mov
xchg
xchg
fistp
sub
repz
xchg
cmc
dec
call
push
push
jecxz
push
sbb
add
mov
repz
push
mov
repz
call
stos
push
stos
mov
or
adc
movs
xor
mov
enter
inc
jmp
fild
arpl
(bad)
xor
cmp
mov
jg
cdq
cmp
xchg
das
mov
rcr
dec
sub
call
or
hlt
xchg
pop
xor
sbb
sub
ret
outs
jno
inc
xchg
out
fmul
cmp
sub
dec
je
nop
lds
and
mov
mov
icebp
adc
rsqrtps
push
test
inc
fist
push
not
push
xchg
js
hlt
in
fcomp
cmp
lods
add
jecxz
movs
jp
sbb
pop
jl
pop
jp
js
or
aas
fbld
in
ret
sub
rcl
ret
add
imul
adc
rcr
dec
out
xor
xchg
shl
or
sbb
pop
xor
das
sub
test
jne
mov
outs
add
jmp
jg
sbb
pusha
arpl
idiv
fwait
sub
pop
fwait
scas
stos
pop
cmp
(bad)
popf
push
std
(bad)
jnp
int
adc
fisttp
mov
mov
dec
cmp
dec
xchg
dec
mov
mov
inc
lods
std
enter
inc
(bad)
test
nop
clc
aas
mov
add
push
jl
mov
rcl
cmps
and
cmps
enter
pop
sar
jmp
or
inc
bound
imul
fwait
imul
xor
push
mov
fmul
inc
or
dec
out
popa
gs
push
shl
cmp
hlt
fincstp
mov
imul
out
add
mov
into
hlt
add
add
nop
cmp
je
push
scas
or
fldcw
neg
ror
(bad)
shl
and
enter
ss
nop
fwait
dec
add
fdiv
inc
scas
and
xor
jle
push
outs
fdiv
scas
jl
cmc
fsub
lahf
mov
in
jno
or
sbb
and
or
xor
mov
push
xor
shl
leave
imul
inc
xor
xor
jo
scas
es
mov
push
cmp
(bad)
pop
ds
pop
mov
fidivr
xchg
mov
adc
js
clc
sbb
in
retf
dec
sub
in
cmc
sbb
push
xchg
hlt
repnz
aad
icebp
and
or
mov
sub
jbe
mov
in
jmp
stc
xor
jae
or
xor
pop
xchg
sub
push
ret
add
xor
loopne
ret
sbb
aad
push
mov
or
and
dec
jmp
fst
into
dec
add
ror
shr
inc
outs
iret
movs
adc
add
pusha
push
mov
mov
jae
dec
or
lods
cwde
iret
pop
fwait
mov
push
jns
mov
cmps
push
(bad)
loope
cwde
outs
mov
test
cmps
mov
cmps
test
jo
aaa
cmp
adc
or
mov
movs
inc
dec
xchg
mov
mov
imul
xchg
lods
ja
adc
test
add
add
test
movs
jl
in
ins
sbb
das
jmp
loop
pop
not
loope
sbb
repz
xor
loop
push
test
push
and
pushf
inc
scas
and
int3
pusha
xchg
lods
fwait
xchg
mov
pop
and
inc
xor
sbb
lock
into
cmp
push
or
jle
addr16
out
pop
push
mov
jne
das
loope
nop
inc
hlt
out
mov
mov
xlat
imul
mov
mov
adc
jns
mov
mov
jae
cmp
push
mov
lock
inc
fisttp
cld
lods
(bad)
lds
xchg
(bad)
enter
sbb
adc
mov
add
push
dec
movups
(bad)
or
or
dec
pusha
rcl
sbb
dec
jmp
sub
pusha
mov
pop
pop
cmp
xchg
dec
out
xor
mov
jnp
in
iret
fdivr
rol
jb
jns
cmp
xchg
aam
push
out
push
adc
outs
setp
fst
pusha
cmp
mov
not
inc
dec
push
push
and
cld
cwde
leave
es
xor
xor
fdivr
inc
mov
xor
neg
add
rol
jns
movs
adc
inc
or
dec
fwait
nop
pop
add
push
xor
adc
outs
outs
in
out
pushf
hlt
pop
jmp
push
sbb
lock
jle
adc
xor
sbb
pop
lea
cmp
sbb
fld
push
pop
lds
sub
dec
xchg
xor
mov
cmp
sbb
jae
and
inc
xchg
jne
fsub
push
cwde
enter
add
dec
lods
ud1
mov
ss
retf
lds
pop
jg
push
mov
pop
push
repz
dec
jge
inc
cmp
mov
ret
out
or
xor
mov
push
ret
in
and
imul
dec
cdq
shl
fst
lods
mov
inc
out
jmp
repz
pop
stos
pop
retf
lods
and
call
loope
adc
cmp
inc
mov
mov
cdq
adc
jmp
cmc
bound
fdivr
xchg
xchg
or
cmp
pushf
mov
js
cs
ja
arpl
jmp
push
fadd
cmps
or
inc
mov
into
aaa
cmps
push
ret
pop
aas
fsub
xor
neg
stos
pop
aas
popa
ss
je
stc
scas
into
scas
addr16
nop
or
mov
cld
sbb
pop
inc
sar
cmp
mov
fsub
sbb
rcl
sbb
pop
adc
je
jbe
es
fucomp
mov
jmp
in
js
sbb
inc
inc
lds
or
mov
shl
push
cmp
push
inc
cmc
dec
sbb
lods
push
jge
cmp
adc
stos
hlt
nop
cmps
dec
out
sbb
dec
xchg
mov
pushf
fsub
fisub
ror
and
push
inc
xor
sahf
xchg
or
sbb
(bad)
repz
xor
test
mov
mov
(bad)
loopne
xchg
sub
daa
jecxz
push
cld
mov
mov
enter
fwait
xchg
mov
test
mov
or
add
in
push
mov
xor
sub
mov
add
mov
fcmovbe
or
adc
jo
inc
retf
xchg
add
hlt
xor
add
(bad)
xchg
shl
fld
clc
push
xchg
loope
sbb
repz
jmp
stc
out
push
fwait
out
sub
xor
out
jl
jmp
fsub
dec
xlat
jl
stos
pcmpgtb
lods
or
test
mul
xor
add
cmp
or
mov
iret
shr
hlt
push
mov
or
int3
push
add
or
hlt
jg
cmp
ds
ret
loop
retf
add
ja
shl
cmps
and
push
int3
jmp
jp
lods
mov
sub
popf
xor
xor
push
out
shl
test
gs
jle
push
pop
es
in
pop
outs
int3
and
or
sbb
test
inc
sbb
dec
cmc
inc
pop
pop
fst
sub
dec
dec
mov
loopne
xor
mov
push
and
xor
mov
and
push
add
stos
mov
sub
inc
ss
aad
cmp
ins
pushf
push
ffree
(bad)
icebp
or
push
push
jns
repz
pop
std
mov
(bad)
mov
sub
sbb
scas
sti
std
aas
cwde
pop
adc
rcr
cmp
jp
std
add
int3
icebp
cs
push
mov
cmps
jno
jne
dec
push
sbb
mov
mov
adc
(bad)
(bad)
es
inc
in
mov
hlt
sar
and
pop
mov
ja
add
test
inc
iret
jecxz
scas
push
pop
rcr
out
xchg
sbb
mov
aam
jae
inc
inc
xor
xchg
adc
xchg
popf
mov
ja
jb
cmp
(bad)
je
push
aaa
fiadd
ret
and
bound
adc
mov
out
and
pop
sbb
inc
test
enter
addr16
mov
cmp
adc
mov
mov
xlat
test
repz
mov
adc
stos
xchg
pop
jbe
mov
fisttp
inc
pop
and
and
dec
jnp
inc
fwait
push
adc
inc
stos
sub
push
(bad)
neg
(bad)
(bad)
neg
adc
pop
xchg
add
fwait
dec
aam
inc
pushf
sar
ret
retf
mov
mov
loopne
loope
push
test
cmp
mov
int
dec
jmp
mov
mov
jmp
cwde
inc
sub
add
std
cli
ins
xchg
imul
jmp
and
je
pop
push
sbb
mov
push
inc
iret
arpl
ss
mov
mov
and
fimul
mov
xor
adc
fnstsw
test
pop
(bad)
ins
jbe
enter
sbb
(bad)
pop
cld
not
jl
sbb
xor
cmp
push
lods
mov
ret
movs
and
iret
inc
stc
xor
adc
mov
test
addr16
cdq
aam
test
mov
icebp
mov
jb
xor
add
into
fs
stc
push
sub
mov
out
xchg
inc
add
push
inc
jecxz
das
test
pop
xchg
mov
xchg
fistp
rcl
and
and
adc
xchg
popf
add
stos
aam
push
(bad)
(bad)
add
outs
inc
pop
imul
jne
and
aad
cmps
addr16
cmp
loopne
lods
cmp
scas
stos
add
int3
js
xor
shl
ret
daa
(bad)
cmps
movs
fimul
add
pop
fcmovnb
icebp
aad
pushf
scas
clc
sub
aaa
loop
div
xchg
rol
mov
stos
pop
jb
loopne
js
jno
adc
adc
push
popa
dec
inc
mov
cld
shl
jns
jnp
mov
fsub
adc
nop
xchg
xor
sub
jo
cmp
pop
or
mov
mov
pop
xor
js
shl
jg
push
(bad)
inc
ins
mov
mov
mov
in
shr
arpl
cmp
pop
jle
iret
fcmovbe
pop
dec
scas
leave
hlt
or
daa
mov
fucomp
rcr
stos
scas
jecxz
sbb
mov
les
jmp
ins
cmc
pop
dec
add
or
mov
sbb
lods
pushf
jb
mov
out
test
sahf
pop
jb
ret
sub
push
jp
inc
mov
sub
push
pop
icebp
repz
inc
inc
ins
movs
jge
cmp
mov
push
out
test
loop
hlt
outs
pop
jecxz
mov
adc
cmp
ret
retf
stc
lods
test
rcr
in
mov
sti
dec
cmp
fadd
cmp
rcl
pop
or
retf
add
in
dec
push
dec
xlat
mov
mov
add
ror
mov
and
stc
fild
loopne
int
test
xchg
arpl
cmp
pop
add
lahf
(bad)
outs
add
push
adc
push
sub
xor
add
pop
mov
push
pop
out
test
lds
jmp
mov
test
scas
cmp
fidiv
xor
xchg
pop
jle
jecxz
sbb
in
push
test
test
cmp
jae
xchg
test
or
lods
daa
cmps
adc
adc
add
sub
mov
clc
pop
or
(bad)
test
cmp
shl
xor
add
setb
cs
pusha
cmp
xlat
mov
mov
rcl
mov
inc
ss
into
adc
retf
adc
add
mov
jns
jbe
mov
xchg
retf
xor
push
sbb
inc
push
rcr
or
repnz
arpl
retf
push
imul
fsub
add
movs
xchg
jo
jp
xchg
mov
push
xor
fcom
lods
adc
push
neg
loop
aaa
loopne
clc
xor
pop
sub
repz
xchg
push
sub
pop
adc
and
jmp
and
idiv
iret
ror
mov
inc
cmp
add
push
jmp
cmp
and
rcr
lock
mov
(bad)
cmp
add
jns
retf
pop
add
popa
mov
jle
jo
stos
test
add
sbb
fisttp
xchg
or
jno
call
pop
dec
add
out
push
adc
push
popf
jns
xchg
repz
inc
push
cmp
inc
cmp
fistp
scas
fld
inc
test
cmp
mov
mov
push
retf
adc
sbb
ins
(bad)
jb
fnsave
div
xchg
call
and
js
or
xchg
sbb
push
inc
mov
or
sub
and
fidivr
dec
bound
cmps
push
scas
test
push
dec
xchg
xor
cmp
adc
dec
aam
sti
mov
jecxz
icebp
cmps
fucomip
push
(bad)
imul
int
inc
dec
jae
adc
push
ret
mov
or
adc
add
sub
cdq
lahf
mov
cmp
adc
in
xor
loopne
push
scas
aaa
enter
mov
inc
aas
std
movs
stos
das
(bad)
call
mov
mov
fldenv
pop
adc
sti
sub
imul
out
push
pop
das
pushf
mov
cmp
mov
mov
ror
ficom
test
or
imul
ins
push
inc
fbld
push
jbe
retf
xchg
pop
xor
addr16
call
ins
mov
sub
xchg
jp
or
ds
lods
mov
pop
enter
popa
or
inc
test
and
sar
jae
mov
mov
sub
in
lods
(bad)
cwde
(bad)
cmp
jecxz
out
adc
pop
(bad)
mov
jg
dec
hlt
jno
cmps
adc
sub
lds
pop
jge
popa
dec
mov
push
sub
nop
ds
jg
mov
out
adc
xchg
inc
jle
lahf
adc
imul
fcomp
popa
adc
and
psllw
inc
dec
mov
repz
mov
sub
inc
push
in
xchg
inc
adc
movs
mov
or
pop
popa
jle
add
test
jno
jmp
xchg
sbb
or
ss
push
push
and
sahf
pop
cwde
retf
adc
fs
sub
sub
inc
push
daa
fwait
mov
xor
xchg
or
push
jns
mov
outs
ficomp
clc
in
mov
int3
rcr
push
(bad)
lds
test
push
jecxz
cmp
in
xchg
mov
cli
rcl
sbb
or
out
mov
lods
jns
xchg
aas
fsub
test
pushf
mov
inc
sar
adc
leave
in
rol
push
pandn
or
ins
sub
dec
lods
into
and
mov
inc
fisttp
dec
jge
adc
sub
repnz
div
inc
pusha
sub
(bad)
sti
dec
jl
push
mov
inc
out
jae
(bad)
fsubr
mov
xchg
stos
xor
cdq
shl
pop
call
and
pusha
dec
jo
cmp
pop
cmp
std
popf
jne
adc
cmp
pop
pop
dec
cmp
inc
in
mov
adc
addr16
xchg
push
push
xchg
pop
and
(bad)
cmp
mov
xor
pop
cdq
push
movs
sub
adc
frstor
ins
adc
jmp
out
add
sbb
push
loopne
xchg
psubsb
sbb
ins
movs
jge
stos
hlt
sbb
(bad)
popa
mov
lahf
adc
gs
xlat
sbb
mov
mov
push
xchg
(bad)
jmp
mov
mov
fimul
push
lea
inc
xchg
dec
and
sub
cmps
(bad)
xchg
pop
test
int
pop
add
pop
or
cmp
pushf
imul
in
les
mov
ja
sbb
dec
xor
outs
(bad)
fimul
icebp
cmps
ror
xchg
stc
out
nop
outs
out
shr
mov
inc
lods
mov
popf
in
div
push
repz
leave
add
mov
fwait
pusha
leave
xlat
bound
les
pop
gs
mov
pusha
push
jno
and
out
aam
push
add
retf
popf
out
jno
add
jne
push
or
push
repnz
mov
jecxz
and
gs
outs
outs
(bad)
cmp
xor
repnz
pushf
mov
and
mov
and
mov
das
mov
push
mov
je
(bad)
es
mov
inc
inc
gs
adc
outs
mov
mov
cmp
xchg
cli
xchg
sbb
test
hlt
pop
adc
and
and
dec
out
cmp
dec
add
outs
and
xchg
mov
cmps
aas
sbb
fisttp
in
imul
mov
ret
inc
adc
icebp
ja
mov
lods
inc
sub
(bad)
sub
xchg
cmp
fcom
sti
daa
or
sbb
cmp
cmps
or
sbb
mov
lds
xchg
fwait
jp
ret
inc
inc
aad
xchg
mov
xor
jbe
and
or
fs
into
jbe
pushf
and
add
or
mov
xchg
sbb
arpl
int
imul
or
jno
mov
call
or
in
outs
xchg
xchg
ss
or
mov
xchg
mov
jno
jle
push
or
bound
loopne
and
imul
mov
je
sti
mov
jmp
xchg
stc
in
cmc
and
js
add
push
dec
and
jecxz
shr
rcr
push
mov
dec
scas
pop
xchg
xchg
mov
push
sahf
mov
inc
stos
push
push
xchg
fwait
movs
addr16
shl
inc
pop
xchg
imul
in
jmp
or
push
xlat
mov
outs
in
and
ret
(bad)
in
lea
aaa
cmp
inc
cwde
sti
fldenv
pop
in
pop
dec
push
or
test
movs
dec
cmps
cmps
jnp
ins
or
mov
retf
into
or
xor
mov
in
jae
xchg
pop
std
scas
int
mov
lahf
and
leave
mov
push
mov
adc
retf
mov
les
inc
and
ins
pop
sahf
or
jp
(bad)
outs
sub
and
scas
mul
jb
jmp
(bad)
mov
add
nop
shl
or
es
push
out
sub
sub
push
pop
scas
mov
fs
popa
ins
mov
cwde
in
adc
outs
fdiv
je
and
cmp
loopne
aam
pop
xchg
retf
pop
sub
aas
mov
neg
ins
bound
adc
xor
jecxz
mov
mov
hlt
mov
jo
data16
cmp
fild
xchg
cdq
push
jge
mov
aaa
sub
pop
leave
loope
inc
mov
rol
dec
fld
cmc
jle
das
lods
mov
xchg
pop
or
cli
pop
inc
sbb
jge
int3
mov
mov
out
mov
mov
cmps
je
mov
lea
jno
sbb
(bad)
dec
push
loop
xchg
retf
daa
sbb
repnz
pop
pop
cmps
cmps
push
ficom
outs
jmp
push
cmps
sbb
not
or
push
in
add
jle
push
mov
cld
xchg
iret
push
outs
lock
adc
mov
iret
aaa
stos
mov
out
xchg
push
adc
dec
and
nop
sub
xor
or
pop
scas
(bad)
int3
jne
mov
cmc
mov
jne
mov
push
mov
lods
rcr
mov
jmp
jns
xchg
movs
gs
fstp
adc
cmps
(bad)
jbe
sub
retf
xchg
dec
aam
mov
dec
push
clc
pop
xchg
sub
jmp
inc
ds
ret
ficomp
aad
xor
jmp
js
pop
xlat
shr
cmp
(bad)
fnstenv
icebp
sbb
stos
push
ficomp
add
in
dec
push
outs
or
push
cwde
jmp
mov
push
repnz
inc
inc
sbb
repz
jae
inc
inc
lods
inc
push
(bad)
sahf
and
dec
xchg
ds
push
push
jae
pop
retf
ret
imul
stc
mov
xchg
int
call
(bad)
mov
inc
daa
loope
movs
ss
and
fnstenv
adc
mov
adc
xchg
mul
cwde
cmps
add
fbld
sbb
inc
cmp
jne
mov
in
adc
add
sbb
and
mov
outs
xchg
mov
xchg
push
into
xchg
shl
repz
cmps
ins
int3
jmp
lods
sub
push
mov
and
cmc
sbb
mov
addr16
inc
add
test
arpl
repnz
and
test
xor
loope
out
dec
(bad)
mov
xor
and
mov
push
mov
jmp
add
add
mov
inc
cmp
out
int3
inc
push
pop
cli
and
add
ins
push
mov
mov
jb
and
sub
arpl
les
sbb
cmp
(bad)
ror
pop
adc
popf
stc
aad
cld
jmp
add
cmp
in
sbb
mov
test
dec
mov
(bad)
retf
(bad)
stos
in
jne
or
cmp
xchg
out
xchg
sbb
call
xchg
cli
sub
fld
mov
push
mov
xchg
test
jecxz
mov
or
xor
dec
ins
cmps
cmp
xor
pop
cmp
inc
pop
sbb
push
jmp
jecxz
std
xlat
jnp
lods
adc
mov
mov
push
xchg
mov
push
fidiv
fisttp
and
in
jne
xchg
xor
fdiv
jno
call
mov
mov
aam
mov
jecxz
fistp
sbb
or
jge
ja
jl
ror
mov
dec
mov
mov
sub
call
daa
xchg
jl
sbb
aaa
aam
adc
fld
cmp
fimul
push
mov
pop
(bad)
fbstp
es
mov
sbb
sti
inc
sbb
jo
cs
out
fimul
stc
mov
call
fistp
js
icebp
loopne
clc
push
jnp
cwde
mov
sbb
jae
cli
jecxz
imul
or
mov
in
aas
xor
addr16
cmp
xchg
xor
pop
fwait
nop
(bad)
sub
aaa
outs
or
push
retf
cmp
jb
xchg
iret
cld
cmp
cmp
int3
inc
xor
mov
add
add
ror
cmp
adc
imul
sbb
icebp
cdq
dec
test
add
test
cmp
loope
add
pop
movs
out
sahf
mov
xchg
pop
stos
jno
addr16
outs
adc
pop
xor
cld
jae
fstp
jnp
xor
jl
sahf
and
popf
movs
popf
mov
int
add
retf
sub
rcr
(bad)
ror
into
jb
rol
movs
mov
rcr
addr16
jmp
adc
inc
pop
mov
imul
mov
rcr
je
iret
or
call
xor
retf
and
push
cmp
mov
push
or
sbb
iret
cmp
sti
in
test
cld
sub
stc
pop
ffreep
and
lock
pushf
enter
jmp
xlat
xchg
sub
push
fiadd
adc
scas
push
sbb
cs
xor
xchg
jle
aas
and
adc
dec
xchg
dec
jno
xchg
jmp
adc
sub
sbb
mov
xor
ins
pop
imul
mov
cmp
ds
rol
xchg
out
ret
dec
mov
jne
aas
or
and
sbb
dec
test
mov
das
push
mov
fnstenv
cmp
mov
sub
dec
aad
xor
inc
dec
mov
stos
mov
cmp
sbb
pop
gs
mov
push
shl
jnp
js
cld
or
ins
cmp
mov
aad
popf
aad
mov
and
test
jb
mov
jle
inc
or
bound
mov
cs
popa
cmps
push
loope
pop
popf
pop
sub
jle
hlt
movs
jb
inc
xlat
call
aam
push
aaa
inc
mov
push
mov
and
adc
sbb
stc
movs
lock
pop
fild
mov
cli
outs
fadd
out
stc
jb
fmul
cmc
pop
ret
js
pusha
cmp
dec
dec
mov
pop
or
pop
stc
(bad)
enter
sub
leave
inc
test
mov
jg
pop
movs
xor
xchg
js
(bad)
mov
int
dec
(bad)
adc
and
nop
xchg
hlt
cmp
pop
inc
xchg
xor
aas
pop
outs
adc
cmp
outs
lods
sbb
call
xchg
and
fxch
ret
add
popf
or
xchg
push
jmp
sub
mov
pop
push
stos
fwait
and
mov
stos
lods
xor
je
ins
enter
xor
push
cli
sub
in
test
scas
dec
cmp
mov
dec
sbb
and
push
scas
dec
fidivr
hlt
jp
sahf
cmp
jl
dec
pop
fwait
in
dec
jb
pop
dec
jle
fistp
shl
and
pop
cmps
aad
push
dec
inc
bound
arpl
bound
das
push
jg
lock
out
repnz
addr16
scas
sub
pop
leave
inc
out
jns
pop
push
mov
repnz
mov
lock
into
loope
mov
or
es
pushf
and
jb
or
xchg
mov
and
sub
sbb
fisub
idiv
lock
dec
pop
and
add
call
mov
inc
push
xor
stc
std
pop
pop
out
int3
cdq
mov
pop
bound
pop
add
pop
mov
jne
lods
cmps
jbe
inc
or
or
pop
test
hlt
xchg
sub
aam
gs
mov
mov
out
xor
dec
jg
xlat
pop
add
cld
or
jo
jo
mov
and
and
pusha
add
mov
nop
scas
add
xchg
data16
jbe
das
xor
das
and
call
mov
push
jo
shl
push
inc
test
adc
ret
mov
bound
push
push
pop
in
or
arpl
cmp
test
ud1
adc
adc
pusha
mov
test
and
xchg
add
push
and
icebp
lods
push
add
out
and
(bad)
mov
push
jmp
pop
add
add
aad
mov
fadd
mov
aam
iret
lods
lds
jae
xor
inc
inc
popa
imul
aaa
fdiv
out
push
das
mov
and
mov
daa
sub
shl
ja
ins
pusha
adc
nop
inc
cmc
scas
aam
sbb
cmp
imul
pushf
cmp
xchg
les
xor
jmp
push
xlat
into
fwait
jmp
inc
mov
fsubr
jge
cli
rol
sbb
test
add
xchg
mov
push
and
lahf
cmp
bound
in
ins
nop
dec
idiv
leave
lods
jg
ins
cmc
stos
cli
and
dec
pop
movs
inc
mov
sub
sbb
pop
push
xor
and
mov
adc
int
push
out
gs
cmp
xchg
add
adc
adc
push
iret
lock
mov
test
leave
cmps
or
adc
mov
pop
inc
xchg
jne
mov
in
int
pop
int3
add
fstp
int3
lods
fild
add
clc
sbb
(bad)
inc
into
and
add
push
loope
xor
scas
std
push
sub
jns
mov
pop
mov
ret
add
data16
cs
stc
ror
push
and
sub
icebp
add
lods
int
hlt
cmp
cdq
fnsave
jecxz
dec
ds
fdiv
shr
das
mov
jmp
scas
pop
(bad)
or
xor
dec
sub
cmp
mov
add
adc
test
pop
inc
jmp
(bad)
or
push
and
xor
dec
out
(bad)
mov
ficom
and
imul
mov
mov
sahf
dec
jl
push
ret
push
icebp
dec
pop
mov
in
xor
and
imul
cmp
ror
out
sub
std
clc
lods
add
mov
pop
outs
jmp
jbe
xor
pop
cld
mov
cmp
stc
(bad)
movs
(bad)
movs
sub
jnp
(bad)
sub
retf
pop
inc
mov
jnp
adc
shl
dec
idiv
jmp
cmc
mov
out
popa
xchg
dec
push
adc
inc
ins
sub
icebp
imul
fmul
es
jb
or
sub
inc
mov
push
mov
js
data16
pop
out
cmp
fldlg2
cmp
cmp
ficom
mov
fmul
bound
(bad)
int
inc
(bad)
jmp
adc
jl
sub
neg
(bad)
test
shl
mov
out
jno
hlt
enter
inc
cli
lods
div
hlt
loopne
fmul
cli
repz
imul
fsubr
mov
and
mov
(bad)
imul
into
mov
leave
cmp
sbb
or
mov
std
(bad)
dec
xchg
inc
sub
mov
(bad)
pop
cmps
enter
mov
fldenv
into
mov
out
aas
cwde
call
push
ret
arpl
jle
xchg
out
popa
int
xchg
ss
pop
std
pop
adc
ror
leave
jmp
mov
xor
lahf
jnp
sub
ss
xor
xchg
cwde
ins
jo
adc
je
inc
xlat
pushw
hlt
shr
test
out
bound
push
shl
sbb
or
or
and
retf
jns
lock
xchg
xchg
xchg
data16
jge
xchg
pop
lds
test
add
dec
std
fstp
xchg
sbb
leave
rol
or
dec
push
aas
xor
push
inc
mov
push
mov
and
dec
out
loope
push
mov
dec
mov
icebp
push
push
pop
jno
mov
call
lods
(bad)
push
loop
aas
retf
sub
mov
in
dec
jl
repnz
sbb
jae
aas
mov
xchg
sub
sub
mov
daa
pop
lods
xor
mov
lock
repz
hlt
dec
aam
ror
fdivr
mov
push
mov
cmp
mov
gs
jge
pop
mov
jno
cdq
add
rdmsr
bound
cdq
popa
jne
cmp
push
lds
not
movs
aas
scas
cmps
mov
mov
in
sbb
(bad)
adc
in
lods
cmp
test
mov
cmp
lods
push
mov
popf
jne
xor
fcom
outs
cs
push
stos
fs
mov
cmp
xor
je
call
pusha
imul
xchg
adc
xor
jno
js
cmp
push
test
scas
push
push
push
push
repnz
cmp
push
add
fwait
inc
aas
call
push
retf
in
je
sub
pop
mov
std
or
popf
loop
xor
dec
sti
scas
iret
or
jb
and
mov
and
mov
rol
dec
(bad)
fnstsw
test
das
shl
push
jbe
test
aaa
and
add
lahf
sti
adc
bound
lods
stos
(bad)
aam
sti
lods
cwde
dec
aaa
adc
pop
mov
inc
cs
in
add
inc
push
inc
out
mov
(bad)
mov
mov
gs
fbstp
push
mov
and
inc
in
jb
std
repnz
inc
arpl
cld
out
out
popa
jbe
outs
push
ror
ja
mov
pop
adc
shl
out
fdiv
mov
mov
add
mov
dec
movhps
ds
jmp
jns
xor
xchg
and
aaa
mov
inc
ins
mov
fwait
out
je
xchg
pusha
popw
xor
mov
xor
add
rcl
inc
daa
or
out
push
dec
popa
out
in
es
std
push
jle
js
add
out
jmp
and
jnp
jmp
(bad)
stc
popa
stc
pop
mov
cmp
inc
push
and
add
mov
jbe
dec
add
fldcw
xor
rcr
pop
adc
test
cmp
xor
push
xchg
add
pop
pop
push
mov
sahf
sbb
xor
inc
cmp
fwait
xor
fcomip
and
pop
js
fsubr
xchg
or
(bad)
enter
pop
fdivr
mov
int
mov
inc
pop
push
add
cld
sti
and
pushf
mov
add
cmp
sbb
push
lds
fs
call
repz
fwait
sbb
push
jcxz
nop
mov
aam
mov
pop
xchg
sbb
fwait
mov
adc
push
ret
aad
fsub
xor
or
jae
and
sub
fld
nop
jo
mov
repz
mov
sahf
push
fidiv
pop
loop
cdq
sti
dec
(bad)
pop
sub
call
test
pop
jmp
sbb
neg
adc
add
loope
or
adc
stc
or
(bad)
out
cwde
out
in
jmp
aam
add
pop
mov
mov
inc
jmp
push
cs
shl
lods
repnz
stos
stos
sub
retf
das
imul
or
inc
cmp
pop
mov
sub
xchg
dec
les
mov
jmp
add
push
jnp
clc
aaa
cvtpi2ps
cdq
ins
xchg
int
rcl
adc
push
cmp
jge
iret
inc
push
adc
mov
call
sub
mov
jge
in
and
push
add
xor
mov
sub
lock
in
lods
aas
pop
cmps
cmp
int3
mov
sahf
call
pop
addr16
out
jno
adc
imul
jl
jge
jbe
adc
or
jp
adc
pop
ins
mov
mov
fmul
lods
scas
loope
leave
or
(bad)
pop
fidivr
test
jno
add
test
push
mov
adc
push
jge
cmp
mov
pusha
cs
les
cld
daa
jb
idiv
fiadd
mov
pop
lock
test
pusha
add
arpl
sti
(bad)
mov
lods
std
test
repz
mov
sar
xchg
daa
dec
sbb
je
mov
test
jb
(bad)
mov
jp
popf
push
js
(bad)
aam
mov
(bad)
mov
push
dec
leave
mov
sahf
shl
dec
data16
mov
sub
popa
sbb
mov
scas
shr
xor
(bad)
addr16
xchg
or
popa
sbb
enter
adc
and
aad
ret
cmp
jb
int3
out
push
sar
sub
(bad)
adc
rol
sar
adc
xchg
aaa
add
mov
sub
push
mov
sub
sub
and
adc
enter
push
jno
pop
push
out
je
and
xor
dec
inc
ret
or
aam
or
fstp
sbb
fucomp
cdq
jmp
int
call
sbb
in
mov
js
and
jmp
jmp
push
pop
adc
popa
imul
or
pop
loopne
adc
jns
jg
dec
push
inc
jae
mov
retf
scas
cwde
pushf
movs
pop
fwait
xchg
ret
lock
clc
pop
push
pusha
push
inc
inc
push
mov
mov
jg
bound
test
sub
retf
xchg
xchg
push
cmp
jl
pop
fwait
out
test
xchg
imul
cdq
out
mov
mov
sahf
bound
and
inc
and
cdq
adc
xchg
(bad)
ror
std
cwde
push
jne
xchg
leave
or
mov
sub
xor
mov
fbstp
sbb
mov
pop
cmp
repz
adc
lahf
ret
pop
inc
jp
test
shl
push
mov
jp
add
and
dec
imul
test
inc
mov
push
cmps
push
iret
pop
sub
arpl
cmp
adc
or
adc
push
sti
daa
retf
xor
dec
xchg
cvtps2pd
(bad)
mov
shl
enter
icebp
mov
pop
mov
jle
shl
(bad)
ds
push
retf
loope
inc
mov
xor
jns
jmp
adc
dec
lahf
lods
in
fdiv
pop
out
scas
retf
dec
or
xor
xor
sub
out
sbb
daa
and
ss
xchg
loope
fistp
jno
hlt
xor
dec
adc
test
(bad)
ja
xchg
sub
fnsave
pop
mov
xor
push
rcr
pop
inc
xchg
jge
jae
lock
push
aad
mov
lods
popa
jmp
aad
mov
out
test
inc
sub
add
adc
leave
dec
xor
jb
mov
mov
pushf
lock
ret
xor
inc
jle
leave
es
xor
pop
stc
int
push
cli
xchg
gs
xor
aad
hlt
mov
mov
cli
mov
dec
pushf
pop
cdq
out
(bad)
and
sub
sbb
xor
xchg
adc
aad
sbb
mov
cld
inc
je
dec
mov
and
sbb
xor
add
shr
mov
adc
fisttp
aas
jnp
imul
cmp
dec
adc
cmp
rcl
addr16
ins
movs
gs
mov
icebp
addr16
adc
scas
sub
push
mov
pushf
jne
xor
mov
inc
dec
mov
ss
ins
aaa
in
mov
ja
stc
xchg
ret
cs
ror
icebp
jns
jl
adc
test
addr16
xchg
push
(bad)
mov
(bad)
sar
iret
bound
sub
lea
adc
movs
in
jp
jmp
pop
lock
and
jge
add
outs
xor
mov
aaa
popf
pop
hlt
mov
fldcw
adc
pop
mov
aam
add
jo
movs
sti
xor
shl
xchg
in
jg
imul
cmp
sub
(bad)
scas
popa
call
(bad)
loopne
popf
leave
cmp
mov
shr
mov
jmp
mov
push
xor
mov
bound
mov
inc
cmc
movs
imul
fstp
xchg
jmp
cmps
call
sub
jno
imul
cmp
aas
inc
and
mov
add
adc
jmp
dec
xchg
sbb
retf
sbb
pop
stos
jae
outs
sub
jg
add
xor
js
push
shr
mov
(bad)
mov
sahf
enter
int
dec
jle
cmp
jmp
jl
jno
push
mov
(bad)
cmp
mov
shl
jl
cmp
mov
fstp
mov
push
push
mov
xor
pop
or
xor
xchg
push
ficomp
jo
stos
ins
add
enter
xlat
icebp
mov
dec
mov
sahf
push
dec
xchg
ror
sbb
sbb
cmp
ins
inc
add
fs
imul
cmp
loope
add
les
neg
lahf
cmp
es
dec
aam
mov
sbb
xor
ficom
inc
jb
leave
in
int3
popa
leave
(bad)
push
sub
cmp
jl
out
inc
push
jnp
mov
imul
movs
mov
pushf
fs
nop
sar
ins
mov
lds
pop
mov
mov
dec
mov
dec
fs
cld
sbb
repnz
push
retf
(bad)
xor
jl
in
push
mov
mov
fdivr
mov
aam
arpl
loop
shl
rcr
mov
dec
and
push
add
inc
push
inc
add
mov
cwde
pop
inc
mov
mov
mov
mov
xor
xlat
jo
lahf
sbb
cmp
push
(bad)
jle
adc
dec
push
loop
je
xor
clc
pusha
in
icebp
adc
xchg
push
pushf
xor
shl
mov
cli
xor
dec
or
pop
cmps
pop
test
fwait
cmp
xor
cld
sbb
cdq
shr
add
fwait
les
inc
mov
push
xor
aam
sbb
mov
adc
and
mov
loope
pop
cmps
adc
mov
mov
add
xchg
mov
fisub
push
out
inc
(bad)
mov
addr16
sbb
mov
jge
mov
ins
mov
jbe
sar
mov
mov
lahf
lahf
ja
xchg
dec
or
adc
int
(bad)
xchg
sub
sbb
daa
ja
cmp
mov
push
out
jle
adc
(bad)
xor
test
into
call
pop
xor
xor
out
popf
shl
and
or
cmps
std
loop
mov
and
jmp
addr16
mov
sbb
(bad)
movq
cmp
cmps
or
push
aam
rol
dec
mov
jg
pusha
popa
inc
add
xchg
adc
pop
out
pop
clc
push
jg
loope
and
sbb
mov
lea
and
inc
sub
push
sub
loopne
mov
adc
push
dec
(bad)
aad
push
sbb
cmp
test
sub
mov
push
xchg
or
xchg
mov
mov
adc
nop
mov
sbb
test
out
test
pop
mov
xor
or
add
stos
fdivr
push
dec
mov
cmps
xor
fwait
sbb
(bad)
cmp
out
sbb
jns
jae
es
cwde
xchg
loop
mov
cld
inc
out
inc
fstp
mov
inc
inc
sub
add
or
mov
jle
mov
dec
in
fidiv
xor
fdivr
mov
pop
or
ja
sub
lods
lods
stc
jns
cdq
imul
aam
aaa
pop
dec
and
or
mul
adc
jge
mov
and
lods
rcl
mov
add
adc
push
inc
push
in
pop
scas
push
sub
cmc
mov
xor
xchg
das
mov
adc
nop
mov
dec
cld
sub
jns
cmp
popa
xchg
hlt
cmp
jmp
xchg
fcom
inc
cmp
ror
push
push
dec
sbb
sub
push
outs
adc
clc
add
and
sub
xchg
mov
mov
popa
out
(bad)
in
dec
dec
or
movs
jno
sub
aad
mov
js
call
mov
add
fist
sbb
jl
aam
mov
ds
test
fdivrp
adc
push
sub
leave
mov
push
inc
popf
lahf
mov
pusha
xor
add
sar
scas
push
sub
test
mov
imul
mov
mov
icebp
das
adc
ja
lahf
xor
rcl
aas
fsub
cdq
cmps
push
cmp
fst
jle
call
loop
test
xchg
mov
cwde
jmp
test
sub
pushf
(bad)
mov
out
mov
cmp
inc
sbb
jmp
ficomp
and
fistp
lods
cmp
and
adc
gs
xor
sub
jmp
popf
or
int
mov
adc
jg
cwde
pop
ja
mov
push
sti
aaa
pop
and
cld
test
xchg
cmp
hlt
outs
mov
inc
pushf
(bad)
popa
lds
arpl
sbb
(bad)
xchg
xchg
fdiv
popa
cmp
xor
retf
jge
adc
pop
imul
or
call
pop
jecxz
call
push
rcr
pop
mov
or
inc
cmp
and
inc
imul
or
loope
dec
lods
cwde
fiadd
out
push
mov
sub
pusha
ret
and
mov
(bad)
jecxz
cld
jmp
pop
mov
mov
lods
push
mov
pop
sub
sbb
or
int
mov
adc
pop
cs
mov
or
aaa
retf
adc
cmp
stos
mov
cmp
(bad)
sub
cmp
icebp
mul
cdq
(bad)
retfw
and
cmp
and
shl
jo
retf
and
push
test
bound
in
mov
and
jle
ret
int
dec
repnz
rcr
fadd
add
xor
ins
and
mov
sub
leave
pop
sbb
fwait
add
aam
xor
mov
adc
(bad)
rcl
lods
aas
sub
jmp
out
and
lock
ins
jno
jmp
shl
cmp
xchg
xchg
ds
enter
das
hlt
test
jmp
push
daa
xor
cwde
xor
jno
lea
mov
loope
xor
js
xchg
cmps
jae
sub
lea
jo
sbb
push
retf
int3
in
xor
push
xchg
movs
(bad)
not
ins
inc
mov
lds
push
cmp
adc
rcr
jmp
sar
mov
mov
push
ins
imul
jbe
jnp
loopne
in
in
retf
add
ins
ins
add
ins
in
sub
stos
fcomp
ins
fnstsw
sbb
into
jmp
or
push
ficomp
pusha
cmps
lea
sbb
jmp
xlat
sub
das
ins
ja
dec
jbe
imul
fsub
ins
push
repz
fs
stc
(bad)
in
sub
and
jne
fadd
loopne
mov
in
out
jmp
jmp
es
out
adc
sbb
lahf
mov
jb
and
rcl
jecxz
pop
or
jbe
xchg
jno
cld
ror
dec
jmp
(bad)
loope
sub
loope
add
gs
xchg
xor
push
jecxz
pop
inc
sub
sub
push
loop
test
sub
mov
push
jae
cmp
ret
adc
jae
lods
(bad)
hlt
test
sbb
repz
and
pop
adc
sub
sbb
and
inc
push
xchg
xor
lock
inc
out
rol
cmp
xor
or
gs
jo
in
int3
nop
ret
adc
fld
retf
rcl
pop
stc
dec
xor
add
push
push
in
(bad)
push
ficomp
es
arpl
stos
push
scas
popf
imul
xchg
sar
daa
inc
adc
pop
jb
adc
cld
mov
inc
sub
add
fnsave
jno
imul
jl
mov
mov
outs
jle
xchg
div
nop
sub
bound
mov
mov
jmp
jo
test
sub
outs
iret
(bad)
mov
add
aaa
add
retf
mov
fsub
push
mov
fisttp
adc
pop
or
pop
add
movs
xchg
arpl
push
pop
shl
push
adc
inc
data16
inc
mov
inc
fistp
leave
shl
daa
push
push
or
mov
popa
lods
jmp
sbb
pop
and
out
sub
leave
fwait
les
mov
fcmovu
lahf
out
sbb
sahf
push
mov
jbe
out
push
xchg
push
sub
(bad)
jmp
mov
ins
cld
mov
pop
leave
enter
repnz
stos
in
jno
add
push
call
aad
loop
jmp
movs
add
das
mov
inc
jmp
jno
or
clc
push
or
movs
adc
sub
pop
push
arpl
sub
push
push
mov
sub
pop
rcl
pop
dec
in
sub
mov
stos
lods
adc
scas
mov
jae
cwde
mov
cs
sbb
shl
add
mov
mov
dec
xlat
xchg
(bad)
fdivp
cmp
aad
pop
cdq
sub
imul
mov
pop
cmp
jg
fisttp
aaa
or
push
inc
jne
xor
cmc
leave
inc
outs
dec
mov
jne
call
pop
repz
loope
and
(bad)
mov
mov
pop
mov
aas
push
mov
stos
mov
jle
cmp
(bad)
out
push
dec
stc
rol
sahf
dec
imul
xchg
cmp
mov
aam
fwait
and
or
pop
jnp
in
out
out
cs
or
out
add
add
and
repz
outs
(bad)
mov
inc
in
popf
scas
cmp
hlt
ins
movs
push
jmp
popf
mov
mov
(bad)
aam
outs
(bad)
je
jno
and
je
nop
fdiv
push
xchg
ficom
out
rep
dec
mov
je
test
mov
popa
sti
rcr
adc
lds
push
(bad)
ror
mov
pop
dec
daa
pushf
lahf
inc
retfw
jns
mov
vsqrtsd
push
in
or
push
xor
push
call
pop
iret
ds
mov
jb
mov
pop
test
fistp
inc
sub
test
outs
push
out
inc
xor
push
mov
in
aam
lods
or
arpl
dec
jno
not
xor
sbb
imul
arpl
int
jle
shr
enter
xlat
out
xchg
jg
mov
lea
mov
jns
push
mov
aas
sar
mov
mov
ds
and
daa
aaa
in
cld
push
sub
je
and
cdq
mov
cmp
jl
push
mov
pop
jne
ficomp
hlt
neg
add
inc
(bad)
mov
out
in
inc
ins
enter
pop
clc
pop
addr16
add
(bad)
mov
fsubr
and
push
ins
or
xor
rcl
inc
rol
in
xlat
dec
ins
mov
lods
pop
cdq
cli
stos
fdivr
inc
ja
enter
xor
loop
leave
sbb
jo
adc
adc
jno
into
and
loopne
sbb
cmps
cmp
sbb
(bad)
fincstp
or
mov
sbb
mov
dec
enter
scas
shl
jmp
aas
or
pusha
div
dec
(bad)
gs
push
(bad)
ficomp
popa
sbb
imul
loopne
(bad)
ret
mov
stos
sub
push
loope
cmp
jb
xchg
xchg
inc
ret
outs
and
mov
xchg
jmp
xchg
mov
test
add
into
setbe
daa
and
in
enter
add
push
bound
arpl
pop
cld
and
ja
push
call
retf
sar
loopne
into
sbb
sbb
scas
in
enter
xchg
in
sbb
pop
enter
cwde
inc
fwait
in
dec
dec
jle
jno
xor
loop
mov
and
stos
shl
(bad)
shl
pop
ror
xchg
add
in
inc
into
push
cmps
xor
or
xchg
jecxz
push
inc
push
jb
test
ret
cmps
cmc
jno
data16
bound
fild
shl
xor
out
in
jge
mov
int3
add
fs
jae
jno
sahf
loopne
jecxz
xor
mov
shl
push
push
pop
mov
adc
pop
jl
mov
adc
mov
mov
cmp
leave
mov
add
cmps
ds
loopne
mov
and
push
cs
(bad)
jnp
cmps
pop
pop
sbb
popa
in
inc
lods
(bad)
dec
call
mov
dec
mov
shr
imul
out
xchg
rol
pop
sub
pop
(bad)
pop
pushf
test
sub
pusha
cli
cmp
sti
xor
xchg
sbb
cmovnp
xchg
xor
(bad)
add
and
xor
jecxz
stos
les
movs
jl
dec
adc
pop
cs
and
adc
xchg
inc
std
stos
xchg
cdq
popa
mov
(bad)
dec
scas
lock
sar
iret
mov
and
dec
ds
repnz
mov
xchg
addr16
or
or
or
pop
clc
imul
pusha
dec
call
cmp
rcl
es
mov
scas
add
add
adc
pop
dec
mul
jo
sbb
push
mov
jecxz
dec
movs
xlat
fs
scas
mov
pusha
or
popf
cmp
xchg
and
and
nop
mov
loopne
push
lea
ror
pop
or
loopne
cdq
in
inc
in
cmps
pop
dec
aam
push
fwait
es
jns
mov
xchg
mov
jbe
mov
jnp
pop
push
xchg
data16
xor
jmp
dec
and
(bad)
mov
mov
ret
fld
jnp
push
addr16
mov
sub
cmc
xchg
repz
arpl
and
sbb
in
ds
pop
lahf
cwde
mov
push
rcr
je
xlat
xchg
xchg
inc
test
push
rcr
mov
and
jno
ins
loopne
push
iret
xchg
push
push
xlat
out
and
mov
fwait
pop
das
push
sar
xchg
movs
push
test
xor
stos
scas
movs
push
aaa
rcl
inc
outs
sbb
hlt
push
ins
inc
mov
and
cs
jmp
push
cwde
clc
inc
inc
ret
lods
dec
dec
ja
add
pop
ja
loopne
mov
pop
sti
aas
stos
sbb
in
pop
mov
loope
sub
xchg
retf
mov
adc
ins
repnz
cmp
das
cmps
aam
out
adc
sti
in
pop
mov
jb
and
jp
jge
dec
repnz
mov
inc
rcl
adc
sbb
xor
pop
dec
mov
push
cld
lods
push
xor
jle
push
lahf
cmpps
sbb
mov
xchg
push
shl
jb
stos
out
ja
add
xchg
sub
pop
ins
adc
imul
add
cmp
jo
rcr
mov
out
jns
fisub
idiv
jns
outs
movs
popa
xlat
or
push
xchg
sbb
cmps
cmp
xchg
and
lock
inc
fisttp
jg
sbb
outs
mov
or
mov
inc
stos
jnp
xchg
xor
dec
push
ins
and
cmp
fild
or
out
mov
inc
call
inc
jns
and
clc
lds
sub
mov
sub
sbb
jmp
cwde
inc
js
repnz
aam
or
xchg
and
imul
ja
(bad)
add
ins
fisub
das
inc
sti
or
mov
adc
cmp
mov
mov
jnp
sbb
push
mov
js
fnstsw
add
ins
js
in
leave
pop
pop
cli
adc
inc
sar
lahf
jmp
popa
fcomp
and
jp
inc
and
int
div
ins
icebp
jmp
inc
icebp
xchg
push
fistp
arpl
mov
cmp
hlt
push
aam
mov
sar
lods
mov
pop
mov
dec
push
lods
mov
popf
icebp
rol
sbb
sub
fstp
movs
mov
sbb
or
ds
or
fsub
enter
int
or
lea
mov
xlat
inc
and
(bad)
adc
mov
push
pop
inc
mov
and
ins
repz
lahf
cmp
out
xor
sbb
or
pusha
fbld
mov
es
or
cmp
lods
push
sbb
mov
or
dec
in
jmp
push
pop
nop
and
cdq
ins
cmp
adc
std
test
cld
jae
in
or
dec
jge
mov
xor
retf
pop
jge
retf
mov
(bad)
call
ret
and
aam
ret
jle
dec
mov
out
out
sbb
mov
sbb
js
pop
pushf
fdivr
push
inc
movs
xor
jp
xor
sbb
lahf
adc
shr
push
pop
mov
sti
push
mov
stc
xchg
inc
push
cmp
popf
mov
int
fnstenv
mov
(bad)
rol
pop
add
fdivr
in
loop
sbb
xor
int3
and
adc
jmp
xchg
pop
in
xchg
inc
test
dec
push
mov
enter
inc
lock
and
jg
cld
dec
push
fcmovu
jbe
mov
sub
in
cwde
fdivp
mov
arpl
rcr
mov
test
arpl
sar
loop
adc
cmp
jb
xchg
shl
push
ds
mov
int
sub
lds
mov
in
outs
mov
int
fwait
in
js
xchg
pop
inc
ret
and
dec
inc
inc
dec
mov
add
mul
pop
or
test
retf
(bad)
push
xor
test
add
sti
fst
add
js
pop
(bad)
and
(bad)
jmp
inc
fldenv
outs
mov
jp
and
nop
fbstp
popf
xchg
das
int
pop
cld
popf
scas
rol
and
inc
pop
xor
xchg
ins
xor
outs
sub
in
lods
leave
pushf
pop
push
xchg
les
cli
mov
jp
xor
push
dec
cwde
push
icebp
in
(bad)
adc
xor
aaa
mov
fs
cmps
fistp
or
in
push
xchg
jmp
js
test
scas
jb
jnp
comiss
xor
out
cwde
mul
jnp
movs
mov
mov
inc
sub
push
and
dec
sbb
adc
call
jg
mov
out
fs
push
mov
fs
stos
jnp
imul
aaa
leave
rcr
pusha
rcl
retf
(bad)
enter
jl
inc
or
sub
gs
sbb
mov
jle
ret
ins
mov
idiv
call
xor
fcmovne
and
jns
in
aas
test
mov
inc
jne
fwait
xchg
adc
xchg
mov
or
stc
mov
xchg
cdq
inc
test
and
mov
mov
cmp
shl
jne
pop
jno
mov
loopne
xor
repz
xchg
mov
adc
stc
mov
(bad)
fmul
xchg
sbb
push
imul
lds
jo
jl
mov
ds
push
ret
sbb
(bad)
aas
xchg
sub
jp
sbb
jns
aas
stos
pop
inc
mov
xchg
not
xchg
and
pop
call
adc
sbb
outs
cmps
aas
daa
(bad)
icebp
or
int
repz
mov
push
icebp
ja
shl
jne
adc
shr
xchg
jmp
ds
sbb
mov
shl
inc
sub
mov
(bad)
fdivp
xchg
ins
fist
cmp
xor
mov
xor
push
movs
push
dec
mov
mov
cmp
fisttp
loope
ficom
mov
mov
add
add
(bad)
adc
jge
push
lock
pusha
test
stc
loopne
xchg
ds
inc
sub
pop
cld
mov
enter
js
push
imul
in
call
test
and
outs
pop
xchg
cmp
lock
mov
add
fxch
mov
icebp
push
cwde
je
mov
xor
ja
jg
mov
sub
mov
jae
push
ja
push
pusha
pop
ret
mov
add
ja
lock
cwde
and
push
aam
jecxz
sbb
add
(bad)
iret
mov
aad
push
into
(bad)
ins
clc
and
mov
xor
inc
cmp
or
mov
(bad)
icebp
stos
mov
push
add
mov
mov
jae
sar
fcomp
cmc
(bad)
mov
jmp
jmp
xor
retf
mov
xchg
jp
cmp
pop
inc
sub
xor
mov
mov
add
stc
aaa
or
lock
bound
mov
pop
push
fs
shl
jmp
xor
add
add
test
pop
adc
outs
xchg
(bad)
cmp
mov
(bad)
xchg
inc
jge
mov
adc
pusha
cmp
add
imul
movs
es
rol
and
enter
test
sbb
pop
push
mov
ja
cmp
push
push
inc
inc
shl
pop
cmp
mov
inc
jmp
jmp
fld
(bad)
mov
pop
test
fcomp
mov
int3
nop
jo
popa
shl
jmp
int3
inc
rcr
mov
jnp
in
cmp
add
loopne
push
sahf
pusha
test
adc
mov
xor
inc
xchg
xor
pushf
div
imul
lock
push
inc
movs
pop
cmp
mov
pop
mov
or
clc
cmps
mov
test
jl
cmp
dec
push
int3
hlt
in
ins
jae
loop
ins
adc
jnp
cmp
outs
outs
arpl
jne
pop
xor
in
dec
sub
jge
dec
fdivr
(bad)
push
mov
ds
xor
push
xchg
and
scas
icebp
(bad)
xor
inc
mov
inc
adc
sub
pop
or
test
jbe
cmp
(bad)
and
(bad)
js
setle
pop
mov
xor
inc
daa
xchg
adc
cmp
iret
fidivr
adc
dec
xor
mov
and
cmp
push
dec
fistp
fbstp
mov
das
inc
sti
push
cmp
cmp
sbb
jge
mov
mov
cmp
xor
dec
mov
xor
retf
xchg
fild
scas
xchg
pop
cdq
xor
hlt
mov
popf
lods
into
xor
ret
mov
and
sub
call
pop
sub
scas
sbb
les
faddp
ja
movs
leave
rol
adc
fisttp
loopne
aad
ins
das
or
dec
sbb
(bad)
push
cwde
addr16
enter
(bad)
jmp
retf
pop
xlat
and
enter
xchg
shl
pop
push
ret
pop
pop
test
sar
mov
loop
leave
retf
xchg
jbe
shl
repz
pop
(bad)
and
dec
push
inc
stc
repz
mov
mov
push
push
xchg
fdivr
push
out
aam
cmps
add
dec
in
inc
dec
clc
push
inc
shl
cmp
mov
mov
stos
popa
in
aam
(bad)
icebp
outs
and
sbb
mov
inc
jmp
ins
xor
mov
mov
dec
xchg
fwait
push
jg
cdq
mov
movs
ins
frstor
dec
cmp
xchg
xor
dec
cmps
xor
out
out
test
fs
add
call
cmp
jno
adc
inc
push
mov
adc
enter
sub
(bad)
hlt
mov
imul
loope
pusha
retf
(bad)
xlat
scas
jno
cmp
sti
ja
aam
shl
cmps
(bad)
cmp
out
jbe
mov
adc
imul
fs
xor
and
jecxz
mov
pop
popf
into
shl
lods
ret
cdq
push
pusha
fwait
sub
ret
push
hlt
inc
(bad)
lods
nop
mov
aas
jmp
stos
out
or
cmc
retf
add
pop
and
pusha
push
inc
dec
add
mov
dec
inc
fwait
mov
fwait
pop
sbb
dec
inc
popf
jae
lods
rcr
dec
stos
mov
jg
sbb
push
jmp
mov
imul
add
repz
jp
cld
and
xchg
jno
sub
iretw
popa
ins
ins
cmp
lods
sar
jae
pop
std
jmp
dec
lahf
lds
dec
dec
or
test
sahf
inc
xlat
xor
popa
mov
pop
or
sbb
ins
into
sub
lods
test
jno
jl
mov
adc
ficomp
scas
sub
dec
and
jns
xlat
ds
fistp
dec
sbb
jnp
cmp
cmp
dec
(bad)
aas
loop
pop
dec
cmp
loope
retf
loope
pop
clc
mov
aad
inc
jnp
in
mov
les
leave
fwait
in
mov
div
mov
push
push
in
dec
push
enter
or
loop
(bad)
std
mov
hlt
rcr
cmp
(bad)
int3
mov
frstor
or
fstp
lock
stos
inc
jo
adc
or
adc
mov
aam
pushf
ret
loopne
fnsetpm(287
test
test
scas
leave
adc
cmp
or
push
popa
cmp
into
inc
arpl
test
mov
pop
xor
push
lahf
or
xchg
(bad)
into
(bad)
js
fldenv
ret
str
mov
ficomp
adc
movs
test
repnz
int3
popa
push
mov
push
inc
adc
mov
fistp
std
mov
xchg
mov
sub
in
xchg
sub
ror
cmp
int3
sbb
and
loop
sub
and
add
loope
xlat
xlat
dec
adc
je
jb
dec
push
xor
adc
call
jg
loopne
push
dec
fst
add
cwde
jmp
fdivr
sbb
clc
mov
les
xchg
xor
enter
add
pop
pop
dec
jp
or
sar
bnd
je
fld
clc
dec
stc
out
cmp
das
push
lahf
arpl
daa
les
pusha
fist
fnstcw
nop
shr
ins
mov
fisub
outs
xchg
add
sub
jbe
imul
and
not
ret
loope
fbld
int
jo
adc
imul
ja
ins
push
sub
sbb
cmp
sbb
or
and
in
dec
std
fs
sahf
mov
xchg
in
or
fadd
xor
dec
inc
jmp
nop
nop
cmp
ret
(bad)
arpl
test
bound
addr16
sub
out
cdq
sbb
mov
stos
jbe
push
jne
rol
das
jno
and
mov
(bad)
jle
stc
push
inc
pop
push
scas
push
popa
lahf
arpl
bound
xchg
xor
mov
push
aaa
in
add
popa
inc
cmp
(bad)
xchg
ret
shl
mov
ja
sub
fwait
addr16
xchg
fwait
dec
imul
adc
ror
mov
call
in
aad
pop
addr16
cld
sbb
retf
push
dec
mov
dec
fwait
jle
(bad)
jmp
cmp
push
adc
aaa
add
jmp
mov
sti
(bad)
cmc
jne
sub
loope
lds
dec
push
pop
inc
pop
add
adc
jbe
pop
movs
xor
cmp
sbb
cmps
loop
shl
lods
in
or
(bad)
pushf
sbb
idiv
mov
sbb
icebp
jle
popf
mov
or
ins
and
mov
sbb
mov
cmps
push
xchg
cmc
(bad)
scas
dec
test
in
mov
(bad)
call
aaa
push
xchg
mov
cmp
into
add
and
test
inc
mov
mov
scas
lock
xor
mov
rcr
and
outs
xchg
bound
retf
push
xchg
and
pop
cdq
sbb
repnz
sbb
cmp
dec
cs
push
mov
pusha
pop
push
pop
mov
hlt
mov
loope
push
mov
fs
jns
bound
int
into
add
call
cmp
or
mov
sub
pop
je
mov
mov
fsubr
sub
push
inc
cdq
popa
sbb
jl
xor
cmp
rcl
fs
push
mov
(bad)
shl
push
inc
jo
rol
dec
jo
pop
inc
sahf
mov
or
adc
mov
xor
mov
out
ja
mov
outs
test
mov
inc
push
cwde
fld
imul
retf
mov
test
pop
xor
jl
addr16
dec
pop
call
push
xchg
test
jl
jbe
push
mov
push
fisttp
adc
mov
mov
cli
cmp
not
add
adc
mov
jns
mov
hlt
inc
cmp
xor
mov
mov
enter
jbe
sar
and
cmps
mov
xchg
or
or
pop
imul
cmps
mov
mov
xchg
adc
mov
ja
xchg
cdq
shl
jmp
retf
add
test
cli
in
xor
stos
pop
push
mov
test
(bad)
pop
push
js
cmp
dec
fwait
mov
add
stos
in
out
and
mov
(bad)
push
inc
dec
sub
xor
cmp
cli
mov
mov
in
movd
push
lahf
and
adc
fbstp
mov
xchg
sbb
es
(bad)
lods
inc
cmps
jle
fcom
pop
ror
or
cli
js
fstp
div
lds
jg
mov
ret
mov
and
and
ss
std
std
xchg
fstp
data16
add
shl
dec
cmps
adc
jp
sbb
adc
push
adc
ds
dec
cmp
data16
imul
cdq
cmc
movs
scas
aam
inc
dec
mov
shl
push
dec
mov
enter
cmp
sub
or
popf
sub
adc
xchg
lahf
inc
cdq
mov
enter
push
push
xchg
or
daa
sahf
sbb
push
sub
push
loopne
stos
jo
xchg
pop
cld
jle
push
pop
bound
inc
scas
and
repnz
jnp
(bad)
push
ret
ffreep
outs
sbb
int
sub
mov
pop
data16
jo
stos
push
cwde
cmc
mov
add
or
pop
out
xchg
push
push
iret
les
or
push
icebp
fwait
cld
in
ret
lods
add
cs
pop
or
out
lods
or
xchg
mov
pop
mov
rol
push
pop
or
dec
fild
ret
inc
mov
pop
add
push
cld
mov
cmps
test
scas
cmp
mov
jge
mov
xchg
in
aad
cmp
and
ins
add
and
(bad)
out
dec
xor
cmp
call
xor
hlt
cmp
mov
pop
dec
jmp
xchg
retf
mov
scas
mov
add
and
mov
lahf
xchg
dec
push
xchg
adc
iret
clc
cmp
lods
ficomp
fstp
test
jne
dec
push
or
ffree
sar
mov
comiss
jle
stos
(bad)
fld
test
sub
xchg
shr
or
push
arpl
mov
pop
lds
cdq
data16
(bad)
div
inc
mov
inc
mov
push
xor
out
push
mov
test
xor
mov
ins
or
ror
(bad)
or
pusha
hlt
aad
xchg
fxch
aad
xchg
sub
pop
inc
out
out
(bad)
sub
mov
xor
push
mov
cs
or
ins
ins
mov
cwde
aam
scas
jb
int
xchg
push
dec
jmp
cwde
push
pop
mov
xchg
in
add
rcr
repnz
dec
movs
push
retf
add
sub
mov
and
add
es
adc
push
mov
(bad)
enter
hlt
outs
(bad)
icebp
cwde
jb
aaa
adc
adc
stc
jo
dec
xchg
out
popa
mov
jge
div
pushf
iret
lds
or
pop
cdq
adc
clc
xor
inc
(bad)
lods
dec
addr16
(bad)
inc
pop
mov
cmp
iret
gs
jp
and
aas
int
mov
jecxz
imul
pop
imul
jo
pop
pop
mov
(bad)
test
push
mov
pusha
pop
add
pop
addr16
jbe
pop
push
int
dec
aaa
xor
adc
sar
idiv
mov
movs
out
pushf
cmps
add
daa
jmp
cmps
scas
xchg
inc
or
mov
mov
inc
div
jp
dec
jmp
cmp
jp
inc
mov
add
jae
bound
adc
aam
lock
jnp
adc
int
dec
nop
inc
mov
cmp
xchg
pop
jp
scas
dec
cmp
rcl
pop
in
push
ja
jl
jno
xlat
imul
inc
shl
jmp
in
pop
ror
es
pop
stc
or
cdq
jge
inc
fwait
xor
in
mov
scas
dec
xor
inc
pop
xchg
xchg
inc
add
xchg
sti
push
stc
mov
repz
fldcw
and
sbb
mov
xchg
fiadd
push
jns
mul
mov
(bad)
enter
adc
cwde
mov
pop
push
scas
in
sahf
mov
mov
or
inc
mov
shl
dec
and
dec
cli
jo
cmp
stos
nop
out
and
mov
push
imul
pushf
xor
add
arpl
in
rol
push
pop
call
fild
sbb
xchg
(bad)
addr16
xchg
mov
jne
test
(bad)
stc
add
push
mov
gs
out
jl
pop
xor
adc
jbe
pop
pusha
jl
es
dec
int3
sub
loop
(bad)
xor
cmp
dec
in
js
les
mov
daa
cmp
and
stos
push
fiadd
dec
mov
rcl
(bad)
mov
in
mov
aaa
mov
xchg
outs
push
push
(bad)
adc
fsubr
or
mov
test
sub
add
inc
dec
test
xchg
and
pusha
push
out
cmp
inc
push
xor
or
dec
jg
hlt
mov
fadd
jmp
rcl
cmp
lahf
jmp
scas
ja
mov
inc
add
jns
inc
mov
pushf
cwde
sar
not
(bad)
bnd
jns
dec
jl
mov
hlt
and
cs
loope
mov
xor
in
les
xchg
jg
xchg
fild
dec
shl
data16
neg
or
call
ds
pop
scas
or
aad
mov
mov
add
xor
add
jae
rol
ret
adc
popa
leave
xchg
popa
into
mov
add
pop
adc
adc
cmps
cwde
add
fadd
into
shr
jo
es
push
ret
or
cmp
xchg
lahf
in
scas
test
cmp
std
lods
add
(bad)
imul
or
sbb
and
aaa
jl
xchg
push
mov
test
out
push
ja
or
mov
cmp
test
xchg
inc
rcl
or
(bad)
dec
or
shl
push
pop
jge
pop
(bad)
sar
mov
inc
fcmovu
lods
(bad)
dec
inc
enter
push
inc
xor
xor
pop
out
std
cmc
pop
std
mov
xlat
cmp
movs
or
sahf
sbb
loopne
icebp
cld
popa
popf
into
add
out
loope
jno
inc
adc
and
cmp
push
sub
push
pop
lea
sub
fcomp
mov
(bad)
mov
push
mov
jo
mov
cmp
dec
in
xchg
push
jae
sbb
xor
leave
hlt
mov
ins
idiv
test
xchg
push
mov
jne
into
pusha
pop
fild
mov
ja
xchg
fstp
nop
es
adc
dec
daa
popa
sub
mov
fcmovu
jmp
dec
cmp
sbb
jle
dec
movs
pop
in
retf
in
jno
imul
pop
jp
inc
out
stos
popa
js
xor
dec
mov
pop
xchg
sar
shl
fs
retf
pop
pop
sbb
jmp
int3
das
imul
(bad)
nop
sbb
pop
out
mov
enter
mov
shrd
mov
mov
sub
loope
out
inc
mov
std
push
pop
ins
jmp
push
call
in
or
add
movs
add
out
add
fucom
lahf
das
inc
add
cmc
pop
lahf
dec
sbb
popa
cmp
in
sbb
xchg
test
hlt
jle
xor
popf
scas
ret
dec
push
cmp
loop
cld
mov
aaa
aaa
inc
int
mov
cmp
sti
xchg
lds
(bad)
sub
jmp
xor
dec
push
mov
nop
jecxz
cmp
adc
or
adc
mov
dec
jl
rcr
sbb
jp
jbe
xchg
or
and
mov
pushf
enter
aad
xchg
jmp
and
fbld
sbb
jno
loop
pop
cmp
jl
mov
in
cmp
hlt
add
icebp
inc
xchg
call
cmc
std
jbe
mov
ss
dec
call
mov
scas
(bad)
aad
jne
cmp
sti
aaa
imul
loopne
loope
pop
rol
add
xchg
out
int3
cwde
xor
iret
mov
scas
jae
pop
inc
add
repnz
mov
pop
mov
xor
adc
aam
adc
ficom
rcl
cld
test
imul
sbb
mov
je
hlt
clc
jnp
movs
jg
adc
aas
jecxz
loop
and
ja
popf
pushf
loopne
xchg
loop
into
out
fcmovnbe
shl
adc
pop
xor
push
xchg
mov
push
aam
pop
xor
lock
sbb
mov
fidivr
mov
pop
or
lds
xchg
ja
stc
mov
or
add
stos
xor
sahf
xchg
xchg
pop
xor
cli
pop
push
(bad)
sub
scas
in
ins
mov
arpl
or
inc
mov
in
push
xor
push
loopne
shl
or
jno
clc
movs
mov
(bad)
push
lods
jbe
mov
pop
push
stc
cmp
loope
in
jns
aas
mov
xchg
pop
je
sahf
or
repnz
stos
dec
mov
mov
add
dec
arpl
mov
push
aas
mov
push
mov
fs
leave
jle
dec
rol
sub
inc
add
add
jmp
pop
mov
sub
xchg
(bad)
aam
fistp
inc
mov
mov
pop
retf
pop
mov
jle
sti
and
mov
adc
stos
xchg
call
mov
and
mov
and
leave
in
fdivrp
loop
(bad)
je
cmp
mov
loope
pop
int3
push
xchg
sub
mov
int3
cdq
xchg
fxch
aaa
das
test
cld
xor
add
mov
jge
cmps
test
or
fisubr
sub
jmp
(bad)
ds
cmp
jle
dec
repnz
and
cmc
cmp
dec
movs
inc
not
scas
call
or
in
inc
inc
jmp
add
jg
and
(bad)
fldenv
adc
int3
imul
out
fidivr
repnz
pusha
dec
ja
out
int
test
adc
in
adc
sub
jnp
jmp
ret
pop
popf
sbb
and
push
out
dec
fdivr
push
sub
push
sub
cmc
sub
adc
loopne
add
ss
mov
gs
push
push
int3
push
ret
not
inc
adc
mov
sbb
jb
jle
fldenv
adc
mov
or
clc
add
cmc
mov
call
out
fisttp
add
mov
jno
add
add
sbb
dec
jg
xchg
sahf
popa
sub
stos
aaa
out
nop
into
(bad)
pop
xor
outs
push
arpl
push
add
test
pop
data16
add
cli
nop
in
cmp
mov
sub
(bad)
push
mov
out
xchg
mov
cmps
sub
div
aam
mov
fiadd
xchg
ret
ret
jmp
mov
stos
loop
adc
test
loopne
mov
(bad)
mov
or
(bad)
cmp
fdivr
push
pop
or
test
pusha
add
xor
scas
xor
push
in
ja
inc
push
pop
cs
fwait
sbb
daa
int
int
jp
dec
aas
lea
xor
mov
(bad)
lock
je
mov
sbb
rcl
mov
data16
out
push
int3
pop
push
pop
mov
mov
js
pop
mov
movs
jne
mov
mov
cmp
pop
aaa
scas
loop
fidivr
sbb
pop
lds
inc
movs
lds
jmp
or
out
je
push
cmp
pushf
sbb
loope
neg
add
adc
cmps
icebp
and
inc
ret
jbe
lods
fbld
dec
sbb
fcomi
xchg
outs
fld
scas
add
movs
popf
cmp
mov
lea
mov
inc
rcr
jmp
fmul
push
ficomp
push
icebp
rcl
bound
aaa
mov
stos
or
push
movs
inc
cmp
leave
dec
xor
pop
leave
fimul
mov
sbb
retf
addr16
mov
xchg
xor
lahf
sub
loope
aam
mov
push
pop
mov
mov
cld
xor
add
mov
sahf
cld
and
lods
out
push
iret
fldcw
enter
sub
test
inc
push
das
inc
push
and
jecxz
mov
and
pop
jno
mov
fnsave
es
mov
inc
shr
mov
mov
and
and
push
and
jae
les
mov
jae
mov
div
imul
sub
stc
sub
shl
stos
or
fidiv
sbb
mov
sti
aam
and
ret
ret
dec
outs
or
sar
scas
fstp
lods
push
shr
retf
adc
test
xor
mov
mov
aad
lahf
push
dec
(bad)
adc
or
inc
inc
mov
cmp
arpl
mov
leave
mov
imul
sti
jmp
jmp
pushf
lods
mov
cwde
push
imul
out
sub
mov
mov
adc
jbe
(bad)
mov
jne
mov
xor
push
add
out
mov
xchg
lods
jmp
xchg
mov
mov
lahf
daa
xor
mov
addr16
dec
pop
mov
jle
daa
sbb
and
xchg
and
or
push
inc
(bad)
(bad)
scas
push
cmps
call
paddsw
shr
ins
cmp
mov
prefetch
or
sub
mov
inc
inc
das
xchg
push
xor
retf
call
inc
xchg
and
pop
test
mov
jbe
add
xchg
js
rcr
mov
(bad)
cwde
xchg
push
ins
xchg
jg
arpl
add
and
adc
aas
into
inc
test
out
cmp
adc
test
leave
fcom
retf
repnz
aas
jp
fnstenv
int
movs
das
xor
mov
ja
imul
in
shl
test
push
mov
mov
imul
sub
or
inc
int3
and
add
test
sbb
add
neg
mov
cld
jbe
mov
xchg
js
lods
mov
mov
gs
xchg
jmp
into
mov
cmp
pushf
aaa
stc
outs
(bad)
stc
pop
aam
or
outs
xchg
cmp
ror
lods
mov
hlt
or
and
test
int
dec
push
stc
add
(bad)
arpl
div
das
mov
scas
push
xchg
shl
mov
aaa
adc
arpl
mov
inc
arpl
ja
pop
rcr
in
fstp
mov
ins
mov
popf
or
scas
adc
fsubr
ins
xchg
ins
dec
jns
movs
aad
in
pop
ds
jmp
xor
jp
ficom
sbb
js
aaa
sub
mov
mov
shl
xor
test
loope
pop
fincstp
hlt
loope
cli
mov
mov
imul
fdiv
addr16
lods
in
pushf
inc
pop
inc
cmp
xchg
stos
xor
repz
add
cwde
test
xchg
sar
dec
out
movs
retf
pop
imul
ror
test
std
ja
(bad)
fld
popa
and
push
or
ins
das
(bad)
jg
xchg
mov
cli
jo
in
adc
dec
adc
(bad)
fild
inc
fndisi(8087
mov
xchg
ds
or
push
dec
mov
mov
sbb
pop
stos
adc
pop
inc
mov
or
add
xchg
adc
loope
mov
ss
rol
mov
lahf
repnz
cmp
rcr
cwde
add
push
cs
sbb
scas
lahf
sub
ja
cmp
neg
dec
clc
pop
test
clts
mov
(bad)
cmp
push
les
push
xchg
jge
cmp
aaa
lahf
sbb
lds
call
imul
lds
fdiv
adc
jns
dec
or
call
retf
jo
sbb
aas
push
imul
fisub
push
shr
sti
ret
(bad)
aaa
ins
hlt
mov
push
in
not
fsub
lods
aad
mov
push
jno
fbld
mov
pushf
je
scas
lds
jge
fcom
test
js
mov
aas
iret
and
hlt
inc
out
je
xor
nop
and
data16
pop
mov
inc
aas
icebp
stc
mov
addr16
lods
pop
mov
loope
sbb
dec
lock
adc
dec
movs
pop
ret
jmp
cli
cmp
and
mov
mov
test
aas
dec
mov
and
ret
fsubr
mov
push
mov
sub
mov
outs
es
cs
dec
jae
pop
mov
ins
mov
add
push
sub
inc
int3
mov
gs
mov
imul
cmp
mov
mov
int
mov
xchg
das
inc
and
sbb
sar
in
mov
mov
test
mov
xchg
int3
xchg
adc
int3
mov
push
jg
or
test
mov
ins
or
mov
stos
inc
push
dec
sub
aad
ins
mov
add
push
movs
pop
pusha
mov
iret
bound
dec
or
stos
pop
mov
aam
mov
lahf
cmp
outs
bound
sub
pop
lock
jge
aad
or
fldcw
stos
mov
fwait
sbb
or
jp
(bad)
xor
outs
and
hlt
nop
repz
or
out
loopne
sub
cmp
iret
inc
sbb
mov
mul
mov
(bad)
in
or
jle
vminsd
data16
sub
mov
rol
and
enter
fstp
pop
js
xchg
pusha
xchg
cmp
adc
(bad)
leave
push
aam
or
daa
or
add
ficom
aad
mov
jb
or
mov
imul
hlt
mov
clc
mov
cwde
int3
cld
int
mov
aam
push
jne
inc
push
add
fild
pop
push
or
mov
fcmovnbe
popf
std
movs
xrelease
sbb
ds
pop
and
js
aam
jmp
(bad)
out
mov
addr16
jo
and
into
pop
sub
fs
mov
jle
sub
sub
push
xor
mov
movs
pop
pop
jg
(bad)
sub
in
push
(bad)
pop
adc
add
dec
sahf
jmp
daa
push
pop
(bad)
push
sub
or
mov
jmp
icebp
out
rol
rcr
dec
adc
scas
and
fist
add
das
xchg
dec
or
mov
enter
dec
sbb
out
loope
loope
push
(bad)
not
iret
inc
and
aam
inc
loope
popf
in
mov
xchg
pop
mov
scas
jno
inc
sbb
mov
add
and
nop
imul
shl
repnz
xor
cmp
out
ror
retw
je
cmp
rcr
mov
xor
push
push
push
(bad)
xor
lahf
ss
cmp
inc
xchg
imul
or
fild
mov
push
iret
test
gs
pusha
cs
cwde
mov
lock
bound
(bad)
mov
out
lea
cmps
push
das
cld
xchg
sbb
int3
or
inc
sbb
ss
mov
idiv
push
or
sub
adc
sub
sahf
jnp
aam
push
push
mov
nop
rcl
ret
mov
xor
dec
dec
es
jmp
mov
push
int
dec
push
outs
jle
adc
je
clc
je
aam
movs
push
mov
nop
sbb
fs
shl
cmps
sub
adc
jo
cmp
loop
cmp
jmp
mov
dec
outs
jmp
dec
pop
cmovbe
mov
movs
enter
imul
mov
xor
push
xor
ss
adc
pop
cmp
(bad)
push
and
ja
outs
test
cmp
mov
sbb
pop
pop
xchg
pop
adc
aad
test
push
adc
jmp
loope
mov
imul
push
call
data16
sbb
mov
ret
dec
clc
jb
outs
and
dec
jp
adc
les
jmp
(bad)
fdivr
xor
ret
js
imul
jecxz
push
inc
and
cmp
test
ret
and
imul
sti
mov
mov
leave
jb
nop
outs
out
jmp
sub
mov
xchg
xor
nop
dec
mov
sbb
xchg
ds
outs
ins
in
mov
ret
(bad)
test
scas
scas
cmp
mov
inc
mov
add
call
loope
stos
jecxz
popa
loope
rcl
mov
push
movs
arpl
call
(bad)
pop
xchg
pop
fabs
xchg
mov
pop
inc
int
stos
mov
scas
pop
ror
out
jecxz
xor
nop
and
pushf
and
pop
push
es
add
out
cmps
dec
cmp
ja
xor
bound
jmp
retf
mov
sbb
cwde
stos
sbb
scas
dec
mov
iret
xor
jmp
jo
rcr
xlat
rep
pop
test
cmp
fld
pop
push
call
and
js
cmp
loope
adc
pop
mov
ret
sbb
xor
and
clc
retf
and
cdq
stc
pusha
movs
mov
iret
dec
addr16
fmul
jo
or
call
in
les
jns
cmp
loope
pop
sahf
jae
pop
jns
fnstenv
jle
hlt
sbb
mov
aam
pop
xor
fistp
fwait
daa
addr16
(bad)
fnstenv
add
out
mov
xchg
mov
sbb
ret
outs
pop
xor
xor
mov
push
jmp
pushf
jl
std
sti
movs
mov
dec
and
jle
jo
adc
std
(bad)
repnz
out
ret
cmps
int3
inc
dec
(bad)
pop
mov
cmp
or
out
repnz
inc
inc
fisub
sbb
jg
sbb
cmps
ret
cmc
(bad)
popa
adc
dec
mov
rol
aaa
add
add
scas
stc
pusha
fistp
add
jns
nop
xor
out
cdq
fild
pop
mov
div
cmp
adc
jmp
adc
mov
push
sbb
jbe
arpl
fimul
sbb
movs
pop
sub
mov
addr16
es
aaa
lock
xchg
jnp
leave
out
data16
aaa
sahf
mov
xchg
sbb
cmp
and
pop
ret
test
mov
mov
sbb
enter
cmps
icebp
and
movs
fadd
inc
xchg
sbb
dec
mov
mov
push
dec
lods
stc
scas
mov
sti
or
xor
jns
cdq
sbb
add
inc
cmp
cmc
dec
les
test
imul
aam
or
(bad)
dec
xchg
inc
bound
bound
add
or
loop
adc
lods
(bad)
fwait
dec
out
inc
ins
mov
ja
lahf
jmp
repz
push
push
xor
int
bound
inc
pop
push
aas
hlt
push
aas
scas
and
jns
push
(bad)
lahf
jl
jne
mov
adc
rcl
fucomp
inc
or
jp
arpl
or
out
test
pop
std
xor
xor
repnz
push
push
inc
inc
sub
js
inc
adc
push
dec
das
nop
dec
xor
mov
in
pop
out
shl
xor
jne
add
data16
sub
jns
les
mov
fild
mov
mov
call
mov
add
pop
mov
(bad)
cmp
xchg
fdivrp
sub
je
into
sar
xor
xor
outs
idiv
mov
and
neg
add
mov
push
das
cld
mov
inc
aaa
push
inc
cs
imul
loope
mov
addr16
pop
sbb
xlat
ja
adc
push
cmp
in
mov
je
mov
(bad)
scas
mov
push
cmp
imul
sbb
inc
sub
jb
pushf
mov
add
ins
repz
or
inc
push
mov
ins
test
fild
xchg
imul
mov
inc
dec
inc
pop
mov
sub
fadd
push
std
pushf
jle
ss
xchg
movs
stos
inc
mov
pop
jge
push
pop
scas
push
(bad)
mov
and
add
outs
sbb
and
xor
push
inc
fs
jno
inc
(bad)
jb
shl
inc
inc
test
ror
dec
cwde
jno
and
sbb
dec
ret
leave
loop
cdq
shl
dec
adc
retf
push
mov
retf
mov
cmps
cmp
rcl
adc
cmp
dec
std
cmp
mov
int
das
fwait
test
clc
(bad)
movs
mov
push
sahf
es
cdq
or
fisub
rcr
ss
test
stc
mov
pop
or
cmp
(bad)
(bad)
ss
jne
sbb
mov
xchg
fcomp
retf
shl
dec
xor
lds
xchg
fcmovnb
sbb
std
adc
and
in
sbb
pop
stos
or
inc
fcmovu
adc
fnstsw
popa
pop
mov
ins
outs
mov
into
pusha
sbb
stos
cmp
sbb
or
cmps
test
fidiv
ret
outs
xor
in
xor
push
lods
pop
inc
pop
xlat
pop
jns
push
sbb
gs
mov
fistp
or
xchg
push
xor
jmp
cmp
mov
jmp
pop
cdq
call
(bad)
add
push
call
mov
jo
sahf
paddq
das
dec
pop
pop
and
out
cmp
jo
scas
(bad)
test
fstp
ror
push
(bad)
fisttp
lods
pop
pop
xchg
xor
mov
out
fst
mul
xchg
mov
jbe
fadd
lds
mov
aad
jmp
mov
mov
pop
shl
inc
test
das
mov
out
inc
mov
shl
add
movs
mov
sub
or
test
push
fldenv
lods
add
adc
(bad)
pusha
dec
pop
or
dec
(bad)
fstp
daa
xchg
fcom
jnp
jnp
sbb
cld
sbb
sub
cmps
push
mov
iret
mov
pop
sbb
xor
(bad)
cmp
jns
push
inc
scas
(bad)
cmp
pmaddwd
out
push
xor
push
jno
inc
outs
pop
loope
jno
jae
outs
loopne
jbe
mov
push
lahf
sub
xchg
js
aam
mov
jmp
mov
inc
(bad)
mov
jne
call
sub
ret
mov
dec
xchg
and
mov
mov
mov
ins
cmp
or
call
xchg
outs
sub
xor
mov
icebp
rcr
popf
push
sbb
and
push
aam
inc
out
mov
mov
pop
push
jo
cmp
xor
ror
out
xor
inc
js
int
xor
imul
xor
ins
mov
loop
in
dec
test
iret
pop
or
sub
push
in
jmp
jge
dec
(bad)
cmp
pop
sub
fisub
push
sar
test
mov
out
stos
fstp
or
loopne
(bad)
stos
or
clc
pop
adc
jno
ret
dec
jmp
(bad)
into
push
pop
in
mov
call
punpcklbw
ja
pop
cmp
lods
dec
mov
inc
into
outs
or
push
fdivr
sub
jmp
pop
call
xor
shr
mov
out
fild
pop
pop
popa
test
pusha
mov
cmp
hlt
jno
mov
or
cmc
out
pop
cli
scas
repnz
lods
mov
in
sahf
cmp
xchg
dec
cmp
jno
mov
push
mov
push
ja
and
add
repz
push
sub
push
sub
leave
pop
mov
retf
aam
sbb
retf
arpl
dec
ins
jae
call
pop
movs
repnz
in
mov
add
ror
jo
inc
in
fimul
and
mov
xor
mov
cmp
pop
dec
sti
shr
or
add
xchg
mov
adc
test
(bad)
xor
stc
sub
scas
mov
add
scas
jg
mov
ins
jno
cmp
pop
loope
rcr
pusha
and
sahf
or
mov
xchg
inc
popf
xchg
dec
cmc
cmp
lea
cli
js
repz
ret
imul
mov
and
lods
pop
pop
outs
retf
out
bound
or
xlat
lods
inc
ds
arpl
pop
push
sbb
xor
pop
fs
mov
jp
int3
ja
cmp
in
sub
enter
aaa
test
xchg
jge
xchg
aas
cdq
aad
clc
jo
push
aaa
adc
push
lods
lock
or
push
pop
mov
test
pop
invd
pop
inc
push
cli
jmp
mov
or
push
pusha
hlt
gs
cmp
ss
jns
aas
test
pop
inc
dec
mov
fdiv
(bad)
jle
adc
push
pop
fisttp
pusha
push
test
out
sbb
dec
pop
jg
rcl
cli
nop
das
repz
repz
scas
loopne
lods
pop
sub
fbstp
push
adc
ja
cmp
jne
lods
sub
jmp
sub
jle
repnz
fisub
jg
inc
add
push
dec
add
adc
push
adc
mov
sub
movs
loopne
or
shr
icebp
inc
jne
aad
(bad)
rol
push
sbb
xor
add
mov
push
xor
clc
mov
xor
adc
mov
lahf
sub
add
mov
mov
mov
fnstenv
push
sub
inc
push
sub
mov
pop
jp
in
pop
ja
fidiv
and
xchg
cmp
sti
outs
mov
dec
mov
pop
adc
in
mov
push
xchg
cs
and
adc
scas
les
mov
jecxz
pushf
cs
shl
in
mov
out
jl
dec
clc
jae
retf
push
dec
aad
nop
sbb
or
mov
sahf
sbb
imul
push
push
scas
fs
adc
bnd
pop
lock
add
leave
ins
mov
out
ja
sbb
dec
sub
mov
push
out
lods
jg
sti
imul
mov
aas
ret
mov
cmp
xor
lahf
imul
lods
in
jle
mov
jb
ja
inc
stc
xchg
or
adc
push
sysenter
jg
jno
ds
repz
jbe
fbld
test
into
cmp
jmp
and
xchg
shl
ja
(bad)
fs
pop
outs
pop
fsubr
inc
enter
mov
test
adc
das
out
add
sbb
sub
(bad)
mov
shl
adc
(bad)
mov
mov
mov
xor
lahf
cmp
jge
pop
jae
sub
and
int3
in
pop
lahf
push
addr16
mov
repnz
out
out
sbb
pop
retf
enter
fwait
es
scas
fisttp
cld
xor
shl
inc
lock
mov
jno
xchg
adc
mov
cmp
repz
xchg
mov
dec
gs
and
ja
mov
test
fcom
inc
mov
cmp
adc
jno
rcl
push
scas
push
sub
ret
jmp
mov
mov
sub
pusha
ds
fisubr
stc
test
mov
bswap
out
cmp
sbb
les
in
shl
add
pop
ret
mov
pop
test
je
jnp
lock
(bad)
dec
inc
sbb
or
ror
sub
jmp
mov
int3
(bad)
in
adc
and
shl
mov
push
(bad)
repz
imul
stos
xchg
rol
and
loop
mov
sahf
or
aad
sbb
jp
mov
adc
mov
dec
add
jmp
repz
scas
sar
mov
lea
adc
scas
adc
xchg
sub
jb
inc
dec
das
stos
rdtsc
push
pop
pop
push
cmp
add
arpl
sar
movs
repz
fcmovne
call
dec
inc
or
gs
inc
lds
out
adc
out
sub
xchg
sub
sbb
sub
ficom
pop
mov
out
sub
popf
loope
gs
sar
dec
jb
dec
mov
cmp
sub
sub
scas
mov
les
(bad)
mov
adc
out
aas
add
sahf
mov
aad
sbb
fmul
leave
xor
mov
je
in
mov
gs
ror
sbb
adc
int
mov
mov
aaa
in
mov
cmp
lock
inc
xchg
pop
aas
pop
rcl
mov
xchg
rcl
pop
call
mov
adc
add
callw
cmp
mov
or
cmps
movs
fcomp
inc
xor
ins
mov
mov
inc
xchg
inc
sub
pop
sbb
jo
jb
adc
or
shr
inc
aam
pop
xor
out
fcom
addr16
inc
int3
lock
push
push
lods
and
push
lahf
xchg
xchg
cmp
pop
adc
stos
pop
out
or
push
pop
push
aas
in
sbb
xor
cli
adc
mov
sub
lds
jecxz
stc
pop
pop
cs
test
push
mov
cmps
mov
les
mov
mov
jg
adc
je
xchg
fnstenv
mov
jmp
cmp
int
pop
repnz
cmp
and
(bad)
ja
mov
cdq
cmc
mov
out
sub
aas
push
imul
out
mov
cli
mov
and
sbb
nop
shl
mov
aas
lea
sbb
(bad)
fcmovnbe
(bad)
sti
dec
loop
xor
out
fwait
out
popa
cs
adc
jae
and
stos
movs
cmp
mov
popf
cmp
inc
lods
push
bound
mov
inc
cmp
mov
inc
inc
pop
xchg
sub
cwde
shr
test
jno
cwde
lock
xchg
sbb
(bad)
sub
add
fmul
pop
push
popf
mov
imul
imul
clc
ret
add
inc
dec
push
push
cmp
movs
and
sahf
dec
fsub
add
or
aas
mov
pop
shl
or
and
sbb
retf
mov
je
pop
push
or
lock
and
mov
mov
inc
fisttp
popa
lock
mov
adc
clc
jne
xor
mov
push
es
call
imul
shl
inc
into
int3
out
sub
ja
jp
mov
rcr
loop
mov
add
popa
ja
dec
pop
or
xchg
gs
arpl
cmp
or
es
(bad)
push
cmc
cdq
push
nop
ja
sub
je
inc
lock
adc
out
arpl
push
adc
dec
mov
ss
shl
test
mov
out
cmp
lods
sbb
or
inc
xor
ss
stos
sahf
or
xor
or
cmp
add
dec
iret
jne
(bad)
aam
aaa
loop
mov
and
ror
or
jo
adc
push
(bad)
call
mov
xchg
or
movs
stos
std
inc
jbe
xor
xchg
jmp
fadd
cmp
cs
ins
and
pop
das
sbb
cmp
cmps
and
xor
lahf
xor
pushf
or
adc
cmp
int
sub
dec
xchg
mov
adc
into
les
mov
cmp
sbb
adc
jno
(bad)
jmp
push
and
xchg
push
pop
loopne
shl
cmp
jp
je
mov
pop
(bad)
adc
mov
push
and
inc
test
xchg
jb
pop
mov
sti
inc
loop
arpl
fld
out
call
movs
fisttp
jle
aas
fcmovnb
mov
les
js
jae
fstp
inc
mov
sub
fisttp
fs
dec
xchg
mov
ins
div
cmps
scas
xchg
(bad)
rcr
adc
xchg
mov
jno
jae
js
js
sub
mov
sub
and
mov
std
xor
(bad)
pop
inc
pop
adc
popa
loope
pop
(bad)
xchg
test
enter
or
sbb
push
fnstcw
retf
ror
pop
or
das
sar
or
inc
jo
movs
inc
mov
adc
or
adc
add
fsub
or
inc
(bad)
adc
(bad)
out
sbb
sti
pop
mov
dec
pop
xor
dec
(bad)
in
out
in
pop
xchg
mov
dec
fstp
jg
int
repz
pop
data16
fcom
sub
loop
daa
jbe
cdq
popa
fimul
adc
push
and
mov
adc
cmp
and
retf
and
cld
test
add
loope
(bad)
or
or
inc
mov
and
push
(bad)
mov
mov
nop
pop
lds
out
dec
test
xchg
add
and
ja
mov
std
pop
jmp
sub
and
gs
jmp
shl
fisubr
(bad)
rcr
or
jge
imul
pop
add
pop
movs
(bad)
(bad)
in
mov
and
fcom
cmp
mov
mov
aaa
retf
sub
(bad)
pop
pop
and
stos
lds
push
out
je
pop
cmp
cld
xchg
sbb
scas
dec
jnp
xlat
mov
test
add
and
and
fst
dec
xchg
aaa
add
or
test
aaa
je
and
(bad)
and
imul
lods
pop
mov
ret
mov
adc
push
mov
(bad)
sub
hlt
mov
icebp
lds
inc
mov
sti
ins
dec
scas
int
mov
pop
xor
pushf
or
in
jbe
outs
outs
mov
sti
pop
xchg
scas
sar
ret
rep
inc
aad
(bad)
call
adc
adc
outs
adc
push
jp
jnp
or
or
or
push
and
cmp
pop
int
mov
mov
inc
pop
data16
sub
and
xchg
jle
ss
pop
inc
inc
shr
ss
sahf
mov
sti
mov
out
lahf
mov
pop
test
inc
mov
xchg
int3
xchg
or
inc
pop
js
push
ror
int
inc
jmp
xor
pushf
mov
mov
retf
push
or
(bad)
xchg
aam
jbe
sub
sub
cmp
xchg
enter
sbb
push
ficom
cmps
jbe
jno
sbb
stos
fistp
scas
cli
addr16
push
cmc
clc
std
ss
xchg
std
test
push
out
adc
push
pusha
mov
push
xchg
and
lds
jo
sub
mov
mul
push
push
cdq
test
into
movs
cmp
outs
imul
(bad)
int3
mov
das
movs
shl
hlt
pop
ficom
iret
sub
icebp
nop
inc
mov
(bad)
fcom
les
cmp
xchg
mov
dec
aaa
cmp
mov
xor
jmp
stos
je
and
ins
cdq
das
cmp
mov
sbb
mov
mov
emms
call
push
push
xchg
es
push
dec
stc
xor
sub
mov
inc
xchg
fld
in
movs
std
add
jno
stc
dec
xchg
pop
lahf
fcos
mov
cs
(bad)
(bad)
ss
push
add
dec
mov
or
dec
jmp
cs
add
lds
data16
movs
mov
dec
pop
pop
in
add
test
pop
int
bnd
ror
fdivr
movs
push
mov
mov
je
mov
fmul
inc
movs
test
cmp
test
and
mov
push
push
xchg
stc
nop
inc
std
sbb
cmp
jo
cmp
jecxz
jb
jle
cmps
imul
aaa
sub
dec
cmps
(bad)
adc
ins
sar
xchg
add
adc
mov
addr16
inc
imul
xchg
jecxz
sbb
into
pop
or
add
sbb
xor
and
(bad)
cmp
test
js
xchg
ins
into
shl
push
or
(bad)
fadd
aaa
lahf
xchg
mov
loopne
xchg
aam
and
or
add
cdq
iret
aas
xor
add
dec
add
into
es
mov
and
stos
das
jbe
inc
loope
xor
xchg
(bad)
jmp
fs
pushf
call
add
sub
repnz
and
adc
adc
out
mov
rol
push
loopne
imul
sti
inc
adc
sub
cld
or
pop
in
rcr
and
pop
or
and
test
inc
int3
lods
fisttp
push
xor
add
and
jne
mov
push
leave
ds
test
in
(bad)
and
and
popa
std
out
int
ds
arpl
cdq
mov
inc
jg
retf
bound
fadd
and
lahf
loopne
adc
mov
retf
retf
addr16
out
outs
sti
jo
push
stc
adc
pop
or
out
outs
inc
mov
rcl
ins
inc
dec
movs
pushf
sbb
jp
jne
std
fldl2e
call
aam
pushf
inc
lods
lods
icebp
mov
and
cmps
test
mov
or
jp
fisttp
adc
aas
rcl
ja
or
push
repnz
loope
sti
dec
out
in
ins
sti
in
and
and
enter
ret
fisub
cld
mov
ret
mov
ficom
jb
jmp
(bad)
icebp
mov
cmps
and
or
arpl
mov
sub
cdq
rol
adc
xor
div
fwait
shl
(bad)
push
rcr
add
inc
jbe
push
jbe
mov
out
mov
out
sbb
sub
repnz
xchg
movs
mov
outs
jmp
push
dec
xlat
push
and
inc
sub
push
pop
mov
jb
jno
(bad)
iret
je
push
mov
dec
call
add
adc
cwde
pop
jl
mov
push
outs
(bad)
adc
iret
and
mov
mov
mov
pop
dec
mov
jnp
or
aaa
bound
stc
fcom
jb
(bad)
cmc
test
pop
shr
sbb
cld
mov
fstp
mov
es
lahf
shl
mov
xor
aaa
pop
inc
sub
mov
mov
push
and
sbb
push
cld
xchg
push
mov
mul
push
jns
inc
push
jnp
cmps
fist
clc
dec
idiv
sub
xchg
push
mov
stos
mov
lds
mov
iret
call
stc
pop
pop
push
shl
adc
add
pop
in
fldenv
les
in
push
arpl
adc
jb
adc
nop
in
jb
jmp
test
out
mov
or
les
dec
rcr
nop
jle
pop
adc
mov
sub
dec
call
cmp
pop
addr16
retf
pop
inc
add
sub
or
movs
jae
jmp
(bad)
mov
push
mov
jne
jge
daa
(bad)
fninit
sbb
cmps
xor
out
mov
ret
ror
xchg
inc
repnz
cmp
pusha
outs
test
push
jb
inc
push
popa
popa
addr16
mov
outs
scas
mov
jl
jb
call
push
lods
add
retf
adc
sar
push
cli
out
sbb
jo
mov
retf
ja
push
into
aad
retf
hlt
cdq
cld
nop
adc
mov
push
cmp
hlt
idiv
dec
pop
and
out
mov
mov
mov
jns
fdivp
add
mov
sti
xchg
adc
and
inc
sbb
test
call
cmp
out
xchg
lods
es
mov
inc
int3
stos
lods
add
lahf
(bad)
into
rcr
cmp
sbb
push
test
pop
mov
pop
outs
loopne
and
sar
loopne
xchg
call
icebp
push
add
mov
sbb
xchg
or
or
xchg
sub
dec
xchg
out
loop
clc
xchg
jecxz
fcmovbe
call
mov
and
mov
or
xor
dec
push
xor
inc
les
sub
bound
fmul
sub
mov
test
push
and
hlt
sub
mov
cli
xchg
in
fisubr
mov
mov
jns
cli
mov
je
adc
jp
or
cmps
dec
ret
test
ja
sub
mov
jbe
loopne
test
pop
pop
jb
into
sub
ret
sub
iret
pusha
cmp
and
jae
retf
cmp
adc
out
or
lahf
pusha
pop
sbb
jp
cmc
push
cmc
or
scas
stos
mov
adc
inc
sub
cmp
fisub
pop
les
xchg
rol
dec
push
fsubr
jo
nop
add
pop
arpl
cdq
out
pop
xchg
loope
add
mov
popa
mov
inc
repz
ret
aaa
repnz
mov
cmps
into
mov
pop
outs
pop
das
and
jg
jl
inc
push
push
push
pusha
cwde
and
fsubr
xor
or
scas
cmc
mov
aad
mov
lds
cli
cmp
or
inc
repz
test
cmp
lods
dec
inc
xor
cdq
adc
push
mov
cmp
or
imul
mov
mov
data16
(bad)
push
dec
mov
and
rcr
and
cmps
scas
xchg
inc
aam
or
(bad)
cdq
inc
arpl
push
ins
xor
(bad)
fldcw
xor
jle
inc
jns
jl
movs
sbb
rcr
mov
add
adc
test
jb
popf
frstor
mov
aaa
aam
and
inc
mov
data16
mov
popa
retf
mov
and
ins
dec
sbb
pop
shr
and
mov
xor
sahf
lahf
or
add
add
cs
xor
cmp
push
xchg
and
or
(bad)
std
mov
and
adc
mov
push
jp
pop
out
inc
inc
cmp
cdq
ins
ret
mov
xchg
outs
test
dec
in
hlt
test
int3
mov
call
push
lea
vmulsd
test
cld
jns
icebp
repnz
aaa
fdivr
aaa
cmc
enter
ja
dec
sbb
adc
frstor
add
test
lock
pop
lea
push
inc
jl
sar
inc
js
fsubrp
dec
sub
cmps
sbb
sti
cli
and
or
(bad)
mov
rcr
loop
cmp
test
fdiv
jp
test
mov
fs
xchg
mov
ja
lods
pop
cmp
sub
sbb
scas
int3
lods
(bad)
movs
sub
jb
lods
test
stc
popa
push
in
or
adc
xor
add
popf
pop
xchg
lods
mov
mov
repz
pop
cmp
pop
aam
cmp
jo
cli
mov
gs
sbb
fistp
and
sub
in
ficom
loopne
and
pusha
sar
and
push
adc
inc
xchg
xchg
int
push
mov
test
xlat
push
js
xchg
js
test
cmp
xchg
stos
adc
add
sahf
jle
mov
imul
pop
clc
or
daa
adc
push
adc
pop
out
sub
xchg
in
stc
mov
cmps
aad
ret
adc
lock
fimul
out
mov
cdq
adc
stos
(bad)
fcom
xchg
movs
lods
push
inc
retf
int
push
adc
xor
cmp
shl
sub
(bad)
jl
imul
ja
cmp
rol
movs
out
push
and
sahf
xchg
repz
push
or
sub
rcr
into
push
xor
aam
fucomp
xchg
sbb
jp
mov
stc
dec
(bad)
jg
lea
mov
jnp
mov
xor
ret
inc
sbb
les
mov
pop
xchg
in
xor
jl
ret
or
setl
in
js
(bad)
fld
dec
xchg
pop
gs
xor
test
push
mov
jns
out
sahf
nop
cwde
cmps
in
(bad)
xor
pusha
repz
sbb
inc
(bad)
loopne
adc
repnz
int
es
inc
mov
loopne
outs
xchg
or
or
xor
mov
int
lods
sub
sub
pop
out
(bad)
pop
adc
in
loop
rol
mov
cwde
sti
push
pop
ja
cmp
aas
cmp
dec
xchg
sub
iret
scas
sub
and
sbb
or
cmp
adc
push
dec
popf
add
popa
xlat
sahf
hlt
enter
add
adc
pop
adc
jecxz
adc
fist
jbe
call
mov
and
jbe
fld
loope
xor
adc
push
stc
cmp
sub
or
pop
movs
adc
fsubr
(bad)
sub
mov
push
mov
mov
fucomp
mov
xor
inc
pop
cwde
xchg
ror
imul
pop
cwde
imul
and
jb
xchg
ins
xor
mov
retf
sub
adc
cmp
cli
scas
outs
or
rcl
clc
je
push
and
ss
xor
mov
pushf
sub
fisttp
je
mov
je
mov
pop
stc
(bad)
lock
jecxz
jmp
outs
movs
ja
jo
xchg
jbe
push
imul
and
pop
or
dec
stc
dec
lahf
scas
jmp
cmp
nop
lahf
push
adc
fidiv
sti
mov
lods
add
push
test
xchg
scas
imul
hlt
fldenv
xor
jg
sbb
das
into
loope
imul
adc
gs
xor
ret
sahf
lea
dec
cmps
cmc
and
mov
out
aaa
ins
xchg
sbb
popf
mov
dec
ja
pop
fiadd
ret
out
mov
loop
add
or
cmc
in
xlat
cwde
dec
out
loope
outs
pop
icebp
shl
cmp
cwde
sbb
fwait
push
shl
jmp
jmp
pop
sbb
mov
dec
mov
out
adc
xchg
test
push
outs
arpl
scas
sahf
jecxz
sbb
cmp
aam
or
sbb
shl
jo
cdq
inc
stc
cmp
cmps
std
sub
jmp
pop
(bad)
sbb
cmp
adc
lea
or
movs
test
dec
sbb
mov
xor
cmp
push
and
dec
addr16
loop
into
push
mov
cmp
fmul
mov
sub
add
daa
and
retf
enter
call
mov
jg
push
pop
pop
mov
nop
mov
pop
mov
sub
test
or
fbstp
je
mov
push
xchg
dec
outs
fld
and
lods
aam
add
mov
ret
dec
data16
adc
mov
adc
lock
imul
push
sbb
popf
test
jns
push
sbb
jge
xor
push
cli
xor
pusha
or
cmps
push
cs
dec
movs
ret
jae
jmp
cmp
or
xor
mov
dec
pop
mov
xchg
sub
movs
pop
scas
xchg
call
sub
mov
iret
push
movs
cmp
into
mov
call
jle
into
ds
push
shl
fs
and
sbb
adc
pop
and
mov
xor
dec
mov
lds
icebp
inc
sar
or
fdiv
or
mov
cld
mov
out
dec
aam
loop
lds
aaa
loopne
cmp
pop
retf
or
inc
adc
out
sub
xchg
pop
jle
or
push
mov
ss
push
scas
or
enter
jecxz
pop
mov
scas
xor
inc
loop
dec
inc
daa
dec
add
pop
stos
jle
(bad)
sbb
xchg
fild
data16
cmp
and
mov
jle
mov
daa
sbb
ror
sub
cmp
mov
cmc
mov
loopne
mov
(bad)
lds
test
xlat
sbb
call
xchg
push
cmp
mov
jne
mov
dec
jmp
push
fdivp
test
in
add
dec
mov
fisttp
mov
add
jbe
out
stc
pop
cmp
inc
jnp
mov
inc
ins
into
xchg
scas
ror
fwait
je
push
xchg
rol
cld
jb
inc
cld
enter
sbb
mov
call
out
test
in
icebp
loope
push
push
sub
movs
out
mov
daa
jbe
iret
outs
dec
push
dec
xchg
cmps
cmp
and
enter
mov
push
jb
iret
into
loop
and
popa
loope
rcr
icebp
imul
hlt
inc
jle
fdivrp
push
sbb
sti
call
push
int3
jge
cli
sbb
mov
ins
mov
mov
dec
pushf
(bad)
fadd
xchg
rcr
les
mov
rcr
idiv
pop
adc
and
xchg
retf
scas
mov
add
dec
push
ins
xor
fcos
push
sahf
fistp
cmp
inc
or
or
pop
pop
call
sbb
stos
mov
jmp
jp
push
and
enter
cwde
adc
imul
int
adc
call
inc
mov
push
jbe
inc
pop
xor
dec
fisub
ret
lds
pop
test
jmp
popa
cmp
daa
xchg
mov
jl
(bad)
movs
in
push
pushf
xchg
dec
inc
pop
dec
sub
mov
not
pop
rcl
lock
pop
sbb
jmp
and
imul
adc
adc
pop
(bad)
in
test
bound
fcmovbe
adc
xor
jb
hlt
inc
dec
or
test
push
ficom
icebp
lods
ret
jge
int3
call
inc
(bad)
push
push
iret
mov
rep
(bad)
cwde
jl
aas
jb
pop
mov
xchg
movs
fdivr
inc
loop
scas
mov
and
ror
and
mov
imul
cdq
xchg
cwde
bnd
and
and
(bad)
addr16
xor
inc
mov
into
daa
dec
mov
xchg
jne
mov
push
lods
mov
jmp
(bad)
push
fwait
and
adc
call
cdq
dec
ja
mov
loop
inc
rcl
shr
fnstsw
lods
cmps
sub
pop
jbe
(bad)
loopne
into
xor
or
fild
jg
cs
adc
das
xchg
sti
mov
dec
dec
jo
(bad)
lock
and
mov
lods
adc
pop
or
mov
shr
cmp
inc
cmp
fprem
jb
ret
xchg
nop
fcmovnb
mov
icebp
out
ret
sbb
or
xchg
push
(bad)
add
xchg
push
(bad)
sbb
cdq
jecxz
(bad)
mov
gs
add
mov
pop
stos
(bad)
jmp
ja
adc
xor
cmps
pop
cmp
je
jbe
shr
jo
mov
nop
xchg
dec
sub
sbb
icebp
sub
(bad)
addr16
push
fisub
leave
pop
js
ret
sti
jbe
lods
fistp
(bad)
loop
out
fwait
shr
push
fcomp
clc
mov
xchg
rcr
lods
cmp
pop
adc
les
or
cmp
pop
mov
mov
fs
ja
sub
in
jae
hlt
add
into
sbb
rol
sbb
inc
jmp
fsub
mov
adc
iret
adc
test
cmc
cmp
lds
dec
push
mov
pushf
out
jle
outs
test
sub
sysexit
pop
aas
imul
mov
sbb
jnp
jno
sbb
pop
int
out
ret
data16
loope
xlat
ja
retf
jmp
adc
mov
iret
add
aas
sub
loopne
loop
repnz
xchg
add
sbb
add
fwait
es
add
leave
xchg
bound
cmps
adc
fs
cld
retf
jae
xchg
test
mov
sbb
call
iret
xchg
dec
sbb
in
shl
xor
jmp
in
jo
adc
mov
aad
scas
fisub
arpl
aas
dec
push
jl
into
mov
or
sbb
push
xor
mov
mov
mov
popa
(bad)
(bad)
sti
dec
lock
in
xor
enter
outs
loop
pop
cdq
into
sub
pop
aas
ins
cmps
add
jmp
xor
cmp
xchg
out
push
out
adc
(bad)
out
pop
cmc
add
inc
mov
push
inc
imul
xchg
stc
dec
mov
pusha
(bad)
sub
cmp
xor
mov
inc
xchg
mov
inc
sbb
movs
cmp
movs
and
dec
push
inc
dec
minps
scas
inc
retf
test
mov
mov
in
lock
pop
mov
popf
jp
gs
fwait
test
call
fisttp
cs
inc
test
loopne
rcr
push
loopne
lar
mov
movs
(bad)
pop
data16
(bad)
mov
ins
push
ins
imul
lds
or
cmp
imul
xor
mov
jmp
loope
jae
adc
cmp
pop
sub
add
iret
hlt
in
mov
(bad)
ins
arpl
adc
js
adc
add
pop
movd
and
push
fcomp
jp
adc
sub
jb
aas
retf
sahf
adc
push
or
rcr
outs
push
test
pop
movs
cmp
fidivr
jo
(bad)
pop
stc
pop
aaa
cmps
leave
inc
ret
cmp
retf
js
jle
inc
je
mov
sub
cmp
ret
mov
mov
or
xor
movs
xor
shl
xor
inc
out
js
enter
mov
cld
and
call
push
addr16
adc
in
mov
int3
xchg
adc
pusha
sub
lock
dec
xor
imul
fdiv
adc
add
loop
and
xor
cdq
cmps
ror
bound
lahf
xor
lock
mov
cmp
out
sub
add
fidivr
gs
jmp
sahf
add
imul
and
sbb
fsubr
popf
fdiv
fisubr
jmp
adc
or
adc
lea
sub
add
mov
cwde
std
cmc
jb
xchg
leave
sti
mov
push
or
mov
sar
jbe
test
mov
(bad)
sub
rcr
shl
fcomp
leave
gs
pop
(bad)
and
push
(bad)
push
sbb
jmp
jne
and
outs
(bad)
add
cwde
outs
fst
pop
pop
add
jecxz
in
and
inc
push
add
cmp
int
sub
add
xlat
sbb
and
jne
test
popa
test
int
stos
cs
fdiv
xor
(bad)
add
scas
fdivr
sahf
mul
ret
fwait
xchg
test
cmc
leave
mov
imul
lea
or
xchg
push
mov
das
push
in
xchg
clc
shl
adc
dec
xchg
and
mov
xor
jl
xchg
fist
sub
outs
or
or
push
icebp
pop
sar
ret
mov
lods
fnstenv
or
cmps
mov
test
(bad)
inc
mov
inc
lahf
push
or
stos
mov
retf
pop
cmp
xchg
in
inc
pop
popf
jle
pop
aad
aad
addr16
and
jecxz
push
imul
(bad)
scas
sub
enter
sbb
cmps
loop
or
call
and
jle
xor
jl
add
test
add
arpl
sub
jmp
mov
fsubr
push
add
dec
xchg
and
retf
daa
outs
and
ds
jae
xchg
xchg
sub
mov
xor
mov
std
in
fadd
inc
(bad)
sbb
aaa
in
fimul
retf
outs
xchg
stc
xchg
je
xchg
ja
sahf
cmp
xchg
ret
je
(bad)
shl
and
movs
ret
dec
sti
into
sbb
iret
mov
inc
ja
stc
inc
push
pusha
leave
pusha
or
mov
out
out
aad
call
ins
pop
jecxz
imul
inc
into
cmp
xchg
add
or
mov
or
mov
shl
jo
outs
push
dec
loopne
and
push
sub
dec
sbb
and
repnz
sbb
repnz
gs
pop
jne
(bad)
leave
or
(bad)
scas
cdq
sti
(bad)
aam
paddw
push
adc
jae
add
xchg
jmp
jno
mov
push
arpl
mov
pop
adc
bound
mov
ret
aam
xor
push
jl
adc
outs
js
push
jb
cdq
sbb
push
xchg
cmp
call
add
fs
jb
clc
ja
pop
mov
inc
mov
iret
dec
push
push
cmps
imul
xor
cmp
xchg
sub
sbb
fisubr
inc
repnz
mov
outs
add
mov
cli
in
addr16
or
add
loop
inc
call
jbe
iret
les
mov
xlat
fisub
fidiv
inc
enter
sbb
sub
dec
outs
xor
leave
pop
push
cmp
loope
test
push
sbb
cmp
hlt
sub
add
push
add
inc
mov
jmp
gs
pop
cmp
xor
(bad)
aad
sbb
dec
clc
sbb
enter
add
cmp
jns
sbb
ds
sbb
sti
adc
push
and
xchg
mov
or
pop
cli
xchg
or
add
fld
cmps
popf
call
pop
enter
cmp
sub
xchg
xchg
ds
and
add
sbb
shr
repnz
jns
and
dec
sti
fsub
scas
pop
or
cdq
cmps
pop
cmp
and
nop
fldenv
xor
add
jl
daa
dec
je
and
or
cmc
cld
cmp
inc
xchg
mov
mov
adc
dec
arpl
mov
(bad)
clc
cmps
stos
pop
mov
cli
fisub
xchg
sub
mov
lods
nop
(bad)
jmp
jmp
je
mov
mov
outs
cmp
xchg
dec
out
cmc
imul
jmp
fs
push
test
jae
clc
add
cwde
nop
add
sbb
mov
icebp
pmulhuw
sbb
pop
adc
dec
or
pop
xor
sahf
push
stos
xchg
xor
call
retf
pop
imul
xor
int3
out
add
xor
rcl
sbb
xor
add
and
and
fs
jns
lods
sub
loopne
lahf
jnp
les
nop
adc
jno
xor
pop
test
cmps
nop
inc
aad
push
sub
or
frstor
cmps
xchg
fdivr
addr16
(bad)
ret
add
(bad)
push
jle
adc
jo
jge
sub
sahf
ins
push
or
addr16
(bad)
(bad)
inc
ins
xchg
sub
jge
test
xor
cmp
loopne
jb
jmp
stos
ins
fstp
ja
and
push
mov
dec
enter
sar
mov
adc
sbb
movs
ins
rcl
and
jmp
cmc
mov
pusha
pop
std
out
push
adc
fs
popa
mov
mov
mov
sti
jnp
gs
mov
(bad)
or
ins
fst
xor
mov
adc
in
dec
mov
xchg
fldenv
dec
nop
mov
shr
movs
or
pop
mov
fcom
rcl
fs
mov
je
pop
into
mov
cmp
shr
adc
or
mov
fld
test
jmp
jmp
inc
out
aam
dec
cmps
xor
loope
mov
inc
push
outs
popa
push
in
push
mov
(bad)
cmp
fdiv
popa
ret
aam
xchg
and
jecxz
sahf
imul
or
xchg
mov
call
scas
xchg
inc
push
js
or
fwait
popa
test
cld
test
mov
sbb
test
sbb
call
rol
adc
in
jecxz
jmp
adc
or
movs
test
cmp
xor
pop
rcl
jg
jmp
sbb
pusha
int3
rcr
ins
inc
cmp
and
inc
outs
pop
adc
dec
mov
ret
mov
rcl
inc
leave
int
div
mov
jg
inc
mov
pop
in
cld
push
mov
movs
enter
jg
inc
pop
je
not
or
ins
pop
mov
add
into
aad
sbb
adc
into
push
or
dec
mov
pop
loope
or
pop
das
sub
lea
inc
sub
jno
or
jb
mov
sub
or
imul
lock
jle
out
cmp
aas
in
sub
ror
cmp
enter
cmp
data16
xchg
xchg
in
rcr
into
push
cli
ins
(bad)
mov
jle
ror
fsub
retf
cli
sbb
out
repz
mov
daa
lea
mov
dec
lods
jne
cld
pop
cwde
enter
mov
jecxz
push
aas
outs
adc
mov
pop
ins
test
sub
cmp
enter
out
(bad)
call
sub
movs
or
scas
iret
dec
sbb
shl
repnz
(bad)
cld
fsubr
pop
or
inc
in
adc
into
and
inc
or
sbb
cli
xor
les
stos
(bad)
test
cmp
leave
lods
repnz
popf
sahf
movs
xchg
daa
out
imul
pop
cli
jecxz
test
jno
inc
ins
inc
ins
mov
int
sub
enter
mov
mov
xchg
and
fiadd
scas
stos
int3
push
cmp
lea
push
(bad)
retf
mov
aaa
(bad)
mov
ins
mov
push
pop
js
aas
add
in
xor
nop
test
test
mov
cmp
sbb
or
mov
ror
add
sub
jbe
pop
pop
iret
mov
pop
mov
(bad)
(bad)
scas
popf
push
fcomp
cmp
mov
inc
mov
cmp
rcr
push
call
xchg
ja
xchg
shr
add
mov
icebp
inc
xchg
mov
(bad)
mov
lods
movs
cli
loop
fisub
into
cmps
mov
add
movs
rcl
int3
inc
mov
retf
push
arpl
test
lock
cmps
fadd
ret
pop
push
jl
cmp
cli
icebp
mov
addr16
jl
push
cmc
loopne
cmp
lock
fwait
jbe
mov
mov
or
mov
jb
push
ud1
aas
mov
mov
loope
sbb
loopne
cwde
(bad)
in
stos
jl
in
mov
mov
sbb
in
xchg
mov
xchg
ins
add
add
push
inc
in
xchg
mov
cmc
out
adc
cmc
std
lods
jecxz
fisubr
inc
adc
jge
mov
cdq
iret
aam
test
inc
cmp
add
lahf
xchg
popa
pushf
add
cmc
fnstenv
enter
rcl
ret
ss
out
mov
fisubr
push
sahf
add
jo
ja
xchg
mov
fisttp
mov
add
xchg
sbb
enter
repz
xlat
nop
les
add
xchg
nop
mov
xor
sti
push
and
jl
sub
ins
sti
jp
js
xor
(bad)
test
cmp
fcomip
pop
pop
inc
sbb
stos
out
sbb
add
jmp
jg
add
pop
pop
push
sub
call
fidiv
(bad)
cs
pop
iret
sbb
retf
jge
jg
sub
retf
pop
inc
push
mov
bound
scas
xor
or
out
fisub
push
sbb
in
or
and
addr16
dec
push
mov
(bad)
out
pop
inc
sbb
xchg
clc
movs
or
cmp
mov
add
jae
mov
lods
aaa
cdq
push
nop
pop
mov
inc
push
xor
jle
xlat
push
push
iret
xchg
mov
in
js
je
push
xor
stc
js
cmp
test
loope
jg
(bad)
aam
out
push
mov
dec
clc
inc
sub
sub
mov
push
cld
xchg
inc
out
adc
daa
xchg
dec
mov
or
pop
add
sbb
frstpm(287
add
mov
and
xor
repz
xbegin
xor
pop
or
and
and
mov
mov
mov
jb
cmp
xchg
imul
jg
pop
adc
mul
dec
and
add
and
cmps
cmps
repz
dec
xor
xchg
mov
adc
bnd
pop
xchg
jo
cmp
mov
in
push
pop
xchg
dec
xlat
add
fucomip
push
xchg
enter
aad
mov
and
xlat
out
or
rcr
daa
gs
dec
jae
rol
sub
jns
jp
fdivr
or
ins
sbb
imul
mov
fwait
sub
loop
fisttp
and
(bad)
scas
pop
mov
les
cmc
push
adc
xchg
fsubr
pop
int3
inc
mov
nop
jl
dec
adc
xor
int3
lea
push
(bad)
fs
int3
out
adc
imul
popa
sub
push
gs
jno
ins
in
pop
ins
adc
clc
mov
xchg
jno
mov
cdq
gs
mov
or
add
add
push
ss
mov
jne
cmp
dec
sar
cmps
div
sub
sub
or
(bad)
clc
jnp
mov
pop
dec
sub
xor
aas
out
outs
call
mov
sub
cmc
imul
push
and
scas
pop
mov
aas
clc
ss
cmp
test
movs
push
(bad)
xor
add
cmps
dec
lds
mov
fadd
or
pop
dec
(bad)
adc
jb
sbb
sub
test
xor
ret
dec
std
in
cmp
and
push
jg
sub
pop
fisub
shl
leave
into
xor
ins
sahf
(bad)
lock
stc
leave
mov
push
mov
shl
stos
xchg
out
repz
inc
(bad)
out
mov
stos
cmc
retf
xchg
stos
icebp
hlt
push
jp
aas
inc
push
fistp
pop
inc
sub
retf
fidivr
test
hlt
clc
popa
mov
lahf
adc
fnsave
cmps
mov
xchg
repnz
inc
aam
jmp
mov
es
cwde
push
dec
outs
pop
xor
(bad)
dec
enter
call
je
inc
jmp
(bad)
adc
sbb
pushf
popa
lock
jl
or
and
sbb
lds
dec
push
call
fdivr
inc
push
loope
test
pusha
hlt
push
cmp
xor
fiadd
jmp
(bad)
in
or
sub
sbb
psrlq
mov
mov
dec
xor
adc
lds
rcr
mov
fs
mov
jge
call
mov
pop
mov
fadd
jecxz
adc
loop
push
mov
retf
jle
bound
test
lods
aaa
jp
inc
mov
stos
pop
mov
fsub
pop
or
shl
mov
jp
jge
faddp
out
inc
in
loopne
mov
xor
add
xor
or
pop
fadd
call
cdq
sbb
adc
or
stos
inc
shl
inc
inc
rcr
inc
jb
in
idiv
mov
inc
enter
aaa
test
dec
mov
push
mov
jae
push
cmp
addr16
call
fsubr
scas
ins
pop
ins
outs
es
aaa
and
pop
mov
push
scas
or
mov
cmp
adc
ins
ret
mov
lahf
frstor
adc
sbb
pop
add
addr16
loope
daa
xchg
scas
dec
(bad)
es
mov
jmp
and
out
jmp
cmp
nop
pop
repz
call
sub
mov
dec
sub
(bad)
push
push
add
xor
add
(bad)
mov
and
lea
mov
mov
pop
cs
(bad)
pop
xor
ret
sahf
or
les
add
mov
sbb
cdq
es
out
aaa
fwait
jmp
xchg
xor
fs
movs
or
mov
push
mov
xor
xchg
jle
push
sbb
xor
sub
lea
adc
fistp
das
cmps
adc
div
sahf
cmp
push
into
sbb
(bad)
jnp
ja
bound
loop
mov
mov
je
pushf
push
xor
mov
and
cwde
cli
adc
cmp
jbe
mov
std
xchg
jp
js
cmps
jle
ret
stc
movs
mul
stc
cld
nop
loopne
loop
pusha
outs
cwde
mov
loopne
unpckhps
loop
rol
sbb
aam
pop
dec
mov
repnz
adc
push
mov
aam
repnz
fdiv
cmps
repnz
mov
adc
stos
jo
loop
xor
and
aad
pop
xchg
mov
mov
push
outs
in
test
pop
gs
xadd
sbb
icebp
sbb
add
pop
sub
cmp
ins
xchg
or
shr
add
fwait
mov
push
jb
fld
loope
add
mov
enter
and
(bad)
(bad)
fistp
xchg
sub
sub
adc
mov
ins
inc
add
scas
mov
add
mov
pop
xor
mov
sbb
icebp
sub
cmps
mov
mov
fs
inc
dec
std
ds
dec
sti
adc
mov
push
pop
rcr
(bad)
jmp
inc
cld
mov
movs
pop
jp
and
lea
cmp
sti
mov
(bad)
adc
out
test
daa
lods
std
dec
add
jle
scas
retf
out
xor
jp
xchg
ret
mov
enter
out
jne
sub
aas
adc
sti
fstp
aaa
aas
cmps
cmps
xor
dec
test
mov
outs
in
(bad)
mov
pop
mov
fild
mov
loope
mov
jecxz
xor
jae
(bad)
mov
int
sti
mov
pop
pop
jne
daa
jnp
in
sbb
inc
sti
pop
dec
addr16
call
sti
cmp
cs
xchg
test
rol
adc
in
inc
or
in
jle
test
dec
sbb
push
pop
fisttp
mov
ret
ja
pop
scas
es
jg
aas
adc
jmp
fcmovu
mov
add
push
adc
outs
daa
xor
cwde
sub
pop
push
nop
mov
mov
std
cwde
xchg
jp
fisttp
retf
lods
leave
xchg
mov
inc
or
push
adc
(bad)
test
shr
cwde
fldcw
mov
push
xchg
mov
aad
ss
enter
std
mov
jbe
popa
ret
repnz
das
mov
lock
xchg
ja
push
hlt
mov
or
xchg
aaa
jp
cmp
mov
iret
push
jg
xchg
xchg
adc
dec
push
mov
inc
pop
(bad)
imul
adc
aam
jmp
cmp
fwait
call
jae
bound
rcr
xchg
jns
sbb
add
xor
lahf
cmp
xor
mov
jne
hlt
sub
cmp
(bad)
cmp
jae
fisttp
sbb
mov
pop
les
inc
pop
cs
pop
out
loopne
or
retf
xchg
stos
mov
jmp
(bad)
cmp
stos
std
in
leave
addr16
mov
and
fstp
sub
inc
ficom
cmp
(bad)
in
imul
jecxz
mov
mov
mov
mov
fwait
pop
push
mov
mov
lods
xchg
push
mov
push
retf
cmp
cwde
cwde
aas
div
adc
mov
or
push
cmp
add
pop
mov
mov
mov
and
popa
aas
jmp
adc
xchg
or
cmps
mov
test
push
mov
push
inc
cs
xchg
push
inc
mov
in
xchg
sar
add
out
imul
in
add
xchg
pop
nop
(bad)
in
mov
jb
sbb
sub
mov
jge
ror
rcr
test
pop
add
sbb
sbb
icebp
ret
xor
shr
es
addr16
jmp
call
dec
gs
pop
dec
mov
mov
mov
pop
mov
mov
test
stos
retf
pop
fisubr
mov
cmp
(bad)
fcom
retf
stc
push
cli
test
mov
bndldx
xchg
out
repz
sbb
enter
shr
or
sub
add
add
jne
or
psubq
jae
xchg
sbb
sub
cmp
mov
cmc
or
push
push
sbb
xchg
adc
movs
leave
jbe
dec
sub
xchg
repz
out
sub
sbb
pop
cmp
fild
pop
and
xchg
or
and
ficom
xchg
neg
jl
and
aaa
dec
addr16
lock
xchg
sub
push
pop
sbb
push
pop
loopne
daa
repz
psadbw
cmp
push
mov
cmps
mov
push
movs
add
int
scas
push
ss
int
out
fisttp
movntq
jecxz
mov
add
add
repz
ret
jge
cmp
push
xchg
rol
xchg
ins
movs
repz
popa
add
fldcw
jecxz
xchg
(bad)
and
movs
nop
jmp
mov
cmc
out
jg
sub
cmps
pop
push
repz
fnstsw
mov
inc
dec
or
xchg
popa
call
jns
arpl
in
xor
push
cmps
dec
jbe
pushf
retf
jns
lods
mov
aad
push
dec
inc
xchg
mov
push
xchg
mov
mov
xor
push
or
repnz
(bad)
sub
inc
inc
(bad)
pop
nop
bound
lods
xchg
std
in
pop
popa
loop
or
cmps
and
fmul
mov
or
sub
jnp
jmp
cmps
scas
push
sti
xor
adc
sub
addr16
jg
sbb
nop
(bad)
aam
mov
lods
arpl
fs
xchg
faddp
xchg
mov
outs
test
mov
and
xchg
aaa
mov
sub
pop
aad
data16
lds
(bad)
ins
jge
or
push
lods
jmp
xor
fnstcw
and
mov
leave
dec
ja
mov
sub
mov
bound
shl
sbb
aam
dec
fisttp
jb
push
and
ret
sub
inc
jnp
adc
pop
sub
push
cmp
(bad)
enter
cmc
jecxz
jmp
mov
pop
fimul
inc
bound
out
jmp
mov
shl
aad
call
(bad)
rol
jmp
inc
dec
stos
or
lods
add
inc
adc
adc
pop
add
ret
adc
in
cld
jmp
xor
inc
lds
sbb
cli
call
sub
add
scas
xchg
xor
xchg
pop
retf
jp
adc
lods
loope
fild
movs
subps
sbb
and
js
push
(bad)
sahf
repz
lods
loopne
xor
adc
cmp
jmp
push
ror
or
pusha
fisubr
dec
fnstenv
pop
stos
cdq
jl
push
hlt
cmp
data16
test
adc
enter
rcl
retf
mov
push
inc
jae
fcom
pusha
push
sub
xor
jns
loope
sub
pop
hlt
mov
call
popa
dec
lock
add
pop
add
das
push
pop
fstp
push
pusha
lock
cmps
icebp
mov
mov
cmp
sub
push
xor
fst
mov
data16
in
scas
add
jnp
mov
and
xor
data16
adc
add
mov
and
sub
sbb
cmp
jmp
dec
ret
inc
sbb
xchg
in
xchg
jne
push
pop
cmp
out
mov
add
push
lock
lods
sub
(bad)
mov
into
push
mov
sub
pop
mov
jmp
or
iret
lahf
and
daa
adc
sub
and
jl
xor
pop
sbb
mov
push
push
leave
in
jb
jmp
in
pop
push
xor
(bad)
mov
pushw
mov
pop
outs
js
adc
and
data16
and
mov
or
pop
mov
and
jne
jmp
pop
push
loop
shr
dec
xchg
sbb
pop
push
mov
shl
mov
cmc
loopne
ss
idiv
ins
mov
ins
mov
and
adc
aas
pop
test
pop
mov
ret
dec
sbb
popf
fcmovnu
sub
push
test
inc
and
or
(bad)
shl
imul
and
xchg
sbb
jo
adc
rcr
push
icebp
cld
jnp
test
mov
dec
popa
mov
pop
cmp
xchg
sbb
cmps
inc
cld
fcmovnb
sbb
adc
(bad)
push
adc
out
mov
iret
sub
cmp
cmps
ret
dec
xor
addr16
iret
ss
ror
out
or
adc
test
or
shl
push
les
add
mov
mov
dec
leave
and
xchg
int3
sub
fwait
mov
arpl
cwde
and
call
clc
xchg
jae
rcl
or
test
test
dec
dec
adc
ror
nop
movs
ret
out
imul
jmp
in
pop
mov
icebp
or
(bad)
adc
(bad)
pushf
out
sbb
mov
jnp
mov
in
cdq
mov
(bad)
lahf
adc
js
pop
pop
and
ds
sbb
lahf
arpl
xchg
gs
add
pop
jmp
sbb
jmp
pop
xchg
ja
cld
fmul
xor
jno
ret
mov
adc
mov
jne
loop
mov
fwait
push
add
scas
and
stos
retf
or
sub
cmp
(bad)
test
and
pop
inc
adc
adc
add
jge
(bad)
loopne
into
cmp
pop
mov
ins
in
mov
push
cld
cmp
mov
jne
rcl
xchg
cs
mov
sub
mov
rcl
mov
sbb
jmp
pop
push
jmp
ret
enter
sub
leave
cs
dec
imul
cli
lock
push
pop
les
iret
rcr
xor
pop
out
cmps
xchg
stos
int
cld
leave
mov
pop
push
imul
adc
or
std
cmp
ret
push
jmp
stos
cmp
mov
out
push
scas
cmp
and
ds
enter
int
imul
jne
clc
shl
scas
mov
push
into
or
mov
inc
jge
xchg
add
repnz
ja
ins
add
push
dec
xor
sub
mov
pusha
nop
and
cmp
and
and
mov
mov
adc
es
dec
jp
cmc
ret
es
mov
ret
shl
movs
(bad)
mov
pop
add
popa
outs
hlt
or
xchg
call
push
out
sbb
pop
dec
sbb
xchg
cmc
xor
xchg
ins
mov
dec
adc
pop
movs
aam
test
dec
out
push
shr
mov
stc
ret
jecxz
out
arpl
mov
pop
cmc
push
test
fild
(bad)
push
enter
push
cmp
jnp
jge
sub
jae
rcl
nop
and
js
or
fsubr
lock
add
das
lea
inc
dec
push
pusha
ins
test
lea
fdiv
leave
cs
jg
or
retf
jge
shr
adc
dec
add
push
adc
or
fnstcw
jnp
stos
mov
push
ss
mov
aad
push
inc
jb
or
cli
pusha
cmc
popa
jmp
out
and
or
mov
mov
xor
sti
(bad)
jge
std
fidiv
repz
xlat
xor
leave
sub
jg
jecxz
shl
mov
xor
inc
jge
shr
xchg
out
jno
pushf
push
xchg
lahf
das
adc
mov
mov
daa
and
sbb
sub
enter
inc
ror
stos
fsubr
mov
inc
cmps
cdq
aaa
dec
add
stos
dec
nop
xlat
inc
stos
mov
xor
ss
mov
pop
out
jmp
adc
enter
add
bound
sbb
call
jg
jmp
popf
cmp
call
mov
inc
movs
adc
inc
ret
out
loop
pushf
adc
ret
mov
mov
dec
cmps
inc
xor
add
test
pop
jae
pop
pop
sub
call
sub
jg
and
sub
in
cmp
jae
push
sbb
xchg
add
das
pop
dec
sbb
jno
mov
rcl
in
sbb
jae
jmp
jmp
add
jo
scas
retf
xchg
or
jae
cmp
ret
lahf
cmc
inc
test
xor
lds
push
dec
mov
xchg
xchg
xor
sub
pop
gs
dec
mov
scas
fnstenv
mov
repz
lods
repz
ins
dec
ret
mov
movs
test
es
xor
xchg
mov
das
mov
push
repnz
pop
mov
sub
sbb
and
push
cs
fldlg2
or
mov
(bad)
call
js
mov
cli
dec
jp
adc
cs
scas
dec
xor
xor
cwde
aaa
popf
and
jmp
push
inc
sbb
cld
in
int
mov
cmp
push
sub
and
fisttp
ja
sbb
std
pop
outs
je
mov
hlt
pop
arpl
xor
out
fld
adc
das
dec
mov
lods
bound
call
add
mov
(bad)
mov
jo
jmp
xor
fimul
es
xor
pop
cld
mov
inc
pop
xor
adc
popa
xor
clc
adc
xchg
mov
mov
sub
mov
addr16
stos
mov
lea
js
sbb
sbb
popa
shr
cmp
push
or
xor
adc
ss
mov
ins
xchg
or
into
popf
push
into
sub
ror
call
xchg
cdq
inc
push
not
mov
sub
lds
mov
call
xchg
shl
aaa
cmp
shr
(bad)
fisub
jecxz
push
out
jo
push
or
or
sbb
jb
adc
ss
cmp
dec
inc
out
pop
jmp
fdiv
mov
je
in
out
dec
xchg
scas
stos
outs
arpl
push
sub
jg
out
iret
loope
dec
ret
call
imul
imul
cmps
cmps
in
jg
inc
xchg
dec
cmps
leave
jnp
mov
push
(bad)
dec
xlat
out
ror
icebp
iret
fdiv
cld
mov
pop
or
jmp
push
pushf
add
pop
les
lods
std
jmp
mov
or
dec
jge
loopne
stc
(bad)
cmp
rep
mov
pusha
xor
inc
popa
push
inc
adc
fnstenv
and
add
movs
lods
ss
repz
outs
call
jo
popf
les
pushf
dec
pop
jo
fs
jne
loopne
push
jno
stos
cmp
cmp
xchg
pop
fldcw
(bad)
xchg
pushf
adc
push
pop
movs
sbb
mov
push
mov
stos
in
and
mov
cmp
dec
mov
inc
test
popa
(bad)
xor
or
add
dec
inc
jl
retf
push
mov
sbb
or
sub
add
out
in
fmul
xchg
or
mov
scas
add
and
aaa
cmp
jp
arpl
xor
pop
hlt
xlat
leave
das
jle
(bad)
loop
or
jp
jl
into
enter
mov
int
cmp
fld
fwait
leave
push
mov
div
rcl
fadd
dec
dec
mov
ret
xor
into
sub
iret
in
jg
xor
dec
adc
retf
xchg
xor
hlt
xchg
clc
mov
jecxz
push
pop
push
fsubr
mov
sbb
jmp
sbb
cwde
pop
push
jno
sbb
adc
jb
mov
icebp
cmp
out
sbb
jmp
sub
xor
loopne
add
push
mov
xchg
call
jbe
loop
int
mov
mov
gs
loopne
jp
ds
ficomp
and
enter
iret
rcr
dec
mov
adc
fdivr
lea
xchg
int3
in
cmps
rol
pop
sub
sbb
cmp
sbb
out
in
out
dec
add
fwait
sahf
dec
clc
jmp
popa
mov
mov
inc
outs
sub
jle
jne
arpl
mov
push
mov
add
inc
xor
loope
ss
loop
inc
dec
sbb
add
test
xor
pushf
xchg
rol
in
aaa
(bad)
cli
xor
out
mov
mov
push
pop
xor
mov
movs
add
(bad)
jmp
cmp
mov
push
fdiv
(bad)
sub
adc
(bad)
neg
retf
adc
and
stos
in
jl
rcl
dec
cmp
push
jle
int
add
add
iret
imul
sbb
xor
pop
adc
mov
xor
add
stos
fiadd
sbb
je
adc
or
out
popa
out
and
add
xchg
add
xor
ins
or
mov
ins
and
ins
and
fwait
cmp
in
sti
sub
aaa
or
mov
mov
push
movs
xchg
jle
add
icebp
cld
jo
adc
and
test
lahf
(bad)
and
add
arpl
lea
xor
xchg
stos
hlt
leave
adc
out
push
sub
stos
add
rcr
cmp
push
aam
dec
push
outs
dec
ss
dec
dec
mov
xor
icebp
pusha
xchg
movs
sub
inc
or
imul
dec
jp
bound
fcmovbe
pop
mov
pusha
repz
sub
loopne
mov
jb
(bad)
int3
in
jae
xor
fist
and
xchg
adc
mov
add
adc
std
mov
sbb
inc
cmps
mov
dec
push
test
dec
pop
inc
xor
adc
inc
and
mov
xchg
mov
movs
cwde
push
fstp
jne
stc
dec
pop
mov
test
pushf
push
mov
sahf
scas
stos
and
stos
sti
ds
push
imul
cmp
clc
xchg
pusha
push
nop
jle
mov
and
addr16
mov
mov
and
dec
sbb
cdq
sub
shl
push
in
popa
mov
mov
dec
mov
ja
ficomp
jp
loop
xchg
retf
(bad)
cs
pop
or
call
adc
xor
shl
cs
jns
sbb
mov
stc
sub
push
aas
(bad)
mov
mov
ins
mov
mov
jl
fld
ret
in
(bad)
xchg
nop
lods
cs
mov
xor
xchg
je
inc
js
add
push
mov
and
inc
push
xchg
push
bound
pop
sub
mov
pop
retf
add
pop
sahf
xchg
(bad)
outs
jo
loope
xchg
mov
sti
add
push
aad
cmp
inc
test
adc
dec
xchg
(bad)
aad
pop
das
clc
sbb
jp
enter
mov
mov
add
adc
or
push
mov
and
jg
jns
popa
mov
mov
mov
push
cmps
into
cwde
xchg
mov
out
movs
mov
fidiv
sub
adc
mov
add
ret
push
cmp
loopne
enter
(bad)
jo
mov
cli
xor
xchg
xor
std
out
inc
xchg
out
or
sbb
test
cmc
jmp
jb
sub
inc
jecxz
and
loope
push
ins
(bad)
xor
out
leave
(bad)
in
adc
xchg
xlat
rol
mov
pop
out
push
pop
clc
(bad)
iret
jg
sub
or
xor
retf
xchg
(bad)
push
ror
mov
adc
out
mov
js
push
cmp
dec
sub
leave
setb
and
jl
push
test
out
fdivr
iret
mov
cmp
repnz
dec
xor
scas
call
push
mov
or
push
dec
ins
pop
inc
jbe
jae
hlt
lock
or
inc
jns
jmp
sbb
loop
dec
imul
mov
dec
mov
xlat
popf
mov
fs
xor
jg
or
adc
pop
pop
pop
dec
stos
int3
jmp
inc
xlat
and
pop
pop
add
pop
es
mov
mov
push
dec
cmp
cmp
inc
jecxz
ins
xor
in
cmps
xchg
clc
clc
clc
and
shl
mov
jb
aad
jae
mov
test
lock
jecxz
push
dec
es
repnz
and
xor
dec
mov
arpl
push
(bad)
jns
mov
xor
test
xor
push
stos
sub
ret
out
out
ins
xor
or
mov
pop
fbstp
loope
mov
lock
pop
test
sar
mov
sahf
push
push
pusha
xchg
and
pop
fisubr
cmps
dec
outs
xchg
iret
mov
repz
retf
jmp
inc
js
xchg
cli
xor
or
xchg
mov
add
gs
cli
push
xchg
jns
adc
sbb
push
or
mov
fdecstp
loop
xchg
gs
jnp
push
jle
and
inc
jb
mov
sbb
xchg
in
mov
mov
dec
sbb
lock
rol
pusha
dec
xchg
lahf
aaa
and
out
movs
jge
mov
dec
dec
inc
popf
and
jmp
popa
cdq
pop
shl
sbb
pop
int
mov
sub
imul
push
sbb
adc
test
inc
popf
data16
mov
ja
pop
and
sbb
retf
cmps
mov
push
or
push
sbb
mov
repnz
inc
shl
leave
nop
stos
dec
adc
cmps
pop
test
idiv
movs
and
test
ja
(bad)
dec
(bad)
jmp
lods
xchg
inc
lock
push
imul
sub
add
movs
aaa
mov
fld
sahf
rol
push
icebp
stc
mov
pop
cmp
jb
das
sub
scas
pop
or
cmps
iret
js
jb
cmc
sbb
jae
xor
xchg
int
pushf
jo
je
fs
repnz
mov
jae
call
shl
imul
jne
pop
scas
inc
mov
pushf
les
js
out
stos
push
dec
add
popa
mov
aaa
in
out
arpl
xor
leave
push
clc
push
jmp
ins
jno
in
xor
popa
xor
aaa
mov
ret
or
add
fcom
lods
cmp
adc
arpl
aas
call
sbb
popa
cmp
adc
pop
pop
push
aam
leave
ror
lods
add
in
mov
ds
mov
pop
push
mov
add
or
push
push
push
mov
pushf
mov
jns
add
hlt
and
push
pushf
pop
jmp
jg
rcr
pushf
xor
call
fwait
adc
pop
mov
mov
xchg
cmp
aas
cdq
push
push
pop
es
mov
cmp
mov
xor
jb
adc
popf
in
(bad)
jmp
sub
xchg
(bad)
mov
inc
mov
imul
jae
dec
push
dec
jecxz
or
clc
jle
cdq
popa
jp
clc
les
data16
std
rcl
pop
ja
pop
mov
mov
inc
xchg
sub
jecxz
not
sub
mov
jns
mov
jmp
mov
cmp
mov
shl
int3
cmp
stos
inc
dec
adc
add
neg
fcmove
sbb
movs
adc
sbb
shl
pop
aaa
xchg
aas
out
(bad)
fcmovb
jo
scas
mov
clc
cmovae
call
inc
inc
sub
mov
dec
push
mov
adc
pop
mov
dec
jns
adc
repz
pusha
mov
push
inc
ret
sti
fistp
icebp
jbe
into
xchg
pusha
sbb
jmp
es
pop
dec
call
movs
addr16
mov
das
icebp
or
scas
fisttp
scas
xor
retf
(bad)
call
xor
jae
jle
mov
dec
enter
je
mov
test
loop
cwde
jp
popa
pop
ficom
push
jg
ins
mov
mov
jmp
push
aaa
aas
mov
(bad)
jmp
mov
pop
jne
jno
add
leave
or
fisubr
out
iret
jl
mov
cld
sidtd
sub
pop
mov
sbb
ror
mov
mov
movs
push
cdq
xchg
sbb
loop
mov
lds
repnz
lock
jmp
jg
xchg
test
jb
sahf
mov
add
add
mov
xor
jo
lods
fdivr
push
hlt
inc
jl
sar
adc
mov
in
or
fwait
rcl
pop
mov
mov
xlat
hlt
into
rcr
xor
enter
and
(bad)
mov
push
xchg
push
ja
(bad)
icebp
xchg
add
test
ins
mov
mov
call
pop
and
mov
xchg
dec
add
jg
inc
sub
push
loope
loopne
xlat
jmp
ret
loopne
mov
sub
(bad)
push
popf
lock
sbb
in
push
lea
fcomp
jg
or
pop
shr
addr16
scas
pushf
xor
pop
mov
push
in
xchg
push
add
ret
dec
retf
dec
pop
aas
jne
ss
sbb
loope
cmc
call
or
dec
xor
out
(bad)
loopne
pop
(bad)
push
(bad)
in
aas
outs
dec
daa
mov
sbb
pop
rol
or
fldcw
stos
xor
repnz
stos
js
mov
js
cmp
dec
hlt
mov
push
clc
in
inc
ins
test
aas
into
sub
popf
(bad)
ds
test
push
mov
aaa
mov
pop
stos
(bad)
shl
(bad)
lods
add
pop
sbb
lds
pop
mov
sub
xchg
out
push
test
xor
inc
cs
fwait
or
mov
adc
(bad)
loope
imul
mov
push
pop
mov
xchg
sti
retf
rcr
pop
test
sti
cmps
loopne
ins
and
scas
xor
fidivr
push
imul
inc
out
jmp
push
xchg
les
sbb
dec
or
dec
in
clc
cmps
or
ds
cmp
out
hlt
cmp
sar
imul
(bad)
sbb
sbb
xor
adc
sub
(bad)
xlat
cmps
mov
mov
js
mov
sub
lods
dec
or
repnz
je
scas
sbb
out
inc
cli
mov
add
add
int
idiv
xor
fwait
mov
pop
lods
repz
dec
aas
mov
xor
lock
lds
sub
xor
inc
es
int3
or
ret
sbb
push
imul
xor
out
fst
outs
cmc
pop
mov
mov
dec
in
bound
jnp
pop
jo
jmp
adc
xor
test
cmp
sbb
jnp
retf
adc
dec
cmp
aas
push
ror
xor
das
sub
stos
(bad)
out
test
imul
retf
int3
jno
or
xchg
mov
dec
in
cmp
js
popa
mov
and
das
inc
xor
adc
retf
out
je
movs
and
into
jb
lods
movs
sbb
imul
inc
pop
push
add
pop
retf
outs
popf
mul
test
add
out
dec
inc
or
imul
psubb
ins
adc
pop
sbb
in
les
mov
push
fs
jno
push
add
mov
in
xor
sbb
or
scas
sbb
xor
xchg
into
fwait
xchg
out
sub
lock
in
push
call
or
stos
(bad)
ins
and
popf
push
loopne
out
jo
fcmovnbe
push
popf
add
jecxz
repz
xor
add
cmp
and
mov
pause
add
enter
repnz
call
inc
dec
ret
cmps
mov
dec
mov
mov
sti
mov
or
xor
lea
cld
enter
les
or
cli
xchg
sub
push
mov
outs
daa
fnstenv
idiv
stos
xchg
push
into
jmp
cwde
dec
(bad)
test
pop
xor
shl
das
sbb
sbb
int
std
cmp
clc
sbb
pop
mov
aaa
imul
push
xchg
sub
cmp
dec
or
or
dec
mov
inc
adc
fcomp
mov
(bad)
adc
adc
jo
dec
call
jbe
test
imul
dec
cwde
lods
mov
cmp
adc
mov
fiadd
lahf
fisttp
push
and
cmp
xlat
out
pusha
fild
in
inc
jg
bound
stos
loop
inc
dec
adc
jmp
arpl
(bad)
mov
icebp
xchg
(bad)
cmp
pusha
retf
lds
ret
mov
fld
sti
aam
add
dec
mov
xchg
pop
sub
sub
or
cmp
xchg
rol
out
dec
in
mov
cmps
int
frstor
jg
out
cmp
in
add
test
mov
fdivr
push
jle
lock
mov
mul
stc
mov
cs
mov
and
stos
sbb
hlt
pop
cld
leave
(bad)
sbb
loopne
mov
jmp
add
mov
(bad)
adc
enter
gs
shl
inc
movs
jne
push
sysret
jge
cmp
mov
jmp
xlat
or
xchg
mov
pop
stos
add
sub
into
mov
ret
loop
pop
jecxz
aaa
dec
(bad)
sub
aad
(bad)
xor
out
test
mov
repnz
xchg
and
stos
repnz
in
test
aam
or
pop
shl
dec
inc
add
icebp
clc
jl
jae
lds
sub
push
push
xor
mov
aas
lods
retf
sti
and
mov
in
mov
xchg
retf
addr16
jmp
out
loop
xchg
pop
add
mov
mov
mov
dec
(bad)
mov
dec
addr16
add
mov
repz
je
add
mov
inc
xor
cli
adc
addr16
sbb
push
cwde
push
mov
pushf
js
and
movs
je
std
dec
xlat
scas
push
inc
fiadd
pop
inc
or
pop
and
xor
mov
loope
push
xor
(bad)
and
(bad)
dec
pop
(bad)
cmp
pushf
aad
rol
les
aas
dec
mov
std
pop
mov
(bad)
(bad)
sub
outs
(bad)
loop
mov
imul
mov
sahf
neg
add
outs
jnp
sub
outs
mov
(bad)
test
mov
and
hlt
popa
xlat
pop
jecxz
add
out
push
adc
pop
cld
movs
ins
out
mov
sub
and
lods
outs
repz
popa
mov
call
jp
bound
mov
and
or
lock
push
jne
jecxz
jl
mov
cld
pop
pop
inc
add
and
mov
xor
pop
or
mov
jb
xchg
popf
mov
out
cmp
xor
xor
in
mov
rol
lds
sbb
test
sti
fsub
pop
mov
inc
daa
and
iret
mov
dec
popf
popa
cmp
jmp
pop
pop
js
out
push
dec
(bad)
jecxz
xchg
clc
fisttp
mov
aaa
(bad)
pop
addr16
adc
sbb
push
push
cdq
mov
in
mov
sub
mov
dec
ds
push
clc
cmc
and
cli
jmp
mov
xchg
arpl
(bad)
fcomp
jl
daa
xor
inc
mov
ja
fidivr
mov
sub
jno
rcr
pop
or
sbb
or
popa
shr
bound
add
sub
or
cld
add
cmp
mov
ins
push
stos
fadd
fild
rcr
or
nop
push
mov
jmp
test
xor
cmp
fist
inc
clc
aam
and
loope
jge
dec
enter
push
adc
pushf
pop
xchg
mov
mov
fwait
cld
aam
add
ror
jbe
(bad)
fdivp
ret
test
lds
pop
(bad)
xchg
sbb
outs
or
loopne
push
enter
adc
pop
sub
mov
dec
xchg
mov
xchg
mov
dec
push
ins
outs
scas
and
arpl
mov
push
stos
or
mov
mov
cmp
rol
sub
clc
bound
xchg
stc
js
bound
leave
aas
push
retf
jle
adc
mov
hlt
shl
mov
stos
add
jno
adc
jle
jno
add
inc
push
(bad)
pop
add
xor
mov
xor
push
pop
or
pop
sahf
or
and
mov
inc
or
ror
mov
imul
fstp
xor
pop
dec
pop
jmp
std
cmc
nop
fs
call
aas
fiadd
lds
rcr
aam
call
call
addr16
xlat
ds
std
scas
push
pop
test
mov
sub
pop
inc
jge
mul
outs
inc
inc
dec
mov
loope
mov
mov
add
dec
xchg
pop
and
xchg
mov
cmp
dec
push
xor
xor
mov
dec
jecxz
iret
sbb
loop
add
add
dec
aaa
lds
mov
jne
cmc
and
pop
call
inc
or
mov
pusha
mov
pop
inc
iret
jb
push
inc
dec
mov
dec
add
push
sbb
int3
adc
xlat
add
or
xchg
jno
mov
ds
imul
rol
xacquire
and
xchg
into
jp
das
addr16
jle
lea
adc
out
push
es
fnclex
add
jmp
xchg
into
xor
push
clc
imul
pop
sbb
aam
arpl
xchg
dec
mov
aam
shl
sbb
mov
popf
call
adc
add
scas
paddsw
push
add
jo
push
cdq
addr16
nop
dec
lods
shl
je
dec
pushf
fisub
pusha
icebp
add
dec
or
outs
add
sbb
push
xchg
and
ds
or
in
jbe
dec
jbe
mov
(bad)
aad
iret
loop
sbb
push
jge
fsubrp
lods
popa
push
fist
sbb
jnp
shl
and
pusha
mov
mov
aam
pop
ficomp
mov
adc
movs
xchg
neg
xchg
int3
imul
xlat
loop
cmp
pop
cmps
retf
dec
inc
mov
mov
or
mov
mov
push
xor
out
add
cmp
sub
scas
dec
outs
shl
jecxz
popf
popa
push
push
mov
and
pop
mov
es
fwait
in
pop
(bad)
fimul
arpl
scas
sbb
mov
pop
cmps
mov
fwait
adc
cmp
(bad)
cwde
sub
fdiv
sbb
out
(bad)
pushf
mov
std
int
inc
movs
jbe
xor
sbb
dec
pop
cli
cmp
ja
pop
inc
jnp
aaa
fild
xor
cmp
xor
adc
jnp
and
aam
pop
dec
rcl
sbb
inc
daa
pop
sub
jbe
inc
daa
mov
mul
adc
enter
lds
int
pop
pop
sbb
push
pop
mov
mov
push
push
(bad)
push
adc
or
push
aad
neg
and
cmp
fcomp
mov
xchg
lods
movs
mov
adc
or
in
adc
imul
inc
ja
jo
add
retf
or
ret
nop
mov
xchg
in
cmps
adc
inc
fptan
cli
stos
(bad)
pop
ja
jbe
xchg
je
dec
imul
je
mov
mov
lods
jb
cmp
stc
sbb
or
test
push
iret
je
fidivr
xchg
pop
sbb
or
out
add
or
fdivr
jg
push
imul
sub
lods
sbb
ins
inc
mov
xchg
outs
(bad)
mov
pop
adc
leave
pop
dec
loop
movs
aad
dec
push
js
add
dec
gs
push
mov
movs
push
movs
sub
loopne
(bad)
push
dec
inc
push
push
pop
jecxz
scas
add
stos
gs
sar
das
pop
pop
jp
xor
push
sbb
bound
cli
fidiv
js
mov
jl
ins
mov
pop
push
xor
jb
test
mov
or
jecxz
aaa
imul
scas
dec
cmp
inc
dec
and
sets
cs
or
loope
mov
pusha
xchg
inc
xchg
aas
xlat
popa
out
inc
cdq
cmps
out
jnp
nop
jge
jmp
in
mov
xor
xor
rol
dec
push
xor
push
test
cmp
jecxz
or
outs
sbb
les
mov
pop
cmp
jmp
mov
movs
pop
retf
or
xchg
in
sbb
cs
mov
pop
pop
leave
inc
xor
in
scas
lea
and
sub
imul
xchg
ins
mov
pop
inc
shl
test
jmp
adc
popf
outs
pop
enter
cmp
sub
sub
mov
mov
test
dec
idiv
aas
ins
pop
pop
mov
mov
pop
dec
mov
jmp
and
jno
fwait
cs
inc
sub
mov
fdivr
call
or
sbb
xchg
add
ja
dec
dec
inc
loope
mov
js
cmps
ret
jmp
cmp
loop
icebp
clc
dec
cdq
repnz
and
and
clc
aaa
jp
push
les
or
mov
les
(bad)
sahf
imul
nop
test
test
repz
dec
nop
ret
cmp
or
sub
vpsubsw
sub
push
icebp
pmaddwd
mov
or
sbb
(bad)
sbb
sub
push
mov
fdivr
adc
jl
sbb
aad
arpl
sbb
aas
test
xchg
cs
pop
xchg
inc
pushf
pusha
and
dec
or
and
pop
ret
mov
repz
add
inc
or
in
(bad)
aaa
out
pop
icebp
sub
sbb
retf
int3
or
ror
jnp
pop
and
xchg
rcl
mov
retf
cmp
mov
(bad)
(bad)
and
cmps
je
jge
mov
or
mov
cmp
push
jmp
mov
or
data16
(bad)
xor
in
fwait
xor
jmp
push
sbb
sbb
inc
leave
add
dec
mov
movs
out
pop
cmp
mov
movs
fnstsw
jg
aam
pop
mov
jb
fisttp
lea
mov
or
int
or
enter
icebp
shl
mov
daa
cdq
jns
inc
sbb
mov
mov
pop
push
pop
cmc
inc
repnz
and
xchg
sahf
pop
aas
hlt
dec
xchg
or
and
jno
jno
xor
dec
clc
and
and
shr
in
cld
movs
sub
imul
ret
popf
or
gs
mov
ins
sub
dec
ds
fwait
shr
pop
mov
sub
in
or
jo
cmps
or
lahf
pop
pop
inc
mov
adc
aam
ja
out
ds
rol
xor
das
fwait
xchg
les
inc
retf
imul
iret
sbb
sbb
in
pop
add
pop
and
out
fadd
movs
fiadd
mov
jp
or
jb
or
push
fadd
xor
adc
retf
jns
loopne
jge
ret
mov
loopne
nop
rol
invlpga
cmp
mov
adc
xor
cmc
jo
jnp
inc
in
pop
jge
pop
call
sahf
adc
pusha
xchg
pop
ror
outs
xchg
jecxz
call
ja
loope
inc
fadd
mov
cli
jne
out
sub
ins
repnz
mov
add
mov
in
dec
cmp
mov
stos
jle
gs
jae
adc
lds
and
popa
test
pop
xchg
ins
or
pop
jns
retf
dec
in
xor
jge
aam
icebp
push
in
mov
and
xor
mov
or
xchg
push
jne
mov
or
shr
test
test
das
popa
inc
pop
mov
pop
lea
pushf
sub
in
or
sbb
dec
sub
cmp
xor
push
add
mov
mov
mov
and
jb
stos
movs
xor
scas
std
leave
mov
adc
mov
dec
add
adc
aas
fcom
sahf
xchg
pop
push
jp
xor
jbe
mov
or
xchg
fst
aad
jmp
mov
sub
loope
mov
cmp
shr
pop
mov
adc
(bad)
mov
or
inc
cld
scas
and
cmc
mov
pop
in
loope
mov
jmp
ins
mov
push
test
neg
outs
adc
popa
aas
aas
gs
cmc
lahf
lods
(bad)
xchg
sbb
xchg
lods
popa
cmps
cld
mov
dec
add
call
stos
xchg
jg
adc
(bad)
fild
jl
add
dec
test
or
inc
sub
outs
imul
xchg
out
jno
pop
lahf
dec
inc
test
dec
nop
fsubp
aad
sar
pop
(bad)
dec
mov
stos
push
scas
fdivr
aad
mov
inc
scas
shr
mov
loope
pop
shl
outs
cmp
(bad)
into
pop
jmp
scas
iret
jae
mov
mov
pop
adc
scas
mov
pop
les
cli
pusha
pop
test
neg
mov
mov
xor
scas
dec
adc
rol
repz
inc
mov
mov
pop
lock
loop
imul
js
push
leave
test
addr16
loop
xchg
dec
push
jne
sub
mov
sub
(bad)
push
mov
not
mov
mov
xchg
adc
pop
shld
dec
and
inc
jns
fisttp
sbb
adc
gs
stc
add
popf
pop
jne
pop
int
add
mov
retf
loope
stos
add
dec
xor
enter
add
and
icebp
mov
sbb
jecxz
cmps
cdq
jge
dec
mov
fs
push
push
pop
push
mov
call
popa
das
or
fcomp
stos
dec
fcmovbe
fnsave
push
dec
pop
pop
inc
push
xchg
push
repz
fmul
adc
mov
ds
stos
out
ja
or
movs
adc
repz
mov
lods
cmps
scas
jecxz
fs
or
fidivr
dec
sub
pop
and
push
lds
cmp
fdivr
inc
inc
div
or
call
mov
cmp
or
sub
jg
data16
shr
jnp
clc
aam
ins
daa
mov
mov
lods
push
cmps
jo
sub
push
je
rol
(bad)
ds
mov
ret
movs
(bad)
pop
adc
inc
clc
mov
outs
mov
pop
ja
inc
and
adc
xchg
out
mov
cmp
je
in
xchg
in
dec
loopne
push
inc
sbb
jae
imul
adc
cld
mov
cmc
pop
sahf
in
repnz
push
movs
retf
pop
lock
mov
push
xchg
lahf
add
or
mov
xchg
xlat
popa
inc
and
inc
pop
test
inc
dec
mov
pop
stc
pop
jg
xchg
rcl
dec
jp
(bad)
dec
mov
sub
and
pop
jns
(bad)
or
xor
mov
test
sbb
dec
xchg
in
jb
(bad)
rol
and
inc
sahf
bound
cmc
sub
push
jecxz
xchg
repnz
es
inc
in
push
xlat
cli
fcmovnb
mov
dec
js
cmps
lock
adc
mov
xchg
jecxz
inc
pop
rcl
mov
push
push
jle
cli
popa
fidivr
jns
push
out
hlt
mov
dec
inc
mov
ins
jecxz
pop
xchg
pop
movs
sti
jbe
ds
pop
gs
mov
jnp
dec
inc
fwait
nop
jl
shl
ja
xchg
in
outs
sub
inc
aaa
xchg
dec
inc
ror
jl
mov
xor
or
dec
test
sahf
rcr
add
imul
in
js
aas
inc
xor
dec
rol
sbb
mov
cli
mul
push
push
test
fs
retf
test
addr16
push
out
bound
aam
imul
inc
fldenv
gs
sbb
movs
test
and
mov
ret
jl
sbb
ret
mov
andps
inc
adc
out
sbb
repnz
jnp
jae
sub
xchg
ret
push
stos
clc
xchg
xor
pop
test
push
and
jecxz
xchg
sub
mov
retf
stos
clc
loopne
js
aam
xchg
je
(bad)
nop
sub
sbb
(bad)
cdq
lea
movs
mov
sub
out
enter
inc
add
add
mov
inc
or
jno
mov
pop
inc
aaa
int
xor
dec
dec
mov
jecxz
std
les
mov
mov
repnz
mov
push
push
mov
pop
sub
mov
adc
cmp
jne
cdq
hlt
push
xabort
pop
mov
adc
(bad)
ret
test
jg
and
xchg
pop
fwait
and
je
or
pop
sbb
add
pop
jl
call
leave
sbb
daa
cmp
sub
push
dec
or
mov
imul
outs
lea
rcl
cmp
adc
lods
fcomi
ss
je
fnstsw
cdq
les
popf
cs
stos
xor
xor
or
cmps
push
into
in
jnp
mov
nop
scas
xor
cdq
sti
leave
ror
mov
mov
adc
adc
in
pop
shl
adc
xchg
mov
xor
neg
movs
add
xor
jge
rcl
xchg
popf
out
push
push
std
jecxz
mov
pusha
push
rcl
dec
movs
iret
les
sbb
or
jge
pop
(bad)
fisub
jmp
push
cli
and
xor
dec
lea
leave
xchg
mov
ficomp
xor
rol
add
fisttp
leave
shl
mov
cmp
xor
scas
std
ds
add
jae
adc
xchg
loope
dec
idiv
fwait
xor
cs
and
inc
sbb
lods
sbb
ins
push
push
in
stc
outs
ret
ins
int3
or
fistp
xor
xchg
jne
shl
fnstenv
pop
jcxz
mov
nop
bound
cmp
js
jmp
cli
popa
pusha
js
pop
fwait
cld
sar
retf
fst
adc
outs
or
pop
sbb
mov
sub
mov
out
test
sub
in
popf
imul
ror
sti
iret
in
call
mov
add
fsub
and
and
cs
dec
or
int
std
and
mov
ins
adc
lds
loopne
ret
add
pop
pushf
loop
aaa
xor
cmp
mov
sub
inc
scas
sar
sar
cwde
daa
movs
pop
pop
xlat
test
call
jle
out
loope
int3
sub
mov
ins
popa
data16
aad
cmps
lds
retf
mov
pop
inc
cwde
jne
push
aam
push
mov
enter
pop
int3
dec
inc
and
not
pusha
ja
int3
int3
inc
gs
dec
fs
out
jp
cs
pop
jmp
jb
ret
(bad)
adc
add
or
xchg
loop
pop
arpl
mov
dec
push
ror
enter
pop
add
shr
leave
or
push
push
sbb
add
jbe
inc
xchg
es
mov
push
movs
cli
cdq
mov
xchg
xor
add
xchg
movs
push
call
(bad)
in
std
mov
mov
mov
test
rol
leave
push
call
adc
mov
call
xchg
retf
aaa
xchg
dec
add
das
leave
ss
xchg
cmps
mov
pop
dec
sub
scas
jmp
or
shl
jns
sub
dec
add
dec
stos
fistp
mov
push
cmp
jp
ss
out
lahf
adc
in
shl
call
inc
fs
add
(bad)
ror
fsubr
clc
ja
cmp
cmp
push
(bad)
jbe
dec
add
hlt
sub
jae
(bad)
shr
mov
lods
push
ds
enter
mov
push
(bad)
pop
retf
or
sub
pop
fstp
pushf
xchg
dec
ins
sbb
xchg
dec
fwait
mov
mov
retf
dec
ds
in
imul
arpl
std
shr
xlat
jnp
mov
push
sub
and
inc
dec
jnp
inc
jl
mov
rep
aaa
mov
mov
cmp
adc
aaa
jle
test
or
rol
arpl
movs
inc
pop
shr
xchg
sbb
jmp
cmc
loopne
ins
(bad)
retf
and
fnstsw
pop
inc
sbb
cmp
jl
fdivr
mov
retf
scas
sar
cwde
or
xchg
out
scas
loope
add
cmp
jp
stos
xchg
repnz
retf
pop
fwait
and
sahf
add
ds
mov
icebp
imul
and
mov
mov
jns
repnz
mov
sub
hlt
pop
cmp
and
fcmovnu
adc
hlt
(bad)
adc
dec
pop
xlat
and
dec
jg
pushf
push
or
xor
icebp
fmul
jne
sbb
cmp
das
loop
cld
int
mov
test
pop
call
shl
or
jbe
(bad)
pop
lahf
and
pusha
dec
or
and
pop
push
jle
out
(bad)
sbb
data16
xchg
stos
(bad)
test
push
push
je
push
pop
sbb
inc
pushf
arpl
and
jmp
call
shr
int
or
add
push
or
imul
sahf
and
mov
sub
movs
iret
gs
test
(bad)
mov
mov
std
js
lods
mov
inc
js
fwait
das
arpl
nop
test
fcmovb
retf
ror
pop
xchg
outs
push
cmp
aad
jmp
sbb
outs
call
pop
xchg
popf
lea
ret
mov
call
jmp
cmps
jo
xchg
ret
push
mov
mov
push
imul
push
sub
popf
pop
push
mov
popa
sbb
sub
dec
push
pop
mov
fwait
pop
inc
stos
push
sbb
cmp
inc
retf
into
rol
add
adc
push
jl
and
into
movs
popa
lahf
fmul
sub
jl
fidivr
jo
cmc
add
pop
outs
pusha
adc
sbb
cmc
mov
push
loop
mov
dec
aam
out
fstp
(bad)
or
add
cmp
shl
js
mov
test
cmc
stos
jno
sahf
dec
xlat
bound
jno
push
test
mov
cmp
cmp
jbe
sti
push
jl
rol
dec
pop
jne
inc
cmc
pop
les
dec
std
push
and
sbb
imul
jl
mov
pop
stos
jg
shl
dec
sbb
jmp
inc
sbb
pop
scas
sti
inc
and
fnsave
dec
mov
es
adc
sub
or
dec
xor
mov
mov
and
mov
mov
jns
and
sbb
ja
pusha
cmp
xor
cmp
or
inc
outs
in
fldcw
mov
push
retw
push
mov
fimul
outs
int3
jp
sbb
fcom
or
sub
xchg
jmp
mov
data16
mov
mov
in
and
arpl
push
and
mov
push
mov
repnz
lock
dec
rcr
sub
es
and
pop
ja
jge
mov
daa
mov
ds
push
adc
sar
pop
xor
add
inc
aad
xchg
push
(bad)
(bad)
ja
dec
sbb
ret
test
(bad)
movs
jns
cdq
clc
dec
or
push
adc
or
add
mov
out
stc
xchg
jecxz
mov
ror
shl
pop
fs
ror
mov
out
(bad)
pop
clc
jmp
mov
lods
into
pop
sbb
push
popa
sub
jns
cmps
int3
rcl
mov
inc
mov
or
cli
pop
xchg
xor
clc
fisttp
pop
je
shl
add
shr
lods
pop
mov
aas
sbb
popf
dec
sub
and
dec
dec
jns
push
mov
clc
mul
shl
pop
fwait
cmp
sub
dec
fdiv
mov
mov
mov
psrad
inc
xchg
xchg
fmul
and
test
daa
mov
les
mov
sub
mov
mov
or
inc
pop
imul
pushf
repz
popa
jge
shr
(bad)
xchg
push
add
(bad)
imul
ins
xor
fs
add
dec
jnp
and
shl
hlt
loopne
adc
xor
xchg
inc
repz
sahf
call
pushf
aas
or
and
mov
and
mov
dec
xor
pop
popf
test
js
mov
mov
sti
std
aaa
jmp
dec
int3
sbb
sbb
push
or
jmp
call
cmp
add
nop
fidiv
and
lock
outs
or
in
xchg
adc
(bad)
imul
add
popf
mov
pop
adc
in
mov
sti
ins
sar
iret
xor
mov
jge
ss
mov
add
xor
bound
pop
cs
cmp
out
dec
loopne
mov
mov
nop
inc
push
mov
sub
cmp
sub
cli
dec
outs
adc
sbb
jnp
scas
or
xchg
xchg
inc
inc
push
sbb
xchg
(bad)
mov
sti
shl
mov
call
push
cmc
mov
jne
fcomp
adc
push
ins
dec
jmp
push
push
stos
jnp
mov
shl
retf
or
popf
or
in
add
xor
pop
xchg
xor
js
icebp
push
in
and
int
cmp
push
add
push
outs
hlt
icebp
popf
fsubr
dec
sti
ins
das
frstor
(bad)
mov
jecxz
cwde
jp
jno
xor
pop
jae
fwait
retf
es
mov
or
jg
jns
add
(bad)
pop
movs
and
xor
repz
jno
push
sub
dec
or
and
and
sbb
mov
cmps
pusha
jmp
hlt
and
xor
ret
mov
enter
mov
aaa
sbb
cli
xchg
imul
repnz
ror
xor
mov
cmps
and
xor
loope
stos
cmp
and
mov
out
fiadd
lea
cmp
cmps
sar
or
push
mov
aam
bound
jno
xchg
out
sahf
jge
push
sub
stc
pop
cmps
adc
push
and
inc
test
mov
lods
mov
(bad)
jecxz
ror
ja
mov
stos
pop
les
lods
imul
jmp
mov
out
adc
xor
je
repz
xchg
or
std
mov
xor
adc
xchg
movs
cdq
mov
idiv
adc
sub
daa
inc
cmp
stos
in
xchg
outs
fwait
dec
(bad)
cli
pop
jl
call
jp
enter
cmp
retf
add
sahf
mov
in
dec
push
retf
push
push
(bad)
sbb
jne
cmps
mov
inc
push
mov
test
loop
dec
int3
push
cmps
bound
jge
cmps
ret
out
jmp
imul
mov
mov
test
add
inc
scas
lds
arpl
or
fbld
sub
sbb
sbb
(bad)
gs
pop
fisttp
arpl
mov
cmc
sbb
pop
cs
fwait
dec
hlt
cmc
rcr
mov
jle
jne
sti
outs
imul
xchg
push
cmp
push
stos
cmp
pop
adc
retf
or
inc
inc
and
xchg
shr
push
loopne
pop
movs
call
jge
dec
push
inc
ds
add
test
lahf
inc
or
add
cli
aas
cmc
js
repnz
jne
xor
sub
mov
jo
xchg
aam
lods
imul
jge
xchg
cmovo
sub
mov
adc
jmp
push
aad
push
das
out
enter
jmp
mov
mov
fld
icebp
ret
clc
shr
out
xchg
shl
movs
lea
dec
inc
clc
xchg
mov
add
dec
mov
jmp
or
mov
xor
pop
std
xor
test
jne
dec
mov
push
jge
test
call
aam
and
adc
sub
and
rcr
sub
ja
rol
mov
out
aas
pop
hlt
xlat
jle
push
pop
popf
leave
sub
sahf
mov
adc
sub
fdivr
sub
in
popf
jmp
xchg
out
rcl
pop
sbb
push
lods
std
repz
aad
push
xchg
ins
addr16
adc
shr
dec
pop
mov
add
inc
pop
and
mov
cmp
test
fistp
bound
out
push
imul
mov
shl
enter
and
fist
hlt
fild
dec
xchg
(bad)
push
lahf
sti
push
jb
pop
mov
loop
sub
loop
jmp
jp
push
push
jb
or
xchg
fist
pop
das
out
add
xor
dec
das
jle
aad
stc
jmp
and
jmp
aam
test
aam
cmp
jo
mov
arpl
je
scas
pop
push
lds
loope
jle
fld
and
pop
dec
xchg
test
and
jle
aad
arpl
lods
popa
js
std
repz
leave
jg
jmp
ret
sahf
mov
inc
repnz
fs
push
fidiv
gs
sahf
jmp
sub
arpl
pop
rol
jae
not
mov
cmc
and
xchg
loope
test
in
inc
out
xor
add
mov
adc
jg
adc
outs
mov
add
fdivr
(bad)
dec
int
adc
retf
out
icebp
push
or
(bad)
mov
xor
push
mov
xor
dec
pop
mov
and
sub
sbb
adc
mov
jb
mov
adc
(bad)
cmp
in
or
lahf
test
xor
push
mov
call
jns
loopne
jo
loope
adc
inc
movs
jbe
lock
cld
rol
sub
pop
out
shr
and
fwait
sub
jl
icebp
add
push
enter
lahf
inc
dec
out
fmul
scas
lods
xchg
xchg
arpl
pop
cmp
in
mov
cwde
jmp
add
cmp
sub
cmp
push
jp
fld
ficomp
mov
push
mov
mov
loope
push
cmp
fwait
call
stos
cmp
inc
addr16
(bad)
mov
mov
out
sub
cld
dec
mov
add
mov
jb
retf
cmp
(bad)
mov
out
inc
cdq
mov
push
xchg
loope
ret
xchg
or
adc
mov
or
sbb
test
test
rol
int
cmp
sbb
dec
mov
or
cmps
jbe
sbb
call
shl
lds
idiv
mov
movs
jg
sahf
sahf
pop
mov
data16
pop
sub
and
add
test
out
nop
and
sti
push
xrelease
cmp
jo
out
xchg
sar
cli
push
inc
xor
call
ror
sub
pop
xchg
retfw
add
and
or
fist
sahf
imul
push
sub
mov
sbb
sahf
bound
sub
cs
cmp
lds
lds
lock
rcl
sub
push
xor
test
push
hlt
adc
push
clc
or
and
lods
add
xor
daa
push
push
pop
mov
aaa
mov
pop
push
push
jge
imul
inc
sar
adc
out
pop
mov
gs
lahf
xor
inc
aad
stc
fstp
(bad)
and
and
add
mov
cld
(bad)
jne
mov
icebp
addr16
lahf
mov
fsubr
or
pop
sub
lods
xor
jl
xchg
lea
mov
es
fndisi(8087
gs
cmovne
adc
outs
sub
aam
dec
ja
std
and
mov
cmps
std
mov
sbb
and
test
fidivr
add
retf
in
push
fld
and
or
fist
fld
es
(bad)
xchg
mov
sbb
jne
ds
mov
in
push
int
push
sbb
xor
add
jns
popa
mov
and
adc
imul
rcl
mov
xchg
inc
pop
jno
inc
vpxor
shl
xor
loop
mov
push
mov
sbb
cmp
mov
lods
mov
add
hlt
fs
(bad)
mov
cmp
dec
cmp
mov
test
aaa
jge
pop
push
(bad)
repz
pop
pop
push
mov
sub
rcl
and
push
mov
in
jnp
inc
push
imul
xchg
xchg
push
(bad)
leave
cli
fcom
cwde
gs
arpl
sbb
and
scas
fcmove
push
mov
push
and
jns
fld
cwde
xchg
adc
mov
ins
xchg
imul
mov
leave
movs
(bad)
inc
mov
and
sub
xor
mov
cmps
je
ret
push
aad
(bad)
stc
xchg
push
bound
xor
es
jmp
mov
or
xchg
jb
cs
mov
out
mov
rcr
dec
xor
inc
add
test
call
shl
xor
or
popf
cli
mov
cs
loopne
or
cmps
lock
lds
fdiv
retf
mov
int3
and
adc
jl
mov
retf
or
in
jecxz
mov
retf
fsubp
xchg
loope
pop
adc
les
mov
enter
jg
retf
fistp
jge
sub
mov
inc
xchg
js
xchg
in
(bad)
dec
dec
lock
sbb
and
pop
xchg
aad
out
or
push
mov
mov
in
repz
in
loopne
sbb
sbb
movs
pop
retf
cwde
sub
ins
aad
mov
pushf
loopne
loop
add
lds
mov
dec
xchg
aam
push
jle
iret
retf
fadd
mov
aas
push
jmp
pop
dec
jle
jnp
sub
cmp
stos
fmul
push
jg
lds
sub
jnp
pop
pop
mov
inc
cmps
adc
ins
jmp
sbb
add
fnstsw
arpl
pop
inc
test
mov
(bad)
jmp
mov
(bad)
mov
mov
mov
or
push
cwde
pop
xchg
mov
cmps
out
leave
mov
jg
push
out
leave
mov
jmp
add
push
mov
retf
push
jb
add
push
popa
xor
mov
push
mov
sub
mov
inc
inc
sbb
sub
xchg
add
es
or
sar
or
cmps
xchg
xor
push
pop
ins
arpl
push
push
ficom
mov
movs
xrelease
xchg
(bad)
in
in
jmp
mov
and
push
stc
mov
aad
mov
ins
fbld
aam
xor
jge
jbe
mov
dec
(bad)
push
xchg
cdq
jl
es
sbb
jge
or
ret
mov
push
iret
sti
dec
dec
xlat
ins
xor
daa
jl
sub
pop
jmp
adc
pushf
nop
aam
xchg
add
gs
and
sahf
cmp
ret
xchg
mov
xchg
add
je
sar
fmul
fsubr
push
mov
xor
lods
sub
push
loopne
inc
mov
add
push
pop
hlt
mov
jg
add
std
cdq
pop
and
mov
pop
inc
adc
je
cli
rol
in
dec
dec
outs
clc
mov
idiv
loop
not
add
and
mov
sbb
mov
je
lock
mov
mov
xor
sbb
jp
sbb
xchg
adc
inc
push
test
adc
enter
scas
sahf
add
out
cmp
xor
(bad)
mov
jbe
mov
mov
mov
icebp
push
loopne
fbld
retf
mov
pop
test
xchg
push
out
sbb
sbb
xor
and
mov
mov
inc
lock
out
lods
es
jmp
sar
jl
test
push
xor
fxch
sti
add
cli
xor
out
dec
and
or
call
fxch
pop
cmps
mov
or
push
call
gs
jb
dec
jae
js
movs
scas
mov
mov
sub
popa
or
lods
mov
sar
add
loop
sbb
xchg
jnp
daa
mov
push
test
mov
lahf
sub
ja
les
rol
fld
fsubr
push
outs
stos
or
fimul
ja
(bad)
movs
ds
out
jmp
shl
xor
jnp
and
adc
mov
lods
mov
int3
and
push
push
mov
out
rcl
sub
jecxz
xor
xchg
in
lahf
push
call
dec
retf
test
les
push
rcr
test
inc
jnp
or
fcmovnbe
mov
xlat
push
shl
or
sahf
xchg
inc
pop
icebp
push
adc
mov
addr16
movs
jae
add
sub
add
sbb
adc
dec
pop
inc
test
dec
stos
mov
leave
jg
xchg
ret
mov
clc
inc
jb
mov
xchg
test
stc
stos
mov
xor
fild
dec
mov
xchg
dec
inc
add
arpl
lock
(bad)
adc
adc
nop
aaa
popf
rcr
shl
fs
or
outs
test
movs
repnz
fld
jmp
jbe
xchg
lock
popf
mov
sbb
hlt
aas
or
enter
call
(bad)
cmp
dec
mov
test
loop
pop
adc
sahf
cvttps2pi
dec
test
ins
push
fsub
enter
js
jns
and
aad
shl
repnz
dec
les
in
or
test
enter
inc
push
lea
call
(bad)
es
mov
or
or
push
xor
jl
sbb
jb
adc
ret
mov
out
push
xchg
jnp
and
add
inc
add
fs
sahf
xor
dec
test
mov
in
mov
mov
std
inc
adc
aaa
mov
leave
dec
pusha
outs
mov
xchg
push
clc
and
lods
mov
pop
pop
rcl
daa
xor
xchg
xor
sbb
xor
cdq
sub
mov
jge
ret
rcl
or
jbe
inc
xor
stos
pop
jbe
sub
ins
and
cli
out
repnz
daa
jmpw
cdq
iret
mov
or
loop
inc
out
dec
imul
jp
and
adc
sbb
cmp
imul
push
pop
xlat
mov
sub
push
shr
cdq
neg
sbb
sub
(bad)
xchg
xor
and
or
xor
jne
xchg
adc
test
jb
inc
push
pop
pushf
xlat
add
loopne
mov
adc
shr
pop
retf
lahf
mov
imul
loopne
push
or
inc
je
jmp
add
cmp
sbb
mov
aam
jb
retf
add
sbb
lea
dec
mov
jmp
xor
inc
xor
(bad)
call
mov
mov
pop
and
xchg
sub
imul
cdq
cmps
pop
sbb
cwde
aas
test
ror
push
mov
push
stos
pop
pop
pop
mov
push
mov
out
push
rol
mov
cdq
les
repnz
or
mov
xor
js
jp
cmp
clc
fwait
sahf
xchg
or
test
adc
scas
jp
dec
popa
(bad)
cwde
sbb
ins
sub
data16
and
je
test
clc
or
cmp
dec
pop
jl
out
xor
mov
mov
test
repnz
std
unpckhps
sub
mov
jne
into
out
adc
pop
push
adc
fldcw
(bad)
repnz
cmc
xchg
or
popf
add
mov
fnstenv
jmp
jmp
inc
(bad)
(bad)
jge
in
imul
icebp
add
adc
loop
(bad)
dec
test
iret
pop
sbb
fisttp
pop
jmp
and
ficom
push
xchg
int3
div
scas
mov
and
shl
ret
repz
and
inc
jp
mov
outs
lea
test
stos
shl
push
pop
fs
cmp
lea
ja
xor
or
jle
inc
test
pop
xchg
dec
nop
jae
mov
xchg
mov
(bad)
retf
pop
xchg
dec
mov
adc
cmps
mov
lea
rol
push
ss
out
out
std
fwait
jmp
inc
xlat
mov
cmc
cli
or
dec
dec
jg
rol
push
pop
ins
mov
sub
or
cmps
repz
cmp
test
into
xchg
std
je
jns
xchg
cwde
call
fbld
and
sub
push
(bad)
in
idiv
int3
dec
(bad)
push
inc
idiv
stc
(bad)
stos
push
inc
repz
movs
es
mov
pop
pop
out
dec
fwait
jecxz
cwde
xchg
push
xor
mov
add
into
cmp
pop
push
adc
scas
pop
js
repnz
pop
stos
(bad)
mov
cmp
pop
push
and
cmp
pop
pop
sub
jecxz
push
inc
push
in
dec
js
and
mov
es
loope
test
lds
inc
adc
lods
sub
or
adc
out
sbb
push
mov
stos
movs
xlat
or
xlat
push
lds
sbb
mov
jno
test
sbb
sub
xchg
mov
pop
in
lods
mov
lea
loop
jge
outs
xchg
lahf
xchg
xor
loope
jg
adc
mov
jbe
sub
xchg
ret
adc
sar
stos
lds
adc
out
xchg
mov
pop
dec
xchg
test
arpl
mov
ja
dec
call
mov
(bad)
xor
je
dec
mov
test
jecxz
iret
(bad)
sti
ins
jle
and
cmps
loop
xchg
inc
jae
jge
aam
and
mov
shr
cld
push
xor
sub
push
out
xlat
mov
mov
loopne
sbb
xor
mov
or
or
jmp
rcr
cmp
cmp
test
fidiv
jae
out
dec
shr
je
push
and
sar
pop
xor
(bad)
bnd
call
sahf
movs
jecxz
pop
jo
rcr
aad
cld
les
add
sti
push
inc
push
xor
pop
icebp
xchg
adc
mov
adc
icebp
cld
or
adc
lods
push
inc
repnz
fs
ja
jo
mov
sahf
cmc
xor
outs
cmp
repnz
daa
clc
sub
scas
xchg
call
pop
mov
sbb
push
cmps
sbb
test
lahf
push
cwde
sub
(bad)
loopne
and
xor
and
sub
sub
dec
adc
(bad)
dec
outs
push
leave
cmp
cmp
xchg
xchg
ret
inc
stos
arpl
xchg
xchg
jne
jo
sub
sbb
dec
jl
test
lahf
sub
mov
pop
ss
xchg
cmp
jo
adc
jb
pop
stos
ret
aad
jo
cmp
cmp
or
push
push
xchg
xor
call
aam
cmp
jmp
(bad)
stc
pop
adc
jmp
mov
call
movs
dec
dec
push
out
jae
pop
and
leave
or
sbb
push
push
push
sub
adc
retf
sahf
inc
jl
sub
test
mov
mov
rcr
jne
dec
das
popf
popf
push
xor
sbb
or
xchg
data16
cmp
int
adc
test
xchg
dec
mov
ror
mov
jmp
ins
cmp
popa
fistp
stos
pop
gs
jp
in
mov
mov
cmc
sub
add
sbb
inc
jne
lahf
in
aas
int
mov
xor
mov
jmp
mov
xchg
xchg
mov
cmps
or
pop
fldenv
popf
imul
jb
dec
push
mov
sub
test
aam
xchg
lock
and
test
in
call
jg
aas
mov
fimul
xchg
mov
push
ins
fsub
dec
dec
and
cmp
mov
(bad)
fwait
pop
or
cli
push
aad
lds
push
imul
jns
test
mov
ds
loopne
shr
mov
jno
cmp
sub
sub
or
fcomi
sub
mov
jl
mov
jmp
add
shl
and
mov
add
dec
(bad)
adc
int
xchg
das
sbb
test
adc
std
aam
mov
xchg
lods
imul
popa
in
dec
(bad)
(bad)
mov
xor
mov
pop
adc
repz
or
xchg
and
ins
lock
ins
js
in
or
add
mov
not
pop
sbb
sub
pushf
push
cs
loope
pop
outs
adc
pop
pop
dec
mov
jae
stos
fisubr
es
ret
(bad)
inc
dec
jecxz
in
cmp
cmp
fldenv
fidiv
mov
ins
push
mov
xchg
outs
in
les
mov
and
push
shr
dec
sahf
sar
daa
ja
mov
mov
leave
push
push
mov
dec
mov
mov
cmp
adc
jnp
mov
into
lods
adc
fstp
and
or
jg
cmp
or
dec
xor
or
xor
js
ret
cmp
repz
mov
adc
stc
mov
pop
adc
pop
jl
pop
cmp
jp
daa
mov
cwde
lods
jbe
(bad)
sbb
dec
adc
daa
lods
loopne
popf
sahf
dec
nop
mov
mov
fwait
sub
repz
cwde
ret
adc
ficom
and
scas
(bad)
out
jne
fidivr
jp
test
xlat
push
(bad)
sub
cli
mov
repz
inc
inc
loop
jmp
inc
lds
mov
cmp
adc
push
lahf
into
pop
stos
cmp
xor
lahf
adc
(bad)
lods
push
mov
pop
(bad)
lock
add
sbb
out
add
dec
test
push
add
or
hlt
mov
jne
test
mov
xchg
(bad)
ret
adc
sbb
adc
ja
jne
jge
and
(bad)
xor
addr16
sbb
loopne
cs
aad
xor
pop
jo
icebp
pop
int
push
jbe
adc
inc
int
js
mov
retf
jl
push
sub
js
test
jge
mov
popa
pop
cmps
mov
test
jp
cmps
inc
ret
fmul
fst
arpl
stos
popf
xchg
xchg
mov
daa
cmp
cdq
lods
jo
pop
mov
leave
dec
out
shl
and
sti
clc
adc
arpl
aam
popa
test
iret
mov
jle
sahf
mov
pushf
cmps
sbb
into
fwait
pop
jae
mov
jecxz
mov
std
cmp
ret
fisub
cmp
ret
jmp
xor
test
stc
retf
bound
jno
popw
scas
in
or
pop
js
scas
jg
mov
popf
arpl
fsubr
pop
mov
movs
dec
(bad)
fs
push
ss
(bad)
not
enter
imul
adc
cmc
add
xchg
fwait
jno
jno
mov
cmp
xchg
aad
cmps
movs
adc
xor
dec
stc
xchg
mov
mov
cmp
xlat
arpl
xchg
movs
(bad)
xlat
push
adc
into
or
stos
ret
bound
mov
adc
outs
pop
popf
cmp
mov
das
push
mov
ror
jo
fs
imul
pop
mov
mov
xor
call
jge
mov
mov
or
adc
icebp
(bad)
pop
cmps
mov
in
sbb
ins
fucomi
mov
mov
sub
push
loope
aaa
fiadd
jb
sti
repz
push
xor
adc
ja
xlat
pop
or
ret
(bad)
xchg
sbb
or
test
adc
xchg
repnz
mov
fisttp
mov
daa
jg
cdq
push
mov
(bad)
call
shl
sub
addr16
xchg
lds
nop
pop
imul
add
cdq
shr
iret
jns
mov
xchg
cli
pusha
adc
imul
or
nop
jmp
daa
or
xchg
and
pushf
adc
hlt
cmp
hlt
mov
int
gs
mov
mov
mov
lods
sbb
lock
xor
jp
jge
pop
out
std
nop
lods
and
cmp
xor
loopne
adc
outs
jne
push
arpl
in
fld
dec
mov
pop
jns
mov
inc
mov
adc
dec
push
mov
int3
cs
je
adc
dec
mov
or
jle
push
pop
iret
pop
dec
test
outs
dec
push
test
test
jae
stos
out
fadd
ror
mov
push
xchg
dec
inc
mov
dec
in
xchg
xor
sar
jbe
sbb
add
inc
push
sar
or
mov
mov
sbb
call
mov
pop
cmp
jbe
sub
ret
test
push
mov
ja
xor
dec
jecxz
pushf
push
cmp
loop
pop
in
iret
shl
jne
stos
rol
mov
or
stos
mov
inc
add
or
out
test
movs
mov
jnp
div
pop
das
adc
imul
inc
imul
jecxz
call
mov
daa
cld
mov
xor
icebp
(bad)
xchg
lahf
mov
mov
push
(bad)
cmp
mov
push
es
test
xchg
test
lea
xchg
and
mov
addr16
mov
stos
pop
add
jbe
push
cld
out
push
add
pushf
cdq
outs
repnz
xor
arpl
fs
cmps
test
cs
pop
mov
sar
jecxz
fcmovnb
ret
sub
mov
cmps
icebp
sub
js
cmc
ja
pushf
mov
sahf
push
adc
ss
imul
imul
and
stos
cmp
cld
push
sbb
ror
lea
or
inc
adc
push
sub
xchg
mov
fbld
mov
out
pop
mov
or
xchg
fistp
jne
ja
xchg
test
dec
loopne
xchg
mov
jne
cmc
sub
stc
xchg
jmp
sub
or
clc
ret
stos
and
sub
inc
sbb
js
pop
sbb
sti
js
faddp
xchg
dec
mov
dec
fidivr
fwait
loop
pop
out
xchg
cmps
and
and
xor
mov
bound
push
or
mov
out
clc
into
fdivr
mov
sub
pop
sahf
or
sti
shl
call
inc
xor
test
push
scas
pop
std
pop
(bad)
dec
lods
jp
stos
and
cmp
sahf
test
dec
stos
cmp
mov
xchg
push
cmp
aad
vorpd
xchg
mov
inc
mov
(bad)
sbb
mov
jbe
clc
pop
outs
mov
mov
and
ja
mov
test
mov
push
xor
xor
mov
cld
pop
and
inc
(bad)
cmp
ins
jnp
xor
into
cmp
(bad)
fld
out
setg
aaa
(bad)
jno
mov
ds
stos
cmps
(bad)
inc
adc
push
int3
retf
stos
arpl
cld
cmp
enter
or
mov
cmps
nop
test
mov
js
add
lods
pop
add
and
mov
fsubr
and
retf
(bad)
adc
fcom
fcmovu
jg
pop
push
sub
mov
call
sbb
stos
mov
cmps
fwait
lods
jecxz
mov
sahf
or
pop
lahf
fwait
shl
jmp
and
sti
cmp
and
xor
retf
ins
sub
ins
xchg
mov
xchg
dec
dec
mov
mov
add
movs
mov
pop
pop
inc
lea
lahf
mov
push
cli
xchg
adc
or
repnz
jb
cmp
sahf
push
retf
jl
xor
dec
fcomp
or
fmul
cmp
call
pop
and
add
mov
add
mov
add
scas
inc
sub
pop
pop
pop
dec
pop
mov
adc
push
sbb
cmc
inc
mov
test
lock
jb
sbb
je
int3
xor
cmp
iret
jns
push
xor
cmp
cli
rcl
out
out
pop
dec
push
lds
xor
adc
mov
xlat
cmp
xchg
pusha
mov
or
jnp
adc
shl
test
xchg
in
test
xor
imul
xor
xchg
ficomp
aam
cmovs
mov
fld
xlat
shl
retf
jno
mov
xor
and
dec
mov
xor
push
shr
push
retf
loope
and
dec
adc
inc
lahf
adc
call
sub
cmp
sbb
mov
inc
dec
xor
ins
(bad)
shr
sbb
xchg
enter
jmp
inc
mov
xlat
mov
add
push
mov
inc
sub
mov
cs
imul
pop
cwde
aas
pop
mov
adc
ret
sbb
mov
loop
mov
sub
fmul
and
cmc
push
loope
and
cmp
push
xor
dec
out
sub
clc
cmp
jne
int
movs
jne
fsub
mov
das
ins
adc
mov
push
cmp
and
data16
(bad)
jb
inc
lahf
mov
or
adc
sbb
add
inc
jae
jge
or
loope
sub
and
sub
or
push
jle
or
lahf
xchg
mov
(bad)
clc
cmc
das
mov
jle
je
xchg
(bad)
imul
lea
(bad)
sub
inc
test
sahf
add
call
jno
mov
cli
pop
jecxz
movs
(bad)
rcl
sbb
ret
enter
mov
mov
js
sub
push
popf
(bad)
sbb
mov
jp
sbb
xchg
and
mov
shl
inc
pop
(bad)
mov
(bad)
and
pusha
mov
xor
lock
in
adc
or
stc
inc
jb
adc
jnp
pop
adc
aaa
idiv
mov
mov
test
xchg
cmc
loop
scas
aam
xor
jno
aad
push
xor
outs
cmp
pop
fwait
add
adc
pop
sbb
cmp
inc
dec
int3
sbb
push
fcomip
push
mov
fs
sbb
mov
inc
js
daa
jmp
add
sub
int
mov
inc
retf
mov
adc
mov
cs
cmp
out
repz
mov
std
pop
pop
addr16
je
out
in
mov
inc
test
fwait
aas
push
retf
pushf
mov
shr
sti
jle
sub
pop
dec
and
mov
cmp
in
and
sbb
int3
fimul
ss
scas
xlat
pop
test
dec
pop
or
or
fisub
cli
test
jecxz
mov
clc
jns
nop
outs
rol
mov
je
dec
js
in
or
test
inc
call
ds
pop
and
sub
push
xor
lods
jae
jle
mov
dec
sar
adc
fld
mov
xchg
adc
retf
cmp
aam
push
xor
or
and
sbb
cld
pop
mov
or
xchg
cmp
sbb
adc
cwde
and
pop
aas
js
(bad)
xor
repz
mov
(bad)
out
popf
xlat
cmps
clc
xor
sub
or
rcr
jg
aas
add
dec
punpckhdq
arpl
xlat
loope
ftst
addr16
xor
ret
repz
xor
int3
fs
pop
(bad)
les
cmp
add
jbe
(bad)
fistp
lahf
mov
adc
add
add
push
test
fst
loope
iret
in
neg
mov
inc
repnz
jmp
dec
mov
shr
dec
outs
dec
mov
jb
out
add
inc
push
repz
div
std
pop
popa
dec
mov
je
sub
out
sbb
and
or
std
pop
repnz
cwde
cmp
aas
retf
push
mov
shr
icebp
sbb
ret
mov
pop
call
mov
dec
(bad)
dec
and
(bad)
jae
add
sbb
pop
dec
aas
popa
adc
gs
out
icebp
scas
adc
sub
(bad)
cmp
popa
outs
cmp
xchg
out
(bad)
lea
icebp
xor
cli
fldcw
add
mov
pop
in
or
push
fstp
mov
and
out
pop
mov
outs
sbb
xchg
loop
cmp
sahf
mov
cli
imul
mov
ins
jp
lahf
and
out
adc
mov
and
sti
fsubr
out
sbb
mov
ins
sbb
xchg
(bad)
cmps
add
dec
mov
xchg
rcr
and
push
lahf
mov
(bad)
js
add
adc
mov
mov
jmp
sahf
inc
dec
mov
in
fmulp
mov
dec
push
sub
sti
mov
cs
mov
cmp
sub
cmp
pop
loopne
push
jnp
push
ds
loop
fnstcw
xchg
fs
nop
repnz
jne
mov
pop
cmps
fnstcw
and
mov
jmp
nop
sbb
mov
add
mov
(bad)
mov
dec
popf
pop
add
imul
call
jne
jle
cld
mov
or
mov
mov
cmp
(bad)
pop
clc
icebp
je
int3
test
dec
pop
xchg
into
fs
imul
mov
jns
add
(bad)
js
push
into
imul
hlt
leave
sbb
in
mov
mul
ds
daa
jmp
das
int3
pop
cmp
adc
sti
out
or
dec
retf
sbb
push
mov
imul
or
or
xor
aam
rol
shl
add
and
fidiv
hlt
inc
add
inc
enter
iret
test
mov
mov
fsubr
inc
push
mov
inc
and
jns
adc
rol
(bad)
lock
and
jmp
shl
adc
fwait
cmps
pop
mov
cwde
xchg
std
and
in
fisub
ins
(bad)
(bad)
arpl
jns
ds
push
lahf
outs
loop
mov
add
and
pop
mov
js
pop
stos
sub
push
repz
sbb
das
dec
int3
std
mov
in
dec
mov
jmp
or
outs
outs
push
jl
pop
fcom
jg
mov
rcr
xor
xchg
lock
cmps
mov
dec
push
and
jg
sub
cld
sbb
out
(bad)
or
push
jle
inc
nop
jmp
ror
add
pop
leave
lods
mov
xor
push
mov
daa
mov
pop
hlt
lds
scas
xchg
movs
xor
imul
mov
push
and
mov
mov
in
push
sti
cld
fimul
xlat
cmc
cmps
mov
xor
adc
xchg
mov
mov
inc
lds
loope
mov
xor
pusha
dec
call
mov
inc
ins
rol
addr16
pop
add
mov
dec
mov
retf
test
cmp
(bad)
dec
pop
dec
ficomp
add
dec
fs
push
mov
jp
dec
mov
adc
xchg
in
cmp
mov
jae
into
jge
mov
mov
mov
xor
data16
test
outs
dec
or
mul
cmp
jae
lds
push
cmps
scas
and
xchg
add
out
jns
(bad)
loope
xor
shl
repz
aam
or
pop
repz
scas
mov
fadd
add
shl
fld
sbb
pop
mov
sti
bound
out
xchg
icebp
mov
jb
test
call
sbb
or
push
lds
aas
call
lods
or
add
cmp
pop
pop
or
cmc
enter
popa
out
mov
pop
mov
rcl
(bad)
dec
rcr
jnp
rcr
push
or
xor
arpl
test
sub
ins
enter
adc
lock
push
jbe
mov
dec
clc
hlt
xchg
mov
sar
fild
adc
xchg
xor
aas
xchg
cmp
pop
mov
jp
jnp
jnp
into
jbe
sbb
jns
repz
adc
dec
pop
mov
pop
out
loop
xchg
dec
out
xor
out
cmp
leave
int
inc
sar
push
jg
dec
pop
jnp
add
dec
pslld
and
fwait
jl
pusha
adc
cmps
mov
adc
sub
int
xchg
dec
jno
pop
mov
mov
or
mov
sbb
outs
pop
and
xchg
xchg
pop
in
das
push
sub
fst
dec
push
mov
sbb
data16
(bad)
pop
add
test
jle
dec
cwde
sub
and
mov
jnp
dec
sbb
cmp
test
xchg
jmp
jmp
xlat
mov
and
and
pop
dec
sahf
stc
add
push
out
outs
jo
pop
sbb
aas
das
push
or
jmp
cmp
cdq
es
loope
sbb
jb
mov
jo
inc
mov
jo
pusha
sahf
and
ins
lods
sbb
jae
sbb
mov
cmp
xor
(bad)
mov
inc
mov
pop
scas
rcl
pop
or
mov
dec
xchg
xchg
pop
fnstsw
ror
jl
clc
mov
test
add
add
(bad)
(bad)
inc
or
loopne
xchg
xchg
jecxz
cdq
popa
cmp
sbb
js
gs
and
add
jns
jmp
arpl
neg
lods
sahf
imul
push
std
shl
pop
sub
mov
cld
aam
jp
mov
ins
jb
pop
jb
cwde
addr16
sub
jmp
add
int3
add
cdq
imul
std
(bad)
dec
(bad)
jmp
xchg
loop
nop
push
icebp
xor
mov
cdq
mov
nop
cld
into
shl
fwait
syscall
dec
xchg
inc
test
popa
mov
and
data16
retf
dec
(bad)
xor
nop
out
ret
(bad)
pop
mov
and
shr
sub
mov
xor
cld
ret
pop
or
inc
pop
(bad)
mov
xchg
call
bound
pop
cmp
in
in
jbe
dec
repnz
sub
sar
mov
jmp
mov
xchg
retf
ror
pop
jmp
jp
out
pop
ror
lock
shl
repnz
push
pop
xchg
rol
call
push
or
mov
dec
rcr
sbb
jo
arpl
pop
fnstcw
sbb
mov
inc
enter
shl
or
(bad)
sahf
fistp
pop
xchg
pushf
push
pop
xor
test
gs
call
xor
push
mov
pop
ds
scas
(bad)
pop
ret
xor
or
mov
xchg
sub
sub
lock
ins
nop
lahf
cmps
ins
dec
pop
inc
add
dec
mov
loopne
xchg
cmps
inc
mov
xchg
push
lods
mov
sbb
in
adc
retf
repz
stos
arpl
cdq
mulps
push
scas
xor
fsub
mul
rol
icebp
dec
push
andnps
add
adc
loope
mov
mov
stc
lahf
rcl
(bad)
xchg
ficomp
out
inc
mov
iret
addr16
jno
mov
push
and
push
ja
das
out
pusha
cld
icebp
in
icebp
jge
jbe
xchg
mov
int
adc
repz
lods
xor
in
push
sti
xlat
mov
scas
jmp
leave
or
cmps
movs
fwait
jb
aaa
add
clc
add
pop
jnp
sahf
int
popa
aam
jne
popa
sub
mov
out
jmp
sub
enter
shl
and
ja
cwde
sahf
(bad)
jmp
mov
xor
dec
jns
push
loope
outs
sahf
add
imul
xchg
sti
dec
out
test
or
test
(bad)
retf
fsubr
sti
js
int3
xlat
retf
mov
aaa
rcr
test
pop
sub
jge
repz
xlat
stc
cmp
scas
cmp
jne
inc
fmul
(bad)
adc
fmul
cli
pop
sbb
add
pop
mov
adc
jne
mov
adc
push
xchg
ds
xchg
xor
mov
ins
scas
fiadd
cld
add
push
sub
fcmove
aad
add
mov
cli
push
aaa
xchg
out
mov
scas
or
xchg
cmps
xor
mov
xor
sahf
cld
repz
mov
mov
jmp
sub
push
inc
call
ret
shr
cvtpi2ps
mov
popa
xor
push
int3
clc
mov
into
xchg
pop
popa
sub
es
push
fld
mov
dec
jp
push
mov
mov
aad
push
lea
test
in
inc
mov
gs
shr
xchg
push
jo
mov
shr
cli
pushf
mov
nop
or
(bad)
mov
mov
jg
mov
pop
pop
ins
pop
pop
out
fldenv
aam
adc
retf
mov
out
(bad)
or
addr16
cmps
mov
push
fnsave
into
sbb
lahf
push
adc
or
sti
fwait
stc
stc
cmc
xor
ror
mov
mov
shl
jmp
pusha
fs
mov
rol
inc
mov
xchg
ins
ror
cli
cmps
jne
add
cmc
fnstsw
test
sub
jp
pop
xchg
iret
aas
pop
pop
add
data16
popf
rol
mov
xchg
mov
sub
pop
je
xor
hlt
xor
call
sbb
push
xor
ins
retf
pop
(bad)
jmp
sar
test
jg
(bad)
sahf
dec
(bad)
je
stos
cmp
clc
shl
sar
movntps
imul
out
ds
sti
sbb
test
cmp
mov
cmp
or
(bad)
scas
cli
adc
gs
rcr
jae
sar
xor
daa
pop
sti
fcom
adc
xlat
push
loope
xchg
in
dec
(bad)
cmps
(bad)
sub
inc
into
outs
jo
inc
lea
aas
and
js
clc
fcom
rol
les
icebp
sbb
mov
sti
mov
jns
inc
mov
jae
jge
(bad)
and
rcr
les
rol
shl
adc
imul
adc
call
lea
dec
call
dec
fidivr
or
test
push
sub
call
into
xchg
out
outs
jne
rcl
mov
sub
fdiv
ja
lods
jl
mov
adc
xor
jmp
jmp
int3
adc
mov
mov
xor
mov
fwait
adc
popf
xor
repz
mov
(bad)
fbld
pop
mov
shl
inc
bound
aas
aam
jl
xor
cmp
jne
stc
popa
mov
aad
pop
sbb
fild
adc
and
inc
xor
ret
cmp
push
sub
pop
ja
(bad)
fldcw
sub
add
add
les
inc
adc
dec
inc
retf
mov
in
sti
leave
push
js
imul
movs
jns
adc
add
aam
xlat
mov
mov
stos
call
mov
xchg
pop
jge
mov
iret
in
pcmpeqw
pop
not
test
or
(bad)
xchg
push
push
div
loop
fs
mov
aaa
mov
movs
pop
push
or
(bad)
clc
jl
test
sub
cli
push
mov
adc
jbe
or
push
pop
mov
mov
push
je
movs
sti
lods
test
and
xchg
add
adc
js
and
inc
xlat
rol
js
(bad)
pop
(bad)
stos
cmp
ror
xchg
xor
sbb
mov
mov
out
inc
push
xor
mov
mov
jae
ins
aad
cwde
shr
cs
jle
and
mov
(bad)
(bad)
cmps
out
mov
fisttp
(bad)
or
add
inc
pop
in
cmp
xor
inc
mov
por
jle
mov
out
jmp
jge
mov
into
cmp
aaa
mov
or
pop
jb
push
bound
ds
out
xor
or
daa
mov
movs
mov
ret
push
rol
mov
jne
pop
xor
cmp
out
test
shl
test
fcomp
sub
in
mov
ret
dec
push
add
loop
out
inc
pop
inc
test
or
stos
push
pop
dec
mov
xlat
ds
imul
jns
cmc
mov
cmp
lods
push
pop
pop
xor
push
imul
scas
jns
call
pop
rol
push
push
mov
fisubr
ins
pusha
repz
mov
cwde
adc
cld
adc
push
icebp
xor
push
inc
mov
jns
repz
jbe
adc
inc
(bad)
mov
adc
cmp
mov
mov
mov
pop
push
xchg
add
mov
mov
dec
push
mov
lods
mov
sbb
data16
outs
fsubr
test
sbb
mov
mov
data16
jno
arpl
cmp
ds
gs
ret
push
push
sbb
ret
inc
mov
xchg
cwde
test
pop
loope
xor
xchg
in
adc
and
pop
les
xor
fsub
lock
scas
gs
imul
lock
test
addr16
dec
mov
in
inc
xlat
mov
clc
jmp
mov
mov
push
test
nop
add
popf
jl
dec
inc
dec
sbb
rcr
pop
or
pusha
cmps
push
inc
call
cmp
cmc
dec
and
into
dec
pop
add
and
jp
bound
rcr
and
leave
jl
add
leave
xlat
or
mov
mov
pop
dec
in
dec
and
sahf
xchg
lock
add
mov
pop
cmps
daa
dec
outs
popf
inc
mov
pop
ja
mov
cwde
loope
cmps
xchg
pop
fcom
jg
jp
mov
pop
repnz
stos
add
xor
cmp
dec
lods
ds
scas
mov
std
push
sbb
int3
cmc
stos
jl
iret
loopne
ja
nop
sub
sub
dec
aaa
sub
les
test
mov
dec
jg
jecxz
mov
mov
mov
retf
lods
xor
bound
jmp
pushf
push
adc
fisttp
jns
mul
ins
ins
fadd
or
fnstenv
mov
clc
(bad)
sub
fdiv
sub
rcr
jae
rcl
or
push
jmp
js
sbb
mov
mov
por
or
jl
lock
test
xor
sbb
sbb
aaa
imul
js
mov
enter
test
mov
test
sbb
lock
fcom
push
retf
push
mov
les
stc
dec
mov
adc
(bad)
xchg
pop
cdq
dec
jns
mov
hlt
hlt
jnp
psllq
sub
xor
lea
fyl2x
not
sbb
add
neg
sbb
sbb
lock
xor
ins
test
push
and
fwait
popf
pop
mov
adc
mov
shr
(bad)
mov
push
aas
or
jo
pop
in
(bad)
ins
xor
into
cmc
mov
in
jbe
test
xor
sti
and
inc
call
jecxz
and
clc
mov
mov
and
cmp
les
loopne
aas
(bad)
test
jecxz
fiadd
push
xchg
mov
ss
sub
mov
add
add
push
(bad)
out
jmp
fisttp
adc
(bad)
in
add
out
pusha
adc
ins
or
scas
mov
test
daa
(bad)
scas
adc
dec
cmp
in
gs
shr
push
outs
and
js
mov
lods
adc
pop
not
ins
sbb
pop
fisubr
pop
sbb
jmp
sbb
inc
xchg
xlat
pop
in
mov
scas
js
mov
lahf
sbb
push
inc
leave
test
gs
daa
mov
and
lods
scas
lods
rol
je
add
jno
sar
mov
and
ret
pop
sbb
nop
and
not
out
xchg
test
pushf
mov
sub
ja
hlt
and
lods
(bad)
pop
ficomp
mov
jle
jmp
sub
jmp
sub
add
cmp
or
cmps
cdq
jp
xor
cmp
xchg
shr
in
pushf
mov
mov
sub
loope
cmps
jp
mov
jne
gs
xchg
pop
in
lahf
test
aad
fadd
ret
mov
cmps
cld
loop
mov
mov
lea
ret
imul
xor
xchg
mov
xor
jg
cmp
mov
add
int
js
jae
out
loope
xchg
test
js
lahf
pop
rol
leave
lds
xchg
(bad)
loope
call
mov
adc
sbb
idiv
mov
push
xor
xchg
push
fbld
dec
cmp
cmp
rol
add
dec
fsub
scas
mov
xor
sti
in
outs
and
nop
ret
neg
dec
mov
shl
dec
lock
loop
push
push
jb
lods
ds
leave
in
mov
jl
mov
sbb
aaa
mov
mov
bound
data16
jnp
adc
or
aam
jmp
sbb
icebp
popf
icebp
ja
push
xchg
repz
mov
call
dec
mov
inc
jl
xlat
pop
ret
pop
shl
rcl
mov
sbb
mov
mov
xor
fild
mov
mov
or
call
push
hlt
adc
leave
mov
jb
pop
inc
outs
in
sub
mov
lds
in
mov
fisubr
mov
xchg
loopne
pop
and
outs
adc
xchg
and
sbb
xor
leave
pop
add
xor
mov
cmp
dec
or
cmp
(bad)
enter
mov
popf
mov
jae
popf
ds
daa
jns
pop
jns
push
adc
int
add
pop
pop
dec
or
fstp
pop
add
sti
aas
popf
into
push
lods
and
adc
xlat
dec
movs
js
xchg
inc
push
cmp
out
and
dec
jbe
clc
outs
jl
daa
fnstcw
cmp
inc
sbb
or
out
jmp
sub
out
fmul
jl
pop
pop
dec
cmp
mov
(bad)
and
fs
and
jmp
mov
cwde
adc
jo
ret
dec
dec
dec
pop
stos
cli
(bad)
je
js
mov
test
push
sahf
and
xchg
nop
(bad)
push
(bad)
push
bound
adc
xchg
pop
pusha
sbb
push
jmp
mov
ins
pop
jae
(bad)
(bad)
lods
cmp
fwait
mov
into
dec
loope
in
aam
cmp
fist
ins
xchg
xor
mov
add
push
es
add
push
xchg
ss
in
push
jmp
sub
inc
jo
shl
(bad)
mov
cdq
xchg
push
(bad)
mov
call
dec
pop
in
outs
xchg
sbb
nop
test
sar
push
in
movs
cmps
ds
adc
xchg
lods
lock
(bad)
cmps
push
cmp
cmp
dec
dec
arpl
cdq
and
xchg
retf
aam
cmp
stos
test
aaa
sti
fstp
inc
js
and
(bad)
nop
dec
(bad)
and
jne
cs
add
out
pop
out
outs
mov
cwde
jecxz
and
movs
inc
pop
add
movs
rcl
or
adc
ja
mov
pop
adc
mov
push
and
aas
(bad)
sub
pusha
ins
(bad)
mov
and
push
sti
fwait
cmp
adc
lds
out
xchg
mov
aad
clc
(bad)
fsub
mov
lods
add
adc
dec
retf
jbe
push
jp
jmp
dec
adc
jb
add
call
sbb
xchg
test
je
mov
ja
push
test
pop
push
xchg
jl
inc
enter
inc
mov
pop
and
jne
mov
loope
push
add
dec
sub
push
shr
jno
jb
jae
not
adc
mov
jp
lahf
add
sti
stos
(bad)
mov
std
aad
test
cmp
and
adc
cmps
adc
cmp
mov
cld
movs
adc
mov
jo
cmp
test
or
mov
mov
mov
xchg
sbb
(bad)
not
or
imul
sub
pop
xchg
adc
stos
add
shl
(bad)
movs
mov
xor
test
(bad)
test
and
jecxz
jo
je
test
and
mov
cli
pop
dec
jne
lea
dec
shl
dec
(bad)
outs
jmp
jbe
jae
pushf
xor
in
dec
ss
jmp
xor
xchg
ins
sub
or
outs
sbb
dec
cmp
frstor
ins
test
mov
das
jmp
sar
xlat
cmps
neg
push
sbb
pop
imul
mov
test
mov
shr
dec
push
(bad)
bound
jecxz
inc
stos
add
dec
or
cmc
lea
push
xor
stos
xchg
jmp
stc
inc
add
clc
lea
pop
outs
lods
inc
dec
adc
jns
cmps
cmp
lods
ret
mov
pop
aam
sbb
(bad)
nop
pop
add
out
test
outs
mov
and
jno
and
pop
les
scas
out
je
xchg
fcom
push
sub
dec
movs
xchg
push
cmps
xor
mov
fst
shl
pop
dec
pop
pop
es
arpl
enter
cmp
call
xor
jno
imul
add
jne
inc
adc
je
ins
mov
mov
adc
jecxz
(bad)
xchg
sub
xor
sub
adc
push
xor
add
(bad)
popa
dec
mul
lods
mov
mov
jecxz
idiv
adc
aaa
push
push
sbb
sub
mov
loop
daa
je
into
jne
iret
xlat
out
pop
clc
fstp
sbb
sub
mov
mov
xor
(bad)
out
fistp
daa
cmp
stos
jmp
pop
aad
mov
cwde
test
pop
(bad)
rcr
fidivr
(bad)
sub
pop
cmp
xor
sub
dec
hlt
add
xor
jecxz
inc
cmps
cmp
jns
push
push
movs
sub
(bad)
push
jg
mov
jg
fsub
inc
sbb
das
loope
fiadd
xor
(bad)
xchg
push
cmp
rol
sbb
das
sbb
xor
jnp
or
cs
jo
fnstcw
pusha
inc
mov
in
mov
and
mov
jl
mov
aad
out
xor
jns
mov
jno
sahf
lock
dec
push
mov
loopne
in
rol
fsubr
repz
out
and
jmp
xchg
mov
test
xchg
xchg
ret
or
test
test
xchg
sub
adc
sub
jae
xchg
or
aam
adc
fstp
fistp
icebp
pop
mov
fucom
push
enter
cwde
push
pushf
(bad)
jle
mov
ins
in
sbb
stos
pop
iret
movs
imul
inc
nop
cwde
test
sbb
and
stos
inc
cmps
in
fcomp
push
cmp
ret
repz
dec
call
notrack
cmp
jae
jg
outs
in
or
jp
pop
sbb
pop
inc
adc
movs
pop
rcl
mov
mov
or
pop
repnz
cdq
xlat
mov
xchg
adc
push
push
in
cdq
mov
inc
call
call
dec
mov
mov
and
mov
jns
(bad)
idiv
push
repnz
or
scas
(bad)
sub
inc
les
push
imul
jge
nop
test
jge
inc
xor
or
jle
test
fistp
jae
movs
xor
les
mov
xchg
aam
retf
ja
aaa
jbe
fdiv
stos
rcr
xor
dec
js
cli
lock
push
scas
out
pop
fidiv
push
inc
xchg
sub
sub
aam
cdq
add
ret
push
pop
mov
xchg
dec
je
loop
pop
xor
test
xor
xor
stos
pop
das
cmp
icebp
jmp
aam
mov
xchg
sti
mov
add
dec
mov
aaa
or
jge
leave
sbb
xchg
inc
inc
int
adc
icebp
ins
add
and
and
test
cmp
and
mov
mov
cmps
xchg
popa
hlt
inc
pop
retf
arpl
pop
iret
enter
sbb
jmp
scas
push
adc
call
and
jg
pxor
add
(bad)
shl
pusha
jno
add
out
loop
cmp
das
int3
imul
and
jnp
stos
out
pop
lds
sub
and
mov
iret
xchg
cdq
imul
jb
sbb
cli
mov
xchg
stos
mov
mov
and
outs
aaa
mov
push
ins
fld
and
adc
nop
gs
cmps
out
imul
idiv
jns
mov
retf
out
adc
jg
xchg
mov
icebp
dec
cmp
mov
ja
xor
xlat
xlat
jle
mov
lds
ja
jp
adc
mov
push
or
(bad)
or
lods
push
sbb
cmp
jb
sti
inc
jne
hlt
xlat
jmp
push
mov
dec
jns
inc
repnz
dec
not
(bad)
fmul
test
outs
in
adc
out
out
fdivr
punpckhdq
cmp
mov
jbe
lds
pushf
inc
sbb
mov
push
jno
neg
in
std
dec
mov
dec
cs
and
stos
jb
jae
and
aas
arpl
stos
sbb
test
(bad)
repz
out
mov
call
push
fisubr
xchg
ds
in
scas
mov
imul
mov
ud2
sbb
retf
lods
jno
(bad)
test
mov
sub
repz
dec
adc
push
and
push
rcl
inc
sbb
lds
inc
mov
xchg
cmp
inc
out
imul
leave
lods
popf
jecxz
movs
adc
sub
dec
outs
sub
adc
sub
(bad)
mov
or
aad
repnz
stos
sbb
pop
bound
rcr
scas
cmc
jmp
adc
cmp
ret
popa
into
adc
gs
aam
dec
inc
into
cmp
(bad)
sar
cmp
mov
add
adc
lahf
cdq
push
div
daa
lock
cmp
and
inc
push
test
adc
pop
loop
mov
jmp
adc
adc
les
mov
sub
cwde
mov
repnz
(bad)
add
aas
xchg
jmp
nop
fistp
jno
sbb
jge
in
fnstcw
retf
movs
repz
jo
test
call
jo
mov
push
movs
stc
pop
adc
das
sbb
jne
pop
xor
push
sub
xlat
sbb
(bad)
push
pop
test
lock
jbe
fcom
movs
cmp
jge
add
in
or
fwait
rcl
in
sar
pop
pop
rcl
push
and
nop
(bad)
loopne
in
pop
xchg
sahf
shl
lds
imul
ins
int
pop
ds
fmul
mov
cmp
push
loopne
ins
fsubr
or
ss
push
or
in
bound
lods
mov
test
(bad)
jnp
push
ret
mov
xchg
cdq
mov
sub
repz
hlt
and
fisttp
mov
loopne
or
mov
dec
inc
dec
push
in
stos
pop
cdq
cmp
ins
mov
or
mov
mov
imul
mov
or
jae
outs
jo
push
pop
mov
mov
mov
push
lea
push
mov
xchg
jmp
sbb
adc
cmc
inc
push
outs
sub
inc
and
mov
push
fisubr
dec
and
movs
les
pop
stos
mov
jae
arpl
mov
leave
mov
jns
pop
aaa
adc
daa
push
mov
shr
add
fistp
xor
and
add
test
xchg
mov
dec
jl
ja
shr
mov
popf
fcomi
jae
mov
loop
dec
or
shl
inc
cvttps2pi
stos
mov
xor
aas
out
add
fild
or
nop
sbb
popa
xchg
scas
xor
sub
in
or
jnp
out
sbb
in
xor
cmps
cmp
jae
dec
sub
jae
jp
and
and
outs
add
push
sub
mov
cmps
push
stc
hlt
dec
push
pop
iret
adc
ins
xchg
dec
outs
and
mov
dec
pop
or
inc
loope
cmps
sbb
jle
push
sub
adc
es
add
retf
sub
not
or
pop
jmp
mov
jmp
jns
xor
sbb
mov
mov
sbb
inc
sbb
cmp
xor
fldcw
movs
imul
pop
dec
das
mov
adc
in
sahf
inc
mov
movs
xchg
cmp
push
call
lods
cmp
push
aam
push
mov
jmp
call
mov
ss
enter
lods
jp
xor
(bad)
cld
fistp
jmp
inc
push
imul
dec
xchg
mov
icebp
(bad)
mov
sub
cli
cmovb
out
ds
xor
(bad)
jmp
inc
das
xchg
cwde
mov
addr16
push
adc
inc
aam
fnstsw
cli
lods
mov
or
mov
adc
lea
inc
pushf
pop
adc
in
hlt
sub
mov
inc
ins
fisub
push
sbb
call
xor
into
inc
mov
or
ja
pop
adc
pop
ret
pop
ss
mov
pop
mov
dec
xor
ss
jno
(bad)
xor
xchg
mov
adc
fwait
jbe
aas
or
ret
mov
push
out
mov
pop
paddb
pop
jno
je
mov
not
pop
cmp
pop
ss
xchg
call
ds
test
dec
mov
adc
scas
stos
push
out
mov
popa
dec
mov
or
pushf
lahf
je
stos
idiv
push
cmps
cld
fistp
icebp
or
cmps
lea
lods
pop
sbb
pop
cmp
sub
lock
loopne
retf
nop
cmps
mov
outs
call
(bad)
pushf
adc
sub
sbb
sbb
(bad)
retf
pusha
shl
imul
mov
fld
out
cmovl
stc
inc
ror
pop
push
mov
cmp
movs
cdq
mov
xchg
add
pusha
sbb
sti
jo
dec
out
jge
js
outs
mov
pop
test
jns
jg
mov
dec
int
xchg
in
jg
lahf
loopne
es
sub
jae
inc
add
mov
cli
or
mov
mov
sbb
xlat
jo
mov
push
std
fcomp
jno
sbb
loop
ds
mov
popa
icebp
ret
test
dec
inc
arpl
jae
add
pop
cmp
push
dec
and
bound
and
gs
aas
mov
adc
jmp
sbb
push
mov
cli
into
popa
xchg
adc
jmp
xor
cdq
pop
adc
jae
repz
psubsw
test
push
(bad)
hlt
xchg
xchg
mov
ins
cmp
js
out
call
pop
fcom
test
loope
(bad)
retf
lds
repz
ss
jo
imul
jae
sti
mov
adc
add
sub
cmp
inc
iret
jae
pop
ins
out
loope
arpl
dec
pop
pop
fild
mov
imul
out
mov
dec
sub
cs
bound
fdivr
call
mov
jmp
repnz
push
jl
dec
inc
(bad)
sub
inc
fadd
mov
pop
mov
daa
movs
(bad)
pushf
fs
clc
pop
push
cmps
lods
aaa
test
inc
mov
arpl
adc
push
mov
and
dec
movs
test
or
and
dec
sbb
and
ja
xlat
movs
mov
enter
retf
retf
dec
into
pop
enter
rol
imul
xchg
and
mov
imul
inc
jnp
es
xchg
ret
mov
xchg
dec
xchg
test
jg
xor
stc
pop
jecxz
cmc
fild
jecxz
mov
pop
sub
ins
lds
mov
test
aad
sub
sbb
pop
jmp
out
loope
inc
ror
sub
mov
or
jnp
fwait
out
pop
mov
sub
hlt
mov
addr16
loop
xchg
dec
mov
and
cmp
in
and
popa
in
adc
cdq
and
lods
mov
mov
mov
(bad)
jnp
push
stc
dec
inc
(bad)
cld
xor
mov
adc
push
and
inc
adc
scas
dec
mov
ds
jle
outs
and
xchg
sbb
lods
push
or
mov
cmp
iret
dec
dec
sub
adc
xor
out
mov
or
test
js
xchg
movs
(bad)
mov
call
int
dec
icebp
and
or
imul
rcr
scas
call
jno
cwde
pop
pop
adc
pop
xchg
mov
mov
test
jae
mov
das
xor
icebp
popa
xor
imul
test
inc
dec
mov
or
inc
and
add
push
cmps
xor
xor
add
retf
iret
pop
das
pop
jae
inc
sti
push
lods
inc
(bad)
or
or
cmp
pop
cmps
or
pop
mov
inc
out
xor
adc
jnp
in
pop
iret
fst
xchg
mov
aad
call
pop
xor
scas
cmp
fsubr
cmp
(bad)
dec
push
mov
jmp
inc
stos
das
push
and
xchg
in
dec
cs
mov
sub
dec
cmp
xchg
push
(bad)
mov
sbb
jg
sbb
mov
inc
pop
dec
push
dec
pop
jmp
add
sbb
lods
sti
pop
pushf
xor
and
aam
pushf
jne
out
xchg
(bad)
call
or
mov
jmp
iret
mov
(bad)
aas
push
add
lock
(bad)
sbb
repnz
pop
test
sahf
repnz
or
mov
xchg
ss
outs
scas
push
push
dec
jecxz
dec
xor
mov
out
pop
adc
xor
arpl
js
and
out
iret
ret
lds
sbb
or
dec
inc
adc
pop
int3
outs
xor
movs
xor
push
mov
mov
mov
push
test
aaa
sbb
cmp
pop
shr
dec
pop
(bad)
rol
call
jns
or
jo
jl
sub
xor
push
mov
dec
icebp
cmp
in
inc
lds
xchg
stc
pop
mov
inc
jmp
adc
lods
mov
cdq
clc
movs
jle
adc
xor
jb
cmc
je
std
push
std
lahf
icebp
xchg
inc
pop
scas
jg
hlt
jmp
and
xor
pop
loop
inc
and
mov
sub
xchg
push
fucom
loopne
(bad)
fstp
cmp
dec
lods
out
in
mov
push
adc
out
mov
mov
int
mov
pusha
and
pop
cmp
test
add
in
push
inc
test
add
xor
xchg
daa
dec
out
pop
xchg
pusha
dec
outs
add
xchg
pop
pop
maxps
inc
sbb
sbb
sti
and
mov
fld
inc
retf
mov
in
repz
pop
dec
or
xchg
loopne
jmp
test
(bad)
outs
div
call
sub
sbb
adc
repz
(bad)
(bad)
adc
pop
es
inc
sbb
push
das
dec
pop
popf
mov
and
jecxz
ss
aam
pusha
pop
movs
and
hlt
or
cli
or
inc
mov
scas
push
mov
mov
cld
xlat
lods
cs
pop
call
hlt
shr
leave
div
aaa
imul
(bad)
xchg
ins
sbb
nop
loopne
jge
les
pop
leave
imul
sub
mov
xchg
and
dec
ins
in
xor
retf
mov
stos
mov
mov
sub
jae
sbb
std
outs
mov
cmp
aam
aam
mov
call
push
loop
aad
mov
jecxz
in
cmp
push
jnp
inc
inc
ret
push
cmp
inc
fwait
cmps
ja
adc
sub
pop
and
jp
dec
cld
int
ins
mov
jmp
push
test
cld
dec
loope
inc
mov
mov
xor
mov
je
mov
clc
lds
imul
mov
inc
fwait
in
aas
mov
retf
cs
mov
out
mov
xlat
int3
inc
or
sbb
mov
fidivr
xor
enter
loope
cdq
scas
mov
xor
daa
inc
cmp
xor
inc
je
test
push
and
fwait
and
ins
loop
int
xor
out
loopne
sub
cmps
mov
xchg
test
repz
call
mov
int3
inc
pop
pop
movs
rcl
je
xchg
xchg
mov
xchg
mov
pop
push
jnp
shr
add
ficom
jecxz
mov
xor
sbb
div
mov
js
jg
pop
jbe
inc
add
mov
xor
adc
sub
dec
mov
fist
test
pop
xchg
push
daa
add
jno
cmc
jae
in
daa
out
jbe
push
mov
nop
fisttp
retf
loop
(bad)
out
aas
add
and
and
popf
fnstcw
fwait
push
mov
push
adc
or
push
and
or
xor
popa
or
push
mov
outs
inc
test
jl
sub
pop
shr
sub
sub
mov
sar
xchg
or
lock
jns
pop
dec
or
xchg
aad
mov
loope
call
sbb
(bad)
fcom
loopne
stos
sub
jno
xor
mov
mov
(bad)
dec
inc
add
shl
repz
jmp
add
outs
pushf
cmps
lock
fs
jmp
pop
fwait
mov
mov
add
fisub
adc
mov
in
jg
add
ret
scas
or
ja
adc
jo
mov
imul
ror
push
pop
mov
repnz
scas
jle
stos
push
loop
mov
ret
cmp
add
addr16
mov
in
and
mov
out
pop
adc
adc
sahf
push
je
iret
xor
popa
add
mov
push
popa
jp
push
mov
jmp
mov
pop
adc
fnsave
(bad)
das
imul
scas
outs
cmp
xor
test
pop
loopne
jg
adc
jmp
ret
test
adc
not
dec
mov
(bad)
pop
dec
and
enter
test
mov
cmp
jg
sub
add
sub
lea
mov
int3
adc
add
pop
not
xchg
push
outs
(bad)
jmp
pop
mov
cmp
xlat
add
sbb
int3
mov
dec
iret
es
xchg
jnp
mov
sbb
mov
arpl
jge
(bad)
fbstp
das
mov
sub
jp
sti
out
xlat
jbe
lods
enter
into
repz
add
adc
aaa
gs
fldcw
imul
fdivr
jno
leave
scas
idiv
dec
pop
mov
fcomp
retf
out
push
ds
mov
adc
cmp
push
out
xor
jno
fcmovu
dec
jge
shr
out
(bad)
addr16
imul
pop
add
xchg
and
ror
cdq
cmc
aam
xor
aam
or
jb
push
rcr
push
xor
loop
lods
(bad)
(bad)
ja
lods
lods
in
mov
push
sbb
(bad)
mov
sbb
adc
mov
inc
cmp
push
popf
shl
mov
pop
fdiv
cmp
(bad)
pop
int3
out
push
cs
sbb
xor
push
int
out
pop
add
sar
dec
jmp
cmp
int3
ror
xor
jmp
(bad)
out
sbb
movs
cmp
jne
fiadd
popa
int
cmps
fild
jno
sbb
mov
xchg
ins
mov
inc
xor
cmp
push
out
or
sahf
addr16
mov
cmp
sahf
addr16
lock
hlt
jb
cmp
repz
out
popf
lods
adc
jg
mov
jbe
add
or
(bad)
int
lahf
adc
test
jge
sbb
inc
dec
or
ret
fwait
push
movs
lock
mov
inc
mov
jg
mov
int
jmp
cmp
in
les
add
aad
jl
jecxz
data16
adc
mov
scas
and
inc
xchg
fwait
in
jecxz
loope
mov
lahf
test
in
fst
rcl
and
jae
push
jns
into
retf
dec
call
xor
jge
cmp
xchg
in
cmps
ds
hlt
sbb
lods
js
add
out
jo
xor
push
pop
mov
sbb
sbb
or
pop
xchg
inc
shl
ret
loopne
je
mov
xor
add
data16
jae
sub
ror
retf
ret
pop
xlat
mov
lods
mov
mov
adc
mov
pop
adc
in
arpl
lds
cmp
add
inc
mov
mov
jno
push
pop
aaa
push
cmp
adc
inc
cwde
jle
lods
jmp
rol
into
aas
jo
push
mov
jmp
mov
adc
add
loope
pop
mov
xchg
dec
les
mov
sub
cmps
pusha
or
xor
mov
fisubr
push
push
cmps
sub
fsub
into
not
push
sbb
(bad)
sub
inc
inc
mov
or
in
jbe
test
xchg
in
repz
jbe
pop
pop
mov
out
mov
sub
sub
and
fsub
ja
push
jno
and
std
repnz
pop
add
pop
xor
dec
pop
xor
aam
retf
dec
fcomp
push
jo
mov
lock
inc
mov
xor
jno
push
add
dec
rcr
cs
cli
pusha
cs
jmp
imul
inc
mov
cmp
sti
arpl
lock
pop
add
ret
and
cmps
mov
add
retf
adc
cmp
rcr
aaa
test
push
dec
dec
cmp
dec
xor
or
xchg
jns
int3
je
cld
xchg
fcomp
mov
mov
fild
ret
cs
push
aas
dec
cvtps2pi
dec
fs
addr16
or
int3
(bad)
ds
pop
mov
ret
pop
pop
jbe
adc
cmc
sub
out
or
jg
mov
(bad)
xchg
xchg
xchg
int
movs
pop
cmc
js
sbb
push
sti
inc
outs
retf
push
shl
test
out
xor
idiv
es
mov
sub
call
fistp
stc
cmp
pop
adc
add
rcr
movs
xchg
mov
ret
inc
xor
(bad)
sbb
push
nop
pop
fisubr
in
or
mov
pslld
movs
clc
mov
xchg
test
mov
adc
adc
inc
xchg
std
and
inc
leave
mov
or
(bad)
mov
imul
sahf
daa
mov
rcl
add
or
mov
je
sahf
ss
int3
jns
xor
(bad)
in
mov
ror
out
xchg
push
les
loopne
sbb
add
jmp
(bad)
(bad)
xchg
mov
jmp
inc
lock
mov
mov
repz
(bad)
add
in
les
push
push
dec
sbb
hlt
pusha
(bad)
xor
jno
out
fadd
loop
sub
das
out
test
jmp
mov
pop
stos
(bad)
js
add
mov
adc
pusha
call
push
js
push
and
ins
pop
inc
jmp
add
aas
dec
sub
daa
sbb
mov
jle
xor
mov
xchg
popf
mov
jecxz
les
cmps
sub
neg
mov
stc
jle
pop
mov
pusha
loope
add
cmp
fmul
push
out
sbb
leave
out
push
(bad)
or
push
xor
rcr
call
call
mov
mov
rcl
cmc
out
mov
rcr
push
push
hlt
lds
inc
jmp
retf
dec
repnz
sbb
pop
push
jno
pop
hlt
fstp
inc
cdq
xchg
dec
add
pop
mov
es
sub
dec
xchg
dec
pusha
or
pusha
pop
xor
addr16
sbb
or
cmps
mov
out
and
outs
ret
or
fldcw
adc
out
cmp
mov
mov
and
rcr
inc
nop
dec
xchg
xor
push
ins
xor
mov
icebp
dec
mov
arpl
jb
sbb
out
mov
stos
out
mov
sbb
out
in
push
dec
push
fs
das
xor
pop
and
(bad)
pop
addr16
rol
movs
mov
(bad)
fild
cs
xchg
mov
enter
bound
inc
jmp
pop
add
imul
cwde
(bad)
fdiv
mov
std
sub
retf
leave
ja
cmc
adc
inc
imul
ja
pop
rcl
xor
fnsave
lea
xor
(bad)
neg
sbb
scas
nop
jo
xchg
dec
xchg
lahf
inc
js
scas
stos
sub
jo
dec
jl
push
scas
mov
xchg
loop
not
hlt
dec
xor
sar
(bad)
shr
or
test
xor
aad
shl
and
add
jno
mov
adc
or
mov
cmp
dec
add
mov
cmp
mov
ss
lea
pop
lahf
jl
mov
dec
lahf
lock
sub
(bad)
movs
ja
push
inc
sub
sbb
pop
xchg
or
pop
into
mov
ficomp
inc
mov
jo
scas
push
out
mov
out
jns
sub
sar
sar
pop
xchg
mov
(bad)
shr
xor
hlt
add
push
mov
ret
push
rcl
pushf
sbb
js
sti
pusha
in
inc
aas
inc
ss
push
fucom
lods
std
jbe
inc
(bad)
lahf
ja
jp
icebp
in
test
inc
and
lods
dec
pop
(bad)
adc
mov
ins
inc
retf
fdiv
scas
and
test
push
mov
cmp
rcr
mov
in
sbb
ja
(bad)
xchg
mov
xchg
inc
or
mov
cmp
push
push
pop
push
mov
stc
das
test
mov
arpl
in
sahf
retf
jp
pop
(bad)
sbb
add
call
xor
pusha
pop
mov
sub
movs
jecxz
test
cmp
call
es
bswap
pop
sbb
cs
sub
mov
inc
cmp
sub
in
lea
stos
ins
es
push
jmp
xchg
test
or
stos
out
lock
lock
in
pop
add
or
jge
inc
cli
add
inc
ficomp
and
add
cvtpi2ps
pop
fcomp
mov
or
rcl
pop
punpckhwd
jl
sbb
pusha
out
inc
call
sbb
push
add
ins
int3
pop
lods
dec
sub
mov
jo
jg
(bad)
fist
pushf
cdq
xor
cmp
sti
mov
add
(bad)
mov
cmp
daa
lods
push
daa
jp
inc
xor
mov
inc
jmp
inc
mov
outs
xchg
jno
call
and
sar
jl
mov
cmps
fs
cmc
into
dec
mov
not
je
inc
xor
pop
dec
lds
add
in
in
mov
mov
jmp
fxch
mov
imul
sbb
ins
iret
fisttp
jmp
sub
(bad)
in
test
adc
lock
jb
push
xchg
loopne
cli
int3
cmp
mov
(bad)
jle
movs
sub
lock
mov
retf
and
out
push
or
call
bound
clc
pop
mov
or
(bad)
fsub
fs
pop
adc
dec
jbe
test
sub
scas
inc
(bad)
jmp
add
cld
xchg
mov
sub
aas
mov
xchg
jno
pushf
stc
sub
fwait
mov
and
bound
xchg
cmp
(bad)
cmp
aad
scas
push
dec
or
inc
add
icebp
jle
imul
jmp
add
movs
cmp
xchg
in
sahf
and
lods
and
cli
ror
xor
les
sub
xchg
sbb
cmp
rcr
std
fst
xor
int
ret
jmp
mov
or
cmp
das
mov
cmp
jg
std
or
xchg
cld
push
add
xchg
in
xchg
aad
cs
mov
(bad)
push
jo
(bad)
or
in
scas
leave
pusha
add
dec
cmps
sbb
frstor
dec
mov
repnz
sti
jbe
xor
xor
jecxz
aas
mov
jae
jno
sbb
les
or
mov
pop
dec
mov
mov
out
pop
aaa
jge
pushf
add
mov
or
pop
adc
in
adc
fucomp
call
push
and
dec
mov
repnz
clc
aad
or
cli
retf
repnz
add
mov
dec
xor
xchg
or
je
inc
mov
ret
push
sbb
jg
outs
push
ss
in
scas
pop
xor
push
sahf
pop
cli
mov
cmp
adc
(bad)
hlt
mov
inc
mov
push
(bad)
adc
cmp
pop
mov
lahf
test
(bad)
sbb
aam
inc
neg
lahf
mov
inc
jno
mov
adc
push
pop
add
jbe
sub
test
or
cdq
add
mov
iret
xor
arpl
mov
add
movs
sbb
scas
call
sub
(bad)
push
jmp
mov
cmp
aam
and
repnz
mov
cmp
mov
adc
push
ret
sahf
pushf
rol
xchg
aad
jmp
(bad)
fwait
iret
pop
dec
jne
out
data16
dec
daa
cwde
jb
in
es
push
stos
xor
out
xchg
in
loop
mov
out
adc
les
add
lods
lock
shl
rcr
xchg
cmp
pop
inc
fidivr
dec
pop
mov
out
sti
xor
test
mul
push
mov
jge
add
clc
fisub
or
sub
inc
mov
adc
inc
mov
inc
retf
mov
pop
pop
stos
pop
mov
add
mov
dec
sub
bound
mov
call
(bad)
lahf
add
popa
inc
out
and
loope
mov
add
test
push
mov
mov
ret
cmp
fmul
int
fsubr
and
cmc
cdq
jne
in
xchg
fs
jl
inc
fsubr
sar
mov
lahf
fisub
inc
push
add
add
dec
push
mov
jmp
call
lods
adc
mov
loop
and
inc
and
pop
add
test
xor
push
xchg
in
pop
mov
push
push
popa
das
push
mov
(bad)
in
jl
aad
ss
mov
mov
aad
cdq
addr16
jmp
daa
pop
jo
add
lods
fisttp
mov
stc
xchg
push
rol
or
loope
(bad)
xchg
push
ret
out
retf
retf
cmp
push
jle
mov
out
test
cli
movs
push
cmp
pop
xor
out
mov
mov
lea
push
ret
adc
xor
mov
and
sbb
and
das
call
mov
lahf
dec
fsubr
cmc
jl
dec
test
sbb
jmp
mov
outs
jp
outs
mov
jecxz
sahf
data16
mov
sbb
ins
push
(bad)
fucompp
pop
mov
in
(bad)
clc
dec
jno
mov
lea
(bad)
cdq
das
fbld
jnp
ins
ja
inc
xchg
hlt
nop
jb
in
das
cmp
mul
dec
das
pop
lods
fsubr
cli
ja
sub
mov
je
aam
sub
mov
xor
out
or
test
jbe
sbb
mov
jae
iret
into
jae
lock
jmp
adc
jmp
pop
(bad)
inc
or
pop
shl
bound
push
jnp
push
or
es
shl
sub
inc
push
push
pop
ss
in
int3
pop
jbe
out
cdq
jmp
in
or
adc
pop
jbe
fmul
inc
cmps
sbb
push
fsubr
shl
push
lds
cli
cmps
scas
aas
adc
(bad)
data16
aam
push
push
mov
jmp
loope
nop
pop
ins
in
adc
add
or
ror
or
xor
outs
xor
xchg
fadd
sbb
or
leave
addr16
ss
jmp
push
mov
(bad)
mov
sahf
pop
pop
ins
rcr
inc
retf
imul
aam
push
cmps
leave
mov
xor
lods
fcomi
pop
aad
sbb
sti
sahf
push
adc
mov
mov
sub
nop
pop
repnz
and
or
jae
inc
jo
outs
mov
or
sahf
sub
je
and
loope
cmps
cld
ja
mov
xor
adc
jbe
test
mov
sub
sub
or
add
enter
pop
mov
ja
cmp
cld
dec
ret
xor
push
es
and
pop
push
or
add
stc
sbb
adc
sbb
(bad)
push
push
aam
mov
or
fs
xchg
mov
sub
nop
xor
out
sub
mov
mov
mul
mov
repz
leave
jbe
and
dec
sar
stos
xor
push
inc
cmc
aad
out
dec
mov
mov
xor
cld
mov
xlat
jo
stos
add
mov
adc
push
xor
jb
pop
shr
or
xor
adc
fwait
mov
push
push
repz
out
pop
adc
fidiv
or
dec
add
sub
aas
mov
stc
fisttp
sbb
pushf
lods
or
mov
fisub
push
sti
xchg
lods
icebp
lods
cmc
into
push
loopne
iret
push
xor
mov
cwde
out
pop
or
adc
lea
and
adc
or
xor
les
sub
repz
push
sbb
ins
jl
movs
call
or
(bad)
lods
imul
jg
mov
cmp
adc
cdq
cmp
mov
xor
hlt
or
cdq
dec
ret
jle
movs
stc
dec
push
sub
pop
(bad)
push
lock
test
fwait
mov
pop
push
mov
pop
mov
pop
fld
movs
stos
cld
int3
mov
retf
jle
loopne
in
mov
xchg
jge
xchg
and
shl
(bad)
mov
cmp
and
sbb
push
call
pop
mov
jecxz
ret
fldenv
out
fcomip
test
pop
xchg
dec
(bad)
sbb
and
ret
and
popa
jg
stos
jns
enter
out
out
daa
jno
aad
jl
cmp
or
ins
(bad)
fcom
ror
mov
iret
enter
gs
push
sbb
sub
in
out
mov
shl
sti
clc
cmp
data16
push
mov
nop
(bad)
hlt
inc
cmps
sub
or
cmc
(bad)
in
sub
imul
xor
mov
and
xlat
shl
and
cdq
push
jge
jecxz
ror
xor
mov
sub
push
shl
adc
test
pop
inc
pop
test
call
push
push
push
vmulsd
ins
inc
mov
pop
sub
outs
xchg
adc
das
js
fld
scas
imul
push
fs
retf
cmp
push
mov
jno
jmp
daa
mov
inc
and
ins
dec
xchg
push
mov
adc
mov
jno
aaa
add
cmp
(bad)
cli
push
rol
aad
adc
sub
push
aam
pop
movs
xor
push
and
dec
xor
adc
xor
adc
adc
xor
adc
and
daa
sbb
mov
test
js
adc
sbb
mov
xlat
add
dec
loope
fsubrp
xor
add
sub
loop
push
jnp
pop
hlt
ss
or
int
fs
cdq
xchg
push
push
shl
adc
xor
inc
test
iret
in
dec
out
test
dec
fs
jp
inc
xlat
inc
dec
add
scas
xchg
loopne
adc
dec
movs
jbe
imul
dec
adc
mov
pop
mov
je
and
rcl
and
out
out
inc
jmp
(bad)
add
ret
jb
vpsllw
jo
mov
adc
mov
into
jle
jb
or
push
dec
popa
test
in
pop
inc
mov
mov
push
cmp
mov
xchg
hlt
lock
or
in
sti
leave
push
dec
pop
sbb
mov
ficom
push
mov
ins
inc
jbe
and
repz
inc
add
imul
mov
loopne
fidivr
xchg
add
scas
fnstsw
jecxz
(bad)
push
fisub
in
lock
mov
xor
xchg
and
hlt
jmp
adc
dec
sbb
sub
js
mov
sub
lock
jg
movs
xchg
mov
fwait
addr16
ss
adc
sub
popf
outs
pushf
out
cli
sub
and
xchg
nop
cmp
sub
sbb
mov
and
jp
push
dec
test
ret
adc
inc
mov
mov
mov
jbe
adc
(bad)
xchg
inc
pop
xchg
sbb
sahf
fld1
icebp
outs
dec
cmp
add
sti
(bad)
ja
inc
xchg
sub
xchg
nop
mov
xchg
dec
hlt
push
ror
sbb
rdtsc
pop
or
cmp
adc
and
ficom
test
test
jl
mov
bndldx
neg
mov
mov
push
stc
arpl
rol
push
mov
xor
test
inc
sub
dec
cmps
cmp
ins
xchg
mov
out
repnz
push
add
mov
rcl
(bad)
push
mov
jmp
mov
aas
jns
lahf
fldenv
jae
into
(bad)
pop
cld
mov
mov
mov
mov
daa
(bad)
mov
pop
rcr
sbb
jmp
pop
cmp
jmp
pusha
xchg
push
dec
dec
add
in
repnz
fnsave
and
jns
mov
inc
lods
mov
jmp
into
sbb
not
scas
cwde
loope
sbb
dec
fst
or
fistp
and
cmp
and
and
mov
das
push
mul
and
push
xchg
pop
cmp
xor
enter
inc
ins
pop
jnp
pop
pop
repz
dec
pop
adc
std
fwait
test
mov
mov
sahf
add
or
or
inc
in
xchg
stos
adc
mov
push
mov
jns
les
jp
mov
inc
movs
in
add
cmc
push
fidiv
fmul
pop
and
iret
cdq
fcomp
sub
stos
xor
or
in
lahf
nop
clc
or
enter
repz
mov
outs
repnz
in
test
jecxz
jl
addr16
loopne
push
mov
cmp
mov
test
das
inc
mov
jmp
in
jp
mov
dec
inc
mov
xchg
popf
push
cmp
test
lahf
mov
shr
fld
popa
cmps
xor
movzx
xor
mov
retf
adc
sbb
(bad)
and
jg
scas
sub
or
mov
pushf
pop
sub
pop
mov
inc
dec
mov
mov
inc
icebp
adc
lock
mov
mov
iret
mov
call
ftst
mov
pop
in
pop
ret
adc
mov
in
push
inc
clc
push
xor
adc
and
mov
xchg
nop
or
out
sub
sub
mov
cmp
mov
sub
outs
inc
mov
dec
repz
es
ja
inc
inc
xchg
mov
inc
fidivr
or
push
jne
lea
mov
add
lock
out
pop
dec
inc
xchg
stos
(bad)
mov
repnz
mov
adc
pop
mov
mov
push
jmp
mov
arpl
iret
aad
ret
jno
mov
cli
push
push
das
sbb
rcl
je
xchg
mov
mov
or
loopne
xor
out
iret
out
jp
xlat
js
inc
inc
lods
mov
or
jae
or
pusha
adc
pop
adc
inc
ja
jno
fistp
sub
lods
mov
repnz
in
aas
mov
in
lods
fdivr
or
mov
lods
loopne
loopne
scas
push
shl
push
dec
push
and
das
cld
push
call
and
cmp
mov
imul
mov
mov
xlat
inc
sahf
sub
xchg
dec
or
(bad)
lock
adc
xor
mov
cmp
push
out
js
(bad)
mov
or
sub
push
push
cmp
push
fsub
mov
aam
xor
cmp
inc
es
ins
ret
stc
add
test
mov
mov
(bad)
mov
xchg
sti
push
mov
pusha
push
dec
popf
sub
rcl
adc
ins
ret
pushf
mov
mov
lahf
imul
sbb
ja
iret
or
dec
and
mov
sbb
xchg
dec
sbb
add
jne
jp
clc
movs
cli
push
mov
mov
mov
inc
xchg
add
dec
xchg
call
xor
sub
stos
sub
mov
sbb
sbb
pop
mov
jnp
test
xchg
pop
pop
jge
scas
fucomp
hlt
fwait
stos
stc
pop
jp
mov
enter
mov
out
popf
daa
fwait
pushf
xchg
push
nop
xor
add
retf
jae
int
and
mov
push
jecxz
or
xor
stc
fstp
add
imul
cmp
and
inc
(bad)
push
cmc
test
cmps
sbb
pop
fcmove
dec
(bad)
lods
lods
sti
fst
enter
in
push
jge
dec
lahf
push
shl
test
sbb
jns
jne
and
cmp
cmp
inc
xchg
lock
push
lods
inc
outs
xchg
jb
(bad)
push
jp
clc
sub
sbb
cmp
adc
jle
mov
dec
pop
mov
xchg
adc
xchg
push
fidiv
sub
rcr
cmp
stc
jge
and
jb
dec
mov
inc
inc
imul
push
in
pop
jnp
mov
mov
outs
pop
push
adc
popf
adc
stc
and
push
adc
cmp
push
popf
mov
movs
outs
dec
repz
cmp
std
push
inc
cdq
icebp
ror
dec
jno
retf
in
inc
mov
jl
stos
cld
lock
cmp
mov
lock
stos
popa
dec
jp
inc
shl
add
push
sbb
lock
ds
adc
sahf
push
adc
je
push
scas
cmps
retf
imul
sub
dec
mov
movs
jecxz
test
lds
dec
sub
ret
mov
addr16
fist
or
jnp
stc
bnd
repnz
fild
ret
add
add
mov
dec
add
in
scas
ret
dec
and
loop
and
pop
sahf
repnz
jge
inc
fnstenv
enter
(bad)
leave
inc
repz
idiv
imul
das
sub
inc
push
xor
fwait
sahf
or
dec
or
sbb
add
clc
add
mov
hlt
sub
xor
mov
daa
inc
ja
inc
cli
sub
lock
mov
pusha
xor
xor
fwait
dec
mov
je
cdq
fsubr
or
cld
xor
scas
nop
fld
iret
icebp
sti
(bad)
(bad)
fild
pop
mov
mov
jae
call
cmp
stos
add
mov
or
cli
push
xchg
xor
test
xchg
outs
mov
rcr
test
jmp
xor
mov
out
fwait
mov
aad
xor
retf
or
movs
jp
xchg
mov
jmp
add
mov
push
pop
test
push
pop
stc
popa
js
ror
lods
cmp
fld
xor
xchg
inc
dec
mov
pop
(bad)
inc
push
(bad)
adc
jmp
mov
mov
and
xor
stc
or
jne
lea
fidivr
dec
push
xor
loope
sbb
test
repz
mov
test
sbb
xlat
std
pop
and
das
pop
jb
test
bound
enter
mov
call
aam
mov
stc
adc
add
outs
pop
lock
pop
es
outs
out
fmul
jl
dec
xchg
loopne
outs
pop
jno
jge
ret
(bad)
pop
stos
xor
fwait
mov
xchg
test
jle
sbb
xchg
and
adc
test
movs
xor
and
iret
fdiv
cmp
pusha
scas
inc
sub
(bad)
daa
in
(bad)
in
push
js
arpl
lock
pop
cmc
xchg
dec
aam
in
ins
imul
xor
xchg
or
jmp
not
pop
outs
push
ds
mov
fs
xor
dec
mov
jno
mov
and
dec
cmps
sub
jp
pop
lahf
xchg
fistp
cmps
repz
dec
retf
pop
neg
mov
jl
imul
fwait
jmp
loope
lds
cld
mov
outs
jmp
(bad)
test
fcmovnbe
push
sbb
shr
sbb
sub
nop
xchg
or
and
xor
mov
lods
in
rol
test
or
iret
or
jmp
outs
into
ss
dec
mov
sti
mov
clc
push
scas
xchg
mov
add
pop
repnz
data16
jl
cld
sbb
cmp
mov
pop
aas
mov
sub
cdq
mov
cmps
rcl
cdq
test
mov
fdiv
add
fimul
cmp
repz
or
cld
sbb
hlt
je
(bad)
mov
std
ins
out
mov
loopne
pop
jnp
ss
test
ficomp
ret
aas
loope
lods
jle
mov
xor
cmp
gs
jbe
aaa
fisub
ret
in
dec
not
cli
test
xchg
jbe
mov
sbb
cmp
jns
mov
inc
inc
outs
sbb
lahf
pushf
retf
xchg
jecxz
jns
mov
dec
ds
aad
push
mov
dec
sub
mov
fcomp
mov
rol
pop
test
sbb
xor
and
aas
rol
repz
jne
cdq
js
ss
cmps
ins
clc
shr
xchg
mov
cmps
rol
push
mov
call
cmp
push
sbb
add
xchg
jp
sub
ret
(bad)
fsubr
or
rcr
cld
(bad)
cmps
xor
mov
sbb
ret
dec
icebp
(bad)
(bad)
cwde
fstp
mov
dec
push
jmp
sbb
dec
loop
sbb
push
mov
add
call
arpl
retf
or
mov
or
outs
add
fisub
cli
adc
test
jp
out
addr16
mov
cmp
jl
push
and
xor
into
mov
ins
xor
rcl
mov
popa
mov
(bad)
leave
mov
push
aaa
and
jmp
dec
cli
pop
dec
shr
test
fmul
or
sub
call
out
popa
leave
aaa
cmps
sub
push
inc
add
std
sti
xchg
sub
add
enter
(bad)
add
aaa
mov
fs
adc
pop
xor
in
fs
pop
(bad)
cmp
out
sbb
pop
fistp
rsqrtps
inc
ins
or
or
js
jns
aam
cmc
fnstenv
idiv
(bad)
jmp
jl
sti
mov
mov
lds
or
cld
imul
lock
test
cmp
sub
adc
xchg
sub
test
imul
push
sbb
xchg
repz
jl
cmps
in
out
ret
sar
and
hlt
neg
mov
push
jle
in
in
add
ret
adc
lods
push
jo
ror
int3
cld
(bad)
out
pop
push
add
sbb
fsubr
mov
mov
mov
add
sub
sub
bound
leave
and
mov
add
cmp
jp
adc
mov
jmp
stos
gs
pop
mov
ja
inc
fimul
cmp
movs
fist
fmul
repz
fs
inc
push
rcr
cmps
jmp
outs
fs
not
or
inc
aas
add
push
rol
icebp
cs
scas
mov
sbb
xchg
cwde
add
dec
sahf
push
adc
iret
out
xchg
cmp
inc
hlt
push
bound
sti
jb
cwde
lods
cmp
dec
retf
hlt
ret
dec
sbb
ja
push
std
jae
mov
mov
fadd
out
inc
sub
or
push
cmc
(bad)
(bad)
sbb
in
ja
push
mov
test
jne
int
add
push
imul
fcom
hlt
out
xor
out
jb
arpl
push
mov
rcl
ss
mov
shl
fst
mov
stc
mov
xor
lock
mov
mov
fcom
mov
js
cdq
jns
jl
ret
mov
nop
inc
lods
loopne
xor
int3
ret
push
pavgw
mov
imul
int3
xlat
gs
(bad)
loop
mov
xor
xchg
repnz
mov
push
jno
pusha
jge
retf
pop
mov
loopne
push
nop
dec
hlt
sti
dec
js
dec
or
lds
mov
inc
int
push
ret
mov
jg
jnp
pop
jecxz
adc
xor
sbb
xor
sti
xchg
jne
in
inc
pop
jp
sbb
jmp
push
neg
std
pushf
sub
ret
jae
sub
clc
pop
mov
pusha
jo
fimul
jbe
popf
cmp
and
mov
and
xor
je
mov
dec
and
outs
or
inc
daa
ficomp
add
repz
and
xlat
mov
push
pop
mov
std
div
cmp
cdq
movs
push
je
leave
sti
mov
jb
adc
js
iret
adc
loope
or
sbb
es
adc
out
push
leave
(bad)
push
mov
push
ins
out
ret
out
jns
adc
in
test
mov
mov
push
std
pop
lea
dec
mov
adc
xchg
sub
std
mov
or
jl
jecxz
std
cmp
xlat
sub
not
ins
dec
pop
test
mov
pop
dec
sbb
or
mov
jmp
mov
mov
add
jns
mov
das
xchg
leave
jb
dec
fcom
mov
cmc
mov
test
add
repz
pop
mov
adc
jl
arpl
or
and
ins
bound
fwait
adc
cmp
mov
inc
(bad)
movs
mov
mov
clc
mov
jmp
push
add
cmp
aaa
scas
retf
xor
loop
mov
inc
xlat
lods
mov
push
adc
xchg
jae
sbb
mov
push
jo
pop
stos
dec
fldcw
and
xchg
lahf
out
push
xor
int
xor
jnp
dec
lods
xchg
rol
lahf
aaa
hlt
stos
inc
mov
mov
pop
sti
or
into
jl
mov
xor
test
add
(bad)
outs
xor
aas
std
mov
not
cmp
dec
adc
mov
mov
fsubrp
fwait
mov
test
push
push
mov
pop
cmps
push
push
sar
dec
and
aaa
lock
and
jmp
in
ja
fsubr
retf
cmp
or
movs
jmp
mov
hlt
xchg
sbb
mov
mov
jo
dec
data16
add
adc
xor
pop
imul
fldenv
cmp
or
sar
cmp
cmc
out
std
and
mov
mov
mov
pop
mov
rcr
push
xchg
mov
jmp
stos
ins
rcr
push
cmp
push
xchg
adc
dec
data16
xor
push
movs
pop
jge
push
cmps
in
or
test
(bad)
(bad)
int3
lds
lahf
inc
jae
inc
xor
add
mov
lea
dec
push
mov
pop
mov
adc
xor
xchg
inc
cmp
push
sub
leave
and
movs
sti
adc
mov
cli
xchg
add
call
xchg
nop
mul
stos
frstor
jns
outs
out
and
jno
mov
fbld
pop
or
or
aaa
sub
clc
mov
inc
adc
or
push
cdq
int
jp
push
repnz
cmp
dec
ret
popf
sbb
scas
aam
fcomi
dec
frstor
and
lea
outs
fstp
scas
pop
adc
mov
out
leave
int
lods
push
aad
mov
pop
stos
pop
daa
and
inc
out
addr16
add
mov
call
aad
sbb
fcmovu
test
dec
or
aad
xor
and
jg
ret
popf
ins
add
mov
sbb
in
dec
sahf
cmp
push
push
xchg
sti
neg
dec
push
adc
mov
(bad)
movs
loop
aad
push
mov
mov
clc
out
shl
dec
loopne
pushf
cmps
js
stos
lea
cmp
cli
ret
xchg
(bad)
inc
(bad)
pop
gs
push
mov
scas
ret
mov
cs
push
dec
mov
and
aaa
push
dec
mov
in
sub
call
inc
mov
imul
pop
out
xlat
or
pop
test
test
add
jns
push
xor
out
mov
jnp
or
out
push
xor
xlat
test
mov
and
sub
lds
xchg
test
nop
cmp
cwde
movs
test
(bad)
jl
mov
inc
inc
rol
loope
mov
mov
cli
popf
xor
lea
push
mov
data16
pop
jmp
dec
mov
fisttp
mov
mov
repnz
out
push
cmp
jecxz
add
enter
dec
jne
(bad)
mov
mov
pop
xor
mov
jmp
cld
xchg
out
dec
inc
aas
mov
sahf
(bad)
stc
stos
and
or
std
popa
addr16
mov
sub
inc
outs
inc
popa
xchg
and
inc
call
repz
inc
jmp
loope
ja
xor
and
dec
jb
das
gs
daa
inc
cmp
sub
ss
ss
es
mov
mov
jge
adc
add
scas
cli
movs
cmps
lods
xchg
out
outs
std
jo
inc
mov
fbld
stos
xor
cmp
pop
neg
cmps
fs
repz
mov
jle
out
push
mov
int
jae
inc
lds
into
jmp
add
out
outs
sub
jmp
push
lods
cwde
jae
jmp
rcr
inc
xchg
leave
xor
test
ret
fisubr
cmp
xchg
gs
sub
xor
rol
nop
in
pop
xchg
aaa
bound
cmps
mov
scas
jae
mov
push
push
mul
adc
ss
dec
(bad)
(bad)
mov
cmc
jmp
xchg
das
pushf
(bad)
sti
js
repnz
mov
bsr
mov
sbb
test
sar
sbb
jle
aaa
test
mov
mov
sbb
mov
mov
in
xchg
pop
mov
mov
fistp
add
(bad)
in
xchg
sbb
cli
mov
inc
pop
icebp
sub
call
push
xchg
(bad)
pop
jbe
pop
inc
jne
iret
inc
pop
xchg
dec
sub
jo
jo
xor
pop
push
jle
mov
dec
cmp
scas
pop
sub
sub
iret
repnz
fs
fcomp
ins
add
cmp
cmp
test
mov
out
rcr
push
push
mov
lods
imul
fnstcw
or
sub
(bad)
dec
xchg
adc
repnz
cli
loop
test
out
out
xchg
push
mov
sbb
ror
jmp
mov
hlt
(bad)
jns
jno
je
int
test
js
mov
add
nop
test
jg
out
add
mov
inc
repnz
mov
dec
mov
fidivr
and
jle
push
adc
retf
add
push
and
push
cmps
mov
push
mov
push
cmp
pop
retf
in
data16
repz
mov
adc
jno
std
push
adc
loop
icebp
inc
cmc
sbb
jns
fcomp
in
xchg
mul
cmp
sub
sahf
dec
mov
mov
xor
sahf
sbb
pop
clc
push
rcl
xlat
scas
lea
sub
jl
mov
mov
lock
(bad)
jg
add
aad
call
and
std
add
xchg
push
iret
push
inc
xchg
jne
fs
sbb
fwait
shl
test
jmp
sbb
mov
add
std
out
xor
xor
jmp
add
jmp
push
call
clc
cli
jmp
cmp
xor
shl
jmp
pushf
inc
ror
dec
pop
cld
xor
xchg
movs
pushf
jns
pop
push
mov
xchg
sti
loopne
sbb
out
sub
(bad)
jmp
mov
mov
or
xchg
sub
mov
xchg
test
cmp
push
js
call
cwde
ins
mov
call
cld
out
pusha
mov
out
shr
or
cmp
sti
push
sbb
inc
pop
cmps
jl
sub
outs
mov
xor
add
cli
push
adc
(bad)
sti
and
aaa
nop
lods
mov
pop
sbb
mov
test
sub
shl
xchg
mov
ret
mov
mov
cmps
and
test
inc
cmp
daa
mov
mov
scas
ins
clc
xor
adc
ss
dec
mov
mov
das
cmp
inc
out
pop
inc
mov
dec
cmp
hlt
out
retf
getsec
clc
retf
jb
mov
and
jmp
sbb
std
in
mov
xchg
push
inc
dec
pop
in
or
cmp
xchg
idiv
fwait
pop
inc
sbb
and
ins
sbb
push
mov
aad
clc
in
adc
repnz
pop
mov
push
pop
stos
dec
add
in
aas
jne
xchg
mov
push
lods
aad
ja
dec
jmp
push
xlat
out
std
sti
fstp
fcmovb
cmp
or
and
mov
push
movs
pop
test
inc
inc
(bad)
xor
ins
popf
jno
xchg
add
fsub
sub
adc
cmps
or
jbe
adc
mov
stos
sar
loope
icebp
xor
pop
sti
dec
mov
ins
rcl
rcr
add
mov
or
mov
clc
inc
mov
div
sub
nop
jne
dec
fild
cdq
test
push
dec
fdivr
and
lods
popa
imul
icebp
hlt
or
stos
inc
jmp
aaa
push
dec
jge
(bad)
jo
(bad)
mov
loope
int
jne
fcomp
cmp
jae
push
adc
xlat
rol
cmps
xchg
repnz
push
mov
sub
fdivr
mov
or
mov
repnz
push
push
sub
pusha
sbb
loopne
inc
popa
repz
sub
pop
add
test
fsub
xchg
es
pop
out
repnz
push
jbe
mov
inc
sub
cmc
in
stos
cli
shr
test
push
pop
sbb
adc
out
js
out
neg
hlt
movs
xlat
outs
je
or
jo
add
and
mov
pop
or
int3
and
xor
mov
sti
js
popa
ins
pop
call
cmp
inc
xor
xchg
pop
in
retf
outs
dec
ins
jns
(bad)
and
rcl
ss
pop
push
(bad)
xor
test
jecxz
cs
fs
(bad)
shl
or
(bad)
xchg
int3
mov
mov
not
ss
xchg
sbb
neg
cmp
repnz
dec
mov
push
scas
inc
imul
call
pusha
adc
movs
mov
loope
les
sub
jnp
pop
in
test
jno
add
repnz
daa
sti
std
push
stos
push
mov
or
out
dec
pop
sub
fistp
dec
or
and
dec
aad
cmp
call
pop
sbb
(bad)
(bad)
fcmovb
cmps
imul
push
jno
push
and
pop
retf
sub
inc
mov
push
nop
shr
je
ins
push
cmp
cdq
mov
jo
ret
dec
or
or
add
vmaxpd
clc
loope
jmp
nop
jl
push
push
shl
fsub
or
sub
dec
dec
dec
mov
mov
gs
mov
lock
mov
cmp
add
adc
xchg
mov
mov
out
std
jns
lahf
push
ret
stos
inc
cmp
retf
idiv
sbb
imul
int
xor
inc
loopne
scas
aam
pop
pop
dec
(bad)
lods
or
and
push
fdivr
(bad)
fsub
es
in
cmp
xchg
fdiv
sub
xchg
jnp
data16
outs
xchg
mov
stc
push
dec
sub
ret
icebp
in
cs
arpl
cmps
clc
mov
mov
jo
jge
sbb
outs
(bad)
in
xchg
mov
jl
bound
add
jg
pusha
sub
test
and
ja
xor
in
(bad)
dec
fisttp
call
pusha
mov
jle
push
mov
jmp
loop
(bad)
aad
sub
inc
mov
jg
cmp
inc
stos
hlt
ja
push
mov
push
shl
pop
push
or
out
adc
sti
xor
adc
jl
and
out
xor
xchg
add
lds
les
mov
push
aad
adc
das
jne
imul
or
les
aam
pop
(bad)
push
and
xchg
adc
in
jp
xor
mov
int
and
pop
rcr
inc
jnp
fcom
inc
xor
aad
add
je
add
xchg
outs
mov
lods
mov
inc
adc
cmp
jl
neg
(bad)
int
inc
mov
repnz
(bad)
int
into
fs
es
jnp
or
jmp
push
rcr
cmp
cmps
mov
lods
sub
ret
cld
call
out
icebp
in
ficomp
mov
xor
pop
xor
clc
pop
pop
add
gs
mov
push
(bad)
mov
push
mov
loop
stos
mov
mov
into
fs
call
js
add
add
out
test
sub
enter
(bad)
xchg
enter
or
inc
xor
dec
xchg
fild
inc
ja
div
inc
imul
cwde
sti
es
mov
pushf
aam
cwde
pusha
in
hlt
push
fsqrt
or
ret
dec
test
mov
or
aam
mov
xchg
inc
cmc
int3
pop
sub
add
sbb
mov
sbb
in
ja
(bad)
dec
js
xchg
mov
dec
jl
jne
rcr
sti
popa
retf
pop
cli
nop
out
pop
dec
inc
push
jge
sbb
xor
adc
in
lods
mov
fdivp
loop
aad
mov
nop
int
jbe
sbb
gs
in
inc
leave
pusha
and
fidivr
add
cmp
xor
mov
imul
sub
(bad)
jmp
add
dec
jg
call
fs
cmp
faddp
pop
xchg
mov
mov
rcr
neg
popf
sar
aaa
mov
dec
icebp
arpl
in
imul
push
mov
mov
out
push
jno
mov
lds
popf
mov
inc
xchg
sbb
aad
cmp
sub
mov
adc
das
mov
mov
or
ffreep
inc
sbb
inc
add
fnstcw
add
or
push
loopne
dec
sbb
sbb
or
cmp
rol
pop
mov
sub
push
cmp
lds
arpl
xchg
fld
(bad)
popf
sub
xchg
dec
aas
xchg
xor
ret
cmps
clc
fidivr
inc
imul
sbb
xlat
out
out
fisub
push
repnz
dec
pop
lock
mov
cmc
sbb
adc
cld
mov
and
jno
sahf
and
lahf
cmp
push
cmp
stos
jge
dec
loop
dec
mov
jge
inc
aam
pop
sub
lea
push
stos
xor
push
and
in
stos
add
jmp
lds
call
iret
pushf
pop
jo
lods
retf
adc
mov
aad
(bad)
fwait
not
pop
or
inc
bound
ins
daa
popa
in
js
fs
sar
inc
adc
ficom
mov
mov
mov
cmp
sbb
pop
and
mov
lock
pop
jle
xor
jne
sbb
xchg
mov
addr16
cmp
push
mov
enter
ja
iret
and
jbe
jnp
push
sbb
in
or
js
ror
std
adc
test
pusha
mov
sbb
ret
lods
pop
retf
adc
adc
aam
pop
push
push
mov
jg
ror
mov
cmp
xchg
jno
jp
(bad)
lds
sbb
addr16
pop
cmp
lds
imul
cwde
push
ss
sbb
in
das
test
(bad)
adc
shl
jp
hlt
ss
dec
cmc
out
mov
ret
rcr
nop
push
mov
adc
dec
cmc
pop
cli
jb
fild
std
lds
jecxz
fstp
sbb
mov
push
ret
mov
or
mov
pushf
jge
dec
jecxz
xchg
stos
mov
out
push
std
adc
aaa
xchg
sbb
jb
(bad)
cli
or
jl
fisttp
jae
stos
adc
fsubr
sahf
out
push
movs
jmp
cmp
cmp
mov
popa
mov
add
loopne
aam
test
ins
mov
adc
sbb
mov
movs
xor
sbb
mov
ds
mov
mov
js
fist
mov
and
jno
mov
push
xor
pop
int
sub
and
push
push
call
jp
hlt
adc
repz
push
cld
in
push
out
inc
push
mov
cld
ins
dec
push
jecxz
inc
jb
inc
xor
add
and
aaa
div
repz
cwde
push
jp
ret
adc
pop
mov
lods
sbb
or
or
loop
loopne
ja
stos
cmp
call
jle
cmc
ficomp
cdq
popf
add
test
push
leave
push
les
adc
retf
sub
pop
pop
daa
(bad)
call
sbb
or
ret
rol
scas
mov
push
lea
or
sub
std
mov
dec
lods
jp
add
adc
sar
xor
pushf
imul
cmp
jp
or
xchg
sub
cmp
pop
mov
imul
nop
jle
ins
call
mov
sbb
les
mov
mov
sbb
mov
mov
scas
enter
out
push
pop
or
cs
xchg
mov
cwde
inc
and
fisttp
dec
mov
cmps
mov
bound
inc
push
jp
cmps
aaa
sub
lahf
xlat
test
aas
push
adc
out
and
push
ins
jo
cmp
cmc
(bad)
loopne
add
pop
int3
inc
push
scas
mov
push
mov
sbb
outs
adc
mov
in
sub
(bad)
(bad)
out
xchg
pop
retf
mov
(bad)
imul
xchg
sbb
fsubr
adc
push
jmp
fst
cdq
cli
xchg
retf
enter
jmp
mov
loop
add
call
add
adc
jmp
jmp
retf
repz
sbb
ror
jnp
les
add
mov
fsub
inc
aaa
sahf
and
call
jnp
daa
shl
addr16
nop
movs
dec
icebp
std
lods
pop
jle
jg
and
cld
and
fdivr
ss
outs
aas
pushf
push
sar
fnsave
jmp
add
inc
call
xchg
movs
or
xor
sbb
pop
xor
test
retf
gs
ret
and
shr
icebp
xchg
cdq
pop
mov
clc
enter
(bad)
js
xor
test
enter
mov
leave
vpsrlw
outs
ficom
stc
shr
mov
pushf
daa
dec
sbb
dec
ret
add
imul
rcr
jle
mov
lds
or
xchg
data16
test
and
pop
jno
push
test
xor
add
cmps
or
das
jl
mov
cmp
repnz
lahf
lods
repz
jl
lock
add
ss
and
ror
loop
imul
xchg
stos
jnp
cmp
ds
pushf
dec
dec
jp
scas
mov
push
xor
cmp
imul
cdq
mov
jmp
movs
and
push
xchg
jne
ret
into
lods
(bad)
xchg
xor
push
jmp
test
pop
add
pop
push
aas
pop
mov
sbb
(bad)
(bad)
push
fs
cdq
imul
cmps
and
sahf
sahf
(bad)
jg
push
in
push
sbb
and
hlt
lea
xchg
rcl
or
mov
outs
add
jb
out
pop
test
mul
popa
cwde
(bad)
movs
push
mov
push
push
mov
repz
fnstenv
out
or
imul
outs
popa
push
je
add
stos
cmp
inc
(bad)
outs
loope
dec
adc
les
out
mov
ins
inc
xlat
xor
fwait
scas
mov
ins
cmc
sbb
inc
or
fcmovnb
stc
(bad)
mov
cmps
loop
sub
test
adc
mov
icebp
dec
jne
jle
mov
mov
pop
mov
sub
sbb
aaa
mov
jp
and
fldcw
call
mov
sub
mov
leave
(bad)
xor
cld
loopne
mov
fimul
lods
cmp
sbb
jp
adc
lods
loopne
pop
stc
aas
call
adc
xchg
punpcklbw
iret
shl
jmp
xor
test
in
and
pop
pop
adc
adc
mov
xor
std
icebp
outs
inc
jns
pop
int
or
push
lods
jl
and
cmp
adc
jl
mov
jae
cdq
push
(bad)
aad
cwde
jo
pop
push
sar
push
imul
adc
jge
sti
pop
in
cs
sahf
dec
pop
xchg
jo
cmps
mov
imul
jmp
inc
not
mov
out
lods
nop
pop
inc
mov
enter
mov
sti
in
arpl
push
sub
xor
clc
inc
lahf
(bad)
mov
aaa
lods
cmc
add
cmp
das
dec
shl
fimul
or
push
mov
mov
scas
repnz
or
sub
dec
push
test
mov
int
cmp
test
jbe
int3
inc
mov
sti
sbb
jb
cdq
test
mov
adc
and
(bad)
xor
mov
mov
push
mov
ins
mov
cs
lahf
and
aas
jge
scas
rol
stc
cmc
sub
retf
lds
dec
nop
imul
mov
sbb
inc
push
mov
fs
add
xor
sub
pusha
or
retf
nop
fdivr
ret
mov
sar
inc
cmp
mov
sbb
ret
jge
out
dec
mov
call
imul
retf
pop
call
adc
sbb
fs
into
or
sbb
test
jbe
push
mov
cmp
xor
sub
loope
fadd
or
jecxz
jle
mov
xchg
sub
dec
pop
std
jnp
pop
lea
ja
add
not
pop
dec
shl
popa
cmp
mov
lods
sbb
push
adc
rcr
test
cdq
add
push
sbb
cdq
popa
mov
stc
sub
bound
pop
adc
cmp
(bad)
jecxz
pop
dec
push
mov
adc
ins
xor
or
sbb
out
aas
call
jecxz
fsubr
stos
jmp
cmc
retf
mov
leave
add
xchg
mov
add
repz
hlt
push
xor
lock
mov
shl
fild
cs
sahf
and
pusha
or
shl
loop
cmp
pop
jge
cmp
pmaxsw
retf
push
and
out
mov
sbb
sar
fdiv
js
sbb
pop
jecxz
xchg
add
cmp
call
movs
movs
and
xchg
scas
push
in
push
div
clc
(bad)
stc
js
(bad)
hlt
std
ret
add
add
pop
vmread
xor
test
push
aas
jecxz
push
loope
mov
mov
and
or
imul
dec
adc
hlt
mov
mov
dec
xlat
scas
(bad)
clc
mov
fidiv
jnp
jecxz
mov
and
mov
fidivr
add
push
sub
inc
xchg
imul
xchg
dec
xchg
xchg
pop
and
xlat
pusha
sbb
jnp
push
ins
call
test
and
jp
jmp
inc
and
inc
int3
mov
in
pop
xchg
outs
dec
mov
mov
adc
fdiv
cld
pcmpeqw
fild
add
add
cmp
pop
pop
js
ror
push
jbe
mov
daa
inc
push
push
(bad)
daa
sub
cmp
jge
sbb
js
add
push
sub
ror
pop
loope
jp
cmp
mov
or
inc
jne
or
mov
inc
aaa
aad
push
gs
mov
dec
jne
lock
push
dec
(bad)
lahf
les
mov
push
sahf
or
stos
xor
leave
mov
push
shl
sti
xchg
sar
out
jne
std
in
xchg
lods
xor
pop
ss
(bad)
or
mov
dec
or
dec
xor
test
and
xor
and
jge
mov
dec
stc
mov
popa
xchg
mov
xchg
dec
arpl
inc
inc
das
sub
outs
sub
push
cmp
push
(bad)
xor
push
iret
imul
and
fild
push
or
xchg
mov
sbb
stos
mov
jle
shr
xlat
mov
shr
fcomp
mov
in
jge
lds
stc
stos
test
xchg
pushf
or
cs
adc
ss
sub
(bad)
aaa
mov
and
xchg
loope
inc
and
in
add
ret
mov
adc
adc
xchg
and
lds
xchg
push
xchg
mov
mov
mov
push
lock
aas
mov
adc
and
test
mov
cmp
fcmovnbe
test
pop
ds
icebp
jne
test
add
push
fisttp
xor
mov
not
shr
cmp
mov
fadd
jnp
pop
xchg
inc
ins
xchg
lods
(bad)
mov
mov
je
lods
xor
pop
arpl
loop
mov
int3
mov
sub
pop
sub
je
mov
mov
pop
sti
and
int3
repz
out
jno
cmp
cmp
sahf
hlt
adc
fldpi
inc
stc
inc
inc
sbb
(bad)
outs
cmps
pop
cmc
dec
inc
ror
pop
push
aad
sbb
mov
sub
cmp
test
cmp
jle
cmps
jp
push
repz
or
adc
les
mov
mov
pop
adc
or
jns
jns
outs
xor
cmps
pop
or
into
outs
nop
cs
data16
adc
push
das
mov
cmp
adc
inc
mov
pop
pop
dec
je
xor
jb
dec
cmp
add
inc
xchg
cmc
fwait
mov
jle
fbld
sub
adc
sub
and
push
fs
retf
jo
and
sub
(bad)
repnz
pop
cli
mov
inc
mov
and
inc
les
cmc
push
cmp
xchg
std
(bad)
fld
and
sbb
ret
ret
adc
sbb
movs
sti
mov
inc
retf
lahf
add
test
ror
cmp
mov
xchg
adc
pushf
adc
pop
popf
cld
jecxz
ds
loopne
jmp
call
xor
into
sub
je
mov
dec
cs
repz
mov
ins
clc
jo
pop
mov
ss
dec
in
push
push
sbb
out
out
and
pop
push
jge
jb
out
mov
cmp
ret
cmps
cmp
lahf
fstp
xor
je
add
in
icebp
shl
repnz
les
add
mov
dec
enter
nop
cmovae
fldenv
adc
pop
cmp
xchg
sub
scas
jmp
cmp
(bad)
outs
cmp
add
sbb
and
rcr
lahf
jnp
lea
addr16
inc
or
sar
cmp
retf
cmp
movs
xchg
sbb
rcr
xchg
push
sub
ins
jg
xchg
clc
push
cs
pop
add
adc
jne
sbb
mov
jle
cmp
addr16
movs
cmps
div
xor
stc
jns
loopne
push
inc
pop
pop
dec
rcr
repz
ins
or
cmc
mov
repz
stos
clc
clc
shr
leave
pop
les
movs
fdivr
movs
sub
mov
repz
sub
neg
inc
loop
mov
pop
inc
retf
inc
jbe
mov
jl
mov
outs
test
or
push
jle
mov
rcr
lods
and
jno
lods
jb
xchg
cmps
loope
xchg
out
push
jnp
(bad)
in
adc
addr16
jecxz
repnz
lds
xor
pop
inc
push
sub
dec
adc
jmp
int3
sbb
in
sub
loop
jnp
(bad)
push
xor
xor
test
movs
push
(bad)
xlat
xor
inc
mov
mov
inc
jb
cmps
jecxz
fdiv
inc
call
jle
xchg
dec
push
rcl
(bad)
xchg
retf
sbb
or
dec
sbb
arpl
ins
mov
mov
push
cmp
hlt
push
pop
repz
mov
mov
jmp
mov
xchg
push
adc
in
rol
jge
test
cmp
add
mov
xor
aaa
mov
imul
ror
jp
je
and
pop
stos
jb
mov
or
popf
pop
test
sbb
mov
(bad)
mov
lods
ret
arpl
retf
fidivr
sahf
std
push
sahf
and
xor
mov
fucom
movs
daa
ret
sbb
dec
sbb
or
mov
mov
mov
mov
add
into
pop
icebp
and
xor
push
adc
mov
fs
and
and
dec
fadd
mov
les
adc
test
test
ds
and
dec
xchg
mov
(bad)
fs
lea
or
jne
les
shr
jns
cmp
shl
mov
and
movs
pop
jle
sahf
rol
push
push
imul
inc
sbb
out
push
jno
push
or
pop
dec
xchg
dec
dec
push
lods
and
mov
mov
fld
pushf
repnz
add
into
fst
dec
xchg
cmp
xchg
dec
mov
mov
push
push
xor
rol
mov
stos
or
and
icebp
test
jae
xchg
mov
or
xchg
test
pop
or
sub
add
jno
sti
add
inc
stos
or
mov
ds
mov
or
ret
jns
addr16
call
cmps
sbb
clc
adc
pop
std
push
aas
xchg
mov
lock
mov
nop
push
adc
inc
xchg
push
ret
xor
mov
jo
mov
dec
and
mov
and
jne
mov
shr
push
mov
mov
or
mov
mov
or
pop
and
cmp
push
stos
pop
fucomp
ins
or
xchg
scas
int
and
into
or
aas
cld
(bad)
xchg
ret
int3
loopne
mov
inc
fsubr
push
div
fbld
lahf
mov
sub
repz
movs
in
pop
mov
and
(bad)
push
jmp
repz
push
jp
dec
inc
dec
adc
imul
clc
call
enter
push
sub
shl
adc
out
push
fs
in
inc
cmp
sub
xchg
inc
pop
popa
les
in
mov
sbb
push
mov
and
es
icebp
ret
(bad)
retf
push
xor
mov
sub
lds
fisttp
inc
jmp
and
pop
add
mov
mov
shr
sbb
(bad)
test
mov
nop
aad
cmp
in
cmps
stos
sbb
pop
outs
in
xchg
test
xlat
pop
movs
aad
test
mov
fadd
(bad)
jl
out
sti
push
pop
cwde
stos
out
xchg
sar
sbb
movs
xchg
lock
call
int
adc
mov
out
sub
xchg
pop
cmc
cdq
mov
leave
adc
xchg
and
test
mov
leave
xchg
xor
adc
rol
inc
mov
xor
fld
or
out
ins
in
or
mov
push
sti
cwde
and
jg
(bad)
retf
popa
adc
and
or
cmps
add
xor
iret
or
mov
push
scas
and
or
movs
jo
js
xchg
mov
in
add
loope
adc
jmp
clc
pop
mov
call
fcomp
sub
mov
jmp
jmp
jmp
pop
sar
sahf
mov
sub
pop
push
cli
cwde
and
(bad)
movs
cmp
sub
cmc
xor
mov
aaa
jb
mov
in
dec
cmp
pop
lock
mov
inc
sub
mov
ja
dec
fwait
cmp
ins
fidivr
adc
or
enter
out
push
mov
xchg
inc
mov
inc
pop
and
sar
retf
pop
and
clc
fnstcw
jns
adc
xchg
or
or
fstp
popf
movs
stos
dec
dec
lods
pop
xor
test
lods
cmc
sbb
scas
mov
pop
pop
sbb
pop
out
mov
or
pop
inc
cmp
ds
dec
(bad)
fild
sbb
and
mov
xchg
hlt
xor
pop
add
ss
leave
push
pop
mov
sbb
pusha
sbb
adc
mov
inc
es
(bad)
mov
mov
or
(bad)
xor
aad
inc
sbb
jp
lds
js
into
mov
mov
pop
daa
and
cli
and
push
xchg
in
xor
push
xor
add
jge
std
in
jmp
mov
mov
mov
xlat
out
push
or
mov
pushf
adc
cli
push
push
enter
mov
lock
mov
xor
xlat
test
sbb
bound
and
scas
fidivr
cmp
pop
fidiv
mov
call
mov
xor
or
push
adc
stos
sar
scas
xor
leave
push
xchg
out
jae
hlt
xlat
dec
sbb
and
adc
bound
ja
sbb
sar
movs
fst
xchg
dec
addr16
aam
mov
add
xchg
das
mov
adc
cmp
pop
int
(bad)
fcomi
ss
xor
addr16
sub
out
push
push
and
xchg
push
test
xchg
movs
lock
push
jecxz
jl
jmp
shl
or
jmp
inc
adc
lock
inc
(bad)
push
sbb
mov
ins
inc
or
and
xchg
in
xchg
fs
cmp
xchg
sbb
(bad)
aad
imul
jmp
aad
sbb
outs
sbb
or
push
arpl
mov
popa
jl
div
push
lds
fwait
mov
sub
xchg
push
jmp
add
push
movs
icebp
popf
loope
jp
mov
mov
mov
sbb
lods
xor
jp
ror
inc
aaa
mov
sbb
and
mov
xchg
jge
(bad)
push
in
pop
sub
imul
inc
retf
inc
nop
pop
hlt
call
pushf
mov
sub
sub
or
shl
dec
enter
pop
cmp
xchg
and
mov
mov
(bad)
int
adc
xchg
push
xor
mov
aaa
adc
cmp
jb
les
mov
leave
cmp
fdiv
sub
dec
dec
retf
and
icebp
int3
xor
mov
outs
add
lea
cmp
psrld
push
cli
fsub
dec
push
push
mov
pop
(bad)
pop
jno
mov
mov
cmp
inc
outs
leave
retf
movs
mov
xchg
retf
lods
push
es
sub
mov
jmp
xor
mov
ja
repz
mov
xchg
xchg
mov
mov
cmc
xchg
shl
inc
ins
xor
mov
sar
or
sti
xlat
jge
not
add
sar
jnp
lea
ror
lock
fld
retf
pop
out
jbe
add
fndisi(8087
jmp
jns
mov
das
sub
(bad)
and
mov
adc
sub
leave
call
pop
cmp
inc
daa
xchg
outs
dec
retf
jge
retf
adc
clc
mov
test
mov
xor
into
out
(bad)
cmps
jbe
pop
mov
std
test
icebp
sahf
inc
sub
jl
icebp
add
xor
dec
into
pop
push
pusha
push
xor
jns
into
sbb
(bad)
jge
clc
jmp
rcr
retf
push
push
sbb
mov
in
pop
retf
xlat
pop
fiadd
mov
mov
mov
leave
div
adc
sbb
jg
cmp
add
mov
xor
imul
xchg
ror
test
jecxz
sar
jae
or
bound
in
xchg
dec
jl
aas
push
mov
addr16
xchg
lock
adc
or
ret
jns
inc
inc
push
sbb
push
sar
jp
cs
movs
mov
test
scas
call
jmp
mov
pop
sub
cwde
pop
jbe
sbb
cmps
add
(bad)
sub
or
test
inc
sti
push
or
mov
icebp
out
stos
dec
cld
mov
retf
rol
adc
or
stos
sub
in
es
jecxz
lock
stc
pop
xchg
xchg
sub
inc
gs
mov
inc
xor
xchg
add
or
adc
hlt
shl
mov
bt
dec
add
ds
sbb
mul
cmp
and
mov
retf
adc
into
les
push
imul
mov
mov
sbb
not
push
push
pop
aas
or
int
cli
adc
into
mov
or
mov
cs
and
setnp
xor
movs
xchg
iret
fwait
mov
inc
in
out
loope
fistp
adc
or
inc
push
or
aas
add
hlt
jo
out
inc
push
mul
pop
mov
inc
and
das
fdiv
jo
pop
dec
inc
js
mov
jl
mov
sub
int3
mov
(bad)
test
sbb
pop
push
xchg
sub
stos
mov
ins
sbb
repz
in
mov
mov
in
cmc
mov
rcr
cmps
retf
repz
fnstsw
nop
rcr
xlat
imul
mov
mov
pop
adc
mov
xchg
or
repz
sub
mov
cmova
xchg
push
hlt
sbb
test
sub
scas
les
ret
dec
into
hlt
repnz
pop
aas
out
pusha
inc
int
add
scas
repz
sbb
ret
and
loopne
add
stos
nop
sub
call
cmc
gs
ja
pop
cmp
and
dec
cs
add
push
stc
jne
iret
mov
mov
or
dec
ins
ret
push
js
pop
and
or
rcr
jnp
xor
(bad)
jge
xor
sar
mov
inc
xor
push
(bad)
push
xor
loopne
mov
ffree
mov
jnp
sbb
sub
fs
jl
shl
addr16
mov
out
fbld
iret
jle
xor
cmp
push
scas
jo
jmp
push
mov
inc
inc
outs
jo
push
mov
or
loope
and
lds
arpl
sub
test
or
xchg
mov
jle
test
or
xor
stos
mov
lahf
aas
mov
push
mov
arpl
js
dec
in
addr16
pop
sub
dec
(bad)
out
inc
and
mov
lods
or
(bad)
sub
shl
fild
jecxz
inc
adc
or
sbb
push
dec
adc
movs
mov
ins
adc
pop
orps
push
cmp
cmp
in
jo
sub
nop
into
int3
xlat
fld
clc
outs
inc
or
je
mov
jmp
inc
jle
and
and
and
cmp
mov
pop
repnz
push
int
loopne
jge
and
or
ret
dec
mov
add
cmps
cmp
out
fst
mov
dec
push
stc
mul
cmp
cdq
iret
addr16
pop
cmp
scas
pop
ins
mov
push
test
xchg
cmps
gs
sub
ds
mov
shr
mov
mov
stos
psubw
push
inc
outs
mov
xor
pop
into
pop
adc
aas
imul
ins
out
(bad)
ja
jb
sti
and
jae
push
loope
jecxz
movs
mov
test
in
xchg
imul
pop
stc
gs
and
jp
dec
repz
jb
or
loopne
mov
into
scas
pusha
xchg
cmp
sbb
lds
test
add
jae
test
jnp
je
fmul
ret
jne
sbb
(bad)
sub
pop
ret
pop
into
ins
mov
retf
mov
aad
ror
cmc
mov
pop
(bad)
out
fist
xchg
fld
adc
dec
neg
ins
push
sahf
test
or
add
jns
add
xchg
sub
fmul
or
and
push
ret
mov
enter
sbb
stos
outs
mov
xlat
mov
mov
pop
or
pushf
fs
addr16
cmps
push
jnp
push
inc
sbb
sub
retf
test
dec
xchg
imul
mov
fwait
bound
or
movq
mov
fidivr
inc
repnz
mov
fcmovnu
jbe
adc
sub
imul
inc
inc
cmps
ror
push
sbb
pop
fisubr
ficom
cmp
and
mov
movs
push
fstp
retf
jecxz
adc
fistp
push
fs
scas
jmp
jecxz
dec
clc
xchg
fadd
jl
jno
fs
ds
loop
(bad)
xchg
cmp
cmp
sub
in
mov
aad
pop
clc
in
inc
icebp
imul
shl
leave
push
pusha
(bad)
repz
or
or
xchg
sub
xchg
mov
inc
neg
jmp
inc
push
pop
(bad)
mov
xchg
loope
loopne
adc
sbb
xor
xchg
aad
repnz
daa
idiv
xor
dec
cmps
(bad)
aad
sbb
cs
(bad)
iret
xchg
dec
cmp
out
fstp
ror
pop
test
pop
leave
pop
mov
xlat
scas
lods
shl
ins
and
dec
lods
nop
loope
jno
aad
ret
mov
mov
xlat
xor
out
es
fmul
fidivr
int
test
ss
dec
xor
int3
mov
fwait
cmp
ficomp
dec
lock
ror
add
inc
nop
outs
cdq
or
std
out
mov
nop
cwde
dec
gs
ds
test
icebp
call
push
jmp
sub
mov
pop
push
mov
aas
dec
js
or
lahf
cmp
mov
xor
call
sub
dec
pop
push
push
xchg
cmp
push
cmps
pop
fs
jl
dec
fisttp
ret
mov
cwde
lds
ins
imul
add
mov
ins
test
xchg
frstor
sti
ja
xchg
int3
loop
sar
sbb
cmp
dec
popa
pop
pop
ds
in
pop
jnp
mov
jmp
iret
pushf
(bad)
(bad)
xlat
push
pop
aaa
push
pop
fidiv
ins
inc
jp
add
sahf
sub
cmp
and
dec
mov
adc
shl
adc
ja
pop
out
inc
int3
sbb
dec
les
stc
adc
mov
mov
aam
mov
test
push
outs
inc
push
dec
add
cwde
xlat
push
retf
pop
iret
mov
add
out
mov
mov
cld
(bad)
adc
rcr
dec
xchg
int
cmc
pop
aaa
aas
inc
dec
(bad)
loopne
push
scas
in
mov
pop
dec
in
retf
sbb
stos
mov
pop
pop
sub
push
mov
xchg
mov
in
xchg
and
(bad)
mov
or
sub
or
or
jno
and
mov
push
pushf
into
lds
scas
frstor
xchg
daa
xor
icebp
shr
pop
push
outs
mov
jecxz
test
mov
mov
xchg
aaa
int
push
cmps
bts
cmp
jb
stc
fild
neg
mov
(bad)
loopne
lods
fld
cs
pop
scas
gs
ss
(bad)
or
nop
sub
aaa
in
test
mov
mov
ja
sbb
lods
bound
and
add
repnz
mov
popfw
ss
sbb
mov
stos
pop
xchg
push
pop
test
and
cmp
fst
loope
mov
sbb
add
pusha
(bad)
xchg
fisubr
lods
into
daa
push
in
or
pop
xor
(bad)
and
push
ins
mov
pop
idiv
fdiv
das
dec
sbb
in
sbb
cmp
repz
(bad)
ds
mov
cli
dec
mov
stos
push
jno
lds
pop
mov
adc
popf
add
dec
xor
stc
and
enter
ins
xor
daa
jo
mov
inc
clc
out
test
cmps
push
inc
mov
xor
or
jecxz
sub
loope
movs
cmp
aam
lods
dec
inc
mov
repz
iret
xchg
pop
les
mov
repz
repz
sbb
and
cmps
je
das
adc
sti
push
cmp
adc
neg
push
sub
and
movs
hlt
push
xor
inc
jns
jns
aas
or
int
jg
adc
fnstcw
push
pushf
icebp
jle
jl
mov
lahf
retf
sbb
imul
pop
xor
xor
mov
add
pop
jl
shl
jg
cmp
mov
int3
(bad)
sti
jns
pop
add
mov
mov
xor
jne
lea
jl
popf
shl
fwait
mov
(bad)
loopne
sbb
add
inc
xor
mov
push
xchg
pop
outs
test
in
clc
test
sub
stos
fs
arpl
cmps
jbe
outs
add
(bad)
repz
inc
int
mov
and
out
push
cmp
loop
xlat
in
mov
mov
push
outs
imul
mov
pop
cli
pop
(bad)
jb
inc
xor
jmp
pop
and
mov
div
ss
scas
pop
sub
out
rcl
push
inc
(bad)
jo
sub
cli
retf
aam
(bad)
jnp
jne
dec
std
adc
lahf
jle
movs
push
add
pop
xor
xchg
mov
and
iret
sti
loopne
mov
je
icebp
and
inc
dec
jp
jg
out
stos
xor
jge
pop
mov
add
jecxz
or
cs
and
scas
add
add
push
mov
xor
jmp
imul
cmp
and
push
pop
and
js
repz
xor
adc
in
and
inc
lds
dec
fs
int
jno
jp
in
popa
call
add
mov
mov
adc
adc
aas
inc
les
cdq
pop
lock
fwait
add
pop
or
mov
push
xlat
scas
(bad)
pop
push
inc
sbb
sbb
dec
outs
jecxz
in
repz
(bad)
push
dec
pop
mov
call
sbb
mov
sub
aam
fmul
shr
dec
sub
outs
mov
sbb
mov
sub
aad
sbb
arpl
xchg
addr16
mov
daa
clc
cs
adc
add
sbb
mov
aaa
and
pop
loopne
hlt
and
(bad)
dec
gs
std
adc
mov
and
adc
mov
xchg
scas
daa
adc
and
je
cmp
ins
pop
sbb
(bad)
push
fst
sub
pop
movs
xchg
movs
push
jle
jb
test
outs
frstor
or
push
push
in
sub
fsubr
jle
repz
pop
in
cmc
push
and
les
mov
sar
mov
aaa
(bad)
idiv
mov
sar
mov
pop
xchg
fstp
cwde
pop
shr
sub
std
mov
push
jno
pop
push
mov
mov
inc
arpl
les
mov
(bad)
cmp
rcr
daa
jo
xchg
push
or
arpl
js
inc
loop
jne
push
mov
sub
mov
jmp
repnz
sub
fnsetpm(287
test
inc
sub
sbb
inc
lahf
(bad)
or
test
jne
xor
lahf
imul
or
enter
add
mov
xchg
jns
rol
and
outs
add
cld
(bad)
imul
test
loop
cmp
popf
add
pop
imul
loopne
xor
push
mov
xchg
cmps
mov
dec
ins
mov
mov
psllw
push
cwde
xor
loopne
jb
jae
fdivrp
adc
dec
mov
fnstcw
out
pop
dec
mov
neg
adc
movs
pop
cmp
cmps
sar
les
jae
mov
nop
xor
leave
jb
inc
into
addr16
jmp
sbb
xor
inc
sub
xor
inc
xchg
scas
call
sub
mov
int3
xchg
lock
mov
xchg
and
jnp
mov
clc
or
xor
xor
retf
sub
(bad)
and
cmp
ret
sub
or
popf
repz
lods
or
fisub
retf
sub
lods
lock
movs
(bad)
jmp
pusha
fdiv
cmp
dec
inc
or
cmp
into
mov
xchg
add
fldcw
inc
loopne
inc
cmp
mov
cld
jb
ret
addr16
ret
mov
enter
pop
jecxz
mov
shl
out
add
lds
mov
arpl
pmulhuw
xchg
and
add
and
xor
ret
add
pop
add
test
mov
daa
mov
mov
push
fild
pop
or
fwait
je
mov
pop
shr
jmp
fwait
aad
mov
sahf
push
test
and
mov
outs
movs
imul
movs
icebp
push
sbb
repnz
xlat
ins
fucomip
jl
mov
jmp
aam
mov
pop
ss
cmp
pop
mov
test
or
jne
and
jnp
push
dec
pop
fidiv
lea
rcr
cmc
sbb
pop
push
mov
mov
mov
add
movs
shl
jmp
loope
xchg
lods
adc
lea
js
sub
jge
adc
mov
jo
mov
push
pusha
imul
adc
or
leave
(bad)
int
mov
adc
stos
dec
pop
xchg
test
dec
jg
push
jb
aam
clc
and
test
sbb
mov
fdiv
jle
icebp
cmp
mov
test
call
jl
rcl
adc
int3
fsub
pop
fst
add
cld
add
pop
inc
rol
pusha
sub
sbb
call
rcr
push
jg
test
xchg
jnp
xchg
pop
xor
call
imul
dec
cmps
repz
aaa
aam
jns
cmp
or
and
dec
mov
mov
out
or
shl
jae
outs
cmp
ret
sub
inc
xlat
sahf
jbe
cwde
inc
inc
xchg
xrelease
sahf
mov
mov
(bad)
push
(bad)
mov
pop
(bad)
xor
jle
jp
retf
jbe
pop
leave
out
xor
mov
daa
xor
shl
outs
xchg
fs
leave
xchg
mov
pop
mov
pop
cmp
ins
cmp
cmp
(bad)
and
add
sbb
mov
sbb
sbb
jnp
out
push
clc
test
mov
jo
xor
jo
push
xchg
xor
lock
dec
mov
xchg
jb
je
xor
outs
and
xchg
rcr
rcr
in
aaa
ret
inc
add
ins
inc
cmp
out
js
xor
xlat
scas
or
fst
cmc
fistp
jmp
pop
sub
xchg
js
inc
aas
and
sub
adc
pop
repnz
inc
int3
add
outs
jmp
(bad)
and
fist
arpl
iret
xchg
iret
lods
push
push
int3
push
pop
xor
mov
mov
or
popf
bound
dec
xchg
sbb
mov
xchg
jl
pop
or
jno
mov
mov
xor
lea
mov
out
into
data16
and
sbb
fsubr
sub
inc
mov
aad
inc
test
mov
stc
push
movs
and
push
test
out
inc
jl
js
mov
shl
sahf
in
mov
test
push
repz
xor
pushf
es
leave
jnp
push
xor
stos
dec
fdivr
test
div
xchg
mov
addr16
jle
or
cli
aad
in
mov
addr16
int3
add
cmp
or
pop
xchg
pop
sbb
lahf
jne
sbb
rol
cmp
rcl
jl
loopne
dec
repz
push
ds
sbb
mov
jo
add
xchg
mov
adc
sti
mov
adc
xchg
sbb
sbb
inc
dec
mov
adc
fsubr
cmp
mov
in
mov
les
mov
cld
test
adc
out
sbb
adc
(bad)
std
fdiv
jg
or
mov
test
stos
inc
push
jge
imul
push
inc
xor
dec
out
add
inc
cmp
(bad)
mov
outs
add
jbe
cmps
jbe
push
(bad)
sub
mov
adc
cmp
jb
stc
mov
inc
js
data16
adc
inc
add
add
(bad)
cld
adc
and
into
sub
aas
pop
xor
mov
adc
imul
push
push
repz
das
mov
sub
cmps
xchg
add
mov
retf
(bad)
push
jb
ficomp
cmps
ins
xchg
cwde
jb
aaa
dec
into
retf
lahf
jl
in
imul
inc
jae
or
jae
cmp
loope
aaa
add
fisubr
lahf
jle
xor
fbstp
or
mov
add
fstp
scas
pop
cmp
sub
loopne
adc
dec
(bad)
push
jns
(bad)
rcr
or
xchg
cmps
loop
addr16
enter
xor
or
sahf
gs
jns
push
xchg
jp
mov
push
(bad)
jmp
dec
stos
popf
mov
and
jecxz
fstp
push
in
xchg
test
or
inc
dec
int3
(bad)
fmul
push
mov
mov
pusha
retf
sbb
dec
sub
mov
mov
mov
mov
pop
mov
retf
fdivr
xchg
mov
test
jecxz
bound
push
push
mov
out
ror
pushf
push
(bad)
sub
cmp
cmp
xlat
enter
ss
in
fisub
adc
mov
ins
mov
mov
pop
lds
rcl
daa
(bad)
xor
imul
jbe
or
ins
and
js
dec
pop
pushf
outs
lea
xor
mov
cmp
jo
xchg
adc
mov
hlt
ins
sub
add
adc
mov
jmp
std
(bad)
(bad)
inc
mov
cdq
adc
fsub
arpl
cmps
sbb
iret
cmps
jae
ja
repnz
out
adc
test
sbb
pop
xor
scas
fstp
add
(bad)
cmp
cs
out
fcom
std
jae
mov
xor
lahf
imul
push
or
cmp
das
test
iret
cmp
mov
mov
je
add
and
inc
xor
lods
inc
push
aas
push
popf
lds
jns
mov
out
in
ja
int
repnz
ds
mov
and
inc
push
xor
push
sbb
push
das
mov
push
fldenv
jmp
pop
jb
ins
jno
push
mov
imul
sbb
(bad)
out
dec
int
(bad)
ret
movs
push
ror
mov
push
mov
or
and
(bad)
push
aas
mov
neg
ror
cmp
and
cmps
sub
add
fcmovne
adc
xlat
call
dec
loopne
xor
push
push
gs
push
ss
cmps
rcl
ffree
push
jg
mov
loope
inc
nop
ja
jmp
sbb
ja
pop
fyl2x
ficom
mov
sub
xor
dec
fwait
loope
fcom
aam
fisub
adc
test
out
mov
push
out
push
jns
cdq
xor
pop
and
fmulp
mul
mov
stos
add
push
jge
mov
dec
add
mov
out
push
shr
outs
aad
mov
pop
loopne
sub
mov
mov
jae
inc
hlt
cld
dec
pop
cwde
(bad)
retf
es
jae
sub
xchg
je
cmp
nop
(bad)
adc
repnz
xchg
sbb
push
jecxz
shl
in
xor
push
and
inc
push
shr
pop
push
pop
pop
jl
mov
pop
cli
retf
sub
adc
popf
xchg
xchg
cld
lea
inc
inc
les
xor
sbb
mov
mov
icebp
bound
adc
xor
sbb
retf
mov
movs
ret
push
inc
pop
adc
(bad)
jecxz
cmp
movs
add
or
aaa
sbb
push
and
rcl
outs
jecxz
sar
jae
ret
pop
in
xchg
pop
call
pop
stc
jno
popf
xor
and
jne
mov
out
outs
jle
ins
lock
jae
mov
mov
ja
aas
in
enter
mov
push
mov
out
and
cmp
jb
inc
nop
ins
mov
or
rcr
pushf
xor
xchg
cld
xor
sub
mov
and
out
dec
ins
nop
inc
mov
jge
bound
push
outs
or
dec
pusha
sahf
or
xor
imul
iret
in
dec
aaa
bound
repz
nop
add
pop
and
out
ja
pop
pop
call
and
not
out
aaa
inc
xchg
xor
xor
pushw
outs
(bad)
pop
rcr
mul
lahf
call
das
mov
add
xor
loopne
xor
push
xor
cmp
adc
push
ficomp
cmc
xchg
sahf
inc
jbe
shl
cmp
call
sbb
dec
js
repz
fnstcw
xchg
sub
bound
imul
imul
out
xchg
ins
adc
pushf
xor
push
push
xchg
fucomip
push
test
lods
int3
pop
xor
stos
push
out
ficom
cmp
mov
inc
dec
xchg
out
jmp
jbe
outs
pushf
push
pop
and
inc
adc
add
outs
jmp
jb
test
fcomp
xchg
cmp
jge
inc
out
inc
in
in
push
aam
int3
mov
pop
mov
clc
icebp
(bad)
mov
loope
or
sbb
pop
stos
mov
out
fadd
push
sub
xchg
dec
jno
inc
mov
enter
push
lods
jae
aad
popf
repz
pushf
mov
and
add
mov
cmp
inc
mov
(bad)
data16
jle
outs
pop
imul
jmp
mov
adc
int3
and
outs
bound
ret
out
in
ds
cmp
push
push
mov
mov
cmp
pop
fsubr
lahf
sti
imul
cld
jno
lea
scas
add
xchg
mov
xor
cmp
dec
mov
fist
jno
shl
fild
nop
ss
aas
loope
xchg
test
call
cmp
inc
gs
shl
retf
imul
ins
mov
dec
xlat
sbb
loopne
mov
int3
jnp
(bad)
jle
ror
mov
dec
xchg
sahf
ds
in
dec
xor
dec
fdivr
cs
lock
adc
adc
sub
ss
inc
(bad)
bound
rcr
cs
pop
ins
sbb
add
mov
mov
xchg
aam
adc
xchg
sbb
repnz
movs
mov
pop
mov
bound
and
test
loopne
xor
xchg
pop
test
xchg
mov
push
jl
dec
cmps
dec
xor
sbb
mov
dec
mov
jecxz
jl
inc
jmp
movs
lahf
adc
push
je
sti
xchg
and
dec
movs
shl
push
iret
or
retf
sahf
sub
pcmpgtd
dec
adc
stc
mov
and
mov
xchg
xor
inc
rcr
add
jno
es
and
cld
rcr
adc
outs
aaa
outs
shl
scas
pop
push
ds
inc
shl
adc
pop
mov
aad
outs
cmp
or
xchg
xor
push
lock
push
in
add
add
mov
into
cmp
dec
xor
test
push
arpl
in
xchg
(bad)
adc
pop
neg
sbb
mov
popf
sbb
cmp
int
sar
sub
jns
stos
(bad)
(bad)
fs
push
sahf
fisub
pop
sti
pop
mov
sub
jmp
les
retf
xor
xor
pusha
pop
dec
mov
xchg
imul
adc
lock
jl
in
jnp
or
push
adc
lock
aad
ret
mov
sahf
xchg
outs
adc
retf
pop
pop
or
inc
fnsave
stc
fdiv
pop
(bad)
jae
push
nop
add
inc
bnd
mov
inc
fcomi
mov
jb
sub
pop
dec
push
test
rol
cdq
sbb
adc
cld
pop
in
pusha
shl
pusha
push
lods
dec
sbb
or
push
push
inc
cmps
aam
in
adc
aas
stos
loopne
mov
adc
rol
xchg
ror
jae
cwde
bound
xchg
cmp
add
int
sbb
mov
(bad)
mov
packsswb
mov
cmp
sub
imul
in
(bad)
rcl
out
mov
mov
int3
cmp
cmps
adc
jae
clc
call
fcomi
cmp
loop
outs
sbb
je
(bad)
xchg
sti
test
sbb
mov
lahf
neg
je
pop
mov
in
std
shr
movs
xor
pop
in
stos
jge
test
inc
aas
fisub
aaa
cmp
bound
(bad)
bound
fadd
call
lahf
xchg
xchg
stc
enter
sbb
mov
jmp
outs
push
(bad)
lods
sahf
xor
wrmsr
and
(bad)
out
push
sbb
push
inc
push
pushf
mov
std
ret
xchg
sbb
dec
cli
aad
cmc
out
call
mov
lods
adc
mov
retf
adc
xor
hlt
bound
test
mov
or
popa
mov
out
pop
js
loope
xchg
loopne
out
mov
push
(bad)
mov
fld
add
lds
dec
retf
(bad)
stos
mov
dec
nop
mov
loopne
(bad)
cmovbe
jae
aam
aad
mov
mov
lock
lods
sbb
retf
retf
hlt
enter
or
popa
in
and
mov
mov
mov
mov
data16
and
hlt
pop
retf
test
js
call
ja
inc
out
push
push
cdq
push
dec
cmp
rol
es
fwait
gs
add
stos
sub
into
add
lahf
push
mov
test
xor
(bad)
mov
retf
pop
inc
mov
dec
call
adc
adc
ficomp
xor
shr
in
xor
sbb
lea
jne
xor
ret
imul
pop
push
sbb
fimul
ss
push
jns
icebp
mov
cmp
pop
xchg
xchg
test
into
push
inc
ins
imul
dec
sub
dec
ds
in
jns
jo
jo
fmul
stc
add
fld1
cmc
movs
push
dec
call
jge
mov
shr
out
rcr
add
lods
ror
retf
repnz
xor
test
push
mov
lods
(bad)
jp
xlat
in
add
mov
push
test
inc
std
arpl
aad
or
add
mov
pop
inc
add
pop
cdq
ficom
xor
and
mov
leave
(bad)
loop
int
sbb
and
xchg
push
xchg
std
xor
in
sbb
or
out
sub
push
(bad)
int3
or
ret
and
lahf
inc
mov
fild
int3
push
push
mov
repnz
pop
test
adc
xchg
repz
retf
(bad)
mov
inc
rcl
ror
xchg
adc
sbb
aaa
add
sub
or
enter
cmp
mov
push
cdq
ret
xchg
adc
in
jp
lds
(bad)
jmp
inc
shl
int
fwait
stos
xchg
fcom
hlt
scas
mov
mov
and
in
sar
or
stos
pop
pushf
dec
sbb
movs
sub
(bad)
jbe
cli
pop
cmc
mov
mov
cdq
mov
pop
retf
fdivp
push
mov
pop
popa
daa
jl
shl
in
jnp
repnz
pop
xor
js
sti
mov
and
das
xor
adc
jnp
fisub
je
or
mov
rcl
retf
dec
sbb
call
cli
or
out
or
into
das
or
jl
ret
add
dec
cmc
cwde
pop
cmp
cmp
(bad)
mov
call
jns
(bad)
ins
lahf
add
jno
mov
mov
iretw
cmp
mov
adc
dec
test
call
adc
jne
inc
mov
add
cmps
pop
push
lahf
retf
movs
(bad)
data16
out
xor
sbb
retf
and
sar
test
or
and
mov
mov
ds
pushf
stc
div
dec
mov
(bad)
mov
sub
clc
xlat
int
fbstp
mov
push
xlat
stos
fist
jb
fsub
mov
jb
cs
sbb
sub
sbb
fbld
or
jp
mov
add
sbb
sbb
into
jb
xlat
scas
inc
jp
push
jp
sub
pop
icebp
add
repz
xchg
dec
or
shr
fld
mov
iret
mov
cmps
pop
lds
pop
xor
retf
das
cmp
dec
pop
mov
enter
cmp
sub
iret
xor
xor
les
mov
icebp
or
lock
jle
and
sbb
in
push
cmp
(bad)
out
jp
fs
adc
outs
sar
jnp
pop
inc
add
enter
sbb
movs
cli
adc
dec
lock
dec
aam
mov
loopne
jmp
inc
ret
inc
fmul
aad
scas
stos
das
int
add
cmp
cmp
ret
ror
sub
fisttp
dec
adc
pushf
cmp
imul
inc
and
out
dec
sti
scas
aas
add
out
lods
pop
push
mov
or
dec
sbb
scas
xchg
jne
jnp
mov
dec
out
or
cmp
sti
test
aas
std
sbb
icebp
sahf
xchg
xchg
aas
xor
sete
mov
xor
movs
nop
xor
test
push
mov
loopne
push
add
xlat
sbb
ret
push
adc
dec
pop
dec
mov
popf
sbb
outs
mov
jmp
adc
lods
pop
jle
jg
add
push
cli
int3
sbb
mov
fcmovnb
ja
fild
call
mov
leave
xor
(bad)
jmp
test
iret
in
ret
and
lods
daa
fdivr
push
repnz
sti
push
(bad)
hlt
pop
nop
and
and
mov
or
sti
out
loop
dec
ror
pop
cmp
mov
xchg
lods
jno
jmp
push
push
call
pop
sub
sbb
(bad)
xchg
loop
test
dec
aad
inc
xchg
ret
icebp
cmc
addr16
jmp
gs
add
xchg
imul
or
loop
mov
mov
movs
in
out
cmps
or
jle
sub
fs
dec
jbe
sub
mov
iret
push
in
adc
mov
nop
movs
imul
and
cwde
add
mov
ror
mov
mov
sbb
pop
test
xor
xchg
adc
xor
test
lea
(bad)
scas
add
xchg
sub
mov
xchg
and
dec
ret
mov
push
jp
(bad)
mov
loope
push
jl
jecxz
mov
(bad)
mov
jecxz
xor
xchg
dec
or
(bad)
mov
push
in
jne
scas
ds
aas
and
imul
jnp
push
loop
sahf
(bad)
aam
pushf
inc
cdq
call
in
add
push
push
fld
mov
pop
pop
pop
sti
sti
mov
outs
daa
jmp
mov
out
repnz
mov
and
bound
(bad)
scas
ins
jno
stos
scas
pop
outs
loopne
and
test
js
xchg
xor
(bad)
repz
push
mov
sub
adc
call
clc
aas
jne
pop
repz
in
addr16
jp
adc
in
stos
lea
add
mov
lock
xor
es
push
mov
add
mov
test
xor
mov
out
ss
les
mov
pop
cmp
in
mov
jns
in
mov
cmp
adc
cmc
fwait
aam
mov
mov
ins
cmc
push
mov
or
les
add
push
push
sbb
inc
push
add
ror
outs
in
scas
in
shl
cmps
ins
push
loopne
dec
pop
addr16
aas
push
xor
dec
out
xlat
bound
loopne
test
out
xor
fwait
nop
int3
ret
fdiv
outs
xchg
jne
mov
pop
xchg
jl
retf
(bad)
mov
jns
and
clc
adc
sub
rcl
push
test
imul
out
xor
mov
sub
pop
pop
inc
and
xlat
mov
sbb
jne
cmp
add
and
jo
mov
mov
jne
ss
dec
aad
push
and
je
inc
stc
mov
sbb
inc
pop
inc
cld
cld
fstp
enterw
repnz
xchg
test
sahf
sub
mov
fneni(8087
and
test
xor
pop
inc
and
out
and
test
inc
int
and
(bad)
out
lahf
pop
pop
sbb
sub
dec
jle
lods
ss
push
fbstp
lods
sub
daa
jmp
adc
and
stos
out
outs
out
into
mov
mov
sbb
adc
arpl
or
(bad)
not
leave
push
sub
mov
dec
pop
rcr
sbb
push
call
pusha
xchg
mov
mov
(bad)
sahf
xchg
xchg
rcl
xchg
push
sub
sar
adc
daa
sub
sbb
movs
or
mov
dec
xor
pop
fwait
loop
jecxz
xlat
repz
push
neg
cli
leave
jb
mul
sub
and
mov
jae
or
xor
sub
ret
sbb
sbb
repz
imul
(bad)
movs
and
push
cmp
push
pop
pop
call
pop
fcomp
cs
test
mov
xchg
enter
outs
mov
sub
leave
pop
sahf
mov
inc
push
call
mov
dec
out
out
inc
mov
pop
ret
dec
mov
and
rcr
dec
inc
cmc
cmp
pushf
iret
int3
mov
ds
fiadd
jbe
mov
int3
nop
or
lea
fiadd
add
repnz
sbb
(bad)
aam
repz
xlat
leave
xchg
push
mov
jnp
daa
pop
in
and
jns
pusha
xor
xor
lods
sbb
sbb
and
aad
mov
mov
scas
sbb
test
jae
mov
and
push
outs
jno
jbe
or
xor
dec
(bad)
cs
out
mov
bound
xchg
xor
fwait
mov
ret
push
ja
cmp
jg
fwait
mov
std
and
xor
jb
sbb
mov
std
xchg
cmp
jge
or
fs
arpl
sbb
sub
jp
fcomp
lock
ja
into
mov
in
(bad)
mov
xchg
fiadd
sub
mov
mov
add
loop
mov
int3
adc
mul
pusha
cmp
lods
stos
pop
(bad)
ret
aas
outs
movs
and
js
mov
pop
push
pop
or
add
inc
movs
loope
fidivr
out
or
mov
shr
cdq
pusha
std
lahf
jo
test
cmp
arpl
and
inc
pop
shr
sub
(bad)
inc
dec
idiv
std
ret
test
adc
pop
sbb
lock
enter
dec
jmp
inc
pusha
sahf
repnz
pop
jge
jno
movs
pop
gs
(bad)
call
shl
fucomi
mov
cmp
cmp
or
mov
dec
retf
(bad)
pop
mov
sub
ret
mov
lahf
xchg
mov
hlt
in
std
inc
mov
pop
push
push
dec
fist
and
mov
add
int
inc
xchg
mov
sub
inc
cmp
xchg
fmul
mov
popa
mov
iret
loop
sub
repz
retf
movs
xor
mov
(bad)
jle
dec
pop
mov
push
xchg
lahf
pop
fmul
and
mov
pop
hlt
imul
push
fcmovnu
scas
pusha
add
and
test
sub
dec
mov
aam
aas
and
out
int3
cmp
and
push
fsubr
ret
loope
arpl
dec
stc
pop
jmp
cmps
aaa
sti
enter
mov
scas
dec
scas
iret
or
mov
sti
ds
mov
cmp
cmc
inc
dec
in
(bad)
jno
lds
arpl
or
pop
xor
(bad)
sub
stos
mov
int3
fwait
loopne
(bad)
xor
fsub
dec
daa
ror
push
mov
sahf
adc
mov
cmps
add
and
sub
jo
jp
cs
mov
jns
sub
mov
inc
aas
mov
inc
push
in
jmp
add
or
js
rol
sub
repz
into
lods
test
pop
ss
jp
int3
pop
rol
push
mov
mov
lds
leave
js
mov
push
dec
inc
and
xchg
and
sbb
mov
in
or
jge
dec
xor
lods
jne
cmp
fnstsw
xchg
sar
and
inc
xor
aaa
jne
clc
popa
xchg
enter
outs
pop
push
sbb
adc
cld
jge
test
cwde
lea
jl
aas
dec
add
aam
push
cmps
xchg
daa
fnstsw
cmps
test
imul
pop
jae
jecxz
in
fwait
mov
adc
into
sti
test
xchg
cmp
cmp
and
mov
xbegin
jbe
or
test
outs
imul
bound
js
xor
pop
enter
movs
push
pop
add
cmp
inc
mov
push
(bad)
sub
inc
mov
popa
adc
data16
push
mov
and
mov
test
retf
push
dec
add
mov
gs
repz
xor
pop
and
cmp
scas
inc
mov
jbe
fcmovnb
add
mov
fisubr
sbb
xchg
jmp
mov
aaa
jmp
pop
lds
mov
sub
imul
xchg
das
fdivr
(bad)
cmc
cmp
adc
call
ja
hlt
sahf
push
into
sbb
sub
(bad)
jno
lea
xchg
jl
mov
or
mov
mov
add
shr
cmp
test
jnp
enter
(bad)
jp
cmp
xor
fdivr
lock
fsubr
jne
cmp
or
push
je
test
mov
dec
loopne
mov
std
add
and
(bad)
clc
repz
mov
call
fcmovne
sub
lds
mov
aas
nop
push
xlat
cmp
push
mov
inc
inc
aaa
jmp
outs
jmp
mov
(bad)
sbb
xchg
xor
mov
sub
idiv
imul
sub
dec
or
ret
(bad)
popf
adc
sar
pop
dec
fucomi
xchg
call
inc
sub
fidiv
adc
out
movs
shl
jnp
lahf
iret
repnz
retf
fbstp
lods
lock
inc
xchg
test
ficom
mov
imul
mov
pop
mov
pop
sar
stos
jb
cmp
dec
push
ret
pop
jns
mov
outs
sbb
and
mov
sbb
push
sbb
mov
test
xchg
stc
adc
fidivr
scas
jbe
push
sub
test
arpl
(bad)
cli
pop
xchg
inc
push
xchg
rcl
mov
aaa
add
pop
in
sbb
ret
cdq
sar
retf
push
daa
in
data16
ds
dec
xchg
xchg
outs
popf
pop
fisttp
ficomp
mov
pushf
or
cmps
and
sti
js
fs
sub
les
sbb
jns
in
fidiv
sar
fidiv
bound
js
cdq
xchg
and
sub
push
pop
pop
in
xlat
push
(bad)
or
jge
cli
ret
int3
jmp
stos
and
xchg
mov
(bad)
out
stc
cmp
std
js
sbb
sbb
data16
ret
sahf
jl
sub
dec
inc
xor
adc
fisubr
pop
fsub
pop
sub
fmul
mov
repnz
sahf
mov
sbb
inc
mov
add
xchg
lahf
cs
mov
sub
shl
jmp
fisubr
int3
sub
or
ror
push
(bad)
int3
cmps
repz
mov
cmps
das
dec
movs
cmc
fld
out
dec
rcl
or
(bad)
std
mov
push
rcl
mov
pop
sbb
movs
add
xchg
sbb
les
mov
adc
cs
sbb
jb
loope
pop
call
int3
int
ins
nop
push
ins
bound
lea
xor
sub
out
inc
aam
jmp
mov
add
int3
push
xchg
jbe
cmps
(bad)
hlt
inc
(bad)
inc
outs
cs
xchg
out
pop
and
(bad)
std
fisttp
xor
mov
fadd
dec
addr16
jnp
dec
mov
push
lds
cs
jp
ret
ds
shl
mov
aaa
pop
aas
inc
jge
jmp
push
add
into
or
jl
xor
mov
jae
es
(bad)
xchg
mov
out
mov
je
or
jg
lds
and
push
(bad)
stc
ret
add
and
hlt
mov
popa
pop
(bad)
push
mov
cmp
out
inc
cmp
adc
pop
in
push
(bad)
neg
dec
jecxz
mov
and
adc
loope
xchg
ins
xchg
cmp
dec
fistp
push
mov
dec
cdq
mov
cmp
sti
mov
std
add
ins
popa
retf
outs
arpl
adc
retf
fisttp
test
or
loope
mov
or
lods
push
das
mov
out
in
mov
push
sbb
out
imul
cld
enter
sbb
push
int3
imul
jno
aas
sub
cmp
jl
hlt
addr16
adc
jb
inc
mov
xlat
xchg
and
xor
cmp
sub
fnstsw
pop
push
pusha
out
xor
inc
cmps
pop
arpl
fnstcw
sbb
sbb
mov
(bad)
imul
mov
fadd
cs
dec
enter
add
lea
nop
loope
mov
scas
xchg
xchg
xchg
xor
je
repz
mov
cmp
adc
ins
inc
(bad)
and
inc
xchg
sub
fadd
inc
mov
retf
mov
scas
cmp
call
pop
mov
(bad)
jmp
push
ret
pop
pop
icebp
jmp
push
cmp
test
iret
jnp
push
test
pop
mov
loop
xchg
mov
pop
loop
jns
fld
push
int3
bound
inc
sbb
call
xchg
das
fdivr
bnd
sub
lods
push
mov
mov
mov
outs
les
xor
in
mov
repz
mov
xor
sbb
mov
out
inc
arpl
sbb
or
fisub
fist
shr
lea
imul
pop
fsub
enter
sbb
push
cmc
and
gs
call
xor
mov
jb
sahf
mov
adc
jae
xchg
fstp
xchg
fwait
cli
mov
cmps
jmp
xor
stc
les
das
out
aaa
ds
mov
rol
xlat
call
loop
call
mov
xor
sub
popf
cld
jno
push
pop
dec
mov
lahf
das
(bad)
pop
fist
(bad)
xchg
cmc
add
mov
fcomi
inc
shr
inc
xchg
jnp
out
dec
adc
out
dec
add
popf
and
xlat
imul
loop
test
jge
sub
ficomp
test
shr
add
jmp
cmp
jg
jge
and
(bad)
sbb
call
test
jae
lods
jge
or
je
sub
and
jmp
cmp
xchg
mov
mov
inc
bound
cmc
mov
cmc
aad
pop
pop
dec
mov
dec
cmp
add
inc
pop
mov
out
mov
aad
hlt
jmp
dec
dec
mov
test
cmp
mov
(bad)
xchg
mov
mov
dec
ror
sub
fs
fldlg2
int
mov
popa
adc
int3
xchg
xor
add
jge
cmp
sub
jge
mov
sbb
stos
int3
sbb
inc
idiv
stos
vmread
adc
dec
test
pop
cmp
hlt
in
xor
pop
bswap
aaa
js
xor
or
adc
bound
or
xchg
mov
repz
in
cmp
push
fwait
mov
xchg
and
imul
(bad)
mov
int
mov
sub
pop
int
sbb
or
dec
enter
ret
sbb
inc
or
movs
in
mov
(bad)
and
scas
dec
push
push
mov
outs
pusha
inc
loopne
jge
mov
fidivr
inc
jnp
cmp
adc
mov
out
jle
jecxz
test
in
fisubr
pop
sbb
test
aaa
retf
aam
mov
mov
sub
xor
cmp
mov
loop
xchg
mov
or
add
shr
(bad)
cld
movs
(bad)
jl
jns
pop
inc
sbb
push
or
std
add
adc
pop
xor
xor
jo
mov
into
jecxz
in
call
or
repz
hlt
jmp
push
ins
cs
and
xchg
or
repnz
sub
repz
lahf
cmp
imul
test
dec
jge
ficomp
xor
icebp
push
out
jle
(bad)
or
sub
int3
clc
xchg
lods
inc
cmp
pusha
movs
adc
and
cmp
jae
jmp
movs
adc
movs
mov
out
lahf
and
pop
clc
push
push
inc
not
jne
fild
add
or
iret
lods
and
scas
pop
lahf
sub
adc
xor
fmul
and
push
xor
and
sbb
es
xchg
scas
xchg
cld
xchg
stos
cld
mov
sbb
inc
enter
pop
mov
mov
popf
into
xchg
xor
sub
lds
mov
test
mov
mov
sbb
sahf
gs
pop
scas
addr16
lods
mov
loope
push
push
or
fcomp
(bad)
inc
inc
mov
stc
cmps
in
sbb
or
stos
mov
(bad)
in
mov
jno
push
pop
ret
mov
mov
cmps
ins
loopne
mov
xlat
iret
mul
(bad)
sar
mov
aam
pop
xchg
push
push
sbb
push
out
loope
fistp
adc
jae
dec
mov
in
or
pop
stos
ins
sar
cli
es
ds
mov
arpl
ss
ins
adc
fadd
loope
jmp
mul
test
out
test
repz
(bad)
mov
cmps
cmp
and
out
icebp
dec
call
dec
pushf
xchg
add
fs
xor
int3
shr
mov
fimul
icebp
clc
into
aaa
xlat
and
push
ins
inc
push
push
xchg
xchg
cmp
fcomp
psubq
(bad)
or
icebp
xchg
cli
stos
jp
stos
popa
sub
push
sbb
cmp
xlat
push
jnp
movs
lods
mov
xchg
jns
int3
int
nop
sub
mov
aam
das
dec
(bad)
loopne
inc
mov
movs
xchg
mov
mov
jmp
int
outs
sub
cmp
push
enter
xchg
ins
loop
adc
dec
js
adc
inc
lods
mov
daa
lea
dec
push
loopne
push
(bad)
jbe
ja
mov
push
cs
retf
xchg
jnp
(bad)
mov
mov
in
mov
ss
push
loopne
mov
scas
int3
or
iret
in
cmp
xor
aas
xor
loop
inc
retf
hlt
div
dec
xor
ficomp
sbb
rol
jg
xor
loop
test
jbe
cli
dec
or
adc
(bad)
jno
sbb
test
dec
ror
jmp
cmps
shl
push
call
lea
lock
sbb
loopne
or
inc
lahf
nop
xlat
test
xchg
stc
je
adc
mov
xor
inc
adc
push
sub
and
retf
add
add
xlat
mov
adc
jns
jae
std
cmp
mov
push
jae
mov
cmps
sub
cmp
inc
ret
cmp
mov
or
les
cdq
imul
dec
sti
mov
mov
fstp
push
cs
ret
hlt
mov
push
popf
jnp
jno
xor
adc
fldz
pop
mov
mov
iret
adc
mov
cmp
xchg
lods
or
outs
sbb
jae
sbb
movs
rcl
pusha
ins
mov
rol
test
int
call
sub
nop
mov
jle
ja
jge
imul
jb
mov
mov
js
scas
div
repz
mov
retf
sub
xlat
jne
mov
pop
pop
push
(bad)
ror
cli
add
je
mov
xlat
mov
fdivr
outs
addr16
sub
js
jno
into
mov
xchg
pusha
inc
std
cmp
xor
xor
int3
ret
imul
mov
fdivp
sub
das
mov
enter
retf
jno
outs
cmps
imul
xor
push
fsub
pop
adc
ficomp
sub
test
jmp
mov
cmp
repnz
add
loopne
push
xchg
fs
jge
fmul
xchg
loope
js
xchg
int3
jmp
les
push
xor
adc
jno
jl
cli
mov
fisub
test
mov
aam
jns
mov
cmp
inc
cs
sub
jno
cmp
data16
jbe
das
repnz
jnp
cmc
mov
mov
cwde
jno
add
pushf
loop
retf
pop
aas
idiv
movs
mov
mov
push
jecxz
sar
mov
and
cmps
fwait
sub
and
inc
and
stos
mov
sub
mov
fadd
sub
fs
mov
test
jo
adc
pop
xor
loopne
adc
xor
sbb
jns
mov
scas
mov
sbb
pop
(bad)
or
aaa
aad
lods
fisttp
inc
lock
jne
adc
sub
(bad)
pop
xor
inc
jno
push
dec
ins
cmps
retf
(bad)
push
cmp
call
jno
pop
sub
jp
xchg
in
sbb
mov
push
test
scas
data16
icebp
cwde
mov
ja
jmp
ja
push
sbb
cmp
leave
out
jmp
or
fild
adc
mov
(bad)
cdq
mov
adc
add
xor
test
inc
daa
in
ds
jbe
inc
cmc
cdq
je
je
out
scas
pop
stos
leave
mov
xchg
push
nop
dec
stc
inc
dec
inc
xchg
inc
sub
movs
dec
inc
dec
jae
mov
imul
cmps
into
shl
cmp
jg
and
push
ja
sbb
(bad)
mov
jae
pop
lods
xor
call
nop
jle
movs
aaa
jne
adc
cmp
cmps
fsubr
and
jmp
xchg
ret
sub
cmp
mov
movs
and
add
mov
pop
jne
dec
jmp
push
or
in
je
jb
adc
pop
lods
dec
es
xor
push
test
stos
push
std
in
dec
call
ss
test
xor
mov
mov
rol
mov
stos
fs
push
sub
jne
les
adc
pop
out
sub
add
shl
hlt
cmp
fistp
push
dec
(bad)
adc
or
mov
in
pop
xchg
test
hlt
xchg
adc
xchg
cmp
jl
dec
add
push
xor
in
pop
jne
jae
dec
mov
cmc
sar
jle
mov
js
das
sub
and
push
cmps
mov
ret
imul
call
(bad)
repz
scas
mov
push
xchg
and
lahf
pop
imul
mov
test
pop
dec
push
pop
sub
cwde
out
in
mov
mov
inc
sbb
aas
fldcw
xchg
bnd
jns
or
and
add
pop
test
xor
in
movs
mov
outs
iret
sub
add
movs
clc
push
aam
jae
test
(bad)
sub
push
mov
stc
leave
shr
jmp
(bad)
ss
add
sbb
sub
sbb
imul
scas
popa
int
sbb
xor
mov
xor
sbb
dec
sbb
adc
mov
or
jno
adc
stc
ss
add
mov
jge
aas
es
jb
sbb
dec
dec
jl
pop
adc
arpl
add
iret
dec
cmp
adc
cmp
outs
call
(bad)
cwde
jno
js
ret
cli
dec
repz
jne
repnz
iret
sub
jle
xchg
push
xor
xor
xchg
push
in
cli
cmp
add
add
and
or
lods
pop
imul
ja
stc
fdiv
cdq
push
aaa
stc
loop
mov
jns
retf
fidiv
fisttp
dec
and
xchg
push
cld
repz
ss
or
xor
jecxz
mov
inc
fsub
(bad)
aaa
imul
xchg
idiv
mov
xor
pop
adc
stos
shr
enter
fsub
and
sub
fs
sub
test
cmp
adc
test
xchg
mov
or
sar
xor
add
repnz
shr
xor
add
sub
int
inc
jne
clc
cmp
xchg
xor
fadd
mov
xor
pop
xor
(bad)
mov
adc
add
mov
xchg
lea
jne
or
xor
cmc
or
push
ss
jbe
inc
sbb
icebp
xchg
pop
lds
xor
test
xchg
fstp
and
mov
stos
push
out
jno
adc
pop
and
call
mov
jl
fxch
adc
cmp
out
fbstp
adc
pop
mov
add
sbb
mov
pop
inc
fimul
push
shl
jge
mov
mov
int
mov
push
fnstsw
xchg
test
inc
jecxz
inc
rcl
mov
sub
dec
sub
iret
lds
or
bound
add
and
jmp
in
cdq
xor
push
and
outs
cmp
xchg
mov
inc
sub
sbb
(bad)
gs
pop
and
or
push
mov
(bad)
jl
sub
jae
(bad)
movs
xor
nop
lds
cmp
cmp
cmp
mov
jecxz
dec
jne
pop
addr16
pushf
mov
mov
and
mov
out
pop
jp
push
test
je
xor
dec
ins
adc
jbe
(bad)
aad
aam
mov
ss
es
pop
jmp
mov
jnp
jl
mov
jmp
add
adc
frstor
call
pop
or
mov
stos
test
jecxz
js
jmp
inc
fisub
inc
xor
mov
daa
fldcw
sub
jno
cdq
lock
sbb
mov
adc
mov
addr16
or
lahf
mov
xchg
mov
in
push
imul
call
jl
cmp
popf
mov
cmp
xchg
inc
jno
gs
icebp
retf
sub
dec
sti
xchg
xor
hlt
gs
push
repnz
mov
xchg
fwait
mov
fcmovne
or
mov
mov
mov
in
ja
xchg
cs
call
sbb
sahf
jmp
addr16
idiv
sub
xchg
and
xchg
or
add
gs
fstp
xchg
jmp
xchg
sub
(bad)
sub
aaa
xor
ds
jp
in
sti
ja
jne
iret
mov
pop
repnz
xchg
popa
bound
int3
jle
clc
scas
scas
mov
and
adc
cmps
dec
cmc
enter
adc
pop
or
test
rcr
dec
cmp
sub
xor
xor
jl
jbe
mov
mov
aaa
mov
bound
sbb
lea
xchg
pop
ins
or
push
data16
(bad)
xor
or
pop
iret
stos
fs
add
dec
mov
add
mov
jmp
pop
fld
pusha
or
test
sbb
or
jg
bound
xchg
aad
addr16
mov
aad
adc
cdq
test
mov
mov
ss
push
pop
jnp
inc
ja
or
es
fisttp
dec
push
xchg
sbb
mov
scas
cld
ror
adc
inc
jo
in
xchg
dec
jne
lods
sub
xchg
loopne
cld
cmp
sbb
or
mov
inc
pop
xor
repnz
jns
mov
loop
movs
nop
cld
sbb
push
es
fsub
push
push
sub
or
ss
mov
adc
jnp
lahf
(bad)
xchg
sti
lock
mov
ins
in
push
push
mov
clc
cmp
ret
dec
cdq
sbb
mov
loope
(bad)
mov
lds
jb
jne
cmp
push
dec
mov
imul
cwde
data16
mov
pop
xchg
(bad)
shl
loop
cmp
out
mov
imul
sub
daa
xchg
ror
in
jecxz
sub
lods
sahf
out
xor
aam
mov
xor
loop
call
test
sub
gs
(bad)
mov
or
sbb
jmp
retf
mov
(bad)
gs
dec
and
ror
addr16
inc
fs
les
cdq
cmp
ror
and
add
and
or
jo
sbb
fiadd
add
jl
stos
out
mov
loope
mov
test
xchg
adc
cvtpi2ps
xchg
sub
xor
sbb
or
gs
cmp
sub
clc
mov
add
lods
addr16
xor
shl
dec
mov
jno
sub
push
in
into
mov
push
mov
xor
lock
sbb
sti
mov
mov
lea
cmp
jae
stos
mov
in
mov
test
dec
and
aas
xor
push
inc
mov
cmp
lahf
mov
fcmovbe
xor
xchg
out
popf
xchg
pop
lock
pop
rcr
and
add
pop
sub
jo
pop
mov
pop
mov
cmps
push
adc
in
loopne
jle
adc
or
adc
arpl
jl
sahf
outs
dec
or
push
and
mov
cmc
aam
jns
mov
test
(bad)
enter
jne
push
ins
pop
iret
ins
pop
pusha
es
dec
mov
mov
xor
xor
pop
jmp
test
mov
dec
mov
mov
mov
ret
xor
rcr
aad
movs
jecxz
xchg
inc
mov
pop
retf
xor
imul
dec
mov
shl
mov
jno
bnd
test
pushf
mov
mov
retf
aam
jb
nop
jl
ins
sahf
iret
sahf
(bad)
int3
xchg
pop
out
cmc
loopne
dec
scas
(bad)
mov
inc
jne
jnp
test
mov
cdq
addr16
cmp
stos
push
in
fstp
hlt
push
pop
jp
push
mov
and
int3
push
adc
repnz
leave
dec
mov
jmp
cmp
mov
adc
sahf
loope
call
sar
int
enter
sub
ret
inc
mov
mov
and
sub
mov
cmp
jge
and
pop
inc
jmp
es
mov
mov
add
mov
shr
xor
loopne
dec
push
stos
ins
push
inc
aaa
repnz
adc
and
sub
pop
jb
mov
inc
push
add
cs
(bad)
in
es
push
jecxz
arpl
mov
fbstp
fmul
nop
fldenv
push
repnz
popa
or
adc
retf
fwait
add
call
(bad)
jb
dec
xor
call
push
in
mov
ins
out
cmps
fs
movs
or
les
xchg
and
push
xor
dec
mov
andnps
add
push
jnp
mov
in
sub
push
jno
mov
add
mov
mov
inc
mov
cdq
inc
out
cmps
adc
js
scas
sti
lahf
call
mov
jno
pop
ja
adc
and
test
and
shr
xchg
jne
cmp
xchg
cmp
push
adc
add
popf
out
mov
sbb
push
(bad)
ins
add
arpl
xchg
int3
in
mov
cmp
mov
mov
call
dec
(bad)
sub
in
les
stos
mov
daa
rcr
sahf
cmp
fcom
pushf
or
cli
pop
push
fisubr
push
push
out
sub
int3
and
loop
pop
adc
mov
sbb
mov
or
mov
dec
ret
cmp
push
inc
and
cmp
fcomp
call
fwait
add
repnz
inc
icebp
movs
stos
push
das
or
cmp
sbb
inc
inc
jbe
(bad)
arpl
xchg
or
jno
fninit
test
pop
or
xor
adc
out
stos
bound
sbb
in
fcom
mov
fcom
loopne
sub
call
inc
adc
push
push
cmp
out
and
push
sub
and
xor
(bad)
out
xchg
or
mov
dec
push
les
jl
inc
lods
shl
xor
aas
inc
dec
(bad)
push
sub
les
xchg
pop
sti
push
pop
xor
lock
xor
mov
dec
lods
outs
push
cmps
xlat
sub
sub
fwait
cmp
sbb
das
adc
stc
aad
nop
pop
arpl
enter
pushf
repz
lods
in
mov
icebp
and
xchg
ins
inc
inc
mov
dec
xchg
retf
in
mov
daa
fwait
pop
and
mov
call
outs
cmp
call
add
or
or
add
test
arpl
mov
data16
das
int3
add
cmp
icebp
fistp
inc
dec
rcl
popf
icebp
loopne
cmp
fcom
adc
or
outs
xor
dec
mov
sub
cmp
out
inc
adc
call
int
pop
outs
ja
mov
dec
mov
stos
lea
mov
lods
cmp
xchg
stc
sbb
xchg
pop
fidivr
sbb
mov
les
jns
enter
sub
mov
popa
inc
add
cmps
ds
jg
sti
mov
cmp
push
fwait
mov
push
cmp
dec
test
adc
inc
cmp
add
mov
outs
je
lods
clc
into
inc
pop
cwde
cmc
mov
mov
xor
inc
dec
adc
push
and
sub
into
sti
popa
je
cdq
mov
xchg
jbe
xor
pop
ins
pop
outs
lock
mov
ret
(bad)
xor
sub
pop
(bad)
jl
and
adc
mov
sar
in
in
pop
hlt
ret
sti
sub
loopne
rcl
adc
inc
shl
das
and
ret
dec
add
out
rcl
jmp
test
push
jno
test
sub
shl
clc
jo
lods
leave
cwde
sar
add
in
test
or
adc
movs
hlt
fild
retf
xor
ins
repz
retf
sti
(bad)
mov
add
adc
pop
cdq
leave
(bad)
dec
pop
imul
mov
sub
mov
push
(bad)
enter
cdq
scas
out
mov
neg
add
adc
test
in
repz
xor
enter
cmp
lea
push
imul
ret
leave
mov
jmp
mov
jmp
aas
sub
inc
fist
sti
inc
ret
pop
dec
sbb
dec
sbb
and
cmp
fwait
dec
psubb
lock
icebp
fiadd
mov
mov
pusha
scas
add
popa
daa
mov
bound
and
mov
push
adc
pop
add
jge
stos
sbb
ss
retf
repz
test
iret
mov
mov
movs
sahf
test
adc
fisttp
test
pop
mov
xchg
or
imul
repnz
or
mov
aam
add
iret
das
push
(bad)
test
xor
into
mov
test
cmp
das
xchg
inc
xchg
sahf
clc
mov
jl
test
inc
push
fs
ror
pop
pop
sbb
movs
jbe
push
test
push
mov
dec
jg
enter
sbb
mov
ins
pusha
jge
or
sti
push
das
(bad)
aas
dec
scas
jo
in
scas
push
jnp
jne
int
into
push
xor
ret
(bad)
push
inc
sahf
cmp
cmp
mov
xor
test
push
pusha
push
mov
push
stc
rcl
and
sti
cmp
mov
sbb
cmp
mov
pushf
inc
push
scas
outs
adc
enter
cwde
ins
and
sbb
pop
das
add
pop
inc
add
(bad)
adc
inc
fwait
cs
mov
aas
pop
xchg
and
cmp
xor
xor
retf
in
mov
fnstenv
pop
xchg
jge
mov
inc
sti
mov
or
push
es
inc
mov
es
(bad)
sahf
test
cdq
daa
ret
(bad)
push
pop
ss
mov
or
jns
jecxz
add
xor
and
sbb
and
adc
ss
dec
cmps
push
and
xchg
cmp
inc
mov
or
stc
shr
pop
adc
pushf
sub
aaa
adc
xchg
jp
pop
bound
in
xchg
push
bsf
and
add
shl
mov
sbb
mov
xor
std
sub
lods
outs
out
sbb
frstor
add
cmp
dec
fwait
sub
pop
push
(bad)
lock
fsubp
mov
add
cdq
movs
(bad)
xor
inc
push
popf
shl
leave
jbe
sub
xchg
scas
in
scas
fsubr
adc
mov
out
lods
dec
ficom
loopne
adc
dec
cmp
inc
cmp
(bad)
popa
mov
iret
cmp
inc
push
test
stos
cmovne
sbb
ins
stos
ja
dec
div
ds
pop
test
cmp
cmp
xchg
shl
push
or
or
and
mov
in
sub
or
mov
push
aam
inc
in
ror
push
icebp
inc
inc
mov
mov
add
add
mov
test
mov
mov
mov
sti
aad
je
mov
xchg
push
in
sbb
shr
out
arpl
test
into
imul
test
adc
adc
aad
loopne
cli
iret
inc
cmp
mov
sbb
sbb
pop
add
jne
in
imul
mov
sar
jp
ja
(bad)
mov
push
or
fwait
arpl
sbb
movups
mov
jp
mov
out
push
add
into
jecxz
push
mov
es
inc
fsub
or
cmp
frstor
mov
fucomp
test
fild
sub
sbb
or
pop
jo
aam
pusha
pop
das
aam
lods
ins
mov
inc
dec
xor
(bad)
imul
mov
push
jae
adc
xlat
inc
inc
rol
adc
jl
aaa
pop
adc
pop
cmps
(bad)
and
(bad)
scas
arpl
adc
rcl
mov
sbb
mov
jecxz
sub
xor
inc
mov
mov
adc
bound
into
mov
sub
stos
xlat
data16
pop
cld
pop
jp
in
and
and
enter
bound
in
dec
addr16
mov
add
mov
int
aad
and
push
sbb
cmp
mov
pop
jle
rol
and
jg
dec
shl
xor
mov
jecxz
in
or
push
lahf
push
mov
xor
and
repz
xor
cmp
pusha
aas
pop
pop
cmp
loop
ret
jae
cmp
add
push
movs
lods
lods
clc
es
adc
dec
sbb
int
stos
xchg
and
js
lea
inc
jae
and
bound
jno
mov
jmp
inc
xor
push
sbb
or
loop
mov
fdivr
or
clc
hlt
sub
add
jecxz
retf
cmp
xchg
fdiv
and
xchg
fnstsw
lods
cmc
inc
test
test
push
add
ffree
pop
movs
mov
adc
gs
dec
push
fsubr
adc
add
xor
pop
add
xor
jg
xor
cmps
mov
or
daa
xchg
mov
(bad)
xor
movs
nop
int
xor
push
mov
in
cli
data16
sar
movs
xchg
cmps
iret
not
push
fldcw
mov
adc
push
pop
test
sbb
movs
pop
inc
mov
push
rol
push
jle
mov
out
dec
push
xchg
gs
dec
jl
mov
(bad)
test
adc
iret
push
daa
ror
cmps
xor
(bad)
sbb
push
and
fwait
stos
add
inc
and
icebp
retf
jns
iret
mov
repnz
movs
adc
mov
retf
mov
loop
push
aam
hlt
sbb
xor
ins
ret
dec
xchg
enter
and
lock
(bad)
pop
inc
outs
jno
push
add
in
add
or
lock
shl
ja
fadd
repz
in
mov
loop
xor
xchg
imul
or
add
stos
xor
aas
jg
cdq
push
sub
pop
add
test
sbb
mov
sub
pop
(bad)
out
push
mov
pop
(bad)
div
dec
jo
sub
jge
sub
mov
mov
xor
jl
adc
fstp
jb
push
sub
mov
popa
in
add
fcmovu
(bad)
pusha
cs
xchg
push
ins
mov
jp
push
push
(bad)
mov
lods
mov
mov
or
addr16
sub
fbld
shr
rcl
and
adc
sub
jmp
push
add
imul
jge
movs
in
xchg
cmp
ficom
xchg
inc
(bad)
mov
cmp
fwait
pusha
je
nop
cmc
or
inc
and
out
pop
jp
mov
mov
mov
or
push
les
lods
and
shl
outs
ficomp
out
jo
add
jg
mov
call
xor
xchg
xchg
inc
popa
in
fld
xor
inc
(bad)
ror
mov
and
mov
cmc
mov
rcr
outs
jle
loop
dec
imul
repz
adc
mov
ficom
push
jmp
daa
(bad)
test
dec
(bad)
xlat
cmp
add
or
cwde
pop
and
cmp
cmp
lods
push
push
xchg
pusha
cmp
cmp
push
cmc
push
mov
dec
xlat
je
in
jmp
fldln2
jmp
cmps
(bad)
test
mov
and
push
xlat
mov
std
(bad)
and
fld
cmp
adc
test
out
and
nop
imul
push
out
imul
repz
mov
and
aam
mov
dec
stos
or
leave
sbb
out
aaa
inc
dec
outs
mov
not
push
add
mov
loop
retf
sub
fs
mov
jbe
xor
mov
cmps
fsubr
lds
or
mov
aaa
movs
fsub
push
or
in
sahf
sbb
cmp
fsubr
push
fs
add
or
or
push
je
jle
rol
test
jmp
cld
mov
xchg
jmp
cdq
push
ficom
xchg
dec
and
inc
fsubp
fild
mov
dec
xchg
aam
fldcw
arpl
xor
pop
inc
loope
movs
mov
adc
fmul
or
mov
gs
mov
jbe
and
std
lods
cdq
push
sub
inc
repz
setnp
inc
es
cmp
mov
mov
int
xchg
icebp
das
stc
icebp
jp
push
or
jmp
mov
cmp
pop
addr16
call
aad
clc
jae
retf
arpl
movs
jae
and
pop
dec
sbb
push
lods
aam
pushf
jl
push
pop
fnstsw
cs
adc
pop
and
mov
fisub
pushf
pop
and
mov
(bad)
push
aam
int3
mov
call
xchg
out
(bad)
call
rcr
pop
repnz
push
xchg
push
dec
cmps
cs
xchg
push
or
sub
stos
repnz
into
in
inc
mov
mov
adc
nop
rcl
imul
cmps
aas
xor
retf
shl
(bad)
push
gs
fisub
add
sar
adc
push
hlt
aas
addr16
ss
pop
stos
not
mov
mov
sub
outs
xchg
inc
ds
sahf
cmp
xlat
test
leave
mov
adc
lods
leave
push
jg
out
dec
sub
cld
les
nop
jae
fwait
cmp
nop
ins
lods
shl
jge
pop
les
sub
pusha
and
mov
pop
pop
mov
iret
xchg
jnp
ret
xor
mov
shl
sbb
in
jo
fnstenv
push
(bad)
js
mov
push
push
(bad)
mov
xor
inc
daa
hlt
std
jno
retf
lods
pop
push
das
sti
sbb
jb
jg
shl
add
push
pop
aas
scas
dec
fdiv
or
cmp
cmp
sbb
jae
push
out
xchg
cmps
sub
xlat
pop
fcomp
pop
cli
retf
inc
(bad)
jmp
pusha
out
sar
dec
xchg
std
mov
or
dec
inc
mov
dec
push
ficom
and
retf
mov
lods
(bad)
dec
std
mov
test
rcr
add
sub
mov
inc
outs
cdq
or
in
or
sub
or
push
mov
(bad)
mov
cmps
mul
push
cmp
les
cli
push
shl
fist
out
movs
pop
repz
fcomp
xchg
lods
test
mov
sahf
(bad)
in
jb
mov
je
test
ins
mov
(bad)
sar
sub
sub
iret
dec
mov
cmp
sub
add
seta
sar
adc
rcr
pop
lea
cmp
lock
icebp
mov
pop
jns
sti
pop
retf
mov
(bad)
pushf
fnstcw
push
imul
clc
push
push
fiadd
(bad)
cmps
push
fistp
rcl
in
test
cmps
lahf
in
jg
stos
pop
out
int3
out
sbb
dec
cld
cwde
div
xor
cmp
call
stc
sbb
je
push
jae
mov
out
pop
add
gs
inc
cmps
push
imul
xchg
icebp
mov
(bad)
or
aad
adc
jmp
(bad)
(bad)
ins
fnstsw
and
mov
mov
lods
mov
aam
xchg
loop
retf
imul
jg
out
sbb
fstp
cld
xchg
inc
mov
sub
hlt
loope
mov
ror
xor
jl
and
loope
xor
in
gs
icebp
in
je
aas
lods
jp
loop
or
in
xor
inc
or
add
gs
call
lock
pop
out
inc
mov
cmovnp
add
ffree
xor
fsubr
popa
imul
inc
lahf
cld
fistp
jge
fdiv
scas
adc
mov
mov
fst
mov
aaa
les
xchg
jb
arpl
(bad)
fdivr
cmp
cdq
mov
stc
rcr
rol
daa
and
add
outs
pop
icebp
xchg
(bad)
fdivr
movs
call
(bad)
daa
mov
into
cmp
(bad)
push
iret
jmp
mov
push
or
adc
in
push
loope
pop
jge
and
lock
mov
rcr
pop
repnz
mov
mov
or
jnp
stos
enter
mov
push
fild
jnp
jecxz
nop
ret
div
cdq
pop
fsub
xchg
rol
ret
rcr
(bad)
sbb
push
pop
clc
mov
cmps
in
pusha
and
neg
fcom
lock
pop
sbb
cmp
lahf
xlat
inc
sar
or
inc
ror
xchg
and
sub
mov
pop
cs
imul
and
imul
addr16
mov
(bad)
loopne
xchg
dec
or
or
mov
inc
js
inc
mov
push
in
jne
dec
sbb
sbb
out
push
sub
loope
retf
sub
jmp
inc
mov
in
push
ins
scas
fwait
popa
bound
or
xchg
jge
push
lahf
jmp
push
(bad)
mov
test
xchg
(bad)
add
sub
xor
clc
inc
push
inc
iret
lods
gs
loope
out
jnp
rcr
out
sbb
pop
icebp
adc
jns
jecxz
inc
xchg
lea
js
cmps
movs
out
fcom
cmp
add
je
sbb
mov
rcr
push
jno
mov
imul
sar
xchg
test
mov
xchg
movs
and
push
mov
push
sub
xlat
(bad)
int
out
mov
call
mov
sbb
mov
pop
pop
xchg
ins
mov
mov
pop
sub
bound
test
push
xchg
push
hlt
xchg
shr
jo
adc
adc
ds
retf
ins
and
pop
cmp
cmc
aas
or
pop
mov
out
jno
push
repz
lods
dec
fnstcw
cmp
(bad)
pop
push
inc
inc
add
push
test
dec
mov
test
sub
popa
xchg
imul
fistp
and
mov
mov
xor
jmp
adc
fwait
add
ins
xlat
mov
dec
scas
jmp
mov
into
mov
dec
pop
ret
push
mov
mov
jnp
add
test
xlat
js
into
pusha
xor
sahf
push
pop
repz
fisttp
mov
mov
mov
test
cmp
xchg
or
cli
jp
(bad)
sbb
push
stc
popf
fisubr
btc
(bad)
jmp
or
cmps
fcomp
outs
lock
mov
test
out
mov
and
fimul
movs
pop
je
jg
mov
icebp
add
mov
cmp
imul
xor
(bad)
push
xchg
sub
cwde
nop
in
shl
stos
aam
cmps
(bad)
or
and
mov
pop
ins
test
call
or
dec
shr
jne
xor
in
out
rol
in
xor
dec
out
fxch
test
sub
xcrypt-ctr
cmps
fwait
inc
mov
xchg
jp
push
pop
imul
dec
jmp
add
out
cmp
or
jecxz
in
or
les
std
out
cmp
xor
pop
ja
pop
mov
mov
sub
jb
(bad)
int
cld
packuswb
jmp
shl
(bad)
jg
mov
rcl
or
mov
test
jae
or
push
(bad)
sbb
inc
dec
cmp
xor
test
addr16
imul
outs
or
mov
push
or
test
jb
lods
cmp
inc
ficomp
lods
mov
push
jo
int3
mul
outs
push
sub
cmp
mov
dec
ins
and
cs
sbb
in
pause
cmc
lods
loope
push
sub
cli
dec
inc
aad
mov
mov
push
push
xchg
mov
leave
sub
je
fadd
shr
cmps
dec
sub
mov
mov
jae
cmp
dec
fwait
mov
adc
xchg
dec
cmc
add
xchg
cmp
xchg
in
aad
pop
push
inc
out
mov
mov
retf
push
jle
lds
out
cwde
adc
adc
mov
out
or
js
cli
cmps
push
std
dec
dec
pandn
sub
jnp
jae
sbb
or
cwde
(bad)
cmp
and
pusha
cwde
mov
test
mov
out
dec
hlt
pop
add
je
xchg
test
out
pop
fiadd
loop
cmp
retf
sub
popa
sub
aam
sti
in
xor
inc
inc
sbb
(bad)
je
mov
jmp
adc
dec
aas
vmread
mov
fiadd
retf
pop
jbe
dec
push
sahf
or
fbld
shl
ficom
jmp
(bad)
pop
lock
jnp
mov
mov
sar
(bad)
pop
jge
jnp
or
ins
inc
pop
test
rcr
jae
(bad)
jb
and
push
mov
push
pop
mov
add
pop
jne
(bad)
cs
dec
dec
jno
mov
xchg
aam
dec
(bad)
adc
cmps
sar
scas
cmps
mov
or
mov
sahf
or
cmp
xlat
call
add
gs
pusha
icebp
in
mov
imul
(bad)
arpl
not
loop
ja
sub
mov
stos
mov
pop
pusha
icebp
adc
test
test
cdq
loop
jmp
pop
push
ins
sbb
scas
xlat
int3
xor
and
lea
sub
sbb
retf
ret
jle
pop
out
add
or
and
cmp
clc
imul
call
pop
xchg
mov
mov
mov
sbb
repnz
icebp
(bad)
out
and
ds
cdq
scas
push
hlt
in
push
aam
xchg
sbb
xlat
lahf
out
out
pusha
cmp
fiadd
cmps
xor
call
and
jo
and
adc
mov
imul
xchg
inc
ror
dec
dec
fadd
or
inc
(bad)
pop
push
and
xor
xchg
repnz
sub
adc
jnp
loopne
jge
sub
push
pop
loopne
sbb
mov
xchg
inc
xor
jo
push
lods
push
out
call
mov
sub
sti
jne
out
inc
adc
jb
mov
bound
mov
js
inc
fdiv
pop
xchg
hlt
out
mov
mov
mov
std
cmp
lea
inc
push
mul
aam
pop
stos
inc
pop
pop
ret
jge
cmp
int3
and
mov
inc
mov
cdq
mov
sbb
push
mov
adc
and
pushf
nop
inc
and
stos
xchg
add
int
cmp
add
jo
xchg
loope
pand
sbb
ror
mov
push
scas
shl
inc
xchg
push
jbe
xchg
pop
outs
fstp
rcl
lds
call
mov
xlat
fisubr
imul
add
jbe
xchg
(bad)
mov
loopne
add
daa
cmp
cmp
add
push
sub
cmc
xchg
cmp
xor
enter
movs
jmp
je
xor
enter
dec
adc
out
or
ficomp
pop
outs
inc
or
stos
cli
xor
and
(bad)
clc
call
retf
cmp
jno
xor
cmps
inc
shl
mov
psllw
xchg
jecxz
cmps
std
sub
test
ds
mov
cmp
mov
dec
mov
es
dec
dec
xor
mov
cmp
das
jne
cmp
and
jle
cmp
loopne
mov
add
jecxz
nop
ret
sub
jnp
jo
lock
fsub
sbb
jle
and
cmp
cmp
mov
(bad)
dec
fist
xor
push
sbb
jmp
push
adc
xor
or
(bad)
mov
ss
(bad)
std
frstor
popf
push
mov
ret
imul
jbe
cmp
sub
push
aad
push
in
cli
popa
fcom
into
cmp
arpl
xchg
cmp
sub
movs
(bad)
lds
cmc
pusha
call
xchg
add
aaa
lds
and
push
lea
mov
push
dec
jg
(bad)
int3
lea
and
xchg
mov
mov
daa
lods
or
test
jge
jnp
or
mov
addr16
ds
mov
push
fdiv
sbb
xor
jae
push
push
adc
cmp
mov
xor
leave
mov
mov
xchg
loop
cwde
sbb
and
sbb
mov
fnstcw
inc
xlat
sbb
or
pop
adc
inc
inc
cli
fcomp
sub
mov
retf
jno
push
out
xlat
push
fcomp
inc
jne
(bad)
ins
inc
cmp
push
rcr
sahf
cld
por
dec
jmp
dec
cli
add
fs
stc
xchg
lods
shr
je
adc
repz
inc
repnz
arpl
aad
cmp
mov
ins
js
inc
sti
dec
clc
sbb
and
add
arpl
add
or
push
jmp
fldcw
lahf
push
retf
leave
ins
loop
call
(bad)
fimul
call
stc
fsubr
xchg
out
ret
add
push
call
xchg
cmp
sub
or
pusha
clc
pop
es
int
repz
or
mov
xchg
dec
stc
mov
or
add
ror
or
sub
retf
fistp
sti
test
jbe
mov
mov
push
adc
bound
sub
in
pusha
jne
add
cs
mov
pop
(bad)
cmc
mov
jecxz
dec
mov
jnp
mov
out
or
xchg
cmp
icebp
pusha
mov
je
xchg
mov
out
jp
dec
push
sub
cmp
(bad)
movs
fiadd
cdq
lods
in
pop
es
in
lahf
inc
push
call
outs
daa
mov
pop
jmp
xor
sar
loopne
mov
out
jmp
data16
adc
adc
out
mov
mov
shl
fdiv
mov
inc
xor
cmps
imul
cmps
pop
add
push
sbb
shr
clc
std
mov
xchg
pop
inc
xor
stos
movs
mov
outs
cmp
in
inc
pop
fisubr
xchg
scas
mov
sub
(bad)
jne
cmps
es
fcom
into
sub
sbb
ss
jmp
xchg
mov
imul
add
cmp
jo
jns
or
inc
inc
out
jbe
sub
dec
outs
ret
mov
mov
and
mov
cmc
push
xchg
push
cmp
push
hlt
add
bound
out
xchg
inc
pop
pop
or
mov
(bad)
leave
fmul
lods
test
inc
mov
pusha
add
fwait
xchg
mov
cmp
cmp
cmps
and
xor
mov
xchg
xor
push
cmpps
and
adc
addr16
xchg
push
in
sbb
mov
dec
pop
std
pop
aad
jae
inc
push
push
dec
(bad)
cs
adc
mov
sbb
out
scas
sbb
repnz
and
mov
and
movs
aad
jo
fmul
inc
sbb
das
sar
push
dec
jno
adc
in
sbb
jmp
call
add
sbb
pushf
pop
fdivr
add
ret
js
mov
test
mov
pop
sbb
dec
pop
add
jl
cmp
repnz
loopne
mov
je
pop
or
cli
push
sbb
js
xchg
mov
sub
jno
adc
out
xor
fsub
retf
dec
cmp
mov
mov
and
inc
add
ret
stos
repz
dec
jmp
pop
mov
sub
stc
xor
and
loop
stos
int3
jns
ins
dec
jnp
xchg
ret
jmp
out
mov
xchg
pusha
fistp
stos
inc
ficomp
daa
mov
adc
test
xor
not
(bad)
(bad)
mov
xchg
push
mov
int3
ja
sub
mov
mov
adc
iret
int3
aam
jp
mov
mov
pop
(bad)
sbb
jp
iret
loopne
(bad)
enter
pop
das
aam
pop
imul
push
push
jno
sub
adc
sahf
jp
out
(bad)
xor
enter
push
push
or
cmp
popf
and
sub
lahf
scas
ror
stos
cmp
push
pop
dec
stos
push
stc
or
xor
push
xchg
sub
pushf
jg
out
adc
xor
std
sub
inc
repnz
or
aaa
or
sub
test
mov
jno
arpl
xor
xlat
jp
add
inc
(bad)
ja
rcl
retf
or
xchg
cmp
(bad)
xchg
fild
arpl
mov
mov
pop
scas
dec
in
out
xchg
cld
shl
(bad)
xchg
(bad)
adc
or
inc
jbe
xchg
cmp
xor
rcl
cmp
out
pop
xchg
inc
js
sub
pop
push
(bad)
dec
and
and
clc
pop
mov
dec
add
mov
sub
sbb
or
mov
cmp
and
fst
sbb
pop
mov
and
js
(bad)
popa
jbe
inc
lock
xchg
cli
call
cmps
cmps
rcr
mov
sti
imul
(bad)
and
jecxz
test
in
mov
dec
lea
hlt
imul
sub
pop
cmp
push
pop
fisubr
xchg
in
push
fisub
imul
push
adc
xor
dec
push
aaa
pop
not
outs
fcmovne
jb
cld
call
mov
stos
push
inc
inc
repz
mov
fucom
(bad)
jle
pop
or
xor
dec
xchg
cmp
dec
mov
xchg
aam
test
push
arpl
jle
(bad)
jo
sahf
pop
jl
ror
mov
aad
fild
cli
pop
mov
es
add
add
and
xlat
popa
ror
cwde
and
rol
clc
cld
push
cmp
rcr
out
jmp
mov
pop
xor
dec
gs
jp
test
jmp
push
push
add
adc
or
dec
retf
inc
stos
shl
cmc
lods
and
xchg
test
push
jns
bnd
sahf
(bad)
jp
adc
ins
pusha
pop
sub
shrd
test
and
jnp
adc
and
and
(bad)
test
jge
addr16
and
sbb
je
and
pop
(bad)
gs
push
test
jl
test
test
pop
out
mov
out
xor
inc
pop
js
or
stos
mov
sti
dec
stos
pop
inc
sbb
nop
pop
inc
xchg
xchg
lods
or
ret
inc
sub
popf
sbb
and
lahf
ds
rcr
test
add
test
cld
add
inc
and
mov
jmp
ss
pop
push
jae
jle
sub
sbb
push
add
jmp
hlt
out
jns
and
and
inc
mov
dec
xchg
mov
push
adc
cmps
and
pop
dec
test
inc
mov
addr16
add
imul
inc
jno
loop
sub
inc
xchg
stos
pcmpeqd
cmp
pop
retf
movs
xchg
inc
push
mov
call
inc
das
add
pushf
or
addr16
lds
jmp
mov
iret
sar
xchg
scas
into
and
fist
add
scas
sub
mov
hlt
ret
mov
push
jno
int
test
mov
dec
stc
popf
cmp
std
ss
jl
dec
cli
push
lods
test
sbb
mov
test
pop
fdivp
or
push
ret
jbe
in
xor
pop
or
jnp
push
push
jmp
push
scas
sub
bound
inc
data16
daa
psubusw
jl
push
jp
enter
cwde
ret
sub
adc
push
mov
or
pop
mov
mov
mov
(bad)
(bad)
aas
sub
add
(bad)
js
push
repz
or
pop
retf
dec
int3
iret
mov
dec
adc
mov
aaa
nop
imul
xchg
ret
mov
mov
add
popf
add
add
stc
mov
(bad)
or
neg
sbb
ret
add
push
xor
jo
int
(bad)
leave
push
inc
pop
mov
iret
stc
pop
push
call
pop
cli
jle
or
fistp
jmp
shl
test
dec
int
std
jo
inc
pop
cmp
add
xchg
aam
cdq
lock
or
add
das
or
sub
shl
cli
pop
adc
dec
or
sbb
loopne
out
out
mov
mov
mov
jno
(bad)
shl
add
mov
mov
out
cmps
call
scas
pushf
jnp
and
movntps
pop
ret
out
pop
call
pop
jle
scas
add
jo
leave
jns
addr16
jnp
dec
and
and
cmp
adc
jle
loop
out
mov
cmc
add
pop
pop
xor
mov
hlt
les
aam
adc
mov
jmp
pop
pop
ins
mov
cmp
out
and
cmp
test
dec
or
in
aad
neg
bnd
mov
push
mov
sar
mov
pop
(bad)
push
les
push
dec
push
popa
jnp
pop
sub
stos
mov
push
add
pusha
arpl
sub
fcmovbe
xor
stos
sbb
ja
or
(bad)
xor
push
inc
sbb
scas
sub
inc
jmp
xchg
dec
loopne
push
push
imul
jg
rol
lea
loop
aaa
push
sti
into
push
dec
movs
rcl
inc
or
push
dec
sub
mov
data16
push
ja
loope
push
hlt
repnz
stos
add
(bad)
dec
jnp
xchg
mov
and
stc
ds
ds
call
pop
mov
pusha
and
in
fisubr
ficom
nop
push
adc
dec
mov
jle
mov
pop
fst
push
jno
pop
push
inc
push
loopne
xor
push
xlat
mov
push
ret
nop
mov
mov
in
mov
ds
mov
lds
ret
les
cmp
adc
xchg
mov
pop
jl
je
inc
cmp
fcomip
jno
add
add
sbb
sbb
push
jmp
mov
lods
mov
loop
das
std
fwait
loop
imul
(bad)
pop
int3
in
cmp
or
js
jg
cmp
lods
sahf
dec
aaa
mov
or
mov
jne
dec
psllw
call
xchg
xchg
enter
movs
jg
(bad)
pop
adc
daa
cmps
scas
add
int
cdq
xor
mov
ret
xlat
in
in
jno
xchg
lock
sti
jne
or
or
xor
dec
lods
mov
xchg
ja
jbe
sub
scas
mov
lods
clc
jnp
mov
inc
push
ficom
out
fnsave
repnz
and
lock
jecxz
in
mov
inc
push
jge
pop
pop
or
fistp
inc
arpl
add
push
icebp
inc
mov
daa
push
and
rcr
jmp
jg
lds
pop
push
jb
sub
pushf
dec
in
mov
xchg
sub
test
mov
dec
push
ror
imul
loop
int3
data16
mov
adc
cld
or
jp
mov
add
into
push
ret
sub
ja
popf
mov
cdq
mov
push
push
xor
test
leave
inc
sbb
cmp
add
mov
aam
cmps
add
jle
retf
(bad)
jmp
icebp
popf
mov
add
aas
je
xrelease
lods
mov
retf
outs
lods
mov
cs
push
xchg
daa
xchg
xor
js
fisubr
sbb
adc
imul
cmp
out
pop
sub
sub
out
dec
xor
enter
lahf
push
fbstp
daa
and
lods
xchg
mov
ret
mov
in
aam
cli
jns
sbb
pop
pushf
xlat
mov
dec
inc
add
or
pushf
pop
jns
xchg
test
push
and
enter
rcl
cmp
pop
js
pop
dec
pushf
jno
push
(bad)
pop
retf
rol
dec
lahf
or
inc
movs
loop
out
push
fbld
mov
jg
(bad)
js
iret
mov
dec
pop
xchg
xor
mul
jge
xchg
xchg
pushf
cmp
dec
adc
daa
(bad)
cmps
repz
cld
adc
mov
pop
push
push
movs
loopne
pop
inc
jb
lahf
jmp
mov
sub
enter
mov
and
xchg
imul
cmps
aad
sub
add
jns
loope
mov
mov
inc
imul
dec
cmps
mov
pop
call
int3
lods
cmp
adc
xor
fstp
and
cs
rcl
(bad)
aaa
cmps
aaa
adc
inc
aas
fdivr
add
ret
mov
(bad)
movs
push
jmp
jbe
xor
mov
pop
in
imul
sti
shl
mov
inc
dec
outs
call
xchg
sbb
dec
jge
inc
mov
mov
lods
test
jl
xor
xchg
loope
add
jb
sbb
ret
jnp
xor
pop
aam
test
fmul
jecxz
cli
aas
or
dec
adc
(bad)
push
and
mov
repz
into
in
adc
out
sub
and
inc
cwde
mov
daa
mov
repz
add
mov
shl
popf
test
cs
mov
js
mov
adc
ror
inc
aas
jmp
jb
jmp
or
seto
dec
leave
mov
imul
xor
xor
mov
push
pusha
fcmovne
xchg
or
mov
loop
dec
fstp
adc
cwde
popf
xchg
push
mov
rcr
inc
adc
into
inc
sbb
lods
clc
mov
and
inc
movs
jg
or
cmp
push
sbb
dec
mov
dec
ins
sbb
(bad)
push
sbb
lods
mov
dec
dec
cli
push
pop
sub
pop
popa
mov
push
mov
ins
and
fsub
aam
sbb
pop
leave
jbe
gs
mov
loopne
mov
pop
pop
in
cmc
cmp
es
ret
xor
add
movs
sub
xchg
call
adc
mov
test
int3
std
maskmovq
neg
pop
jo
lea
adc
clc
push
mov
std
or
in
cmc
pop
push
cwde
ins
pop
mov
jp
enter
call
jnp
lahf
test
xchg
rcr
jmp
popf
ret
adc
mov
mov
push
cmp
push
pop
in
fsub
pusha
sbb
mov
fistp
push
or
push
ret
loope
sub
addr16
push
call
or
dec
jp
daa
lods
xor
mov
jg
mov
popa
xchg
xchg
enter
cmc
xor
aad
pop
loopne
sub
fidivr
test
fs
ss
sub
scas
jns
loopne
aam
xchg
xchg
lods
and
pop
sub
adc
ret
fcmovne
push
arpl
mov
cmp
sti
or
lods
aad
or
or
mov
mov
daa
mov
daa
shr
xchg
push
shr
pop
stc
pop
dec
mov
movs
int
leave
das
cmp
ja
fsub
mov
sbb
fldenv
call
mov
int
sbb
das
mov
dec
outs
fdivr
(bad)
aam
fcmovb
inc
mov
scas
or
or
arpl
imul
mov
es
daa
(bad)
inc
inc
or
jns
inc
test
adc
jb
push
pop
lock
and
mov
(bad)
js
outs
pop
jmp
retf
pop
jp
fnstsw
pop
jecxz
mov
adc
cmp
push
sar
sub
stc
xchg
sub
pop
inc
imul
push
sbb
popf
inc
cmps
test
dec
movs
cmp
and
and
(bad)
jnp
lock
test
fiadd
or
jb
add
shl
pop
cwde
cmp
cmp
loopne
adc
cmp
mov
rol
jp
mov
push
sti
lds
push
ror
lds
idiv
cmps
adc
sbb
iret
mov
in
inc
xchg
sub
imul
xchg
dec
or
aad
ret
sbb
(bad)
fnstsw
iret
out
jne
into
in
call
rol
aam
test
mul
sbb
les
pop
les
lahf
cdq
cmp
repz
jge
push
pop
movlps
cmp
das
sbb
adc
aas
xor
int
jno
inc
arpl
movs
shl
loopne
test
shl
jns
mov
xchg
mov
or
sti
aas
iret
mov
mov
push
fsub
fild
retf
xor
or
addr16
mov
fnsave
xor
xor
cmp
imul
adc
imul
lds
adc
mov
xchg
inc
lods
pop
dec
and
adc
(bad)
mov
jle
add
shl
imul
push
(bad)
jo
inc
and
and
push
or
xchg
fs
inc
pop
or
xchg
or
xchg
loope
dec
fyl2xp1
and
sub
pusha
in
in
add
jl
mov
out
push
mov
out
mov
clc
aam
sar
inc
push
outs
add
adc
jle
iret
xchg
pop
xchg
sbb
xlat
lock
inc
aam
and
cmp
add
mov
(bad)
mov
(bad)
cmps
mov
mov
movs
pop
cwde
sbb
fild
add
dec
xchg
leave
xchg
mov
in
cwde
stos
sub
adc
sbb
push
and
mov
aaa
cmp
imul
fld
dec
js
and
(bad)
out
pop
sti
cmp
cmp
mov
daa
in
dec
leave
es
fcom
imul
mov
js
jb
xchg
fcmovnb
pop
repnz
add
dec
mov
popf
ds
pop
sub
lods
pushf
out
enter
xchg
inc
mov
pop
ds
or
push
dec
not
mov
mov
pushf
js
test
add
jnp
inc
retf
xchg
test
xor
sub
push
xlat
sub
call
lock
fmul
mov
ja
mov
shr
mov
push
jecxz
ror
bound
inc
push
in
addr16
or
xchg
pop
push
xor
stos
mov
push
loope
gs
fs
imul
sub
jae
dec
jge
sub
aam
pushf
not
mov
mov
pop
std
mov
jmp
cmc
imul
loopne
add
pop
fimul
sbb
add
(bad)
dec
or
push
(bad)
daa
mov
inc
in
and
inc
cmp
daa
daa
inc
adc
mov
es
or
push
loope
scas
sub
ins
sbb
mov
add
rcr
mov
je
fist
test
in
in
sub
mov
outs
push
shl
push
xchg
out
ds
sbb
fisubr
mov
mov
adc
or
push
sub
xor
jb
jno
mov
xchg
mov
sbb
adc
xchg
xor
fidivr
pop
inc
and
dec
gs
das
pop
aad
add
loope
xchg
clc
xchg
int3
lahf
jne
add
pop
psrlw
movs
pusha
mov
adc
mov
(bad)
dec
or
mov
sub
jno
pop
xchg
dec
shl
inc
pop
std
out
xchg
adc
lods
pop
dec
dec
loop
push
stos
push
dec
push
(bad)
clc
and
arpl
aaa
mov
push
mov
sub
sub
loop
or
test
jg
sub
int3
rcl
dec
js
stc
gs
fidiv
sbb
cmc
xchg
mov
bound
loopne
push
xchg
push
call
mov
loop
cmps
sub
cmp
stc
outs
sbb
and
and
mov
mov
and
out
fstp
dec
int
adc
xor
stc
mov
lock
jmp
movs
out
inc
mov
ror
xchg
retf
outs
push
mov
cmp
aad
ja
push
pushf
xor
dec
or
loopne
push
add
jns
mov
add
pushf
daa
sub
pop
fs
ins
mov
and
mov
jecxz
cmp
dec
adc
push
pop
out
pop
pop
sub
cwde
(bad)
mov
sbb
test
jns
sub
push
mov
cmp
mov
cs
mov
jle
push
mov
xchg
sub
xor
leave
in
shl
fidivr
jmp
(bad)
ss
mov
shr
mov
pop
(bad)
lahf
in
dec
mov
pop
sahf
sahf
bnd
and
xchg
outs
or
fs
out
push
js
mov
push
je
or
mul
aaa
push
ret
push
pop
pop
xchg
inc
dec
addr16
add
jl
popf
inc
mov
jl
jne
pop
scas
pop
xor
xor
xor
fcomp
cmp
xchg
push
mov
leave
mov
cwde
jmp
in
cmp
ret
mov
es
and
mov
gs
inc
push
mov
mov
pop
jle
fisttp
out
jle
scas
xor
mov
ja
adc
cwde
cmp
leave
inc
je
mov
mov
in
push
jmp
pop
icebp
daa
addr16
clc
jo
xlat
mov
(bad)
repnz
cwde
push
arpl
(bad)
xor
hlt
outs
cwde
(bad)
stc
stc
or
cdq
xchg
sub
aaa
out
popa
out
stos
in
mov
out
pop
jmp
scas
or
(bad)
push
clc
cmp
adc
pop
cmp
jmp
jp
call
test
xchg
rol
pushf
stos
xchg
fdivrp
jmp
push
stos
mov
and
movs
mov
mov
xchg
(bad)
pop
cmp
sti
inc
cwde
pop
inc
je
jmp
cdq
scas
jmp
in
cs
jo
popf
cmps
dec
shr
stc
cmps
and
stos
mov
fisubr
and
inc
add
std
sar
test
call
dec
pop
mov
(bad)
jmp
movs
ja
xchg
shl
int
test
popa
dec
jne
icebp
imul
ins
sub
inc
nop
mov
(bad)
std
fidiv
cmp
arpl
inc
mov
scas
xchg
dec
push
pop
retf
ins
push
rcr
imul
in
mov
retf
movs
mov
sub
hlt
jb
fcomp
cmp
mov
les
popf
sbb
aam
inc
add
mov
pop
fiadd
fxch
push
loop
por
inc
in
sub
idiv
in
mov
jne
cmp
mov
push
arpl
ret
dec
adc
pop
fldcw
aam
fisub
outs
inc
call
inc
test
add
xchg
mov
arpl
jecxz
xchg
leave
sub
fistp
and
or
or
and
xchg
shl
popf
jmp
pop
sub
xchg
xor
xor
mov
sub
les
xchg
out
push
xchg
adc
fcom
sbb
xchg
in
ins
mov
xor
stos
jnp
movs
pop
fst
jmp
push
scas
outs
loope
ds
fnstcw
jne
jne
bnd
out
push
out
(bad)
hlt
dec
aas
(bad)
mov
cmp
sbb
(bad)
fs
imul
sub
sbb
xor
fld
jle
(bad)
mov
add
jmp
inc
mov
inc
dec
or
popf
out
cmp
hlt
jae
ss
in
add
mov
jmp
xchg
enter
and
xor
push
sub
adc
leave
jmp
jbe
cs
add
ret
or
cmp
jge
add
add
nop
add
ins
gs
inc
adc
std
stc
adc
cwde
mov
pop
push
call
adc
sbb
shl
test
adc
outs
loop
loop
loop
popf
mov
xchg
sub
add
stos
stos
aam
add
mov
shl
out
ins
jmp
dec
movs
lahf
lods
sub
dec
stos
or
popa
imul
hlt
mov
pop
inc
(bad)
inc
jecxz
scas
test
cld
and
gs
dec
mov
data16
icebp
sbb
pusha
fwait
repz
inc
cmp
push
inc
lods
dec
mov
fs
repnz
push
adc
mov
in
call
sar
mov
call
mov
push
jle
inc
shl
sbb
(bad)
rcr
out
sub
(bad)
out
xchg
ins
loop
cli
rol
jne
fwait
xchg
pop
pop
sar
retf
in
sbb
adc
repnz
pop
mov
ja
xchg
test
or
aas
js
mov
(bad)
loope
sbb
mov
mov
and
call
test
lods
jge
aam
imul
out
in
scas
dec
cmp
jg
dec
ds
loopne
cwde
xchg
or
mov
sub
(bad)
mov
dec
xchg
jae
xchg
das
cmp
rcl
or
add
lods
xchg
jmp
aam
jno
sahf
setno
stos
arpl
fistp
push
jo
imul
ss
mov
mov
add
je
cld
test
jge
dec
(bad)
out
ret
pop
aam
jno
scas
and
movs
mov
or
pop
lea
cmps
add
(bad)
pop
cld
int3
cwde
add
mov
lods
xchg
pop
xor
dec
sti
dec
pop
rcr
fcomp
mov
scas
add
or
sbb
jo
lahf
lds
outs
jmp
and
fld
pop
out
xchg
movs
jl
out
push
push
mov
loopne
retf
test
xchg
arpl
aam
jle
(bad)
enter
retf
mov
sbb
mov
cmp
fwait
cmp
int
mov
jmp
cmp
outs
sbb
mov
sub
(bad)
rcl
xchg
fcmovnbe
mov
pop
mov
pop
(bad)
enter
popf
outs
pop
mov
fs
sbb
loop
das
dec
mov
dec
mov
fidiv
push
rol
fmul
sub
and
shl
or
ficom
mov
mov
cmc
sahf
fadd
dec
retf
jmp
lds
out
lds
xchg
loope
mov
gs
push
fmul
or
cmp
jmp
out
jb
cmps
jge
add
push
repz
cmp
scas
fwait
stc
rcl
mov
jb
pop
xor
mov
fst
stc
sbb
sbb
jge
bound
push
movs
and
icebp
cli
xchg
add
out
dec
jmp
push
and
ja
mov
std
shl
(bad)
mov
mov
mov
push
mov
aas
test
fstp
div
jns
dec
sbb
sbb
xchg
fild
xchg
loope
jo
repz
sub
push
mov
xor
inc
inc
jge
sbb
or
outs
cmps
ja
bound
ret
in
into
les
bound
add
daa
in
stos
lock
or
and
cdq
cmc
or
fidivr
int3
int3
int3
mov
cmp
fiadd
fistp
ficomp
mov
mov
shl
mov
lds
mov
inc
mov
inc
inc
xchg
(bad)
movs
call
ja
sub
shr
xor
lods
(bad)
(bad)
mov
pop
pop
mov
data16
pop
shr
ins
sbb
push
mov
pop
fimul
xchg
jo
sub
repz
es
dec
dec
sbb
dec
mov
cmp
loop
mov
not
lahf
lahf
aam
push
aaa
dec
pop
gs
(bad)
cmp
loop
ret
je
cmps
cmc
and
cmp
push
les
add
movs
mov
les
sub
push
sbb
sti
jp
retf
or
jo
sbb
test
sub
cmp
inc
push
repz
jb
(bad)
and
out
mov
fadd
pop
mov
out
xchg
cmc
mov
adc
fnstsw
sti
(bad)
mov
div
stc
sub
pushf
xchg
lea
retf
cmc
sbb
inc
push
push
test
push
pop
nop
call
and
int3
fimul
pop
outs
mov
push
leave
inc
and
ss
aaa
mov
add
movs
data16
dec
call
test
jle
(bad)
rcl
add
aam
sahf
cmp
rcr
push
xchg
xor
(bad)
mov
sub
ficomp
enter
xor
and
fscale
xchg
inc
loopne
movs
pushf
pop
and
mov
dec
and
(bad)
jnp
in
and
fidiv
icebp
jge
pop
inc
jg
icebp
adc
nop
outs
test
(bad)
mov
in
add
out
cmovg
div
xor
jg
jle
pushf
push
cmp
sti
jmp
mov
fst
jb
(bad)
jecxz
mov
fwait
cmp
popa
repz
dec
test
add
call
loope
rcr
add
mov
push
adc
rcl
sbb
fsubp
(bad)
cmc
push
fcmovnb
xchg
xor
push
les
mov
push
movs
jnp
cli
(bad)
sub
cmp
push
mov
mov
rol
inc
pop
mov
retf
jecxz
sub
jae
fs
mov
(bad)
std
sahf
ficomp
add
cdq
and
imul
daa
les
fimul
sub
jnp
cmps
push
mov
pop
popa
cmps
test
adc
es
push
mov
pop
xchg
dec
xor
lahf
ror
lods
inc
cmp
push
xchg
not
xor
shr
inc
xor
test
pop
pop
and
retf
cmp
pcmpgtb
test
ins
or
mov
mov
dec
in
inc
mov
jnp
push
sti
cmovge
(bad)
pop
mov
push
sbb
mov
xchg
ds
xchg
fsubr
cwde
mov
pop
cld
lsl
(bad)
push
sbb
in
sub
ins
sbb
add
mov
adc
sar
loop
loope
push
fld
xor
dec
add
xlat
bound
shr
jne
stos
sahf
jbe
pushf
or
mov
adc
je
iret
push
and
scas
test
dec
dec
repz
in
or
shl
and
cmp
pop
sbb
dec
inc
jg
inc
popa
push
xchg
mov
out
add
xchg
pop
movs
sub
mov
out
xchg
cwde
jmp
mov
xchg
fsub
or
scas
pop
inc
mov
sbb
pop
cdq
mov
test
xchg
movs
mov
mov
popa
xchg
and
push
test
sbb
(bad)
fidiv
call
aaa
adc
jnp
sub
push
cmp
aam
xchg
loopne
in
sub
cdq
nop
cmp
jns
xchg
sbb
std
push
xchg
outs
inc
pusha
out
pop
aam
data16
dec
and
xchg
ret
adc
cmp
ins
mov
(bad)
adc
ret
or
pop
sbb
jmp
(bad)
popf
xchg
xchg
mov
mov
xchg
sbb
cmp
shl
mov
loopne
dec
scas
xchg
std
and
test
mov
mov
movs
fsub
out
gs
add
aas
repnz
imul
imul
sbb
ss
sbb
push
and
jae
cli
pop
or
lods
xor
cmp
cmps
test
sbb
or
mov
xchg
loope
inc
jo
xchg
pop
ins
addr16
lock
or
jbe
pop
mov
aaa
cmps
repz
outs
call
arpl
sbb
rcr
or
mov
mov
add
in
bound
jb
jg
rol
jp
mov
int3
cmc
push
mov
jecxz
call
mov
call
lahf
lds
cdq
push
fst
bound
xchg
adc
repnz
mov
imul
add
or
mov
stos
fwait
cld
mov
jno
xlat
inc
dec
aas
int3
push
jmp
ss
fidiv
loope
retf
shr
mov
test
movs
test
inc
mov
call
sub
(bad)
ss
pop
inc
mov
xor
push
js
sbb
outs
dec
mov
xor
add
pop
lea
sbb
adc
std
fcmovnb
mov
gs
arpl
xlat
fst
dec
bound
jle
pushf
stc
cmp
push
repz
sub
and
xor
ss
mov
and
add
push
sub
cwde
dec
sbb
out
or
cmc
xlat
sub
sub
xor
das
and
js
jmp
xchg
mov
in
shl
add
rcr
adc
jne
push
icebp
pop
sub
sahf
and
popa
ds
mov
nop
jle
inc
jnp
jp
inc
repnz
sub
cmp
cmc
cmps
fcmovu
adc
int
es
inc
(bad)
stos
popf
pop
push
stos
not
fs
mov
ja
mov
jp
mov
or
icebp
(bad)
mov
push
das
cmp
mov
cmp
add
popf
ficomp
sub
pop
inc
jmp
js
mov
call
mov
and
ret
xchg
and
adc
and
inc
jge
aad
add
mov
push
inc
jns
aaa
add
out
jo
mov
xor
ret
jmp
not
xor
and
pop
rcr
enter
adc
jno
xchg
in
cdq
sub
jle
ins
je
dec
adc
xlat
stos
pop
pop
nop
scas
push
push
fldenv
in
shl
mov
das
mov
add
mov
int
(bad)
icebp
jbe
enter
pop
fnstenv
js
jbe
dec
test
repz
adc
dec
or
aas
cmps
out
cwde
or
mov
lods
pop
pop
js
mov
or
mov
inc
test
(bad)
jecxz
push
cmp
xlat
jg
pop
sub
div
mov
and
bound
sar
cmp
xchg
sbb
aaa
adc
mov
mov
ret
retf
pop
ins
(bad)
cmp
jb
outs
in
inc
addr16
jmp
sbb
movs
pushf
std
les
mov
xor
add
ret
xor
xchg
xchg
or
jl
cdq
es
ror
scas
sub
add
scas
jo
pop
in
out
test
aaa
cld
fidiv
lock
retf
das
fld
neg
mov
mov
xor
push
mov
je
xchg
call
fisttp
jge
jae
das
movs
push
loopne
popf
repnz
pop
sbb
adc
repnz
das
xchg
lea
test
daa
add
and
dec
pop
enter
push
mov
jl
xchg
xor
xor
leave
pusha
jmp
fnstenv
loope
mov
push
cs
push
(bad)
sti
xchg
shr
mov
cmp
cmp
jmp
sub
call
jmp
fcmovbe
nop
push
pushf
mov
les
xor
movs
imul
data16
jne
icebp
movs
mov
pop
test
pop
mov
cmp
ins
jbe
aas
out
loope
inc
sub
aam
push
psubusw
inc
fs
dec
stos
les
xor
add
and
add
shl
jmp
pop
sub
test
jmp
pop
dec
cs
in
sbb
or
jo
jp
ja
in
sbb
popf
sbb
dec
js
les
or
iret
xor
in
and
mov
ins
test
ja
push
aaa
inc
lods
pop
jns
rol
pop
jge
stc
pop
or
outs
xchg
daa
(bad)
fimul
jbe
nop
mov
mov
out
rcl
es
xor
cmp
push
leave
jnp
movs
pop
nop
not
fimul
dec
dec
or
pop
xor
push
jo
pop
mov
test
jno
daa
dec
imul
in
dec
xchg
cli
pop
icebp
shr
in
adc
add
cmp
inc
mov
jle
cmps
push
mov
cmp
inc
cwde
xor
push
mov
mov
lods
loop
inc
(bad)
dec
pop
lods
fs
outs
imul
rcl
pop
sub
xor
and
mov
dec
ficomp
jo
lods
xor
ds
push
xlat
hlt
ins
sbb
rep
leave
jmp
(bad)
and
fidivr
es
add
cmc
cmp
test
test
xchg
mov
mov
adc
jp
adc
mov
sbb
mov
or
popf
int3
(bad)
jb
nop
xchg
movs
sub
add
fisttp
push
repz
jb
je
cli
inc
fcomp
hlt
sub
pusha
push
fiadd
inc
push
(bad)
cmp
pop
in
jae
push
mov
mov
aas
add
xor
icebp
mov
sbb
pop
dec
cmc
push
mov
xor
into
stos
cmp
aad
scas
jne
jbe
mov
fnstcw
out
jns
cmc
mov
fstp
dec
or
icebp
scas
xchg
cmp
js
push
xchg
pop
test
jno
jne
pop
fstp
mov
les
ins
div
bnd
cs
fiadd
bound
jne
xchg
mov
lods
dec
mov
rcr
les
cmp
test
jge
dec
push
retf
outs
imul
sbb
mov
add
jmp
jmp
loope
jns
or
adc
pop
lods
jns
push
push
dec
test
popa
xchg
mov
xchg
loope
pop
pushf
test
push
pop
mov
fdiv
dec
dec
xor
mov
shr
jns
popf
dec
cmp
loope
adc
das
ret
adc
test
fmul
test
xor
xchg
clc
mov
ds
repnz
or
ins
iret
push
je
mov
pop
pop
scas
cdq
push
fcom
ds
fadd
mov
(bad)
shr
leave
inc
imul
mov
cmp
jge
xlat
movs
mov
cmp
sti
adc
(bad)
jbe
shr
mov
mov
mov
aaa
div
outs
in
pushf
enter
out
outs
or
scas
cmp
(bad)
ds
inc
push
jnp
push
jbe
std
out
jmp
push
push
mov
pop
stc
sbb
loopne
fst
retf
loopne
adc
loop
xchg
xor
iret
movd
mov
jmp
mov
xor
cwde
ds
test
and
daa
addr16
and
mov
add
push
ret
dec
pop
leave
pop
push
shl
loope
sar
ins
and
mov
cmp
mov
inc
sub
aam
xchg
cmps
in
mov
or
jo
scas
gs
jecxz
mov
stos
mov
in
pop
ror
imul
into
mov
push
push
jge
in
adc
sub
dec
mov
mov
ud1
adc
inc
call
xlat
sbb
in
mov
lds
sub
(bad)
cdq
cli
xchg
in
mov
cld
movs
adc
sub
(bad)
jmp
dec
(bad)
out
pop
jp
dec
push
dec
iret
cmp
dec
shl
jne
sbb
inc
ds
adc
pop
sub
stos
and
cmp
loopne
push
cmp
xor
xchg
lahf
mov
mul
out
enter
movs
sar
outs
and
enter
inc
mov
cmps
sbb
sbb
xor
neg
push
cmp
shr
jns
add
pop
std
pop
(bad)
jae
dec
std
ds
pop
push
xor
aam
jnp
inc
into
icebp
movs
cmps
(bad)
mov
fld1
or
xchg
in
pop
push
retf
add
xchg
inc
out
imul
push
adc
inc
fcom
xor
jl
jle
jecxz
(bad)
je
cmp
push
mov
pop
jecxz
les
mov
push
pop
mov
xchg
add
sbb
sbb
push
addr16
(bad)
ja
test
push
cld
jno
inc
(bad)
pop
cmc
jmp
push
lods
xchg
mov
jmp
mov
mov
and
push
jmp
fdivrp
ins
addr16
popa
out
mov
in
adc
in
cmp
pop
cmp
mov
sub
lods
in
xchg
sbb
add
fs
dec
pusha
jne
adc
test
xor
daa
jae
(bad)
jmp
fwait
jg
or
add
cmp
mov
in
xchg
mov
stc
inc
jmp
dec
mov
sub
lods
lock
out
mov
mov
and
fist
pop
rcl
das
add
fstp
retf
lods
aam
dec
ss
imul
jae
jl
jns
pop
adc
inc
cmp
fst
cmp
pop
add
inc
arpl
pop
dec
std
mov
into
loope
arpl
and
xlat
cs
popf
inc
adc
pop
jmp
xor
lahf
mov
pusha
fld
inc
in
or
mov
push
push
mov
imul
(bad)
fs
add
retf
sbb
xor
add
jmp
int3
xor
das
shl
mov
scas
inc
(bad)
(bad)
das
pop
pop
addr16
mov
mov
es
jmp
repz
cmc
cmp
sbb
and
inc
cmps
pop
out
in
(bad)
cmc
call
xchg
fdivr
stos
sahf
sbb
or
addr16
aaa
lock
push
xor
mov
scas
inc
ins
xor
ins
inc
fisub
cmp
pop
aam
lahf
aad
movs
js
sti
push
ins
and
jl
cmps
adc
pop
pop
or
xor
and
scas
stos
jbe
in
pop
pop
cmp
or
test
push
push
pushf
mov
pop
add
jb
pop
call
cmps
mov
scas
and
test
push
cld
push
mov
dec
repnz
xchg
(bad)
loopne
and
xchg
jl
dec
cmp
xchg
retf
inc
add
push
pop
inc
imul
clc
test
rol
push
xchg
call
cmps
mov
jb
mov
push
test
jno
mov
adc
sub
jne
add
stos
sbb
mov
pop
jle
cmp
and
fwait
pushf
retf
mov
dec
aam
sub
scas
fs
mov
out
and
mov
stos
scas
mov
xor
xchg
and
test
ja
inc
sub
xchg
jecxz
xor
call
push
test
scas
push
lahf
inc
mov
repnz
and
pushf
lea
ins
jb
and
mov
mov
push
cli
dec
pusha
stos
mov
sbb
shl
shl
mov
(bad)
add
sub
ja
stc
stos
mov
repnz
xor
inc
xor
stos
push
add
ds
xchg
xabort
sti
mov
mov
jne
icebp
push
leave
gs
stos
jle
or
mov
ja
cmp
adc
cld
das
or
dec
push
mov
push
(bad)
cld
or
pop
pop
in
(bad)
(bad)
mov
lahf
sbb
mov
sub
daa
es
(bad)
inc
mov
inc
or
in
mov
call
lock
(bad)
iret
or
inc
test
aam
ins
xchg
pop
push
nop
loop
cmps
xchg
pop
lea
in
icebp
inc
js
xchg
dec
pop
dec
add
(bad)
(bad)
ss
cmp
shl
add
dec
fwait
in
pop
pop
popf
push
cli
(bad)
and
out
adc
into
iret
cwde
add
icebp
lds
xor
cmp
jb
jp
push
mov
or
push
es
xchg
push
lock
xor
fcomp
cmp
ja
push
call
repnz
lea
or
inc
inc
jns
mov
(bad)
aad
in
stos
jne
call
adc
ficom
stos
mov
pop
add
or
push
inc
cmp
lods
mov
dec
call
xchg
inc
mov
retf
mov
jne
scas
sbb
shl
sbb
fwait
cmp
into
dec
pushf
mul
mov
jns
push
int3
(bad)
nop
loop
mov
stos
(bad)
or
pop
ds
add
xor
and
(bad)
cli
fldcw
dec
jle
or
dec
dec
loopne
iret
jl
mov
push
push
add
mov
rol
or
sub
xchg
sub
mov
shl
ins
lahf
dec
out
xor
push
or
mov
inc
mov
pusha
sahf
mov
pop
fistp
mov
in
adc
sub
test
clc
mov
or
pop
jecxz
mov
into
ja
nop
mov
rcl
inc
aam
sbb
leave
and
jge
aam
dec
xchg
call
scas
inc
outs
xchg
(bad)
leave
mov
pop
(bad)
cmp
fstp
dec
bnd
cmp
sbb
pop
fcomp
dec
jb
inc
mov
jne
rol
movs
scas
add
or
loope
jb
out
cmc
lods
push
jmp
mov
pop
add
movs
cmp
int3
xchg
ds
push
cmp
mov
push
test
mov
push
jo
lahf
xchg
pop
aas
cmp
jg
aaa
xchg
or
sbb
jmp
add
shl
inc
dec
(bad)
ficomp
jae
int3
mov
xchg
jne
add
ins
cmc
lods
pop
fucomi
js
popf
pop
xchg
sbb
and
fs
mov
xor
jne
inc
xor
cmc
out
sbb
sbb
leave
jo
in
fistp
test
add
push
or
mov
(bad)
sbb
fwait
cmp
dec
fnop
jp
xchg
push
sahf
xor
pop
jecxz
imul
retf
cli
jmp
in
jmp
cmovg
popf
dec
in
movs
out
hlt
ins
pop
add
push
jmp
nop
inc
(bad)
in
cdq
ds
jle
bound
jo
scas
stos
out
add
and
cmps
cmp
repnz
ret
rcr
jp
push
popf
int
dec
std
sub
xor
add
or
imul
test
daa
push
pop
loopne
call
pop
inc
xlat
and
fsubr
push
mov
rol
dec
mov
push
fist
push
call
mov
dec
xchg
mov
mov
std
xor
jnp
lods
clc
mov
sbb
dec
dec
mov
xchg
sbb
sbb
sub
add
pop
pop
sbb
mov
in
sbb
or
mov
push
cmovne
xor
jl
and
jle
arpl
xchg
(bad)
mov
pop
aad
aaa
repz
enter
xor
mov
push
ret
push
std
dec
jle
add
mov
ins
iret
mov
and
inc
stc
shl
push
and
sti
sub
movs
inc
stos
xchg
out
loop
mov
lds
mov
jbe
pushf
in
fbstp
mov
adc
mov
xchg
jae
lock
nop
cmps
jl
pop
add
data16
jno
inc
mov
sub
arpl
fidivr
cmp
lea
in
in
push
shr
adc
cmps
push
repz
jmp
or
clc
or
pop
ins
xlat
sub
int3
imul
adc
mov
mov
outs
or
add
cdq
inc
nop
mov
loop
adc
outs
mov
ror
mov
xchg
inc
stc
or
or
das
inc
and
jno
and
test
push
lock
and
jns
fsub
mov
push
dec
push
add
imul
cmps
int
clc
loope
call
and
push
push
sbb
mov
arpl
mov
xchg
push
call
aam
xchg
xchg
inc
jge
repnz
push
mov
sub
loopne
dec
scas
xchg
imul
adc
fadd
cmp
cmps
xor
nop
inc
ret
retf
sti
cmc
push
in
jns
imul
pop
stos
mov
stos
hlt
mov
fs
xor
and
ss
in
je
dec
xchg
mov
stos
loope
jmp
int
arpl
fs
or
xor
ins
(bad)
rcl
cwde
or
mov
clc
dec
das
data16
mov
sahf
cdq
rol
fild
pop
(bad)
retf
sub
jg
cmp
loopne
into
cld
push
cmp
adc
dec
cmpxchg
cmp
loope
shl
xchg
sub
int
inc
loopne
leave
xchg
mov
jg
imul
test
pop
vpshlw
stos
cmp
je
stos
cmp
stos
xlat
iret
add
shl
sbb
mov
das
mov
and
bound
jl
cli
into
sub
add
in
retf
idiv
xchg
mov
ja
test
pop
das
and
(bad)
aaa
in
mov
lock
repnz
pop
jns
shr
pop
ret
outs
cmps
or
loopne
fwait
rol
loopne
pop
cld
dec
repz
ds
sar
xchg
dec
xor
lahf
adc
push
jae
mov
test
(bad)
push
adc
into
repz
push
pop
rcl
(bad)
pextrw
and
mov
dec
add
lock
cs
je
mov
and
(bad)
fwait
dec
mov
in
push
icebp
mov
dec
jge
lds
pandn
or
jmp
fstp
and
xor
xor
out
lods
mov
adc
and
mov
sbb
add
or
pop
dec
imul
stos
sbb
aad
jno
xchg
enter
cmc
hlt
jg
jno
push
push
sub
call
aad
pop
loopne
xor
and
mov
add
fiadd
xchg
xor
push
mov
sti
jge
out
cmp
jne
jg
mov
stos
lahf
xchg
push
mov
mov
and
push
adc
retf
aas
dec
rcr
sbb
cli
jmp
xchg
loop
ret
fisub
movs
sub
mov
or
mov
pop
or
and
in
sbb
mov
fwait
in
(bad)
cmp
pop
add
cmp
jecxz
xchg
popf
xchg
mov
jecxz
daa
not
pop
dec
fnstcw
ficom
pop
rep
cs
fwait
push
mov
mov
mov
scas
das
stc
das
test
and
adc
mov
push
push
sub
(bad)
imul
sub
cmp
xchg
call
mov
in
push
jp
adc
je
loope
popf
mov
add
clc
mov
ds
adc
aas
mov
or
in
rcl
out
inc
loopne
stc
shl
and
jmp
push
jp
cs
cmp
jno
iret
arpl
push
sub
in
mov
push
outs
test
ret
inc
scas
les
jno
inc
loopne
sub
mov
jl
out
push
scas
test
outs
stc
xchg
cld
cmps
cmp
ret
adc
jmp
xchg
add
cld
ds
adc
call
inc
push
fs
xor
dec
adc
cmps
xchg
sbb
cmp
mov
(bad)
stc
xchg
(bad)
adc
xchg
jmp
push
mov
and
out
lods
jmp
push
iret
cld
in
pop
ins
rol
xor
mov
aaa
xlat
mov
mov
add
inc
push
mov
xchg
push
rcl
pop
xchg
xchg
repnz
aad
data16
mov
inc
push
popa
arpl
(bad)
addr16
or
or
mov
mov
loopne
stos
call
sbb
jmp
mov
add
or
fistp
jnp
mov
es
push
arpl
cs
stos
cmp
cmps
fdivr
ret
dec
gs
lods
sbb
dec
or
ja
push
out
cmps
pop
mov
ss
sub
hlt
xor
xchg
jmp
nop
iret
int
adc
nop
pause
adc
xor
sub
mov
and
sbb
stos
dec
and
mov
jnp
jo
push
retf
fcmovbe
cmp
push
dec
xor
jo
js
retf
mov
ss
rol
pop
mov
mov
stos
mov
push
pusha
sar
call
scas
mov
cs
pop
test
ins
dec
jb
or
and
xchg
scas
push
mov
cmps
out
sbb
push
pop
cld
loope
in
xchg
pop
pop
lahf
jle
jmp
add
jmp
aas
retf
jl
fidiv
movs
in
(bad)
std
movs
inc
push
ret
push
(bad)
arpl
frstor
xchg
xchg
push
(bad)
out
mov
cmc
cmps
ret
push
adc
lds
xchg
ins
test
mov
jecxz
sub
cwde
jg
pop
mov
repnz
mov
and
lds
inc
and
and
cmp
movs
inc
repz
lea
pop
add
mov
pop
jno
es
sub
add
(bad)
add
jbe
mov
fisttp
pop
(bad)
scas
outs
push
pop
movs
(bad)
mov
mov
cmp
shl
aam
je
or
out
mov
in
or
jp
int3
(bad)
cmp
mov
jle
dec
and
rol
xor
cmp
test
mov
gs
pop
pop
cmp
popf
sbb
xor
adc
pop
movntq
out
adc
jae
sar
lds
jbe
ins
stos
and
jmp
cmp
or
add
dec
movs
lods
inc
mov
cmp
jmp
mov
into
pop
aas
cmp
push
cmps
test
mov
in
fidiv
adc
sub
or
inc
lock
jmp
push
sbb
ret
arpl
sbb
test
push
imul
add
add
mov
dec
(bad)
retf
push
mov
cmp
cli
stos
inc
inc
mov
sbb
and
imul
not
aam
mov
cwde
imul
pop
aam
icebp
cmp
(bad)
pop
adc
mov
movs
mov
inc
xchg
pop
dec
jns
(bad)
mov
jg
ss
shl
push
outs
cmp
pop
cdq
aam
sub
xor
adc
xlat
loope
sbb
lock
pop
push
cli
sbb
ret
ins
push
push
stos
mov
not
sbb
or
neg
sub
(bad)
pop
pop
mov
aam
inc
push
mov
or
mov
dec
outs
aam
inc
sub
mov
clc
out
ins
cld
lods
xchg
mov
push
cli
cli
retf
rcl
loopne
inc
test
call
jmp
push
stos
in
sti
addr16
call
mov
test
scas
or
adc
xchg
xor
dec
pop
pop
pop
jecxz
out
and
(bad)
enter
(bad)
int
call
push
mov
cmp
mov
hlt
dec
icebp
mov
mov
cs
mov
sub
aad
cmp
jb
hlt
pop
aaa
push
jbe
inc
mov
xchg
push
sahf
aaa
pop
lea
(bad)
mov
adc
movs
repz
(bad)
(bad)
pop
cmp
test
adc
shl
mov
cmp
leave
or
call
stos
out
dec
inc
imul
mov
test
test
imul
loope
fcomp
jl
jb
mul
scas
xchg
das
ficomp
cmp
shl
shl
add
call
cmp
daa
xchg
and
add
ja
mov
mov
adc
xor
xor
and
stc
into
push
cmp
cmp
sbb
icebp
pop
mov
das
(bad)
dec
sbb
test
out
repz
dec
mov
lods
dec
retf
scas
xor
mov
sub
lods
and
lods
xchg
push
sar
shl
shr
icebp
outs
ins
adc
xlat
sub
jge
pop
ins
pop
aaa
inc
icebp
mov
or
fwait
sbb
je
sbb
and
mov
jmp
jbe
aam
movs
xor
pop
jbe
std
mov
dec
sub
mov
xchg
mov
push
retf
test
mov
mov
into
fisub
add
pop
push
scas
pop
out
jmp
ds
scas
sub
cmps
xchg
mov
cmp
xor
xchg
sbb
sub
in
stc
sbb
pop
fadd
std
add
add
jo
mov
sub
pushf
out
xor
pushf
clc
sub
xchg
xor
dec
and
pop
push
mov
jmp
or
pop
pop
retf
mov
cld
mov
xlat
sbb
fisub
stos
and
fbstp
ss
sub
adc
cmp
cwde
mov
fistp
dec
jecxz
add
xor
sub
cmc
pop
adc
movs
or
xchg
(bad)
cwde
mov
xchg
push
jo
pop
dec
or
iret
test
scas
aam
xchg
stc
test
push
or
cmp
shr
ins
push
and
cdq
mov
icebp
adc
outs
jmp
xchg
scas
push
sbb
mov
rcl
cmp
mov
aaa
add
call
mov
xor
sub
sar
mov
cmc
mov
mov
ins
into
call
and
or
fimul
(bad)
ins
sar
aad
imul
push
enter
pusha
xchg
sbb
or
into
mov
rol
cli
ins
sub
clc
xchg
loopne
pop
mov
out
repz
mov
sbb
ret
mov
sbb
pop
shl
pusha
(bad)
jmp
mov
cli
mov
pop
mov
in
test
lock
mov
mov
sub
iret
out
clc
mov
imul
xchg
and
enter
sti
into
xor
cmc
or
pop
outs
jbe
int
dec
cmp
add
push
fld
loope
test
and
mov
or
cmp
sahf
fsub
aaa
test
jo
ffree
add
fldcw
daa
inc
pop
int3
inc
cmp
pop
mov
and
(bad)
xor
mov
dec
(bad)
cmps
inc
ds
call
pop
pop
jne
xchg
je
std
xlat
xchg
movs
and
and
cs
xor
pop
outs
addr16
test
jg
cmp
(bad)
in
add
ja
or
lods
in
sub
stc
shl
mov
ins
jnp
lds
sbb
pusha
jmp
xor
fstp
dec
adc
pop
fidiv
sti
test
xchg
inc
fdivr
pusha
and
mov
dec
sbb
stos
call
push
xchg
out
mov
inc
push
inc
int3
lods
inc
lock
cmp
inc
cdq
cmp
add
in
shr
mov
pop
inc
ins
imul
ins
(bad)
xchg
rcl
lods
fwait
pop
es
lea
(bad)
loopne
push
mov
mov
shl
std
jne
lods
push
inc
sbb
sbb
cli
and
xchg
inc
ja
fcomp
rcr
push
push
(bad)
das
mov
(bad)
or
test
cmp
fldcw
(bad)
and
xor
not
ins
out
cmps
adc
and
mov
mov
push
mov
es
jae
jmp
lds
add
mov
mov
ret
sar
ds
mov
retf
inc
sbb
movs
mov
aam
cmc
test
test
test
push
dec
jno
mov
jne
push
cmp
and
mov
mov
leave
test
loope
shl
add
and
add
aam
retf
mov
mov
inc
ins
cmp
daa
fild
mov
out
xor
(bad)
aad
jecxz
sbb
or
lods
adc
push
sahf
push
cmp
inc
adc
xchg
push
iret
fsub
bound
in
mov
popa
test
pop
inc
xor
inc
sbb
stos
(bad)
pop
arpl
pop
call
pop
lds
pushf
retfw
lods
mov
movs
or
movs
in
sbb
mov
into
sbb
dec
pop
fsub
xchg
popa
dec
sti
out
sub
outs
sub
cld
leave
push
(bad)
data16
bound
xchg
pop
pop
(bad)
push
mov
cmp
mov
repz
sub
nop
mov
out
inc
out
or
js
fmul
sub
push
xor
sbb
dec
iret
cdq
jns
add
adc
mov
pop
in
add
jp
test
into
not
aam
bound
mov
mov
ret
sbb
jno
loop
aad
push
pop
lea
stc
pushf
push
or
(bad)
popf
dec
mov
add
push
test
inc
popa
or
aam
dec
(bad)
aam
jo
mov
loop
cmp
dec
inc
lods
mov
call
bnd
cmc
adc
adc
loope
mov
sbb
mov
loope
into
xchg
sahf
in
jecxz
cdq
sub
frstor
mov
mov
test
jns
or
out
pop
icebp
fidivr
(bad)
loopne
inc
sahf
sub
xchg
ds
sti
mov
push
xor
xchg
sub
pop
jp
iret
test
out
xor
pop
jg
xlat
in
pop
lahf
push
and
je
sub
pop
push
add
sub
daa
cmp
sbb
shr
jle
lods
mov
fidivr
jnp
(bad)
mov
test
xchg
enter
xchg
movs
xchg
dec
in
sub
in
push
aas
or
in
mov
mov
divps
out
pop
icebp
in
cmc
mov
mov
add
icebp
call
adc
jl
xchg
stos
push
stos
test
test
(bad)
in
cwde
popf
cmp
neg
stos
fcmovnbe
popa
inc
retf
sti
cdq
fs
adc
dec
xchg
std
xor
add
mov
jle
lods
or
sub
adc
fcomp
or
les
cld
mov
sub
icebp
daa
cmp
in
xor
jle
mov
jno
aas
addr16
pop
mov
push
fistp
mov
mov
je
test
std
fcomip
mov
mul
(bad)
cmp
les
(bad)
mov
sbb
std
and
adc
or
mov
outs
push
cmp
test
sub
iret
retf
in
jl
int3
sbb
fidivr
inc
xlat
mov
mov
push
mov
xchg
test
rol
pop
popf
sahf
test
and
test
push
mov
inc
sub
and
and
fwait
lods
mov
int3
push
xor
inc
repz
jns
das
sub
iret
cmp
lds
repnz
adc
push
retf
(bad)
mov
push
xchg
inc
(bad)
jae
lock
js
add
lds
jmp
adc
repz
mov
ja
mov
dec
fadd
jbe
inc
add
hlt
dec
sbb
or
sti
arpl
popf
es
jecxz
push
push
lock
jae
cmps
pop
jle
loop
push
xchg
add
scas
test
mov
mov
xchg
inc
inc
pusha
inc
mov
fisub
bnd
std
movs
push
cmp
inc
push
xchg
mov
ds
xchg
xchg
fcomp
ja
test
xor
push
aas
sub
pop
sbb
sbb
inc
in
nop
popf
push
test
or
sub
push
cmps
sub
sbb
sub
ror
mov
jecxz
outs
pop
add
mov
test
jp
mov
xor
inc
dec
and
adc
in
rcl
es
in
rol
cmp
xchg
pop
pop
push
stc
rcr
sub
ins
cmp
rol
mov
in
xchg
retf
pop
retf
dec
mov
mov
pop
mov
retf
pop
and
pop
jmp
arpl
fst
mov
je
imul
cmp
xchg
or
inc
aas
jl
movs
cmp
aam
inc
ss
sti
fbld
inc
test
(bad)
lahf
data16
hlt
ret
cmp
dec
test
rcl
xor
fistp
mov
fadd
sbb
xor
xor
mov
lods
mov
pop
daa
enter
push
rcr
in
jp
fcmove
adc
lods
aam
xor
ret
mov
in
add
pop
aaa
mov
sbb
xchg
dec
or
fisubr
sbb
pop
fwait
mov
fucomip
sbb
cwde
in
scas
std
test
in
jmp
jl
lods
mov
ret
out
in
stos
or
cmp
cmp
add
and
enter
add
xor
or
dec
in
loopne
out
mov
sbb
not
adc
sub
cmp
(bad)
in
add
sbb
call
jne
or
mov
sub
fwait
or
loope
cwde
les
pop
lds
fisub
jmp
sbb
adc
outs
aam
or
dec
rcr
sbb
cdq
test
je
jns
cmps
mov
or
mov
fld
or
sbb
pusha
push
cli
(bad)
dec
mov
int
lods
jmp
movs
and
stos
aaa
rcr
jne
mov
dec
hlt
jno
fcmovne
add
idiv
jle
cmp
popf
cmp
fistp
xor
ins
xchg
cli
mov
lods
mov
adc
popa
repz
fistp
fcomi
or
sti
or
push
jmp
mov
push
xchg
xchg
and
imul
(bad)
lahf
add
mov
ret
bound
leave
pop
xchg
cmp
mov
loop
loop
push
ficomp
sub
add
or
in
jmp
dec
inc
mov
xchg
or
cmp
jge
sbb
(bad)
outs
dec
xchg
mov
xchg
int3
test
cmps
mov
loope
lock
pop
rcr
sub
sub
pop
cmp
sahf
cmc
xor
leave
hlt
inc
pop
rcr
jae
pop
test
cmp
pop
rcl
dec
(bad)
fucomp
and
adc
mov
pop
stc
aas
mov
jmp
mov
inc
scas
arpl
ss
call
and
lahf
inc
xchg
adc
fdiv
leave
add
out
sbb
stos
scas
xor
pushf
enter
fsub
clc
mov
jne
dec
sub
cwde
jnp
cmp
mov
mov
mov
ds
pop
mov
and
and
push
mov
in
sub
clc
dec
fstp
test
cmp
dec
cwde
dec
xor
dec
pushf
add
lds
aaa
ret
cmp
xor
inc
cmp
pusha
inc
pop
out
mov
or
dec
xor
out
xchg
jb
jp
sub
xor
push
maxps
aam
loopne
cdq
in
and
add
or
sar
mov
mov
pop
popa
mov
mov
inc
hlt
iret
jnp
popf
cs
movs
jno
pop
ret
inc
sbb
lea
pop
movs
arpl
adc
dec
cmp
sahf
or
sbb
or
sub
ins
retf
aaa
ins
iret
push
addr16
adc
push
mov
(bad)
xor
mov
sahf
icebp
rol
mov
(bad)
mov
xor
and
lds
pop
sbb
arpl
test
sbb
jmp
(bad)
push
fld
imul
stc
xchg
and
test
mov
daa
adc
in
adc
push
pop
xor
or
push
push
in
or
pop
stos
repz
mov
sbb
jmp
xchg
pusha
adc
or
fwait
cdq
ss
aam
pop
inc
out
cwde
dec
mov
mov
and
and
pusha
add
mov
dec
ins
in
test
adc
and
aad
sbb
loop
daa
push
rcl
or
sub
rcl
and
fst
mov
test
in
popf
pop
pop
mov
xor
and
xchg
call
pop
fwait
or
or
push
inc
or
mov
mov
jne
inc
imul
adc
and
js
jae
jg
push
icebp
mov
and
inc
xor
and
add
jl
xchg
das
rol
dec
mov
xor
add
fnstenv
mov
mov
cmp
jbe
inc
xchg
stos
mov
popf
adc
dec
clc
xor
pop
inc
out
jb
outs
(bad)
mov
arpl
adc
inc
pop
(bad)
xor
lods
xchg
idiv
sub
jno
dec
xor
(bad)
mov
popa
xchg
add
cmps
ror
mov
lds
add
scas
add
(bad)
cmp
sbb
add
sub
inc
or
jns
mov
or
mov
lock
mov
js
jl
pusha
mov
scas
pop
push
xchg
cdq
(bad)
dec
test
ficom
xchg
pop
out
aas
mov
pop
and
repnz
push
in
xor
iret
les
std
push
out
mov
sub
mov
test
add
ficom
jl
xor
mov
pop
es
xor
inc
mov
pop
xor
(bad)
hlt
jecxz
xchg
push
test
sar
jg
cs
cli
popa
std
cmp
cmc
push
je
dec
cmp
lods
mov
ja
mov
mov
adc
pop
aaa
cld
out
sbb
mov
jg
(bad)
cmp
pop
xchg
adc
bound
popa
js
cmp
outs
adc
movs
mov
ficom
sbb
cmp
retf
movs
mov
rcr
inc
push
movs
in
loope
and
cmps
push
lods
sti
push
pop
sub
mov
pushf
jmp
cmp
repz
mov
in
xchg
and
shl
add
cmp
add
repz
sbb
aam
enter
cdq
cmp
test
jne
xchg
xor
jge
std
out
cmp
add
adc
sar
mov
dec
retf
pop
or
dec
mov
mov
jnp
jns
mov
lahf
cmp
sub
dec
inc
scas
add
in
mov
fs
xchg
test
xchg
xor
sub
es
push
jmp
in
cdq
pop
sar
xchg
dec
retf
mov
mov
rol
je
out
pop
in
daa
dec
or
sar
call
pop
mov
mov
mov
xor
sub
inc
imul
je
and
out
lds
enter
in
mov
inc
adc
inc
sti
or
fdivp
dec
add
gs
pop
mov
pusha
sbb
cmc
fcmovnb
(bad)
ds
cmp
cmove
add
push
jo
push
and
pop
mov
movs
jb
and
out
adc
adc
xchg
int3
mov
mov
fisttp
jmp
xchg
lods
xchg
pop
in
mov
jmp
inc
aam
add
test
jg
push
jns
jle
mov
call
ss
fcmovbe
sub
rcl
jns
or
sub
cmp
mov
mov
fs
icebp
ds
mov
and
mov
fs
rol
fucom
call
out
aam
scas
jb
jmp
push
lock
inc
mov
adc
leave
imul
addr16
xchg
and
adc
xchg
clc
popf
test
lods
ins
and
hlt
clc
xchg
mov
xor
cmp
sub
jae
mov
push
lods
retf
add
dec
fcomp
fadd
(bad)
aam
sar
inc
mov
inc
or
in
sub
outs
pop
repz
adc
das
dec
mov
rcl
cmp
sbb
xlat
mov
ds
fldenv
pop
sbb
mov
shl
ds
mov
int3
je
inc
lds
sar
nop
mov
invd
test
mov
pop
std
repz
cli
gs
fdivr
in
and
adc
fisubr
pop
xor
cmps
mov
cmc
ds
add
pop
jge
cmp
(bad)
fisub
sub
xchg
mov
jl
mov
lock
arpl
xchg
loop
enter
dec
pushf
sub
push
into
mov
sbb
add
dec
test
rcr
or
fisubr
mov
pop
push
add
test
sahf
aam
adc
imul
(bad)
retf
push
sbb
loop
loopne
xlat
es
outs
lods
ins
fimul
inc
aad
and
xchg
dec
stc
(bad)
fbld
mov
inc
outs
ja
or
mov
adc
cdq
cmp
nop
add
aam
or
std
call
movs
jecxz
jle
pop
sbb
fdivr
ins
mov
arpl
and
jae
push
mov
xor
push
movs
jp
ret
scas
push
push
mov
cld
mov
sahf
mov
out
scas
xchg
mov
dec
loopne
in
mov
imul
lahf
(bad)
in
imul
aaa
push
fisttp
mov
stc
nop
cld
fbld
inc
rol
push
fild
mov
or
pusha
jb
inc
add
mov
jmp
xor
(bad)
jecxz
jnp
pushf
mov
icebp
mov
cwde
and
add
push
mov
mov
cmp
leave
fld
enter
icebp
xchg
aas
repz
cmp
retf
push
aas
sub
imul
jne
and
stos
fstp
mov
dec
or
mov
mov
dec
test
repz
xor
sub
mov
inc
shl
add
jb
adc
xchg
(bad)
mov
outs
cmp
dec
popa
mov
shl
gs
shr
xchg
jo
leave
jmp
cmp
xor
in
mov
xchg
cmp
dec
inc
lahf
outs
add
in
add
pop
scas
prefetchw
or
fadd
jge
imul
adc
(bad)
(bad)
lods
pushf
fs
out
xor
popa
retf
ret
popa
gs
cmp
add
loopne
imul
pop
jg
or
rol
in
mov
jmp
in
inc
push
mov
add
jmp
(bad)
(bad)
in
add
inc
loop
inc
in
in
leave
repnz
das
in
repnz
sub
mov
pop
test
std
adc
in
mov
and
imul
xor
sub
sahf
sar
loopne
std
pop
comiss
jne
in
(bad)
loopne
ret
aas
inc
call
adc
and
fwait
loopne
(bad)
bound
xchg
sbb
es
add
and
sbb
(bad)
cmps
sub
aad
fucomp
ja
cmp
add
test
lock
and
int
aas
int3
inc
sbb
cmc
call
or
jg
xchg
pop
cmc
cwde
data16
dec
bound
xor
scas
ss
xchg
push
mov
push
add
or
out
into
push
pop
mov
(bad)
mov
and
test
mov
adc
adc
lahf
mov
add
scas
cmps
not
enter
loope
sub
out
and
inc
xor
pop
clc
into
jbe
popf
ins
popa
(bad)
mov
jnp
or
emms
std
add
inc
inc
ror
mov
adc
adc
add
cmp
lahf
sbb
push
jp
xchg
sub
adc
sub
dec
sbb
sbb
loope
adc
adc
scas
loopne
push
mov
pop
(bad)
outs
pop
push
cmps
adc
int3
mov
xor
and
ins
mov
or
push
jns
adc
adc
inc
mov
push
fist
push
idiv
or
ss
cmp
push
xor
retf
cli
inc
aaa
loope
movs
ret
jmp
sub
mov
push
mov
push
fsub
nop
mov
mov
outs
jnp
int3
cmp
and
outs
addr16
cdq
push
push
sbb
cmp
fmul
and
lock
add
call
in
leave
adc
shr
jle
out
push
stc
popa
mov
and
adc
or
gs
lea
and
outs
out
xor
imul
mov
fstp
sub
sub
in
pop
add
sub
and
mov
xchg
cmp
int
ja
mov
mov
ja
inc
aaa
add
push
lods
xor
js
pop
mov
pop
push
imul
(bad)
pop
ja
xchg
lea
stc
ins
(bad)
je
push
mov
test
std
sub
mov
int3
(bad)
push
ss
pop
dec
jle
loopne
outs
xor
push
clc
dec
test
outs
mov
imul
out
jne
test
jo
in
push
mov
mov
dec
int
xchg
jo
in
and
xchg
pop
xchg
aas
jecxz
mul
(bad)
aam
test
add
out
pop
sbb
sar
cmps
push
xor
std
xchg
xchg
xchg
pop
and
aaa
inc
dec
inc
dec
stc
sbb
dec
dec
add
retf
(bad)
pusha
lds
jae
lock
imul
ficom
cld
sub
(bad)
mov
out
and
cmps
je
push
push
push
adc
mov
repnz
mov
fxch
fs
jmp
ins
inc
dec
push
imul
ret
(bad)
loopne
jne
addr16
inc
mov
jg
mov
inc
out
mov
mov
mov
es
je
movs
clc
push
movs
mov
push
dec
movs
retf
jb
dec
jb
(bad)
fsubr
xor
pop
stos
dec
sub
nop
adc
gs
mov
in
jne
repnz
push
add
je
outs
cmp
mov
jmp
mov
pop
in
inc
ins
cmp
mov
dec
jle
cmp
pop
js
or
dec
push
test
ficom
ds
xchg
sahf
(bad)
loop
sti
shl
cmp
shl
fild
xchg
jb
movs
test
data16
jno
mov
bnd
pop
scas
jmp
(bad)
jmp
adc
lods
bound
mov
addr16
sti
pushf
push
xchg
aad
fadd
daa
test
fwait
retf
sub
jno
(bad)
test
stc
in
mov
in
cmps
add
push
dec
outs
pop
xchg
lock
sbb
stos
sub
push
shl
mov
mov
nop
imul
(bad)
inc
mov
jle
push
xor
mov
mov
repnz
gs
and
sbb
les
leave
hlt
call
add
out
aam
dec
test
mov
mov
cdq
add
fnstcw
or
cmps
and
repnz
cwde
sub
das
push
mov
push
pop
popf
stc
adc
lods
jnp
(bad)
dec
in
outs
mov
ins
shl
mov
aad
idiv
jne
push
repz
jg
xlat
test
jb
mov
cmp
sub
jge
mov
cs
fs
inc
cli
mov
ja
ror
pop
fs
cmc
sbb
out
imul
mov
aaa
push
dec
cwde
popa
rcl
ss
jno
mov
iret
adc
mov
test
inc
stos
jb
hlt
(bad)
push
cmp
leave
add
popf
retf
imul
ds
mov
(bad)
shr
(bad)
push
aas
sbb
add
jg
cmp
mov
mov
(bad)
dec
(bad)
pop
fcomp
mov
pop
ins
bound
xor
sub
mov
outs
movs
nop
cmps
leave
add
test
les
inc
dec
cdq
adc
or
jns
test
pop
or
data16
bnd
das
call
pop
rcr
rcl
aas
retf
push
bound
dec
scas
jecxz
cmp
dec
aam
cmp
xor
das
lods
mov
(bad)
lock
cli
fcomip
mov
jmp
push
pop
movs
pop
jp
je
int
or
sbb
jle
xchg
cld
into
(bad)
and
mov
or
mov
mov
jb
arpl
mov
ins
xor
jne
inc
jno
jnp
imul
shl
das
mov
mov
sub
push
cwde
mov
push
in
pop
xchg
shr
mov
cmp
push
mov
sub
test
ss
aaa
dec
and
call
push
call
nop
in
dec
(bad)
fdiv
fsubr
inc
fstp
ja
ss
xchg
(bad)
mov
mov
adc
mov
sub
add
out
ror
xchg
pushf
in
out
adc
xchg
aas
add
and
xor
icebp
ror
sahf
xor
pop
pop
push
fsub
fidiv
ret
icebp
pop
out
xlat
ret
mov
xor
(bad)
jmp
sub
sub
push
sub
inc
sahf
pop
and
lahf
out
outs
inc
scas
mov
mov
xor
int3
push
mov
and
pop
push
lds
mov
cmps
dec
pushf
push
cmp
xor
push
in
jg
xor
inc
inc
movs
mov
mov
add
or
(bad)
mov
popa
mov
fimul
in
jbe
repnz
movs
xchg
xchg
fdiv
fnstenv
in
jne
sub
fist
mov
pop
in
xchg
pusha
scas
cmp
pop
into
and
aam
gs
lds
mov
push
js
sub
in
scas
jns
leave
jae
sub
push
sbb
add
stos
push
data16
scas
cmp
mov
push
sub
xchg
aas
pop
mov
or
fisubr
inc
mov
mov
add
fstp
sahf
sbb
cld
ret
dec
inc
dec
mov
fisttp
jge
es
paddsw
jmp
ins
not
and
int
jmp
dec
jl
push
fmul
out
shl
xchg
push
mov
sti
ins
pop
inc
repz
add
int
mov
sbb
nop
fnsave
or
push
push
test
fwait
scas
cmp
jne
cwde
popa
inc
push
mov
cld
adc
outs
js
addr16
hlt
or
int
je
jbe
jecxz
and
add
ss
mov
mov
stos
inc
iret
ret
cmp
mov
mov
push
fstp
inc
mov
ror
jbe
daa
cmps
les
pop
push
pop
sar
neg
pop
adc
sar
movs
xchg
test
mov
inc
fmulp
adc
adc
pop
setp
fld
push
aas
aas
cmp
pop
adc
std
or
mov
or
(bad)
stos
jns
mov
or
leave
push
add
mov
fild
pop
cmps
iret
mov
add
xchg
sub
icebp
mov
fwait
cmp
pop
lahf
lods
and
push
mov
imul
jg
pop
dec
sub
test
mov
sbb
scas
add
mov
push
outs
mov
pmulhuw
cmp
out
mov
test
lods
sub
imul
inc
push
dec
add
aaa
in
mov
mov
popa
std
push
ja
cwde
mov
out
xchg
aaa
push
fs
xchg
in
sbb
mov
stc
push
stc
shr
arpl
add
(bad)
push
call
sbb
fistp
loope
shl
inc
int3
loopne
dec
int3
or
out
mov
test
mov
cwde
add
clc
out
mov
add
lock
cdq
ror
xor
xor
xchg
adc
aam
movs
cmp
push
pop
pop
rcr
sub
out
repnz
dec
adc
push
mov
push
out
je
mov
sub
jg
aaa
mov
sub
je
jl
imul
jmp
outs
adc
into
add
scas
xchg
mov
std
repnz
adc
cs
aam
cmp
push
daa
in
pop
das
mov
int3
add
aas
adc
adc
adc
outs
in
and
push
lods
pop
lock
and
push
inc
test
add
sub
stos
xchg
int
sbb
shl
fcom
push
fwait
mov
lea
repnz
push
dec
add
pop
jnp
and
sbb
dec
stos
test
adc
add
mov
lock
sbb
dec
sbb
adc
push
mov
mov
adc
or
xchg
dec
outs
cmp
add
dec
jge
je
cld
and
and
mov
mov
dec
int3
stos
mov
cmps
pop
movs
out
jae
mov
cld
cmp
hlt
data16
ficomp
scas
push
fwait
movs
jge
inc
fwait
jecxz
mov
adc
cmp
sub
xor
in
mov
test
aam
jnp
jne
ficom
sbb
cmp
mov
stos
scas
jmp
repz
iret
data16
jg
xchg
inc
mov
jg
in
xchg
and
movs
pop
retf
pop
imul
and
dec
add
mov
call
mov
mov
hlt
dec
fs
or
jb
cdq
mov
enter
sub
pop
ja
fwait
sar
out
mov
in
loop
cmp
mov
jecxz
idiv
jg
dec
in
das
dec
jnp
jae
jl
cmp
mov
push
push
xchg
fsubr
mov
pop
cmc
jnp
pop
leave
mov
iret
ja
cmp
mov
gs
stc
bound
sbb
dec
pop
pop
pop
and
aas
int3
mov
push
pop
and
mov
movs
mov
in
rcr
(bad)
jp
imul
and
cli
xchg
daa
scas
jnp
sti
mov
or
and
arpl
add
mov
xchg
dec
xchg
sar
out
inc
xchg
sub
pop
(bad)
push
mov
pushf
and
and
imul
sub
xor
adc
xchg
lods
(bad)
shl
jp
sbb
or
leave
test
inc
outs
loopne
inc
sbb
inc
je
mov
pop
cmp
data16
retf
std
pop
fsubr
mov
pop
sahf
lods
push
mov
mov
add
fdivp
lds
inc
jae
jp
sbb
mov
ja
or
push
xor
xchg
xchg
xchg
mov
xor
and
les
mov
cmp
div
add
jmp
cmp
jmp
cmps
imul
ja
mov
into
xor
sbb
push
dec
mov
nop
jnp
or
jne
in
loop
adc
retf
xlat
outs
cmp
cmp
test
ret
repnz
or
scas
mov
jecxz
xchg
pop
pop
rcr
dec
jle
lods
pop
scas
loop
pusha
inc
mov
jge
sahf
mov
dec
pop
in
das
sbb
sbb
test
cmc
sub
inc
retf
mov
std
ror
dec
xchg
or
mov
or
mov
inc
call
dec
leave
sub
mov
aad
jbe
icebp
inc
mov
fsubr
clc
or
shl
mov
mov
and
loop
stos
aaa
hlt
mov
and
xor
(bad)
xor
mov
lods
add
jmp
les
call
mov
cld
fcmovbe
(bad)
in
and
fdivr
dec
adc
dec
(bad)
pop
cmp
aaa
shl
ins
nop
(bad)
leave
fistp
jl
sbb
into
jo
mov
jmp
out
jb
popf
pusha
sub
sub
fs
xor
dec
bnd
xor
mov
shr
push
das
inc
adc
xchg
adc
add
pop
adc
pop
aam
mov
movs
movs
fdiv
dec
lahf
push
popf
clc
idiv
gs
loop
int3
loope
(bad)
imul
mov
shl
neg
xchg
popf
mov
inc
popa
jb
dec
movs
xor
pop
cdq
fld
call
sahf
add
je
sbb
and
xchg
add
ja
push
sbb
std
imul
cdq
or
mov
push
dec
sbb
and
in
cmp
in
out
lock
and
adc
xlat
cmp
enter
jne
fcmovnb
dec
jl
jmp
in
sbb
mov
xor
retf
and
test
in
push
in
pop
jbe
std
ins
sub
inc
movs
lock
dec
push
es
ret
retf
sbb
jb
inc
inc
gs
inc
and
mov
dec
pop
sub
loope
sahf
dec
sbb
jmp
push
mov
ins
pushf
cdq
or
bound
mov
push
push
jbe
scas
lahf
call
ficomp
je
out
out
popf
pop
nop
out
and
inc
xor
xor
mov
fld
ins
xor
pop
je
jno
push
push
ins
enter
fwait
sub
or
paddw
popf
fild
mul
mov
repz
jle
mov
xchg
mov
jno
int
pop
or
mov
push
xor
fdivp
test
sbb
pop
or
add
sub
or
in
jp
mov
out
sti
sub
and
xchg
xor
call
aam
lds
lahf
repz
push
test
push
and
add
outs
pop
xchg
jne
cmp
loope
loopne
inc
inc
pop
dec
std
cmp
ss
adc
pop
cdq
and
push
jns
ficom
xor
call
sub
sti
inc
add
push
in
dec
xchg
out
xchg
mov
repz
pop
add
repnz
fsub
pop
lods
cld
pop
push
aaa
jmp
mov
pop
fisttp
xor
jo
xor
data16
cdq
ins
mov
jo
scas
pusha
leave
push
mov
es
pop
hlt
sub
lock
loop
gs
inc
sbb
ss
arpl
cdq
je
and
sub
mov
inc
add
rcr
push
or
inc
jmp
dec
or
mov
inc
and
ret
std
out
inc
cli
cli
mov
pop
test
aam
test
xor
ror
add
push
outs
inc
sbb
sbb
rcr
mov
jg
sbb
inc
dec
shr
dec
in
push
arpl
test
(bad)
jge
cli
sub
mov
ficom
jl
ds
mov
popa
lds
push
dec
mov
es
sbb
mov
mov
popa
cmc
dec
iret
cmps
gs
mov
not
mov
inc
ja
dec
lahf
dec
les
lock
cmp
mov
and
stc
fidivr
or
shl
push
ficomp
in
adc
xchg
jg
pop
jl
fsubr
mov
dec
jns
push
imul
cmp
outs
inc
xor
in
xlat
loope
outs
mov
retf
pop
lods
retf
aam
push
inc
ret
dec
cmp
inc
fsub
dec
lds
jp
cmp
pop
(bad)
int3
retf
and
cld
mov
popa
int
sti
js
stos
ss
clc
std
fs
aam
outs
stc
jne
cld
loope
(bad)
xor
fcmovu
stc
mov
push
xchg
test
sbb
jno
xchg
aaa
mov
or
outs
and
push
ret
cmps
or
add
push
adc
pop
pop
ficom
fcomp
imul
add
jge
mov
ficom
pop
rcl
xchg
dec
adc
jmp
sub
sub
lock
shr
mov
(bad)
xchg
pushf
sub
stos
pop
pop
jnp
(bad)
dec
rol
add
mov
mov
and
mov
addr16
fsub
loop
lea
scas
pop
sub
cmp
or
sub
sbb
mov
into
fidiv
jg
sbb
or
pop
mov
jae
jmp
jg
inc
mov
popf
pop
lods
sub
in
sub
arpl
test
neg
xchg
jnp
jmp
mov
mov
adc
aam
lahf
sub
inc
outs
pusha
adc
add
mov
sahf
js
sbb
dec
les
(bad)
jmp
jo
pop
imul
dec
push
cs
rol
mov
sub
jnp
psrld
jne
inc
fs
mov
and
mov
pop
inc
imul
mov
sahf
add
jmp
jae
clc
mov
dec
mov
daa
(bad)
ret
mov
arpl
jecxz
cwde
ds
cmp
aaa
xor
sbb
jns
mov
inc
xor
in
lods
scas
outs
xchg
push
lods
sbb
aad
sar
sti
mov
sub
mov
cmps
fwait
arpl
push
pop
loope
retf
call
repz
or
in
jne
int
xchg
jmp
inc
in
fisub
add
xor
popa
sti
mov
das
stc
popa
and
into
dec
gs
mov
je
ror
cwde
shl
stos
lahf
cmp
(bad)
shl
pop
ret
out
mov
add
into
push
lods
inc
stos
pop
jl
les
sub
adc
fsubrp
and
jb
aas
xor
inc
int
cmc
cmp
jmp
idiv
xchg
iret
add
push
mov
ret
jg
shl
mov
and
mov
lock
adc
ja
out
xor
cmps
push
int3
test
icebp
sbb
rcr
out
mov
(bad)
out
push
adc
ret
cmp
test
int3
and
xor
(bad)
nop
jmp
sti
scas
rcl
shr
fstp
push
fsubr
add
push
je
out
xor
lods
not
cwde
mul
int
ficomp
or
mov
xor
stc
div
xchg
in
cmp
shl
fnstsw
ror
fist
ret
dec
dec
or
dec
jmp
adc
jge
popf
push
pop
inc
mov
fstp
fdivr
dec
test
xor
hlt
rcr
lea
cmc
adc
pop
mov
xchg
cld
movs
in
push
or
add
int3
test
cmps
xor
and
cmc
push
pop
push
pop
shr
retf
test
inc
fistp
or
fisub
lock
(bad)
scas
ja
ror
mov
aaa
outs
xchg
dec
or
inc
fsubr
mov
jbe
adc
retf
int
jp
rcr
sub
pop
ret
mov
jmp
aam
mov
loope
push
mov
stc
inc
push
cmps
(bad)
mov
cmc
das
xlat
or
imul
push
xchg
btr
or
cmp
pop
in
mov
arpl
aas
cmp
rol
(bad)
test
icebp
int3
mov
jmp
cmp
fistp
shl
aaa
icebp
bound
out
add
add
fadd
fisttp
and
rol
out
in
push
out
aas
jbe
test
leave
fwait
int
repnz
pop
mov
out
lock
sub
(bad)
pop
sbb
popa
adc
add
adc
call
push
stc
ins
hlt
sbb
mov
lock
fwait
and
sbb
pop
fimul
mov
movs
xchg
pop
mov
adc
lods
addr16
iret
hlt
mov
loopne
ret
sti
and
and
dec
dec
call
and
sub
sub
fdiv
mov
jge
outs
fsub
daa
cmps
lock
add
in
data16
gs
repz
repz
lock
sbb
mov
pusha
sti
dec
fs
and
ds
sar
imul
cs
scas
jae
fistp
gs
mov
ins
add
cmp
in
retf
addr16
(bad)
fcomp
mov
sbb
mov
adc
test
iret
or
or
movs
xlat
mov
push
add
test
mov
mov
popf
jecxz
push
push
sti
cld
outs
fs
push
ds
mov
daa
mov
test
mov
sub
das
adc
jge
jb
lock
sbb
mov
(bad)
mov
pop
mov
retf
xor
test
inc
lock
pop
idiv
xchg
(bad)
xchg
xchg
(bad)
repz
gs
(bad)
lahf
lock
push
(bad)
dec
call
mov
mov
out
dec
lods
jmp
in
cli
add
dec
imul
sub
cmp
push
mov
in
sbb
call
test
jno
dec
and
cli
cmp
jb
les
xor
mov
lea
dec
sbb
in
or
inc
call
das
popf
lea
stos
lock
jg
push
mov
mov
mov
mov
sbb
jecxz
mov
cwde
jns
or
jmp
jb
cdq
ins
adc
sbb
ds
pop
dec
pop
jae
movs
ins
and
inc
mov
jmp
ins
sar
sbb
mov
lods
mov
nop
jge
aas
push
cli
es
arpl
add
cmp
inc
das
mov
jb
aas
jp
scas
mov
call
push
jle
mov
inc
je
dec
push
shl
mov
add
and
adc
(bad)
not
ss
xchg
leave
aas
push
cmp
ja
mov
mov
daa
push
sti
mov
icebp
jl
jns
sub
sub
jnp
and
add
aas
ins
stos
xor
xchg
out
(bad)
push
pop
mov
or
lock
mov
jnp
mov
pushf
push
dec
push
add
inc
xadd
sub
mov
stos
imul
outs
gs
add
mov
xlat
mov
push
xor
in
cmp
cmps
mov
test
or
inc
es
add
sbb
cmc
inc
add
lods
(bad)
pop
out
test
xor
stc
adc
jge
shl
jmp
sar
sbb
add
in
dec
mov
dec
push
dec
popa
mov
pop
imul
inc
mov
mov
and
adc
sbb
sub
mov
out
cmps
fcmovbe
push
inc
pinsrw
ins
add
es
mov
ret
jl
(bad)
out
push
push
mov
or
dec
add
dec
mov
or
shr
jge
repz
dec
xchg
nop
push
mov
rep
mov
es
outs
cmps
cdq
lds
inc
xchg
mov
xor
or
pop
leave
retf
xor
clc
movs
fidivr
ins
outs
sbb
push
fstp
dec
jae
sbb
ret
popf
pop
push
cmps
cs
(bad)
jge
mov
ret
jmp
add
pop
dec
call
adc
add
xchg
lock
inc
xchg
cmps
lods
cdq
std
sub
mov
xor
sub
and
imul
cli
mov
mov
fidivr
fldlg2
pop
xlat
xchg
mov
in
pop
push
or
sbb
jmp
cmp
cmp
and
or
dec
outs
mov
sahf
cmp
cmp
sbb
movs
jge
push
ret
leave
pop
imul
fisttp
push
cmp
lods
call
icebp
mov
retf
imul
or
xor
ja
add
push
jno
outs
scas
xchg
neg
movs
sar
push
popf
repz
mov
and
das
rol
adc
das
je
nop
xchg
sub
mov
ins
cmp
(bad)
sub
mov
std
ret
cmp
out
cli
leave
and
and
sub
stc
pop
xchg
in
cmc
in
xlat
or
pop
mov
mov
inc
and
cmps
push
xchg
jb
mov
pop
pop
scas
scas
mov
inc
(bad)
fdiv
add
loop
jne
sub
or
loopne
push
cmp
pop
sti
inc
sub
mov
adc
call
mov
(bad)
jecxz
add
idiv
push
push
stos
fst
cmps
mov
movs
ins
or
movs
jecxz
dec
add
lds
inc
lds
sub
xchg
mov
popa
add
dec
retf
dec
adc
orps
sti
add
ja
fdiv
jbe
mov
fisttp
jno
lds
fist
add
cmps
cmp
sti
pop
or
cmp
jg
jg
retf
into
cmp
movs
mov
xchg
push
adc
adc
enter
pop
ins
fwait
and
jge
xor
adc
dec
dec
add
in
sub
movs
mov
pop
pop
scas
jle
js
je
stc
push
(bad)
push
ret
xor
or
aad
(bad)
icebp
jae
lock
ins
repnz
mov
shr
push
js
stos
outs
pop
dec
aas
sbb
inc
or
cwde
add
hlt
mov
mov
stc
and
mov
div
movs
mov
aam
sub
movs
jmp
repz
push
inc
adc
adc
adc
mov
int
or
push
or
rcr
jmp
or
andnps
jns
pop
mov
fmul
add
sub
xchg
or
rcr
jae
cmp
push
lods
pop
xor
xchg
xlat
daa
xor
iret
ja
sub
cmps
mov
push
add
sbb
fsubr
cmp
lods
mov
sbb
xor
call
pop
cmp
ror
imul
pop
test
jnp
pop
sub
shl
pop
adc
mov
(bad)
ins
addr16
stos
mov
adc
div
cmp
clc
adc
xor
pop
push
cli
cmp
sub
and
push
call
jle
push
jmp
nop
inc
and
inc
jg
inc
xchg
lahf
push
aas
call
inc
aam
mov
sbb
add
mov
inc
jp
repz
adc
inc
in
jmp
loope
in
lock
xor
adc
jne
lea
int3
adc
test
pop
sbb
xor
xchg
call
fld
addr16
aad
sub
(bad)
loopne
nop
cs
fsub
aad
std
jmp
popf
ret
sbb
adc
xchg
mov
xchg
sbb
jne
adc
imul
pop
test
mov
push
fld
fs
push
addr16
adc
pop
loope
imul
(bad)
das
sub
adc
pop
lds
fisub
jmp
ja
dec
fisttp
daa
cdq
push
(bad)
test
(bad)
nop
jbe
jns
cwde
jnp
push
icebp
add
jge
in
loope
mul
mov
mov
scas
int3
mov
mov
int
sbb
add
imul
dec
jl
mov
inc
ins
mov
int3
push
add
pop
addr16
std
jne
loop
add
jae
jmp
hlt
mov
pop
adc
daa
clc
add
mov
(bad)
pushf
test
and
repz
cs
bound
mov
mov
adc
cli
(bad)
popf
(bad)
shl
mov
mov
mov
popa
inc
popf
dec
jp
movs
ficom
mov
or
mul
dec
sbb
in
lahf
lock
and
ret
add
xor
and
(bad)
fidivr
push
dec
cmps
std
add
pushf
or
add
pushaw
lods
stos
sub
(bad)
pop
inc
mov
out
ror
xor
(bad)
lahf
test
ss
push
jmp
dec
(bad)
jmp
cvttps2pi
jno
jle
cmps
and
push
xchg
mov
in
and
jmp
cmp
lahf
adc
pop
mov
xchg
cmp
cdq
out
adc
pop
lahf
mov
sahf
mov
sbb
test
xchg
inc
jae
cmp
cld
in
sar
jge
sbb
shl
clc
xchg
jnp
lea
cmp
movs
rol
or
add
push
ins
xchg
xchg
dec
cmps
ja
ins
mov
mov
loope
push
mov
sbb
lock
call
popf
inc
pop
xor
sub
jecxz
and
in
jge
push
shl
imul
mov
pop
push
out
sbb
outs
sub
mov
arpl
scas
cmp
pop
out
sbb
mov
aaa
inc
pop
arpl
cld
mov
nop
mov
sbb
cmp
mov
movs
inc
sbb
(bad)
sbb
and
and
nop
out
popa
inc
xor
push
xchg
mov
sahf
test
sub
dec
fmul
sbb
dec
imul
popf
mov
jp
adc
inc
cmp
mov
sbb
push
fist
(bad)
js
ret
mov
sbb
sub
xchg
repz
popf
outs
cmc
scas
cmp
jge
paddq
pop
bound
stos
and
and
sbb
(bad)
scas
lahf
shl
ja
cwde
xor
fist
mov
fsubr
mul
call
movs
xor
(bad)
loopne
and
in
sub
lock
sbb
or
pushf
imul
int3
add
daa
loope
jl
adc
fwait
test
je
mov
mov
or
nop
adc
jnp
inc
call
xchg
add
adc
out
or
das
mov
fsubr
pop
adc
mov
and
jmp
out
or
test
sti
mov
and
jle
shl
jnp
cmps
xchg
mov
mov
or
shl
inc
js
bound
lods
and
fcom
loop
fld
mov
arpl
out
pop
cmp
jmp
in
dec
push
fldenv
sbb
cli
sub
mov
ret
xchg
loopne
adc
stc
ss
pop
(bad)
cdq
cmp
push
mov
in
mov
test
and
xor
cmp
scas
jnp
cmc
cmp
(bad)
pusha
repnz
fiadd
test
pop
inc
sbb
loop
pop
sub
push
shl
jno
push
adc
cwde
jae
fstp
inc
pop
sar
sub
pop
push
loopne
push
push
test
retf
mov
dec
out
xor
jg
lds
gs
xor
or
push
mov
test
push
imul
lea
and
iret
inc
xchg
sub
xchg
imul
(bad)
(bad)
aad
sbb
iret
ins
loope
xchg
icebp
ins
pop
sbb
int3
xchg
sub
(bad)
and
rcl
xchg
clc
out
push
outs
add
mov
(bad)
retf
adc
pop
jo
mov
or
or
out
mov
loope
rcl
sub
pop
(bad)
xchg
and
js
mov
mov
call
iret
aaa
ins
sar
xor
or
(bad)
cli
ret
and
in
setge
popa
xchg
mov
pop
mov
(bad)
push
push
mov
cs
pop
push
jge
pop
loopne
imul
sub
mov
jo
ins
loop
cmc
push
dec
fst
xor
(bad)
jb
neg
fld
xchg
pop
pop
sbb
pusha
sbb
cmp
scas
and
and
jne
fsubp
(bad)
cmp
mov
jb
push
mov
mov
out
stos
jmp
sbb
mov
jo
ja
fwait
and
xor
cmp
clc
cli
or
aam
xor
push
add
aad
jmp
repnz
push
pop
dec
mov
add
mov
popa
je
movs
xchg
cmp
out
lea
xchg
int3
ret
ins
lods
add
jp
in
lods
fincstp
ret
loopne
test
xchg
push
leave
jmp
push
cmp
fsubr
clc
test
pop
arpl
cmp
cdq
rcl
and
dec
outs
ficom
jl
fimul
xchg
dec
fstp
cmp
jl
movs
mov
and
in
call
xchg
ss
dec
xor
cmp
fmul
pop
mov
fst
sbb
fcmovnu
xor
loop
stos
or
xor
pusha
test
push
mov
mov
xor
in
push
pushf
mov
imul
and
test
imul
sti
into
xchg
sbb
lods
popw
jae
sbb
les
sbb
icebp
jle
ret
xor
dec
cmp
xor
ins
js
daa
(bad)
xchg
repnz
cmp
inc
cmp
jmp
jne
daa
movzx
test
mov
pop
mov
add
imul
es
pop
jne
(bad)
lds
pusha
lds
mov
inc
mov
retf
mov
imul
lds
xchg
inc
sbb
push
mov
dec
pop
or
(bad)
mov
enter
lock
sahf
adc
loopne
enter
call
movs
cmovg
mov
sub
ret
or
or
lea
add
xchg
add
in
pop
xlat
mov
mov
mov
mov
into
cs
sub
push
mov
scas
cmp
ins
(bad)
(bad)
xor
enter
sub
mov
and
jo
imul
or
ins
arpl
and
mov
dec
pop
jle
les
and
mov
xchg
(bad)
(bad)
mov
and
lods
sti
mov
xchg
int3
ds
inc
scas
pushf
xor
(bad)
nop
ja
pop
sbb
jno
fstp
shl
push
rcl
ret
push
dec
dec
or
stc
fisub
stos
dec
loopne
adc
movs
rcr
and
mov
xchg
or
fnstcw
lock
shl
loopne
out
mov
mov
jp
pushf
dec
movs
das
sbb
inc
lahf
pushw
mov
ficom
retf
call
jp
aam
fnstenv
test
outs
sub
iret
jmp
imul
jge
mov
aam
sub
int3
stos
mov
add
ins
imul
les
aaa
jmp
fstp
cmp
jmp
xchg
in
mov
sbb
movs
daa
or
dec
jl
shr
sub
sbb
lods
jb
stos
adc
out
jbe
(bad)
fwait
imul
or
mov
in
push
mov
cmp
into
rol
aaa
jno
rcr
jmp
fstp
mov
and
das
jp
push
push
inc
mov
mov
jne
int
and
fsubr
jl
(bad)
jmp
std
pinsrw
(bad)
mov
mov
cmps
jge
repnz
data16
sahf
aaa
(bad)
out
das
xor
lods
ret
pop
or
out
xchg
call
push
lea
pop
jl
data16
scas
mov
pop
imul
push
aad
pop
hlt
add
ins
inc
clts
stc
fmul
retf
pop
sub
in
out
sar
cwde
pop
or
out
mov
xchg
jmp
adc
or
mov
pushf
sbb
(bad)
jb
pushf
cmp
and
push
adc
lods
ins
add
push
jecxz
and
sbb
outs
leave
inc
xchg
test
(bad)
and
and
in
sbb
fst
push
sbb
pop
jecxz
push
xor
jmp
pop
xor
cmps
and
and
inc
xor
fmulp
es
xor
retf
pusha
pop
cwde
mov
test
shl
lods
push
out
ss
mul
jno
int
lahf
(bad)
fsubr
add
push
and
es
arpl
jbe
call
fs
dec
mov
lds
xchg
push
loope
mov
xor
push
jmp
and
arpl
cmp
sub
sbb
(bad)
push
jl
inc
jmp
out
jge
xlat
jno
ret
dec
mov
push
nop
std
rol
pop
dec
xor
lahf
lds
jl
add
iret
retf
dec
pop
pop
pop
fwait
mov
popa
cwde
sar
les
cs
scas
mov
xchg
int3
std
lock
es
add
inc
push
add
outs
fisubr
ins
mov
aam
(bad)
shl
cld
inc
popf
outs
ins
xor
pusha
ficom
and
push
out
xlat
push
add
adc
xor
add
sub
js
adc
xor
xchg
es
push
scas
inc
les
mov
repnz
xor
pop
test
rol
out
mov
test
pop
dec
xchg
(bad)
mov
mov
sub
es
lods
and
push
sub
arpl
popf
imul
xor
mov
jbe
xchg
enter
push
lock
inc
mov
mov
shl
xchg
mov
pop
sbb
pop
jl
cmp
iret
xchg
and
movs
push
sahf
jmp
outs
xchg
je
int
fwait
adc
fcomp
cmp
jo
ficomp
ror
rcr
mov
mov
cdq
stos
sbb
mul
cld
out
add
xchg
sub
mov
cmp
xchg
fstp
jmp
test
lods
dec
daa
div
sub
push
mov
arpl
inc
jecxz
mov
test
jg
push
std
pop
and
es
lds
sahf
test
sbb
add
clc
xchg
push
or
xor
cdq
and
(bad)
cdq
cdq
cmps
jp
jb
push
popa
loop
icebp
or
add
shufps
mov
mov
xchg
pop
sbb
cwde
test
out
je
or
push
popa
std
jg
leave
jmp
jns
xchg
sti
dec
outs
imul
or
add
push
push
xchg
mov
lock
test
mov
addr16
test
int3
mov
es
daa
mov
mov
les
pop
mov
call
pushf
xlat
add
pop
clc
sbb
sub
mov
jp
add
in
js
stos
xchg
shl
lods
dec
push
sbb
cmp
popf
aad
adc
pop
call
xor
imul
cmp
lock
ins
ret
inc
cmp
jno
int3
ret
mov
sti
retf
pop
not
sub
ud2
mov
or
jmp
pop
jge
xor
loop
xlat
or
push
pop
add
bound
jge
pop
movq
cmp
clc
es
std
aaa
sub
fs
add
push
out
mov
mov
jo
dec
or
into
imul
or
pop
push
loop
ins
call
lods
bswap
xor
push
adc
out
sub
scas
pop
xchg
js
pop
jecxz
dec
popf
scas
cli
stos
mov
or
je
sahf
cs
push
inc
add
or
or
inc
mov
mov
jbe
icebp
inc
dec
sub
addr16
cwde
push
es
pop
pop
mov
push
addr16
lds
cmc
cmp
ret
xchg
cmp
xchg
int3
jo
or
sbb
pop
sub
shr
out
add
imul
add
mov
out
(bad)
jmp
xchg
(bad)
jb
sub
loopne
push
push
xor
xchg
adc
fwait
pop
xlat
outs
mov
pop
cld
stc
adc
icebp
data16
jmp
adc
test
jno
jns
ja
in
rol
inc
test
jno
and
xor
inc
mov
pop
xchg
adc
fldcw
sbb
loop
sub
icebp
and
and
push
loope
pushf
std
mov
stc
and
aam
dec
fs
clc
xchg
inc
mov
sbb
mov
cmc
out
xchg
push
sub
in
cmp
(bad)
jne
mov
je
inc
cmp
jl
stos
inc
or
mov
(bad)
sbb
dec
enter
sti
in
test
adc
dec
inc
pop
sbb
popa
mov
and
loop
jo
mov
outs
fiadd
jbe
pop
jbe
inc
cmp
ja
scas
sbb
loop
push
xchg
xchg
out
pop
mov
rcl
push
xor
mov
jnp
fild
or
ret
add
test
(bad)
out
inc
add
adc
mov
cwde
shl
adc
xchg
add
pop
and
repz
push
je
sar
push
loop
fcomp
jecxz
(bad)
enter
inc
pop
cmp
mov
xor
pop
cmp
fmul
xchg
sub
mov
and
mov
fldenv
add
dec
out
ret
retf
jmp
mov
aaa
mov
xor
shl
call
xchg
or
push
jge
in
mov
dec
mov
mov
xor
inc
pusha
xor
xchg
xor
out
push
mov
jmp
test
jle
test
and
je
lea
xor
ins
cmp
cli
jecxz
das
ss
mov
icebp
popf
fnstsw
inc
sti
movs
leave
aam
jle
loope
mov
mov
dec
clc
mov
out
clc
cmp
cdq
ret
mov
and
sbb
(bad)
xchg
ins
in
in
jne
mov
push
mov
pop
fist
(bad)
popa
movs
sub
push
fldcw
scas
inc
jl
dec
lea
test
mov
xchg
out
or
pop
pop
xchg
push
xchg
cmp
sbb
leave
sbb
push
ror
ins
xor
dec
or
jo
push
or
lahf
lds
push
adc
mov
cmp
jecxz
xor
sti
das
bound
and
pop
fcmovnbe
shr
and
lods
rcl
imul
ins
adc
repnz
dec
enter
icebp
ins
jnp
xor
pop
jne
out
leave
fimul
jae
and
jecxz
neg
pop
adc
mov
paddusb
xor
adc
mov
jle
loopne
fisttp
add
clc
dec
jmp
and
jo
in
jp
loope
jle
add
inc
xlat
adc
and
inc
(bad)
fisub
or
xchg
pop
xchg
push
sub
div
cmp
ss
aas
mov
mov
fiadd
mov
and
shr
bswap
fsub
lahf
jne
push
and
cmp
mov
(bad)
adc
leave
xchg
out
(bad)
mov
push
test
push
mov
fidivr
xlat
gs
shl
ins
cmps
mov
push
add
retf
xchg
popa
retf
xor
aad
shr
xor
jmp
in
jb
mov
leave
pop
aas
sub
mov
xor
push
lds
xchg
fmul
sbb
cdq
jno
xchg
mov
xchg
push
xchg
cmp
cli
pop
jp
retf
(bad)
jo
fsubp
and
jnp
push
jae
(bad)
aad
adc
dec
dec
in
mov
in
retf
aaa
popa
pop
rol
push
xor
and
adc
int
shr
or
or
adc
sar
push
mov
push
xchg
sub
cmp
xchg
nop
xchg
sar
iret
movs
push
jb
inc
xor
push
(bad)
sbb
cwde
stos
fisubr
sbb
loop
test
fimul
popf
rcl
sub
into
add
pop
xlat
out
and
inc
sti
sar
lods
mov
xlat
push
push
rcl
jmp
outs
pop
std
pop
mov
sti
mov
sbb
fwait
std
mov
test
adc
ret
in
push
inc
movs
mov
arpl
aad
ins
mov
cs
xchg
daa
fdivr
fwait
cld
pop
inc
mov
pusha
loope
(bad)
aad
sbb
lock
pop
mov
test
inc
mov
mov
popf
pop
mov
test
fdiv
inc
cwde
add
inc
inc
je
inc
ins
cmp
(bad)
mov
pop
push
and
jns
cmp
push
push
aaa
jecxz
sti
dec
dec
dec
lods
xor
(bad)
jecxz
adc
popa
sbb
mov
mul
in
mov
pop
aaa
xchg
mov
mov
jle
cwde
data16
fcomp
(bad)
mov
xchg
mov
sbb
jbe
into
jbe
rcl
add
cmp
jge
mov
aam
xlat
pop
jne
and
jns
add
inc
xchg
or
nop
idiv
cmp
sbb
sbb
or
cmps
test
dec
xor
aad
or
fs
or
imul
dec
adc
push
call
cmps
jae
sbb
daa
aaa
xchg
pushf
and
ss
xchg
xchg
dec
jmp
mov
sbb
dec
mov
leave
sti
aaa
mov
loopne
jb
push
ret
(bad)
add
inc
ja
rcr
imul
test
inc
loop
test
ds
xor
pop
inc
adc
push
sbb
mov
jbe
xchg
add
pop
or
pop
in
movs
pop
xchg
push
mov
mov
fldcw
bnd
sti
push
aas
adc
push
fstp
pop
stos
aad
mov
js
xor
xor
std
mov
mov
cmp
dec
loop
xor
lock
ja
jmp
add
pop
mov
aas
pusha
mov
jb
jnp
(bad)
jmp
pop
lock
ins
push
push
fwait
inc
inc
gs
jle
(bad)
loope
sbb
mov
sub
pop
push
mov
popf
sbb
dec
add
mov
ins
jg
retf
pop
pop
or
(bad)
and
cld
pop
xor
mov
sti
(bad)
fdiv
sub
xor
jo
loope
inc
push
pop
rcr
pop
repnz
pcmpgtw
cmp
nop
xor
mov
dec
dec
adc
mov
xor
adc
jmp
mov
jle
(bad)
arpl
ror
xor
adc
int3
leave
mov
mov
jo
sbb
push
xor
pop
je
xor
xor
sub
pop
std
xor
call
pop
pop
in
jbe
cwde
cmp
stos
cdq
jg
daa
mov
push
add
push
sbb
or
stos
jmp
dec
lods
and
sbb
xor
mov
push
push
aam
pop
or
arpl
and
inc
ins
jmp
test
mov
fild
or
outs
inc
mov
out
lock
ficom
fidiv
pop
cmc
fmul
(bad)
fcomp
push
daa
sbb
fsub
je
jmp
fld1
sub
xor
push
mov
sar
test
daa
daa
lahf
cmp
cwde
push
mov
jl
xchg
cmp
mov
mov
sbb
ret
and
pop
and
aaa
rcr
push
add
and
stc
je
test
mov
xchg
pusha
adc
sub
add
sub
or
sub
or
inc
jnp
or
add
std
sbb
div
scas
ret
mov
div
(bad)
int3
enter
int
stos
test
dec
sub
out
mov
ja
add
dec
push
cmp
cmp
lea
adc
push
inc
js
cmp
pop
dec
cmp
jno
sub
add
fistp
arpl
mov
sub
aas
(bad)
out
cmp
mov
nop
cmp
jmp
or
out
xchg
xor
mov
call
idiv
xchg
xchg
xchg
sbb
icebp
rol
sub
retf
mov
dec
hlt
mov
sub
xchg
fadd
jle
cmps
ins
add
dec
mov
cmp
(bad)
int
sbb
(bad)
int
mov
dec
push
add
sbb
inc
call
mov
mov
xor
and
mov
mov
sti
mov
sub
fucom
xchg
mov
clc
add
or
pop
sub
and
in
xchg
inc
out
loope
popa
jg
adc
pop
jge
xchg
cmp
xor
cdq
pop
mov
push
setle
xchg
or
(bad)
repnz
xchg
mov
(bad)
xchg
inc
mov
adc
pusha
int
jbe
mov
rcr
das
adc
jne
mov
mov
lahf
pop
mov
shr
pushf
pushf
and
and
pop
iret
lock
rcl
mov
outs
push
sbb
ja
push
stos
icebp
ret
cwde
loop
sub
xor
clc
xlat
ja
(bad)
lods
push
cmp
(bad)
movs
xchg
dec
std
vpackssdw
test
push
push
outs
icebp
mov
nop
(bad)
into
mov
je
ds
mov
pop
in
int
test
jp
pop
cmp
fnstcw
test
xlat
xchg
imul
outs
adc
idiv
call
sub
ret
or
(bad)
test
pusha
cmp
int3
mov
fst
scas
adc
dec
(bad)
sub
(bad)
sub
mov
adc
out
(bad)
adc
push
jo
sbb
cld
inc
inc
adc
ret
jmp
or
push
xchg
pusha
sub
sar
iret
stos
dec
mov
addr16
adc
(bad)
stc
imul
das
pop
inc
cli
in
xchg
xchg
push
test
or
out
mov
in
ret
in
ss
bts
mov
sub
mov
cmp
ins
pop
mov
aad
ins
push
rol
retf
out
jg
(bad)
cmc
cmps
mov
mov
mov
xor
shr
xlat
fcomp
sar
and
sbb
popf
pusha
enter
cli
mov
cmps
in
adc
nop
imul
cmps
fbld
xor
mov
rcl
je
push
scas
and
jl
sbb
loope
sbb
add
mov
mov
cmp
mov
shl
stc
iret
mov
test
xchg
mov
sbb
or
or
outs
repnz
rcl
adc
sbb
mov
pop
and
nop
sbb
inc
iret
pop
cmps
cmp
lea
pop
not
or
adc
dec
jp
shl
sbb
inc
pop
enter
imul
dec
jo
repz
not
sub
sahf
gs
pop
les
pop
and
adc
pop
adc
test
ja
aad
pop
jb
ins
movs
(bad)
call
add
mov
cld
fwait
push
mov
retf
pusha
rol
retf
pop
int3
fist
and
hlt
pop
jmp
test
mov
test
pop
in
gs
iret
jb
mov
dec
cli
je
jo
jmp
dec
xchg
add
dec
inc
das
imul
sbb
cdq
out
in
sub
repz
push
(bad)
fst
mov
sti
mov
das
xchg
daa
scas
mov
mov
mov
test
mov
or
jg
js
out
mov
loope
push
pop
lea
lods
test
adc
dec
sbb
lods
adc
mov
test
xchg
cmps
dec
xchg
aad
idiv
push
sahf
jg
sub
mov
into
add
dec
bound
inc
push
scas
std
or
mov
inc
add
daa
xchg
test
cmps
fmulp
ror
pop
cmc
mov
mov
cmp
inc
loop
or
in
fbld
mov
and
dec
ret
dec
mov
jno
leave
ret
ret
arpl
or
adc
jg
leave
out
push
and
ss
js
mov
xor
add
push
cld
mov
jns
gs
je
push
popa
jo
push
and
or
push
ficomp
cmps
mov
push
mov
jl
inc
push
xchg
daa
scas
ds
sub
std
or
cmp
and
xchg
jl
adc
int
lahf
mov
scas
fdivr
push
aad
jae
jecxz
dec
or
xchg
rcr
cld
sub
test
push
stc
daa
lods
aas
mov
jmp
jae
sbb
cmp
mov
or
stos
loope
mov
es
pop
add
sar
cmp
sbb
push
movs
jns
xor
add
loope
popf
push
sbb
push
cli
sahf
mov
and
push
jns
cmps
sahf
nop
test
xchg
mov
ret
adc
outs
jno
cmp
scas
fcmovnb
mov
jl
dec
mov
popa
sub
les
rcl
cmps
xor
mov
out
jnp
cmps
mov
ret
add
mov
pop
xchg
(bad)
in
or
add
adc
retf
das
popf
enter
shr
mov
sub
leave
or
inc
fwait
ret
xchg
add
loope
into
shl
or
or
lahf
cld
xchg
xchg
not
pop
enter
test
and
cmps
jo
pop
cld
out
fild
xor
dec
jl
iret
sbb
cmc
sbb
out
out
daa
xor
fwait
push
mov
add
xchg
inc
or
leave
fst
cmp
adc
loope
ins
mov
mov
div
pop
and
jae
mov
pop
push
pop
jp
mul
pushf
adc
retf
push
fdiv
fmul
nop
jp
retf
or
shr
iret
jno
cmp
icebp
movs
bound
and
jp
jecxz
mov
mov
and
ins
dec
xor
sub
pusha
mov
xor
int3
test
jbe
jno
push
fistp
in
sbb
pop
(bad)
jmp
js
arpl
add
and
mov
arpl
clc
lock
adc
(bad)
inc
bound
jg
pop
imul
idiv
scas
push
iret
in
stos
(bad)
repz
push
mov
(bad)
sbb
dec
out
aam
sub
jnp
bound
fistp
das
sub
dec
jmp
pop
dec
sbb
dec
pop
mov
lods
mov
jae
inc
adc
addr16
out
add
sahf
jg
add
int
inc
or
xlat
dec
or
(bad)
xchg
es
push
cs
push
push
jbe
sub
hlt
clc
cmps
out
fstp
sbb
adc
lds
mov
gs
pushf
pop
arpl
dec
sub
retf
jecxz
sahf
clc
mov
pop
aaa
and
and
jbe
xchg
stos
shr
sahf
and
(bad)
call
out
inc
or
add
dec
sti
(bad)
xor
xchg
add
push
pop
mov
icebp
retf
xor
sub
add
rep
or
push
in
dec
add
xlat
mov
out
mov
fs
stos
es
mov
int3
xchg
or
and
les
imul
movs
jnp
push
fild
frstor
or
and
inc
push
xlat
cmp
push
push
jnp
ss
outs
cmp
cdq
ins
outs
cmp
dec
cli
out
push
in
ror
retf
test
cmps
int3
pushf
push
add
scas
call
cmp
add
push
popf
or
cmp
popa
pop
pop
mov
das
mov
sbb
popf
les
sti
fs
jnp
jns
sbb
fcom
mov
mov
call
dec
js
dec
rol
jmp
hlt
movs
pop
ret
and
icebp
popa
and
sbb
cs
cld
mov
xchg
popf
mov
out
lods
sahf
xchg
aam
cmps
dec
inc
sub
adc
aam
sbb
fcomp
out
cs
imul
sbb
loopne
mov
aad
xor
push
in
(bad)
fild
dec
hlt
push
add
imul
fcmovnb
nop
cmps
add
mov
cmp
loop
pop
xor
sahf
pop
stos
sbb
sahf
sbb
out
pop
sub
mov
mov
jno
xchg
sub
stos
lods
pop
mov
bound
jo
in
out
mov
xchg
dec
ror
sbb
mov
or
mov
dec
jg
lods
mov
jmp
shl
and
or
das
cmp
mov
into
jo
mov
test
call
push
ja
aad
pop
jge
or
mov
fwait
retf
xchg
sub
jne
mov
bound
mov
jp
push
dec
add
cmp
out
lahf
das
jno
cs
outs
cmp
pop
pop
dec
test
mov
xchg
inc
data16
jno
push
bound
je
add
enter
stc
jo
xchg
pop
or
cmp
test
call
(bad)
or
mov
jmp
loop
je
(bad)
mov
xchg
mov
xor
cmps
jne
push
push
popf
(bad)
icebp
cmp
mov
les
ror
xor
inc
jp
jecxz
repz
pop
loop
mov
imul
popa
xlat
dec
adc
sbb
dec
outs
fstp
adc
mov
inc
out
adc
pop
fs
jmp
jmp
sub
sbb
dec
std
fidivr
push
push
or
(bad)
cli
(bad)
push
mov
sti
xlat
pop
dec
mov
pop
adc
int3
stos
mul
add
push
loop
xor
je
outs
(bad)
adc
inc
and
in
aam
sti
imul
outs
sbb
adc
adc
das
xlat
ja
inc
adc
adc
dec
outs
test
mov
in
ss
push
cmp
dec
push
mov
jne
shl
cmp
mov
or
mov
dec
(bad)
mov
in
pop
jbe
push
push
xor
push
mov
jmp
fnstsw
das
aaa
xor
int3
es
lods
sub
das
or
rcl
add
retf
add
lods
lods
into
outs
inc
test
fsubr
add
cmp
xor
data16
jno
dec
sub
dec
push
or
fsubr
or
shr
in
jns
and
stos
enter
test
bound
ins
daa
pop
enter
popf
sbb
xor
inc
mov
sar
mov
dec
or
sbb
adc
scas
mov
mov
or
ror
ret
mov
pop
push
sub
add
dec
loope
call
ss
xchg
in
cmps
sub
cmp
push
into
pushf
shr
retf
enter
repz
add
lock
sti
push
mov
jp
(bad)
in
(bad)
dec
std
mov
jnp
xor
and
out
fisub
push
xchg
outs
mov
and
inc
or
and
sbb
test
rcl
(bad)
pop
mov
inc
outs
rcr
add
or
sbb
xor
shr
xchg
dec
sar
ja
mov
(bad)
cmp
int3
mov
stc
(bad)
test
popa
add
push
dec
mov
sub
jmp
push
movs
std
fadd
in
cmp
dec
and
ja
inc
jl
or
jle
mov
jl
jbe
fidivr
out
or
cmps
push
inc
add
outs
xchg
mov
add
add
(bad)
mov
jae
push
xchg
ret
ds
je
jb
aad
jmp
sub
mov
fimul
aam
popf
rcr
cwde
enter
ds
in
mov
mov
dec
cmps
mov
jmp
hlt
cdq
js
hlt
loope
shl
int3
lods
xchg
and
aad
fstp
mov
pop
and
or
pushf
adc
pop
pop
int
xchg
pushf
bound
mov
push
pop
push
jecxz
arpl
or
mov
fldcw
and
mov
test
xchg
and
cmps
mov
in
xlat
mov
adc
cmps
jge
push
jns
pop
mov
jp
or
and
sbb
push
pop
lock
fisub
xchg
jp
jno
fistp
mov
int3
fist
(bad)
cwde
xor
jg
out
fwait
jnp
loope
sub
push
or
and
dec
mov
aam
inc
xchg
rol
out
sub
inc
sbb
sub
mov
(bad)
(bad)
ins
loop
cmc
inc
push
das
je
sbb
sbb
movs
mov
(bad)
pop
addr16
sbb
push
jmp
aad
pushf
wrmsr
xor
neg
xchg
mov
mov
fnstcw
mov
or
fnsave
or
fs
sbb
popa
in
pop
js
aaa
lahf
xor
lods
xlat
(bad)
ja
call
stos
sub
mov
jns
loop
bnd
cld
popa
lods
ret
test
mov
xchg
mov
add
push
lods
shl
(bad)
daa
(bad)
stos
rol
xor
jmp
lea
clc
inc
das
inc
dec
sub
fnstcw
cmp
inc
outs
call
ja
in
cld
sub
mov
fdivrp
rol
dec
xchg
rcr
sti
inc
stos
loopne
loop
fs
into
mov
mov
ficomp
push
inc
js
push
call
retf
cmp
or
lods
pusha
adc
mov
or
stc
fiadd
enter
dec
sbb
test
hlt
out
outs
js
cld
loope
cmp
add
jns
fisttp
jmp
rcl
push
jae
fcomp
mov
(bad)
sbb
in
es
lea
rcr
cmp
lods
std
fiadd
adc
ror
pminsw
jmp
dec
cmp
and
js
or
xchg
jmp
loope
and
sahf
add
sbb
pop
sub
out
and
cdq
mov
mov
push
or
cmp
xor
pop
mov
push
(bad)
mov
scas
cs
mov
sub
stos
fsubr
fyl2xp1
ror
push
push
xchg
iret
cld
rcr
fwait
nop
jmp
add
push
mov
inc
int3
xchg
cmp
outs
sar
pop
stos
mov
jnp
push
fs
pusha
repz
cmp
jg
or
call
(bad)
push
icebp
adc
ror
aaa
push
pusha
mov
adc
ror
pop
clc
jle
fs
ins
dec
add
jnp
inc
jbe
push
sub
pop
cdq
call
fisubr
daa
sbb
and
xlat
shl
push
mov
test
hlt
cld
imul
je
es
or
mov
push
adc
jecxz
dec
inc
pushf
stos
sub
dec
or
sub
pop
mov
xchg
push
cs
jnp
aas
xlat
push
call
pop
cmp
add
loop
add
mov
(bad)
retf
xchg
or
jo
and
in
push
std
pop
xchg
aad
xchg
call
fmul
pop
hlt
sbb
ja
in
jns
dec
and
mov
jo
jne
test
push
and
pop
mov
cmc
movs
lahf
cdq
fs
jmp
mov
(bad)
outs
ret
cdq
xlat
push
xor
(bad)
fidiv
sub
xchg
and
pop
fwait
or
(bad)
or
(bad)
loopne
pop
popa
mov
sub
sub
jnp
leave
sbb
fsubr
sahf
rcl
and
stc
or
mov
je
pushf
cwde
rol
xchg
retf
push
inc
fadd
jp
cmps
ja
xchg
pop
push
push
inc
push
fimul
xchg
or
jb
and
hlt
and
mov
(bad)
enter
mov
mov
test
(bad)
gs
sbb
(bad)
arpl
push
jno
push
or
das
cmp
push
jae
cdq
fwait
cmp
and
movs
cs
pop
(bad)
imul
sub
gs
rdtsc
stos
lea
sahf
cmp
lock
int3
dec
and
(bad)
sub
adc
pop
mov
(bad)
in
ret
data16
leave
cmp
mov
xor
loopne
aam
inc
mov
je
call
out
inc
lock
inc
cmp
or
xchg
jns
jnp
push
outs
sar
loop
les
mov
mov
not
mov
std
imul
pop
cmps
mov
(bad)
add
movs
into
and
push
xchg
push
inc
outs
lods
push
and
xor
je
xchg
test
js
idiv
aaa
ds
inc
std
hlt
push
mov
cmc
cdq
pop
add
fisubr
dec
dec
xchg
(bad)
mov
dec
int3
ret
sub
or
push
pop
mov
or
xchg
mov
mov
outs
inc
ins
inc
mov
popa
mov
test
cmp
push
daa
xchg
(bad)
jl
adc
int
sbb
fmul
into
jno
xor
fld
repnz
test
jnp
fisttp
mov
sbb
sahf
lock
mov
lea
loop
jne
call
sub
std
fldenv
mov
paddusb
push
enter
sub
fs
adc
rcl
push
pop
fistp
mov
jge
aad
pop
sar
inc
sar
pushw
pushf
pop
aam
outs
stos
fidivr
push
pop
sub
dec
test
arpl
int
add
push
lods
dec
sub
push
imul
addr16
cmp
ror
data16
test
cmp
out
(bad)
or
cmp
in
pop
adc
inc
xlat
repz
pop
cld
fwait
mov
add
popf
ret
jne
or
out
(bad)
sar
xor
jno
dec
pop
ins
push
inc
out
inc
std
xchg
unpckhps
jge
dec
sbb
add
leave
jecxz
xchg
scas
adc
xchg
xlat
xadd
xor
mov
xor
or
mov
call
add
pop
lods
stos
xchg
in
cmp
sar
inc
js
adc
int3
inc
xlat
sbb
jg
push
in
inc
ja
or
mov
(bad)
ffreep
(bad)
cld
arpl
cmp
push
push
pop
jnp
lahf
dec
stos
fld
push
xor
lock
mov
or
or
inc
shl
xchg
(bad)
in
push
test
xor
stc
enter
neg
stos
jmp
imul
and
cmp
jle
retf
aam
adc
jne
mov
inc
jno
pop
mov
jge
cld
aad
fwait
rcl
jb
into
and
pop
jle
push
in
shl
pop
jmp
inc
jmp
leave
mov
xchg
das
les
ss
adc
mov
sub
fild
call
nop
push
inc
mov
or
jge
xchg
add
in
xor
rcl
pushf
and
inc
inc
mov
popa
xlat
sar
inc
sub
dec
test
add
xor
call
or
ins
xor
jno
int
daa
leave
sti
add
mov
jl
mov
pushf
stos
sbb
sbb
dec
pop
xchg
and
hlt
inc
lock
pop
push
lods
lock
icebp
fstenv
cld
leave
lock
pop
xchg
xchg
fimul
push
je
aaa
fidivr
ins
xor
jnp
push
mov
xor
ror
mov
lods
pop
mov
icebp
push
mov
das
gs
add
jl
push
js
inc
push
rol
jecxz
or
pop
sub
in
or
data16
stc
outs
rcl
loopne
sbb
add
dec
dec
xor
cmovb
(bad)
xor
push
mov
push
test
sbb
popf
and
sbb
and
std
sub
aad
fcom
dec
mov
mov
or
sub
mov
stos
daa
pop
inc
and
push
or
or
mov
in
jns
cmp
(bad)
retf
ret
(bad)
arpl
fdivr
int3
inc
xor
inc
out
adc
ins
scas
jge
(bad)
cmp
pop
in
out
fcmovb
jecxz
pop
jecxz
adc
inc
dec
adc
out
mov
mov
test
and
(bad)
push
and
pop
xor
and
sti
pop
xor
rol
cld
cmp
add
ror
jg
mov
mov
xadd
xchg
mov
arpl
xor
and
ret
xor
pop
mov
sub
add
xchg
mov
cwde
lods
sbb
cmp
std
jge
push
or
inc
push
dec
add
xor
sbb
repnz
(bad)
jl
mov
fnstsw
jne
cmps
or
xor
or
cmp
sahf
add
pop
aad
push
cli
mov
xchg
iret
cmp
cmps
cmp
push
clc
adc
xlat
cld
add
push
sahf
xchg
sbb
push
pop
fwait
cli
pop
ds
out
push
mov
test
adc
cwde
ficomp
push
adc
and
mov
cmc
sti
jl
inc
nop
scas
xlat
(bad)
scas
fimul
(bad)
xchg
dec
shl
jl
mov
in
out
fcom
cmp
jns
cmp
mov
pop
loope
sar
mov
cld
pop
sbb
inc
jmp
or
ds
movs
call
xchg
mov
adc
pop
and
cmp
cdq
aas
call
sub
repnz
loope
jmp
mov
mov
fild
cwde
stos
cmp
adc
mov
aaa
xchg
inc
inc
mov
(bad)
jno
adc
xor
jmp
rcr
push
imul
pop
inc
mov
jo
pop
mov
sub
push
or
rcl
fst
cmps
not
das
(bad)
sub
pop
cmp
cmp
fdivp
pop
push
push
adc
push
aam
ror
jno
sbb
scas
mov
pushf
pop
mov
rol
cmc
cmp
jg
sub
xor
outs
fldcw
mov
push
lock
or
and
stc
retf
dec
and
cmp
sub
inc
pop
inc
xchg
jno
or
mov
sub
test
je
aam
add
push
cmp
xchg
cmp
sar
ret
js
cwde
hlt
adc
sub
inc
repz
(bad)
cmp
js
es
mov
sahf
icebp
ins
shl
arpl
jle
sbb
jnp
jnp
cmp
push
imul
push
sub
test
retf
neg
imul
xchg
add
inc
pop
mov
sub
or
shl
or
ja
ret
xchg
aaa
pop
cmp
ret
imul
ins
xor
sbb
dec
lahf
mov
test
dec
in
ret
scas
sbb
cmps
jb
aaa
sbb
or
iret
sbb
cmc
(bad)
mov
data16
movs
stos
inc
xchg
add
rcl
sub
fld
stos
push
mov
cmp
dec
push
mov
sub
add
xor
dec
inc
xchg
retf
sub
retf
movs
sub
sbb
xchg
call
dec
dec
es
cld
dec
bound
xor
mov
push
jmp
in
mov
sar
das
xchg
loopne
test
cmc
and
stos
aad
mov
pop
cmc
and
inc
cmp
add
and
shl
inc
popf
fidivr
pop
ins
xchg
push
cli
dec
cmp
mov
and
mov
push
cmps
inc
loopne
or
iret
jecxz
jl
cs
imul
add
pop
popa
mov
fs
and
aaa
jmp
int3
jnp
es
or
sub
xor
add
jge
out
out
push
dec
stc
or
push
cmp
cmp
fwait
and
dec
stos
dec
push
icebp
dec
pop
push
scas
add
xor
loop
pop
in
shr
sbb
cdq
sub
test
dec
es
xor
xchg
push
mov
adc
sbb
fild
jmp
mov
or
push
int
mov
push
or
jb
mov
fild
popf
xor
retf
aam
nop
rcr
dec
dec
xchg
lea
pop
xchg
stc
std
xchg
mov
bound
pop
mov
addr16
mov
jecxz
inc
pop
xchg
xchg
aaa
nop
xlat
cmc
imul
int
jns
xchg
or
cmp
pusha
mov
xor
adc
xor
xchg
inc
xor
mov
mov
stos
sbb
cs
push
jne
rol
sar
xchg
add
pop
cmp
sub
fcmovbe
ja
adc
push
fwait
xchg
(bad)
jge
(bad)
fsubr
ror
rol
scas
pusha
mov
sub
out
sub
leave
jg
aad
dec
rcl
or
push
push
xchg
dec
pop
and
retf
mov
and
rcl
jmp
xchg
mov
inc
pop
pop
loop
sub
push
xor
nop
lea
dec
or
sbb
cmp
imul
xlat
mov
mov
ror
mov
retf
popf
xchg
jne
mov
outs
into
test
jmp
dec
bound
or
hlt
fistp
pusha
int
inc
out
out
xor
(bad)
dec
pop
push
rcr
ret
test
jns
stos
jmp
sub
in
push
jp
mov
popa
push
sub
int3
adc
mov
enter
loope
(bad)
and
scas
push
iret
push
inc
mov
or
sar
jne
mov
xchg
inc
scas
ret
loop
or
test
rol
mov
jecxz
imul
mov
xchg
enter
mov
and
out
in
data16
pushf
ja
ja
in
sbb
lahf
rcl
sbb
popa
shr
xor
jns
push
dec
xor
sbb
fwait
int3
mov
mov
repnz
nop
inc
fs
sbb
fild
inc
mov
xor
repz
cmp
xlat
dec
or
ret
pop
lods
inc
sahf
ja
int3
inc
sbb
rol
leave
inc
add
rcr
out
aas
mov
xchg
xchg
mov
loope
sbb
pop
xor
push
jg
loopne
inc
movs
pop
xchg
daa
sbb
pusha
pushf
pop
cmp
inc
hlt
call
sub
stc
hlt
add
jne
dec
sub
dec
in
xchg
loop
mov
cmp
not
and
jae
jo
mov
jns
(bad)
cmp
cmp
hlt
ja
xor
fwait
out
pop
and
mov
jmp
xchg
xchg
cmps
push
add
stos
add
test
out
xchg
mov
jns
fsubr
pop
ss
js
sar
imul
fistp
add
in
or
push
rcl
adc
pop
fcom
pop
dec
pop
add
jle
push
arpl
in
dec
sbb
mov
cmp
inc
adc
pop
mov
mov
sub
mov
or
out
(bad)
mov
dec
or
ss
(bad)
fild
xchg
mov
pop
push
add
movs
xor
add
adc
mov
cmp
xchg
xor
adc
in
mov
mov
sbb
or
mov
call
push
(bad)
jbe
ss
mov
jo
or
xor
mov
les
jp
sub
xor
jns
jbe
shl
scas
jl
add
or
cmp
fadd
push
dec
jae
push
xchg
(bad)
repz
es
jne
lods
rol
push
inc
or
sub
ret
(bad)
and
mov
xor
jmp
or
and
icebp
in
enter
jecxz
push
xor
mov
mov
mov
scas
in
ja
pop
sub
bound
jecxz
aas
mov
retf
xchg
pusha
pop
pop
js
cmp
pop
mov
out
cli
and
out
outs
nop
aas
jb
test
pop
and
in
iret
inc
adc
cdq
(bad)
cmp
leave
xor
push
ret
mov
xor
test
cmp
iret
mov
adc
jmp
cmp
nop
imul
mov
ret
add
mov
adc
and
gs
jmp
fsubrp
cwde
je
sbb
std
outs
mov
addr16
iret
mov
push
sbb
adc
jne
mov
or
xchg
imul
pop
test
jge
jno
loop
and
jmp
cmp
push
aam
push
(bad)
jl
inc
icebp
jae
dec
sub
adc
mov
(bad)
jmp
inc
out
stc
xor
inc
loope
push
loopne
sub
sbb
lods
cmp
push
lds
add
push
xchg
adc
sub
fiadd
movd
daa
jbe
fidiv
lds
outs
addr16
pop
scas
ins
or
add
and
xlat
xor
fidiv
stos
daa
push
mov
sub
mov
rol
das
jle
inc
je
push
int3
xchg
(bad)
mov
lahf
push
(bad)
and
in
(bad)
dec
out
fwait
pushf
xor
inc
scas
sub
(bad)
xchg
daa
add
add
(bad)
aad
hlt
push
jmp
xchg
mov
cmp
pop
xor
cmp
sub
cmp
mov
add
sub
frstor
out
inc
cmps
call
xchg
(bad)
fst
out
xchg
(bad)
or
in
gs
sbb
loop
push
adc
stos
in
add
dec
js
js
addr16
leave
jecxz
out
shl
ins
dec
xor
aam
pusha
adc
push
xor
or
rol
jmp
xchg
push
imul
leave
ins
add
xchg
jnp
mov
adc
pop
pop
cld
fidiv
mov
xor
stc
test
out
daa
xor
popa
dec
pusha
jmp
aam
xchg
iret
ins
call
dec
cmps
dec
xor
call
dec
stos
test
mov
add
in
inc
fisub
icebp
mov
call
ins
and
cmp
sub
aam
xor
jmp
inc
out
sub
sbb
xor
loop
test
xchg
mov
pop
mul
aas
fs
xchg
call
mov
rol
lds
or
add
sar
add
movs
mov
test
sbb
cmc
push
pushf
retf
(bad)
pop
fist
xchg
nop
rcr
es
repnz
push
mov
fadd
in
cmp
(bad)
mov
repz
gs
pop
pop
pop
jl
cmp
adc
cmp
ins
mov
mov
or
test
dec
jge
es
loope
jae
and
push
xor
inc
lahf
addr16
xchg
mov
push
sub
out
xchg
mov
sbb
ret
push
cmc
push
xor
mov
ds
(bad)
mov
xor
sbb
js
sbb
int3
adc
out
xor
(bad)
push
scas
pop
mov
sbb
inc
xchg
fiadd
xchg
jbe
es
mov
adc
or
shrd
jmp
xor
jp
popf
lock
mov
js
fyl2xp1
ret
sbb
loope
out
add
xchg
adc
mov
rcl
jecxz
sbb
rol
ins
jl
dec
ret
std
mov
xchg
inc
out
inc
lahf
lea
rcr
jge
pop
call
leave
das
or
or
xor
jmp
cmps
add
adc
mov
(bad)
mov
push
rcl
movs
lods
xchg
daa
mov
xchg
leave
outs
lds
int
push
push
or
jmp
dec
retf
jns
imul
push
cwde
xchg
mov
xor
xor
(bad)
jmp
pop
sub
sbb
push
lock
js
cmc
repnz
and
xor
movs
clc
in
mov
jbe
cdq
shr
lods
lahf
addr16
ja
xor
lods
dec
adc
test
outs
adc
iret
dec
pop
dec
sti
pusha
cmp
add
add
out
lds
call
stc
lds
cmp
pop
xchg
jbe
in
retf
rol
fisttp
movs
into
popf
lock
xchg
ja
xchg
test
lods
call
and
xchg
adc
and
xchg
shl
xchg
xor
cli
jge
sub
repz
fcmovnbe
mov
xchg
daa
mov
cmp
imul
mov
stos
xchg
or
mov
stc
pop
sbb
(bad)
lods
daa
mov
iret
jnp
les
push
call
jle
inc
fmul
dec
scas
mov
aaa
addr16
es
add
xchg
fcomp
cmps
jne
sbb
xor
cmp
and
out
inc
repnz
pop
ja
(bad)
cmp
jno
call
pop
in
lds
xor
dec
cmp
push
repnz
mov
inc
pop
loopne
push
mov
jle
leave
xor
jmp
mov
fisubr
pop
sbb
mov
js
mov
dec
repnz
(bad)
fnstsw
cmp
push
test
test
js
sahf
int
mov
dec
enter
(bad)
cs
push
and
jl
pop
mov
call
pop
into
and
jbe
scas
or
fsub
stos
cmps
ins
push
pop
and
sbb
inc
jmp
in
fidiv
fucomp
push
sar
sbb
test
cs
cmp
or
pop
repz
repz
inc
xchg
movs
outs
in
add
gs
movs
pop
and
ss
cmc
test
ds
cmp
dec
jae
mov
pop
popa
fcomp
rcr
or
cwde
xor
mov
scas
in
mov
sbb
cmp
mov
jae
cmp
pop
rcl
and
fwait
xchg
push
mov
push
jno
lock
es
inc
div
xchg
dec
lods
mov
cdq
in
jl
inc
fdivrp
(bad)
ficom
outs
cmp
(bad)
out
inc
in
lahf
cmp
cmp
or
pop
dec
ret
cmp
pop
dec
xchg
xchg
push
cmp
(bad)
jmp
xlat
inc
nop
lods
pop
scas
imul
fsub
cs
out
push
pusha
push
int3
ja
das
mov
add
pop
xor
mov
jb
xchg
mov
sti
or
inc
and
(bad)
std
nop
push
jmp
repnz
pop
jle
leave
mov
daa
out
pusha
(bad)
or
ss
cmp
adc
add
repnz
data16
in
arpl
in
mov
jnp
call
xor
ins
inc
fisub
enter
into
retf
jg
mov
aad
sub
icebp
ret
jl
clc
fwait
cmps
in
inc
push
jge
jecxz
pushf
xor
(bad)
dec
sti
jbe
and
ret
dec
ds
adc
shr
inc
test
nop
jg
loopne
cli
add
mov
(bad)
pop
jmp
out
sar
xchg
jge
xchg
std
add
(bad)
outs
sbb
sbb
je
scas
push
and
xlat
out
push
mov
sbb
and
push
xchg
nop
aas
pop
mov
mov
mov
(bad)
dec
hlt
sub
dec
mov
dec
add
sub
add
shr
xchg
in
or
fstp
or
jp
ret
loop
or
sbb
fs
add
movs
adc
rol
int3
popf
and
jmp
pusha
nop
pop
in
pusha
shr
jbe
push
mov
ja
jl
std
pop
das
xor
sar
lahf
das
jae
push
ja
add
in
fsubp
jle
pop
sbb
mov
mov
jl
push
pusha
jns
call
adc
(bad)
pusha
push
leave
repnz
mov
cmp
inc
pop
pop
fs
xor
sbb
jmp
sub
rcl
out
cmp
mov
cmp
fidivr
jle
test
mov
repz
lods
out
push
pop
add
(bad)
adc
mov
jge
scas
mov
push
push
fldcw
aas
xlat
adc
fiadd
pop
shr
je
jmp
jg
mov
icebp
push
and
inc
jle
mov
lea
sbb
adc
inc
js
jmp
mov
cmp
and
sub
dec
mov
dec
xchg
sbb
cs
aaa
ja
or
pop
loopne
retf
cmp
add
sbb
pop
mov
lea
push
xlat
imul
dec
scas
ja
adc
push
ret
mov
sbb
jmp
dec
push
fwait
fwait
imul
add
aad
data16
add
ror
or
pop
push
bound
and
movs
mov
xor
call
lahf
push
es
test
pop
push
dec
outs
out
add
cs
mov
sbb
mov
mov
jmp
int
jmp
adc
(bad)
mov
push
cld
fs
(bad)
push
dec
xchg
retf
adc
jmp
adc
and
lods
lods
retf
fcomp
jecxz
and
(bad)
popa
lock
mov
jecxz
aaa
stos
aaa
fldenv
jge
(bad)
mov
sahf
fstp
aas
movs
shr
mov
cmp
jmp
dec
sub
scas
add
adc
leave
cdq
or
mov
pop
sbb
xor
fwait
mov
bound
in
cmp
mov
enter
xchg
inc
sub
mov
dec
push
dec
cmp
sub
jmp
push
jmp
out
popa
pushf
(bad)
ins
jmp
mov
or
mov
mov
ror
(bad)
or
jmp
xchg
or
push
sub
lahf
pop
cmp
xchg
test
xor
mov
push
cmps
movs
ret
xlat
sbb
ins
mov
lea
jno
jae
fisub
idiv
cmps
jne
lea
outs
pushf
(bad)
cs
xlat
dec
jmp
add
mov
mov
mov
dec
ret
ja
fistp
xor
cli
ja
push
xchg
jns
fwait
inc
xor
inc
lods
nop
mov
(bad)
jmp
js
mov
pcmpgtw
or
pushf
test
cli
(bad)
dec
or
mov
cmp
int
push
sbb
lock
add
sbb
mov
repz
cmps
call
jno
mov
cmp
dec
adc
xchg
xchg
cmp
dec
jge
xchg
cmp
(bad)
mov
cmp
pop
shl
mov
or
or
xor
outs
(bad)
les
sti
retf
popa
ss
xsave
jg
in
dec
je
daa
or
jecxz
sbb
push
cs
test
mov
daa
and
fadd
add
or
cmp
(bad)
fwait
jg
pop
mov
lds
mov
and
mov
inc
repz
xchg
pop
jne
ret
and
std
sahf
in
mov
outs
nop
and
stos
add
cli
xchg
pop
cmps
adc
sub
ds
mov
push
mov
clc
inc
je
iret
leave
pop
test
add
icebp
dec
fimul
jp
test
pop
hlt
aaa
or
cdq
sbb
sub
xchg
lock
sub
repz
cmps
lock
rcl
push
pushf
mov
(bad)
jge
push
stc
dec
xchg
scas
in
stos
sub
loope
mul
data16
in
cmp
jg
fldenv
cmc
inc
add
inc
pushf
hlt
inc
out
push
cs
push
outs
and
test
(bad)
rcr
cmps
inc
inc
stos
push
and
xchg
das
mov
leave
lods
pop
push
sbb
ins
in
inc
test
pop
and
leave
outs
mov
dec
cmc
push
call
mov
mov
sub
jge
jne
test
and
fucom
pop
mov
clc
imul
add
mov
adc
inc
imul
push
stc
mov
xchg
popf
and
test
jb
inc
icebp
adc
imul
mov
xchg
sub
sahf
push
test
push
push
and
ss
push
lahf
add
xchg
ds
or
test
jo
dec
inc
ins
scas
lods
xchg
jle
(bad)
nop
xchg
and
nop
pop
ret
jp
jp
dec
inc
retf
push
push
(bad)
ds
out
mov
js
or
xchg
cmp
xlat
(bad)
jecxz
lock
inc
clc
out
cdq
std
add
inc
pop
jne
popf
dec
cmp
pushf
retf
lahf
lock
dec
add
scas
imul
add
dec
or
xchg
js
xor
ss
adc
jmp
xchg
retf
call
rol
fsub
mul
inc
xor
pop
push
mov
shr
loope
or
xchg
(bad)
lock
pusha
jno
jae
sub
loope
xchg
shl
xor
mov
and
dec
inc
out
adc
test
stos
mov
sbb
out
sbb
aam
jecxz
or
cs
mov
adc
xor
out
and
pop
mov
sar
xchg
push
aam
or
sar
shr
fdivr
mov
daa
xchg
out
mov
push
mov
sub
pop
mov
rol
push
not
mov
imul
jmp
stos
inc
cwde
sbb
ds
add
outs
xchg
push
not
fadd
arpl
and
sub
movs
ficomp
mov
jns
fnstcw
mov
ret
jo
sbb
push
sub
pop
mov
dec
jmp
outs
std
leave
mov
and
push
fimul
push
rcl
inc
jl
fmul
pop
inc
mov
jnp
mov
sahf
aad
popf
fcom
or
fwait
test
sbb
jle
dec
loop
sbb
fidivr
ss
test
sub
retf
inc
adc
sub
mov
xchg
xchg
adc
ins
mov
jg
push
xor
int3
outs
loope
ss
aam
inc
cs
cmp
jns
mov
jbe
lods
ja
inc
mov
push
outs
cmc
add
cdq
mul
and
loope
sub
repz
in
aam
mov
adc
fsub
dec
fucompp
leave
int
shr
mov
shl
mov
cmp
and
mov
cmp
rcr
pop
mov
sub
mov
pop
inc
clc
xor
call
(bad)
iret
jo
cld
sahf
scas
sub
fldenv
test
mov
jo
pop
mov
or
fsubr
mov
retf
nop
(bad)
xor
adc
sti
or
das
cli
fdiv
dec
mov
imul
aaa
xlat
call
sahf
jmp
mov
sbb
mov
lea
adc
ss
fs
sbb
inc
push
in
push
imul
addr16
mov
mov
loop
cmp
pop
push
mov
mov
sub
xchg
test
jne
sbb
arpl
xlat
jb
iret
aam
and
jp
sub
stc
pop
adc
fdiv
ror
jge
xchg
test
arpl
jge
scas
inc
rol
sub
in
frstor
idiv
push
je
inc
mov
inc
lahf
ins
sub
adc
add
mov
outs
aad
fwait
cmp
test
nop
fdivr
jb
jmp
xor
call
cmp
mov
lahf
jnp
pop
push
push
int
scas
and
call
hlt
jp
mov
rcl
jne
mov
in
fdiv
add
icebp
cwde
aam
mov
pop
adc
mov
push
outs
outs
sub
add
jmp
adc
into
(bad)
sbb
push
inc
sub
sub
fidiv
adc
push
fstp
fnstsw
call
sub
xor
fbld
dec
loop
and
pop
or
jbe
jmp
or
hlt
aas
test
or
movs
xchg
nop
loopne
out
mov
outs
call
aas
lds
(bad)
jae
add
aaa
jno
mov
dec
mov
push
mov
arpl
fstp
movs
bswap
pop
(bad)
xor
xor
shr
out
pop
mov
mov
leave
and
gs
fst
clc
lods
into
mov
xor
cmpltps
(bad)
jmp
test
inc
aam
cld
fs
clc
sub
jo
xor
sbb
xchg
dec
add
ins
add
outs
adc
mov
push
lock
xchg
cmps
push
jmp
pusha
push
(bad)
ret
dec
xchg
sbb
xchg
test
jl
pop
cmps
sub
aam
enter
xchg
sti
and
add
mov
jl
fwait
enter
add
(bad)
jge
je
pop
mov
mov
adc
leave
aad
push
loope
arpl
mov
jae
ret
jae
sub
jb
mov
popa
outs
imul
jg
sbb
add
shl
cdq
xchg
xchg
adc
retf
jno
cli
adc
cmp
xor
sub
xor
mov
xchg
in
push
lahf
sahf
and
or
ret
and
adc
out
mov
jnp
ja
out
clc
jg
aad
ds
shl
dec
icebp
xlat
adc
in
pop
inc
dec
and
out
ja
dec
cmp
repz
mov
mov
repz
outs
dec
sub
sbb
xchg
inc
adc
mov
push
clc
or
sbb
mov
es
adc
xchg
mov
mov
jge
push
inc
popf
ins
(bad)
jae
mov
ss
jp
inc
sub
mov
stos
and
scas
test
pop
aas
adc
fcmovu
xchg
rcl
aaa
add
adc
movs
cmp
push
add
inc
out
jnp
jecxz
mov
mov
add
adc
add
nop
mov
outs
outs
cmps
nop
outs
cmps
lods
call
dec
fsubr
inc
jl
adc
mov
add
adc
dec
jecxz
sti
add
mov
mov
and
sub
fld
test
inc
jmp
gs
xchg
fbld
addr16
push
js
mov
nop
iret
push
jae
or
mov
jecxz
and
rol
rcr
sti
xchg
add
mov
xor
jae
mov
pshufw
daa
or
ins
cmps
mov
add
pushf
jnp
cmp
push
cld
cmps
scas
pop
ror
cmp
hlt
or
test
inc
mov
push
xchg
jbe
xchg
mov
cmps
mov
and
jmp
mov
push
ret
shl
sti
data16
and
mov
ins
in
gs
inc
sbb
jg
and
lea
lds
add
sar
clc
and
xchg
cdq
movs
inc
dec
or
or
inc
cmc
push
xchg
imul
pusha
cmp
(bad)
in
imul
or
jo
mov
pusha
dec
mul
mov
bound
xchg
xor
pusha
mov
pop
sahf
pusha
std
mov
push
cmc
mov
or
fcomp
addr16
mov
call
mov
(bad)
and
add
or
test
xchg
mov
ret
mov
call
jg
test
jp
popf
push
pushf
aam
add
fs
clc
out
inc
icebp
add
scas
mov
mov
ret
ret
or
dec
movs
mov
push
aam
adc
inc
and
or
pusha
pop
cld
loop
int3
inc
adc
cwde
mov
js
inc
or
fdivr
neg
daa
test
and
jl
inc
lods
push
lods
(bad)
inc
sub
movs
or
dec
fidivr
leave
xchg
test
into
jmp
jno
imul
adc
mov
mov
xor
dec
push
std
popf
js
mov
outs
fild
fsubr
ret
retf
adc
ja
sbb
mov
jl
add
das
inc
add
shl
cmp
xor
fadd
(bad)
xchg
aad
test
jae
dec
lds
add
push
mov
mov
pop
push
(bad)
(bad)
leave
mov
jae
aam
int3
adc
sbb
das
sbb
pop
sub
lahf
bound
mov
xchg
mov
jmp
inc
push
or
test
add
xchg
xchg
rcl
cmp
pop
sbb
and
mov
dec
fcom
repnz
mov
pushf
in
or
arpl
mov
cmp
(bad)
jnp
movs
lods
cmp
lock
(bad)
mov
clc
xchg
mov
jecxz
imul
shr
cmp
jb
shl
pop
jns
sub
rcr
sbb
mov
(bad)
repz
(bad)
push
in
push
repz
add
mov
jbe
jo
pop
pop
pop
jmp
stc
in
inc
stos
in
xchg
pop
inc
mov
jmp
outs
jmp
or
imul
pop
push
sbb
enter
sahf
mul
dec
(bad)
sbb
mov
out
test
aad
movs
(bad)
xor
int3
push
jns
xor
add
mov
inc
or
ret
cs
(bad)
stos
jmp
sub
arpl
dec
int
mov
pusha
adc
jmp
neg
dec
outs
test
sub
inc
outs
inc
(bad)
jle
in
fcom
dec
outs
jge
mov
mov
or
or
retf
aad
jae
mov
adc
out
pop
inc
jae
push
add
div
pop
xor
test
(bad)
imul
and
mov
lods
pop
stc
xor
imul
dec
icebp
inc
add
sbb
ins
pushf
popf
mov
or
mov
push
cmps
cmp
inc
inc
stos
pop
neg
jnp
loop
adc
cdq
mov
lods
mov
or
pushf
das
push
add
stos
pop
iret
adc
popf
ds
int
adc
cmp
xchg
ins
sti
push
mov
js
retf
aaa
mov
pusha
in
in
outs
scas
dec
stc
ins
(bad)
popa
ror
test
(bad)
mov
(bad)
or
mov
and
push
icebp
add
pop
stos
test
ficomp
(bad)
jmp
sar
cmp
jns
xchg
ds
or
stos
mov
xor
mov
cdq
or
and
out
lea
stc
and
scas
fwait
in
mov
(bad)
fld
add
outs
and
fisubr
xchg
adc
xchg
dec
add
aas
inc
ret
ds
and
ins
add
iret
jb
test
or
into
iret
lods
adc
ror
or
jecxz
mov
mov
sbb
(bad)
mov
mov
inc
inc
mov
leave
mov
jne
pop
sbb
mov
popa
xor
movs
movs
fadd
mov
sbb
or
xor
add
retf
xchg
ror
outs
aas
jno
mov
mov
gs
loopne
pusha
adc
(bad)
icebp
int3
mov
imul
shl
jnp
jne
loopne
sub
sbb
push
clc
push
pusha
cmp
icebp
int
mov
test
mov
jbe
mov
jae
xchg
push
nop
mov
shl
and
call
test
lds
cmp
sub
mov
fisub
(bad)
out
push
ja
or
jne
and
addr16
pop
xchg
scas
add
mov
cmovbe
pop
and
adc
mov
out
push
repnz
mov
or
aam
in
pop
icebp
dec
mov
xchg
fidiv
pop
dec
jp
mov
mov
fwait
arpl
sbb
shr
into
ins
inc
add
inc
mov
outs
call
movs
ret
sbb
and
sar
sahf
sub
loop
add
mov
(bad)
or
outs
and
movs
in
popf
jno
rcpps
jecxz
and
add
arpl
mov
dec
pop
push
stc
ds
dec
rcl
sub
sbb
push
add
sahf
pop
push
dec
add
and
dec
fcomp
push
xor
fstp
cmp
shl
cmp
add
jp
aas
sbb
hlt
inc
cmp
rcl
retf
add
xchg
ret
cld
ret
retf
pop
fist
pop
les
jae
mov
ss
movs
movs
cmp
push
mov
shr
adc
cld
test
ins
fldenv
xchg
stos
ja
jb
das
jg
pushf
pop
rcl
js
les
iret
leave
jp
inc
je
sub
ret
jge
push
(bad)
enter
xchg
or
sbb
cmp
mov
int
jae
sbb
xor
dec
test
inc
pop
retf
or
jb
std
and
xor
lahf
fistp
dec
imul
ss
push
sub
sub
mov
test
lea
push
jne
in
les
or
repnz
loop
out
and
(bad)
cmps
hlt
popa
sub
push
lahf
cmps
jp
xchg
cwde
aam
and
fistp
ret
fld
fidivr
icebp
cmp
test
rol
fwait
fwait
mov
adc
dec
stc
fsubr
and
sbb
repz
iret
mov
enter
sub
jb
push
movs
pop
call
(bad)
out
movs
adc
test
push
in
in
les
jle
jge
ret
xor
dec
jg
aam
inc
dec
ror
fiadd
mov
cmps
mov
jge
mov
pop
mov
test
xor
rcl
push
(bad)
sub
int3
pusha
dec
pop
and
fld
sub
xchg
fnsetpm(287
cmps
sahf
imul
xchg
out
sbb
or
sti
push
mov
jne
sub
xor
mov
arpl
jmp
mov
out
mov
adc
call
sahf
mov
mov
sbb
rol
sbb
mov
sub
or
je
xor
push
(bad)
jmp
dec
sbb
int
jecxz
shl
or
inc
mov
ss
sahf
fld
xor
aad
data16
sub
jle
mov
(bad)
repnz
sahf
dec
enter
xchg
loope
gs
mov
cld
jns
das
mov
imul
push
mov
or
test
stc
mov
cwde
xor
adc
inc
cli
cmp
and
push
mov
bound
add
push
mov
jno
cmps
ret
idiv
pusha
sbb
push
adc
aad
daa
and
dec
out
mov
aaa
icebp
inc
call
mov
(bad)
xchg
loop
dec
jnp
xchg
hlt
dec
mov
shl
mov
inc
xchg
fadd
dec
cmp
xor
(bad)
stc
bound
daa
pop
or
pushf
jmp
pushf
jns
cdq
lods
sub
pop
lea
inc
(bad)
mov
int3
daa
lds
std
xor
sahf
sub
add
cmc
aas
mov
repnz
jb
iret
add
dec
inc
jae
push
(bad)
repz
sbb
mov
pop
inc
lahf
les
es
mov
les
mov
lods
ins
sti
adc
or
dec
test
test
pop
ins
sar
jnp
cmc
out
xchg
outs
xor
cld
bound
push
clc
sbb
mov
hlt
sahf
in
jmp
pop
cmp
jmp
out
adc
daa
cmp
xor
pop
hlt
sub
in
pop
fstp
neg
into
imul
cmp
mov
clc
loop
push
das
movs
jmp
pop
in
add
stc
fnstcw
arpl
fidiv
sub
(bad)
hlt
or
int
aad
pushf
jbe
cmp
or
sbb
loope
xchg
lock
dec
push
cmps
jne
adc
cmp
sub
imul
inc
cmp
mov
mov
test
mov
mov
xchg
xchg
aam
jno
mov
imul
fsubr
xchg
cmps
dec
adc
inc
mov
nop
(bad)
ins
in
sub
mov
adc
jae
ja
cs
popf
pusha
add
sub
xor
loop
lea
mov
ja
jmp
and
jb
fistp
inc
loope
fimul
shl
mov
and
cmps
repz
test
gs
std
bound
gs
sahf
push
xor
rcl
mov
mov
or
lods
imul
or
xor
xlat
iret
retf
dec
inc
adc
retf
scas
shl
adc
pop
ret
enter
int
lock
in
cmp
mov
loope
push
daa
rcl
cmp
ins
dec
push
push
int
push
ss
jp
ror
jl
pop
enter
shl
pusha
cdq
push
sbb
dec
and
mov
sub
pop
jge
dec
adc
add
push
cli
and
dec
rol
(bad)
in
xor
(bad)
outs
add
sbb
jmp
pop
(bad)
pop
inc
arpl
clc
xchg
push
pusha
or
icebp
rcr
out
push
lock
mov
dec
pop
addr16
repz
jne
mov
mov
jnp
fcom
inc
ds
rol
inc
sub
mov
cmp
imul
mov
push
mov
inc
ds
sub
into
mov
dec
int3
mov
adc
mov
int3
lds
or
scas
push
adc
push
or
cdq
ret
scas
adc
adc
rcl
cmp
dec
jmp
adc
shl
dec
imul
and
pusha
adc
xor
outs
cmp
inc
rcr
mov
inc
cli
sub
cli
loope
xchg
and
sbb
sub
div
fs
cmp
stos
xchg
test
(bad)
stos
scas
addr16
and
sbb
mov
jae
mov
jg
sahf
fadd
mov
outs
cmp
es
adc
cld
adc
mov
rcl
push
fadd
sbb
sar
sbb
pop
rcr
pop
xchg
xlat
leave
(bad)
and
test
sti
pop
movs
pop
inc
out
push
push
sbb
or
push
sbb
ja
shl
outs
cmp
lods
inc
add
mov
jns
pushf
rcr
sub
mov
in
ds
bound
mov
ja
sub
lds
mov
arpl
test
mov
and
xchg
dec
call
inc
out
daa
mov
stc
stos
sbb
clc
mov
xchg
and
rol
mov
push
xor
(bad)
aam
int
rol
push
rcl
loopne
stos
cdq
call
push
cdq
aam
cmp
fild
ror
xchg
out
test
repz
and
imul
adc
jmp
jmp
push
sub
jge
and
pushf
clc
iret
inc
add
add
int3
push
cmp
jb
popf
add
cs
(bad)
(bad)
cmp
xor
icebp
adc
mov
xchg
push
call
dec
hlt
mov
dec
outs
std
pop
dec
stc
lahf
lds
cmp
mov
dec
in
mov
push
(bad)
fcmovnbe
and
xchg
adc
stos
push
fnstenv
xor
push
mov
dec
hlt
inc
jne
or
xor
xor
scas
sub
add
dec
aas
inc
movs
or
and
xchg
jle
test
cmp
icebp
push
dec
call
retf
fiadd
sub
cmps
ror
push
mov
adc
mov
in
push
int3
mov
mov
and
imul
jmp
icebp
dec
shl
retf
jp
call
das
adc
out
cmp
gs
push
(bad)
mov
cmp
(bad)
sar
das
inc
xchg
dec
push
jb
jns
pushf
push
xchg
idiv
push
adc
lahf
lods
sub
sub
xor
nop
sahf
fsub
jbe
pop
(bad)
dec
cmp
mov
fisubr
jl
inc
pusha
mov
sahf
test
dec
sub
mov
ds
mov
outs
push
rcl
out
mov
mov
rcl
jp
movs
push
mov
mov
adc
mov
int3
jp
popf
lahf
mov
stos
and
cwde
pop
pop
ficomp
pop
dec
mov
adc
outs
cmp
cs
mov
aam
in
sub
mov
bnd
adc
jns
cmp
cli
fbld
mov
and
mov
sahf
test
shl
call
push
mov
add
clc
dec
jns
sbb
and
jmp
xchg
mov
jno
outs
xor
jmp
cmp
aam
mov
xchg
pusha
pop
mov
loopne
sti
pop
(bad)
add
loope
pushf
pop
aas
call
xchg
push
sbb
jbe
jp
mov
pop
mov
mov
push
faddp
xchg
ret
outs
mov
mov
fdiv
sub
(bad)
iret
ret
retf
data16
ins
add
sahf
dec
push
mov
sbb
mov
outs
sub
sbb
mov
push
shl
dec
xchg
or
repnz
lock
dec
inc
hlt
cmc
jl
mov
jnp
sub
mov
sub
fimul
pop
push
jge
adc
mov
outs
xchg
or
aaa
add
je
push
sub
add
nop
call
leave
fsub
pop
mov
cmp
fidiv
mov
dec
(bad)
icebp
mov
cmp
mov
mov
(bad)
sub
sahf
lahf
stos
not
pushf
pop
cmp
xor
icebp
xchg
cmp
cmp
lahf
cmps
and
sbb
or
dec
out
add
popf
or
xor
cmps
repnz
jecxz
pop
mov
js
mov
add
fstp
int
scas
xor
inc
pusha
jecxz
mov
and
aad
mov
xchg
cmp
cmp
mov
jl
inc
jmp
test
mov
xchg
xor
and
inc
shl
in
dec
sar
lods
test
push
fidiv
stos
jmp
lods
call
stos
ret
jecxz
(bad)
cmp
sub
sbb
push
mov
push
add
ss
jnp
test
pop
data16
in
bound
out
test
xchg
(bad)
aad
arpl
mov
(bad)
std
xor
sub
scas
hlt
retf
sbb
ret
jnp
inc
pop
shr
and
pop
lods
jmp
mov
mov
popf
mov
enter
xor
sar
inc
dec
cli
bound
push
sbb
in
dec
mov
js
call
jmp
movs
mul
stos
push
nop
out
in
push
inc
inc
jg
pop
icebp
lods
cmp
dec
and
aas
int3
sbb
movs
fstp
mov
rol
aam
addr16
jmp
test
mov
jno
jl
xor
popf
ja
pop
lahf
jecxz
push
arpl
sar
jne
(bad)
test
jmp
or
push
ss
stc
mov
pop
push
dec
push
les
aas
test
jmp
jae
ja
or
scas
ins
push
pop
daa
jl
mov
xchg
pop
stos
mov
ret
or
pop
add
cmp
xchg
loope
cmp
test
and
ds
not
sbb
adc
out
ja
sbb
scas
mov
pop
movs
out
mov
or
cmp
sbb
xor
inc
test
dec
xchg
sub
jp
or
out
nop
into
imul
in
(bad)
ss
or
xor
add
inc
js
mov
mov
xchg
add
imul
mov
(bad)
and
sbb
hlt
ja
or
xchg
iret
in
cmp
push
out
cwde
imul
sbb
leave
mov
mov
loopne
iret
test
push
in
jne
punpckldq
or
push
mov
xor
ret
clc
jecxz
pusha
outs
adc
repnz
imul
inc
ficomp
out
or
dec
and
xchg
jne
cmp
mov
mov
(bad)
(bad)
lock
sub
call
xor
jnp
std
push
push
(bad)
mov
mov
and
outs
mov
repnz
cs
add
cwde
pop
bound
inc
test
and
mov
scas
push
push
inc
repz
and
sub
add
cs
mov
pushw
pop
lods
fs
in
jecxz
fist
or
fs
fcmovbe
out
jne
or
jnp
push
push
mov
cmp
push
and
jp
leave
pop
jge
jecxz
cmp
jns
jle
pop
sahf
mov
push
aad
mov
ins
adc
sub
inc
push
ret
movs
out
in
loop
cmp
pop
stos
jae
test
inc
jp
add
mov
rcr
cmp
xchg
daa
sar
ins
mov
and
cmps
xor
jecxz
repz
and
sti
fild
inc
test
shl
push
mov
jmp
sahf
je
sbb
xchg
pop
and
ss
loope
das
ja
repnz
mov
rol
sub
jns
or
sbb
mov
inc
dec
pop
push
(bad)
mov
cmc
call
xchg
cmps
inc
inc
hlt
xor
jae
das
lds
mov
or
(bad)
or
or
out
scas
rcr
idiv
pop
push
xor
push
pop
inc
stos
call
nop
cs
les
push
mov
push
or
jmp
dec
mov
ret
inc
call
jp
pop
sbb
neg
xchg
test
shr
cmp
sub
jb
test
ffreep
and
cmp
nop
scas
mov
pop
cwde
in
test
xchg
imul
imul
add
inc
imul
push
cmc
mov
ss
mov
loop
or
push
dec
sbb
mov
mov
sbb
mov
pop
into
mov
shl
shr
mov
push
les
clc
inc
mov
mov
add
iret
mov
xchg
ins
mov
into
icebp
rol
xchg
jne
jmp
jg
icebp
and
adc
outs
inc
scas
pop
inc
in
push
inc
add
xor
push
lock
xor
mov
cwde
jno
(bad)
mov
lods
adc
push
add
mov
out
ins
add
cmp
add
out
inc
push
hlt
sahf
add
(bad)
jb
cmp
mov
inc
stos
adc
fisttp
movs
mov
test
mov
cli
jmp
add
mov
push
test
push
(bad)
mov
sub
stos
push
lahf
or
xor
leave
inc
mov
and
sbb
jecxz
enter
push
xor
setbe
push
mov
pop
dec
xchg
fbstp
lock
xlat
ret
cmp
(bad)
lahf
sub
pop
push
jae
ins
push
cmp
retf
stos
lahf
cmps
push
sbb
idiv
add
sbb
jle
jb
ret
xlat
xchg
pop
int3
jb
stc
(bad)
jecxz
push
pop
push
jns
inc
not
push
add
je
dec
out
xor
(bad)
jne
dec
adc
into
test
push
pop
ins
retf
dec
jl
cld
fwait
mov
imul
ficomp
mov
pop
(bad)
and
dec
adc
cmps
mov
cmps
xor
nop
popa
int
lahf
xchg
aam
and
outs
mov
cwde
bound
inc
mov
lea
pop
pop
adc
jne
lods
in
retf
and
sbb
js
in
sub
ficomp
call
xor
test
sbb
jmp
jg
fwait
pop
mul
jb
or
test
nop
mov
dec
fucomip
mov
jne
mov
inc
out
sub
mul
sub
push
rcl
cwde
mov
mov
mov
mov
fimul
mov
movs
push
sar
mov
add
push
addr16
mov
(bad)
icebp
cmp
adc
and
mov
loopne
cmp
mov
fiadd
and
rcl
push
jecxz
or
outs
mov
or
adc
gs
mov
popf
dec
sti
mov
cmp
jnp
pop
add
push
add
(bad)
loop
in
dec
aaa
jo
push
ror
icebp
cmps
cmps
outs
loope
int3
inc
inc
adc
sbb
adc
dec
int
or
retf
xlat
mov
imul
mov
adc
icebp
push
sbb
test
push
cmp
add
mov
sub
lock
fcmovnu
pop
stos
ins
ret
and
mov
jl
push
xchg
stc
ss
loope
int
and
aam
test
fist
push
fimul
jne
out
out
mov
clc
into
clc
xchg
sub
push
jae
call
cmp
cli
mov
stos
push
jle
das
loop
gs
add
gs
popf
jb
lock
arpl
sar
xchg
in
mov
jge
(bad)
mov
dec
and
cld
xor
out
fild
and
push
mov
xor
mov
(bad)
jmp
mov
mov
mov
call
sbb
test
jns
movs
and
ins
inc
push
xor
sbb
mov
push
out
mov
leave
pop
xor
movs
xchg
ret
call
retf
lock
cdq
jae
movs
pop
adc
retf
and
pop
pop
adc
push
jb
outs
push
sub
inc
jno
mov
fist
mov
sbb
test
xchg
add
aad
cmp
xchg
inc
call
dec
push
and
out
sbb
push
cld
mov
mov
mov
add
in
popa
sbb
adc
test
dec
cmp
je
push
cmps
push
mov
std
adc
frstpm(287
mov
hlt
push
sbb
sbb
jl
lock
data16
cmp
test
jmp
inc
lods
pop
clc
inc
pop
lods
popa
aas
and
gs
xchg
rcl
retf
int
mov
aad
adc
or
bound
icebp
and
movsx
xor
cdq
jo
cmps
outs
inc
mov
ins
pushf
retf
pop
adc
pushf
aaa
xor
aaa
les
call
(bad)
cmc
jbe
ds
in
fiadd
push
adc
and
fwait
dec
cmc
(bad)
aad
sub
stos
or
or
jnp
or
sbb
imul
inc
sahf
inc
mov
xor
cwde
add
loopne
jo
mov
push
fst
mov
jmp
rcl
xchg
scas
inc
fsincos
imul
sahf
(bad)
jge
data16
fcom
jmp
stc
mov
mov
xor
xchg
in
dec
adc
leave
and
and
or
xor
sub
test
jno
lock
xor
mov
movs
hlt
push
mov
cmp
xor
call
cmp
(bad)
cmp
sbb
xchg
push
push
and
nop
out
mov
fbld
mov
xchg
popa
or
inc
jne
jno
sbb
mov
mov
imul
push
and
into
mov
mov
sub
cmps
or
mov
imul
rcl
out
inc
mov
gs
jle
mov
mov
xor
cwde
movs
sub
add
jne
iret
lock
mov
cmp
sbb
xchg
push
mov
jae
mov
fucomi
lods
fdiv
mov
inc
dec
adc
shr
movs
and
idiv
xchg
mov
mov
leave
std
push
mov
retf
(bad)
dec
cmc
and
mov
mov
pop
stc
pop
mov
test
repz
mov
mov
in
sub
sub
repnz
pop
lock
imul
and
aam
cmp
dec
xchg
jge
xchg
xchg
(bad)
loop
push
mov
fwait
adc
sti
sbb
sub
sbb
(bad)
scas
std
adc
cli
adc
stos
imul
mov
sbb
fdivr
icebp
loope
clc
cdq
pop
xchg
xchg
fadd
push
sub
xchg
sbb
xlat
hlt
pop
les
scas
stc
aad
lods
(bad)
hlt
pop
and
shr
adc
je
call
jb
mov
mov
pop
ss
int3
xchg
push
pop
pop
xchg
fwait
xchg
jno
sbb
scas
inc
pop
aam
dec
or
xor
ret
or
cmps
dec
sub
cmp
mov
or
or
mov
mov
aam
cmp
mov
(bad)
sahf
sti
adc
pushf
test
out
daa
dec
aad
movs
inc
daa
int3
and
lods
fnsave
pop
outs
sbb
es
sub
mov
cmps
mov
pop
ds
ins
std
aaa
call
adc
lahf
push
gs
jno
not
out
jg
je
sbb
fs
and
jne
in
inc
cmps
enter
add
ins
(bad)
aaa
jecxz
pop
outs
xor
cdq
add
jnp
mov
mov
sub
jp
jne
ss
add
cld
mov
sub
fmulp
cmp
fs
(bad)
outs
iret
adc
xchg
int3
fs
and
mov
stos
in
pop
data16
mov
pop
dec
inc
push
sahf
call
jge
repz
in
adc
rcl
add
inc
in
and
pop
mov
mov
cmp
mov
inc
xchg
ins
cli
mov
xchg
sub
movs
dec
test
xor
jns
cli
neg
mov
xor
scas
adc
sar
add
push
rcr
loop
push
pushf
inc
mov
cwde
jb
mov
rcr
lea
cmp
inc
in
xchg
add
leave
mov
sub
mov
loope
push
xor
pop
mov
or
mov
ret
jno
xor
add
jge
das
jne
aam
fs
mov
jmp
(bad)
xor
or
shr
inc
cmp
cmp
or
arpl
jmp
cmp
les
adc
movs
jns
addr16
test
jb
fxch
xchg
and
push
push
dec
and
in
inc
mov
aad
dec
movs
jg
jmp
and
imul
mov
sub
adc
stc
mov
pop
call
repz
adc
ja
sub
cmp
xchg
jns
dec
sbb
and
dec
mov
xchg
add
mov
sbb
push
pop
je
retf
xchg
jp
inc
fwait
mov
fidivr
and
mov
jle
or
outs
ret
mov
mov
ret
in
jge
inc
outs
fs
mov
lds
add
cmp
repnz
inc
lock
pmaxsw
aad
xchg
popa
icebp
cwde
int3
mov
cmp
cmp
rcl
les
(bad)
jge
xchg
mov
cs
es
mov
inc
cld
sub
adc
test
lods
bound
or
jae
es
push
adc
mov
jmp
outs
xchg
dec
(bad)
in
jge
xlat
or
int3
std
jo
scas
pop
aam
test
mov
xor
bnd
stos
and
push
into
jle
jge
call
sub
ins
dec
enter
adc
scas
xchg
sar
adc
sub
lock
es
xchg
fwait
shl
cmpxchg
cmp
les
mov
ret
push
or
js
and
jmp
adc
pop
fs
ins
sbb
out
lahf
cdq
mov
sbb
sbb
sbb
aaa
inc
mov
cmp
dec
daa
push
and
pop
sub
push
shl
dec
nop
cmc
xchg
movs
mov
(bad)
in
outs
jg
push
inc
sti
in
(bad)
js
test
push
out
leave
xchg
pop
or
dec
cmps
in
pop
repz
push
stos
call
fs
test
push
xor
mov
lea
mov
aam
mov
push
mov
(bad)
popa
sti
js
out
aad
loop
adc
ds
and
inc
jg
xchg
gs
mov
jle
clc
cli
in
lods
mov
jl
dec
adc
aad
adc
mov
mov
(bad)
shl
sti
jmp
movs
pusha
pop
push
sbb
mov
mov
frstor
bound
imul
pop
push
ins
sub
loop
sub
jl
pop
cmp
add
fistp
pop
test
cmc
mov
in
inc
mov
push
fcom
int3
(bad)
xchg
push
popa
pop
sahf
pop
sub
iret
dec
sbb
mov
scas
cdq
push
xchg
jb
jg
or
rcl
shr
or
aad
xchg
stos
sbb
fldenv
sar
xor
push
xor
cmc
xchg
ffree
iret
scas
ficomp
add
add
dec
jmp
fidivr
cmp
jne
pop
call
fldenv
sar
icebp
int3
imul
push
and
ins
shl
aam
or
outs
scas
pop
sahf
or
mov
adc
pop
xchg
shr
jne
cmp
push
movs
out
mov
xor
(bad)
fcomp
daa
mov
or
or
cmp
or
mov
cmp
lahf
cmps
add
adc
sub
cmp
xchg
cmps
data16
gs
jecxz
icebp
(bad)
fiadd
dec
jo
push
push
mov
mov
loopne
int
xor
enter
frstor
mov
into
popa
ror
jnp
fild
or
pop
test
push
les
mov
mov
daa
(bad)
repz
mov
push
jb
mov
and
test
inc
cmp
pop
ficom
in
cmp
inc
inc
aad
jmp
outs
dec
and
std
es
adc
pop
in
or
inc
jno
dec
mov
inc
mov
cld
push
cmp
stos
imul
jmp
adc
mov
xchg
in
std
xchg
adc
rcl
(bad)
pop
mov
cmp
ds
mov
xchg
aad
cmps
push
adc
imul
shl
cld
outs
fnstenv
jmp
loope
je
sub
rol
loop
das
pop
sbb
pop
cli
scas
jns
(bad)
stos
aam
gs
es
push
sbb
jb
out
dec
arpl
int
mov
retf
inc
xchg
mov
movs
sub
pop
cwde
in
push
fwait
mov
popf
inc
mov
jl
mov
int
fdivrp
cmp
cmp
sti
jb
iret
sbb
xchg
cmps
lock
hlt
adc
pop
shr
into
loopne
cmps
fwait
out
xchg
lahf
mov
in
mov
arpl
or
add
mov
test
ja
in
mov
or
push
cmp
dec
inc
add
push
retf
mov
inc
cmp
pop
and
or
add
jg
inc
pop
mov
popa
imul
inc
push
ins
jbe
(bad)
gs
movs
pop
sbb
xlat
lea
stc
clc
jmp
mov
xchg
inc
into
dec
mov
mov
cmp
imul
sub
popf
stc
nop
repnz
leave
je
js
mov
adc
fmul
sbb
in
xchg
ja
inc
(bad)
clc
jne
sbb
fcmovnbe
fisttp
test
es
push
out
shr
movd
mov
es
sub
mov
mov
cmp
cmp
or
xchg
adc
cmps
lds
loop
push
fwait
idiv
xchg
adc
pushf
je
adc
mov
add
retf
mov
ror
mov
lods
fsubr
sub
adc
mov
dec
out
push
xchg
or
mov
fisttp
das
or
sub
idiv
mov
fiadd
or
add
addr16
jmp
psubq
pop
outs
rcl
js
cmp
mov
sbb
arpl
push
repnz
sbb
(bad)
xlat
ins
push
nop
jnp
into
pop
lahf
mov
xor
aam
sbb
std
adc
icebp
les
popa
repz
dec
test
xlat
xchg
retf
aas
adc
call
or
sti
daa
nop
xor
js
cdq
inc
fnsave
xchg
(bad)
fimul
push
inc
mov
int3
ins
jo
pop
bound
inc
jne
jp
jmp
aam
push
mov
(bad)
mov
inc
push
mov
dec
mov
in
outs
fisttp
and
sbb
lahf
xchg
lods
arpl
test
pop
pop
dec
repnz
not
bound
ins
add
scas
cld
pushf
xor
in
movs
test
and
jl
push
add
in
out
cmp
shl
push
fnstcw
js
arpl
jecxz
test
dec
dec
add
or
sbb
dec
or
sbb
or
(bad)
mov
ja
fdiv
xchg
inc
inc
push
or
xchg
mov
mov
xor
xor
sbb
in
pop
popf
dec
jb
punpcklwd
adc
mov
jno
aas
add
test
add
fstp
pusha
movs
call
add
lds
fsub
mov
mov
pop
xor
push
mov
xchg
mov
add
cmp
ins
cs
les
inc
aam
lods
cmps
movs
cmp
add
dec
unpcklps
sbb
fnstcw
jo
lock
pop
(bad)
retf
jo
(bad)
xchg
ja
outs
xor
clc
int3
xor
inc
jmp
and
into
add
cmp
pop
cs
loop
inc
jmp
aad
xor
inc
dec
mov
sbb
sti
xor
jae
retf
mov
pop
movs
jb
fs
cmp
dec
pop
pop
in
push
imul
scas
xchg
inc
cmp
cmp
cli
xchg
daa
cmp
jae
xor
push
retf
neg
ror
shl
inc
push
cmp
int3
in
pop
mov
sub
add
add
jne
retf
lods
int
jnp
pop
push
mov
ins
daa
out
sub
clc
addr16
mov
mov
sub
pusha
pop
mov
fldcw
cdq
outs
pop
repz
ja
pop
sbb
int3
sbb
loop
cmp
jmp
cmp
aaa
dec
cmps
loopne
or
xchg
das
cmps
dec
sar
pop
mov
rol
xor
cmc
jge
fcom
jns
dec
and
dec
xor
cmp
mov
add
cmp
mov
fld
in
ins
in
dec
sub
mov
loop
sbb
jae
test
mov
imul
shr
stc
rcl
fnsave
adc
xor
xchg
mov
jb
shr
in
and
and
movs
push
arpl
repnz
clc
add
shl
pop
shrd
aam
or
sbb
add
shl
mov
mov
lea
or
test
outs
or
fwait
out
xor
dec
mov
adc
out
not
jbe
sti
inc
jp
fisubr
pop
cmp
repnz
fmul
fsub
jb
call
jl
jno
mov
or
sahf
popa
fwait
loope
jb
pushf
mov
cld
mov
call
dec
mov
xor
aam
mov
imul
xor
pop
data16
out
rol
xchg
ins
jo
out
jne
je
adc
or
gs
cmp
out
shr
inc
jg
mov
hlt
clc
dec
or
inc
mov
adc
mov
mov
xor
cmp
adc
outs
fldl2e
push
or
mov
xor
mov
cmp
pusha
pop
jne
(bad)
out
cs
neg
fisub
mov
(bad)
mov
xor
cmp
mov
bound
jno
jl
in
out
int
ja
aaa
movs
in
or
jl
int
(bad)
push
je
popf
aaa
jle
ds
scas
cmp
out
mov
std
shl
add
(bad)
jbe
cmp
iret
mov
fcomp
lea
(bad)
pop
sbb
mov
ret
fs
cmp
xchg
das
adc
jecxz
outs
fwait
aaa
push
sbb
fmul
sbb
cmp
mov
push
(bad)
sbb
and
lods
cs
mov
ins
xor
jle
dec
mov
push
add
cdq
scas
xchg
lea
push
std
addr16
aaa
lock
jae
cdq
sbb
xchg
xchg
stos
pop
fimul
das
and
push
inc
arpl
sub
mov
push
add
cmp
imul
arpl
mov
imul
in
imul
mov
dec
enter
cld
push
das
xchg
fiadd
or
adc
lds
faddp
cdq
push
mov
leave
outs
sbb
add
test
(bad)
shl
in
hlt
aaa
ds
pop
loope
dec
xor
nop
ds
jbe
out
imul
icebp
js
xlat
add
or
fcom
or
mov
stc
fisttp
retf
imul
int
jge
mov
push
mov
test
pop
mov
jns
shr
dec
aam
daa
test
pusha
shl
add
pop
(bad)
das
scas
add
xchg
mov
mov
addr16
sar
stos
xor
dec
cdq
test
jo
in
xchg
pop
(bad)
and
push
aad
dec
jo
jecxz
or
xchg
push
or
jp
push
cs
push
ret
stos
and
ins
xchg
adc
dec
scas
dec
jmp
sbb
ds
sub
movs
inc
cmp
cwde
test
add
sub
fcmovnbe
jns
xchg
fcom
xor
js
(bad)
out
jno
push
(bad)
mov
mov
icebp
das
jmp
arpl
cmp
test
jp
adc
call
sub
sub
gs
lock
xor
into
xor
sbb
dec
gs
loop
and
pusha
jbe
push
and
sub
pop
cmc
sahf
and
dec
dec
mov
cmp
outs
iret
fadd
and
push
or
(bad)
fmul
push
sub
clc
push
push
es
inc
push
xchg
push
rdtsc
stos
das
push
mov
(bad)
push
out
clc
addr16
(bad)
push
xchg
mov
inc
xor
jo
js
shr
sub
fwait
pusha
(bad)
jmp
mov
daa
in
add
movs
dec
pop
into
mov
data16
inc
add
push
aad
ret
xchg
jnp
fadd
retf
(bad)
mov
addr16
test
jle
int
add
in
(bad)
out
mov
mov
fidivr
dec
pop
cmp
xor
in
les
lock
fcomp
dec
fmul
and
and
mov
pop
leave
iret
mov
jae
add
add
xchg
fcmovne
jne
mov
xor
sahf
xor
cld
xlat
push
mov
sbb
aas
or
jmp
dec
and
push
add
add
pop
sahf
enter
clc
stos
popf
cmp
dec
jb
pop
push
out
test
add
lahf
cld
adc
jno
stos
jmp
mov
clc
pop
mov
leave
shl
mov
and
push
test
xchg
or
mov
nop
dec
ret
fld
sbb
sub
lods
bound
dec
add
cld
push
pop
call
(bad)
mov
loope
pop
imul
inc
sbb
add
jne
test
mov
ins
clc
xor
push
sbb
jb
(bad)
inc
and
push
(bad)
dec
mov
cmp
adc
xchg
pop
dec
pop
es
add
add
jns
adc
or
clc
fidivr
enter
in
sahf
sbb
cmp
adc
fwait
inc
sbb
fs
pop
hlt
jne
scas
cmps
dec
inc
into
push
bound
mov
neg
cmp
cwde
sub
test
lock
jmp
mov
adc
shr
div
in
pop
sbb
cld
(bad)
(bad)
(bad)
sbb
shl
repz
es
push
mov
popa
push
push
aam
dec
sbb
jl
addr16
push
test
cmp
in
ret
inc
cmp
or
into
xchg
aam
loop
add
dec
or
int3
out
cmp
inc
mov
xor
pop
pop
mov
mov
pop
mov
xchg
sub
adc
add
sub
or
sub
(bad)
adc
inc
movs
sbb
mov
pop
or
jmp
adc
cs
xor
cmp
jecxz
xor
push
loope
leave
push
or
out
mov
adc
push
pop
adc
jnp
push
dec
call
lea
xchg
les
lock
pop
loopne
jnp
vpandn
xchg
ror
xchg
fsubp
retf
test
ja
movs
mov
sub
repz
ja
aas
ret
jbe
(bad)
(bad)
loop
dec
or
mov
xchg
fucomip
popf
sub
or
dec
pop
test
jns
sub
cmps
lods
cdq
ins
fidivr
outs
shl
dec
pop
jmp
pop
repz
stos
and
test
push
dec
push
jecxz
cmp
movs
xchg
stos
xchg
inc
addr16
fidivr
xor
into
clc
pop
mov
pop
out
mov
push
in
fist
push
cld
push
lods
xchg
or
xor
xor
cmp
in
add
pop
hlt
shl
push
dec
ss
push
sbb
sbb
stos
lahf
jmp
popa
jg
pop
stos
mov
jmp
add
dec
adc
enter
pop
dec
inc
inc
push
push
xor
sahf
retf
push
mov
shl
aad
mov
cmp
jmp
sbb
aaa
pop
xlat
loope
mov
xor
nop
cmp
mov
mov
je
push
icebp
shl
add
in
add
inc
es
sbb
(bad)
(bad)
dec
dec
mov
dec
ss
mov
jno
xor
rol
movs
cs
iret
or
xor
data16
arpl
jg
aas
or
xor
push
xchg
mov
ffreep
push
push
pop
xchg
xchg
inc
into
sub
sbb
dec
sub
out
jno
jns
idiv
pop
ror
xchg
jno
into
cs
inc
inc
lahf
cli
sub
jae
push
in
imul
shr
xor
inc
(bad)
loope
sbb
jb
jbe
cmp
pop
les
add
into
test
push
hlt
push
jae
cmp
cld
and
push
mov
scas
xor
call
and
jmp
movs
xchg
cld
and
stos
test
dec
mov
inc
mul
ret
adc
mov
nop
pop
cdq
jnp
jmp
mov
pop
outs
sub
xchg
out
pop
sbb
scas
push
mov
fs
das
xchg
mov
test
das
in
div
(bad)
xchg
lock
pop
mov
pop
or
pop
push
dec
loop
mov
rcr
mov
into
pusha
push
xchg
pushf
mov
dec
enter
je
ss
stc
dec
cmp
push
in
push
lods
xchg
sti
pop
cmp
inc
clc
push
into
mov
xor
cld
push
rcl
gs
mov
adc
sbb
xor
aad
sub
xor
iret
clc
loopne
inc
rcl
xor
xor
cmp
sub
cli
leave
xor
and
arpl
cdq
xor
mov
mov
push
jl
push
das
push
mov
cmp
ins
in
mov
loopne
push
sbb
jmp
enter
(bad)
ret
outs
dec
mov
or
(bad)
add
fldenv
in
rol
inc
push
and
push
ret
ficomp
pop
mov
xchg
jge
stos
(bad)
popa
jb
push
div
loop
adc
jg
sbb
test
mov
push
cmp
push
push
push
aam
cdq
xchg
push
mov
xchg
lods
add
dec
mov
cwde
or
js
std
jl
cmp
cmp
add
das
lea
sbb
(bad)
jne
inc
adc
in
sbb
jmp
mov
pop
outs
shl
repz
popf
push
test
cmp
push
jb
adc
(bad)
jns
rol
pop
sbb
mov
retf
inc
loope
dec
test
push
push
inc
mov
lahf
jp
xchg
sahf
fsubr
jmp
sbb
in
mov
push
cld
out
dec
cdq
xchg
not
or
mov
mov
shl
in
retf
jecxz
sub
or
fcom
data16
fistp
sub
imul
add
xor
pop
aam
adc
jmp
repz
sub
enter
sub
sub
add
push
repnz
js
dec
(bad)
add
inc
ss
inc
mov
mov
dec
rcr
add
(bad)
ret
pop
lock
and
xchg
pop
mov
fbld
adc
dec
repz
nop
fdivr
dec
cmp
ficomp
pop
push
ret
(bad)
and
adc
ss
(bad)
mov
cmp
pop
adc
inc
cmp
sbb
iret
inc
push
not
xor
out
add
sbb
jae
imul
dec
out
scas
dec
sub
lods
in
push
mov
pop
or
dec
push
mov
pop
inc
mov
bound
sub
pandn
cmp
or
push
sar
ror
mov
sub
mov
sti
xchg
ficom
imul
ret
mov
sar
xor
sub
and
das
mov
inc
rol
in
dec
(bad)
jl
test
leave
cmp
add
pusha
shl
enter
dec
popa
fsubrp
cld
test
push
sbb
jbe
aas
mov
mov
out
ins
jo
mov
xor
loop
int
popf
add
js
adc
aaa
sub
or
pop
adc
dec
jmp
addr16
shr
bound
pop
jp
in
mov
push
cmp
or
and
jle
mov
mov
mov
out
loop
fwait
arpl
cmp
xchg
mov
mov
retf
imul
fstp
bound
sti
mov
retf
or
mul
cmp
sar
retf
jno
xor
push
lea
and
int3
xchg
lds
mov
lds
jnp
mov
push
mov
sti
out
movs
cli
sub
daa
inc
pop
push
jp
ror
(bad)
push
xchg
iret
push
js
cmp
sbb
rcl
aam
leave
xchg
and
sbb
jae
fs
inc
(bad)
mov
aad
mov
cwde
mov
adc
xor
sub
in
int
pop
mov
dec
pusha
jmp
sbb
inc
rcr
inc
gs
and
div
add
and
xor
retfw
mov
(bad)
rdpmc
xchg
cld
jl
stos
jle
dec
xor
(bad)
mov
int
or
inc
xchg
add
std
sub
cld
and
ds
mov
inc
mov
add
xchg
rcr
mov
add
dec
sbb
push
add
dec
call
jb
aas
lahf
and
jbe
cmps
cmp
mov
push
xchg
dec
stos
or
xchg
dec
(bad)
int
dec
add
adc
cmp
inc
ins
xchg
ss
and
and
mov
and
sbb
test
imul
xor
je
push
dec
jbe
ja
fldz
mov
jg
xchg
xor
mov
mov
(bad)
(bad)
sub
cmps
jmp
inc
cmc
pop
paddq
cmp
ds
(bad)
mov
ret
jmp
pop
cmps
enter
movs
dec
bound
fidivr
(bad)
dec
arpl
and
dec
adc
sub
jno
das
dec
in
mov
clc
or
jb
les
loope
int3
stc
rcr
(bad)
stc
popf
cdq
outs
sbb
movs
ret
or
ja
xchg
sub
mov
aad
stos
retf
mov
lods
clc
and
xchg
pop
out
jnp
mov
(bad)
xchg
add
dec
jb
shr
jno
sbb
out
adc
jbe
or
sub
mov
jg
in
retf
adc
cld
aas
push
shl
stos
add
scas
xchg
add
repnz
mov
fs
xor
pushf
not
pop
sub
stos
mov
add
add
push
sbb
(bad)
retf
jbe
sub
mov
ins
mov
out
adc
adc
loopne
sbb
mov
cmp
jo
dec
pop
mov
fdivr
push
fsubr
push
mov
push
loope
loopne
or
sbb
mov
dec
ficomp
pop
push
mov
dec
sub
sub
inc
sahf
cmp
mov
sti
pop
xor
push
pop
dec
pop
jp
mov
data16
mov
pop
fist
xor
adc
stos
dec
mov
sub
(bad)
scas
pop
std
or
and
jbe
mov
add
jge
mov
or
or
enter
idiv
lods
pop
stc
and
das
lods
rep
jae
mov
jle
cmp
and
pop
leave
and
xor
loopne
lds
enter
sahf
jp
push
push
dec
cs
xchg
sub
jne
loop
cdq
pop
and
dec
mov
in
int
cli
and
(bad)
xchg
inc
fisttp
les
inc
pusha
xchg
jmp
es
inc
and
jle
addr16
sub
push
mov
mov
fsubr
add
mov
loopne
jp
dec
xor
aad
cmp
call
mov
pop
cmp
aad
out
mov
aad
test
cld
push
loope
sahf
sub
in
pop
adc
cwde
pushf
ss
xchg
jle
je
outs
bnd
sbb
push
adc
retf
fsub
(bad)
xor
jg
mov
ret
inc
adc
in
cmc
add
sbb
int
lods
jae
and
dec
ja
mov
adc
cmp
cmp
out
and
sbb
popf
pop
loop
jne
call
cmp
ss
jns
or
cdq
jb
add
jo
pop
ficomp
out
out
mov
xchg
adc
test
inc
cdq
sbb
mov
sub
gs
jp
shl
call
and
push
xchg
gs
or
or
fwait
inc
imul
jmp
dec
imul
lahf
inc
ficom
dec
jb
out
dec
add
dec
mov
pop
push
pop
sub
push
dec
rol
popa
mov
mov
xchg
aad
push
or
mov
mov
std
cmp
inc
in
inc
stc
fmul
aas
mov
push
mov
add
inc
xlat
ret
mov
push
bnd
add
add
adc
xor
ss
mov
(bad)
push
sub
jecxz
shl
and
test
cmp
xchg
xchg
js
or
bound
xchg
jns
cmps
push
xchg
sub
dec
test
ja
cmp
mov
popf
or
mov
lods
popa
loopne
aad
mov
inc
int
repnz
in
add
data16
dec
push
xchg
mov
cmp
gs
lock
call
xchg
pop
and
jmp
mov
sahf
jbe
lods
jo
scas
in
icebp
inc
neg
cmp
cmp
cmp
push
adc
push
mov
out
movs
lahf
jl
and
in
fimul
pop
lods
leave
(bad)
int3
(bad)
aam
loop
pop
add
mov
in
outs
ss
jnp
inc
sub
jl
xor
sbb
dec
cmc
in
sbb
mov
hlt
cmp
fsub
push
movs
iret
out
dec
ret
or
sub
arpl
xor
scas
adc
and
in
movs
nop
sbb
ins
sbb
mov
adc
cs
pusha
sub
mov
jns
add
lock
clc
xchg
pop
sub
les
inc
mov
and
aad
pop
repnz
shr
cmp
test
mov
int3
outs
sbb
mov
dec
cmp
push
xchg
jno
mov
mov
ret
lods
xchg
sbb
push
fimul
and
xchg
hlt
sahf
test
push
or
and
(bad)
das
xchg
inc
jo
cmps
adc
adc
jbe
add
sub
mov
sub
xor
cli
dec
out
repnz
xchg
and
leave
jnp
movlps
aas
ret
inc
inc
pop
mov
mov
xchg
(bad)
or
rcr
adc
adc
cmp
js
ins
stos
or
out
mov
mov
cmp
adc
dec
jae
fidiv
adc
jns
push
aam
aas
cmps
and
std
pop
outs
xchg
lods
dec
and
cdq
sar
push
mov
jmp
mov
iret
leave
pop
mov
mov
push
sar
push
dec
repnz
repz
clc
sbb
retf
fisubr
and
or
mov
mov
push
mov
sbb
adc
stos
lock
push
or
icebp
mov
shl
(bad)
stos
into
adc
dec
lock
or
data16
js
(bad)
fisub
scas
inc
mov
push
lods
clc
mov
clc
stos
inc
je
jne
jge
cmps
loop
add
std
add
mov
test
ror
(bad)
push
test
iret
cmps
idiv
stos
mov
bound
ja
lahf
sub
adc
ja
fs
cmps
xchg
cld
xchg
fld
in
sbb
test
jge
cmc
push
or
ja
mov
xor
(bad)
daa
mov
gs
xchg
xor
jecxz
ins
cmp
sahf
ret
mov
cmps
jo
cld
out
dec
mov
push
dec
pop
in
sar
dec
pusha
or
inc
or
aam
inc
inc
push
xor
pop
es
cs
push
out
push
mov
mov
sbb
pushf
dec
loop
cmc
test
mov
fcmovnu
push
mov
out
push
addr16
dec
fidiv
or
pop
mov
int3
add
ret
movs
shld
jnp
(bad)
sub
sub
inc
fwait
cmps
xchg
cmc
pushf
mov
sub
adc
xchg
jne
les
mov
push
adc
add
dec
mov
ficom
xor
sub
movs
sahf
sar
test
and
cmp
fwait
js
retf
sbb
into
scas
ror
mov
push
sbb
cmps
xchg
js
in
repz
jnp
mov
leave
stc
aad
gs
aam
adc
pop
sbb
aaa
push
into
and
mov
popa
popa
jle
push
test
or
pop
push
aaa
movs
jg
arpl
std
aam
push
dec
cmp
inc
pop
pop
ins
imul
cmp
push
sbb
mov
mov
push
adc
cmp
xchg
lahf
jp
xchg
cmc
cwde
mov
in
jnp
dec
in
cmp
mov
fmul
cli
mov
mov
jp
ins
cmps
pushf
fidiv
lahf
enter
xor
sbb
leave
scas
ins
adc
adc
pop
pusha
ret
(bad)
das
inc
sbb
inc
ss
(bad)
popa
aad
in
sbb
outs
inc
mov
jmp
xor
and
scas
(bad)
outs
test
stos
out
daa
cmp
mov
ret
sub
mov
sub
inc
stos
lock
dec
adc
or
js
sti
sub
test
mov
test
push
jns
ror
mov
pop
aam
out
fisubr
rcl
xor
adc
ret
out
mov
fistp
mov
fld
mov
lahf
adc
push
(bad)
rcr
pop
inc
scas
xor
and
test
push
cmp
cmps
cwde
outs
sub
lods
test
adc
nop
jmp
push
sahf
les
into
push
stos
popf
ret
jmp
icebp
push
popf
fsub
je
movs
(bad)
cmc
mov
lods
xchg
xor
lahf
icebp
sbb
retf
sbb
pop
mov
arpl
aam
jnp
pop
adc
shl
mov
(bad)
test
mov
inc
sbb
lods
loopne
adc
cmp
cli
loop
mov
pop
in
fs
inc
test
aas
ss
sbb
add
cmp
scas
inc
sub
rol
dec
aaa
pusha
add
sbb
xor
push
mov
scas
xchg
mov
bound
test
push
outs
add
adc
(bad)
cmc
cdq
js
xor
dec
mov
sar
jns
inc
mov
fs
idiv
inc
mov
sub
pop
add
clc
xchg
dec
ror
mov
aad
imul
sbb
mov
pop
cmps
pop
dec
je
sub
add
cmp
xchg
rcl
push
sub
sub
mov
test
lods
js
ret
jecxz
mov
mov
pop
pop
cmp
pop
sub
dec
pop
adc
pop
ins
popf
push
jle
sbb
mov
leave
jb
adc
and
(bad)
dec
inc
outs
mov
sbb
push
out
aad
xchg
ret
ds
fadd
push
jecxz
dec
test
pop
push
fdivr
sub
mov
adc
push
dec
cmp
repz
sbb
cwde
fsub
mov
push
in
adc
sahf
mov
add
xchg
mov
pop
imul
add
les
call
mov
cmc
pop
cli
jo
mov
nop
cmp
mov
inc
in
cmp
and
mov
cmp
xchg
cwde
jae
inc
(bad)
in
mov
push
dec
xchg
outs
mov
test
mov
and
cwde
mov
sbb
int
ret
or
shl
add
and
jp
pop
fidivr
repz
repz
sar
ins
jp
imul
push
and
daa
ret
imul
inc
cld
ds
je
pop
jne
jmp
cmp
pop
pushf
sbb
mov
dec
xchg
inc
not
arpl
mov
and
fild
fucomi
test
iret
sar
sti
daa
aas
lahf
retf
jnp
movs
mov
cmp
test
leave
dec
sti
sbb
pop
in
fadd
xor
mov
add
sbb
mov
inc
cmp
loope
call
add
add
mov
mov
test
or
aam
xor
(bad)
aad
repz
xor
int
(bad)
xchg
xchg
jmp
shl
ins
pop
pop
pop
dec
rcr
shl
xor
ss
jmp
mov
cwde
jp
or
ins
aas
mov
std
(bad)
mov
in
retf
outs
pop
jge
loop
mov
popa
push
outs
loope
sub
xchg
mov
gs
xchg
push
enter
hlt
gs
and
mov
or
pop
or
xchg
ret
cdq
sub
xor
xchg
addr16
lods
jg
cmp
cmp
and
lods
and
(bad)
movs
fcomi
in
pop
mov
push
and
cli
retf
ficomp
mov
movs
call
xor
fcomp
xchg
mov
(bad)
adc
movs
pop
loopne
pop
mov
repnz
fist
retf
pop
inc
and
push
faddp
mov
jo
int3
ja
sar
dec
mov
cmp
bound
loope
push
and
lock
arpl
pop
pop
es
(bad)
mov
dec
in
mov
loop
movs
jno
xchg
addr16
(bad)
ja
outs
inc
and
add
add
dec
dec
or
ror
pop
xchg
jno
mov
mov
mov
jle
jmp
retf
popf
sub
in
bswap
ja
(bad)
sbb
loopne
cmp
jnp
xchg
cmp
xor
mov
pop
jo
sub
add
bound
sar
jl
jb
and
jecxz
mov
or
xchg
pop
cmp
leave
push
push
popa
jecxz
mov
in
leave
test
cld
inc
lds
inc
rcl
pop
ret
pushf
(bad)
mov
shl
call
dec
(bad)
adc
daa
popa
jmp
gs
stos
adc
dec
sub
sub
sub
jbe
rcl
mov
and
mov
xchg
lods
clc
cmp
pop
icebp
or
jb
mov
push
xchg
push
cs
lahf
add
out
jge
in
xor
imul
inc
jbe
jmp
pop
push
cmps
xchg
sti
out
xchg
or
cmp
xor
xor
xor
addr16
push
cmp
dec
pop
test
cld
jp
test
sahf
fucom
call
mov
das
icebp
addr16
pop
ds
lods
mov
inc
inc
mov
scas
lea
ficom
pop
jbe
imul
inc
stc
xchg
inc
or
int
add
iret
int
mov
es
out
(bad)
out
jno
adc
mov
(bad)
dec
mov
adc
cmc
sti
mov
je
cmp
jecxz
aas
inc
cmp
(bad)
icebp
aam
jne
cmp
fidiv
lods
test
sub
xor
dec
fcom
cmp
cmp
sahf
cmps
add
push
shr
aas
les
dec
popa
loop
pop
pushf
adc
out
nop
push
out
xor
xchg
rcl
imul
mul
repz
arpl
das
mov
push
jmp
shl
cld
scas
stos
in
(bad)
push
retf
aas
jo
fist
or
dec
or
test
inc
icebp
and
cmp
ret
push
or
fisub
cdq
repnz
gs
push
(bad)
mov
mov
aad
lds
(bad)
jnp
xor
jp
xor
dec
or
inc
(bad)
inc
jo
out
or
push
test
mov
adc
(bad)
in
mov
sbb
mov
cli
adc
xchg
pop
mov
sub
jecxz
cmp
push
xor
add
dec
push
mov
ins
cmp
fsubr
bound
adc
and
sub
loope
add
mov
mov
inc
dec
pusha
sub
jne
out
loope
into
push
cdq
pop
dec
xor
mov
cld
mov
mov
pop
cwde
ss
out
xchg
or
fiadd
test
aad
and
call
jge
push
or
sub
std
mov
out
shl
pop
(bad)
cmp
xchg
mov
imul
and
cmp
pushf
repnz
test
jae
sub
push
das
inc
call
ss
cmp
stos
and
push
mov
psllw
xor
pop
jmp
xor
enter
xor
and
mov
mov
aas
adc
fcomp
mov
mov
jae
sar
imul
(bad)
and
cmp
(bad)
ffreep
xchg
inc
repz
cs
cmp
lods
sub
cmps
jge
pop
(bad)
push
cld
dec
fmul
dec
clc
pop
int3
shl
add
stc
lahf
fs
push
leave
push
sbb
jg
arpl
fwait
in
jge
aad
cmc
jge
mov
repnz
das
sahf
xor
inc
inc
or
sti
or
xchg
(bad)
adc
or
mov
add
push
inc
test
adc
jbe
pshufw
retf
fcmovnu
sbb
push
jmp
bound
inc
xor
and
es
mov
sub
inc
xchg
out
imul
mov
cmps
inc
push
mov
mov
cmps
jbe
adc
cmp
xor
adc
(bad)
xor
pop
cmp
inc
loope
cli
cmp
sub
jb
cwde
ret
loopne
outs
dec
add
jne
mov
adc
inc
adc
pop
lock
fisttp
add
pushf
shl
(bad)
repnz
cmp
daa
push
push
xchg
mov
test
push
stc
std
dec
nop
sub
daa
out
test
mov
cmp
cmc
xchg
dec
mov
dec
call
stos
inc
sahf
cwde
pop
clc
push
mov
movs
and
xor
out
and
dec
arpl
movs
inc
mov
jmp
ds
push
sub
cmp
(bad)
jb
and
push
sbb
fwait
repz
loopne
test
pop
ss
sti
fidivr
and
inc
sbb
xchg
leave
cmp
test
xchg
in
push
xchg
in
xchg
mov
adc
dec
and
mov
outs
pop
lods
adc
jno
imul
fld
sub
mov
sbb
sar
inc
loope
adc
mov
inc
in
rcr
sub
pop
xor
leave
jmp
xchg
clc
xchg
xchg
push
inc
and
mov
gs
test
loope
(bad)
test
mov
mov
pop
mov
(bad)
and
xor
out
dec
out
mov
inc
sbb
inc
fwait
sub
pop
rol
inc
test
jge
xor
mov
cmc
repnz
jne
adc
mov
mov
out
ins
or
arpl
cmps
jmp
gs
cmc
cvtpi2ps
pop
add
add
sbb
xchg
cmp
add
je
jmp
lock
xor
xor
out
xchg
inc
push
(bad)
neg
enter
pop
outs
push
arpl
dec
fmul
sub
fiadd
arpl
sbb
jb
xchg
les
ins
xor
and
ja
xchg
sub
fwait
pop
pop
lods
in
ja
xor
inc
dec
data16
mov
xor
out
push
jnp
scas
fbstp
mov
ror
sbb
jns
movs
inc
xor
mov
mov
add
imul
sbb
adc
or
sti
rol
ret
movs
repz
out
dec
adc
outs
mov
mov
call
popf
xlat
mov
pop
or
or
mov
les
jno
pop
push
cmc
dec
xor
imul
dec
std
std
pop
sbb
repz
sbb
sub
lds
cmp
fisttp
xor
dec
xchg
push
xchg
or
sbb
test
pop
ins
clc
fwait
mov
(bad)
jmp
xchg
cmp
mov
adc
adc
dec
jo
loope
repnz
inc
add
add
inc
fist
loop
or
(bad)
mov
mov
mov
imul
retf
popf
es
repz
mov
sub
push
sub
test
cmp
fadd
jae
fwait
in
and
mov
icebp
movs
push
cmp
jno
xor
sbb
cmp
push
adc
xchg
dec
es
dec
loop
sbb
cdq
outs
popa
out
(bad)
fldcw
cmp
push
push
add
out
xchg
ins
lahf
or
xor
ror
inc
aaa
xchg
mov
mov
jecxz
les
mov
iret
xor
mov
imul
jmp
mov
inc
scas
fstp
xchg
stos
jmp
stos
sbb
fnstsw
retf
lods
outs
mov
xchg
pop
test
call
data16
sbb
test
fsubr
mov
icebp
xchg
cmp
push
sbb
inc
stos
mov
seto
xchg
into
shl
pop
cs
cwde
xor
jg
xchg
pop
in
stos
lds
jmp
lods
pushf
xchg
and
xchg
cli
mov
sti
jne
cdq
movs
out
jae
(bad)
aad
adc
shr
inc
scas
adc
xchg
mov
mov
std
dec
mov
nop
(bad)
pop
addr16
lods
repnz
pusha
xchg
in
xchg
mov
pop
rol
sub
mov
arpl
scas
jbe
push
shr
(bad)
cmps
xchg
stos
ds
sub
test
cmp
js
(bad)
pop
cmp
mov
mov
mov
cmps
cmp
add
test
xchg
jns
repz
clc
inc
mov
inc
lock
daa
add
or
aam
and
jae
cmps
scas
sub
pop
push
mov
lds
and
bound
into
jle
adc
jmp
or
dec
jle
or
and
test
rcl
xor
ds
sahf
hlt
sbb
repnz
mov
or
imul
inc
pop
xchg
(bad)
movs
mov
jns
int3
xchg
popa
mov
push
or
pusha
inc
mov
fs
xor
ret
std
and
push
imul
push
pop
push
xor
test
and
mov
dec
xchg
jl
sbb
mov
fst
shl
mov
dec
(bad)
rol
adc
mov
stos
fs
xchg
cmps
sub
jno
test
adc
(bad)
arpl
dec
adc
(bad)
not
adc
xchg
cs
dec
retf
mov
cdq
add
into
iret
loop
mov
cmp
retf
jmp
cmp
sub
mov
jg
mov
fisub
and
cmp
sbb
ja
mov
std
enter
mov
push
addr16
and
xlat
xchg
rcr
ds
popa
div
and
jb
stos
sbb
enter
es
push
push
ficom
jo
inc
and
ins
test
(bad)
sbb
cdq
cmps
test
xchg
jle
push
add
movs
js
sub
mov
sub
fcmovnu
xor
push
ret
push
fwait
sub
in
lock
inc
call
and
adc
jl
and
retf
ins
imul
sub
daa
jbe
iret
dec
jns
(bad)
pop
cmp
push
push
mov
xchg
jge
cdq
sbb
mov
in
in
adc
in
repnz
mov
sbb
xchg
jbe
mov
js
sbb
imul
fidiv
jle
std
mov
call
movs
dec
jecxz
jg
sbb
(bad)
inc
push
inc
imul
xchg
mov
lods
jae
lock
mov
sahf
jle
dec
leave
not
adc
cmps
icebp
popf
and
xor
mov
inc
adc
out
cmps
test
ss
aad
dec
jge
mov
in
ins
test
mov
ret
jb
jne
dec
mov
cs
movs
fist
mov
xor
ins
sbb
inc
add
(bad)
jae
jg
out
pop
sub
adc
ret
add
fwait
xchg
mov
dec
add
shl
mov
mov
sub
sahf
mov
dec
fwait
sar
push
mov
sahf
lock
movs
or
call
mov
xor
xor
push
mov
sbb
push
ret
jg
sbb
jmp
xchg
div
test
jae
data16
pop
les
adc
push
aas
fwait
and
iret
xor
(bad)
jbe
dec
test
cmps
adc
cld
xchg
not
aas
mov
mov
(bad)
jns
ins
adc
jmp
mov
pop
aas
push
fisubr
stc
aaa
leave
cld
xor
add
loop
cli
cmp
inc
das
mov
cmc
mov
push
aas
sbb
mov
cmp
pop
dec
add
mov
je
test
fwait
outs
mov
hlt
dec
dec
movs
(bad)
jmp
mov
mov
test
dec
daa
mov
add
dec
and
push
inc
inc
clc
xchg
sub
(bad)
mov
jge
xchg
(bad)
add
je
add
shl
pop
int3
mov
inc
(bad)
cmp
les
sub
push
pop
pop
cdq
mov
adc
outs
fsub
mov
push
outs
sbb
mov
dec
push
mov
ja
imul
outs
sbb
fist
pop
push
mov
xlat
mov
jecxz
test
test
cmp
xchg
inc
in
fdivrp
jmp
mov
lock
imul
pop
aad
mov
in
inc
xchg
out
iret
push
sbb
jo
mov
mov
test
push
pusha
shl
pusha
push
icebp
push
hlt
cmp
jg
in
stc
into
ret
retf
dec
pop
cs
ins
(bad)
mov
jno
fistp
cwde
rol
loope
jns
call
clc
mov
call
adc
jp
out
push
pusha
xor
mov
push
scas
jecxz
stos
mov
movs
push
push
xor
int3
xor
sub
inc
sar
adc
shr
and
inc
xor
es
pop
int3
push
and
lahf
test
cmp
mov
retf
mov
xchg
in
or
push
arpl
into
sbb
or
sbb
xchg
mov
adc
mov
test
nop
and
adc
xlat
scas
lea
adc
mov
into
(bad)
adc
mov
dec
mov
jne
sbb
cmp
jnp
rcr
loop
jp
aam
in
ret
pop
or
and
jge
loope
js
xchg
mov
mov
jae
mov
mov
sub
sbb
sub
xchg
inc
stos
adc
push
pop
scas
js
(bad)
fild
cmps
fsubr
aaa
sbb
mov
daa
scas
stos
cmp
rcl
xor
push
pop
lods
ss
mov
mov
xchg
out
leave
loop
shl
jb
sbb
push
add
imul
jnp
in
sbb
pop
call
gs
scas
fsub
sbb
push
push
pop
ins
ds
sub
adc
mov
xchg
and
ins
jo
xor
mov
xor
es
xor
je
cmps
pop
pusha
inc
mov
repnz
scas
fstp
pop
mov
jge
push
inc
imul
sub
xor
or
sbb
aam
sbb
inc
xor
jb
je
jmp
mov
enter
(bad)
or
sbb
sahf
pop
movs
pop
fist
sub
fsub
adc
std
mov
sbb
add
mov
mov
fld
sub
cmc
stos
fdiv
and
movs
sbb
aaa
jnp
add
mov
push
push
adc
pop
test
loop
sub
mov
frstor
(bad)
iret
push
mov
or
jg
and
sub
add
adc
adc
dec
scas
inc
sub
cdq
movs
fucom
cdq
enter
daa
ffreep
cld
hlt
pop
xchg
jne
and
test
xchg
inc
jp
lods
je
mov
sub
push
sub
test
pusha
sbb
push
sti
pushf
jecxz
push
into
push
sbb
enter
(bad)
xor
mov
lea
sbb
sbb
in
adc
push
or
xor
sub
lods
rcr
pop
jp
fnstcw
cld
jns
dec
das
adc
rcr
sub
xchg
(bad)
scas
nop
sbb
xor
sub
sbb
cmp
and
aas
jbe
mov
jmp
cwde
push
mov
jmp
inc
cmp
lods
rol
jg
push
ja
inc
aaa
das
movs
jg
mov
scas
pop
xor
fs
push
mov
cmc
mov
fxch
xor
sti
outs
outs
lock
(bad)
jg
(bad)
ss
xchg
and
mov
(bad)
cmps
mov
daa
mov
cmp
and
aas
pop
cs
shr
pop
mov
loope
pop
pop
add
jnp
pop
movs
retf
push
and
loopne
jl
(bad)
loopne
and
sub
icebp
xchg
enter
push
in
sub
dec
jl
lock
dec
ins
mov
cmp
xor
arpl
add
movs
sbb
push
mov
into
in
add
dec
mov
std
dec
test
out
dec
mul
jmp
pop
mov
dec
and
and
test
(bad)
fsqrt
push
int
pop
xor
repz
cmp
(bad)
pop
imul
push
cwde
cmp
aas
ss
sar
xchg
(bad)
nop
loopne
loopne
pop
icebp
je
sub
(bad)
and
retf
es
mov
cli
bound
push
or
sbb
jle
xchg
jno
scas
scas
jmp
push
jo
aaa
dec
test
out
pshufw
mov
push
addr16
lock
cmp
ss
dec
cmp
sbb
adc
aas
or
(bad)
jecxz
push
add
movs
out
(bad)
jns
cs
mov
inc
mov
push
call
movs
cs
cli
mov
ficomp
jle
cld
fild
push
mov
aas
clc
dec
push
das
dec
loopne
stos
(bad)
mov
jmp
scas
and
push
(bad)
mov
sahf
and
jmp
mov
out
cmp
cs
push
pop
push
mov
out
ins
pop
sbb
inc
sub
mov
mov
adc
fnstcw
add
addr16
dec
pop
adc
pop
mov
mul
bnd
mov
hlt
dec
push
mov
mov
mov
pop
in
or
addr16
xchg
mov
outs
neg
clc
loope
xchg
sbb
frstor
jnp
bound
je
pop
cdq
dec
stc
jmp
fcmovne
xor
cmovnp
add
mov
pcmpeqd
xchg
je
movs
rdpmc
mov
out
mul
iret
jl
xchg
mov
cld
jno
or
and
cdq
dec
aaa
and
sbb
sbb
jp
xor
dec
jp
sahf
push
mov
ins
popa
cld
les
jmp
xor
popa
imul
mov
sbb
test
jns
adc
cld
pop
mov
xchg
daa
xor
jp
stc
into
sub
(bad)
call
jb
xchg
iret
imul
leave
daa
add
sub
jae
in
mov
adc
jo
or
xchg
and
inc
lds
(bad)
xor
in
push
sbb
and
repnz
stos
mov
mov
xchg
mov
xlat
xchg
je
push
retf
push
mov
jae
cmp
scas
jle
and
and
pop
dec
inc
test
rcl
punpcklwd
push
add
add
bound
bound
ret
das
js
outs
sar
fiadd
cmps
xor
pop
out
retf
pop
aad
and
inc
ins
js
sub
je
pop
nop
cmp
fs
cmp
pop
cmp
data16
out
xchg
inc
mov
pop
rcr
pop
mov
imul
sub
sahf
test
pushf
xor
jl
stos
push
sub
jge
inc
xor
pop
lea
sub
out
pop
div
aam
shl
cmps
cmp
cdq
inc
and
ds
dec
outs
daa
add
and
aad
adc
jbe
stos
cmp
popa
std
sub
and
test
test
add
ret
inc
daa
ss
(bad)
xor
mov
mov
push
in
xchg
pushf
ss
sti
push
imul
test
mov
pop
pop
push
pop
fld
inc
jnp
lds
pusha
mov
cmp
pop
outs
jl
pop
dec
sub
add
sub
ss
aam
dec
push
pop
fcomp
pop
add
jge
popf
cmp
xor
clc
sahf
xchg
loope
lea
mov
loop
xchg
pushf
pop
lahf
sub
mov
sbb
dec
cmp
add
or
sbb
and
lahf
push
pop
stc
push
retf
mov
lea
sar
mov
lock
loopne
inc
push
dec
cmps
adc
add
sti
dec
mov
and
enter
sbb
mov
mov
sbb
lock
cmc
aam
aad
mov
and
jo
rcl
in
mov
and
cmps
jecxz
and
adc
cmp
inc
ja
push
dec
sub
aad
loope
mov
ror
cli
push
in
cli
fisub
nop
(bad)
rol
popa
fist
mov
js
pusha
adc
inc
pusha
inc
shr
test
pop
mov
sub
fs
jne
pop
leave
icebp
and
push
std
cmp
out
sahf
cmp
pop
pop
push
fld
pop
test
or
scas
(bad)
xor
jl
stos
scas
hlt
mov
and
add
(bad)
add
add
xchg
pop
(bad)
popf
add
pop
pushf
sbb
(bad)
dec
mov
dec
pushf
jmp
popa
add
stc
aad
mov
shl
leave
mov
xor
imul
or
movs
inc
imul
xchg
ror
scas
or
inc
xchg
ficom
cmps
mov
loop
push
cmps
push
xor
inc
lea
dec
std
repz
nop
push
movs
ss
aaa
mov
jo
ds
mov
cs
jo
xor
outs
inc
mov
cli
xchg
dec
outs
(bad)
mov
lea
mov
(bad)
js
mov
adc
adc
jno
aas
hlt
shl
repz
sbb
pop
inc
popf
imul
dec
(bad)
mov
into
scas
dec
lahf
mov
or
mov
sub
fdiv
add
rol
jg
(bad)
loope
rcr
and
jp
jp
cmp
and
lea
xchg
mov
pushf
ror
mov
outs
lods
outs
ja
test
shl
pop
hlt
pop
mov
add
cmp
popa
and
push
out
mov
punpckhwd
cmp
hlt
cld
movs
xchg
adc
add
retf
inc
fidivr
retf
pop
addr16
inc
push
add
in
pop
fbstp
adc
add
xor
or
imul
addr16
mov
pop
dec
test
pop
cmp
retf
push
icebp
stos
div
loope
xchg
outs
jno
icebp
ret
mov
cmp
mov
push
movs
pop
clc
test
pop
and
cli
dec
dec
dec
jle
mov
ja
pop
pop
jge
dec
neg
inc
fxch
popa
and
mov
(bad)
jl
stc
xor
add
mov
fsubr
cmps
push
cmp
invd
cmp
cmp
aas
push
stos
imul
or
aas
mov
fnsave
and
daa
inc
(bad)
xchg
ins
jle
inc
xchg
call
mov
aam
cld
cld
push
sub
pop
mov
xchg
mov
inc
ret
test
add
push
add
outs
jns
cld
popw
mov
out
pop
sbb
(bad)
cmc
int
cli
sbb
sub
or
out
mov
dec
mov
sbb
sub
ja
(bad)
sub
jno
sub
adc
or
movs
clc
dec
push
pop
xchg
fimul
pop
inc
sbb
lds
fsubr
jbe
fisttp
mov
xchg
jg
push
pushf
(bad)
ss
xchg
(bad)
or
sbb
fdivr
sub
dec
dec
adc
fs
aam
retf
rcr
add
and
rcr
enter
movups
inc
cmps
sub
dec
push
stc
das
pop
es
lods
sub
mov
mov
loop
fbstp
inc
mov
mov
iret
pop
int3
xchg
enter
lock
and
imul
mov
test
pop
pop
dec
mov
sti
add
dec
pusha
dec
sub
nop
pop
mov
xchg
test
call
clc
dec
enter
inc
push
sub
js
mov
loope
shr
mov
stos
ss
dec
adc
into
int3
push
icebp
xlat
jp
int3
stc
test
push
xchg
retf
xor
sub
shl
mov
jecxz
fstp
iret
and
out
loopne
xchg
ss
movs
inc
pop
ins
loopne
lock
or
sbb
add
retf
xor
and
inc
idiv
out
adc
jmp
and
fisub
leave
inc
inc
not
mov
mov
mov
push
sub
cmp
std
cmps
cmps
jp
or
mov
jl
xchg
cld
jo
mov
mov
xchg
sbb
mov
mov
rol
and
sub
xchg
std
jbe
jno
and
lea
sub
mov
add
dec
dec
xor
mul
xor
mov
or
push
sbb
mov
mov
cld
retf
mov
xchg
inc
jle
sbb
leave
out
dec
inc
jae
or
xchg
xor
sub
inc
imul
xlat
stos
inc
dec
jecxz
lods
fadd
lods
mov
(bad)
mov
dec
and
inc
fadd
aaa
jnp
(bad)
push
fisubr
mov
push
fs
addr16
push
jp
sbb
sub
(bad)
adc
cmp
adc
xor
push
cwde
leave
mul
pushf
sub
repz
(bad)
rcr
bound
mov
ret
push
hlt
int
pop
push
mov
aaa
jle
fstp
adc
aas
ins
pop
or
mov
call
stos
arpl
(bad)
dec
iret
or
out
enter
mov
xchg
xchg
je
push
and
dec
test
mov
inc
or
call
mov
fcmovu
pop
jl
mov
fld
in
imul
add
inc
stos
in
adc
dec
loop
xchg
jo
mov
gs
sbb
fs
mov
xchg
jl
test
jno
lds
xor
test
xchg
dec
lds
cmp
jge
cmp
test
stc
mov
das
out
cmp
lahf
mov
push
push
into
in
sub
push
repnz
or
lock
lods
rcl
mov
dec
adc
add
mov
lods
pop
push
outs
js
mov
xor
jle
mov
in
inc
cli
scas
push
cmps
sub
bound
fsubr
iret
ds
popa
xor
clc
ror
(bad)
(bad)
cdq
ss
(bad)
jns
test
icebp
ss
fisubr
imul
cld
adc
sbb
sub
xor
aaa
jp
in
inc
dec
xchg
sbb
je
imul
fwait
mov
sub
dec
fs
pop
retf
outs
sbb
adc
je
jmp
mov
jae
mov
sub
hlt
in
pop
push
movs
dec
mov
mov
sub
xchg
adc
xchg
add
gs
or
lahf
mov
popa
lea
mov
inc
movs
adc
imul
dec
(bad)
(bad)
out
xchg
nop
or
and
lea
in
xchg
mov
cld
ret
dec
mov
scas
repz
int
cdq
icebp
cmps
mov
icebp
xchg
push
mov
retf
xchg
adc
imul
jmp
sub
stc
sbb
test
xchg
xor
imul
inc
cmps
cmp
xor
inc
jae
ja
dec
jmp
pop
xchg
add
xor
sbb
ror
hlt
scas
dec
or
stos
and
in
out
cld
out
leave
int3
cmps
repz
push
mov
pop
pusha
fistp
jle
xlat
or
pop
(bad)
ror
out
fs
push
inc
cmp
push
sar
das
push
or
mov
pop
(bad)
call
mov
ins
hlt
aad
cld
call
aaa
fld
das
out
mov
nop
jo
and
sub
aad
les
mov
pop
scas
dec
icebp
call
lods
and
sti
shl
movs
std
add
add
ss
in
cmp
pushf
out
xchg
jne
fbstp
dec
in
xor
rcr
fisubr
aaa
(bad)
ffree
ret
in
inc
loope
mov
dec
mov
fld
mov
rcl
inc
aam
jmp
xor
jecxz
loope
pop
jmp
xor
xor
repz
add
jnp
adc
mov
dec
repz
jo
and
push
pop
and
lock
pop
and
mov
and
in
sti
inc
(bad)
cmp
and
dec
in
fdiv
sub
dec
inc
jmp
and
dec
test
scas
push
icebp
out
mov
mov
jb
push
cdq
comiss
mov
cli
ins
add
pop
xchg
sbb
das
(bad)
movs
push
ror
(bad)
sbb
pop
push
mov
call
push
and
inc
rdpmc
mov
(bad)
repz
dec
sub
pushf
das
sbb
and
jecxz
jge
pop
hlt
inc
stc
jo
pop
shr
and
mov
xchg
push
push
fldenv
or
fwait
pusha
loop
lock
push
inc
pop
jl
jo
imul
pop
inc
or
aas
retf
and
push
in
mov
rcr
pop
jmp
(bad)
fyl2xp1
out
mov
mov
cmps
mov
fild
jnp
mov
inc
fsubr
lock
stos
and
mov
mov
shrd
push
dec
jle
mov
(bad)
fldcw
push
jg
scas
mov
xor
xchg
(bad)
cmps
or
vmwrite
dec
pop
unpcklps
inc
jae
adc
dec
cmps
popf
out
repz
pop
ds
test
xor
xor
cli
mov
push
cmp
repz
or
or
stc
rol
into
mov
cmp
sbb
out
jo
scas
out
stc
cmp
push
cmp
bound
retf
push
mov
cdq
repnz
sbb
cmc
fsubr
add
aaa
xchg
pop
and
pop
sub
sub
sbb
jecxz
add
call
mov
mov
pop
aas
xchg
push
sub
jmp
pop
test
mov
inc
ss
out
gs
pop
icebp
icebp
in
je
and
(bad)
mov
in
in
add
xchg
fldenv
ret
add
fisttp
adc
mov
xchg
mov
jecxz
ins
iret
fisub
mov
call
mov
not
ins
jg
imul
imul
cld
std
cmp
popf
mov
mov
lock
ds
loop
aam
fwait
repnz
movs
aad
sbb
out
jmp
adc
std
cmc
mov
rol
repz
add
(bad)
xor
mov
rcr
adc
sbb
imul
aaa
js
mov
push
xchg
cli
scas
scas
fnstsw
lds
jb
jge
cmp
mov
out
ret
jno
jbe
cdq
inc
sub
popa
push
pop
and
js
push
xchg
inc
into
pop
(bad)
arpl
mov
mov
cmp
mov
ret
mov
std
adc
sbb
leave
inc
xchg
sub
out
sub
cdq
sub
sbb
pop
dec
inc
xlat
leave
sub
jle
test
pop
jle
sar
sar
inc
jae
ins
ss
out
arpl
jbe
add
dec
xor
cmp
cdq
nop
push
test
pop
sub
cwde
push
jmp
test
xor
dec
out
jg
push
sar
xchg
daa
cli
mov
cmps
es
idiv
les
neg
out
jl
fadd
xor
imul
mov
fnstcw
fist
int
jb
sbb
jmp
sbb
sub
mov
push
in
and
jmp
pop
push
sbb
add
cmc
jns
(bad)
push
mov
xchg
lds
mov
push
push
cmps
and
stos
bound
sbb
pop
cmp
inc
lahf
cmps
aam
push
call
cmps
test
test
xchg
add
test
or
scas
push
sub
sbb
push
and
mov
xor
cmp
push
fsubr
das
cld
cmps
div
sbb
bound
or
jns
out
jbe
jecxz
fistp
xchg
push
icebp
(bad)
pop
sub
bound
jne
es
out
and
out
test
mov
cmps
or
mov
outs
pop
sub
fwait
not
cmp
nop
gs
inc
jb
dec
add
cwde
sti
jl
adc
pop
mov
stc
ins
mov
xchg
adc
popa
dec
fiadd
out
ss
xor
inc
push
jne
rcl
out
ss
sbb
fdivr
pop
mov
stos
aaa
mov
xor
into
jmp
(bad)
shl
fldpi
inc
aad
inc
rcr
imul
(bad)
fwait
lds
ss
and
imul
test
lahf
xchg
aad
xor
into
cmps
inc
dec
jo
sub
adc
lock
in
sbb
sar
pop
fcomp
and
pop
imul
(bad)
push
xchg
ror
loopne
or
pop
sbb
bound
ror
fwait
jb
ins
sbb
movs
fstp
mov
fdiv
cmp
into
lock
scas
(bad)
jp
push
int3
pop
mov
inc
test
leave
jns
mov
xchg
outs
call
add
sbb
dec
mov
sbb
lds
mov
cmp
bound
sbb
cmc
(bad)
lods
fcompp
jecxz
cld
in
sub
or
call
push
fbld
push
pop
add
mov
cmp
js
cwde
lds
dec
dec
and
ss
cmp
(bad)
(bad)
call
shr
fs
push
data16
cmp
inc
xchg
ss
jp
icebp
lods
jnp
mov
shr
or
fsubr
cmp
jae
retf
and
popa
adc
loopne
out
movhps
xlat
ret
lds
retf
int3
inc
ret
jbe
fistp
xchg
(bad)
jecxz
in
jg
sbb
sti
bound
jae
mov
push
js
std
fbld
inc
aam
fcmovnbe
sub
and
les
shl
int
jmp
xchg
mov
ret
xchg
test
inc
mov
in
mov
mov
sub
and
into
sbb
inc
sub
enter
out
push
fwait
mov
repz
dec
sub
mov
adc
mov
jle
fisub
es
movs
out
push
int
inc
cmp
push
mov
sub
pop
inc
cmp
xor
sub
adc
pop
cmp
mov
sbb
or
sub
aas
cmp
add
fisttp
cmp
outs
cmp
fwait
adc
inc
xchg
mov
ds
mov
push
xlat
int
pop
lea
hlt
cmp
pop
or
add
out
pop
inc
push
inc
lock
mov
dec
and
jl
das
jmp
ds
lods
gs
mov
push
add
xchg
push
xlat
std
push
pop
es
cmp
adc
in
inc
mov
xor
mov
sub
movs
mov
ficom
and
sub
jmp
sar
jge
sti
xchg
sbb
jmp
pop
fst
jg
loope
in
out
add
xor
and
into
xchg
je
adc
xor
mov
adc
jnp
in
enter
movs
sbb
aam
pushf
mov
scas
push
add
dec
jge
test
cmp
mov
xchg
pop
xchg
jl
imul
test
and
jo
repnz
and
xor
push
clc
cmps
int
mov
push
inc
sar
sbb
adc
mov
dec
aaa
lahf
adc
push
jg
out
bound
and
and
push
lea
adc
jb
inc
adc
xchg
cmp
es
into
mov
and
movs
push
xor
mov
fwait
retf
adc
(bad)
loop
xor
clc
(bad)
stc
sbb
cmp
xchg
fscale
fist
cmp
dec
and
cmps
int3
xchg
dec
les
scas
outs
jge
cmp
sbb
push
jbe
nop
ja
and
pop
stos
mov
mov
dec
adc
inc
add
xor
pushf
jg
or
ret
and
mov
mov
cmc
push
xchg
shl
cmp
cmps
daa
cmp
xor
cmp
jmp
cmp
xchg
mov
and
mov
fmul
and
stos
pop
fdiv
enter
xchg
pop
or
mov
add
(bad)
xlat
daa
sti
cs
fwait
sbb
retf
shr
fcom
scas
ins
mov
mov
jle
adc
adc
(bad)
mov
adc
ins
int
jno
ds
cmp
inc
test
mov
sti
repz
call
xchg
xchg
mov
xor
xchg
jo
movs
repz
aas
xor
dec
cmc
js
ja
fsub
je
les
sub
xchg
dec
cmp
mov
jge
into
sub
cmp
pushf
cli
fsub
and
push
mov
fldcw
jg
repz
imul
test
sub
stos
xchg
not
scas
jmp
push
jge
idiv
xchg
mov
dec
pop
sbb
(bad)
xor
cli
frstor
sub
les
and
mov
dec
or
and
sbb
xor
dec
sti
in
and
push
in
push
jae
and
adc
shr
inc
add
icebp
jmp
mov
xor
xchg
sbb
popf
rcl
pusha
mov
cmp
mov
xchg
in
es
aas
lds
dec
(bad)
aaa
in
adc
ds
ja
and
(bad)
cld
jb
rcr
gs
sbb
adc
imul
mov
fs
xchg
jo
test
adc
mov
mov
out
or
mov
daa
mov
daa
adc
test
cs
mov
les
and
push
or
mov
xchg
rcl
sbb
nop
mov
movs
push
xor
pop
ret
imul
pop
nop
add
enter
cwde
hlt
call
xor
adc
lock
mov
mov
jae
add
xor
cli
sahf
sbb
ror
(bad)
call
dec
aaa
loopne
aam
pop
stos
lea
and
aad
push
dec
jns
mov
scas
xor
pushf
sub
add
fmul
dec
adc
sub
adc
mov
movs
dec
dec
stc
xchg
nop
mov
sub
cmp
not
push
mov
and
cmp
pop
xchg
or
loop
dec
dec
dec
dec
outs
punpcklbw
int3
push
stos
sub
push
mov
sar
(bad)
(bad)
sti
xchg
fwait
movs
jae
ds
test
or
call
fwait
aad
mov
jmp
iret
cmp
pop
jns
inc
jbe
cmp
call
cmove
movs
adc
rep
mov
jmp
(bad)
sbb
mov
xor
nop
nop
cli
mov
cmps
and
popa
jns
cs
icebp
sar
lahf
outs
fnstenv
push
mov
imul
cmps
stc
js
rol
call
movs
imul
add
das
jecxz
xchg
adc
adc
push
dec
xor
mov
pushf
inc
ror
icebp
and
hlt
out
or
xchg
xlat
repnz
adc
or
xchg
jo
call
sar
cmps
ins
mov
sbb
mov
aam
(bad)
retf
dec
xor
(bad)
retf
pop
push
push
dec
test
call
jmp
dec
call
gs
and
inc
sub
ins
and
(bad)
repnz
mov
in
adc
stos
in
shl
aaa
xchg
and
rol
mov
sub
and
mov
xor
push
neg
(bad)
add
cmp
push
in
(bad)
stos
fmul
outs
xor
inc
fadd
vmwrite
cmps
cli
jmp
shr
add
dec
push
cmp
and
jmp
mov
(bad)
lahf
xchg
jmp
dec
adc
mov
sbb
xchg
cmp
sub
out
and
and
fsub
sar
iret
pop
mov
loope
int3
mov
jb
pop
stos
add
push
push
rcr
xchg
xchg
cld
push
sbb
movs
push
jnp
fiadd
xchg
jo
jns
xlat
stos
pop
or
jbe
test
push
cmp
cs
ror
pusha
loopne
(bad)
mul
cdq
repnz
or
mov
test
call
fwait
cmp
fcmove
lea
sub
dec
retf
jmp
jle
xor
repnz
fmul
or
pop
mov
mov
movs
add
arpl
fdiv
sbb
lea
rcl
push
sbb
aaa
mov
ret
mov
shl
ror
stc
test
not
push
jae
mov
pop
jl
adc
xor
je
xchg
sahf
aam
in
sbb
mov
in
sub
add
mul
jle
jle
retf
fnsave
inc
dec
adc
in
pop
inc
and
push
jle
pusha
xchg
out
xchg
jno
inc
mov
out
mov
cmp
mov
sub
fisttp
pop
in
ss
sub
cmc
repnz
xchg
mov
pop
cmp
inc
clc
iret
jnp
adc
mov
outs
and
ds
rcl
je
xor
pop
mov
iret
test
add
mov
dec
sub
pushf
push
push
or
push
xchg
not
mul
fcomi
mov
sbb
movs
sbb
push
enter
mov
mov
add
repnz
in
jmp
mov
arpl
loope
loop
(bad)
fstp
inc
shl
movs
jnp
xor
xchg
cmp
fstp
nop
shr
test
aad
shl
nop
cld
in
ss
call
dec
dec
retf
or
ror
(bad)
add
cmp
mov
push
jmp
(bad)
aad
stos
std
shl
das
pusha
retf
dec
neg
arpl
call
stos
stos
das
xchg
das
(bad)
popa
fsubr
aad
inc
adc
int3
repnz
or
dec
xchg
jmp
add
mov
xor
out
xchg
aaa
movs
or
shl
sbb
sub
push
push
pop
out
xor
dec
test
inc
push
sub
and
fbld
or
mov
add
mov
jp
add
inc
sahf
mov
stos
fstp
pop
lahf
lock
xor
leave
rcl
xchg
jecxz
in
inc
in
add
sbb
and
(bad)
fwait
mov
rol
test
out
sbb
push
lock
pop
mov
and
fsubr
shr
sbb
mov
test
pop
xor
sub
or
xor
jo
push
scas
fwait
or
loope
pop
add
and
xchg
sbb
xchg
jmp
pop
das
and
sub
nop
mov
push
or
xor
in
inc
jbe
outs
nop
fidiv
inc
xor
in
xor
jbe
adc
aam
iret
cmc
xchg
imul
sbb
call
lahf
jge
inc
jno
xchg
xchg
jnp
cmp
mov
aaa
or
sub
inc
mov
xchg
in
sub
dec
sub
mov
mov
cmp
leave
aaa
fild
xchg
inc
adc
fcmovne
stos
cld
fisttp
aas
out
movs
dec
push
stc
cli
ins
bound
inc
sub
test
add
fstp
data16
mov
rol
cld
pop
fsubrp
test
ja
mov
mov
ret
push
shr
pop
fsubr
std
pop
and
sub
adc
jb
mov
adc
and
es
sahf
sub
mov
pop
adc
imul
into
imul
mov
mov
or
jge
or
frstor
inc
aad
test
xchg
mov
push
(bad)
into
mov
pop
adc
mov
mov
aam
pop
outs
pop
inc
dec
sub
bound
fucomp
shr
lea
add
jmp
(bad)
div
sbb
pop
sbb
push
mov
(bad)
xor
mov
sti
enter
stos
cmp
in
pop
ror
mov
mov
xchg
enter
xchg
jo
jg
xor
movs
jo
dec
xor
ds
sar
out
inc
sbb
push
jmp
out
sub
les
adc
lds
jl
push
dec
test
mov
sbb
sub
fnstsw
xor
sub
add
sahf
cdq
sub
pusha
(bad)
pop
or
push
mov
pop
sub
inc
dec
fwait
adc
or
adc
test
and
repnz
push
mul
inc
dec
pop
jp
jp
dec
out
or
push
ret
sub
xor
and
ret
out
cld
das
(bad)
loope
repnz
push
jge
mov
(bad)
and
(bad)
xchg
mov
pushf
push
fcomp
or
mov
test
ret
fcom
stos
shr
jmp
pop
inc
pop
sti
mov
sbb
xor
into
mov
test
dec
mov
sbb
das
mov
cmps
loope
cdq
int3
push
cmp
xchg
jp
ret
jnp
sbb
pop
xchg
push
mov
sahf
mov
pop
nop
sub
or
lock
xchg
je
or
inc
adc
jno
adc
pushf
outs
aad
xchg
fsin
dec
xchg
leave
imul
sub
xchg
cwde
and
cmps
fldenv
cmps
jle
or
mov
jmp
fbld
jl
mov
test
aad
test
jecxz
sub
adc
mov
sub
xchg
out
jbe
fimul
inc
push
loope
sbb
daa
inc
dec
ins
push
cmp
fisubr
mov
dec
in
sbb
push
mov
mov
hlt
or
sub
in
fld
jnp
adc
popa
cli
inc
mov
loopne
pop
pop
in
call
lods
sbb
or
pop
mov
jle
and
into
stc
mov
scas
push
in
xlat
cdq
cs
mov
cmp
mov
push
in
retf
gs
xchg
mov
rcl
adc
fisubr
jnp
repnz
sahf
xchg
ss
xchg
enter
xchg
(bad)
jbe
sti
(bad)
cmps
cli
add
(bad)
pop
inc
imul
mov
aad
xchg
out
iret
shr
dec
sbb
and
out
(bad)
stos
push
mov
xcrypt-cbc
cmps
aam
ins
jg
xchg
jp
xor
xchg
pop
(bad)
ret
sbb
adc
sbb
pop
push
inc
jnp
and
push
into
and
mov
jge
test
(bad)
inc
cmp
out
or
jl
xor
dec
(bad)
push
pop
xlat
rol
inc
adc
jl
or
or
inc
mov
cmp
mov
scas
fild
call
fadd
push
loopne
hlt
fdivr
sbb
pop
mov
ret
jae
push
cld
and
rcr
xor
dec
loope
cmp
sub
mov
add
inc
mov
sti
mov
ins
aad
xchg
scas
aam
mov
rcl
mov
mov
jmp
mov
push
push
mov
out
fadd
in
pop
xchg
inc
and
jg
xchg
add
push
jo
add
lea
movs
shr
add
push
xchg
cdq
xchg
fdivr
xor
aaa
(bad)
fwait
pop
and
or
iret
jmp
dec
xor
pusha
ret
imul
dec
xor
out
mov
xchg
or
in
mov
add
cwde
dec
xchg
lahf
pop
gs
xchg
fistp
out
jns
adc
es
in
cmc
fstp
cmc
add
sbb
(bad)
stc
jg
(bad)
in
xor
addr16
jmp
sbb
jne
dec
xor
push
push
popa
mov
es
jae
out
inc
pop
jp
jmp
mov
push
es
cli
test
sub
jo
or
out
daa
iret
stos
lea
sbb
jle
cdq
(bad)
jno
mov
cwde
sbb
jl
cmp
lahf
bound
nop
jno
mov
lock
fisub
mov
push
cmp
xor
push
mov
pop
jle
lods
dec
mov
lahf
or
jg
shr
mov
out
sbb
inc
hlt
lods
test
call
int
xlat
(bad)
clc
es
cmps
add
outs
ss
inc
add
loopne
imul
sub
dec
dec
cmp
dec
mov
xchg
mov
not
retf
xchg
aam
loopne
neg
cmp
pop
lds
inc
sub
jne
sub
cmps
shl
(bad)
in
bndldx
or
mov
stos
lahf
mov
xor
jmp
into
xor
ret
sbb
push
jo
test
mov
lock
cs
out
in
test
retf
xchg
out
mov
out
push
xchg
gs
cwde
or
mov
xlat
inc
mov
movs
test
mov
xor
scas
scas
xor
pop
(bad)
scas
push
hlt
into
mov
cmp
or
cdq
sbb
mov
clc
push
jns
mov
xchg
stc
popf
je
pop
popf
inc
in
mov
das
xchg
in
pop
dec
cmp
retf
out
mov
test
pop
retf
shr
inc
imul
xor
lods
and
div
gs
jb
(bad)
fdiv
not
cwde
mov
movs
in
adc
addr16
jbe
sub
sub
sub
jl
ja
retf
jecxz
aam
mov
in
pop
or
sti
xor
vcvtps2dq
mov
pop
test
push
inc
cld
jge
mov
ret
cmp
enter
mov
cmovbe
xor
add
dec
das
or
sahf
pop
sub
xchg
cli
adc
mov
(bad)
scas
in
inc
xchg
stc
movs
jnp
sub
arpl
out
push
addr16
adc
and
jbe
les
adc
dec
mov
fidiv
inc
mov
(bad)
add
pop
mov
and
xor
and
jns
add
movs
lods
add
std
adc
fwait
cs
arpl
cmp
out
xor
mov
(bad)
call
fst
jnp
mov
fcom
sub
lock
add
xor
jmp
mov
(bad)
popf
pop
sub
dec
retf
gs
(bad)
cmp
add
pop
ror
fst
xor
add
repz
mov
jle
pop
jle
adc
(bad)
int3
hlt
loope
jmp
push
(bad)
in
fucomip
inc
sti
nop
sahf
xor
sub
pop
pop
test
in
les
test
and
sbb
cmp
outs
lahf
retf
inc
sti
sbb
pop
into
cmp
inc
inc
xor
dec
loopne
mov
call
es
xor
in
dec
dec
out
mov
mov
inc
lea
iret
adc
sbb
aam
cmp
imul
and
cmps
ins
int3
xlat
lock
pop
adc
imul
test
mov
aad
sar
push
loopne
inc
pusha
mov
inc
cmp
aaa
call
dec
jl
sub
test
mov
mov
adc
xchg
sahf
mov
xor
cmps
je
cwde
call
xor
mov
xor
fcomp
cmovae
dec
or
int3
pop
nop
enter
dec
and
enter
cmp
fisttp
jbe
int
push
and
leave
push
gs
dec
mov
mov
lea
or
cmp
sub
loopne
push
dec
push
jp
sbb
aaa
push
inc
lock
sbb
(bad)
das
pop
pop
add
push
into
adc
push
dec
imul
or
or
stos
int
nop
sar
sbb
pop
adc
outs
cs
adc
xchg
sub
rcl
or
push
and
ss
and
dec
rol
test
test
jns
not
and
adc
mov
dec
loop
mov
mov
jae
mov
pop
fwait
inc
lods
mov
cli
mov
pop
sbb
push
fbstp
repz
mov
dec
and
fsub
shl
psubusb
out
sbb
or
icebp
mov
add
popf
cmp
mov
int
sti
dec
pushf
icebp
std
rcl
test
ja
sbb
mov
int
cmp
std
cmp
dec
into
push
mov
ja
adc
sub
xchg
lods
add
lea
ja
inc
scas
loopne
adc
test
retf
mov
inc
stc
xlat
je
and
mov
dec
outs
xor
mov
leave
mov
dec
xor
lock
inc
int
jnp
outs
or
mov
mov
pop
sbb
repz
fwait
arpl
fidivr
js
pop
jne
and
and
pop
cwde
repnz
inc
xor
mov
mov
mov
into
jo
ins
in
fdivr
cmp
sbb
add
pop
push
mov
ds
leave
sbb
inc
neg
mov
ficom
pusha
or
mov
rol
sub
jp
adc
out
and
js
in
test
cmp
outs
xlat
pop
shl
push
push
inc
mov
pop
adc
stos
inc
sub
repnz
cdq
sub
enter
scas
jns
in
mov
rcl
pop
popf
pop
lea
push
inc
sahf
xchg
(bad)
fadd
lods
jle
cmp
loope
enter
(bad)
je
sub
sbb
mov
jmp
sub
mov
xchg
inc
cmps
add
sbb
dec
cmp
rcl
icebp
movs
push
adc
adc
or
aaa
call
cld
test
in
es
nop
int3
mov
or
std
cmc
je
ret
add
and
mov
or
jne
movs
or
rol
lods
addr16
movs
add
stos
mov
add
cmp
sar
ret
imul
mov
pop
movs
neg
dec
mov
mov
mov
sbb
xchg
adc
inc
outs
(bad)
gs
retf
fistp
cmc
mov
fmul
push
ret
push
push
mov
clc
leave
inc
jbe
adc
(bad)
ficomp
push
sub
neg
loopne
jmp
cmp
fiadd
repnz
hlt
fs
fs
mov
lock
enter
std
fisub
cmps
fstp
add
repnz
cmp
add
mov
pop
sub
imul
test
and
adc
sahf
jbe
rol
scas
adc
sbb
retf
jmp
dec
mov
cmp
inc
mov
call
add
push
pop
outs
fwait
imul
lock
jmp
cmps
and
xchg
out
push
mov
jb
adc
mov
and
rcl
in
adc
jne
daa
push
push
lods
ins
leave
mov
ds
sub
cmps
lahf
shl
popf
(bad)
cwde
mov
cmp
xchg
lea
popf
push
jbe
sbb
add
neg
nop
mov
(bad)
or
push
jnp
loope
out
daa
mov
fdivr
mov
stos
sbb
fnsave
stos
pop
ficom
outs
mov
loopne
jnp
pop
adc
and
or
test
out
inc
call
fisub
add
ret
js
scas
mov
std
mov
or
aas
int3
cdq
adc
sub
jle
ins
retf
(bad)
ins
dec
icebp
lea
out
call
add
aam
js
xchg
mov
mov
outs
or
push
jne
jae
inc
test
pop
pusha
lods
mov
icebp
cmp
mov
adc
in
imul
sbb
fs
fmul
ds
push
add
mov
inc
dec
test
xor
add
cmp
ret
aas
push
popa
test
adc
stos
imul
mov
mov
push
cmp
(bad)
sbb
cmp
mov
scas
(bad)
pop
sbb
loop
addr16
and
mov
je
in
out
retf
cli
adc
jl
mov
push
adc
scas
arpl
in
cdq
or
cld
adc
popa
inc
ja
and
mov
std
aad
mov
xor
or
sar
gs
mov
das
jmp
or
and
inc
push
ret
sbb
pop
sbb
jns
cmp
mov
sub
add
mov
mov
pusha
loopne
dec
ret
out
sub
xor
test
fs
pop
fisub
adc
pop
imul
aad
arpl
call
mov
loope
jle
pop
ret
mov
scas
or
dec
xlat
cmp
jns
push
mov
cmp
sbb
sbb
mov
pop
mov
pop
sub
cwde
cmps
xchg
mov
call
push
adc
arpl
sub
shl
sbb
pushf
lods
xor
popf
pop
xchg
fnstcw
adc
pop
fcompp
mul
dec
cld
rol
xlat
jns
and
jne
rol
enter
arpl
or
push
ror
lods
cmp
or
sbb
mov
jnp
jno
enter
cmps
and
sbb
movs
daa
adc
jmp
mov
push
mov
cmp
lea
ins
stc
jge
push
les
pop
jmp
ror
mov
loopne
xchg
xlat
call
xchg
dec
fisub
xchg
mov
adc
xchg
test
jnp
test
aaa
xchg
lock
cli
and
inc
je
xchg
inc
sub
pop
pop
push
sub
cmc
xor
jae
out
xchg
or
dec
fcmovnu
inc
ror
cmp
and
jmp
imul
pop
cmp
shr
or
jns
or
push
pop
jmp
mov
sahf
call
shrd
fwait
adc
adc
out
ret
loop
jb
mov
clc
test
cmp
jo
call
fst
and
rcr
jmp
hlt
shl
mov
and
call
mov
mov
test
lea
push
inc
mov
xchg
test
fadd
add
movs
mov
jnp
pop
cwde
mov
out
out
lds
pop
sbb
push
loop
clc
mov
repnz
pop
xor
in
movs
test
mov
push
xchg
jecxz
aas
cld
add
(bad)
and
daa
aam
xchg
loop
push
in
cmc
push
sub
call
fld
adc
add
or
mov
inc
call
inc
or
push
mov
xor
jmp
outs
out
jb
mov
pop
xchg
mov
fwait
jnp
or
jle
adc
xor
sbb
leave
arpl
push
scas
clc
cli
test
mov
or
pop
(bad)
mov
ss
sbb
mov
mov
xchg
mov
adc
dec
add
xor
mov
lea
or
jecxz
loopne
test
nop
jns
jae
into
jg
gs
popf
adc
scas
inc
add
mov
jg
int
lods
lods
jmp
stos
retf
sbb
jecxz
hlt
mov
setge
pop
shl
ret
das
inc
hlt
sti
cmp
lods
sub
ins
and
int
or
(bad)
rol
pop
mov
cmp
daa
(bad)
(bad)
sbb
or
std
stos
cmp
push
mov
or
jnp
ss
xchg
fsub
and
les
retf
add
dec
mov
lods
imul
xor
xor
cmp
xchg
sub
in
jno
jae
loope
push
scas
cmps
mov
mov
add
cli
pop
cmp
clc
sub
mov
push
xchg
movs
adc
stc
xor
mov
aas
cmc
mov
mov
jmp
iret
add
sub
test
sbb
aas
test
fist
lods
adc
int3
stos
or
pop
mov
pop
addr16
aam
sub
xor
inc
jo
cmps
movs
pop
call
outs
cmp
stos
pop
out
lea
rcl
(bad)
lock
pop
cmp
(bad)
daa
mov
dec
xchg
pop
xchg
call
jnp
mov
test
ret
dec
je
out
push
xor
or
adc
inc
icebp
mov
(bad)
mul
mov
sti
push
jg
dec
adc
lock
(bad)
push
out
cmp
mov
mov
inc
fadd
test
push
lods
sti
test
sub
xchg
adc
in
fwait
pop
je
jge
test
and
lds
(bad)
repz
sbb
cld
push
add
push
jg
int3
sbb
push
push
enter
mov
sar
and
mov
cmp
dec
lahf
jge
popf
pop
pop
shl
sub
test
adc
xor
and
fsubr
sub
fs
jle
repz
or
dec
or
mov
xor
jno
(bad)
stc
xchg
dec
push
test
in
ins
mov
lea
xchg
lea
sub
das
mov
es
pop
loope
fucomp
or
hlt
pop
add
addr16
or
mov
icebp
mov
cmp
shl
cmp
(bad)
cmps
in
js
daa
arpl
inc
jbe
test
cmp
fwait
dec
mov
out
sub
cmps
int3
jp
fadd
jbe
lods
mov
fdiv
fucomi
xchg
(bad)
and
repz
adc
add
and
cwde
inc
div
js
inc
mov
add
inc
bound
pop
jge
inc
sub
retf
call
into
adc
stos
xor
pop
mov
out
dec
je
jb
fdivrp
call
es
xor
sub
xor
mov
sub
add
dec
mov
mov
call
ss
or
mov
cmps
xor
test
imul
ficomp
cmps
cmc
mov
test
lods
jnp
xchg
add
std
add
(bad)
cwde
push
loop
mov
int3
shl
mov
adc
pop
pop
pop
mov
jno
into
mov
pop
xor
adc
dec
(bad)
and
out
mov
cmp
pop
cmp
dec
inc
push
loopne
lds
add
dec
xchg
mov
aaa
mov
adc
cli
test
call
cmp
mov
mov
mov
mov
mov
or
dec
mov
adc
add
mov
(bad)
sti
or
sub
mov
outs
(bad)
push
cmps
jmp
test
ret
stc
sar
scas
das
xor
iret
or
inc
fsubr
mov
(bad)
inc
pusha
fst
jp
(bad)
cmp
mov
xor
out
scas
mov
sti
push
js
xchg
lahf
fadd
sti
lock
inc
(bad)
std
jne
mov
cli
push
mov
xchg
sbb
aam
xor
inc
adc
loopne
dec
and
and
adc
fwait
mov
add
dec
add
xor
cmc
xchg
arpl
loop
repz
cmp
dec
arpl
test
push
mov
mov
jb
mov
aad
push
out
bound
adc
les
mov
cwde
pop
cs
es
jp
(bad)
lods
sub
cmp
in
mov
inc
pusha
inc
xor
mov
lods
cmp
fidiv
and
pop
xchg
imul
pop
or
pop
mov
rcr
cmp
js
shr
mov
mov
cwde
addr16
test
int3
imul
mov
jge
test
and
aam
pusha
fwait
ds
mov
test
sar
pop
ror
imul
or
pushf
push
into
adc
aaa
mov
dec
cmps
mov
clc
dec
test
(bad)
push
cmp
push
out
mov
inc
jns
int3
cmp
ret
jmp
int3
jge
ret
cmp
cdq
jecxz
pop
test
push
bound
ja
mov
fwait
push
push
mov
(bad)
xchg
in
mov
fisubr
rcl
in
ret
pushf
in
push
jnp
cmp
arpl
mov
mov
xchg
call
adc
jb
and
mov
jge
ins
inc
rcl
jmp
clc
(bad)
pushf
and
mov
test
sub
call
jbe
out
fs
cmp
sbb
rol
pop
inc
fcmovne
test
xor
inc
enter
pop
sbb
pop
mov
pop
and
inc
dec
jle
xchg
ja
loop
xor
cmps
fidiv
out
push
inc
xlat
(bad)
fiadd
fsubr
push
nop
outs
pop
daa
cwde
ins
gs
loop
inc
cwde
pavgw
into
sbb
dec
stc
pop
ins
in
xchg
jo
ficomp
mov
push
xchg
out
leave
dec
sahf
mov
xchg
fiadd
push
mov
mov
mov
in
pushf
jge
jmp
imul
pop
cmp
push
add
xchg
dec
loope
aas
pop
aam
sub
ficom
jae
into
xor
mov
mov
call
sbb
imul
shr
loop
dec
je
pop
mov
and
sbb
push
repnz
imul
inc
in
and
xor
mov
lahf
ficomp
jg
add
pop
mov
cwde
mov
pop
push
shl
pop
jge
sbb
in
mov
mov
jp
ins
pop
hlt
rcr
pop
push
(bad)
push
jl
sti
enter
xchg
xor
loope
repz
arpl
sbb
xor
sbb
mov
sub
scas
sti
dec
test
loop
(bad)
pop
lods
or
ins
nop
retf
cld
or
adc
lods
inc
sub
pushf
or
jmp
sub
daa
gs
cmp
test
mov
clc
adc
dec
xchg
fstp
ja
mov
call
rol
mov
mov
mov
push
dec
jp
imul
mov
test
(bad)
repnz
sub
pop
jmp
jb
and
js
jl
je
ja
repz
test
dec
inc
fs
sub
std
lods
in
xlat
add
fistp
sub
cdq
xchg
sbb
xor
jno
jle
int3
js
outs
jo
sahf
and
add
call
lahf
sub
fwait
sbb
jae
leave
shl
dec
cmp
push
out
rcl
or
pop
daa
or
push
push
daa
ret
mov
xor
ja
xchg
rol
cmc
in
xchg
pop
enter
sbb
dec
fld
xor
clc
jnp
pop
cwde
sbb
or
(bad)
aam
mov
xchg
addr16
frstor
div
xor
cmp
xor
and
outs
cmps
push
mov
cmp
loopne
add
jnp
aad
mov
cmp
push
adc
mov
out
(bad)
jae
jo
inc
dec
cmps
inc
lock
cmp
adc
call
sbb
inc
mov
fucom
cmc
inc
dec
cmc
daa
jae
xor
enter
dec
ss
jp
(bad)
imul
mov
push
push
mov
enter
jmp
mov
xchg
popf
(bad)
scas
cmc
mov
dec
sti
retf
cmps
sbb
das
or
cdq
push
(bad)
inc
lock
push
mov
sbb
imul
xchg
addr16
or
not
sar
jp
cwde
mov
sub
cld
sub
jno
xor
not
sbb
cmp
pop
es
cmp
outs
mov
lods
xlat
ins
push
add
mov
jp
in
jb
add
dec
add
add
jl
ss
dec
test
fcom
arpl
call
aam
inc
pop
add
imul
les
sar
xchg
dec
or
sub
movs
sbb
or
push
ins
out
sbb
out
push
push
je
cld
std
push
add
mul
pop
movs
rcr
ins
cmc
aam
stos
pushf
or
popf
push
cs
xlat
std
jmp
sbb
xchg
xchg
push
mov
(bad)
jo
xor
mov
jmp
jecxz
movs
mov
rcr
sbb
mov
push
fbld
xchg
lock
adc
pop
push
idiv
xor
mov
add
in
repnz
mov
inc
xchg
fld
(bad)
mov
xchg
mov
mov
(bad)
xchg
jg
ins
add
and
mov
in
jle
lock
xchg
aam
sub
je
mov
cwde
dec
sub
pop
or
dec
inc
dec
nop
call
adc
pop
and
xchg
or
mov
pop
jne
ret
add
and
and
cmps
mov
cmp
inc
fiadd
sub
stos
sub
rcl
add
faddp
pop
mov
ds
sbb
adc
dec
adc
imul
inc
popa
(bad)
mov
and
xor
sub
pop
xlat
stc
fnsave
adc
xchg
outs
push
dec
jge
jle
inc
je
cwde
dec
cmp
push
dec
cmp
out
ins
sbb
in
cli
cld
xchg
in
aam
in
outs
daa
les
dec
stos
fmul
dec
ins
cmps
ficom
(bad)
mov
sub
push
mov
add
pop
push
inc
pop
mov
dec
retf
or
ds
add
cwde
outs
retf
or
fwait
cmp
fiadd
call
and
pop
stos
sbb
jnp
leave
sub
mov
stc
(bad)
out
fisub
mov
jnp
(bad)
jg
mov
jecxz
mov
jle
rol
jno
inc
mov
ins
lock
in
je
out
sti
sbb
xchg
aaa
mov
mov
sbb
jbe
(bad)
retf
daa
pop
sbb
int3
add
out
sar
add
xor
xor
jmp
jns
cmp
cmp
mov
in
cmp
add
pop
push
stc
mov
push
lods
fwait
aam
push
in
jle
ds
inc
mov
je
mov
repz
lock
dec
out
jae
dec
sar
push
adc
in
in
loope
jne
push
pop
xor
dec
imul
jge
cs
cmp
add
fcomp
repnz
jmp
mov
(bad)
test
lds
cmp
in
imul
xchg
jmp
jle
call
push
mov
cmp
shl
popa
aam
mov
sub
adc
mov
mov
dec
sub
pop
repnz
pop
mov
inc
cmp
fnstcw
ja
popa
or
test
xchg
bound
xor
adc
adc
shr
lahf
add
mov
sbb
push
or
jno
ins
xor
adc
push
xchg
mov
popf
dec
pop
outs
stos
fimul
scas
int3
cmp
mov
retf
imul
sbb
or
sub
push
jecxz
push
outs
xor
nop
xchg
rol
repz
imul
lock
outs
loope
cmps
in
cdq
dec
xor
sbb
stos
add
scas
in
fiadd
dec
add
xor
cmp
call
dec
scas
lds
xchg
push
ja
iret
and
pushf
mov
cmp
add
mov
ds
std
add
or
outs
inc
or
in
xor
neg
xchg
gs
jmp
hlt
leave
jb
test
lds
adc
pop
dec
and
jecxz
vpshufd
loope
pop
std
sbb
push
rcr
jge
push
popf
xchg
(bad)
push
jns
cmp
popf
lea
pop
bound
xor
push
adc
das
pop
or
pop
out
inc
movs
push
scas
cmps
hlt
inc
sub
xchg
fdivp
ror
mov
dec
div
and
sub
pop
mov
mov
mov
mov
adc
into
mov
cmp
enter
cmps
jecxz
push
add
mov
repz
mov
jmp
push
out
inc
hlt
jmp
pop
mov
xchg
jmp
int
push
cmp
push
add
out
inc
pop
sahf
sbb
ja
shl
fwait
stos
pop
mov
jmp
or
sar
mov
loope
dec
stc
xor
xchg
jg
enter
pop
jae
push
lock
jnp
in
add
xchg
xchg
leave
jg
mov
cld
xchg
sbb
(bad)
js
dec
push
fisttp
xchg
dec
add
mov
and
ret
sbb
adc
jg
sub
jmp
pop
fsubr
popa
call
popfw
mov
shr
adc
mov
jle
sub
jmp
fisttp
in
ret
in
pop
in
jo
dec
lea
xor
scas
xchg
jg
mov
jbe
push
xchg
pop
dec
cmp
fwait
test
dec
mov
imul
inc
int
data16
and
shl
rcr
leave
lds
pop
ds
push
cli
push
pop
mov
adc
lahf
add
xchg
in
xchg
hlt
pop
or
retf
cmps
in
jge
mov
mov
movs
mov
cmp
nop
popa
jbe
cs
mov
outs
cmc
dec
xchg
xor
push
adc
push
je
dec
xchg
jecxz
in
ins
hlt
ins
sbb
jmp
cmps
or
and
jb
(bad)
mov
(bad)
ds
mov
ins
outs
mov
fld
jb
mov
or
push
popa
ret
pop
mov
cmps
aad
xor
shl
std
stos
inc
out
popf
sbb
xchg
aas
aad
push
mov
loope
rcr
xlat
fwait
xor
jmp
in
ret
push
push
jmp
jno
xor
jmp
or
and
loope
lea
push
fsub
pop
popa
pop
fwait
xor
pop
xor
in
sub
loope
arpl
inc
(bad)
shl
push
test
mov
jnp
mov
pop
adc
dec
mov
lods
stos
mov
(bad)
imul
jg
in
sbb
popf
jns
jnp
and
cs
push
rcl
jmp
rcl
mov
mov
aad
test
aad
xor
popa
pop
push
or
dec
push
mov
adc
mov
cs
int
lar
loope
test
call
(bad)
pop
add
mov
sub
xor
stos
push
pushf
or
std
sub
push
js
xchg
ins
jp
adc
cmp
in
xchg
xchg
adc
mov
cmps
fist
leave
out
fs
cdq
in
lock
sbb
aad
sub
sub
add
inc
mov
xor
fimul
adc
repz
dec
jmp
xor
jmp
jl
ret
jg
sbb
aad
ret
gs
jo
push
and
cmps
push
out
shl
dec
daa
cli
add
scas
inc
inc
test
sahf
pusha
jbe
mov
mov
iret
imul
cli
push
mov
pop
mov
in
adc
popa
scas
adc
out
movs
(bad)
aad
cs
add
add
push
(bad)
ficomp
jae
pop
jne
sub
(bad)
(bad)
adc
xor
call
test
or
in
jmp
sbb
or
sub
adc
cmps
inc
and
jbe
cdq
(bad)
dec
mov
xor
mov
aaa
fbld
shl
xchg
adc
mov
push
pop
xchg
test
and
inc
sti
popa
xlat
push
fiadd
pop
xchg
mov
outs
lahf
aam
ret
xor
push
(bad)
push
icebp
sub
sbb
inc
(bad)
shl
cmp
pop
lea
inc
mov
test
lock
addr16
fadd
mov
pop
sub
inc
mov
adc
inc
cwde
test
adc
mov
pop
popa
ss
fsub
in
retf
or
test
into
dec
and
pop
push
retf
out
repnz
inc
mov
push
xchg
das
shl
pop
outs
enter
cmp
xor
rol
es
(bad)
aam
push
sbb
mov
push
xlat
ret
(bad)
push
push
push
movhps
fwait
je
mov
ret
jmp
jl
les
pop
lds
jmp
out
mov
scas
sbb
or
test
mov
jl
push
fdiv
mov
aas
sti
mov
jl
or
inc
xlat
pop
mov
ret
push
aaa
cmp
push
or
and
icebp
pop
shl
cld
lds
imul
jle
cmp
mov
ss
nop
jmp
retf
outs
pushf
mov
cdq
pop
aad
aas
adc
sbb
jb
push
inc
retf
push
enter
mov
push
push
xlat
repz
mov
sub
int
call
pop
adc
in
daa
jnp
pop
inc
jmp
test
xchg
or
stos
xchg
mov
stc
mov
cld
es
fwait
call
xchg
les
push
sar
pop
loopne
fwait
cmc
jge
xchg
fidivr
pop
push
mov
call
xchg
cmp
inc
add
inc
xor
stos
repz
addr16
sub
inc
push
push
mov
popa
ret
outs
es
repz
scas
imul
test
inc
jmp
jmp
ins
ds
int
pop
lea
push
sub
loopne
fidiv
sahf
pop
add
pop
fdiv
(bad)
popf
retf
mov
dec
sbb
js
jns
inc
loop
iret
push
sbb
test
add
(bad)
push
add
icebp
mov
lods
push
aas
sahf
push
inc
mov
xor
push
inc
dec
sub
js
and
mov
mov
mov
pop
xchg
mov
mov
jnp
dec
addr16
xchg
imul
dec
dec
xchg
ja
imul
cmps
mov
repnz
jb
and
inc
data16
adc
pushf
mov
lahf
das
ret
inc
dec
mov
ror
and
icebp
mov
imul
xor
out
cwde
mov
(bad)
ins
and
lock
cwde
jge
(bad)
movs
cmp
sti
adc
movs
and
cli
icebp
mov
retf
fstp
mov
adc
add
dec
mov
enter
sbb
xchg
dec
mov
adc
xor
cmp
repz
stc
dec
mov
dec
mov
out
inc
xchg
pop
iret
inc
pop
push
or
mov
xor
je
std
js
imul
es
rol
jns
mov
das
sbb
jb
pop
adc
mov
hlt
inc
cmp
mov
lock
enter
or
inc
cdq
dec
cmp
mov
in
and
jp
and
jne
enter
cmp
sahf
push
mov
mov
lea
adc
stc
mov
(bad)
int
jno
sbb
inc
cmp
mov
sahf
mov
imul
pop
xor
les
xchg
push
test
es
cmps
fdivr
aaa
movs
inc
dec
loopne
ss
mov
push
out
popa
adc
sub
imul
imul
inc
jecxz
ins
and
retf
fld
in
mov
cwde
aad
adc
push
dec
movs
leave
jae
adc
sub
mov
xor
dec
fst
ror
dec
dec
nop
lds
sub
sub
js
xchg
hlt
add
int
aad
je
ret
add
adc
push
or
dec
mov
stos
jb
xchg
clc
lahf
adc
rol
cmp
pop
push
mov
mov
push
adc
pop
iret
xchg
jae
dec
cmp
js
loope
daa
inc
popf
xor
jno
mov
je
jmp
imul
repnz
mov
mov
cs
rol
repz
and
dec
cs
inc
pop
clc
adc
pusha
das
popf
cwde
jle
pop
outs
fst
xchg
xchg
lea
and
leave
jge
cmc
in
fwait
(bad)
mov
inc
test
test
add
mov
cmp
adc
jne
xlat
mov
div
xchg
dec
std
gs
and
xchg
std
mov
jecxz
in
jp
nop
pushf
mov
arpl
outs
arpl
in
adc
out
sub
dec
mov
xor
push
push
jbe
jo
adc
shl
call
xor
(bad)
mov
mov
jge
dec
push
push
in
stos
fisttp
aas
addr16
inc
lods
cmp
or
push
int
mov
in
or
or
and
jb
jp
stos
gs
dec
jae
push
lods
scas
icebp
add
pop
xor
stos
sub
mov
fcmovbe
jl
test
add
pushf
sbb
sbb
(bad)
imul
test
inc
pop
out
into
sti
not
mov
mov
out
data16
push
repz
xor
mov
cld
and
std
movs
loop
scas
gs
int3
ja
fisub
sahf
cmps
mov
xchg
fwait
mov
inc
adc
fcmovnu
xchg
cmp
sahf
pop
jbe
es
std
pop
push
push
movs
mov
jmp
cmp
jp
aaa
add
jnp
pusha
movs
mov
push
imul
popa
cdq
jmp
test
sub
jmp
dec
pop
imul
fiadd
xchg
sbb
mov
test
pop
scas
jnp
imul
sbb
popf
push
sub
clc
movs
jb
xor
rcl
repz
sbb
test
and
push
lahf
inc
mov
ins
shl
mov
(bad)
mov
int3
mov
xchg
popf
jecxz
add
mov
scas
fisttp
aad
rol
pop
dec
and
cmp
push
mov
push
hlt
lahf
xchg
iret
add
loopne
sbb
push
lds
cmp
mov
in
xchg
push
sbb
sub
jbe
sbb
mov
out
push
add
gs
adc
inc
popf
cdq
out
loopne
adc
aas
mov
movs
lods
loopne
xchg
mov
pop
aad
adc
enter
push
pop
call
not
xor
ror
dec
stc
sub
push
sub
shl
jns
inc
jae
sub
mov
popa
dec
or
das
mov
inc
mov
xor
dec
push
cs
(bad)
dec
push
test
mov
jo
lods
pop
inc
and
mov
inc
mov
push
inc
pop
lea
in
mov
(bad)
sar
mov
push
inc
xor
rol
push
xchg
ds
inc
sbb
sub
xchg
movs
mov
std
jnp
scas
ds
push
sbb
repnz
sbb
dec
stos
push
cmp
cmp
dec
xor
xchg
mov
mov
clc
cwde
jge
das
mov
out
jge
out
xchg
das
cmp
fisttp
dec
mov
int3
pop
mov
fistp
(bad)
loop
adc
pop
cmp
sub
fiadd
cmps
adc
ja
retf
inc
inc
fimul
xchg
adc
ret
iret
not
cmp
in
inc
mov
dec
int3
es
sub
pop
cmp
jle
out
(bad)
fstp
and
sbb
mov
repz
cmps
mov
mov
push
fisttp
pusha
jb
cwde
out
push
dec
(bad)
stc
mov
push
mov
sbb
xchg
scas
es
mov
cli
aad
movs
(bad)
cmp
test
call
pop
xchg
dec
xchg
mov
push
xchg
sti
adc
push
and
mov
xor
sub
das
shl
inc
imul
aam
push
inc
dec
dec
dec
sub
mov
push
mov
adc
(bad)
sub
and
(bad)
push
clc
outs
cld
add
mov
dec
ret
out
pop
retf
cmps
add
mov
dec
and
jge
xor
adc
dec
lds
rcl
pop
jmp
es
push
(bad)
jnp
add
and
sbb
xchg
ret
or
aad
add
shl
add
cli
and
xchg
into
test
sub
inc
inc
cmp
stc
sbb
push
cmp
push
pop
mov
mov
aad
push
mov
push
(bad)
test
pop
sub
clc
push
mov
(bad)
sbb
aam
ror
add
bswap
scas
add
or
jbe
(bad)
test
mov
fsubr
bound
sti
sbb
out
mov
inc
sub
sub
repz
call
mov
or
mov
push
(bad)
push
sub
xlat
pop
mov
inc
inc
push
lds
jb
in
(bad)
mov
and
jge
sbb
jbe
jmp
movzx
adc
inc
add
div
rcr
pop
jnp
xchg
add
(bad)
xchg
fs
mov
pop
xor
push
in
arpl
out
jecxz
jbe
or
(bad)
sub
out
dec
add
mov
jmp
sub
int
xor
inc
cli
test
fcmovb
adc
adc
mov
mov
mov
imul
(bad)
xchg
adc
sub
inc
retf
(bad)
mul
test
xor
ins
inc
xchg
cdq
jb
push
mov
retf
aas
movs
pop
and
mov
fsub
cdq
aam
adc
dec
fadd
xor
add
fist
add
jo
mov
mov
das
jne
xor
nop
sub
mov
dec
popa
ins
hlt
or
sbb
jp
lahf
mov
stos
in
xor
fcomp
fidivr
add
jmp
mov
sbb
ins
adc
pop
retf
xor
out
push
pop
jns
mov
inc
fwait
stc
mov
ins
call
mov
jae
cld
xor
fldenv
mov
sar
out
scas
xchg
repnz
fimul
repz
mov
add
retf
imul
je
mov
js
sub
fisubr
adc
bound
cmc
lahf
sub
cmp
ficom
sbb
cli
xchg
sbb
js
jl
lods
jg
or
push
xchg
cmps
pop
out
into
adc
nop
sub
xor
sar
sub
xor
mov
pop
icebp
xlat
in
xor
push
jg
inc
cmps
xor
pop
test
or
mov
add
lock
fdivr
iret
xchg
lods
popf
push
inc
mov
fidivr
jns
xor
sbb
jnp
jne
mov
jb
les
into
int
loope
sbb
in
leave
ins
sbb
xchg
movs
xchg
sbb
cdq
inc
mov
jns
fdivp
outs
(bad)
paddusw
not
cmp
cli
out
imul
mov
mov
mov
mov
into
and
or
outs
test
clc
mov
jle
add
jbe
iret
add
pop
sbb
cmc
xor
mov
(bad)
push
(bad)
rcr
or
inc
loopne
data16
cs
fidiv
fist
imul
retf
push
mov
aam
cld
and
call
or
jmp
push
mov
dec
or
pop
and
sub
add
test
(bad)
in
call
stc
jecxz
cdq
xor
dec
jb
shl
adc
adc
movs
pop
je
cdq
out
adc
cmp
in
mov
popa
dec
(bad)
es
adc
jnp
nop
bound
(bad)
xchg
inc
cs
test
loop
jmp
fisubr
repz
push
or
fnsave
dec
(bad)
xchg
inc
ret
int
or
ds
pusha
adc
sbb
adc
mov
inc
mov
(bad)
int3
sub
(bad)
out
js
arpl
lods
mov
xchg
or
sub
adc
jp
adc
push
repnz
push
lahf
mov
xchg
adc
push
jp
inc
lods
add
leave
lahf
adc
adc
lock
mov
push
or
int
mov
enter
inc
mov
enter
mov
add
pop
sub
test
adc
inc
add
scas
std
mov
jp
inc
add
mov
outs
ret
and
push
mov
jg
or
inc
pushf
and
or
aas
mov
sbb
mov
idiv
xor
fldenv
pop
imul
mov
mov
inc
icebp
jecxz
in
pop
push
int3
mov
inc
test
push
movs
inc
(bad)
xor
xor
clc
mov
xor
sub
cdq
retf
icebp
push
bound
rcr
test
add
pop
fst
pop
repnz
dec
jl
lods
fcomp
mov
or
ja
out
lea
sub
ror
pop
xor
and
inc
push
les
mov
pop
or
(bad)
xchg
aaa
mov
sbb
inc
mov
shr
in
lods
pop
out
ja
pusha
(bad)
dec
je
push
sub
pop
dec
jbe
sbb
lock
inc
or
(bad)
stos
inc
cdq
adc
jp
xor
dec
jle
jno
jno
mov
jo
mov
je
mov
cmp
adc
pop
mov
lea
mov
retf
sub
mov
stos
out
stc
mov
add
(bad)
(bad)
in
dec
ins
(bad)
sbb
sahf
jnp
aam
pushf
jmp
mov
(bad)
sub
retf
adc
cmp
push
pop
(bad)
inc
test
inc
adc
scas
cmp
adc
out
dec
mov
dec
sub
pop
mov
jecxz
cmc
push
push
sub
sar
addr16
dec
push
sub
cmp
out
mov
ds
cmp
jmp
inc
sub
pusha
ss
popf
lods
dec
jmp
mov
and
sbb
test
mov
cmp
nop
sub
scas
mov
ins
or
mov
jno
pop
dec
push
push
pop
stos
cwde
iret
lock
jmp
ret
aam
dec
test
jg
call
inc
inc
imul
and
jle
push
gs
jns
add
or
mov
mov
inc
or
in
cdq
cmc
pop
jge
jb
sbb
movs
dec
mov
mov
pushf
retf
mov
jbe
jmp
stc
sbb
int
fcmovbe
mov
jmp
popf
ins
cmp
gs
fstp
sub
aaa
pusha
in
push
popf
arpl
and
cwde
or
sub
and
push
xor
cmp
or
je
mov
dec
scas
test
mov
mov
inc
mov
bound
dec
dec
fmul
add
scas
push
push
sub
test
int
xchg
lods
rol
clc
rcl
enter
mov
xor
pop
stos
dec
jmp
push
gs
std
shr
je
movs
mov
test
sbb
sar
fcmovb
(bad)
popf
add
loope
push
adc
(bad)
fmul
pop
and
hlt
mov
push
or
(bad)
mul
clc
lds
int
mov
mov
mov
push
sbb
aas
out
pushf
xchg
clc
out
dec
sub
frstor
sahf
pop
add
imul
mov
retf
in
js
scas
loopne
or
mov
inc
outs
loop
pop
inc
rcl
rcl
(bad)
xchg
outs
addr16
mov
push
jo
cmp
add
stos
dec
add
inc
push
fbld
xchg
sar
sar
push
ds
inc
cmps
jg
cmp
test
xor
xchg
mov
mov
cmp
or
mov
mov
repz
push
cmp
(bad)
dec
adc
scas
jnp
xchg
es
inc
jae
jae
je
das
pop
mov
jp
xlat
stc
and
call
mov
pushf
push
fwait
dec
cld
ret
mov
lods
js
jp
or
jg
mov
clc
pop
sub
dec
sbb
pushf
jp
mov
cmp
fwait
imul
(bad)
push
js
into
xchg
pop
imul
lahf
xchg
mov
push
not
mov
les
xor
add
mov
dec
dec
popf
xor
jb
xchg
pusha
stos
in
xchg
shl
bound
pop
les
cdq
scas
pop
or
jle
cs
retf
add
jecxz
mov
je
lock
aas
jl
in
pop
(bad)
mov
and
cmp
mov
addr16
ret
push
mov
adc
ins
and
or
test
mov
inc
fs
icebp
mov
test
out
fcomp
xchg
sub
mov
mov
xor
lea
sbb
icebp
jmp
sub
leave
adc
and
and
aam
mov
and
push
(bad)
mov
jle
call
pop
repnz
push
iret
imul
jl
inc
shl
or
and
test
mov
cmp
daa
mov
mov
shl
and
xchg
push
xor
mov
cdq
fsub
lds
xchg
cwde
ins
stc
and
lea
out
fs
mov
cmps
jo
jbe
stos
pop
push
inc
push
jle
push
add
call
data16
push
sub
icebp
out
(bad)
adc
dec
dec
jge
div
js
inc
xchg
push
jg
add
and
dec
lods
jp
cs
mov
daa
fimul
scas
loope
mov
jb
out
fsub
dec
movs
inc
jmp
mov
adc
cmp
movs
mov
adc
sbb
mov
mov
mov
add
in
push
in
add
jmp
inc
(bad)
xor
(bad)
ins
jmp
xchg
or
shl
xchg
and
(bad)
out
inc
(bad)
int3
cdq
loop
jl
aad
cwde
mov
mov
dec
mov
inc
js
es
mov
popf
out
out
mov
cmps
sti
(bad)
and
push
mov
jl
jno
movsx
sub
loope
in
rcr
mov
or
or
ins
pop
cmp
int3
cmp
cmp
hlt
jg
mov
and
jbe
aaa
mov
aam
cmp
test
add
inc
or
adc
shr
mul
idiv
adc
cmp
adc
ffree
jle
jno
(bad)
addr16
mov
pushf
cmp
mov
dec
cmps
or
jge
mov
xchg
fsub
enter
cdq
js
call
jb
fld
aam
fisubr
sahf
sub
and
or
xchg
xchg
pop
xchg
add
into
sbb
aaa
jg
and
cmp
ins
push
jecxz
lds
ins
cmp
cmp
mov
xor
cmp
xchg
mov
and
sub
icebp
jge
int
aad
outs
dec
push
mov
xor
inc
mov
adc
fwait
mov
repz
push
mov
push
shr
mov
or
pop
mov
jno
push
enter
test
rcl
lods
sub
cs
and
lods
cmp
add
out
(bad)
dec
jecxz
mov
xchg
or
fnstenv
cmp
jmp
(bad)
jns
jmp
inc
inc
xlat
outs
sbb
sub
div
sar
aaa
test
call
pop
add
xor
pop
stos
test
out
rol
lds
sub
in
cmps
and
daa
xchg
(bad)
imul
push
sahf
outs
retf
(bad)
pop
outs
test
fnstcw
aam
sub
arpl
and
mov
cmps
mov
and
adc
imul
mov
mov
jo
pop
fistp
xchg
adc
adc
and
xchg
sub
xchg
sbb
push
in
dec
add
xchg
out
sub
jbe
arpl
or
mov
cmp
mov
mov
jns
test
outs
int
cmp
mov
mov
push
xor
mov
out
sub
mov
mov
or
sbb
data16
fs
xor
jge
push
data16
cmp
pop
fsub
das
push
push
add
xlat
sub
dec
pop
lods
fstp
jmp
repz
les
lods
or
fwait
test
mov
fbld
leave
sbb
sub
in
xchg
mov
xor
lods
xor
not
mov
mov
fldcw
mov
daa
movs
retf
(bad)
jp
cmps
popf
mov
mul
mov
popf
adc
into
jno
out
mov
rol
jnp
jg
cmp
inc
out
pop
rol
xlat
jmp
out
mov
(bad)
jae
int3
cmc
call
cmp
inc
pop
les
out
inc
xchg
cdq
inc
mov
mov
sub
cmp
jmp
retf
pop
into
out
ret
clc
add
rcr
mov
scas
pop
(bad)
loopne
popa
aaa
cdq
stos
sbb
push
pop
call
add
xchg
cmp
push
and
lods
cmp
addr16
bound
adc
(bad)
hlt
pop
mov
fadd
mov
pop
call
inc
sub
rcl
xor
mov
jle
in
mov
in
movs
lods
idiv
int
pop
jmp
stos
lahf
ds
or
pop
outs
mov
and
dec
jnp
fimul
xor
ins
xchg
fwait
aam
jne
or
mov
loope
repnz
fisubr
popa
push
and
mov
xor
and
sar
xor
sub
movs
adc
mov
sbb
pop
int
xor
ins
mov
cs
outs
pop
cmp
adc
inc
arpl
clc
dec
cmps
push
clc
mov
cld
push
rcl
add
sbb
sar
cmp
or
idiv
mov
sub
jae
les
xchg
or
(bad)
mov
std
and
cmps
in
push
jno
push
push
inc
movs
cmp
and
hlt
jns
push
ins
inc
dec
je
push
xor
aad
mov
fimul
lods
adc
sbb
in
or
jmp
enter
not
lock
fwait
or
loop
xchg
jmp
xchg
das
bnd
mov
ins
pop
outs
out
std
popa
enter
lahf
sbb
fs
in
mov
mov
scas
sub
idiv
cmp
inc
ds
outs
mov
fist
xor
aad
leave
ds
je
adc
call
(bad)
mov
enter
sub
loopne
in
rol
popf
mov
mov
xchg
inc
call
idiv
in
inc
nop
push
adc
xchg
scas
dec
jmp
jnp
cld
xlat
mov
aas
mov
cmp
hlt
arpl
mov
sub
dec
icebp
dec
push
push
cli
push
dec
test
loopne
dec
pusha
das
jge
adc
cli
test
jmp
jnp
(bad)
pop
inc
adc
inc
cmp
inc
test
popf
imul
push
test
mov
lds
pop
repnz
cmp
add
pop
dec
jge
arpl
xchg
aaa
adc
ss
pop
fiadd
sbb
push
imul
fadd
push
pop
dec
sub
cli
adc
movs
jecxz
(bad)
and
(bad)
jne
je
mov
out
lahf
test
imul
aad
in
push
mov
add
sar
lock
sbb
and
sub
loope
xor
lods
sub
mov
into
in
(bad)
call
bswap
pop
es
fldenv
inc
jecxz
in
jle
sub
mov
int3
adc
sar
xchg
ja
mov
jl
outs
cmp
inc
xchg
iret
push
dec
ror
or
xlat
mov
out
cmp
(bad)
aad
aad
xor
mov
push
lods
push
in
sub
and
cmps
and
outs
push
test
ins
dec
movs
rol
imul
cmc
jmp
dec
mov
in
cld
jge
nop
jnp
add
sar
pushf
adc
int
sbb
pop
(bad)
rol
jbe
mov
scas
xchg
adc
loopne
mov
cli
push
stc
inc
clc
adc
test
mov
xor
nop
movs
or
loope
fs
inc
mov
pop
dec
push
mov
inc
outs
sub
aaa
std
xchg
fistp
dec
lahf
push
xchg
mov
in
fldenv
test
std
gs
dec
sub
sub
shl
addr16
not
add
mov
outs
and
ret
test
add
fisubr
push
imul
sar
sar
outs
push
stos
js
xchg
sbb
pusha
mov
push
sub
fcomp
add
(bad)
mul
jb
int3
dec
stos
call
test
jae
sti
xor
fdiv
ret
inc
jecxz
xor
loop
fimul
out
mov
push
xor
cmp
dec
and
jp
lahf
mov
or
and
pop
imul
inc
jno
lods
xor
xchg
out
jge
mov
sub
mov
jmp
test
dec
inc
mov
into
push
push
mov
push
dec
dec
jmp
xchg
mov
idiv
hlt
retf
sbb
stos
icebp
aad
adc
ds
xchg
pop
pop
xor
out
jle
cld
adc
and
pop
inc
hlt
call
cmp
out
mov
rcl
data16
mov
mov
dec
pop
inc
lock
push
inc
(bad)
out
(bad)
adc
mov
shr
pop
sub
mov
dec
push
jmp
ds
push
lea
fwait
jae
popa
aam
xchg
aam
adc
pop
or
xchg
xor
call
fwait
dec
pop
pop
push
out
and
call
loop
xchg
je
mov
mov
out
retf
mov
cld
mov
xor
stc
mov
xor
mov
outs
add
inc
dec
loope
add
test
xlat
fld
js
push
pop
lods
clc
das
mov
cmps
in
lock
lds
gs
adc
push
and
out
mov
sub
sbb
push
mov
dec
enter
in
inc
movs
aas
mov
mov
or
jb
xlat
mov
dec
mov
cmp
int
(bad)
mov
or
adc
scas
(bad)
mov
pop
xchg
loope
aam
les
xchg
and
lods
push
cmps
nop
das
mov
sbb
out
mov
fisttp
stos
ins
sbb
stos
sbb
imul
adc
jbe
hlt
rep
inc
fiadd
mov
adc
cwde
and
dec
xchg
stos
in
lds
ror
fs
(bad)
outs
xchg
add
shl
and
or
(bad)
jnp
inc
ins
lods
lock
sahf
pop
and
mov
jmp
push
mov
and
adc
or
retf
(bad)
push
lods
ret
or
ror
pop
and
(bad)
xor
fimul
sti
cmp
adc
mov
ror
mov
std
xchg
adc
xor
mov
pop
push
add
jmp
fdivrp
lea
int
jecxz
mov
scas
adc
add
adc
into
arpl
aaa
dec
pusha
or
inc
mov
bound
add
aaa
pop
call
jp
loopne
shl
xchg
xor
in
fdivp
pop
pop
dec
sub
xor
push
jbe
aam
xor
dec
sahf
adc
lods
imul
mov
jnp
bound
adc
pop
ds
outs
loopne
push
aam
icebp
add
and
mov
mov
mov
shr
fldenv
mov
cmp
cld
push
mov
popa
mov
out
mov
cmps
pop
pop
jnp
shl
xchg
mov
retf
inc
jns
mov
pusha
add
cmc
pushf
stos
sbb
ja
and
add
sub
xor
icebp
mov
dec
fidiv
xor
mov
mov
cli
add
ret
mov
and
fwait
ja
aas
aaa
les
dec
fidiv
daa
int
xchg
scas
jnp
or
mov
shr
mov
adc
or
and
sbb
mov
and
mov
sti
fs
int3
rcr
push
das
xchg
lods
cmp
jge
outs
cmp
ins
jmp
jae
fdiv
cmps
gs
lahf
ret
pop
jmp
xor
fdiv
jg
mov
movs
push
mov
sti
push
sbb
sub
out
add
lods
inc
jg
sbb
jae
push
nop
clc
mov
scas
mov
mov
mov
inc
lds
jl
pop
std
xchg
dec
leave
pusha
dec
adc
cwde
loopne
movs
lock
sub
sbb
arpl
sar
cli
cmp
mov
mov
adc
ffree
shl
aas
test
push
dec
lock
clc
cmp
fcom
cmc
(bad)
pop
and
cli
mov
mov
jp
mov
adc
fnop
js
imul
push
mov
lds
loopne
test
cmp
fdiv
cwde
lods
cmp
das
shl
sahf
in
out
(bad)
mov
push
cwde
test
inc
inc
push
std
in
sub
in
iret
es
cs
popf
pop
cmps
adc
xchg
call
inc
fdiv
outs
dec
mov
dec
xor
mov
mov
or
mov
xchg
jg
cmp
call
jb
push
xchg
in
mov
xor
mov
xchg
outs
mov
push
xorps
in
cmps
and
or
mov
nop
jl
push
dec
in
lods
js
add
mov
sub
push
out
clc
in
ja
cmps
and
js
jl
fdivr
or
nop
pushf
(bad)
sub
bound
imul
popf
mov
jl
sahf
add
ret
add
add
(bad)
int3
fadd
inc
jmp
outs
cmp
inc
jl
push
dec
mov
js
pusha
enter
push
sbb
ja
lahf
mov
jne
mov
ret
sbb
push
inc
mov
add
rol
xor
dec
mov
jge
and
mov
push
out
sub
into
xchg
adc
outs
(bad)
retf
mov
inc
or
mov
push
out
add
sub
fs
sbb
inc
repz
(bad)
dec
into
call
push
xchg
or
jb
inc
std
or
loop
push
mov
movs
dec
xor
cmc
and
mov
in
xchg
loop
jp
jmp
push
mov
pop
push
pop
or
and
aas
(bad)
mov
nop
(bad)
(bad)
push
inc
ins
pop
popa
mov
enter
xor
ja
xor
add
sub
xlat
jno
imul
dec
add
or
adc
cmp
mov
fidiv
into
jecxz
xor
popf
cmps
fst
sub
jo
je
cmp
int3
push
mov
xor
mov
lea
aas
cs
dec
inc
fisub
adc
leave
in
stos
sub
mov
or
add
mov
push
movs
mov
cmps
xchg
inc
jmp
adc
(bad)
or
cli
nop
ja
lods
cs
mov
pop
lods
in
xchg
inc
(bad)
mov
sti
inc
push
push
xor
and
inc
pop
inc
jl
outs
push
pop
and
in
not
push
rol
push
pusha
sbb
xchg
loopne
in
inc
stc
mov
aas
jne
jecxz
cdq
xlat
(bad)
nop
(bad)
lds
(bad)
or
clc
add
jge
jno
cmps
movs
jmp
popa
push
mov
test
and
adc
mov
pop
xor
jmp
dec
dec
int
jne
rcr
les
and
mov
or
aaa
out
mov
mov
into
adc
in
aas
xor
xor
mov
js
inc
outs
pop
into
push
repnz
dec
mov
jne
and
mov
xchg
push
sti
dec
mov
jno
and
mov
test
shr
mov
movs
and
pop
xor
movs
add
dec
sub
pop
out
lods
or
add
test
push
push
sbb
pop
sti
cmps
retf
retf
shr
jnp
inc
cmp
je
mov
and
enter
push
loopne
pop
dec
aad
sti
aad
dec
push
arpl
retf
dec
ret
mov
push
sbb
dec
nop
mov
pop
dec
pusha
pop
jge
call
mov
pop
add
lock
pop
push
dec
arpl
pop
jmp
lea
rcl
push
mov
add
stos
lea
jle
rcl
fisubr
repnz
jmp
dec
cmc
mov
and
pusha
mov
sub
xor
pop
into
pop
cli
fldenv
mov
push
(bad)
cmps
loop
cdq
xchg
cmps
add
jmp
jmp
mov
sti
cmp
sbb
lods
popf
fld
push
push
jbe
xor
in
imul
sbb
cmps
add
adc
sub
cmps
cs
pop
daa
mov
push
js
dec
sahf
jecxz
push
leave
push
ds
(bad)
lea
inc
ja
cld
scas
push
js
jns
shl
mov
xchg
out
cmp
xlat
xchg
push
mov
je
mov
add
adc
sbb
sbb
xor
pop
or
outs
(bad)
out
rcl
repnz
scas
loopne
sub
ss
(bad)
clc
(bad)
sahf
push
arpl
inc
push
cmp
inc
inc
call
jb
pushf
and
jne
or
loopne
cmc
push
sbb
pop
mov
dec
ins
sub
push
xchg
js
inc
scas
or
popf
jae
popa
inc
jl
aas
xchg
fdiv
mov
mov
jns
dec
inc
repnz
xchg
lods
daa
push
sbb
outs
in
add
loopne
fdivr
mov
shr
adc
adc
fisubr
ins
and
inc
daa
cmp
push
mov
scas
xor
je
cmc
int
pop
sbb
mov
pop
(bad)
pop
stc
jmp
(bad)
pop
cmp
inc
inc
xchg
sub
xor
adc
fst
lock
lock
add
int
cmps
je
stc
ins
(bad)
cld
xchg
cmp
mov
clc
push
xchg
shl
stos
mov
adc
push
mov
cmp
dec
test
enter
fnstenv
popf
lods
mov
or
mov
push
sbb
sbb
dec
add
cmp
test
cdq
cs
ins
js
sub
aas
fbld
addr16
or
adc
mov
imul
cmp
add
and
mov
mov
pop
mov
sub
cmc
inc
shl
test
adc
aaa
jnp
mov
xchg
and
sahf
loop
inc
push
outs
stos
leave
lahf
mov
jge
push
sub
xchg
push
cmp
mov
ins
sets
and
lahf
xchg
les
mov
sti
mov
stc
sub
aaa
jl
jp
pusha
(bad)
hlt
out
sahf
mov
pop
fld
adc
push
ds
cmps
cmp
jne
cs
sbb
sub
loop
inc
or
pop
push
xor
push
xor
imul
add
dec
nop
xor
dec
dec
pop
enter
(bad)
xchg
lds
imul
pushf
test
jne
dec
out
push
mov
xchg
fs
add
pop
add
sbb
call
imul
sub
repz
mov
cmc
test
pop
push
rcl
lods
je
pop
mov
inc
mov
scas
pop
and
scas
call
mov
dec
or
sbb
fmulp
xchg
in
es
ds
fs
sbb
push
(bad)
sbb
or
sub
mov
repnz
inc
sub
out
loope
ins
xchg
pop
fstp
mov
dec
mov
add
addr16
sub
fbstp
or
in
xchg
adc
adc
cld
iret
nop
xor
div
call
and
retf
cwde
lods
push
fwait
sub
daa
enter
(bad)
push
push
pop
into
mov
cmp
xor
xor
mov
pop
xor
fwait
popa
mov
not
mov
ins
jg
ret
adc
enter
outs
dec
sbb
test
mov
xchg
test
cmc
xchg
mov
aas
jle
lods
aad
cmps
test
popf
scas
cmps
(bad)
test
or
or
cmp
sbb
cmp
call
je
push
and
inc
lahf
dec
pop
idiv
xchg
cmp
cwde
fucomi
mov
mov
add
shr
jmp
push
cmp
hlt
adc
(bad)
mov
push
fwait
shr
and
mov
retf
push
cmp
sbb
jle
sbb
call
mov
jle
mov
daa
stos
or
push
aas
mov
test
xchg
mov
sub
movs
dec
xchg
sub
mov
int3
stc
lds
jmp
aam
mov
or
jo
pop
xchg
jp
push
cmp
lds
scas
push
add
clc
jle
inc
adc
je
xor
xor
mov
in
jb
pusha
xor
xor
push
sub
inc
push
dec
and
adc
mov
daa
sub
(bad)
jp
imul
pusha
sub
mov
add
and
and
xchg
sub
fcom
push
sbb
pop
mov
ins
daa
or
pop
cli
repnz
mov
data16
cmp
inc
lods
mov
mov
test
cs
inc
cli
mov
loopne
cmp
scas
(bad)
scas
fs
cmp
pop
es
les
ja
jo
mov
in
fs
mov
and
arpl
call
xor
inc
xchg
std
push
jno
mov
shr
or
psubusw
xor
cmp
sub
mov
fmul
sbb
cli
in
call
push
lods
or
mov
pop
data16
(bad)
cmp
out
adc
cdq
adc
ss
fild
nop
jno
das
and
push
test
aas
fmul
out
mov
cmp
push
cld
popf
outs
inc
xchg
push
pusha
xchg
int3
(bad)
add
push
gs
test
mov
rcr
mov
bswap
and
sti
pop
jl
jbe
xchg
cmp
xchg
xchg
packuswb
jne
mov
inc
ins
xor
sub
sbb
inc
push
test
pop
mov
add
fiadd
cmp
ins
retf
lods
sbb
ret
retf
jg
loope
mov
ins
add
ss
test
mov
pop
xor
sti
mov
pop
jmp
hlt
mov
test
add
jmp
fwait
adc
enter
mov
gs
retf
dec
in
retf
repz
mov
mov
cmp
dec
or
out
jnp
push
xor
xor
add
mov
lahf
jmp
adc
add
add
int3
dec
in
stos
pusha
add
push
test
scas
shl
push
dec
add
dec
fsubrp
xchg
es
jb
adc
hlt
cmp
loope
push
in
mov
fadd
ins
xlat
(bad)
out
push
or
cmp
or
add
xor
leave
and
lods
jmp
inc
jp
in
mov
gs
ret
cmp
sbb
mov
scas
and
sti
inc
test
sar
aaa
pusha
scas
jae
push
dec
daa
mov
ds
adc
repz
sbb
mov
and
pop
pop
aam
scas
push
sti
iret
clc
repnz
pop
xchg
or
dec
in
imul
add
pop
mov
mov
test
(bad)
jo
dec
dec
push
(bad)
test
out
fst
mov
mov
std
movs
shl
xchg
jb
sub
inc
mov
sbb
test
lock
and
xchg
inc
ja
cdq
sbb
retf
xchg
mov
test
mov
inc
movs
jle
push
icebp
jl
call
mov
jl
ror
inc
cli
inc
sub
lock
add
(bad)
jp
dec
repz
cmp
(bad)
fsub
mov
jge
sbb
lea
outs
xchg
mov
fwait
xor
sbb
dec
(bad)
jl
les
ret
sti
adc
pop
jns
cwde
(bad)
jns
loopne
fidiv
xchg
fld
pop
test
pop
sbb
adc
pop
popf
sub
fdivr
fstp
xchg
sub
imul
mov
aam
pop
bound
iret
(bad)
mov
mov
js
and
xchg
ja
mov
ror
cmc
enter
push
adc
bound
xchg
xchg
icebp
out
mov
ss
xchg
adc
mov
movs
push
fadd
xor
int3
pop
cdq
icebp
ds
test
adc
int3
mov
in
and
jle
pop
imul
xor
xchg
mov
adc
js
mov
(bad)
ficomp
mov
mov
mov
or
inc
pop
pop
movs
and
cwde
add
fcom
das
aaa
inc
inc
jo
inc
dec
cmp
jo
in
inc
data16
dec
stos
push
xor
mov
xor
mov
cmp
pushf
(bad)
int
fiadd
and
sub
(bad)
ins
add
mov
or
inc
mov
pop
icebp
cdq
and
fistp
icebp
bound
mov
and
test
shl
sbb
loope
push
jmp
iret
test
push
sub
or
add
call
adc
mov
push
jo
ins
jl
sahf
dec
xor
mov
sub
rcl
mov
cmp
pop
test
data16
data16
sbb
hlt
xchg
sub
sub
test
xchg
stos
retf
xor
rol
mov
sbb
loope
out
mov
and
das
jo
jmp
shr
mov
jge
rol
fistp
lea
pcmpgtb
mov
mov
inc
out
adc
mul
fst
add
jo
retf
jecxz
mov
mov
popf
and
jl
mov
fiadd
popa
js
mov
or
and
sti
(bad)
icebp
dec
mov
test
xor
in
ret
fld
rcl
rcl
adc
ja
add
jl
xor
add
js
push
jl
or
shr
dec
int3
adc
rol
mov
add
fadd
aad
mov
pop
cld
pop
mov
jnp
sub
sub
cdq
sbb
and
outs
pop
in
movs
cmp
ret
sti
shl
(bad)
xlat
sbb
inc
movs
add
sti
cs
gs
sbb
or
sti
mov
push
adc
cmp
pop
lock
outs
mov
xchg
jmp
scas
retf
push
xor
or
ret
idiv
fldcw
push
(bad)
neg
test
adc
add
int3
ins
(bad)
mov
fisttp
xor
jmp
mov
loope
pop
aas
std
rcl
xor
xor
movs
popf
dec
in
pop
ja
mov
inc
(bad)
push
in
pusha
sub
in
rcl
jle
push
mov
or
xchg
lods
loope
pop
mov
ins
ror
pop
aas
sub
mov
add
lahf
mov
jmp
push
dec
int3
mov
inc
repz
ins
mov
push
idiv
and
pop
inc
mov
sub
scas
clc
pop
pushf
push
outs
cdq
imul
(bad)
sbb
fidivr
or
fwait
ss
lea
push
or
in
add
enter
mov
lahf
aas
dec
bound
cs
push
xor
dec
ins
xlat
dec
pop
sub
cmp
mov
lds
mov
sub
jo
cld
les
xchg
xor
pop
scas
stos
mul
cdq
clc
jae
scas
and
inc
sub
jmp
pop
hlt
aas
or
mov
leave
xor
cmp
and
lods
enter
mov
dec
push
retf
hlt
movs
or
ja
test
push
jno
iret
imul
lea
imul
push
inc
add
jle
icebp
hlt
scas
das
xor
(bad)
das
add
jne
loop
addr16
push
mov
ret
jo
cld
mov
mov
cmp
mov
popa
cld
shl
(bad)
rol
sbb
nop
ficomp
cld
dec
call
push
pop
cdq
xchg
rol
in
movs
jmp
mov
xor
dec
cdq
test
xor
or
xor
mov
xor
std
lock
push
sar
and
mov
mov
leave
int
pushf
mov
sbb
jg
jecxz
imul
gs
pusha
add
push
mov
int
aaa
and
xchg
adc
out
lea
sbb
add
mov
stos
jbe
inc
clc
mov
sti
sub
mov
inc
repnz
out
out
or
mov
stos
imul
movs
mov
inc
cmp
inc
lock
add
movzx
inc
inc
jnp
and
jmp
add
movs
scas
mov
bound
sub
in
mov
xlat
xchg
sbb
mov
mov
or
ror
fisttp
lahf
adc
fadd
push
inc
(bad)
fisub
fcom
cli
data16
or
mov
sub
pop
cmp
mov
or
jmp
cmps
arpl
stos
sub
cmps
xchg
xchg
out
xchg
pushf
adc
lea
cmps
(bad)
movs
jmp
ins
ss
or
test
pop
sti
jle
fisubr
push
inc
and
xor
rcl
enter
mov
adc
into
popf
lds
mov
xchg
mov
stc
sub
fcmovb
inc
out
movs
shl
cmp
iret
sbb
jae
pop
xchg
lods
inc
mov
test
cwde
mov
mov
imul
fnclex
push
aas
mov
test
mov
(bad)
int3
dec
cli
stos
stos
mov
pop
add
jecxz
inc
jmp
fild
mov
mov
fidiv
cdq
xlat
ret
scas
jae
or
scas
pushw
xor
sbb
cmp
scas
(bad)
nop
inc
stc
hlt
js
in
popa
ret
in
cmp
fwait
cs
xchg
xchg
dec
push
aam
addr16
imul
leave
imul
les
repnz
or
cmp
mov
cwde
pop
xchg
or
cmp
mov
and
ja
push
fiadd
ins
xor
pop
mov
inc
(bad)
push
mov
test
inc
pop
cli
rcl
ds
stc
outs
add
unpcklps
hlt
lahf
mov
sub
loope
stc
rol
inc
das
jle
xor
jp
stos
addr16
call
clc
jmp
in
xor
outs
out
js
test
hlt
sbb
sub
mov
cmp
int3
adc
mov
sahf
call
imul
add
jns
movs
mov
add
pushf
xor
xor
mov
fwait
inc
adc
adc
ds
es
jbe
jecxz
push
push
or
repz
cmp
xor
mov
clc
sbb
fbstp
xchg
add
xor
push
fdivr
mov
mov
push
mov
imul
jnp
lea
sbb
fwait
and
cmp
or
jno
jmp
cmc
inc
push
mov
loope
cmp
addr16
aad
test
icebp
bound
mov
ret
mov
and
test
mov
push
pop
mov
ins
adc
fs
mov
or
sub
inc
popf
(bad)
out
fdiv
sbb
and
cmp
inc
arpl
push
sub
push
mov
jmp
push
and
jp
xchg
sahf
push
mov
loopne
xor
(bad)
jle
scas
fdivr
inc
sub
mov
mov
xchg
(bad)
push
mov
push
mov
jbe
push
les
or
test
inc
xlat
jnp
jb
push
jecxz
in
call
mov
sbb
retf
(bad)
xchg
sar
sub
fcom
out
lods
test
and
je
loopne
pop
(bad)
in
scas
leave
adc
adc
scas
push
retf
fsubp
sahf
xor
cli
sti
fidivr
in
xor
push
mov
movs
jmp
mov
inc
dec
scas
adc
pop
sbb
leave
add
ror
cmp
cmp
xchg
das
pop
add
mov
imul
daa
jo
mov
mov
ds
and
cmp
sbb
push
xlat
and
pop
stos
fist
sbb
std
xchg
mov
push
(bad)
adc
outs
add
xchg
xor
outs
pushf
in
out
cmp
mov
mov
(bad)
mov
in
xchg
cmps
and
lds
cmp
cld
sbb
mov
imul
xchg
dec
fs
pop
in
inc
sub
lea
int
xor
inc
fucom
and
out
jae
rcl
and
and
popa
test
das
sti
ss
push
mov
(bad)
mov
mov
(bad)
(bad)
sbb
test
mov
cdq
xlat
rcl
inc
inc
or
inc
test
xchg
push
push
and
lds
sti
jne
or
or
pop
in
xchg
in
jno
inc
and
call
dec
dec
fild
test
nop
mul
fs
and
jbe
fwait
std
aaa
push
or
outs
out
xchg
pop
scas
pop
out
dec
cmc
xchg
fdivr
xor
ins
outs
pop
push
dec
fild
inc
jbe
cmp
(bad)
mov
sbb
(bad)
adc
lea
out
cmp
push
pop
(bad)
pop
hlt
pop
pop
sub
mov
sub
pop
mov
stos
int
cli
mov
xlat
retf
adc
pusha
leave
or
push
or
fisubr
and
bound
daa
mov
icebp
pop
inc
pusha
neg
daa
pop
push
push
adc
mov
cmp
mov
jno
ret
xchg
sahf
xor
call
les
ja
push
clc
add
jnp
lahf
dec
fprem
xor
and
cmp
in
or
mov
adc
ficom
xchg
jne
mov
inc
sub
(bad)
xor
sahf
ret
in
inc
inc
mov
pop
in
jmp
pop
or
pop
jne
(bad)
in
push
xchg
js
iret
arpl
sbb
jg
ret
call
push
nop
xor
into
inc
nop
scas
repz
jl
out
cs
js
mov
cmp
add
pop
xchg
xor
mov
jge
sahf
rol
test
pushf
test
add
mov
imul
cmps
adc
sub
mov
push
and
cmps
into
xor
mov
sti
cmp
push
daa
mov
retf
cmp
fbstp
inc
mov
mov
xor
sbb
jge
in
or
call
fld
leave
xchg
sbb
adc
in
cld
ds
bound
pop
sub
mov
ins
jns
push
jl
dec
call
sub
in
in
test
scas
lahf
jmp
pop
mov
xor
or
jbe
and
loope
sub
ds
xchg
fs
out
pop
push
fmul
push
mov
inc
iret
aad
movs
jnp
cs
call
int3
inc
mov
(bad)
mov
mov
dec
cmps
sub
push
jmp
cs
fisttp
mov
mov
mov
shl
inc
and
mov
int3
fbstp
sar
and
inc
das
xor
sub
lods
rcr
mov
sbb
dec
cmp
aas
inc
adc
xchg
xor
push
mov
push
pop
dec
pop
sub
sbb
or
add
adc
cmps
mov
dec
sbb
pop
mov
leave
cmp
das
out
aaa
sub
push
in
cmp
jns
dec
mov
mov
push
xchg
pop
lds
scas
inc
pop
xchg
es
mov
inc
pop
pop
pop
cmps
xchg
and
dec
(bad)
fsub
call
fsubr
push
push
xor
xor
loop
or
pop
xor
adc
out
add
adc
loope
adc
sbb
aad
adc
nop
sbb
mov
xor
xchg
mov
sbb
jl
mov
inc
ss
sti
dec
or
repz
mov
push
mov
mov
xchg
scas
cmp
dec
xchg
pop
cmp
jmp
fsub
sub
cmp
sbb
add
sbb
mov
or
inc
jae
enterw
and
mov
lock
clc
pop
pop
std
and
fs
call
pusha
or
cdq
fmul
xor
int3
pop
fsubr
cld
adc
rol
and
jmp
sti
and
aam
or
dec
ds
dec
cdq
out
pop
ret
outs
into
push
push
daa
xchg
(bad)
fisttp
inc
mov
xor
jge
mov
shl
out
mov
sub
dec
sbb
into
vcvtps2pd
das
push
or
daa
js
lods
push
std
jg
in
js
cli
arpl
push
es
jne
push
mov
fisub
in
iret
test
jno
xor
fmulp
mov
and
mov
adc
xchg
and
nop
xchg
push
and
mov
and
push
mov
mov
out
outs
adc
ins
jge
sti
pop
push
pop
mov
retf
mov
ret
pop
adc
adc
pop
jae
cmc
int
push
test
mov
jae
lock
sub
sar
mov
(bad)
cld
add
pop
mov
lea
pop
add
fwait
mov
push
lds
sub
mov
outs
add
pop
shl
popa
cmc
ja
mul
jns
movs
scas
lods
lea
mov
inc
xchg
scas
dec
pushf
add
popa
inc
in
sbb
ja
mov
int3
into
popfw
sbb
sbb
loope
jmp
or
inc
clc
test
fcomip
in
iret
lds
repz
aaa
dec
in
loop
mov
or
pop
dec
popf
pop
pushf
scas
and
cmp
frstor
jge
jnp
loop
sub
sub
adc
dec
jp
mov
dec
cld
push
sbb
imul
les
lds
sbb
addr16
pop
add
mov
pop
fcom
inc
(bad)
sub
mov
hlt
test
loope
mov
nop
mov
mov
aaa
cmp
xchg
(bad)
sar
repz
push
cmps
push
dec
inc
fwait
ror
leave
lods
gs
sahf
jne
enter
movs
fnstenv
pop
imul
call
sbb
push
push
daa
inc
mov
pop
gs
xchg
imul
lds
ror
inc
leave
ret
jno
shl
mov
mov
(bad)
or
repnz
jle
and
gs
loope
ficomp
mov
ins
dec
fcmovu
jge
push
movs
pop
rol
xchg
call
xchg
xchg
pop
sbb
xchg
pushf
fistp
daa
jecxz
inc
paddusw
adc
clc
push
mov
sub
aam
sbb
frstor
std
mov
test
or
jmp
je
mov
cmp
mov
outs
adc
sbb
mov
shl
inc
pop
dec
(bad)
cmp
ss
jno
push
or
(bad)
and
adc
ja
adc
sahf
xchg
fnstcw
lods
jae
call
mov
movzx
push
int
scas
shl
sbb
pop
add
ds
sbb
cs
mov
pop
and
data16
rcr
add
cdq
xchg
inc
sbb
lds
sar
cmps
fld
mov
jge
add
jl
mov
mov
xor
jne
add
push
dec
arpl
aas
dec
xchg
mov
fist
inc
aad
mov
fdivp
ins
mov
push
adc
push
ja
je
stos
call
outs
(bad)
jmp
div
rol
dec
popf
jne
sahf
pushf
pop
mov
sub
push
pop
pop
pop
jns
stos
push
call
pusha
les
xor
push
fsubr
pop
sti
adc
mov
daa
(bad)
dec
repnz
ret
cmp
xor
sub
inc
adc
stc
lods
mov
in
or
inc
and
xor
(bad)
pusha
aad
gs
cmp
cdq
sti
loop
sub
pop
mov
clc
ror
adc
retf
cmp
xchg
fstp
inc
lods
push
cmp
sti
dec
mov
inc
scas
mov
add
add
xchg
xor
fdivr
iret
xchg
int
dec
lods
adc
jg
adc
mov
push
dec
repnz
xor
dec
mov
jmp
retf
pop
clc
in
mov
pop
dec
(bad)
pop
xchg
ds
xor
push
mov
fstp
cli
push
inc
xor
xor
movs
imul
(bad)
popa
(bad)
jns
fist
xchg
pop
ja
movs
fs
jo
fbld
adc
jae
fs
push
adc
test
bound
push
jne
inc
cmp
pop
retf
jmp
movs
push
inc
fcom
mov
les
(bad)
enter
popf
rcl
popf
mov
push
adc
shl
cmps
inc
int
mov
inc
add
arpl
sub
dec
and
push
jle
or
mov
add
dec
ins
inc
and
(bad)
adc
cdq
push
sbb
outs
rcr
aad
adc
cmp
jb
or
ss
mov
cli
xor
int3
movs
adc
mov
sbb
jp
mov
push
das
cmp
mov
inc
rcl
(bad)
pop
jle
pop
aad
jmp
lea
cs
pop
in
jg
pop
sbb
jl
sbb
dec
aas
dec
rcr
int3
loop
cmp
aad
cdq
or
push
mov
add
loope
in
cmps
pushf
add
dec
test
stos
jae
outs
shl
scas
push
pop
idiv
adc
mov
mov
aaa
sbb
cld
pop
cmps
imul
cmp
xor
sbb
scas
ret
adc
addr16
repz
scas
sub
pop
dec
jecxz
push
iret
fs
xchg
test
sub
mov
add
pop
enter
sbb
inc
pop
cli
adc
out
mov
popa
mov
adc
add
xchg
sbb
mov
adc
pop
inc
icebp
(bad)
cld
test
xor
rol
or
xor
mov
xchg
out
mov
(bad)
gs
or
mov
dec
mov
sub
adc
inc
and
clc
pop
xchg
pushf
stos
repnz
mov
into
ret
xchg
mov
popf
out
push
nop
popf
or
imul
push
ret
sub
stos
cli
push
push
dec
add
and
int
ret
lea
mov
mov
in
mov
mov
inc
push
(bad)
adc
stc
sub
and
popa
xor
(bad)
outs
and
and
scas
sti
cmc
sub
jb
out
jl
dec
mov
test
aas
push
imul
mov
hlt
iret
mov
cmp
scas
cmps
sub
xchg
push
mov
cmp
sbb
gs
cs
xor
das
mov
aad
adc
imul
pushf
les
sbb
cmp
mov
lock
mov
lock
xchg
in
and
scas
jnp
mov
fcmovnb
push
mov
jnp
pop
popf
jmp
loopne
dec
(bad)
sti
mov
sbb
push
(bad)
mov
out
mov
pusha
xchg
adc
nop
add
mov
jmp
es
pop
enter
retf
sub
hlt
or
test
pop
lock
cmp
and
test
dec
das
jb
outs
push
(bad)
daa
call
push
xchg
sub
fdivp
sbb
jp
rol
int
jl
out
pop
ss
outs
cwde
dec
pusha
cmp
add
out
push
sub
mov
clc
adc
mov
lock
adc
mov
add
jbe
inc
loope
repnz
daa
mov
dec
popa
pop
dec
pop
ss
or
cmps
jns
fcomp
aam
(bad)
pop
adc
imul
mov
adc
xchg
mov
add
imul
std
fnstsw
adc
daa
mov
adc
push
pop
pop
jg
sar
or
out
add
mov
fcmovbe
aas
scas
movs
in
cdq
inc
les
hlt
xchg
retf
add
or
pop
icebp
mov
out
daa
mov
mov
cmc
mov
cmps
dec
mov
std
into
and
cmp
sub
pop
enter
xor
pop
aam
pop
cmp
inc
and
addr16
leave
mov
sbb
les
call
repnz
je
xchg
or
xchg
(bad)
dec
mov
shl
jns
pop
cmp
popf
and
push
fldenv
mov
xor
sub
ret
mov
mov
les
dec
mov
in
popf
pop
ds
fcomp
cs
pop
or
sbb
lods
push
jae
std
or
dec
shl
hlt
pop
lods
(bad)
sub
jno
ret
cmps
pop
mov
pop
mov
sbb
mov
inc
lods
jne
pop
pop
sub
repnz
lds
aad
xchg
adc
mov
arpl
jno
inc
sti
bound
mov
or
pop
lods
and
mov
cld
xor
std
and
xchg
inc
xlat
xor
out
dec
mov
movs
in
out
cmp
cld
int3
cwde
mov
mov
iret
pop
fcomp
mov
pop
jecxz
and
mov
jecxz
mov
cmc
jae
adc
inc
pop
cmps
aas
mov
sti
xchg
arpl
inc
fwait
mov
xor
push
fisub
jb
push
or
imul
push
and
leave
fst
adc
enter
jbe
dec
add
and
ja
shr
(bad)
adc
in
daa
jae
mov
sub
xchg
inc
adc
ins
clc
xchg
sub
xchg
repnz
bound
cmp
lods
jmp
lods
sbb
push
stc
jmp
ss
xor
aad
dec
mov
xchg
jg
add
pop
clc
fld
mov
xlat
outs
arpl
imul
mov
setns
cmp
inc
loopne
mov
xchg
popf
mov
syscall
push
outs
out
test
or
cmp
or
or
ss
jo
or
outs
sub
or
cs
mov
add
stc
(bad)
mov
(bad)
pop
push
xchg
pop
jmp
pop
sahf
stc
add
movs
je
enter
sbb
jae
jmp
in
xchg
mov
push
cli
in
icebp
sub
adc
pop
and
imul
ins
enter
sub
and
aam
adc
(bad)
mov
push
in
std
fiadd
jnp
nop
add
rol
sbb
(bad)
push
loope
imul
sub
cwde
adc
es
jns
enter
jno
retf
cmp
dec
rol
sbb
jo
inc
je
jg
outs
push
std
jbe
xchg
xor
adc
cmp
lds
popa
or
pusha
ja
lea
jae
daa
mov
repz
xor
push
xchg
sbb
ja
sub
or
inc
xor
cmp
jnp
sahf
cld
shl
mov
push
das
in
add
add
test
dec
dec
jbe
lock
sub
xchg
mov
rcl
aad
jbe
push
int
sbb
cmp
stos
mov
mov
push
jbe
inc
xor
scas
cmp
imul
nop
xchg
ret
sti
shl
xchg
pop
repnz
(bad)
int
je
mov
inc
ins
push
je
push
and
and
xor
fld
mov
mov
inc
pop
push
inc
retf
jbe
adc
lods
iret
and
scas
mov
inc
aaa
ror
leave
pop
into
loopne
retf
cmps
mov
shl
imul
dec
cwde
inc
xor
xlat
fidivr
adc
add
stos
lods
dec
push
xchg
sbb
aad
push
sub
jne
gs
in
shl
jp
sbb
jecxz
jge
dec
out
std
enter
mov
pop
or
sub
test
sahf
inc
leave
mov
or
sbb
mov
or
sub
fwait
xor
and
fs
pop
cdq
fwait
adc
mov
lods
lea
pop
pop
and
xchg
xor
mov
add
out
inc
cld
cmc
sbb
inc
lods
sbb
mov
push
and
add
jmp
pop
cdq
pop
xor
mov
out
mov
call
clc
enter
pop
mov
adc
sbb
add
aaa
loopne
dec
pusha
xlat
es
lods
sub
aam
fs
push
imul
movs
or
in
mov
in
add
sbb
imul
scas
add
xor
mov
ror
std
clc
outs
mov
dec
push
xchg
arpl
sbb
or
fwait
mov
jnp
mov
(bad)
xchg
pop
dec
xchg
add
shl
enter
icebp
or
or
pop
sub
and
or
xlat
mov
(bad)
jmp
mov
push
mov
out
fdivr
push
dec
imul
inc
xchg
cld
(bad)
cmp
cmc
test
dec
and
outs
ret
inc
dec
sub
mov
push
es
arpl
adc
adc
and
fidivr
jno
jmp
or
ss
lods
sbb
sbb
cli
pusha
jge
outs
inc
push
das
and
adc
xchg
dec
scas
icebp
add
dec
gs
dec
rcl
jmp
out
gs
and
and
mov
sbb
fmul
stc
movs
push
cld
aaa
jmp
fmul
popf
(bad)
or
in
(bad)
xchg
inc
arpl
and
sub
mov
push
clc
push
mov
add
cmp
jae
adc
movs
cdq
std
xchg
std
ins
test
jo
sub
sub
ja
mov
and
sahf
jmp
inc
cmp
ds
and
retf
jno
sbb
or
dec
push
int
aad
sbb
mov
je
sbb
sbb
out
dec
sub
xchg
lahf
mov
sub
inc
cmovae
add
and
cmp
adc
hlt
aad
sbb
jecxz
push
sbb
outs
fadd
add
ja
or
fadd
sbb
inc
inc
add
jl
inc
adc
cld
jnp
mov
ja
jp
push
cmc
mov
sbb
push
xchg
mov
jno
pop
mov
movs
xor
mov
or
pop
or
rep
jno
add
std
xchg
fist
adc
bound
add
in
and
aad
sbb
call
cdq
or
stos
scas
imul
fwait
inc
push
dec
jmp
retf
mov
fisub
jns
xlat
sub
sbb
mov
adc
adc
or
nop
dec
mov
imul
dec
add
xor
add
stos
mov
fistp
add
xchg
inc
or
xchg
add
call
ror
add
cmps
scas
aam
dec
ins
mov
daa
xchg
popa
jp
and
adc
clc
pop
xlat
push
mov
lods
mov
pop
je
jo
or
int3
push
push
iret
rcl
aad
rcl
in
jno
fwait
pop
push
out
shl
movs
ins
or
dec
xor
cmps
xor
clc
pusha
sahf
push
mov
ror
inc
jns
sbb
mov
adc
addr16
mov
pop
out
jo
and
mov
and
fs
push
xchg
dec
cmp
mov
imul
pushf
outs
cmps
xchg
lds
add
xchg
jbe
int
hlt
mov
mov
xchg
push
or
ja
jae
inc
rcl
inc
xor
add
stos
xor
push
and
outs
shl
mov
mov
mov
and
sbb
out
(bad)
addr16
cmp
int3
(bad)
or
in
or
in
aam
shl
sbb
mov
scas
dec
clc
(bad)
movs
or
sbb
mov
mov
mov
jae
push
pop
rcl
sub
dec
aaa
sub
leave
pushf
xchg
loopne
dec
sub
cld
outs
sar
push
sub
shl
out
jo
ret
call
xor
sti
push
push
lock
dec
pop
dec
imul
retf
mov
add
sub
sub
(bad)
es
push
iret
sub
fisubr
loop
sub
cmp
xchg
pop
mov
es
inc
or
ffreep
mov
mov
xchg
mov
cmp
inc
pusha
fadd
add
aaa
rol
pusha
leave
sbb
mov
push
xor
stc
loope
hlt
mov
and
cmp
inc
imul
popf
or
arpl
iret
bound
add
mov
sub
hlt
mov
or
movs
(bad)
mov
test
into
jmp
jmp
pop
fadd
jae
push
add
pop
fistp
stc
fld
cmps
fwait
inc
ficom
shr
add
call
fld
xor
stos
xor
and
or
jmp
or
inc
out
gs
sbb
pop
dec
dec
test
ins
ror
jnp
add
and
mov
stos
mov
(bad)
xchg
sar
xchg
adc
clc
mov
jnp
in
div
out
cmp
push
ja
push
sbb
mov
call
frstor
rcl
jb
adc
or
add
hlt
fwait
pop
add
xor
xchg
push
call
xor
push
xlat
outs
mov
xor
in
sbb
js
mov
dec
pop
repz
pop
sub
icebp
dec
push
rcl
arpl
iret
ret
das
shr
inc
push
inc
dec
iret
xor
ror
jmp
in
mov
aam
xor
imul
out
xor
push
imul
cld
pop
ds
mov
mov
inc
loop
xchg
or
cmps
shl
jmp
jnp
push
add
dec
cmc
pop
scas
sub
pushf
dec
sbb
cwde
jecxz
cwde
xor
stos
adc
xchg
not
xor
push
movs
fst
xor
xchg
pop
loope
cmp
call
dec
and
mov
pop
jmp
xchg
sahf
push
pop
icebp
imul
(bad)
(bad)
push
rcl
xchg
inc
or
mov
pop
mov
aam
pop
cmp
dec
push
fwait
scas
imul
sbb
xor
lahf
xlat
lock
dec
jge
js
scas
ret
cmp
xchg
sub
and
ror
push
imul
ret
dec
fidivr
jbe
sub
mov
mov
mov
cwde
sbb
add
pop
cmp
sar
push
lea
jp
xchg
nop
gs
pop
sub
xor
inc
cmovg
inc
mov
inc
push
pmaddwd
cmp
cmps
outs
push
mov
and
and
int
cmc
pop
in
cmps
adc
stos
or
pop
mov
push
call
daa
add
(bad)
dec
lods
in
sbb
jbe
cmp
jle
sub
cmp
xor
xchg
cmp
cmp
je
xor
and
imul
and
dec
adc
ret
mov
lahf
mov
dec
mov
cmps
adc
mov
cmp
test
jb
pop
or
sub
jge
xchg
and
mov
dec
lock
sub
adc
dec
lea
pop
outs
or
adc
stos
shl
jecxz
mov
mov
mov
movs
jnp
inc
iret
into
and
xor
cmps
dec
test
fnsave
call
in
mov
pop
push
mov
js
push
jmp
aaa
pusha
inc
push
cmp
out
pop
jecxz
lods
lds
les
mov
push
push
ds
jmp
mov
cld
sub
mov
sub
outs
inc
lods
fcom
test
popf
xchg
stos
loopne
sbb
aaa
movs
jmp
mov
mov
jle
jns
paddusb
into
(bad)
adc
sub
(bad)
(bad)
xor
push
or
mov
mov
fst
add
pop
push
hlt
test
aam
mov
mov
retf
push
aad
push
popf
and
ret
stos
add
outs
xchg
std
in
not
bswap
sti
imul
movs
cdq
popa
mov
pop
mov
add
enter
sar
pushf
sahf
bnd
scas
mov
in
sbb
inc
or
dec
add
rol
xor
cmp
jns
jp
push
loop
xor
push
or
stos
and
push
rol
sbb
je
mov
mov
cmps
stos
into
fist
fisttp
inc
test
imul
les
retf
pop
loopne
retf
push
mov
jmp
movs
sahf
xor
sub
test
pop
jmp
add
sub
pop
inc
ffree
dec
fstp
add
das
jns
sbb
mov
add
adc
and
(bad)
leave
aam
in
cmps
test
pop
push
xchg
push
jl
repz
ins
fnsave
xchg
add
mov
mov
cmp
pusha
retf
nop
cmps
loop
cli
adc
or
mov
ins
aas
dec
xor
sbb
cdq
outs
addr16
push
movs
div
xchg
sti
in
cmp
cmp
imul
push
mov
pop
(bad)
mov
je
pop
inc
jns
dec
dec
fbstp
ins
mov
ja
pushf
push
mov
fdivr
xor
inc
pushf
mov
xchg
pop
call
imul
popa
inc
lea
cmps
dec
mov
test
fld
dec
push
call
mov
xchg
mov
and
and
lods
gs
mov
or
pushf
cli
mov
fwait
nop
std
add
ins
jmp
rcl
ja
adc
ret
xchg
shl
mov
int3
push
mov
cld
fs
jmp
sub
mov
add
fild
pmaddwd
ins
cwde
ds
ficomp
add
sti
add
xchg
mov
xor
mov
mov
dec
popa
lea
adc
rcl
(bad)
mov
test
dec
mov
cmp
mov
clc
aaa
scas
fsub
jb
sahf
push
fild
mov
inc
xchg
out
dec
rcr
gs
pop
jl
(bad)
dec
ret
dec
jmp
sbb
adc
push
push
rol
cmp
fcom
ret
icebp
or
aam
mov
pop
retf
mov
fwait
shl
fistp
mov
inc
add
inc
dec
arpl
pop
out
jg
mov
push
adc
pusha
pop
mov
xchg
sbb
scas
test
imul
mov
stc
mov
outs
out
xor
push
jge
stc
jns
movs
adc
xchg
dec
push
or
or
sub
push
mov
adc
int3
outs
push
xor
inc
call
in
pop
daa
sbb
xchg
xor
iret
nop
test
icebp
mov
(bad)
ret
ret
add
jo
adc
(bad)
mov
(bad)
adc
push
mov
ds
sub
pop
into
dec
ss
(bad)
dec
in
enter
bound
rcl
dec
push
in
out
inc
mov
mov
mov
test
or
mov
adc
test
jmp
imul
sbb
mov
or
cmp
call
dec
pop
sbb
repnz
mov
sbb
mov
inc
in
xchg
push
mov
mov
lods
inc
int
mov
and
add
rcr
dec
(bad)
cmp
push
sub
add
xor
jp
mov
fcmovu
xor
jmp
mov
leave
cld
sub
cwde
mov
xchg
cmp
pop
pop
test
push
dec
or
loope
pop
bound
outs
aam
jnp
add
inc
add
xchg
sub
mov
pop
cmp
loope
mov
xor
dec
fs
add
imul
xchg
xor
xchg
dec
mov
push
rol
mov
jmp
sub
pop
adc
jge
addr16
adc
jmp
or
sub
or
gs
pop
xchg
and
gs
(bad)
js
mov
push
cmp
inc
enter
fld
rcr
fist
daa
or
mov
into
push
jae
jmp
(bad)
das
add
jnp
(bad)
movs
inc
icebp
push
pop
dec
xor
(bad)
rol
xor
or
pop
fidiv
cli
dec
xchg
js
mov
xchg
scas
leave
mov
add
dec
pop
pop
hlt
mov
aaa
dec
popa
out
and
cld
xor
dec
cmp
push
xchg
enter
ins
outs
in
add
aad
hlt
icebp
jp
jno
nop
jne
and
sti
jge
inc
and
mov
dec
div
test
sti
cmp
or
inc
iret
mov
(bad)
mov
test
test
movs
mov
adc
jne
ds
pop
add
cmp
inc
mov
add
or
arpl
add
xchg
adc
adc
sub
sahf
fild
push
sub
push
ins
lods
test
cmp
call
pop
(bad)
scas
enter
add
(bad)
jp
ins
pop
lahf
xor
add
sbb
xor
xchg
and
cmp
aas
jge
jne
mov
ror
daa
push
out
ja
sub
test
or
leavew
stc
add
lods
shl
jne
push
dec
xchg
xchg
inc
pop
popa
arpl
dec
dec
pop
shl
jo
push
mov
addr16
xchg
sub
fcmovnu
push
gs
fdiv
mov
cmps
sub
jno
xor
imul
cwde
inc
dec
mov
repnz
and
xor
movs
movs
sahf
(bad)
sub
inc
aad
inc
add
mov
(bad)
mov
adc
dec
pop
push
(bad)
sub
cmps
mov
sbb
jnp
out
lock
xchg
jo
or
xor
xor
call
xlat
mov
and
retf
xchg
mov
pop
and
pusha
dec
add
jne
(bad)
and
ins
out
inc
dec
jno
clc
and
xor
imul
pop
xchg
inc
ja
push
daa
inc
js
cli
mov
loope
or
jns
xor
ins
push
lahf
jp
dec
stc
mov
mov
pop
push
les
test
dec
lea
cmc
aam
sub
ds
outs
adc
(bad)
mov
repz
add
int3
xchg
and
rol
test
fs
test
scas
sbb
pop
aas
scas
div
push
xor
mov
lock
xchg
dec
cdq
push
mov
rcl
out
js
je
popa
inc
jle
inc
inc
sub
mov
loopne
push
and
rcl
push
or
test
mov
mov
cmp
fild
ror
loop
push
(bad)
pop
jb
jno
cs
cmp
inc
call
mov
push
ret
call
mov
pop
jp
add
inc
and
sbb
add
or
fisubr
xor
mov
xor
cmp
js
js
test
xchg
lahf
mov
sub
or
repz
adc
mov
mov
xchg
sub
xchg
ret
xor
and
sub
std
(bad)
sub
popa
mov
lods
adc
mov
xlat
jns
movlps
adc
xchg
or
xor
mov
or
xchg
ja
stos
sbb
(bad)
adc
sbb
(bad)
cmp
pop
add
cmp
mov
mov
or
add
(bad)
das
jp
mov
movs
pop
les
xchg
fisttp
pop
rcl
popa
std
ins
int3
retf
inc
jbe
mov
scas
pop
scas
fdivr
add
in
stos
mov
lods
(bad)
popa
push
xor
push
add
cmp
lahf
pop
pop
xchg
adc
xchg
push
pop
(bad)
fadd
push
and
(bad)
dec
mul
adc
ja
mov
add
and
scas
mov
xchg
std
mov
mov
aam
adc
div
stos
mov
ds
aam
(bad)
sbb
repz
std
out
loop
dec
sub
(bad)
lea
or
mov
int
push
adc
ss
sti
cmp
xchg
in
out
shl
inc
rcl
les
mov
dec
retf
lock
cmp
gs
cmp
test
ins
and
or
cmp
aad
pop
xor
sbb
scas
mov
jp
xor
(bad)
xor
and
icebp
retf
adc
aam
xor
push
push
cmp
cwde
sub
adc
scas
pop
ja
xor
ror
cmp
cli
gs
xchg
lahf
test
scas
xor
xor
mov
jle
ficomp
mov
arpl
je
jle
imul
jmp
cli
push
fidivr
pop
hlt
popf
or
mov
data16
sbb
mov
push
lods
scas
sub
lods
adc
les
retf
lea
(bad)
lock
clc
and
js
not
sub
mov
imul
(bad)
sbb
sbb
stos
jns
shr
jne
loope
and
add
sti
cmp
fs
pop
imul
jle
stos
mov
loop
imul
xchg
lock
sub
dec
retf
(bad)
out
pop
cwde
loop
push
push
je
mov
ins
mov
xor
bound
or
cwde
xchg
jo
dec
mov
mov
fadd
js
sbb
sub
add
xlat
pop
adc
push
push
xlat
out
dec
scas
movs
inc
push
xchg
jle
jo
inc
mov
cmp
(bad)
and
jne
addr16
and
in
cmp
icebp
data16
xor
or
xor
adc
mov
push
xchg
aam
cmp
add
sti
xor
jae
xrelease
rcr
inc
fnstcw
xlat
dec
js
nop
jne
and
or
lods
jo
(bad)
outs
or
icebp
jmp
int3
int
jae
pop
fisub
outs
mov
fwait
test
mov
pop
xchg
shr
(bad)
cmp
(bad)
clc
ss
sub
cmp
xchg
jne
dec
push
sbb
enter
jne
xchg
popa
add
add
or
ret
dec
add
xchg
push
jmp
push
scas
adc
cmp
xchg
sub
dec
shr
sbb
popf
fiadd
add
cs
jb
(bad)
fsubr
xor
mov
adc
test
xchg
push
sub
sahf
inc
fld
sub
pop
adc
mov
fdiv
iret
cli
jle
adc
(bad)
repnz
into
in
and
hlt
lods
lahf
and
ss
retf
dec
cmp
not
inc
jne
lods
mov
xchg
(bad)
daa
jl
cmps
jne
mov
outs
pop
(bad)
jns
loop
sbb
dec
inc
(bad)
fxch
jo
adc
xor
sbb
mov
call
dec
jne
loopne
xor
lods
and
fist
jns
sahf
and
neg
cli
sub
push
jmp
and
add
dec
jne
sub
sbb
cmp
enter
push
sahf
in
stos
adc
mov
aas
fisubr
pop
jmp
push
cmp
rcr
out
push
xlat
out
xchg
or
push
jno
xor
repz
and
test
fld
pop
(bad)
ja
xchg
(bad)
neg
cmp
movs
sub
sub
pop
or
sub
iret
mov
in
scas
in
movs
jbe
fcomp
(bad)
mov
or
(bad)
outs
fcmovbe
enter
rol
loopne
jg
xor
(bad)
mov
cmps
test
cmp
fdivr
inc
mov
lods
ret
add
sbb
pop
mov
dec
mov
sbb
(bad)
call
cli
dec
jmp
fbstp
mov
and
dec
pop
sub
pusha
sub
dec
push
in
cmps
cdq
iretw
fst
call
mov
psubw
xchg
jmp
dec
jne
iret
xor
cmp
cli
push
adc
fiadd
dec
enter
sbb
pop
mov
push
je
or
sti
enter
inc
aad
mov
call
mov
inc
inc
xor
sub
or
jp
xlat
outs
mov
jl
cli
and
das
popa
jmp
inc
cs
sbb
adc
(bad)
popf
sub
ret
pop
add
daa
sar
mov
in
iret
js
sahf
xor
jbe
xchg
daa
jmp
pusha
pop
or
xchg
pmulhuw
movs
dec
and
pop
xor
icebp
ret
(bad)
inc
sub
inc
sahf
inc
dec
(bad)
in
out
out
icebp
cmovae
xor
adc
imul
pop
jmp
cli
xlat
dec
fstp
xor
jmp
sub
cmp
xchg
mov
sar
rcr
xor
add
scas
push
fisttp
icebp
mov
sbb
into
imul
popa
sti
pop
push
popf
push
outs
adc
and
dec
and
push
mov
push
add
xor
sbb
popf
add
cmp
inc
or
outs
jmp
(bad)
cld
push
sbb
jg
sub
add
and
ret
shl
mov
adc
sti
add
sbb
mov
lea
daa
inc
dec
sub
xor
xor
cmp
(bad)
mov
ins
outs
mov
mov
sar
inc
and
dec
jmp
inc
test
inc
ror
loope
hlt
dec
push
add
fstp
(bad)
cld
in
popa
in
mov
or
popf
mov
mov
into
push
nop
rcr
lods
xchg
inc
xchg
mov
pop
loope
push
pop
push
sahf
lock
ins
call
inc
pop
pop
addr16
cmp
dec
cs
fnstsw
bound
mov
not
mov
xor
clc
sbb
dec
push
cmp
push
xchg
out
sar
call
fs
stc
dec
pop
daa
xchg
aam
test
cmp
xchg
mov
mov
sub
aam
loope
xor
fadd
mov
jae
mov
push
adc
mov
xor
and
test
push
int
leave
mov
addr16
fsin
mov
loop
push
sti
leave
sbb
data16
xchg
cmp
pop
sbb
jb
mov
pop
fmulp
fsubr
je
push
dec
jne
jbe
cmc
mov
mov
ins
jne
adc
jae
retf
jmp
push
pop
outs
xchg
in
daa
icebp
data16
leave
push
std
sahf
call
not
test
out
mov
hlt
push
jae
fisttp
shl
jge
push
pop
in
movs
cld
xchg
xchg
jge
dec
repnz
or
popa
pop
imul
and
data16
and
ins
adc
xor
add
ror
fst
jb
sub
jge
jmp
mov
mov
ds
xor
mov
int3
test
shr
call
xor
xchg
push
sbb
jno
fcomp
dec
sbb
pop
test
xchg
in
call
mov
jecxz
xlat
lea
dec
xchg
add
inc
test
jmp
dec
adc
call
ja
push
push
out
daa
enter
rcr
(bad)
mov
fnstsw
xchg
es
push
mov
jo
pop
int3
inc
jmp
mov
std
aaa
dec
jmp
mov
ja
pop
bound
adc
ins
stc
mov
(bad)
or
dec
out
jl
sbb
sub
or
nop
and
mov
xor
data16
mov
cmps
pop
mov
(bad)
scas
and
adc
ficom
jne
cmps
loope
(bad)
cmp
sub
aad
repnz
dec
ret
(bad)
xchg
cmps
aaa
das
clc
fmul
fadd
xchg
ins
rcl
xchg
inc
fwait
push
fdiv
xchg
into
imul
inc
aaa
int
cmp
xchg
into
shl
xor
jle
or
add
cmp
fisub
jg
lahf
cmps
dec
fwait
mov
rcl
stos
imul
(bad)
movs
adc
xor
(bad)
xchg
ja
sbb
je
cs
shl
inc
int3
rsm
loopne
dec
fmul
mov
push
push
aas
or
sar
out
sub
mov
xor
or
test
ret
dec
mov
sbb
scas
inc
stc
movs
ret
lods
jmp
ffree
outs
fidivr
(bad)
mov
mov
hlt
fs
xchg
jg
inc
push
or
jo
sub
fisttp
xchg
sub
fisubr
cdq
ret
mov
xchg
mov
arpl
aaa
xor
xor
xor
and
enter
inc
fwait
xor
lock
stos
adc
les
int3
outs
mov
dec
into
ror
jbe
loopne
pop
out
cmp
jnp
loope
clc
mov
xlat
mov
call
jp
jo
add
dec
jnp
movs
les
(bad)
jl
hlt
sbb
inc
lods
lahf
inc
cld
jl
dec
xor
sahf
rcr
mov
cmp
mov
rol
sub
pop
dec
lea
xor
jo
mov
or
cmps
dec
sbb
and
iret
ins
std
les
hlt
mov
not
outs
cli
scas
mov
movs
loop
dec
sub
in
add
adc
jae
loope
mov
dec
shr
push
sar
push
and
std
sahf
(bad)
or
dec
rcl
sbb
gs
hlt
jge
sbb
add
arpl
mov
sub
mov
push
inc
mov
call
mov
movs
mov
mov
nop
xchg
out
aas
into
rcr
dec
mov
inc
xchg
mov
dec
push
rcr
and
retf
jge
pop
sub
sub
and
pop
push
mov
fimul
jb
inc
and
sub
push
imul
jo
loopne
sar
dec
sti
dec
xchg
xchg
test
stos
(bad)
das
mov
(bad)
mov
jmp
cmp
(bad)
hlt
inc
fsubr
mov
sbb
or
add
cmp
or
shl
xor
inc
repz
shr
and
je
rcl
pop
aaa
add
jecxz
fsub
leave
sub
and
push
add
icebp
xchg
mov
retf
sbb
shr
loope
nop
mov
push
jl
cld
inc
fisubr
ins
jl
mov
adc
mov
push
or
ret
ret
pop
mov
loop
shl
add
(bad)
sahf
mov
sbb
js
cmc
fmul
add
hlt
push
sbb
dec
retfw
xor
stc
mov
add
jbe
out
out
pop
mov
mov
test
cmc
popf
call
out
sub
fild
scas
mov
scas
stos
scas
in
std
repnz
jo
add
mov
sbb
ret
dec
pop
jp
lock
test
jg
sbb
(bad)
inc
aas
retf
xchg
cmp
or
jp
dec
lahf
in
cdq
mov
sub
enter
sub
sahf
xor
stos
xor
sbb
cwde
mov
jmp
push
lods
mov
inc
imul
fld
ret
shl
retf
data16
in
aaa
dec
mov
jge
in
jbe
xor
mov
les
adc
add
in
push
mov
mov
mov
or
inc
or
sub
dec
dec
call
(bad)
in
inc
inc
shl
pop
dec
jbe
test
in
jle
call
ficom
xor
pop
pop
outs
in
test
and
sbb
arpl
inc
and
(bad)
push
xor
ins
imul
push
pusha
shl
push
mov
cwde
sub
pop
jecxz
aas
jns
pop
out
ja
and
mov
mov
movs
push
adc
ss
nop
(bad)
pop
jns
ins
mov
add
icebp
not
(bad)
outs
ret
inc
mov
jbe
sti
test
mov
or
sti
(bad)
stos
hlt
adc
mov
daa
and
int
pop
js
cmp
xor
pop
out
lea
jae
les
pop
cmps
fcom
mov
and
mov
iret
les
inc
jle
push
rol
ficom
daa
fdivr
jge
or
push
movs
adc
mov
movs
cmp
pop
mov
mov
fs
and
mov
pop
jmp
dec
mov
dec
gs
mov
(bad)
repnz
jge
retf
ss
and
adc
(bad)
cmps
dec
out
add
pop
repz
add
jl
ficom
not
outs
mov
lock
cmps
mov
mov
mov
rcl
into
scas
loop
gs
dec
adc
and
mov
cmp
push
(bad)
or
cli
nop
in
rcr
iret
pushf
repz
inc
pop
pop
in
pop
or
sub
push
cld
jo
mov
pusha
and
stos
lahf
stos
and
sahf
neg
and
cmp
popa
xchg
das
mov
dec
or
lods
jne
pusha
adc
(bad)
adc
inc
(bad)
add
push
in
push
mov
jns
inc
pop
mov
xchg
pop
(bad)
pop
jl
add
(bad)
ds
icebp
rcr
pop
xor
cmp
out
rcr
call
add
fistp
sub
cwde
dec
cmp
and
pop
pop
stos
pop
mov
pop
fimul
das
pop
xor
aas
mov
pop
cmp
pop
addr16
jae
mov
xor
and
adc
inc
rol
ins
scas
fwait
les
test
out
cld
mov
icebp
xchg
mov
loop
xchg
nop
fucomp
cld
push
outs
imul
jle
xchg
adc
(bad)
in
add
dec
ins
out
lea
jle
pop
sub
mov
(bad)
hlt
sti
mov
dec
push
inc
adc
stos
xor
cmc
cmc
call
xchg
into
mov
dec
pop
shr
and
call
mov
cmp
cmp
xor
jecxz
sub
movs
jge
movs
sub
imul
jns
retf
mov
test
iret
pushf
pop
inc
pop
outs
daa
pushf
imul
inc
xor
adc
test
inc
fs
and
inc
fisttp
(bad)
jmp
xor
or
aas
lahf
mov
test
(bad)
out
push
adc
inc
mov
mov
loopne
dec
int3
aad
mov
clc
outs
pushf
aad
nop
sub
outs
push
push
fadd
pushf
movs
cli
rol
sbb
add
into
cmps
fldcw
fnstcw
sbb
pop
mov
inc
daa
loop
jecxz
dec
mov
lods
push
std
xor
or
cli
push
and
mov
cmps
jp
cmc
fisttp
add
(bad)
jmp
ja
jne
or
dec
dec
test
arpl
pop
data16
mov
xchg
pushf
shr
mov
dec
sbb
test
mov
cmps
inc
push
xlat
push
and
and
mov
inc
cdq
push
movs
addr16
call
mov
(bad)
out
int
mov
out
dec
and
enter
xchg
dec
dec
adc
jecxz
adc
pop
mov
inc
push
cs
das
pop
lods
cmps
nop
cmp
inc
adc
test
add
dec
adc
enter
sbb
dec
pop
int3
popa
jbe
ins
xor
jmp
inc
fwait
xlat
retf
adc
mov
in
lods
cmp
or
pop
jmp
adc
jg
mov
aaa
jge
sub
xor
ja
mov
dec
mov
adc
ja
out
jecxz
xchg
xchg
in
ds
cmp
out
arpl
repz
nop
enter
sub
stc
rcl
and
push
mov
dec
add
mov
add
aam
jae
push
(bad)
idiv
and
sub
sub
popw
xchg
es
pop
aaa
(bad)
jne
jmp
daa
mov
jnp
clc
jl
icebp
add
jne
cs
rol
lahf
lds
and
adc
sbb
js
fadd
jmp
cmp
cwde
push
xlat
xchg
inc
pop
bsr
loopne
fwait
aas
je
(bad)
stc
cdq
aas
ror
pop
sbb
xchg
jp
inc
call
sti
fisub
fst
inc
xchg
adc
int
jle
lock
jno
ins
icebp
pop
adc
dec
dec
push
sbb
xchg
sub
retf
mov
push
lock
cmps
dec
test
xchg
stc
sub
adc
arpl
jno
jg
fdiv
mov
jle
cmp
dec
fwait
cmp
retf
cmp
adc
xchg
xor
aam
add
xor
addr16
add
(bad)
mov
out
jne
lea
jnp
rcl
cwde
stc
ins
aam
push
adc
repnz
inc
outs
add
pop
inc
in
adc
xor
mov
and
jge
(bad)
unpcklps
and
jnp
test
adc
xchg
sub
or
xor
cli
pop
cld
sub
iret
loop
dec
or
shl
xor
jne
mov
pushf
push
add
jnp
call
add
(bad)
and
pop
jecxz
push
inc
std
scas
or
jmp
pop
or
pop
inc
fiadd
jns
out
sti
(bad)
mov
or
inc
addr16
ins
pop
(bad)
mov
(bad)
xchg
fisubr
jg
repz
in
movs
mov
fcomip
cvtpi2ps
inc
mov
call
or
outs
test
mov
cmp
cli
sbb
push
es
mov
sbb
(bad)
mov
jle
retf
xchg
mov
mov
push
dec
inc
or
clc
dec
and
pushf
in
or
jg
lock
leave
fisubr
mov
out
lods
fwait
add
adc
push
mov
jb
mov
outs
sbb
retf
or
retf
loop
jns
nop
inc
mov
sub
cwde
call
fsubr
scas
cmp
add
mov
or
inc
and
ds
add
push
mov
dec
test
rcl
sbb
inc
mov
and
loop
cmps
ins
icebp
mov
adc
(bad)
jne
sti
sub
(bad)
push
cwde
inc
gs
push
inc
dec
inc
mov
mov
icebp
push
push
sbb
in
pop
cmp
outs
retf
popf
loopne
add
cmp
stos
pusha
mov
(bad)
jmp
jnp
sbb
inc
aad
xchg
cmc
(bad)
fistp
mov
and
and
add
das
mov
cmp
ins
mov
cmp
movs
dec
rcr
outs
xchg
shl
imul
cdq
cli
pop
mov
push
js
jp
jno
cwde
mov
and
scas
lock
inc
mov
lea
xor
pop
mov
ss
pop
sbb
pusha
adc
jmp
pop
mov
push
lods
mul
mov
xor
mov
es
nop
mov
sub
pop
mov
in
mov
xor
aam
jp
fisub
jnp
mov
je
mov
add
mov
jl
xlat
popf
lods
mov
pop
repz
and
aas
and
ins
fcom
iret
lahf
sbb
xor
cmp
fwait
dec
not
add
xchg
jmp
repnz
push
xchg
(bad)
and
hlt
pop
repnz
pop
or
loope
les
lods
push
pop
pop
add
shl
xlat
jl
movs
mov
sbb
mov
mov
jno
adc
push
pop
dec
shr
push
mov
mov
mov
clc
xchg
ins
mov
inc
adc
sbb
sub
adc
stos
mov
in
mov
loop
popa
pusha
rcr
or
shl
cmp
(bad)
cs
xor
rol
(bad)
fsubr
jecxz
movs
ss
test
mov
repz
mov
outs
inc
dec
push
jne
mov
push
sbb
shr
fdivr
add
scas
leave
sub
jg
fsub
(bad)
jmp
sub
inc
(bad)
push
mov
xchg
xchg
imul
fwait
pusha
int3
sbb
(bad)
jbe
pusha
call
in
ss
xor
aad
or
jg
mov
(bad)
loopne
fadd
mov
rcl
(bad)
mov
outs
sahf
mov
ror
xlat
jmp
sbb
das
push
xor
sbb
in
sbb
fs
pop
and
movs
dec
adc
sbb
sub
js
or
retf
dec
and
in
loopne
xor
mov
add
sub
adc
lahf
xchg
inc
das
jno
fsincos
stc
sahf
and
popf
adc
fwait
xchg
mov
scas
fnstcw
dec
cmps
push
leave
movs
mov
mov
jns
sahf
adc
adc
lods
cmc
pop
adc
mov
inc
adc
fadd
dec
test
push
rcl
ins
mov
mov
sbb
xchg
push
fidivr
inc
pop
daa
pushf
xchg
popa
loope
loop
clc
mov
jno
in
add
pop
mov
cmc
jb
push
icebp
sub
sahf
mov
dec
pop
xor
push
(bad)
jae
or
out
ja
adc
dec
test
scas
or
cmp
add
stos
xchg
hlt
sub
dec
inc
sub
sub
out
lods
add
or
and
jecxz
mov
out
push
sub
xlat
inc
mov
adc
jmp
daa
imul
mov
mov
and
push
mov
sahf
aaa
fist
cmp
and
mov
ficomp
arpl
xor
push
bound
mov
add
push
retf
xchg
dec
loop
sbb
and
bound
sub
cli
sub
mov
pop
stos
xchg
nop
loop
pop
stos
cs
xchg
clc
clc
sti
pusha
enter
sub
mov
jp
sbb
fwait
in
scas
jb
or
jmp
ret
gs
sub
outs
mov
inc
stos
mov
add
lods
mov
inc
push
dec
outs
push
mov
es
mov
push
jns
mov
xlat
jo
mov
cs
cmps
sbb
pop
bnd
xor
push
arpl
aam
adc
rol
push
add
dec
imul
pop
mov
push
fwait
jmp
mov
mov
dec
add
push
(bad)
and
ja
in
dec
retf
in
jp
ss
inc
mov
xor
mov
leave
xchg
cwde
jo
mov
inc
or
jecxz
stos
scas
sub
imul
(bad)
(bad)
xor
lea
xchg
push
int3
rcr
ret
add
cld
fldenv
cmps
rcr
sbb
xor
and
in
nop
xor
retf
xor
(bad)
cmc
sti
dec
sub
lds
add
inc
pop
gs
add
lahf
lahf
in
shl
or
push
and
cwde
add
ins
xor
rol
pushf
test
adc
leave
cli
ins
cmp
lods
fdiv
rcl
adc
or
aas
cmp
push
pushf
xor
adc
aad
bound
jg
push
addr16
fld
repnz
inc
cmp
bound
enter
inc
int
and
aaa
add
sub
mov
xchg
enter
sbb
outs
push
mov
xchg
(bad)
arpl
dec
cld
mov
jg
dec
bound
add
outs
mov
sbb
rcr
mov
cmp
add
into
sub
addr16
cmp
rcr
and
mov
cmp
pop
mov
mov
pop
jmp
mov
xor
add
or
xor
mov
mov
add
or
test
inc
jmp
jmp
js
adc
mov
adc
cmp
stos
repz
out
fisttp
call
jne
jbe
xchg
cmp
call
repnz
imul
test
cmp
es
out
mov
add
aaa
lods
add
fsubr
adc
nop
rcl
mov
loop
pop
aas
shl
stos
push
fisttp
cmp
lods
daa
outs
jecxz
cmp
inc
std
push
xor
and
(bad)
rol
push
dec
loope
jno
out
inc
adc
inc
loope
test
test
or
xchg
jo
fsubr
aam
ins
and
int
arpl
xchg
mov
cli
int3
popf
mov
sub
cmp
stos
imul
aaa
jg
cmc
retf
and
sub
mov
std
test
and
mov
mov
outs
jae
sbb
pop
lahf
js
push
xchg
adc
rcr
js
stc
cmp
or
add
pop
and
and
mov
push
add
pop
movs
call
push
popf
mov
lds
dec
ja
jg
es
iret
push
imul
or
fisub
jnp
mov
dec
gs
fsub
sub
cmp
dec
aas
sbb
addr16
adc
add
(bad)
call
fcmovne
jmp
test
add
mov
add
test
xor
pusha
imul
and
inc
pop
pushf
sub
into
and
loope
mov
adc
in
mov
adc
es
packuswb
(bad)
pop
mov
gs
dec
mov
aad
inc
daa
add
pop
push
js
je
pop
mov
fbld
jmp
push
fs
mov
rcr
in
arpl
pop
mov
call
ffreep
iret
mov
bswap
std
xor
push
inc
pop
(bad)
ror
cmp
xlat
dec
ret
scas
xchg
add
stc
push
mov
mov
adc
xchg
or
loop
push
lock
dec
xchg
cmp
stos
rcr
pop
xchg
mov
xchg
std
add
cmp
or
sahf
into
jo
cs
in
not
push
jb
jbe
sub
adc
gs
inc
or
and
mov
inc
aad
mov
or
and
cmps
cmp
es
mov
sbb
out
xchg
les
pop
sbb
aam
pop
inc
cmc
pop
(bad)
cmc
jge
pop
xchg
icebp
lods
xchg
xlat
jmp
or
movs
mov
push
sub
bound
pop
jge
push
or
jns
push
adc
dec
mov
adc
mov
unpckhps
int3
sub
sar
xchg
jle
loopne
lar
in
mov
push
pop
idiv
pop
dec
into
(bad)
mov
xchg
pop
rol
mov
mov
mov
rcr
jg
mov
push
push
push
mov
sbb
xchg
jge
cmp
cmps
and
mov
jno
jne
(bad)
ja
int3
xor
(bad)
hlt
js
mov
sub
outs
cmp
lds
push
loop
movs
stc
(bad)
push
pop
and
int3
adc
movs
push
sahf
cmp
dec
cmp
push
aas
sub
mov
jl
pop
les
les
mov
push
sbb
mov
dec
or
aas
fcomp
jl
add
test
xchg
push
ror
dec
dec
into
mov
mov
sbb
dec
ficomp
jle
scas
clc
adc
jl
jb
xchg
push
mov
jnp
cmp
jecxz
jno
jg
in
rep
lods
mov
cwde
sbb
and
outs
add
dec
in
scas
pop
cmp
jmp
aam
push
inc
enter
xchg
mov
pusha
dec
add
jb
mov
fild
dec
and
nop
int3
or
ret
adc
inc
jmp
pusha
inc
inc
(bad)
mov
sub
cmc
or
jmp
cmp
outs
stc
and
mov
mov
push
mov
xor
stc
out
inc
es
aam
sub
push
xchg
xchg
enter
push
pop
jns
push
and
dec
mov
data16
lods
cmp
jmp
xchg
push
mov
mov
pusha
retf
movs
push
adc
ins
add
add
or
mov
mov
rcl
neg
data16
fdiv
outs
xor
mov
(bad)
sub
fs
jmp
mov
fnstcw
stos
xchg
xor
gs
ret
dec
cmp
les
outs
imul
sub
test
in
and
push
aam
inc
mov
sub
js
bound
cmp
add
mov
mov
lock
cmp
lods
(bad)
jge
lods
mov
pop
jmp
ret
mov
push
mov
pop
test
pushf
or
or
mov
adc
add
xlat
and
cld
dec
stc
popf
push
and
jle
cmc
push
fsubr
push
pop
into
jb
xchg
test
xchg
rcr
cli
dec
test
in
retf
push
push
(bad)
push
int
sar
adc
inc
mov
inc
(bad)
mul
xchg
mov
fistp
outs
or
pop
lods
les
fcom
outs
jae
sub
mov
cmp
out
popf
jl
out
sbb
sub
cwde
je
xor
loope
adc
popf
cmps
mov
or
mov
mov
mov
lock
push
int
es
ja
mov
pop
cld
xor
int
sbb
je
dec
adc
pushf
jg
cmp
ins
pop
in
rcl
push
lods
push
pop
mov
or
pushw
pop
cld
(bad)
loope
mov
adc
movs
adc
loop
sub
xor
cdq
sbb
pop
mov
dec
sub
push
imul
dec
sub
rcl
sbb
jmp
push
xor
dec
and
cmp
jl
pop
test
and
mov
je
mov
xchg
retf
ficom
(bad)
pusha
in
or
(bad)
out
xchg
push
jns
mov
xor
pop
jp
arpl
add
adc
das
fsub
jmp
ins
and
mov
dec
pop
dec
cs
dec
fiadd
ins
xchg
outs
adc
sbb
lods
sub
out
outs
xchg
ror
leave
fild
jmp
add
push
or
aaa
arpl
mov
sub
xchg
pop
cs
int
pop
outs
mov
lods
xchg
jmp
fstp
jmp
stc
or
scas
into
pop
out
jne
test
retf
xchg
leave
mov
pop
mov
adc
or
and
inc
add
dec
inc
out
loope
test
jno
pop
clc
jecxz
sti
lea
jmp
scas
jl
repz
push
bound
push
xor
pop
mov
cmp
clc
adc
loope
inc
fsub
nop
or
or
dec
retf
retf
sbb
dec
fisubr
push
or
jl
loopne
add
pusha
ror
push
int3
sub
mul
mov
sbb
fcmovbe
and
scas
ins
test
mov
idiv
mov
ins
jae
js
nop
shl
ds
scas
jl
dec
mov
push
mov
pop
cwde
fisttp
mov
xor
cmovb
ret
scas
xor
inc
push
cmps
ficomp
arpl
bound
jecxz
sub
test
sub
and
arpl
outs
stos
sub
daa
and
push
retf
fisubr
or
jge
mov
push
push
stos
dec
popf
mov
(bad)
jnp
lock
push
sbb
aad
and
adc
cmp
rcl
and
jae
js
iret
xchg
lods
inc
jne
adc
cmp
cld
outs
out
jnp
jno
inc
dec
inc
cwde
jl
sub
cmps
lods
in
cmp
(bad)
fadd
sub
out
scas
push
push
sub
dec
pop
and
test
mov
addr16
inc
retf
fcmovne
sbb
mov
jge
enter
pop
fsub
loope
das
data16
xchg
cmps
ss
xchg
or
repnz
sub
cmps
cmp
fld
dec
leave
or
test
inc
pop
pop
pop
or
popf
retf
aaa
mov
mov
stos
scas
lock
scas
stos
push
js
(bad)
out
ret
and
cmp
xlat
cwde
mov
ins
mov
mov
jnp
mov
frstor
sahf
push
sbb
ins
push
pusha
mov
sbb
mov
jle
lods
fstp
rcr
sahf
into
loopne
rcl
imul
mov
and
inc
and
jnp
rol
mov
mov
aam
jnp
neg
outs
mov
push
movs
xor
sbb
mov
loop
sub
imul
cdq
popa
jmp
scas
adc
jge
leave
lds
stos
daa
cmp
cmp
in
adc
sub
adc
pushf
fiadd
aas
aaa
pusha
add
jnp
xor
stc
xchg
in
imul
out
xor
jb
pop
mov
sub
mov
sti
pextrw
add
cmp
pop
lods
ja
dec
cmc
(bad)
ins
push
xlat
hlt
jl
mov
(bad)
out
sub
jp
adc
pop
sbb
imul
fcom
cmp
call
pop
fwait
imul
mov
mov
jo
push
push
mov
adc
or
or
mov
lea
mov
push
neg
dec
inc
mov
xchg
jmp
mov
and
idiv
mov
jo
xlat
(bad)
call
sahf
lds
jbe
mov
sbb
cwde
add
stc
(bad)
ficomp
pop
in
idiv
mov
hlt
mov
and
dec
sub
ins
outs
repz
nop
inc
dec
sbb
loopne
fimul
in
sbb
jne
pop
in
cmp
inc
in
adc
mov
ret
inc
xor
lds
in
scas
push
mov
das
movs
cmp
ja
push
enter
cmps
push
loop
xchg
push
jne
sbb
jae
push
jl
xor
mov
das
aad
jnp
pop
xor
cmp
das
pop
or
jmp
mov
cld
cs
and
jmp
mov
inc
inc
dec
jnp
pop
movs
add
imul
inc
push
out
leave
xchg
gs
call
cmp
pushf
retf
adc
pop
pop
lods
mov
shl
mov
into
mov
and
xor
jge
std
test
xor
inc
addr16
sub
or
xor
mov
(bad)
mov
popa
inc
dec
jb
add
push
push
mov
lds
cmovo
or
pop
mov
and
and
lds
leave
movs
pop
cld
fwait
rcl
jmp
mov
movs
and
dec
inc
pop
repnz
mov
mov
or
sti
lahf
data16
int3
fwait
ja
sbb
int3
ins
mov
lock
add
cmp
movs
and
dec
rcl
ret
push
pushf
and
cmp
repz
mov
pop
movs
bsf
pop
pop
arpl
dec
cli
inc
add
arpl
cmp
inc
adc
mov
jb
ffree
rol
lea
push
rcr
fimul
call
shl
ret
movs
mov
or
dec
inc
aas
jae
mov
xchg
ins
data16
dec
js
fcom
ins
scas
push
xchg
out
push
xchg
xor
jae
retf
imul
in
cmps
test
and
push
mov
repz
aaa
pop
dec
mov
cmp
mov
xor
jne
fwait
jae
jae
loopne
sub
or
mov
fscale
mov
and
mov
gs
in
fwait
xchg
daa
jno
push
aam
das
cmps
adc
adc
dec
dec
or
in
cmps
pop
mov
sub
loopne
nop
cmp
dec
or
dec
xlat
pop
adc
nop
es
and
cli
sub
repnz
les
mov
pop
and
xchg
enter
in
mov
push
daa
(bad)
not
xchg
jp
test
xchg
inc
fs
dec
or
gs
dec
sbb
icebp
cmp
pop
movs
sbb
pop
or
jno
int3
add
xchg
cmc
dec
jecxz
mov
ret
adc
enter
call
or
pop
call
in
sbb
add
test
scas
cmp
pop
xor
push
adc
jne
and
nop
out
push
cmps
fcomp
ror
sahf
mov
sub
dec
or
push
jae
jbe
mov
ja
in
retf
jns
mov
es
xchg
pushf
dec
in
and
jne
retf
dec
adc
and
sbb
jmp
test
push
mov
xchg
push
loop
shl
ds
sub
ffreep
or
(bad)
sub
xchg
push
ins
adc
fnsave
sbb
dec
add
(bad)
in
daa
or
(bad)
inc
mov
mov
sahf
dec
ins
mul
pop
xchg
cmp
in
loop
xchg
inc
cmp
dec
je
int3
sti
xor
xor
add
jae
leave
cpuid
pop
cmps
out
ds
push
es
pop
cld
js
cmp
or
addr16
mov
hlt
mov
jp
sub
push
cli
jmp
rol
stos
jl
xchg
xchg
inc
lods
test
or
pop
hlt
mov
cmp
popa
xor
mov
cmp
idiv
sbb
test
lods
mov
fsubr
loopne
adc
xor
lds
cmovle
mov
cmp
ja
xor
push
dec
or
jne
jmp
repnz
loopne
push
sbb
call
inc
fisubr
inc
icebp
push
mov
fcomip
sbb
adc
pop
test
or
pop
leave
idiv
hlt
scas
jnp
shl
and
bound
xor
dec
and
fisubr
test
inc
pop
stc
mov
fucomi
dec
mov
gs
add
xchg
cmp
mov
pop
stos
mov
pop
or
jmp
cmp
and
xchg
ins
cdq
inc
sbb
jno
call
or
mul
fisub
mov
shr
ror
out
cli
xchg
popf
sahf
fwait
(bad)
pop
mov
iret
pop
inc
mov
test
or
or
cmc
(bad)
mov
outs
aaa
jbe
xchg
mov
push
mov
int
mov
stc
aam
push
sbb
in
and
std
stc
jp
cli
xor
pop
pop
aam
jp
jb
dec
cmp
and
loope
dec
sbb
mov
enter
mov
pop
mov
in
inc
loop
call
mov
sub
push
out
and
mov
jo
pop
cmc
loop
lods
add
jno
inc
fistp
or
adc
int3
iret
pop
rol
cmp
mov
(bad)
mov
cwde
mov
xchg
fistp
test
push
mov
xor
inc
fs
and
dec
loope
dec
out
neg
pop
push
adc
jne
cs
xchg
push
movs
sub
xchg
jae
fbstp
hlt
push
push
cmc
sbb
repnz
jmp
sub
cmp
push
jb
adc
jg
call
out
cmp
outs
or
ret
pop
popa
cmc
test
push
cmps
daa
cmp
xchg
cmp
stos
sbb
bound
mov
in
ja
fsub
jae
out
inc
mov
out
scas
outs
mov
add
cmp
clc
retf
xor
adc
mov
add
ds
(bad)
mov
cmp
adc
mov
xchg
cmp
push
call
push
scas
packuswb
pop
call
stos
div
mov
dec
popa
not
cs
fidivr
ss
loope
in
jle
xor
lods
popa
ror
test
cmc
jg
fcmovnb
dec
(bad)
cli
fld
ror
inc
(bad)
aad
dec
jp
aad
(bad)
pop
fstp
sub
pop
pusha
sahf
sub
pop
fwait
shr
iret
xor
(bad)
scas
add
or
je
nop
dec
inc
out
jp
jmp
aam
movs
ret
lds
xor
aad
mov
stc
dec
hlt
xchg
retf
add
movs
imul
pop
mov
pop
sub
in
push
adc
dec
(bad)
nop
ja
ret
bswap
mov
push
hlt
(bad)
sub
aaa
icebp
daa
xchg
int
jbe
mov
dec
fcomi
loope
inc
call
jmp
call
push
xor
jg
aad
ret
mov
inc
xchg
ins
and
fisttp
pop
sub
adc
jns
lock
xchg
stos
add
ins
push
xchg
out
xchg
ficom
xor
ret
daa
aas
ins
cmp
mov
repz
mov
and
(bad)
out
mov
inc
push
push
jp
xchg
xor
(bad)
push
arpl
push
loop
mov
out
pushf
or
int3
ret
adc
xlat
daa
aaa
xchg
ficom
in
shl
fistp
dec
bound
mov
xchg
sbb
push
push
in
sub
rcl
popf
movs
pop
add
cmc
addr16
clc
rol
imul
mov
mov
out
outs
add
sub
and
and
sti
fidivr
xchg
je
inc
xor
loop
cwde
and
data16
cli
jne
sar
push
pop
push
jge
jecxz
(bad)
(bad)
sub
popf
cmc
sti
repz
outs
ins
fxtract
aaa
mov
push
mov
or
jo
dec
loop
mov
mov
retf
ins
ret
sub
xor
aaa
lods
xchg
jecxz
out
xchg
adc
sub
scas
loopne
push
mov
aad
xor
out
sub
mov
into
repnz
xchg
sub
push
and
fdiv
xor
mov
jne
cmp
test
jnp
mov
movs
mov
dec
test
cmp
adc
mov
cmp
sbb
cld
nop
push
push
popa
inc
sub
push
pop
(bad)
int3
retf
(bad)
imul
int3
inc
xchg
in
push
stc
and
bound
test
pop
add
jae
adc
int3
loope
das
fild
sbb
clc
mov
stc
mov
repnz
xchg
fcom
push
add
pusha
stc
dec
add
into
and
xor
lods
jae
push
cli
ret
fnsave
out
add
inc
push
inc
mov
xlat
mov
clc
shl
sub
mov
push
jb
loope
(bad)
in
mov
mov
push
imul
imul
and
push
mov
rcr
cwde
mov
xor
repnz
dec
push
jecxz
add
neg
and
mov
(bad)
sar
mov
xchg
sub
gs
gs
and
pop
leave
cmp
mov
jae
jmp
push
stc
add
(bad)
sub
jmp
jmp
dec
push
push
mov
(bad)
push
mov
fisubr
dec
int3
inc
cmp
ja
in
fwait
cmc
xor
mov
daa
xor
shl
test
retf
sub
jo
xchg
xor
call
ss
and
fidivr
fnstcw
div
and
cli
bound
jle
cmp
arpl
sub
iret
dec
sbb
adc
push
push
das
dec
push
mov
cmp
push
iret
je
xor
dec
call
out
jecxz
adc
adc
jae
gs
in
stos
dec
retf
out
cmps
stos
push
pop
fstp
test
mov
cs
sbb
sub
sahf
jge
imul
test
adc
mov
hlt
cmp
adc
aaa
xchg
aam
les
mov
lock
in
bound
pop
pop
je
jne
jge
sub
in
or
pop
(bad)
push
mov
imul
das
jb
add
or
mov
loop
and
outs
ins
push
jg
cmc
popf
mov
xchg
not
adc
ds
mov
add
jl
lock
sbb
ins
sub
dec
out
in
xchg
shr
retf
repnz
shl
test
xlat
mov
cmc
retf
test
movs
int3
xor
xor
scas
adc
shl
ror
sbb
mov
inc
cdq
jmp
movs
pushf
sbb
in
push
pop
js
outs
mov
daa
into
test
repnz
add
and
repnz
jbe
retf
jmp
outs
pop
js
and
in
and
mov
and
adc
shl
fimul
jl
add
push
xchg
imul
int
aaa
inc
stos
pop
rsqrtps
push
inc
sar
in
int3
(bad)
rcl
popa
lock
sub
int3
dec
in
jp
movs
pushf
leave
jle
cmps
push
pop
jmp
add
mov
inc
add
add
lock
mov
xchg
push
mov
test
fild
add
scas
pop
jns
add
sbb
mov
cmp
xchg
add
fwait
xchg
or
ror
pop
pop
into
hlt
inc
dec
in
leave
int3
outs
cld
mov
add
popa
or
movs
sub
push
pop
dec
call
bound
mov
cld
cli
cdq
and
sbb
xor
fld
in
out
pop
jbe
push
inc
mov
inc
clc
pop
(bad)
outs
ror
jecxz
dec
xor
pop
push
cmp
imul
lock
pcmpeqw
xor
es
push
and
mov
mov
jns
mov
cmp
enter
mov
dec
movs
or
push
fild
pushf
dec
mov
push
cli
pop
pop
or
and
adc
sbb
jmp
rcl
call
in
jno
(bad)
icebp
cmp
retf
imul
fnstsw
leave
pusha
lock
fiadd
adc
dec
or
push
xchg
dec
ins
and
and
sbb
out
jne
test
pop
add
cmp
xor
dec
test
adc
dec
or
std
jge
mov
push
mov
jp
or
mov
pop
movs
int3
pop
sub
sub
jnp
push
lea
jno
mov
icebp
ins
cmp
mov
mov
sahf
jbe
fiadd
push
(bad)
sub
popf
jmp
jmp
jge
dec
jle
fcmovne
sbb
sti
rol
mov
repz
cmp
xchg
cmp
pop
mov
cmp
pop
lods
mov
pop
popf
lods
cmp
pusha
pop
mov
xor
xchg
in
mov
ret
push
sbb
call
gs
add
rcr
mov
call
xchg
lds
mov
inc
popa
repnz
jo
pop
xor
das
js
repz
push
adc
inc
xchg
sbb
or
add
bound
call
lds
mov
retf
lods
xor
fmul
push
es
mov
or
arpl
xchg
jmp
adc
add
add
icebp
mov
js
nop
outs
(bad)
test
imul
retf
lock
int3
jmp
daa
sbb
pop
or
or
ss
ja
and
jnp
loop
es
mov
xlat
inc
xlat
(bad)
test
fisttp
fdivp
ins
mov
int3
pop
push
mov
int
mov
mov
repnz
and
out
mov
leave
sub
sub
or
xor
push
and
int3
push
in
inc
iret
add
icebp
jge
adc
jbe
inc
xor
mov
dec
out
cmp
in
inc
push
or
mov
cdq
pop
sbb
xchg
std
sbb
stc
inc
push
repz
mov
sub
sti
ja
add
mov
data16
enter
mov
pop
iret
lea
xor
add
pop
dec
push
test
jns
xchg
neg
dec
jo
xchg
push
mov
mov
in
mov
inc
jo
sbb
ret
ss
push
(bad)
ror
mov
pcmpgtw
sbb
jecxz
in
ins
mov
inc
xchg
mov
out
sbb
sbb
(bad)
mov
adc
out
and
pusha
inc
cmp
jmp
(bad)
xchg
arpl
(bad)
fisub
xchg
inc
add
add
repz
sbb
push
cwde
scas
retf
pusha
mov
push
mov
repnz
mov
sahf
dec
mov
je
shl
inc
mov
(bad)
outs
aad
cmp
enter
add
jmp
inc
(bad)
cwde
cmp
push
sahf
and
in
pop
mov
sbb
sub
call
bound
leave
and
rol
sub
push
ins
sub
pushf
stos
push
pop
in
lahf
mov
add
test
xchg
add
in
aaa
jo
jecxz
pop
(bad)
clc
rcr
xlat
movs
add
aas
mov
cs
dec
je
cmc
(bad)
ss
call
mov
lea
in
or
mov
daa
or
lds
shl
adc
sti
push
inc
inc
out
inc
dec
shl
or
xor
push
gs
ror
mov
aad
dec
retf
pop
clc
sub
fidivr
jmp
int
mov
jmp
adc
test
push
xchg
fs
add
mov
daa
mov
mov
jbe
or
mov
mov
(bad)
scas
movs
sub
xor
mov
cmp
sbb
jbe
pop
jmp
fidiv
xor
repnz
cmc
or
cld
lock
or
cdq
test
mov
xor
movs
add
add
mov
pop
add
into
ins
xchg
push
not
bnd
xor
push
xchg
cmp
adc
cmps
hlt
bound
cmc
sbb
mov
jbe
lock
cld
in
sti
mov
jne
pop
call
dec
fmul
cmp
(bad)
push
out
call
test
mov
mov
sbb
(bad)
retf
xchg
xchg
sbb
dec
pop
int
jo
jae
mov
push
movs
xchg
aaa
imul
shl
mov
inc
(bad)
mov
push
mov
push
sti
and
ins
xchg
inc
mov
add
aaa
pop
pop
fidiv
in
clc
bswap
das
cmp
mov
loope
jae
dec
dec
das
push
daa
mov
into
das
repz
test
adc
ret
and
lea
mov
ja
lahf
cmp
xor
pop
adc
sub
std
adc
inc
sbb
fadd
push
mov
dec
sub
ja
pop
cmp
js
push
add
dec
mov
cmp
ror
imul
push
aam
cmp
push
add
or
dec
cmc
push
rcl
cwde
(bad)
fsubr
aad
and
icebp
repz
push
pop
pop
push
add
push
sub
popa
jp
and
arpl
sbb
data16
mov
movs
jae
mov
call
xlat
retf
test
lock
mov
push
or
pop
jle
arpl
xchg
repz
mov
js
iret
sahf
dec
pop
mov
adc
outs
jp
push
sbb
ror
sbb
adc
pop
jae
pushf
lods
adc
sbb
cld
pop
push
call
adc
repnz
mov
sub
pusha
clc
push
mov
jmp
int
ins
push
retf
push
cmp
pusha
dec
pop
imul
xchg
gs
push
dec
rol
fmulp
xor
test
xor
mov
or
in
inc
pop
push
out
in
and
pop
adc
(bad)
je
test
retf
or
or
aaa
jnp
fwait
cli
lds
leave
loop
sbb
or
mov
mov
push
aas
lds
lock
jge
pusha
fcomp
jo
popa
jp
test
imul
popf
les
sub
idiv
or
push
loopne
and
cmps
in
cmps
mov
cmps
push
xchg
xchg
inc
jp
cs
mov
pop
mov
inc
sbb
test
sbb
sbb
sbb
call
xor
dec
aaa
jnp
mov
adc
jbe
mov
and
xchg
in
lea
pop
add
mov
into
inc
xchg
icebp
jecxz
jnp
fbstp
sbb
cdq
shr
xchg
jbe
arpl
nop
mov
scas
lock
in
in
loope
pop
ins
cmp
pop
jmp
inc
into
or
jp
sub
push
call
scas
mov
sbb
xchg
dec
mov
call
inc
and
dec
and
nop
je
outs
inc
sub
imul
retf
outs
xchg
test
add
push
out
pop
jb
ins
(bad)
std
pushf
xchg
das
aam
daa
ret
aas
std
(bad)
into
sahf
sbb
popa
pop
fimul
(bad)
in
and
adc
lods
sub
mov
leave
sbb
test
mov
ins
or
and
inc
in
sub
pop
dec
jp
test
fst
inc
fwait
mov
aas
ficom
inc
xchg
les
scas
dec
mov
cmc
lods
push
test
aad
and
mov
pusha
shl
scas
dec
sbb
mov
sar
xchg
test
xor
sar
inc
call
(bad)
pop
call
in
ds
outs
and
(bad)
lods
int
add
(bad)
mov
adc
es
pop
pusha
ins
sbb
aaa
jle
sub
and
ins
jo
mov
in
mov
and
mov
xor
pop
movs
add
gs
mov
in
(bad)
enter
xchg
inc
cmp
shl
cmp
and
arpl
mov
in
inc
push
push
inc
in
xor
gs
mov
cmp
pushf
jbe
fstp
pop
inc
dec
dec
add
cli
call
sub
jmp
in
fiadd
int
add
retf
mov
fidiv
inc
pop
sub
pop
(bad)
mov
pop
popa
xor
popf
sbb
cmp
(bad)
lea
cwde
enter
sbb
jne
inc
push
(bad)
shl
xor
xchg
ret
rol
sbb
call
test
cli
xor
div
out
mov
adc
dec
popf
std
jp
fadd
adc
test
js
sahf
sbb
cmp
inc
clc
add
ret
sbb
call
test
push
adc
aad
xchg
addr16
sbb
cmps
sar
or
cmp
xor
dec
jbe
call
hlt
mov
ret
mov
and
mov
cli
imul
or
xor
push
fmul
mov
or
mov
ja
push
and
(bad)
aad
aaa
daa
int3
lods
cmc
imul
sub
lahf
popf
jnp
pop
stos
add
frstor
out
xchg
mov
gs
adc
mov
lahf
cmc
int
lods
fstp
sub
and
adc
popf
dec
mov
imul
mov
(bad)
popf
js
int
leave
(bad)
adc
mov
mov
jmp
xor
hlt
push
jmp
lods
jne
cmps
inc
jl
fbstp
add
mov
jno
hlt
cmp
pop
in
pop
dec
sub
js
dec
ret
inc
mov
lea
mov
or
hlt
daa
mov
std
shl
add
aad
neg
movs
add
pop
loope
lea
retf
hlt
or
or
int3
test
mov
mov
pop
das
or
fucomip
dec
aad
dec
out
and
out
(bad)
add
mov
pop
repnz
mov
in
out
push
mov
cwde
test
or
inc
movs
adc
mov
jns
outs
sub
rol
xchg
fsub
ss
add
int3
arpl
fdivr
data16
and
test
cwde
sbb
push
data16
icebp
(bad)
dec
cmp
mov
cmp
loop
scas
mov
aad
outs
cmps
xor
out
push
inc
mov
xchg
out
or
fimul
jno
and
leave
or
lds
jmp
or
in
hlt
in
mov
add
or
aam
push
das
imul
mov
jmp
cmp
dec
loopne
pop
sbb
push
mov
fsubp
cmp
and
aad
push
mov
mov
stc
pop
jecxz
fdivr
int3
scas
pop
sbb
loope
aaa
xchg
lahf
xor
outs
enter
lea
ja
add
dec
cdq
lods
jge
in
cmp
movs
dec
repz
bound
pop
xor
cmp
fstp
jl
mov
push
cdq
jle
dec
xchg
shl
dec
clc
rcl
cmps
mov
repz
jmp
inc
and
mov
adc
loop
adc
pop
les
popf
out
pusha
outs
mov
sbb
call
inc
push
pop
out
in
cmovb
pop
adc
(bad)
int
add
inc
cmps
dec
addr16
add
outs
pop
pop
cwde
sub
mov
test
fcom
movs
out
jns
mov
jno
rol
mov
out
mov
adc
xchg
pop
inc
pop
pop
aaa
fsubr
mov
mov
xor
fwait
js
int3
sbb
dec
push
lods
imul
xchg
div
or
mov
xchg
mov
adc
icebp
call
ins
xchg
in
and
dec
mov
sub
jne
jle
xor
fiadd
fld
push
inc
xchg
in
jae
sub
cwde
add
jmp
stos
mov
xchg
adc
in
dec
dec
dec
push
or
int3
mov
inc
and
fld
add
xchg
vaddsubps
das
int
push
jne
je
inc
mov
mov
adc
aad
and
loop
or
fs
dec
pop
cmp
or
int
into
mov
loop
xchg
push
fisttp
and
pop
lahf
ds
mov
inc
or
sar
push
(bad)
push
outs
ss
jae
mov
cmp
movs
jae
mov
xor
or
aas
inc
stos
icebp
xor
mov
jmp
inc
das
cmp
push
mov
mov
sbb
icebp
mov
adc
cmps
cmp
mov
or
outs
loop
loop
cmps
sahf
test
inc
aam
xor
fcom
and
arpl
int
fwait
scas
(bad)
jmp
test
lahf
setb
push
sub
lds
(bad)
loop
(bad)
js
rcl
fwait
test
add
jae
mov
je
cmp
xchg
clc
je
cmp
lahf
icebp
pop
sbb
jmp
adc
(bad)
mov
pop
scas
cmp
xor
test
lods
xlat
push
fwait
dec
or
xlat
in
cmp
(bad)
(bad)
hlt
jnp
adc
xor
inc
hlt
jmp
mov
and
jle
cmc
mov
lods
ds
inc
shl
pop
in
bound
pop
sub
jle
jmp
std
cld
mov
sar
dec
mov
push
push
mov
retf
mov
iret
mov
pop
imul
sbb
test
xchg
sbb
xchg
jbe
arpl
dec
fsubr
xchg
sar
sub
mov
mov
sub
mov
lds
mov
sbb
ins
cli
jle
cdq
mov
push
test
pushf
jmp
out
push
cmps
cmps
mov
rcl
push
mov
push
mov
sub
push
aaa
fistp
xor
adc
push
movs
sbb
and
dec
dec
xor
jp
into
or
add
or
jo
call
xchg
sbb
hlt
sub
daa
les
xor
jns
daa
inc
movs
mov
cli
rcl
(bad)
data16
pusha
sbb
aaa
dec
test
dec
in
and
xlat
pop
adc
jl
push
fcom
xor
and
inc
aam
repnz
ror
psraw
and
test
pop
mov
push
loop
and
mov
imul
adc
push
or
out
fst
xor
pop
inc
cli
adc
sub
adc
mov
lods
jns
adc
gs
sbb
shl
push
jmp
cwde
xlat
add
jb
mov
mov
push
xchg
es
xor
shl
add
dec
mov
dec
add
jge
jle
loopne
pop
xchg
cmps
das
repnz
cmp
lahf
mov
clc
xchg
jae
mov
enter
jnp
mov
push
mov
ret
imul
shr
clc
dec
loopne
xchg
mov
je
rcl
mov
sub
add
iret
jl
sbb
nop
icebp
aam
stc
sbb
outs
sti
das
sub
into
push
add
dec
(bad)
adc
fdiv
retf
push
call
sub
xor
repnz
jno
xor
fsub
(bad)
repnz
cld
loop
leave
call
cwde
fst
mov
fwait
imul
cmp
lods
data16
cmp
and
dec
loopne
(bad)
xor
fiadd
mov
or
xor
pop
(bad)
rcr
push
int3
in
jnp
push
ss
xchg
xchg
mov
stos
pop
movs
or
inc
push
fiadd
and
mov
test
xor
movs
xor
push
pushf
out
retf
imul
push
loopne
xchg
fadd
jne
mov
jns
cmp
pop
fstp
mov
add
stos
or
pop
inc
xchg
dec
outs
push
dec
cmp
mov
mov
dec
les
hlt
out
add
push
mov
or
add
sahf
inc
shl
push
inc
inc
push
xor
jns
cmc
in
cmps
gs
mov
mov
retf
icebp
lahf
shl
sub
xchg
imul
push
cmps
push
and
repz
mov
mov
add
push
pop
cmps
xchg
arpl
(bad)
adc
shr
mov
push
jbe
fadd
xchg
or
sub
jmp
mov
fnstsw
sbb
push
lods
repz
lods
inc
mov
mov
es
cwde
push
shl
rol
fld
dec
ss
bound
mov
pop
jecxz
ins
xor
add
ret
inc
leave
lock
mov
or
push
fild
out
sbb
inc
cmps
repnz
mov
pop
adc
mov
fstp
pop
js
sbb
ja
in
jbe
mov
xchg
gs
les
dec
xchg
cdq
add
sbb
paddusw
pop
or
hlt
test
sbb
psubb
ret
jmp
cld
jns
dec
xlat
mov
stos
dec
xchg
jl
int3
jb
push
xor
or
sub
sbb
dec
nop
xchg
call
ret
sub
sbb
adc
and
aad
repz
or
stc
jle
sahf
mov
pusha
es
mov
fdivr
cmc
sbb
fwait
xor
in
loop
or
jo
(bad)
and
in
pushf
movs
sahf
pop
imul
jbe
(bad)
loope
mov
sub
cmps
into
aaa
stc
mov
xchg
xchg
out
inc
les
pop
sub
movs
add
stos
int
mov
dec
rcl
adc
stc
add
clc
push
push
test
pop
inc
imul
mov
sub
cli
sub
jne
xor
jg
aad
cmp
cli
cmp
mov
out
lock
jnp
lock
mov
(bad)
sbb
sbb
jb
or
jno
cmovp
inc
pop
xor
cli
daa
mov
lods
add
xor
push
loopne
sti
pushf
fidiv
movs
not
jno
(bad)
imul
jno
and
shl
push
loop
mov
pop
push
js
out
dec
(bad)
ret
xchg
adc
add
rcr
adc
pop
test
lock
mov
push
stc
cmps
fs
inc
dec
inc
sbb
mov
push
dec
shl
ficomp
popa
ror
cmp
sbb
cdq
cdq
sbb
inc
jg
fmul
inc
out
inc
sahf
and
cmp
jns
retf
xlat
lods
inc
iret
call
push
inc
xchg
sbb
popa
adc
loope
pop
fstp
push
ins
adc
mov
aaa
(bad)
dec
sar
out
into
mov
xchg
pop
xchg
loope
mov
mov
loop
or
lock
pop
jae
mov
adc
enter
jg
stos
psraw
mov
mov
sub
jo
inc
mov
jle
(bad)
ds
movs
jle
ins
pop
cmps
cld
push
stc
popf
or
mov
mov
fbld
into
or
lds
jbe
mov
pop
jle
stos
mov
fisttp
cli
ffreep
push
(bad)
fnstenv
gs
cmp
add
repz
jo
popf
cmp
mov
mov
(bad)
clc
cmps
sbb
out
and
pop
rcl
cmp
dec
lds
out
clc
in
cmp
dec
xchg
push
jae
imul
rol
or
call
sub
out
cmps
icebp
mov
les
fiadd
mov
fcomp
ss
sti
call
fstp
inc
or
add
xor
fs
pushf
mov
add
cmp
lea
(bad)
jae
push
retf
retf
(bad)
call
xchg
dec
sub
iret
mov
lods
stos
push
and
aas
retf
fwait
daa
out
imul
xchg
xchg
push
xor
or
fsubrp
mov
inc
fs
and
xor
pop
pop
jne
fprem
adc
mov
push
mov
sbb
punpckhbw
shl
std
mov
das
xchg
popa
ds
adc
or
cmp
rcl
les
jbe
daa
inc
cmps
add
add
movs
lods
xor
mov
mov
enter
and
retf
add
gs
push
loope
inc
test
sbb
cwde
push
mov
adc
and
lods
xlat
xchg
call
adc
into
test
mov
into
jns
xchg
mov
(bad)
pop
push
dec
fs
cwde
imul
scas
ficomp
ss
xchg
inc
jp
mov
call
sub
js
xor
stc
(bad)
ror
shl
push
jno
fidivr
test
scas
and
adc
sub
movs
mov
push
jo
pop
cdq
mov
(bad)
mov
aaa
ficomp
sub
xchg
xchg
enter
jb
sbb
jmp
loope
inc
mov
rcr
mov
in
mov
repnz
(bad)
fstp
scas
loopne
xchg
icebp
pop
lods
data16
mul
push
stos
jae
fbld
retf
xor
in
xchg
and
mov
push
(bad)
mov
push
sub
mov
jmp
test
xor
(bad)
fyl2xp1
pop
shr
(bad)
mov
jle
aas
xor
aaa
stc
retf
add
push
jbe
inc
(bad)
nop
out
imul
sar
shl
cwde
jmp
sub
lods
int3
arpl
xchg
fs
sahf
mov
fcomp
fadd
out
fs
cmp
ins
push
mov
sub
fist
dec
aad
in
std
ins
clc
mov
imul
mov
test
inc
sbb
dec
cli
cmps
gs
in
pop
out
push
(bad)
jns
add
pop
mov
mov
xchg
xchg
xchg
xor
shr
dec
lods
lahf
and
aad
push
and
out
mov
fs
loopne
imul
pop
add
aam
xchg
jno
addr16
pop
jmp
pop
and
retf
mov
push
and
pop
xor
dec
cmps
pop
out
xchg
cmc
mov
sti
clc
fpatan
or
or
sbb
xor
cwde
dec
in
push
(bad)
das
pop
cmp
xor
or
or
arpl
jge
bound
xor
or
pop
neg
push
sbb
fsub
cwde
aas
push
in
xlat
nop
cmps
int
xor
adc
retf
fsub
(bad)
retf
xor
retf
or
movs
js
adc
sub
sti
pushf
sub
jb
xor
pop
jmp
out
nop
(bad)
pop
iret
sbb
lahf
or
dec
ds
icebp
jmp
pop
fdivr
rol
cmp
fst
dec
xor
mov
inc
adc
mov
pop
sbb
movs
arpl
das
enter
sbb
cmps
and
dec
gs
push
adc
(bad)
adc
push
ins
sub
outs
(bad)
fstp
movs
mov
test
fst
xor
(bad)
jns
pushf
add
sbb
adc
mov
push
xor
retf
push
push
pop
mov
call
push
scas
xchg
mov
mov
pop
push
movs
jmp
sbb
mov
in
push
sub
movs
pop
(bad)
test
rep
(bad)
xchg
inc
lods
(bad)
jmp
out
cwde
sti
mov
shl
adc
dec
ret
loop
add
imul
jae
mov
cmp
mov
or
pop
test
mov
xchg
hlt
mov
jle
or
clc
inc
cmp
add
shr
cmp
push
sahf
xor
mov
jno
lods
add
movs
sbb
mov
xor
dec
jo
mov
ret
inc
cli
bound
sbb
(bad)
mov
add
or
fs
aad
dec
dec
test
rcl
dec
inc
dec
xor
stc
and
mov
or
scas
push
xchg
div
inc
jae
add
jne
dec
jns
jne
inc
add
aam
mov
fwait
and
push
cmp
pop
scas
mov
pop
ins
ret
ja
outs
xlat
add
jns
stos
push
cmps
sbb
aam
sub
call
add
(bad)
leave
jmp
retf
pop
jmp
cmovs
xchg
ss
bound
int3
imul
mov
bound
ror
out
sbb
inc
sub
aam
mov
adc
test
jg
sahf
call
push
inc
addr16
dec
enter
adc
mov
and
xor
retf
lock
bound
test
in
sar
int
pop
push
xlat
jnp
aas
xor
(bad)
fdiv
or
add
das
retf
popf
adc
sub
pop
xor
repnz
push
xchg
jmp
xchg
repz
pop
jge
out
test
push
es
xchg
dec
(bad)
and
mov
dec
jo
inc
bound
sub
pop
and
sub
out
mov
cmc
iret
sti
inc
es
mov
ret
push
pop
or
sbb
xchg
xchg
xor
(bad)
jle
mov
ins
sub
retf
pop
pop
pop
mov
add
fimul
mov
add
xchg
jo
inc
pop
out
stos
sahf
hlt
ret
mov
mov
(bad)
push
test
in
push
retf
aaa
daa
(bad)
test
in
sbb
inc
dec
push
jno
imul
cmp
mov
push
mov
in
dec
adc
push
mov
xor
(bad)
dec
into
cmps
pop
adc
mov
xor
in
daa
jecxz
or
and
imul
shl
xor
mov
aad
mov
(bad)
sti
dec
pop
cli
jb
shl
add
xchg
gs
and
push
mov
pop
sbb
xchg
pushf
int
push
mov
or
fs
cmps
push
pop
sar
and
or
jmp
mov
out
xchg
fadd
loop
and
loope
fist
and
sub
pop
je
or
pop
mov
xchg
mov
or
sbb
ret
dec
jmp
and
inc
adc
aam
jecxz
call
sub
int
in
mov
sbb
jecxz
aas
push
imul
xor
xchg
xchg
test
push
and
or
xlat
pop
clc
mov
push
xchg
ret
cdq
fs
rcr
or
in
shr
pop
arpl
mov
je
sub
icebp
lds
mov
xor
dec
jmp
test
frstor
mov
stc
mov
and
mov
sbb
or
jbe
out
idiv
jmp
fadd
stos
xor
jg
aaa
or
stos
mov
iret
mov
xchg
xchg
in
xchg
scas
adc
mov
sub
and
sahf
lahf
jo
out
repnz
call
adc
jbe
inc
aam
and
test
ja
call
in
pusha
mov
ror
cmp
push
leave
inc
(bad)
pop
pop
and
xlat
add
fnstcw
xchg
popf
mov
or
pushf
jnp
mov
push
push
xor
inc
adc
cmps
lock
mov
sub
dec
xor
push
sti
fwait
push
add
mov
push
movs
inc
xchg
ret
inc
pop
sub
mov
fldenv
fcmove
stos
lahf
mov
mov
jae
pop
mov
xchg
xlat
sub
xor
dec
fdiv
jle
pop
pop
js
ror
or
add
shl
sub
sub
in
sbb
fs
out
pop
iret
add
out
adc
or
xchg
imul
inc
jmp
sbb
xchg
sbb
pusha
popa
stc
jge
cmp
(bad)
iret
jbe
mov
jmp
dec
push
cwde
mov
jb
and
sar
add
add
ret
sub
fucomp
stos
xchg
mov
je
xchg
push
enter
push
rol
push
sub
fs
cli
lock
and
aaa
sub
xor
ins
mov
(bad)
push
out
xor
mov
outs
pop
repz
hlt
adc
dec
lea
inc
add
jns
lea
pop
add
test
enter
call
enter
(bad)
push
mov
push
lods
xor
inc
pop
xlat
out
outs
xchg
mov
loop
jmp
out
pop
(bad)
div
aad
pop
leave
lds
movs
cli
push
inc
push
adc
push
mov
push
cs
ins
adc
daa
call
cld
sbb
mov
pop
jmp
pusha
ins
bound
xchg
fnstcw
sahf
daa
mov
dec
rcl
add
sbb
lods
or
jmp
out
cmp
push
lock
and
mov
cli
aam
jmp
mov
repz
out
jmp
out
(bad)
push
mov
cs
and
jne
or
cmp
pop
cli
ss
fisubr
or
adc
enter
push
xchg
mov
pop
or
pop
xchg
and
xchg
movs
cmp
cmps
jecxz
bound
loop
lods
cmp
fldpi
jne
and
aam
call
xor
jl
stos
mov
xlat
mov
scas
push
jo
add
or
lods
clc
nop
stos
adc
push
jle
outs
aas
fnstcw
mov
cmc
in
pop
and
rcl
and
pushf
(bad)
ret
test
inc
int
gs
lahf
loop
out
ins
bnd
push
inc
jb
pop
adc
shr
jnp
aaa
pop
push
movs
call
xor
je
jbe
dec
mov
cli
lods
push
jmp
pop
loope
and
jb
pop
pop
scas
jmp
jns
test
or
lahf
xchg
cwde
mov
adc
or
jmp
xchg
sub
sub
mov
dec
rol
stc
out
outs
je
jle
daa
pop
call
iret
push
cli
sub
add
dec
mov
add
pop
fild
outs
and
into
pop
mov
dec
ficom
inc
push
inc
add
sbb
imul
push
cmps
push
mov
test
stos
retf
js
imul
jp
push
mov
inc
push
add
xchg
popf
mov
fwait
lldt
adc
jg
div
cmp
pop
std
das
mov
repnz
iret
mov
call
pushf
mov
mov
sahf
mov
test
mov
jl
xchg
data16
fld
idiv
mul
dec
or
ins
inc
jnp
push
jecxz
movs
movs
sti
das
rcr
push
lahf
retf
cmps
repz
jmp
sub
fdiv
std
cmps
ins
aam
sbb
pushf
add
jo
pop
inc
mov
jmp
mov
mov
cmp
mov
sbb
enter
out
pushf
loope
shr
loop
mov
lods
gs
mov
call
scas
mov
adc
mov
out
stc
mov
inc
mov
pop
mov
repz
call
or
(bad)
std
jl
(bad)
stos
jmp
push
mov
rcl
dec
test
in
(bad)
jns
xor
rcl
ror
rcl
xchg
mov
mov
jg
xchg
sbb
push
out
cmps
xchg
rcl
test
in
jns
adc
hlt
callw
adc
cli
nop
pusha
dec
out
sub
add
adc
mov
enter
(bad)
icebp
sbb
and
inc
mov
or
aas
sbb
pop
cmp
stos
nop
mov
ins
rol
sub
out
cmp
or
mov
int3
or
cmp
es
pop
div
loope
xchg
pop
(bad)
loopne
lock
mov
sbb
shl
sbb
push
mov
xor
cmps
jb
cmps
add
sbb
dec
jae
sub
jecxz
jl
sub
js
retf
sbb
fist
sbb
and
sbb
aad
add
clc
push
clc
call
and
adc
aad
icebp
jne
push
scas
ss
jne
mov
imul
cld
sbb
xor
pop
ja
xor
popa
or
inc
sti
pusha
shl
lock
mov
popf
mov
test
loopne
aaa
mov
mov
(bad)
mov
sub
sti
pop
loop
add
stos
xchg
lods
dec
test
loopne
bound
sar
call
aaa
or
sbb
pusha
cmp
jns
test
push
(bad)
add
loop
xchg
not
loope
enter
aam
or
add
arpl
into
lods
pop
cmp
lods
rcl
adc
(bad)
jp
imul
xchg
lods
pop
xchg
loopne
clc
cdq
mov
add
enter
mov
popa
pop
arpl
dec
pop
(bad)
jo
cs
xchg
fimul
stc
dec
aaa
pop
xchg
int
mov
push
push
movs
jecxz
or
pop
sar
aad
(bad)
call
mov
cmp
or
stc
xchg
imul
push
cmp
fisttp
sub
iret
push
mov
dec
inc
jnp
mov
inc
mov
cmp
pop
adc
sub
pop
mov
lea
inc
xchg
mov
xor
inc
enter
and
add
push
push
jo
in
scas
jae
pop
aaa
xor
jmp
and
and
jl
sahf
sub
xchg
mov
mov
pop
inc
cmc
scas
and
ins
enter
mov
pop
scas
iret
push
mov
cwde
cmps
loop
sbb
mov
adc
adc
adc
popf
clc
dec
or
nop
rcr
mov
dec
and
xor
xchg
inc
jb
dec
std
xor
cmp
idiv
xchg
imul
inc
or
push
add
mov
std
add
js
xchg
scas
inc
hlt
imul
mov
(bad)
sub
jno
add
inc
fld
adc
int3
adc
xchg
inc
pop
sub
add
ja
imul
lods
push
aaa
(bad)
sti
test
fs
clc
jmp
fs
adc
leave
loopne
aaa
in
arpl
sbb
xchg
retf
test
out
sbb
(bad)
xor
leave
mov
pop
(bad)
lahf
loop
push
jbe
popa
out
dec
and
push
or
xchg
cmc
mov
xor
ror
mov
outs
(bad)
call
stc
and
mov
inc
cld
stc
sbb
int3
sbb
cmp
push
dec
mov
cli
sub
fs
ja
xor
sub
add
imul
push
frndint
movs
mov
jo
(bad)
out
and
pop
inc
sahf
jnp
and
fild
mov
bound
mov
push
inc
dec
and
stc
inc
daa
and
sub
test
rcl
in
jle
dec
sub
or
lds
test
in
test
sbb
and
movs
push
and
sub
fwait
mov
xor
shl
mov
mov
sub
int3
sub
aaa
test
dec
jle
dec
jmp
xor
add
imul
ret
mov
dec
dec
neg
imul
inc
int
pop
cmp
sbb
out
jns
daa
pop
pop
lods
icebp
test
mov
push
mov
and
mov
shr
push
(bad)
mov
mov
aad
aas
sub
test
(bad)
mov
ins
fcomp
xchg
or
inc
xchg
scas
mov
pusha
dec
dec
call
xchg
aad
mov
int
test
adc
mov
(bad)
jmp
ficom
adc
sub
inc
lock
push
je
jne
jbe
hlt
xchg
sub
imul
push
jne
scas
push
lea
xor
adc
adc
outs
clc
iret
pop
das
pushf
dec
enter
xor
fwait
pop
outs
mov
ret
inc
popa
mov
jnp
std
iret
cmc
mov
xchg
pushf
jp
mov
adc
into
adc
sbb
pop
or
out
push
imul
adc
pop
fild
mov
out
fwait
addr16
lock
(bad)
cld
mov
gs
or
xor
out
data16
stos
shl
jbe
mov
cmps
mov
out
idiv
xchg
inc
xor
cmp
sti
push
mov
cmp
in
mov
mov
mov
cmp
adc
fsub
add
mov
imul
inc
jmp
das
ficom
movs
adc
aas
inc
jae
aam
sub
jb
out
shr
mov
xchg
cmp
jp
inc
and
or
repz
aas
stos
adc
fidiv
pop
sti
pop
mov
test
pop
mov
sub
(bad)
(bad)
xor
sbb
jecxz
sbb
neg
popf
and
out
xchg
cmp
ja
mov
inc
cld
pop
(bad)
mov
fxch
ins
add
adc
popa
hlt
std
pusha
(bad)
cmp
mov
adc
or
rol
push
jno
enter
dec
mov
or
int
ja
adc
cmp
in
sub
cdq
mov
add
bound
mov
loopne
jne
mov
fisttp
mov
mov
(bad)
adc
ret
xchg
sbb
inc
jge
imul
xchg
jge
adc
mov
push
sub
daa
xor
ror
sti
cmp
or
shl
rol
sub
ficom
fist
pusha
adc
hlt
sbb
pop
out
xchg
fisttp
push
cmp
add
sub
add
xchg
lea
mov
sub
imul
push
retf
out
aas
(bad)
add
in
push
xor
cmps
sti
jno
enter
add
pop
call
ja
cmp
pop
or
cmc
stos
sub
xor
cdq
xlat
mov
xchg
add
(bad)
xchg
cmp
je
mov
mov
fcmovnb
js
sbb
jle
pop
or
call
daa
add
adc
cmps
mov
int
stos
xor
xchg
or
iret
or
fbstp
movs
cmp
aam
add
sbb
stos
cld
(bad)
dec
movs
test
mov
ja
addr16
mov
das
xor
retf
ret
dec
int3
or
movs
fsubr
jg
pop
jg
push
mov
in
adc
mov
xor
cmp
scas
add
mov
loopne
push
lea
ror
jle
mov
cmp
lds
call
cld
pop
out
or
xor
test
dec
mov
enter
cmps
jnp
or
ss
jmp
rcl
push
mov
add
fsubr
xchg
xor
pop
aas
push
fiadd
mov
inc
mov
fs
fwait
sahf
call
sahf
and
adc
inc
mov
adc
mov
sub
ror
test
in
aaa
call
dec
or
repz
jecxz
mov
(bad)
cmp
stc
push
idiv
daa
rcr
add
call
mov
shl
js
out
jecxz
dec
pop
jecxz
dec
shl
test
push
pop
or
pusha
ret
push
pop
cld
inc
ficom
ret
js
push
xchg
dec
data16
mov
je
or
sbb
xor
jmp
out
mov
daa
adc
std
xor
push
lods
adc
dec
out
push
or
(bad)
in
dec
lock
rol
jecxz
adc
pop
sub
adc
jbe
(bad)
push
ret
xor
xchg
sbb
sti
sub
dec
inc
out
pop
data16
in
out
call
retf
mov
jl
or
or
lods
sub
aam
cmps
nop
lods
adc
inc
imul
(bad)
je
adc
cmps
sbb
mov
inc
stos
in
jns
pop
das
test
jbe
retf
mov
ret
dec
test
daa
cmps
xchg
or
in
push
sbb
sahf
cmp
pop
repz
sub
adc
or
inc
jecxz
jno
shl
inc
inc
call
aad
jge
mov
shl
or
lahf
sub
xor
mov
jge
push
lods
xchg
out
loopne
adc
pop
xor
sbb
test
xchg
or
scas
pop
push
gs
clc
jae
xchg
cmp
pop
push
or
int3
inc
lds
push
adc
xor
mov
pop
rcl
loope
js
daa
in
mov
leave
ds
cmc
pop
lock
push
out
test
dec
ds
fs
mov
pop
mov
je
xchg
and
lods
js
sar
test
add
loopne
bound
lods
cmp
push
enter
sbb
adc
xchg
mov
lds
pop
mov
gs
stc
sbb
test
mov
(bad)
and
dec
mov
xor
xor
cmps
(bad)
mov
in
shl
(bad)
iret
add
sbb
imul
aad
or
adc
(bad)
and
xor
enter
inc
dec
cli
js
enter
daa
retf
pusha
dec
mov
pop
(bad)
iret
mov
pop
push
ins
add
xor
push
cli
mov
adc
or
bnd
fs
test
inc
out
mov
sub
fs
(bad)
pop
inc
dec
fcom
jle
ror
into
pop
jae
arpl
and
enter
sub
mov
adc
jg
loope
pop
jae
jnp
leave
xchg
cs
xchg
(bad)
(bad)
lods
jbe
adc
aaa
mov
mov
std
mov
push
push
lods
bound
xlat
(bad)
fcom
dec
in
shr
lods
gs
cld
rol
shl
mov
out
std
ja
imul
fs
retf
lods
gs
(bad)
js
(bad)
leave
enter
outs
adc
cld
pop
xchg
dec
sbb
(bad)
mov
(bad)
pop
xlat
fwait
mov
jl
lea
retf
push
ins
jmp
outs
sar
scas
and
mov
test
cmp
add
in
outs
inc
or
xchg
ds
jl
xchg
mov
adc
cs
dec
push
leave
cli
hlt
shr
cld
sahf
add
or
fsub
(bad)
cli
add
push
xchg
xor
jl
addr16
ja
cld
aam
scas
stc
scas
pop
xlat
dec
xor
mov
push
pop
jo
inc
popf
sub
addr16
xchg
or
js
mov
je
sub
rol
lock
dec
retf
into
ficomp
adc
xchg
mov
mov
xchg
(bad)
jl
cwde
xchg
rcl
popa
mov
outs
push
sbb
icebp
mov
xchg
push
iret
dec
pop
loopne
pop
inc
(bad)
out
pop
in
retf
retf
shl
and
mov
pop
call
aas
call
shl
pop
dec
fidiv
movs
shl
pop
adc
in
dec
jbe
ror
out
les
test
xchg
xor
push
mov
adc
dec
mov
in
test
pxor
in
push
(bad)
mov
les
or
xor
adc
idiv
mov
push
inc
pusha
aaa
jmp
xor
movs
mov
or
int
jns
ins
in
xchg
inc
clc
ss
add
pop
nop
adc
lea
(bad)
in
bound
sbb
jb
mov
lea
(bad)
(bad)
fimul
xor
push
mov
and
adc
mov
repz
imul
leave
mov
mov
mov
aas
fs
(bad)
and
and
pop
pop
fldln2
aam
imul
mov
aam
mov
(bad)
mov
mov
mov
fwait
pop
mov
push
fnstsw
out
loope
push
bound
mov
mov
mov
test
repnz
adc
mov
adc
mov
(bad)
rcr
data16
mov
pushf
mov
jo
idiv
jns
enter
iret
imul
xchg
push
push
pop
adc
mul
dec
ss
sub
popa
xor
xchg
imul
out
sbb
pop
fwait
sahf
add
inc
sub
inc
(bad)
mov
fs
push
cdq
push
xlat
in
call
push
not
enter
push
add
test
scas
jecxz
(bad)
and
dec
(bad)
mov
cmps
jp
in
aam
push
sar
mov
mov
or
fimul
stc
adc
pusha
out
cs
dec
mov
test
fild
add
repz
jecxz
mov
ds
pop
out
fxch
aaa
not
jge
pop
xchg
xchg
mov
retf
pop
int
sub
mov
and
mov
adc
mov
xor
repz
xchg
(bad)
ror
or
xlat
aaa
add
push
dec
jge
(bad)
(bad)
fidiv
call
inc
jg
push
inc
xchg
sbb
cld
ins
je
inc
cwde
or
xchg
xor
shl
ret
ret
lods
jge
aas
cmp
and
out
mov
cmp
mov
inc
sbb
push
mov
bound
cmp
das
sbb
stos
and
rol
push
mov
sbb
pop
mov
enter
cmc
in
push
test
sub
data16
or
retf
xchg
fistp
push
xchg
add
in
fadd
add
outs
call
jecxz
mov
out
pop
sbb
sub
into
out
push
jnp
lahf
add
fisubr
push
(bad)
xor
mov
add
and
fld
cmp
in
cmp
push
xchg
sbb
sub
push
nop
inc
loopne
jl
pusha
les
es
mov
add
int
aam
pop
push
push
pop
inc
(bad)
(bad)
inc
push
jmp
sahf
(bad)
xor
xor
adc
fidivr
jmp
cmp
mov
jmp
mov
ja
and
lahf
dec
lea
in
sahf
or
aaa
idiv
push
test
pop
xor
mov
or
pop
shr
mov
out
mov
add
std
pop
rcl
nop
xchg
jo
imul
dec
adc
push
cmps
loop
pushf
imul
or
jmp
loopne
jo
xor
loopne
xchg
imul
cli
inc
inc
das
(bad)
push
push
pusha
push
inc
jne
mul
xor
test
cli
lds
aas
or
fwait
pop
sub
jmp
mov
gs
ret
test
jge
sub
pop
addr16
cmp
xor
ins
ja
mov
ds
out
bound
js
jno
les
sub
aad
cdq
mov
mov
and
js
inc
inc
in
cmp
push
add
sbb
repnz
xor
pop
pop
cmp
icebp
mov
retf
mov
pop
inc
pop
ret
xchg
loop
pop
loop
jg
sahf
push
jmp
xlat
pop
popa
and
fsub
cmp
(bad)
icebp
sub
cwde
push
ins
inc
mov
ds
addr16
aas
adc
int
mov
(bad)
mov
push
xor
je
xor
aaa
idiv
xchg
jmp
imul
add
jl
(bad)
ds
outs
pushf
cdq
pop
xchg
xchg
mov
xchg
scas
arpl
fadd
push
cmp
push
test
adc
adc
xor
out
(bad)
jmp
push
mov
pop
inc
push
jne
dec
rcr
adc
push
push
ss
imul
out
push
or
fistp
pop
inc
stos
fistp
(bad)
xlat
pop
dec
dec
or
lods
sbb
inc
dec
sub
in
shl
sub
mov
jp
cmps
add
dec
xchg
add
in
push
and
push
aaa
imul
jmp
and
ins
outs
jb
jle
sub
into
retf
mov
xor
inc
int3
iret
aaa
leave
aam
outs
inc
int3
or
ret
movs
mov
jl
imul
in
xchg
pop
(bad)
enter
add
cmp
mov
fs
aas
adc
fsubp
pushf
movs
mov
cmc
or
jno
or
in
lea
(bad)
std
add
cmova
in
inc
xchg
test
xchg
call
xor
adc
jne
aad
fwait
push
jb
xor
xchg
(bad)
adc
iret
dec
fstp
std
in
dec
les
(bad)
mov
xchg
pop
add
(bad)
pop
jge
mov
xlat
mov
popa
cmp
jl
sbb
or
jne
mov
jmp
loop
repz
pop
rcr
lock
loope
push
clc
pop
bound
test
mov
sub
in
outs
cmc
pop
arpl
clc
xchg
adc
mov
xchg
sub
repz
mov
push
clc
(bad)
push
gs
repnz
(bad)
mov
ins
aam
dec
scas
and
mov
xchg
outs
add
inc
xchg
shr
mov
xor
pop
(bad)
imul
test
movs
add
cwde
mov
push
add
inc
jae
lahf
(bad)
enter
in
ds
js
scas
pop
inc
popf
sbb
call
stc
arpl
sub
mov
aad
push
cli
ss
inc
ret
cmps
mov
xor
pop
mov
jns
jo
mov
xchg
mov
mov
xchg
mov
and
dec
mov
adc
leave
inc
dec
xor
or
(bad)
and
out
test
fisubr
cmps
mov
jne
dec
push
test
add
out
xchg
cwde
neg
cli
iret
aam
retf
mov
jae
in
movs
xchg
lods
push
aas
push
inc
(bad)
mov
jne
jne
inc
int
in
cmps
fist
retf
and
popf
imul
mov
mov
xor
rol
push
fisubr
add
push
call
cli
popa
sbb
sub
in
inc
mov
sub
ins
fldcw
xor
out
jne
mov
xchg
mov
pop
aas
adc
leave
sbb
xlat
push
push
clc
sub
div
adc
or
(bad)
xchg
sti
(bad)
sub
push
sub
and
lods
and
cmp
stos
add
les
push
pop
ficom
out
xchg
call
sti
mov
cmp
adc
pop
cmps
mov
fcmovne
add
xor
sar
lock
sbb
pushf
cmp
jb
cmp
mov
xor
outs
cmp
mov
or
fnsave
fst
(bad)
xlat
xchg
add
imul
push
add
stos
sub
js
mov
mov
add
movs
pop
sbb
xor
shr
jb
dec
mov
pop
add
std
imul
pusha
data16
jmp
and
mov
and
dec
sar
jge
inc
mov
inc
jno
ins
jecxz
fwait
imul
je
sub
jge
dec
jne
daa
outs
hlt
or
movs
xor
mov
das
dec
js
and
les
pop
aad
pop
mov
(bad)
ins
mov
shl
(bad)
sar
inc
dec
aad
sbb
daa
loopne
ins
sti
dec
dec
cld
pop
test
je
fs
inc
mov
bound
addr16
inc
xchg
cs
sar
push
sbb
xor
loope
mov
and
sbb
mov
stos
cli
push
push
jmp
out
push
push
fstp
mov
push
or
outs
inc
xchg
dec
into
scas
arpl
pop
lock
add
das
and
jbe
cmp
cmp
or
in
adc
sbb
inc
iret
jle
in
addr16
in
adc
pop
xchg
aad
and
xor
cs
test
add
and
mov
inc
xchg
mov
cmp
lds
sbb
push
mov
addr16
sbb
js
push
xor
cmp
mov
(bad)
(bad)
sub
add
push
sbb
xlat
pandn
push
out
add
(bad)
pushf
xchg
imul
adc
pop
add
idiv
cmp
icebp
repnz
rol
xlat
mov
push
scas
aad
xlat
cdq
stos
fcmovb
imul
cdq
cmp
fsub
and
shr
mov
add
inc
fldcw
sahf
pop
dec
push
or
pop
jl
enter
add
adc
mov
cmp
xor
xchg
imul
and
mov
mov
xor
sub
ficom
or
fidivr
fwait
push
or
js
dec
rcl
dec
loopne
sbb
pop
add
inc
adc
inc
loopne
cmp
cdq
lahf
shl
pop
xchg
mov
out
popa
call
jmp
in
imul
mov
stos
lahf
dec
and
in
cs
test
xchg
popf
ss
std
xchg
nop
cmp
push
mov
sub
nop
repz
int3
sti
ficomp
in
mov
sub
out
je
mov
and
sub
fsubp
shl
xchg
sub
lods
push
out
inc
out
inc
mov
sub
fiadd
cmp
fcmovnu
adc
jle
jnp
imul
movs
(bad)
cmp
cmp
mov
hlt
retf
push
mov
iret
jmp
pop
mov
popa
xor
push
mov
mov
into
mov
jg
sbb
lods
pusha
lods
sbb
fdivr
popa
xor
and
ss
dec
cmp
arpl
pop
in
or
int
je
mov
repz
add
lea
mov
jle
aad
cld
push
mov
inc
cld
dec
add
dec
xchg
hlt
jle
movs
ins
jne
xchg
shl
jge
into
xchg
and
push
mov
xchg
hlt
dec
push
aam
aam
mov
fwait
inc
add
imul
test
mov
rcl
xchg
mov
das
mov
inc
mov
add
adc
sbb
xchg
(bad)
xchg
add
push
xor
inc
movs
repz
push
mov
sub
sub
xor
pop
mov
dec
mov
or
push
inc
fdivp
cmp
sub
dec
mov
pop
dec
js
iret
aam
sahf
es
xor
push
cmp
cmp
mov
mov
mov
push
and
add
pop
das
sub
cld
sar
mov
mov
ins
out
push
cmp
or
adc
or
call
ins
stos
sub
lods
shl
data16
cs
jle
mov
sbb
cmp
and
dec
aad
movs
cmps
mov
not
sbb
icebp
cld
stc
or
adc
jmp
(bad)
cmp
xchg
mov
pusha
(bad)
repz
mov
test
lock
pop
mov
neg
pop
pop
xor
in
movs
mov
inc
data16
push
mov
mov
mov
mov
popf
push
shr
ja
jb
daa
push
popa
gs
cmp
mov
xchg
push
ins
fstp
call
mov
and
aad
lods
dec
or
in
sub
push
bnd
repz
sbb
sbb
jge
fcomi
push
pop
enter
shl
push
mov
xor
(bad)
aaa
xchg
neg
jbe
(bad)
and
mov
or
mov
sar
and
jle
mov
rol
dec
xor
das
inc
scas
push
aad
push
mov
mov
cwde
popa
fcmovbe
cmps
pop
pop
xchg
push
scas
call
sub
or
fistp
aaa
enter
rol
xor
pushf
or
cdq
loop
mov
ja
xor
repz
test
ret
or
(bad)
cmp
inc
adc
loop
iret
xor
push
js
cmp
sahf
ins
pusha
(bad)
mov
retf
daa
(bad)
popa
rol
cmc
int3
fwait
cmp
(bad)
dec
jl
mov
pop
dec
pusha
fild
xor
jge
sub
cmp
sbb
push
movs
jge
sti
dec
data16
push
sar
sub
xchg
idiv
cli
(bad)
mov
lods
inc
jb
or
retf
inc
xchg
scas
dec
mov
sbb
push
xor
xchg
mov
cs
xchg
xor
(bad)
adc
jo
adc
adc
(bad)
mov
dec
mov
inc
ja
adc
xor
enter
xor
mov
jmp
out
mov
sbb
and
fmul
std
outs
or
sbb
push
push
cmps
add
fs
test
outs
jo
xor
mov
mov
mov
leave
out
cdq
mov
imul
mov
test
(bad)
cmp
in
imul
or
std
jecxz
mov
outs
jns
sub
int
call
fisttp
je
push
lahf
xchg
mov
push
mov
ret
out
adc
retf
pop
add
mov
cmp
xor
ficomp
aam
movs
outs
iret
adc
mov
adc
xchg
dec
stc
and
xor
xchg
xchg
ins
mov
jg
bound
jp
and
in
and
and
retf
fadd
stos
shr
in
pushf
sbb
push
cmp
jbe
shl
or
inc
xchg
aad
push
push
imul
aam
push
sar
inc
add
imul
stos
adc
imul
xor
pop
iret
movs
ja
mov
mov
ficomp
enter
into
jns
imul
neg
mov
push
mov
fisttp
ret
call
pop
add
xor
add
sub
mov
mov
fwait
mov
les
cmps
ret
lds
xchg
sub
pop
fwait
or
pop
jp
push
mov
(bad)
rcr
int
popf
fsub
adc
push
sub
push
lods
pop
in
aas
push
retf
pop
pushf
dec
clc
xchg
pushf
sbb
lods
fwait
popa
lock
cs
or
xchg
in
push
cmp
outs
inc
retf
jae
leave
or
repnz
sti
retf
inc
(bad)
imul
pop
ins
mov
movs
out
push
sbb
mov
jns
fadd
sub
or
(bad)
inc
xchg
add
das
mov
psubsw
jg
imul
loopne
jle
retf
icebp
sti
int3
in
dec
sbb
ret
pop
dec
xchg
pop
jp
outs
imul
repz
fbld
call
fiadd
ror
cmovno
call
inc
dec
dec
inc
sub
sub
xchg
mov
jl
ret
inc
iret
cld
jle
push
push
neg
lods
and
iret
arpl
push
mov
rcl
or
inc
push
xchg
gs
dec
mov
sub
mov
and
adc
ins
mov
test
add
fstp
push
pop
(bad)
cs
jno
push
adc
and
jo
push
and
inc
adc
and
inc
stos
dec
pop
lods
cwde
sbb
sub
or
call
pop
fld
cmp
pop
push
rcl
xchg
(bad)
out
loop
int
jmp
jo
iret
sub
xchg
adc
hlt
ds
mov
and
mov
out
and
clc
dec
in
xchg
ficom
out
(bad)
ds
stc
dec
add
push
sbb
mov
add
jns
call
or
call
sbb
cs
jno
fld
(bad)
pop
jnp
inc
xchg
stos
sub
sub
lea
xchg
pop
icebp
dec
mov
aam
xor
or
icebp
(bad)
or
fsubr
adc
mov
add
and
stc
inc
fs
add
fisttp
loope
sbb
cmps
dec
loop
imul
fstp
xchg
adc
je
stos
or
jmp
shl
or
jp
push
daa
addr16
call
mov
inc
jne
sar
sbb
(bad)
xor
rcl
outs
xchg
sahf
jmp
icebp
in
jecxz
(bad)
add
(bad)
idiv
xor
push
repnz
dec
add
in
pusha
mov
mov
mov
fnstcw
push
dec
out
test
mov
fadd
push
(bad)
sbb
xchg
jnp
(bad)
mov
jg
scas
push
inc
mul
push
mov
shl
fwait
ins
xchg
aad
dec
and
sub
(bad)
jmp
rcl
cmp
ret
cwde
push
mov
rol
cmp
push
xchg
jns
or
movs
inc
dec
mov
mov
xor
mov
icebp
mov
cmps
dec
ins
push
fsub
pusha
lods
lods
mov
addr16
cmp
mov
cmps
cs
or
xchg
scas
aam
mov
mov
cli
mov
add
shl
rol
inc
dec
inc
mov
inc
sbb
push
idiv
cmp
xor
(bad)
(bad)
sbb
imul
cwde
xchg
mov
mov
das
fldenv
(bad)
cmp
aaa
pop
add
mov
cmps
inc
push
loope
cmp
test
jmp
clc
mov
pop
jle
fbld
sar
shr
jb
mov
xor
outs
sub
fmul
mov
add
sub
cmp
test
shl
pusha
xchg
test
xor
push
inc
xor
push
jmp
das
cld
jp
out
cmp
pop
xchg
xchg
fbstp
or
cmps
jno
xor
aas
jle
jge
mov
loope
sti
sub
jns
rcl
out
test
sub
xor
shl
add
sub
in
retf
xchg
xchg
enter
call
rcr
sub
cmp
cmp
or
clc
pop
xor
sub
loopne
pop
cmp
and
adc
div
mov
xor
aaa
mov
lea
sahf
mov
das
cmp
sbb
cmp
jecxz
pop
movs
bound
mov
lds
movs
pop
sbb
int
xchg
loope
xor
jl
pop
ret
dec
dec
mov
mov
mov
ror
jge
add
sub
lock
push
cmp
adc
sbb
inc
(bad)
sti
ret
add
je
addr16
mov
push
and
or
out
clc
mov
stc
sbb
xor
dec
mov
dec
fisttp
pop
lds
sbb
in
test
sub
adc
ja
add
mul
dec
outs
aaa
cmc
es
arpl
xchg
pop
jae
les
rol
sub
scas
adc
es
cmp
out
dec
xchg
mov
das
sub
xor
in
ss
call
fnstcw
test
mov
cmp
(bad)
fisubr
rcl
push
rcl
sub
pop
sub
ja
push
pop
fmul
inc
call
into
xor
ret
aas
sbb
in
ret
imul
dec
and
in
or
pop
push
sbb
and
retf
mov
lods
retf
cwde
ins
arpl
daa
push
mov
xor
outs
std
pushf
imul
test
mov
scas
cmp
mov
mov
adc
jmp
xor
mov
in
std
jg
fucomp
dec
ins
add
pop
jb
dec
jmp
int
mov
mov
pop
inc
std
fs
(bad)
inc
add
xor
or
in
aas
xor
mov
fisubr
or
jmp
cmps
xlat
sbb
mov
xchg
or
cmp
mov
or
movs
push
inc
call
popa
dec
(bad)
push
jo
inc
or
sub
xchg
cmps
mov
xchg
push
loope
sbb
aad
enter
ds
jno
jmp
and
jns
cmp
and
cli
shl
rcr
inc
sbb
movs
into
pop
push
test
push
jle
je
adc
aas
test
std
mov
clc
xor
test
movlhps
clc
cmp
xor
js
(bad)
cli
xor
ins
push
in
dec
lods
push
dec
adc
addr16
mov
sub
adc
inc
cmp
sbb
push
cs
fnstsw
nop
mov
shl
xchg
or
daa
or
sub
rcr
push
mov
mov
cdq
cmp
popf
adc
mov
nop
jmp
rol
pusha
mov
sbb
mov
retf
stos
and
cmp
xor
ror
addr16
jae
fadd
test
adc
stos
scas
jbe
xchg
cmp
sbb
sbb
popf
mov
or
loop
inc
lods
mov
mov
jl
rol
mov
pop
mov
ret
iret
pusha
push
lods
add
loope
jmp
sub
sub
push
mov
xchg
lahf
aas
mov
inc
aam
mov
js
mov
add
stc
stos
push
mov
pop
jl
popf
aam
mov
add
jo
jg
mov
mov
inc
loop
push
adc
mov
lods
aas
ss
daa
mov
pop
mov
and
aaa
push
sub
leave
(bad)
push
loop
cmps
lods
cmp
mov
movs
sub
xor
shl
jge
push
leave
cmp
fwait
aad
or
add
scas
dec
arpl
push
xchg
jecxz
stos
dec
mov
lods
fisub
in
cli
shl
imul
cwde
je
frstor
sub
sbb
jle
(bad)
fdiv
jl
neg
mov
movs
outs
jp
jbe
pop
lea
mov
lahf
cmc
bound
push
lds
mov
pop
sahf
test
mov
ja
push
cmps
inc
add
jge
cmps
js
out
mul
xchg
cld
(bad)
xlat
pop
mov
dec
mov
cmps
out
jg
jge
sar
push
add
pop
gs
iret
mov
daa
jae
cmp
xor
and
(bad)
sub
je
inc
pop
repz
xor
call
push
and
cmps
sahf
movhps
xlat
xchg
pop
sbb
mov
fidivr
mov
push
mov
stos
jle
xchg
and
mov
imul
ja
lods
gs
out
cmps
movs
pushf
mov
(bad)
retf
lods
mov
jmp
in
add
mov
dec
out
lods
dec
stos
sub
mov
ret
pusha
fs
ja
ret
dec
pop
push
xchg
imul
xor
and
pop
stc
movs
stos
pop
cld
in
pop
cwde
push
sub
in
pop
adc
ins
pop
sbb
loop
mov
mov
inc
or
dec
rep
pop
mov
sbb
cmp
cmp
mov
mov
(bad)
sbb
out
and
mov
mov
xor
popa
fptan
out
mov
scas
xor
jno
push
stc
cmp
fadd
sub
popa
inc
gs
adc
call
(bad)
sti
mov
out
sub
fidiv
lock
jl
dec
and
push
or
lods
adc
stos
adc
js
xor
idiv
adc
retf
out
mov
into
movs
cld
fsubr
fs
dec
dec
and
int3
(bad)
xor
js
(bad)
ja
mov
cmp
add
in
dec
ficom
mov
into
test
(bad)
fisub
xchg
mov
sbb
mov
mov
add
jbe
dec
(bad)
ins
xchg
mov
or
dec
sub
popa
xchg
inc
mov
je
imul
cdq
sahf
fistp
arpl
ja
mov
ss
enter
inc
xor
retf
and
mov
repz
repz
loopne
jmp
sbb
iret
out
and
(bad)
pop
fidivr
rcl
xchg
adc
xchg
pop
(bad)
pop
daa
aad
mov
ins
ficomp
inc
icebp
mov
ret
xchg
mov
sbb
popa
pop
cli
add
daa
ret
push
jle
in
cmp
adc
test
mov
out
cld
je
cwde
hlt
adc
inc
into
mov
and
inc
mov
and
push
pop
jbe
add
retf
mov
in
fidivr
retf
dec
sti
add
push
mov
fsub
mov
scas
fs
cmp
push
arpl
push
mov
lds
push
mov
or
xchg
mov
out
adc
mov
leave
cli
dec
test
add
out
push
test
push
loopne
gs
pop
xchg
jnp
fisubr
rcr
call
les
adc
push
pop
pcmpgtd
jge
pop
adc
dec
mov
data16
pop
dec
shl
scas
mov
pop
mov
dec
inc
sbb
sar
and
push
pop
movs
xchg
sbb
clc
cmc
jae
mov
mov
mov
jmp
in
mov
add
xchg
sbb
out
retf
mov
mov
fucomip
jne
pop
ja
jg
sbb
adc
mov
cmps
imul
popa
ret
mov
retf
fnstsw
cli
inc
mov
adc
stc
push
pop
jp
cdq
xchg
cmp
test
mov
xchg
xor
ss
arpl
pop
int3
(bad)
mov
mov
pop
mov
(bad)
pmulhw
jmp
fisub
popf
rcl
inc
out
inc
imul
cmp
lahf
sub
bound
sub
inc
jnp
push
cli
in
jo
sti
or
fistp
ja
sbb
ret
push
repnz
mov
sbb
enter
pop
retf
idiv
pop
psubsb
jbe
stos
shl
pop
inc
pop
cmps
popa
test
popf
cmp
aas
clc
mov
or
popf
cmp
inc
mov
movs
iret
icebp
sbb
mul
add
ds
sbb
push
mov
push
sar
adc
jmp
jno
pop
test
and
mov
cli
call
add
(bad)
push
cmp
mov
test
adc
and
dec
int3
icebp
jmp
ret
jne
call
ds
sub
and
or
xor
xchg
xor
push
sub
dec
ror
ss
cdq
jb
lods
add
xchg
dec
inc
popf
cmp
jmp
nop
inc
into
cmps
and
outs
push
pop
jne
daa
es
mov
jae
fst
jl
popa
outs
or
mov
hlt
fimul
aas
cmp
in
rcl
xchg
loop
int3
adc
push
mov
fnstenv
mov
xor
jl
hlt
cmps
mov
jge
jbe
lahf
mov
xchg
shr
pop
(bad)
xor
stos
in
pusha
pop
ds
xchg
sar
in
xchg
dec
iret
outs
and
into
inc
repnz
adc
adc
arpl
sub
jge
pop
sub
lods
xchg
jns
xchg
xor
stos
int
mov
stos
out
fwait
(bad)
(bad)
loop
imul
movs
retf
inc
fs
push
pop
jns
shufps
adc
mov
mov
pop
mov
nop
pop
sar
lock
lods
dec
mov
xchg
mov
aad
lods
xlat
loopne
rol
jp
das
push
pusha
addr16
adc
push
call
push
jo
push
xchg
int3
cdq
or
and
mov
dec
aaa
xlat
add
jge
xor
mov
pop
mov
(bad)
or
dec
stc
sbb
or
(bad)
fcom
cmp
cld
and
and
add
shl
pop
fst
pop
(bad)
int
fimul
sbb
inc
aam
out
push
mov
push
or
out
mov
inc
data16
cmp
cmps
dec
dec
push
jmp
fcom
retf
aam
mov
add
lods
mov
shl
push
dec
mov
(bad)
pop
shr
(bad)
xor
mov
and
xchg
(bad)
xor
shl
outs
aad
xchg
icebp
fisttp
mov
jp
shl
pop
(bad)
jg
and
jmp
inc
(bad)
inc
mov
into
nop
or
js
adc
jno
adc
adc
lods
shl
mov
mov
rcr
push
fbld
call
fstp
sbb
push
shr
in
das
xlat
mov
rcl
add
mov
mov
or
stc
(bad)
icebp
(bad)
ins
add
imul
mov
aaa
jae
cs
mov
mov
repnz
jmp
aad
mov
sub
mov
dec
push
xchg
push
xor
js
es
mov
fwait
aad
xchg
cmp
mov
mov
enter
add
mov
and
jbe
inc
icebp
push
xor
push
mov
or
shr
mov
popf
movs
xchg
sbb
stc
jg
(bad)
jb
bnd
sbb
enter
jno
cld
out
push
int
sbb
add
inc
sti
popf
dec
sbb
icebp
icebp
or
pop
mov
sub
xor
fldenv
leave
imul
cwde
loope
inc
jns
lods
fiadd
sti
scas
mul
mov
in
das
repnz
adc
or
jns
xchg
mov
mov
enter
ret
adc
push
inc
mov
push
fist
scas
call
cdq
and
mov
lahf
push
push
sti
pop
jecxz
es
xchg
out
or
mov
sbb
fs
out
aas
mov
cwde
push
pop
inc
dec
add
cmps
mov
inc
xchg
mov
js
aad
gs
dec
pop
xlat
jb
mov
mov
and
sbb
dec
mov
fwait
pop
pop
je
out
xchg
test
adc
arpl
test
jp
push
mov
retf
aas
cmp
jne
push
jecxz
out
dec
adc
(bad)
call
iret
repz
and
out
and
out
pop
cmp
or
arpl
in
rcr
inc
push
adc
mov
push
sub
adc
sub
jbe
mov
int3
mov
test
outs
mov
cmp
mov
clc
mov
pop
xchg
cmp
mov
jg
add
xlat
adc
pop
xchg
mov
sub
cli
mov
movs
jl
lods
cmp
cwde
popa
mov
xor
xchg
inc
mov
cmc
test
sbb
mov
mov
xor
cwde
(bad)
sbb
jmp
sub
and
movs
sbb
test
cmc
stos
adc
sub
sbb
add
jo
mov
(bad)
xchg
nop
fsubr
fs
(bad)
out
out
stc
inc
repnz
jge
imul
es
or
test
aad
push
mov
sub
mov
jo
es
retf
and
repnz
cs
lock
mov
cmp
pushf
pop
push
mov
call
pop
push
pop
dec
sbb
cmc
cmps
add
lods
pop
call
jecxz
mov
mov
push
sub
fsub
push
loopne
aam
cmp
lahf
cmp
pop
push
jnp
dec
xchg
adc
sbb
or
mov
add
not
stos
call
and
out
or
jmp
ds
sub
das
in
push
cdq
lods
cmc
iret
sub
or
les
shr
pop
xor
movs
lods
inc
cmps
xor
inc
dec
cmc
cmps
ret
test
shl
jmp
test
imul
out
add
shl
pop
es
add
out
push
fild
cmps
xchg
clc
fs
jb
xor
cmp
inc
dec
pop
jl
pop
mov
dec
inc
xor
jmp
add
mov
mov
lds
sbb
repnz
and
outs
aad
repz
or
ret
out
xchg
xchg
aaa
retf
fwait
inc
mov
movs
pop
clc
cld
test
and
in
mov
arpl
jne
xor
mov
in
(bad)
in
mov
or
adc
cdq
aam
test
push
movs
cli
int
retf
addr16
jl
push
in
gs
xor
popf
rcr
mov
pop
data16
repz
pop
cmps
mov
mov
sub
sbb
push
imul
and
push
mov
pushf
out
mov
add
adc
cli
call
int3
out
sbb
mov
or
xor
pusha
dec
inc
dec
test
inc
cmp
jmp
dec
inc
lds
shr
icebp
les
call
popf
jg
or
or
cmovg
rol
pusha
cmps
enterw
push
nop
test
shr
cmp
inc
and
mov
mov
into
out
or
or
pop
push
inc
(bad)
mov
(bad)
xor
outs
cmp
xchg
imul
pushf
or
push
dec
es
jecxz
pop
out
sahf
loop
xor
stos
mov
daa
jae
les
sti
add
inc
and
pop
out
add
shl
dec
push
lea
adc
pop
pop
iret
or
add
mov
mov
cmp
lds
movs
add
jecxz
aad
fs
push
jecxz
cmp
xor
js
sbb
push
inc
test
pop
push
fdivr
fstp
add
mov
adc
test
packuswb
jne
das
inc
neg
popa
fld
scas
sbb
(bad)
cdq
jg
aaa
ins
fcomip
dec
outs
movs
mov
xchg
xchg
cmp
ins
sub
inc
add
fcomi
mov
into
imul
gs
fdivr
mov
adc
jg
and
mov
cmps
cwde
out
arpl
rcr
fwait
mov
mov
or
adc
call
fdivr
and
out
test
ret
cmps
inc
iret
push
ja
push
mov
sbb
in
repnz
sub
nop
jno
movs
ds
loope
add
push
dec
push
mov
cmc
movs
mov
adc
mov
push
adc
mov
adc
add
jae
std
popf
xchg
mov
jmp
add
xchg
pop
xor
call
or
jecxz
in
sbb
hlt
push
inc
cmp
adc
or
aaa
mov
(bad)
sub
push
ret
push
mov
test
aad
pop
mov
popa
loop
ror
retf
xor
push
jns
das
jecxz
inc
jmp
sub
push
cmp
ss
ret
scas
pop
std
dec
sub
fstp
mov
adc
aas
mov
out
xchg
arpl
adc
push
mov
adc
jo
add
stos
pop
pusha
add
mov
mov
pop
or
xor
jmp
jle
ret
and
popf
dec
sub
push
push
or
icebp
dec
adc
and
test
sbb
je
shl
cwde
sbb
push
in
popa
pop
sar
xor
retf
aad
push
or
mov
pop
imul
lahf
mov
int3
xor
verr
ds
pop
push
popa
xchg
jo
add
bound
xor
clc
jmp
cmps
xor
mov
push
xlat
iret
mov
pand
sub
dec
clc
sar
bound
sub
sbb
ret
add
dec
mov
movs
fdivr
shl
jecxz
leave
lea
and
popa
and
cmp
aaa
and
loope
mov
jmp
fsubr
jo
push
sbb
(bad)
jnp
int3
addr16
and
sbb
inc
daa
xlat
and
or
lock
dec
popa
mov
mov
adc
jl
pop
imul
mov
sbb
add
ficom
data16
add
cmp
or
add
mov
je
xchg
loop
ja
jp
cmps
dec
lock
jbe
popf
hlt
inc
cwde
mov
iret
or
daa
xor
dec
inc
lods
das
repz
mov
pusha
cli
adc
adc
rol
xor
inc
pop
cld
sub
cmp
mov
inc
in
mov
and
scas
mov
adc
mov
scas
adc
or
mov
out
leave
cld
mov
inc
add
push
mov
in
mov
fcmovnbe
aam
xchg
cmp
test
cmp
xchg
pop
push
or
and
aaa
dec
lahf
push
dec
icebp
iret
repnz
jo
je
fiadd
add
lods
push
movs
(bad)
jle
sbb
retf
int
aam
push
jmp
sub
xor
fidivr
jmp
mov
xchg
fsubr
or
or
fild
push
(bad)
xor
in
jecxz
inc
cmc
push
jle
pop
inc
inc
sar
xchg
dec
jmp
cdq
inc
jl
mov
addr16
fldenv
sbb
jmp
fmul
mov
out
(bad)
addr16
pop
mov
inc
xchg
xchg
hlt
xchg
jne
sbb
jg
test
inc
jb
xor
jb
ret
clc
lahf
das
popa
and
pop
sbb
mov
mov
xchg
fwait
(bad)
js
inc
pop
sbb
cmp
push
dec
or
or
pop
mov
dec
ins
xchg
inc
xor
mov
scas
imul
stos
dec
bound
icebp
mov
xor
mov
add
dec
test
or
inc
add
ss
hlt
test
xor
leave
ret
sbb
adc
push
jo
cmp
es
imul
fild
fistp
lods
hlt
fdivrp
movs
sbb
add
call
inc
and
sbb
mov
add
mov
lock
pop
jae
mov
pop
stos
dec
xor
std
les
cmp
jne
fucompp
stos
cmps
jp
sbb
cmp
ins
adc
mov
add
dec
inc
fcmovb
jle
aad
mov
lock
out
lock
dec
stos
(bad)
xlat
xchg
xor
jno
(bad)
test
jns
push
out
outs
jnp
jl
jmp
dec
shl
lock
mov
dec
fdivr
xchg
mov
fmul
cli
out
adc
gs
sbb
or
dec
xor
push
push
repz
(bad)
fsub
sti
xlat
retf
shl
ror
xor
cmp
xchg
ret
mov
jnp
or
cdq
daa
mov
(bad)
aaa
outs
js
sub
shr
pop
sbb
daa
mov
adc
(bad)
fst
jmp
dec
ror
and
ds
sbb
xor
scas
sbb
popf
fdivr
(bad)
mov
(bad)
push
or
or
ror
inc
stc
and
sbb
fisttp
sub
nop
aaa
jge
scas
and
out
inc
jbe
scas
jp
ins
dec
fidivr
addr16
loope
aas
loop
jbe
pop
jae
aaa
push
stc
stos
pop
sbb
imul
dec
xchg
pop
dec
mov
(bad)
call
jae
test
pop
jbe
xchg
xchg
pop
jmp
jnp
mov
aam
stos
add
sub
and
mov
mov
loopne
push
div
mov
fild
inc
(bad)
or
mov
iret
cmc
ins
mov
stos
or
fistp
pop
mov
xor
push
inc
nop
adc
cs
inc
daa
cmc
enter
push
mov
mov
and
pusha
or
fldcw
sti
cwde
and
ret
xchg
mov
cwde
inc
xchg
jge
mov
(bad)
mov
jbe
dec
movs
ss
jecxz
das
lock
(bad)
adc
cmps
mov
(bad)
fidiv
loopne
aad
sbb
loop
xchg
or
out
int
mul
cmc
mov
mov
js
push
sbb
mov
mov
cmp
in
fld
pop
popa
dec
xchg
cmps
xor
ds
daa
aam
ds
inc
push
(bad)
aad
cmp
and
add
daa
jge
sub
jnp
test
arpl
sub
mov
je
int3
loopne
gs
cmp
(bad)
stos
pusha
mov
mov
shl
(bad)
cs
out
clc
push
inc
inc
add
jns
aam
aaa
sti
popa
pop
jb
mov
rcr
mov
dec
aad
int
jno
jns
push
jns
xchg
sub
not
es
loopne
xchg
xlat
(bad)
stos
sub
and
inc
dec
test
mov
nop
scas
mov
loope
test
call
inc
outs
popa
jmp
xor
add
xchg
or
inc
std
cwde
cmps
dec
add
push
stos
mov
popa
xor
mov
popa
xor
push
mov
push
inc
fistp
push
xchg
pop
ret
mov
enterw
jns
in
jge
xor
jmp
jns
imul
mov
or
push
push
pop
fsubr
mov
daa
fadd
dec
add
(bad)
mov
mov
jo
cmp
(bad)
scas
xchg
pop
jecxz
pushf
cdq
push
mov
loop
aad
jb
and
and
mov
out
mov
xchg
fdivp
(bad)
sbb
jp
xchg
xchg
jmp
xchg
push
enter
idiv
pop
pop
nop
add
or
jbe
ds
mov
push
out
dec
inc
xor
pop
xor
lahf
gs
aam
xchg
xchg
jp
out
jmp
jne
fdivr
sub
push
popa
mov
cld
inc
jp
add
std
cmp
ror
sub
das
(bad)
mov
repnz
in
add
jmp
jg
and
sub
fiadd
mov
test
sti
push
(bad)
sahf
fbld
js
push
pop
pop
cmps
xchg
test
jle
add
fbld
add
mov
lgs
outs
mov
mov
sbb
xchg
mov
cmp
mov
(bad)
and
fcom
adc
sar
popf
push
(bad)
loop
mov
hlt
jecxz
cmp
mov
sbb
jmp
inc
(bad)
inc
test
or
push
nop
jae
inc
cmps
jl
je
mov
and
add
jmp
cmp
test
aam
mov
movs
enter
lds
pop
sahf
test
adc
gs
jle
retf
mov
retf
cli
or
mov
inc
jns
and
push
cmc
out
retf
sub
out
icebp
ins
pop
xlat
fwait
xchg
or
out
or
mov
pop
(bad)
loop
xlat
or
push
sbb
aam
inc
mov
fsubr
mov
mov
xchg
pop
xlat
cmp
mov
popa
stc
sub
add
data16
aaa
adc
fistp
jns
inc
push
in
jecxz
stc
push
xchg
pushf
(bad)
push
popf
inc
mov
xor
push
(bad)
cld
dec
jnp
sub
lods
cmp
cwde
(bad)
push
adc
sub
inc
ins
retf
loop
fisttp
retf
or
sub
jbe
aam
push
pop
gs
and
xor
loopne
jbe
(bad)
gs
push
and
xchg
lock
enter
and
and
sar
adc
xchg
jle
and
lods
pop
xor
sbb
mov
jp
jg
adc
ins
inc
cmp
adc
push
sub
retf
fldenv
test
jbe
xchg
call
xchg
scas
sti
fld
pushf
stc
mov
cld
jg
mov
pop
enter
sbb
xor
mov
outs
jg
mov
iret
stos
scas
retf
out
call
shr
rol
push
adc
pop
inc
enter
sbb
leave
icebp
mov
mov
(bad)
shl
jp
jbe
gs
pop
scas
push
loope
mov
inc
or
xor
push
cdq
jnp
add
cmc
mov
das
push
jecxz
dec
in
and
mov
cmc
inc
xchg
push
ss
test
jp
jno
jecxz
dec
mov
fistp
xor
mov
dec
imul
arpl
pop
add
push
(bad)
jl
int3
add
jmp
lock
cmp
cli
sub
rcr
clc
loopne
cmp
adc
or
xchg
ret
cs
int3
cmps
retf
lahf
test
fxch
ficomp
fistp
arpl
mov
clc
sub
int3
ins
jbe
test
push
mov
xchg
call
ja
sahf
ret
cdq
cdq
cmp
xchg
pop
sbb
fstp
xchg
ins
scas
mov
pushf
or
ficomp
test
sub
sar
mov
xchg
ja
xchg
pop
into
mov
push
daa
or
aam
cmps
popa
dec
sub
aad
jne
pop
xlat
push
popa
sbb
add
dec
je
les
stos
bound
cmp
xor
mov
mov
mov
xchg
mov
fldenv
lds
mov
add
(bad)
push
cld
int
into
shl
iret
adc
sub
push
pop
sar
outs
dec
loop
inc
sbb
fild
retf
(bad)
(bad)
add
pop
jno
push
cmps
div
cmp
fdivr
cdq
arpl
dec
dec
mov
mov
pop
inc
push
pop
cwde
scas
jbe
clc
mov
pop
mov
int3
pop
jp
pop
push
imul
xchg
es
ret
icebp
es
sbb
(bad)
mov
xchg
push
push
fnsetpm(287
jge
jl
enter
mov
inc
and
jnp
inc
jmp
int
and
push
sub
call
pop
pushf
dec
test
cmps
adc
jnp
pop
aad
dec
es
sub
loope
fcom
test
sub
movs
jno
inc
lea
call
movs
mov
repnz
mov
xor
sub
and
addr16
cld
mov
adc
ins
xchg
jb
idiv
fwait
out
add
lds
pop
push
test
aaa
jno
add
cdq
sbb
mov
ficom
loop
dec
lahf
sbb
mov
mov
loope
fdiv
loope
sub
mov
or
pop
pusha
rol
mov
xchg
rcr
xor
xor
icebp
mov
push
lods
adc
addr16
rcr
jge
aad
int3
pushf
daa
inc
nop
nop
xchg
ds
shl
jl
loop
push
xchg
or
imul
or
sbb
add
jle
cmp
out
mov
in
xchg
cli
outs
and
cmp
mov
bound
mov
cmc
jo
rol
iret
xchg
push
nop
push
xchg
out
jecxz
es
or
pop
stos
xchg
popa
lea
dec
add
pop
mov
lock
pop
push
inc
lahf
outs
ret
mov
pop
lahf
xor
jmp
mov
ror
bound
stc
sti
cli
cmps
inc
mov
repz
cdq
xor
jo
inc
fldcw
int
sbb
pop
inc
pop
push
xchg
test
in
jmp
cmc
stos
xor
mov
push
pop
xchg
sahf
inc
in
push
pop
adc
jle
in
ror
rcr
outs
aad
xchg
or
xchg
xchg
jecxz
mov
outs
push
sub
jl
mov
mov
mov
push
das
retf
dec
lods
mul
inc
or
(bad)
adc
sar
pop
fiadd
push
int
ds
mov
mov
add
dec
fimul
das
imul
adc
mov
xchg
stos
test
jae
shl
and
(bad)
push
push
retf
mov
and
cld
or
retf
(bad)
pop
ins
fwait
repnz
add
ja
sub
push
ins
shl
add
dec
leave
enter
lods
inc
enter
mov
jb
sub
pop
ret
lea
call
or
and
ja
dec
and
push
lock
xchg
dec
fdivr
sub
mov
adc
push
jns
shr
adc
ror
pop
cmps
xor
xchg
mov
push
xchg
add
daa
hlt
dec
adc
icebp
or
je
bound
test
sub
ror
push
mov
cmp
or
xor
mov
int
outs
stos
pop
mov
cmp
push
push
imul
mov
add
or
jmp
in
add
mov
push
mov
lahf
stc
add
jae
add
mov
(bad)
or
out
jl
gs
sbb
pusha
mov
inc
adc
lods
ds
psubw
cli
cmp
popa
pop
jecxz
popf
fs
xor
mov
xchg
(bad)
sub
lods
fstp
dec
and
dec
xchg
dec
scas
xchg
mov
in
(bad)
cmps
fdiv
psubsb
mov
pop
cmps
hlt
imul
cs
inc
movs
adc
popa
xchg
call
sbb
lods
xor
dec
sbb
pop
sbb
addr16
pop
shl
out
stos
xchg
mov
push
sbb
(bad)
adc
push
and
and
push
call
sub
mov
movs
jg
xchg
fadd
imul
das
push
(bad)
es
rol
mov
stos
popf
adc
cmp
scas
out
rcr
test
mov
pop
and
cmp
nop
cmp
mov
stos
cmps
push
pop
test
jb
lods
push
cli
lds
jecxz
sahf
into
inc
and
addr16
scas
adc
movs
pop
out
call
addr16
cs
pop
jns
or
dec
cmp
jecxz
sbb
or
cmp
js
inc
add
sub
(bad)
in
mov
les
push
jle
aas
shl
add
xchg
into
pop
sbb
iret
fild
das
shr
adc
daa
jns
xor
jno
jno
shl
loopne
add
daa
jecxz
xlat
fwait
stc
es
push
pop
rcr
jb
into
inc
mov
repnz
add
dec
into
pop
mov
jecxz
adc
xchg
aas
fdivr
cs
test
out
loop
xchg
stc
out
xchg
pop
push
imul
ds
(bad)
push
shl
imul
mov
movs
add
and
ins
sbb
hlt
addr16
xor
mov
lock
ds
sub
movs
inc
mov
sub
fild
sub
and
shl
loopne
js
xlat
daa
push
fnstcw
mov
cmps
adc
aas
or
mov
jae
dec
pop
pop
lock
xchg
jno
sub
scas
dec
dec
retf
jl
into
sti
daa
pop
gs
or
loopne
in
pop
sbb
fld
rol
pop
mul
adc
dec
out
cmps
mov
jg
popa
movs
fcom
cmc
xchg
push
jp
sbb
adc
mov
stos
jge
stos
neg
add
sbb
pop
mov
test
push
mov
cld
and
call
pop
push
jge
loop
mov
(bad)
into
test
pop
cmp
add
das
mov
xchg
(bad)
xlat
(bad)
je
cwde
repnz
stos
pop
dec
push
int3
iret
jb
mov
imul
dec
push
push
popf
pop
cmp
mov
jmp
jae
pop
xchg
sbb
mov
mov
xor
movs
mov
mov
mov
jmp
retf
xor
shl
test
sbb
test
add
rcr
adc
cmp
lods
push
test
outs
ins
das
jmp
js
in
dec
push
scas
fwait
cmp
out
out
enter
mov
sbb
push
scas
adc
dec
mov
into
cs
imul
dec
cmp
aas
out
jns
rcl
sbb
cmc
test
jne
jge
call
mov
jbe
mov
add
test
pop
sub
push
ret
das
fist
daa
ins
push
sbb
dec
sti
jmp
jbe
inc
movs
sub
out
push
push
fmul
push
add
stos
sub
and
cdq
push
outs
sub
inc
jl
movs
pop
(bad)
fisttp
imul
sub
adc
push
mov
cmc
pop
loop
xchg
mov
out
xlat
push
jae
call
or
sub
or
test
pop
xor
xchg
pop
or
(bad)
scas
in
add
jg
mov
push
cmp
and
push
aas
ror
push
stos
jg
cmp
outs
push
xchg
rcr
dec
scas
sbb
push
cmp
mov
int3
mov
mov
enter
out
lods
xlat
or
test
fiadd
(bad)
lea
adc
add
cmps
jmp
and
xor
sub
enter
jbe
pop
sub
loopne
loop
jecxz
sub
into
jae
fcomi
sub
fstp
and
cmp
fst
and
shr
mov
add
fadd
sahf
add
pop
pushf
lea
ds
adc
pop
das
mov
inc
jo
cmp
in
jno
and
push
in
push
fist
ss
mov
in
xchg
sbb
aad
or
or
fisub
loopne
xor
mov
inc
scas
adc
mov
cwde
mov
and
enter
jmp
sbb
aam
call
adc
and
gs
cmps
(bad)
mov
mov
cmp
xchg
jg
adc
cwde
lods
add
stc
jno
adc
test
sbb
and
mov
fdivr
aam
xchg
cdq
or
jb
push
mov
cmp
js
rol
lods
test
fnstsw
xor
and
mov
fild
push
mov
jne
aaa
(bad)
int3
cld
or
jle
and
adc
pusha
repz
fsubr
mov
inc
or
retf
cli
(bad)
cdq
push
inc
shl
adc
pop
mov
xchg
pop
mov
sub
or
mov
push
sub
and
xor
enter
add
(bad)
ds
je
xor
adc
enter
add
out
unpcklps
arpl
cld
push
fcomp
ja
mov
xchg
loop
lds
sub
cmp
inc
loope
dec
lea
dec
inc
and
stc
adc
and
daa
cmp
xchg
jmp
popf
(bad)
das
fld
out
(bad)
or
jbe
cmp
imul
loop
icebp
jno
push
fild
(bad)
fidiv
xchg
dec
fisubr
mov
(bad)
ins
in
popa
lods
sub
fisttp
jo
push
je
fcomp
add
mov
push
call
imul
add
ja
xchg
scas
cmp
movs
rcr
sbb
xchg
xor
push
imul
jo
int
mov
push
mov
call
dec
int3
pop
js
scas
adc
bound
inc
call
fs
adc
in
inc
ins
cli
mov
mov
in
daa
jb
test
data16
les
jmp
pop
add
ins
movs
xor
jb
data16
cli
xchg
retf
loope
js
fstp
stc
xor
fmul
sub
out
mov
and
jl
inc
push
imul
sbb
imul
inc
into
xchg
dec
and
scas
sbb
test
iret
shl
pop
ja
lods
jne
sbb
js
pop
stc
lahf
fild
add
(bad)
lods
mov
nop
xchg
adc
and
dec
xchg
inc
cli
mov
jbe
sbb
mov
and
outs
pop
jae
mov
jns
mov
mov
adc
mov
int
jae
(bad)
outs
jmp
js
rol
sub
cmp
sar
xchg
sbb
fwait
pop
mov
outs
ins
adc
ss
cmp
xchg
ds
aad
pop
jnp
pop
test
pop
cmp
scas
xchg
pop
(bad)
lods
cwde
inc
sub
jo
jecxz
int
pop
les
pop
arpl
mov
sbb
clc
mov
mov
sar
ins
mov
pop
inc
xchg
sbb
jmp
retf
adc
xchg
jnp
gs
pop
bnd
das
cs
fld
adc
sub
rcr
add
add
and
cs
jb
shl
cli
mov
stos
data16
jb
dec
mov
mov
outs
mov
pop
jecxz
out
sub
lahf
dec
cld
fstp
cmp
out
ins
sub
out
jp
mov
bound
out
ins
mov
cmp
cs
jmp
and
popa
scas
mov
popf
adc
mov
xchg
mov
(bad)
lods
(bad)
cld
or
pusha
test
jecxz
movs
(bad)
mov
test
maxps
push
rcl
lock
mov
cmp
sahf
push
jle
adc
(bad)
xor
jecxz
ss
shl
call
iret
sbb
jg
xchg
repnz
aaa
cmc
call
xchg
daa
lock
sahf
aad
mov
or
outs
pop
and
xchg
push
mov
sub
jae
fmul
jmp
ja
add
sbb
mov
fistp
mov
in
and
cmp
pop
aad
out
jmp
push
aam
pop
xlat
or
call
stos
xchg
push
sar
mov
ins
jae
push
inc
int
adc
daa
mov
inc
pop
mov
lods
lock
sbb
std
ins
mov
inc
cdq
xchg
aam
add
mov
pop
icebp
loope
jne
inc
std
dec
dec
mov
mov
(bad)
push
daa
iret
call
jle
xor
mov
add
pop
out
push
jae
push
out
mov
lea
adc
push
ss
cmps
bound
cdq
and
mov
jmp
jp
inc
sahf
sub
mov
sahf
xor
and
mov
jmp
enter
push
fidivr
(bad)
adc
adc
inc
out
mov
mov
daa
stos
adc
pushf
push
pop
dec
push
ja
mov
add
addr16
int
fldenv
push
stos
int3
jmp
sub
repnz
cmps
repnz
jg
ror
stos
xchg
test
sbb
clc
fst
and
cmc
sub
push
sub
mov
in
push
cwde
or
and
dec
stc
stos
dec
(bad)
stc
aam
lds
xchg
imul
fwait
xchg
das
adc
push
xchg
sbb
push
xor
into
fs
mov
mov
inc
and
xchg
add
sub
(bad)
cmp
js
xchg
push
xor
mov
jne
push
fucomp
icebp
cmp
test
out
jne
or
scas
mov
cmp
xor
fwait
xchg
or
bnd
popf
loope
mov
out
cmp
xchg
ds
xchg
push
mov
mov
(bad)
push
(bad)
or
dec
and
inc
push
xchg
nop
rcl
cli
test
xor
fwait
sub
xor
push
dec
sbb
fild
cmp
fmul
push
add
imul
std
jp
jl
inc
ja
ds
push
pop
mov
faddp
in
inc
sbb
or
mov
cmp
stc
repnz
lds
fs
sub
xor
sub
fcmovnu
repnz
dec
movs
pop
cwde
mov
(bad)
cmps
in
pop
lahf
xor
jbe
mov
bound
and
sbb
fiadd
jmp
test
je
mul
mov
inc
push
(bad)
repz
loope
fistp
push
jnp
and
(bad)
(bad)
mov
fcom
or
(bad)
pop
xchg
retf
hlt
add
dec
out
aad
int3
ins
out
xlat
fisttp
cmp
mov
jnp
psllq
call
xchg
jle
jge
push
pop
retf
pop
sbb
fsubr
inc
rol
cmc
enter
push
jp
jae
test
sub
jle
mov
fsubr
dec
test
outs
sti
push
sub
shl
jp
add
xchg
pop
jns
sbb
sbb
aaa
mov
sar
out
pop
fsub
fistp
leave
std
lds
or
fidiv
test
pop
repnz
sti
int3
and
inc
mov
(bad)
sbb
fldenv
das
in
test
and
mov
mov
into
add
addr16
lods
sbb
stos
and
fs
movs
push
xchg
cmp
mov
sbb
jle
idiv
inc
and
clc
cmp
fs
sti
pop
jae
xchg
sar
out
popa
ret
scas
loopne
lock
loop
mov
pop
inc
cmp
inc
or
dec
test
outs
retf
adc
ror
stos
fdiv
cvtdq2ps
cmp
pop
jmp
jbe
je
jo
cmp
fcmovbe
fisttp
aaa
ror
clc
jp
fs
cmp
movs
lea
outs
jmp
fisttp
mov
enter
popa
dec
jb
mov
push
mov
pusha
jmp
shl
push
push
xor
outs
adc
in
jge
std
mov
jne
add
jnp
mov
shr
mov
mov
mov
stos
jmp
call
inc
pushf
or
mov
push
push
cld
test
cmp
mov
fs
add
inc
ins
loop
mov
inc
mov
and
btr
fstp
mov
fwait
int3
and
xor
and
call
test
data16
daa
test
or
mov
je
loop
popf
and
mov
lahf
mov
dec
xor
mov
outs
ins
iret
stc
xchg
test
repnz
fst
outs
pop
je
xor
jno
iret
inc
cmp
mov
push
pop
enter
cmp
iret
add
bound
or
cwde
call
jmp
lea
mov
xchg
ret
add
mov
clc
push
iret
dec
inc
sbb
fist
ja
les
lods
cmp
cmp
test
mov
mov
(bad)
xlat
push
jnp
movs
aad
pusha
retf
(bad)
mov
push
pop
push
add
add
push
pop
dec
dec
cmp
cmps
xchg
adc
popa
cld
repnz
inc
movs
cli
pop
fild
sbb
push
outs
mov
ret
je
pop
xor
scas
rcl
mov
fcomp
mov
cmp
addr16
and
xor
inc
ret
pop
mov
push
int3
loop
addr16
addr16
xor
into
push
sbb
jno
sbb
lods
mov
cmp
(bad)
pop
and
adc
xor
xchg
adc
dec
pop
in
add
push
cld
push
das
(bad)
sbb
xchg
xchg
adc
(bad)
sub
jno
inc
mov
fbld
(bad)
xor
call
in
hlt
cmp
cmps
cmp
mov
jbe
add
sti
cmp
iret
or
xor
inc
cli
push
sub
jo
dec
scas
push
or
pop
test
jl
cmp
add
popa
jnp
add
mov
ds
jge
bound
push
dec
or
(bad)
sbb
mov
pusha
arpl
sti
xchg
sbb
(bad)
mul
lock
test
fild
and
sbb
add
movs
push
xor
jge
jmp
ins
out
push
les
das
xchg
or
and
push
inc
dec
xchg
ins
mov
shl
inc
jb
xchg
in
int3
movs
adc
rol
dec
xchg
mov
dec
inc
pop
loope
fistp
mov
mov
mov
jae
inc
test
jmp
xchg
js
mov
stos
mov
pop
jp
dec
leave
out
dec
dec
dec
gs
(bad)
arpl
mov
push
dec
add
pop
lods
xchg
xor
mov
out
retf
outs
into
jb
daa
dec
movs
addr16
gs
(bad)
out
jmp
les
pop
rol
mov
dec
test
imul
imul
jns
push
xchg
cmp
mov
repnz
xlat
push
push
sub
xor
xor
(bad)
test
push
fdivr
int
push
ret
mov
popa
imul
sbb
int3
pop
js
es
cli
or
fist
jae
adc
arpl
fisub
movs
test
fdiv
dec
pop
test
dec
inc
push
scas
sub
sub
mov
addr16
add
fwait
call
fwait
push
push
sbb
xchg
ret
adc
ds
sti
adc
inc
icebp
and
dec
sub
cvttps2pi
iret
into
loope
mov
xchg
ss
aaa
pop
pop
jecxz
push
cmc
js
mov
or
fs
jmp
repz
das
mov
cmp
scas
inc
mov
mov
loopne
inc
iret
push
jp
pop
stos
arpl
sub
sahf
sbb
mov
mov
mov
aas
pop
inc
or
inc
add
leave
icebp
adc
test
pmaddwd
fistp
sub
sti
add
nop
imul
fidivr
fxch
pop
mov
(bad)
push
adc
adc
xor
fmul
xchg
sbb
fs
mov
xor
arpl
jmp
jle
mov
fsubr
mov
in
xlat
leave
fs
arpl
add
add
xchg
cli
jo
aaa
add
aas
js
push
adc
xchg
mov
add
mov
push
mov
cld
mov
bound
add
jp
es
or
sbb
nop
(bad)
pop
call
stc
mov
loop
adc
jl
xor
sbb
sbb
push
sar
inc
test
test
dec
repnz
mov
rcl
jle
sar
adc
sub
sbb
mov
lods
data16
xor
(bad)
stos
mov
adc
push
fistp
inc
sub
icebp
cmps
test
mov
aad
add
xor
jnp
xor
sub
js
(bad)
out
mov
xchg
retf
sub
sub
sbb
and
sti
dec
out
test
xor
adc
xor
inc
xchg
add
test
daa
push
retf
pop
cmp
push
cwde
add
mov
std
jecxz
push
inc
ja
mov
fbld
fsubr
in
leave
repnz
mov
(bad)
in
in
sahf
sti
xchg
sbb
mov
pop
push
popf
add
add
(bad)
movs
mov
sbb
ja
in
sbb
pop
or
mov
ins
and
or
jl
and
pop
ror
jl
xchg
mov
sub
mov
int
push
ret
add
test
and
xchg
dec
mov
imul
jle
xchg
ret
mov
in
mov
call
(bad)
mov
sub
int3
jb
xor
xchg
div
(bad)
xor
mov
inc
push
or
xor
jns
pusha
pop
mov
ror
ret
cmp
sbb
ss
js
mov
cs
call
les
add
test
cdq
movs
iret
pop
rcl
sub
jmp
pop
cs
cs
call
jae
sub
ss
shl
jg
jg
repnz
dec
fcomp
mov
dec
shr
pop
daa
(bad)
popf
mov
xchg
add
rol
mov
mov
scas
xchg
adc
neg
inc
xor
jg
adc
cwde
aaa
idiv
sbb
mov
jns
movs
sbb
hlt
add
pop
add
rcr
mov
out
adc
mov
ins
ja
enter
out
fdivp
inc
popf
adc
sub
jl
cdq
and
ins
stos
repz
(bad)
pushf
(bad)
sbb
xchg
xor
xchg
mov
test
jg
mov
and
push
mov
aaa
add
test
pop
(bad)
or
test
push
xor
(bad)
fld
loop
scas
or
retf
adc
cld
jns
jecxz
push
scas
retf
rcl
ret
movs
xor
cld
sbb
ret
cmp
ret
jmp
stos
call
aad
cld
mov
xchg
push
add
inc
push
push
cs
movs
or
daa
dec
sub
call
mov
mov
std
adc
and
das
cmp
fsubr
push
adc
pop
popf
mov
jno
dec
bound
adc
inc
ret
fmul
test
inc
pop
call
jbe
xchg
mov
lock
sub
and
lods
jbe
and
xchg
mov
(bad)
push
push
or
les
mov
ret
leave
out
mov
test
addr16
pop
add
mov
cs
ins
xor
mov
ficomp
dec
inc
adc
iret
xchg
cdq
nop
dec
mov
rcr
ins
push
test
repnz
ins
xchg
mov
mov
or
fnstsw
fmul
pop
adc
lods
jp
xchg
add
out
jge
es
cmp
mov
push
jns
mov
dec
xchg
cmc
repnz
xor
push
fwait
add
std
jo
or
dec
test
test
pusha
out
sub
dec
xchg
mov
out
es
cmp
fnsave
mov
jae
xor
test
retf
sar
in
pop
lods
push
js
rcr
xchg
mov
call
xchg
ja
and
mov
hlt
ret
js
pop
aad
jp
sub
xchg
mov
dec
popa
mov
icebp
ror
xchg
xchg
inc
jnp
jnp
push
sahf
ins
jns
cmp
cmp
dec
or
cmc
call
add
mov
(bad)
test
sti
mov
retf
push
sbb
jno
int
rcr
mov
push
ret
dec
jns
push
aad
mov
mov
push
movs
push
inc
out
xlat
retf
fidivr
es
xor
mov
sub
pop
not
stc
fmul
inc
jmp
test
cs
xchg
add
jmp
lahf
hlt
pusha
add
xchg
push
retf
popa
adc
aaa
das
and
pop
pop
sub
sahf
push
mov
xchg
sub
mov
ss
and
ror
push
daa
mov
adc
test
scas
cmps
sub
cwde
pop
jecxz
mov
shl
push
popa
imul
test
in
cmp
outs
dec
jb
sbb
les
sbb
mov
ds
push
inc
xor
(bad)
mov
ins
idiv
mov
pop
mov
dec
or
add
or
imul
mov
aad
mov
sbb
lahf
adc
add
xor
std
add
outs
cwde
lahf
lock
pop
mov
fstp
xchg
data16
xchg
retf
hlt
xchg
icebp
sbb
pop
psadbw
adc
sbb
out
fisub
les
adc
and
into
dec
shl
dec
dec
add
lds
push
std
sti
fdiv
sub
jnp
jno
and
mov
(bad)
cld
push
inc
ds
into
add
(bad)
out
adc
fild
mov
sbb
xor
ror
mov
mov
repz
repnz
pushf
xchg
pop
in
ret
lods
inc
jo
mov
jp
dec
ss
and
sub
js
xor
xor
sahf
stc
in
aad
xchg
mov
jl
repnz
imul
ficomp
hlt
repz
nop
fcomp
xor
sub
movs
sub
inc
xchg
es
cmp
mov
fwait
inc
and
pop
jmp
shl
xor
(bad)
test
pushf
sbb
ficom
in
lds
ret
sub
lock
sar
ret
mov
add
lock
inc
lock
jge
cdq
stos
imul
fmul
xchg
sbb
and
add
aaa
mov
push
cs
cli
repnz
push
add
sub
or
out
not
popf
jmp
push
fidiv
dec
add
fld
or
dec
imul
push
adc
outs
pushf
mov
sbb
movq
dec
jns
(bad)
pop
and
(bad)
mov
jns
int
out
lock
dec
jge
clc
repz
mov
ss
pop
adc
xor
sbb
test
aaa
imul
sar
fwait
dec
test
or
cs
aas
fisttp
xor
xor
add
pop
ds
xor
xor
dec
les
or
icebp
cmps
xor
inc
lock
jns
sar
call
xor
or
stos
(bad)
loop
stos
mov
dec
mov
cmc
mov
out
mov
bound
sbb
pop
add
xor
je
inc
lods
pop
fbld
sub
inc
sub
jp
aam
or
es
and
cmp
pop
aam
cmp
into
mov
ins
adc
push
xor
xchg
mov
outs
sar
or
cmps
ret
nop
popa
sub
add
shr
lahf
cmp
add
int3
into
push
xchg
mov
adc
or
cmp
iret
dec
(bad)
std
mov
add
ins
cli
or
lds
push
xchg
and
cmp
mov
mov
xor
mov
jb
fisub
ffreep
cdq
(bad)
stos
dec
scas
fimul
mov
in
mov
mov
mov
mov
retf
jns
inc
jmp
adc
lock
mov
inc
and
pop
fist
or
test
fcom
repz
pop
lock
cmp
test
mov
inc
push
xor
sti
lods
pop
stos
cdq
repz
in
and
fadd
cmc
mov
fst
xor
pop
ja
dec
into
mov
cld
push
test
sub
mov
pop
call
mov
mov
hlt
out
cmp
pop
push
push
daa
(bad)
je
ret
mov
mov
call
inc
test
jb
mov
sub
or
int3
inc
dec
test
sub
stos
jbe
push
test
inc
adc
xor
xor
mov
and
pop
and
jno
jo
adc
push
fst
dec
cli
test
cdq
jge
mov
pop
xchg
xchg
stos
inc
std
fcmove
pop
mov
ds
or
and
push
stos
cmp
test
pop
add
cmp
imul
and
adc
adc
or
daa
inc
and
jmp
inc
mov
dec
stc
push
and
mov
ror
into
mov
(bad)
pop
jmp
add
es
sbb
imul
(bad)
scas
inc
data16
cs
mov
mov
sbb
jnp
sub
push
and
hlt
std
jns
sbb
lods
(bad)
fadd
push
js
push
rcr
sbb
push
sub
add
rcl
outs
xchg
mov
or
loop
cld
movs
ss
push
sub
pop
out
paddq
or
ja
sti
add
scas
scas
loop
inc
pop
mov
or
pop
rep
(bad)
leave
jno
push
xchg
inc
lock
push
rcr
inc
adc
cmps
dec
mov
cld
fild
popf
jle
pushf
test
mov
in
shl
cdq
add
xor
aam
test
pop
cmp
sub
inc
pop
loop
xchg
cmp
shl
fiadd
addr16
or
push
inc
sub
sbb
xchg
fist
pop
inc
and
out
jnp
cmp
pop
pop
pop
stos
pop
out
cmp
daa
adc
call
jno
shr
jns
sub
test
push
imul
mov
arpl
mov
lock
push
or
or
jmp
mov
and
cmp
inc
jge
sub
inc
cmps
repnz
jge
sbb
bound
mov
inc
jbe
data16
mov
cmps
fimul
xrelease
movs
cld
inc
out
inc
pop
and
mul
fidiv
jne
jo
lods
inc
mov
push
push
xchg
into
cs
jb
sub
mov
mov
mov
in
outs
mov
add
or
jae
loopne
mov
sbb
sub
mov
push
jae
aas
ret
jge
mov
lods
mov
jge
lods
sub
out
and
cmp
pop
xchg
aaa
cmp
popa
mov
les
pop
mov
xlat
adc
iret
pop
xchg
jno
xor
stc
(bad)
sbb
pop
in
mov
retf
out
(bad)
sub
ss
rcl
mul
mov
ret
sbb
inc
mov
pop
shl
dec
push
or
xchg
outs
push
push
push
mov
fcom
ss
jno
pop
cwde
xchg
imul
xor
popa
cmps
aad
sbb
adc
je
sub
and
jbe
mov
mov
cdq
cmps
ins
push
int
pushf
sbb
push
pop
cld
repz
mov
or
lds
cld
jo
(bad)
push
mov
ret
jnp
test
dec
(bad)
mov
mov
mov
pop
inc
lods
inc
xchg
aaa
pop
inc
movs
fs
jge
sar
(bad)
fild
jb
inc
cli
dec
push
lds
pop
jb
pusha
retf
lock
retf
and
jmp
pop
lods
leave
jecxz
retf
dec
cmp
sbb
add
sub
jno
and
sub
aas
xchg
leave
mov
(bad)
adc
mov
and
push
stos
mov
mov
sub
mov
mov
mov
repnz
jmp
out
dec
mov
jmp
jmp
out
dec
outs
in
mov
movs
sti
ds
inc
out
jle
(bad)
mov
xchg
lock
sbb
cmp
(bad)
shr
clc
dec
into
mov
lock
push
scas
jmp
stos
clc
pop
inc
sub
add
adc
or
cld
outs
shl
xor
push
mov
arpl
pop
repnz
call
mov
rcr
(bad)
xchg
and
add
loop
data16
jno
clc
dec
test
add
je
leave
mov
push
cwde
aas
push
xor
cmp
cld
inc
int3
popf
jmp
add
mov
test
sahf
bound
(bad)
sub
cmp
imul
adc
in
pusha
movs
cmp
mov
inc
inc
test
mov
mov
jg
add
or
xchg
out
aaa
adc
sub
(bad)
sub
and
(bad)
and
mov
push
lds
aad
mov
pop
adc
aas
sub
(bad)
js
mov
cdq
sub
jbe
xor
add
pop
adc
adc
dec
cwde
inc
sar
aam
clc
daa
cmp
es
scas
dec
jmp
stos
jbe
lea
mov
and
mov
mov
es
inc
cmovp
jmp
aaa
xor
sbb
mov
stc
pop
fs
sbb
xchg
sub
jle
adc
lods
cmps
xchg
and
mov
pop
mov
or
cmc
in
pop
mov
push
adc
jae
repz
stos
inc
inc
or
xor
fisttp
xor
pusha
ret
dec
pop
add
stc
ror
lea
outs
sbb
pop
mov
add
fadd
mov
jg
movs
fcomp
fs
pusha
(bad)
fadd
lds
adc
pop
and
loopne
cmp
sahf
imul
sub
or
jnp
or
ret
fsub
loop
and
call
cmps
jo
pop
sub
lods
xchg
call
mov
jns
inc
sub
mov
push
pusha
(bad)
inc
mov
fdivr
push
mov
jg
dec
out
mov
jb
mov
mov
fwait
repnz
out
or
arpl
mov
lahf
mov
mov
push
cdq
push
retf
ds
mov
std
std
adc
inc
push
add
cmp
call
adc
push
inc
mov
add
fimul
mov
mov
out
inc
mov
push
pusha
inc
or
outs
ror
std
xchg
(bad)
pushf
mov
add
test
into
push
mov
jno
lea
fcomp
loope
xor
push
xchg
xchg
push
lods
fadd
arpl
sti
mov
mov
mov
bound
pop
nop
ret
mov
mov
mov
mov
push
mov
xor
sub
gs
pop
xlat
loop
jle
jmp
xor
clc
jno
pop
pop
jl
sub
es
cmp
fnstenv
mov
mov
and
lea
pop
mov
sar
xor
cmc
mov
pop
lahf
pop
jmp
lock
mov
ret
shl
(bad)
mov
addr16
jae
mov
push
out
mov
dec
inc
jp
call
and
cdq
mov
pop
ss
lea
xchg
mov
pop
cmps
add
dec
dec
dec
test
jmp
push
outs
push
sahf
xor
mov
jge
jnp
jle
adc
cmp
mov
pusha
cmp
dec
xor
fwait
or
dec
or
mov
jne
pop
iret
fs
shr
loopne
cmps
js
scas
jmp
ficomp
ds
popf
out
mov
jge
mov
jmp
inc
pop
sbb
mov
loopne
ss
mov
hlt
stos
outs
js
(bad)
ret
cmp
call
xchg
sbb
fcom
scas
cmp
fwait
ja
ja
leave
aam
ja
fistp
add
adc
sub
test
dec
scas
adc
push
pop
popf
ret
mov
les
(bad)
pop
daa
pop
xchg
cmc
mov
stos
aas
pop
jmp
and
xor
xor
dec
clc
jns
sti
or
jae
adc
imul
fdivrp
jae
mov
enter
test
add
xor
lods
and
inc
or
das
mov
lds
faddp
stc
imul
hlt
ins
jae
popa
repnz
dec
data16
dec
or
std
test
sahf
ss
ins
mov
inc
lds
fs
mov
scas
sub
jb
sar
out
lea
jns
clc
lea
xor
dec
jmp
test
stos
and
fist
jb
jno
push
sub
inc
mov
xor
adc
adc
push
xlat
fisub
mov
and
cmp
mov
push
repz
dec
inc
mov
in
adc
jp
gs
mov
arpl
add
mov
shr
pop
sbb
mov
push
or
push
jmp
retfw
cmps
hlt
or
sbb
push
pushw
(bad)
nop
cli
cld
psrlw
cli
mov
shr
xor
dec
inc
sub
ret
cmp
jecxz
xor
popf
imul
or
xor
out
out
mov
xlat
jns
int
mov
test
ror
xchg
fadd
ins
cmp
fisub
mov
and
test
adc
out
mov
mov
(bad)
repnz
ss
test
pop
push
pop
and
dec
in
push
popa
inc
sti
mov
mov
cdq
add
int3
(bad)
sub
pop
jae
not
ret
je
push
test
rcl
cwde
test
jnp
mov
pop
iret
cmp
stc
mov
xchg
pop
test
into
lock
rcl
data16
and
sub
sub
stc
outs
xchg
out
push
jecxz
ss
inc
icebp
dec
pushf
lahf
mov
mov
mov
mov
mov
mov
push
mov
mov
pop
and
add
loope
sbb
mov
sbb
add
add
xchg
and
scas
xchg
cli
fiadd
test
and
jge
inc
shl
int
ins
(bad)
leave
stc
hlt
pop
mov
(bad)
scas
add
mov
xchg
push
xchg
out
test
ret
cdq
inc
loop
mov
mov
xchg
(bad)
fwait
mov
pop
imul
shr
push
cmp
push
dec
jae
cmp
sub
enter
jne
pop
dec
data16
mov
jne
xchg
loopne
mov
dec
cs
mov
sbb
cmp
scas
and
cdq
arpl
pop
add
test
sbb
mov
pop
cmps
or
mov
xchg
in
fwait
jl
pop
push
mov
mov
test
inc
mov
push
rcr
add
xchg
xor
bound
loopne
cmps
cmp
xchg
out
test
in
int3
ficom
dec
fiadd
adc
jp
dec
popf
sub
es
es
cmp
jecxz
pushf
lods
in
aam
cmc
cmp
mov
mov
sub
push
sbb
retf
out
repz
xor
div
ret
sbb
mov
ja
push
aad
add
aad
sbb
xlat
push
lock
jle
je
mov
sub
dec
add
addr16
imul
push
mov
(bad)
hlt
pop
test
mov
mov
adc
ss
bound
ja
mov
xor
in
sub
fcomi
pop
inc
repz
mov
fidiv
inc
xchg
cmp
ja
repz
xchg
lea
into
dec
inc
xor
sahf
jge
push
push
adc
loopne
mov
pop
xor
adc
out
xor
aaa
pop
push
movs
movs
rcl
jle
mov
cmps
sbb
lods
in
inc
push
bound
push
test
loope
pop
jns
dec
mov
popf
mov
fstp
mov
es
cmpxchg
mov
xchg
cmp
xchg
inc
dec
xchg
lods
cmp
ins
addr16
inc
out
aas
iret
sbb
int3
lods
in
push
cmps
aam
test
mov
add
pop
ds
inc
jmp
repz
enter
ret
adc
retf
mov
pusha
sub
scas
mov
out
pop
fldenv
jmp
mov
pop
cmc
jl
in
sbb
jmp
test
mov
and
repz
cmp
inc
imul
push
sbb
sbb
shr
xchg
arpl
push
push
lds
jecxz
sub
mov
add
inc
sub
and
push
mov
andnps
outs
ror
mov
inc
pop
outs
fmul
out
mov
lods
jl
xchg
push
ins
gs
hlt
mov
ret
(bad)
and
pop
sub
dec
(bad)
(bad)
mov
push
cmc
and
xor
es
xor
movs
mov
in
cmp
fidiv
stos
mov
cmp
pop
xor
cwde
xchg
cdq
pop
mov
sbb
or
jle
(bad)
int
icebp
xchg
fisttp
retf
out
lea
scas
dec
push
or
pop
mov
in
cmp
xor
pop
fwait
pop
mov
fiadd
or
mov
stc
enter
dec
jo
mov
fdiv
xchg
mov
lods
jp
lock
jg
xchg
mov
cs
fdivr
mov
out
xor
push
xchg
cld
fwait
dec
and
bound
xrelease
test
test
in
sbb
dec
adc
cmp
pop
(bad)
sbb
repnz
arpl
sti
push
out
fwait
out
jecxz
and
xchg
sbb
popa
sub
add
add
jecxz
sub
dec
test
and
dec
leave
lahf
jmp
and
xor
dec
push
(bad)
push
lods
aam
cwde
xchg
mov
pop
push
je
int3
or
cmp
xchg
push
adc
cs
adc
xlat
rcl
js
and
fnstcw
cmp
mov
ja
inc
jae
push
mov
mov
leave
inc
rol
cld
je
sbb
or
dec
es
jno
(bad)
imul
call
and
movs
and
mov
mov
adc
ds
aaa
jae
sub
xchg
mov
mov
inc
iret
repnz
pop
(bad)
(bad)
enter
pop
out
out
pop
sbb
call
pop
pop
(bad)
shl
outs
mov
fwait
pop
loope
nop
cli
mov
pop
cld
ins
jmp
sub
in
sbb
lea
adc
mov
mov
sub
adc
and
inc
jmp
dec
(bad)
adc
lods
cmp
pop
aad
sub
and
mov
adc
mul
mov
xor
cli
test
jnp
cmp
sub
mov
mov
adc
jle
pushf
xchg
je
mov
adc
call
mov
dec
cmp
icebp
bound
mov
xchg
loop
cmps
sahf
out
int3
ror
stos
sub
(bad)
push
inc
or
pop
cwde
(bad)
(bad)
mov
(bad)
sub
jno
inc
jecxz
sub
inc
int3
add
push
das
sub
out
pop
lock
jg
push
mov
push
xor
retf
sbb
add
and
test
pop
inc
stos
xchg
or
cwde
push
mov
(bad)
das
aam
cmps
ret
inc
ret
inc
test
or
jne
push
adc
dec
sahf
and
call
cmp
jne
mov
push
push
or
jmp
sub
inc
sti
sbb
pop
add
xchg
adc
pop
mov
xchg
inc
fnstenv
and
mov
sub
js
xor
test
jno
pop
stos
mov
mov
push
adc
cwde
xchg
mov
(bad)
cmps
test
hlt
jne
cdq
shl
mov
jb
popa
adc
imul
adc
mov
arpl
push
imul
popf
inc
dec
in
mul
mov
push
and
and
test
push
ret
dec
or
fcmovu
xchg
mov
jo
(bad)
mov
out
stos
sub
cmc
hlt
cld
jle
mov
mov
jne
sub
inc
cmc
call
icebp
xor
clc
pop
or
mov
in
lahf
pop
fadd
push
add
loop
fst
test
pusha
adc
fistp
mov
retf
xor
ss
xchg
popa
out
mov
xor
out
jmp
xchg
dec
out
movs
mov
(bad)
jl
arpl
cmp
aad
and
popa
aam
hlt
or
retf
inc
cmp
neg
out
mov
pop
jmp
lahf
popa
jae
add
push
add
scas
movs
sub
or
push
outs
in
scas
jbe
fidiv
(bad)
and
mov
mov
or
retf
mov
in
and
fadd
mov
jmp
xchg
adc
pop
jmp
jp
jle
xchg
cmc
aam
xchg
jne
jp
mov
mov
pop
xchg
jae
add
xor
nop
mov
mov
pop
push
das
push
push
subps
push
pusha
ror
aas
in
push
sbb
pop
xchg
xchg
push
ss
into
stos
add
loop
pop
in
and
cmps
mov
aas
out
and
jb
pop
push
clc
mov
fsub
sti
shl
mov
xor
fidivr
push
arpl
cmps
dec
mov
push
arpl
adc
(bad)
jmp
pop
mov
dec
and
mov
lock
push
loope
dec
pop
xchg
push
addr16
lea
je
and
pop
add
push
out
ret
icebp
sahf
mov
cmc
xchg
pop
mov
in
cmp
aad
add
jmp
mov
dec
mov
cdq
add
out
or
(bad)
rcl
call
xor
je
rcl
xchg
jg
fist
cdq
test
repz
lods
rol
inc
push
inc
mov
inc
dec
jne
pushf
pop
adc
or
out
add
test
imul
mov
movs
bound
or
test
xor
ja
imul
je
imul
test
movs
(bad)
scas
scas
(bad)
std
icebp
popa
jmp
add
inc
call
movs
mov
pop
dec
movs
ret
dec
push
loope
call
cmps
cmp
test
in
ret
iret
add
pop
mov
jb
add
jnp
pop
xchg
sub
adc
dec
dec
not
loop
and
mov
sbb
mov
xor
mov
retf
mov
test
mov
mov
lods
sti
push
repz
push
mov
or
fwait
inc
add
cmp
mov
inc
call
sub
movs
jae
cli
leave
mov
(bad)
mov
fadd
sub
xchg
mov
xor
fbld
iret
mov
loopne
mov
jae
inc
xchg
aas
test
mov
dec
daa
xor
loope
fcomp
pop
hlt
mov
imul
shl
enter
jo
adc
pop
xor
out
rcr
cmp
rol
dec
fwait
in
mov
jecxz
jbe
mov
jb
daa
add
jp
mov
lods
add
daa
xchg
mov
xor
sub
mov
outs
out
and
fs
cwde
xor
loop
ds
sub
out
sbb
test
call
xchg
push
setae
sbb
test
dec
xchg
dec
adc
adc
ret
jecxz
adc
js
mov
fs
or
inc
out
sub
adc
dec
mov
ins
jmp
out
std
pop
aaa
push
pop
out
mov
push
mov
xchg
bound
dec
bnd
dec
jb
jb
mov
out
shl
jl
rcr
(bad)
icebp
clc
lds
xor
(bad)
imul
movs
mov
mov
adc
pop
fchs
add
fbstp
add
adc
ss
inc
data16
or
add
mov
adc
outs
pop
mov
push
stc
leave
jge
cmp
push
retf
out
dec
mov
pop
push
mov
es
jns
xor
ret
sbb
ror
pop
dec
mov
jnp
push
(bad)
add
and
cmp
mov
je
cmp
jge
sbb
or
push
push
outs
mov
shr
jnp
sbb
mov
pop
loope
push
(bad)
aaa
daa
movups
push
push
push
sub
add
jae
mov
and
sbb
pop
xlat
lahf
mov
pusha
js
mov
or
ins
or
(bad)
fist
mov
dec
stos
add
jnp
sbb
js
sbb
arpl
test
jle
jge
cmp
aam
add
in
mov
in
shr
cmp
push
test
icebp
sub
hlt
cld
and
iret
cdq
sub
call
shl
mov
(bad)
ror
shr
mov
adc
pop
daa
pop
add
retf
scas
call
xor
pop
push
js
out
mov
sbb
mov
dec
inc
hlt
cmp
jl
es
push
xchg
xchg
jb
mov
mov
push
sub
dec
mov
ret
cdq
inc
jmp
cli
and
and
jecxz
(bad)
cmp
ja
ss
sar
outs
cwde
mov
(bad)
enter
fist
ret
gs
inc
lahf
adc
inc
aaa
sbb
nop
push
repz
jmp
sbb
cmc
push
push
push
arpl
pop
push
cmp
add
cld
imul
adc
dec
ins
add
aas
sub
jmp
pop
mov
xor
(bad)
cmps
rcr
pop
out
push
fcomp
pushf
ret
add
xchg
jne
mov
call
inc
out
or
mov
adc
sub
cmp
fwait
inc
lods
push
cmp
mov
out
addr16
pop
les
ja
cdq
fldcw
jmp
mov
adc
mov
add
pusha
sar
lahf
fadd
faddp
xchg
(bad)
xor
jl
push
in
sub
lds
sub
sbb
inc
out
rcl
test
cld
int3
je
cmp
ins
sbb
or
pop
and
ds
das
mov
imul
mov
je
nop
loope
nop
dec
cs
repnz
lahf
lods
imul
pop
sbb
aam
fild
out
cwde
add
mov
mov
hlt
rcl
pop
js
dec
fisubr
dec
imul
in
pop
add
repnz
cmc
jge
loop
(bad)
pop
in
inc
mov
in
mov
call
aas
xor
mov
xor
sar
mov
or
or
scas
pop
adc
das
push
jbe
pop
adc
mov
(bad)
cld
pop
add
aaa
xchg
inc
mov
pop
sbb
out
push
inc
and
push
ja
jno
mov
xlat
mov
add
inc
adc
imul
lods
fnstsw
push
dec
movs
ds
and
push
sti
cld
mov
dec
cmc
mov
inc
ror
sbb
je
cli
cdq
mov
(bad)
push
call
in
shl
push
mov
push
test
cmp
mov
(bad)
popf
jg
cs
sbb
sub
jne
test
xor
sub
sub
repnz
leave
add
call
pushf
xchg
addr16
add
push
out
jmp
stos
jp
pop
ins
sar
dec
push
call
imul
cwde
mov
mov
inc
mov
repz
movs
(bad)
ins
push
adc
add
jg
in
or
pop
sub
(bad)
in
packssdw
mov
push
pop
add
stos
pop
in
and
adc
jecxz
lods
nop
or
idiv
xor
sbb
out
cmp
xchg
jns
jecxz
jns
mov
xchg
cs
aam
int
mov
sbb
mov
enter
push
inc
test
push
mov
mov
(bad)
sub
mov
push
test
cmp
inc
nop
jno
inc
jmp
sub
in
mov
xchg
jnp
xchg
addr16
sar
mov
iret
mov
or
bnd
adc
aaa
xchg
jnp
sub
adc
pop
popf
pop
add
or
adc
scas
test
mov
test
dec
(bad)
imul
rol
sub
cmp
scas
call
out
inc
shl
popa
mov
xor
and
in
ror
or
adc
sub
out
nop
cmp
ret
das
push
jmp
(bad)
dec
cwde
xchg
sti
sbb
into
enter
(bad)
iret
fs
jne
imul
push
(bad)
neg
or
imul
dec
dec
icebp
in
jbe
jg
(bad)
adc
mov
rcl
je
leave
mov
lahf
call
aam
enter
adc
shr
mov
xchg
mov
out
fwait
and
inc
mov
movs
retf
cwde
or
nop
psrad
outs
outs
(bad)
jmp
mov
ins
mov
(bad)
es
leave
pop
test
mov
push
ins
rcl
adc
push
call
lea
jmp
dec
scas
fistp
add
sub
shl
xchg
lods
mov
out
mov
lock
push
jno
mov
cdq
call
aam
mov
movs
stc
mov
push
cmc
pop
sub
iret
sar
nop
push
popf
fist
adc
sbb
pop
idiv
mov
(bad)
out
cmp
adc
sbb
or
sbb
and
jno
or
pop
imul
xor
jbe
push
mov
or
cmp
sub
xor
sub
pop
addr16
imul
call
sbb
and
mov
push
inc
xchg
push
mov
xchg
push
xor
adc
cmc
pop
dec
jne
mov
imul
xchg
push
and
add
mov
push
jne
mov
cmp
mov
adc
inc
adc
loope
mov
add
lods
and
xor
scas
or
cld
inc
cmps
and
sbb
jo
pop
pushf
pop
(bad)
ja
push
stos
sub
sbb
mov
push
cmp
daa
fnsave
mov
mov
and
push
and
popa
dec
cli
and
arpl
add
jmp
jmp
loope
sbb
dec
test
sub
cs
add
(bad)
retf
or
fdiv
sbb
inc
daa
popf
jne
mov
retf
mov
adc
shl
les
and
(bad)
xor
sbb
fild
adc
loope
rcr
stc
(bad)
pop
xchg
inc
retf
stos
hlt
stos
pop
popa
mov
push
out
dec
and
das
in
adc
pop
add
movs
mov
leave
or
jge
fild
(bad)
int3
jnp
neg
jge
call
jo
div
or
pop
xchg
fwait
xchg
mov
sbb
inc
or
test
adc
inc
fsubr
jmp
pop
pmuludq
dec
sub
xlat
int3
sbb
test
mov
sbb
popf
in
add
out
adc
neg
sbb
inc
xchg
inc
mov
dec
ins
jecxz
pop
ins
in
jle
outs
push
adc
jbe
xchg
push
inc
mov
push
add
repz
dec
pushf
in
or
aas
stos
popf
add
inc
sar
or
cli
imul
xchg
jne
pop
dec
adc
(bad)
dec
ficom
sub
xchg
stos
push
scas
mov
cmp
fdivr
xchg
repz
int
rol
push
sbb
(bad)
adc
pop
mov
or
mov
mov
xchg
or
(bad)
in
add
push
fld
push
iret
aad
fdiv
retf
adc
aaa
test
dec
fld
mov
movs
cs
(bad)
jae
fs
shl
add
inc
jmp
mov
(bad)
dec
or
(bad)
js
sbb
cmp
lock
inc
inc
es
in
sub
xor
dec
shr
add
popfw
sbb
out
xchg
sbb
adc
mov
xchg
dec
jl
jle
jae
cmp
jge
jmp
stc
stc
inc
int3
imul
scas
ds
movs
xor
int
call
or
pop
sbb
pop
mov
sub
mov
sub
arpl
ss
icebp
and
mov
or
sbb
cmp
push
jno
jbe
pushf
cmc
stos
sub
adc
ret
mov
lea
jmp
ret
cwde
jne
cmps
inc
(bad)
mov
mov
daa
dec
in
retf
push
out
lods
xchg
inc
loop
sbb
inc
adc
inc
mov
jb
cmps
jl
aas
sahf
pop
jecxz
xor
sub
or
(bad)
lock
jae
popa
out
pop
jle
cld
push
push
mov
ss
and
test
inc
mov
ret
(bad)
xchg
test
adc
sar
sbb
je
jl
fmul
es
int
enter
loop
movs
pop
popf
repnz
inc
inc
and
in
sahf
sbb
mov
test
inc
cdq
popa
inc
mov
jmp
sbb
loope
adc
mov
mov
adc
ror
jns
xchg
dec
xchg
mov
stos
pop
inc
cmp
retf
scas
xchg
das
xchg
cdq
jmp
jmp
xor
mov
or
mov
sbb
jge
lea
inc
hlt
push
inc
pushf
adc
add
mov
dec
setnp
les
cmps
fiadd
das
repnz
aaa
add
pusha
lods
lds
jecxz
xor
dec
leave
adc
aaa
add
jl
mov
mov
mov
and
mov
iret
repnz
jge
sub
out
sbb
arpl
scas
jbe
xchg
and
push
add
call
jp
add
xlat
cmp
mov
out
ins
or
dec
mov
xchg
cmp
arpl
cdq
test
stos
mov
dec
aad
jmp
sub
aaa
mov
movs
or
push
xchg
inc
dec
dec
push
jmp
or
bound
daa
jmp
sbb
gs
clc
test
xor
adc
out
push
dec
shl
push
mov
dec
push
call
imul
or
mov
jae
add
pusha
push
sbb
mov
and
mov
xchg
cmps
mov
(bad)
pop
cmp
loop
jp
les
sbb
jnp
xor
push
stos
inc
push
sub
das
lods
outs
std
pop
repnz
bound
mov
and
push
push
and
std
(bad)
shr
iret
sbb
add
sar
dec
adc
int3
out
xchg
jmp
mov
mov
push
xchg
fcom
(bad)
adc
push
push
int3
push
int3
sbb
aad
dec
or
test
jbe
cld
mov
jge
sub
inc
mov
xor
xchg
xchg
cmp
in
sbb
hlt
mov
inc
cmp
mov
jge
addr16
enter
push
xchg
mov
adc
and
mov
mov
mov
std
fwait
sub
enter
aam
sub
jle
or
mov
and
ins
retf
ret
xchg
adc
sbb
js
aaa
pop
xchg
imul
fidiv
call
int
jmp
hlt
int3
les
loopne
shr
cmp
mov
(bad)
xor
xor
movs
out
aad
mov
sub
lods
inc
mov
pop
or
sub
call
test
or
cmp
xchg
das
popf
outs
jae
sbb
clc
sub
retf
es
xchg
in
in
or
cwde
leave
and
and
(bad)
hlt
push
mov
sub
cmps
outs
retf
jmp
sahf
xor
addr16
xor
or
xor
jecxz
leave
mov
lods
xchg
rol
jns
iret
push
xor
and
pop
xchg
and
fst
adc
add
ret
jp
jae
clc
cmp
xor
push
jns
fsubr
add
ds
gs
and
ja
nop
push
loop
gs
cmp
sar
sub
jns
test
adc
inc
inc
int3
out
and
pop
sbb
mov
sbb
int
jmp
cdq
xchg
xlat
mov
fisubr
push
sub
push
sbb
fbld
ja
test
jae
dec
add
push
mov
daa
inc
ss
or
adc
imul
and
pop
pusha
cmp
adc
add
ss
test
lahf
rcr
int3
lods
adc
xor
dec
je
sbb
xchg
mov
lods
add
cmp
out
mov
imul
sahf
ss
loop
repnz
addr16
adc
mov
mov
push
xchg
and
and
mov
sbb
in
sub
adc
mov
int3
test
call
loop
fmul
out
sbb
dec
jmp
pop
mov
clc
(bad)
div
(bad)
int
leave
and
lods
test
cmp
js
repnz
popf
sub
dec
or
es
repz
push
xchg
addr16
xor
cmps
lods
push
sbb
jl
cmp
dec
fisub
fnstenv
dec
dec
mov
and
cmp
cmp
ss
sub
and
aaa
test
xchg
mov
dec
jg
leave
mov
sub
and
mov
test
jp
cmc
outs
(bad)
retf
xchg
or
xchg
push
xchg
fwait
add
pop
or
iret
cmc
pop
push
add
daa
xchg
push
addr16
xchg
cmc
xor
and
test
adc
push
icebp
xchg
or
fisttp
dec
cmp
lock
cmp
fdivp
int3
in
fs
xor
cld
adc
outs
outs
std
test
cmp
jns
imul
push
jbe
inc
sbb
and
inc
repz
int
cmc
mov
ret
(bad)
imul
mov
ss
ds
ds
leave
cmp
dec
jno
shl
cwde
dec
mov
pop
mov
mov
daa
lods
jg
lods
scas
push
popf
popa
aaa
push
shr
xor
mov
retf
adc
scas
(bad)
adc
xor
cmps
mov
push
sbb
leave
dec
enter
ret
enter
jmp
aad
sub
cmps
stos
mov
loope
mov
mov
xchg
sbb
mov
mov
inc
icebp
cmc
pushf
ins
scas
outs
sbb
loope
movs
cmp
or
das
xchg
mov
dec
sti
cmc
je
dec
ins
jg
gs
(bad)
repz
cmps
adc
mov
pop
loop
and
sar
call
push
cs
in
retf
adc
and
add
in
jl
cs
mov
inc
jns
cld
jge
das
dec
scas
pop
inc
add
mov
dec
cmp
outs
or
xlat
lahf
repnz
cs
push
popf
fisttp
add
mov
xchg
and
arpl
cmp
pusha
movs
jns
push
nop
xchg
sbb
jne
or
jmp
sbb
cwde
sbb
(bad)
fist
or
(bad)
cmp
and
rcl
out
movs
out
mov
and
cmps
stc
shr
stos
dec
js
ss
mov
pushf
sbb
sub
push
shl
popf
push
pusha
xor
(bad)
arpl
xlat
mov
mov
mov
bound
bndstx
sub
or
cmp
pop
and
int3
cld
arpl
int
jg
mov
in
mov
push
sti
push
xchg
stos
aad
cld
and
cmp
inc
sti
mov
push
fcomp
jns
jmp
lea
and
enter
xor
adc
test
cmp
xor
jle
outs
push
aaa
mov
jp
mov
outs
fcomp
test
iret
in
sub
sub
pop
(bad)
(bad)
(bad)
enter
rcr
and
mov
or
pop
fldcw
and
les
sbb
enter
loop
xor
mov
add
xor
jmp
je
inc
push
cwde
out
or
dec
daa
jmp
inc
sar
popa
icebp
add
(bad)
and
mov
jne
imul
pop
mov
(bad)
scas
lods
pop
addr16
ds
lahf
or
rcl
out
and
pop
push
sar
xchg
inc
std
fcomp
out
inc
and
out
pop
inc
ret
and
leave
test
inc
movs
jp
jg
mov
mov
call
sbb
push
ret
push
mov
or
(bad)
fld
mov
hlt
sqrtps
pop
das
lock
push
sub
push
mul
inc
cdq
fstp
hlt
test
xor
in
retf
mov
cmp
aam
loope
sbb
sub
dec
jmp
pusha
cmps
dec
xor
xor
jne
xchg
not
ss
cmp
jne
xchg
xchg
xlat
(bad)
or
das
push
and
or
jle
mov
out
mov
imul
jnp
mov
pop
push
mov
xor
xchg
ss
pop
mov
mov
pop
adc
cdq
and
shl
xchg
sbb
(bad)
scas
xor
pop
ss
mov
leave
bound
loop
pop
in
push
aad
dec
sbb
and
xor
aaa
xor
inc
test
pop
lea
and
in
dec
jle
cmp
repz
lock
std
pushw
imul
addr16
sbb
mov
sbb
and
imul
clc
sub
inc
cmp
dec
out
dec
push
in
or
iret
add
sbb
pop
or
jnp
loope
xor
into
addr16
xlat
push
sar
mov
sahf
(bad)
in
mov
inc
xchg
mov
pop
add
cld
fstp
and
fs
ret
pop
jmp
sbb
jb
jecxz
rcl
and
pop
push
popa
mov
sbb
int
aaa
leave
outs
xchg
aaa
pop
mov
and
out
xor
jg
push
add
dec
pop
popa
fwait
popf
push
add
push
mov
and
push
out
and
inc
sbb
pop
add
sub
adc
(bad)
(bad)
nop
jns
inc
sbb
sub
movs
fs
fwait
rep
add
cdq
mov
lock
mov
add
inc
cs
push
push
fs
leave
push
mov
lea
pop
push
sbb
xor
enter
mov
retf
ins
outs
cwde
sub
daa
and
inc
js
sub
sbb
ret
es
loopne
dec
jmp
es
sub
dec
sahf
mov
shr
adc
ss
sti
stos
xor
xor
out
bndstx
ds
je
int3
pop
inc
xchg
sbb
push
test
jle
push
out
xchg
push
add
retf
dec
sar
dec
popf
repnz
(bad)
call
pushf
xlat
fisubr
retf
clc
jno
jae
int
and
fild
in
push
sub
pusha
xor
(bad)
enter
ror
jmp
cmp
xchg
scas
mov
mov
mov
pop
les
mov
mov
pop
inc
daa
call
mov
retf
pop
pop
inc
adc
xchg
adc
or
push
ins
ins
jmp
lods
dec
mov
push
mov
call
fisttp
xor
retf
lahf
xor
aad
int
ret
lds
sti
or
jno
sbb
mov
mov
outs
enter
mov
pop
hlt
jbe
add
imul
xlat
xor
rcl
daa
(bad)
pop
(bad)
data16
xchg
nop
call
mov
inc
push
and
xchg
into
js
sub
enter
or
cmp
or
push
sbb
jno
fmul
ss
sub
sub
(bad)
cwde
jne
and
xchg
lock
call
mov
les
pop
es
loope
pop
adc
jl
scas
inc
arpl
xor
(bad)
stos
sub
pop
outs
mov
cs
pop
bound
es
les
loopne
sub
in
cmp
mov
xor
repz
and
out
enter
repnz
mov
(bad)
(bad)
mov
sbb
add
cmp
(bad)
mov
test
ret
adc
xor
ret
int
jecxz
mov
add
pop
cmp
fsub
xchg
push
aam
jmp
add
push
or
sahf
icebp
xchg
je
xor
inc
inc
cmp
or
pop
leave
jle
std
sar
inc
daa
and
lods
aad
sbb
cmps
aas
mov
inc
mov
dec
lds
rcl
jmp
mov
inc
adc
xor
mov
sbb
out
shr
xchg
pop
scas
jbe
mov
mov
pop
sub
push
and
repz
repnz
and
outs
dec
(bad)
or
scas
retf
(bad)
call
leave
push
fs
mov
push
fild
mov
lock
dec
add
inc
mov
in
xchg
ret
out
add
pop
and
jno
lahf
or
pop
lock
xchg
inc
ret
inc
or
enter
out
in
add
pop
fistp
lds
or
mov
(bad)
adc
push
notrack
and
or
shl
lea
jmp
dec
ret
push
xchg
mov
pop
cli
jns
fidiv
mov
in
mov
ret
call
adc
sbb
enter
sbb
(bad)
out
cmp
push
add
lods
adc
nop
les
pop
mov
adc
or
xchg
daa
test
jbe
psubsw
or
or
push
fs
ror
daa
mov
pusha
mov
adc
and
lods
xor
je
mov
pop
jmp
or
or
mov
ins
cmp
pop
dec
fidiv
icebp
fcomp
std
cmp
arpl
cli
sbb
xor
aas
and
mov
lds
mov
pop
fmul
and
icebp
cmc
bound
(bad)
pop
in
out
mul
aaa
pushf
mov
jnp
jmp
and
ret
lahf
aam
xlat
cmp
call
aas
ins
(bad)
cmps
pop
push
inc
neg
jg
mov
xchg
mov
dec
and
arpl
inc
pushf
daa
inc
nop
mov
jae
jne
xlat
jo
test
pop
and
adc
xor
(bad)
adc
jle
or
cmp
test
xchg
(bad)
es
lahf
adc
pop
rol
mov
mov
cmp
cmp
push
adc
ja
mov
add
sbb
mov
cmc
xchg
jne
dec
jne
pushf
fild
pop
xchg
add
jne
mov
movs
add
mov
push
sub
(bad)
mov
jmp
mov
xchg
fisttp
ss
rcr
and
jae
and
out
sub
shl
(bad)
mov
push
movs
icebp
adc
cld
lahf
ret
push
mov
out
adc
mov
jo
jo
mov
push
pop
fisubr
ins
jbe
adc
inc
(bad)
ror
(bad)
sti
test
inc
mov
lock
push
shr
aam
pop
jl
add
loope
sbb
cmp
adc
call
inc
mov
pop
dec
daa
loope
cwde
cmp
push
fisub
inc
pop
cmp
pop
test
push
adc
and
stos
in
push
jmp
push
xor
or
xchg
dec
inc
stc
push
push
add
ins
jg
mov
jns
rol
call
fmulp
jl
iret
mov
daa
imul
jbe
adc
fcomi
lods
jo
popf
in
xchg
shr
and
shl
cmp
aas
test
retf
loope
cli
sti
mov
out
mov
or
mov
jp
mov
cmps
push
xchg
pop
aad
xchg
jne
(bad)
inc
daa
mov
idiv
xchg
xchg
movs
xor
add
jl
stos
jle
cmps
mov
or
outs
jns
fild
pop
mov
inc
adc
fld
out
ds
aas
fst
add
std
ror
pop
lahf
cld
pop
mov
adc
sbb
add
add
sbb
mov
ja
test
repz
and
mov
repz
or
bound
dec
mov
dec
retf
ficomp
mov
jg
add
test
in
push
mov
sub
fiadd
or
dec
xor
or
(bad)
pop
cmps
dec
push
and
das
mov
stos
sbb
xor
imul
adc
mov
pop
stc
loopne
stos
inc
pop
add
pushf
or
jmp
add
mov
lea
sub
and
fiadd
aaa
jmp
mov
fdiv
jg
or
pop
dec
xchg
cli
fidivr
dec
mov
or
pushf
pop
call
inc
adc
cld
fdiv
mov
lds
inc
loopne
pop
movs
aaa
mov
xchg
outs
cmp
cdq
jo
sti
or
arpl
and
adc
sbb
adc
inc
in
mov
int3
shl
inc
ds
jecxz
and
test
pop
test
out
leave
adc
jmp
or
adc
mov
mov
add
cmp
leave
fbstp
pop
cld
sub
aad
aam
add
adc
cdq
aad
mov
ss
fiadd
mov
fadd
fwait
adc
mov
cmp
push
mov
retf
cmc
cmp
mov
mov
push
sub
sub
in
jp
arpl
mov
pusha
mov
(bad)
inc
and
sbb
rcl
xor
jg
mov
mov
mov
cmp
arpl
jmp
fwait
std
and
cwde
mov
(bad)
stos
cmp
mov
lods
lods
and
pushf
arpl
sbb
mov
fst
lahf
cmp
(bad)
jb
fcomp
mov
mul
pop
sbb
xchg
add
js
ret
xchg
popf
fdiv
inc
fnsave
mov
push
aad
dec
test
dec
iret
mov
sub
popa
add
loope
adc
mov
mov
call
inc
pop
clc
add
fisub
add
rcl
lods
in
rol
movs
stos
hlt
enter
cmp
test
ret
aad
sahf
ds
and
adc
jmp
dec
add
or
data16
and
xchg
js
sub
dec
mov
jge
inc
cmp
les
lods
jmp
xor
(bad)
cmp
stos
cmp
in
jbe
fisub
mov
jl
sub
dec
jno
xor
inc
xchg
sbb
push
popa
int3
pop
xchg
jo
pop
dec
ret
pop
lods
fnstenv
ins
and
cmps
mov
jb
sahf
jmp
dec
push
mov
mov
jo
inc
imul
js
add
mov
popf
inc
sahf
arpl
inc
jb
dec
call
sbb
bound
push
repz
mov
push
jmp
adc
jne
cli
cmc
fcom
cmp
mov
push
adc
hlt
dec
jns
adc
jno
mov
inc
out
mov
lods
and
xor
daa
int
inc
mov
xchg
fiadd
sbb
mov
mov
jmp
daa
test
pop
loop
sbb
jo
arpl
stos
imul
dec
mov
pop
mov
out
jns
retf
adc
xlat
call
push
and
jo
xchg
mov
dec
js
cli
push
loop
dec
pop
dec
cmp
add
xchg
inc
add
js
push
push
sub
xor
pop
jns
dec
mov
xchg
ja
cmp
dec
out
jbe
inc
pop
or
xlat
xchg
(bad)
sar
loopne
adc
shr
or
mov
inc
rcl
fwait
int3
or
xchg
movs
mov
out
pshufw
sbb
and
mov
jnp
int3
jae
adc
ds
mov
sbb
cdq
cld
daa
imul
add
sbb
lds
xchg
adc
pop
inc
adc
arpl
push
cmp
pop
and
repnz
cmp
(bad)
aas
fild
call
mov
push
inc
stos
out
inc
(bad)
ins
push
scas
loop
rcr
jae
test
xor
hlt
or
inc
or
or
sub
ins
test
loop
jmp
mov
sti
cmp
js
daa
repnz
pop
je
sub
pop
test
cmp
cld
or
jp
xor
(bad)
sbb
xor
mov
and
(bad)
retf
mov
enter
imul
out
rol
jmp
mov
icebp
pcmpeqb
stos
fisubr
std
add
mov
xchg
mov
sbb
hlt
scas
rcr
ins
push
xchg
shr
sub
les
call
dec
mov
push
mov
inc
or
jge
lods
dec
mov
sbb
imul
cmp
out
xchg
jg
push
push
jbe
sub
mov
popf
(bad)
popa
in
push
test
jb
fisttp
jno
cdq
jmp
jmp
rol
dec
cmp
fisub
loope
out
mov
add
test
icebp
cmp
sbb
jbe
sub
add
test
jg
ins
mov
mov
xchg
lock
push
test
(bad)
mov
xchg
fidivr
mov
xor
pop
xor
adc
and
dec
pop
es
ss
jmp
ret
cli
adc
mov
pop
into
fidiv
call
nop
mov
imul
hlt
dec
daa
mov
xlat
cmps
scas
rcl
sbb
mov
fcomp
xor
in
push
pushf
in
repnz
out
(bad)
test
mov
xchg
(bad)
stos
jp
fimul
mov
pop
rcl
and
out
add
call
stos
and
idiv
cmp
xor
push
stos
jmp
mov
out
fistp
lea
pop
les
sar
sbb
push
cmc
mov
xchg
mov
outs
adc
mov
and
neg
jmp
xchg
pop
test
dec
nop
sbb
lds
adc
pushf
jecxz
test
imul
dec
js
push
lea
pop
jg
fs
or
pop
retf
jb
out
rcr
icebp
fwait
push
sub
cmp
mov
inc
cmp
mov
add
sar
ss
jge
jl
repz
repnz
gs
inc
je
pop
sar
sub
popf
test
shl
adc
mov
push
push
loopne
cmove
out
dec
cdq
xor
adc
movs
and
mov
fnsave
add
(bad)
mov
adc
jecxz
je
jo
retf
clc
gs
mov
or
cmp
dec
test
test
or
in
dec
or
pop
dec
and
ficom
scas
mov
inc
(bad)
aad
jne
mov
aas
sub
mov
and
cmps
es
cmc
mov
lods
mov
scas
out
(bad)
cmp
dec
xor
pushf
push
pop
ret
fsubr
mov
pop
sahf
lods
inc
xchg
fild
sub
jecxz
xchg
call
int3
hlt
sub
les
repnz
sbb
je
daa
push
add
sub
clc
jge
imul
xor
adc
pop
cmp
push
sub
nop
sub
push
call
cmps
pusha
out
in
ficom
pop
xchg
(bad)
jp
retf
jnp
push
adc
enter
mov
fcomp
xlat
xchg
xchg
(bad)
fdivr
fucomp
ss
aas
push
outs
jl
add
dec
push
std
mov
mov
pushf
sti
jno
jae
(bad)
xor
mov
cmp
mov
pop
xchg
addr16
movs
std
push
jg
mov
jne
pop
add
es
js
push
fild
lock
(bad)
in
sub
hlt
sbb
cmps
dec
iret
and
rcr
out
or
ficom
jbe
or
xor
dec
jecxz
lds
(bad)
call
and
into
pop
leave
imul
cmp
(bad)
outs
mov
movs
add
push
fs
rcl
call
cli
pop
mov
jb
gs
call
repz
in
mov
ficom
test
cli
lahf
sub
xchg
mov
hlt
jg
pop
jae
jbe
mov
cdq
out
enter
test
cmps
mov
fs
mov
mov
xchg
xor
rol
jg
xchg
mov
mov
cs
mov
aaa
and
pop
mov
inc
out
jmp
mov
adc
cmp
icebp
imul
repz
adc
pop
sub
enter
push
mov
(bad)
inc
push
pop
inc
out
sub
push
sbb
ins
pop
jno
pusha
pop
into
mov
cmp
and
adc
es
sbb
pop
out
fistp
fild
(bad)
neg
(bad)
inc
dec
inc
es
les
scas
imul
xchg
dec
repnz
jle
fstp
push
sahf
jbe
mov
scas
inc
jge
dec
retf
jecxz
fdiv
sgdtd
mov
cmc
push
cmp
adc
xchg
icebp
sbb
pop
sti
out
cmc
mov
fsubr
mov
nop
xor
into
mov
xchg
aaa
stos
cld
push
leave
and
jae
xchg
hlt
dec
(bad)
dec
mov
inc
out
mov
mov
outs
les
shl
call
push
jae
push
push
ja
in
ret
test
cmp
je
lods
into
mov
lahf
shl
jmp
jmp
xor
ds
outs
add
scas
sbb
(bad)
pop
bound
shl
fwait
es
mov
mov
scas
ins
cmp
pusha
and
mov
or
add
scas
ror
scas
push
aas
cmp
fisttp
xor
mov
mov
sar
pop
dec
push
lahf
(bad)
fsubr
mov
jmp
pop
pop
xlat
dec
sbb
dec
push
jns
repz
adc
std
xchg
sbb
fbld
fiadd
rol
jno
rol
jp
or
cmp
jnp
lock
inc
in
aam
push
mov
retf
enter
out
aaa
lock
and
lahf
in
clc
clc
xchg
or
mov
xor
push
push
xor
(bad)
xchg
xor
adc
xor
cmp
jle
push
add
rol
xor
pop
cmp
mov
push
add
sahf
push
cmp
shl
sub
loop
jle
addr16
inc
and
sbb
cli
mov
cmp
popf
aaa
cmp
retf
push
daa
sub
je
cmp
lea
pop
sub
loope
fimul
inc
cmp
cmp
arpl
pop
sti
mov
pusha
cs
into
outs
imul
icebp
dec
mov
fadd
push
in
enter
int
xchg
scas
and
fnsavew
retf
mov
cmps
(bad)
xchg
mov
cwde
jne
enter
push
pop
and
jo
int3
shl
xchg
and
mov
je
es
mov
and
inc
mov
xor
mov
daa
es
sub
cmp
call
dec
(bad)
cli
inc
and
jne
xor
mov
jbe
dec
out
into
or
imul
cli
or
cli
jle
adc
dec
sbb
xchg
mov
mov
mov
lea
cmp
sub
jp
adc
stos
xor
ficomp
adc
jp
dec
mov
mov
(bad)
cmp
repz
lds
cld
lahf
lds
mov
ss
syscall
or
mov
stos
mov
enterw
ins
lea
mov
push
sbb
popf
int
cmp
jae
add
pop
and
jecxz
pop
mov
shl
mov
jns
shl
xchg
(bad)
mov
fcom
hlt
push
shl
repz
adc
test
fs
mov
jnp
pusha
imul
lods
cmp
add
out
mov
retf
push
pop
dec
repnz
xchg
and
pop
mov
repz
mov
xor
loope
pop
mov
push
test
dec
add
cmp
fidivr
cmp
std
jo
jb
jmp
dec
jp
adc
iret
imul
loop
xchg
ret
popf
add
dec
mov
adc
mov
mov
gs
xor
xchg
cdq
(bad)
inc
mov
push
call
mov
inc
popa
mov
popf
dec
std
xchg
stos
jge
jae
enter
xchg
std
aad
sahf
pusha
xchg
cdq
mov
mov
mov
(bad)
mov
mov
xchg
ins
jmp
and
cmp
pop
les
aam
mov
xchg
jo
mov
xlat
pop
jp
adc
mov
fsubr
mov
aas
ret
pop
push
cmps
ins
in
fcom
out
xchg
add
je
ret
mov
jmp
pop
retf
dec
add
add
xor
push
in
mov
xor
push
cli
xor
movs
js
aaa
mov
jae
and
mov
and
xchg
aas
push
outs
mov
jbe
fild
fmul
push
mov
stos
sub
inc
sti
ret
sbb
and
mov
jge
icebp
jnp
pop
movs
popf
lahf
xor
cli
ret
loop
xor
stc
push
lahf
aas
and
jl
pop
out
fstp
adc
out
pop
cmc
or
jmp
adc
mov
jle
sbb
pop
movs
push
cmp
sub
out
adc
lahf
scas
in
jns
fstp
xchg
(bad)
(bad)
fcomp
loop
addr16
sbb
xchg
clc
ficom
jp
ds
adc
pusha
or
lds
cs
jne
ds
call
jge
mov
mov
nop
(bad)
push
(bad)
inc
test
loopne
dec
pop
mov
movs
inc
retf
pop
pop
and
femms
jb
pop
jp
int
cmp
jns
inc
push
cmp
sbb
mov
inc
imul
cdq
mov
pop
jb
es
pop
lods
cmps
sub
aas
mov
cmp
push
inc
push
es
js
arpl
and
rep
inc
cmc
mov
lock
pusha
pop
push
(bad)
test
aad
aam
or
movs
imul
sub
xor
aad
mov
jo
xor
add
sub
sbb
dec
pop
std
cdq
adc
out
mov
frstor
enter
jne
popf
js
inc
push
or
fwait
mov
scas
xchg
push
jno
inc
jne
pop
leave
lock
(bad)
jmp
push
movs
mov
test
jmp
inc
mov
pop
daa
jo
in
cmp
shr
sahf
ret
lods
lock
xchg
mov
sub
(bad)
xor
mov
cmps
pop
xchg
movs
adc
xchg
and
addr16
jno
ret
dec
cdq
data16
sbb
xlat
cmp
orps
xchg
cmc
mov
sbb
ins
sbb
adc
out
icebp
aas
sbb
movs
sub
je
jns
inc
push
retf
adc
jns
pop
sahf
xchg
push
or
add
lahf
fcom
and
rol
rcr
(bad)
data16
or
jecxz
bound
mov
adc
inc
mov
ja
mov
dec
dec
je
cmc
mov
or
push
aas
sbb
inc
retf
popa
cwde
movs
mov
cmp
push
das
mov
sbb
sub
cmp
sbb
and
sub
cli
add
jecxz
jle
inc
fwait
sub
dec
lds
aam
shl
sub
jns
jmp
push
retf
das
and
add
in
int3
icebp
jb
cmp
mov
daa
loopne
shl
jle
push
stos
call
jp
sar
bound
jns
jnp
popa
dec
in
aam
inc
inc
test
js
mov
cmp
and
repz
jns
dec
cli
mov
cli
inc
jmp
loope
cmps
test
push
rcr
lods
inc
push
pop
retf
add
inc
int
ffree
sbb
add
scas
or
adc
fidiv
in
sbb
popa
jl
and
cmp
inc
cmp
(bad)
call
popf
mov
in
dec
mov
xchg
xchg
cmc
or
out
xor
xchg
cmc
xchg
not
push
xchg
into
push
jmp
xchg
out
xchg
mov
(bad)
fmul
mov
lock
in
daa
dec
pop
adc
dec
js
movs
jp
add
dec
scas
ret
test
push
hlt
aaa
dec
gs
mov
inc
or
or
pop
outs
pop
cs
push
xchg
pop
retf
repnz
cs
retf
(bad)
(bad)
inc
mov
jno
bnd
jbe
rcr
rcl
inc
push
out
test
popa
jns
sbb
mov
sbb
or
dec
lods
ss
adc
xchg
pop
inc
cmp
and
clc
(bad)
adc
push
cmp
cmp
loopne
nop
mov
adc
fisub
call
jno
push
stc
in
fs
mov
scas
mov
inc
push
mov
jp
adc
shr
dec
test
aad
push
lahf
jecxz
pop
fld
inc
ins
jno
ss
int3
in
sahf
ds
mov
adc
dec
lock
ret
mov
pop
test
sbb
lea
mov
jae
fdivr
sbb
jb
jp
lahf
aad
dec
cmc
adc
aad
xchg
or
cld
cmp
pop
dec
test
scas
pop
imul
cmp
out
add
imul
pusha
mov
(bad)
shl
div
imul
mov
push
push
mov
je
movs
sbb
iret
int3
fcomp
cmps
or
sub
and
jp
jg
mov
addr16
enter
push
cmp
das
mov
or
jns
pop
aad
add
in
sub
mov
daa
fs
push
js
jecxz
scas
sbb
out
cmp
scas
(bad)
pop
jae
sti
adc
(bad)
xlat
lahf
push
mov
clc
rcl
pop
loop
mov
out
test
cmp
shl
xor
push
cmps
jb
mov
jnp
xor
mov
lds
leave
test
add
ficom
sbb
dec
fucomp
fs
pop
or
sbb
sub
test
loop
lods
arpl
mov
ds
aam
pop
sar
inc
fisttp
mov
mov
jno
repnz
mov
mov
jb
mov
pop
push
int3
or
popf
loopne
mov
jmp
jle
jmp
add
mov
retf
mov
ins
cs
xchg
dec
fisttp
and
cs
mov
add
test
fdivr
pop
and
ret
jnp
stc
fnstsw
dec
lds
ret
fist
mov
popf
(bad)
ja
adc
jne
push
cmp
xchg
jmp
mov
loopne
pop
cli
(bad)
fild
int
lods
cmp
(bad)
and
pop
mov
jmp
pop
stos
sbb
and
inc
sub
push
ja
lods
scas
(bad)
cli
hlt
or
ja
lea
leave
pusha
xor
and
add
test
aad
adc
mov
clc
ins
clc
cmp
xor
dec
pop
call
scas
arpl
xchg
cld
dec
cmp
(bad)
cmp
jp
outs
fild
or
popa
leave
push
adc
mov
sar
push
mov
and
mov
mov
cmp
xchg
xchg
cmp
add
mov
retf
aaa
cmc
cmp
jne
loop
jnp
sub
mov
pop
sbb
push
fisubr
lods
stc
xchg
adc
cmp
imul
ja
pop
cwde
cmp
retf
pop
inc
aad
cmp
sti
mov
jmp
cmps
jmp
dec
jns
mov
push
(bad)
mov
cmp
mov
fnstenv
pop
cmp
sahf
cmp
jg
fbld
in
push
into
rcl
cli
mov
dec
dec
fstp
or
mov
adc
cmp
jecxz
jbe
lahf
scas
out
mov
jecxz
imul
mov
and
test
loop
loopne
imul
or
fadd
jbe
add
xor
hlt
mov
mov
adc
(bad)
(bad)
rol
fucom
scas
pop
dec
loope
mov
pop
jmp
xor
sub
fwait
and
adc
(bad)
out
lock
fcom
adc
cmp
or
mov
push
cld
pop
xchg
out
jbe
fst
push
jp
sbb
or
xchg
inc
and
mov
sub
(bad)
adc
rcr
push
sub
mov
cmp
lock
cmp
mov
or
ds
push
ins
cmp
jmp
stc
lahf
jno
call
jge
lahf
pop
push
xchg
mov
lock
fld
sbb
dec
in
mov
movs
mov
or
sub
cmc
les
(bad)
cmp
lock
adc
sbb
and
pop
(bad)
fwait
iret
sub
call
pop
or
sub
outs
mov
sbb
push
stos
call
lahf
scas
ret
mov
xor
mov
hlt
cmps
cdq
rcl
xchg
jb
nop
sub
ds
mov
cmc
aad
movs
ftst
fisubr
or
stc
aaa
fnstcw
sbb
repz
(bad)
cs
into
xor
ja
call
push
pop
or
imul
xchg
adc
std
mov
push
movs
and
dec
adc
jns
sbb
xor
push
pop
fadd
ja
pop
ins
popa
ins
sbb
lods
xor
in
xchg
sbb
push
xchg
sub
fwait
push
gs
dec
mov
xor
or
mov
xchg
sub
daa
jnp
xor
jnp
mov
movs
mov
or
xchg
lock
cmc
push
sar
and
js
adc
mov
ror
mov
(bad)
lea
aaa
mov
in
mov
sahf
mov
rcr
add
fbld
pushf
and
jl
sbb
jb
and
pop
dec
or
or
mov
jecxz
ins
and
add
out
jne
das
rcr
pop
inc
add
scas
sbb
lods
and
sbb
popa
arpl
xchg
push
out
shl
sbb
mov
pop
pop
mov
das
adc
cld
pop
mov
cmps
mov
dec
pop
sar
sbb
aam
int3
jb
ss
adc
(bad)
loopne
rol
dec
sub
jge
(bad)
cmp
arpl
add
sub
xchg
std
pop
inc
and
repnz
or
js
jne
repz
mov
retf
jmp
(bad)
inc
cld
les
imul
shl
adc
mov
push
mov
dec
pop
add
loopne
in
xor
out
xchg
pop
xor
lahf
in
sbb
cmp
pushf
xlat
fs
sti
ja
and
aad
js
and
mov
xchg
xchg
movs
dec
inc
mov
add
adc
jne
mov
dec
imul
jo
das
dec
pushf
lea
pop
ret
push
ins
inc
mov
fwait
adc
pop
iret
pop
push
test
enter
xchg
movs
mov
push
mov
sbb
and
xor
push
xor
jge
pop
rol
sbb
xchg
push
pop
aam
xchg
or
clc
sar
movs
test
ficom
jnp
mov
fmul
adc
or
xchg
mov
sub
pop
into
lods
inc
pop
jnp
push
fwait
repz
ins
test
sub
dec
or
adc
(bad)
dec
movs
adc
and
inc
sti
(bad)
sar
into
stos
stc
vorpd
sbb
dec
mov
dec
(bad)
std
fld
sub
xchg
int
dec
lea
leave
mov
repnz
push
test
movs
sbb
push
inc
and
shl
stos
mov
pushf
sbb
dec
sbb
repnz
fsubrp
inc
icebp
scas
inc
int3
call
call
jnp
pop
cmc
out
retf
scas
jbe
sbb
enter
retf
rsm
xor
mov
mov
aaa
mov
mov
xchg
std
sbb
dec
jg
into
push
(bad)
je
lods
les
jno
inc
cld
inc
dec
cli
fmul
pop
inc
fcmovnbe
icebp
cwde
shr
sbb
paddusb
mov
xchg
pop
sub
mov
or
jp
fadd
jb
jmp
(bad)
xor
iret
cmp
rol
sub
addr16
adc
adc
mov
push
sbb
mov
popf
fdivr
pop
cmp
inc
sbb
fld
mov
pop
pop
icebp
mov
dec
aam
in
inc
jp
dec
jmp
movs
aad
mov
cmp
mov
jle
fimul
int
fst
fcmovnu
aad
jne
pop
test
frndint
jge
cmp
xchg
loop
mov
gs
cmps
ror
int
cmp
jmp
mov
jp
pusha
mov
dec
stos
sub
ret
aam
dec
fs
cmp
retf
into
lods
pop
and
outs
shr
sbb
sub
call
std
or
mov
lahf
adc
mov
leave
(bad)
cmp
add
stos
mov
adc
shr
mov
or
or
mov
and
lods
mov
je
(bad)
outs
test
pushf
push
mov
mov
pop
mov
mov
cdq
into
adc
add
sbb
std
in
add
jnp
cld
push
loope
shl
repz
pushf
mov
mov
jnp
xchg
inc
scas
inc
leave
ret
push
push
cmps
cmp
inc
es
lea
pmullw
int3
loop
aas
mov
iret
push
inc
pop
test
xor
fild
push
leave
imul
mov
js
fstp
or
mov
call
cmp
adc
pop
scas
iret
stos
cmp
mov
xchg
rcr
xchg
pop
lods
pop
push
push
ret
jno
inc
mov
rcl
xor
fdiv
add
test
inc
or
cmp
jle
pop
sbb
cmp
push
mov
push
sub
(bad)
dec
or
xor
and
or
push
add
cmps
push
data16
(bad)
inc
pop
ret
out
jno
js
pop
adc
mov
dec
mov
retf
xor
fimul
sub
jle
dec
cli
xor
or
nop
dec
ins
jmp
cmp
mov
mov
or
xor
add
adc
mov
pop
(bad)
enter
fldcw
add
enter
data16
inc
jl
rcr
dec
clc
cmp
hlt
adc
not
xor
dec
in
test
out
jl
lahf
add
stc
xor
sbb
add
xlat
les
mov
pop
pop
cmp
add
mov
and
out
ins
sub
pop
mov
xchg
dec
stos
aad
push
dec
cmpxchg
cmp
out
dec
ja
mov
ins
rcr
adc
das
out
mov
mov
or
adc
mov
push
cmp
mov
pop
sbb
das
jg
mov
add
(bad)
(bad)
test
repnz
cld
stc
dec
cmc
fs
imul
xor
(bad)
or
pop
mov
(bad)
fxch
sahf
cwde
iret
xor
inc
mov
cmp
inc
jns
xchg
adc
inc
push
jmp
xor
push
aaa
loopne
sbb
xor
es
and
pop
cdq
mov
add
nop
mov
or
mov
shl
xor
mov
aaa
mov
inc
pop
mov
out
sbb
out
mov
js
std
in
push
xchg
inc
inc
mov
and
or
sbb
sub
fdivr
loopne
jo
movs
test
push
xchg
pop
(bad)
bound
sub
int3
pop
sbb
pop
test
xor
(bad)
lods
xor
xchg
mov
mov
xchg
int
xlat
mov
push
adc
inc
ins
in
and
outs
(bad)
in
jmp
cmp
mov
push
xor
jg
mov
loope
ror
xchg
mov
sub
cmp
pop
into
in
mov
lock
imul
(bad)
or
mov
test
sbb
repz
and
and
xchg
in
jl
cmp
fcomp
(bad)
fucomi
mov
bound
jmp
stos
xchg
cld
sub
or
pusha
jmp
out
mov
test
int
xchg
jbe
push
inc
push
in
jbe
push
sbb
pop
(bad)
out
xchg
sbb
pop
std
fsub
sbb
xchg
popa
(bad)
in
rcl
ins
inc
int
xchg
adc
les
test
sub
fwait
push
cld
lods
add
aad
jmp
jl
lods
push
arpl
cmp
leave
push
scas
cld
mov
clc
push
call
clc
int3
repz
repnz
nop
sbb
sahf
cmp
in
std
and
inc
jp
dec
lods
ja
xchg
aad
in
cmp
test
jno
enter
push
ror
xor
adc
cli
imul
pop
rol
or
shr
add
or
mov
cdq
or
adc
add
add
push
daa
xchg
or
mov
shl
ins
cmps
xor
mov
jnp
ins
ja
mov
jnp
cmp
jl
mov
das
push
pop
ret
jmp
push
cmp
sbb
clc
loopne
data16
xchg
push
popf
xor
stos
ss
hlt
adc
mov
add
mov
aas
fdiv
jne
lea
cmp
mov
mov
mov
pop
add
mov
xchg
int
xor
inc
jg
(bad)
ins
enter
(bad)
push
int3
adc
sub
mov
loop
inc
xor
faddp
xchg
xchg
and
or
push
mov
fldcw
pop
add
fstp
push
xchg
xlat
adc
xlat
xchg
pop
adc
adc
in
push
repz
mov
mov
pop
jnp
cmp
mov
mov
in
pop
cmps
pop
(bad)
(bad)
jg
or
pusha
enter
jne
inc
xlat
lods
jbe
sbb
cmp
push
pop
or
fcomp
lock
xchg
cmp
sbb
mov
xchg
ret
push
mov
or
ret
std
cmp
push
cmp
push
xchg
pop
or
jp
pop
push
pop
scas
adc
or
sar
imul
or
js
xchg
loopne
mov
add
inc
push
jg
je
rcl
call
popf
xchg
imul
xor
ret
push
push
jns
or
test
pop
sbb
inc
lods
push
mov
sbb
push
mov
pop
push
inc
pop
stos
adc
jmp
ins
pop
xchg
mov
(bad)
pop
in
cmp
nop
gs
pop
(bad)
dec
jnp
imul
(bad)
jns
jae
fstp
mov
ret
in
mov
les
outs
test
pop
mov
xor
adc
push
jnp
push
and
mov
faddp
push
adc
aad
jo
inc
jne
jmp
cmps
dec
stos
fcmovb
call
sub
(bad)
fwait
inc
push
sub
sub
jge
dec
sbb
jmp
adc
rol
(bad)
std
daa
cmp
scas
or
scas
mov
cmp
iret
ror
cs
dec
shr
push
mov
movs
inc
sbb
test
jno
xchg
pop
jbe
xor
xor
aad
int
xchg
cmp
pushw
repnz
iret
push
cmp
add
mov
mov
and
fmulp
mov
xchg
jge
sbb
leave
bound
adc
and
cmp
dec
and
sbb
sbb
xor
(bad)
mov
cmp
pop
xor
loope
jle
ins
sbb
push
loope
movs
cs
sahf
outs
cmp
fs
add
jl
dec
jg
out
pop
cmp
jg
dec
mov
shl
ins
rcr
fwait
mov
retf
mov
sbb
cmps
movs
lods
push
dec
lods
mov
sti
pop
inc
clc
and
cld
push
fisttp
bound
aaa
imul
retf
in
mov
sub
retf
pop
pop
in
jo
in
and
pop
sbb
loopne
repz
stos
js
xlat
fistp
sbb
sub
fstp
mov
fcomip
sbb
xchg
fcomp
pop
cmp
int3
xchg
movs
sub
cmp
jo
daa
lock
fs
movs
and
jecxz
fnstcw
cmp
ror
dec
dec
fiadd
cmp
mov
pop
pop
jb
lock
jb
pop
jecxz
lds
and
push
or
xchg
iret
jle
nop
pop
mov
dec
dec
sub
xadd
push
ds
popf
mov
cmp
call
aad
or
mov
es
mov
call
jp
push
and
mov
sub
xor
imul
lods
fst
xchg
into
mov
in
add
lods
cmp
xchg
mov
lods
gs
cmps
push
adc
aaa
inc
fwait
add
rol
dec
cs
and
xor
cmc
pop
sbb
add
mov
push
call
in
shl
pop
lods
rol
mov
iret
int3
cmp
push
sbb
jmp
cs
(bad)
call
imul
out
and
adc
mov
dec
std
jbe
cmp
inc
or
imul
popa
shl
jecxz
mov
aam
add
cs
in
nop
mov
inc
jmp
jns
or
and
imul
xchg
mov
pop
aas
frstor
inc
cmps
cmp
lods
mov
rcr
xchg
ror
sub
nop
retf
lds
sub
jae
or
push
cwde
push
and
movs
cmps
out
call
jmp
jo
aad
xchg
mov
rcr
aam
aam
ficom
pop
aad
enter
add
fild
fidivr
sbb
stos
lods
movs
pop
lahf
inc
hlt
push
popf
es
ret
inc
jg
call
xchg
dec
test
mov
and
out
mov
push
mov
xor
xchg
fadd
or
outs
nop
inc
pop
(bad)
jmp
adc
shr
jmp
xor
in
mov
mov
frstor
push
jbe
or
and
mov
loopne
or
jp
xchg
adc
fist
mov
mov
out
sub
scas
mov
or
xor
sbb
test
adc
dec
repz
out
fs
sbb
inc
sub
fbstp
pop
jno
inc
pop
push
rol
or
cld
sub
ror
bound
repz
aas
sbb
fidivr
pop
pop
arpl
or
cmp
mov
jno
sub
das
mov
out
mov
add
push
adc
add
dec
push
or
clc
les
ja
rcr
push
mov
and
xchg
ss
add
and
or
xchg
mov
cmp
add
mov
add
xchg
repz
fisubr
add
jmp
and
out
xchg
mov
imul
inc
js
dec
daa
mov
fimul
lock
sub
fist
call
sub
into
mov
fdiv
inc
cmp
jae
aaa
jg
arpl
icebp
push
je
addr16
aam
in
das
cwde
jae
add
and
call
fwait
ss
ins
inc
and
rcr
pop
pop
std
in
xor
dec
adc
mov
push
repz
enter
inc
and
mov
mov
gs
sub
xchg
jo
xor
repnz
hlt
push
sbb
add
sbb
rcl
and
dec
pop
test
push
icebp
mov
je
pop
inc
hlt
(bad)
fcmovnu
(bad)
ret
cmp
cmp
cmps
aaa
cmc
push
les
xchg
push
in
fmul
int3
and
jmp
leave
or
add
hlt
(bad)
mov
cli
scas
jno
ret
out
add
inc
xor
dec
mov
retf
imul
jns
pop
dec
or
jle
enter
(bad)
ret
shr
add
adc
sbb
jle
ficom
mov
fwait
aad
movs
adc
lahf
aaa
jge
pop
push
fwait
push
sub
and
jle
out
xor
inc
das
mov
add
daa
xor
sub
jmp
mov
sbb
lods
jmp
aaa
(bad)
sbb
push
cmp
lahf
imul
pextrw
add
(bad)
fs
mov
out
test
jg
sbb
inc
stc
jl
inc
sub
or
shl
cmps
dec
and
test
outs
call
(bad)
cmps
pop
inc
jb
and
in
addr16
enter
imul
dec
sub
jbe
retf
dec
out
popa
dec
inc
pop
(bad)
dec
in
pop
mov
cs
dec
(bad)
ficom
out
call
int3
scas
je
cs
push
sbb
fnclex
xor
mov
mov
loope
daa
mov
in
push
pop
pop
push
popf
fcom
adc
mov
push
cmps
add
pop
or
jecxz
push
shl
(bad)
out
push
adc
cdq
fdivr
fsub
mov
lds
(bad)
cwde
(bad)
call
cmovns
repz
xchg
and
adc
call
jno
(bad)
push
fcom
fs
ja
ret
ins
(bad)
pop
sbb
push
or
ja
pusha
sub
push
pop
add
leave
sub
stos
sub
sar
jae
jl
mov
sub
push
in
imul
add
stos
fidivr
or
ds
cmps
add
les
enter
in
xchg
or
add
aam
pop
out
mov
and
jo
pop
cmp
sbb
pop
xor
add
repnz
xchg
mov
popa
ja
imul
arpl
cld
dec
mov
int3
inc
jne
in
mov
and
fiadd
fstp
mov
ror
pusha
or
imul
(bad)
cli
fcomp
lods
xchg
out
out
sti
dec
xor
aam
imul
mov
fcom
jo
dec
inc
lods
out
je
bound
xor
jb
mov
retf
sub
jne
inc
mov
sbb
leave
enter
leave
sbb
push
and
stos
push
or
stos
mov
mov
call
sbb
adc
xchg
popf
pop
aam
mov
loop
push
mov
sbb
scas
sti
mov
pop
or
add
into
sub
sub
dec
repnz
test
sub
call
xchg
imul
jae
(bad)
sub
xchg
in
call
push
push
mov
sub
mov
push
add
test
mov
fld
and
dec
jne
fmul
mov
adc
icebp
push
or
sbb
int
mov
jge
fisttp
and
(bad)
push
(bad)
nop
mov
cmp
mov
xor
mov
shr
cmp
mov
leave
mov
sbb
cmp
mov
xchg
jnp
add
popa
push
cmp
(bad)
sbb
clc
add
push
pop
xor
lahf
jns
dec
and
sti
and
add
jne
lock
add
stos
push
dec
movs
and
into
(bad)
hlt
xchg
push
add
lea
jg
jmp
sbb
aaa
xchg
jae
outs
movs
retf
jns
mov
and
push
(bad)
popf
mov
and
pop
(bad)
int3
sub
fimul
cmp
daa
movs
add
mov
mov
cmp
mov
outs
xor
inc
inc
push
retf
pushf
xchg
sub
dec
xchg
adc
repnz
jmp
fsubr
arpl
dec
bound
sbb
fisttp
dec
nop
add
jmp
sub
shr
mov
fcomp
jg
adc
fprem
mov
xchg
xlat
iret
bound
icebp
pushf
out
sar
add
xor
arpl
pusha
inc
int3
dec
jmp
jg
out
scas
rcl
inc
(bad)
cs
push
ins
cmp
ins
fstp
cwde
xor
scas
push
add
out
cmc
es
dec
inc
xchg
sub
in
mov
outs
sub
test
fcmovnb
mov
push
sub
js
cmp
outs
aam
popa
xchg
sbb
pmaxsw
adc
rol
retf
inc
inc
setl
div
dec
mov
sub
or
pop
mov
adc
mov
in
imul
lods
rcl
mov
das
adc
ins
jns
pop
ins
mov
push
xor
ss
rol
scas
or
sbb
pop
push
jmp
or
add
(bad)
jg
mov
fsub
scas
call
in
stos
xor
xchg
leave
mov
xchg
jmp
cmps
scas
scas
rol
xor
in
(bad)
or
test
sbb
add
jne
mov
call
inc
movs
adc
(bad)
(bad)
cwde
es
in
xor
pop
mov
sbb
int3
or
push
iret
xchg
xchg
add
add
data16
xchg
mov
push
pushf
jl
and
pop
or
push
and
mov
ins
and
mov
scas
out
dec
mov
and
pop
lock
add
mov
aam
mov
leave
xchg
cs
xor
adc
mov
psrad
stos
lock
in
loopne
adc
mov
jp
ds
and
jmp
das
adc
hlt
push
dec
sbb
aad
clc
jb
inc
push
push
sub
xor
push
call
jnp
and
lea
leave
aaa
push
and
add
out
clc
stc
xor
push
shr
mov
out
cmps
sar
or
lods
jns
adc
jp
or
imul
lods
into
fxch
cmp
jmp
xchg
loop
sub
or
xor
push
stc
stos
int
adc
stos
mul
or
xchg
mov
xchg
in
je
lock
aaa
xchg
inc
mov
jne
dec
mov
push
(bad)
jae
jnp
fwait
cld
sbb
cmc
mov
dec
repz
sbb
jnp
dec
shl
or
hlt
aam
js
xchg
pop
jo
scas
xchg
sub
pop
mov
push
(bad)
(bad)
fnstenv
add
inc
push
or
jne
and
aad
dec
add
shl
out
stos
loope
jp
and
add
cdq
add
retf
jmp
add
cmp
sub
xor
xlat
add
lahf
pushf
(bad)
call
push
movs
test
jae
call
inc
pop
in
push
sar
in
inc
xchg
cmp
gs
call
stc
sbb
xchg
jae
inc
rcl
jle
cmp
hlt
adc
ret
loop
ja
mov
lock
dec
jno
loop
in
out
inc
and
loope
dec
cld
mov
fwait
adc
and
cs
movs
jp
or
mov
into
out
cmps
imul
sub
dec
ins
movs
out
adc
push
or
dec
mul
ja
mov
push
iret
in
adc
xchg
jp
jecxz
outs
fwait
cmps
xchg
lahf
adc
hlt
(bad)
stos
loop
mov
cmps
lods
lods
stos
in
dec
mov
aaa
mov
mov
jns
xchg
xchg
add
fmul
inc
(bad)
jp
adc
icebp
in
rcl
out
pushf
cs
lods
jae
mov
push
gs
sbb
mov
mov
das
cmp
push
ss
ret
jo
jne
push
(bad)
jl
add
pop
lods
in
or
dec
xchg
cmp
mov
idiv
mov
mov
mov
mov
loop
adc
mov
mov
pop
adc
inc
sub
and
psubq
adc
(bad)
pop
mov
sbb
and
mov
or
pop
in
lods
movs
mov
xchg
lds
sbb
xor
cmp
or
add
inc
daa
sub
ins
jge
mov
out
mov
fild
mov
sbb
jb
push
cmp
adc
(bad)
into
loope
mov
daa
sbb
rcl
lods
push
fbld
test
loopne
cdq
jl
out
leave
push
test
or
mov
dec
mov
int
mov
push
call
cmp
jns
xor
lahf
push
retf
mov
out
mov
mov
ficom
cs
lods
test
inc
add
mov
imul
mov
adc
aas
out
jnp
inc
aaa
mov
and
in
push
test
daa
jnp
adc
mul
iret
mov
int
je
mov
or
stc
cs
sub
or
inc
fistp
and
xchg
jae
xchg
jmp
aas
loope
adc
mov
sub
xlat
idiv
and
adc
or
xor
lds
js
sub
xchg
cmp
jns
mov
call
es
mov
aas
std
jns
sbb
fwait
sbb
stos
loop
jg
stc
shl
xchg
pop
inc
push
cs
push
jne
jmp
cmc
mov
mov
cdq
sbb
jbe
sbb
ins
neg
cmps
or
in
cmp
inc
cmp
inc
les
and
ret
sti
push
add
pop
fild
dec
push
arpl
sti
fstp
push
dec
scas
mov
mov
(bad)
js
fdivr
dec
or
mov
ret
cs
arpl
add
xor
sbb
arpl
push
xor
push
jecxz
or
int3
sbb
inc
or
cld
retf
nop
mov
lods
dec
push
in
push
popa
daa
inc
pop
add
mov
mov
sbb
sbb
cmp
les
fsubr
push
mov
xchg
aam
jae
ficom
mov
xor
aad
fistp
xor
inc
add
and
inc
or
mov
sub
add
mov
test
xchg
cmp
mov
aaa
test
sbb
mov
mov
aam
push
jp
xlat
xor
pop
in
jmp
cli
sar
cmp
mov
cwde
es
sub
sub
pop
lahf
lds
retf
push
jmp
cmp
into
mov
sahf
dec
sbb
mov
jo
cli
or
call
ins
pop
sbb
ret
adc
jg
fwait
mov
loop
adc
ins
and
pusha
add
outs
mov
test
imul
jg
or
jns
rcr
pop
sub
mov
pop
mov
xor
repz
mov
dec
adc
lds
push
mov
cmc
test
das
sti
push
or
fisttp
in
cli
ret
pop
mov
addr16
mov
fild
nop
inc
leave
es
push
cld
sub
jmp
out
xchg
clc
adc
cmp
popa
xor
(bad)
retf
in
int3
or
stc
mov
mov
lock
outs
inc
aas
jne
mov
jns
inc
cmp
fmul
ins
and
lock
aam
mov
push
cmp
add
cmp
retf
sbb
pushf
dec
dec
scas
out
into
or
mov
mov
inc
mov
xchg
pop
cdq
inc
sti
mov
imul
dec
adc
add
mul
adc
or
xor
dec
adc
mov
nop
fst
push
jmp
cmps
outs
push
call
jo
pop
hlt
pcmpgtw
fiadd
in
pop
(bad)
bound
cli
imul
rcl
ja
fsubr
or
sbb
call
cs
or
leave
cmp
stos
or
rcl
mov
pop
retf
pop
in
push
cmps
add
pushf
dec
imul
adc
push
hlt
test
sar
xor
cwde
test
aam
iret
call
fild
dec
adc
adc
fwait
push
xchg
ss
imul
popa
dec
jae
test
fld1
int3
add
mov
rol
push
fs
in
cwde
out
lds
ret
stc
fbld
dec
mov
pusha
sub
gs
xchg
mov
add
call
movs
sbb
xchg
dec
lods
mov
mov
push
int
rol
dec
push
cmp
mov
xchg
jmp
sbb
dec
xor
int
lds
jge
loop
mov
inc
stc
cli
jmp
pop
jns
mov
sub
mov
xchg
ins
pop
daa
jmp
fdiv
mov
jne
or
mov
jmp
movs
mov
add
push
dec
mov
popa
add
and
pop
jnp
jne
stc
or
mov
in
das
xor
inc
bound
add
xchg
push
mov
es
dec
mov
icebp
adc
dec
mov
add
test
je
push
dec
adc
sub
push
faddp
aad
mov
aad
and
inc
out
movs
mov
or
sbb
dec
jmp
push
ja
call
shl
(bad)
jle
outs
and
add
cmp
xor
xor
adc
sahf
cmp
cmp
cmps
cwde
jmp
mov
add
in
sti
add
ins
sti
add
adc
fimul
mov
add
and
shr
mov
jl
and
call
inc
movs
xchg
sbb
adc
out
aaa
stos
push
mov
std
ret
mov
imul
mov
ret
ret
mov
or
mov
lods
pop
jno
les
or
jae
jg
jmp
movs
aad
repnz
sahf
enter
call
leave
jg
std
sbb
xchg
jmp
pop
scas
out
mov
pop
into
mov
dec
pusha
cmp
pop
and
pushf
pop
inc
fsub
xor
fucomp
pop
pop
mov
mov
or
inc
sub
adc
fisub
scas
xor
addr16
je
in
out
(bad)
dec
cmp
lea
cs
and
ins
or
sub
mov
cmp
aam
sbb
sub
dec
imul
inc
mov
sub
xor
sub
xor
adc
loop
cmps
mov
mov
cmp
jg
mov
cmc
add
xchg
mov
or
xchg
sub
stos
xchg
in
xchg
inc
jne
push
or
mov
shl
repz
mov
xchg
push
adc
xchg
enter
out
cmp
cmps
mov
mov
cs
scas
xchg
sti
push
out
fmul
xor
sar
adc
adc
outs
pop
or
cmp
lock
sbb
ja
fild
rcl
cwde
(bad)
dec
loopne
hlt
mov
movs
enter
ret
jnp
dec
xor
rol
inc
xor
xchg
cmps
mov
jle
mov
mov
sub
lods
(bad)
fldcw
sar
xchg
jb
rcl
pusha
add
lods
cli
and
adc
xchg
jno
jno
pop
and
(bad)
sub
lahf
cmc
adc
sbb
in
push
not
add
(bad)
gs
jmp
sbb
call
add
mov
pushf
fistp
add
or
test
push
pusha
shr
mov
arpl
ins
sbb
pop
in
dec
sbb
aad
mov
mov
les
jg
sbb
pop
and
xlat
lock
inc
pusha
cs
jmp
jb
xchg
clc
and
jae
mov
mov
dec
(bad)
sbb
add
mov
idiv
enter
cli
cmps
push
retf
sub
ds
pop
mov
movs
jl
jns
not
std
add
adc
arpl
js
repnz
gs
push
jae
movs
out
(bad)
scas
mov
ret
bound
cmp
test
inc
pop
test
and
lods
push
push
or
cwde
sar
popa
(bad)
repz
test
add
pop
retf
push
jo
cmp
(bad)
(bad)
imul
movs
stc
push
ficom
sbb
mov
outs
cmps
cmp
rcr
cmp
fwait
jo
stc
cmp
mov
sbb
outs
sbb
rcl
xchg
pop
cmp
cs
or
xchg
and
jge
inc
gs
add
mov
cmp
das
inc
inc
jecxz
popa
mov
stc
jns
dec
gs
mul
pop
inc
pop
inc
mov
xlat
loopne
data16
out
jno
push
int3
mov
add
in
sar
aam
mov
ins
mov
inc
and
mov
scas
icebp
jmp
cmps
and
mov
jg
jecxz
fsub
push
mov
inc
cld
mov
xor
jmp
aas
outs
addr16
imul
test
aaa
sub
adc
pop
mov
aam
test
mov
popf
popa
fs
(bad)
stc
fiadd
cmp
dec
arpl
inc
fiadd
lods
(bad)
xor
jns
push
mov
sbb
int3
repz
in
and
hlt
hlt
popa
movs
mov
psubb
enter
gs
dec
adc
xor
test
mov
push
jb
dec
push
cmc
add
pushf
enter
pop
xor
pop
icebp
add
cmp
stos
icebp
dec
rol
and
mov
xor
add
jae
lds
retf
jmp
sbb
mov
mov
xchg
mov
retf
fwait
xor
inc
or
cmps
mov
ds
test
push
sahf
call
sahf
push
xor
sbb
arpl
and
loop
push
ss
push
or
dec
jmp
pusha
fadd
gs
inc
add
add
dec
dec
jg
sbb
xchg
scas
xor
jo
mov
cld
sbb
dec
pop
aas
in
mov
mov
sub
retf
sbb
(bad)
out
sub
fs
inc
mov
sahf
call
pushf
jae
and
mov
xor
mov
fld
fisub
xchg
or
shl
push
or
stos
icebp
cmp
loop
jb
daa
push
jne
mov
dec
repnz
movs
adc
xchg
mov
or
jae
lock
(bad)
(bad)
and
int
mov
mov
int
add
out
loop
je
and
xchg
jo
fild
mov
inc
dec
push
push
enter
sahf
jmp
ins
out
inc
fbstp
ror
pop
rcr
push
sahf
inc
stos
add
retf
push
(bad)
test
int
xor
enter
cmp
sar
scas
popa
or
fdiv
rcl
add
mov
out
push
mov
or
jo
sub
cmp
and
enter
shl
lods
aam
push
mov
push
aad
adc
cmc
mov
std
inc
jmp
mov
out
inc
inc
mov
test
mov
jbe
pushf
sub
mov
jnp
repz
mov
jnp
sub
ss
xchg
loop
mov
icebp
push
jg
je
push
(bad)
ins
add
dec
rcl
or
sub
js
aas
sub
(bad)
xlat
xor
ret
in
movs
test
pop
pop
push
sbb
mov
xlat
dec
test
mov
xchg
adc
arpl
aam
mov
lahf
mov
push
dec
push
aam
pop
loop
jbe
jmp
sbb
mov
mov
and
lea
lods
sbb
std
aad
std
dec
or
cmps
push
mov
mov
fbstp
or
pop
and
fs
jecxz
rcl
not
ds
clc
dec
pop
push
xor
js
mov
jo
sbb
inc
xchg
add
and
inc
adc
ins
retf
mov
push
push
or
ret
mov
int
cs
popf
test
fisttp
or
imul
cld
mov
or
mov
and
ret
xor
or
rcl
jo
add
xchg
call
xor
ins
push
rcl
aaa
loopne
xchg
mov
sbb
mov
add
push
pushw
ds
sti
or
cmp
xor
cmp
push
mov
sbb
shr
jl
ficom
mov
neg
mov
ja
fs
jnp
xor
mov
xchg
aad
jb
icebp
sbb
movs
add
movs
je
inc
sub
add
cmps
mov
xor
jmp
cwde
lds
outs
mov
cli
inc
mov
bound
mov
enter
xchg
call
mov
mov
pop
push
sbb
shr
in
pop
arpl
mov
jle
adc
lock
cmps
mul
out
jo
add
enter
push
popa
fild
out
ret
fadd
rcl
dec
mov
mov
int
into
inc
push
movs
pushf
ins
stos
iret
psubusb
push
jno
jle
xchg
jbe
leave
scas
in
mov
das
imul
scas
pop
adc
mov
mul
pusha
push
sahf
lahf
mov
xchg
xchg
push
ja
test
pop
sub
out
or
sbb
pop
loope
lods
pop
rcr
pop
jb
movs
lock
rcl
xchg
xor
jge
xchg
xor
ret
repnz
ret
or
xchg
pop
mov
and
push
jae
popa
or
sub
dec
cmp
bound
in
pop
and
fidiv
fsubr
inc
add
jge
rol
rcr
adc
shr
stos
cmps
clc
std
sbb
xor
pop
cmps
fisubr
inc
add
dec
mov
cmps
test
imul
in
jecxz
adc
pop
add
add
gs
dec
popf
or
inc
and
imul
mov
jecxz
mov
jge
(bad)
push
mov
pop
ins
fimul
jp
ja
inc
out
dec
dec
inc
test
inc
imul
push
cs
arpl
xchg
pop
xchg
daa
xchg
repz
lds
scas
sbb
mov
outs
mov
in
adc
pop
mov
scas
daa
mov
and
mov
xchg
jns
and
movs
in
xchg
cs
lahf
ret
xchg
or
fsubr
sub
jb
aad
or
(bad)
sub
xchg
mov
pop
cwde
in
dec
mov
nop
push
mov
fld
sub
adc
ins
xor
out
(bad)
(bad)
frstor
dec
das
lea
mov
outs
xchg
jp
scas
xchg
mov
mov
repz
scas
mov
mov
clc
xchg
adc
mov
out
arpl
cmp
pop
es
or
clc
in
or
dec
ins
xchg
add
ret
and
jbe
out
ja
pop
pop
xor
xlat
push
lods
scas
pop
mov
jp
sbb
jae
push
mov
cli
mov
les
sub
icebp
jecxz
in
pop
rcl
iret
adc
loopne
fst
and
das
test
adc
and
retf
push
xor
mov
sahf
jnp
leave
mov
fistp
fisubr
push
push
jne
xchg
mov
test
jbe
mov
ss
xchg
dec
leave
in
sub
cmp
and
nop
or
and
mov
push
clc
adc
aam
add
xchg
or
sub
or
jae
jns
out
inc
data16
mov
mov
in
pop
mov
jno
sbb
mov
mov
and
push
cmp
cmp
adc
push
neg
pop
mov
jmp
jecxz
gs
fwait
adc
sbb
outs
adc
inc
and
push
xor
adc
pop
push
jae
aad
push
inc
cmps
pop
je
lods
mov
add
fcom
inc
xlat
not
inc
xchg
and
xlat
(bad)
or
xor
mov
(bad)
sub
test
enter
ins
cmp
lds
jecxz
xchg
test
mov
jns
out
and
inc
lods
add
cwde
jo
imul
aam
imul
jecxz
daa
and
add
outs
and
(bad)
not
ins
int3
(bad)
dec
cmp
pop
lods
fwait
(bad)
jns
outs
push
or
jg
push
pop
and
clc
in
cli
pusha
xchg
inc
cmp
out
adc
lea
mov
out
ss
jmp
fs
inc
out
lods
outs
retf
bound
cmp
add
mov
push
popa
mov
xchg
popa
sub
scas
retf
or
mov
out
ins
int3
sbb
mov
movs
mul
sub
mov
test
and
mov
popa
xchg
enter
sbb
outs
test
cmp
pop
jecxz
add
and
xor
bound
adc
in
in
inc
and
push
sub
cmp
sbb
cmp
mov
mov
xchg
fsub
inc
adc
ins
push
imul
sbb
ror
mov
repz
aas
inc
jl
add
call
mov
pop
mov
scas
les
jns
sub
daa
mov
mov
enter
fisubr
pop
icebp
fiadd
imul
adc
push
sub
sar
add
xchg
imul
je
fild
mov
mov
mov
pop
std
mov
out
adc
aam
adc
mov
repz
cmp
mov
lods
xor
dec
enter
shl
and
sbb
adc
mov
cmp
daa
loopne
xchg
jns
pop
ja
and
and
inc
mov
es
xchg
outs
jo
iret
cmp
sar
sub
mov
sti
into
adc
pop
add
jns
stc
cmp
or
cmp
ja
cmps
push
scas
loope
adc
or
iret
mov
dec
push
in
or
mov
sub
push
cmp
or
outs
dec
pop
jo
inc
inc
in
mov
gs
sahf
fisubr
fidivr
inc
rcr
(bad)
cmps
pushf
jmp
or
popa
xor
inc
mov
cmp
jo
inc
mov
js
ins
inc
and
xchg
cs
and
movs
imul
test
push
mov
mov
cmp
lods
mov
jle
dec
pop
rcr
jecxz
and
pop
fistp
push
out
and
xor
es
mov
retf
and
(bad)
mov
out
test
xchg
int
sub
push
imul
aad
pop
jne
push
mov
cmps
or
sbb
mov
adc
inc
imul
sub
sub
in
inc
popa
(bad)
adc
in
(bad)
inc
push
and
adc
jl
mov
je
call
pop
repnz
cmp
xchg
retf
lods
addr16
add
xor
sbb
cs
and
xor
test
or
xchg
push
add
mov
jl
mov
and
scas
test
mul
jmp
aaa
pop
movs
mov
xor
aas
add
adc
sar
jb
es
daa
sbb
daa
mov
in
jle
inc
addr16
in
push
call
inc
and
jbe
ins
outs
sub
pop
cmps
jecxz
icebp
jo
sbb
mov
test
(bad)
dec
dec
jae
retf
adc
leave
out
inc
fisub
sti
lahf
sbb
out
mov
inc
rcr
mov
(bad)
cmp
ins
bound
push
(bad)
ds
adc
add
or
ins
xchg
test
inc
xlat
sub
push
cmp
jb
rol
or
xor
lahf
mov
int
ret
and
lods
cld
imul
repnz
hlt
(bad)
sbb
pop
dec
leave
sbb
loope
fld
fld
xchg
mov
call
pusha
(bad)
aaa
xchg
clc
cmp
push
jp
ret
sti
cmp
rcr
jne
jnp
call
push
mov
dec
cmp
movs
call
xor
stos
push
xor
push
arpl
mov
les
mov
movd
sub
nop
or
leave
dec
adc
jle
mov
jb
std
cmp
mov
inc
addr16
push
mov
repz
inc
adc
into
ins
pop
into
mov
pop
sub
pop
push
mov
inc
sub
arpl
pop
cmp
inc
jl
sub
call
inc
or
arpl
(bad)
or
push
lods
int3
ret
mul
mov
jo
cmps
xor
test
mov
adc
mov
outs
jnp
mul
aaa
lahf
inc
or
pop
jl
pushf
aaa
push
shr
in
cmp
js
call
adc
and
xchg
call
in
aam
aad
(bad)
pop
dec
cmp
(bad)
daa
lock
mov
xchg
xor
jae
xor
mov
sub
imul
es
jmp
mov
gs
jae
in
add
dec
movs
xchg
rcl
loopne
cmp
pop
out
loopne
pop
or
pop
sub
fiadd
mov
add
div
cdq
(bad)
daa
stc
aas
add
cmp
xchg
mov
xchg
in
sar
fisttp
jo
fst
cmps
jns
stos
cmp
jo
cmc
xor
les
sbb
add
sbb
pusha
jns
mov
xor
out
pop
mov
or
lar
mov
mov
sahf
retf
imul
push
cmp
sahf
push
pop
jg
cli
push
xor
sbb
out
out
fwait
call
pop
jmp
inc
out
loopne
and
jo
movs
pop
cmp
mov
sub
sbb
mov
pop
dec
adc
add
push
xchg
inc
mov
out
adc
imul
mov
out
or
pop
fnstsw
cmps
dec
cmc
jmp
(bad)
and
das
lods
in
mov
test
js
sub
test
add
dec
mov
aaa
test
mov
jg
or
retf
ja
cdq
fstp
loope
xor
pusha
lahf
push
ficom
inc
out
jns
mov
ja
xchg
loopne
xor
sbb
jnp
jle
hlt
mov
cmc
mov
cmc
lea
push
dec
imul
dec
js
fnstsw
jae
push
(bad)
outs
inc
inc
inc
add
or
mov
sbb
retf
cmp
fs
mov
xor
bound
je
cmps
dec
inc
push
inc
sbb
ud2
lahf
adc
mov
test
adc
out
call
xor
repnz
mov
xchg
int3
in
adc
std
pusha
jle
imul
(bad)
sbb
out
sub
xor
int
out
call
mov
add
cmp
nop
cs
aam
and
ret
cmps
cmc
and
push
data16
adc
cmc
inc
(bad)
fisubr
in
lods
fdiv
fidivr
leave
inc
loope
push
sbb
jl
movs
call
dec
sbb
(bad)
jmp
dec
ret
xor
pop
retf
and
mov
test
call
icebp
cmps
adc
(bad)
sti
shl
or
sbb
mov
lahf
xor
mov
out
pop
cmps
into
push
sbb
cmp
pushf
sub
call
jae
cmps
lock
xor
sti
jmp
std
xchg
xor
push
sbb
imul
fdivp
xor
xchg
ins
hlt
sbb
iret
test
push
push
add
jp
bound
mov
gs
and
dec
or
in
ins
and
jp
jnp
jl
sbb
dec
ficom
jnp
data16
icebp
push
cwde
fistp
push
push
xchg
cdq
jo
sub
cli
fisubr
test
js
jmp
adc
aad
arpl
loopne
(bad)
jmp
jmp
in
push
jle
mov
pop
stc
pusha
cmp
nop
in
or
push
and
sub
outs
xchg
mov
cwde
fcmovbe
in
mov
fidivr
jo
movsx
cmp
inc
aaa
out
add
push
inc
fiadd
ret
std
xchg
or
dec
pop
loopne
sub
popf
cmps
mov
push
test
or
xor
sahf
mov
xor
leave
ret
mul
rcr
call
mov
bound
sbb
(bad)
into
add
xor
loop
jno
fistp
gs
icebp
retf
xchg
mov
shl
or
jbe
pop
imul
or
push
call
xchg
push
mov
xor
loope
arpl
lea
pop
dec
mov
push
mov
mul
xchg
ret
outs
xor
mov
adc
or
test
into
cmp
out
fs
div
out
out
inc
add
shr
stos
iret
xor
test
cs
aam
sub
jmp
pop
ror
jp
lods
retfw
jg
push
in
add
adc
hlt
repz
pop
aad
dec
data16
lock
dec
mov
mov
push
mov
mov
mov
xlat
lahf
mov
adc
push
push
int
and
int
rol
retf
cmc
loope
daa
xor
nop
scas
dec
sub
sub
int
ret
push
pop
mov
dec
adc
(bad)
gs
cmp
inc
xor
movs
retf
add
or
cmp
outs
pop
pop
mov
fbld
icebp
sbb
inc
out
inc
pop
dec
aam
data16
fucom
and
push
lods
je
mov
rol
in
das
ret
xchg
in
sbb
imul
js
int
mov
aad
xchg
push
das
jmp
cs
dec
retf
xchg
mov
lds
in
adc
ret
xchg
into
xor
pop
repnz
movs
scas
mov
dec
pop
dec
loopne
in
dec
mov
clc
mov
sbb
(bad)
lea
fadd
add
push
test
lods
add
dec
fcom
movs
bound
push
test
lods
pop
ret
or
pop
push
jmp
xchg
call
xor
sbb
inc
aad
xlat
imul
sub
mov
int
jb
mov
scas
cmp
fiadd
mov
sar
outs
push
pop
sahf
sub
jne
push
shr
mov
bnd
jl
fidivr
into
cmp
scas
cwde
ret
add
pop
dec
fdivr
sbb
inc
(bad)
xor
clc
icebp
sub
xor
pop
lock
lock
push
fwait
xchg
cmp
cdq
dec
pushf
xchg
bound
inc
cwde
and
adc
cwde
popa
dec
dec
icebp
out
sub
cli
sahf
scas
mov
xor
mov
push
shl
cmp
adc
xor
je
push
pop
stc
xchg
mov
cwde
imul
cmp
push
gs
jg
mov
je
fmul
fidivr
ret
cmp
mov
in
and
jnp
movs
pop
jp
aam
jns
sub
push
xchg
loopne
jl
adc
sub
lds
mov
dec
adc
psubsb
sub
push
shl
pop
test
push
pushf
jo
(bad)
sub
neg
(bad)
xlat
mov
sar
or
scas
mov
sub
dec
int3
ins
add
adc
jmp
and
xchg
loopne
push
push
popf
push
in
push
fs
pop
bound
dec
in
or
dec
bound
outs
leave
xchg
adc
inc
jmp
push
mov
aas
mov
sub
dec
pop
dec
stc
sbb
inc
push
aad
xchg
mov
push
add
rcr
dec
mov
push
aam
adc
mov
add
add
movs
mul
rcl
(bad)
lds
adc
mul
(bad)
mov
lock
test
mov
aam
nop
lea
sub
sar
pop
push
imul
lea
push
ficom
mov
loope
call
ja
jg
xchg
cmp
lahf
jge
add
(bad)
retf
pop
mov
or
dec
out
fwait
mov
add
sar
pop
out
xchg
ins
call
jne
xchg
cmp
push
idiv
cwde
or
push
inc
sbb
nop
mov
test
sbb
loop
ret
push
mov
ins
movs
sar
mov
bound
sbb
loopne
(bad)
cdq
pop
inc
jbe
movs
jnp
rol
xor
mov
les
lods
imul
add
imul
idiv
dec
out
fcom
push
push
adc
and
fst
mov
xlat
lock
xchg
jp
repnz
push
lea
loopne
iret
push
jmp
pop
add
pop
or
add
test
lock
into
fs
lods
cmp
or
out
mov
sahf
xor
xchg
cmc
push
(bad)
mov
enter
xchg
les
(bad)
popa
repz
mov
int3
mov
mov
int3
outs
xchg
lea
xchg
inc
stos
dec
jg
pop
sbb
adc
loopne
fmul
xchg
daa
popa
xchg
mov
test
cmp
mov
adc
bound
xchg
sub
cmc
xchg
(bad)
or
call
aam
frstor
mov
leave
add
fwait
inc
out
jge
jecxz
cs
mov
adc
jne
sbb
pop
loopne
loopne
or
test
mov
push
jl
dec
jae
mov
lods
jns
aad
jmp
icebp
cwde
ins
stc
inc
je
aad
mov
and
test
pop
in
movs
push
pop
and
cdq
add
scas
iret
and
jge
fild
mov
movs
xor
loop
rcr
and
outs
add
les
les
jnp
daa
es
gs
out
push
ja
rol
push
in
in
pop
jl
sub
mov
test
test
cmp
mov
inc
add
mov
imul
pop
sub
call
sbb
repnz
and
ror
sub
dec
sbb
xor
or
stc
jg
inc
xchg
stos
sahf
pop
movs
ja
test
test
repz
jne
ror
xor
and
adc
xor
or
mov
xchg
xor
js
or
fwait
pop
shl
mov
rcl
jmp
loop
test
push
out
and
call
or
sub
jns
mov
mov
push
xor
div
call
push
(bad)
clc
xor
xchg
ins
pop
call
xor
or
hlt
push
xlat
push
pusha
lods
out
push
lds
adc
retf
movs
cli
mov
push
je
mov
aaa
ret
mov
jo
test
push
cmp
mov
lods
popa
imul
rcr
adc
nop
in
bound
hlt
cmps
mov
lds
xchg
ret
call
and
in
push
and
(bad)
jecxz
sbb
and
out
ins
xor
sbb
push
push
das
jmp
cld
in
icebp
cmp
xchg
pop
scas
test
ja
mov
in
dec
sub
test
or
mov
adc
jle
je
sar
push
lock
mov
xor
sub
adc
rcr
xchg
sbb
mov
dec
jns
out
jne
cmp
(bad)
cmp
cdq
pop
pop
daa
stos
repz
aad
mov
mov
push
repz
and
stc
loopne
out
add
adc
retf
push
cmp
inc
pop
stc
xor
xor
rol
loope
inc
adc
add
or
mov
mov
mov
jp
and
push
sahf
xchg
push
(bad)
sti
pop
ror
test
fsubp
popa
add
ficom
and
mov
cdq
mov
imul
and
mov
mov
pop
and
push
mov
mov
adc
icebp
cmps
pop
(bad)
aad
aaa
sbb
(bad)
cs
push
test
cld
jo
test
cmps
(bad)
lods
mov
push
cmp
in
(bad)
and
xor
aam
jecxz
add
pop
lock
or
imul
mov
pop
mov
mov
xchg
mov
sub
ds
cwde
dec
jno
test
add
outs
mov
(bad)
xor
adc
aam
mov
jne
jl
sub
out
push
lods
ror
push
xor
cmp
or
or
rol
pop
or
mov
pushf
push
xchg
push
cmps
repnz
in
(bad)
ret
sbb
mov
push
lods
xor
or
xchg
adc
cmp
adc
xchg
sub
adc
cmp
sar
lds
cwde
ret
pop
pusha
out
sbb
sub
dec
mov
std
jle
dec
(bad)
nop
pusha
shl
mov
push
pop
movs
xchg
sub
daa
and
xchg
ins
(bad)
jmp
(bad)
int3
mov
aas
idiv
ss
cmp
ja
mov
pop
out
pop
jg
loop
sbb
lods
xchg
dec
pop
dec
popa
dec
bound
mov
dec
mov
aam
jb
cmps
xchg
test
sbb
sar
mov
sbb
or
add
(bad)
test
jb
mov
jge
cs
xor
inc
pop
add
xor
shr
inc
dec
mov
pusha
mov
das
loope
push
push
mov
jg
add
hlt
aad
loopne
std
xchg
outs
push
test
in
addr16
retf
ret
repnz
les
pop
pop
lods
jb
xlat
push
movs
into
inc
iret
lea
das
xor
sbb
mov
int
sub
fdiv
fnsave
add
nop
(bad)
rcr
jmp
ins
in
xlat
pop
icebp
(bad)
push
pop
fxch
ror
call
sahf
popf
mov
sub
dec
xor
jae
stos
and
sbb
mov
movs
dec
mov
ret
sbb
pop
and
xlat
jb
and
sub
or
push
popf
popa
test
data16
cs
push
fsub
xor
xchg
shl
out
inc
mov
shr
ret
popf
fiadd
ds
je
sbb
dec
or
jecxz
mov
nop
xchg
mov
add
add
imul
jae
ret
adc
push
scas
shl
mov
pop
jge
call
mov
jne
cmp
mov
fist
push
mov
sub
mov
mov
pop
lds
xchg
jge
jle
in
cmps
mov
adc
add
js
jnp
pop
fucomip
xchg
sbb
mov
sub
jo
cmps
and
loope
shr
and
sbb
mov
inc
in
dec
mov
inc
aas
xlat
fsubrp
push
inc
fnstsw
loopne
pop
ss
sbb
jnp
test
add
pop
hlt
bnd
jno
dec
jg
cwde
or
mov
repz
adc
pop
xchg
stc
imul
xchg
enter
imul
test
sbb
dec
jae
int
adc
call
lods
jg
xchg
push
mov
test
mov
inc
outs
mov
jmp
int
push
stc
mov
movs
mov
stc
rol
xor
mov
or
call
cmps
and
hlt
xchg
jmp
xor
pusha
mov
loop
bound
mov
cmp
dec
push
mov
outs
fs
mov
sar
ins
adc
xchg
xchg
fmulp
stos
repz
jmp
hlt
out
cld
xchg
push
fnstenv
outs
mov
xchg
scas
pop
ret
call
xor
xchg
adc
xchg
xor
fisubr
jb
fst
mov
sbb
lahf
and
lods
cld
mov
(bad)
(bad)
inc
xor
out
adc
pushf
mov
jmp
gs
fwait
and
mov
lahf
pop
add
hlt
add
xchg
push
sar
aaa
inc
neg
mov
or
and
shl
fwait
mov
fbld
int
loope
enter
out
cdq
xor
lds
lea
cmp
mov
stos
or
scas
xchg
inc
inc
xor
inc
adc
jbe
(bad)
or
sub
loop
inc
adc
add
add
fidivr
xor
xchg
lods
sub
cmp
xchg
sub
shr
test
mov
mov
(bad)
das
movs
outs
pusha
sbb
jp
je
shl
int
mov
mov
jecxz
(bad)
outs
cmps
in
test
add
stos
push
(bad)
pop
xor
sub
add
adc
push
mov
(bad)
mov
ja
push
and
out
dec
fiadd
or
lahf
jge
scas
pop
xor
cmc
inc
and
jb
mov
loopne
push
jb
pop
fldenv
jl
jb
stos
test
hlt
ins
and
mov
cld
test
fadd
imul
(bad)
mov
xchg
stc
adc
mov
js
mov
or
icebp
jmp
(bad)
or
sub
mov
and
cmc
mov
fisttp
dec
stos
data16
or
pop
inc
test
fisub
adc
add
xchg
cmp
dec
dec
xor
add
faddp
fist
jge
and
inc
xchg
jmp
xor
mov
js
retf
sar
cmps
adc
inc
push
add
movs
adc
or
sbb
stc
(bad)
out
sbb
pop
mov
icebp
es
dec
rcr
sub
iret
mov
lock
xor
and
stc
repz
jae
shr
lock
and
fadd
pop
cmp
mov
pop
adc
jbe
mov
pop
jae
test
push
(bad)
ss
call
push
push
aam
ds
adc
test
xor
outs
popf
jnp
or
imul
inc
in
and
xor
aaa
pop
mov
cmp
cmp
into
pop
dec
dec
or
inc
fcmovnu
or
push
hlt
stos
idiv
mov
sub
aaa
jns
and
inc
scas
popf
fiadd
hlt
or
fild
mov
outs
nop
cmp
inc
or
adc
ds
popf
push
mov
out
fimul
jp
push
xor
pop
and
leave
call
jl
into
xchg
push
push
repz
mov
scas
mov
mov
in
(bad)
std
mov
cmps
dec
pusha
icebp
fwait
jmp
aam
pusha
or
in
pop
out
sub
sbb
sub
add
xchg
sbb
dec
add
rol
xchg
add
ins
lea
mov
test
lods
shl
inc
mov
mov
add
pop
xchg
xlat
add
dec
cdq
arpl
pop
shl
xchg
ret
dec
into
add
mov
inc
iret
or
mov
mov
out
adc
outs
mov
aas
std
loop
and
(bad)
pop
addr16
jo
fidivr
mov
push
(bad)
mov
loope
aam
cmp
xchg
mov
out
ret
pop
add
sbb
out
cdq
loop
loop
aam
test
fwait
xchg
sbb
push
dec
push
clc
das
lds
fild
push
push
push
or
mov
ret
pop
ins
jge
arpl
pop
rcl
ins
pushf
cmp
adc
push
push
sub
(bad)
cmp
sub
dec
repnz
jae
pop
add
dec
aam
popa
lods
add
xchg
jmp
lea
cmp
mov
push
inc
adc
sbb
vmovlps
repnz
rol
mov
adc
mov
mov
scas
mov
popa
mov
mov
mov
int3
repnz
scas
jmp
jmp
inc
push
fild
cli
and
outs
ss
sti
gs
data16
icebp
stos
jbe
dec
adc
retf
push
loop
xor
jno
push
retf
mov
mov
sbb
add
ins
sbb
fs
adc
sub
addr16
fst
dec
xchg
inc
sub
lods
popa
js
js
xchg
ja
out
sbb
mov
stc
jl
iret
xor
and
mov
loopne
and
(bad)
jbe
fs
add
mov
mov
call
mov
cli
clc
mov
push
test
stos
adc
aaa
jns
test
add
scas
sub
push
dec
jp
pop
retf
gs
push
mov
and
test
sub
pusha
push
mov
daa
xchg
aam
mov
fild
sub
mov
pop
ja
pop
jnp
cmc
cdq
ins
pop
repnz
movs
mov
rcr
stc
sar
dec
jbe
mov
fcom
push
mov
sub
mov
hlt
mov
mov
sbb
leave
sub
(bad)
(bad)
sti
mov
mov
push
mov
fmul
lods
jmp
cmp
nop
pop
ror
mov
or
cld
out
jg
dec
ins
addr16
sbb
in
pop
jbe
pop
pop
sahf
int
cmc
sub
jmp
and
scas
mov
inc
mov
sbb
mov
out
xlat
popf
ins
ja
cmp
sbb
pop
xchg
clc
sbb
mov
dec
lahf
aas
scas
std
scas
pop
push
inc
or
shl
popa
ja
sbb
and
repz
je
adc
pop
cmps
ins
jp
test
or
ins
sahf
jp
inc
mov
jae
mov
add
es
sub
xchg
pop
imul
and
jge
cmps
(bad)
add
cmp
mov
frstor
add
mul
cmps
in
jb
jmp
jg
or
fidivr
adc
movs
xchg
ret
cli
cdq
loope
mov
repz
sbb
or
sub
sbb
jmp
ror
push
push
test
mov
ror
and
adc
sbb
repnz
in
mov
inc
test
cwde
loopne
adc
in
fcmovne
mov
jmp
pop
xchg
imul
and
out
pop
and
les
pop
mov
aaa
aas
add
mov
pop
push
pop
pop
stos
mov
shr
pop
dec
cmp
inc
test
jmp
cmp
pop
les
in
push
push
ins
(bad)
(bad)
mov
mov
leave
aam
int3
arpl
and
out
adc
movs
fadd
test
out
dec
sahf
das
imul
cld
popf
mov
mov
test
jno
jp
sbb
fmul
xchg
xchg
xor
adc
out
jno
add
push
or
out
mov
or
xchg
dec
les
push
jno
loopne
or
sbb
xor
pop
mov
and
gs
jg
aad
scas
aam
out
cmp
call
outs
sub
sbb
xchg
or
inc
nop
xchg
aad
push
push
in
cmps
push
xchg
cwde
stos
hlt
rcr
dec
out
fnstsw
pop
jmp
dec
or
sti
jmp
push
cmp
and
jp
and
dec
test
out
repz
clc
push
dec
jbe
push
enter
jmp
and
arpl
pop
addr16
fst
stos
fidivr
arpl
mov
fs
dec
push
outs
leave
es
mov
jbe
sub
mov
xor
shl
shl
outs
add
pop
lock
bound
sub
jae
pusha
mov
cwde
dec
shl
js
mov
pop
mov
fbstp
cmps
add
push
lea
mov
aaa
imul
mov
dec
dec
aas
push
or
mov
jle
loopne
(bad)
loope
sub
rol
ja
push
mov
loopne
mov
jge
xor
cmps
dec
call
push
retf
(bad)
fwait
(bad)
mov
mov
inc
int
retf
xor
sub
and
pop
push
aas
cmp
dec
data16
test
aaa
fnstsw
lea
cmp
cmp
sub
aaa
xor
mov
jmp
sub
or
jl
out
es
outs
mov
push
in
dec
in
ds
rcr
mov
mov
pop
cmp
push
dec
or
push
jne
ret
icebp
pop
ror
neg
xchg
inc
or
jnp
addr16
xor
movs
jmp
cmps
or
and
push
push
jmp
xchg
jne
mov
mov
add
movs
or
fxch
xor
or
xchg
sbb
push
adc
push
loopne
in
call
es
clc
add
lea
mov
daa
fucompp
pop
lock
call
xchg
movs
in
jle
aaa
xchg
jle
popf
jp
mov
outs
jle
push
xor
mul
bound
icebp
push
ds
mov
inc
add
pop
sti
mov
idiv
cmps
mov
movs
test
pop
xchg
iret
lock
fisubr
cmp
jg
mov
and
xchg
shl
inc
(bad)
popf
int3
cmp
mov
lock
adc
jmp
add
jecxz
retf
jb
adc
movups
mov
in
mov
loope
iret
fwait
inc
xor
inc
(bad)
push
stc
jge
mov
cmp
rol
xchg
in
cmp
push
adc
cdq
outs
jbe
mov
xchg
mov
cli
jne
scas
ret
inc
fild
inc
adc
dec
sub
mov
add
std
inc
mov
lahf
ret
imul
or
or
call
sbb
mov
inc
imul
fist
xor
clc
jp
fbstp
jb
pop
addr16
out
shl
out
mov
inc
or
repz
movs
adc
ror
mov
adc
inc
jns
adc
jbe
add
sub
or
mov
push
jb
pop
push
(bad)
and
adc
movs
sti
shl
mov
cs
out
sub
fwait
imul
sbb
sar
or
push
xor
inc
and
cmps
mov
out
es
aam
xchg
cmp
xchg
aas
(bad)
mov
test
or
mov
icebp
fadd
shl
test
test
add
es
gs
lahf
aaa
mov
scas
into
imul
mov
fld
outs
mov
into
mov
shr
sub
pop
hlt
dec
ret
xchg
leave
add
jle
jns
stos
repz
arpl
icebp
or
inc
cmp
cmp
add
and
and
movs
in
jg
cmp
fdiv
stos
pop
loopne
sbb
ficomp
addr16
push
aad
mov
mov
mov
movs
adc
aas
push
setnp
sbb
cdq
dec
call
loop
push
mov
jbe
jle
mov
push
test
in
ja
outs
int
arpl
paddusb
dec
xchg
jo
and
push
push
sbb
idiv
out
idiv
(bad)
sub
mov
popf
inc
add
aad
outs
imul
in
pop
add
xchg
popa
and
call
mov
leave
sbb
sub
mov
mov
adc
neg
cdq
sub
xchg
mov
fcmovb
aaa
and
lock
stos
mov
sti
push
mov
xchg
mov
mov
push
pop
xor
cmp
xlat
and
repnz
cmp
cs
out
adc
and
mov
dec
or
(bad)
icebp
xlat
sbb
ror
iret
sub
rcr
mov
pop
push
jmp
aas
(bad)
pusha
(bad)
fdiv
xchg
and
mov
dec
sar
bound
mov
stos
xor
jle
push
arpl
stc
aaa
pop
add
push
or
ficomp
ficomp
push
or
dec
sbb
fnstsw
mov
xchg
loopne
ficomp
clc
xor
inc
mov
or
lods
mov
outs
xor
sbb
call
dec
add
fild
scas
fwait
add
stc
dec
or
neg
jae
and
ds
ins
adc
ss
jb
and
mov
ss
movs
sbb
mov
mov
sub
jbe
hlt
mov
jecxz
in
outs
pop
repz
pop
loope
jae
xchg
xchg
and
push
pop
lea
test
adc
dec
jecxz
popf
xchg
jb
out
mov
push
rcl
cmp
cdq
fs
jle
or
xor
cmp
ret
ror
clc
into
pop
mov
mov
sub
mov
ss
mov
pop
mov
xchg
mov
loopne
cwde
dec
and
xchg
sub
jno
dec
lahf
xchg
stc
repz
pop
adc
dec
retf
lds
pop
sub
aaa
inc
outs
adc
ins
mov
cmps
jnp
jmp
adc
jno
std
push
cld
jo
sbb
(bad)
mov
(bad)
jle
inc
int3
push
outs
sub
mov
or
push
lea
cli
movs
bound
add
pop
test
xchg
jg
mov
adc
sbb
outs
xchg
inc
bnd
cmp
mov
pop
test
jmp
stos
and
in
outs
jae
inc
xor
xchg
in
inc
lods
popa
cli
ja
movs
xor
inc
leave
push
xlat
mov
push
mov
sub
adc
int3
out
cmp
jp
sub
and
outs
pop
mov
jno
test
rcr
push
dec
mov
iret
jmp
mov
jno
dec
shr
mov
or
inc
cmp
pushf
cmp
cmps
movs
arpl
aam
in
or
push
cdq
(bad)
dec
stos
stos
cdq
je
lds
inc
lea
mov
jns
or
hlt
scas
inc
xchg
data16
jnp
or
test
mov
mov
mov
scas
ret
mov
cmp
gs
pop
arpl
add
int3
daa
pusha
sbb
cdq
out
xor
aaa
jecxz
or
add
dec
es
dec
cli
inc
lahf
and
js
xchg
mov
sub
or
and
pop
and
sub
xchg
push
dec
rcl
lods
mov
push
retf
xchg
test
mov
push
xlat
jns
test
movs
sub
push
jle
hlt
sub
mov
out
jmp
hlt
sub
jp
push
push
sbb
adc
retf
neg
clc
out
nop
lods
(bad)
pop
pusha
or
lahf
popa
jbe
in
stc
or
pop
lock
imul
lock
push
fdivr
into
and
mul
or
aad
fisttp
xchg
frstor
clc
mov
outs
nop
adc
dec
pop
test
mov
inc
xor
cmp
ret
adc
(bad)
mov
push
iret
cli
xor
cli
pusha
and
loopne
loopne
sti
outs
inc
cmp
push
xchg
jmp
dec
push
adc
stos
fdivr
imul
mov
iret
pusha
sub
push
je
cmc
call
adc
mov
scas
aas
pop
xchg
push
(bad)
sub
ja
xlat
cmp
std
adc
push
add
cdq
arpl
imul
int
out
imul
jo
push
or
sbb
pop
enter
mov
js
and
or
ins
nop
js
retf
mov
jae
jmp
xor
push
push
pusha
fwait
ss
and
dec
shl
sub
pop
inc
and
xor
shl
or
(bad)
popa
or
inc
inc
mov
mov
pushf
int3
(bad)
fisttp
pop
xchg
xchg
loope
movs
ins
sbb
cmp
inc
pop
sti
(bad)
jno
dec
mov
push
cld
sbb
(bad)
leave
dec
mov
not
adc
sub
shl
inc
std
add
or
mov
mov
push
xchg
inc
sar
adc
jle
xor
outs
(bad)
ret
fldcw
push
in
xchg
push
add
add
fs
(bad)
lea
xchg
movs
or
out
int3
(bad)
xchg
ret
lahf
and
push
jmp
inc
je
pop
jae
jge
(bad)
stc
cld
sub
mov
clc
adc
inc
and
lods
xor
push
push
fsubrp
or
sbb
test
cmp
in
(bad)
sbb
fnstsw
stos
add
das
movs
retf
push
push
mov
popf
popf
mov
pop
(bad)
jnp
popa
jno
pop
inc
fisttp
stc
pop
in
inc
enter
xor
test
cli
mov
pop
mov
ror
in
popf
dec
imul
ins
mov
pop
ffreep
mov
lods
fldenv
jmp
mov
cli
and
out
stc
mov
jg
xor
mov
cmp
xchg
xchg
inc
pop
fwait
xchg
or
rcl
clc
je
dec
cwde
jecxz
ror
inc
dec
sub
jno
and
sahf
xchg
les
cmps
(bad)
jle
stos
fwait
loopne
mov
mov
mov
test
retf
aad
arpl
imul
xor
cmp
dec
adc
imul
inc
pusha
mov
add
sbb
dec
inc
push
fistp
add
out
outs
popf
and
or
and
popaw
mov
sub
in
in
sub
mov
add
rol
hlt
and
fidiv
retf
adc
push
xchg
loopne
push
push
cmp
shl
leave
push
inc
movntps
and
add
xchg
loopne
xchg
mov
push
add
imul
mov
inc
sbb
xor
mov
add
and
mov
pop
out
lahf
adc
int3
enter
shr
sti
iret
icebp
cmp
outs
jb
pusha
push
push
xchg
fadd
jb
or
ins
push
arpl
cmp
das
cmps
pop
aad
ds
add
aad
retf
pop
and
scas
jae
out
dec
xor
idiv
mov
test
pop
dec
loop
(bad)
pop
call
push
push
sbb
or
cld
ja
pop
sub
aas
enter
jne
rcr
rcl
repnz
mov
lods
sub
icebp
mov
xor
sub
pop
pusha
loopne
aas
sti
rol
inc
fidivr
aas
mov
lods
jle
retf
aam
shl
xchg
pop
jns
push
sbb
jns
xor
sbb
jne
cmp
mov
sbb
inc
mov
cwde
test
leave
fimul
adc
push
fcomip
inc
or
adc
xchg
push
clc
or
mov
add
bound
pop
and
push
xlat
push
pop
aas
into
int3
stos
jns
mov
inc
jl
add
lock
fidivr
sbb
(bad)
sbb
repnz
inc
mov
and
retf
inc
aaa
fsub
mov
inc
imul
popf
pop
(bad)
or
cmp
or
ins
inc
inc
xchg
arpl
push
cmp
cld
xchg
jecxz
or
adc
out
push
sub
add
xchg
jnp
adc
adc
daa
mov
xor
data16
add
gs
pop
loope
int3
xlat
pushf
jle
sub
add
cmp
jae
mov
leave
fld
fcom
mov
out
fidiv
sbb
or
clc
es
or
popf
xchg
mov
mov
push
(bad)
stos
add
xor
push
inc
into
ins
jp
dec
sub
out
hlt
xor
into
jp
cmp
scas
cli
sub
mul
imul
js
adc
and
loope
mov
sbb
and
shl
lea
out
fwait
out
ror
add
vmread
and
jbe
sbb
push
inc
in
jmp
inc
inc
sub
aaa
mov
je
jno
cs
movs
push
scas
bnd
cmp
fld
retf
mov
mov
push
aaa
add
(bad)
or
dec
lds
jno
pop
(bad)
dec
jle
inc
loope
push
push
sub
xor
(bad)
dec
lahf
mov
aad
fisttp
adc
or
dec
dec
pop
pop
push
cmp
aaa
inc
jmp
adc
cld
mov
(bad)
std
nop
outs
and
adc
sbb
and
add
mov
adc
rcl
leave
jmp
aam
ret
int
mov
sub
arpl
pop
mov
dec
pop
push
jl
fbld
(bad)
shl
daa
(bad)
mov
repz
mov
pop
popa
adc
xor
js
inc
pop
adc
and
aad
call
(bad)
adc
sbb
jnp
call
sbb
add
iret
mov
pop
adc
retf
push
scas
test
xor
aad
fldenv
iret
and
loop
pushf
data16
call
push
popf
push
jo
add
pop
aad
call
fwait
adc
adc
mov
fnstcw
repz
dec
pop
out
fwait
and
lock
ret
jne
pop
loope
cld
jae
sbb
repz
cmp
inc
push
or
sbb
jg
push
xchg
add
shl
jecxz
stos
jo
push
fwait
aaa
stos
xchg
in
mov
js
out
mov
push
hlt
pop
xor
add
es
aam
es
mov
mov
xchg
(bad)
sbb
inc
mov
mov
les
ror
dec
enter
stos
mov
xor
cmp
aam
popa
addr16
addr16
xchg
cs
adc
adc
out
(bad)
in
(bad)
push
outs
dec
jp
rcr
dec
xchg
inc
mov
gs
loopne
push
adc
retf
xor
mov
lahf
inc
push
and
pop
repz
push
and
fwait
xor
inc
sbb
jmp
repz
(bad)
(bad)
push
xor
cmp
push
sti
sub
adc
(bad)
test
sub
add
jne
leave
loop
or
aam
cdq
test
dec
sti
enter
jne
jnp
or
in
xchg
pop
dec
and
ret
mov
adc
ins
xor
lds
ds
inc
shr
retf
jmp
add
or
xlat
dec
lods
add
pop
(bad)
lds
sbb
or
mov
arpl
xchg
cmp
cmp
enter
ss
fnsave
xchg
lock
sub
rcr
leave
add
sub
sub
cmps
dec
arpl
push
sub
mov
push
loop
icebp
or
enter
ret
pusha
pop
pop
bound
xchg
test
je
sbb
push
adc
sti
ret
jae
xchg
mov
push
stos
mov
rol
mov
cmp
push
rol
pop
mov
pop
jl
pop
loope
sbb
ins
and
add
mov
xchg
push
push
gs
inc
rcl
test
(bad)
leave
mov
xchg
cmp
xlat
and
push
cdq
and
inc
lea
or
leave
mov
push
mov
or
cmp
daa
sub
repnz
sub
cmp
fsub
out
or
arpl
lahf
dec
lahf
ret
add
inc
add
sub
dec
nop
and
cli
xor
adc
stos
aaa
sbb
loopne
test
sub
(bad)
sbb
inc
jns
mov
mov
push
pop
stos
or
push
or
retf
je
or
call
daa
into
mov
in
ja
mov
push
(bad)
jg
push
xor
daa
mov
push
dec
xchg
sbb
xor
add
adc
fisubr
cwde
fisub
int3
(bad)
rol
sti
inc
and
xor
fiadd
sub
into
jno
shl
ficom
pop
mov
mov
dec
pop
xor
mov
in
mov
out
xor
push
loopne
mov
out
xchg
movs
inc
jmp
and
jns
jne
mov
dec
jmp
aam
stc
lds
cwde
mov
mov
push
test
xchg
pushf
adc
stc
push
cmc
mov
in
jno
movs
xor
addr16
cli
rol
ss
xchg
adc
nop
xchg
sbb
mov
jnp
jb
sbb
cdq
xchg
(bad)
dec
pop
outs
push
dec
adc
pop
lds
mov
daa
out
xchg
dec
enter
retf
inc
push
jmp
add
cmp
adc
retf
sub
push
cmps
call
mov
js
adc
xchg
mov
sbb
movs
or
test
xchg
jns
lods
pop
rol
jbe
dec
adc
mov
sbb
fistp
mov
in
jp
or
loope
fild
jo
push
pop
cmps
enter
mov
mov
ja
cmp
into
jecxz
jmp
jg
fucomi
imul
jne
xchg
js
shl
sub
add
add
repz
xchg
ror
pop
xor
or
mov
jo
aad
addr16
or
and
mov
cwde
sbb
mul
push
pop
retf
scas
push
dec
xor
fstp
push
add
add
sar
jecxz
int3
clc
into
push
jge
fnstsw
loop
popf
jl
cmc
pop
cmp
data16
push
adc
repz
std
sahf
jns
jg
mov
nop
fist
mov
dec
and
shl
shr
pop
lahf
mov
xor
aad
inc
mov
test
sbb
out
data16
mov
pop
nop
jmp
sub
adc
nop
pop
mov
out
clc
sbb
fcomp
or
mov
data16
rcl
movs
(bad)
(bad)
pop
shl
enter
aad
ins
mov
mov
sub
cmc
mov
je
fst
mov
mov
cmp
pop
xor
fisubr
sti
ret
test
xor
pop
mov
cld
ins
aam
lahf
xchg
in
ss
pop
(bad)
cmps
sti
in
cmp
add
popf
fisttp
movs
shl
or
push
and
fld
out
popf
xchg
and
jno
xor
add
je
loop
popf
inc
push
ins
lock
pop
sbb
cmp
pop
pop
shl
inc
movs
jge
in
loop
dec
test
or
add
aas
aaa
(bad)
push
shr
cmp
stc
(bad)
sbb
sbb
mov
lods
out
fidivr
nop
stc
mov
and
sbb
fistp
jae
aam
ins
fcmovnb
mov
aad
int3
inc
pop
(bad)
out
cmps
sbb
inc
out
xchg
pop
xchg
ja
mov
adc
push
lea
loopne
vpsubsw
std
bound
call
sbb
inc
pop
xor
test
cmc
inc
mov
popa
(bad)
sub
jecxz
or
sbb
gs
ds
movs
push
mov
jnp
jmp
add
(bad)
sti
fadd
push
jmp
mov
add
pop
mov
sbb
test
mov
jo
loop
pop
(bad)
mov
xchg
or
jmp
std
int3
pop
arpl
dec
add
xor
cmps
push
add
mov
sahf
jecxz
jle
mov
fst
iret
and
pusha
fldenv
cld
(bad)
std
pop
xchg
cmp
test
dec
mov
mov
cmp
push
mov
mov
add
or
outs
sub
(bad)
dec
jp
adc
int3
(bad)
(bad)
inc
out
sub
inc
mov
mov
fs
and
sbb
dec
add
dec
and
movs
(bad)
pop
sub
xor
cmp
and
mov
in
cli
jecxz
out
stos
dec
fidivr
test
aaa
jge
test
fsubr
jl
sub
lds
ja
xor
clc
fistp
sti
fistp
sbb
ja
mov
(bad)
fistp
mov
aam
leave
mov
mov
aaa
push
outs
out
push
jo
call
add
mov
jmp
cwde
stc
add
test
lock
repnz
mov
lods
xor
je
(bad)
adc
cmp
xchg
mov
add
cmp
dec
mov
pop
sub
mov
(bad)
pop
cmp
mov
stos
dec
test
rcr
sbb
xlat
out
fdiv
dec
or
pop
push
(bad)
das
aaa
push
jmp
adc
imul
loopne
mov
adc
or
nop
mov
imul
inc
add
es
das
mov
jnp
enter
inc
dec
test
cmps
mov
adc
out
aas
dec
xor
arpl
and
mov
pop
mov
sub
ds
je
and
xor
sub
or
jmp
int
and
mov
daa
out
xchg
aaa
sub
or
mov
mov
push
fcmovnu
sub
mov
xor
xor
push
mov
mov
js
out
shl
add
fnstsw
imul
or
repnz
out
loop
pop
jge
add
lea
xchg
jmp
not
jge
sbb
shr
mov
out
mov
xchg
fdivrp
in
adc
lods
cmp
sbb
loop
pop
arpl
and
enter
mov
dec
call
fwait
sub
sbb
mov
inc
mov
leave
call
push
pop
jp
aaa
cmc
inc
xor
retf
push
loopne
push
jnp
inc
adc
pop
mov
int
clc
push
not
mov
movs
not
push
fstp
pop
push
and
sub
jo
cmps
movs
add
push
out
in
not
lds
jns
or
or
cmp
iret
push
loop
lds
xchg
pop
test
xor
sub
dec
icebp
mov
or
mov
fsubr
ds
repnz
pop
fidivr
lods
pop
mov
sub
mov
pop
mov
inc
mov
inc
div
jmp
jnp
dec
or
jl
xchg
jno
aam
sbb
dec
dec
test
call
fstp
dec
or
jl
bound
outs
xabort
xchg
pop
xchg
push
xor
add
sub
iret
hlt
xor
dec
dec
mov
sahf
fcomp
jns
int
sbb
cmp
arpl
push
add
mov
out
lea
ins
dec
pushf
popa
add
(bad)
fisubr
aad
js
ins
xor
test
shr
daa
lea
retf
push
stos
in
call
sbb
mov
xchg
clc
popf
mov
jg
fwait
lea
test
outs
mov
sbb
sti
push
mov
ds
cdq
mov
out
pop
(bad)
out
mov
lea
adc
mov
call
fnstsw
bound
add
fiadd
jns
xchg
mov
xchg
(bad)
mov
jno
call
xor
arpl
mov
inc
in
lods
pop
call
inc
jb
movs
cld
or
test
pop
cld
cmps
inc
dec
mov
add
(bad)
cld
inc
inc
xor
test
jmp
int3
retf
cmp
xor
inc
mov
out
mov
add
xchg
daa
lods
jmp
hlt
xor
push
xchg
mov
lahf
mov
arpl
retf
add
mov
shr
cli
push
(bad)
push
pop
in
test
pushf
jns
mov
scas
adc
aaa
jb
not
dec
xchg
pop
call
push
bound
cmp
mov
cwde
test
push
sbb
push
xor
inc
es
jecxz
pusha
or
pusha
mov
lds
arpl
test
pop
mov
mov
sahf
rol
jl
dec
mov
repz
push
jne
pop
xchg
pop
and
pop
hlt
sub
add
and
sbb
xchg
mov
cmc
je
mov
cmps
sub
add
stos
in
jo
cmc
ret
daa
retf
fadd
xlat
leave
jb
mov
loope
sbb
jp
les
xchg
call
xchg
test
or
aad
jns
in
out
ficomp
xchg
outs
popf
cli
ja
inc
push
mov
inc
mov
push
(bad)
sti
imul
push
or
xor
xchg
sti
or
xchg
movs
xchg
popf
jecxz
or
repnz
mov
add
xchg
cli
test
jmp
and
loope
(bad)
int3
push
inc
in
aaa
rol
mov
pushf
mov
push
adc
mov
inc
push
pushf
xor
ja
xchg
jecxz
mov
enter
mov
push
jle
mov
xor
imul
push
int3
pop
leave
add
out
mov
dec
add
not
scas
mov
jae
lods
cmps
int
mov
mov
cmp
out
or
dec
cmp
mov
xchg
or
imul
add
dec
jmp
loopne
xor
pusha
in
fiadd
stos
and
imul
mov
xchg
ds
movs
mov
movs
cmp
pop
xor
adc
ja
fst
repz
sbb
(bad)
iret
ins
cli
outs
or
pop
mov
or
cdq
cmp
dec
xor
dec
scas
mov
retf
and
nop
mul
mov
mov
mov
pushf
int
mov
aas
xor
scas
lahf
imul
aam
mov
test
mov
pushf
inc
jmp
jns
ficomp
pop
ror
and
loop
cwde
and
mov
dec
stos
push
mov
xor
cli
test
ror
jge
mov
scas
call
inc
sbb
in
mov
fwait
retf
nop
sub
test
aaa
es
jge
sub
adc
daa
jmp
xchg
or
jmp
push
call
in
lods
xor
sub
fs
out
sbb
xchg
fcomp
adc
dec
push
lods
sahf
push
in
test
inc
pushw
fnstcw
cli
mov
mov
cmps
aas
dec
pushf
or
mov
fcom
out
int
test
jge
dec
or
mov
test
push
jnp
add
out
lds
sub
adc
and
shl
sti
add
jbe
push
aas
push
out
aaa
movs
sub
cli
sub
fst
ja
std
or
xor
rcl
xchg
fucom
popa
test
shr
mov
and
inc
jecxz
push
in
test
int3
in
es
inc
iret
rcr
retf
out
popf
push
aad
mov
xor
lods
les
xchg
dec
out
lods
cmp
outs
fbld
mov
rcl
gs
lods
adc
pop
inc
lea
cs
push
mov
leave
aaa
mov
adc
pushf
cmp
mov
sbb
xchg
dec
cld
sub
fisub
cmps
(bad)
sbb
lea
popa
in
sub
xchg
mov
outs
dec
ror
push
xor
dec
mov
xor
clc
repnz
pop
fnstsw
leave
call
enter
lea
clc
clc
pop
idiv
retf
iret
int3
sub
pop
movs
push
pusha
mov
enter
or
add
popf
loopne
xor
pop
cmp
dec
sbb
and
jecxz
push
cli
dec
mov
cmps
add
xor
sub
imul
fstp
jbe
ja
jge
pop
xor
adc
dec
jae
or
xchg
mov
xchg
lods
mov
sti
stc
and
frstor
call
out
adc
cld
sub
and
jle
add
and
cmps
jl
repnz
jmp
xchg
cmps
and
fcmovbe
cmp
cmp
adc
cmp
adc
stos
stos
sti
pop
imul
add
and
push
hlt
out
cmp
pop
dec
pop
test
lds
test
sbb
retf
rcl
les
or
pop
dec
xlat
fistp
jg
cmp
shl
jmp
xchg
popf
into
xchg
mov
out
sub
jge
push
inc
mov
inc
xchg
xchg
mov
icebp
jmp
jle
rcr
mov
scas
xor
aas
jmp
retf
ror
pop
lock
sub
xchg
lds
stc
lea
push
fld
in
popf
adc
jl
lods
pop
xor
fdiv
test
sti
inc
mov
push
icebp
mov
iret
jg
out
mov
cdq
jb
or
mov
mov
xchg
mov
test
ror
push
mov
mov
movs
jmp
push
stos
sbb
and
cmps
adc
in
test
or
jle
mov
and
lods
add
xchg
mov
shr
xor
push
out
repz
jmp
cs
movs
jnp
lds
js
outs
xlat
aam
push
retf
out
push
lahf
stos
test
cmp
sub
inc
loopne
ins
retf
mov
and
xchg
xchg
gs
jbe
push
test
push
and
shr
pmulhw
(bad)
ficomp
pop
(bad)
iret
pop
or
out
or
and
mov
add
mov
call
adc
or
retf
add
int3
pop
or
cmp
fsubr
or
jle
les
xor
sub
mov
(bad)
stos
and
lds
inc
mov
or
adc
cld
dec
xor
jnp
cmp
and
popa
mov
xlat
iret
xchg
adc
fld
mov
jb
jmp
pop
and
xchg
daa
or
popa
fcom
xchg
mov
adc
mov
add
les
xchg
loope
cmp
movs
jb
mov
gs
jge
jno
dec
mov
mov
or
cmp
addr16
xchg
enter
mov
dec
cmp
ins
cmp
test
jp
bound
sti
fsubp
xchg
add
add
shl
test
xchg
stos
dec
in
shr
add
dec
mov
inc
mov
add
or
outs
inc
xchg
cs
int
xor
rcl
add
dec
repnz
inc
lahf
(bad)
les
sub
and
pop
in
sahf
or
inc
leave
and
xlat
mov
leave
fisub
mov
mov
sub
jmp
jg
or
mov
test
out
inc
loop
xor
xor
and
adc
scas
daa
fstp
or
push
xor
out
add
jmp
dec
cmp
gs
cmp
mov
lock
mov
pop
jmp
aam
sbb
mov
jecxz
int3
jmp
mov
sub
jae
pop
movs
int3
scas
mov
test
push
lds
aam
retf
jg
and
popa
sbb
pop
xlat
(bad)
call
je
xchg
sti
lahf
push
adc
outs
or
jbe
aas
test
mov
leave
movs
mov
into
jb
cmps
dec
ins
in
push
sahf
les
or
daa
sbb
(bad)
(bad)
mov
neg
scas
ins
jns
aas
mov
rol
in
sub
ja
pusha
int
adc
lods
fld
xchg
div
or
or
call
pop
(bad)
mov
jp
push
sbb
xor
sahf
push
xchg
cs
cli
in
js
sub
lods
loop
mov
adc
dec
les
js
push
xchg
push
in
(bad)
xor
ret
mov
ret
cmp
push
pusha
shr
cli
dec
cwde
mov
push
js
cmp
test
add
mov
inc
nop
add
dec
scas
js
test
jecxz
imul
xchg
jge
outs
in
mov
sbb
mov
lods
ins
add
cdq
xchg
mov
stc
sub
cmp
ds
cdq
imul
aam
and
lahf
imul
ins
xor
lds
mov
fs
or
loopne
cmps
ins
push
in
test
pop
test
(bad)
lock
hlt
pop
inc
xor
xchg
mov
lahf
xchg
mov
sahf
cdq
sub
ss
xor
mov
daa
jl
(bad)
out
test
stos
(bad)
(bad)
(bad)
in
push
iret
(bad)
mov
arpl
or
xchg
or
push
pop
pop
je
ins
xchg
nop
test
iret
test
jmp
or
or
mov
mov
cmps
mov
mov
lahf
sbb
add
or
iret
xlat
mov
std
fs
fs
adc
cld
movs
push
(bad)
mov
(bad)
mov
scas
imul
push
and
pop
sbb
jecxz
cmps
jp
call
mov
or
ins
jecxz
ret
cmp
js
cdq
call
or
sub
(bad)
pop
sub
repnz
inc
inc
enter
pop
outs
(bad)
pop
jmp
xor
lea
xchg
js
xchg
cmc
popa
(bad)
lahf
sub
lahf
shl
adc
cmp
cmp
shl
mov
loop
leave
fisttp
push
sub
xlat
adc
jecxz
cli
pop
int3
ror
mov
mov
test
outs
mov
xchg
pop
sub
lock
add
or
jmp
mov
mov
mov
pop
push
movs
in
dec
das
xchg
inc
(bad)
cmp
test
mov
push
push
pusha
push
add
pop
retf
dec
(bad)
xchg
add
adc
outs
xchg
clc
cmp
and
xor
daa
and
push
fimul
jno
jno
add
inc
dec
js
int
dec
inc
fwait
push
shr
clc
js
xor
scas
dec
inc
pmaxsw
pop
xchg
pop
test
mov
push
js
(bad)
push
mov
mov
push
aas
mov
bound
xchg
xchg
cs
sti
mov
jmp
inc
je
sbb
cmp
cmp
movs
(bad)
adc
sti
push
ret
fucomip
xor
sti
xor
xchg
and
dec
dec
mov
cmp
adc
repz
call
mov
jo
jmp
imul
pop
out
pop
ret
in
nop
ficomp
loopne
or
mov
or
xor
pop
(bad)
pop
loop
outs
mov
jmp
fisubr
mov
jle
fnstcw
dec
xchg
fsubp
cld
pop
mov
out
cmp
lahf
push
(bad)
dec
nop
xchg
add
jns
xor
dec
jle
int
fadd
inc
xchg
fisttp
stos
int
push
xor
das
aam
in
push
adc
leave
xor
(bad)
add
ins
mov
pusha
repz
add
pop
inc
cmp
(bad)
ds
out
scas
mov
retf
iret
jl
out
add
jle
pusha
mov
mov
mul
mov
int
fdiv
dec
sub
les
jecxz
inc
xor
push
inc
adc
sbb
scas
outs
cld
mov
dec
cwde
or
aaa
jne
mov
pop
mov
push
xor
in
xchg
sub
call
jae
outs
call
mov
mov
cmp
or
aas
imul
fmulp
movs
jnp
stc
sub
push
sbb
enter
inc
and
das
jg
pop
je
jbe
inc
and
inc
test
(bad)
or
mov
loopne
and
mov
clc
fiadd
out
jle
call
sub
ins
inc
inc
mov
mov
pop
sub
jg
cs
pop
sahf
mov
fnstenv
out
jge
neg
pop
xor
jge
sub
das
jp
sub
in
scas
or
lods
xchg
mov
jns
cmp
(bad)
call
popf
(bad)
lods
mov
jns
aam
and
push
ins
fs
dec
js
jmp
sbb
pop
sar
pop
fstp
je
movs
jmp
pop
je
add
lods
pop
stos
xor
outs
shl
fidivr
in
arpl
jg
mov
aaa
xor
jbe
and
mov
jg
cmc
and
pusha
fimul
dec
pop
xchg
add
xchg
sbb
fs
push
test
xor
fisttp
xchg
leave
xor
clc
jmp
fild
sbb
push
dec
xor
jmp
push
(bad)
cmp
xor
lock
adc
(bad)
mov
push
xor
add
jne
xchg
loop
push
retf
cmc
xchg
leave
mov
xchg
ss
pop
icebp
jnp
sbb
fistp
mov
sti
jmp
cmp
ins
xor
and
test
cs
rcl
pop
shl
or
cmps
push
in
sub
es
aad
pop
add
dec
xor
or
pop
mov
out
std
cdq
and
clc
call
mov
cmp
mov
fs
push
push
and
cmp
in
ror
push
jmp
jne
ins
lea
jge
cli
loope
cmp
cmc
push
scas
sbb
mov
cmp
fs
fimul
ror
lahf
xchg
ins
pusha
aaa
scas
imul
stos
xor
sbb
fcomp
cwde
scas
outs
dec
jno
stos
sub
pop
repnz
aad
sbb
frstor
js
jns
jbe
mov
fs
sub
out
inc
cmp
sub
test
inc
sbb
sub
or
add
icebp
adc
xor
in
jo
sub
add
std
imul
lahf
lea
and
xor
mov
push
inc
adc
pop
enter
pop
mov
movs
or
leave
(bad)
xchg
inc
mov
jmp
cwde
inc
mov
call
aad
js
movs
and
jmp
popa
jnp
adc
jmp
sub
push
lods
shr
push
or
mov
sub
xchg
ds
(bad)
out
(bad)
shl
pop
dec
mov
nop
fild
enter
pop
fild
and
outs
xchg
repz
inc
mov
mov
enter
js
xchg
sub
cmp
and
push
enter
fstp
lock
retf
mov
test
scas
out
push
jecxz
adc
mov
call
jg
sahf
aad
icebp
nop
jno
mov
jge
push
mov
pop
cli
mov
sbb
aas
mov
dec
pop
push
leave
xchg
jge
jne
mov
mov
dec
and
or
cmp
jnp
ror
mov
dec
in
mov
jecxz
lods
into
inc
push
xor
pop
sbb
lods
rcl
inc
cli
adc
pusha
int3
jbe
and
bound
(bad)
xchg
in
xlat
retf
inc
int3
les
xor
push
out
into
xor
inc
mov
mov
(bad)
out
cwde
mov
inc
shl
pop
loope
mov
pop
sub
hlt
jecxz
and
push
xchg
add
or
mov
stos
mov
sti
clc
es
dec
into
push
mov
mov
repnz
mov
mov
(bad)
sbb
addr16
int3
pop
das
adc
push
iret
xchg
(bad)
out
ficom
int3
in
stos
jle
inc
xor
fwait
jle
pop
repnz
nop
push
sbb
jb
xor
jmp
add
pop
jmp
inc
adc
jecxz
rcr
sub
sbb
lds
outs
add
and
push
or
xor
lock
cmps
sbb
inc
stc
jnp
cmps
pop
mov
icebp
xadd
cmp
or
mov
lds
out
xor
pushf
add
fwait
xor
inc
cmp
mov
mov
inc
push
inc
pop
mov
dec
and
popf
push
repz
ret
cld
es
or
leave
ja
push
in
sahf
mov
addr16
dec
push
push
jb
push
in
je
fiadd
sbb
jl
jge
cmp
inc
sbb
scas
xchg
fisub
(bad)
pop
sti
pop
mov
mov
push
mov
in
push
adc
or
call
cli
or
push
pop
retf
inc
sbb
ror
mov
push
jl
out
fs
jb
(bad)
sbb
push
retf
call
pop
jmp
(bad)
sub
test
and
push
mov
or
scas
sub
fwait
push
mov
pop
loope
mov
cmp
jg
std
call
sbb
rol
lods
inc
mov
fs
es
std
loope
cmps
mov
xchg
hlt
xchg
push
pop
dec
xor
sub
dec
lods
enter
ret
ss
pushf
leave
cmp
push
sub
inc
aam
add
pop
(bad)
jge
xor
cmp
retf
push
ins
pop
mov
xchg
addr16
cmp
test
adc
popa
xchg
rcl
mov
mov
repnz
rol
lock
mul
gs
in
mov
outs
and
jb
dec
call
jnp
popa
mov
inc
pop
pop
pop
push
ins
or
xor
xor
test
pop
sbb
jecxz
and
adc
call
mov
jae
scas
sbb
fnsave
ret
es
push
mov
fcmovnb
sbb
jbe
sub
sub
sbb
mov
push
pop
mov
sbb
mov
adc
inc
pop
xor
pop
fimul
jb
sub
fcomip
fiadd
shr
inc
xor
jo
ins
fdiv
shl
mov
stos
popa
cwde
pop
xchg
push
cmp
push
push
call
(bad)
cld
jne
xchg
sub
(bad)
(bad)
stc
mov
push
pop
adc
(bad)
pop
div
ss
jge
mov
push
push
stos
mov
ins
add
mov
fwait
ds
push
fs
outs
jg
(bad)
(bad)
or
ins
inc
push
mov
sbb
ret
imul
cs
fnsave
ss
shr
(bad)
push
fisubr
pop
retf
std
fistp
cli
xor
not
add
in
(bad)
ss
aam
xlat
sbb
repz
enter
dec
loope
imul
loope
aam
imul
scas
pop
popf
add
mov
aad
jl
icebp
loop
out
xchg
ja
inc
scas
push
call
fwait
mov
(bad)
mov
xchg
cmps
mov
push
jns
sub
adc
add
(bad)
int3
dec
add
imul
mov
sbb
xchg
aas
lahf
jnp
or
mov
repnz
test
xchg
pop
cmp
fisttp
idiv
dec
xor
jmp
add
xor
lods
in
in
and
xchg
aaa
jmp
push
xchg
xchg
imul
sbb
cmp
jmp
pushf
outs
jg
cmc
jle
cmps
rcr
pushf
dec
ficomp
sbb
out
pop
jne
fdivrp
pop
mov
push
xchg
mov
popa
inc
pop
inc
cwde
or
xlat
ror
xchg
pop
cwde
inc
jmp
sub
jae
xchg
jp
ds
stos
push
in
call
ss
mov
cmc
(bad)
jnp
pushf
pop
fnstcw
pop
fisubr
pop
(bad)
adc
lock
mov
sar
repz
dec
dec
retf
mov
mov
cs
ja
jmp
inc
xchg
or
mov
dec
pop
and
test
mov
in
xchg
in
jnp
aad
repnz
mov
dec
mov
(bad)
add
jae
sbb
lahf
sub
or
out
sar
push
cmp
pop
data16
push
add
out
lock
sti
scas
sbb
vpmulhuw
test
movs
mul
jno
(bad)
xchg
pop
movs
int
fcomp
xor
jns
add
call
cs
jle
cmp
enter
nop
inc
dec
repnz
mov
mov
or
push
sub
pop
int3
jmp
dec
loope
xchg
(bad)
push
jg
jbe
call
mov
inc
cld
cmp
(bad)
stc
shl
adc
les
(bad)
fbstp
aaa
imul
xchg
mov
mov
pushf
pop
sbb
iret
inc
ror
scas
pop
fs
lock
movs
mov
arpl
sbb
addr16
lock
and
repz
into
retf
dec
adc
bound
and
add
mov
outs
or
in
jecxz
push
xchg
or
stc
cmp
loope
cmp
inc
jae
add
cmc
cmp
jmp
and
inc
ret
es
xor
ja
out
dec
adc
loopne
push
mov
or
pop
jmp
lods
mov
(bad)
jns
imul
lock
dec
lahf
inc
test
sub
outs
mov
jno
jecxz
sbb
mov
lds
stos
rol
add
jecxz
xchg
jge
adc
mov
rcl
cmp
jno
leave
sbb
arpl
mov
test
push
std
js
add
jns
mov
sub
rol
push
xchg
lods
fadd
mov
sahf
and
xchg
push
or
mov
lods
cdq
loopne
cmp
dec
outs
ret
arpl
cmp
sti
jecxz
sbb
test
dec
add
mov
jo
push
cmp
cli
or
dec
lods
cld
mov
icebp
pop
icebp
ins
and
hlt
push
or
and
pop
in
jbe
nop
jl
sbb
jmp
repz
(bad)
dec
jge
retf
jg
ja
gs
ins
(bad)
int
or
xchg
push
cmp
outs
and
stc
iret
mov
imul
out
pop
xchg
mov
inc
add
add
outs
adc
push
mov
jl
lahf
stc
xor
jg
imul
lds
cdq
xor
fcomp
xchg
inc
shr
shl
daa
jb
sub
add
mov
cmp
sbb
pushf
push
test
sub
pop
outs
push
loop
sub
mov
mov
mov
imul
jns
in
jl
add
leave
inc
mov
(bad)
mov
cdq
inc
xchg
bound
mov
scas
addr16
mov
ins
popa
stc
or
inc
adc
sub
inc
cli
leave
call
cmp
cwde
mov
adc
retf
jbe
xor
sbb
and
nop
mov
sar
icebp
push
mov
outs
mov
push
add
pusha
and
data16
out
and
out
sbb
ins
dec
xchg
inc
(bad)
aas
ficom
das
popa
stos
sahf
or
mov
stos
jmp
xor
inc
xchg
mov
popf
js
shr
js
xchg
div
inc
jnp
outs
jecxz
mov
jno
fbstp
in
cmc
xchg
jp
jle
shl
sbb
int3
dec
in
ins
(bad)
sub
jge
mov
fiadd
xchg
jg
xor
mov
push
(bad)
pop
mov
xor
pop
popf
add
ds
int
mov
test
in
inc
call
test
and
test
pop
cs
pop
imul
jmp
call
mov
and
or
xchg
retf
lods
dec
xchg
mov
(bad)
out
mov
retf
xor
inc
shl
shl
or
pop
test
jae
cmp
and
test
pop
pop
sub
inc
aaa
cmps
mov
inc
es
adc
pop
jle
call
xchg
push
inc
xchg
lods
pop
enter
mov
or
ss
adc
lock
ds
shl
sbb
cmps
in
shl
ss
mov
push
out
loop
mov
out
lods
stos
inc
inc
and
dec
hlt
cmps
cmps
outs
jmp
das
cld
pop
in
sbb
in
push
mov
repnz
sub
mov
or
sbb
mov
mov
mov
retf
sbb
dec
sbb
outs
daa
sub
lock
jbe
cmc
stos
sub
mov
or
loope
lahf
jp
push
cmp
cmps
loope
ffreep
ror
mov
pop
test
and
frstor
nop
jno
cmps
loopne
xchg
cmp
ficom
xchg
and
xor
inc
adc
ret
dec
outs
xchg
xchg
add
xor
stos
push
jge
pusha
mov
sbb
cmps
sub
fld
mov
leave
out
sbb
das
sub
stc
push
jmp
fldenv
adc
add
inc
test
out
xlat
ins
mov
icebp
mov
mov
sub
xor
cmps
test
sbb
mov
dec
pop
retf
cmp
into
mov
scas
xchg
movs
jl
mov
cmps
loopne
pop
clc
outs
adc
sbb
or
das
data16
fwait
mov
sahf
ror
cmp
xlat
arpl
dec
lahf
popa
mov
ret
fsubr
mov
icebp
fcomp
scas
outs
hlt
ror
cmp
test
sbb
push
ffree
add
inc
xchg
addr16
lds
fsubr
pop
sti
mov
mov
rcl
add
ins
push
mov
in
jp
imul
fwait
je
push
pop
xor
and
adc
or
cmp
jp
jno
rol
mov
stc
(bad)
sahf
sub
sbb
outs
dec
adc
sbb
ins
dec
jns
adc
jge
sub
mov
retf
jmp
adc
in
cmp
dec
adc
sub
gs
jmp
and
aas
loope
test
dec
or
inc
jecxz
adc
sbb
clc
xor
mov
retf
in
pop
add
mov
mov
mov
xor
add
sub
daa
jmp
int3
nop
lahf
ins
pop
js
arpl
inc
adc
dec
ja
std
cmp
push
mov
out
nop
int3
mov
out
retf
mov
adc
ret
pop
sbb
push
mov
adc
inc
rcl
sub
xchg
sbb
mov
fwait
das
fs
icebp
ds
add
mov
leave
aad
out
dec
cmp
push
add
sub
dec
xor
call
out
cmps
jo
and
mov
dec
sbb
movs
shl
repnz
rcl
dec
mov
iret
test
mul
clc
jp
pop
sub
sbb
cmps
sub
cdq
je
shl
add
fisttp
(bad)
data16
je
outs
pop
rol
dec
js
mov
(bad)
(bad)
pop
retf
or
push
adc
inc
mov
int3
lods
shl
dec
mov
jge
cmp
lahf
movs
inc
ins
sub
lahf
jmp
xchg
pushf
fcomip
jmp
das
rcr
(bad)
enter
aaa
loop
push
jnp
(bad)
push
call
test
mov
push
mov
div
rcr
mov
or
popf
sbb
pop
stos
in
icebp
xor
push
fld
xor
(bad)
aas
pop
or
dec
aas
call
sbb
popa
ins
mov
pop
cmp
inc
mov
dec
cmp
daa
jmp
inc
fimul
jae
lods
fild
push
pop
loopne
add
jp
sub
sub
cmps
adc
enter
inc
ja
pop
rol
sbb
sar
push
push
fs
inc
pop
inc
lods
mov
fbstp
nop
mov
imul
xchg
xchg
xchg
push
add
add
push
xlat
pop
imul
shr
adc
outs
push
lods
(bad)
add
leave
add
test
lock
dec
cmp
and
out
cmp
pop
aaa
ficomp
xor
aad
or
imul
fcmovne
sahf
jle
jmp
and
xchg
mov
pop
jmp
(bad)
jb
mov
pop
push
xor
mov
test
mov
inc
dec
cwde
inc
pop
or
jno
scas
add
ins
jae
fs
and
pop
xor
or
inc
aaa
ret
pop
add
dec
jb
mov
mov
xor
and
das
je
jns
js
aas
lahf
not
loope
push
push
das
ins
mov
(bad)
gs
fadd
shr
mov
jle
cwde
jbe
loop
mov
push
call
repnz
inc
jle
in
push
out
jmp
push
adc
or
rcl
xchg
jecxz
enter
movs
test
jno
call
std
repz
loop
je
call
push
pop
out
push
or
jae
call
or
out
mov
in
pop
(bad)
sbb
inc
sbb
jnp
jns
or
or
clc
add
cli
mov
mov
std
jp
cmp
sub
in
or
inc
out
popf
sub
mov
out
popf
cmp
jmp
gs
movs
(bad)
cmc
hlt
xor
mov
dec
adc
push
adc
adc
jecxz
push
data16
push
push
pop
pop
stos
mov
or
mov
cmp
mov
ds
gs
or
sbb
test
sub
mov
(bad)
lea
sbb
push
ret
push
or
and
jmp
sbb
push
mov
outs
cmp
out
cvtps2pd
mov
scas
aam
sti
push
mov
and
fsub
xor
outs
fcmovbe
cmp
add
inc
cld
jmp
inc
and
fadd
arpl
das
shl
sbb
stc
mov
dec
mul
xchg
popf
pop
mov
cmps
xchg
int3
mov
add
sbb
xchg
push
js
ins
mov
ins
cmp
fisttp
dec
test
jmp
imul
xlat
aad
(bad)
mov
and
ja
jmp
sub
cmc
xchg
inc
sub
push
mov
adc
sbb
jbe
(bad)
scas
jae
cdq
imul
pop
pop
xchg
or
sub
jmp
and
cmc
mov
fsub
or
xor
sbb
enter
mov
aam
js
push
dec
leave
pop
push
jne
imul
lods
aas
jmp
out
clc
jno
pop
or
jns
jmp
mov
push
dec
push
(bad)
je
jno
adc
dec
call
push
mul
imul
rcr
jmp
xor
mov
not
test
and
pop
js
pushf
mov
fs
and
mov
clc
dec
imul
iret
jbe
push
dec
mov
mov
hlt
hlt
jbe
gs
pop
or
mov
xor
push
dec
iret
jmp
sbb
or
push
out
jecxz
push
stc
push
ins
data16
add
jl
mov
push
dec
pop
imul
sbb
push
jns
pop
inc
xchg
cwde
xor
mov
jecxz
sar
jecxz
imul
popf
mov
or
ss
movs
popf
mov
mov
dec
cs
aas
jecxz
pop
cmps
out
add
mov
ror
jo
jo
cmp
rcl
pop
les
dec
out
inc
test
popa
xchg
sbb
sbb
push
stos
outs
hlt
cmps
dec
mov
pop
jnp
shr
int3
pop
or
sub
shr
mov
aad
mov
fdiv
shr
call
das
inc
fisub
dec
cmp
pop
call
ss
dec
or
pop
cmp
sub
ja
xchg
leave
mov
cwde
fild
and
pushf
inc
fisubr
aas
outs
into
aad
shl
(bad)
add
lds
dec
ja
push
in
mov
dec
pop
ins
mov
pop
popf
sub
fstp
and
fnstenv
jmp
stos
jbe
lods
test
add
jbe
add
and
mov
popa
(bad)
pop
xor
xchg
pop
fsin
pop
pop
ror
and
push
int
leave
in
cmps
dec
pop
jbe
add
sbb
mov
sub
mov
test
call
lods
lods
call
xor
push
dec
call
into
jge
add
mov
mov
out
mov
sbb
inc
in
jg
(bad)
das
mov
mov
pop
les
dec
sbb
cli
push
pop
mov
lahf
cmp
loopne
out
xchg
xor
mov
mov
and
sub
sti
ret
sub
xor
or
push
(bad)
lods
xchg
push
fs
or
loopne
and
adc
sub
and
mov
or
je
cmps
loope
jl
mov
pop
sub
mov
pop
js
dec
shr
jae
xchg
call
pusha
sub
retf
popa
push
push
into
pop
fs
pop
outs
sub
pop
retf
rcr
sbb
add
outs
test
jmp
cmp
adc
lahf
lods
loopne
or
push
xlat
jg
aaa
dec
mov
and
inc
rcl
inc
sub
sub
enter
ins
jmp
sub
aas
in
jbe
outs
dec
dec
push
out
sahf
mov
(bad)
cmps
dec
push
imul
dec
xor
leave
ja
stos
push
scas
adc
jle
(bad)
fld
data16
sbb
mov
or
loope
les
cmc
mov
sub
test
and
add
sahf
pop
test
das
dec
scas
cs
sub
lock
push
cs
out
adc
mov
mov
scas
xchg
xchg
push
adc
adc
or
jbe
dec
pop
(bad)
adc
cmc
xor
xchg
jo
jmp
jle
ins
cmc
inc
lahf
repnz
pop
dec
pop
add
popa
test
neg
inc
(bad)
adc
cmc
stos
and
lods
in
mov
pop
jmp
xor
aam
fnstenv
mov
jae
sti
jae
outs
lock
das
pushf
(bad)
out
out
adc
fwait
jmp
jge
or
lea
cmp
cmps
adc
pop
(bad)
and
xor
mov
xor
and
adc
push
inc
sbb
jp
mov
mov
cmp
shufps
xor
outs
ins
lods
xchg
nop
mov
dec
int3
add
ret
adc
sub
ins
test
xchg
(bad)
test
push
idiv
add
pop
les
add
cli
xchg
retf
clc
shl
xor
bound
stc
mov
push
mov
rol
repz
xor
xchg
xchg
pop
jmp
data16
mul
jmp
mov
scas
stc
fcom
jne
mov
cmp
les
mov
inc
xor
out
jle
movs
mov
jbe
cmc
pusha
imul
jge
icebp
lea
dec
(bad)
push
scas
mov
popa
ja
(bad)
pop
sub
xor
push
pop
sbb
mov
movs
mov
lahf
jl
and
and
fmul
hlt
movs
xchg
and
fdiv
stos
aaa
sbb
mov
sub
push
stos
lods
pop
ficomp
inc
mov
xlat
and
pop
jmp
mov
lock
int
cmps
xlat
xor
sub
repz
mov
xchg
fld
mov
add
dec
jl
or
rcr
dec
arpl
outs
dec
shl
mov
repnz
lods
pushf
dec
mov
push
jb
push
mov
push
inc
jne
ss
ret
nop
push
and
sbb
retf
std
mov
and
pop
dec
inc
sub
scas
sbb
xor
sar
clc
push
inc
xlat
cmc
cmp
jecxz
aam
and
jg
xor
aas
scas
sti
ror
in
add
sbb
shl
in
cld
inc
adc
cld
out
and
jecxz
mov
(bad)
(bad)
fcomp
mov
and
jne
dec
into
xchg
sub
(bad)
(bad)
push
outs
and
pop
cs
mov
mov
(bad)
mov
pusha
inc
test
inc
gs
xor
je
xor
pop
push
pop
shl
in
jmp
dec
ja
add
sahf
shl
mov
push
sbb
mov
bound
int
or
mov
and
retf
pop
pusha
and
mov
add
or
and
jg
test
pop
cmps
scas
stc
mov
movs
xor
js
sub
mov
sub
cld
(bad)
out
mov
dec
mov
lods
pushf
out
aaa
xlat
sbb
je
cld
shl
jns
(bad)
imul
(bad)
lods
pusha
jnp
shl
jge
adc
hlt
xor
inc
mov
loope
lea
ret
outs
inc
pusha
gs
pop
jl
mov
jnp
les
mov
mov
adc
xchg
inc
adc
sub
shl
dec
mov
ret
shl
or
push
jne
pop
pop
lods
mov
out
mov
in
or
stc
stos
pop
xor
dec
ret
in
popf
stos
mul
mov
stos
adc
idiv
pop
sti
pop
mov
xchg
dec
cmp
add
inc
pushf
pop
xchg
in
sar
sub
xor
ins
repnz
add
out
out
cld
je
mov
mov
push
aam
xchg
mov
jnp
aad
push
push
retf
dec
or
push
lods
pop
iret
repnz
adc
xchg
jnp
cmp
xor
push
push
leave
or
enter
lods
xor
(bad)
in
or
std
mov
in
lahf
dec
jle
mov
ret
xchg
out
rcr
adc
push
out
add
dec
cmps
stc
or
cmp
ja
dec
aad
xchg
adc
sbb
mov
cmp
mov
xchg
sti
frstor
(bad)
mov
pop
mov
movs
xchg
sbb
sub
xor
or
inc
in
xchg
icebp
jnp
xchg
repnz
dec
inc
cli
sti
push
shr
jno
cs
repnz
cmp
xchg
jo
popa
test
mov
push
cmps
inc
sbb
out
push
add
mov
repz
mov
cmp
dec
rcr
pmullw
movs
mov
xor
sub
test
pop
jmp
jge
cmp
pop
retf
nop
inc
movs
or
stos
and
pop
push
fiadd
mov
and
adc
inc
shl
neg
jbe
push
jo
enter
aad
jp
sbb
mov
pop
lds
jno
(bad)
dec
or
sbb
dec
lock
jmp
cmp
xcrypt-ctr
cmps
sbb
ds
and
push
or
pop
or
je
fcomp
sbb
adc
ins
pop
inc
popa
loop
jp
push
les
pop
jbe
cdq
inc
scas
fdivr
ficomp
lods
call
scas
jge
mov
scas
pop
push
xlat
inc
rcr
mov
cwde
sub
inc
or
idiv
sbb
sbb
sub
or
pop
outs
jns
and
gs
(bad)
cs
sbb
sbb
mov
aaa
cmp
push
sub
daa
jp
jb
and
clc
arpl
fnstenv
adc
or
aad
push
push
pop
fdiv
int
pop
push
mov
data16
std
mov
icebp
cwde
xor
jmp
sar
out
mov
dec
inc
xchg
mov
loop
nop
cdq
push
scas
add
jae
xchg
stos
add
call
data16
cmp
and
mov
cdq
aam
mov
jmp
ins
ds
add
imul
mov
(bad)
loopne
add
jecxz
and
add
cwde
or
mov
sub
xchg
das
xlat
pushf
test
loope
je
in
add
(bad)
mov
stc
test
call
dec
sub
retf
add
nop
adc
or
call
leave
(bad)
lahf
adc
xor
mov
add
call
nop
push
in
adc
test
ja
div
arpl
sahf
test
ret
(bad)
mov
div
mov
ss
adc
loope
jo
in
aad
sti
adc
lock
xchg
sbb
inc
int
aaa
adc
addr16
cli
lock
mov
push
shl
xlat
retf
(bad)
add
ror
fmul
inc
movs
movs
iret
mov
inc
pop
or
cdq
mov
dec
xlat
jle
adc
dec
cmp
shr
sahf
push
sub
push
test
scas
pop
lock
sbb
call
sbb
in
sub
cli
fcomp
out
cmp
xchg
movs
shr
out
adc
cmp
and
cli
pop
mov
enter
jae
je
pushf
fwait
in
int3
loopne
adc
ins
aad
mov
(bad)
sbb
xor
mov
or
push
shl
hlt
cmp
push
inc
push
rcr
inc
mov
pop
jl
fwait
loope
push
adc
sub
sub
push
adc
mov
mov
fild
enter
daa
lahf
fidiv
jno
and
xchg
cmp
hlt
mov
jmp
ror
cli
addr16
xchg
fs
inc
sub
not
or
mov
push
pop
push
mov
jnp
jmp
push
std
enter
out
jb
lds
jg
push
retf
xchg
adc
push
in
retf
or
mov
xchg
imul
mov
loopne
mul
and
push
xor
test
jecxz
push
inc
xor
xchg
sub
pop
cli
rol
loopne
cmps
sub
in
mov
idiv
adc
pop
imul
or
fwait
push
and
stos
mov
rcr
mov
cld
ds
int3
pop
ins
jl
cmps
and
jmp
xlat
lea
jp
pop
mov
int3
xchg
dec
inc
fnstcw
mov
dec
xchg
call
and
fsubrp
movs
sar
push
stos
jecxz
cmp
dec
add
fcmovne
cld
daa
daa
rcr
mov
imul
pusha
and
jmp
js
in
sahf
xor
ins
test
pop
je
mov
jb
out
fistp
ss
into
fcomp
mov
outs
into
lds
out
dec
out
or
outs
cmps
add
xor
mov
or
mov
sbb
adc
pop
push
or
push
fcom
jns
push
inc
(bad)
xor
mov
clc
call
movs
and
push
sbb
hlt
loope
fsubrp
push
addps
lods
mov
mov
aas
dec
inc
cmc
jnp
cmp
jmp
or
xchg
pop
jge
fadd
xor
sbb
pop
xchg
out
or
jno
mov
mov
(bad)
test
ds
fisttp
arpl
xchg
push
mov
dec
mov
ror
xchg
ss
pop
stos
rcr
daa
sbb
outs
ret
dec
push
lea
cli
lods
fild
or
retf
cmp
inc
sbb
sub
xchg
push
push
mov
ja
in
popf
ror
push
adc
fild
(bad)
cdq
pop
xchg
mov
sti
dec
mov
jns
add
leave
stos
inc
(bad)
push
repnz
cld
test
add
dec
loopne
(bad)
es
and
inc
pop
push
icebp
push
push
ret
pop
in
pushf
lahf
sbb
inc
ins
xchg
dec
test
xor
cwde
cdq
sub
enter
mov
fst
mov
and
aas
mov
test
ins
and
jp
mov
mov
sar
mov
jo
or
push
pop
arpl
jle
mov
lds
imul
retf
push
fimul
cmp
leave
lds
bound
dec
xor
pop
inc
adc
jecxz
cmp
push
sbb
loopne
xchg
cli
div
maxps
fldenv
gs
xchg
pop
or
out
cmp
inc
jle
jp
inc
inc
sbb
add
mov
test
cmp
mov
jb
iret
(bad)
out
pop
cdq
cmp
lock
jle
outs
xchg
fcom
std
cmp
scas
aas
hlt
xor
(bad)
repz
sbb
inc
cmp
pushf
jne
call
jo
popa
xchg
xchg
sbb
pop
dec
adc
lods
shl
pop
mov
adc
pop
cmc
retf
sti
pop
sahf
adc
mov
std
cdq
pop
(bad)
test
cdq
xchg
sbb
cdq
ins
adc
popa
adc
mov
ds
sahf
icebp
stos
into
iret
and
xor
imul
push
push
and
dec
sub
push
hlt
repz
popf
call
sbb
dec
jb
ins
jnp
jbe
mov
call
lds
repnz
adc
fwait
out
mov
cmp
out
hlt
push
xor
in
ins
sbb
push
scas
pop
mov
mov
mov
and
xchg
adc
test
addr16
sahf
jne
xchg
mov
adc
mov
(bad)
sbb
mov
sbb
and
inc
push
push
in
test
shr
pop
hlt
jecxz
dec
jo
and
mov
or
mov
and
ja
sbb
inc
mov
(bad)
fisttp
in
(bad)
adc
mov
mov
xor
stos
pop
mov
push
mov
mov
dec
(bad)
xlat
mov
shl
fsub
jge
repnz
out
cmovs
(bad)
je
je
(bad)
jae
jae
xchg
sbb
mov
push
pop
adc
xor
movs
shr
(bad)
aam
loopne
sbb
je
popa
or
test
mov
xchg
test
psubd
iret
addr16
hlt
jb
mov
cmp
sbb
or
jnp
call
push
sbb
push
xor
loop
mov
xor
jo
mov
inc
jns
push
adc
xchg
adc
jmp
imul
out
leave
inc
cld
(bad)
adc
addr16
push
ficom
sub
loopne
outs
test
cmp
cmp
jne
popf
cwde
push
xor
out
mov
xchg
adc
lahf
xor
and
cmp
ror
pop
into
stc
adc
les
push
outs
or
lahf
push
or
ins
sar
int
or
dec
je
push
lock
sbb
lds
mov
icebp
nop
shl
jmp
inc
mov
dec
dec
shr
mov
mov
aam
call
inc
addr16
jmp
and
mov
pop
push
mov
xor
call
jp
mov
popf
fs
outs
jae
jae
stos
mov
popf
shr
mov
loopne
push
leave
rcl
lods
fchs
inc
add
pop
and
mov
loope
xlat
push
in
stc
mov
mov
shr
(bad)
iret
xchg
popf
add
mov
test
mov
lahf
dec
cmp
(bad)
ins
icebp
lds
adc
jmp
inc
cmps
xor
push
scas
or
(bad)
jg
test
aad
jae
(bad)
jecxz
pop
fmul
popa
ss
xchg
inc
scas
xchg
call
fsubr
mov
push
mov
pop
stc
stos
stc
int3
jmp
mov
retf
scas
(bad)
call
ds
mov
xchg
or
pop
cmp
dec
xor
pop
mov
cmp
mov
or
scas
or
adc
push
stos
neg
out
iret
pop
sub
stos
dec
nop
sbb
aaa
gs
mov
mov
push
push
daa
cmps
push
push
dec
dec
outs
jmp
sbb
dec
adc
popf
jp
in
mov
test
loopne
(bad)
adc
lods
xchg
pop
xlat
mov
fs
shl
repnz
push
mov
jle
fidiv
pop
inc
push
lock
push
pop
loope
sti
les
and
and
outs
sar
call
mov
aam
xor
les
stos
sbb
in
or
cmp
cmp
or
add
cmps
cld
dec
test
inc
pop
jb
stc
iret
int
mov
and
xchg
cmp
popa
fistp
daa
imul
xor
dec
sub
bound
jge
and
das
dec
mov
mov
outs
leave
push
adc
or
aaa
and
lds
sub
(bad)
sbb
daa
cmp
inc
jae
push
lock
jg
ins
fs
sti
out
and
jge
pop
mov
icebp
icebp
loope
clc
pop
pusha
jl
std
push
xor
int3
stos
jb
dec
jnp
pusha
xchg
fwait
call
mov
in
cmp
and
sbb
les
dec
pushf
mov
test
ror
cmc
xchg
or
sub
cdq
ficomp
mov
imul
(bad)
leave
push
sbb
cld
or
rcr
pusha
or
fimul
and
not
adc
jnp
cmp
mov
sub
jp
inc
test
sar
call
dec
stc
ret
mov
das
pop
mov
xchg
mov
out
dec
imul
js
pop
mov
cmps
outs
cmps
xchg
imul
xchg
xchg
mov
outs
dec
ret
(bad)
into
mov
or
adc
pop
gs
jns
push
sub
or
mov
(bad)
shl
push
xor
sub
popa
cmp
imul
out
lahf
mov
mov
setno
sub
pushf
in
clc
dec
repz
pop
sbb
icebp
loopne
push
hlt
mov
popf
ror
call
add
scas
scas
xchg
leave
jae
jge
rcr
pop
mul
cdq
mov
cmp
in
add
adc
shr
adc
retf
mov
xchg
fimul
sub
test
lds
inc
xor
lds
mov
cmp
and
xchg
retf
ins
popa
mov
jnp
jl
stos
outs
cmp
mov
mov
out
loop
and
div
mov
mov
icebp
jl
out
and
ret
push
cs
or
stc
mov
and
xchg
rcl
out
fld
jmp
movs
sbb
xor
addr16
pop
jle
xchg
xchg
call
loope
mov
call
test
mov
pop
sbb
call
jne
dec
cmp
pusha
and
in
push
sahf
cmps
les
pop
dec
sbb
xor
icebp
ret
test
xchg
mov
cli
mov
mov
clc
mov
clc
mov
idiv
sbb
push
mov
imul
(bad)
jle
jnp
lea
lods
xchg
add
aaa
bound
sbb
imul
xlat
mov
test
dec
add
(bad)
xor
sbb
lea
aam
sbb
scas
bound
ds
pop
sub
mov
jmp
imul
and
mov
mov
sbb
xor
sub
mov
pop
js
mov
nop
mov
and
mov
js
repnz
mov
mov
dec
das
ins
xor
fwait
pop
adc
mov
sbb
mov
or
adc
inc
and
pop
pop
jg
pop
retf
jno
pop
xchg
stos
inc
or
stc
cmp
or
imul
daa
fisubr
and
rcl
retf
mov
cmp
and
adc
stos
jg
lods
sar
cmp
sbb
movs
xchg
push
sub
xor
xchg
xchg
adc
inc
(bad)
jnp
popf
das
jmp
xor
pop
push
call
add
xor
push
dec
bound
mov
das
mov
test
cmp
in
repz
data16
aas
or
imul
pop
stc
push
and
xchg
inc
mov
out
in
jno
mov
inc
jp
rol
xor
dec
fdiv
ja
fst
xchg
pop
inc
cmc
nop
mov
or
icebp
imul
cmp
aam
or
pop
fwait
dec
popf
adc
dec
or
sub
sub
lock
mov
repz
jmp
adc
arpl
pop
es
jno
sbb
cmps
je
std
fsubr
movs
xchg
inc
jle
ror
cmps
(bad)
and
mov
in
dec
pop
xlat
cmps
lds
lods
test
push
xchg
pop
adc
mov
sub
imul
jb
xchg
push
div
dec
lods
xchg
(bad)
mov
inc
sahf
imul
lds
mov
fistp
cmp
lods
out
mov
cmp
popf
ss
repnz
add
fisubr
popa
xor
in
shl
jo
and
jl
sbb
or
jno
sbb
or
lock
dec
rcr
adc
xchg
pusha
lods
stos
cmp
cld
or
retf
ds
mov
ret
pop
and
jl
and
or
cmp
call
pop
out
cli
pop
sub
pop
dec
jge
and
bound
(bad)
mov
cmp
pop
test
xchg
adc
adc
jbe
gs
jnp
jne
and
popa
loopne
xor
(bad)
ins
or
out
sbb
icebp
pop
jg
out
idiv
out
rol
imul
dec
leavew
xchg
dec
leave
mov
push
addr16
and
fild
ins
test
mov
dec
out
enter
cli
imul
cmp
mov
jg
or
cmp
movs
ret
mov
es
pop
out
icebp
scas
stos
aad
inc
mov
gs
push
push
xor
mov
out
add
out
adc
xor
lahf
jnp
adc
add
fdiv
cmp
scas
call
cdq
lods
xchg
add
(bad)
sub
pusha
stos
sbb
mov
push
mov
mov
jbe
test
arpl
rcr
inc
arpl
push
sti
data16
mov
stc
sbb
push
push
inc
fcmovnbe
jb
or
loope
dec
enter
(bad)
mov
lea
sub
adc
mov
lock
retfw
push
(bad)
xor
inc
test
dec
fmul
adc
sar
std
enter
inc
ins
call
or
dec
loopne
and
test
mov
lods
(bad)
loopne
push
sub
fsubr
cdq
test
ja
push
cmps
or
test
stc
push
jg
xor
in
imul
cmc
movsx
add
nop
stc
push
gs
repz
mov
cmp
std
sub
out
push
adc
xchg
push
mov
mov
nop
mov
adc
pop
inc
mov
hlt
jg
xchg
test
inc
push
int
push
adc
cmp
or
jl
xchg
ins
in
fld
inc
pop
loope
fdivr
arpl
inc
pop
and
stos
in
pusha
add
sbb
or
push
jno
in
cmp
ss
imul
test
pop
push
and
lds
cmp
cmp
push
dec
mov
dec
ds
inc
and
or
add
inc
pushf
jnp
psubd
rol
xor
sbb
out
and
test
in
mov
cs
sub
inc
jge
shl
mov
adc
fcom
popf
stc
shl
mov
mov
jmp
mov
push
pop
imul
pop
dec
sbb
lea
fwait
push
dec
pop
cmps
and
and
lea
mov
idiv
inc
rcr
xchg
adc
dec
push
pop
out
add
frstor
lods
(bad)
fcom
add
pop
sub
mov
mov
call
jae
lock
and
jl
(bad)
jne
jae
pop
aam
xor
mov
in
push
push
loope
xchg
xor
jmp
lods
push
nop
bound
call
push
adc
sbb
ror
aaa
push
les
hlt
(bad)
es
mov
ret
js
mov
je
sub
ret
cmp
push
jp
daa
imul
mov
jg
pusha
loop
dec
out
das
popa
push
push
cmp
rcr
or
push
pop
dec
popf
sub
mov
add
adc
jns
pop
mov
jno
es
dec
mov
ror
std
xor
out
imul
in
sti
jg
retf
test
icebp
pop
addr16
xor
push
mov
mov
jo
and
mov
das
iret
ror
leave
inc
out
push
pop
imul
jo
call
jne
pop
xor
jmp
and
jae
inc
jnp
lock
mov
sahf
sar
vmread
push
into
push
loope
jno
sbb
xchg
popf
cmc
adc
or
push
test
shl
push
push
cmp
xor
repnz
mov
addr16
rol
cmp
loopne
pop
mov
(bad)
cmp
popf
add
std
out
mov
hlt
repnz
repz
cmp
xchg
push
mov
daa
mov
repz
mov
outs
aas
sub
dec
sbb
stos
or
in
jbe
jne
(bad)
inc
push
addr16
and
mov
(bad)
imul
outs
cmp
jmp
cwde
xlat
cwde
mov
adc
outs
jno
mov
inc
cmp
idiv
popf
mov
shl
or
cmp
(bad)
pushf
mov
xor
jmp
mov
out
pushf
cmc
les
pop
std
mov
push
shl
and
in
pop
(bad)
bound
lahf
fistp
cmps
inc
jmp
pusha
test
cmp
imul
mov
out
cmps
or
xchg
or
jmp
ins
(bad)
data16
int
out
fsub
in
mov
jmp
mov
popa
(bad)
push
pop
jb
(bad)
xor
out
cmps
push
mov
or
xchg
scas
push
mov
arpl
push
cmp
mov
add
imul
or
stos
mov
lds
push
je
xor
cmps
cmp
sub
stos
push
je
lods
inc
cs
pop
mov
(bad)
mov
push
cmps
sbb
ds
cmp
sbb
xchg
imul
push
mov
int
mov
jmp
jns
sbb
repnz
or
jp
gs
xor
sbb
xlat
mov
fcom
push
lahf
lods
pop
ins
dec
dec
or
add
xor
pushf
aad
xchg
and
xchg
rol
(bad)
jge
cdq
sub
cmp
in
mov
out
bound
test
aad
(bad)
ins
adc
or
lock
sub
push
jl
jge
mov
idiv
mov
cmp
push
jp
inc
add
sbb
addr16
bound
jg
outs
mov
jg
ret
scas
mov
adc
push
ins
data16
xor
hlt
mov
or
mov
(bad)
mov
mov
mov
lahf
ret
icebp
mov
jmp
rcr
or
mov
cmp
imul
repnz
inc
and
adc
repnz
dec
es
sub
jnp
xor
in
push
mov
adc
ficom
out
movs
mov
lahf
clc
in
fnstenv
fs
data16
sti
sbb
sbb
mov
push
mov
push
inc
and
movs
cmp
ret
push
inc
mov
fxch
idiv
xor
and
outs
out
mov
mov
clc
ds
outs
cli
sbb
loop
xor
dec
dec
lods
les
lods
js
ss
les
xchg
push
mov
imul
ficomp
call
cmp
mov
sub
mov
xchg
xlat
dec
or
cli
lods
push
adc
cmps
inc
add
(bad)
jnp
cmp
sub
and
retf
shl
and
xchg
add
pop
pop
xchg
icebp
and
test
fnstcw
mov
mov
or
out
lahf
arpl
adc
push
and
push
adc
inc
imul
xchg
sub
push
int3
pop
call
std
dec
xor
hlt
add
jp
aam
push
jl
ror
xlat
mov
outs
jle
fimul
cmp
aad
ja
mov
add
pop
popa
nop
sbb
jmp
iret
stos
fcomp
repnz
lea
out
dec
inc
out
mov
mov
pop
mov
adc
adc
mov
inc
sub
push
fwait
mov
dec
and
fs
sub
cmp
jb
add
cli
imul
push
pop
adc
push
dec
out
xchg
pusha
adc
mov
rcl
dec
or
inc
repz
adc
sbb
daa
sahf
lock
mov
mov
sub
sar
test
push
(bad)
jo
xchg
into
add
dec
jecxz
add
sti
jnp
mov
inc
push
and
add
shr
cmps
sahf
pushf
test
dec
outs
adc
inc
push
mov
test
jae
pop
push
in
movs
repnz
xlat
sbb
pop
pop
les
and
cmp
jecxz
push
scas
out
imul
cmp
fldenv
and
and
movs
xor
or
cmps
push
add
and
sbb
aaa
sub
adc
inc
xor
sahf
push
mov
dec
ror
(bad)
adc
xchg
js
not
cld
dec
mov
cs
test
or
inc
xchg
js
mov
pop
dec
enter
pop
cli
xchg
mov
dec
push
jo
xor
in
shl
fs
data16
ds
in
mov
and
mov
hlt
inc
popf
jno
test
xor
push
cmc
lods
aad
jecxz
sub
aad
(bad)
ret
pop
dec
rol
dec
mov
inc
clc
mov
daa
dec
fs
adc
xchg
xchg
je
loope
xchg
loop
stos
pop
not
inc
inc
mov
mov
add
retf
mov
test
fbld
ja
xor
nop
xor
(bad)
call
cmps
cmps
fnsetpm(287
int
jg
je
repnz
inc
adc
inc
cdq
dec
cmc
fmul
push
ret
mov
arpl
sub
push
xchg
or
sbb
nop
cdq
ror
add
stc
and
arpl
es
push
es
iret
push
sbb
mov
mov
pop
arpl
test
or
xor
pushf
xor
or
pop
cld
pop
push
in
push
dec
lds
lods
pop
std
mov
out
push
and
call
sub
stc
movs
das
adc
xor
popf
cmp
ret
aam
xor
jne
xchg
lock
mov
jno
jl
pop
xchg
mov
mov
xchg
sub
push
xor
dec
lds
lahf
mov
sbb
dec
int
repnz
lahf
frstor
leave
push
inc
sti
and
or
pop
pop
cmp
(bad)
je
push
or
fucomp
(bad)
cmps
movs
into
in
dec
fwait
ins
stos
xchg
data16
cmp
cmp
push
in
sbb
scas
into
or
inc
jp
mov
das
pop
xor
scas
push
jo
xor
or
and
std
shld
mov
jg
push
fstp
mov
mov
mov
lods
dec
cdq
mov
adc
ins
mov
or
pop
or
xorps
xchg
mov
inc
je
retf
sub
stos
xchg
inc
push
mov
xor
mov
mov
lea
repnz
push
inc
mov
push
shr
mov
add
add
fstp
cs
aaa
inc
rcr
xchg
dec
mov
and
jle
lock
mov
lock
inc
xor
and
mov
xchg
popa
sbb
dec
push
clc
cmp
lahf
fdivr
sub
les
lea
sub
pop
stos
mov
test
pop
mov
pop
shl
xor
ror
mov
addr16
mov
div
jae
lock
ss
popf
and
or
sbb
push
das
mov
pop
sbb
push
cmps
(bad)
stos
xor
sti
adc
leave
add
mov
lds
inc
int
retf
mov
ja
je
inc
aad
jmp
add
pop
test
dec
xlat
sbb
ja
scas
fimul
and
loopne
ja
loop
bound
(bad)
lahf
cmps
sbb
call
stos
call
jmp
imul
sub
ja
cmc
fiadd
leave
mov
std
push
in
sbb
test
mov
aas
cmps
in
xchg
push
das
cs
jmp
clc
sti
cmp
int3
popf
mul
adc
adc
out
mov
leave
cs
or
data16
or
mov
iret
pop
out
(bad)
xchg
sub
cmps
hlt
shl
sub
adc
inc
or
aaa
das
cmc
mov
jecxz
imul
push
jecxz
push
(bad)
sahf
loope
(bad)
out
inc
pop
and
js
adc
jge
cs
jbe
sub
lods
jl
mov
fst
sub
out
(bad)
dec
lahf
push
push
pop
mov
push
arpl
or
sub
pop
aad
movs
sbb
add
movs
pop
sbb
out
(bad)
repz
imul
sbb
jp
dec
loopne
in
dec
scas
les
icebp
jg
mov
xchg
inc
ret
fabs
clc
arpl
into
dec
stos
jl
sar
movs
xor
cmp
sbb
xchg
test
in
call
xchg
mov
clc
mov
ror
pop
out
ss
test
or
outs
pop
ret
mov
repnz
adc
add
sub
sbb
mov
loopne
jge
lock
sbb
inc
in
loop
into
int
inc
mov
push
enter
mov
jne
cwde
enter
and
neg
js
stos
cmp
retf
inc
rcr
push
jg
cmc
gs
xchg
pushf
fs
xchg
sub
les
xor
dec
xor
inc
cmp
push
icebp
adc
xor
sub
in
loop
aam
aam
ins
cmovbe
xchg
imul
leave
lock
out
pop
(bad)
ins
jae
push
ret
cwde
sbb
mov
retf
and
out
stos
(bad)
call
and
jecxz
sub
inc
lock
ins
je
cmp
sbb
out
aad
test
mov
pop
add
cmp
sbb
and
lock
shr
add
in
movs
fnstsw
add
inc
jg
test
je
iret
inc
jmp
and
stc
xchg
sub
pop
mov
cdq
xchg
loope
sbb
cmp
and
or
xchg
push
jb
inc
je
sbb
nop
retf
mov
call
js
dec
mov
sub
sub
jne
pop
dec
inc
dec
(bad)
scas
jge
dec
btc
mov
cmp
aad
outs
repz
out
or
hlt
mov
daa
dec
cli
rcr
imul
test
rcl
(bad)
push
in
pop
pop
jne
(bad)
dec
mov
std
retf
xchg
or
out
leave
ja
rcl
xchg
mov
call
bound
pop
call
xchg
jmp
(bad)
call
call
push
iret
test
sbb
jb
shr
mov
ja
cmp
add
sbb
xlat
mov
sub
mov
or
dec
and
jae
cmp
das
mov
mov
and
lock
adc
fcom
icebp
jle
jg
mov
cdq
std
jno
cmp
into
pop
or
mov
push
or
gs
push
data16
push
push
sub
mov
cmp
mov
pop
jmp
popa
mov
into
ds
int
in
repnz
enter
(bad)
ror
pop
and
clts
jmp
into
mov
mov
cli
(bad)
leave
push
pop
ret
and
add
ret
shr
(bad)
(bad)
in
mov
and
fs
fild
popf
dec
pop
(bad)
mov
jp
sub
sub
jmp
sub
aas
and
sbb
add
dec
xchg
adc
aas
fwait
sbb
jmp
lods
add
sub
xor
retf
push
xor
ror
and
leave
fadd
push
lods
and
pop
adc
mov
xor
lahf
fld
out
stc
cmp
xchg
cdq
pop
xchg
addr16
sub
(bad)
mov
test
movs
retf
call
and
inc
jb
jg
sub
or
int
xchg
jecxz
cmp
xlat
out
inc
jmp
cmp
stos
call
sbb
movs
xchg
and
mov
les
cmp
pop
sbb
dec
and
and
cs
jns
movs
or
imul
sahf
mov
mov
outs
retf
mov
int3
mov
lods
retf
rol
ins
jns
sub
dec
aad
and
jo
ja
shl
fstp
mov
outs
rcr
cmp
aaa
bound
out
mov
jno
fwait
pop
or
rcl
dec
call
pushf
dec
shl
xchg
jmp
mov
dec
inc
dec
inc
sbb
es
xchg
sub
cli
and
sub
push
dec
xchg
movlps
xchg
fnsave
ffreep
dec
loope
cmps
rcl
out
push
inc
push
stos
lods
test
mov
push
in
add
xor
jae
lods
jnp
or
retf
or
pusha
or
stos
pusha
xchg
push
movs
pop
and
mov
out
test
lods
sti
in
mov
inc
popf
jl
sbb
movs
sub
add
dec
xor
jmp
sub
mov
fwait
ret
mov
retf
cmp
loop
inc
sub
add
push
repnz
jl
bound
loope
ficom
xchg
push
ret
sub
push
inc
add
(bad)
jnp
clc
jge
sub
jb
and
(bad)
ins
push
xor
jne
not
inc
mov
jae
push
cmp
pop
lea
pop
jecxz
sub
push
scas
dec
inc
pushf
mov
movs
fs
(bad)
in
or
push
dec
mov
rcl
xor
mov
mov
adc
aaa
add
int
stos
jno
cmps
sbb
sub
adc
ret
sub
push
hlt
(bad)
outs
pop
xchg
cmc
sub
mov
cmp
(bad)
pop
lods
xchg
jno
and
clc
sbb
pop
call
(bad)
adc
test
out
xor
retf
call
dec
mov
dec
pop
add
xchg
in
iret
sahf
adc
dec
xor
jp
movs
cmc
sbb
and
xchg
mov
sbb
mov
int3
pop
pop
iret
outs
push
mov
sbb
sti
jge
fs
inc
lods
sahf
test
leave
int3
add
dec
pop
(bad)
lods
aas
xor
push
mov
dec
fstp
inc
ret
push
xchg
inc
int
xor
mov
sub
sub
aad
push
sbb
and
inc
add
(bad)
rcr
adc
dec
int
repnz
ds
mov
fmul
and
les
sti
cmp
pop
lea
fdivr
mov
or
fisttp
adc
cmp
(bad)
outs
mov
pop
pop
xor
mov
jnp
dec
out
sbb
clc
push
adc
xor
rcl
scas
cmc
retf
mov
xor
shl
adc
loope
dec
imul
adc
jmpw
outs
mov
popf
cmps
pop
adc
sub
out
int
mov
mov
popf
xchg
sub
imul
jb
mov
adc
jmp
pop
and
dec
push
ss
mov
add
mov
test
sub
out
das
call
mov
pop
mov
mov
xchg
(bad)
cmc
scas
push
push
or
jnp
loopne
inc
sub
adc
loop
mov
mov
cmp
nop
jle
sahf
xor
outs
jp
jmp
int
jbe
add
fnstcw
pop
pop
out
or
inc
jle
and
dec
inc
sbb
test
mov
je
out
push
or
dec
or
pop
std
repz
push
or
hlt
add
pop
aaa
mov
push
icebp
out
shr
rol
sub
cmps
dec
fnstcw
xor
aam
cs
add
mov
fdivp
repnz
jmp
pop
addr16
lea
cmp
xor
jb
pushf
sub
inc
imul
cmp
cwde
inc
pushf
or
dec
fnsave
jle
out
inc
pushf
add
and
push
in
mov
jmp
ret
sbb
clc
pop
shr
mov
fadd
mov
(bad)
jnp
inc
popf
in
pop
xchg
adc
mov
jmp
jmp
repnz
add
mov
aaa
pop
scas
sbb
xchg
stc
mul
mov
test
add
ret
push
retf
xchg
stc
fadd
dec
fcom
scas
mov
jg
ins
enter
sbb
dec
pop
call
add
loope
cmp
(bad)
or
sahf
ror
inc
ds
ins
ins
aam
mov
push
pusha
sub
or
fnstcw
(bad)
xor
mov
fwait
sti
pop
cmp
pushf
ficomp
adc
xor
mov
ins
add
sub
cli
jge
adc
stos
cmp
pop
and
div
push
inc
jns
mov
jbe
stos
inc
repnz
scas
cmp
pop
cdq
jmp
push
pop
cmc
push
adc
pop
mov
loop
retf
cmp
add
mov
sub
cwde
or
lods
mov
push
and
jb
and
mov
push
mov
sbb
or
inc
das
mov
mov
or
sti
mov
fist
mov
lods
fnstcw
sub
sbb
adc
js
icebp
jmp
pusha
jmp
leave
pop
xchg
jno
inc
and
ss
test
cmp
shl
mov
lahf
fdivr
push
aas
movs
sbb
mov
xchg
lods
shl
sub
sbb
stos
sbb
add
adc
ins
test
nop
sbb
cli
mov
call
jae
mov
stos
lahf
jmp
cmp
enter
inc
pop
adc
push
fimul
call
fcom
ins
mov
inc
lods
mov
inc
xchg
mov
mov
sbb
icebp
adc
test
lock
inc
inc
add
pop
dec
retf
cmc
fcom
dec
mov
push
icebp
and
adc
or
call
or
pop
test
out
mov
pop
lahf
fwait
jmp
push
pop
sub
push
add
bound
pop
push
test
adc
aam
or
inc
xchg
mov
test
aam
out
sbb
push
pushf
sub
mov
pop
je
pusha
popa
loop
fbstp
sub
pop
lock
(bad)
xlat
xchg
cmps
stos
or
retf
and
and
xchg
cmps
pop
or
rcl
ret
push
add
xchg
loopne
pop
lock
cmp
es
lea
add
daa
lock
ja
sub
or
xor
push
out
shl
aam
sar
xor
mov
loop
in
jecxz
cmp
out
push
dec
test
into
scas
pop
xor
pop
xchg
xchg
dec
sub
adc
scas
sbb
push
retf
div
test
cmps
and
add
loop
pusha
cmc
sbb
les
adc
push
pushf
ja
jns
sub
xor
jno
dec
cdq
dec
aaa
or
lahf
mov
jb
sbb
lahf
add
ror
xchg
mov
(bad)
and
push
in
sbb
cmp
test
adc
push
stos
inc
mov
(bad)
repz
daa
in
ja
movs
inc
mov
mov
pop
jmp
sbb
add
or
cwde
or
inc
jo
pop
lock
ds
stos
push
lds
jbe
adc
lods
xchg
cmp
aad
gs
std
test
push
xchg
loop
jl
sbb
sub
ficomp
sub
mov
loopne
cmp
jg
loopne
call
sbb
sbb
jo
cmp
inc
add
push
push
mov
xlat
cmp
jg
mov
add
mov
leave
cmove
out
iret
call
fdiv
sbb
adc
push
clc
mov
out
pop
outs
cmp
sub
xor
movs
mov
out
jp
xor
ins
pop
jb
sub
push
pop
jecxz
gs
jne
in
push
pop
xchg
or
addr16
xchg
sub
loop
pop
inc
lds
int3
repnz
in
imul
and
fsubr
pop
sbb
add
stos
test
icebp
fidivr
arpl
push
aad
popf
sub
out
hlt
shl
cld
pop
jg
mov
aad
mov
in
xor
sbb
and
push
jmp
mov
jmp
pop
jns
in
gs
loop
in
dec
sub
sub
xor
add
mov
mov
push
push
(bad)
add
cmp
xchg
xor
in
inc
movs
mov
dec
sub
pop
cmc
loopne
add
sbb
xor
movs
push
dec
mov
push
repz
call
pop
dec
push
xor
jge
push
adc
in
fstp
sar
retf
xchg
loop
dec
fild
xchg
iret
adc
and
movs
inc
push
push
add
aas
mov
push
xlat
fbstp
fs
inc
xchg
push
pop
leave
jecxz
mov
xor
test
cld
cs
int
mov
mov
out
cdq
ret
hlt
mov
shl
cmp
xchg
in
push
and
ficom
int
xchg
and
fwait
mov
add
sbb
pop
lock
mov
fbstp
xchg
sbb
cmp
dec
inc
push
pop
out
ret
(bad)
lods
inc
sub
jo
xor
retf
fnstcw
push
jl
adc
leave
dec
shr
jo
loop
ins
xchg
mov
pop
fld
jns
inc
dec
js
int3
ja
test
sahf
sar
shl
jge
aad
fdiv
cmp
mov
pop
jns
test
cwde
xlat
mov
or
mov
(bad)
adc
test
(bad)
(bad)
jno
mov
fwait
cmps
pushf
adc
lods
rcr
cmps
lods
mov
sahf
les
cmp
movs
jge
push
lea
(bad)
cmp
dec
in
push
dec
jge
fs
lods
jne
jo
sbb
jl
sbb
add
imul
mov
mov
les
test
mov
ror
dec
adc
pop
or
jno
add
adc
sbb
cmps
and
sbb
xor
xor
push
and
jno
jb
push
sbb
mov
sbb
retf
in
mov
mov
jmp
ja
imul
or
jp
mov
jp
lock
(bad)
pop
sbb
sahf
cmp
(bad)
mov
sub
sar
mov
and
das
cmp
sahf
pop
in
outs
call
and
bound
mul
out
or
clc
mov
outs
pop
loop
(bad)
adc
data16
stc
xlat
enter
retf
pop
cld
fs
fiadd
pop
fimul
cli
fcmovb
lahf
push
(bad)
sub
pop
mov
cwde
and
sub
jmp
scas
push
jnp
push
mov
add
cmps
inc
mov
and
call
gs
adc
jo
ror
jns
dec
jecxz
aad
inc
xor
jo
pushf
outs
add
jg
xadd
mov
stc
mov
or
fwait
jno
jle
jg
and
test
adc
scas
pop
popf
clc
fucomp
sti
jmp
dec
rcr
xlat
rol
stc
jbe
jge
(bad)
pushf
inc
jnp
sbb
mov
sub
js
mov
sbb
out
ins
mov
or
adc
add
sub
mov
popf
xchg
inc
or
loope
jne
xor
or
mov
das
(bad)
sub
out
and
scas
xor
cmps
sub
jg
int3
cmp
push
pop
(bad)
(bad)
call
push
sub
jmp
pop
xchg
push
shr
pop
and
fs
inc
mov
jns
sbb
jmp
jo
ret
pop
ror
mov
ror
inc
jno
fidiv
test
retf
les
lahf
pop
mov
lea
in
inc
or
(bad)
or
jae
clc
or
mov
ret
in
iretw
retf
pop
fimul
retf
cwde
fstp
pop
sub
push
std
fsub
fs
and
cmps
pop
ja
test
jge
sub
sbb
movs
pop
jmp
fs
dec
retf
jl
call
and
cmp
add
add
outs
sub
imul
adc
out
pop
in
and
add
push
xor
js
arpl
std
pop
into
cmp
test
dec
(bad)
hlt
sub
add
std
clc
leave
and
fadd
sti
push
(bad)
std
jne
nop
push
repnz
aad
xchg
mov
in
jge
test
data16
push
pop
fild
add
mov
cdq
xor
cmp
fsub
cli
add
das
dec
or
(bad)
sbb
sub
mov
(bad)
sub
outs
and
iret
dec
sub
(bad)
push
aam
imul
fisttp
xor
es
out
mov
mov
and
pop
add
mov
xchg
out
or
adc
inc
dec
loopne
shl
mov
mov
sahf
outs
cmp
xchg
push
movs
nop
rcr
jecxz
mov
mov
xchg
adc
ja
add
and
push
aad
jp
xor
mov
je
ins
push
lods
push
pusha
jmp
jp
ins
jl
xor
adc
add
in
and
adc
jmp
les
(bad)
adc
xor
inc
dec
imul
das
jp
dec
cmp
sub
in
xchg
push
push
mov
pop
aaa
shr
push
xor
jae
dec
or
ret
cmp
loopne
push
pop
icebp
repnz
out
outs
xchg
pop
retf
or
sar
dec
sub
mov
jb
retf
mov
call
mov
and
pop
test
arpl
ins
test
sub
in
xchg
inc
add
gs
ror
jbe
jg
in
shr
cmp
mov
fwait
cwde
xor
adc
retf
xor
mov
shl
in
or
or
dec
shl
lock
(bad)
nop
aad
push
retf
into
ds
sub
(bad)
adc
push
dec
sbb
and
mov
adc
loop
loopne
xor
xchg
mov
pushf
mov
mov
ret
cli
stos
push
les
outs
mov
rcl
out
fcomp
xchg
jle
sbb
call
mov
jmp
sbb
and
pop
iret
in
retf
jne
mov
out
enter
add
dec
cmp
xchg
data16
in
fucomi
cdq
xlat
mov
jmp
jb
es
mov
test
gs
xchg
aad
xchg
mov
mov
inc
imul
ins
push
dec
adc
aam
lds
fmul
cmp
push
jmp
enter
mov
sub
retf
repz
in
lods
jmp
mov
pop
mov
lods
aam
gs
xchg
or
(bad)
xchg
pop
xchg
je
mov
and
push
(bad)
imul
and
jg
sub
lfs
(bad)
ins
dec
call
dec
ss
push
cwde
test
cmps
imul
pop
mov
ja
test
mov
push
lds
sub
pop
push
pop
es
dec
retf
sbb
mov
popf
xor
xchg
jmp
ins
sub
or
(bad)
enter
push
(bad)
popf
and
xchg
lea
ret
outs
jg
pop
xchg
aas
(bad)
outs
ja
xchg
(bad)
fst
add
sbb
mov
xor
aaa
pop
mov
out
mov
mov
dec
xor
test
jge
test
shr
mov
je
pop
push
out
adc
movs
xchg
setl
pop
pop
inc
xchg
fcmovne
(bad)
ins
xchg
aaa
jle
adc
cdq
sbb
pop
push
div
and
dec
and
jb
push
ret
jecxz
test
inc
scas
mov
lods
rcl
out
cld
js
hlt
sbb
in
test
data16
je
pop
mov
(bad)
inc
loop
jmp
arpl
dec
inc
xchg
lods
mov
mov
jo
or
arpl
ficom
mov
je
push
dec
fst
imul
fxch
xchg
xchg
gs
mov
imul
popa
nop
std
lahf
pop
cwde
int3
xchg
ss
(bad)
xor
xchg
ret
ja
push
jae
pop
jb
mov
mov
adc
and
test
daa
into
mov
xor
in
push
inc
ds
cmp
xor
lahf
sbb
sbb
fadd
data16
cdq
(bad)
and
inc
shl
nop
push
pop
sub
dec
test
cli
test
daa
das
mov
imul
push
test
push
pop
adc
jnp
add
in
inc
rol
ins
or
and
(bad)
fnstcw
dec
or
imul
push
retf
inc
push
sbb
adc
das
stc
iret
xchg
ror
jge
lods
ds
shl
arpl
jmp
sti
xchg
adc
and
sbb
pop
xchg
jmp
inc
xchg
lock
loop
cmps
add
adc
cmp
xor
(bad)
or
adc
aam
stc
repnz
int3
jecxz
pusha
retf
leave
sub
adc
cmp
(bad)
imul
inc
push
jnp
sbb
pop
xchg
jb
jmp
dec
imul
sub
shl
push
dec
inc
ret
idiv
pop
or
and
xchg
mov
mov
xor
(bad)
vorpd
ss
mov
cmp
pop
pop
stos
fiadd
mov
cmp
icebp
dec
nop
xor
lods
lds
inc
jb
ss
mov
daa
(bad)
out
and
imul
leave
in
retf
iret
add
mov
xlat
stc
call
lds
xor
outs
sub
cwde
inc
mov
push
dec
imul
sbb
repnz
sbb
pop
sub
in
jb
stc
imul
iret
xchg
stos
hlt
push
outs
push
popa
out
call
mov
adc
fadd
or
imul
sub
mul
cmps
inc
push
fild
push
xchg
imul
dec
push
mov
push
or
in
fs
xor
lea
in
sbb
inc
inc
jae
movs
jnp
(bad)
in
arpl
adc
lahf
add
dec
mov
mov
pop
xor
adc
xchg
push
xchg
popf
pushf
test
sar
popf
xor
leave
push
add
adc
enter
fnstenv
jecxz
mov
cmp
mov
or
push
inc
test
scas
mov
fnstcw
imul
xor
loopne
push
repz
sbb
ret
fsub
mov
lahf
jecxz
(bad)
call
in
xchg
sbb
fist
int3
retf
xchg
mov
and
jo
stos
call
add
inc
shl
fcom
cmps
addr16
or
dec
cmp
dec
ror
push
mov
pop
sbb
pop
mov
push
repz
or
sub
stc
cmp
add
jnp
dec
push
cmp
add
ss
push
test
xor
push
loop
sub
xor
pop
mov
cmp
xchg
hlt
lods
add
stc
imul
scas
pop
mov
(bad)
jl
popf
push
mov
sbb
push
inc
scas
lea
fwait
call
lea
sub
jmp
mov
aaa
xor
adc
test
pop
ret
jmp
xchg
fwait
sbb
xlat
movs
or
out
out
add
pop
xchg
inc
test
sti
leave
les
inc
mov
sbb
sbb
and
movs
cmp
stc
jno
popa
mov
xlat
adc
cmc
mov
xor
lea
mov
pop
mov
push
dec
add
add
mov
data16
pop
xor
adc
mov
mov
mov
inc
int3
xchg
pop
idiv
(bad)
mov
ja
out
xchg
out
daa
mov
out
out
sub
mov
es
sti
sub
repz
daa
cmp
xchg
and
cmc
pushf
fmul
loopne
jle
and
jnp
(bad)
jb
int3
mov
cli
lods
icebp
sub
mov
aas
pop
xlat
mov
inc
movs
scas
push
rol
std
xor
arpl
pop
cmp
out
loop
ins
jbe
mov
mov
sub
dec
cmp
push
or
test
or
mov
inc
mov
xchg
push
inc
(bad)
or
inc
jno
push
jecxz
ins
imul
mov
loop
in
mov
jmp
stos
xor
test
dec
cmp
sub
cs
not
scas
xchg
scas
and
cmps
sahf
xor
jo
dec
imul
enter
or
add
cwde
xor
and
jae
leave
jle
std
xor
shl
int3
sbb
dec
jns
lock
xchg
stos
xchg
sub
scas
clc
xchg
xor
or
cmps
ins
lock
jle
mov
add
fiadd
cmp
sub
lea
mov
ins
mov
int
pop
in
pop
fsub
mov
sub
add
ret
loop
stc
push
(bad)
retf
or
adc
cmp
xor
sti
dec
mov
clc
jo
mov
arpl
cmp
and
sbb
lods
je
dec
ret
fistp
and
cmp
or
and
inc
sub
xchg
enter
mov
(bad)
adc
bound
and
jno
pop
cmp
lea
fwait
push
push
cmp
inc
aaa
pushf
lods
ins
cld
cmp
push
repnz
in
pop
jg
adc
lods
mov
popa
cmp
fimul
push
sbb
lea
scas
pop
add
(bad)
push
outs
inc
pushf
addr16
outs
lock
sub
adc
sub
cli
leave
jae
cli
loope
ins
(bad)
push
pop
in
mul
rcr
jmp
adc
sub
sahf
addr16
push
mov
xchg
xor
mov
add
cli
xor
retf
mov
sub
fdiv
push
sbb
repnz
shl
mov
daa
cmp
std
push
xlat
fdivrp
test
loopne
push
and
xor
cld
mov
dec
sbb
les
xchg
icebp
les
out
imul
fidivr
pop
and
push
dec
and
popf
and
dec
mov
repnz
int3
add
add
sbb
jg
cmps
stos
call
outs
in
dec
sbb
jmp
jmp
shr
mov
in
loopne
retf
sub
pop
js
or
ins
neg
arpl
lock
cwde
push
push
(bad)
jo
pop
push
sub
cli
sub
cmp
inc
pusha
imul
repnz
xchg
aaa
mov
ficom
cmps
outs
xchg
push
ins
leave
es
sub
dec
out
loopne
mov
jp
call
mov
stos
rcl
lahf
fdivrp
movs
inc
aas
cwde
retf
stos
xchg
and
sar
jbe
ror
sub
inc
test
push
add
mov
xchg
mov
outs
dec
pop
sub
cmp
mov
inc
lahf
popa
or
stos
xor
adc
add
je
ror
jne
inc
jns
ror
dec
jecxz
in
int
jb
(bad)
cmps
xor
add
pop
clc
arpl
xchg
cmp
icebp
dec
add
push
aad
adc
mov
addr16
add
lock
out
pop
sti
outs
cmp
outs
fwait
and
repz
cmps
addr16
cmp
inc
inc
aam
and
int3
(bad)
xchg
pop
dec
ja
test
shl
mov
ret
or
lods
and
dec
cmp
sub
cmp
dec
or
icebp
cmp
fild
xchg
mov
loope
push
sbb
out
and
retf
xchg
and
retf
inc
dec
inc
mov
(bad)
xchg
xchg
xchg
xchg
add
imul
push
nop
add
sub
out
pop
jmp
and
out
cmc
adc
jmp
ins
pop
je
rcr
cmps
int3
xor
jmp
add
jmp
push
xchg
bound
jno
or
dec
aam
dec
sahf
dec
fst
imul
dec
dec
adc
aas
jg
xor
push
or
loopne
and
outs
xchg
in
fdivr
cmps
mov
call
jno
sub
and
sub
jno
jnp
aam
loope
bound
mov
cmc
in
mov
mov
cs
shl
mov
js
ds
sar
mov
push
int3
outs
iret
sahf
int3
std
sbb
jp
nop
aad
fadd
add
outs
cwde
movs
dec
cld
imul
inc
stc
rcl
jle
dec
test
test
inc
mov
sub
pop
add
je
repnz
cmp
inc
icebp
cmp
cmp
cmps
xchg
sub
outs
rcr
xchg
sub
movs
mov
lahf
aaa
in
jle
lds
mov
sti
or
or
scas
ret
adc
xchg
pop
mov
mov
dec
or
adc
sub
adc
sbb
adc
in
adc
xchg
leave
and
xchg
push
nop
addr16
pop
jae
and
pop
ret
mov
mov
sub
xchg
push
ror
and
xor
dec
es
aas
stos
stos
rol
add
pop
or
nop
retf
lahf
jnp
ffreep
aad
or
outs
pop
shl
movs
xchg
sbb
sbb
fmulp
mov
xlat
jp
je
sub
push
push
test
mov
inc
mov
adc
and
fs
pop
xor
push
mov
add
or
xor
pop
pop
inc
and
cmps
xor
sbb
push
jle
jle
test
clc
ds
(bad)
outs
cdq
sbb
mov
cmp
xor
hlt
inc
adc
pop
cwde
pop
jmp
inc
adc
push
dec
ins
call
dec
es
add
push
mov
mov
dec
sub
push
adc
pop
mov
or
shr
xchg
ss
jae
cmp
call
xor
mov
push
bound
aas
outs
sub
and
das
dec
or
pop
pop
in
jne
and
and
pop
push
cmp
lock
dec
call
add
stc
stos
push
jne
ret
or
jmp
jno
jae
dec
adc
jp
dec
mov
push
pop
jmp
pop
dec
(bad)
xchg
inc
xchg
lahf
push
pusha
gs
sbb
dec
dec
div
xor
std
inc
dec
or
and
jge
repnz
sti
ss
lea
pusha
and
pushf
stos
std
xor
gs
and
lods
cmp
sub
push
icebp
push
leave
inc
pop
retf
or
lock
dec
(bad)
hlt
pop
push
outs
mov
jp
xchg
cmp
mov
imul
or
imul
scas
xchg
inc
test
(bad)
jbe
dec
pop
loopne
xor
cmp
mov
movs
mov
mov
mov
ja
ins
int
adc
mov
fst
retf
ret
mov
add
pusha
inc
ret
push
mov
hlt
cmps
jge
xor
fnsave
ret
aaa
shl
push
mov
leave
call
icebp
lock
mov
jns
loope
ins
sbb
(bad)
ins
retf
or
je
js
cmps
xlat
ficomp
dec
enter
dec
jnp
push
stos
inc
mov
test
inc
and
std
out
or
jb
fiadd
cdq
stos
rcl
rol
lods
outs
fsubr
mov
mov
outs
in
dec
jmp
add
xor
ja
or
aad
push
aas
pop
jb
cmc
shl
sbb
cs
arpl
dec
and
addr16
jg
call
xlat
adc
data16
xchg
adc
sub
adc
push
xchg
inc
icebp
mov
pushf
adc
ins
push
add
movs
add
call
cld
repnz
ja
psrlw
sub
je
inc
xlat
fisttp
retf
mov
sub
add
retf
push
out
mov
(bad)
cmp
xor
add
popa
push
jb
xor
pop
push
mov
(bad)
or
cmp
and
(bad)
cmp
popa
xchg
adc
adc
mov
push
adc
je
cmp
dec
inc
cmps
jbe
push
int3
lods
out
mov
xor
test
in
or
mov
cmps
mov
icebp
pop
in
cmc
stos
mov
mov
or
mov
lods
inc
outs
adc
sbb
cli
das
call
sbb
xor
jne
jmp
jle
jne
daa
mov
leave
pop
pop
xchg
cmp
and
xchg
xlat
repnz
push
imul
mov
int3
pop
data16
and
retf
inc
pop
or
push
shl
ror
jg
das
shl
mov
(bad)
xchg
mov
and
ss
inc
call
push
adc
lods
inc
mov
jb
xchg
xchg
inc
cld
jmp
dec
shl
outs
mov
cld
std
xchg
inc
dec
pop
mov
push
fwait
inc
loop
sbb
es
pop
pop
lock
call
das
mov
adc
sbb
shl
push
push
xchg
nop
lds
xor
push
ret
rcl
sub
or
dec
cmps
pop
cwde
iret
jb
scas
jecxz
jo
sub
push
loop
jmp
das
shl
(bad)
clc
and
scas
pushf
sub
mov
dec
movs
popf
fucomp
mov
xor
and
pop
(bad)
std
sbb
cmp
mov
mov
xchg
xchg
dec
xchg
ss
mov
pop
stos
add
cmps
es
xlat
ins
push
adc
sbb
cld
ins
add
adc
add
sti
xchg
scas
inc
call
arpl
or
mov
cmps
add
dec
rcr
inc
int3
repnz
lds
imul
push
arpl
ret
inc
(bad)
in
(bad)
ja
add
outs
cmps
mov
mov
cmp
fisttp
pop
jo
outs
int3
nop
cmp
xchg
dec
cmps
mov
push
fwait
or
icebp
mov
mov
mov
adc
xor
pop
mov
in
test
sbb
stos
mov
hlt
add
mov
ins
loopne
pusha
rcr
or
and
push
dec
daa
sbb
push
inc
mov
jle
inc
jns
movs
shl
sub
push
call
rcr
ret
lock
icebp
mov
push
push
jbe
jne
jle
jmp
mov
aaa
inc
or
ins
ret
push
in
nop
pop
(bad)
lea
(bad)
push
outs
test
leave
in
add
mov
cmp
movs
lods
adc
jmp
cwde
cmp
or
cmp
mov
leave
or
pop
xchg
inc
sbb
in
shl
adc
mov
fsub
and
and
xor
dec
hlt
cmp
fist
sub
out
mov
iret
add
jb
outs
imul
sbb
dec
add
lea
mov
dec
mov
retf
and
xchg
mov
lods
mov
bound
cmp
and
dec
sbb
popf
and
adc
jo
inc
xor
call
ja
es
test
bound
jne
pop
in
pusha
push
int
jmp
pushf
or
and
lods
nop
adc
test
aam
mov
cli
inc
and
lahf
jmp
or
rcl
fdivr
aam
add
push
cmp
mov
sbb
pop
lock
pop
jmp
and
jg
sub
add
dec
push
jo
cmp
jo
mov
ja
xor
out
xchg
je
mov
mov
mov
shl
or
movs
repnz
leave
aaa
mov
fs
nop
mov
inc
xor
neg
adc
cwde
(bad)
retf
or
retf
cli
fidivr
pop
xchg
shl
in
fwait
out
xchg
cmps
mul
cmp
xchg
gs
loopne
push
mov
adc
stc
lea
ins
jecxz
xor
push
dec
xor
fld
sbb
leave
out
cmps
sar
sti
in
aad
outs
lods
pop
dec
arpl
xchg
fstp
push
xor
and
mov
push
mov
fisttp
cmp
inc
jnp
pushf
dec
arpl
hlt
mov
(bad)
repz
mov
scas
adc
mov
push
cmp
in
pop
stc
adc
in
cmp
mov
fsubr
inc
or
xchg
xor
in
mov
push
je
mov
add
or
pushf
adc
push
cmp
inc
fisttp
ficomp
faddp
jp
xchg
das
sar
neg
mov
cs
sti
lea
adc
jnp
mov
and
out
adc
and
pop
push
pop
scas
pop
js
aad
cmps
and
pushf
lods
mov
imul
adc
sub
and
or
xchg
jo
inc
mov
add
jns
int
cmp
xchg
mov
sbb
jo
push
ficom
jg
add
cmp
xchg
sar
mov
retf
dec
(bad)
or
xchg
pop
mov
jge
xchg
adc
shl
xchg
ss
fwait
sub
call
or
stc
in
ds
ds
test
mov
mov
push
mov
cs
cmp
cmp
mov
dec
leave
xchg
rcr
sub
mov
pop
add
aad
addr16
pop
inc
jno
js
jno
mov
pop
icebp
popa
(bad)
adc
lods
mov
pusha
add
jmp
and
repz
mov
ins
mov
jb
sbb
inc
jns
xchg
sub
mov
ret
into
inc
mov
push
push
std
(bad)
lahf
sub
mov
inc
jno
add
shl
call
cmp
xor
icebp
lea
adc
enter
dec
je
aad
out
test
(bad)
sbb
push
ja
sar
push
test
stos
test
or
cmp
jo
mov
push
in
ja
js
hlt
sti
mov
out
jge
xor
inc
pop
adc
add
(bad)
gs
test
out
call
lds
adc
cwde
test
fcom
mov
sub
jp
shl
mov
push
and
mov
and
or
(bad)
adc
mov
inc
out
xchg
adc
rol
lea
call
arpl
pop
test
inc
and
into
push
adc
mov
jle
pop
and
cmp
adc
pop
cmps
mov
jae
sub
jb
ret
mov
mov
jo
mov
xor
leave
loopne
and
cdq
les
pushf
and
lods
sbb
cmc
fwait
sbb
lds
xchg
push
and
retf
retf
mov
aad
sub
mov
inc
adc
pop
mov
jge
std
and
les
sbb
mov
dec
add
xor
sbb
pop
cmps
push
jp
inc
test
nop
push
cmp
pop
loopne
inc
mov
out
sbb
sahf
out
or
adc
aaa
push
adc
xor
js
aam
fwait
stos
and
test
adc
push
jp
cli
cmps
push
dec
call
pop
mov
mov
mov
jnp
mov
scas
mov
or
(bad)
jge
sbb
lahf
mov
or
mov
inc
lock
mov
shl
fisub
mov
iret
ins
jecxz
push
adc
lods
sbb
and
gs
jne
xor
clc
neg
inc
inc
and
mov
xchg
int3
xchg
pushf
cmp
push
xor
fisttp
retf
movs
sbb
ins
sub
retf
add
xor
sub
cmp
cmp
aam
out
mov
or
mov
cmps
and
sbb
and
pop
outs
jne
dec
inc
add
add
pushf
jae
mov
adc
mov
push
add
cmp
mov
out
pop
dec
mov
mov
ins
or
bound
lahf
jle
bound
arpl
xchg
cmc
faddp
pop
in
lock
cld
mov
dec
sub
scas
sub
jge
(bad)
gs
push
mov
dec
out
adc
add
sbb
add
repz
aam
leave
mov
bound
lock
call
pop
sub
jno
lea
mov
mov
push
mov
pop
out
ud1
adc
in
in
outs
and
jp
adc
mov
cmc
xchg
or
call
aaa
stos
dec
test
aaa
jae
enter
or
dec
push
pop
xchg
push
push
sbb
inc
and
loopne
inc
mov
sahf
dec
out
sbb
inc
jecxz
imul
rcr
ret
lods
sti
adc
pushf
fild
cmp
jge
int
fiadd
and
xchg
mov
es
iret
mov
cs
sbb
fmul
xchg
popf
hlt
daa
cmp
call
xchg
lock
sar
lds
push
cmc
scas
dec
push
xchg
mov
lods
outs
dec
out
ins
sar
movs
call
xor
jg
enter
pop
mov
ss
xlat
jmp
hlt
pop
out
fcomp
mov
inc
cmp
cmp
sub
or
add
inc
push
and
or
pop
inc
scas
sti
aad
mov
push
std
inc
fsub
cmp
dec
cmps
call
movs
test
icebp
push
push
adc
stos
jbe
and
mov
imul
and
sub
jo
jno
xchg
lahf
pushf
or
loopne
sub
repnz
xchg
ret
sub
sbb
sub
push
or
jo
sbb
add
aaa
fidiv
cmp
dec
ds
jl
dec
xchg
inc
(bad)
outs
cmps
sbb
retf
repnz
adc
je
enter
push
inc
cmp
dec
ret
cld
mov
retf
xchg
inc
stos
push
adc
pop
aad
movs
icebp
dec
fdiv
loope
mov
(bad)
cmp
cli
sbb
sbb
rcl
out
imul
pop
loop
jmp
and
loopne
push
pop
mov
lds
das
hlt
imul
push
dec
sbb
push
in
adc
push
xchg
in
je
fsubr
test
das
or
scas
repnz
mov
int
fbld
and
push
les
(bad)
mov
dec
xor
dec
es
sub
ficomp
in
arpl
push
inc
and
inc
mov
push
ror
adc
mov
int3
or
mov
xor
ret
and
shr
xchg
adc
sub
lahf
imul
mov
xor
jmp
sub
adc
out
mov
lds
inc
cwde
or
mov
pop
(bad)
xchg
add
(bad)
icebp
lods
cmp
loopne
add
fild
fist
mov
or
ss
test
mov
xor
nop
dec
out
cmp
icebp
loope
je
clc
jge
cmp
mov
xor
out
in
cmp
pop
mov
xchg
ds
adc
clc
xor
push
data16
scas
int
inc
sbb
(bad)
sbb
gs
xor
retf
push
ins
cmp
neg
rep
sbb
mov
ja
mov
add
mov
xchg
call
int3
or
(bad)
jo
dec
jge
repnz
(bad)
xchg
into
mov
pop
pop
add
dec
inc
ins
add
leave
aas
sbb
daa
cs
fnop
mov
sub
sbb
xchg
movs
test
cld
(bad)
imul
sahf
push
test
js
push
je
mov
pushf
shl
adc
cmps
push
out
sbb
in
dec
pop
aam
outs
mov
cmp
(bad)
(bad)
and
xchg
sbb
test
jecxz
pop
xchg
and
lods
add
sbb
sbb
rcr
retf
dec
outs
pop
mov
repnz
or
xchg
sbb
xchg
es
(bad)
nop
rcr
mov
sbb
iret
adc
mov
cwde
add
xor
ds
(bad)
adc
idiv
nop
xor
mov
mov
push
(bad)
cwde
add
cld
cmps
mov
sti
sar
xchg
jl
push
movs
mov
mov
stos
imul
add
stos
cld
bound
push
or
pop
push
cwde
(bad)
in
pop
xor
pushf
repz
fistp
jo
or
les
lea
pop
fmul
xor
les
movs
mov
jne
das
dec
xor
push
inc
pushf
add
repz
add
push
ficom
out
sub
xchg
mov
inc
stos
cmp
mov
and
ret
in
inc
xor
stos
adc
dec
int3
jb
jl
in
jmp
sti
inc
or
and
add
push
mov
mov
dec
cld
adc
loopne
pop
xor
mov
pop
cmps
rsm
test
int3
adc
xor
adc
test
mov
xchg
and
xchg
push
rcl
jb
mov
adc
push
loop
sbb
cmp
or
or
or
sbb
sub
dec
pop
pop
je
hlt
aas
xor
iret
mov
dec
cmc
(bad)
movs
sub
or
pop
mov
mov
mov
aaa
mov
jmp
cmp
pop
leave
fldcw
fmul
add
push
jmp
cmp
and
in
pop
dec
or
fimul
cmp
sar
mov
push
mov
and
inc
push
mov
sub
repz
dec
cli
idiv
inc
adc
out
scas
retf
sar
xchg
cli
dec
add
cmc
inc
outs
adc
std
lds
(bad)
iretw
push
nop
stos
stc
jge
xchg
pop
cwde
les
mov
test
mov
and
not
ret
pop
push
xor
fstp
in
adc
fcmove
add
out
rcl
ds
xchg
lods
jo
mov
jo
adc
push
push
push
into
in
jmp
lods
mov
inc
cdq
mov
fldenv
iret
push
std
fadd
fcomi
pop
xlat
lods
xor
pusha
(bad)
add
lods
push
xor
sub
cmps
or
fmulp
dec
sub
sbb
(bad)
mov
xchg
jmp
btc
add
xchg
inc
mov
add
cld
hlt
push
test
cmp
or
add
cmc
adc
(bad)
clc
or
xor
jg
adc
lock
stos
xchg
jmp
imul
cli
pushf
cdq
popa
pop
cld
lar
(bad)
cmp
cmps
adc
inc
ss
fldenv
cmp
imul
xchg
cpuid
pop
xor
dec
rcl
pop
ins
fmul
jmp
pop
hlt
outs
mov
mov
jmp
push
sbb
sub
out
cdq
aad
pop
push
lea
ret
push
ret
jmp
lahf
pop
cdq
pop
mov
cwde
cli
ins
gs
das
and
jae
dec
push
fld
sbb
inc
and
jo
or
outs
leave
push
popa
cdq
xor
xchg
inc
mov
test
inc
sbb
sahf
sub
cmp
jge
mov
and
arpl
out
loop
sub
test
jno
cli
jbe
std
jl
xchg
jecxz
sbb
sub
jae
push
adc
ins
fbstp
push
jo
in
arpl
push
inc
(bad)
and
inc
cld
test
repnz
cld
adc
xor
mov
push
cmps
aas
lods
popf
nop
adc
inc
iret
fst
(bad)
mov
ret
cmc
lock
and
ds
(bad)
les
push
rcr
sti
jbe
sbb
out
mov
popf
lods
mov
fstp
sub
push
mov
mov
mov
fdiv
adc
sbb
mov
push
jmp
adc
lahf
popa
imul
xchg
dec
fisub
push
cmps
hlt
(bad)
imul
mov
cmp
inc
fs
pushf
popf
mov
jge
imul
mov
jns
cmp
xchg
imul
and
imul
iret
add
or
rcl
fwait
pop
stos
je
push
out
push
jecxz
popa
mov
add
aaa
rep
and
lahf
inc
xor
cmp
add
xchg
cmp
int3
sub
daa
push
mov
(bad)
popa
push
loop
cmp
jecxz
jmp
retf
mov
sub
test
test
or
call
in
mov
jmp
xchg
and
addr16
sbb
in
push
loopne
jb
mov
sbb
aas
movs
jno
jl
lods
sbb
fisubr
mov
jg
dec
imul
xor
push
pop
add
cmp
repz
out
js
sar
in
dec
mov
out
mov
retf
adc
scas
jecxz
inc
rol
dec
loop
adc
pop
xor
(bad)
pop
and
or
xor
or
push
adc
sub
mov
jno
mov
add
cmp
popf
je
ja
inc
xchg
mov
popf
cmps
xor
cwde
mov
pop
adc
jg
(bad)
imul
call
mov
cmp
adc
adc
push
out
pop
call
cld
addr16
push
call
out
fst
fstp
pusha
mov
call
sub
(bad)
add
lods
xor
stc
lea
enter
push
mov
movs
fidivr
xchg
fstp
inc
retf
fsubr
aas
or
adc
lock
(bad)
popf
mov
(bad)
je
jecxz
mov
retf
adc
xor
fistp
and
or
cmp
dec
lahf
rcl
add
inc
lds
cmps
repnz
repnz
scas
add
push
fmul
xchg
es
iret
aas
sti
and
cld
mov
lods
stos
test
jecxz
cmps
(bad)
cmp
loopne
mov
add
dec
pop
jecxz
(bad)
push
out
cmc
mov
ins
retf
cld
mov
adc
xor
dec
push
push
loopne
mov
mov
out
rcr
retf
inc
xchg
in
cmp
or
jo
test
loope
xchg
or
push
out
push
and
mov
iret
lods
pop
mov
in
imul
popa
xchg
pop
mov
and
lahf
push
xchg
mov
aaa
mov
repz
repnz
pop
xlat
ja
scas
imul
mov
ss
das
mov
cmp
jle
div
movs
lods
push
fwait
rol
mov
pop
mov
add
mov
jle
dec
push
fdivrp
movs
dec
cli
adc
ficomp
add
and
push
adc
adc
aad
retf
jns
aad
lahf
jb
daa
aas
mov
fwait
outs
stos
mov
aaa
mov
aas
push
out
mov
aaa
lock
nop
mov
das
sbb
mov
je
hlt
adc
ins
jecxz
dec
outs
aad
test
adc
popa
bound
sub
inc
mov
sub
jle
sbb
lods
push
inc
test
cs
jbe
(bad)
xlat
ror
aad
xchg
sbb
pop
sub
sbb
gs
sbb
mov
js
sbb
add
loopne
(bad)
pop
sahf
dec
shl
cmp
jno
(bad)
cmp
mov
pushf
pop
sahf
push
icebp
mov
cmp
movs
call
xor
add
(bad)
std
out
pop
out
jno
scas
or
mov
xchg
cmp
mov
mov
mov
mov
push
xor
pop
dec
nop
and
ret
push
xchg
imul
mov
mov
push
xchg
lods
or
jae
cs
jg
dec
jecxz
sbb
pop
sub
lods
mov
mov
sub
imul
or
mov
or
cdq
lea
(bad)
scas
lock
inc
fwait
mov
jmp
fbld
cli
sbb
arpl
cs
das
mov
enter
push
loop
cmps
addr16
sub
dec
cmc
out
out
ror
mov
test
jbe
leave
or
jns
js
dec
dec
or
jmp
test
loopne
push
sbb
jno
adc
mov
xchg
pop
call
push
jo
and
jp
call
movs
(bad)
loopne
mov
fs
shl
xor
adc
stos
cmps
mov
test
push
ret
xor
mov
jmp
and
lahf
out
dec
sbb
test
mov
cmp
dec
sar
pushf
or
cli
icebp
cmp
push
and
repnz
out
mov
sbb
mov
hlt
or
fdiv
cmps
pop
in
add
jnp
xor
xchg
fisub
sbb
sbb
push
jecxz
fbld
stc
(bad)
out
fwait
cmp
add
xchg
dec
mov
add
mov
xor
aad
loop
cdq
and
jnp
in
mov
sub
pop
popa
add
fstp
fldenv
pop
loop
lds
(bad)
call
pop
imul
add
imul
or
(bad)
std
jo
test
cwde
sbb
jg
call
js
nop
test
sub
mov
dec
inc
repnz
pop
sub
mov
into
test
sbb
adc
push
test
inc
mov
inc
or
inc
daa
and
dec
lock
ins
arpl
add
sbb
test
jmp
sub
sub
jmp
psubd
jecxz
jle
daa
pushf
jns
sbb
inc
push
retf
fcom
sbb
sar
jg
pop
repnz
dec
pop
div
jbe
mov
inc
lds
inc
ins
mov
aam
fisub
stos
sar
xor
sar
daa
adc
je
rcr
sub
popf
cmp
std
popf
ss
push
push
pop
icebp
and
sub
test
pop
xchg
adc
movs
(bad)
fldcw
xchg
pop
cs
fs
(bad)
gs
enter
(bad)
dec
cmp
cs
inc
sbb
pop
sbb
(bad)
sbb
lock
std
add
add
cmp
outs
into
jl
jae
leave
push
cmp
xchg
mov
das
enter
fdivr
mov
mov
sahf
adc
ss
mov
test
int3
aam
mov
(bad)
mov
cmp
cmp
push
stos
dec
mov
jo
jb
shl
mov
ret
jg
and
inc
shr
and
aam
cmc
movs
or
lods
dec
(bad)
xor
test
push
inc
pop
call
mov
ror
outs
xchg
pop
cmps
or
jno
sbb
leave
ins
in
aad
push
test
test
movs
adc
movs
pop
pop
pop
leave
call
in
jle
mov
sahf
ficomp
popa
loope
inc
push
std
and
xchg
mov
in
mov
push
mov
lods
les
add
dec
popa
add
or
test
jge
(bad)
call
xor
arpl
iret
out
aam
jmp
lea
jmp
neg
mov
loopne
test
test
pop
xchg
pop
cmp
cmps
aam
mov
inc
push
lahf
cld
and
outs
xchg
aad
(bad)
pop
ror
push
sbb
inc
mov
je
mov
xchg
jle
dec
pop
cmp
dec
fldcw
addr16
movs
addr16
sbb
sub
dec
bound
cdq
mov
movs
xor
sub
out
and
mov
out
add
push
das
in
pop
es
(bad)
sub
bound
mov
cdq
aaa
mov
push
mov
xor
mov
sub
in
dec
je
sahf
jae
xchg
imul
(bad)
and
dec
xchg
xchg
mov
aam
fimul
es
mov
push
sub
cmps
rcl
jnp
rol
add
stos
data16
add
and
or
pop
dec
xlat
lds
mov
div
packuswb
ins
inc
push
push
hlt
cmc
adc
das
xchg
or
sbb
clc
ins
in
imul
nop
int
pop
leave
adc
jo
and
jge
pop
push
call
inc
push
mov
pop
scas
aas
dec
mov
jge
xor
mov
pop
iret
aaa
repnz
fisubr
cli
mov
lahf
std
cmp
loop
mov
xlat
or
or
sub
lods
pusha
jl
xchg
aad
(bad)
jb
vmwrite
push
and
xchg
inc
cld
jmp
and
jbe
ficom
jae
jae
sub
data16
add
jg
repz
and
out
jns
lds
inc
jecxz
mov
xor
stos
fadd
or
scas
shr
rcr
nop
mov
sar
adc
test
mov
(bad)
rcr
cli
dec
push
out
jo
lock
out
in
mov
sti
inc
cmp
add
clc
and
loopne
dec
cs
aas
add
(bad)
cdq
rol
in
popa
lahf
xchg
jmp
add
aas
fild
adc
mov
push
rcr
xor
pop
push
xchg
pop
push
mov
mov
popa
movs
fstp
lds
pop
cdq
ins
rcl
jae
cmc
aaa
ja
xchg
loop
fisubr
and
pop
add
jb
movs
hlt
adc
aam
xchg
test
cmp
adc
cmps
push
sub
jo
mov
fs
out
retf
gs
(bad)
hlt
cmp
lods
aas
shl
fild
leave
sti
adc
iret
sar
xor
cmc
out
outs
test
sbb
into
jp
mov
cwde
push
dec
loopne
aaa
das
aas
loop
push
or
(bad)
test
fisub
add
retf
pop
(bad)
jmp
int
cmp
neg
out
adc
js
cli
sub
cmp
test
jnp
add
jp
mov
cmove
outs
sbb
ss
cmp
movs
xor
add
stc
adc
div
rcl
sub
jne
retf
imul
cmp
xchg
pop
dec
fwait
sbb
pop
sub
pop
or
out
mov
test
jo
push
cmps
rcl
ds
in
outs
inc
test
stos
inc
pop
les
shl
in
pop
sahf
pop
push
mov
sbb
push
jle
inc
imul
dec
ss
push
mov
sti
sub
sti
jl
in
(bad)
inc
in
mov
fdivr
das
xlat
mul
jmp
push
stos
jae
xor
sub
mov
mov
push
pop
cmc
sub
jo
ror
iret
sub
mov
lahf
pop
mov
pusha
aam
mov
jle
fisttp
adc
pop
movs
mov
xchg
stos
jns
mov
or
or
cmp
mov
mov
arpl
lds
scas
int
retf
mov
xchg
fild
xchg
cli
pusha
sbb
cmp
mov
neg
out
rol
sahf
pushf
add
lds
dec
mov
push
aaa
dec
sbb
xor
push
test
cmp
pop
lea
mov
popf
out
xor
pop
pop
adc
mov
or
inc
jge
bound
gs
xor
dec
lods
(bad)
push
int
pop
pop
and
ret
ins
mov
pushf
mov
add
stos
aas
adc
and
jbe
xor
and
(bad)
stc
fcomp
jb
jg
out
pop
ins
enter
dec
mov
ins
cld
loop
daa
mov
rcr
dec
mov
rcl
or
int3
ds
stos
mov
(bad)
repnz
int
inc
sbb
jmp
outs
or
add
sahf
sbb
jecxz
fcmovbe
pop
push
cmp
push
cmp
out
test
push
mov
hlt
add
fdivr
pop
xchg
pop
(bad)
jb
loop
xchg
jg
(bad)
mov
bsf
sub
mov
mov
test
retf
and
xchg
cmp
adc
rep
mov
loope
sar
fs
shl
pop
aam
jge
(bad)
jnp
test
mov
cld
popf
push
popf
and
push
(bad)
shl
mov
mov
sbb
in
pop
shl
(bad)
stos
loope
jmp
add
and
dec
test
dec
inc
jg
xor
loopne
shl
sbb
inc
push
lods
loop
pop
push
popa
push
std
or
cdq
pop
xchg
imul
mov
test
scas
inc
data16
mov
into
enter
and
icebp
xchg
movs
jo
out
inc
xlat
sub
dec
fadd
pusha
and
aaa
or
(bad)
loope
mov
xor
jl
sbb
sub
popa
dec
outs
fs
shl
rcr
inc
jne
xor
nop
repnz
sub
xor
mov
pop
dec
icebp
popf
(bad)
mov
daa
xor
out
test
mov
stos
fcomi
inc
or
fisubr
gs
sub
cli
or
daa
mov
stos
arpl
sub
pop
and
movaps
inc
push
or
mov
add
dec
mov
mov
stos
(bad)
mov
push
lahf
loope
sbb
lods
aaa
pop
cmps
cli
fldcw
mov
cwde
shl
push
stc
pop
jp
lock
aad
sti
jl
inc
das
xchg
mov
push
pop
and
adc
inc
mov
call
mov
js
sub
sbb
outs
push
and
ins
xor
dec
ss
lods
out
data16
or
inc
xlat
sub
pop
in
cmp
int3
in
(bad)
push
jecxz
push
ret
test
adc
xchg
or
xor
(bad)
clc
jae
and
jg
mov
test
or
les
ret
xchg
fwait
(bad)
jne
push
xlat
and
outs
cmp
jmp
pop
and
mov
xchg
dec
out
leave
mov
(bad)
push
and
sub
clc
sar
out
add
and
popf
xor
rcl
pop
cli
clc
ret
mov
dec
pop
sub
cli
jg
cwde
mov
jmp
sahf
xchg
les
pusha
mov
mov
call
retf
and
gs
out
std
call
push
enter
mov
jg
cmps
dec
sub
push
addr16
test
push
mov
jg
loop
pop
clc
in
rol
mov
push
mov
mov
iret
cld
jo
outs
pop
test
popf
stos
scas
ret
xchg
sbb
pusha
cmp
enter
call
dec
pop
xor
cmp
or
inc
pop
xor
cmp
jno
into
stos
xchg
sub
stc
or
scas
xchg
or
aas
sbb
dec
fmulp
push
push
(bad)
mov
inc
js
out
scas
or
jmp
fdiv
sub
mov
mov
(bad)
adc
ret
ret
add
xor
or
(bad)
shr
jle
mul
add
addr16
outs
ror
je
sub
inc
add
jbe
cli
or
push
int
(bad)
cli
cdq
rol
pushf
imul
les
pop
in
mov
cmps
aad
outs
pop
dec
dec
push
stos
les
sub
imul
or
mov
xchg
sbb
imul
jle
cmp
cmp
and
test
xor
jnp
sub
inc
mov
push
inc
shl
push
cmp
scas
adc
or
out
inc
imul
xchg
sbb
fiadd
aaa
cmp
popf
cmp
pop
jmp
dec
inc
retf
cmp
inc
(bad)
pop
jmp
test
leave
sbb
cmp
call
pusha
mov
push
cwde
pop
(bad)
pop
fwait
mov
jnp
xchg
cwde
jns
mov
sub
adc
in
or
xor
cmc
pop
popa
pop
push
in
iret
mov
ret
gs
push
rol
pop
in
std
inc
inc
ror
mov
fcomi
mov
bound
or
and
jne
xchg
sub
jmp
inc
push
dec
cmp
stos
ret
pop
mov
es
ficomp
lahf
ret
inc
scas
(bad)
fnstsw
mov
mov
cwde
cmc
mov
ins
nop
cmp
push
mov
fdiv
in
xchg
addr16
and
int3
dec
outs
mov
and
scas
scas
leave
mov
inc
popf
lahf
std
fisubr
and
retf
push
pop
fisttp
cmps
cld
cmp
inc
jle
jp
mov
fs
mov
jmp
mov
pusha
scas
cs
add
outs
ja
mov
or
xchg
pop
fisubr
jb
jb
push
out
or
aas
(bad)
icebp
mov
inc
push
mov
xchg
mov
jle
ror
es
enter
fsub
cmp
(bad)
mov
movs
fdivr
in
cmp
lods
jno
push
xchg
jge
loope
mov
and
jne
popf
stos
movs
jge
mov
(bad)
and
ds
lea
and
push
and
jmp
add
mov
jg
and
popf
pop
add
out
leave
or
cwde
fnstsw
mov
and
fwait
lahf
gs
test
jbe
in
xchg
jmp
hlt
push
(bad)
sub
and
aad
adc
fld
pusha
fisttp
jno
and
outs
idiv
ds
lock
mov
and
mov
dec
in
(bad)
fldenv
dec
int3
sbb
(bad)
mov
pop
in
push
inc
ror
cli
sub
add
stc
mov
push
mov
add
mov
xchg
stos
cmp
scas
pop
popa
pusha
push
mov
cmp
aaa
inc
fimul
pop
sub
sbb
cmp
cld
int
loope
mov
sub
fbld
or
call
mov
cs
repz
mov
jge
xor
push
jp
inc
add
mov
bound
das
cmc
inc
aaa
and
pop
movs
jp
ds
xchg
lock
pop
ror
mov
mov
inc
sti
fidiv
sub
xchg
icebp
pcmpgtw
icebp
fmulp
retf
xor
call
call
ret
cmp
pop
dec
and
pop
mov
mov
mov
push
mov
or
push
(bad)
fstp
(bad)
mov
popa
mov
test
in
jne
mov
jle
xor
into
push
or
sub
or
lds
int
cmp
test
lahf
xor
push
dec
xor
pop
addr16
inc
fnstenv
loopne
sbb
fimul
and
or
sar
mov
push
xor
shl
pop
and
jmp
inc
jg
push
iret
call
std
ins
jmp
mov
adc
add
xchg
popf
(bad)
push
std
push
xor
sbb
adc
icebp
adc
in
inc
inc
mov
inc
mov
daa
imul
out
add
test
pop
cmc
int3
pusha
icebp
mov
sbb
popf
pop
adc
sbb
mov
stos
dec
mov
in
add
or
mov
jg
xlat
xchg
fnstenv
in
jle
movs
inc
mov
cmp
and
rcr
lods
mov
aas
ret
jmp
out
das
dec
sar
repnz
xchg
cmp
dec
nop
je
(bad)
aam
movs
xchg
push
loopne
lahf
xor
shr
adc
sti
mov
enter
int3
add
hlt
js
sar
inc
(bad)
fisubr
mov
add
outs
sar
clc
jle
sbb
cs
ins
lods
cmps
in
int
dec
dec
ss
xor
pushf
xchg
mov
ja
xor
sar
pushf
xchg
in
inc
xchg
std
cmp
enter
jp
loop
ret
or
sbb
aad
shl
ins
ror
dec
jmp
cmp
push
mov
inc
arpl
and
cld
dec
arpl
push
nop
lahf
add
sub
test
icebp
shl
fsubr
xchg
aad
scas
ja
xor
icebp
or
push
arpl
mov
mov
pop
inc
jmp
cmova
pop
dec
push
mov
test
neg
and
xlat
arpl
movs
cdq
aaa
xor
aas
xchg
push
pop
mov
outs
add
mov
das
push
lods
xchg
jecxz
pushf
xor
xlat
jns
dec
popa
jae
jp
div
ret
inc
push
lock
aas
inc
cmps
xchg
popa
xor
mov
loopne
loop
xor
xor
pop
daa
out
ret
ja
mov
je
cmp
loopne
(bad)
jno
mov
or
enter
push
cld
shr
ret
mov
adc
xchg
in
test
sub
pop
cld
mov
inc
xchg
jbe
mov
ss
(bad)
fwait
jns
out
push
std
push
lahf
pop
mov
ret
or
cmc
xchg
mov
or
cmps
cmp
cmp
shl
add
cmc
aas
dec
pop
ret
sbb
adc
sbb
push
jb
(bad)
adc
out
popf
mov
stos
lods
mov
out
inc
jle
repnz
nop
loop
push
push
push
add
or
aam
adc
adc
call
lahf
out
test
inc
pop
xor
into
jp
inc
call
pusha
mov
imul
pop
xor
scas
repz
adc
div
dec
cld
shr
popf
push
jmp
jne
fwait
data16
jbe
daa
jp
out
push
addr16
popf
in
adc
xor
mov
push
push
outs
ins
mul
pxor
cmps
std
jl
adc
pop
sub
sbb
mov
pop
push
(bad)
fdivr
outs
and
popa
and
cdq
daa
xor
cmp
xchg
(bad)
xchg
mov
scas
mov
fidivr
ja
jb
mov
fcom
xchg
pop
lods
cmp
sar
or
mov
mov
mov
sbb
stos
imul
ds
int
fwait
push
int
jecxz
inc
mov
mov
popa
cmc
(bad)
and
pop
fisubr
sti
dec
jmp
add
xchg
sub
push
div
lock
jb
or
lods
lods
stos
push
cmps
pop
pop
inc
sub
lahf
call
jp
cmp
fadd
(bad)
or
mov
loopne
push
cmps
jnp
mov
adc
and
xor
fs
jmp
mov
aad
out
sbb
fld
or
(bad)
jmp
shl
mov
adc
sbb
mov
pop
aas
test
or
pop
(bad)
adc
nop
sub
ins
leave
push
adc
mov
jmp
pop
sar
mov
retf
rol
xchg
fdivr
gs
mov
jg
dec
pop
mov
sbb
shl
and
add
xchg
mov
outs
gs
adc
imul
jecxz
out
adc
ins
fistp
adc
fadd
movs
nop
ror
test
mov
or
mov
cmc
outs
push
jecxz
popa
inc
outs
mov
adc
xor
jle
jecxz
cli
lock
sbb
pop
pop
js
jecxz
ins
fsub
jp
push
repz
mov
xchg
mov
or
lods
dec
dec
xchg
pop
fst
sub
cdq
sar
push
clc
scas
cmp
cmp
mov
fwait
callw
dec
loopne
out
mov
das
xor
test
pop
mov
xor
inc
adc
xor
scas
hlt
xor
push
sbb
ds
pop
push
repz
or
fistp
ret
je
test
clc
push
fld
push
es
sbb
mov
inc
xor
push
jne
stos
cmp
xchg
rcr
dec
dec
scas
sub
push
aaa
mov
xchg
mov
jmp
jmp
push
imul
hlt
ins
jae
and
or
pop
fwait
imul
jecxz
dec
fisttp
sbb
call
and
retf
dec
shl
in
and
das
not
jne
mov
push
mov
hlt
jl
rcr
jmp
cmps
jmp
push
and
bound
fsub
jbe
or
mov
clc
cmp
push
sub
sbb
adc
jl
ret
push
les
add
into
or
adc
mov
mov
pusha
out
xor
aad
sub
test
dec
add
stos
test
in
xchg
(bad)
add
cmps
jo
dec
sub
iret
jecxz
add
sti
push
jl
mov
inc
inc
clc
cld
jne
jg
jns
mov
jo
aaa
mov
mov
xor
loopne
jp
out
inc
mov
jp
sub
adc
add
dec
jb
add
jmp
and
enter
sbb
xor
dec
mov
mov
add
push
pop
jae
or
xor
imul
into
mov
cld
jecxz
fwait
jle
or
or
pop
jecxz
mul
inc
pop
lahf
iret
xor
add
mov
add
shr
std
aad
ins
push
mov
pop
mov
inc
dec
aas
div
stos
test
jns
mov
repz
push
(bad)
mov
sub
iret
inc
push
fwait
mov
aas
fwait
xor
daa
adc
loope
and
rol
pop
inc
ins
add
lods
fstp
repz
fnstsw
cmc
out
add
jnp
jge
sub
rcl
inc
aam
stos
jae
sbb
adc
ficomp
in
daa
xlat
mov
outs
or
adc
ret
xor
sahf
je
call
adc
sbb
in
cmp
or
ins
loopne
outs
dec
lea
dec
aaa
(bad)
lods
mov
(bad)
int3
inc
fs
mov
push
ja
inc
sub
stc
push
fdiv
xchg
popa
call
and
inc
jle
mov
dec
or
popa
mov
jmp
adc
imul
ror
test
nop
jno
dec
or
mov
out
and
xchg
jns
jg
jb
rcl
sti
out
fsub
xor
add
pushf
push
xor
cmps
nop
aaa
cmps
xor
add
and
test
call
not
adc
push
mov
gs
wrmsr
xchg
ret
clc
movs
mov
test
test
cmps
dec
scas
sbb
push
popa
scas
inc
and
adc
test
push
pop
ins
or
lahf
inc
sub
and
mov
cmps
aas
push
fsub
cmps
lods
lods
int3
stc
push
mov
mov
sbb
add
adc
pop
mov
fdivr
dec
cli
popf
push
lds
cs
lds
pop
xchg
mov
sbb
dec
mov
ret
dec
sbb
jo
pop
mov
push
jp
pop
and
fiadd
xchg
adc
stos
xchg
pop
xlat
mov
fnsave
cmp
xchg
push
pop
mov
and
pop
lods
push
xchg
cmp
repz
lock
jns
pushf
shr
stc
or
adc
bound
jmp
jnp
rcr
jbe
jmp
fs
lea
xchg
stos
push
(bad)
xchg
imul
rcl
push
movs
div
jo
jmp
imul
jmp
sub
gs
fist
mov
mov
mov
inc
xor
(bad)
jecxz
mov
mov
add
mov
pushf
adc
push
inc
sbb
cmps
mov
sbb
scas
jne
es
adc
dec
in
ins
loope
cmps
adc
in
add
data16
mov
push
jb
es
add
lahf
xchg
jecxz
out
je
dec
sbb
nop
jge
dec
jmp
jp
push
mov
imul
xchg
adc
push
les
mov
sbb
cmc
mov
(bad)
enter
fiadd
and
inc
(bad)
sub
lea
cmp
lods
call
sub
loope
xor
mov
enter
mov
std
call
out
xor
es
sub
sub
hlt
push
jbe
adc
inc
xor
arpl
std
idiv
cmp
sbb
xchg
or
jmp
sbb
out
push
mov
pop
dec
mov
ss
call
imul
mov
loop
aas
nop
cmp
xchg
lods
push
fild
in
sub
jne
or
push
pop
adc
mov
mov
(bad)
xchg
ret
lock
or
mov
aaa
sub
add
cmc
scas
int3
dec
retf
mov
fstp
sbb
cmp
or
div
clc
neg
enter
out
stos
loope
push
cmp
sbb
in
daa
dec
add
inc
sbb
out
ret
jnp
out
mov
(bad)
movs
cwde
push
adc
stos
jge
ins
mov
(bad)
ffree
push
dec
sar
inc
pusha
frstor
ror
jecxz
jmp
out
mov
push
and
neg
arpl
(bad)
lock
mov
inc
sbb
lahf
dec
mov
or
or
push
imul
mov
cmc
lds
xlat
retf
cmp
enter
or
(bad)
add
icebp
cmp
and
jl
sbb
mov
inc
cmp
rcl
mov
push
pop
adc
fld
movs
cmp
ins
retf
or
mov
and
stc
cmps
fmul
repz
fcomp
xchg
std
dec
mov
mov
jno
mov
xor
sbb
and
mov
jg
ficomp
xor
push
cmp
jle
cmp
adc
xchg
xchg
or
cmps
(bad)
sahf
in
mov
sub
mov
pop
mov
call
(bad)
pop
mov
sbb
xor
push
xchg
mov
xchg
popa
dec
mov
imul
sbb
push
mov
loopne
fidiv
dec
cwde
sbb
psubusw
inc
push
push
xchg
mov
ret
inc
movs
sub
jmp
and
daa
loopne
(bad)
mov
mov
test
out
call
mov
(bad)
xor
jle
std
nop
shr
pop
sbb
cmp
xor
inc
inc
pop
adc
pop
test
sbb
lds
das
push
mov
in
loopne
jne
xchg
sbb
and
add
ins
xor
xlat
jns
test
mov
je
mov
jns
(bad)
out
pop
test
mov
shl
aad
test
shl
cdq
icebp
(bad)
mov
sub
xor
sbb
popa
rcl
sbb
and
cs
jecxz
sbb
cmp
mov
mov
sbb
js
sub
push
sbb
ja
dec
sahf
or
mov
test
xor
fldcw
sbb
int
pop
imul
inc
mov
inc
pop
dec
shr
inc
add
lds
push
aad
icebp
pop
aad
js
mov
mov
test
rcr
fcomip
adc
jg
cmps
arpl
popa
imul
pusha
xor
dec
shl
adc
rcl
arpl
loopne
mul
mov
aaa
js
sbb
mov
scas
pop
mov
add
add
cmp
jl
xchg
dec
mov
repnz
inc
xor
xchg
std
daa
xor
je
jbe
loope
fisubr
pop
call
push
inc
imul
pop
leave
push
mov
sub
push
mov
pop
mov
test
adc
movs
cwde
add
jnp
pop
or
or
jbe
push
sbb
mov
test
es
popf
jle
pop
xchg
out
pop
xlat
test
mov
sub
in
retf
rol
pusha
loopne
repnz
sar
dec
pop
cmp
fistp
scas
push
or
dec
and
sbb
mov
cmp
loope
loop
test
mov
adc
jno
push
mov
imul
xor
(bad)
mov
inc
dec
jmp
adc
push
(bad)
aad
fs
jns
in
xchg
mov
sub
les
dec
mov
scas
and
movs
bound
mov
je
fst
into
test
cmp
cld
rol
and
sub
and
mov
push
fistp
xchg
or
mov
inc
int3
or
and
in
xchg
and
add
push
add
(bad)
gs
jle
sub
in
das
pop
shl
out
sbb
xchg
rcl
dec
ds
outs
mov
inc
mov
push
(bad)
add
inc
xor
pop
cmp
clc
mov
ret
jnp
jmp
pusha
outs
test
jnp
jae
test
out
and
call
add
pusha
sbb
cdq
lods
jb
cmp
push
retf
pop
add
sbb
in
test
test
mov
push
mov
cmps
ins
push
pop
retf
push
sbb
pop
js
pop
push
aam
add
inc
iret
imul
cld
aas
mov
repnz
dec
cmps
div
(bad)
fadd
jp
mov
jmp
pop
popf
jle
ds
pop
push
pop
aam
(bad)
outs
test
test
shl
jns
nop
mov
and
test
shr
pop
lahf
mov
shr
bound
call
pop
cmps
mov
icebp
jmp
out
cmps
mov
push
int3
fimul
xor
sbb
inc
(bad)
jl
push
and
mov
pop
aaa
or
push
imul
mov
ret
cmp
enter
pop
idiv
jno
cli
fldenv
add
(bad)
pop
xlat
imul
fs
in
mov
or
shl
nop
fsub
lock
and
inc
(bad)
cli
dec
sub
cmp
mov
and
adc
int
xor
in
iret
fadd
add
retf
in
in
dec
repnz
sub
and
lea
std
call
js
outs
loopne
test
mov
stos
cmps
aaa
lock
lahf
push
dec
inc
test
pop
outs
fmulp
xor
inc
or
jne
ror
imul
adc
fwait
mov
loope
retf
in
in
popf
mov
sub
and
retf
fwait
adc
jnp
sbb
aad
dec
mov
sbb
xor
sar
xchg
movs
call
dec
(bad)
adc
mov
sbb
lock
add
inc
fucom
les
test
(bad)
je
into
inc
or
out
shl
add
xchg
push
mov
test
fbstp
add
stos
mov
sub
jmp
mov
mov
xchg
into
inc
fisub
repz
in
mov
inc
lea
or
push
sar
retf
fld
test
pusha
mov
hlt
pop
imul
nop
adc
mov
fimul
fdiv
mov
aad
mov
xor
je
lods
wbinvd
inc
jg
jne
jmp
lods
mov
push
jmp
pop
cmp
outs
outs
jl
inc
(bad)
ror
(bad)
popa
pop
(bad)
xor
retf
dec
(bad)
jl
in
(bad)
inc
imul
mov
jnp
lock
(bad)
mov
cwde
xor
aaa
cdq
mov
ret
sti
inc
inc
jo
jnp
inc
std
sub
dec
lods
cmp
js
repnz
sbb
jl
add
test
scas
js
ror
adc
retf
shr
stc
inc
and
dec
pop
js
inc
adc
cs
dec
bound
rcl
mov
je
or
inc
add
mov
and
stos
sbb
dec
mov
ins
(bad)
aaa
xchg
push
arpl
int
aad
xchg
mov
or
jns
shr
add
inc
xchg
out
aaa
and
add
int3
cwde
mov
sbb
stos
xor
lds
fimul
rol
test
inc
jns
pop
push
mov
adc
scas
push
das
out
mov
lea
xchg
jno
iret
mov
or
and
pop
or
ret
inc
jae
pop
inc
repz
(bad)
retf
add
movs
sub
pop
popf
xchg
sub
xor
(bad)
rcl
(bad)
out
jo
xor
sub
push
sbb
adc
and
popa
cmp
fidiv
or
loope
add
je
das
shl
mov
inc
retf
mov
sub
sar
sub
or
ret
and
popa
test
call
ds
dec
mov
xchg
(bad)
loopne
int
sbb
sub
cmp
jge
mov
clc
ror
stos
or
shl
clc
push
and
jge
sbb
xchg
pop
jle
cmp
push
(bad)
mov
add
pop
shr
mov
push
dec
jmp
ins
das
das
leave
cmp
(bad)
outs
pop
sub
jl
jmp
inc
outs
sub
dec
push
push
std
pop
push
mov
cwde
push
push
mov
cs
out
add
rol
xchg
les
push
pop
shl
adc
ss
pop
pop
jg
ds
jp
inc
sbb
test
loope
sbb
inc
cwde
nop
xchg
inc
mov
neg
dec
dec
adc
(bad)
stos
pop
out
cli
or
lock
shl
xchg
ins
mov
outs
ret
xor
or
aad
and
gs
pop
add
push
push
inc
jmp
add
mov
jle
or
xor
mov
dec
dec
fwait
dec
xchg
dec
cld
dec
out
or
push
xor
dec
je
bound
sub
fadd
out
sub
hlt
(bad)
sbb
loopne
dec
jnp
aad
pop
fmul
call
dec
sub
push
xchg
mov
jg
add
jge
and
adc
retf
add
jns
mov
adc
pop
inc
out
jns
add
cmp
jecxz
adc
push
pop
xchg
mov
sub
add
cmp
(bad)
xchg
push
mov
or
inc
lahf
cmp
jg
rol
loopne
mov
aam
mov
push
mov
ret
jl
out
mov
out
int3
loope
popa
rcl
xor
jnp
out
xor
push
xor
fs
jne
pusha
mov
cld
or
inc
sbb
daa
sub
sub
out
call
(bad)
icebp
mov
ins
das
dec
movs
(bad)
fcmovnu
les
mov
or
xchg
int
les
mov
in
popf
or
jnp
cld
xchg
pop
gs
sbb
mov
arpl
sahf
jmp
outs
das
jnp
mov
pop
push
inc
neg
(bad)
adc
je
xchg
xchg
pop
neg
push
aas
add
pop
daa
adc
dec
sub
repnz
dec
lahf
out
mov
rcr
lods
popf
nop
push
push
(bad)
push
dec
push
pop
out
mov
ret
mov
arpl
rol
mov
cmc
sbb
test
and
mov
jmp
sbb
xchg
sub
lods
mov
das
retf
out
cdq
sbb
jg
pop
dec
or
test
inc
xor
add
pop
sbb
inc
out
fidivr
std
jg
rcl
lea
shr
and
or
add
shl
inc
mov
fist
dec
enter
fidivr
xor
clc
mov
add
mov
rcl
inc
dec
fisttp
jne
ins
xchg
adc
adc
(bad)
jge
mov
retf
scas
push
int
(bad)
sub
mov
xchg
cdq
sub
fnstcw
jne
in
sub
das
(bad)
(bad)
cmp
in
mov
test
dec
cwde
xor
call
(bad)
lods
adc
pop
sub
push
xchg
xchg
fnstsw
mov
clc
and
test
ret
lds
adc
push
cmp
cmp
pop
add
repz
cdq
lock
jmp
std
ffree
fs
sbb
inc
arpl
dec
adc
mov
clc
(bad)
or
fisttp
cmps
cmp
nop
aam
fdivp
push
xlat
pop
or
push
jp
ffree
push
(bad)
(bad)
(bad)
lds
popa
sbb
pop
xlat
aad
pop
rcr
call
and
ja
pop
ss
and
in
add
mov
dec
push
scas
add
or
lea
pop
sbb
and
shl
sub
push
add
mov
dec
data16
(bad)
test
outs
jnp
test
mov
jl
cmps
ds
pop
push
repnz
fwait
rol
push
cmc
mov
bound
mov
xor
adc
stc
test
stos
mov
push
xor
inc
or
sbb
cwde
rcl
xor
retf
enter
popf
retf
sahf
and
sub
not
adc
xchg
scas
cmp
call
(bad)
and
out
pop
jne
jl
inc
cmps
aas
lea
mov
dec
inc
xor
adc
aad
outs
jbe
add
sbb
out
leave
mov
mov
ret
xchg
fidivr
sahf
iret
push
mov
test
push
fwait
adc
push
test
popa
xchg
shl
xchg
cld
pop
push
mov
outs
mov
jb
test
pop
call
lods
push
(bad)
(bad)
leave
cwde
stos
inc
cmp
jle
push
je
cmp
push
jb
pop
pusha
int
dec
in
lahf
sbb
out
loope
xchg
popa
imul
mov
xchg
enter
arpl
ucomiss
sbb
dec
xchg
mov
pop
cmps
retf
sahf
mov
dec
push
je
(bad)
push
movs
ffree
and
rcr
xchg
xchg
clc
jg
aas
dec
test
lea
retf
inc
ins
inc
sub
hlt
neg
gs
mov
sbb
mov
mov
dec
js
and
jecxz
inc
jmp
sub
dec
sub
retf
(bad)
dec
jge
popa
xchg
ins
mov
dec
xchg
mov
int
inc
push
loop
sub
or
xchg
addr16
(bad)
movs
fwait
rcl
out
pop
stos
mov
daa
cmps
repz
test
shr
aas
adc
ret
xlat
adc
sub
sbb
sub
call
into
rcl
loopne
cmp
or
mov
scas
push
jo
cmp
or
jb
inc
inc
pop
mov
shl
in
lock
mov
ins
dec
loope
sar
cmp
sar
or
loopne
outs
mov
pop
inc
or
lds
fstp
jmp
fdivr
lods
in
push
xor
cdq
jnp
jle
cmc
fstp
into
xchg
adc
jnp
cmp
gs
and
and
outs
ja
and
cmp
in
fst
cdq
test
add
scas
cs
push
xchg
(bad)
jl
push
fcom
add
(bad)
ins
pop
mov
mov
pop
jo
cmp
push
pushf
jle
not
fisttp
or
cld
ret
popf
adc
add
lock
loope
inc
jo
loope
shl
dec
ret
js
inc
je
cs
add
xor
mov
mov
icebp
sbb
pushf
cld
ins
push
dec
fcomip
repnz
iret
mov
add
or
pop
mov
dec
fmul
hlt
cmp
repnz
and
xor
jle
arpl
fnstenv
dec
cdq
sahf
call
test
jns
add
(bad)
enter
mov
dec
mov
mul
mov
imul
cmp
mov
(bad)
cmps
rol
mov
or
rcl
imul
jmp
call
rcl
dec
sbb
mov
mov
cmps
mov
mov
jns
jne
std
mov
in
add
mov
mov
pop
loopne
add
sub
inc
push
(bad)
lock
into
xchg
inc
mov
sbb
out
push
popf
sbb
pop
cwde
dec
imul
xchg
das
dec
lods
mov
aaa
pushf
add
fs
fild
ret
push
or
xlat
xor
outs
adc
xor
into
xchg
cmp
fnclex
and
jbe
test
repnz
outs
or
xchg
pop
adc
pop
adc
mov
icebp
push
mov
cmp
pop
mov
lods
(bad)
addr16
icebp
sub
xchg
add
push
cmc
ror
das
cli
inc
push
add
(bad)
lock
cmp
mov
mov
test
ja
mov
shr
xor
sub
xchg
test
push
cmc
dec
inc
mov
pop
(bad)
cli
add
leave
fmul
imul
ror
mov
aad
cld
push
movs
call
push
sub
test
sti
mov
mov
outs
xchg
xchg
xchg
lods
mov
ds
pop
mov
mov
ret
js
add
iret
or
mov
add
adc
cld
xor
(bad)
retf
mov
outs
jno
pushf
xchg
stos
xchg
add
int
inc
and
add
and
fwait
mov
jle
leave
cmps
pop
xchg
adc
xlat
les
jae
ds
xor
outs
nop
cmp
jge
or
cmp
daa
cmp
or
sbb
add
inc
aaa
xor
int
mov
scas
xchg
mov
inc
mov
jmp
sbb
retf
push
push
sti
sbb
mov
and
cmps
inc
jmp
xchg
(bad)
imul
in
and
adc
into
cdq
sbb
sbb
cld
fcom
jmp
xchg
sar
mov
inc
xchg
clc
add
add
mov
sub
mov
and
jbe
lea
ficomp
cmp
repnz
inc
jmp
xor
sub
sbb
jnp
dec
pop
jo
sub
stos
rcr
loopne
arpl
jp
scas
add
ss
adc
xor
ja
sub
out
jle
ja
pop
pop
test
pop
jmp
inc
xor
je
popf
cmps
pop
nop
push
sar
loopne
ins
pop
adc
or
ja
pop
dec
out
and
and
dec
sbb
push
daa
sub
dec
dec
test
aas
test
cdq
inc
adc
xchg
fisubr
stos
pop
xor
pop
test
ficomp
pop
mov
sahf
push
jecxz
clc
shl
(bad)
arpl
les
ins
mov
mov
mov
mov
iret
stos
jmp
mov
(bad)
push
mov
or
out
pop
std
add
(bad)
int3
fisub
xor
jmp
push
inc
push
xor
clc
out
loope
push
xchg
ret
into
xchg
adc
mov
mov
scas
dec
pushf
xchg
mov
mov
enter
shl
(bad)
cmp
push
and
addr16
add
pop
mov
xchg
jg
mov
lahf
fucompp
cmp
xchg
mov
push
push
xor
sub
mov
or
cdq
sbb
xor
jnp
int
test
mov
sti
add
call
fcmove
sbb
mov
fdivr
pop
sbb
pop
jl
cmp
mov
test
dec
jecxz
mov
jge
sbb
sbb
shl
push
test
(bad)
xchg
mov
jns
jno
retf
mov
popa
(bad)
jmp
cmp
jecxz
adc
cmp
cmp
repz
push
test
ss
xor
call
sub
mov
sete
shl
sbb
lahf
loop
sbb
fwait
cld
xchg
in
add
jns
jae
push
leave
push
ja
sub
shl
sub
pop
push
or
in
adc
ins
neg
mov
lods
mov
cmp
sub
jo
dec
lock
inc
or
mov
or
jl
jmp
in
push
mov
sub
test
lock
mov
ss
dec
xor
test
dec
push
loop
mov
movs
and
jmp
(bad)
xor
leave
lea
out
xchg
mov
fadd
outs
sbb
push
mov
sbb
popa
jg
mov
cmp
in
inc
mov
pop
xchg
sub
dec
push
add
mov
mov
jmp
pop
dec
mov
in
inc
rcr
lock
in
test
retf
lock
adc
xor
aas
xchg
adc
shl
icebp
or
sbb
or
xor
mov
fs
pop
inc
add
cmps
adc
sbb
icebp
shr
xchg
stos
jns
std
fsub
mov
fwait
in
daa
or
iret
ins
dec
imul
cmp
sbb
adc
and
jge
aam
pop
imul
xor
jae
(bad)
jbe
fs
cmp
popf
ret
fsubr
pop
ja
add
jp
pop
(bad)
pop
cmp
mov
mov
mov
xchg
mov
add
mov
jmp
adc
pop
inc
icebp
fdivp
or
inc
fwait
inc
aad
sub
cmps
je
xor
loope
cmp
mov
pop
movs
jae
imul
shl
mov
test
mov
jae
jl
out
pop
fmul
pop
pop
xor
int3
jp
mov
push
(bad)
pop
mov
cmp
cmp
stos
sbb
std
sbb
ds
(bad)
mov
cdq
inc
cmc
jecxz
dec
ins
je
xchg
or
call
shl
stos
inc
outs
add
and
dec
lods
bound
outs
adc
pop
imul
ror
jbe
lods
ins
ret
dec
(bad)
scas
test
aad
adc
pop
or
ins
imul
jo
add
into
or
call
jbe
cmp
sub
fnstcw
push
fimul
aaa
dec
scas
ja
shr
in
xchg
adc
inc
fld
mov
cmps
shl
mov
push
cli
mov
into
mov
add
adc
cmp
xor
adc
test
sti
aaa
(bad)
in
dec
xor
xor
in
scas
test
std
dec
faddp
sbb
scas
push
outs
cmps
mov
push
pop
push
int3
int3
push
cmps
jnp
das
mov
mov
dec
aas
movs
jmp
push
and
lea
mov
jge
add
aas
hlt
add
lea
push
fdivr
nop
ret
inc
sub
push
imul
pusha
pop
dec
loopne
xchg
xchg
in
cmps
imul
sbb
into
or
mov
repz
xor
test
adc
jecxz
inc
push
int
pop
jle
loopne
mov
mov
mov
jmp
rcl
addr16
fbstp
lahf
mov
mov
xchg
repnz
push
xor
sar
jle
push
test
jo
stos
sub
cmps
mov
aaa
inc
aad
into
mov
in
mov
arpl
hlt
sar
cmp
mov
mov
dec
test
sahf
mov
in
(bad)
jmp
aas
cmp
int
adc
pop
(bad)
fld
sub
jmp
fidivr
add
test
pop
outs
sub
test
fwait
adc
xor
fisttp
jne
fdiv
in
leave
adc
adc
push
cmp
pushf
pop
cmp
pop
mov
aad
outs
xchg
int3
pop
(bad)
mov
pop
and
stos
ds
mov
retf
inc
aas
fidiv
aas
inc
nop
fidivr
mov
retf
outs
xchg
cmp
aaa
mov
not
jp
(bad)
cld
pop
push
xor
stc
sub
mov
ss
add
mov
sar
cmps
ds
jmp
push
lods
add
and
mov
mov
fcmove
in
sbb
dec
jmp
cdq
enter
add
adc
dec
lods
outs
xlat
ins
ss
les
stc
gs
pop
xchg
sbb
jne
add
pop
sbb
or
push
hlt
add
sbb
into
iret
mov
lock
dec
jb
mov
adc
in
retf
(bad)
rol
mov
ja
xchg
and
js
inc
test
xchg
icebp
cwde
test
cmp
jge
jne
sub
xchg
mov
popf
add
add
mov
pop
fild
mov
mov
mov
loopne
sub
hlt
push
es
gs
stos
cs
jb
(bad)
fnstenv
push
in
bound
pop
loop
fwait
and
in
pop
aad
pop
aaa
cdq
inc
repnz
and
es
inc
movs
sar
sahf
mov
xchg
and
mov
(bad)
xor
imul
xchg
cwde
jp
push
add
xchg
test
ja
mov
mov
mov
mov
adc
jmp
jl
adc
(bad)
and
js
adc
dec
out
inc
sti
or
pop
mov
inc
lahf
ret
and
and
mov
sub
and
sub
scas
sub
out
shr
icebp
outs
adc
pop
shr
fst
adc
sub
pop
jno
aaa
mov
mov
rol
stc
mov
in
loopne
xchg
cli
push
pop
xchg
cld
pop
data16
add
push
cmp
aaa
sti
aad
dec
fimul
lahf
inc
inc
addr16
inc
or
push
cmp
stos
push
mov
cmp
xchg
int
cmp
push
jecxz
or
lahf
sbb
or
jecxz
arpl
push
push
sub
in
push
mov
outs
xor
mov
xor
jne
and
xchg
fiadd
mov
mov
pop
xchg
xlat
ss
xchg
cdq
outs
xor
imul
nop
aam
cmps
mov
dec
mov
pop
xor
aaa
repnz
push
push
cmc
adc
xchg
retf
ja
adc
ficomp
mov
mov
and
(bad)
mov
mov
jbe
retf
pop
mov
mov
and
out
mov
clc
pop
repnz
sar
call
push
repnz
inc
adc
sub
pop
inc
(bad)
mov
xchg
cmp
add
mov
rol
push
fld
pop
sbb
pop
jmp
(bad)
mov
leave
(bad)
outs
sbb
pop
enter
sbb
sbb
loopne
test
ins
xlat
and
inc
jp
inc
inc
inc
push
mov
leave
add
xchg
or
push
data16
inc
mov
ins
cmp
test
mov
pop
sbb
in
push
(bad)
adc
adc
mov
push
mov
loopne
imul
add
out
or
in
mov
pusha
or
cmp
add
lock
cdq
and
sbb
mov
daa
dec
iret
stos
cmp
push
sub
adc
leave
pop
add
icebp
rcl
das
je
cli
xchg
push
les
int3
(bad)
jbe
sti
xor
mov
scas
sbb
and
(bad)
sub
jmp
adc
jne
ffree
out
and
retf
fstp
shl
ja
dec
mov
scas
dec
cli
mov
pusha
jl
sbb
and
adc
sbb
and
dec
dec
ds
mov
popf
outs
test
xchg
stos
adc
mov
sub
jmp
mov
pop
lock
enter
retf
cmp
jmp
ins
in
fwait
lods
push
xor
(bad)
enter
add
je
xchg
or
inc
aad
and
neg
sti
cmps
test
sar
js
outs
std
or
test
(bad)
mov
mov
pushf
retf
jbe
cmps
in
mov
and
jp
movs
xchg
fucomi
(bad)
lods
or
rol
lods
pop
cmp
(bad)
push
setg
mov
push
sub
jae
mov
data16
jmp
and
mov
jmp
test
dec
adc
jmp
mov
sbb
gs
lods
push
push
mov
loop
xor
push
cld
xor
xor
inc
inc
jge
mov
pop
aas
call
xor
cld
nop
add
mov
pop
jge
jge
lock
adc
popf
push
sbb
mov
sbb
cmp
jle
iret
and
rcr
aam
in
fidivr
and
retf
mov
push
push
push
adc
or
jbe
fdivr
push
fs
inc
cmp
mov
int3
ss
ficomp
mov
xchg
xchg
(bad)
mov
adc
cs
or
inc
adc
rcl
push
sti
ja
dec
addr16
sbb
mov
add
pop
sti
pop
push
dec
and
loopne
jne
mov
stc
nop
lds
xor
leave
std
bnd
stos
loop
cli
and
sti
jbe
adc
rcl
sbb
jns
pop
ins
mov
mov
push
out
xor
int3
fist
cld
dec
xchg
mov
xor
outs
aam
lods
or
or
retf
sub
push
jmp
push
and
jecxz
inc
cmp
ret
cmp
or
ret
ins
retf
mov
or
sub
jge
gs
add
mov
dec
or
dec
xchg
(bad)
mov
leave
outs
stos
mov
mov
or
push
int3
xor
mov
pushf
mov
cld
dec
(bad)
fistp
shl
mov
scas
cmp
into
addr16
lahf
test
nop
ja
cmp
sub
jmp
test
stos
pop
cdq
jno
or
jb
mov
inc
jmp
je
mov
and
icebp
lods
push
mov
mov
push
add
mov
movs
or
scas
xor
(bad)
enter
adc
mov
imul
repnz
add
push
jb
js
test
xor
dec
mov
je
push
pop
or
ins
retf
add
mov
mov
iret
dec
loope
outs
movs
mov
repnz
mov
pop
fs
inc
loop
mov
adc
add
scas
(bad)
ret
mov
mov
push
pop
imul
mov
imul
hlt
icebp
and
call
ret
mov
dec
or
pop
inc
xchg
ja
outs
mov
sar
inc
cmp
mov
cmc
sbb
es
(bad)
call
sbb
or
outs
(bad)
clc
pusha
outs
jmp
mov
inc
stc
dec
daa
mov
pop
mov
arpl
in
and
dec
mov
pusha
xor
inc
sbb
cli
add
pop
jbe
out
jmp
pop
aam
sub
pop
(bad)
or
cmps
or
jmp
mov
xchg
call
and
push
je
aas
pop
test
xchg
and
pop
cmps
out
stos
pop
sbb
neg
arpl
add
es
test
or
jb
inc
pop
adc
bound
les
mov
ss
and
cs
ja
sti
in
or
jae
adc
sbb
or
cmp
imul
and
fldcw
fsubr
inc
cmp
lea
pop
xchg
(bad)
jl
push
pusha
dec
mov
(bad)
pop
xor
outs
adc
fnsave
popf
sar
out
mov
pusha
ins
sub
arpl
cmp
adc
call
mul
dec
push
mov
cmp
into
(bad)
fcomp
sub
sbb
pop
fstp
xor
xchg
fwait
add
ss
mov
xchg
dec
fwait
mov
movs
jbe
jmp
mov
cmp
jb
sbb
and
mov
sub
pop
xchg
icebp
xchg
push
and
mov
add
or
mov
(bad)
sub
cmp
push
icebp
cdq
or
cs
in
push
push
retf
movs
ins
xor
and
pop
xlat
ins
mov
fisub
outs
in
cmps
jne
pop
adc
xor
xor
jle
xor
jbe
iret
dec
ret
pop
fwait
fwait
adc
push
pop
sbb
and
lods
test
push
call
dec
mov
xlat
adc
mov
xor
pusha
(bad)
in
inc
mov
icebp
sub
mov
jl
es
cmp
xor
shr
in
jns
dec
not
inc
outs
loopne
push
cs
sub
test
out
mov
or
push
and
adc
popaw
push
outs
stc
xchg
push
adc
repnz
add
dec
mov
stc
adc
leave
lods
jns
out
jmp
mov
xor
test
es
pop
sub
repnz
xchg
(bad)
and
daa
cmp
ret
mov
xchg
jbe
es
push
inc
sbb
push
dec
maxps
push
imul
gs
int
xchg
pushf
adc
sub
jo
mov
lods
out
adc
push
inc
sbb
inc
out
stos
push
(bad)
mov
inc
leave
and
and
stos
xor
ror
iret
xchg
jp
mov
cmp
xor
xchg
xchg
lods
fwait
das
jbe
outs
push
ins
out
jno
enter
push
pop
jns
popf
jp
push
pop
mov
dec
xchg
sbb
loop
xchg
mov
xchg
dec
jb
mov
adc
js
mov
mov
outs
lds
jne
outs
sbb
pop
mov
out
rcr
inc
inc
xchg
mov
mov
push
inc
jns
mov
call
ret
lahf
add
sbb
mov
in
popa
stc
out
xor
xor
jl
sbb
mov
repz
mov
push
add
push
lahf
scas
ficomp
adc
leave
push
jl
fdiv
mov
sbb
lds
sbb
mov
icebp
sub
lahf
aad
mov
popa
xchg
add
sbb
leave
xchg
jo
cmps
loope
loope
sub
xchg
ins
jbe
ds
dec
jbe
mov
adc
push
mov
pusha
lods
jg
sub
fisttp
sti
pop
sub
jnp
(bad)
mov
xacquire
icebp
inc
shr
add
test
adc
test
xlat
dec
mov
sbb
ficomp
dec
add
sub
xor
lahf
or
sbb
fisubr
into
sub
add
and
test
fucomp
in
adc
sbb
(bad)
jle
nop
or
and
xlat
out
arpl
xor
pop
ja
push
fsub
mov
jbe
jno
jno
lods
xor
cmps
and
fsubr
out
or
sub
lea
add
sbb
aam
out
out
add
call
mov
mov
repz
jnp
inc
fnsave
mov
movs
push
xor
and
cmp
inc
and
cmp
cmp
out
test
iret
mov
jmp
or
jns
cmp
and
dec
cmps
xchg
mov
movs
lea
push
xlat
fsub
jae
retf
rcr
loopne
xchg
xchg
and
or
cmp
div
in
sbb
pop
stos
call
(bad)
fnsetpm(287
hlt
test
jmp
and
adc
out
mov
jnp
cwde
adc
add
sbb
test
sbb
sub
adc
addr16
(bad)
dec
es
out
je
push
cwde
dec
cmp
mov
and
movs
push
jno
cmc
lods
retf
fwait
mov
shr
add
fdivr
mov
and
mov
daa
sbb
xchg
adc
adc
push
xor
repnz
loopne
adc
jne
ret
cmp
idiv
jo
sub
mov
popf
or
mov
jge
add
mov
sar
in
(bad)
and
xor
fmul
aam
mov
std
test
(bad)
loopne
sub
mov
enter
popa
pushf
add
add
cs
xlat
aad
ds
bound
ja
jmp
cmp
fild
sub
addr16
call
add
mov
fst
lods
(bad)
pop
mov
std
adc
rol
outs
sbb
jo
je
sbb
inc
in
pop
scas
xchg
and
xchg
pushf
adc
jl
dec
inc
mov
movs
pusha
jmp
mov
lods
fist
mov
dec
sub
push
daa
xchg
fdiv
test
sbb
out
div
loope
scas
mov
cmc
mov
adc
sbb
outs
inc
xlat
fcmovnu
ins
imul
jl
adc
dec
(bad)
in
in
repnz
pushf
dec
add
cli
dec
outs
in
popa
enter
mov
pop
inc
dec
xchg
mov
add
adc
loope
cmp
call
fs
or
dec
into
mov
pop
dec
mov
retfw
lods
dec
jno
je
push
cmp
push
fs
jmp
ret
push
mov
test
aaa
js
jmp
xchg
outs
sub
out
mov
in
jmp
sub
cwde
out
mov
fwait
nop
dec
and
dec
stc
je
cmps
pop
shr
sbb
xchg
adc
sbb
xor
xor
xchg
fwait
or
(bad)
lock
fld
inc
add
jne
xchg
repz
mov
mov
lock
or
jnp
imul
mov
mov
xor
fadd
not
and
lock
xor
pop
pop
cmp
ins
fdivr
mov
jmp
loopne
retf
cmp
movsx
or
rcr
or
lods
pusha
cld
jno
bnd
std
mov
rcl
add
das
idiv
ja
sbb
push
xor
lahf
push
pop
aaa
inc
mov
mov
push
int3
mov
xlat
pop
inc
inc
loopne
(bad)
mov
inc
push
aaa
ins
sbb
in
add
sub
cmc
pop
add
ins
lods
repz
mov
das
or
ror
(bad)
mov
fcmovb
mov
repnz
test
mov
dec
loop
call
out
mov
mov
adc
outs
xchg
mov
fcomp
cmp
xor
(bad)
aas
inc
gs
jmp
shl
(bad)
push
sub
test
enter
daa
in
inc
stos
js
rol
mov
sbb
mov
add
nop
lock
jmp
inc
mov
xor
ja
xchg
mov
ins
ins
loopne
test
push
mov
popa
mov
jo
inc
lods
je
push
sub
pop
inc
cmp
lds
lods
dec
adc
out
ret
aas
mov
pop
out
movs
fstp
xchg
pop
hlt
cmp
xchg
ja
lds
or
mov
cli
push
aaa
mov
hlt
loopne
pop
fwait
out
mov
mov
fadd
jmp
hlt
push
jae
or
aad
aas
xor
inc
pop
adc
out
mov
pop
or
cmp
xor
pop
or
xchg
adc
rol
jb
push
mov
call
iret
mov
or
clc
cmp
mov
mov
scas
sub
ror
jno
and
jge
das
mov
in
mov
lods
popf
sbb
daa
dec
add
fld
pusha
hlt
and
xor
xchg
inc
adc
addr16
cmp
scas
dec
pop
enter
mov
adc
ds
loop
and
clc
inc
or
sub
cs
push
sub
jo
(bad)
pop
icebp
or
or
hlt
ret
aam
mov
cs
xchg
adc
add
cmps
sbb
jns
adc
sbb
push
dec
jmp
arpl
out
and
jmp
mov
mov
and
mov
or
(bad)
call
pop
or
inc
fdiv
jbe
pushf
std
iret
mul
mov
iret
pop
cli
fs
or
ret
mov
pop
ss
imul
push
jb
add
inc
xor
lock
jb
mov
ja
jbe
push
sbb
dec
iret
push
pop
test
jp
test
lds
sbb
dec
sbb
data16
xor
arpl
or
ins
ret
cmp
push
test
xchg
je
icebp
cs
mov
or
jmp
ror
sbb
fidivr
inc
out
hlt
into
repnz
push
out
ds
adc
(bad)
loopne
mov
dec
cdq
fwait
or
in
stc
push
mov
adc
pop
loopne
hlt
test
imul
call
data16
in
jns
or
aad
dec
movs
cmp
jg
mov
ficom
mul
push
shl
mov
adc
aaa
sub
out
or
enter
or
xor
lds
inc
lea
fwait
pop
daa
or
add
ret
aad
popa
repnz
and
test
jmp
pop
test
(bad)
stc
mov
add
adc
outs
mov
shl
pusha
xchg
dec
repz
addr16
leave
imul
xor
push
cs
pop
mov
pushf
test
or
ror
or
shr
dec
mov
xchg
out
and
pop
das
icebp
mov
cmc
pop
sub
mov
mov
pop
pop
jbe
adc
imul
in
jge
in
aam
and
xor
xlat
in
lods
fdiv
adc
cli
(bad)
xor
add
sub
inc
mov
gs
scas
lods
hlt
mov
aas
nop
xchg
inc
nop
xor
push
jbe
rcr
push
les
adc
imul
and
aaa
push
(bad)
lock
mov
mov
sub
pop
sbb
adc
push
push
and
(bad)
into
es
lea
and
mov
add
dec
pop
ds
mov
(bad)
lahf
lea
add
push
ins
sub
cs
sub
cmps
mov
jle
pop
stos
or
adc
mov
add
and
or
lock
out
xlat
pushf
push
scas
and
xchg
push
imul
mov
mov
xor
(bad)
add
aad
aaa
rol
add
fisubr
sbb
sub
(bad)
and
test
push
loop
push
jb
pop
adc
push
sub
and
jecxz
sbb
fldcw
adc
and
push
lea
shl
aas
mov
and
pop
fdiv
dec
imul
push
sub
les
jae
ja
imul
jl
inc
jo
xchg
mov
add
jp
retf
push
and
in
lods
es
inc
cli
stc
test
arpl
dec
lods
(bad)
jg
mov
neg
push
cdq
test
js
test
sub
call
mov
jbe
cmps
mov
mov
imul
in
test
mov
ret
test
sub
int3
fisttp
in
cmp
adc
push
ds
pushf
xor
call
mov
adc
out
ds
sbb
mov
cmp
in
mov
test
ret
pop
shl
push
mov
cld
outs
scas
ins
cs
pop
sub
cmp
xchg
pop
jnp
mov
dec
stos
pop
cs
scas
daa
dec
mov
ret
jp
out
into
cdq
lahf
int
inc
sar
adc
(bad)
clc
push
data16
jo
cmps
mov
stos
and
jl
aam
sub
(bad)
adc
xchg
sar
std
and
pop
imul
xchg
fdivp
push
and
sub
(bad)
push
cs
cmp
xchg
inc
sbb
idiv
rcr
sub
mov
xlat
add
pop
xchg
ds
fscale
sub
jae
aad
je
scas
retf
mov
mov
imul
dec
sbb
mov
and
ds
shl
movs
mov
enter
push
pop
add
and
mov
push
sbb
sbb
fld
mov
xchg
push
call
and
daa
push
in
add
pop
clc
mov
jae
inc
and
adc
fmul
call
adc
sahf
int3
jle
jmp
jbe
jno
rcl
and
jo
xor
push
fimul
out
mov
shr
sbb
std
mov
out
ret
fadd
nop
pop
jae
xchg
div
icebp
adc
rol
mov
jbe
cmp
fcom
fcomip
retf
in
xchg
jb
jl
rol
or
inc
into
test
dec
lock
xor
pop
ret
sub
nop
mov
nop
pop
sbb
cmps
in
int
xchg
xor
mov
dec
mov
leave
shl
xchg
pop
adc
aam
ret
xchg
sbb
(bad)
mov
pop
push
push
aam
jge
scas
pop
or
ret
adc
add
xor
int
stos
fdiv
fdivr
and
cld
popa
lods
xchg
mov
mov
push
pop
and
or
(bad)
cwde
sbb
mov
ins
fcmovu
jmp
ds
(bad)
mov
mov
or
fmul
jno
cmc
sub
xchg
mov
xchg
cmp
sbb
or
loop
nop
ins
push
mov
arpl
push
loopne
sub
loope
pop
mov
(bad)
dec
(bad)
jg
lock
aaa
rcl
hlt
ficom
pop
inc
outs
inc
sahf
loope
xchg
sbb
fistp
test
icebp
jnp
neg
daa
fild
(bad)
push
pop
add
sub
add
not
out
jmp
mov
ret
test
ds
inc
cmp
scas
mov
mov
dec
mov
ret
jp
and
test
xchg
int
ss
gs
cmp
push
(bad)
cdq
push
lahf
shl
xchg
jmp
stos
adc
inc
arpl
enter
fild
retf
retf
push
sbb
out
in
ret
pop
mov
je
sbb
scas
jae
lea
mov
adc
iret
mov
retf
or
fild
fstp
retf
push
arpl
push
pop
test
mov
lahf
push
rol
mov
imul
popa
sbb
rol
jns
xor
adc
icebp
cld
jne
mov
dec
cld
or
sub
inc
mov
or
js
sahf
daa
sbb
mov
in
jno
enter
lock
push
nop
aas
mov
loop
pop
adc
ret
mov
sets
fdivr
mov
add
mov
sahf
or
or
pushf
and
out
out
push
pop
sub
lahf
push
enter
mov
aad
mov
out
mov
and
icebp
cmp
mov
cmps
cwde
cmp
or
mov
jge
ret
das
(bad)
mov
int3
out
in
movs
mov
lock
call
dec
(bad)
or
jl
popf
sbb
xchg
jmp
jmp
jl
int
and
ret
outs
inc
xor
rcr
mov
rcl
bnd
jae
mov
inc
sbb
inc
ret
pop
inc
shl
daa
(bad)
stc
jnp
xor
adc
mov
mov
and
bound
add
pop
pop
push
cmp
cs
popa
not
push
movs
xchg
cmp
repz
mov
mov
pop
or
cmp
jno
and
(bad)
xor
xor
jp
dec
cmp
sub
addr16
lods
inc
adc
jmp
shl
fidivr
daa
cmc
fdivr
or
dec
xor
pop
mov
jno
mov
mov
mov
pushf
out
mov
jmp
in
arpl
icebp
stos
ffree
xor
movs
cmp
and
xlat
das
sahf
sbb
pop
jp
retf
in
cmp
sub
scas
retf
(bad)
jl
dec
add
and
jne
je
and
ret
mov
out
cld
push
xor
mov
jnp
xor
sti
lea
push
sbb
int
pusha
mov
out
push
fsubr
or
in
inc
and
shl
sar
push
push
rdpmc
add
jns
xchg
mov
aaa
sbb
inc
test
pop
aad
popa
(bad)
das
mov
push
inc
push
sbb
sbb
mov
retf
mov
ret
mov
push
and
sbb
(bad)
in
(bad)
std
icebp
jae
ins
cdq
mov
inc
dec
ins
inc
lock
call
push
inc
xchg
je
shr
adc
aad
inc
mov
loop
mov
jecxz
popf
cld
popa
fdivr
cvtps2pi
jmp
movs
jne
jmp
addr16
cli
pop
mov
(bad)
fbstp
repnz
outs
jne
out
add
iret
jne
lods
xor
push
loope
and
fwait
xor
fistp
ss
xchg
lods
icebp
and
push
mov
jb
rcl
retf
scas
push
adc
test
ror
jmp
sbb
mov
xor
mov
xor
aad
cmc
jae
lea
outs
or
inc
jmp
sbb
xor
les
mov
sub
ss
fs
not
clc
lea
(bad)
cmps
cmp
or
retf
aam
adc
icebp
test
shl
and
sti
hlt
sbb
pop
mov
mov
js
jae
cmp
pushf
test
push
(bad)
adc
arpl
stos
xchg
aas
or
daa
or
xchg
stos
and
push
mov
mov
adc
call
in
jmp
adc
cmp
pop
pop
inc
inc
pop
aas
add
push
xor
sbb
add
push
aaa
fst
jmp
dec
mov
outs
mov
mov
add
leave
(bad)
sub
adc
(bad)
and
aam
popa
or
cmp
cmps
jne
mov
cmp
hlt
mov
fisttp
jmp
push
lods
cmp
dec
enter
push
or
or
mov
lea
or
mov
movs
adc
add
push
lock
test
popa
rcr
jmp
test
mov
mov
je
sbb
sub
imul
xor
dec
push
test
xchg
cwde
into
xor
xchg
jo
scas
aas
jbe
jno
arpl
pop
or
neg
pop
xchg
lods
cmps
xchg
stc
int3
addr16
enter
std
outs
das
mov
xchg
jnp
adc
jb
fisubr
fwait
retf
(bad)
popa
push
lahf
cmp
popf
call
jmp
xor
test
test
test
jno
pop
sub
xor
jge
pop
imul
cmc
rcr
cmp
sub
sbb
shr
arpl
ret
dec
sbb
jnp
dec
sti
in
rcr
dec
loop
dec
ss
les
push
retf
and
mov
shr
ins
cli
sahf
movs
push
out
ficom
jg
idiv
fdiv
mov
pop
dec
cmps
add
or
std
fdiv
lods
mov
gs
mov
pop
gs
adc
cdq
xor
dec
ins
into
mov
(bad)
pushf
test
not
call
mov
pop
gs
inc
out
inc
or
xchg
aad
shl
mov
cmc
dec
sbb
mov
scas
push
hlt
inc
sbb
pop
mov
iret
mov
mov
mov
jb
push
repnz
push
sub
sbb
cmp
mov
lods
cmc
dec
or
mov
scas
fsub
int3
cmp
pop
hlt
inc
test
jg
int3
xchg
out
lods
add
jb
inc
out
mov
inc
imul
cmp
pop
ins
jg
fwait
(bad)
jmp
je
sbb
mov
sub
lds
sub
adc
int
aam
mov
xor
scas
scas
movaps
out
dec
data16
scas
sbb
mov
inc
mov
retf
in
lods
mov
sti
fldcw
push
(bad)
or
call
sar
and
mov
in
fistp
add
nop
ins
test
adc
xor
icebp
pop
mov
test
test
mov
shl
mov
pop
fld
push
jnp
jmp
pushf
mov
mov
push
gs
sbb
out
(bad)
mov
pushf
iret
adc
lock
iret
sub
leave
ror
fadd
mov
ficomp
(bad)
out
and
mov
(bad)
mov
push
outs
or
dec
(bad)
loope
mov
inc
enter
sbb
push
adc
push
add
push
sti
hlt
dec
sub
inc
jle
mov
inc
arpl
dec
sahf
imul
sbb
call
jmp
in
xor
jge
mov
jno
jle
mul
mov
xchg
jecxz
int
pop
nop
dec
cmp
dec
mov
fstp
jmp
imul
push
jns
fs
in
inc
stos
mov
(bad)
icebp
popf
jnp
scas
jbe
je
(bad)
and
xlat
push
fwait
xor
adc
pop
xchg
sti
or
sbb
push
push
idiv
out
sti
jnp
push
outs
pushf
aad
test
fcomi
adc
scas
ret
test
out
xlat
daa
jl
nop
or
ds
xchg
in
iret
or
xchg
and
cwde
fucomip
mov
iret
cld
mov
inc
addr16
cdq
mov
leave
test
xor
fsub
rcl
sti
dec
or
(bad)
ins
fs
push
push
ds
jmp
push
mov
pop
popa
jg
pushf
(bad)
arpl
inc
shl
adc
cs
pusha
cmp
jns
(bad)
lods
adc
rol
mov
jl
repz
ja
pushf
mov
sub
nop
loopne
pop
jecxz
shl
repnz
xchg
and
cmp
lds
jle
cli
ss
stc
cmp
dec
out
jb
xchg
jle
fwait
push
jo
cmp
outs
ins
add
push
in
mov
dec
movs
or
cmp
sub
repnz
fild
adc
scas
repz
xchg
push
or
and
clc
dec
cmc
punpckldq
push
pop
shr
push
mov
test
out
ret
fs
xor
(bad)
(bad)
xchg
cmp
xor
or
jl
pop
adc
mov
jo
xor
arpl
pop
ds
mov
fst
or
jns
cmp
mov
fistp
dec
lea
clc
xor
mov
test
or
jmp
and
mov
jmp
js
mov
out
pop
xlat
test
fcomp
cmc
mov
and
mov
mov
add
js
in
mov
imul
xor
mov
dec
(bad)
pop
fimul
lahf
div
ss
push
jp
xchg
xor
or
cmc
push
pop
fdivr
into
psrld
push
imul
cmp
ret
femms
cmp
lds
xchg
stos
push
out
inc
jb
xor
push
les
pop
xchg
pop
scas
xchg
xor
iret
cdq
xchg
xchg
add
and
push
mov
push
scas
add
jo
push
jp
shr
lea
jp
imul
std
jae
les
push
xchg
lds
idiv
mov
adc
imul
jae
das
data16
and
aad
mov
mov
sbb
cld
jg
imul
(bad)
test
dec
pop
inc
shr
lahf
push
jae
jno
sti
xchg
mov
rep
sub
repnz
mov
push
popf
icebp
pop
lds
pop
int3
push
or
mov
cmp
mov
in
iret
(bad)
ds
jbe
mov
xlat
mov
outs
loope
xchg
daa
mov
out
adc
hlt
cmp
test
sbb
in
jbe
aaa
clc
out
js
in
sbb
xor
outs
in
pop
pusha
mov
repnz
xchg
ss
(bad)
or
out
call
jbe
inc
aaa
inc
jne
icebp
ret
add
outs
movs
inc
fmul
inc
cmp
fidiv
call
call
call
dec
loope
jl
cwde
sar
push
xchg
jne
push
cmp
xchg
mov
jne
lods
int3
pop
mov
(bad)
into
push
cmp
ret
mov
aad
sbb
es
jo
nop
xchg
xchg
jmp
in
mov
repnz
mov
inc
scas
xor
fwait
cmps
sub
jge
mov
loope
and
int3
test
out
lock
pushw
(bad)
in
dec
cdq
rcr
lds
sub
xchg
stos
pop
add
sti
call
push
adc
adc
leave
enter
adc
outs
repz
addr16
mov
bound
push
add
mov
sbb
push
mov
(bad)
cmp
mov
mov
test
not
daa
ins
fcmovne
jle
and
retf
nop
ret
sbb
sahf
loop
xchg
jmp
mov
(bad)
pop
popa
mov
pop
shl
sbb
outs
fdiv
pop
jle
sbb
popf
cwde
jmp
push
shr
mov
inc
jo
pop
sub
mov
out
fsubp
out
push
xchg
fnstcw
(bad)
cli
aam
or
push
int3
nop
imul
or
xchg
jp
dec
adc
mov
mov
aaa
xchg
lods
dec
xchg
out
inc
movs
arpl
call
fidiv
jl
add
xchg
das
lahf
adc
pop
xchg
mov
mov
stc
out
popf
in
ins
jg
fcmovnu
cmp
int3
inc
dec
lahf
cdq
xlat
lds
or
lds
addr16
mov
xchg
and
or
fldl2e
cmp
sbb
and
dec
cmps
xchg
nop
inc
or
movs
and
mov
push
cmp
push
adc
jg
sbb
lock
cld
and
bnd
inc
ds
call
sbb
push
dec
fcomp
nop
cmp
dec
push
cmp
loop
pop
push
push
cmps
arpl
push
xchg
jmp
(bad)
sub
push
in
sbb
inc
retf
inc
cmc
in
jecxz
adc
scas
mov
repz
loope
cld
pop
enter
cdq
adc
sub
daa
int3
shr
mov
push
loope
in
push
jl
jne
xchg
mov
xlat
ret
mov
cdq
jno
xor
in
mov
sbb
jge
inc
adc
push
imul
lahf
out
jbe
mov
pusha
imul
sti
and
cmp
loop
sub
stos
outs
ja
pop
rol
test
shl
div
shl
and
inc
xor
scas
pop
rcl
mov
jp
add
imul
mov
sahf
mov
push
fistp
xor
cld
(bad)
xor
imul
xchg
jl
je
into
cmovnp
add
jnp
js
push
sub
scas
dec
jl
cmp
in
test
ss
es
std
add
cmp
mul
mov
in
sbb
sub
jmp
push
jb
(bad)
and
sub
call
xchg
cmp
mov
jno
push
rcr
mov
stos
mov
(bad)
test
mov
sahf
jl
add
repz
sub
mov
and
and
mov
add
in
scas
loop
shr
xchg
mov
jnp
sbb
xor
aad
fwait
(bad)
and
imul
and
sbb
push
ds
lods
or
call
xor
and
inc
in
inc
and
int3
clc
mov
shl
adc
add
lea
shl
xor
jmp
jne
jnp
ja
fs
jbe
inc
in
jo
push
xor
pop
pop
pop
jne
adc
ret
repz
je
xor
addr16
in
xchg
repz
jmp
hlt
dec
je
xlat
pop
mov
push
out
shr
imul
pop
cmp
sti
loop
inc
ins
sbb
mov
enter
fs
xchg
gs
push
xor
lods
inc
add
inc
aad
push
enter
fistp
push
jo
inc
pop
in
ret
call
and
pop
jmp
in
xor
rol
test
loope
sar
cmp
xor
hlt
aas
mov
xlat
add
cmp
cmp
add
out
jle
lods
dec
sbb
push
call
jg
sar
xlat
out
aas
cdq
pop
aam
pop
sbb
push
cwde
lods
mov
and
(bad)
jae
mov
push
push
repz
and
test
pop
push
dec
and
scas
das
loop
lods
cmp
push
push
or
or
in
int
cs
iret
adc
adc
sub
test
stos
push
inc
sahf
cli
js
aad
pop
dec
dec
out
dec
inc
xchg
repz
loope
scas
adc
jl
test
into
push
push
jp
mov
inc
inc
stc
sti
sub
(bad)
in
cmp
or
or
jmp
aad
pop
rcr
adc
mov
add
xchg
popa
xor
push
push
pop
jge
sbb
icebp
(bad)
cdq
mov
add
sar
cmp
fdiv
gs
fnsave
jmp
push
sub
mov
and
mov
in
sahf
inc
pop
jb
mov
sub
je
and
xor
test
sub
pop
cmps
retf
inc
adc
lods
js
push
lods
sti
mov
dec
ja
fwait
cld
add
data16
ins
mov
xchg
jle
xchg
add
pop
mov
cmp
idiv
hlt
cmp
ret
push
repnz
sar
jo
or
icebp
lahf
loop
nop
sbb
shr
or
push
into
repnz
popf
pop
shr
xor
cmp
retf
mov
inc
int
outs
sub
dec
jns
jnp
cmp
cmps
xor
sbb
mov
mov
xor
push
jmp
imul
jp
xchg
inc
or
sar
mov
mov
adc
popf
push
mov
and
sub
push
in
mov
in
stc
xchg
push
jae
sti
mov
sbb
clc
xlat
ins
inc
hlt
adc
iret
mov
frstor
stc
xchg
pop
je
pop
add
add
pop
cmp
mov
sub
in
fwait
xor
sub
or
dec
add
loopne
xor
ss
loope
outs
cld
jge
jbe
pop
lods
pop
xor
pop
adc
neg
adc
aam
add
mov
les
ja
or
cmp
push
xchg
sub
not
jge
mov
lahf
mov
or
fld
retf
mov
sbb
xor
outs
js
jo
dec
in
loopne
out
fsubr
add
int3
cmp
loop
scas
ffree
call
xchg
shr
in
push
push
or
jmp
jge
sub
sbb
imul
add
push
jo
inc
jo
sub
das
dec
js
js
fisubr
js
inc
lahf
sub
cwde
lods
mov
or
cwde
jg
sub
imul
(bad)
ja
out
aas
xchg
mov
mov
sub
leave
add
sub
sti
rcl
outs
cmps
push
or
or
dec
mov
ds
dec
xor
xor
loopne
dec
jp
jmp
jmp
inc
cmps
mov
div
add
adc
adc
and
push
daa
mov
push
sbb
inc
std
and
xchg
and
cmps
cmp
cld
and
bound
jnp
sbb
imul
add
inc
je
sub
and
inc
pop
push
int3
cmps
push
push
pop
aaa
loop
cmps
dec
(bad)
push
jbe
xchg
fstp
xor
lods
rol
dec
push
and
cmps
repz
enter
in
punpckhwd
inc
xchg
fsubrp
xchg
pop
popw
mov
xor
dec
mov
push
and
add
es
sahf
sbb
jo
icebp
(bad)
cmc
push
out
mov
xchg
and
aam
sub
mov
xchg
sar
pop
xor
mov
push
xor
jo
repnz
sbb
sub
pop
inc
jle
cmp
sub
push
fs
fiadd
stos
das
xor
push
stc
sub
jg
cmp
add
pop
jne
jp
mov
dec
packssdw
ja
test
xchg
cwde
fcomp
scas
pop
jae
outs
dec
shl
loop
xchg
and
pushf
imul
dec
cmp
fistp
pop
sub
dec
in
jmp
retf
mov
xchg
fistp
nop
lods
in
(bad)
mov
loop
mov
inc
dec
movs
xchg
ins
xor
mov
in
mov
push
xchg
inc
cmps
and
pop
dec
mov
jp
push
jns
ret
stos
cwde
mov
movs
dec
jbe
lds
pop
inc
dec
(bad)
cmp
clc
ss
or
cmp
clc
cmp
mov
pop
in
cmp
out
jo
ret
inc
inc
fbstp
mov
sbb
rcl
test
cmp
adc
adc
sbb
inc
imul
dec
mov
push
pop
(bad)
data16
je
jp
dec
push
sbb
fadd
outs
sbb
int
lahf
fwait
scas
mov
(bad)
and
repz
mov
cmps
push
pop
sub
jmp
jge
aad
movs
in
imul
pop
add
mov
mov
repz
call
xchg
dec
in
or
in
repnz
shl
xor
(bad)
mov
ss
inc
xchg
sbb
cmp
stos
fldpi
movs
and
cs
adc
inc
pop
jae
cmps
xchg
outs
jae
xor
dec
xchg
mov
lock
xchg
ins
push
pop
out
jle
adc
es
(bad)
xchg
out
and
div
data16
xor
dec
adc
jl
fnsave
out
and
sub
sahf
rcl
repnz
aaa
or
repz
hlt
cmp
fadd
js
pop
pop
xchg
loop
mov
lock
xor
mov
pop
mov
int3
fadd
adc
cmp
sbb
fnsave
(bad)
shl
jb
pop
ret
push
dec
inc
cmp
idiv
mov
movlps
cwde
mov
xchg
and
mov
push
inc
adc
jp
int3
inc
pop
adc
sar
mov
pushf
and
sub
push
leave
sub
aad
xchg
mov
jb
inc
jb
icebp
es
and
xor
or
add
adc
mov
pop
jno
cdq
ds
xchg
in
mov
cwde
test
add
add
push
xchg
call
fcom
sbb
jns
adc
mov
xchg
jno
stos
hlt
dec
lods
cs
fidiv
jne
push
fisubr
mov
push
out
aam
mov
cld
dec
dec
scas
dec
cs
arpl
mov
shr
cmovl
loop
gs
sbb
(bad)
mov
push
pop
imul
retf
push
(bad)
fdiv
call
pushf
cmp
test
mov
mov
push
mov
cmp
sub
aad
push
pop
add
mov
hlt
jp
jp
mov
jecxz
sbb
(bad)
adc
aad
loop
clc
int
stos
sbb
(bad)
aas
mov
dec
outs
enter
repnz
mov
pop
xchg
inc
in
repz
cdq
xchg
sahf
outs
pop
ds
stc
xor
push
and
mov
out
lds
in
mov
mov
scas
daa
push
push
fst
popf
push
into
add
pop
aas
sbb
mov
sbb
dec
jp
adc
or
cdq
mov
mov
imul
shl
pushf
shl
je
sub
pushf
jnp
and
mov
movs
push
and
add
fistp
or
test
xchg
imul
jl
inc
add
fmul
(bad)
daa
dec
clc
xor
retf
push
and
add
popa
inc
xchg
into
fistp
ss
and
std
mov
loope
test
(bad)
jge
xchg
inc
hlt
sti
ins
data16
in
push
rcl
outs
cmp
in
xchg
sbb
mov
adc
sbb
dec
out
pop
movs
fadd
movs
dec
aaa
jle
push
das
in
pushf
pop
icebp
jmp
dec
in
call
rol
push
(bad)
fstp
dec
leave
dec
div
xchg
adc
mov
in
cmp
pop
pop
mov
lods
jne
aaa
in
call
or
mov
sti
add
adc
mov
pusha
and
sbb
popf
dec
xchg
nop
adc
mov
(bad)
xchg
xor
push
popa
adc
shl
xor
out
lock
and
and
mov
sub
adc
push
cmp
out
pushf
xor
sar
dec
sbb
jl
fisttp
inc
mov
push
or
jbe
test
(bad)
xor
adc
retf
sbb
imul
and
add
mov
push
gs
ror
mov
repz
push
fsubr
push
bound
xchg
mov
mov
in
icebp
cwde
and
mov
ret
test
fidivr
popf
in
hlt
test
xchg
sbb
(bad)
lea
sbb
add
pop
inc
mov
shl
dec
dec
mov
stc
aaa
adc
pop
ins
pop
inc
add
sbb
xchg
setp
mov
xor
sti
repnz
fisub
(bad)
or
(bad)
shl
adc
sbb
xchg
test
mov
push
inc
scas
mov
ror
movs
jl
mov
call
cmp
xchg
xor
aaa
or
and
lods
lea
test
xchg
xchg
lods
push
inc
in
std
aaa
sar
mov
mov
jnp
sub
jle
mov
in
je
xor
call
or
in
call
ins
dec
loope
dec
mov
repz
call
sbb
das
push
and
mov
mov
add
pop
add
pop
icebp
cmp
xchg
jo
lock
fs
add
mov
or
loop
pushf
xchg
int3
push
imul
lahf
idiv
out
(bad)
popf
sti
cmp
jbe
add
or
xor
ins
adc
add
shr
in
mov
pushf
cmp
mov
shr
into
inc
or
jmp
cmp
cmp
or
pop
not
out
ins
sub
aaa
and
imul
rcr
inc
test
mov
and
adc
test
push
inc
xor
sub
xor
je
cmps
push
sbb
imul
cmps
mov
and
push
mov
or
dec
repnz
cmp
jnp
icebp
stos
lock
cmp
cmps
dec
mov
and
mov
cmp
sbb
xlat
outs
test
pop
pop
in
pop
out
fstp
cmp
and
mov
xchg
jg
adc
lds
or
mov
mov
push
retf
inc
push
sub
fist
call
(bad)
mov
clc
xchg
scas
ins
pusha
call
xor
sti
adc
adc
gs
xor
pop
xchg
xchg
sbb
push
js
inc
sub
mov
adc
adc
cli
inc
and
push
push
in
or
push
dec
dec
sti
sub
mov
loope
ins
std
ret
repz
jb
push
ror
aam
push
inc
add
cs
push
jmp
lea
pop
popa
mov
mov
push
jmp
lea
mov
sub
push
das
cmp
rcl
test
test
pop
fldcw
pushf
repnz
pop
daa
call
nop
pop
xor
dec
jbe
jp
fidiv
imul
sub
pop
test
loopne
(bad)
out
sub
inc
pusha
ss
fwait
js
xchg
push
rcr
ins
sbb
sbb
sub
mov
mov
cli
ds
xchg
in
imul
clc
fs
push
fdiv
inc
dec
jecxz
(bad)
and
xchg
jo
outs
sbb
test
jbe
lahf
lods
loopne
jge
xlat
xor
push
pop
mov
inc
jg
dec
mov
fild
call
packuswb
lahf
aaa
into
xchg
mov
mov
lea
add
addr16
xlat
push
or
mov
dec
add
pop
in
outs
div
push
outs
pop
push
cs
dec
sbb
adc
(bad)
addr16
xor
push
jno
test
pop
jmp
arpl
call
mov
cli
lock
and
repz
lahf
pop
mov
lods
mov
pop
ins
mov
fiadd
loop
adc
jb
fwait
test
or
sbb
jp
fimul
add
mov
(bad)
lock
enter
inc
or
cld
fisttp
push
icebp
lods
and
xor
pop
jno
bound
push
add
arpl
fadd
imul
or
pop
enter
loope
icebp
inc
mov
repz
mov
lea
push
outs
mov
xor
cmp
aaa
shl
sahf
imul
push
arpl
stc
pop
out
push
mov
aaa
pop
mov
nop
cmp
leave
(bad)
mov
cwde
inc
scas
loopne
shl
mov
push
clc
inc
ds
in
xchg
sub
aam
mov
fimul
(bad)
aad
stos
sbb
sahf
jge
arpl
fild
mov
movs
not
imul
shr
sub
or
xlat
mov
pop
inc
movs
pop
ins
mov
xlat
mul
gs
mov
push
add
jmp
and
mov
jg
xchg
push
mov
enter
ins
sub
iret
cmp
repz
pop
xchg
mov
sub
fmul
outs
test
test
push
sub
add
xchg
and
jnp
or
push
ret
pop
jnp
repz
inc
or
(bad)
mov
push
pushf
nop
push
mov
ins
pop
mov
aas
sahf
addr16
mov
sahf
mov
xor
sub
adc
ins
call
pushf
lea
pop
mov
sub
cmps
icebp
lds
cwde
aaa
push
add
and
test
shl
mov
inc
iret
test
mov
mov
or
dec
inc
mov
pushf
mov
mov
cmps
and
inc
sbb
push
hlt
pop
clc
xlat
push
sub
lock
call
repnz
retf
jbe
sbb
sub
sti
enter
cmp
lock
cmp
cwde
lock
add
mov
mov
cs
xor
shl
adc
add
dec
mov
or
sub
jge
(bad)
das
cmp
imul
jno
and
int3
sbb
xchg
(bad)
je
scas
add
cmp
push
mov
or
lds
mov
mov
adc
imul
push
and
xor
xchg
adc
push
inc
push
enter
(bad)
call
lds
mov
jmp
sbb
xchg
int
push
cmp
arpl
pop
mov
stc
add
dec
aas
and
sbb
xor
in
cdq
into
(bad)
mov
jge
pop
dec
or
popa
loope
mov
(bad)
mov
xchg
or
dec
ret
mov
sub
or
fmul
pop
sahf
stc
hlt
sub
jmp
mov
mov
jnp
arpl
jmp
jmp
pusha
repnz
mov
gs
bound
ret
xor
aam
neg
and
jns
push
in
push
stos
push
cmps
shl
mov
pop
push
retf
ror
test
in
mov
inc
pop
dec
mov
jae
xchg
stos
daa
xor
shl
daa
sub
setb
jecxz
outs
push
fldenv
scas
es
pop
add
es
mov
hlt
stos
into
ja
stos
sub
fwait
xchg
jge
sub
(bad)
mov
jo
sub
adc
dec
xchg
aaa
imul
adc
rcr
pop
and
inc
aam
or
cwde
xchg
data16
rcl
jecxz
xlat
dec
inc
in
test
mov
int3
(bad)
shl
sub
mov
mov
and
test
xor
add
xor
das
cwde
xchg
adc
xchg
mov
inc
mov
mov
mov
fs
cdq
pusha
aaa
aad
movs
push
jmp
outs
xchg
loopne
ret
scas
sub
ret
ret
xor
jno
adc
ret
add
pop
hlt
(bad)
adc
cmp
mov
or
pop
pop
xchg
ss
inc
sub
fidivr
out
fild
int3
xchg
add
cmp
dec
inc
pop
scas
(bad)
outs
pop
(bad)
enter
call
in
jecxz
es
jle
out
(bad)
retf
js
fbld
add
test
mul
lds
ret
mov
rcr
push
sahf
mov
and
mov
fwait
jns
pop
aaa
mov
aam
int3
xchg
cmp
repnz
jbe
or
add
fist
daa
hlt
pop
pop
mov
ds
sbb
aad
sbb
mov
lods
sub
jo
xchg
xchg
xchg
and
sub
shr
retf
push
mov
mov
in
jbe
sub
(bad)
xor
jb
push
jnp
and
(bad)
(bad)
(bad)
pop
cld
je
inc
call
mov
sub
xchg
mov
or
xor
cmp
mov
dec
mov
(bad)
imul
outs
cmp
in
pop
push
add
cmp
fldcw
aaa
and
inc
inc
cld
cmps
or
mov
or
pop
cs
mov
adc
or
dec
jno
rep
in
enter
cwde
js
and
in
adc
jb
push
cmp
repnz
pop
sbb
outs
js
lock
dec
jbe
aam
mov
xor
mov
mov
mov
dec
scas
jae
ss
inc
out
sbb
lahf
in
cli
jge
cmp
stos
mov
(bad)
fs
inc
jmp
jno
push
jb
test
cmp
xor
sub
rcl
jo
xchg
retf
mov
mov
jmp
(bad)
add
mov
sbb
and
xchg
outs
aad
aam
sub
in
add
add
jecxz
dec
imul
loop
pop
sahf
jle
test
dec
dec
pop
push
sbb
dec
fs
cmp
add
push
mov
int
int
je
push
stc
lock
dec
inc
inc
aas
or
into
repz
cmp
xor
or
into
dec
mov
mov
enter
jmp
xor
push
fwait
sahf
and
stos
add
mov
aad
push
cld
mov
and
push
lea
ret
cwde
inc
jno
push
(bad)
lea
mov
ins
clc
out
mov
xlat
icebp
dec
xor
push
dec
pop
ins
cmp
lds
inc
xchg
fs
xor
sbb
hlt
add
test
jg
xchg
jp
mov
out
mov
mov
and
push
jb
std
lds
mov
mov
sub
or
mov
xchg
inc
loop
scas
and
pop
jnp
into
pop
rcr
adc
in
xchg
loopne
sbb
or
stc
pop
dec
sub
and
int
and
mov
ss
add
ja
test
nop
cmps
int3
jg
movs
aad
push
pop
mov
push
push
jecxz
or
xchg
stc
lea
push
mov
or
xchg
popf
cmp
add
ds
jmp
dec
inc
inc
aad
fnop
add
arpl
test
sub
aad
inc
rcr
mov
out
mov
shl
jecxz
inc
cmp
cs
out
loopne
aaa
mov
js
je
lods
addr16
push
es
stos
repz
out
scas
mov
sti
mov
lds
or
das
adc
fsub
jmp
lahf
int3
int
sbb
leave
jge
adc
add
mov
sub
dec
xchg
aad
inc
fidivr
and
xchg
and
xchg
or
ror
dec
retf
jge
jo
xchg
mov
cs
rcr
cld
cwde
shr
jmp
mov
ja
and
nop
xchg
ja
sbb
sbb
dec
mov
and
pop
cmp
push
test
jno
jne
pop
adc
sub
mov
rcl
jbe
push
stos
iret
fcomp
mov
in
lock
and
arpl
and
xchg
call
(bad)
sub
sbb
fsub
je
add
inc
xchg
fstp
mov
mov
xlat
enter
pop
pop
out
cmc
sub
js
es
sbb
jmp
inc
and
ds
adc
jmp
out
(bad)
(bad)
sub
mov
mov
pop
dec
jmp
retf
lea
std
jnp
iret
scas
mov
mov
push
add
popa
fwait
and
push
push
dec
lods
sub
xchg
je
cmps
out
les
sbb
std
jnp
lahf
stc
dec
fld
and
sbb
fwait
ja
shl
retf
cmp
mov
shl
in
pusha
aad
call
std
inc
xchg
ins
push
pop
les
adc
push
and
pusha
or
mov
test
rcr
mov
pop
dec
adc
adc
cmc
in
inc
sbb
test
xor
sub
xchg
xchg
dec
std
popa
push
or
hlt
into
aaa
add
cmps
stos
aas
xchg
imul
in
push
mov
sub
(bad)
or
xor
ret
mov
mov
pop
inc
call
xlat
cmps
out
adc
or
pop
mov
and
pop
inc
or
xor
sub
xlat
in
and
adc
inc
sub
sub
push
and
iret
push
dec
sbb
xor
std
das
ret
jle
add
mov
sub
sbb
clc
jmp
cmps
movs
add
ins
cdq
into
jne
bound
std
out
out
inc
cld
push
xchg
mov
stc
movs
mov
push
jb
cmp
or
jns
pushf
xchg
movs
scas
inc
call
cmp
idiv
adc
hlt
xchg
dec
and
add
pop
lea
mov
jno
inc
fbld
bswap
in
mov
rcl
inc
rol
test
jge
aaa
cmps
daa
add
and
stos
mov
retf
jg
nop
or
aam
rol
repnz
dec
stos
fs
ins
outs
xor
xor
cld
imul
jmp
push
cwde
xor
inc
lahf
loop
lods
cmp
xchg
repz
adc
cmps
sub
sbb
dec
adc
loopne
add
aas
xchg
jecxz
cli
(bad)
fld
ret
add
jb
hlt
pop
push
adc
jecxz
sbb
cli
mov
cmp
mov
(bad)
icebp
jae
(bad)
pop
or
xor
scas
dec
scas
jns
ret
push
inc
(bad)
mov
inc
adc
jecxz
repz
ins
movs
outs
(bad)
cmps
xor
inc
inc
or
add
add
mov
retf
rcr
loopne
(bad)
stc
push
ret
into
add
mov
cld
(bad)
jle
out
dec
retf
mov
mov
sub
jmp
dec
ror
popf
inc
cdq
jmp
setle
pop
pop
and
xchg
cmp
cmc
fdivr
lods
(bad)
and
rcr
jg
push
push
pop
pop
mov
leave
adc
imul
out
mov
push
or
aam
in
dec
lahf
or
cmp
ficomp
and
int
ret
pop
ret
pop
fdiv
mov
adc
popf
inc
sbb
movs
inc
push
dec
cmps
pop
xchg
mov
mov
dec
sbb
test
mov
sbb
add
out
xchg
outs
dec
mov
jb
arpl
int
loope
inc
leave
push
jmp
jmp
lock
iret
(bad)
mov
dec
dec
data16
jne
dec
mov
(bad)
inc
and
inc
into
bound
nop
xor
xor
push
data16
mov
fidivr
pop
aad
pop
jg
mov
or
into
add
js
jns
dec
mov
push
push
add
push
sbb
lds
out
(bad)
popa
call
into
mov
mov
fwait
pusha
movs
gs
lds
mov
mov
imul
es
sbb
mov
in
das
cmps
fstp
fs
mov
hlt
and
cmps
(bad)
cmp
stos
daa
ss
pop
inc
mov
scas
out
mov
mov
sbb
mov
fld
js
sub
test
mov
xlat
sub
mov
push
add
mov
ins
jecxz
cmp
daa
mov
ss
cmp
mov
pop
jns
dec
mov
jb
sub
xor
cmp
and
sbb
nop
mov
mov
inc
xchg
(bad)
lahf
xchg
mov
popf
and
in
dec
loope
mov
(bad)
sahf
and
repz
outs
aam
retf
inc
and
sbb
cmps
out
push
dec
je
push
mov
cmps
and
cmp
lock
pop
or
xor
jp
out
xlat
lea
pusha
mov
cmp
add
ins
test
xlat
or
(bad)
push
jno
cmp
push
call
adc
dec
xchg
stc
inc
sub
imul
sbb
data16
and
aaa
jg
and
inc
cli
ret
addr16
adc
pop
xchg
mov
dec
cmp
add
mov
sub
xor
and
xchg
fnstsw
add
scas
jns
sbb
and
xchg
add
ins
sbb
mov
push
xlat
mov
xchg
xor
fwait
hlt
adc
add
jmp
loop
xchg
push
mov
dec
loope
xor
mov
imul
push
xchg
xlat
dec
mov
adc
sbb
arpl
rol
ds
sahf
add
and
push
adc
mov
or
in
sub
es
xor
cmps
cmp
pop
adc
mov
std
jge
sti
xchg
mov
jmp
inc
or
or
push
mov
ja
cmp
and
and
fsubr
dec
ds
sbb
rcr
mov
mov
out
cmp
and
pop
cld
stos
jb
data16
sub
shl
inc
xchg
into
mov
push
pmaxsw
icebp
or
mov
push
mov
pop
xor
xor
std
dec
xlat
sub
xchg
pop
clc
mov
adc
mov
jmp
xchg
or
cwde
loop
mov
hlt
hlt
xchg
out
sti
idiv
mov
fbstp
test
dec
retf
add
push
jp
test
push
inc
stos
mov
pusha
imul
mov
(bad)
push
sub
mov
shl
fcmove
loope
jno
jo
cmps
popf
inc
inc
repnz
push
lods
mov
xchg
mov
dec
adc
push
retf
popa
pop
sub
push
leave
push
mov
sbb
push
out
je
adc
ret
mov
repnz
jmp
sbb
push
or
daa
add
stos
pop
push
imul
enter
inc
cmp
cld
mov
ret
and
ds
lods
xchg
sbb
jecxz
fs
mov
dec
sbb
imul
and
popf
jnp
icebp
loope
cmp
cmps
xchg
and
(bad)
lahf
dec
outs
out
sbb
mov
inc
mov
ror
fdiv
in
(bad)
pop
mov
neg
or
push
cmp
out
cmp
popa
xchg
cmps
dec
xchg
jno
or
les
sub
(bad)
adc
aaa
repnz
or
inc
xchg
or
daa
lds
push
mov
dec
adc
jb
sub
sub
xchg
dec
inc
push
int
and
mov
daa
sub
jo
add
test
mov
retf
mov
cmp
xlat
out
cmp
nop
sti
mov
xlat
xchg
ja
ja
mov
or
les
push
jne
stos
clc
xchg
and
add
lods
add
rol
test
repnz
xor
pop
cld
and
inc
mov
xchg
dec
jno
or
jecxz
cmp
mov
mov
push
daa
inc
mov
mov
mov
push
loopne
repnz
and
mov
popf
movs
cs
cli
scas
pop
mov
fwait
in
push
sahf
xchg
jne
inc
pop
shl
push
addr16
ins
stos
mov
(bad)
in
adc
imul
mov
jae
in
sub
inc
cmps
aaa
mov
add
cmp
in
sub
cld
pop
popa
(bad)
mov
sub
test
repz
lea
add
xchg
pop
in
pop
and
or
repnz
adc
dec
stos
xor
add
inc
ins
add
jg
sbb
ret
inc
lds
push
out
in
imul
add
sbb
xor
pop
sbb
pop
cmc
dec
not
shl
jo
(bad)
push
test
cmp
retf
adc
dec
pop
aam
mov
ins
cwde
loopne
adc
js
int3
aam
or
ja
neg
dec
pushf
or
mov
popf
fisubr
lahf
aas
pop
loop
sbb
sub
push
and
mov
or
repnz
out
adc
sub
add
adc
and
test
xchg
fwait
stc
xchg
cmp
sbb
push
int
adc
or
xchg
push
pop
and
cli
test
inc
repnz
ficom
or
mov
cmp
push
pop
xchg
jmp
push
ss
push
mov
push
jge
jns
cmc
pandn
imul
inc
xrelease
sub
loopne
aad
and
sub
jne
add
cmp
lock
cmps
loopne
mov
sbb
idiv
dec
pusha
and
and
xor
test
retf
mov
aas
std
dec
and
jbe
jg
pop
mov
mov
inc
dec
pop
fs
and
imul
inc
pop
cmp
and
push
sbb
mov
es
push
addr16
in
pop
inc
(bad)
push
cmps
neg
cmp
bound
ins
mov
pop
ss
push
sbb
loope
ss
ja
in
les
out
mov
pop
iret
inc
sahf
mov
int
dec
lds
movaps
lds
(bad)
mov
inc
ss
aas
adc
or
adc
cmc
out
mov
push
xchg
je
lock
das
push
push
dec
das
xchg
test
adc
sbb
pop
push
inc
hlt
sbb
cmp
ret
push
aaa
loopne
or
xchg
push
push
and
inc
or
dec
jo
push
fcomp
add
push
jne
pushf
push
dec
je
ss
sahf
out
inc
jmp
pop
xchg
pop
pop
xor
in
repnz
fwait
push
loope
pop
or
retf
ds
xor
mov
pop
jo
and
div
cmps
jmp
rcr
dec
(bad)
retf
mov
test
inc
xchg
fnsave
add
xchg
scas
inc
data16
and
sbb
xrelease
call
sub
push
test
ret
aam
sub
jbe
mov
mov
scas
xchg
mov
loopne
loope
mov
stos
(bad)
jb
out
sbb
cs
fstp
add
pop
inc
dec
mov
lds
sub
and
cs
lahf
mov
lea
test
sahf
out
movs
out
popa
aad
idiv
ret
xchg
sti
and
cmps
mov
push
aas
add
fs
and
inc
add
out
mov
pusha
dec
call
out
mov
and
and
(bad)
sub
jno
pop
in
bound
mul
loop
movs
xchg
sbb
add
out
sbb
or
cs
das
ds
out
mov
neg
xchg
dec
(bad)
mov
sbb
(bad)
pop
fnclex
sbb
push
sbb
xchg
mov
jmp
mov
and
xchg
sti
sbb
mov
cmp
sub
jne
cwde
jb
test
fadd
mov
fcom
and
(bad)
cmp
test
fnsave
cmp
test
dec
popf
jb
xor
dec
and
inc
inc
inc
cmp
cmp
getsec
mov
xor
retf
fisubr
mov
call
push
mov
cmp
xor
sbb
push
xor
lahf
jae
mov
pop
jae
js
xor
fist
mov
jno
sub
pushf
cmps
mov
call
xor
pop
loope
or
mov
push
xchg
stc
mov
dec
or
xor
sbb
imul
nop
sbb
push
repnz
out
cmc
scas
mov
repz
mov
inc
add
call
cmp
call
cmp
icebp
pop
xor
fidiv
ror
stos
xor
shr
movs
stc
xchg
push
mov
mov
and
ror
xchg
lahf
ret
mov
ins
jo
and
add
dec
sar
jbe
push
jne
pop
retf
cwde
rcr
dec
aam
icebp
pop
inc
in
xchg
and
sub
fmulp
cs
fisub
mov
mov
mov
xchg
and
movs
(bad)
mov
inc
mov
fst
cmp
loop
mov
and
repz
scas
inc
jnp
aam
inc
inc
outs
(bad)
mov
movs
fdivr
(bad)
inc
xchg
xor
pop
int
jae
lahf
add
stos
stc
xchg
icebp
push
ins
push
jle
fisttp
add
out
aam
mov
sub
in
aad
mov
das
jae
or
jmp
mov
je
cmc
pop
je
jnp
popa
xchg
mov
adc
jecxz
movs
jb
stos
xchg
adc
imul
inc
cmps
adc
push
cmp
sub
cmp
scas
and
add
(bad)
(bad)
stc
mov
mov
fnclex
pop
or
xchg
mov
add
mov
imul
sub
sub
cld
cmp
xor
shr
mov
shl
aaa
mov
sub
mov
rcl
(bad)
(bad)
ja
sbb
pop
jecxz
pop
enter
pop
imul
pop
shl
(bad)
sub
xchg
jb
inc
fiadd
fild
dec
mov
adc
mov
out
mov
fcmovne
sub
or
push
or
or
lahf
sbb
inc
bound
fmul
xchg
in
sbb
and
dec
lods
pop
add
adc
mov
ins
dec
or
inc
xor
push
or
call
xor
sar
mov
div
jo
dec
xchg
sar
retf
mov
and
push
div
cmp
pop
(bad)
push
dec
xchg
dec
aad
jns
adc
mov
dec
int3
fcomp
sub
and
fistp
sub
mov
iret
xchg
push
std
ret
lea
inc
pop
sbb
mov
sub
dec
jne
jg
mov
ins
lods
clc
and
jmp
imul
dec
jns
test
dec
mov
and
jae
pop
lea
inc
jb
adc
nop
std
push
push
shr
cdq
call
(bad)
mov
adc
popa
add
xor
mov
test
ror
scas
push
fbstp
addr16
push
cmp
(bad)
fsub
(bad)
push
ja
or
mov
repnz
sub
sbb
xchg
fs
xchg
mov
push
adc
daa
movd
sub
test
and
xchg
ja
add
xchg
rol
push
mov
es
movs
cli
lock
sbb
in
mov
mov
ss
sbb
push
fild
mov
cs
pop
pop
mov
mov
sti
and
sbb
shl
add
sbb
lods
dec
mov
jae
dec
arpl
xsha1
cmps
ud2
add
das
test
out
mov
ret
imul
mov
arpl
lea
stos
or
test
xor
push
push
add
add
lahf
xchg
rol
inc
pop
std
fld
cwde
jmp
pop
inc
jo
bound
adc
out
cwde
or
cmps
mov
(bad)
ja
out
push
pop
js
stc
outs
mov
retf
push
sti
push
inc
scas
sti
cmp
mov
inc
and
pop
and
xor
loop
pop
popa
inc
pop
aas
(bad)
out
out
cmp
js
out
cmp
loop
ds
sbb
ret
mov
and
jns
fs
cmc
lods
mov
ss
pop
fsubr
and
call
jg
js
stos
or
fimul
fnstenv
test
enter
or
test
ja
xor
adc
repnz
sbb
xor
push
push
dec
sbb
and
jne
cmp
push
leave
dec
mov
ss
sub
lahf
push
cmp
aad
pop
push
jbe
adc
xchg
test
ss
xchg
pop
xor
mov
ror
rcl
push
jns
fs
jns
pop
cwde
mov
out
push
or
cmp
xchg
xchg
add
jl
add
pop
and
dec
push
stos
push
stos
sub
xor
cli
push
mov
mov
cwde
mov
pop
sbb
sbb
cmp
jmp
aaa
xlat
push
add
add
leave
fisttp
rcr
loopne
xchg
sbb
mov
lea
in
mov
shl
mov
inc
xor
test
mov
rcr
mov
les
repz
sahf
xchg
(bad)
xchg
nop
inc
push
in
inc
add
jne
sbb
dec
sub
cdq
stos
movs
sbb
jns
loopne
mov
jmp
inc
mov
lea
sub
ror
cmc
mov
shr
iret
stos
adc
sbb
loope
rol
push
mov
cmps
aas
pop
(bad)
adc
cmp
loop
data16
ja
stc
aad
mov
xchg
jae
and
xor
pusha
push
sub
lods
(bad)
in
call
or
push
sbb
imul
and
mov
gs
push
in
aaa
(bad)
imul
mov
aad
(bad)
mov
lods
in
rcr
push
(bad)
call
mov
mov
aas
cmp
dec
dec
push
pop
add
xchg
inc
les
js
aad
xchg
mov
(bad)
push
sub
out
push
pushf
push
or
rcl
cs
xor
stos
pop
in
ins
(bad)
imul
mov
push
jle
test
mov
cmc
int3
imul
inc
dec
jecxz
jl
jg
retf
ret
fadd
test
add
jmp
cmp
(bad)
mov
rcl
imul
mov
test
lds
dec
and
fadd
lock
test
dec
inc
sar
cmc
std
push
retf
clc
sbb
cmc
jl
not
xlat
dec
sti
movs
add
jbe
cdq
adc
adc
js
repz
pop
pop
std
icebp
pop
dec
add
call
gs
inc
pop
ret
int3
mov
dec
rcr
mov
imul
scas
jbe
repz
mov
movs
jp
sbb
dec
and
jl
cmp
push
cmp
lods
ret
inc
mov
and
bound
ficomp
and
dec
ss
mov
dec
mov
jo
or
out
sbb
dec
not
or
js
xchg
repz
push
in
mov
stos
push
pop
and
outs
pop
stos
dec
jl
adc
push
adc
aas
iret
inc
inc
loopne
jge
ror
xchg
fild
arpl
rcr
xchg
stc
in
(bad)
sti
test
xchg
fist
lods
addr16
test
add
add
(bad)
or
push
cmp
xor
outs
inc
xchg
mov
bound
iret
jmp
cli
sub
ds
push
xchg
jmp
std
fwait
jnp
leave
arpl
cwde
push
fxch
mov
enter
das
imul
mov
dec
das
sub
dec
pusha
stos
add
jle
(bad)
lea
aas
jae
add
mov
daa
rcr
int3
cmovns
push
(bad)
dec
jge
xchg
or
lea
cmp
ja
test
std
pop
jl
mov
mov
retf
rcr
fiadd
mov
sub
loope
lods
cld
xchg
movs
mov
fld
and
addr16
retf
(bad)
std
add
or
mov
and
pop
xchg
push
jb
xor
sbb
out
push
(bad)
sahf
xchg
mov
mov
inc
(bad)
xor
inc
les
mov
jecxz
scas
pop
btc
jl
mov
push
out
gs
jmp
stc
fisttp
(bad)
jnp
cdq
shl
loopne
loope
push
mov
call
inc
cmp
scas
fisubr
adc
sub
cmp
das
shr
dec
or
pusha
shr
bswap
push
fsub
mov
pusha
aam
jg
retf
mov
mov
pop
cmc
jne
mov
jl
outs
pop
adc
or
jmp
ss
mov
in
scas
inc
scas
push
fwait
mov
je
dec
outs
dec
fmul
pop
inc
sbb
test
fcomp
mov
sbb
out
adc
jno
xchg
push
or
ja
and
or
in
aam
in
cli
popf
pop
add
add
popf
lods
sub
scas
repz
je
rcr
and
ss
stos
leave
adc
aaa
sub
js
push
inc
mov
mov
push
fmul
loopne
gs
imul
loop
xchg
sbb
pop
nop
stos
mov
inc
dec
cli
push
add
xchg
fidivr
loopne
push
inc
cs
sub
mov
add
fcomp
cwde
movs
xor
mov
add
test
fild
arpl
push
jle
cmps
frstor
jae
jp
jmp
push
enter
and
mov
fs
movs
loopne
shr
adc
pop
xchg
in
adc
and
imul
retf
sub
add
fldenv
jnp
ins
int
sub
ret
jmp
rcr
int3
aam
lea
cmp
sar
arpl
mov
(bad)
js
ret
cmp
xchg
mov
and
out
sbb
ror
outs
into
leave
push
retf
jnp
mov
mov
xchg
shl
inc
stos
aas
pop
ins
dec
mov
inc
xor
mov
inc
call
jp
retf
mov
pop
pop
xchg
sahf
adc
repz
push
fs
rcr
std
sub
rcl
mov
in
pop
adc
dec
jbe
stos
jmp
or
cmp
mov
data16
cmp
mul
mov
xor
xchg
adc
and
pop
push
mov
xor
ss
and
popf
xchg
push
lods
pop
test
cmp
jnp
(bad)
push
js
sub
jb
mov
in
mov
adc
xchg
inc
xchg
daa
fdivr
cmc
sbb
cli
push
outs
ret
pop
push
push
sbb
mov
pop
cmp
or
xchg
jge
out
ret
mov
icebp
dec
jg
lds
scas
pop
ret
pop
ror
int3
scas
enter
ss
out
int
jbe
cmps
pusha
shl
inc
(bad)
inc
mov
fwait
mov
retf
inc
jns
ja
ret
xor
and
jbe
stc
outs
xchg
gs
jns
ret
aad
iret
xchg
shl
push
shl
loopne
inc
mov
xchg
and
mul
cmp
mov
sahf
test
mov
outs
push
int3
sub
sti
in
and
arpl
je
inc
mov
xor
mov
lahf
scas
sbb
jo
cdq
stos
or
lods
mov
sar
push
mov
pusha
inc
mov
lds
cmp
nop
lahf
xor
pop
icebp
or
(bad)
out
cdq
sub
scas
dec
out
fild
sahf
test
movs
retf
outs
cmps
das
xor
popf
icebp
cld
icebp
rcr
inc
jg
hlt
adc
repz
repnz
pusha
(bad)
out
push
int
xchg
jo
popa
push
sar
jmp
sub
cwde
mov
stos
outs
jbe
fidivr
cmps
ds
outs
cdq
jmp
mov
pop
adc
ins
dec
sbb
(bad)
adc
xor
jmp
popa
or
dec
mov
sub
int
and
adc
dec
xlat
inc
pop
jp
shl
adc
(bad)
cmp
pop
push
cmp
shl
jecxz
or
xor
add
pop
push
adc
push
mov
cmovs
and
aam
inc
cmp
jmp
dec
loop
push
pop
xchg
mov
leave
in
jmp
in
add
std
xchg
fidiv
sub
jle
push
sbb
jp
push
out
jecxz
mov
cmp
push
xchg
stc
clc
fstp
cld
mov
mov
jmp
jg
shl
push
js
ds
and
push
mov
dec
ret
jmp
mov
mov
or
add
fsubr
add
add
sbb
not
pop
adc
stos
and
retf
in
push
cmp
push
lods
pop
stos
jle
inc
jge
xor
(bad)
sahf
pusha
push
enter
or
test
dec
mov
mov
rcl
fadd
ss
add
stc
lods
mov
inc
add
or
mov
loope
jae
sub
and
pop
mov
xchg
repnz
ds
dec
imul
xor
popa
(bad)
and
pushf
dec
int3
pop
mov
lods
xchg
cmps
mov
or
xchg
aas
mov
pusha
pop
mov
test
sub
xor
movs
movs
push
mov
idiv
pop
mov
push
addr16
pop
int
lods
aam
jecxz
jno
push
or
adc
iret
xchg
stc
hlt
sbb
jae
add
jne
dec
retf
ret
mov
ss
adc
dec
pop
clc
aaa
int
repz
fsub
es
push
mov
and
and
xchg
int3
jno
mov
cld
icebp
test
(bad)
mov
pop
aam
dec
push
imul
add
in
lea
nop
xor
push
scas
ficomp
adc
test
sbb
mov
xor
hlt
js
mov
jge
popf
lea
or
call
pop
sub
mov
dec
jnp
movs
mov
add
dec
repnz
scas
je
xchg
cmc
lds
xlat
push
adc
sub
sar
aad
ror
wbinvd
jge
test
mov
mov
cld
data16
mov
je
jb
jbe
into
cmp
mov
fdiv
adc
fmul
popf
add
cmc
mov
xor
stc
iret
or
das
mov
jnp
jns
mov
loope
loopne
fistp
scas
mov
out
fmul
xor
push
and
sub
jecxz
mov
scas
mov
xchg
(bad)
pop
loopne
test
or
adc
dec
jp
(bad)
retf
hlt
ror
out
xchg
repz
xor
and
cmp
inc
dec
cdq
jge
push
or
sbb
add
cmp
push
call
daa
add
pop
call
mov
pop
jg
std
outs
imul
repnz
cmc
cmc
fiadd
sbb
hlt
cmp
pop
in
jmp
mov
inc
movs
aas
fcom
in
xor
adc
push
aaa
sti
repz
movs
sub
bound
and
call
gs
sub
cs
push
imul
push
ins
cwde
sub
mov
ficomp
jne
jae
or
call
adc
lds
aad
nop
jb
mov
je
push
xchg
dec
cwde
shl
mov
mov
cmps
sub
mov
inc
ffreep
in
jae
pop
inc
cmps
ret
cmp
movs
mov
push
push
pop
aad
fiadd
add
sbb
mov
mov
addr16
add
mov
sbb
movs
scas
jmp
loop
retf
push
sahf
scas
push
ror
in
jbe
dec
cmp
mov
sbb
pop
push
xchg
sahf
mov
fldcw
xor
dec
sub
fcmovne
xchg
pop
fcom
mov
dec
dec
rol
cmp
xchg
fdiv
adc
jo
arpl
cli
scas
bound
aam
mov
aas
sub
mov
add
jg
xchg
sbb
or
pop
dec
outs
or
repnz
pop
mov
mov
jp
test
inc
cmp
mov
ss
mov
sti
sub
lods
pop
loope
jl
rcr
jb
pop
lds
jl
shl
sbb
fisubr
fwait
loope
xchg
push
jecxz
sub
aam
jg
aas
out
or
inc
fild
mov
daa
addr16
iret
xchg
or
sbb
push
jno
pop
jg
cmc
mov
cli
(bad)
xchg
mov
cmps
xchg
mov
push
bound
hlt
inc
outs
ret
retf
js
(bad)
sar
jbe
sbb
push
into
aad
xor
cmp
in
pop
dec
push
(bad)
fstp
movs
popf
std
mov
arpl
xor
add
enterw
mov
sbb
and
adc
je
fimul
dec
inc
test
xchg
mov
jno
fwait
dec
sbb
mov
hlt
shl
add
sub
and
and
mov
cmp
sbb
pop
or
push
push
stos
ret
push
push
push
lea
movs
repnz
push
inc
retf
fsub
mov
dec
adc
int3
cdq
iret
mov
mul
jne
shr
loopne
xlat
fst
loop
movs
and
std
pop
into
fs
mov
sub
(bad)
cmc
fs
push
xchg
aad
dec
test
(bad)
dec
div
pop
jl
int3
jne
lods
sahf
bound
aam
call
imul
xlat
cmp
sti
xor
jle
jecxz
pop
test
test
inc
fsub
lea
rol
(bad)
push
sub
inc
mov
mov
rcl
add
jle
ins
loope
mov
(bad)
fadd
mov
pop
push
push
and
push
leave
xor
pop
in
je
sub
mov
fstp
inc
adc
call
jle
sub
mov
cmc
into
test
dec
jg
push
rol
push
in
int
sahf
pop
fist
test
in
sub
stos
out
and
pop
out
rcl
pop
xor
push
jmp
adc
sbb
sbb
inc
fidivr
mov
or
(bad)
(bad)
ret
jbe
int
aas
shl
sbb
or
stos
test
pop
bound
xchg
imul
retf
dec
mov
xor
mov
inc
aam
xchg
call
dec
sub
inc
pop
or
sub
out
xor
mov
mov
fidivr
not
ret
dec
pop
movs
mov
mov
push
or
mov
pop
xchg
adc
xor
cmps
inc
jno
jg
(bad)
(bad)
in
jmp
inc
ins
push
scas
out
inc
nop
adc
retf
mov
cmp
es
out
push
xchg
jle
idiv
fucomip
xor
pop
xor
sbb
shl
mov
imul
shr
mov
jp
paddb
imul
cmp
xchg
inc
rol
loop
(bad)
ret
cdq
fwait
xchg
outs
inc
das
push
lahf
nop
jo
ret
ins
lds
and
jnp
loop
pop
fistp
out
push
movs
adc
ins
cdq
jmp
adc
test
xor
(bad)
jle
nop
mov
test
add
and
jo
xlat
lahf
cmp
mov
sub
cmp
push
iret
or
pcmpgtd
or
sbb
pop
int
push
je
test
mov
lods
retf
mov
dec
cwde
hlt
jne
jp
stc
sbb
sbb
icebp
and
retf
mov
xchg
sbb
push
jg
adc
mov
movs
push
cmc
cmp
pop
push
xor
cli
mov
inc
test
inc
mov
sbb
add
sub
push
loop
leave
xor
neg
rcl
push
(bad)
js
pop
scas
push
mov
cs
je
pushf
mov
add
adc
jmp
cmps
cmc
pop
cmps
(bad)
hlt
lods
push
jae
or
adc
out
ffreep
mov
mov
mov
xor
imul
jbe
add
jns
imul
fwait
add
adc
cmp
je
push
push
ficom
addr16
(bad)
mov
fcmovnu
jne
shr
push
sti
push
sub
adc
jnp
retf
push
or
xor
scas
rol
push
push
jecxz
mov
in
fs
dec
xor
pop
adc
(bad)
fimul
xor
nop
cwde
cs
out
pop
ja
push
mov
cmp
jae
pop
scas
test
mov
dec
arpl
mov
add
push
xchg
pop
ds
test
imul
and
adc
lds
popf
loopne
inc
push
fnstsw
es
mov
adc
pop
dec
pop
and
loopne
(bad)
ficomp
mov
rcl
out
add
(bad)
arpl
xor
daa
mov
into
aas
shr
icebp
add
test
xor
cdq
mov
mov
pop
mov
cld
fsubr
(bad)
outs
xchg
cwde
outs
mov
and
push
push
bound
lock
ins
into
aaa
pop
ds
cmps
pop
sbb
call
sub
shl
ret
inc
ret
add
inc
pop
sbb
jnp
scas
jmp
mov
outs
js
std
pop
xchg
inc
cmp
or
or
outs
xlat
xchg
mov
sbb
sub
enter
push
js
jg
(bad)
cmc
pop
jno
mov
add
add
retf
lahf
xor
pushf
cdq
pop
mov
ret
jo
and
loope
es
xchg
jmp
movs
mov
add
mov
int
repnz
fmul
(bad)
sbb
or
ficom
loope
mov
sbb
repnz
lds
out
mov
retf
add
(bad)
jmp
adc
mov
xchg
idiv
pop
and
fwait
sbb
sub
xchg
xor
push
mov
nop
adc
xchg
sub
or
loope
dec
movs
mov
pop
xchg
movs
retf
aam
outs
js
mov
xchg
adc
push
mov
pop
ins
in
pushf
sbb
cmp
mov
and
push
and
nop
aas
pop
cmp
ret
xchg
ins
push
mov
cmp
dec
push
jbe
loope
loope
sbb
mov
and
cmp
into
mov
shl
adc
jns
pop
push
push
shl
mov
icebp
sub
xchg
(bad)
js
push
retf
leave
xchg
mov
inc
aas
mov
jg
push
in
js
xchg
mov
push
push
sbb
mov
ffree
movs
in
pop
ins
clc
enter
xchg
lds
jae
dec
(bad)
sar
mov
sub
adc
fwait
pop
sbb
or
cli
test
les
test
mov
pop
cmps
xor
xor
test
push
mov
icebp
mov
(bad)
js
out
icebp
mov
sti
jl
pop
lds
ficom
push
lock
cmc
dec
sar
and
mov
inc
ror
scas
pop
cdq
sub
aas
std
cmp
inc
test
ins
jmp
js
fucomp
add
push
cmps
not
push
popa
ror
(bad)
or
fs
xchg
jmp
imul
mov
sbb
jo
int
(bad)
fwait
adc
stc
repnz
in
pusha
adc
imul
call
repz
sub
mov
inc
pusha
bswap
push
fdiv
sub
call
fxch
enter
pushf
ins
sub
inc
mov
clc
lods
aaa
inc
in
das
rcl
xchg
ror
leave
in
iret
fucomi
inc
adc
fnsave
dec
push
into
push
sbb
and
xor
fwait
dec
aam
int
or
leave
test
add
in
dec
int
out
out
sub
mov
lods
push
std
movs
loopne
xor
in
shl
stos
sub
or
add
cmps
in
mov
jbe
push
lds
add
mov
(bad)
jnp
in
dec
xor
mov
jne
fbstp
push
ds
out
cmp
mov
xor
pop
data16
and
cmp
js
sub
cmp
data16
xor
loop
cld
(bad)
and
retf
outs
and
or
adc
jle
and
mov
cmp
push
dec
iret
or
jg
sbb
fisubr
test
inc
test
fsubr
sub
add
xor
scas
adc
mov
jmp
sub
mov
ss
rcl
mov
enter
std
sahf
pop
adc
jge
sbb
shl
push
clc
inc
sbb
or
mov
cwde
pushf
lahf
and
mov
das
loopne
clc
fucom
pop
jno
lds
mov
adc
push
pop
ins
push
and
and
test
push
aaa
retf
sar
xor
mov
cmp
xor
dec
or
or
xchg
sbb
cld
mov
dec
mov
pusha
sub
lahf
jp
cmp
std
addr16
lea
xchg
shl
xchg
sbb
sub
lods
enter
sbb
(bad)
movs
cmp
aad
cmp
add
pop
je
aas
mov
or
fimul
pop
mov
sbb
cmp
dec
sub
mov
push
adc
mov
and
adc
mov
jecxz
in
or
pop
push
dec
test
jp
jge
sub
dec
repz
test
mov
mov
pop
not
adc
dec
ret
pop
mov
fimul
adc
stos
push
daa
repz
lock
popf
add
test
leave
xor
call
jnp
push
into
pop
ret
sahf
mov
inc
inc
jl
in
and
push
sbb
jo
test
cmc
js
outs
jge
jmp
fsub
out
xor
in
shl
test
mov
outs
cmp
xor
movs
in
retf
mov
mov
std
or
push
cmps
std
int
mov
pop
jg
xchg
loope
pop
inc
pop
aam
scas
test
mov
jns
mov
scas
pop
inc
push
pop
jbe
lahf
aam
pop
call
ret
push
pop
push
adc
enter
xlat
dec
jl
xchg
sub
mov
xor
dec
inc
cmp
xor
(bad)
lock
popa
pop
rcr
rcr
clc
push
rcl
and
iret
cmp
mov
mov
dec
push
pusha
adc
pop
loope
pushf
xchg
ret
lock
cmp
shl
add
sub
stc
dec
pop
inc
jo
adc
out
mov
fsub
jmp
xor
je
retf
je
push
or
xchg
and
les
(bad)
cld
push
jg
jo
or
imul
in
mov
sahf
mov
daa
mov
or
xchg
mov
adc
sub
jle
xor
lods
xchg
xor
je
fs
in
and
mov
stos
dec
enter
xor
lods
fild
retf
inc
push
ss
jge
aas
inc
and
icebp
mov
(bad)
xchg
or
jp
adc
cmps
arpl
cld
xchg
push
adc
xlat
xchg
pusha
or
jp
push
inc
or
lods
aad
std
dec
out
call
(bad)
mov
daa
and
push
adc
xchg
jns
ds
rcr
ss
inc
rol
cld
aaa
xchg
lods
jne
stc
xchg
rol
mov
jp
sub
ja
pop
iret
or
xchg
in
in
xchg
cdq
adc
mov
and
dec
pop
dec
sbb
sbb
test
dec
neg
scas
xchg
hlt
es
cwde
pop
ins
clc
mov
pop
xor
mov
dec
cmp
dec
arpl
pop
xor
mov
xlat
sbb
mov
retf
push
mov
loopne
dec
dec
rcr
or
pop
push
ja
push
xchg
sub
xchg
xor
sbb
xor
add
jno
pop
mov
inc
mov
fs
loopne
xchg
fadd
icebp
inc
pop
imul
dec
jnp
xchg
add
gs
ins
mov
(bad)
and
pop
cld
adc
adc
and
xor
hlt
mov
mov
pop
xor
arpl
jle
jmp
outs
sbb
jp
add
add
inc
inc
imul
jns
xchg
or
fisubr
dec
je
mov
jns
mov
xchg
or
mov
push
cs
sub
push
out
xchg
push
sub
loope
out
ss
xor
mov
or
fst
ret
fbld
into
mov
stc
jle
cmp
push
jge
ins
fcomip
sub
inc
dec
inc
mov
leave
stos
jnp
jno
sbb
addr16
xor
sahf
ja
dec
or
mov
and
sti
ror
bnd
sbb
or
jmp
and
mov
gs
daa
push
fidivr
and
mov
sub
sbb
xor
inc
cmps
cmp
scas
inc
push
ds
call
add
fwait
xchg
mov
mov
loop
(bad)
xchg
arpl
movs
xchg
imul
inc
add
xor
ret
mov
or
shl
mov
add
cmp
nop
cmp
pop
inc
ret
loope
lods
daa
jnp
bound
xchg
mov
(bad)
pop
dec
mov
mov
mov
leave
jne
cmp
mov
das
sub
(bad)
leave
mov
cmp
icebp
jle
and
rcl
mov
sar
nop
mov
das
xchg
sbb
mov
mov
mov
rcl
lds
jmp
test
in
arpl
or
ret
out
out
(bad)
retf
sub
xchg
cwde
cld
sbb
jne
dec
mov
pop
jge
out
adc
not
loope
fcom
vmovapd
mov
xchg
aad
stos
popf
nop
ja
shl
cmp
push
lods
lds
les
push
add
call
mov
imul
pop
in
cwde
push
dec
mov
cmc
sub
jmp
adc
add
pop
test
inc
xor
mov
push
push
imul
mov
pop
jge
fbstp
iret
inc
out
fldcw
sti
lea
jle
std
jbe
jb
cmps
push
popa
adc
(bad)
and
sub
into
jo
jle
(bad)
es
nop
mul
jne
fdivp
fucomi
pop
aam
and
out
not
jge
lahf
adc
sbb
xchg
outs
add
sub
adc
dec
sub
mov
call
loope
test
shl
test
mov
ins
out
push
test
mov
dec
pop
jg
adc
ds
sub
out
lock
jmp
loop
mov
int3
add
imul
pop
mov
mov
fisub
call
inc
idiv
movs
lods
adc
add
rcl
icebp
mov
xor
mov
mov
mov
fs
jne
sbb
or
sar
call
xor
fdiv
dec
std
fist
repz
fdiv
test
fimul
inc
in
imul
shr
add
in
ins
push
retw
shl
mov
dec
arpl
or
mov
jmp
sbb
mov
mov
xor
int3
mov
mov
mov
pop
(bad)
push
and
mov
psrlw
fdiv
fadd
cli
retf
mov
stos
mov
mov
(bad)
fistp
mov
dec
jl
jno
jbe
nop
xor
jg
cdq
mov
stos
jb
or
xor
jns
loope
sbb
into
xchg
imul
mov
push
call
mov
in
fisttp
or
ds
cmps
fsubr
sti
fwait
or
xchg
inc
and
mov
movs
push
sar
pop
iret
sub
lahf
stos
in
dec
xchg
sub
push
sti
je
sub
popa
lea
popf
xor
adc
mov
popf
adc
dec
sti
jecxz
not
addr16
push
adc
sub
mov
inc
ret
jl
test
sub
lock
popa
dec
retf
test
jbe
dec
icebp
push
adc
fs
push
mov
inc
mov
sbb
call
in
leave
cli
leave
stos
mov
cld
ja
xchg
jmp
lods
pop
stos
rcl
dec
fs
pushf
ss
mov
bound
ret
add
pop
push
scas
cmp
cwde
lods
mov
aad
movs
mov
scas
loope
cmp
shl
out
or
ins
je
jbe
jge
inc
loop
push
stc
fisub
pop
not
aas
aad
(bad)
jecxz
add
pop
jecxz
mov
xor
ins
sbb
mov
nop
pop
les
or
fcom
mov
cmp
mov
inc
test
push
adc
fstp
repnz
fisub
sbb
pop
repnz
jmp
push
mov
jo
iret
sub
data16
outs
dec
push
push
mov
jns
ja
cs
inc
xor
data16
in
cmp
(bad)
push
cmp
xor
daa
scas
pushf
inc
adc
xchg
sbb
inc
sub
icebp
mov
ins
enter
aad
add
repnz
push
cmp
jmp
adc
(bad)
sub
test
and
ret
pop
pushf
xor
xchg
and
adc
cwde
clc
or
cs
xor
sbb
dec
push
cmp
retf
or
pop
popa
(bad)
fcomip
pop
mov
jmp
ss
jae
push
addr16
stos
or
sub
jne
scas
test
inc
push
dec
(bad)
sbb
dec
add
daa
shr
rol
add
ins
lods
dec
fsub
sub
vunpckhps
and
call
jmp
les
cmp
leave
out
arpl
popa
scas
mov
sub
pop
(bad)
mov
cmp
scas
cs
mov
dec
mov
xchg
mov
loopne
aas
movs
in
mov
popa
ja
xor
sub
in
xchg
cld
scas
inc
sbb
dec
push
add
loop
jmp
div
outs
popf
jmp
xchg
jg
adc
xor
mov
add
(bad)
cs
pop
and
and
pop
popa
adc
push
xor
retf
xor
pop
pusha
(bad)
les
mov
scas
sub
pop
pop
add
or
test
mov
cmp
sbb
sbb
pop
ret
div
nop
pop
cmp
dec
test
add
imul
jmp
sbb
xchg
mov
bound
xor
xchg
test
cmc
fisttp
cmp
ficom
daa
repz
sbb
(bad)
sbb
sbb
sub
outs
idiv
pop
xchg
or
lock
mov
shl
movs
xor
pop
mov
mov
prefetch
fwait
jg
inc
call
adc
xchg
and
mov
mov
or
mov
adc
idiv
js
mov
inc
mov
jne
(bad)
jmp
xchg
mov
clc
imul
repz
xlat
out
mov
inc
mov
xor
out
and
xor
xchg
ja
xchg
xor
gs
and
inc
mov
jge
mov
or
adc
into
ds
aad
test
mov
js
sub
mov
sbb
in
xchg
arpl
enter
mov
push
push
scas
sbb
test
fs
aad
pusha
movs
out
gs
jmp
xor
or
clc
pop
inc
adc
clc
hlt
adc
test
jno
xor
ret
fwait
aad
pop
mov
aas
sbb
imul
loop
sub
mov
jne
fsubr
sub
retf
pop
xor
sub
lods
mov
jmp
xor
xchg
inc
cmp
call
jle
pop
mov
inc
ror
popf
dec
out
adc
movs
push
pop
cs
cmps
pop
inc
sbb
lahf
lods
bound
(bad)
or
ins
xchg
shr
js
(bad)
fsub
int
rol
arpl
push
movs
pop
sbb
shl
out
lods
add
cmps
ror
xor
loop
sub
xor
adc
jl
sbb
mul
xchg
xchg
retf
fnstsw
mov
jmp
cmps
and
push
jno
retf
xor
inc
jecxz
pushf
sbb
repz
mov
mov
xchg
pop
add
jbe
pop
mov
movs
push
sbb
mov
mov
dec
imul
mov
push
sub
popa
mov
mov
(bad)
xlat
inc
mov
sbb
ret
or
lods
add
jns
xchg
mov
js
cs
xchg
pop
mov
ror
icebp
pop
iret
ds
pop
dec
fadd
in
mov
pusha
aaa
stos
mov
adc
adc
stos
outs
cmp
xchg
cli
and
inc
mov
mov
mov
sahf
mov
adc
adc
pop
popa
cmps
cli
inc
jae
in
scas
int3
and
push
push
retf
(bad)
data16
inc
dec
ja
jno
pop
cmp
in
xor
push
and
push
(bad)
aas
xchg
jp
prefetch
test
push
push
mov
icebp
or
dec
shr
lea
mov
loop
jne
enter
and
xor
or
xchg
sbb
pop
xchg
push
(bad)
cmp
add
cs
mov
cmp
inc
movs
frstor
lock
repz
push
jno
daa
mov
dec
and
jg
pushf
outs
(bad)
xor
xchg
jle
jne
fwait
cmp
call
xchg
jmp
std
sahf
mov
mov
das
inc
xchg
leave
jmp
jge
inc
pop
aad
adc
mov
pop
jne
or
mov
sub
mov
xor
jge
je
push
fnstsw
shr
retf
mov
(bad)
es
and
or
jl
mov
inc
das
mov
fisttp
ror
push
(bad)
sub
sbb
cmp
lock
out
hlt
sbb
in
or
mov
add
aaa
stos
mov
cmp
shl
jno
add
aad
push
xor
icebp
adc
jmp
out
push
mov
dec
outs
mov
retf
rol
inc
pop
mov
int3
imul
(bad)
retf
out
int
jae
or
lds
mov
addr16
jge
cmc
sbb
imul
sub
mov
sbb
ins
inc
(bad)
into
or
(bad)
pop
adc
xchg
mov
sub
pop
jg
jmp
sub
lods
nop
jle
mov
imul
pop
jmp
adc
rcl
sar
jb
push
cwde
pop
and
mov
mov
push
dec
xor
retf
inc
adc
dec
and
ja
mov
add
mov
pop
cmp
push
dec
xchg
test
in
push
push
sub
jo
and
in
arpl
shl
sub
xor
fldln2
and
sub
cmp
adc
xchg
inc
rcr
scas
adc
pop
or
mov
lea
push
adc
push
mov
not
dec
(bad)
bound
fld
jmp
push
ret
stos
das
xchg
frstor
or
in
test
das
mov
int3
or
popf
gs
(bad)
ss
dec
cmps
shl
div
fwait
sbb
sti
xchg
(bad)
das
cmps
bswap
or
daa
adc
retf
test
repz
adc
sbb
outs
sub
cmp
ror
jns
sub
mov
mov
call
repnz
cmp
stos
add
xchg
pop
xor
loop
dec
dec
push
cmps
jbe
pop
jge
popf
add
and
pop
pop
rol
test
inc
adc
jbe
adc
lods
adc
idiv
retf
lahf
cmc
jmp
dec
scas
test
mov
je
jb
xor
add
dec
jmp
push
mov
cmp
pop
push
gs
(bad)
scas
(bad)
and
mov
xor
cmps
jp
data16
daa
dec
jl
jns
repz
mov
scas
adc
add
jno
outs
out
cmp
pop
cmovl
loop
aam
dec
icebp
sbb
repnz
cdq
add
jne
and
xchg
icebp
shl
fwait
dec
cdq
push
out
mov
in
mov
xor
cmp
push
test
lds
mov
xor
pop
popf
mov
movs
dec
cli
sub
(bad)
mov
dec
cmp
pop
add
xchg
pushf
ds
push
fild
mov
adc
dec
inc
and
push
xor
jecxz
pop
sbb
push
cmps
mov
outs
cmp
loopne
cwde
imul
int
outs
xor
xor
and
shl
int3
pop
pop
and
xchg
fistp
mov
mov
adc
ret
xor
outs
imul
sub
out
adc
inc
fimul
(bad)
in
mov
push
xchg
sbb
enter
xchg
cmp
push
mov
push
add
inc
jl
cmc
out
xchg
sbb
push
push
(bad)
or
clc
test
xor
in
lock
pop
fwait
mov
mov
cmc
jmp
das
nop
push
inc
xor
sub
mov
pop
loope
aam
jbe
or
or
sub
cmp
mov
mov
fnstsw
adc
dec
jmp
mov
mov
cld
sbb
mov
fimul
aaa
adc
mov
retf
jmp
idiv
out
popa
pusha
push
mov
loop
cmp
push
ss
mov
lods
fimul
pop
and
dec
dec
inc
inc
outs
and
loope
mov
es
mov
sbb
stos
mov
mov
in
out
push
inc
sbb
add
xor
inc
or
loop
and
sahf
jns
mov
ins
(bad)
out
cmp
test
jmp
les
ror
push
aam
icebp
cmc
mov
daa
fidivr
aaa
pop
fsubr
mov
inc
and
add
jb
mov
cs
push
mov
int3
out
mov
outs
rol
push
push
push
jbe
fsubr
push
icebp
jmp
or
push
call
cmp
ficomp
mov
or
ins
jg
sub
out
xchg
jmp
sti
mov
adc
sub
jnp
out
mov
loop
inc
mov
or
idiv
mov
mov
xor
arpl
shr
sub
hlt
addr16
fdiv
add
lods
inc
ins
int
pop
test
test
mov
fcom
lahf
movs
pop
dec
sbb
or
sbb
dec
arpl
mov
mov
cmc
mov
fadd
dec
test
in
inc
push
cmps
xor
call
lock
xlat
(bad)
jmp
lea
shl
push
ss
movs
adc
enter
shr
sub
or
test
int
or
fist
ss
idiv
add
clc
in
test
stos
push
ss
push
(bad)
icebp
shr
and
(bad)
int3
fistp
imul
and
movs
ja
jge
push
sahf
inc
sub
fistp
add
xor
jg
retf
mov
adc
ret
fistp
sub
dec
std
pop
rol
jecxz
test
pop
mov
sbb
ds
daa
(bad)
loopne
fwait
and
scas
int
stc
addr16
in
adc
sub
rol
test
nop
jmp
fst
mov
jle
push
sub
inc
and
dec
test
add
imul
bound
loop
or
loop
mov
dec
gs
xchg
movs
jl
pop
pop
scas
in
out
jle
(bad)
inc
pop
pop
pop
ss
lods
retf
add
imul
jge
(bad)
fadd
pop
fcom
out
daa
out
xchg
retf
mov
mov
push
xchg
pop
dec
cld
out
sbb
je
fs
rol
push
in
aad
das
rcr
or
ss
add
icebp
fcmovu
dec
jo
push
sti
xchg
cmps
mov
ror
test
test
sete
rcr
bound
add
push
mov
cmp
aaa
inc
pop
sahf
xor
mov
in
jae
xor
ds
int
and
mov
inc
(bad)
stos
or
mov
cmp
ficom
dec
jg
xor
sbb
mov
ja
mov
push
daa
data16
scas
push
pop
inc
jmp
mov
and
ficomp
dec
sbb
xchg
ret
mov
enter
mov
sbb
adc
cmp
movs
jp
xchg
stos
jnp
fisttp
push
inc
imul
lea
jo
data16
or
aaa
inc
mov
out
xchg
aad
retf
cli
cmp
cmp
repz
rol
leave
(bad)
jmp
cmp
add
adc
add
mov
rcr
inc
cmp
rcl
push
fst
pop
fisub
mov
cdq
jnp
sbb
fcmovb
jb
jmp
jno
xor
xchg
jo
pop
or
sti
das
cmc
scas
arpl
xlat
cmp
xor
mov
xchg
pcmpeqb
sar
rcr
mov
icebp
je
fisub
mov
or
sub
fmul
in
ds
repnz
aam
fs
sbb
fsub
and
or
jns
ret
dec
pop
in
mov
mov
es
shl
aas
call
lods
stos
sub
aam
sbb
push
pushf
iret
jns
rol
pop
les
pop
ins
pop
fsub
xor
jecxz
cmps
or
pop
fs
xchg
popf
sub
xor
inc
clc
inc
push
mov
jecxz
adc
sbb
sub
mov
push
and
or
jle
test
bound
mov
shl
jg
iret
mov
mov
inc
lds
sbb
retf
and
gs
push
add
xchg
pop
mov
mov
inc
jbe
aaa
ret
jno
pop
rcr
inc
(bad)
adc
jge
into
jbe
push
push
dec
inc
outs
cmp
sbb
add
outs
test
loop
out
add
sbb
test
popf
test
dec
push
lea
xor
int
fcomp
or
push
fs
mov
mov
inc
xchg
in
pop
mov
icebp
movs
push
mov
imul
xlat
rol
imul
dec
dec
adc
jl
nop
cmp
in
ret
jo
adc
int3
das
inc
jg
and
cs
and
out
call
push
mov
mov
add
loopne
fldenv
daa
push
push
jb
inc
into
jno
outs
cs
sub
sub
cdq
push
inc
jge
aas
lods
inc
cmp
xor
in
cld
pop
push
mov
jne
out
push
inc
call
jbe
mov
dec
push
ins
dec
mov
rcl
push
sbb
stc
pop
mov
push
(bad)
cmps
push
jns
xor
push
imul
icebp
jle
scas
and
mov
xor
mov
popa
pop
js
mov
and
adc
lahf
fcmovnbe
lea
mov
cdq
and
lods
add
clc
add
or
into
push
cwde
jp
add
inc
inc
shl
jg
xor
in
outs
imul
mov
retf
jecxz
pusha
popa
les
and
push
mov
iret
push
mov
out
loop
mov
jmp
js
shl
or
mov
pop
xor
or
adc
and
xchg
imul
pop
mov
pop
and
loop
mov
test
std
fadd
lods
mov
ins
mov
mov
sub
inc
ins
sti
jb
out
push
jg
and
leave
aad
inc
imul
lock
hlt
(bad)
leave
jle
shl
jmp
loopne
mov
or
idiv
xor
lahf
xchg
dec
cwde
xchg
sub
jno
ja
push
pop
push
jmp
int
push
fimul
hlt
sar
fidiv
lods
xchg
cmp
addr16
scas
cwde
rol
pop
(bad)
mov
jnp
test
(bad)
je
mul
dec
push
cmp
mov
(bad)
cli
push
and
shl
cdq
jg
hlt
mov
outs
mov
add
and
sti
push
push
cmps
or
daa
out
scas
enter
mov
mov
and
sub
or
ss
test
xchg
out
jne
dec
xchg
ja
dec
or
retf
and
jge
fidivr
push
pop
dec
arpl
lahf
xchg
xchg
idiv
mov
(bad)
cmp
mov
out
mov
mov
dec
and
cwde
adc
sbb
pop
xchg
lds
jmp
hlt
pop
ret
sti
push
sub
ja
fwait
jmp
mov
inc
mov
add
rcr
in
push
dec
cmp
sahf
arpl
outs
inc
lods
sub
cmps
jecxz
sub
mov
dec
jl
outs
(bad)
xchg
xlat
add
mov
xchg
pop
xchg
hlt
ja
sbb
dec
xor
stos
dec
ja
inc
aaa
xor
push
push
sbb
adc
shl
dec
sub
jno
and
push
aad
jne
stos
cmp
jnp
sub
mov
and
and
ss
out
xchg
sub
ins
mov
add
jbe
jmp
push
fisttp
sub
rol
jbe
stos
push
call
push
add
push
(bad)
or
daa
imul
movs
or
pop
in
(bad)
jno
mov
jle
cmp
in
jecxz
jge
es
cdq
(bad)
add
and
inc
mov
js
gs
mov
sub
outs
arpl
stos
mov
fcomp
push
rol
adc
mov
sbb
scas
aaa
xchg
lock
and
add
pusha
imul
(bad)
shl
ins
or
fs
sub
jns
sbb
cmp
aad
std
mov
cmp
push
and
inc
jp
mov
je
or
xor
adc
xchg
push
scas
cld
test
je
mov
ret
push
or
movs
xor
std
out
mov
xchg
mov
jns
test
lock
add
lods
bound
jb
data16
xlat
loope
fisubr
jg
out
movs
lods
inc
or
push
in
sub
aas
test
mov
les
cmps
lods
repz
pop
jmp
jg
or
push
popa
push
xchg
(bad)
iret
jae
push
loope
dec
pop
repnz
(bad)
call
xchg
mov
mov
test
(bad)
xchg
jmp
inc
mov
cmps
inc
cmps
sahf
lods
cld
sbb
hlt
loopne
xchg
sub
push
mov
mov
adc
pop
(bad)
push
mov
popa
mov
and
cmc
aaa
push
fimul
clc
lock
je
(bad)
popf
adc
dec
or
lods
aas
je
jge
js
shl
sub
scas
pop
retf
adc
mov
in
ins
sub
out
aaa
int
inc
leave
jb
outs
inc
jmp
aas
pop
dec
cld
pop
nop
mov
pop
xor
into
les
mov
mov
push
loop
pushw
cmp
push
ret
psllw
jns
sub
pop
imul
pop
mul
sub
cmp
mov
inc
pop
cmp
xchg
fsub
cmp
xor
jmp
(bad)
xchg
sbb
sar
dec
sbb
cmp
cmp
ja
jno
mov
dec
jo
pusha
jb
or
mov
mov
out
push
inc
xor
dec
adc
movs
mov
test
sti
xchg
add
or
imul
jbe
cmp
sar
jno
(bad)
(bad)
aad
or
das
xor
aaa
fild
jae
and
shr
inc
test
je
xor
sbb
pop
call
rol
leave
popf
cdq
push
outs
shr
stos
xlat
dec
adc
mov
xchg
gs
push
lea
daa
adc
mov
dec
outs
mov
jo
bound
into
xchg
dec
aam
sar
sbb
xchg
imul
fadd
lds
mov
loop
sbb
mov
push
ss
int3
xor
cmp
je
aas
repz
jne
jmp
xor
dec
fwait
mov
(bad)
cmps
sahf
inc
jo
mov
(bad)
(bad)
jbe
out
sub
push
mov
xchg
jns
or
gs
dec
fadd
fldenv
inc
dec
mov
jmp
jmp
inc
mov
sbb
test
cmc
inc
rcl
jle
enter
add
jnp
movs
(bad)
mov
sub
(bad)
adc
push
imul
cmc
push
add
xchg
and
mov
rol
mov
ins
cmp
jnp
stos
inc
mov
mov
inc
pop
out
cli
movs
nop
pop
addr16
inc
inc
jb
adc
sahf
mov
fwait
pop
hlt
xor
cmp
mov
test
idiv
mov
sbb
mov
cli
shl
jmp
out
mov
push
nop
fbstp
cmps
nop
cmp
aas
xlat
sti
dec
out
fcomp
addr16
add
inc
mov
adc
and
and
jmp
lock
push
ins
lods
pop
stos
repz
adc
xchg
mov
sbb
pop
adc
loope
call
out
and
fwait
test
nop
xchg
sub
sbb
push
jecxz
retf
arpl
outs
in
pusha
bound
dec
xchg
into
dec
mov
in
inc
fild
ficom
and
xlat
loop
stos
jge
sub
inc
push
call
out
jle
lods
(bad)
(bad)
test
xor
clc
mov
icebp
pop
ja
mov
in
sbb
or
fimul
repz
mov
ret
pop
enter
mov
adc
mov
push
mov
add
loopne
jne
movs
or
test
sbb
sub
mov
das
pop
push
call
and
pop
inc
test
cdq
push
mov
in
jecxz
loop
les
out
fst
jae
int3
xor
or
mov
lea
ror
test
pop
icebp
cmp
push
dec
add
push
push
scas
movs
lea
cmc
fist
stc
je
push
push
in
outs
pop
xchg
sub
dec
(bad)
push
jg
das
and
aaa
sbb
jmp
icebp
sub
loop
push
repnz
cmp
sbb
mov
outs
popa
mov
cmc
pop
xchg
shl
leave
mov
scas
das
scas
and
jl
test
aad
fimul
fsubrp
and
loopne
stos
sub
xchg
mov
push
mov
mov
test
lahf
jl
fcmovnu
ja
out
mov
jle
xchg
push
xor
enter
in
stc
(bad)
bound
(bad)
and
add
push
adc
ror
pop
shl
loopne
jl
or
mov
aas
aam
retf
popa
jecxz
mov
mov
out
xchg
xchg
dec
or
push
mov
imul
nop
loop
xchg
ins
add
jne
aam
lock
in
inc
enter
pop
xor
pop
cmps
loopne
iret
pop
neg
and
into
mov
fsub
push
rcl
mov
push
sub
daa
hlt
push
sbb
adc
xlat
repnz
pop
jmp
push
xchg
ficom
std
out
cmp
push
mov
je
dec
dec
mov
ret
sbb
mov
pop
lahf
xlat
xor
xor
int3
ins
ds
cs
xor
push
mov
mov
addr16
inc
dec
lock
enter
je
xchg
aaa
push
hlt
sbb
xor
inc
into
sbb
popa
scas
repz
add
ins
fmul
test
xor
test
hlt
dec
ss
int3
cmp
jae
jg
cmp
sub
test
sahf
(bad)
data16
jl
xlat
stc
inc
xchg
mov
pop
push
mov
(bad)
les
sbb
std
and
out
scas
and
out
pop
shl
sub
dec
stos
sub
sub
xchg
fild
outs
xchg
push
inc
mov
sub
push
pop
dec
dec
and
mov
xor
sbb
xchg
fld
imul
leave
jo
cmp
pop
neg
sbb
outs
outs
xchg
push
not
mov
gs
loop
and
lahf
jmp
or
in
imul
add
adc
jae
adc
mov
stos
sbb
xor
sahf
lahf
(bad)
outs
and
mul
lahf
(bad)
cmp
pop
jge
and
xchg
inc
add
mov
jl
sub
popa
and
jl
pop
sti
mov
or
inc
jecxz
mov
nop
jge
pop
mov
or
inc
xchg
sbb
retf
cld
mov
aas
out
das
sub
push
retf
adc
pop
cmovae
adc
mov
cmp
dec
jb
in
(bad)
push
cwde
adc
cmc
adc
stc
and
test
jno
into
not
iret
pop
xchg
jge
scas
adc
jo
xor
lahf
aam
xor
pop
mov
mov
int
and
add
mov
inc
retf
xchg
jg
pop
in
pop
loope
cmps
xchg
inc
dec
add
std
aad
iret
add
ficom
xchg
les
push
or
fdivr
icebp
mov
inc
push
mov
int3
and
xor
shr
(bad)
lock
cmps
(bad)
data16
jbe
mov
stos
push
mov
scas
sub
fdiv
leave
sbb
and
dec
out
mov
xchg
rol
sbb
push
pop
popa
mov
adc
outs
xchg
push
mov
imul
call
mov
gs
fld
mov
cmp
push
cmp
dec
rol
mov
addr16
test
cmp
retf
cld
sub
sub
xchg
in
cmc
loop
jle
sbb
jle
je
xchg
add
jno
inc
data16
(bad)
(bad)
pop
clc
neg
retf
jmp
dec
imul
sub
sahf
bound
dec
push
not
popa
js
call
add
inc
bnd
push
pop
retf
pop
fcomip
cmp
pop
sar
movs
aam
mov
cmp
xchg
push
std
sub
fst
lahf
imul
dec
xchg
xor
dec
test
sub
and
js
daa
dec
jp
push
and
scas
fist
adc
stc
xor
or
xchg
mov
in
repz
and
mov
or
daa
loop
mov
xor
jae
inc
xor
lea
xchg
jne
jae
movs
xor
ret
cmp
loope
push
push
push
movs
dec
add
mov
mov
dec
adc
fild
fbld
sub
(bad)
mov
out
bt
gs
rcl
ss
lahf
dec
dec
mov
jge
dec
test
test
push
jne
in
adc
das
(bad)
pop
cmp
pop
push
push
loopne
shl
stos
jmp
cmp
adc
mov
jae
fwait
sbb
fnstsw
jbe
xor
ins
das
jg
ds
aas
out
(bad)
scas
fnstcw
fdivr
pop
mov
push
(bad)
test
mov
sub
repz
lds
scas
fidiv
test
mov
fisubr
stos
(bad)
popa
jmp
sbb
adc
sub
cmp
shl
(bad)
imul
out
hlt
aaa
imul
mov
mov
ins
cli
adc
add
mov
cmps
xchg
loop
jmp
push
repz
sub
add
or
mov
pop
fdiv
sub
outs
mov
push
gs
dec
pop
inc
shr
out
and
lods
mul
mov
stos
fld
push
mov
xchg
jmp
mov
out
clc
jmp
int
inc
xchg
shl
mov
retf
div
(bad)
sub
or
jmp
mov
jbe
jb
pop
gs
jecxz
movs
pop
mov
test
xor
das
add
les
addr16
push
mov
xor
retf
ret
mov
out
addr16
test
scas
icebp
push
xchg
nop
jb
jmp
inc
arpl
mov
ror
int
push
dec
push
bound
in
cmp
and
pop
jge
mov
jge
data16
mov
cwde
ds
sub
push
cld
call
jns
mul
inc
xchg
ins
arpl
mov
push
mov
movs
adc
mov
out
or
hlt
inc
cli
mov
mov
popa
adc
in
test
xlat
mov
jle
lock
(bad)
jecxz
dec
movs
loope
dec
sbb
push
xchg
mov
jl
pusha
stos
test
aam
jb
sbb
push
sahf
div
mov
cwde
jmp
out
enter
lods
xor
lock
inc
mov
pop
or
ror
repz
in
xor
mov
sub
das
push
popf
xor
push
fstp
movs
and
xchg
cwde
mov
jns
push
mov
cmp
dec
lods
jno
push
outs
jg
test
jecxz
push
sub
sbb
mov
and
iret
xor
daa
jne
xchg
(bad)
lods
push
cmps
(bad)
mov
mov
xor
(bad)
xlat
fist
jne
(bad)
scas
mov
arpl
dec
mov
fwait
pop
cmp
retf
cmp
mov
std
in
add
jg
pusha
push
call
pushf
push
iret
inc
jp
add
adc
div
adc
pop
mov
inc
lock
fiadd
mov
sahf
cdq
clc
cdq
xor
xchg
in
movs
adc
mov
gs
rcr
imul
jae
test
sub
div
ins
inc
rol
fadd
sub
outs
fnsave
aas
imul
jg
inc
mov
jnp
inc
addr16
mov
int3
cmc
pushf
dec
(bad)
push
daa
mov
call
mov
xor
inc
mov
push
fbld
push
pop
fst
repz
dec
je
mov
sbb
xbegin
call
mov
mov
mov
aam
ret
sbb
mov
cmp
shl
cmp
pop
jne
outs
lods
push
sbb
mov
mov
inc
out
jmp
dec
add
adc
xor
jae
fmul
sub
mov
stc
(bad)
adc
and
add
adc
aad
ficomp
add
aad
push
mov
scas
sub
jns
jecxz
adc
or
inc
inc
inc
dec
hlt
shl
push
jb
in
aam
mov
xor
fld
cwde
scas
mov
jne
out
and
mov
jnp
fst
mov
pop
inc
iret
xcrypt-cbc
cmps
aam
int3
and
inc
xlat
hlt
and
sub
xor
jae
fist
scas
jle
stos
adc
out
mov
daa
mov
jae
adc
add
sub
jmp
mov
ret
sbb
mov
sub
mov
in
aas
add
or
xchg
push
adc
mov
mov
es
jmp
adc
push
retf
fidivr
je
pop
jbe
xlat
mov
pop
adc
sahf
xor
cmp
shl
fwait
loope
pop
push
fisttp
in
cmc
sub
stos
or
cli
inc
and
mov
pop
fcom
fwait
lea
mov
test
xor
bound
call
movs
jns
lods
ret
adc
repz
fcom
inc
fbld
faddp
test
xor
nop
dec
mov
sub
(bad)
jecxz
movs
adc
call
stos
cli
mov
stos
xor
xchg
mov
das
(bad)
inc
push
push
push
sub
sub
test
jb
lods
fstp
lahf
fadd
mov
call
div
mov
pusha
or
repnz
js
sub
gs
adc
stos
sahf
jae
pop
add
jnp
sbb
ds
fcmovu
inc
(bad)
out
ins
or
lds
retf
push
xchg
jmp
movs
sti
inc
mov
rcr
pop
mov
push
inc
xchg
cmp
cld
sbb
cmps
popf
repz
sbb
rcl
mov
xchg
and
addr16
cmp
sbb
cmp
(bad)
aam
mov
shr
rcl
dec
or
push
(bad)
pusha
xor
xor
inc
push
push
pop
or
cmp
loop
mov
jns
pop
mov
fstp
sbb
fnstenv
adc
(bad)
push
adc
dec
fist
sbb
test
cli
sti
movs
add
and
or
loop
aam
bound
mov
dec
jb
aaa
mov
pop
sbb
adc
or
cdq
data16
cwde
or
push
sbb
add
hlt
addr16
movs
inc
scas
jecxz
retf
out
adc
jae
fcmove
stos
push
in
and
mov
push
pop
sbb
popf
push
leave
push
enter
sub
aas
pop
cmp
daa
pusha
mov
and
test
inc
dec
xchg
repz
mov
retf
adc
sbb
sar
dec
(bad)
fwait
into
or
(bad)
(bad)
sahf
jp
add
mov
test
sar
pop
xor
dec
shl
outs
dec
jns
push
jp
dec
push
or
mov
push
sbb
retf
lods
ret
or
pusha
xor
lahf
je
sub
xlat
mov
repz
aad
mov
inc
adc
sbb
push
mov
and
in
dec
xor
add
push
stos
push
ret
adc
add
(bad)
ds
adc
jb
rcl
lahf
jge
pop
(bad)
out
adc
(bad)
jae
jl
aam
push
mov
fistp
jno
(bad)
xor
out
ins
xor
mov
or
nop
inc
lods
rcr
xchg
push
sbb
push
mov
in
push
imul
dec
fist
inc
or
xchg
cmps
dec
adc
push
imul
outs
sar
add
sbb
jo
fild
push
loop
xchg
ret
out
ficom
or
lods
cmp
fild
cmc
or
lock
mov
or
pushf
in
xor
mov
es
lods
sub
jecxz
mov
xlat
js
mov
adc
aad
fild
cmp
mov
aad
je
movs
xor
mov
adc
push
stos
jae
xchg
push
add
aad
and
into
mov
jae
pop
loope
call
std
jns
test
mov
sub
jg
dec
pop
in
mov
out
inc
dec
loop
mov
cwde
push
lahf
test
mov
xlat
stos
out
dec
xchg
add
shl
sbb
mov
push
sub
gs
mov
jp
xchg
movs
ror
ins
cwde
outs
and
pushf
dec
sub
addr16
div
push
cld
jge
dec
mov
scas
outs
int3
in
jg
dec
sub
data16
call
out
in
shl
cmp
mov
cmp
into
or
shl
sbb
mov
scas
sbb
movs
xchg
jb
pop
push
shl
sahf
and
jb
call
call
mov
ret
push
addr16
adc
int3
push
call
push
add
test
lock
adc
sbb
jne
mov
adc
sahf
or
sub
fcom
push
xchg
(bad)
jb
les
iret
jbe
jnp
cs
add
fisttp
adc
mov
xchg
hlt
pop
jbe
adc
repnz
push
stos
xor
adc
in
leave
scas
dec
sar
xchg
aas
fwait
and
loop
cmp
mov
outs
cli
xchg
inc
ins
or
adc
jo
ret
cmc
jg
retf
jg
inc
pop
push
ror
jnp
adc
in
jno
repnz
jle
xchg
shl
sub
pop
jae
add
test
or
add
lods
inc
push
data16
hlt
push
icebp
inc
shl
ret
retf
mov
test
fist
and
pop
mov
pop
add
inc
out
gs
rol
aad
ror
icebp
jp
fisttp
pop
bound
popf
test
mov
daa
jl
lods
jo
(bad)
(bad)
aam
movzx
mov
addr16
fsubr
stc
cli
mov
mov
push
dec
ins
pop
sar
add
pop
adc
dec
xor
mov
inc
clc
cmc
mov
in
jmp
mov
imul
out
mov
sbb
sbb
retf
jo
dec
cmp
stc
inc
retf
sbb
retf
sub
or
jp
jmp
push
jns
test
mov
out
sub
retf
xor
in
ror
out
push
pop
or
cdq
dec
stos
rcl
adc
inc
and
add
mov
div
repz
cmp
ins
mov
or
(bad)
mov
mov
fwait
sahf
jnp
mov
pop
clc
adc
frstor
pop
push
sbb
xchg
adc
mov
xchg
pop
stos
sub
pop
sbb
test
rcl
add
repz
in
or
popf
or
fldcw
mov
std
adc
fsub
fcomp
jo
mov
scas
xchg
popa
test
mov
cmp
and
out
leave
fsub
and
jge
les
test
sbb
retf
xchg
dec
dec
adc
pushf
ret
ins
cmps
popa
sub
out
ret
js
ds
lea
cs
dec
das
scas
xor
push
outs
sbb
leave
inc
pop
mov
inc
cmc
div
popf
mov
ins
push
push
into
ins
xor
push
(bad)
into
xlat
arpl
sub
or
mov
daa
jne
arpl
sbb
inc
inc
fwait
ror
aam
in
cs
sub
loop
pushf
cld
mov
sub
mov
inc
jno
idiv
sbb
pop
xchg
jle
sub
clc
jb
rcr
jns
retf
pop
push
ficomp
cmp
xchg
in
jmp
jl
(bad)
and
in
je
fsub
cmp
(bad)
ss
sub
mov
cmp
ds
adc
test
mov
push
(bad)
sti
cmc
ins
xchg
mov
xchg
xlat
pop
fs
sub
cmc
add
add
into
add
adc
mov
cmp
lods
push
cmp
in
dec
imul
mov
inc
ds
pop
repz
clc
shr
icebp
mov
cs
pop
aaa
in
jp
push
repnz
iret
popa
dec
ins
loopne
idiv
pop
push
fidiv
call
out
dec
push
cmp
inc
xchg
ror
jns
jmp
scas
arpl
sti
fimul
out
or
or
push
inc
test
iret
xor
fs
int3
iret
xor
cmp
fcom
pop
dec
xchg
cwde
sbb
sar
cpuid
ret
and
ret
dec
jno
pop
or
add
sub
fidiv
pushf
xchg
aaa
icebp
xchg
out
xchg
lods
fcomp
jl
sbb
das
or
push
stc
fcmovnbe
mov
bound
in
loope
mov
sub
add
dec
or
in
xchg
fs
ficomp
mov
and
fist
ret
mov
cmp
pop
adc
xlat
dec
jmp
inc
in
in
fisub
ret
pop
aas
pop
stos
sbb
push
jle
ss
mov
test
(bad)
popa
adc
pop
jp
lahf
mov
mov
pop
cmp
xor
jecxz
mov
fisttp
inc
pop
jle
data16
rcl
mov
(bad)
push
sub
dec
inc
aad
sub
add
jmp
pop
push
jbe
xchg
mov
out
ret
dec
lea
ins
(bad)
rol
adc
mov
jnp
aad
movs
(bad)
sti
test
fsub
rcr
js
fstp
jne
cdq
cmp
ds
pop
mov
jo
push
and
call
fdiv
outs
push
pusha
test
jnp
mul
div
imul
test
fisub
pop
jns
ss
mov
xchg
sub
(bad)
into
xchg
div
add
add
mov
jecxz
sub
cmp
sub
into
cmp
icebp
pop
loope
loope
cmp
int3
imul
pop
mov
pop
out
cmps
addr16
std
jb
cmp
retf
int3
faddp
add
push
xchg
xchg
mov
gs
addr16
ss
adc
pushf
jb
dec
rol
xor
push
sub
(bad)
push
jns
mov
jno
dec
fmul
daa
xchg
dec
xor
popf
out
mov
push
lahf
add
dec
sub
mov
cmc
sub
cmp
push
in
out
inc
scas
lea
shr
jge
(bad)
mov
mov
mov
sahf
sbb
adc
cld
dec
cmp
or
mov
mov
out
loop
mov
push
jg
jae
xchg
call
sbb
lgdtd
cmp
aam
cmp
mov
fdiv
push
push
popf
sbb
shr
lock
fs
retf
adc
inc
cmp
sti
aad
cwde
int
sahf
cmp
dec
mov
stos
mov
inc
xor
inc
push
lods
cmp
shl
test
call
mov
adc
pop
sbb
fwait
aam
call
xchg
fwait
mov
fdiv
stc
cmp
mov
mov
mov
ins
ds
sub
in
jnp
inc
mov
push
stc
outs
aad
sbb
aam
div
cmp
inc
jo
(bad)
out
je
inc
fadd
xchg
jmp
ror
jp
and
sbb
jg
test
xchg
arpl
shr
xchg
hlt
test
push
and
mov
push
and
fmul
add
mov
sbb
push
cld
cmp
jmp
jo
xor
inc
clc
lahf
xchg
ins
jp
(bad)
in
dec
imul
xchg
sahf
sar
inc
movs
pushw
push
push
stos
pop
das
push
mov
lods
popf
shl
jmp
das
push
stos
fldcw
in
inc
inc
pushf
daa
inc
sar
mov
pop
and
daa
popa
mov
mov
sub
sub
push
and
out
push
lahf
sub
add
inc
movs
(bad)
imul
stos
xchg
push
mov
cmp
xor
movs
add
clc
sbb
arpl
adc
retf
or
cmps
mov
mov
push
neg
in
and
sbb
sub
xchg
and
sahf
mov
lds
jns
std
inc
mov
retf
cs
stos
pop
mov
movs
or
cmps
add
lahf
dec
cmc
scas
fwait
pop
test
mov
in
stos
jns
add
add
nop
or
cwde
pop
dec
das
add
xchg
fs
scas
adc
int
sub
adc
repz
nop
adc
add
push
mov
push
jae
ja
lea
jl
add
adc
push
je
aam
xor
jp
out
xchg
retf
sbb
ss
xchg
mov
xor
scas
pusha
jecxz
or
and
imul
xor
stc
loope
or
les
jmp
gs
pop
scas
ja
or
shl
sub
mov
retf
aad
sub
pop
shl
cmp
sbb
stc
xchg
add
sahf
add
pop
dec
mov
test
shl
in
cs
ins
retf
ret
(bad)
fimul
mov
fld
aad
adc
jmp
enter
mov
xor
iret
fld
in
cmc
mov
mov
cdq
add
lods
jo
(bad)
mov
jg
mov
das
xchg
pop
sbb
mov
adc
sbb
or
xor
cmp
pusha
dec
data16
push
out
mov
push
shl
movs
retf
sub
jge
das
mov
jle
in
adc
jnp
gs
in
fisub
test
jb
mov
jg
(bad)
aad
pop
pop
dec
dec
in
dec
adc
in
mov
jp
mov
clc
lock
and
jl
ss
dec
fnstcw
movs
inc
cmp
inc
cmc
mov
dec
rcl
jno
lods
shl
xchg
cld
jb
repnz
or
mov
cmps
xor
lods
pop
scas
loop
cli
push
push
jbe
mov
adc
repz
(bad)
popa
xor
mov
pop
ins
sbb
dec
inc
or
xchg
mov
pop
mov
popa
in
pop
fisttp
stos
cmp
(bad)
sbb
das
hlt
or
push
js
mov
push
mov
aad
cwde
ins
out
xor
push
push
sbb
cmp
lods
dec
or
mov
mov
aam
ins
and
sbb
jo
pop
jle
push
or
in
(bad)
clc
dec
mov
jge
xchg
xor
fwait
imul
ror
xor
test
jmp
cmp
bound
push
idiv
stos
aaa
sub
mov
stos
mov
mul
jp
(bad)
adc
in
cmp
iret
(bad)
mov
jmp
les
outs
das
sar
cmp
mov
test
js
and
jne
ins
hlt
jo
push
jns
lahf
je
ror
jns
imul
scas
aaa
fld
jmp
and
mov
and
jbe
inc
dec
fwait
int
sbb
adc
sub
mov
out
(bad)
jne
dec
ss
sahf
push
bound
rcr
retf
cmp
out
add
movs
unpcklps
push
icebp
pop
int3
xor
pop
(bad)
and
pop
fldcw
(bad)
mov
or
or
dec
mov
jo
sbb
adc
cli
pop
outs
sub
fwait
jg
ror
and
mov
les
dec
push
daa
repz
sbb
dec
(bad)
loopne
test
aam
retf
lods
inc
cs
movs
aaa
ret
xor
lahf
dec
(bad)
push
add
add
out
xchg
cmps
sub
retf
lods
lods
mov
inc
pop
pushf
dec
add
dec
bound
or
out
mov
xchg
mul
jae
xchg
push
xor
mov
fiadd
pop
pop
jmp
shl
divss
test
dec
cmc
aam
in
mov
frstor
or
pop
fcmovu
fistp
push
push
fdiv
mov
mov
push
or
add
mov
pop
jo
push
sti
(bad)
adc
xchg
or
xchg
push
mov
and
cmp
imul
(bad)
ficom
repnz
add
fldcw
es
push
pop
(bad)
clc
aam
mov
cmp
sti
bound
mov
sbb
jmp
(bad)
adc
das
mov
int3
xchg
mov
and
rol
iret
sbb
xchg
out
cmp
mov
(bad)
out
lods
data16
sub
xchg
repnz
fnstsw
data16
inc
ret
jo
cmps
ret
add
push
xor
repz
sbb
adc
pop
cwde
jne
in
(bad)
cli
adc
fcom
cmp
lods
nop
jmp
mov
in
mov
test
into
out
add
jns
pop
add
xchg
das
enter
sbb
dec
popf
popa
scas
cmp
push
test
sbb
pop
xchg
xchg
or
aad
mov
ins
(bad)
je
jne
or
dec
fdivr
fimul
sub
mov
jge
clc
xor
xchg
retf
(bad)
mov
fistp
jmp
sub
dec
scas
dec
popa
push
adc
xor
mov
adc
ror
aaa
imul
retf
xor
je
rcr
ror
bound
and
(bad)
jnp
(bad)
jae
sbb
out
addr16
mul
jmp
fisubr
sti
int3
stc
les
dec
sub
xor
sbb
jg
add
pop
in
and
mov
outs
and
push
les
inc
push
mov
arpl
xor
mov
push
sub
adc
retf
scas
adc
data16
outs
jae
cmp
imul
mov
arpl
loopne
in
or
(bad)
xchg
fsub
iret
cs
nop
(bad)
and
jecxz
inc
not
jbe
mov
jle
adc
mov
fdivr
sub
cld
pop
sbb
xchg
retf
inc
mov
scas
sbb
ffree
add
shl
inc
inc
jns
xor
jmp
loopne
or
pop
sub
xor
ins
add
push
inc
shr
inc
jecxz
or
dec
pop
add
cmps
lods
push
jecxz
xchg
arpl
sub
mov
repz
imul
adc
aaa
sub
inc
xchg
push
sbb
add
ror
dec
(bad)
fmul
mov
out
adc
ds
arpl
scas
push
and
jecxz
adc
addr16
leave
add
xor
jno
imul
or
bound
(bad)
push
jbe
jl
cmp
jbe
ret
in
ss
ficom
(bad)
jmp
mov
jns
fwait
pop
xchg
rcl
fild
xor
cdq
push
js
xor
mov
xchg
lds
mov
jns
es
lahf
add
dec
mov
pop
std
inc
inc
mov
mov
pop
inc
test
stos
cmps
das
jmp
pop
xlat
js
pop
dec
mov
sub
gs
lahf
sub
push
scas
dec
arpl
stos
in
pop
into
and
adc
push
inc
cmp
cmps
sbb
jae
pushf
cmp
or
mov
stos
cld
shr
and
sub
push
ret
jp
cdq
jle
adc
mov
ss
mov
mov
pop
fwait
pop
popf
test
xchg
cmp
xchg
imul
sub
mov
xchg
leave
xor
mov
not
xchg
dec
movs
xchg
test
bound
sub
pop
jns
push
iret
dec
stos
je
test
movs
and
ret
mov
xchg
test
test
stos
fs
in
stos
in
hlt
test
dec
dec
xchg
mov
movs
das
cdq
es
pop
push
data16
out
dec
add
cmc
rcr
into
push
(bad)
fisttp
mov
and
mov
jbe
cli
cmp
(bad)
add
add
out
pop
cmp
mov
sub
inc
push
movs
cld
cs
sar
push
sti
aas
aad
out
jmp
mov
inc
xchg
mov
mov
arpl
sub
imul
and
icebp
jmp
outs
dec
dec
push
cmp
jb
push
add
sub
jl
pusha
imul
rol
fsub
jmp
xor
push
cmp
cmp
out
pop
cmc
sti
adc
jno
push
movs
xor
add
(bad)
daa
in
dec
out
push
sbb
push
and
popf
loopne
test
icebp
jmp
les
sub
mov
test
add
gs
call
popa
adc
push
mov
pop
mov
push
retf
sub
mov
adc
or
clc
pop
push
out
out
add
data16
minps
test
rcl
and
adc
or
cmps
mov
adc
test
rcr
sbb
imul
fcmovnbe
aaa
jnp
push
mov
jp
std
mov
dec
movs
xchg
sub
push
jg
sar
stos
pop
jbe
mov
pop
ret
sub
jns
push
nop
mov
or
xchg
add
sub
xor
adc
shl
dec
mov
jecxz
sub
push
daa
mov
inc
push
push
xor
cmps
fdiv
pop
(bad)
jnp
mov
xor
lods
sub
(bad)
cmp
popf
cld
mov
iret
inc
jne
adc
adc
out
mov
pop
inc
jg
jmp
push
ror
cmp
dec
ret
out
std
sbb
je
inc
bound
repnz
stc
pop
icebp
xchg
in
test
int3
or
pop
addr16
lds
inc
xchg
sti
dec
adc
sbb
and
xchg
cmc
pop
add
aaa
xchg
mov
or
jmp
shl
adc
mov
fsubr
(bad)
push
or
inc
addr16
retf
and
cmp
push
pop
dec
std
stc
cs
and
mul
scas
and
subps
js
pusha
lods
cli
dec
push
xor
or
pop
or
shl
xchg
push
sub
div
addr16
jb
test
jl
dec
stc
sub
and
push
and
push
inc
pop
inc
clc
fidiv
inc
dec
retf
lods
call
mov
jle
stos
adc
aas
or
sbb
ficom
inc
retf
jo
xchg
clc
jb
mov
add
fs
fs
cmp
inc
sub
mov
mov
jmp
sbb
outs
les
sbb
sub
inc
mov
mov
call
jp
stos
stos
mov
loopne
adc
pop
cmp
and
xor
xchg
ins
and
cmp
or
sub
(bad)
cmp
inc
sbb
dec
adc
scas
cmp
fcom
(bad)
pop
push
adc
dec
inc
push
push
cdq
mov
cmp
add
mov
cmp
lea
jnp
outs
adc
imul
mov
pop
jp
bound
and
call
out
mov
cmp
pusha
mov
scas
jns
aas
mov
jle
(bad)
loopne
sub
stos
lods
mov
cmps
sbb
mov
ins
movs
js
std
cs
cmc
cs
mov
(bad)
mov
xchg
sqrtps
jl
imul
push
add
(bad)
pusha
arpl
dec
shl
int
push
shr
pop
mov
rcl
loope
jp
ss
push
fdiv
and
push
(bad)
lods
sbb
jge
or
dec
and
syscall
or
xchg
sbb
mov
popf
outs
je
pop
aas
jb
fcom
dec
jbe
lock
mov
or
add
xor
jp
jne
cdq
xor
(bad)
pop
jp
int
repz
add
add
pop
(bad)
stc
sbb
cmp
mov
loop
jp
retf
xchg
adc
adc
mov
fsub
push
addr16
dec
mov
dec
lods
jo
cmp
push
outs
arpl
adc
xchg
dec
adc
call
and
daa
and
iret
outs
xor
jmp
scas
push
pop
pop
add
xchg
lock
cld
int
(bad)
mov
dec
repnz
(bad)
dec
fdiv
retf
(bad)
data16
(bad)
mov
dec
scas
imul
mov
shl
fwait
dec
cmps
or
ss
push
mul
int3
cmp
imul
mov
int3
dec
dec
inc
test
pusha
pop
sub
dec
test
mov
push
xchg
mov
xor
mov
push
jge
aad
inc
jno
xchg
push
mov
push
mov
das
lds
es
xor
cmp
mov
jle
xor
lods
imul
mov
ss
and
pop
ss
cmp
jle
jl
inc
mov
adc
sub
or
stc
push
loope
cmp
fisttp
cmp
inc
xchg
or
dec
hlt
sbb
es
ror
pop
fld
cmps
movs
les
(bad)
dec
mov
jl
retf
scas
mov
pop
jmp
jmp
gs
cmp
mov
add
pop
test
push
push
sti
(bad)
rcl
shl
xchg
bound
lock
fcmove
icebp
jne
jno
lahf
stos
sti
xchg
jno
imul
(bad)
cmps
add
sub
iretw
inc
ret
mov
loop
repnz
lock
mov
cld
js
mov
mov
sub
ja
in
mov
and
inc
out
je
daa
add
ja
sbb
dec
clc
sbb
add
(bad)
or
repz
pusha
and
repz
adc
mov
(bad)
mov
out
into
sahf
push
xchg
mov
add
mov
push
fisttp
fldcw
sub
adc
ffreep
repz
push
int
sub
gs
test
dec
xchg
push
outs
int
cli
pop
cmp
mov
dec
pop
push
std
mov
popa
xchg
jp
sub
in
sahf
add
mov
ins
add
aam
cs
loop
inc
in
cld
data16
sti
scas
adc
jne
loop
je
ret
inc
into
sub
pop
sbb
cmp
stc
jmp
imul
(bad)
and
imul
push
aaa
xor
lods
shrd
les
xor
push
or
adc
shr
or
gs
cmps
rcr
jle
cmp
aam
pop
cwde
popf
repnz
(bad)
push
push
mov
push
jg
xor
adc
lea
gs
xlat
(bad)
and
shl
inc
nop
jle
outs
out
out
mul
scas
es
sbb
and
fisub
xchg
or
jbe
or
test
lock
shr
(bad)
sti
popf
ds
xor
inc
jb
fisttp
pop
shl
pop
lahf
je
ret
or
ret
movs
je
out
js
cwde
or
inc
jnp
out
mov
add
pop
mov
cmp
xchg
pop
ins
icebp
pop
fwait
jmp
div
dec
mov
ss
psrld
xor
js
in
cdq
pop
cmp
(bad)
adc
imul
repz
xor
push
rol
mov
shl
mov
xor
aam
lods
movs
mov
ins
fwait
inc
xchg
jge
mov
cmp
xchg
ret
popf
cmps
jp
sub
cmp
inc
dec
neg
repnz
shr
js
push
ja
sbb
dec
sub
es
aas
jmp
es
jecxz
xchg
ud1
jno
clc
fs
push
push
mov
neg
mov
add
stos
pop
fcomp
outs
mov
push
ret
fimul
jbe
inc
dec
cmp
in
cmp
test
inc
outs
fdiv
mov
sbb
mov
sub
pop
enter
dec
xchg
inc
jbe
add
push
cli
les
jg
repnz
mov
imul
push
mov
mov
in
aas
aam
movs
add
or
ficomp
cmc
jge
leave
in
sbb
mov
out
int3
movs
mov
in
add
push
es
push
mov
shr
jmp
jo
dec
pop
aam
inc
retf
je
pusha
add
push
rcr
dec
xor
sub
loope
mov
jl
pop
aad
push
mov
ja
out
bound
retf
inc
dec
xchg
cld
mov
push
mov
push
leave
fst
test
cmps
aaa
(bad)
sahf
adc
das
mov
ret
mov
xor
(bad)
adc
jmp
test
aaa
push
sbb
jo
xchg
xor
adc
cmp
mov
pushf
or
jbe
adc
adc
js
push
push
xor
mul
inc
int
pop
xor
xchg
and
add
into
and
lahf
jge
std
je
inc
aas
or
pusha
pop
std
inc
add
inc
leave
lahf
lea
adc
dec
aas
enter
or
aam
jecxz
scas
movs
push
aas
inc
mov
lea
mov
push
jne
lock
fsubr
aaa
(bad)
push
pop
fwait
add
dec
mov
addr16
jb
push
cmp
movs
add
dec
ret
add
inc
add
int3
aam
dec
add
pop
or
(bad)
fwait
pusha
jne
cmps
cdq
test
retf
mov
jmp
adc
icebp
jae
ror
cld
jle
push
add
or
push
dec
push
mov
xchg
scas
jnp
jg
aam
jg
jb
mov
loope
add
(bad)
(bad)
jmp
popf
cld
les
dec
test
jmp
iret
or
lods
aam
shl
mov
dec
jle
inc
retf
aas
fadd
sub
mov
cmp
jl
fs
scas
loop
lods
jnp
ins
inc
jle
cwde
jns
psllq
xlat
or
daa
mov
into
shl
and
sbb
inc
adc
je
push
xchg
sbb
mov
pop
lds
pop
mov
bound
push
inc
pop
fadd
pop
lods
test
loop
inc
inc
push
clc
and
or
shl
push
add
xchg
lods
ss
jmp
aaa
sub
or
les
scas
jl
ds
ja
inc
not
push
and
mov
xchg
mov
add
sub
sub
jmp
popa
mov
push
inc
pop
add
xlat
cli
push
ret
lods
sub
pop
and
bound
inc
cmps
and
scas
xor
cmc
imul
pop
cli
(bad)
pop
inc
dec
sti
dec
pop
je
in
xchg
push
cmps
dec
leave
sub
or
iret
mov
push
aaa
movs
fadd
sar
test
test
addr16
push
and
xlat
(bad)
cmps
jg
ss
xor
in
fisub
test
movs
push
repz
sti
add
push
pop
aad
jns
pusha
inc
or
inc
bound
cmp
addr16
out
ins
loope
sbb
fcom
mov
cs
mov
ins
test
hlt
scas
mov
mov
push
nop
mov
cmc
cmp
test
mov
and
daa
pop
sbb
ret
js
aam
or
sbb
mov
(bad)
call
call
ret
push
add
sub
leave
out
out
dec
jmp
mov
imul
mov
push
inc
daa
popf
mov
mov
rcr
cdq
jp
fisttp
xor
icebp
mov
and
and
or
aam
inc
adc
popa
gs
sbb
fisubr
std
lea
sbb
(bad)
in
mov
dec
shl
and
out
(bad)
push
sbb
out
add
and
inc
or
push
cmp
jne
push
mov
je
int
cld
inc
mov
or
hlt
cmp
sub
mov
mov
cwde
xchg
mov
(bad)
fdivr
push
scas
pop
sahf
push
xchg
pop
xchg
scas
xchg
jmp
push
into
pusha
aas
mov
jb
push
sbb
xor
xor
mov
mov
outs
pop
das
inc
xchg
cli
jns
jge
mov
push
inc
sub
sbb
bound
adc
out
ss
inc
mov
loop
inc
jecxz
push
jns
jne
in
test
fisub
xchg
xor
mov
sub
push
mov
(bad)
loop
call
adc
(bad)
fld
movs
xchg
popf
and
pop
and
shl
das
sub
jae
add
and
and
push
jle
scas
stos
pop
out
adc
sbb
je
call
or
add
cmp
fisttp
cwde
movs
in
leave
(bad)
xchg
rcr
(bad)
cmp
arpl
jg
(bad)
and
popa
ror
inc
push
test
inc
pop
js
sub
cmps
jmp
cmp
pop
in
and
outs
pop
hlt
rcl
mov
call
dec
pop
xchg
jo
test
pop
(bad)
jno
dec
push
jo
xor
add
adc
aad
adc
push
push
add
and
xchg
mov
dec
mov
mov
sbb
stos
add
out
fmulp
js
dec
fs
jge
shr
mov
push
mov
mov
std
pop
mov
sub
add
sbb
add
aas
nop
mov
aaa
mov
jnp
cld
loop
sti
xor
push
inc
gs
loop
mov
xchg
in
inc
mov
call
retf
fist
sub
inc
cs
fnstcw
xlat
fdiv
iret
adc
popf
enter
cmps
jne
jecxz
mov
push
inc
mov
push
ret
or
ss
ja
and
push
fsubr
cmc
test
pop
retf
cmp
movs
dec
sub
lds
rol
das
xchg
cmp
jne
retf
cs
addr16
pushf
jmp
cmp
jo
in
xchg
mov
add
dec
sbb
in
adc
xor
in
stc
mov
call
in
aam
mov
mov
ss
pop
loopne
and
dec
mov
jb
sbb
outs
pusha
adc
cmp
aam
and
shl
mov
fdiv
stos
adc
mov
call
shr
outs
adc
aaa
mov
sbb
cmc
or
sar
mov
push
add
out
add
jecxz
mov
sahf
push
mov
rol
xchg
pop
or
inc
dec
loope
or
es
pop
adc
test
das
pop
add
test
fsub
xor
dec
popf
add
push
inc
lods
ins
les
or
dec
add
adc
stos
movs
cmc
ret
add
mov
lahf
push
mov
push
lods
jmp
inc
xchg
sahf
jo
mov
(bad)
cmp
cwde
std
hlt
push
shl
mov
repz
cwde
sub
lods
movs
and
xchg
sahf
push
inc
lods
call
inc
hlt
shl
jne
ret
pop
ds
aas
push
sbb
jg
imul
adc
add
xor
inc
repnz
push
sbb
mov
mov
push
sub
stos
cdq
daa
pop
cmp
aaa
cmp
cdq
fisttp
enter
loopne
fimul
adc
out
xchg
(bad)
mov
mov
daa
pop
mov
xor
int3
lock
and
or
fwait
cmp
(bad)
xchg
hlt
mov
mov
jge
ficom
jl
cmps
setbe
cmc
push
sub
hlt
xchg
cmp
sub
mov
add
inc
repnz
data16
sub
retf
sbb
jne
jns
fcomp
cli
mov
sbb
xor
stos
jno
xlat
pop
push
pop
sub
js
in
inc
out
pop
add
imul
loopne
cmp
pop
aas
(bad)
jbe
or
sar
data16
int
jle
rcr
(bad)
and
jne
aas
aaa
pusha
pop
aad
add
loope
push
clc
xchg
mov
push
fwait
out
stos
and
adc
loopne
push
ret
aaa
push
les
xchg
ss
repnz
pop
retf
(bad)
out
test
aaa
aam
(bad)
popf
(bad)
hlt
shl
call
mov
js
loope
(bad)
mov
stc
test
mov
dec
mov
arpl
repnz
push
or
and
lea
fsubr
in
enter
inc
pushf
movs
mov
cmp
loopne
xchg
retf
and
inc
or
cmp
sub
inc
dec
jo
inc
(bad)
adc
mov
xchg
jns
inc
(bad)
pop
and
push
jl
xchg
xchg
inc
test
ins
in
(bad)
retf
dec
les
lahf
sbb
imul
pushf
push
inc
out
ja
add
push
cmc
ret
pop
mov
push
mov
je
cmp
lds
clc
inc
jp
mov
sbb
inc
dec
push
call
dec
stc
bound
daa
xchg
das
dec
xor
lods
stos
enter
dec
es
cli
pop
jmp
mov
sbb
cwde
mov
jmp
scas
sti
inc
shl
aad
push
sub
movs
dec
test
push
push
xor
pop
pop
add
lea
sbb
loopne
mov
mov
lods
pushf
mov
push
ss
sub
push
sbb
adc
ss
popa
xchg
pushf
mov
jb
jl
lods
jno
sub
ds
push
ds
cmp
and
mov
fisttp
cdq
push
stc
sub
pop
sub
xchg
push
(bad)
retf
div
and
pusha
retf
jne
(bad)
fbld
not
scas
push
cmp
and
pop
ins
(bad)
iret
cmp
xchg
ja
adc
sbb
push
adc
(bad)
jecxz
jb
jno
or
js
sahf
stos
mul
or
test
mov
movs
dec
iret
nop
sahf
aam
lods
arpl
or
mov
dec
pop
ficom
push
mov
adc
push
mov
dec
ror
out
jo
adc
sbb
xchg
loopne
mov
mov
std
push
outs
dec
jno
fsub
cmp
and
sub
inc
cmp
and
cwde
jns
aaa
pop
shr
or
sub
std
inc
imul
aaa
sub
stos
mov
xchg
fs
loop
shl
dec
xchg
adc
dec
nop
sbb
out
bnd
lods
cmp
imul
dec
ffreep
xlat
loop
scas
sub
adc
jle
or
arpl
fiadd
stos
mov
mov
retf
cli
add
pop
fbstp
add
pop
cmps
imul
dec
pop
cli
inc
sub
adc
cs
(bad)
shl
out
push
adc
in
mov
xchg
sub
test
rcr
call
int3
push
jmp
sar
adc
cmp
sub
loop
pushf
rcl
jmp
add
inc
cmp
push
mov
out
ret
ret
ret
push
inc
int3
mov
in
clc
cmp
sar
addr16
fs
test
cli
push
inc
add
gs
ins
mov
cs
shr
aam
icebp
jecxz
xor
shr
push
aaa
popa
test
add
bsr
int
pop
add
mov
int
pop
stos
mov
mov
mov
int3
mov
retf
mov
sub
add
call
mov
xor
into
ret
and
in
ds
ja
js
enter
pop
push
mov
outs
xor
loop
xchg
dec
repnz
jno
sbb
lods
retf
ldmxcsr
push
cmps
xchg
ficomp
adc
dec
mov
enter
cmp
test
adc
gs
loopne
lahf
retf
push
cmp
dec
imul
popf
sbb
retf
or
inc
jb
ja
mov
(bad)
sub
sbb
pop
add
int
into
inc
outs
or
inc
popa
inc
pop
repz
and
inc
inc
cmc
mov
je
ins
push
lahf
out
xchg
mov
cli
pop
call
lea
jecxz
or
xchg
cli
cmps
cdq
mov
push
add
mov
pop
jno
inc
adc
sub
push
pop
scas
push
mov
and
inc
inc
addr16
inc
mov
fcmovbe
mov
lock
fmul
leave
sub
shl
out
mov
dec
fwait
jns
adc
es
mov
xchg
outs
add
ror
bound
inc
mov
into
int3
mov
mov
nop
inc
xchg
jp
ins
leave
les
aaa
retf
mov
xor
mov
or
push
add
inc
mov
icebp
loopne
jmp
ins
(bad)
pop
and
sar
push
lods
sub
call
jns
mov
inc
push
(bad)
cmps
or
daa
adc
xchg
cmp
xor
mov
mov
loope
pop
int
sar
(bad)
jmp
je
icebp
ins
inc
stos
loopne
loop
adc
dec
xor
dec
idiv
mov
mov
jecxz
das
push
push
(bad)
and
loope
adc
mov
sbb
nop
fist
mov
mov
dec
mov
cmp
pop
ret
retf
stos
mov
(bad)
jle
or
popf
mov
add
int
and
loope
stos
cmp
ror
lds
xlat
jecxz
mov
dec
xor
add
dec
(bad)
rcr
stos
icebp
retf
or
icebp
stos
jno
adc
jnp
mov
test
data16
xchg
xchg
adc
jo
pop
sub
add
cmps
jge
jecxz
jo
call
pop
test
call
out
out
and
movs
jmp
pop
pop
sar
in
cli
xchg
add
call
cmp
rcr
(bad)
mov
pop
dec
xchg
ins
fisttp
pusha
adc
ja
mov
mov
popf
sti
or
xchg
dec
xor
and
xlat
out
xchg
adc
add
inc
jo
je
mov
xchg
jg
dec
ret
mov
push
aam
sub
test
jl
imul
and
jecxz
adc
popa
pop
jmp
push
xchg
dec
fild
xor
pop
es
dec
and
pop
iret
retf
out
sti
mov
mov
shr
cld
arpl
(bad)
push
pop
(bad)
mov
fcmovne
rcr
test
fiadd
mov
dec
data16
(bad)
shl
push
leave
pusha
pop
sbb
pop
dec
mov
and
xchg
dec
mov
lods
push
xchg
scas
pop
ja
mov
lock
xchg
adc
in
ins
mov
clc
call
cmp
sbb
pop
push
jne
xchg
mov
je
pop
sbb
add
sar
sti
cwde
jb
sub
repz
mov
xchg
scas
loop
int3
test
sub
aad
movs
push
mov
inc
jns
sub
jmp
add
mov
mov
mov
add
dec
ins
test
dec
sub
test
test
mov
cmps
xor
jns
xor
mov
xor
pop
xchg
call
stos
rol
cli
outs
loope
(bad)
lods
adc
pushf
xchg
xchg
inc
push
push
mov
add
into
jecxz
fdivr
arpl
aam
or
jnp
cmp
aad
mov
cdq
cwde
shr
sub
leave
add
inc
fadd
fisubr
and
retf
outs
out
mov
or
ficom
in
outs
fwait
pop
(bad)
loope
movs
push
mov
inc
cmp
hlt
(bad)
sbb
dec
sbb
or
aam
idiv
lahf
dec
jnp
xchg
jecxz
ror
push
hlt
fcmovne
not
push
out
push
pop
push
mov
retf
shr
outs
fild
das
sub
sbb
test
cmovge
jp
mov
dec
ins
or
(bad)
mov
mov
mov
push
les
sbb
adc
push
jae
cld
jmp
(bad)
pop
dec
mov
xor
ja
shl
dec
ror
jge
jbe
jns
pop
lods
enter
mov
push
or
fdiv
add
cmp
cwde
daa
xchg
push
stos
cld
dec
xor
not
iret
(bad)
out
xchg
cmc
retf
inc
jmp
inc
mov
and
and
push
out
push
mov
sub
test
rol
mov
call
xchg
pop
clc
outs
jp
xlat
div
iret
jns
jmp
pop
xor
shl
cmc
push
or
(bad)
mov
pop
add
mul
xchg
cmp
inc
cmp
bound
sbb
pushf
inc
call
in
into
inc
mul
mov
pop
ins
icebp
ins
sbb
sub
fstp
cmc
loopne
mov
sbb
cmps
jmp
sub
pushf
cmp
mov
mov
push
stc
test
mov
inc
aad
push
bound
retf
push
loopne
pusha
xchg
cdq
clc
mov
fs
dec
shl
jnp
sub
sar
xchg
mov
push
mov
inc
adc
popf
(bad)
jg
inc
in
add
xor
dec
pop
mov
cmps
les
mov
sub
aas
adc
ret
mov
pushf
call
xor
loope
push
push
inc
lods
mov
call
mov
frstor
adc
cdq
sbb
push
mov
jae
stos
xchg
push
bnd
push
push
stos
sbb
jb
(bad)
ins
jge
cmp
in
pushf
test
ret
iretw
pop
out
sbb
mov
inc
xchg
mov
cli
dec
mov
dec
movs
not
inc
sahf
push
fcomp
(bad)
sbb
addr16
xchg
and
outs
jbe
or
sbb
popa
mov
out
ss
sti
imul
mov
jb
add
nop
call
(bad)
push
mov
pop
clc
mov
daa
inc
outs
pop
ins
out
mov
cmp
lahf
iret
add
and
(bad)
stc
adc
test
sbb
cmp
xor
arpl
jnp
jo
loopne
adc
test
sbb
pop
jb
test
lods
mov
push
test
cld
lds
or
inc
ins
xchg
test
xchg
fdiv
inc
adc
stc
repnz
or
mov
lods
int
xchg
cmp
repz
mov
mov
nop
push
push
inc
mov
clc
call
lods
push
mov
fdivp
lock
cmc
push
fisttp
pop
mov
pop
pop
push
cs
jg
mov
adc
cwde
loope
fsubr
aad
push
or
outs
mov
fistp
pop
loopne
cmp
mov
and
jo
div
test
mov
dec
popa
mov
xchg
cs
mov
dec
outs
shl
cmps
fidiv
ror
dec
leave
leave
inc
and
adc
jae
inc
mov
inc
aam
xor
into
(bad)
test
pusha
jno
jmp
jns
in
or
xchg
pop
mov
rcl
add
ret
in
add
test
xor
mov
mov
lock
mov
stc
cmp
nop
sub
mov
jbe
adc
xchg
mov
test
rcl
fs
pushf
sar
sub
cmovnp
cmp
sub
mov
call
or
jne
cdq
jns
sub
lock
pop
addr16
cmp
cmp
pop
bnd
lds
mov
and
xchg
retf
ficomp
mov
xchg
test
in
mov
je
in
cdq
js
into
int
sbb
outs
popa
xchg
shl
out
dec
mov
sub
pushf
jb
fsubp
and
and
or
lds
loopne
pop
jp
and
rcr
mov
(bad)
jne
jl
push
movs
mov
jno
fist
xchg
movs
ins
sub
or
dec
les
mov
mov
or
inc
fstp
pop
mov
push
or
xor
xchg
das
xchg
jno
jge
call
scas
adc
dec
enter
push
sti
mov
sub
mov
mov
inc
add
mov
sbb
push
int3
jl
and
and
adc
inc
push
inc
jmp
add
inc
xor
and
fldenv
stos
les
dec
int3
ret
test
adc
xor
and
add
jle
(bad)
fdecstp
lahf
mov
mov
xchg
repz
ins
and
mov
add
jecxz
add
pop
inc
lods
xor
sahf
push
jae
mov
add
in
test
rcl
push
into
fnstenv
or
xor
mov
lea
into
rol
and
add
mov
mov
iret
dec
and
cli
pop
adc
push
loopne
adc
xor
mov
mov
push
or
add
sub
fcom
sbb
mov
jmp
int
sub
jno
loop
xor
dec
movs
and
scas
and
dec
and
inc
into
movs
cmps
dec
fiadd
in
(bad)
repnz
push
xchg
xchg
stc
sbb
and
pop
out
dec
std
scas
pop
sbb
inc
xor
jno
sbb
ins
mov
rcl
add
jmp
mov
enter
test
pop
inc
cmps
jns
inc
movs
or
dec
mov
xchg
movs
movs
mov
dec
enter
bound
rol
jmp
add
jge
mov
pusha
pop
pop
not
(bad)
scas
push
cmp
mov
xor
es
imul
pop
mov
bound
sbb
(bad)
call
(bad)
jl
jb
ror
cld
cli
(bad)
(bad)
jmp
dec
test
push
leave
in
mov
xor
aad
xchg
cmp
or
in
scas
retf
clc
inc
ds
and
pop
sahf
mov
loop
mov
je
imul
ds
outs
jno
add
rol
cmp
iret
mov
add
int
das
std
push
mov
add
dec
mov
sbb
in
mov
inc
jp
add
xlat
lock
cmc
dec
mov
fisub
and
test
fdivr
ror
pop
sti
mov
add
dec
pusha
sub
mov
sub
(bad)
push
dec
outs
fisttp
pop
loopne
dec
lahf
jns
or
jmp
jg
pop
push
sub
ja
repz
push
fsubr
add
mov
icebp
dec
or
cmp
shr
mov
inc
daa
cmp
and
or
pop
fcmovnb
xchg
mov
and
out
mov
sbb
xor
or
mov
push
je
jb
aas
xchg
inc
push
pop
(bad)
pushf
repnz
data16
mov
aas
scas
jg
mov
fs
int3
mov
bound
rol
mov
inc
repnz
dec
pusha
mov
and
hlt
add
jae
dec
test
ja
fdivp
popa
xor
mov
cdq
addr16
mov
mov
stos
xchg
gs
add
(bad)
stos
push
pop
scas
inc
add
cmovp
outs
add
sbb
popf
in
gs
pop
add
pop
xor
jmp
stos
mov
xchg
and
mov
aaa
outs
add
add
dec
(bad)
not
gs
fisttp
test
fwait
dec
mov
xor
mov
xchg
(bad)
xchg
cmp
adc
scas
fild
outs
leave
add
mov
xor
xor
cmp
sub
das
fdiv
or
xchg
cdq
push
mov
popa
test
sti
jo
and
test
outs
sahf
rcl
test
jb
sti
mov
sub
add
jo
mov
js
sub
cmp
test
mov
mov
ins
imul
inc
ja
push
dec
ins
jecxz
jbe
aam
dec
leave
pop
jno
repnz
and
jns
and
pop
sbb
mov
mov
fadd
xchg
inc
and
adc
pop
cmp
sahf
(bad)
ror
cmps
test
mov
jo
add
cmp
mov
cmp
jo
and
pop
xchg
or
iret
into
sbb
xchg
mov
imul
icebp
push
mov
mov
outs
sub
aas
sub
cmp
inc
mov
bound
push
(bad)
mov
stos
sbb
xchg
pop
sahf
fsub
or
maxps
iret
mov
sub
xchg
jnp
sbb
in
aas
cmps
cmp
aas
test
cmp
repz
sub
dec
pop
ss
and
jle
cli
aad
stos
adc
arpl
rcl
mov
dec
inc
xchg
int
ret
dec
add
pop
sub
mov
inc
out
or
shl
(bad)
dec
retf
dec
push
xor
test
cdq
sbb
cmc
dec
jle
retf
push
adc
xlat
mov
jl
int
mov
dec
(bad)
aam
mov
ss
mov
iret
jmp
test
pop
or
jmp
xchg
dec
icebp
jmp
into
xchg
push
scas
lahf
pop
sub
jns
fimul
inc
sahf
push
movs
(bad)
mov
stos
fadd
mov
jg
scas
mov
inc
(bad)
(bad)
ds
mov
daa
or
cmps
std
pop
xor
or
sti
arpl
xlat
movs
test
mov
fist
js
xchg
es
int3
js
int
stos
jnp
arpl
sub
das
mov
xchg
sbb
lds
mov
adc
lahf
xchg
pop
loope
pushf
shl
retf
mov
jno
ror
mov
push
ds
sub
xchg
add
into
repnz
sub
mov
mov
std
sub
fs
loopne
fist
xchg
gs
cdq
stos
push
xor
iret
pop
mov
aas
out
adc
cmp
cdq
cmp
and
push
out
mov
push
repz
movs
mov
xchg
out
add
dec
aad
retf
jb
and
stc
jb
sbb
mov
pusha
and
dec
cmp
dec
cmp
je
cmp
jb
mov
sti
shl
pop
imul
shl
ss
adc
xchg
or
scas
call
xlat
aad
test
ja
push
push
(bad)
push
retf
ret
mov
and
mov
rcr
mov
xchg
lods
adc
mov
sbb
daa
push
imul
pushf
jbe
inc
aas
or
cmp
stos
ds
add
dec
lea
xchg
adc
mov
cwde
pop
mov
push
inc
imul
sbb
and
lds
mov
push
mov
adc
adc
(bad)
sbb
scas
jl
push
push
lea
js
out
test
adc
(bad)
pop
push
xchg
sub
enter
daa
inc
addr16
dec
jle
jns
cwde
jb
daa
dec
xchg
push
hlt
jmp
loopne
or
sti
sbb
das
jne
jg
dec
dec
or
push
mov
cmps
mov
inc
stos
sbb
jle
out
dec
sbb
ret
out
fimul
repz
xor
aaa
or
push
inc
mov
movs
mov
stos
outs
adc
push
(bad)
sar
sbb
mov
pop
dec
push
pop
sbb
int
or
sub
xor
dec
cld
outs
movntq
out
arpl
outs
xchg
ins
int3
adc
in
arpl
inc
retf
je
jmp
nop
cmps
jbe
ss
ss
ss
pop
aaa
sub
scas
ret
add
and
icebp
xor
push
leave
sar
test
and
push
cmp
sub
push
ret
and
inc
std
aas
xchg
ficomp
mov
sti
sar
retf
mov
inc
lods
xor
mov
lea
std
adc
(bad)
cmp
mov
jge
not
cmp
(bad)
fidiv
adc
xor
adc
fmulp
push
stos
mov
loopne
jecxz
adc
repnz
sub
xor
xchg
jb
sub
add
bound
pop
(bad)
cmp
jle
jnp
rcr
aam
es
add
in
xor
aad
ja
js
sub
sub
xchg
cdq
mov
mov
sub
lock
out
test
dec
hlt
and
ds
fadd
cmp
push
mov
push
fst
into
fidiv
mov
ror
cmps
hlt
imul
jmp
pop
jmp
xor
and
xchg
mov
cmps
test
cdq
dec
outs
das
cmp
xor
inc
xor
in
pop
or
int3
xor
test
les
mov
pop
add
xor
bound
inc
inc
ins
popa
mov
mov
push
ds
les
xchg
adc
je
loope
cmps
mov
mov
repnz
(bad)
xor
mov
mov
mov
jmp
jne
lds
inc
add
sub
push
add
mov
popf
add
test
(bad)
inc
jmp
mov
cld
bound
pop
xchg
fsubp
xchg
bound
into
cmp
call
inc
and
add
mov
clflush
call
jbe
sbb
push
std
(bad)
sbb
int
mov
sahf
sub
mov
mov
popf
stos
lods
and
adc
mov
lock
pop
lods
add
shl
add
not
paddusw
stos
cs
int
or
pushf
jp
push
mov
pop
xor
stos
adc
xlat
scas
xor
jmp
mov
and
jno
nop
xchg
ss
mov
push
arpl
mov
xchg
mul
push
jg
xlat
jo
sbb
(bad)
pop
dec
and
push
leave
jno
lods
ja
mov
std
push
or
pusha
sbb
scas
adc
iret
rcl
es
mov
dec
(bad)
xor
push
xor
mov
mov
mov
dec
xor
and
bound
(bad)
fcom
call
dec
movs
into
cmps
jl
jecxz
xchg
inc
xchg
les
sub
or
lods
into
cdq
fwait
aas
fdivr
sbb
nop
cmps
cmps
ror
pusha
xchg
push
nop
lea
stos
jl
ins
jbe
stos
inc
and
rcr
in
mov
xchg
loopne
rol
add
sar
icebp
add
mov
gs
or
xchg
xchg
adc
xchg
pusha
out
scas
jns
std
lds
out
xor
jb
in
aad
test
daa
xchg
out
aad
bound
popf
and
jns
das
push
fwait
lock
cmp
dec
push
aad
jae
add
test
in
xchg
mul
aam
aad
jae
cs
out
cmp
xchg
sub
or
push
adc
cli
add
jae
mov
imul
pop
shr
or
cmp
sub
sbb
push
xchg
je
sub
aam
dec
in
es
push
shr
jb
cmc
adc
icebp
pop
or
dec
pop
push
mov
mov
aaa
retf
mov
mov
cmp
je
dec
sub
cmp
clc
aam
mov
pop
or
push
imul
in
xlat
adc
pop
clc
jmp
test
fidivr
inc
dec
xchg
push
fbld
(bad)
xchg
or
sbb
inc
int
sbb
jae
xchg
aaa
sub
outs
inc
movs
std
mov
sahf
add
pop
retw
push
daa
iret
add
loop
aaa
mov
ss
and
dec
cs
jp
pop
xor
jae
cmp
sbb
arpl
and
add
ds
xor
push
sbb
xor
sub
push
mov
xchg
icebp
(bad)
or
dec
mov
or
scas
icebp
mov
jmp
loop
addr16
bound
and
adc
test
jle
out
jae
and
xchg
(bad)
xor
jecxz
mov
(bad)
mov
push
mov
cmps
or
lods
mov
mov
cs
ret
mov
inc
pusha
jmp
loop
jmp
ss
or
sbb
and
scas
cli
pop
scas
stos
push
in
sub
loopne
push
jmp
gs
push
ds
aas
aas
lods
dec
adc
je
inc
aaa
sub
adc
dec
xchg
and
sbb
lock
stc
maskmovq
sbb
sub
mov
scas
or
sar
inc
push
cdq
out
bound
and
stc
push
js
and
nop
adc
and
aaa
add
mov
mov
sub
cmp
or
cwde
fstp
ins
adc
shl
shr
ins
mov
push
mov
xchg
jne
inc
test
xchg
(bad)
popf
popf
adc
std
adc
sti
stos
(bad)
sbb
cwde
xlat
(bad)
js
pop
jae
and
test
sub
push
dec
adc
loope
out
mov
shr
hlt
(bad)
leave
mov
or
fs
mov
sub
dec
sar
shl
retf
push
xor
xchg
std
rcr
pop
push
retf
hlt
(bad)
std
sub
leave
mov
fst
fst
inc
lea
call
stos
cdq
mov
xor
adc
int
pop
out
jmp
ins
adc
adc
iret
pushf
(bad)
outs
int3
int3
or
add
vmovq
les
and
bound
jne
stos
shr
or
pop
xor
sbb
jmp
xchg
lds
test
mov
pop
test
push
aad
test
and
pop
or
or
inc
imul
and
(bad)
adc
hlt
dec
aas
or
adc
pop
sbb
in
xchg
retf
sbb
aad
pop
sub
jmp
in
fmulp
ds
movs
xchg
mov
jae
movs
sub
pop
out
scas
cld
xchg
out
adc
int3
jb
fild
retf
lods
test
cmp
mov
mul
and
pop
in
sbb
jmp
sub
add
jecxz
mov
rol
jmp
xchg
cmp
jecxz
xor
mov
stc
pop
fwait
push
jne
cmps
sub
aas
clc
mov
adc
cmc
popf
pop
mov
cli
xchg
test
cmps
dec
scas
aaa
cmp
push
(bad)
or
xchg
pusha
xor
int3
int
jae
pushf
jp
pop
xchg
into
inc
inc
mov
mov
idiv
stc
xlat
adc
loop
xor
inc
es
xor
(bad)
cmp
add
nop
xchg
lahf
hlt
xchg
cmps
cli
xchg
and
cmp
movs
jne
xchg
mov
mov
ins
in
xor
push
daa
movs
xor
and
repz
ret
dec
dec
cwde
(bad)
cmp
jns
leave
(bad)
aas
pop
fistp
inc
mov
pop
loopne
jle
aad
mov
(bad)
fist
mov
mov
dec
mov
mov
sbb
js
out
ja
push
xor
mov
sbb
popf
imul
imul
ret
and
popa
mov
ss
or
push
lods
rcr
mov
inc
cdq
cwde
shl
imul
mov
inc
dec
pop
out
mov
ja
lods
xor
push
jmp
push
sti
out
add
mov
jmp
xchg
leave
pop
cmp
add
lock
mov
retf
into
or
inc
xchg
push
cmp
loopne
dec
xor
mov
cmp
movs
push
mov
movs
in
lahf
scas
test
push
sbb
jp
jp
(bad)
in
sub
test
push
and
mov
mov
outs
(bad)
fldenv
mov
mov
cwde
and
cmp
add
and
loope
shr
icebp
add
fimul
mov
lods
cs
push
cld
out
jl
out
sbb
inc
cmp
in
sub
push
jns
push
ds
ins
daa
cmp
push
fisttp
sti
hlt
mov
fsub
retf
dec
(bad)
popf
gs
xchg
not
and
inc
sub
popa
jb
std
inc
(bad)
ins
ins
dec
pop
push
rol
sar
in
imul
mov
sar
and
iret
stc
or
mov
in
lods
xchg
hlt
leave
out
test
sub
imul
movs
jne
lea
adc
enter
pop
mov
jne
movs
pop
sub
pop
imul
add
or
ins
mov
nop
push
mov
fist
lea
ins
and
ins
pop
dec
adc
pop
fcmovb
mov
push
sub
arpl
jo
(bad)
mov
aad
or
fdivr
in
adc
xor
cli
repz
and
sub
mov
pusha
into
xchg
mov
call
lea
xchg
movs
push
xchg
jmp
mov
outs
ret
sbb
data16
sub
int
sbb
mov
sub
js
pushf
sub
enter
and
mov
xor
jno
neg
gs
and
sub
push
cmps
mov
cs
pop
movs
push
out
mov
inc
aam
loopne
push
std
fldenv
clc
fist
cli
dec
xor
xor
fbld
sbb
ss
push
in
aam
mov
dec
or
icebp
and
ja
xor
inc
shl
mov
and
dec
inc
mov
sbb
add
inc
mov
loope
jnp
(bad)
push
add
out
jno
mov
movs
repz
xchg
in
sbb
or
push
push
adc
pop
sub
add
jl
aam
push
xchg
test
dec
pop
inc
mov
in
mov
(bad)
in
mov
cld
(bad)
mov
mov
xor
fmul
dec
dec
cmp
mov
xchg
loop
sbb
pop
out
inc
mov
adc
pop
pop
daa
stos
(bad)
enter
jmp
sub
imul
or
call
add
jecxz
mov
and
loop
mov
lods
fwait
or
movs
fild
mov
dec
inc
push
mov
lds
xor
(bad)
out
jbe
push
ins
add
out
(bad)
mov
dec
xor
fild
and
jae
aad
adc
stos
jnp
mov
ja
je
stos
mov
scas
cmc
ins
shl
fs
mov
ds
and
rcl
sbb
dec
mov
cmp
or
mul
(bad)
xor
add
pop
test
jmp
dec
retf
xchg
test
jp
int3
pusha
cmps
and
pop
sbb
loope
mov
and
ss
clc
inc
push
mov
or
cmp
mov
sub
cmc
fs
xchg
add
pop
icebp
sub
lea
repnz
jmp
sar
or
cld
repz
loop
pop
push
xchg
mov
or
mov
push
mov
(bad)
lds
(bad)
in
rcl
(bad)
cld
int3
add
lock
ror
pushf
xchg
mov
mov
mov
push
jbe
addr16
adc
in
sti
jecxz
mov
xor
add
xchg
adc
cli
sbb
fnsave
jl
add
aas
adc
xchg
or
mov
adc
(bad)
add
loope
push
pushf
xlat
or
lods
jns
adc
push
xor
mov
xchg
mov
das
ins
sbb
repz
add
inc
pop
into
mov
push
fisub
mov
outs
les
inc
or
or
mov
outs
push
mov
rol
mov
dec
dec
in
fnsetpm(287
enter
test
daa
mov
ficom
push
pop
xor
mov
test
dec
mov
(bad)
sbb
xchg
sbb
arpl
cmc
lods
cs
pop
clc
mov
inc
lods
sti
sahf
jg
pop
bnd
popf
and
pop
in
pop
sub
mov
adc
out
mov
mov
shl
sub
mov
jns
retf
push
test
sahf
(bad)
and
push
pop
sar
adc
inc
pop
pushf
xchg
mov
jne
inc
adc
cmp
jns
hlt
repnz
data16
test
rcr
jb
or
out
push
cmp
jmp
rcl
popf
int
inc
adc
ds
xor
(bad)
xchg
jo
xchg
stc
xor
pop
xchg
pop
adc
mov
cmp
push
std
mov
call
pusha
dec
(bad)
aam
scas
daa
std
xchg
xchg
mov
test
xor
sbb
pop
test
lahf
sbb
cli
pop
lods
test
mov
imul
jle
pop
fstp
xor
stos
push
sbb
inc
cli
retf
sub
adc
(bad)
clc
shr
jge
test
lock
(bad)
mov
shr
xchg
hlt
fadd
add
icebp
mov
mov
mov
and
shr
js
and
xlat
rcl
add
je
jbe
and
lea
test
pop
push
lods
das
inc
and
push
jns
mov
mov
push
pop
hlt
add
stos
out
repz
cld
add
dec
cmp
jnp
xor
cdq
xor
sbb
pop
add
mov
ret
loop
jl
mov
int3
cmp
dec
pop
ret
or
inc
mov
lahf
or
cwde
hlt
adc
lock
jno
shl
inc
pusha
je
dec
sar
xchg
cmp
cmp
mov
sbb
(bad)
jns
jge
fwait
push
mov
scas
and
ror
mov
pushf
push
fadd
or
cmp
loopne
or
sbb
jno
dec
bound
lock
bound
add
imul
(bad)
mov
add
nop
leave
ja
das
in
inc
mov
xchg
pushf
rcl
dec
pop
bound
loop
sub
xlat
daa
in
jbe
sub
adc
or
sbb
data16
fsubr
add
div
repz
call
jae
add
or
or
ins
jmp
aam
bound
movlps
lock
outs
dec
or
cs
test
clc
or
imul
scas
cmp
fcomp
pushf
pop
mov
cld
hlt
jmp
jg
daa
dec
pop
add
cmp
addr16
cmp
sub
mov
cld
xchg
xchg
clc
test
rcl
and
mov
cmps
push
movs
lods
inc
es
sub
js
mov
clc
mov
lods
fiadd
or
movs
shl
pop
mov
cli
ret
cmps
mov
pop
jg
dec
repz
data16
inc
fdivr
cmps
inc
xchg
and
addr16
out
ins
je
cmp
stos
jecxz
js
and
push
hlt
xchg
xchg
mov
int
sahf
test
in
and
lods
add
cmc
push
sbb
fbld
pop
mov
xchg
jnp
retf
leave
fcomp
inc
fs
xor
sub
mov
(bad)
cmp
fild
js
call
xchg
call
mov
shl
jae
cwde
pop
xor
dec
shl
or
push
ins
inc
mov
mov
or
retf
inc
(bad)
sbb
xor
add
cwde
pushf
sub
pop
popa
push
pop
and
lock
mov
add
cld
cmp
mov
into
mov
rcl
js
and
dec
or
in
mov
daa
in
sahf
adc
cmps
jle
push
sbb
mov
mov
inc
sub
mov
scas
pop
std
bnd
nop
xor
ss
es
sub
mov
sbb
jb
aas
imul
dec
adc
stos
mov
js
iret
mov
stos
jmp
out
sbb
sub
xchg
jno
cmp
gs
pop
nop
fisttp
or
xchg
jge
xor
mul
mov
and
fwait
push
mov
adc
pop
stc
cwde
ins
sub
mov
int3
mov
psadbw
xchg
loop
adc
aam
or
jl
test
mov
or
cwde
int
sahf
test
fs
push
daa
inc
and
mov
pop
fwait
dec
xlat
jmp
ja
mov
jo
xchg
popf
(bad)
mov
js
add
jns
sbb
lods
ins
loopne
sub
popa
mov
jmp
mov
inc
adc
xchg
mov
mov
or
ss
test
lock
sahf
mov
push
iret
push
ret
cwde
sbb
add
pop
mov
test
loope
addr16
pusha
(bad)
in
jmp
rcr
sub
xchg
jecxz
fidivr
adc
into
cmp
add
fadd
pop
mul
ret
dec
and
test
not
mov
dec
jns
cmps
dec
sbb
jne
cmp
add
or
dec
dec
jp
pop
cld
push
inc
clc
stos
aam
ficomp
ja
adc
adc
xchg
xlat
jnp
pop
push
pop
pop
shl
jl
les
imul
pop
arpl
and
icebp
sbb
mov
outs
xchg
xchg
int
adc
retf
push
mov
push
retf
aas
icebp
pop
push
sub
pushf
inc
retf
sbb
cmp
xchg
mov
mov
mov
pop
rcr
stos
std
push
test
sahf
test
sub
add
jp
or
jmp
ffree
push
retw
mov
fwait
ds
adc
xchg
jb
hlt
fimul
cld
add
cmp
aad
push
mov
pop
xchg
xchg
jecxz
pop
jbe
pop
js
ss
shl
or
pop
dec
cmps
sbb
jg
xchg
sub
cs
adc
jmp
sub
scas
mov
sbb
jecxz
sub
imul
sub
in
add
out
xchg
sahf
mov
cmp
das
fdiv
sbb
shl
mov
leavew
lods
and
jbe
pop
fs
and
fwait
sbb
movs
pusha
push
icebp
xchg
dec
ins
pusha
cdq
rcr
and
sub
aaa
pop
(bad)
cmp
inc
pop
test
cmps
jg
xchg
aaa
test
imul
cdq
xchg
add
imul
fild
in
push
hlt
push
cmp
shl
inc
sahf
dec
stos
(bad)
cdq
call
push
inc
sub
aad
jnp
xchg
xchg
mov
mov
sar
push
xchg
aas
push
stos
mov
sbb
xchg
(bad)
cmps
push
mov
ret
fs
push
lahf
les
inc
push
xor
stc
mov
pop
and
sbb
dec
push
out
fbstp
mov
stos
push
out
fs
xchg
in
jo
cmp
pop
test
add
lods
in
retf
jle
jbe
mov
push
into
or
inc
les
jnp
inc
jle
inc
mov
mov
mov
and
dec
scas
cmp
adc
das
jae
or
fist
push
lahf
cmps
adc
(bad)
inc
lods
scas
iret
inc
sub
xor
mov
hlt
data16
dec
std
mov
sbb
addr16
mov
repnz
pop
or
mov
int
pusha
jmp
test
cwde
jl
loopne
push
xor
cmp
imul
fwait
cmps
sbb
mov
push
retf
dec
stc
cli
pop
pop
jecxz
sub
cs
int3
mov
mov
push
fstp
nop
outs
sbb
ins
xchg
adc
inc
mov
jg
xchg
sbb
bound
(bad)
fs
sub
sbb
push
sbb
mov
sub
inc
and
movzx
fstp
pop
inc
or
xchg
inc
rdpmc
inc
lods
cmc
xor
enter
mov
lock
jp
inc
fsub
pop
fdivr
fmul
and
call
mov
xchg
inc
outs
rcl
mov
adc
scas
xchg
add
aam
push
inc
inc
push
mov
fcomi
jmp
mov
lods
dec
cmps
push
je
add
movs
fwait
dec
mov
adc
push
test
push
outs
stos
pop
pop
call
mov
(bad)
icebp
scas
outs
arpl
cmp
stc
rcr
inc
nop
fs
mov
sbb
push
xor
push
adc
xlat
xor
sub
inc
das
aas
sahf
pop
jcxz
not
loope
mov
stos
mov
pop
inc
jns
lods
test
ja
mov
sub
cmp
cdq
ret
push
sub
scas
adc
cmp
dec
cmps
js
dec
int3
mov
jne
test
in
sbb
sub
nop
ror
adc
aad
xlat
fdiv
ins
or
scas
or
int
les
xchg
sbb
fs
test
mov
and
push
rol
mov
fild
mov
ds
cmps
pop
cmp
inc
xlat
outs
std
inc
sub
or
hlt
arpl
scas
pop
sti
sub
test
stc
add
sbb
mov
dec
aas
nop
or
cmp
push
enter
push
lea
push
mov
sbb
cmp
and
or
loope
and
icebp
add
mov
icebp
sbb
ret
jmp
sbb
fcom
mov
cli
scas
mov
mov
test
mov
dec
push
ror
add
pop
xor
(bad)
adc
test
sbb
sbb
or
test
(bad)
dec
and
iret
adc
inc
mov
test
mov
mov
aaa
sti
rcr
mul
into
aam
sbb
lock
(bad)
data16
inc
loop
aad
popa
mov
pop
int
cld
test
pop
(bad)
adc
xchg
retf
ret
xchg
sub
and
ds
sahf
lea
cmp
fimul
mov
hlt
mov
mov
outs
retf
xor
call
cmps
loop
retf
cmp
pop
(bad)
scas
adc
sbb
(bad)
or
xchg
inc
shr
icebp
sar
cmp
or
dec
ffree
test
sub
dec
sub
fiadd
sub
aas
sbb
mov
or
pop
mov
gs
in
mov
push
fadd
scas
push
mov
repz
add
jp
sub
mov
xlat
ret
dec
sbb
jg
repz
ret
in
cli
xchg
sbb
adc
mov
add
mov
xor
xchg
or
and
mov
inc
jns
pop
fnstcw
(bad)
iret
xchg
dec
jl
aad
cmp
pop
ret
push
icebp
mov
repz
jmp
push
adc
adc
sar
lods
inc
xor
xor
xchg
pushf
jnp
jg
scas
fisubr
lods
dec
mov
fcom
push
pop
xchg
dec
adc
sub
jge
nop
mov
jmp
cmp
outs
shl
adc
es
push
jnp
movs
jbe
js
mov
push
not
mov
push
mov
das
mov
pop
cmc
inc
retf
mov
mov
mov
and
jne
lea
getsec
sub
fadd
xor
in
xchg
sar
cli
imul
out
les
pop
pop
jne
cmps
adc
jle
repnz
lods
push
sti
inc
stos
or
and
mov
ss
cdq
inc
jno
pop
aas
into
push
ret
xor
mov
or
push
into
dec
dec
popa
in
cmps
mov
adc
popf
mov
mov
iret
aaa
xlat
xchg
push
mov
fidivr
cmc
adc
pop
test
(bad)
call
data16
and
stos
inc
inc
icebp
add
arpl
inc
mov
cld
cmp
inc
and
cmp
test
and
test
or
sbb
and
ins
out
mov
adc
and
stc
pushf
ror
inc
jo
jne
jae
cmc
fmul
xor
pop
jl
sbb
clc
pop
add
movs
cs
lods
mov
add
pop
arpl
mov
pop
dec
jl
push
jle
cmp
dec
icebp
data16
lods
adc
mov
add
fwait
nop
mov
fdivr
jae
sub
inc
sbb
adc
stc
(bad)
stc
mov
add
push
int
sti
add
jg
jne
xor
aam
cld
in
sub
jge
push
ret
aas
mov
mov
arpl
xor
rol
add
ffree
jb
xor
sbb
pop
cmps
aas
addr16
loope
mov
sbb
jp
inc
xor
push
ja
cli
bound
addr16
add
inc
ror
fwait
aad
gs
xlat
shr
xchg
adc
sub
mov
fmul
push
sbb
popf
mov
cmp
push
mov
gs
sub
mov
ins
sbb
in
add
cld
sub
cmp
jg
inc
out
stos
sbb
addr16
fld
jmp
adc
stos
test
add
dec
jb
or
outs
mov
push
cdq
sub
add
iret
sahf
mov
xchg
jmp
jp
ins
das
jp
ror
mov
int
mov
mov
jbe
jp
out
leave
jp
mov
xor
or
jae
inc
rcr
mov
or
jo
out
adc
sub
loopne
inc
cmps
js
out
push
and
js
std
mov
pop
ret
ins
xchg
jg
push
fistp
push
out
repz
and
(bad)
cmps
xor
repnz
jle
lahf
xor
loop
inc
add
xchg
or
dec
or
mov
sub
mov
jl
repz
push
clc
ffreep
iret
mov
cmp
ins
cdq
push
out
dec
jno
sub
jne
xor
adc
xor
in
cmps
push
xor
jbe
sar
push
in
pusha
cmp
hlt
or
mov
mov
outs
jmp
xchg
mov
pop
push
in
aaa
inc
mov
xlat
cdq
shr
pop
and
rcl
test
adc
cmc
add
jae
test
mov
ins
mov
test
neg
ss
pop
pop
mov
addr16
adc
xchg
cmp
popa
outs
pop
adc
dec
mov
aam
adc
std
jmp
stos
loopne
lods
fsubr
dec
pop
nop
jecxz
aaa
dec
stos
add
and
pop
cli
jl
ss
(bad)
das
jecxz
(bad)
les
mov
(bad)
outs
iret
pusha
ds
and
(bad)
call
(bad)
cmp
xor
gs
add
fsubr
sub
rol
int
int3
pushf
cs
dec
cmp
mov
test
movs
adc
inc
fidivr
xchg
outs
js
cdq
in
loope
dec
pop
sub
popf
ins
sbb
retf
(bad)
in
sbb
in
push
cdq
push
loopne
fidiv
push
dec
cmc
xchg
inc
cmp
popf
arpl
sbb
stc
inc
cmp
cmp
lods
outs
add
dec
lods
cdq
enter
and
mov
xlat
ds
retf
daa
xchg
push
or
pop
jge
ret
adc
cmp
sbb
bound
test
fimul
popa
(bad)
xchg
in
xchg
jne
inc
sbb
push
inc
nop
imul
jge
pop
inc
pop
ret
cli
pop
sti
sbb
adc
neg
jb
or
cld
mov
retf
icebp
bnd
xor
imul
aas
mov
mov
mov
nop
dec
(bad)
(bad)
mov
fadd
imul
adc
push
dec
and
fisub
jb
out
pop
fdivr
dec
rcr
and
loope
xchg
or
mov
mov
ja
std
addr16
mov
outs
or
data16
xchg
call
cmc
xor
sti
scas
cli
div
loop
mov
(bad)
js
js
push
jp
sub
je
inc
xchg
movs
cmp
xchg
dec
sbb
lea
push
cmc
sub
adc
arpl
jbe
xchg
sub
sbb
xchg
push
test
call
jmp
mov
retf
imul
cmp
loope
xchg
fstp
pushf
adc
imul
sahf
mov
fmulp
or
ret
fcomp
cwde
cmp
clc
arpl
ss
push
out
push
pop
aam
fcomp
mov
les
daa
dec
push
sub
pusha
ret
in
sbb
fnstsw
jns
ds
mov
je
iret
not
or
ret
test
movs
mov
mov
ror
cld
add
lahf
ins
pop
dec
(bad)
dec
repnz
rol
bswap
mov
adc
push
mov
js
cmp
push
das
cmp
or
push
out
pop
pop
jb
icebp
cdq
cmp
aam
ins
pop
and
pop
push
rcr
imul
out
sub
ret
mov
hlt
cmovns
dec
adc
retf
mov
rcr
mov
in
pop
in
dec
xor
mov
aam
cmp
xor
xlat
cwde
imul
(bad)
neg
cmp
ins
daa
hlt
sub
mov
aam
push
ss
ja
sub
add
inc
cmps
or
enter
lods
push
push
adc
test
add
retf
ja
shl
out
lea
sbb
ret
jp
and
fmul
adc
in
mul
jecxz
shl
and
out
fwait
cmp
pop
push
fs
and
inc
dec
mov
dec
cmp
cdq
mov
xchg
or
xor
sahf
dec
xor
xor
sub
xor
push
and
out
xchg
out
jl
fidivr
jbe
lds
push
inc
(bad)
mov
retf
or
in
jne
ror
jecxz
fimul
(bad)
daa
hlt
in
xchg
mul
xchg
inc
lock
pop
and
ss
mov
cmp
mul
add
jne
mov
push
xor
sbb
pop
in
push
int
clc
push
out
push
xchg
mov
lock
neg
outs
mov
call
(bad)
std
gs
cmp
ja
jle
adc
iret
test
mov
push
cmp
dec
bound
xor
ja
jbe
ror
ret
into
push
mov
ret
movs
stc
test
pop
adc
dec
mov
and
aas
bound
dec
cmp
and
enter
hlt
repz
fcom
sbb
fisttp
xchg
push
mov
or
mov
in
(bad)
ja
push
jae
sahf
fsubr
cs
push
arpl
rcl
mov
jne
inc
push
cdq
aas
loop
jg
mov
mov
aad
xchg
fst
stc
loopne
iret
or
mov
ja
lods
(bad)
out
lods
jmp
js
outs
or
aam
popa
inc
repz
jmp
mov
mov
or
mov
movs
sbb
sub
and
mov
mov
adc
jae
imul
mov
push
int
jge
and
fcmovbe
jns
mov
sbb
dec
inc
and
dec
pop
xchg
xchg
dec
fisubr
sti
lock
aam
or
xchg
xor
sub
cmc
mov
lds
sbb
push
xchg
loopne
and
adc
mov
jb
push
add
repnz
push
and
push
mov
sahf
xchg
mov
sbb
or
push
pop
sub
adc
ja
xor
pop
sahf
xchg
mov
add
adc
jp
mov
call
or
mov
mov
aad
push
mov
add
cmps
push
xor
or
int
mov
pop
retf
js
push
pop
test
or
(bad)
or
or
push
cs
test
sub
mov
dec
or
jnp
inc
xchg
pop
mov
int3
scas
loopne
(bad)
pop
ret
push
push
test
mov
icebp
push
das
movs
mov
adc
pop
or
xchg
mov
bound
in
and
sub
xchg
pop
mov
mov
ja
pcmpgtd
test
shr
jl
mov
aaa
stos
int
outs
xor
into
(bad)
jp
inc
add
adc
movs
cmp
mov
sbb
outs
shl
push
out
scas
pop
mov
or
adc
jnp
(bad)
fsubr
jecxz
and
cdq
inc
sbb
retf
lods
out
jp
clc
mov
call
sbb
fwait
cmp
mov
xor
test
mov
popa
ja
std
jns
dec
inc
xor
scas
sbb
xchg
retf
stos
mov
jmp
xchg
dec
push
sbb
or
or
int
leave
movs
iret
lods
iret
nop
xchg
out
mov
pop
in
adc
pop
adc
xor
dec
xchg
pop
adc
cmps
mov
shr
iret
xchg
nop
(bad)
(bad)
hlt
sub
cli
xchg
and
fild
fcmovnu
cli
xchg
ins
fadd
enter
ja
outs
in
sahf
cmp
xchg
jge
test
in
stos
mov
adc
xchg
(bad)
and
in
ds
int
push
arpl
mov
cmps
jne
jb
stos
cmp
cmp
in
fst
pop
daa
or
das
cdq
fidivr
ss
cmps
cmp
enter
into
sti
jmp
repz
dec
pop
xor
in
jmp
inc
lock
or
dec
xlat
mov
test
dec
xchg
(bad)
or
mov
and
sbb
fsubp
inc
out
mov
mov
sub
push
pop
mov
sbb
(bad)
sti
or
and
scas
mov
xchg
push
jae
sbb
inc
cs
or
lods
push
out
mov
pop
push
and
scas
leave
lea
sahf
jno
icebp
test
es
rcr
sbb
mov
call
inc
adc
mov
lea
loopne
in
jp
jmp
test
mov
repnz
shr
inc
sub
scas
cmps
add
div
rep
mov
xor
inc
into
test
xchg
mov
popf
sbb
cmp
inc
lods
or
in
rol
xrelease
pop
xor
sub
push
daa
or
pop
es
push
or
(bad)
inc
sub
aas
mov
fst
pop
inc
and
frstor
xchg
cmp
push
int3
mov
mov
dec
test
jno
ja
xchg
push
and
ds
adc
and
leave
jmp
adc
push
push
scas
push
xor
dec
add
jae
push
or
daa
jmp
ret
(bad)
lods
daa
das
mov
inc
and
adc
mov
inc
adc
xchg
arpl
xor
cdq
dec
adc
sbb
cmp
popa
mov
mov
pop
aad
cs
push
mov
jp
push
inc
and
jecxz
sbb
inc
in
fistp
retf
push
fadd
clc
ss
pop
xchg
nop
mov
test
jns
fmul
dec
aam
jo
sbb
xor
sub
test
cmp
adc
push
add
in
cdq
rcl
jecxz
pop
jb
sbb
inc
xor
mov
dec
push
sbb
(bad)
out
pop
mov
stos
pop
jle
inc
or
fdivr
xor
add
mov
adc
pop
ss
in
daa
ja
jno
pop
retf
(bad)
adc
(bad)
cmp
mov
mov
xor
les
neg
in
(bad)
dec
mov
push
int3
(bad)
lock
je
cmps
rcr
push
xchg
xchg
sbb
push
lea
mov
add
repnz
cmp
imul
inc
nop
mov
xchg
int
mov
or
cmp
cmp
mov
mov
ficomp
mov
stos
mov
pop
dec
out
mov
dec
sub
xchg
adc
dec
mov
int
js
shr
movs
dec
sahf
sbb
push
(bad)
fiadd
push
add
outs
scas
imul
jno
dec
mov
xchg
mov
cs
dec
pushf
add
cdq
in
xchg
imul
(bad)
(bad)
mov
cmp
jl
jne
sub
jp
pop
sub
pusha
stos
adc
mov
add
jg
inc
mov
push
loope
pop
inc
pop
in
fwait
lds
cwde
cmp
lods
mov
das
scas
or
xchg
adc
mov
jmp
repz
(bad)
add
sub
sub
out
xor
or
jmp
cmc
in
mov
fdiv
cmps
fxch
aad
inc
dec
jns
push
in
sub
jg
dec
push
xor
ins
xchg
xor
mov
or
rcl
pop
xchg
call
xlat
pop
and
lods
mov
add
sbb
je
and
popa
add
js
mov
sub
pushf
lds
scas
int
push
int
(bad)
loop
bound
cmc
dec
in
adc
xor
sub
jne
jmp
(bad)
push
sbb
sar
mov
ds
inc
cmp
dec
ja
int
cwde
(bad)
movs
sub
sbb
outs
mov
enter
fstp
mov
idiv
dec
pop
push
fcomip
cmp
arpl
cwde
cmp
inc
cmp
call
rcr
or
mov
push
inc
enter
mov
loop
inc
sub
or
(bad)
adc
das
mov
fcom
(bad)
mov
mov
xchg
leave
scas
xchg
jmp
call
push
mov
push
mov
(bad)
sbb
clc
adc
dec
or
lock
cmp
fwait
mov
sahf
sbb
sbb
int3
imul
inc
push
mov
retf
sub
lods
imul
jle
cmp
or
mov
call
mov
xor
xor
mov
scas
push
(bad)
push
dec
das
aam
sar
ret
push
iret
mov
pop
retf
sbb
ins
inc
cli
push
mov
repnz
and
push
ror
jmp
mov
xchg
xchg
adc
mov
int3
jp
(bad)
pop
lock
nop
and
ret
jo
jne
(bad)
je
shl
sub
jb
gs
jno
ror
jbe
jl
xlat
movs
push
inc
xchg
inc
xchg
adc
push
cmp
std
js
inc
dec
leave
inc
scas
cli
mov
ja
xchg
mov
call
inc
fsub
or
xchg
out
mov
inc
pop
leave
hlt
div
jbe
push
inc
push
mov
cmps
fcomp
dec
sub
int
ret
test
jl
xor
jne
outs
jnp
jecxz
cmp
clc
test
scas
data16
sahf
mov
fnsave
dec
mov
mov
popa
arpl
xor
dec
ror
add
fmul
(bad)
repz
pop
jns
add
in
cs
fistp
xchg
pcmpeqb
jns
xchg
cli
aam
cwde
cmc
xor
pop
cmc
sbb
jmp
mov
dec
jno
lds
pop
stc
sbb
jp
mov
or
hlt
stc
mov
outs
push
add
dec
sbb
jae
dec
sub
fstp
idiv
lods
add
lds
in
cli
js
adc
dec
xchg
outs
push
mov
popf
push
call
shl
arpl
in
jge
leave
imul
movs
test
es
shl
and
xchg
mul
retf
retf
(bad)
in
gs
jle
xchg
mov
retf
lods
(bad)
dec
mov
xchg
xchg
push
cmp
(bad)
sub
and
mov
arpl
das
jmp
sbb
mov
fcmovnb
cdq
lea
ret
adc
pop
or
dec
xor
pop
mov
pusha
or
ret
jg
jmp
addr16
scas
sbb
pop
pusha
xchg
xor
push
sar
and
add
xchg
xor
outs
xor
push
mov
mov
(bad)
cmp
outs
sahf
mov
out
inc
jae
or
fdivr
jmp
pop
adc
xchg
shr
cli
inc
jmp
iret
cbw
sbb
or
xchg
push
add
pop
lods
rcr
and
and
mov
add
jg
cli
sub
mov
out
outs
shl
jne
sbb
and
addr16
and
dec
fidivr
jmp
xor
mov
cmps
jmp
fsubr
es
imul
mov
loop
loope
lods
popa
div
jmp
cmp
xor
jmp
loopne
or
sahf
adc
movs
sub
cmp
jle
loopne
cmps
pop
(bad)
jge
jecxz
lea
sub
jl
popf
mov
sub
sbb
inc
mov
jne
push
jno
mov
inc
inc
sbb
out
or
cmps
rcr
ss
cmc
jmp
lods
mov
mov
and
push
das
adc
mov
and
aam
dec
dec
xor
cmps
ins
push
fadd
dec
sbb
jp
fistp
(bad)
std
rcl
mov
inc
push
push
mov
push
fadd
ins
xchg
into
or
xchg
pop
sub
iret
xor
pop
icebp
imul
into
shr
or
ds
call
dec
mov
dec
clc
mov
int
in
cdq
adc
xchg
pop
jb
loope
cmp
xchg
mov
repnz
or
outs
or
sub
mov
cmp
popa
xchg
mov
dec
mov
or
pop
sub
loop
retf
push
dec
ins
nop
mov
dec
jmp
test
or
daa
addr16
mov
fwait
xchg
jb
sub
push
cmp
ja
sub
div
mov
stc
sbb
mul
js
mov
jb
test
fidiv
call
lock
fwait
jne
fst
arpl
out
jge
(bad)
(bad)
int
xchg
xor
dec
jmp
div
dec
adc
das
dec
into
test
pop
(bad)
jge
repz
(bad)
ds
test
cmps
jmp
add
setp
or
cdq
mov
lahf
sbb
adc
or
jmp
mov
test
xchg
mov
fnstsw
add
int3
dec
dec
sub
es
pop
das
loopne
cmp
gs
mov
xor
mov
test
xor
mov
fiadd
das
fwait
(bad)
pop
fwait
jbe
cmp
mov
mov
rcl
push
sbb
test
cwde
adc
mov
inc
outs
sbb
mov
je
(bad)
inc
ins
jae
cmps
cmp
(bad)
retf
ror
dec
jno
fild
pop
push
and
mov
stc
outs
repnz
and
mov
ss
pcmpgtw
nop
sub
add
xor
xor
(bad)
pop
adc
idiv
div
sbb
es
jge
pop
or
pop
imul
repz
cmp
dec
jecxz
packuswb
mov
outs
rcr
sub
add
sub
retf
inc
push
push
scas
hlt
loop
aaa
cdq
mul
pushf
dec
std
mov
call
ret
cmp
mov
repnz
xchg
cmps
pop
fdiv
ins
adc
outs
ret
repnz
xor
pop
nop
ins
mov
adc
jno
aaa
adc
fisttp
fcom
rcl
aas
cdq
jns
popa
xor
push
cmp
in
js
pushf
not
xchg
xor
push
inc
push
iret
les
xor
mov
push
jnp
adc
outs
pop
xchg
pop
dec
movs
enter
mov
inc
dec
mov
es
sbb
mov
call
add
inc
push
inc
out
sbb
dec
mov
mov
jo
xchg
(bad)
out
stos
(bad)
dec
inc
sbb
xchg
and
sub
mov
adc
push
fidiv
cmp
pop
and
pop
push
dec
mov
mov
or
jo
xor
popa
xchg
popa
jmp
test
cs
iret
push
sub
mov
push
lds
idiv
rcr
call
(bad)
loope
or
lds
xor
rol
jnp
inc
retf
and
adc
rcl
add
fsub
fs
test
loope
sub
sub
imul
push
adc
sbb
cli
xor
sub
pop
pop
clc
pop
mov
mov
push
xchg
js
mov
mov
push
fild
add
mov
adc
(bad)
test
or
mov
imul
xchg
mov
clc
(bad)
gs
pop
cs
sub
sub
and
cmp
sbb
mov
push
das
add
xchg
cdq
mov
icebp
xor
xchg
xor
adc
cli
gs
popf
pop
fs
sbb
mov
mov
scas
arpl
mov
or
bt
into
push
nop
sbb
or
sub
jb
test
into
xor
pcmpeqb
popa
loope
retf
add
(bad)
in
mov
frstor
push
bound
test
push
shl
hlt
cld
test
les
mov
ins
fs
sbb
shr
inc
jb
xchg
xor
cmp
or
push
sbb
jns
ss
push
adc
je
jae
jne
sub
pmulhuw
or
out
enter
add
cdq
push
push
add
sub
jb
jbe
xchg
and
in
ficom
jae
nop
rol
rol
xor
loop
les
pop
shl
mov
xchg
mov
adc
out
scas
adc
enter
adc
dec
cld
fcom
inc
movs
shl
add
popf
mov
add
aam
fld
je
es
dec
xor
or
mov
les
sbb
outs
ja
jns
jp
jno
add
inc
fldenv
ja
retf
pop
inc
retf
mov
loopne
inc
jb
dec
fcom
(bad)
push
popa
imul
pop
in
pop
fcomp
mov
jo
push
mov
push
lods
stos
mov
sbb
push
in
jmp
sbb
loop
sbb
xchg
repz
xchg
aaa
(bad)
or
jno
dec
les
das
push
icebp
mov
test
cmp
data16
pop
push
mov
xlat
mov
jmp
call
xor
mov
movs
(bad)
into
addr16
and
mov
arpl
sbb
mov
xchg
jle
sbb
jb
jmp
sub
clc
in
inc
cdq
sub
(bad)
pusha
push
mov
mov
movs
inc
fcom
sti
inc
adc
stos
inc
push
inc
push
test
pop
dec
cmp
cmp
and
mov
in
adc
jns
jp
pop
mov
in
jmp
sbb
sti
(bad)
mov
sar
xchg
jg
ja
test
fdivr
imul
ret
pop
xor
sbb
xchg
mov
inc
pushw
movs
sbb
iret
push
inc
test
popa
mov
popa
clc
test
mov
imul
fs
repnz
fsubr
or
lods
pop
push
sbb
in
dec
mov
cmps
push
in
jmp
repz
xlat
push
rcl
out
int
lahf
mov
fxch
mov
fdivr
pop
mov
xor
push
sbb
ja
add
jae
gs
mov
xchg
adc
popa
inc
loopne
int3
lds
mov
mov
dec
and
and
mov
xlat
xchg
ffreep
ja
loopne
xchg
jp
xchg
mov
pushf
xor
jne
jle
movs
jge
movs
in
cmp
test
xchg
xlat
sbb
and
scas
test
sub
lds
imul
pop
xchg
sub
push
add
retf
or
js
mov
mov
adc
enter
sbb
mov
xchg
add
imul
cld
xor
mov
xchg
inc
rcr
mov
lock
and
mov
jae
or
inc
outs
lods
mov
mov
push
test
mov
addr16
jno
and
inc
inc
inc
xchg
fcomi
in
dec
out
xchg
add
fnstsw
not
push
loope
pop
shl
add
lds
pop
mov
adc
cli
mov
or
test
mov
sbb
push
dec
test
popa
inc
fwait
jg
dec
push
div
sysenter
inc
imul
sti
mov
out
aaa
mov
call
dec
mov
out
push
pop
dec
cmp
gs
es
ror
nop
jp
mov
add
xchg
fidivr
das
inc
ins
int
in
or
sti
push
or
fwait
or
jo
loop
dec
fbld
push
cmp
jae
inc
ret
sub
cmp
ins
call
into
mov
nop
cmp
in
pop
pop
sbb
dec
jnp
ret
jne
xor
pop
dec
push
scas
pop
or
outs
or
jne
dec
bound
(bad)
sub
pusha
imul
pushf
cmpxchg
push
cmp
mov
jg
pop
xchg
xor
dec
inc
mov
mov
mov
aad
outs
mov
jo
arpl
inc
xchg
jae
rol
movs
jne
lods
test
mov
mov
jb
fist
int3
int3
jmp
shl
cmp
(bad)
xchg
pop
fwait
mov
sbb
sub
clc
and
enter
aas
scas
fwait
cli
test
inc
int
cmp
sbb
push
cmp
call
sti
(bad)
push
xchg
mov
adc
sar
icebp
push
sub
xor
ja
dec
dec
outs
pop
push
cdq
aas
xchg
adc
push
lods
cmp
fld
inc
xabort
cmps
and
movs
hlt
movs
nop
fild
pop
sub
loope
mov
cmp
in
iret
mov
ret
add
xchg
and
test
shl
(bad)
mov
adc
cwde
enter
jp
mov
mov
fdivrp
loopne
push
or
outs
push
and
jae
xchg
loop
ds
or
inc
scas
dec
or
retf
xchg
mov
add
mov
xor
enter
and
push
loopne
loop
test
sbb
push
adc
cli
(bad)
aam
add
inc
fdivr
sub
hlt
and
adc
xchg
sti
lods
jmp
sub
push
or
sub
mov
je
mov
je
push
sbb
je
jg
jp
leave
popa
inc
mov
aaa
cmp
lea
pop
cmp
mov
xor
mov
aas
and
xchg
repz
or
in
sub
push
lods
loope
retf
sbb
push
mov
cmps
rol
mov
shr
jmp
ins
iret
stc
pop
stos
test
xchg
int3
movs
shl
mov
lods
movs
sti
jle
mov
mov
sbb
aad
adc
mov
ret
scas
ja
in
out
cmp
in
xor
xchg
mov
fwait
cmps
outs
add
xchg
adc
int
dec
fs
and
mov
pop
jl
mov
popf
ror
mov
rol
fidivr
dec
dec
ss
xchg
xchg
and
aad
bound
cs
out
xchg
adc
pusha
cmp
xchg
and
jl
hlt
add
push
arpl
mov
mov
pop
addr16
dec
or
push
push
push
fcomp
push
or
in
mov
daa
dec
mov
test
push
inc
stc
push
adc
push
call
inc
pop
push
xor
pop
jb
shr
ins
js
inc
push
push
mov
in
mov
pop
push
fdiv
push
pop
sub
cmp
jo
sbb
mov
rcl
cmc
js
adc
xor
inc
addr16
lds
mov
sub
(bad)
push
cmp
jb
inc
rcr
cmp
pop
in
mov
not
jecxz
lods
pop
add
push
xchg
lea
or
(bad)
dec
in
cmp
sbb
aam
outs
xchg
adc
push
sbb
clc
inc
xchg
xor
cmp
push
adc
mov
daa
mov
es
push
xchg
fdivr
pop
js
test
into
sbb
js
push
jne
ins
adc
cwde
xchg
add
mov
jne
leave
in
cmp
cs
dec
retf
gs
cdq
xor
dec
pushf
push
dec
ds
(bad)
in
inc
or
cmp
xor
jmp
adc
or
pop
add
jp
cmc
xchg
(bad)
cld
jb
inc
test
push
cmp
mov
pop
inc
inc
repz
stc
mov
push
cmc
sbb
(bad)
leave
fsub
and
(bad)
pop
jnp
adc
xor
aad
xor
jnp
sub
jl
mov
jno
clc
mov
sar
xchg
jbe
das
(bad)
pop
xor
adc
repz
add
jmp
std
lahf
das
addr16
pop
sub
pop
jecxz
xor
cwde
or
lods
jbe
retf
repz
das
out
pushf
aam
xor
(bad)
outs
push
sbb
test
dec
shr
(bad)
in
mov
fidivr
jns
cmps
test
or
lods
dec
jb
fucomip
xor
test
test
xchg
sbb
lock
leave
outs
jp
cmp
lea
je
ja
das
lea
sub
inc
in
xchg
pop
adc
mov
mov
jmp
add
daa
sub
and
inc
mov
push
jnp
(bad)
and
adc
cs
fnstcw
push
jne
bound
dec
pop
ja
add
dec
xchg
cmp
fwait
int3
loop
fisttp
pop
bound
ret
push
jne
lea
and
dec
add
sbb
push
scas
in
(bad)
unpcklps
xchg
dec
ss
(bad)
mov
xchg
ins
aad
or
sbb
mov
push
mov
movs
cmp
daa
and
retf
into
or
xchg
mov
lahf
cmc
into
adc
idiv
xor
fdivrp
lea
jnp
sub
ja
xchg
cmp
arpl
adc
daa
in
and
in
mov
in
scas
add
(bad)
cld
add
xchg
push
in
xchg
(bad)
movs
jbe
pop
into
je
test
popa
jmp
push
(bad)
jmp
mov
and
push
cli
enter
repnz
push
loop
gs
push
in
push
(bad)
jecxz
xor
call
cmc
clc
mov
pop
xor
sar
adc
push
rcr
ja
pop
mov
pop
loopne
mov
xor
adc
or
dec
sub
sbb
scas
jecxz
fld
leave
daa
call
adc
cmc
mov
test
jl
inc
xor
adc
in
pop
xlat
xor
(bad)
ror
ret
fs
cmp
cmp
inc
and
daa
(bad)
jo
fnstenv
push
jge
leave
xchg
sbb
mov
mov
clc
pop
into
ja
sbb
mov
xchg
add
pop
inc
lds
add
jg
fild
ds
add
pop
repnz
dec
mov
cdq
dec
ret
jns
outs
jbe
adc
and
add
mov
dec
repz
jae
adc
mov
popa
mov
das
add
adc
fld
push
xchg
cmp
xchg
fwait
rcr
inc
mov
push
jp
(bad)
pop
in
scas
sahf
xor
in
mov
mov
pop
inc
pop
sbb
test
scas
adc
repz
add
inc
pop
sbb
add
out
or
arpl
push
adc
(bad)
leave
ret
cwde
jae
or
rol
pop
jb
or
and
pop
stos
call
enter
daa
xchg
cmp
and
and
sahf
xchg
(bad)
scas
adc
sub
jmp
xchg
xchg
mov
dec
pop
movups
and
out
pop
sub
loope
hlt
mov
and
xchg
adc
ror
and
adc
inc
xor
or
push
dec
xchg
fnstcw
nop
cmc
or
adc
das
(bad)
psubsb
mov
test
mov
nop
mov
sub
push
cmp
lahf
repnz
es
sbb
jbe
xchg
ror
adc
in
cmovle
jo
aas
ror
movs
add
aaa
mov
and
or
mov
mov
ins
fnstcw
pop
dec
retf
ret
mov
dec
sub
bound
cmp
jg
push
mov
out
int3
aad
arpl
jno
ds
pusha
add
mov
sbb
pop
jge
imul
fmulp
imul
test
adc
loop
jns
mov
sub
jo
imul
arpl
cmps
pop
fimul
push
sub
adc
mov
mov
push
fld
push
dec
enter
jns
pop
test
call
add
jle
sbb
and
dec
adc
and
push
mov
mov
mov
adc
mov
inc
and
popf
stos
mov
inc
fcmovb
mov
adc
push
mov
dec
clc
ds
ss
out
mov
cmps
int3
or
push
fs
jb
scas
rcl
jbe
popf
stc
sar
scas
pusha
int
push
sub
mul
push
in
stos
mov
xchg
inc
cmp
test
mov
sub
push
dec
push
inc
je
push
sub
and
mov
add
rcr
ret
jb
(bad)
popf
cmps
push
xchg
in
xchg
sub
cmc
push
mov
test
jmp
(bad)
fcomi
je
sbb
sti
icebp
add
mov
ret
aam
loop
xchg
dec
fisub
repz
pop
pop
dec
sbb
mov
pop
mov
xchg
xchg
lds
mov
in
mov
mov
call
cmp
std
xchg
out
lea
xchg
lock
xchg
xor
loope
or
stc
adc
fsubr
out
sub
rcl
xor
cmp
mov
jecxz
or
sub
sbb
pop
cmc
sbb
(bad)
jbe
(bad)
sub
int3
mov
inc
and
fisubr
jbe
pushf
cmps
push
add
push
jmp
inc
pop
(bad)
adc
inc
xchg
adc
dec
mov
rol
sub
mov
pop
inc
cmp
and
sbb
jne
inc
push
jmp
push
(bad)
fisttp
dec
xchg
sbb
adc
xor
sbb
sbb
adc
cmp
ja
test
das
aam
call
gs
aaa
mov
inc
imul
adc
pushf
jg
sub
push
repz
sub
pop
repnz
jb
dec
(bad)
enter
and
jbe
enter
aas
daa
sub
mov
inc
imul
or
adc
xchg
pop
dec
lea
inc
js
rol
lock
adc
sar
push
and
adc
mov
ins
aaa
std
shl
jb
adc
retf
(bad)
ins
scas
fisubr
push
xchg
sub
inc
and
pop
jbe
or
in
and
iret
sbb
mov
adc
ds
ret
shl
arpl
sub
movs
mov
retf
adc
or
push
jne
adc
lock
jb
xchg
(bad)
push
adc
clc
jno
push
pushf
ret
test
mov
sbb
adc
pop
jae
dec
enter
jnp
shl
dec
inc
fisttp
or
sbb
and
sbb
stos
je
pop
aam
jbe
int
inc
arpl
sub
inc
and
and
xchg
xchg
shr
(bad)
push
sbb
lods
call
shr
or
cli
stc
stos
push
retf
inc
cmps
and
jg
clc
cwde
jns
shr
and
pop
add
pop
das
pop
cmc
(bad)
iret
call
and
fs
call
(bad)
rcl
and
adc
and
(bad)
jp
mov
inc
(bad)
repz
leave
sar
mov
fcmove
lahf
push
mov
ror
jae
gs
sbb
out
js
scas
mov
mov
adc
mov
jns
xchg
repnz
inc
ins
sar
push
pop
loop
fcomp
into
mov
pop
rcl
push
jmp
xor
retf
jge
es
push
jno
clc
fisttp
inc
cmp
outs
cs
mov
(bad)
sub
clc
dec
adc
hlt
cmovg
jnp
ds
cdq
xchg
mov
scas
ficom
aam
scas
and
and
push
dec
pop
popf
vpmullw
push
icebp
call
xchg
xlat
loop
sbb
arpl
cmps
jne
jmp
pop
mov
ss
sbb
(bad)
cmc
scas
jge
xchg
jne
adc
push
jae
arpl
es
popf
imul
popf
cs
leave
pop
sub
push
adc
dec
dec
js
(bad)
stos
stc
(bad)
sti
and
xchg
iret
mov
loop
shl
(bad)
mov
loopne
pop
and
test
repnz
cld
sub
ret
or
outs
adc
sbb
sub
scas
int3
mov
pop
jb
out
fdivr
xchg
add
addr16
mov
dec
dec
and
xor
push
cmps
arpl
call
(bad)
jns
lods
xchg
mov
test
or
scas
or
xchg
and
mov
fsub
sbb
hlt
imul
mov
in
gs
div
in
dec
push
outs
mov
stos
mov
lea
push
jmp
mov
cmp
mov
xchg
inc
push
sbb
imul
inc
movs
ins
(bad)
mov
push
out
icebp
pop
daa
cs
or
mov
lods
imul
call
xchg
push
adc
push
loopne
sbb
sbb
cmp
(bad)
mov
mov
iret
gs
mov
stc
jnp
sbb
loope
rol
jo
bound
daa
inc
out
retf
fld
sbb
cmp
ss
mov
push
cld
stos
ret
int3
sub
mov
push
and
mov
pop
in
test
aaa
jnp
movs
push
adc
pop
ss
loop
fwait
sub
movs
cmp
js
aam
in
enter
lods
aas
hlt
mov
std
pop
cmc
dec
push
lock
ror
inc
xor
int3
mov
mov
adc
gs
sub
icebp
outs
in
sbb
push
std
or
(bad)
sti
jbe
adc
cmps
lock
cmps
(bad)
push
jmp
fldcw
lods
xchg
push
mov
sbb
jo
sti
outs
imul
es
rcl
sub
ss
jmp
jo
jno
nop
bnd
jo
clc
stos
inc
adc
call
aaa
(bad)
je
add
jno
sbb
loopne
inc
push
jmp
jp
sbb
jp
pop
movs
mov
movs
dec
push
jmp
out
gs
fs
xchg
shr
lods
xchg
adc
inc
add
aas
fiadd
stc
ret
sti
bound
inc
(bad)
jecxz
stc
add
cli
mov
gs
ins
inc
dec
sub
aam
pop
sbb
sar
rol
add
(bad)
and
or
(bad)
mov
inc
xchg
in
jg
pop
fisttp
jno
sub
hlt
mov
(bad)
gs
pop
lods
repz
pop
movs
fimul
cwde
(bad)
mov
pop
jle
xor
and
leave
fiadd
pop
ds
loopne
or
push
cmp
pop
push
sub
push
xchg
dec
pusha
fs
clc
cmps
xchg
xor
das
push
shl
jnp
test
je
mov
xor
retf
rcr
cmp
mov
cmp
repz
cmp
push
out
in
retf
cmp
lods
pop
jno
or
ret
inc
add
(bad)
xor
into
xor
leave
adc
sub
or
xchg
xor
fistp
pop
adc
sub
movs
or
or
push
add
jae
loopne
sub
daa
dec
xchg
or
das
in
out
cmp
jp
icebp
sub
pop
lds
pusha
push
or
test
call
mov
push
pop
cmc
int3
cmp
jmp
cld
jecxz
jmp
xor
frstor
add
xor
sar
out
cmp
and
mov
enter
push
mov
(bad)
jnp
push
ds
out
xchg
xor
popa
inc
push
popf
int
inc
cmp
jno
aaa
xor
and
fwait
jne
or
jmp
(bad)
bound
mov
push
repnz
fstp
mov
inc
test
inc
or
je
jecxz
adc
test
pushf
(bad)
dec
int3
sahf
pop
ins
push
push
test
imul
test
sahf
pop
mov
xchg
in
das
pop
cmp
ins
cmp
push
mov
add
or
jg
mov
rcl
mov
lea
pop
pop
sbb
popa
outs
dec
cmp
inc
adc
out
leave
sbb
inc
aad
xchg
int
or
out
jp
(bad)
hlt
pop
nop
mov
mov
outs
and
movs
jge
pop
and
xchg
call
push
pop
loop
sub
loop
dec
push
outs
ja
adc
jg
call
cdq
in
mov
inc
mov
and
lods
adc
test
inc
in
mov
jno
pop
cmp
cwde
xor
out
sysret
shr
mov
push
outs
mov
rcr
xor
mov
shl
ret
and
pusha
push
dec
mov
sub
stos
jns
mov
push
pop
mov
sub
xchg
imul
lock
ja
je
dec
sbb
xchg
loope
ds
call
fnsave
mov
jbe
ficom
push
adc
dec
loop
jnp
pop
call
sub
fcomp
push
push
pop
outs
scas
es
cld
cld
es
dec
mov
es
lods
cs
lds
lods
and
imul
stos
int
add
neg
jle
jg
mov
or
push
fidivr
lods
ins
xchg
push
int
inc
or
push
int
adc
hlt
dec
test
retf
inc
and
cmps
mov
arpl
inc
xor
cli
xor
cmp
or
xor
or
jno
hlt
fdiv
dec
mov
cmp
pop
jg
jne
aam
rcl
neg
cmp
repnz
or
jmp
mov
inc
adc
sar
mov
out
lds
xor
push
outs
rol
dec
jns
add
test
out
rcl
scas
cmp
inc
adc
jp
test
sti
jbe
and
cmp
xchg
popa
push
ja
fcmovb
les
mov
add
repz
sub
xchg
data16
xchg
gs
adc
aam
xchg
lahf
stc
nop
dec
test
push
mov
or
add
sub
or
cmp
lods
add
aam
ret
ins
push
rcr
push
daa
or
ret
mov
ret
cwde
and
dec
cs
xchg
stos
aaa
push
shl
jns
adc
retf
cmps
add
sub
out
fdiv
fstp
xchg
aas
cwde
sahf
cli
scas
or
fist
inc
mov
inc
out
(bad)
(bad)
fild
pop
ja
xor
jl
pop
cmp
fs
out
repz
loope
pop
jmp
out
and
rcl
and
cs
and
xlat
adc
jno
mov
ins
aam
cmps
sti
mov
lahf
xchg
or
mov
(bad)
mov
xor
ja
xchg
jb
push
jo
inc
repz
dec
xor
add
loopne
retf
and
div
jns
mov
adc
scas
scas
jg
mov
sub
adc
mov
jo
sti
jne
call
or
retf
ret
(bad)
cmp
and
push
mov
mov
aad
mov
icebp
or
push
xchg
lds
pop
xchg
ss
leave
sbb
xchg
shr
mov
push
ss
jge
imul
test
mov
xchg
jo
mov
retf
xchg
bound
ret
pop
add
and
in
daa
test
mov
jecxz
ret
fsubr
pop
mov
add
inc
jae
cmp
dec
xchg
lods
movs
stos
push
jne
adc
cdq
sbb
adc
pop
div
dec
je
mov
cli
push
outs
ins
aas
jl
nop
(bad)
int
dec
div
ins
adc
push
addr16
jl
add
out
mov
loope
lds
and
jg
ror
lea
pop
fbld
retf
mov
add
xor
jne
push
ins
push
test
jmp
jge
push
jae
cmps
fwait
push
xlat
stos
bound
stos
xchg
pop
addr16
cs
fs
(bad)
addr16
pop
mov
add
inc
test
popf
clc
loop
mov
cmp
repz
push
jle
mov
scas
cmc
push
test
mov
inc
arpl
ins
adc
xchg
ins
data16
out
retf
popa
mov
dec
inc
ja
fisubr
inc
mov
nop
cmp
xlat
cmp
or
repz
jns
mov
or
ds
mov
dec
inc
mov
outs
shl
bound
test
ret
dec
scas
push
sbb
pop
shl
movs
bnd
retf
mov
mov
enter
pop
jns
xor
mov
inc
mov
loope
add
aad
mov
inc
dec
in
test
ret
sbb
in
jns
mov
call
fsub
(bad)
dec
into
repnz
out
jmp
mov
rcl
mov
push
xor
mov
and
bound
sahf
arpl
xor
aaa
pop
mov
fst
cmp
pop
fist
stc
push
rcl
xchg
js
outs
ss
add
dec
pop
neg
cmps
and
jne
add
stos
push
outs
xchg
add
mov
enter
jno
mov
out
fcmovnu
int
cs
sub
(bad)
pop
nop
mov
jns
mov
inc
out
icebp
dec
hlt
cmp
add
pusha
aas
popf
rcr
jge
loop
sbb
push
mov
pop
stos
cmp
je
mov
cwde
retf
es
je
into
pop
dec
cmp
jge
xchg
xchg
rcl
shr
out
cld
sbb
or
lock
jae
inc
es
test
xchg
push
cwde
xchg
addr16
adc
test
bound
leave
push
mov
push
repnz
inc
pop
lock
sbb
push
xchg
loope
bound
jb
or
leave
mov
(bad)
adc
mov
xchg
sub
xor
or
movs
lods
pusha
cmp
cld
retf
inc
fcmovnb
gs
mov
sub
clc
inc
push
mov
dec
hlt
push
clc
dec
in
mov
cmc
(bad)
xor
int
mov
ins
je
out
and
cmc
add
imul
dec
add
pop
inc
inc
sti
das
mov
aad
sar
sub
dec
sub
dec
mov
mov
ins
movs
mov
inc
pop
int
shl
push
mov
dec
push
jns
test
icebp
mov
cmps
jne
call
movs
jns
fadd
inc
mov
or
cwde
test
and
repz
(bad)
ds
call
push
add
mov
add
int
dec
lock
adc
adc
pop
inc
(bad)
(bad)
push
pop
gs
xchg
ret
push
sti
hlt
push
cdq
addr16
mov
push
repz
pusha
div
sbb
fnstcw
test
pop
mov
xchg
mov
sbb
cmp
push
and
cmp
outs
(bad)
scas
and
dec
js
ret
jo
cmc
and
mov
(bad)
jno
mov
or
pop
cmp
xor
push
xor
push
mov
mov
enter
fwait
push
ror
rcr
pop
xchg
cld
mov
xchg
or
jo
jne
jle
(bad)
xor
clc
pop
sub
jnp
jnp
pop
add
lods
aas
inc
mov
mov
xor
pop
pop
jl
mov
inc
xchg
cmps
not
or
or
mov
mov
sbb
xchg
adc
inc
jno
dec
fsubp
jp
adc
inc
rol
inc
jns
scas
xor
lea
pusha
ret
or
dec
jge
leave
idiv
adc
addr16
dec
int3
jb
mov
retf
xchg
pop
mov
or
mov
lods
lods
rcl
stc
adc
push
jbe
xchg
push
jmp
pop
sbb
cwde
dec
retf
sbb
mov
pop
stos
subps
fadd
push
jg
sbb
stc
aam
sbb
mov
outs
lods
ficomp
lock
or
mov
ins
adc
or
pop
jmp
retf
xchg
sub
dec
push
test
jns
mov
inc
out
pop
inc
aas
pop
mov
xor
stos
cs
outs
outs
mov
jmp
inc
mov
test
add
inc
(bad)
mov
fwait
out
and
xchg
jo
aam
in
sahf
mov
call
dec
popa
or
pop
(bad)
inc
dec
adc
test
cmp
scas
dec
(bad)
ficomp
adc
dec
repz
fsubr
outs
js
cmp
cmp
leave
and
mov
sub
dec
sub
or
test
cdq
out
inc
mov
pop
scas
cmps
pushf
cmp
add
sbb
push
int
mov
xchg
and
xchg
jno
xor
sbb
xor
into
aam
(bad)
xor
push
bound
out
add
sbb
mov
sub
lods
sbb
cdq
and
daa
jecxz
loop
mov
push
(bad)
mov
add
pop
or
jb
xor
shl
call
jns
sbb
push
clc
push
adc
xor
lock
jmp
idiv
out
sub
ins
jle
mov
mov
das
int3
stos
mov
les
imul
adc
push
popf
test
shl
in
cmp
pop
fmul
push
xor
jno
(bad)
cmp
dec
sbb
cmp
sub
lock
js
inc
sub
add
sahf
sub
dec
lods
sub
int3
mov
sbb
loop
mov
les
push
jmp
mov
xchg
xchg
cs
sub
cwde
or
mov
ret
popa
adc
shl
not
sbb
push
loop
arpl
pop
loope
movs
cs
inc
sbb
scas
xchg
mov
xor
int3
cwde
lods
lds
rol
jno
into
inc
inc
jmp
sub
mov
loope
clc
jmp
xchg
(bad)
adc
xchg
daa
(bad)
inc
jo
cmps
lds
mov
add
ret
or
dec
cld
pop
retf
ins
pop
sub
pop
inc
repnz
add
je
cmp
push
mov
in
movs
call
popa
or
aad
popa
cmp
call
pop
adc
and
push
jae
pushf
pusha
std
dec
out
inc
fcomp
ret
dec
fsub
cwde
xor
mov
lock
mov
test
sub
xor
test
out
jb
jg
xchg
push
das
aad
cmp
mov
dec
push
outs
or
in
lds
out
iret
(bad)
xchg
loopne
mov
scas
add
(bad)
repz
adc
mov
xchg
jnp
mov
cmc
std
dec
adc
dec
cld
jne
test
xor
sub
and
mov
dec
jge
cmp
xrelease
loope
xor
fadd
loop
or
sti
retf
stos
mov
or
push
int
into
push
dec
dec
sbb
inc
or
scas
out
shr
jecxz
dec
mov
retf
das
mov
dec
mov
ret
aad
ror
lock
push
fdivr
sti
add
jns
mov
push
retf
pop
ss
out
das
int3
and
mov
clc
sub
scas
lods
mov
add
cs
jp
and
jns
jnp
inc
or
sub
sti
lahf
fdivr
add
retf
sbb
xchg
cli
jae
jp
xor
cmp
adc
mov
mov
add
dec
push
mov
pop
jb
lahf
pushf
inc
in
add
fcomi
push
mov
in
fistp
std
push
es
popa
push
jmp
test
mov
and
push
shr
sbb
and
(bad)
xor
sbb
mov
daa
pop
adc
arpl
leave
cmp
ret
inc
pop
cli
stc
mov
sbb
adc
jge
bound
movs
pop
dec
push
les
stos
icebp
stc
stos
mov
mov
out
add
xchg
leave
rcr
sub
dec
xchg
sbb
sbb
jmp
dec
xchg
sar
js
push
popf
inc
mov
sub
push
or
outs
inc
nop
jge
(bad)
adc
pop
ins
sub
sub
mov
sub
mov
or
sbb
imul
cmps
xor
bts
jmp
jnp
(bad)
shl
cwde
fwait
xchg
dec
inc
jae
mov
or
add
pop
test
mov
dec
lds
hlt
xchg
mov
loopne
dec
pop
xor
test
mov
repz
mov
cmp
les
xor
or
sub
adc
or
jae
pop
inc
xor
cmp
ret
mov
jg
out
adc
in
xor
dec
mov
xor
dec
cmc
mov
mov
mov
lahf
dec
fxch
fwait
and
lahf
gs
(bad)
(bad)
adc
mov
jae
xor
push
hlt
jnp
push
xlat
aas
retf
(bad)
adc
jmp
push
cmps
clc
addr16
repz
inc
add
mov
arpl
in
arpl
mov
push
cld
bound
push
mov
mov
mov
(bad)
xchg
mov
shr
cdq
fld
bound
mov
add
cmp
push
out
pop
lock
js
inc
push
ret
push
retf
popf
es
inc
into
mov
push
mov
bound
(bad)
scas
mov
adc
push
mov
jmp
push
loope
push
mov
inc
xchg
(bad)
cwde
mov
xchg
pop
in
les
or
mov
aad
movs
je
xor
sub
xchg
sar
sub
inc
sahf
stos
cmp
outs
push
pop
xchg
repnz
pop
mov
lahf
inc
(bad)
jns
inc
cs
mov
xor
ficomp
outs
dec
sbb
push
jno
mov
int3
pop
loopne
jae
cs
mov
xchg
mov
jno
mov
out
adc
imul
clc
(bad)
shl
ins
dec
mov
fbstp
aaa
adc
mov
mov
push
out
iret
add
(bad)
repz
and
pop
mov
mov
jecxz
loop
sub
loopne
mov
and
jl
std
add
jnp
adc
fxch
imul
cmps
add
mov
jns
sbb
push
jnp
fcom
sub
leave
daa
pop
(bad)
dec
xor
cmp
leave
mov
in
aam
fimul
xor
cld
xchg
loopne
js
int3
pop
dec
or
adc
(bad)
and
(bad)
leave
fadd
cmp
or
dec
sub
fldl2t
pop
sbb
dec
add
xchg
lds
pop
pop
add
push
fldpi
pop
dec
push
out
adc
fadd
or
mov
cmps
push
out
sbb
inc
dec
fistp
sbb
pop
cs
inc
dec
cmps
aam
sbb
and
div
ret
in
stos
dec
push
push
push
or
cmp
lds
jne
inc
push
ins
ins
sbb
test
jno
pushf
int
fsubr
hlt
movs
sbb
adc
jne
pop
repnz
retf
fs
pop
jp
in
dec
and
popa
(bad)
pop
push
(bad)
hlt
sub
sub
or
push
test
retf
arpl
bound
mov
shl
push
arpl
repnz
adc
mov
bound
fwait
xor
xchg
xchg
cs
mov
fnstcw
add
stc
push
sahf
rcl
and
and
mov
dec
inc
cmp
inc
cmp
xchg
test
or
daa
sub
adc
popf
movs
into
outs
xor
leave
out
xchg
inc
int3
cmp
sub
es
arpl
jle
mov
rcr
jne
cmp
xchg
jge
inc
icebp
cli
or
enter
or
retf
pop
sar
cmp
mov
adc
scas
jmp
movs
iret
push
mov
stos
or
repz
add
push
cmp
std
push
cs
xchg
rol
cmp
ins
pop
std
mov
imul
test
ds
ins
rcl
and
xor
push
jns
sbb
jmp
jae
or
dec
mov
mov
es
xchg
stc
xlat
sti
in
dec
iret
std
jne
jmp
les
jg
sub
mov
xor
ret
cmp
dec
xchg
or
xchg
xor
movs
popa
and
or
pop
jmp
cmps
mov
es
mov
add
into
neg
outs
mov
push
and
xchg
adc
sub
and
jnp
pop
cmp
mov
lds
or
or
xor
xor
push
inc
fistp
pop
mov
sti
into
out
mov
pop
pop
inc
push
(bad)
repz
pop
fst
test
dec
fs
pop
jnp
repz
jle
inc
std
adc
shl
test
or
(bad)
xor
or
add
je
inc
ins
or
xchg
enter
add
call
push
or
repz
cmps
dec
shl
dec
dec
scas
scas
xor
xchg
cmp
sub
lods
cmps
xlat
sub
push
in
clc
test
pop
jl
lahf
int3
mov
je
nop
xchg
js
(bad)
fcomp
fcom
or
inc
mov
cmp
mov
cdq
fisub
xchg
mov
cmp
sub
mov
(bad)
jne
fsubr
add
mov
and
mov
sbb
pop
xchg
pop
shl
fmul
pop
xor
jecxz
mov
add
js
jp
fstp
aam
cmp
idiv
shl
sub
push
xchg
add
div
and
adc
cli
test
jecxz
xor
int
sbb
cmp
ror
std
lea
mov
in
push
int3
mov
jne
dec
mov
cmp
hlt
add
loopne
jp
inc
push
sar
retf
pop
sbb
mov
outs
and
bound
in
push
(bad)
jmp
push
sub
and
cmps
jle
mov
add
lahf
inc
dec
push
jge
mov
and
es
cmp
mov
std
mov
jmp
cmp
cmp
andnps
enter
pop
fs
pushf
retf
scas
clc
mov
xor
fistp
pop
push
data16
xchg
fisubr
aam
sbb
xchg
or
or
test
lods
movs
mov
fld
xor
ror
movs
cmp
push
sahf
int3
xchg
xchg
(bad)
or
ret
pop
in
mov
lock
cmp
push
test
stc
dec
pop
aam
or
pop
nop
or
cmps
adc
rcr
adc
push
xchg
xchg
or
pop
adc
cmp
neg
in
jle
push
mov
retf
outs
fcom
dec
call
sbb
xchg
rcl
adc
test
push
xchg
pop
xchg
adc
repz
jae
cs
shr
cmp
add
or
out
out
inc
loop
fnstenv
cmps
pop
cmp
and
test
loop
inc
ins
pop
lea
mov
or
movhps
lock
jge
cdq
fucomp
pusha
out
cs
sbb
xchg
and
aaa
dec
movs
mov
mov
int3
fcompp
jg
out
push
xchg
(bad)
mov
pop
scas
xchg
dec
ror
gs
iret
and
dec
popa
adc
push
sub
les
scas
cs
add
iret
ss
jmp
push
xchg
cmc
call
call
(bad)
jno
mov
shr
into
enter
cmp
stos
pop
and
sbb
popa
ds
inc
test
neg
inc
and
js
ins
xchg
mov
inc
adc
das
xor
pop
push
dec
test
cmc
adc
cmp
aam
or
push
jno
push
ins
xor
out
dec
repnz
add
jae
popf
sub
pop
cmp
out
enter
xchg
lea
xchg
lahf
mov
or
cmps
jmp
pop
bound
add
repz
mov
add
pop
and
or
xchg
pusha
test
xchg
fwait
cwde
(bad)
xchg
cld
movs
nop
mov
or
and
in
mov
dec
add
retf
clc
lods
mov
add
test
dec
daa
add
repnz
nop
jbe
pop
xor
cmp
jnp
mov
sub
loopne
(bad)
ret
cmp
outs
int3
xchg
xchg
ret
mov
push
xor
loopne
xor
test
cmp
loop
jno
adc
and
pusha
stc
aam
dec
mov
and
scas
repz
adc
iret
or
jbe
sub
ja
ss
nop
and
push
cmps
adc
pop
jl
sub
ror
add
pushf
cmc
push
and
dec
aas
or
sbb
rcr
and
sub
lahf
out
mov
add
call
lock
mov
jne
clc
fmulp
push
nop
sbb
sub
icebp
loope
mov
int
mov
pop
mov
mov
ffree
xor
xchg
dec
ja
test
and
pop
repz
leave
pop
neg
popf
call
sub
sub
push
jecxz
jae
add
pop
xchg
pop
cmp
pop
adc
popa
sbb
mov
(bad)
and
push
lock
mov
ins
enter
add
xor
sar
leave
repnz
adc
mov
pop
adc
es
loope
data16
outs
mov
out
retf
ja
movs
lahf
jle
dec
in
dec
hlt
ret
add
sti
adc
pop
rcr
test
out
dec
pop
adc
adc
xor
pop
xchg
lea
inc
stos
call
(bad)
adc
fisubr
pushf
arpl
inc
push
in
mov
jmp
dec
inc
sub
call
aad
cmp
retf
fcmovnu
jae
outs
xchg
pop
pusha
scas
inc
adc
xor
mov
mov
ja
jp
or
outs
nop
mov
xchg
dec
les
mul
push
sub
fs
and
fnstcw
iret
mov
xchg
movs
and
pushf
fwait
add
(bad)
push
or
(bad)
and
scas
add
add
lods
stc
mov
pop
xchg
sahf
cdq
push
adc
xor
xor
in
dec
push
movs
inc
pop
(bad)
lods
sub
mov
sbb
out
dec
jp
xor
jo
mov
dec
sar
push
scas
pop
movq
pop
(bad)
out
out
dec
stc
fmul
out
dec
daa
mov
mov
gs
mov
push
cmps
mov
mov
or
jecxz
in
mov
push
pop
lock
cmp
sbb
out
(bad)
jae
or
sar
ja
(bad)
hlt
neg
imul
out
pop
fcom
push
out
sbb
xchg
or
iret
pop
jg
pusha
cmp
add
repz
lahf
inc
jo
outs
in
out
out
add
pop
adc
or
xor
jb
push
cmp
pop
or
or
outs
push
adc
cmp
aaa
stos
fsub
cmps
jo
pop
mov
push
cmp
repz
adc
scas
xchg
mov
or
int
mov
fsub
aad
cmps
sub
xor
mov
ins
cmp
dec
std
dec
push
ret
aam
inc
or
(bad)
pop
add
jb
clc
mov
push
dec
repz
imul
int3
dec
push
or
std
cmc
xor
int
es
loopne
pop
shr
in
adc
pop
push
jl
dec
stos
jnp
inc
mov
rol
imul
ss
out
loopne
xchg
in
mov
lods
inc
pop
ins
int3
jno
pop
xchg
rol
inc
sbb
scas
sbb
into
inc
iret
jae
push
add
sbb
sub
int
inc
pop
ss
fdivr
push
sub
xor
add
inc
push
sub
xlat
es
mov
mov
mov
movs
adc
xchg
dec
dec
mov
xchg
test
mov
fidiv
jns
pop
xchg
mov
xor
fcomi
fs
pop
fsubr
fnsave
sub
fst
push
lahf
stos
adc
adc
fwait
repnz
cmps
xor
add
mov
loopne
outs
ins
add
(bad)
aas
leave
inc
inc
test
jmp
fcmovne
in
cmp
(bad)
jno
pushf
inc
in
xchg
inc
xchg
das
mov
sbb
and
xor
and
mov
pop
mov
outs
xlat
mov
int3
mov
push
push
lea
xor
fiadd
pop
fs
lea
in
push
int3
mov
pop
xchg
or
add
mov
adc
iret
cmp
add
jle
scas
repz
inc
dec
cli
pop
(bad)
dec
fistp
or
xchg
or
int
inc
push
iret
(bad)
or
cmp
dec
(bad)
fbstp
xlat
and
mov
sub
loope
ret
out
outs
adc
and
jo
pop
jbe
pop
pop
lods
movs
jmp
stos
in
mov
cmp
mov
inc
or
(bad)
lds
call
repz
sbb
bound
sub
mov
xchg
jne
in
cmp
mov
mov
out
sub
add
and
mov
push
dec
test
shl
out
adc
out
in
dec
cdq
adc
bound
stos
sub
sahf
sub
(bad)
cmp
dec
dec
jge
mov
jo
scas
jbe
inc
clc
dec
xchg
fisttp
jmp
sbb
aas
(bad)
(bad)
outs
sub
jmp
outs
sbb
repnz
push
outs
inc
pop
int3
sbb
push
jg
pop
fistp
movntq
loope
rol
int3
fcom
sub
clc
xor
jg
sbb
push
dec
sub
cmps
retf
cmps
aad
cld
xlat
mov
push
gs
xchg
xchg
jge
and
add
pusha
mov
(bad)
frstor
pop
push
push
xchg
mov
jmp
ret
adc
std
xor
adc
sbb
jae
imul
pop
out
in
es
inc
sub
(bad)
stos
mov
pop
mov
push
ret
xchg
pop
fwait
arpl
inc
call
xor
movs
jo
rcl
nop
jmp
dec
jno
cmp
xchg
push
imul
jmp
cwde
pop
pop
fnstsw
ja
jle
ret
ins
ja
enter
xchg
sbb
adc
sbb
jns
enter
dec
lods
sar
aam
add
pop
(bad)
sbb
and
jp
push
loop
loopne
pop
dec
dec
leave
jne
jne
fdivr
sub
xchg
ds
cli
(bad)
pop
pop
(bad)
xchg
imul
lods
push
lods
lods
dec
mov
pop
mov
jl
mov
movs
mov
mov
loope
imul
shl
cwde
jns
jecxz
mov
dec
pop
push
ja
(bad)
mov
sub
mov
or
mov
xchg
dec
and
(bad)
sbb
mov
adc
adc
jo
push
adc
pop
sar
movs
push
ins
and
inc
inc
shr
pop
pop
test
jmp
test
test
out
test
je
mov
add
lds
cmp
sbb
or
jg
ret
imul
and
adc
fsub
movs
mov
je
fcmovbe
jne
stos
icebp
(bad)
dec
adc
inc
jmp
pop
fld
std
dec
cmp
adc
retf
sub
or
mov
rcr
ficom
mov
cli
pop
es
(bad)
cli
cmp
scas
add
les
add
mov
mov
stos
shl
push
and
out
jmp
cmps
lahf
sti
add
mov
lahf
push
cmps
mov
jbe
adc
in
dec
lfs
daa
sub
sti
xor
ret
add
inc
sbb
dec
lea
xchg
inc
xchg
call
aad
repz
(bad)
mov
sahf
mov
mov
add
push
iret
and
cwde
pop
mul
pop
retf
adc
mov
outs
not
xchg
sbb
es
and
cmc
xchg
pop
mov
inc
sub
and
add
mov
push
dec
cmp
in
dec
sbb
or
loopne
adc
or
jne
push
and
into
ja
add
mov
sub
dec
cmc
mov
test
or
stc
je
mov
mov
pop
mov
psubsb
popf
movs
inc
pop
test
retf
nop
fist
inc
jns
inc
in
sbb
mov
inc
mov
and
mov
dec
addr16
bnd
push
rsqrtps
inc
(bad)
movs
ret
imul
cmp
mov
mov
mov
xor
xchg
xchg
xlat
out
cmp
popa
jo
pop
into
in
adc
and
mov
dec
push
xchg
neg
adc
iret
rcr
dec
addr16
mov
stos
movs
add
dec
sub
(bad)
repnz
std
je
mov
scas
adc
lock
sti
xchg
inc
aam
xchg
sahf
test
(bad)
(bad)
mov
and
sbb
jae
xchg
jge
mov
mov
dec
jbe
jmp
mov
sub
out
cld
frstor
(bad)
arpl
sub
xor
lods
mov
outs
sar
mov
scas
mov
js
xor
in
(bad)
div
cmps
sti
es
or
out
mov
loope
sub
pusha
xchg
rcr
xor
add
and
cmp
ret
push
sbb
movups
sub
ficomp
xor
(bad)
cld
ins
sbb
push
pop
sbb
mov
jnp
mov
retf
and
ror
shr
popa
loope
jae
inc
gs
loop
pop
out
adc
xor
repz
sub
sub
out
int3
dec
pop
in
push
imul
pop
das
xchg
mov
push
push
cmp
mov
adc
mov
sbb
mov
sbb
(bad)
inc
mov
push
pop
(bad)
shr
movs
pop
in
cmp
jl
mov
out
test
out
dec
retf
cs
push
cmp
retf
xor
cmps
repz
sub
dec
mov
ja
fidivr
fist
ins
sub
inc
adc
adc
mov
scas
mov
mov
push
or
enter
inc
or
inc
scas
sub
(bad)
or
iret
mov
xor
lods
(bad)
fadd
adc
into
in
cmp
jge
jo
(bad)
enter
enter
push
dec
push
xlat
dec
add
or
inc
add
jb
xor
sub
cmp
or
lods
sti
inc
fmul
arpl
popf
sbb
push
sahf
push
inc
je
push
mov
pop
aam
xor
sar
adc
and
xchg
movs
in
add
push
(bad)
fs
push
push
add
arpl
mov
scas
mov
cdq
inc
ins
repnz
sub
xor
stc
mov
xchg
jae
push
cmp
adc
clc
mov
mov
ins
cld
sti
imul
iret
jle
pop
aad
dec
lea
out
inc
mov
fs
into
lds
and
lods
repz
add
sti
sar
add
retf
jmp
movs
mov
mov
jns
inc
inc
(bad)
test
pop
movs
xchg
xchg
xchg
mov
jne
push
jne
int3
mov
mov
pop
jmp
pop
fld
or
mov
neg
push
pop
pop
rcl
repz
cmp
and
iret
cld
clc
mov
enter
fidivr
ficomp
pop
jecxz
stos
mov
test
div
in
mov
push
push
cmc
arpl
inc
mov
dec
andps
push
out
mov
lock
jecxz
sbb
dec
cmps
push
jae
jo
add
retf
cli
movs
dec
jecxz
mov
and
mov
push
aaa
adc
jae
cmp
cs
(bad)
sar
mov
jl
sub
and
fs
test
jb
loopne
inc
jge
cmp
scas
lds
mov
addr16
les
sahf
je
repz
inc
sbb
jle
mov
mov
inc
in
rcr
in
cwde
xchg
mov
jmp
inc
cdq
and
enter
jecxz
shl
jecxz
xchg
and
dec
mov
test
dec
test
add
jge
or
and
or
imul
pop
mov
arpl
add
mov
imul
fcmove
(bad)
or
xchg
xchg
xchg
out
aas
add
inc
xor
xchg
clc
inc
jmp
jmp
mov
ffreep
adc
pop
jg
int3
data16
or
out
cs
xchg
push
xor
(bad)
and
and
jne
rol
fsub
retf
dec
mov
cmc
pop
dec
lods
cwde
adc
sub
mov
pusha
iret
or
xchg
adc
cmp
sbb
clc
or
test
push
rol
retf
xor
push
mov
xchg
scas
inc
jge
sbb
test
loop
test
(bad)
or
jle
repz
into
into
pop
data16
xor
aaa
cmp
outs
add
loop
(bad)
jo
shl
or
cmc
into
inc
push
int
lds
fsub
adc
nop
stos
ss
scas
mov
ins
addr16
inc
pop
lahf
xchg
push
and
adc
cmps
fs
aas
bnd
pop
cmp
scas
or
sbb
test
outs
gs
inc
fild
leave
xchg
adc
rol
adc
test
dec
jl
xchg
cli
pop
mov
aad
fdiv
mov
stos
mov
ficomp
enter
pop
lds
mov
adc
mov
mov
lock
mov
push
stc
fild
or
outs
adc
retf
cmp
fimul
adc
jns
icebp
add
retf
je
or
sahf
test
lods
out
mov
or
in
rcr
ins
rcr
jle
dec
(bad)
jno
imul
loope
jae
test
jb
popa
test
call
movs
loop
pop
inc
push
out
mov
out
arpl
pushf
rcr
in
(bad)
push
push
rcr
outs
pusha
or
jns
lds
cmp
xor
adc
out
add
pop
mov
aaa
cli
dec
lock
std
jmp
arpl
jns
cmc
nop
dec
repz
iret
call
pop
jl
xchg
imul
push
xor
mov
xchg
dec
call
loope
inc
(bad)
bnd
loope
jge
push
pusha
add
lods
cmp
xor
ret
dec
mov
xchg
xchg
retf
xchg
dec
and
fdiv
mov
xchg
xchg
mov
nop
data16
daa
mov
cmp
movs
and
stc
dec
jns
and
cli
push
bound
movs
dec
or
div
fld
lods
fmul
cdq
ds
sub
ss
(bad)
push
aaa
cwde
test
call
add
dec
pusha
xor
mov
in
xchg
call
icebp
mov
hlt
xor
xchg
fadd
data16
mov
jmp
mov
dec
xchg
call
adc
movs
scas
jge
(bad)
int3
mov
dec
and
nop
fidiv
ins
movs
aad
and
dec
iret
jle
je
mov
push
mov
xor
sub
dec
pop
stos
ja
push
fiadd
fidivr
(bad)
pushf
pushf
and
mov
jmp
das
lock
lods
clc
mov
das
rcr
leave
mov
or
push
cdq
mov
outs
mov
movs
and
fs
xchg
std
imul
iret
or
unpcklps
xchg
jb
mov
jo
sub
shr
int
mov
fdiv
aas
and
inc
pushf
jo
jp
jno
add
and
in
or
and
xchg
add
aam
xchg
shl
jae
je
test
mov
sbb
dec
pusha
dec
jno
sbb
inc
mov
inc
xor
mov
pop
mov
dec
mov
sbb
les
cmps
cmp
in
xchg
xor
bnd
xor
loopne
stos
mov
lds
pop
outs
sub
push
push
pop
int3
in
cmp
jmp
icebp
sbb
cmps
cmps
xchg
popa
lods
jo
jl
fadd
movs
lods
jg
fldcw
call
fsub
sub
push
inc
les
in
mov
cmp
push
cmp
call
das
popf
mov
leave
in
xchg
(bad)
mov
jo
(bad)
jae
and
xchg
dec
mov
ret
xor
push
add
jmp
(bad)
sub
xchg
dec
pop
sub
inc
dec
clc
retf
popa
dec
mov
push
xor
aas
hlt
les
call
mov
mov
sar
gs
dec
cmps
xor
int3
push
sbb
and
cld
das
and
popa
movs
test
in
lods
rol
jp
loop
mov
pop
push
mov
or
es
push
fcomi
push
dec
and
rcl
and
xchg
push
aad
call
push
ins
push
aas
int
pop
dec
imul
push
mov
and
cwde
aad
dec
ret
retf
mov
sub
jecxz
push
or
and
out
or
jmp
pop
sub
push
xchg
hlt
jns
iret
xchg
add
movs
bound
lea
dec
pushf
push
jns
or
leave
inc
ins
xor
fisub
and
or
sub
fsub
lds
pop
cmps
out
pusha
mov
push
int3
dec
xor
xor
dec
fwait
in
push
ret
sti
into
retf
cmp
adc
xchg
pusha
mov
test
sti
adc
daa
mov
psubb
dec
lods
pop
scas
hlt
adc
sbb
(bad)
push
push
test
(bad)
push
sub
jmp
xor
ret
lock
scas
adc
mov
ror
jl
jno
push
mov
lea
or
cmc
hlt
outs
daa
and
sbb
or
jp
jmp
icebp
xchg
cdq
dec
call
cmps
push
shl
ins
addr16
pop
in
mov
enter
mov
fmul
dec
mov
jle
sub
repnz
iret
xor
mov
xlat
add
mul
dec
js
fdivrp
das
aam
imul
enter
outs
rcr
xor
push
(bad)
or
cmp
and
fdiv
inc
xor
xchg
dec
fcomp
add
dec
dec
cmp
jmp
jge
lods
mov
xchg
push
pop
xor
out
test
pop
aad
scas
test
push
or
push
movs
sub
sbb
xchg
cmp
pop
jge
push
xor
loope
and
push
mov
pop
lods
shl
into
rol
lods
sub
loopne
xchg
pop
std
push
mov
sahf
sub
or
aaa
and
or
mov
mov
dec
ds
scas
adc
pop
add
and
fstp
add
jbe
leave
inc
pushf
mov
adc
aas
push
cmp
lods
jbe
xchg
and
lods
(bad)
stc
sti
aaa
pop
setae
fstp
repz
dec
in
popf
mov
ror
jmp
dec
sub
xchg
adc
fdivr
mov
dec
and
idiv
fsub
out
push
pop
push
xchg
add
(bad)
shl
xor
lds
lock
ja
ret
pop
xchg
shl
clc
lea
pop
lahf
repz
inc
pop
sbb
pop
add
inc
xchg
mov
mov
adc
outs
sbb
dec
push
jbe
fsubr
and
jg
int3
icebp
fistp
mov
cwde
push
int
mov
(bad)
and
and
std
mov
ret
pop
jg
(bad)
lods
mov
or
lea
cmp
add
pop
cmc
mov
fidivr
cdq
(bad)
nop
in
sbb
(bad)
xor
arpl
pop
xor
xchg
mov
sbb
cmp
add
in
mov
xor
loope
lock
dec
xchg
enter
inc
popa
xchg
and
les
xchg
out
sbb
cli
add
out
and
mov
shr
sub
pop
loop
cmc
js
mov
and
push
push
stc
add
call
dec
test
dec
xchg
nop
sub
push
or
test
hlt
rcl
mov
push
cmps
lods
call
sub
cdq
sbb
sbb
popa
cs
mov
retf
cmp
ds
xor
div
aad
stc
rcr
and
or
xchg
seta
lods
jecxz
ret
icebp
(bad)
jmp
popa
test
popa
push
shr
push
jl
ret
cmp
popa
enter
lea
sti
cld
fs
and
loope
mov
jge
ds
push
push
push
dec
call
test
xor
push
push
imul
adc
or
sub
mov
xor
xor
cld
sti
and
leave
test
daa
or
fnstenv
mov
adc
ret
adc
fs
mov
and
sbb
mov
push
sbb
xor
test
dec
imul
add
add
stos
lea
jmp
(bad)
fcomp
fmul
mov
push
mov
pop
push
outs
retf
fist
and
sub
cmp
cmps
fdivr
pop
(bad)
out
sub
sbb
in
mov
xor
xor
inc
jecxz
std
cli
sbb
cmp
push
(bad)
cmp
mov
pushf
jmp
xchg
or
jnp
mov
sbb
into
mov
call
sub
xor
cmp
movs
pop
dec
sbb
adc
popf
or
inc
push
sbb
push
add
movs
ins
pop
jns
sbb
hlt
push
aas
or
or
aas
push
stos
movs
loop
hlt
and
repz
dec
jo
retf
xchg
xchg
in
pop
push
and
cmp
mov
pop
sbb
inc
inc
lods
or
fdiv
dec
xchg
xchg
mov
jne
or
mov
ins
and
xor
fist
sub
out
(bad)
neg
push
pop
and
out
int3
iretw
les
and
sub
int
ret
mov
jge
scas
xchg
popa
mov
movs
es
push
pop
mov
dec
lods
mov
sbb
xchg
jp
lock
push
add
test
xor
shl
ss
adc
pop
test
add
cdq
stos
(bad)
repnz
jge
les
lahf
jmp
add
jmp
lock
mov
mov
xchg
imul
xchg
mov
cmp
pop
jmp
pop
movs
ins
jmp
movs
push
mov
push
sbb
lds
shr
add
or
addr16
xor
ins
cmp
mov
mov
pop
xchg
pop
xor
cmps
repnz
xchg
jl
scas
punpckhdq
inc
and
xor
or
scas
mov
add
ja
add
sahf
lods
or
ins
mov
je
jmp
mov
dec
call
xor
lock
ja
push
mov
aas
imul
sar
add
out
mov
push
sub
(bad)
inc
cdq
clc
dec
lahf
and
mov
push
xor
lods
pop
sbb
sbb
and
dec
gs
in
sub
out
and
sub
imul
lds
das
sbb
dec
jb
fst
add
mul
push
ja
scas
dec
lea
imul
(bad)
stos
or
lar
sub
sbb
sub
imul
(bad)
jmp
fsubr
and
and
push
je
mov
or
(bad)
js
call
pop
test
add
adc
jne
sub
jp
mov
cdq
xchg
bound
sbb
mov
sub
(bad)
fdiv
icebp
jl
aam
outs
popa
mov
(bad)
(bad)
sub
mov
mov
mov
dec
in
and
sbb
dec
mov
fsubr
leave
add
xchg
push
shl
cmp
jb
lock
sub
add
mov
sar
mov
out
pop
movs
xor
adc
push
or
das
cmc
or
retf
dec
out
ficomp
ret
fisub
sbb
jmp
outs
rcl
pop
xchg
xchg
xchg
mov
popf
xor
popf
shl
inc
popf
mov
ja
adc
in
dec
push
jne
cmps
lods
inc
(bad)
push
ja
icebp
fwait
leave
dec
loopne
js
mov
cdq
cli
and
add
or
loope
mov
shrd
xchg
cmp
mov
mov
ss
mov
gs
mov
outs
sbb
inc
push
mul
repz
push
addr16
sub
cmp
pop
aad
enter
inc
xor
repz
paddsw
xor
jae
mov
ja
pop
jae
push
shl
movs
sbb
in
ret
jnp
daa
popf
cs
(bad)
mov
push
dec
pusha
pushf
cmps
mov
into
add
loop
xchg
gs
ret
cmp
repz
iret
(bad)
repnz
mov
push
aam
sub
stos
push
shr
push
mov
pop
dec
lods
dec
in
xchg
imul
test
mov
cmps
repz
out
xor
xor
rcr
jge
xor
mov
jge
mov
push
cmps
xor
fnsave
rcr
inc
mov
ins
adc
js
adc
pop
lds
inc
pop
dec
mov
and
xor
sub
jg
cmp
dec
int3
and
loop
dec
in
pop
ins
ins
and
mov
sub
imul
jle
call
dec
sti
lea
bound
cmps
xor
std
shl
rol
(bad)
fwait
or
sub
(bad)
push
inc
ds
xchg
cmp
xor
xchg
inc
arpl
fst
repnz
adc
and
fwait
inc
(bad)
dec
mov
ja
xchg
xor
fstp
cmp
shl
(bad)
sbb
sub
jnp
call
clc
in
sahf
loopne
add
enter
cmp
push
push
addr16
mov
shr
aam
ds
push
mov
lds
aad
retf
jecxz
jo
sbb
repnz
pop
or
hlt
daa
add
adc
mov
icebp
add
ds
pusha
mov
sub
popf
loopne
(bad)
shl
sub
movs
mov
or
(bad)
mov
xlat
sub
add
mov
scas
std
dec
and
imul
dec
ror
aam
or
mov
pop
daa
xchg
stos
sbb
shr
das
ss
xchg
cmp
mov
call
mov
xchg
ins
xchg
popf
and
jnp
jne
push
push
dec
imul
pop
cmc
mov
das
jb
jecxz
jecxz
inc
inc
ds
cmps
xchg
xchg
ret
aad
xchg
pop
xchg
ins
adc
xlat
lock
push
cmp
loope
aas
jmp
mov
es
pusha
aas
xchg
icebp
pop
and
arpl
dec
popa
push
and
dec
fs
outs
neg
pop
icebp
les
outs
cwde
mov
and
jbe
mov
call
adc
pop
dec
mov
enter
ds
scas
in
dec
jns
cmps
sbb
add
mov
std
mov
pushf
inc
aas
cmp
(bad)
cmp
loop
scas
cli
jmp
(bad)
jns
mov
bound
dec
fiadd
sti
pop
test
add
dec
pusha
jns
pop
hlt
cmp
sbb
mov
sub
inc
pop
sti
mov
adc
add
pop
push
pop
aaa
cmps
fisub
adc
ds
aaa
mov
cld
mov
push
and
adc
mov
in
or
ins
(bad)
out
sbb
das
int
(bad)
push
pop
sahf
in
push
cli
cmp
sbb
sbb
mov
jbe
fdiv
inc
adc
in
and
mov
cmp
mov
push
(bad)
xor
out
add
sar
mov
cmp
int3
xchg
mov
in
lds
adc
repz
(bad)
fsub
mov
sub
jne
mov
xchg
loop
fimul
ja
icebp
pop
cmp
jnp
jne
(bad)
cld
dec
sbb
lds
jp
xor
lock
mov
mov
(bad)
pop
int3
pop
movs
xchg
pop
int3
call
mov
pusha
repz
jo
cmp
inc
sti
(bad)
sub
push
pop
ja
push
shr
dec
dec
inc
xchg
arpl
sub
daa
lods
mov
jno
dec
lahf
mov
sbb
xchg
addr16
in
test
mov
rol
pushf
xchg
fs
pop
out
jmp
shr
or
outs
scas
cmc
jno
je
outs
and
cmp
or
add
fbstp
bound
fst
or
in
push
adc
loope
jg
fist
ds
pop
lods
jns
mov
pop
(bad)
nop
lods
scas
ret
into
fld
mov
pop
ret
jle
jbe
xor
mov
pop
inc
dec
les
dec
xor
imul
jmp
jns
xchg
stc
adc
ja
jp
pop
(bad)
rcl
xchg
sbb
movs
sbb
cli
pusha
fnstenv
xchg
xlat
inc
rol
jl
sbb
sbb
xchg
iret
adc
je
call
aas
mov
stos
pop
arpl
adc
sub
adc
je
and
repz
mov
jmp
and
or
jnp
cmp
jbe
or
xchg
(bad)
fst
mov
es
cmc
push
test
vminps
pop
out
(bad)
jb
inc
(bad)
outs
popf
out
mov
cmp
out
dec
test
int
push
sahf
push
call
jmp
jle
cmc
sbb
push
jle
pop
adc
xor
leave
(bad)
cmp
jmp
and
ret
inc
jae
jecxz
in
xchg
repz
push
jmp
imul
(bad)
daa
jecxz
pop
ss
xor
adc
cmp
or
fild
shl
xor
imul
out
fld
and
(bad)
in
ds
into
out
repz
pop
mov
fist
jbe
sbb
xor
xor
jl
jb
push
inc
enter
xchg
push
out
jge
cmp
outs
(bad)
js
retf
fisttp
inc
dec
int3
adc
dec
jns
sahf
leave
adc
mov
(bad)
dec
icebp
punpckhwd
ins
gs
clc
push
lea
and
aam
popa
out
jno
inc
mov
push
push
xchg
xchg
sub
add
scas
mov
mov
or
push
or
inc
std
pop
and
lahf
or
sub
push
push
psllw
jno
jae
cmc
mov
sbb
movs
inc
sbb
inc
and
jmp
enter
bound
adc
mov
loop
cli
push
and
xchg
sub
or
cdq
repz
sbb
xchg
pop
dec
xchg
iret
in
iret
lods
cmc
cmp
sub
add
(bad)
jne
mov
adc
mov
and
cwde
out
xor
sub
aad
add
push
(bad)
shl
out
push
adc
test
hlt
push
mov
mov
pop
mov
(bad)
loop
cmp
sbb
xor
daa
mov
inc
pop
fstp
retf
xchg
cwde
std
mov
xchg
rcr
rcl
call
fsub
das
clc
or
imul
popa
pop
cmp
mov
call
cld
cmp
inc
ret
mov
adc
(bad)
rcl
xor
pushf
imul
xchg
and
loopne
mov
(bad)
jmp
or
dec
or
aas
(bad)
aam
push
push
inc
mov
mov
and
mov
pop
fsubr
repnz
xor
sub
(bad)
addr16
and
inc
push
ds
adc
mov
jmp
jmp
int
sbb
outs
loopne
aad
ja
push
(bad)
adc
loop
outs
loopne
jmp
sub
icebp
(bad)
cmps
dec
add
pop
sub
pusha
jl
daa
sub
push
xlat
mov
pop
call
mov
stos
rcl
jl
and
out
cmp
mov
in
cmp
stos
xor
jo
xlat
push
mov
cs
ins
(bad)
pop
mov
cmp
push
scas
test
and
jo
xchg
in
pusha
call
pop
imul
jmp
mov
pop
jge
sbb
sub
test
inc
add
and
pop
adc
setge
cld
mov
sub
aas
mov
push
(bad)
adc
and
ret
fldpi
pop
sub
sbb
mov
and
xchg
pop
repnz
lea
mov
sti
lahf
mov
cli
add
fdiv
cmp
push
add
dec
ins
ret
sub
movs
and
mov
sub
and
cmp
inc
pop
add
adc
xchg
jns
(bad)
ror
push
xor
dec
add
pushf
mov
dec
push
mov
push
cmp
and
jns
add
test
mov
mov
pop
dec
in
enter
inc
push
push
outs
xchg
in
dec
mov
les
shl
lahf
inc
pusha
xchg
mov
test
xchg
and
cli
pusha
xor
mov
sbb
adc
cld
dec
cmps
push
fwait
cdq
leave
xor
lahf
add
xlat
aad
pop
cmp
cdq
jne
push
dec
jae
push
and
xchg
test
add
cmp
iret
stos
push
bound
mov
repnz
(bad)
push
das
mov
loopne
xor
push
je
cdq
dec
or
mov
push
ror
mov
push
mov
lahf
add
xchg
jmp
clc
xchg
mov
cmp
xor
sub
xor
gs
mov
and
aas
loopne
leave
xor
pop
fcmovbe
dec
stc
or
int
int
inc
ss
rcl
fisttp
xor
imul
mov
test
inc
mov
inc
frstor
inc
in
neg
cmp
dec
adc
jne
pop
out
or
add
loop
je
sub
mov
pop
xor
mov
adc
fidivr
(bad)
mov
adc
adc
fdivr
mov
or
(bad)
jmp
sub
nop
data16
mov
ret
shr
xchg
cmps
jecxz
xchg
inc
(bad)
fs
test
sub
inc
scas
and
sbb
add
fstp
(bad)
dec
test
and
jo
xchg
add
imul
and
cmp
shl
add
pop
sub
test
movs
into
cmp
retf
inc
inc
fdivr
(bad)
out
mov
pop
adc
dec
ret
mov
xor
pop
int
stos
jo
stos
sar
leave
mov
mov
cmp
adc
or
and
xor
test
jle
mov
sbb
nop
hlt
xchg
cmp
adc
add
adc
mov
push
mov
jp
cdq
int
fild
outs
div
cs
addr16
cmp
bnd
adc
dec
and
sahf
cmp
jae
shl
inc
inc
leave
outs
fsub
lods
dec
(bad)
scas
sub
dec
fwait
cmps
stos
add
iret
mov
int
jae
(bad)
loope
push
movs
sar
xchg
es
dec
pushf
lods
aaa
mov
(bad)
pop
std
js
cmp
inc
and
nop
push
pop
outs
nop
das
xor
jb
into
mov
mov
mov
icebp
div
es
in
xor
xor
(bad)
mov
in
lea
lods
(bad)
cld
test
retf
loop
and
outs
jnp
xchg
jle
add
inc
test
and
jle
lods
mov
jge
aad
xor
cmps
fcom
inc
mov
sub
ss
ror
jno
xor
xchg
push
dec
sahf
movs
bound
add
idiv
gs
repnz
cli
and
inc
lods
stc
mov
aad
cwde
pop
or
push
call
mov
rcr
xchg
and
ins
inc
push
dec
xchg
xchg
loopne
test
xchg
cmp
loop
dec
stos
xchg
fdiv
daa
xor
pusha
aaa
loop
add
in
outs
mov
call
pop
push
push
mov
fbstp
add
sbb
and
add
jbe
inc
inc
xchg
push
in
shl
jge
pop
js
lods
mov
es
test
and
out
jecxz
and
or
(bad)
mov
hlt
push
mov
push
mov
sbb
retf
xchg
sbb
ret
cmp
push
inc
xor
daa
sub
cmp
hlt
add
or
lock
ins
repnz
dec
add
addr16
jb
mov
xchg
scas
fldcw
sub
je
mov
jmp
lods
lahf
pop
mov
int
mov
int3
lea
leave
(bad)
out
inc
sbb
ror
mov
mov
sub
and
in
push
cmp
mov
and
push
add
xchg
(bad)
cmp
sahf
pushf
pop
call
sar
mov
(bad)
pop
loop
sub
mov
into
mov
cmp
out
push
cld
cs
cmps
addr16
scas
cmp
pop
in
mov
cmp
movs
loopne
repz
dec
lea
cmc
cmc
fsubp
test
mov
cmp
fs
jl
push
leave
jg
cmps
sbb
out
sbb
lods
add
popa
xchg
add
xlat
sub
ss
iret
pop
cmp
jnp
inc
xchg
outs
(bad)
jae
pop
pop
xchg
(bad)
xor
outs
pushf
int
adc
bound
xchg
retf
in
pop
xchg
and
popa
pushf
movs
addr16
sbb
lock
ret
xchg
push
or
lods
test
mov
xchg
and
xor
sbb
mov
mov
xchg
(bad)
sbb
dec
inc
(bad)
(bad)
stos
into
mov
repz
and
sahf
sti
or
inc
jmp
ret
jmp
inc
xchg
fld
mov
mov
out
pushf
daa
mov
sar
or
and
fldcw
push
mov
ins
mov
mov
mov
loope
call
ins
(bad)
sub
out
push
sub
xchg
popa
xchg
nop
sub
mov
js
fsubr
xlat
and
movs
cdq
xor
and
retf
mov
mov
xchg
test
ror
loop
repnz
imul
lock
dec
pop
add
cwde
repz
call
xchg
test
add
push
dec
mov
inc
xor
add
xor
iret
in
push
mov
xor
out
(bad)
imul
or
inc
pop
sub
in
les
and
loope
es
pop
jge
adc
mov
mov
jge
std
xchg
pop
shr
dec
add
xor
cmps
mov
lds
out
sbb
loopne
jbe
call
adc
(bad)
jecxz
mov
repnz
and
pop
jae
ss
(bad)
cmc
inc
jp
rol
or
jle
pop
xor
xor
arpl
add
xlat
rol
inc
and
sbb
je
mov
lods
movs
ins
cmp
adc
js
out
sbb
fwait
dec
nop
add
cs
retf
dec
jmp
into
loope
and
dec
pop
adc
mov
out
or
push
retf
je
out
inc
and
aad
out
test
mov
mov
and
sbb
and
bound
test
pop
shl
and
sbb
mov
ins
jbe
loopne
xor
pop
imul
test
adc
ss
mov
mov
cmp
inc
fidiv
pop
add
mov
sbb
shr
and
shl
repnz
cdq
es
dec
mov
popf
lods
ss
dec
mov
xchg
adc
pop
mov
and
fstp
jecxz
daa
test
mov
sbb
(bad)
push
and
mov
push
add
mov
shr
fidiv
jmp
cld
lods
dec
inc
cmp
xlat
xchg
xor
test
dec
dec
lock
adc
movs
stc
ret
pop
loopne
jl
jne
inc
out
call
adc
sbb
arpl
jmp
cli
repz
adc
rcr
lods
push
popf
ja
ror
adc
not
push
cmp
push
out
retf
push
or
call
or
repz
cdq
sub
ins
sub
rcl
sub
fwait
dec
scas
sti
xor
fst
xchg
sbb
push
nop
aad
mov
mov
neg
popf
push
push
fnstcw
xor
push
(bad)
rcr
mov
call
adc
fcom
cli
jmp
mov
mov
xor
fisttp
or
mov
xchg
adc
xchg
mov
push
jg
mov
jae
cmp
or
loop
mul
hlt
jbe
in
add
cs
xchg
js
dec
cwde
gs
xor
mov
pop
imul
mov
(bad)
das
test
xchg
imul
repz
pushf
cmps
sub
test
push
enter
std
inc
rcr
jne
jae
jnp
out
pop
lods
jnp
xor
cmp
adc
jmp
(bad)
mov
xchg
cmp
xchg
in
and
ds
adc
jo
int
aad
cdq
jno
inc
sbb
ss
pop
adc
repnz
mov
or
iret
sub
in
popf
cli
(bad)
xor
retf
in
sbb
addr16
out
mov
push
lds
inc
push
mul
sub
in
aas
aad
xlat
inc
into
mov
out
movs
and
mov
sub
lock
shl
and
jecxz
das
ss
addr16
movs
enter
sub
ret
cmp
jmp
sti
icebp
cmp
pop
stos
cmps
loop
dec
ss
(bad)
rcl
cdq
in
mov
adc
test
call
sbb
cs
sub
ss
data16
(bad)
inc
jb
or
jl
das
or
aam
out
dec
push
popa
leave
lods
cli
dec
clc
out
fisub
sub
and
addr16
add
bound
call
xor
jnp
jo
call
cmps
icebp
dec
cli
ror
outs
xchg
jg
out
add
or
in
sti
sbb
int
or
sahf
call
xor
push
(bad)
jp
fst
pop
rcl
inc
xchg
mov
ror
popa
or
xchg
pop
aad
arpl
repnz
mov
xchg
adc
jge
cmp
sbb
(bad)
retf
or
xchg
clc
xchg
(bad)
mov
scas
fdivp
mov
pusha
mov
es
ret
aad
and
retf
shl
dec
and
push
push
fild
bound
or
iret
fist
in
jecxz
ds
pop
xor
out
pop
xor
(bad)
shl
xchg
fst
fwait
sbb
pop
out
stos
dec
sbb
xchg
lahf
stc
pop
in
cmp
ins
jne
dec
sbb
sbb
loop
es
pop
cld
outs
push
lods
fnstsw
aad
ud2
mov
(bad)
(bad)
repz
sub
lds
or
pop
jnp
mov
mov
adc
lahf
dec
out
lea
ror
xor
sbb
in
(bad)
outs
enter
cwde
pop
and
cs
mov
adc
jp
xor
add
push
xor
fild
pop
sbb
loopne
out
jmp
xor
add
out
sub
push
ss
dec
stc
rol
xchg
test
cmps
jge
ror
es
sar
aam
aaa
std
adc
retf
or
dec
neg
faddp
add
sub
jl
movs
outs
mov
shr
push
push
mov
push
lea
(bad)
xor
stos
pop
or
mov
inc
pop
push
lods
rcr
inc
jns
mov
imul
mov
out
push
and
xchg
icebp
outs
mov
lds
dec
dec
mov
call
popa
jbe
xchg
cmp
push
sbb
fimul
mov
or
add
sahf
test
bound
xchg
rcl
call
repz
sub
rol
pop
fwait
retf
pop
addr16
inc
mov
xor
mov
jmp
stc
inc
inc
mov
test
test
sti
jg
clc
imul
dec
ja
(bad)
js
dec
out
xchg
xchg
std
and
pusha
gs
mov
xchg
ds
hlt
xor
mov
xor
rcl
push
push
inc
push
call
pusha
rcl
hlt
movs
fadd
not
das
out
mov
outs
sbb
cmc
xor
or
out
jge
in
js
jp
push
inc
test
out
into
es
sbb
ret
lods
div
scas
sti
cld
dec
es
mov
std
das
fst
mov
leave
dec
mov
clc
aad
and
pop
stos
xor
dec
lahf
daa
pop
sbb
popf
cdq
nop
jno
sub
int3
mov
sahf
or
pop
scas
enter
cmp
mov
(bad)
aad
das
mov
push
inc
nop
jmp
pop
jge
xchg
push
arpl
mov
sbb
xchg
fadd
xor
lods
jecxz
not
adc
mov
push
cmp
pop
jae
dec
xlat
add
ja
pop
dec
or
cmp
in
dec
(bad)
std
add
pushf
nop
dec
mov
imul
mov
adc
in
cwde
sahf
stos
mov
mov
cmc
and
pop
leave
loop
cwde
inc
mov
ins
jecxz
or
and
push
adc
jl
fs
iret
retf
and
cmp
pusha
retf
cli
xchg
fs
mov
dec
dec
fbstp
dec
lds
add
add
sbb
mov
call
xor
shl
or
(bad)
inc
sahf
imul
call
clc
xor
mov
imul
sub
xchg
xor
push
sbb
dec
je
ss
fidiv
mov
sbb
stc
sub
in
ret
dec
ds
das
jne
ss
mov
or
mov
les
dec
sub
push
cwde
aas
(bad)
out
pop
cmp
adc
or
xchg
cmp
inc
stos
shr
retf
sub
jmp
mov
cmp
push
jno
inc
ror
mov
test
or
aad
imul
jl
popa
adc
sti
popa
js
dec
or
dec
scas
movs
popf
out
sub
dec
test
mov
and
cmps
sub
sbb
repz
int3
adc
adc
sahf
and
out
(bad)
loop
sbb
les
mov
xor
xchg
ret
fldcw
sub
mov
and
push
stos
lea
mov
das
data16
xor
call
or
inc
mov
fmul
adc
pop
outs
cmps
lds
ds
jbe
pushf
and
call
fadd
mul
idiv
test
dec
mov
cmps
mov
call
fist
add
inc
sbb
cmps
inc
adc
lea
cmps
pop
mov
inc
popf
jmp
pop
neg
add
ret
or
aad
in
lahf
fdivr
int
cwde
xor
jmp
sbb
xchg
(bad)
fisttp
adc
and
sahf
xchg
or
sbb
xchg
(bad)
lods
imul
shr
rol
dec
push
out
xor
ss
cmp
mov
mov
pop
(bad)
mov
sbb
scas
stos
cld
mov
(bad)
cld
int3
(bad)
pop
sub
jnp
and
mov
out
mov
arpl
jo
mov
pop
and
sbb
outs
adc
retf
dec
push
loop
or
popa
fld
je
sub
mov
mov
mov
out
aam
push
push
mov
mov
in
sub
mov
call
push
inc
leave
pushf
xor
clc
es
movs
nop
push
jnp
cmp
addr16
ja
jmp
ins
je
adc
movs
call
das
jmp
ret
sbb
loopne
pushf
ret
ins
xor
shl
ds
cdq
pop
mov
adc
addr16
hlt
or
xchg
js
(bad)
iret
sub
repnz
xor
stc
enter
in
mov
add
ret
dec
aas
fsub
pop
dec
or
pop
inc
sub
test
(bad)
fisttp
sbb
pop
pop
xor
in
or
arpl
sti
movs
pushf
xor
xchg
and
mov
gs
push
mov
cdq
aaa
loopne
xchg
jne
jae
jne
retf
in
jecxz
les
mov
lods
jle
cmps
popf
lea
inc
cmps
sbb
sahf
cmp
cmp
add
jle
xor
daa
test
aam
retf
in
inc
cmp
xor
aas
cmp
mov
out
data16
int3
lahf
jle
sub
xor
lods
xlat
mov
push
add
cmp
add
inc
xor
je
jae
loop
cmc
add
pop
jno
inc
xor
outs
push
mov
inc
scas
xor
out
xor
scas
movs
pop
pop
test
xchg
mov
out
daa
pop
add
out
mov
icebp
(bad)
add
jecxz
inc
mov
mov
in
stos
dec
jmp
xlat
jg
mov
jmp
fisttp
shr
lahf
cwde
lock
call
jmp
push
jp
ret
mov
and
test
icebp
rcl
lods
inc
mov
inc
inc
movs
xor
inc
movs
add
mov
je
add
popf
clc
loopne
iret
push
pushf
imul
fistp
xlat
push
push
mov
es
fidiv
mov
mov
sub
sbb
jle
mov
dec
adc
push
rcl
xor
ret
int
inc
out
es
adc
aam
or
adc
lods
out
cwde
inc
jb
nop
leave
or
sti
add
fistp
aaa
xchg
or
retf
(bad)
jae
add
arpl
lods
clc
popa
cwde
jle
lock
arpl
aas
(bad)
call
push
xor
adc
gs
pop
in
dec
mov
pmaddwd
ja
ss
idiv
jne
lea
(bad)
loopne
in
or
shl
nop
sbb
mov
ret
bound
mov
arpl
mov
push
or
imul
inc
and
pop
imul
stos
popa
into
fmul
cdq
xchg
cdq
sub
add
clc
fs
push
int3
test
fdiv
mov
std
into
movs
jecxz
mov
inc
push
outs
call
xlat
sub
or
fdivp
js
ds
cmps
pop
dec
push
(bad)
aaa
sub
xor
std
mul
mul
lock
pminsw
and
inc
inc
shr
es
inc
lahf
inc
mov
loop
cs
jae
lahf
push
test
sub
push
nop
cmp
push
mov
xchg
pop
aam
call
pop
stos
sub
jl
ins
arpl
and
scas
ret
gs
cs
aas
push
add
dec
xlat
jnp
cmp
adc
in
inc
js
cld
xchg
push
push
cwde
xor
push
inc
or
jb
call
daa
and
call
cmp
mov
mov
daa
push
push
in
pop
pop
(bad)
in
xor
add
inc
icebp
and
xchg
cmp
test
mov
cs
mov
data16
into
ja
lds
les
fcom
ins
and
in
rcl
jnp
adc
(bad)
cmp
icebp
sahf
jno
and
call
mov
xchg
in
sub
movs
fs
push
mov
rcl
inc
inc
rep
das
icebp
adc
adc
mov
stos
pop
or
(bad)
leave
mov
ret
out
pop
pop
dec
ss
scas
inc
ss
mov
and
adc
or
das
aam
lods
sbb
dec
jo
mov
cmp
mov
pop
push
and
mov
movs
sub
lods
fnsave
mul
pop
xchg
cs
aas
push
ja
dec
inc
jmp
loope
pusha
dec
loop
push
hlt
sbb
fidiv
dec
sbb
into
das
bnd
cmp
(bad)
call
push
mov
sbb
inc
in
ds
leave
and
pop
ja
xchg
rol
inc
mov
retf
xchg
fisubr
mov
or
pop
lea
pop
ja
or
clc
fistp
imul
aas
fadd
adc
push
xchg
pusha
fiadd
mov
dec
clc
pop
imul
adc
arpl
mov
mov
leave
call
mul
outs
mov
jmp
(bad)
fsubr
lock
retf
pop
not
inc
xor
xchg
inc
xor
sbb
ror
mov
movs
mov
push
arpl
sar
xchg
arpl
out
(bad)
fimul
fisttp
push
es
or
jge
popa
adc
sbb
xor
mov
sub
jge
sub
push
imul
inc
cli
or
fiadd
push
aas
and
mov
mov
jge
adc
push
aam
or
ja
ja
jae
cmp
dec
aas
and
rol
fcom
rcr
out
xor
in
hlt
dec
jne
hlt
adc
mov
pop
ins
iret
sti
sbb
jle
mov
fst
sbb
mov
xor
push
inc
je
or
idiv
mov
adc
sbb
pop
xlat
popa
mov
mov
xchg
jno
mov
or
shr
aad
adc
mov
mov
sbb
or
jnp
dec
cdq
shl
jnp
inc
push
aaa
adc
ds
bound
push
mov
dec
pop
jp
dec
jne
(bad)
cli
ds
push
pop
push
push
add
dec
inc
add
mov
gs
movs
mov
inc
ds
mov
adc
retf
inc
loopne
int3
and
outs
js
js
dec
inc
daa
adc
aas
adc
int3
xchg
(bad)
in
dec
outs
imul
cmp
popf
sbb
xbegin
dec
jb
jno
add
daa
add
cmps
fst
sbb
repz
jp
jb
xor
pop
js
int
jo
es
inc
dec
stc
xor
push
pop
dec
pop
fcompp
push
cmp
sub
daa
fnstcw
mov
fldln2
dec
ins
adc
and
and
fadd
cwde
fsubp
or
dec
mov
aad
stos
pop
add
inc
sub
movs
std
jo
es
fbld
fmul
js
and
data16
(bad)
aas
and
sar
add
inc
ins
arpl
jno
mov
push
sub
push
pusha
mov
mov
pop
cmp
not
je
or
call
in
in
fbld
adc
or
in
fisubr
xor
mov
das
jmp
jae
(bad)
xor
jae
outs
(bad)
mov
pusha
scas
mov
add
std
jnp
cdq
dec
outs
pop
into
addr16
test
push
push
imul
xchg
test
sbb
xchg
mov
sti
mov
mov
in
add
jo
sub
adc
es
std
arpl
push
sbb
ja
into
enter
xor
add
adc
movs
icebp
lods
and
dec
clc
jl
push
mov
adc
push
lea
out
jge
push
cmp
cmp
push
ret
popf
push
pop
xchg
mov
sub
cmp
aad
stos
push
jbe
ss
(bad)
mov
dec
iret
(bad)
frstor
jecxz
cmp
fld
push
pop
jbe
sub
pusha
or
xlat
push
jmp
cmps
pushf
pop
nop
adc
sbb
lea
sbb
cdq
int3
(bad)
jmp
fisubr
jecxz
icebp
lea
inc
adc
inc
mov
sub
and
out
or
scas
adc
arpl
push
mov
pop
stc
jmp
push
push
or
add
in
mov
fld
cmp
rcr
adc
lock
fs
leave
fst
jmp
push
in
xchg
push
test
jge
scas
xchg
and
(bad)
mov
fs
jae
sbb
jp
mov
stc
mov
int
and
(bad)
fimul
adc
scas
jo
jp
jl
cs
mov
adc
inc
lds
cli
imul
enter
in
jae
sbb
mov
jmp
enter
mov
xchg
iret
rcr
and
into
mov
xor
inc
xchg
pop
pop
ror
jae
add
into
adc
inc
(bad)
jmp
pop
sahf
lods
xchg
sbb
jp
iret
jg
and
das
sbb
jmp
inc
rcl
push
cdq
add
or
into
push
(bad)
mov
fild
or
jns
cld
out
pop
daa
xchg
xor
mov
push
cmp
mov
dec
inc
adc
jge
sbb
setns
fldenv
sbb
sub
jge
add
pop
pop
or
call
fidiv
rcl
mov
jb
out
retf
or
loope
pusha
jae
test
loope
dec
adc
movs
sbb
jg
mov
add
jecxz
xchg
push
out
mov
push
in
cmc
loop
pop
aas
stos
mov
stos
ja
xor
loope
div
shl
ins
push
or
lahf
fist
mov
and
repz
mov
(bad)
out
in
mov
(bad)
pop
cmp
sti
test
retf
rol
repz
and
inc
cli
pop
jmp
ss
inc
out
mov
movs
test
rol
mov
xchg
popa
retf
mov
mov
test
sub
dec
fwait
ret
pop
jne
sahf
outs
and
push
dec
jo
mov
sub
push
cli
mov
push
adc
jge
jl
cmp
cmc
js
imul
push
sub
xchg
mov
sub
fwait
adc
add
fsubr
sti
shl
jecxz
dec
mov
pop
jmp
fstp
jl
scas
addr16
pop
and
outs
popa
sbb
call
mov
sahf
neg
mov
lahf
xchg
xor
ficom
div
push
add
inc
repz
fidivr
stc
ja
adc
stos
nop
mov
into
xlat
retf
call
dec
add
std
sub
xchg
lods
adc
mov
mov
mov
jmp
dec
push
dec
std
pop
mov
jo
mov
out
mov
inc
push
outs
je
dec
xor
push
mov
(bad)
mov
add
into
or
or
outs
test
outs
fwait
xchg
and
sbb
test
rol
mov
mov
cs
test
stos
and
fdiv
cmps
ja
cmp
pop
aaa
mov
fld
xchg
xor
(bad)
aaa
cmp
sbb
add
pusha
int
dec
test
jmp
mov
addr16
sub
loopne
xchg
int
pop
aad
xor
fwait
or
sbb
cmp
int
inc
jbe
scas
out
mov
adc
dec
sub
fidivr
xchg
rcl
into
xlat
dec
sti
popa
cmp
rcr
add
push
jge
sbb
push
dec
pop
stc
aaa
cmp
dec
std
fst
outs
mov
arpl
xchg
ins
repnz
(bad)
ss
mov
shl
sbb
shl
sub
aam
sbb
xchg
out
mov
dec
xor
pop
(bad)
inc
sub
out
fwait
cmps
repnz
call
call
xchg
imul
fwait
or
xchg
fdivr
push
or
pushf
rol
push
ficomp
pop
stc
pushf
rol
xor
sbb
mov
mov
lods
cmp
mov
push
jp
push
push
cld
inc
mov
adc
(bad)
sahf
std
xor
inc
ret
mov
(bad)
xor
adc
inc
out
or
inc
mov
inc
idiv
stos
mov
int
neg
pop
jmp
out
fs
pop
es
aad
pop
icebp
sti
ja
mov
jns
clc
out
add
xchg
inc
jg
push
or
adc
xor
cmp
sub
repz
leave
in
ins
aaa
lea
pusha
mov
imul
loop
in
(bad)
repnz
outs
or
push
push
cmps
inc
fcomp
popf
mov
jmp
loope
dec
addr16
xor
sub
das
inc
push
pop
dec
xchg
into
das
(bad)
push
mov
mov
adc
mov
bound
jg
pop
or
ret
xor
xchg
adc
xchg
mov
mov
inc
xor
nop
arpl
dec
or
mov
leave
fcom
scas
sbb
pop
adc
dec
sahf
loope
inc
daa
jns
sbb
mov
cmp
and
dec
pop
mov
and
pop
daa
add
clc
enter
and
imul
cmc
nop
aaa
mov
imul
pushf
jp
pop
jae
cmc
adc
stc
xor
test
jns
std
jnp
add
retf
sti
sbb
pop
and
cs
das
stos
imul
push
in
nop
xor
xor
dec
jecxz
leave
pop
cmp
or
xchg
adc
nop
loopne
aam
test
add
iret
cmp
sub
pushf
push
add
aas
or
push
pop
mov
aad
stos
aaa
bound
ror
inc
jecxz
mov
pop
or
sbb
daa
mov
call
test
loope
sbb
sub
jg
add
fistp
pop
jp
mov
xlat
jge
enter
mov
or
adc
inc
mov
jl
cmp
or
push
(bad)
add
pushaw
aaa
push
add
das
sub
jne
adc
dec
dec
fs
(bad)
ds
call
mov
add
inc
clc
xchg
sti
or
inc
push
fs
and
clc
(bad)
jge
fcomp
cwde
cmp
inc
in
xor
leave
xchg
out
stos
sar
push
loopne
cs
and
push
mov
test
div
xor
jno
fucomp
xor
mov
aas
mov
push
sahf
stos
popa
pop
inc
dec
les
mov
loop
mov
stos
sbb
popf
ss
lock
fs
(bad)
cmp
xchg
mov
ja
sbb
jne
mov
movs
fwait
mov
lea
or
fist
jmp
outs
xor
push
int
jge
pusha
xchg
clc
xor
jl
pop
jg
inc
add
sar
jmp
jne
hlt
sub
push
ds
adc
lahf
jmp
jl
sub
jns
rol
jbe
ds
and
cmp
adc
jb
mov
adc
aas
dec
and
popa
push
out
test
fsubrp
mov
mov
xchg
or
out
aas
aad
mov
inc
lea
aam
test
ins
pop
cld
(bad)
jge
dec
xchg
or
cmp
inc
fsub
cmp
jb
inc
shr
jl
shr
ret
or
hlt
cmp
movs
jmp
test
mov
mov
sub
out
popf
xchg
cmp
cwde
mov
and
cmps
push
pop
mov
imul
inc
adc
jecxz
cld
jb
mov
mov
jb
in
or
pop
out
xor
pop
push
xlat
mov
jle
and
jnp
sbb
or
cli
jmp
xor
mov
dec
js
ins
sbb
add
xchg
pop
aas
inc
aad
out
and
inc
addr16
fld
dec
(bad)
mov
gs
test
neg
and
mov
cmp
mov
data16
leave
or
out
mov
(bad)
and
inc
(bad)
dec
popa
add
mov
ins
cs
jecxz
cmp
stos
lds
add
gs
dec
inc
cld
shl
test
aaa
and
repnz
and
jno
fcom
mov
cwde
pop
push
in
mov
jg
fwait
and
fmul
mov
mov
pop
repnz
jne
xor
stos
pop
(bad)
jae
call
mov
test
ficomp
jo
out
mov
pop
add
cdq
out
cmp
in
xor
in
(bad)
jg
enter
xor
dec
xor
cmp
push
mov
ins
fdivp
and
xor
push
mov
dec
fadd
outs
nop
call
or
xchg
ror
xor
cmp
fcomi
push
sbb
jns
mov
push
mov
jl
int
mov
aam
cmp
das
mov
(bad)
add
lea
push
pop
mov
mov
ret
out
xchg
pop
outs
pop
aaa
fnsave
fs
jno
ins
and
stc
pushf
sub
test
out
xchg
adc
call
mov
jnp
or
push
push
mov
jge
mov
sub
in
inc
cmp
add
and
sub
outs
mov
ss
xor
(bad)
in
push
adc
add
rcr
push
push
mov
stc
test
out
jl
push
test
and
jns
xchg
xchg
cld
mov
nop
xchg
lea
jbe
ins
push
lds
iret
sub
js
cmps
cmps
fucomip
les
dec
xor
jne
sub
retf
dec
adc
push
scas
pop
push
xchg
cmc
pop
mov
xchg
push
fnclex
xchg
jge
mov
mov
rcl
cmps
pusha
imul
jl
push
mov
cdq
xor
ret
enter
scas
gs
arpl
enter
push
rol
add
mov
jle
out
push
ret
add
retfw
dec
mov
leave
and
js
stos
loopne
adc
(bad)
arpl
mov
sub
xchg
mov
shr
adc
inc
jnp
dec
loope
cdq
cs
lahf
add
rcl
mov
adc
rcl
and
mov
pop
and
push
or
mov
call
es
mov
fist
call
add
or
retf
dec
add
cld
in
mov
retf
and
loop
enter
(bad)
mov
pop
in
out
test
jns
or
sub
aam
mov
sbb
or
ret
cmp
mov
and
dec
add
and
pusha
mov
inc
cmp
shl
cmp
daa
xchg
retf
(bad)
pusha
das
pop
cmp
repnz
cmp
inc
dec
inc
(bad)
xor
adc
mov
pop
add
sub
or
ret
or
shl
xor
ins
std
dec
mov
push
fnstenv
mov
popf
add
hlt
push
sbb
pop
pusha
or
ins
mov
adc
fistp
out
sub
ret
fsub
pop
call
imul
and
pop
js
scas
or
and
ret
mov
xor
pop
fs
popf
sub
mov
mov
xor
es
xor
pop
call
sbb
ror
xor
pop
bound
(bad)
ja
sub
fisubr
lods
pop
aam
cmp
bound
arpl
push
pop
cld
mov
jecxz
jp
mov
mov
pop
cmps
test
cmps
repnz
loopne
or
imul
aaa
out
scas
cdq
outs
in
aad
add
ja
sbb
pusha
mov
aad
test
in
ds
retf
cld
ret
repnz
pop
rcr
pop
out
mov
pop
fs
out
sub
(bad)
(bad)
xchg
push
bound
inc
sub
ds
cmps
(bad)
sbb
arpl
gs
loope
push
lahf
imul
pop
sbb
mov
sub
mov
push
lds
xchg
dec
sub
mov
mov
out
repnz
xor
mov
add
int3
jno
jmp
scas
xor
div
push
dec
dec
xlat
push
adc
inc
clc
ins
repnz
jbe
cmp
cmp
dec
cwde
sbb
pop
imul
add
cwde
fs
push
mov
sbb
xor
ins
fsubp
or
xchg
fidiv
ret
add
inc
xchg
ds
fdivr
dec
data16
sub
mov
movs
inc
sub
push
pop
test
scas
mov
(bad)
adc
sar
cmc
je
mov
sub
mov
mov
mov
ficomp
push
out
mov
inc
into
shl
and
into
xlat
sbb
and
and
mov
fild
pop
jno
lea
(bad)
xor
pop
push
adc
push
stos
(bad)
pop
xor
dec
sti
sbb
lock
ret
cmc
jbe
call
(bad)
xor
mov
sar
lahf
ds
jmp
cli
jbe
les
ret
or
mov
dec
pop
mov
hlt
aas
jge
movs
fisubr
cld
cld
not
pop
and
int
xchg
sub
je
hlt
mov
mov
inc
lods
sar
lods
mov
pushf
mov
inc
push
jg
fistp
fist
out
cli
xchg
scas
or
dec
ja
mov
pop
pushf
inc
in
pop
test
test
imul
arpl
add
adc
sub
popf
inc
mov
pop
test
bound
(bad)
pop
pop
cmp
jnp
loopne
or
call
aad
sbb
mov
inc
xor
and
out
test
jmp
push
and
add
int
setl
adc
retf
aas
(bad)
shl
sub
dec
cdq
jne
(bad)
lds
(bad)
mov
or
cmp
and
js
mov
lea
(bad)
js
std
shl
mov
add
or
bound
jecxz
jge
pop
inc
sbb
inc
fs
lds
in
jp
cld
mov
push
js
or
push
pop
xlat
shr
mov
out
mov
cdq
imul
xchg
push
imul
fist
sub
lea
add
(bad)
push
push
push
arpl
jmp
rcl
cmp
aaa
je
mov
xor
mov
ja
test
mov
sub
and
ficomp
push
aas
xlat
push
cmp
ja
cmp
mov
xchg
xchg
rcl
sub
mov
inc
dec
xor
ficomp
jg
scas
push
jno
inc
inc
ror
cdq
mov
push
lods
idiv
hlt
arpl
fwait
mov
js
adc
icebp
in
cwde
(bad)
mov
jbe
or
jae
and
sub
cwde
mov
push
arpl
mov
sub
(bad)
cmp
vmread
repz
inc
lea
mov
movs
outs
dec
adc
sub
mov
cmp
les
push
dec
(bad)
mov
psrad
and
add
dec
hlt
xor
call
enter
ins
or
xor
loope
sbb
cli
repz
movs
sub
shl
xor
shl
ja
daa
into
add
mov
das
sub
sbb
(bad)
xor
mov
scas
or
aaa
scas
pop
mov
fistp
jne
dec
lods
dec
test
inc
pop
mov
popf
add
mov
mov
ins
test
pop
in
scas
xchg
ja
les
push
imul
sbb
cmp
mov
ror
out
ror
push
pusha
sbb
mov
adc
ja
cmp
cmp
add
stc
test
or
mov
push
lods
pop
das
movs
iret
stc
imul
and
jne
ror
sub
idiv
imul
adc
dec
xor
iret
or
(bad)
jg
push
cmp
loope
dec
enter
test
or
dec
ds
in
in
mov
mov
movs
shr
lds
mov
mov
mov
daa
pop
dec
in
dec
and
add
push
inc
jge
sbb
push
jnp
movs
scas
mul
ret
in
push
inc
pop
push
and
sub
mov
mov
xchg
fiadd
fs
xor
aaa
push
and
(bad)
fdiv
jnp
jle
mov
sahf
out
xor
aad
fld
inc
jmp
xchg
push
xchg
in
pop
push
call
jge
fcmovnbe
mov
sub
mov
fsubr
dec
aas
xchg
out
jg
jg
and
aad
movs
aaa
sbb
(bad)
ins
jg
lods
out
aam
mov
ffreep
jne
popf
xchg
pop
pop
mov
call
inc
fld
cdq
loop
xor
push
mov
mov
xchg
out
loope
inc
ret
hlt
pop
adc
sub
jb
out
sti
ret
ins
in
jge
push
xchg
sbb
or
push
fcmovb
sub
sahf
test
hlt
mov
inc
popf
push
push
cmp
cmp
xor
push
or
ins
pop
ss
fisubr
shr
div
jns
pop
add
test
das
cmps
mov
call
add
sti
(bad)
push
sub
data16
mov
push
inc
test
push
cli
arpl
pop
retf
test
push
add
repz
outs
pop
sub
fmul
jmp
sahf
or
pop
stos
push
dec
push
and
loopne
ret
(bad)
xor
cmps
addr16
scas
lea
inc
add
or
xor
scas
adc
jle
cmp
das
ins
outs
jmp
retf
or
lahf
sbb
inc
retf
pop
outs
adc
mov
push
inc
cmp
popf
push
add
sub
sbb
sub
cmps
ss
add
jbe
(bad)
add
scas
fistp
loopne
dec
(bad)
mov
push
outs
jle
les
pop
ja
ret
ss
js
out
mov
or
(bad)
lahf
adc
es
sbb
add
pop
arpl
popa
inc
or
xchg
call
inc
lea
call
cmp
sub
js
cld
or
xchg
sub
jae
adc
in
jmp
sbb
nop
lods
retf
ins
ret
xchg
call
mov
xor
or
mov
sti
test
dec
cmps
lea
jmp
rcl
data16
adc
and
mov
push
sub
push
bswap
loope
pop
sub
sbb
mov
adc
test
(bad)
cli
inc
push
adc
and
pop
jge
xchg
or
mov
pop
jge
mov
sar
push
faddp
jns
pop
shl
daa
push
dec
fcomp
sbb
pop
(bad)
call
and
add
push
dec
stc
or
or
movs
pop
psubsw
icebp
sbb
dec
xchg
push
(bad)
fcomp
sbb
fmul
and
push
ret
addr16
repz
in
es
pop
xchg
pop
int3
popa
test
aam
shl
ins
shl
inc
adc
imul
cmp
arpl
add
xchg
sbb
mov
sub
fisttp
pop
popf
and
dec
adc
inc
or
jg
sub
out
cmp
outs
jbe
stc
mov
jne
out
test
mov
out
iret
pop
xlat
shl
cvtps2pd
or
inc
lea
pop
cmp
fistp
stos
push
lods
xchg
fdivr
jnp
push
xchg
xor
mov
vpacksswb
xor
inc
lds
aas
ret
(bad)
les
(bad)
jnp
call
loopne
or
sub
fcomp
xchg
or
ins
hlt
xchg
pop
test
out
mul
sbb
ret
sub
push
aam
add
push
lods
call
or
mov
add
cli
repz
loop
retf
invd
jmp
push
mov
sub
pop
push
inc
and
dec
add
(bad)
stc
scas
dec
mov
add
mov
pop
jmp
ret
shr
push
cmp
pop
mov
retf
fst
push
xor
jno
jns
mov
imul
retf
adc
xor
push
cmps
lods
cs
jp
je
mov
dec
repnz
sbb
(bad)
jp
cwde
push
ins
int3
cmp
cmp
scas
fucomp
aaa
jno
retf
dec
fcomi
das
inc
and
aad
and
ins
movs
mov
out
sbb
ret
call
lds
cmc
lods
ror
mov
adc
outs
jle
push
cli
mov
xchg
dec
bound
outs
xbegin
push
enter
int3
popa
lahf
cmc
cmp
and
outs
mov
cld
push
and
sti
ins
or
pop
mov
xor
xor
ja
cmps
and
cmp
ds
out
mov
sbb
mov
not
and
ja
and
mov
repz
xchg
ret
nop
lock
mov
push
xchg
pop
stos
mov
in
pop
xchg
or
inc
add
jmp
mov
or
into
jge
mov
jp
and
jno
mov
fidiv
call
std
int
(bad)
jnp
add
dec
inc
adc
adc
stc
xor
mov
inc
(bad)
pop
std
push
iret
and
jg
stos
pushf
fldenv
adc
jne
mov
aam
imul
ficomp
add
adc
(bad)
fld
sbb
sub
xor
icebp
or
xor
retf
js
add
cli
test
jbe
ret
das
loope
jg
nop
jbe
fnsave
adc
and
inc
cmp
and
(bad)
popf
hlt
shl
shl
jns
adc
or
jmp
cmp
xor
ins
rcl
aas
call
loope
pop
jge
scas
in
dec
push
mov
jge
sbb
adc
jmp
push
ins
mov
add
call
outs
mov
xchg
mov
call
les
movs
aad
xor
dec
or
fwait
mov
add
mov
and
mov
dec
fwait
aam
adc
push
cmp
mov
fld
out
add
shl
icebp
mov
cmp
and
xor
leave
cld
ret
pushf
fldenv
jp
dec
pusha
mov
jmp
fidivr
movs
shr
popa
iret
add
mov
cwde
pop
push
fwait
jmp
cmp
xchg
popa
mov
sbb
sahf
cdq
nop
push
in
jmp
push
pop
dec
aaa
push
(bad)
and
cmps
in
cmp
or
ins
and
in
cmp
mov
pop
std
mov
test
adc
icebp
adc
retf
add
popa
test
pop
inc
sbb
mov
xchg
js
fadd
mov
cld
fstp
mov
add
mov
jmp
adc
adc
not
inc
cld
(bad)
sub
pusha
(bad)
adc
clc
mov
fild
push
add
loope
test
sub
xchg
pusha
loope
add
out
cmp
stos
pop
add
shr
fwait
pop
jmp
popf
std
ret
push
pop
imul
jae
push
push
inc
call
jbe
mov
dec
xchg
jb
fldenv
mov
fld
push
inc
sahf
inc
or
popf
out
xor
jae
scas
lods
cmp
mov
xchg
js
fidivr
mov
out
das
pop
jbe
sub
loop
mov
pop
or
mov
leave
sbb
stc
mov
xchg
mov
push
add
push
aaa
xchg
ss
(bad)
out
inc
inc
jb
xchg
push
scas
or
jge
push
xchg
sub
sbb
jp
lds
mov
out
mov
jg
jge
jb
or
push
sahf
sub
add
inc
xor
xchg
jge
adc
cmp
lahf
inc
xlat
sub
mov
sub
push
push
push
mov
cli
dec
pop
in
repz
repz
adc
rol
sub
dec
dec
adc
mov
sbb
xor
movs
movs
movs
aas
push
hlt
sub
hlt
jle
add
retf
xchg
in
jge
jecxz
adc
mov
lods
cmps
jno
and
sbb
cmp
pop
fs
scas
adc
int
inc
pushf
into
(bad)
push
and
cmps
js
xor
adc
arpl
mov
fbstp
mov
aam
iret
in
push
mov
pop
(bad)
mov
jb
rcl
jp
pop
mov
and
jmp
xchg
sahf
or
hlt
dec
mov
xchg
imul
repz
call
xchg
and
lock
mov
mov
cmps
push
hlt
sub
dec
fst
jp
fdiv
sbb
sbb
ins
jb
js
jmp
movs
and
idiv
xchg
es
jno
xor
add
push
xor
mov
pushf
pop
pusha
pop
and
push
mov
movs
ds
dec
xor
in
jecxz
(bad)
sub
ins
stos
push
cmp
aaa
outs
xchg
stc
and
stc
push
pop
inc
push
jb
shr
and
dec
dec
adc
nop
call
mov
ffreep
addr16
retf
lahf
fistp
inc
stos
mov
stos
adc
sbb
mov
in
mov
lods
jnp
ffree
and
mov
mov
outs
inc
retf
xchg
fstp
add
das
push
push
or
test
int3
mov
xor
cs
mov
jecxz
not
in
cmp
ins
pop
dec
xor
add
lods
je
in
test
mov
push
jo
or
retf
dec
lods
nop
in
pop
scas
scas
xor
in
and
int
push
dec
dec
lods
jne
push
gs
or
or
fimul
mov
movups
or
xor
cmp
mov
jmp
imul
mov
cmp
lock
mov
jno
es
jno
sti
mov
xchg
pusha
shl
dec
cmp
sbb
sbb
(bad)
push
push
cmps
repnz
push
push
call
lods
xor
cmps
xor
ror
fisub
rol
mov
sub
ret
cs
test
jno
and
out
js
sub
pop
mov
les
arpl
mov
xlat
or
out
pop
jb
mov
sbb
nop
hlt
fidiv
inc
sti
dec
mov
dec
xor
imul
adc
jns
adc
xor
jae
sbb
add
daa
(bad)
bound
sbb
fiadd
ins
fwait
outs
push
mov
nop
nop
sar
sahf
lds
(bad)
mov
sbb
test
out
mov
stc
mov
out
jl
stc
mov
adc
cmp
push
xor
icebp
xchg
pop
push
ror
cmps
or
rol
inc
daa
test
push
nop
xor
imul
adc
mov
cmp
mov
nop
mov
dec
sbb
ds
shr
(bad)
nop
in
movs
lahf
xchg
cmps
and
push
in
sbb
jnp
mov
add
pop
pop
jle
jp
dec
jecxz
aad
ja
dec
stos
push
fadd
std
push
cmp
inc
or
dec
or
push
fld
mov
mov
ds
push
jnp
arpl
ss
enter
in
retf
xchg
mov
sbb
inc
into
xchg
fsubr
jnp
mov
in
mov
push
les
das
or
push
mov
push
popa
cmp
add
ss
stos
scas
es
cs
aam
scas
rol
add
rcl
and
pusha
ins
mov
call
mov
scas
sub
(bad)
cld
sbb
dec
test
enter
gs
adc
push
mov
ret
sub
popf
jecxz
call
dec
jmp
in
jle
sub
shl
adc
dec
adc
nop
or
dec
dec
sbb
and
jge
pop
mov
jb
mov
push
inc
jle
jne
cli
xchg
neg
cmps
push
lea
xor
inc
cmp
(bad)
jnp
js
and
jns
fistp
loop
(bad)
jne
test
adc
or
(bad)
xor
inc
sbb
mov
xor
imul
lahf
adc
jno
push
test
xchg
jae
nop
fld1
mov
jg
jne
out
or
wrmsr
cmp
adc
std
rcr
fldenv
imul
add
retf
push
mov
aam
cmp
cmp
pop
jge
enter
lods
cmc
push
mov
enter
or
div
or
stos
outs
inc
pop
neg
pop
jle
sub
aaa
rcr
ss
mov
inc
pop
jmp
jb
push
dec
jno
xchg
push
add
loop
sub
xor
mov
aas
push
addr16
mov
cmp
add
mov
mov
pop
push
pusha
jp
dec
(bad)
or
fwait
mov
ins
call
mov
inc
lods
jmp
cmp
test
pop
xor
leave
dec
pusha
imul
dec
dec
cmp
mov
mov
and
lock
mov
bnd
fwait
aas
in
adc
push
mov
dec
ja
add
push
jb
sub
mov
popa
pop
push
jp
mov
nop
clc
in
(bad)
mov
sbb
inc
movs
adc
rcr
and
cli
push
fstp
hlt
movs
ret
xor
cld
in
cdq
mov
mov
arpl
mov
jl
dec
dec
push
cmp
addr16
pop
dec
jg
cmp
(bad)
mov
arpl
mov
or
mov
popf
iret
jle
mov
fwait
std
int3
and
enter
push
mov
ss
popf
add
push
and
mov
sbb
cwde
lods
aaa
dec
cli
add
xchg
pop
push
mov
jge
scas
and
dec
xlat
mov
enter
push
xor
dec
jbe
jnp
xchg
rcl
scas
mov
dec
adc
xchg
mov
loopne
and
pushf
jb
xor
int3
or
dec
mov
pop
xchg
sub
push
mov
arpl
pop
lods
adc
or
mov
mov
jl
repz
sub
(bad)
mov
daa
mov
sub
sub
dec
ins
out
popf
mov
push
scas
pop
cs
jns
pop
cmp
mov
mov
sbb
fmul
push
and
scas
cmps
test
repz
adc
jne
call
les
iret
ds
in
sahf
push
cmp
test
or
cmc
mov
aad
cmp
push
or
scas
out
mov
mov
js
mul
xchg
sbb
add
jnp
cmp
cli
retf
aam
fisub
je
inc
dec
pop
xchg
mov
pop
out
sub
ret
add
popa
fidivr
scas
xor
arpl
or
mov
inc
fisttp
add
enter
pop
pop
jbe
sahf
test
mov
and
ror
mov
cmc
stc
jmp
and
adc
xchg
jo
call
or
xlat
shr
dec
out
jmp
or
out
adc
cmp
cmp
adc
jns
cld
xchg
xchg
push
pop
jl
(bad)
sub
scas
scas
push
push
inc
das
lods
sahf
outs
mov
inc
mov
(bad)
add
dec
push
mov
sub
fadd
push
js
stos
pop
mov
add
mov
dec
in
xchg
push
movs
fild
outs
jecxz
mov
adc
mov
iret
mov
adc
stos
outs
or
leave
mov
inc
mov
xor
jl
jo
jno
clc
mov
sub
lock
mov
xchg
leave
sub
xor
mov
jge
jmp
sbb
jne
jle
push
stos
ret
lods
pop
push
(bad)
mul
jne
ret
jge
and
outs
les
in
adc
clc
pop
pop
fimul
test
cmps
mov
bound
xchg
xor
fst
fcom
call
dec
inc
cmps
add
outs
sti
(bad)
call
add
call
test
(bad)
retf
xchg
cmps
inc
cmp
nop
in
es
sub
mov
test
add
mov
xor
cmp
int3
mov
mov
stos
pop
xchg
ret
mov
fucom
retf
sar
in
pop
fcmovnb
pop
dec
push
jmp
jne
inc
not
fst
scas
cdq
jb
test
sti
fwait
sub
inc
and
xchg
imul
dec
ror
jg
mov
pop
xchg
or
add
jge
ror
pop
(bad)
outs
das
mov
and
fadd
xor
cmp
movs
test
sub
mov
push
inc
movs
pop
or
jl
mov
or
and
jmp
cdq
out
cmp
fs
mov
das
scas
mov
xchg
and
pop
neg
jp
jl
sbb
jle
std
daa
pop
imul
or
dec
fadd
cmp
xchg
jecxz
call
(bad)
movs
fdivrp
push
add
mov
loopne
xchg
popf
in
(bad)
sbb
retf
dec
jns
and
mov
adc
push
push
inc
clc
mov
daa
int3
imul
inc
and
retf
mov
lea
sti
jl
pop
fwait
scas
xor
in
jl
mov
retf
(bad)
jae
test
icebp
stc
jo
cdq
mov
xchg
fwait
pusha
inc
jns
ins
cmp
mov
dec
sub
cli
call
jno
sub
in
xlat
arpl
out
push
pushf
add
ss
mov
or
mov
add
rcl
loopne
or
mov
stc
js
outs
xchg
ja
jnp
mov
add
loope
push
test
ds
gs
mov
inc
shl
xchg
es
mov
cmp
fcom
push
xor
cmp
adc
xchg
sub
fidivr
ss
mov
sbb
enter
in
rol
mov
ja
ret
fistp
mov
xor
jmp
push
mov
xlat
sbb
jp
retf
imul
aaa
retf
fcmovbe
mov
(bad)
push
ja
or
arpl
sahf
jg
pop
adc
mov
es
and
mov
mov
pop
mov
movs
sbb
sbb
fistp
cmps
call
movs
push
dec
pop
or
fnstcw
sar
push
fcmove
xchg
inc
fst
out
fucomip
sbb
out
cs
les
sub
into
mov
std
imul
loopne
sbb
or
out
lods
jmp
jle
pop
cdq
ins
sbb
fisub
jle
aaa
inc
mov
mov
mov
mov
pminsw
retf
inc
pop
add
push
jle
sub
or
add
shl
mov
push
push
jbe
shl
dec
mov
and
fisttp
inc
cmp
mov
mov
jb
xor
(bad)
scas
dec
xor
or
sub
fwait
push
call
out
sahf
cli
fistp
sti
out
pop
jl
add
lds
ins
inc
test
push
and
das
or
push
stc
dec
jp
shr
mov
push
mov
pop
mov
lods
pop
push
sbb
scas
inc
aas
or
jb
cdq
icebp
mov
addr16
aaa
mov
scas
xor
or
pushf
das
mov
xor
retf
pushf
gs
aad
(bad)
fcom
inc
ret
hlt
stos
retf
fstp
ror
sub
xlat
jbe
fadd
imul
dec
cdq
icebp
xchg
adc
push
sbb
cmp
add
sbb
pop
les
ins
pop
lea
add
jmp
mov
and
or
xor
sar
xchg
mov
(bad)
es
jl
std
fsub
pmaxsw
sbb
mov
or
cmp
jns
into
mov
inc
jno
repnz
mov
mov
jmp
xchg
stos
mov
cs
xlat
mov
xor
push
jmp
out
xchg
pusha
addr16
cmovp
js
add
out
mov
loope
xchg
fsubr
cmp
sbb
cli
test
sahf
es
mov
pop
xor
cdq
mov
pop
push
mov
mov
clc
pop
dec
cmps
push
cmps
sbb
xchg
cwde
ins
xor
lock
loope
sub
adc
push
or
iret
push
ins
jle
cld
shl
xchg
sub
inc
mov
xor
jecxz
jge
dec
cmp
push
mov
mov
xor
mov
cmp
vmaxsd
ror
or
mov
lahf
inc
movs
mov
fwait
dec
inc
cmp
jecxz
in
cmp
ret
mov
stos
sbb
pop
mov
psrld
push
imul
movs
jns
ret
and
test
mov
xchg
cli
mov
adc
mov
add
dec
cmp
mov
test
inc
jmp
mov
xchg
rcl
xor
in
loop
xchg
mov
(bad)
jbe
sub
sub
inc
cmc
mov
xchg
cmp
xchg
push
std
cmp
fisttp
mov
inc
cld
sbb
xor
test
xchg
out
jno
dec
(bad)
mov
add
idiv
mov
in
push
cmps
cmp
in
cmp
cmp
pop
add
mov
arpl
aam
xchg
jbe
stos
jge
xor
aaa
aam
push
jae
adc
push
jmp
push
aad
sub
clc
out
pushf
sbb
push
add
pop
inc
ss
push
hlt
inc
in
icebp
pop
dec
cdq
data16
(bad)
jge
xchg
out
loopne
xchg
jno
xchg
push
loope
jns
movs
inc
lds
jnp
sbb
dec
call
ja
lds
fwait
mov
lock
loope
sar
pushf
fisubr
mov
in
push
inc
scas
pushf
jne
inc
aaa
inc
inc
push
push
mov
dec
cmp
xchg
jnp
hlt
add
mov
add
adc
call
mov
ins
cld
pushw
and
les
out
cmc
mov
fsub
pop
dec
or
cwde
popa
repnz
inc
inc
mov
mov
fild
and
jl
stos
shl
sub
in
xchg
push
mov
cmps
test
xchg
and
cmp
dec
retf
int
sbb
aad
shl
mov
jp
xchg
adc
cmp
add
or
imul
pushw
mov
ja
jge
int
jns
shr
and
dec
cmp
mov
push
jecxz
repz
jmp
pop
inc
inc
out
jae
dec
inc
push
or
xor
fist
data16
dec
mov
sar
fiadd
sub
and
bound
in
xchg
jecxz
mov
mov
xor
out
jle
shl
sti
pop
xchg
mov
sbb
call
pusha
out
(bad)
jp
dec
and
pop
sbb
lods
(bad)
fs
mov
mov
mov
dec
sahf
je
mov
ja
(bad)
jne
mov
pop
stc
shl
cmp
jno
dec
mov
push
pop
push
mov
push
clc
(bad)
mov
cmp
adc
loopne
ror
scas
clc
sub
add
push
xchg
xor
mov
xchg
xchg
pop
push
cmp
enter
cmp
pop
dec
inc
pushf
mov
fcmovnbe
shl
adc
jg
mov
loop
add
xchg
xor
mov
mov
pop
pop
imul
mov
cmc
jne
sar
test
and
into
xor
inc
pop
in
cld
sub
lahf
inc
nop
xchg
ds
cwde
mov
ret
jbe
mov
mov
call
and
or
repnz
push
pop
pusha
or
fsubr
test
movs
jo
cmps
ret
cmps
cmp
test
(bad)
outs
aad
fldenv
or
xlat
jb
dec
daa
sti
aaa
(bad)
out
hlt
mov
fisttp
imul
push
or
aaa
jo
ret
fcmovu
mov
in
adc
hlt
(bad)
mov
(bad)
retf
sti
mov
out
movs
pop
out
es
xchg
dec
cmps
addr16
mov
sbb
dec
pop
dec
(bad)
jle
cmp
pop
push
fistp
fidiv
sbb
test
push
add
ins
out
movs
call
adc
cdq
inc
rcl
cmp
mov
xor
lea
and
xchg
cmp
push
push
add
sti
scas
je
and
inc
cmp
test
pop
xor
pop
inc
pop
das
jb
or
cmp
lock
sbb
movsx
cmp
adc
les
ror
jle
inc
arpl
in
push
mov
jmp
jns
jns
sub
(bad)
add
arpl
cli
popf
out
stos
mov
ins
inc
mov
pop
push
mov
and
mov
scas
jmp
push
outs
mov
push
loopne
ret
out
outs
retf
stos
inc
or
inc
add
ret
xchg
inc
imul
nop
(bad)
lds
ret
(bad)
jg
jno
mov
into
cli
jno
push
mov
adc
popa
(bad)
leave
jo
xchg
(bad)
daa
or
test
js
sbb
xchg
push
mov
mov
es
std
fpatan
stc
shl
pop
jl
ja
dec
xchg
and
in
jge
mov
add
pop
cmp
mov
scas
dec
(bad)
xor
(bad)
mov
dec
mov
pop
push
push
ja
es
jmp
scas
pop
or
jne
cmovge
mov
mov
sar
retfw
iret
or
cli
cmp
arpl
push
test
or
push
xchg
das
add
pop
inc
addr16
mov
(bad)
fldenv
pop
sub
lahf
or
scas
rcr
pop
repnz
test
pop
mov
mov
add
or
push
jbe
xchg
xor
add
rcl
add
sbb
lds
mov
or
mov
outs
push
ret
movs
dec
es
fadd
dec
mov
aad
xchg
sbb
cdq
test
push
jno
stos
popa
push
pop
mov
outs
adc
pushf
sbb
mov
xor
or
(bad)
cmp
xor
mov
sbb
out
fadd
(bad)
(bad)
(bad)
test
xchg
xchg
inc
cmp
mov
sub
pop
out
mov
in
xchg
xlat
mov
(bad)
add
je
daa
jnp
xchg
inc
jmp
mov
and
loop
jb
mov
add
adc
inc
outs
mov
dec
cdq
jle
popf
test
push
cmps
pop
cs
sub
mov
iret
retf
add
(bad)
fcmovnbe
imul
sar
bound
jns
mov
inc
inc
out
addr16
push
mov
in
sbb
fist
pop
in
cmp
mov
cli
and
loopne
inc
xchg
xor
hlt
loopne
push
mov
push
dec
enter
fldcw
scas
xor
xchg
scas
add
mov
add
xor
movs
mov
sbb
loopne
push
sbb
xchg
test
es
(bad)
(bad)
or
cwde
sbb
retf
loop
sub
dec
sub
mov
push
mov
jg
inc
cmp
pop
pop
(bad)
and
and
dec
ret
inc
imul
lock
imul
outs
pop
pop
jl
jecxz
(bad)
cmp
pop
cmps
xchg
mov
inc
cli
out
lods
dec
mov
dec
(bad)
xchg
shl
out
push
leave
fcomp
inc
cmp
xchg
aad
jb
mov
cdq
scas
sub
cmp
rcl
adc
mov
mov
push
ds
cmp
addr16
fldenv
(bad)
sub
push
xor
pusha
dec
rsm
into
mov
arpl
jb
cwde
out
cmp
cld
pop
inc
dec
push
sub
jg
dec
xchg
test
or
and
xchg
imul
cmp
adc
shl
cwde
mov
xor
leave
pop
pop
xchg
leave
cs
addr16
and
cli
push
call
sbb
cmp
ror
add
pushf
add
mov
shl
loop
fistp
mov
movs
mov
xchg
(bad)
jmp
xor
cmp
popa
push
jno
xchg
je
js
fadd
imul
minps
cmp
adc
push
fsub
sbb
cmp
dec
in
test
in
add
dec
retf
mov
mul
xlat
xchg
mov
stc
sar
test
lock
(bad)
jo
mov
sub
lock
push
gs
dec
inc
fwait
cmp
loope
sbb
pop
in
loopne
into
rcl
in
leave
mov
sub
and
adc
fwait
inc
adc
mov
fst
std
xchg
fld
pop
jbe
sbb
ret
in
jp
inc
sbb
cmps
cmps
sbb
ins
call
fdivr
movs
mov
imul
gs
cmp
pushf
sub
sub
cmp
stos
adc
(bad)
shl
stc
jbe
or
push
jne
sub
push
ret
lahf
adc
pop
mov
imul
cmp
loop
xchg
(bad)
sbb
sbb
test
mov
stos
adc
test
sbb
jb
jecxz
sub
aam
leave
lea
loope
adc
out
xor
(bad)
(bad)
hlt
dec
lahf
cmp
les
sub
pop
pop
test
in
mov
jle
mov
xchg
inc
pop
dec
and
mov
rcl
loop
pop
pop
les
in
jg
cmp
add
mov
mov
icebp
dec
rcl
cmp
add
pop
mov
jl
mov
out
mov
popa
push
repnz
mov
(bad)
jb
push
loop
push
popa
in
jle
mov
fs
cs
xchg
pop
xor
test
push
mov
(bad)
pushf
mov
cmp
int
adc
mov
push
dec
pop
loope
inc
cld
jmp
sbb
daa
cmp
ret
ins
xchg
fst
fst
ja
leave
cmp
fidiv
xlat
mov
outs
bound
and
dec
push
stos
repz
ja
push
popa
arpl
mov
inc
cld
push
div
push
mov
movs
push
ret
cmp
jb
mov
mov
mov
outs
stos
add
mov
push
lods
rcl
jbe
sbb
pop
add
jge
pop
(bad)
outs
sar
jo
clc
lahf
or
jo
push
jne
shr
fsubr
sub
xchg
test
mov
push
stc
and
jb
repnz
mov
fnstcw
es
and
jl
inc
push
sub
scas
ins
pop
mov
aaa
push
inc
mov
mov
inc
mov
in
sub
or
inc
add
mov
jnp
jecxz
push
lods
dec
pusha
test
mov
jl
sar
imul
push
mov
dec
(bad)
(bad)
lea
cmp
jne
aam
inc
jb
mov
pop
rcl
in
sbb
adc
ret
mov
into
jg
sbb
clc
test
out
dec
lds
sub
cmp
sahf
ficom
outs
scas
rcl
add
xchg
sub
mov
inc
sbb
push
pushw
pop
adc
inc
loope
add
ss
rcr
and
cmp
loope
mov
loope
fisubr
lods
mov
data16
pusha
mov
in
mov
das
iret
xchg
jbe
adc
jmp
(bad)
jnp
not
les
push
pop
add
sub
popa
ret
jge
sbb
adc
inc
aaa
ins
vmovups
loop
int
or
and
aas
lea
inc
sub
adc
and
scas
lock
mov
cmp
xchg
xchg
cmp
sbb
ficomp
jle
stos
mov
jecxz
out
push
arpl
pop
sti
or
fsub
fld
mov
dec
pop
iret
mov
jno
movs
inc
add
push
push
test
add
stc
xchg
sub
push
xor
shr
dec
int
xor
xor
mov
and
pop
out
and
jbe
sbb
lea
(bad)
xor
(bad)
stc
or
icebp
lods
stos
xor
mov
leave
std
ret
add
mov
fistp
pop
jmp
das
in
stos
sub
test
sti
xor
sbb
and
inc
cmp
rcr
ja
dec
dec
mov
dec
fld
nop
loopne
mov
mov
mov
scas
call
fldenv
(bad)
(bad)
mov
aam
or
push
add
push
adc
div
inc
call
cmp
(bad)
aaa
pop
aad
in
push
test
push
call
fild
mov
cmp
inc
shr
pusha
outs
iret
cmp
test
int3
jb
push
push
xor
in
adc
sahf
and
jbe
xor
jmp
inc
jnp
jmp
mov
scas
in
loopne
cmps
retf
mov
cli
cmp
dec
sub
movs
jns
mov
stos
lods
neg
std
ja
movs
(bad)
ds
dec
nop
mov
push
sbb
(bad)
cmp
xor
icebp
xchg
cmp
lock
das
dec
adc
sub
arpl
inc
adc
pop
adc
(bad)
cmp
mov
jno
xor
cmp
ins
mov
pusha
inc
jb
dec
addr16
mov
cmp
pop
push
imul
and
and
test
cmps
push
pusha
dec
out
mov
dec
fdivr
(bad)
pushf
xchg
jno
mov
pop
mov
push
shl
sbb
and
mov
lfs
xchg
xrelease
mov
sbb
addr16
pop
sbb
inc
out
pop
inc
or
push
ss
mov
mov
cld
ret
cmp
(bad)
cmps
into
(bad)
push
and
adc
(bad)
cmp
xor
movs
rcr
pushf
sub
pop
mov
jnp
xchg
(bad)
loopne
(bad)
scas
or
shr
inc
mov
das
pop
dec
imul
cmp
dec
xor
push
cli
push
xchg
pop
dec
mov
jne
ins
push
cmp
inc
fistp
stos
enter
inc
enter
out
fcomp
dec
jge
sub
xor
dec
jnp
mov
mov
pop
sub
shl
adc
inc
pop
jge
and
lods
iret
sar
movs
int
mov
(bad)
sbb
xor
popa
ret
cwde
push
clc
es
pop
sub
aas
sbb
and
movs
mov
mov
stos
repz
push
jmp
push
sbb
or
dec
pushf
add
sub
fimul
lock
pop
cwde
lods
add
cmp
mov
gs
pop
jle
xor
movs
sbb
mov
ss
mov
outs
xchg
xor
jg
xor
jne
popa
call
jl
js
repnz
stc
mov
fidivr
arpl
push
test
outs
dec
push
jp
inc
xor
fs
pop
sub
dec
std
test
mov
push
std
push
test
add
pop
loop
out
lods
jnp
mov
mov
add
icebp
aam
loopne
jbe
dec
sub
fnstenv
xor
cwde
xchg
mov
fst
cmps
jge
add
sbb
cmp
call
mov
out
in
adc
test
adc
inc
cwde
std
test
rcr
mov
push
adc
cld
adc
jnp
iret
gs
add
mov
bound
push
aas
cmp
aas
or
jecxz
imul
sbb
je
rcr
xchg
inc
push
hlt
lods
neg
lock
or
and
sub
adc
xchg
mov
ss
inc
(bad)
jl
jmp
stos
or
imul
stos
and
jo
pop
(bad)
inc
cmps
lock
or
aas
mov
push
leave
sbb
pop
xchg
mov
sub
mov
mov
arpl
push
pop
in
push
bound
(bad)
and
or
dec
add
repz
cwde
push
mov
imul
in
push
xchg
in
xor
inc
(bad)
stos
mov
data16
xchg
stc
mov
jnp
rcl
mov
stos
sub
bound
or
sub
retf
shr
popf
in
ds
cmp
loopne
push
and
cmp
retf
mov
push
inc
cmp
imul
sub
dec
daa
cmp
or
retf
out
pop
pop
inc
imul
(bad)
fsub
retf
add
ja
xchg
out
inc
jmp
and
mov
and
jge
pushf
ds
int3
or
int3
inc
call
mov
mov
ret
icebp
lods
mov
imul
and
cmp
push
sub
retf
jecxz
das
push
adc
mov
arpl
xchg
dec
and
mov
dec
jo
xchg
outs
jae
mov
add
shl
(bad)
in
das
scas
nop
lea
and
js
jne
and
test
mov
(bad)
rcl
adc
call
cmp
add
mov
add
in
or
fsubr
pop
jmp
ror
jne
sti
test
or
push
jl
psrlw
mov
popa
out
fdiv
aad
sub
push
push
cmp
pop
or
movs
clc
shl
ds
mov
adc
mov
adc
retf
pop
cmps
sahf
lahf
or
pop
cwde
call
shr
cmp
loop
je
out
mov
and
cmp
ss
and
mov
sub
mov
mov
push
hlt
out
sub
pusha
cmp
ins
fnstenv
sbb
retf
mov
jo
cdq
leave
jnp
sbb
xor
shr
cli
sbb
inc
sar
xor
test
popa
hlt
leave
mov
data16
ds
outs
dec
dec
sbb
ds
fs
pop
cmp
dec
jnp
cli
jle
xchg
lea
jmp
or
jl
movs
call
call
sub
sbb
cdq
sti
je
in
push
mov
xlat
pop
ret
ds
pop
pusha
xchg
and
sub
add
add
ret
sub
xlat
mov
cli
adc
gs
mov
shl
pop
inc
push
mov
inc
mov
cmp
jge
cli
gs
dec
lock
in
movs
sub
push
cmp
and
mov
mov
test
pop
cwde
mov
fwait
xchg
sahf
fisttp
dec
(bad)
or
push
sahf
rol
mov
fdivrp
lahf
aam
ss
sahf
gs
cmps
mov
sar
rcr
add
rcr
test
ins
aad
jl
int
add
cwde
ins
adc
(bad)
sahf
shl
inc
jg
int3
jge
rcr
lea
movs
test
sub
and
icebp
and
clc
fisub
jl
iret
sub
outs
fisubr
xchg
int
scas
ins
jmp
inc
jl
inc
and
sbb
hlt
les
adc
cli
or
inc
cmps
add
lahf
xchg
rcl
in
test
loopne
inc
push
clc
push
(bad)
out
pop
jp
inc
add
xor
xor
shl
and
and
xchg
aas
ja
(bad)
popa
xor
(bad)
addr16
or
ds
ret
outs
jecxz
arpl
gs
inc
dec
jge
and
jno
cmp
push
sbb
cmp
imul
cmps
out
cmp
and
outs
pushw
es
adc
dec
add
and
and
add
movs
pop
sbb
aad
or
mov
xchg
in
inc
lea
add
lds
mov
lock
pop
rcl
xor
sbb
xchg
scas
mov
mov
mov
in
bound
dec
test
movs
nop
in
sub
sar
(bad)
push
fnstenv
lahf
cmps
xor
add
inc
xlat
into
cmps
or
jmp
jp
pop
mov
xor
fisttp
push
ret
xchg
shr
fdivr
mov
push
cmps
sub
arpl
sbb
add
and
cmps
mov
jecxz
jecxz
dec
jno
pop
sub
xchg
cmp
rcl
dec
inc
mov
jno
mov
dec
adc
add
adc
sbb
fstp
pop
retf
push
cmp
sbb
jl
dec
and
(bad)
std
jl
cmp
sub
dec
push
fs
(bad)
scas
jp
(bad)
in
add
and
sahf
fs
add
std
rol
and
add
inc
fdiv
mov
or
xor
jmp
add
jl
mov
dec
aad
xchg
arpl
mov
clc
loopne
ss
xor
sbb
inc
sub
cld
jnp
dec
and
(bad)
ss
retf
inc
ror
push
jl
call
inc
xchg
rcr
hlt
dec
inc
ret
sub
jns
retf
test
fld
mov
xchg
cmp
and
pop
leave
pop
retf
sub
out
(bad)
aad
add
in
xlat
inc
sbb
lods
mov
rcl
xor
retf
ds
cli
mov
js
lea
js
fxch
stc
(bad)
push
sub
lods
icebp
pop
shl
inc
gs
dec
mov
sbb
addr16
add
lea
fmul
xchg
pop
push
xor
cld
stc
and
pop
fistp
jp
adc
(bad)
(bad)
not
jns
arpl
ins
or
pusha
adc
push
inc
and
add
sub
popf
and
(bad)
cmp
push
push
gs
ret
push
and
test
sub
cmp
sub
or
jo
adc
aad
and
stc
xchg
ins
xor
and
add
jl
pushf
adc
ficom
dec
iret
and
xor
ret
mov
int
(bad)
test
mov
cld
ret
and
mov
xor
cmp
push
cmps
das
stos
mov
(bad)
mov
pop
sbb
add
cwde
aam
lahf
push
std
sbb
sub
xor
test
stos
inc
inc
mov
popf
out
(bad)
jmp
pop
je
xchg
mov
pop
or
fucomip
sub
jae
addr16
cli
icebp
pop
jns
xor
lods
out
std
jmp
fisubr
push
mov
jno
addr16
push
cmp
or
aaa
push
or
jno
inc
push
aaa
test
dec
cs
sub
adc
xchg
ins
es
(bad)
in
outs
sar
gs
icebp
dec
xchg
mov
and
mov
pop
add
and
scas
shl
je
daa
jnp
popf
or
mov
inc
imul
push
cmp
xchg
sub
pop
cmp
shr
jmp
scas
scas
xor
add
adc
inc
push
dec
outs
(bad)
jmp
mov
xchg
(bad)
into
mov
cmp
(bad)
outs
and
stc
mov
pop
hlt
ja
xchg
xor
jns
or
xor
mov
fidiv
sbb
cmp
sbb
repz
(bad)
cmp
mov
in
push
dec
stos
cmp
xor
push
dec
in
mov
test
aam
or
and
std
mov
adc
inc
mov
std
sub
adc
mov
xchg
arpl
pusha
or
(bad)
neg
mov
sbb
xor
inc
leave
mov
cmp
fs
push
(bad)
and
and
out
push
pop
stc
push
sub
enter
xor
(bad)
pop
call
not
jl
or
scas
adc
xor
cmps
dec
pop
cli
adc
jle
lods
dec
call
jg
sub
neg
fdivrp
mov
sbb
cli
sbb
inc
ins
dec
jp
or
(bad)
dec
jbe
inc
aaa
add
popa
mov
jmp
leave
dec
or
js
rcr
inc
push
sbb
es
enter
aas
rcr
lds
mov
std
and
ret
mov
pop
pop
mov
or
test
out
int
mov
cmps
fcomi
push
push
pop
mov
movs
ss
cdq
xchg
push
cmp
cmp
(bad)
leave
(bad)
pop
push
inc
mov
push
xchg
retf
mov
test
out
pop
popf
outs
addr16
stos
jge
fild
js
leave
xlat
push
and
fwait
cwde
cmp
lods
fld
lea
sbb
stc
xchg
xchg
adc
sub
and
retf
jb
mov
fistp
aas
js
mov
sbb
les
add
pop
adc
loope
(bad)
out
xchg
dec
cmp
xchg
in
outs
xlat
cdq
cwde
sbb
xchg
mov
or
add
pop
pop
js
lods
in
cmc
mov
out
outs
pop
push
cmp
rol
cli
(bad)
add
test
movups
js
sbb
push
jmp
loope
mov
pop
outs
sbb
pop
test
mov
int3
mov
loopne
bound
les
push
or
cmp
ins
xchg
cmp
retf
xchg
aaa
or
(bad)
ins
das
pop
pop
mov
cmps
lods
xor
fstp
sbb
(bad)
push
aam
pushf
gs
mov
xchg
aas
mov
ins
adc
out
aad
shl
dec
loop
jmp
stc
inc
mov
sub
push
nop
js
and
mov
iret
mov
(bad)
call
icebp
jmp
pop
jg
out
dec
fwait
xchg
addr16
cmp
leave
nop
out
scas
jae
add
ins
dec
and
and
adc
leave
dec
pop
and
sbb
xor
aam
and
xor
aam
sub
out
jnp
xchg
push
inc
jecxz
and
addr16
cmp
loopne
hlt
rsqrtps
sbb
or
call
(bad)
cli
std
and
lds
mov
dec
push
test
ins
jl
mov
rol
cmp
mov
leave
inc
xchg
sub
mov
inc
push
jmp
jno
inc
xchg
inc
jg
ror
loop
cmp
into
in
stc
inc
std
mov
shl
mov
pop
out
adc
mov
arpl
lods
inc
movs
rcl
cwde
cmc
inc
mov
dec
xor
pop
in
sbb
cmp
cmp
in
sbb
or
lods
sub
inc
mov
in
jmp
aas
nop
mov
mov
cdq
ins
cmp
retf
mov
mov
adc
(bad)
sub
or
pop
retf
mov
stos
adc
xchg
pop
fmul
sar
sbb
or
in
mov
dec
dec
ror
or
fwait
js
mov
mov
pop
into
jmp
test
pop
in
pop
push
lea
daa
add
and
fbstp
sbb
jg
movs
jae
iret
aaa
inc
xor
mov
push
inc
xor
mov
shr
push
int
dec
ja
xor
mov
mov
push
push
inc
xor
es
fsub
repnz
imul
sbb
leave
mov
cmps
inc
push
jmp
inc
add
xchg
mov
(bad)
mov
in
fyl2xp1
pushf
test
sub
sub
nop
add
mov
loopne
jmp
and
packuswb
xor
sti
cmps
adc
outs
mov
daa
cs
rol
jns
xchg
jne
push
rol
fisub
mov
xchg
pop
and
test
cmp
das
mov
mov
cs
sub
mov
mov
dec
dec
hlt
xor
fldenv
fidiv
mov
or
jmp
retf
mov
adc
mov
jg
popa
seta
jmp
mov
in
into
or
jg
push
lods
mov
js
sub
cmp
into
sbb
cmp
adc
xor
daa
loopne
dec
test
sbb
mov
push
lods
mul
in
fs
mov
xchg
xor
or
xor
cwde
cmp
pop
(bad)
dec
fmul
ss
push
cwde
aam
dec
out
cmp
jmp
mov
mov
pop
out
pop
sti
scas
mov
adc
test
in
daa
out
dec
test
xchg
sti
mov
push
(bad)
mov
add
adc
jle
ins
shl
xor
xchg
int3
ins
jnp
push
jp
(bad)
stos
jmp
pop
fabs
jge
cmps
mov
mov
fs
inc
dec
mov
jl
enter
outs
imul
xor
js
cmp
ss
(bad)
in
ret
lahf
pop
add
inc
jnp
xchg
loope
adc
pop
or
int3
or
(bad)
jns
repnz
dec
out
iret
gs
mov
pop
bound
lea
jle
movs
stc
mov
inc
out
stos
in
fisubr
ss
or
cmp
xchg
sbb
mov
and
enter
mov
sahf
repnz
pop
pop
icebp
adc
pop
sbb
fsubr
adc
xchg
cli
scas
push
lock
outs
retf
cwde
adc
lds
jo
clc
rcr
push
in
dec
dec
fs
xchg
loope
xor
test
push
xchg
sar
iret
aam
sub
ins
and
scas
dec
xor
in
pop
sub
jl
jecxz
mov
mov
jecxz
dec
fdiv
xor
mov
stc
fisttp
mov
cmp
cmp
and
fs
sbb
jmp
icebp
loopne
shl
aad
nop
push
add
cdq
dec
adc
(bad)
push
repnz
fsubr
jns
cmp
and
mov
fst
cmps
in
jmp
nop
mov
aas
pop
test
jg
outs
mov
or
sahf
idiv
imul
fild
sub
cmp
push
retf
lahf
and
add
in
scas
nop
mov
pop
pop
or
mov
in
push
test
js
arpl
cmc
jb
sub
sub
mov
mov
dec
(bad)
mov
pop
xchg
nop
jne
pop
sbb
dec
in
int
mov
test
mov
(bad)
pushf
jns
(bad)
sub
shr
sbb
sbb
sub
sbb
std
fstp
mov
retf
push
fisub
in
mov
jmp
xchg
xchg
sbb
leave
leave
test
outs
xor
adc
mov
sar
lahf
lods
in
jg
cli
add
mov
pop
jl
ror
dec
scas
xchg
xor
jne
sbb
add
xor
push
adc
add
xchg
inc
popf
jmp
shr
in
out
aas
int
sub
(bad)
scas
(bad)
rcl
xchg
stos
fcomp
or
pop
ror
test
mov
mov
mov
mov
or
push
ret
ins
mov
push
pop
and
mov
add
js
out
dec
daa
push
hlt
mov
aad
fdiv
mov
mov
xchg
xchg
call
push
sbb
iret
movs
pop
hlt
push
fcom
ds
outs
push
inc
pop
lea
scas
fld
xchg
add
pop
jmp
adc
aam
mov
test
jg
ins
cmp
add
(bad)
sbb
test
mov
jmp
fstp
dec
push
gs
add
mov
scas
loopne
loopne
push
aas
inc
cmp
mov
movs
lahf
data16
ret
dec
or
sti
repnz
in
inc
dec
ror
dec
dec
sub
test
clc
inc
jae
dec
popf
cmp
lahf
(bad)
cmc
lods
(bad)
jb
test
scas
xchg
add
cwde
sahf
push
ret
call
sbb
mov
adc
inc
mov
repz
xor
lds
pop
inc
mov
xchg
aad
jge
jne
and
adc
xor
mov
addr16
bound
or
iret
xchg
jo
cmps
addr16
fsub
mov
(bad)
ja
xchg
push
jp
into
int
mov
push
sbb
int3
rcl
lods
push
inc
jo
repz
xor
xchg
das
push
pop
xor
push
fwait
push
dec
cmps
inc
sbb
mov
or
iret
pop
popf
out
dec
mov
push
cmp
mov
imul
mov
and
int
mov
test
call
and
and
daa
iret
adc
dec
ror
popa
fdivrp
or
cmp
out
fwait
add
pusha
test
inc
pop
bound
mov
push
push
and
dec
out
jle
mov
fstp
jb
push
mov
mov
add
and
sar
adc
daa
in
ja
dec
sub
add
dec
and
mov
xchg
cs
push
js
pop
outs
(bad)
jp
jmp
mov
xchg
ja
jge
mov
aad
lds
fwait
push
adc
push
pop
jae
adc
enter
sub
sub
js
sbb
add
arpl
pop
loope
inc
push
popa
mov
pop
ins
push
cmp
and
sub
div
add
retf
sub
bound
add
dec
stc
repz
mov
fcom
pop
sbb
push
add
enter
pop
iret
sub
mov
jmp
out
outs
ret
in
jb
xchg
js
xchg
mov
outs
jne
jmp
shl
push
jae
cmp
adc
xchg
dec
jle
xor
nop
mov
or
push
stos
nop
loop
cmp
xor
xor
daa
pop
jne
xchg
pop
fmul
je
lods
and
arpl
mov
nop
dec
push
mov
push
jo
push
leave
cld
pop
lods
adc
jbe
das
lods
mov
add
daa
adc
out
xor
sti
add
retf
adc
in
js
shr
shl
dec
rcl
gs
inc
cmp
aad
xchg
add
leave
es
dec
and
dec
xchg
xchg
push
stos
jle
es
pop
mov
push
xchg
sub
push
mov
lea
xor
scas
dec
sar
lods
in
call
and
bound
or
retf
xchg
or
cmp
or
push
gs
xchg
fstp
cmp
clc
inc
adc
or
jb
idiv
mov
mov
icebp
(bad)
push
push
adc
call
xchg
sbb
sub
jmp
dec
jg
mov
dec
sahf
clc
ds
call
and
pop
gs
inc
popf
jmp
repz
ins
jne
ds
jb
out
fucomi
out
pop
xchg
in
repz
jl
sbb
mov
cld
data16
call
sub
out
xchg
imul
dec
out
sbb
adc
pop
xchg
push
mov
or
into
fidivr
mov
outs
sbb
mov
std
sub
push
mov
jns
add
jb
sub
inc
xchg
(bad)
arpl
or
add
arpl
cs
hlt
jecxz
inc
test
jg
fs
xchg
sbb
mov
imul
fcomi
out
das
iret
call
cpuid
sub
mov
sub
jge
xchg
dec
ret
mov
lods
mov
dec
aam
xchg
inc
pop
test
mov
or
jecxz
xor
inc
adc
sbb
hlt
push
mov
addr16
cmps
(bad)
loope
fnstenv
push
sub
fsubr
test
lods
sub
in
xor
mul
jae
js
jg
arpl
mov
rol
sbb
jmp
sbb
imul
push
je
mov
fwait
and
add
int
mov
loop
arpl
cmp
ins
adc
jge
pop
je
push
add
pop
popa
inc
cmp
mov
in
mov
pop
cld
inc
jb
add
out
icebp
push
sbb
int
xchg
imul
xor
daa
mov
fsubr
pushf
retf
std
pop
adc
mov
popa
inc
pop
pop
cli
lea
jnp
mov
call
(bad)
popf
stos
jnp
lahf
dec
ins
fdivr
cs
xlat
test
add
push
mov
pop
jae
jmp
loop
imul
mov
inc
aam
adc
loopne
inc
cmp
push
outs
(bad)
outs
pop
stos
sbb
shl
jge
loope
dec
retf
aas
and
loope
pop
(bad)
clc
fwait
sub
dec
jo
mov
xchg
adc
(bad)
fnsetpm(287
adc
sub
(bad)
xor
mov
cwde
adc
inc
je
enter
test
pop
inc
movs
int3
mov
cmp
lea
adc
pop
data16
sti
mov
(bad)
in
neg
test
jl
mov
cmp
lds
(bad)
ins
retf
pop
mov
xchg
rcl
add
rol
push
mov
imul
pop
leave
ja
cmp
or
stc
jle
push
retf
jecxz
mov
xchg
movs
cwde
inc
loopne
out
pop
neg
out
push
fwait
imul
fild
movs
lods
(bad)
out
inc
sar
rcr
inc
add
inc
lock
out
outs
ret
jmp
arpl
sub
adc
sbb
xchg
stos
enter
dec
mov
add
xchg
and
popa
xchg
addr16
mov
cmc
test
retf
push
dec
jbe
ins
stc
hlt
xchg
push
out
icebp
jle
cli
jp
xor
int3
jns
xchg
jo
sub
shl
xchg
repnz
ror
xor
stos
dec
inc
sub
jge
aas
outs
jno
or
pop
lea
mov
xchg
push
iret
ret
iret
sub
cmp
aaa
js
cmp
dec
js
das
push
(bad)
stos
idiv
jo
int3
mov
inc
sub
xlat
fidivr
js
outs
dec
test
xor
xchg
push
ja
mov
mov
out
mov
mov
add
mov
mov
mov
sbb
add
xor
stc
dec
into
inc
inc
cmp
call
test
or
call
sbb
dec
out
int
loope
sub
(bad)
imul
dec
adc
cmp
repz
or
outs
movs
sub
pop
jb
ret
jmp
push
mov
push
inc
pop
in
arpl
xchg
mov
(bad)
xor
xor
mov
scas
fcmovnb
leavew
mov
pop
hlt
push
dec
cmp
sbb
dec
popa
shr
hlt
mov
xchg
jg
or
dec
imul
test
sub
shr
addr16
pop
cli
jnp
add
or
movs
or
xchg
aas
dec
mov
stc
sub
mov
jne
int3
mov
outs
inc
test
xchg
add
inc
in
call
and
jle
mov
test
dec
std
xor
loopne
fprem
and
sbb
pusha
out
cli
scas
lahf
push
jmp
mov
cmps
mov
mov
inc
in
ret
mov
in
stos
add
iret
add
and
cmc
jae
adc
sbb
and
jp
dec
xor
or
or
and
mov
mov
out
pop
icebp
movs
jns
mov
sub
pop
jno
enter
sub
icebp
jae
jne
out
jne
idiv
pop
adc
and
shr
iret
mov
jae
xor
shl
shl
sbb
cld
jmp
push
mov
jl
out
mov
ins
jbe
ins
mov
and
and
push
xor
cmp
mov
out
(bad)
cmc
test
jle
xchg
ret
lds
dec
gs
movs
cmps
fdivr
inc
dec
cmp
in
adc
adc
in
retf
add
arpl
sub
pop
outs
movs
repnz
sub
test
or
xchg
int
adc
adc
mov
sub
cs
(bad)
fwait
inc
rcr
xor
inc
and
js
fistp
add
test
sbb
fwait
imul
jecxz
mov
mov
arpl
cmp
outs
out
in
push
xor
jo
push
cli
mov
dec
adc
xchg
enter
mov
sbb
pop
inc
cmp
cdq
mov
das
mov
sbb
neg
(bad)
mov
js
jge
and
sbb
movs
adc
cmps
jp
mov
ret
push
pop
jg
test
pop
and
cmps
in
adc
push
int
cs
int
aas
xor
movs
inc
ror
push
shr
mov
xor
nop
cs
push
inc
or
data16
adc
std
clc
sub
mov
xor
fsub
ret
popa
push
mov
int
add
and
lea
iret
mov
cli
dec
push
or
ror
xor
test
xchg
pusha
xchg
imul
cdq
in
(bad)
mov
call
cli
jo
outs
ficom
in
test
cmp
push
push
mov
fcmovne
pop
push
jbe
push
pop
jo
fs
jns
xchg
adc
call
pop
inc
sub
push
imul
dec
push
loopne
mov
in
outs
xor
(bad)
dec
cmp
pop
push
pop
push
icebp
jmp
fbstp
jp
mov
sbb
popa
leave
jnp
out
mov
pop
xchg
pop
das
push
pop
outs
inc
je
popf
(bad)
outs
shl
inc
push
cld
cmp
fldenv
int3
inc
cmp
test
cmp
xor
mov
js
add
xchg
cmp
cmp
ds
pop
(bad)
loopne
push
loop
sti
mov
pop
sub
cmp
ror
add
fwait
sub
into
daa
fs
add
rcl
jle
lods
(bad)
ja
in
push
inc
(bad)
lock
in
xor
mov
cmp
ss
sbb
mov
xor
jae
push
and
add
int
addr16
mov
(bad)
ss
xor
jl
mov
push
scas
inc
test
or
sbb
mov
add
lods
scas
jp
ins
mov
fist
cmc
sub
ins
fisttp
(bad)
(bad)
sahf
loope
shl
(bad)
fsubr
dec
xchg
jo
(bad)
in
sub
mov
jmp
push
xor
cmc
sti
jl
jns
dec
and
mov
fstp
xor
clc
dec
jne
bnd
add
mov
adc
shr
call
lahf
mov
(bad)
xor
test
dec
fwait
pop
stc
mov
ins
sub
popa
clc
cmp
jns
adc
push
dec
xor
cdq
pop
iret
movs
lock
dec
sub
jmp
add
pop
fstp
xor
popa
test
or
icebp
adc
push
lods
mov
in
dec
movs
inc
pop
fwait
pop
adc
mov
lods
sub
(bad)
ins
loopne
fidivr
and
test
adc
ret
mov
xor
pop
jl
pop
(bad)
nop
test
and
sbb
repnz
or
cdq
sbb
xchg
pop
pop
scas
jno
fist
xchg
js
mov
or
shl
xchg
inc
jle
inc
pop
sbb
das
loopne
and
imul
inc
jmp
mov
mov
fistp
mul
inc
fidivr
out
push
lock
cmp
adc
or
inc
sar
fst
adc
stos
sbb
(bad)
pop
xor
inc
pop
push
test
jecxz
scas
xchg
mov
cdq
movs
xchg
imul
inc
and
pop
je
inc
cmp
push
(bad)
mov
cmp
outs
dec
sbb
push
dec
pushf
(bad)
scas
dec
xchg
add
jno
outs
fnstenv
mov
pop
cmp
xor
push
xor
xchg
ds
ins
ins
cmps
push
out
jle
shr
fidivr
(bad)
sub
int
mov
stos
or
cwde
fbstp
inc
or
mov
das
cmp
cdq
pusha
mov
scas
push
pop
and
xchg
mov
mov
fcom
shl
mov
fs
adc
jmp
or
pushf
push
retf
(bad)
enterw
fcomp
js
leave
mov
sbb
dec
dec
movs
cmp
pop
ins
outs
pop
sub
bnd
in
or
xchg
or
(bad)
fistp
jnp
add
mov
cmp
push
outs
fnsave
dec
mov
inc
and
xchg
and
cmp
not
fldcw
jns
loop
stc
(bad)
mov
xchg
scas
dec
inc
lds
mov
in
int
cmps
push
dec
add
pop
xor
sti
stos
repz
dec
fs
ret
dec
out
jle
fwait
dec
ds
mov
imul
and
pop
xlat
cmps
xor
mov
ja
jge
cmp
cld
data16
aad
out
mov
pop
in
add
cs
inc
shr
hlt
stos
lahf
sti
inc
inc
fdivr
push
call
adc
xor
add
mov
das
std
shl
pop
cs
lds
dec
ja
push
(bad)
mov
cli
pop
clc
jmp
mov
push
add
cmc
jno
sahf
xor
rcr
mov
xchg
jnp
sub
cli
fcmovb
xlat
in
sti
inc
imul
sar
mov
mov
out
jecxz
cmp
xor
push
ins
ret
jmp
fbld
add
xor
inc
shr
sbb
adc
push
loopne
mov
xchg
cli
(bad)
fst
dec
aas
mov
dec
das
mov
push
xor
ins
pop
pop
dec
inc
push
mov
(bad)
xchg
pop
cmp
cli
xor
fdivr
inc
mov
xor
mov
rcl
push
push
addr16
inc
sub
pop
cmps
mov
test
pop
popa
aam
sbb
cmps
add
sbb
nop
jmp
xlat
lods
outs
xchg
fidiv
jmp
addr16
jge
or
cmp
or
add
and
sbb
pop
jne
repz
lea
xor
mov
xlat
add
jg
jnp
(bad)
loopne
sub
xchg
rol
adc
int3
retf
xchg
fs
jmp
fmul
mov
test
repz
jns
xchg
out
pop
call
inc
and
and
pop
aam
xor
jae
outs
shl
mul
mov
xor
ror
inc
lea
adc
ret
inc
dec
cmp
mov
push
cwde
cwde
sbb
pop
fsubr
and
push
aaa
mov
or
popf
aad
call
mov
cmp
enter
mov
test
pop
(bad)
inc
dec
das
and
xchg
lea
das
xchg
jmp
mov
gs
mov
cmc
cdq
arpl
ins
add
add
(bad)
mov
test
add
scas
ret
mov
(bad)
jo
lock
in
mov
mov
call
xchg
shr
dec
ret
(bad)
xchg
fisttp
mov
push
mov
sub
fidivr
jno
pop
jl
cld
fist
xchg
in
popa
ror
fcomp
les
cmp
sbb
adc
xchg
jbe
adc
fisttp
into
call
loope
repnz
aam
or
xchg
or
leave
jmp
cmp
xor
jmp
mov
inc
ins
data16
sar
popa
inc
stc
int
mov
cli
fld
jecxz
movs
jl
arpl
aam
cli
jge
sbb
jl
scas
shl
xchg
je
mov
pop
xchg
mov
xchg
jp
xchg
sahf
ret
mov
std
aas
into
jmp
test
mov
sar
push
or
pushf
mov
lock
fldenv
sub
and
sbb
jp
inc
scas
sahf
std
cmc
in
gs
jl
ret
and
adc
aaa
cli
jle
mov
push
mov
pop
cdq
retf
add
dec
cmp
cmc
pusha
cld
retf
popa
loop
mov
daa
xor
push
jge
mov
mov
(bad)
mov
push
loop
mov
mov
je
int
inc
mov
jle
addr16
pop
addr16
jmp
sub
test
sbb
xchg
pop
or
xor
dec
cwde
dec
shr
scas
xchg
xchg
outs
xchg
bound
lds
ss
pop
xor
sahf
push
popf
(bad)
push
mov
xor
mov
sbb
xchg
dec
ficom
add
mov
shl
dec
xchg
loope
mov
test
nop
shl
xor
movs
shl
jo
ficomp
fimul
xchg
jo
push
xor
outs
or
loopne
inc
movs
fbld
in
std
stc
mov
test
retf
test
out
mov
xor
cmc
outs
pop
or
add
xchg
hlt
leave
mov
in
mov
in
mov
sub
push
sub
lds
fdivr
ror
mov
push
pop
aad
mov
call
sub
out
cmp
test
sbb
out
sar
ins
loop
jge
std
mov
(bad)
scas
push
push
or
adc
cmp
pop
das
cs
movs
test
test
push
xor
or
and
pop
sbb
adc
sbb
cmc
mov
jne
push
or
push
pusha
mov
out
mov
popf
ins
mov
jno
jns
mov
(bad)
loop
mov
mov
dec
scas
jnp
out
and
jo
jno
and
or
loopne
jo
xchg
mov
ja
jmp
(bad)
inc
dec
sub
div
cld
ja
adc
jle
jo
lods
xchg
in
mov
lods
sbb
mov
pusha
mov
push
test
std
cmps
ret
mov
in
xchg
test
movs
clc
out
push
loopne
sub
cmp
pusha
mov
scas
adc
push
xlat
and
mov
jmp
ficom
cmps
enter
div
pop
or
in
stos
arpl
inc
int
fisub
sub
sbb
or
or
movs
aas
xor
out
icebp
imul
sbb
fdivr
mov
shl
aad
mov
fst
sub
inc
lods
js
mov
enter
call
lea
icebp
aas
aam
push
pop
icebp
xchg
dec
cmp
xor
jb
sbb
in
popf
scas
icebp
test
xchg
movs
push
sbb
into
sub
jl
sbb
inc
adc
inc
push
push
or
call
loope
cmp
call
xor
cmc
and
in
jp
(bad)
sbb
xor
call
lahf
and
xor
push
pop
inc
dec
xor
fwait
adc
in
shr
add
sub
faddp
sub
sub
inc
sti
int
jno
sbb
sub
inc
(bad)
xor
inc
add
sahf
and
mov
push
jo
sti
jns
jne
jno
jne
or
cli
(bad)
stos
in
mov
adc
or
fisttp
and
retf
dec
popa
in
add
adc
pop
and
call
stc
mov
mov
inc
push
push
fisubr
mov
push
or
pop
(bad)
addr16
inc
xchg
or
pop
scas
in
shr
stc
xor
jns
cli
jmp
cld
(bad)
addr16
adc
call
(bad)
in
sbb
mov
div
call
shr
movntq
fnstenv
xchg
mov
jle
cmp
push
adc
sub
add
repz
cmp
push
push
jno
dec
add
mov
mov
cmp
sub
mov
ss
adc
outs
enter
stos
xchg
cmp
inc
mov
imul
dec
xchg
call
or
jecxz
mov
ss
jmp
jecxz
push
ret
movs
add
xor
es
xor
pusha
inc
rcr
push
push
mov
xor
ja
fistp
add
lock
and
cld
adc
jmp
and
lahf
mov
mov
or
pop
add
jb
cwde
sti
jmp
es
dec
mov
mov
add
call
test
shr
pusha
out
xor
mov
shl
cmps
out
rep
mov
sti
dec
xchg
out
int3
push
retf
das
cmc
(bad)
pop
iret
ret
mov
cli
mov
mov
shl
sahf
int3
call
repz
int3
test
push
push
(bad)
loopne
and
idiv
and
mov
bound
pop
cmps
rol
loop
push
sub
cmp
pop
or
mov
cmps
xor
adc
test
fistp
sbb
daa
push
jmp
imul
or
sub
mov
push
inc
add
jb
sahf
int
jnp
pop
mov
or
jne
inc
add
or
dec
cmp
aas
adc
push
mov
mov
mov
jne
dec
lahf
inc
push
mov
pop
pop
dec
leave
fdivr
ss
hlt
ror
dec
and
(bad)
emms
js
mov
sub
stos
cmp
pop
mov
stos
mov
sub
ja
fist
arpl
mov
inc
adc
push
push
cmp
call
push
pop
mov
xchg
inc
test
fld
mul
pop
jbe
dec
sub
push
mov
add
xchg
xchg
ret
popf
add
jp
call
imul
rdpmc
ret
cwde
inc
test
repz
mov
in
pushf
sbb
and
sbb
sbb
mov
jmp
dec
nop
(bad)
sti
inc
cmp
fisubr
test
cwde
and
mov
mov
dec
pop
cdq
fwait
imul
lds
adc
movs
dec
xchg
mov
and
pushf
out
fstp
xor
xchg
dec
out
jp
mov
loope
cmp
push
stos
sub
mov
or
int3
cmc
(bad)
ins
sahf
test
mov
mov
jge
imul
pop
call
mov
sti
mov
mov
push
mov
add
mov
mov
adc
push
mov
addr16
jle
adc
xchg
sahf
fnstenv
xor
or
ins
cmp
lock
nop
dec
xchg
pop
sbb
icebp
pop
inc
loop
(bad)
daa
inc
cmp
cli
pop
adc
xlat
mov
(bad)
and
jl
jnp
repz
mov
lds
pop
push
xchg
or
add
test
sbb
jnp
adc
hlt
sub
or
xor
xchg
sub
imul
call
add
add
iret
xor
div
int
or
scas
add
xchg
mov
mov
je
add
div
out
popa
out
jb
sbb
mov
fwait
jge
scas
mov
js
cld
xchg
pushf
jne
dec
retf
imul
xchg
js
add
out
aad
scas
dec
sbb
adc
mov
and
scas
and
retf
stos
scas
dec
fisttp
into
mov
xchg
call
lock
pop
ret
mov
(bad)
outs
scas
test
adc
arpl
jo
mov
mov
lods
in
pop
add
dec
inc
push
xor
push
cmp
loop
aad
xchg
add
fs
add
jnp
mov
(bad)
pop
rcr
add
ins
pop
jp
fcmovnbe
mov
jecxz
fadd
or
outs
ret
mov
inc
push
ret
in
pop
div
xlat
aaa
jns
mov
call
sub
inc
imul
out
ss
mov
mov
push
scas
inc
jo
jb
test
xor
ror
sbb
jmp
and
or
xchg
(bad)
cmp
in
or
mov
mov
jno
fisub
push
lea
xor
(bad)
les
sbb
xor
xor
adc
daa
push
gs
pop
fcmovnb
adc
fsub
mov
inc
cli
aas
loopne
es
adc
icebp
popa
or
out
cmps
stc
mov
pop
fisub
mov
dec
fsubr
jecxz
inc
pushf
or
cmp
pop
push
jo
adc
(bad)
shl
shl
dec
fwait
movs
mov
jnp
sub
mov
push
in
mov
(bad)
cmc
and
dec
jl
fbld
test
jp
fild
dec
pop
inc
movs
out
stos
mov
push
sbb
and
das
add
loop
sbb
out
inc
xchg
stos
test
mov
adc
inc
or
dec
pop
pop
dec
rcr
mov
das
or
jo
xor
lea
test
push
lods
ret
push
aad
sub
sbb
les
iret
push
xor
lds
xor
scas
arpl
add
add
add
sbb
mov
jecxz
and
xchg
jge
dec
in
dec
jae
xchg
cmp
enter
mov
sub
or
aam
inc
dec
int
mov
dec
dec
jp
(bad)
arpl
push
mov
daa
popa
jne
inc
add
scas
push
add
aas
adc
and
inc
add
int
jg
int3
ret
mov
jp
cmp
mov
pusha
outs
mov
mov
pusha
mov
add
jge
mov
mov
shl
sub
pushf
gs
push
mov
add
adc
mov
cs
test
pushf
jns
add
test
jo
not
mov
int3
mov
imul
push
sbb
(bad)
push
xor
push
pop
mov
not
xlat
ins
and
daa
push
repz
push
(bad)
add
scas
call
and
adc
jg
adc
mov
adc
add
ret
sbb
pop
ror
pop
es
cld
lods
push
clc
inc
pop
(bad)
inc
lahf
pop
out
and
popf
xchg
ins
out
mov
pop
pop
sub
sbb
sbb
sub
jle
pop
sti
mov
lods
dec
pop
dec
push
sub
jmp
cmp
fistp
and
fs
inc
cld
jecxz
(bad)
and
fldcw
adc
ficom
cmps
and
jbe
mov
fwait
mov
ds
mov
movs
jns
push
inc
aaa
push
retf
adc
push
outs
cdq
out
mov
and
adc
ficomp
xchg
push
mov
scas
jno
jo
shl
xchg
stc
sbb
es
bound
add
je
xchg
cmp
sbb
mov
loop
mov
jl
jnp
xor
sub
pop
stos
adc
mov
pop
push
retf
cmps
retf
xchg
sub
ins
mov
xchg
push
mov
movs
xlat
mov
sar
(bad)
mov
into
pop
data16
fldenv
stc
pop
adc
mov
repz
push
ja
push
push
call
sub
jne
dec
test
iret
hlt
cld
sahf
xor
xchg
push
sub
pop
movs
icebp
push
inc
mov
dec
out
ja
test
push
cmp
and
dec
jne
xor
inc
sub
sub
jmp
xor
fdivrp
sbb
fadd
adc
and
pop
call
sbb
push
jne
aaa
pop
cmp
sbb
pop
mov
pop
sbb
add
jne
into
and
push
sti
addr16
push
adc
push
mov
enter
js
inc
pop
jecxz
mov
out
scas
outs
pushf
jns
mov
inc
in
out
retf
xchg
sub
pop
push
clc
imul
into
cld
push
call
loope
mov
leave
retf
and
jae
(bad)
movs
in
daa
pop
mov
and
push
xor
lock
ret
jg
or
or
in
sub
xor
je
mov
xchg
mov
call
je
mov
push
mov
shr
add
sub
jl
add
addr16
scas
outs
or
push
or
inc
imul
outs
out
dec
hlt
dec
hlt
(bad)
xor
push
xor
mov
rol
loopne
add
sub
rcr
scas
out
shr
jne
sub
popf
mov
enter
popf
pop
add
jb
iret
adc
push
xor
dec
xchg
xchg
enter
mov
out
mov
xchg
push
xor
(bad)
jg
sub
in
and
call
jns
outs
or
jmp
cmp
aam
fcmovbe
cs
mov
or
mov
push
xchg
and
mov
push
cmp
or
dec
shr
iret
xchg
stc
push
retf
jl
fidivr
dec
jb
popf
loop
(bad)
stos
cmps
out
mov
push
popa
jbe
adc
repz
jns
pop
ins
cmp
imul
ret
push
sbb
jmp
cli
xor
xor
xchg
retf
cld
add
icebp
pushf
xchg
hlt
test
sar
cs
cmp
dec
imul
mov
xchg
or
mov
jmp
xor
in
push
out
add
push
push
xor
sti
popa
(bad)
imul
and
sbb
hlt
or
arpl
(bad)
xchg
add
std
cmps
stc
sub
and
inc
push
loopne
xlat
and
out
arpl
fnstsw
adc
mov
stos
xlat
sub
test
pop
add
movs
inc
arpl
icebp
fiadd
xchg
or
daa
dec
mov
test
mov
(bad)
mov
sub
jne
jmp
pop
jbe
into
dec
inc
test
and
and
outs
test
cld
fs
bound
fstp
sti
add
pop
cdq
fmulp
jle
gs
xor
popa
idiv
cmp
adc
mov
pop
xchg
cmp
rcr
inc
mov
call
jne
push
pop
xchg
dec
loope
pop
bnd
arpl
repnz
jecxz
inc
outs
and
inc
jle
and
and
js
icebp
sbb
pop
icebp
(bad)
movs
add
push
jo
out
adc
test
int
sub
hlt
jo
outs
pop
or
fnclex
aad
fxch
and
push
push
push
sub
(bad)
loopne
and
add
inc
push
xchg
adc
push
int
add
add
or
mov
into
fcmovne
mov
sub
in
movs
mov
push
inc
mov
sub
adc
aaa
aaa
inc
inc
add
xchg
jge
imul
adc
fidiv
(bad)
pop
mov
lods
pop
sbb
mov
pushf
lock
push
gs
aaa
sub
sti
xchg
loopne
cmps
jg
add
aad
into
xlat
cmps
and
imul
cmp
adc
jg
test
push
mov
mov
or
int
push
div
out
(bad)
shr
jp
add
jl
je
test
mov
bound
js
adc
fmul
or
mov
push
(bad)
dec
mov
and
pop
mov
xor
lock
push
icebp
push
stos
jae
sub
xchg
add
inc
shr
and
idiv
jl
jns
scas
xchg
xor
in
outs
scas
add
xor
pushf
fiadd
or
shl
bound
cmc
inc
jecxz
mov
js
fidiv
out
ret
mov
test
addr16
sub
retf
cmp
jl
mov
pop
add
sti
mov
pop
lds
inc
sub
retf
out
test
jno
add
push
mov
adc
ret
pusha
push
in
add
cli
push
jne
xchg
cmps
lock
and
lahf
and
stos
jge
sub
dec
push
call
inc
cld
push
das
scas
mov
aam
xor
jns
inc
pop
cwde
iret
loope
mov
and
fwait
pop
dec
sub
push
jecxz
inc
imul
pop
jns
pop
movs
cld
out
mov
xchg
adc
xchg
and
rol
xchg
dec
mov
ds
hlt
rol
or
mov
sub
pop
jne
data16
(bad)
push
jbe
xor
jl
inc
mov
enter
in
push
in
stc
aas
stos
adc
inc
jmp
leave
xchg
int3
mov
movs
in
or
fstp
xchg
xor
and
(bad)
nop
mov
jp
sbb
sbb
pop
cmp
jle
loopne
movs
(bad)
mov
jnp
fidiv
dec
imul
pop
add
bound
repz
xlat
sahf
das
or
mov
add
add
sub
mov
scas
es
daa
xchg
call
sti
push
dec
cmps
mov
adc
push
mov
pop
pop
lods
(bad)
add
mov
ret
inc
sbb
or
pop
cmp
push
pop
bound
inc
outs
mov
test
out
or
adc
and
xor
outs
ja
adc
sub
outs
jmp
adc
xchg
dec
jmp
les
xor
inc
pop
jge
push
dec
cmps
dec
jb
cmps
mov
jge
outs
push
fild
clc
xor
clc
and
(bad)
shr
fs
and
addr16
sub
ss
add
mov
dec
and
pop
cmp
jno
push
pusha
and
push
data16
imul
lahf
xchg
test
mov
sbb
mov
mov
sbb
push
rcl
dec
sbb
nop
sahf
movs
add
mov
fisubr
pop
mov
test
adc
sub
mov
popf
call
pop
cmp
or
push
cs
int
inc
call
fisttp
in
daa
(bad)
(bad)
mov
sbb
dec
xchg
sbb
arpl
cmp
mov
ret
mov
jmp
sbb
xchg
jecxz
in
dec
ins
(bad)
outs
pop
mov
inc
inc
addr16
sbb
pop
fist
cmp
std
js
cmp
int3
inc
xchg
stos
lods
in
jb
stos
cs
pushf
dec
dec
iret
ja
movs
sbb
aaa
jmp
add
scas
pop
mov
mov
push
(bad)
aaa
mov
out
(bad)
mov
cwde
mov
fnstcw
or
ficomp
ja
shr
in
adc
mov
(bad)
sub
adc
fwait
sbb
inc
scas
movs
lods
sub
ins
les
lods
or
mov
pop
int
add
cmp
mov
pop
pusha
ins
and
retf
jle
mov
aas
mov
ror
mov
outs
sbb
cmp
inc
cmp
xchg
and
jl
in
push
(bad)
fisub
sub
shr
movs
push
(bad)
pop
mov
fs
inc
pusha
ins
push
push
adc
sub
cwde
add
or
ret
pushf
test
std
push
pop
loop
dec
loope
ja
mov
mov
std
inc
fnstenv
xor
mov
or
sub
jno
retf
lods
mov
pop
mov
push
sar
push
sbb
bnd
dec
cld
loopne
sbb
pop
out
add
sub
enter
daa
jmp
jne
mov
and
add
das
cmp
mov
xor
repnz
mov
push
ins
xchg
ins
rcr
daa
fidiv
mov
jmp
icebp
cmp
jmp
ror
sub
mov
call
std
cdq
inc
rcl
inc
jl
sbb
(bad)
ror
inc
adc
sbb
xor
jns
add
movs
or
sub
mov
enter
out
rcl
and
ret
adc
jmp
cmc
xor
in
xchg
pop
sub
imul
adc
or
mov
ja
cmps
mov
std
add
nop
std
xor
push
popa
ror
add
mov
cmp
ins
dec
jae
shl
mov
mov
nop
mov
ret
jge
jge
or
dec
icebp
daa
mov
jo
mov
mov
sete
shl
xor
push
cli
test
xchg
xchg
movs
aam
jns
xchg
cmps
and
es
mov
cs
xchg
push
jb
push
dec
arpl
cwde
into
outs
ins
fidivr
jno
aad
imul
cmps
lahf
dec
xchg
jno
mov
mov
aaa
mov
xor
add
jmp
or
pop
mov
fld
aaa
mov
es
push
lahf
loope
shl
aad
fild
cwde
sbb
mov
test
(bad)
sub
out
sbb
pop
popf
je
fnsave
sub
inc
out
call
ins
mov
cmp
bound
dec
es
add
(bad)
fldcw
rol
xchg
pop
pop
scas
pop
add
je
inc
add
in
push
into
sti
outs
mov
jns
push
aaa
cld
push
neg
jge
pop
and
add
hlt
retf
ja
sti
cmp
bnd
or
dec
dec
sub
into
lods
movs
add
pop
(bad)
mov
jno
out
out
mov
dec
cmps
aas
popa
inc
xchg
adc
les
in
jle
pusha
xchg
mov
pop
mul
ret
movs
ss
cmp
cmps
jnp
data16
push
jmp
xchg
mov
(bad)
movs
ret
sub
jbe
cmp
inc
and
(bad)
mov
dec
pop
aam
dec
stc
or
adc
mov
test
jnp
dec
dec
repz
pop
scas
cdq
lock
push
or
or
xor
aas
sbb
mov
nop
and
sar
das
inc
cmp
leave
adc
push
push
sub
movs
xor
inc
mov
dec
xor
cmps
les
ret
cli
in
mov
outs
mov
lods
(bad)
js
out
dec
dec
call
push
adc
add
mov
out
dec
imul
ret
mov
sti
pop
loopne
jo
mov
jmp
add
les
cdq
xchg
stos
push
xchg
or
in
and
pop
mov
icebp
push
pop
in
movs
add
jae
sub
ins
jae
push
add
jp
pop
push
jmp
jb
jp
mov
mov
outs
fmul
push
xor
test
into
push
cli
jne
loopne
cli
sbb
mov
int
push
ss
adc
dec
pop
adc
jle
inc
ficomp
or
test
sub
cmp
rcl
cmp
fst
popa
aam
push
adc
adc
push
add
lock
test
aas
arpl
in
fisub
iret
data16
cld
(bad)
repnz
inc
ja
dec
ins
xor
inc
ja
sub
mov
push
mov
jae
dec
push
sub
dec
xlat
mov
mov
add
add
fwait
adc
mov
pop
js
sub
fidiv
(bad)
in
mov
loope
gs
or
mov
xchg
popa
jne
nop
jge
sub
add
push
stc
mov
out
and
sbb
bound
xor
adc
mov
xlat
inc
sub
call
or
and
iret
sbb
(bad)
jg
jg
into
mov
mov
ins
outs
dec
sub
add
shl
mov
sub
icebp
jb
push
push
xor
out
cs
test
sub
add
xor
cmp
pop
shr
add
mov
in
push
jb
lock
mov
shr
xor
xor
mov
push
ss
movs
aad
mov
test
mov
xchg
test
call
nop
lahf
pop
sbb
dec
mov
out
mov
cli
stc
(bad)
repz
das
cs
or
mov
mov
mov
(bad)
in
add
inc
test
or
inc
fld
popa
ds
lods
iret
mov
push
test
lock
sub
cmc
nop
sbb
and
xor
jb
clc
fild
mov
jg
sbb
mov
(bad)
pushf
push
rcl
pop
jp
fld
jb
inc
pop
mov
adc
mov
fs
fmul
in
int
mov
push
call
push
popf
xchg
movs
pusha
stos
fs
ud2
dec
mov
clc
xor
sbb
stc
lods
jmp
addr16
add
sahf
fs
data16
aaa
pop
sub
lods
cwde
stos
cmp
push
int3
mov
fst
mov
rol
pop
hlt
xor
(bad)
mov
dec
lds
adc
add
cli
outs
adc
ins
test
popa
lea
movs
iret
push
push
mov
cld
in
or
sar
sub
xchg
cmps
test
cmp
inc
jmp
adc
loop
add
jne
iret
lods
mov
push
nop
dec
mov
mov
pusha
test
or
and
es
cmp
jl
mov
adc
movs
test
or
fisubr
stos
popf
jnp
adc
dec
les
es
mov
ins
retf
xor
in
push
nop
adc
pop
push
fsubr
push
(bad)
pop
sahf
and
mov
cmps
test
ds
push
ins
xor
cmp
sub
push
fcmove
call
mov
mov
push
cli
or
out
fbld
ror
call
outs
js
adc
jp
sbb
and
movs
pop
ins
scas
out
mov
loope
xlat
jbe
adc
(bad)
in
cmp
xchg
cmp
and
pop
out
adc
and
into
into
sbb
fwait
div
lock
sbb
push
lods
xchg
or
sub
out
ins
xor
lock
cmp
xchg
adc
push
test
sbb
and
mov
jbe
lods
cmp
xchg
ret
push
movs
movs
cmp
xor
cmp
js
icebp
push
dec
sbb
add
mov
mov
lods
repnz
xor
retf
mov
mov
and
dec
push
fs
jno
push
stos
(bad)
sbb
pop
in
je
cmp
repz
call
mov
into
xchg
mov
mov
cmp
adc
xor
enter
sub
xor
cmp
dec
mov
adc
pop
fstp
sub
xchg
jmp
scas
fld
jnp
cwde
aam
cmps
xchg
pop
jle
cmps
dec
arpl
lods
sbb
lods
push
push
das
add
xor
lahf
mov
lods
scas
scas
sbb
adc
xlat
and
jmp
(bad)
std
xchg
push
outs
xlat
xchg
dec
hlt
sub
addr16
adc
loopne
int
cmp
xchg
inc
les
cmp
xchg
and
pop
mov
inc
fnstcw
add
adc
pop
jne
jmp
ins
sbb
inc
xchg
cmp
or
sub
stos
sub
(bad)
xlat
test
pop
pop
lds
scas
cmps
cld
add
int
xchg
imul
cs
(bad)
xchg
mov
sbb
dec
test
mov
gs
ss
dec
ret
stc
and
jmp
add
out
add
fdivrp
movs
mov
jmp
aam
sahf
bound
mov
add
mov
and
sub
jns
hlt
push
xlat
fimul
(bad)
jb
test
mov
pop
fsub
cmp
outs
mov
out
cmp
call
pop
push
test
sbb
add
icebp
mov
push
loop
(bad)
outs
in
cwde
lea
or
mov
aas
pop
push
add
or
dec
sbb
mov
mov
in
loopne
push
rcl
idiv
retf
paddd
cmp
std
pop
lds
emms
inc
movs
sti
ficomp
dec
ja
push
ins
aad
rcr
dec
pop
rcl
jo
push
mov
adc
or
jns
repnz
pop
ins
mov
shl
sbb
mov
xor
sar
mov
sahf
loope
xlat
push
cmps
cmp
mov
mov
es
adc
push
pop
mov
es
jecxz
jo
sahf
inc
cmp
cwde
(bad)
mov
mov
fwait
cmp
mov
push
inc
sbb
lock
and
aam
mov
mov
es
pop
adc
call
inc
repz
in
enter
jmp
cwde
add
push
div
push
aas
adc
push
sub
mov
pusha
(bad)
sub
popa
cmp
xchg
cmp
idiv
(bad)
mov
mov
dec
in
xchg
mov
loope
or
loop
movs
paddusb
jmp
or
cmp
push
mov
push
sub
inc
push
addr16
jb
mov
inc
(bad)
mov
jns
xor
push
and
pop
lods
cli
mov
popa
retf
xchg
ficomp
push
pop
or
clc
mov
(bad)
fadd
and
(bad)
cmp
or
dec
(bad)
aas
cmp
cmp
mov
fisubr
mov
and
repz
sub
cmp
inc
stc
xchg
xchg
mov
les
mov
jge
lods
jb
aaa
ins
xor
mov
movs
bound
adc
das
lea
enter
cmps
(bad)
jl
bound
pop
xchg
inc
ds
xor
fwait
loop
aam
or
ficomp
sbb
sbb
mov
sub
cmp
cli
mov
pop
js
sahf
pop
ror
fcomp
pushf
test
and
loopne
out
pop
jns
test
or
aaa
jge
mov
and
dec
lock
repnz
test
dec
sbb
pop
jnp
sub
push
push
je
pusha
add
add
rcl
mov
pop
ror
and
add
jl
mov
mov
pop
adc
jl
fadd
jae
xor
aaa
test
pushf
pusha
adc
rcl
test
sub
sbb
add
push
pop
mov
adc
push
(bad)
or
js
and
dec
xchg
cmp
sahf
xchg
sbb
(bad)
jmp
jb
sti
push
push
sbb
push
mov
push
cmp
mov
adc
or
adc
je
hlt
(bad)
sbb
cmp
out
pushf
pop
jne
les
rol
xor
test
mov
(bad)
inc
je
test
inc
push
arpl
sbb
daa
pop
cdq
xor
and
leave
push
ret
adc
les
or
inc
and
inc
aad
test
push
int
push
sbb
das
mov
repz
dec
and
test
div
aaa
jge
jl
je
mov
jmp
push
jecxz
stc
jmp
(bad)
stc
mov
test
pmulhuw
mov
sub
or
ret
and
adc
fnsave
mov
jg
and
out
jnp
popa
cmc
sti
fdiv
popa
mov
das
pop
cdq
sub
or
fwait
mov
stc
int3
inc
sub
adc
js
call
jo
mov
xor
mov
in
inc
arpl
fidivr
cmp
js
aad
mov
cmp
fwait
dec
xchg
cmp
or
mov
mov
mov
aad
les
push
xchg
repnz
cmc
(bad)
clc
mov
sbb
adc
jno
not
les
add
mov
push
out
mov
mov
les
push
xchg
loopne
call
(bad)
das
dec
add
mov
jmp
arpl
icebp
hlt
mov
add
push
push
xchg
neg
mov
cmp
xchg
pop
or
adc
jecxz
out
mov
mov
and
repz
into
dec
pop
adc
mov
stc
cmp
repnz
test
adc
cli
std
mov
xchg
mov
cmp
lds
inc
es
jb
pop
rcl
loop
gs
rol
adc
xor
popf
(bad)
pushf
ins
movs
adc
inc
in
jns
pop
es
ja
aam
pop
in
nop
or
cdq
pop
rcl
adc
rol
or
test
push
jo
out
xor
pop
test
jnp
dec
or
jno
jecxz
sbb
sbb
mov
xchg
cmp
int
xor
mov
cmp
push
(bad)
lods
adc
les
je
(bad)
xlat
and
inc
sbb
sub
xor
cmp
dec
mov
mov
inc
ficomp
pop
jecxz
add
add
sub
mov
pusha
in
repz
mov
jp
out
sub
pop
(bad)
fdiv
ret
fiadd
ins
loope
pop
mov
fcomp
sti
aam
or
jle
movs
mov
jbe
stos
jmp
cmps
ins
lods
mov
sub
les
fisttp
jmp
sbb
cli
mov
in
push
mov
mov
fdivr
sbb
dec
or
jmp
inc
adc
sbb
sub
stos
aas
les
pop
cmps
mov
gs
clc
out
cld
push
xchg
adc
(bad)
mov
loope
xchg
test
js
and
aam
mov
lahf
mov
or
push
jg
cmp
mov
icebp
adc
fnstcw
mov
jmp
and
loope
adc
jne
inc
movs
xor
imul
js
mov
loope
pop
ins
and
jmp
fcomp
ins
mov
dec
dec
push
repnz
dec
pop
push
jecxz
adc
data16
mov
sbb
or
test
or
int
pusha
pop
fisttp
pop
and
xor
mov
fild
jg
xor
mov
sbb
jmp
cmp
int
popa
fmul
outs
or
and
xlat
stc
sub
push
cwde
and
pop
scas
cs
sbb
loope
lods
test
sub
js
push
sub
(bad)
retf
cmp
jge
adc
dec
push
dec
pop
scas
mov
add
mov
jmp
fcomp
adc
xor
or
nop
and
in
jnp
xchg
push
js
test
cmp
sbb
xchg
push
pop
into
and
imul
addr16
sub
sbb
xchg
movs
in
retf
in
ins
push
mov
stc
jne
mov
clc
jae
lods
in
adc
into
movs
xor
bound
xor
enter
pop
and
dec
pop
(bad)
stc
mov
pop
in
mov
sub
pop
aaa
push
lods
(bad)
(bad)
sbb
repnz
mov
movs
data16
dec
es
adc
jmp
inc
push
fsub
push
push
add
hlt
sub
push
mov
int3
inc
jbe
jl
pop
retf
pop
mov
out
adc
in
cwde
xchg
daa
inc
stc
and
push
push
test
push
fdiv
fisttp
mov
cmps
fsub
ror
sub
push
test
sub
fld
cmp
and
fwait
ror
jnp
mov
pmulhuw
cmp
test
repz
fldcw
sub
xor
in
cld
push
fadd
dec
add
fild
scas
leave
ss
fisttp
shl
in
xor
mov
in
data16
scas
loop
dec
inc
clc
inc
xor
data16
mov
iret
icebp
mov
fild
mov
ss
sub
dec
cmp
popf
mov
movs
fmulp
jo
jae
push
dec
shl
sub
dec
mov
adc
mov
cdq
popa
lods
mov
adc
fwait
dec
in
test
test
cmps
popf
std
loopne
push
inc
pop
out
push
and
xor
xor
mul
xchg
cmps
mov
mov
xor
aaa
push
fstp
cmps
pop
or
int3
push
adc
jns
mov
pop
inc
push
bound
xor
pop
push
push
dec
xor
mov
call
or
js
bound
loopne
es
xchg
or
std
aad
icebp
lds
std
(bad)
test
aaa
repnz
movs
xchg
(bad)
shrd
ins
jmp
clc
xor
xor
mov
in
cdq
and
pop
les
pop
pop
jecxz
sar
les
pop
mov
push
pushf
inc
mov
mov
lods
adc
cmps
icebp
ror
jle
loop
and
cmps
jbe
push
fsub
repnz
and
es
jns
lock
sbb
mov
mov
dec
scas
retf
mov
jbe
sbb
adc
mov
outs
es
and
nop
int
repnz
and
fistp
rol
xchg
pushf
pop
mov
inc
scas
iret
mov
fxch
lods
into
and
sub
int3
push
push
jnp
sbb
mov
xchg
cmp
add
mov
sub
out
ds
push
dec
in
mov
mov
add
idiv
je
or
jl
aad
and
aaa
inc
iret
clc
movntps
push
shld
mov
jmp
xor
lods
adc
movs
dec
in
mov
add
jge
or
bound
movs
loope
cwde
inc
pop
and
pusha
xor
fneni(8087
inc
pop
xchg
shl
in
popa
jg
mov
mov
or
mov
and
mov
push
pop
sub
popf
push
cmp
and
mov
mov
rol
call
sbb
xor
jmp
outs
jge
cmp
xchg
push
adc
adc
fild
sub
dec
mov
sbb
nop
cmp
test
jp
pop
test
(bad)
retf
xchg
dec
mov
push
ficomp
lock
into
and
aad
and
dec
sub
bound
and
aad
dec
idiv
push
addr16
addr16
mov
pop
or
lahf
push
sbb
sub
out
fld
jb
and
cs
test
popf
sub
adc
jo
lds
dec
lock
lods
cmps
lods
mov
shl
xor
nop
fwait
xchg
int3
test
push
mov
mov
add
xor
outs
out
stc
movs
iret
xlat
das
jp
adc
or
rcl
mov
adc
mov
pop
jmp
fucomp
sbb
jb
jmp
or
mov
test
sub
cmp
add
loopne
pop
test
mov
imul
pop
dec
outs
mov
inc
pop
add
stos
(bad)
and
enter
lock
xchg
cmp
inc
push
das
adc
adc
xchg
sub
pop
int
dec
ret
xor
aaa
lock
jmp
inc
lea
inc
bound
aaa
pop
pop
and
iret
outs
or
and
push
sub
call
dec
imul
stos
xchg
(bad)
mov
mov
popa
jl
cmp
mov
outs
(bad)
int
pop
xchg
arpl
cli
call
mov
pushf
push
pop
jae
jae
push
data16
add
rcr
js
ret
inc
pop
cmps
(bad)
jae
js
jne
out
ror
enter
add
fnsave
sbb
das
lock
bound
mov
int
scas
cmc
push
out
in
xor
out
and
call
jecxz
jle
movs
pushf
push
add
test
cld
outs
mov
jb
stos
push
mov
inc
mov
fisub
or
lock
hlt
clc
aad
cs
sub
nop
xor
addr16
dec
jmp
inc
mov
ss
inc
inc
hlt
movs
fcomp
sbb
daa
mov
sub
jg
sub
dec
sub
loope
jmp
bndstx
push
push
test
and
xor
pop
in
dec
stos
out
ins
jl
mov
mov
inc
or
arpl
out
sbb
dec
(bad)
clc
jns
enter
loope
sub
(bad)
cmp
mov
call
je
je
add
lea
push
(bad)
retf
add
mov
cmp
or
mov
add
iret
inc
push
cmp
jmp
test
or
inc
aas
pusha
scas
aam
xor
fcomi
pop
and
fiadd
es
mov
mov
dec
cdq
and
xor
add
xchg
lods
sub
jmp
ss
adc
pop
jns
cld
leave
cmp
ret
jns
clc
adc
gs
push
xchg
cwde
mov
mov
mov
jnp
cs
mov
lds
fucom
idiv
xchg
xchg
daa
xor
fwait
xor
push
out
retf
int3
xor
movs
bound
xchg
and
cmps
jbe
xchg
cmp
and
repz
jbe
popf
fldenv
and
pushf
(bad)
jle
ss
movs
lods
push
popf
mov
daa
inc
or
xor
jmp
das
jle
aaa
mov
xor
and
jmp
cs
adc
ficom
int
cmp
pop
jb
aad
mov
jg
cmp
(bad)
pop
(bad)
ins
out
or
aam
cs
repz
and
ret
jno
jne
cdq
(bad)
push
mov
dec
call
xor
shl
dec
pop
mov
lds
fstp
ret
cli
push
mov
fisttp
add
pusha
and
cwde
inc
jo
js
(bad)
enter
inc
or
aam
mov
inc
lock
ds
mov
iret
dec
ret
add
xchg
sub
dec
mov
out
jecxz
pop
push
sub
inc
int
sahf
mov
jnp
xor
lds
retf
in
push
sbb
mov
ror
icebp
int
jae
mov
dec
add
mov
mov
inc
rol
pop
sub
inc
nop
lods
jge
test
into
scas
fist
inc
(bad)
imul
hlt
loope
jbe
call
cmp
pushf
js
(bad)
push
jge
mov
rcr
retf
add
dec
scas
add
movs
sub
in
jg
jae
or
mov
xchg
pop
cmp
ror
xchg
sbb
add
out
inc
xor
cmp
je
push
push
fisub
push
mov
add
inc
xlat
adc
pop
loop
stos
push
or
mov
int3
pushf
and
call
test
xchg
push
inc
mov
in
mov
std
dec
(bad)
mov
(bad)
sbb
mov
sub
xchg
into
add
lods
jmp
push
rcr
int
cmps
jne
dec
ds
pop
jnp
es
sbb
add
sub
cmp
movs
out
push
jmp
pop
xchg
or
ret
and
inc
call
cdq
popa
add
lock
jae
adc
jge
nop
cmp
and
mov
stos
xchg
add
inc
and
jo
sar
mov
mov
sub
gs
aad
imul
cmps
mov
adc
les
jmp
mov
mov
sbb
mov
inc
stos
and
neg
push
inc
dec
jae
std
mov
push
(bad)
enter
xchg
test
or
mov
push
fs
dec
pop
adc
push
adc
and
pop
mov
sahf
dec
dec
ins
cmps
popa
retf
pop
inc
rcl
jle
fnsave
bound
sub
mov
das
out
inc
iret
mov
mov
mov
jecxz
neg
cs
jmp
dec
adc
dec
outs
or
cwde
out
mov
xor
lock
in
adc
arpl
pusha
(bad)
pop
(bad)
call
pop
mov
or
test
mov
mov
jae
xor
cmp
mov
xor
dec
enter
fiadd
pop
mov
or
call
les
add
cmc
cmp
cdq
sti
mov
mov
mov
and
fldcw
push
mov
mov
mov
jb
ror
es
pop
pop
test
push
das
in
movs
out
les
out
push
addr16
das
lods
jo
popa
pusha
mov
rol
xor
jb
outs
inc
jbe
push
es
inc
adc
in
int
pusha
sub
pop
cmp
and
call
push
adc
test
pop
popa
cmp
jbe
test
xor
jp
pop
xor
mov
mov
or
stos
dec
xchg
adc
push
call
or
mov
icebp
mov
mov
xchg
xchg
stc
mov
xor
mov
mov
sahf
jae
imul
xor
ficom
adc
pop
es
and
sahf
lds
mov
fs
das
mov
and
sbb
pop
test
(bad)
in
aad
es
mov
aaa
jecxz
popf
xor
(bad)
leave
mov
add
sbb
icebp
and
and
gs
pop
aaa
push
mov
in
dec
push
xchg
mov
lock
stc
pop
pop
mov
mov
push
pop
jge
dec
sahf
adc
jno
dec
sbb
addr16
sub
arpl
adc
call
(bad)
scas
and
aas
or
push
jno
cmp
mov
sub
out
push
and
sub
sub
jb
lock
movs
cs
out
icebp
in
xor
fisub
clc
jnp
pushf
icebp
xor
addr16
aad
sti
mov
dec
inc
fmul
stos
cdq
push
sub
loope
cli
je
stc
jno
ret
sub
loop
in
jo
mov
rol
lea
dec
mov
mov
das
push
jns
adc
adc
imul
cmp
arpl
mov
jnp
push
or
lods
mov
add
add
lods
xchg
xor
rcr
mov
test
stos
push
ficomp
and
imul
mov
in
and
int
xchg
not
jle
jb
pop
mov
pop
aam
inc
and
(bad)
daa
retf
xchg
fisttp
fstp
mov
test
bound
test
cwde
ror
sub
iret
lea
call
popa
sbb
rcr
cmps
nop
mov
jne
push
mov
stos
cmc
test
cli
iret
call
scas
pusha
sub
js
adc
(bad)
aas
inc
inc
(bad)
out
(bad)
jae
icebp
sbb
out
lock
sub
pop
fisubr
mov
dec
jno
addr16
leave
or
mov
mov
pop
pushf
xor
jbe
fld
push
(bad)
xor
aam
inc
sub
sub
sbb
sar
(bad)
push
(bad)
jno
in
inc
js
(bad)
call
sbb
inc
pusha
mov
test
pop
mov
or
into
sbb
jb
loop
mov
xchg
fwait
xchg
call
cmp
adc
inc
xchg
or
cmovnp
add
vmovaps
(bad)
push
lock
jmp
dec
or
rcr
add
test
xchg
call
xchg
jbe
cmc
mov
stc
pop
in
or
int3
cmp
aad
xor
adc
outs
pop
sub
lahf
sbb
test
mov
call
xor
sbb
mov
bnd
stos
inc
pop
add
cmp
shl
jp
sbb
aas
shl
dec
es
pop
(bad)
lods
retf
jbe
jnp
imul
push
cmp
sub
jbe
mov
and
imul
mov
mov
movs
mov
sahf
call
pop
mov
xchg
mov
jmp
add
mov
into
xchg
leave
xchg
imul
jp
sbb
sbb
retf
in
adc
jnp
test
or
sbb
xchg
addr16
cli
movs
js
mov
call
call
test
call
adc
cmc
or
daa
ret
xchg
mov
cmps
cmp
cmp
call
jnp
push
rol
pop
and
adc
(bad)
data16
xor
icebp
and
sub
outs
jb
imul
add
push
and
movs
arpl
loop
mov
ins
std
call
call
enter
cmps
mov
mov
cld
ja
out
lahf
and
aam
mov
mov
push
idiv
call
rcl
mov
mov
mov
popa
mov
inc
add
sub
addr16
cmp
sbb
shl
xlat
jge
aam
scas
xor
xor
xchg
jno
push
inc
push
pushf
add
sub
adc
mov
push
push
sbb
outs
xor
ror
popf
mov
repz
imul
and
div
mov
aaa
xchg
xlat
jecxz
and
sbb
in
popf
mov
sbb
out
retf
and
push
adc
pushf
in
sbb
inc
retf
outs
inc
inc
inc
push
js
sbb
push
mov
bound
adc
es
jns
dec
mov
outs
mov
mov
mov
ja
pop
shl
sahf
int
or
sbb
and
jns
lahf
xlat
mov
mov
push
pop
and
xchg
ror
dec
xchg
cdq
sahf
aaa
leave
cmp
es
mov
sbb
push
mov
mov
mov
push
outs
ss
out
nop
daa
cmps
hlt
jns
add
js
mov
xor
push
cmp
scas
push
mov
cmp
adc
movs
jl
fild
fimul
sub
push
pop
in
adc
pop
add
cmp
add
sbb
shl
sahf
xchg
pop
jno
and
ret
repz
nop
(bad)
loopne
cmp
les
(bad)
je
shr
adc
rcr
mov
inc
fbld
test
sub
jle
cmp
ins
jbe
xchg
mov
ds
ins
push
hlt
ror
pop
mov
push
aas
imul
outs
sbb
loop
rol
inc
popf
or
mov
out
cmc
mov
inc
scas
mov
xlat
mov
dec
js
push
out
lds
mov
push
les
jo
les
xchg
shl
out
xchg
repnz
pushf
pop
clc
stos
in
and
jg
rcr
(bad)
pushf
jne
inc
mov
test
pop
popf
(bad)
sub
mov
dec
into
pop
out
inc
inc
or
(bad)
fsub
fnsave
sub
jae
sub
into
into
mov
jmp
mov
push
mov
inc
dec
in
mov
or
fnstsw
aam
and
push
jne
lahf
mov
dec
push
mov
out
div
loop
enter
and
test
xor
outs
pop
or
push
sbb
add
inc
and
bswap
addr16
pop
xor
lea
cmp
sub
repnz
sub
popa
push
xchg
int
or
std
cwde
cld
mov
ror
sub
sub
push
fwait
pop
fcomip
or
dec
mov
inc
(bad)
mov
xchg
jp
imul
fs
xchg
setnp
inc
hlt
jo
mov
xchg
adc
push
sar
movs
xor
adc
pop
fistp
push
aas
or
push
ficom
sub
sub
gs
and
or
inc
cdq
pop
pop
inc
rcr
mov
sti
ja
and
call
xlat
mov
push
xchg
mov
fimul
mov
jg
fist
stc
stos
mov
pusha
sbb
inc
and
jnp
pop
mov
cld
pushf
pushf
popa
and
lds
mov
add
mov
stc
in
push
inc
cmovg
(bad)
jl
jecxz
lds
ss
lods
daa
xchg
or
test
push
in
lock
adc
rol
gs
mov
fmul
push
cmc
fild
dec
and
cmps
cmp
test
scas
add
mov
out
mov
into
push
(bad)
cli
sti
inc
mov
sar
ret
fistp
outs
(bad)
jmp
and
dec
sub
pusha
ss
push
xor
test
bound
mov
xchg
call
adc
out
movs
inc
cmp
jl
ds
pop
ror
push
hlt
and
sbb
jmp
inc
rcl
mov
and
clc
test
sbb
mov
stos
test
aaa
mov
scas
inc
pushw
cmp
xchg
push
daa
xor
sbb
cld
xchg
pop
inc
xchg
mov
addr16
(bad)
jmp
jno
push
jmp
pop
rcr
xchg
cmp
xchg
adc
add
jne
lea
inc
dec
cmps
push
push
push
std
xchg
jmp
mov
mov
ins
inc
frstor
out
xor
jmp
iret
cli
test
mov
dec
jecxz
je
sbb
mov
loop
into
xchg
popa
xor
mov
int3
pop
cmp
or
dec
shl
lods
rol
mov
ret
adc
out
int
add
jb
jne
dec
adc
mov
jle
mov
aas
repnz
jnp
aam
push
pusha
jl
push
jecxz
in
shr
adc
or
push
mov
fstp
ret
test
sub
ficomp
retf
pop
push
mov
ror
push
inc
mov
cmps
jne
xor
shl
mul
jg
cdq
je
add
xchg
mov
inc
pop
or
push
and
popa
push
push
repnz
(bad)
out
lods
cmp
kmovw
fdivr
dec
ret
stos
mov
mov
push
int3
push
jnp
add
repnz
adc
jle
pop
sub
push
sub
loop
loope
(bad)
mov
and
test
fisubr
mov
push
push
mov
adc
jbe
adc
ins
dec
shr
sub
dec
test
sbb
and
jo
and
lea
add
pop
fwait
pop
out
shr
and
pop
es
fcomp
fistp
xor
dec
jmp
mov
xchg
lods
stos
sbb
leave
pop
fbld
push
or
mov
std
jns
xlat
repz
loopne
push
mov
xchg
mov
inc
std
or
cld
push
out
mov
icebp
inc
out
mov
fucom
fst
pop
sbb
pop
test
push
xor
addr16
out
jb
inc
repnz
rol
rcl
adc
sub
mov
ins
sub
inc
sbb
iret
mov
cmp
or
in
xchg
mov
or
pop
xchg
sub
xchg
movs
pop
inc
daa
mov
push
xchg
aas
sti
inc
jp
ins
mov
mov
cmp
ja
clc
aad
add
pushf
jns
leave
stc
or
add
xor
cdq
into
arpl
inc
and
mov
jns
cmps
int
cmp
adc
cmp
jae
jae
or
int3
sbb
loopne
pop
in
or
(bad)
pop
xor
(bad)
arpl
das
sub
jo
sti
adc
sub
fistp
mov
in
add
pop
sbb
mov
jns
pop
lods
aam
ins
xchg
pop
addr16
adc
stc
or
lods
xchg
(bad)
ins
inc
outs
outs
sbb
retf
pushf
sub
or
or
iret
sar
cmps
pop
adc
out
not
or
fs
mov
dec
dec
out
push
test
ins
nop
pop
imul
jmp
(bad)
out
call
mov
push
stc
adc
mov
sti
fld
inc
dec
(bad)
repnz
and
sbb
push
sub
out
jae
sub
fmul
arpl
loopne
push
pop
mov
mov
cdq
push
call
lahf
add
cmp
xor
push
mov
das
pop
jmp
push
sbb
in
leave
gs
movs
lock
sti
sbb
xchg
cmp
ror
out
jns
inc
jae
scas
shl
pushf
popf
fwait
inc
imul
cmp
sbb
bound
fincstp
sub
adc
adc
jno
inc
test
pushf
sub
stos
mov
pop
jmp
outs
rol
ss
imul
xor
popa
fbld
inc
mov
repnz
sbb
xchg
mov
js
add
loopne
jns
movs
pop
jp
mov
pop
sbb
fiadd
enter
xchg
in
or
gs
push
add
push
push
out
dec
mov
push
xchg
cld
jmp
dec
imul
push
outs
mov
in
pop
iret
in
sub
and
das
xor
pop
movs
loope
cmp
jne
adc
and
pop
dec
fbld
push
test
mov
int3
jne
xchg
pop
popa
sub
sub
outs
rcr
mov
push
dec
lods
jl
inc
and
or
mov
loop
inc
pop
sbb
pop
icebp
daa
mov
mov
cmp
repnz
les
cmp
lods
(bad)
adc
add
xor
sub
and
ret
push
and
xor
or
mov
aaa
(bad)
cdq
in
stos
and
mov
adc
in
pop
cs
out
neg
cmp
mov
cmp
xchg
shr
xor
in
xor
or
dec
nop
or
mov
push
add
xchg
mov
dec
stc
fcmovu
cwde
pop
push
fidivr
push
aad
setp
in
ss
jbe
mov
shl
sbb
xchg
push
cmp
int
imul
hlt
and
sar
fcmovbe
sub
push
sahf
mov
sub
push
std
xor
cmp
outs
cmp
jl
int3
xor
in
(bad)
stc
je
push
lock
int
popa
iret
sti
fwait
inc
cdq
mov
loopne
xchg
inc
sub
aas
inc
adc
add
cld
and
push
shl
movs
sbb
pop
sub
fst
mov
ins
test
and
aad
fst
xor
dec
inc
jae
adc
std
jne
mov
mov
outs
lahf
lds
or
mov
movs
cwde
ja
xor
fstp
or
add
xor
sbb
inc
jnp
dec
movs
stc
repnz
int3
pop
inc
push
inc
and
(bad)
and
ret
out
lods
clc
xchg
stos
frstor
push
fwait
and
pushf
mov
pop
loopne
sub
out
ds
in
and
dec
dec
jnp
(bad)
pop
jo
dec
pop
dec
xlat
pop
(bad)
jle
jbe
mov
cmp
fnstenv
mov
or
rcl
inc
sahf
pusha
add
jmp
not
in
push
cmc
cmp
enter
adc
add
icebp
not
cmps
add
jo
pop
dec
add
xor
mov
rol
mov
jno
mov
cmc
pop
data16
jp
cld
lds
fisubr
mov
fcomp
cmp
xchg
sub
loop
sbb
mov
test
bound
pop
add
mov
mov
test
fldcw
adc
xchg
ror
dec
add
shl
push
or
in
push
dec
jle
out
lods
or
ja
push
xor
in
pop
push
cdq
xor
mov
push
imul
js
pop
ds
jo
es
pushf
mov
and
(bad)
pop
sbb
dec
inc
mov
mov
mov
or
hlt
ret
(bad)
push
add
add
add
xchg
inc
sbb
jge
sub
jle
push
adc
call
(bad)
call
pushf
or
add
cwde
cmp
pop
out
test
sbb
test
in
ins
in
jle
mov
jmp
or
or
es
jne
ror
in
stos
dec
cwde
sub
jno
lock
mov
inc
fisttp
jb
add
pop
repnz
cli
out
bound
add
jp
retf
call
out
jns
(bad)
mov
sar
test
ins
mov
adc
ja
movs
mov
in
loope
sti
lods
pmulhw
inc
push
mov
sub
mov
add
add
and
sar
push
int3
cwde
jl
jno
in
not
in
jle
pop
inc
ds
cmps
loope
mov
int3
pop
cmps
xor
aam
mov
dec
xor
les
loope
mov
inc
inc
or
test
xchg
xchg
aas
mov
jmp
movs
sbb
pop
jmp
xchg
cmps
mov
inc
xchg
loop
lods
pop
add
add
into
(bad)
lahf
and
int
push
int3
inc
mov
xor
jg
inc
pop
xchg
retf
cld
sar
mov
sti
outs
jp
movs
adc
cmc
fldln2
cmp
cmp
leave
fmulp
pop
sbb
jmp
adc
push
dec
out
ret
push
lahf
fisttp
jne
adc
add
mov
and
xchg
ret
scas
dec
(bad)
xor
into
and
pop
pop
mov
iret
repnz
xor
and
pop
cdq
cmp
cdq
push
aam
std
shl
sahf
out
xchg
ja
or
leave
(bad)
inc
sub
inc
daa
icebp
(bad)
call
or
push
rcr
pop
mov
or
icebp
mov
retf
xlat
mov
in
loop
popa
not
outs
dec
inc
push
loope
jmp
xor
xchg
jle
scas
xchg
jno
pop
sbb
xchg
jb
ds
mov
ins
dec
aam
sbb
sbb
leave
jae
rol
repnz
lods
fnstenv
lock
inc
dec
or
loope
in
imul
cmp
stos
fwait
nop
push
push
jecxz
push
cmps
icebp
dec
(bad)
jnp
ins
out
xor
gs
sbb
sub
or
cmp
mov
or
fbstp
cmc
push
stos
or
adc
pop
daa
sbb
push
xor
pushf
add
mov
mov
in
jns
je
js
mov
xor
ja
cmp
sbb
cmp
xor
call
stc
arpl
mov
movs
jmp
xchg
enter
push
fwait
aad
push
out
xchg
sub
call
imul
xchg
and
push
fisttp
mov
jb
scas
stc
test
sub
pop
retf
arpl
fnstcw
sahf
movs
add
inc
loop
iret
mov
scas
dec
imul
fdivr
adc
push
add
popa
cs
jecxz
lahf
mov
inc
nop
cmps
call
jl
add
cmp
fs
arpl
cs
ret
add
inc
inc
mov
shr
int3
dec
cmc
pop
jne
or
das
inc
fnsave
std
jecxz
or
sub
out
ins
es
xor
cmp
hlt
dec
mov
scas
mov
adc
mov
test
pop
jns
movs
mov
rol
xchg
jbe
out
cmp
xchg
ins
arpl
cs
cmp
iret
sbb
fdivr
repnz
pop
in
shl
leave
out
ja
xor
mov
leave
pop
sbb
ds
cmp
scas
jmp
sub
adc
iret
scas
cdq
inc
dec
dec
dec
ret
ret
int3
(bad)
dec
ins
test
dec
xor
pop
fwait
and
xchg
xor
pop
ret
inc
push
adc
into
jo
in
pushf
dec
mov
inc
mov
aam
inc
inc
adc
adc
sbb
xor
int3
ja
jbe
stc
xchg
js
sbb
inc
das
pop
pop
les
xchg
fdiv
xchg
pop
icebp
inc
sub
xor
es
retf
outs
ins
push
ins
fisub
dec
dec
mov
cli
mov
std
mov
adc
inc
cmp
jb
jae
rol
clc
rol
fidivr
pop
pop
fst
xor
adc
jbe
repz
ins
mov
fcom
retf
arpl
adc
cld
sbb
mov
sub
adc
(bad)
int
pushf
jecxz
mov
ds
mov
repz
adc
in
sbb
out
dec
test
jo
xor
add
jge
xor
or
pop
dec
cld
dec
hlt
out
dec
sub
dec
inc
xlat
(bad)
ins
and
not
mov
fld
ror
pop
outs
jmp
push
gs
and
dec
pop
and
pop
std
hlt
loopne
fcmovnu
push
mov
add
xchg
mov
xchg
dec
enter
xchg
fimul
jmp
fdivr
idiv
dec
inc
mov
pop
gs
aaa
jo
movs
cs
mov
in
lahf
jnp
(bad)
sbb
int
dec
or
dec
pop
(bad)
cli
mov
imul
test
pop
int
lods
mov
add
(bad)
movs
jmp
inc
aas
inc
pop
mov
sar
push
dec
xor
sbb
je
jecxz
mov
mov
sahf
cmp
int
xchg
shl
and
std
mov
pop
fild
sbb
imul
adc
movs
shl
ss
fst
mov
pop
les
pop
cmp
fs
xchg
out
push
loopne
das
or
(bad)
and
repnz
stos
xlat
xchg
shl
jns
shl
(bad)
dec
mov
mov
arpl
movs
mov
mov
das
out
scas
dec
push
in
stos
mov
ret
inc
sub
loope
(bad)
into
add
hlt
push
mov
fs
popa
sub
xchg
aam
stos
loop
push
inc
bound
push
mov
shl
rcl
(bad)
add
mov
cmps
outs
dec
xchg
movs
addr16
xor
inc
adc
int
jecxz
push
push
imul
pushf
push
inc
adc
sbb
pop
int
adc
daa
jl
ins
aaa
leave
in
push
sub
inc
pop
(bad)
dec
imul
test
lock
jo
repnz
mov
xchg
cmps
and
in
or
jmp
repz
(bad)
pop
es
pushf
push
push
icebp
jl
mov
cdq
jbe
lods
pop
dec
xchg
pop
pop
and
out
dec
lods
jns
push
cmps
stc
test
sbb
or
xchg
xchg
pop
cmp
push
pop
imul
ror
pop
out
jb
test
mov
xchg
(bad)
popf
bound
ficomp
sbb
xor
mov
cmp
(bad)
cmp
lods
mov
lock
aaa
and
jns
lods
repnz
cmps
sbb
lahf
(bad)
js
mov
(bad)
repz
jle
or
sbb
mov
pop
repz
inc
std
test
data16
xor
icebp
sub
fcomi
xchg
jecxz
sub
daa
pusha
adc
dec
push
ficomp
add
shl
inc
mov
xchg
jle
int
test
xlat
sub
sti
std
sar
adc
mov
stos
sbb
cmp
dec
jl
test
mov
xor
xor
retf
les
dec
xlat
inc
(bad)
mov
jg
and
cmp
mov
jmp
shr
stos
mov
scas
lea
pop
(bad)
mov
je
shr
dec
ja
scas
add
leave
mov
xchg
pop
out
ror
ds
sbb
ficomp
add
lock
popa
cmp
xchg
movs
cwde
jecxz
out
popf
retf
mov
adc
sbb
xor
sbb
xchg
fstp
bound
lds
outs
mov
sbb
mov
pop
push
cs
jb
mov
sbb
das
sbb
pop
lock
out
xor
loop
shr
mov
push
repnz
jns
pop
pushf
adc
std
dec
pop
(bad)
xor
or
pop
jno
sub
fs
xchg
xchg
xlat
shl
ds
aad
jno
sbb
mov
lock
adc
sahf
cs
leave
or
clc
lahf
lock
or
fs
pop
dec
adc
iret
out
ss
mov
(bad)
ins
xor
je
ins
push
in
mov
ret
lock
add
ja
inc
mov
mov
stos
xor
jno
out
clc
mov
adc
xor
shl
loop
popf
je
adc
mov
adc
xlat
dec
addr16
pop
(bad)
jecxz
push
xor
in
outs
popa
icebp
jno
add
iret
sbb
(bad)
mov
ja
retf
stos
adc
scas
dec
mov
push
cli
mov
dec
mov
data16
push
mov
cmp
pop
(bad)
fdiv
mov
inc
lock
adc
xlat
mov
cmc
fisub
mov
out
push
pop
aam
pop
xor
pop
loope
xor
sti
popf
cmp
dec
sbb
cmp
rcr
jb
and
jle
inc
adc
dec
xchg
ds
stos
popf
into
pop
mov
ja
sub
xchg
cmp
jge
mov
pop
xchg
sbb
shl
int3
push
add
js
fistp
or
xchg
inc
sub
icebp
mov
add
icebp
test
aam
mov
fwait
and
cli
pop
imul
cs
xchg
pop
fild
add
sahf
cmp
mov
dec
inc
push
and
shl
inc
loopne
imul
xchg
repz
xor
cdq
push
and
lahf
pusha
push
fsubr
in
pop
add
xor
(bad)
xchg
data16
dec
(bad)
mov
add
mov
mov
push
mov
addr16
jbe
rcl
add
adc
(bad)
push
jl
mov
dec
fwait
inc
lea
mov
sub
ins
sbb
hlt
sub
push
(bad)
mov
cld
daa
jmp
push
shr
es
inc
pushf
and
jo
lods
aaa
pop
pop
xchg
cmp
inc
fwait
lock
add
sub
shl
les
hlt
dec
xchg
pushf
sub
mov
pusha
repnz
jle
(bad)
loop
cs
leave
stc
mov
in
mov
mov
outs
cmp
aad
or
mov
mov
stos
ins
popf
or
mov
js
and
inc
loop
dec
push
cmp
push
out
xchg
mov
push
jo
shl
xor
loop
jmp
cmps
aam
in
inc
les
sub
jle
mov
shl
out
inc
(bad)
fld
xor
fwait
test
ins
bound
mov
mov
rep
daa
sbb
inc
mul
aaa
in
mov
out
dec
(bad)
mov
jb
les
loope
les
mov
and
cdq
and
and
inc
mov
adc
test
sbb
movs
fdivr
jae
test
or
aas
add
jo
add
mov
mov
cmp
shr
xor
test
jmp
test
in
sbb
(bad)
and
in
cmp
das
aad
lods
xchg
pushf
mov
xchg
push
push
(bad)
xchg
xor
xchg
xchg
xchg
test
and
and
jp
pop
jp
xchg
or
test
aad
mov
jmp
push
popa
inc
retf
jnp
cmp
les
stc
(bad)
mov
fs
xchg
jg
mov
mov
mov
iret
into
jle
repnz
dec
mov
test
ret
sbb
outs
fdivr
sbb
mov
pinsrw
shr
jg
jle
mov
in
stos
in
push
xchg
int3
jmp
mov
aam
jno
dec
stos
(bad)
rcl
pusha
stos
push
xor
stos
ror
mov
pop
and
adc
mov
loope
adc
inc
ret
mov
cld
mov
leave
leave
cdq
push
push
push
(bad)
mov
xor
ins
cld
scas
jl
loope
sti
or
or
(bad)
test
repnz
fdiv
cdq
ja
test
or
mov
mov
pusha
arpl
ret
jge
enter
clc
aad
test
repnz
stos
cwde
cmp
xor
cmp
adc
xchg
and
sahf
add
cmp
repnz
scas
stos
dec
xchg
into
imul
ret
fisttp
mov
pop
sahf
icebp
rcl
js
push
jo
add
call
(bad)
adc
xchg
push
sbb
push
call
sub
lds
xchg
ins
jg
push
sbb
sahf
outs
pop
pop
in
popa
mov
jecxz
jnp
adc
rcr
int3
xchg
cmp
push
(bad)
shl
cmc
jns
xor
aam
pop
sbb
out
adc
imul
sub
repnz
jmp
add
jp
jle
inc
retf
and
imul
add
out
ror
nop
stos
fidiv
rol
lods
mov
xor
mov
ret
cwde
call
pusha
in
mov
push
inc
mov
sahf
and
das
and
mov
ret
lods
cmps
push
rcl
mov
ret
cwde
xor
xor
out
push
fmul
cmp
add
push
dec
add
mov
push
dec
in
and
xchg
mov
fst
dec
push
mov
shl
lods
xor
into
adc
mov
out
mov
mov
fistp
outs
push
dec
fimul
adc
cmp
pusha
xchg
in
lods
push
(bad)
or
dec
js
inc
cmps
mov
adc
cmp
jae
shl
aaa
pop
cmps
mov
clc
mov
xchg
xor
popf
js
clc
mov
popf
or
repnz
sahf
(bad)
jge
xchg
sbb
out
out
xchg
pop
or
push
add
mov
push
push
fsubr
lods
mov
sbb
stos
pushf
jp
outs
adc
xchg
cs
cdq
call
mov
test
xor
ins
cmp
nop
fwait
pushf
mov
push
mov
fnstenv
popa
jbe
xor
mov
test
jns
cmps
cwde
xchg
push
sub
popa
jmp
jmp
sbb
stc
aam
inc
(bad)
fiadd
(bad)
mov
mov
mov
mov
repz
fbld
call
lods
and
sahf
movs
lods
data16
dec
jb
mov
imul
push
retf
pop
jbe
dec
in
sbb
dec
sbb
pop
inc
lea
cmp
sbb
(bad)
scas
adc
push
jne
(bad)
adc
(bad)
das
not
xor
jns
cli
pop
and
cmp
stos
mov
inc
dec
push
aad
mov
and
pop
cmc
je
icebp
adc
mov
cmps
mov
les
shl
add
out
lods
(bad)
xlat
xor
xor
lods
add
push
lahf
fadd
ret
stos
sar
cs
jns
dec
arpl
mov
xor
push
fs
pop
mov
sbb
ficom
cli
xchg
and
cmp
add
mov
inc
jecxz
mov
pop
mov
ret
adc
push
imul
fistp
into
or
gs
adc
movs
fild
int
mov
cmp
clc
outs
imul
and
nop
movs
push
pop
sub
or
(bad)
aaa
jns
mov
pop
imul
clc
push
mov
jl
cmp
xchg
add
sti
lods
mov
push
test
adc
push
cmp
adc
push
cmps
xchg
call
inc
(bad)
hlt
repnz
and
popf
out
xor
mov
and
out
pop
mov
stos
dec
inc
mov
xor
xchg
pop
xor
add
xchg
pop
fucomi
int3
lock
adc
pop
add
rol
add
pop
push
push
test
ins
or
in
xchg
xlat
and
sub
dec
bound
mov
in
add
jnp
or
das
iret
jl
pop
mov
add
xor
xor
out
stos
jne
mov
enter
adc
shr
push
mov
inc
mov
dec
and
ja
dec
pop
ror
pop
jno
jnp
test
ficomp
and
inc
xchg
sbb
aad
aad
xor
int3
sub
mov
cmc
sub
xor
add
out
sbb
or
jmp
lods
sub
xlat
and
loopne
xchg
lods
and
sub
lea
(bad)
mov
pop
pop
cmp
inc
das
retf
test
lods
ds
iret
mov
xchg
sub
and
and
sub
fnstsw
cmp
push
push
jge
movs
scas
outs
dec
xchg
std
mov
xor
adc
inc
ins
sbb
mov
jmp
shl
xor
xlat
ins
lds
mov
fistp
push
or
mov
aaa
(bad)
fild
in
test
out
xchg
aas
mov
out
pop
dec
pusha
jge
jo
jo
mov
push
push
fwait
icebp
sahf
inc
outs
push
loope
leave
and
pop
ins
add
adc
out
dec
cmp
inc
rol
mov
sbb
sahf
gs
mov
and
jae
movs
mov
mov
and
adc
test
jecxz
and
mov
sub
push
inc
popw
sub
xlat
mov
mov
dec
out
mov
stc
cwde
cld
mov
add
test
daa
rcr
addr16
aad
into
xchg
jle
out
cli
or
or
mov
in
pop
icebp
movq
mov
stos
shl
aam
scas
mov
fsubr
mov
out
sahf
inc
pop
jno
aam
out
outs
shr
jnp
push
sub
adc
xor
push
or
xchg
adc
fsub
mov
cmp
mov
pop
fsubr
pop
mov
int3
or
leave
xor
add
xchg
mov
stos
jl
mov
cmp
sbb
add
push
cmps
lock
icebp
das
and
inc
loop
push
rol
sub
push
ja
retf
test
push
or
mov
sbb
sahf
dec
retf
hlt
ror
push
test
cmp
pushf
test
out
mov
add
mov
sub
sbb
(bad)
sub
jae
jp
jge
aad
rcl
stos
ja
push
nop
lock
and
adc
fnstcw
ja
or
cmps
fst
sub
(bad)
xchg
pop
jmp
dec
addr16
dec
popf
or
hlt
mov
out
stc
mov
aas
sbb
mov
add
jp
xchg
div
call
int
jb
jb
cmp
push
addr16
ficom
aam
xchg
das
int
dec
es
push
int
or
jp
aas
lea
shl
jp
xor
lds
stc
sbb
push
and
aad
xchg
adc
stc
fwait
mov
push
add
jae
pop
inc
sbb
(bad)
fadd
fcmovbe
sti
xchg
loope
icebp
inc
xchg
jns
popa
(bad)
dec
jle
shl
sub
std
out
inc
pop
and
mov
adc
dec
lods
into
ret
jmp
lods
mov
add
mov
mov
mov
cmps
xchg
enter
dec
or
in
leave
lea
jmp
push
(bad)
pop
nop
jno
scas
mov
out
inc
enter
inc
shl
movs
jmp
adc
in
add
jno
aam
sbb
(bad)
in
push
pop
leave
xchg
js
test
(bad)
or
mov
jbe
retf
pop
inc
ds
and
cwde
jo
mov
inc
sbb
inc
xchg
sbb
cmp
mov
pop
fldenv
ss
mov
mov
mov
push
loopne
scas
aad
jb
clc
pop
int
push
fisttp
sub
retf
xchg
jae
mov
pop
pop
ss
and
xor
cmp
inc
call
std
retf
getsec
sbb
inc
test
cdq
(bad)
or
js
jb
adc
jecxz
inc
stos
push
movs
mov
test
cmp
sub
fadd
popf
inc
inc
(bad)
jns
inc
push
inc
sti
cmp
or
fmul
add
and
pop
mov
adc
dec
ds
inc
dec
add
in
out
mov
imul
mov
imul
dec
mov
test
pop
jb
or
dec
cmp
cld
lahf
out
sbb
adc
inc
sbb
push
push
xor
pop
outs
mov
sub
enter
push
jg
adc
repz
mov
or
inc
shl
add
std
lock
jbe
test
jnp
cmp
mov
mov
test
pop
jl
adc
scas
and
in
dec
call
and
rol
xchg
cmp
xchg
repz
sbb
push
inc
push
sub
add
lock
addr16
std
jb
add
xchg
push
ds
cmp
mov
mov
mov
(bad)
sbb
and
mov
outs
jns
loope
pop
retf
fmul
inc
xor
and
xor
add
pop
retf
shl
sbb
mov
sbb
pushf
sub
sub
dec
or
mov
js
stos
mov
cmp
cmc
sbb
lods
ror
inc
xchg
scas
inc
xchg
fdivr
mov
inc
hlt
push
pop
xchg
(bad)
mul
fldcw
rol
push
ja
adc
and
cdq
add
or
outs
lods
adc
cmp
jle
mov
outs
out
jne
repz
ins
add
cmp
fs
mov
mov
test
idiv
add
sbb
cmp
jb
xchg
mov
cmp
pusha
aaa
cmps
scas
pop
or
repnz
pusha
imul
push
xchg
dec
aas
sub
cmps
dec
adc
mov
sbb
pop
jle
movs
retf
jne
fs
aas
and
inc
sub
add
xor
cdq
add
cmp
jnp
or
(bad)
icebp
(bad)
clc
push
mov
cwde
es
lods
push
mov
rol
cld
imul
push
lock
mov
(bad)
mov
and
mov
pop
cmc
pushf
bnd
pop
dec
push
(bad)
loope
or
jle
xchg
pop
or
jae
fs
mov
outs
pop
std
int3
fwait
sub
add
fs
sub
xor
lods
mov
xor
out
cli
xchg
std
mov
dec
push
ror
jmp
adc
fist
pop
jl
in
test
cmp
stc
lock
dec
and
outs
pop
or
push
push
int3
hlt
inc
ficom
aas
ja
push
inc
jb
repz
push
mov
mov
or
sbb
mov
mov
stos
or
pop
add
dec
or
jecxz
jmp
(bad)
cld
mov
div
pop
ds
dec
mov
add
xchg
hlt
jge
test
and
ret
cli
add
loop
ror
push
lahf
mov
mov
sbb
aaa
imul
and
test
sbb
imul
fsub
inc
xchg
and
adc
jp
jp
mov
(bad)
xchg
add
scas
add
dec
xchg
mov
jb
test
jle
sbb
jp
xchg
xchg
add
dec
arpl
jmp
fstp
or
sub
pop
lahf
imul
(bad)
cmps
mov
sub
retf
test
bound
or
lods
mov
add
inc
xor
enter
xchg
jae
loop
cmp
vcvtsi2ss
mov
iret
mov
ss
and
dec
inc
jne
dec
sub
adc
mov
fst
clc
scas
jbe
es
test
out
jmp
sub
add
aad
xchg
iret
dec
mov
sub
sbb
int3
ins
shr
mov
add
push
aas
pop
mov
jmp
mov
ss
sub
nop
call
fisubr
dec
aam
data16
inc
fild
call
out
inc
xchg
ret
aas
retf
mov
sbb
inc
shr
push
fidiv
jae
dec
outs
ficom
in
cmps
ja
mov
mov
les
mov
push
sub
call
mov
sub
xor
(bad)
mov
cmps
fnclex
and
fistp
pusha
scas
cmp
loopne
xchg
cmp
jge
cs
push
cmp
sub
nop
stos
adc
scas
adc
inc
mov
xchg
push
ins
(bad)
pop
and
stos
hlt
enter
xor
test
push
rcr
fbld
xlat
or
or
das
int
dec
push
adc
shr
add
clc
setns
cmp
xchg
push
in
push
jbe
sub
stos
loop
imul
and
loopne
js
dec
inc
inc
sub
pop
ja
enter
int3
div
push
dec
fdivrp
add
mov
inc
xor
rcr
test
sub
stc
push
test
or
call
out
rcl
pusha
jle
cli
rcl
adc
add
std
mov
push
sbb
in
add
push
xchg
jb
adc
call
movs
cli
std
popa
push
mov
ret
ror
call
mov
pusha
scas
dec
adc
arpl
fsubr
fs
pop
xchg
sbb
push
int
call
cld
mov
call
jmp
addr16
push
je
mov
int3
pop
(bad)
sbb
imul
mov
or
pminub
lahf
stc
adc
cmps
pop
mov
fstp
fsub
stos
mov
je
adc
add
inc
xchg
mov
jg
mov
inc
test
xor
inc
movs
cmp
cmp
mov
popf
push
fs
xchg
(bad)
jae
out
jo
sbb
dec
lahf
adc
adc
fdiv
shl
dec
push
xchg
sbb
fst
xlat
retf
hlt
mov
mov
xchg
fisttp
ror
push
ja
xchg
bound
cmc
ins
or
cmp
sub
xchg
pop
das
cmp
repnz
in
popf
and
aaa
lds
mov
cmp
scas
cli
pop
mov
popf
add
test
sub
jmp
scas
cmp
sub
lods
in
jns
(bad)
fstp
scas
sbb
out
push
cmp
mov
adc
fstp
mov
xor
rcr
cmps
dec
dec
js
test
sbb
cld
(bad)
xor
xchg
add
mov
jb
mov
push
jne
dec
fs
sbb
cld
rcr
jns
and
aas
lods
test
dec
sub
iret
gs
jmp
mov
jnp
mov
jns
hlt
data16
stc
repnz
in
stos
mov
aaa
shl
mov
(bad)
dec
sub
mov
movs
push
dec
jp
clc
push
leave
xchg
xor
pop
jmp
mov
mov
inc
cmp
repz
sbb
stos
sti
enter
cmp
cs
adc
mov
mov
shl
dec
int
in
sub
mov
jle
mov
or
call
pop
out
dec
ins
enter
pop
mov
retf
xchg
fdivr
aas
pusha
sub
inc
lods
mov
sub
push
push
stos
push
bound
cdq
xchg
das
push
arpl
or
and
scas
cld
(bad)
ds
jle
packssdw
nop
outs
neg
jmp
jmp
aam
(bad)
ins
xor
cmp
stos
mov
mov
mov
inc
push
das
mov
xchg
push
repnz
cmc
and
jno
retf
js
rol
in
retf
mov
jl
jns
xchg
or
(bad)
xor
aad
fist
mov
push
stos
jae
cmps
mov
int
jl
adc
xchg
(bad)
or
sbb
fnstcw
xchg
test
pop
pop
test
pop
push
bound
xchg
ja
shl
xchg
push
xchg
iret
fild
in
pop
aaa
mov
aad
pop
imul
or
sahf
and
mov
mov
fisttp
inc
popa
cmp
in
gs
test
mov
hlt
cmc
rol
imul
lahf
dec
sti
(bad)
sbb
call
outs
mov
in
xchg
je
or
in
std
ds
xchg
cmp
inc
stos
retf
mov
or
test
leave
dec
aam
dec
sbb
shl
inc
loopne
push
shr
stos
mov
pop
imul
fnsave
mov
aaa
dec
imul
mul
mov
dec
add
lock
push
test
out
out
jge
mov
xchg
adc
jmp
movs
inc
push
dec
xchg
adc
js
add
clc
iret
xor
popa
push
cli
and
scas
out
jno
cmp
cmp
cmp
pop
mov
fimul
adc
call
mov
cmp
ja
xchg
adc
pop
sbb
fcom
out
mov
mov
out
sar
int
and
and
jle
ret
movs
mov
xor
(bad)
call
mov
cli
js
lea
ja
stc
jae
fidiv
addr16
int3
mov
(bad)
in
out
adc
pop
dec
sbb
pop
ja
mov
daa
lods
and
pop
mov
inc
dec
cmp
mov
sbb
cdq
iret
lods
jo
mov
in
loop
les
jg
cmp
out
pop
sbb
cs
mov
mov
(bad)
les
ret
ret
push
lods
lock
sahf
mov
push
pop
push
adc
mov
dec
mov
jecxz
cs
idiv
mov
add
into
adc
dec
out
sahf
sub
push
xchg
cmp
imul
repz
(bad)
push
cmp
aam
(bad)
sbb
enter
sub
scas
cmp
aaa
call
mov
and
nop
add
xchg
sbb
cmps
arpl
push
jmp
loope
mov
jns
scas
in
pop
and
adc
nop
retf
pop
sbb
xchg
sbb
test
cmps
mov
pop
mov
cwde
fdivr
(bad)
xchg
mov
push
fldenv
ins
fs
push
sbb
fs
push
pop
or
dec
popa
cmp
sti
repz
repnz
fidiv
and
and
xor
fsubr
jnp
push
fild
mov
xchg
jns
jmp
cld
popf
xchg
arpl
cld
movs
mov
and
sbb
or
outs
fbld
add
mov
fdiv
push
in
mov
ja
pop
mov
test
movs
lock
cmp
test
cmp
(bad)
inc
leave
pop
xchg
int3
call
outs
call
loopne
into
out
sbb
retf
stc
jne
mov
std
mov
ret
test
mov
test
shr
fsubr
in
cld
test
sub
xchg
xor
(bad)
fdiv
mov
pop
mov
rol
and
js
mov
fsubr
je
icebp
add
inc
push
shr
les
mov
sub
out
ss
and
push
mov
lods
stos
dec
stos
jo
inc
mov
adc
xchg
and
mov
ja
ins
push
cs
adc
xchg
pusha
dec
or
lds
stos
shl
jp
mov
jo
les
fs
mov
dec
jecxz
shl
xlat
push
popf
sbb
(bad)
fimul
inc
or
cli
mov
les
(bad)
xchg
fs
fwait
cmp
jae
sub
inc
mov
pushf
(bad)
stos
xor
or
sti
xor
fcomp
mov
test
mov
popa
daa
inc
shl
out
lds
xchg
shr
add
out
dec
mov
aas
std
movs
lahf
lods
cmc
sbb
push
add
mov
jmp
(bad)
sbb
inc
jo
pop
push
sbb
sub
dec
shr
sbb
cdq
adc
scas
mov
test
push
sub
lock
les
adc
repz
ret
xor
(bad)
int
imul
adc
cmp
and
or
cmp
push
clc
cmp
fisttp
sahf
mov
xor
push
fs
iret
sub
(bad)
push
xchg
and
pop
sbb
in
mov
(bad)
xlat
fsubr
and
(bad)
cmc
scas
inc
cmp
add
pop
lods
push
(bad)
and
cld
int
sbb
data16
inc
and
jmp
inc
jp
inc
xchg
dec
imul
dec
or
pop
div
cld
xor
xchg
and
in
test
jmp
jmp
pusha
shr
retf
push
daa
jmp
and
in
pop
xchg
test
in
jmp
arpl
cmp
out
pop
and
into
add
cld
inc
push
arpl
sbb
mov
push
(bad)
lahf
in
cli
imul
push
jo
adc
adc
out
push
mov
ss
xchg
add
dec
and
hlt
rol
bound
test
and
repz
mov
gs
sti
frstor
addr16
stos
sub
fidivr
out
daa
out
sub
fsub
mov
test
jno
cmp
in
leave
mov
arpl
mov
icebp
movs
xchg
cld
push
imul
pop
jg
(bad)
aas
mov
add
xor
bound
jecxz
fst
gs
mov
bsf
mov
mul
data16
int3
xchg
stos
push
mov
mov
cmc
and
ss
sbb
test
push
rcr
addr16
jp
mov
lock
adc
arpl
add
addr16
int3
mov
movs
xchg
ins
sar
fdivr
xor
or
mov
push
inc
fcmove
push
ins
cmp
inc
fild
xor
xchg
pop
mov
scas
jbe
mov
push
cmps
pop
mov
mov
ret
sub
aam
std
dec
leave
sar
ins
and
push
push
xchg
lock
sub
into
mov
mov
fcom
ficomp
pop
dec
inc
ins
push
repz
sub
mov
jg
cmp
fnstsw
lods
outs
imul
(bad)
jmp
or
push
push
adc
scas
mov
mov
out
or
xor
popf
mov
sub
fwait
mov
jmp
mov
loop
cmp
xchg
dec
or
mov
pusha
rcr
inc
cmc
push
stos
and
mov
call
mov
aaa
inc
mov
pop
inc
mov
jbe
or
ins
mov
jle
xchg
mov
mov
and
jle
mov
cwde
rol
jg
lahf
add
inc
mov
xchg
icebp
(bad)
aam
xor
add
mov
mov
adc
jg
jge
popa
mov
mov
fistp
fisubr
cmps
dec
pop
ror
adc
cmps
xchg
fwait
test
int
inc
push
cmp
es
outs
sbb
mov
jl
es
mov
into
fsubr
pop
cmp
sahf
pop
cmp
aaa
sub
les
nop
and
inc
pop
iret
xchg
push
mov
inc
pop
mov
mov
out
dec
push
hlt
rcr
or
push
sub
movs
add
pusha
sub
ins
pop
data16
ss
sub
and
and
bound
imul
test
cdq
pop
nop
(bad)
mov
ins
fadd
dec
fnstcw
lods
jle
push
and
jle
mov
pop
dec
out
not
add
inc
mov
add
(bad)
mov
mov
xchg
repnz
lds
retf
popf
dec
stos
repnz
ins
mov
xor
and
in
movs
mov
dec
mov
cmp
mov
lods
or
xor
daa
mov
push
repnz
mov
enter
sub
or
mov
mov
test
ins
sub
dec
ss
clc
fmul
repnz
fs
neg
add
push
aad
out
aad
imul
mov
jmp
pop
or
inc
rcl
ret
xor
dec
xchg
fsub
gs
adc
into
lea
retf
xlat
ins
jne
cdq
out
lock
cwde
mov
sbb
adc
cmp
cmp
call
js
pop
mov
test
dec
sbb
dec
and
arpl
jmp
scas
sub
lds
fadd
sub
dec
xlat
or
jp
cmp
add
xor
das
sbb
or
sbb
cdq
inc
inc
push
dec
cmp
push
or
ins
cs
mov
pop
and
cmc
(bad)
push
add
xchg
(bad)
or
and
mov
cwde
sub
lea
icebp
add
stos
leave
jecxz
mov
call
fs
mov
popf
xor
fld
retf
jns
mov
add
stc
arpl
mov
das
jecxz
mov
xchg
stos
pop
adc
sbb
dec
aad
xor
pop
and
dec
xchg
pop
dec
push
xchg
mov
rol
stos
push
mov
aad
dec
inc
add
movs
retf
mov
inc
ret
test
fdiv
stos
cld
mov
sbb
into
xchg
push
sub
(bad)
sbb
je
push
in
mov
pusha
and
xor
sub
or
shr
mov
adc
int
std
je
adc
pmuludq
cdq
xlat
sbb
out
jbe
nop
inc
cmp
stos
dec
sbb
mov
cmp
clc
xchg
cwde
test
mov
and
mov
add
lods
mov
fst
adc
fisubr
enter
sti
ret
shl
arpl
test
pop
ja
pop
hlt
add
leave
xchg
jne
sub
sbb
in
movs
push
mov
outs
cwde
leave
dec
(bad)
pop
iret
loopne
mov
sahf
hlt
retf
sbb
inc
sahf
test
push
mov
(bad)
pop
xchg
cmps
pop
(bad)
enter
in
xor
sbb
lahf
sar
js
mov
out
stos
jmp
mov
sbb
sub
je
stc
xchg
sar
inc
ror
inc
sub
arpl
cmps
mov
push
popf
push
cwde
(bad)
cwde
mov
jmp
xchg
dec
fwait
je
je
pusha
pop
jl
jae
jae
jl
mov
add
aaa
std
and
inc
xchg
fidivr
xor
pop
sbb
xor
add
mov
mov
fadd
popa
bnd
es
inc
cmps
daa
(bad)
jb
fisubr
scas
dec
lds
jb
aad
push
sar
mov
push
push
pop
jns
repz
shr
in
push
xchg
ds
cmp
cmp
ret
mov
outs
cmps
push
sbb
fucomp
in
jo
test
ins
cdq
push
cmp
push
inc
outs
fild
jo
nop
sub
sbb
(bad)
icebp
mov
cmp
mov
ins
mov
in
js
fldcw
cld
inc
or
mov
je
mov
add
int3
out
push
in
popf
shl
into
mov
xchg
xchg
pop
in
mov
adc
or
test
les
retf
cmp
std
mov
imul
inc
fnsetpm(287
(bad)
frstor
add
jnp
adc
pop
mov
aaa
xchg
mov
push
fcmovbe
lods
and
je
lods
sub
xor
call
fdivr
call
fild
(bad)
fucom
popf
push
xor
das
jle
sbb
and
daa
leave
push
jne
ins
hlt
cmp
into
or
shr
and
stc
lock
popf
stc
adc
pop
sbb
pop
pop
ja
mov
ret
fnstsw
jle
mov
or
mov
retf
or
rcr
rcr
jmp
cmps
pop
hlt
inc
fsub
pop
xchg
mov
test
shr
push
pusha
inc
add
mov
push
add
(bad)
vpinsrw
jns
rol
mov
pop
lea
pop
mov
pushf
mov
pop
mov
xchg
lahf
loopne
jmp
bound
data16
push
pusha
push
jl
and
sar
aas
scas
scas
mov
fmul
sub
cdq
rcl
mov
cmp
mov
dec
out
sub
push
pusha
outs
dec
sub
pop
or
icebp
push
inc
xchg
sub
jbe
je
test
xor
rol
xor
mov
mov
(bad)
cmp
into
and
outs
jge
jmp
ret
ret
push
and
adc
mov
jmp
mov
dec
out
and
outs
les
imul
inc
xchg
sub
rol
cli
xchg
enter
adc
sub
std
in
ret
nop
outs
push
or
jo
cmp
mov
jae
push
or
popa
(bad)
in
mov
fcmovnu
movs
push
setle
movs
js
scas
push
mov
push
xchg
pop
ins
pop
(bad)
xchg
jmp
stc
mov
mov
inc
xor
jbe
(bad)
lods
lea
test
xchg
das
pop
mov
es
cli
cmc
push
cmp
enter
enter
inc
retf
test
xchg
mov
not
imul
std
inc
neg
mov
push
stc
es
add
mov
aad
mov
xchg
add
push
mov
mov
repz
jl
rol
aam
gs
mov
fmul
imul
rcl
(bad)
lds
test
cmc
jae
clc
shl
push
xchg
into
rcr
lods
jmp
mov
cmp
sbb
and
fnstsw
sbb
jge
idiv
push
adc
out
sbb
jp
mov
pop
add
mov
cmc
lock
sbb
repnz
pop
(bad)
ins
loope
add
ja
push
lock
jg
addr16
lods
stos
out
std
jno
(bad)
mov
adc
mov
pop
add
or
mov
sbb
nop
retf
jbe
mov
or
xor
les
rol
push
fucom
adc
dec
push
mov
pop
adc
add
adc
jb
(bad)
cmp
jge
sub
leave
sub
aaa
addr16
mov
repnz
fidiv
inc
xor
(bad)
test
xchg
cli
push
sbb
pop
lods
push
pop
movs
xor
int3
inc
push
cmc
je
fiadd
js
xor
test
push
or
mov
loope
cld
jnp
(bad)
pop
inc
fidivr
lahf
loopne
lods
les
xchg
pop
sbb
push
ret
cmp
cmp
iret
mov
jne
mov
mov
test
and
in
pop
cmp
jae
cmp
sub
jl
pop
sub
push
sbb
imul
dec
fs
(bad)
xor
jg
lods
sbb
(bad)
aad
enter
push
je
das
mov
add
out
xchg
sbb
hlt
loope
rcl
loop
test
pop
mov
scas
test
sub
loope
out
adc
test
cmp
mov
sbb
jnp
cmp
outs
push
push
add
push
inc
inc
add
sahf
adc
(bad)
sti
popf
leave
add
cmp
jae
cdq
add
mov
jl
jns
jno
push
enter
add
pop
int3
dec
inc
xchg
repnz
xchg
test
cmps
pushf
repnz
inc
rcr
sub
xchg
in
push
out
jl
push
les
fidiv
cmp
sbb
cwde
mov
(bad)
in
push
xchg
add
jecxz
push
jge
or
jge
push
mov
push
pop
retf
stos
sub
sub
inc
outs
icebp
lds
dec
ds
dec
or
cdq
jle
sbb
mov
fldenv
add
add
aam
in
jmp
sbb
mov
adc
mov
mov
and
mov
lds
cli
out
fwait
mov
imul
lods
pop
jecxz
dec
cmp
push
xor
ror
sbb
adc
data16
mov
stos
xor
test
push
test
inc
sti
xlat
inc
cmps
pop
sub
out
sub
fimul
psrlq
scas
jns
add
rol
jle
sar
test
push
dec
(bad)
xchg
into
loop
and
shl
inc
je
sub
inc
loope
int
mov
pop
cmp
add
pusha
mov
cmp
push
push
xor
lods
xor
push
mov
push
test
stos
(bad)
lahf
push
pop
pop
sbb
iret
addr16
popf
test
add
xor
jg
adc
cmp
(bad)
jge
enter
inc
enter
jns
out
cmps
loopne
addr16
sub
cmps
(bad)
adc
mul
rcr
xlat
inc
pushf
iret
repnz
pop
sbb
mov
cmps
sbb
mov
daa
aam
std
pop
sbb
cli
fild
test
mov
dec
pop
jle
fmul
sbb
adc
xchg
push
mov
sahf
sti
pop
out
jle
out
rcr
and
sub
rep
fcmove
cmps
sub
jle
sub
out
and
das
repnz
and
cdq
ret
xor
ret
outs
ficom
jmp
clc
pop
(bad)
fild
mov
dec
repz
ret
lock
sub
jbe
jmp
xchg
inc
pop
sub
ret
or
xor
je
xor
iret
push
ja
daa
bound
cmp
push
pusha
pop
push
or
and
pop
xlat
xchg
jae
int
dec
adc
int3
dec
push
pusha
aas
sar
or
fldenv
xchg
enter
adc
jecxz
inc
jns
ror
sbb
stos
pop
add
scas
fisttp
mov
xchg
out
ret
xchg
les
xor
sub
pop
jmp
clc
push
mov
imul
push
xor
xlat
mov
xchg
mov
sub
xor
cs
sahf
xor
pop
addr16
dec
inc
push
les
add
shl
and
pusha
stc
cli
sub
jns
sbb
ds
loop
arpl
dec
mov
into
ss
pushf
call
lock
nop
xchg
cmps
or
cli
stos
ins
aas
mov
sub
les
mov
sub
pop
mov
daa
dec
imul
shl
and
sahf
mov
popa
xlat
sbb
pop
push
jae
shl
imul
cmc
shl
test
js
jb
adc
mov
xchg
out
rcr
std
pop
push
or
ror
add
dec
jns
mov
pushf
add
stc
vhaddpd
cmp
clc
pop
inc
pop
(bad)
mov
adc
jbe
xchg
cli
jne
lds
loopne
cmps
mov
mov
call
lahf
(bad)
out
dec
mov
sub
loope
or
test
push
leave
cmps
iret
xchg
adc
jmp
call
and
and
popa
adc
cli
add
adc
mov
dec
mov
and
(bad)
push
pushf
sub
push
(bad)
adc
ret
dec
jb
cmp
lds
pusha
fcom
arpl
enter
add
daa
adc
inc
xchg
jmp
retf
mov
fisttp
arpl
out
in
or
push
add
mov
xlat
jle
pop
mov
jl
enter
add
call
pushf
lock
push
rcr
mov
call
sbb
ss
jp
mov
fwait
push
out
jl
jnp
shl
dec
dec
scas
fs
mov
int
clc
mov
and
hlt
repnz
movs
mov
cmp
rcl
cmp
mov
jmp
repnz
ror
repz
mov
jo
ficomp
inc
sbb
sbb
mov
inc
mov
data16
shl
clc
sti
stos
lea
jl
or
pusha
push
sub
sbb
ja
pop
cdq
pop
cmp
mov
clc
push
pop
into
dec
jae
or
push
aam
shl
or
xchg
sub
fild
inc
fisubr
push
ret
mov
into
xchg
jl
outs
cmp
sbb
pcmpgtw
mov
sbb
mov
mov
lahf
into
jle
loop
enter
dec
add
cmc
cdq
outs
je
sub
mov
adc
ret
lea
sahf
std
mov
arpl
mov
cdq
popa
adc
das
inc
retf
sar
sar
adc
jp
pop
jbe
sbb
mov
jno
jo
add
or
xor
sub
lods
jae
cmp
mov
movs
fadd
adc
add
imul
jno
sub
bound
and
or
xchg
pop
cmp
lods
test
call
jns
or
xchg
mov
and
mov
mov
jns
xor
popf
xor
(bad)
mov
pop
dec
mov
and
cld
dec
bound
jl
enter
in
sar
test
or
popf
lods
fstp
push
jmp
rol
push
inc
(bad)
jp
mov
ficom
mov
ins
loop
push
ror
adc
push
pop
std
sar
cmps
and
xchg
and
data16
mov
cmp
repnz
cmps
inc
or
inc
pop
sbb
push
adc
jle
call
and
clc
ds
xchg
jle
test
(bad)
test
and
mov
sbb
push
out
enter
sbb
adc
or
sub
dec
jmp
pop
aas
pop
push
mov
jmp
inc
leave
(bad)
push
mov
sbb
push
sbb
pop
cli
das
sbb
jp
sbb
pop
jo
ja
xor
repz
mov
xchg
push
daa
call
fnsave
(bad)
in
pusha
and
test
into
and
test
loop
adc
shl
mov
cmp
ror
mov
sbb
test
jb
sub
jbe
jmp
retf
xlat
xchg
fscale
mov
into
pop
mov
rcr
push
rcr
push
lock
jmp
push
mov
les
inc
jnp
test
bound
nop
arpl
aaa
pop
jmp
rol
outs
outs
or
imul
stos
dec
cmp
popf
lods
cdq
mov
call
mov
push
ret
lea
cli
mov
mov
cmp
fld
cwde
and
test
mov
jo
push
or
cmp
add
and
mov
retf
xor
test
pop
inc
adc
push
mov
ret
dec
cs
push
pop
cmp
retf
dec
sub
sbb
sahf
cs
cmc
fmul
mov
jo
loopne
jno
adc
in
enter
cmp
sub
and
fmul
mov
pop
mov
jne
out
lods
dec
mov
cmp
loope
pop
push
push
and
xchg
in
or
fxch
or
test
fsubrp
ror
sbb
sub
add
and
dec
cld
xor
fisttp
push
push
ror
sbb
and
inc
xor
iret
inc
mov
loop
dec
pushf
xchg
and
mov
dec
push
int3
sub
test
jmp
cmps
xchg
aam
mov
fstp
cmps
enter
inc
icebp
push
test
lods
sbb
out
out
or
cmp
mov
jmp
mov
jno
adc
push
loopne
or
jge
jle
cmp
sbb
xchg
das
pop
ins
repnz
lea
cs
sbb
out
sub
push
stc
std
and
xchg
fst
and
fild
add
iret
push
xchg
frstor
nop
in
in
(bad)
lds
jne
and
adc
sub
jge
mov
ret
ss
lock
jmp
pop
out
mov
cmps
xchg
pusha
shr
pop
inc
add
xor
add
xchg
stc
push
test
mov
retf
mov
(bad)
mov
mov
lock
push
int3
fist
and
add
int
cwde
loop
dec
ds
mov
sbb
lea
push
mov
inc
add
or
test
in
mov
gs
sar
mov
and
dec
test
push
add
and
js
jl
sub
sub
cmp
mov
rcl
pop
je
(bad)
xchg
(bad)
add
adc
adc
xor
loop
jnp
mov
shl
cli
(bad)
and
cdq
inc
inc
int
cld
adc
mov
neg
jnp
scas
(bad)
jne
lods
dec
data16
jge
xor
push
mov
cmp
or
mov
dec
int
cwde
or
and
pop
shr
fnstsw
retf
aaa
or
aaa
push
and
or
or
mov
test
ins
add
cdq
aaa
dec
daa
xor
jmp
(bad)
mov
push
clc
mov
pop
sahf
dec
xor
test
pop
mov
mov
push
iret
mov
cmp
inc
ds
test
mov
mov
mov
cs
out
and
sub
add
xchg
mov
mov
adc
lahf
sub
ins
mov
sbb
push
je
ins
and
sbb
mov
add
xchg
add
ja
cmp
push
repnz
fwait
shl
je
push
xchg
in
xor
adc
ret
xchg
sbb
adc
jne
mov
ds
cdq
mov
ins
dec
(bad)
or
cmp
pop
push
mov
sub
mov
fwait
mov
pop
data16
and
xchg
dec
sub
iret
cmp
dec
mov
test
and
pop
or
or
loop
dec
in
fwait
adc
nop
ds
and
push
adc
iret
scas
rcl
adc
mov
stos
das
retf
ret
dec
aam
lea
xor
dec
dec
bound
jb
sub
int3
xchg
scas
adc
repz
push
or
sar
cmp
int3
sub
pop
movs
jmp
and
div
pop
jae
bound
mov
or
xor
ds
cmc
xor
push
loopne
mov
mov
pop
jl
xchg
and
jmp
inc
dec
paddsb
mov
inc
xor
sub
mov
lds
popa
dec
inc
int3
add
inc
sub
movs
mov
imul
pop
call
ss
fwait
test
std
jmp
push
pusha
call
outs
shl
pop
in
int
pop
adc
push
dec
test
shl
rcl
xlat
inc
xor
aad
ins
push
(bad)
xchg
lds
and
mov
sbb
inc
shr
xchg
sub
pushf
loope
retf
mov
leave
popa
stos
popa
in
add
xor
jl
mov
out
sahf
rcr
cmp
or
cld
(bad)
outs
addr16
sub
inc
cmp
arpl
dec
adc
xchg
pushf
fild
xchg
ret
in
mov
repz
pop
mov
mov
(bad)
push
xchg
mov
xlat
dec
bound
sbb
cmps
mov
xor
mov
and
mov
rcr
add
das
lds
aaa
leave
(bad)
hlt
aas
inc
pop
mov
mov
les
inc
cmps
pop
popf
inc
repz
inc
add
fidiv
ror
dec
sbb
xor
ds
mov
movs
out
jno
int3
jns
cld
das
sub
inc
sbb
xchg
mov
cmp
pop
gs
daa
sahf
dec
xchg
fs
hlt
sbb
mov
jmp
sub
xchg
add
inc
mov
pushf
repz
lahf
xor
pop
xor
dec
in
inc
or
ja
or
xlat
or
out
sti
push
fst
outs
rol
scas
sbb
pop
mov
xchg
cwde
mov
stos
jb
mov
pusha
inc
xchg
inc
mov
add
pop
pop
xchg
mov
fcmovnu
fisttp
lods
out
jg
gs
ds
xor
mov
jl
les
jnp
mov
hlt
pop
mov
mov
pop
sbb
push
push
push
cld
adc
fwait
popa
call
pop
pop
add
adc
ins
dec
add
and
dec
mov
jge
add
and
js
mov
not
pusha
pop
aam
test
sbb
mov
sbb
test
push
jbe
jmp
pop
cmps
add
cld
cmp
fisubr
movs
sbb
fdiv
popf
dec
(bad)
hlt
cmp
loope
stos
stc
jp
sub
cmp
out
repz
pop
test
sub
xor
repnz
test
xchg
mov
fidiv
fcmovu
dec
xor
adc
or
mov
jle
ret
or
mov
hlt
mov
mov
out
out
push
scas
jb
xchg
xor
mov
mov
(bad)
jne
xor
imul
iret
fldenv
es
sbb
test
addr16
es
dec
mov
xor
and
inc
push
mov
and
sub
mov
sub
(bad)
adc
cld
push
cmc
lods
push
mov
jmp
das
push
jmp
pop
cmp
int
or
and
data16
call
aad
dec
int3
xor
pop
pushf
lahf
push
dec
loop
imul
nop
xchg
jno
jnp
and
and
jg
addr16
cdq
out
icebp
xchg
popa
out
movs
mov
in
mov
or
scas
jb
push
lea
outs
jne
xor
push
daa
icebp
(bad)
stc
mov
fsubr
cmps
xor
leave
sub
shl
mov
mov
out
or
lds
gs
xchg
xor
std
aad
pop
mov
xor
repz
jg
xor
sub
lods
mov
adc
lock
out
cmp
ret
xor
sahf
out
ret
add
call
dec
retf
es
inc
bound
ds
hlt
cmp
or
aam
(bad)
jmp
pop
adc
pop
mov
fistp
shl
sub
jmp
add
ins
lds
sub
pop
les
sahf
jl
test
test
ins
cwde
in
mov
aad
xchg
data16
add
mov
cdq
retf
enter
jns
xor
cmp
xchg
mov
push
inc
cwde
xor
pop
out
mov
inc
(bad)
pop
ja
and
or
pop
mov
add
cmp
push
jp
icebp
fbstp
dec
pop
mov
ss
outs
(bad)
add
xchg
mov
mov
mov
pushf
or
int
xor
xchg
aaa
lahf
xchg
jp
or
pop
sbb
sub
dec
push
jns
jnp
mov
shl
add
imul
dec
pop
and
adc
retf
sbb
pushf
sbb
pusha
inc
push
adc
icebp
jnp
cmp
sub
cmc
or
daa
xor
mov
inc
mov
repz
movs
fsub
or
cmp
jl
push
jge
jno
dec
fwait
shl
fistp
mov
arpl
daa
push
mov
icebp
push
push
add
lods
inc
aaa
leave
xor
pop
dec
mov
stc
cmp
cmp
or
fistp
data16
sub
cld
out
lea
mov
mov
or
sub
fisub
js
xor
aas
pop
jae
scas
xchg
scas
icebp
mov
lock
sbb
or
test
test
sahf
push
outs
cmp
push
xchg
xor
imul
ins
xchg
or
sub
pop
inc
cdq
loop
mov
outs
(bad)
xchg
pop
pop
pop
sbb
jge
add
cmp
icebp
dec
mov
jns
sqrtps
shl
mov
sub
push
retf
ficom
add
jae
inc
push
push
mov
xchg
pop
movs
sbb
push
mov
repnz
adc
mov
shl
pop
movs
pop
lds
mov
xlat
mov
mov
ins
dec
sahf
dec
xchg
bound
push
inc
push
sbb
movs
rcr
jp
sbb
ins
cmp
lahf
xchg
scas
in
mov
mov
lea
sbb
scas
sub
mov
fcmove
out
push
pop
in
aas
dec
dec
dec
ret
add
mov
push
outs
mov
jl
jecxz
repnz
out
xchg
pop
out
retf
test
test
test
push
jo
mov
dec
aas
out
push
loope
sub
stc
lds
sub
adc
push
sbb
sbb
push
inc
int3
int3
aas
dec
repnz
jmp
test
pop
jecxz
ds
adc
cdq
add
pop
jbe
test
in
stos
pop
loope
and
addr16
retf
fcmove
inc
jmp
jge
push
sub
xchg
movs
ins
and
ds
xor
leave
loopne
mov
cld
xchg
aas
lea
imul
push
adc
mov
jl
mov
xchg
ror
aad
test
jne
rol
(bad)
dec
mov
xor
bound
test
mov
jno
xchg
mov
(bad)
and
lods
in
adc
and
in
sti
and
adc
daa
stc
jae
push
mov
xor
jge
jge
ficom
and
adc
pop
xchg
ret
fs
inc
sub
mov
out
scas
fimul
mov
stos
push
les
dec
in
sbb
cmp
(bad)
adc
or
jo
aas
cmp
xlat
mov
add
push
jo
sub
mov
and
popf
sub
cmp
popf
fwait
ja
cmp
retf
shl
lea
push
leave
push
sbb
inc
mov
mov
xchg
rcl
leave
das
ins
push
push
daa
sub
sub
repnz
ret
fsin
daa
dec
retf
cs
dec
bound
in
jmp
call
int3
imul
ror
aad
mov
test
add
rsqrtps
and
cmp
ret
and
rol
outs
xor
inc
mov
hlt
cmp
and
jg
in
movs
dec
mov
jmp
sbb
inc
arpl
cdq
xchg
stc
jmp
nop
inc
jne
cli
dec
push
call
jecxz
and
sbb
inc
and
fcmovu
add
mov
jbe
icebp
enter
xor
push
xchg
dec
push
test
cmps
ret
cmp
mov
xchg
outs
xor
xchg
inc
push
mov
je
mul
push
in
jle
xor
and
not
sti
repnz
int
movs
dec
fdivr
jg
mov
stos
xchg
mov
add
jmp
test
mov
pusha
rol
xchg
pop
aas
cdq
fisub
pop
scas
xchg
cmp
adc
inc
and
add
sahf
in
sbb
jnp
in
or
fcom
sar
cmp
xor
ret
mov
xchg
idiv
or
jb
add
mov
pop
pop
rcr
jmp
inc
pop
or
scas
add
fcomp
xchg
out
repz
in
push
push
pop
dec
imul
test
loope
mov
fcom
and
cli
stos
jb
mov
sbb
push
cmp
push
pop
or
inc
jmp
push
or
cmp
sbb
pop
sahf
or
retf
and
scas
push
fstp
test
jnp
adc
and
jp
push
add
xchg
push
hlt
sbb
mov
repnz
xchg
nop
or
sub
pusha
ret
shl
movs
mov
adc
sub
jbe
dec
sbb
lds
dec
mov
fcmovnbe
ret
xor
cmp
pop
(bad)
push
inc
and
xor
cmps
cdq
hlt
pop
loop
cmps
not
std
iret
sbb
inc
rol
aaa
pop
inc
xchg
inc
aaa
cmc
push
jp
push
xor
xchg
cmp
mov
inc
cmps
mov
push
xchg
inc
cwde
jb
into
push
push
pop
bound
or
cmps
sbb
push
dec
xor
(bad)
rcl
pop
jmp
push
add
push
xor
cmps
xchg
sbb
cdq
mov
mov
(bad)
aad
call
mov
dec
or
out
jmp
loopne
and
adc
popf
xchg
in
lea
(bad)
loopne
jnp
inc
cld
test
mov
adc
pop
cwde
cdq
mov
out
push
adc
fucom
movs
leave
xchg
cmc
push
dec
aas
mov
sub
leave
out
cmp
push
jne
add
and
dec
mov
in
iret
xchg
icebp
pop
or
in
or
inc
pop
mov
sub
sbb
jbe
xchg
add
mov
pop
pop
dec
in
js
push
dec
cmp
dec
(bad)
movs
jge
scas
inc
rol
cmp
sbb
pop
pop
jno
push
push
retf
push
lock
sar
nop
or
mov
mov
(bad)
jne
stc
and
xor
test
dec
in
inc
in
push
sub
mov
push
iret
call
fistp
or
lds
add
jae
mov
sub
(bad)
or
push
push
(bad)
aad
pop
test
inc
loope
xor
fs
lock
data16
or
push
inc
(bad)
mov
mov
mov
std
inc
pop
stc
mov
sbb
pop
clc
jge
dec
inc
inc
stos
inc
jne
jl
add
cmp
push
ins
(bad)
in
int
ja
scas
sub
ret
mov
xor
xor
pop
out
repz
ret
in
aad
ss
jl
shl
fdivr
loopne
xor
or
sti
fbstp
mov
jg
sbb
cmp
inc
xchg
push
outs
scas
or
mov
push
pop
and
add
inc
movs
xor
(bad)
mov
cdq
dec
mov
jmp
(bad)
xor
popa
imul
pop
jmp
je
xchg
xchg
dec
out
cld
jno
mov
sub
pop
push
sbb
mov
lods
mov
shl
jle
je
cmps
and
jg
adc
lods
pop
mov
inc
in
int3
test
xchg
mov
cmp
(bad)
jge
mov
aas
lds
ficomp
dec
mov
or
add
pop
adc
outs
outs
jno
pusha
mov
fild
lea
sar
into
cli
sbb
pop
js
pop
movs
lods
push
lea
jg
imul
push
jmp
jp
jb
mov
mov
movs
(bad)
xchg
adc
(bad)
jmp
pop
je
fist
loopne
pop
push
adc
aas
cmp
jge
mov
and
js
call
stos
scas
into
dec
cli
mov
mov
outs
push
adc
pop
or
mov
jmp
jp
sub
mov
pop
(bad)
imul
ret
leave
call
das
not
mov
mov
pop
popa
pop
dec
outs
mov
loop
adc
xchg
ds
stos
xchg
mov
hlt
sti
cmps
(bad)
repnz
cwde
mov
cli
mov
lods
mov
cmps
add
rcr
mov
rcl
(bad)
mov
call
pop
push
imul
dec
push
cmp
repnz
jo
(bad)
cli
mov
fcomip
inc
inc
mov
add
fxch
movs
and
jns
out
aam
cmp
lds
jne
out
add
in
rcl
mov
cmp
pop
stos
int3
fimul
mov
pop
mov
pop
mov
and
call
sub
mov
in
jg
(bad)
in
mov
and
cmp
imul
jmp
sub
dec
aaa
int3
das
mov
jp
sub
pop
push
rcl
jno
fistp
rcl
mov
lods
and
mov
je
js
mov
cmps
ret
popa
clc
mov
fisubr
sar
je
cld
fisub
xchg
jno
(bad)
out
in
clc
jbe
and
xchg
dec
fistp
push
iret
add
fs
push
pop
jb
sub
call
dec
lods
pop
sub
in
(bad)
lahf
lock
inc
lahf
lea
(bad)
in
sar
outs
imul
mov
ss
mov
sti
xor
cmc
and
push
or
inc
iret
inc
dec
ret
popf
mov
iret
mov
pop
cmp
sub
jns
mov
mov
int3
stos
data16
lds
shl
sub
xchg
fwait
rcl
add
mov
pop
sub
add
repz
bound
stos
cli
jmp
or
aaa
stc
inc
repnz
std
xor
push
mov
cmc
xchg
or
(bad)
push
jnp
shl
or
and
leave
call
je
lea
inc
or
std
aad
xor
pop
push
xor
or
ret
ja
out
dec
loope
push
jl
dec
ror
iret
sbb
outs
shl
add
mov
movs
push
jns
mov
sbb
je
jbe
mov
inc
call
add
in
and
push
jecxz
inc
cli
push
mov
mov
sbb
mov
sbb
ins
xor
or
jmp
fadd
pop
mov
mov
xchg
jmp
mov
daa
sub
lods
out
jg
bound
outs
or
fcmovb
ja
push
xchg
push
cmp
xor
dec
bound
cmp
xchg
(bad)
out
push
or
mov
aad
lock
cmp
pop
loope
pushf
in
pop
adc
hlt
cld
ret
imul
mov
pop
ret
mov
push
push
add
daa
and
add
mov
scas
jge
loop
and
xor
sub
jge
dec
and
push
xchg
sub
jbe
fld
add
(bad)
pop
ror
mov
fwait
ret
pop
sub
mov
push
jg
push
nop
sbb
xchg
jecxz
mov
pop
adc
add
std
popa
gs
push
xlat
adc
loope
mov
iret
pop
pop
js
loop
xchg
xchg
jl
mov
mov
fdiv
shr
loopne
push
xchg
shl
pop
push
daa
mov
and
pop
addr16
push
mul
sub
ss
jp
addr16
sub
lods
scas
cmp
pop
fimul
outs
sub
(bad)
lock
push
pop
mov
mov
pop
jge
jl
cmp
jle
and
mov
pusha
and
iret
lds
and
je
inc
push
xor
in
js
pop
mov
fstp
data16
or
pop
push
dec
imul
aas
add
test
imul
fisubr
(bad)
sub
clc
loopne
xor
mov
arpl
mov
add
adc
or
dec
enter
iret
inc
stc
(bad)
shr
xchg
pop
sbb
scas
xor
es
xchg
out
sub
cld
cdq
add
scas
pop
xchg
jae
dec
lock
inc
xlat
aad
in
ret
cmps
add
mov
xchg
call
lods
retf
or
fwait
sbb
mov
popf
rcr
push
dec
push
push
aam
add
sub
dec
pop
mov
mov
adc
ret
mov
sahf
lahf
aam
push
jnp
std
mov
xlat
pop
sbb
pop
call
push
bound
sbb
cli
pop
dec
adc
push
scas
push
jecxz
xor
data16
or
xor
sbb
dec
les
dec
rol
or
fdivr
push
push
cmp
jns
and
mov
je
cld
jp
dec
xchg
in
stos
dec
cmps
jbe
test
dec
xor
mov
cmp
jp
jnp
fs
mov
test
test
jecxz
sub
fdiv
test
dec
or
sar
mov
ret
and
push
adc
stos
nop
retf
dec
cli
pop
jno
jecxz
leave
mov
inc
xlat
mov
push
sti
mov
mov
mov
(bad)
dec
adc
or
sbb
test
test
cmps
jbe
in
jbe
fisubr
push
inc
lock
into
popf
es
sub
out
movs
sub
iret
and
xchg
push
ror
cmps
adc
add
das
pop
mov
jo
xor
adc
push
dec
sbb
sbb
in
into
loop
xor
cmp
lods
and
int3
cmps
loopne
iret
scas
out
and
jae
shl
jne
jg
jns
in
mov
mov
test
adc
into
out
(bad)
fs
jo
fistp
scas
movs
fstp
inc
and
retf
call
sub
je
punpcklbw
sbb
out
cld
mov
push
jmp
jge
mov
push
add
fcmovne
js
xchg
push
push
in
popa
or
(bad)
rol
pop
clc
es
cmp
mov
ja
sub
mov
or
loop
lahf
sbb
movs
jg
adc
add
popf
or
mov
loope
cmps
out
mov
mov
(bad)
outs
pusha
hlt
dec
sbb
movs
movs
ja
pusha
inc
int
jo
mov
iret
inc
lahf
dec
xor
xchg
mov
add
jmp
fcomip
retf
push
mov
pop
in
outs
(bad)
jnp
or
cmp
or
xchg
pop
inc
xchg
cmc
jae
leave
xchg
jl
cmps
aaa
sahf
sbb
and
xchg
out
fisubr
add
mov
retf
push
inc
sti
xchg
inc
scas
jo
add
sbb
shr
ret
push
pop
jb
or
aas
clc
movs
xor
or
(bad)
xor
out
push
int
dec
jle
shr
jmp
int3
dec
out
test
jae
mov
fs
xor
fs
lods
rol
mov
in
cmp
inc
cmp
hlt
jg
popf
lea
sbb
repz
cmp
xchg
cmp
lahf
add
cmp
gs
and
pop
add
cmc
mov
pop
mov
cmp
aam
push
or
dec
movs
jnp
sub
idiv
adc
push
gs
icebp
mov
inc
pusha
out
pop
push
push
or
out
adc
sub
xchg
mov
adc
pop
aam
sub
fidiv
push
and
icebp
cli
cmp
sahf
mov
pusha
mov
fxtract
jne
lds
in
mov
push
bnd
or
sar
rol
mov
clc
xchg
adc
and
loop
scas
das
xchg
jmp
shl
mov
stos
(bad)
cli
aaa
sbb
inc
ins
mov
pop
retf
stos
xlat
cmp
scas
mov
xor
jnp
in
enter
outs
sbb
mov
cmps
dec
call
xchg
cmp
dec
xchg
popf
jae
jmp
scas
xor
imul
shl
(bad)
ror
and
fs
pop
pop
or
mov
adc
nop
add
inc
pop
pop
mov
mov
push
(bad)
mov
push
das
cmps
ins
popf
sub
fiadd
pop
cld
call
cmp
sub
inc
inc
jg
mov
xchg
add
and
(bad)
pop
bound
ret
mov
cdq
xor
and
sar
loopne
pop
and
arpl
fs
mov
xor
mov
and
or
dec
add
add
push
fisub
arpl
xor
(bad)
pop
mov
pop
(bad)
pushf
fistp
xlat
cmp
rcl
call
mov
mov
xchg
out
fld
mov
mov
(bad)
pop
dec
mov
daa
jge
push
rcr
out
cmp
dec
mov
inc
xor
or
repz
iret
and
sbb
popf
les
outs
add
xchg
push
cmp
dec
stos
popf
cwde
(bad)
(bad)
fs
and
jecxz
sbb
mov
xchg
mov
xchg
adc
ficom
xor
xchg
rcl
inc
pop
adc
sub
data16
loopne
rep
ja
sub
(bad)
ja
mov
aaa
pop
fbld
pop
ficom
in
dec
cdq
das
enter
push
inc
out
mov
mov
mov
dec
pop
ds
enter
cli
fnstcw
mov
cmc
out
ss
out
push
call
jp
mov
int3
pushf
push
lds
test
inc
add
jae
pusha
sahf
mov
push
aam
jno
jns
sub
pop
xchg
outs
jmp
mov
clc
jnp
scas
cmps
mov
xor
cmp
jg
fwait
cmp
or
test
jge
ss
xchg
cmps
mov
daa
aaa
mov
call
pusha
rol
cmp
push
fs
hlt
retf
loop
fucomp
or
lahf
mov
sub
call
aaa
ret
je
lods
sub
mov
mov
mov
xchg
lock
setbe
fstp
push
sub
nop
aad
arpl
cmps
push
adc
xor
inc
into
xlat
arpl
xchg
xlat
dec
les
xor
pop
pop
mov
call
test
adc
or
repnz
xchg
sbb
adc
xor
add
cwde
inc
arpl
inc
in
push
push
pop
push
mov
lea
fsub
lods
call
movs
inc
xchg
ss
out
push
adc
cmp
lods
lods
mov
xchg
arpl
icebp
rcl
shr
xor
add
fdivrp
popf
inc
scas
out
ds
pop
sar
stos
(bad)
lea
xchg
fnstcw
in
pop
mov
pop
jnp
jmp
pop
mov
mov
push
fsubr
cmp
inc
cmc
push
out
sbb
(bad)
test
cmps
pop
fs
ret
out
inc
ins
test
and
lods
sbb
dec
xor
enter
push
xchg
es
push
retf
scas
pop
xlat
loop
lods
push
add
movs
loope
mov
outs
scas
add
cmp
repnz
jno
call
or
dec
adc
mov
pusha
imul
jge
push
mov
test
clc
movs
call
or
mov
add
inc
or
push
test
jmp
out
cwde
cli
sub
retf
pop
mov
repnz
and
mov
mov
in
test
lock
call
imul
test
xor
icebp
push
jb
mov
add
pop
test
pop
sbb
mov
call
jl
dec
call
jg
pop
mov
add
jge
or
fisttp
mov
inc
div
push
fsubr
movs
stc
(bad)
fsub
ret
mov
out
(bad)
aam
out
sbb
cwde
test
sub
adc
push
push
jle
pop
mov
and
add
aam
cmp
fisttp
cmp
aas
js
bound
mov
cli
std
xor
dec
jne
pop
adc
push
cmp
test
add
pop
leave
rol
jb
out
(bad)
lea
xchg
push
cmp
pusha
lods
sbb
fldenv
into
in
inc
call
inc
xchg
push
into
pop
add
pop
jae
adc
test
jle
mov
push
add
mov
lock
mov
cmp
ret
cmp
mov
lea
shl
sub
xchg
outs
jo
xor
shl
cmp
stos
inc
std
pop
sub
call
cld
mov
adc
aad
mov
jne
jl
out
cmp
test
outs
repnz
fmul
and
and
inc
dec
push
push
dec
push
mov
loope
sub
(bad)
ficomp
cmp
and
xor
lods
dec
dec
push
rcr
mov
pusha
(bad)
imul
arpl
ja
or
mov
mov
mov
push
hlt
sbb
xor
icebp
fdivp
in
cmps
mov
and
out
lea
ds
adc
fld
mov
pop
fs
jl
std
fmul
or
push
mov
outs
sti
das
dec
jns
mov
ja
xchg
mov
mov
or
shl
stc
in
cmp
ds
mov
lods
test
inc
or
adc
cli
push
push
add
mov
sbb
adc
xchg
outs
add
icebp
dec
into
sub
push
movs
xor
or
mov
dec
inc
mov
imul
pop
mov
adc
aam
out
aaa
ins
pop
pop
movs
xor
leave
xor
xlat
mov
sub
and
sbb
add
fs
sub
enter
in
jg
(bad)
imul
mov
outs
(bad)
add
mov
adc
mov
adc
cwde
jmp
lds
jae
fst
pushf
das
adc
cmp
(bad)
imul
push
adc
paddsw
lods
mov
jmp
out
jmp
mov
xor
ins
inc
cli
fdivr
mov
push
fwait
addr16
pop
sbb
(bad)
nop
and
fbld
pop
sahf
push
int
pop
dec
mov
out
std
sub
push
repz
push
icebp
mov
inc
fcmovb
inc
ins
push
mov
add
add
inc
xchg
jmp
add
add
dec
fneni(8087
mov
sub
xchg
jns
sbb
popa
ror
pop
hlt
sub
jmp
push
hlt
std
mov
jecxz
xor
push
jae
stc
inc
loopne
int3
test
jne
jmp
add
(bad)
xchg
sbb
mov
xchg
test
pop
adc
bound
or
outs
mov
jns
(bad)
push
inc
outs
fistp
sti
sbb
das
pop
call
and
(bad)
jnp
xor
mov
shl
mov
cmps
pop
out
in
cmps
addr16
inc
ficomp
pop
cmp
push
jb
mov
cmp
call
jne
and
add
fst
das
in
or
imul
fiadd
lock
lea
lock
and
ja
add
fbstp
or
pop
xchg
xor
mov
int3
xchg
mov
jae
xchg
xchg
push
mov
and
push
and
pop
rcl
inc
jmp
inc
stc
mov
inc
mov
(bad)
jmp
cdq
lea
loop
mov
cmps
fs
outs
mov
and
and
jnp
pop
mov
in
sti
push
inc
xor
dec
mov
and
out
lea
xchg
fmul
pop
cdq
add
add
cmp
add
mov
xor
and
xchg
xchg
icebp
out
jge
sub
pusha
sahf
jmp
push
test
cs
lods
aas
sub
out
xchg
xor
cld
adc
or
outs
mov
cmps
mov
mov
fmul
dec
cmc
clc
outs
adc
xor
inc
or
push
pop
and
inc
adc
sbb
popf
jb
sbb
in
add
cmp
adc
cmp
lea
add
mov
das
jmp
inc
in
mov
outs
cmp
call
push
xchg
stc
arpl
add
xchg
cdq
loope
jge
jno
jg
xor
mov
push
fisubr
inc
data16
jb
adc
push
and
scas
fimul
mov
rcr
scas
adc
xor
pop
lahf
adc
nop
sti
pusha
cmp
sti
sbb
pop
sti
pop
mov
jns
pop
dec
or
add
dec
dec
pop
mov
xor
lahf
mov
les
or
push
xor
adc
push
cdq
aaa
int3
sub
mov
push
mov
dec
jb
and
xchg
xor
stos
inc
mov
mov
adc
stc
inc
(bad)
in
xchg
rol
retf
mov
sub
gs
pop
mov
dec
iret
and
loope
(bad)
cmp
inc
mov
enter
in
adc
arpl
(bad)
cmc
sar
mov
loop
je
inc
sbb
push
inc
out
cmp
test
push
stos
dec
scas
inc
in
cmp
pop
sahf
lock
jns
out
push
cmp
pop
push
cs
adc
cmps
cld
mov
fld
cmps
push
pop
ret
add
cdq
mov
fisttp
cdq
mov
push
xor
xchg
add
jnp
mov
xlat
mov
pushf
jecxz
retf
sub
pop
fisubr
sbb
scas
fwait
loope
test
push
mov
jb
arpl
push
xor
sub
pop
gs
movs
mov
mov
fadd
lds
and
cmp
dec
push
loopne
sbb
call
inc
ficom
(bad)
mov
pop
stos
add
int
adc
xor
inc
ret
pop
jb
mov
sub
mov
shl
lods
sbb
ins
xor
loop
(bad)
daa
inc
fist
jns
ficomp
cmps
imul
dec
xor
jo
fstp
or
sbb
cmp
jbe
or
lock
movs
cli
jae
bnd
(bad)
fnsave
(bad)
push
fbstp
bound
(bad)
cld
rol
dec
add
jnp
in
add
jmp
inc
out
mov
cwde
mov
sub
adc
mov
movs
sbb
jmp
and
push
or
mov
or
fisttp
push
ins
jo
mov
daa
mov
jp
in
add
inc
neg
ret
mov
mov
sub
and
cmp
sub
bound
adc
ret
pop
jno
rcr
iret
div
call
mov
fcom
mov
out
jno
stos
lea
add
sbb
and
mov
pop
fimul
inc
mov
jns
fdiv
xor
sub
fs
pushf
ror
clc
mov
xchg
add
cmp
test
or
in
fwait
xor
aad
int3
and
pusha
cmp
iret
fstp
adc
jne
das
and
inc
cwde
dec
pop
icebp
jmp
clc
pusha
stos
mov
scas
push
shl
neg
sar
mov
adc
jbe
add
iret
(bad)
and
mov
dec
inc
mov
data16
pop
std
repz
mov
sub
in
call
std
pop
adc
arpl
in
push
adc
cmps
(bad)
int
cmc
lods
arpl
std
fcom
cmp
dec
cmp
adc
push
fld
imul
popf
idiv
dec
imul
mov
adc
ret
(bad)
stc
lock
in
or
or
ins
pop
xchg
and
imul
jo
and
rcr
mov
adc
xor
cmp
xchg
cld
pop
ret
mov
fild
pop
(bad)
lods
stos
mov
sub
mov
rcr
imul
dec
in
cmp
test
cmp
lods
sti
(bad)
(bad)
jae
das
test
aaa
les
push
add
in
outs
shr
ret
(bad)
in
jne
lea
push
inc
xchg
pop
pushw
lock
push
nop
outs
push
lds
fstp
imul
ins
adc
sbb
dec
rol
xchg
(bad)
(bad)
mov
mov
jns
loop
stos
loopne
(bad)
mov
pop
ins
stos
test
(bad)
sub
aam
cmp
(bad)
inc
cmps
loopne
test
jle
call
jmp
icebp
push
loopne
push
xor
out
pop
jecxz
shl
cs
xchg
stos
stos
std
test
fucompp
and
daa
xor
jle
fisttp
fcom
dec
int
jmp
mov
into
dec
in
xchg
aas
enter
scas
mul
popf
dec
xor
xchg
dec
inc
pop
add
popa
push
out
jns
int3
mov
call
sbb
imul
add
adc
mov
add
(bad)
sti
or
xor
scas
dec
mov
xchg
xor
sbb
rcl
adc
pushf
mov
jb
test
adc
jo
fdiv
pop
ins
mov
sbb
jb
xlat
cwde
or
jb
dec
sti
pop
in
mov
mov
in
jo
jb
push
into
jne
add
adc
dec
mov
sub
das
mov
jmp
inc
mov
arpl
and
inc
pop
inc
mov
pop
dec
jo
(bad)
jle
outs
sbb
sbb
mov
mov
lods
cmp
add
sti
sub
or
jmp
test
shr
fwait
(bad)
in
and
sub
cwde
dec
xor
inc
dec
lds
cld
movs
iret
in
aad
inc
dec
mov
mov
into
xor
xor
mov
pushf
pusha
add
and
or
mov
cmp
imul
mov
mov
add
adc
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
