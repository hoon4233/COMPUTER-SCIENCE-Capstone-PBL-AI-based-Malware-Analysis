movs
sti
mov
adc
inc
add
fs
adc
fs
sbb
outs
data16
xor
push
in
push
call
inc
out
in
(bad)
aas
test
rcl
je
dec
adc
cmp
in
push
sub
xor
inc
jb
outs
jb
imul
sbb
outs
cmp
pop
fsubr
push
inc
xor
ret
dec
ds
adc
or
or
sub
mov
inc
or
and
add
add
adc
js
dec
shl
mov
fcomi
jmp
and
or
jae
imul
add
or
daa
ret
lahf
mov
adc
hlt
jo
sub
nop
int3
dec
out
scas
imul
lahf
rol
fs
jecxz
inc
add
xchg
xor
push
outs
inc
ret
js
mov
js
aas
or
popa
daa
(bad)
outs
(bad)
adc
daa
adc
aaa
dec
sub
enter
pshufw
jmp
or
aam
pop
clc
fnsave
ins
mov
call
sub
data16
push
adc
sub
je
xlat
sub
rcr
fadd
les
inc
xchg
retf
ins
rol
inc
das
add
xor
ins
call
lods
mov
jne
outs
mov
push
xor
xor
call
cmp
sbb
mov
inc
int
(bad)
fcomp
nop
inc
inc
jnp
inc
pop
dec
dec
call
and
push
push
xchg
pop
jae
push
xor
push
push
xchg
loopne
pop
jae
cs
pop
stos
test
pusha
add
frstpm(287
das
xchg
popa
jo
add
inc
add
cmp
mov
pop
cs
ja
jle
jbe
je
in
xchg
retf
ins
in
add
mov
mov
cwde
(bad)
jl
inc
sub
int3
adc
cmps
fnstenv
pop
repz
push
add
das
call
xchg
cmps
iret
jae
cmps
imul
jo
push
outs
fcom
cmps
adc
jbe
and
sti
addr16
mov
ret
adc
jnp
jns
and
repnz
pop
leave
mov
inc
jle
jbe
mov
add
cmp
inc
inc
adc
lock
pushf
jae
xchg
sbb
add
xor
and
test
sbb
daa
ins
cld
sub
pop
movs
scas
xor
pop
xchg
pop
mov
add
rol
sub
ins
call
clc
lock
mov
in
daa
inc
fild
add
adc
hlt
fld
dec
xor
mov
fldcw
cmp
imul
imul
out
ins
outs
xor
into
ins
mov
je
jbe
cld
adc
add
in
jne
mov
aas
jl
jge
jg
cmp
in
jne
movs
add
mov
mov
push
(bad)
jmp
retf
lods
xchg
cmp
jg
and
jne
lods
fwait
(bad)
sub
call
fdivr
inc
mov
cmps
mov
stos
test
scas
sbb
adc
mov
loopne
xor
dec
mov
shr
xlat
inc
ret
outs
mov
lds
push
mov
jl
retf
ret
int
jo
or
aaa
sar
rcl
sub
retf
lods
mov
fcomp
jnp
(bad)
cmp
xor
fbld
loopne
add
loop
in
jne
in
out
cmp
clc
jmp
outs
retf
adc
lock
(bad)
xor
idiv
adc
xlat
dec
sti
(bad)
xchg
retf
mov
mov
sub
add
add
xchg
retf
in
mov
push
je
cmp
sub
in
pop
cs
add
adc
lock
outs
int
adc
sbb
or
jmp
sbb
and
and
int
jb
and
sub
imul
xor
pop
xlat
sbb
jnp
push
xor
cmp
arpl
jge
adc
dec
std
fistp
in
push
inc
rol
inc
aas
dec
in
pop
jae
sbb
fcom
mov
inc
adc
pop
jae
dec
xlat
xor
popa
(bad)
movs
bound
add
xor
mov
imul
xor
outs
jo
jae
je
cld
lods
mov
pop
jns
jp
pop
scas
imul
jnp
pop
hlt
jle
out
(bad)
cmp
xor
xchg
lock
jl
xchg
add
retf
lods
mov
xor
je
jb
call
mov
jne
sub
test
stos
clc
mov
jmp
lods
scas
adc
imul
mov
mov
enter
fld
hlt
mov
js
jne
xlat
jne
ret
push
lds
retf
pop
xlat
mov
into
inc
iret
das
sar
ror
mov
outs
or
push
in
fimul
pop
loop
xlat
pop
outs
pop
in
out
test
lods
jecxz
xor
ret
loopne
call
icebp
fcomp
lock
hlt
cmc
xchg
fstp
cld
std
or
je
add
xchg
mov
repz
adc
mov
aam
adc
or
or
hlt
mov
mov
push
mov
jb
adc
push
test
dec
sbb
xor
adc
pop
cs
retf
ins
and
and
sbb
sbb
mov
(bad)
daa
xor
adc
enter
call
fdiv
xor
xor
scas
aaa
outs
cmp
cmp
movs
ds
jb
inc
jl
inc
daa
inc
inc
sbb
retf
in
imul
dec
jo
sub
pop
scas
imul
dec
mov
nop
push
push
cmp
int
jmp
push
(bad)
pop
sbb
pop
ja
pop
pop
(bad)
jne
pop
inc
in
sbb
mov
xor
fs
and
addr16
call
sbb
add
scas
imul
mov
push
jbe
cmp
jae
mov
xor
add
xchg
scas
imul
lea
xor
xchg
mov
xchg
psubb
call
cmp
lahf
js
(bad)
xor
test
cmp
test
stos
sub
lods
scas
pop
scas
outs
mov
mov
in
xor
mov
mov
imul
mov
scas
lock
lods
imul
pop
mov
enter
mov
mov
int
into
iret
repz
dec
fs
lods
jmp
aad
fsubr
sbb
iret
in
loopne
scas
mov
(bad)
in
das
jmp
scas
mov
in
in
or
and
ins
xlat
pop
xor
clc
icebp
pop
push
cwde
dec
jae
not
stc
or
cld
nop
(bad)
mov
jg
add
mov
jb
or
xchg
or
cwde
or
fwait
in
mov
adc
adc
rcl
push
in
adc
cs
retf
adc
jl
lock
and
and
cmp
jo
adc
retf
in
xor
and
pop
cs
xlat
fcomp
xor
ins
outs
mov
add
aaa
pop
pop
cmp
inc
sbb
jmp
fisttp
add
inc
jae
xchg
cs
inc
dec
enter
mov
mov
pop
push
arpl
push
push
or
mov
iret
pop
scas
pop
or
movs
pop
nop
popa
test
gs
outs
pop
jae
imul
push
inc
outs
mov
jbe
jo
jb
cld
jae
or
outs
pop
xlat
ins
adc
sbb
push
jnp
xor
mov
add
xchg
cmp
mov
add
push
lods
mov
jne
lods
mov
add
fsub
fdivr
arpl
push
cwde
call
addr16
xor
mov
in
jmp
movs
xchg
dec
cmps
imul
js
scas
mov
mov
mov
jl
mov
scas
imul
mov
mov
mov
mov
ret
(bad)
in
or
lds
enter
(bad)
pop
outs
int
int3
into
mov
and
jmp
mov
sbb
arpl
outs
int
fcmovbe
in
fst
mov
push
xchg
in
ja
dec
jmp
in
call
repz
jmp
jae
lock
bnd
push
and
ins
outs
pop
je
add
imul
stc
imul
sbb
rcr
inc
mov
add
pop
outs
add
add
or
in
or
pop
les
clc
adc
add
test
xor
sbb
jbe
pop
fs
inc
pusha
and
daa
fsub
xor
sub
xlat
fdivr
fdiv
xor
ss
sbb
cs
cmp
adc
xchg
retf
in
ds
inc
sbb
loopne
inc
jne
jae
aas
and
in
dec
cmp
dec
fdivr
pop
or
aas
dec
sub
push
(bad)
jne
xlat
push
pop
pop
push
pop
inc
pop
xchg
pop
dec
shl
in
pop
adc
popa
pop
arpl
sub
push
push
xor
and
outs
imul
scas
jb
je
jbe
push
pop
outs
pop
jge
jle
js
test
mov
test
mov
xchg
fcomp
inc
pop
nop
xchg
xchg
mov
xchg
pop
jae
test
lods
xchg
xchg
out
xchg
xchg
mov
cmp
popf
cmps
lahf
dec
jae
jne
mov
cmps
cmps
sub
stos
inc
fsubr
pop
xlat
in
int3
add
(bad)
mov
mov
mov
mov
fistp
push
mov
mov
push
ins
(bad)
sub
enter
jmp
(bad)
out
cmps
fmul
mov
jne
ins
out
add
shl
(bad)
jne
lods
mov
fwait
mov
jmp
frstor
(bad)
in
jecxz
in
in
int3
lods
out
dec
jmp
jae
mov
iret
repz
add
idiv
clc
lahf
js
cld
jnp
addr16
rol
das
inc
dec
fwait
cs
fld
add
pop
add
out
mov
or
push
sbb
mov
add
sbb
dec
sbb
out
and
and
xchg
retf
in
mov
das
or
lock
jb
cs
arpl
cs
sbb
push
or
ss
cmp
dec
enter
pop
outs
int
inc
xchg
inc
daa
mov
inc
imul
dec
mov
cmovp
in
dec
dec
jnp
cs
dec
daa
push
mov
les
call
cmp
(bad)
mov
mov
pusha
add
arpl
addr16
push
ins
mov
lods
jmp
jae
jne
nop
jbe
jnp
jnp
pop
jae
jl
cmp
jg
or
xor
out
stos
sbb
xchg
mov
lea
xchg
sub
xchg
and
cwde
xchg
imul
sahf
cdq
(bad)
mov
mov
movs
(bad)
cmps
jmp
pop
xlat
jne
stos
aaa
lods
imul
mov
mov
and
jb
call
mov
outs
int
mov
les
scas
jae
cs
pop
aam
clc
retf
into
daa
sbb
(bad)
fcomp
rcl
sub
(bad)
fadd
jmp
out
(bad)
add
push
fst
loopne
scas
mov
in
out
add
jmp
and
retf
out
jecxz
lock
stos
repz
(bad)
jne
cmc
pop
neg
int3
clc
add
mov
sti
jnp
pop
(bad)
daa
in
push
fdiv
add
add
in
add
in
add
mov
add
or
cs
retf
or
or
push
rcl
jae
mov
adc
fcom
cs
pop
adc
sbb
test
xchg
retf
lods
mov
aas
pop
pop
sbb
mov
out
pop
cs
and
and
or
jb
cs
adc
sub
sub
jmp
retf
in
xor
xor
xor
cs
jb
cmp
cmp
mov
pop
xlat
pop
dec
inc
inc
cmp
fadd
dec
pop
xlat
pop
cs
dec
loopne
dec
aas
push
sub
(bad)
xor
pop
(bad)
pop
mov
cs
push
or
inc
push
popa
iret
(bad)
out
mov
mov
pop
sub
inc
jbe
xlat
jne
push
push
push
mov
mov
pop
ss
shl
mov
xlat
sbb
int
xor
inc
push
cmp
pop
xlat
jne
test
inc
or
xchg
je
shl
lods
and
dec
add
pop
rol
pop
pop
adc
xchg
or
sub
push
data16
clc
mov
in
ins
pop
xlat
rcr
xchg
jns
retf
int
mov
test
push
jl
js
aaa
enter
mov
test
dec
into
jo
outs
xor
inc
retf
dec
add
add
jae
movs
aas
sub
add
shr
push
mov
jo
mov
and
and
inc
mov
xchg
xchg
mov
jl
outs
leave
dec
pop
lods
js
jl
mov
in
or
leave
ret
pop
loopne
cwde
dec
lock
adc
pop
in
xchg
cmp
outs
outs
mov
lock
jne
add
ds
adc
sahf
and
inc
icebp
(bad)
fisttp
(bad)
or
mov
test
push
fmul
mov
hlt
dec
fild
pop
push
push
sub
popa
aas
inc
sbb
sbb
sub
mov
or
add
mov
push
das
ins
sub
dec
sti
or
int
das
sbb
das
add
scas
sbb
add
adc
and
nop
cmps
sbb
pop
(bad)
fwait
data16
jb
outs
arpl
jne
je
jb
popa
xchg
inc
(bad)
in
outs
jae
or
imul
push
jmp
cmp
push
or
jno
aaa
pop
jp
add
pop
inc
movs
out
xchg
mov
jmp
sti
cs
or
pop
sub
xor
sub
pop
dec
lea
add
xchg
and
popa
jae
push
and
jmp
(bad)
call
ret
jmp
outs
outs
ja
pop
push
jns
push
pop
ss
out
push
dec
push
push
inc
push
dec
xor
inc
dec
dec
pop
lea
jne
sbb
shld
inc
pop
enter
add
or
xchg
mov
je
xlat
jb
repz
jnp
rep
jb
arpl
imul
cmp
cli
and
imul
inc
fist
jo
es
mov
gs
dec
jae
sbb
jo
fisubr
je
xor
ins
jp
fld
ins
inc
pop
gs
sub
pop
popa
jb
push
pop
cmp
cs
xchg
pop
mov
mov
add
addr16
adc
jbe
cdq
fild
outs
je
ins
ins
or
add
inc
or
arpl
push
imul
ins
outs
addr16
ins
inc
sbb
shl
aad
out
mov
je
inc
mov
inc
loop
or
in
fsubr
scas
xor
bound
adc
(bad)
push
jb
pop
push
jb
iret
jae
push
in
(bad)
cvttps2pi
sub
and
dec
cmp
add
daa
imul
addr16
adc
sub
or
mov
and
xor
nop
and
sub
dec
rcr
je
add
or
pushf
cmp
dec
xor
pop
cmp
and
mov
imul
imul
je
pusha
movs
push
shr
add
frstor
mov
or
arpl
push
jecxz
js
rcr
fadd
ss
(bad)
ss
or
pop
jecxz
aaa
xor
cmove
pop
mov
in
ja
dec
out
ins
outs
ret
fisttp
or
mov
call
ss
pop
nop
xor
pop
xor
inc
mov
dec
pusha
add
and
add
aaa
jnp
cmp
xor
sti
xor
add
in
or
pop
push
aaa
fwait
and
adc
push
mov
mov
xor
and
leave
outs
xor
xor
pop
pop
xor
fisttp
xchg
and
je
lock
add
cmp
cmp
mov
fbstp
add
cmp
sub
movs
in
jnp
add
inc
daa
sbb
cmp
inc
outs
fnstcw
adc
mov
jge
cmp
and
fldlg2
mov
push
and
retf
mov
and
outs
xlat
and
idiv
stos
jne
mov
dec
adc
pop
add
jmp
inc
inc
add
mov
ja
cmovb
inc
sbb
imul
pop
mov
popf
sbb
pop
add
sbb
xor
out
or
pop
xor
fs
call
jbe
pop
aas
sub
and
dec
fiadd
inc
test
inc
dec
into
xchg
jge
pop
outs
cmp
cmp
neg
xchg
fs
and
inc
adc
fs
outs
fstp
or
and
xchg
inc
cmp
mov
dec
pop
xor
imul
(bad)
or
or
cmp
or
dec
inc
xor
pop
push
fmul
jo
xchg
fild
jge
mov
inc
adc
sub
das
stc
xchg
and
or
retf
pop
outs
cwde
pop
daa
das
pop
mov
xor
inc
sysret
fcom
mov
ja
inc
outs
jg
ja
fnstcw
dec
adc
xchg
fwait
jl
xor
stc
cmovb
in
nop
xchg
mov
inc
add
xchg
adc
xor
push
dec
loopne
dec
outs
pop
arpl
dec
or
repz
pop
xor
out
mov
sub
and
inc
jbe
xor
mov
das
xchg
ror
xor
int3
retfw
pop
sbb
and
pop
inc
push
addr16
xchg
pop
xor
sub
sti
adc
outs
add
xor
(bad)
in
mov
sub
getsec
adc
mov
pop
cmp
or
and
pop
jmp
adc
mov
inc
sub
or
aaa
pop
xor
inc
and
in
and
daa
cmovne
xchg
add
das
dec
ss
neg
or
das
pop
pop
jl
fnstcw
add
pop
cmp
lods
nop
imul
add
data16
sub
or
inc
cmp
stc
push
outs
(bad)
daa
and
pop
ss
daa
jmp
add
xor
or
xor
ins
xor
adc
cwde
rcr
mov
xchg
das
aas
pop
and
jge
pusha
pop
pop
fild
cmp
dec
enter
jnp
add
push
fmul
pop
pop
inc
add
test
and
sub
fwait
mov
fbld
mov
out
sti
fiadd
cmp
adc
and
xchg
push
pop
aaa
ja
mov
ss
out
fidivr
rcr
fld
or
fcom
ret
xor
and
loope
lsl
aad
mov
int
or
pop
mov
aaa
pop
pop
xor
test
jae
sti
xchg
sub
mov
add
adc
inc
add
sbb
xor
fiadd
packuswb
mov
test
inc
push
jnp
fsub
adc
xchg
pop
stc
bound
xor
xor
xor
pop
pop
ja
jnp
rol
pop
sub
or
inc
lsl
xchg
cmove
inc
fwait
inc
and
arpl
bswap
inc
repnz
adc
mov
mov
(bad)
dec
ret
inc
cmp
ror
xchg
dec
pop
popf
or
sub
push
xchg
add
(bad)
inc
pop
pop
and
fidiv
jecxz
fdiv
dec
jbe
pop
daa
inc
add
adc
add
outs
xor
ja
inc
int
jns
xor
or
add
or
rol
add
xchg
in
adc
inc
pop
pop
neg
fsub
pop
sub
add
dec
mov
and
xor
xor
ss
add
push
ss
xor
xchg
adc
or
imul
and
mov
jne
inc
scas
adc
jecxz
popf
dec
jbe
sbb
iret
or
jmp
sar
push
push
push
ret
inc
dec
repz
inc
inc
add
mov
inc
fwait
inc
cmps
jge
in
popf
cmovae
pop
inc
mov
add
sub
lahf
test
xlat
inc
pop
fwait
sub
ja
mov
sub
inc
cmp
inc
mov
sti
cs
jne
xor
xor
sbb
aaa
ss
ja
cmp
xor
add
or
aaa
lea
add
xchg
add
xor
push
retf
xor
scas
xchg
and
ins
add
jg
ret
add
push
stos
jmp
aas
or
cmp
jo
stos
aas
popa
xchg
adc
cmp
add
inc
aas
xchg
dec
loop
dec
jnp
mov
sub
ss
xor
ins
xchg
(bad)
pop
xlat
push
add
das
push
aaa
push
data16
xchg
lds
push
mov
scas
pop
inc
fisttp
pop
and
pop
lea
leavew
xchg
popf
retf
cmp
jg
leave
push
mov
sti
inc
xor
inc
xchg
and
pop
pop
pop
inc
pop
int3
mov
out
mov
gs
mov
pop
xor
inc
xor
aas
inc
inc
popf
movs
xchg
int
inc
inc
sub
enter
(bad)
jge
pop
xchg
inc
cmps
(bad)
das
inc
in
jnp
xchg
ret
jnp
arpl
add
xlat
xchg
pusha
daa
int3
pop
xchg
jle
xor
pop
cmps
mov
pop
sbb
pop
mov
xchg
cmp
add
cmp
mov
mov
inc
xor
pusha
fisttp
jae
aaa
das
out
mov
aaa
adc
add
pop
mov
das
push
sub
inc
pop
mov
das
mov
ins
ss
psubusb
and
lahf
lahf
ret
cmp
cmp
xchg
add
dec
and
cmps
dec
cmps
ins
neg
inc
and
fmul
xchg
das
xor
xchg
pop
inc
inc
push
ins
pusha
daa
push
mov
push
sub
aaa
popf
in
mov
aaa
das
xchg
inc
in
sub
fst
xor
xor
dec
call
inc
ret
ja
inc
mov
push
seta
dec
dec
rcl
cmp
jmp
and
xor
jnp
or
sbb
inc
add
xor
ss
popf
adc
(bad)
retf
(bad)
ss
or
(bad)
xchg
dec
cmp
inc
inc
out
aaa
dec
retf
movq
add
popf
xor
fldpi
sti
xchg
dec
shr
sbb
aaa
pop
dec
test
adc
test
adc
pop
retf
mov
mov
and
jns
xor
in
adc
jnp
pop
dec
and
fwait
and
nop
int
popf
xor
jnp
retw
inc
ss
push
adc
push
pop
ss
or
fs
or
add
pop
outs
adc
and
pop
cmp
out
and
in
imul
dec
(bad)
push
pop
xchg
retf
inc
fsub
aaa
inc
dec
sub
dec
mov
(bad)
div
pop
daa
addr16
mov
das
aaa
stos
gs
cmp
fldcw
or
or
aaa
les
popa
xchg
jno
inc
call
xchg
ins
les
dec
xor
out
sbb
ins
jbe
pop
xor
inc
pop
mov
inc
aaa
push
neg
add
jg
ins
test
or
scas
jne
push
push
pushf
cmp
lahf
addr16
push
and
and
inc
imul
call
jge
xor
je
inc
dec
xchg
mov
dec
or
leave
test
xor
mov
mov
inc
dec
ss
and
xlat
jns
daa
xchg
dec
add
dec
popa
dec
outs
mov
push
add
push
aaa
pop
test
iret
pop
sbb
add
iret
out
xor
xchg
cmp
inc
call
mov
inc
dec
aaa
shl
aas
jecxz
mov
sub
daa
jmp
ins
ss
xchg
dec
mul
inc
xchg
inc
xor
sub
xchg
inc
cmps
pop
or
pop
or
dec
lahf
xor
shl
cmp
dec
dec
adc
out
jnp
pusha
inc
ja
push
add
into
pop
or
daa
xor
es
push
adc
inc
xor
pop
inc
daa
or
inc
sti
pop
mov
pop
xor
xor
xchg
push
or
xor
enter
pop
sbb
inc
outs
dec
ror
xor
ins
fnstenv
lahf
xor
pop
not
pop
xorps
fwait
movs
in
xor
or
xor
rcr
cmp
xchg
das
and
movs
movs
cwde
inc
add
stos
rcr
repz
push
test
ss
push
int
add
xchg
and
aaa
ds
jmp
aaa
ins
or
addr16
sub
retf
push
xchg
ret
aaa
xor
enter
inc
mov
shl
xor
mov
push
jae
inc
xor
popa
sbb
out
push
not
xor
leave
aaa
mov
xor
pusha
sub
or
outs
jnp
pop
in
xchg
scas
aas
or
retf
xchg
jno
xlat
inc
jecxz
push
xchg
add
pop
xchg
xor
gs
pop
out
adc
inc
inc
xor
add
adc
loopne
xchg
cmp
jne
mov
getsec
pop
int
out
add
outs
enter
pop
sysret
and
jnp
mov
add
ja
xchg
retf
into
push
pop
pop
dec
ss
or
add
sub
inc
push
mov
retf
data16
iret
inc
xchg
pop
jbe
aas
inc
jecxz
gs
and
das
cmp
inc
dec
mov
test
jnp
inc
inc
xor
add
cmp
aaa
dec
dec
mov
inc
jnp
cdq
retf
inc
setp
ins
ss
aaa
inc
inc
sub
maxps
inc
push
(bad)
xor
or
mov
mov
xlat
(bad)
xlat
ss
mov
xor
adc
jnp
jecxz
adc
add
xor
int
aaa
add
test
(bad)
aaa
pop
or
stos
and
xor
add
xchg
das
pop
ss
cmp
mov
mov
outs
cmps
outs
popa
or
xchg
xchg
pop
xor
inc
aas
cmp
inc
fwait
int
fnstenv
add
or
add
adc
(bad)
cmps
inc
test
or
adc
add
sub
mov
add
dec
gs
inc
inc
aas
add
out
test
add
pusha
or
fs
fisttp
out
adc
mov
in
add
pop
mov
mov
adc
and
sub
xchg
test
mov
xchg
mov
jb
or
inc
sti
pop
xor
xor
sbb
dec
xor
and
mov
push
adc
inc
lods
call
pop
in
xor
daa
inc
cmovbe
sub
das
xchg
inc
sub
mov
adc
mov
pop
lds
and
cmp
mov
fistp
sub
mov
icebp
fiadd
leave
repz
pop
cmp
adc
or
out
int3
es
aas
lmsw
sbb
enter
imul
xor
xor
ins
mov
loopne
ja
div
aas
xchg
pop
dec
jb
in
aaa
sbb
xor
fst
pop
fwait
int
imul
pop
adc
pop
xor
arpl
jne
fxch
push
dec
(bad)
fwait
inc
inc
pop
mov
mov
inc
xchg
jae
repnz
cmp
cmp
fwait
sub
rol
ja
xor
or
inc
movntq
in
aaa
dec
and
in
int
shl
repnz
inc
inc
push
popf
and
arpl
in
xchg
inc
and
and
push
aaa
xchg
gs
sub
imul
arpl
inc
mov
adc
ret
pop
out
sbb
arpl
inc
pop
ss
xchg
xchg
inc
or
fsub
data16
dec
dec
xor
nop
retfw
dec
jg
repz
pop
ss
aaa
xlat
dec
movs
in
add
pop
inc
mov
mov
pop
stos
call
loop
or
mov
adc
arpl
addr16
add
ins
cmp
aad
jns
xor
pop
cmp
jb
inc
push
adc
pop
push
add
or
inc
sbb
and
daa
addr16
lea
xor
add
outs
add
xlat
(bad)
outs
punpcklwd
jp
outs
add
sub
xchg
scas
inc
add
stos
adc
and
add
and
cld
sbb
push
push
sbb
ins
push
xchg
add
ret
ins
adc
cli
das
inc
cwde
aam
jmp
(bad)
adc
mov
adc
xchg
fist
adc
gs
push
inc
jg
out
adc
mov
inc
pop
sub
dec
add
mov
cmps
cwde
jno
push
cld
lea
data16
mov
aad
add
jne
jb
jae
jne
fwait
inc
pop
out
pop
sbb
jge
popf
mov
xor
test
mov
iret
aaa
jae
mov
inc
cmp
fiadd
pop
sti
sub
sbb
fbld
cmps
xor
aaa
inc
sti
fisubr
js
inc
jge
inc
pop
adc
xchg
mov
push
jnp
ins
mov
inc
pop
inc
daa
aas
sar
outs
imul
pop
jne
fdiv
fidiv
mov
add
addr16
xor
aaa
push
fldlg2
nop
movs
mov
jg
out
mov
jnp
stos
test
xor
pop
aaa
ja
fidivr
add
ja
xor
out
lock
jmp
xor
xchg
inc
mov
popf
mov
ss
sar
pop
pop
aaa
lock
neg
retf
dec
adc
out
lods
loopne
push
stos
inc
jno
outs
in
ins
sar
(bad)
fs
call
pop
add
cli
pop
and
sbb
jge
pop
cmps
jge
cmc
xor
inc
mov
inc
xchg
dec
cmps
call
cmc
test
pop
test
cmc
aas
and
loope
mov
dec
stc
cmp
mov
jnp
cmc
ins
mov
in
add
add
aaa
fiadd
leave
xchg
daa
iret
out
xor
add
add
aaa
ss
enter
aaa
(bad)
sub
fwait
cmp
fild
add
imul
out
lock
mul
fwait
lods
call
pop
inc
adc
jg
aaa
out
pop
div
add
inc
jno
jno
or
fsubrp
mov
and
neg
outs
aad
maxps
mov
xor
pop
mov
or
jnp
and
push
xor
inc
bound
test
xor
push
jb
nop
xor
and
adc
fidivr
dec
aaa
loope
jae
cmp
xor
push
jmp
xor
inc
xor
pop
xor
int
inc
outs
shl
scas
stc
outs
ja
dec
mov
outs
push
adc
adc
inc
sub
pop
cmp
sar
bound
outs
sbb
lds
xor
jb
push
inc
jg
push
add
add
inc
dec
push
sbb
xor
out
outs
jg
mov
loope
dec
jge
imul
mov
or
in
inc
add
fistp
pushf
fsubp
dec
test
lock
cmps
aas
cmps
pop
loopne
rcr
inc
fstp
dec
sbb
jne
inc
into
es
ja
sbb
inc
inc
xor
aaa
aaa
pop
daa
dec
sahf
icebp
jne
push
add
inc
outs
(bad)
in
xor
jmp
or
add
js
jge
jge
dec
fwait
inc
in
add
xor
jg
cmp
and
shl
push
pop
fwait
xor
sub
ret
inc
inc
xor
fld
add
lods
push
imul
inc
int3
call
xor
sbb
and
pop
xor
cmp
add
arpl
jnp
es
adc
in
inc
xor
addr16
dec
xor
enter
jae
mov
or
(bad)
lods
popf
fld
loope
cdq
fwait
aas
pop
pop
pop
sti
idiv
(bad)
movs
jg
jg
cmp
aas
aaa
lahf
pop
(bad)
idiv
lea
xor
out
iret
xchg
neg
dec
mov
pop
popf
mov
pop
sbb
mov
aad
xchg
xor
cmc
ficomp
xchg
mov
xchg
pop
dec
sahf
rcl
push
sbb
pop
ja
dec
sahf
xor
and
dec
shl
daa
xor
in
jo
gs
inc
xor
inc
adc
out
shr
mov
mov
pop
xor
ficom
call
inc
mov
inc
mov
mov
jmp
aas
in
jo
dec
repz
ret
in
mul
mov
jne
push
xor
add
movs
sbb
mov
add
add
test
xchg
pop
ja
cmc
xor
adc
ja
(bad)
or
addr16
jg
dec
mov
pop
out
lods
shr
stc
cmp
outs
dec
out
in
aas
in
pop
repz
addr16
xor
and
aaa
or
xor
das
inc
xlat
gs
dec
or
xor
int3
xor
adc
daa
idiv
add
pop
xor
xor
or
inc
daa
or
xchg
or
xor
pop
mov
aaa
aas
pop
pop
out
in
xchg
addr16
add
inc
add
push
push
add
ins
ja
jbe
xor
xchg
addr16
or
add
fwait
mov
pop
out
sbb
xor
jnp
adc
ja
fild
sub
int3
call
xchg
outs
add
cmp
jnp
xchg
js
mov
adc
aaa
mul
sbb
in
fmul
imul
push
jg
xor
adc
ficomp
cmp
out
cld
xor
add
pop
scas
popa
mov
aas
sbb
int
adc
dec
jp
dec
not
in
add
inc
mov
out
sub
scas
cmp
lds
outs
sar
xchg
lahf
ja
popf
cmp
inc
lea
mov
jg
aaa
adc
and
inc
or
inc
inc
aaa
xor
nop
xchg
add
xor
inc
iret
loop
or
outs
sbb
and
aaa
adc
inc
nop
inc
push
sbb
inc
inc
daa
pop
sbb
xor
xor
in
and
and
pushf
(bad)
inc
jg
aaa
fs
xchg
adc
inc
aaa
nop
inc
push
sbb
inc
mov
inc
add
cmp
cmp
and
inc
pop
add
dec
cmp
aas
add
cmc
out
add
push
ret
sub
pop
pop
inc
movs
bound
xor
mov
adc
pop
aaa
sbb
out
imul
jl
dec
outs
jae
aad
popa
xchg
xor
inc
pop
sub
call
sbb
sbb
xchg
mov
es
daa
inc
adc
out
sub
lds
inc
ret
sbb
xor
fiadd
test
movs
or
mov
inc
jnp
and
jl
outs
fld
cwde
xor
inc
add
in
test
int3
dec
lods
or
in
mov
das
and
fwait
ret
in
adc
bound
inc
mov
xchg
xchg
push
lods
ss
mov
imul
jecxz
pop
and
jno
(bad)
loopne
push
xor
mov
xor
and
xchg
xchg
and
and
mov
inc
or
arpl
sub
adc
jns
sbb
xor
mov
add
sti
mov
pop
mov
call
push
xor
jmp
lods
inc
dec
inc
cmp
lods
inc
pop
or
cmp
lds
ret
loope
out
in
sub
xor
daa
inc
lods
sub
les
das
ret
rcl
xor
repnz
ret
or
xor
add
leave
adc
aaa
add
mov
xor
sbb
or
mov
jb
xchg
add
xor
xor
nop
inc
push
cmp
inc
lea
(bad)
xor
xor
add
dec
in
call
xchg
das
xor
and
stc
aaa
dec
add
jnp
(bad)
or
sbb
pop
or
jmp
xchg
lahf
pushf
bound
mov
(bad)
test
popf
outs
mov
xchg
fwait
or
adc
and
xor
xor
out
mov
jnp
jmp
int3
icebp
mov
xchg
outs
pop
les
out
sbb
cmp
xchg
rcr
call
cmp
imul
popf
jge
leave
aaa
and
test
sub
icebp
push
push
mov
mov
pop
jge
ret
test
xchg
pop
scas
cmp
mov
xor
and
cmp
fild
pop
dec
sar
aad
pop
mov
and
stc
leave
(bad)
dec
call
adc
mov
aaa
mov
ja
pop
stos
pop
pop
xor
je
imul
leave
ins
inc
int
daa
lahf
sbb
inc
adc
pop
mov
xor
int
fwait
repz
cmc
cwde
je
test
jnp
pop
add
in
fiadd
fwait
xor
pop
scas
pop
dec
inc
aaa
and
and
dec
inc
pop
inc
mov
pop
inc
iret
adc
movs
retf
popa
inc
outs
add
sti
xchg
pop
mov
xor
lahf
aas
jnp
data16
inc
fild
shl
inc
sub
add
iret
inc
xor
test
mov
(bad)
pop
repz
rcr
xor
add
sbb
out
lea
jns
scas
xchg
aad
xor
mov
pop
jg
fiadd
aas
repz
mov
sbb
call
pusha
adc
inc
jo
cmp
cmp
add
rcr
fwait
jmp
jp
js
stos
xor
add
jecxz
xor
inc
imul
inc
outs
push
add
sub
outs
mov
int
lds
inc
push
mov
and
sbb
es
mov
mov
scas
arpl
arpl
imul
jnp
cdq
dec
and
jnp
xor
popf
cmc
daa
sbb
lods
cmp
inc
sbb
inc
ins
and
loopne
std
ins
fistp
ror
dec
lods
mov
jmp
ret
pop
inc
aas
xchg
lock
xor
mov
cwde
aam
int
arpl
adc
stos
scas
pop
fxch
loopne
sub
mov
bound
es
cmp
je
js
or
xchg
leave
popa
or
xor
xor
xor
mov
loope
stos
mov
daa
push
add
lods
jp
inc
inc
daa
mov
mov
mov
xor
icebp
pop
call
xchg
or
(bad)
aad
sub
mov
cmc
and
pop
xor
out
les
popf
cmp
xor
sbb
xcrypt-ecb
cmps
push
xchg
push
cmps
(bad)
fwait
sti
or
in
lock
stc
pop
jmp
cmp
loope
data16
aam
pop
icebp
sub
and
sub
js
int
mov
aad
mul
daa
inc
pop
sbb
inc
add
pop
mov
es
xlat
add
call
dec
jne
dec
fwait
jne
xchg
(bad)
mov
sbb
xor
adc
aas
or
xchg
or
idiv
xor
adc
rcl
mov
les
jmp
xor
shr
ror
int3
jne
and
pop
mov
inc
xor
dec
push
call
inc
xor
lea
jne
jae
xchg
inc
aas
arpl
xor
imul
enter
cmp
inc
loop
js
ja
and
push
popa
adc
and
xor
ret
cwde
imul
jmp
xor
imul
jmp
xchg
mov
mov
inc
test
scas
add
dec
add
xchg
int
pop
test
rcl
inc
mov
int3
es
or
add
aaa
mov
adc
inc
adc
loop
retf
inc
jno
imul
add
cmp
cmps
adc
adc
daa
ss
push
lahf
pop
aaa
dec
inc
xchg
pop
xor
cmp
rol
jae
aaa
add
add
pop
lahf
mov
aas
xchg
(bad)
fwait
jno
xchg
pop
pop
icebp
mov
jge
ffreep
sub
push
popf
mov
nop
mov
sbb
adc
nop
or
mov
sbb
jg
loop
imul
fisubr
pop
mov
jl
loope
outs
pop
sbb
sbb
repz
ror
inc
sbb
in
pop
lahf
ss
xor
call
push
inc
inc
pop
dec
jecxz
and
lahf
loop
fimul
jl
xchg
popa
adc
xchg
add
add
jnp
scas
jne
out
xor
pop
cdq
inc
adc
lock
outs
add
xlat
mov
xchg
mov
stos
push
outs
dec
ja
lods
add
xor
pop
add
cwde
mov
int
lahf
ja
test
pop
or
pop
xor
(bad)
lea
sub
test
outs
fild
int3
inc
dec
xchg
addr16
test
add
xor
xchg
xchg
int
xor
push
inc
arpl
pop
in
ins
push
outs
imul
sbb
xchg
jnp
adc
pop
jae
mov
aaa
or
movs
aaa
mov
xor
mov
mov
jne
sti
mov
mov
sbb
outs
mov
pop
mov
cwde
push
inc
shl
pop
pop
cwde
jl
and
adc
dec
mov
mov
xor
cmps
dec
inc
outs
xor
or
sti
outs
adc
xor
or
push
setg
aad
cmp
(bad)
mov
out
adc
or
and
test
das
xor
pop
sub
add
mov
sbb
dec
call
and
fiadd
cmp
out
cmp
inc
sub
fwait
adc
pop
xchg
jne
jnp
adc
repz
pop
sbb
rol
es
inc
sti
pop
mov
inc
inc
pushf
mov
dec
push
xor
pushf
les
xor
mov
mov
jo
jmp
and
outs
(bad)
sbb
or
push
leave
shl
add
in
cwde
ret
adc
rcr
ss
pop
stos
xchg
or
out
add
sbb
adc
mov
xor
scas
retf
pop
aaa
int3
call
pushf
hlt
and
pop
int
xchg
out
pop
cli
cwde
int
xor
dec
adc
movs
cmp
popf
in
pop
dec
mov
ret
nop
xor
pop
sub
inc
pop
mov
(bad)
and
or
or
fstp
xor
les
cmp
xor
xchg
jl
xor
jecxz
addr16
jmp
pop
mov
loope
outs
test
xor
test
dec
sub
xchg
jnp
cmc
cmc
aaa
jge
pushf
inc
sbb
cmp
popa
xor
push
and
dec
loop
and
jnp
mov
jmp
xchg
ins
aaa
add
ret
(bad)
or
xchg
lods
scas
aaa
dec
test
xor
jne
add
popf
retf
aaa
dec
cmp
ja
xchg
mov
pop
sub
bound
(bad)
jne
sub
dec
jp
lods
addr16
mov
dec
inc
xor
jg
rcl
cmp
add
push
mov
mov
and
xchg
jge
in
sbb
mov
sub
cwde
shl
sar
sbb
mov
fwait
inc
sbb
xor
aad
mov
(bad)
cmp
lds
bound
ja
out
not
repz
or
fisubr
out
lea
mov
xchg
xor
aad
fisub
and
jp
icebp
adc
outs
ret
pop
inc
xlat
popa
shl
mov
(bad)
and
pop
icebp
or
add
jnp
sbb
loop
(bad)
mov
nop
out
xor
adc
(bad)
icebp
pop
shl
xor
(bad)
ret
pop
imul
jno
js
imul
inc
and
mov
xor
pop
pop
imul
xor
daa
xor
js
add
cmp
and
sub
jns
test
jnp
repz
xchg
out
jae
cmp
or
mov
arpl
cmp
sub
add
neg
dec
add
jb
outs
pop
adc
popa
adc
mov
lds
pop
xchg
push
cmc
fimul
mov
adc
or
xor
add
rol
inc
inc
iret
leave
mov
sub
aaa
push
xor
js
or
ins
ret
push
push
xor
int3
call
adc
mov
sar
pop
sub
and
xlat
aam
shl
addr16
xor
cmp
inc
dec
lods
inc
or
sbb
std
pop
add
shl
fistp
int3
mov
(bad)
cmp
cmp
pop
xchg
lods
xor
imul
mov
mov
add
mov
jns
stos
mov
js
inc
mov
xor
mov
dec
adc
inc
out
xor
jp
pop
retf
icebp
gs
pop
xor
sbb
mov
inc
das
jp
mov
push
and
jg
xor
inc
and
bsf
call
or
mov
fwait
xor
aad
push
mov
aaa
inc
int
je
in
xor
jmp
popa
or
mov
and
icebp
mov
sub
mov
inc
xor
mov
xor
into
aaa
add
or
xor
shl
xor
cwde
inc
xor
dec
(bad)
dec
call
xor
mov
fld
gs
imul
xchg
dec
xor
xchg
lds
leave
ins
sub
xor
retf
mov
and
adc
iret
or
push
mov
cwde
adc
push
lock
jno
int
iret
test
mov
dec
in
xchg
cmc
cmp
mov
rcr
sub
aas
leave
lds
cmc
pop
stos
retf
cmc
pop
nop
mov
popf
inc
jecxz
add
or
fild
inc
icebp
dec
xor
sbb
add
dec
sti
xor
mov
push
or
loop
movs
add
adc
dec
inc
mov
mov
xchg
femms
pop
inc
cwde
push
icebp
pop
xchg
push
sbb
test
mov
dec
adc
es
dec
loop
dec
ins
xchg
lds
xor
lea
xor
aaa
dec
push
sub
loop
addr16
in
xchg
jp
mov
xor
push
xchg
mov
cmp
das
xchg
jecxz
pop
vpperm
xchg
adc
or
cdq
mov
lods
imul
xor
inc
mov
dec
xor
movs
stos
aad
and
ret
sti
cmp
sbb
mov
push
or
call
adc
inc
ins
mov
out
cmp
sub
pop
dec
or
fild
ret
inc
xchg
cmp
out
xchg
popa
stc
or
les
call
sbb
pop
push
ss
dec
xor
fldenv
aas
inc
add
call
leave
jge
xchg
mov
adc
popf
sti
jge
push
adc
sbb
ins
lds
out
mov
movs
pop
std
leave
loop
ror
push
icebp
and
and
jp
sbb
fnstsw
test
or
call
dec
sbb
inc
pusha
inc
out
dec
and
aaa
sbb
mov
data16
into
leave
adc
scas
xor
popa
les
pusha
pop
sub
inc
cmp
inc
xchg
adc
mov
aaa
sub
mov
adc
push
popf
push
or
mov
xlat
imul
jne
inc
dec
(bad)
and
js
xor
ja
adc
stos
dec
push
pop
loope
push
adc
push
add
xor
adc
add
pop
adc
test
bound
(bad)
(bad)
in
data16
pop
retf
xor
push
out
cmps
shl
sub
dec
adc
retf
inc
xor
ror
jmp
xchg
sbb
push
add
mov
xchg
mov
pop
shr
ja
sbb
push
or
int
dec
dec
pop
pop
or
mov
lahf
outs
pusha
ror
mov
dec
add
fisubr
hlt
mov
mov
mov
xchg
xchg
ud0
or
and
inc
xchg
inc
mov
outs
leave
sub
es
mov
and
dec
dec
cmp
xchg
fild
hlt
adc
mov
mov
xchg
inc
aaa
inc
dec
js
lods
ja
jecxz
loop
fsubrp
aaa
jg
addr16
data16
sar
jne
xchg
imul
pop
stos
inc
aas
in
sbb
div
daa
sbb
pop
fild
xchg
adc
mov
fwait
xor
mov
retf
stos
xlat
popa
sar
scas
push
adc
pop
xor
loopne
stos
pusha
sti
jae
adc
ficom
aad
out
xchg
xor
cwde
cdq
imul
call
mov
out
xor
push
fnstcw
cwde
inc
mov
and
cmp
jno
cwde
mov
popa
into
mov
pmulhuw
inc
and
adc
cmp
mov
adc
xor
mov
es
xor
test
sub
xor
data16
adc
sub
or
sbb
adc
fld
bound
inc
pop
in
jg
inc
and
mov
adc
popf
test
aaa
outs
int
mov
xor
imul
test
inc
push
pop
fild
mov
inc
mov
xchg
adc
aad
sbb
ja
sbb
jnp
sub
mov
push
aad
int
push
mov
lea
xchg
push
dec
call
push
cmps
mov
loopne
ja
jb
or
and
cmp
loope
sub
(bad)
jnp
dec
aas
fucomi
xchg
fmul
cmps
pop
push
ret
push
or
push
adc
es
popf
xor
outs
push
movs
cwde
aas
xchg
bound
pop
inc
xor
outs
dec
inc
in
pop
stos
push
mov
int3
and
dec
sub
xchg
cmp
xchg
dec
xor
jne
or
aaa
imul
xor
pusha
dec
mov
shr
xchg
add
inc
addr16
aaa
sub
ja
es
dec
jbe
xlat
xlat
adc
fwait
aam
aas
fist
adc
or
scas
aaa
cmps
ins
int3
add
xchg
xchg
push
xchg
inc
in
outs
aaa
popa
pop
push
xchg
stos
pop
xchg
pusha
(bad)
mov
pop
cmp
inc
pop
mov
inc
mov
and
and
add
xor
mov
std
(bad)
mov
add
push
adc
or
mov
popa
movs
movs
out
fwait
les
loope
outs
push
ja
dec
push
jmp
push
test
das
inc
xchg
push
dec
cwde
out
dec
dec
(bad)
sbb
pop
inc
pop
test
jg
pop
movs
inc
out
xor
ins
ffreep
call
pop
add
rcl
jns
inc
and
call
pop
cmp
adc
mov
das
es
pop
cmps
ret
jg
mov
and
add
dec
pop
rcr
adc
jg
in
mov
pop
dec
or
div
aas
fstp
rcl
jp
call
and
pushf
imul
fnsave
ftst
pop
rcl
iret
adc
pop
xchg
inc
fs
scas
int
or
inc
jg
adc
bound
adc
add
push
pop
sbb
push
das
pop
xchg
push
xor
ss
lahf
dec
mov
cmp
push
div
mov
dec
sbb
mov
aam
stos
adc
or
ret
mov
daa
lahf
cmp
inc
sub
popf
xor
cwde
push
xor
mov
jnp
aaa
and
or
das
jmp
sbb
int
stc
jmp
scas
mov
out
xor
add
xchg
push
icebp
jge
retf
and
(bad)
out
aaa
popf
dec
xchg
aaa
fisub
stos
mov
lods
ret
mov
inc
lods
lahf
ror
mov
fwait
xchg
sub
jp
sbb
pop
nop
add
not
mov
fdivp
(bad)
stc
das
sbb
fcomi
push
pop
xor
cmp
cmc
push
enter
xchg
cmp
or
inc
hlt
sub
ss
sub
mov
jp
out
popa
dec
xor
cmp
inc
jg
rol
in
in
pop
adc
push
xor
js
add
inc
xlat
aas
xchg
not
mov
inc
loope
icebp
or
outs
lods
lods
cwde
inc
out
mov
jmp
or
inc
xchg
mov
adc
pop
rcl
sbb
cmp
int
shl
cmps
add
imul
inc
jnp
jb
outs
dec
dec
mov
inc
out
dec
or
dec
loopne
mov
mov
pop
cmps
fstp
jne
pusha
shl
and
push
xor
outs
leave
inc
jo
shl
loope
aam
sbb
or
push
in
mov
addr16
pusha
push
leave
or
and
in
(bad)
int
pushf
shl
sbb
dec
xor
mov
nop
mov
adc
mov
js
rol
ss
xor
sbb
sbb
mov
xor
cmc
test
and
cmp
dec
ss
arpl
and
jno
arpl
sbb
aaa
mov
call
bound
inc
pop
xor
and
push
cmp
inc
jne
lds
pop
xor
or
fistp
sar
pop
aaa
int
pop
jne
lahf
inc
xor
or
jecxz
aaa
movs
bound
iret
bound
push
mov
add
pop
cmp
adc
adc
popf
pop
mov
and
mov
push
xchg
sub
call
push
mov
out
jno
xchg
ja
mov
inc
(bad)
and
aaa
movs
add
jge
ret
sub
cwde
rol
or
in
inc
mov
jns
dec
test
loope
test
xchg
sbb
cmp
aad
xchg
rol
cwd
sbb
hlt
aaa
stc
xchg
inc
xor
mov
push
fild
int3
bound
jmp
lods
push
pop
xor
xor
daa
dec
jns
cmp
iret
add
(bad)
and
xor
js
inc
and
(bad)
jb
movs
sbb
ret
or
rcl
xor
rcl
xor
xchg
adc
sub
out
sbb
nop
xchg
in
inc
mov
in
adc
stc
cwde
jno
retf
(bad)
jmp
cmp
lahf
cmp
shl
outs
cmps
aad
mov
xchg
or
dec
aad
or
or
push
cmps
xlat
retf
push
pop
(bad)
jmp
inc
shl
pop
enter
mov
mov
jg
xchg
pusha
xor
xor
or
jnp
pop
push
ret
mov
pop
outs
xor
leave
mov
and
dec
call
movs
cmp
ja
sub
jnp
popf
inc
cmp
js
xor
pop
aas
add
dec
or
push
adc
xor
aaa
add
adc
push
or
or
dec
pop
das
xlat
add
bound
dec
out
inc
or
iret
jmp
inc
addr16
dec
dec
inc
inc
xor
lods
loope
aaa
popa
push
adc
mov
or
mov
loopne
aad
repz
lds
imul
ins
pop
sbb
xor
dec
and
xor
push
adc
dec
popa
stc
xor
add
mov
test
in
aaa
pop
sbb
loopne
inc
and
sbb
lea
loope
add
xchg
inc
aad
mov
inc
fnstenv
xchg
out
dec
mov
shl
push
add
int
and
(bad)
int
arpl
xor
inc
add
xor
inc
aaa
sub
and
adc
call
mov
pop
xchg
xor
adc
shl
dec
jno
sub
in
and
fs
stos
leave
lds
and
jns
lods
mul
mov
hlt
cwde
inc
mov
add
outs
popa
jg
pop
add
adc
add
add
data16
inc
add
xor
es
shl
mov
xchg
out
int
stos
pop
lahf
test
mov
int3
call
or
sub
dec
xchg
pop
xor
mov
mov
or
popf
sub
cmps
pop
jmp
aaa
cmp
adc
(bad)
mov
or
dec
and
data16
or
and
les
adc
inc
mov
iret
sti
outs
sbb
adc
add
in
xchg
mov
and
dec
mov
das
repz
xor
dec
xor
mov
sbb
movs
push
add
inc
adc
dec
fld
ins
lods
inc
dec
jmp
pusha
(bad)
sbb
leave
and
and
or
dec
mov
(bad)
loope
ja
inc
bound
dec
imul
out
or
mov
or
and
aaa
and
jmp
lods
data16
pop
pop
xchg
int3
cmp
adc
daa
ret
adc
sub
popa
das
mov
pop
or
push
jne
rol
inc
fwait
ja
xchg
les
imul
inc
push
mov
or
test
sub
loop
xlat
adc
adc
inc
daa
xchg
stos
cmp
and
imul
shr
and
mov
and
push
mov
and
ja
loope
cmp
and
sbb
xchg
in
imul
icebp
cmp
xchg
gs
or
xor
icebp
dec
xor
sbb
stos
or
add
outs
xor
add
xor
gs
sub
shl
push
and
popf
ja
and
lods
out
mov
fld
sbb
xor
xor
inc
mov
loop
pusha
adc
retf
adc
sbb
gs
dec
aam
push
fwait
popa
or
jne
scas
dec
and
loope
shl
movs
xor
pusha
shl
hlt
and
adc
mov
and
stos
fst
xchg
pop
movnti
es
jp
jge
pop
test
sar
nop
call
dec
sti
mov
mov
sbb
arpl
or
add
int
outs
and
xor
dec
inc
loopne
gs
xor
inc
dec
adc
test
mov
inc
add
jno
mov
push
xchg
jmp
xchg
sar
pop
dec
int
rol
sbb
xor
jmp
xor
sti
pop
iret
pop
mov
lods
adc
mov
aad
mov
push
lea
outs
ret
aaa
(bad)
fwait
xor
mov
push
xor
sub
in
push
aaa
fbstp
mov
pop
imul
pop
dec
inc
into
call
shr
data16
sub
add
adc
pop
add
xchg
adc
jecxz
xor
pusha
stos
daa
jae
and
mov
dec
call
sub
es
stos
fld
pop
aad
retf
out
xor
iret
pop
inc
push
fistp
pop
mov
fiadd
add
xor
inc
adc
ret
dec
cmps
xor
popf
jne
call
outs
push
int
xchg
add
add
pop
call
adc
add
es
sti
aad
cmp
sub
lods
cwde
outs
jno
and
pop
push
pop
cwde
inc
pushf
and
fild
adc
xchg
cmc
ficom
outs
lea
mov
loopne
enter
add
xor
rol
les
movs
mov
test
stc
fiadd
aam
mov
adc
(bad)
or
scas
daa
test
pop
inc
inc
pop
cmps
inc
hlt
(bad)
(bad)
out
mov
addr16
imul
and
(bad)
fwait
inc
std
jae
inc
xchg
(bad)
pop
scas
popa
xor
dec
pop
xor
or
push
mov
mov
in
xor
pop
lds
addr16
imul
inc
push
dec
popf
or
xor
aaa
or
sub
adc
and
std
aaa
xor
test
fwait
test
sub
pop
and
add
inc
xor
popf
jnp
js
call
daa
push
inc
lds
call
cwde
add
mov
lea
add
dec
fnstcw
fwait
xor
jmp
ins
push
cmp
pop
test
sub
icebp
fld
add
cmc
xchg
movs
sti
test
dec
dec
and
movs
mov
xor
mov
dec
xor
sbb
cmp
popf
xor
cwde
dec
add
inc
mov
mov
int
in
(bad)
movs
aaa
stos
fld
cmp
movs
pop
mov
xlat
and
xor
imul
rcr
mov
add
cwde
das
xchg
mov
xchg
and
cmc
pusha
inc
add
adc
xchg
push
mov
jmp
pop
ins
jnp
sar
imul
fcom
mov
xchg
aaa
fwait
movs
loope
and
mov
add
xor
aaa
jmp
movs
add
test
lods
outs
add
popa
jno
adc
es
outs
cdq
xor
ja
push
add
(bad)
int3
add
and
or
cmp
jg
xor
int3
add
inc
div
xor
ja
push
jbe
adc
ja
gs
cmp
or
mov
jne
mov
xor
mov
mov
inc
or
cmpxchg
cmc
push
or
imul
inc
or
sub
xlat
cmc
sub
or
cmp
sub
xor
adc
adc
xlat
inc
in
mov
test
repz
ret
mov
adc
or
push
loope
jmp
out
inc
cdq
inc
outs
nop
mov
imul
mov
shl
push
add
ja
add
jl
adc
imul
mov
out
or
in
int
jae
sub
mov
out
retf
inc
mov
test
or
xor
mov
push
mov
imul
and
not
div
mov
test
jbe
data16
ja
test
adc
int3
push
ins
pop
shr
rcl
xor
std
xor
or
or
out
aad
pop
das
inc
or
int
jbe
add
sub
imul
inc
dec
inc
xor
inc
out
add
fild
retf
sub
and
inc
js
retf
push
outs
pusha
and
icebp
ret
das
fnstcw
test
retf
sub
inc
or
and
add
retf
test
jg
pop
mov
pop
dec
out
add
mov
mov
adc
cmc
bound
int
sbb
(bad)
cmp
mov
inc
mov
out
xor
mov
loopne
mov
and
dec
cdq
loope
add
jnp
out
pop
mov
ja
outs
rcl
stc
mov
add
and
add
adc
pop
imul
ret
js
jne
jmp
inc
sub
(bad)
and
inc
add
or
pop
ret
scas
dec
mov
jecxz
or
or
(bad)
jmp
sbb
inc
or
je
xchg
cmp
jmp
(bad)
mov
inc
cs
leave
inc
adc
and
or
icebp
dec
sbb
pop
add
out
shr
xchg
and
sub
xchg
xor
ins
push
out
dec
enter
sbb
stos
and
xchg
inc
and
jne
jp
xchg
mov
ja
inc
shl
out
fucom
add
pop
and
in
xor
in
jne
or
int
cmp
mov
xchg
or
inc
in
in
and
xor
and
outs
mov
or
pop
push
pop
or
pop
int
inc
jb
call
shl
xchg
sub
repz
movs
int
xor
test
cmp
int
mov
jb
and
inc
lds
mov
repz
imul
(bad)
(bad)
dec
jp
add
(bad)
int
adc
mov
push
and
dec
inc
and
jmp
nop
mov
inc
lahf
sub
daa
movs
sti
inc
out
xlat
rcl
out
dec
dec
pusha
hlt
and
movs
pop
aad
int
int
inc
ret
inc
out
sub
or
pop
inc
xchg
pop
test
call
dec
push
stos
inc
adc
cmp
xchg
movs
sbb
(bad)
loop
in
cmc
lods
or
outs
pop
xor
adc
inc
test
xchg
lock
fld
retf
cwde
jnp
pop
int
cmp
push
leave
lods
sub
pop
cmps
adc
cmp
mov
sbb
or
and
hlt
test
int
in
mov
xor
adc
or
pop
xor
inc
in
push
inc
ret
out
mov
mov
add
cmp
jnp
cmc
test
ret
jnp
in
mov
dec
(bad)
int
cwde
lods
cmc
xlat
xchg
xor
xchg
cmc
and
sbb
or
in
nop
js
icebp
cdq
loope
ins
adc
adc
sub
or
inc
cmp
fist
out
inc
or
xchg
or
ror
adc
add
xchg
dec
mov
sub
daa
push
ss
out
push
mov
dec
add
retf
data16
cmp
js
xor
popf
jae
add
ret
jp
sbb
and
mov
xor
adc
aam
outs
mov
loope
repz
inc
enter
cmp
rcl
mov
packsswb
mov
fld
pop
arpl
adc
retf
pop
mov
and
movs
push
ret
inc
(bad)
jg
cmp
mov
push
xor
mov
cmp
ja
out
lock
sub
xchg
inc
sbb
sar
movs
mov
ret
pop
lods
and
lods
and
lods
sbb
fisub
mov
popf
and
xor
add
stos
jns
xor
add
adc
retf
bound
inc
mov
push
or
and
cmps
imul
jnp
mov
xchg
add
adc
pop
inc
sub
mov
ss
lods
add
xor
outs
mov
sub
sub
jbe
cmc
xor
adc
sub
popa
xchg
imul
pushf
adc
and
cmps
pop
mov
xchg
ret
out
mov
push
ret
or
add
adc
imul
jnp
pop
aad
gs
retf
pop
adc
or
or
and
aaa
sbb
pop
enter
cmc
popa
(bad)
pop
jbe
cmc
ja
sub
sub
popf
out
pop
and
inc
add
add
out
movs
in
test
jp
icebp
in
mov
ins
(bad)
push
inc
out
jecxz
jnp
sbb
outs
pop
out
cmp
mov
pop
imul
out
stos
gs
mov
jg
fadd
mov
jnp
fld
enter
inc
add
fsubr
aas
neg
and
shl
xchg
cmp
neg
ins
pusha
sbb
xlat
mov
fldenv
icebp
test
(bad)
out
jp
ret
jae
add
nop
dec
aad
out
mov
add
mov
and
idiv
adc
jnp
ret
test
rcr
dec
cmc
push
add
pop
dec
mov
pop
push
inc
daa
ret
cmc
xor
in
xor
cmc
inc
in
add
nop
or
xlat
mov
or
in
retf
cmc
or
and
xor
adc
test
inc
out
inc
add
or
adc
(bad)
cmc
lds
mov
push
stos
das
out
xchg
sbb
pusha
sahf
pop
(bad)
mov
int
nop
adc
xor
and
push
xor
idiv
or
out
add
xchg
mov
lds
div
xchg
test
inc
mov
mov
inc
lahf
xor
add
adc
xchg
pop
add
xchg
test
mov
sbb
ret
and
fisttp
jns
ret
sti
inc
jecxz
add
jecxz
jecxz
or
xor
dec
add
dec
cmc
add
jecxz
inc
push
inc
cmc
jecxz
ins
push
add
xchg
nop
jne
or
sbb
aad
movs
rol
inc
loopne
or
mov
inc
xor
bound
iretw
sbb
mov
sbb
pop
add
dec
sbb
mov
xor
cmp
and
add
push
mov
scas
nop
jmp
popa
fwait
cdq
movs
(bad)
inc
adc
and
sbb
cmc
int
das
xchg
dec
mov
xor
or
adc
and
cmc
shl
add
ins
or
outs
jae
leave
mov
(bad)
push
ret
fld
sub
fld
xchg
and
adc
add
pop
fidiv
xor
mov
int
rol
inc
int
je
dec
cmp
dec
fadd
retf
inc
pop
fistp
pop
test
aaa
cmc
ins
cmc
adc
lahf
test
leave
gs
popa
jno
inc
add
ss
popf
out
jb
adc
popa
jne
adc
ins
pusha
xchg
loope
ins
out
mov
aad
sbb
popa
pusha
mov
add
or
out
or
inc
retf
sbb
fdiv
pusha
ret
mov
ror
(bad)
mov
mov
out
pushf
dec
sub
and
add
test
adc
mov
pusha
scas
or
xor
(bad)
nop
aad
out
sbb
rol
pmulhw
mov
ss
mov
inc
out
imul
inc
aas
imul
inc
bound
cmc
cmp
shl
add
add
and
popa
inc
dec
fwait
dec
test
adc
sub
aam
or
loope
inc
pop
adc
mov
cmp
jae
(bad)
mov
inc
xor
add
pop
lahf
imul
fwait
jnp
mov
inc
mov
cmp
or
add
dec
dec
push
int
add
aaa
sbb
adc
cmc
int
dec
add
jecxz
(bad)
add
xchg
push
xor
xor
mul
pusha
add
or
dec
sub
aaa
lods
pop
xchg
mov
xchg
setae
fwait
outs
sar
rol
xchg
mov
dec
pop
adc
pop
aad
imul
jnp
push
lahf
sti
addr16
push
aaa
adc
ins
dec
inc
out
xlat
xchg
xor
add
or
test
cmp
mul
stos
daa
out
cli
mov
jae
std
jo
push
jno
fild
int3
out
and
cwde
popf
es
or
sbb
push
jecxz
call
in
in
add
inc
outs
or
add
sbb
push
jns
inc
jmp
jnp
sbb
in
loope
pushf
sub
(bad)
or
fwait
int
gs
inc
jg
xor
mov
adc
and
and
dec
cwde
hlt
cwde
xchg
dec
pop
in
loope
arpl
aas
ret
pop
stos
gs
xor
(bad)
jnp
push
mov
pop
int
shl
out
int
add
rol
xor
or
lods
inc
mov
sbb
cwde
xor
mov
call
(bad)
jg
es
retf
cmp
mov
push
aam
hlt
sbb
jmp
les
mov
leave
int
inc
pop
xor
leave
or
fisub
jecxz
mov
xchg
push
mov
movs
fwait
mov
fidivr
daa
arpl
mov
pusha
push
push
addr16
cmp
es
or
jae
mov
popa
pusha
inc
mov
push
inc
cmp
adc
sub
dec
dec
cmp
pop
pop
mov
xor
neg
outs
push
adc
aas
xor
and
aaa
stos
add
inc
adc
mov
lahf
aaa
and
sbb
fwait
mov
xchg
xor
xchg
inc
stos
dec
xchg
icebp
xchg
sbb
out
mov
add
fsubrp
push
int3
xchg
push
out
xor
pop
clc
and
scas
popa
cmps
aaa
movs
scas
pusha
or
call
stos
gs
int
adc
mov
lods
sbb
cdq
inc
outs
dec
aam
push
movs
fisubr
int
pop
adc
sub
xor
jg
data16
sbb
imul
push
pop
and
leave
mov
ins
dec
xchg
int
dec
or
imul
add
fnstsw
push
aas
cmp
xor
int
movs
xchg
punpcklwd
aaa
jmp
mov
jecxz
jns
sahf
mov
jns
sbb
add
cmps
push
add
sub
pusha
pop
inc
sbb
dec
mov
ja
sbb
ret
xchg
pop
cmp
test
(bad)
mov
rol
jmp
div
int3
push
inc
mov
shr
adc
or
call
push
sbb
retf
xchg
jnp
imul
std
add
ret
inc
in
sbb
popa
outs
ja
sub
push
aam
sub
add
loopne
ins
sbb
les
jo
daa
imul
mov
dec
jno
mov
pop
mov
adc
inc
pop
sbb
or
push
inc
jo
jne
mov
frstor
xor
or
test
mov
push
sbb
ja
add
icebp
repz
inc
call
lea
xchg
cmp
xlat
xchg
addr16
jp
bound
rcr
ret
add
inc
mov
mov
jb
(bad)
mov
movs
dec
or
outs
pop
xchg
adc
es
cmps
mov
add
arpl
bound
pop
imul
enter
imul
mov
aaa
and
movq
or
add
add
sbb
pop
cmp
inc
sub
out
xor
cmp
pop
xchg
xor
add
popf
xor
inc
inc
and
xchg
test
in
sbb
sar
aaa
cdq
mov
data16
(bad)
xor
(bad)
pop
inc
icebp
mov
dec
sbb
jnp
sar
sbb
push
adc
stc
dec
and
arpl
push
xchg
stos
pop
int
push
xchg
sub
sbb
dec
bound
outs
push
sti
add
pop
pop
int
pop
fwait
popf
es
cdq
xor
dec
mov
shl
int
and
call
or
jp
in
xor
into
or
mov
ret
fld
push
pop
lods
loope
xor
dec
sar
add
mov
sbb
mov
ja
xor
movs
mov
cmc
inc
test
add
pusha
fwait
das
add
or
xchg
and
cmp
pop
leave
inc
inc
jae
and
jmp
xor
sub
xor
inc
xchg
outs
int
popf
aad
xor
and
or
inc
movs
mov
push
loop
xchg
aaa
(bad)
sbb
mov
das
adc
dec
ret
mov
fst
xchg
inc
add
out
jns
jae
add
es
push
inc
test
sub
or
jne
stos
pop
adc
outs
cmp
add
pop
mov
(bad)
xchg
leave
adc
and
cmps
ss
adc
ins
xor
inc
(bad)
arpl
shr
pop
jp
adc
rcl
xchg
inc
add
add
aam
xchg
test
pop
outs
inc
rol
ror
xchg
adc
ja
test
arpl
imul
es
xor
fnstenv
lds
pusha
push
xchg
jns
pop
mov
push
xchg
in
lods
inc
div
mov
adc
icebp
cdq
push
adc
mov
in
mov
pusha
neg
and
adc
or
xor
adc
xor
inc
mov
icebp
mov
dec
test
(bad)
test
adc
xchg
ja
fistp
push
out
dec
xor
scas
push
mov
int
(bad)
jmp
stos
and
lea
and
jecxz
arpl
or
js
mov
xor
sbb
and
and
cmps
add
jmp
ror
push
xor
sub
inc
arpl
or
sbb
into
sub
(bad)
aaa
mov
movs
inc
inc
int
inc
dec
xchg
data16
sub
movs
sbb
ret
and
xor
js
xor
outs
mov
sub
mov
ror
inc
cmps
pop
outs
cmp
or
gs
add
dec
or
dec
xor
or
xor
push
push
das
push
lds
inc
xor
inc
stc
xlat
ins
ss
jp
xor
fs
dec
loop
mov
and
int
add
sub
nop
nop
es
sub
fldcw
daa
mov
sub
adc
xor
rcr
ja
inc
or
movs
jmp
outs
or
das
adc
jmp
outs
or
pop
sub
xor
dec
ja
mov
retf
pop
or
std
mov
pop
mov
xchg
in
pop
cmp
push
xor
dec
test
lahf
or
push
fld
pop
xor
std
sbb
and
inc
call
loopne
or
ja
and
push
dec
mov
sbb
out
pusha
(bad)
sbb
inc
and
add
mov
aas
xchg
add
sub
not
dec
xchg
jnp
adc
xchg
aaa
icebp
mov
mov
inc
cmp
ret
mov
mov
cmp
sbb
enter
and
or
shl
add
add
(bad)
(bad)
xor
inc
shl
stc
push
sub
test
pop
daa
jae
cwde
lds
call
call
add
daa
and
mov
push
dec
pusha
inc
shl
push
pop
or
test
push
mov
mov
or
mov
ret
dec
dec
imul
jne
cwde
mov
aas
ins
push
mov
xchg
inc
rol
loope
popa
xor
adc
(bad)
test
mov
adc
dec
fldenv
and
rcr
retf
sbb
and
ffree
rcr
sbb
add
fisub
movs
ror
adc
adc
cmp
adc
xor
mov
vmovdqa
mov
and
xor
cdq
xchg
dec
mov
stos
imul
shl
fwait
mov
aad
dec
push
test
idiv
lahf
add
mov
sub
push
fild
jp
mov
jae
and
dec
sbb
rol
icebp
dec
mov
push
xlat
and
dec
mov
sub
dec
fistp
and
int3
mov
scas
data16
or
rcl
or
sbb
gs
test
dec
cmp
xor
push
adc
or
inc
movs
push
mov
dec
xchg
psrlq
jmp
dec
inc
mov
inc
sbb
sub
(bad)
cmp
ja
outs
(bad)
popa
mov
repnz
ja
mov
or
sub
ins
ss
pop
xlat
dec
cmp
pop
pop
addr16
xor
or
mov
in
dec
cmc
(bad)
out
and
mov
cmps
lahf
pop
mov
lahf
out
inc
mov
(bad)
repz
shl
in
or
lods
adc
mov
add
test
popf
pop
sbb
int3
pusha
and
mov
enter
out
cmp
push
je
arpl
aaa
mov
xor
loope
xor
loope
mov
mov
jnp
xor
pop
mov
retf
mov
mov
mov
jno
mov
xor
push
xor
push
repz
mul
pop
out
xor
ret
popa
fbstp
pop
mov
adc
inc
push
jnp
push
dec
jmp
pop
fsubr
xor
out
call
and
mov
mov
pop
sbb
xor
push
mov
inc
fistp
ja
stc
sub
pop
test
das
and
add
inc
jne
inc
push
lods
pop
in
out
outs
iret
pop
adc
pop
xor
not
out
xchg
jo
gs
add
div
xor
mov
outs
test
inc
add
inc
nop
dec
push
inc
outs
xor
lds
inc
int3
inc
dec
jmp
xchg
inc
int3
xchg
dec
mov
xchg
inc
int3
xchg
das
cmps
push
bound
test
popa
lahf
inc
sahf
and
imul
xor
test
jne
sbb
adc
js
aas
xor
or
inc
or
test
adc
push
aaa
add
inc
les
or
sub
ror
jnp
test
sub
ficom
push
xchg
out
arpl
push
out
inc
retf
es
mov
retf
(bad)
int
jg
xor
inc
out
fild
mov
retf
push
xchg
imul
(bad)
shl
mul
or
cmc
div
ss
movs
sub
imul
test
sbb
xchg
xor
loope
xchg
add
stos
mov
ins
mov
movs
cmp
out
mov
mov
mov
test
dec
or
lock
inc
mov
les
adc
in
xchg
mov
mov
inc
arpl
xchg
out
and
xor
out
adc
and
mov
lahf
mov
cs
aaa
jae
xor
fdiv
out
ftst
ret
imul
xor
mov
test
xchg
cmc
aaa
cmp
aad
pop
inc
cs
xchg
cmc
inc
test
jmp
pop
add
inc
push
sbb
or
push
cmc
jp
mov
mov
push
cdq
divps
sbb
inc
out
sub
and
mov
or
aas
out
inc
cwde
adc
stos
arpl
mov
xchg
out
xor
mov
lods
xchg
inc
mov
or
shr
retf
out
pop
add
xchg
out
pop
cmps
adc
mov
pop
xchg
or
nop
out
xor
in
sbb
imul
js
xchg
and
sbb
das
jne
push
and
mov
inc
fsubp
inc
inc
jnp
pop
in
js
push
das
in
rol
mov
xor
data16
sbb
jo
in
es
icebp
and
cmc
es
add
push
or
and
dec
in
out
repz
dec
rol
pop
cdq
add
test
push
add
mov
out
call
nop
and
jne
out
inc
sub
push
nop
movs
nop
and
inc
adc
pusha
xchg
outs
xor
ins
adc
adc
cmp
lods
out
xchg
nop
or
rol
jne
pop
call
aaa
or
or
mov
lods
adc
inc
xor
xor
jmp
fldcw
data16
adc
rol
out
int
mov
xchg
imul
pop
mov
jns
adc
cmp
xlat
ss
loope
lods
cmp
dec
sub
jo
jmp
les
mov
inc
aas
cmc
ja
js
popf
rcr
lds
test
sbb
enter
fnsave
test
push
mov
in
cli
push
or
xor
push
cmp
dec
aas
out
inc
iret
pop
dec
dec
mov
cdq
cmc
fcompp
adc
(bad)
iret
or
xor
stc
mov
jo
aaa
sbb
xchg
out
add
icebp
fiadd
fcmovnbe
or
adc
inc
(bad)
scas
adc
xor
pop
inc
sbb
adc
mov
mov
or
fld
mov
pushf
int
cmc
xor
hlt
and
sbb
push
imul
adc
inc
stc
hlt
es
lds
das
jnp
or
cmps
shl
out
xor
xchg
ins
mov
dec
out
and
add
adc
jno
das
daa
push
adc
pushfw
push
stc
mov
add
sub
lods
das
inc
cmps
xchg
movs
pop
sbb
xchg
or
lods
lds
rcl
and
cmp
and
fistp
mov
cmps
add
cmp
sub
(bad)
out
ja
call
out
out
xor
test
ret
popa
lods
das
and
inc
test
jmp
inc
xlat
fidivr
cmp
push
pop
ins
adc
dec
inc
retf
add
dec
aad
mov
dec
adc
pop
add
jmp
mov
push
sub
aaa
jge
xchg
push
sub
or
sub
dec
inc
add
jge
add
jno
add
push
sbb
fwait
sub
mov
lahf
stc
js
arpl
pushf
add
inc
fsubrp
add
in
iret
cmp
pop
ror
jmp
xchg
mov
and
arpl
xor
push
pop
addr16
xor
arpl
rcl
pop
and
dec
jmp
push
icebp
test
fst
bound
retf
scas
movs
das
xchg
and
sar
pusha
pop
mov
out
mov
xchg
movs
xor
jnp
jp
sbb
and
mov
and
in
sbb
push
xor
lahf
(bad)
inc
jmp
inc
pop
push
cmps
ret
jnp
jae
lods
xor
add
inc
add
inc
push
mov
pop
add
retf
add
pop
sti
cwde
lods
xor
push
sub
xchg
sub
lds
inc
inc
mov
gs
pop
xor
lods
adc
(bad)
ret
inc
mov
mov
shl
add
scas
mov
dec
fld
adc
adc
mov
pop
push
xor
add
ins
pop
inc
lds
stc
pop
and
shr
xor
or
add
in
push
mov
ret
cwde
les
imul
add
ja
xchg
int
cmps
out
jno
in
icebp
inc
(bad)
pop
cmc
adc
fld
cmps
aas
inc
hlt
ficom
cwde
mov
das
sub
xchg
in
fcomp
push
mov
mov
inc
arpl
sub
push
xor
test
ins
xor
jmp
aaa
sub
and
adc
dec
inc
cmp
xchg
inc
mov
cwde
dec
loopne
aad
sahf
or
cmc
and
shl
jne
sub
into
mul
cmp
or
adc
add
adc
aas
(bad)
sbb
shr
fwait
push
sub
ror
test
shl
das
cmp
xchg
sub
sbb
popa
outs
sbb
mov
iret
movs
shl
adc
xor
sbb
ret
pop
in
neg
outs
xchg
mov
ja
adc
imul
fwait
int
add
dec
repnz
inc
sysret
pop
inc
add
push
dec
popa
mov
xchg
and
pop
dec
sub
lods
mov
xchg
mov
inc
inc
inc
out
imul
aas
ret
aaa
pop
mov
out
or
mov
pxor
add
ins
jg
sbb
out
fbld
inc
(bad)
jg
fldcw
add
xchg
ss
imul
push
(bad)
sbb
ja
in
stos
ss
inc
dec
jbe
in
mov
cmp
out
xchg
sub
outs
dec
jp
aaa
daa
outs
ja
pop
sbb
pop
mov
outs
push
mov
dec
mov
scas
push
inc
dec
inc
outs
adc
outs
adc
enter
test
jb
xchg
aas
and
and
popa
rcl
lds
aam
pop
push
sbb
pop
push
outs
and
jge
push
inc
xor
gs
and
fbld
xor
adc
pop
inc
(bad)
rcr
cmc
fwait
xor
add
cmp
arpl
xor
dec
sbb
cdq
scas
daa
mov
cwde
mov
pusha
add
lahf
pop
xor
sbb
jmp
repz
(bad)
shl
jns
(bad)
movs
mov
sbb
adc
mov
cmps
jecxz
aam
mov
xchg
add
das
test
inc
xor
test
cwde
dec
xchg
mov
(bad)
pop
cmps
fwait
shl
dec
xor
loopne
pop
dec
loopne
test
mov
push
add
js
or
pmaddwd
or
fst
daa
call
stos
call
hlt
lds
ret
lds
out
popa
xor
pop
pop
imul
inc
dec
mov
test
fwait
jno
fisttp
cmp
or
mov
outs
push
xchg
add
xor
sbb
add
push
addr16
inc
jge
fiadd
add
ret
(bad)
jge
and
xor
cmp
mov
add
dec
sti
pcmpeqw
inc
das
or
or
add
cwde
loope
in
dec
dec
call
xor
popa
cmp
cdq
or
xor
cmc
retf
movs
movs
push
xor
loope
fsubp
cmp
cwde
ret
dec
xchg
addr16
adc
dec
inc
jo
dec
push
xor
mov
add
or
lds
lock
and
pop
and
ret
(bad)
dec
(bad)
jnp
push
jnp
push
outs
out
icebp
sbb
and
xor
inc
aas
push
dec
cmp
jmp
xchg
mov
mov
test
add
ret
stos
xchg
dec
push
inc
dec
rcr
call
cmps
xlat
pop
mov
pop
arpl
dec
adc
addr16
imul
daa
push
add
pop
(bad)
int
inc
ret
cmps
out
and
jg
cdq
pop
out
lock
add
sub
idiv
add
push
in
xor
lods
inc
sbb
cmp
ret
out
and
mov
icebp
stos
cmps
stos
out
popf
into
push
adc
cmp
push
ja
inc
iret
xchg
mov
adc
cmp
js
sbb
add
shr
in
fwait
adc
jmp
sti
ss
(bad)
and
neg
inc
adc
jp
jnp
adc
and
xchg
sub
arpl
dec
out
test
push
mov
jmp
aad
es
std
push
out
dec
call
popa
push
mov
pop
add
mul
add
add
mov
mov
xchg
arpl
jmp
std
std
adc
es
daa
inc
les
and
push
pop
mov
inc
jg
and
mov
sbb
mov
add
jnp
and
xchg
push
rol
xchg
add
fistp
scas
sbb
outs
sub
out
in
rol
add
xchg
mov
inc
push
jmp
test
nop
pop
and
hlt
imul
stos
sub
push
sub
and
lds
fwait
shl
sub
cmovp
add
std
pop
rcr
ret
rol
mov
xor
pop
add
aas
sub
pop
in
add
fwait
adc
adc
bound
or
push
xchg
icebp
xlat
arpl
mov
xor
dec
mov
data16
push
xor
xor
adc
mov
fisub
lods
inc
add
ret
jnp
popf
(bad)
stos
sub
mov
or
mov
stc
cmp
pop
adc
add
out
add
pop
xor
sub
gs
jo
add
and
mov
shl
or
pop
push
(bad)
mov
std
dec
pop
sub
imul
xor
mov
fwait
jnp
dec
ret
ins
ss
adc
iret
or
or
aad
mov
das
mov
xchg
fisubr
in
jg
and
sidtd
aam
jp
out
xchg
xchg
xor
jge
aaa
imul
loop
sbb
xor
xor
int3
sub
cmc
adc
mov
test
call
nop
sbb
xlat
(bad)
xlat
or
xor
and
in
or
xor
add
xchg
fdivp
fldenv
xchg
aad
sub
sub
mov
and
mul
lods
push
inc
popf
dec
xor
in
aas
mov
int
add
(bad)
movs
add
sti
pop
xor
cmc
adc
lahf
sar
ins
lods
(bad)
data16
inc
push
mov
lds
std
cmps
mov
rcr
fwait
xchg
push
xchg
sbb
mov
lahf
push
ficom
sbb
add
xchg
addr16
dec
mov
mov
push
aas
adc
aaa
cmp
hlt
fidiv
repz
pop
adc
fisub
popa
xchg
jecxz
idiv
cmp
repz
in
dec
push
xor
inc
xor
xchg
push
push
loope
stos
aad
rol
mov
repz
sbb
call
add
xor
mov
and
sub
dec
sub
mov
adc
add
xchg
add
mov
int3
add
or
lods
sbb
mov
aaa
rol
je
jmp
xchg
in
cmp
xchg
push
test
push
pushf
sti
pop
ss
es
div
or
adc
xor
xchg
pusha
xchg
movs
and
jns
or
and
call
sub
cwde
push
sar
data16
xchg
mov
jg
outs
sar
popa
test
xchg
movs
sti
adc
fimul
cmp
add
mov
push
add
and
add
and
and
adc
sub
loop
ja
dec
mov
xchg
adc
lahf
imul
aaa
stos
add
mov
mov
sbb
in
or
test
mov
aaa
sbb
in
and
out
mov
xchg
cmp
and
test
or
push
mov
jae
call
cmp
adc
push
mov
cmp
sbb
lods
aas
int
add
cmp
inc
aad
fisubr
icebp
xchg
daa
aaa
and
add
adc
mov
xor
or
mov
mov
adc
inc
pop
popf
push
int3
xchg
inc
mov
sub
mul
pop
not
cmp
cmp
test
push
ins
dec
pop
push
add
ror
or
or
fnstcw
mul
mov
test
test
or
pop
and
xor
addr16
sbb
add
ja
and
mov
sbb
data16
cmc
fcmovne
adc
dec
mov
push
jg
shr
test
inc
out
add
rol
cwde
and
and
sbb
or
xor
pop
inc
aad
out
xor
mov
ror
inc
push
fcomp
cdq
or
or
jge
mov
add
xor
sbb
inc
adc
cdq
leave
inc
sub
add
xchg
(bad)
pop
or
ja
(bad)
cwde
mov
retfw
mov
ror
sbb
pop
iret
mov
xchg
adc
fwait
or
icebp
xor
popa
iret
aas
xor
aas
xor
xchg
mov
adc
outs
pop
pop
pop
stos
aaa
sub
mov
adc
inc
int
ss
outs
inc
mov
and
jne
xchg
popa
ss
inc
pop
scas
jg
sub
add
lds
cmp
xchg
aaa
xor
(bad)
aaa
test
lds
fist
(bad)
pop
xor
and
mov
ins
xchg
mov
sti
adc
and
cwde
mov
pop
cmp
icebp
adc
push
sbb
jnp
jnp
pop
xchg
out
mov
xor
or
aaa
dec
popa
xchg
test
push
ret
(bad)
cwde
int
imul
pop
fistp
mov
mov
jge
std
mov
adc
ins
or
lea
cmp
mov
in
inc
adc
std
ja
mov
sub
fistp
cwde
lock
push
(bad)
repnz
js
mov
aas
and
add
pop
xor
cmps
scas
and
add
das
out
or
mov
mov
xor
ret
retf
adc
jnp
add
call
jne
pop
push
adc
retf
ret
jno
stos
adc
bound
int3
jecxz
adc
sub
cmp
enter
in
int
pop
mov
fistp
mov
cmp
adc
xrelease
das
add
add
mov
mul
imul
dec
(bad)
and
xor
mov
push
lods
dec
ret
ret
leave
add
add
or
add
jnp
cmc
pop
popa
out
sub
ret
mov
int
inc
dec
xor
push
xor
add
adc
adc
ficom
aaa
movs
or
inc
neg
shl
mov
pusha
lds
es
test
mov
inc
cdq
(bad)
int
inc
xchg
xor
and
ja
cmp
inc
mov
ret
out
ss
cmp
dec
xchg
outs
xor
inc
sub
or
jo
ret
inc
jne
adc
mov
jns
das
addr16
mov
dec
dec
dec
add
sbb
mov
movs
sub
inc
nop
fidiv
push
inc
add
pop
outs
dec
push
add
jmp
xchg
jno
push
outs
pop
push
mov
adc
sbb
push
adc
push
scas
dec
pop
inc
cwde
xor
and
adc
dec
sti
stos
in
dec
shl
aad
inc
movs
cwde
dec
mov
and
jns
addr16
shr
int
jmp
lea
push
xor
mov
and
dec
pop
push
xor
push
xchg
sub
add
arpl
pusha
addr16
jae
xor
test
pop
shl
xchg
add
arpl
cwde
lods
test
or
aas
push
dec
into
loop
mov
sub
jmp
(bad)
(bad)
inc
sbb
sub
in
mov
(bad)
jno
(bad)
nop
mov
push
inc
call
pop
inc
jmp
push
xchg
rol
or
in
mov
inc
cmp
in
int
arpl
js
pop
test
xchg
call
inc
mov
mov
repz
leave
loopne
mov
or
inc
aas
jo
mov
pop
fwait
jb
es
mov
and
mov
das
pop
aad
sbb
test
div
adc
adc
pop
or
call
adc
or
dec
or
cmc
xchg
das
iret
retf
add
es
cwde
int
fnstsw
sub
jmp
or
push
movs
mov
shl
and
dec
mov
and
sub
fwait
xor
and
push
call
or
stos
dec
add
icebp
int
push
ret
fisub
fstp
mov
xor
shl
sub
adc
xor
mov
call
mov
pusha
lock
sub
sbb
cdq
pop
call
inc
mov
jge
aaa
aad
adc
add
xchg
(bad)
dec
xor
add
lock
add
arpl
push
(bad)
neg
xor
jae
jae
dec
adc
std
mov
xor
push
imul
out
sbb
mov
inc
or
push
jne
rol
xchg
mov
aaa
pop
cdq
cmc
xor
pop
dec
outs
fdiv
gs
mov
mov
lods
addr16
bound
inc
test
adc
aad
test
(bad)
fwait
shr
mov
js
call
or
ss
aaa
repz
push
inc
add
or
(bad)
xlat
mov
dec
push
in
mov
(bad)
and
inc
dec
adc
and
pop
jno
gs
mov
xor
mov
jno
push
ret
add
ss
cmp
adc
in
xchg
xor
add
mov
popa
sbb
arpl
inc
add
mov
xchg
leave
sbb
xor
xor
or
stos
mov
test
dec
mov
add
sbb
aas
dec
cli
and
cmp
popa
outs
or
and
dec
jp
(bad)
fild
adc
cmc
inc
call
jnp
dec
pop
(bad)
arpl
jmp
and
sbb
or
shl
nop
cmps
and
and
arpl
test
mov
adc
cmp
mov
fisttp
shl
or
(bad)
nop
loopne
iret
retf
pop
fs
cmp
and
mov
jecxz
daa
fbld
fs
xor
std
icebp
pop
or
mov
inc
int3
mov
gs
xchg
rcl
push
int3
mov
das
sbb
ins
pop
xchg
xchg
les
push
nop
xor
sub
inc
xor
inc
jmp
add
xchg
aad
mov
sbb
pop
shl
jnp
jp
and
cwde
add
sub
mov
lods
int
mov
sub
stc
inc
jnp
and
ss
and
xchg
mov
adc
sbb
aam
xchg
dec
add
shl
ins
or
cmp
fldenv
jne
fst
in
es
ins
mov
xor
test
mov
push
cmp
(bad)
vmread
mov
mov
add
shr
inc
out
xor
mov
and
mov
inc
or
mov
or
mov
xor
inc
sar
sub
pop
inc
int3
cmc
movs
imul
push
sub
or
mov
pop
add
sbb
imul
dec
lds
inc
aad
xchg
add
sbb
xor
sbb
push
aam
cmp
scas
not
dec
xchg
cwde
rol
ror
pop
ror
mov
out
xchg
inc
sbb
cwde
or
add
aaa
test
test
leave
lahf
test
xor
dec
inc
mov
not
jnp
and
test
mov
adc
sbb
sub
ret
inc
(bad)
dec
outs
shr
xchg
add
inc
sub
ror
and
cmp
and
xor
pop
xlat
push
aaa
jmp
call
xor
pop
pop
rcl
out
lea
mov
pop
dec
push
sub
out
jmp
or
int3
pusha
pop
aaa
das
xchg
mov
sbb
inc
out
dec
push
and
icebp
and
and
inc
ins
(bad)
fwait
shl
jno
add
xor
das
aaa
rol
mov
popa
add
outs
add
and
xor
inc
pop
pop
test
outs
mov
jo
pop
vmaxsd
mov
inc
xor
sub
push
adc
mov
es
ins
push
lods
fst
pusha
pop
ja
pop
add
add
ret
rol
mov
arpl
adc
pop
sbb
mov
mov
call
sub
inc
inc
lahf
cwde
aad
xchg
pop
xchg
and
test
addr16
and
fst
out
shl
dec
adc
sub
and
ins
adc
inc
dec
mov
out
lock
add
sbb
pop
test
call
jns
mov
jnp
and
mov
inc
mov
mov
inc
lock
dec
or
add
inc
dec
bound
mul
mov
int3
sbb
and
jmp
xor
pop
ja
sti
add
ret
cmp
bound
and
sbb
(bad)
or
cmpxchg
movs
adc
mov
int3
pop
mov
cdq
mov
scas
test
scas
test
fiadd
push
fwait
daa
add
mov
inc
fwait
mov
and
inc
aad
add
scas
or
sub
out
or
retf
(bad)
retf
and
fstp
inc
sub
xchg
outs
mov
das
fild
dec
cmp
xor
popa
dec
push
inc
outs
pop
lahf
xchg
lds
in
xor
mov
cwde
pop
pop
and
xor
push
xor
xor
xor
jno
or
inc
arpl
push
sub
pop
inc
test
xchg
pop
popa
or
test
xchg
adc
test
add
aaa
pop
dec
mov
jmp
mov
or
rcl
dec
mov
lods
loopne
xchg
in
xor
dec
cmp
fild
mov
cmp
jge
imul
xchg
jge
or
push
xor
stc
mov
out
add
jno
test
dec
xor
mov
fisub
jne
inc
xchg
or
int3
or
inc
movs
push
or
push
ret
push
add
dec
loope
and
imul
add
lock
daa
(bad)
gs
dec
xor
fnsave
dec
sub
test
pmaddwd
mov
or
icebp
push
sub
dec
mov
dec
push
add
int
lea
lea
sub
sbb
sub
and
sub
push
imul
inc
mov
test
mov
(bad)
adc
shl
add
lock
shl
lods
sub
(bad)
pop
dec
adc
and
and
xor
and
mov
or
xor
push
bound
sti
sbb
retf
dec
aaa
ficom
adc
sub
and
dec
in
add
mov
jecxz
icebp
and
or
je
push
cmp
aam
xchg
dec
mov
adc
mov
adc
leave
xor
sbb
int
push
icebp
xchg
jno
lea
and
test
(bad)
jne
in
mov
add
js
sbb
pop
jmp
shl
xchg
lock
add
inc
xor
pop
jge
mov
stos
les
xchg
cmp
dec
pop
mov
and
inc
fstp
ins
fild
pop
mov
sbb
xor
out
dec
push
movs
arpl
sub
add
add
add
adc
fwait
dec
cdq
mov
dec
call
add
test
xchg
push
les
idiv
mov
arpl
dec
outs
shl
sub
pop
mov
icebp
ret
lods
or
cwde
pop
popa
jecxz
les
fsubp
arpl
sbb
mov
xchg
mov
gs
jmp
ins
or
dec
shl
xchg
test
jmp
dec
push
xor
add
xor
pop
vphaddbq
popa
ins
xlat
fld
push
or
arpl
lods
loopne
mov
xor
shr
stc
xchg
push
dec
sub
(bad)
lods
xchg
mov
scas
inc
add
or
cmp
and
dec
push
pop
inc
xchg
fidiv
lods
xlat
or
cwde
mov
icebp
mov
imul
fisub
inc
leave
jmp
inc
and
mov
and
pop
inc
out
imul
add
push
inc
or
daa
lea
inc
bound
xchg
mov
inc
and
mov
pop
sbb
xor
outs
pop
icebp
faddp
repz
addr16
inc
push
int
xchg
call
xchg
mov
inc
xchg
ins
xchg
bound
inc
out
mov
rcr
xor
jmp
lods
test
xlat
mov
in
sub
jg
and
xor
dec
dec
loopne
aas
xchg
xchg
dec
lds
xchg
cmp
and
xor
movs
loopne
test
shr
add
dec
sbb
mov
dec
inc
inc
int3
push
push
jmp
cwde
jnp
gs
and
and
popa
push
mov
lds
or
adc
xor
arpl
rol
or
rol
lea
sub
arpl
stos
adc
dec
cwde
mov
popf
cmp
xor
movs
pop
dec
ror
push
mov
out
sub
ss
fld
or
popf
bound
mov
jge
mov
repnz
dec
or
int3
ficomp
cmp
push
daa
dec
mov
adc
xlat
jnp
call
hlt
xchg
rcl
(bad)
(bad)
arpl
stos
xchg
adc
ret
dec
or
hlt
out
jne
jbe
ss
or
dec
enter
cmc
sbb
mov
or
add
div
fwait
mov
icebp
ja
int
dec
xchg
lods
imul
jnp
mov
dec
pop
dec
sar
inc
call
ret
xor
xchg
or
aad
inc
ret
sbb
aad
push
mov
xchg
inc
adc
adc
mul
and
ja
std
sub
xchg
aaa
cdq
stos
(bad)
pop
adc
imul
addr16
test
int
neg
neg
sbb
mov
ret
fimul
ret
and
idiv
add
adc
outs
rol
loope
out
out
test
add
pop
mov
adc
test
push
pop
in
out
mov
test
aaa
lahf
test
sub
mov
div
mov
aas
fisttp
pop
jbe
test
test
mov
div
adc
sub
stos
test
loope
out
cdq
sub
add
sub
std
out
ins
add
out
push
shl
jmp
iret
fs
ret
out
inc
repnz
out
sbb
pop
mov
pop
xor
push
test
aam
out
aas
add
sub
shl
lods
gs
dec
xor
dec
fst
leave
cmp
cmp
test
and
inc
cmp
popa
push
dec
cmp
dec
cwde
mov
cmp
push
shr
rcl
cmp
add
retf
bound
sbb
int
daa
out
pop
push
(bad)
arpl
stc
sub
lds
fs
adc
xchg
pop
out
and
ja
mov
out
inc
xchg
out
jecxz
ins
inc
fwait
out
movntps
add
leave
xor
pop
and
ret
inc
out
inc
and
fdivrp
out
inc
dec
adc
es
push
add
add
test
push
in
and
js
pop
outs
dec
add
fwait
aad
neg
idiv
and
in
add
imul
ins
or
retf
js
ins
and
xchg
push
xor
or
es
mov
jns
inc
mov
fild
out
ret
gs
xchg
out
popf
out
xchg
pop
ss
and
out
movs
mov
jnp
out
aaa
lahf
mov
ficom
mov
mov
cmc
or
sub
add
frstor
aad
popa
std
cmc
and
pop
cmc
jecxz
fwait
lds
cmc
and
sub
cmc
fwait
mov
push
xchg
cmc
in
cmc
retf
and
push
retf
adc
jg
mov
mov
cmc
out
psrlq
jmp
inc
mov
les
sub
sbb
inc
jae
push
xor
outs
push
mov
pop
sub
in
xor
sub
cmp
and
dec
push
mov
scas
and
mov
xchg
pop
ret
pop
mov
imul
pop
test
adc
inc
xchg
arpl
test
into
xchg
shr
or
(bad)
test
add
les
push
sbb
fist
lds
lock
sub
popa
mov
dec
gs
push
adc
and
mov
sbb
pop
push
sub
or
rol
fwait
inc
movs
gs
add
mov
xlat
nop
or
add
inc
test
out
xchg
sub
add
inc
outs
inc
lods
out
xchg
dec
pusha
push
jae
xor
test
add
rol
pop
adc
push
pop
and
dec
jnp
mov
mov
mov
test
das
adc
test
idiv
popa
mov
jg
fldenv
add
add
and
test
cmc
outs
dec
outs
add
cmp
cmc
and
sbb
mov
popa
xchg
int3
add
retf
movs
out
dec
js
and
in
and
jo
jge
xor
in
mov
cmp
push
or
out
and
int3
add
sbb
outs
arpl
and
leave
xchg
push
adc
rcl
test
adc
ret
xchg
in
imul
adc
xor
xchg
ror
test
mov
mov
mov
mov
push
dec
sub
xor
out
add
sbb
test
dec
and
sbb
stos
mov
or
lods
mov
pop
adc
lock
pop
outs
sbb
jne
inc
inc
enter
pop
inc
xor
das
inc
cmc
mov
and
loopne
cmp
xor
push
pusha
or
cmp
xchg
push
in
popf
aaa
xchg
dec
mov
mov
mov
sbb
xor
dec
mov
push
inc
adc
in
mov
aaa
add
movs
ja
(bad)
repz
ss
xor
popf
inc
mul
inc
dec
adc
adc
adc
sub
fldcw
push
inc
ss
mov
xchg
xchg
add
gs
mov
test
add
test
lods
add
bound
xor
dec
pop
ret
into
inc
sub
mov
mov
or
cmps
call
ret
test
popa
push
nop
pop
sbb
sti
fld
mov
mov
push
nop
movs
bound
jnp
dec
pop
push
ins
add
add
and
or
push
gs
(bad)
pand
enter
es
ret
stc
jg
add
es
pop
mov
xor
nop
cwde
aam
sbb
xor
or
add
and
or
push
xchg
aad
es
inc
pop
(bad)
leave
daa
dec
xrelease
and
sub
and
adc
jmp
xor
inc
dec
add
xor
test
push
lods
xchg
and
jmp
xchg
adc
xchg
imul
in
int
mov
xchg
movs
or
mov
mov
out
and
inc
dec
sbb
push
xor
or
add
rol
popa
adc
xchg
push
mov
inc
mov
outs
push
jg
jge
ficom
inc
cmps
jp
jns
sub
mov
or
dec
pop
out
inc
add
xor
xor
stos
(bad)
jge
dec
add
jecxz
push
cmps
dec
xor
mov
push
test
outs
and
and
test
fist
or
xlat
add
sbb
cmps
dec
pop
xor
mov
cmp
and
retf
pop
xchg
add
arpl
fbstp
fiadd
xor
fnstcw
jge
dec
adc
test
jg
sub
int
sbb
xor
xchg
inc
mov
xchg
xchg
out
add
add
adc
test
xlat
xor
xchg
inc
pop
adc
and
cmp
shl
rol
push
ret
test
xlat
sti
icebp
adc
xchg
xor
sub
add
es
int
push
das
outs
rcl
pop
xchg
mov
inc
sub
cwde
cmp
aas
adc
dec
aad
inc
add
test
cmps
pop
inc
iret
cmc
push
and
adc
inc
inc
inc
in
xor
aas
imul
lea
cli
pop
adc
mov
jmp
lahf
inc
out
adc
cmp
shl
icebp
add
xor
sub
repz
es
or
dec
adc
xlat
fist
pop
ret
fwait
adc
pop
push
cmp
xchg
pusha
sti
cmp
imul
xor
lds
shl
mov
cmp
sbb
mov
stos
push
xchg
push
int
leave
dec
sar
pop
and
pushf
cmc
push
and
int3
out
popa
or
dec
outs
cdq
xor
sbb
test
inc
shl
jo
adc
aaa
or
and
(bad)
movs
popa
pop
xchg
or
ret
push
sub
outs
es
adc
not
ret
ins
ror
and
mov
add
pusha
inc
lds
mov
mul
mov
mov
ins
pop
mov
xchg
movs
aaa
add
add
add
nop
aad
and
xor
arpl
ja
sti
loopne
jp
pop
push
add
inc
xor
das
xlat
jg
mov
push
inc
adc
mov
pop
add
adc
push
sub
retf
and
pop
js
add
aaa
imul
fwait
jno
mov
test
and
leavew
xor
adc
cmc
cwde
push
dec
mov
dec
call
lods
call
push
dec
mov
mov
jg
xlat
leavew
xchg
sbb
dec
call
inc
movs
js
xor
les
push
dec
mov
loop
inc
sub
xor
inc
aad
lds
xor
pop
icebp
leave
sub
imul
out
fwait
cmp
jge
mov
inc
xchg
mov
add
mov
(bad)
test
nop
adc
mov
leave
xor
sub
imul
push
add
dec
scas
adc
xor
js
add
xor
jo
push
push
push
adc
data16
sub
dec
sysret
push
or
add
inc
shl
inc
inc
mov
bound
aaa
pop
xchg
adc
icebp
(bad)
mov
inc
cwde
xor
and
bound
das
hlt
fisubr
adc
daa
pop
inc
int3
sbb
fwait
cmc
punpckhbw
and
inc
lea
sub
push
mov
fs
outs
scas
add
fisubr
retf
dec
loope
pop
adc
pop
cmc
mov
mov
sub
adc
fs
jnp
sub
xor
stc
xor
sbb
cmc
jnp
adc
mov
sbb
pusha
mov
aam
adc
aad
mov
sbb
jmp
xor
inc
jge
in
call
mov
or
mov
fst
test
pop
inc
pop
stos
out
pop
xor
mov
jns
aam
mov
rol
sbb
es
int
and
ja
mov
jae
das
add
pop
dec
push
jmp
and
sub
adc
test
pusha
and
inc
sub
fnstenv
cmc
mov
pop
inc
push
adc
jmp
and
sub
cmps
inc
jmp
and
or
mov
xor
push
and
fwait
jno
shl
xor
jmp
sbb
add
sub
sbb
sbb
test
pop
sub
inc
mov
aaa
adc
ret
mov
outs
xor
and
xor
in
fldenv
mov
jg
fstp
movs
data16
jnp
aad
out
mov
inc
and
rcl
cwde
out
pop
outs
add
outs
in
xor
sub
xchg
lods
sbb
xor
cdq
data16
and
add
inc
outs
dec
cmp
inc
aas
add
icebp
xor
add
xor
ret
retf
retf
xor
lds
xor
repz
retf
mov
xor
adc
int3
xor
sub
test
or
dec
xlat
repz
std
movs
mov
inc
dec
adc
push
cmp
dec
inc
pop
inc
lods
or
retf
adc
test
xor
lods
push
aaa
mov
fs
jnp
add
hlt
pop
aas
jecxz
or
sbb
xor
sbb
and
jmp
movs
mov
sub
pop
push
xchg
add
std
das
les
xor
xchg
adc
inc
xchg
shr
(bad)
pop
fldcw
push
or
dec
mov
cmp
aaa
mov
inc
pop
sub
cwde
inc
shr
xor
cmp
mov
add
pusha
push
xor
rcl
les
jge
xor
adc
xor
aaa
xchg
xor
cmp
mov
popf
inc
sub
adc
(bad)
mov
sbb
sub
mov
mov
fwait
scas
das
mov
and
xchg
gs
xlat
pusha
push
add
add
push
loope
fldcw
out
or
lods
gs
add
push
sbb
add
xchg
popa
mov
imul
sub
imul
cwde
add
pop
sbb
mov
cwde
lock
xor
pop
jecxz
or
add
and
jmp
and
pop
and
add
sbb
cmp
in
xor
sub
inc
ficomp
xchg
scas
repz
xor
xchg
pop
popf
pop
xchg
sbb
pop
jno
xor
and
and
movntq
jae
inc
mov
pushf
add
xor
fldcw
and
or
stc
js
sbb
or
imul
(bad)
or
inc
pop
mov
pop
adc
call
int
test
add
push
daa
cwde
xor
adc
arpl
test
pop
or
sub
daa
mov
rol
push
add
inc
mov
(bad)
mov
xchg
push
xor
daa
in
inc
int3
or
sub
pop
cwde
xor
cmp
xchg
popa
mov
mov
sub
cmc
add
ret
loope
mov
pop
popf
test
leave
inc
xor
xor
adc
jnp
mov
and
pop
xor
bound
jg
sub
es
mov
adc
push
add
lahf
jge
adc
popf
jmp
jae
mov
rcr
jp
test
mov
pop
sub
ficomp
cmc
dec
addr16
adc
ret
mov
inc
ret
adc
fbstp
push
dec
sub
add
sar
js
sub
popf
scas
adc
mov
and
out
xchg
adc
data16
push
mov
out
mov
and
jns
add
fs
inc
xchg
xor
jmp
movs
popa
inc
leave
and
xchg
mov
sbb
push
xor
adc
enter
push
xor
xor
pop
out
and
int3
and
mov
or
mov
dec
lds
push
add
aaa
hlt
pop
xor
ja
add
popa
daa
inc
fs
sub
cmp
jg
fidiv
cmp
and
and
and
and
mov
mov
push
adc
mov
std
mov
adc
adc
xor
(bad)
fwait
jg
pop
scas
pusha
push
(bad)
(bad)
xchg
test
dec
jecxz
sub
das
pop
or
push
pandn
jnp
and
or
test
and
(bad)
xor
add
popa
addr16
jmp
clc
add
stos
bound
fnstenv
push
xchg
push
shl
inc
idiv
add
out
jne
cmc
aaa
arpl
and
dec
sub
mov
(bad)
pusha
rcl
loopne
jg
mov
int
inc
mov
inc
loopne
mov
mov
pusha
ret
sbb
dec
retf
out
xchg
in
add
cmc
int
test
xchg
and
pop
jae
test
add
arpl
cmp
pop
add
frstor
je
mov
test
sub
add
push
pop
mov
cwde
in
xchg
adc
sti
(bad)
fwait
inc
xchg
jns
rol
push
and
and
xor
lds
xor
add
dec
cmc
xor
push
adc
int3
dec
push
inc
xchg
(bad)
fiadd
loop
test
push
xor
adc
adc
retf
arpl
int
dec
push
(bad)
fld
inc
xor
mov
pop
call
rol
ins
push
jg
rcr
rcr
jmp
push
(bad)
sbb
popa
xlat
iret
inc
inc
retf
add
aas
add
cmp
sbb
dec
add
bound
jno
test
xchg
scas
jmp
inc
cmc
add
push
xchg
push
shl
pop
inc
pop
or
mov
cmc
xchg
jnp
shl
mov
sar
leave
and
shl
cmp
add
pop
movs
push
add
mov
mov
getsec
xor
mov
push
sub
ret
leave
and
push
int
jmp
mov
popf
nop
test
stos
pusha
push
in
xor
xor
mov
xchg
or
push
mov
movs
frstor
xor
std
push
fistp
retf
loop
repz
test
dec
push
mov
sbb
or
xor
pop
mov
or
call
and
xor
mov
or
(bad)
imul
cwde
push
outs
or
mov
inc
mov
int3
fidiv
add
add
xor
or
mov
push
dec
inc
int
mov
push
(bad)
xlat
sti
add
leave
mov
add
data16
les
pop
push
sti
pop
int
gs
aad
pop
xor
outs
ss
icebp
jne
ror
addr16
and
xor
xor
pop
mov
pop
std
in
or
pop
and
stos
xchg
mov
scas
rol
int3
jl
jmp
xchg
sub
fisttp
shl
retf
add
xor
imul
(bad)
mov
das
cmp
(bad)
xchg
push
and
js
mov
pop
cmp
push
das
pusha
ror
pusha
shl
fisub
mov
fldcw
inc
sub
push
aad
inc
sub
inc
add
or
mov
int
jl
or
and
pop
xor
mov
rcl
inc
mov
jge
cwde
xchg
adc
retf
mov
cwd
in
imul
add
add
js
pop
mov
lods
iret
xor
or
fistp
ret
mov
or
and
cmp
loopne
mov
call
and
inc
(bad)
cmp
inc
cmc
xor
or
lahf
popa
sbb
xor
ss
gs
lods
inc
jnp
rol
pusha
sbb
inc
stos
pop
lods
and
nop
xchg
jae
and
shl
adc
call
dec
xchg
add
nop
or
or
add
push
add
leavew
aad
arpl
lods
and
(bad)
jnp
mov
cwde
adc
cmp
lods
stos
test
aaa
stos
dec
or
and
sub
mov
xor
rcr
outs
ret
icebp
les
cmp
sub
inc
pop
aas
pop
inc
inc
cs
sbb
pop
sbb
or
push
adc
test
pop
jmp
stos
push
pcmpgtd
rcr
fwait
inc
(bad)
ins
push
int
ror
sbb
test
mov
jmp
sub
aaa
lds
fimul
inc
test
or
iret
pop
popf
aad
or
and
and
test
sub
inc
jge
add
xor
add
dec
pop
or
leave
test
call
sbb
inc
jg
inc
or
movs
sub
cmp
test
imul
push
xchg
(bad)
shr
data16
fs
lds
or
sub
in
or
test
test
sbb
and
or
sub
dec
mov
arpl
and
mov
int
pop
adc
lahf
das
xor
xor
sub
data16
addr16
xor
cmp
frstor
mov
aaa
mov
adc
xor
mov
fidiv
mov
cmc
xor
popa
inc
lahf
xchg
out
js
data16
shl
pop
xor
call
xor
mov
stos
push
shr
icebp
or
sub
popa
int3
mov
sti
xchg
es
stos
adc
and
push
adc
cmp
adc
adc
inc
xchg
mov
cmc
(bad)
movs
pusha
and
push
ret
inc
xchg
retf
in
xchg
sbb
addr16
fisub
lea
push
sub
push
xor
sbb
test
xchg
shr
xchg
hlt
add
arpl
push
inc
sub
add
and
dec
call
les
push
add
hlt
and
pop
sbb
test
dec
lahf
adc
xor
cdq
mov
sar
add
popa
xor
or
out
and
inc
jp
ret
aas
jmp
sub
dec
jbe
push
add
gs
push
mov
pusha
xchg
repz
adc
aad
cmp
and
xchg
add
daa
jg
xchg
ror
(bad)
fwait
shl
aad
adc
or
stos
xchg
add
out
adc
sbb
add
adc
mov
or
aas
cmc
dec
adc
pop
dec
adc
mov
cmp
sub
aas
inc
sub
inc
add
inc
retf
pop
add
lods
idiv
xor
fs
adc
or
sbb
inc
mul
out
data16
add
xor
sub
mov
icebp
push
adc
xchg
inc
mov
imul
shr
aad
inc
inc
mov
push
xchg
fild
xor
dec
enter
das
aaa
xor
ja
mov
mov
nop
repz
in
adc
add
popf
scas
adc
inc
add
jne
retf
sub
in
inc
adc
popa
lods
adc
pop
pop
shl
and
mov
sbb
add
inc
wbinvd
ror
(bad)
fst
push
mov
aam
dec
add
mov
pop
addr16
add
xchg
dec
daa
or
inc
cmp
inc
outs
mov
dec
mov
lds
xor
aad
test
dec
dec
js
push
push
mov
xor
cmp
jno
add
and
xor
imul
xor
jmp
sbb
jbe
or
mov
adc
pop
mov
sbb
sub
jno
shl
lds
mov
sbb
sar
aaa
aam
mov
test
add
xchg
xchg
mov
xor
dec
js
mov
imul
inc
mov
sub
push
pop
imul
or
cdq
sbb
jnp
xor
xor
and
mov
loop
nop
xchg
push
mov
or
jno
add
adc
in
pop
push
push
dec
sub
xor
ror
and
(bad)
xchg
shr
out
cmc
xchg
adc
pop
xchg
test
jmp
aaa
jne
xor
cmp
and
mov
jp
leave
mov
js
nop
sbb
in
das
or
mov
inc
dec
inc
xchg
movs
pop
adc
mov
retf
mov
(bad)
dec
pop
icebp
sub
es
imul
xchg
xchg
adc
xchg
ins
les
adc
jmp
lods
and
xor
inc
mov
pop
ret
adc
test
jge
jns
fimul
sbb
adc
adc
call
int
adc
sub
adc
xchg
jg
mov
xor
inc
pop
mov
imul
mov
nop
xor
mov
fwait
push
and
adc
add
das
(bad)
mov
fwait
xchg
stos
in
pop
adc
or
arpl
int3
data16
inc
mov
dec
or
or
retf
or
lods
sbb
pop
jne
dec
mov
xor
call
dec
sub
jns
xor
inc
ret
sbb
pop
int3
xchg
jg
fst
aam
adc
xor
pop
daa
movs
xchg
rcr
add
scas
inc
push
mov
jmp
inc
out
iret
xor
or
add
call
pop
inc
inc
inc
aas
add
cwde
test
mov
fldenv
add
and
or
xor
sbb
and
jae
pop
das
cwde
sbb
inc
pop
push
or
fild
mov
dec
cmp
push
inc
sbb
sub
xchg
ror
sub
adc
es
add
add
mov
mov
or
arpl
ret
push
sbb
mov
aaa
das
jmp
pop
das
lods
call
push
sub
adc
cwde
lds
jno
mov
pop
int3
add
pop
or
mov
and
push
mov
aas
ret
call
out
adc
and
neg
jnp
lds
cmp
adc
outs
and
xchg
add
add
or
xor
std
and
lods
pop
aas
shl
push
or
adc
add
daa
lods
pop
aam
stos
inc
mov
or
adc
add
loope
shl
xor
test
xchg
and
dec
add
popa
sbb
xor
lahf
pop
pop
or
cmp
pop
nop
mov
sbb
outs
shr
inc
fld
jne
sbb
xor
dec
and
add
push
(bad)
gs
(bad)
sbb
lock
xchg
dec
hlt
adc
add
xchg
cmp
stc
arpl
inc
xchg
or
movs
push
cmc
or
stos
add
arpl
mov
sub
jne
or
mov
popf
push
ror
mov
ror
push
sbb
or
pop
add
and
xor
pop
and
or
aaa
imul
xchg
add
pop
jecxz
and
dec
push
push
inc
add
adc
xor
jae
add
cmc
sub
adc
jecxz
fld
adc
dec
jmp
ja
sbb
add
bound
xchg
push
mov
add
push
jno
add
add
lods
sub
ret
bound
cmp
mov
mov
shl
sub
loope
jmp
(bad)
(bad)
jecxz
stos
jp
push
or
or
jmp
sub
or
xor
fist
mov
rol
or
movs
outs
test
jg
add
aad
sbb
add
jp
adc
xor
push
pop
ja
push
das
or
sub
add
test
pusha
mov
pop
jmp
add
gs
jno
das
stos
add
inc
inc
adc
retf
inc
jno
dec
and
cmc
and
xchg
sub
cmp
outs
pop
jecxz
mov
leave
xor
pop
out
fld
and
add
cwde
popf
fisttp
adc
xor
ss
or
mov
add
loop
mov
ja
jnp
push
xor
adc
ja
sbb
and
daa
lock
pop
adc
ins
cmp
push
lds
sub
push
jne
aad
sbb
add
cmps
push
mov
xchg
jne
ins
popf
sbb
outs
dec
jne
cmp
adc
jecxz
jmp
inc
jp
dec
or
popf
das
aaa
arpl
and
repz
movs
sbb
mov
jns
dec
mov
outs
sbb
sbb
sbb
adc
and
mov
dec
or
xchg
push
push
mov
lahf
aas
cmp
jp
clc
add
xor
outs
stc
dec
bound
aad
and
mov
aaa
jmp
push
xor
aad
pop
or
pop
add
sbb
xlat
popa
out
and
push
fst
stos
and
mov
shr
outs
fs
ja
adc
dec
and
add
push
sub
sub
sub
pop
int
mov
loope
mov
add
dec
mov
fbstp
inc
xor
(bad)
movs
xchg
add
lods
vmovdqa
les
out
push
adc
outs
sbb
add
and
adc
aas
out
add
(bad)
(bad)
push
adc
and
sbb
and
mov
xchg
add
inc
mov
push
mov
jae
adc
sub
div
add
mov
add
add
pop
shl
adc
inc
fwait
shr
lock
jbe
(bad)
xchg
dec
inc
mov
(bad)
jns
dec
jo
xchg
mov
push
cmps
jecxz
imul
add
cmc
mov
and
mov
ss
sbb
dec
pop
pusha
pushf
pusha
shr
push
xlat
scas
mov
(bad)
push
inc
dec
jp
out
in
inc
cmps
dec
sub
sbb
mov
or
adc
sbb
or
mov
add
xchg
mov
add
mov
imul
mov
lods
lods
xchg
adc
fisttp
aaa
add
jnp
jge
mov
aaa
arpl
test
xchg
push
mov
and
ja
cwde
adc
mov
and
cdq
retf
cmovae
add
enter
js
sbb
and
adc
or
inc
nop
add
xor
test
pop
mov
or
fwait
imul
mov
add
dec
ret
sbb
and
loope
enter
(bad)
or
pop
xor
dec
cmp
test
sub
add
add
and
mov
and
int3
js
mov
inc
(bad)
pop
mov
and
mov
jg
add
adc
push
xchg
adc
loope
mov
adc
and
add
cmp
inc
xchg
shl
inc
pop
nop
outs
or
ja
out
xchg
inc
mov
lods
and
mov
and
sbb
std
sub
and
pop
add
out
mov
pop
or
inc
jo
or
add
mul
ja
jnp
shr
push
int
adc
(bad)
and
or
das
sbb
call
sub
enter
pop
inc
and
or
adc
add
cmp
rol
xchg
add
fwait
mov
pusha
sbb
and
les
xor
ss
arpl
mov
xchg
or
arpl
scas
outs
pop
mov
add
xchg
cmc
sti
mov
lods
sub
das
push
and
call
movq
dec
inc
add
or
adc
pop
add
push
(bad)
jne
ror
xchg
mov
popa
lahf
xchg
push
mov
xchg
cs
scas
jp
jnp
test
sbb
ja
and
pop
inc
dec
add
(bad)
xchg
xchg
scas
xchg
in
or
mov
sbb
imul
dec
sub
xchg
js
cwde
xchg
cmp
aad
xchg
push
(bad)
xor
xor
pop
mov
or
inc
jae
add
pop
mov
xor
shr
stos
lock
xor
mov
adc
in
cmp
imul
mov
cwde
xor
inc
mov
mov
ja
mov
xor
xor
and
inc
fwait
sbb
pop
inc
mov
fsubr
inc
ins
pop
lds
push
xor
mov
add
and
shl
add
test
xchg
mov
dec
scas
sbb
stos
(bad)
in
movs
xchg
push
fst
mov
das
std
retf
cmp
addr16
and
or
or
es
cmp
leave
stos
pop
sbb
push
dec
push
xor
add
mov
int3
xor
das
test
add
pavgw
push
pop
xchg
xor
pop
mov
xor
adc
and
sub
sbb
pusha
and
mov
dec
test
jns
add
or
xchg
dec
repz
and
bound
icebp
imul
xchg
mov
gs
jp
adc
mov
mov
adc
out
mov
retf
or
test
fmul
out
jmp
or
inc
inc
or
adc
xor
ret
retf
mov
jg
adc
loopne
and
jno
adc
jno
cwde
mov
jg
pop
aad
add
(bad)
or
or
inc
add
or
cvtdq2ps
mov
bound
xchg
shl
fist
pop
and
test
int
aaa
aas
dec
adc
(bad)
xstore-rng
cmps
pop
adc
or
mov
mov
or
add
adc
xor
cmp
inc
out
jecxz
cwde
mov
sbb
xor
inc
or
inc
push
imul
and
inc
or
or
fs
xor
aas
js
mov
test
push
loope
push
outs
add
jns
retf
sbb
aaa
push
add
popa
dec
sbb
xor
adc
mov
pusha
inc
adc
stc
dec
sar
mov
leave
and
or
(bad)
neg
mov
sub
pop
push
xor
jne
dec
inc
xchg
adc
mov
cmp
adc
sub
mov
pop
in
sahf
add
aaa
pop
in
mov
fs
retf
ret
cmp
and
fist
cmp
xor
push
add
retf
and
adc
pop
xor
sub
std
jmp
ja
mov
add
dec
add
ret
mov
xor
ret
xlat
sub
push
jge
sub
mov
dec
add
xor
call
xor
test
add
je
fdiv
push
xor
and
inc
outs
xchg
adc
and
cwde
adc
cwde
fild
sub
sub
add
les
inc
pop
in
add
js
cmp
xchg
dec
loopne
jnp
cmp
add
stos
dec
jg
push
(bad)
adc
and
xor
mov
sub
loop
mov
and
shl
or
std
xor
add
mov
sbb
sbb
ret
cmps
bound
shl
sbb
or
fisttp
sbb
xor
sub
(bad)
sub
push
push
push
xor
xor
mov
adc
jmp
dec
jns
lea
push
pop
ja
jbe
xor
sbb
mov
ins
fstp
pop
sbb
mov
ss
sub
push
gs
pop
(bad)
mov
xor
aaa
aas
(bad)
pusha
dec
xor
xor
stos
sub
dec
mov
test
sbb
or
mov
mov
ss
push
xchg
xor
jno
mov
mov
and
mov
or
test
push
sbb
inc
add
push
ja
aaa
nop
xchg
xchg
sbb
cmovns
push
(bad)
imul
mov
out
call
add
retf
loop
xchg
mov
dec
pusha
je
xor
popa
and
shl
ss
cmc
mov
stos
xor
xor
ss
es
ret
sbb
cmp
mov
inc
sub
push
repz
adc
jns
std
loopne
movs
pusha
xchg
daa
mov
fs
xchg
test
dec
push
xor
inc
retf
gs
dec
(bad)
fwait
aad
inc
sbb
push
int
and
or
and
mov
call
shl
ret
addr16
xchg
mov
sbb
inc
aas
cmp
fld
and
popa
les
idiv
ror
sbb
inc
mov
shl
es
test
test
adc
lods
xchg
dec
cwde
xchg
cdq
mov
xchg
add
pop
xor
inc
bound
add
cmp
xchg
pop
push
rcr
lahf
pop
jo
and
or
scas
xor
xchg
stos
push
xor
in
loope
daa
dec
push
(bad)
push
or
or
outs
pop
add
les
aad
and
fsubrp
sbb
fnstenv
outs
aas
sbb
fiadd
sbb
pushf
mov
jo
pop
mov
add
pop
inc
dec
call
sub
add
popa
loop
sub
mov
adc
data16
push
rcr
adc
aaa
dec
add
nop
lods
popa
aaa
mov
xchg
(bad)
aam
xchg
or
dec
push
push
adc
ror
pop
aaa
mov
icebp
push
jb
ret
or
sbb
(bad)
mov
inc
test
xor
movs
pop
inc
sub
adc
int3
xchg
add
ja
and
cmp
add
adc
push
mov
add
add
rol
add
loopne
dec
icebp
dec
mov
cs
fwait
xchg
iret
test
adc
popa
push
cmc
xchg
sti
sub
adc
stos
dec
in
stos
push
std
push
dec
and
or
cmp
or
inc
gs
ret
add
movs
lods
ja
test
inc
dec
stos
arpl
pop
dec
unpckhps
xchg
mov
push
jnp
inc
xchg
movs
and
aam
push
and
fisttp
adc
inc
xor
rol
xchg
retf
push
push
stos
lods
sub
xor
adc
cmp
call
sub
ss
mov
xor
sub
jmp
jecxz
aaa
and
aad
dec
jno
int3
js
sbb
lea
pop
mov
jae
pop
ins
add
push
daa
adc
xor
lds
mov
imul
jmp
inc
sub
cmp
mov
xchg
add
or
push
std
push
xchg
sub
arpl
mov
mov
xchg
dec
sbb
inc
push
arpl
xchg
push
(bad)
fistp
retf
pop
sub
inc
int3
cmp
inc
inc
mov
adc
cmp
fwait
das
imul
xchg
sbb
mov
cmc
out
adc
xchg
adc
dec
or
and
push
adc
aad
jmp
pop
and
ret
retf
int3
fcmovnu
mov
aaa
leave
xor
aad
stos
xor
mov
stos
std
(bad)
int3
xchg
jns
test
ror
and
dec
push
jge
add
bswap
and
inc
add
mov
movs
mov
fwait
push
mov
sbb
push
int3
in
push
pop
or
or
adc
add
or
les
jmp
xor
shr
mov
dec
xchg
mov
pop
jnp
or
icebp
mov
add
or
nop
inc
adc
adc
dec
inc
add
std
and
(bad)
mov
sbb
xchg
sub
xor
in
(bad)
movs
jmp
pusha
neg
andnps
mov
mov
or
and
ins
mul
pop
jnp
pop
ret
stos
ret
ins
mov
sbb
add
retf
call
stc
inc
dec
loop
dec
mov
dec
add
sbb
sub
(bad)
xchg
push
int
loope
outs
and
sbb
in
cmps
inc
mov
and
xchg
push
dec
mov
mov
push
dec
cwde
adc
xor
imul
std
push
dec
add
sub
dec
fwait
or
outs
(bad)
out
mov
dec
test
sub
xlat
xchg
in
xchg
div
imul
or
pop
or
shl
adc
and
add
cwde
dec
inc
aaa
sub
test
sar
xchg
pop
ja
and
sbb
pop
xlat
aaa
dec
(bad)
jmp
add
xchg
adc
adc
cmp
dec
xchg
jae
xor
xor
test
sbb
nop
jnp
or
aad
jns
mov
add
mov
stos
pusha
and
sub
jno
inc
sbb
jo
stos
ror
add
ins
inc
mov
inc
xor
pop
xor
pop
and
into
add
or
add
data16
adc
fcomip
fisttp
jne
(bad)
cmps
arpl
or
mov
pop
add
ja
and
(bad)
(bad)
movs
pop
mov
pop
mov
sbb
inc
add
cmp
and
pop
add
xor
mov
mov
dec
or
inc
and
fadd
and
or
mov
add
sub
sub
xchg
lock
cmp
inc
pop
pop
mov
test
xchg
in
dec
cmp
pop
add
out
rol
or
hlt
add
add
loopne
adc
cwde
inc
jmp
in
push
ja
daa
jecxz
cmp
xor
sbb
and
mov
shl
or
movhps
pop
loope
mov
sub
add
inc
and
(bad)
ja
adc
xor
mov
or
add
sbb
inc
mov
xor
mov
push
out
nop
mov
push
ins
int
inc
mov
das
pop
sbb
or
popf
pop
adc
mov
push
lds
fld
lahf
xchg
add
sub
adc
test
push
ja
out
dec
dec
inc
pushf
cmp
jns
add
add
or
cs
test
in
pop
out
in
xor
out
or
cs
addps
movs
sbb
popf
xor
stos
gs
in
mov
popf
push
ja
or
sub
das
jg
retf
or
int3
test
xor
mov
xor
pushf
adc
mov
add
leave
loopne
in
mov
enter
xor
das
aas
xchg
mov
or
dec
ret
pop
or
jg
ret
add
xlat
xchg
out
or
pop
sbb
inc
addr16
stc
mov
out
sbb
sbb
in
sub
mov
fincstp
lahf
and
and
or
or
out
out
sbb
mov
jne
not
add
imul
xor
and
adc
icebp
fidiv
das
push
xor
mov
xchg
jge
and
sub
xchg
or
fistp
inc
adc
xchg
xor
icebp
pop
mov
jbe
enter
cmps
mul
out
xor
dec
dec
(bad)
imul
xlat
mov
xor
out
dec
push
in
xchg
and
test
out
cmp
add
or
xchg
adc
inc
iret
push
xchg
xor
ror
xchg
iret
int
rol
iret
imul
and
jbe
lods
imul
inc
icebp
out
ds
mov
xor
imul
pop
mov
repz
inc
cmc
inc
push
or
mov
cmc
xchg
int
popa
ret
push
xchg
mov
loope
add
imul
xchg
nop
dec
sub
rcr
inc
pop
cmc
adc
add
add
inc
cmc
jge
inc
push
retf
cmc
iret
mov
retf
add
pop
sub
or
in
and
test
xchg
int
sbb
inc
ss
int3
add
dec
aaa
aaa
popf
scas
outs
add
ret
dec
lods
or
push
scas
scas
ret
xor
add
fst
stos
xchg
mov
not
and
sbb
sbb
stos
xchg
xchg
je
sub
imul
int
fstp
aaa
xchg
xor
pusha
add
and
pop
pusha
inc
add
push
add
mov
adc
lods
cmp
sub
out
inc
lahf
out
mov
cmp
adc
test
daa
sbb
(bad)
mul
add
shl
pop
add
push
rcl
jae
mul
addr16
dec
js
xchg
out
aas
pop
jbe
div
jg
aaa
sub
xor
add
lods
cmp
pusha
pop
test
test
inc
add
arpl
out
sub
movs
pop
jbe
arpl
adc
out
fistp
push
adc
xor
pop
neg
aas
add
or
lods
ror
popf
xchg
int
(bad)
jne
in
jo
and
mov
mov
test
inc
xor
sbb
das
jns
or
xlat
mov
or
push
mov
popa
not
idiv
ss
mov
inc
iret
push
or
leave
inc
addr16
adc
rcr
iret
inc
or
xor
cmp
dec
iret
inc
adc
shl
xchg
inc
popa
lods
mov
cmp
test
mov
mov
sbb
add
sbb
inc
sbb
xor
add
add
add
add
mov
aam
ja
jnp
in
int
add
sub
adc
add
sar
jge
retf
repz
push
add
cmp
push
fwait
pop
add
or
call
push
add
mov
or
and
xor
movs
in
xor
push
nop
bound
jmp
leave
cmp
sub
or
xchg
add
retf
mul
add
or
push
or
jnp
cmp
add
stos
cwde
xor
outs
xchg
das
mov
mov
xchg
xor
or
sbb
mov
push
aaa
cmps
pop
add
push
fsub
and
xor
inc
inc
push
xor
js
or
mov
push
sbb
cmp
cwde
adc
mov
inc
imul
dec
xchg
push
inc
hlt
mov
mov
stos
xlat
lds
jmp
inc
loope
movs
jmp
xor
dec
pop
aaa
or
inc
inc
sar
inc
pop
jmp
fs
std
mov
and
jnp
ja
pusha
outs
cmp
mov
es
inc
sbb
pop
and
arpl
adc
and
cmp
xor
(bad)
stos
xor
dec
aad
sbb
inc
mov
or
pop
movs
loop
out
aaa
ja
scas
ja
in
fwait
inc
in
jo
mov
add
xor
xor
xchg
outs
aad
or
and
xchg
gs
inc
xor
or
inc
sbb
mov
cmovge
loope
jno
mov
call
xor
mov
fs
int3
and
push
dec
adc
mov
js
jnp
jecxz
xor
push
dec
push
push
and
(bad)
aad
inc
popa
inc
fld
mov
mov
or
jnp
and
sub
addr16
mov
add
or
push
sub
call
arpl
push
xor
add
loopne
iret
sbb
inc
rcr
test
gs
or
test
out
mov
mov
lock
adc
lds
mov
push
outs
dec
frstpm(287
add
clc
push
pop
imul
add
call
inc
dec
ja
daa
mov
xor
xchg
je
adc
shl
cmp
call
xor
leave
loope
mov
pop
rcl
xor
loope
inc
daa
call
imul
adc
or
gs
(bad)
leave
add
js
loope
mov
push
cmc
inc
pop
or
xor
or
rol
icebp
sar
push
int
dec
mov
jg
cmc
cmp
jnp
xlat
mov
mov
push
mov
and
inc
(bad)
aaa
ret
or
out
xlat
fwait
adc
imul
push
xor
(bad)
inc
shl
es
arpl
xor
mov
ret
out
add
pop
or
fwait
int
or
fild
fcomi
jnp
cwde
lock
push
scas
mov
adc
mov
pop
inc
mov
xor
push
shr
adc
xchg
cdq
mov
or
hlt
stos
dec
or
or
jecxz
adc
inc
dec
sub
dec
lock
adc
mov
scas
xor
push
imul
or
or
sbb
add
mul
inc
jmp
mov
add
xchg
ja
sub
adc
outs
dec
add
lods
or
gs
pop
inc
nop
stos
ja
inc
inc
and
pop
push
es
add
inc
aaa
pop
cmp
gs
adc
xchg
mov
rol
jecxz
ins
ret
mov
je
xor
inc
sub
adc
or
or
popa
fisub
ja
sbb
daa
or
pop
sbb
cmc
pop
jge
mov
lahf
sbb
jg
push
xchg
sbb
movhps
fimul
sub
sti
push
outs
push
xchg
psrlw
adc
scas
dec
adc
fs
adc
in
jnp
push
adc
adc
xor
repnz
out
adc
sbb
inc
out
inc
mov
add
inc
pop
jp
or
fld
xor
dec
push
xor
jg
pop
popa
push
or
xor
ret
or
sub
dec
daa
sbb
sbb
pop
mov
ficom
add
sbb
test
stos
sbb
mov
mov
sbb
dec
fsubr
xor
ret
movs
ret
xor
mov
xchg
inc
mov
or
int
xor
mov
xchg
xchg
pop
mov
loopne
push
aad
test
jno
push
cdq
jne
or
hlt
div
inc
or
int
mov
cmp
lea
lods
or
xor
or
sub
mov
int
add
(bad)
int
dec
jo
movs
and
aam
cmp
in
inc
mov
and
out
lods
sub
pop
push
int
push
xor
sbb
mov
test
pop
fistp
mov
imul
dec
rcr
mov
inc
mov
daa
mov
xchg
jp
xor
push
and
cmp
add
xor
push
sti
ins
and
shl
and
xchg
movs
and
fst
in
add
fs
inc
arpl
int
push
adc
int
jns
inc
xor
and
xor
or
jne
icebp
xor
xor
inc
imul
js
jg
xor
fidivr
pop
inc
push
jmp
inc
lahf
jmp
aaa
jge
div
std
dec
jge
es
sub
pop
add
arpl
dec
inc
scas
std
test
hlt
and
mov
jnp
sub
dec
xor
out
inc
add
pop
(bad)
xor
outs
aas
lds
or
xchg
ror
lods
div
mov
xor
in
out
or
cdq
and
inc
mov
xlat
mov
movs
addr16
sub
js
cmp
loop
jnp
inc
nop
mov
and
faddp
cmp
mov
(bad)
sbb
(bad)
dec
add
dec
das
jmp
dec
jmp
add
dec
dec
inc
xchg
fwait
outs
es
and
mov
mov
push
sbb
push
neg
cwde
adc
and
adc
dec
jp
push
cmc
test
mov
pop
rcr
test
outs
repz
fsubrp
pop
or
add
xchg
lods
sbb
xchg
out
out
ss
das
add
pop
adc
xchg
imul
add
or
xchg
sub
shl
sbb
inc
jnp
es
ins
pushf
inc
shr
(bad)
inc
pusha
push
xchg
in
xchg
jo
xor
sbb
add
and
adc
aas
xor
pop
xor
adc
cmps
mov
xor
or
xchg
sbb
xchg
fwait
ss
push
and
in
shr
cmp
cmps
test
mov
mov
xchg
(bad)
dec
leave
mov
dec
sbb
xor
dec
pop
nop
lds
mov
(bad)
icebp
and
pop
inc
std
dec
jmp
sbb
cmc
xchg
add
or
cmp
add
jp
dec
or
or
cmp
mov
add
mov
retf
or
pushf
pusha
add
outs
jbe
or
imul
inc
push
(bad)
push
inc
shl
add
dec
xor
popf
sub
add
mov
mov
jmp
inc
lds
adc
and
inc
sti
fild
ret
iret
(bad)
movs
mov
aaa
cmp
jmp
add
push
or
xor
ins
jg
das
pusha
shr
ret
fwait
or
cmp
jecxz
pop
lds
add
mov
stos
adc
mov
sub
or
dec
mov
dec
idiv
fimul
add
rcr
ret
out
xchg
xchg
push
adc
jg
shl
push
xor
mov
out
inc
sub
mov
cmps
mov
xchg
push
out
add
xchg
inc
xchg
iret
jmp
dec
popf
(bad)
dec
call
mov
push
push
int3
imul
add
jno
add
xor
fnstcw
call
dec
ret
cmp
sbb
pop
add
aas
cmps
fwait
and
xor
xlat
dec
stos
data16
addr16
pop
cmps
popa
push
mov
push
dec
pusha
pop
outs
pop
push
lds
cmps
push
test
mov
adc
lea
xor
imul
jge
and
jnp
mov
dec
or
sub
jno
ja
mov
loope
lahf
push
aaa
scas
jp
mov
xchg
or
dec
cmp
cmp
inc
dec
pusha
sar
xchg
inc
xchg
dec
(bad)
not
xor
adc
ret
scas
imul
mov
xor
mov
imul
int3
cmp
inc
movs
fdivr
pop
sbb
out
dec
lods
scas
pushf
data16
bound
xchg
fistp
gs
dec
push
lock
push
inc
mov
mov
mov
mov
add
jae
dec
mov
xor
data16
gs
adc
pop
push
cmps
and
xor
inc
and
scas
repz
push
inc
leave
fwait
lds
inc
mov
mov
sub
inc
popf
or
or
cmps
push
daa
stos
dec
cli
shl
dec
pusha
mov
add
cmp
bound
mov
inc
jp
push
adc
sti
popf
push
aad
add
adc
sub
or
stos
movlps
and
leave
inc
add
adc
xor
adc
dec
sub
aad
jno
es
push
push
xor
imul
lds
sbb
or
dec
jp
or
popf
rol
mov
xor
addr16
jae
ss
adc
xor
pop
test
add
sbb
pop
pop
int
ret
xchg
add
cwde
shl
mov
lds
mov
jo
cmp
cmc
jmp
add
int
std
and
adc
ror
push
dec
and
int
mov
push
outs
adc
jno
cmp
adc
sub
sti
xor
mov
mov
and
xor
xor
(bad)
inc
shr
dec
test
jmp
mov
xchg
sub
xor
add
xor
xor
push
xor
add
mov
or
cmovb
rol
xchg
fucom
inc
sti
outs
rol
jecxz
xchg
adc
jno
adc
dec
popf
ins
scas
xchg
dec
mov
or
loope
and
pop
rol
test
dec
je
test
xlat
ja
adc
pop
leave
jmp
mul
dec
inc
pop
or
and
(bad)
fs
sub
aaa
xchg
add
pop
or
scas
ja
imul
mov
xchg
push
push
shl
xor
test
je
dec
ss
inc
leave
aaa
xor
cwde
rcr
lock
mov
add
lds
aaa
lahf
xchg
mov
ss
lock
aad
mov
pop
or
jmp
rol
inc
mul
mov
adc
test
ins
pop
jno
jg
shr
xor
dec
retf
mov
add
test
lahf
out
ror
mov
aaa
jmp
xor
add
mov
jecxz
out
or
cmp
shl
jmp
(bad)
pop
and
dec
js
popf
cmp
test
push
xor
test
inc
je
leave
sbb
xor
pop
lods
xor
dec
dec
addr16
outs
xor
pusha
leave
push
add
out
loop
and
icebp
stos
or
or
inc
xor
mov
stc
pop
adc
data16
xchg
lahf
iret
jecxz
nop
push
das
sar
cmp
push
cmp
xor
and
lea
pop
retf
ja
sbb
stos
jae
xor
lahf
stc
cmp
test
pop
fnstenv
push
mov
movs
or
adc
mov
and
and
movs
in
jns
stos
or
imul
and
sbb
and
popa
fs
popf
out
sbb
mov
ret
dec
arpl
shl
push
xchg
sub
setae
imul
inc
nop
push
ror
and
adc
inc
xchg
jp
push
pop
xor
or
(bad)
sbb
jmp
add
or
xor
add
stos
sub
xchg
xchg
and
adc
or
sbb
pop
int
nop
test
test
les
out
adc
push
or
fwait
push
scas
aas
pop
popf
xor
mov
pop
mov
in
pop
sbb
xchg
dec
add
jl
xor
lods
movs
inc
xchg
inc
icebp
mov
lock
aad
cmp
popf
ret
fmul
adc
inc
pop
pop
xor
pop
lods
jns
add
xor
repz
out
icebp
push
xchg
sbb
ret
mov
retf
sub
imul
pop
inc
dec
mov
jp
imul
xor
add
pop
inc
inc
and
xor
add
(bad)
(bad)
cmp
outs
aad
test
pop
ins
fnsave
call
xor
lods
mul
pextrw
add
es
in
inc
cdq
add
dec
bound
or
ja
sub
adc
fnstenv
xchg
mov
adc
push
stc
lds
or
pushf
dec
js
cmp
(bad)
dec
push
lds
mov
retf
add
or
ficomp
inc
dec
icebp
push
das
out
xlat
push
xchg
sub
inc
test
out
es
ror
jge
jecxz
xchg
test
push
and
inc
aaa
stos
add
xchg
aaa
jmp
adc
mul
mov
dec
int3
js
mov
aaa
cmp
imul
dec
adc
adc
pop
rcr
cmps
fnstenv
pop
jnp
test
imul
adc
imul
inc
mov
cmp
mov
and
add
xchg
xchg
js
js
int
ja
and
xor
pop
xlat
mov
int3
push
shl
dec
adc
mov
dec
add
cwde
lock
jo
lds
ins
inc
or
std
rol
sbb
call
int
add
icebp
sub
imul
jmp
lea
popa
dec
ret
dec
(bad)
gs
dec
push
shl
(bad)
retf
out
adc
movs
inc
add
and
inc
mov
and
leave
stos
adc
fbstp
ins
and
mov
inc
adc
adc
fist
inc
cmp
xchg
lahf
push
mov
mov
add
xor
inc
add
push
retf
aas
mov
out
mov
mov
xor
gs
xchg
je
test
ss
pop
sub
(bad)
fnsave
imul
jns
data16
add
js
adc
mov
test
pop
inc
das
mov
adc
xor
sbb
stos
sar
mov
stos
(bad)
xor
push
fnstenv
gs
add
pop
sbb
test
pop
pop
arpl
call
leave
(bad)
aad
daa
add
push
sub
sbb
sub
xchg
jno
mov
mov
aaa
cmc
popf
lods
bound
mov
cdq
mov
push
mov
adc
pop
test
push
sub
bts
or
sar
loope
or
cmc
or
and
add
jmp
or
(bad)
xor
add
mov
test
adc
movs
gs
mov
xlat
and
cmps
dec
fistp
mov
imul
push
mov
xchg
or
adc
cmp
popa
pusha
idiv
movs
mov
cwde
les
fdivr
psubsb
fwait
dec
mov
xor
mov
ins
dec
movs
pop
xor
xor
shl
popa
xchg
xchg
rol
stos
popa
int
ja
adc
das
xchg
mov
enter
sbb
or
xlat
pop
aaa
ja
mov
test
add
adc
add
push
test
sub
pop
mov
gs
xchg
push
adc
add
test
dec
jmp
dec
call
add
add
push
and
test
pop
add
xchg
(bad)
mov
and
imul
and
sar
push
or
push
mov
leave
add
inc
or
in
out
cmp
cmp
push
jmp
add
dec
pop
mov
out
sub
pusha
bnd
jne
inc
inc
sub
mov
jnp
cmp
inc
cmp
mov
jge
xor
adc
xchg
add
jmp
pop
dec
adc
sbb
xor
fistp
xchg
mov
or
inc
jns
or
ins
cmp
inc
aaa
pop
xor
shl
add
(bad)
movs
mov
test
jg
pusha
nop
or
cmp
and
inc
dec
aam
jae
pushf
inc
sbb
xchg
imul
adc
mul
dec
popf
xchg
mov
or
loopne
xchg
mov
push
fwait
add
lods
and
jmp
xor
inc
iret
inc
pop
adc
pushf
xchg
jno
sbb
arpl
outs
or
inc
add
scas
inc
push
out
mov
add
mov
adc
xor
push
dec
xchg
loope
mov
stc
and
add
and
add
ja
fild
data16
bound
mov
xchg
cdq
ss
les
inc
dec
add
mov
ret
pusha
ror
stc
adc
mov
xor
and
and
outs
aaa
cmovae
cmps
mov
imul
push
push
inc
cmp
ret
pop
rcl
add
mov
pop
repnz
inc
ja
inc
adc
jno
mov
push
and
sbb
adc
imul
das
mov
movs
add
add
fist
add
add
inc
imul
adc
push
or
xor
ror
fstp
mov
loope
in
mov
sar
mov
add
bound
mov
mov
outs
neg
out
pusha
shr
push
adc
adc
es
jg
add
sbb
pop
and
movs
loopne
sbb
jnp
out
adc
dec
aam
xor
sub
or
sbb
lds
mov
mov
push
mov
push
xlat
add
or
xor
pop
mov
enter
xor
push
or
xor
pop
push
mov
cmp
inc
cwde
shr
leave
jmp
psllw
push
and
mov
dec
xor
sbb
popa
enter
xor
xchg
and
mov
or
and
rcl
ins
ja
out
btr
inc
cmc
adc
fld
nop
xor
xor
xor
loop
sub
jmp
xchg
dec
jg
dec
xchg
mov
jae
pop
inc
xor
add
and
iret
and
sub
lods
or
sub
sbb
xor
int
cmp
and
aad
cdq
dec
outs
and
or
f2xm1
xchg
popa
adc
mov
neg
call
mov
adc
add
inc
adc
bndstx
mov
inc
int
mov
sbb
daa
mov
sub
cmp
mov
das
pusha
arpl
push
stos
gs
xchg
call
push
xchg
push
add
mov
mov
inc
lock
cmps
daa
stos
xor
xor
hlt
ficom
(bad)
inc
and
or
inc
xchg
in
adc
mov
adc
or
lds
mov
or
rcr
xor
and
and
jmp
lods
clc
pop
inc
sbb
xor
sbb
xchg
jmp
xor
xchg
pop
out
adc
mov
es
repz
loope
jae
sbb
iret
(bad)
in
add
xor
or
sub
push
inc
adc
sub
add
push
cmps
dec
fwait
xor
ret
imul
and
aaa
jmp
mov
ret
add
or
pop
cmp
shl
mov
adc
sub
pusha
shr
jbe
scas
push
pop
or
add
or
xchg
adc
call
stos
xchg
adc
jno
and
or
lock
shr
inc
daa
adc
lea
ins
mov
mov
ror
xor
push
repz
add
push
outs
jae
sbb
rol
xchg
test
neg
push
mov
in
cmp
inc
xchg
fwait
inc
mov
scas
std
xchg
bound
inc
push
xor
int3
xchg
idiv
sbb
stos
test
inc
or
push
xchg
data16
in
jae
retf
xor
popa
int
shl
iret
mov
inc
mov
ret
jnp
data16
icebp
aad
in
test
call
ror
sbb
sub
test
or
and
push
or
mov
inc
shl
push
add
pop
adc
and
int3
mov
xsavec
out
mov
xchg
xor
xor
(bad)
cwde
xor
mov
sbb
xchg
xchg
fwait
pop
inc
sub
gs
call
sbb
sbb
push
adc
arpl
sub
inc
xor
jmp
ret
arpl
sbb
int
or
idiv
push
push
aad
stos
inc
adc
adc
cmc
or
xchg
lods
(bad)
mov
(bad)
out
das
or
out
add
inc
mov
ret
push
add
dec
int3
mov
sub
or
aaa
dec
outs
sbb
ins
adc
stos
push
pop
in
pushf
adc
adc
cmc
adc
jno
xchg
add
and
adc
lock
cdq
dec
add
int
fist
mov
pop
pop
add
call
mov
push
rcr
push
mov
out
cmp
push
inc
dec
test
fisttp
sbb
inc
jmp
add
sub
mov
stos
(bad)
mov
mov
jae
push
popf
xchg
and
pusha
xor
sub
cwde
sbb
inc
xchg
jnp
cmp
mov
pop
add
stos
sbb
nop
adc
mov
jecxz
into
(bad)
(bad)
and
aaa
test
mov
xchg
(bad)
cwde
xor
xchg
loop
and
or
inc
jne
pop
mov
fld
stc
xor
sbb
adc
pop
jmp
aaa
imul
pop
movs
arpl
mov
adc
adc
and
and
movs
pop
cmp
das
or
dec
dec
inc
and
pop
popf
or
add
in
pop
dec
das
xchg
xchg
aaa
sub
adc
xchg
or
test
icebp
push
dec
pop
sub
mov
popa
adc
imul
shl
add
push
xor
outs
adc
sub
test
nop
inc
shr
and
or
inc
iret
cmc
and
push
xor
inc
repz
push
pushf
cwde
(bad)
push
jno
adc
add
pusha
and
mov
jmp
xor
sbb
push
rcl
pop
mov
sbb
call
scas
inc
inc
test
test
add
sar
dec
popf
inc
ja
scas
fnstcw
cmp
jne
shl
data16
aad
ror
add
(bad)
adc
sub
(bad)
fsub
xchg
es
xor
pop
sub
in
xchg
pop
push
or
dec
cmp
xor
inc
fidivr
(bad)
adc
stos
inc
add
adc
dec
pop
cld
add
and
fimul
add
adc
add
sbb
nop
dec
pop
rol
lds
push
pop
lds
outs
ret
add
mov
fidiv
push
outs
movs
pop
push
dec
pop
lock
icebp
jmp
fwait
mov
sbb
ja
and
push
outs
mov
dec
aad
lea
and
jmp
mov
adc
jmp
aaa
popa
or
mov
jge
or
xchg
adc
sub
dec
push
std
jae
movs
and
add
or
inc
int3
mov
pop
cwde
and
and
aad
pop
stc
mov
leave
dec
inc
and
mov
add
daa
inc
add
sub
dec
add
sbb
mov
push
xchg
and
mov
shl
push
leave
aaa
pop
cmps
aaa
or
ret
rcl
test
adc
cmc
mov
fs
mov
adc
rcr
out
fist
jo
mov
add
and
mov
or
push
je
pop
aaa
push
xchg
mov
adc
or
inc
xor
and
adc
cmp
nop
adc
in
pop
jge
fidiv
out
push
inc
mov
lods
in
xor
shr
inc
jne
jp
rol
popa
fwait
dec
mov
or
aaa
cmc
lds
xchg
shl
inc
and
nop
leave
sub
sub
daa
mov
ins
and
std
and
std
mov
fiadd
stos
and
icebp
sbb
mov
xchg
xor
out
push
popf
adc
or
xor
loope
xchg
sti
popf
xchg
inc
lock
xlat
sub
cmp
add
lea
or
loopne
inc
aad
xchg
mov
add
or
pop
and
pop
movs
cmp
lock
xor
loopne
and
pop
sub
fwait
mov
adc
and
jmp
sbb
jecxz
mov
xor
jge
mov
and
aad
pop
outs
inc
add
test
inc
outs
repnz
fisub
lds
push
adc
in
add
add
and
cwde
adc
sbb
add
xor
add
jmp
dec
mov
xchg
js
fnstenv
arpl
cwde
les
(bad)
pop
and
push
movs
push
push
add
loop
sbb
mov
dec
dec
or
int
and
or
aad
push
loope
xor
pop
pop
adc
jge
cmp
mov
std
out
inc
int
push
(bad)
push
jne
inc
xor
or
lds
and
sub
add
push
loop
and
idiv
mov
mov
dec
aad
ror
sbb
push
test
fld
adc
ja
or
xor
aaa
adc
or
jns
pop
mov
xchg
jmp
adc
or
sub
test
lock
inc
out
fwait
inc
scas
jnp
sti
lds
fwait
lock
(bad)
pop
cmp
adc
push
inc
mov
jne
inc
cmp
push
dec
pop
jecxz
or
and
cmp
in
lea
dec
pop
cmp
dec
leave
pop
mov
pusha
iret
xor
pop
cmp
arpl
mov
pop
ja
lods
dec
loopne
mov
sub
inc
adc
xchg
push
rol
rol
xor
push
dec
xlat
int3
mov
or
pop
adc
adc
mov
or
xor
sbb
gs
shl
adc
xchg
mov
cdq
mov
inc
jnp
clc
xchg
ins
add
add
dec
pop
add
mov
rol
addr16
xchg
scas
gs
sub
inc
jne
gs
adc
or
pop
lea
stos
pop
add
push
xchg
and
aad
rcr
sbb
daa
in
and
xchg
xchg
jae
pop
xor
frstor
ficom
push
out
mov
(bad)
rol
es
xchg
out
mov
movs
cmp
dec
stc
(bad)
mov
cmps
xor
sub
in
gs
stos
or
adc
xor
xor
call
sub
mov
pop
repz
add
add
fwait
adc
jae
fsubr
test
push
les
js
cmp
cwde
rol
shl
ror
fwait
pop
ja
ja
xor
aaa
xor
retf
cmp
das
daa
aad
push
dec
and
sbb
adc
pop
sbb
pop
push
je
inc
mov
cmp
xor
enter
dec
(bad)
cmps
add
or
pop
or
add
cmc
mov
or
sub
and
imul
shr
ja
xor
xchg
les
or
movs
ja
push
adc
sar
scas
repz
mov
dec
push
dec
cwde
aam
sub
mov
rol
xor
fninit
leave
test
fwait
sbb
add
push
mov
add
add
push
adc
(bad)
addr16
xchg
and
pusha
aam
or
add
mov
and
or
inc
leave
push
xchg
lods
gs
fstp
cdq
and
sub
adc
add
add
xchg
popf
inc
adc
xor
or
stos
fbld
add
leave
adc
lea
jmp
jns
adc
dec
add
inc
push
cmp
shl
cwde
add
stc
and
loope
adc
mov
inc
sbb
sbb
loop
cmps
stos
or
ret
xchg
inc
inc
out
std
ret
and
cmps
push
dec
add
(bad)
fabs
inc
inc
mov
push
pop
xor
js
test
and
stos
jecxz
pop
int
lds
pop
fisttp
inc
jmp
push
xor
fidivr
es
inc
addr16
add
adc
fwait
jo
sub
ret
adc
lea
mov
mov
mov
imul
shr
mov
cmp
aas
fnstcw
in
popf
or
adc
jo
sbb
fcompp
outs
fs
jno
pop
inc
pop
int
dec
dec
push
jmp
jnp
mov
shr
popf
es
es
push
pop
sbb
test
mov
fs
popa
add
xor
das
sub
cmp
cmp
push
push
inc
sub
sub
sbb
cdq
lds
and
pop
sub
pusha
push
xchg
inc
rcl
pop
mov
mov
inc
and
loope
out
pop
sub
push
and
push
and
or
xchg
adc
mov
cwde
aam
or
pop
mov
push
nop
sub
sti
mov
mov
adc
or
std
retf
and
and
rcr
nop
xor
mov
(bad)
jg
retf
add
aad
sbb
cmp
int3
push
mov
adc
ror
inc
(bad)
push
ret
pop
sbb
lock
stos
std
sbb
call
outs
fwait
mov
sub
xchg
mov
jae
out
cmp
test
mov
retf
and
inc
sbb
adc
std
imul
retf
xor
xchg
shl
fmul
pop
mov
data16
(bad)
mov
push
movs
popf
aaa
lods
fs
imul
sub
lock
imul
xchg
sbb
inc
leave
fnsave
sub
inc
addr16
ror
lods
dec
aaa
ret
add
xor
out
stos
sbb
add
add
call
ror
inc
push
aas
or
jp
dec
adc
xlat
xchg
add
mov
push
mov
mov
pop
or
pop
adc
ins
mov
xchg
in
adc
sub
inc
cmc
test
adc
inc
xchg
mov
xchg
imul
cmp
lods
sbb
jg
or
int3
ja
cmp
or
mov
xlat
xor
(bad)
(bad)
adc
pop
(bad)
fbstp
adc
adc
bound
ins
test
xchg
jge
ja
fstp
das
out
mov
retf
dec
or
jmp
mov
lods
ret
ins
out
xchg
outs
or
fs
xchg
push
pop
add
adc
and
add
dec
or
out
lds
sar
add
sub
xor
or
cwde
xor
sar
(bad)
test
cmps
pop
or
dec
call
xchg
dec
cmp
pextrw
xchg
shr
pop
or
test
sub
inc
pop
ja
sub
push
jno
dec
jmp
lods
xchg
int
sbb
push
retf
push
movs
cmovb
push
xchg
ror
sbb
arpl
jno
gs
push
call
sub
xchg
xor
leave
cmp
aas
cmps
js
mov
mov
add
lea
scas
push
xor
mov
adc
pop
xchg
sub
sub
adc
mov
dec
adc
xor
sbb
or
sbb
mov
sbb
or
fldcw
les
push
and
popa
push
daa
or
loop
mov
jmp
lods
std
sub
mov
ins
dec
sbb
or
mov
call
aaa
xchg
sti
add
push
int3
pop
ins
iret
mov
cmc
lock
mov
mov
jno
cmp
cdq
dec
add
mov
std
aaa
lods
or
ins
scas
das
repz
inc
cmps
xor
push
xor
js
inc
pop
pop
mov
arpl
mov
add
aaa
cmps
xor
add
inc
adc
inc
add
test
popa
adc
inc
xchg
mov
das
adc
nop
jmp
or
popa
aaa
scas
popf
mov
sbb
fwait
or
or
std
cmp
mov
xor
mov
imul
cmp
(bad)
inc
pop
daa
and
dec
dec
push
dec
or
repz
or
mov
push
and
fild
pop
fwait
xor
mov
xor
int3
or
outs
jno
or
and
lahf
out
stos
dec
xor
aas
cmp
xor
mov
sbb
nop
mov
pop
adc
fbld
aad
inc
ja
dec
xchg
push
int
in
retf
sbb
mov
int
mov
sbb
call
lds
out
hlt
es
cmp
pusha
aam
test
xchg
ja
lods
xchg
inc
popa
jns
sub
xchg
inc
out
cmp
and
pop
dec
inc
in
scas
out
mov
adc
sbb
dec
mov
fwait
sbb
mov
xor
aaa
inc
movs
jp
movs
not
div
push
push
les
xchg
mov
add
ja
or
pop
int
pop
and
in
fiadd
mov
sub
ins
sbb
cmps
jmp
pop
push
rcr
xor
xor
icebp
push
pop
mov
or
dec
xchg
dec
xchg
and
shl
inc
xchg
sbb
int
fnsave
int
add
dec
(bad)
out
test
xor
adc
jg
shl
repz
lods
adc
inc
xchg
lds
or
pop
xchg
xor
adc
or
popa
popf
lods
xor
inc
sub
mov
add
dec
pop
ins
int
(bad)
popa
popa
pop
xchg
pop
mov
int3
popa
fwait
push
or
adc
add
cmc
sbb
xor
cmc
adc
xor
movs
dec
sub
push
push
addr16
int
mov
mov
int
adc
nop
lds
mov
test
test
xor
movs
and
or
add
jmp
sub
daa
mov
and
or
nop
add
dec
jg
jns
sbb
mov
inc
mov
inc
arpl
and
inc
xor
xor
ss
dec
push
jno
inc
xor
pop
cmp
xor
sub
xor
xchg
ret
jae
shr
gs
jb
inc
ins
and
lods
or
imul
addr16
sub
call
sub
aaa
adc
pop
inc
or
inc
mov
xor
push
push
xchg
jecxz
adc
popf
out
xor
rcr
rcl
xor
das
fist
fwait
jne
sbb
mov
or
push
test
popa
das
out
lods
dec
adc
das
out
jg
or
or
es
pop
ja
dec
jp
iret
jns
ret
sub
sbb
inc
push
sub
or
mov
mov
fst
js
push
mov
popa
jne
push
adc
popf
test
dec
add
jbe
add
sbb
leave
add
dec
cmps
adc
jnp
jae
push
xor
cmp
dec
mov
loope
ja
mov
sahf
xchg
rol
inc
mov
add
adc
retf
pop
mov
or
les
test
mov
movs
stos
push
add
aam
inc
test
pop
aaa
dec
popa
push
out
sub
js
test
ins
jae
jae
push
pop
leave
and
xor
dec
mov
mov
push
repnz
call
and
pop
add
nop
cmp
inc
cmc
fst
div
push
push
xchg
adc
ror
mov
inc
jg
leave
fs
pop
inc
dec
cwde
adc
mov
add
xor
sbb
xor
push
add
call
test
std
push
iret
sbb
inc
(bad)
adc
int
arpl
sub
outs
(bad)
sub
iret
jne
adc
jp
mov
push
or
sbb
push
xor
ja
mov
or
jg
dec
in
or
imul
popa
jo
aad
adc
xor
push
and
add
push
xor
inc
leave
fsubrp
sbb
aas
adc
aaa
xchg
vmovntps
(bad)
jecxz
inc
cmc
xchg
add
lods
pop
mov
inc
lea
xor
ror
lods
or
lds
xor
lods
mov
mov
jge
pop
inc
int3
es
aaa
mul
push
jge
mov
xlat
hlt
adc
add
xor
pop
shl
or
xor
or
mov
and
mov
jg
leave
retf
mov
enter
inc
add
xor
rcr
mov
fwait
mov
mov
sub
das
in
mov
or
aam
pop
daa
popf
out
mov
rcl
js
pusha
push
(bad)
or
dec
stc
pop
cmp
or
imul
repz
mov
pop
pop
in
or
pop
inc
xchg
xlat
mov
inc
cmps
dec
push
mov
or
das
repz
arpl
pop
mov
ja
cwde
adc
sub
pop
loopne
mov
aad
sbb
aad
mov
adc
jg
test
test
mov
shl
cdq
mov
or
inc
push
and
pop
sbb
xor
jne
popf
pop
int
adc
sbb
loop
push
imul
js
add
xchg
xor
push
sub
add
aaa
xchg
nop
cmp
loopne
call
sar
std
das
rol
mov
dec
sub
repz
call
pop
adc
push
adc
movs
jmp
mov
ja
jae
add
mov
adc
inc
add
lods
inc
and
push
add
mov
movs
cwde
xchg
dec
std
sbb
and
ret
mov
sbb
or
faddp
sub
add
mov
leave
sbb
out
adc
and
shl
lock
pop
dec
fst
and
xchg
xor
jmp
add
lods
retf
and
push
das
sbb
(bad)
shr
es
stos
xchg
cmc
xor
shl
std
retf
pop
or
mov
xor
sub
and
push
jne
add
ins
mov
pop
and
or
or
adc
call
call
adc
xor
aam
and
mov
aaa
lods
cmp
inc
xor
stos
scas
push
pushf
loopne
sub
xor
cmc
inc
add
mov
(bad)
mul
fs
xchg
ins
mov
mov
mov
je
xor
ret
ins
dec
fist
ror
jno
and
outs
xor
mov
mov
mov
aaa
std
inc
push
mov
or
cmp
xchg
inc
fwait
(bad)
xlat
dec
loop
mov
aam
fs
dec
sbb
and
loopne
add
gs
pop
or
stos
jmp
xor
sub
xchg
js
stos
push
jae
cdq
retf
or
mov
int3
fcmovnbe
mov
aad
jmp
add
xor
add
loope
inc
add
inc
xchg
pop
das
cmp
mov
popf
push
outs
push
int3
fst
pushf
bound
outs
sub
cmp
repz
and
mov
push
cmp
sub
xor
icebp
push
mov
cwde
adc
dec
mov
jae
sub
xor
push
mov
pop
inc
or
add
push
push
add
cmp
popf
jge
dec
cmp
outs
or
add
xchg
cmp
ret
inc
adc
sub
not
call
xor
and
mov
leave
jp
sub
sub
stos
inc
ins
inc
mov
and
push
push
aam
pand
add
lods
and
inc
mov
out
push
test
mov
inc
add
dec
adc
add
adc
add
pop
leave
and
mov
mov
sub
sub
xor
inc
sbb
call
dec
mov
mov
pop
inc
add
out
loope
retf
cmp
dec
and
mov
fild
add
rcl
call
aaa
sub
push
and
repz
add
or
popa
mov
fwait
jns
jmp
pop
inc
sbb
mov
sub
xchg
add
retf
ret
jns
or
pop
punpcklwd
jl
or
or
push
nop
mov
xchg
jge
outs
push
adc
cmps
ins
adc
inc
xchg
test
std
scas
cmp
add
loope
and
stos
aas
inc
mov
push
xor
imul
bound
leave
popf
mov
and
hlt
xchg
inc
lods
cdq
daa
pop
mov
ins
dec
dec
push
cmps
adc
test
add
loope
add
cmp
fwait
repz
push
lock
add
test
pusha
push
inc
outs
inc
ret
mov
inc
int3
dec
jae
lods
test
add
(bad)
adc
and
lds
inc
nop
sub
jecxz
stos
dec
push
pop
(bad)
mov
xchg
add
bsr
pop
cmp
jb
add
and
or
lds
xchg
cmp
lods
aaa
cmp
fwait
mov
and
retf
neg
imul
mov
inc
mov
xchg
inc
xor
sbb
cmp
ret
inc
mov
add
icebp
outs
mov
cli
mul
xor
mov
repz
sbb
int
dec
jno
adc
or
pop
push
jne
and
pop
inc
and
icebp
mov
arpl
aaa
cmp
sbb
aas
sub
mov
es
test
stc
dec
pop
adc
int
mov
inc
stos
popf
dec
add
stc
add
and
adc
sub
mov
push
int3
pop
push
retf
and
cwde
rol
pop
neg
aaa
inc
sub
inc
inc
cmc
xchg
nop
mov
push
sub
aaa
cmp
mov
inc
cmp
cwde
shl
xor
dec
pop
add
lods
jns
test
or
push
mov
mov
lea
mov
dec
mov
(bad)
jmp
les
shl
mov
xor
ror
and
xchg
mov
inc
dec
adc
adc
or
div
inc
rcl
gs
nop
cmp
push
xor
cmp
xchg
xor
pop
push
pop
xor
xchg
and
push
outs
(bad)
inc
leave
dec
dec
bound
stos
inc
mov
push
loope
inc
xor
pop
jno
sbb
or
xlat
in
and
inc
pop
aaa
xchg
adc
or
mov
loope
pop
repz
pop
mov
add
iret
daa
jne
dec
or
xchg
sub
call
jg
adc
push
inc
retf
sbb
xchg
shr
inc
dec
loop
gs
pop
add
add
sbb
imul
or
leave
add
or
cmc
inc
add
dec
and
test
push
js
je
pop
pop
or
lds
sub
jns
inc
mov
nop
lds
and
dec
inc
in
aaa
fild
pusha
(bad)
mov
inc
adc
imul
pop
loope
xchg
and
js
mov
das
ja
inc
and
mov
adc
or
add
mov
or
push
pop
push
rcr
xor
mov
inc
mov
gs
xchg
inc
and
ret
test
iret
or
imul
push
int
mov
test
add
jge
dec
push
xor
lods
or
test
or
js
ja
cwde
inc
enter
bound
and
adc
adc
lds
mov
ss
mov
jge
mov
xor
rol
xchg
push
adc
in
shl
adc
or
sbb
scas
dec
int
cwde
dec
push
inc
(bad)
and
repz
bound
mov
hlt
mov
addr16
sbb
xor
ja
mov
aaa
mov
in
aaa
add
ss
ror
mov
push
icebp
int3
lds
push
add
sbb
fild
mov
stos
jp
push
mov
and
daa
lahf
adc
push
loope
push
push
mov
mov
push
or
and
cmp
jg
push
inc
dec
stos
movs
add
xchg
(bad)
inc
retf
faddp
out
pop
nop
mov
dec
popf
inc
popf
add
push
movs
icebp
and
(bad)
xor
pop
pop
push
int
mov
data16
movs
jmp
mov
sbb
and
push
adc
ins
add
movs
jmp
or
push
cwde
dec
mov
adc
das
or
add
sub
les
idiv
and
jnp
lods
outs
push
inc
cmp
fnstcw
mov
sub
xchg
mov
outs
cmp
pop
inc
add
mov
push
imul
repz
sbb
mov
add
mov
fiadd
cmc
xor
jge
push
dec
add
add
mov
aaa
adc
inc
add
mov
add
lods
xchg
cmps
xchg
add
and
mov
push
xlat
add
ins
(bad)
mov
push
mov
mov
inc
outs
adc
mov
push
ins
in
cmp
mov
inc
lock
mov
inc
mov
pop
mov
ja
sbb
or
fwait
xor
mov
xor
mov
mov
push
lock
inc
sbb
push
repz
pop
dec
adc
inc
cmp
jge
dec
mov
mov
(bad)
sub
jnp
hlt
fsubrp
xor
daa
pop
repz
push
and
add
adc
icebp
add
test
pop
sbb
fwait
rol
cmp
jo
push
rol
or
jmp
inc
mov
dec
sbb
inc
jecxz
pusha
adc
or
jmp
and
jo
imul
pop
sub
ss
inc
xor
aad
push
xchg
and
adc
mov
xlat
push
mov
xor
adc
fisub
xchg
out
cmc
and
fwait
cmp
stos
ret
pop
(bad)
jnp
stos
jno
outs
inc
fwait
adc
ins
or
imul
outs
pop
inc
sti
add
or
fs
retf
ss
pop
sub
(bad)
jns
dec
icebp
xchg
push
lods
cdq
xchg
push
nop
sbb
mov
repz
xchg
xor
lds
aas
inc
loope
and
sbb
rcl
not
in
das
dec
sar
inc
xchg
mov
mov
inc
mov
out
mov
xchg
cmp
mov
enter
and
ror
add
or
aaa
daa
or
add
aas
fld
aaa
inc
lock
dec
stos
push
(bad)
sbb
push
fwait
addr16
sbb
nop
mov
pop
inc
adc
retf
or
mov
xchg
(bad)
aas
or
inc
popf
add
jne
dec
pop
shl
add
and
daa
pop
repnz
daa
and
inc
add
mov
lea
inc
adc
jecxz
test
mov
jns
lock
xchg
jnp
and
xchg
lds
shl
dec
cmp
mov
loop
aas
out
mov
add
pop
int
fwait
adc
iret
xor
cwde
fldln2
push
mov
push
jmp
ja
mov
icebp
xchg
add
and
(bad)
jns
adc
lahf
mov
and
and
jae
call
inc
leave
or
add
mov
nop
adc
fwait
jns
jne
add
mov
les
sbb
daa
out
leave
inc
mov
ror
jns
outs
add
push
das
and
sub
inc
arpl
shl
or
sub
mov
xor
mov
in
xor
lods
cwde
jo
or
cmp
or
hlt
cmp
dec
xor
nop
lods
in
jae
sub
test
adc
ret
mov
adc
lods
(bad)
repz
fwait
cmc
es
sbb
sub
pop
lock
sub
movs
xor
retf
cmc
xor
fwait
repz
mov
es
(bad)
fimul
xchg
inc
jecxz
jecxz
cwde
movs
or
xor
xor
rcl
ja
add
adc
jge
stos
inc
and
jo
push
lds
cwde
or
mov
adc
xchg
push
pop
jmp
jo
or
sbb
xchg
xor
jns
data16
pop
fld
popa
add
bound
or
push
push
xchg
xchg
ins
outs
(bad)
xchg
sub
(bad)
fcmovnb
fwait
lds
adc
pusha
pop
mov
xor
xor
aaa
mov
mulps
aam
leave
out
or
mov
in
ror
or
pop
inc
add
inc
add
jmp
das
shr
int
or
loope
xor
ss
xchg
jg
test
pop
sar
(bad)
inc
dec
mov
test
adc
xor
xor
dec
jmp
cmc
aaa
xchg
push
or
inc
cmp
xchg
imul
pop
shl
in
ror
gs
iret
or
int
adc
sbb
or
mov
bound
mov
(bad)
pop
pop
cmc
mov
or
popa
pop
mov
fs
test
lods
xor
mov
xor
sbb
mov
sub
mov
push
fnstenv
scas
mov
mov
mov
imul
mov
add
outs
inc
jg
fstp
xor
jp
mov
or
dec
xlat
xor
mov
out
xchg
xchg
inc
(bad)
and
adc
shr
sub
popa
aaa
jecxz
mov
retf
and
add
dec
test
inc
int
and
rcl
push
pop
or
adc
daa
(bad)
xor
mov
cdq
mov
mov
mov
mov
repz
add
pop
int
movs
mov
push
xchg
or
mov
and
or
xor
dec
fwait
dec
das
push
push
retf
pop
retf
mov
xchg
push
and
js
and
pop
shl
repz
jae
leave
add
push
sbb
test
rol
and
ins
pop
(bad)
sub
call
add
rol
cs
add
xchg
adc
inc
cmp
fstp
add
imul
jne
rol
mov
(bad)
and
das
and
xchg
xchg
adc
movs
xor
inc
dec
ins
dec
adc
(bad)
icebp
fbstp
cwde
rcl
sbb
add
cmp
xchg
xchg
pop
test
dec
inc
in
int3
pop
rol
mov
dec
xchg
adc
mov
jae
jmp
pop
daa
leave
sbb
push
sbb
lods
or
cmp
cmovne
inc
outs
shr
outs
ret
xor
mov
stos
bound
pop
cmp
cmp
mov
je
jg
xor
pop
inc
int
leave
xor
outs
popa
xchg
mov
sub
add
lea
xchg
shl
mov
mov
inc
call
adc
mov
outs
rol
xchg
push
dec
addr16
and
jg
popa
adc
test
mov
mov
or
mov
call
(bad)
push
inc
push
jmp
and
pop
(bad)
repz
adc
pop
pop
dec
or
push
push
or
add
xlat
add
test
aas
xlat
dec
retf
or
mov
pop
rol
adc
sub
mov
test
mov
add
outs
sbb
sub
push
aad
cwde
push
test
cmps
inc
jp
add
inc
add
and
sbb
mov
mov
out
xchg
shl
fimul
mov
(bad)
adc
xlat
jmp
mov
test
das
xor
ja
or
xchg
scas
sbb
mov
daa
mov
aas
xchg
retf
stc
inc
add
mov
adc
daa
mov
xchg
add
sub
shr
mov
mov
xor
popa
stos
dec
inc
or
dec
add
jns
jns
out
jo
xchg
aam
inc
or
dec
push
je
or
or
or
inc
stc
jns
and
adc
or
xor
add
jno
xor
movs
and
or
and
add
dec
test
outs
inc
mov
cwde
push
inc
sub
aaa
cmp
mov
aad
mov
mov
addr16
and
push
add
jns
pcmpgtd
clc
xchg
lods
xchg
inc
lods
push
jge
and
or
out
or
icebp
mov
xchg
or
dec
mov
xchg
adc
mov
sbb
jmp
ja
add
xchg
aaa
arpl
lods
add
xchg
add
push
(bad)
iret
dec
sub
add
adc
ffreep
inc
(bad)
adc
test
adc
mov
sub
mov
shr
adc
aad
and
adc
loopne
sbb
inc
gs
and
pop
inc
sbb
xor
mov
retf
add
fs
add
xor
or
push
(bad)
shl
push
fld
sbb
xchg
rcl
ins
inc
adc
inc
sub
pop
xor
xor
add
mov
(bad)
int
imul
jecxz
retf
jmp
add
popa
push
cmp
sub
stos
xchg
cmp
xor
adc
push
cmp
adc
xor
xor
ret
test
jne
xchg
mov
and
or
push
sub
adc
pop
cmp
aad
das
jae
icebp
fisubr
add
vpmulhrsw
pop
dec
cwde
ins
add
js
xor
cmp
add
mov
cmp
mov
pop
movs
pusha
dec
inc
jne
popf
icebp
add
out
int
(bad)
and
mov
sub
outs
sbb
enter
push
int
add
enter
xchg
add
sbb
sub
add
xchg
mov
test
hlt
mov
dec
ja
pop
or
es
cmc
neg
and
mov
jmp
mov
mov
mov
ret
jb
or
pop
pop
and
add
inc
xor
sub
inc
popa
dec
icebp
fisub
xor
dec
sbb
fst
add
sbb
sbb
repz
xor
stos
out
add
dec
nop
inc
mov
sub
ret
js
ret
gs
inc
shl
jne
das
and
mov
or
mov
xor
cmp
aaa
data16
call
dec
xor
push
or
xlat
(bad)
(bad)
mov
xor
or
out
and
retf
dec
mov
cmp
push
add
mov
fimul
pop
sbb
adc
stos
int
sub
and
loopne
adc
inc
push
mov
inc
cmc
or
push
jnp
nop
adc
dec
dec
bound
pop
in
les
stc
shl
xor
and
xor
lahf
cmps
dec
mov
sub
cmc
movs
es
mov
jmp
xor
arpl
popf
inc
das
sbb
ret
push
scas
or
mov
add
and
std
xor
sub
cmp
pop
adc
sub
(bad)
xor
xor
aas
frstor
xchg
inc
adc
rep
xchg
push
shl
outs
leave
pusha
adc
jp
dec
pop
div
(bad)
les
inc
sub
push
lock
std
push
push
push
inc
add
mov
inc
pop
ss
sub
add
mov
xor
sbb
and
push
fwait
sub
imul
lock
xor
jg
inc
das
fs
or
iret
cmp
js
out
shl
(bad)
adc
in
mov
pop
enter
outs
int
int
or
mov
xchg
push
and
push
mov
or
add
dec
cmps
loope
lods
fiadd
das
push
push
outs
xchg
je
add
or
ja
mov
xor
mov
test
mov
mul
push
std
jns
and
ja
push
or
js
mov
xor
aaa
pop
jns
inc
xor
inc
pop
or
test
xor
sbb
push
inc
and
pusha
push
adc
call
cmp
xor
xchg
xchg
iret
mov
xor
push
sub
rol
add
mov
xchg
jmp
add
add
(bad)
inc
aaa
add
nop
sub
pushf
adc
inc
icebp
pop
xor
inc
mov
sub
push
sub
fwait
stos
or
pop
inc
inc
push
adc
arpl
and
and
(bad)
fdiv
les
push
lahf
mov
jg
nop
mov
and
add
xor
jmp
imul
aaa
mov
and
push
sbb
adc
xor
add
dec
bound
inc
inc
scas
and
or
(bad)
popf
add
adc
mov
adc
pusha
add
xor
mov
ret
xor
adc
xchg
jmp
sub
xchg
mov
mov
add
mov
xchg
sar
add
push
mov
mov
ret
and
xchg
add
sbb
mov
popf
xchg
and
mov
jnp
sub
add
aaa
mov
leave
int
test
(bad)
int
pop
pop
inc
popa
cmp
xchg
retf
mov
dec
pop
sbb
push
add
jge
xchg
add
inc
sbb
sti
int
add
int3
call
add
or
push
dec
std
and
fld
pop
jge
xchg
xor
add
pop
stos
pop
push
pushf
sbb
inc
sub
inc
mov
jg
loope
leave
add
in
add
or
mov
push
add
paddusw
xor
sbb
sbb
and
gs
inc
daa
int
inc
shl
sbb
mov
(bad)
cmp
adc
add
or
and
aaa
mul
add
stos
pop
jb
push
(bad)
stos
scas
and
push
xor
popa
mov
inc
xchg
push
pop
outs
sbb
or
xor
cmp
inc
xor
int3
xchg
aam
pop
jns
and
push
and
push
mov
push
xchg
jb
cdq
sti
lds
sbb
sar
and
mov
in
cmps
inc
and
pusha
nop
jns
mov
fimul
and
pop
loope
adc
and
cdq
test
shl
or
scas
or
mov
push
add
int
pop
inc
nop
test
(bad)
mov
das
lds
inc
push
add
mov
popa
jecxz
lds
mov
adc
mov
xor
test
pop
xor
mov
rol
dec
push
jnp
movs
push
push
addr16
aaa
cmp
int
or
or
xor
fcmovne
fild
leave
xor
add
call
retf
and
outs
push
sar
xor
mov
nop
test
test
aad
rol
adc
ret
xor
scas
pop
ret
mov
and
adc
cwde
jmp
icebp
pusha
add
mov
xor
inc
aam
in
loope
stos
xor
sub
test
sbb
int3
jp
xchg
inc
xor
xchg
sub
and
pop
push
add
mov
test
dec
jg
inc
or
sbb
inc
add
mov
adc
push
lods
pop
xor
(bad)
dec
or
sbb
pop
adc
add
adc
add
mov
test
mov
inc
and
sbb
and
dec
dec
inc
aaa
and
sbb
loop
fild
push
mov
adc
adc
xor
pop
mov
loopne
outs
mov
mov
aaa
ins
mov
gs
inc
or
push
jmp
push
push
adc
outs
and
gs
loope
or
loopne
sbb
pop
mov
pusha
mov
adc
inc
adc
popa
pusha
jns
fild
jo
mov
scas
fs
xchg
daa
bound
inc
outs
pusha
fnsave
inc
or
test
std
inc
out
int
(bad)
jg
fist
inc
shl
dec
jb
and
push
xor
inc
mov
xlat
shl
call
add
mov
push
xor
aad
pop
mov
dec
dec
push
dec
js
js
and
mov
and
test
adc
movs
stos
loop
xor
les
dec
cs
jg
sub
xor
popf
(bad)
movs
add
nop
push
jne
fwait
add
jmp
je
xor
jge
add
adc
adc
dec
jp
repz
int
lds
inc
loope
out
das
jae
dec
movs
sub
rcr
sub
xor
out
dec
xor
cmp
xor
int
(bad)
pop
ret
dec
(bad)
push
adc
lods
and
mov
push
out
or
jmp
or
add
add
or
sub
ins
inc
das
and
inc
fs
and
add
dec
add
add
inc
or
dec
push
mov
ins
ins
and
lock
fwait
add
cmp
or
gs
sbb
push
dec
test
and
adc
add
adc
jno
retf
les
bound
inc
add
or
cmc
jns
lahf
mov
push
mov
xor
add
hlt
fstp
add
int3
sub
inc
dec
mov
add
leave
adc
arpl
lds
or
xchg
inc
mov
cmp
icebp
sbb
inc
or
mov
adc
in
add
xor
mov
add
movs
mov
cmp
add
adc
dec
movs
gs
adc
inc
add
sbb
hlt
add
arpl
inc
push
dec
cmp
shl
arpl
and
cmp
dec
adc
loopne
sbb
and
dec
or
add
mov
mov
ja
inc
mov
xor
shl
add
aad
int
mov
scas
sub
and
and
cwde
xchg
and
stc
or
or
xchg
cdq
div
push
add
retf
adc
add
daa
arpl
outs
inc
sar
xor
addr16
add
sar
jg
fwait
add
aaa
add
lods
xor
stc
stc
test
dec
mov
inc
dec
inc
mov
dec
jp
outs
mov
and
das
or
lods
push
adc
and
adc
adc
jnp
push
mov
sbb
(bad)
and
jmp
ins
jnp
jecxz
adc
js
es
imul
aaa
repz
jo
shl
push
mov
xchg
lods
cmps
test
rcr
and
into
nop
repz
and
dec
dec
not
and
dec
and
repnz
aaa
sti
test
inc
out
int
out
sti
push
mov
sub
sbb
ss
push
cmc
add
mov
dec
ffree
retf
dec
icebp
add
ins
add
fwait
and
mov
push
inc
sub
pop
(bad)
add
dec
and
lds
(bad)
mov
loope
repz
lds
dec
xchg
cwde
xchg
(bad)
shl
ss
pop
adc
sub
pop
sub
and
scas
add
inc
in
mov
and
add
xor
pop
xchg
mov
add
dec
and
stos
xchg
xchg
out
xchg
pusha
dec
push
xchg
and
fstp
cdq
popa
inc
xor
push
jb
mov
add
(bad)
and
dec
adc
pusha
adc
lods
jne
push
sub
mov
or
test
jecxz
inc
xor
inc
in
out
int
sbb
xor
popa
cmc
xchg
add
jmp
and
aaa
sbb
into
and
inc
xor
arpl
daa
xchg
xor
js
in
push
cmp
popa
stos
aam
data16
xlat
or
cli
bound
inc
inc
mov
lock
jns
call
test
adc
adc
or
inc
push
inc
jmp
mov
adc
jne
or
inc
push
sti
mov
and
lds
xor
aam
cwde
push
scas
and
and
sub
xchg
test
outs
and
jno
mov
and
inc
cdq
dec
bound
push
adc
adc
or
and
jecxz
data16
imul
(bad)
nop
stos
and
(bad)
pop
lds
test
lds
dec
jno
xor
jnp
(bad)
adc
xchg
or
scas
sub
lds
add
stos
add
imul
xchg
jmp
add
xor
popa
fs
xchg
adc
adc
sub
inc
das
pusha
(bad)
fld
jb
mov
sbb
and
xor
adc
shr
pushf
or
add
mov
popa
fwait
data16
mov
and
and
lahf
add
xchg
retf
imul
adc
inc
pop
push
push
push
dec
test
inc
and
inc
rol
int
bound
mov
lock
xor
dec
loopne
fstp
pop
adc
mov
rcl
mov
xchg
push
sti
ret
outs
popa
push
xor
push
sbb
push
fstp
shr
push
imul
mov
xchg
dec
push
stos
adc
jno
pop
pop
add
cmp
or
xchg
add
pop
movs
call
dec
js
mov
aas
dec
sub
adc
and
cmp
mov
mov
push
cmc
xchg
pop
pop
add
cdq
xor
xchg
sbb
add
in
pop
jne
fimul
xchg
and
pop
push
adc
lods
inc
aas
xchg
stos
icebp
es
and
ret
scas
lea
es
iret
sbb
stos
shl
cmp
mov
and
adc
adc
cmp
or
cdq
daa
outs
or
and
or
scas
add
sbb
push
rcr
adc
xor
pop
inc
das
inc
add
mov
push
stos
sbb
cmps
inc
stos
cwde
movs
or
jne
add
shl
popa
xor
add
xchg
sub
pop
std
test
inc
call
cmc
bound
push
rol
pop
xchg
add
add
test
mov
push
add
add
inc
and
add
rcl
push
lds
mov
test
cwde
inc
adc
ins
repz
sub
inc
jno
dec
neg
adc
test
popf
cmp
or
inc
jns
rcr
pop
push
xor
jecxz
mov
mov
or
jmp
add
inc
add
loope
adc
addr16
xchg
imul
pop
adc
loope
push
inc
mov
mov
xor
call
sbb
mov
inc
cmp
push
lds
sbb
add
ja
and
add
test
jnp
sub
sub
inc
sub
int
popa
pop
xchg
cmp
das
adc
inc
lds
les
pop
adc
ret
or
adc
add
inc
int3
jp
mov
fs
dec
or
mov
and
jg
add
inc
or
fwait
inc
popf
inc
sbb
outs
add
xchg
xor
jecxz
adc
push
cmps
xchg
xchg
add
or
icebp
dec
call
sub
sub
push
jns
inc
inc
leave
pop
fisttp
inc
int3
add
cs
jbe
xlat
lods
or
js
pop
scas
punpckhdq
adc
and
or
inc
add
add
pop
dec
das
xor
stc
outs
(bad)
or
mov
ja
pop
push
add
cmps
std
dec
mov
fwait
push
mov
xor
cwde
rcl
xlat
mov
or
mov
mov
rcr
frstpm(287
xor
out
xchg
add
add
add
jl
js
inc
add
xor
(bad)
push
cmc
xchg
adc
popa
jns
outs
sbb
dec
pop
xor
stos
xchg
pop
inc
or
shl
aam
gs
and
cmp
imul
adc
or
inc
gs
cwde
fwait
mov
mov
inc
int
sbb
dec
stos
push
pop
shl
mov
push
pop
pusha
inc
outs
nop
dec
sbb
(bad)
not
cwde
adc
shufps
and
fwait
push
adc
mov
aaa
mov
test
jne
into
and
or
mov
and
mov
and
out
rcl
push
test
cwde
pop
frstor
sub
sar
xchg
jno
push
out
xlat
xor
lods
add
test
adc
and
nop
add
mov
fst
in
popa
dec
clc
xchg
xor
inc
push
mov
xor
outs
gs
add
adc
scas
inc
push
aaa
mov
jp
pop
cdq
or
mov
jno
inc
xor
addr16
pop
adc
sub
rcl
pop
cmp
movs
shl
mov
jb
iret
inc
lock
xor
adc
adc
mov
or
sar
popa
dec
(bad)
adc
lds
sbb
push
adc
sub
and
or
aaa
adc
adc
icebp
inc
out
xchg
sub
lea
add
outs
ret
lea
fild
pop
push
xor
dec
inc
mov
or
inc
sub
test
loope
adc
xor
outs
imul
out
jne
jne
xchg
movs
add
jne
xor
int
cmps
js
test
inc
ja
sub
or
xor
test
add
gs
mov
xchg
leave
or
fs
xchg
or
stc
ja
or
sbb
ja
inc
outs
adc
xor
adc
daa
sub
mov
popa
dec
fisttp
icebp
add
dec
dec
leave
inc
xor
add
adc
sub
or
adc
xor
add
or
inc
xchg
mov
inc
fistp
test
add
jb
push
or
arpl
fidivr
jno
mov
hlt
mov
add
push
push
push
xchg
test
pop
data16
cmp
ret
popa
and
ss
loope
js
adc
xor
mov
inc
dec
and
and
(bad)
popa
sub
es
and
sbb
adc
ja
neg
sbb
jg
mov
test
xor
mov
les
jns
inc
or
mov
cs
sub
push
and
sub
sub
push
xor
test
inc
in
xchg
mov
mov
add
iret
cdq
add
adc
xchg
push
fld
sbb
and
pop
pusha
sub
es
or
mov
mov
sub
(bad)
add
js
or
xor
adc
shl
inc
cmc
pop
and
xor
adc
ja
dec
test
push
rol
test
xor
iret
or
cmp
adc
lods
dec
xor
fistp
xor
fmulp
sub
jne
mov
sbb
add
xchg
loopne
fild
das
popa
mov
popa
adc
mov
add
or
out
fwait
inc
dec
mov
jmp
cdq
xor
or
dec
rol
mov
imul
daa
inc
mov
(bad)
aad
int
pop
and
repz
push
cwde
add
sub
lds
add
adc
aaa
sub
xor
out
jo
gs
popf
dec
cmps
mov
pop
aam
data16
xor
xor
in
mov
cmp
or
cmp
mov
mov
aas
push
mov
test
add
es
cmps
loope
sub
daa
or
test
add
(bad)
stc
pop
aad
inc
jb
and
pop
mov
jg
and
mov
adc
inc
out
icebp
push
pusha
int3
test
pusha
test
outs
inc
dec
enter
adc
mov
mov
pop
aad
(bad)
mov
daa
mov
push
and
aad
test
xor
les
sbb
in
mov
ja
inc
(bad)
xchg
add
inc
push
addr16
dec
sbb
dec
xchg
arpl
mov
mov
or
xchg
lds
stos
aaa
xor
call
xor
sbb
sub
shl
imul
fwait
jmp
add
test
aas
or
les
inc
add
dec
and
add
lds
or
loope
sbb
cmp
xchg
pushf
bound
mov
add
or
out
push
add
xchg
jne
jmp
add
add
mov
test
int
add
add
(bad)
arpl
mov
mov
dec
and
pop
push
xor
pop
xor
or
mov
or
and
add
push
adc
push
mov
push
stc
add
dec
adc
and
test
out
pop
xor
add
xchg
pop
ror
call
stos
aaa
or
sbb
sti
lods
pop
jp
mov
push
pop
pop
push
sub
mov
xor
outs
(bad)
arpl
loope
sub
add
add
das
sbb
or
stc
mov
nop
or
fld
mov
push
fldenv
shl
cmp
xchg
mov
jge
loop
mov
cmp
xchg
pop
jmp
or
outs
dec
int3
sub
adc
add
cmps
fwait
and
call
xor
add
mov
fwait
add
movs
(bad)
xor
jp
add
push
imul
ret
add
jnp
xor
add
aaa
daa
enter
aaa
mov
and
and
pop
add
inc
nop
xor
mov
mov
mov
add
jo
xor
mov
cwde
in
pop
dec
pusha
ret
push
fwait
retf
bound
add
xor
jmp
mov
xchg
and
movs
popa
dec
les
xchg
loope
cmps
push
aam
xor
inc
loope
rcl
lds
dec
adc
or
jb
mov
jmp
mov
inc
rol
or
sub
pop
xor
fld
sbb
pop
jmp
inc
stos
fnstenv
push
sbb
and
rol
pop
mov
mov
aaa
inc
int3
bound
add
jnp
push
xor
repz
xor
xor
and
int
dec
pusha
and
xor
and
sbb
add
pop
cmp
lods
xor
mov
sub
icebp
mov
test
inc
or
mov
lds
push
adc
inc
pushf
xchg
lahf
and
xchg
fld
shl
enter
push
shr
and
xor
ror
dec
shl
stos
psubq
inc
and
retf
pusha
dec
hlt
fidiv
mov
retf
mov
cmp
and
retf
jno
lea
test
arpl
xchg
pop
wbinvd
adc
or
(bad)
bound
jno
popa
add
add
fist
mov
or
push
xor
sbb
mov
mov
and
loop
ret
push
xor
fwait
xchg
jg
in
xchg
adc
pop
test
add
fiadd
inc
and
and
dec
and
pop
or
inc
or
(bad)
inc
hlt
mov
mov
mov
inc
xor
inc
leave
mov
or
jg
push
das
and
mov
sbb
cmp
adc
dec
or
mov
xor
sbb
inc
xor
pop
cmp
int
pop
cmc
jmp
mov
push
sbb
stc
aad
or
xchg
icebp
daa
loop
or
out
das
les
or
sub
pop
or
jecxz
add
mov
xor
stos
pop
or
jp
cmp
mov
inc
lods
mov
xor
push
or
cmc
mov
and
inc
and
sub
xchg
cmp
add
and
lods
dec
dec
pop
and
dec
call
jmp
pop
inc
sbb
and
or
and
add
and
cmps
dec
xchg
pop
push
mov
add
lods
(bad)
cmp
sub
push
or
mov
pop
and
xor
retf
inc
ss
xchg
inc
mov
push
outs
or
ret
cmp
and
add
stos
and
aad
pop
xchg
mov
imul
js
xlat
jno
sbb
shr
jl
retf
and
inc
add
mov
xchg
inc
dec
fs
add
pop
inc
test
xchg
pushf
rol
cmp
retf
frstor
push
sbb
dec
adc
jno
loop
stos
dec
mov
or
lea
push
mov
push
xor
mov
test
xor
movs
sbb
or
adc
jb
rol
inc
inc
push
lods
add
bound
xadd
xor
xchg
aaa
xor
xor
mov
push
jg
not
cmp
adc
sbb
stos
cwde
push
xor
pop
sub
jecxz
add
cdq
sbb
xchg
add
es
mov
dec
aas
xor
lea
and
xor
xor
outs
or
lds
xor
push
and
jmp
xchg
sub
in
add
xor
xor
push
xchg
add
jnp
adc
out
sbb
aas
test
pusha
xchg
test
and
or
or
xchg
mov
jecxz
add
add
mov
shr
dec
inc
xchg
inc
inc
xor
and
dec
mov
lea
xor
xchg
inc
add
inc
das
pop
popf
fbstp
loope
xchg
cmovno
jnp
or
inc
inc
in
xor
fisttp
jmp
fwait
mov
movs
xor
inc
adc
mov
sub
das
sti
or
bound
sub
push
sub
adc
or
mov
test
jmp
adc
sub
mov
pop
adc
adc
(bad)
add
push
or
or
loope
mov
movs
cwde
hlt
mov
outs
dec
xchg
push
icebp
or
and
movs
jae
pop
fidiv
mov
add
add
xor
and
dec
push
xor
sbb
sub
movs
bound
inc
nop
dec
jae
rcl
test
or
cwde
icebp
pop
add
call
sbb
loope
inc
cmc
data16
addr16
lds
pusha
sar
cmps
adc
sbb
add
inc
int3
out
scas
sbb
nop
push
add
push
sbb
cmp
adc
pop
push
lds
sti
xchg
lds
inc
and
neg
dec
(bad)
pusha
and
test
aaa
xor
lea
icebp
jp
jge
sub
xchg
or
xor
fs
(bad)
ret
push
xor
push
mov
xor
xor
gs
je
dec
mov
push
outs
and
mov
out
sub
xchg
fwait
int3
jmp
and
ret
sar
sub
test
add
cmp
popf
iret
adc
or
fbstp
dec
dec
pop
push
addr16
stos
pop
rol
sub
loop
push
dec
outs
ja
mov
mov
push
inc
fld
addr16
retf
xchg
inc
rol
push
scas
inc
mov
add
jns
inc
pop
loope
mov
dec
loop
mov
inc
rcr
aaa
imul
lods
loop
or
ret
inc
inc
not
addr16
adc
pop
cmp
fsubrp
mov
pop
push
inc
push
push
or
dec
cmps
gs
and
dec
add
or
js
inc
out
pop
dec
xor
adc
and
jmp
mov
sbb
nop
mov
dec
sub
in
jno
cwde
inc
or
pop
lods
dec
or
sbb
mov
imul
popf
xchg
pop
and
adc
add
adc
pop
dec
adc
inc
mov
adc
sbb
xrelease
cwde
hlt
cmps
movs
xor
push
lods
aaa
add
movs
and
mov
dec
bound
inc
mov
inc
movs
inc
sub
adc
xor
sub
inc
jo
adc
stc
int
ret
std
popa
ss
ins
les
add
sbb
test
add
shr
gs
add
mov
es
inc
daa
mov
dec
or
test
aaa
dec
(bad)
fstp
cmp
cmp
mov
pop
push
fild
out
rcl
repz
cmps
(bad)
xor
ror
xor
and
fisubr
inc
pop
push
add
inc
or
daa
pop
pop
sbb
add
stos
fld
out
int
nop
add
xchg
shl
fidiv
pop
jmp
pop
mov
ja
mov
inc
add
adc
push
cmp
push
adc
int3
test
dec
sbb
dec
lea
stc
push
xor
mov
cmc
sbb
(bad)
xor
or
add
jnp
push
adc
mov
mov
sub
push
xchg
jp
and
inc
inc
test
aaa
mov
jl
(bad)
adc
add
add
add
add
enter
mov
outs
adc
mov
fistp
inc
iret
ror
loop
fstp
cmp
push
enter
daa
out
push
sub
push
lahf
adc
add
push
mov
mov
push
adc
mov
push
mov
jnp
sub
sar
fwait
sahf
inc
(bad)
adc
arpl
jno
mov
mov
push
inc
mov
dec
retf
aas
dec
sub
mov
pop
push
add
push
mov
iret
repz
mov
push
stos
cmps
jno
adc
mov
xchg
test
dec
or
xchg
mov
dec
pop
inc
das
rol
ficomp
nop
xor
dec
sbb
cmp
sbb
xchg
xchg
xor
add
xor
xrelease
movs
inc
dec
movs
dec
aad
mov
bound
adc
or
es
cmp
lds
pop
dec
adc
test
mov
mov
outs
leave
push
or
mov
and
adc
(bad)
mov
fwait
push
mov
arpl
or
dec
xor
or
sub
out
mov
out
add
and
dec
or
cmp
or
xor
dec
add
arpl
cmp
in
mov
push
xor
and
sub
add
jne
ja
inc
push
jo
mov
inc
stos
mov
sub
or
adc
test
test
sub
mov
lods
adc
loopne
add
add
and
inc
adc
movs
es
jmp
test
cmp
and
add
dec
mov
cwde
jecxz
inc
pop
dec
dec
shl
inc
mov
jno
cwde
dec
mov
dec
mov
and
(bad)
cmp
inc
inc
add
test
sbb
add
xchg
add
pop
ss
loope
push
dec
and
cmc
adc
(bad)
push
sbb
movaps
mov
(bad)
sbb
loope
add
outs
inc
std
mov
outs
dec
shl
ror
sub
mov
mov
loop
shl
and
mov
push
std
popf
add
inc
xchg
in
and
adc
and
pop
sti
adc
inc
mov
xor
(bad)
push
mov
imul
add
jp
lahf
dec
js
pop
inc
sub
in
fnsave
call
or
add
in
test
cmp
and
sub
lods
ja
add
inc
popa
inc
outs
jmp
and
pop
or
push
xchg
jecxz
les
and
dec
dec
inc
fild
and
mov
sub
mov
xchg
mov
pmaxub
mov
loope
inc
inc
and
mov
push
stos
lods
cwde
mov
call
outs
fbld
add
sti
das
add
ret
fld
mov
(bad)
and
fnsave
mov
xor
mov
cmp
sbb
out
and
mov
aas
sub
js
ss
lods
jp
in
xchg
push
or
jno
xor
and
mov
add
fs
mov
mov
sbb
sub
icebp
or
ins
inc
das
popa
add
ins
add
lods
sub
and
dec
popa
les
push
xor
and
mov
or
ins
jg
mov
mov
out
push
adc
pusha
rcl
inc
adc
gs
or
jb
pop
retf
and
xor
out
mov
xchg
icebp
sbb
adc
mov
lods
and
mov
inc
add
mov
jecxz
inc
adc
push
stos
and
shl
jg
and
inc
ret
or
sub
xchg
xor
pop
add
push
leave
and
fwait
ss
xor
aaa
and
push
sbb
pop
ja
pop
pop
push
cmps
aaa
jne
inc
rcl
cwde
int
stc
imul
xor
fstp
ret
pop
inc
or
xlat
push
ror
sub
add
adc
in
inc
push
nop
pop
gs
stos
jne
movs
and
ins
or
popa
inc
dec
push
push
mov
xor
xor
and
test
repz
sub
inc
add
jge
addr16
or
adc
ror
push
dec
sbb
jne
mov
in
adc
int
enter
outs
push
sbb
pop
xor
or
dec
mov
dec
or
rcr
adc
shl
and
iret
xor
int3
pop
das
ror
sub
mov
mov
call
sbb
inc
push
xor
retf
cdq
pusha
adc
adc
pusha
(bad)
pop
imul
nop
mov
adc
and
push
mov
add
jge
dec
and
mov
js
jne
and
push
repz
pop
cmp
inc
mov
pop
movs
outs
mul
cwde
add
xor
pop
jne
rol
mov
jns
add
xchg
add
pop
pop
movq
dec
cmp
and
mov
xchg
sub
movs
push
popa
inc
mov
jns
and
sbb
or
cmp
xchg
adc
and
jo
out
adc
sub
add
repz
shr
adc
add
push
int
push
mov
or
cmps
daa
and
sbb
adc
mov
aam
sub
or
lea
add
sub
xchg
lods
cwde
add
les
test
inc
cmc
adc
push
inc
aad
sbb
xor
sub
or
jmp
adc
and
pop
movs
out
mov
pushf
lds
adc
call
pusha
div
loope
jp
push
and
cmps
test
xor
jno
sub
and
xlat
push
div
sbb
scas
sbb
jmp
sbb
mov
sbb
lods
inc
ss
push
inc
mov
dec
bound
sbb
add
or
adc
add
inc
and
sbb
and
adc
push
push
or
mov
add
adc
push
cwde
add
xor
stc
xor
inc
and
test
push
sub
push
sub
test
and
pop
add
ror
or
mov
nop
add
pop
shl
sub
add
and
mov
stos
add
loope
sbb
add
les
pushf
or
push
leave
xchg
cmps
jnp
ffreep
pop
retf
pop
rol
pusha
add
inc
adc
or
and
add
xor
pop
push
mov
xor
test
push
and
inc
shr
push
mov
daa
cmp
add
aad
sbb
stos
mov
pusha
xor
loop
add
mov
mov
and
inc
or
sub
enter
or
fidiv
and
adc
scas
in
cmc
es
and
add
pop
push
jo
add
mov
xchg
jno
pop
xchg
add
sti
jo
push
shr
sbb
ror
adc
xchg
mov
push
add
add
daa
adc
and
retf
or
mov
xor
mov
aas
xor
test
adc
jne
jp
fs
xlat
xchg
inc
inc
mov
imul
mov
xor
test
jo
inc
xor
shl
add
inc
and
pop
push
popf
mov
xor
dec
inc
add
and
add
add
loopne
xor
add
add
aas
loop
ret
out
inc
lea
dec
or
pop
int
pop
lock
or
es
push
push
jno
jp
stos
cmp
stos
mov
mov
inc
adc
pop
add
xor
and
adc
mov
dec
mov
dec
push
xor
pusha
ja
stos
or
lahf
xor
xor
add
shl
inc
inc
int
sar
adc
sub
ja
jne
les
pop
fprem1
mov
ret
dec
stos
dec
ret
cmp
add
ss
fiadd
in
dec
ja
leave
test
repz
cmp
add
jl
push
dec
xchg
addr16
ds
inc
inc
(bad)
movs
pop
ret
ja
cmp
sbb
ss
and
sbb
add
adc
jns
shr
lock
xchg
xchg
mov
add
xor
mov
imul
aaa
fwait
sbb
or
lock
ss
adc
daa
mov
out
xor
(bad)
fwait
adc
ret
push
pop
push
inc
push
pop
shr
das
and
popa
dec
adc
shr
xor
or
ins
ja
cmp
test
add
jmp
cmp
add
xchg
mov
xor
fs
popa
fs
or
or
sar
dec
xchg
test
jnp
add
sbb
test
inc
aad
cwde
shl
arpl
fwait
and
lds
pushf
cmps
jae
pop
adc
xor
sub
dec
add
lods
cwde
xor
lods
jne
fisubr
sbb
(bad)
fistp
mov
dec
inc
loope
dec
sub
xor
inc
pop
push
and
xlat
pop
or
xchg
xor
inc
ret
xor
and
and
and
xor
xor
inc
ror
mov
sti
in
xchg
dec
inc
inc
pop
retf
pop
adc
sub
adc
mov
scas
test
push
xor
xor
mov
stos
mov
sub
and
mov
mov
loope
sbb
mov
or
arpl
or
rol
loope
sbb
das
xchg
daa
sub
nop
jecxz
sub
dec
adc
out
push
jecxz
adc
les
inc
xor
and
aad
bound
gs
inc
movs
dec
or
mov
push
shr
ror
loopne
xchg
int
and
or
and
shl
and
xor
and
sbb
inc
or
cmp
cmps
jmp
push
je
mov
test
(bad)
xchg
push
sti
xchg
loope
das
adc
outs
ret
add
aad
loop
sub
pop
aaa
in
add
pop
aaa
mov
test
fild
fs
cwde
push
xor
adc
push
and
xchg
xchg
adc
test
call
mov
sbb
pop
add
mov
adc
ja
ror
imul
dec
sub
popa
add
mov
or
outs
pop
sub
add
xchg
cmp
adc
(bad)
jmp
and
adc
fistp
rcr
xor
xchg
adc
add
loope
popf
sub
adc
sbb
jne
sub
jno
(bad)
sub
enter
xor
sbb
aad
cmc
adc
retf
or
sbb
mov
shr
mov
jo
push
xor
fs
and
pop
ja
add
jnp
aaa
add
lock
dec
or
pushf
xor
push
hlt
icebp
popf
add
je
in
icebp
adc
mov
push
dec
cmp
dec
fstp
adc
add
cmp
push
cmc
dec
sub
test
mov
mov
sbb
icebp
(bad)
lds
int
jne
jmp
int
inc
adc
jmp
adc
push
lods
xchg
arpl
mov
les
cmp
aam
mov
cmps
addr16
adc
or
pop
(bad)
xor
xchg
mov
sub
adc
pop
adc
js
xchg
add
add
and
dec
or
sbb
mov
inc
mov
or
add
xchg
pop
and
data16
jecxz
adc
call
push
dec
retf
ja
aaa
jmp
retf
js
ffreep
icebp
sub
xchg
ror
jne
js
xchg
mov
fucomi
rcl
stos
pop
or
sbb
add
cmp
xor
inc
xchg
dec
es
jns
inc
xor
in
push
inc
lea
out
rol
ret
or
sbb
push
nop
test
sub
repnz
adc
xor
xor
adc
or
xchg
jecxz
(bad)
mov
int3
rcl
hlt
xchg
ret
sbb
cwde
xchg
or
in
xor
xor
dec
pop
cmp
pop
cmp
add
retf
xchg
sub
and
ja
and
xor
pop
adc
inc
adc
adc
movs
sub
pusha
adc
and
and
pop
and
xlat
mov
shr
shl
or
sub
or
adc
mov
mov
stos
(bad)
jnp
and
loope
sbb
xchg
mov
loopne
add
adc
push
sub
mov
and
push
add
out
push
mov
pop
or
test
data16
dec
and
in
mov
loopne
mov
jne
movs
and
cmp
xchg
sub
xchg
sub
and
les
push
add
cmp
leave
gs
or
dec
inc
or
and
(bad)
call
pop
fisub
aas
dec
add
mov
daa
in
mov
or
push
dec
adc
and
retf
push
jno
leave
inc
mov
lock
xlat
or
push
mov
jg
lds
cmps
lods
test
and
push
xor
inc
xor
and
cmp
and
push
inc
mov
leave
call
jne
mov
xlat
or
dec
cmp
dec
pop
dec
sbb
and
pop
adc
inc
add
(bad)
mov
jp
xchg
inc
mov
mov
adc
fwait
adc
pop
ror
push
outs
test
int3
adc
rol
dec
add
mov
hlt
jp
sbb
mov
das
push
fstp
xor
jp
test
cmps
es
xor
inc
imul
jg
xchg
(bad)
adc
aad
sbb
or
dec
mov
pop
or
movs
aad
mov
std
loope
mov
aaa
das
and
lods
jecxz
inc
add
js
aaa
push
adc
push
jae
push
(bad)
xchg
out
in
sahf
test
cmp
ins
jmp
sub
push
aam
sub
push
retf
sub
or
das
scas
js
push
and
retf
sbb
setg
dec
adc
bts
or
mov
or
inc
sbb
mov
sub
test
xchg
add
cdq
or
test
jg
data16
dec
sub
int3
shl
rol
jne
repnz
xor
int
jne
mov
xor
dec
inc
mov
pop
pusha
xchg
btc
inc
add
add
in
and
lods
mov
and
xor
xor
bound
xchg
rcl
out
and
xor
hlt
pop
sbb
imul
ficomp
or
std
lahf
xor
pop
pop
and
enter
gs
stos
add
push
mov
add
jnp
adc
js
out
and
inc
add
xor
and
push
mov
inc
les
xchg
xor
pop
push
add
xor
sbb
shl
dec
mov
cmp
jnp
add
mov
ja
icebp
xchg
ror
fs
js
adc
inc
inc
mov
test
out
int3
push
movs
dec
xchg
and
and
adc
push
mov
inc
add
nop
add
or
or
mov
push
push
leave
neg
test
mov
test
xor
idiv
inc
mov
sbb
xchg
arpl
std
int
or
dec
dec
or
xchg
sub
inc
dec
pop
xchg
push
push
xor
int
pop
inc
rcl
push
add
in
push
shr
or
add
and
and
imul
lods
adc
test
xor
add
outs
popa
add
int
xchg
out
sub
and
aaa
inc
xor
dec
mov
je
and
test
mov
popf
aaa
jecxz
lods
leave
imul
das
(bad)
push
adc
xchg
(bad)
xchg
arpl
shl
add
inc
pop
jb
outs
inc
imul
add
test
mov
ror
push
add
leave
pushf
mov
int
jnp
stos
mul
adc
xor
inc
aad
icebp
bound
and
xor
cmp
inc
or
test
xor
dec
pop
xor
inc
push
and
aaa
xchg
adc
xor
mov
cdq
pop
dec
or
mov
or
(bad)
popf
push
inc
popf
dec
cdq
jne
aam
gs
xchg
adc
add
cmp
mul
out
int
jne
addr16
inc
inc
xchg
mov
es
lods
mov
inc
pop
push
pusha
rcr
shl
inc
dec
add
add
adc
and
bound
mov
xor
push
pop
fmul
not
sub
pop
mov
or
jb
shl
or
pop
xor
das
adc
out
test
pop
int
and
out
es
mov
pop
nop
push
xlat
xor
cmp
add
icebp
push
repnz
inc
add
js
dec
call
jo
push
or
dec
mov
outs
popa
add
daa
test
push
add
daa
or
das
cmp
shl
mov
loopne
lods
jmp
stos
or
mov
and
pop
fild
add
mov
lods
or
nop
adc
stc
add
xchg
push
mov
sbb
dec
xchg
ficomp
iret
popf
add
and
mov
push
xchg
adc
mov
inc
sti
xlat
mov
lds
add
or
mov
icebp
xor
cwde
xor
(bad)
xchg
cwde
rol
loope
gs
cmc
xchg
pop
sub
adc
(bad)
ins
lock
jb
inc
jns
xor
and
xchg
lds
xor
and
mov
cwde
xor
add
(bad)
mov
jnp
or
xchg
test
xchg
and
sbb
add
add
pop
imul
xchg
shr
shr
and
and
adc
push
icebp
cmp
pop
inc
popa
mov
jnp
js
and
adc
xchg
xchg
inc
aaa
fst
or
mov
sbb
push
mov
push
mov
pop
fisttp
mov
add
ret
mov
mov
lea
dec
add
out
int
sbb
call
add
js
in
jge
mov
mov
or
and
pop
leave
jno
pop
(bad)
movs
xchg
inc
aad
pop
mov
popa
add
mov
cmp
aaa
lods
cdq
mov
sbb
push
add
stc
add
and
pop
or
add
cmp
jae
inc
dec
sub
and
test
fsubr
test
lds
push
xchg
pop
cwde
inc
dec
cwde
(bad)
jne
add
pop
mov
arpl
mov
int
jnp
adc
loopne
or
push
les
inc
push
inc
sbb
sbb
test
inc
in
adc
pop
mov
mov
xchg
add
mov
xchg
xchg
add
sub
push
aad
inc
adc
and
or
adc
sub
aas
and
mov
pop
das
or
sbb
out
push
adc
shl
cmp
jnp
mul
xchg
jae
daa
jmp
mov
push
movs
jno
dec
sbb
rol
aaa
jmp
pop
inc
push
adc
dec
push
pop
jmp
in
dec
push
shr
inc
nop
xor
stos
aaa
xchg
inc
and
push
xchg
scas
xor
les
xchg
add
xchg
and
sub
adc
outs
and
or
sti
outs
cmps
dec
xchg
push
sti
jecxz
add
aam
or
fisubr
cmp
add
ss
add
sub
adc
add
sbb
adc
or
xchg
dec
shr
xor
shl
adc
and
outs
and
aam
lsl
retf
call
push
xchg
push
and
xor
and
add
icebp
push
ss
ins
xor
sub
jg
add
add
mov
leave
xor
mov
adc
jg
inc
mov
mov
push
dec
cmp
xor
mul
cmc
jecxz
xor
cmc
sbb
and
lahf
daa
add
cmp
mov
lds
xor
jge
mov
cwde
xor
adc
mov
imul
mov
sar
movs
call
push
or
mov
inc
pop
mov
mov
shl
adc
and
std
inc
lea
adc
adc
addr16
xor
aaa
add
js
sub
adc
xchg
(bad)
jmp
sub
shl
aad
and
dec
(bad)
xor
add
inc
or
add
leave
jecxz
inc
mov
inc
xor
and
sub
fwait
div
test
and
adc
xlat
shl
sbb
xor
cwde
rcl
xor
adc
inc
mov
int
xor
and
adc
rol
lds
add
cmp
out
and
add
add
jmp
xlat
add
sub
sbb
add
leave
sub
add
jp
and
sar
and
jmp
or
xor
dec
and
stos
pop
(bad)
nop
add
adc
movs
or
dec
add
sbb
arpl
test
inc
xor
das
inc
inc
inc
mov
sub
pop
sbb
xor
xor
in
xor
add
or
xchg
xor
mov
xchg
pusha
adc
xor
xor
push
cmp
leave
mov
or
nop
gs
cmc
inc
inc
add
pop
xor
sub
or
add
pop
aad
xchg
mov
adc
bound
jns
mov
mov
or
in
mov
icebp
push
xor
sbb
lods
add
mov
leave
iret
adc
mov
and
cwde
jmp
loop
or
scas
pop
sbb
imul
mov
adc
ret
test
inc
add
xchg
xor
push
xchg
or
xor
mov
mov
pop
push
ret
std
movs
ds
leave
adc
idiv
js
pop
cmp
mov
pusha
jg
(bad)
leave
add
lds
test
push
xchg
imul
sbb
movs
xor
int
add
cmp
push
scas
cmc
push
(bad)
adc
mov
xchg
sbb
push
adc
add
inc
jns
stc
xchg
test
js
add
jp
call
add
jo
and
addr16
pop
add
sbb
and
dec
push
adc
fidiv
cmp
pop
mov
mov
test
add
adc
call
aad
pop
add
inc
stos
sub
push
add
iret
xor
or
or
test
mov
arpl
xor
(bad)
loope
mov
xchg
test
jp
lods
jmp
cmp
ins
test
dec
mov
imul
(bad)
xchg
jg
jnp
les
xchg
sub
fwait
aaa
xor
mov
mov
popa
add
inc
jmp
cmp
and
ja
test
div
ja
pop
inc
xor
dec
and
(bad)
gs
xchg
ins
push
pushf
and
inc
js
test
mov
xor
sub
xchg
mov
adc
lea
and
mov
sub
sub
popa
add
xor
sub
jge
add
xchg
adc
sub
xor
and
punpcklwd
rol
mov
add
jnp
jnp
pop
adc
mov
dec
or
(bad)
retf
jmp
(bad)
mov
xor
inc
push
outs
or
push
inc
sbb
adc
or
adc
addr16
xor
push
adc
fbld
jno
xor
xor
fs
xor
jno
mov
(bad)
push
leave
outs
leave
sbb
adc
cwde
je
pop
inc
ret
or
lods
mov
cwde
xor
cdq
add
(bad)
pop
test
inc
add
sub
shl
add
bound
mov
mov
jns
xor
icebp
test
mov
inc
xor
mov
jno
mov
ss
jmp
sub
aaa
loop
mov
add
pop
xchg
add
mov
std
dec
or
popf
cdq
jno
and
sbb
pop
push
adc
adc
shl
mov
and
mov
xor
xor
or
dec
stos
add
xchg
xchg
and
or
xchg
mov
inc
or
cdq
movs
and
mov
mov
or
and
(bad)
sub
sub
inc
setbe
outs
push
or
fs
arpl
outs
pop
inc
mov
ror
push
(bad)
mov
add
mov
daa
aaa
xchg
sub
dec
mov
xchg
inc
adc
xor
sub
sub
fldcw
ret
icebp
out
inc
es
lds
movs
and
pop
and
adc
inc
ins
inc
add
sub
shl
or
xchg
aaa
cdq
mov
inc
mov
mov
inc
cmp
push
push
mov
xchg
push
popa
fldenv
retf
adc
mov
xor
inc
inc
mov
shr
cwde
ror
xor
mov
stos
dec
loop
jnp
ja
cdq
pusha
push
adc
in
add
xchg
mov
pop
fst
sub
test
jmp
pop
xor
mov
sbb
xlat
mov
adc
outs
sbb
or
inc
loope
sbb
retf
das
dec
pusha
and
xchg
inc
add
cmp
or
and
(bad)
fwait
or
pop
repnz
add
inc
mul
pop
rcr
movs
sub
xor
jp
in
out
xchg
xchg
inc
outs
ss
push
ror
sbb
and
mov
lods
mov
mov
sub
jb
and
and
add
sub
push
(bad)
mov
jns
push
sbb
repz
jne
xchg
add
pop
dec
inc
inc
adc
std
fwait
(bad)
je
or
popa
xor
adc
sbb
mov
mov
out
inc
int3
or
in
pop
mov
gs
(bad)
or
cmps
pop
xchg
fwait
(bad)
movs
sbb
fs
jno
aas
sub
pop
dec
imul
test
adc
imul
rcl
ja
adc
inc
mov
movs
bound
push
xor
push
xor
adc
aad
xor
add
xor
pop
add
mov
aad
ins
cmp
inc
push
or
dec
scas
repz
sub
shl
loopne
test
jge
mov
add
or
inc
popf
mov
inc
out
and
test
and
in
test
inc
lds
push
sub
cmp
xor
inc
dec
inc
ret
test
add
and
outs
xor
repz
add
xor
mov
sti
aad
loop
xchg
jmp
adc
inc
mov
popf
jno
xor
mov
ja
and
cmp
dec
jmp
call
dec
and
adc
push
out
jmp
adc
and
es
mov
add
test
sub
shl
test
and
inc
inc
dec
cwde
mov
xor
inc
jge
fidiv
add
neg
inc
popf
push
push
rcr
or
mov
sub
in
add
sub
add
out
push
test
mov
stos
(bad)
fs
les
(bad)
jae
aaa
mov
daa
arpl
mov
mov
xor
cmp
or
inc
inc
loopne
test
pop
iret
add
jne
mov
test
int
mov
es
mov
adc
adc
and
pop
(bad)
xchg
inc
inc
sub
in
inc
push
lods
xchg
stos
inc
scas
or
cwde
push
xlat
xor
mov
stos
nop
inc
leave
jns
imul
sbb
or
inc
sub
xchg
test
sbb
outs
inc
and
stos
xor
sub
add
jno
cmp
ret
xor
adc
xor
or
mov
xor
cmps
cmp
sbb
fld
int
test
gs
pop
add
xor
mov
ins
retf
or
or
sub
ss
inc
sbb
daa
dec
adc
(bad)
fild
xchg
cdq
xchg
adc
inc
out
iret
int
or
daa
add
add
cmp
test
add
ss
dec
inc
xor
das
fs
pushf
xchg
rol
mov
test
sar
(bad)
inc
rcl
and
push
jnp
mov
jp
sub
jnp
add
or
inc
ret
mov
test
add
stos
lods
adc
lea
adc
addr16
fidiv
in
pop
push
adc
scas
ins
dec
adc
jmp
nop
cmp
sbb
mov
adc
adc
or
cmp
(bad)
fs
jp
int
push
je
(bad)
leave
dec
adc
or
add
jg
xor
adc
push
xor
dec
mov
push
mov
mov
pop
rcl
pop
(bad)
inc
and
inc
adc
and
jnp
pop
not
aaa
mov
or
out
mov
xchg
gs
inc
(bad)
(bad)
sbb
jns
push
aad
pusha
in
stos
xor
adc
inc
test
inc
adc
push
add
jp
push
lds
push
adc
loop
xchg
jns
dec
stos
xchg
nop
add
adc
arpl
and
xchg
rol
(bad)
pop
and
imul
and
popa
ror
adc
pop
mov
and
mov
and
cmc
faddp
test
daa
int3
cmp
pop
sbb
jmp
xchg
pop
std
shr
aad
movs
add
cwde
out
inc
jp
ret
lock
shl
shr
shl
nop
cwde
popa
aas
(bad)
or
add
outs
(bad)
jnp
lahf
ror
iret
cmp
pop
retf
and
pop
in
pop
sub
cdq
sub
nop
inc
mov
jmp
xchg
dec
sti
lahf
sub
push
pushf
sub
ins
add
and
cmc
repz
inc
loope
imul
add
xchg
pop
xor
sub
mul
sub
out
std
gs
add
fsub
sub
loop
in
pop
add
jnp
adc
inc
jne
iret
add
in
and
pop
rcl
adc
cmp
ror
pop
(bad)
and
add
add
stos
add
pop
xor
shl
int
push
adc
xor
mov
xchg
das
and
add
movs
xor
or
xchg
lds
ret
push
test
leave
mov
mov
or
repz
and
add
pop
inc
or
adc
inc
push
pop
mov
xchg
pop
xchg
lea
jmp
adc
bound
add
inc
rcr
mov
dec
sbb
inc
stos
mov
push
aas
push
xor
pop
add
and
inc
in
inc
pusha
(bad)
fstp
mov
out
jecxz
test
shl
stos
js
jmp
(bad)
and
sub
cwde
ins
and
mov
pop
inc
adc
mov
and
mov
xchg
je
mov
and
test
rcl
sub
pop
test
add
popa
popa
inc
xchg
lods
inc
xlat
or
inc
sub
or
jnp
mov
out
jmp
retf
jge
ror
and
imul
pop
pusha
adc
and
out
mov
scas
push
and
sub
or
and
mov
add
into
push
xor
ror
add
rcr
mov
sub
push
pop
sub
push
cmp
lods
stc
xchg
adc
or
scas
mov
xchg
jno
test
stos
adc
sub
and
jmp
stos
mov
add
and
(bad)
aad
lods
lds
mov
inc
xor
xchg
adc
ins
dec
inc
ret
xor
loope
(bad)
mov
pop
xor
js
mov
and
int
fst
xchg
rcl
or
call
pop
fist
arpl
popf
dec
add
(bad)
shr
add
add
and
daa
fnstenv
or
sbb
(bad)
fst
sbb
push
or
lds
sub
push
in
and
pop
inc
xchg
or
pop
repnz
xor
pusha
push
int3
and
es
dec
or
and
xor
add
inc
xor
int
arpl
push
rol
pop
mov
add
js
adc
push
sbb
fbld
sub
push
or
jno
mov
(bad)
std
out
dec
mov
pop
pusha
inc
xor
or
mov
out
int
pop
std
pop
dec
push
cmps
sub
scas
call
and
sbb
outs
(bad)
or
mov
mov
pop
fisttp
sub
push
aam
inc
and
inc
ror
loop
sbb
nop
push
xor
ret
fwait
cmovae
dec
stos
popa
dec
cmp
sub
inc
and
jmp
mov
pop
lahf
lods
adc
cmp
fisttp
pop
xlat
mov
pop
movs
or
and
add
jge
test
or
sbb
push
mov
push
aas
xlat
sbb
out
sub
mov
inc
inc
adc
inc
ins
inc
mov
xor
inc
(bad)
jae
mov
into
aaa
xchg
repz
inc
div
test
push
xor
sbb
mov
xor
dec
push
xor
mov
and
mov
and
and
inc
add
xor
movs
pusha
and
and
add
es
jae
sub
add
mov
popf
retf
dec
push
dec
and
ret
xor
push
adc
or
xor
and
dec
mov
sub
xchg
enter
test
mov
mov
xchg
das
sub
and
cmp
pop
sahf
inc
xor
adc
jge
sbb
xchg
push
dec
dec
out
add
add
pop
jge
lock
add
add
gs
jno
add
push
rol
popa
add
inc
add
mov
pop
sub
pop
icebp
ins
daa
ror
sub
xchg
cdq
loope
lock
dec
jns
loopne
sbb
dec
mov
shl
mov
mov
int
daa
and
popa
pop
xor
lds
jmp
xor
add
cmc
adc
mov
arpl
jmp
in
jns
add
inc
and
mov
dec
inc
dec
inc
sub
xor
int3
sub
popa
mov
inc
dec
dec
inc
inc
ret
adc
or
pusha
out
add
and
sub
mov
mov
fld
cmps
fwait
aaa
push
mov
add
shr
add
sub
sub
sub
aaa
(bad)
pop
push
push
je
sub
inc
or
les
push
lea
mov
dec
pusha
mov
adc
aad
and
xchg
push
aad
jae
stos
inc
jmp
nop
js
daa
xchg
xchg
pop
inc
sbb
push
icebp
es
push
mov
out
in
pop
sbb
and
sbb
stos
jno
and
sub
loope
inc
pop
add
jno
jnp
push
or
mov
lock
gs
int
nop
add
xor
cmc
xchg
pop
or
int
out
les
(bad)
inc
mov
xor
(bad)
clc
push
dec
inc
jmp
xor
add
add
xor
push
add
or
test
out
xor
add
sub
xor
jnp
jns
mov
arpl
sub
adc
and
xchg
add
repnz
imul
mov
xor
dec
add
add
jmp
call
adc
ja
nop
pop
inc
dec
xor
out
test
icebp
and
add
push
sub
popf
data16
dec
ins
(bad)
movs
call
sbb
mov
mov
dec
sub
push
inc
aad
push
movs
and
dec
test
in
jnp
aaa
nop
cmp
and
add
jp
int
pop
lods
xor
add
adc
das
test
or
or
or
xlat
inc
and
inc
(bad)
sub
add
xor
retf
adc
ja
arpl
cmps
popa
cmc
pop
ror
inc
lods
adc
mov
and
and
mov
cwde
in
ss
hlt
fiadd
aaa
push
xchg
les
inc
ret
lea
cmp
dec
scas
inc
ins
(bad)
jg
mov
int3
push
test
ret
mov
test
shr
retf
in
mov
mov
add
in
or
xchg
add
xor
cmp
dec
test
add
ret
out
push
adc
addr16
js
push
loope
rcl
dec
inc
sbb
cmp
fstp
stc
mov
rcl
mov
mov
ss
mov
add
lods
test
dec
pusha
inc
rcr
dec
add
outs
or
sbb
add
out
push
mov
push
jg
adc
xor
mov
hlt
sub
in
test
test
aaa
xor
or
inc
pusha
add
sbb
mov
or
xchg
lahf
dec
dec
jne
les
inc
popf
aaa
shr
push
xor
dec
mov
adc
xchg
aam
loope
push
ins
inc
cmp
mov
pop
inc
mov
inc
inc
loopne
mov
neg
sub
out
xor
mov
add
cwde
push
xor
loopne
xchg
icebp
ret
add
cwde
inc
imul
and
inc
mov
and
outs
add
popa
xchg
pop
xchg
add
mov
xor
inc
pop
shr
and
pop
addr16
jne
loop
sbb
dec
push
adc
mov
mov
cmp
or
cwde
aam
imul
inc
stos
nop
repz
sar
jecxz
mov
push
mov
pop
hlt
sbb
jge
arpl
sub
xor
rol
inc
(bad)
xchg
adc
aaa
int
dec
sbb
and
and
or
aaa
nop
aaa
jmp
adc
jmp
int
or
fs
xchg
fisub
popf
prefetcht1
xlat
ret
xor
inc
pop
push
aad
inc
inc
cwde
adc
and
xor
daa
mov
xchg
sbb
inc
add
cmp
and
dec
rol
cmp
xor
push
int3
cmp
es
mov
pop
push
mov
cmp
push
lds
sbb
dec
adc
xor
pop
lds
xchg
add
test
inc
int3
add
xor
dec
push
inc
test
adc
cdq
mov
and
pusha
add
sbb
inc
cmp
mov
inc
pop
adc
gs
adc
movs
xchg
push
push
push
cmc
push
shr
sbb
xchg
fs
mov
xchg
mov
mov
(bad)
mov
shr
jns
inc
int3
fisubr
fisttp
and
adc
rol
enter
iret
call
sub
movs
out
inc
sub
ins
sub
jp
mov
and
inc
inc
add
pop
cmp
and
or
inc
lock
xor
xchg
imul
leave
inc
push
xor
ret
(bad)
or
push
jmp
js
adc
and
fldenv
daa
cmp
aaa
ror
xor
mov
sub
mov
or
cmp
call
xor
inc
leave
dec
xchg
mov
test
and
adc
or
xchg
inc
mov
or
and
cmc
dec
or
cmc
dec
and
add
xlat
ret
dec
push
push
push
or
sub
ret
out
fstp
adc
cwde
push
xor
mov
pop
and
inc
dec
in
stos
inc
or
or
arpl
adc
xor
lock
rcl
add
xor
inc
push
enter
push
and
add
and
sub
push
movs
jns
test
push
shl
inc
outs
sbb
mov
sub
mov
adc
add
dec
jne
adc
xor
and
sub
push
sub
mov
push
jg
or
cmp
push
imul
cmp
int
add
mov
mov
lds
push
mov
int3
xchg
icebp
pop
and
sti
add
lock
daa
test
popa
in
mov
ret
xor
jecxz
dec
pusha
push
xor
mov
fs
aad
add
and
or
pusha
inc
add
add
xor
push
rcl
test
mov
outs
or
and
hlt
push
push
retf
xor
add
push
leave
mov
or
jge
add
jecxz
dec
jbe
pop
cmc
xor
pop
inc
and
and
add
or
add
push
dec
dec
outs
fbstp
mov
aaa
popa
mov
inc
stc
fld
bound
dec
push
add
xchg
push
xchg
repnz
ret
inc
out
int
push
test
sti
in
mov
dec
inc
add
and
jmp
and
sub
push
inc
add
int
xor
xchg
(bad)
int
or
add
inc
and
inc
outs
add
lods
sbb
add
sub
sub
arpl
add
das
xchg
xor
ins
mov
xchg
aad
stos
jmp
or
shl
aaa
fwait
shl
pop
scas
push
adc
push
das
sbb
shl
dec
pop
jno
add
xor
cmc
(bad)
mov
jne
shl
xor
xchg
inc
mov
fild
outs
enter
xor
aaa
xor
dec
xor
sub
xor
mov
mov
inc
sub
and
outs
(bad)
push
pop
inc
or
push
cwde
jno
popa
pop
test
popa
sbb
adc
outs
(bad)
pop
cmp
mov
dec
mov
dec
bound
outs
cmps
or
push
das
pusha
inc
push
sti
loopne
test
mov
bound
add
jns
sar
push
mov
fwait
stc
sub
add
dec
or
add
and
mov
imul
inc
inc
add
inc
add
add
xor
adc
and
xor
stos
pusha
gs
fisub
js
aas
push
inc
mov
retf
jge
jmp
inc
stos
mov
inc
cmc
push
push
mov
inc
in
add
mov
and
cmp
or
int
mov
push
pop
xlat
dec
mov
scas
shl
pop
jns
cwde
adc
push
push
dec
sbb
adc
movs
mov
sbb
leave
test
test
and
xor
and
xor
and
test
daa
call
fnstenv
sbb
adc
bound
or
lods
inc
xor
ins
icebp
mov
add
cmp
jmp
stos
gs
inc
and
inc
cmc
push
inc
mov
cmp
lods
mov
sub
mov
dec
mov
add
cmp
cmp
xor
std
cdq
push
pop
add
loopne
stc
mov
add
add
xchg
jno
(bad)
fimul
loope
or
cmp
(bad)
pop
push
and
aam
or
xor
add
push
jno
ins
dec
add
add
push
or
sbb
push
adc
neg
das
in
cwde
aam
mov
and
ret
mov
mov
adc
stos
aaa
mov
jnp
xor
or
dec
adc
add
loopne
call
leave
and
mov
mov
xor
push
jne
retf
inc
leave
inc
add
pop
jge
mov
add
xchg
xor
loop
fldcw
pop
mov
adc
adc
xor
shr
dec
mov
push
dec
xor
or
and
inc
retf
vmovntps
and
mov
enter
or
xchg
adc
mov
or
and
xor
and
xor
inc
add
inc
mov
pop
nop
cwde
adc
out
mov
add
mov
fimul
cmc
es
dec
mov
cdq
xor
repz
into
push
inc
add
inc
inc
push
sub
and
cmp
adc
sub
xor
xor
dec
or
aaa
fistp
xor
pusha
push
dec
or
lea
mov
or
push
lds
rol
or
dec
mov
and
jns
xor
outs
dec
push
sub
test
test
add
or
cdq
and
pop
cmc
leave
and
shl
test
frstor
fadd
or
pop
mov
loope
lods
cmp
and
cmp
test
xor
xor
js
jmp
add
test
xor
les
add
punpckhwd
xchg
push
cmc
adc
push
adc
and
loop
push
push
sbb
dec
add
ja
push
sbb
mov
add
and
or
push
xchg
xchg
movs
push
dec
add
stos
and
mov
push
dec
adc
retf
inc
add
pop
adc
cdq
ins
dec
je
dec
add
stos
push
js
or
fld
jmp
inc
push
jno
add
inc
ror
pop
xchg
movs
and
inc
or
jns
and
add
add
cdq
nop
add
add
shr
sbb
pop
lds
xor
push
push
lds
inc
mov
aad
push
pushf
add
push
popf
inc
add
ja
loop
add
pop
aaa
movs
or
mov
add
push
rcr
adc
xor
stos
cwde
lock
(bad)
movs
call
xor
mov
ins
sub
push
and
xor
sub
or
xchg
inc
and
mov
mov
xor
shl
jg
cdq
rcl
inc
or
scas
xchg
and
mov
ret
sbb
and
data16
dec
aas
out
scas
(bad)
mov
pop
add
nop
pusha
inc
adc
mov
and
add
shr
pop
inc
daa
stos
mov
or
or
adc
lods
mov
sbb
pop
add
and
daa
xor
mov
out
in
adc
xor
push
push
ret
adc
sbb
sub
js
push
xor
add
sub
add
pop
sbb
loopne
movs
sbb
adc
mov
ror
push
mov
in
pop
adc
inc
and
add
and
add
dec
push
int
movs
daa
fidiv
jae
pop
mov
mov
les
xchg
sbb
leave
and
retf
dec
mov
cmp
mov
out
aas
and
ret
js
lea
mov
cmps
mov
xlat
ret
stc
nop
cmp
repz
inc
mov
push
adc
js
xor
jmp
push
xchg
aaa
mov
inc
push
aaa
mov
aam
(bad)
jmp
mov
xchg
add
jns
aam
and
aam
rcr
jnp
movs
pusha
push
popf
gs
aam
xchg
aam
leave
add
outs
and
adc
sub
and
lds
or
inc
mov
xor
or
movs
xor
dec
push
daa
repz
test
xchg
jecxz
pop
xchg
or
inc
jnp
add
and
cmps
and
sub
scas
movs
retf
sbb
pop
ins
jge
sub
adc
mov
jne
dec
sub
xchg
add
and
and
xchg
fbld
or
add
repnz
add
add
adc
fs
add
pop
add
cmp
lea
xchg
sbb
jp
and
xor
cdq
aaa
sbb
dec
xchg
inc
aam
add
or
popa
sbb
mov
mov
cmc
inc
cmps
stos
xchg
retf
lahf
fsubrp
rcr
adc
leave
test
add
shr
pop
xor
test
cmps
or
inc
ins
adc
dec
pop
sbb
adc
and
mov
dec
mov
sbb
xchg
dec
test
pop
dec
or
xchg
popa
xchg
inc
mov
sbb
sbb
add
jno
or
push
test
mov
aaa
and
xor
or
pop
inc
xor
(bad)
mov
xor
mov
and
ret
aaa
add
and
or
and
and
mov
ins
mov
xor
test
test
leave
test
xor
xor
test
xchg
lahf
test
jns
fcmovnb
test
xor
loop
fndisi(8087
arpl
int3
mov
loop
and
xchg
adc
fiadd
call
add
pop
mov
dec
and
xor
adc
jg
adc
pop
push
jecxz
sbb
xchg
test
popa
sub
push
int3
push
leave
rol
mov
and
add
pop
aas
xor
mov
jecxz
inc
dec
dec
jmp
and
pop
ins
or
and
cmps
loop
movs
loopne
adc
push
add
fild
xor
push
and
or
sar
mov
inc
outs
(bad)
adc
int
add
sbb
outs
imul
sbb
or
push
fwait
ja
cmp
nop
xchg
sub
add
icebp
fisubr
sub
push
pop
es
sbb
xor
cmps
and
and
pushf
sub
sbb
xor
or
xor
cmp
sub
idiv
mov
xchg
push
and
lds
or
inc
imul
add
adc
jmp
xor
sub
xchg
mov
ret
rol
cmc
xor
inc
sub
pusha
push
test
rcr
sub
xor
xor
adc
test
or
xor
mov
jecxz
add
mov
push
push
or
mov
add
dec
jecxz
outs
lods
dec
sbb
fwait
fwait
add
adc
adc
and
xor
sbb
inc
mov
add
jmp
adc
or
fst
jno
push
add
pop
imul
mov
leave
int
inc
sub
sbb
push
das
ja
jne
xor
adc
arpl
xor
sbb
pop
lahf
sbb
daa
inc
mov
mov
inc
ret
mov
dec
jmp
inc
push
pop
jge
test
sub
xor
adc
fiadd
xor
je
std
popa
retf
rol
loope
add
inc
mov
push
sbb
inc
lea
mov
out
daa
xor
add
jns
xchg
out
cdq
imul
aam
loopne
out
inc
(bad)
aaa
mov
data16
pusha
jmp
mov
sbb
sbb
jecxz
ret
fwait
hlt
xchg
retf
fld
inc
stc
movs
bound
aas
out
lds
(bad)
sti
movs
ror
sbb
call
or
add
icebp
xchg
xor
bound
cdq
arpl
adc
sub
mov
aam
test
jnp
jmp
or
sbb
inc
xchg
xchg
add
add
lahf
add
mov
ret
retf
movaps
push
enter
mov
sbb
sub
add
push
jno
fistp
push
xchg
xor
lahf
ret
push
push
cmp
push
lds
js
inc
pop
jecxz
movs
mov
loope
push
mov
xor
aas
sbb
test
adc
neg
jmp
jp
call
call
xchg
popf
fimul
pop
shl
dec
adc
lea
test
cmp
out
lods
inc
adc
mov
outs
jecxz
sbb
inc
lods
pop
loop
mov
xchg
(bad)
dec
add
mov
push
xchg
sub
adc
ja
inc
add
xlat
rol
cwde
nop
sbb
sbb
lods
fimul
mov
dec
and
inc
sub
jmp
mov
xchg
dec
imul
(bad)
movs
jecxz
mov
ja
adc
sbb
inc
adc
ins
in
or
out
dec
push
adc
(bad)
xor
(bad)
pop
and
and
setnp
push
push
pop
xor
add
inc
add
rcr
jecxz
int
adc
in
jo
and
jae
std
xchg
mov
xchg
inc
pop
pop
and
inc
inc
sbb
xor
and
dec
add
fld
add
les
sub
add
dec
nop
pop
movs
mov
sub
sub
jecxz
movs
(bad)
stc
icebp
dec
out
add
lahf
or
mov
(bad)
jo
es
sub
inc
push
push
xchg
aad
cwde
add
enter
add
fbld
and
enter
inc
enter
popf
xor
sbb
inc
xor
popa
nop
lods
int
adc
rcr
or
pushf
push
xor
popa
pop
dec
dec
or
add
sbb
adc
pop
xor
call
mov
cdq
xor
das
adc
inc
and
add
xor
push
je
xlat
inc
xchg
adc
inc
addr16
add
test
cmc
push
addr16
adc
test
and
mov
loope
sub
inc
repz
dec
push
xor
adc
test
and
pop
adc
pop
mov
sub
call
mov
mov
rcl
mov
add
ret
inc
inc
(bad)
arpl
sbb
sub
js
xchg
add
mov
out
gs
xchg
push
mov
sub
call
stos
dec
dec
sub
xchg
jmp
push
mov
pop
out
popa
stos
add
dec
outs
push
mov
call
rol
(bad)
ja
xchg
stos
sbb
jne
mov
adc
add
xor
cmp
add
inc
aad
pop
sub
fs
in
add
mov
sbb
or
mov
inc
mov
cmps
cmp
add
sub
aaa
xchg
aas
mov
aas
xor
add
pusha
push
cmp
xlat
(bad)
sub
inc
dec
addr16
lds
iret
sub
mov
or
xor
adc
xchg
add
cmp
push
sub
mov
imul
or
aad
mov
stos
xchg
adc
es
or
and
int
jge
call
int
sub
jae
jnp
fldcw
and
sub
push
xor
test
aad
dec
push
or
sbb
imul
cmp
mov
fisub
xor
inc
xchg
in
dec
xchg
pusha
push
inc
jnp
add
sub
mov
jns
xor
inc
pop
xor
sbb
mov
xor
leave
and
dec
inc
add
jp
ret
mov
add
mov
add
and
sbb
std
pusha
push
int
arpl
mov
add
xor
adc
adc
mov
inc
mov
cmp
add
test
jbe
sub
inc
push
(bad)
aas
push
jecxz
mov
addr16
jmp
xchg
cmp
jnp
add
or
adc
pop
and
cmc
dec
lds
sbb
add
sub
mov
and
inc
inc
inc
inc
xor
sti
outs
add
addr16
pop
(bad)
fbld
mov
inc
sub
add
and
push
addr16
xchg
inc
test
cmp
pop
mov
aas
pop
push
add
xchg
mov
mov
sub
out
push
lock
std
push
les
and
dec
scas
mov
mov
and
mov
sbb
add
add
rol
push
inc
add
shl
mov
mov
stos
pop
xor
adc
xor
sub
xor
xor
xor
or
pop
bound
cmp
sub
aam
push
adc
dec
mov
mov
inc
and
adc
or
nop
inc
push
pop
imul
adc
mov
add
adc
adc
mov
mov
lods
ret
jno
xchg
fiadd
repnz
scas
mov
loop
adc
pop
or
add
jmp
xchg
adc
popf
shl
inc
cmp
or
fisttp
frstor
int3
jmp
add
setge
pop
bound
call
mov
xor
lds
js
or
aad
(bad)
call
fwait
pop
mov
pop
dec
loop
or
or
and
pop
push
mov
rcr
ret
gs
(bad)
add
add
mov
aaa
jno
vmread
jmp
bound
add
arpl
mov
in
ja
mov
cmp
stc
int
icebp
sub
or
sub
sbb
sub
imul
pop
push
xor
or
mov
jae
call
or
je
int
and
cmp
adc
and
shl
mov
sbb
push
adc
mov
cmp
adc
mov
xor
retf
into
add
outs
xor
xchg
adc
sub
out
and
or
sub
repz
fldenv
in
lods
sbb
mov
inc
pop
or
rol
sub
popa
xchg
xchg
or
mov
mov
not
mov
pop
lds
xor
xor
adc
cmp
pop
lods
and
stc
or
xor
data16
mov
push
sar
xor
push
add
jmp
pop
lods
js
pop
cmp
jp
std
arpl
sbb
adc
xchg
add
push
test
push
mov
and
cmp
sbb
xlat
sub
dec
test
pxor
mov
xor
xor
sar
mov
in
jne
pop
or
stos
jecxz
jnp
or
cmp
or
and
data16
jno
movs
add
test
loop
xlat
loope
push
push
inc
or
mov
in
test
push
mov
push
rcl
daa
or
adc
es
call
push
xchg
in
jnp
retf
or
int3
pusha
(bad)
mov
(bad)
ja
aad
and
pop
xor
push
retf
or
test
adc
and
cmps
popa
ror
jns
sub
hlt
aad
push
inc
xchg
or
push
stos
sbb
xchg
cwde
rol
int
jne
addr16
es
pop
add
shl
fwait
inc
xchg
xor
jno
lods
pop
adc
out
sub
push
mov
shl
adc
inc
xor
adc
add
add
mov
or
nop
movs
out
or
stos
fdivr
sub
inc
sub
pusha
or
xor
pop
ins
pop
adc
movs
das
or
mov
gs
rcr
in
adc
mov
arpl
dec
inc
outs
cdq
adc
jno
mov
add
inc
sub
lods
sbb
mov
mov
and
inc
inc
mov
out
lods
and
ins
add
ins
jecxz
mov
push
leave
add
js
shl
sub
sub
pop
xchg
xor
test
dec
cmp
inc
cmp
mov
dec
add
xor
xor
and
xchg
call
add
popa
aaa
inc
ret
mov
push
hlt
adc
imul
or
sub
movs
sub
ret
or
loope
push
aam
xchg
test
nop
adc
gs
jmp
shl
xchg
dec
dec
sub
bound
les
cdq
and
data16
inc
and
add
inc
sbb
xor
sti
or
jmp
fst
int
pextrw
imul
xor
xchg
gs
and
xor
sbb
mov
mov
xor
sbb
mov
add
jge
dec
or
adc
add
or
xor
or
and
fldcw
push
les
test
adc
inc
or
dec
aad
pop
inc
mov
mov
and
out
dec
mov
imul
push
scas
out
dec
or
mov
mov
and
test
inc
adc
sbb
mov
imul
popf
pusha
add
xor
sub
neg
inc
mov
packssdw
and
push
arpl
shr
add
pop
adc
popa
inc
scas
xchg
dec
jno
xor
and
and
xchg
cmp
sbb
fild
add
mov
dec
pop
jmp
nop
xor
inc
add
data16
xor
daa
mov
pop
aas
mov
icebp
mov
add
add
dec
add
inc
pop
pop
push
mov
mov
mov
adc
mov
push
xchg
cmovnp
add
movs
aas
arpl
xor
xchg
add
inc
(bad)
xlat
pop
rol
ror
gs
xchg
cmp
add
inc
xor
addr16
rcr
bound
cmps
push
xchg
jnp
or
xchg
int
cmc
int
add
and
gs
pop
pop
and
adc
mov
and
jbe
ja
movs
push
and
cmp
outs
pop
xor
adc
fiadd
es
mov
xchg
mov
pusha
adc
xor
mov
inc
xor
mov
adc
ret
mov
xchg
or
dec
fbstp
dec
push
arpl
popf
call
les
pop
push
add
cmp
or
xor
int
shl
dec
pusha
pop
add
cmp
push
dec
inc
fld
stos
test
mov
adc
dec
call
dec
mov
add
jg
cmps
cwde
or
mov
sub
daa
or
jmp
adc
call
outs
lea
adc
push
add
dec
popa
mov
ja
stos
pusha
inc
mov
outs
leave
pusha
(bad)
sub
or
push
inc
push
ins
or
lock
leave
icebp
mov
inc
xchg
(bad)
rcl
push
jns
call
aam
or
pop
scas
and
and
xor
inc
sbb
in
cmc
and
and
pop
or
fs
fwait
ror
or
rcr
ret
xor
popa
push
out
inc
out
pop
xchg
int
or
inc
mov
cwde
cmc
es
mov
addr16
xor
xchg
and
mov
gs
xor
inc
mov
inc
jo
test
or
and
or
jnp
imul
outs
push
or
xlat
mov
fs
push
mov
add
adc
pop
stos
and
xchg
fwait
lds
fbstp
mov
sahf
cmp
cmp
xor
dec
add
mov
test
inc
stc
jmp
xchg
add
sbb
xchg
(bad)
mov
mov
xor
add
mov
mov
pop
mov
mov
jmp
and
shr
push
push
add
push
iret
cmc
data16
syscall
xchg
js
mov
(bad)
lods
pop
and
cdq
push
pop
xchg
add
(bad)
out
pop
aaa
sub
lock
inc
jae
add
mov
fwait
fs
dec
popf
mov
inc
adc
ret
pop
push
fidiv
sbb
pop
sbb
dec
je
add
hlt
fdivp
inc
stos
adc
jnp
leave
leave
iret
pop
addr16
stos
dec
xor
jp
add
mov
cmp
adc
or
add
jp
jmp
dec
scas
inc
stos
test
inc
adc
add
push
addr16
ret
push
ficomp
jge
sub
xor
sbb
lds
pusha
iret
sub
add
shl
inc
mov
mov
in
aad
sub
(bad)
aaa
jnp
popf
sub
shr
mov
stos
and
and
inc
sub
push
lds
ja
or
cmps
pop
push
stos
stos
dec
inc
inc
sub
mov
int
inc
jge
aas
pusha
push
dec
bound
bound
push
adc
in
adc
or
retf
sub
inc
inc
ja
fs
lock
gs
push
push
inc
xor
lds
inc
mov
mov
and
shr
mov
or
inc
mov
aaa
adc
rol
cwde
mov
pop
add
dec
adc
and
lds
cmp
sbb
or
jo
xchg
cmps
jg
test
dec
mov
add
mov
and
adc
or
mov
pop
outs
rcr
repz
add
add
sbb
sub
jne
push
push
out
scas
ss
push
repnz
xor
cmc
jmp
leave
fwait
add
(bad)
das
add
jecxz
cmp
popa
lahf
in
xchg
test
sub
and
sub
pusha
das
push
adc
push
lock
ins
jg
mov
repz
or
or
mov
jp
sbb
rol
ficomp
add
icebp
mov
pop
inc
jnp
pop
add
pop
pop
jne
push
pop
xor
inc
aaa
sbb
adc
test
mov
ins
add
mov
pop
aaa
and
fst
pop
in
inc
aad
(bad)
inc
int
adc
or
add
push
adc
add
and
inc
and
xchg
dec
xor
sbb
movs
adc
outs
dec
add
mov
cmp
mov
retf
test
test
icebp
adc
or
and
aad
push
push
inc
sqrtps
and
mov
stos
adc
sbb
jne
aaa
stc
push
dec
stc
ins
sub
loopne
and
or
test
pop
pop
and
stos
icebp
adc
or
jmp
jmp
add
cmc
xchg
fsubp
xchg
movs
push
and
cmp
add
lods
and
dec
or
xchg
push
push
and
sub
add
call
sub
ret
sub
or
es
int
inc
mov
leave
call
mov
shl
add
jnp
inc
add
imul
or
enter
xchg
inc
add
push
push
or
ins
popa
ss
mov
inc
outs
out
mov
add
cmp
inc
inc
dec
or
mov
xchg
pop
jnp
arpl
sub
les
add
mov
les
mov
xchg
pusha
sbb
or
outs
sbb
add
and
cmc
pop
scas
pusha
push
xor
outs
add
inc
adc
rol
retf
xchg
add
and
xchg
mov
or
loopne
daa
inc
inc
push
aas
jns
pushf
inc
inc
push
(bad)
aas
aas
aaa
mov
and
and
in
mov
mov
dec
mov
and
dec
outs
push
ret
push
xor
(bad)
inc
fist
mov
xor
push
(bad)
push
inc
or
adc
movs
add
repz
add
fwait
cmp
or
inc
(bad)
pop
push
add
cmp
mov
sub
push
dec
sub
ja
add
add
sbb
inc
mov
outs
mov
mov
sbb
in
fist
inc
iret
fisub
adc
aaa
mov
bound
ret
jmp
ret
popa
adc
inc
or
cwde
mov
es
pop
add
mov
cmp
sbb
repz
sbb
test
mov
les
ja
dec
and
mov
ja
and
or
outs
stos
xor
mov
adc
cmps
inc
pusha
push
cmps
or
(bad)
jnp
dec
jmp
test
int
push
lds
cmp
imul
xor
jne
xchg
adc
or
push
adc
in
stos
dec
mov
ja
add
or
add
out
dec
mov
adc
out
add
fisttp
xor
sbb
shr
or
cmp
adc
mov
fiadd
or
sub
shl
and
aam
nop
or
jg
stos
test
adc
outs
xor
xor
mov
adc
imul
inc
dec
adc
cmp
push
add
lods
pop
inc
adc
mov
adc
and
adc
mov
push
push
mov
out
add
inc
lods
inc
das
pop
mov
sbb
and
fnstcw
js
inc
fist
retf
mov
and
jmp
inc
inc
(bad)
jge
add
add
or
xchg
pop
outs
shl
in
enter
sbb
sbb
loopne
add
xchg
jmp
loope
ins
mov
add
xor
and
adc
inc
inc
adc
popa
aad
sbb
and
(bad)
cmp
loopne
and
add
inc
inc
adc
or
adc
mov
push
push
pop
add
ins
dec
dec
adc
xor
push
test
add
push
dec
dec
inc
adc
daa
or
ja
jp
add
mov
adc
popa
cdq
add
pop
inc
inc
mov
test
nop
dec
dec
xchg
cmc
icebp
pop
and
push
dec
jge
cmp
mov
mov
add
daa
aas
push
ror
(bad)
xchg
mov
jmp
xor
cmp
stos
mov
mov
add
ret
or
inc
cmp
movs
xor
ja
add
mov
test
aam
sbb
sar
leave
sub
shl
and
and
sbb
and
not
rcl
xor
sub
movs
das
popa
inc
xchg
rcr
sub
stc
xor
sub
push
out
(bad)
push
and
mov
add
es
adc
xchg
adc
mov
jo
out
or
imul
and
in
add
ret
jnp
add
add
add
es
sub
(bad)
inc
and
test
and
ja
and
inc
or
arpl
add
add
sbb
add
mov
std
sbb
inc
mov
mov
adc
mov
jg
dec
outs
adc
or
mov
sub
inc
mov
jns
or
push
out
adc
pusha
ins
jecxz
xchg
pushf
cmc
sti
lahf
inc
or
dec
push
inc
inc
add
mov
aad
test
gs
nop
xor
add
add
inc
or
xchg
inc
les
or
dec
test
pop
inc
enter
and
inc
and
inc
push
sub
adc
add
cmp
push
dec
(bad)
lahf
adc
lods
xchg
xor
xor
push
dec
jne
and
dec
inc
adc
fst
mov
sub
push
and
(bad)
imul
movs
inc
inc
movs
jno
dec
and
cmps
stos
push
mov
and
js
faddp
icebp
sbb
lahf
sbb
dec
jns
pop
mov
sub
retf
jne
inc
and
fxch
mov
ins
adc
ja
jno
or
and
shl
test
test
mov
pop
leave
push
mov
lds
xor
jp
jne
les
xchg
mov
sub
and
lods
and
out
add
icebp
sub
mov
push
mov
jo
daa
pop
fwait
mov
ror
mov
cmp
pop
xchg
pop
push
int
mov
mov
and
fs
or
dec
xchg
data16
inc
out
or
psraw
mov
call
and
mov
arpl
pop
jnp
add
adc
xchg
in
inc
inc
mov
adc
ror
rcl
pop
inc
aam
test
mov
and
das
daa
data16
push
shr
add
icebp
xchg
daa
sbb
adc
push
ja
frstor
xchg
add
loope
add
adc
popa
inc
and
rcr
pop
push
shr
inc
or
inc
mov
test
sbb
or
fcmovnb
(bad)
sbb
ror
push
bound
inc
dec
movs
dec
fs
pop
cmp
xchg
test
daa
mul
add
test
movs
push
add
push
mov
stos
push
outs
add
aaa
push
std
mov
inc
cmp
ror
cmps
sbb
or
jne
pop
sbb
xor
fcmovnbe
aam
or
adc
push
aam
or
nop
adc
and
and
inc
dec
and
sti
ja
hlt
data16
xchg
fincstp
xor
ja
repz
add
mov
xchg
inc
xchg
aaa
out
or
and
es
test
inc
xor
mov
popa
aad
stos
inc
and
fnstenv
push
push
and
mov
mov
xchg
adc
jnp
leave
adc
and
adc
inc
push
sub
icebp
mov
xor
add
jmp
mov
mov
enter
push
dec
add
inc
or
ins
adc
test
popf
test
addr16
dec
push
nop
add
int
enter
shl
add
call
(bad)
ret
adc
shr
xchg
mov
aaa
push
data16
pop
fwait
pop
or
mov
frstor
stos
sbb
mov
add
fst
aaa
pop
mov
pop
dec
mov
mov
mov
add
ja
das
mov
das
xchg
xchg
dec
in
or
xor
jecxz
gs
xor
repz
xor
lods
and
or
int3
push
clc
adc
push
mov
and
mov
bound
or
dec
xchg
aaa
popf
jnp
data16
mov
jmp
nop
adc
add
imul
dec
sub
test
leave
xor
outs
push
adc
sub
or
ror
(bad)
mov
sbb
mov
adc
adc
mov
in
popa
int3
add
div
jmp
add
popa
push
dec
bound
dec
in
outs
cmp
outs
rcr
push
imul
imul
jne
jae
cwde
shl
lea
cmc
mov
mov
inc
jnp
or
movs
imul
add
dec
adc
push
shr
int3
mov
sub
push
sub
mov
mov
test
inc
fstp
mov
test
mov
mov
or
mov
sub
mov
and
loop
xor
fldenv
test
add
fwait
or
or
jg
inc
inc
inc
inc
jg
fld
test
mov
dec
sub
dec
retf
sub
loope
mov
aad
daa
pop
xor
aad
inc
inc
adc
ror
movs
test
inc
inc
icebp
cmp
test
mov
in
pop
sub
add
ja
test
(bad)
xor
leave
popa
nop
adc
xchg
(bad)
rol
sub
xchg
jae
sbb
icebp
push
pop
xor
inc
fs
aam
dec
sbb
int
scas
ins
dec
adc
jge
bound
adc
xchg
lahf
rol
mov
sbb
inc
mov
call
inc
mov
push
mov
out
push
scas
xor
mov
aaa
imul
shl
inc
lds
dec
mov
js
add
ret
repz
xchg
pusha
add
ror
cmp
dec
pop
inc
xor
rcr
inc
mov
stos
dec
adc
cwde
test
pop
xor
xor
and
or
push
sar
and
or
pusha
push
mov
sub
add
nop
std
jmp
add
xor
sub
xor
or
arpl
inc
inc
and
popa
iret
out
adc
xlat
adc
add
les
les
aad
test
adc
add
imul
add
adc
and
nop
sbb
or
test
adc
sub
dec
movs
cmovbe
jne
outs
fprem1
rep
sub
mov
xchg
inc
mov
cdq
mov
xor
lods
sub
add
stos
add
push
and
mov
cmc
and
imul
mov
popf
ficomp
add
cmps
jno
add
or
inc
xor
mov
jmp
nop
inc
dec
xor
nop
or
inc
gs
loopne
add
mov
cwde
inc
out
add
add
push
push
ret
push
mov
fild
sbb
or
mov
inc
mov
xor
or
inc
or
xchg
js
popa
add
movs
and
popf
mov
inc
add
adc
pop
daa
or
mov
gs
out
inc
sbb
xchg
ja
in
call
cmp
je
popf
cmp
scas
or
repnz
cmp
and
add
mov
xor
adc
add
xchg
jae
cdq
call
pusha
add
rcr
add
inc
xchg
adc
jne
ja
test
jnp
ja
out
and
xor
jnp
inc
or
les
mov
push
jne
add
mov
mov
nop
sysret
and
xlat
test
das
inc
sub
or
or
ja
test
test
mov
inc
add
or
mov
leave
sub
and
xchg
or
inc
and
xor
xor
sbb
and
and
iret
test
hlt
and
repnz
inc
gs
lock
sub
adc
xchg
pop
sbb
push
retf
out
or
movs
or
inc
shl
or
mov
push
test
pop
and
in
and
rcl
mov
pop
sbb
pop
jmp
inc
arpl
push
sub
mov
pop
jnp
add
adc
jmp
mov
or
enter
enter
cmp
sbb
arpl
pop
fisttp
push
int
mov
out
popf
xor
repz
cmp
add
es
xlat
mov
xchg
sub
push
mov
inc
repz
add
mov
int3
data16
stos
sbb
mov
(bad)
jg
rcl
data16
sub
add
add
dec
mov
fld
cdq
push
and
dec
std
mov
push
inc
ss
stos
xchg
adc
pop
(bad)
js
jp
sti
ret
cmp
mov
movs
bound
test
stos
repz
or
jmp
iret
sub
add
ja
mov
add
fidiv
(bad)
and
outs
and
add
and
and
jno
push
inc
pop
sub
or
cmp
or
stos
(bad)
sub
sub
shl
les
push
scas
pop
xor
sbb
pop
and
push
mov
rcr
mov
lds
ret
push
adc
pusha
or
stos
add
bound
add
nop
cmp
add
ss
icebp
xor
dec
push
mov
loopne
pop
mov
or
xor
jge
dec
sub
add
mov
mov
push
sar
and
data16
push
xor
add
int
cmp
xor
int
xor
retf
mov
sbb
sbb
or
das
add
mov
dec
jp
or
stos
popa
xor
popa
push
inc
mov
aam
mov
mov
sbb
out
xlat
test
fisub
adc
and
jne
retf
mov
add
inc
shl
mov
fild
iret
ins
cwde
je
test
shr
jmp
push
leave
test
jns
and
and
out
pop
adc
adc
adc
or
and
jp
and
mov
js
or
fwait
push
adc
adc
jmp
add
leave
cmp
lea
cmp
xor
or
add
mov
xor
nop
lods
stos
call
mov
vcvtps2dq
jmp
pusha
or
jge
shr
push
adc
or
sub
and
cdq
mov
and
stos
or
or
xor
inc
stos
arpl
cmp
xchg
inc
test
ja
add
mov
dec
pop
sbb
add
xchg
and
adc
bound
bound
pop
int3
sbb
in
pop
sbb
dec
cmps
adc
xor
sub
xchg
inc
add
bound
mov
int
popf
mov
arpl
pop
inc
xor
lds
xor
mov
adc
or
into
cwde
inc
enter
xor
pop
out
push
add
mov
sub
adc
ret
mov
mov
or
xor
or
inc
jno
leave
push
iret
add
cmp
loope
and
pusha
inc
mov
or
pop
iret
sub
xchg
inc
add
sbb
xor
fistp
imul
test
xchg
inc
add
mov
das
sub
xchg
inc
inc
adc
pop
xor
sub
das
fld
push
and
sti
adc
cwde
inc
xor
adc
xor
popa
mov
inc
and
inc
push
inc
(bad)
dec
aaa
add
dec
shr
sub
in
pop
sub
xchg
push
mov
add
stc
sub
or
loop
jnp
jmp
repz
test
dec
push
xor
adc
pop
inc
(bad)
repz
push
pmaxub
mov
pop
sbb
dec
fwait
cmp
shr
and
and
int3
adc
push
sbb
pop
leave
and
sbb
dec
inc
loope
inc
jne
enter
sub
add
sbb
nop
dec
xchg
cmovne
sub
sbb
xadd
xor
add
push
add
retf
das
dec
js
nop
sar
into
or
sbb
inc
nop
and
dec
jns
sbb
pop
cmp
test
dec
add
xor
and
int
inc
pop
imul
xchg
sbb
push
adc
xor
rol
add
in
jg
repz
ror
dec
push
add
dec
adc
sub
popa
push
shl
mov
pushf
jnp
xchg
and
pop
sub
js
dec
xor
dec
stos
push
(bad)
jno
and
mov
std
adc
mov
and
and
or
sbb
dec
jae
cmp
ja
test
nop
ja
or
out
xchg
mov
pop
out
sub
pop
fst
movs
loopne
jmp
gs
sar
ja
sbb
bswap
add
or
xor
adc
inc
jecxz
adc
and
or
add
add
inc
jmp
mov
pusha
ret
inc
or
adc
mov
xor
mov
dec
sbb
sub
or
sub
sub
sbb
push
add
int
sbb
add
mov
adc
mov
rcl
push
or
add
lds
push
lock
or
sub
jge
(bad)
pusha
adc
repz
inc
pusha
inc
aam
mov
dec
das
xlat
xor
jnp
mov
dec
loop
out
adc
dec
or
test
push
aad
push
imul
mov
jo
mov
or
rcr
loopne
nop
in
rcl
or
out
add
data16
inc
sub
or
adc
push
shl
or
loope
gs
cmp
dec
cmc
pop
push
adc
add
and
add
push
cmp
and
dec
sub
xlat
and
cmp
sub
pop
or
pushf
inc
ss
push
xor
std
adc
mov
push
rol
xor
xchg
fld
mov
or
sub
scas
jmp
mov
or
inc
ror
les
pusha
dec
jecxz
es
and
popfw
ret
cdq
or
int3
push
sub
add
cmp
or
sub
xor
push
or
mov
aaa
xchg
xchg
add
adc
xor
fidivr
or
mov
adc
call
aaa
mov
xor
mov
inc
inc
sub
mov
fwait
xchg
mov
sub
sbb
push
outs
pop
repz
and
rep
add
xor
add
xor
cmp
mov
mov
test
lods
xchg
(bad)
or
or
or
dec
jp
pop
add
sub
xor
and
add
cmp
sbb
js
jp
ja
inc
adc
mov
push
add
mov
add
mov
std
pop
mov
inc
dec
pop
adc
mov
add
and
adc
sbb
sbb
sub
stos
jmp
inc
xor
sub
mov
adc
(bad)
jno
xchg
push
mov
sub
xchg
sub
jns
test
xchg
mov
add
outs
and
add
inc
add
add
jge
aam
push
pop
jmp
mov
gs
pop
out
jmp
xor
push
push
inc
pop
in
lea
stos
or
and
and
adc
loopne
xchg
sub
add
xor
or
imul
fimul
pop
cmp
adc
xchg
inc
ret
xchg
adc
cs
mov
adc
mov
add
pop
sub
inc
mov
push
cmp
xor
call
mov
arpl
test
xchg
xchg
mov
shr
inc
jge
xchg
dec
in
add
sti
add
nop
adc
movs
mov
mov
fst
cwde
inc
sub
sub
fwait
clc
lods
mov
adc
cwde
push
dec
sub
inc
popa
inc
ins
inc
ins
sbb
lods
fiadd
leave
jg
leave
sbb
push
add
js
add
inc
xchg
pop
add
int
imul
nop
js
out
imul
xchg
cmc
cdq
sub
mov
cmp
repz
add
push
int
nop
ins
pop
jge
dec
sub
not
outs
sbb
test
cmps
add
or
push
xor
out
jns
call
adc
lea
jns
aas
pop
not
pop
adc
and
loopne
push
lds
add
and
pop
or
fs
adc
pop
mov
add
sbb
dec
push
mov
xor
adc
push
and
ret
mov
inc
mov
sub
nop
adc
inc
outs
sbb
add
pop
jge
add
ret
mov
adc
dec
and
adc
aaa
movs
push
dec
or
test
mov
add
xor
adc
mov
xor
and
adc
dec
adc
add
mov
daa
cmp
adc
adc
retf
jns
retf
(bad)
push
jno
int
dec
div
pop
push
pop
mov
sbb
in
or
xchg
jg
popf
test
mov
nop
mov
push
push
lds
xchg
pop
xlat
sbb
sbb
test
or
dec
sbb
xchg
mov
push
xor
or
in
add
es
inc
adc
push
push
or
shl
push
sbb
adc
cwde
dec
add
inc
and
sbb
or
jg
pusha
sbb
and
xor
js
mov
pop
stc
push
xchg
adc
adc
or
aaa
inc
ret
cmp
mov
or
adc
pop
std
xchg
mov
icebp
jmp
js
pop
sbb
and
inc
shl
daa
add
mov
rol
or
call
pop
dec
adc
xchg
jno
mov
inc
das
inc
mov
adc
pop
adc
xor
inc
iret
mov
(bad)
jae
cmp
inc
popf
adc
push
mov
inc
stc
aaa
fst
cwde
aad
xchg
and
lds
push
fistp
lahf
and
inc
mov
xor
pop
ins
adc
push
loope
inc
or
nop
or
pop
or
sub
and
ja
and
and
stos
ror
adc
push
out
or
mov
out
inc
sub
dec
pop
dec
or
mov
retf
mov
ror
nop
push
adc
dec
mov
push
daa
mov
addr16
call
loop
aaa
add
dec
das
aaa
sub
push
popf
jne
mov
cmp
stos
mov
mov
add
add
xor
das
jmp
test
push
icebp
les
inc
push
dec
test
aam
or
or
xor
add
xor
das
popa
outs
aaa
xchg
adc
mov
inc
dec
and
mov
xor
or
rol
or
mov
and
sub
add
dec
and
rol
rol
inc
or
fs
aaa
stos
and
jno
ja
dec
stos
mov
cmp
fld
add
popa
pop
cwde
dec
inc
add
add
xchg
xor
ret
sub
loop
add
pop
xor
loop
adc
nop
test
and
or
mov
(bad)
jne
loopne
fisub
xchg
dec
xor
pusha
adc
fst
test
stos
mov
popa
adc
das
dec
dec
loop
pop
sti
and
dec
push
xchg
mov
adc
cmp
lds
ja
push
inc
sub
inc
scas
pop
push
adc
sub
cdq
push
adc
pop
or
stos
inc
jns
aam
pop
xchg
inc
adc
lods
or
mov
push
test
dec
lds
les
and
inc
xchg
rol
aad
mov
pop
rol
pop
sub
xchg
push
std
dec
xor
jl
add
sbb
inc
pop
push
cmp
add
pop
imul
mov
jne
mul
int
sbb
dec
test
iret
es
add
mov
sub
adc
pop
mov
xor
xor
push
xor
test
xor
add
dec
and
and
mov
cmps
mov
sub
add
jp
add
and
mov
inc
push
jno
adc
inc
adc
mov
jno
inc
add
xor
pop
ja
add
push
inc
sub
xchg
xchg
aas
cmp
sub
mov
add
xor
push
xor
push
retf
mov
xchg
retf
repz
mov
add
rcr
leave
mov
add
in
movs
js
call
js
pop
xor
inc
xchg
adc
inc
jmp
add
and
inc
xlat
sub
dec
xchg
popa
jno
mov
in
fst
outs
pop
imul
cmp
adc
or
test
in
xor
daa
mov
add
mov
add
xor
sbb
xchg
and
xor
cmps
adc
mov
imul
push
add
pop
xor
inc
add
or
xchg
dec
dec
repz
sub
xchg
nop
xor
or
repz
call
js
lea
jno
xchg
adc
dec
or
push
daa
sub
pop
mov
jmp
add
inc
or
push
mov
and
sub
xor
loopne
jmp
jge
call
arpl
dec
mov
add
ret
test
jno
adc
pop
popa
imul
lods
aaa
jne
pop
inc
inc
and
cmps
add
adc
aas
push
add
mov
pop
nop
add
sub
mov
or
push
leave
repz
mov
inc
sub
pusha
dec
sub
adc
addr16
add
test
inc
xor
dec
out
mov
fnstsw
sar
dec
adc
add
pop
(bad)
jnp
cmp
cmp
icebp
ins
lahf
mov
cmp
shl
xchg
inc
push
inc
adc
adc
and
stc
sub
inc
inc
dec
or
int
int
xor
adc
push
mov
or
push
sbb
push
add
in
sub
inc
add
rol
inc
cmp
fild
add
xor
test
or
adc
mov
adc
mov
add
popw
pop
popa
mov
push
loopne
cmp
inc
sahf
xchg
mov
xor
cmp
mov
dec
xchg
or
fwait
leave
add
cmp
push
sti
push
and
inc
sub
xchg
push
and
xor
les
scas
pop
mov
data16
out
and
adc
lods
add
pushf
es
adc
test
arpl
fwait
ret
test
and
push
adc
push
add
ins
push
repz
nop
add
xchg
xchg
sub
mov
jmp
and
push
imul
pusha
sbb
shl
sub
mov
adc
cwde
(bad)
jmp
adc
xchg
add
scas
sbb
or
sub
data16
inc
fnstenv
nop
jg
lds
test
push
pop
dec
test
and
jns
es
bound
dec
add
aaa
aam
push
or
aas
sar
icebp
dec
in
lods
or
and
mov
pop
aam
ja
or
push
icebp
(bad)
dec
mov
push
jo
popa
inc
sub
cmc
mov
test
cmp
xor
leave
or
pop
xor
mov
xor
dec
sbb
inc
xor
and
inc
push
mov
pop
(bad)
das
push
or
and
add
or
ins
inc
shl
push
ja
push
sub
adc
inc
add
jmp
push
bound
outs
push
push
cdq
cmps
fwait
push
int3
or
shl
out
xor
xlat
stos
dec
xor
jno
add
mov
dec
pusha
add
inc
adc
mov
imul
cmc
inc
rol
fbld
and
imul
push
rcr
sbb
ror
outs
push
and
sti
add
adc
xchg
xor
and
ja
add
and
loopne
push
push
mov
jmp
push
or
sbb
adc
ja
das
gs
and
ja
or
fs
dec
adc
mov
inc
adc
popa
and
adc
add
adc
aaa
test
shl
dec
test
scas
add
mov
js
mov
movs
and
jnp
or
adc
inc
sub
mov
adc
add
lahf
add
xor
mov
add
and
mov
imul
mov
leave
out
pop
or
sbb
mov
sysexit
lods
add
inc
inc
test
push
push
add
pop
dec
adc
add
call
adc
lods
cmp
inc
add
adc
movs
test
mov
and
and
sub
pop
add
sar
xchg
inc
inc
sub
cmp
(bad)
popf
sbb
test
cdq
repz
cmc
adc
mov
dec
dec
add
jmp
or
outs
mov
xor
xchg
xchg
sub
or
rol
cmps
cmp
inc
push
mov
aas
xchg
xor
add
inc
ins
add
int
test
call
xchg
inc
push
das
push
xor
adc
popa
push
dec
jge
out
cmp
or
inc
xor
pop
shl
outs
sbb
test
je
lahf
dec
lock
add
and
nop
sub
adc
xchg
pop
pop
dec
mov
or
stc
pop
cmp
mov
inc
add
popa
pop
or
adc
add
fwait
inc
arpl
mov
adc
xor
push
adc
and
enter
js
or
sub
inc
pop
aam
push
outs
sar
jno
mov
add
push
das
add
pop
shl
sub
inc
stos
es
mov
xor
test
xor
xor
adc
out
test
sub
test
popf
sub
add
daa
outs
add
das
push
int
mov
or
xor
jmp
adc
push
push
xor
test
cmp
jg
loope
int
sbb
mov
aas
mov
pop
sbb
xchg
xor
mov
jge
push
xor
es
inc
cdq
xor
movs
mov
aaa
dec
pop
push
pushf
jp
mov
push
xor
rol
sbb
push
sub
jge
ret
push
pop
das
aas
das
and
mov
scas
pop
mov
pop
inc
pop
jmp
popa
adc
mov
fild
mov
sub
add
or
outs
push
pop
add
mov
dec
mov
pop
je
es
add
ss
cmp
xchg
sub
pop
mov
sbb
dec
and
ins
inc
fwait
xor
arpl
fiadd
jmp
repz
and
add
cmp
inc
xor
cmp
popa
fldenv
sti
out
push
or
and
push
or
xchg
leave
and
jne
and
and
and
and
sub
shr
adc
mov
sub
ret
ss
xchg
dec
cmp
js
pusha
mov
cmc
and
retf
(bad)
cdq
mov
repz
jae
inc
leave
cwde
inc
leave
push
mov
sub
or
inc
loopne
ret
pop
push
mov
(bad)
das
inc
or
xor
xchg
fist
xchg
inc
cmps
sub
jg
mov
retf
inc
xor
xor
cmp
psraw
add
cmc
pop
sbb
dec
push
adc
sub
int
or
mov
and
add
nop
adc
xchg
lock
or
adc
pop
jne
test
push
dec
loop
or
xor
aaa
push
adc
add
and
adc
das
and
jno
scas
bound
inc
popf
ja
or
scas
add
or
mov
sub
adc
call
cmp
fisub
adc
mov
mov
adc
add
pusha
inc
xor
add
xchg
add
adc
(bad)
xor
sub
call
dec
or
mov
scas
fld
lods
cmps
pop
jmp
jmp
popf
mov
int3
es
add
neg
pop
cmp
mov
fs
dec
inc
aaa
xor
cli
xchg
stc
inc
outs
inc
mov
add
sub
xchg
inc
sub
xchg
push
xor
daa
dec
push
xor
in
push
add
and
xchg
rcl
gs
bound
cmc
pop
mov
jmp
sub
sub
dec
cmps
push
inc
call
daa
sbb
push
adc
mov
bound
push
dec
jo
addr16
pmullw
enter
jge
push
inc
pushf
adc
ret
sbb
fwait
adc
std
push
xchg
inc
popf
xor
cmp
inc
in
ret
xor
push
dec
cs
in
arpl
wrmsr
add
jmp
dec
adc
or
sub
xor
xor
or
cmps
mov
shl
add
cmp
sbb
(bad)
call
adc
psraw
cmp
cmc
mov
sub
jl
jae
inc
and
jge
push
pusha
push
out
inc
sub
mov
mov
jnp
pop
push
rol
inc
fst
fsubrp
int
pop
xchg
das
xlat
fwait
adc
xchg
add
pop
leave
inc
ja
or
and
and
push
pop
out
loopne
test
mov
inc
out
inc
les
lahf
loope
adc
pop
pusha
les
xor
add
mov
and
aaa
xor
and
pop
popa
xchg
adc
and
sub
and
add
xor
sbb
imul
bound
inc
rcr
jnp
inc
inc
imul
test
fisub
dec
push
fnstsw
xor
xchg
or
or
sbb
not
in
xor
cmp
jge
bound
shr
sub
sub
or
nop
mov
movs
and
mov
shr
push
or
and
cmp
xor
int
fnstcw
or
add
aad
pusha
add
repz
outs
dec
sbb
pop
xor
inc
inc
mov
dec
std
jge
pop
sbb
inc
add
adc
inc
and
inc
push
icebp
mov
xor
adc
in
adc
inc
stos
mov
int
fbstp
and
adc
mov
dec
and
pop
mov
add
mov
adc
in
gs
xchg
adc
and
sbb
sbb
(bad)
dec
cwde
push
shl
rol
dec
ss
add
add
cmp
push
add
add
push
das
push
xchg
inc
rcl
mov
call
push
pop
inc
ret
xor
ror
mov
mov
sub
int
or
fucomip
lock
fucomp
dec
dec
add
call
shr
(bad)
or
and
cmc
lods
and
movs
lea
mov
es
adc
dec
sub
mov
and
inc
ja
and
loope
adc
es
mov
mov
mov
add
jns
xor
pop
dec
adc
push
ins
mov
xchg
fwait
or
sub
lods
sti
dec
add
cmc
shl
or
mov
addr16
push
and
and
push
sub
push
xchg
sub
gs
dec
jnp
ja
lods
mov
xchg
xor
loope
inc
xor
mov
and
xchg
inc
adc
xor
sub
pop
sub
and
aas
dec
push
mov
pop
sbb
inc
or
(bad)
fldcw
adc
or
int
mul
or
outs
add
push
add
fwait
ror
push
mov
sbb
sub
mov
mov
aaa
ins
out
lock
push
(bad)
in
lahf
repnz
bound
mov
outs
enter
call
addr16
mov
add
xor
inc
imul
dec
push
add
and
add
sub
es
jmp
xor
jno
mov
and
test
out
cmc
popa
leave
retf
data16
cmc
push
add
xchg
adc
add
outs
mov
or
test
je
arpl
xor
fxch
or
mov
add
mov
stc
fstp
stos
add
adc
inc
inc
aas
sub
sbb
cwde
ins
pop
dec
mov
adc
sub
jnp
add
and
icebp
lahf
retf
mov
add
movs
push
sbb
add
dec
jmp
icebp
inc
xor
int
js
call
test
or
sub
xchg
pop
fldl2t
test
dec
mov
pop
inc
inc
int3
add
imul
cmc
xchg
rcr
inc
setp
mov
adc
jae
call
push
jo
in
xor
scas
push
dec
jmp
sbb
or
stos
sbb
xchg
shl
popa
xor
fistp
inc
outs
(bad)
test
and
push
or
jge
push
mov
ja
stos
jp
das
pop
jae
jmp
add
enter
xor
addr16
movs
or
inc
adc
inc
add
jo
icebp
push
cmp
in
add
addr16
push
xor
or
dec
leave
jnp
inc
lock
or
test
mov
call
cwde
hlt
data16
mov
icebp
test
and
inc
sbb
inc
and
aaa
retf
push
cmc
adc
or
hlt
cwde
adc
and
sub
repz
ret
mov
popf
or
pop
dec
push
xor
and
dec
adc
xor
adc
push
aaa
inc
dec
add
fisttp
mov
pop
and
cmovbe
adc
push
xor
rcr
mov
dec
call
push
sar
add
popf
cwde
xchg
add
scas
xor
or
add
jmp
xor
movs
or
adc
add
hlt
pop
pusha
cmps
adc
adc
movs
xor
dec
pop
xchg
inc
add
sub
data16
or
cdq
sbb
push
mov
fiadd
bound
test
inc
inc
add
mov
cmp
xor
mov
push
stc
fnsave
jge
aaa
mov
adc
mov
inc
in
mov
cmps
fbstp
aaa
pop
xchg
nop
or
mov
aam
or
xor
loopne
jg
int
or
in
(bad)
fild
addr16
xor
mov
inc
add
mov
add
or
test
xor
and
inc
movs
gs
test
dec
int
dec
shl
push
xor
add
and
and
frstor
or
mov
fwait
shl
xor
adc
add
stos
jmp
loope
xor
push
shr
xor
inc
iret
and
mov
gs
push
dec
pop
aad
cmps
mov
fld
cmc
push
ret
xchg
inc
aad
jp
xchg
outs
pop
cmp
adc
popf
nop
push
or
outs
xor
inc
shr
lds
test
xchg
dec
out
aad
add
popf
mov
dec
and
aaa
cmp
mov
aaa
adc
loop
xchg
jmp
arpl
sub
and
xor
add
mov
pop
test
push
out
nop
cmp
bts
push
push
adc
jne
and
push
pushf
pop
adc
ret
cmp
and
xchg
adc
inc
inc
loope
imul
std
inc
movs
les
cmp
dec
pop
imul
adc
shl
mov
aaa
add
loope
mov
retf
fisttp
movs
cmp
outs
or
and
xchg
push
(bad)
cdq
cmp
movs
lods
ficomp
dec
and
mov
lea
(bad)
xchg
adc
movs
(bad)
mov
sbb
and
test
dec
or
out
or
js
jp
xchg
adc
data16
sbb
and
(bad)
aaa
mov
cmp
cmp
add
ret
adc
fwait
dec
cwde
sbb
sbb
call
sub
mov
jae
dec
xor
cmp
sbb
jmp
inc
xor
xchg
jae
xlat
adc
and
add
push
shl
cmp
push
repnz
xor
(bad)
ins
pusha
inc
leave
cvtps2pi
jmp
mov
aas
xchg
mov
ss
add
jnp
mov
or
jmp
sti
cmps
test
push
xlat
inc
add
sub
std
sti
pop
xor
pop
jne
dec
push
int
int3
lods
dec
das
out
fidiv
and
push
cmp
push
cmc
ficomp
jmp
mov
ret
rol
icebp
xchg
lds
cmp
ds
jge
xchg
inc
dec
bound
xor
pop
add
jmp
imul
xchg
jae
cwde
adc
sbb
sti
das
mov
inc
add
std
bound
mov
aad
or
dec
iret
in
jmp
inc
inc
mov
dec
idiv
xor
(bad)
int
mov
and
test
daa
inc
retf
inc
call
ret
int
adc
mov
dec
loope
icebp
arpl
jns
and
es
mov
or
or
test
jno
or
(bad)
aaa
jae
int3
fsubrp
or
push
(bad)
popa
inc
fistp
inc
lds
mov
test
xor
mov
sets
fcmovnu
mov
pop
or
cmp
aaa
cmp
aad
das
add
mov
movs
aaa
xchg
adc
add
stos
fldenv
adc
inc
movs
int
leave
xor
int
ja
ficomp
enter
aas
adc
add
xor
sbb
bound
pop
or
mov
dec
mov
and
inc
xor
cdq
jns
xor
sbb
shl
and
rol
test
mov
xchg
mov
push
ja
push
cmc
and
js
and
js
mov
test
pop
dec
dec
push
add
movs
cmc
rol
add
fwait
xor
push
adc
xchg
lds
mov
xor
data16
repz
xor
xor
fisubr
es
cmp
pop
adc
xor
shl
(bad)
neg
or
test
push
dec
stos
fnstcw
dec
out
lahf
not
add
adc
sti
dec
push
mov
inc
xchg
add
and
ret
cmps
imul
xor
call
xchg
mov
cmps
mov
adc
aad
jns
and
add
xlat
add
add
ss
xlat
push
jns
inc
or
xor
stos
cmp
popf
xor
inc
ror
and
inc
lahf
popa
jg
or
mov
mov
xor
sbb
pop
adc
xchg
add
inc
mov
add
cmp
mov
or
add
and
shr
in
sbb
imul
and
mov
ret
pop
adc
xchg
inc
mov
or
repz
(bad)
lods
fiadd
inc
xor
jne
dec
call
sti
int
adc
and
fadd
inc
adc
xor
add
or
or
add
xor
mov
shr
sub
inc
cmps
sti
push
or
pop
shl
sbb
lods
jne
adc
movs
shl
inc
jb
scas
lods
loop
lods
mov
les
lahf
int3
data16
pop
outs
imul
call
(bad)
mov
pop
mov
shl
or
movs
aaa
xlat
add
cmp
fld
and
imul
nop
and
test
repz
mov
jge
mov
pop
inc
add
pop
cmc
add
push
dec
ins
lds
shl
add
mov
adc
std
and
cwde
inc
mov
add
fwait
adc
dec
inc
sbb
aam
xchg
ja
std
pushf
xchg
or
mov
test
mov
and
cmp
xchg
daa
movs
aaa
and
ror
push
in
mov
xor
and
test
push
xor
xchg
pop
shl
or
add
(bad)
and
loop
adc
jg
or
adc
loope
xor
push
std
xor
sub
inc
add
pop
push
shl
out
aam
inc
das
cmp
fwait
aad
push
ja
push
or
or
out
dec
pop
add
cmps
nop
inc
adc
sub
pusha
push
adc
inc
mov
inc
mov
loope
sub
adc
repz
add
sub
add
sub
cmp
das
mov
xchg
gs
pop
xor
das
shl
aam
xchg
cmp
retf
data16
inc
dec
pop
dec
or
xor
sbb
dec
aad
sub
or
jg
ret
movs
js
fldpi
jg
sub
ret
xor
push
mov
popf
or
jno
and
dec
mov
inc
xor
mov
jae
test
dec
add
fwait
add
and
jne
test
add
sbb
jnp
int3
pusha
or
(bad)
inc
or
inc
inc
sub
adc
cmp
mov
mov
sub
or
mov
adc
js
cmps
xchg
inc
adc
or
and
cdq
xor
popa
retf
test
xchg
xchg
mov
arpl
mov
adc
push
inc
test
or
retf
fld
sbb
push
cmp
or
(bad)
popa
shl
fld
add
cmps
pextrw
sbb
inc
out
adc
add
inc
scas
arpl
add
inc
dec
js
loopne
mov
cmova
and
push
or
inc
das
lds
ret
sub
xor
or
mov
add
imul
retf
gs
icebp
dec
adc
dec
(bad)
xor
inc
pop
je
and
call
mov
js
or
push
in
inc
sub
dec
icebp
aas
adc
mov
and
inc
add
mov
mov
push
fnsave
add
mov
fidivr
cmp
mov
or
pop
add
mov
test
jmp
aaa
lods
cwde
jno
inc
and
arpl
mov
pop
mov
inc
or
push
in
mov
push
std
int
les
cwde
jg
mov
mov
mov
test
push
sub
push
test
dec
cmp
xchg
leave
or
xchg
data16
lahf
retf
loope
xchg
cmp
xor
mov
or
xor
inc
adc
xchg
inc
int3
pusha
jns
mov
or
lea
or
nop
das
cmp
sub
aas
mov
dec
adc
xor
jns
push
xor
xor
pop
sbb
mov
addr16
xor
jge
xchg
push
adc
xlat
and
test
sbb
or
and
inc
dec
pop
stos
or
xchg
push
int3
xchg
add
jecxz
add
adc
out
pop
push
shr
dec
adc
mul
pop
pop
iret
inc
cwde
adc
ins
add
add
xor
sub
ins
pop
js
mov
push
lds
mov
sub
xlat
push
push
or
inc
add
and
test
xor
arpl
cwde
inc
and
sub
sub
scas
inc
push
jmp
cmps
sub
add
mov
or
cmp
inc
(bad)
cdq
sar
mov
xor
or
mov
jp
pop
sub
mov
adc
js
mov
mov
mov
out
xor
test
add
and
lds
mov
mov
fwait
xor
call
jno
pop
dec
xor
adc
mov
nop
imul
es
sub
dec
sbb
mov
test
adc
push
inc
mov
sbb
pop
dec
inc
mov
mov
xor
or
sbb
popa
ins
stc
sbb
or
dec
dec
out
popf
bound
cmc
mov
pusha
push
(bad)
aaa
bound
or
lds
pop
push
outs
rol
cdq
dec
xchg
push
xor
sub
mov
xchg
adc
xor
loope
loope
leave
sub
adc
inc
les
aam
add
sub
sbb
imul
call
and
sbb
xor
cmp
and
pop
push
mov
or
add
xchg
es
dec
retf
add
das
stos
gs
mov
stos
cmp
inc
inc
in
push
rol
sub
nop
adc
lock
add
popf
xor
xor
jae
cmp
fwait
adc
fldenv
xor
repz
pop
pop
xchg
add
mov
and
push
xor
retf
mov
rol
and
add
xlat
inc
dec
cmp
pop
cmp
xchg
push
mov
jmp
jns
adc
test
leave
inc
adc
cmp
xchg
outs
sbb
push
leave
cmc
aaa
xor
loopne
dec
(bad)
out
mov
pop
dec
es
or
jnp
bound
popf
icebp
push
inc
xchg
sbb
xor
adc
inc
inc
out
or
sub
imul
push
hlt
pop
cdq
rol
es
dec
shl
lds
dec
jp
sub
fwait
mov
cmp
xor
sbb
dec
inc
add
stos
aaa
xchg
xor
add
gs
add
shr
dec
pop
mov
mov
into
and
inc
sbb
and
push
push
inc
sti
cmps
mov
pop
shr
jge
and
or
dec
aam
xlat
adc
icebp
pop
mov
and
mov
xor
push
cdq
mov
pop
jne
or
inc
sbb
rcl
sub
push
xor
(bad)
fist
add
loope
inc
jb
cmovbe
cwde
out
movs
popa
dec
je
xor
xlat
arpl
push
in
adc
or
inc
xor
sub
mov
inc
xchg
and
sub
popa
xor
or
xchg
inc
xchg
push
imul
shl
add
and
xor
pusha
inc
int
aad
add
or
lods
fst
push
xchg
mov
push
or
retf
das
(bad)
jmp
adc
add
and
add
push
or
cmps
jae
add
movs
dec
mov
add
pop
mov
lods
xchg
shr
bound
dec
adc
xchg
lds
sbb
idiv
xchg
xlat
ss
xor
aas
fnstcw
inc
adc
test
sub
xchg
repnz
xchg
inc
dec
call
add
pop
lock
dec
ja
xor
inc
push
pop
loop
scas
popf
xchg
movs
and
sub
add
pop
dec
ja
adc
jp
sub
and
push
jo
mov
jb
inc
ins
cmp
out
pop
push
mov
bound
sbb
adc
sti
ss
or
or
mov
test
test
add
out
xchg
adc
jns
lods
mov
mov
push
mov
outs
push
leave
cwde
in
cmp
rol
add
pop
pop
ss
add
adc
adc
add
add
or
push
jae
or
jb
mov
stos
cmc
mov
aas
add
cmp
dec
nop
mov
(bad)
fistp
adc
push
adc
xor
adc
cmp
adc
push
push
mov
loopne
push
sbb
sub
mov
mov
sub
jns
adc
xchg
cmps
xlat
mov
push
sub
repz
movs
test
push
mov
xor
dec
sub
shl
retf
adc
stos
sbb
fwait
lahf
sub
push
inc
add
add
rcl
xor
call
and
adc
dec
push
mov
mov
stc
xor
mov
dec
retf
pop
xor
xchg
add
mov
or
push
je
dec
mov
add
imul
inc
jne
aad
shl
sar
test
pusha
and
mov
mov
and
popa
adc
adc
mov
mov
mov
test
pop
push
and
pop
sar
inc
xchg
pop
lods
mov
sub
or
push
and
xor
inc
repz
or
push
leave
jmp
imul
add
sub
hlt
fsubrp
retf
movs
add
outs
dec
add
sbb
repz
and
stos
add
cmps
or
mov
inc
hlt
es
push
push
(bad)
sbb
das
push
adc
inc
adc
push
and
sub
xor
iret
and
jns
inc
int
arpl
add
js
push
or
outs
inc
xchg
loope
or
cmp
adc
es
(bad)
inc
inc
test
(bad)
jmp
cmp
inc
jmp
mov
sub
inc
push
inc
or
sub
and
push
xor
call
jae
test
or
pop
inc
dec
and
mov
cmp
std
and
jne
or
push
popf
aad
enter
xchg
xor
shl
lock
ins
and
cwde
lds
add
js
int
lods
cwde
int
fisubr
inc
hlt
mov
and
pop
cmp
popa
pop
ja
mov
fwait
icebp
sbb
pusha
adc
pop
fidivr
test
and
adc
xor
out
fimul
mov
lods
and
sub
sub
es
jne
or
xor
pop
int3
loop
sub
aam
adc
das
sub
adc
sbb
xchg
inc
sbb
inc
jmp
std
aad
mov
or
mov
jp
imul
test
jmp
mov
inc
dec
add
push
adc
leave
and
js
movs
dec
or
or
adc
xor
std
dec
mov
inc
inc
js
cmp
outs
dec
jne
test
and
es
fld
adc
xchg
jecxz
add
dec
enter
ja
movs
or
mov
mov
inc
lods
xchg
or
stos
in
ret
inc
ja
dec
loopne
add
es
dec
mov
xlat
test
(bad)
lods
adc
and
shl
inc
adc
add
mov
stos
bound
arpl
add
inc
sub
xchg
push
popa
sub
enter
cmp
mov
and
pusha
jg
push
inc
xlat
icebp
movs
mov
lock
sbb
xor
push
inc
inc
pop
push
lock
mov
adc
ins
daa
aas
add
mov
adc
out
lea
dec
push
fldcw
push
inc
adc
dec
dec
in
pop
xchg
adc
test
mov
sbb
ror
jo
jns
dec
or
out
popf
mov
test
leave
or
sub
xor
mov
pop
inc
add
add
inc
add
add
movs
adc
and
dec
xor
jecxz
push
and
adc
add
test
cmp
test
dec
fisttp
sbb
and
cmp
int
mov
dec
js
adc
rol
jno
aaa
mov
or
movs
aaa
xchg
mov
mov
test
in
dec
xor
sar
or
cmps
ja
int
dec
push
cdq
(bad)
imul
rcl
arpl
shl
ret
call
outs
xor
int
pmullw
rcr
in
int
sbb
xlat
pop
fwait
mov
shl
pop
add
inc
inc
(bad)
sub
push
add
sahf
jns
addr16
sub
or
ret
and
aas
and
mov
push
add
stos
fwait
adc
inc
int
xor
aaa
sbb
dec
cwde
popf
jne
or
xor
push
jnp
fistp
mov
les
add
dec
xor
fs
imul
mov
sub
xchg
adc
mov
mov
xor
jne
pusha
movs
pop
mov
xchg
cmp
inc
or
mov
and
enter
bound
rcr
fldlg2
hlt
data16
add
mul
adc
or
mov
gs
sbb
std
addr16
leave
addr16
and
add
pop
jb
inc
lahf
xor
and
retf
inc
adc
data16
and
mov
mov
sbb
xchg
nop
and
inc
pop
out
add
es
pusha
xchg
movs
aaa
jg
sub
cmps
fnstenv
sbb
add
test
icebp
lea
adc
and
jmp
adc
push
add
xlat
and
mov
add
rol
add
mov
add
les
cmp
fldenv
outs
inc
add
cmp
and
adc
loop
ret
xor
inc
jg
xor
rol
or
sbb
mov
inc
adc
adc
inc
sub
dec
cmc
repz
add
or
mov
sbb
mov
and
cdq
xchg
adc
movs
and
mov
stos
mov
call
inc
or
in
xlat
xlat
cmp
sub
inc
out
mov
lds
cmp
mov
and
aaa
das
or
inc
les
xor
scas
push
ret
loope
test
inc
outs
and
mov
cmp
mov
sbb
ins
ret
pop
pop
mov
adc
or
xchg
xor
sbb
mov
lods
pusha
not
test
xor
jmp
popa
adc
cmc
add
pop
std
mov
arpl
xor
jnp
loop
movs
and
or
aas
adc
xor
jnp
sub
pop
dec
shl
add
shl
repz
test
aam
stc
mov
scas
shl
inc
jmp
add
jnp
pop
adc
aam
call
xor
inc
rol
xor
adc
test
xor
fs
aad
push
mov
adc
inc
rol
popa
gs
lea
pop
les
inc
shl
adc
push
inc
add
xor
stos
and
popf
icebp
inc
ins
fnstcw
(bad)
jnp
or
sbb
mov
inc
dec
js
sub
bound
xor
xor
push
rcr
retf
pop
test
mov
sbb
inc
sbb
mov
fst
adc
mov
inc
rcl
or
xchg
lds
or
mov
cmp
fist
cwde
adc
inc
mov
add
test
test
jg
mov
adc
shr
mov
or
xchg
lds
and
cmc
fld
or
sub
or
add
dec
lods
iret
sbb
(bad)
mov
test
leave
add
pop
xchg
dec
(bad)
and
adc
into
test
inc
or
ror
add
test
arpl
push
inc
ret
adc
dec
nop
push
lods
inc
inc
inc
adc
sbb
sbb
inc
adc
dec
inc
ins
mov
lods
xor
inc
xchg
inc
rcl
xor
inc
mov
iret
inc
push
(bad)
pop
adc
push
jo
retfw
xchg
mov
aad
imul
mov
leave
add
push
mov
dec
and
push
aam
ja
or
sub
cwde
inc
cdq
sub
sub
push
inc
xor
inc
les
out
pop
ret
dec
mov
cmp
push
and
xor
shl
sbb
adc
pop
pop
in
dec
fistp
add
pop
mov
adc
lock
mov
mov
ins
les
xchg
das
or
pop
aaa
mov
push
test
rol
or
sub
mov
shl
stos
es
mov
sbb
and
xor
push
sub
sub
pop
jmp
pop
sub
stc
sbb
push
int
push
lds
int
xchg
add
jmp
push
leave
pop
loope
xor
jnp
dec
into
stos
and
inc
xchg
inc
fcom
ja
push
xchg
dec
pop
loope
push
ror
push
xor
popa
rol
pusha
nop
dec
inc
ror
mov
cdq
add
inc
(bad)
lods
bound
popa
adc
test
ss
adc
nop
add
push
add
or
xlat
dec
aam
push
in
ret
add
push
pop
add
fiadd
pop
dec
test
or
pop
add
iret
mov
mov
sub
fbld
ss
aad
js
push
pop
sub
add
add
das
inc
nop
test
push
ja
xchg
mov
icebp
and
out
int
xor
and
sub
or
out
ret
add
ret
adc
pushf
push
test
rol
cmpxchg
shl
jmp
js
pusha
inc
xor
xchg
jne
cmp
add
xor
test
jl
sub
inc
pop
mov
lds
mov
lahf
xor
jge
inc
xor
sar
and
add
push
leave
mov
xchg
loop
outs
xor
pusha
inc
int3
jmp
cmps
jg
adc
icebp
idiv
add
outs
pop
pop
leave
sbb
adc
jnp
add
xor
xchg
or
jp
or
pop
and
out
lds
unpckhps
shr
int
push
fnsave
sbb
mov
scas
mov
mov
adc
cmc
in
inc
rcr
or
adc
add
repnz
push
cdq
xor
inc
dec
js
push
xchg
sub
adc
mov
cmp
mov
push
rcl
hlt
sub
inc
dec
int
ja
inc
enter
inc
int
sub
mov
inc
in
and
arpl
push
lds
xchg
inc
jo
retf
push
push
push
inc
lock
or
jle
xor
int3
sub
xor
or
xor
int
dec
inc
inc
repz
dec
cmp
fwait
rol
popf
inc
push
xor
xor
xchg
add
sbb
dec
or
add
xor
or
fild
movs
test
inc
ror
hlt
mov
xchg
jmp
adc
sbb
mov
nop
mov
adc
test
mov
mov
jno
pusha
ret
mov
xchg
dec
scas
inc
pop
cmp
xchg
ret
or
sbb
adc
xor
mov
xor
push
cmp
add
mov
(bad)
pop
pop
inc
aaa
sub
add
adc
cmps
mov
test
stc
pop
movs
in
jp
int
and
add
mov
cwde
adc
sbb
sub
fwait
adc
dec
pop
adc
bound
test
xchg
popa
sbb
jno
sub
data16
and
inc
and
pop
sub
jmp
call
out
mov
dec
sub
lahf
add
inc
or
xchg
stc
xchg
sub
ret
and
rcr
fbstp
cwde
xor
jecxz
mov
inc
add
add
jnp
or
nop
leave
xor
out
sub
movs
test
inc
movs
or
call
pusha
or
dec
dec
inc
inc
and
add
adc
add
xchg
add
xchg
mov
std
loop
imul
loopne
movs
push
repz
nop
or
push
imul
mov
mov
jg
dec
add
aas
hlt
xchg
adc
push
movs
cwde
stos
xchg
xchg
adc
xchg
stos
fld
add
xchg
inc
add
pop
das
mov
fsubp
add
lods
(bad)
fnstenv
lods
push
out
movs
imul
mov
ins
shl
adc
retf
jmp
jae
or
shr
mul
popa
cmc
aaa
cmp
inc
rcr
aaa
push
push
jno
inc
aad
daa
cmp
inc
xchg
sub
or
xor
arpl
lds
dec
push
xor
inc
xor
and
add
push
xor
cmp
inc
inc
add
pop
and
adc
xchg
inc
push
fwait
xchg
inc
adc
lods
jmp
fisttp
ret
cmovae
add
js
das
add
add
push
daa
call
mov
xchg
sub
inc
xor
xor
pop
mov
xor
add
dec
sbb
out
cmps
sub
icebp
es
and
xor
adc
cmp
mov
adc
call
and
test
jne
adc
xor
or
xchg
xor
sbb
mov
mov
inc
imul
sub
shr
cdq
test
sbb
push
mov
inc
gs
and
push
xor
xor
sub
add
and
xchg
jge
rcl
sub
lods
call
dec
inc
pop
das
xor
mov
mov
jge
inc
int3
push
adc
sbb
outs
(bad)
inc
mov
ret
cmc
or
nop
inc
pop
inc
(bad)
movs
in
mov
jno
add
xor
and
das
adc
sub
popf
ja
mov
ss
push
aam
imul
push
xchg
xor
xchg
jecxz
or
sub
jno
call
dec
test
in
mov
adc
inc
dec
lahf
lea
inc
inc
cmps
adc
jne
leave
popf
adc
push
neg
or
loopne
jae
add
dec
sbb
test
inc
int
mov
sub
stos
cmp
inc
xchg
mov
fidiv
pop
sub
das
xor
add
loop
xchg
js
sbb
fwait
aad
dec
sbb
inc
or
outs
stos
pop
retf
sub
jno
xchg
aaa
bndstx
out
adc
adc
push
and
xchg
sar
stos
and
out
push
xchg
cmp
(bad)
rol
pop
ins
sub
pop
jge
adc
adc
jecxz
sub
sbb
lea
mul
lds
push
ss
aad
mov
popa
push
adc
movs
or
pop
xchg
pop
nop
bound
sbb
push
cmp
xchg
sbb
add
sub
mov
push
cmc
fstp
jge
xchg
inc
add
ins
imul
or
jecxz
adc
shr
xchg
and
xor
cwde
loopne
and
xor
pop
shr
xchg
xchg
arpl
and
and
imul
mov
inc
(bad)
ss
das
xchg
aas
adc
adc
push
pop
les
cwde
push
dec
mov
sub
inc
cmp
sub
xor
mov
add
push
gs
fiadd
jmp
test
and
xor
inc
pusha
add
dec
fmul
test
xor
jmp
nop
pusha
xor
and
mov
popa
xchg
jnp
loope
aad
mov
and
ficom
add
dec
popa
test
inc
and
push
xchg
call
js
stos
cmc
push
add
mov
or
sbb
and
add
les
fwait
mov
jp
sub
xchg
aad
jg
bound
(bad)
out
dec
bound
pushf
icebp
push
and
sbb
xor
pop
push
push
outs
add
adc
pop
push
test
and
fs
aam
pop
repz
or
lea
pusha
xchg
jno
mov
push
xchg
xor
mov
add
das
pop
pop
jns
es
cmc
movs
or
jae
add
push
pop
add
dec
iret
cmc
add
push
das
add
mov
and
adc
popf
or
adc
add
pop
rcl
imul
and
xor
push
add
mov
xor
lods
and
fwait
mov
loop
mov
lods
dec
or
xchg
adc
nop
sbb
adc
sar
inc
pop
dec
adc
adc
adc
and
shr
movs
dec
adc
push
cmp
fldenv
lods
mov
sbb
test
push
xchg
push
add
and
cmc
jne
rcl
adc
mov
sti
ret
add
adc
dec
push
mov
xor
jmp
or
inc
stc
pop
repnz
inc
add
add
inc
pop
and
adc
shl
sbb
xor
sar
sbb
adc
xor
xor
mov
add
add
or
pop
mov
push
pusha
xchg
test
xor
xor
xor
iret
and
out
xchg
adc
and
cmp
push
dec
inc
movs
push
cmps
mov
and
xor
shr
adc
test
jnp
or
fucomp
jp
in
(bad)
ja
xor
sbb
inc
add
sbb
imul
popa
dec
test
pop
xchg
jno
inc
call
sub
xchg
adc
shl
mov
xor
xor
aam
xchg
sub
inc
fadd
jmp
and
push
inc
adc
test
cmp
ret
sub
int
push
pop
xor
add
adc
fstp
aaa
and
popa
push
fldcw
(bad)
adc
adc
push
or
stc
mov
mov
or
mov
adc
xor
js
outs
or
push
iret
inc
sub
loope
mov
outs
inc
popa
add
or
outs
nop
adc
or
adc
jge
dec
imul
das
xchg
or
arpl
inc
imul
xor
cmp
and
inc
adc
and
adc
or
add
popa
adc
xchg
xchg
dec
sbb
pusha
inc
push
sar
add
dec
inc
xchg
sub
mov
gs
push
add
in
add
inc
hlt
add
in
dec
inc
inc
test
add
adc
xchg
or
dec
mov
push
push
add
retf
icebp
inc
mov
mov
dec
and
inc
fnstenv
or
and
imul
cmps
data16
and
int
mov
and
mov
and
(bad)
xor
xor
xor
test
push
mov
adc
jno
pop
adc
dec
xor
mov
inc
dec
bound
fild
jo
aad
cmp
stos
jne
es
mov
add
dec
push
rcl
test
pop
aaa
mov
lods
push
gs
add
sub
lods
add
aaa
add
mov
and
je
mov
aam
cmps
jg
add
imul
pop
xchg
mov
mov
dec
adc
nop
or
outs
pop
sbb
mov
fs
mov
and
add
jnp
aad
jns
(bad)
and
mov
outs
push
nop
movs
xchg
ja
add
xchg
bound
jg
lds
rcr
lds
mov
ret
or
lea
mov
dec
(bad)
mov
stos
dec
and
sbb
inc
cmps
cmp
mov
movs
xor
sub
adc
mov
or
push
retf
fwait
xor
daa
and
or
mov
int3
sbb
mov
outs
pop
outs
popa
inc
xor
cmps
sbb
imul
xor
(bad)
adc
mov
push
adc
and
mov
jne
shl
rcl
mov
sbb
dec
mov
push
test
inc
outs
and
sbb
add
add
push
inc
daa
dec
add
rol
(bad)
movaps
test
loop
or
sbb
mov
inc
adc
dec
adc
lods
mov
int3
and
mov
push
dec
loopne
dec
retf
pop
xor
and
dec
and
xchg
sub
or
das
aad
xchg
je
lahf
xor
push
push
mov
mov
add
mov
scas
test
push
and
xchg
add
iret
add
shr
push
mov
repz
and
or
sysret
push
sub
ret
retf
pop
adc
popa
jnp
sbb
xor
adc
cmps
xlat
inc
mov
rcl
adc
pop
dec
adc
dec
xor
add
xor
iret
scas
imul
xchg
sbb
ins
fld
push
rcr
xchg
and
call
lock
(bad)
iret
test
or
adc
sbb
xor
inc
sti
jns
pop
add
sub
mov
mov
outs
dec
cmp
mov
pop
cmp
mov
mov
xor
pop
add
call
icebp
aaa
add
sub
add
mov
sbb
xchg
test
shl
sbb
jns
dec
scas
fs
xchg
adc
jno
add
pusha
aaa
add
inc
lock
pop
inc
sti
xor
sub
cmps
test
add
mov
adc
and
push
sub
test
aaa
je
add
mov
call
xor
jne
das
syscall
dec
cwde
inc
sbb
dec
xchg
xor
xor
xchg
xchg
mov
cmps
mov
mov
daa
adc
pop
jne
xchg
es
and
sub
inc
xchg
pop
test
push
cdq
adc
add
test
push
or
xor
call
mov
retf
fld
xchg
jmp
mov
inc
xchg
mov
xchg
fnsave
fldcw
inc
jns
xor
inc
mov
adc
int
inc
inc
xor
es
inc
mov
mov
xchg
cmp
or
leave
and
inc
sbb
xchg
aaa
pop
add
data16
call
pop
dec
fistp
add
int3
gs
inc
mov
ror
mov
retf
and
xor
dec
sub
jecxz
mov
fwait
add
mov
gs
cmp
mov
add
ror
mov
nop
lods
pop
leave
or
adc
imul
mov
xchg
cmp
fs
xlat
sbb
mov
add
mov
jp
jae
fnstcw
ror
dec
outs
icebp
xlat
stos
fimul
arpl
popf
movs
gs
aad
dec
call
sbb
sti
sub
outs
(bad)
inc
inc
ss
lods
pop
outs
mov
aas
fnstcw
add
adc
outs
js
mov
adc
xchg
test
xor
leave
test
inc
adc
and
add
es
loope
rol
int
xor
sbb
test
setle
std
inc
mov
(bad)
dec
pop
or
and
mov
stos
aad
data16
dec
out
adc
leave
aas
pop
aam
add
push
adc
adc
lods
pop
nop
lea
push
mov
adc
test
int
or
popa
add
cmp
ja
mov
sbb
test
xor
retf
sub
shl
adc
dec
dec
aaa
pop
fiadd
add
dec
or
jmp
or
inc
dec
outs
pusha
popf
xchg
inc
std
jecxz
inc
adc
sub
sub
xchg
inc
popa
leave
push
ror
cmc
cwde
inc
in
add
(bad)
xor
pop
int
test
or
pop
leave
and
add
pop
jmp
xchg
inc
xor
or
push
push
push
and
and
mov
inc
adc
sub
cdq
ret
mov
xor
mov
pop
inc
adc
pusha
enter
add
add
mov
outs
pop
ret
das
addr16
adc
movs
(bad)
sbb
cmp
outs
cmc
add
pop
inc
and
inc
popf
xchg
popf
es
and
inc
test
and
pop
loope
aaa
mov
popa
or
jge
ret
mov
aaa
cmp
mov
icebp
jg
add
adc
int
mov
mov
sub
push
cmc
or
inc
push
sbb
jmp
mov
or
cmps
mov
jne
shr
dec
or
loope
dec
add
shl
push
add
shl
nop
push
add
sbb
mov
out
push
dec
pop
lahf
xlat
pop
add
and
cmp
adc
mov
ror
or
xchg
add
fiadd
jmp
add
add
sub
add
fwait
adc
cs
imul
add
stc
push
fnsave
cmp
add
sub
pusha
adc
or
cmp
scas
and
inc
sub
test
mov
adc
mov
add
test
dec
daa
inc
push
enter
movs
push
push
add
imul
jno
aas
in
cmp
fist
dec
cmp
iret
mov
bound
sub
ror
dec
dec
or
fwait
mov
xchg
mov
jmp
ret
jge
icebp
xchg
imul
inc
imul
rol
and
int3
ret
mov
mov
add
adc
add
push
mov
jne
and
dec
sub
je
or
sub
mov
mov
pop
adc
aaa
add
mov
and
mov
dec
aaa
jnp
mov
and
xor
fidiv
and
and
inc
sbb
push
inc
popf
inc
inc
inc
xchg
adc
adc
and
sub
and
inc
push
inc
scas
(bad)
xor
lds
push
mov
add
or
mov
aas
mov
inc
adc
jmp
stos
jmp
sub
and
inc
adc
aaa
add
xor
fistp
adc
data16
retf
wrmsr
sub
stc
adc
and
push
inc
push
cmp
mov
inc
xor
bound
or
jb
xchg
inc
and
stos
mov
das
lea
push
test
icebp
or
xor
and
xchg
pop
jae
adc
adc
mov
dec
aaa
and
aad
inc
aaa
xor
add
xor
xor
and
jg
xchg
jae
add
aas
xor
cmp
and
and
out
dec
lds
inc
mov
arpl
test
sub
or
add
dec
mov
pop
pop
add
rol
cmp
rcr
loop
int3
jne
aaa
inc
retf
and
jmp
add
mov
pop
add
xor
imul
mov
mov
add
scas
dec
add
call
dec
inc
inc
and
push
hlt
mov
sub
adc
ret
mov
pop
and
push
outs
adc
or
aas
lahf
xor
dec
push
push
mov
jmp
mov
loopne
daa
add
or
inc
daa
inc
add
mov
pop
aaa
mov
pop
lds
outs
sbb
pop
push
leave
mov
or
mov
dec
mul
xor
add
mov
fldenv
call
sub
js
mov
pop
test
and
or
mov
test
in
xor
sar
push
sub
push
add
pop
sbb
iret
fcmovnb
stos
mul
pop
pcmpgtw
stos
sbb
mov
retf
das
or
pop
cmps
test
and
adc
movs
jmp
xchg
in
dec
push
adc
ret
xor
add
shr
xlat
adc
and
lahf
mov
mov
ja
push
aam
gs
jmp
mov
or
data16
and
movs
in
xor
push
rol
icebp
test
mov
xchg
stos
jne
adc
repz
stc
xor
mov
jne
rol
adc
mov
inc
jp
and
push
lods
xor
push
fisttp
add
adc
mov
outs
jae
adc
and
xor
add
push
test
lds
and
and
inc
dec
add
cmp
movs
sbb
int
movs
mov
lock
inc
inc
inc
pop
push
lock
in
push
mov
inc
ret
pop
push
lahf
aad
push
das
and
jg
and
mov
dec
lahf
inc
das
pop
cmc
add
int
inc
cmps
cmp
xchg
inc
sub
inc
aam
aaa
mov
mov
pop
mov
inc
and
stos
pop
ret
and
inc
movs
inc
repnz
add
pusha
(bad)
sbb
pop
and
push
add
add
data16
xchg
das
ja
inc
dec
pop
sub
stos
push
push
mov
mov
or
jmp
(bad)
shl
das
pop
and
add
adc
sbb
sbb
xor
bound
arpl
jmp
hlt
add
add
mov
aad
popw
xor
adc
inc
mov
fst
xlat
retf
xchg
mov
cmp
adc
inc
pusha
push
and
pop
nop
xlat
int
sbb
aam
jae
and
call
cwde
adc
pop
aam
push
mov
xchg
adc
add
inc
int
add
cmp
movs
or
and
ja
das
fist
inc
push
sbb
pop
push
push
cmp
rcr
add
or
push
sub
push
and
shr
ja
stos
xchg
add
add
das
ins
adc
fisttp
add
inc
ret
xchg
add
es
popf
mov
in
xor
sub
sub
pop
add
imul
and
add
add
sub
or
sub
push
mov
sbb
pop
rol
inc
mov
pop
cmp
or
push
fs
mov
pop
jae
adc
add
dec
mov
xchg
les
and
add
movs
add
aaa
inc
adc
add
adc
stc
push
lds
mov
or
mov
inc
or
cmp
mov
test
inc
imul
rdtsc
fwait
ins
push
(bad)
clc
cmc
rcl
adc
lods
leave
dec
rol
or
fucom
xor
(bad)
ficomp
mov
dec
sub
sub
sbb
and
jns
mov
xor
mov
sub
or
ret
mov
nop
xchg
add
test
inc
adc
push
xchg
jp
mov
jno
mul
adc
inc
mov
mov
inc
mov
mov
inc
retf
inc
mov
and
add
stos
or
repz
les
data16
xchg
pusha
adc
xchg
jg
cmp
push
xchg
and
or
xor
call
rcl
cwde
arpl
jge
inc
xor
mov
sub
add
push
push
mov
nop
test
stos
cmp
ins
lods
sub
xor
xor
add
test
int3
xor
adc
imul
adc
xchg
dec
pop
mov
icebp
and
sub
mov
lea
mov
inc
and
nop
adc
pop
int
adc
xchg
call
inc
mov
aaa
outs
pop
data16
sub
and
xor
or
stos
fadd
mov
jge
cwde
or
inc
sbb
xor
push
pop
add
sub
sbb
fbld
and
inc
and
push
mov
push
jmp
push
add
das
or
mov
add
adc
shr
adc
stc
or
pop
xor
mov
aas
ja
push
push
and
and
xor
ins
add
mov
es
or
gs
adc
test
fidiv
and
stos
pop
retf
stc
xor
lods
mov
mov
pop
stc
stos
aaa
dec
jbe
adc
xor
int
mov
mov
sub
pusha
pop
leave
xor
sbb
and
out
ror
fwait
mov
out
add
and
leave
dec
inc
add
adc
adc
pop
adc
retf
mov
add
mov
or
adc
sbb
or
xchg
adc
add
sbb
push
leave
pop
or
cmp
mov
cwde
adc
mov
dec
and
adc
add
push
mov
faddp
xchg
xchg
adc
inc
fwait
imul
sub
mov
add
test
cmp
(bad)
ror
popa
add
bound
std
imul
int3
cmp
add
inc
push
or
nop
ror
inc
xor
leave
jnp
or
call
push
outs
and
lods
add
nop
mov
aad
adc
movs
test
je
rol
ss
add
call
or
xchg
add
cmp
inc
icebp
mov
lods
and
std
ja
and
pop
jo
sub
xor
lds
add
mov
push
xor
sub
sbb
and
add
inc
rol
sub
add
add
push
sbb
mov
movs
or
(bad)
data16
imul
add
outs
leave
movs
push
jno
add
dec
aam
iret
sub
inc
lds
sub
fwait
pop
push
das
pusha
inc
daa
shl
or
jge
and
ins
inc
or
call
(bad)
(bad)
mov
std
add
inc
inc
arpl
or
ror
shr
or
inc
test
cmp
xor
mov
adc
add
mov
movs
jg
dec
mov
movs
sbb
dec
outs
mov
or
mov
dec
lds
stos
pop
lds
add
xor
mov
push
mov
and
stos
loopne
cdq
inc
mov
repz
mov
aaa
fwait
mov
push
add
ja
nop
xor
ret
fld
inc
jno
push
push
mov
fs
and
fbld
sub
lahf
not
outs
in
dec
inc
push
mov
xor
dec
out
xor
xchg
sub
pop
int3
data16
fldenv
mov
mov
jmp
and
out
xor
cmp
adc
xor
inc
push
sub
jecxz
popa
jne
movs
sub
and
stc
push
inc
xchg
or
fwait
(bad)
test
or
push
adc
adc
mov
sbb
dec
pop
push
dec
xor
and
inc
and
and
mov
mov
aaa
dec
test
lock
or
ret
adc
adc
aaa
adc
dec
push
out
popa
test
or
adc
adc
aaa
imul
mov
das
sbb
daa
mov
xor
dec
or
push
shl
scas
wrmsr
or
xchg
push
adc
rcr
bound
cmc
shr
jge
push
adc
and
pusha
and
xor
push
movs
sub
xor
add
and
aas
stos
and
imul
and
or
imul
dec
add
inc
inc
mov
or
xchg
lods
aam
pusha
inc
ja
jbe
and
ins
or
pop
cmp
test
add
cmp
mov
mov
ret
in
mov
es
push
sbb
lock
mov
sbb
inc
aaa
xor
ror
aaa
dec
adc
mov
js
mov
push
sub
xchg
push
xor
movs
inc
pop
or
call
aas
jno
inc
cmp
or
ins
or
gs
dec
adc
pop
sbb
repz
test
adc
xchg
shl
mov
push
pop
dec
jp
xchg
mov
adc
inc
jae
pop
dec
mov
add
mov
jp
cmc
sub
adc
stos
enter
push
pop
pop
adc
mov
repnz
sbb
adc
dec
imul
add
js
and
js
pop
cmp
or
jnp
jae
int3
jp
imul
jo
popf
popf
shl
inc
mov
pusha
inc
xchg
sub
ror
into
sbb
and
inc
add
mov
pop
sbb
int
add
push
xor
and
lds
dec
fwait
test
fnstcw
pop
shl
stc
xchg
mov
mov
test
and
dec
mov
retf
imul
xor
inc
pop
inc
test
sbb
add
stos
pusha
pusha
add
push
xor
movs
and
retf
jp
popa
outs
add
fstp
pop
adc
adc
jnp
jnp
test
loop
or
mov
mov
out
sub
outs
pop
repz
jne
ror
push
pop
test
aad
mov
iret
mov
aad
test
jns
pop
cmps
sbb
cmp
mov
nop
movs
and
inc
retf
sub
adc
js
in
pop
push
xor
push
rol
adc
pushf
(bad)
xchg
xor
xor
outs
add
std
mov
xor
fist
dec
adc
adc
das
or
xor
in
push
cdq
movs
test
inc
inc
xchg
dec
jns
jg
sub
sbb
push
ret
add
sub
pop
add
loop
test
(bad)
syscall
and
sti
mov
(bad)
and
adc
or
pusha
inc
leave
mov
push
int
inc
add
sbb
or
cmp
jp
(bad)
mov
sub
lods
lods
mov
cmp
ins
mov
inc
mov
fist
inc
sub
push
xchg
and
shl
mov
jno
add
adc
push
inc
dec
dec
int3
and
daa
aad
lods
mov
pop
add
dec
xor
mov
lods
mov
cmp
rol
adc
push
fwait
gs
sbb
add
and
jmp
push
les
mov
mov
ins
sbb
and
arpl
push
pop
inc
and
xor
inc
xor
sti
jmp
stos
add
push
adc
mov
sub
(bad)
pusha
push
outs
xchg
mov
adc
add
(bad)
call
inc
loope
or
cmp
iret
xor
shl
add
scas
push
outs
inc
mov
lds
imul
push
jo
xchg
test
adc
loopne
and
inc
sub
sbb
icebp
add
sub
iret
das
test
adc
fwait
push
mov
int
mov
add
xor
ja
dec
sub
pop
mov
sbb
sub
lock
rcl
cmp
xchg
jo
sar
stos
popa
(bad)
mov
mov
push
cmp
mov
jnp
mov
add
stos
add
fimul
and
ins
(bad)
pop
pavgb
sbb
sub
adc
xor
xchg
mov
jae
inc
inc
xchg
out
out
int3
cwde
rcl
jmp
pusha
push
das
inc
int
push
add
addr16
xchg
inc
dec
xchg
inc
xor
(bad)
lea
push
nop
test
lods
retf
push
xor
dec
ror
lahf
neg
add
add
movs
inc
pop
mov
nop
mov
enter
or
jnp
popa
mov
aaa
stos
cmp
add
sar
xor
inc
sub
and
cdq
cmps
push
add
and
push
lock
and
and
mov
mov
push
dec
js
stc
mov
xor
mov
out
jnp
mov
cmc
out
inc
add
xor
push
(bad)
call
inc
imul
adc
aas
scas
pusha
inc
adc
inc
mov
mov
fldl2t
jmp
pop
inc
stos
in
sti
leave
inc
fwait
cmp
dec
out
ss
inc
mov
jne
cmp
dec
xor
xchg
mov
add
test
mov
dec
sub
mov
xor
mov
in
lods
and
inc
mov
sub
xlat
dec
test
add
mov
sub
test
out
or
dec
push
inc
xor
and
ja
das
or
xchg
ret
cmc
and
(bad)
push
dec
loop
cmc
jns
mov
and
dec
test
dec
dec
jmp
or
loope
imul
jecxz
dec
int3
add
dec
mov
retf
adc
jmp
push
adc
rcl
or
lods
stos
jmp
or
sub
xor
adc
xor
fwait
xchg
adc
sbb
cmc
icebp
sbb
xor
dec
adc
inc
inc
inc
mov
or
adc
sbb
hlt
data16
test
ror
and
inc
mov
ja
mov
repz
adc
mov
nop
mov
jnp
or
push
addr16
retf
call
add
mov
aad
dec
fwait
movs
adc
lods
or
adc
and
inc
dec
mov
or
es
xchg
dec
mov
and
dec
test
mov
test
inc
mov
pop
pop
push
and
ret
and
push
adc
adc
sbb
retf
icebp
dec
inc
lds
push
das
cwde
pop
lahf
and
sbb
adc
sbb
add
(bad)
inc
test
sub
sbb
adc
push
imul
arpl
mov
test
pop
aad
icebp
mov
push
sub
pop
imul
xchg
xor
test
add
imul
mov
icebp
xor
sbb
ret
call
popa
les
dec
add
gs
adc
sub
ret
fwait
mov
push
inc
xor
mul
inc
jecxz
ja
pop
add
mov
sub
aas
mov
add
sbb
(bad)
inc
stos
icebp
imul
jnp
dec
push
xchg
cdq
add
xor
mov
xor
leave
xlat
aam
mov
jne
mov
and
mov
mov
jne
mov
mov
push
popf
fist
sub
test
daa
dec
adc
lods
pop
add
mov
mov
mov
int
push
xor
pop
add
xor
pop
int3
call
or
mov
inc
inc
xor
ret
cwde
sar
jmp
jg
pop
pop
pop
add
in
mov
aas
inc
das
ss
push
sub
test
mov
pop
mov
retw
push
int
or
cwde
fist
icebp
pop
adc
call
or
sub
inc
inc
add
inc
sub
les
repnz
adc
and
and
lods
leave
test
sbb
push
dec
sbb
inc
mov
mov
test
cwde
popa
or
xchg
push
in
inc
les
xor
push
inc
or
and
mov
mov
neg
mov
leave
pusha
add
xchg
popf
add
push
retf
or
inc
lds
push
inc
or
mov
lds
sub
and
inc
movs
and
push
jno
test
test
xor
fldenv
cmc
xchg
mov
imul
dec
and
sub
xor
mov
mov
inc
(bad)
leave
daa
push
scas
xor
inc
add
aad
add
popa
mov
lds
mov
test
mov
xchg
inc
inc
add
push
adc
int
pusha
and
repnz
add
or
lea
push
inc
push
dec
jge
lea
cmp
mov
add
das
test
push
cmp
loop
jns
xchg
mov
(bad)
imul
rol
pusha
xchg
inc
and
fcmovne
sbb
xchg
aaa
adc
loopne
inc
mov
cmp
dec
dec
mov
jecxz
xchg
ror
test
dec
adc
mov
sub
cmp
ror
popa
cmp
mov
inc
add
pop
(bad)
loope
xor
pop
test
fisttp
mov
mov
imul
int
jecxz
sbb
adc
xor
fwait
inc
adc
(bad)
xor
inc
or
dec
call
pop
add
sub
or
dec
inc
pop
mov
pop
push
int
sbb
push
sbb
std
mov
loopne
adc
push
xor
inc
int
js
mov
push
mov
dec
or
sub
add
lock
lahf
xchg
gs
int
inc
inc
out
inc
nop
mov
mov
inc
and
jmp
pusha
push
outs
ret
dec
or
or
movs
mov
fbld
inc
lea
or
push
jno
push
das
or
loope
aad
sub
test
mov
adc
and
or
xchg
mov
mov
push
pop
adc
popf
std
cmovne
push
xchg
push
jnp
lods
mov
and
mov
adc
inc
(bad)
aad
push
test
sbb
movs
ffree
lods
xor
add
repz
test
cmps
in
outs
test
cmp
push
out
dec
mov
add
inc
inc
mov
add
les
adc
test
dec
push
cmp
cmp
xor
sbb
add
mov
xor
pop
test
or
xor
inc
das
fs
std
or
add
daa
xor
push
dec
call
cmp
and
push
xor
lds
mov
and
push
out
and
inc
xor
stc
icebp
not
mov
inc
push
add
adc
xchg
out
mov
aas
out
outs
rcl
and
addr16
mov
cwde
arpl
xor
pop
mov
cmps
mov
daa
cmc
bound
or
adc
inc
nop
push
adc
add
xchg
sub
shl
popa
sbb
add
fwait
aam
popa
inc
inc
jmp
test
ins
pop
inc
rcr
inc
and
or
adc
xor
add
or
out
xor
or
adc
ja
and
dec
adc
fadd
inc
xchg
lods
sbb
cmp
fwait
mov
mov
sub
xor
jmp
in
inc
mov
dec
leave
xchg
out
inc
push
adc
xor
test
cmp
sbb
inc
int
add
test
fwait
std
outs
ins
and
sbb
cwde
inc
pop
xor
push
das
sbb
and
xchg
dec
inc
hlt
es
rol
stc
xchg
inc
nop
movs
fwait
xchg
adc
xchg
mov
xchg
aas
and
add
inc
mov
pop
movs
test
add
stos
jmp
test
sub
xchg
rcl
inc
adc
fimul
add
mov
(bad)
pop
aad
add
or
or
or
inc
jmp
xchg
add
and
ffreep
add
push
jmp
add
imul
xor
dec
and
das
dec
fwait
push
xor
dec
adc
jp
pop
xor
xchg
mov
xor
(bad)
shr
adc
sbb
repz
sub
int3
xor
jbe
and
icebp
mov
test
dec
mov
mov
or
pusha
dec
mov
ror
inc
lds
xor
icebp
add
xor
adc
adc
or
mov
inc
push
rcr
push
adc
inc
push
or
push
adc
test
add
or
add
sub
(bad)
ror
push
jge
loope
inc
sub
cmp
pop
shl
loopne
mov
add
daa
and
inc
(bad)
pop
or
ret
adc
add
shl
and
jmp
add
ret
mov
xchg
inc
ror
adc
pop
cmp
mov
jno
into
sbb
aas
inc
push
sub
mov
sub
(bad)
pop
xor
mov
jge
sub
inc
and
xchg
push
adc
jp
dec
and
inc
push
xchg
and
test
sub
sbb
dec
inc
daa
adc
or
inc
push
adc
xor
lock
inc
fst
adc
nop
adc
mov
pop
inc
shr
mov
xor
es
push
inc
cmp
or
add
inc
cmp
adc
or
in
(bad)
sub
push
add
and
and
adc
cmps
push
add
add
test
and
fbstp
call
pusha
pop
icebp
dec
add
jp
cmps
and
shl
lods
lods
xor
add
or
mov
xor
inc
adc
add
aas
outs
sub
inc
inc
adc
dec
or
add
pop
or
sar
sbb
shl
arpl
ja
or
and
inc
mov
fwait
(bad)
stc
adc
or
or
adc
mov
sub
cmc
scas
ja
test
xchg
add
add
int
bound
push
dec
dec
inc
test
mov
inc
repz
dec
cmp
cwde
and
and
xchg
mov
int
fnsave
and
shr
adc
outs
adc
mov
add
jl
test
inc
inc
inc
mov
adc
shl
ffreep
js
mov
sbb
aad
or
dec
sbb
or
inc
adc
jo
rol
enter
push
das
and
shl
add
mov
fist
xchg
aas
icebp
add
xchg
call
dec
nop
and
xor
mov
jp
cmp
sbb
outs
xor
push
or
and
sub
or
or
lds
mov
leave
and
or
loopne
lods
test
lds
icebp
pop
sub
fst
sub
adc
(bad)
xchg
push
sub
add
add
add
pop
xor
sbb
pop
and
push
stos
add
repz
push
les
mov
push
addr16
mov
inc
push
mov
and
shl
test
or
nop
xor
and
mov
fild
pop
add
call
adc
add
test
lea
push
or
test
adc
and
nop
lods
mov
push
dec
mov
adc
ret
add
shr
(bad)
and
inc
sbb
pop
adc
push
or
xchg
or
stos
pop
xor
xchg
mov
jg
dec
aaa
fwait
adc
out
call
jae
add
and
(bad)
adc
cmp
add
cmps
jp
out
inc
mov
or
inc
ins
sbb
and
or
jecxz
in
lea
add
adc
stos
call
shl
sub
adc
fwait
in
arpl
mov
or
xlat
ror
dec
call
sbb
aas
jno
and
mov
test
div
dec
dec
cmc
mov
add
fcmovnb
sbb
mov
or
add
retf
imul
test
cmp
daa
xor
cmp
cmc
sub
test
sbb
pushf
push
aas
dec
dec
inc
adc
add
inc
xor
psubusw
cmp
push
outs
adc
shl
inc
movs
mov
or
inc
xlat
pop
pusha
pusha
cmp
xchg
pop
pop
sub
mov
enter
cmp
jge
rol
push
aaa
or
pop
jns
and
adc
or
test
imul
popf
bound
addr16
and
adc
and
mov
sbb
scas
or
xchg
inc
xor
adc
in
jae
sub
sbb
add
cmc
(bad)
xchg
add
aas
inc
push
push
push
push
dec
inc
call
retf
add
xor
push
xchg
popf
jmp
inc
ret
aad
inc
aam
mov
lock
aaa
xor
adc
pop
push
das
pop
add
scas
dec
add
mov
xor
addr16
xchg
mov
aaa
mov
lods
and
imul
push
adc
adc
add
mov
test
push
stos
fild
push
dec
cwde
adc
pop
adc
and
dec
int
add
nop
add
and
xor
xchg
add
or
inc
test
xchg
pop
bound
or
xor
add
arpl
push
inc
stos
add
add
dec
test
dec
and
shl
cdq
mov
add
add
repz
pop
xchg
inc
inc
aad
and
xchg
add
dec
aas
xchg
inc
inc
and
test
shr
push
and
cmp
add
xchg
jmp
add
push
inc
mov
add
mov
xchg
shl
retf
loop
mov
inc
xor
add
rcr
and
lods
mov
add
push
lods
test
inc
jmp
mov
or
mov
and
push
xor
and
lsl
inc
xchg
xor
loope
(bad)
ror
add
and
test
outs
popf
cmc
lods
lods
sub
inc
jmp
sbb
lods
dec
adc
in
hlt
xchg
pop
push
popf
or
fstp
pop
ffreep
lods
mov
jg
jecxz
sbb
popa
dec
in
test
dec
mov
fidiv
add
loop
add
add
iret
mov
xor
inc
inc
add
ret
lods
mov
xor
pop
adc
movs
out
inc
or
inc
imul
mov
push
push
sub
repz
or
movs
or
dec
add
xchg
(bad)
sbb
leave
mov
add
add
add
sub
(bad)
xor
jmp
adc
xchg
push
add
lods
jmp
xor
xchg
sub
enter
xor
aad
or
nop
shr
cs
xchg
adc
pop
inc
add
push
push
xchg
nop
xlat
mov
jg
pop
and
or
pusha
inc
enter
push
ret
xor
mov
rcl
scas
repnz
es
das
aaa
xor
daa
add
add
enter
mov
inc
out
lahf
add
push
repz
retf
and
pop
add
(bad)
in
jno
rcr
cmp
and
jp
aaa
jge
push
push
sub
mov
adc
out
dec
rcl
jne
inc
or
jnp
inc
add
rcl
mov
ret
mov
out
cmp
or
sti
sbb
data16
scas
mov
ja
push
adc
adc
adc
pusha
(bad)
lods
inc
test
push
inc
dec
xor
jbe
or
push
xor
adc
lds
push
push
mov
adc
inc
stc
or
mov
dec
sbb
xchg
add
in
sbb
fs
test
inc
mov
and
and
int
rcl
stc
sbb
retf
call
xor
int
es
pop
ret
inc
pop
mov
dec
adc
xor
inc
sbb
xor
xchg
ud1
inc
add
xor
add
push
dec
sti
add
pop
push
xchg
data16
push
outs
outs
retf
add
stos
lahf
xor
mov
cmp
xlat
and
pop
les
lds
or
mov
xor
jne
mov
adc
dec
or
pop
pop
inc
xor
adc
xchg
adc
fisubr
adc
push
and
sub
arpl
test
stos
inc
adc
and
sbb
mov
xor
lea
xchg
gs
ret
fisttp
and
loope
movs
cmp
inc
inc
adc
nop
add
add
mov
outs
sbb
inc
inc
inc
(bad)
jne
mov
call
sub
call
in
(bad)
neg
mov
push
inc
xor
xchg
aas
(bad)
xor
adc
inc
or
add
add
and
nop
aaa
cmp
sbb
and
push
inc
movs
xor
cdq
ret
mov
sbb
xor
test
inc
cmp
push
xchg
dec
sub
or
jge
mov
test
call
inc
jno
adc
xor
inc
faddp
stos
jmp
add
fnstenv
fwait
shl
pop
mov
adc
pop
add
sub
cdq
cmp
jne
push
loop
or
lods
push
adc
and
inc
and
push
inc
inc
cmc
aad
dec
inc
icebp
mov
xchg
sub
push
retf
je
adc
jnp
dec
inc
dec
xor
rcr
lods
repz
adc
mov
xchg
shr
inc
add
pop
xchg
cld
xor
xor
xor
adc
push
add
lods
or
and
inc
and
test
adc
popa
push
adc
cmp
inc
and
jmp
and
gs
lds
enter
aaa
xor
sbb
cmc
(bad)
or
or
movs
xor
rcl
mov
add
nop
inc
cdq
mov
sub
and
and
jnp
push
arpl
add
cwde
dec
daa
fstp
jecxz
pop
or
(bad)
das
fldenv
js
and
and
lods
inc
pop
mov
retf
lahf
mov
and
arpl
inc
xchg
lahf
and
xor
aaa
popf
adc
add
stos
es
sub
mov
std
inc
add
xor
push
mov
mov
dec
and
sbb
xor
or
push
data16
fdivp
push
ins
aaa
ret
jp
sbb
fild
pop
add
js
addr16
pop
adc
push
adc
loope
add
inc
shl
mov
stos
sub
inc
inc
rcl
inc
and
xor
retf
jge
int3
xor
in
lods
jge
test
and
out
ins
and
adc
imul
mov
and
cmp
test
push
push
xlat
xor
xchg
retf
and
sub
(bad)
retf
mov
rcl
in
push
sbb
pusha
xchg
cmp
adc
inc
jmp
push
mov
lahf
xor
or
enter
mov
test
or
mov
add
call
and
cmps
xchg
add
and
cwde
lds
push
or
inc
mov
fucomip
and
and
and
in
add
push
cmps
and
stos
push
push
adc
add
xor
sar
in
adc
or
sub
scas
aad
inc
or
or
(bad)
adc
ja
call
or
adc
ficomp
dec
sub
push
(bad)
fstp
aad
inc
xchg
jne
mov
xor
mov
imul
jae
jp
or
or
xchg
or
inc
gs
loopne
loopne
xlat
int
pop
xor
arpl
sbb
out
cmp
das
xchg
and
(bad)
shl
movs
sub
inc
sbb
not
jns
pop
dec
and
xor
stc
ret
inc
dec
or
stc
xor
retf
jge
gs
mov
fidivr
pop
mov
pop
not
jmp
sub
and
and
dec
adc
add
xor
or
ror
popa
push
xor
leave
or
cmc
pop
and
or
adc
jge
add
pop
push
mov
adc
bound
test
cmp
pop
ret
jp
sub
add
push
inc
mov
jne
test
mov
mov
lea
mov
fstp
mov
test
and
inc
or
adc
add
js
sub
and
lahf
jp
add
add
mov
add
lea
adc
adc
sbb
adc
mov
jecxz
sub
inc
add
xlat
mov
mov
pop
inc
sahf
nop
mov
mov
push
xlat
xchg
and
mov
mov
and
leave
adc
adc
sbb
adc
imul
sub
mov
sar
mov
ret
xchg
leave
dec
add
and
das
daa
popf
jp
sbb
cmp
jns
sub
and
and
pop
xor
and
xchg
jg
add
and
dec
sar
cmps
push
push
out
inc
and
adc
cwde
int
das
add
stos
call
lods
pop
inc
retf
in
test
inc
inc
add
inc
sbb
cmp
js
or
sbb
pop
ror
sbb
ja
or
or
push
mov
push
xchg
mov
es
xor
aaa
xchg
push
dec
sub
jmp
outs
retf
xor
inc
sub
mov
push
sub
push
xor
sub
lods
movs
add
xchg
inc
inc
xchg
inc
xor
(bad)
popa
inc
pop
sub
mov
and
adc
dec
add
dec
mov
or
test
pop
mov
adc
adc
dec
aaa
add
pusha
fs
ret
neg
sub
stos
mov
leavew
xlat
lea
cmp
inc
push
xor
add
inc
mov
adc
or
inc
mov
and
sbb
sbb
nop
adc
outs
(bad)
jmp
sub
add
jmp
xor
pusha
outs
push
hlt
dec
pop
sub
mov
xor
mov
xor
and
lods
mov
test
inc
dec
retf
icebp
adc
test
push
dec
sbb
mov
dec
sub
inc
shl
neg
sub
add
mov
pop
adc
or
add
and
push
inc
mov
mov
and
out
sub
enter
adc
add
xor
cmp
inc
adc
and
js
add
push
neg
test
dec
sbb
adc
stos
dec
dec
test
popf
push
add
mov
hlt
sbb
adc
push
add
aaa
dec
adc
mov
out
adc
adc
aaa
sbb
dec
add
xchg
pop
mov
mov
jns
mov
xor
push
inc
popa
sub
call
hlt
xchg
adc
dec
test
or
and
add
mov
enter
int
or
dec
inc
mov
shr
push
or
jne
adc
cwde
sbb
xor
sub
adc
add
cmp
out
gs
mov
sbb
dec
in
push
sbb
pop
and
inc
add
or
(bad)
jecxz
push
add
shl
pop
xor
add
add
sbb
and
test
or
sbb
mov
add
mov
call
jg
test
repz
int
mov
imul
lock
cmp
sub
dec
jae
out
sbb
call
hlt
push
add
lds
out
mov
dec
and
push
jae
rcr
cmps
lahf
retf
inc
outs
inc
scas
push
jg
enter
push
mov
add
xor
mov
mov
push
cmps
jmp
xchg
adc
mov
and
addr16
cmp
mov
or
inc
adc
arpl
inc
mov
mov
xchg
adc
cwde
add
dec
and
mov
aaa
xor
ror
sti
scas
stos
adc
in
add
sub
fwait
mov
xchg
sub
push
rcr
loop
and
push
jmp
popf
xor
outs
sbb
arpl
adc
cmps
cmps
lea
sbb
dec
scas
lods
mov
add
in
dec
mov
inc
add
xchg
and
or
adc
push
inc
mov
and
imul
data16
sbb
std
imul
shl
push
jecxz
adc
outs
and
lods
(bad)
sar
adc
xor
cmp
inc
outs
stc
inc
xchg
inc
inc
inc
or
shl
xchg
adc
sub
int
dec
sub
loope
xchg
adc
add
xor
retf
pop
xor
pop
inc
xor
add
jae
mov
mov
cmp
adc
test
or
rcl
inc
sbb
jnp
pop
arpl
mov
xchg
or
or
xchg
nop
or
leave
data16
inc
pop
xor
call
out
push
sar
shr
sub
xor
xor
inc
jne
scas
ds
aaa
sub
stos
arpl
mov
push
mov
(bad)
dec
push
pop
cmc
jge
js
mov
and
add
adc
pusha
sbb
imul
enter
adc
pop
imul
add
xchg
add
pop
leave
aaa
pop
shr
cwde
icebp
stos
data16
ret
int
push
inc
arpl
imul
popa
add
ins
add
jbe
add
jns
jno
xor
int
popa
inc
pop
(bad)
call
mov
jmp
jg
jno
loop
test
daa
lahf
jnp
mov
(bad)
add
xor
mov
arpl
jno
cmp
and
xor
ffree
test
pop
xor
mov
lods
stos
mov
push
add
or
cmp
jnp
or
add
add
or
cmp
mov
mov
sub
outs
std
pop
add
xor
push
and
sub
arpl
cmp
pop
int
outs
ret
sub
jmp
adc
jnp
popa
pop
inc
add
push
cmp
push
mov
ror
test
inc
push
push
out
inc
inc
cdq
add
bound
xor
in
dec
add
pop
dec
and
(bad)
jo
cmp
jge
mov
test
push
cmp
cmp
movs
neg
add
ja
scas
push
idiv
jae
outs
add
data16
bound
ins
add
fadd
call
gs
aam
mov
and
sti
add
ins
xor
int
out
jae
jb
add
cmp
jp
shl
dec
xlat
outs
add
push
ins
add
xchg
imul
adc
mov
pusha
inc
add
xor
outs
imul
or
pop
push
xor
sysexit
outs
movs
and
mov
push
xor
adc
mov
cmp
dec
pop
dec
sub
cmps
fst
outs
aaa
fs
inc
leave
or
retf
or
sub
inc
add
xor
ss
jmp
data16
cmp
jl
add
popa
cmp
lds
mov
test
jne
stos
loop
mov
xchg
aam
popa
jmp
sbb
jg
jmp
sub
ret
or
add
or
push
push
das
test
and
int3
push
pop
lods
dec
inc
outs
mov
or
adc
xor
jns
stc
jmp
xor
pop
add
int
sti
sahf
add
xor
aaa
adc
bound
fwait
mov
xor
sbb
mov
sub
xor
mov
ja
inc
sub
jne
xchg
int
popa
pop
adc
dec
xlat
add
xor
fiadd
jae
arpl
sbb
inc
retf
xor
test
retf
or
rcr
test
adc
inc
cmp
aam
shl
stc
push
add
sbb
dec
test
and
xchg
dec
popa
or
xchg
cmp
loope
adc
push
mov
inc
out
popf
fcom
pop
cmp
or
add
fimul
xchg
xor
and
jae
ja
adc
xor
call
jnp
arpl
sti
bound
daa
inc
ss
sub
iret
jno
adc
movs
lahf
aas
push
push
inc
sub
out
pop
adc
push
cmp
sbb
or
pop
adc
test
nop
or
jno
ja
xchg
int
inc
mov
and
and
loopne
sbb
test
adc
shl
add
rcl
push
loope
sub
fimul
xchg
add
cmp
inc
sbb
cmp
data16
xor
sbb
cmp
pop
repz
lahf
out
jp
movs
(bad)
cmp
mov
xor
add
daa
mov
mov
and
add
dec
sbb
xor
fs
shr
adc
rol
test
xor
mov
xchg
pop
xchg
xor
lock
pop
sbb
pusha
or
mov
leave
pop
out
xchg
or
inc
(bad)
sti
inc
adc
int
movs
pop
dec
add
mov
xor
es
and
dec
mov
inc
sbb
or
dec
mov
stos
lods
and
adc
add
out
xor
sbb
out
and
push
push
movs
fstp
and
(bad)
lds
scas
icebp
sti
or
add
inc
rcr
aad
add
imul
stos
shl
and
mov
mov
inc
test
iret
adc
mov
dec
adc
add
push
ja
call
xor
add
xchg
add
mov
enter
xor
push
je
das
shr
xor
cmps
ins
dec
out
popf
cmp
pop
fcmovnbe
and
das
ud0
rol
test
std
add
sbb
and
or
xor
inc
outs
or
push
enter
push
push
cmp
push
addr16
lods
cmp
sbb
out
inc
(bad)
sub
adc
push
mov
cmp
and
xor
test
popa
xor
out
cmps
inc
inc
xor
and
lahf
fs
mov
add
sub
and
das
and
inc
mov
imul
adc
jno
cmp
add
dec
add
add
or
aaa
xchg
inc
xchg
mov
mov
adc
sbb
and
adc
mov
inc
adc
inc
add
push
nop
or
inc
push
test
xor
xlat
xchg
push
adc
mov
stc
xchg
add
retf
add
add
sbb
adc
jns
mov
imul
ror
call
adc
mov
fst
xor
mov
xor
adc
mov
and
gs
dec
inc
mov
pop
add
cmp
shr
sbb
and
add
imul
add
mov
sbb
nop
inc
inc
adc
and
and
and
and
inc
or
scas
scas
out
xor
pop
imul
sub
xor
dec
loop
stos
inc
adc
mov
inc
test
movs
pop
ins
ret
inc
imul
push
inc
lds
retf
ja
lods
or
dec
fcmovnu
sbb
add
sub
dec
adc
add
jno
or
in
loop
dec
lods
int
add
inc
shl
mov
xchg
xlat
mov
das
nop
or
aad
and
or
xchg
lods
ja
pop
rcl
dec
xor
dec
sub
add
test
adc
mov
jmp
pop
dec
ja
dec
add
scas
add
imul
inc
xchg
xchg
mov
movaps
gs
mov
mov
loop
nop
xlat
pop
sbb
push
inc
adc
xor
xor
je
push
mov
and
adc
sbb
int
mov
dec
cmc
js
mov
push
test
adc
jno
xor
les
daa
lea
add
and
cs
inc
pop
dec
pop
add
sub
and
push
dec
call
cmp
inc
out
nop
sub
sar
fs
add
mov
push
or
scas
cmp
jmp
int
aaa
imul
icebp
adc
inc
ret
pop
or
add
jnp
fsubp
(bad)
les
ret
dec
inc
adc
xchg
sub
add
or
inc
dec
xlat
test
inc
pop
xor
nop
mov
sbb
ja
push
nop
mov
inc
mul
sbb
iret
cmc
xor
retf
fidiv
ja
mov
add
adc
push
push
leave
retf
pop
mov
xor
add
adc
ins
or
push
mov
outs
(bad)
or
(bad)
mov
sar
pop
xor
adc
test
or
into
push
push
out
sub
test
lds
inc
jmp
adc
mov
inc
test
out
inc
cmc
cwde
add
or
xchg
xor
movs
jecxz
inc
push
adc
xor
xor
xor
mov
add
inc
loope
movs
add
in
xor
mov
inc
ja
aaa
push
and
es
cdq
mov
add
mov
jbe
jg
in
ret
scas
test
add
add
and
arpl
popf
sar
in
add
dec
adc
inc
dec
adc
xchg
inc
add
push
ins
repz
add
popf
pop
sub
and
mov
mov
sub
mov
inc
push
lock
xlat
dec
and
push
icebp
sti
out
xor
add
mov
and
adc
adc
ret
inc
adc
movs
das
pop
adc
xor
int3
push
jne
add
iret
imul
adc
push
rcr
fld
(bad)
les
mov
and
or
ret
test
or
ret
inc
sbb
xor
or
or
add
dec
add
ret
cmps
jg
add
aas
cmp
and
(bad)
lea
sub
test
mov
dec
or
pop
cmp
xor
dec
fdiv
retf
ror
add
push
or
and
xor
and
mov
in
arpl
sbb
out
mov
pop
aaa
sbb
sub
enter
inc
xor
enter
add
pop
inc
pop
push
ss
pop
hlt
pop
mov
out
add
pop
daa
xor
ins
mov
pop
aaa
aas
int
or
aas
jbe
in
pushf
iret
aaa
fbstp
shl
loope
pop
cmp
shr
test
xor
fstp
dec
pop
pop
mov
outs
xor
fisttp
mov
xor
(bad)
xor
and
xchg
xchg
sbb
cmp
or
xchg
adc
pslld
pop
jecxz
ss
pop
aaa
aaa
arpl
dec
ss
add
fidiv
add
aaa
stos
retf
add
pop
xor
adc
or
das
add
add
add
loope
test
packssdw
and
dec
pop
pop
pop
xor
and
jmp
cmp
or
jmp
out
mov
fidiv
add
xchg
mov
iret
aaa
jg
sub
add
and
pop
xchg
inc
popa
add
fisttp
shl
fnstenv
pop
out
imul
rdmsr
pop
sub
add
lods
adc
nop
push
cmps
ja
or
es
mov
(bad)
retf
imul
jle
add
jp
push
outs
adc
jns
ins
ins
and
out
add
outs
and
mov
xchg
jge
ins
cmp
icebp
push
je
stos
bound
adc
js
imul
sbb
mov
sbb
jne
stos
scas
jmp
arpl
adc
outs
xlat
jne
jbe
aaa
push
popw
mov
and
jns
ins
mov
stos
add
das
jne
ins
pop
sbb
mov
gs
jp
jo
scas
jmp
scas
ja
jns
push
imul
adc
jno
stc
add
jnp
lahf
arpl
sbb
jae
(bad)
shl
sbb
jne
bound
xlat
outs
inc
jns
jo
jp
je
inc
xlat
(bad)
cmc
je
jne
arpl
(bad)
dec
mov
pop
add
add
xor
push
jbe
data16
sbb
sub
mov
bswap
shl
jl
mov
(bad)
cmp
sub
add
pusha
sub
sti
pmulhuw
add
xor
or
cld
and
jg
add
xchg
xor
adc
xor
add
add
das
add
dec
xor
pop
xor
es
inc
push
pop
fist
add
push
pfsub
leave
daa
add
and
add
jecxz
js
mov
or
sub
lahf
xor
mov
lea
add
in
xchg
ins
add
adc
xchg
pop
sbb
test
mov
nop
cmps
mov
xchg
ins
(bad)
sub
ins
xchg
add
fldcw
mov
(bad)
and
pop
add
je
adc
ret
xor
add
jae
or
adc
add
cmp
cmp
push
leave
add
ja
adc
fwait
sbb
push
mov
fwait
or
add
mov
or
sub
lahf
mov
adc
add
js
or
sub
(bad)
or
sub
cmps
dec
emms
and
retf
dec
movs
ror
outs
push
jae
or
jo
and
or
adc
jo
mov
ins
add
xor
das
add
fnsave
xchg
or
adc
jo
mov
imul
or
or
and
sbb
test
add
add
pmaddwd
std
pop
fsubr
cmc
mov
pusha
jmp
or
jg
push
dec
add
out
inc
pusha
sbb
push
cwde
fistp
jbe
stc
scas
ret
jnp
enter
add
addr16
out
pop
or
add
(bad)
shr
add
pop
or
add
nop
nop
psraw
xor
and
mov
inc
mov
outs
sti
pop
out
push
jno
jo
pop
push
pop
jl
sar
or
mov
mov
push
adc
push
or
leave
inc
inc
aaa
mov
jle
push
(bad)
xchg
or
add
ret
sbb
mov
mov
push
add
std
pop
and
add
xor
push
inc
ja
or
sbb
cmp
iret
jbe
ret
adc
pop
(bad)
aad
and
adc
xor
xor
fild
std
xchg
and
and
pop
aas
adc
xor
out
neg
ja
jo
add
sbb
mov
add
loopne
sbb
sub
jne
pop
sub
sub
sub
fs
jbe
or
test
jbe
and
adc
test
inc
or
push
ja
in
inc
xor
pop
push
fisubr
add
sub
(bad)
clc
(bad)
fdivr
add
ins
fs
push
sub
std
out
pop
outs
loop
sbb
xchg
dec
call
enter
lods
mov
into
imul
xor
mov
xor
xchg
sub
mov
stos
popa
xchg
xchg
or
add
out
or
fld
and
add
comiss
sub
sbb
clc
(bad)
fmul
clts
rcl
test
dec
or
adc
dec
add
ret
pop
cmp
or
jno
pop
pop
les
xor
add
dec
mov
dec
or
adc
cld
pop
das
pop
adc
js
out
fs
add
and
je
sahf
movups
xchg
cmp
inc
and
add
sbb
add
pop
dec
xlat
es
push
sbb
dec
out
fist
add
xor
xchg
sbb
lock
and
int3
sbb
jbe
cld
sti
xor
xor
or
xchg
retf
mov
aaa
fcom
push
jmp
daa
iret
and
stos
dec
push
add
and
jb
loope
sbb
jno
ins
adc
pop
jns
gs
add
or
cmp
mov
dec
dec
js
mov
or
push
or
lods
imul
push
mov
add
je
call
cdq
cwde
rcr
pushw
test
sub
js
js
retf
mov
push
call
gs
mov
fldcw
cmp
ins
lods
and
mov
ins
out
pop
sbb
push
push
retf
xor
and
add
aad
stos
and
cmp
div
outs
push
jle
(bad)
imul
ins
dec
fimul
inc
into
and
add
push
mov
pop
xor
jne
bound
dec
sbb
push
sub
pop
jecxz
pop
sbb
or
adc
lock
or
push
jmp
(bad)
xor
in
mov
cld
adc
and
or
dec
scas
pop
imul
jnp
cmp
mov
push
pop
xlat
ds
add
adc
inc
sysenter
mov
std
enter
add
sub
sbb
out
xchg
push
jb
and
arpl
xor
push
sbb
in
data16
add
dec
scas
sub
push
mov
jl
sub
pop
xor
add
lock
iret
add
movs
jbe
inc
jnp
add
push
add
xchg
cmps
cmps
pop
pop
adc
cwde
fmul
aaa
test
sbb
xor
xor
mov
jl
or
enter
repnz
inc
out
sbb
rcr
fld
pusha
ror
ja
rcr
dec
stc
call
inc
sbb
nop
sub
mov
cmps
fiadd
lahf
ins
mov
xchg
add
inc
pusha
push
xor
or
ret
es
jb
push
test
xor
pop
cmp
and
mov
xchg
lods
int
push
sub
mov
jo
xchg
movs
mov
ins
(bad)
jle
data16
pop
int3
inc
add
adc
sbb
cmp
add
jb
pop
mov
enter
(bad)
cmc
sub
fldenv
pusha
push
fiadd
pop
in
inc
loop
pop
push
adc
sub
jmp
loope
in
sub
les
and
int
and
dec
scas
stos
cmps
push
pop
push
enter
pop
pop
pusha
bound
sub
pop
ins
xor
adc
sar
fisub
push
gs
jae
xor
jns
es
fadd
cmp
or
repnz
rcl
add
hlt
sbb
cmp
adc
dec
ss
sbb
sub
out
arpl
pop
xor
xchg
adc
cli
mov
sub
push
enter
jg
or
sub
adc
mov
sbb
add
add
mov
nop
sahf
dec
mul
mov
cmp
xchg
push
cmp
pusha
sub
sub
jmp
inc
cli
push
cs
(bad)
pop
(bad)
sti
adc
adc
rcl
xor
mov
rol
adc
outs
fs
adc
cmp
shl
adc
sbb
mov
daa
jno
xchg
mov
add
add
lahf
jnp
int3
adc
adc
inc
xchg
out
lods
jmp
jmp
call
neg
sahf
and
jb
dec
cmp
and
jg
sbb
fs
ins
cmp
retfw
scas
pop
cdq
and
mov
mov
inc
mov
jne
sub
sub
ins
ds
test
pusha
xchg
add
(bad)
jmp
xor
or
or
sbb
and
cmp
xchg
inc
dec
jbe
imul
and
div
shr
and
mov
and
dec
and
jns
pop
arpl
je
(bad)
out
repz
jo
popa
je
arpl
ins
add
arpl
outs
dec
fucomp
out
gs
inc
je
or
adc
sti
fisttp
sub
dec
outs
outs
arpl
outs
ja
xor
mov
daa
imul
popa
fs
inc
outs
jae
outs
out
ins
gs
dec
jae
aas
ins
jo
pop
add
outs
cmp
(bad)
scas
mov
adc
arpl
popa
fdiv
addr16
imul
fstp
ins
lods
arpl
aad
pop
or
jl
outs
lods
sub
test
out
xlat
inc
ja
das
push
fidiv
imul
mov
popa
ins
ins
jmp
inc
inc
bound
je
jae
push
or
cmc
pop
inc
jb
fs
arpl
out
or
ins
data16
or
outs
je
pop
in
fistp
or
jne
push
mov
gs
repz
enter
repz
push
ins
sub
mov
add
and
and
add
retf
and
and
add
retf
and
pop
xor
dec
mov
or
xchg
pop
and
push
nop
pop
scas
and
or
jo
push
enter
cs
pop
retf
sub
inc
mov
out
sbb
dec
fisubr
call
push
cmp
or
shr
xor
test
fs
add
dec
repz
mov
xor
add
leave
or
mov
pop
repnz
pop
sbb
pop
sbb
add
jmp
and
enter
jmp
mov
mov
in
jb
xor
leave
enter
out
and
and
mov
mov
lock
xor
test
xor
and
dec
repz
mov
cmp
hlt
loope
cwde
inc
cmp
cmc
xor
push
add
and
cmp
cdq
push
cmp
or
fs
clc
es
xchg
xchg
adc
stc
sbb
inc
dec
inc
pop
cli
or
add
sbb
in
inc
cld
cmp
push
enter
add
or
fadd
inc
fmul
inc
pop
jb
aam
push
sbb
inc
add
pop
inc
and
daa
or
cmp
add
add
inc
pop
or
or
or
pop
addps
gs
mov
hlt
ins
or
call
cdq
fs
add
movs
push
jae
dec
cdq
movs
cdq
movs
or
dec
cdq
movs
cdq
movs
or
pop
movs
cdq
movs
or
or
leave
push
push
cmova
movs
cdq
ins
inc
adc
movs
cdq
inc
adc
cdq
movs
cdq
ins
adc
movs
cdq
movs
pop
dec
sbb
movs
cdq
ins
ret
sbb
xor
sbb
sbb
shl
mov
push
scas
adc
ret
bound
mov
cmps
fwait
sar
scas
xor
add
movs
test
sti
fisttp
dec
xor
cmp
add
int
push
ja
pop
add
data16
sbb
pop
in
and
fdivr
sbb
mov
movs
cmps
enter
cmps
test
enter
stos
stos
test
lods
lods
enter
scas
scas
mov
enter
mov
test
mov
enter
mov
mov
mov
enter
enter
mov
test
ret
test
(bad)
(bad)
pop
enter
pop
enter
retf
pop
enter
enter
into
iret
rcr
pop
rcl
rol
aad
test
xlat
fcomp
pop
(bad)
fild
(bad)
test
fnstsw
pop
enter
loop
sbb
in
sub
pushf
imul
jo
ins
(bad)
fisubr
int3
mov
ss
or
xchg
jo
push
mov
shr
add
push
and
or
popf
mov
sar
xchg
cmp
cmp
or
push
and
ds
inc
aas
jbe
and
(bad)
daa
mov
in
or
sti
out
push
sub
loopne
jo
into
push
mov
push
adc
dec
shl
adc
cmp
ins
mov
sub
jb
out
call
enter
adc
enter
xchg
cmp
pop
push
pushf
popa
sbb
ret
jb
inc
inc
test
adc
pop
sbb
or
in
das
xor
in
sbb
pushf
jl
in
loope
push
xor
xchg
test
jb
test
cmp
cmp
add
dec
cmp
add
and
and
cmp
add
cmp
cmp
sbb
and
cmp
sbb
sbb
cmp
xor
sub
add
cmp
sub
cmp
cmp
adc
sub
sub
sub
add
cmp
cmp
or
inc
cmp
add
xor
xor
cmp
aas
(bad)
xor
rol
dec
mov
xor
pop
ss
(bad)
mov
sub
das
add
xor
cmp
pusha
push
pop
imul
cmp
push
enter
xlat
nop
push
sbb
pop
sbb
sbb
sbb
push
pop
and
pop
and
and
and
es
sub
pop
sub
sub
sub
cs
xor
pop
xor
xor
xor
ss
cmp
pop
cmp
cmp
cmp
ds
inc
pop
enter
inc
inc
test
inc
inc
enter
inc
inc
dec
pop
enter
dec
dec
test
dec
dec
enter
dec
dec
push
pop
enter
push
push
test
push
push
enter
push
push
pop
pop
enter
pop
pop
test
pop
pop
enter
pop
pop
pusha
pop
enter
bound
pop
enter
enter
addr16
test
imul
enter
outs
outs
jo
enter
jb
test
je
enter
jbe
js
enter
jp
test
jl
enter
jle
sbb
add
test
xchg
mov
test
mov
pop
xchg
xchg
xchg
test
xchg
xchg
enter
xchg
xchg
cwde
pop
enter
call
popf
enter
sahf
lahf
mov
mov
enter
enter
cmps
cmps
test
enter
stos
stos
sbb
lods
enter
pushf
scas
pushf
scas
pop
enter
mov
test
mov
enter
mov
mov
enter
mov
test
enter
pop
enter
rol
pop
enter
enter
(bad)
pop
enter
leave
retf
enter
enter
int
iret
pop
enter
rcl
test
rcl
enter
aad
xlat
pop
enter
(bad)
test
fcmovnu
enter
fstp
fistp
pop
loopne
loop
pop
enter
enter
in
out
enter
jmp
test
in
enter
in
out
out
pop
enter
icebp
repnz
repz
enter
cmc
div
pop
enter
stc
cli
test
sti
cld
enter
std
(bad)
jmp
fs
pop
add
add
inc
cs
add
inc
cs
push
pop
cs
or
or
in
or
inc
cs
push
ucomiss
inc
adc
adc
in
adc
inc
cs
push
pop
cs
sbb
sbb
in
sbb
inc
cs
push
pop
cs
and
and
in
and
inc
cs
es
cs
sub
sub
in
sub
inc
cs
cs
cs
xor
xor
in
xor
inc
cs
ss
cs
cmp
cmp
in
cmp
inc
cs
ds
cs
cs
inc
inc
inc
cs
inc
inc
fs
xchg
fadd
inc
cs
cs
dec
dec
inc
cs
dec
dec
in
cs
dec
dec
cs
cs
push
push
inc
cs
push
push
in
cs
push
push
cs
cs
pop
pop
inc
cs
pop
pop
in
cs
pop
pop
cs
cs
pusha
popa
inc
cs
bound
inc
cs
gs
cs
inc
push
in
cs
ins
outs
cs
outs
jo
inc
cs
jb
in
cs
jne
cs
cs
jns
cs
jp
in
cs
jge
cs
cs
add
in
cs
test
xchg
inc
mov
mov
cs
nop
xchg
inc
cs
xchg
xchg
in
cs
xchg
xchg
cs
cs
cwde
cdq
inc
cs
call
popf
sahf
cs
cs
mov
inc
mov
in
movs
cmps
cs
cmps
test
inc
cs
stos
stos
in
cs
lods
scas
cs
cs
mov
inc
cs
mov
in
cs
mov
cs
cs
mov
mov
in
mov
cs
in
ret
inc
cs
(bad)
in
cs
enter
in
retf
inc
cs
int
cs
cs
rcl
inc
cs
rcl
in
cs
aad
cs
xlat
fcomp
inc
cs
fcmovu
fs
xchg
gs
fadd
(bad)
in
cs
loopne
cs
loope
in
cs
in
cs
cs
call
jmp
pop
jmp
in
and
jb
out
out
jb
pop
jb
icebp
repnz
jb
pop
repz
cmc
and
jb
div
jb
pop
jb
stc
cli
pop
jb
pop
sti
cld
std
and
jb
(bad)
(bad)
mov
add
add
mov
nop
or
mov
or
or
nop
or
mov
adc
or
nop
or
mov
sbb
or
nop
or
mov
and
or
nop
or
mov
sub
or
nop
or
mov
xor
or
nop
or
mov
cmp
or
nop
or
mov
inc
inc
or
nop
or
mov
dec
dec
or
nop
or
mov
push
push
or
nop
or
mov
pop
pop
or
nop
or
mov
popa
bound
mov
nop
or
mov
imul
ins
nop
or
mov
jno
inc
dec
xchg
add
mov
mov
js
or
nop
or
mov
add
adc
xchg
mov
mov
mov
mov
mov
nop
or
mov
cwde
cdq
or
nop
or
mov
mov
or
nop
movs
movs
cmps
mov
test
or
nop
or
mov
mov
or
nop
or
mov
mov
or
nop
mov
or
mov
nop
or
mov
enter
nop
or
retf
nop
or
mov
rcl
or
nop
or
mov
fcomp
or
nop
or
mov
loopne
or
nop
or
mov
call
or
jmp
or
mov
lock
or
nop
or
mov
clc
stc
or
nop
or
dec
enter
add
add
add
test
add
pop
pop
or
and
retf
xor
or
push
movups
adc
test
adc
pop
enter
pop
sbb
sbb
test
sbb
pop
enter
pop
and
and
test
and
pop
enter
daa
sub
sub
test
sub
pop
enter
das
xor
xor
test
xor
pop
enter
aaa
cmp
cmp
test
cmp
pop
enter
aas
inc
test
inc
inc
enter
inc
inc
inc
pop
enter
inc
dec
test
dec
dec
enter
dec
dec
dec
pop
enter
dec
push
test
push
push
enter
push
push
push
pop
enter
push
pop
test
pop
pop
enter
pop
pop
pop
pop
enter
pop
pusha
test
popa
(bad)
enter
arpl
enter
addr16
imul
ins
ins
pop
enter
outs
jo
pop
enter
enter
jae
jne
enter
ja
test
jns
enter
jnp
jge
enter
jg
test
add
enter
xchg
mov
mov
mov
test
enter
pop
enter
xchg
cwde
test
cdq
call
popf
pop
enter
lahf
mov
and
ret
arpl
add
in
push
std
daa
add
add
cmc
jmp
(bad)
in
inc
pop
enter
add
add
aas
mov
sub
sub
sbb
fst
or
or
nop
or
or
push
or
nop
or
adc
nop
or
nop
adc
leave
nop
or
adc
push
or
nop
or
sbb
leave
nop
cmp
scas
sbb
xchg
cmp
or
jmp
push
pop
and
nop
cmp
mov
and
out
sub
sub
leave
daa
sub
das
or
jg
sub
or
cs
nop
or
xor
or
nop
or
xor
or
nop
xor
leave
aaa
cmp
or
nop
or
cmp
or
nop
cmp
leave
aas
inc
inc
or
nop
or
inc
inc
nop
or
nop
inc
inc
leave
nop
or
inc
dec
dec
or
nop
or
dec
dec
nop
or
nop
dec
dec
leave
nop
or
dec
push
push
or
nop
or
push
push
nop
or
nop
push
push
leave
nop
or
push
pop
pop
or
nop
or
pop
pop
nop
or
nop
pop
pop
rcl
popa
inc
and
bound
fs
out
sbb
dec
ins
addr16
scas
imul
or
sbb
outs
aas
and
xchg
and
jg
and
xchg
jb
aas
je
xchg
and
jne
jbe
aas
sbb
out
xchg
jp
jnp
jl
xchg
jle
dec
xchg
add
fs
test
xchg
xchg
fs
lea
(bad)
nop
xchg
xchg
xchg
xchg
xchg
dec
xchg
xchg
fs
xchg
cdq
xchg
call
popf
sahf
fs
xchg
mov
mov
bound
(bad)
cmps
aas
mov
test
xchg
test
xchg
lods
fs
xchg
mov
fs
mov
dec
xchg
mov
dec
xchg
mov
mov
fs
mov
fs
dec
xchg
ret
xchg
lds
fs
xchg
leave
retf
xchg
out
(bad)
mov
push
mov
sbb
das
and
xchg
out
rcl
aas
jns
sbb
and
xchg
and
(bad)
sbb
fcomp
dec
xchg
dec
xchg
(bad)
fmulp
xchg
pavgb
loope
jecxz
mov
das
lock
fs
out
dec
xchg
jmp
in
xchg
out
out
lock
xchg
repnz
xchg
cmc
xchg
div
clc
xchg
and
adc
and
sti
cld
std
and
mov
(bad)
das
(bad)
in
inc
pop
enter
sub
jbe
add
add
clts
das
pop
pop
ins
enter
or
or
xchg
or
or
push
(bad)
dec
xchg
adc
jbe
das
adc
adc
push
aas
pop
cmovae
and
scas
push
sbb
sbb
ss
sbb
sbb
imul
push
xchg
and
xchg
pop
and
sbb
and
sbb
das
mov
sbb
bndstx
sub
and
xchg
and
xchg
das
xor
xor
ud0
push
jb
pop
sub
dec
xchg
aaa
(bad)
dec
xchg
cmp
cmp
dec
aas
inc
fs
xchg
inc
xchg
inc
inc
inc
dec
xchg
dec
fs
xchg
dec
xchg
dec
dec
dec
dec
xchg
push
fs
xchg
push
xchg
push
push
push
dec
xchg
pop
fs
xchg
pop
xchg
pop
pop
pop
dec
xchg
pusha
fs
xchg
arpl
gs
xchg
push
imul
ins
ins
outs
dec
xchg
jo
dec
xchg
jae
fs
xchg
dec
xchg
js
dec
xchg
jnp
fs
xchg
dec
xchg
and
add
dec
xchg
mov
mov
xchg
dec
(bad)
nop
fs
xchg
xchg
xchg
xchg
xchg
xchg
dec
xchg
cwde
fs
xchg
fwait
xchg
pushf
popf
sahf
or
fs
lahf
mov
mov
and
dec
sahf
cmc
mov
and
xor
and
test
stos
and
xor
lods
xor
xor
fs
mov
mov
mov
xchg
xor
pcmpgtw
mov
xchg
mov
fs
xchg
mov
mov
pop
dec
adc
sub
xchg
and
sub
rcr
and
rol
dec
xchg
enter
(bad)
bswap
xchg
leave
retf
dec
xchg
int3
dec
fs
xchg
rol
rcl
dec
xchg
aam
fs
xchg
xlat
fadd
fcmovu
dec
xchg
frstor
fs
loopne
fs
xchg
loop
enter
out
in
pcmpgtb
fs
call
jmp
xchg
in
in
fs
xchg
lock
inc
xchg
jmp
test
sub
enter
sub
sub
test
(bad)
and
mov
sti
paddb
(bad)
dec
test
sub
inc
mov
and
and
xor
xor
or
inc
ss
or
inc
xor
xor
adc
inc
ss
adc
inc
xor
xor
sbb
inc
ss
sbb
inc
xor
xor
and
inc
ss
and
inc
xor
xor
sub
inc
ss
sub
inc
xor
xor
xor
inc
ss
xor
inc
xor
xor
cmp
inc
ss
cmp
inc
xor
xor
inc
inc
cs
jmp
sub
in
sub
in
cs
sub
or
(bad)
dec
nop
or
nop
cmovl
nop
or
dec
dec
push
pop
add
nop
or
sub
sub
mov
or
xor
subps
inc
xor
pop
adc
pop
xor
popa
inc
cs
sub
in
cs
sub
cs
sub
sub
imul
nop
or
ins
ins
outs
iret
pusha
leave
nop
or
mov
sub
sub
mov
sub
inc
mov
or
iret
jnp
inc
ss
iret
jge
in
xchg
and
sub
test
or
jmp
sub
sub
or
popa
inc
mov
sub
mov
in
xchg
and
sub
dec
fcom
or
sub
sub
mov
sub
or
or
ss
ss
setle
lahf
cmovae
and
mov
xor
movs
xor
xor
and
test
stos
fs
ss
stos
shrd
and
lods
xrstor
mov
mov
inc
xor
mov
and
xor
and
mov
xor
mov
mov
and
rol
and
xor
les
and
xor
mov
xor
enter
inc
xor
int3
xor
xor
into
iret
inc
xor
rcl
shl
xor
aam
and
xor
(bad)
xlat
inc
xor
fcomp
fisub
xor
fdiv
and
xor
(bad)
inc
xor
loopne
loop
inc
xor
in
and
xor
out
inc
xor
call
xor
in
xor
xor
out
out
inc
xor
lock
repnz
xor
hlt
xor
xor
div
inc
xor
clc
stc
cli
and
xor
cld
xor
xor
(bad)
jmp
mov
add
add
xchg
and
add
xchg
and
or
or
xchg
and
or
xchg
and
adc
adc
xchg
and
adc
xchg
and
sbb
sbb
xchg
and
sbb
xchg
and
and
and
xchg
and
and
xchg
and
sub
sub
xchg
and
sub
xchg
and
xor
xor
nop
and
xor
adc
sub
xchg
and
xchg
cmp
cmp
xchg
and
cmp
and
xchg
and
inc
xchg
and
xchg
inc
inc
inc
sbb
inc
and
xchg
and
xchg
and
xchg
dec
dec
dec
loopne
and
dec
dec
scas
or
inc
sahf
jmp
(bad)
and
add
jmp
push
aas
ins
push
push
mov
jns
outs
push
push
das
xchg
out
out
push
out
repz
and
pop
aas
pop
cmc
sbb
pop
pop
pop
jg
fst
pusha
nop
or
nop
popa
jmp
and
fldenv
fs
gs
imul
sbb
push
sbb
and
xchg
ins
outs
outs
sbb
jb
sbb
and
xchg
jne
ja
xchg
and
js
jp
sbb
and
xchg
jge
jg
xchg
and
add
add
xchg
xchg
and
mov
and
xchg
lea
sbb
and
mov
aas
xchg
xchg
das
nop
or
xchg
xchg
aas
leave
nop
or
cdq
jae
nop
or
jmp
pushf
popf
setle
nop
or
mov
nop
mov
leave
movs
movs
cmps
or
nop
or
test
nop
or
nop
stos
stos
leave
nop
or
lods
lods
scas
or
nop
or
mov
nop
or
nop
mov
leave
nop
or
mov
mov
iret
gs
(bad)
sahf
mov
push
mov
shl
sub
enter
pop
enter
(bad)
sub
add
sub
movs
or
inc
cs
sub
cmp
inc
sahf
out
sub
repnz
cs
sub
cs
sub
sub
add
sub
sub
jb
pop
sub
sub
pop
jb
sub
jb
pop
jb
sub
pop
jb
pop
sub
sub
pop
jb
sub
jb
pop
jb
sub
pop
jb
pop
sub
sub
pop
jb
sub
jb
pop
jb
sub
enter
dec
jmp
in
in
xchg
out
aas
out
lock
icebp
pslld
enter
repz
sbb
mul
sbb
mov
sbb
jb
dec
nop
jmp
sub
jbe
push
das
add
add
inc
cmp
sub
add
xor
syscall
inc
cs
sub
cmp
aas
in
or
or
nop
or
prefetch
or
adc
adc
adc
or
xor
pop
sbb
sbb
and
sbb
sbb
xchg
and
jmp
nop
sub
mulps
sub
mov
nop
or
xor
mov
sub
inc
xor
sub
cs
xor
xor
xor
inc
xor
xor
ss
xor
xor
cmp
inc
xor
cmp
ds
xchg
out
iret
test
inc
nop
or
repz
inc
inc
add
or
sub
jg
cmp
dec
dec
sub
pop
rol
enter
pop
dec
jg
fs
xchg
push
enter
outs
push
push
jg
dec
xchg
push
xchg
push
pop
pop
dec
xchg
pop
jg
fs
xchg
pop
xchg
pop
pusha
popa
dec
xchg
arpl
fs
xchg
addr16
push
imul
xchg
outs
in
fs
jo
xchg
mov
fs
je
jne
int
xchg
fcomp
ja
and
xor
jp
xor
jnp
jge
inc
xor
jg
xor
xor
and
add
xchg
and
xor
and
mov
mov
nop
xchg
xchg
inc
xor
xchg
xchg
xchg
and
xor
xchg
xor
xor
and
fwait
pushf
popf
and
xor
lahf
xor
xor
dec
inc
mov
inc
xchg
cmp
sub
fcom
inc
cs
sub
dec
or
das
lods
sub
enter
jmp
cs
pop
das
out
icebp
nop
or
jmp
pop
ss
mov
out
xor
repnz
mov
iret
and
xor
mov
nop
(bad)
mov
or
mov
nop
or
ret
les
(bad)
leave
nop
or
(bad)
enter
nop
or
retf
int3
nop
or
nop
int
cmp
or
ins
rcl
(bad)
and
jns
shl
enter
sub
or
mov
fmul
ins
and
mov
sub
das
sub
ret
ud0
pop
enter
and
mov
ud0
retf
push
jb
das
(bad)
in
xor
dec
push
push
jmp
test
sub
xchg
dec
jmp
in
in
seta
out
out
jg
or
icebp
repnz
or
nop
pop
repz
or
jae
cmc
outs
push
imul
test
sub
gs
sub
iret
arpl
and
paddw
jmp
cdq
in
sbb
sub
in
add
dec
fst
add
jle
or
and
or
or
or
fs
or
or
sbb
xor
sbb
dec
push
push
adc
nop
or
adc
adc
xchg
or
pop
pop
test
dec
call
dec
xchg
sbb
dec
sbb
pop
sar
sub
dec
xchg
inc
push
and
pop
xor
inc
and
xor
dec
es
daa
pop
xor
pop
sub
iret
and
sub
fs
xor
pop
xor
aaa
xor
xor
and
inc
repnz
cmp
xor
ss
ss
cmp
ss
cmp
mov
and
ss
ds
cmovo
xor
inc
dec
call
inc
mov
pop
fld
push
and
rol
sub
arpl
dec
pop
dec
aas
and
xchg
and
and
xchg
dec
dec
(bad)
sbb
jg
and
xchg
and
and
xchg
push
push
addps
xchg
and
pop
pop
pop
and
xchg
and
and
xchg
pop
pop
pusha
sbb
arpl
fs
sbb
push
imul
xchg
imul
and
outs
outs
jo
sbb
and
xchg
jae
jne
xchg
and
jbe
xor
in
sahf
jmp
in
sub
or
jle
jg
and
and
inc
repnz
pusha
add
aas
test
and
pop
mov
pop
xor
push
mov
and
mov
and
inc
repnz
push
nop
xchg
in
call
cs
cs
in
sub
iret
and
sub
push
jb
fistp
inc
sahf
lahf
xchg
mov
and
adc
movs
dec
dec
xchg
xchg
jg
sbb
xchg
xchg
and
lods
scas
enter
fild
xchg
mov
xchg
mov
mov
cs
dec
mov
idiv
mov
in
sbb
cs
out
sub
fldcw
sar
and
ret
jg
or
nop
xor
pop
(bad)
inc
xor
(bad)
enter
nop
or
retf
fs
int
xor
into
iret
shl
xor
shl
and
xor
aam
inc
xor
(bad)
xlat
fcomp
inc
xor
fidivr
fcmovnu
fst
fidivr
fucomip
inc
(bad)
nop
cmp
loope
loop
inc
xor
in
inc
repnz
xor
push
out
xor
lahf
call
fs
jmp
imul
jg
out
inc
ss
out
lock
icebp
xor
and
ss
hlt
cmc
psadbw
inc
xor
clc
jg
cmp
or
cld
cli
xor
std
and
repnz
ds
call
bnd
cs
add
add
pop
xor
push
add
iret
and
inc
repnz
xor
push
or
xor
and
inc
repnz
cmp
or
dec
push
cvtdq2ps
and
push
and
and
cs
mov
jmp
cs
and
jb
cs
mov
inc
push
sbb
and
inc
repnz
xor
inc
ss
lahf
and
fs
xor
and
and
inc
xor
and
out
sbb
sub
jns
aas
cs
jmp
sub
dec
xchg
fs
sahf
xor
das
push
sahf
dec
xchg
xor
pop
xor
xchg
xor
xchg
mov
aaa
dec
xchg
cmp
lahf
jae
nop
pop
cmp
cmp
nop
or
cmp
fild
and
aas
inc
pop
inc
and
and
enter
pop
inc
mov
inc
pop
push
iret
and
sbb
repnz
xor
push
dec
xchg
and
inc
dec
jmp
inc
cs
cs
nop
sub
inc
xor
mov
xor
pop
test
pop
cs
cs
cs
pop
xchg
pop
pop
pusha
dec
xchg
bound
arpl
sbb
xchg
and
xchg
push
and
imul
xchg
and
xchg
and
xchg
jo
jb
mov
sbb
push
xchg
ja
dec
xchg
jp
fs
xchg
jge
xchg
jg
dec
xchg
or
xchg
mov
xchg
dec
mov
xchg
xchg
and
xchg
and
xchg
xchg
xchg
jg
and
mov
xchg
jg
sbb
xchg
cwde
xchg
and
mov
cdq
call
popf
and
mov
sahf
call
mov
xchg
movs
dec
xchg
cmps
mov
test
cli
popa
dec
xchg
stos
stos
lods
fist
cmp
sbb
xchg
aas
mov
fs
sahf
push
mov
mov
and
xor
mov
sbb
mov
mov
and
mov
enter
rol
fs
(bad)
ffreep
and
xor
and
xchg
enter
sbb
int
and
mov
into
jg
sbb
rcl
jg
sbb
sbb
(bad)
xlat
and
xchg
and
(bad)
or
sbb
pop
sar
cs
push
cs
jb
cs
cvttps2pi
loop
and
and
jecxz
in
or
mov
shld
push
out
push
call
jmp
dec
xchg
in
in
das
xchg
sbb
(bad)
nop
or
lock
pop
inc
(bad)
jae
repnz
repz
hlt
fst
psadbw
inc
(bad)
nop
or
stc
ss
gs
sti
out
xor
aas
std
(bad)
cmp
(bad)
pop
(bad)
jg
das
nop
pop
bnd
das
add
das
in
mov
add
and
das
pop
aas
xchg
out
out
or
or
xchg
and
or
jns
pop
or
xchg
out
movups
xchg
out
adc
sbb
push
sbb
adc
iret
push
mov
or
das
dec
xchg
sbb
fs
xchg
sbb
fs
xchg
fs
and
ins
enter
and
and
dec
xchg
mov
xchg
mov
sub
ins
dec
sub
sub
fs
xchg
das
xor
dec
xchg
xor
fs
push
dec
sahf
dec
xchg
jae
fs
xchg
cmp
dec
xchg
mov
dec
xchg
aas
inc
xchg
inc
inc
inc
dec
xchg
inc
fs
xchg
dec
xchg
dec
dec
dec
dec
xchg
dec
fs
xchg
push
xchg
push
push
push
sbb
push
push
aas
sbb
sbb
pop
xchg
out
and
pop
sbb
pop
xchg
and
scas
pusha
popa
out
and
bound
xchg
and
xchg
fs
sbb
push
imul
sbb
outs
dec
repz
and
push
jo
or
jae
jno
outs
or
nop
cmp
jne
or
nop
jbe
cmp
sahf
dec
call
iret
and
cmp
and
fistp
jge
iret
and
jg
repnz
or
and
fs
out
iret
cmp
out
out
xchg
mov
mov
sbb
sbb
mov
mov
nop
xchg
setb
mov
sbb
push
mov
jmp
das
enter
xchg
aas
cwde
fistp
pop
push
call
pushf
pop
popf
(bad)
mov
das
push
bound
pop
sar
das
das
ins
dec
sahf
retf
fbstp
mov
movs
sbb
xchg
xchg
stos
enter
bts
lahf
and
enter
scas
bswap
test
jmp
das
and
pop
(bad)
mov
popa
dec
sbb
mov
mov
mov
scas
dec
xchg
enter
mov
sbb
xchg
and
mov
inc
rcr
and
ret
and
xchg
and
(bad)
ins
dec
sbb
pop
and
xchg
bswap
setb
sbb
into
sbb
shl
sbb
and
xchg
aam
(bad)
pop
dec
sbb
mov
(bad)
fidivr
dec
xchg
fstp
xchg
fisubr
and
(bad)
(bad)
loop
fs
sbb
jg
in
and
mov
sbb
jmp
xchg
and
in
xchg
and
xchg
in
out
out
sbb
repnz
xchg
and
hlt
xchg
and
xchg
cmc
div
sbb
cli
and
xchg
and
cld
xchg
and
xchg
std
(bad)
inc
push
adc
jo
repnz
inc
adc
fbld
pop
inc
push
mov
add
add
add
xor
in
add
gs
add
setb
xchg
out
push
or
xchg
out
out
or
mov
das
call
xchg
out
inc
push
gs
setb
xchg
out
adc
adc
adc
adc
scas
call
xchg
popf
inc
mov
cmp
add
inc
push
xchg
push
pop
sbb
and
push
sbb
sbb
scas
push
push
aad
xchg
out
pop
mul
and
and
pop
sar
and
mov
jns
mov
jns
pop
sub
pop
retf
xchg
mov
xchg
xor
jg
nop
cmp
cmp
stc
das
iret
gs
xor
xor
and
or
nop
mov
jae
aaa
mov
js
nop
das
cmp
out
push
mov
and
and
or
pop
jno
rcr
inc
leave
nop
sub
xchg
add
inc
cs
push
sub
inc
sahf
neg
push
repnz
ss
dec
pinsrw
repnz
pop
dec
mov
repnz
(bad)
nop
jg
outs
xor
iret
gs
push
mov
inc
xor
push
xchg
xor
push
push
out
(bad)
jo
nop
cmp
pop
out
into
and
push
repz
nop
xor
sbb
sbb
(bad)
pop
iret
pop
scas
pop
dec
inc
xor
pusha
popa
pop
nop
rcl
xor
shl
inc
ss
addr16
or
scas
push
out
dec
xchg
popa
enter
outs
pop
jo
xchg
out
and
jb
sbb
sbb
je
sahf
dec
sbb
data16
dec
bound
aas
call
dec
jp
jnp
mov
popa
jl
jge
jle
stc
or
push
ss
xor
pop
add
inc
xor
or
outs
leave
mov
pop
mov
nop
or
mov
or
nop
xchg
nop
or
nop
xchg
xchg
leave
nop
or
xchg
xchg
xchg
inc
rcl
cdq
iret
gs
iret
call
and
outs
popf
inc
rcl
mov
pmaxub
les
xchg
or
nop
fbld
nop
cmp
test
ret
nop
jg
fild
inc
lods
pop
popa
lods
fs
or
das
scas
lahf
inc
xor
cmpxchg
(bad)
mov
push
nop
xor
mov
iret
iret
gs
ret
mov
inc
xor
mov
or
or
mov
leave
nop
iret
rol
inc
push
inc
mov
les
and
out
and
gs
nop
enter
inc
xor
jae
retf
int3
pop
inc
xor
nop
or
shr
repnz
dec
ror
leave
jae
inc
aam
pop
aad
or
jae
(bad)
xlat
xor
fnstcw
fs
fstp
fmul
or
jae
fst
fst
mov
nop
or
loop
jecxz
and
gs
inc
in
and
jg
das
nop
xor
(bad)
call
inc
(bad)
jmp
xor
in
dec
out
aas
inc
xor
out
outs
lock
fs
ss
repnz
repz
iret
gs
xor
cmc
aas
sbb
adc
and
clc
dec
and
gs
stc
aas
js
or
lahf
cld
std
leave
nop
cmp
jg
(bad)
jmp
add
add
aas
add
aas
mov
pop
iret
add
sbb
pop
repnz
rol
add
repnz
inc
pop
adc
repnz
xlat
pop
repnz
repnz
or
test
call
pop
jae
jae
pop
pop
pop
mov
sbb
adc
mov
xchg
out
adc
xchg
out
pop
sbb
jnp
sbb
mov
das
sbb
jae
push
into
pop
out
nop
or
add
pop
jae
nop
mov
and
leave
nop
or
and
es
nop
or
mov
and
outs
les
and
xor
sub
cs
lahf
jns
leave
jae
xor
xor
nop
cmp
jg
xor
or
nop
or
aaa
and
xchg
lds
and
and
outs
pop
in
pop
popa
dec
xchg
cmp
and
scas
aas
jg
jns
popa
inc
fistp
xchg
xchg
and
inc
inc
in
aad
inc
pop
dec
inc
pop
or
das
inc
pop
dec
pop
int
xchg
push
dec
iret
and
jb
fst
dec
scas
push
fst
pop
push
pop
jns
das
lods
dec
push
pop
push
pop
inc
pop
enter
push
pop
mov
pop
pop
pop
pop
pop
and
in
pop
pop
pop
pop
pop
add
mov
rcl
bound
inc
repnz
fisub
nop
cmp
xor
stc
iretw
gs
addr16
push
and
and
nop
sub
enter
(bad)
outs
pop
outs
pop
nop
pop
repnz
jo
jno
das
in
mov
je
xor
and
jbe
nop
cmp
pop
adc
pop
je
nop
(bad)
jns
inc
ins
enter
pop
jl
and
xchg
jle
and
or
enter
sub
dec
sbb
xchg
dec
sahf
out
xchg
mov
mov
sbb
xchg
mov
sahf
retf
aas
jae
mov
nop
xchg
jns
sbb
setb
xchg
xor
mov
xchg
das
inc
push
xchg
movs
jns
nop
xchg
outs
mov
xchg
xchg
cwde
setns
out
(bad)
push
pushf
fs
(bad)
nop
popf
(bad)
sahf
pop
nop
lds
(bad)
nop
or
mov
nop
or
movs
cmps
nop
or
nop
cmps
test
and
ret
stos
stos
dec
or
nop
(bad)
lods
lods
dec
pop
inc
xchg
or
out
pop
dec
xchg
mov
mov
popa
mov
mov
mov
mov
mov
xchg
mov
mov
mov
dec
xchg
dec
mov
xchg
rol
(bad)
nop
les
leave
nop
or
(bad)
or
nop
or
leave
retf
leave
nop
retf
int3
or
jae
int
into
iret
nop
or
nop
rcl
or
or
aam
inc
xor
(bad)
pop
dec
or
or
jg
dec
or
nop
or
fcmovu
xchg
or
outs
test
fisttp
nop
or
loopne
loop
leave
nop
or
in
leave
nop
or
in
out
or
jae
call
leave
jmp
nop
in
out
in
mov
inc
pop
pop
inc
cs
neg
pop
or
inc
(bad)
mov
nop
or
dec
div
or
nop
or
stc
cli
nop
or
nop
sti
cld
leave
nop
or
std
(bad)
call
repnz
push
add
add
add
and
add
and
pop
inc
and
das
in
rol
iret
pop
and
and
pop
jbe
or
inc
or
pop
repnz
(bad)
adc
or
xor
jae
test
and
mov
xchg
and
and
enter
and
and
pop
and
and
test
test
and
and
xchg
and
outs
and
and
sbb
xchg
and
xchg
and
xchg
daa
fild
scas
sub
ins
enter
sub
sub
xchg
pop
xor
fs
xor
dec
xchg
mov
ins
dec
sahf
inc
ss
aas
cmp
xchg
lahf
cmp
in
cmp
cmp
dec
ds
aas
and
mov
inc
aas
inc
mov
sbb
jmp
mov
sbb
pop
pop
out
out
inc
scas
dec
jno
xchg
out
dec
push
dec
iret
and
push
dec
hlt
dec
leave
nop
xor
outs
dec
add
add
push
and
jmp
mov
imul
out
and
push
push
sub
inc
and
pop
ret
pop
mov
and
and
xchg
out
sbb
dec
xchg
dec
sahf
retf
xchg
in
xchg
in
gs
arpl
fild
imul
sub
sbb
out
out
and
iret
outs
scas
jb
xchg
out
jo
jno
sbb
jb
pcmpeqb
cmp
or
jae
inc
(bad)
ja
js
aad
nop
or
jnp
push
leave
jae
jl
and
or
das
jle
jg
xchg
aas
sbb
out
dec
inc
xor
fiadd
and
and
in
mov
mov
pop
enter
and
repnz
mov
(bad)
call
aas
popa
xchg
sbb
push
xchg
xchg
xchg
or
sbb
jg
jmp
in
in
cmps
and
fld
inc
mul
(bad)
or
or
pop
pushf
pop
jae
nop
xor
fst
iret
mov
jae
mov
leave
jae
movs
movs
pop
ss
cmps
pop
cmps
jg
out
mov
imul
sbb
lods
lods
and
inc
pop
dec
xsave
scas
and
mov
mov
movs
and
mov
xchg
mov
pop
sbb
mov
sbb
lahf
mov
sbb
mov
out
mov
and
pusha
rol
test
sbb
pop
(bad)
out
lds
movs
das
mov
fs
xchg
leave
retf
fs
retf
int3
xchg
fs
mov
dec
rcl
bndstx
xchg
outs
aam
adc
mov
aad
(bad)
aas
and
xor
xlat
out
fcom
fcmovu
sbb
fidiv
sbb
out
sbb
jecxz
sbb
and
xchg
out
call
jmp
xchg
and
in
xchg
and
xchg
out
out
lock
retf
sbb
das
aas
push
repnz
xor
push
cmc
and
xor
div
and
xor
stc
cli
inc
xor
sti
cld
std
and
xor
dec
jmp
jg
pop
push
das
add
inc
and
in
mov
push
and
or
pop
and
and
repnz
pop
or
or
or
test
and
jns
das
push
and
and
inc
pop
enter
and
and
and
jns
das
in
and
and
and
enter
sbb
xor
sbb
nop
gs
sbb
repnz
ss
scas
lock
repnz
repnz
and
xor
das
push
and
es
push
daa
mov
scas
sub
jp
in
mov
iret
sub
das
or
and
fs
mov
das
lahf
xor
repnz
cmp
and
xchg
out
(bad)
xor
sbb
push
push
nop
cmp
xor
icebp
cmp
nop
or
cmp
cmp
jmp
scas
cmp
cmp
and
pop
mov
xchg
pop
inc
sbb
inc
inc
xchg
and
bound
and
sbb
dec
pop
sbb
dec
pop
dec
and
xchg
and
dec
sbb
pop
and
mov
push
rsqrtps
sbb
push
mov
and
das
push
sbb
pop
enter
cvtdq2ps
xchg
xchg
lahf
pop
nop
out
and
popa
popa
and
jmp
scas
enter
fs
gs
sbb
addr16
imul
jmp
xchg
xor
imul
test
jno
or
iret
fst
jbe
xchg
rcl
and
call
repz
inc
push
jl
leave
nop
xor
jle
jg
add
sub
and
or
cmp
out
push
test
paddsw
mov
pop
pop
gs
mov
mov
pop
ss
lahf
dec
mov
(bad)
nop
outs
std
repnz
cmp
jb
and
fist
xchg
(bad)
fs
sbb
and
xchg
xchg
jns
sbb
mov
jg
pop
aad
in
aam
mov
nop
jno
das
mov
fs
(bad)
movs
fbld
pop
inc
test
test
shr
or
lods
lods
das
stc
scas
repnz
ss
das
movs
mov
and
mov
dec
sbb
mov
pop
xchg
inc
pop
mov
mov
sbb
pop
mov
mov
xchg
mov
and
mov
dec
jmp
cmovae
and
mov
ret
(bad)
kmovb
and
leave
nop
das
enter
cmp
xor
das
fmul
jae
or
das
hlt
call
add
rcl
jg
and
dec
xchg
and
xchg
aad
xlat
xchg
(bad)
mov
popa
dec
fistp
(bad)
and
xchg
and
fisub
loopne
loope
xor
adc
sbb
repz
push
in
(bad)
nop
rcl
xchg
or
cmp
nop
or
nop
jmp
in
cmp
or
in
out
arpl
cmp
lds
nop
or
nop
repnz
jg
psadbw
ss
test
xor
ffreep
push
cli
xchg
into
sti
cld
std
or
xchg
dec
pop
pop
mov
pop
add
cmp
(bad)
add
add
repnz
jg
and
test
push
and
and
or
psubd
or
or
test
cld
iret
or
inc
or
iret
and
adc
adc
xor
adc
xchg
xor
cmc
adc
leave
nop
cmp
sbb
dec
xchg
cmp
movsx
ins
call
jns
mov
cmps
sbb
push
out
pop
setle
and
jns
popa
dec
sahf
dec
bound
and
jns
jns
and
test
jns
into
daa
sub
xchg
mov
dec
xchg
sub
xor
jmp
comiss
pop
jnp
nop
xor
jb
xor
xor
ret
xor
inc
aaa
out
cmp
iret
and
out
idiv
fst
cmp
or
aas
inc
sbb
nop
inc
cmovb
or
inc
inc
nop
or
inc
scas
pop
repnz
(bad)
dec
jg
dec
outs
ss
repnz
dec
dec
pslld
ss
in
dec
inc
ss
dec
push
fist
enter
outs
push
and
pop
pop
repnz
push
and
dec
call
pop
shl
pop
outs
pop
and
and
lods
dec
pop
and
and
or
and
pop
and
and
das
in
mov
arpl
enter
and
pop
repnz
pop
data16
push
and
push
dec
sbb
imul
jne
xchg
outs
outs
and
or
outs
jo
jno
pop
repnz
pop
jb
jae
je
test
and
jns
das
ja
js
repnz
pop
enter
and
test
and
das
in
and
and
pop
enter
and
nop
pop
repnz
and
test
enter
and
pop
repnz
mov
mov
das
in
mov
(bad)
and
nop
jno
nop
setno
fs
add
call
xor
fs
repnz
and
leave
nop
jg
call
pushf
call
dec
sahf
lahf
out
or
nop
xor
fs
ss
mov
adc
mov
and
and
mov
mov
test
xchg
xchg
ins
dec
sahf
dec
dec
pop
scas
scas
setle
jmp
nop
or
inc
dec
mov
xchg
or
mov
arpl
mov
mov
pop
ds
sbb
sbb
mov
jmp
jae
jae
and
pop
enter
out
and
dec
xchg
xchg
leave
inc
sbb
retf
int3
in
ins
dec
pop
int
aam
dec
sbb
xchg
jg
pop
xchg
rcr
rcr
or
repz
mov
inc
xor
(bad)
xlat
das
xor
fdivr
fldcw
pop
rcl
pop
push
pop
repnz
repnz
or
fnstsw
and
loope
cmp
cmp
sar
aam
mov
enter
fisttp
jns
sbb
jg
call
jmp
and
sbb
xchg
outs
out
jns
sbb
icebp
and
mov
repnz
repz
sbb
neg
xor
xor
test
inc
cli
mov
cld
aas
jmp
std
(bad)
inc
sbb
and
xchg
add
add
enter
aas
add
repnz
pop
pop
and
and
in
mov
or
inc
js
das
or
or
test
push
and
inc
jmp
and
and
jns
das
in
and
and
and
enter
sbb
mov
and
and
and
in
sbb
repnz
jbe
fistp
inc
repnz
and
pop
ret
and
in
and
gs
es
push
out
inc
xor
sub
jae
repz
sub
sbb
or
sub
cs
cmp
or
mov
xor
lahf
cmp
jae
xor
mov
mov
jns
xor
adc
pushw
pop
xchg
or
cmp
aam
cmp
mov
ja
(bad)
and
and
aas
and
pop
xor
lahf
inc
hlt
mov
cmp
jmp
jbe
pop
inc
dec
inc
in
ins
enter
push
dec
xchg
dec
pop
dec
cmovnp
xchg
dec
ins
enter
dec
outs
push
mov
push
aas
push
push
sbb
push
push
lahf
and
mov
push
xorps
xchg
out
pop
dec
cmps
pop
pop
and
mov
pop
subps
xchg
xchg
enter
punpcklbw
nop
xor
popa
bound
push
arpl
and
ret
gs
inc
ss
addr16
push
jns
push
imul
imul
xchg
outs
xchg
jo
jb
xchg
je
dec
xchg
ja
ins
dec
xchg
lahf
fadd
jnp
jl
xchg
jle
dec
xchg
add
fs
test
xchg
xchg
xchg
dec
sahf
retf
xchg
xor
popa
xchg
pop
inc
push
xchg
nop
and
and
stc
xchg
and
leave
xchg
movs
jmp
mov
das
call
and
daa
and
nop
out
out
and
and
nop
mov
mov
nop
movs
mov
and
cmps
out
cmps
pop
test
pop
xor
pop
push
repnz
jmp
fisub
xchg
mov
scas
sbb
scas
mov
popa
enter
mov
mov
dec
repz
mov
xor
mov
xor
dec
mov
xor
mov
pop
mov
fcos
and
pop
mov
xchg
and
xchg
pop
rcl
ret
les
nop
xor
(bad)
ret
fld
aas
enter
xchg
and
mov
retf
xchg
and
int3
int
outs
dec
sbb
out
sbb
rcl
sbb
aam
in
lods
and
fild
xlat
dec
sahf
retf
xchg
dec
add
xchg
ins
fidivr
dec
fsubr
xchg
pusha
dec
out
fisttp
loopne
cs
dec
xchg
loop
aaa
sbb
(bad)
in
sbb
dec
sahf
dec
(bad)
call
ins
dec
sahf
pop
jmp
dec
in
das
out
ucomiss
xchg
and
lock
mov
jns
repnz
bound
xchg
sbb
das
xchg
out
and
lahf
inc
test
in
test
cli
sti
cld
enter
std
dec
(bad)
inc
and
mov
(bad)
sbb
nop
pop
repnz
and
iret
and
and
and
into
and
gs
pop
dec
sahf
dec
sahf
jns
jb
xor
mov
jmp
sbb
xchg
out
pxor
fcomp
jae
jae
adc
adc
fst
adc
jns
sbb
fs
xchg
sbb
dec
xchg
sbb
out
sbb
repz
out
push
pop
js
and
mov
and
dec
xchg
mov
in
ins
and
jns
sbb
pop
sub
sub
sub
cs
sbb
bound
jns
das
and
xor
or
call
xchg
call
xor
dec
sbb
dec
cmp
xchg
xchg
mov
xchg
out
cmp
cmp
fnstcw
call
or
inc
out
inc
nop
or
nop
inc
inc
ret
leave
inc
inc
inc
iret
nop
xor
dec
dec
scas
add
jo
cmp
cmp
and
and
sbb
push
cmp
or
outs
jmp
cmp
sub
push
nop
or
nop
push
orps
inc
ret
pop
pop
pop
jae
jae
outs
add
fst
lahf
pop
jg
jae
jae
pop
cmps
pop
nop
or
(bad)
popa
rdtsc
and
leave
bound
fst
gs
jns
sbb
xchg
packssdw
enter
ins
fisttp
dec
sahf
push
outs
xor
jns
popa
jo
mov
mov
xor
dec
sbb
and
dec
sahf
pop
ja
push
js
fs
ss
jp
jnp
inc
ss
jl
jge
jle
inc
ss
outs
sub
ret
sub
inc
adc
test
push
mov
sbb
pop
jns
sbb
xor
mov
lea
stc
mov
cmp
out
jno
mov
cmp
lds
les
xchg
les
xchg
xchg
leave
jae
nop
seta
jmp
dec
imul
repz
fwait
pushf
jo
nop
lds
push
repnz
and
xchg
mov
and
dec
movs
jg
setp
cmps
ds
cmps
in
ins
dec
test
mov
mov
and
xchg
test
xor
imul
mov
in
mov
nop
cmp
cmps
mov
inc
mov
dec
inc
and
inc
cs
and
and
jae
inc
lahf
xor
jae
mov
leave
jae
mov
nop
or
outs
or
jae
shr
and
(bad)
jmp
lds
ffreep
dec
gs
ror
dec
leave
das
repnz
aad
push
scas
retf
int3
call
neg
dec
iret
das
shr
in
in
(bad)
shl
xchg
shr
aam
enter
aad
(bad)
lahf
sbb
xchg
fcomp
popa
dec
sahf
retf
lahf
(bad)
fisttp
xchg
movs
sahf
dec
sahf
mov
repz
loopne
(bad)
loope
or
(bad)
jmp
push
jns
jnp
lods
leave
jae
nop
out
out
dec
out
(bad)
nop
or
jmp
imul
fst
scas
out
pop
xor
out
lock
mov
sbb
repnz
repz
sbb
cmc
inc
das
jns
push
test
jmp
or
loope
xor
in
(bad)
std
or
inc
dec
(bad)
mov
add
jns
mov
add
add
add
or
and
and
or
pop
jbe
das
or
in
inc
ds
or
xchg
mov
adc
std
adc
fs
adc
and
pop
push
pop
pop
(bad)
jae
jae
sbb
ss
jae
sbb
sbb
sbb
sbb
inc
jb
pop
inc
and
xor
and
lahf
mul
and
leave
and
jae
nop
lahf
sub
icebp
sub
repnz
jno
and
or
psubusw
jae
sub
jae
nop
xor
or
nop
or
xor
and
and
pop
and
repnz
dec
aaa
cmp
add
fst
cmp
cmp
jae
ds
femms
leave
jae
inc
dec
test
adc
pop
jmp
and
sbb
dec
or
and
or
dec
das
xchg
and
ret
push
dec
dec
popf
inc
sahf
loopne
jmp
xchg
iret
out
push
push
(bad)
adc
push
and
push
and
pop
ss
aas
dec
pop
push
or
inc
repnz
pop
scas
pop
fs
xor
pop
pop
pop
or
nop
xor
pop
pusha
nop
or
jg
repnz
ret
dec
fs
jae
rdmsr
data16
fs
addr16
(bad)
nop
outs
push
daa
imul
pop
mov
ins
arpl
nop
xor
call
sbb
jae
jo
iret
adc
jb
lahf
xchg
je
jne
jbe
xchg
ja
js
dec
xchg
jnp
fs
xchg
dec
xchg
and
add
dec
xchg
mov
mov
xchg
dec
(bad)
nop
fs
xchg
xchg
xchg
xchg
xchg
xchg
dec
xchg
cwde
fs
xchg
fwait
xchg
pushf
popf
sahf
dec
xchg
mov
mov
dec
xchg
dec
cmps
test
dec
xchg
stos
xchg
lods
lods
scas
dec
xchg
mov
dec
xchg
mov
fs
xchg
dec
mov
fs
xchg
mov
mov
fs
mov
fs
xchg
(bad)
(bad)
xchg
enter
fs
retf
fs
xchg
int
dec
xchg
shl
fs
rol
aad
dec
xchg
fsub
fs
fild
fstp
dec
xchg
loopne
dec
xchg
jecxz
fs
xchg
in
dec
xchg
call
jmp
dec
xchg
in
out
dec
xchg
lock
xchg
xrelease
hlt
cmc
test
dec
idiv
fs
xchg
sti
xchg
cld
std
(bad)
and
xor
jb
add
jns
imul
cmp
or
movs
jmp
cmp
dec
or
or
or
nop
or
or
jae
nop
or
xchg
or
icebp
jmp
and
mov
movlps
xchg
out
adc
push
adc
dec
repz
push
jg
push
pop
nop
or
jae
sbb
cmp
or
sbb
mov
nop
sbb
fstp
das
(bad)
and
nop
or
and
or
jae
and
out
and
nop
daa
jmp
or
nop
or
sub
fs
call
ins
dec
xchg
das
pop
xor
xor
sbb
xor
ss
xchg
and
mov
(bad)
cmp
cmp
cmp
ds
aas
jns
jns
pop
jmp
arpl
pop
ss
inc
das
inc
or
inc
repnz
inc
jg
leave
jae
nop
inc
jg
dec
or
nop
or
nop
or
nop
dec
jg
cmp
or
dec
dec
and
pop
add
es
xchg
push
nop
or
inc
push
jg
leave
nop
or
push
pop
pop
or
nop
or
pop
pop
nop
or
nop
pop
pop
leave
nop
or
popa
or
nop
or
arpl
rcl
and
punpckhbw
ss
push
iret
pop
xor
ins
ins
movd
and
sbb
cmp
sbb
xchg
and
xchg
jne
emms
iret
and
sahf
push
jmp
repnz
jb
es
pop
jb
es
xor
jg
xchg
and
xchg
add
pop
mov
or
es
jb
es
pop
jb
es
repnz
es
pop
jb
es
xchg
inc
xor
xchg
xchg
xchg
cmp
xor
jg
cdq
xchg
or
nop
call
pushf
lock
leave
nop
or
sahf
lahf
mov
mov
leave
nop
movs
movs
leave
nop
or
cmps
cmps
test
leave
nop
or
stos
stos
nop
or
nop
lods
lods
leave
nop
or
scas
scas
mov
leave
nop
or
mov
nop
or
nop
mov
leave
nop
or
mov
mov
cmp
iret
scas
mov
nop
or
mov
adc
es
out
repz
and
ret
push
xor
(bad)
lds
inc
xor
(bad)
enter
xor
retf
xor
xor
int
inc
xor
iret
rcl
and
xor
shl
and
xor
aad
cs
jmp
es
cs
es
in
pop
fs
ficomp
fnstsw
leave
nop
xor
nop
lds
ret
leave
in
out
inc
xor
call
xor
in
and
inc
xor
out
cs
xchg
jmp
es
cs
es
ret
imul
xor
idiv
stc
and
xor
sti
or
inc
xor
std
mov
nop
(bad)
call
nop
daa
xchg
push
daa
daa
xchg
out
test
push
add
xchg
and
add
cs
sahf
or
dec
nop
sub
or
nop
or
or
nop
movups
nop
or
adc
adc
jg
pop
enter
adc
repnz
daa
pop
dec
sbb
inc
xor
pop
sbb
and
sbb
out
push
pop
and
ss
mov
xor
cmp
daa
(bad)
jmp
and
jb
daa
daa
sbb
sub
sbb
and
xchg
sub
sbb
rdtsc
and
xchg
and
xor
sbb
dec
xchg
and
neg
or
fs
call
enter
daa
daa
cmp
xchg
jg
sbb
xchg
inc
enter
inc
dec
jmp
fs
dec
cmovnp
dec
dec
dec
xchg
push
fs
xchg
push
xchg
push
push
push
dec
xchg
pop
sbb
mov
and
sbb
and
xchg
and
sbb
push
fs
xchg
and
pop
xchg
and
mov
punpckhwd
xchg
and
imul
xchg
and
xchg
and
xchg
jo
jb
xchg
and
jae
jne
and
dec
pcmpeqd
daa
(bad)
jns
and
jp
jnp
xchg
and
jl
jge
(bad)
call
call
add
mov
iret
jmp
mov
das
and
test
dec
xchg
fs
mov
mov
xchg
mov
xchg
xchg
xor
and
and
pop
inc
xchg
jg
xor
imul
cdq
nop
or
nop
call
pop
popf
aas
sahf
nop
cmp
or
push
mov
mov
pop
add
daa
daa
scas
or
nop
or
nop
or
nop
stos
shrd
or
lods
scas
scas
outs
or
mov
nop
or
nop
btr
mov
or
nop
or
mov
nop
mov
leave
mov
nop
or
rol
or
nop
ret
(bad)
leave
nop
or
(bad)
dec
xchg
ins
dec
xchg
retf
int3
jbe
into
iret
dec
xchg
dec
shl
fs
aam
fs
xchg
(bad)
xlat
dec
xchg
fldenv
fs
fadd
(bad)
dec
xchg
loope
fs
sahf
scas
loop
in
dec
sahf
dec
jmp
dec
ins
out
retf
xchg
mov
dec
sahf
dec
sahf
or
fs
sahf
sub
inc
repnz
shr
jmp
xor
repz
ss
xor
cmc
idiv
inc
xor
aas
clc
stc
ss
gs
jmp
sti
aas
(bad)
and
cld
or
add
pop
sbb
pop
fcomp
xlat
adc
xchg
out
or
pop
add
dec
push
push
pop
xchg
out
out
or
xchg
out
out
or
or
or
or
inc
scas
push
enter
sbb
(bad)
adc
jns
jns
jg
xchg
in
in
xlat
adc
adc
cs
adc
ret
sti
lahf
sbb
inc
pop
repnz
repnz
fmul
gs
repnz
lahf
gs
iret
and
and
adc
lock
adc
and
jae
jae
adc
adc
pop
enter
out
sahf
retf
xchg
sub
sub
out
daa
xlat
adc
adc
out
out
adc
adc
cmp
mov
outs
xor
xchg
cmp
cmp
and
aas
xchg
cmp
cmp
xor
dec
call
dec
sahf
call
sahf
scas
cmp
out
out
out
cmp
or
call
aas
adc
jmp
xor
gs
mov
call
das
xchg
xchg
cs
enter
dec
lahf
or
dec
pop
and
mov
mov
push
ins
dec
sbb
lahf
push
rsqrtps
out
xchg
mov
out
push
fwait
push
out
and
push
out
pop
(bad)
cdq
jns
sbb
pop
in
mov
pop
(bad)
ficomp
xchg
mov
xchg
out
out
pusha
add
out
out
bound
sbb
gs
arpl
xchg
addr16
cs
jns
das
imul
imul
ins
fsubr
nop
cmp
cmp
stos
outs
xor
fnstenv
jno
jb
xchg
cmp
mov
je
dec
sahf
dec
into
jne
scas
jns
jns
imul
jns
jns
inc
jns
jp
das
jns
pop
jnp
push
jl
xchg
les
cmp
cmp
sbb
sbb
repnz
dec
sahf
dec
lods
add
jns
popa
dec
test
xchg
and
sub
movs
and
mov
sbb
lea
xchg
pusha
enter
xchg
outs
dec
sahf
dec
bound
int
sahf
movs
xchg
sub
xchg
pop
ss
ins
xchg
cwde
pmullw
repnz
pop
call
lahf
pushf
fs
lock
repnz
adc
dec
call
dec
bound
xchg
sub
movs
lahf
movs
mov
sub
in
adc
in
stos
(bad)
stos
xchg
mov
lods
sbb
sbb
or
repz
neg
or
mov
dec
or
aas
mov
mov
and
and
scas
movs
jns
inc
mov
in
in
test
in
cmp
xchg
ins
enter
sar
sbb
ret
mov
(bad)
lds
call
push
enter
dec
and
(bad)
fs
sahf
dec
pop
retf
int3
out
daa
mov
mov
out
adc
adc
repnz
inc
inc
rcr
pop
rcl
jg
out
seto
cmp
mov
xchg
rcl
and
mov
nop
rcl
lahf
inc
push
inc
ret
fidivr
shl
enter
xlat
adc
adc
pop
enter
scas
xchg
mov
out
out
out
das
dec
call
xchg
jmp
dec
sahf
retf
scas
(bad)
in
fs
sahf
retf
aas
pop
out
out
or
mov
pop
or
repz
jae
dec
(bad)
hlt
sub
nop
or
imul
xor
imul
stc
inc
inc
(bad)
nop
cli
mov
inc
inc
cld
das
sar
or
pop
or
(bad)
out
repnz
in
jmp
adc
add
fld
add
cmp
shrd
inc
or
cmp
inc
or
dec
xchg
cmp
sbb
mov
or
and
femms
scas
repnz
repnz
mov
pop
repnz
adc
cwde
adc
pop
repnz
pusha
adc
repnz
repnz
jbe
jmp
pop
retf
sbb
pop
repnz
xchg
sbb
sbb
(bad)
sbb
enter
xlat
adc
nop
or
sahf
dec
sahf
dec
add
test
sahf
dec
sahf
dec
xchg
cmps
and
mov
mov
mov
add
ror
jns
jns
adc
or
lahf
sub
pop
ss
punpckhdq
fst
xor
dec
jae
jae
xor
xor
jae
jae
xor
leave
jae
aaa
jmp
leave
jae
jae
cmp
and
leave
jae
cmp
xchg
cmp
xor
pop
cdq
ds
aas
inc
iret
adc
jae
inc
movs
inc
or
leave
jae
inc
popf
inc
jne
xchg
or
inc
inc
mov
xlat
adc
dec
pop
outs
or
dec
dec
out
inc
cs
jns
push
dec
sbb
push
out
xchg
xchg
mov
push
in
or
adc
fist
iret
ins
push
push
pop
adc
mov
pop
adc
pop
enter
aas
mov
mov
pop
call
dec
sahf
retf
sbb
mov
lods
and
das
bound
arpl
xchg
out
iret
test
gs
dec
pusha
dec
aas
popw
jge
ins
dec
sahf
dec
and
mov
test
jns
jns
adc
xor
cmovle
nop
cmp
fnsave
dec
repnz
repnz
cmp
jae
jae
inc
je
imul
aas
ja
inc
add
js
jns
jp
leave
jae
pop
mov
or
jle
and
and
iret
and
jmp
xor
iret
and
repnz
repnz
inc
test
xchg
pop
repnz
je
sbb
mov
cld
sbb
mov
repnz
iret
mov
xlat
adc
das
xlat
iret
and
and
xchg
pop
sbb
inc
xchg
pop
mov
iret
out
cwde
dec
cdq
aas
xchg
rcl
ficom
popf
pop
dec
call
lahf
dec
sahf
dec
sahf
bound
dec
sahf
fisub
retf
pusha
movs
inc
sahf
or
iret
and
test
stos
outs
leave
stos
jae
jae
lods
mov
xchg
or
scas
scas
jecxz
iret
and
adc
and
mov
dec
sahf
retf
sbb
mov
dec
sahf
dec
sub
sahf
dec
gs
dec
outs
mov
cs
iret
mov
jns
push
mov
jns
mov
push
ret
jns
mov
les
lds
(bad)
pop
dec
sahf
dec
sahf
jb
out
retf
pusha
enter
retf
arpl
or
jg
mov
into
pop
lds
and
jnp
in
in
mov
ss
mov
xchg
aad
jg
sbb
fcomp
sahf
dec
sahf
retf
iret
pop
ficomp
sahf
dec
bound
(bad)
mov
dec
fidivr
mov
and
fs
loop
jecxz
sbb
nop
iret
in
dec
sbb
lahf
out
dec
sahf
retf
pop
mov
fs
jns
jmp
cs
outs
in
pop
xchg
in
sar
sbb
inc
lock
icebp
imul
dec
cmc
jg
sbb
xchg
scas
test
and
sahf
ret
cli
sti
outs
push
aas
std
jg
(bad)
and
lahf
jmp
add
(bad)
iret
gs
add
aaa
add
add
repnz
out
sbb
push
and
pop
and
and
or
iret
cdq
or
or
iret
and
push
and
andnps
xchg
out
iret
mov
neg
out
adc
jae
pop
adc
jae
jae
pop
sbb
jnp
jl
sbb
mov
test
in
in
in
lds
in
in
leave
pop
mov
out
xchg
das
cmp
xchg
out
out
and
leave
jae
rep
push
and
leave
jae
daa
sub
xchg
cmp
cmp
stos
sub
sub
jmp
popa
dec
call
mov
jns
xor
out
out
xor
push
repz
out
xor
gs
xor
out
out
aaa
cmps
cmp
xchg
out
cmp
cmp
cmp
mov
iret
and
cmp
cmp
xor
inc
call
xchg
cmp
cmp
inc
leave
jae
nop
inc
ffreep
inc
movs
jns
jae
inc
icebp
sbb
mov
in
in
js
mov
xchg
dec
and
imul
xchg
sbb
and
add
ins
enter
push
aas
repnz
sar
leave
jae
inc
pop
pop
rcr
jae
jae
pop
enter
leave
jae
pop
pop
das
inc
repnz
(bad)
pop
jg
pusha
popa
shl
(bad)
(bad)
xchg
push
repnz
out
out
gs
xchg
out
out
addr16
push
imul
push
ins
(bad)
mov
les
and
in
jo
inc
(bad)
nop
xor
jae
or
fbstp
or
jae
jne
jbe
xor
sbb
rcl
jnp
nop
cmp
pop
jmp
pop
pop
jle
jg
inc
repnz
or
leave
jae
or
xchg
test
jns
xchg
mov
mov
xchg
mov
mov
mov
retf
lahf
dec
(bad)
push
nop
jns
popa
dec
xchg
push
xchg
in
test
xchg
out
push
xchg
dec
sahf
retf
xchg
iret
and
sub
inc
cdq
call
iret
pushf
jg
pop
push
inc
add
(bad)
mov
lahf
mov
mov
scas
push
push
mov
xchg
mov
dec
repz
movs
xchg
push
cmps
cmps
xor
and
test
test
fild
xchg
cmp
and
xchg
lock
sahf
retf
(bad)
mov
dec
bound
scas
es
dec
sahf
dec
jge
adc
arpl
dec
or
jns
inc
mov
jns
scas
mov
xchg
and
xor
mov
and
and
nop
cmp
fbld
cmp
pop
mov
pop
repnz
into
(bad)
retf
(bad)
repnz
inc
inc
enter
repnz
repnz
add
push
inc
int3
pop
jecxz
or
iret
aas
gs
jae
rcl
jmp
and
shl
fs
scas
aad
nop
xor
iret
xchg
(bad)
xlat
jg
repnz
(bad)
fcomp
rcr
fiadd
inc
push
pop
fcmovne
fcomp
add
fstp
mov
(bad)
lahf
loopne
inc
inc
push
(bad)
loope
loop
push
inc
push
scas
jecxz
in
gs
das
out
xchg
xor
(bad)
inc
(bad)
nop
jmp
xor
and
in
out
pop
and
xchg
out
sbb
mov
mov
outs
repnz
repz
repz
jae
hlt
call
cmc
ret
or
scas
clc
stc
leave
nop
xor
sti
sbb
add
push
xlat
push
retf
sbb
push
push
push
iret
and
retf
jns
iret
and
inc
add
and
mov
iret
and
aaa
pop
iret
and
outs
or
and
sbb
iret
and
inc
or
les
scas
(bad)
and
neg
adc
leave
jae
adc
adc
or
jno
adc
out
out
pop
outs
clc
sbb
sbb
nop
out
out
sbb
sbb
jae
repz
sbb
cmp
or
pop
repnz
pop
ss
and
repnz
jmp
pop
(bad)
es
adc
in
gs
xchg
out
out
sub
sbb
mov
fild
jns
cs
dec
sahf
sub
xor
add
jns
jns
sub
bound
pop
push
xor
cmp
aaa
jg
inc
repnz
repnz
cmp
jae
jae
pminub
(bad)
or
mov
cmp
pop
hlt
aas
lahf
and
and
out
inc
(bad)
shl
xor
pop
enter
push
inc
add
cmp
adc
sbb
sbb
call
lds
stos
sbb
sbb
pop
dec
pop
adc
sbb
pop
fcom
loopne
jns
loope
cmp
xor
out
mov
sbb
push
pop
cs
jno
sbb
dec
sbb
sahf
dec
push
mov
pop
sahf
dec
sahf
dec
mov
pop
sahf
dec
sahf
dec
sbb
dec
sahf
dec
fcomp
je
popa
bound
sar
push
fs
repnz
cmp
pop
repnz
pop
addr16
push
push
imul
mov
cmp
pop
call
xor
test
aas
retf
xchg
mov
dec
sahf
dec
sahf
or
imul
or
sahf
dec
sahf
addr16
js
sahf
dec
bound
aas
jp
in
ins
jnp
je
add
inc
sahf
call
fxsave
nop
cmp
sbb
iret
and
test
fld
or
mov
and
nop
xor
lea
jl
dec
fisttp
cmp
inc
nop
cmp
or
nop
xchg
setae
and
call
iret
mov
dec
adc
pop
sub
in
ins
and
adc
mov
xchg
xchg
mov
enter
mov
arpl
mov
push
xchg
cmp
xor
test
cmp
cmps
out
call
push
test
(bad)
and
stos
das
lods
xchg
mov
scas
sbb
xchg
scas
pop
mov
dec
sbb
mov
dec
sahf
dec
jge
xchg
mov
retf
pusha
dec
mov
mov
stc
sbb
xor
fistp
fist
mov
(bad)
mov
pop
inc
inc
mov
inc
repnz
push
rol
push
inc
repnz
pushf
ret
les
iret
push
lds
(bad)
jns
jns
lods
(bad)
call
scas
retf
sbb
xchg
pop
int3
pop
dec
sahf
dec
sahf
xchg
int
into
dec
sahf
dec
push
dec
sahf
retf
push
call
(bad)
aam
nop
out
daa
call
push
nop
out
out
pop
cmp
and
das
fisub
and
fadd
pop
fisttp
(bad)
jae
jae
(bad)
cs
or
loop
jecxz
sbb
outs
in
push
jae
jae
in
out
or
or
jmp
aas
jmp
jmp
out
in
(bad)
nop
aad
das
out
pop
out
mov
outs
lock
(bad)
inc
xchg
xlat
pop
(bad)
mov
repz
mov
adc
neg
repnz
pop
stc
or
pop
cli
sti
iret
gs
(bad)
rcl
call
mov
stc
pop
add
sbb
setb
xchg
out
add
add
add
add
cmp
sub
xchg
out
out
or
or
or
or
or
or
and
(bad)
pcmpgtw
bnd
iret
adc
adc
inc
adc
adc
adc
adc
into
push
dec
pop
and
sbb
and
sbb
xchg
out
iret
cmc
sbb
inc
push
sbb
inc
push
pop
pop
mov
and
nop
mov
and
movs
jns
and
push
and
out
out
das
add
xchg
xchg
out
daa
push
sub
sbb
sub
sahf
dec
sahf
retf
movzx
dec
xor
in
xor
xor
sbb
jb
xor
xor
jns
(bad)
aaa
outs
cs
jns
xchg
cmp
daa
mov
xlat
repnz
mov
sbb
cmp
ds
stc
sbb
mov
retf
xchg
mov
dec
sahf
dec
sahf
mov
sahf
dec
sahf
sub
inc
and
push
dec
and
xor
ror
punpcklwd
int
mov
fst
cmps
iret
gs
push
push
iret
loopne
iret
and
push
push
xor
and
xchg
cmp
aas
test
pop
cmp
cmp
and
pop
cmp
cmp
retf
pop
cmp
cmp
das
pop
or
(bad)
nop
cmp
jno
pusha
pop
inc
ss
popa
mov
gs
add
jae
iret
and
add
xchg
cs
and
sbb
lea
jns
jns
push
ins
cs
sub
outs
and
jns
xchg
jo
xor
dec
jae
dec
sahf
dec
outs
ins
je
jne
and
dec
xchg
push
jbe
dec
inc
(bad)
nop
vmread
jns
xchg
xor
lahf
jnp
movs
nop
cmp
cmp
pop
jge
leave
jae
jle
cs
jae
or
add
leave
sub
or
jae
test
test
pop
xchg
mov
repnz
repnz
inc
mov
pop
aas
push
mov
lea
lahf
mov
sbb
pcmpeqb
jns
jns
pop
xchg
jmp
xchg
push
sbb
ret
sbb
cmp
pop
jne
(bad)
cwde
cmp
cmp
jmp
xchg
fwait
out
pushf
(bad)
jae
popf
fistp
lahf
lahf
jnp
mov
mov
sahf
retf
sbb
iret
and
mov
xor
in
push
inc
repnz
and
sbb
lods
lahf
lods
iret
and
scas
jecxz
xor
and
repnz
mov
repnz
sbb
xchg
pop
repnz
sbb
sbb
iret
and
and
sbb
psllq
inc
mov
jns
and
xchg
and
es
out
sbb
call
out
(bad)
lds
nop
daa
adc
iret
and
sysenter
leave
xor
and
and
gs
imul
iret
and
into
mov
ss
and
fst
lahf
rcr
repnz
(bad)
jae
aam
jl
repnz
push
inc
(bad)
out
push
xlat
leave
test
inc
fcomp
fld
xlat
sbb
sbb
jns
xor
jns
loop
(bad)
xlat
sbb
adc
scas
loop
xchg
out
iret
cdq
jecxz
push
in
sahf
retf
sbb
mov
and
psubsb
aaa
xchg
jmp
xchg
out
pop
daa
in
jg
adc
xchg
in
out
(bad)
out
sahf
retf
sbb
icebp
jns
imul
nop
repz
mov
cmc
jns
jns
int3
test
mov
stos
stc
adc
sti
out
push
mov
xchg
xlat
sbb
sbb
scas
dec
ins
(bad)
cmp
jl
sbb
sbb
add
cmp
sbb
stos
add
cmp
cmp
add
mov
int3
pop
cmp
cmp
push
or
xchg
sbb
hlt
sbb
dec
dec
aam
sahf
dec
sahf
dec
dec
push
jb
ins
dec
sahf
dec
mov
adc
in
in
loop
bound
in
in
or
sbb
lds
ja
in
in
in
sbb
jecxz
jl
jp
sbb
sbb
lahf
in
test
sbb
scas
sbb
push
mov
dec
sbb
scas
test
sahf
jmp
shl
mov
and
das
mov
in
in
es
test
xchg
sub
jnp
sub
xchg
out
lahf
pop
sub
retf
das
jmp
repnz
repnz
ret
xor
pop
repnz
xor
iret
gs
xor
popa
cmp
mov
sub
repnz
sbb
sbb
sbb
sbb
push
iret
mov
sahf
add
inc
dec
sahf
dec
sahf
and
inc
dec
sahf
dec
sahf
mov
sub
popa
enter
outs
inc
iret
mov
dec
ss
das
out
xchg
dec
dec
iret
mov
dec
ins
dec
sub
xchg
out
dec
fimul
test
arpl
push
das
push
out
dec
sahf
retf
xchg
cwde
push
dec
sahf
dec
sahf
cmp
push
dec
sahf
dec
pusha
push
aas
nop
pop
and
sbb
iret
and
pop
and
and
pop
nop
cmp
xor
xchg
leave
jae
popa
pop
adc
fst
scas
gs
xchg
cmp
or
or
shr
cmp
shr
imul
cmp
cmp
and
repnz
(bad)
outs
mov
repnz
bnd
jno
inc
repnz
bnd
jae
iret
and
jne
jbe
xchg
xor
ja
cmp
cmp
or
jp
xchg
cmp
dec
jnp
push
jl
mov
jle
sahf
retf
xchg
push
add
push
jo
sbb
or
sbb
jg
jae
adc
sbb
jae
sbb
dec
sahf
dec
sahf
outs
mov
ins
mov
dec
mov
mov
lea
sahf
retf
xchg
mov
dec
sahf
dec
mov
dec
bound
out
xchg
mov
xchg
pop
xchg
jg
or
repz
push
xchg
cwde
out
xchg
cmp
xor
dec
call
dec
sahf
dec
sahf
jecxz
or
sahf
enter
mov
mov
dec
(bad)
enter
movs
aas
dec
sahf
retf
pusha
movs
(bad)
in
ins
cmps
iret
cdq
test
dec
sahf
dec
loopne
das
dec
stos
and
stos
call
and
lods
scas
out
mov
les
nop
cmp
lds
sbb
mov
mov
mov
nop
xor
push
(bad)
pop
mov
movs
jns
inc
mov
in
in
pop
mov
xchg
xchg
xchg
and
ror
ret
sbb
and
xchg
(bad)
sbb
retf
xchg
and
int3
xchg
and
xchg
int
iret
movs
jns
repz
push
shr
xchg
pop
shr
test
sbb
das
aad
(bad)
dec
xchg
xlat
das
fdiv
xlat
sbb
push
inc
push
inc
fisttp
push
inc
(bad)
pop
xor
mov
sbb
loop
and
xchg
out
jecxz
mov
and
jns
jmp
pop
inc
or
repnz
arpl
in
seta
and
xor
out
scas
inc
dec
call
dec
sahf
dec
sahf
cmp
push
repnz
xchg
hlt
(bad)
cmc
nop
daa
sub
jno
sbb
nop
out
sbb
and
outs
sti
fs
ss
cld
(bad)
std
cmovae
and
(bad)
jg
lahf
add
test
sbb
sbb
test
cmp
mov
jns
sbb
or
or
seto
repz
or
nop
or
or
dec
jo
call
mov
mov
adc
aas
xchg
out
pop
adc
ficomp
adc
push
jns
xchg
out
out
sbb
sbb
bndstx
sbb
and
sbb
sbb
bound
add
sbb
and
xor
and
and
repnz
mov
daa
and
sub
push
sub
aas
sub
sub
mov
xchg
das
wrmsr
xor
xchg
cmps
dec
jnp
xor
jns
sbb
xor
ss
aaa
xchg
xor
jns
cmps
push
cmp
or
nop
cmp
cmp
cmp
pop
rcl
xor
imul
inc
fs
inc
pop
pop
repnz
ss
aas
rol
test
imul
mov
dec
dec
ss
and
xchg
and
pop
push
dec
dec
xchg
push
jns
popa
enter
into
push
leave
nop
xor
ss
push
push
or
ss
sbb
pop
aas
or
pop
jb
pop
out
enter
xchg
push
pop
pop
nop
xchg
pop
pop
sar
push
popa
xchg
out
inc
bound
push
arpl
xchg
and
pcmpgtw
sbb
ins
dec
xchg
and
sar
and
xor
jo
ss
jno
jb
jae
inc
xor
jne
fst
pop
js
nop
or
pop
jns
(bad)
xor
jg
mov
jge
xlat
xor
sbb
xchg
xor
inc
add
lahf
test
xchg
leave
mov
jae
mov
mov
nop
xchg
xchg
leave
nop
cmp
inc
xchg
xchg
or
nop
or
xchg
xchg
nop
or
nop
cwde
cdq
or
nop
rcr
nop
or
nop
popf
setle
nop
rcr
leave
nop
mov
xchg
shl
xchg
pop
test
and
push
test
out
stos
cmc
stos
lods
vmwrite
and
dec
daa
scas
dec
sbb
mov
(bad)
mov
les
adc
nop
or
nop
out
mov
and
(bad)
mov
push
push
mov
mov
jg
and
fbstp
mov
xchg
out
shl
rcl
ret
fisttp
iret
lds
nop
cmpxchg8b
(bad)
enter
dec
push
xlat
sbb
dec
xchg
ins
dec
(bad)
int
into
dec
iret
dec
xchg
rcl
dec
pusha
dec
pusha
shr
mov
enter
(bad)
and
xlat
jbe
xchg
fcomp
pminub
(bad)
fcomp
enter
fild
mov
shl
xchg
mov
sbb
pop
out
add
mov
out
call
mov
sbb
retf
xchg
push
out
iret
and
div
iret
gs
push
out
repnz
xor
add
or
sbb
call
sbb
dec
inc
cli
(bad)
sti
(bad)
xchg
xor
jp
std
aas
xchg
dec
pusha
dec
call
pop
jb
sbb
sbb
sbb
das
in
add
add
test
inc
js
sbb
leave
jae
pop
rsqrtps
test
dec
sahf
retf
jg
or
lahf
mov
(bad)
adc
in
adc
jg
inc
sar
pop
xor
xor
inc
repnz
sbb
repnz
ss
pcmpgtd
jle
repnz
scas
sbb
pop
sbb
inc
push
out
ja
xchg
and
iret
and
and
sbb
xchg
out
and
and
xchg
es
(bad)
sub
sub
mov
cvttps2pi
jnp
in
in
sbb
xor
in
gs
xor
pop
repnz
repnz
xor
dec
inc
repnz
xor
push
lahf
jb
nop
or
inc
cmp
cmp
or
cmp
(bad)
cmp
inc
ret
cmp
ret
sbb
inc
scas
mov
sub
call
jg
sbb
pop
aad
mov
jns
inc
out
xor
dec
pop
mov
mov
arpl
(bad)
dec
(bad)
mov
sbb
push
int
sbb
push
push
or
and
push
aas
leave
jae
jae
push
stc
push
xchg
cmp
or
mov
push
push
pop
jg
push
inc
add
pop
pop
(bad)
pop
or
or
das
pop
outs
pop
repnz
rcl
inc
ss
pusha
jmp
bound
and
pop
aas
arpl
inc
gs
and
es
push
mov
pop
push
imul
ins
mov
enter
js
outs
scas
xchg
jg
jns
repz
push
jae
sbb
je
jne
mov
fs
ja
iret
and
iret
xchg
mov
jl
imul
jg
xchg
out
and
dec
sbb
inc
rcl
outs
xchg
or
das
xchg
nop
mov
leave
mov
dec
bound
mov
dec
pop
nop
xchg
das
arpl
rcl
leave
nop
xor
xchg
xchg
gs
nop
seta
iret
sbb
ss
scas
popf
(bad)
xchg
or
lahf
scas
mov
push
mov
sbb
mov
fst
cmps
xor
xor
pop
test
inc
xor
test
nop
xor
pop
lods
pop
or
lahf
scas
jmp
scas
cld
mov
seto
fs
push
leave
mov
lahf
add
or
sbb
cs
in
mov
rol
mov
mov
sbb
jg
aas
or
ret
pinsrw
fst
mov
add
(bad)
sbb
pop
enter
sbb
sbb
lods
test
int3
xchg
int
into
iret
xchg
and
adc
shr
ror
dec
sbb
(bad)
rol
aam
aas
(bad)
movs
and
xlat
das
fsubr
xchg
fnstcw
fcmovu
fs
fsubr
inc
sahf
and
inc
cs
sbb
or
or
enter
iret
push
in
outs
ins
enter
pop
out
call
xchg
pop
jmp
in
pop
mov
sbb
jg
arpl
lock
icebp
prefetcht1
cmp
hlt
xchg
and
dec
cmc
iret
not
jg
push
clc
jae
nop
aad
pop
cli
outs
dec
nop
aad
mov
leave
nop
(bad)
push
das
in
sbb
sbb
vmwrite
imul
pop
enter
mov
nop
pop
repnz
pop
sbb
sbb
in
mov
or
or
or
or
pop
push
sbb
sbb
in
mov
adc
jns
das
adc
sbb
xchg
out
adc
mov
sbb
popa
sbb
out
sbb
sbb
or
nop
jo
pop
sbb
sbb
and
das
in
out
and
sbb
enter
sbb
sbb
sbb
and
daa
sbb
mov
mov
and
push
sub
aad
stc
shl
sub
sub
test
pop
enter
sbb
sbb
sbb
and
inc
xor
xor
out
and
xor
sbb
cmp
pop
enter
(bad)
cmp
sbb
pop
repnz
cmp
cmp
iret
jno
push
xchg
ret
sbb
inc
mov
xor
sbb
sbb
pop
cmp
mov
inc
fild
jae
and
repnz
dec
dec
xchg
xor
dec
dec
lahf
bound
dec
adc
dec
dec
repz
out
push
dec
sbb
push
inc
xor
das
push
push
sbb
and
aas
push
scas
pop
ret
push
call
mov
repz
and
pop
pusha
push
rcl
pop
mov
pop
pop
pop
fst
pusha
mov
fs
dec
arpl
xor
ss
pop
imul
push
imul
or
ins
outs
leave
jae
nop
outs
pop
cld
jo
jno
jae
jno
aas
jb
and
inc
call
and
jb
sbb
xchg
out
and
jl
and
xchg
out
jns
(bad)
enter
jl
jge
and
sar
and
xor
or
iret
test
cmp
cmp
pop
xchg
out
add
cmp
mov
ins
and
sbb
lea
mov
ret
(bad)
movs
and
nop
iret
xchg
out
and
xchg
sbb
das
nop
pop
inc
xchg
das
in
mov
fwait
sbb
inc
jb
pushf
popf
iret
and
mov
xor
and
xor
mov
xor
cmps
xor
xor
and
stos
lods
lods
and
xor
scas
xor
xor
fs
mov
mov
rcl
dec
mov
dec
call
xchg
mov
fs
mov
fs
dec
xchg
ret
(bad)
in
fs
lds
mov
leave
dec
xchg
retf
fs
xchg
into
xchg
iret
rcl
dec
xchg
shr
xchg
(bad)
dec
xchg
xlat
fsubr
fs
fcmovnu
push
inc
sar
and
and
xor
xor
loope
inc
xor
jecxz
in
inc
xor
out
or
call
inc
rcl
fst
aas
out
nop
or
dec
icebp
das
xor
mov
nop
jg
test
xor
jne
clc
jg
nop
lds
ss
sti
(bad)
cld
mov
and
and
movs
cmp
sbb
and
add
add
inc
jle
jbe
add
lods
pop
pop
sbb
in
ins
or
or
pop
sar
jno
repnz
repnz
stc
shl
test
ret
pop
adc
or
adc
adc
mov
pop
fs
repnz
mov
sbb
sbb
jg
nop
or
nop
nop
enter
pop
xlat
call
or
test
and
es
daa
and
mov
sub
sbb
xchg
xchg
and
pop
sub
sbb
xor
xor
xor
xor
mov
sbb
xchg
and
cmp
xchg
out
cmp
cmp
outs
and
mov
cmp
cmp
ds
jns
shl
cmp
sbb
inc
inc
iret
xchg
pop
inc
enter
dec
pop
nop
xor
imul
pushf
xor
dec
sbb
pop
repnz
pop
dec
sbb
and
push
(bad)
daa
mov
sbb
xlat
out
out
sbb
inc
mov
sbb
nop
xor
pop
(bad)
pop
leave
jae
nop
call
pop
nop
xor
pop
(bad)
pop
(bad)
iret
and
iret
bound
and
and
fs
repnz
arpl
scas
ss
ss
push
pop
repnz
es
imul
pop
add
ins
sub
and
dec
outs
outs
out
dec
sahf
retf
xchg
std
jno
push
jns
jb
sbb
jns
hlt
sbb
mov
ja
movs
ss
js
scas
jp
repnz
repnz
aad
idiv
and
and
and
add
xor
iret
cmp
leave
nop
xor
mov
or
inc
nop
cmp
mov
psubw
or
scas
or
push
(bad)
out
nop
or
xchg
sbb
inc
dec
xchg
sbb
enter
sbb
and
cwde
daa
push
sbb
sbb
ins
dec
sahf
dec
pop
inc
pushf
popf
fild
sar
lahf
adc
and
pop
enter
xor
movs
das
sbb
test
xchg
out
scas
inc
test
cs
lods
outs
xchg
lods
fild
xchg
sbb
jg
lock
or
sbb
leave
nop
movzx
mov
enter
ds
mov
dec
pusha
mov
and
xchg
aas
ror
mov
dec
xchg
(bad)
scas
pop
enter
sbb
test
enter
int3
int
and
adc
xchg
ror
mov
shr
imul
sbb
retf
xchg
enter
(bad)
fcmovnu
jg
mov
imul
ins
dec
sbb
mov
xchg
xchg
pop
jecxz
in
test
outs
cs
xchg
and
out
call
jmp
ins
dec
sbb
(bad)
in
scas
in
js
ins
enter
mov
pop
out
(bad)
mov
or
repz
nop
rcl
or
nop
or
idiv
and
leave
nop
stc
cli
out
or
inc
xor
cld
outs
std
and
fst
adc
cmp
add
pop
jo
xchg
push
or
into
and
or
sahf
cdq
or
jns
dec
sahf
xor
(bad)
xlat
or
jns
push
or
xchg
and
or
xchg
jmp
or
xchg
ror
xchg
out
shld
inc
sahf
inc
sahf
xlat
or
and
das
mov
and
sbb
sbb
retf
push
in
pop
ss
mov
pop
repnz
repnz
pop
repnz
xchg
sub
or
or
or
int3
out
out
sub
out
sub
sub
sahf
dec
sahf
dec
scas
push
cs
das
sahf
dec
sahf
dec
daa
xor
xor
inc
sahf
inc
sahf
scas
or
fnstcw
fist
or
aaa
cmp
out
xchg
cs
or
pop
pushf
out
out
cmp
sbb
dec
enter
ja
or
xor
inc
(bad)
xchg
out
out
inc
imul
inc
or
jns
sbb
dec
jnp
jns
jns
mov
mov
mov
in
mov
xlat
or
or
and
push
imul
and
push
xchg
cmp
xor
ins
inc
rcl
pop
jae
jae
iret
stos
pop
dec
iret
gs
in
pop
xor
iret
and
jae
nop
outs
popa
outs
xchg
(bad)
leave
jae
jae
arpl
jae
outs
pop
ss
mov
(bad)
pop
repnz
repnz
ins
lahf
dec
sahf
dec
sahf
cmps
ins
or
int
sahf
mov
pop
ret
jno
jb
mov
repnz
bnd
je
aam
inc
bnd
ins
adc
repnz
or
cmp
jp
sbb
aas
mov
jge
pop
iret
xchg
mov
and
aas
cmp
xor
xchg
add
das
xchg
mov
dec
lahf
mov
mov
mov
dec
push
mov
fcom
or
adc
nop
or
aas
xchg
inc
repnz
push
das
jp
xchg
mov
dec
push
xchg
sub
xchg
pop
xchg
add
xchg
cwde
das
cdq
imul
fwait
out
and
popf
outs
mov
jns
sub
lahf
(bad)
in
in
mov
retf
xchg
adc
adc
movs
iret
movs
das
retf
sbb
jg
iret
and
call
xor
mov
sahf
dec
call
enter
scas
scas
and
dec
bound
xor
mov
mov
xchg
xor
mov
test
mov
mov
iret
xchg
mov
xor
mov
or
mov
dec
call
sahf
and
or
inc
jg
(bad)
jae
lds
jae
(bad)
(bad)
cmp
or
mov
int3
jg
xchg
int
into
out
dec
pusha
dec
sahf
jns
rcr
mov
lahf
rol
inc
sahf
and
or
push
inc
(bad)
inc
(bad)
das
pop
or
inc
xlat
(bad)
scas
nop
or
fcmove
or
lahf
fsubr
cmp
cmp
mov
repnz
(bad)
nop
loopne
pop
loope
pop
repnz
pop
loop
jecxz
inc
repnz
sahf
in
vmwrite
imul
dec
xchg
nop
daa
test
xlat
or
or
fs
aas
repz
out
lock
nop
les
xlat
or
add
leave
repz
xlat
or
sbb
sbb
or
repnz
sbb
or
inc
xchg
mov
scas
retf
bound
dec
repz
dec
cld
jecxz
mov
bsr
in
pop
repnz
repnz
test
mov
add
mov
mov
sbb
pop
cvtps2pi
jns
jns
mov
cwde
cs
jns
aam
loope
jns
jns
mov
push
out
and
movhlps
xchg
out
adc
adc
pop
repnz
adc
outs
adc
adc
retf
lods
or
jg
push
sahf
dec
sahf
dec
ins
pop
call
sbb
sbb
sbb
xchg
sbb
ss
syscall
and
pop
repnz
push
and
and
and
pop
and
retf
lods
or
xor
sub
inc
(bad)
nop
jg
cvtpi2ps
sub
jae
jae
sub
leave
jae
das
stc
sbb
mov
in
in
inc
xor
mov
dec
sahf
retf
xchg
iret
fdivr
dec
sahf
dec
sahf
bound
outs
cmp
cmpps
cmp
out
aas
push
inc
sbb
int3
inc
inc
or
cs
or
and
inc
jmp
sbb
dec
dec
movsx
jns
fmul
scas
dec
sahf
dec
sahf
dec
xchg
dec
sahf
dec
sahf
dec
sahf
dec
push
dec
(bad)
dec
sahf
dec
sahf
dec
ins
push
mov
mov
popa
dec
push
out
push
iret
test
xchg
out
push
repz
mov
push
cmovns
xchg
mov
and
das
je
pop
and
pop
sbb
and
pop
or
sub
or
bound
iret
and
xchg
cmp
call
xchg
addr16
dec
call
sahf
dec
sahf
dec
popf
push
imul
mov
outs
iret
outs
iret
xchg
out
out
jo
jno
out
out
jb
jae
out
sbb
jne
sbb
(bad)
arpl
fidivr
(bad)
jns
mov
jns
jnp
sub
cmp
mov
jg
sbb
das
and
sbb
jg
rcl
add
nop
out
out
or
or
(bad)
and
sbb
add
or
push
out
(bad)
lahf
enter
push
nop
xchg
iret
cs
popa
xchg
outs
xchg
xchg
les
xchg
(bad)
cmps
mov
into
xchg
xchg
stos
dec
xchg
cwde
cdq
dec
in
in
scas
or
sbb
cmp
fbld
dec
ss
xchg
xor
nop
mov
cmp
cmp
(bad)
mov
movs
out
movs
cmovs
nop
cmp
cmps
iret
test
pop
ss
mov
iret
and
iret
xor
fistp
and
mov
xchg
mov
iret
jns
jns
xchg
mov
mov
mov
jno
and
in
adc
in
in
pushf
mov
mov
test
popa
mov
sbb
xchg
mov
enter
ret
aas
in
in
sbb
mov
mov
mov
outs
xchg
or
retf
out
push
xchg
cmp
cmp
cmp
dec
xchg
cmp
cmp
int
popa
nop
cmp
cmp
vsubpd
pop
ret
ret
shl
pop
adc
aam
fistp
pop
repnz
pop
xlat
fmul
and
fstp
and
(bad)
jl
fst
ficomp
jae
jae
fistp
leave
jae
jae
loope
loop
or
in
pop
ret
in
out
add
pop
repnz
call
push
out
mov
jmp
add
(bad)
in
(bad)
inc
adc
in
out
(bad)
out
jae
jae
jmp
lock
repnz
repz
nop
outs
hlt
fcomip
das
push
pop
ror
imul
sbb
inc
clc
das
stc
pop
gs
or
nop
xor
adc
std
dec
jae
jae
dec
xor
mov
in
or
add
add
sahf
mov
sahf
inc
sahf
inc
pop
or
or
shl
or
repz
sub
or
out
sbb
or
jae
or
mov
leave
adc
xchg
mov
adc
scas
dec
(bad)
dec
adc
adc
or
xlat
or
out
test
sbb
mov
or
push
jns
jecxz
add
jns
jns
mov
mov
jns
jns
sbb
or
iret
gs
push
and
and
and
out
iret
jno
aad
es
sbb
sub
xor
les
movs
xchg
cmp
cmp
push
sub
xchg
cmp
cmp
test
popf
xchg
cmp
cmp
push
xchg
cmp
int3
xor
and
xor
cmp
xor
xchg
pop
(bad)
aaa
cmp
sbb
dec
push
cs
jns
sbb
cs
jns
data16
jns
jns
or
sar
inc
ret
inc
repnz
repnz
fadd
xchg
or
jge
cmp
cmp
mov
cmps
dec
fst
dec
seta
dec
outs
lds
jmp
das
inc
(bad)
nop
cmp
push
outs
push
jae
jae
jg
push
retf
or
mov
xchg
mov
inc
(bad)
nop
pop
jg
inc
dec
jbe
pusha
scas
pop
or
mov
xchg
mov
and
mov
bound
and
xchg
mov
out
out
mov
xchg
out
push
jns
jns
in
imul
js
jns
cdq
ins
cmc
outs
sahf
dec
sahf
dec
mov
mov
arpl
iret
jb
or
nop
out
jae
je
and
jne
jbe
pop
ss
outs
imul
repnz
(bad)
jns
jp
inc
repnz
ds
iret
leave
jae
inc
jge
add
or
or
in
xchg
cmp
lea
or
cmp
sahf
lods
test
and
mov
or
add
mov
lahf
arpl
nop
mov
cmp
pop
inc
repnz
inc
nop
xchg
dec
and
out
jp
and
xchg
xchg
xchg
and
xchg
xchg
out
nop
xor
inc
cwde
cdq
scas
cmp
je
call
xchg
or
mov
jns
jne
lahf
out
(bad)
nop
xor
out
mov
fs
mov
repnz
(bad)
movs
lahf
cmp
inc
inc
mov
repnz
repnz
test
inc
das
mov
pop
repnz
cmp
add
push
scas
mov
xchg
out
iret
sbb
xchg
out
mov
mov
je
fbstp
mov
sbb
(bad)
cmps
and
jg
mov
cmp
outs
sar
dec
ret
and
ins
enter
(bad)
mov
lods
push
(bad)
sbb
inc
enter
and
fs
and
and
int3
iret
int
xchg
cmp
xor
dec
into
iret
jmp
rcl
mov
ror
ror
xlat
or
or
mov
xlat
in
and
fsubr
mov
and
xchg
dec
fstp
movs
xchg
sbb
outs
loopne
movs
cdq
add
mov
dec
xchg
adc
movs
loop
or
fld
and
or
sbb
out
xchg
out
or
das
mov
jmp
jmp
xchg
in
in
lahf
out
iret
and
push
out
lock
and
nop
xor
psllq
hlt
fcomip
pop
repnz
push
cmc
outs
test
gs
idiv
(bad)
clc
push
pop
repnz
stos
stc
add
push
inc
push
inc
sti
iret
cld
aas
leave
jae
inc
std
jg
dec
push
dec
or
pop
or
sahf
test
lea
dec
sahf
dec
sahf
and
add
clc
sbb
ret
(bad)
sysret
or
mov
pop
or
jns
or
jns
jns
bound
test
cmp
adc
adc
adc
xchg
cmp
cmp
icebp
adc
cmp
cmp
dec
cmp
mov
cmp
push
or
mov
(bad)
sbb
jns
loopne
xlat
or
jns
js
iret
and
and
repnz
and
push
repnz
or
sbb
and
repnz
mov
or
pop
repnz
pop
sub
pop
lods
sub
sub
cs
das
(bad)
sahf
dec
call
daa
test
xlat
or
nop
or
test
jns
mov
aaa
outs
in
in
xor
jmp
in
in
in
cmp
xchg
cmp
cmp
mov
push
aas
in
in
lds
inc
dec
sbb
xchg
inc
bsf
xor
fistp
pop
repnz
rol
inc
push
repnz
repnz
sbb
or
mov
out
push
jg
dec
leave
jae
repz
xchg
xor
push
(bad)
push
iret
lahf
nop
cmp
cmp
and
fst
dec
push
adc
fs
push
shl
iret
and
or
arpl
pop
pop
mov
mov
jns
pop
aas
dec
out
out
pop
or
mov
pusha
inc
popa
push
sahf
retf
sbb
fs
sahf
dec
fs
iret
and
out
out
push
xchg
out
push
imul
retf
outs
sub
in
ins
dec
outs
scas
jg
in
in
or
jb
cs
lock
pop
je
out
and
and
out
ja
js
out
out
jns
jp
in
in
ret
jl
xchg
mov
add
in
jns
sub
sahf
retf
xchg
inc
inc
sahf
mov
pop
enter
out
out
xchg
repz
mov
push
mov
mov
sbb
xchg
mov
xchg
(bad)
lahf
xchg
push
or
xchg
(bad)
xchg
xor
setae
xchg
cmp
rcl
cmp
cmp
dec
xchg
imul
dec
shl
or
aaa
or
iret
and
and
ja
cwde
or
xchg
or
das
movs
jg
lahf
xchg
out
xchg
ins
enter
stos
das
push
sbb
jg
ds
mov
scas
arpl
dec
dec
mov
lahf
xchg
out
and
xchg
out
mov
push
mov
or
or
and
mov
and
add
mov
iret
push
mov
imul
and
add
in
test
pop
sbb
les
lds
or
jns
or
jae
iret
mov
retf
iret
and
int3
rcl
into
cmp
rcl
cmp
aam
shr
ror
or
nop
sar
mov
aad
jecxz
test
cmp
cmp
aam
nop
aad
rcr
lahf
fidivr
fstp
out
fsub
arpl
ss
dec
out
out
(bad)
ds
add
sbb
push
or
or
iret
gs
jge
mov
and
cs
jmp
sbb
(bad)
in
pop
mov
out
out
das
jns
mov
icebp
in
movs
and
call
enter
shl
fild
jg
idiv
sbb
stc
cli
arpl
dec
jg
sti
cld
iret
jns
and
jl
jns
mov
ins
add
leave
jae
test
bndstx
leave
jae
jae
add
add
ja
jae
add
jae
jae
pop
adc
leave
jae
jae
or
leave
jae
jae
or
xchg
cmp
or
add
adc
adc
xchg
cmp
mov
cmp
xchg
cmp
aas
dec
cmp
cmp
cmp
xchg
push
cmp
cmp
ja
ror
cmp
cmp
scas
push
fmul
cmp
cmp
femms
cmp
test
(bad)
in
in
and
and
adc
xchg
mov
es
sahf
dec
sahf
retf
addps
fisubr
sahf
dec
sahf
dec
push
sub
sub
sub
sub
jmp
dec
sahf
dec
xchg
xor
dec
xchg
pop
xor
pop
jns
jns
cmp
das
cld
sbb
dec
inc
xchg
je
push
cs
popa
pmulhuw
mov
jns
jns
mov
add
outs
aas
inc
sahf
or
push
inc
sahf
inc
sahf
adc
imul
rol
jmp
repnz
aaa
inc
int3
shl
xchg
cmp
push
xchg
push
inc
test
cmp
aam
mov
sub
mov
mov
push
push
rcpps
xchg
out
pop
mov
pop
out
out
push
mov
iret
out
out
push
jnp
dec
out
out
pop
(bad)
pop
add
xchg
out
pop
rcr
out
pop
and
pop
jg
and
mov
xchg
sbb
mov
xlat
push
dec
and
outs
imul
sub
imul
nop
cmp
cmp
or
inc
repnz
shr
nop
outs
jo
sbb
pop
jno
push
jae
jae
jb
jae
or
jae
je
jne
ss
push
js
repnz
repnz
fnstsw
jp
inc
repnz
mov
jl
and
iret
pop
jle
iret
and
sbb
sub
test
inc
test
shl
dec
adc
push
push
cmp
cmp
retf
push
xchg
out
test
adc
iret
lea
jns
imul
aad
jmp
xchg
xchg
iret
xchg
xor
iret
mov
xchg
cmp
cmp
movs
xchg
pop
pop
ret
cwde
cdq
jg
inc
repnz
repnz
add
popf
sahf
jae
or
aas
lahf
aas
pushf
or
mov
xor
icebp
sbb
dec
movs
jmp
sbb
sbb
sbb
adc
xor
outs
lods
das
mov
xchg
out
lods
scas
pop
xchg
mov
xchg
sahf
retf
outs
lock
xor
xor
xchg
mov
setbe
adc
xchg
mov
das
mov
mov
(bad)
mov
mov
jns
lahf
mov
xor
imul
inc
das
or
ret
pop
out
xchg
(bad)
lds
sub
xchg
out
(bad)
push
(bad)
pop
sbb
leave
retf
out
pop
jb
int3
xor
int
mov
iret
gs
adc
and
and
dec
adc
push
and
iret
in
ucomiss
adc
push
xlat
test
test
jns
fnstcw
dec
sbb
(bad)
sbb
fstp
jns
sbb
pop
fucomip
xor
lods
and
lahf
inc
xchg
jecxz
in
inc
repnz
pop
add
out
dec
or
jae
out
das
and
mov
and
inc
jmp
pop
pop
repnz
ss
dec
lods
out
and
repnz
sub
ret
pop
repnz
mov
repz
mov
push
push
inc
rol
imul
idiv
nop
xor
scas
cli
jg
iret
gs
push
(bad)
cld
jg
std
xor
gs
(bad)
(bad)
(bad)
in
inc
ds
outs
add
add
in
in
movs
add
add
mov
int
add
test
movq
pop
jbe
mov
or
daa
pop
repnz
repnz
jns
imul
and
maxps
sbb
adc
jns
cs
dec
test
jns
jns
lds
sbb
gs
ud0
out
rcr
nop
cmp
cmp
(bad)
sbb
jae
sbb
inc
sbb
leave
push
inc
push
pop
cli
mov
iret
push
and
and
push
and
jns
imul
cs
loope
fld
jns
jns
mov
cs
sub
xor
jns
xchg
push
sub
cs
std
sbb
sahf
retf
(bad)
jbe
jmp
sahf
dec
sahf
dec
xlat
xor
xor
dec
sahf
dec
pop
xor
sahf
dec
imul
cmp
(bad)
cmp
xchg
mov
out
and
cmp
jns
loop
aas
mov
jns
cs
leave
jae
jae
inc
inc
inc
movs
jns
jae
inc
dec
push
inc
adc
dec
mov
add
dec
leave
jae
repz
push
dec
je
xchg
or
dec
movups
in
adc
xchg
cmp
inc
xlat
bswap
and
and
aaa
bswap
and
and
add
and
dec
lods
and
lea
das
xchg
xchg
mov
das
sbb
pxor
pop
lahf
push
pusha
dec
sahf
dec
sahf
push
loopne
sub
xlat
xadd
gs
xchg
lahf
jno
push
inc
imul
and
ins
xor
xchg
out
push
ins
outs
lahf
and
sbb
jo
mov
xor
in
in
(bad)
je
sbb
jbe
imul
fisttp
js
lahf
jns
jns
sahf
jp
jnp
cs
sub
out
and
test
in
call
and
and
cmp
and
and
xchg
pop
sbb
cmp
cmp
jbe
and
mov
mov
adc
inc
xchg
out
lea
mov
or
sbb
cmp
cmp
paddq
pop
sub
mov
xchg
pop
cmc
sbb
sub
dec
lock
jg
sbb
pop
fwait
ins
enter
pushf
outs
popf
aas
adc
mov
mov
mov
jae
or
dec
push
mov
movs
aas
movs
jmp
fistp
test
inc
ss
test
or
or
leave
jae
jae
lods
dec
scas
leave
jae
or
or
pop
mov
mov
pop
(bad)
nop
push
repnz
pop
mov
mov
cmps
mov
or
pop
add
mov
mov
imul
jnp
mov
dec
push
nop
rcl
fst
lahf
dec
or
(bad)
pop
scas
enter
or
leave
dec
retf
jae
lahf
addr16
int3
iret
and
psubsb
xor
lahf
shl
and
fs
shr
cmp
cmp
iret
pop
ror
aam
nop
cmp
retf
aad
into
and
sar
bndldx
sbb
sahf
dec
sahf
retf
jg
fstp
mov
arpl
iret
fisubr
dec
sahf
dec
sbb
mov
and
cmp
loop
sbb
mov
in
out
gs
call
int
iret
mov
iret
xor
lahf
out
xor
and
and
and
lock
icebp
sahf
dec
call
repz
int
sbb
cmc
xor
iret
gs
(bad)
neg
nop
lds
(bad)
or
xchg
or
or
cmp
cmp
dec
push
(bad)
xchg
inc
adc
adc
adc
xchg
out
out
add
add
and
push
adc
outs
and
or
or
or
iret
sub
or
(bad)
xchg
(bad)
iret
and
adc
iret
out
adc
repnz
adc
repnz
add
push
pop
repnz
repnz
sbb
or
sbb
cmp
cmp
jno
xchg
cmp
and
dec
and
cmp
cmp
pop
and
dec
call
and
and
inc
es
and
dec
sub
and
mov
and
iret
and
in
shl
mov
adc
in
xor
sahf
dec
sahf
dec
mov
arpl
dec
xor
cmp
cs
jne
jmp
jns
jns
cmp
jns
jns
jns
and
add
cs
aas
xor
pop
inc
movs
and
mov
sahf
retf
xchg
inc
inc
sbb
dec
or
or
call
dec
in
movs
jns
sbb
sahf
retf
xchg
mov
int
sahf
aam
cmp
push
and
push
in
and
push
lahf
push
and
and
push
pop
repnz
xor
pop
push
aam
inc
repnz
pop
sbb
sbb
add
adc
adc
adc
mov
dec
repz
sbb
xor
jmp
jae
nop
cmp
fs
push
iret
and
(bad)
cmp
and
and
xchg
cmp
dec
and
nop
cmp
jle
ins
cmp
cmp
jg
outs
cmp
xchg
cmp
gs
sbb
dec
jb
jae
sbb
xchg
pop
mov
jbe
(bad)
mov
js
mov
jns
inc
jnp
jl
cs
xchg
jle
mov
rol
add
sbb
pop
xchg
test
inc
xchg
test
mov
jg
leave
jae
jae
mov
and
lea
iret
retf
cmovae
pop
rcl
pop
repnz
add
xchg
xchg
repnz
xchg
aas
test
cwde
cdq
and
and
xor
popa
aas
daa
push
pushf
cmps
nop
cmp
cmp
sbb
pop
mov
pop
repnz
add
outs
movs
dec
movs
pop
add
pop
cmps
scas
in
jae
inc
repnz
test
pop
or
mov
stos
or
sbb
outs
push
scas
xor
pop
or
scas
mov
mov
xchg
les
mov
nop
cmp
inc
mov
repnz
ret
mov
push
mov
or
inc
mov
(bad)
nop
or
test
xchg
xor
imul
mov
cmp
rcr
push
inc
bnd
les
lds
(bad)
or
ffreep
enter
or
leave
jae
dec
stos
retf
int3
ss
and
int
into
das
and
or
dec
rcr
and
dec
adc
and
and
mov
aam
xor
aad
(bad)
outs
xchg
xor
push
xlat
fmul
cmp
fisubr
inc
shl
fisttp
cli
fdivr
fld
inc
adc
fidivr
fistp
inc
(bad)
loopne
xchg
inc
repnz
repnz
loop
pop
add
lahf
in
leave
inc
push
inc
repnz
movntq
push
das
sub
and
inc
bnd
pop
or
in
jns
or
pop
push
sahf
retf
xchg
out
sahf
dec
sti
repnz
cmps
sahf
dec
sbb
cmc
iret
and
not
add
clc
(bad)
mov
adc
int
xchg
sti
cld
psllq
and
xor
out
dec
ret
jae
jae
add
leave
add
jae
add
leave
jae
pop
inc
or
or
sub
or
pop
or
out
out
or
out
out
rdmsr
adc
or
sbb
cmp
sub
adc
out
push
and
iret
and
add
ss
and
repnz
repnz
lods
sbb
sbb
imul
pop
repnz
repnz
jle
retf
pop
repnz
mov
pop
repnz
aad
ror
xchg
cmp
or
jne
sahf
dec
scas
sub
adc
adc
xor
xchg
out
out
mov
xchg
out
out
xor
xor
xor
xor
xor
xor
inc
ss
fbstp
jns
jns
(bad)
cmp
call
movups
jns
push
adc
jns
jns
cmps
adc
push
mov
arpl
jns
jns
ins
adc
or
push
pop
ss
out
add
inc
repnz
test
dec
dec
mov
or
dec
rcr
pminub
dec
sahf
dec
pop
dec
mov
sahf
dec
sahf
dec
or
push
sahf
dec
sahf
dec
push
push
adc
dec
dec
push
dec
pop
repnz
repnz
jmp
jo
subps
pop
push
(bad)
pop
jae
inc
ss
fistp
mov
leave
jae
pop
jp
mov
leave
jae
pop
fstp
jae
jae
pusha
pop
popa
out
sbb
bound
fs
xchg
gs
jo
nop
jg
das
call
iret
and
and
imul
dec
ins
jns
jns
pop
ins
test
cmp
xor
fcomp
outs
inc
jo
xchg
cmp
int3
jno
jb
dec
call
sahf
dec
sahf
dec
jae
push
jbe
dec
sahf
dec
gs
(bad)
mov
scas
jp
pop
sar
repnz
repnz
and
inc
repnz
mov
jg
repnz
sub
add
and
push
repnz
adc
cs
popa
xchg
mov
and
out
sbb
cmps
(bad)
enter
mov
sahf
dec
sahf
dec
pminsw
arpl
call
mov
in
in
sub
or
cwde
inc
cdq
adc
fwait
jmp
sbb
lahf
mov
(bad)
lahf
jg
mov
mov
or
adc
inc
push
movs
pop
movs
mov
cmps
bswap
(bad)
enter
test
pusha
stos
iret
stos
lahf
lods
sbb
lods
scas
sbb
scas
mov
enter
mov
mov
mov
jns
fwait
mov
outs
mov
mov
mov
mov
lods
and
sbb
in
xor
enter
mov
sahf
sub
jns
jns
int
out
xchg
sbb
(bad)
lds
(bad)
(bad)
jge
push
pusha
dec
enter
dec
sahf
dec
fild
iret
and
add
xor
into
das
iret
iret
and
rcr
and
pop
outs
ror
jae
inc
aam
mov
leave
jae
jae
(bad)
mov
or
nop
xor
iret
sbb
inc
inc
(bad)
fdivr
outs
fimul
inc
push
(bad)
out
loopne
leave
jae
das
sbb
loop
xchg
cmp
out
push
jecxz
in
nop
les
cmp
je
xlat
adc
xchg
xchg
mov
and
mov
mov
das
or
sbb
push
pop
push
mov
adc
and
adc
hlt
sahf
dec
sahf
retf
dec
dec
cmc
mov
imul
dec
test
and
jg
pop
enter
sti
aas
cld
lahf
and
dec
call
add
jae
jae
add
pop
add
leave
jae
add
add
jae
jae
add
leave
jae
pop
xor
test
leave
jae
or
or
or
cmc
sbb
or
mov
mov
xchg
adc
pop
adc
cmp
push
jns
jns
adc
sbb
jns
jns
test
or
aas
jmp
and
out
iret
and
jae
repz
pop
clc
sbb
jae
and
and
movs
and
stos
and
mov
mov
jbe
sub
mov
jmp
sub
jmp
pop
shl
out
sub
sub
dec
aas
call
jns
nop
sub
mov
das
xor
out
xchg
xor
ss
out
xor
sbb
cmp
ucomiss
call
stc
sbb
dec
fbstp
jns
jns
xor
sbb
and
jns
inc
leave
jae
jae
inc
test
jae
jae
inc
push
inc
test
jne
xlat
adc
mov
mov
push
inc
sar
dec
jae
jae
out
retf
push
fs
jae
push
mov
fcmovb
nop
or
push
and
push
push
lahf
and
pop
movs
pop
and
pop
cmp
sbb
pop
ucomiss
jns
inc
pop
add
jns
jns
(bad)
popa
cmps
das
and
std
sbb
fs
fwait
nop
or
(bad)
and
jns
loop
out
out
push
sub
ins
cmp
ins
or
leave
outs
xor
iret
and
jb
and
mov
or
and
push
leave
jae
jae
ja
js
rcl
nop
cmp
cmp
call
das
add
or
jae
lahf
or
or
sbb
or
xlat
adc
or
test
and
popa
enter
mov
mov
jae
mov
jg
jle
pop
mov
cmp
pop
imul
fld
and
cs
mov
pop
xchg
sbb
cwde
setns
rcr
in
mov
popf
and
sahf
aam
repnz
repnz
mov
adc
xchg
or
mov
enter
outs
and
test
mov
out
stos
out
(bad)
out
xchg
stos
lods
lahf
aaa
out
out
lods
xchg
xchg
scas
les
xchg
mov
fistp
mov
imul
mov
dec
sbb
lahf
dec
sahf
dec
bound
jns
popa
mov
cs
jns
sar
jns
(bad)
mov
rcr
and
cs
pop
ret
nop
xor
mov
lds
pop
(bad)
(bad)
rcpps
xor
and
imul
xchg
xchg
sub
int
into
in
mov
and
adc
pop
xor
mov
rol
shl
adc
adc
adc
xchg
sbb
aas
retf
sbb
sbb
out
fistp
dec
sahf
dec
sahf
jg
outs
fnstsw
(bad)
dec
ins
xchg
mov
loop
xor
pop
jecxz
in
daa
or
outs
xlat
adc
mov
out
cmps
or
jmp
xor
iret
in
nop
rcl
xchg
cmp
shr
mov
lahf
xchg
aam
cmp
repnz
cmp
hlt
iret
jns
inc
(bad)
cmc
scas
neg
xchg
enter
cli
das
sti
lahf
retf
xchg
dec
sahf
dec
sahf
sahf
dec
jmp
add
mov
iret
ss
pop
add
and
mov
add
dec
push
jne
and
or
or
xlat
and
fisttp
adc
retf
cs
xchg
or
int
sahf
out
adc
lods
push
adc
adc
adc
ret
and
dec
adc
in
push
lds
movs
jns
jae
sbb
push
sbb
mov
push
sbb
mov
ins
sbb
fcomp
jns
in
in
iret
and
mov
xchg
out
out
and
and
nop
es
daa
leave
jae
jae
sub
jae
sub
jns
sbb
xchg
mov
sbb
ds
inc
sahf
and
adc
adc
jae
inc
aas
cdq
xor
ss
fist
push
cmp
cmp
xchg
cmp
inc
cmp
cmp
(bad)
aas
cmps
xchg
cmp
cmp
or
movs
pop
rcl
mov
inc
pushf
inc
cmp
imul
pop
xchg
dec
out
out
pop
add
sbb
dec
dec
int
sahf
dec
push
dec
call
sbb
push
ss
and
add
test
mov
sub
xlat
adc
mov
pop
mov
dec
pop
lahf
out
dec
xchg
pop
pop
adc
xlat
adc
and
pusha
jp
and
and
arpl
nop
xor
pop
pcmpgtd
lock
mov
push
retf
sbb
ins
imul
(bad)
jns
jns
mov
out
and
push
jb
movs
and
jae
je
sbb
xchg
jne
scas
ja
xor
jns
ins
js
sbb
xchg
sar
cmp
jl
jge
and
jle
jg
and
adc
mov
pop
ret
xlat
adc
imul
dec
cs
jns
aad
shl
mov
jns
mov
out
jns
jmp
jae
or
xchg
in
(bad)
cmps
nop
leave
jae
jae
xchg
jno
xchg
cmp
or
adc
xchg
cmp
cmp
or
cmp
pop
call
pushf
aas
popf
jae
or
setle
or
jae
lahf
sbb
mov
outs
add
mov
(bad)
cwde
movs
jle
leave
jae
movs
lods
cmps
cmps
xchg
xchg
leave
call
jne
cmp
cmp
or
push
test
cmp
push
adc
mov
scas
mov
in
adc
sahf
xlat
adc
sahf
inc
sahf
dec
adc
pop
rol
or
and
imul
mov
cs
dec
mov
call
iret
or
adc
rol
adc
xor
ret
ss
lahf
lds
nop
sbb
pop
inc
(bad)
pop
retf
(bad)
enter
enter
dec
sahf
dec
leave
inc
retf
das
arpl
fbstp
pop
ret
int
into
das
pop
pop
repnz
repnz
int3
ror
pop
repnz
rcl
inc
repnz
inc
dec
adc
aad
adc
and
pop
enter
pop
dec
cs
fstp
jns
jns
das
call
jb
jns
jns
xchg
adc
adc
jns
movs
adc
or
loop
dec
or
jae
jecxz
lahf
dec
or
or
pop
out
and
and
call
jmp
xor
jmp
in
out
and
and
fucomip
out
jg
out
xor
lock
or
icebp
repnz
dec
or
jae
repz
pop
gs
or
aas
test
idiv
fist
stc
cli
pop
inc
inc
inc
(bad)
sti
dec
cld
mov
inc
iret
(bad)
pop
jmp
lods
inc
adc
adc
add
add
adc
sbb
or
pushf
in
ins
adc
xor
sub
mov
and
push
add
add
ss
push
loopne
pop
add
inc
push
pop
pop
repnz
or
(bad)
xchg
out
inc
or
push
or
mov
sbb
das
mov
jns
cmps
adc
nop
adc
sbb
sbb
sbb
mov
xchg
and
sbb
sbb
sbb
and
and
xchg
and
and
and
sbb
sub
and
xchg
and
sub
sub
sbb
xor
and
xchg
and
xor
mov
xor
xchg
cmp
dec
xchg
cmp
cmp
(bad)
in
fs
aas
cld
inc
jbe
aas
mov
inc
das
add
dec
or
pop
and
int
call
push
dec
mov
cmp
add
ins
and
xor
dec
mov
dec
inc
jns
stc
add
jns
push
add
jns
jns
push
add
or
pusha
add
pop
ss
push
push
push
jg
inc
repnz
repnz
pop
pop
pop
ss
gs
push
pop
pop
pcmpgtb
pop
pop
pop
pop
lahf
inc
repnz
ss
outs
bound
iret
and
bound
gs
ss
fbld
inc
ss
arpl
aas
push
(bad)
xchg
cmp
or
cmp
ins
inc
outs
or
outs
jo
jno
nop
cmp
call
jae
movs
jns
jae
je
sbb
xchg
ja
nop
or
js
bswap
nop
or
jp
jl
leave
nop
or
jle
cs
xchg
mov
add
mov
cmc
or
ret
add
outs
iret
gs
repnz
inc
xor
mov
and
xor
and
lea
or
test
or
xchg
nop
or
jae
xchg
xchg
cmp
or
inc
cwde
pop
inc
rcl
or
nop
or
popf
fs
nop
sahf
lahf
(bad)
and
mov
inc
xor
mov
xor
cmps
xor
xor
and
stos
lods
lods
and
scas
dec
repz
out
push
mov
push
mov
rcl
nop
aam
shl
leave
mov
(bad)
mov
mov
inc
ss
dec
mov
xor
and
rol
call
push
(bad)
sar
(bad)
and
gs
(bad)
pop
stc
enter
ss
(bad)
hlt
retf
pop
xor
push
int
ss
into
bswap
pop
shl
and
and
pop
xor
rcl
dec
cmp
repnz
xlat
add
and
lods
push
fadd
fldcw
inc
xor
pand
xor
fstp
fisub
fnstsw
and
xchg
out
push
loope
xchg
and
xchg
jecxz
in
fs
sbb
jg
call
jmp
xchg
jg
mov
out
out
and
(bad)
enter
repz
hlt
pop
xchg
cmc
jg
mul
dec
clc
dec
stc
xchg
cli
sti
cld
dec
xchg
(bad)
jns
xchg
add
add
sbb
inc
sahf
loopne
add
inc
leave
nop
or
sysret
or
nop
or
or
repnz
add
iret
cmovs
fs
xchg
adc
enter
add
and
mov
dec
sbb
sbb
sbb
inc
pop
jb
pop
add
add
ins
and
enter
and
add
pop
add
add
pop
enter
xchg
and
xchg
sub
sub
xchg
and
sub
xor
push
push
xor
fs
xor
inc
xor
ss
cmp
sbb
cmp
sbb
leave
nop
sub
or
nop
or
inc
inc
nop
or
nop
inc
inc
leave
nop
or
inc
inc
inc
or
nop
or
dec
dec
nop
or
nop
dec
dec
leave
nop
or
dec
dec
dec
or
nop
or
push
push
nop
or
nop
push
push
leave
nop
or
push
push
push
or
nop
or
pop
pop
nop
or
nop
pop
pop
leave
nop
or
pop
pop
pop
or
nop
or
popa
bound
fs
nop
or
gs
nop
or
imul
ins
leave
nop
or
ins
outs
outs
or
nop
or
jno
nop
or
nop
jae
leave
nop
or
jne
ja
leave
nop
or
jns
nop
or
nop
jnp
leave
nop
or
jge
jg
leave
nop
or
add
or
test
or
mov
mov
mov
nop
xchg
xchg
nop
or
nop
xchg
xchg
leave
nop
or
xchg
xchg
xchg
or
nop
or
cdq
call
leave
nop
or
popf
sahf
lahf
or
nop
or
mov
nop
mov
shl
cmp
inc
test
and
test
nop
or
inc
add
or
pop
xor
dec
push
mov
sbb
and
xchg
mov
mov
sbb
mov
mov
xchg
mov
nop
or
movsx
or
nop
or
ret
or
nop
(bad)
lds
and
ret
(bad)
enter
inc
leave
retf
and
and
sub
dec
enter
shl
inc
mov
pop
add
or
nop
sub
nop
or
nop
(bad)
xlat
or
(bad)
fcomp
inc
cs
add
add
mov
out
inc
xor
loopne
push
xchg
and
xchg
loope
jecxz
xchg
and
in
out
sbb
and
xchg
jmp
and
in
in
out
and
xchg
and
lock
and
xchg
icebp
repnz
xchg
out
hlt
cmc
and
sbb
mov
das
add
popa
ret
repnz
sti
add
sbb
std
mov
and
add
or
inc
lsl
add
inc
add
and
jb
add
add
ins
and
or
or
add
nop
sub
or
nop
adc
leave
nop
or
adc
push
pop
sbb
sbb
mov
jecxz
add
das
sbb
push
scas
pop
sbb
and
and
xchg
and
and
and
xchg
and
and
sub
sub
sbb
and
xchg
sub
jb
xor
xor
xor
xor
xor
xor
xor
cmp
and
xor
cmp
xor
cmp
xor
inc
xor
xor
inc
inc
xor
inc
inc
inc
and
xor
dec
xor
xor
dec
inc
xor
dec
dec
dec
and
xor
push
xor
xor
push
inc
xor
push
push
push
and
xor
pop
xor
xor
pop
inc
xor
pop
pop
pop
and
xor
popa
xor
xor
fs
xor
gs
xor
imul
cmc
ins
and
xchg
and
xchg
and
xchg
outs
jo
sbb
je
sbb
and
xchg
ja
jns
xchg
and
jp
jl
sbb
and
xchg
jg
sbb
add
xchg
and
xchg
xchg
sbb
xchg
and
xchg
(bad)
nop
xchg
sbb
xchg
and
xchg
and
xchg
xchg
cwde
cdq
sbb
pushf
and
xchg
and
xchg
lahf
mov
sbb
xchg
and
xchg
cmps
test
sbb
lods
and
xchg
and
xchg
scas
mov
sbb
mov
sbb
and
xchg
mov
mov
mov
xchg
and
xchg
mov
and
ret
and
xchg
and
(bad)
xchg
and
xchg
(bad)
enter
and
retf
and
xchg
and
into
xchg
and
xchg
iret
rcl
sbb
aam
sbb
and
xchg
xlat
fcomp
sbb
fsub
sbb
and
xchg
fnstsw
loope
xchg
and
loop
in
sbb
and
xchg
out
jmp
jmp
in
out
xchg
and
xchg
out
lock
sbb
hlt
and
xchg
and
not
clc
stc
sbb
cld
and
xchg
and
dec
test
inc
add
or
nop
or
add
or
nop
add
leave
pop
or
or
nop
or
or
or
nop
or
leave
movups
or
nop
or
adc
or
nop
adc
leave
pop
sbb
or
nop
or
sbb
or
nop
sbb
leave
pop
and
or
nop
or
and
or
nop
and
leave
daa
sub
or
nop
or
sub
or
nop
sub
leave
das
xor
or
nop
or
xor
or
nop
xor
leave
aaa
cmp
or
nop
or
cmp
or
nop
cmp
leave
aas
inc
inc
or
nop
or
inc
inc
nop
or
nop
inc
inc
leave
nop
or
inc
dec
dec
or
nop
or
dec
dec
nop
or
nop
dec
dec
leave
nop
or
dec
push
push
or
nop
or
push
push
nop
or
nop
push
push
leave
nop
or
push
pop
pop
or
nop
or
pop
pop
nop
or
nop
pop
pop
leave
nop
or
pop
pusha
popa
or
nop
or
arpl
leave
nop
gs
nop
or
addr16
or
imul
nop
ins
outs
leave
nop
or
outs
jo
or
nop
or
jae
nop
or
nop
jne
leave
nop
or
ja
jns
leave
nop
or
jnp
nop
or
nop
jge
leave
nop
or
jg
or
test
xchg
nop
or
xchg
or
mov
mov
nop
or
(bad)
nop
xchg
or
nop
or
xchg
xchg
nop
or
nop
xchg
xchg
leave
nop
or
xchg
cwde
cdq
or
nop
or
fwait
pushf
nop
or
nop
popf
sahf
leave
nop
or
lahf
mov
or
mov
nop
movs
cmps
leave
nop
or
cmps
test
or
nop
or
stos
lods
nop
or
nop
lods
scas
leave
nop
or
scas
mov
or
nop
or
mov
nop
or
nop
mov
leave
nop
or
mov
mov
mov
leave
nop
mov
leave
mov
nop
or
ret
les
(bad)
leave
nop
or
(bad)
enter
nop
or
retf
int3
nop
or
nop
int
leave
nop
or
iret
rcl
or
nop
or
rcl
nop
or
nop
aad
leave
nop
or
xlat
fcomp
dec
call
dec
sahf
dec
sahf
sbb
push
fnsave
push
inc
pop
xchg
out
out
loopne
ds
out
out
loop
jecxz
sub
jg
rol
and
sbb
and
jmp
iret
and
iret
and
shr
and
cmp
xchg
pop
out
lock
add
pop
enter
scas
rol
jns
add
inc
xchg
maskmovq
xor
stc
cli
and
adc
pop
xor
out
std
(bad)
je
or
dec
push
inc
sub
pcmpeqw
ja
add
cmps
mov
jl
pop
add
cmp
or
adc
add
cmp
cmp
add
add
sub
jmp
cmp
cmp
(bad)
or
cmp
psrad
ds
cmp
inc
adc
mov
and
(bad)
das
jns
xchg
adc
push
sar
add
sub
iret
and
jae
jae
sbb
les
jae
sbb
sbb
and
pslld
and
fwait
and
pop
repnz
loopne
or
dec
push
repnz
add
sahf
dec
sahf
retf
dec
mov
and
sub
setb
xchg
out
sub
xchg
out
das
jb
xchg
out
out
xor
cs
sbb
inc
xor
das
jns
jns
inc
neg
aaa
cmp
movs
test
add
in
in
(bad)
cmp
cmp
mov
xchg
ds
sahf
retf
xchg
bts
sahf
retf
sahf
sub
pusha
inc
and
inc
inc
pop
mov
ins
inc
add
out
out
inc
xchg
dec
xchg
out
out
dec
jno
leave
jae
repz
sbb
nop
es
push
inc
or
inc
dec
mov
and
push
pop
adc
cmp
sbb
push
cmp
cmp
dec
push
jle
cmp
cmp
xchg
pop
repnz
ret
outs
sub
inc
repnz
dec
pop
pop
pop
pop
ss
pop
(bad)
pop
jo
imul
jns
jns
call
cmp
fs
gs
data16
pop
repnz
repnz
fistp
repnz
pop
add
and
and
jp
ins
and
and
add
xor
jb
cs
sbb
mov
cs
xchg
jbe
xchg
jns
xchg
out
das
scas
jp
out
out
jnp
jl
sbb
sbb
and
aas
cmp
mov
mov
test
test
sbb
fbld
mov
sbb
retf
xchg
mov
lea
add
(bad)
seto
iret
xchg
fisttp
in
cs
xchg
(bad)
in
in
xchg
in
adc
and
cdq
lahf
call
fwait
je
xchg
and
imul
scas
pop
mov
mov
sbb
cmps
push
cmps
rcl
test
outs
neg
imul
lods
cmp
cmp
int
shr
push
retf
pusha
and
add
dec
sahf
dec
sahf
in
mov
mov
mov
popa
mov
mov
mov
xor
mov
aas
add
ins
dec
mov
sbb
sbb
sbb
js
pop
rol
mov
nop
cmp
dec
and
lds
ret
jae
(bad)
stos
(bad)
lahf
and
enter
add
pop
out
push
repnz
push
sbb
into
iret
push
sar
shl
push
aas
rcr
push
aam
aad
retf
pusha
dec
pop
(bad)
outs
fcmovnbe
xor
int
out
sbb
iret
gs
xchg
pop
repnz
ret
fstp
inc
(bad)
nop
cmp
scas
mov
inc
repnz
inc
loop
iret
inc
inc
push
inc
in
in
repnz
push
inc
out
adc
xor
call
and
push
jmp
pop
ret
in
iret
in
jg
or
inc
repnz
out
lahf
lock
psllw
repnz
pop
repz
repnz
inc
inc
cmc
pop
pop
test
pop
jns
clc
pop
and
outs
arpl
and
sti
mov
iret
xchg
std
sar
mov
dec
add
sahf
retf
cmovs
in
mov
add
pop
mov
das
add
repnz
or
pop
or
and
or
push
call
push
cmp
iret
and
adc
iret
and
loop
iret
and
cmp
cs
sahf
pop
repnz
ss
outs
mov
pop
je
jb
repnz
repnz
xor
jecxz
gs
repnz
inc
push
pop
jg
ss
int
and
adc
repnz
fcomp
repnz
and
repnz
pop
repnz
sub
inc
repnz
repnz
sub
mov
or
sub
jns
jns
xchg
xor
jns
pop
xor
xor
jns
xor
xor
cs
mov
popf
ss
jns
lods
aaa
cmp
or
sbb
scas
cmp
dec
cmp
mov
out
add
jne
pop
jg
inc
leave
jae
inc
inc
aas
sbb
nop
or
jnp
repnz
repnz
inc
dec
dec
xor
gs
adc
cmp
cmp
(bad)
dec
adc
cmp
cmp
inc
dec
push
dec
cmp
cmp
jbe
sub
inc
ret
outs
push
push
repnz
out
out
pop
adc
sbb
pop
pop
cmp
or
pusha
inc
in
das
mov
iret
and
imul
xor
pop
outs
popa
(bad)
nop
rcl
pop
repnz
shl
repnz
repnz
push
mov
pop
add
out
lahf
imul
push
imul
push
inc
ins
jg
ins
or
popa
inc
outs
fild
add
and
bound
and
xchg
jne
inc
ss
scas
ja
in
movs
jns
push
js
jns
xchg
mov
dec
sahf
retf
sbb
jge
and
add
scas
add
jae
and
mov
add
add
jae
aas
push
mov
or
jae
mov
mov
nop
xor
lea
cmp
dec
adc
(bad)
nop
nop
aas
add
xchg
mov
inc
(bad)
xchg
scas
xchg
out
xchg
leave
nop
or
cwde
and
cdq
call
fwait
pushf
pop
jno
nop
xor
cmp
jl
add
xchg
xchg
out
out
movs
(bad)
cmps
xchg
sbb
pop
xchg
out
out
test
dec
sbb
enter
out
scas
(bad)
scas
ins
dec
sahf
dec
lahf
scas
mov
out
xchg
out
xchg
test
sbb
pop
repnz
shl
sbb
mov
nop
cmp
scas
xchg
mov
repnz
push
mov
gs
mov
iret
and
ret
and
les
aas
(bad)
pop
dec
nop
cmp
cmp
mov
ror
bswap
lahf
rcl
iret
or
nop
cmp
into
iret
iret
inc
push
inc
inc
(bad)
iret
rol
and
pushf
xor
xchg
add
xchg
out
aad
(bad)
and
sbb
outs
xor
xchg
xor
mov
lahf
out
sbb
nop
cmp
fcomp
push
das
nop
fisub
pop
repnz
repnz
mov
imul
xor
in
xor
out
out
and
outs
push
jmp
xor
jmp
fs
in
xor
and
out
aas
out
imul
push
push
icebp
adc
cs
enter
arpl
retf
outs
js
neg
mov
jns
lods
clc
stc
(bad)
and
mov
cli
(bad)
sti
fild
sbb
(bad)
lahf
retf
bound
(bad)
fbld
jbe
add
sub
dec
repz
add
pusha
push
add
jae
jae
add
leave
jae
pop
(bad)
or
jae
jae
or
jae
or
or
jl
jne
add
xchg
out
pop
iret
pmovmskb
xchg
out
adc
and
cmp
mov
adc
adc
xchg
push
pop
jne
out
das
add
push
pop
mov
out
push
scas
push
imul
push
out
and
pop
punpckhwd
xchg
out
and
adc
and
push
outs
outs
and
mov
repz
and
out
out
neg
out
sub
sub
sahf
dec
sbb
das
sahf
dec
sahf
dec
and
ja
iret
and
xor
iret
and
lahf
xor
pop
ss
cmp
cmp
outs
xchg
pop
cmp
pop
(bad)
nop
cmp
push
repnz
repnz
dec
cmp
cmp
sub
and
or
pop
call
jae
inc
aaa
inc
leave
jae
jae
inc
fld
or
jae
inc
inc
call
sbb
out
out
dec
js
dec
repz
out
dec
dec
push
dec
xchg
or
jae
dec
dec
adc
inc
mov
push
jg
push
in
in
add
fst
xchg
mov
cs
dec
sahf
mov
pop
aas
nop
cs
jns
cwde
pop
out
xchg
pop
cs
bswap
pop
dec
sbb
iret
dec
sahf
dec
sahf
add
popa
dec
sahf
dec
sahf
add
mov
imul
sbb
pop
addr16
mov
dec
cmp
cmp
jns
jns
cmps
push
iret
and
lahf
out
iret
and
sub
nop
xor
jae
adc
inc
xor
jae
push
xchg
push
sahf
retf
sbb
(bad)
jns
mov
dec
sahf
dec
dec
jnp
jl
dec
sahf
dec
es
out
cld
call
outs
add
xchg
rol
nop
cmp
sbb
test
iret
and
xchg
xchg
(bad)
mov
adc
jl
inc
repnz
and
call
and
sub
nop
out
xchg
push
iret
enter
inc
test
pop
fistp
out
cdq
call
fwait
xchg
pushf
dec
sahf
dec
sahf
and
dec
sahf
inc
lahf
mov
mov
mov
out
push
jmp
and
cmps
imul
test
cs
jns
fisubr
jns
jg
cs
mov
mov
jns
jns
jns
arpl
jns
jns
retf
mov
in
lods
mov
xchg
mov
sbb
xchg
mov
movzx
sbb
dec
mov
sahf
retf
jg
mov
xor
mov
nop
cmp
pop
mov
(bad)
sbb
and
mov
and
(bad)
retf
sbb
iret
and
sahf
mov
mov
or
retf
jg
push
int
into
popa
dec
sahf
dec
jg
iret
ror
fst
rcl
out
leave
jae
jae
shl
aam
mov
aad
(bad)
pop
inc
sar
fs
jae
(bad)
pop
and
gs
(bad)
fcom
lahf
or
inc
xchg
rcl
jns
nop
cmp
loop
jb
xchg
movs
jecxz
out
in
sub
movs
(bad)
pop
in
xchg
mov
jmp
(bad)
jmp
dec
in
scas
in
pop
add
lahf
xor
(bad)
enter
lock
imul
jg
sbb
dec
xor
xchg
out
cmc
imul
mov
clc
pop
and
xchg
out
stc
cli
aas
mov
dec
cld
iret
leave
mov
pop
inc
fs
inc
pop
(bad)
add
and
ins
add
and
mov
test
movs
jg
retf
cs
pop
or
or
or
or
or
or
imul
bswap
dec
sahf
retf
(bad)
push
adc
push
adc
and
push
and
iret
and
outs
pop
repnz
ss
dec
out
mov
test
sbb
xchg
out
out
sbb
sbb
push
fistp
ins
and
iret
gs
shl
and
mov
and
shl
jbe
pop
add
sub
add
and
and
nop
pop
jecxz
je
pop
pop
sub
mov
cs
das
jmp
xchg
out
xor
xor
xor
jg
xor
mov
jns
xchg
xor
adc
cmp
cmp
xchg
out
cmp
cmp
movs
out
out
cmp
repz
xchg
(bad)
push
inc
and
iret
sub
iret
and
inc
xchg
xor
iret
pop
inc
inc
das
mov
inc
lea
inc
jne
dec
rol
xchg
mov
ret
test
daa
cmc
dec
call
pop
push
pop
or
fst
push
out
out
(bad)
fistp
push
push
out
out
push
add
leave
jae
repz
push
scas
push
pop
addr16
and
xcrypt-ctr
cmps
pop
cmp
xor
aas
aam
cmp
cmp
mov
int3
pop
imul
popa
out
lods
and
pop
bound
jns
dec
xchg
pop
sbb
jns
mov
das
movs
jns
jae
push
mov
sbb
mov
jp
in
in
mov
outs
dec
xchg
mov
ins
dec
bound
jae
je
xchg
out
(bad)
adc
mov
stos
ja
(bad)
cs
dec
sbb
jp
ja
jns
jns
sar
and
jg
xchg
sbb
jo
sbb
mov
das
add
inc
ss
cwde
test
jae
outs
imul
push
mov
and
add
and
or
inc
rcl
dec
and
xchg
xchg
(bad)
xor
ss
xchg
(bad)
and
and
cdq
and
lahf
jae
xchg
xor
iret
adc
popf
outs
pop
nop
les
iret
gs
mov
mov
(bad)
mov
iret
and
nop
cmp
pop
pop
cmps
test
pop
adc
or
pushf
sbb
enter
pusha
dec
sahf
retf
scas
inc
lods
scas
arpl
dec
out
test
and
xchg
out
and
out
out
mov
mov
repz
sbb
dec
call
mov
pop
mov
iret
and
mov
mov
inc
xchg
or
rol
mov
aas
mov
lds
cs
stos
(bad)
aas
jle
xor
retf
imul
in
int3
pop
int
jns
jns
xchg
into
(bad)
iret
in
lods
and
aas
rcl
aas
ror
dec
sahf
dec
sbb
outs
iret
aad
jns
imul
sub
mov
(bad)
fldcw
ficomp
fstp
dec
fdivr
imul
and
dec
in
in
jns
push
loop
xchg
jecxz
in
xchg
out
xchg
fistp
sbb
pxor
das
jmp
pop
mov
sbb
mov
lock
shl
cmp
repz
in
in
sub
mov
clc
mov
stc
dec
mov
xor
in
sbb
std
(bad)
jl
sbb
add
cmp
cmp
or
sub
cmp
cmp
inc
add
add
xchg
cmp
push
add
seta
or
jae
adc
or
enter
lea
add
enter
or
(bad)
or
jae
jae
or
or
jae
jae
or
enter
add
xchg
or
jns
pop
xadd
jns
int
sbb
call
dec
call
dec
sahf
mov
adc
sub
aas
pop
dec
das
in
or
or
cmp
cmp
aas
inc
and
call
push
and
sub
dec
daa
sahf
dec
sahf
dec
mov
dec
sahf
dec
pop
sub
push
sub
sub
cs
cwde
das
in
in
inc
xor
xchg
aas
shl
retf
sbb
jg
sahf
dec
sahf
add
jns
arpl
paddsw
ins
push
nop
cmp
xor
cdq
cmp
pop
ret
loopne
ds
jae
pop
sar
mov
lock
mov
into
mov
loope
xor
adc
das
out
out
dec
jne
in
xchg
out
dec
lahf
dec
dec
out
jns
jns
push
dec
cmps
dec
xor
jns
cmp
push
push
fst
push
scas
leave
jae
jae
push
jecxz
leave
jae
jae
push
(bad)
push
and
and
pop
repnz
xor
dec
dec
sbb
push
pop
pop
pop
dec
sahf
dec
sahf
sub
pop
mov
pop
pusha
call
mov
sub
xchg
arpl
int
sbb
push
addr16
and
and
nop
xor
das
imul
pop
repnz
xchg
ins
pop
ins
repnz
repnz
pop
outs
or
jae
inc
jo
dec
jno
or
or
lahf
jae
and
je
jne
ss
mov
iret
adc
pop
bnd
jns
jae
jae
pop
sbb
jae
jl
jge
push
xchg
cmp
mov
push
repnz
mov
aas
xor
add
test
test
dec
sahf
dec
sbb
xor
mov
xchg
cmp
loop
and
nop
cmp
lea
psubq
jae
nop
push
xchg
leave
or
jae
xchg
push
xchg
xchg
xor
xchg
sbb
sbb
or
xchg
or
or
cmp
or
or
(bad)
lahf
mov
jg
mov
iret
push
mov
xchg
xor
add
leave
cmps
iret
dec
xor
repnz
or
sbb
movlps
xchg
sbb
out
out
scas
xchg
mov
jae
repz
jae
or
(bad)
mov
iret
and
mov
aam
xor
scas
mov
sar
repnz
adc
out
sub
inc
repnz
repnz
movs
inc
aad
push
inc
repnz
ret
or
pop
(bad)
lds
jae
fild
(bad)
icebp
or
enter
sbb
scas
stos
xor
retf
int3
bswap
iret
and
out
cmp
xor
xor
pop
rol
nop
cmp
iret
push
rcl
cmp
rcl
repnz
(bad)
nop
(bad)
lahf
lods
xlat
test
push
fcomp
mov
ficomp
fisttp
aas
(bad)
jns
mov
fisttp
loope
xchg
xchg
enter
in
in
and
push
xchg
mov
jmp
mov
jmp
inc
in
mov
jnp
imul
iret
out
aas
movs
xchg
mov
in
in
xor
repnz
inc
sar
repnz
repnz
mov
pop
inc
inc
imul
daa
clc
and
stc
cli
pop
enter
dec
ins
dec
sbb
dec
std
jg
pslld
mov
repnz
mov
and
repnz
repnz
iret
add
pop
repnz
dec
add
repnz
sub
ja
repnz
repnz
jl
rcr
ret
or
pop
repnz
add
repnz
ror
mov
repnz
repnz
fst
push
adc
pop
repnz
mov
lea
pop
repnz
jecxz
pop
push
jns
imul
dec
sbb
pop
dec
sahf
dec
sahf
xchg
sbb
sbb
sahf
dec
sahf
test
cs
pop
aas
add
loopne
jns
jns
mov
and
and
and
pop
xchg
fldenv
sahf
dec
sahf
dec
xor
pusha
sub
sub
test
arpl
pop
sub
mov
dec
sahf
dec
sahf
mov
(bad)
xor
mov
in
in
jmp
outs
adc
push
retf
sbb
cmp
popa
dec
cmp
pop
cmp
and
sar
in
push
mov
cwde
inc
in
in
xchg
inc
lahf
inc
enter
inc
pop
inc
dec
das
jns
popa
inc
pop
mov
push
xchg
cmp
xor
sub
nop
cmp
cmp
test
pop
repnz
(bad)
dec
outs
sbb
inc
repnz
repnz
push
push
push
repnz
or
or
xchg
out
out
push
pop
push
and
sbb
mov
xchg
pop
mov
or
jns
mov
bound
and
in
pop
and
pop
sub
iret
cmp
sbb
sbb
jns
mov
aas
outs
pop
mov
dec
push
in
push
imul
out
dec
mov
out
ins
outs
outs
cmp
sbb
out
add
xchg
and
or
stc
or
or
jae
pop
mov
jae
ja
js
or
dec
lahf
and
jnp
mov
(bad)
jge
jle
ret
jg
or
inc
repnz
repnz
or
adc
iret
and
cmp
or
pop
stos
pop
or
popa
dec
pop
(bad)
mov
add
lods
lea
pop
push
xchg
mov
xchg
out
out
aas
or
call
xchg
xchg
jae
repz
out
inc
push
xchg
inc
jae
jae
xchg
add
leave
cdq
call
das
sahf
pushf
popf
iret
and
sahf
mov
or
and
iret
mov
or
jg
lahf
inc
ss
daa
movs
movs
lahf
cmps
inc
push
inc
adc
scas
test
xchg
or
fild
jae
stos
jg
pop
or
xchg
xchg
mov
nop
cmp
iret
je
mov
inc
(bad)
nop
or
mov
push
inc
inc
fbstp
pop
repnz
mov
or
mov
or
mov
cmp
(bad)
mov
movs
xchg
sar
out
xchg
rol
push
jae
repz
ret
cmp
(bad)
in
or
or
(bad)
(bad)
jae
or
cs
repz
mov
(bad)
mov
into
jg
xchg
mov
rol
rcr
xchg
das
aam
aad
dec
sahf
retf
iret
int3
(bad)
and
ins
dec
sahf
dec
scas
fcomp
(bad)
adc
mov
retf
pop
enter
sbb
and
cmp
xor
das
fndisi(8087
pop
or
pop
leave
jae
jae
in
in
iret
gs
xchg
out
out
sbb
sahf
dec
sbb
pop
sbb
and
imul
imul
xchg
and
nop
out
daa
dec
inc
or
rep
nop
les
seto
shl
xchg
not
dec
out
stc
fild
nop
(bad)
cli
(bad)
sti
pop
cld
pop
repnz
push
iret
ins
std
xlat
inc
push
inc
repnz
jmp
add
xchg
addr16
pcmpgtw
mov
xchg
out
add
mov
repnz
add
push
dec
aaa
add
mov
add
or
add
xor
mov
add
add
and
ins
shl
add
je
jb
outs
jae
out
popf
aaa
sub
add
sbb
stos
add
(bad)
jg
stos
ins
add
je
inc
popa
ins
ins
inc
outs
imul
add
jne
call
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
and
push
push
push
and
jae
adc
neg
jns
outs
je
popaw
arpl
pop
pop
jbe
popa
inc
js
mov
outs
or
dec
popa
outs
xor
enter
push
bound
sbb
inc
cmovb
inc
push
mov
add
mov
or
jae
adc
add
sti
jne
inc
or
add
add
pop
add
cmp
pop
sub
pop
add
or
push
xchg
mov
movs
sbb
ins
sub
rcl
fs
push
and
mov
cmp
fwait
std
cs
xor
jg
or
in
adc
pusha
cs
je
test
mov
inc
cmp
arpl
ret
loopne
das
inc
add
mov
int
cmps
or
add
add
add
inc
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
