jmp
jb
or
jb
push
mov
jb
add
jb
push
jb
ret
mov
jb
add
jb
lahf
mov
jb
add
jb
loopne
jb
xchg
mov
jb
fwait
mov
jb
xchg
mov
jb
sbb
jb
or
jb
fwait
mov
jb
call
fild
jb
push
mov
jb
jne
jb
(bad)
mov
jb
xchg
mov
jb
add
jb
ins
mov
jb
add
jb
xor
mov
jb
ins
movs
jb
xchg
mov
jb
push
mov
jb
out
mov
jb
(bad)
mov
jb
imul
add
add
add
xchg
inc
add
add
add
inc
add
add
add
xchg
inc
add
add
add
inc
add
add
add
add
add
add
imul
add
add
add
sbb
inc
add
xchg
inc
add
add
add
add
ss
inc
add
inc
add
add
add
add
adc
add
add
xchg
mov
add
fwait
mov
add
add
add
dec
ret
das
ret
add
add
jno
inc
add
add
add
add
push
les
les
add
add
add
mov
add
add
add
add
add
adc
inc
add
add
add
add
add
add
jp
inc
add
add
add
add
add
add
adc
inc
add
mov
or
add
add
out
mov
add
add
add
(bad)
enter
add
inc
add
add
dec
iret
inc
add
add
add
add
(bad)
rol
add
add
add
hlt
rol
add
add
add
and
aad
add
add
add
add
mov
inc
add
add
add
add
fld
fld
add
add
add
mov
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
inc
add
add
add
add
daa
leave
je
add
mov
add
add
add
add
add
popa
ins
ins
and
inc
data16
jb
imul
jb
jae
add
add
add
and
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
sub
pop
loopne
add
add
add
nop
jl
ins
adc
add
add
add
inc
add
add
add
add
je
inc
add
add
add
das
inc
add
add
add
cs
add
add
add
add
add
inc
add
add
add
inc
add
add
add
sub
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
add
adc
add
adc
add
add
add
add
add
add
dec
cli
jp
add
inc
xor
add
or
or
add
add
add
push
inc
add
(bad)
(bad)
dec
add
add
add
add
add
jmp
adc
inc
add
adc
js
add
mov
add
popf
add
add
add
add
outs
jae
jb
je
popa
jb
popa
imul
imul
popa
jae
addr16
addr16
add
inc
data16
jb
imul
add
outs
pop
inc
scas
dec
aad
loopne
cmp
add
add
sbb
add
add
add
add
add
add
or
adc
pop
sbb
lods
push
mov
dec
retf
add
add
add
add
add
add
add
add
enter
pushf
add
add
add
int3
jp
aas
mov
dec
stos
adc
movs
xchg
add
add
add
add
add
loopne
inc
add
add
add
add
adc
sahf
mov
xchg
ficomp
add
add
add
add
add
add
inc
add
add
hlt
add
add
inc
add
add
add
fld
and
add
loopne
add
loopne
add
add
add
add
add
add
inc
add
add
add
xchg
inc
add
(bad)
(bad)
inc
add
add
loopne
add
add
add
add
add
add
mov
inc
add
add
add
add
mov
inc
add
add
add
add
add
mov
push
sbb
xchg
test
add
fmul
add
sub
inc
add
add
add
mov
add
add
inc
add
xor
enter
push
add
add
adc
cmp
add
mov
add
add
jge
shr
inc
add
add
add
add
xor
inc
add
(bad)
(bad)
inc
add
add
add
add
sbb
test
jge
inc
sub
(bad)
(bad)
(bad)
inc
adc
inc
add
add
add
add
jge
fsubr
inc
add
add
add
sbb
add
add
add
inc
add
adc
rcl
inc
add
adc
fcomp
inc
add
inc
add
adc
rcl
inc
add
adc
add
inc
add
inc
add
adc
rcl
inc
add
adc
add
add
inc
add
inc
add
adc
rcl
inc
add
adc
sub
jmp
add
add
add
add
inc
add
add
add
(bad)
inc
add
add
daa
inc
add
loopne
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
nop
sbb
add
add
add
inc
add
add
je
jge
adc
inc
add
inc
add
pop
add
add
xor
inc
add
(bad)
(bad)
inc
add
add
add
add
add
sub
(bad)
(bad)
(bad)
inc
adc
cmp
add
mov
add
add
sbb
jge
xor
inc
add
add
add
adc
cmp
add
mov
add
add
add
xor
cmp
inc
add
add
add
adc
inc
add
add
add
add
xor
dec
sub
add
add
inc
add
add
add
sub
add
add
add
add
add
inc
add
xor
push
sub
add
pop
inc
add
add
add
sbb
add
adc
rcl
inc
add
adc
inc
pop
inc
add
sbb
add
adc
rcl
inc
add
adc
loopne
inc
add
sbb
add
adc
rcl
inc
add
adc
or
inc
add
adc
rcl
inc
add
adc
xor
inc
add
adc
rcl
inc
add
adc
sub
jmp
add
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
inc
add
loopne
add
add
add
jnp
int3
pop
inc
add
add
add
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
pop
inc
add
add
add
inc
add
add
add
add
inc
add
inc
add
pop
add
add
xor
inc
add
(bad)
(bad)
inc
add
add
add
add
xor
inc
sub
(bad)
(bad)
(bad)
inc
sbb
cmp
add
mov
add
add
inc
add
sub
add
add
inc
add
add
add
mov
add
add
jge
aam
inc
add
add
add
or
inc
add
add
sub
add
add
and
inc
add
xor
in
sub
add
add
inc
add
add
add
sub
add
add
and
fdiv
jge
or
inc
add
add
add
and
add
add
aam
inc
add
add
adc
rcl
inc
add
adc
in
inc
add
pop
inc
add
add
adc
rcl
inc
add
adc
and
inc
add
add
adc
rcl
inc
add
adc
dec
and
push
pop
inc
add
adc
rcl
inc
add
adc
je
inc
add
add
adc
rcl
inc
add
adc
sub
jmp
add
add
add
add
inc
add
add
add
add
(bad)
(bad)
inc
add
add
sub
inc
loopne
add
add
add
xchg
jg
ins
and
add
add
push
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
jge
js
inc
add
add
add
add
mov
add
add
xor
cwde
sub
add
add
inc
add
add
add
add
add
add
and
add
xor
mov
add
add
or
cmp
add
fsubr
inc
add
add
dec
and
jge
test
inc
add
add
inc
add
add
add
mov
add
add
xor
mov
inc
add
add
add
or
inc
add
add
sub
pop
add
add
and
jge
mov
add
add
adc
dec
add
add
add
add
inc
add
xor
shr
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
xor
inc
sub
(bad)
(bad)
(bad)
call
inc
add
add
add
add
and
retf
add
adc
(bad)
adc
pushf
and
hlt
and
retf
add
adc
(bad)
adc
les
inc
add
and
retf
add
adc
(bad)
adc
in
and
hlt
and
retf
add
adc
(bad)
adc
adc
inc
add
and
retf
add
adc
(bad)
adc
cmp
inc
add
and
retf
add
adc
(bad)
adc
fs
add
and
retf
add
adc
(bad)
adc
adc
inc
add
add
add
dec
ins
add
add
add
add
add
xchg
inc
add
(bad)
(bad)
inc
add
add
out
cmc
push
cli
inc
dec
mov
xchg
or
add
add
add
add
inc
add
sub
or
add
add
add
add
add
add
add
add
(bad)
(bad)
call
inc
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
jmp
sub
mov
inc
add
add
add
add
add
add
sbb
add
(bad)
(bad)
call
inc
add
add
mov
inc
add
add
add
and
(bad)
(bad)
(bad)
dec
sub
enter
add
add
movs
sub
(bad)
inc
add
add
add
inc
add
(bad)
(bad)
jmp
add
add
inc
add
add
add
sub
or
add
add
add
(bad)
inc
add
add
add
add
mov
inc
add
(bad)
(bad)
call
add
add
add
add
add
add
sub
sub
add
add
add
(bad)
inc
add
add
add
add
adc
inc
add
sub
adc
inc
add
sub
outs
gs
ins
gs
gs
add
jb
ins
jns
popa
fs
bound
je
jae
add
popa
outs
add
add
bound
popa
je
jb
ins
xor
inc
gs
gs
add
outs
jb
imul
push
mov
jl
dec
pushf
mov
or
int
fld
retf
test
les
xchg
sti
(bad)
xchg
retf
les
scas
dec
aad
loopne
cmp
sub
(bad)
dec
mov
pusha
inc
ret
jge
ins
cmp
xor
or
stos
add
xchg
inc
outs
jb
add
add
cs
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
dec
inc
push
sub
ins
ins
popa
jne
push
inc
ss
dec
inc
add
add
add
dec
sub
add
add
push
add
add
add
add
add
inc
add
(bad)
jns
loop
lods
xor
or
stos
add
xchg
popa
data16
outs
add
add
outs
je
add
add
dec
lods
xor
or
stos
add
xchg
bound
popa
imul
add
add
add
dec
lods
xor
or
stos
add
xchg
inc
ins
popa
je
gs
jb
pop
dec
outs
popa
add
add
push
add
dec
lods
xor
or
stos
add
xchg
push
inc
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
bound
gs
fs
ins
xchg
icebp
sub
dec
mov
fmul
mov
test
fld
out
fucomip
iret
adc
xor
inc
adc
retf
les
movs
or
push
add
xor
or
stos
add
xchg
bound
xor
gs
gs
add
ins
fs
xor
add
add
dec
add
shr
dec
test
pop
jp
add
add
mov
es
mov
jae
xchg
mov
je
jp
aas
mov
dec
stos
adc
movs
xchg
sub
inc
add
fdiv
inc
mov
ins
adc
xchg
and
ins
bound
aaa
add
popa
jo
outs
ins
popa
je
add
add
outs
outs
bound
add
arpl
popa
cmp
add
cmc
dec
bound
inc
mov
enter
fidivr
stos
pop
je
push
imul
mov
adc
repnz
sahf
mov
xchg
ficomp
adc
out
ds
dec
mov
fmul
addr16
outs
ins
outs
xor
add
inc
gs
arpl
add
outs
outs
jb
cmp
bound
jae
add
add
jne
je
add
or
pop
add
or
add
add
or
add
adc
ja
jb
je
push
imul
gs
outs
jb
add
add
ins
cs
add
sub
add
add
add
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
popa
outs
addr16
addr16
popa
ins
gs
add
add
ins
cs
add
inc
add
add
adc
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
jo
outs
inc
outs
jne
inc
add
add
jbe
popa
push
je
inc
outs
jo
add
add
ins
add
add
add
add
add
add
add
add
add
imul
xchg
add
add
pop
add
add
add
add
add
and
add
add
add
add
add
xchg
add
add
pop
add
add
add
add
add
pop
cmp
add
add
add
push
add
add
xchg
add
add
push
add
add
add
add
add
pop
add
add
add
imul
xchg
add
add
or
add
add
add
je
add
add
add
add
add
xchg
add
add
inc
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
lods
add
add
add
xchg
add
xchg
add
add
add
add
add
add
add
push
add
add
add
add
add
add
xchg
add
add
cmp
add
add
add
add
pop
add
gs
gs
xor
cs
ins
add
add
push
add
add
outs
fs
outs
imul
add
cs
add
inc
add
add
sbb
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
fs
ins
cs
ins
add
add
jbe
popa
push
popa
jb
jne
add
add
add
cs
add
add
sub
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
jb
imul
inc
add
ins
cs
add
cs
add
add
xor
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
xor
fs
ins
add
sldt
add
outs
jae
inc
ins
imul
add
or
inc
add
das
inc
add
add
inc
call
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
popa
jo
push
popa
jb
ins
gs
jb
add
add
cs
add
inc
add
add
dec
call
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
popa
jae
push
imul
add
add
cs
add
add
pop
call
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
jne
ins
push
jb
je
arpl
adc
inc
add
das
inc
add
add
fs
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
xchg
add
add
sbb
add
add
add
pusha
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
pop
add
add
add
add
mov
add
add
test
add
add
add
outs
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
les
add
add
add
add
add
add
add
add
add
add
add
ja
mov
add
add
add
add
add
xchg
add
add
or
add
add
add
add
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
or
add
add
add
popa
add
add
xchg
add
add
add
add
add
add
add
imul
jae
and
add
sub
add
fadd
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
xor
add
xor
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
cmp
add
and
add
add
add
add
push
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
xchg
add
add
add
add
add
add
inc
add
add
add
dec
add
add
xchg
add
add
add
add
add
add
add
add
pop
add
add
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
push
bound
outs
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
push
je
inc
popa
je
pop
pop
jbe
popa
push
je
inc
ins
jo
pop
pop
jbe
popa
dec
xor
popa
jb
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
dec
xor
jns
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
inc
ins
ins
inc
jne
arpl
outs
inc
popa
ins
ins
add
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
jbe
popa
inc
jb
dec
outs
arpl
add
add
add
add
jo
add
jae
add
js
add
add
add
add
jo
add
jae
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
inc
jb
inc
outs
outs
jae
jb
arpl
add
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jo
add
jbe
popa
push
je
dec
outs
jbe
add
add
sbb
add
add
xchg
add
add
add
add
add
add
add
add
add
add
jbe
popa
push
gs
bound
jb
gs
popa
jb
add
add
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
add
arpl
je
outs
add
add
jno
add
add
push
add
add
jno
outs
add
push
add
bound
jb
je
add
sub
add
ins
add
js
jp
push
push
jns
jp
ins
add
add
add
add
outs
add
imul
add
sbb
add
add
xchg
add
add
add
add
add
add
push
add
add
imul
add
popa
add
bound
ja
jbe
imul
adc
add
push
push
add
data16
add
add
add
add
add
push
add
add
push
add
add
push
add
add
add
add
imul
add
push
add
add
add
add
add
jbe
popa
inc
jo
ins
jo
jns
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
jbe
popa
push
popa
jb
popa
je
dec
xor
pop
or
adc
pop
sbb
lods
push
mov
dec
retf
ins
xchg
icebp
sub
dec
mov
fmul
mov
cdq
iretw
adc
pusha
rcl
and
add
add
pop
add
jb
ins
jns
or
outs
outs
fs
add
add
inc
add
(bad)
(bad)
(bad)
push
inc
sbb
add
push
add
aad
add
inc
add
add
add
add
or
outs
ins
fs
xor
add
or
imul
js
add
pop
push
add
add
inc
daa
add
add
gs
gs
add
push
add
imul
push
inc
add
add
add
add
add
add
jae
add
or
popa
bound
jb
outs
arpl
jae
add
push
and
mov
pop
or
add
inc
sbb
add
add
imul
add
sbb
add
add
gs
add
add
add
or
add
add
add
add
gs
push
add
add
add
add
inc
sbb
add
pop
pop
add
popa
outs
fs
add
add
add
pop
retf
or
add
add
int3
xor
pop
adc
sahf
mov
xchg
ficomp
inc
shl
bound
inc
mov
enter
fidivr
cmp
xor
or
stos
add
xchg
add
add
add
add
outs
add
add
outs
jb
gs
outs
gs
add
add
inc
add
(bad)
(bad)
(bad)
push
(bad)
add
add
jg
add
inc
add
add
add
add
add
addr16
add
ins
outs
ins
popa
je
jae
add
or
add
adc
add
add
add
add
pop
add
outs
outs
jb
cmp
add
or
inc
fs
jae
bound
add
or
rol
or
add
inc
sbb
add
add
add
imul
add
add
add
inc
sub
add
add
jne
je
add
or
popa
arpl
imul
jb
add
push
or
daa
add
add
add
inc
add
add
add
outs
xor
add
pop
add
imul
add
add
adc
inc
sbb
add
pop
add
jae
add
add
rol
or
add
add
add
cmp
push
add
or
dec
add
or
add
dec
xor
pop
int3
jp
aas
mov
dec
stos
adc
movs
xchg
rcl
test
dec
test
pop
jp
add
xor
or
stos
add
xchg
inc
add
add
add
or
popa
fs
bound
je
jae
or
popa
ins
pushw
jb
gs
gs
add
add
inc
add
(bad)
(bad)
(bad)
push
and
add
popf
mov
add
inc
add
add
add
add
add
ins
xor
add
or
inc
popa
je
popa
jo
jb
add
add
inc
sbb
add
add
outs
popa
cmp
or
repz
popf
pop
out
or
pop
or
add
add
add
add
push
add
bound
aaa
add
push
add
jbe
ins
jne
imul
add
add
push
or
add
add
inc
xor
add
pop
or
popa
jo
outs
ins
popa
je
add
push
add
popa
jb
imul
gs
add
or
cmp
retf
add
inc
sbb
add
add
add
ins
outs
imul
or
add
push
repnz
inc
sbb
add
add
add
ins
gs
gs
or
add
add
add
add
add
add
imul
add
add
push
jbe
mov
dec
xor
add
retf
les
scas
dec
aad
loopne
cmp
ss
mov
jl
dec
pushf
mov
or
int
fnstsw
dec
lods
xor
or
stos
add
xchg
mov
add
add
or
outs
gs
ins
gs
gs
add
popa
arpl
ins
imul
inc
add
(bad)
(bad)
(bad)
push
jmp
add
add
inc
add
add
pop
add
popa
je
gs
add
push
add
ins
je
add
push
add
inc
dec
ficom
add
add
add
add
add
add
add
add
add
add
add
ds
cdq
and
lods
sbb
dec
push
sub
(bad)
int3
jno
and
push
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
xchg
aas
sbb
jns
(bad)
fcmovbe
(bad)
sbb
jnp
xor
stos
mov
xchg
sbb
(bad)
xchg
xchg
pop
movs
mov
dec
mov
jno
mov
in
pusha
push
sbb
mov
cli
in
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
fld
iret
jno
dec
out
pop
fcmove
mov
sti
imul
lea
and
push
dec
cli
in
adc
mov
sub
push
imul
(bad)
loope
adc
sti
jnp
push
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
sbb
mov
and
adc
movs
stc
sub
(bad)
int3
jno
jmp
adc
sti
or
push
jne
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
sbb
lods
stc
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
shl
fcmove
mov
sti
sbb
push
ins
dec
aas
mov
and
adc
mov
sub
fxch
aas
int3
xchg
xchg
shl
fcmove
mov
sti
mov
push
ins
fidivr
mov
and
adc
mov
sub
(bad)
aas
int3
xchg
call
int
or
jnp
push
ins
cmp
mov
shl
in
adc
mov
sub
(bad)
aas
int3
mov
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
push
aaa
stos
in
inc
cmp
fldcw
(bad)
xchg
sbb
ret
xlat
(bad)
ja
fldcw
int3
cmp
(bad)
lock
ins
xchg
aas
add
pop
ret
shr
cwde
push
cmps
sbb
or
lds
jl
mov
mov
cmps
imul
test
aam
lahf
xchg
test
push
pop
push
stos
xchg
jnp
jecxz
test
push
js
push
shl
xor
push
hlt
push
int
push
mov
lods
cmp
stos
aad
stos
(bad)
in
and
mov
add
xor
cdq
icebp
cli
xchg
mov
out
movs
out
call
xchg
sub
xchg
rol
adc
in
mov
inc
sar
mov
xor
shr
in
push
cli
or
aad
stc
sti
mov
add
sub
shl
test
dec
inc
and
xchg
push
daa
test
repnz
arpl
fadd
cmc
loop
inc
pushf
out
push
sbb
inc
add
in
inc
xor
push
jo
ds
cmp
hlt
(bad)
jmp
fwait
jo
mov
lods
(bad)
mov
bnd
out
pop
xchg
and
sbb
test
jmp
push
add
xchg
mov
and
pop
adc
dec
cwde
mov
movs
xlat
dec
(bad)
and
aad
jne
iret
inc
lea
push
sub
mov
mov
movs
imul
xchg
xor
test
ret
adc
mov
mov
(bad)
lea
fcmovnb
push
outs
or
xchg
push
add
push
inc
adc
pop
pop
mov
xlat
push
(bad)
inc
es
or
ins
cmp
jb
mov
push
cmps
dec
or
mov
dec
push
pushf
je
cmp
jmp
mov
push
pop
cmp
adc
xchg
lds
rol
or
mov
stos
cwde
jno
jo
mov
fnstsw
sub
dec
lods
jnp
inc
ret
fwait
lea
ror
mov
aaa
out
dec
js
lahf
mov
hlt
fcmovnb
xchg
imul
sub
das
xchg
and
sbb
fcomip
pop
pop
cmc
inc
mov
xor
sub
sub
aaa
test
sbb
movs
loope
fwait
lods
push
pusha
stc
popw
adc
fiadd
(bad)
nop
pop
inc
xchg
jo
jb
jo
pop
fidiv
fs
popa
retf
(bad)
scas
test
add
fwait
or
dec
movs
repz
sub
mov
inc
cmp
adc
push
repnz
dec
adc
xchg
sbb
enter
pop
adc
test
daa
test
repnz
push
sbb
repz
cmp
mov
cmc
mov
data16
jle
jne
mov
jnp
cmp
adc
adc
idiv
shl
dec
sub
dec
push
sbb
neg
dec
inc
rol
sub
mov
mov
inc
pop
jb
sub
pop
or
mov
jne
dec
mov
jl
loope
stos
pmullw
sub
cmp
pop
cmps
out
js
test
add
ret
inc
fistp
rcr
xchg
leave
push
add
call
adc
push
movs
idiv
ja
sti
dec
jae
and
adc
cs
stos
cmp
cmp
fdivr
sub
dec
sbb
fcom
sub
or
jle
push
jnp
push
and
mov
adc
add
xlat
fbstp
lds
xor
pop
sbb
bswap
mov
jne
out
cs
dec
loopne
fbld
pusha
xor
aaa
dec
inc
xchg
mov
call
cmp
nop
sub
jp
mov
xor
add
mov
add
lea
imul
addr16
(bad)
xchg
cmps
push
pop
add
popa
fmul
repnz
ror
push
pop
mov
hlt
cld
adc
xlat
cs
shr
mov
mov
mov
sub
sbb
mov
mov
pop
sub
jbe
push
out
and
push
repnz
pop
add
dec
dec
pop
dec
hlt
mov
dec
test
pop
ficomp
dec
push
push
clc
cmps
cmps
test
imul
mov
xchg
cmp
jl
pop
mov
shl
mov
and
adc
mov
stc
popa
push
or
mov
sbb
mov
jp
test
pop
and
dec
add
xchg
cmp
dec
push
mov
adc
pop
clc
sub
jp
mov
iret
hlt
pop
out
fcmovne
je
cmp
js
test
xor
and
test
arpl
test
call
xor
pop
sub
imul
ror
clc
mov
aad
fwait
sub
mov
add
std
inc
in
add
out
xor
iret
mov
lds
push
or
jle
or
adc
cdq
mov
jb
aad
jne
cmp
div
or
stc
fisttp
lahf
popa
adc
mov
xor
pop
iret
std
cld
popf
xchg
sbb
outs
lahf
push
xchg
jae
jnp
pop
aam
push
or
add
cmps
mov
pop
popf
leave
aam
push
stos
mov
push
mov
in
inc
push
sar
cmp
pop
xor
sbb
shr
mov
aam
sub
in
lods
inc
xchg
fsubr
xchg
pop
sbb
add
fldenv
aam
or
int3
push
out
fst
sbb
and
ficom
retf
leave
test
xlat
(bad)
lock
mov
dec
(bad)
mov
mov
hlt
xor
out
add
in
test
or
jnp
les
(bad)
std
mov
shl
mov
es
movs
call
aam
adc
out
scas
xchg
sub
adc
inc
jo
mov
arpl
jbe
adc
jp
rcl
inc
sub
adc
cmc
xchg
stos
push
xlat
stos
push
adc
push
mov
(bad)
loop
retf
jns
rcl
neg
(bad)
scas
ret
movs
push
icebp
jge
mov
sub
imul
hlt
les
inc
outs
xor
xor
in
aam
cmp
cdq
sbb
and
loop
sbb
inc
push
pop
cmp
out
cmp
clc
mov
ss
mov
jno
mov
xor
mov
cmp
out
lahf
movs
sub
mov
xor
or
aad
sar
popa
fs
add
ins
cmp
cmp
mov
xchg
lods
mov
mov
sahf
pop
adc
aas
push
ins
in
imul
pop
sar
inc
aaa
out
push
in
jl
push
mov
jae
sub
iret
mov
(bad)
jnp
fnstenv
test
cld
loope
fucomp
mov
iret
sbb
mov
mov
bound
jbe
mov
mov
in
add
fiadd
lahf
add
xchg
sub
fdivr
bound
mov
push
mov
sub
sbb
jge
std
push
jno
mov
test
stc
loope
pop
dec
rsm
int3
mov
arpl
inc
pop
call
jae
loop
mov
fsub
lahf
mov
mov
shl
cdq
mov
aam
out
repz
int
daa
adc
cmp
sub
and
loope
clc
sub
inc
fwait
lock
sbb
xchg
sbb
sub
push
addr16
stc
neg
xor
xchg
push
cld
aad
not
xchg
sbb
mov
pusha
and
aam
inc
in
sbb
jle
sub
adc
mov
rcl
and
fcomip
mov
xor
sub
nop
mov
inc
jnp
gs
adc
retf
daa
xchg
rcl
add
jmp
or
arpl
xchg
fldenv
mov
(bad)
sar
push
arpl
pop
xchg
mov
add
pop
addr16
mov
ret
fiadd
outs
mov
cmps
arpl
push
jns
out
or
sar
lds
test
pop
adc
iret
das
xchg
sbb
sub
mov
mov
call
or
cmp
push
cmp
cmp
sub
(bad)
jle
jl
xchg
xor
int
sahf
dec
lods
add
retf
lds
arpl
shl
enter
sub
add
inc
cmp
mov
push
mov
jge
inc
mov
xchg
mov
cs
popa
mov
sub
aam
imul
inc
mov
shl
ins
lock
lea
pop
stc
xchg
or
ins
lods
mov
dec
sbb
jg
jo
adc
and
outs
and
adc
inc
arpl
push
fild
enter
pop
shr
hlt
mov
js
or
push
pop
mov
xchg
cmp
repnz
push
push
cmps
and
jae
(bad)
fst
push
mov
std
(bad)
hlt
ss
adc
fcom
out
ret
mov
mov
shl
dec
mov
jmp
xor
fist
cwde
ret
pop
mov
pop
(bad)
mov
retf
cmps
dec
out
sbb
push
push
sbb
sti
pop
ja
cmp
jo
imul
add
nop
fisttp
mov
mov
cdq
test
push
and
xor
mov
pop
dec
jp
fild
loop
push
popa
fld
fistp
jmp
out
ss
xor
aam
psubusw
scas
enter
scas
leave
std
push
cs
dec
mov
xchg
fsubr
inc
int
jo
cli
adc
inc
fisub
pop
sub
fld
push
mov
inc
xor
mov
push
mov
push
pop
jae
xor
xchg
mul
jle
cmps
in
push
adc
mov
mov
shr
inc
adc
je
push
fnstsw
ss
dec
pop
scas
pop
fmulp
cmp
adc
or
in
ds
adc
loop
(bad)
push
or
jle
scas
and
jns
push
mov
fbld
cmp
(bad)
out
shl
sub
push
pop
push
mul
stos
ja
lock
adc
xlat
mov
or
xor
cmp
div
pop
inc
inc
loop
das
mov
cs
adc
pop
mov
mov
mov
mov
scas
cmp
cmp
xchg
add
fdiv
ds
cmc
xlat
xchg
mov
mov
xor
test
pop
imul
mov
adc
xor
mov
pop
outs
cmc
mov
fwait
adc
mov
jle
loop
adc
jecxz
into
xchg
adc
dec
daa
int3
mov
movs
(bad)
pop
(bad)
call
les
les
adc
leave
std
dec
enter
pop
lods
push
mov
push
xchg
add
inc
pop
pop
mov
sub
hlt
fnstsw
mov
xor
(bad)
jo
or
cmp
sbb
jns
mov
mov
fsub
add
mov
(bad)
out
push
xor
loop
aam
leave
push
and
les
jmp
arpl
pusha
cmps
js
bound
psubsw
aad
cdq
pop
lock
sbb
popf
(bad)
retf
retf
mov
add
push
push
imul
jb
ss
(bad)
sti
leave
sar
je
inc
dec
pop
mov
and
pusha
push
cmps
adc
xlat
push
cmp
inc
shr
daa
jbe
or
and
adc
fisttp
aam
jcxz
es
lahf
scas
xchg
shl
xlat
(bad)
ds
cmc
xchg
xchg
jae
xchg
jle
hlt
inc
sti
adc
mov
pop
adc
mov
push
cs
arpl
ret
jmp
mov
mov
push
cmp
xchg
in
adc
int
(bad)
mul
out
rcr
dec
jne
sub
movs
fclex
or
or
daa
icebp
add
vandnps
fucomip
mov
movs
and
(bad)
fisttp
cmp
adc
test
in
or
in
int
rol
dec
daa
es
pop
leave
adc
out
ins
push
jno
sub
dec
dec
fistp
push
push
xchg
aad
gs
or
ret
(bad)
dec
mov
aad
ror
retf
in
sub
scas
retf
and
pop
inc
popa
je
adc
and
xchg
aam
pop
loop
inc
mov
into
out
push
fwait
cmc
jns
dec
adc
cmc
aad
and
mov
fisttp
shl
pop
aas
bound
mov
mov
les
ins
jmp
call
in
imul
cdq
repnz
jl
dec
sbb
aaa
fidiv
inc
jp
imul
iret
(bad)
inc
(bad)
lea
js
xchg
mov
std
or
xchg
sbb
les
jl
ficom
xchg
mov
mov
and
iret
xchg
fisttp
push
and
cmc
xchg
mov
(bad)
iret
out
test
pop
ret
jle
mov
cs
mov
jne
mov
or
mov
push
cs
imul
sti
sbb
mov
(bad)
pop
dec
ins
sub
jle
add
sub
shl
add
add
dec
gs
fnstcw
inc
and
mov
into
sbb
xchg
add
imul
push
xchg
test
jae
cli
push
jns
xchg
xor
dec
movs
pop
mov
add
ins
or
jl
inc
push
lea
pushf
stos
mov
xor
push
xor
lods
loop
dec
xlat
push
inc
push
pop
dec
cmp
imul
lock
popf
pop
push
sub
or
mov
fisubr
pop
dec
push
div
call
push
mov
push
mov
call
ret
mul
push
xor
in
and
in
out
call
movs
fstp
pop
stos
pop
adc
pop
dec
xor
push
mov
jp
loopne
clc
and
dec
iret
pop
lea
xor
(bad)
jge
leave
mov
pop
cld
push
das
adc
mov
sti
or
xchg
sub
pop
pop
cwde
dec
add
jg
xchg
or
(bad)
(bad)
mov
pop
push
fnstsw
and
sub
ror
push
pop
inc
stc
stc
inc
mov
js
scas
shl
add
aaa
cmp
sub
jne
and
cmps
(bad)
sbb
fdivr
inc
(bad)
das
imul
add
stos
or
xchg
test
int
inc
pop
je
pop
pop
push
cli
xor
fidiv
adc
lods
shl
stos
pop
cmp
leave
or
ja
push
jmp
loopne
xchg
shl
xchg
push
ror
xor
popf
pushf
dec
idiv
inc
xchg
adc
(bad)
jmp
mov
(bad)
lahf
dec
sub
xchg
xor
(bad)
aam
inc
div
test
movs
(bad)
sub
adc
push
loope
add
leave
dec
(bad)
daa
cli
aas
push
(bad)
clc
cmps
jle
mov
ror
jle
add
jno
mov
dec
xchg
mov
loope
aam
arpl
lahf
pop
sub
and
scas
stc
add
in
addr16
mov
stos
in
jl
cmp
cmp
lods
fwait
jne
cdq
jo
shr
push
gs
sub
cdq
pop
dec
cmp
add
xor
aaa
dec
sub
sbb
mov
xor
stos
jl
push
or
(bad)
cdq
mov
sub
mov
mov
pop
jmp
scas
mov
dec
out
xchg
mov
rcl
ins
xchg
cwde
adc
adc
mov
inc
cmp
das
jmp
push
sti
std
dec
fst
jl
sub
xchg
sbb
jmp
rcr
lods
repnz
cmovnp
bound
cmp
gs
cmp
and
adc
into
jae
and
js
gs
xchg
cmp
popa
add
push
test
cmp
inc
mov
test
cmp
xlat
fldcw
mov
out
jne
sub
add
sub
mov
dec
in
mov
mov
icebp
cmp
ret
mov
sbb
pop
push
repz
cmp
cmp
sar
adc
aas
loopne
mov
arpl
xchg
in
cli
jg
jo
or
repnz
fistp
loop
inc
mov
dec
and
loopne
pop
and
mov
arpl
les
aaa
aas
sbb
inc
int3
cmp
stos
push
movs
test
add
retf
xchg
aad
or
fisttp
jne
xchg
imul
jno
jae
jmp
mov
sti
adc
outs
std
test
pop
test
and
push
out
mov
jne
test
inc
imul
mov
xchg
fstp
or
or
and
cdq
ins
xor
mov
and
sbb
sub
int3
pop
mov
or
retf
aam
pop
movs
push
test
sbb
cmps
xchg
and
in
pop
mov
jb
cmp
sub
scas
sub
out
jnp
(bad)
pop
mov
movs
xchg
cmc
fild
addr16
in
std
fld
(bad)
cld
pop
imul
mov
jo
cmp
mov
pop
inc
or
mov
jns
or
inc
mov
std
je
sar
ret
shr
movs
aas
jle
mov
scas
stos
jl
xchg
mov
xor
(bad)
mov
adc
cmps
push
push
push
push
(bad)
cmp
test
ret
imul
mov
sar
sbb
sar
rol
jmp
or
and
es
xor
das
js
mov
ret
scas
fiadd
es
mov
inc
out
daa
cmp
mov
(bad)
xor
cmp
push
shr
jo
stos
mov
test
sub
mov
aaa
mov
pop
jae
xchg
push
movs
push
xor
add
loopne
and
add
dec
retf
inc
mov
psubsb
mov
fnstsw
dec
imul
test
int3
jl
rdmsr
push
dec
xchg
and
sub
(bad)
jnp
jl
jg
lds
adc
mov
mov
cmp
loope
pop
fiadd
pusha
fistp
rol
iret
dec
sub
mov
(bad)
fs
scas
and
push
sbb
pop
in
in
fs
fcomp
(bad)
jmpw
jo
push
inc
push
ror
into
call
pop
inc
(bad)
pop
int3
shl
fs
xor
jg
out
sbb
call
jg
adc
cld
bound
pop
jle
lods
aam
(bad)
(bad)
mov
lock
jno
loop
jl
shl
sub
stc
scas
fwait
(bad)
mov
add
mov
xor
out
jmp
sbb
adc
inc
and
cs
jmp
lahf
jl
mov
dec
adc
loope
pop
das
mov
(bad)
out
out
xor
mov
lahf
(bad)
jecxz
imul
jne
addr16
daa
arpl
adc
(bad)
es
mov
jg
leave
lea
js
inc
fs
nop
adc
dec
fcmovnu
inc
jmp
inc
mov
ds
sub
lahf
pop
adc
xchg
pop
rol
add
imul
je
icebp
cwde
scas
fld
or
les
fist
fld
mov
sbb
jl
fild
add
adc
(bad)
daa
fist
adc
pop
sbb
pop
loope
fsubrp
imul
outs
rcr
leave
shr
jle
aas
(bad)
fnstenv
mov
adc
mov
clc
nop
xchg
imul
test
cmps
data16
dec
call
iret
xor
(bad)
outs
repz
adc
fisubr
adc
mov
mov
sbb
outs
(bad)
fist
mov
daa
fstp
ja
daa
out
adc
xor
iret
xchg
pop
inc
popa
ins
stos
int3
pop
hlt
cmp
sbb
pop
out
jecxz
lahf
xchg
add
jle
in
adc
or
(bad)
pop
popa
inc
mov
loope
xchg
scas
and
rcl
cli
mov
out
mov
test
bound
add
xor
cmps
cdq
ss
add
ins
pop
sub
popa
sub
sub
jp
jle
shr
ja
push
xchg
ret
retf
jo
repnz
push
pop
outs
mov
shl
fbstp
lock
xchg
cmp
mov
das
stos
sbb
leave
outs
jae
ja
inc
(bad)
dec
sar
fidiv
fbld
in
xchg
mov
ror
icebp
adc
jb
inc
jae
sar
in
mov
jae
cmp
inc
arpl
xor
(bad)
(bad)
mov
xor
add
jmp
outs
fstp
cmp
inc
iret
push
mov
leave
fcom
mov
loope
in
aam
mov
jns
inc
inc
stos
fisub
repnz
cmp
push
and
adc
mov
xlat
test
fisttp
pop
out
das
jo
xchg
(bad)
or
push
dec
int
mov
mov
cmp
push
jae
pop
adc
push
leave
mov
(bad)
fistp
jg
inc
fimul
xor
and
int
pusha
push
(bad)
sub
pop
in
movs
xlat
lock
or
jecxz
mov
cmp
sbb
mov
sub
ss
mov
or
inc
vpmacswd
or
fsubr
loopne
or
and
cmp
dec
outs
jae
xor
outs
sub
jnp
scas
sbb
ret
mov
sahf
mov
out
fnstenv
test
xchg
scas
stc
push
mov
cmp
clc
and
test
jae
dec
inc
mov
adc
xchg
add
addr16
rol
sar
and
dec
pop
test
popa
nop
icebp
adc
faddp
jno
mov
lds
or
pop
sbb
(bad)
out
mov
outs
mov
cdq
cmp
pop
sub
and
sar
or
adc
mov
cmp
nop
and
add
mov
jg
cmps
es
xor
xlat
sub
dec
push
out
imul
and
inc
fistp
mov
icebp
aaa
xchg
jge
ins
mov
stos
leave
aaa
aad
cmp
shr
push
ins
in
ins
aad
xchg
popa
jl
and
enter
sbb
xchg
push
adc
mov
cwde
adc
pusha
push
jo
push
sub
jnp
add
dec
dec
pop
popa
jmp
fisubr
push
xchg
push
ins
pop
cmc
xlat
dec
mov
outs
stos
call
aas
test
enter
int
mov
cli
mov
shr
(bad)
mov
cmp
leave
out
adc
(bad)
dec
or
inc
mov
fist
add
addr16
jae
push
in
ret
adc
pusha
leave
mov
or
adc
dec
mov
ret
sub
pop
dec
(bad)
mov
in
cs
push
adc
ret
ror
stos
es
cmp
or
mov
jle
jno
mov
enter
xor
mov
popa
(bad)
jl
sbb
and
retf
adc
push
push
sub
pop
imul
mov
lods
xchg
scas
mov
xchg
inc
aas
jl
pusha
call
ficom
fild
test
loopne
imul
mov
ins
sub
clc
mov
mov
pop
call
loop
sbb
cmp
and
mov
inc
arpl
xchg
sbb
cld
jg
jno
jae
push
fstp
cmc
mov
mov
outs
int
dec
mov
mov
adc
test
(bad)
loop
add
cmp
mov
pop
sub
rol
pop
out
push
imul
mov
cdq
pop
into
pusha
mov
jge
call
pop
cmp
mov
inc
inc
ins
mov
fxch
mov
mov
add
mov
cmp
fild
orps
mov
sub
dec
stos
(bad)
cdq
mov
sbb
inc
lea
and
mov
enter
push
int3
call
adc
fistp
mov
movs
xchg
popa
cmp
loopne
outs
retf
cmp
xchg
and
cmp
inc
fisubr
pushf
dec
pop
xchg
mov
push
mov
fwait
popa
mov
cmp
xchg
retf
cld
inc
cmps
imul
cmp
pop
retf
or
sar
fwait
lds
adc
xchg
xchg
sar
mov
(bad)
push
gs
stos
cmp
mov
jno
dec
addr16
lahf
mov
xchg
push
xchg
ins
mov
mov
add
mov
aas
dec
dec
fnstcw
clc
cmp
daa
loope
sbb
push
mov
(bad)
mov
push
adc
mov
jb
jmp
push
les
sub
inc
mov
add
jmp
inc
sub
cwde
xchg
pusha
ss
xchg
adc
sub
pop
rol
add
adc
mov
movs
es
or
xor
adc
inc
in
imul
mov
push
out
sub
xor
xor
adc
mov
or
pop
mov
out
xor
jmp
jb
shl
mov
ror
data16
adc
popf
pop
add
or
inc
cmps
push
repnz
imul
jae
inc
and
jp
aam
(bad)
cmp
js
scas
jle
xor
push
iret
mov
call
xchg
inc
xor
test
push
mov
adc
push
leave
push
lea
out
push
(bad)
(bad)
sbb
pop
scas
leave
adc
cmp
js
adc
mov
ds
ins
mov
sbb
ficom
rol
pop
dec
sub
les
fcomp
mov
add
inc
mov
jo
sbb
push
inc
mov
jno
dec
mov
test
and
fsubr
fidiv
fisttp
or
sar
adc
and
les
sub
cmp
mov
aaa
add
pop
mov
enter
pop
mov
pop
lods
ret
dec
dec
es
cs
jb
scas
mov
out
add
and
xchg
jns
mov
out
cmps
xchg
inc
xor
or
pusha
jle
fisttp
or
sbb
sti
pop
lods
sti
or
mov
sub
mov
mov
push
mov
fild
imul
loope
test
mov
inc
pop
ror
das
mov
mov
imul
fadd
xlat
cmp
dec
sub
pop
in
cli
(bad)
clc
push
call
in
outs
or
xchg
adc
add
test
xchg
lock
lea
movs
mov
cli
mov
push
icebp
(bad)
mov
push
and
int3
out
and
push
or
mov
inc
repz
js
mov
mov
jmp
lds
xor
jbe
sub
mov
push
jae
pop
adc
add
xor
mov
mov
rcl
(bad)
fstp
push
and
add
aad
daa
push
lea
cmp
push
mov
mov
loop
mov
mov
push
mov
dec
mov
add
test
jmp
mov
dec
adc
aaa
fld
ins
setp
add
cli
or
xchg
push
scas
in
(bad)
cmp
cmc
rcr
repnz
fist
cmps
inc
stc
hlt
adc
xchg
cmc
mov
repz
(bad)
not
ficomp
test
int3
iret
lods
and
jge
std
push
retf
je
std
adc
shl
sub
jne
jp
retf
outs
push
data16
jg
push
adc
mov
sbb
fcomp
repnz
ds
cli
(bad)
mov
adc
aam
ja
xchg
sbb
in
sbb
inc
or
xor
cmps
mov
push
shr
add
loope
ins
pushf
or
xlat
or
xchg
xor
mov
mov
add
jl
loopne
pop
fdiv
retf
jae
xor
xor
stos
in
mov
sub
scas
xchg
movs
fisubr
lods
adc
mov
js
fistp
mov
ret
jp
or
inc
js
aad
xchg
cmps
jnp
idiv
fadd
add
popf
sbb
mov
mov
mov
jle
cld
pop
add
mov
ret
xchg
cli
jp
inc
mov
aad
mov
ficomp
push
test
pop
add
mov
mov
cwde
inc
clc
xchg
add
mov
fistp
repnz
dec
sbb
and
outs
jnp
jnp
pop
aas
xor
and
shr
jge
cli
addr16
xchg
add
aas
or
add
mov
in
les
dec
retf
(bad)
push
stos
retf
xor
fcom
push
sbb
add
sar
mov
cwde
pop
dec
std
mov
cmps
aaa
sahf
push
push
(bad)
scas
mov
movs
movs
pop
dec
pop
inc
std
test
fisub
cwde
cmps
lea
stos
mov
xor
xor
or
add
test
cmp
add
xchg
cmp
mov
int3
sbb
pop
(bad)
mov
stc
mov
sbb
push
mov
cmp
shl
xchg
sub
gs
fs
pop
jnp
xor
add
ds
push
xchg
mov
inc
jmp
dec
push
clc
pop
xchg
xchg
loop
cmps
and
jne
jae
int
fbld
cwde
sub
in
aas
pop
jle
fisub
and
data16
repnz
sbb
and
arpl
pop
int
ret
sub
dec
sub
test
xchg
add
sbb
in
cmp
call
add
mov
movs
jg
call
add
fwait
shl
in
or
mul
push
pop
daa
cld
stc
(bad)
call
xor
sbb
inc
add
mov
lahf
aam
xchg
and
push
fild
(bad)
pop
dec
jecxz
mov
sbb
sub
fcom
xlat
cmp
loopne
lea
sbb
mov
ins
inc
jp
cmp
mov
jbe
or
cmp
pushf
mov
push
or
mov
push
iret
mov
not
jae
and
mov
or
xor
mov
mov
push
lods
and
pop
jl
pop
sub
sbb
jp
inc
movs
fbstp
pop
stos
mov
mov
cli
sbb
mov
lods
lahf
jp
loopne
mov
bound
cdq
push
mov
retf
(bad)
mov
xchg
mov
repz
and
jecxz
inc
enter
cmp
mov
ja
shr
xor
in
cmp
loop
dec
daa
movs
stc
mov
pusha
cmp
sbb
jo
pop
push
xchg
or
jne
cli
mov
adc
push
pop
mov
ret
hlt
jmp
retf
clc
dec
imul
movs
rcr
and
jmp
popa
dec
adc
add
pop
fld
ds
pushf
xor
pop
icebp
dec
call
lock
pop
aam
imul
xchg
aam
mov
sbb
inc
ja
adc
loopne
adc
out
clc
cmps
or
or
fistp
int3
mov
(bad)
popa
mov
stos
inc
jns
add
mov
cmp
dec
retf
cmps
sar
aas
icebp
jmp
push
adc
pop
xchg
movs
mul
sar
sar
xor
scas
cmps
gs
mov
pop
jno
mov
jmp
dec
sub
lds
mov
inc
call
sbb
into
ret
mov
sub
xchg
enter
xor
idiv
cmp
xor
imul
lods
leave
mov
ror
dec
pushf
int
cmps
stos
jae
fdivr
in
mov
inc
push
scas
inc
push
mov
inc
inc
push
mov
jnp
pushf
adc
mov
lahf
(bad)
retf
adc
inc
xlat
pop
jbe
sub
dec
imul
sbb
lods
sbb
mov
test
stc
mov
or
or
out
rol
fpatan
cli
and
dec
cwde
out
pop
lahf
xchg
outs
shl
mov
leave
test
sbb
xchg
inc
or
cmp
imul
shl
jg
and
mov
dec
idiv
dec
pop
in
je
ror
and
ins
daa
xor
mov
jae
xchg
xor
dec
push
cld
sbb
call
fbstp
push
push
mov
clc
scas
mov
push
ficom
cld
adc
add
setle
push
mov
jmp
or
outs
jle
pop
scas
add
mov
test
cld
cmps
add
(bad)
aas
out
pop
adc
fmul
push
test
xchg
imul
(bad)
shl
in
pop
ror
fmul
xchg
cmps
dec
jns
dec
je
cmc
gs
pop
mov
cmc
add
mov
pop
add
xchg
and
loopne
cmp
addr16
sbb
mov
adc
loopne
pusha
daa
(bad)
ins
add
push
or
adc
mov
sbb
idiv
add
pop
fcmovnu
adc
mov
jbe
push
or
inc
push
ds
test
int
add
das
xchg
pop
add
fyl2xp1
cmp
cmp
shr
fild
xor
push
and
xchg
mov
outs
std
or
push
sub
pop
popa
cld
jle
jo
(bad)
js
mov
push
xchg
sub
sub
mov
aad
add
cmc
ds
dec
push
out
jnp
or
push
pushf
and
sub
adc
outs
(bad)
mov
retf
je
mov
sub
clc
mov
inc
sbb
lahf
push
outs
sub
and
loop
hlt
int
(bad)
loopne
mov
call
jge
test
fild
retf
lods
aas
gs
in
xor
mov
es
jbe
sbb
ss
inc
cmp
or
mov
loope
ret
xchg
lea
inc
lock
(bad)
div
push
scas
push
or
into
dec
inc
daa
daa
cwde
dec
push
(bad)
out
pop
in
mov
mov
movntq
fucomip
adc
and
cwde
arpl
outs
push
nop
or
and
loope
and
movs
das
adc
lahf
lahf
(bad)
xor
or
xlat
jmp
movs
cwde
(bad)
in
xchg
xor
xchg
(bad)
jl
adc
or
(bad)
jnp
inc
jb
fst
cmp
rcr
jmp
xor
dec
inc
mov
mov
mov
int3
ret
mov
fiadd
ret
push
test
ret
stos
scas
xchg
fcomp
mov
sbb
outs
les
out
push
out
adc
out
pop
xor
xchg
mov
cdq
fld
and
fiadd
adc
mov
pop
sar
retf
jmp
scas
mov
inc
push
test
(bad)
dec
popf
outs
xor
enter
jnp
inc
gs
push
fwait
imul
stos
mov
inc
mov
repnz
xor
out
loopne
pop
leave
lahf
in
outs
(bad)
das
dec
push
fistp
sbb
pop
push
neg
dec
mov
femms
bound
and
out
mov
adc
cmp
daa
fsubr
mov
mov
or
in
xor
mov
div
cs
dec
add
dec
and
mul
mov
dec
inc
adc
shl
mov
cmc
movs
xchg
enter
mov
mov
jmp
call
or
and
adc
jns
cli
pop
jmp
push
jp
xor
int3
mov
sbb
enter
cmc
fisttp
pop
jnp
(bad)
ja
cmc
push
mov
out
lock
jnp
and
pop
mov
adc
int3
dec
xor
xor
cmps
add
nop
xor
jae
mov
aam
pop
jge
stos
inc
xchg
into
dec
dec
mov
test
cmps
leave
stc
xchg
xchg
popa
xor
mov
imul
cmp
add
jns
ins
mov
add
mov
test
mov
or
repnz
out
bound
push
retf
adc
aas
call
dec
dec
cmc
(bad)
arpl
push
sbb
or
adc
ss
punpckldq
adc
stos
mov
sbb
or
jmp
test
pop
add
(bad)
(bad)
fisttp
call
ins
dec
aam
xor
fist
pop
call
sahf
xor
cmp
and
sar
push
xor
shl
or
inc
pop
fsubr
shr
jnp
enter
jae
retf
push
es
adc
scas
xlat
dec
(bad)
push
or
stos
inc
aaa
mov
inc
out
daa
mov
cld
xor
mov
loop
or
push
aaa
inc
jne
int
stc
cs
outs
jbe
aam
inc
fimul
xchg
mov
push
push
int
mov
xchg
xor
sbb
sub
outs
inc
cmp
movs
mov
xchg
jno
mov
mov
cmp
push
int3
xchg
daa
mov
sbb
pop
movs
ficomp
ja
ret
adc
aam
cmp
mov
mov
mov
inc
es
mov
mov
sub
inc
int
aad
pop
add
mov
jne
movs
inc
jle
xlat
mov
je
shl
das
pop
ss
sub
xchg
aas
loopne
push
pop
clc
mov
jg
xchg
nop
daa
mov
stc
jb
loopne
xor
rcl
or
fidiv
(bad)
fild
xlat
sub
xchg
jmp
or
test
int
xchg
pop
stos
std
inc
or
mov
inc
mov
inc
xchg
sub
push
pop
fisub
push
sahf
jns
out
lock
retf
add
mov
in
lds
rcr
and
mov
retf
fisttp
push
nop
scas
push
push
cmc
gs
(bad)
aaa
jge
add
fidivr
fadd
pop
add
add
mov
xor
outs
mov
sub
adc
(bad)
and
dec
adc
mov
stos
jecxz
loopne
cwde
enter
adc
mov
or
jae
loop
test
jl
sub
mov
pop
jg
and
jno
push
out
ror
cmps
pop
xchg
inc
xlat
pop
mov
sub
mov
cli
cmp
sub
imul
mov
ds
ror
call
movs
or
mov
inc
pop
dec
or
mov
push
in
ret
xor
mov
mov
mov
xchg
scas
popa
das
xor
imul
inc
popa
sub
ds
clc
push
xlat
inc
outs
xlat
jno
test
pop
scas
pop
scas
inc
push
mov
jle
stos
sbb
ror
and
mov
aam
inc
mov
inc
jbe
sbb
mov
mov
hlt
mul
std
push
mov
sub
or
pushf
mov
bound
retf
(bad)
adc
or
sbb
cmp
push
inc
jmp
shl
mov
fimul
dec
test
loope
xor
xor
inc
in
xchg
dec
jmp
xchg
das
ss
cmp
xchg
inc
aam
push
mov
fmul
aad
cdq
xchg
ins
mov
pop
push
sbb
repz
stos
fnstenv
clc
mov
dec
call
sbb
scas
mov
cmc
sub
nop
movs
cwde
scas
and
dec
dec
arpl
shl
xor
stc
or
sub
mov
out
mov
sub
and
inc
stc
push
inc
adc
test
aas
xchg
aas
fisttp
adc
sbb
mov
out
daa
test
push
addr16
(bad)
outs
mov
mov
hlt
jecxz
sbb
push
icebp
das
ror
sbb
cmp
stc
dec
mov
test
mov
std
cmp
ret
aaa
out
mov
add
and
movs
aam
add
aad
xor
test
xchg
stc
lea
arpl
cmp
inc
push
add
dec
fsub
add
push
xchg
jne
ret
mov
pusha
std
(bad)
xchg
test
arpl
js
imul
jg
lahf
es
(bad)
mov
(bad)
lock
daa
mov
aam
adc
fcmovne
ja
xor
dec
add
lds
jb
jmp
push
bound
mov
mov
cmp
cmp
mov
xchg
gs
sub
dec
sub
mov
or
dec
mov
push
fs
mov
push
push
ror
out
movs
or
xor
cmp
mov
sub
arpl
sub
iret
ret
mov
or
xchg
mov
ins
cmp
push
stos
mov
in
iret
(bad)
mov
aas
add
pop
mov
aam
jmp
outs
std
jo
test
push
mov
cmp
pop
or
pop
sbb
mov
inc
ror
mov
adc
nop
out
das
jns
std
pop
sbb
sti
dec
call
ss
ins
shl
push
push
jmp
sub
adc
or
mov
dec
and
pop
jecxz
std
cmp
repnz
imul
(bad)
loope
scas
or
bound
cmp
aad
fwait
and
dec
cli
pop
inc
dec
mov
imul
jp
xlat
(bad)
push
push
push
jmp
lahf
xor
jnp
and
jmp
repz
push
ja
pop
or
in
or
pop
cmps
(bad)
mov
xchg
and
fsub
mov
repnz
mov
(bad)
pop
xchg
cmp
mov
repnz
stos
stos
or
adc
inc
add
sbb
add
pop
and
sahf
add
push
sub
cmp
mov
loop
or
mov
scas
out
dec
sub
jecxz
mov
adc
cmps
cli
test
push
and
inc
jo
mov
ds
call
dec
out
mov
sahf
xor
scas
in
cmps
push
mov
aas
outs
jl
xor
loopne
adc
out
mov
sbb
lahf
(bad)
push
and
inc
mov
add
or
xchg
call
jae
in
pop
fstp
sub
jecxz
popaw
jns
in
(bad)
loopne
leave
mov
js
out
cmp
pop
dec
fidivr
sub
mov
mov
test
or
mov
mov
xchg
(bad)
addr16
fst
jp
mov
adc
clc
sbb
xor
pop
sar
sub
fist
cmp
mov
or
mov
mov
pop
retf
vmptrst
ja
shl
mov
xor
dec
mov
cmp
push
jl
fist
inc
pop
das
sbb
cmp
in
aad
or
mov
sahf
pop
ret
adc
loop
dec
mov
or
and
adc
pop
jbe
sub
(bad)
jg
cmp
repz
or
call
sbb
push
jnp
icebp
adc
ret
push
push
xchg
push
mov
loope
fcomp
ds
push
inc
push
push
push
jp
in
xchg
xchg
xchg
or
cmp
dec
mov
dec
jle
mov
adc
pushf
sti
in
(bad)
std
pop
loop
pop
inc
sbb
data16
cmc
mov
in
xor
popa
stos
dec
mov
sbb
dec
sbb
icebp
cmp
pop
jb
stc
leave
jno
shr
outs
xchg
pusha
bound
xor
out
jae
jno
push
ret
pop
das
push
mov
movs
cwde
lock
push
popa
(bad)
popa
push
cwde
push
dec
xchg
fs
popf
aam
inc
repz
out
push
shl
and
jbe
mov
add
add
lods
adc
out
aam
and
mov
cs
sub
inc
adc
(bad)
ret
stos
(bad)
out
std
jns
bound
mov
scas
(bad)
and
sahf
pop
jg
or
or
ret
das
mov
mov
add
movs
call
outs
xchg
mov
or
(bad)
cmp
(bad)
cdq
movs
mov
mov
sub
ret
inc
fnsave
add
sub
and
xlat
js
cmp
repz
scas
sub
ss
inc
test
mov
xchg
enter
and
sub
mov
ja
iret
adc
fwait
pop
dec
(bad)
mov
fwait
mov
jmp
sbb
shr
mov
lds
retf
fstp
mov
lods
lods
pop
cmps
bound
gs
mov
out
adc
retf
xchg
scas
lock
call
mov
jmp
lods
fwait
leave
push
addr16
mov
push
xchg
sbb
xlat
fwait
push
popa
sub
xor
mov
jno
test
adc
jb
ret
es
outs
into
sub
xor
add
arpl
mov
test
(bad)
mov
push
inc
dec
fist
cld
jecxz
lahf
xchg
call
cmps
fs
add
push
pop
enter
cmp
div
mov
popa
hlt
add
push
and
cmp
push
in
cwde
sti
icebp
or
fucomip
add
cmp
fneni(8087
mov
and
lods
outs
(bad)
aam
test
sbb
mov
mov
and
test
movs
repnz
and
pop
hlt
bound
(bad)
sar
shl
add
lods
sub
or
icebp
jmp
push
jns
cmp
lds
xchg
mov
outs
loope
push
stc
push
out
imul
and
sub
hlt
xchg
mov
mov
xor
add
mov
cmps
fs
xor
dec
and
psadbw
add
ss
xchg
inc
rcr
scas
cld
mov
inc
(bad)
inc
push
xor
pop
push
push
nop
xchg
js
into
dec
loopne
ins
out
pop
(bad)
mov
mov
push
jb
or
pop
adc
mov
pop
lahf
movs
mov
adc
fisttp
retf
or
jae
push
jno
outs
aaa
add
pop
loope
hlt
mov
xchg
cmp
ins
stos
or
xchg
jbe
enter
add
test
loope
push
mov
inc
(bad)
out
jl
add
dec
xor
sbb
iret
cs
icebp
inc
jl
sub
shr
xchg
mov
mov
pop
push
or
pop
(bad)
mov
mov
xor
mov
jp
mov
xor
aam
sar
fadd
mov
movs
ins
in
std
test
sbb
dec
dec
sub
jp
in
repz
es
retf
repz
or
or
das
daa
pop
xchg
add
inc
rol
sbb
popa
shr
popa
or
shl
addr16
cmp
daa
popa
call
mov
mov
into
(bad)
mov
popa
mov
ja
sbb
lock
fmul
cs
es
xor
pusha
mov
clc
or
stc
stos
cmp
lea
push
retf
jb
add
lea
mov
jmp
es
jmp
sar
sti
dec
pop
ret
daa
je
stos
dec
sbb
imul
pop
jno
movs
cld
lds
lods
pusha
retf
leave
push
mov
adc
ret
jns
jp
ins
cmp
pop
pop
push
cmp
lds
add
push
sbb
pop
xchg
sbb
push
shl
xor
call
adc
adc
mov
pop
repnz
in
xchg
mov
sbb
sub
or
cmp
jle
mov
jg
jae
lds
test
pop
jmp
vpacksswb
ss
pop
test
sub
sbb
xchg
xlat
fld
test
aaa
sub
mov
sub
jbe
adc
adc
lock
(bad)
lahf
fst
push
add
out
loop
inc
bnd
ret
shr
mov
mov
dec
dec
xlat
push
repz
call
adc
int3
lods
pusha
out
xlat
mov
sbb
(bad)
jne
in
adc
clc
shr
or
mov
ins
popf
pushf
into
xchg
pop
xchg
and
(bad)
pop
pop
jge
aad
xor
mov
fwait
cmp
xor
mov
sbb
inc
mov
mov
mov
push
cmp
fsub
add
mov
aas
mov
and
frstor
mov
enter
fisttp
cli
pop
jns
(bad)
jge
mov
movs
mov
sbb
aam
sar
dec
imul
popf
call
add
cdq
mov
(bad)
jmp
push
imul
in
and
fcmovbe
int3
push
rcr
in
inc
lods
mov
stos
mov
dec
int3
iret
ds
mov
push
dec
int3
sbb
pop
stc
enter
dec
iret
or
pop
xchg
rcl
xor
mov
cdq
pop
(bad)
pusha
sbb
adc
push
ins
dec
es
int
pusha
test
test
push
into
mov
jae
push
push
scas
neg
mov
outs
mov
enter
pop
dec
xchg
cmps
cmps
les
adc
pop
mov
cmp
rcr
dec
int3
xor
jp
out
mov
std
ja
pop
jo
imul
xchg
xchg
sbb
mov
rol
mov
stos
mov
and
inc
push
popf
or
push
or
repz
out
sbb
std
and
sub
cli
int
mov
stc
push
push
sbb
jne
sahf
push
sub
mov
sub
fwait
jge
mov
popf
sbb
push
retf
or
sub
repz
ja
lods
push
outs
add
bound
pop
cmps
lods
call
test
ret
push
jg
push
stos
pop
pop
or
shl
pop
and
test
adc
push
retf
jg
fdiv
cli
dec
out
dec
and
sti
cmps
mov
jl
dec
sub
jmp
and
jle
les
jnp
mov
mov
and
xchg
jae
sahf
sbb
int
fistp
mov
jns
cmp
dec
xchg
jae
push
push
dec
(bad)
ds
dec
xor
gs
rol
xor
lods
pop
cdq
mov
or
adc
bound
(bad)
jl
je
scas
push
mov
jo
and
push
in
inc
je
xchg
mov
mov
jge
and
and
xchg
push
jg
add
push
xchg
ss
ss
xor
jg
or
repz
xchg
push
shr
rol
cld
xchg
add
out
mov
add
adc
jae
mov
sbb
call
outs
movs
ss
loope
and
mov
add
push
nop
sub
retf
dec
push
push
lahf
xchg
loope
ficom
outs
xor
sbb
rcr
cmp
pop
adc
les
push
push
loop
xchg
test
mul
and
add
mov
mov
lahf
call
and
dec
bound
or
mov
jne
inc
in
mov
xor
mov
sar
retf
lods
pop
mov
inc
ret
lahf
cwd
cmp
fdivr
adc
stc
fsubr
mov
or
repnz
sub
cmp
push
ja
sbb
mov
lods
xchg
dec
dec
das
rcl
fwait
sbb
jecxz
adc
jle
aad
cmps
test
(bad)
sub
jge
and
shl
dec
ins
pop
(bad)
xchg
pop
sub
and
mov
les
pop
inc
sbb
xor
sar
xchg
cmp
xor
(bad)
out
inc
or
adc
jmp
mov
mov
ret
popa
or
sbb
mov
push
cmps
adc
add
and
xor
lods
loop
sahf
or
in
adc
data16
fnstenv
test
add
push
clc
iret
(bad)
cmp
mov
outs
outs
mov
dec
xchg
pusha
pushf
xchg
movs
stos
std
loop
jae
call
lahf
loop
jb
scas
mov
add
pop
imul
stc
sbb
add
dec
test
popf
lods
test
push
les
add
pop
ins
je
scas
pop
test
aad
push
adc
movs
inc
push
lea
(bad)
mov
or
stos
pop
and
dec
sub
mov
iret
xor
scas
xor
dec
xchg
xchg
or
and
movs
fsub
inc
sar
imul
rol
dec
pop
aad
cdq
scas
sahf
fistp
dec
repz
in
add
add
test
pop
leave
rcr
leave
out
push
inc
sbb
leave
lock
xor
(bad)
in
adc
mov
sub
or
and
push
cwde
sub
ins
sub
adc
jo
fwait
ja
mov
xor
fs
push
retf
mov
dec
ret
mov
scas
fcomip
jg
or
not
xor
mov
out
stos
mov
imul
test
lods
add
jae
pavgw
fstp
cmp
stos
dec
sti
fisttp
lods
ins
shr
inc
xor
and
bound
or
shl
in
sbb
ficom
or
push
loope
dec
jge
mov
mov
cmp
loopne
and
sub
movs
mov
ds
pop
cmc
cwde
inc
les
stc
push
xor
pop
mov
dec
adc
repnz
push
mov
mov
ficom
add
jae
sar
jno
jne
mov
xor
adc
sbb
push
cmp
inc
mov
mov
and
ja
jo
and
sub
retf
sub
and
pop
into
das
fs
xor
popf
mov
sahf
(bad)
aad
icebp
pop
mov
cli
mov
(bad)
pusha
xor
mov
test
sbb
dec
xchg
adc
sbb
xlat
popf
clc
les
xor
in
xor
sbb
add
mov
xchg
aad
cmp
(bad)
cmp
out
dec
inc
sub
out
movs
retf
inc
repnz
dec
in
sbb
ss
mov
das
adc
inc
and
xchg
imul
arpl
daa
lahf
xor
pop
loope
add
(bad)
int3
push
fnsave
icebp
mov
push
psllq
lods
in
popa
sbb
(bad)
sbb
push
jb
popa
mov
cmps
sub
sbb
push
jmp
stc
call
sar
outs
jl
test
fisttp
mov
dec
jmp
pop
mov
mov
mov
cmp
mov
jmp
inc
mov
cli
mov
aaa
stos
(bad)
fxch
es
sub
inc
xor
sbb
or
and
loop
sub
fist
je
inc
out
pushw
lods
sub
xchg
out
jo
xchg
jmp
not
xchg
pop
sbb
jmp
pop
enter
jp
inc
adc
hlt
jge
pop
inc
out
mov
adc
mov
mov
jnp
aad
bound
pop
fwait
jmp
shl
add
push
pop
mov
or
cmp
nop
xchg
sahf
jb
(bad)
mov
dec
dec
out
jnp
adc
mov
pop
xchg
dec
and
add
xchg
stos
ficomp
shl
jno
scas
sbb
rcl
jg
das
xchg
sbb
push
mov
dec
inc
mov
and
push
sub
sub
push
out
push
clc
pop
mov
mov
sar
aas
rcr
(bad)
aam
cmp
pause
out
retf
mov
rcr
pop
push
add
xor
rcl
mov
dec
mov
popf
push
adc
ins
dec
movs
fcmovu
scas
xchg
nop
cmp
das
and
cmp
je
mov
cmc
in
rol
stos
pop
fst
add
ins
aas
rol
xchg
call
out
jae
retf
jmp
in
out
and
pop
not
mov
int
int
add
or
xlat
outs
ficom
xchg
pop
mov
mov
inc
dec
mov
sbb
nop
add
mov
loope
pop
xor
in
call
mov
dec
lods
or
aaa
mov
jmp
imul
pusha
js
stos
jmp
ficom
rcr
mov
push
mov
push
jb
fdivr
fs
adc
es
push
call
repnz
fld
and
ss
mov
sbb
(bad)
sub
fld
aad
lea
out
cdq
mov
cmp
pop
dec
mov
inc
scas
lods
cli
in
imul
or
mov
dec
cli
sbb
sub
and
rcr
xchg
es
neg
adc
fisubr
cmps
push
cdq
movs
xchg
mul
jg
outs
jmp
sub
jae
cmps
popf
adc
or
mov
add
fsub
jmp
sar
cmps
scas
mov
ds
xchg
or
sub
movzx
mov
sub
push
lods
push
lods
jmp
leave
xor
or
jno
aas
out
movs
pop
or
(bad)
pop
and
in
mov
xchg
outs
ffree
push
out
pop
fimul
lock
xlat
mov
xchg
sbb
push
loope
jmp
push
jmp
sar
test
xchg
outs
ffree
add
or
icebp
cmps
ror
jmp
loope
mov
sub
add
test
xchg
outs
ffree
cmc
inc
mov
fimul
lock
ja
cdq
je
jmp
loope
or
fadd
jo
jge
test
xchg
outs
ffree
movs
pop
loop
push
inc
inc
fisubr
push
ins
xlat
icebp
cmp
cdq
push
leave
lods
xor
nop/reserved
and
imul
mov
jns
lods
pop
loop
adc
and
adc
mov
retf
dec
and
imul
mov
xchg
add
sub
pop
and
inc
leave
lods
xor
out
mov
jbe
add
mov
cmp
mov
ret
xor
imul
or
out
jns
xor
xlat
and
inc
in
pop
mul
imul
dec
fwait
mov
push
jns
xor
imul
or
dec
aad
xor
jae
fld
sub
adc
mov
xchg
mov
xor
imul
or
mov
xchg
xor
fs
lods
in
in
pop
test
sub
add
(bad)
xor
push
daa
xor
jmp
xor
div
jns
in
pop
neg
lds
dec
neg
push
sbb
int
cmps
aaa
js
sbb
cmp
fisubr
xor
neg
adc
mov
mov
ja
js
sbb
lea
sub
fisubr
test
add
adc
ret
scas
mov
dec
addr16
sbb
loope
dec
lea
push
or
sbb
sbb
push
iret
jno
xchg
or
inc
and
(bad)
nop
jmp
lods
sti
ins
mov
cmp
and
icebp
mov
(bad)
xor
daa
xor
jnp
sbb
std
mov
sbb
mov
jno
bnd
cdq
push
jne
das
scas
dec
dec
push
cmp
fldenv
cmp
jae
outs
xlat
sub
std
adc
lock
xchg
sti
arpl
or
dec
dec
xor
mov
xchg
aas
loop
adc
xlat
shufps
xor
inc
add
sti
xchg
inc
cld
cmc
mov
xor
adc
ins
sbb
stc
sbb
ins
retf
xchg
out
pop
dec
fnstcw
popa
or
and
push
sub
xchg
push
shl
jmp
fsub
in
cmps
in
push
pop
cmps
les
imul
sub
fwait
test
xor
test
in
mov
cli
pop
ret
and
popf
aas
cmp
(bad)
pop
fsub
test
mov
pop
in
enter
mov
pop
ja
xor
sbb
fwait
xor
jo
std
aad
js
dec
mov
mov
test
or
pop
adc
bound
test
pop
repnz
push
push
cmps
pop
movs
and
mov
push
push
jg
xchg
imul
pop
mov
mov
inc
mov
out
or
push
dec
data16
sbb
mov
rcl
test
sub
cmc
or
jns
(bad)
jle
int
sti
dec
mov
in
ins
fdiv
mov
(bad)
pusha
cmp
or
outs
rol
or
fisubr
inc
add
sub
mov
xor
and
mov
fiadd
or
outs
les
adc
fisubr
pop
adc
popf
adc
dec
neg
or
fdiv
mov
out
js
sbb
ins
xchg
and
fisubr
push
in
adc
mov
or
sbb
mov
repnz
js
sbb
add
dec
sub
fisubr
push
dec
cwde
popa
pop
neg
retf
cmovs
fsub
or
cdq
sar
sahf
add
sbb
adc
fisubr
adc
jge
neg
fild
neg
jne
and
jo
pop
aam
pop
ss
stos
mov
in
cmps
inc
mov
jge
sub
and
jo
stc
in
xor
call
inc
inc
and
loope
gs
pop
sub
adc
mov
arpl
sub
jb
ins
xor
test
ja
sar
out
mov
sbb
test
test
lds
dec
popa
and
cld
imul
fsub
ins
les
int3
fs
fcmovnu
pop
mov
pop
gs
mov
mov
mov
cmc
js
fnsave
(bad)
shl
pop
movs
mov
pop
sub
push
inc
pop
mov
loope
ins
or
ret
adc
fcmovnbe
inc
push
and
xchg
shl
sub
aaa
sbb
mov
pop
mov
xor
je
or
jecxz
ja
or
ds
sbb
fisttp
cmp
pop
fld
int
popa
xor
pusha
imul
mov
das
xchg
loopne
aam
test
les
ja
in
jmp
addr16
mov
ret
inc
jmp
fistp
fdivr
push
mov
leave
lea
stc
and
push
or
test
mov
(bad)
sbb
mov
xchg
idiv
add
sub
retf
mov
js
dec
mov
xor
gs
mov
mov
or
mov
pop
pop
mov
sub
and
inc
or
and
ins
sbb
(bad)
inc
arpl
sub
or
(bad)
ficom
jg
add
std
pop
mov
movs
rol
mov
cmp
inc
stos
ficom
add
add
je
test
xor
shr
xor
loope
mov
fsub
cld
add
add
xchg
stc
pop
adc
mov
sub
xchg
mov
popa
pop
stc
mov
push
ins
out
dec
mov
pop
cmp
into
adc
mov
stc
mov
mov
fistp
xor
jmp
xchg
jne
push
fimul
ds
fadd
push
in
inc
or
xor
scas
jle
imul
cmps
mov
je
cmp
jle
adc
jns
in
add
cmp
nop
cmp
aas
or
fs
mov
rcl
pop
aaa
fisub
int3
cld
sbb
pop
das
das
push
push
in
in
sbb
fbld
pop
pop
push
xor
sbb
pop
dec
add
jg
xor
inc
jo
add
adc
shl
fdivr
add
xor
leave
mov
and
aaa
sub
sti
xchg
sbb
xchg
mov
call
int3
mov
pop
adc
lahf
fcom
cmc
sar
sbb
ja
and
or
cs
test
out
imul
dec
jns
jge
mov
pop
retf
stc
jne
sbb
jge
xchg
pusha
pop
adc
imul
cs
gs
or
call
lds
inc
xor
pusha
inc
add
or
cli
sub
enter
retf
mov
push
pop
sub
in
pop
call
call
pop
aas
call
and
fild
dec
mov
js
or
mov
or
pushf
mov
mov
jbe
jne
outs
jno
stos
pop
xor
push
fbld
adc
adc
jmp
bound
in
jmp
cwde
fsub
nop
push
lds
inc
fdivrp
out
ret
pusha
call
jns
fucomip
popa
jns
repz
adc
xchg
rcr
inc
(bad)
out
std
repz
add
push
push
(bad)
cmp
pop
(bad)
nop
(bad)
sub
imul
push
repnz
jecxz
leave
iret
add
inc
pop
test
sub
xchg
push
clc
loop
sbb
xchg
mov
mov
outs
or
xor
pop
in
test
shl
lock
push
push
sub
sub
jne
fs
push
es
ds
dec
aas
push
jmp
adc
inc
inc
(bad)
stc
dec
jbe
leave
or
jecxz
(bad)
mov
int3
outs
in
adc
pop
cmp
mov
es
cli
in
jg
(bad)
jbe
scas
add
and
jnp
adc
sbb
test
or
fistp
stos
or
xchg
in
sbb
add
jmp
adc
idiv
cli
push
pop
aas
sbb
in
sar
mov
je
cli
push
pop
ficom
lea
push
jb
adc
push
leave
inc
aaa
jle
or
fsubr
cli
nop
mov
sahf
push
add
repz
jge
ds
push
pop
and
mov
movs
test
clc
mov
int3
adc
outs
scas
mov
mov
pop
rcl
adc
pop
mov
pop
sbb
hlt
adc
scas
mov
fiadd
lea
push
out
es
pop
adc
jle
stos
xchg
out
and
add
mov
mov
shr
adc
test
adc
push
pop
mov
jl
(bad)
faddp
xlat
in
inc
dec
arpl
aaa
xor
loope
(bad)
pop
imul
mov
adc
xchg
xchg
adc
rcr
lods
nop
inc
sbb
add
mov
je
retf
test
imul
nop
mov
not
aaa
mov
jmp
dec
mov
jmp
(bad)
adc
mov
test
cmps
adc
bound
jle
stc
rol
outs
cld
in
pop
lods
cmc
es
cld
das
(bad)
sub
ins
mov
push
cmp
ret
jo
xor
cmp
mov
mov
leave
out
ss
mov
xor
repnz
pop
and
push
popf
daa
cmp
cmps
mov
adc
jmp
sbb
and
mov
fimul
adc
ja
call
fmulp
outs
inc
sbb
sbb
stos
pop
imul
shl
test
popf
not
aad
test
ret
retf
ss
setb
add
pop
adc
push
xor
aad
or
lods
push
scas
(bad)
(bad)
jge
aam
leave
sbb
xlat
mov
retf
mov
mov
retf
aas
daa
es
aas
je
in
mov
test
sbb
mov
stos
push
pop
push
cmp
pushf
test
mov
mov
sbb
xor
push
into
(bad)
stos
aas
sar
adc
aaa
xchg
cmp
sbb
jecxz
(bad)
stos
push
xchg
pop
push
ins
pop
gs
into
mov
stos
imul
cdq
add
out
cmp
arpl
sbb
aaa
adc
icebp
imul
xor
test
out
xor
cmp
mov
mov
jno
pop
ins
mov
pop
pushf
rcl
jo
inc
fxam
push
sahf
data16
add
sar
iret
dec
pop
mov
xchg
dec
and
adc
jmp
xor
je
arpl
(bad)
in
fucomip
add
pop
mov
mov
add
inc
repz
(bad)
adc
movs
mov
xor
cwde
ret
test
xchg
pop
pop
aaa
das
mov
aam
(bad)
in
jecxz
mov
sbb
cmp
retf
pusha
jp
cmc
retf
jnp
and
mov
jbe
cwde
pop
popf
es
cld
mov
rcl
(bad)
in
sub
out
in
ret
adc
out
fild
(bad)
sar
aam
sbb
scas
mov
les
and
aaa
imul
pop
cmp
cmp
test
es
inc
outs
ja
mov
add
sub
or
add
and
jmp
fmulp
push
bnd
lahf
sub
or
cld
inc
mov
outs
mov
sbb
addr16
sbb
or
sub
mov
dec
dec
push
mov
dec
mov
xor
dec
int3
leave
mov
lods
or
mov
out
popf
mov
xchg
push
fmulp
xchg
nop
call
sub
jmp
call
jnp
sbb
sti
sahf
sub
mov
sub
sub
loope
mov
lods
pop
stos
pop
std
scas
pushf
push
pop
and
push
sar
push
adc
cmps
dec
lock
mov
sti
jmp
lds
ret
(bad)
mov
and
leave
adc
sub
stc
xlat
push
mov
bound
hlt
pop
and
outs
add
pop
push
cmc
(bad)
data16
jb
pushf
shl
dec
sbb
and
adc
pop
jmp
pop
push
bound
fisttp
cmp
ins
and
data16
sahf
push
movs
out
loopne
and
les
xlat
icebp
loopne
loop
adc
(bad)
clc
daa
aas
fst
mov
push
sahf
lods
cmps
xor
(bad)
int3
outs
dec
adc
ins
cmps
in
push
adc
cdq
test
pop
out
jmp
and
push
pop
js
mov
imul
stc
and
ficomp
jbe
sbb
pop
sbb
mov
lahf
push
pop
(bad)
stos
les
rcr
sub
xor
(bad)
das
jecxz
xchg
or
sub
lods
mov
mov
lds
xchg
cmp
fs
and
mov
imul
add
push
mov
pop
movs
dec
sub
cmp
stc
inc
aas
je
ds
test
mov
ret
pop
mov
cmp
shl
je
cdq
mov
es
dec
cmp
xchg
push
cmp
sbb
push
(bad)
ror
fs
icebp
test
jg
push
mov
mov
push
lds
(bad)
cmp
imul
add
scas
aas
dec
sahf
mov
xchg
push
loop
push
je
mov
outs
inc
push
ret
(bad)
cld
arpl
into
and
mov
xor
in
icebp
sbb
idiv
mov
jb
std
push
rcr
scas
and
add
call
test
rol
out
dec
or
sub
neg
mov
push
mov
out
ror
push
cwde
jmp
pop
jge
dec
sub
icebp
lds
call
sub
push
cmps
test
test
imul
push
cdq
aas
pop
enter
jb
test
daa
mov
aas
scas
ret
mov
sub
jecxz
adc
aaa
mov
adc
es
inc
das
cs
into
mov
mov
out
and
test
push
imul
sbb
jecxz
adc
cmp
sub
or
inc
add
test
inc
inc
lea
in
(bad)
outs
lahf
and
jmp
jg
mov
pop
lahf
jecxz
leave
aam
(bad)
int
in
(bad)
scas
pop
xchg
push
inc
std
cld
jbe
sub
aam
movs
push
fcmovu
or
sub
ret
dec
sahf
mov
and
fwait
push
mov
popf
and
inc
es
push
out
ja
pushf
inc
lahf
inc
in
cs
mov
or
imul
stc
add
repnz
ja
scas
fcmovnu
test
addr16
hlt
push
sub
fdiv
add
sbb
xchg
out
sti
mov
push
and
movs
dec
inc
xchg
or
pop
xchg
clc
sbb
sbb
xchg
cmps
std
sbb
sar
and
jecxz
mov
sub
repz
sbb
mov
xchg
mov
ss
and
fs
xchg
imul
cmp
add
mov
cld
sub
push
xor
rcl
mov
mov
add
jae
mov
popf
(bad)
adc
mov
imul
xor
or
lock
sbb
jg
xor
imul
pop
push
sbb
lods
lock
pop
mov
pop
push
add
popa
pop
arpl
mov
(bad)
dec
arpl
cmps
mov
aam
ret
(bad)
mov
daa
mov
sar
xor
or
rol
scas
mov
xchg
mov
sub
scas
lods
mov
cmps
imul
and
pop
daa
nop
and
pop
or
out
xor
add
inc
aaa
sub
ror
jns
jnp
jne
or
popa
pop
or
sub
mov
sub
mov
(bad)
push
out
repz
xor
cmc
cwde
das
lock
cdq
or
pusha
aaa
and
xchg
scas
les
mov
jecxz
std
mov
outs
into
jecxz
imul
xchg
fistp
retf
cmp
imul
aad
aas
push
mov
sub
jmp
cs
pop
xchg
(bad)
dec
mov
idiv
scas
lds
popf
add
dec
sahf
movs
mov
and
out
pop
rcr
out
dec
pushf
dec
push
mov
test
popa
inc
fcom
adc
and
call
inc
arpl
daa
push
dec
cmp
gs
sahf
add
or
cmp
push
gs
lock
call
mov
in
jmp
lock
dec
pop
add
mov
push
lods
pop
mov
retf
jbe
and
jb
sub
add
cli
mov
jnp
and
add
dec
mov
mov
into
(bad)
and
xor
stc
xchg
lds
mov
inc
pop
inc
nop
dec
cmps
mov
mov
and
int3
add
xchg
or
enter
and
movs
test
jns
daa
ds
xchg
push
mov
xchg
xchg
jp
xchg
fisubr
xchg
dec
dec
push
repnz
and
lock
mov
int
pop
data16
push
xchg
test
cld
jo
sar
cmp
loop
das
mov
aad
loopne
loope
gs
aam
pop
and
push
mov
mov
or
test
out
icebp
mov
pop
push
je
mov
fcomp
or
sahf
jl
or
sahf
jmp
sub
(bad)
out
add
aaa
sub
ror
mov
mov
dec
cli
in
mov
lods
xor
and
daa
mov
(bad)
and
mov
mov
retf
in
popw
push
adc
xor
sub
test
es
fisub
frndint
dec
mov
mov
adc
sbb
cmp
pop
xchg
jle
xor
rol
sbb
lods
mov
ins
rcl
pushf
xor
mov
xor
adc
mov
mov
daa
dec
cli
push
sahf
xchg
push
mov
dec
pop
shl
add
cmp
push
push
lods
iret
sbb
stc
and
(bad)
stc
pop
sar
cld
stos
xor
adc
ds
jnp
test
pop
push
scas
repnz
xor
out
popa
pop
dec
fwait
add
xchg
shl
add
xchg
pop
pop
sahf
push
out
cwde
pop
mov
pop
dec
xchg
dec
add
sbb
add
(bad)
js
dec
xor
(bad)
jl
ins
repz
sub
fst
mov
pop
cmc
pushf
xchg
push
or
push
adc
mov
test
add
aad
pop
xor
sar
arpl
stos
test
adc
loopne
mov
loop
or
out
sub
or
ret
sbb
retf
ss
aaa
or
sub
movs
or
mov
mov
lahf
mov
bound
mov
ror
lods
push
aas
push
mov
pop
aad
sbb
sub
dec
mov
test
add
jecxz
sbb
inc
sbb
stos
dec
cli
pop
in
jle
adc
call
fwait
ins
jns
inc
xchg
out
dec
in
push
(bad)
out
cmp
add
in
jmp
pop
retf
pop
mov
cmp
sub
in
pop
jmp
push
mov
fist
not
cmp
add
cmp
mov
or
mov
scas
mov
into
and
adc
xchg
(bad)
imul
sub
sahf
stos
leave
cmp
not
or
mov
mov
data16
cli
dec
loop
int
out
enter
cmp
movs
je
cmp
mov
scas
push
pop
(bad)
repz
mov
adc
jecxz
and
(bad)
sbb
xchg
inc
sti
clc
cs
icebp
out
dec
push
inc
shr
je
add
daa
in
jbe
(bad)
(bad)
popa
ror
mov
fprem1
xchg
fsub
shl
mov
push
(bad)
pop
cmps
mov
and
in
in
pop
cmp
mov
in
lock
imul
cmp
cld
xor
mov
rol
in
not
rcl
pushf
or
sti
fldcw
push
int3
int3
(bad)
xor
mov
lahf
scas
ficomp
call
test
int
jno
mov
add
pop
addr16
jns
aas
push
mov
jb
jae
js
xchg
sub
xor
lods
push
and
and
jb
push
test
sar
xchg
outs
enter
dec
sbb
iret
inc
mov
cmp
test
mov
call
test
adc
dec
xchg
pop
xchg
inc
mov
leave
add
call
int
xor
jl
xchg
out
and
mov
dec
push
push
cmp
dec
xchg
nop
into
mov
retf
lds
enter
jmp
pop
ret
or
jl
xchg
add
cwde
mov
shl
xchg
mov
scas
ins
adc
aaa
xor
fstp
out
mov
push
jecxz
lock
mov
fs
mov
rcl
fistp
jb
adc
mov
mov
pop
(bad)
jns
(bad)
mov
push
icebp
stc
mov
push
pop
iret
pop
adc
pop
and
in
aam
into
aam
test
loop
jne
pop
push
ja
addr16
stos
and
mov
add
cmp
mov
xor
(bad)
outs
cmp
mov
pusha
pop
cmps
or
xlat
or
(bad)
addr16
test
cmc
cmp
xor
inc
cmp
mov
dec
add
(bad)
mov
or
mov
mov
arpl
lea
(bad)
enter
std
mov
call
add
xchg
clc
out
pop
shl
xchg
fadd
inc
jae
sbb
dec
movs
cs
arpl
jg
sbb
vmread
iret
xchg
mov
cmps
mov
rcr
dec
and
retf
cmp
add
push
or
aam
mov
out
lds
dec
or
mov
ins
into
mov
outs
jmp
jne
sub
fnstenv
xor
test
sub
mov
les
jle
in
jmp
sbb
cmps
push
cmp
fild
push
xchg
inc
mov
int3
add
jmp
pop
push
pop
and
cmc
sub
pop
push
or
ret
cmc
jle
data16
or
(bad)
fsub
and
leave
hlt
and
cmp
pop
inc
pushf
xchg
adc
mov
shrd
pop
adc
call
inc
enter
pop
jle
outs
push
rcr
shl
dec
popa
mov
push
jecxz
pop
pop
loop
movs
sbb
out
imul
cmp
push
adc
xor
mov
das
out
mov
mov
(bad)
adc
cs
fisub
ror
and
mov
mov
jmp
sbb
icebp
cwde
mov
daa
ror
dec
clc
and
ror
rol
jns
stc
fcom
cmp
outs
or
pop
in
xor
xlat
loopne
mov
clc
popa
push
rcl
push
dec
cmp
cli
jno
add
xchg
int3
loope
jbe
cmps
mov
pop
sub
mov
mov
pop
das
pop
mov
aad
sbb
mov
fdiv
jne
stos
out
cli
inc
and
mov
rol
retf
fistp
fld
ficomp
pop
in
dec
stos
jecxz
call
inc
add
dec
repnz
xchg
and
jne
add
mov
or
jne
retf
mov
in
pop
mov
lahf
dec
mov
lds
lods
dec
mov
push
rcr
(bad)
mov
sbb
jp
mov
add
dec
pusha
loop
sub
mov
push
push
fist
fwait
cwde
leave
sbb
clc
mov
push
mov
inc
retf
nop
loope
or
das
into
dec
sbb
mov
mov
loopne
out
sbb
push
fsub
lods
test
retf
pop
sub
cmp
popa
cmp
adc
pop
cmp
out
jno
retf
outs
jmp
rcr
ret
pop
pop
gs
mov
push
jmp
out
hlt
iret
adc
sub
std
add
in
jne
push
daa
pushf
loopne
jne
arpl
pop
out
lds
pusha
mov
ds
mov
inc
mov
pop
dec
call
pusha
jle
push
pop
cmp
xor
dec
xchg
lds
push
mov
imul
sbb
shl
adc
mov
pop
sar
leave
retf
icebp
cmp
ds
mov
(bad)
dec
aam
enter
xor
imul
fstp
and
loop
dec
ins
rol
(bad)
js
nop
mov
xlat
jbe
xchg
pop
push
rcr
sbb
mov
int
ret
arpl
daa
or
xchg
add
dec
cmps
xchg
xor
into
dec
xchg
lds
push
outs
adc
dec
sti
cs
xchg
mov
cmp
mov
(bad)
jbe
adc
ds
cmp
call
mov
popf
inc
call
or
stos
retf
pusha
ds
shl
mov
iret
xor
test
es
inc
cwde
fiadd
fadd
mov
pop
push
sub
mov
and
jnp
push
adc
xor
popa
popf
and
sbb
lods
outs
icebp
xor
das
xor
mov
ins
inc
and
sub
inc
leave
fcmovnb
(bad)
pushf
or
aam
sub
mov
adc
lds
imul
jle
fisttp
jmp
push
sahf
sahf
daa
push
cli
sub
mov
sub
jno
rcl
lods
mov
ret
scas
iret
fadd
dec
xchg
and
cmp
mov
sub
jno
and
jg
sub
dec
inc
ds
mov
and
lock
std
cs
xchg
jecxz
xor
jle
aad
xor
push
aad
mov
jge
int
mov
jecxz
arpl
jno
pop
mov
inc
jmp
jno
mov
mov
imul
(bad)
in
nop
or
pop
and
mov
sub
sub
std
jecxz
enter
mov
nop
or
or
fisubr
imul
stos
movs
fidiv
sbb
iret
loopne
or
or
add
pop
dec
dec
bound
pusha
inc
retf
mov
push
sahf
in
test
sub
mov
xchg
sbb
pop
movs
fwait
dec
cmps
gs
cmp
and
inc
in
sub
sub
push
mov
pop
cmps
nop
out
mov
stos
lods
add
adc
jns
add
jae
sub
ret
aad
jmp
jp
push
mov
leave
mov
pop
shl
retf
mov
imul
mov
add
scas
mov
rcl
cmp
mov
mov
loop
or
mov
(bad)
hlt
adc
push
add
ja
mov
jb
xor
cmc
adc
cmps
mov
or
daa
and
inc
repz
push
js
sub
loope
push
pop
inc
scas
cs
fld
mov
out
pop
xor
mov
cmp
into
mov
fisttp
and
js
shr
jl
imul
mov
push
pop
push
sbb
jbe
sub
repnz
test
xchg
shl
or
push
fbld
js
aaa
inc
jb
sbb
aad
mov
adc
nop
sub
aaa
mov
rol
pop
cmps
jmp
cmp
mov
mov
lock
add
clc
leave
cwde
clc
or
or
jno
outs
sbb
mov
loopne
fisubr
das
loope
and
cmp
cli
(bad)
mov
inc
dec
scas
adc
push
sbb
(bad)
movs
(bad)
push
retf
repz
and
inc
pop
sub
(bad)
daa
and
mov
leave
cmc
jno
mov
push
dec
(bad)
test
mov
jnp
das
aad
fild
and
sbb
jo
fcomp
rcl
adc
xchg
lahf
jns
dec
cld
inc
sti
pushf
xchg
inc
or
dec
stos
mov
ret
scas
aad
inc
inc
shl
aam
cmp
or
pop
popa
push
aad
push
dec
cmp
mov
sar
movs
fild
scas
repz
and
aas
fwait
in
cmp
mov
out
fmulp
shl
shl
ins
pop
dec
mov
inc
push
fnstenv
and
movs
cmp
xor
rol
cmp
adc
movs
mov
sub
pop
jmp
aas
push
fisttp
or
ror
stos
jnp
ror
outs
movs
ins
bound
mov
fcom
ja
add
ss
cwde
xor
popf
je
jmp
xchg
mov
ret
out
test
jmp
jae
je
xchg
adc
pop
cmp
in
(bad)
and
rol
call
push
mov
xor
sahf
jge
fsubr
bound
aam
fsub
mov
push
call
or
fld
sahf
rcl
cmps
cmps
jmp
pop
jecxz
es
les
mov
out
mov
cmc
movs
mov
pop
fst
out
(bad)
xlat
xor
sub
sbb
xor
jmp
dec
pop
dec
or
adc
push
sub
mov
ror
xchg
imul
sar
ins
mov
int3
adc
repz
or
data16
dec
sbb
xchg
push
iret
hlt
push
aad
add
mov
pop
xchg
ds
pop
aam
or
in
stos
mov
sbb
xor
add
call
or
aam
lods
iret
cmps
mov
leave
cdq
or
adc
sub
mov
push
int3
loopne
(bad)
hlt
pop
jb
cmps
and
cld
ins
and
enter
mov
sbb
(bad)
(bad)
aad
in
sbb
aam
(bad)
hlt
fwait
in
pusha
out
pop
cmp
daa
mov
clc
in
push
stos
mov
imul
out
aam
sti
pop
stc
shr
pop
push
test
or
sub
stos
cmps
mov
or
push
es
cmp
call
cmp
dec
(bad)
hlt
dec
adc
outs
xor
test
fild
stos
cmc
pop
pop
bound
aad
idiv
and
cs
scas
adc
data16
scas
arpl
retf
mov
in
ret
int3
(bad)
adc
lds
inc
or
(bad)
in
loop
ficom
xor
jge
xor
sbb
inc
dec
mov
cmps
xchg
cmp
scas
xchg
add
(bad)
xor
xchg
xor
xor
fadd
retf
ins
nop
xchg
call
(bad)
faddp
inc
shl
jmp
das
inc
mov
adc
outs
push
enter
(bad)
rol
stc
xchg
add
mov
and
cmp
and
mov
and
call
rcr
ret
out
mov
nop
fdiv
mov
fstp
outs
lods
xchg
pusha
sbb
adc
push
clc
add
mov
inc
and
pop
lods
dec
adc
dec
cmp
aam
pop
push
fs
sbb
repnz
or
jmp
jmp
je
push
mov
inc
xchg
bound
mov
or
in
ret
add
push
cmp
lds
jns
mov
shl
ret
xchg
call
int
out
test
leave
fwait
daa
xchg
jne
adc
gs
push
jb
in
outs
xchg
out
mov
outs
dec
sub
push
and
xor
std
jg
cmp
clc
inc
add
clc
xlat
(bad)
in
cld
sbb
pop
loope
sbb
jae
rcr
cs
fbstp
jnp
adc
outs
lahf
popf
(bad)
jmp
sbb
and
and
aam
popf
ret
repz
test
cmps
mov
jg
arpl
loopne
enter
mov
clc
push
dec
cmp
popa
xor
inc
push
cmps
shr
cmp
adc
or
inc
cmp
mov
jge
cmp
add
gs
add
mov
jecxz
das
xor
out
lahf
push
arpl
std
pop
icebp
clc
cmp
jb
aaa
adc
mov
dec
arpl
lds
mov
loope
push
rcl
test
paddsb
push
cmp
shl
jmp
sahf
push
stos
leave
sub
mov
aad
imul
jg
push
xor
sar
cmp
mov
sti
pusha
ins
dec
push
pop
jge
aad
repz
ds
fsub
dec
push
xchg
dec
cmp
aad
loop
mov
(bad)
movs
add
fistp
pop
or
push
fisubr
ficomp
xor
fbstp
outs
push
pop
lds
and
xchg
lods
scas
dec
push
xor
sbb
shr
in
lods
pop
into
call
stos
mov
pop
lock
scas
mov
ror
popf
out
mov
iret
hlt
mov
dec
and
lea
lods
dec
add
cmps
icebp
push
xchg
or
fnstcw
adc
mov
daa
dec
jmp
push
mov
push
jae
mov
rcl
xor
pushaw
out
mov
xchg
sub
push
xor
dec
add
jno
popf
mov
icebp
sbb
add
(bad)
out
push
(bad)
leave
shr
sbb
adc
idiv
hlt
sub
pop
or
sub
sbb
xchg
push
call
cmps
cmps
sbb
test
sub
test
xor
xor
fidivr
lahf
cmp
mov
(bad)
add
ret
imul
popa
xor
sti
add
mov
push
pop
inc
push
loop
push
pop
cmp
xchg
sub
fisubr
scas
daa
in
(bad)
push
fst
jg
repnz
add
out
loop
aad
xchg
mov
push
mov
retf
jmp
pop
nop
push
inc
mov
lea
out
mov
xchg
mov
jp
jbe
xchg
add
popf
xor
in
xor
fdiv
dec
das
nop
pause
jnp
or
adc
xor
add
mov
into
jecxz
sbb
mov
and
inc
xchg
xor
fsub
idiv
sub
push
sbb
leave
cmp
ret
icebp
dec
ret
jmp
aad
stos
ins
ins
std
mov
mov
push
aad
(bad)
xor
adc
dec
sbb
cmps
mov
push
jno
(bad)
nop
out
pop
and
ja
fld
xor
arpl
push
outs
test
or
or
add
sbb
inc
push
and
(bad)
das
or
inc
out
add
(bad)
xchg
pop
pusha
clc
pop
mov
shl
(bad)
iret
push
jae
loopne
test
call
ret
mov
shr
add
nop
add
hlt
mov
ins
std
outs
rol
adc
cmp
mov
and
mov
xchg
jl
cmp
mov
shl
iret
jnp
daa
add
cmp
mov
frstor
xor
loop
outs
mov
inc
xchg
push
mov
(bad)
and
mov
xchg
lea
clc
(bad)
daa
or
mov
dec
ror
into
sbb
xor
inc
or
pop
pop
leave
xchg
push
jo
in
or
shl
cmc
cmps
jns
mov
es
push
add
les
fsubr
mov
outs
ins
dec
mov
lods
fs
inc
rcr
movs
sub
pusha
lds
iret
ja
out
xor
scas
push
clc
mov
mov
stos
and
clc
and
retf
dec
xchg
cmp
mov
out
pop
and
stos
push
mov
mov
mov
sbb
push
sub
aaa
mov
call
pop
push
mov
push
and
push
call
inc
jp
push
jg
mov
sahf
adc
cmp
lock
out
jb
shr
lods
loop
push
push
sti
jmp
mov
iret
(bad)
into
movs
clc
dec
xchg
js
call
mov
and
mov
xlat
sar
scas
enter
les
adc
dec
repnz
xchg
inc
jp
inc
pusha
gs
xor
shl
scas
mov
and
sub
data16
int
mov
icebp
sbb
fadd
or
lods
mov
nop
(bad)
sub
sbb
retf
ret
test
add
dec
lea
xchg
ja
repnz
cmp
mov
inc
aam
mov
dec
push
ret
dec
or
adc
popa
bound
loop
mov
jns
repnz
mov
scas
addr16
mov
jmp
int3
inc
push
rcl
and
test
leave
fsub
mov
into
repnz
sti
test
std
pop
rcr
cmp
inc
dec
imul
adc
or
lahf
sub
pusha
inc
call
dec
cmp
xchg
dec
sub
mov
clc
sub
xlat
sbb
call
or
pop
out
outs
inc
arpl
xor
pop
retf
pop
push
mov
mov
imul
xchg
and
hlt
addr16
neg
dec
cmp
xor
popf
leave
comiss
lds
mov
adc
or
adc
hlt
(bad)
lea
lock
push
mov
xchg
hlt
retf
pop
adc
inc
xor
aad
xor
cmp
pusha
ror
in
sbb
ret
pop
aad
ror
es
bound
repnz
jp
cmp
loop
mov
dec
dec
push
jne
xchg
cs
addr16
daa
js
sbb
pop
xchg
jg
packssdw
mov
repz
pop
movs
jns
mov
xor
and
les
test
rol
mov
ja
fnstenv
inc
fcmovnbe
and
outs
aad
or
adc
pop
fldcw
jecxz
cdq
push
mov
mov
sbb
jbe
xor
imul
or
sub
jg
test
or
mov
or
mov
push
push
jo
aas
fistp
les
cmovle
cmp
add
jle
sbb
xchg
jl
pop
lea
xchg
ds
inc
mov
mov
sbb
sub
repz
cld
test
cld
mov
sub
pop
test
jmp
push
sahf
(bad)
mov
ficom
fidiv
imul
test
fld
cs
adc
out
adc
pop
call
(bad)
inc
push
call
imul
xchg
jecxz
adc
ret
xchg
add
dec
or
aad
jl
dec
in
sbb
cmp
dec
stos
dec
sbb
jne
in
and
mov
ja
mov
jecxz
sub
in
add
stos
or
pop
jle
push
sbb
and
push
inc
ret
test
sub
inc
jp
mov
je
or
dec
xlat
sbb
aad
jno
push
jo
jmp
and
add
dec
mov
mov
test
sub
xchg
mov
pop
icebp
test
dec
mov
and
test
push
imul
push
push
std
cmp
pop
cmps
xor
mul
cwde
sar
nop
out
mov
xor
leave
adc
fild
in
mov
loop
xor
in
xchg
in
(bad)
jg
or
or
data16
mov
int
jno
jo
inc
lods
mov
ss
test
xor
xchg
mov
loope
push
xor
dec
sahf
mov
add
mov
adc
dec
inc
sbb
imul
jo
cmp
iret
sub
ds
fisttp
mov
int3
sub
push
in
sub
into
stos
pushf
ret
push
shr
(bad)
in
pop
push
test
push
adc
stos
adc
popf
movs
xlat
jb
mov
cmp
jbe
mov
push
cmp
jne
lahf
shr
xchg
mov
dec
lods
dec
imul
popf
push
lock
repz
cmp
test
popf
aam
(bad)
push
or
jne
xchg
sbb
mov
fistp
dec
mul
arpl
in
or
jno
xor
xor
push
inc
pop
xor
aas
fild
mov
jecxz
add
and
xlat
and
or
xor
cmps
push
pop
fnsave
sahf
jl
ret
push
in
mov
outs
frstor
jecxz
or
inc
xchg
leave
fist
fwait
pop
rcr
add
pop
mov
stos
dec
test
sahf
dec
inc
fsub
and
rol
stos
pop
inc
out
sbb
sub
inc
movs
bound
xchg
sbb
(bad)
imul
pop
xchg
mov
mov
adc
add
inc
ss
sbb
inc
jb
rcr
mov
scas
aaa
adc
inc
sub
mov
pop
int
int
test
cld
mov
test
cwde
mov
std
call
out
fstp
js
pop
mov
cmp
mov
je
fcmovne
int
pusha
mov
int3
and
cld
adc
pop
pop
mov
xor
outs
mov
jmp
sahf
add
cmp
js
mov
mov
test
xor
or
xor
outs
cmp
inc
retf
and
stc
in
sahf
mov
mov
jbe
cmp
xchg
mov
adc
mov
jecxz
fist
dec
loope
in
dec
in
mov
mov
shl
ss
jb
xchg
cmps
and
rcr
jmp
sub
iret
jecxz
xchg
pop
jbe
xor
pop
icebp
into
fcmovne
jp
dec
jmp
es
mov
ss
jno
mov
mov
mov
div
pop
rcr
cmps
test
or
cli
push
xlat
scas
jge
pushf
inc
mov
jno
popf
test
adc
sub
pushf
and
lahf
sub
and
fidivr
outs
jge
ds
mov
shl
outs
icebp
mov
cwde
popfw
push
sahf
mov
jbe
cmp
cld
(bad)
pop
imul
and
adc
out
inc
into
jge
xchg
imul
add
inc
or
jg
dec
cmp
add
pusha
cmp
cmp
dec
lods
xchg
ror
bswap
adc
lahf
inc
mov
rcl
lahf
in
mov
lods
jg
popa
sub
fwait
lods
jmp
arpl
xlat
es
mov
mov
pusha
cmc
jo
cdq
mov
int
lock
sbb
jle
or
nop
pop
jb
cld
sbb
popf
mov
xor
out
imul
sub
pop
movs
test
dec
lods
cld
adc
xor
in
popa
into
(bad)
mov
add
or
dec
push
(bad)
hlt
movs
fcom
sub
pop
jp
pcmpeqd
inc
xor
push
fnstsw
(bad)
leave
add
mov
cdq
pop
adc
jb
sbb
stos
repnz
dec
or
clc
cmp
pushf
mov
(bad)
jo
fmul
jl
ins
push
jns
clc
fcmovnbe
pop
cwde
adc
mov
sub
in
xor
push
dec
aaa
(bad)
rcl
push
inc
or
mov
jmp
rcl
in
fmul
adc
xor
mov
das
stc
xchg
clc
adc
cmp
(bad)
jp
mov
inc
fadd
aas
mov
and
jmp
xchg
(bad)
fistp
aam
es
cmp
sub
cmp
mov
(bad)
adc
int3
sbb
sub
loope
inc
mov
xchg
cli
add
scas
mov
outs
dec
bound
pop
sbb
clc
sub
in
cmps
sbb
adc
scas
sbb
cmp
jb
mov
imul
rol
mov
mov
mov
fs
xchg
out
xchg
push
mov
js
and
into
sub
jb
out
fisttp
inc
mov
mov
das
jg
dec
int3
mov
dec
std
sbb
mov
call
dec
jl
mov
loop
push
push
enter
jmp
int3
xchg
cli
lds
loope
pop
mov
call
lds
or
push
push
lar
je
out
mov
or
or
repz
mov
cmps
fcomp
dec
aas
cmc
inc
sub
ror
sub
or
adc
adc
add
stc
push
add
rcl
cmp
or
repnz
mov
push
(bad)
cmps
movs
fld
rol
loopne
dec
push
pop
add
push
fild
pop
cmp
xor
adc
stos
cmc
leave
xchg
div
push
lea
jns
ins
(bad)
jns
xor
outs
repz
jnp
add
push
dec
pusha
call
shl
imul
not
outs
in
into
xor
push
fcom
enter
dec
rcl
leave
ret
mov
shl
mov
adc
pop
xchg
pop
es
dec
cmp
or
and
inc
push
jne
add
mov
jns
xchg
add
sub
hlt
out
adc
jbe
pop
dec
or
inc
cmc
adc
mov
xchg
sub
pop
test
mov
or
mov
cmp
cs
inc
jbe
pop
rol
pop
retf
xor
mov
cmps
cs
jb
sub
pop
push
ss
fisubr
sub
mov
stos
push
mov
movq
pop
cmp
inc
jmp
adc
mov
xchg
(bad)
das
lahf
rcr
mov
fild
ins
xchg
xchg
ret
test
clc
outs
fwait
das
outs
sbb
mov
cmps
push
mov
xchg
xchg
enter
mov
inc
imul
jl
jmp
mov
outs
imul
pop
cli
call
ror
loope
add
daa
mov
mov
call
loope
sahf
daa
repz
pop
jne
not
inc
cld
jns
ins
mul
out
jmp
fs
sub
push
sbb
cld
xchg
inc
imul
retf
leave
(bad)
mov
cmp
sbb
pop
xchg
push
sub
mov
jne
add
call
ja
sbb
and
outs
into
mov
push
out
and
movs
sub
inc
ins
mov
das
stc
test
js
ss
mov
ret
cdq
fldenv
idiv
inc
push
cmp
addr16
sub
pop
or
cwde
mov
ins
push
bnd
mov
leave
cmps
(bad)
jbe
shl
test
xlat
mov
fldenv
aad
out
dec
xor
inc
cmc
pop
out
mov
mov
int
pusha
fstp
or
adc
sahf
lods
jmp
lea
xchg
ds
fst
and
lock
mov
fsub
dec
fimul
lods
jecxz
push
cli
in
shr
adc
(bad)
in
add
inc
add
shl
mov
lea
std
stos
leave
out
xor
push
jb
jo
push
jecxz
out
int3
push
ret
fprem1
sub
test
sub
and
imul
jno
daa
jecxz
lds
dec
sub
mov
adc
fld
fld
push
hlt
sub
cwde
je
mov
jecxz
scas
sub
mov
sub
sub
pusha
mov
mov
xchg
ins
or
cld
stos
dec
in
test
mov
sub
push
pusha
loop
push
or
movs
inc
(bad)
jp
jle
xchg
jecxz
mov
pop
cmp
push
sbb
retf
das
into
push
stc
sub
lods
cdq
push
shl
mov
mov
cdq
std
gs
push
mov
int3
pop
mov
mov
and
call
sub
gs
sbb
jmp
jmp
jo
cdq
jns
push
cwde
mov
mov
scas
sbb
push
xchg
shr
push
cmp
fadd
ins
mov
adc
iret
sub
lods
push
jns
pop
push
add
xchg
ja
(bad)
into
mov
(bad)
mov
daa
xor
movs
xlat
nop
aaa
ret
push
and
lods
sub
lea
out
out
test
aad
bnd
lea
ja
pop
loope
repnz
inc
test
jae
xor
dec
dec
pop
test
or
mov
jmp
push
jb
add
mov
mov
lea
inc
mov
cmc
lods
sub
jl
inc
fwait
loopne
xchg
add
inc
jne
mov
mov
xor
nop
cmp
xchg
mov
and
and
add
cmp
xchg
dec
mov
ds
cmp
ja
out
jle
mov
add
push
pusha
retf
add
das
sbb
or
adc
mov
or
xchg
xlat
cli
aas
outs
add
scas
xor
mov
cmps
xchg
adc
jge
xchg
ins
dec
jecxz
ret
gs
inc
mov
mul
lahf
pop
dec
inc
jae
and
add
jno
inc
outs
xchg
ror
popf
pop
sub
lock
push
mov
sbb
jbe
jb
test
jge
test
add
xchg
pop
int3
or
add
pop
sub
cmp
push
and
mov
mov
loopne
repnz
adc
test
leave
daa
in
scas
mov
loop
aaa
inc
in
or
into
xchg
and
mov
test
jle
push
pushf
fist
rcl
mov
or
ret
add
iret
jmp
inc
test
lods
sub
pusha
shl
mov
or
shr
ficom
pop
loopne
mov
fucomi
cld
stos
mov
pop
loope
mov
lea
pop
out
sar
xor
cmps
ins
add
lea
or
outs
sub
mov
call
jns
test
lock
call
mov
xchg
push
movs
(bad)
pushf
dec
pop
outs
test
mov
xchg
adc
hlt
stos
aad
shl
jns
cmp
clc
mov
cli
jmp
iret
pop
sar
call
sti
mov
fsub
in
stc
dec
dec
addr16
mov
mov
rcr
div
xor
aad
xchg
repz
lods
fsub
fdivr
hlt
(bad)
xchg
dec
ins
cmc
ror
fiadd
mov
fcmovbe
mov
movs
push
xchg
fisub
mov
ficomp
inc
cmp
std
push
outs
es
xor
jle
add
cmp
or
(bad)
lods
and
add
aaa
push
push
jnp
(bad)
pushf
bts
sub
fidivr
cmps
mov
(bad)
addr16
loop
xchg
fcmovb
pop
movs
jbe
lock
fs
fsubp
mov
(bad)
push
xor
pop
xor
jl
test
adc
dec
and
out
(bad)
bound
ins
movs
sub
sub
inc
add
idiv
dec
push
call
shl
dec
in
aad
adc
fisttp
sub
or
in
xlat
mov
mov
popf
mov
jno
jno
push
out
data16
sahf
jle
dec
push
mov
fild
push
mov
push
fld
xlat
clc
pop
mov
mov
dec
xchg
add
arpl
push
ins
mov
fdivr
mov
push
mov
or
jecxz
push
mov
adc
imul
out
ret
add
pop
add
push
mov
ins
test
sbb
push
idiv
pop
dec
mov
fidivr
push
dec
dec
into
popa
fist
test
xor
push
mov
mov
aad
scas
repnz
mov
nop
scas
js
mov
cld
jecxz
inc
ins
loope
retf
mov
pop
lods
sub
sbb
mov
neg
xor
cwde
icebp
mov
dec
adc
je
sub
in
clc
pop
xor
sub
sbb
cmp
jb
in
call
mov
mov
add
cmc
cmp
frstor
mov
fs
pop
cmps
jo
mov
inc
and
loop
add
(bad)
cmp
mov
jnp
mov
mov
adc
aam
cmps
pop
add
sub
jbe
cmp
dec
xchg
sbb
popa
xor
mov
call
mov
inc
add
mov
ja
cmp
push
inc
inc
jns
scas
outs
clc
fdivr
fimul
mov
and
xor
jmp
repz
xor
fnstsw
cmp
(bad)
fsubr
cli
out
pop
add
fisubr
aad
stc
cmp
xor
inc
add
repz
ffree
pop
cdq
adc
scas
stc
(bad)
dec
push
arpl
mov
stos
ss
or
(bad)
pop
es
and
stc
cli
fisub
xor
mov
add
jne
js
cmp
aam
push
adc
jae
out
sub
push
into
enter
xchg
inc
sub
and
in
mov
xlat
pop
sti
mov
stos
shl
jno
sbb
cmp
int
push
sahf
dec
jle
(bad)
daa
jmp
mov
div
(bad)
and
or
repz
imul
adc
aas
sbb
jne
mov
movs
pop
call
mov
fistp
or
test
aad
xchg
add
movs
sub
push
pop
pop
sahf
pop
jecxz
jae
adc
inc
fisttp
addr16
pop
jae
pop
push
in
mov
add
xor
imul
outs
lods
imul
gs
mov
in
jns
clc
daa
inc
fld
inc
ror
or
add
stos
call
add
out
mov
and
jae
sbb
das
scas
sub
fdivr
enter
mov
sbb
(bad)
jp
xor
icebp
das
dec
adc
xchg
int
push
inc
and
push
xchg
int
add
lea
push
and
mov
jne
shl
cwde
pop
psrlq
pop
mov
or
sub
leave
inc
enter
clc
xor
push
xchg
cdq
cdq
pop
lock
scas
clc
ret
jb
mov
mov
(bad)
xchg
pushf
jmp
test
or
repz
fdivr
fwait
add
add
mov
xchg
pushf
pop
movs
mov
sahf
mov
mov
mov
imul
dec
mov
stos
jmpw
mov
pop
ret
(bad)
hlt
(bad)
inc
shr
mov
popa
adc
or
and
movs
sahf
push
and
sbb
or
enter
ret
xor
jg
xchg
cmp
xlat
mov
out
in
frstor
fucomi
and
dec
repz
in
pop
jecxz
call
std
inc
xchg
into
(bad)
xor
lea
mov
pop
ins
sbb
scas
or
fistp
in
repnz
jnp
dec
sub
pop
cli
or
and
cmc
or
arpl
pop
push
push
mov
loop
addr16
sub
out
xchg
xchg
imul
jbe
jg
cmp
fimul
lods
pop
or
js
fwait
mov
jecxz
mov
push
jo
enter
addr16
pop
add
pop
mov
cld
rcl
jo
popf
loop
lods
sub
sub
test
retf
sub
inc
ret
(bad)
test
retf
and
stos
jecxz
in
mov
jb
push
jo
(bad)
mov
sub
test
pop
mov
cmp
das
push
ret
pop
sti
or
imul
les
les
push
push
es
icebp
ss
xor
mov
cmp
pop
mov
nop
rcl
popf
mov
jb
mov
iret
add
fmul
int3
pop
sbb
xchg
mov
jne
ror
(bad)
call
dec
(bad)
(bad)
rcl
inc
jle
xor
in
(bad)
pop
and
fdivr
sar
fbstp
rcr
dec
call
outs
mov
and
out
push
sub
mov
pop
push
push
xor
cmps
push
test
and
pushf
xor
fcmovnu
sub
(bad)
adc
mov
jmp
and
mov
cdq
leave
jp
xchg
push
gs
(bad)
(bad)
ret
(bad)
push
lock
pop
out
dec
clc
fwait
dec
cmp
and
out
mov
fild
add
and
fwait
mov
into
mov
lea
dec
inc
push
lods
(bad)
sbb
mov
stc
inc
leave
xor
sbb
lds
and
or
ret
mov
mov
fld
cmp
lahf
and
jg
out
popa
cli
ret
das
xchg
mov
sar
ins
cli
mov
push
popf
and
sti
test
stos
inc
and
or
cmp
adc
add
in
div
xor
out
rol
push
pop
xchg
adc
add
xor
test
cmps
fdivr
or
and
lds
rcl
pop
mov
or
mov
pop
xor
jbe
push
mov
pop
scas
fild
dec
mov
addr16
fdiv
mov
or
jbe
(bad)
xor
push
push
jb
in
sub
push
or
pop
jle
push
or
out
dec
fbld
xor
dec
xchg
or
stos
cmp
pop
scas
push
jbe
pushf
push
xchg
clc
in
mov
xchg
or
repz
sub
dec
imul
inc
xchg
fsubr
mov
push
nop
rol
loop
div
inc
adc
sub
inc
(bad)
gs
mov
fcomp
arpl
scas
pushf
push
mov
(bad)
jle
ror
mov
push
xor
arpl
push
lods
cmp
cmp
retf
scas
jne
outs
rcr
sbb
sbb
inc
rcr
pop
call
or
(bad)
aam
jp
out
inc
jp
(bad)
imul
icebp
jmp
movs
xlat
fistp
mov
mov
icebp
jnp
imul
xor
xchg
or
rol
test
mov
pop
fsub
and
jl
dec
lahf
idiv
xchg
ins
mov
adc
repz
inc
not
mov
cli
(bad)
(bad)
fist
xor
int
and
daa
iret
xor
pop
es
stc
lahf
outs
add
push
lods
jmp
jp
dec
ds
xor
pop
scas
scas
lods
add
fadd
cs
push
out
fadd
dec
in
mov
sbb
adc
(bad)
sti
push
or
sahf
sti
stc
cmp
fld
or
test
fadd
shr
aas
add
mov
cmps
pop
mov
fldl2t
pop
mov
movs
fiadd
fld
mov
imul
mov
iret
dec
or
xlat
popf
adc
adc
pop
lds
enter
mov
(bad)
push
jno
sbb
add
cdq
(bad)
jl
jo
push
out
adc
mov
icebp
mov
sti
test
loop
in
ret
(bad)
mov
and
fsub
shl
mov
push
pop
xor
ja
pop
retf
lods
test
mov
les
outs
or
fmul
ret
iret
div
and
ret
or
sahf
dec
jmp
xor
mov
cmp
stos
push
sub
jp
inc
inc
rcr
sbb
and
(bad)
mov
dec
aaa
lea
mov
mov
sti
lock
inc
lods
js
aaa
xor
add
popf
inc
gs
jg
cmp
ds
hlt
in
mov
(bad)
mov
aas
ja
mov
fsub
cmp
jns
ins
ror
mov
dec
mov
rep
cs
adc
(bad)
inc
in
push
mov
out
popf
xchg
mov
dec
int3
push
pop
out
adc
xlat
pop
inc
mov
scas
cmp
icebp
mov
mov
es
mov
push
push
mov
rol
fst
aam
push
xchg
fistp
push
or
push
pcmpgtw
xchg
xchg
fdivr
ja
outs
ds
lods
(bad)
div
mov
stc
(bad)
stos
aas
inc
scas
in
cs
xchg
loopne
call
in
loope
mov
xchg
mov
inc
dec
aam
adc
or
add
js
or
sbb
ja
in
stos
movs
xchg
ret
add
pop
jl
cmp
add
clc
jmp
xchg
daa
adc
push
add
into
sub
jmp
(bad)
mov
ds
mov
pop
sub
xor
bound
imul
rcl
ret
xchg
push
(bad)
ror
adc
repz
mov
sbb
adc
mov
leave
sub
cmp
xor
outs
outs
lods
inc
inc
mov
sbb
cli
mov
xor
mov
lods
sbb
(bad)
(bad)
sti
ins
ds
in
inc
pop
shl
lock
cwde
sbb
pop
inc
pop
rcl
ds
mov
pop
iret
jae
addr16
push
call
sbb
fidiv
fld
call
dec
sbb
push
not
push
es
mov
rcl
into
loop
sbb
das
mov
lock
call
xchg
sahf
ret
mov
and
mov
ins
lds
and
xlat
icebp
cmp
jmp
and
jmp
in
cli
add
xchg
sahf
dec
inc
pusha
pop
and
sub
fwait
shl
test
lods
ret
cmp
jnp
inc
push
pusha
imul
sub
adc
retf
test
push
add
jge
inc
ret
cmp
mov
pop
movs
and
cmp
scas
out
jno
lods
hlt
jo
xor
fstp
dec
xchg
and
lds
mov
and
in
xor
dec
inc
adc
loope
movs
test
cmp
in
inc
lea
imul
gs
sbb
xchg
xor
(bad)
in
adc
mov
dec
pop
in
mov
dec
sar
arpl
inc
call
sbb
xchg
sbb
push
adc
sbb
test
mov
mov
std
iret
sub
mov
test
mov
sub
cmps
sbb
mov
dec
jmp
or
je
xchg
jno
push
je
inc
inc
or
inc
xor
mov
sub
add
(bad)
ret
test
sar
inc
inc
pop
cdq
push
ss
sbb
ror
mov
or
pop
lock
loop
scas
test
sub
popa
xor
dec
xchg
out
sub
mov
xor
mov
jne
mov
push
cli
add
xor
loopne
cwde
aad
int
mov
int3
stos
pop
push
lock
xchg
and
xchg
jge
lods
mov
repz
sub
out
adc
xor
ds
ss
addr16
(bad)
jge
cld
xchg
loopne
mov
mov
data16
sub
fs
jb
jle
pop
mov
cli
lds
lds
cmp
scas
loope
xchg
pop
test
cmp
pop
cmps
out
movs
mov
adc
iret
mov
mov
jbe
mov
dec
fisttp
push
jge
test
or
loop
sub
mov
jb
fcomp
shr
mov
mov
cld
add
sbb
std
xchg
inc
jecxz
ss
fadd
enter
iret
es
out
stos
jmp
mov
movs
jge
in
das
(bad)
clc
dec
inc
push
scas
mov
mov
lahf
aaa
nop
enter
xor
das
loope
sub
(bad)
aad
or
jge
icebp
cmp
sub
jo
lods
inc
unpcklps
pop
loopne
mov
and
arpl
jg
in
(bad)
push
pop
movs
mov
mov
test
xor
cli
pop
cmps
in
call
lods
dec
adc
int3
xchg
aas
or
mov
retf
fdivr
lods
cmp
dec
inc
or
fbstp
pop
sbb
retf
mov
idiv
inc
or
xchg
vcvtdq2ps
fistp
push
call
and
dec
and
stos
loopne
dec
cmp
fcom
mov
mov
fstp
mov
retf
retf
std
in
xor
xor
xchg
lahf
pop
jb
xchg
fimul
hlt
sti
jecxz
ret
and
mov
xor
movs
int3
mov
or
mov
xor
jo
imul
pop
mov
xor
push
and
je
sub
and
js
xor
adc
test
addr16
movs
xchg
dec
jle
push
xor
add
pop
pop
mov
inc
(bad)
fistp
dec
mov
dec
mov
mov
xchg
or
add
adc
cld
cld
test
dec
outs
cmp
repnz
inc
xchg
sbb
clc
add
pop
mov
test
jo
push
gs
xor
adc
(bad)
sbb
out
jp
cmps
and
inc
push
jo
dec
retf
jle
(bad)
jns
hlt
dec
rcr
stos
ret
mov
sbb
xor
fldpi
sbb
adc
mov
dec
cmp
xrelease
sbb
fdivr
arpl
jo
sahf
inc
lds
adc
in
sub
dec
ret
sub
cmp
inc
out
cld
inc
mov
sub
push
shl
ret
cmc
pop
lahf
sub
test
cmp
xchg
push
es
loopne
xchg
inc
mov
xor
pop
push
dec
sbb
pop
std
jnp
call
dec
sub
push
(bad)
imul
retf
cli
es
fcmovb
mov
push
pusha
sahf
in
and
xchg
movd
out
sub
adc
pop
mov
xchg
add
loopne
movs
xor
pop
dec
shl
(bad)
(bad)
std
enter
je
pusha
outs
fnstsw
ror
push
or
mov
cmp
dec
inc
rcl
sub
jbe
bound
loopne
cmp
test
xor
sub
pop
mov
pop
sahf
xchg
jmp
adc
mov
out
push
popa
arpl
nop
leave
outs
cdq
(bad)
xor
fisttp
aam
std
xor
mov
add
into
test
pop
xor
imul
sti
imul
xchg
les
push
jg
jl
pop
inc
fdiv
or
push
sahf
jle
iret
mov
or
mov
pop
cs
pop
ret
dec
sbb
jnp
pop
inc
and
cmps
call
inc
add
mov
fwait
push
aaa
pop
xchg
ficom
dec
mov
test
popf
inc
movs
shr
iret
daa
or
pop
mov
push
xchg
test
retf
push
js
aad
aaa
dec
aaa
in
fcom
push
lods
loop
mov
dec
sti
ins
mov
mov
push
inc
cmps
jnp
jmp
inc
fsubr
lock
ins
daa
test
lods
or
sbb
les
mov
jno
imul
fdivr
sbb
add
jbe
xchg
shl
sub
jp
xlat
adc
jecxz
iret
inc
retf
adc
rol
xlat
xchg
xor
test
fs
adc
loop
jmp
(bad)
lock
or
and
int
movs
stc
je
cmp
fcmovbe
popf
mov
cmp
int
adc
mov
inc
push
ins
mov
mov
rcr
or
jno
pop
jno
cmp
or
dec
push
add
lods
(bad)
cmp
ins
push
(bad)
stc
sahf
gs
test
and
push
cmp
gs
call
stos
neg
call
inc
(bad)
sar
adc
mov
(bad)
jb
(bad)
and
pop
scas
arpl
sbb
pop
es
(bad)
popa
dec
mov
ror
imul
pop
bound
add
ja
jmp
adc
fld
inc
pop
pop
sub
and
cmp
mov
sbb
push
ret
lock
add
mov
and
mov
inc
jb
jno
daa
daa
(bad)
div
jg
mov
shl
dec
sub
imul
xor
xchg
dec
(bad)
dec
popa
jno
cmp
xchg
out
sar
fdivr
jns
sub
sub
test
adc
xchg
add
(bad)
push
ds
jo
xor
jnp
xor
mov
outs
add
fld
sub
mov
lds
aas
pop
clc
dec
in
fist
daa
addr16
imul
sar
dec
dec
pusha
loopne
xchg
add
mov
adc
int
call
sbb
popa
dec
(bad)
jp
aaa
leave
xchg
dec
sbb
cli
mov
fistp
test
sbb
add
cs
inc
clc
sub
icebp
adc
jecxz
cs
ret
mov
xor
shr
jmp
mov
out
xor
xor
mov
inc
outs
mov
jne
push
mov
mov
push
int3
std
push
cli
xchg
ret
(bad)
cmp
arpl
inc
lods
out
pop
pop
(bad)
in
jl
pop
cld
(bad)
jmp
sub
cmp
cmp
lods
sbb
sbb
mov
push
and
or
in
les
mov
jge
jmp
or
out
jns
in
loop
mov
sti
ja
xor
xor
adc
or
test
(bad)
inc
push
pop
(bad)
mov
adc
sub
jmp
jmp
das
xchg
(bad)
and
add
lods
inc
pop
sbb
mov
loop
(bad)
mov
retf
cmp
mov
inc
cwde
jmp
adc
jp
arpl
jne
lea
(bad)
stc
or
mov
jb
fcmovnbe
(bad)
cmp
xor
(bad)
ja
mov
push
cmps
(bad)
lods
cmp
mov
into
out
dec
xchg
sbb
(bad)
sahf
cmp
and
mov
mov
xchg
and
add
cli
mov
aam
mov
jb
retf
cli
push
push
mov
arpl
pop
repz
xchg
pop
jp
(bad)
out
shr
cwde
pop
ret
mov
xchg
bound
cmp
in
leave
push
mov
repz
lock
jecxz
les
mov
adc
add
lahf
outs
lea
aad
stos
test
into
xchg
mov
sub
iret
mov
inc
mov
mov
mov
ret
dec
test
xor
cmps
lods
mov
dec
not
out
push
mov
adc
clc
cld
ret
jnp
enter
and
aaa
rcr
push
ins
mov
es
gs
sub
outs
jno
std
jno
test
loopne
shl
mov
cmps
shr
inc
add
mov
outs
ja
push
test
cmp
xchg
fcomip
out
sbb
icebp
repz
(bad)
ds
rol
lods
mov
pop
pusha
pusha
pop
dec
or
cli
mov
mov
in
xlat
popa
out
fld
adc
lods
push
sbb
leave
call
lds
imul
jbe
cmp
adc
mov
fcomi
outs
cmp
jmp
ret
xchg
or
cmc
inc
and
sub
mov
adc
in
push
mov
cmps
ins
mov
shl
xchg
retf
loopne
mov
mov
mov
and
sub
test
mov
int
sub
pusha
mov
jbe
cmps
mov
xor
scas
ret
or
test
push
xor
inc
cmp
in
fwait
sub
fxam
cmps
push
fld
scas
cmp
lock
or
push
imul
hlt
iret
and
in
daa
mov
stc
jge
lea
dec
scas
(bad)
push
pop
fwait
popa
test
out
retf
into
fimul
inc
push
fist
pusha
mov
push
movs
shl
push
sbb
cwde
jbe
iret
add
xor
add
mov
inc
rol
sub
rep
imul
xchg
jmp
ja
dec
sar
sbb
push
add
cmp
pop
nop
bound
and
xchg
aad
inc
cmp
add
cmp
retf
retf
into
cli
add
pop
in
push
xlat
clc
ret
mov
push
sbb
mov
xchg
xchg
mov
and
nop
mov
mov
jb
iret
push
(bad)
inc
jmp
ins
jmp
mov
retf
add
test
sbb
sub
(bad)
aam
imul
rol
or
dec
mov
loop
sub
pop
mov
retf
push
sbb
and
fisubr
pop
push
push
add
and
mov
call
popf
inc
fwait
out
sbb
pop
dec
ins
adc
or
adc
push
fwait
push
loope
push
stos
ss
test
push
mov
arpl
inc
mov
mov
arpl
shl
into
sub
sub
mov
test
cmp
scas
out
aad
add
ds
and
jecxz
or
aam
cli
xor
std
or
fsub
fld
repz
ins
adc
loope
jmp
cmp
ret
jae
sahf
test
loope
pusha
push
inc
inc
sub
leave
adc
xor
sbb
addr16
jg
loop
leave
cdq
imul
lods
and
aas
adc
not
xlat
or
cmp
sbb
loope
pop
test
sub
repz
(bad)
movs
mov
shl
aam
data16
mov
cmp
push
add
cmp
ds
in
jne
adc
inc
ret
dec
mov
mov
movs
inc
aam
inc
cmc
in
pop
cld
mov
inc
dec
sahf
fcom
dec
jp
dec
in
cmps
aad
xor
jmp
jnp
push
sub
mov
(bad)
adc
xchg
jmp
stos
sbb
mov
xchg
cmps
or
out
ret
sahf
repz
dec
repnz
(bad)
pop
sub
ds
and
imul
pop
repnz
and
in
stos
loopne
jbe
(bad)
scas
(bad)
jbe
(bad)
pop
lock
stos
ins
fs
std
fsub
into
pop
push
mov
repnz
push
or
in
inc
sub
dec
sub
leave
inc
ds
xor
jp
xchg
sti
pop
or
pop
clc
out
mov
jbe
sbb
cmp
pop
es
out
push
dec
fadd
xchg
dec
push
int3
call
sub
and
js
inc
sbb
pop
shl
stos
xchg
or
pop
or
cmps
repnz
inc
ror
pop
int3
out
hlt
nop
adc
dec
xchg
and
xlat
sar
sub
retf
push
into
jns
adc
mov
in
and
out
test
outs
(bad)
mov
movs
mov
jmp
std
fwait
dec
and
lods
aas
scas
jecxz
sub
jp
inc
pop
cmp
dec
out
clc
jg
jae
sub
fwait
add
int3
or
push
inc
popf
mov
je
arpl
int3
cmp
cmp
pop
add
outs
xchg
je
sbb
xor
and
int
das
or
push
xchg
leave
xchg
cmps
(bad)
std
pop
push
scas
xchg
adc
dec
aam
das
sub
jg
stos
and
sbb
fcmovne
sub
fild
into
sbb
out
mov
and
fstp
push
jle
ror
iret
sar
pushf
test
nop
or
ss
inc
sub
push
mov
shl
jge
push
das
and
mov
mov
pushf
mov
pop
adc
jae
je
dec
ds
push
loop
hlt
xor
icebp
(bad)
and
iret
ja
mov
sbb
mov
pop
ja
and
xlat
sbb
loop
les
cli
or
icebp
inc
repnz
nop
jae
jo
movs
aaa
(bad)
cmp
mov
xlat
nop
pop
(bad)
fistp
inc
jne
pop
idiv
lods
outs
fistp
(bad)
loope
xor
xchg
and
and
cmps
mov
adc
pop
rol
ror
dec
or
pop
lea
push
outs
les
dec
icebp
(bad)
mov
cmp
cmp
pusha
mov
jp
dec
xor
aam
adc
rol
cld
mov
lods
mov
pusha
mov
xchg
cmp
cs
adc
inc
dec
xchg
lods
jl
dec
and
ror
gs
idiv
lods
lahf
(bad)
(bad)
sub
mov
in
cdq
cmc
addr16
jns
dec
fwait
pop
lods
dec
fadd
lods
dec
aaa
xchg
stos
push
jmp
(bad)
imul
mov
std
add
hlt
mov
push
mov
data16
cmp
shl
xchg
push
push
add
push
xchg
sbb
js
outs
pop
inc
sbb
push
add
push
sub
cmp
repz
clc
mov
out
outs
sub
leave
and
std
dec
xchg
jbe
ds
inc
ja
sar
hlt
jmp
sub
sbb
cs
mov
popa
rol
fiadd
mov
out
add
cmp
fstp
pop
loop
out
mov
sub
idiv
jmp
lods
pop
imul
rcr
fcom
leave
js
test
xchg
sub
jb
fnstcw
ja
in
push
sbb
test
sub
add
inc
out
call
cmp
or
jmp
fcom
ins
ins
mov
mov
push
or
pop
cmp
aam
or
xchg
cmp
cdq
xor
int
adc
sub
jecxz
(bad)
iret
fwait
pop
cld
mov
jmp
jae
aas
xchg
lock
ret
rcr
mov
out
jmp
sbb
push
call
sub
mov
add
into
loope
dec
daa
cmp
jnp
scas
xor
jae
movs
sbb
mov
or
xchg
imul
jge
aaa
cdq
mov
sbb
pop
in
sub
and
adc
mov
scas
loop
cwde
mov
rcr
pop
leave
dec
add
xchg
(bad)
(bad)
jp
inc
xchg
pop
adc
pop
and
inc
sti
stc
inc
std
sbb
xchg
jg
retf
ret
les
test
or
push
ret
mov
mov
xchg
ret
xchg
or
mov
outs
dec
btr
(bad)
data16
mov
pusha
push
jb
dec
(bad)
xchg
(bad)
jmp
sub
addr16
les
xchg
push
xor
ins
lock
cmp
sub
push
call
cmp
adc
movs
mov
scas
sbb
ins
push
mov
inc
fwait
sub
sbb
adc
shl
std
xor
xchg
pop
cmp
adc
out
out
js
not
fisubr
cmps
loopne
push
fcomp
loopne
ret
jp
xchg
js
pop
mov
inc
mov
jecxz
push
mov
jmp
mov
mov
or
xchg
lods
push
inc
or
xor
out
mov
adc
push
(bad)
and
push
jg
jbe
mov
xchg
push
fstp
lods
scas
sub
div
ins
pop
leave
pop
in
lock
hlt
addr16
fwait
(bad)
neg
add
jecxz
ins
push
mov
sub
pop
jns
or
sbb
sbb
out
jmp
push
icebp
ins
fldenv
outs
inc
scas
ror
sub
or
mov
mov
add
pusha
and
push
pusha
inc
mov
mov
loopne
push
stos
inc
mov
push
sub
fdiv
jl
and
loop
pushf
mov
add
fwait
mov
arpl
clc
out
adc
mov
in
mov
gs
inc
cmc
add
lock
pop
mov
sbb
aam
les
test
push
inc
fs
xlat
xor
inc
push
jle
retf
dec
rol
jl
add
xor
es
sub
pop
fxtract
addr16
cmp
bound
lods
arpl
add
popa
inc
ret
jb
in
push
push
movs
mov
imul
inc
dec
(bad)
in
aas
adc
cmc
mov
cmp
dec
sar
sbb
outs
push
push
aaa
lahf
leave
or
mov
inc
mov
add
and
stos
ror
in
ret
xor
and
stos
test
mov
or
jmp
(bad)
jle
xor
fdiv
xor
into
retf
mov
in
out
jge
in
jle
rcl
xchg
push
fwait
stos
jg
aad
cmp
cmpxchg
test
and
cmp
sbb
mov
lea
test
jge
jns
int
call
sub
dec
inc
xchg
out
movs
sbb
xchg
xor
push
dec
mov
pop
sbb
scas
(bad)
mov
jmp
clc
xchg
or
dec
push
test
loope
sti
not
loopne
movs
inc
sbb
xchg
push
cwde
icebp
sub
clc
retf
and
fist
inc
test
mov
mov
and
and
icebp
xchg
stos
test
xchg
or
fld
push
ja
imul
mov
ja
fild
ds
jp
call
pop
push
push
stos
xabort
fimul
or
jmp
dec
adc
fadd
pop
push
mov
aaa
mov
rol
imul
mov
movs
mov
mov
pushf
rcr
daa
fcom
mov
shl
retf
xlat
xor
mov
jmp
adc
pop
dec
arpl
aas
jle
sbb
adc
repnz
call
ror
dec
int
sub
sub
(bad)
adc
icebp
jne
xchg
fucom
cmp
cmp
push
test
gs
mov
sbb
je
lods
mov
cmp
xchg
dec
adc
cmp
mov
fld
test
mov
loope
push
dec
dec
sub
fld
das
and
(bad)
dec
jns
xchg
inc
sbb
ret
cmp
cmp
iret
jle
(bad)
mov
dec
sar
pop
mov
or
ficomp
push
push
jecxz
xchg
imul
jmp
test
xchg
sti
pusha
dec
outs
xor
mov
cmp
cmp
sub
jne
js
mov
adc
stc
pop
dec
cmp
jp
push
repnz
test
or
xor
xchg
mov
call
sti
scas
xor
rol
iret
inc
imul
push
scas
loope
loop
sub
mov
outs
jo
aas
pop
push
jmp
xchg
jge
es
cmp
fiadd
imul
leave
icebp
pop
adc
jmp
test
jp
fnsave
sub
cdq
(bad)
xchg
movs
cmp
inc
mov
push
retfw
outs
imul
pop
imul
mov
dec
xchg
push
and
sub
imul
fisttp
mov
xchg
cmp
lods
mov
test
ins
dec
lds
ror
cld
cmp
into
std
push
lods
jmp
out
xchg
call
push
dec
pop
dec
call
inc
dec
xor
sub
adc
call
(bad)
pop
loop
adc
push
shl
mov
and
test
pop
into
mov
lods
pushf
push
inc
cmp
push
aad
and
(bad)
push
ret
out
mov
and
movs
adc
xchg
push
mov
mov
ds
sahf
fnsave
jne
cmp
jne
(bad)
pusha
addr16
or
call
ret
bound
and
mov
out
and
xor
mov
mov
dec
xchg
or
dec
idiv
into
pop
mov
inc
push
xchg
fwait
push
(bad)
leave
cmp
ret
loop
sub
in
push
add
fdivrp
inc
outs
call
fisttp
or
out
sub
jae
push
sub
jg
iret
dec
adc
mov
mov
mov
cmp
arpl
mov
add
jae
scas
adc
and
mov
(bad)
iret
int
sub
push
mov
push
jl
adc
and
retf
xor
loop
pop
(bad)
and
and
sbb
pop
jmp
xor
cmp
in
cmps
int3
shr
xchg
xor
sbb
inc
repnz
repnz
fisubr
(bad)
jmp
data16
in
inc
sbb
xchg
cmps
jae
dec
int
aad
mov
sub
add
sub
cmc
add
inc
inc
or
mov
ror
dec
(bad)
cmp
fimul
cli
add
lahf
lods
mov
mov
mov
add
outs
push
mov
sbb
jb
and
out
mov
cmc
fndisi(8087
call
jmp
sahf
stos
sbb
bnd
imul
cld
pop
sub
mov
je
or
loope
test
cmp
fcmovb
adc
out
pop
ja
lods
scas
aad
mov
dec
sbb
retf
cmc
or
cwde
pop
imul
pop
and
aas
adc
mov
pop
add
sar
add
inc
sub
jae
(bad)
xchg
ins
adc
inc
jg
int3
inc
xchg
(bad)
cmp
pop
mov
(bad)
loopne
ror
sar
je
lods
lahf
jno
gs
shl
loop
push
xchg
and
push
outs
out
lock
or
test
xor
pushfw
sti
mov
sub
popa
or
dec
inc
xlat
pusha
push
xor
rcr
xchg
jo
jmp
test
xor
cmp
sub
jbe
int
fst
addr16
adc
and
pop
cmp
mov
push
jbe
retf
sub
add
mov
add
int
inc
xchg
sub
dec
mov
sar
push
mov
jl
push
jnp
test
xor
in
retf
mov
and
fcomp
(bad)
out
(bad)
ror
dec
sar
pop
xor
outs
push
les
sbb
in
es
xor
out
dec
pop
jl
jle
fist
xor
ja
mov
inc
xor
or
sbb
lods
idiv
push
xlat
or
mov
rcl
pop
push
add
dec
popf
pop
xor
add
mov
jp
cmp
cmp
pop
bnd
imul
outs
adc
xchg
pop
arpl
in
xchg
mul
ret
fcmovne
or
mov
dec
add
mov
inc
nop
sbb
adc
daa
or
lods
xor
jmp
mov
xor
fcomip
inc
lds
enter
addr16
kandnw
jge
enter
popa
dec
dec
retf
fst
add
(bad)
or
mov
and
dec
mov
mov
shl
sbb
add
mov
iret
imul
mov
cmp
add
push
mov
fadd
mov
fimul
xchg
push
jne
call
pop
test
pop
(bad)
mov
cld
pop
push
jne
mov
cmp
xor
cmp
out
mov
mov
pop
or
clc
outs
mov
int3
push
imul
fsub
xchg
cmp
loopne
cwde
xor
les
fnstcw
sar
stc
lahf
push
out
cli
inc
jne
lock
inc
out
aas
mov
scas
movs
inc
xor
not
push
pop
mov
scas
xor
adc
add
fistp
call
mov
adc
outs
mov
dec
mov
imul
sbb
xchg
jge
dec
dec
loop
inc
mov
daa
sub
mov
inc
(bad)
xor
mov
jo
arpl
push
(bad)
aad
mov
call
out
fstp
fadd
mov
mov
or
aas
lahf
push
pop
iret
sub
cwde
xor
cmp
jb
iret
cs
jmp
xor
lds
mov
pop
mov
push
mov
jg
out
push
lods
push
cmps
jmp
adc
nop
fnstenv
jbe
xor
push
fs
xor
or
lds
push
inc
shl
test
movs
mov
jns
mov
int
push
inc
(bad)
cld
cmp
or
mov
jne
gs
iret
hlt
and
adc
rcl
cmp
ret
mov
and
ret
outs
push
and
iret
add
and
je
xchg
ins
std
imul
add
cs
mov
sbb
imul
xchg
pop
push
mov
cmp
ficom
in
pop
mov
push
aaa
and
(bad)
int
mov
shl
iret
push
scas
mov
lea
clc
sub
sbb
sub
repnz
push
jmp
ret
dec
push
push
sub
jne
mov
push
sub
(bad)
fld
fdiv
and
add
out
mov
leave
cs
aas
jns
jbe
add
cmps
jmp
sub
xlat
pop
xchg
mov
inc
mov
in
ss
nop
shl
or
mov
mov
arpl
retf
ja
je
cmp
ja
(bad)
cmp
inc
push
mov
cmp
jb
fst
jle
jp
cdq
dec
mov
les
sub
or
(bad)
icebp
dec
push
shl
popf
cs
sub
out
stos
jno
sub
jg
mov
adc
iret
push
hlt
add
xor
or
dec
shl
xor
push
(bad)
mov
(bad)
ror
dec
add
fldcw
adc
lods
mov
xchg
lods
lods
inc
repz
ins
shr
mov
(bad)
aas
ret
nop
sbb
mov
xor
cld
jno
add
sub
int3
rol
dec
sbb
inc
cs
scas
mov
pop
mov
jge
or
cmp
jbe
pushf
daa
pop
pop
lock
imul
lods
mov
sar
mov
outs
dec
adc
clc
sbb
dec
dec
mov
xlat
cmps
add
jg
sub
sbb
movs
mov
hlt
sbb
xchg
mov
in
loope
call
repnz
xchg
and
adc
arpl
(bad)
dec
xchg
jecxz
outs
cmps
xchg
js
daa
push
mov
(bad)
(bad)
cmp
sub
fisub
jae
push
movs
and
mov
lds
(bad)
adc
cs
(bad)
push
stc
sbb
inc
in
dec
ss
stos
xchg
aam
push
movs
add
inc
and
jb
sub
add
(bad)
mov
mov
mov
add
jae
jae
ds
sub
test
call
dec
jecxz
fs
rol
fs
push
cmp
sub
mov
outs
sbb
in
ins
fiadd
clc
xchg
ins
push
pop
ror
push
rol
cmp
stc
dec
and
xor
xor
mov
rcr
icebp
mov
adc
sti
or
or
mov
movs
jns
shl
pop
into
shr
mov
mov
or
jb
inc
push
xchg
jb
jbe
in
xlat
aam
mov
push
(bad)
adc
mov
icebp
aas
lds
lahf
push
mov
rol
retf
pusha
push
ja
cmp
mov
loop
ficom
sbb
fld
(bad)
push
dec
div
popa
or
(bad)
or
pusha
add
xor
mov
out
cmps
cmp
aad
sub
mov
fwait
add
aas
hlt
clc
inc
adc
sub
sub
lahf
mov
lock
sbb
lods
inc
cdq
ret
xlat
stos
and
cwde
mov
std
xor
sbb
inc
mov
stos
cmp
(bad)
(bad)
push
jg
mov
std
ins
sar
iret
xchg
add
aam
cld
lea
add
or
mov
mov
mov
mul
repnz
or
inc
pop
popf
jne
sub
jne
and
out
cmp
adc
cmp
sbb
pop
icebp
cld
xchg
jl
fdivr
push
cmp
inc
cmp
xchg
dec
sbb
jg
add
add
retf
lea
test
loop
fwait
mov
es
(bad)
pop
push
adc
or
mov
jmp
sbb
add
aam
mov
jns
adc
mov
cmp
push
into
imul
push
dec
test
fidiv
mov
gs
add
cmp
stos
mov
test
(bad)
pop
xor
mov
rcr
not
test
xchg
dec
jmp
inc
mov
aas
adc
jmp
pop
imul
daa
das
mov
mov
fwait
repnz
bound
mov
jmp
cmp
cmp
imul
loop
inc
mov
call
or
add
jle
adc
mov
xchg
and
mov
fdiv
movs
or
and
fld
add
repz
or
adc
sbb
sub
cmps
sbb
dec
cmp
movs
sub
jno
sub
mov
cdq
mov
dec
mov
sbb
adc
push
rol
xor
into
mov
test
adc
xor
rcr
sbb
mov
test
cdq
xor
mov
adc
sar
cmp
push
and
adc
icebp
std
pop
aaa
or
cmp
popa
inc
dec
cmc
pop
xchg
sub
xchg
movs
(bad)
pop
dec
cmp
pop
aad
mul
sbb
sbb
and
movs
es
xchg
out
push
pop
push
call
inc
jns
mov
imul
daa
in
inc
scas
icebp
sar
and
fsub
cmp
jg
mov
movs
pop
mov
outs
mov
daa
xchg
rcl
int
fisub
add
loopne
jecxz
dec
pop
cwde
sbb
data16
fisubr
xor
jno
rol
jns
pushf
cli
or
rcr
push
leave
sbb
cmps
sbb
mov
cs
mov
fsub
or
mov
pop
sub
rcl
add
lahf
imul
xor
pop
push
rcl
mov
aas
pop
jecxz
push
(bad)
addr16
ins
inc
ret
and
mov
lock
ret
inc
cmpxchg
fxch
mov
out
mov
push
mov
gs
jecxz
xchg
call
mov
pop
add
push
xchg
dec
xchg
jo
jp
shl
imul
or
in
cdq
mov
mov
mov
push
scas
sbb
daa
int3
jmp
mov
xchg
mov
aaa
mov
call
call
outs
mov
mov
out
push
cmp
int
push
dec
dec
jecxz
(bad)
js
pop
call
loop
dec
inc
xor
jno
cbw
daa
loop
int3
pop
mov
mov
out
adc
add
xchg
movs
cmp
hlt
aas
sti
jg
dec
cmp
pusha
jbe
sbb
repnz
in
dec
shl
fsubr
add
mov
fistp
cmc
and
popa
mov
stos
in
push
dec
scas
pop
inc
sub
mov
dec
pop
inc
dec
rol
ret
mov
or
xchg
pushf
in
arpl
sbb
jmp
fistp
pusha
jo
jle
xchg
adc
mov
push
push
inc
jg
arpl
pop
and
outs
jmp
adc
add
xchg
cmp
mov
push
cmp
mov
add
(bad)
in
pusha
sbb
out
jno
cmp
fistp
pop
cmp
xchg
les
pop
sbb
stc
mov
ds
rol
jmp
adc
and
jmp
mov
sbb
sbb
mov
test
hlt
and
cmp
stos
inc
mov
data16
mov
mov
in
push
jp
in
xor
and
mov
test
leave
retf
pop
pusha
jmp
dec
push
mov
xor
cmps
sub
pop
std
(bad)
les
daa
int
call
stos
push
dec
jecxz
out
add
mov
push
inc
pop
cmp
inc
(bad)
sar
(bad)
mov
enter
lods
dec
retf
out
jmp
mov
adc
xor
fnsave
sbb
lea
nop
pop
and
and
inc
mov
add
jg
retf
pop
clc
mov
cmp
inc
je
repnz
imul
test
xor
(bad)
adc
sub
(bad)
fdivr
sbb
nop
loop
and
and
pop
repz
arpl
cmp
xor
iret
sbb
pop
(bad)
add
adc
test
je
retf
mov
cmp
shl
int3
out
cmps
int
pop
or
bound
mov
dec
xchg
mov
push
sbb
add
xor
ins
out
mov
es
adc
adc
mov
ss
shl
inc
sbb
mov
xor
ret
jo
loope
int
movs
inc
add
jmp
mov
retf
push
retf
pop
jns
cmp
push
int
mov
and
push
sub
cmp
mov
out
mov
loope
sub
xor
add
aam
das
inc
fidivr
cmp
or
mov
movs
dec
cmps
mov
cdq
rcl
pop
or
mov
out
pop
shr
pop
test
pop
jecxz
sbb
sbb
xchg
nop
mov
mov
loop
iret
arpl
dec
jnp
stos
mov
or
sbb
scas
push
fwait
push
jmp
adc
cmp
cmp
sub
mov
ds
clc
fiadd
div
pop
sbb
aaa
inc
lods
lock
into
sub
or
mov
test
les
mov
lahf
xchg
or
bound
sub
ret
call
nop
call
and
mov
hlt
inc
gs
adc
adc
mov
retf
jg
xchg
call
xlat
mov
stos
movups
or
xor
or
add
cmps
jnp
imul
or
dec
jns
sbb
ins
push
cwde
mov
jp
cli
ficomp
jmp
mov
jmp
mov
out
rcl
xchg
cwde
fcmovu
mov
dec
lods
cmps
sbb
jno
fld
das
loopne
dec
add
mov
rcr
mov
jle
adc
xchg
push
dec
popa
fdivr
out
fcom
pop
dec
pop
dec
cmp
jbe
or
ss
xor
xlat
dec
mov
fcmovne
outs
adc
or
(bad)
daa
out
adc
pop
jbe
xchg
inc
mov
jp
mov
cli
stos
into
adc
and
xor
mov
xchg
in
test
and
imul
mov
jg
stos
in
les
cmps
repnz
loop
push
into
push
inc
pop
sbb
out
aaa
idiv
sub
cmps
test
dec
addr16
out
adc
pop
push
movs
loope
mov
xchg
ds
push
mov
lods
ret
jns
jmp
fwait
out
lea
jo
mov
push
dec
jmp
dec
fs
cmp
into
mov
cmp
mov
add
sbb
ins
push
and
jle
stos
imul
dec
dec
push
iret
fsubr
mov
xor
add
ins
ins
pushf
pop
mov
test
loopne
and
jmp
fisttp
je
loope
out
popf
cmc
pop
(bad)
cmp
and
adc
sahf
(bad)
loope
pop
pop
ds
sub
das
mov
pop
mov
cli
int3
adc
or
cdq
inc
daa
aas
xchg
xchg
nop
shl
fldenv
pusha
adc
stc
xchg
xor
(bad)
jno
add
sbb
inc
movs
sbb
leave
or
cmp
shr
and
pop
add
cmp
dec
std
test
int3
pop
aam
fstp
push
je
add
dec
retf
adc
fucomip
mov
pusha
(bad)
imul
and
mov
and
int
pop
fstp
sahf
sub
jae
ror
sbb
dec
shl
jg
mov
call
stc
or
xchg
(bad)
inc
jno
ins
inc
imul
jle
jbe
push
push
inc
cmps
lds
add
(bad)
rcl
inc
or
or
leave
jle
mov
call
push
push
jl
mov
sbb
ret
popf
out
and
(bad)
mov
ret
mov
call
inc
jg
test
xor
pop
repz
fdiv
inc
(bad)
cld
inc
stc
adc
xor
enter
mov
pop
add
(bad)
cmc
fisubr
cs
push
cmc
and
imul
(bad)
and
sub
ret
out
inc
cmp
pop
out
xchg
pop
and
out
add
push
xchg
ds
cmp
aam
inc
pop
or
out
adc
jmp
pop
out
mov
mov
mov
mov
add
adc
sar
inc
clc
inc
pop
in
mov
aam
adc
push
or
pushf
mov
mul
pop
add
pusha
(bad)
(bad)
aam
inc
test
mov
dec
std
push
inc
sub
sub
in
mov
and
sar
inc
pusha
mov
jb
add
inc
inc
xlat
or
loopne
je
and
push
fcmovu
dec
mov
jg
(bad)
inc
xchg
cld
sub
and
imul
adc
or
adc
rcl
mov
sbb
or
sub
pop
dec
jns
enter
and
and
(bad)
push
cli
sbb
rol
sub
xor
fst
ds
mov
pusha
push
pusha
xlat
pop
stos
shl
pop
push
cdq
xor
mov
push
mov
xchg
xchg
sub
int
cmc
rcl
inc
push
push
cs
inc
cmp
and
pop
sbb
arpl
jo
(bad)
push
movs
jmp
mov
das
mov
(bad)
pop
out
push
cwde
jae
les
test
push
mov
jno
sbb
imul
mov
dec
mov
xchg
dec
pop
mov
in
(bad)
fstp
cmp
jnp
ins
jmp
popf
inc
jmp
add
adc
jne
push
xor
sub
cmp
add
out
jnp
pop
sbb
frstor
out
adc
cwde
push
scas
or
shl
pop
(bad)
mov
stos
sbb
repnz
push
adc
sbb
inc
xor
es
pop
stos
xchg
into
dec
mov
repz
(bad)
fstp
rol
enter
xchg
inc
dec
and
adc
pop
lock
fwait
cmp
jb
xchg
dec
in
pop
xchg
xchg
test
daa
pop
ss
stc
push
cli
int
dec
daa
dec
jmp
xor
and
pushf
call
out
rcr
adc
jg
(bad)
push
popa
or
out
stos
jmp
mov
dec
call
xor
mov
out
mov
mov
jo
pushf
xchg
mov
jl
pop
dec
scas
push
jp
jle
sub
xor
mov
cmps
add
pop
mov
movups
(bad)
imul
arpl
xchg
sub
std
jmp
push
test
mov
imul
cmp
inc
data16
scas
jmp
jb
mov
sub
xchg
xor
cmp
push
cs
and
jle
(bad)
pop
or
sti
jmp
dec
lds
es
shl
dec
ficom
mov
sbb
arpl
retf
inc
jns
(bad)
dec
xchg
not
mov
div
jge
movs
xor
movs
mov
sahf
jns
cmc
jns
retf
mov
inc
add
lods
cmp
arpl
jmp
daa
int3
push
(bad)
mov
int3
jg
sub
mov
fsub
jmp
cmp
fiadd
cmp
dec
out
rcl
sub
jmp
mov
adc
dec
or
mov
std
(bad)
add
test
xor
xchg
push
dec
mov
in
and
ds
mov
lods
xlat
or
xchg
inc
add
jb
pop
div
fidivr
sub
xchg
mov
ds
jle
sub
mov
fidivr
mov
mov
push
push
jecxz
xor
hlt
push
idiv
fisttp
xchg
out
and
push
ja
rcr
arpl
movs
mov
push
fnstenv
jae
cs
jb
out
mov
mov
cwde
pushf
mov
sbb
aad
inc
inc
or
xor
das
nop
sub
sub
popf
mul
fist
jmp
shr
loop
mov
stos
loop
test
add
jnp
cmp
xchg
(bad)
data16
shr
ror
pop
inc
out
cmp
in
stc
xor
(bad)
adc
cmp
mul
outs
mov
sbb
jb
mov
mov
(bad)
mov
mov
pop
xor
jb
adc
xor
gs
sbb
mov
iret
push
dec
shl
jl
(bad)
mov
adc
push
sbb
pop
push
retf
push
aaa
jno
inc
popa
popf
pop
adc
outs
sub
popf
xor
(bad)
add
adc
movs
dec
retf
add
mov
shl
mov
mov
aaa
imul
push
cmp
es
jnp
(bad)
pop
lods
(bad)
adc
lock
jmp
mov
jns
ss
aas
xchg
sub
repz
mov
addr16
scas
sub
leave
push
inc
cmps
arpl
sbb
xlat
add
pop
or
dec
xor
mov
pop
adc
test
cmp
sub
arpl
(bad)
and
stos
inc
push
pop
out
dec
mov
ret
inc
nop
dec
jns
adc
rol
out
inc
pop
mov
pop
sbb
es
jae
outs
mov
jmp
int3
pop
shr
sbb
stc
adc
or
ja
jnp
fcmovu
iret
retf
icebp
leave
jae
das
mov
push
mov
mov
addr16
mov
cmp
dec
push
adc
(bad)
jnp
lds
push
inc
xchg
inc
aas
and
and
stos
jnp
inc
push
in
mov
mov
push
mov
int
cmp
ror
mov
retf
jns
xor
mov
inc
xchg
pop
mov
push
les
xchg
pop
cmc
inc
and
jecxz
adc
in
xor
pop
xor
add
adc
rcr
add
or
push
popa
add
jecxz
(bad)
jo
out
sbb
mov
(bad)
cmps
lods
pop
pop
pop
jmp
rol
mov
sub
arpl
push
test
std
call
(bad)
mov
jmp
aad
out
jne
rol
jle
or
stc
mov
cdq
daa
sbb
cmp
ja
mov
in
neg
imul
je
inc
adc
mov
adc
jbe
cmp
and
imul
jae
leave
adc
push
ds
pop
jl
aam
xchg
pop
(bad)
jmp
mov
ins
xor
adc
aas
adc
scas
out
inc
rcr
add
scas
dec
(bad)
aam
test
inc
shl
mov
push
add
pop
popa
jbe
std
xor
push
out
push
push
in
xor
fs
cmp
in
hlt
test
pop
pop
mov
sub
test
cdq
fst
mov
xchg
jge
pop
mov
sti
es
out
out
aad
retf
push
jmp
add
popa
in
push
mov
cs
add
and
dec
push
add
jns
cmps
aad
pop
out
cmp
sub
std
mov
rcr
jle
sub
mov
pop
dec
cmp
cs
dec
jge
pop
cmp
sbb
dec
cmp
dec
pop
jp
sub
pop
ja
or
lock
arpl
push
test
sbb
shr
int
jnp
into
lahf
jle
adc
mov
jl
xor
jo
das
int3
repnz
ret
cmp
dec
ins
pop
cmp
call
into
into
hlt
adc
xchg
repnz
adc
jl
or
mov
xchg
cmc
test
std
popf
hlt
cwde
sbb
leave
xor
fs
ror
(bad)
jge
adc
int
test
inc
lods
sub
sbb
ret
pop
jp
out
sub
pop
jecxz
inc
push
adc
dec
add
or
inc
pop
push
cs
mov
fs
sub
dec
aad
xor
and
adc
jb
dec
sbb
sbb
into
fild
or
pop
add
push
retf
dec
dec
jecxz
mov
mov
mov
xchg
outs
inc
fs
or
jns
fisttp
mov
mov
ins
xor
add
retf
cmp
sub
addr16
data16
lahf
push
outs
inc
inc
jmp
sub
add
mov
sub
fistp
mov
scas
fisub
inc
aaa
xchg
jg
js
push
cmp
cmp
jecxz
jae
mov
jl
mul
sbb
add
sub
enter
pop
(bad)
xor
sub
lea
(bad)
out
pop
imul
imul
cmp
and
cmp
inc
xor
push
mov
dec
int3
mov
pop
mov
(bad)
out
daa
adc
pop
hlt
jg
xor
aam
dec
and
mov
cwde
jl
int3
inc
cmp
popa
mov
cmps
or
pop
add
aaa
call
pop
cmps
jo
fstp
pop
in
sbb
push
pop
or
test
repz
scas
inc
in
adc
mov
or
jns
pop
or
mov
leave
xchg
fs
inc
adc
not
pop
or
lds
ins
mov
mov
push
push
jb
pop
lahf
adc
inc
adc
out
jmp
mov
div
cmovns
jle
leave
push
faddp
lds
inc
sti
cdq
lods
repnz
cmp
movs
dec
push
(bad)
adc
xor
repz
xlat
enter
data16
pop
mov
dec
fidivr
rcr
sub
mov
call
push
out
fcmovb
jae
(bad)
jns
dec
inc
pop
and
iret
xor
mov
inc
pop
adc
adc
fst
out
sbb
imul
pushf
ret
pop
add
or
in
mov
and
push
movs
es
(bad)
xor
pushf
xor
fmul
adc
dec
add
sub
mov
adc
xchg
cmps
(bad)
xchg
mov
fidiv
loopne
aas
clc
nop
(bad)
push
cmp
jmp
xor
xchg
shr
and
(bad)
scas
or
mov
lods
sub
(bad)
mov
xchg
rcl
ss
cmp
xlat
out
fcom
inc
inc
nop
(bad)
xor
outs
ja
sbb
lahf
sub
jnp
neg
cmp
mov
shl
xlat
jo
mov
sbb
lds
popa
(bad)
addr16
add
pop
mov
imul
inc
jmp
rcl
aas
in
stc
fstp
cmp
xor
add
sub
sar
push
xchg
retf
fnsave
xchg
fidivr
in
ins
(bad)
mov
fiadd
mov
sbb
mov
pop
jno
mov
cld
and
jne
adc
push
jbe
clc
and
xchg
push
add
jp
pop
int3
mov
or
in
dec
rcr
out
cmp
js
adc
push
lods
movs
sbb
dec
adc
adc
lahf
rcr
inc
aaa
mov
ja
sbb
and
(bad)
jmp
pushf
sub
jl
dec
push
stc
mov
inc
icebp
iret
repz
adc
add
xor
ja
inc
test
cmp
adc
add
mov
shl
pop
lock
cmp
xchg
push
call
dec
ror
or
lock
scas
rcr
xchg
pop
cwde
xor
iret
sbb
and
push
std
add
pop
xor
in
lahf
xor
inc
jp
(bad)
pop
or
mov
sbb
and
mov
xchg
jmp
mov
xchg
fcomp
ror
iret
call
mov
and
dec
aad
push
shr
xchg
pop
pop
rcr
mov
mov
les
cmp
test
fcmovbe
icebp
add
mov
cwde
push
cmp
xor
movs
psrlw
xchg
ja
fldcw
pop
icebp
fmul
jmp
es
(bad)
mov
xor
js
sub
and
pop
or
gs
sub
add
cmp
xor
mov
outs
lods
push
sub
sub
xor
movs
cmps
push
mov
xchg
iret
sub
dec
push
xor
pop
mov
xchg
cmp
xlat
test
push
rcr
(bad)
lock
fs
aas
and
je
inc
cmp
sahf
jmp
inc
fldcw
xchg
mov
ja
jg
cmp
or
adc
imul
lods
cmp
or
cdq
cmp
xchg
inc
rcl
dec
xor
mov
nop
and
adc
jp
cmps
call
or
jg
xor
out
cmps
or
mov
pop
aas
retf
cmps
js
imul
jno
jg
push
frstor
mov
push
push
movs
inc
sbb
sub
dec
xor
xchg
sbb
gs
or
leave
pop
mov
and
clc
jge
inc
mov
push
pop
mov
push
cmps
js
add
retf
xchg
inc
nop
jecxz
add
ja
mov
popf
pop
cmps
test
popf
sbb
mov
pop
and
(bad)
out
cmp
mov
cmp
test
mov
ret
xor
jmp
cmps
outs
inc
add
fdivr
lea
ficomp
pop
push
pop
scas
dec
ficom
push
fnstcw
mov
cmps
jge
push
push
sti
mov
ins
mov
add
mov
repnz
dec
or
jo
mov
mov
xor
jmp
xor
ret
popf
test
les
xchg
pusha
cmc
loopne
dec
push
cdq
shl
das
pushf
sub
scas
dec
call
sbb
cmp
push
adc
movs
sbb
inc
sbb
imul
xchg
in
lods
pushf
cmp
out
pop
xchg
call
and
jne
sbb
(bad)
mov
xchg
les
mov
(bad)
vphaddwq
movs
adc
pop
in
pop
clc
push
and
hlt
cmps
jmp
pop
pop
test
inc
mov
cwde
xchg
mov
rcl
sbb
and
mov
xor
popf
in
test
pop
mov
cwde
int3
ins
fs
cmp
push
ds
push
std
xchg
dec
and
push
fnsave
dec
inc
data16
xor
jo
push
lahf
push
fbstp
sbb
jne
xlat
js
push
outs
jb
addr16
fs
test
lods
cmc
movs
je
fucomi
cmp
push
mov
mov
pop
les
fld
jp
daa
xor
aam
call
mov
sahf
fcom
jne
add
cmp
mov
mov
mov
js
add
jae
or
cmp
inc
daa
nop
or
(bad)
xchg
or
dec
mov
jmp
push
ins
(bad)
xor
fild
popa
push
cmp
stos
sub
iret
lea
pop
pop
cmp
and
push
xor
dec
mov
and
aam
adc
jg
gs
js
inc
cmp
sub
add
shl
popa
movs
ror
jmp
cdq
sbb
(bad)
mov
in
ror
cli
push
push
fidiv
add
and
loop
ret
xchg
ja
mov
lods
icebp
jmp
retf
jp
cmp
sbb
mov
sar
es
dec
mov
lds
push
dec
jmp
jge
xchg
xchg
loopne
push
jmp
sub
pop
(bad)
rol
ror
ret
and
mov
sub
fsub
cmp
loope
imul
push
pop
repnz
fdivr
push
lods
xor
dec
(bad)
mov
shl
mov
jmp
inc
dec
loope
cmp
shl
inc
(bad)
sti
xchg
das
xchg
push
bnd
add
jmp
and
retf
push
xor
in
and
data16
dec
add
aaa
ret
push
pop
push
icebp
scas
sub
mov
aas
sub
push
jae
jge
retf
sub
(bad)
imul
pop
or
inc
nop
sub
or
test
jns
loopne
mov
stc
xor
push
fbstp
sbb
std
fld
add
test
push
cmp
xor
scas
push
out
xchg
ins
adc
les
fs
aad
and
sub
sbb
scas
fiadd
cmps
xchg
jno
addr16
ss
cmp
push
popa
and
sar
(bad)
jnp
lea
stc
aam
push
push
add
in
sbb
outs
add
and
jmp
add
add
enter
sbb
sub
mov
je
test
mov
cmp
xchg
inc
jbe
xor
jns
or
cmp
rol
mov
push
ja
outs
pop
pushf
mov
jno
mov
or
fsub
pop
xchg
xor
dec
pop
adc
jne
loop
cmps
pop
in
dec
xchg
ficomp
fmul
or
lahf
ror
and
cmp
dec
pop
adc
aas
xchg
xchg
adc
push
ficom
dec
pop
out
in
fwait
(bad)
or
into
dec
sub
ffreep
fld
xlat
jns
pop
mov
pop
repnz
pop
shl
ins
in
repnz
stos
jae
pop
adc
push
imul
inc
mov
adc
test
cmp
xchg
into
sub
icebp
jbe
in
mov
jno
retf
mov
int
xor
sub
movs
cmp
cmp
xlat
bound
rol
inc
or
loope
xchg
fadd
imul
mov
fs
loopne
mov
add
neg
(bad)
fidiv
jo
retf
loopne
mov
test
bound
xchg
pop
push
pop
out
cld
fistp
outs
rcl
xor
sbb
xchg
pushf
push
mov
hlt
mov
aam
jmp
push
jmp
leave
lods
cmp
aas
enter
xchg
out
pop
dec
cmp
xor
inc
fst
dec
test
xchg
pushf
push
push
fs
add
push
movs
add
rcr
leave
pop
push
push
rol
fldcw
out
push
stos
inc
adc
xchg
push
push
aas
loope
mov
mov
mov
test
xchg
pop
enter
xor
adc
inc
jo
nop
sub
loopne
das
fwait
int
test
js
mov
cmp
js
dec
movs
mov
scas
data16
mov
xlat
loop
cmp
jnp
cmp
cwde
fnstcw
dec
inc
mov
jp
jno
push
cmps
mov
in
mov
jl
mov
int
clc
push
test
jge
push
mov
mov
and
in
inc
jne
shl
push
sub
out
stc
fistp
cmp
dec
ret
push
mov
dec
sub
xchg
hlt
dec
xchg
into
repnz
mov
sub
pushf
dec
repz
pop
aad
and
lods
jmp
mov
mov
popa
cmp
out
mov
pop
(bad)
icebp
das
paddusw
jae
dec
int
lods
push
cwde
int
enter
inc
rcl
lds
or
das
test
rcr
call
xchg
jne
push
mov
adc
inc
test
stc
and
push
xor
jg
outs
movs
ret
adc
dec
fxch
mov
xor
gs
xchg
sub
add
ret
aad
inc
nop
push
ds
and
xor
mov
mov
push
jge
cmovno
imul
pop
(bad)
mov
stos
idiv
loopne
dec
pop
pop
mov
icebp
add
push
xchg
bound
out
fsubp
(bad)
scas
ret
data16
aas
push
ret
ins
pop
sub
inc
dec
sete
fadd
sbb
dec
int
(bad)
fst
ja
fsub
stos
sub
(bad)
and
dec
movs
or
mov
and
jmp
pop
or
dec
aam
jmp
jb
sub
inc
sub
mov
mov
xchg
in
jmp
loop
cmp
inc
div
out
cmp
fist
and
and
stos
fmul
add
outs
cwde
mov
scas
jmp
movs
lahf
shr
lahf
repz
(bad)
retf
jl
xchg
mov
inc
jp
pop
cmp
cmps
test
outs
rcl
adc
adc
mov
xor
dec
popa
loop
push
rol
retf
aad
fisub
cmp
sbb
fistp
and
fwait
jl
pop
lds
imul
xor
push
repz
mov
dec
(bad)
repz
leave
inc
mov
push
pop
xor
mov
or
dec
xorps
dec
pop
repnz
das
adc
pop
xor
jo
bound
dec
clc
ins
xchg
cmp
inc
stc
test
(bad)
cmp
(bad)
repnz
sub
inc
fmulp
les
add
sbb
(bad)
mov
push
add
repz
dec
test
dec
int
pop
pop
adc
push
and
push
(bad)
mov
ss
xchg
push
fbstp
in
add
push
and
inc
mov
in
jbe
pop
inc
je
ss
hlt
jns
push
pop
cmc
addr16
xchg
paddsw
mov
mov
jnp
jle
inc
inc
test
adc
mov
xchg
mov
loop
sub
das
inc
sub
push
mov
scas
out
cmp
pop
jne
imul
push
aam
mov
loop
cmp
add
lods
shl
call
(bad)
pop
loop
test
jecxz
dec
jp
cwde
inc
fwait
push
jmp
push
in
jg
xor
ins
test
push
mov
mov
ja
out
mov
inc
sub
int3
adc
push
sbb
aam
dec
and
xor
cdq
mov
cmp
mov
iret
adc
movs
pmuludq
pop
cdq
push
icebp
dec
scas
adc
mov
mov
repnz
dec
(bad)
xchg
ds
add
rol
adc
cmp
pop
mov
jmp
cmp
sub
jbe
icebp
aad
jl
leave
stos
or
inc
icebp
pop
push
fs
neg
je
gs
sub
retf
nop
cmp
je
or
imul
dec
xchg
enter
add
int
xor
(bad)
ins
call
ror
xor
fst
and
push
sar
imul
stc
jecxz
xchg
mov
push
or
mov
iret
ror
adc
cmc
and
mov
lds
nop
jge
pushf
movs
mov
push
inc
fcmovnb
pushf
pop
lahf
xor
pop
push
fmul
in
fisubr
sub
leave
mov
fild
inc
js
mov
mov
pop
dec
jmp
mov
stos
mov
clc
push
jle
add
rcl
daa
int3
ss
iret
mov
fiadd
retf
and
jne
pop
jmp
jecxz
enter
call
push
pop
ss
(bad)
outs
ins
rcr
xor
cmp
add
dec
(bad)
mov
or
imul
dec
xchg
out
adc
dec
(bad)
cmps
shr
cli
xor
jmp
(bad)
add
mov
jge
pop
pop
xchg
sbb
(bad)
bnd
iret
lea
add
(bad)
push
ficomp
out
ret
movs
rcr
xor
inc
sbb
jmp
scas
mov
popa
mov
sbb
jae
sub
xor
push
not
sbb
mov
cmp
ds
pop
push
adc
ret
push
xchg
clc
and
sbb
sub
cmc
pop
add
shr
push
and
(bad)
xchg
xor
aaa
push
push
popa
adc
jne
gs
arpl
loopne
(bad)
jmp
or
inc
sbb
hlt
xor
push
rcr
mov
adc
sub
push
das
xor
jmp
push
sub
dec
shl
jge
leave
ret
mov
inc
jne
mov
addr16
jo
ret
jns
dec
enter
cwde
repz
mov
jns
retf
jae
int3
fsub
sub
sub
push
std
enter
sub
ror
push
(bad)
sub
cmps
xchg
(bad)
xor
dec
sti
js
sbb
shl
popa
ror
ins
push
inc
fist
cwde
xor
clc
addr16
inc
jecxz
fnstenv
mov
inc
mov
jle
sbb
outs
rcr
gs
xchg
das
mov
cdq
cmp
cmp
pop
sub
mov
add
rcr
lahf
int3
shr
stc
pop
push
rcr
mov
fsubp
jp
fucomp
push
xor
mov
daa
aas
cwde
ss
stos
ins
pop
adc
sub
adc
add
jp
daa
loop
and
xchg
add
out
mov
add
es
test
imul
cmp
sbb
push
pop
cmps
loop
add
pop
test
xchg
pop
test
pop
jp
and
mov
sbb
mov
push
sbb
add
aaa
cmp
sbb
sub
xchg
pop
inc
cmc
dec
xor
mov
ja
or
fidivr
int3
in
jmp
icebp
push
dec
arpl
call
test
push
jp
xchg
test
mov
pop
xor
mov
fadd
push
pop
push
nop
ficomp
jo
jmp
pop
mov
or
add
cs
repnz
add
test
sub
loope
jg
jge
and
or
inc
imul
pop
sub
fidivr
lea
jno
iret
repz
xor
and
mov
pop
scas
out
retf
and
arpl
pop
pop
xchg
ret
neg
push
into
mov
rcr
(bad)
fcomp
pop
(bad)
sub
cmp
test
push
cmp
in
push
cmp
xchg
out
pusha
and
sub
scas
ins
in
retf
test
add
hlt
cmp
adc
inc
pushw
inc
fld
shr
jl
fstp
movs
xchg
xchg
(bad)
xor
ss
sbb
(bad)
pop
out
jns
sub
jecxz
in
data16
xor
(bad)
daa
xor
shr
dec
stos
cmp
stos
and
jmp
test
fdiv
fidiv
mov
dec
outs
jmp
in
cmp
adc
mov
in
fwait
movntps
in
lea
mov
sub
xchg
in
ins
dec
adc
dec
cld
sbb
xlat
and
cmps
mov
ins
jl
or
and
or
clc
sub
sub
push
les
jge
sub
aaa
icebp
loope
sbb
xchg
or
aaa
jle
retf
fadd
jecxz
push
inc
ins
cmp
stos
ret
ret
mov
cmc
mov
shl
jp
out
mov
hlt
xor
fild
xor
lock
xlat
fcomip
push
pop
and
clc
(bad)
jl
mov
ret
fwait
jmp
xchg
sub
push
aam
adc
jo
js
ja
cmp
push
pop
fs
mov
pushf
adc
lahf
lods
adc
inc
cmp
jecxz
sbb
mov
imul
sti
mov
lahf
xor
mov
repz
mov
mov
xor
pop
imul
xchg
fs
cmps
mov
es
pop
cmps
nop
jb
vshufps
jge
stos
sub
call
xor
rol
dec
js
inc
mov
lea
loope
or
add
ins
cli
sbb
jge
xor
and
or
hlt
jnp
jecxz
sahf
cmp
inc
xchg
into
das
dec
dec
xor
test
mov
(bad)
xor
or
dec
mov
ds
inc
dec
mov
mov
test
cmp
mov
pop
mov
jae
mov
sub
xor
and
pop
xchg
repnz
call
ror
movups
sar
pop
adc
inc
ror
sar
sbb
(bad)
jg
xor
push
das
jnp
jg
xchg
fucomi
xchg
dec
mov
pop
mov
mov
push
ror
cwde
pop
int
lea
cld
aas
ftst
sbb
aad
or
xor
mov
daa
cmp
cld
pop
aad
adc
cmp
pop
or
aas
bound
adc
sahf
sbb
jb
sti
aam
jnp
push
xor
cmp
test
dec
cli
push
sub
add
leave
rcr
and
int3
sbb
adc
jl
aam
dec
mov
icebp
cdq
jl
sub
adc
mov
(bad)
sbb
adc
clc
hlt
scas
jb
cld
cwde
(bad)
cld
movs
div
ret
push
nop
adc
adc
sub
xor
mov
js
mov
clc
adc
and
popa
addr16
ins
psadbw
ins
imul
push
(bad)
vmread
fdiv
addr16
lods
popf
call
mov
jle
jl
xor
add
fidivr
dec
mov
aaa
push
iret
movs
jne
fld
in
out
imul
sub
test
adc
xchg
xor
push
sbb
fcmovbe
out
hlt
sub
hlt
(bad)
ins
sub
pop
les
cmp
stc
add
xchg
inc
int3
(bad)
gs
clc
jne
mov
pop
ja
xor
pop
mov
aad
cld
adc
and
daa
adc
outs
adc
pop
rol
xchg
push
ds
into
adc
jmp
loop
mov
repz
out
ja
adc
add
adc
dec
sbb
pop
nop
inc
das
repnz
cmps
dec
jbe
dec
mov
(bad)
das
rcr
movs
and
sbb
dec
test
cmc
inc
inc
scas
dec
add
aad
mov
cmp
push
xchg
xchg
inc
hlt
xchg
push
fisttp
pushf
cmp
mov
cmp
jle
stos
outs
cmp
or
dec
adc
pop
mov
cmps
sub
xor
push
das
add
jecxz
dec
test
xlat
scas
jnp
xchg
adc
fs
test
mov
pop
or
lods
loop
cmp
xor
pop
cmp
call
jns
jg
xor
icebp
in
call
dec
retf
dec
leave
inc
es
sub
neg
repz
mov
add
push
pushf
mov
or
daa
jge
push
xor
gs
fmul
inc
adc
es
jmp
cmp
sbb
jno
pop
aaa
push
aas
or
loopne
adc
sbb
sbb
shl
cmp
push
dec
icebp
ret
mov
and
xchg
icebp
outs
xchg
ss
push
cmp
rcl
dec
sbb
popf
add
into
int
cmc
(bad)
or
aam
int3
jnp
enter
cdq
or
inc
cmp
xchg
cmp
out
outs
jbe
jmp
in
push
dec
dec
dec
test
mov
xchg
mov
xor
in
push
pop
cmp
mov
xchg
dec
inc
sbb
imul
int3
arpl
mov
adc
mov
scas
fdivr
iret
and
call
mov
cmps
popa
test
mov
cmp
inc
and
push
push
jb
dec
jg
push
adc
in
loopne
mov
mov
lock
pop
xor
inc
sbb
popf
push
mov
inc
jle
xchg
sbb
xchg
loop
inc
sbb
cmp
sti
mov
mov
add
and
bound
(bad)
mov
push
fsubr
pop
xchg
(bad)
mov
ret
jnp
jl
pop
out
or
jns
lods
ss
in
and
iret
mov
and
les
jne
mov
mov
sub
cli
out
in
popf
add
pop
inc
les
clc
sbb
imul
or
jmp
adc
rcl
add
mov
ins
inc
pop
push
mov
ins
pop
mov
push
mov
or
xchg
int3
imul
ins
cdq
data16
push
lods
es
shl
push
jae
push
xor
fstp
and
inc
(bad)
(bad)
out
movs
jge
cmp
repz
push
inc
retf
mov
ins
pop
jo
push
loope
test
and
ror
cmp
hlt
adc
pop
sahf
test
rcr
inc
and
call
sbb
or
and
push
pop
mov
pop
test
test
dec
dec
cmp
ret
cld
pusha
pop
pusha
xchg
pop
std
cdq
jo
fcom
shl
push
xor
ror
repz
aas
dec
xchg
mov
dec
jnp
mov
cmp
jmp
cmp
mov
call
add
mov
pop
xor
push
mov
lahf
cdq
pusha
aas
inc
fmul
mov
cmp
scas
ins
loopne
push
mov
xchg
aad
inc
xchg
xor
push
mov
aaa
sbb
rol
sub
pop
movs
popf
test
cmp
cmp
popf
lods
ds
loopne
push
push
inc
cli
inc
pop
mov
and
mov
inc
xchg
vpaddsw
mov
pop
jge
shl
aas
outs
js
jbe
pop
add
cmp
pop
das
add
out
(bad)
pusha
adc
es
sbb
retf
push
(bad)
sti
fdivr
mov
jmp
or
loope
pop
repz
inc
mov
repnz
bound
ins
xchg
mov
pop
cwde
adc
arpl
mov
jno
pop
mov
mov
sub
add
adc
mov
rol
(bad)
mov
(bad)
jmp
outs
sub
or
retf
int3
pop
sti
pcmpgtb
adc
call
sar
push
cdq
inc
aad
int3
cdq
adc
nop
ins
sub
xor
iret
enter
(bad)
lods
xchg
mov
test
enter
fwait
add
ins
test
push
dec
jg
fmulp
rcr
aas
movs
shl
cmc
jae
push
mov
sbb
aaa
lds
stc
add
and
mov
add
xchg
push
retf
jmp
fsub
mov
push
hlt
daa
mov
cs
inc
ret
lahf
pushf
dec
fild
stos
stos
popf
mov
out
test
xchg
je
push
imul
outs
push
sti
aad
das
lds
nop
nop
scas
or
sbb
jl
lds
dec
rol
adc
push
xor
pusha
dec
mov
dec
jne
mov
and
(bad)
(bad)
xchg
add
cmps
pop
jmp
mov
int
jg
rdtsc
adc
xchg
bound
inc
xlat
ret
div
dec
sub
push
aad
add
push
clc
pop
(bad)
out
add
cmp
mov
ins
push
repnz
add
(bad)
mov
sti
dec
aaa
xor
mov
stc
fdiv
sti
loop
retf
dec
loope
mov
mov
pop
pop
mov
xor
cmc
hlt
push
sub
jl
lds
sub
cmps
inc
and
scas
inc
loopne
xor
push
dec
addr16
xlat
mov
adc
cmc
adc
sbb
sub
jmp
retf
pop
pop
mov
mov
mov
and
push
fstp
pop
or
test
mov
(bad)
add
mov
dec
sub
xchg
nop
jne
enter
or
xchg
fdiv
jns
popa
xchg
clc
dec
mov
fstp
sbb
jne
pop
jne
int3
sub
stos
idiv
int3
ret
test
xor
or
fcom
test
mov
mov
sbb
mov
push
jg
mov
inc
add
xchg
fbstp
pop
lea
loopne
shl
push
xchg
pop
inc
movs
enter
mov
xchg
jmp
and
daa
aad
out
cmc
xor
mov
aas
stc
lods
sub
rcl
jae
in
push
leave
mov
movs
in
sub
sbb
xchg
pusha
jo
sub
or
mov
sar
xor
psllq
xor
(bad)
out
sbb
cmc
ins
sub
test
sbb
cmps
sub
dec
push
bound
imul
addr16
ss
(bad)
inc
mov
fsub
enter
in
fild
or
pop
mov
icebp
ss
pop
push
sub
pop
pop
xchg
fiadd
sub
lock
pop
jp
sti
dec
fsubr
shl
and
cmp
loopne
test
cld
sahf
not
fldenv
or
repz
push
popa
mov
mov
mov
mov
clc
mov
pop
in
cmp
popa
cmp
aad
or
or
icebp
and
and
lods
mov
and
std
lahf
sbb
pop
cmps
or
dec
pop
popa
pop
fld
jne
cmp
xchg
lds
adc
jle
add
push
test
mov
stos
lea
add
sub
repnz
sbb
ficom
mov
sub
scas
rol
xor
jle
nop
ret
loopne
ret
into
xor
dec
repz
sub
or
(bad)
aas
cmp
add
mov
lahf
sar
mov
jge
mov
and
and
jle
mov
cmp
int3
aas
dec
dec
sti
loop
adc
sub
mov
mov
pop
sub
stos
xchg
add
add
mov
int
sub
jecxz
sbb
or
mov
int3
ret
or
lock
add
jnp
js
jp
ret
push
and
jg
popf
mov
enter
dec
fistp
dec
lds
std
xchg
pop
dec
jecxz
ror
or
add
mov
pusha
jle
jno
mov
sbb
fisubr
dec
data16
data16
jge
in
into
scas
jmp
jge
imul
or
jne
sbb
and
inc
lds
xor
cmc
cmps
sub
adc
pop
aad
jl
(bad)
push
dec
push
enter
arpl
sbb
xor
out
inc
mov
jl
xchg
leave
jno
sbb
(bad)
adc
or
repnz
pop
xor
mov
repz
pop
stc
mov
das
push
inc
jp
mov
call
aad
dec
out
(bad)
xlat
push
fistp
out
out
push
lds
sar
mov
add
imul
push
shr
or
les
jp
push
retf
ret
xor
fsubr
pop
fdiv
lock
dec
mov
scas
dec
mov
ja
mov
fstp
imul
adc
cmp
mov
cmps
ja
sub
jl
mov
push
cmps
(bad)
mov
mov
xchg
jae
ss
mov
adc
bound
nop
sub
pusha
dec
test
and
ss
push
iret
mov
outs
pop
add
ret
adc
frstor
dec
test
mov
jns
push
adc
mov
mov
icebp
out
(bad)
jo
dec
mov
neg
repz
and
xchg
xchg
mov
mov
lds
and
and
pop
loop
aaa
pop
retf
sbb
xor
imul
rol
nop
push
ror
repnz
sbb
outs
shr
sub
and
cld
arpl
fcom
out
aaa
cdq
loopne
ret
dec
movs
nop
out
loop
push
sub
das
mov
out
mov
jne
loopne
or
lds
movs
push
in
aas
add
pop
and
dec
lods
into
adc
scas
ficomp
aas
dec
loop
(bad)
adc
dec
cmp
add
iret
dec
xchg
and
xchg
or
push
dec
xabort
push
dec
xor
test
pop
push
xchg
stos
mov
add
cmp
adc
xchg
test
mov
ss
(bad)
xchg
sub
adc
cmps
ror
lds
not
cmps
cmp
mov
stos
out
push
add
mov
dec
cwde
xchg
pop
dec
int3
ret
xor
movs
pop
icebp
out
popa
fiadd
in
push
pop
mov
dec
(bad)
pop
aad
cmp
adc
movs
jnp
out
sbb
fcom
call
dec
cmp
(bad)
mov
push
push
mov
sbb
sub
call
dec
jno
mov
or
xlat
mov
cli
push
loope
movs
es
arpl
jmp
or
xchg
sbb
gs
das
mov
mov
test
or
(bad)
fist
xchg
stos
cmp
popa
outs
xchg
dec
mov
(bad)
fisub
shr
jecxz
aas
or
popf
inc
retf
jne
mov
sub
ins
stos
or
or
mov
jp
pop
shl
sbb
pop
mov
mov
mov
imul
push
pop
dec
icebp
(bad)
push
rol
mov
jns
cld
nop
inc
xor
test
dec
ror
frstor
inc
sahf
inc
test
stos
xchg
mul
mov
xchg
out
clc
jmp
add
into
lods
sbb
sbb
and
jp
ror
(bad)
rol
js
aas
push
xor
pushf
sub
mov
test
scas
js
fwait
popf
xlat
in
std
js
xor
mov
mov
pop
adc
imul
int
mov
call
adc
(bad)
hlt
fdivp
xchg
outs
mov
cmp
mov
pop
js
ror
vshufps
imul
in
test
int3
popf
jecxz
push
xchg
push
cmp
loop
loope
jbe
add
jno
mov
les
xchg
dec
mov
addr16
pop
sub
(bad)
imul
fild
dec
es
ins
in
cmps
clc
pop
mov
lods
mov
fnstsw
jge
sar
lods
xor
fwait
xchg
xor
mov
test
push
push
pushf
sar
pusha
(bad)
call
jmp
int
xchg
mov
rcl
(bad)
mov
dec
enter
cmp
and
mov
jecxz
or
sbb
add
lods
or
mov
fld
jne
jmp
push
pop
rcr
aam
sti
pop
and
push
adc
popa
les
fs
lods
jmp
int
inc
lods
pop
ret
or
add
pop
not
cmp
fidiv
pushf
xor
or
cmp
jmp
adc
pop
dec
dec
pop
not
mov
sbb
cmc
aaa
mov
sbb
jmp
retf
(bad)
frstor
jno
fisttp
aaa
rcr
sub
mov
push
dec
pop
dec
xchg
test
in
mov
pop
in
xlat
fdivr
cmps
loopne
out
mov
arpl
cmp
rcr
gs
cmp
ret
xchg
mov
retf
jae
jnp
sub
push
push
mov
dec
retf
inc
pop
leave
arpl
sbb
adc
lea
xchg
xchg
or
(bad)
scas
lods
pop
in
aad
call
je
push
xchg
fs
xchg
jg
cmps
test
jo
sahf
jae
pop
jecxz
adc
sahf
adc
add
jmp
mov
(bad)
mov
cmc
js
pop
leave
cmps
ja
nop
pop
arpl
mov
sub
inc
xchg
test
push
push
fistp
or
jge
lds
xchg
popf
std
data16
ror
xchg
xchg
sub
mov
loopne
cmp
movs
mov
ins
cwde
add
pop
cmc
dec
das
jecxz
mov
icebp
into
cmc
dec
cmp
add
jo
jae
dec
lds
xor
lds
xor
push
outs
icebp
mov
ficom
xlat
lods
je
std
arpl
mov
or
or
mov
sub
ins
xor
rol
je
xchg
outs
retf
call
or
and
cmc
sub
iret
xor
fs
test
add
test
loopne
add
adc
mov
and
jl
mov
stos
imul
in
div
(bad)
push
(bad)
jno
push
dec
and
dec
rcl
in
rol
mov
ss
pop
xor
or
int
sahf
push
dec
cmps
xchg
ds
mov
sti
sub
cmp
push
push
mov
jecxz
out
imul
imul
mov
cmp
adc
inc
aam
xchg
arpl
outs
repz
pop
lods
popa
push
jecxz
cdq
inc
add
repz
sub
scas
pop
aaa
jle
pop
ret
or
mov
out
pop
in
pop
repnz
hlt
gs
sbb
lock
in
dec
and
sbb
das
adc
and
retf
adc
jge
movs
cdq
imul
mov
mov
mov
call
shr
push
(bad)
jp
cdq
dec
jg
pop
shrd
inc
sub
pop
dec
nop
sub
inc
pop
retf
jl
fist
dec
(bad)
(bad)
sub
xor
mov
jnp
mov
and
test
out
loopne
out
and
push
and
test
push
std
pop
rol
(bad)
lds
xor
mov
push
scas
ror
jne
inc
mov
cwde
pushf
cmc
scas
fcom
dec
test
shl
call
or
in
mov
xor
test
test
mov
aaa
adc
jg
not
sub
cwde
shl
mov
pop
and
adc
stc
xor
out
nop
inc
lock
lods
stc
out
mov
jne
sbb
mov
inc
cmp
mov
push
mov
addr16
in
repz
sbb
js
lods
movs
adc
jl
adc
mov
repnz
cwde
and
(bad)
mov
xchg
cmp
jge
inc
mov
shl
popa
and
push
in
jnp
xchg
mov
rcl
enter
mov
cld
push
xchg
push
push
push
xchg
loop
iret
fisub
in
mov
fnsave
in
push
push
push
cmp
lock
outs
xchg
out
and
cs
lock
adc
cmp
je
sahf
mov
sub
pop
sbb
in
test
call
outs
(bad)
sub
fcomip
daa
daa
cmc
cs
aad
stos
arpl
in
imul
test
jae
fild
cwde
sub
sbb
sbb
rcr
and
ret
jbe
dec
popa
inc
xlat
scas
push
jl
daa
or
mov
aaa
mov
in
add
dec
fcomp
outs
(bad)
or
ret
sbb
cli
shr
inc
daa
mov
shl
xchg
jge
push
add
jno
ds
adc
movs
int
cmps
and
push
dec
xchg
cmp
scas
data16
pop
mov
sub
push
sub
add
mov
jae
imul
xor
inc
pop
mov
fistp
in
iret
(bad)
cmps
mov
and
in
fnsave
lock
and
xchg
add
into
fcomp
sar
dec
jno
xchg
jecxz
adc
fdiv
aad
pop
repz
dec
fld
xchg
retf
jbe
adc
inc
ret
shl
sub
es
mov
fld
xchg
fistp
cmp
leave
ins
mul
xchg
inc
xor
and
mov
es
mov
lods
xchg
xor
pop
repz
mov
leave
js
clc
mov
mov
add
es
out
or
inc
mov
xchg
xchg
ret
push
lahf
sar
xor
cld
dec
dec
div
or
mov
jecxz
shl
pop
mov
(bad)
jb
jnp
les
xor
movs
cmc
mov
ja
icebp
sbb
out
adc
cwde
cli
bound
ss
cdq
ret
ss
jmp
nop
mov
cmps
(bad)
call
sub
out
add
pop
call
test
fist
in
mov
popf
aad
sub
mov
push
push
sbb
jp
test
(bad)
js
and
mov
mov
xchg
cwde
sub
mov
sbb
jns
add
pop
fmul
xchg
mov
(bad)
ins
mov
pop
sbb
cmp
xchg
inc
and
cs
int
pop
es
(bad)
in
cdq
shl
push
in
outs
sbb
xchg
mov
adc
js
repnz
retf
cmps
pusha
push
push
jno
out
add
or
ret
mov
jne
mov
mov
mov
mov
gs
cmp
adc
stc
jnp
jns
arpl
pop
add
push
pop
test
add
popa
stos
and
shr
fs
fld
(bad)
(bad)
inc
lock
jo
sbb
in
jl
cli
add
mov
xchg
adc
rcl
cmp
cmp
jo
mov
retf
jmp
push
ss
cmp
in
neg
push
cld
xchg
push
mov
into
mov
js
in
mov
daa
pop
(bad)
and
gs
loopne
stos
inc
stos
(bad)
movs
xor
inc
fistp
retf
mul
sbb
sbb
jnp
in
xor
imul
cmp
cld
lds
or
mov
or
dec
sub
pop
js
ret
mov
inc
imul
push
or
(bad)
loope
iret
lods
inc
push
xor
inc
push
jno
lahf
adc
fbld
xchg
lock
outs
lods
push
mov
mov
jae
fsub
cmps
arpl
add
xor
je
in
stos
rcl
adc
mov
xchg
mov
mul
(bad)
xchg
neg
cmps
jns
mov
xor
iret
test
into
fsubr
cmp
lods
das
sbb
jbe
data16
fist
jne
adc
lods
adc
(bad)
out
jns
push
rol
xor
push
fs
mov
inc
dec
adc
xor
pop
in
push
mov
lods
mov
adc
push
or
call
jns
aaa
add
push
aaa
das
out
inc
sub
inc
mov
arpl
sub
rcl
(bad)
push
xchg
push
je
xor
int3
ja
xchg
sbb
pop
add
fnstenv
xor
mov
ins
cmps
mov
fisubr
pop
lea
movs
sbb
(bad)
(bad)
mov
pop
clc
movaps
repz
iret
mov
push
es
int
mov
push
shl
sub
or
or
sti
dec
or
ins
jne
test
push
es
xlat
xchg
mov
adc
add
mov
(bad)
cmp
xchg
(bad)
mov
and
movs
and
enter
fist
mov
sbb
mov
mov
ins
sti
dec
cmps
ds
pop
std
popa
ret
mov
dec
xchg
pop
mov
lahf
dec
inc
pop
or
jbe
scas
dec
addr16
inc
(bad)
sbb
sahf
clc
(bad)
push
jne
jl
xor
shl
xchg
jecxz
mov
inc
jmp
xchg
sbb
push
cmc
inc
and
mov
int
out
lahf
dec
rol
movs
retf
inc
lahf
popa
retf
xchg
mov
out
mov
sbb
stos
ret
mov
dec
imul
add
outs
out
xchg
mov
or
cmps
mov
ins
cmps
cli
ins
jbe
mov
fwait
push
shr
mov
repnz
fdivr
rol
jle
daa
aam
imul
mov
mov
push
iret
mov
jl
push
daa
loope
lock
sbb
cmc
add
gs
sbb
out
shl
and
jmp
pop
lock
movs
xchg
(bad)
cli
call
les
jnp
dec
retf
outs
fcmovbe
shl
mov
push
fisttp
sbb
fidiv
pop
gs
pop
sub
mov
xchg
xor
ins
cmp
adc
sar
int
pop
jecxz
and
mov
test
jecxz
aad
push
popf
ds
jo
shl
jne
push
stos
(bad)
rcl
movs
sbb
scas
xchg
imul
test
div
lods
fimul
cmp
pusha
pop
xor
out
icebp
and
mov
mov
xor
mov
scas
add
jmp
rcr
aad
ret
std
push
sbb
(bad)
outs
push
mov
push
pop
pop
(bad)
shl
outs
mov
cs
aaa
int
cmp
std
pop
push
push
cwde
stc
mov
dec
ds
stos
xchg
cld
gs
cld
stc
adc
xchg
jbe
mov
in
cmc
or
enter
fsub
das
test
cwde
sbb
idiv
xchg
mov
popf
arpl
xchg
in
xchg
retf
or
pop
pop
inc
pop
adc
leave
cdq
rcr
push
jnp
aaa
aas
cmp
sar
xchg
in
dec
pop
adc
cwde
test
dec
xor
ds
push
push
mov
sbb
je
shl
loop
jbe
xor
add
ss
hlt
add
adc
das
push
jp
lods
push
fisubr
retf
shr
stc
mov
and
bound
cmps
push
fstp
icebp
inc
adc
mov
int3
mov
cdq
(bad)
push
inc
mov
(bad)
mov
js
addr16
mov
out
shl
mov
ins
jp
lock
jb
cmp
push
les
push
push
dec
mov
push
mov
or
jge
mov
xor
jecxz
push
xchg
mov
jmp
ins
ror
out
or
jb
stc
or
jl
mov
cmp
pusha
(bad)
fcomp
loope
push
cwde
data16
lea
jno
xor
cs
fxch
movs
out
add
xor
mov
pop
inc
sub
jecxz
xchg
xor
jns
cmp
dec
fs
test
ja
cmp
outs
mov
xlat
test
pusha
retf
fldenv
cmp
cmp
xor
mov
pop
repz
push
pop
mov
jo
xchg
xchg
pop
outs
mov
and
xchg
pop
push
sbb
aaa
int3
mov
arpl
mul
xor
setnp
xchg
shld
loope
retf
out
cmp
mov
and
mov
cmp
mov
das
lea
fldenv
inc
shl
xchg
sbb
xchg
and
ret
push
jl
sbb
adc
ret
call
fimul
arpl
cmps
das
aas
pop
out
sbb
xchg
xchg
adc
fadd
sbb
(bad)
mov
or
sbb
xlat
out
pop
imul
idiv
(bad)
cmps
rcr
fwait
loope
call
(bad)
out
add
dec
retf
xor
and
xlat
sub
push
inc
shl
lds
adc
mov
mov
cmps
out
jb
mov
jb
retf
pop
mov
scas
std
fld
xchg
nop
rcl
pusha
add
jge
fs
pop
arpl
les
inc
sbb
dec
retf
adc
adc
cld
cmc
sbb
hlt
les
mov
push
xor
pop
in
add
ins
rcl
push
es
inc
stos
adc
cld
call
scas
int
cmp
in
inc
fist
inc
cli
in
retf
je
shr
or
xor
scas
jle
mov
cs
movs
dec
fwait
mov
rcr
ja
cmp
cmc
pop
fistp
es
(bad)
outs
test
mov
outs
mov
xor
lahf
or
lods
push
rol
push
ins
xor
fistp
sbb
fcmovbe
add
aad
sub
sti
jmp
popa
mov
fucomp
push
dec
mov
loope
push
call
mov
dec
sbb
jmp
aam
pop
les
push
sti
sar
push
enter
dec
mov
mov
push
les
and
sub
and
cmp
stos
out
xor
ret
std
repnz
or
cmp
jo
sbb
adc
and
xchg
pop
stos
dec
in
cld
gs
pushf
nop
or
fsubr
xchg
gs
ss
inc
mov
add
push
movs
add
dec
ud1
test
cmp
jbe
nop
ja
inc
retf
cmp
mov
pop
xchg
mov
jno
leave
pop
movs
add
stc
out
xchg
fldcw
fcomp
das
jo
mov
mov
stc
outs
mov
mov
cmc
mov
(bad)
fwait
rol
stos
stos
mov
and
push
dec
jbe
adc
push
xchg
fcmovne
hlt
jno
pop
push
xchg
mov
dec
push
pushf
fdivr
add
push
stc
idiv
push
ficom
scas
push
ins
cmp
cmp
ret
mov
push
fst
jecxz
add
stos
add
add
(bad)
cmp
ss
push
rcl
cmp
in
push
rcl
cmp
mov
jmp
out
stc
imul
nop
mov
pop
fcomp
aad
add
sub
push
push
mov
stos
icebp
fst
nop
scas
inc
mov
xchg
push
xor
(bad)
aas
je
sbb
mov
shl
movs
(bad)
aam
xchg
daa
arpl
shl
daa
and
ret
xchg
sti
sbb
fdiv
aas
jnp
jp
inc
shld
pop
add
(bad)
jnp
lahf
ss
adc
mov
outs
and
rol
mov
inc
iret
sbb
lds
leave
push
add
(bad)
adc
lock
in
loop
and
pop
iret
(bad)
(bad)
push
in
mov
fcomi
rcl
(bad)
ins
(bad)
xor
stc
fcom
aam
mul
pop
adc
xchg
cmp
pop
mov
outs
in
xor
cs
pusha
add
xor
mov
pop
into
or
out
jmp
jge
xchg
jne
rcl
rcl
mov
mov
ret
cmp
xchg
ins
not
mov
rcr
enter
push
cmc
fisub
lods
mov
outs
lea
enter
add
mov
idiv
pusha
fcom
pop
hlt
int
sub
add
mov
imul
mov
sbb
sbb
jae
rcl
ds
imul
xor
push
mov
outs
test
outs
cmp
retf
out
rol
ins
pop
sahf
and
adc
fcmovnb
mov
icebp
mov
pop
sbb
xor
add
clc
xor
movs
dec
out
dec
(bad)
fsub
mov
movs
sbb
sar
inc
jb
adc
mov
inc
(bad)
js
xor
loopne
sbb
fcomi
mov
xor
lds
shl
mov
mov
mov
and
mov
xlat
call
and
aad
pop
pop
push
pusha
retf
push
imul
inc
jae
popf
retf
mov
popa
sbb
jae
stos
pop
dec
in
shl
test
outs
and
clc
push
and
fmul
sub
mov
test
xor
js
arpl
dec
fstp
inc
adc
sub
add
push
ins
arpl
sub
cmp
mov
pushf
ss
xor
repnz
dec
push
dec
movs
mov
cmp
sti
and
imul
sub
adc
push
jecxz
inc
stos
(bad)
xchg
inc
mov
xor
ret
outs
cvtpi2ps
push
push
adc
nop
nop
fidivr
jmp
sar
ja
dec
xchg
mov
inc
push
cld
imul
lahf
pop
lahf
push
std
cld
adc
mov
jne
xchg
in
cmp
jb
push
cld
test
hlt
daa
mov
inc
pop
mov
pop
ins
inc
sbb
xor
pusha
mov
push
xor
out
xor
data16
push
neg
adc
jge
lods
mov
sbb
in
mov
mov
loop
mov
pop
fdiv
bound
adc
outs
iret
cs
dec
pop
repz
rcl
push
push
stos
mov
mov
sbb
jg
pop
lea
(bad)
test
inc
inc
iret
or
jmp
mov
add
test
lahf
or
(bad)
div
cdq
cli
push
out
mov
mov
daa
aad
repnz
pop
movs
dec
ret
jbe
add
push
fcomp
cwde
inc
push
cmovle
out
rol
adc
or
fsub
test
fisub
jae
je
lods
sbb
inc
fwait
mov
or
jo
pop
ret
add
sbb
das
sub
mov
nop
sub
xor
fdiv
and
ror
fld
or
xor
jle
mov
pop
add
push
mov
inc
sti
dec
inc
std
movs
xor
pop
mov
pop
js
cmps
adc
pop
jbe
gs
adc
jmp
dec
(bad)
jge
mov
arpl
cmps
into
sti
mov
jne
aaa
inc
pop
add
int3
inc
jo
int
add
movs
adc
fstp
xor
mov
sub
push
dec
not
loope
push
mov
pop
aad
ins
adc
pop
mov
imul
in
jp
scas
ds
add
ja
inc
popa
in
dec
enter
inc
into
test
out
sbb
daa
xchg
xor
movs
test
and
push
sub
test
or
xchg
dec
mov
push
xor
jp
mov
xchg
or
xor
in
(bad)
mov
jecxz
pop
add
sub
mov
mov
imul
scas
adc
je
or
push
iret
(bad)
cmps
mov
call
dec
sbb
cmps
ficom
pop
mov
pusha
lds
xchg
and
rol
dec
js
adc
js
pop
fiadd
xor
push
ins
jle
jo
mov
sbb
outs
mov
inc
mov
push
push
sbb
jnp
or
sbb
dec
inc
dec
stos
mov
cmc
inc
jne
mov
daa
mov
mov
push
push
inc
pop
mov
jns
(bad)
dec
retf
mov
push
pop
fcmovnb
jne
(bad)
sbb
div
jp
rol
lds
jo
fistp
mov
cmp
pop
jb
out
xor
xchg
inc
fucomi
or
scas
sbb
int3
push
push
sahf
out
add
fadd
add
xchg
iret
add
mov
inc
int
in
xchg
pop
mov
push
mov
movs
sbb
fs
push
cs
pushf
loop
scas
mov
inc
jmp
ret
adc
mov
add
push
cli
xchg
push
data16
jg
aaa
sti
and
sub
push
in
adc
outs
and
ss
repnz
mov
in
popa
xchg
pop
and
sub
xlat
fcmovne
jge
lock
cli
mov
ficom
or
and
or
das
xchg
push
sub
or
jo
add
stos
loope
mov
fwait
jle
mov
test
xchg
retf
jbe
fnstsw
mov
pop
sub
push
cdq
imul
push
mov
fwait
mul
pop
stc
(bad)
aas
and
sar
jp
jl
xor
xchg
in
test
in
stos
std
jne
cmp
xor
adc
popa
pop
int3
dec
mov
(bad)
lock
sbb
or
loopne
les
mov
mov
mov
(bad)
jmp
xchg
inc
cdq
sbb
in
test
inc
movs
int3
out
js
je
je
dec
xor
sbb
mov
jns
mov
mov
or
pop
push
rcl
pop
fmul
sub
add
sub
pop
pop
xlat
push
in
arpl
cmp
add
mov
sbb
pop
(bad)
push
ror
cs
jmp
jl
pop
call
test
pop
shr
in
aad
(bad)
nop
xor
mov
dec
fistp
xor
push
mov
test
gs
add
arpl
add
dec
sub
shl
mov
pop
loope
paddd
dec
dec
(bad)
mov
or
cwde
call
out
mov
push
lods
loopne
cmps
sbb
pop
fwait
xor
ins
mov
xor
jmp
jae
movs
dec
(bad)
adc
adc
mov
pmulhw
jnp
ficom
bound
cs
mov
sbb
mov
dec
jg
es
call
and
sbb
xor
sbb
pop
mov
xor
ss
add
mov
pop
sbb
xchg
or
add
loope
jne
scas
push
xchg
dec
pushf
sar
inc
jmp
out
lahf
pop
mov
sub
sub
add
push
dec
repz
sbb
enter
jmp
mov
mov
dec
pop
(bad)
jmp
mov
test
enter
or
jge
inc
sar
add
adc
dec
and
inc
sbb
cmp
out
xor
or
(bad)
sbb
jecxz
in
or
sahf
pusha
push
fcom
or
jp
loope
xor
int3
pop
mov
das
add
loope
or
cmps
jns
js
and
xchg
pop
fyl2x
loopne
cmp
sub
dec
pop
retf
ins
sbb
xor
scas
and
sti
(bad)
loopne
mov
cmp
xchg
xchg
mov
mov
cwde
xor
clc
xchg
adc
add
jnp
sub
jg
push
push
add
mov
inc
imul
adc
push
nop
add
gs
push
sti
sbb
push
mov
jp
movs
(bad)
(bad)
cs
jmp
scas
cmp
call
fidivr
add
shl
scas
out
rcl
and
repnz
das
pop
jp
xchg
sub
inc
fld
adc
(bad)
out
popf
add
bound
in
mov
sbb
js
ret
add
adc
loopne
test
lock
or
cmp
or
xchg
outs
sbb
mov
outs
fs
loopne
jo
dec
ja
dec
push
outs
push
and
inc
(bad)
mov
in
movs
cmp
jmp
sub
xchg
mov
jnp
dec
loop
cmps
jecxz
popf
into
test
or
jmp
cmp
jl
dec
add
adc
jge
ret
push
jo
jl
in
push
push
and
pop
call
test
inc
stos
pusha
iret
icebp
in
mov
push
push
xor
mov
pop
mov
and
pop
scas
mov
mov
dec
fbstp
cmp
mov
dec
sub
lods
inc
aad
jp
leave
sbb
cld
mov
cmp
sub
sub
inc
or
dec
fild
loop
frstor
jmp
cli
or
aad
lods
dec
mov
xor
fdiv
mov
mov
xlat
pusha
xor
dec
ret
scas
mov
cmp
(bad)
mov
out
sahf
imul
lods
jg
jns
push
out
dec
in
pop
xchg
cdq
cdq
mov
mov
fsubr
jb
fld
scas
push
stos
js
xchg
pmullw
shl
js
(bad)
int
adc
mul
loop
adc
pop
call
push
(bad)
sbb
sub
out
xchg
dec
push
hlt
cmps
adc
sti
xchg
ror
stos
and
(bad)
int
jbe
jecxz
or
out
retf
into
pop
clc
push
ficomp
xor
daa
push
xchg
in
pop
xchg
(bad)
pop
aam
jl
and
inc
sub
shl
in
pop
adc
inc
lods
clc
and
mov
inc
fst
mov
call
jae
dec
hlt
jns
and
imul
xchg
xor
out
rol
inc
or
dec
ins
and
and
enter
popf
dec
call
push
sub
sbb
fwait
stc
add
leave
shl
int
mov
sbb
fldenv
dec
fimul
outs
jb
shl
or
int3
jge
(bad)
out
sbb
popf
repnz
js
xchg
inc
out
pop
mov
add
and
and
mov
mov
mov
push
repnz
mov
xlat
sbb
inc
ja
add
mov
mov
xor
add
movs
cmp
mov
loop
or
jl
xchg
and
in
xchg
gs
std
das
inc
test
xor
fcmovnu
inc
xor
push
dec
mov
sbb
jb
add
sub
(bad)
jl
and
inc
and
loope
or
cmp
loop
pop
iret
aaa
sbb
sub
nop
jo
out
mov
dec
inc
cmc
and
jge
xor
mov
push
mov
xor
sbb
aaa
cmp
mov
ins
dec
int
xor
stos
and
xchg
daa
adc
or
add
mov
xchg
add
mov
out
sbb
aad
jg
lods
in
add
xor
push
and
push
sub
in
(bad)
jge
push
inc
mov
mov
add
mov
dec
data16
jb
add
sbb
adc
cs
and
inc
shr
out
cmp
mov
call
mov
dec
pop
icebp
fcom
aaa
adc
sub
lds
push
mov
aaa
fst
mov
call
(bad)
aam
test
pop
ins
sti
xchg
mov
call
retf
inc
pop
inc
add
not
repz
imul
lds
rcl
ss
(bad)
enter
les
ret
ds
mov
lea
push
frstor
jbe
or
aaa
or
fisub
aam
imul
jmp
outs
cmps
pop
mov
pop
sbb
pop
stos
test
and
sbb
int
inc
ds
xchg
enter
bnd
aam
jp
inc
repz
leave
idiv
or
sub
jmp
push
daa
ja
mov
inc
jmp
xor
xor
sbb
ins
sahf
sbb
sub
sbb
sar
cmp
out
ja
mov
(bad)
out
out
pop
or
mov
dec
pushf
or
cwde
arpl
dec
inc
mov
(bad)
mov
mov
jp
xor
or
aaa
cmp
mov
cmp
jo
fisubr
(bad)
mov
fstp
lods
fsubr
cmp
dec
cmp
cmp
cli
add
out
in
add
mov
dec
push
mov
mov
loope
adc
(bad)
das
sub
sbb
dec
dec
pop
lods
shl
(bad)
mov
mov
into
fisubr
ss
push
pop
ins
pusha
retf
iret
push
pop
jg
test
es
mov
je
ja
cdq
fstp
mov
cld
mov
stc
pop
les
into
jbe
sbb
add
inc
adc
(bad)
adc
xchg
(bad)
and
test
aaa
mov
pop
jns
popf
inc
ins
mov
push
stos
sub
clc
pop
mov
push
adc
gs
dec
(bad)
aaa
pop
push
mov
mov
call
int3
mov
mov
dec
or
loop
ds
mov
jmp
aad
xor
adc
xor
add
dec
push
repz
adc
popf
into
push
dec
repz
pop
fild
test
dec
xchg
(bad)
aas
inc
(bad)
mov
inc
xchg
jge
test
jecxz
xor
cmp
push
xor
sub
mov
push
mul
mov
dec
add
ficom
loopne
mov
push
lock
push
test
pop
mov
dec
pusha
mov
xor
push
clc
mov
sar
and
loopne
ret
ret
icebp
sbb
sub
push
pushf
mov
and
sub
cmp
pop
fnstenv
sub
inc
fisubr
sbb
jmp
sub
sub
cwde
dec
fnsave
jmp
and
ja
daa
movs
popa
sub
xsave
mov
xchg
fist
adc
inc
jbe
jne
mov
or
lahf
jne
mov
ins
jecxz
sub
mov
inc
and
or
outs
in
call
repnz
xlat
jnp
pusha
test
imul
ret
shl
inc
stos
adc
clc
ins
enter
xchg
and
inc
mov
(bad)
test
adc
jl
scas
adc
push
mov
lahf
xchg
jbe
cmps
and
les
in
aaa
cmp
sub
push
lods
cmp
sbb
cwde
bound
fadd
pop
mov
jb
and
bound
mov
sbb
xchg
jae
pop
mov
call
and
push
loopne
mov
inc
xchg
add
shl
push
xor
push
fidiv
(bad)
(bad)
fldenv
int
xchg
xor
das
call
movs
mov
sub
jmp
(bad)
sbb
pop
cwde
ins
mov
or
pop
jo
fsubp
scas
call
push
ret
mov
stc
outs
and
inc
mov
push
test
add
jmp
rcr
mov
jns
imul
adc
aam
and
push
or
mov
jge
jo
icebp
mov
jge
mov
in
fs
ret
or
hlt
mov
fwait
add
mov
mov
dec
push
inc
lods
out
sbb
and
dec
imul
sbb
js
xor
or
pop
retf
sub
adc
jmp
pop
sahf
pop
dec
and
and
inc
mov
cmp
(bad)
push
cmp
dec
pop
xchg
in
pop
mov
and
das
loopne
push
enter
dec
pop
push
dec
das
fstp
mov
jle
sub
mov
pop
aam
lods
sub
adc
mov
xchg
lods
sti
mov
das
ret
std
dec
xor
arpl
out
popa
jno
mov
int
dec
(bad)
fmul
jp
jp
rcr
mov
mov
data16
rol
push
xor
xor
add
push
popf
cmp
sub
cmp
and
dec
jo
mov
xchg
cmc
in
int3
push
enter
push
add
outs
out
mov
sbb
jb
xchg
in
cmp
imul
inc
mov
loop
inc
push
xchg
sbb
cmp
scas
popf
mov
test
test
push
add
xchg
jbe
iret
ret
das
mov
cmp
xchg
push
outs
add
in
mov
sub
jae
hlt
iret
or
and
dec
lahf
xor
or
push
jmp
cmp
push
outs
push
mov
lahf
mov
jmp
xor
dec
scas
test
retf
jae
mov
jle
std
or
js
pop
or
fcmovnb
mov
adc
lods
out
fldenv
retf
movs
shl
(bad)
icebp
push
xlat
sbb
sbb
push
add
jo
ins
hlt
xchg
mov
cli
gs
es
cld
mov
pop
cmps
sahf
jg
in
(bad)
pop
mov
pop
inc
and
mov
in
or
add
mov
inc
sbb
sbb
mov
mov
pushf
repnz
std
stc
ret
or
aad
hlt
add
or
outs
call
add
cmc
mov
pop
ret
mov
icebp
jmp
xchg
ret
jnp
adc
push
ds
idiv
sub
sbb
je
cmp
xchg
test
fisub
lock
popa
cmps
sub
pusha
int3
jb
fisttp
add
sub
es
stos
cmp
mov
adc
pop
pop
mov
inc
push
sahf
imul
lods
mov
push
les
fwait
adc
movs
mov
adc
outs
icebp
inc
test
pop
sbb
xchg
in
daa
jno
jl
inc
inc
push
sbb
adc
add
imul
inc
in
fcom
aam
mov
add
stos
ja
ins
adc
push
movs
jns
adc
pop
xchg
stc
sbb
fst
push
lock
les
out
imul
mov
movs
push
aad
cmp
dec
lahf
fs
cld
movs
jns
sti
sbb
mov
push
test
shl
sub
xor
pop
cmp
les
push
gs
sbb
push
loop
(bad)
sbb
adc
xlat
sbb
mov
leave
scas
inc
es
vlddqu
mov
push
lds
dec
or
mov
lods
xor
sahf
test
cmp
leave
js
mov
ss
cwde
and
mov
mov
retf
lock
push
or
cli
cmp
jmp
fs
inc
js
loop
push
cld
push
adc
cs
addr16
xor
mov
push
add
les
and
inc
mov
in
shr
inc
xchg
outs
(bad)
pop
inc
sbb
add
cmps
and
push
inc
fmul
push
push
xchg
sti
push
sbb
xor
mov
mov
lods
dec
gs
aam
inc
lods
mov
jmp
les
mov
fs
or
loope
in
es
scas
mov
ficomp
rol
adc
push
adc
out
outs
ret
mov
(bad)
in
inc
aad
add
and
out
jmp
adc
inc
es
mov
mov
mov
scas
mov
fild
loop
jmp
call
and
pop
addr16
inc
cmp
(bad)
das
push
mov
xchg
data16
and
out
ds
inc
lods
xchg
inc
ss
add
jmp
mov
cli
lds
ret
sub
dec
enter
test
std
adc
fisubr
ficom
xor
sbb
mov
(bad)
rcr
adc
jp
mov
and
jae
xchg
mov
fsin
scas
js
inc
mov
xor
jae
push
call
add
mov
je
rcl
popa
out
cmc
cmp
mov
repnz
xor
mov
aam
inc
shl
in
inc
js
shl
and
and
push
in
sbb
sbb
repz
retf
mov
mov
(bad)
cmp
and
sub
adc
enter
stos
fmul
push
sub
in
xor
jmp
mov
test
lock
stc
mov
movs
pop
add
push
popf
mov
sbb
and
das
jno
mov
push
mov
pop
adc
inc
inc
fbstp
in
cmp
xchg
inc
mov
rcl
cmp
xchg
sti
iret
xor
push
push
dec
scas
stos
bound
gs
inc
jmp
sub
mov
adc
push
repz
add
mov
popa
pusha
adc
rol
test
mov
mov
(bad)
(bad)
cdq
lds
xchg
leave
adc
jmp
and
lea
mov
mov
shr
add
cmp
test
popa
pusha
sbb
ins
fs
(bad)
xor
int
jb
test
(bad)
pop
std
(bad)
push
jae
mov
push
out
jno
ja
pushf
jmp
loopne
add
int3
mov
cmp
lock
xor
ret
mov
mov
in
xor
mov
ins
ins
xor
fs
out
or
fcmovne
cmp
popf
jmp
std
mov
(bad)
jle
cli
xchg
and
imul
and
mov
test
int
mov
push
outs
inc
push
mov
gs
dec
pop
mov
pop
inc
nop
sbb
adc
test
gs
add
jecxz
outs
cmp
mov
xchg
(bad)
sahf
lea
xlat
pop
jae
mov
fcom
push
xor
ds
mov
cmp
jle
jnp
push
ds
push
push
and
pop
in
not
das
mov
jg
push
sar
cmp
je
or
repnz
mov
cli
xchg
push
hlt
(bad)
leave
lock
push
std
push
test
add
lods
inc
pop
mov
sub
mov
pop
lea
cmp
mov
fmul
add
mov
mov
jmp
iret
inc
out
cmp
out
neg
pop
pop
stos
dec
outs
jno
sbb
les
in
dec
pop
push
pop
stc
mov
or
cld
test
adc
xchg
shl
add
jle
push
mov
sldt
ret
ret
out
pusha
and
pop
lea
push
push
sbb
aam
pop
mov
addr16
bswap
cld
imul
fcmovu
jge
pushf
sub
inc
or
fcomp
mov
or
hlt
repz
ficom
adc
jle
in
ins
call
pusha
add
aad
hlt
jge
pusha
add
inc
lods
dec
aaa
and
push
repz
stos
xor
loopne
fidivr
sub
inc
out
test
ret
lock
cmp
in
xchg
jae
and
dec
jecxz
cmp
jecxz
adc
mov
sbb
pop
inc
retf
inc
cmp
push
in
add
mov
pop
mov
(bad)
xchg
xor
je
int3
push
std
loope
into
xlat
call
xchg
jne
stc
aam
retf
test
fs
loope
sbb
aas
sub
shr
gs
stos
lahf
test
jmp
stos
xchg
ret
rcl
xchg
shl
mov
inc
xor
out
rcl
inc
cmps
gs
mov
sbb
pop
adc
into
dec
aaa
out
pop
(bad)
sub
leave
add
push
cmps
(bad)
mov
add
sub
xlat
sbb
stos
cmc
ss
push
inc
(bad)
xor
into
out
sar
sub
xchg
lods
mov
adc
lahf
dec
cmp
out
mov
daa
jbe
iret
mov
outs
jl
mov
jns
test
in
cld
lea
cmp
icebp
inc
int3
mov
sbb
pop
pop
das
out
add
add
sub
mov
xchg
cmc
sahf
push
stos
add
adc
add
pop
mov
inc
(bad)
cmps
jno
or
(bad)
cmp
push
shl
dec
into
bound
fild
cmp
fdiv
arpl
jg
adc
sbb
jp
mov
fisub
and
neg
mov
int3
pop
ins
das
cs
pop
mov
inc
add
imul
fnstenv
pop
push
les
mov
or
add
push
dec
mov
jmp
pop
pop
xchg
inc
ss
pop
ins
dec
pop
jbe
rcr
bound
push
ror
add
mov
xchg
loop
test
jb
jbe
out
mov
call
sub
or
jno
mov
lea
ja
cmp
push
inc
(bad)
in
cwde
in
in
jmp
fwait
jae
daa
jne
lea
xchg
ffree
mov
jl
mov
dec
pop
ds
scas
repz
fs
xchg
loop
arpl
mov
pop
pop
adc
pop
add
mov
mov
retf
test
inc
in
dec
lea
cwde
cs
pop
retf
(bad)
lds
or
pop
fistp
mov
mov
mov
div
rcl
(bad)
sub
xchg
add
mov
pop
mov
pushf
mov
cmp
iret
mov
enter
imul
cwde
call
adc
jmp
hlt
or
aas
push
aad
les
(bad)
pusha
fwait
stos
ins
lds
sub
test
pushf
push
jbe
dec
mov
clc
pusha
xchg
inc
pop
add
leave
cmps
push
addr16
cmps
push
not
ss
sub
lods
stos
lea
cld
test
push
pop
int3
nop
loopne
aad
daa
adc
inc
xchg
xchg
sbb
adc
mov
mov
int
adc
stos
mov
sub
outs
push
ret
rol
js
jbe
sub
push
mov
enter
lds
cld
push
movs
push
xchg
cwde
ins
xchg
dec
inc
cmps
mov
adc
mov
gs
dec
mov
popa
mov
mov
dec
ins
in
and
into
movs
pop
mov
inc
sbb
jno
(bad)
scas
fist
mov
or
pop
mov
test
cmps
jmp
jg
out
or
pop
mul
lods
(bad)
fbstp
out
cs
cld
mov
rep
test
fs
(bad)
or
xchg
pop
inc
hlt
retf
outs
fild
mov
mov
and
cmps
jecxz
shl
(bad)
xlat
fnstsw
mov
add
sub
dec
data16
mov
sub
mov
mov
pop
imul
push
xchg
adc
lods
or
pop
out
dec
daa
cdq
xchg
mov
mov
ret
shl
inc
and
rcr
daa
iret
jae
mov
sub
jmp
jo
int3
mov
mov
mov
mov
xchg
pop
push
sbb
xchg
pusha
(bad)
mov
(bad)
mov
mov
pop
mov
mov
iret
(bad)
rcr
cmc
mov
in
dec
adc
or
fsubr
gs
into
cmps
ins
daa
adc
mov
lds
mov
idiv
loope
jl
dec
shl
outs
pop
scas
cmps
aad
mov
or
push
and
lock
jne
imul
push
lock
aas
add
das
mov
leave
cwde
(bad)
stos
ror
push
sbb
push
mov
mov
retf
scas
(bad)
adc
dec
sbb
push
pop
loopne
scas
arpl
je
lea
or
jle
aad
pop
mov
push
dec
popa
jecxz
sbb
popa
imul
jge
fcomi
imul
dec
mov
ins
(bad)
jno
sub
xor
int3
(bad)
mov
cmps
dec
in
fcmovne
jns
push
mov
push
mov
pop
jl
not
(bad)
xor
hlt
add
test
bswap
cmc
ja
dec
adc
out
fld
and
repnz
rcr
push
gs
cmp
test
mov
test
mov
sahf
jge
jmp
sahf
add
sub
cmp
pop
imul
movs
sbb
into
je
stc
push
sahf
mov
repz
mov
add
dec
inc
rcr
mov
and
ror
fs
cmp
sub
sub
mov
sub
sbb
and
in
xchg
aad
in
fwait
iret
mov
mov
cmc
and
shr
js
push
push
jecxz
hlt
leave
imul
or
sbb
pop
test
sub
movs
ja
push
xor
inc
mov
repnz
daa
lds
xchg
jb
sbb
cmps
pop
out
ins
or
in
xchg
(bad)
test
mov
mov
cmp
bound
inc
test
jne
lahf
or
retf
pop
clc
cmp
(bad)
pop
aad
pusha
or
inc
jne
jnp
icebp
jecxz
lods
pop
adc
into
pop
jecxz
push
test
(bad)
scas
sub
sbb
xchg
push
repz
adc
sub
ins
jmp
dec
daa
inc
add
ins
adc
xchg
sub
sbb
imul
mov
mov
arpl
pusha
mov
dec
out
in
scas
shr
ins
pop
pop
mov
mov
add
iret
sbb
xor
cmps
xor
push
mov
sub
and
test
adc
push
scas
and
sub
cmp
clc
adc
neg
out
repnz
ss
or
test
into
adc
popa
dec
movs
test
sbb
pop
or
xor
gs
inc
mov
stos
ret
inc
scas
xor
dec
mov
push
xchg
and
cmps
add
aaa
or
test
adc
sbb
pop
jmp
icebp
sub
jmp
push
push
cmp
dec
dec
sbb
(bad)
icebp
test
enter
les
shl
dec
in
pop
adc
pop
dec
cmp
add
cdq
fidiv
or
mov
mov
sub
int
cmp
gs
fidivr
imul
cmc
mov
call
and
mov
add
push
xor
xchg
adc
xor
mov
mov
add
cmp
iret
push
jnp
xchg
pop
(bad)
jmp
inc
add
imul
jae
stos
sar
sbb
add
retf
ret
cli
es
jbe
xchg
mov
sub
xor
jbe
push
in
iret
jae
push
dec
dec
sbb
cmp
test
popa
inc
mov
imul
(bad)
mov
cmp
add
dec
dec
xor
stos
ret
aad
movs
jle
and
jo
sti
xor
(bad)
cmp
arpl
sub
cmps
dec
cmp
inc
mov
int3
mov
daa
xor
lods
mov
or
dec
push
mov
mov
xlat
nop
mov
in
addr16
cmp
jbe
dec
lea
xor
gs
add
loopne
jns
sbb
es
push
dec
(bad)
cld
sar
xchg
xor
jae
je
jmp
jmp
hlt
inc
jo
cmps
stos
clc
fmul
(bad)
jo
push
aad
in
daa
cmp
mov
(bad)
arpl
(bad)
pop
sub
inc
xor
movs
xor
(bad)
lods
dec
ds
xchg
jnp
sub
gs
gs
nop
or
fdiv
dec
int
cmp
retf
xor
add
sub
and
out
sar
push
fsubr
mov
push
hlt
jmp
mov
iret
cmp
test
stos
xchg
out
jp
adc
cmp
sbb
je
dec
cmp
test
ins
ja
jno
out
pop
in
push
push
xor
out
push
cmp
dec
push
popa
mov
clc
push
dec
push
jo
pop
aas
fist
std
jno
lds
adc
(bad)
rcr
push
inc
and
into
loopne
out
lds
(bad)
dec
movs
test
(bad)
mov
push
shr
(bad)
mov
leave
add
and
cdq
aam
enter
scas
cdq
cmp
or
mov
es
and
iret
jbe
in
call
xchg
and
mov
adc
fistp
loope
sahf
push
movs
cmps
xlat
leave
fdivr
popf
test
cmc
jmp
jmp
mov
sar
(bad)
sub
jl
xchg
cmp
aad
or
inc
aas
or
(bad)
aam
mov
push
call
jmp
cmp
mov
mov
in
ja
mov
call
lds
(bad)
pop
pop
in
(bad)
or
or
cs
shl
dec
xor
and
in
cmc
std
int
inc
(bad)
push
lea
mov
rcr
cmp
aad
xchg
int3
and
shl
adc
(bad)
pushf
add
dec
lods
jb
(bad)
mov
lods
push
nop
aaa
cmp
push
into
adc
popa
arpl
stos
(bad)
clc
bound
ins
inc
or
lea
sub
inc
lods
inc
mov
sub
stos
cli
scas
faddp
pop
adc
das
lods
call
lods
inc
mov
nop
(bad)
pop
pop
adc
pop
es
push
mov
mov
inc
retf
imul
sahf
mov
inc
inc
cwde
hlt
inc
movs
cdq
xchg
(bad)
jge
dec
sub
mov
mov
dec
adc
mov
ror
mov
in
inc
sub
add
sbb
adc
loope
or
retf
cli
aad
test
shl
adc
in
add
clc
clc
mov
movs
cmp
pop
rcl
lock
lea
pop
retf
push
adc
cmp
fldenv
add
(bad)
imul
outs
cmc
loop
jbe
mov
sbb
xor
fsubr
pop
xchg
jns
jb
fldcw
addr16
mov
jb
push
xchg
loop
into
int3
jl
pop
fsub
xchg
mov
sbb
(bad)
cmc
xlat
scas
add
pop
sub
sub
loopne
fwait
mov
imul
dec
js
push
repz
jae
fiadd
test
mov
mov
mov
xor
mulps
sbb
mov
call
nop
ret
test
jno
push
and
(bad)
jmp
inc
xchg
xchg
pop
cmps
ins
inc
inc
popa
sbb
into
cmp
and
fldenv
aad
aas
cmps
movs
mov
movs
xor
test
pop
je
dec
es
pop
movs
xchg
cmp
adc
adc
inc
adc
rcl
std
pop
pminub
push
scas
lods
mov
xchg
fwait
sub
jnp
mov
pop
(bad)
adc
xor
lods
arpl
in
outs
(bad)
sar
cdq
and
jnp
mov
xor
repnz
mov
shr
arpl
loope
pop
mul
cld
scas
and
push
mov
out
mov
cmp
mov
lods
into
std
cmp
jb
ret
loope
adc
std
add
iret
inc
stos
das
mov
movs
and
sbb
jb
add
xor
dec
xchg
retf
jecxz
jno
data16
ja
adc
scas
scas
scas
mov
sbb
pop
out
cld
jg
adc
pop
loop
sub
rol
pop
fld
(bad)
js
lea
stos
fdiv
scas
ja
or
dec
dec
or
jmp
dec
dec
addr16
cdq
(bad)
pop
ds
pop
popa
je
outs
imul
retf
stos
leave
clc
and
mov
xor
jno
jmp
(bad)
push
inc
imul
retf
jmp
aam
(bad)
lea
and
mov
inc
or
pop
push
fwait
ret
and
daa
jg
loopne
jmp
sbb
lock
fmul
sbb
aad
pop
(bad)
fwait
fwait
idiv
pop
gs
or
or
out
rol
pusha
push
addr16
std
push
xor
cmp
adc
je
add
xchg
mov
jb
inc
aaa
jp
inc
std
rcpps
or
sbb
adc
enter
cmp
cmp
sbb
sbb
aas
scas
loope
test
mov
shl
outs
dec
push
nop
pop
sbb
add
pop
or
das
jge
xchg
dec
stc
cld
imul
in
js
addr16
cmp
in
sbb
sbb
xchg
leave
xor
cwde
ficom
retf
sbb
into
fistp
and
arpl
jbe
sub
out
into
nop
das
out
scas
inc
push
test
pushf
repz
push
dec
xchg
jbe
fst
lods
adc
mov
in
add
sahf
pop
pop
in
arpl
retf
call
mov
adc
ret
leave
mov
mov
mov
xchg
adc
fisubr
push
into
pop
mov
das
jl
out
adc
jne
xchg
inc
push
ins
outs
inc
adc
in
add
mov
addr16
sub
lods
xlat
jg
les
out
in
jp
inc
jae
mov
test
data16
iret
mov
xchg
retf
stc
push
xchg
js
shl
sub
into
mov
out
mov
ds
lahf
call
imul
mov
jecxz
ror
cmp
in
jecxz
repnz
mov
mov
cmp
jecxz
jp
xor
adc
push
mov
pop
adc
add
jl
pop
leave
ret
mov
pushf
cmp
mov
xor
lds
out
in
fsub
cbw
cmc
push
push
mov
mov
xor
mov
mov
dec
mov
xchg
rep
in
cdq
push
mov
in
lods
shl
rcr
mov
xlat
loop
pop
ret
and
jbe
retf
bound
pop
ds
fdivr
mov
pusha
inc
mov
mov
cmc
mov
or
(bad)
mov
cld
dec
xchg
mov
mov
xchg
pop
sbb
sub
out
rcr
retf
imul
fs
push
pop
loopne
mov
xor
dec
hlt
in
dec
jmp
sti
xchg
icebp
sbb
pop
jae
jg
dec
cdq
add
fwait
adc
call
scas
popf
imul
mov
dec
push
ins
xlat
and
mov
cmp
dec
cwde
ret
or
(bad)
pop
fistp
push
in
mov
aad
aas
dec
mov
sbb
pop
fbld
pushf
mov
stos
mov
sub
xchg
pop
aam
add
fcomp
dec
int
dec
aam
sbb
jmp
fbstp
xchg
scas
sbb
repnz
cmps
(bad)
adc
inc
sahf
mov
or
imul
aam
adc
mov
xor
mov
and
movs
jo
xor
sbb
jo
dec
mov
in
xchg
adc
lods
out
je
xchg
(bad)
out
xchg
pop
lods
test
mov
mov
inc
and
lahf
out
(bad)
jnp
cld
cmps
call
xor
aaa
test
jecxz
cmp
dec
out
lock
and
mov
cs
loop
mov
das
add
jg
scas
push
ja
xor
bound
mov
sub
clc
mov
(bad)
mov
adc
and
fdivr
in
xchg
jae
sahf
enter
repnz
mov
or
int3
ins
and
mov
mov
jae
hlt
adc
gs
loop
xchg
xchg
sbb
(bad)
fiadd
xchg
and
not
inc
pop
jmp
xlat
pushf
and
adc
mov
sti
mov
add
push
inc
fs
pop
mov
mov
pop
movs
dec
ja
ret
loope
inc
mov
mov
or
sbb
je
aam
(bad)
out
jbe
xor
lods
dec
out
sbb
inc
push
or
lock
xchg
xchg
loope
xor
popf
push
(bad)
in
push
inc
adc
xchg
push
in
jle
xchg
pop
dec
aad
fld
sub
loopne
mov
sub
ret
jo
inc
xchg
das
jecxz
pop
rcr
in
mov
adc
xor
int
or
test
add
lods
or
jae
pop
jmp
jne
xor
stc
movs
mov
sahf
mov
test
cld
cs
aam
jae
pop
cwde
xchg
stos
sub
dec
mov
inc
xor
popa
call
test
pushf
jne
je
jge
out
pop
push
mov
test
into
ret
je
ss
dec
(bad)
sbb
pop
sti
(bad)
loope
data16
gs
push
cdq
scas
iret
loop
(bad)
mov
fsub
cmp
pop
lea
ret
and
mov
fisub
add
pop
(bad)
push
mov
in
sti
and
add
out
idiv
retf
cld
(bad)
outs
loop
pop
dec
fisub
push
fld
aaa
in
push
xor
push
mov
xchg
mov
cld
mov
push
fwait
jmp
cmp
cmps
scas
retf
fcomp
out
jg
xchg
ins
mov
rol
xor
dec
push
std
test
pop
int3
call
leave
in
sbb
scas
call
cmp
movs
pop
xchg
adc
mov
imul
stc
outs
add
pop
mul
jge
push
mov
dec
add
outs
test
xchg
add
ds
sub
mov
xchg
int3
test
es
std
out
or
or
in
std
or
pop
mov
inc
cmp
xor
arpl
iret
mov
out
fs
mov
xor
or
movs
cli
or
mov
push
xor
pop
fucomp
ret
pop
cmp
push
jmp
adc
(bad)
stc
je
and
adc
aam
movs
out
out
sahf
xrelease
ins
icebp
jmp
xor
jl
ins
xor
adc
push
mov
rcl
dec
mov
xchg
push
pop
imul
xor
pop
and
pusha
or
ss
mov
mov
pop
or
sub
ror
cmp
sub
add
adc
(bad)
push
mov
loop
(bad)
cmp
sbb
ins
mov
inc
dec
jnp
pop
arpl
inc
in
loop
xchg
daa
sbb
mov
outs
call
mov
xchg
xor
stos
jbe
pop
iret
rcr
outs
mov
gs
dec
jns
fwait
sti
cmp
adc
enter
and
jae
(bad)
pop
add
ja
repz
inc
xchg
lods
in
std
pop
sti
xor
push
ja
bound
sbb
test
sbb
mov
jnp
pop
out
lea
repz
pushf
fcomip
fisttp
retf
pop
inc
dec
inc
in
jmp
test
sar
mov
mov
out
jge
mov
ret
retf
inc
and
xchg
sti
pop
and
shl
and
ret
outs
inc
jmp
xor
loopne
(bad)
(bad)
out
push
pop
xchg
xchg
adc
mov
add
and
popf
sub
jp
es
dec
test
inc
arpl
jae
shr
cmp
and
out
xchg
bound
std
(bad)
lock
sbb
scas
cmp
push
adc
test
outs
sub
in
scas
addr16
inc
xlat
sbb
sbb
sbb
mov
mov
shl
fld
cmp
cs
jo
xor
dec
and
cwde
imul
outs
add
mov
cmp
and
or
fnstsw
loopne
ja
inc
fst
aad
cmp
mov
leave
hlt
rcl
inc
(bad)
cmp
cwde
(bad)
mov
ins
inc
dec
xchg
cli
sub
ins
cmps
lea
and
fld
in
jae
mov
push
xchg
mov
clc
or
arpl
xlat
inc
cmp
sub
jmp
cmc
iret
sub
and
in
test
jno
inc
aas
mov
imul
mov
sti
mov
pusha
inc
fcomp
lahf
js
sbb
pop
mov
fstp
loope
pop
jb
les
mov
xchg
test
lahf
pop
cli
sub
jns
push
jge
and
pop
adc
mov
sbb
call
leave
(bad)
cmp
xchg
cmp
xchg
adc
repz
mov
push
mov
cmp
push
nop
sbb
in
fcmovu
jg
pop
std
int3
(bad)
out
add
out
adc
data16
frstor
bound
mov
lods
inc
ja
mov
xor
int3
cdq
repz
cmc
jo
jns
cmp
fwait
gs
pop
sub
test
push
cmp
clc
push
push
mov
addr16
outs
enter
rol
sbb
cmp
outs
lock
pop
fsub
mov
add
lods
sbb
push
inc
add
fadd
push
dec
cli
fild
jbe
mov
movs
fmulp
mov
lds
rcr
push
mov
push
ret
adc
mov
jecxz
pop
fsub
pop
or
inc
std
ss
gs
enter
jmp
test
cli
punpckhwd
in
jns
cmp
sub
xlat
push
or
add
outs
jp
jecxz
arpl
xchg
(bad)
shl
mov
jne
ret
jmp
test
aad
fnstenv
sub
cmp
xchg
sbb
dec
mov
mov
xchg
lahf
sub
mov
push
adc
adc
repz
loopne
sub
(bad)
dec
inc
test
jns
das
fnsetpm(287
push
cld
jge
int3
mov
and
leave
push
out
sub
test
into
mov
sbb
cwde
aam
mov
jmp
pop
push
adc
xor
addr16
or
(bad)
xchg
and
push
sub
dec
lock
mov
(bad)
icebp
sbb
popa
lock
jmp
shr
jmp
out
jmp
rol
xor
dec
outs
xor
adc
mov
in
retf
mov
ja
dec
mov
pop
xor
adc
jmp
add
xor
scas
cld
cmps
imul
pushf
push
lock
shl
and
(bad)
int
inc
and
mov
pop
jb
mov
stos
retf
sub
or
mov
ins
aam
fcom
sbb
fdiv
inc
mov
mov
cld
add
retf
fld
in
clc
inc
push
cmp
mov
outs
push
mov
and
hlt
adc
adc
lock
inc
imul
xchg
test
inc
cwde
popf
adc
leave
enter
repnz
xchg
cli
inc
lahf
leave
push
or
jl
(bad)
iret
pop
push
xor
push
jmp
mov
sbb
mov
push
repz
cmp
pop
xor
jo
jmp
sti
add
je
test
cmps
movs
adc
(bad)
xor
ror
cmp
pusha
and
test
xor
xor
sub
scas
fild
jne
out
scas
push
inc
xchg
pop
pop
xchg
xchg
ss
fstp
mov
push
dec
bound
dec
arpl
jae
cli
cmp
out
pop
cmc
clc
sbb
push
in
hlt
xchg
(bad)
mov
mov
call
xchg
dec
dec
xor
mov
add
xor
out
ficomp
or
out
arpl
fsubr
dec
test
jb
mov
inc
cmp
pop
jmp
sbb
arpl
(bad)
nop
lahf
inc
int
cmp
popa
adc
(bad)
(bad)
push
jmp
adc
and
sbb
fs
loope
(bad)
div
dec
inc
inc
and
cld
jbe
and
fst
push
std
push
sbb
out
dec
mov
int
test
push
add
and
adc
int3
xor
add
out
clc
mov
push
and
dec
loope
mov
loope
and
mov
lock
push
fnstenv
sub
movs
aas
mov
add
(bad)
fs
inc
inc
mov
std
imul
test
sub
cdq
sub
mov
iret
sbb
(bad)
mov
xor
dec
push
aas
mov
push
enter
mov
add
and
xor
daa
dec
jmp
(bad)
fidiv
je
aad
neg
xchg
data16
sbb
pop
ins
jae
pop
sub
lods
push
inc
lock
shl
ins
dec
dec
nop
or
sbb
repnz
inc
fistp
mul
inc
cmp
nop
int
mov
not
pop
cmps
enter
xchg
imul
sbb
out
loopne
jmp
int
cmp
add
int3
jae
pop
(bad)
stos
pop
xor
adc
inc
adc
mov
push
fcom
xor
mov
jecxz
inc
push
cmp
sub
adc
js
pop
movs
sub
pusha
test
cmp
out
fwait
xor
xchg
gs
push
dec
inc
sub
fwait
jp
inc
cmp
jno
in
xchg
inc
pop
sub
dec
(bad)
fcmovnbe
push
std
gs
mov
mov
(bad)
out
sub
repz
xchg
mov
bound
sbb
js
neg
cmp
fsub
push
ds
loopne
scas
add
or
push
(bad)
fs
imul
or
enter
scas
push
in
sub
repz
mov
xchg
jb
dec
mov
daa
mov
push
addr16
mov
ins
fistp
sbb
lock
loope
out
xchg
int
cld
jb
sbb
xor
sub
add
popa
mov
aaa
xor
xchg
aam
or
out
inc
out
jle
in
repnz
or
aad
pop
jno
jecxz
push
popa
jb
aad
call
mov
and
cmp
push
pop
pop
test
sti
push
call
scas
or
into
fs
sbb
in
xor
cmp
js
or
aas
aad
data16
jecxz
addr16
outs
pop
ficom
jmp
sar
dec
mov
pop
mov
fs
stos
xor
sti
xor
add
or
test
and
or
shl
les
shl
mov
dec
push
lods
add
push
push
fnstenv
jne
fiadd
aam
xor
jp
js
fst
lea
sbb
jns
cs
jb
and
test
in
in
hlt
movs
jle
adc
(bad)
(bad)
cmp
or
jno
cmc
scas
and
stos
mov
cmp
mov
clc
cmp
test
(bad)
pop
leave
hlt
(bad)
out
and
adc
shl
sbb
stos
sahf
and
inc
inc
and
sbb
mov
movs
stos
mov
imul
rcr
loope
sbb
lds
inc
pusha
sbb
leave
jp
mov
mov
jo
sub
div
or
fidivr
fdiv
jo
inc
sub
jo
retf
fstp
or
clc
jg
sbb
inc
(bad)
dec
pop
loope
cmc
adc
add
adc
je
jnp
ins
gs
std
fwait
test
outs
shl
jb
test
dec
mov
shr
mov
pop
std
push
add
(bad)
mov
in
cwde
mov
mov
imul
jmp
out
in
cmp
loopne
dec
das
cmp
sub
sti
jg
xor
mov
mov
movs
call
mov
loope
cld
in
fcmovne
ret
jne
sub
rol
(bad)
and
ss
lea
mov
mov
push
add
xor
pop
xor
imul
adc
mov
movs
ficom
pop
sub
xchg
add
and
mov
lds
pop
and
(bad)
push
dec
pop
fimul
xchg
int
xchg
inc
leave
scas
inc
mul
lock
std
cli
mov
and
das
pop
pop
pop
iret
jp
or
pop
jg
add
push
inc
adc
add
ss
jge
ins
pop
add
stos
nop
and
test
push
and
not
mov
call
paddsw
adc
adc
aad
cmp
xor
sub
xor
sti
inc
jle
test
ret
repz
das
sbb
push
inc
mov
into
movs
(bad)
push
mov
xchg
shl
mov
lock
jb
jg
int3
jle
inc
cmp
icebp
test
lahf
stc
es
shr
jl
in
dec
jns
cmp
xor
cld
outs
es
ja
sbb
call
mov
in
xor
rcl
js
sti
jbe
dec
out
push
iret
adc
int
(bad)
sar
fstp
in
test
inc
ds
mov
sub
and
pushf
and
add
scas
and
adc
int
scas
dec
shl
mov
jl
(bad)
call
shl
xor
loope
pmaddwd
dec
xchg
mov
cmc
xchg
fs
repnz
adc
nop
enter
(bad)
pop
(bad)
sbb
jb
clc
popa
add
add
sbb
into
nop
jae
test
cmp
rcr
ss
fs
sub
or
or
mov
push
mov
dec
pop
(bad)
in
push
std
loop
and
ret
mov
or
fnsave
loopne
dec
pop
stc
adc
xchg
lock
xchg
mov
push
popf
scas
xor
lods
mov
dec
popa
idiv
push
outs
push
or
call
inc
cmp
mov
lods
and
loope
jle
lods
aaa
xor
or
pusha
imul
(bad)
cmp
inc
test
xchg
dec
xchg
inc
inc
fidivr
mov
or
dec
jp
sbb
test
pop
cld
ds
jmp
mov
add
fidivr
hlt
movs
inc
cmc
pop
jnp
lods
fisubr
dec
int
cmp
idiv
iret
mov
test
data16
dec
or
stos
test
mov
pop
mov
ja
sti
aad
aam
mov
mov
or
sbb
mov
xlat
call
in
mov
add
dec
sahf
lds
jl
adc
and
inc
xor
mov
ss
test
nop
into
mov
pop
add
in
repz
and
je
test
inc
xchg
or
test
mov
jge
retf
inc
dec
shr
jg
repz
fisubr
sbb
popf
(bad)
mov
test
or
inc
mov
retf
fs
or
in
mov
xor
push
fwait
repz
or
lock
or
add
or
(bad)
ret
or
lea
ret
leave
fist
ror
jmp
loop
mov
mov
jg
mov
mov
rcl
dec
mov
inc
jb
lds
inc
pop
push
xor
imul
xchg
pop
sti
fild
fcmovnu
inc
call
imul
jne
and
xor
sar
(bad)
stos
movs
imul
lds
and
lds
or
(bad)
cmps
or
stos
ins
rol
(bad)
mov
push
push
and
inc
dec
(bad)
int3
xor
sbb
cld
lods
lods
add
nop
sahf
fiadd
jecxz
mov
mov
cwde
inc
leave
(bad)
mov
ret
xchg
aaa
stc
sub
imul
mov
and
sub
push
call
sub
fnstsw
enter
xor
arpl
xchg
mov
push
fdiv
xlat
scas
aaa
inc
xchg
icebp
arpl
in
bound
enter
mov
bnd
cs
push
pop
hlt
lods
das
ins
pusha
and
push
push
test
popf
in
pop
sbb
retf
jp
retf
cmp
shr
mov
aaa
mov
mov
push
outs
lods
add
pop
lods
inc
add
pusha
imul
cdq
mov
out
and
jns
inc
(bad)
mov
and
mov
and
enter
in
sub
mov
sub
aam
repnz
xor
rcl
sbb
cld
addr16
sti
cwde
or
out
in
mov
add
mov
cdq
mov
popf
addr16
sub
lds
dec
dec
cmp
push
dec
shl
fnsave
cmps
sahf
les
out
mov
cld
adc
test
push
mov
add
xor
inc
hlt
mov
adc
shr
or
xor
pushf
sub
pop
clc
jno
xor
ret
mov
sahf
jae
shl
(bad)
(bad)
rol
xchg
inc
and
out
dec
rol
bound
mov
shl
add
loope
pop
dec
stos
ss
mov
push
inc
jns
les
(bad)
push
lods
cmps
rol
cmp
imul
mov
push
cs
stc
xchg
mov
pop
test
lahf
push
push
int
fmul
push
ins
sbb
push
xor
and
(bad)
outs
loop
inc
cmp
jg
cmps
in
push
pusha
(bad)
xor
hlt
add
ds
not
cmp
pop
stos
ins
mov
mov
retf
(bad)
xchg
iret
fs
sar
loopne
clc
or
pop
ret
div
sbb
dec
pop
aam
rcr
jge
neg
jle
xor
rep
and
iret
jmp
and
fsubr
cwde
pop
fdiv
rcl
mov
mov
inc
mov
les
loop
xor
js
bound
ror
mov
fdiv
mov
jecxz
movs
rol
pop
mov
adc
jp
or
push
inc
xchg
fsub
xchg
in
daa
pop
xor
jg
inc
or
mov
mov
dec
int3
lock
mov
outs
mov
aad
scas
xchg
sar
add
push
popa
retf
dec
popf
xor
mov
add
mov
nop
mov
mov
mov
std
fmul
add
movs
imul
dec
aas
out
jae
pop
adc
cmc
cld
cmp
dec
push
xchg
ret
lods
lock
mov
cmc
mov
cmps
call
push
(bad)
sbb
fs
push
adc
nop
adc
and
or
sbb
ror
push
int
sbb
aaa
sbb
cmp
cmp
push
mov
cmp
fisttp
(bad)
mov
jp
in
loopne
lea
scas
cvtdq2ps
add
ret
sbb
ja
mov
ret
xchg
loop
mov
stc
push
or
ss
(bad)
add
xor
push
adc
inc
push
xlat
jno
add
mov
gs
jmp
mov
and
sbb
aas
outs
lock
imul
cmps
pop
call
push
in
loop
inc
lods
mov
bound
movs
ret
into
pop
ds
sub
inc
fild
push
gs
mov
sub
mov
mov
sub
sahf
cmp
lock
jg
adc
or
aaa
jmp
inc
aad
add
fdiv
test
cmc
push
push
cmp
std
jp
sbb
jge
test
xchg
outs
ffree
cdq
and
popf
fimul
lock
sbb
sbb
push
loope
das
sbb
int
or
jae
into
pusha
adc
jne
jle
dec
jne
ins
(bad)
xchg
dec
jno
dec
and
add
jno
jl
xchg
das
ror
cmp
cmp
or
dec
loop
mov
mov
fs
cmovs
adc
in
jno
popa
in
test
stos
les
aaa
pop
mov
mov
xchg
in
and
test
imul
into
push
ret
push
sub
and
sub
sub
fcom
jl
xchg
jne
push
dec
pop
cmps
and
je
xchg
mov
dec
jmp
stc
jmp
mov
jl
add
jg
xchg
pop
cmp
mov
repz
popf
aas
and
aaa
cmp
fwait
dec
int3
sub
mov
ins
mov
jo
fs
pop
out
adc
mov
fst
dec
in
sbb
inc
je
inc
or
sub
pop
std
mov
stc
stos
mov
jmp
(bad)
jb
jmp
mov
out
test
cmp
xchg
fwait
jo
pop
jg
paddusb
sbb
leave
adc
in
xor
or
pop
pop
xchg
leave
add
std
push
xchg
jmp
lock
je
aas
mov
imul
push
imul
jbe
mov
cmp
adc
ret
fsubr
fld
mov
scas
jmp
dec
ret
lods
pop
out
cmc
xchg
je
adc
cmp
inc
and
mov
loope
adc
outs
add
sahf
icebp
jg
and
lods
jb
dec
sub
sub
cwde
ret
xchg
pop
test
push
pop
out
cmp
xor
aas
in
push
mov
pop
cmps
pushw
xor
xor
out
jmp
stc
xor
outs
cmps
sub
xchg
mov
inc
popf
mov
bound
jl
lock
and
xor
ins
(bad)
mov
rcl
jno
xor
adc
inc
pop
pop
jp
xchg
inc
iret
mov
lods
add
adc
inc
mov
mov
or
adc
outs
scas
ror
dec
cmp
or
(bad)
jne
adc
push
daa
pop
pop
mov
ins
sti
xchg
and
je
sub
or
cdq
movs
inc
sti
lods
jmp
(bad)
cdq
ins
aad
mov
mov
push
or
add
rcr
test
jp
std
mov
jle
push
fdivr
into
std
jnp
sbb
addr16
xor
inc
cmps
xchg
sub
ins
cld
shr
(bad)
out
ss
pop
std
mov
push
jb
mov
sti
mov
mov
and
dec
movs
or
xor
xor
xor
cwde
in
push
mov
pop
sahf
xchg
test
jne
jmp
or
in
lahf
loopne
ins
or
dec
les
mov
mov
mov
mov
lock
dec
je
imul
or
jg
mov
imul
pop
add
je
mov
mov
leave
cmps
in
mov
call
jno
inc
inc
je
cmp
in
mov
faddp
(bad)
or
outs
ins
add
and
ds
xor
mov
pop
popa
xchg
mov
cmp
pop
fdiv
std
jmp
xchg
sti
jmp
call
mov
sbb
xchg
sar
mov
fstp
fwait
add
jp
sar
aas
sti
int
or
mov
add
je
mov
xchg
mov
jmp
inc
outs
xor
pusha
aad
pop
add
je
fnsave
into
int3
sbb
dec
gs
xchg
fisub
retf
into
xor
jge
xchg
push
and
stc
push
clc
fldenv
pop
sbb
cli
cli
push
and
jmp
pop
les
ret
sub
sub
sub
cmp
loop
and
pushf
out
stos
sbb
jl
addr16
push
mov
add
in
dec
stc
xchg
mov
imul
jecxz
mov
mov
push
sbb
or
in
add
bound
mov
test
sbb
fiadd
mov
push
and
inc
pusha
scas
add
mov
sub
shr
pop
inc
pop
push
cmp
fisttp
mov
jnp
ins
mov
xor
xlat
pop
jle
aas
mov
push
lods
inc
mov
fsub
lahf
mov
or
shr
pop
mov
shl
sub
add
and
movs
repz
addr16
mov
xor
or
jle
ja
mov
xchg
jl
cmp
movs
adc
xor
retf
dec
retf
dec
repz
or
jns
jg
(bad)
int3
sbb
gs
mov
shl
in
dec
inc
xchg
sbb
(bad)
xchg
out
dec
neg
jecxz
push
mov
sub
and
fst
cli
sub
out
jecxz
push
fldenv
cmps
dec
repz
shl
(bad)
mov
or
sub
or
dec
xchg
cmc
test
ror
cmp
sub
cmp
test
jmp
iret
jo
jb
leave
in
xor
mov
sbb
lahf
leave
aaa
sub
std
jb
mov
push
clc
xchg
adc
adc
sbb
in
fisub
adc
xchg
adc
mov
sbb
in
div
fst
pop
push
inc
loopne
sahf
jns
mov
mov
sbb
mov
jmp
push
call
div
push
push
cmp
dec
movs
mov
and
inc
dec
div
jnp
test
or
dec
xor
int3
dec
xor
ins
push
inc
fdiv
dec
test
xlat
mov
repz
(bad)
int
sbb
sub
frstor
push
movs
stc
lds
imul
or
dec
pop
in
push
sbb
sub
cmp
aaa
xchg
fild
leave
inc
retf
xor
inc
pop
cwde
or
mov
jno
inc
cmp
sahf
mov
js
mov
dec
lahf
jl
pop
xchg
xchg
push
mov
dec
sub
cmps
jmp
lods
rcl
pop
push
and
and
pop
xchg
fdivr
dec
or
adc
jne
sub
fs
or
bound
lea
or
pushf
mov
xchg
xor
add
jbe
mov
jecxz
jo
(bad)
mul
fwait
pushf
cwde
mov
pop
inc
inc
xchg
jnp
mov
loopne
retf
movs
test
movs
mov
adc
(bad)
or
or
jnp
js
push
mov
outs
ficomp
jbe
nop
int3
cmps
lock
ins
sub
jmp
mov
(bad)
mov
sub
push
cwde
test
pop
xchg
fcom
mov
cmp
(bad)
fwait
sti
xchg
and
sti
sub
jae
addr16
mov
mov
xlat
push
fwait
xlat
and
mov
adc
sbb
push
and
push
cmp
push
pop
rcl
xor
hlt
xchg
sbb
push
dec
(bad)
sar
mov
aad
push
fstp
je
ja
aam
je
rcr
or
push
sbb
nop
adc
mov
sub
dec
jge
enter
jecxz
ret
and
popf
mov
idiv
pop
inc
dec
cmp
in
movs
mov
sti
xacquire
sbb
ffree
mov
addr16
dec
iret
inc
fild
fdivr
test
mov
pop
aad
push
fnstsw
mov
les
dec
shl
iret
xchg
fst
mov
icebp
ins
jb
fnstenv
sub
fnsave
cmp
inc
aam
sbb
xchg
xor
mov
add
xor
movs
stc
(bad)
inc
mov
xchg
and
mov
sub
inc
cmp
mov
jl
imul
mov
or
mov
mov
sub
mov
xchg
sbb
rcl
loop
das
sbb
dec
test
popa
scas
xchg
mov
mov
mov
adc
lock
xor
pop
ja
push
dec
sahf
mov
mov
sbb
inc
lods
gs
jns
(bad)
cmp
push
test
dec
rcl
in
out
mov
rcr
call
push
xor
xor
mov
repnz
sub
inc
xor
or
outs
ficomp
push
jle
(bad)
fmul
and
xchg
addr16
dec
(bad)
push
pop
xor
out
jb
sub
pop
push
inc
dec
or
mov
sahf
mov
mov
adc
adc
or
call
fild
pop
adc
int3
xchg
repz
out
pop
loope
and
imul
xchg
xchg
push
stos
dec
aam
int
pop
int3
stc
jmp
jno
cli
mov
out
ins
inc
mov
adc
lods
add
icebp
cmp
cmp
inc
dec
leave
daa
enter
outs
mov
ret
(bad)
push
xor
pop
cmp
xchg
test
xchg
js
cmp
in
mov
xchg
xchg
out
movs
sbb
aaa
iret
mov
aad
or
in
scas
mov
fs
imul
out
mov
nop
pop
cld
dec
inc
mov
push
mov
shl
aas
cmp
mov
test
pop
pop
retf
sbb
jns
and
inc
test
inc
push
ins
loop
xchg
int3
pop
mov
sbb
push
popf
mov
(bad)
sahf
cmc
pop
jl
adc
push
jae
xchg
push
cmp
es
push
out
in
xor
sub
push
sbb
xchg
movs
adc
in
in
xchg
jmp
pusha
(bad)
jne
aam
xchg
fisttp
call
aas
clc
cwde
or
scas
inc
fisttp
mov
xor
fsubr
push
mov
jae
xchg
inc
dec
jge
inc
int3
in
jb
in
rcr
and
movs
(bad)
xchg
fld
push
push
lock
pop
inc
lods
pop
and
out
or
mov
sbb
sti
clc
ror
popf
stc
sub
adc
fimul
inc
shl
dec
leave
pop
push
movs
lds
or
mov
pop
jmp
ja
cs
cmp
rcr
add
cmp
clc
enter
popa
push
pusha
lds
pop
cmps
inc
js
sbb
adc
in
pop
repnz
js
lods
and
push
pop
nop
mov
mov
push
movs
pop
mov
inc
stos
adc
jb
sub
push
push
(bad)
pop
mov
mov
aad
mov
call
pop
jno
and
mov
(bad)
out
pop
aam
pop
mov
dec
sbb
adc
pop
jp
adc
int3
(bad)
mov
push
mov
stos
jnp
inc
arpl
xor
mov
pop
test
stos
jp
inc
jmp
lods
fwait
xlat
lods
xchg
and
inc
shl
cmps
in
imul
add
push
ja
dec
mov
cmp
jl
or
xor
mov
jle
jecxz
mov
fild
sub
scas
mov
or
push
add
jle
jg
cs
fstp
loopne
xchg
out
dec
imul
(bad)
pop
daa
jg
push
jecxz
inc
imul
mov
add
mov
jecxz
xchg
icebp
inc
int
fisubr
and
xor
pop
xor
push
cmps
test
dec
and
dec
and
pop
fs
stos
(bad)
pusha
pop
pop
jmp
in
bound
xchg
lea
into
in
mov
sbb
push
mov
sub
aad
cwde
retf
(bad)
xor
aas
fsub
adc
cmp
call
xor
push
(bad)
scas
mov
ror
pop
shr
aas
dec
into
sahf
xchg
into
push
xchg
mov
iret
dec
pop
ds
push
shl
mov
popf
cmp
mov
pushf
js
xchg
sub
jmp
out
inc
mov
call
das
in
iret
and
adc
jmp
test
shl
inc
in
pop
add
mov
xor
outs
inc
cmp
jns
jne
cmp
inc
adc
or
daa
aam
rcl
sahf
aad
mov
pop
in
dec
mov
dec
jns
pop
xchg
fucomi
and
adc
push
shr
xor
scas
std
mov
and
or
jle
(bad)
jae
xchg
adc
add
xor
cmp
ja
cwde
jmp
push
in
sbb
cmp
pop
sub
dec
hlt
mov
es
pop
and
dec
repnz
mov
sar
ja
push
pop
call
sub
std
test
btr
sbb
aad
mov
outs
loope
sahf
or
dec
cmps
jecxz
xor
inc
jecxz
inc
adc
enter
jmp
xlat
mov
rol
addr16
call
and
cli
sub
add
fmulp
pop
inc
iret
jmp
fcos
nop
addr16
repnz
cmc
mov
and
sub
enter
cli
jne
gs
adc
int
retf
lds
mov
mov
lea
jecxz
sbb
pushf
ins
aas
ror
mov
gs
xchg
sbb
das
out
jo
pop
ret
repz
push
repz
dec
jb
icebp
movs
fisttp
adc
dec
das
fs
sub
pop
(bad)
aad
scas
leave
dec
inc
dec
lea
ss
xchg
(bad)
sub
popa
(bad)
or
ret
sbb
cdq
jl
out
xchg
cwde
pop
jno
mov
xchg
aam
jp
mov
ja
in
enter
cmp
or
sbb
xchg
jns
frstor
inc
ret
pop
jp
(bad)
jg
retf
push
xchg
pop
push
psrad
jne
xchg
(bad)
mov
push
test
cmp
cdq
xchg
cs
rcl
loop
cmps
rcr
jae
cld
add
mov
fisttp
cmp
pop
dec
jae
ins
jge
mov
test
xchg
ficomp
sti
ds
ja
inc
fs
and
dec
jns
sar
mov
je
xor
dec
pusha
shl
clc
lods
test
ja
cmp
aaa
or
xor
pop
mov
mov
pop
dec
(bad)
mov
mov
scas
outs
cwde
sub
or
sub
ret
rcl
fdivr
pushf
aaa
enter
das
push
mov
div
and
div
dec
mov
xchg
sub
mov
xor
xor
loope
inc
xchg
cld
inc
mov
clc
or
clc
(bad)
in
and
sahf
sub
xchg
push
pop
mul
int
sub
fs
ja
scas
sbb
movs
sti
cmp
stos
loopne
repz
jnp
scas
add
aam
mov
fbstp
int3
ins
xchg
inc
sub
jae
jecxz
pop
jmp
rcr
int3
inc
jno
cmp
mov
adc
xchg
xor
xlat
dec
cmp
cmp
loopne
jecxz
stos
pop
sahf
out
aaa
fcomp
mov
retf
push
imul
rol
pop
mov
mov
into
mov
or
mov
dec
scas
arpl
or
inc
lds
and
lds
loopne
sub
push
lahf
jb
push
adc
imul
pushf
cmp
mov
(bad)
les
or
jmp
int3
stos
fist
sub
sub
ins
(bad)
stc
inc
int
jmp
jb
push
scas
jns
or
fcmovne
xchg
repnz
fmul
inc
mov
into
icebp
addr16
shr
xchg
les
(bad)
in
sub
pop
adc
or
or
std
push
cmp
jp
out
int3
dec
dec
les
out
mov
pop
mov
push
pop
xchg
leave
in
push
jno
cmp
fwait
aaa
push
sub
adc
sti
cmps
xor
cs
sbb
ror
int
vpsrld
test
jle
cmc
ret
mov
(bad)
pop
jmp
add
mov
adc
ins
loope
sbb
out
fldenv
or
push
aam
je
pop
fwait
xchg
std
xchg
daa
adc
adc
fdivp
(bad)
xchg
cwde
movs
gs
test
std
cmp
mov
adc
mov
sahf
sub
sub
xlat
adc
lods
mov
shl
mov
jae
inc
mov
fs
xchg
mov
adc
mov
imul
aaa
out
mov
add
mov
outs
add
mov
(bad)
sahf
fs
bound
stc
repnz
fwait
cmc
das
pushf
mov
and
push
pop
sti
xor
mov
mov
cmp
dec
fsub
out
or
sbb
jnp
stos
and
cs
xchg
mov
mov
jbe
pop
inc
cmc
jae
ss
mov
ret
aad
dec
out
scas
jle
and
retf
(bad)
jl
dec
push
jbe
les
jmp
sahf
pop
cmp
call
mov
repnz
cmp
iret
ror
or
pop
mov
inc
fcmovne
fld
jmp
or
mov
dec
hlt
imul
sar
jb
xor
fsubp
aas
sar
cmp
and
test
xlat
cmps
ss
jecxz
das
and
mov
lods
mov
jae
cmp
stc
(bad)
xchg
sbb
mov
jle
mov
jl
push
arpl
repnz
xor
sub
xor
lea
call
cmp
arpl
xchg
pop
mov
push
jmp
dec
fwait
in
ss
jle
add
xor
sahf
test
outs
sbb
add
in
jbe
inc
ins
push
shl
loopne
jl
movs
jmp
jmp
mov
fmul
arpl
lods
aaa
and
in
test
out
mov
sub
cmp
fisubr
mov
jbe
out
mov
add
mov
push
dec
mov
and
dec
cmps
and
add
cmp
adc
retf
inc
in
mov
test
repnz
push
ret
repz
repnz
pop
mov
add
or
scas
dec
xchg
push
jmp
jb
fisttp
dec
stos
jp
js
pmulhw
pop
xor
or
cld
cmp
push
test
shl
and
addr16
adc
shr
cmp
and
xor
bound
repnz
xchg
popf
or
fdiv
adc
test
je
pop
jnp
stos
mov
push
xlat
sub
adc
in
inc
mov
mov
xor
xchg
sub
imul
stos
(bad)
iret
popa
jo
out
xor
out
or
into
mov
out
or
or
aas
ss
loope
ins
retf
and
inc
mov
pop
sbb
sbb
xchg
xor
lds
jo
xchg
mov
leave
cmp
add
add
ret
and
ror
(bad)
xchg
xor
test
ins
scas
jns
clc
sub
pop
jmp
imul
popf
mov
adc
ins
aad
sub
adc
cmp
push
lods
in
mov
call
call
sbb
push
and
movups
cmp
les
cmp
mov
ror
pushf
loop
stos
(bad)
mov
in
popa
rcr
cmp
mov
jns
pop
imul
jl
lods
mov
rcr
fisttp
sar
loope
pop
cs
daa
mov
adc
xchg
inc
out
ja
popf
dec
es
out
add
mul
add
das
mov
mov
mov
cmp
das
adc
mov
fbstp
inc
mov
or
fwait
mov
jp
pop
push
(bad)
int
mov
fiadd
jne
bnd
inc
mov
xor
push
or
push
pushf
ja
rol
inc
sti
jnp
mov
cmp
int3
inc
inc
ss
inc
inc
call
pop
cmp
lock
sar
call
fucomip
sbb
rol
jno
repz
ds
fiadd
cmp
ins
addr16
sub
xchg
jo
adc
jae
push
mov
(bad)
mov
shl
xchg
jmp
push
or
mov
mov
or
movs
sub
mov
adc
cli
cmc
fwait
xlat
bound
scas
ret
xchg
fwait
pop
movs
mov
jmp
mov
push
xchg
and
mov
xchg
out
cmp
xor
inc
and
es
fadd
je
add
int
ror
xor
push
xor
sbb
js
pop
sub
int
xchg
push
dec
sub
cld
xchg
and
mov
adc
pop
xchg
push
inc
cmc
push
dec
mov
and
dec
in
pop
sbb
js
xor
adc
retf
sbb
push
pop
cli
mov
xor
outs
call
inc
dec
mov
imul
or
or
retf
jle
xchg
sub
je
cli
imul
(bad)
push
xchg
jno
pop
cld
jecxz
xchg
mov
pop
pop
push
mov
mov
adc
mov
cmp
cmp
in
cwde
sar
jg
xor
cmps
(bad)
stos
pop
push
pop
repz
xor
outs
cmp
test
inc
cmp
sti
pop
dec
push
punpckldq
sbb
ins
add
aam
jae
push
mov
and
sbb
pop
gs
mov
lock
aad
or
pop
cmps
loop
adc
dec
(bad)
cli
fidiv
stos
pop
push
rcr
jno
mov
adc
fisubr
adc
jmp
xchg
push
outs
add
int3
imul
movs
aas
call
dec
push
mov
sub
fldcw
int3
sub
xor
imul
jae
pop
sub
mov
mov
nop
jle
cmp
rcl
(bad)
xor
push
retf
dec
sub
jp
pop
mov
test
dec
ret
bound
frstor
sub
iret
push
adc
aaa
imul
jb
out
sbb
sub
mov
push
adc
stc
shl
mov
jnp
rcl
fwait
mov
enter
jmp
loop
mov
adc
int3
jge
push
movs
mov
fnstsw
push
or
rcr
jge
xlat
or
(bad)
pop
nop
fisttp
mov
ins
call
(bad)
and
mov
pop
push
adc
imul
xchg
in
mov
pop
adc
lods
inc
pop
dec
dec
cmps
mov
in
les
cmps
mov
dec
test
xchg
dec
sbb
loop
mov
sbb
inc
in
jp
cmp
jmp
out
jae
add
dec
xchg
push
popf
pushf
pop
sti
mov
adc
outs
push
inc
pop
add
int3
jmp
lock
je
fisttp
push
mov
std
jmp
or
(bad)
iret
out
ret
std
cmp
push
pop
mov
adc
dec
jno
jne
xchg
jl
leave
sub
in
cdq
ins
scas
dec
add
maxpd
repnz
dec
repnz
aaa
sti
into
arpl
inc
pop
(bad)
call
rcl
sbb
int
dec
add
add
mov
fild
add
xchg
cmps
addr16
xchg
and
(bad)
pop
fimul
add
ret
movs
dec
fcomp
iret
push
outs
xchg
ds
stos
stos
sti
mov
mov
adc
test
into
xor
push
(bad)
push
push
shr
addr16
into
pop
jo
out
mov
leave
sbb
inc
jge
mov
jae
or
enter
out
mov
fndisi(8087
mov
adc
add
aad
(bad)
les
inc
ins
push
ds
cmc
lahf
jle
adc
xchg
sbb
(bad)
or
shr
cmp
xlat
jecxz
mov
push
shl
lods
fdivp
es
(bad)
pop
in
jb
push
(bad)
ss
inc
xchg
sub
add
hlt
scas
ret
jl
sbb
cs
mov
or
stos
cmp
pop
and
adc
push
adc
mov
addr16
movs
xchg
mov
jns
cmp
xor
add
pusha
(bad)
jle
mov
xchg
or
stos
adc
ins
sub
pop
out
jno
mov
add
aam
dec
push
jmp
mov
ins
cwde
ret
jmp
shl
outs
inc
pop
in
lock
sub
mov
cmp
pushf
push
into
aad
hlt
inc
je
outs
retf
pop
stos
xchg
or
mov
pop
imul
call
jge
sub
test
pop
enter
movs
push
adc
js
inc
dec
ret
in
pop
repnz
into
es
not
and
push
(bad)
into
jl
mov
popf
adc
movs
int3
test
inc
push
push
mov
push
icebp
mov
jecxz
sbb
out
retf
arpl
add
cs
iret
cmc
or
fmulp
enter
add
mov
and
bound
leave
iret
dec
mov
jb
neg
int3
frstor
loopne
movs
jnp
movs
movs
fcmovb
mov
mul
repnz
inc
dec
push
test
jns
clc
scas
test
dec
mov
sub
sbb
das
in
jne
jmp
dec
or
mov
out
arpl
in
test
es
cmp
pop
les
or
adc
and
dec
pop
xor
pop
adc
or
cwde
int
inc
retf
push
ins
jp
jl
aad
out
add
int
xor
add
dec
pop
sbb
jge
fst
data16
in
retf
(bad)
fdivr
test
pop
in
mov
push
push
loop
cmp
inc
cmp
cwde
xchg
pop
or
stos
dec
aas
mov
jge
stos
je
mov
std
mov
jmp
leave
popf
aaa
jae
cmp
mov
push
dec
stos
hlt
xchg
push
sbb
ret
test
pop
mov
mov
or
ja
adc
aas
jg
in
retf
aas
retf
xchg
sub
js
hlt
push
aad
xchg
xchg
lods
adc
cmp
std
loop
iret
(bad)
cld
aaa
mov
add
or
push
aas
(bad)
push
dec
addr16
mov
cmp
pop
sbb
test
sbb
int3
pop
adc
xchg
out
sbb
out
popa
cmp
out
pop
push
mov
inc
add
add
xor
mov
cmp
div
loop
das
xchg
mov
fistp
movs
jne
arpl
scas
aas
push
out
movs
mov
(bad)
add
sbb
std
mov
mov
es
icebp
pop
fdivr
lock
pop
ror
push
loopne
xchg
cld
ja
dec
or
push
or
adc
dec
out
push
call
setp
lea
cmp
or
lahf
stc
in
mov
repz
out
test
ror
dec
adc
out
call
call
mov
xchg
imul
add
int
sub
je
xlat
scas
inc
sub
lds
push
mov
pop
gs
test
(bad)
xor
ins
mov
(bad)
das
cdq
xchg
push
test
aad
div
push
cmps
inc
(bad)
loop
mov
lahf
add
mov
lods
xlat
les
fstp
in
fisttp
enter
xchg
push
push
mov
scas
cmp
stos
sub
sbb
and
cmp
lods
cmp
pop
fsubr
fs
pushf
ins
dec
pop
(bad)
aas
xchg
cmp
sbb
mov
ins
in
sbb
into
sub
mov
cmps
xor
imul
mov
sub
arpl
bound
xchg
jnp
loop
call
adc
lods
xchg
test
std
(bad)
jb
pop
lea
fisubr
and
xor
and
jp
jmp
inc
mov
shl
cli
(bad)
test
push
dec
mov
jp
xor
out
adc
xor
jae
ds
mov
clc
rol
mov
inc
pop
xchg
mov
adc
call
add
push
hlt
xchg
call
sbb
aaa
iret
xlat
pop
jns
popa
in
pop
sar
(bad)
mov
mov
inc
rcr
je
dec
ret
stos
cmps
(bad)
jno
fs
adc
std
adc
hlt
int3
js
mov
xchg
mov
les
adc
test
es
inc
pop
mov
push
addr16
push
dec
dec
and
push
xor
jns
cmp
nop
inc
hlt
push
jnp
rcr
xchg
scas
and
xchg
and
pop
mov
aas
mov
cli
out
ret
cli
mov
pop
(bad)
jl
les
(bad)
ins
jecxz
pop
xor
push
add
cmc
cmps
call
mov
sahf
out
or
fild
adc
xor
enter
mov
push
cmps
outs
cmp
inc
js
mov
or
add
and
imul
neg
mov
dec
or
jo
push
cmp
fld
and
pop
rcl
adc
(bad)
lock
shl
pop
retf
push
mov
hlt
push
push
ret
dec
shr
sti
arpl
push
pop
pop
cmps
dec
test
pop
xchg
cwde
jecxz
(bad)
mov
dec
pop
shr
mov
stos
ds
fcom
movs
xor
sub
add
jle
stos
repnz
(bad)
lahf
pop
call
jb
sti
into
jg
(bad)
jp
jmp
fadd
xor
repnz
dec
pop
cmp
enter
cli
loop
sbb
mov
xor
aad
xor
add
xor
inc
js
sub
cmp
or
xchg
fisttp
repz
loopne
ins
xlat
in
dec
cmps
cmp
sbb
pop
sbb
pop
mov
mov
sub
mov
push
fwait
inc
push
xchg
xor
cli
mov
or
or
and
xor
and
lods
daa
mov
jl
mov
movs
inc
shl
jno
mov
xlat
mov
or
mov
mov
test
fnsave
retf
xor
cmc
dec
fsubr
leave
sub
mov
in
sbb
neg
jns
ret
adc
fnstenv
rol
fwait
addr16
sub
or
jecxz
rep
xchg
cli
xor
push
mov
adc
dec
(bad)
(bad)
lahf
fsub
mov
mov
jns
xor
test
mov
inc
xchg
retf
add
(bad)
rcr
xchg
inc
xchg
adc
jp
jp
and
jne
push
and
cmp
out
xor
stc
hlt
adc
mov
cdq
data16
sub
add
int
inc
lock
cmp
pop
stos
mov
repnz
xchg
mov
mov
test
and
sub
test
stc
mov
sub
fwait
xor
add
into
fucom
sub
int
push
fwait
iret
fst
std
jmp
dec
(bad)
test
call
xchg
lahf
retf
stos
push
mov
lods
cs
loopne
xchg
icebp
pop
fwait
repz
int
pop
bound
push
inc
lods
clc
jno
mov
pop
add
shr
push
dec
icebp
dec
aas
mov
jmp
xor
(bad)
ins
daa
or
stos
lock
outs
and
arpl
sbb
mov
push
lahf
(bad)
fwait
(bad)
dec
fcmovnb
fiadd
jmp
cld
call
or
cmovl
inc
xlat
int3
ret
push
scas
bound
loopne
jmp
data16
rol
or
and
sbb
in
repz
xor
(bad)
mov
loope
iret
push
push
scas
mov
cmp
and
xor
rol
sar
outs
mov
aaa
in
shr
jg
scas
xor
neg
sub
cli
enter
mov
cli
lock
scas
lds
movhps
ffree
stos
adc
mov
jmp
push
out
in
xor
inc
rol
mov
mov
outs
xchg
sub
xor
mov
dec
das
pop
jl
popa
les
lods
jge
cmp
push
push
imul
shr
test
mov
or
test
pop
lock
xchg
jo
fwait
or
ds
push
cmp
sahf
(bad)
loop
pushf
dec
mov
repnz
mov
mov
mov
jl
ret
sti
mov
xor
inc
push
lods
pop
dec
cmp
jp
mov
add
or
outs
adc
add
mul
fld
mov
data16
adc
jg
push
dec
fcmovbe
and
fwait
mov
adc
sbb
push
sti
push
pusha
repnz
(bad)
cmc
in
adc
jmp
int3
rcl
out
and
leave
or
mov
mov
loope
mov
xchg
int
(bad)
(bad)
jmp
ja
jmp
jne
mov
and
inc
gs
and
aad
scas
ret
rcl
mov
pop
inc
xor
adc
sti
out
xchg
push
iret
ret
mov
dec
repnz
shl
cmp
and
sub
adc
jae
cli
mov
jo
nop
dec
mov
add
xchg
fidivr
xchg
mov
and
fisubr
xlat
mov
imul
bound
cmp
jge
mov
sbb
aam
sbb
mov
dec
inc
jae
cmp
test
popa
cmp
and
jg
mov
in
aaa
test
adc
(bad)
xor
push
mov
adc
les
out
fistp
daa
add
fnstcw
pop
fwait
sbb
pop
mov
fisub
push
fnstcw
mov
mov
out
lods
push
ins
and
pop
daa
mov
and
jae
pop
inc
mov
out
call
sub
das
push
inc
add
xchg
(bad)
pushf
and
fdivr
sbb
lods
inc
mov
mov
aam
stos
pusha
xor
jae
mul
mov
in
and
(bad)
pop
xchg
dec
dec
push
mov
fsincos
ja
and
dec
mov
repnz
in
cmc
and
jae
xchg
scas
cdq
mov
mov
sar
mov
dec
adc
daa
pop
out
mov
xchg
add
hlt
mov
xchg
cmp
push
adc
jo
mov
movs
push
mov
fwait
inc
jmp
pop
push
dec
mov
mov
sub
lahf
inc
fld
push
loope
add
or
jmp
std
inc
push
daa
jmp
push
xor
sahf
(bad)
fisttp
cdq
push
cli
popa
push
out
xchg
pop
inc
enter
test
shl
rcr
mov
xlat
sbb
dec
and
pop
cmp
mov
push
out
rcr
cwde
sub
inc
cmps
in
xchg
int3
aad
mov
aad
std
in
mov
dec
addr16
jmp
or
lods
lahf
pop
mul
lods
sbb
sub
cli
adc
mov
dec
aad
pop
je
adc
(bad)
push
scas
inc
or
pop
fadd
xchg
inc
bound
imul
mov
call
hlt
(bad)
mov
sahf
cmp
inc
mov
cmps
arpl
fbld
inc
scas
xor
jg
add
inc
cdq
pusha
sar
(bad)
mov
outs
rcl
shl
std
in
mov
mov
pushw
clc
in
cmp
jge
jmp
out
mov
fxch
xchg
fdivr
movs
in
fwait
aad
pop
add
ret
or
sub
fcom
test
jns
xor
push
add
test
rcl
xchg
(bad)
aad
idiv
ins
and
push
mov
xlat
fadd
cmp
jo
pop
and
aaa
int3
and
xor
mov
or
jg
or
sbb
js
jb
aad
mov
inc
pushf
out
mov
push
in
xchg
cmp
imul
leave
ficom
pop
and
retf
aad
xor
mov
dec
add
(bad)
jb
rcl
mov
jl
pop
jl
icebp
(bad)
sti
jo
dec
into
or
mov
add
ja
ja
or
and
and
movs
jl
and
inc
sar
je
sub
mov
dec
ficomp
loopne
arpl
sub
xchg
jg
popa
mov
mov
gs
pop
push
(bad)
(bad)
out
push
in
cdq
int
test
and
nop
daa
fwait
shl
mov
and
sti
xchg
ret
adc
dec
js
clc
ds
stos
(bad)
add
out
js
and
cmp
and
stos
adc
inc
retw
pop
ror
cmp
cmc
mov
pop
shl
push
(bad)
aas
push
stc
mov
dec
aaa
or
sub
retf
sub
sahf
rcr
fisttp
das
or
push
fisubr
imul
cmp
test
cdq
int
sbb
fwait
pop
fild
pop
loope
repz
adc
inc
mov
mov
xchg
in
sub
or
mov
or
gs
sahf
and
jmp
xchg
stc
mov
les
fist
and
clc
fwait
pop
scas
jno
dec
inc
cmc
addr16
into
cs
ins
stos
int
or
std
mov
xor
xchg
cmp
test
ja
add
dec
mov
data16
(bad)
xlat
repnz
nop
xor
loope
sti
movs
ins
es
call
into
test
xchg
sub
sub
pop
xor
cmp
call
fdiv
test
fwait
sub
inc
jge
das
push
pop
add
xor
fld
dec
dec
fsubr
and
or
push
int3
jmp
jno
adc
add
pop
movs
push
pop
dec
jg
dec
in
cmp
in
xor
loopne
add
loope
test
fcomp
xchg
shr
aas
jo
jno
push
test
cmps
fistp
push
inc
pop
ror
rol
cli
sub
sub
cdq
(bad)
push
mov
xor
fistp
inc
inc
dec
jns
pop
pushf
(bad)
and
or
aaa
push
push
push
std
xchg
(bad)
fxch
mov
sbb
mov
aam
or
add
push
xor
sti
push
xchg
mov
icebp
sub
push
aaa
lahf
mov
cmp
jmp
shr
cmps
xchg
jo
ret
(bad)
repnz
xchg
in
ret
inc
inc
xor
mov
(bad)
and
das
push
movs
mov
push
or
push
push
or
out
mov
fbstp
ins
push
dec
pop
mov
mov
jae
ja
ja
lds
ret
(bad)
imul
imul
mov
inc
loop
ror
dec
fstp
fld
(bad)
shl
(bad)
mov
lods
push
add
sub
mov
mov
out
cmp
jo
mov
aad
xchg
push
mov
jle
out
in
test
loop
or
fwait
push
popa
loopne
mov
aam
rol
ret
stos
cwde
jbe
pushf
out
cmp
(bad)
inc
sahf
sub
xchg
out
mov
scas
mov
jmp
test
cmp
ds
mov
sti
pop
mov
into
sub
clc
jo
outs
aad
scas
sti
cmp
iret
add
or
inc
pop
aad
push
jno
dec
ss
xchg
jmp
stc
int3
pop
outs
push
ror
and
int3
pop
in
das
call
push
sti
(bad)
mov
jle
ds
daa
cli
in
sbb
or
cmp
push
pop
fcomp
hlt
cmp
add
and
dec
push
dec
mov
test
adc
xchg
add
mov
push
mov
in
jp
test
aaa
mov
pop
adc
sub
jecxz
cdq
pop
outs
(bad)
sub
popa
jge
and
inc
and
out
cmp
cld
icebp
cdq
(bad)
adc
mov
pop
cmp
mov
xchg
das
test
cwde
das
hlt
stos
mov
dec
cld
and
(bad)
cmps
out
loopne
jae
enter
dec
sbb
cmps
rol
js
push
and
fstp
pop
test
es
jno
add
iret
dec
cmps
adc
inc
mov
push
nop
mov
pop
retf
addr16
mov
test
stos
je
xchg
(bad)
ror
push
ja
in
std
xchg
in
xor
jo
add
pop
cmps
in
imul
inc
test
fisubr
ins
sub
sub
in
push
mov
cmps
and
pop
loop
cmps
mov
rcr
mov
sub
(bad)
pusha
sub
mov
aaa
mov
push
push
pop
add
jae
or
add
fld
es
push
movs
fimul
aad
add
mov
jnp
mov
xchg
mov
cmp
pop
pop
push
mov
inc
movs
dec
add
xchg
(bad)
sub
fld
ja
in
lahf
mov
sbb
xchg
sub
popf
jns
mov
cmps
outs
popf
jne
popf
(bad)
mov
jnp
push
push
jp
mov
pop
out
xor
sbb
and
push
cmp
inc
jo
mov
dec
retf
fdivr
in
sub
sbb
dec
xchg
fwait
mov
test
cmp
xor
mov
jb
lahf
dec
shr
mov
inc
pop
retf
rcr
shr
call
cdq
jle
xor
push
mov
push
xor
adc
adc
inc
dec
das
ret
xor
xor
mov
into
mov
or
sti
les
sar
inc
out
test
push
aas
dec
std
inc
xchg
inc
and
cmp
dec
mov
sub
dec
int
enter
aam
dec
in
xchg
aaa
mov
fs
enter
mov
lea
ret
lahf
xchg
fldcw
fadd
pop
arpl
mov
clc
js
jns
addr16
test
in
jae
(bad)
add
dec
inc
xchg
in
mov
out
jge
stc
cmp
hlt
psubusw
mov
pop
xor
div
sbb
xchg
push
(bad)
hlt
ss
and
rcr
jne
scas
dec
cmp
xchg
(bad)
enter
ins
mov
inc
leave
sar
jno
jl
jnp
inc
xor
adc
je
aam
xor
test
mov
es
or
mov
not
cmp
lahf
and
jbe
push
or
sub
rcr
fild
push
sbb
out
mov
or
sar
clc
fsub
into
and
pop
dec
(bad)
lahf
into
lods
jmp
ins
push
aad
fwait
mov
out
ss
xor
push
ret
mov
pusha
jle
fst
sti
dec
jge
ucomiss
mov
ins
cmc
jg
jne
test
arpl
je
xchg
loope
jle
jne
neg
cmps
pop
jo
data16
scas
push
cmps
mov
jne
jecxz
sahf
xchg
adc
or
and
ss
rol
popa
(bad)
ror
mov
add
sub
and
push
dec
or
mov
leave
xor
xchg
sar
fidivr
aam
adc
mov
adc
lods
outs
add
xor
push
inc
imul
jg
int3
je
ds
sub
loope
push
jle
je
pop
xchg
jmp
out
push
dec
xchg
or
jle
daa
pop
mov
cdq
mov
cmp
push
shl
and
mov
cmps
(bad)
fst
(bad)
fistp
stc
in
shr
xor
xchg
xor
ret
cmp
mov
pop
push
lea
pop
jle
jae
inc
jmp
aad
aas
jmp
cli
mov
test
and
out
mov
retf
call
mov
outs
popf
mov
jbe
call
imul
fwait
sub
fisubr
and
mov
out
std
mov
xchg
pop
adc
push
jne
xor
push
shl
or
sub
mov
daa
lds
hlt
sub
ds
or
mov
nop
daa
loope
mov
jmp
add
pop
pop
adc
mov
jmp
les
pop
std
data16
cld
(bad)
fistp
(bad)
pminub
sub
stos
icebp
pusha
ss
and
cdq
test
test
jbe
iret
mov
inc
bound
pop
adc
xor
add
mov
(bad)
dec
repnz
lods
mov
mov
sti
push
stos
pop
sub
pop
xor
sbb
daa
int
xchg
retf
leave
inc
test
sbb
jne
(bad)
movs
jle
out
push
inc
cmc
mov
push
daa
cmps
hlt
hlt
push
jge
push
sahf
(bad)
loop
hlt
int3
pop
and
sbb
jmp
xor
dec
pop
jae
test
inc
mov
(bad)
popf
call
dec
xor
rcl
(bad)
pushf
(bad)
pop
mov
out
int3
xor
scas
cmp
loope
xchg
dec
out
push
aas
mov
push
imul
and
out
popa
dec
jg
cli
cld
lds
jmp
adc
test
cdq
cmp
adc
jb
push
cmc
dec
ret
lods
sbb
or
jne
mov
mov
sub
mov
test
or
mov
sub
push
xor
cmp
loope
jno
mov
push
retf
add
xchg
(bad)
xor
pushf
fdivr
fwait
jno
adc
js
mov
daa
mov
xchg
aas
test
in
test
add
cmp
dec
mov
jg
paddusw
jo
sbb
jnp
adc
mov
add
es
test
outs
xor
xchg
test
call
cdq
aad
jae
cmp
mov
pop
int3
test
aad
ins
and
imul
xlat
pop
(bad)
aam
inc
ret
sti
sar
(bad)
push
jno
arpl
nop
das
popf
push
call
adc
lods
imul
mov
adc
shr
inc
aaa
jne
imul
fnstenv
push
and
push
sub
inc
dec
call
enter
outs
imul
lods
or
sbb
inc
xchg
mov
inc
pop
js
test
sbb
jno
movs
push
out
mov
(bad)
loopne
je
stos
push
ss
push
push
daa
iret
dec
or
xchg
sub
jl
inc
fimul
test
bound
sahf
shr
shl
test
mov
int3
in
movs
inc
inc
fstp
repnz
xlat
xchg
mov
push
fist
adc
in
call
xchg
aad
cmc
ret
adc
dec
shr
int3
xchg
in
(bad)
mov
jae
add
or
(bad)
and
lods
test
pushf
(bad)
iret
rcl
xchg
gs
fidivr
push
pop
rcr
test
push
xlat
out
cmp
inc
fst
call
fimul
aas
aad
out
pushf
inc
xchg
cmp
or
pop
push
jb
in
mov
imul
inc
inc
(bad)
clc
or
cmp
es
fcmovb
xchg
iret
mov
mov
pop
mov
aaa
pop
and
and
mov
push
nop
mov
lods
and
dec
idiv
pop
jmp
pusha
add
test
push
push
dec
out
pop
xor
adc
lahf
pop
jg
mov
mov
jecxz
out
mov
and
loopne
retf
lods
xchg
mov
adc
daa
popf
adc
js
les
mov
lock
cmp
mov
mov
jb
leave
jmp
hlt
sub
sbb
dec
pop
inc
mov
xchg
gs
test
out
xor
mov
shld
cmp
les
hlt
sub
ror
aad
jle
jns
adc
push
or
pusha
mov
test
test
jmp
cdq
pop
xchg
jne
call
das
pop
sbb
fwait
mov
inc
mov
shl
adc
mov
xlat
or
rcl
jecxz
stc
adc
pop
into
cmp
xor
and
cwde
push
icebp
scas
jmp
lods
jno
repz
mov
(bad)
sar
rol
test
clc
repnz
or
pop
mov
mov
aas
mov
nop
pop
cld
xchg
sbb
xor
xor
xchg
dec
idiv
sub
jae
popf
popf
ja
mov
dec
retf
push
in
pop
mov
pause
adc
pushf
mov
dec
sbb
pop
repnz
cmp
jns
in
div
retf
push
mov
mov
daa
inc
nop
mov
nop
lock
cli
iret
mov
sub
leave
xchg
xor
es
les
vphadddq
and
adc
dec
aad
mov
add
mov
mov
mov
imul
outs
gs
pop
movups
push
cmp
(bad)
scas
mov
ins
out
jns
sti
push
je
inc
pop
loope
sub
mov
push
mov
and
or
or
movs
in
fld
pushf
ins
repz
cli
loope
pop
(bad)
(bad)
data16
jae
pop
xchg
sar
fnstcw
fwait
or
and
jmp
pop
xchg
jmp
xchg
add
dec
adc
test
sahf
mov
leave
add
inc
inc
jae
popa
sub
mov
hlt
mov
fldenv
(bad)
faddp
mov
into
lea
clc
sub
jge
cmp
pop
xor
mov
lods
inc
cmps
adc
inc
out
pushf
std
aam
outs
dec
mov
pop
xlat
xchg
dec
jmp
sub
push
outs
mov
jns
lds
stos
mov
xor
(bad)
mov
add
mov
lods
fist
mov
jae
rol
clc
inc
jmp
int
ds
xchg
mov
int3
(bad)
or
sub
lods
jle
jbe
(bad)
scas
mov
in
mov
mov
dec
jne
scas
jb
sbb
cmps
movs
mov
or
xchg
mov
or
rcl
cmps
or
inc
imul
jecxz
nop
es
add
adc
aaa
push
dec
push
pop
pusha
sub
retf
cmp
aas
jp
ror
xchg
test
scas
mov
and
jmp
js
cmp
or
or
mov
xlat
jp
sbb
adc
fild
popa
dec
fsub
jle
mov
cs
mov
into
cmc
push
mov
je
fs
and
add
sahf
jecxz
bound
retf
repz
leave
aam
lea
push
rol
xlat
nop
mov
mov
jg
jge
sub
xchg
dec
ins
aad
sahf
fbstp
mov
push
cmc
add
jecxz
mov
xchg
popa
mov
mov
inc
cmps
popa
mov
scas
add
dec
mov
imul
add
jbe
mov
mov
push
bound
cmp
pop
mov
dec
push
aad
repz
adc
push
push
mov
pushf
mov
inc
cli
ror
std
add
shr
daa
pop
jno
push
int
push
pop
das
jle
mov
mov
ja
(bad)
add
mov
call
jo
out
push
sub
mov
xchg
(bad)
lea
mov
gs
mov
adc
and
ret
outs
pop
jp
loope
xchg
fisub
and
add
pop
not
jmp
imul
in
es
aaa
mov
mov
cmps
pushf
mov
fdivrp
jae
shl
adc
jmp
repnz
add
mov
leave
(bad)
in
(bad)
dec
xor
lods
mov
push
mov
push
int
lds
fldcw
mov
aam
icebp
cmp
xchg
fwait
movs
add
and
bound
dec
ins
xor
cmp
jmp
fisttp
dec
mov
mov
add
mov
ins
push
fwait
mov
add
adc
ds
push
jne
shl
pop
aam
(bad)
dec
hlt
lea
hlt
(bad)
fadd
mov
lock
pop
mov
(bad)
and
xchg
mov
cmp
mul
xor
push
inc
jb
out
(bad)
adc
js
xor
jp
(bad)
push
push
sub
xchg
in
fisubr
cli
pop
mov
sbb
cmps
mov
xor
or
jecxz
das
and
cmps
rcr
in
inc
cmp
pop
cwde
sbb
mov
mov
cmp
mov
es
retf
ret
in
aaa
xor
sbb
retf
fcomp
rcr
xor
mov
add
lds
ins
shl
and
ss
popa
movs
into
sub
sbb
pushf
push
cmps
jl
xor
fistp
mov
xlat
(bad)
adc
out
repz
mov
leave
inc
pop
arpl
cmp
push
ror
mov
out
xchg
jnp
fild
rcl
pop
(bad)
pop
aam
(bad)
enter
mov
xor
xchg
ret
jmp
movs
shl
mov
pop
out
jge
(bad)
or
xchg
lea
mov
mov
adc
pop
fcom
(bad)
dec
sbb
xor
dec
jae
and
sbb
cs
sub
mov
out
dec
dec
iret
pop
jmp
mov
mov
test
mov
dec
sbb
mov
cli
mov
xor
and
shl
xchg
hlt
(bad)
and
leave
lock
inc
cmp
ds
xchg
mov
and
scas
test
xchg
cmp
dec
sti
cmps
push
das
mov
call
sub
or
das
cmp
cmp
sub
not
repnz
cmp
retf
xchg
cmp
fs
jmp
xor
jo
pop
pop
mov
out
and
pop
mov
imul
jno
xor
call
mov
mov
add
mov
or
mov
je
jo
mov
outs
sub
fnstcw
leave
mov
xchg
in
cmp
xchg
dec
mov
xchg
clc
sub
cwde
mov
repz
lea
inc
or
stos
xcrypt-cbc
cmps
shl
sar
out
sbb
sbb
rcr
dec
xchg
fcomi
dec
cwde
cmp
(bad)
aas
add
mov
test
jno
push
out
or
adc
movs
sbb
sub
sbb
call
sub
test
hlt
mov
push
sub
aam
mov
xor
dec
sbb
jo
inc
cdq
sar
xchg
enter
ror
push
dec
out
mov
sti
fcmovne
pop
sti
pop
pop
movs
aam
push
data16
push
out
dec
pop
ins
loop
arpl
int
mov
(bad)
mov
jnp
nop
out
scas
in
xor
loopne
cmps
sub
cmps
jl
xchg
aad
repz
push
jmp
dec
jg
std
shr
mov
fidiv
mov
ins
mov
xor
popf
add
aas
sub
(bad)
int3
imul
mov
div
or
fnsave
call
pop
fsubr
sbb
sub
mov
test
mov
adc
js
iret
ins
xchg
pop
jg
dec
xchg
inc
cmp
pop
call
add
ins
push
cmp
dec
je
in
or
mov
int3
mov
and
mov
shl
aas
out
adc
mov
pop
xchg
xor
into
xchg
fs
repz
push
sbb
and
arpl
jo
cmc
mov
cmp
add
call
ret
pop
test
add
scas
nop
jecxz
imul
or
cmc
mov
jo
mov
scas
cli
pop
cmp
inc
aad
imul
and
jnp
pushf
pusha
sti
jae
(bad)
xchg
gs
cmp
sbb
adc
mov
dec
cmp
movs
mov
repnz
lods
shr
ror
sub
xchg
test
adc
jecxz
icebp
mov
mov
std
aaa
and
cmp
cmp
pop
mov
pop
test
fsubp
int
adc
jp
cmps
fst
and
(bad)
cli
cmp
sub
dec
sub
in
out
pop
mov
cmp
adc
mov
mov
ins
jmp
sar
mov
sbb
lds
mov
adc
jae
jge
push
mov
out
lds
mov
in
or
popf
(bad)
sbb
arpl
lea
stos
mul
std
out
int
imul
lahf
mov
push
out
sar
vpsllq
je
mov
scas
or
pop
mov
mov
or
push
shr
shl
addr16
nop
mov
push
nop
clc
cmp
test
fsubp
mov
(bad)
pop
test
or
(bad)
lods
adc
or
xchg
data16
xor
sub
cmp
xor
jg
xor
jno
(bad)
pop
xor
loopne
mov
pop
fist
or
sbb
test
and
pop
fsub
in
shr
jnp
iret
ins
cmp
ja
aad
outs
sbb
fcmovnb
adc
not
push
(bad)
lods
cmp
mov
cmp
and
mov
jno
jno
xchg
aas
push
ins
into
xor
cmp
repz
jmp
jbe
dec
loop
cdq
dec
mov
pushf
or
out
inc
in
push
hlt
xchg
out
fisub
fild
push
or
repz
or
xchg
sbb
daa
popf
xor
dec
cmc
jg
xor
in
sbb
add
retf
mov
in
pushf
pop
scas
int3
movs
lds
push
mov
call
lahf
pop
ror
mov
stos
xchg
mov
inc
rcr
or
adc
mov
adc
cmp
push
pop
icebp
push
push
sar
mov
and
cs
arpl
or
or
xor
call
jecxz
jno
sub
sub
repz
cs
les
jge
jg
shr
sub
stos
mov
and
cmp
mov
ret
and
adc
movs
gs
fisttp
test
inc
xchg
xchg
push
mov
dec
mov
cmp
mov
push
ds
fadd
mov
or
add
test
cmovp
psllw
xchg
push
js
or
ins
push
lds
jmp
cli
mov
mov
ins
addr16
test
into
(bad)
hlt
ret
fidiv
pcmpeqb
sbb
rcr
push
call
imul
test
mov
add
and
fsubr
daa
push
(bad)
(bad)
sbb
cwde
imul
add
jecxz
push
test
(bad)
loopne
ss
pop
mov
add
xchg
repz
sub
push
jmp
das
cmps
adc
push
pusha
mov
cmp
(bad)
fucomp
pushf
aas
ds
and
cmc
cwde
shl
sti
call
je
popa
ss
loopne
jecxz
xor
cmps
pusha
pop
mov
cmp
cmp
dec
adc
cmp
cld
in
or
icebp
int
push
fdiv
mov
sahf
and
or
mov
jbe
cwde
push
test
fs
jae
or
push
pusha
jp
cmp
and
stos
inc
loopne
cmp
mov
mov
adc
jo
ss
(bad)
jle
and
jae
and
clc
push
in
xchg
jg
mov
out
les
in
mov
imul
pop
mov
aam
push
out
or
cdq
mov
mov
loope
outs
add
jp
aas
jl
and
xor
xor
aas
push
mov
jns
lds
xor
stos
push
test
cmp
into
jge
cdq
enter
scas
jg
shl
push
inc
neg
popa
repz
lods
xchg
pop
jns
push
pop
popf
sbb
sbb
in
movs
addr16
jp
inc
mov
inc
pop
mov
popa
cmc
dec
dec
adc
retf
cmp
fsubrp
shl
sbb
pop
mov
mov
loope
mov
dec
lds
cmp
scas
cld
xadd
mov
sbb
(bad)
push
or
mov
outs
fbstp
push
push
test
es
inc
retf
out
clc
inc
cld
leave
js
cdq
test
or
dec
jmp
pop
cmps
js
adc
call
inc
xor
or
sub
and
fisub
sbb
fadd
add
stc
loope
lock
cdq
mov
and
push
pop
stc
pop
ror
jmp
mov
imul
dec
leave
hlt
jno
scas
data16
into
and
cmp
in
addr16
jmp
call
jbe
ss
std
dec
mov
arpl
cld
dec
scas
pop
and
int
ins
mov
loopne
data16
adc
dec
mov
leave
(bad)
ror
xchg
jp
mov
call
pop
jns
dec
xor
xlat
out
dec
and
cmps
ret
mov
inc
dec
xor
add
(bad)
xlat
mov
jmp
push
int3
imul
sub
fucomip
or
cmp
hlt
cdq
pop
xor
add
mov
or
and
(bad)
mov
mov
test
dec
xor
add
cmp
call
into
(bad)
mov
dec
or
movs
ins
and
leave
pop
gs
in
mov
rcl
mov
mov
xchg
cmp
js
test
push
(bad)
fiadd
shr
xchg
xchg
jge
adc
fsub
mov
repz
hlt
shl
or
sahf
adc
es
int
add
jmp
test
(bad)
push
cmp
fadd
xor
inc
sbb
cli
adc
idiv
lods
jp
in
xor
dec
not
cld
call
mov
sub
jne
out
cdq
lds
addr16
push
xlat
jno
mov
sub
es
clc
mov
mov
lods
ins
pop
push
or
xchg
xchg
push
pop
int
test
pop
push
mov
push
mov
add
dec
push
inc
inc
xor
ds
rol
xchg
leave
mov
imul
mov
ins
jecxz
sbb
test
mov
cmc
inc
jmp
jae
stos
and
mov
test
cmc
mov
dec
mov
and
or
pop
test
jne
scas
aad
push
jno
popa
sub
test
outs
addr16
loope
div
das
out
rol
jle
and
outs
mov
mov
cs
into
aad
outs
addr16
mov
and
arpl
jmp
mov
or
mov
dec
loopne
push
neg
add
iret
gs
out
ret
inc
cvtps2pd
mov
push
je
mov
push
popa
sbb
adc
dec
loopne
in
cmp
fiadd
loop
jle
and
push
adc
add
fbstp
add
fnstsw
clc
sub
mov
aas
or
cmp
movs
mov
add
and
shl
iret
inc
dec
fst
sti
scas
and
ret
(bad)
cmp
jb
(bad)
les
xchg
(bad)
sbb
sub
or
loopne
jbe
rol
gs
inc
mov
push
js
xchg
sbb
sbb
js
push
(bad)
jne
ror
imul
dec
ins
push
out
mov
xor
ins
cld
cmp
xor
mov
xor
fdivr
pushf
or
jo
and
jp
cmc
mov
adc
ja
test
cdq
test
xchg
sub
(bad)
pop
push
sub
inc
jne
(bad)
cli
test
fs
(bad)
cmp
sbb
mov
inc
adc
ja
stc
mov
addr16
cmp
ret
fdivr
pop
test
aas
cmps
xchg
mov
xor
div
shl
outs
jns
and
sbb
or
sar
pop
in
fiadd
cmp
fidiv
mov
arpl
mov
add
dec
xlat
cmps
jbe
lea
sar
dec
mov
call
imul
popa
push
mov
test
jl
pop
icebp
xor
pop
push
test
stos
in
ss
xchg
add
sub
fcom
push
(bad)
adc
(bad)
rcl
push
jmp
xor
or
popf
inc
out
scas
mov
adc
add
mov
and
aaa
ds
mov
xor
sub
mov
retfw
and
pop
cmps
outs
pop
sbb
adc
push
and
ins
ins
jns
nop
xchg
sbb
adc
div
mov
int3
call
fnstsw
cmp
stos
dec
daa
int3
add
das
call
add
sti
(bad)
les
pop
pop
fistp
cmc
outs
sub
idiv
dec
outs
mov
xor
sahf
xchg
daa
fs
icebp
inc
cmps
mov
repz
aad
dec
movs
retf
icebp
xlat
pop
xchg
inc
ss
pop
outs
loopne
xlat
adc
sub
jecxz
jmp
mov
mov
shr
jl
arpl
xor
es
leave
leave
outs
sbb
out
mov
xchg
mov
ret
jmp
mov
lods
and
cmps
jb
out
pop
outs
cli
adc
(bad)
jbe
jns
aad
push
mov
xor
dec
jle
icebp
loope
test
stos
inc
inc
das
or
scas
stos
xchg
adc
mov
js
pop
pop
data16
stos
(bad)
mov
es
push
call
jg
arpl
add
mov
jmp
push
fimul
xor
jmp
shl
shr
xchg
icebp
xchg
cmc
jo
and
outs
cld
sbb
xor
fild
pop
pop
imul
rcr
adc
lds
movs
loope
mov
cmc
scas
add
lock
dec
sub
xchg
pop
cld
sbb
jg
loope
xchg
mov
lods
pop
gs
in
sbb
xor
(bad)
mov
sub
mov
sbb
jle
mov
adc
jnp
ret
jmp
inc
adc
xor
dec
sub
outs
sub
loope
daa
sub
fld
inc
sbb
fdivp
aaa
dec
enter
repnz
in
sub
mov
(bad)
aad
and
xlat
icebp
into
test
mov
push
xchg
aam
dec
jno
sub
movs
repz
xor
sub
daa
cmp
inc
dec
std
not
jl
addr16
mov
inc
lods
rcr
dec
(bad)
or
icebp
ret
push
dec
(bad)
adc
repz
sub
push
push
shl
pop
int3
mov
adc
xor
inc
sub
push
sbb
out
push
rcr
inc
jne
fidivr
jne
push
sbb
push
std
mov
test
mov
ret
jecxz
push
aad
adc
xor
imul
sub
ret
imul
push
fs
gs
ss
retf
mov
sahf
sbb
add
or
cmp
stos
xor
retf
mov
adc
inc
jbe
or
sbb
cmp
push
mov
sbb
in
daa
int3
jmp
scas
movs
adc
push
test
sbb
cli
mov
mov
sub
and
(bad)
stc
rol
jecxz
lea
sub
cmp
or
mov
test
pop
cmp
add
and
test
repnz
add
jno
cmp
sub
imul
or
rcr
mov
sub
add
(bad)
mov
repnz
enter
cdq
mov
out
mov
nop
push
or
sbb
and
sbb
sub
pop
loop
mov
sbb
xchg
test
dec
sub
add
jnp
xchg
dec
and
mov
mov
imul
sbb
fs
dec
mov
loop
call
sahf
push
add
xlat
add
movs
fdivrp
dec
es
pop
or
or
sbb
dec
xchg
and
xor
jbe
fld
std
movs
clc
dec
xchg
xor
int3
stc
test
cwde
imul
xchg
mov
inc
fdivrp
push
arpl
xchg
mov
test
fldenv
int3
sti
jbe
popf
arpl
adc
sbb
gs
jmp
ror
jmp
stc
xor
lods
push
cld
xchg
vpor
clc
mov
dec
lods
call
mov
fucomi
jp
scas
xchg
mov
sub
(bad)
dec
or
cmp
mov
ins
adc
loope
test
stos
cs
mov
aam
add
sbb
in
add
dec
ret
mov
pop
jne
sub
push
xor
jae
inc
cmc
xchg
xchg
rol
xchg
pushf
aam
add
mov
fnstenv
jecxz
call
int3
jmp
leave
in
inc
imul
ret
push
xor
fsubr
stos
mov
mov
mov
xchg
and
xlat
cdq
and
sbb
(bad)
into
jmp
xchg
sbb
jnp
movs
and
rcl
in
enter
out
cmp
and
push
mov
mov
and
cmp
or
pushf
or
sbb
rcr
jmp
jecxz
inc
pop
or
ins
xchg
or
gs
jmp
jecxz
jecxz
and
out
es
ins
(bad)
int3
or
fldcw
test
das
sub
push
ss
movsx
imul
cmc
fcom
cmp
mov
shl
cmp
add
int3
popa
fistp
(bad)
jmp
stc
sbb
bound
mov
sub
clc
(bad)
aad
jns
mov
sbb
enter
aas
(bad)
(bad)
jmp
xor
push
int3
pop
sub
xor
sbb
int
mov
inc
mov
in
lahf
push
out
test
fisttp
nop
mov
adc
(bad)
or
add
or
dec
mov
sub
jmp
cs
in
and
mul
xchg
sub
mov
in
icebp
fldcw
add
int
jno
or
pop
push
xor
and
ret
outs
jo
int
or
jle
sbb
sti
push
je
xor
adc
jmp
cmp
jbe
push
ret
cmp
jmp
ds
fcomp
dec
xor
movs
pop
(bad)
test
push
and
rcr
jp
outs
and
dec
mov
mov
les
fs
and
leave
cli
jae
aad
ja
cmp
into
int3
jl
inc
cld
dec
jae
dec
cmps
sar
in
pop
pop
jns
fldenv
lods
inc
aad
dec
cmp
ret
jno
addr16
or
lahf
out
push
and
call
aad
inc
mov
inc
xchg
sub
push
fistp
leave
push
or
aas
pop
sbb
cmp
pop
xchg
loopne
jne
stc
jmp
or
fld
add
push
and
jns
pop
sbb
jbe
inc
pop
dec
lods
xchg
cli
fild
mov
jle
inc
(bad)
mov
out
rcr
mov
outs
mov
or
repnz
stc
dec
outs
pop
inc
ss
sti
ja
jmp
add
pop
int
sub
ja
jne
mov
cmps
xlat
xor
out
sbb
pop
sar
imul
ss
iret
jns
addr16
jp
add
and
sbb
gs
daa
imul
fadd
stos
aam
enter
out
adc
dec
jmp
xchg
ds
ss
and
(bad)
out
shr
or
xchg
les
cmp
mov
popa
mov
fdiv
dec
and
jno
outs
add
adc
retf
xchg
sbb
adc
sub
mov
popa
(bad)
js
popa
jnp
mov
mov
push
(bad)
das
cmps
jge
xchg
cli
cs
mov
into
test
data16
pop
fadd
sbb
into
inc
cmps
mov
ins
mov
mov
xchg
das
into
(bad)
cwde
cmps
(bad)
push
mov
addr16
xchg
add
arpl
mov
sahf
arpl
ror
mov
xchg
clc
fdiv
fbld
pop
ret
pop
inc
adc
push
mov
xor
lods
pop
popf
icebp
into
in
cwde
mov
aad
loope
push
xchg
ffreep
push
mov
ins
inc
mov
fwait
in
pop
sbb
sbb
inc
shr
sub
repz
out
jmp
jg
test
push
hlt
loope
in
cmps
add
pop
je
scas
pop
cmp
pop
loop
scas
(bad)
mov
push
dec
push
xor
sbb
add
call
mov
jns
xchg
xor
mov
sti
fstp
cdq
jnp
sbb
scas
es
shl
(bad)
lahf
movs
loope
push
addr16
mov
out
pop
cs
call
cmp
pusha
clc
mov
add
add
sub
sbb
add
mov
and
cld
pusha
and
ret
ss
outs
mov
fmul
inc
xchg
xchg
adc
inc
(bad)
sbb
ret
movs
scas
rcr
cdq
iret
popa
xchg
jmp
(bad)
jge
retf
leave
adc
mov
sbb
movs
std
out
imul
and
add
hlt
sbb
cwde
movs
sub
repnz
lods
fwait
js
xor
jl
xor
adc
xchg
scas
inc
not
fidivr
or
mov
sbb
clc
push
xor
int3
addr16
inc
in
ss
mov
daa
(bad)
dec
retf
ret
dec
xchg
mov
sahf
out
jp
fbld
jne
(bad)
call
bound
mov
inc
pop
mov
call
les
ucomiss
shr
stos
loopne
mov
cmps
retf
arpl
jg
push
xor
in
cli
call
inc
mov
cmc
js
das
pop
mov
(bad)
mov
mov
jl
cmc
pop
(bad)
inc
scas
rcl
out
jo
pushf
hlt
adc
mov
test
aas
rol
sub
stos
mov
das
dec
std
(bad)
and
pop
dec
jg
and
jne
into
cmp
call
mov
inc
adc
add
test
dec
daa
and
mov
jp
idiv
add
ret
test
out
jmp
push
dec
nop
sub
jb
call
push
clc
enter
aas
in
sub
and
movs
jmp
mov
fild
dec
call
in
ret
mov
and
xor
sbb
push
add
fmul
xor
mov
cmp
out
aad
push
pop
(bad)
jae
jmp
das
repnz
inc
imul
addps
das
inc
nop
loope
mov
icebp
mov
sti
pop
cmp
mov
push
cmp
ins
nop
aad
les
mov
leave
mov
mov
xor
xchg
xlat
push
arpl
repz
xor
je
xchg
push
lods
es
push
gs
das
lods
fnstsw
fdivr
mov
repnz
dec
into
shl
jmp
adc
and
(bad)
ds
jmp
popf
or
in
jne
push
test
add
out
jg
icebp
cmc
sti
(bad)
jl
(bad)
jp
enter
fwait
int3
cdq
in
psubb
cld
shl
mov
add
pop
xchg
push
dec
add
mov
test
xchg
lods
xchg
das
xor
fst
jo
dec
add
cmp
mov
(bad)
in
repz
sahf
lock
inc
mov
adc
in
lds
je
push
add
push
out
pop
jmp
lods
cld
out
aas
cmps
push
sub
(bad)
sbb
pop
add
out
popa
sbb
clc
jnp
jb
xchg
aas
es
in
mov
lods
mov
movs
clc
cmp
idiv
dec
outs
div
jmp
int
or
jns
add
add
pop
fst
and
dec
es
mov
out
popf
jmp
ds
clc
xor
(bad)
pop
push
add
dec
xchg
sub
add
pusha
call
mov
cmp
shr
fnstsw
sub
mov
jp
cmp
xchg
std
rol
mov
in
cs
pop
rcr
sub
inc
stos
les
mov
mov
jns
push
in
dec
shl
adc
pop
push
adc
push
jecxz
pop
std
xor
aaa
adc
(bad)
clc
out
sub
and
rcr
mov
fld
repz
loop
xchg
adc
inc
clc
pop
mov
mov
(bad)
idiv
inc
dec
xchg
xchg
shr
sub
and
stc
dec
mov
fidiv
jbe
mov
adc
ror
cmp
repnz
pop
inc
sti
xor
test
or
pop
setno
mov
lods
xor
jmp
mul
arpl
adc
mov
inc
sbb
aad
mov
push
xor
pusha
sub
mov
pop
jecxz
and
xor
inc
xchg
mov
ret
fcomp
mov
loope
add
ret
or
test
add
hlt
(bad)
ret
rcr
dec
or
repz
(bad)
xchg
ficomp
xchg
call
add
dec
xchg
mov
xchg
pop
cs
mov
addr16
add
aam
arpl
jnp
ret
push
mov
and
dec
xchg
dec
aas
js
xchg
inc
or
add
aam
jne
mov
xchg
adc
push
jbe
mov
dec
push
xchg
sbb
aaa
push
aam
call
lods
icebp
les
push
sub
push
retf
test
add
hlt
jle
scas
push
sub
sar
mov
pop
push
shr
das
dec
cmp
or
xor
(bad)
pop
shl
(bad)
push
fld
inc
xchg
mov
scas
sbb
mov
xchg
adc
jb
fild
mov
sub
sbb
mov
jg
outs
mov
xlat
or
pop
xor
fucom
aas
or
push
imul
imul
cmp
xchg
xchg
mov
hlt
scas
push
xchg
sahf
xor
(bad)
(bad)
mov
jne
cld
or
pop
cmp
sbb
pop
cmps
fcomi
pop
jo
xchg
(bad)
bound
stos
popf
dec
mov
push
xchg
and
sbb
add
push
scas
inc
(bad)
cli
into
adc
stc
nop
add
ror
dec
sub
aad
sub
xchg
jge
add
and
movs
shl
popa
jp
mov
mov
fisttp
adc
mov
jns
repz
jg
jecxz
sar
cmp
mov
adc
pop
or
aam
pause
ret
sbb
pusha
icebp
jnp
fcmovnu
push
shl
or
xor
(bad)
xchg
push
and
mov
and
adc
jg
push
xlat
stos
enter
jecxz
and
adc
inc
mov
jae
aas
adc
pop
pop
cmp
test
dec
jmp
vpsubq
sbb
xor
sbb
clc
pop
cmps
lock
movs
adc
fwait
scas
add
sbb
sbb
mov
adc
ins
xor
jnp
(bad)
div
lds
and
jl
repz
or
push
mov
call
loope
push
sub
lahf
mov
xchg
lds
aaa
jmp
and
retf
popa
cmps
jmp
push
dec
add
xchg
loopne
pop
mov
ror
cmp
sub
jbe
pop
adc
inc
xor
inc
loopne
cs
pop
ins
sbb
loop
mov
cwde
movs
or
daa
mov
stc
(bad)
pop
add
pop
mov
mov
mov
xchg
mov
dec
lods
test
cmps
cdq
pop
xor
repz
adc
mov
out
lods
dec
inc
mov
clc
nop
mov
sub
adc
(bad)
out
ins
inc
outs
cmp
popa
pop
mov
dec
lahf
mov
push
int3
retf
dec
dec
rol
sub
sub
xchg
jge
out
(bad)
in
adc
call
(bad)
xor
inc
push
test
movs
loope
mov
jmp
dec
jmp
rcr
add
int3
adc
aas
lds
ins
jne
sub
fs
cmp
call
xor
jp
dec
outs
push
mov
rcr
pop
sub
jbe
xchg
cmp
xor
pop
aad
or
and
cwde
sahf
pop
mov
cmps
sbb
xor
sbb
je
out
dec
and
leave
sbb
imul
add
adc
dec
sbb
xor
arpl
and
pop
in
cmc
jae
xchg
scas
leave
xlat
std
xchg
ficomp
cmp
shl
ins
xor
mov
push
and
cmps
sub
mov
arpl
aam
mov
mov
cdq
or
shl
and
and
lods
and
test
daa
push
out
inc
add
jle
jns
call
repnz
scas
jns
loop
mov
dec
cmp
lds
ret
jns
cmp
mov
inc
add
aad
dec
sbb
lods
pop
lods
sbb
jno
mov
aad
xchg
or
lea
inc
mov
mov
push
sub
sbb
fwait
adc
xchg
xchg
test
push
ret
xor
pop
push
jne
popa
adc
outs
(bad)
cli
in
arpl
and
fist
lods
inc
sbb
test
sbb
mov
jge
push
in
or
scas
mov
push
loopne
sub
pop
cmp
add
retf
stc
imul
ret
jmp
ins
sub
arpl
cmp
iret
push
(bad)
mov
sbb
xchg
mov
inc
repz
addr16
jecxz
xchg
lea
mov
sbb
(bad)
jge
lea
push
sbb
mov
imul
(bad)
cdq
outs
jbe
out
js
fsubr
dec
cmps
sbb
jmp
es
pop
cli
ja
mov
fiadd
std
mov
rol
cld
or
xor
popa
adc
xchg
in
mov
(bad)
repnz
mov
ss
inc
sub
mov
mov
cmps
push
mov
fdiv
stc
loope
mov
ret
mov
inc
ror
dec
adc
shr
jp
fmul
push
push
(bad)
sub
fistp
cmc
add
xchg
ins
icebp
mov
ds
popa
sbb
sbb
mov
movups
fs
mov
sar
pop
(bad)
enter
or
xor
iret
push
clc
or
sbb
xchg
dec
mov
stos
pop
or
jecxz
xor
pop
xchg
jge
bound
in
jns
push
xor
push
movs
std
sbb
enter
fwait
mov
setno
mov
movs
xchg
jns
sti
loope
xor
nop
lds
mov
cmp
icebp
call
(bad)
jbe
cdq
push
(bad)
movs
nop
xor
mov
jmp
sbb
and
lods
sbb
test
and
sbb
cs
cli
cs
mov
shl
les
fucom
jnp
xor
cmp
test
test
mov
inc
pop
int3
mov
out
and
repnz
inc
jmp
inc
aaa
mov
xchg
mov
call
mov
sbb
pop
pop
mov
and
cli
xor
xor
sahf
ins
into
int3
xchg
dec
xor
(bad)
stos
loopne
mov
push
xchg
(bad)
loopne
cmps
fild
aaa
jecxz
jge
cld
cpuid
cmps
arpl
pop
enter
mov
icebp
dec
sub
jne
popa
call
imul
pop
xlat
or
movs
push
ret
(bad)
into
mov
popa
shr
pop
retf
cmp
call
sub
dec
in
call
fist
retf
out
dec
out
jb
rol
adc
(bad)
jo
test
inc
into
mov
lock
xchg
cmp
jecxz
call
mov
fdivr
push
push
loop
shl
sbb
gs
ret
aad
iret
in
es
xchg
(bad)
nop
jmp
int3
daa
add
sbb
fwait
ud2
ret
add
adc
cmp
nop
jge
cdq
jl
xor
fstp
scas
mov
imul
out
cld
int3
retf
jp
mov
repz
xchg
pushf
rcl
pop
add
jge
addr16
push
cmova
mov
add
push
cmp
cmp
les
test
cmps
push
push
test
mov
cwde
clc
sahf
pop
movs
in
push
pushf
pushf
jl
sbb
push
xchg
sti
pop
pop
ret
out
push
hlt
mov
adc
jge
pop
rcr
retf
push
mov
cmp
adc
pop
push
sbb
fisubr
lds
jmp
mov
sub
rol
cs
jns
sub
shr
push
pop
jns
leave
pushf
mov
and
daa
push
cdq
and
jb
sub
mov
dec
push
jp
lock
mov
sub
inc
cwde
xchg
pop
aam
(bad)
mov
mov
icebp
retf
ss
or
in
dec
cmp
mov
ds
aam
mov
inc
addr16
fnstenv
dec
shl
pop
das
sar
sbb
and
pop
call
add
jae
aas
fisub
in
rcr
xor
in
jb
jbe
popa
inc
pop
les
inc
fdivr
aam
xor
xchg
pushf
mov
gs
pop
mov
rcl
aaa
push
clc
pop
adc
popa
(bad)
or
xlat
out
push
call
imul
mov
mov
das
dec
cmp
fdiv
outs
pop
aaa
mov
mov
imul
ret
nop
les
xchg
pop
xor
scas
inc
cmp
sbb
inc
fisttp
sahf
or
es
xchg
test
fbstp
inc
jge
adc
nop
add
imul
cmps
dec
rcl
popf
shr
xchg
in
outs
mov
jmp
aam
xor
sahf
cmp
pop
pushf
cmp
arpl
adc
(bad)
xchg
pop
outs
adc
sub
xchg
jnp
leave
inc
sub
sti
gs
mov
ins
scas
sahf
(bad)
and
enter
adc
(bad)
das
push
dec
cmp
mov
jnp
and
movs
enter
cmp
mov
xchg
mov
or
mov
and
rol
mov
xchg
mov
sub
mov
pop
add
les
cs
cmp
sub
(bad)
movs
mov
outs
pop
les
cmp
das
shl
dec
sbb
inc
or
stc
lea
int3
dec
fwait
jae
sbb
test
mov
sbb
ret
in
and
jnp
das
mov
mov
std
in
imul
inc
sbb
and
lock
push
jl
aaa
adc
std
mov
xor
jg
cmps
xor
cmp
mov
xor
adc
imul
je
outs
in
dec
xchg
addr16
inc
ror
jnp
in
xlat
xor
es
inc
mov
loope
sbb
addr16
cwde
lea
data16
aaa
or
xor
(bad)
cmps
or
in
ficom
lods
xchg
and
neg
dec
out
fdivr
xor
popf
cmps
ss
push
stc
(bad)
in
(bad)
ror
daa
loope
(bad)
sti
icebp
ins
lock
(bad)
iret
lock
fcmovnbe
ret
mov
(bad)
jb
std
pop
cli
fisubr
xchg
inc
jmp
pop
jns
in
sub
ss
or
pusha
dec
test
cs
repz
fisubr
outs
adc
mov
scas
inc
sub
and
jne
aaa
mov
stos
and
or
and
scas
fldenv
add
jge
sbb
loope
mov
outs
jle
mov
cmp
int
mov
and
das
je
loop
adc
jmp
fiadd
xchg
xchg
mov
adc
xor
dec
loop
push
jmp
mov
arpl
bound
adc
dec
pop
fcomp
lahf
in
pop
pop
inc
xchg
pop
test
sub
xlat
dec
imul
test
dec
xor
ins
push
push
fucomip
icebp
mov
ror
sub
mov
ins
frstor
sub
or
jnp
mov
fcomp
scas
cmps
popa
fwait
repnz
mul
or
add
mov
fisttp
push
mov
push
shl
push
cld
xor
test
cmp
stc
out
sbb
pop
mov
sbb
add
repnz
and
push
jecxz
inc
jmp
mov
add
(bad)
movs
sbb
test
mov
inc
lods
ins
or
adc
dec
or
pop
or
jmp
cld
cmp
in
mov
jge
xchg
xchg
push
push
adc
out
mov
xor
loop
sbb
dec
imul
add
jmp
mov
adc
loop
inc
test
ds
mov
mov
ret
mov
ror
or
stos
add
pushf
xor
mov
cmp
in
test
push
in
push
addps
mov
or
pop
mov
rcl
cwde
mov
in
jge
cdq
inc
push
or
shr
mov
xchg
ins
out
inc
dec
jb
int
add
adc
sub
add
jb
mov
mov
cmp
mov
xchg
in
dec
lock
popa
add
test
out
aad
push
scas
sbb
jl
mov
in
stos
push
(bad)
lods
jp
fimul
sar
cmps
(bad)
popa
pop
test
stc
dec
or
outs
idiv
adc
fcom
in
adc
inc
xlat
push
pop
cmps
add
xchg
repz
adc
mov
outs
jo
sar
add
cmp
in
popa
pop
jmp
jns
call
jecxz
xor
call
pop
cmp
mov
fild
rcl
and
sbb
js
repz
mov
cld
sub
cdq
mov
ins
pop
inc
ret
pushw
jno
mov
or
mov
or
push
int
and
pop
sub
in
fcmovnb
jae
inc
xchg
jo
cli
(bad)
mov
lea
pop
test
inc
lds
and
rol
ja
mov
inc
inc
mov
inc
cmp
dec
cld
xor
rcr
add
push
ins
cmp
cmp
fnstenv
out
jns
stos
cmp
pusha
mov
fwait
pop
xchg
icebp
movs
add
adc
data16
sub
xor
aas
inc
and
sbb
cld
push
mov
cmps
xchg
fiadd
pusha
enter
sbb
adc
pushf
cmp
icebp
fdiv
sbb
in
mov
mov
adc
sbb
mov
xor
retf
pop
pop
out
pushf
and
inc
adc
test
sub
repnz
dec
pop
jns
xchg
xor
ficom
push
stos
popa
mov
xchg
ret
in
adc
mov
pop
div
ret
lock
movs
mov
inc
xchg
inc
jp
adc
sbb
and
bound
loope
mov
loopne
and
xchg
mov
rcr
pop
mov
mov
(bad)
mov
cmp
jl
add
and
js
push
aas
push
outs
jecxz
fwait
pop
in
arpl
mov
jmp
ror
push
call
push
bound
ins
imul
mov
lahf
push
xor
mov
xlat
pop
adc
clc
push
retf
div
(bad)
mov
push
mov
add
cmp
xor
dec
pop
movs
das
jb
push
lds
(bad)
stc
ret
add
sbb
dec
ins
enter
xbegin
jl
or
fisub
mov
jns
sbb
fisubr
hlt
dec
outs
dec
pop
dec
loope
leave
in
sbb
loop
mov
rcr
push
xor
jne
ds
sub
lods
push
je
mov
mov
fcmovnu
pop
and
xor
js
jl
push
cld
and
pop
mov
dec
repnz
rcr
jmp
push
pop
pop
push
add
xchg
loope
and
jmp
out
(bad)
lods
ror
pop
ror
rcr
add
fdivr
pop
add
pop
adc
ret
loope
fs
sbb
mov
inc
test
stos
and
and
sar
jne
mov
mov
lds
rdmsr
ret
sahf
push
adc
das
inc
push
push
outs
inc
es
sar
pop
loope
xor
mov
sub
jns
dec
push
jne
hlt
loope
(bad)
push
adc
push
arpl
xor
xor
fld
jnp
cmp
pop
hlt
ja
fwait
shl
push
out
jecxz
cmp
pusha
cmps
sub
xor
jb
cmp
push
hlt
dec
test
addr16
or
faddp
mov
push
in
add
daa
cmp
adc
loop
cdq
fstp
mov
adc
or
ins
frstor
lock
and
push
(bad)
jns
mov
jbe
dec
push
xchg
mov
jmp
inc
xchg
cmps
movs
in
jmp
icebp
mov
push
mov
xchg
inc
sub
movs
mov
mov
jno
xchg
test
jg
shl
or
pop
fcomp
jno
mov
jl
pop
xor
inc
pusha
add
xchg
adc
ds
adc
xor
inc
(bad)
sbb
fwait
test
mov
ins
arpl
int3
jp
aaa
inc
jmp
add
jecxz
test
mov
fbld
mov
sbb
out
and
adc
xor
pop
es
lahf
mov
repnz
sbb
xchg
add
test
push
push
xchg
sub
mov
mov
cdq
out
stos
add
cdq
mov
gs
pop
xor
test
xchg
pop
xchg
add
sub
stos
icebp
dec
sbb
fmul
push
xchg
cmp
enter
ror
dec
mov
inc
sub
jne
add
jg
sbb
dec
push
pusha
fcom
pop
imul
adc
scas
adc
mov
mov
shr
test
mov
popa
xchg
sub
sbb
push
pop
addr16
push
(bad)
fcmovnb
or
push
sub
add
or
and
pop
cs
cwde
out
mov
xchg
push
push
add
aas
or
mov
pusha
lds
imul
fadd
xchg
scas
pop
pop
inc
arpl
jmp
xor
jbe
ds
jge
sub
push
(bad)
ins
cs
test
out
test
ss
mov
push
jae
loop
lods
je
hlt
add
pop
cdq
out
jb
jae
repnz
mov
jg
imul
mov
std
or
pop
push
pop
pop
xlat
jbe
retf
popa
test
and
(bad)
in
xlat
dec
mov
adc
push
aam
jnp
hlt
dec
add
jp
dec
cmp
mov
sar
dec
mov
outs
jnp
cmp
test
mov
or
mov
add
dec
lahf
sbb
stos
push
pop
jae
movs
push
adc
mov
add
stc
in
mov
in
and
rcl
xor
fisttp
daa
fs
adc
sub
push
sbb
fistp
rcr
jp
mov
jb
arpl
hlt
ds
jno
arpl
push
xchg
add
jmp
in
(bad)
test
xchg
stos
mov
push
call
mov
pop
mov
pop
in
out
push
xchg
xchg
jo
int
pop
jmp
pop
xlat
jae
movs
retf
xchg
lea
jmp
movs
adc
test
mov
repnz
inc
xlat
push
fdivp
ja
dec
jmp
je
and
mov
cwde
shl
cmp
out
icebp
loop
push
test
mov
sub
aad
mov
stos
add
push
mov
aad
ja
fisttp
scas
mov
xchg
jnp
mov
dec
and
cli
out
std
int3
cmp
and
aad
fcomp
(bad)
push
lock
sub
pop
and
test
push
cld
jbe
test
retf
fcmovnu
mov
hlt
xlat
leave
popf
jbe
sub
xchg
dec
push
dec
ret
jecxz
mov
frstor
adc
sbb
pop
xchg
loope
dec
push
mov
sub
retf
or
jmp
loopne
(bad)
(bad)
pop
out
or
sbb
cmp
stos
je
pusha
in
aaa
in
dec
inc
and
mov
inc
push
(bad)
dec
inc
jne
cmc
push
xchg
retf
pop
or
(bad)
(bad)
(bad)
xchg
or
jmp
in
out
das
iret
mov
not
add
adc
jo
cmp
rcr
push
pop
or
push
xchg
shl
sbb
and
jno
loope
cmps
cs
jmp
inc
push
sti
into
arpl
mov
mov
xchg
cmovg
rcr
jnp
dec
xor
push
fdiv
xchg
cld
cmc
in
rcr
stos
fs
dec
into
cwde
sub
ja
ss
mov
jb
sbb
addr16
out
sbb
aad
(bad)
xor
jae
ds
pop
ja
test
inc
leave
sahf
mov
xchg
push
cmp
clc
movs
lods
xchg
psrad
xchg
jl
cmp
jmp
stos
push
pop
jle
and
mov
in
or
pop
xchg
inc
add
jne
imul
(bad)
pusha
and
popf
push
div
out
dec
xchg
ret
xchg
fbstp
mov
mov
mov
repnz
cmps
repnz
sub
sub
and
(bad)
cwde
dec
test
dec
pop
paddq
push
or
xchg
cs
rcr
sbb
es
mov
fdiv
fcmovnu
outs
mov
add
bound
mov
push
daa
cmp
(bad)
and
push
es
loop
mov
loop
dec
mov
(bad)
xchg
sbb
call
xchg
int3
test
xchg
lods
jmp
jae
inc
je
mov
in
dec
xor
mov
cmp
popa
test
xchg
rcr
or
mov
pushf
out
inc
imul
push
(bad)
dec
addr16
into
xor
mov
(bad)
mov
adc
xchg
scas
out
aad
cmp
call
sub
aad
push
imul
xor
jb
sti
pop
and
inc
pop
shr
icebp
push
neg
(bad)
rcl
cmp
call
dec
int
jmp
inc
xchg
pop
mov
fucomp
sub
in
pop
(bad)
mov
enter
sbb
or
push
arpl
mov
das
inc
rcr
and
dec
jle
clc
mov
cmp
rol
push
add
mov
xacquire
cmp
sub
push
dec
jo
sub
mov
mov
xor
leave
lock
cmp
and
outs
or
arpl
mov
es
lods
mov
inc
mov
pop
dec
lahf
ins
adc
cmp
adc
sar
in
mov
jle
and
and
popa
and
xchg
cmp
popf
sbb
jbe
jns
push
enter
jmp
mov
pusha
or
pop
xor
cmp
(bad)
cmps
rep
rol
mov
push
ins
jmp
ja
inc
mov
(bad)
or
ja
mov
inc
mov
stos
inc
fist
mov
std
daa
loop
aam
add
jecxz
movs
call
int
iret
nop
inc
inc
jp
add
lds
int
jne
add
xchg
mov
pop
jns
retf
xchg
loop
pop
mov
adc
(bad)
mov
adc
xchg
lds
mov
jmpw
push
dec
sub
addr16
call
push
or
jmp
addr16
mov
loope
inc
jne
and
cmps
inc
daa
jmp
add
lea
jle
test
pop
jns
pop
outs
mov
xor
pop
inc
les
xchg
jl
scas
fsub
fidivr
xchg
iret
jne
lock
inc
and
mov
bound
cmp
add
enter
retf
xor
gs
outs
rol
cmp
jne
dec
xchg
push
push
cmp
pop
inc
push
enter
mov
std
jae
sbb
retf
xchg
test
aas
scas
call
(bad)
pop
or
sbb
sbb
mov
addr16
add
mov
mov
sub
dec
pop
pop
pop
in
jb
push
xor
add
int3
int
shl
aam
xlat
into
rol
xor
fist
lods
out
adc
mov
lods
mov
push
ds
or
mov
dec
add
test
leave
dec
test
(bad)
sbb
dec
ret
shr
xchg
add
jns
mov
and
jmp
lock
(bad)
push
dec
jg
adc
inc
mov
neg
dec
add
mov
mov
sub
inc
dec
repz
(bad)
mov
push
aaa
dec
jmp
xchg
mov
pop
out
cmp
or
mov
mov
or
dec
adc
add
out
test
fcom
adc
ins
jge
add
mov
js
add
inc
cmp
enter
xor
ins
(bad)
test
call
and
and
movs
xor
idiv
dec
sti
dec
enter
or
cmp
dec
enter
icebp
cld
pusha
mov
and
push
aam
dec
or
jmp
push
or
(bad)
mov
scas
inc
cs
je
mov
mov
popa
pop
fstp
pushf
xor
and
les
dec
sub
and
std
nop
adc
(bad)
mov
out
dec
xor
jecxz
clc
mov
sbb
iret
rcr
ja
in
inc
mov
into
cmp
out
mov
fist
sub
push
neg
cmp
aaa
jle
add
dec
mov
jne
pop
or
(bad)
jecxz
mov
mov
push
mov
hlt
cmp
(bad)
out
scas
or
push
mov
mov
sub
mov
sub
mov
fnstcw
(bad)
mov
sbb
mov
ds
mov
or
movs
pushf
xor
mov
push
ror
cmps
fxch
popf
sahf
fsub
pushf
pusha
add
mov
xchg
xchg
mov
(bad)
(bad)
pop
(bad)
jb
add
xchg
or
or
shr
int
in
pop
sbb
arpl
mov
ja
push
xor
sbb
jb
out
xchg
loope
mov
nop
xchg
cs
or
sahf
nop
inc
push
xchg
data16
ret
lahf
dec
outs
sbb
mov
cli
fild
aas
dec
ins
cwde
mov
rol
xchg
cdq
ret
out
test
or
imul
push
enter
loope
repz
daa
mov
jge
retf
cld
not
mov
(bad)
mov
retf
ds
push
pop
setbe
push
pop
das
jg
jecxz
mov
jo
aam
dec
cmp
ror
call
test
push
ds
scas
xchg
aas
out
aad
xchg
mov
mov
xlat
mov
sub
sbb
push
sub
mov
loopne
cmp
das
mov
push
push
pop
jmp
xchg
aad
bound
mov
mov
push
or
sbb
add
push
div
or
inc
neg
and
pusha
fild
xchg
ins
dec
xor
ret
sti
mov
jg
movs
ja
into
push
ins
leave
cmp
pushf
sub
in
daa
or
dec
jnp
push
cld
push
push
mov
call
in
sbb
fisubr
xchg
dec
fistp
sbb
push
mov
ja
nop
mov
addr16
dec
adc
adc
cmp
leave
loop
enter
lods
jbe
inc
add
add
cmp
and
scas
popf
xchg
sbb
cdq
in
aas
dec
inc
aam
adc
cli
jg
fild
cmps
cs
cmp
dec
sbb
cmp
add
xchg
mov
sub
mov
clc
push
dec
pushf
neg
loopne
jmp
mov
addr16
(bad)
and
std
add
cmp
mov
mov
mov
push
aad
ins
stos
inc
rcr
mov
push
mov
ret
pop
retf
push
div
xchg
mov
push
nop
mov
retf
sar
rol
js
fmul
(bad)
sub
cmp
mov
sub
or
xchg
icebp
in
xchg
pop
add
mov
ins
mov
loope
pop
adc
inc
aaa
dec
adc
loopne
or
push
or
xchg
lods
dec
(bad)
leave
xor
and
jmp
jb
lods
(bad)
and
xor
xchg
ja
lods
fimul
mov
test
xchg
mov
cmp
push
sbb
fisttp
popa
jno
cwde
xchg
fiadd
inc
jmp
mov
hlt
sbb
push
xor
dec
imul
jecxz
mov
xchg
enter
sub
cwde
addr16
or
(bad)
ds
(bad)
fild
imul
xchg
inc
fimul
or
jmp
fs
mov
adc
sbb
pushf
mov
js
or
jge
sti
(bad)
inc
push
pop
out
retf
cs
out
rol
pop
aaa
dec
adc
out
int3
or
int
mov
pop
test
(bad)
icebp
jbe
cwde
mov
in
mov
sbb
or
cdq
cli
jno
pop
cmp
sub
jnp
jle
ret
inc
loope
daa
cs
mov
add
std
pop
std
sar
out
rcl
mov
test
test
test
and
add
pop
xchg
pop
(bad)
in
(bad)
out
jnp
dec
push
jb
mov
cmp
sub
cmp
mov
aam
in
xor
cmps
or
shl
sub
cli
call
mov
call
inc
dec
stos
push
rcr
ss
and
int
sub
dec
push
jb
pop
pop
stc
sti
add
jl
push
push
cmps
push
cmp
sub
movs
mov
pop
bound
mov
inc
jmp
out
adc
push
mov
jp
aad
add
add
sub
mov
sti
push
mov
in
cmp
ja
lods
or
pop
mov
(bad)
lahf
(bad)
rcr
test
pop
xor
push
fcomp
mov
inc
adc
push
jl
das
dec
ret
lds
cdq
ss
and
call
cmp
aas
call
je
loopne
jo
jno
fdivr
sbb
pop
call
lock
outs
mov
aas
or
test
movs
ud2
or
cli
dec
add
out
sbb
jp
add
push
repz
test
dec
jne
outs
retf
sub
jne
sub
cdq
retf
jns
inc
inc
je
fs
outs
xor
adc
into
dec
ss
mov
mov
in
(bad)
xchg
cli
jmp
in
out
adc
popf
inc
outs
mov
out
pop
jle
into
ins
out
cs
lea
jmp
jae
fadd
xchg
outs
dec
inc
clc
dec
dec
push
(bad)
(bad)
clc
cmp
dec
cld
fisub
leave
xor
mov
(bad)
mov
pusha
test
jmp
(bad)
hlt
or
push
or
es
and
(bad)
lea
inc
pop
(bad)
rol
pop
pushf
jns
add
inc
les
and
cdq
pop
sub
mov
cmc
and
cmp
pop
fnstcw
and
(bad)
fdiv
je
xor
popa
je
push
fisttp
cmp
mov
loopne
xchg
fcom
test
fdivrp
add
or
loop
adc
jne
sub
cmp
dec
and
(bad)
mov
dec
dec
mov
in
sub
gs
in
xchg
call
shl
xchg
jae
pop
icebp
fstp
int
bound
into
fisttp
xchg
shl
xchg
addr16
or
nop
call
in
cmp
fs
fistp
js
mov
cmps
into
(bad)
loope
loope
inc
mov
aaa
jno
dec
enter
dec
add
test
xchg
add
adc
add
mov
sub
push
add
xchg
mov
fidiv
sahf
sbb
test
push
xor
in
push
mov
jb
xchg
call
xchg
dec
mov
out
and
in
scas
into
(bad)
(bad)
loop
mov
and
mov
outs
fdivr
xor
fwait
ss
js
xchg
mov
cmp
cwde
xor
outs
cld
cmp
ds
pop
addr16
cmp
test
mov
mov
and
lock
(bad)
push
in
int3
stc
scas
test
cmps
push
sbb
int3
fidivr
int
pop
jb
js
call
push
and
pop
imul
lds
(bad)
fldenv
cmps
xor
pop
daa
cmp
and
jecxz
int3
jno
jge
xchg
ss
mov
mov
mov
dec
addr16
fucomip
test
dec
mov
mov
movs
xor
mov
gs
scas
mov
push
mov
pop
cmp
int3
iret
adc
xor
shl
xor
push
(bad)
iret
push
push
std
cmp
push
jb
out
pop
and
or
mov
lahf
es
and
lea
pop
pop
mov
jl
out
(bad)
ret
pop
jmp
test
mov
and
test
jecxz
dec
pop
lods
bound
pop
ins
and
cmp
jnp
into
stos
loop
dec
xor
add
sub
adc
inc
popf
(bad)
int
mov
mov
xor
mov
sub
inc
imul
repz
mov
xchg
xor
out
jecxz
dec
aaa
adc
inc
int3
sbb
out
ja
sbb
fistp
add
es
dec
retfw
repnz
dec
pop
(bad)
or
in
fwait
jecxz
neg
lods
xchg
jle
sbb
bound
fdiv
lea
fmul
ds
inc
cld
adc
push
mov
(bad)
rcl
dec
push
loopne
push
cmp
fs
in
dec
pop
aas
sti
loop
ss
xor
jmp
dec
mov
aam
mov
mov
(bad)
test
stos
into
inc
sbb
(bad)
stc
xlat
in
mov
or
adc
mov
ror
ror
mov
sub
les
sub
xor
adc
mov
daa
cld
cmp
sub
ins
stos
outs
(bad)
push
mov
push
sbb
or
mov
adc
pop
mov
and
jb
mov
fadd
fmul
xlat
minps
mov
jnp
mov
in
retf
outs
ins
stc
cmp
xchg
or
inc
pop
pusha
mov
sub
mov
adc
je
div
mov
or
add
out
retf
mov
stos
scas
jecxz
xor
mov
mov
sub
sbb
jecxz
lahf
cmp
push
aam
sbb
mov
gs
and
cmp
rol
adc
std
sub
mul
loopne
or
pop
mov
pop
ret
clc
mov
add
test
xchg
jns
stos
fidivr
sbb
sahf
in
jb
out
push
cmp
repnz
stc
lods
int3
repnz
test
push
inc
stos
cli
adc
mov
jmp
add
arpl
adc
pop
sub
jmp
push
inc
or
cmp
arpl
stc
dec
sar
sub
imul
(bad)
add
fstp
sbb
or
add
out
push
pop
pop
sbb
jmp
cmp
sbb
addr16
and
or
inc
test
xchg
int3
mov
popa
idiv
mov
mov
and
mov
pop
stos
test
pop
(bad)
jns
(bad)
imul
lahf
in
mov
or
test
add
in
dec
lods
push
fnstsw
call
aas
xchg
mov
xlat
xchg
(bad)
(bad)
ret
shl
in
mov
sbb
out
dec
push
sti
imul
cmp
movs
lds
data16
shl
mov
aaa
dec
test
leave
xchg
mov
cmps
cmp
add
fbld
inc
mov
mov
add
sub
push
iret
pop
mov
jl
test
xor
shr
lds
ret
jecxz
dec
fsub
movs
mul
add
(bad)
xor
dec
pop
mov
jne
and
dec
std
xor
and
push
mov
mov
inc
jl
push
inc
scas
mov
pop
mov
jg
push
jmp
repnz
es
scas
fcomp
fist
movs
and
(bad)
enter
jg
or
cli
loopne
dec
push
dec
lods
and
dec
add
jge
movs
scas
ror
xchg
sbb
rcr
jmp
mov
xor
scas
(bad)
mov
sbb
(bad)
mov
dec
test
pop
es
rcr
aam
jecxz
pop
test
out
push
or
repnz
lds
das
adc
es
fiadd
jnp
imul
and
enter
rol
xor
cmc
cmp
pop
aam
lods
fstp
ret
add
(bad)
jmp
mov
push
push
cmp
xchg
lea
fadd
push
addr16
fucom
or
xor
sub
sbb
js
ret
sub
xchg
push
in
nop
jmp
scas
cdq
leave
cdq
or
popa
xlat
enter
leave
cmps
ret
sbb
(bad)
xchg
movs
or
fldcw
lahf
cmps
and
add
aam
mov
adc
fbld
dec
pop
repnz
push
ins
mov
xor
xchg
and
cmc
dec
gs
inc
cwde
cmp
adc
push
pop
push
pushf
mov
cs
dec
mov
sub
mov
push
das
test
mov
pushf
cmps
or
xor
loop
cmp
rcl
rol
cld
cmc
sub
(bad)
out
mov
stc
mov
jmp
pop
ss
pop
ss
div
sbb
mov
test
outs
pop
inc
cmp
icebp
dec
mov
sub
rcl
pop
xchg
rcl
ja
jns
add
sbb
sbb
pop
xchg
dec
mov
(bad)
xor
(bad)
lock
and
into
xor
pop
xchg
scas
and
mov
mov
mov
adc
fist
fdivr
popa
aad
mov
fld
jge
adc
sub
xchg
pop
div
outs
(bad)
mov
pop
lahf
and
pop
scas
repz
and
aad
repnz
mov
push
ror
out
pop
inc
jp
xor
xor
mov
stc
cmp
repz
cmp
in
dec
pusha
(bad)
clc
add
sub
pop
inc
mov
in
cmp
dec
mov
lock
dec
xchg
dec
add
fldcw
int
sub
mov
push
outs
aaa
loop
call
in
imul
shl
mov
dec
inc
pop
jmp
jo
push
xor
aaa
push
xchg
xor
push
pusha
mov
retf
cdq
and
cmp
(bad)
sbb
mov
shl
sub
mov
hlt
jg
enter
ins
in
pop
bound
arpl
add
call
dec
cmps
or
push
sub
lock
add
xchg
jmp
fdivrp
mov
retf
push
cmp
sti
cmps
retf
cmp
std
out
out
mov
adc
(bad)
retf
repz
inc
jns
mov
imul
retf
dec
cwde
retf
scas
jnp
jae
inc
in
fild
imul
aaa
(bad)
jae
mov
popf
ret
ja
test
jecxz
cmp
fwait
(bad)
cld
imul
icebp
ret
(bad)
out
lods
xor
sbb
mov
(bad)
lahf
shl
out
loopne
outs
nop
push
jmp
mov
in
test
addr16
dec
sahf
cmp
into
push
add
dec
nop
or
in
repz
sbb
dec
(bad)
mov
push
jno
rcl
sahf
scas
fs
iret
sbb
sbb
mov
mov
out
repz
xchg
adc
jbe
ja
(bad)
add
inc
retf
jnp
fsub
dec
inc
popa
mov
icebp
and
cmps
xor
mov
sub
and
sub
sbb
inc
int3
xchg
ins
or
push
sbb
adc
jp
ss
imul
ins
popa
mov
call
push
mov
cmp
dec
bswap
jp
push
inc
add
je
test
mov
mov
jbe
es
jnp
xchg
cmp
xchg
or
or
outs
dec
add
jl
rcl
push
std
jg
cmp
cmps
loope
sub
in
xchg
jp
call
pop
adc
xor
mov
mov
rcl
sbb
or
push
popa
add
inc
mov
xor
adc
mov
ds
pushf
aas
or
jbe
push
and
in
pop
dec
in
in
mov
jl
adc
mov
jae
arpl
lods
(bad)
(bad)
mov
jae
fcomp
pop
pop
jb
adc
push
sub
aas
leave
add
cmp
add
pop
add
das
jb
lods
rcl
loope
setno
popf
aad
jge
inc
jl
(bad)
xchg
mov
sub
repnz
sbb
sbb
cmp
add
movs
mov
dec
mov
adc
fucomp
int
sbb
stos
adc
mov
hlt
cmp
inc
sub
or
loop
fcomp
and
push
js
mov
mov
push
sbb
xor
mov
sbb
in
add
test
mov
in
les
sbb
fsubp
push
mov
cmc
jle
scas
adc
push
mov
sub
scas
pcmpgtw
pop
sbb
dec
enter
ss
hlt
jle
lahf
lods
mov
cli
inc
imul
dec
adc
inc
mov
lds
lods
call
inc
stc
mov
test
imul
push
lods
retf
scas
mov
mov
(bad)
cli
mov
push
sub
js
mov
sbb
dec
out
ret
xor
popa
jnp
jb
push
jae
xor
pusha
push
xor
or
mov
xor
fiadd
add
loope
loop
xor
js
pop
pop
pop
dec
aam
xchg
movs
mov
sub
es
hlt
pop
pop
mov
xchg
jmp
push
jo
ins
and
retf
(bad)
(bad)
js
test
and
push
push
sub
jns
loope
jecxz
inc
fdivp
arpl
add
fdiv
cs
mov
ret
cmp
jns
inc
cmp
out
mov
shl
sub
and
cld
and
into
jl
mov
cmp
mov
dec
sbb
mov
ja
scas
mov
in
push
cmps
imul
jae
pop
retf
adc
cmps
or
(bad)
loop
jp
js
push
xchg
rcl
sub
call
dec
idiv
inc
into
in
pop
add
scas
stc
adc
dec
xchg
(bad)
sub
inc
mov
push
jmp
addr16
push
jne
fsubr
mov
out
pop
loop
xchg
or
outs
mov
jae
jg
jmp
ds
jno
jg
push
add
or
int3
ds
loop
mov
cmp
mov
inc
sub
shr
iret
jge
aaa
dec
jg
ror
jmp
cdq
(bad)
cmp
sbb
jecxz
adc
ret
sbb
jmp
mov
jl
std
and
das
add
shr
dec
ja
stc
cs
mov
mov
out
fwait
cmc
call
push
and
fcmovbe
daa
mov
jnp
or
and
js
repnz
scas
lock
scas
adc
dec
in
ins
out
push
aaa
mov
mov
cmps
loopne
pop
adc
lds
xchg
rcr
mov
inc
sbb
push
in
sub
push
or
jg
dec
jmp
mov
(bad)
outs
mov
push
jecxz
fbstp
es
xor
jno
sbb
sub
mov
jecxz
dec
(bad)
xchg
jne
jb
jb
repz
pop
out
fadd
inc
push
adc
(bad)
loopne
add
xchg
adc
push
lds
movs
ficomp
iret
es
pop
xchg
popf
xlat
mov
mov
jbe
inc
out
push
xor
adc
jbe
mov
mov
je
add
stos
fwait
daa
jle
clc
xor
cwde
sbb
pop
je
pop
mov
mov
pop
mov
pushf
fs
jnp
mov
mov
mov
mov
cdq
xchg
aaa
jb
xor
push
lock
mov
xlat
dec
js
lahf
mov
js
mov
push
jp
cmp
cdq
jl
and
mov
mov
add
and
sub
outs
adc
repz
and
cmp
mov
jnp
lods
sub
fist
ret
or
jmp
(bad)
mov
dec
adc
repnz
mov
and
jl
or
inc
int
push
cmp
out
stos
xor
pavgw
push
bound
test
data16
sub
push
fmul
cli
pop
jmp
add
xchg
push
(bad)
rcl
mov
jle
call
inc
pop
sti
mov
and
movs
push
add
loopne
sbb
imul
hlt
fmul
(bad)
pop
or
jae
test
dec
and
stos
or
fnsave
mov
xor
ret
cmp
jo
shl
test
dec
or
add
lods
sbb
mov
adc
je
adc
cmp
fcom
or
stc
and
loop
adc
or
xor
hlt
and
stos
cmp
les
daa
out
call
cwde
pusha
push
sbb
sub
inc
or
xchg
fs
aad
clc
jmp
js
xor
mov
cmp
xlat
pop
inc
cdq
jb
movs
sbb
xchg
push
shr
mov
dec
adc
(bad)
dec
mov
repz
pop
xchg
out
sbb
add
mov
sub
mov
jp
cmp
add
mov
rol
cs
leave
leave
adc
neg
stc
jge
push
pushf
mov
loopne
cli
sbb
mov
xor
adc
js
add
out
mov
fild
adc
cwde
push
int3
imul
pop
fisttp
cld
xchg
jle
jbe
adc
aas
dec
imul
push
imul
xchg
ret
adc
ja
js
and
mov
sub
out
jl
jmp
pop
or
jg
or
dec
add
jg
dec
add
int
adc
sbb
push
push
pop
clc
mov
clc
or
aas
or
push
shr
dec
sbb
shr
xor
pusha
add
cmp
push
pop
xor
arpl
movs
add
xor
enter
xchg
mov
push
inc
add
jb
sbb
fs
dec
outs
fist
jno
xchg
pop
and
inc
xchg
pop
sub
stos
out
xor
cmp
stos
repz
push
adc
enter
out
inc
clc
mov
inc
jge
cmp
or
retf
or
enter
mov
push
push
call
xor
xchg
sbb
fwait
jo
xchg
cmp
cmp
out
sar
pop
dec
and
gs
hlt
mov
imul
mov
imul
addr16
inc
leave
sub
push
and
stc
or
cld
in
sub
xor
lock
mov
imul
loop
mov
int
mov
and
push
sbb
loop
jp
push
mov
loopne
loope
sub
stos
(bad)
fdivr
push
cwde
pop
sbb
lea
push
sbb
test
sub
stos
cmp
fisub
call
or
mov
xor
sub
jno
inc
inc
sbb
mov
ficomp
shl
cmps
pop
jo
push
popf
in
jecxz
scas
xchg
jge
cmp
sub
mov
jb
push
loope
popf
ds
mov
mov
cmc
hlt
pop
and
clc
mov
xor
mov
hlt
test
(bad)
inc
push
jb
push
je
enter
mov
or
inc
scas
stos
daa
xchg
icebp
sub
push
rcl
lea
mov
pop
dec
adc
or
adc
gs
or
(bad)
dec
push
jae
add
popa
ds
std
pop
push
pop
inc
int
cmp
mov
pusha
mov
or
loop
test
push
sub
test
in
adc
xchg
dec
mov
push
inc
inc
sub
inc
rol
aad
jb
icebp
loopne
div
and
cmps
pop
adc
jge
retf
aaa
(bad)
dec
sub
cmc
pop
(bad)
jno
adc
std
mov
push
outs
sub
push
mov
dec
cmp
pop
pop
dec
xchg
out
mov
aad
iret
mov
cs
fcmovne
adc
cmps
test
popf
jmp
hlt
add
inc
arpl
add
(bad)
xchg
adc
popa
xchg
adc
bound
imul
gs
push
push
push
mov
inc
jmp
xor
in
push
fs
retf
xchg
cmp
daa
jnp
add
add
pop
pop
rcl
mov
and
and
inc
pop
mov
xor
fadd
fs
mov
mov
ss
jp
ror
ret
cmp
test
je
fsub
push
jg
clc
pop
pop
sbb
ins
outs
fld
sbb
(bad)
mov
xor
jo
jl
in
jae
jg
push
jo
pop
ja
jne
lock
(bad)
scas
stos
mov
mov
(bad)
bsf
mov
jl
xchg
cmp
jp
(bad)
(bad)
xor
jne
fistp
mov
mov
mov
pop
lock
pop
jae
pop
xor
mov
imul
shr
jae
and
in
lea
mov
adc
mov
xchg
cli
scas
mov
iret
fs
push
cdq
(bad)
test
pusha
mov
pop
xchg
and
mov
imul
dec
outs
jne
inc
scas
js
and
ror
push
add
iret
ret
inc
push
or
mov
dec
call
and
jg
pop
xor
add
or
inc
cs
adc
xchg
push
leave
jnp
sbb
pop
test
sbb
inc
mov
jo
pop
shl
(bad)
daa
push
mov
push
std
lahf
mov
sbb
movs
daa
sub
adc
or
mov
daa
outs
xchg
(bad)
add
push
ss
outs
iret
push
sub
dec
adc
jmp
sbb
lods
push
pop
aad
(bad)
out
fwait
cli
je
rcr
int
in
pop
mov
rcl
sti
pushw
inc
(bad)
sbb
pop
test
retf
push
push
xchg
pop
sub
cmp
pushf
jecxz
je
js
push
aaa
mov
cwde
or
movs
movups
imul
fsub
cmp
mov
rcr
fdivp
add
cmp
cmp
dec
mov
add
add
fsub
and
ins
lods
add
loopne
sahf
in
cmps
xor
mov
(bad)
sub
lods
and
movs
mov
jmp
xchg
or
ins
inc
es
jns
repnz
jns
mov
cmps
mov
shl
ret
add
retf
jle
add
add
jno
cmc
adc
mov
sahf
cmp
lds
cdq
push
fiadd
xchg
xchg
mov
lahf
(bad)
cmp
inc
(bad)
ins
(bad)
(bad)
popf
sub
and
test
imul
xor
pop
sub
inc
inc
test
loopne
lods
ins
mov
(bad)
mov
hlt
retf
neg
and
pop
sbb
push
stos
imul
dec
jbe
mov
test
jmp
test
mov
int3
jg
dec
cmps
les
and
xor
push
mov
pop
jge
or
les
arpl
(bad)
shl
aam
xor
repz
cmc
dec
jmp
outs
fsubrp
enter
and
repnz
xchg
sbb
mov
jne
xchg
test
fidivr
push
push
fldl2e
xor
cmps
or
les
add
jg
loop
xor
movs
cwde
ret
addr16
jp
xchg
cmp
call
test
mov
xor
push
xlat
repnz
test
fsubr
sbb
mov
jbe
outs
sbb
and
jae
shl
and
sub
lock
adc
pop
in
ja
mov
enter
pop
scas
jl
out
pop
loopne
ror
call
add
mov
test
ja
inc
pop
movs
cdq
push
add
retf
loopne
push
push
and
or
ror
loop
mov
xor
inc
xor
mov
inc
mov
lods
push
sbb
cli
cwde
jne
sub
jmp
rol
sub
push
xlat
sahf
cwde
pop
fst
adc
lds
mov
cmp
mov
int
mov
fimul
jne
loopne
push
test
gs
dec
cmp
xchg
int3
movs
fnstcw
push
dec
sbb
ins
cmp
std
std
outs
call
fistp
pop
les
and
cmp
xchg
stos
mov
scas
hlt
jae
sub
rcr
imul
xchg
ficom
mov
and
xor
push
sti
sar
dec
or
jg
movs
jno
add
sub
and
(bad)
outs
int
mov
pop
int
(bad)
add
push
into
add
mov
cmp
imul
jecxz
push
mov
jb
jnp
popf
sub
cwde
imul
or
inc
xchg
in
sahf
sbb
dec
push
add
and
pop
mov
nop
lods
outs
xlat
xchg
or
frstor
rcr
ja
push
inc
add
sub
shl
inc
push
cmp
pop
pop
out
mov
mov
xchg
add
push
stos
(bad)
xor
add
push
jne
stos
add
jmp
movs
jbe
(bad)
(bad)
out
sbb
ret
loop
xchg
and
mov
push
imul
rol
mov
div
jge
jmp
jmp
add
dec
popf
fdivr
(bad)
dec
test
inc
jo
mov
mov
inc
sub
(bad)
into
inc
sbb
(bad)
jo
and
dec
rol
cmp
mov
xchg
shl
pop
loope
int
jle
mov
push
mov
or
xor
sar
bswap
test
shr
int
test
pop
scas
mov
jle
ins
stc
fiadd
loop
retf
ss
jns
(bad)
aas
jmp
pop
mov
mov
pop
push
dec
retf
imul
aaa
push
jge
test
dec
mov
or
cmp
or
fst
sub
xchg
call
jecxz
sub
cmp
mov
fcom
rcl
fbstp
sti
cmp
ins
out
lods
mov
and
mov
inc
push
mov
stc
aam
xor
mov
movs
mov
jp
mov
cmp
add
and
xor
sti
sbb
jge
push
(bad)
ficomp
adc
inc
cmp
mov
mov
cmp
xlat
push
mov
adc
inc
sub
lock
cs
(bad)
jnp
and
jnp
movs
push
lds
or
push
(bad)
pop
cmc
pushf
shl
rep
xor
mov
cli
jae
push
mov
xchg
leave
fisttp
xchg
es
shl
cmps
xchg
cmp
test
int3
dec
xor
in
dec
push
cld
test
repz
dec
and
and
pop
add
jb
push
fld
add
push
fcom
ret
add
shr
aam
ins
or
sbb
stos
xchg
out
cwde
loop
and
sub
hlt
push
mov
jge
jmp
imul
adc
add
mov
add
mov
push
scas
dec
jb
mov
mov
ret
mov
push
push
sub
call
mov
stos
je
popf
neg
pop
les
jae
clc
pop
jns
mov
sbb
fisttp
les
aas
push
xlat
popf
stos
inc
fs
fild
shr
outs
xor
mov
mov
mov
mov
aad
jb
call
fist
and
icebp
mov
mov
jae
push
push
neg
lods
cmps
sbb
retf
pop
aas
in
stos
sar
lds
adc
dec
mov
and
inc
inc
mov
jnp
mov
stc
loopne
mov
retf
cmp
lahf
add
xchg
fbld
ret
cmp
ror
xor
pop
cmp
sbb
into
mov
iret
and
sahf
sub
jo
movs
adc
fsubr
cmp
jl
push
xchg
fidivr
clc
inc
aaa
enter
xchg
dec
ja
xchg
ss
or
xchg
xchg
mov
jb
cld
shl
sbb
out
out
xchg
stos
out
pop
fdivr
retf
mov
or
pop
sahf
xchg
jge
xor
mov
or
arpl
enter
ins
push
and
xor
das
pop
xor
or
mov
cmc
cmc
fidiv
mov
cmp
cmp
nop
hlt
call
adc
jnp
fist
jecxz
xor
outs
inc
xor
sar
add
fiadd
cmp
cmp
fwait
lods
(bad)
stc
ss
out
test
aam
push
mov
sti
cmp
mov
arpl
inc
mov
fnstcw
sub
mov
pop
shl
jb
and
mov
pop
jge
sub
loopne
test
and
pop
mov
xor
xor
xchg
fisub
loop
test
jb
and
adc
jne
leave
loope
xchg
ret
lods
cmps
pop
dec
test
mov
jge
xcrypt-cbc
cmps
ror
dec
fdivr
pop
cld
inc
mov
fcomp
lods
cs
mov
(bad)
jnp
dec
mov
mov
mov
stos
cmps
adc
gs
sub
mov
mov
loopne
ret
and
inc
push
movs
jge
jb
hlt
mov
mov
mov
mov
lods
sub
xchg
pop
dec
daa
xchg
add
mov
shl
pusha
pop
movs
sub
sar
dec
fs
data16
daa
push
loopne
sbb
pop
loopne
sahf
mov
lods
push
mov
mov
pop
ja
mov
adc
add
dec
xor
jae
mov
adc
lods
sub
shl
test
sbb
cs
mov
cmp
hlt
xchg
inc
cwde
sbb
pop
push
add
in
xlat
not
jecxz
inc
or
mov
jnp
jl
enter
sbb
sti
mov
adc
stc
cmp
inc
pop
dec
mov
adc
fidivr
lds
lock
iret
cs
inc
jecxz
xor
outs
push
xchg
mov
sar
xor
mov
mul
adc
dec
arpl
(bad)
push
push
xchg
mov
push
xchg
jo
and
ss
jae
in
push
dec
adc
js
in
jnp
push
add
test
fs
ins
add
jmp
push
push
and
cmp
sbb
jle
out
cli
in
sti
lods
push
das
nop
cmps
inc
shl
dec
fcomp
fmul
and
fiadd
or
jne
mov
add
mov
cmps
sub
push
xor
or
sub
xor
cmp
mov
push
dec
xchg
outs
mov
lahf
sbb
add
in
sar
add
sbb
xor
test
and
aad
stos
mov
fs
mov
inc
daa
cmps
mov
std
(bad)
mov
jecxz
mov
test
add
sbb
inc
aas
pop
test
enter
aam
or
or
add
and
add
inc
mov
lds
in
shl
mov
push
jnp
push
dec
cmp
and
pop
out
xor
push
push
mov
test
fst
sub
xor
dec
mov
ror
jnp
std
jg
cmps
xchg
cld
adc
pop
pop
pop
mov
fisubr
retf
cmp
xor
mov
ror
into
(bad)
cmp
test
sub
scas
adc
test
call
ja
in
pop
(bad)
push
popa
jecxz
mov
jne
xchg
fwait
das
adc
mov
leave
gs
cmps
(bad)
cmc
pop
ja
add
outs
mov
lock
pop
cmp
fs
fsubr
lock
pop
mov
gs
icebp
inc
pop
inc
mov
test
xchg
add
pop
add
clc
push
lea
adc
dec
lods
mov
fs
loopne
call
jns
mov
inc
cmps
or
in
cmps
inc
push
mov
outs
pop
jbe
adc
adc
pushf
sti
test
sub
xchg
or
jno
jno
add
mov
mov
aam
cmps
lods
jbe
xchg
(bad)
inc
out
lea
arpl
cld
ret
sbb
and
movs
sub
pop
lahf
adc
adc
in
mov
imul
mov
xor
adc
and
(bad)
mov
stos
lock
and
fs
fmulp
mov
mov
pop
mov
mov
daa
dec
pop
call
(bad)
mov
fild
ret
cmp
lfs
push
int
push
push
cmps
jb
jne
xor
ror
out
popa
mov
mov
dec
sbb
rol
in
xor
sub
cmp
stos
mov
into
mov
mov
xor
ins
ret
shl
push
jbe
(bad)
mov
adc
push
ror
pop
hlt
cmp
or
das
ins
std
cli
mov
in
ss
aam
push
push
jo
push
in
jmp
adc
and
fisub
mov
test
and
adc
out
jae
push
add
pushf
cmp
out
ret
adc
jecxz
ja
jne
mov
and
xor
cs
add
fcom
sub
push
out
cmp
sub
lds
fs
push
mov
dec
fs
jb
sbb
push
int
(bad)
movs
mov
xchg
adc
cmp
xor
pop
xchg
xchg
xchg
cmps
shr
lea
mov
mov
data16
mov
xchg
dec
push
rol
(bad)
nop
in
outs
enter
xchg
cmp
dec
cmp
or
sub
inc
fs
xor
jg
lods
sar
cld
push
adc
and
adc
mov
mov
cmc
shl
mov
shl
push
arpl
int3
fld
sbb
sbb
or
jl
(bad)
and
lds
lock
mov
(bad)
mov
dec
test
daa
mov
outs
mov
xor
push
outs
dec
sbb
xchg
jle
cmp
adc
mov
sub
jl
or
fnsave
push
jae
nop
gs
fisubr
mov
mov
dec
fisubr
lahf
mov
loop
mov
push
cmpps
(bad)
imul
or
mov
cmc
or
xor
mov
jbe
ins
fdivr
mov
mov
jno
mov
mov
popf
loope
call
mov
jno
add
xor
aam
(bad)
xchg
add
mov
imul
loopne
aam
loope
cmc
aad
pop
loope
xchg
(bad)
mov
jno
xor
emms
cmp
sti
stc
outs
pop
mov
int
and
inc
mov
data16
dec
rcr
mov
pop
pop
ins
fucomi
test
(bad)
xchg
jb
mov
push
cmps
push
mov
mov
add
mov
test
pop
lahf
call
xor
(bad)
(bad)
(bad)
add
sub
mov
out
popf
popa
adc
mov
pop
mov
xor
(bad)
addr16
aad
xchg
inc
shr
sbb
dec
in
movs
jmp
movs
arpl
loope
jnp
push
fstp
icebp
mov
(bad)
in
leave
movs
inc
sbb
iret
in
dec
mov
inc
xchg
jnp
mov
dec
out
stos
gs
test
movs
fimul
ret
aaa
test
inc
cwde
mov
push
out
dec
mov
sbb
cli
outs
in
adc
jmp
mov
pop
(bad)
in
cmp
inc
mov
adc
sbb
dec
jns
call
jno
fwait
hlt
ins
cdq
or
dec
out
in
fcmovne
xchg
pop
ds
push
fisubr
lods
in
inc
xor
jle
fadd
arpl
mov
fcmovne
dec
leave
push
frstor
ret
je
mov
mov
fcom
(bad)
aam
je
dec
adc
push
or
repnz
fdiv
addr16
add
push
ror
mov
cmp
test
jno
ds
mov
xor
adc
push
ror
dec
mov
sub
(bad)
je
or
cmp
(bad)
cwde
push
cli
clc
test
lea
ds
mov
xchg
movs
pop
leave
dec
in
mov
xchg
mov
in
push
xchg
jae
out
dec
ds
pop
cmp
jge
or
xchg
cmp
add
loope
movs
jge
lahf
fcomp
sub
jnp
lock
xor
sbb
data16
test
(bad)
mov
mov
rol
enter
std
test
jno
fistp
xor
stos
inc
jmp
dec
pop
into
sti
and
push
lds
add
mov
dec
and
mov
leave
mov
pop
retf
cmp
out
push
jmp
push
cmp
mov
push
push
xor
sbb
stos
ret
mov
add
jmp
loop
fist
loopne
inc
and
std
sub
jno
and
xchg
push
xchg
pusha
mov
sub
inc
call
test
clc
lea
mov
es
dec
sub
jmp
xor
retf
scas
mov
addr16
push
push
test
pop
jp
mov
(bad)
int
or
push
pop
test
cmp
mov
dec
mov
test
int3
dec
pop
rcr
sub
test
iret
adc
xchg
cmc
sbb
ss
retf
ds
cmp
add
addr16
aaa
(bad)
xor
jg
aam
pop
adc
inc
sti
cmp
scas
call
mov
int
dec
xor
jae
xlat
push
sbb
adc
out
sti
inc
sub
and
addr16
(bad)
outs
adc
mov
mov
fidivr
inc
and
cmp
mov
or
and
mov
imul
nop
scas
scas
mov
mov
and
add
add
xchg
(bad)
mov
retf
pop
add
sub
fs
jl
and
mov
rol
push
les
es
mov
bound
or
punpckhdq
popf
dec
or
xlat
stos
aad
jmp
cmps
jmp
pushf
test
jge
imul
test
jns
int3
jmp
lahf
pop
fisubr
sti
aad
loop
jno
jecxz
retf
mov
xor
leave
jmp
mov
push
jns
fadd
mov
retf
cli
imul
je
in
cmp
jmp
cld
sub
xchg
pop
jecxz
push
popf
loopne
psubw
pop
call
arpl
ret
shl
ins
add
inc
adc
jae
call
loopne
push
and
bound
stos
test
sbb
jno
push
and
push
stos
out
mov
popa
push
in
cmps
int
dec
dec
pushf
pop
aas
xchg
xchg
pop
pop
sbb
xlat
push
icebp
inc
(bad)
in
aad
adc
out
add
jns
dec
rcl
(bad)
frstor
pop
sub
xchg
pop
mov
pop
repz
xor
into
cmps
js
sub
mov
adc
dec
push
stc
jmp
add
pop
out
icebp
sub
int
mov
dec
sbb
inc
repnz
cmp
mov
mov
stc
mov
int
js
dec
out
jno
jmp
rol
push
and
xor
iret
popa
scas
cli
mov
loope
or
sar
jne
movs
dec
mov
out
add
xor
jbe
lahf
adc
mov
sub
nop
adc
mov
xchg
cmp
dec
xchg
ins
pushf
cld
and
lods
adc
idiv
add
sub
iret
imul
push
push
das
xor
pop
xlat
movs
das
lods
push
jmp
out
gs
jecxz
out
lahf
xor
jmp
pop
pop
idiv
imul
mov
jae
in
addr16
fwait
mov
mov
fs
mov
outs
and
or
lahf
adc
mov
cmp
lods
adc
pop
jmp
lods
push
out
test
std
pushf
les
rol
mov
push
xor
out
in
pop
jecxz
sbb
popa
mov
jb
fcmovb
rcr
xchg
jg
jmp
movs
sub
arpl
xchg
xlat
jl
jmp
xchg
imul
and
add
sbb
test
adc
xor
movlps
call
lods
les
nop
movs
mov
int
xchg
push
mov
call
push
fsubr
push
rol
test
mov
retf
xchg
mov
out
cmc
repnz
mov
dec
cmp
xor
inc
cli
push
aas
outs
or
fdivr
mov
pusha
push
dec
cmp
in
push
aam
scas
jbe
add
pop
(bad)
sub
or
pop
adc
xchg
data16
out
test
fnstcw
aam
shl
shl
fsub
jmp
loopne
cmp
hlt
xchg
or
clc
mov
or
dec
dec
int3
fcomp
push
pop
jbe
sbb
mov
clc
dec
mov
push
ret
cmps
sar
inc
cs
sti
xchg
fld
mov
pop
cmp
push
inc
dec
jne
add
mov
dec
and
into
cmp
jl
loopne
fsubr
mov
push
mov
mov
jp
push
mov
das
cmc
(bad)
xchg
fdivr
int
clc
jns
and
cmpxchg
ret
mov
xor
sub
fidiv
xor
lds
lock
inc
pop
adc
adc
cmp
icebp
jb
in
loopne
hlt
cmp
(bad)
pusha
es
dec
test
and
jbe
imul
jg
and
je
hlt
inc
int
sbb
push
in
dec
jae
xchg
out
movs
and
jnp
lds
dec
mov
xchg
into
pusha
xor
pop
mov
add
bnd
int3
inc
out
mov
enter
lea
bound
push
(bad)
cs
mov
dec
dec
ins
out
std
xchg
je
ins
xchg
mov
xor
daa
mov
push
adc
xchg
cli
sar
imul
push
push
cwde
jl
sub
add
popf
or
enter
xor
cmps
std
(bad)
fbstp
cdq
stc
mov
ret
xchg
add
xchg
stc
or
icebp
cmp
xchg
mov
pusha
shl
mov
jo
jecxz
dec
(bad)
stc
xchg
pop
mov
jge
mov
stc
pop
xor
nop
fldenv
mov
lahf
mov
jg
push
xchg
pop
movs
mov
lods
ins
sbb
pop
pop
adc
stc
dec
inc
daa
les
push
cmp
push
in
pop
sbb
and
cmp
mov
xchg
push
stos
sub
mov
pop
ret
popf
push
fucomi
in
fild
xlat
pop
popa
les
inc
and
ja
and
les
fst
inc
jae
inc
call
mov
bound
mov
and
xchg
dec
cs
sar
mul
sbb
add
outs
loopne
xchg
retf
push
loopne
adc
inc
retf
sbb
or
jecxz
push
mov
lods
xchg
and
cmc
(bad)
inc
xor
(bad)
aas
movs
retf
jg
(bad)
push
ficom
xchg
xor
mov
inc
xchg
out
add
xor
fistp
popa
sub
inc
shl
mov
lods
xor
inc
pushf
pop
or
data16
stc
or
push
mov
ja
mov
inc
scas
fucomp
add
push
ret
fild
lock
(bad)
jg
jb
test
push
outs
mov
cmp
dec
mov
fwait
add
xchg
or
add
bound
test
jbe
out
std
or
mov
call
mov
mov
packuswb
mov
shl
dec
sub
imul
das
mov
xchg
push
(bad)
test
mov
or
mov
dec
ins
out
ins
sbb
push
inc
or
cdq
popf
push
inc
cmp
jae
les
cwde
hlt
xor
loope
je
cmp
jne
in
nop
scas
pop
jmp
inc
pop
dec
pop
int
add
mov
jo
pop
pop
mov
add
adc
ds
clc
retf
mov
or
loope
add
(bad)
adc
or
enter
cmp
jle
fldcw
mov
shl
add
dec
sbb
or
push
push
mov
dec
adc
aam
rol
dec
imul
repz
pop
mov
inc
movs
inc
cmps
xor
pop
jl
push
add
int
cmp
out
mov
shl
movs
aam
scas
stc
inc
movs
and
lods
sbb
fs
push
mov
ret
pusha
cli
outs
push
xor
xor
popa
stc
adc
int3
sub
adc
add
rol
xchg
cmp
push
mov
shr
sbb
xor
call
stos
xchg
ror
in
mov
sar
loope
call
xor
bound
mov
fcomp
out
add
pop
repnz
lods
lock
xor
pop
cmp
mov
addr16
add
jecxz
ret
stc
jno
les
dec
and
mov
pop
int3
dec
pop
ds
iret
sbb
test
jmp
jecxz
add
jmp
cli
mov
xchg
jo
xchg
outs
sbb
xlat
lock
addr16
and
jmp
and
(bad)
inc
adc
and
xlat
outs
xchg
sub
fdivr
nop
cmp
xchg
into
stc
add
add
cli
cmp
mov
addr16
fistp
pushf
inc
cmp
and
or
lea
inc
test
dec
sub
(bad)
mov
pop
sub
retf
(bad)
push
jl
pop
ss
jge
add
(bad)
cmp
in
std
lods
mov
jge
iret
stos
jnp
rcl
mov
lock
call
or
dec
mov
cmp
xchg
xor
fild
loop
shl
mov
mov
xor
pop
dec
les
mov
fmul
sub
xchg
dec
enter
sti
adc
cmc
jge
sub
push
cwde
out
cmp
lods
hlt
mov
into
out
cmc
fs
ins
mov
xor
fdiv
pop
xor
jnp
and
std
pushf
cdq
rcl
adc
out
sbb
push
inc
add
jne
mov
div
daa
and
push
cmp
lea
(bad)
mov
mov
push
adc
repz
out
(bad)
push
(bad)
sub
js
adc
push
mov
cwde
loope
jecxz
push
stc
push
pushf
test
sbb
ficom
pusha
ret
inc
add
mov
cmps
(bad)
dec
sar
aaa
mov
and
or
push
inc
cld
mov
lock
rcr
jl
movs
dec
cmp
xchg
(bad)
sbb
sub
mov
push
test
inc
adc
mov
cmps
fisttp
mov
inc
(bad)
fstp
mov
mov
retf
xchg
jmp
push
jg
dec
leave
cmc
cmp
xor
xchg
dec
aam
sub
lods
(bad)
out
inc
pop
bound
jae
cmp
xor
bound
xchg
pop
or
sbb
jnp
mov
aaa
les
mov
call
in
imul
dec
dec
mov
adc
add
pop
in
xchg
jge
mov
cmps
mov
adc
push
and
mov
int
push
scas
pop
inc
sbb
ja
ret
sub
data16
mov
mov
mov
dec
popa
mov
xchg
add
movs
mov
in
xchg
dec
and
inc
jmp
inc
jae
popa
push
js
inc
sub
pop
js
rcl
scas
add
popf
cli
pop
pop
js
sub
repz
lahf
pop
adc
push
pop
pop
mov
retf
enter
add
xchg
inc
xchg
pop
test
jmp
mov
jnp
cmp
pushf
inc
jbe
nop
sbb
sub
jae
jno
jmp
repz
mov
xrelease
mov
ins
imul
and
adc
je
mov
ins
aaa
add
or
jle
movs
test
ret
imul
sub
xor
popa
cmp
test
lock
xor
lods
ss
inc
pusha
stc
sahf
sub
or
fimul
aam
sti
sbb
enter
in
int3
jmp
loopne
in
repnz
es
mov
pop
stos
retf
mov
sbb
jmp
inc
dec
mov
aam
pop
stc
cmp
outs
je
mov
xchg
add
cmp
and
je
jle
inc
out
xchg
mov
bound
mov
mov
out
retf
lds
push
pop
shr
cmp
pop
pop
out
mov
mov
add
out
mov
pop
aaa
ja
cmp
ret
lea
jmp
repz
mov
add
aas
std
out
shr
lock
out
lods
pop
xchg
mov
cs
xchg
pop
jecxz
inc
inc
rcr
push
nop
xlat
(bad)
das
sub
ret
nop
out
icebp
dec
mov
push
sbb
mul
iret
fnsave
inc
mov
jns
and
mov
inc
jae
cmp
lods
mov
mov
jno
mov
adc
mov
shl
xor
les
ja
les
pushf
and
lods
xor
xor
sub
xor
addr16
addr16
daa
call
xor
mov
mov
lds
ret
sbb
div
push
push
dec
mov
fsubrp
mov
pop
lods
push
mov
mov
mov
mov
out
pop
jne
lahf
in
adc
sahf
sbb
mov
test
xchg
outs
stos
cmp
imul
inc
cdq
adc
lods
cmps
sub
stos
ja
inc
push
retf
cmp
into
(bad)
daa
cli
push
das
and
add
scas
nop
iret
inc
mov
in
dec
idiv
xchg
xchg
push
in
vmwrite
push
outs
fwait
(bad)
cmp
call
and
and
adc
xchg
lea
test
sub
xchg
pop
imul
jae
loopne
inc
sub
mov
add
js
dec
mov
add
mov
push
jo
pop
aas
xchg
or
sbb
xor
xchg
jbe
sahf
arpl
push
loop
mov
(bad)
pop
mov
push
mov
xchg
and
add
shr
sbb
inc
pop
mov
aad
dec
mov
std
or
jne
or
cmp
retf
stc
xor
cmps
mov
and
sbb
sbb
out
xchg
test
sub
add
push
pusha
data16
loop
add
pop
mov
scas
mov
jne
xor
jbe
mov
pusha
clc
stc
lock
push
mov
mov
fimul
cmp
sub
outs
out
adc
js
jg
mov
add
in
mov
ja
and
stc
pop
pop
dec
cmp
mov
mov
sub
push
fcomp
pop
mov
out
mov
in
mov
out
dec
or
mov
addr16
inc
js
sub
iret
pop
fcom
mov
shl
fisubr
je
dec
mov
stos
pop
cmps
mov
cmp
les
mov
mov
pop
movs
daa
inc
pop
push
push
push
push
sub
aas
jno
pusha
ror
mov
xchg
mov
stos
mov
into
iret
pop
add
cli
in
mov
inc
and
xor
(bad)
aad
mov
mov
xchg
cs
stc
aaa
das
add
adc
pop
mov
popa
xchg
cld
shl
int
and
es
shr
ret
xchg
mov
mov
lahf
and
jo
fist
retf
sbb
icebp
fwait
adc
xchg
mov
scas
mov
cmp
rcl
pop
mov
ja
fisttp
xor
pop
rcr
xor
xor
imul
sbb
(bad)
rcl
xchg
int3
xchg
and
add
mov
fwait
inc
cld
test
cmp
lods
popa
movs
ret
jle
fistp
inc
jo
mov
xchg
adc
test
push
js
scas
mov
xchg
push
rcr
xchg
(bad)
popa
neg
sub
jne
lahf
iret
std
mov
bnd
(bad)
fwait
mov
mov
xchg
mov
sbb
push
jmp
xchg
mov
ror
mov
enter
(bad)
loopne
dec
xchg
dec
adc
dec
xor
es
jge
jne
dec
mov
adc
leave
fidiv
add
jecxz
add
push
mov
pushf
dec
and
sahf
sbb
dec
mov
into
test
(bad)
fstp
icebp
cmovne
cmc
sbb
or
jbe
std
fistp
mov
pop
ds
push
jmp
ficomp
pavgb
or
imul
imul
adc
pop
pop
les
out
sub
mov
mov
leave
adc
jmp
mov
test
cmp
test
sti
dec
cmps
int
mov
xor
jp
xchg
mov
mov
pusha
pop
shl
int
mov
push
adc
movs
xchg
mov
aad
add
mov
sbb
cli
inc
mov
dec
ret
xchg
into
dec
cmps
lods
mov
jl
mov
push
adc
jecxz
push
ins
cmp
xchg
adc
xchg
arpl
sahf
out
sar
dec
cwde
xor
inc
sbb
daa
data16
jmp
mov
xor
popa
out
and
je
out
cmp
mul
adc
mov
jmp
jge
add
cmp
or
cmps
and
nop
mov
adc
imul
lods
mov
mov
mov
mov
fwait
sbb
mov
fucom
add
aas
inc
imul
add
jno
retf
sahf
and
shr
ror
pop
add
repz
out
retf
les
iret
push
fistp
mov
fld
sub
push
pop
retf
shr
jnp
test
sbb
jmp
jo
xchg
lods
pop
ret
rol
mov
icebp
jae
aam
adc
push
stos
xor
or
inc
jne
mov
mov
int3
xchg
adc
sbb
hlt
jo
jb
jne
daa
push
jb
add
repz
mov
cli
sub
pop
inc
ds
pop
hlt
mov
daa
mov
xor
dec
lock
arpl
and
dec
push
retf
mov
rol
cdq
(bad)
stos
inc
mov
push
fsubr
cmc
mov
cmc
dec
cs
mov
and
cmp
adc
and
or
sub
inc
(bad)
mov
jnp
enter
sar
pop
xor
shl
push
(bad)
mov
mov
(bad)
mov
cmp
nop
xlat
sub
call
pop
mov
mov
push
test
dec
or
sub
das
mov
es
repz
call
mov
xchg
inc
dec
(bad)
icebp
not
je
fisub
out
retf
std
lds
test
add
clc
fisub
loopne
sar
iret
imul
xor
(bad)
ffreep
jp
loop
aas
aaa
and
stc
cmp
pop
xchg
jmp
inc
dec
jo
das
or
push
pop
jnp
xor
xor
pop
add
xor
mov
add
cdq
dec
cmp
jno
repz
in
cmp
and
rcr
(bad)
retf
dec
fsub
push
test
jne
mov
(bad)
ins
mov
test
(bad)
int
cdq
cmp
and
push
in
sub
ss
pop
sbb
jno
xor
lea
test
fnsave
neg
mov
out
in
jl
fstp
inc
in
test
and
retf
sbb
add
fimul
aam
xor
mov
push
movs
sub
push
xor
test
out
outs
test
xchg
(bad)
ficom
cwde
xlat
cs
loopne
xor
out
scas
xchg
leave
cmc
cmps
pop
dec
jge
(bad)
push
fisub
xchg
mov
repz
jg
xor
adc
loopne
les
adc
xor
popf
cmp
mov
inc
fbld
out
sub
leave
pop
icebp
inc
dec
aad
adc
inc
(bad)
push
pop
pop
mov
mov
popa
gs
dec
stos
lds
mov
popf
sbb
and
fs
int3
dec
data16
les
jecxz
leave
xchg
push
bound
es
test
fwait
aad
js
nop
mul
pop
xor
inc
inc
not
push
xchg
push
pop
icebp
fs
sub
shl
js
jns
xchg
push
cmp
enter
fdivr
repnz
enter
adc
inc
jecxz
je
imul
sub
sub
in
mov
push
push
addr16
and
mov
std
inc
inc
fnstcw
stos
ret
cdq
mov
xchg
dec
scas
inc
mov
xchg
(bad)
lock
fcomp
int
mov
fmulp
mov
mov
neg
into
mov
bound
mov
dec
jg
push
rcl
jp
(bad)
add
call
mov
or
cmps
ins
sub
add
mov
loope
push
das
jg
and
iret
pop
jmp
dec
cmp
and
xchg
fldcw
adc
in
call
fwait
call
xor
movs
je
(bad)
into
es
mov
jecxz
mov
icebp
test
xchg
jnp
adc
lods
push
jge
nop
or
neg
int
add
jmp
scas
test
add
xchg
xchg
cdq
sub
cld
jecxz
fisubr
sar
retf
push
ja
mov
repnz
jae
lock
xchg
and
outs
out
mov
push
gs
mov
ror
mov
dec
ret
sbb
ss
push
mov
cs
jmp
ins
ficomp
inc
pop
or
ja
adc
jg
fcom
clc
xor
leave
retf
inc
ficom
nop
div
push
les
aaa
dec
clc
leave
std
mov
popa
(bad)
or
inc
into
ret
enter
mov
loop
shr
es
cmps
sbb
mov
sar
push
xor
cmp
mov
in
jge
popa
cmp
addr16
(bad)
dec
sbb
mov
in
bound
pop
(bad)
mov
xor
push
(bad)
mov
jg
push
mov
or
mov
mov
shl
or
mov
xor
sub
adc
stc
xlat
cdq
(bad)
ds
cli
repnz
bsf
add
xchg
cs
addr16
mov
lock
inc
adc
cmp
imul
aad
stc
ficomp
daa
mov
jb
movs
mov
jb
xor
ffreep
push
mov
xor
jnp
push
dec
test
mov
cwde
pop
sahf
shl
imul
movs
and
ins
ss
push
and
out
cmp
push
pop
mov
mov
jmp
(bad)
mov
mov
adc
jno
or
add
daa
mov
loopne
test
dec
mov
lods
mov
fwait
dec
mov
dec
shr
and
add
cmp
sti
pop
xchg
fisubr
mov
mov
fucomip
sbb
ret
adc
out
rol
cmp
lds
adc
rcl
sbb
push
or
shl
addr16
inc
out
jnp
jb
jbe
push
jb
int3
push
js
xor
jnp
shl
cld
dec
or
jno
xor
xchg
inc
jmp
out
jl
ret
sahf
sti
and
mov
cli
mul
mov
gs
loope
aam
mov
dec
jb
imul
cmp
fsubr
cmps
iret
and
jns
lods
popf
add
inc
push
gs
pusha
je
call
retf
js
cmp
mov
xchg
retf
std
mov
pop
jne
and
ins
add
jnp
out
shl
xchg
sahf
xchg
pop
rcr
inc
jbe
mov
cmps
xlat
mov
xchg
call
ja
fisttp
(bad)
lock
(bad)
adc
jns
movs
mov
out
gs
fmul
hlt
pop
inc
push
and
arpl
loopne
into
inc
stos
in
adc
aad
aam
lods
ror
call
mov
es
stos
dec
inc
inc
or
dec
and
loop
pop
sub
mov
pop
cmps
mov
adc
ret
jg
cmps
rcr
dec
rcr
mov
jne
mov
xchg
das
push
stos
scas
ja
bound
(bad)
imul
stos
dec
in
aad
repnz
sbb
fcomp
pop
mov
push
or
pop
adc
push
mov
xchg
les
ins
in
outs
lods
mov
lea
retf
out
(bad)
stc
test
xor
popa
leave
adc
xchg
push
dec
sbb
lods
rol
push
mov
in
mov
fidivr
and
test
push
mov
pop
cs
idiv
lea
cmps
enter
dec
bnd
sbb
dec
push
fild
cmps
and
(bad)
cmp
jmp
mov
pop
mov
(bad)
rcr
hlt
pop
inc
(bad)
cmp
mov
mov
fcomp
test
(bad)
(bad)
dec
push
je
clc
adc
imul
sbb
mov
push
(bad)
jno
xor
sub
add
dec
mov
retf
inc
lds
adc
(bad)
ins
fwait
call
jb
outs
mov
and
inc
cwde
push
add
ja
dec
add
popf
leave
cmps
cwde
ret
or
inc
add
ins
into
push
sub
ret
(bad)
and
out
stos
test
ins
sub
xor
dec
cdq
push
or
push
lods
lock
add
int3
and
scas
loopne
aam
push
mov
jmp
out
jb
aad
xchg
ficom
mov
js
xchg
dec
push
xchg
mov
scas
mov
addr16
pop
(bad)
fs
call
clc
rcr
(bad)
ds
int
out
jle
imul
cwde
mov
mov
mov
inc
retf
xor
xlat
(bad)
mov
popf
int3
mov
call
mov
movs
mov
push
movs
adc
cmp
sub
je
lds
and
cmp
stos
cmp
inc
cdq
jmp
mov
xchg
sahf
fisub
mov
hlt
and
push
mov
sub
lahf
push
pusha
push
xor
dec
lods
pushf
fwait
in
mov
out
pop
dec
vpunpcklbw
push
lea
inc
jg
jo
jl
mov
(bad)
cmc
call
ret
sbb
cmp
mov
daa
cmp
mov
ss
inc
xor
and
out
enter
movs
jb
bnd
test
sbb
lahf
jno
dec
fnstenv
pop
xchg
push
inc
jle
xor
into
into
xor
mov
clc
je
pop
iret
pop
cmc
dec
ja
mov
or
sbb
pop
sti
push
aas
adc
repz
fld
sub
rcl
fs
push
jg
adc
push
push
mov
movs
js
dec
aam
add
movs
jp
jg
adc
pop
mov
gs
fcomp
pop
xor
rcl
loope
mov
add
add
popa
stc
enter
and
and
push
and
cmp
sbb
adc
mov
jns
outs
out
pushf
xor
js
jl
adc
pop
fldenv
cmp
ja
loopne
or
aam
ds
pop
or
dec
push
cmc
push
ins
xchg
inc
inc
ss
or
dec
dec
es
retf
cmp
cmp
jbe
movs
jbe
stos
xchg
in
shl
cmp
add
mov
mov
mov
sbb
test
div
pop
jge
clc
fist
jg
and
cmp
pop
retf
jg
jle
(bad)
adc
cmp
repz
enter
fdiv
out
push
stc
sub
div
sub
aam
enter
adc
pop
rcr
enter
xor
cmc
lds
fidivr
adc
mov
sar
inc
mov
test
add
xor
pop
fnstcw
or
cmps
xor
aam
mov
cli
outs
hlt
jne
mov
jno
inc
in
fadd
add
push
hlt
pop
fs
fst
push
fwait
add
mov
or
inc
lea
fs
call
jg
jbe
pop
lods
jo
rcr
bound
mov
test
(bad)
out
push
popf
(bad)
pop
rcr
mov
mov
inc
fild
mov
sub
and
mov
or
xor
es
cmc
popf
mov
outs
xor
adc
adc
mov
push
fwait
out
xor
dec
jbe
add
lods
cmp
mov
ins
icebp
cmp
fwait
mov
cmp
js
neg
inc
cmp
pop
std
bound
sbb
scas
cdq
mov
add
cmp
fsub
ret
push
pop
dec
and
and
nop
ja
loope
or
out
das
pop
les
xlat
push
mov
dec
addr16
out
lahf
cmp
int
ror
ja
popf
es
imul
fsub
cmp
std
cwde
sub
sub
sahf
and
push
outs
imul
pusha
test
lahf
and
popf
ss
sbb
add
xor
add
or
mov
pop
shr
in
pop
mov
cli
test
dec
push
mov
cmp
aas
test
push
xor
test
dec
pusha
test
dec
dec
int
div
mov
clc
(bad)
adc
adc
mov
mov
rcr
fsubr
pop
loopne
loopne
mov
cmp
sar
and
call
or
mov
cmps
dec
xchg
(bad)
jge
test
pop
pusha
jo
daa
jns
loopne
retf
clc
mov
in
jb
inc
jno
sbb
je
js
sub
lods
xor
in
aad
jmp
add
mov
out
or
cld
aad
lock
add
pusha
jl
mov
retf
jns
ficomp
adc
and
adc
sti
mov
mov
cmp
mov
adc
ss
shl
jecxz
in
int
add
gs
xor
ror
pop
jecxz
jnp
add
out
jecxz
stos
fucomp
push
sbb
inc
cmp
inc
add
es
fild
mov
xchg
mov
mov
pop
test
enter
pop
adc
out
or
pop
sbb
and
dec
adc
cmp
push
sti
enter
dec
mov
adc
call
and
inc
jl
cwde
inc
lahf
jbe
pop
ror
or
fidivr
jecxz
pop
sub
out
cmps
cmc
adc
push
pop
xor
cwde
or
test
stos
sbb
movs
mov
pop
(bad)
cmp
test
fwait
inc
hlt
ins
aaa
ins
fucom
retf
mov
mov
xchg
ror
push
scas
les
add
fld
sbb
push
addr16
cmp
cmp
fstp
sti
sar
fld
adc
mov
cmp
pop
scas
inc
jnp
dec
mov
sahf
mov
cmps
fxtract
call
cmp
xchg
es
xchg
cmp
mov
push
outs
add
add
shl
mov
das
cmp
bound
je
adc
cli
adc
call
xor
in
js
cli
xchg
stos
cmc
in
or
retf
es
stc
mov
icebp
mov
ror
and
test
pop
cli
arpl
aaa
iret
and
out
mov
inc
cli
dec
pop
cmp
adc
cwde
dec
(bad)
dec
or
inc
push
jecxz
and
in
mov
sbb
nop
cmp
jno
pop
test
imul
mov
(bad)
fisub
nop
outs
daa
aad
push
cmp
mov
scas
ins
mov
ds
cmp
int
sub
popa
push
jmp
mov
test
addr16
std
mov
movs
push
lock
cwd
add
loop
and
movs
inc
bts
(bad)
(bad)
adc
cmps
and
xchg
fs
fiadd
and
sub
retf
mov
call
lock
outs
add
mov
push
xchg
clc
leave
call
shl
fiadd
stc
int3
fld
call
add
sbb
rcl
add
mov
aaa
pop
sub
cld
ins
sub
push
iret
mov
inc
jmp
mov
add
dec
inc
sub
mov
retf
xchg
popf
shl
mov
jns
cmps
xor
push
dec
sti
f2xm1
mov
movs
push
xlat
out
test
adc
fiadd
and
add
cli
add
in
and
pop
pop
aas
fist
and
cld
jmp
js
add
scas
fnsave
jmp
mov
and
out
pop
or
shl
aaa
(bad)
lods
shl
jbe
cmp
scas
mov
mov
loopne
pop
mov
inc
and
mov
ins
pop
call
arpl
les
pop
in
popa
mov
shl
pop
dec
popa
jne
cmp
jl
pop
mov
in
lds
out
in
ss
add
aam
mov
addr16
fbstp
inc
push
stc
jno
out
mov
loope
mov
jp
cmc
rcl
jnp
lock
adc
stos
push
rcr
add
jg
in
adc
lds
sbb
cmps
out
mov
jno
icebp
pusha
fwait
(bad)
rol
(bad)
int3
adc
dec
outs
xor
(bad)
(bad)
hlt
adc
movs
push
xchg
(bad)
push
jne
enter
iret
ficomp
int
push
inc
loop
into
ficomp
shl
int
jmp
push
add
xchg
jbe
mov
loope
xlat
dec
scas
xchg
cdq
cs
lds
std
shr
adc
pop
es
push
xchg
dec
stos
jb
ret
mov
aad
mov
pushf
int3
mov
jns
inc
push
dec
mov
or
jo
adc
in
mov
jp
sar
or
xchg
cmp
mov
sub
leave
push
int3
push
dec
mov
fld
fwait
loop
mov
shr
out
rol
in
test
and
in
push
pop
out
mov
dec
mov
jb
pusha
mov
in
adc
cmps
dec
jns
aaa
ins
or
sahf
in
pop
or
popf
mov
jecxz
not
sbb
aad
pop
jecxz
in
lahf
fdiv
dec
push
ficom
mov
or
sahf
bound
and
lea
inc
sub
and
cmp
push
int
les
or
pop
loop
jge
adc
dec
jecxz
scas
jg
sub
movs
mov
mov
ficom
or
iret
dec
xchg
aas
bnd
shl
fsub
jae
mov
in
push
jmp
mov
cmp
pushf
push
retf
sbb
(bad)
xor
dec
sub
es
sbb
cmp
popf
jns
in
mov
jae
adc
rcr
mov
pop
jns
repnz
movs
fisubr
ja
shl
test
ds
jno
mov
add
mov
clc
or
dec
sub
add
push
sbb
add
xor
push
mov
mov
mov
mov
dec
sub
mov
adc
js
mov
ficom
adc
das
mov
(bad)
lahf
inc
pop
xchg
(bad)
push
cmc
ret
push
push
fild
mov
ret
sub
stos
push
jno
mov
(bad)
mov
cmps
and
sub
pop
jne
sahf
cmp
aam
sub
fucomip
popa
dec
jbe
dec
es
sub
adc
out
loop
scas
mov
inc
adc
push
retf
ja
jmp
hlt
js
loopne
int3
nop
inc
push
sbb
mov
icebp
hlt
iret
fcom
sar
call
lahf
mov
xchg
cmp
(bad)
pcmpgtd
iret
std
xlat
pop
aam
add
aam
ficomp
test
push
or
mov
lds
out
mov
jl
inc
push
outs
mov
out
adc
add
and
mov
inc
ficomp
push
int
mov
pop
sbb
mov
inc
lods
xchg
es
jne
xlat
pushw
stos
mov
and
sub
setns
pop
shl
sub
pop
xchg
dec
xchg
dec
out
in
push
adc
jmp
mov
test
mov
pop
sub
mov
jmp
push
sar
shl
out
clc
fs
jo
mov
adc
ffree
repz
cmp
mov
ds
sbb
jg
retf
mov
mov
retf
or
bound
outs
mov
pushf
dec
std
pop
push
hlt
in
jmp
nop
cld
push
cmp
cmp
sub
test
cmp
add
mov
xchg
ret
xor
nop
outs
push
ins
sbb
xchg
dec
cmp
adc
pop
dec
int
cmps
mov
cmc
(bad)
stc
pop
nop
int3
clc
add
add
mov
push
jg
sub
fcmovnb
aaa
sbb
jge
enter
int3
mov
jmp
inc
and
pop
cmp
sbb
movs
dec
std
stos
mov
lea
repz
dec
je
mov
jle
mov
xchg
adc
mov
pop
mov
jbe
icebp
movs
xchg
or
inc
sub
mov
pmaxsw
cmp
add
xor
jmp
xchg
outs
pop
adc
(bad)
fsub
pop
mov
ret
push
dec
pop
cdq
adc
push
(bad)
out
inc
sbb
inc
data16
mov
mov
ffree
add
loop
adc
stc
inc
ds
ror
cmp
sti
int3
mov
pusha
dec
jg
and
mov
repz
xor
loope
dec
sahf
aad
jmp
data16
dec
ins
jbe
nop
inc
in
pushf
cmp
or
stos
or
inc
aam
rcl
mov
(bad)
push
ja
mov
cmp
mov
imul
fild
mov
push
aad
jl
ret
xchg
outs
xchg
test
jnp
jnp
(bad)
aam
add
pop
and
ja
ret
int
pop
gs
adc
(bad)
cmp
rol
mov
(bad)
std
xchg
mov
imul
fisttp
fistp
inc
sbb
outs
ret
jne
js
shr
jo
add
jo
jne
ins
pop
jle
jo
loopne
retf
(bad)
cwde
xor
jns
sbb
(bad)
push
mov
add
xchg
stos
inc
mov
mov
jb
in
int
test
sub
cli
pop
cmp
push
and
add
das
sbb
call
lea
aaa
or
shr
pop
in
pop
pop
lods
cmp
mov
fild
int
lods
call
aas
mov
fstp
aad
push
js
lods
int
in
mov
sbb
sub
arpl
out
sahf
push
shl
(bad)
mov
je
push
cli
dec
fild
addr16
jo
iret
push
xchg
stos
mov
dec
pop
out
out
dec
xchg
ret
shr
xchg
dec
rol
pop
jnp
cmc
jno
xchg
mov
fiadd
sub
fist
fstp
inc
fistp
scas
mov
push
stos
add
in
js
test
mov
dec
gs
mov
lea
mov
icebp
mov
in
cwde
xor
mov
test
cld
or
outs
cmp
dec
lods
fmul
and
leave
adc
inc
retf
sub
xor
mov
cmp
stc
push
inc
or
push
into
jbe
cmp
add
pop
ja
mov
mov
dec
jmp
imul
popf
inc
popa
imul
aad
jmp
loopne
jmp
pop
cdq
mov
dec
dec
push
xchg
cmp
shl
jle
jmp
xor
(bad)
movs
ficomp
push
pop
dec
add
outs
add
sub
ror
jle
jmp
xchg
fld
or
inc
jl
in
adc
jo
ins
cmp
push
xor
stc
cmps
push
dec
ins
(bad)
ja
and
cmp
push
pop
mov
ror
jmp
sbb
les
add
xor
adc
push
xchg
xor
or
mov
jle
test
dec
mov
not
dec
loope
movsx
adc
cld
push
mov
mov
sbb
mov
xchg
iret
sbb
popf
or
out
imul
xchg
mov
daa
jns
jno
push
(bad)
(bad)
ds
xor
stos
push
fs
cmc
jmp
adc
ja
(bad)
jae
jno
cmp
or
adc
push
retf
(bad)
and
jmp
adc
mov
loopne
ret
mov
inc
and
rol
imul
mov
(bad)
push
xchg
mov
and
lods
push
dec
cli
in
mov
adc
test
and
adc
outs
out
push
fisub
inc
jmp
movs
or
mov
imul
sti
sub
adc
jns
int3
out
and
int
sub
popf
sub
push
(bad)
daa
div
mov
jmp
test
adc
rcl
inc
dec
out
stc
pop
ror
outs
in
es
dec
imul
mov
scas
out
not
(bad)
shr
push
mov
(bad)
dec
std
push
jecxz
jno
mov
mov
scas
(bad)
cli
aam
xlat
daa
inc
and
and
out
das
clc
and
mov
and
add
pop
leave
std
lods
lahf
mov
dec
std
dec
fadd
pop
pop
add
xchg
xor
and
adc
dec
test
call
jne
stos
xchg
push
mov
xchg
cs
inc
push
fs
push
fisttp
dec
jmp
lods
adc
sti
outs
outs
dec
scas
and
test
add
sbb
jg
call
inc
(bad)
pop
dec
mov
sub
or
test
mov
cld
xchg
xor
retf
cmp
movs
ins
jp
test
in
ret
jg
lock
gs
loop
adc
xor
pop
pop
mov
mov
sub
dec
inc
cmp
mov
outs
out
clc
mov
xchg
cmp
jge
sahf
mov
fmulp
mov
(bad)
mov
mov
pop
xchg
das
arpl
cli
cmp
int3
jge
repz
stc
push
mov
cli
adc
fnsave
movs
add
pusha
xor
call
sbb
sahf
ret
mov
push
(bad)
rcr
sar
(bad)
xchg
and
fcomi
loopne
jmp
and
sbb
call
sar
sub
jmp
shl
das
fdiv
cmp
adc
das
mov
outs
cwde
loope
or
cmp
jmp
in
sub
add
dec
clc
mov
ins
cmp
gs
cmc
mov
pop
adc
xchg
lock
push
(bad)
or
sub
add
ja
(bad)
push
aaa
into
mov
cdq
data16
push
inc
sub
and
and
repz
mov
adc
outs
push
out
and
xchg
xchg
mov
lea
mov
and
mov
std
xor
add
out
ret
xchg
lods
stos
jge
enter
lea
cmp
fwait
mov
dec
shl
mov
mov
push
aaa
adc
shr
in
jl
add
lds
aam
xor
call
xchg
mov
retf
dec
dec
in
pop
fs
(bad)
mov
and
pop
scas
sub
push
das
mov
repnz
cdq
fptan
jnp
aaa
fwait
inc
clc
xor
lods
push
retf
mov
rcl
rcl
movs
inc
pop
(bad)
cli
aam
aad
dec
mov
mov
xor
xor
pushf
pop
stos
pop
les
xor
stc
mov
jg
push
inc
jp
jecxz
push
out
xchg
inc
loope
mov
out
inc
dec
jge
(bad)
pop
in
addr16
jge
add
xchg
loope
rcr
pop
(bad)
rol
push
fdiv
into
jg
test
add
xchg
adc
sahf
mov
push
cdq
mov
xchg
popa
xor
js
dec
mov
adc
call
push
jge
data16
dec
push
lods
jl
cmps
pop
sahf
shl
dec
outs
cmps
in
sbb
lods
jne
jmp
in
cdq
adc
leave
pop
adc
sub
loopne
lods
xchg
pusha
fist
and
cmp
leave
mov
mov
jmp
and
cmc
and
push
xor
bswap
mov
xchg
leave
imul
jmp
push
out
jecxz
mov
adc
leave
sub
cld
repnz
pop
imul
add
daa
cvtps2pd
xor
jg
cwde
bound
sub
and
mov
pushf
inc
dec
mov
xor
jge
jge
dec
sbb
call
ins
out
in
in
(bad)
sub
jmp
out
adc
jecxz
pop
scas
and
hlt
lock
sub
dec
and
je
pushf
sbb
das
dec
stos
ss
sub
add
pop
out
push
jae
xor
arpl
add
mov
rcl
sbb
add
int3
stc
out
arpl
or
push
adc
cld
cmp
add
cmp
hlt
dec
and
and
push
dec
sar
cmp
push
inc
neg
cmp
mov
retf
nop
lods
xchg
bound
sbb
inc
jge
ficomp
mov
push
mov
mov
jnp
aad
or
retf
add
xlat
jge
mov
inc
cmp
add
xchg
mov
test
jmp
fsub
jmp
mov
adc
sub
sti
jmp
ds
inc
movs
fadd
in
jmp
ins
jg
fldenv
clc
xchg
mov
mov
or
xchg
pop
sub
cdq
into
xor
dec
clc
pop
pop
adc
je
jbe
aam
mov
mov
mov
sbb
xchg
sbb
ins
push
lea
lock
mov
dec
(bad)
jnp
sub
mov
xchg
daa
outs
pop
push
mov
dec
jns
jge
xchg
imul
out
inc
and
sub
xchg
retf
loopne
cli
jb
jb
sub
cdq
jae
leave
cld
mov
stos
sbb
out
push
pop
pop
xchg
fsub
fucomp
mov
dec
pusha
jge
(bad)
dec
ja
jbe
test
mov
int3
mov
sub
in
clc
mov
repz
loope
mov
scas
ds
aam
hlt
jns
mov
adc
push
ds
jne
add
cmc
movs
sbb
mov
div
hlt
fs
shl
pop
fild
dec
(bad)
pop
sar
mov
icebp
mov
arpl
add
jbe
icebp
or
jo
outs
lods
(bad)
cs
jmp
repnz
out
push
stos
and
add
xor
rcr
mov
sbb
jae
cmp
adc
jb
xchg
repnz
fs
out
cld
mov
cmc
inc
mov
cmp
int3
out
pop
add
mov
jmp
or
ja
jmp
fild
sahf
aad
pop
mov
sub
cli
jmp
and
xchg
les
in
inc
cmp
sbb
pop
cmp
jb
pop
imul
test
or
sub
inc
pop
sub
repz
aad
scas
pop
inc
pop
or
mov
or
rcr
(bad)
in
into
inc
mov
stos
loop
dec
xchg
xor
dec
scas
in
and
adc
bound
mov
aas
ss
(bad)
out
add
jmp
or
outs
or
inc
adc
fsubr
adc
cmp
jp
daa
call
fsub
mov
(bad)
out
aad
push
out
add
and
loopne
push
add
rol
pop
inc
adc
pop
icebp
ins
aaa
mov
dec
ins
sbb
enter
sub
loopne
mov
int3
test
mov
mov
std
or
(bad)
repz
out
repz
sbb
xor
aas
push
xchg
xchg
sub
cld
fcom
not
les
cmc
push
xor
ret
mov
mov
cmp
cmp
and
loope
sbb
mov
cmp
sub
frstor
jnp
enter
mov
fnsave
xchg
xlat
(bad)
mov
sub
cmp
cdq
mov
movq
push
ds
out
arpl
dec
jmp
daa
cli
pop
hlt
mov
iret
mov
mov
sar
adc
movs
or
cmp
or
or
sub
sbb
sbb
ja
mov
sbb
mov
sahf
xor
or
addr16
jmp
jnp
jae
mov
push
xor
es
scas
sub
sub
gs
push
neg
popa
and
xchg
mov
rcr
or
aad
cmp
xchg
jns
fimul
sbb
and
push
(bad)
sahf
adc
stos
xor
push
inc
je
mov
fsubr
and
lds
enter
lahf
mov
push
pushf
les
dec
in
(bad)
fyl2xp1
add
push
out
mov
inc
(bad)
cmc
xlat
ja
ret
push
scas
movs
sbb
ds
sahf
dec
aaa
ins
mov
push
dec
cdq
es
or
iret
jae
test
cmps
popf
mov
loop
mov
cdq
in
arpl
mov
cmps
pop
adc
cmp
les
out
sub
mov
les
mov
sti
cmp
popf
stos
clc
jl
movs
pop
mov
stos
mov
fidiv
pushf
mov
xor
add
push
xchg
fcomp
mov
and
inc
into
pop
xchg
les
shl
push
adc
fnstcw
cmp
sbb
call
pop
dec
clc
cmc
push
(bad)
mov
cmps
dec
cmp
ret
sbb
pop
shl
(bad)
(bad)
arpl
enter
sub
aad
sbb
xchg
mov
and
xor
push
xor
je
scas
loop
pop
sbb
dec
dec
mov
adc
jp
dec
fdiv
lahf
mul
(bad)
lea
loop
sbb
(bad)
jnp
mov
popa
movs
adc
jmp
stos
outs
dec
fs
cmp
add
or
sbb
movs
dec
out
jg
cs
and
push
push
clc
pop
and
shl
or
adc
daa
ins
pop
pop
xor
xchg
or
or
fimul
stos
test
fisttp
push
add
sar
out
sub
add
pushf
ret
leave
(bad)
(bad)
shl
rcl
add
adc
fistp
push
dec
push
jns
jg
xor
cmp
fsubr
loope
push
ins
bound
fsub
scas
leave
push
icebp
ins
push
mov
jns
sub
es
cmc
ret
push
dec
(bad)
(bad)
(bad)
or
outs
stc
xchg
div
cmp
dec
jns
sbb
pop
xchg
mov
pop
ss
sbb
inc
call
xor
xchg
test
push
and
sub
retf
add
inc
cmp
and
loopne
pcmpeqd
ins
fiadd
je
out
jno
adc
cmc
cli
cmps
scas
ror
push
ror
int
mov
sub
jb
push
cmps
daa
rcr
adc
ret
out
imul
push
mov
shl
xchg
mov
scas
daa
pop
add
jne
pop
jbe
cwde
mov
mov
jmp
int
(bad)
movs
push
xor
mov
out
int
(bad)
cmp
push
cmps
retf
sub
mov
mov
push
sub
jae
jo
loope
sub
lahf
fist
adc
leave
sbb
dec
push
sbb
sbb
inc
and
inc
std
leave
dec
cs
iret
pop
jecxz
lock
mov
cmc
sbb
(bad)
retf
(bad)
(bad)
hlt
stc
or
ins
(bad)
(bad)
cmp
call
sub
das
in
xchg
sub
ss
jmp
jmp
push
fucomi
mov
mov
aaa
and
aaa
clc
call
bnd
loop
test
aas
sar
retf
push
or
test
pop
and
fwait
push
dec
add
cmp
rcl
test
sub
pop
mov
lds
inc
lahf
std
fnstsw
xchg
ret
pushf
inc
popf
repz
xor
cmp
mov
xchg
add
xchg
cmps
push
push
stc
scas
loope
sahf
das
lds
movs
cld
inc
mov
or
mov
xchg
ss
add
ins
add
xor
jmp
dec
jb
outs
mov
into
call
pop
inc
sti
jno
out
daa
ret
inc
jne
sbb
jp
aam
mov
cmp
mov
push
and
xor
push
xlat
inc
cmp
int3
cld
aad
adc
es
in
(bad)
call
out
push
in
sub
mov
inc
stos
ds
jecxz
cmp
pop
imul
std
inc
fwait
mov
push
cmp
(bad)
idiv
xchg
stc
push
lods
sub
jmp
and
sub
sub
push
push
pop
outs
fidiv
test
rcr
mov
pop
pop
pop
mov
jmp
ret
nop
dec
xlat
and
or
push
in
jnp
sti
rcr
enter
rcr
sub
stc
cmp
push
sub
(bad)
into
rol
add
mov
cli
inc
dec
inc
inc
test
sub
sub
adc
addr16
cmc
sub
aad
push
iret
cld
and
(bad)
out
retf
lods
jmp
and
cmp
in
sbb
(bad)
retf
inc
pop
sub
adc
leave
bswap
sub
mov
inc
cmc
push
fsubr
enter
add
or
add
test
(bad)
inc
les
nop
jo
sub
stc
retf
popf
cmp
ds
out
dec
out
in
test
int
fcomip
xor
push
sbb
dec
cmps
cmc
sbb
sub
dec
dec
xor
call
mov
in
or
hlt
sar
daa
shl
and
movs
hlt
hlt
add
or
les
fidivr
dec
sbb
jecxz
hlt
mov
bound
pop
pop
inc
mov
and
cmp
mov
adc
nop
shr
xor
(bad)
ror
call
outs
mov
or
(bad)
daa
jne
cmp
sub
mov
sub
jbe
std
push
div
ds
adc
loopne
enter
frstor
cmp
adc
shr
fwait
nop
cmc
ret
sbb
hlt
pop
dec
mov
xchg
mov
xor
mov
shl
rcl
inc
push
shl
xchg
and
pop
aam
pushf
int3
xchg
clc
mov
lods
dec
jecxz
les
popa
adc
cmps
mov
ja
sbb
and
es
test
dec
loopne
(bad)
fistp
xchg
jge
into
adc
mov
in
add
inc
mov
and
jnp
and
pusha
add
sbb
addr16
mov
aas
inc
fnstsw
imul
jb
sub
jecxz
pop
mov
loopne
cwde
imul
je
xchg
inc
mov
pop
loope
mov
cmps
sub
ins
iret
or
mov
scas
fcom
icebp
inc
or
out
xor
mov
in
inc
clc
adc
int
ror
and
push
loope
dec
and
fnsave
push
dec
sbb
pop
daa
arpl
(bad)
mov
jbe
lock
jb
repz
outs
cmp
test
cmps
inc
ror
cmps
mov
clc
xchg
sbb
ja
mov
xchg
cmp
(bad)
pop
retf
setl
pop
js
jno
int3
pop
sub
inc
dec
hlt
inc
das
mov
sbb
push
in
jo
adc
push
add
jg
push
mov
xchg
mov
mul
cmp
je
(bad)
retf
inc
retf
sbb
push
cld
jg
shl
ret
ror
mov
xchg
pop
mov
mov
dec
lds
arpl
mov
call
jo
xchg
mov
mov
xor
xlat
add
call
dec
xchg
mov
add
(bad)
mov
jae
mov
push
or
jle
sub
lods
dec
cmp
iret
jb
add
mov
jge
mov
ret
and
mov
pop
out
movs
imul
ss
and
sbb
jmp
or
sbb
xor
int
pop
mov
cmp
outs
jb
push
and
jnp
push
inc
cmp
pop
outs
push
aam
xor
stc
mov
sbb
inc
out
mov
popa
add
lds
aaa
add
sbb
test
xor
pushf
scas
mov
dec
pop
call
das
shr
aaa
lods
je
outs
test
aam
pushf
fdiv
cmp
dec
icebp
fistp
xchg
lods
jo
je
loop
inc
mov
adc
mov
retf
or
jns
jo
sub
xchg
mov
mov
int
stos
pop
adc
pop
and
pop
aaa
enter
outs
sbb
adc
stc
dec
fistp
xor
add
icebp
ja
or
pop
repnz
add
pop
inc
cmp
xor
sub
and
mov
lods
loope
xchg
inc
cmp
inc
std
or
cmp
mov
nop
iret
scas
(bad)
js
mov
cld
jge
inc
daa
adc
sub
sar
mov
adc
fsubr
cld
push
movs
mov
out
mov
sbb
test
push
adc
dec
ffreep
sti
or
bound
iret
dec
pop
aas
loope
movs
push
ins
fnsave
push
popf
rcr
movs
outs
data16
aad
xchg
mov
outs
pop
lahf
mov
sub
clc
mov
pusha
outs
movs
(bad)
dec
imul
inc
retf
adc
std
es
out
call
repz
add
stc
dec
movs
(bad)
rcr
mov
push
xor
ror
out
mov
cdq
jmp
mov
enter
jnp
stc
ins
shl
fadd
jmp
in
mov
mov
test
or
rol
mov
imul
pop
and
cmp
test
idiv
add
mov
(bad)
mov
mov
mov
cmps
test
cmc
pop
sbb
cmovnp
mov
out
iret
int3
sar
ins
gs
in
ins
daa
popf
movs
mov
xor
xor
xchg
cdq
pop
loope
jle
inc
retf
xlat
dec
fwait
or
fiadd
out
inc
and
push
je
fidivr
sbb
mov
mov
cmc
repnz
popf
daa
rcl
pusha
mov
mov
mov
push
sbb
push
sub
lds
in
jne
jnp
lods
pop
xor
sti
sbb
cmps
int3
dec
ins
cwde
ds
xchg
mov
stc
lock
cmp
cmc
or
add
das
ins
xchg
loope
jl
and
rcr
inc
hlt
sub
and
dec
xchg
inc
lods
xchg
rcl
repz
mov
push
push
cs
fst
enter
pusha
call
aad
cmps
and
jnp
out
mov
mov
push
aaa
dec
jmp
std
push
xor
jne
enter
ret
outs
ror
(bad)
xchg
retf
fwait
mov
test
cdq
cwde
mov
adc
push
add
stc
pop
aam
xchg
mov
jb
stc
ret
xchg
ds
cmp
dec
loope
jecxz
xchg
mov
cmp
sbb
pop
push
and
mov
mov
aam
xor
mov
sbb
mov
in
jecxz
xor
out
daa
and
jmp
(bad)
movs
mov
cmp
dec
ins
rcr
ret
jge
sar
cmc
retf
sar
shl
jb
movs
add
jb
ins
fimul
(bad)
xor
(bad)
pushf
lds
fistp
dec
dec
xchg
in
cmp
lds
(bad)
jp
test
(bad)
shl
cmp
stos
push
push
das
aam
cs
movs
sahf
ja
adc
jne
or
xchg
xchg
loopne
pop
stc
cli
popf
repnz
ins
and
scas
adc
push
ror
sub
in
clc
or
xchg
mov
dec
mov
mov
aaa
mov
cmc
xor
add
add
pop
xchg
loope
cmp
aad
call
fisubr
mov
int
dec
adc
cmp
xchg
ret
(bad)
sahf
fwait
mov
mov
pop
lahf
push
push
lock
push
stc
in
shr
inc
rcl
push
in
rol
ficom
mov
mov
xchg
and
bound
cmps
ja
clc
jmp
and
cmp
repz
cmp
lods
jle
inc
xchg
lods
mov
aam
test
gs
mov
sbb
and
ret
pushf
retf
pop
jne
sbb
mov
jg
xchg
stos
aaa
je
and
das
mov
das
ins
stos
xor
outs
adc
mov
icebp
mov
std
pop
or
jp
int
xor
(bad)
fcmovnu
xor
test
arpl
scas
gs
gs
mov
dec
xchg
(bad)
cld
aam
xlat
push
sub
add
cmp
in
adc
sahf
enter
xchg
jnp
test
xchg
popw
inc
pop
test
fs
into
jns
aas
dec
push
pop
and
mov
mov
lods
sbb
out
call
popf
mov
into
push
jmp
cmc
or
sub
test
xchg
xor
test
and
lahf
das
enter
sub
gs
int3
inc
scas
aaa
sbb
add
cmc
call
pop
ja
mov
dec
shr
mov
popf
mov
push
sub
lahf
adc
or
imul
add
ret
mov
in
scas
dec
fimul
aam
mov
mov
arpl
mov
cli
mov
push
or
fld
lock
sub
dec
cmp
inc
cmp
imul
shl
dec
imul
mov
push
fdivrp
fimul
ret
mov
fdivr
add
stos
outs
adc
aam
pop
std
div
mov
outs
xchg
mov
mov
mul
fcomp
pop
push
in
sahf
jle
lods
in
xlat
fidivr
pop
dec
aas
popf
mov
pop
cmp
push
in
mov
sbb
jg
sub
test
call
xor
or
sbb
mov
sub
hlt
repz
fsubr
xor
and
popa
pop
sahf
jnp
movs
out
pop
push
xor
dec
cmp
cli
aas
xchg
mov
dec
cs
in
stos
add
arpl
or
movs
outs
mov
sub
xor
xchg
mov
or
add
stos
fldcw
inc
(bad)
or
dec
xor
repnz
leave
or
popa
(bad)
js
add
mov
fnsave
xchg
pop
int
mov
mov
aaa
test
scas
and
int3
nop
mov
inc
add
mov
sub
mov
movs
pop
repz
cmp
test
push
icebp
pop
clc
aam
cmp
xor
test
xor
adc
into
xor
(bad)
push
div
sub
leave
sbb
adc
push
inc
stc
mov
inc
je
pop
stos
mov
ret
cmp
out
rcl
xchg
mov
gs
inc
mov
mov
xchg
mov
jbe
add
fdivr
cmp
fsubr
scas
iret
push
cmp
cli
sahf
or
(bad)
jge
ins
stos
sti
fldenv
test
xor
shl
xor
jecxz
xchg
xchg
leave
fisubr
cmps
add
std
rcl
xlat
ret
mov
push
jl
cdq
xchg
stos
jo
les
pop
mov
fwait
je
cmps
data16
pop
lea
push
lahf
aad
jns
inc
movs
jmp
test
into
sahf
cmps
ja
popf
mov
inc
mov
in
out
push
sar
cmp
ret
lods
and
push
fs
hlt
sub
shl
pop
scas
mov
imul
repnz
add
mov
add
or
jmp
xor
out
or
mov
jns
retf
aas
inc
cmc
loopne
call
cmp
dec
pop
fcompp
mov
mov
retf
(bad)
outs
sbb
mov
iret
pop
test
push
xlat
xchg
mov
jb
inc
or
mov
xchg
(bad)
mov
xchg
mov
mov
ins
cdq
dec
mov
out
aad
push
sbb
add
push
popf
sbb
mul
xchg
and
ins
adc
or
mov
das
mov
xchg
pop
xchg
xchg
or
js
pushf
hlt
mov
or
push
cmp
and
movs
jecxz
jno
aam
cmp
pop
dec
cmps
mov
push
jae
adc
and
xor
es
mov
mov
stc
mov
in
rol
shl
push
mov
inc
push
or
aaa
push
jno
cwde
inc
(bad)
pop
jns
loope
mov
xchg
pop
xchg
push
fist
add
cmp
jno
cmp
(bad)
repz
in
icebp
inc
mov
gs
xchg
out
pop
mov
sti
sbb
movs
hlt
scas
cwde
ret
dec
jae
(bad)
jno
push
xchg
mov
jno
(bad)
fwait
sub
sti
push
fisubr
sub
js
fcmovnbe
inc
out
out
repz
adc
rcr
sti
scas
test
sub
arpl
shl
fld
shl
shr
pop
dec
hlt
push
fwait
adc
cmp
cmp
jae
inc
(bad)
add
mov
stos
into
mov
sub
cmp
cs
mov
jne
pop
jae
mov
or
dec
das
dec
sbb
les
icebp
rcl
das
std
pop
jecxz
ins
popa
(bad)
mov
aam
or
push
(bad)
jae
clc
enter
jle
jnp
lahf
pop
push
cmps
fs
imul
repnz
mov
and
cli
mov
mov
test
inc
cmp
mov
mov
stos
aaa
inc
test
pop
ret
out
stos
loope
rcr
(bad)
fmulp
pop
test
inc
dec
mov
gs
sbb
cmp
jne
jp
xor
xor
sub
pop
std
cdq
jnp
push
rcl
scas
sub
push
jbe
dec
mov
add
fcmovb
jp
loop
test
scas
adc
cmp
sbb
daa
pop
js
pop
and
pop
xchg
out
cdq
mov
sub
push
repz
mov
mov
adc
sub
mov
dec
adc
into
(bad)
out
ins
int
outs
mov
not
add
mov
jle
aad
stos
adc
imul
adc
lods
loopne
js
loope
imul
xchg
mov
mov
xchg
cmp
or
std
xchg
mov
mov
mov
aad
mov
or
lods
int
push
(bad)
rol
ret
out
lahf
in
push
bound
jno
and
and
mov
retf
outs
cld
shl
lods
je
jmp
sub
call
in
adc
sub
add
xor
test
and
jb
and
scas
inc
pop
sar
pusha
mov
push
mov
pop
test
retf
or
mov
int
push
sub
je
leave
gs
jmp
in
rol
pop
adc
push
jne
adc
cmp
into
data16
mov
add
gs
test
mov
aad
mov
pmaxsw
pop
mov
into
arpl
sub
test
aam
push
sbb
mov
push
mov
mov
jo
sbb
adc
dec
cs
or
mov
das
scas
mov
add
xchg
sub
loop
jecxz
inc
mov
(bad)
mov
stc
jno
sub
cmp
or
cmps
retf
xchg
cs
adc
sub
dec
jmp
cmp
pop
cmps
fcomp
nop
xor
aam
outs
add
icebp
xchg
movs
or
push
or
(bad)
dec
dec
or
fistp
jne
add
jb
jno
mov
mov
cmp
push
aaa
jbe
mov
sub
inc
int3
mov
dec
nop
sub
pop
mov
cmc
test
add
cmp
xor
xlat
mov
iret
mov
(bad)
jecxz
outs
ror
repz
and
cmp
lds
fwait
enter
iret
scas
pusha
xor
test
(bad)
std
bound
gs
fcmovbe
sbb
int3
scas
stos
jl
adc
add
push
lods
adc
inc
(bad)
in
sbb
mov
mov
inc
popa
dec
mov
hlt
aam
dec
push
inc
lods
dec
xchg
mov
sbb
add
sub
jmp
mov
call
mov
call
out
retf
shr
mov
sbb
mov
lods
push
pushf
stc
cmp
adc
inc
mov
jno
dec
xor
out
add
sub
ret
ret
pop
or
and
xchg
pop
cmp
clc
inc
mov
pop
xchg
rol
icebp
mov
and
pusha
cmp
jg
fld
sbb
bnd
dec
dec
fadd
int
loope
lock
scas
callw
mov
xchg
cmp
(bad)
rcr
dec
fcom
call
inc
fmul
ja
aaa
lahf
into
rcl
daa
xchg
cmp
pushf
mov
mov
sub
xor
lock
ins
lea
xchg
lock
stos
ror
xchg
in
mov
aad
imul
pop
cmp
push
inc
dec
dec
adc
or
cmp
ss
cmps
jmp
and
pushw
fisub
mov
mov
loop
aaa
ror
adc
std
mov
ins
fisttp
mov
sub
cmp
je
lea
adc
pop
fisub
cwde
fiadd
das
dec
add
sub
mov
mov
out
(bad)
xor
pop
add
mov
or
popa
cmps
rcr
movs
jo
lods
(bad)
aad
lock
mov
add
(bad)
arpl
(bad)
stos
packuswb
and
sti
push
xor
mov
sub
std
js
mov
and
daa
mov
pop
cmp
push
dec
cwde
nop
js
push
push
cmp
jbe
lock
retf
pop
in
mov
test
mov
jmp
je
int
cmp
dec
sbb
mov
sbb
jg
push
xchg
adc
add
loopne
jmp
je
mov
or
das
mov
mov
push
xor
aam
jmp
jg
lock
dec
out
ins
pop
cmp
xchg
xchg
sahf
cld
cmp
stos
mov
mov
ror
(bad)
repnz
push
sbb
jmp
sti
mov
mov
stc
cs
push
outs
imul
mov
pop
mov
clc
das
(bad)
retf
repnz
sub
push
mov
cmp
push
mov
(bad)
outs
inc
xchg
loopne
mov
mov
pop
mov
mov
mov
(bad)
fcomp
retf
movs
mov
and
mov
jb
sahf
stc
hlt
cld
and
cmp
adc
jmp
inc
mov
int3
add
xor
ins
dec
jecxz
test
add
jle
adc
loopne
dec
pop
cmp
adc
push
fwait
mov
popa
push
add
jbe
popa
cmp
cmp
inc
mov
lods
pop
pop
int3
ret
jp
(bad)
out
mov
push
pop
jo
mov
adc
jmp
shl
cli
arpl
in
out
pop
ins
stos
mov
mov
jp
loope
mov
mov
xor
jbe
dec
(bad)
mov
cmc
rol
sbb
adc
xor
jecxz
out
arpl
push
mov
movs
push
stc
cdq
jl
mov
inc
sti
push
ds
stc
stos
sar
xchg
jo
sbb
adc
dec
mov
mov
push
cmp
imul
add
repz
mov
out
stos
add
mov
xor
mov
inc
jmp
fldenv
fwait
adc
cmp
mov
inc
jle
outs
cmp
pop
div
and
arpl
(bad)
sub
jmp
in
cmp
sbb
scas
push
cmps
xchg
and
je
hlt
jbe
call
loopne
dec
dec
sbb
cmp
jl
mov
mov
repnz
call
and
inc
ret
fnstcw
cli
jae
xchg
mov
inc
push
push
adc
mov
mov
xor
xchg
pop
ficomp
clc
add
jle
scas
mov
aad
iret
pop
loopne
dec
loope
sbb
cmp
(bad)
outs
(bad)
ins
cs
int
cmp
or
cdq
pop
xor
gs
xor
(bad)
lock
jl
iret
jno
(bad)
repnz
push
mov
repz
mov
in
push
repnz
(bad)
icebp
xchg
ss
shr
aaa
mov
xlat
sub
jge
leave
enter
std
dec
jns
mov
pop
repnz
dec
mov
mov
xchg
or
mov
mov
mov
je
arpl
test
dec
ds
cmps
test
dec
mov
inc
or
hlt
jmp
push
sti
call
mov
ret
std
loope
adc
cwde
es
jp
dec
xchg
pop
mov
xor
inc
lahf
neg
popa
and
out
xor
test
nop
pusha
outs
sub
and
and
lea
mov
repz
ins
mov
add
fisub
daa
data16
mov
cli
sbb
outs
sub
mov
frstor
mov
pop
adc
rcr
lods
sar
push
jmp
pop
xor
mov
movs
adc
or
fdivp
push
dec
adc
sbb
sbb
jg
into
dec
dec
pop
cmp
mov
fnstsw
movs
popf
daa
adc
sub
popf
test
loopne
addr16
scas
ror
test
out
cmp
sti
in
repz
aad
jmp
out
jge
push
stc
and
sbb
icebp
int3
xor
daa
dec
call
(bad)
mov
mov
adc
mov
sbb
sub
sub
(bad)
in
rcl
loopne
cdq
mov
or
gs
pop
and
mov
xchg
jne
and
add
into
and
xor
push
dec
paddsb
mov
cld
sub
push
pop
and
cmp
outs
retf
mov
cmp
jne
xchg
pop
sbb
fwait
jnp
sti
rol
daa
jmp
xchg
cld
sbb
push
push
or
sahf
push
in
and
push
mov
gs
jno
xchg
mov
retf
xor
dec
inc
adc
sub
les
push
fs
dec
sub
fdiv
mov
cmp
(bad)
call
sub
push
iret
adc
and
mov
xchg
adc
and
cli
push
push
retf
mov
fucomp
push
je
int
and
jae
cmp
mov
xchg
and
mov
aaa
ds
pop
sti
int
mov
ss
mov
inc
push
(bad)
out
and
push
push
push
push
sub
clc
fisttp
xor
sbb
out
frstor
cmp
orps
pop
inc
pop
adc
outs
mov
pop
mov
scas
push
mov
dec
sbb
jmp
lea
inc
sbb
outs
data16
not
repz
call
jp
ror
cli
push
aam
popa
mov
mov
repnz
fwait
(bad)
jp
dec
push
(bad)
lods
cwde
xchg
movs
jne
popf
mov
and
mov
or
in
mov
mov
and
les
xchg
clc
addr16
fwait
clc
jp
add
add
sub
fwait
iret
xchg
and
imul
mov
scas
stos
inc
in
adc
push
add
mov
mov
push
mov
lds
out
cmp
or
cmp
xchg
pop
push
mov
mov
leave
repnz
mov
jmp
mov
repz
call
cmp
adc
ins
pop
dec
(bad)
xchg
xchg
and
and
xlat
idiv
mov
sbb
not
sti
js
shl
cmc
dec
mov
fistp
out
lods
jmp
test
pop
repnz
and
push
arpl
mov
jmp
mov
ret
fs
hlt
push
sub
retf
(bad)
mov
push
fsubr
sub
inc
sbb
stc
cmc
and
ins
loop
rol
push
sub
test
sub
cmp
mov
cli
(bad)
cmc
cmp
pop
dec
popf
mov
pop
outs
scas
repz
loopne
les
mov
icebp
add
nop
and
xchg
jnp
xlat
push
pusha
fmul
push
cdq
pop
(bad)
sbb
fisttp
sub
push
leave
jmp
adc
ins
mov
jmp
scas
sbb
xor
mov
iret
outs
adc
cli
ja
mov
fiadd
mov
clc
cmp
xchg
dec
outs
jo
xor
adc
fcom
add
jecxz
sbb
sub
fwait
adc
outs
adc
mov
icebp
add
sub
scas
jmp
push
fstp
xor
mov
mov
xor
mov
and
and
dec
pop
mov
stc
jns
dec
fstp
ror
add
outs
lea
mov
scas
mov
hlt
inc
cli
outs
push
lea
(bad)
cmps
fucompp
push
xchg
lods
ins
mov
movs
xchg
out
cmp
sti
(bad)
cmp
adc
inc
cmc
(bad)
out
mov
xor
rol
int3
xor
cli
sub
or
mov
mov
push
icebp
inc
mov
les
ja
jp
ja
inc
jmp
lds
mov
or
retf
mov
aas
pop
jbe
call
jnp
cmp
push
adc
push
cmps
imul
fcomp
sbb
inc
add
rcr
inc
ins
mov
or
sti
dec
gs
(bad)
jns
pop
cs
xor
or
add
push
xlat
and
test
add
hlt
imul
test
ins
mov
xchg
mov
mov
fidivr
xchg
adc
pop
mov
js
js
mov
popf
add
sbb
ins
mov
xor
cmps
(bad)
je
and
mov
ins
mov
aam
push
cmp
inc
fwait
cmp
out
ja
mov
mov
inc
jg
aam
xchg
push
dec
push
cmp
test
les
cmps
inc
data16
fiadd
rcl
add
cs
jne
mov
adc
push
fidivr
mov
push
ret
iret
gs
ja
ja
call
push
call
xchg
cdq
fidivr
ja
jle
sahf
adc
jne
arpl
pusha
jmp
dec
cmp
ja
xchg
push
cmp
shl
xor
retf
jbe
jmp
sbb
mov
stc
or
dec
movs
add
movs
pop
loope
lds
push
dec
(bad)
outs
push
mov
(bad)
int3
jne
dec
les
xchg
cmp
xor
or
inc
push
test
and
imul
pop
lds
mov
das
ds
idiv
jg
and
ss
setg
movs
loope
xchg
iret
movs
mov
xlat
stc
xchg
push
jmp
mov
jo
jo
sub
adc
shl
fdivrp
pop
dec
mov
das
inc
call
cmp
inc
adc
xchg
retf
das
out
xchg
jnp
cwde
bound
sar
xor
dec
and
mov
mov
rcl
dec
in
and
movs
movs
and
inc
(bad)
test
aad
aam
jecxz
lods
adc
mov
pop
scas
mov
and
dec
xlat
xchg
(bad)
pop
mov
scas
neg
movs
mov
je
in
pusha
popf
sbb
in
push
scas
jge
test
jge
mov
test
cli
xor
inc
xchg
mov
jl
mov
pop
xlat
mov
mov
dec
xlat
into
nop
jo
out
dec
and
or
lods
hlt
xchg
call
dec
inc
mov
fstp
jo
pop
test
jmp
out
pop
add
xchg
(bad)
repnz
lds
neg
lds
popf
cmp
jae
sub
out
das
bound
push
push
cli
mov
push
into
repnz
test
sbb
push
pusha
push
xchg
mov
push
push
mov
mov
push
lods
cmp
push
gs
xor
ins
xchg
imul
cmc
jg
mov
jle
jp
xchg
pushf
sbb
test
test
inc
in
scas
pop
shl
inc
cmp
jo
cld
add
mov
rcr
add
fucomp
and
mov
shl
push
inc
fisub
push
std
and
xchg
adc
pop
shl
pop
or
call
dec
mov
iret
retf
pop
add
repnz
sbb
xor
fstp
lock
pop
jg
cmp
cli
inc
jl
adc
mov
lahf
mul
pop
pop
inc
retf
push
fld
fistp
cmc
rcl
jbe
lods
stc
adc
les
xor
push
jb
fstp
cmp
cwde
jg
push
push
lods
fnstsw
test
scas
leave
add
std
pop
(bad)
aam
xlat
out
ins
stc
dec
hlt
shl
cmps
or
push
shl
push
xor
xor
pop
xor
mov
mov
xchg
or
jbe
cmc
xchg
or
(bad)
sahf
shl
call
pop
mov
(bad)
xchg
jmp
xor
mov
es
lock
cmp
cmps
fisttp
arpl
inc
dec
or
mov
sub
xor
push
sub
leave
adc
loop
mul
push
jmp
push
mov
repnz
adc
data16
jne
mov
icebp
(bad)
shl
jmp
pushf
cmps
lock
mov
cmp
pop
pop
and
ins
mov
ds
cdq
mov
stos
cli
das
add
je
fcomp
daa
ja
sub
mov
jecxz
test
stc
fld
frstor
mov
sbb
inc
pop
dec
push
mov
sub
out
cmp
adc
inc
(bad)
fisub
leave
xor
pop
movs
sub
sub
mov
or
fisttp
jns
inc
int3
fwait
shr
pop
lods
in
loope
es
and
pop
call
pop
test
call
test
test
retf
sbb
ret
mov
mov
mov
xchg
ret
or
ret
retf
iret
mov
sahf
jne
imul
lea
add
ja
xor
imul
push
inc
adc
and
outs
mov
ss
jns
push
pop
out
loopne
mov
pushf
mov
loopne
imul
loopne
add
sbb
iret
(bad)
push
jbe
pop
inc
sub
fcomp
aaa
add
test
lds
mov
lods
sbb
sti
mov
and
mov
cmp
jmp
mov
dec
cdq
dec
pop
(bad)
push
dec
outs
sbb
jge
jle
fld
xor
ins
sub
hlt
push
loopne
push
icebp
sub
sub
inc
mov
xor
cs
out
(bad)
fs
or
pop
sahf
test
fmul
jbe
pop
inc
cld
adc
cmp
stos
push
mov
push
pop
clc
or
mov
adc
sub
mov
cmp
add
sbb
imul
ja
mov
jl
out
es
mov
loopne
cwde
and
(bad)
lahf
lock
test
mov
mov
dec
bnd
(bad)
in
inc
loope
xchg
jnp
addr16
in
nop
mov
fcom
loopne
les
cmps
mov
inc
cmc
clc
pop
sbb
es
push
mov
xor
adc
mov
fwait
shl
fs
imul
mov
xchg
int
test
xchg
or
sbb
pop
xchg
jno
rcl
pop
mov
sub
cdq
adc
mov
inc
push
cmp
gs
shl
sbb
xchg
(bad)
repz
mov
mov
push
in
or
inc
imul
mov
push
ret
lods
mov
(bad)
not
div
jae
std
mov
outs
call
jbe
cmc
pop
or
or
or
sub
add
xchg
mov
or
push
js
loopne
inc
ret
cwde
pop
jge
sbb
movs
fiadd
stc
data16
std
dec
into
test
scas
push
into
xchg
mov
jbe
jl
sbb
fcom
leave
(bad)
out
mov
sbb
cmp
setae
mov
js
inc
mov
aaa
daa
jmp
lods
jecxz
mov
cmp
sub
inc
xlat
xchg
loopne
push
mov
or
mov
sub
mov
mov
mov
fiadd
arpl
and
ins
retf
popf
or
xchg
add
in
xor
pop
inc
xchg
ficom
ja
pop
inc
mov
outs
scas
sub
sub
dec
fdivr
imul
in
add
fnstenv
adc
sub
push
popf
outs
je
add
ja
ret
pop
rcr
lahf
not
movs
mov
pop
aam
leave
lods
fs
adc
fstp
(bad)
jmp
mov
sbb
xor
push
push
sub
nop
nop
push
sub
jp
js
sbb
call
and
jmp
clc
popa
leave
cmc
das
sub
xor
je
pop
fcmove
and
mov
fs
(bad)
iret
jnp
ins
pusha
addr16
movs
shr
call
cmc
rcl
cmp
ins
dec
bound
mov
gs
pop
mov
xor
in
in
imul
push
dec
rcr
push
mov
icebp
mov
xor
jbe
jmp
mov
stc
mov
push
test
(bad)
(bad)
leave
push
(bad)
pop
pop
jp
adc
mov
jnp
inc
xchg
inc
jnp
and
pop
sar
adc
jl
push
cmp
cmc
mov
in
cmps
cmp
mov
mov
lock
addr16
sahf
xor
int3
lahf
aam
xchg
push
stos
imul
dec
lock
xchg
addr16
cli
sub
mov
push
and
and
xchg
lods
pop
jl
add
xchg
test
test
lea
retf
outs
pop
in
fild
fistp
lea
pop
jnp
xor
cdq
mov
xchg
jg
xchg
ret
std
pop
xor
inc
repnz
div
(bad)
cmc
jns
inc
add
int3
pop
mov
mov
iret
fistp
(bad)
jle
je
xor
in
xlat
xor
cmp
mov
ret
ds
ds
out
xchg
inc
(bad)
pop
popa
mov
leave
mov
fisub
xchg
stc
add
adc
pop
clc
mov
push
mov
jp
dec
and
mov
mov
hlt
icebp
sub
pop
mov
and
fist
rol
dec
and
cmps
push
imul
test
xchg
clc
call
(bad)
inc
add
jp
clc
xchg
movs
add
inc
mov
stc
sub
cld
pop
cwde
push
outs
in
out
(bad)
xlat
pop
cwde
or
dec
xor
push
fcom
popa
ds
and
inc
xor
mov
out
loope
cdq
jne
fmul
adc
gs
cmp
out
cmp
xchg
cld
mov
out
je
mov
inc
jbe
cmp
(bad)
cwde
scas
dec
mov
ret
out
mov
inc
(bad)
pop
test
aam
mov
pop
jno
dec
or
lahf
pop
aas
sub
lds
into
push
in
pushf
test
push
mov
push
retf
adc
test
in
fbstp
adc
jo
push
mov
inc
adc
jg
lods
(bad)
cmps
jbe
and
rcl
shl
xchg
dec
dec
jle
mov
mov
out
(bad)
mov
out
fild
icebp
xor
mov
je
jg
pop
push
pop
cmp
in
lock
mov
cmp
xor
sbb
dec
or
sbb
push
pop
xor
js
rcr
dec
in
or
es
iret
outs
add
xlat
out
into
or
retf
in
dec
inc
shl
cwde
add
retf
sbb
inc
push
jo
jns
std
dec
stos
inc
ss
mov
mov
push
lds
aam
das
pop
dec
push
sub
cmp
repnz
push
pusha
sub
dec
ins
js
js
sub
push
ins
jno
fstp
push
pop
pop
rcr
mov
pop
xchg
pop
add
ins
aaa
shr
dec
mov
(bad)
xlat
pop
stc
loope
inc
push
push
lods
inc
clc
cdq
add
movs
xchg
rol
xchg
dec
fimul
icebp
fldenv
pop
(bad)
std
mov
lods
test
pop
inc
dec
sub
imul
cmps
nop
add
cmp
sar
inc
pop
pop
out
mov
mov
call
pop
in
lds
xor
push
fdivr
ret
mov
cli
and
es
inc
mov
ins
add
clc
xlat
mov
sbb
lock
(bad)
xlat
adc
stc
push
out
push
xchg
push
popf
mov
inc
pop
push
mov
add
and
pop
fcmovne
xchg
push
mov
pop
mov
push
mov
inc
aam
jo
and
icebp
xor
inc
loope
pop
push
inc
adc
mov
push
cmp
ret
xchg
adc
(bad)
sbb
lods
jo
fimul
mov
ins
adc
cmp
jne
xchg
cmp
pushf
mov
jle
jo
pop
loope
(bad)
fisub
dec
inc
mov
icebp
xchg
cmp
repnz
pop
shl
mov
and
or
retf
test
cmp
jmp
jae
aas
mov
adc
retf
add
mov
sub
(bad)
les
cs
div
inc
mov
xchg
cs
dec
daa
outs
sbb
(bad)
jns
jbe
and
sbb
mov
jbe
add
sub
add
in
sub
adc
mov
push
sti
ret
int3
inc
idiv
loope
sbb
jmp
dec
iret
das
mov
xor
rcl
and
in
retf
push
xchg
sti
hlt
call
rcl
xchg
loope
sub
dec
imul
retw
popf
or
xchg
ficom
mov
jp
test
pop
pop
xchg
push
push
sub
ficomp
inc
adc
sahf
sti
mov
call
dec
add
jae
or
in
cs
jg
sbb
add
test
jmp
pop
mov
jmp
push
adc
outs
sub
push
mov
dec
jmp
mov
xchg
mov
and
fnstenv
sar
inc
clc
mov
xor
xchg
rol
dec
and
pushf
je
cdq
dec
pop
add
mov
loope
std
(bad)
mov
mov
push
and
mov
mov
inc
das
pop
scas
sub
inc
(bad)
adc
(bad)
jmp
mov
jmp
in
jmp
ds
xchg
lahf
mov
xchg
rcl
cli
sbb
push
adc
jmp
sub
mov
repz
in
pop
inc
mov
popa
bound
add
js
push
push
jb
test
loopne
xchg
pop
jmp
mov
repnz
xchg
fist
fbld
cmp
lock
add
icebp
js
mov
adc
pop
div
test
outs
mov
sub
sti
mov
std
movs
mov
pusha
xchg
lock
(bad)
lock
or
push
stos
(bad)
repnz
cmp
mov
ins
cmp
and
pop
int
test
lods
jbe
mov
repnz
sub
shl
fwait
mov
mov
mov
int3
loop
(bad)
pop
ret
aam
das
daa
das
int
out
mov
mov
mov
mov
xor
jp
lds
sbb
int3
mov
mov
gs
or
jae
and
dec
sahf
mov
dec
addr16
clc
xor
test
call
enter
push
push
outs
ffreep
add
inc
xchg
add
add
push
mov
repz
push
inc
sar
sbb
xchg
popa
movs
pop
push
lds
in
cmp
jns
mov
call
jnp
xor
retf
mov
int3
iret
int
mov
jecxz
and
xor
aaa
scas
ret
mov
mov
nop
push
adc
movs
std
sub
bound
xor
aad
xor
ficomp
fs
dec
shr
and
sub
push
outs
bswap
jns
xchg
mov
xchg
push
out
retf
jb
call
movs
mov
pushf
xor
sbb
hlt
rcl
inc
(bad)
aaa
push
leave
lea
add
sub
dec
jnp
jmp
pop
mov
mov
outs
(bad)
cmp
inc
aam
jmp
xchg
cmp
std
push
imul
jg
inc
scas
test
ins
pop
repnz
pop
xchg
jmp
push
or
adc
adc
cmp
inc
jbe
sbb
rcl
xor
bound
in
fild
or
(bad)
arpl
jns
xchg
add
mov
(bad)
sar
test
sahf
aaa
sub
cmp
jo
mov
xchg
stc
in
add
cmps
(bad)
aaa
or
push
mov
jo
outs
dec
(bad)
xchg
sub
into
adc
aad
sbb
repnz
sub
sub
test
cmps
jle
mov
mov
xchg
pcmpeqw
je
jns
xlat
arpl
and
popf
add
and
shl
pushf
jae
push
jp
out
jmp
add
adc
test
inc
outs
repz
leave
(bad)
out
dec
xor
aad
lahf
adc
jne
int3
add
and
mov
inc
mov
fdivr
pusha
mov
push
dec
scas
push
xor
loopne
lea
mov
lods
rcl
cwde
jge
aas
hlt
(bad)
pop
jns
stos
xchg
out
pop
cmp
add
or
sti
jg
ja
mov
out
repnz
mov
adc
jg
outs
les
leave
mov
fwait
xor
adc
inc
jl
stc
adc
mov
shl
stos
mov
add
pop
outs
xchg
mov
pop
push
push
lods
pop
in
sub
xor
idiv
ja
add
mov
es
dec
mov
jl
mov
ins
fadd
inc
jnp
lds
fsub
mul
adc
cwde
test
inc
mov
hlt
or
test
mov
add
and
inc
push
rol
leave
cwde
ins
out
adc
jbe
mov
cmc
xchg
sub
lds
loope
loop
dec
xor
clc
shl
bound
(bad)
fldcw
inc
loopne
pop
(bad)
jne
sbb
push
sbb
aaa
mov
cli
ja
out
(bad)
leave
push
pop
arpl
call
pop
iret
push
jbe
adc
out
(bad)
sbb
jno
jl
(bad)
fs
cmc
sub
cdq
or
pushf
mov
inc
sbb
out
out
mov
test
je
clc
xchg
sub
xchg
jmp
push
jns
leave
(bad)
xor
dec
mov
fucom
inc
clc
mov
push
leave
adc
fiadd
add
sub
or
test
test
sbb
ror
mov
mov
hlt
cmp
retf
and
cmp
mov
rdmsr
sar
fisttp
adc
out
mov
mov
repz
imul
cmp
sub
loope
ins
xor
dec
pushf
xchg
movs
loopne
movs
mov
cmp
movs
pop
sbb
call
pop
cmp
int
xchg
sub
pop
xor
sub
mov
mov
dec
pop
sub
cmp
hlt
mov
stc
fbstp
sahf
cmp
ja
je
pop
inc
or
ss
pushf
cmp
stos
les
jbe
add
push
pop
adc
adc
loopne
(bad)
pop
outs
stc
xchg
cmps
mov
xor
push
mov
sub
cmp
push
pop
fadd
sbb
push
mov
inc
xchg
fpatan
mov
mov
call
pop
mov
pop
loopne
out
sbb
sub
int
pop
dec
inc
ss
or
fsubr
jmp
dec
stc
inc
jno
push
arpl
adc
sub
jmp
shl
jns
outs
ja
inc
pop
das
hlt
jo
enter
gs
pop
in
jmp
iret
jmp
xchg
repz
outs
fucomip
push
mov
xor
sar
sbb
int3
cmp
xchg
jg
xor
push
adc
dec
ss
cmp
sar
sub
sub
pop
mov
xchg
cld
rol
arpl
add
jb
mov
or
push
mov
mov
pop
push
into
ret
shr
enter
fld
push
test
sub
jmp
loop
and
int3
dec
sub
inc
push
sbb
jne
pop
sub
pop
add
retf
into
xchg
loope
fcomp
pop
push
popf
fcom
pop
aad
jns
jecxz
loopne
mov
into
inc
aas
and
adc
xor
or
cmps
sbb
adc
jmp
add
cdq
les
call
dec
push
push
push
jmp
push
add
shl
jge
cmc
icebp
push
jmp
aad
pop
inc
jle
mov
mov
jmp
leave
pusha
inc
mov
popa
mov
xchg
lock
shl
data16
cli
mov
shl
por
retf
repz
mov
lods
rcr
sti
cdq
(bad)
and
xchg
ret
pop
icebp
xlat
aaa
iret
xor
ror
cwde
push
mov
(bad)
(bad)
inc
mov
inc
call
ja
imul
dec
(bad)
aas
adc
mov
sub
dec
hlt
hlt
jae
xchg
daa
sbb
icebp
mov
fsubr
cmp
stos
fst
ret
adc
data16
cmp
mov
inc
nop
(bad)
(bad)
fist
push
addr16
mov
into
out
shl
mov
repnz
or
push
jmp
sahf
sti
mov
in
fdiv
cmp
jns
pusha
fwait
imul
js
lea
cdq
pop
out
inc
xor
adc
aad
xor
push
(bad)
sbb
xor
or
int3
cmp
cdq
and
sub
mov
shl
pop
leave
ds
pushf
pushf
pop
test
loope
ins
sub
jnp
test
fisub
push
retf
lahf
xchg
in
mov
stc
pop
xchg
jg
idiv
cli
les
rol
pop
jl
lods
pop
test
cmps
push
xchg
imul
adc
cmps
push
daa
sub
gs
add
adc
pop
ss
or
int
(bad)
dec
pop
push
imul
dec
pop
(bad)
xor
stos
inc
pushf
jmp
pop
out
adc
ret
mov
xchg
inc
aaa
mov
xor
pusha
stc
jmp
and
inc
dec
inc
jle
pusha
(bad)
ss
out
sbb
mov
(bad)
loop
fdiv
mov
cmp
cld
jecxz
loop
es
cmp
sub
es
and
mov
and
daa
xchg
inc
and
shl
repnz
fnstcw
or
or
cmps
movs
in
div
lea
jo
dec
jb
push
push
mov
mov
int3
inc
and
fstp
mov
push
ffreep
inc
gs
data16
pop
or
xor
mov
into
inc
cmp
out
pop
imul
outs
stos
and
ret
addr16
jmp
not
or
retf
imul
cmps
or
pop
out
xor
sbb
out
or
cs
movs
jae
and
loope
fstp
mov
push
shl
dec
les
dec
xor
or
jge
dec
out
js
mov
xchg
cmp
jmp
jecxz
adc
aad
mov
xor
mov
test
sar
in
call
pop
jmp
call
xor
jmp
dec
inc
addr16
jbe
or
sub
jbe
out
xchg
ins
cmp
xor
fucomp
cmps
inc
or
sbb
int
or
(bad)
adc
mov
xor
sbb
imul
push
scas
mov
gs
jnp
fiadd
xchg
xor
aad
scas
shr
push
lea
push
sahf
push
sbb
mov
push
push
and
xor
gs
sub
mov
je
push
push
jecxz
stc
cmp
rol
in
imul
add
and
sub
icebp
das
(bad)
mov
pop
ror
xchg
je
repz
push
xlat
xchg
ins
cld
fcomp
or
push
(bad)
and
das
jne
(bad)
sbb
mov
sbb
cmp
inc
pop
push
sub
(bad)
pop
shl
inc
daa
clc
push
mov
mov
(bad)
lea
add
icebp
bound
add
jg
(bad)
and
dec
scas
lds
push
pop
scas
addr16
jne
xchg
int
movs
fistp
push
aas
test
push
xchg
mov
push
inc
xchg
jae
mov
and
dec
cmp
dec
push
test
xor
pop
cwde
pop
xchg
ins
adc
fistp
pop
dec
mov
cli
pop
sbb
scas
xchg
scas
call
mov
mov
inc
xchg
cmc
rcr
rcr
mov
mov
stos
jecxz
cwde
ds
(bad)
pop
mov
cmp
mov
push
out
jmp
(bad)
movs
std
mov
fist
aad
pop
sub
(bad)
jb
xchg
lods
dec
test
outs
mov
sbb
or
sahf
sbb
ds
add
mov
adc
and
pop
xor
dec
movs
sub
push
push
mov
adc
pushf
repz
dec
cmp
xchg
mov
mov
enter
cmp
cdq
add
push
inc
or
mov
fidivr
xor
and
xlat
ins
add
add
dec
push
rol
xor
aas
repz
test
pushf
push
or
(bad)
dec
mov
xor
ror
adc
pop
xchg
sub
outs
xor
nop
jb
pop
aas
jns
mov
imul
push
ins
adc
jl
inc
xchg
cmp
sub
and
mov
pop
cmc
inc
or
std
inc
cli
mov
push
test
cmp
or
xchg
and
retf
(bad)
mov
daa
test
out
mov
loopne
sbb
repnz
arpl
and
call
gs
jae
scas
cmp
or
in
jb
clc
dec
inc
cmps
fdiv
pop
arpl
inc
daa
jge
inc
call
sbb
shr
sub
add
xor
pinsrw
sbb
call
add
sub
addr16
out
add
push
xchg
cld
les
xchg
enter
xchg
out
push
dec
repz
add
test
scas
mov
mov
inc
xor
cwde
mov
inc
std
mov
fmul
stos
sub
js
sbb
inc
lds
test
push
cmps
and
jne
int
sub
fimul
adc
jns
ds
inc
aam
adc
cli
jb
adc
and
sbb
fisttp
cs
ret
and
add
pop
int
neg
pusha
mov
movs
or
mov
and
ficomp
push
nop
dec
sar
out
xchg
mov
sbb
loop
mov
mov
pop
xor
repnz
mov
popf
call
pushf
rcr
or
cmp
xor
loope
retf
repz
cld
ins
je
ss
add
xor
popf
or
pop
push
jns
imul
leave
test
xlat
test
push
xchg
(bad)
xlat
jl
test
mov
leave
inc
jnp
stos
out
dec
and
mov
fxam
in
loop
lock
add
or
stos
xor
mov
lahf
leave
imul
shr
fisubr
adc
push
das
push
sub
jb
jbe
inc
xchg
push
addr16
fadd
lahf
movs
aas
loope
dec
mov
mov
or
in
jle
xlat
into
out
cwde
xlat
or
aas
out
push
push
pop
js
dec
rol
sub
es
das
jle
call
ds
popf
lock
int3
jge
pop
inc
stc
mov
sar
sbb
call
push
shl
jg
int
or
cli
std
mov
mov
je
dec
or
(bad)
fisttp
mov
jnp
shl
enter
retf
in
dec
or
imul
fist
or
mov
cmc
test
mov
test
pop
lods
add
hlt
rcr
shl
adc
dec
push
sub
retf
sbb
popf
test
mov
mov
sti
in
fwait
cmp
jg
mov
xchg
jne
cmp
ds
cmp
xchg
dec
push
call
(bad)
in
clc
mov
test
lahf
scas
test
fcomp
push
jmp
sar
xor
jecxz
movs
dec
xlat
or
pop
clc
les
inc
loope
add
push
sbb
clc
xor
cmp
out
popf
popf
scas
imul
int
sub
mov
cmps
and
(bad)
mov
sub
pop
into
dec
or
dec
pop
imul
inc
sub
or
mov
sbb
sub
fisttp
popa
or
pop
sub
xchg
fsubr
xor
retf
outs
outs
jecxz
fwait
psubb
std
jmp
xor
shl
xchg
test
rcr
cmp
mov
fisubr
add
cmp
dec
adc
jmp
pop
sub
cwde
jo
xchg
add
(bad)
aaa
loope
push
cmp
xchg
dec
push
mov
xchg
fdivr
push
inc
icebp
jbe
xor
ins
stc
pop
pop
sub
in
sub
movs
xor
mov
cwde
loopne
push
popa
fwait
jne
adc
push
pop
mov
daa
xchg
adc
adc
adc
push
popf
loop
xchg
shl
push
mov
mov
xor
movs
test
(bad)
xchg
lods
jge
jle
push
loop
loopne
fist
jb
cmp
mov
mov
out
jecxz
scas
xchg
xor
in
cli
pop
popf
sub
xchg
adc
mov
jno
lods
add
clc
and
xchg
lods
ror
pop
aas
mov
aam
cmp
push
push
popa
dec
clc
mov
jmp
push
dec
popf
xchg
xchg
and
dec
fs
xchg
fistp
dec
gs
cmp
dec
out
pop
jg
(bad)
and
dec
sbb
mov
mov
test
shr
dec
out
sbb
mov
mov
(bad)
jbe
arpl
leave
dec
stos
dec
in
enter
xchg
out
mov
cmc
mov
loop
sub
add
dec
cmp
pop
mov
loop
arpl
jns
fld
retf
cmp
mov
fsub
or
ret
jns
xor
sahf
mov
cwde
out
adc
std
mov
or
sub
xchg
sbb
(bad)
or
mov
mov
xchg
sbb
aad
cmp
fucomip
jp
fild
xchg
fs
sbb
mov
cmp
pop
or
xchg
adc
jmp
leave
sbb
sub
imul
(bad)
aad
pop
mov
pop
and
push
mov
pop
xor
sti
pop
add
add
xchg
xchg
jns
into
pop
mov
outs
loop
scas
mov
xchg
adc
test
add
sub
jbe
outs
add
icebp
dec
mov
cmp
cmp
jecxz
jae
stos
in
int
movs
push
fcom
sub
scas
test
in
or
fcom
lods
imul
rol
mov
xchg
jnp
pop
mov
jp
dec
ficom
js
cmp
and
dec
into
xchg
jecxz
xchg
cmp
cmps
repz
mov
xchg
xor
jae
dec
pop
mov
stc
sti
ds
mov
or
(bad)
das
jl
xor
mov
inc
les
dec
mov
push
aad
mov
cmp
retf
shl
mov
mov
cmp
xchg
rcl
aam
rcl
ss
popa
scas
dec
ret
lds
or
clc
lods
in
ror
xor
(bad)
pop
movs
rcl
cmps
sub
nop
stos
mov
jg
call
add
rcl
iret
jecxz
ins
mov
test
inc
ror
mov
lock
mov
pop
mov
mov
push
push
retf
add
and
push
cmp
pop
sti
es
adc
scas
(bad)
out
daa
adc
lds
add
repnz
push
jmp
and
cmp
sub
sbb
mov
pop
xchg
cmp
call
lahf
test
and
push
mov
jp
pop
mov
mov
xor
xchg
in
pop
call
clc
popf
ret
sub
mov
mov
enter
ror
ret
shl
adc
jl
out
test
jnp
in
adc
mov
lock
in
push
mov
push
call
test
xchg
inc
inc
mov
jecxz
les
aaa
mov
inc
mov
jns
xor
push
push
jne
inc
add
inc
mov
aad
clc
mov
aam
and
and
les
fdivrp
jo
jmp
and
enter
cmp
ins
mov
sbb
es
mov
cmp
mov
pop
pop
xchg
outs
loop
xchg
sub
jbe
pop
call
scas
mov
lods
sbb
es
lds
(bad)
sar
das
movs
cmp
xchg
xor
mov
lahf
dec
mov
cmp
dec
out
cmc
rcl
or
push
mov
or
push
scas
fsub
out
mov
and
xchg
or
dec
movs
sub
and
mov
adc
movs
sub
adc
(bad)
mov
std
pop
mov
(bad)
lds
dec
xchg
addr16
sahf
jo
and
icebp
cmp
jecxz
adc
mov
lahf
xlat
adc
xchg
cmp
daa
jno
inc
push
out
or
mov
push
daa
test
jl
arpl
xor
jl
dec
pop
xor
fidiv
xchg
scas
aad
int
cmp
aad
mov
adc
std
add
mov
aam
cmp
xlat
mov
xchg
mov
sbb
or
or
icebp
loopne
pop
inc
xor
loop
test
(bad)
sub
mov
scas
loopne
jne
sahf
aam
pop
or
and
cli
cmc
je
iret
outs
add
mov
xlat
ins
loopne
pop
adc
dec
inc
sbb
jmp
add
jae
inc
cmp
and
sbb
outs
fist
leave
sbb
xor
xor
jae
xchg
or
arpl
inc
adc
mov
sbb
out
jne
leave
push
mov
mov
(bad)
xchg
(bad)
mov
xchg
arpl
mov
xor
pop
data16
iret
sbb
jge
fldcw
mov
mov
std
jecxz
clc
mov
xor
in
(bad)
jmp
outs
les
mov
test
nop
arpl
xor
cmc
mov
movs
pop
std
ja
push
push
mov
xchg
hlt
xor
xor
pop
inc
addr16
cmp
inc
push
adc
test
js
dec
sub
adc
or
bound
sub
aad
mov
xor
or
lea
clc
(bad)
adc
fmul
mov
mov
dec
outs
int3
mov
and
push
mov
cmp
cmp
xchg
daa
hlt
sub
push
cmp
loope
or
mov
aaa
mov
xchg
pop
adc
loopne
xchg
fsub
sahf
sbb
fcom
sbb
sub
enter
lock
cmp
mov
leave
and
inc
sbb
adc
push
cmp
ret
(bad)
and
fwait
js
cli
ins
cmp
setnp
xchg
mov
mov
std
int3
push
call
cmc
mov
addr16
xchg
sbb
mov
call
ds
dec
ret
repz
inc
mov
clc
mov
movs
out
call
xchg
sbb
adc
xchg
cwde
test
adc
sub
or
cmp
in
pminub
inc
xor
jecxz
pop
jbe
imul
and
dec
lock
cmp
out
stos
push
sub
adc
push
or
aad
push
out
iret
or
jmp
outs
and
push
repz
inc
(bad)
xlat
push
outs
push
leave
out
fimul
push
cmp
jle
push
stc
out
movs
mov
jmp
ret
std
out
test
or
nop
adc
js
adc
jmp
(bad)
je
adc
stos
mov
inc
mov
sti
iret
fsub
mov
(bad)
xchg
enter
lahf
pusha
add
pop
mov
adc
(bad)
bound
jl
into
iret
(bad)
fnstcw
loope
cmp
out
jp
dec
xor
add
in
pop
cmp
test
sti
xchg
jp
jle
sbb
sub
dec
dec
xor
mov
cli
inc
imul
push
arpl
dec
mov
mov
xor
or
mov
push
nop
je
aad
pop
jne
(bad)
jne
dec
cli
sbb
ins
pop
cmp
sub
pop
xor
clc
rol
sbb
pop
push
xchg
sub
cld
jge
pop
outs
stos
inc
dec
shl
xor
jle
or
out
inc
dec
xchg
int
shl
pop
ror
mov
sahf
fild
sub
pop
xchg
xchg
pop
ret
cld
cs
and
mov
dec
mov
rol
adc
pushf
jl
xchg
and
rol
cmp
repz
push
loopne
pop
mov
mov
xchg
mov
pop
clc
sahf
jecxz
push
in
data16
int3
push
daa
mov
cmp
in
sbb
into
idiv
cmc
shl
jnp
dec
push
pop
scas
and
ja
imul
stos
or
add
xchg
ins
sub
leave
aam
add
push
jb
xchg
sub
mov
into
repz
push
fwait
add
and
pop
xlat
shl
cmc
push
cmc
and
adc
push
cmp
sub
xchg
out
xor
shl
sub
int
stos
xor
repz
xlat
leave
das
mov
(bad)
enter
hlt
int
push
mov
test
xchg
frstor
push
fldenv
inc
int3
fmul
and
cdq
bnd
and
arpl
jns
jmp
inc
add
sbb
cmps
repz
cmps
jg
adc
pop
xchg
int3
or
jbe
xor
push
and
aaa
jno
jb
add
out
fstp
mov
lds
lahf
aas
fcom
pop
or
adc
or
lahf
mov
ret
std
jmp
dec
test
cmc
(bad)
js
bound
lds
push
and
imul
jecxz
add
mov
mov
xor
sti
sbb
xchg
mov
dec
in
push
mov
add
xor
mov
xor
lds
inc
xchg
(bad)
out
repz
sub
dec
sub
enter
test
pop
call
aas
not
imul
pop
jmp
xchg
jb
mov
xchg
cs
loope
jno
lea
push
add
pop
jge
in
pop
sub
inc
loop
xchg
push
sahf
mov
dec
ss
mov
fs
shl
jns
sti
mov
dec
dec
das
sub
cld
inc
idiv
setp
mov
loopne
sar
test
loopne
jmp
mov
nop
jb
daa
fmul
(bad)
jnp
xchg
aad
mov
std
(bad)
shr
ss
xor
clc
push
fild
sub
push
nop
in
aad
int
out
sbb
adc
dec
xchg
daa
lods
jge
ja
repnz
in
xor
ret
dec
nop/reserved
sti
fs
test
pushf
push
jae
push
int3
sahf
or
xchg
jle
out
dec
cld
pop
call
int
in
or
stos
cmc
out
add
enter
fstp
xor
retf
inc
jl
sbb
repz
add
scas
xor
popa
inc
sub
cmc
pop
adc
mov
sub
ret
mov
push
imul
mov
add
dec
call
(bad)
shr
cs
sub
mov
sub
aam
mov
sbb
fnstsw
addr16
inc
gs
rol
mov
outs
(bad)
push
push
mov
inc
(bad)
call
ins
mov
jg
ja
pop
inc
je
sbb
mov
mov
cmp
loope
xor
out
ret
sbb
shr
mov
xchg
outs
scas
ins
sbb
dec
lahf
mov
add
xchg
call
daa
aam
add
and
push
lea
ret
cmc
xchg
test
fdiv
in
inc
aas
leave
inc
jne
cld
test
jo
pop
loope
push
mov
out
mov
inc
sbb
inc
aad
cs
dec
out
ins
xor
jb
mov
pop
in
dec
arpl
mov
stos
stos
rcr
pusha
cmp
inc
and
into
push
popf
xor
cmp
mov
fdiv
dec
cmps
in
add
ss
(bad)
es
popa
pop
sti
mov
out
add
xor
adc
sbb
fist
aaa
mov
nop
pushf
mov
ret
mov
dec
xchg
mov
or
dec
outs
stos
loopne
push
(bad)
sar
add
or
add
add
jmp
lea
push
lgs
icebp
rcl
aam
das
push
and
inc
mov
push
icebp
sub
imul
in
dec
adc
(bad)
loopne
repz
jae
dec
fst
mov
push
jp
cs
xchg
xor
repz
int3
ins
nop
add
xchg
mov
out
push
data16
mov
cwde
(bad)
rcr
out
test
or
mov
(bad)
pop
inc
mov
pusha
push
xor
mov
out
jp
daa
fisttp
lea
test
jbe
cmp
aaa
cmc
std
adc
scas
inc
repz
adc
xchg
cwde
xor
jae
pop
mov
dec
cmp
aad
sbb
daa
(bad)
adc
stos
jb
icebp
or
lods
cli
jmp
push
sbb
shl
neg
add
mov
lds
cld
stos
repnz
out
test
pop
push
jo
cmp
retf
xchg
movd
jne
push
jmp
pop
mov
rcl
loopne
sub
xchg
fbld
(bad)
shl
add
mov
xchg
jge
mov
nop
and
aad
cwde
cmp
mov
mov
das
mov
shl
jne
(bad)
aaa
sbb
push
test
mov
(bad)
rcr
jnp
out
xor
adc
rol
out
cmp
and
cmp
mov
imul
or
mov
or
or
push
dec
sbb
mov
ret
mov
in
in
sahf
cld
test
pop
dec
in
inc
outs
mov
daa
inc
repnz
sub
loope
fistp
or
imul
cdq
adc
jb
push
xlat
gs
in
outs
sub
call
shl
sbb
adc
clc
push
jg
aaa
scas
jnp
add
push
ret
adc
fisttp
es
mov
int
fsub
jg
mov
jmp
cmp
mov
popf
stos
xor
jb
dec
mov
jb
(bad)
mov
inc
test
pop
shl
(bad)
push
cmp
xchg
rol
sbb
sub
cmp
icebp
stc
adc
sub
sbb
jecxz
scas
fdiv
push
push
dec
sti
jns
cmps
inc
nop
mov
scas
movs
es
push
scas
jb
dec
sub
ins
jecxz
adc
pop
or
pop
xor
aad
or
into
mov
mov
mov
pop
xchg
xchg
pop
imul
stc
xor
add
das
inc
adc
jns
js
dec
push
adc
jmp
pop
xchg
dec
or
inc
push
push
fistp
(bad)
and
repnz
loopne
mov
imul
dec
xlat
sbb
push
in
sub
xor
(bad)
jb
pusha
or
jg
mov
xchg
xor
dec
push
and
push
ret
adc
adc
(bad)
jb
jg
jno
leave
jne
test
stos
rol
add
jns
cmp
les
adc
jmp
cmp
push
aaa
push
ficom
std
imul
outs
inc
sbb
sub
neg
sub
imul
or
jmp
push
pushf
and
enter
jmp
push
dec
jle
rol
mov
fidiv
retf
cdq
adc
or
test
cmps
pop
inc
es
jmp
mov
cmp
xchg
jp
sub
fs
sbb
add
xchg
sub
in
dec
pop
dec
xor
test
js
mov
rcr
cld
test
xchg
jmp
fst
ins
loop
out
ins
scas
stc
retf
cmp
push
adc
cmps
sub
sub
mov
xchg
loope
jmp
xor
shl
jle
cmp
stc
cld
fisttp
and
loopne
iret
mov
xchg
push
int
xchg
mov
mov
push
push
mov
lea
xor
fnsave
push
push
mov
int3
push
nop
call
dec
aam
xchg
arpl
(bad)
ins
dec
fisttp
cmp
xor
(bad)
sub
pop
mov
aad
mov
inc
xchg
and
jg
fnsave
pop
or
mov
mov
add
out
ror
push
sbb
enter
ins
pop
les
sbb
aad
mov
pushf
imul
sub
sub
data16
arpl
mov
jne
out
add
leave
jo
ja
sbb
in
push
hlt
dec
add
inc
jecxz
popa
fistp
pop
sub
mov
add
lds
hlt
in
xchg
cwde
mov
cmp
das
imul
pop
push
fnsave
and
cmp
arpl
pop
fnstcw
ss
mov
cmp
inc
je
loope
(bad)
ins
mov
mov
sbb
into
mov
sub
std
movs
xchg
inc
sub
sub
sub
stos
adc
mov
or
fs
sbb
gs
mov
lock
pop
(bad)
cs
std
pop
imul
jno
jo
lahf
mov
jl
retf
add
xchg
sub
add
add
mov
icebp
pop
or
fwait
mov
mov
push
cmp
popw
dec
and
mov
(bad)
jnp
mov
aaa
movs
jle
push
ins
mov
daa
cmps
adc
mov
adc
test
mov
int
xor
lock
or
adc
and
jp
adc
push
ins
jo
cmp
mov
pushf
or
cmp
stos
jno
fcmovnbe
(bad)
xchg
cmps
mov
ja
fistp
fdivr
aas
sbb
arpl
loop
add
inc
cmc
fs
add
or
push
or
xor
rcr
movs
loope
mov
inc
pop
inc
repnz
inc
jg
ja
mov
fisubr
pop
pusha
cmp
jge
mov
cmp
pushf
sub
jmp
(bad)
xchg
pop
nop
jmp
xchg
cli
lahf
mov
in
lods
mov
mov
cli
clc
mov
inc
sbb
push
adc
pop
in
push
test
jge
aam
imul
ss
je
popf
popf
ins
and
inc
and
shl
push
mov
and
je
push
or
mov
mov
inc
pop
lds
mov
cld
push
scas
sar
jne
dec
cli
or
mov
mov
mov
jo
pop
(bad)
cmp
ficomp
mov
(bad)
xchg
and
inc
dec
mov
jns
cmp
movs
xlat
inc
pop
dec
fld
jno
loopne
popf
mov
stc
movs
sbb
xor
jmp
xchg
cld
in
popf
sub
scas
aad
mov
pop
ret
call
lahf
xor
enter
dec
(bad)
mov
adc
sub
xchg
jnp
sahf
mov
xchg
inc
xchg
mov
dec
jne
dec
sbb
ret
(bad)
out
movs
push
(bad)
lea
sub
mov
call
xchg
dec
xor
mov
pop
inc
call
add
dec
repnz
inc
jb
mov
add
call
adc
pusha
pop
mov
loope
pop
adc
movs
xchg
push
stos
out
xchg
int3
ds
inc
clc
call
(bad)
sub
jmp
scas
rol
icebp
jbe
aad
call
inc
sbb
cmp
cwde
add
dec
and
xor
mov
or
adc
pop
mov
loopne
mov
pop
add
xor
in
mov
neg
pushaw
lahf
xchg
test
mov
and
cmp
cmc
movs
xor
pop
cmp
mov
(bad)
sbb
cli
mov
and
aad
fs
mov
addr16
inc
int
mov
push
push
retf
loope
mov
dec
pop
cmps
cdq
fwait
call
sub
outs
and
cmp
lods
mov
jg
imul
outs
loope
or
in
push
leave
enter
stos
xor
mov
jae
stc
push
fucomi
outs
mov
jnp
stc
bound
shl
ins
and
xchg
aam
ret
out
pop
retf
cmp
or
pop
test
ret
push
dec
dec
mov
sbb
jp
xor
or
aad
add
es
ror
xchg
or
out
adc
mov
retf
jbe
xchg
jbe
or
xchg
mov
and
(bad)
popa
or
jmp
in
mov
out
jmp
test
and
dec
in
aam
outs
fnstcw
lds
cdq
leave
cmp
pop
mov
jmp
push
repnz
mov
add
daa
vpsubq
xchg
sti
cmp
mov
and
rol
out
imul
mov
rol
mov
lds
imul
jecxz
xchg
and
shl
loop
and
xchg
cmp
or
jo
dec
mov
pop
lods
(bad)
clc
jns
mov
xlat
mov
dec
dec
sti
lock
cdq
mov
dec
pusha
stos
push
push
xchg
out
js
std
cmps
dec
push
sbb
or
call
cwde
and
sahf
jns
adc
mov
test
mov
pop
dec
pop
or
xchg
cmp
ror
frstor
fimul
scas
cld
mov
inc
xchg
adc
ins
clc
sbb
push
lods
jge
aaa
out
fadd
int
sub
das
mov
mov
cmp
gs
shl
dec
push
xor
loope
inc
add
cmp
mov
lods
xchg
pcmpgtd
cwde
je
sbb
inc
loope
xor
add
adc
sub
pop
js
loop
(bad)
loopne
mov
push
(bad)
fcmovbe
xlat
scas
mov
call
pop
jno
fldenv
ficomp
jno
dec
icebp
sar
push
jmp
cld
inc
lods
xor
jl
lock
in
add
ins
inc
push
outs
ins
dec
out
add
push
es
cld
push
mov
or
cmp
inc
jb
pop
or
frstor
mov
cmp
mov
xor
or
jle
xchg
cmp
lahf
not
mov
into
int3
xor
ins
test
dec
jo
xchg
aas
mov
in
adc
xor
jmp
fwait
and
mov
into
ins
aas
mov
rcl
stos
inc
dec
pushf
mov
cld
sub
fnstcw
movs
fisub
fistp
cdq
imul
inc
sub
sbb
jne
in
xor
push
enter
pop
mov
fsubr
inc
jmp
xor
mov
adc
dec
lock
test
repnz
jge
sbb
jbe
fnstcw
hlt
mov
(bad)
mov
iret
xor
jb
push
jmp
adc
addr16
cmp
(bad)
mov
repz
pop
inc
sahf
std
cdq
mov
xchg
sub
iret
idiv
in
aam
mov
int3
mov
mov
ficom
ds
inc
jmp
pop
cli
pushf
popf
mov
rcl
loope
dec
sbb
xor
and
xor
pop
retf
lock
repz
and
push
fisub
mov
pop
and
(bad)
scas
into
cmp
mov
adc
arpl
mov
mov
pop
mov
lods
in
icebp
out
fmul
push
icebp
bound
jge
shl
sub
push
sahf
ins
cmp
push
inc
push
outs
in
push
pushf
sub
mov
push
or
sub
mov
cmp
and
mov
cwde
sbb
fldcw
fnstsw
enter
or
sbb
int3
jnp
in
mov
mov
aas
push
push
push
fstp
xlat
nop
xchg
and
mov
xchg
retf
dec
add
push
mov
cmp
dec
sti
xchg
test
mov
ja
jmp
fdiv
enter
outs
mov
mov
std
(bad)
outs
seto
lahf
jge
mov
push
adc
xchg
aaa
sub
int3
sub
fcmovb
fistp
aam
mov
arpl
jl
dec
out
(bad)
rcl
jle
dec
mov
rcl
rcl
xor
ins
mov
sbb
push
and
and
adc
jecxz
repz
pop
pop
push
push
cld
imul
popf
jmp
pop
mov
neg
minps
pop
iret
add
test
cmp
lods
fucomip
stc
push
add
jnp
(bad)
add
aam
pop
jo
dec
xchg
out
daa
clc
push
fst
mov
sub
std
test
out
movs
pop
sbb
xor
(bad)
cmps
(bad)
cmp
sub
mov
popa
mov
stos
mov
test
and
mov
retf
(bad)
movs
jp
sahf
dec
dec
dec
xchg
lods
js
test
xor
sbb
mov
and
not
int3
lods
cmp
out
daa
adc
fadd
mov
jns
pop
xor
aas
mov
test
adc
sbb
pushf
in
add
ss
cmps
dec
loopne
popa
sub
jge
inc
mov
sbb
adc
or
dec
cwde
or
push
mov
mov
imul
push
ret
and
pop
pushf
sbb
popf
jmp
iret
mov
push
and
mov
lods
loope
(bad)
fisub
popa
inc
push
movs
sar
sub
scas
stc
scas
mov
jg
outs
xor
mov
adc
cmps
fs
mov
xchg
je
lds
mov
sahf
lods
cmps
mov
call
push
hlt
ret
out
outs
in
ja
and
cmp
mov
jge
xor
jmp
sbb
pop
mov
popa
idiv
mov
cdq
call
rcl
(bad)
int
nop
xor
sti
pop
adc
xor
push
adc
mov
loope
sub
or
(bad)
(bad)
mov
push
ja
lahf
fnstenv
jne
push
add
jmp
loop
or
mov
cs
pusha
aad
adc
xor
leave
mov
adc
sub
lods
mov
out
xchg
and
iret
aad
rcr
aaa
jg
push
std
jmp
fist
(bad)
push
ins
mov
mov
sahf
cmp
ss
aas
int
jnp
pop
jge
xor
outs
dec
adc
sub
inc
sub
nop
pop
mov
shr
leave
stc
xor
scas
fsub
pop
pop
dec
xchg
das
and
(bad)
pop
lock
xlat
mov
scas
bnd
retf
ret
jmp
cmc
(bad)
jg
inc
mov
sub
cmp
push
imul
inc
movs
push
mov
retf
cmp
xor
jo
es
pop
inc
mov
aaa
movs
mov
rcr
call
and
xchg
mov
inc
and
xchg
xsave
adc
fisttp
int3
fwait
test
imul
mov
mov
gs
stos
popa
mov
jl
popa
int
sahf
add
ins
cmc
je
mov
sbb
out
adc
sbb
movaps
(bad)
xor
and
mov
(bad)
push
lods
cld
cwde
(bad)
call
shr
lea
lods
dec
xor
pop
xor
mov
mov
mov
mov
out
call
jno
scas
inc
retf
sub
adc
xor
sub
adc
push
mov
(bad)
add
inc
xchg
cmp
or
pop
(bad)
rcl
loop
xor
sbb
dec
sbb
pop
cmp
into
inc
je
scas
cmp
mov
test
pop
daa
inc
xor
scas
rcl
shl
xchg
mov
push
fsubr
arpl
adc
loop
sub
xchg
enter
inc
jbe
and
aaa
or
or
adc
pop
mov
xchg
and
das
jne
popa
mov
mov
inc
or
mov
loope
or
inc
sti
std
push
ret
xor
rcr
xchg
stc
cmp
int3
jge
icebp
xlat
loopne
das
into
xchg
mov
imul
(bad)
jae
cmp
ja
pop
out
dec
jns
push
push
fstp
pushf
and
push
cmp
fisttp
leave
xor
sub
mul
add
add
and
loope
mov
cmps
cmp
dec
mov
adc
idiv
sub
push
(bad)
aaa
dec
pushf
out
cmp
(bad)
mov
and
daa
mov
jbe
sar
js
fidiv
enter
xchg
fcom
jp
mov
arpl
imul
sbb
mov
or
stos
cmps
dec
call
jo
mov
dec
push
and
sbb
shr
jb
lods
aam
push
pop
pop
arpl
jmp
add
in
pop
out
mov
clc
add
aaa
jmp
ins
adc
aaa
aas
xlat
dec
test
xor
pop
cmp
in
push
pusha
and
inc
lock
push
repz
mov
shl
mov
(bad)
xchg
cmps
leave
sub
loopne
adc
jmp
xchg
repnz
das
sub
ins
and
imul
not
sbb
mov
sbb
test
pop
sub
ins
mov
cmp
cmp
sahf
xor
movs
jg
cs
and
lods
sub
repz
cmp
das
cwde
aad
test
imul
mov
sbb
cld
sbb
cmc
push
outs
xor
jae
push
sar
in
mov
clc
pop
jecxz
(bad)
dec
jne
push
mov
and
into
xor
mov
js
nop
push
adc
or
mov
cli
mov
hlt
stos
int3
and
sub
loop
mov
clc
scas
movs
fidiv
sbb
loopne
pop
pop
add
ficom
rcl
ja
push
jg
scas
xchg
ins
gs
bound
addr16
or
mov
lock
or
retf
hlt
push
sbb
pusha
sbb
jmp
inc
test
div
add
iret
sub
xor
pop
inc
mov
push
fucomp
(bad)
and
pop
in
jg
ds
sub
jne
std
jno
fld
call
cmc
mov
pop
cli
aad
cmp
sti
or
(bad)
call
mov
lahf
push
jge
or
push
or
loopne
mov
mov
imul
test
inc
call
scas
out
ret
(bad)
adc
sub
mov
push
cli
and
popa
push
dec
xor
(bad)
jo
test
add
jl
fcom
das
out
mov
xor
lock
push
cld
sbb
jae
or
shl
out
sbb
xchg
repz
mov
adc
retf
nop
fidiv
inc
jmp
inc
mov
jl
cmps
push
push
jge
xchg
mov
out
pop
stos
aad
add
imul
adc
ins
ja
mov
mov
clc
sbb
inc
aad
rcr
daa
and
in
push
add
cdq
outs
dec
xor
getsec
(bad)
in
xchg
clc
xchg
lahf
mov
dec
pop
adc
fdivp
scas
push
cmp
add
popf
imul
std
sub
push
push
mov
dec
mov
ja
inc
jne
icebp
adc
repz
mov
inc
mov
imul
out
add
out
lods
das
sub
or
xor
das
mov
cmp
pop
mov
shr
sub
and
pop
jecxz
pop
imul
xor
pusha
in
add
xor
fwait
jbe
mov
or
xchg
push
fmul
daa
imul
fs
mov
mov
jo
sbb
pop
movs
nop
cwde
lods
jb
outs
not
ja
inc
mov
sbb
out
fild
jb
fst
fbld
pop
xchg
aaa
popa
push
pop
fbstp
sbb
lahf
xor
retf
mov
cli
not
sar
pop
movhps
cmc
clc
rcr
mov
sbb
cmc
jae
repz
mov
iret
mov
bound
jecxz
call
cmp
mov
and
dec
mov
sub
lods
clc
xlat
out
inc
sub
scas
push
out
add
sbb
cmps
fidivr
mov
lods
lods
adc
pop
mov
mov
inc
sbb
pop
dec
das
je
mov
mov
fbld
inc
scas
xchg
xchg
bound
movs
shr
jge
mov
(bad)
ja
sbb
jp
aas
xchg
mov
jg
fimul
not
mov
ret
cmp
jo
vmwrite
pop
mov
and
adc
dec
jne
js
in
mov
inc
xor
popf
(bad)
enter
jno
mov
mov
push
add
or
add
sub
cmc
push
adc
int3
push
loopne
mov
add
push
dec
adc
xchg
scas
cmp
add
sar
jg
xchg
push
out
jl
fsubr
mov
sar
iret
int
add
pop
ja
jo
push
sbb
xor
cmp
mov
fdivr
jl
push
cmp
dec
sbb
sbb
sbb
sar
jl
pop
repz
add
stos
popa
add
jmp
adc
loop
jmp
aam
scas
arpl
call
mov
or
neg
mov
enter
(bad)
in
cmp
scas
test
adc
cmc
cld
xchg
bound
ja
pop
xchg
push
jmp
inc
pop
scas
mov
mov
retf
jmp
xchg
ret
xor
loopne
ins
shr
aaa
unpckhps
shl
lods
add
out
gs
mov
fiadd
mov
(bad)
mov
mov
lds
push
sbb
and
sbb
outs
stc
sbb
sub
into
shr
mov
fdivr
dec
mov
out
stc
test
xor
out
xchg
test
stos
cmp
push
bound
into
out
mov
stc
imul
sbb
adc
mov
pushf
in
jae
or
pop
adc
mov
hlt
inc
adc
mov
sub
push
mov
and
aam
nop
aas
add
gs
dec
pop
xor
popf
push
pop
pop
retf
test
cli
xchg
(bad)
test
mov
fistp
mov
int
test
mov
in
push
loopne
xchg
popa
ds
xlat
or
jbe
in
inc
loop
mov
out
and
xor
dec
sub
bound
std
or
mov
cmp
dec
and
mov
sar
stc
mov
jge
push
mov
mov
sub
add
cmp
test
out
lahf
pop
add
push
fild
fcmovne
mov
ins
jmp
into
pusha
mov
icebp
sbb
lea
xchg
xor
inc
pop
cmps
mov
dec
pop
loope
jnp
out
mov
jo
out
scas
mov
mov
ins
movs
retf
push
cmp
add
dec
adc
xlat
(bad)
sbb
aad
out
scas
xor
push
inc
push
xchg
xchg
and
retf
(bad)
repnz
test
out
lds
xor
mov
cmps
pop
sub
lods
and
add
call
shr
out
xchg
xlat
mov
gs
dec
call
idiv
fistp
sub
ss
repnz
mov
inc
repz
mov
ins
js
mov
test
in
out
mov
push
or
pusha
mov
or
dec
xlat
jno
imul
nop
pop
lods
sub
pushf
cs
in
loop
fist
out
pop
aad
outs
les
jns
xor
inc
ins
cs
pushf
outs
cmp
fild
dec
mov
add
not
mov
push
cmps
xor
(bad)
into
aaa
repnz
jb
mul
mov
xchg
xchg
cdq
cmp
mov
inc
dec
lock
fdivr
xchg
mov
aam
out
in
mov
dec
pop
js
sbb
xchg
(bad)
and
lea
xchg
and
sub
mov
int
stc
and
cmp
hlt
fs
pop
mov
aam
loopne
push
jbe
add
jmp
sbb
mov
lds
ja
xor
fstp
ins
jg
movs
popa
inc
sbb
sti
out
(bad)
and
push
dec
pop
mov
jb
or
or
dec
(bad)
jg
xor
sub
aaa
mov
in
inc
xor
push
jo
push
push
dec
(bad)
gs
push
mov
jno
js
int
fnstsw
jbe
or
add
adc
push
dec
out
scas
adc
fcomp
pop
mov
shl
cmp
pop
in
das
sbb
fild
sub
lds
mov
js
mov
push
adc
cmc
mov
out
push
pushf
ins
test
and
inc
outs
dec
push
imul
sub
cdq
mov
mov
lahf
(bad)
jge
pop
sbb
mov
fs
(bad)
fstp
jnp
cmp
ins
repz
sbb
and
sub
jle
movzx
mov
and
jecxz
les
(bad)
jmp
cmp
or
fwait
inc
adc
daa
inc
out
mov
xchg
mov
mov
test
xlat
add
push
cmc
mov
movs
mov
std
js
push
and
sub
lods
xchg
popa
or
jmp
in
dec
dec
ficomp
test
iret
mov
adc
xlat
pop
add
ror
add
(bad)
jle
jne
sbb
mov
and
push
push
and
jg
or
cmp
mov
inc
aaa
add
out
or
shl
add
(bad)
mov
xor
sbb
sti
mov
ds
or
icebp
or
sti
jns
repnz
jmp
cli
mov
ret
in
enter
mov
stos
cmp
dec
ffreep
shr
add
pop
cmp
jbe
sti
jns
fnstenv
das
push
popa
xor
sbb
clc
adc
loop
sti
ds
jne
lahf
inc
adc
sbb
mov
rol
cld
push
mov
push
sub
loop
cmps
icebp
out
in
mov
or
call
mov
inc
into
icebp
pop
jne
mov
mov
mov
outs
jmp
in
pop
ins
jp
mov
fst
dec
sub
inc
aam
stos
cmp
das
into
pop
into
loope
les
sbb
pop
test
dec
call
repz
mov
xor
imul
inc
mov
(bad)
sub
les
mov
nop
loop
mov
les
xor
jo
in
ins
sti
jns
xchg
dec
cmp
fisub
mov
cdq
add
into
fimul
scas
iret
mov
mov
out
and
pop
sbb
sub
dec
push
int
out
(bad)
sub
mov
outs
(bad)
dec
jno
xor
adc
ror
dec
add
ja
jmp
mov
sahf
ins
mov
cmp
jle
stc
ja
stc
xchg
sbb
xor
imul
scas
(bad)
daa
mov
rcr
pop
pop
cmp
jno
sub
add
cwde
push
sub
das
gs
sub
jge
dec
pop
lods
aas
sahf
add
mov
scas
ds
enter
imul
stc
jge
xor
or
push
xor
test
mov
shl
pop
dec
out
aas
sub
shl
outs
jo
mov
dec
xor
mov
int
mov
call
adc
sbb
and
or
sbb
(bad)
iret
xchg
ss
ins
pop
mov
lods
loopne
mov
xchg
das
jge
stos
mov
repz
inc
sar
mov
pusha
outs
aaa
repz
jno
out
leave
mov
(bad)
mov
vmovd
ins
push
sub
stos
scas
and
mov
stc
and
cmp
es
pop
jb
jns
jnp
mov
movs
fisttp
jge
imul
inc
shr
dec
in
call
pushf
arpl
mov
cmps
fcom
cmc
push
mov
mov
adc
jo
pop
mov
jg
loopne
cmp
fst
test
test
iret
adc
pop
ins
outs
stos
and
icebp
(bad)
xchg
fcmovnu
push
test
add
arpl
lock
jbe
fisubr
loopne
jae
adc
cmp
add
shl
jge
push
mov
rcl
pop
mov
adc
mov
das
inc
jae
dec
xchg
xlat
jae
cmps
xchg
icebp
and
loop
cmps
mov
xchg
mov
pop
pop
jnp
xor
dec
xor
scas
pop
pop
loopne
popf
sub
imul
jae
mov
mov
cmp
(bad)
pop
push
dec
iret
test
mov
add
dec
sbb
push
push
cdq
mov
cmc
sahf
inc
push
cld
push
jne
cmc
mov
fisub
mov
mov
mov
cmp
inc
retf
in
mov
xor
xchg
cmp
shl
sub
inc
sbb
add
fsub
inc
push
shl
outs
addr16
add
mov
jo
das
cmp
cmp
xchg
xchg
mov
test
loope
jb
xor
and
fstp
scas
in
dec
mov
push
dec
cmp
mov
pop
outs
jg
push
(bad)
mov
rcl
in
shl
mov
cmp
pop
mov
rcl
xlat
jmp
popa
jg
jle
sub
sti
jp
test
mov
xor
rol
push
cli
jmp
adc
jle
rcr
mov
mov
cli
fadd
mov
add
mov
fsubr
aaa
inc
movs
bound
inc
sbb
(bad)
int
call
nop
rol
inc
jge
inc
gs
addr16
jmp
stos
leave
cwde
nop
sbb
xchg
into
inc
rcr
sub
dec
jmp
mov
mov
test
repnz
cld
dec
fsub
mov
push
pop
mov
or
clc
inc
ins
imul
and
push
mov
arpl
jle
fyl2x
xchg
xchg
rcl
addr16
fisub
stc
dec
push
fnstenv
or
xchg
lock
sbb
mov
sub
arpl
movs
cmps
jp
repz
cli
stos
cmps
inc
cmp
jmp
outs
pop
int
xor
add
dec
pop
shl
sub
idiv
stc
jo
shl
cmc
cmp
aad
cmp
and
mov
pop
jmp
mov
lds
popa
inc
push
neg
imul
pop
adc
out
push
jns
push
jbe
imul
call
cmp
cmp
adc
out
sbb
cwde
and
pop
mov
mov
icebp
jnp
ret
mov
cmp
xchg
xlat
fcom
adc
mov
bound
cdq
es
ret
aas
and
mov
xchg
cmp
cmps
repz
outs
jle
mov
outs
arpl
xor
ja
inc
push
adc
pop
cmp
ds
mov
popa
test
xchg
ins
retf
es
inc
mov
mov
scas
xor
cmp
clc
in
(bad)
inc
lahf
out
into
arpl
jle
imul
adc
xchg
pop
xor
das
dec
sub
adc
aam
fs
xor
test
int
adc
adc
mov
in
wbinvd
scas
mov
inc
fmul
cmp
(bad)
mov
retf
adc
jle
xor
dec
push
xor
icebp
mov
xchg
inc
dec
lahf
fwait
sbb
mov
pop
sbb
xor
sub
sbb
xchg
push
sub
imul
jl
icebp
pop
jmp
push
clc
retf
inc
fnstenv
sbb
std
pmaxub
int3
mov
(bad)
test
(bad)
ficom
jmp
js
rcr
mov
fwait
movs
and
mov
or
mov
ret
mov
lds
(bad)
stc
jl
arpl
jmp
add
test
(bad)
sub
dec
rcr
xor
push
and
daa
sbb
call
in
push
imul
ret
imul
shr
(bad)
repnz
mov
retf
mov
repz
jbe
mov
jmp
pushf
dec
adc
inc
adc
out
fbld
or
cmp
(bad)
push
add
arpl
stc
imul
cs
cs
sbb
inc
or
jne
out
xor
cmp
cmp
ficomp
push
xor
sub
nop
in
scas
fdivr
hlt
push
and
pop
adc
xlat
sbb
jo
call
repnz
cs
aam
mov
add
in
sbb
in
stc
aad
push
rep
pushf
mov
jb
xchg
dec
(bad)
out
jns
jmp
dec
daa
stc
inc
xor
or
popf
fucomp
cdq
pop
call
movs
sub
jle
push
inc
xor
mov
int3
push
fdivrp
push
stc
inc
fs
sbb
sbb
or
and
add
add
cmp
cmps
fisub
out
in
idiv
test
ds
add
cmp
push
mov
js
pushf
sub
popa
pop
xlat
cmc
lahf
std
and
out
fs
pop
sti
xchg
mov
sar
mov
jb
lds
fisub
sub
or
aaa
lods
or
repnz
xor
cld
jg
mov
or
test
sahf
movs
pop
movlps
mov
js
mov
out
rcr
mov
btc
loope
pop
inc
inc
dec
in
inc
cmp
push
test
xor
xor
outs
dec
xor
push
in
fdivr
adc
pusha
xchg
and
retf
call
js
leave
adc
push
imul
cli
outs
and
daa
sbb
jns
xchg
cmp
or
push
aas
xchg
call
fld
xor
dec
xchg
xchg
jge
std
mov
push
test
call
aas
add
int3
cli
jl
mov
dec
test
cmp
xchg
push
xchg
movs
aas
jecxz
lea
loop
(bad)
jmp
stc
icebp
jo
adc
int
xor
inc
clc
inc
push
in
fld
or
xchg
adc
xchg
fwait
jne
xor
sub
cmp
retf
fwait
lahf
pop
adc
mov
cmp
ror
jp
mov
or
adc
xor
push
ja
sahf
fst
or
jmp
or
imul
sbb
mov
inc
imul
cli
inc
cmps
push
fstp
int
inc
push
out
xchg
mov
aam
das
jae
aam
xchg
or
add
cmc
push
aas
cmp
or
ret
mov
out
inc
mov
in
idiv
movs
adc
push
pop
xchg
push
push
xor
ss
xor
mov
xchg
mov
loop
test
call
dec
dec
xor
cs
lods
popa
xchg
lahf
adc
mov
mov
dec
sub
pop
dec
call
adc
js
adc
(bad)
or
jne
imul
and
in
cdq
mov
(bad)
add
push
dec
pop
or
mov
and
ret
xor
repnz
or
xchg
mov
push
cs
sub
sub
es
pop
movs
call
inc
xlat
jp
mov
movs
mov
jle
lock
jnp
add
cld
xchg
and
mov
test
shl
cmp
and
add
pop
pop
jnp
loop
not
sahf
push
scas
sub
jp
in
pop
xor
popa
pop
mov
(bad)
fucom
aaa
stos
jg
mov
mov
sub
or
push
inc
and
lods
pop
test
sbb
fwait
gs
add
rcr
add
xor
cmps
add
add
mov
scas
ret
(bad)
ss
dec
mov
mov
sub
mov
sbb
add
test
xor
mov
xchg
int
jno
loop
cs
xchg
fadd
cmc
ja
xchg
ror
mov
push
mov
rcr
cmps
das
(bad)
mov
mov
and
xor
xchg
enter
mov
adc
cmps
in
loope
jb
fld
mov
jle
and
push
push
cmps
retf
adc
stos
outs
movs
arpl
xor
push
xor
in
xchg
in
or
test
sbb
adc
sbb
push
pop
in
cs
(bad)
mov
sbb
repz
add
jno
cmp
test
jl
pop
xor
xchg
cmp
cmp
xchg
cli
lahf
fwait
cmp
mov
pop
icebp
mov
sbb
mov
sub
test
lea
adc
jb
sar
jmp
das
cdq
pop
mov
cld
add
movs
shl
inc
aad
dec
pop
inc
shl
cmps
inc
(bad)
inc
jp
dec
mov
aaa
cld
(bad)
push
xchg
je
addr16
push
shr
in
retf
out
inc
mov
add
lock
rcr
sbb
push
fwait
adc
add
jae
mov
fst
mov
fild
push
lods
inc
mov
and
inc
mov
cmp
add
add
sub
fcomp
pop
mov
mov
cmp
push
ret
mov
leave
rcl
out
fsub
and
jns
lds
sub
mov
add
pop
cmp
lods
inc
push
push
call
and
arpl
mov
outs
mov
into
sbb
jmp
dec
int3
in
cmp
fxch
mov
div
mov
mov
mov
in
not
jmp
xchg
mov
adc
jae
jl
push
xlat
pop
stos
jnp
and
lahf
push
xchg
pusha
dec
jbe
xor
scas
mov
and
sbb
jne
ror
sub
xor
or
lock
push
retf
mov
mov
or
and
cmovle
cld
cs
repnz
dec
ret
repnz
mov
test
sti
and
push
mov
movs
nop
fld
shr
jae
rcr
mov
mov
or
xchg
cmps
cli
and
iret
mov
push
dec
inc
leave
xchg
(bad)
push
cld
or
push
leave
cmp
(bad)
idiv
gs
jo
into
mov
(bad)
ror
or
xlat
lods
sar
mov
push
pop
pop
test
addr16
bound
pop
stos
xor
or
dec
mov
add
sbb
clc
test
and
imul
mov
push
xor
ins
out
lods
(bad)
repnz
arpl
pop
fldcw
in
sub
inc
mov
iret
mov
mov
adc
ret
and
imul
pop
adc
sub
pop
cmp
dec
push
in
out
jne
mov
jbe
dec
pushf
mov
xchg
call
hlt
push
rcl
fxtract
dec
inc
mov
(bad)
movs
js
fistp
mov
and
in
and
mov
cmp
sub
das
test
inc
mov
jle
sub
loopne
sub
call
xchg
cmp
loop
xor
cmp
ins
and
pop
push
pop
test
test
leave
vshufps
loop
pop
ret
jecxz
leave
sbb
addr16
dec
xchg
xchg
(bad)
aas
shl
cmc
jle
xor
fidivr
and
dec
push
popf
pop
cmp
jbe
sbb
xor
sar
pop
ret
cmp
cmp
cmp
movs
ja
repz
mov
mov
mov
scas
dec
std
fmul
inc
or
in
pop
repz
mov
xor
push
mov
pop
add
mov
rcr
neg
aaa
cmp
or
inc
mov
idiv
and
cmc
arpl
or
add
scas
ret
movs
and
nop
mov
inc
xchg
mov
fistp
xchg
mov
push
dec
inc
movs
movs
(bad)
push
xor
fbld
mov
jle
popf
fbstp
les
xor
ret
mov
pop
out
mov
stc
cmps
push
pop
bound
test
ds
jge
dec
jmp
sub
cdq
xchg
imul
dec
adc
add
ds
loopne
daa
and
imul
(bad)
push
je
dec
jle
inc
hlt
or
or
or
in
adc
xchg
and
aas
inc
aaa
pop
dec
stos
(bad)
cli
push
cwde
in
fild
mov
cmp
ja
inc
icebp
jne
fld
scas
push
outs
sub
push
pop
jecxz
mov
sub
lods
mov
sbb
dec
cmp
int3
xor
clflush
loope
je
mov
loop
adc
jmp
call
mov
mov
(bad)
jecxz
mov
retf
je
out
add
cmp
xor
inc
xchg
ror
aad
out
test
clc
cld
mov
pop
fcom
mov
pop
addr16
mov
mov
jle
imul
in
sub
xchg
pop
clc
retf
dec
mov
sub
retf
movs
pop
fcmovb
call
adc
(bad)
(bad)
repnz
dec
sbb
cs
fdivr
sbb
sbb
adc
stos
test
jns
xchg
xchg
sbb
and
adc
add
in
ja
mov
mov
add
arpl
push
cmp
enter
xchg
or
cmp
cmp
push
jmp
dec
mov
adc
imul
cmp
and
xchg
leave
pusha
mov
pminsw
jle
jecxz
jb
inc
and
fst
div
cdq
out
pop
push
mov
cmp
mov
inc
cmp
lods
mov
fsubp
jb
inc
stos
std
retf
ds
stc
adc
add
leave
stos
popa
and
sahf
xor
stc
in
sar
xor
cmp
aam
jo
dec
mov
scas
sbb
bound
dec
xor
loope
cmps
pop
mov
outs
cld
xor
ret
repnz
inc
push
fistp
retf
addr16
adc
fdivr
js
and
mov
bswap
and
int3
add
aam
in
pop
repz
push
adc
hlt
inc
pop
mov
outs
imul
pusha
jns
mov
sub
sahf
xchg
xor
pop
mov
loope
clc
dec
repz
jge
pop
mov
push
push
cld
popa
add
or
(bad)
les
mov
pop
imul
into
xor
int3
jle
je
xchg
jno
rcr
in
rcr
mov
pop
in
test
test
leave
ja
jp
inc
pop
or
dec
(bad)
ss
not
js
push
clc
loopne
daa
enter
dec
int3
or
push
sub
mov
loope
rol
ror
movs
dec
pop
sti
shl
and
and
adc
cmp
cmp
sbb
jmp
out
into
inc
in
imul
clc
out
das
xor
xchg
jmp
pop
pop
mov
sub
out
(bad)
mov
mov
and
mov
(bad)
jmp
xchg
or
fdivr
sub
mov
xchg
mov
xchg
lds
enter
mov
shl
lahf
jge
cs
cld
xor
retf
div
adc
dec
xlat
mov
jmp
jne
push
cli
ss
mov
mov
xchg
fnstsw
inc
jle
mov
push
jl
mov
neg
mov
and
sub
jb
loop
fcmovb
in
inc
mov
push
mov
scas
mov
test
data16
jno
call
repz
jp
pop
rcr
mov
fisub
mov
jns
fisttp
retf
and
ins
sbb
xchg
hlt
(bad)
mov
sbb
cmp
sbb
pop
mov
ror
sub
ja
shr
bound
ffree
in
(bad)
mov
cli
das
dec
pop
icebp
add
loopne
mov
(bad)
cmp
aaa
cwde
sahf
stc
jmp
adc
imul
sbb
xor
mov
sub
stos
int3
das
add
int
repnz
sub
mov
push
out
xchg
iret
imul
dec
pop
push
(bad)
dec
nop
ins
pop
ins
cmp
mov
inc
xor
dec
add
dec
and
sub
aad
pushf
pop
pop
retf
cwde
sahf
fiadd
fnstenv
pop
mov
call
push
inc
(bad)
call
stos
aam
push
jb
adc
jne
aaa
add
mov
ss
push
add
and
lea
lods
inc
repnz
lods
cmc
push
icebp
dec
jae
lahf
inc
adc
std
int3
(bad)
leave
mov
cmp
push
div
jo
xor
xor
fnsave
stos
cdq
mov
sub
popa
retf
pop
xchg
lds
retf
sbb
repz
in
pop
movs
fmul
je
fs
aam
and
out
fcomp
and
les
(bad)
adc
fdivr
dec
sub
mov
xchg
push
rcr
js
jle
pop
push
lock
or
cmp
pop
and
es
xor
mov
adc
sub
add
cmp
data16
bound
rcr
cdq
shl
push
or
fldcw
and
sbb
push
sbb
sahf
jno
mov
pop
clc
xor
stos
or
scas
xchg
xor
ja
fwait
lods
add
ins
test
int
xchg
mov
jbe
scas
mov
ds
mov
out
das
push
sti
test
outs
xor
sub
rol
mov
pop
sub
sahf
cwde
jo
pop
jo
pop
xchg
sbb
ins
jmp
(bad)
push
jmp
fdiv
cmp
mov
xor
inc
push
out
push
sar
ror
sbb
outs
iret
inc
push
cmc
pop
sub
lods
xor
mov
test
fnstenv
pop
mov
sub
push
(bad)
ficom
push
fsubr
inc
mov
movntps
cmp
jmp
sbb
pop
out
je
fcmovu
pushf
push
mov
bound
or
aam
sahf
mov
loop
jmp
call
sub
(bad)
dec
(bad)
or
push
or
sbb
(bad)
pop
and
je
push
cmp
add
test
ins
neg
mov
pop
lahf
mov
mov
loope
or
gs
inc
and
out
lods
aas
dec
push
jno
cs
cmps
cmps
pop
xor
leave
mov
push
test
fs
ffreep
fistp
aas
xor
cli
xchg
add
cmp
jae
dec
mov
push
nop
inc
mov
xor
push
sbb
add
fs
jl
fimul
mov
in
cs
ja
out
cld
daa
jge
pop
sar
inc
imul
inc
inc
mov
fld
fist
mov
cmps
cmp
ret
add
sub
in
test
push
loop
frstor
mov
(bad)
jle
daa
push
mov
arpl
add
xor
dec
pop
adc
sbb
adc
mov
pop
cli
enter
stos
cmp
lods
fsub
cmp
cwde
mov
push
(bad)
fst
mov
and
aad
dec
ficomp
dec
xchg
ficomp
bound
pop
sub
and
leave
add
clc
sub
xor
jle
movs
shl
int3
inc
in
cmp
ins
jno
sahf
xor
push
sar
sub
ret
and
jl
scas
cmp
movs
imul
mov
lahf
or
enter
js
cmp
cmp
jle
enter
outs
stc
out
push
xor
mov
jmp
mov
sbb
retf
mov
les
sbb
jno
mov
jbe
xchg
jecxz
lea
and
imul
ret
hlt
dec
jnp
call
mov
push
or
icebp
pop
mov
vmread
mov
stos
test
dec
outs
push
ret
or
push
xchg
cmc
jmp
mov
ror
or
xchg
jg
clc
xor
pop
mov
fistp
mov
push
ror
sar
inc
mov
fadd
dec
push
cmp
loopne
ins
or
lds
rol
mov
add
jp
cli
pop
in
xchg
js
mov
fdiv
xchg
add
add
fisub
cld
retf
push
icebp
fdivr
pop
jb
mov
jnp
mov
(bad)
jmp
rcr
jne
cld
lahf
fs
adc
add
retf
dec
cmps
or
cmp
mov
in
xor
sbb
js
xor
pop
push
xor
inc
imul
adc
stos
dec
lods
cmc
pop
ja
cmp
mov
push
xor
lods
jp
sub
inc
jl
cld
sub
push
dec
(bad)
sti
es
test
test
jae
inc
sub
push
mov
es
not
add
dec
mov
loop
cmp
cld
mov
addr16
push
sbb
(bad)
int
jnp
sub
adc
addr16
in
dec
aad
add
aad
les
xchg
mov
movs
popa
xchg
add
arpl
fwait
pusha
mov
les
ret
xor
int3
aam
xchg
ror
(bad)
ins
fmul
(bad)
inc
dec
sbb
ret
dec
xchg
push
hlt
int3
push
sbb
dec
mov
popa
dec
sbb
push
loopne
in
sbb
std
rcr
xlat
cld
das
mov
push
(bad)
dec
add
and
in
and
aaa
ss
push
repnz
push
xor
es
cs
add
ins
scas
test
popa
test
bound
ror
jns
shl
xor
ret
shl
sub
mov
jmp
pop
sti
and
ss
pop
or
pusha
mov
sbb
fucomip
stos
dec
aas
pop
mov
dec
hlt
or
std
loope
cmp
clc
inc
dec
xchg
jno
add
and
jmp
jb
push
jecxz
out
sahf
leave
sub
sbb
mov
mov
jecxz
or
imul
pop
push
pop
nop
push
sub
sub
adc
cmp
pop
mov
fidiv
add
and
hlt
push
pop
mov
push
dec
jp
ja
pop
or
lods
xchg
sub
cmp
stc
call
loop
and
mov
ss
(bad)
fstp
sbb
fsubr
(bad)
out
cmps
push
rol
cs
mov
mov
pop
dec
or
xchg
or
call
sub
xchg
ins
cwde
arpl
add
aaa
or
leave
mov
mov
leave
shl
sub
loopne
xor
test
push
jne
jecxz
add
loope
inc
arpl
js
ret
mov
fcmovnb
dec
mov
push
jo
cmp
jno
fwait
mov
inc
adc
or
or
test
fwait
xlat
xor
xchg
jno
clc
js
adc
aam
cmps
clc
cmp
cmp
and
mov
and
repnz
pop
outs
pushf
(bad)
mov
stos
mov
mov
loope
inc
loopne
and
jb
stc
test
push
cmp
jp
sbb
fiadd
repz
addr16
test
in
fsub
bound
xor
ret
sti
fs
sub
or
add
aad
stos
clc
test
shl
fdiv
in
repnz
loopne
or
sub
and
stos
inc
or
pop
pop
push
sbb
xor
xor
cmps
inc
dec
xchg
lea
sub
and
movs
(bad)
or
cmp
add
adc
or
add
bound
scas
mov
mov
mov
repz
lea
pop
jge
cmp
mov
lds
cmp
cmp
inc
cmps
xchg
pcmpeqd
mov
and
xor
cmp
jmp
pushf
push
int3
mov
fisttp
scas
cdq
je
bound
retf
add
lea
std
fs
scas
cmp
push
jmp
cmp
bsr
stos
not
lock
cmps
pop
sub
dec
jae
inc
shl
inc
es
xchg
cld
mov
and
pop
adc
push
mov
cmc
push
xchg
out
test
adc
call
inc
mov
cmp
sbb
nop
stos
push
out
mov
outs
out
xor
lds
cmps
sbb
pop
pop
push
es
lods
inc
sbb
dec
out
or
pop
and
push
cs
add
xchg
mov
inc
stos
xchg
out
add
in
popf
ret
mov
pop
daa
cdq
jnp
or
not
mov
mov
pop
push
or
aam
cld
jnp
jne
xchg
xchg
sub
push
xor
xchg
and
dec
out
lds
add
pusha
shl
cmps
mov
mov
cmp
stc
mov
push
cmc
jnp
ja
test
push
fiadd
or
fidiv
icebp
dec
inc
ins
cmps
mov
icebp
or
inc
cmp
push
inc
mov
jno
dec
in
jb
mov
pop
(bad)
cdq
hlt
aas
pop
daa
and
out
adc
outs
xchg
loop
push
int3
xor
out
xor
ins
ds
test
ficomp
ret
ficom
jl
repz
(bad)
in
repz
mov
and
add
scas
mov
jnp
pop
inc
cmp
(bad)
or
jp
jbe
mov
stos
or
gs
adc
cdq
(bad)
call
adc
imul
or
pop
jae
and
mov
xor
adc
nop
lock
das
cmps
(bad)
fadd
jno
pop
(bad)
push
js
inc
sub
fadd
or
enter
or
xor
jmp
ds
cli
mov
inc
aam
inc
jbe
cmp
push
(bad)
fisub
shl
xor
cld
jecxz
cs
and
loope
les
ret
mov
std
int3
xchg
jecxz
mov
out
sub
lock
pop
inc
lea
sahf
push
jae
scas
xchg
jmp
repz
fsub
add
scas
stos
cmp
fist
lock
imul
add
jno
retf
sub
xchg
push
cmp
mov
arpl
vldmxcsr
pop
jge
ins
or
imul
call
mov
in
int
scas
cs
ret
(bad)
cmp
pop
adc
dec
jge
pop
clc
fwait
rcl
dec
rcl
push
shl
jbe
fdiv
scas
jmp
dec
and
sub
test
jmp
ret
clc
rcr
jle
add
cmp
pop
mov
out
call
inc
std
and
push
jo
loop
and
test
inc
pop
retf
test
xchg
retf
test
mov
test
bound
aam
neg
in
ret
repnz
outs
not
dec
xchg
mov
out
dec
mov
inc
in
cmp
mov
retf
es
jle
inc
test
sbb
xor
jns
push
jecxz
ror
pop
in
mov
sahf
cld
mov
movs
mov
in
lea
ss
xchg
rcr
call
mov
popf
jmp
pop
adc
lods
es
inc
xor
mov
sub
neg
pop
icebp
xchg
dec
mov
aam
sbb
jl
pop
jae
stos
rol
inc
jns
adc
lods
fcom
mov
ss
cwde
pop
loop
call
mov
addr16
mov
test
or
hlt
xchg
jp
mov
xor
imul
lahf
nop
inc
mov
inc
push
in
mov
sahf
sbb
mov
(bad)
push
(bad)
enter
xchg
into
push
mov
in
inc
cmp
daa
stc
call
or
test
addr16
xor
mov
outs
push
add
ins
int
lds
retf
and
out
es
fdivrp
icebp
outs
push
adc
or
ret
jo
push
push
or
pop
dec
inc
dec
mov
mov
sub
ins
(bad)
or
cmps
jge
jo
sub
jp
push
xor
fimul
ins
xor
and
gs
or
cmp
push
lea
jns
jecxz
repz
pop
pusha
not
fnstenv
adc
xor
clc
dec
mov
jae
lock
and
fwait
(bad)
repz
pop
cmp
jnp
sub
xchg
adc
inc
jmp
adc
nop
sti
pushf
int
push
adc
imul
ins
sub
sbb
fcmovnb
hlt
and
cli
or
test
jnp
movs
push
xchg
and
push
pop
(bad)
xchg
mov
cdq
out
mov
(bad)
fist
js
in
loopne
and
repnz
aaa
movs
ja
cmps
into
call
or
push
inc
adc
and
(bad)
or
mov
inc
adc
jmp
test
mov
movs
inc
adc
cmc
xchg
or
adc
iret
lds
in
inc
fcmove
dec
pop
aam
pop
pop
popa
or
mov
iret
or
mov
call
ss
mov
add
daa
sbb
jne
pop
xor
pop
mov
mov
(bad)
dec
daa
or
pop
(bad)
test
data16
ror
dec
retf
xor
dec
or
cmp
jne
pop
mov
sub
pushf
adc
xor
or
jae
mov
inc
mov
inc
xchg
xchg
repz
adc
std
(bad)
mov
or
gs
mov
sahf
out
dec
jg
xchg
call
inc
imul
jmp
and
cs
aas
ss
push
jne
push
aad
xchg
cmp
adc
shr
jb
mov
jecxz
push
sbb
or
in
test
pop
(bad)
pushf
int
iret
sbb
push
leave
jne
mov
push
leave
(bad)
loope
inc
xchg
mov
pop
mov
lds
int
inc
push
stos
or
aad
es
ja
and
lahf
or
mov
aaa
mov
xchg
pop
xchg
imul
loop
enter
mov
imul
adc
inc
(bad)
test
xchg
xor
mov
aaa
pop
nop
cmp
jnp
dec
push
call
sahf
test
loope
aad
push
push
sbb
xchg
js
mov
fwait
(bad)
arpl
xchg
ret
cdq
test
cmp
ficomp
iret
sahf
out
jo
jmp
rcl
ins
pop
ror
cmp
popf
pop
dec
cmps
ds
fild
test
push
lds
jno
mov
sbb
cmp
xor
cs
(bad)
test
pop
add
out
stc
xchg
add
xchg
xlat
iret
jecxz
jl
es
icebp
pop
data16
add
sbb
mov
jg
sti
and
aad
int
mov
scas
out
pusha
les
rcl
xor
and
je
retf
daa
mov
sbb
push
jmp
sbb
test
lahf
stc
(bad)
mov
movs
pop
arpl
mov
daa
sub
xor
add
push
lock
pusha
cs
in
mov
cmps
int
in
jle
push
out
fst
pop
push
or
movs
push
sbb
ror
lock
mov
mov
jnp
sbb
rcr
std
jb
mov
sbb
pop
repz
dec
pop
inc
retf
cmp
fcmove
push
stc
cmp
inc
ds
push
add
call
mov
in
mov
xor
in
push
popa
popf
and
(bad)
shl
xchg
inc
mov
cs
stos
push
add
mov
mov
rol
push
aas
cmps
test
test
pop
xor
or
sbb
add
ror
dec
scas
mov
jmp
jp
dec
push
in
call
sahf
cmp
ret
fmul
jle
test
imul
loope
hlt
push
pop
into
push
xchg
dec
mov
or
inc
mov
imul
jne
push
movs
jmp
cmp
popf
sar
sti
jge
add
xchg
xchg
fbld
call
in
repnz
sar
inc
movs
xchg
aam
xor
pop
add
cdq
shl
jbe
xor
ret
xlat
mov
retf
fnstsw
pop
mov
mov
cwde
mov
and
dec
ds
jmp
fadd
neg
push
pop
test
xchg
and
pusha
(bad)
div
rol
loope
xor
xchg
pop
cmc
in
add
sbb
pop
push
mov
cmp
cwde
cmp
cli
pop
xchg
movs
mov
mov
inc
pop
jp
call
sbb
daa
jmp
out
mov
push
repz
or
or
add
ret
jns
mov
and
test
clc
inc
push
in
push
int
inc
in
sub
out
dec
fdiv
scas
jbe
jl
cmps
(bad)
cmp
push
test
pop
inc
cmps
bnd
and
hlt
pusha
dec
or
inc
sbb
in
xchg
cmp
sbb
and
inc
lods
cmps
jne
cmp
nop
push
add
dec
popf
repz
sbb
xor
out
dec
fwait
(bad)
(bad)
mov
adc
adc
frstor
sub
jl
into
cmp
xor
sbb
or
mov
sbb
pusha
shl
push
cmp
test
xchg
icebp
jecxz
out
dec
inc
dec
sbb
int3
inc
jl
movs
scas
push
pop
sahf
push
mov
jle
aas
fldcw
add
or
jmp
es
es
movs
lds
out
sub
and
cmp
push
fwait
popf
sbb
xchg
inc
stc
dec
jmp
shl
mov
fldln2
movs
xor
out
(bad)
retf
fs
sbb
inc
icebp
mov
mov
les
fistp
or
pushf
xchg
aas
lahf
mov
pop
daa
dec
mov
jle
inc
mov
imul
pop
jp
int
sar
aam
(bad)
and
sub
mov
retf
mov
mov
in
sub
jmp
int
add
jb
pop
xor
mov
pop
xor
popf
fmul
mov
out
pop
add
push
add
sub
cmp
gs
loope
adc
retf
arpl
mov
call
arpl
and
out
fstp
mov
inc
outs
cli
je
pop
and
mov
inc
and
inc
fnstsw
dec
fsubrp
push
ja
sbb
or
add
jns
xchg
xchg
mov
pop
sbb
cmp
inc
mov
mov
jp
push
pop
jbe
rcl
or
or
in
sbb
(bad)
clc
fld
mov
ret
dec
mov
or
cmp
loope
mov
lea
or
frstor
inc
pushf
rcl
cwde
dec
xor
pusha
lods
inc
xor
pop
pop
aad
mov
scas
arpl
or
(bad)
sub
add
and
stc
pop
cmp
mov
inc
mov
pop
outs
xor
test
push
imul
ror
jbe
repz
jne
push
cs
fcomip
or
push
jp
leave
jnp
add
clc
or
fiadd
push
in
(bad)
or
xor
mov
test
mov
test
mov
push
mov
inc
xchg
xchg
xchg
dec
sar
jmp
mov
cmps
mov
shr
mov
sub
out
ds
aas
jmp
bound
xor
shl
hlt
div
xor
and
enter
cli
ret
cmp
scas
mov
inc
ja
shr
xor
mov
mov
pop
and
mov
jns
add
scas
dec
loope
(bad)
and
in
dec
or
test
rcr
popf
je
jno
push
fmulp
fnsave
scas
fistp
repz
int3
mov
cmps
mov
mov
pop
jnp
cmp
cmp
cmps
inc
cmc
xor
aas
mov
ja
xor
cmp
jbe
clc
sbb
sar
aaa
(bad)
adc
neg
mov
push
mov
pop
xor
sbb
cli
dec
jbe
and
add
bound
add
jae
jno
sub
mov
xor
jge
dec
pushf
les
adc
daa
add
sar
jo
jbe
fisttp
call
test
cmc
rcr
leave
inc
pusha
fidiv
daa
inc
or
hlt
mov
and
je
aas
inc
push
or
jg
sbb
push
cmp
pop
mov
inc
mov
out
mov
mov
pop
cmps
adc
lods
loopne
sub
das
mov
outs
push
jno
mov
sbb
inc
pop
cdq
or
jp
int
das
imul
sub
mov
sbb
test
out
xchg
sub
and
inc
jg
cmps
stc
dec
mov
xchg
and
fcmovu
mov
cs
shl
adc
push
push
xchg
mov
add
inc
stos
and
ret
repz
cwde
fwait
mov
push
stc
add
jnp
mov
jge
pop
pop
dec
xchg
mov
repnz
sub
mov
cmp
and
xchg
cmp
(bad)
test
in
sbb
mov
jne
pop
xchg
popf
jmp
cld
sbb
push
int
int3
jno
gs
and
lahf
xchg
mov
iret
lea
push
sub
jae
mov
jp
fadd
nop
aaa
fwait
jne
lods
jo
and
sti
retf
inc
sub
cmps
fwait
add
xlat
fidivr
popa
xchg
sbb
push
adc
mov
ror
xor
repz
lods
loop
inc
mov
fisubr
inc
push
jecxz
test
dec
xchg
les
sub
clc
dec
cmps
clc
cmp
movs
add
sar
leave
add
sbb
mov
add
xor
push
loope
mov
and
in
inc
frstor
and
into
sbb
jae
or
adc
cmc
ins
cwde
push
jl
adc
mov
mov
test
dec
dec
loope
gs
sub
cmp
faddp
jb
or
(bad)
cmp
(bad)
pop
les
mov
jge
stos
push
cdq
ret
dec
xchg
std
pop
mov
(bad)
aad
mov
mov
pop
jle
adc
push
pop
pop
not
push
je
movs
aad
jge
cmp
sub
mov
pop
aam
pop
movs
out
out
push
sub
fisubr
inc
cmp
out
cmp
loope
pop
repz
sbb
xchg
sbb
add
popa
jle
test
adc
out
mov
push
push
movs
cmp
daa
jmp
lea
loopne
xchg
mov
inc
mov
stos
jae
sbb
sub
mul
push
inc
imul
pop
add
dec
dec
push
fidivr
ror
push
adc
mov
je
xchg
hlt
xor
cmp
inc
enter
pop
daa
jmp
jae
push
aad
xlat
(bad)
jae
ins
imul
jb
enter
dec
push
loop
out
stos
enter
(bad)
jmp
inc
xchg
sbb
inc
iret
pop
jp
adc
sub
call
add
daa
cmp
mov
pop
pop
neg
push
sub
fdivp
fs
rcl
add
dec
sar
cmp
dec
push
cmps
jecxz
js
std
cli
psubw
pop
bound
or
repnz
scas
fs
push
and
mov
dec
stc
mov
add
sar
mov
xlat
frstor
inc
pop
sbb
test
arpl
push
sub
scas
sar
cli
xchg
mov
mov
enter
pop
in
add
not
pop
retf
hlt
pop
sbb
outs
jbe
fisubr
xlat
or
cmps
jge
mov
dec
data16
add
iret
dec
das
movs
fild
mov
std
and
mov
mov
popf
jns
out
mov
pop
inc
xchg
popf
pop
leave
loope
packssdw
sbb
mov
xchg
inc
xchg
(bad)
ins
aad
mov
movs
cmp
nop
push
sahf
push
adc
ins
into
mov
sbb
ins
call
and
test
mul
iret
inc
adc
sub
push
dec
rol
pop
pop
xor
cmps
mov
ror
xchg
jo
add
cmp
push
sub
xchg
push
fisubr
add
inc
push
lea
gs
xor
mov
xor
inc
ret
xor
mul
adc
dec
test
mov
fstp
loope
int3
push
stos
cli
push
jo
mov
mov
outs
scas
xor
mov
mov
jae
ret
fwait
xlat
cmp
mov
fst
bound
mov
ds
or
in
js
fsubr
sar
lds
shr
movs
ins
dec
mov
xchg
mov
fcom
vcvttpd2dq
shl
outs
ret
gs
sub
mov
jecxz
mov
ja
pop
add
push
inc
push
dec
sbb
aam
inc
xchg
mov
fmul
push
(bad)
imul
les
sub
inc
repnz
adc
aaa
xchg
retf
xor
aad
out
xchg
data16
call
push
xor
in
jae
das
js
test
fisttp
popf
adc
arpl
repz
jo
cmp
clc
inc
add
ret
(bad)
jmp
loop
cmp
sar
out
inc
sar
stos
mov
xchg
or
lahf
loope
mov
adc
adc
out
mov
sub
pushf
jo
call
mov
retf
xor
mov
and
push
aam
ret
mov
dec
mov
dec
int3
outs
sub
fdivr
out
imul
and
in
pusha
mov
sub
in
leave
cmp
jnp
les
hlt
push
push
ret
jae
in
movs
cmp
dec
cli
ja
das
das
(bad)
sti
lock
mov
inc
push
rcl
in
pop
xchg
push
popf
or
push
add
cmp
push
xor
jne
ins
jmp
jns
je
(bad)
fcmovnu
mov
jg
aaa
mov
sbb
add
jmp
aam
xchg
lahf
pusha
ror
dec
mov
cdq
xchg
sub
cmc
mov
jle
into
not
add
jnp
mov
mov
sbb
cmps
adc
into
icebp
inc
and
mov
ja
fnstsw
(bad)
and
pop
clc
pop
jbe
pop
and
adc
adc
jb
adc
gs
stos
ins
icebp
cmp
xchg
push
iret
inc
into
pop
jmp
cli
mov
jo
sub
movs
lea
push
mov
mov
inc
mov
mov
sbb
push
dec
mov
jmp
aad
retf
add
cdq
cs
loope
test
movs
adc
adc
(bad)
fadd
and
ror
arpl
test
int3
jbe
adc
or
out
or
mov
dec
mov
xor
test
out
pop
xchg
xchg
push
mov
ret
mov
dec
xchg
jbe
push
pop
inc
dec
dec
adc
(bad)
push
sbb
lods
pop
sub
inc
in
outs
push
sbb
aas
clc
rol
mov
in
cmp
mov
xchg
enter
repnz
mov
aas
ja
mov
dec
into
popa
aam
mov
outs
mov
cmp
mov
je
dec
lods
add
in
rol
movs
ror
mov
movaps
mov
in
in
(bad)
in
movs
call
add
loopne
xchg
jl
adc
sbb
leave
es
xlat
movs
pop
dec
dec
sbb
loope
outs
test
dec
ret
loopne
push
stos
jo
or
or
test
inc
js
adc
aad
adc
loope
mov
jp
add
in
add
in
sbb
mov
cmp
cmp
mov
jns
scas
ret
adc
cmc
(bad)
xor
(bad)
jb
dec
jl
icebp
xor
clc
push
lds
ret
mov
sub
hlt
dec
or
mov
popa
xchg
retf
cmp
dec
add
adc
aam
jns
push
xor
fwait
mov
jl
adc
mov
aam
out
ret
mov
sahf
inc
xor
jns
push
or
movs
mov
lahf
mov
add
std
adc
xor
rcr
pop
cmp
sbb
stos
inc
sub
sub
xchg
push
cwde
fild
xchg
mul
dec
jecxz
(bad)
jg
mov
push
sub
push
pop
daa
ins
dec
mov
jle
jnp
pop
(bad)
call
push
xor
fild
(bad)
push
mov
sbb
jo
xchg
rcl
add
mov
inc
mov
icebp
dec
movs
ds
retf
(bad)
xor
dec
xchg
fwait
aas
aas
mov
jae
xchg
mov
jb
in
(bad)
hlt
push
jmp
inc
xor
test
inc
(bad)
jne
jne
shl
mov
mov
dec
test
ins
inc
pop
aad
xchg
xchg
sub
add
add
jno
outs
pop
in
mov
je
push
adc
sbb
pusha
xor
enter
cmp
cmc
lahf
sub
jbe
call
or
fdiv
loop
loope
adc
movs
push
fnsave
cmp
xchg
pop
adc
mov
adc
adc
push
xor
adc
mov
mov
mov
mov
int
jbe
jmp
push
pop
enter
(bad)
jp
cdq
xor
out
bound
loope
data16
popf
test
jle
xchg
adc
dec
mov
fdiv
fs
xchg
je
std
push
sbb
dec
clc
aas
cmps
imul
sbb
dec
xor
repz
cmps
add
xchg
test
sbb
fistp
mov
popa
sbb
or
lahf
inc
xchg
daa
mov
enter
adc
fidiv
mov
push
xchg
stc
and
mov
gs
xchg
mov
dec
movs
and
js
lock
mov
ret
xor
sbb
(bad)
ficom
ror
ins
jmp
xchg
cmp
test
sub
xchg
jmp
mov
pop
mov
and
sub
adc
jge
rcr
iret
fistp
or
adc
out
bound
mov
jo
cli
(bad)
ins
jl
or
xchg
ficom
mov
cld
xor
sub
cmp
mov
(bad)
mov
in
push
in
inc
(bad)
pop
xchg
lock
mov
cmp
and
popa
push
mov
push
push
jno
cmp
in
push
pusha
push
out
sub
rcl
xchg
sbb
sub
lea
icebp
(bad)
pop
shl
neg
sub
pop
xlat
dec
loopne
xor
jp
fld
movs
jl
jns
mov
mov
sub
pop
mov
clc
dec
jge
mov
ret
sub
add
ficom
popf
cmps
or
jmp
shl
in
xor
xor
test
and
push
fsub
inc
aad
dec
cmp
dec
lock
and
fdivr
test
out
xchg
retf
out
daa
mov
stos
data16
xchg
ins
xchg
jo
mov
std
mov
lds
push
jmp
dec
adc
jb
lock
jne
mov
mov
mov
or
mov
idiv
xor
mov
inc
add
mov
dec
cmp
adc
or
sbb
in
seto
jge
dec
mov
enter
es
dec
cld
dec
mov
add
in
xlat
xchg
mov
jmp
sub
mov
xchg
stos
fcomip
out
mov
mov
fcom
adc
and
fmul
mov
sti
loopne
sar
mov
aad
popf
popa
fmulp
cld
out
xchg
in
dec
lock
pop
into
push
mov
mov
jmp
std
test
bound
mov
das
stos
imul
ror
enter
jmp
fisubr
aaa
sti
dec
mov
sbb
lds
jo
imul
inc
ret
pop
mov
or
adc
jmp
push
inc
movs
sbb
jne
xchg
mov
je
mov
loope
xor
mov
dec
ins
push
xor
mov
and
pop
xchg
add
fucomi
inc
push
pop
adc
or
jp
jnp
sbb
jg
cmp
aas
mov
test
iret
out
dec
(bad)
rcl
xor
in
jp
fstp
xchg
in
xchg
ds
push
mov
adc
ins
jo
mov
ficomp
pop
leave
pop
sti
mov
xchg
mov
mov
jp
into
fadd
xor
popf
and
dec
pop
add
adc
(bad)
bnd
repnz
std
dec
les
mov
mov
cmp
pop
scas
repnz
xchg
cmp
jmp
dec
test
rcl
dec
pop
jne
jg
and
push
std
aad
aas
(bad)
xchg
add
push
in
adc
pop
lods
mov
dec
jmp
xchg
imul
test
retf
(bad)
test
lock
xor
stos
inc
xor
add
aad
jle
push
mov
aas
ss
mov
arpl
jp
jo
xchg
inc
call
cld
mov
cmp
neg
sub
fsubr
push
inc
cmps
(bad)
jne
mov
jae
sbb
inc
imul
aaa
sub
fidivr
adc
push
xchg
jne
rcl
inc
cmps
pop
pop
adc
repz
push
dec
mov
repnz
enter
cld
and
rcr
push
cmp
jg
jecxz
jmp
mov
movs
xchg
xchg
sbb
popf
ret
imul
xchg
(bad)
daa
imul
or
addr16
frstor
pop
int3
imul
aad
(bad)
jg
cmp
lods
neg
pop
cmp
jmp
pop
jecxz
or
imul
sti
fwait
das
(bad)
(bad)
fcomp
xlat
jmp
imul
mov
in
loope
fisubr
stos
(bad)
or
xchg
mov
cmp
out
into
jmp
jmp
cmc
xchg
enter
mov
lock
aam
cmp
mov
inc
push
call
mov
inc
xchg
mov
add
or
adc
in
jp
cmp
mov
mov
push
mov
out
sti
jge
xor
cli
repz
and
in
shl
sub
adc
enter
jmp
add
pop
sub
and
addr16
(bad)
jns
xchg
retf
bound
sbb
loope
sti
pop
dec
in
jae
mov
cld
pop
(bad)
push
outs
aam
imul
jnp
lods
push
lea
push
sbb
jb
ret
fdivr
sbb
test
sahf
pop
jns
cmp
dec
inc
mov
(bad)
idiv
jmp
cmp
dec
int
jle
add
loope
dec
jne
push
int
xchg
and
pop
aad
mov
mov
hlt
xor
in
es
cmp
aas
inc
ja
sub
and
dec
addr16
ds
das
mov
mov
cmc
aaa
outs
fidiv
pop
and
sbb
(bad)
je
inc
xor
cmp
fwait
mov
and
xchg
iret
mov
sub
mov
xor
mov
out
sub
dec
inc
add
iret
test
fcom
and
ret
xchg
push
push
jmp
ret
aas
pop
pop
push
stos
dec
pop
push
cdq
jne
xchg
(bad)
cmp
daa
sub
leave
(bad)
jmp
leave
inc
xor
call
into
retf
popf
test
jmp
xlat
scas
das
lods
std
fdiv
cli
jo
ins
xchg
(bad)
(bad)
cmp
mov
pop
xlat
and
(bad)
xor
call
adc
leave
mov
in
mov
push
imul
push
adc
inc
cmc
or
(bad)
cdq
les
int
dec
push
mov
sub
jno
sub
jbe
jae
pusha
jb
push
inc
xchg
lds
dec
mov
mov
fcomp
push
pushf
mov
mov
jg
gs
(bad)
arpl
xchg
add
jae
nop
xor
mov
push
cmp
pop
nop
or
jle
repz
jle
cmp
sbb
aad
inc
ins
pop
jae
or
pop
adc
cli
pop
sub
jg
ficomp
inc
xchg
jbe
and
icebp
inc
push
fisub
fcomi
dec
jmp
pop
adc
sub
add
sub
retf
imul
mov
das
push
lods
cmp
and
xchg
sub
scas
add
push
dec
xchg
push
daa
cmp
xor
jnp
or
jno
push
shl
sub
mov
test
lods
xchg
push
out
out
aad
mov
or
and
pop
adc
(bad)
in
inc
jbe
movs
jns
in
cli
cmp
mov
xchg
arpl
rol
jbe
or
inc
mov
ins
inc
mov
adc
loop
mov
in
mov
pop
dec
push
into
mov
(bad)
repnz
push
gs
out
(bad)
movs
mov
(bad)
sbb
sub
call
movs
xor
addr16
mov
lods
add
cli
int3
in
push
fild
imul
mov
movs
and
pop
and
mov
dec
pop
int3
pop
pop
(bad)
jnp
aad
pushf
mov
mov
ffreep
cmp
imul
les
movs
pushf
out
fsub
iret
(bad)
and
sub
fsubrp
repz
add
scas
ins
mov
mov
push
aaa
add
sub
inc
mov
jb
mov
addr16
aas
sti
imul
mov
sbb
in
out
aad
jns
push
rol
stos
push
xchg
jae
and
outs
dec
sub
mov
mov
xchg
(bad)
sub
jmp
jae
jne
call
mov
jae
push
shl
push
xchg
mov
adc
addr16
adc
cli
sub
mov
aaa
fild
and
inc
cmps
das
fwait
sub
adc
cwde
int
mov
push
ss
jmp
mov
mov
mov
dec
into
mov
xchg
or
add
lds
std
xor
shl
lock
loopne
imul
sub
gs
(bad)
shl
or
push
mov
lods
pop
mov
pop
sub
mov
adc
fwait
mov
movs
movs
into
inc
lods
ins
ror
(bad)
sub
loop
(bad)
jmp
mov
shl
sahf
shl
jbe
pop
xor
stos
cmp
outs
push
mov
icebp
pop
(bad)
std
inc
jae
aam
jns
push
test
and
ins
or
sbb
lds
jmp
cmp
xor
cmc
or
dec
or
mov
into
xor
pop
cmp
and
inc
jecxz
cmp
dec
inc
xchg
cmp
inc
std
es
out
ja
xchg
std
xor
mov
and
sbb
push
xchg
imul
mov
xor
lock
test
fdivr
imul
add
movs
mov
adc
ja
hlt
hlt
and
inc
jge
add
aaa
inc
movs
sbb
pop
jmp
stos
inc
jmp
sub
loopne
pop
loopne
mov
add
cdq
jmp
int3
cmps
inc
retf
and
push
js
mov
xor
cmp
inc
adc
mov
lods
adc
ja
ss
pop
in
in
or
cmc
cli
test
pop
add
mov
jb
paddd
shr
xchg
mov
jp
lahf
aad
xchg
dec
jnp
cdq
scas
dec
adc
sub
aas
xchg
push
push
mov
push
jns
mov
jmp
inc
out
loope
ror
xor
outs
aas
xchg
imul
adc
test
(bad)
mov
cdq
cmps
pusha
cmp
dec
xchg
ja
ror
std
cmps
sbb
fild
xor
sbb
enter
cld
dec
push
add
das
(bad)
(bad)
push
addr16
inc
pop
jmp
add
adc
or
sbb
push
(bad)
ficomp
and
sub
push
sub
add
cdq
add
test
dec
repz
ins
sub
jle
aaa
push
sysexit
stc
mov
sub
imul
or
hlt
not
and
jae
gs
dec
lea
mov
inc
outs
pop
adc
call
shl
or
jmp
jmp
jg
adc
mov
movs
push
xchg
xchg
int3
mov
push
mov
cmp
mov
into
inc
push
jno
cmps
pop
cmc
cmp
aaa
mov
cmp
retf
push
pop
mov
push
stos
out
jae
test
push
test
aas
jl
div
mov
fs
push
pop
lds
pop
les
test
lock
xor
pop
push
repnz
fwait
std
mov
pusha
rcl
or
retf
xor
push
movs
push
jne
ficomp
mov
cwde
outs
aad
inc
mov
cmc
or
test
xor
and
ja
pop
adc
lods
jb
add
loope
imul
xchg
adc
(bad)
mov
ss
popf
xchg
xor
pop
(bad)
mov
cmc
test
dec
leave
xor
inc
aam
dec
xchg
hlt
and
dec
outs
rol
mov
ret
mov
sub
dec
out
(bad)
movs
retf
jge
daa
fcmovnbe
cmc
or
inc
fnsave
xor
(bad)
pop
mov
mov
mov
cmp
sbb
scas
daa
movs
fwait
(bad)
lods
sbb
cmp
popf
push
sti
pop
add
pop
out
mov
daa
mov
and
inc
inc
push
xor
pop
repnz
xor
and
jmp
mov
sbb
push
cmp
call
out
push
sbb
jnp
dec
push
jo
pushf
mov
sti
test
pop
mov
jmp
sbb
call
inc
imul
sub
dec
mov
fmul
js
(bad)
pop
push
mov
jecxz
ficomp
mov
pop
rcr
ds
xlat
xor
cmp
cmp
xor
ja
scas
add
scas
int
pop
pop
fcmove
das
cmp
add
push
mov
mov
lods
pop
retf
(bad)
cmc
or
and
(bad)
fmul
add
ror
mov
outs
lods
loop
mov
idiv
or
cmps
inc
retf
shl
stos
xchg
add
xchg
cmc
xor
xchg
mov
cmp
sub
inc
xchg
mov
loopne
rcl
mov
mov
pop
mov
sti
and
(bad)
stc
neg
pop
(bad)
je
add
xor
lock
popf
test
test
mov
leave
sbb
and
sub
sub
xor
sub
xor
jne
mov
push
bnd
scas
scas
mov
mov
test
inc
adc
lods
ret
test
and
add
cmc
pop
xchg
stos
test
inc
push
popf
lds
sub
arpl
aas
test
xor
and
inc
jp
fs
loope
adc
jmp
out
xchg
ss
jmp
jmp
dec
lods
movs
mov
scas
pop
ss
jecxz
repz
popf
push
sub
out
push
inc
loop
dec
mov
movs
aas
rdmsr
dec
(bad)
stos
ss
pop
adc
xor
mov
adc
jae
push
inc
jnp
daa
icebp
sub
jmp
jmp
mov
sub
jge
into
pop
pop
mov
(bad)
cmp
xchg
mov
or
(bad)
jo
shl
dec
or
aam
jne
or
dec
jno
imul
movs
mov
or
xlat
dec
xchg
leave
xor
cdq
xor
mov
stos
pop
(bad)
push
out
dec
lock
and
repz
(bad)
cdq
ins
pop
les
sub
jle
lahf
out
mov
cld
dec
xlat
ins
pop
or
aam
movs
xor
push
inc
icebp
in
icebp
and
bound
mov
loopne
xchg
sub
sbb
adc
and
push
shl
inc
xor
pop
enter
cli
retf
shl
mov
(bad)
fimul
fwait
dec
or
add
(bad)
jmp
in
jns
shl
dec
clc
add
popa
repz
and
xchg
jmp
mov
dec
ret
xchg
mov
sbb
push
mov
lock
adc
imul
in
stos
stos
pop
pop
repnz
jne
lahf
daa
loope
adc
out
xor
js
not
dec
jo
lods
dec
pop
bound
scas
xlat
repnz
ds
fnstsw
lods
sub
loop
pop
xor
cmp
out
pushf
adc
cs
add
sub
dec
sub
loop
jmp
jg
lods
lods
stos
dec
cli
leave
jg
retf
mov
das
test
xchg
cdq
out
sti
lock
mov
add
jnp
xor
xor
(bad)
inc
cli
inc
(bad)
mov
xor
dec
fsubrp
push
push
adc
repnz
inc
scas
fnsave
sub
xor
lea
cmps
cmps
or
das
push
arpl
jle
push
sub
mov
repz
popa
fstp
loop
adc
push
sub
sbb
xchg
lea
mov
push
mov
(bad)
sub
inc
push
pop
mov
movs
add
call
or
(bad)
jo
(bad)
loopne
dec
mov
mov
test
out
fild
mov
inc
push
sti
sahf
inc
dec
scas
ret
push
cmps
jne
clc
call
fsubr
loope
dec
and
std
imul
mov
lods
lock
mov
pop
pop
ins
jae
mov
repz
lea
dec
adc
cmc
push
jmp
(bad)
cs
shl
mov
jecxz
mov
int
pop
dec
sbb
inc
adc
fidiv
mov
sar
cmp
dec
and
push
mov
jecxz
pop
jle
popf
mov
jb
imul
in
test
scas
sbb
mov
test
test
mov
mov
setne
idiv
fild
and
stc
dec
jmp
inc
pop
mov
(bad)
cs
ffree
add
repnz
test
std
imul
div
in
shr
outs
jge
inc
and
test
mov
(bad)
out
sub
sbb
aas
dec
sahf
ss
mov
stc
outs
cmp
gs
es
mov
pop
jecxz
imul
call
mov
pop
retf
stc
into
mov
mov
dec
iret
shl
cmps
mov
jo
and
add
mov
jno
mov
out
arpl
mov
outs
stos
leave
fsub
je
daa
mov
fnstenv
lea
icebp
mov
cwde
sbb
loop
push
mov
push
das
retf
xchg
in
mov
push
cmps
fldl2e
loopne
inc
imul
shl
xchg
jmp
pop
add
test
dec
sbb
inc
(bad)
and
neg
mov
xchg
jp
fstp
push
push
stos
mov
add
stos
pop
cld
or
call
cmp
xchg
loopne
xchg
cmc
mov
and
mov
shl
xor
lock
or
test
stc
lock
js
(bad)
jge
jge
and
xor
jge
adc
inc
xor
mov
jno
or
xchg
ss
dec
mov
ins
add
daa
sbb
out
mov
dec
pop
mov
movs
mov
mov
xchg
pop
and
cdq
sti
jmp
mov
movs
push
lea
dec
test
nop
pop
shl
mov
popa
pop
mov
sbb
mov
ror
dec
inc
mov
cmp
cld
mov
pop
pop
inc
or
or
mov
(bad)
aad
mov
dec
(bad)
sar
mov
in
mov
outs
sahf
pop
jb
sbb
xor
mov
ins
sar
and
out
fwait
iret
adc
aam
scas
sub
ins
fs
sub
daa
sub
sbb
xchg
jae
or
xchg
dec
sub
fld
rcl
(bad)
sbb
mov
adc
aaa
push
std
retf
dec
je
mov
adc
push
aam
out
shl
test
mov
or
js
iret
(bad)
loop
out
sbb
int
xchg
xchg
dec
or
sub
fisub
jnp
retf
xor
fdiv
mov
xor
je
rcr
ins
cmp
(bad)
push
call
pop
scas
lahf
out
adc
and
cmp
scas
push
sbb
xchg
mov
cmp
jmp
push
mov
sub
cmp
jns
(bad)
mov
pop
stos
adc
outs
out
fidiv
fwait
jns
push
mov
cmp
cli
retf
sub
cmp
in
jae
mov
pop
clc
les
sub
mov
imul
(bad)
sbb
push
lods
inc
rep
or
sub
cmps
mov
mov
mov
gs
push
and
adc
aam
pop
sbb
xchg
mov
je
test
adc
and
mov
scas
pop
sar
imul
dec
les
jge
xchg
dec
dec
mov
add
xor
mov
pop
and
jmp
adc
movs
or
js
ins
jmp
neg
ss
cmp
sub
mov
sbb
addr16
or
xchg
idiv
sbb
out
ds
mov
dec
hlt
mov
call
or
test
push
jbe
or
lds
mov
jmp
daa
mov
pop
lea
jb
mov
jne
push
push
sar
mov
retf
cwde
call
sub
addr16
mov
stc
push
cs
xor
jae
retf
(bad)
leave
jb
cmc
stos
vpdpwssd
and
add
jecxz
out
ror
std
adc
mov
fwait
ins
sub
cmp
mov
adc
cdq
cmp
(bad)
push
(bad)
loop
xor
or
aas
stos
test
pop
xchg
jl
pushf
mov
cmp
sub
lds
out
(bad)
adc
add
fidivr
pop
jl
or
in
sub
out
jb
sti
int3
cmp
mov
push
push
push
iret
xchg
mov
retf
add
bound
adc
mov
aaa
inc
test
jno
push
into
mov
add
mov
mov
fistp
sub
in
mov
out
add
pop
mov
sbb
dec
movs
sub
arpl
arpl
aaa
fiadd
mov
(bad)
repz
das
inc
xor
jns
mov
add
rcr
inc
inc
jns
in
cs
sub
and
fidiv
mov
adc
repz
xchg
mov
pop
fcomp
pop
loopne
cdq
or
jnp
cld
in
adc
repnz
int3
or
jne
xor
cld
xchg
cld
xor
xchg
or
test
mov
iret
loop
ins
jl
dec
fincstp
fadd
(bad)
jb
hlt
pop
mov
loope
loope
sub
jp
dec
pop
sbb
mov
mov
mov
sbb
mov
push
pop
ret
push
fmul
jbe
mov
lea
mov
mov
gs
jne
dec
pop
ja
jns
mov
jnp
pop
mov
cld
scas
xchg
xor
ret
shl
xorps
jb
mov
clc
xor
dec
call
cmps
sub
pop
inc
jge
sub
ret
mov
imul
pop
cmps
sbb
add
cmp
out
cli
pushf
pusha
jl
pusha
push
pop
push
cmp
jae
add
inc
out
push
pop
inc
and
mov
jnp
push
jle
push
inc
push
mov
xor
stos
shl
test
cs
and
fst
popa
pop
sbb
pusha
dec
cmps
pop
sbb
pop
leave
outs
out
pop
xchg
adc
stos
outs
ficomp
sahf
outs
mov
in
clc
movs
or
or
popa
pop
pop
std
jmp
xchg
or
xor
in
cmps
popa
shl
xchg
mov
push
daa
fild
or
pop
(bad)
cmc
cmps
bound
and
setnp
cmc
and
push
rcr
movs
pop
gs
aad
xlat
and
inc
mov
stos
xchg
sub
sub
add
lahf
xchg
xor
lock
aam
stos
outs
fadd
pop
and
fsubr
sbb
call
call
or
(bad)
push
cwde
(bad)
mov
shr
fisttp
mov
js
xchg
jb
jo
aam
jne
mov
popf
lahf
sbb
not
ror
cmp
and
and
jmp
mov
loopne
cmc
aas
sub
cdq
fld
push
call
sbb
sub
sbb
add
outs
dec
fadd
and
out
adc
outs
cmp
imul
test
ror
in
xchg
(bad)
adc
dec
ins
js
out
fdiv
cmps
into
mov
inc
lods
mov
push
adc
aas
xchg
cmp
xor
out
sub
jne
out
push
sbb
es
(bad)
aam
rcl
pop
push
mov
rol
fwait
adc
ror
mov
cwde
inc
and
cmp
jge
mov
mul
xor
scas
clc
push
gs
add
inc
mov
mov
inc
(bad)
mov
mov
jae
xor
mov
mov
xchg
jp
(bad)
mov
das
cmc
dec
cmc
test
nop
(bad)
call
pop
mov
and
loopne
inc
mov
sub
dec
lahf
jno
sbb
pushf
movs
xchg
(bad)
out
enter
clc
adc
sbb
mov
stos
int
std
cld
repnz
inc
out
xabort
mov
cs
dec
xchg
jecxz
lahf
cmp
add
pop
pop
adc
cdq
jle
xor
sub
fdivp
sbb
fsubr
or
pop
dec
pop
dec
outs
aam
mov
mov
mov
push
into
jp
sub
or
test
mov
fild
and
and
mov
loop
inc
jae
aaa
or
mov
dec
sub
mov
out
fisttp
mov
enter
dec
xchg
mov
ror
inc
pop
mov
neg
cmp
jo
fs
inc
inc
sar
(bad)
mov
xchg
pop
retf
in
in
mov
shr
in
and
or
ss
into
sub
xor
repnz
mov
and
bound
pop
cmp
sbb
xor
pop
cmp
mov
dec
retf
mov
data16
xor
xor
cmp
sub
adc
ins
sub
mov
mov
dec
xchg
adc
push
pop
stc
sub
das
fadd
adc
adc
rcl
mov
push
rcl
test
dec
enter
jmp
mov
movs
leave
inc
inc
test
leave
xchg
loope
int
in
in
out
dec
xchg
movs
pop
iret
aas
mov
or
mov
dec
ror
call
add
stc
retf
inc
sti
dec
retf
enter
repz
xchg
mov
or
dec
push
cwde
and
mov
test
fiadd
loopne
lahf
jbe
out
mov
aas
dec
mov
sub
test
mov
pop
aam
cmp
xor
or
sub
xchg
in
scas
add
scas
sbb
pop
cdq
ss
arpl
push
xlat
test
mov
loope
fstp
push
dec
sahf
mov
mov
in
test
test
or
push
(bad)
and
xlat
sub
mov
and
mov
cwde
pop
push
inc
xor
test
mov
cmp
jge
les
cmp
and
int
push
mov
jne
cmp
mov
mov
mov
pop
fild
and
dec
push
lock
dec
aas
cmp
jns
mov
les
lds
dec
jp
mov
repnz
mov
(bad)
retf
sub
mov
push
mov
pop
arpl
and
push
div
stos
jno
iret
test
adc
call
test
and
inc
pop
inc
and
pop
jmp
push
clc
in
loope
pusha
sub
jge
mov
daa
lahf
jmp
mov
push
cmps
or
fst
dec
mov
movs
lods
add
pop
push
adc
fild
add
mov
xchg
fisubr
sub
adc
retf
push
jne
test
ja
pop
inc
dec
push
xor
movs
in
jecxz
xor
out
cmps
out
dec
pop
jae
dec
adc
cmc
and
movs
jae
nop
clc
push
(bad)
rol
xchg
pop
lock
cmp
(bad)
fdivr
jmp
das
jbe
adc
loopne
mov
sbb
pop
mov
xchg
mov
and
dec
or
out
dec
push
jbe
mov
lock
mov
mov
jmp
jno
ja
xchg
nop
sbb
inc
call
jb
std
(bad)
aas
les
repz
push
cwde
lods
sub
sub
test
sti
popa
repz
mov
lds
popf
lock
xchg
xor
cmps
inc
ror
push
or
sbb
addr16
inc
cdq
fst
ficomp
out
fs
push
push
xchg
lahf
cs
outs
pop
pusha
inc
sub
push
push
mov
inc
scas
and
dec
xchg
pop
jecxz
mov
cwde
loop
scas
mov
mov
push
push
jnp
scas
out
inc
addr16
call
jbe
adc
(bad)
pop
mov
ds
sbb
pop
in
mov
jne
cmps
sbb
icebp
cs
outs
mov
mov
outs
xchg
hlt
fs
jnp
retf
sub
adc
scas
scas
push
mov
mov
scas
cwde
xchg
jg
fwait
add
cmp
sub
dec
mov
int
cdq
mov
(bad)
test
(bad)
stc
loopne
pop
test
cmp
push
ret
(bad)
int
jne
push
sbb
(bad)
adc
mov
mov
leave
scas
cmp
and
loope
into
dec
and
push
dec
test
cli
add
stos
pop
mov
jmp
xor
and
add
add
cmps
dec
arpl
xchg
ins
inc
jae
lea
sub
call
add
cmc
and
pop
fucomi
aad
clc
jge
dec
add
and
and
mov
clc
repz
push
jo
adc
ja
inc
inc
adc
fisubr
xchg
and
data16
dec
into
stos
adc
and
loop
lods
mov
inc
cmp
in
outs
push
cmp
xchg
ficomp
fst
jb
inc
pop
call
add
jmp
cmp
add
iret
add
jns
addr16
mov
ret
lds
sub
mov
push
mov
push
cdq
push
std
cmp
add
cmp
inc
xchg
in
jnp
pop
out
push
mov
mov
in
stos
lods
jmp
mov
out
outs
xlat
pop
dec
dec
movs
dec
test
pop
(bad)
inc
fwait
fwait
call
imul
movs
inc
push
jmp
xchg
pop
iret
xor
imul
imul
add
movs
scas
mov
dec
data16
rol
sar
popf
add
xor
mov
je
mov
pop
ret
shl
mov
(bad)
div
xchg
xor
mov
dec
dec
dec
inc
xlat
mov
dec
rol
add
pusha
(bad)
mov
and
int3
outs
push
aaa
arpl
cdq
fstp
add
dec
ror
cmps
cmp
pop
jne
ja
clc
adc
xor
cmc
in
lahf
inc
sbb
in
add
rol
and
inc
jp
lods
sbb
aam
xor
push
push
in
adc
loop
or
(bad)
pop
or
loop
dec
leave
sub
repz
pushf
call
push
add
movs
mov
ficomp
sub
(bad)
cli
sub
jb
scas
loop
dec
(bad)
xlat
rol
mov
sub
shr
iret
jmp
scas
cdq
push
sbb
push
jp
xchg
(bad)
aas
in
outs
push
mov
sub
stc
mov
mov
sub
sub
xchg
lods
(bad)
push
pusha
imul
lds
sub
stos
or
pushf
xchg
cld
sbb
jne
pop
push
xor
pop
movs
int3
cld
nop
pushf
pusha
cmps
sub
scas
jbe
int
test
or
in
push
loopne
pop
cwde
rcl
jge
push
dec
lahf
and
cs
enter
stc
push
push
pop
imul
xor
cmp
cmp
cmp
dec
js
(bad)
and
mov
mov
jle
cli
out
mov
push
cmp
mov
push
mov
adc
gs
add
mov
popa
xor
int
hlt
nop
or
(bad)
sub
jb
mov
rep
into
outs
mov
aad
sysexit
push
xor
stos
push
fcomp
out
(bad)
ins
xchg
dec
leave
inc
and
outs
shl
aad
xchg
xchg
stos
and
cmc
into
std
pop
ret
shr
sub
inc
push
dec
push
cli
(bad)
jecxz
pop
or
je
cmp
pop
xchg
(bad)
pop
outs
pop
pop
add
fdivrp
imul
add
xor
clc
xchg
in
mov
sub
rol
rol
mov
fstp
imul
mov
xor
mov
scas
cmc
xor
scas
dec
not
xor
add
daa
movs
iret
(bad)
sbb
xor
jmp
arpl
cmps
xchg
rol
mov
jne
push
addr16
mov
pop
mov
test
jg
shr
xlat
(bad)
push
sbb
and
and
xlat
jecxz
fcomip
hlt
jnp
rcr
gs
push
pop
(bad)
mov
sub
aas
sbb
mov
mov
repz
lods
aas
xchg
and
jge
pusha
rol
cdq
int
or
mov
dec
aaa
into
test
mov
add
pop
clc
mov
jns
loopne
(bad)
adc
xor
lahf
(bad)
ds
imul
stos
pusha
setle
sub
fwait
mov
scas
xor
rol
or
setnp
xchg
push
outs
or
stos
(bad)
fistp
pushf
push
pop
in
inc
in
daa
fist
addr16
add
push
call
pop
push
repz
mov
sbb
inc
fst
cld
inc
adc
sub
aas
cmc
jl
fwait
out
inc
adc
dec
push
pop
mov
pop
mov
dec
xchg
push
and
mov
test
ins
pop
inc
sbb
cdq
adc
xchg
dec
sbb
arpl
(bad)
mov
sbb
sub
jbe
xor
(bad)
pop
call
out
cmc
into
push
sub
mov
retf
out
repz
cwde
sub
repnz
out
imul
icebp
pop
xchg
hlt
cmps
jmp
imul
outs
leave
inc
mov
scas
cwde
mov
xchg
fsubr
(bad)
(bad)
push
retf
push
shl
sbb
test
xor
pop
stos
out
movs
xlat
lea
lds
mov
cmps
jbe
cld
in
call
lds
sub
mov
inc
jnp
(bad)
popf
xchg
repnz
jns
xchg
inc
jnp
pop
xor
rcr
cdq
neg
mov
jbe
pusha
aam
into
mov
popa
stc
inc
les
cmps
adc
dec
stos
(bad)
xchg
ja
mov
or
dec
sti
std
test
push
jne
fadd
(bad)
ja
aaa
ins
cs
ins
in
pop
sub
movs
and
outs
jne
test
sub
push
kandw
fwait
add
movs
neg
sub
and
or
cdq
fst
pushf
ja
imul
or
lock
cld
push
sub
cmp
int3
jle
fs
xchg
ja
das
icebp
out
in
mov
out
out
cmp
push
jp
jns
(bad)
jae
ins
ror
add
std
out
(bad)
in
lds
sbb
or
mov
std
dec
fnstenv
add
pop
fsub
mov
outs
xchg
les
mov
enter
pop
xchg
cmp
jl
mov
imul
or
sbb
in
movs
mov
outs
xor
pop
(bad)
gs
in
or
push
movs
ja
sub
push
xor
and
(bad)
loope
mov
ins
adc
xor
mov
enter
cmp
push
pop
lea
lea
push
mov
cmp
cmp
mov
fcmovne
das
pop
into
cmp
out
clc
add
jnp
sub
xor
cmps
aad
adc
sub
mov
pop
push
jno
or
(bad)
dec
adc
fwait
cmp
mov
sub
fild
cld
cmp
add
inc
jge
in
clc
in
ret
push
inc
lea
push
stc
jp
fsubr
call
imul
cmp
adc
adc
pop
in
add
ins
and
inc
lea
add
sub
push
xchg
jmp
(bad)
cmc
lds
mov
ja
dec
pop
mov
call
sahf
stos
sar
adc
cmp
or
inc
xchg
out
mov
add
xor
adc
daa
cmps
sub
out
xor
fwait
in
sbb
shr
or
and
or
daa
adc
inc
out
jmp
xchg
loop
popa
mov
fbstp
and
sub
aad
fisubr
lods
es
mov
ins
adc
inc
mov
or
aad
cmp
jge
adc
pop
add
jo
push
add
mov
aad
repz
pop
icebp
cmp
mov
fstp
pop
fs
mov
shl
dec
adc
sub
pop
mov
and
(bad)
pushf
jge
sub
jne
pop
jns
mov
(bad)
das
scas
and
adc
sub
jl
sahf
and
or
pop
loop
xchg
scas
and
js
popa
je
jge
inc
dec
(bad)
adc
jl
sub
sbb
clc
pop
xor
or
jg
xor
(bad)
jne
ret
push
int3
aad
(bad)
nop
inc
cmp
inc
icebp
test
push
imul
xchg
mov
inc
adc
sbb
jno
rcl
arpl
add
outs
dec
hlt
mov
jg
loop
mov
inc
imul
int
in
add
ror
dec
or
push
inc
fld
shl
xchg
outs
bound
adc
xor
inc
jo
adc
cld
push
jns
push
outs
popa
loope
mov
sahf
popf
push
mov
mov
stos
fcomip
jb
(bad)
hlt
sub
mov
jecxz
mov
je
imul
fcmovu
or
inc
jns
ss
push
fcomp
retf
fmul
and
adc
(bad)
mov
push
mov
xchg
cmp
sbb
outs
sub
cmps
loop
js
mov
jge
aas
pop
sub
cmp
lods
(bad)
ret
gs
mov
stos
xor
addr16
xchg
dec
fcomp
mov
fild
popa
fwait
mov
mov
jb
(bad)
rol
jmp
cli
sbb
jp
cli
xor
imul
sub
and
jg
(bad)
jge
mov
test
loopne
popf
shl
fimul
pop
push
ins
fsub
cmp
int
sub
sar
jmp
pushf
sub
repnz
popf
mov
(bad)
fst
in
cmc
mov
repz
xchg
outs
idiv
adc
dec
imul
fwait
(bad)
pop
xor
sub
sbb
jp
(bad)
div
cmp
cs
shl
pop
pop
fstp
pop
jge
std
jnp
cld
mov
leave
jecxz
push
dec
jmp
ret
mov
mov
xchg
and
xor
pop
and
jno
loope
arpl
or
inc
pusha
or
cmp
or
sub
ret
pop
xchg
push
push
cli
mov
(bad)
xlat
inc
push
lahf
shl
scas
jns
inc
(bad)
fstp
add
or
push
xchg
cmp
cmp
fs
retf
or
add
or
jge
scas
cmp
cmp
hlt
shl
addr16
mov
xor
sti
cli
push
cmps
xor
aad
sub
mov
and
xchg
in
sbb
pop
out
fs
xchg
mov
inc
repnz
xchg
enter
adc
addr16
vshuff64x2
xchg
cli
sub
leave
imul
and
sub
pop
adc
ds
push
jg
fnsave
fadd
adc
inc
loope
cmp
mov
inc
pop
fistp
mov
imul
in
ret
movs
call
push
popa
mov
das
cdq
cmp
mov
(bad)
mov
push
xor
out
sbb
jnp
mov
out
xlat
lock
into
xor
inc
ret
mov
fisttp
dec
retf
xchg
outs
jnp
cli
stc
sbb
cmps
and
dec
ja
jne
jo
xchg
xor
dec
js
(bad)
push
(bad)
fdivr
fwait
mov
jecxz
and
sahf
jp
jmp
mov
sub
jecxz
cli
jl
dec
loope
aam
mov
(bad)
push
adc
fild
fisttp
(bad)
or
test
cmp
stc
popf
test
mov
js
cld
das
or
dec
or
push
jo
sbb
cmp
add
push
xchg
sub
sub
mov
mov
fbld
in
mov
mov
mov
push
div
mov
mov
fcomp
iret
daa
retf
sbb
or
js
mov
in
in
and
push
cmp
jle
push
rcl
test
mov
or
pop
add
pop
mov
outs
xchg
stos
mov
or
sar
cmp
pop
add
nop
repnz
mov
fstp
mov
and
xchg
mov
cmp
test
mov
inc
jmp
adc
lods
adc
jmp
pusha
(bad)
adc
mov
fisttp
lds
lea
push
into
cvtdq2ps
push
cdq
push
jae
movs
xor
or
push
call
inc
ret
or
jno
mov
cmps
xchg
jns
dec
fwait
push
(bad)
shl
mov
mov
xchg
(bad)
test
jnp
ret
push
mov
mov
cmp
out
(bad)
test
cmp
shl
cmp
push
call
ja
daa
dec
adc
dec
sub
je
mov
cmc
(bad)
pop
int
mov
mov
in
sub
shl
adc
sub
adc
mov
pop
sub
dec
(bad)
and
ja
sbb
ret
fsubr
(bad)
inc
cli
(bad)
jle
xor
cmp
cmps
nop
and
cmp
dec
(bad)
cmp
push
xor
push
ins
in
out
push
jne
clc
pop
scas
les
push
mov
jp
jno
scas
data16
fmul
clc
xchg
cmp
or
sub
push
mov
aas
push
cmp
jl
xor
pop
icebp
cmp
push
and
add
push
dec
gs
loopne
fisubr
movs
out
pushf
mov
fstp
xchg
mov
punpckldq
mov
mov
arpl
xchg
mov
cmps
ins
mov
mov
lods
adc
xor
repz
out
sbb
mov
sahf
adc
outs
daa
push
xor
lods
cmp
jg
mov
adc
out
xor
mov
lods
daa
popa
scas
adc
pop
ins
xchg
add
lea
ja
mov
mov
sahf
dec
push
into
mov
or
shr
imul
movs
jp
mov
jbe
jmp
jge
enter
(bad)
fwait
xchg
push
imul
(bad)
lea
jp
outs
xor
cmp
test
dec
mov
ja
(bad)
dec
mov
mov
addr16
pop
out
lds
mov
mov
xchg
inc
and
aad
mov
add
cmps
mov
std
rcr
push
jg
cmp
xor
xor
mul
call
sbb
push
xchg
ds
xchg
mov
and
sbb
mov
cmp
mov
mov
mul
fisttp
xchg
push
jb
inc
pop
loop
not
sbb
lea
lahf
nop
cmps
xchg
sub
out
cli
fwait
adc
fmul
test
xchg
xlat
ror
inc
shr
jb
mov
popf
repz
(bad)
out
mov
sbb
mov
adc
sub
in
mov
(bad)
jbe
pop
popf
xor
cmc
into
jmp
dec
pop
cmc
xor
adc
dec
pop
mul
outs
div
call
lock
fimul
cmp
movs
fnsave
cli
dec
pop
xchg
cli
retf
popf
add
sahf
std
daa
xchg
repz
aad
test
jno
xor
lods
ret
xor
push
not
adc
xchg
cli
pop
cdq
mov
mov
jno
shr
xor
hlt
test
je
and
push
push
fisub
or
int3
sub
mov
gs
mov
pop
jnp
push
inc
add
int
xor
xchg
aam
sub
jae
inc
xor
xchg
movs
into
sbb
fild
xchg
movs
pop
fbld
mov
lahf
ja
dec
(bad)
xor
sub
in
pop
xchg
cmps
lds
test
mov
pop
or
pop
(bad)
push
mov
cmp
mov
dec
loop
inc
test
fldcw
xor
sub
xor
push
pop
retf
arpl
icebp
xor
scas
mov
(bad)
rol
mov
outs
mov
mov
clc
fisttp
mov
aas
out
aas
int
add
sbb
mov
sbb
test
ret
and
xchg
cmp
int
mov
sbb
mov
mov
(bad)
into
cmc
push
(bad)
call
into
mov
push
std
mov
xchg
adc
mov
pop
loop
mov
cdq
rcr
mov
jle
enter
or
(bad)
repnz
mov
div
cs
aam
and
mov
sbb
call
sbb
int3
fldcw
lahf
fld
xor
add
sti
fistp
mov
push
mov
xchg
addr16
and
jno
idiv
pop
xor
push
pop
fstp
pop
and
retf
jge
jl
dec
and
(bad)
mov
inc
xlat
pop
or
imul
adc
push
sub
ds
ss
inc
pop
cdq
jae
loop
test
pop
cmps
adc
scas
mov
push
pusha
sub
dec
inc
cmp
pop
xchg
loope
mov
or
cli
(bad)
stc
test
sub
push
xchg
mov
inc
mov
fs
xchg
mov
pop
jno
hlt
push
ins
into
mov
add
adc
xor
(bad)
jnp
shl
stos
(bad)
adc
aas
std
lock
addr16
and
les
push
das
fisttp
into
int
sti
or
imul
adc
mov
mov
lods
fs
in
cld
xlat
movs
pop
push
ins
xadd
xchg
or
lock
jp
jecxz
daa
xor
mov
lods
jmp
pop
adc
test
js
scas
sbb
out
sbb
jno
mov
mov
jmp
mov
sahf
and
inc
jns
mov
loope
popf
adc
bound
movs
mov
or
push
je
xor
repnz
cmp
inc
and
xchg
or
fiadd
ret
mov
or
cmp
jne
mov
xor
inc
ins
test
pop
inc
clc
sti
dec
fisttp
xchg
int3
outs
mov
mov
in
mov
mov
mov
ins
adc
dec
push
jnp
out
sub
(bad)
sbb
shl
retf
adc
fist
imul
mov
mov
test
mov
(bad)
dec
mov
dec
sub
movs
sbb
(bad)
arpl
jns
setae
loopne
sbb
jle
jno
(bad)
cmc
jo
in
and
popf
sbb
xor
adc
xor
adc
repz
(bad)
shl
or
or
xchg
push
and
cmp
jns
pop
jb
jae
mov
adc
inc
iret
out
stos
dec
not
fisttp
gs
arpl
and
cwde
(bad)
and
push
xlat
outs
mov
add
push
jo
cmps
mov
shr
push
ficomp
es
pop
movs
xchg
pop
xor
add
loopne
hlt
sub
push
dec
(bad)
loope
inc
push
xchg
imul
cmps
push
dec
imul
and
and
jb
daa
fsub
sahf
into
js
pop
in
int3
or
push
dec
ja
mov
ja
cwde
movs
mov
sub
cmp
jmp
pop
popa
dec
dec
icebp
xlat
fiadd
xchg
mov
pop
adc
rcr
cmps
aad
add
jb
pusha
sti
jns
enter
and
popf
out
push
xchg
cmps
jnp
or
inc
repz
or
inc
clc
pop
sbb
stc
loope
test
enter
loopne
xor
add
out
jns
aad
stos
jae
xchg
xor
mov
cmp
adc
dec
mov
inc
int
(bad)
jns
pop
jb
push
fisubr
(bad)
cmps
lock
xchg
imul
fnstsw
in
push
jecxz
int
fs
rol
in
push
rcr
pushf
inc
adc
not
push
push
mov
add
fdivr
mov
in
pop
sar
push
jecxz
cdq
jecxz
in
fild
jge
add
test
mov
and
xlat
adc
popa
mov
add
xchg
arpl
mov
stos
dec
ret
test
mov
push
cmc
retf
add
ss
jle
outs
mov
retf
div
mov
sbb
movs
sti
xchg
enter
fsub
fcmovne
and
movs
sbb
mov
mov
cmp
out
mov
(bad)
outs
ficomp
adc
lods
movs
cmp
test
fstp
mov
dec
mov
outs
add
fs
mov
cmps
xchg
call
or
test
sub
sub
inc
add
ss
adc
xchg
out
adc
test
mov
mov
test
in
es
cli
mov
mov
dec
les
rcl
pop
fwait
push
lods
icebp
xor
loopne
inc
push
mov
out
xor
jb
mov
cs
jo
push
shl
jp
cmp
push
add
dec
push
pop
cs
out
push
int
lds
sti
lods
aas
pop
cmp
mov
je
outs
popa
test
inc
lods
hlt
mov
xchg
aad
pushf
cwde
cmp
leave
push
rcl
push
clc
sbb
dec
sub
test
mov
daa
pop
cmp
lock
icebp
jl
adc
mov
dec
pop
mov
mov
sub
mov
lock
push
int
jbe
hlt
dec
adc
imul
mov
jl
dec
or
leave
pusha
xchg
or
jg
pop
mov
mov
add
xor
add
scas
mov
mov
mov
sub
sub
aam
push
sbb
adc
jno
(bad)
out
scas
inc
outs
stc
and
push
imul
aaa
pop
mov
dec
jle
out
jno
sub
jmp
add
and
enter
push
dec
pop
out
ss
rol
xchg
sahf
mov
or
int3
mov
cmp
popf
xor
mov
(bad)
retf
popf
cmp
fst
ror
mov
push
out
mov
mov
lea
and
test
retf
pop
sub
inc
jnp
(bad)
inc
jle
mov
jnp
(bad)
mov
push
pop
test
sub
xor
lods
pushf
mov
inc
xchg
cmp
out
or
jne
es
int3
inc
arpl
iret
mov
cmp
push
xchg
and
jmp
mov
push
es
aaa
inc
mov
sbb
ror
fucomp
enter
stos
pop
ins
fistp
dec
sub
sub
pop
not
outs
xor
add
sub
cdq
adc
(bad)
sub
push
nop
push
das
fsub
je
cmp
icebp
add
jbe
jp
add
outs
scas
outs
shl
pop
(bad)
jnp
shl
nop
ins
out
scas
clc
rcr
xor
movs
in
mov
cld
stos
jmp
sbb
sub
(bad)
idiv
leave
mov
or
ss
fsub
xor
push
shr
xchg
and
test
mov
nop
fmul
cmp
retf
inc
and
ud0
xor
shl
repz
mov
jge
and
retf
sbb
sub
ins
nop
jge
xchg
in
push
xchg
push
aam
push
add
out
in
test
ret
fimul
push
add
pop
out
dec
mov
or
loop
in
pop
arpl
inc
test
out
mov
pop
stc
ja
inc
out
dec
and
fwait
push
jmp
mov
push
imul
mov
test
or
ins
xchg
mov
sti
fsubr
pop
lods
(bad)
call
(bad)
mul
mov
out
mov
setle
std
inc
(bad)
cmp
retf
jmp
sbb
push
push
shl
leave
xchg
or
or
daa
cld
repz
xchg
mov
mov
outs
mov
mov
outs
mov
mov
imul
dec
daa
in
mov
mul
sbb
push
jle
and
mov
and
inc
movs
repnz
xchg
loope
test
or
sub
lock
sub
movs
repnz
mov
into
mov
dec
jns
test
add
arpl
xchg
retf
ret
das
cs
call
jmp
cmp
addr16
sti
inc
pusha
popa
test
(bad)
mov
add
dec
cmp
pop
fs
fsub
xor
dec
aaa
test
mov
ror
push
push
out
push
xlat
mov
fist
movs
loop
jo
pop
mov
cmps
mov
adc
les
jmp
inc
and
jle
pop
dec
arpl
mov
or
adc
push
and
scas
or
(bad)
(bad)
in
push
mov
stos
pop
retf
mov
cmp
pop
push
cmp
lods
aas
mov
mov
pop
scas
ss
or
sbb
aad
std
cwde
ins
scas
jge
adc
cld
push
adc
sbb
aaa
sti
sbb
dec
mov
mov
inc
and
nop
xchg
outs
imul
inc
xchg
cld
ds
and
xchg
aad
(bad)
dec
out
add
push
mov
and
mov
push
(bad)
mov
out
push
mov
(bad)
xor
adc
leave
call
ins
cmp
xchg
ins
mov
mov
iret
add
sub
dec
mov
retf
pop
imul
data16
inc
call
jp
out
nop
mov
in
loop
mov
stos
imul
sbb
xor
pop
loop
dec
mov
xchg
add
jl
add
std
sub
jecxz
sub
cmc
in
and
stos
mov
ss
ja
lahf
leave
push
inc
inc
(bad)
mov
jecxz
(bad)
shl
mov
les
fld
lock
or
cmp
mov
lods
outs
push
push
sbb
inc
inc
(bad)
add
xchg
neg
dec
sub
sub
sahf
out
shr
mov
pop
pop
aas
aam
jmp
push
and
pop
popf
sub
sbb
cmps
add
inc
or
push
inc
movs
or
not
sar
rcr
sbb
jmp
sbb
pop
repz
test
test
mov
xchg
inc
fdivr
fbld
scas
sub
fidivr
and
frstor
inc
or
mov
call
sub
iret
fidivr
lods
sub
mov
adc
ret
stc
out
jno
inc
test
cmps
ds
cmp
inc
pop
cmp
jg
rol
add
jb
xchg
test
daa
mov
mov
(bad)
loope
adc
nop
mov
and
push
test
fnstsw
pop
dec
adc
push
jo
push
retf
cmc
pop
jl
sub
adc
test
xchg
push
aaa
sub
sub
inc
rcl
(bad)
cmp
in
mov
xchg
fs
push
jnp
cmp
pop
xor
jp
(bad)
dec
mov
mov
movs
mov
mov
sbb
add
mov
cli
fistp
xor
push
xchg
push
and
repz
mov
(bad)
push
imul
jne
adc
out
mov
pop
mov
mov
rcl
mov
push
cmp
jbe
arpl
imul
icebp
mov
frstor
lea
(bad)
mov
retf
dec
mov
ins
jb
out
(bad)
jbe
test
pop
adc
test
mov
add
sub
jne
cmc
jmp
in
mov
or
add
jge
sti
retf
xchg
jnp
jmp
mov
scas
sub
inc
add
aam
adc
ss
xchg
jecxz
int
push
push
dec
sub
xor
cmp
xor
enter
add
mov
loopne
fcmovnu
pop
xchg
outs
sub
and
mov
call
dec
clc
push
fwait
and
hlt
stc
mov
add
cwde
jmp
jno
or
push
push
dec
loope
mov
and
and
fwait
adc
jnp
xchg
cmp
retf
sub
fisubr
arpl
dec
fwait
xchg
ins
sbb
or
and
in
ins
pop
or
inc
dec
fucom
jg
jbe
arpl
dec
sahf
jo
push
fdivr
jl
cmp
sub
fsub
es
jb
mov
mov
pop
jp
adc
pushf
xor
out
xlat
ins
std
shl
xchg
xor
xor
mov
and
pusha
dec
or
repnz
or
mov
sub
mov
in
or
pusha
jno
pusha
arpl
test
pushf
movs
outs
je
push
xchg
retf
pop
mov
add
add
cli
fstp
cmp
sub
movs
jb
mov
and
(bad)
(bad)
mov
push
xchg
inc
loope
(bad)
fild
inc
inc
es
lods
test
and
push
cmp
out
mov
popa
aas
dec
in
pop
jae
and
sbb
xor
paddw
(bad)
gs
ins
pusha
(bad)
nop
in
sub
lahf
sbb
pop
mov
inc
inc
dec
add
aaa
jns
cmps
clc
and
ins
dec
and
mov
pop
push
add
rcl
iret
or
push
mov
scas
ffreep
test
cmp
fidiv
sub
out
adc
mov
jge
jb
sub
pop
jge
scas
pop
xchg
mov
movs
into
inc
ds
fs
cmp
inc
out
push
cmp
jmp
pslld
cld
xchg
(bad)
sti
fwait
test
sbb
jne
test
or
inc
sub
xchg
test
and
dec
mov
test
cmc
xlat
and
xchg
std
mov
or
out
or
test
xchg
jmp
cmp
in
push
stos
pop
retf
test
shr
repnz
pop
push
sahf
maxps
mov
sti
jg
mov
arpl
mov
mov
sub
or
mov
cmp
inc
adc
sbb
scas
pop
js
cmp
jle
cmp
loop
ins
xor
fisubr
jo
sbb
cmp
ds
enter
outs
push
xor
xchg
mov
pop
mov
push
mov
or
shl
test
push
cmp
push
push
mov
aas
xchg
add
jns
xchg
scas
mov
and
in
scas
mov
adc
xlat
lods
rcr
jae
ds
movs
or
aam
push
xor
movs
push
mov
xor
nop
(bad)
enter
xchg
mov
xchg
gs
cmp
xsha256
cmps
xchg
add
imul
jbe
push
ds
call
in
jp
call
ficomp
add
cmp
jae
mov
adc
pop
or
xor
test
fdiv
inc
or
jno
sub
cmp
mov
in
adc
jecxz
ja
and
push
mov
cdq
out
add
mov
adc
inc
xchg
mov
fidivr
inc
and
add
mov
scas
cmp
sahf
push
push
std
inc
or
out
cmp
(bad)
int
or
adc
fisubr
(bad)
and
mov
cmp
cwde
ja
xchg
and
sub
and
sbb
fisubr
addr16
mov
jmp
and
fnsave
mov
add
iret
stc
xor
test
aad
mov
mov
dec
push
xlat
lods
inc
ss
push
in
pop
jecxz
cmp
cmps
xor
out
sti
movs
cmp
sbb
lods
jne
add
pop
mov
mov
and
inc
pop
xor
push
ret
pop
cwde
pusha
mov
fild
or
xchg
jmp
out
mov
shl
arpl
mov
jnp
mov
shl
sbb
adc
or
xor
adc
js
(bad)
jae
inc
cld
push
mov
cmp
add
xor
repz
test
push
shl
fwait
or
inc
adc
jmp
jmp
jge
mov
movs
addr16
mov
scas
mov
imul
lds
(bad)
push
or
push
xor
js
sbb
icebp
adc
inc
ss
daa
daa
iret
repz
sub
push
mov
stos
inc
pop
dec
and
test
aad
mov
movs
in
std
ins
add
ret
sbb
pop
ror
or
adc
cmps
push
sub
or
mov
jbe
pushf
mov
pop
xor
adc
ret
and
loopne
pop
add
jbe
mov
dec
icebp
outs
xlat
imul
and
push
mov
cli
jne
movs
jnp
or
int
aaa
jns
pop
push
xor
and
sbb
xchg
(bad)
cmps
loope
lock
gs
pusha
add
hlt
dec
ret
js
pop
sti
outs
hlt
xor
cmp
or
and
leave
xor
clc
shl
and
dec
push
imul
test
add
sahf
fidivr
lahf
and
arpl
es
es
cmp
cmp
les
out
jb
cmp
rol
mov
jp
je
pop
sub
sahf
xchg
lock
push
scas
mov
mov
call
pop
ret
movs
inc
mov
mov
stos
xor
enter
arpl
in
mov
cmps
bound
out
in
mov
xchg
aad
clc
mov
ret
pop
(bad)
(bad)
push
fild
inc
mov
xchg
stos
mov
sub
jns
mov
movs
inc
sub
jbe
sub
or
fwait
dec
les
fimul
adc
out
inc
pop
mov
push
jb
pop
call
loop
xchg
sbb
pop
test
test
jge
xchg
sbb
(bad)
fstp
and
fcomp
mov
scas
mov
(bad)
scas
cmp
in
sti
ret
cwde
adc
in
test
js
pop
les
aaa
mov
xchg
mov
mov
cdq
dec
add
aad
pop
pop
and
and
or
cmps
loopne
jmp
jge
imul
cmps
inc
loope
call
popf
fcmovnbe
jp
sub
in
fwait
cwde
ja
or
aad
loopne
cmp
mov
in
int
adc
(bad)
lods
shl
xchg
xlat
xor
leave
in
out
mov
pop
xchg
jmp
xchg
popa
ja
enter
test
push
stos
push
push
and
out
fldcw
pop
lock
je
mov
add
adc
lds
xor
cmp
js
ror
dec
cmp
mov
inc
fcom
cmp
ds
xchg
scas
pop
cwde
xchg
cmps
and
ins
in
outs
adc
pop
mov
xchg
stos
mov
jmp
push
jle
pop
ret
out
(bad)
enter
call
mov
(bad)
std
popf
ss
test
out
mov
jbe
inc
cmp
popf
xchg
jns
(bad)
or
rcl
inc
jmp
cmps
pusha
cmps
xor
ret
inc
aam
add
popa
std
repz
xchg
mov
pop
dec
adc
(bad)
jge
sub
imul
inc
push
dec
push
xchg
loopne
dec
leave
jl
xor
in
cli
call
push
xchg
mov
nop
fs
cmp
jmp
in
push
jecxz
xchg
popa
cmp
inc
and
mul
cmps
mov
out
mov
sar
icebp
dec
dec
push
jmp
add
(bad)
out
repnz
lock
xor
out
lea
and
lods
sub
fisttp
call
cmp
int3
add
ret
adc
cmp
push
retf
imul
xchg
fist
inc
mov
jg
lods
pop
inc
ret
push
xchg
cmps
repz
push
ror
dec
sub
ins
push
push
xor
(bad)
movs
es
fistp
push
push
loop
inc
iret
lock
mov
jae
dec
sbb
outs
pop
cwde
pop
icebp
mul
std
mov
pop
ret
dec
jg
outs
push
mov
fld
mov
fs
mov
xlat
pop
adc
ret
adc
mov
pop
imul
inc
scas
sbb
jb
shr
loop
push
sbb
ret
inc
mov
fistp
jmp
mov
sbb
cmp
cmp
mov
push
gs
and
adc
sahf
sbb
jle
fild
mov
lea
lea
outs
inc
sahf
mov
sbb
sub
das
rcr
call
sub
in
fstp
push
call
add
stos
fs
shr
mov
fimul
in
inc
xchg
jnp
xchg
mov
sub
retf
or
mov
fmul
outs
adc
fstp
ja
xchg
push
(bad)
adc
pop
mov
(bad)
enter
cmp
(bad)
loopne
mov
inc
pusha
pop
xchg
daa
shl
sub
pop
stos
mov
xor
out
xlat
adc
adc
or
jecxz
push
dec
sub
out
(bad)
rcl
pop
sar
mov
popa
loopne
push
mov
aad
mov
mov
pop
loop
dec
es
fmulp
std
loop
mov
ret
mov
fstp
es
xchg
jno
(bad)
test
jno
or
cmc
jne
(bad)
xlat
movs
xchg
add
das
bound
xor
stos
dec
mov
stos
inc
or
dec
scas
div
pusha
push
xchg
test
jno
and
neg
mov
mov
lods
add
inc
and
push
jp
gs
(bad)
jge
mov
sahf
mov
xor
test
xchg
push
dec
mov
mov
ds
jecxz
jl
cs
stos
or
xor
sub
out
cmp
hlt
and
xor
retf
xchg
sbb
outs
jg
or
mov
sbb
hlt
inc
sti
(bad)
loopne
lds
mov
dec
fld
jecxz
daa
nop
inc
(bad)
xor
xchg
fst
neg
aad
jecxz
pop
add
push
sbb
sbb
pop
add
adc
push
add
jae
jge
mov
out
add
sub
fsub
js
dec
inc
out
cwde
inc
(bad)
js
popf
movs
aam
idiv
add
ins
das
push
loope
push
out
lock
sub
push
and
adc
scas
fiadd
jbe
push
mov
lock
idiv
cmp
pop
movs
aas
xchg
aas
mov
lea
jg
adc
mov
push
xor
scas
dec
mov
test
loopne
test
or
div
mov
popa
mov
lods
ret
ja
(bad)
xchg
push
fstp
lahf
inc
pop
pop
ins
xchg
mov
sub
xlat
scas
cmp
lahf
ins
and
and
or
push
je
jne
int
mov
mov
push
or
fcmovnb
popa
fsub
xchg
imul
push
and
cmps
mov
xor
adc
shl
and
inc
ret
xor
mov
and
int
jae
loopne
sub
xchg
jae
xor
sbb
inc
inc
pop
and
mov
clc
nop
jmp
pop
mov
dec
out
mov
adc
aaa
jge
popa
lea
sahf
add
cdq
call
add
retf
aam
xlat
popa
mov
jmp
and
cmp
test
push
jns
test
xor
pop
movs
leave
enter
sbb
inc
call
inc
cmc
outs
jmp
sbb
(bad)
sbb
pop
test
push
iret
jl
stos
and
ror
push
pop
es
enter
mov
cmc
jle
scas
(bad)
test
shl
in
hlt
outs
imul
int
sub
jae
jmp
mov
lahf
ss
pop
and
lock
xchg
je
das
adc
cmp
cli
cli
pmullw
into
mov
mov
(bad)
push
(bad)
rcr
mov
pushf
call
aam
fwait
sbb
fs
int
cs
pop
cmp
sbb
inc
or
mov
push
rcl
stos
add
cs
out
inc
push
pop
add
mov
cmp
js
pop
lea
lods
mov
mov
test
adc
loop
pop
ret
cdq
enter
mov
add
mov
xor
fisttp
mov
into
and
and
int3
pinsrw
pop
(bad)
xor
sub
test
or
aam
(bad)
sub
push
cs
adc
adc
jb
xchg
adc
mov
and
xor
dec
test
rol
lods
and
pop
ja
jnp
mov
outs
loopne
pop
ins
(bad)
and
or
lar
in
jmp
sahf
icebp
cmps
loope
pusha
cmps
pop
inc
xchg
mov
js
lods
sti
test
lahf
(bad)
push
mov
sbb
out
aad
jecxz
aad
inc
ins
(bad)
push
jl
push
jge
cmp
cs
cdq
ins
add
mov
ins
mov
and
in
ja
jmp
push
in
or
cmp
or
xor
sbb
(bad)
cdq
mov
dec
out
or
inc
in
rcr
movs
es
(bad)
int3
mov
mov
inc
or
inc
iret
inc
pop
imul
mov
jns
(bad)
(bad)
iret
xchg
cmp
fwait
inc
int3
and
xchg
mov
xor
aas
mov
pop
push
enter
fldenv
mov
dec
imul
sub
pop
ret
ror
pop
rcr
jb
mov
mov
inc
mul
in
xchg
sar
gs
int3
aam
dec
test
bnd
repz
stc
lock
lods
inc
out
adc
mov
pop
out
hlt
repnz
push
or
jo
repz
xchg
and
mov
jecxz
xor
pop
dec
adc
hlt
ins
jno
inc
fdivrp
gs
imul
jle
ror
int3
fs
cmp
jae
cmp
push
jmp
adc
cmp
fdecstp
sub
pop
lods
imul
test
imul
addr16
pop
dec
pop
(bad)
mov
int3
retf
(bad)
iret
or
xor
hlt
mov
sar
sahf
inc
jmp
xor
lock
mov
sbb
int3
shl
dec
ret
js
mov
imul
mov
sbb
sub
iret
fisubr
retf
movs
fs
loop
stc
icebp
adc
pop
rcl
cmps
push
stos
push
jl
or
push
out
in
jne
xor
stc
jmp
lea
outs
cmp
inc
arpl
in
jns
retf
dec
mov
and
push
ret
loopne
ret
pop
push
je
mov
mov
rol
inc
scas
cmp
dec
or
dec
mov
(bad)
sti
cmp
movs
mov
ss
adc
sar
sub
mov
out
aam
shr
je
iret
xchg
arpl
imul
pushf
inc
das
sahf
addr16
inc
(bad)
nop
mov
xchg
scas
adc
addr16
pop
mov
das
cmps
push
movs
shl
ss
dec
int3
or
cmc
pop
hlt
add
jge
daa
or
push
sti
and
pop
jmp
arpl
cmp
mov
pop
lds
lds
cmc
imul
outs
mov
jle
arpl
popf
(bad)
xchg
cmp
sub
jbe
and
imul
pop
or
push
out
sub
pop
outs
(bad)
mov
aaa
loope
pop
add
inc
jle
jge
jl
cld
jo
xor
jmp
loopne
sar
xchg
imul
add
call
scas
cmp
push
imul
daa
jno
ins
or
sbb
jno
xor
sbb
mov
retf
popf
sbb
and
lea
bound
add
std
je
jo
sbb
in
pop
retf
sbb
pop
fnsave
cmps
std
xchg
mov
test
imul
cmp
dec
loop
(bad)
lods
loopne
test
test
movs
mov
rcl
call
pop
pop
loopne
popf
mov
dec
xchg
mov
sbb
out
xlat
repz
mov
mov
mov
iret
pop
fst
(bad)
jo
dec
push
loope
mov
xchg
fist
in
not
jae
scas
pop
jo
sub
mov
mov
add
test
mov
sahf
(bad)
imul
jne
mov
dec
div
mov
cmc
mov
xor
div
call
stc
mov
push
jnp
clc
in
outs
int3
mov
push
js
(bad)
nop
pop
pop
mov
adc
and
xchg
fistp
mov
lods
dec
lahf
lds
scas
xchg
jno
dec
add
aam
call
icebp
sahf
push
and
jmp
jecxz
push
(bad)
sar
adc
fidivr
adc
fwait
sbb
(bad)
sub
movs
cdq
movs
sbb
lds
xrelease
test
aad
stos
sub
cli
jne
jle
fisubr
hlt
loopne
test
cmp
jae
dec
shl
fdiv
hlt
jle
scas
idiv
fist
xor
pop
xor
inc
out
xchg
fbstp
addr16
inc
mov
mov
retf
xchg
inc
jnp
rol
addr16
and
push
push
sbb
adc
mov
jmp
and
lea
and
dec
bound
mov
dec
in
mov
mov
fnsave
push
dec
pusha
jnp
ja
test
fdivr
add
retf
or
addr16
pop
lea
out
push
mov
rcr
mov
into
lahf
sbb
jl
xor
icebp
add
dec
inc
leave
outs
mov
aam
cmps
mov
jecxz
mov
pop
(bad)
dec
add
push
xchg
and
cmc
add
shl
in
test
xlat
mov
pop
cmp
popa
or
mov
icebp
mov
mov
sub
bound
mov
lock
ror
mov
pop
mov
fsubp
scas
pop
add
xchg
fs
sti
stc
pop
test
das
in
or
adc
test
jl
sbb
mov
mov
cmc
cli
out
shr
mov
mov
fld
ins
push
and
jecxz
mov
into
push
pushf
sbb
sub
fstp
jmp
dec
loopne
(bad)
enter
and
aaa
add
jno
mov
mov
jne
out
mov
jbe
jbe
push
pop
sar
rcr
icebp
out
outs
jo
sahf
xor
add
mov
in
int
xor
pusha
lea
pop
pop
mov
retf
cli
add
mov
xchg
mov
mov
mov
(bad)
jge
jp
inc
dec
dec
stos
xchg
dec
leave
mov
mov
(bad)
jmp
cmps
fimul
xor
mov
les
mov
push
sbb
pop
push
pop
sahf
jnp
into
test
jb
cmp
and
and
mov
mov
lds
repnz
repz
sub
outs
inc
in
lods
ins
repnz
or
xor
retf
mov
jmp
lods
aad
cmp
sbb
mov
mov
adc
lea
mov
in
lea
cli
inc
inc
mov
mov
clc
pop
rcl
cmp
mov
arpl
addr16
cmp
into
mov
mov
push
shl
mov
cmp
push
and
cmps
xor
int
and
push
or
adc
inc
outs
adc
scas
pop
(bad)
div
sub
shl
pop
ja
jbe
jge
lahf
mov
ins
imul
push
mov
and
jecxz
and
adc
dec
mov
jne
mov
or
shl
mov
mov
shl
push
adc
inc
push
xchg
in
out
mov
xchg
mov
cmp
xor
and
int3
pop
mov
retf
push
mov
in
sub
in
in
jp
push
shl
adc
add
pushf
dec
xchg
outs
push
stc
and
movs
loope
call
xlat
sbb
(bad)
in
adc
int3
(bad)
iret
sbb
ror
mov
push
inc
loop
fldcw
(bad)
(bad)
nop
adc
scas
inc
jl
cdq
jnp
mov
cmps
xor
jae
dec
mov
enter
mov
neg
jmp
xchg
adc
cmp
sbb
xor
push
outs
aam
dec
movs
mov
pop
std
mov
cld
pop
ja
clc
sahf
add
xchg
arpl
xor
out
xlat
push
pusha
repnz
mov
lea
test
inc
sar
in
les
push
out
clc
aaa
dec
mov
sub
pop
xor
xchg
dec
in
and
xor
stos
sub
int
dec
push
fdiv
fidiv
(bad)
push
(bad)
push
(bad)
jmp
frstor
xchg
xor
mov
cmp
call
jb
rcl
neg
xchg
or
inc
nop
ror
nop
fimul
ss
mov
cmp
rcr
inc
cmp
retf
sub
add
inc
leave
outs
mov
and
ret
push
mov
add
rcl
sbb
pop
jmp
fisub
pop
ror
lds
or
or
pop
loope
lods
out
bound
popa
dec
pop
pop
xchg
xchg
adc
stc
adc
mov
mov
sbb
icebp
iret
inc
fldcw
lock
mov
pop
imul
and
add
popa
in
add
mov
dec
inc
(bad)
shr
lahf
bound
push
imul
ja
jge
cmp
sar
add
push
lods
movs
add
ss
(bad)
mov
das
ss
add
mov
dec
cmp
add
jle
mov
jecxz
pop
(bad)
call
in
xor
das
mov
fimul
in
icebp
(bad)
xor
push
aaa
aad
ja
outs
dec
mov
outs
fs
dec
jecxz
fadd
jecxz
mov
movs
mov
imul
fs
int
loop
mov
outs
xor
jnp
ret
adc
and
adc
outs
or
pop
inc
dec
xchg
jbe
push
sub
sub
aaa
stos
xlat
fwait
dec
pop
jmp
push
pop
fist
fiadd
mov
push
jo
mov
hlt
cwde
in
les
pop
push
sub
int3
mov
fwait
mov
shl
sub
cmp
add
pop
mov
adc
rcl
retf
aaa
sbb
cmp
fidivr
sub
xlat
enter
aaa
sbb
dec
int3
dec
and
dec
jns
pop
leave
test
cmp
nop
loopne
aam
jbe
or
fs
aas
sub
cld
or
or
adc
jmp
shl
sbb
lods
and
mov
adc
mov
test
(bad)
shl
aam
mov
jns
mov
aaa
les
cmc
push
xchg
iret
add
iret
retf
or
daa
cld
xchg
(bad)
xchg
mov
add
jg
scas
dec
nop
push
add
mov
ss
arpl
jecxz
pusha
sub
push
xor
dec
inc
je
and
mov
push
imul
inc
xchg
mov
jp
repz
imul
dec
adc
jmp
sahf
mov
sub
test
movs
push
mov
or
daa
out
cld
(bad)
and
jns
nop
mov
mov
out
sbb
(bad)
xor
jno
and
sbb
loop
sbb
enter
call
outs
adc
addr16
shl
sbb
(bad)
mov
or
scas
movs
jg
jle
xor
inc
jbe
aam
push
and
xor
stos
mov
fiadd
(bad)
repz
fidivr
push
dec
mov
das
sahf
cmp
icebp
adc
pop
out
or
jns
and
movs
sub
out
ins
jae
out
push
mov
pop
not
adc
in
sbb
dec
sbb
js
arpl
jo
pushf
cmp
mov
pop
shr
pop
jbe
setae
xchg
daa
std
fistp
stos
mov
pop
retf
cmps
inc
xchg
ret
sub
fwait
xchg
repz
mov
stos
jns
sub
cs
(bad)
jge
push
inc
or
sbb
mov
jmp
and
jns
mov
fucom
ss
push
push
jns
lock
sbb
jmp
test
xchg
cli
std
retf
jns
daa
bound
push
jae
push
rol
sub
or
dec
xchg
inc
in
outs
cmp
fistp
out
lea
mov
xor
xchg
call
jg
retf
add
or
data16
out
and
aam
pusha
pop
mov
add
xchg
or
in
sbb
cwde
adc
jns
dec
aaa
xor
call
(bad)
test
fidivr
dec
dec
sub
mov
popa
cld
ja
ds
inc
data16
mov
mov
(bad)
mov
les
jl
imul
jbe
or
inc
ins
and
push
cmp
rol
cmp
loope
jns
ins
jbe
out
jne
add
jle
cmp
ret
sub
push
test
xchg
add
pop
push
outs
es
repnz
mov
ret
xchg
mov
jb
cmps
das
addr16
add
add
cmp
push
shr
or
and
dec
adc
mov
inc
ja
push
clc
cmp
scas
cmp
mov
clc
dec
mov
pop
push
and
(bad)
xor
jecxz
in
add
adc
shl
sahf
cmp
out
jmp
imul
sub
test
add
xor
jl
pop
imul
push
call
jle
push
pop
loopne
cwde
sub
cmp
mov
rcr
adc
data16
clc
cdq
mov
pop
ins
sub
add
out
fs
cwde
ds
aad
jge
inc
rcl
cli
xchg
test
out
add
jge
pop
mov
add
adc
out
scas
mov
sub
mov
xor
sbb
and
jns
or
adc
push
xchg
sbb
rol
loopne
out
arpl
cwde
sub
test
fnstenv
jo
test
stos
repnz
mov
inc
adc
(bad)
mov
(bad)
std
fstp
aad
test
retf
inc
push
jb
dec
inc
jb
or
icebp
pop
pop
int3
inc
test
jo
xor
fdivr
rol
pop
popa
inc
(bad)
pusha
mov
lahf
(bad)
(bad)
imul
dec
cmc
xchg
push
mov
imul
cmp
and
ror
and
mov
lods
sti
pushf
stc
test
fwait
ins
inc
adc
fmul
test
iret
retf
push
or
cmp
imul
test
retf
(bad)
push
clc
add
aad
les
adc
xchg
scas
dec
sahf
pop
in
and
cwde
stos
cmp
or
icebp
out
outs
jge
xor
retf
call
pop
mov
jg
adc
popa
mov
dec
lds
jmp
retf
add
test
push
aad
ret
pushf
jne
daa
pop
ds
jl
pop
data16
xor
shl
push
jmp
retf
or
mov
loopne
jl
imul
loope
mov
sti
popf
aam
fsubp
loopne
js
nop
cmp
adc
dec
(bad)
movs
test
clc
call
les
in
dec
mov
pop
jl
or
loop
sub
sub
mov
mov
in
je
or
ret
add
idiv
jnp
push
in
mov
push
xchg
inc
jbe
retf
cmp
or
xor
and
mov
std
sub
sbb
pop
or
gs
sahf
movs
lods
cwde
mov
int
mov
pop
cwde
sti
push
mov
mul
lea
cli
shl
sub
(bad)
dec
fcomp
cmp
xor
popf
sub
inc
jmp
mov
lock
dec
xchg
aam
popa
les
ficomp
lds
ins
icebp
dec
cmp
sbb
push
es
push
mov
push
aaa
in
into
test
sub
mov
push
into
(bad)
in
rol
push
dec
pop
shr
and
out
(bad)
mov
aam
imul
(bad)
sbb
xchg
mov
or
inc
dec
dec
xor
xor
hlt
cld
(bad)
jns
sbb
inc
dec
and
mov
jne
add
(bad)
movs
cmp
cwde
test
rep
mov
push
pop
retf
mov
xchg
or
dec
stc
adc
cmps
fld
pop
mov
or
xchg
lds
jb
jg
add
and
fdivr
or
(bad)
xor
add
push
aaa
ret
jmp
push
cmps
dec
mov
push
cwde
cmp
fwait
cmc
bound
(bad)
jmp
enter
jge
stc
clc
mov
sub
fbld
xchg
or
sbb
jns
xlat
or
seto
sub
mov
dec
arpl
cmps
in
cwde
lods
repnz
jb
jle
xor
pop
push
mov
xor
outs
add
xchg
xor
stc
movs
inc
push
cmc
pop
mov
lods
dec
xor
(bad)
adc
dec
out
xor
mov
sar
ror
clc
stos
(bad)
icebp
pop
pop
jecxz
add
pop
inc
cmp
mov
add
popf
repnz
mov
(bad)
sub
sub
xor
les
and
xchg
stos
push
out
ins
and
xchg
sbb
cmp
cmps
out
cld
mov
(bad)
out
inc
in
mov
mov
and
fld
mov
push
pop
mov
jns
(bad)
dec
int
and
out
mov
pop
fwait
mov
scas
and
test
scas
push
sbb
lods
sub
pop
arpl
inc
cli
pop
fwait
push
aam
xchg
out
mov
mov
lahf
mov
jle
ret
xchg
into
push
daa
or
fbld
push
or
pop
(bad)
dec
cdq
cdq
stc
pop
jecxz
xchg
(bad)
or
(bad)
dec
(bad)
dec
push
jnp
out
cmp
mov
jno
cmps
jmp
(bad)
mov
sub
mov
cmp
mov
sub
int3
mov
inc
jbe
mov
nop
jne
ror
adc
add
sbb
mov
add
mov
cdq
sub
and
in
dec
pusha
add
imul
out
mov
test
jl
lds
popa
aas
neg
sbb
sahf
jno
mov
sbb
sbb
sub
jmp
xchg
lea
sbb
mov
and
or
xor
push
add
ret
ret
fwait
mov
test
push
mov
or
lahf
je
inc
ins
je
out
pop
cmp
pusha
out
push
inc
push
and
test
mov
xor
or
sub
aam
rcr
jmp
adc
popf
inc
push
fsubr
(bad)
es
dec
imul
pop
xor
or
cs
pop
fild
xchg
or
icebp
mov
loope
push
cmp
cli
dec
and
jg
mov
inc
push
inc
jg
dec
cwde
mov
pop
sub
dec
popf
push
sub
jmp
lock
test
push
retf
mov
sbb
mov
or
(bad)
push
mov
adc
xor
ds
xor
loop
adc
into
adc
pop
aam
and
inc
(bad)
dec
repnz
mov
xor
xchg
push
mov
sub
ins
pop
call
mov
leave
inc
push
imul
sbb
pop
add
add
push
test
mov
outs
neg
sbb
daa
mov
les
mov
das
mov
and
fadd
in
or
mov
sub
add
xchg
xchg
dec
addr16
mov
not
call
repnz
inc
mov
pop
sbb
pop
ret
cs
fwait
sub
aas
lods
mov
loope
stos
ret
pusha
(bad)
loopne
mov
out
jp
in
fmul
dec
push
fdivr
xlat
pop
fadd
fwait
xchg
retf
jno
cmp
cmp
jo
pop
test
mov
xor
lahf
add
lds
sbb
sbb
lahf
(bad)
cli
inc
inc
stos
mov
ret
sub
sbb
popf
jbe
inc
ja
inc
mov
fisttp
jbe
loop
fist
jbe
sbb
imul
or
inc
mov
or
into
sub
inc
fidiv
dec
fisub
pop
add
adc
fldenv
and
xor
or
push
pop
retf
or
inc
dec
es
bound
jne
pop
pop
push
stos
xor
pop
mov
pop
sub
repz
adc
adc
inc
test
ins
dec
xchg
sahf
(bad)
shl
inc
sub
retf
and
imul
(bad)
cmps
or
fidiv
push
adc
mov
push
mov
add
and
cmps
and
add
sub
retf
sahf
adc
push
adc
scas
jl
xlat
aad
mov
shl
mov
push
int
lods
and
loop
adc
leave
xlat
lahf
(bad)
(bad)
out
test
mov
push
inc
aam
jne
mov
aaa
push
cmc
div
mov
mov
cs
xlat
sbb
mov
sub
sar
xlat
jle
sbb
xor
push
sub
movs
xor
dec
aad
out
(bad)
rcl
retf
dec
gs
jne
inc
jp
(bad)
hlt
mov
jmp
cmc
mov
and
jne
call
add
cmp
aaa
push
push
in
adc
mov
ins
mov
adc
adc
inc
rcr
cmp
lea
(bad)
movs
jg
cmp
dec
pop
mov
mov
jae
fisttp
jmp
xor
adc
add
mov
movs
lds
inc
mov
cmp
xchg
jge
push
pop
sub
adc
inc
fs
sbb
fcom
scas
repz
cmp
pop
sbb
xor
and
mov
xchg
or
lock
push
lods
or
jl
xor
adc
movs
stos
enter
sbb
cli
sbb
int
loop
movs
imul
out
pusha
lock
jmp
fld
jns
xor
push
repz
shl
push
call
push
dec
pop
jns
stos
cwde
in
adc
sbb
mov
(bad)
inc
and
cmp
call
js
lds
xchg
inc
retf
ret
adc
movs
cmp
dec
ret
xchg
clc
loopne
ror
in
mov
shr
mov
xor
push
int3
(bad)
bound
stc
stc
stos
add
cmp
pop
retf
pop
js
mov
add
dec
sub
xor
mov
ins
jns
fwait
out
leave
push
xchg
xor
xchg
hlt
mov
and
adc
retf
shl
lods
sbb
out
xor
clc
loop
push
xlat
or
push
stc
sub
inc
test
clc
xor
adc
mov
and
nop
cmp
scas
mov
in
pop
ins
jno
outs
mov
sub
xchg
sbb
shl
xchg
cli
daa
inc
dec
repz
int3
lar
sub
ins
adc
js
mov
sbb
das
data16
xor
sbb
or
sub
push
dec
mov
sar
pop
xor
xchg
mov
push
(bad)
popa
inc
jp
inc
enter
stc
aam
out
ret
dec
dec
mov
mov
shl
dec
test
cmp
push
sbb
ret
add
or
push
pop
dec
sbb
sub
pop
jge
mov
or
stos
pop
imul
imul
fstp
pop
dec
pop
cmp
and
sar
lea
cwde
mov
shr
dec
or
scas
aad
addr16
inc
cmps
leave
cmp
adc
add
dec
call
dec
mov
test
cmp
or
push
cmp
jg
iret
shl
push
mov
xchg
push
enterw
ret
mov
cmps
mov
mov
adc
xor
movs
stos
std
sbb
(bad)
xchg
fcomp
and
push
xor
add
sub
pop
iret
retf
mov
xchg
addr16
mov
push
ja
xchg
pop
sub
cli
mov
loope
push
push
lahf
cmp
ins
imul
test
jo
lock
popa
or
in
shr
in
fsub
and
mov
push
neg
push
mov
in
fisub
or
and
mov
clc
and
adc
nop
outs
(bad)
sbb
push
call
pushf
xchg
in
push
mul
mov
stc
ret
(bad)
jnp
inc
cdq
out
lea
call
mov
push
lahf
imul
fbstp
call
retf
inc
int
cmp
or
xor
and
push
arpl
cmovle
loopne
stos
ins
and
lods
mov
rol
push
(bad)
pop
leave
add
inc
lea
lds
(bad)
lahf
dec
sub
inc
fidiv
xchg
sub
int
shl
mov
scas
mov
mov
rcr
out
jne
xor
out
(bad)
bound
jae
cmp
mov
or
ror
push
out
sbb
push
and
adc
and
jmp
psubq
retf
(bad)
mov
inc
ins
mov
pop
or
push
mov
mov
into
cmp
(bad)
call
call
cmp
xor
xor
inc
call
fdivp
fs
lods
les
inc
popa
gs
int3
nop
mov
call
or
sub
push
es
scas
cmp
adc
or
les
jno
arpl
xor
fisttp
loop
jl
pop
out
inc
repnz
sub
inc
out
scas
xchg
jle
pop
mov
icebp
jg
inc
jbe
sbb
sub
in
cs
pop
imul
mov
(bad)
nop
cld
fistp
call
nop
jmp
cmp
fld
adc
outs
pop
sbb
sbb
jle
cwde
sbb
ins
iret
sbb
add
jle
sub
aad
cmp
pop
and
scas
iret
test
cmp
push
out
gs
mov
pop
les
sub
jne
inc
xchg
jae
pop
push
movs
jmp
sti
test
(bad)
xlat
lock
inc
pop
adc
adc
shr
das
jno
ins
cmp
sbb
inc
inc
movs
inc
adc
xor
push
cld
aaa
pop
mov
arpl
add
mov
sbb
fadd
into
and
add
xor
lds
mov
dec
adc
dec
inc
mov
xor
inc
push
je
lock
push
stc
into
sub
pop
or
xchg
gs
pop
xchg
fidiv
adc
dec
sub
rcr
lds
lahf
adc
or
and
gs
mov
fisttp
mov
std
cmp
mov
rcl
jo
(bad)
aad
sar
dec
dec
not
mov
push
dec
sbb
mov
dec
sbb
mov
or
cmp
jne
sti
or
pop
loope
jo
aad
fsub
inc
xchg
in
push
mov
loop
inc
xor
mov
adc
leave
mov
jecxz
and
rol
jno
push
scas
fcom
adc
aas
ds
jae
sub
popf
imul
mov
test
lods
dec
push
imul
sbb
jns
and
repnz
test
add
hlt
(bad)
pop
jecxz
pop
mov
or
cmc
aaa
in
dec
and
fldenv
sahf
ss
arpl
sub
dec
push
and
lods
pop
nop
fisub
fmul
aad
daa
jno
ss
jnp
mov
mov
add
xchg
cwde
mov
iret
mov
imul
repnz
add
cmp
fild
ds
fwait
adc
xlat
fldenv
and
mov
and
cmp
and
jo
and
and
sub
imul
(bad)
xchg
movs
in
cwde
sub
ret
retf
imul
lods
cmps
jb
mov
xor
mov
scas
add
loop
fisttp
sti
push
push
cmp
pop
add
mov
retf
push
std
scas
jno
(bad)
mov
add
mov
sbb
fist
adc
div
jle
popf
addr16
push
xchg
add
or
sub
xchg
cdq
retf
mov
sti
mov
sub
retf
push
push
call
addr16
or
mov
xchg
and
fsub
ja
out
cmps
js
out
out
pop
aaa
ds
xor
push
pop
fnstenv
jmp
mov
jge
sub
mov
push
gs
ins
xchg
(bad)
sti
fs
dec
jge
cdq
dec
in
adc
jmp
cmp
sub
ror
and
stos
daa
test
adc
retf
xchg
push
shl
jecxz
dec
adc
mov
loopne
sbb
fisubr
push
cmp
dec
sbb
pusha
(bad)
lock
das
fs
add
leave
lahf
jle
jecxz
dec
adc
pop
xor
stos
dec
mov
sbb
repz
and
retf
xor
jnp
not
retf
loopne
mov
hlt
inc
adc
sub
(bad)
jns
and
mov
bound
js
mov
(bad)
loop
dec
or
inc
mov
adc
(bad)
xor
popf
push
jle
mov
jmp
fnstcw
inc
imul
adc
test
ds
mov
daa
sar
leave
in
cmps
int
cmc
add
gs
or
lods
pop
or
je
lods
pushf
ins
mov
les
in
fadd
mov
movs
lahf
inc
cld
xor
fld
cli
in
inc
dec
aam
or
in
xchg
sub
mov
add
push
aad
adc
jmp
sahf
movs
jno
cmp
dec
into
xchg
pop
cmps
pop
ret
cmp
mov
sbb
fldenv
ja
dec
push
dec
cmp
sub
sbb
imul
mov
add
pop
leave
mov
movs
ins
push
sbb
pop
sbb
and
ds
mov
iret
ja
rol
add
stc
dec
mov
ffreep
pop
cmp
sub
mov
ficomp
mov
shr
sub
xchg
imul
ss
jg
mov
scas
fst
cmp
or
xchg
fistp
sbb
mov
mov
cmps
push
je
pusha
cmp
sar
add
inc
cmp
pop
xor
fmul
mov
lea
sub
or
push
add
dec
mov
shr
jle
cmps
push
rcl
mov
jns
mov
sub
in
mov
dec
imul
rol
sub
dec
fsubr
mov
inc
push
ds
stc
sti
sub
and
repz
aas
mov
dec
rcr
shr
out
jmp
pop
push
and
sahf
sbb
jns
(bad)
jecxz
mov
mov
div
and
movs
pop
push
inc
dec
hlt
xor
jp
xor
sbb
sbb
ins
and
test
jbe
pop
xor
int
add
das
push
and
loop
adc
jb
stos
and
xchg
aad
pop
or
icebp
daa
repnz
jmp
mov
mov
xchg
aam
push
inc
js
(bad)
cmps
in
ds
xor
jl
cmp
les
scas
hlt
mov
fist
sub
outs
jmp
push
mov
les
imul
retf
pushf
pop
or
imul
call
data16
loope
inc
ffree
push
pop
idiv
adc
xchg
xor
arpl
ss
hlt
jp
push
push
loop
jmp
cmp
add
loop
jb
loope
clc
loope
retf
fcom
push
leave
pop
push
jmp
in
push
dec
test
loope
sbb
push
push
inc
push
das
enter
retf
sbb
lods
(bad)
jp
inc
cwde
fisubr
in
xchg
stos
adc
mov
cdq
cmps
xor
imul
dec
sub
xor
in
int
loopne
loope
mov
repz
and
les
sub
(bad)
adc
xor
jns
daa
jl
mov
icebp
sub
loop
add
pslld
add
cmp
mov
nop
cmp
out
xchg
shl
movs
loop
mov
pop
push
push
inc
mov
mov
sub
inc
sub
fstp
ret
std
or
inc
add
lahf
lods
enter
out
stos
pop
mov
iret
add
sub
outs
xor
jns
in
and
mov
pop
mov
inc
cmp
jp
ja
jbe
inc
or
mov
mov
es
aam
std
repnz
pop
js
dec
je
xor
push
and
pushf
retf
aam
adc
xchg
xor
shl
rcr
inc
add
shrd
repz
xchg
aad
xchg
jno
dec
aad
fnstcw
retf
sbb
ss
jp
mov
iret
inc
dec
pushf
imul
cmp
loope
jne
sbb
repz
sub
sbb
stc
test
pop
stos
jmp
or
add
cld
adc
ins
xlat
adc
dec
push
mov
mov
rcl
movs
cmp
data16
mov
push
mov
cdq
inc
xor
jge
adc
pop
jo
cmp
jecxz
add
dec
lahf
xor
imul
in
adc
sub
fisttp
push
repz
unpckhps
arpl
jle
inc
jmp
fidivr
cmps
test
popa
xchg
wrmsr
loopne
or
pop
pop
mov
xlat
in
in
dec
out
test
push
xchg
fsub
pusha
xor
sbb
push
jne
call
dec
pop
dec
pop
aas
clc
fwait
les
icebp
sbb
stos
jns
add
enter
or
fld
mov
ja
push
inc
or
inc
out
enter
shl
ja
in
mov
daa
sti
pop
push
loope
aam
movs
sbb
and
aam
cs
fs
(bad)
mov
cmp
cmp
push
mov
gs
aas
pop
adc
xor
mov
sahf
and
cmp
enter
jae
(bad)
fnsave
mov
xchg
xor
stc
imul
mov
jns
lock
add
or
sbb
ss
sub
lds
sub
push
jmp
jne
sub
push
(bad)
lock
daa
jle
sub
pop
mov
add
add
push
mov
cli
push
jle
imul
sub
mov
sti
fs
or
push
inc
in
push
mov
mov
adc
adc
and
into
adc
dec
adc
add
retf
and
mov
sahf
bound
cmp
ds
bound
arpl
cmp
rcl
and
(bad)
in
cs
imul
repnz
jo
scas
fnsave
dec
loope
mov
mov
jae
push
adc
mov
pop
dec
sub
out
(bad)
popf
push
fdivr
mov
mov
adc
pop
inc
pop
push
neg
nop
and
jnp
push
sub
jg
mov
cmp
ror
jmp
mov
dec
call
in
xor
dec
ds
jnp
leave
ins
das
jmp
pop
pop
outs
mov
xor
lock
dec
jbe
gs
sub
mov
jbe
and
lods
push
cmp
inc
or
mov
aas
stos
shr
ins
push
fimul
push
pop
jmp
ins
xchg
jmp
ffreep
xlat
mov
add
hlt
push
push
cmp
xchg
xchg
(bad)
jp
push
in
je
(bad)
or
jo
ret
jmp
dec
jns
fptan
jg
cdq
ds
cdq
(bad)
jg
adc
inc
icebp
cwde
outs
push
retf
idiv
mov
push
sub
call
lea
jae
sar
scas
pop
cli
out
fnsave
in
push
in
sbb
leave
sti
test
pshufw
stos
js
test
shl
xor
test
mov
das
pop
or
imul
es
jmp
fcmovb
fwait
into
call
mov
adc
and
or
fistp
pop
stc
mov
(bad)
mov
add
pop
add
push
aaa
mov
popa
ret
mov
lods
xor
sub
push
sub
sbb
jae
cmp
jnp
add
cmps
cmc
cmp
mul
lods
dec
inc
stc
inc
adc
es
push
stos
mov
adc
or
push
dec
data16
jp
push
mov
clc
adc
aas
xor
inc
jo
add
movs
stc
xor
(bad)
dec
lods
add
iret
sub
pop
ss
cli
sti
lahf
lods
popf
mov
jecxz
mov
cld
sub
fcmovb
sub
jmp
push
addr16
add
fnstenv
push
jge
data16
out
jp
out
inc
ror
mov
xchg
pushf
ss
stos
retf
pop
pop
clc
lods
jmp
ins
das
sub
mov
clc
jae
xchg
popa
rol
xchg
inc
aad
jb
shl
es
retf
test
or
lds
inc
js
push
jbe
clc
adc
jmp
mov
mov
sti
pop
cmp
lea
pop
retf
mov
or
push
jecxz
mov
(bad)
add
adc
cmp
xor
add
dec
fcom
and
pushf
lods
test
fstp
loop
pop
ret
mov
and
fiadd
and
sbb
adc
inc
les
sbb
jno
ds
push
out
xor
jnp
lods
jnp
test
jecxz
pop
test
clc
push
imul
lock
lock
lods
call
add
int
(bad)
int3
lea
(bad)
adc
stc
int
cmp
sbb
or
push
or
pop
fs
and
movs
in
push
xchg
mov
std
push
test
mov
push
out
stos
pop
(bad)
adc
lahf
jmp
movs
sub
out
xchg
adc
jns
dec
cmp
adc
test
fcmove
fdiv
push
fs
inc
add
pop
mov
(bad)
lods
sbb
call
shl
jg
int3
in
cld
mov
daa
out
stos
imul
pop
in
popa
std
cmps
adc
sbb
outs
mov
mov
add
fisubr
daa
retf
jae
pop
xchg
sub
leave
cmp
sbb
mov
lea
lahf
sub
jae
rcl
std
shl
bswap
xchg
sti
cmp
add
cmc
add
cmp
and
sbb
rcl
pushf
movs
adc
lahf
in
mov
enter
sbb
mov
mov
(bad)
xchg
sti
push
pop
aad
mov
cmps
mov
jne
data16
cmp
sahf
mov
pusha
lahf
jne
jns
inc
fmul
push
jle
adc
(bad)
xor
inc
pop
sbb
add
pop
cld
dec
push
cmps
push
add
cmp
sar
add
imul
cmp
loope
std
mov
loope
clc
dec
and
cmp
mov
jns
jne
imul
(bad)
pop
mov
sbb
mov
mov
sub
sub
loop
pop
sbb
pop
mov
ins
push
xor
(bad)
jp
mov
push
adc
adc
fisttp
in
inc
movs
cdq
lea
adc
ret
arpl
mov
dec
call
sub
pusha
fadd
dec
ret
pop
rcl
push
aad
(bad)
ja
xchg
aaa
inc
(bad)
pop
dec
push
or
int3
or
add
movs
lods
pop
or
sar
fwait
bound
in
pop
cmp
dec
xor
out
les
fisttp
jge
xor
bound
xchg
out
nop
jae
mov
mov
add
cmps
pop
movs
rcr
outs
mov
mov
aad
inc
lahf
jmp
sub
xchg
cmp
inc
mov
pusha
mov
mov
jbe
pop
cli
or
fxch
add
ret
push
dec
ins
or
xchg
sti
fwait
push
(bad)
lahf
ins
dec
add
in
mov
dec
push
push
jmp
int3
jb
je
in
fcmovne
enter
clc
iret
jl
jle
repnz
pusha
sub
hlt
daa
sbb
daa
xchg
xchg
xchg
cmps
sahf
rep
std
lods
(bad)
jmp
dec
std
sub
jg
mov
push
push
pop
imul
sbb
and
dec
popw
imul
lea
dec
xchg
mov
sbb
sub
jo
and
popa
pop
fwait
jmp
cmp
sub
or
scas
outs
enter
push
push
add
inc
xlat
xchg
adc
jo
call
dec
out
jg
sbb
ret
sub
fstp
adc
jns
xchg
std
xor
out
add
fisttp
jb
push
mov
cwde
ds
pop
and
adc
pop
in
scas
div
and
out
fist
mov
xchg
dec
sbb
mov
outs
jo
fiadd
push
cmc
inc
mov
sub
popa
imul
add
repnz
out
adc
mov
mov
jmp
fcom
call
pop
in
(bad)
dec
lahf
loop
dec
pop
test
jns
js
mov
stos
bound
out
std
jmp
jne
stc
call
stc
push
scas
enter
shr
daa
aam
push
cmc
jecxz
mov
pushf
repz
inc
push
and
fisttp
cli
cmc
(bad)
aad
movs
pop
inc
test
out
cmps
daa
das
add
mov
push
dec
and
daa
iret
jmp
pop
loope
xor
push
aad
out
pusha
lock
frstor
mov
jmp
test
pop
mov
fistp
sbb
xchg
hlt
and
jle
push
fldcw
out
jb
jle
enter
pop
ins
div
sub
mov
sub
mov
es
ret
sub
das
and
xor
jmp
loop
pop
xchg
push
(bad)
imul
mov
test
(bad)
fst
push
scas
mov
dec
adc
js
clc
stos
dec
in
push
(bad)
aad
call
xlat
xor
sbb
rol
sbb
mov
dec
fstp
shr
pop
xor
jns
call
cmp
mov
mov
stc
cmp
push
xor
shr
pop
push
dec
inc
fwait
sbb
fist
adc
mov
xchg
in
(bad)
jmp
jmp
nop
jnp
pusha
cmp
lods
pop
adc
jg
cmp
fs
xor
xor
cs
(bad)
in
loope
mov
test
shr
pushf
jg
mov
and
lds
in
loopne
dec
cmc
sub
imul
in
push
hlt
aaa
lds
in
retf
push
mov
mov
adc
add
repnz
mov
ret
imul
and
cmp
out
ins
add
ret
pop
sub
outs
imul
dec
sbb
mov
push
bound
ret
js
mov
aas
dec
enter
fsub
xchg
push
mov
rcl
(bad)
or
mov
or
ficomp
addr16
sub
call
data16
cmps
ins
popf
xchg
and
jmp
mov
shl
aam
(bad)
lods
fmul
xchg
setg
dec
popa
mov
mov
sub
cmps
in
aaa
fistp
fidiv
std
mov
imul
test
mov
mov
ss
mov
cmps
test
wrmsr
jecxz
sar
push
fcmovbe
xlat
cwde
and
not
ret
call
or
aam
push
lahf
cmp
loop
push
pop
fcmovnu
or
scas
mov
or
inc
std
mov
sar
jne
inc
xor
xor
pop
pop
and
ret
jmp
lods
ficomp
push
sbb
mov
shl
(bad)
dec
sbb
add
xor
pop
(bad)
in
dec
loope
mov
mov
inc
ss
cli
cdq
outs
xor
mov
xor
and
and
and
mov
repz
push
pop
xchg
mov
push
xchg
fnstcw
sti
bound
sbb
aaa
cdq
push
or
jnp
xchg
add
mov
fs
adc
inc
push
inc
cmp
test
mov
xor
mov
arpl
mov
jae
dec
pop
lahf
bound
mov
sub
ret
ds
aad
pop
out
mov
adc
addr16
xchg
js
call
dec
mov
ret
fcmovnb
cmp
mov
jmp
in
dec
stos
aas
call
or
repnz
sbb
enter
into
retf
or
add
and
dec
loop
fdiv
mov
push
into
aaa
ins
fiadd
or
mov
cmc
push
mov
jmp
and
jbe
scas
(bad)
movs
pusha
mov
pop
and
and
mov
test
push
jmp
push
lds
pop
pop
mov
push
sbb
cwde
xchg
(bad)
std
add
mov
pushf
out
xor
test
ds
pop
ds
mov
jo
or
das
sub
out
jnp
pop
sbb
(bad)
push
add
sbb
cld
push
jle
xchg
mov
ins
stc
cmp
inc
repz
mov
cwde
push
adc
jbe
out
out
paddb
sub
push
xabort
mov
pop
out
inc
jo
sti
movs
sar
stos
daa
(bad)
sbb
pop
addr16
adc
pop
xlat
or
data16
or
jg
add
jge
add
adc
push
pop
mov
daa
mov
test
inc
and
cmps
(bad)
in
mov
(bad)
xor
ret
and
mov
adc
add
stos
lods
fadd
xchg
xchg
and
xor
mul
or
outs
mov
fimul
dec
and
(bad)
or
and
mov
loope
fcmovnu
outs
pop
xchg
push
xor
cwde
push
psubb
call
loop
mov
aam
sti
in
adc
out
imul
leave
(bad)
push
out
stos
inc
jg
imul
stos
and
jnp
(bad)
nop
addr16
inc
mov
add
mov
leave
mov
xchg
mov
push
fs
repnz
jno
sti
xchg
pop
xchg
jmp
xor
jecxz
das
rcr
jmp
cmp
dec
mov
call
xchg
mov
pop
fsub
mov
push
add
pop
fidivr
mov
add
xchg
pushf
clc
sbb
push
scas
xchg
jo
lds
dec
cld
mov
call
daa
test
sbb
pop
mov
nop
dec
pop
cwde
cmp
sub
xchg
xchg
enter
ds
mov
int3
add
nop
push
jp
jno
je
xor
out
aaa
xchg
inc
inc
lods
retf
pop
xlat
retf
aam
pop
sub
ret
adc
pop
mov
add
(bad)
mov
jnp
mov
xor
outs
push
push
in
xchg
ret
outs
mov
xchg
loope
xor
jb
mov
mov
loop
nop
xor
adc
add
inc
xor
stos
adc
xor
jge
push
jns
les
xor
jbe
jg
sbb
add
mov
lods
lds
mov
mov
xchg
ret
jb
cmc
bound
js
clc
push
(bad)
xchg
jecxz
aad
stos
mov
mov
pop
sbb
dec
push
out
movs
cmps
jb
lods
test
sbb
adc
ins
int
jg
jecxz
(bad)
aam
data16
inc
push
cmc
jg
push
dec
out
adc
xchg
enter
popf
mov
into
addr16
or
mov
mov
cmp
int3
aas
and
push
jno
stos
clc
push
jnp
sub
pusha
mov
iret
xor
shl
xlat
pop
xor
loopne
mov
jns
popa
gs
shl
leave
inc
sub
sar
inc
repnz
xchg
mov
imul
stos
add
data16
lods
int3
push
test
xor
add
(bad)
mov
inc
mov
mov
dec
or
gs
inc
push
jecxz
pop
popf
ret
adc
loopne
sub
fdiv
fcmovnbe
or
out
ds
daa
mov
mov
bound
mov
and
ins
imul
or
test
pop
mov
or
sti
popa
retf
not
sbb
(bad)
sub
inc
sahf
and
xchg
dec
push
imul
loop
and
sbb
addr16
lock
fidiv
ins
ja
clc
sbb
out
push
daa
sbb
add
(bad)
push
dec
mov
cmps
jl
pop
mov
outs
mov
in
push
arpl
push
pop
jmp
adc
lahf
jnp
adc
icebp
push
arpl
(bad)
jnp
cwde
aam
dec
and
cli
xor
push
lock
call
dec
ins
mov
jb
dec
and
xchg
pop
jns
addr16
loop
lods
gs
sbb
or
fmul
lea
icebp
and
leave
std
cmp
fcmovnu
call
scas
int3
(bad)
mov
inc
sbb
(bad)
mov
ss
mov
icebp
mov
std
sbb
xor
ret
rcl
push
leave
or
pop
jecxz
xlat
and
mul
jnp
jb
xor
into
cmp
push
add
shr
jl
leave
mov
out
xchg
lock
in
repnz
sbb
sbb
mov
dec
dec
fs
pslld
and
jne
jecxz
pop
push
popa
xchg
and
jbe
adc
sbb
pusha
sub
loope
xor
scas
mov
sar
retf
mov
xchg
xchg
in
dec
pusha
aas
sub
das
jne
mov
add
pop
fsubr
sub
xlat
stos
xchg
(bad)
js
out
xor
aas
test
jge
xchg
fcom
xchg
jne
test
and
adc
ficomp
imul
cld
add
cmps
inc
test
pusha
cmps
les
repnz
push
arpl
jl
jbe
xchg
cmp
das
shl
jne
sbb
mov
dec
(bad)
stc
int3
rcl
add
rcl
retf
xor
enter
leave
jno
mov
retf
xor
sti
mov
xchg
mov
sysret
jns
loopne
push
xlat
and
mov
jne
(bad)
jb
xor
shl
loope
hlt
pop
push
inc
out
cmc
inc
adc
xor
pop
push
pop
data16
fistp
xor
clc
(bad)
mov
sub
fld
cli
hlt
cld
scas
mov
xchg
mov
(bad)
ret
call
pusha
cmp
inc
imul
inc
test
push
jbe
sbb
lock
aam
sbb
push
add
add
jmp
cwde
loope
in
pop
movs
test
int
xchg
cmp
int3
add
cmps
js
dec
ret
mov
adc
mov
stos
cmp
mov
xor
mov
and
sbb
test
ss
jo
jecxz
les
cwde
test
xchg
lock
bound
call
icebp
mov
push
xchg
adc
pop
jno
sbb
xchg
sub
cmp
xor
add
jno
repnz
and
inc
jl
sahf
call
mov
and
out
lea
sti
xor
lahf
loope
(bad)
movs
ja
rol
je
ds
hlt
sbb
mov
adc
mov
fsub
retf
aad
mov
add
and
cs
and
sahf
dec
sub
and
jecxz
call
and
jecxz
pop
dec
or
mov
sbb
(bad)
jbe
jl
add
xchg
sbb
dec
cwde
(bad)
push
mov
sbb
mov
pop
add
jmp
rol
(bad)
mov
vpxor
aaa
push
push
std
gs
xor
jae
out
aam
sub
dec
mov
in
mov
push
sar
jns
movs
icebp
xor
(bad)
mov
sub
jmp
xchg
aam
icebp
xchg
clc
ret
div
dec
push
jo
mov
mov
popf
loope
std
sbb
lods
test
loope
sbb
sahf
cmp
inc
mov
xchg
mov
test
scas
test
int
dec
mov
clc
mov
psllq
sbb
leave
std
icebp
aas
inc
inc
mov
into
cdq
mov
or
aas
fmul
xchg
cmp
pop
lods
push
push
xor
inc
popa
les
pop
mov
sti
pop
push
cmp
mov
in
ins
xchg
cdq
cmp
(bad)
cmp
xor
call
add
(bad)
fwait
sbb
mov
scas
mov
push
shl
cmps
sbb
fstp
in
out
mov
daa
push
(bad)
retf
mov
addr16
push
lods
ins
shr
enter
push
jae
lea
mov
(bad)
shl
mov
in
add
mov
fnstsw
retf
jmp
sbb
or
js
mov
pop
ds
add
out
in
push
popf
hlt
xor
xchg
and
ret
pop
dec
cmp
inc
mov
adc
shl
sub
pop
push
xchg
mov
fsubr
adc
cmp
pop
cmp
lods
sub
push
movs
sbb
outs
shr
ror
arpl
lods
mov
ret
xchg
and
mov
dec
in
ds
and
adc
(bad)
sbb
mov
out
dec
inc
cmp
dec
cmp
imul
outs
adc
nop
enter
or
cmps
mov
push
sbb
adc
daa
push
ja
adc
mov
loop
jmp
ja
mov
inc
xchg
cmp
inc
ja
ds
mov
popa
movs
or
pop
imul
inc
dec
pop
push
jns
ror
ja
push
ja
cmp
mov
mov
ds
and
imul
push
movs
fldcw
xor
sub
dec
pop
adc
shl
into
sub
dec
jge
mov
mov
cmp
dec
pop
inc
adc
pop
jg
mov
xchg
jmp
and
inc
cmp
into
loopne
dec
cmp
fnstsw
repz
sar
test
jb
dec
aaa
push
cmps
aaa
call
ins
inc
add
out
retf
mov
nop
shr
pop
cmc
push
scas
inc
cmps
and
xor
in
lods
imul
push
or
cmp
dec
jne
les
dec
pop
xchg
sub
xor
rol
add
es
lock
repnz
mov
sub
rcl
push
and
fisub
dec
loopne
popa
enter
and
cmp
rol
fidivr
xchg
retf
ins
sti
sbb
pop
cld
push
xchg
(bad)
loop
jl
jge
add
adc
test
mov
jle
adc
pop
dec
sti
bound
mov
jne
xchg
fadd
sbb
mov
lahf
retf
sub
mov
jg
jge
repnz
stos
push
iret
mov
scas
xlat
push
and
inc
scas
cs
mov
outs
mov
push
push
mov
xchg
dec
(bad)
fild
int3
fmulp
ins
retf
push
cld
adc
dec
retf
cld
xchg
out
std
clc
add
dec
push
and
or
sbb
cmps
push
jbe
sub
(bad)
cmp
mov
jmp
je
in
fs
rol
sub
jo
pop
inc
fimul
and
mov
xor
outs
sbb
repz
stc
inc
je
push
int3
mov
push
or
mov
aas
fucomp
or
and
nop
push
in
js
mov
pop
push
mov
jne
dec
jno
in
retf
jg
inc
pop
movs
out
test
addr16
dec
mov
std
imul
pop
fcomp
jle
pop
leave
push
cdq
jne
inc
stos
push
sub
cmc
jge
jmp
sub
imul
(bad)
sbb
sbb
dec
xlat
loop
pop
and
sub
inc
push
inc
es
in
aad
xlat
jmp
cmp
gs
xor
rol
aam
push
idiv
push
adc
icebp
cld
add
sub
jne
rcl
icebp
repnz
sub
or
mov
fisubr
test
xchg
cwde
fidivr
push
in
imul
mov
ja
test
call
into
enter
mov
mov
mov
and
push
stos
ud2
xor
xor
loopne
jmp
ss
shl
jle
mov
test
sbb
stos
stos
inc
xor
movs
mov
imul
push
in
ja
adc
fisubr
cwde
push
ins
mov
call
shr
adc
icebp
jecxz
imul
add
clc
mov
div
(bad)
(bad)
xchg
in
inc
cmp
jle
or
mov
jns
pusha
cdq
sbb
pop
je
(bad)
hlt
cmp
(bad)
sub
out
jbe
pop
adc
jno
xor
lahf
dec
pop
movs
cmp
xchg
(bad)
mov
stc
int3
sub
repz
adc
xor
idiv
dec
(bad)
jne
lods
xchg
sbb
pop
cmps
iret
(bad)
ret
xor
ret
xlat
loope
movs
pop
jge
sub
cmp
ja
sbb
mov
dec
fistp
add
scas
dec
mov
and
push
sahf
mov
test
push
push
mov
xor
mov
bound
or
sbb
test
aas
or
enter
adc
fidivr
push
xchg
scas
add
add
outs
xchg
div
gs
retf
fadd
push
not
into
into
pop
jle
daa
test
sub
fucomip
(bad)
clc
(bad)
pop
xor
iret
popf
fidiv
das
mov
sub
sub
call
xor
test
ja
mov
and
jne
jae
xchg
and
gs
mov
fxch
or
fldenv
push
xor
out
ret
fnstcw
retf
mov
sbb
fsubr
fistp
inc
into
scas
cmp
mov
pop
add
scas
and
movs
xchg
push
adc
cmc
adc
hlt
jge
data16
rol
xor
mov
sub
pop
xor
es
or
sub
call
sub
jmp
mov
movs
dec
clc
mov
pop
sub
push
xor
and
mov
retf
sbb
fcom
mov
pop
inc
test
mov
popa
jb
jmp
movs
xchg
jmp
sbb
add
and
fwait
mov
and
cld
jg
jns
in
or
mul
cmp
aas
cmp
and
sub
pop
popa
daa
call
out
out
pop
ficomp
or
inc
test
mov
or
push
xchg
xchg
out
push
fld
(bad)
push
fdiv
mov
ja
dec
or
pop
dec
xor
fwait
loope
mov
mov
add
sbb
loope
mov
lock
cmp
jle
mov
dec
int3
sbb
mov
pop
outs
sbb
push
cmc
cld
dec
adc
push
jbe
mov
inc
sbb
les
in
jnp
sub
pop
arpl
sub
push
nop
and
inc
push
inc
jmp
(bad)
stc
(bad)
mov
cmp
in
push
fdiv
retf
add
add
outs
xchg
shr
imul
pusha
dec
pop
std
das
div
sub
rcr
mov
or
rcl
movs
push
call
cmc
jge
in
jmp
icebp
adc
push
out
cdq
push
push
scas
outs
scas
lds
lds
inc
push
daa
sbb
sub
enter
sbb
or
xor
push
inc
xchg
xor
push
sbb
add
cwde
rcl
outs
ret
aam
enter
push
lahf
sub
sub
(bad)
mov
mov
mov
jae
jge
or
popa
and
pop
dec
pop
inc
add
or
cmp
adc
int3
sub
inc
pop
es
sbb
fidiv
and
jge
mov
pop
daa
xchg
stc
cmp
mov
enter
inc
arpl
cwde
aam
ins
aas
xor
xor
inc
mov
and
dec
mov
jg
arpl
jo
lea
fimul
jno
loop
outs
pop
arpl
and
scas
adc
pop
jnp
gs
frstor
ds
shl
cmp
sbb
fcmovbe
(bad)
dec
fbstp
pop
hlt
aaa
dec
inc
cwde
push
xchg
and
sub
sbb
(bad)
xlat
in
push
xor
xor
cmps
mov
addr16
fwait
add
adc
xor
xchg
xchg
push
jno
fucomip
mov
push
test
movs
jo
pusha
jp
inc
int3
cdq
nop
xchg
lahf
sub
rcl
cs
scas
inc
xchg
sub
daa
scas
ins
icebp
jmp
fldcw
mov
sub
push
psllw
call
retf
loope
test
repz
jb
outs
clc
leave
sti
lea
mov
dec
retf
ds
adc
dec
ss
jmp
and
mov
push
cld
imul
int3
imul
xchg
dec
xchg
inc
add
inc
push
jae
addr16
jge
push
fistp
iret
cmc
sub
arpl
sbb
ret
mov
sub
xchg
(bad)
stos
inc
cmp
xchg
xor
dec
test
(bad)
dec
outs
mov
xchg
pushf
fwait
clc
or
icebp
cmp
push
xor
dec
cmp
pushf
inc
pop
push
sbb
dec
les
movs
mov
outs
(bad)
sbb
sbb
nop
in
add
in
cdq
pushf
mov
pop
out
aad
sti
iret
jecxz
and
or
ja
call
sub
rcl
jbe
inc
xchg
sbb
loopne
test
test
mov
xchg
icebp
adc
pop
das
push
imul
dec
sti
fisttp
sub
fild
inc
mov
lea
sbb
je
sar
ds
sbb
mov
popf
popf
xchg
sbb
push
imul
mov
xor
xchg
push
outs
xor
sub
arpl
outs
repz
in
jns
or
mov
fwait
cmp
out
adc
dec
(bad)
cmp
add
cmp
dec
call
fisttp
mov
lods
mov
mov
rcr
inc
push
dec
mov
and
pop
push
push
cdq
push
mov
push
cmp
pop
add
dec
enter
rcl
aam
ins
mov
and
in
dec
out
outs
push
retf
mov
or
mov
xor
pop
cwde
jns
push
and
jns
popf
leave
bswap
fiadd
test
imul
jmp
test
in
lods
mov
ds
dec
lods
(bad)
outs
adc
mov
movs
cmp
xchg
push
sub
sbb
dec
push
jbe
int
popf
test
xor
popa
inc
and
dec
xor
pop
std
(bad)
push
lods
and
leave
mov
xor
mov
rol
jnp
ffreep
(bad)
mov
jl
mov
sahf
arpl
or
jecxz
jnp
(bad)
int
push
call
mov
pop
cmp
push
xchg
out
push
jmp
lahf
sub
mov
movs
call
int
retf
add
xor
add
in
addr16
sbb
ds
mov
jp
je
pop
lahf
cmovno
shr
pusha
adc
mov
(bad)
push
xchg
jo
das
adc
pop
sbb
es
push
es
cmp
test
or
imul
sub
sbb
mov
sub
adc
into
mov
fmul
sub
stos
add
nop
xlat
out
mov
outs
lock
mov
and
shl
pop
imul
sbb
fisttp
not
scas
jnp
retf
cdq
gs
xchg
cmp
mov
sti
cmc
sbb
pop
xor
mov
mov
mov
popa
inc
ins
or
mov
nop
cmp
mov
push
ds
mov
push
add
sbb
ins
mov
call
imul
lds
stos
minps
and
cmp
mov
lock
aad
add
xchg
iret
xor
push
mov
add
repz
mov
jb
mov
jne
adc
imul
xor
cmp
mov
cli
add
add
pop
loopne
mov
cmp
clc
adc
mov
or
mov
push
sbb
jb
(bad)
das
cmp
push
or
push
leave
fisubr
cmp
ror
shl
sub
lock
mov
movs
loop
daa
rol
in
jle
lahf
mov
mov
sub
sbb
sar
jecxz
fld
in
dec
shl
in
mov
imul
jae
add
mov
jo
add
stos
and
fisubr
xchg
ror
not
xlat
inc
(bad)
xlat
fs
mov
and
dec
stos
xlat
add
je
sti
mov
xor
dec
call
sub
call
and
(bad)
and
mov
add
(bad)
(bad)
jg
aad
jbe
sahf
stc
inc
idiv
les
adc
and
pop
stos
fbstp
push
fsubr
mov
xchg
sti
scas
js
cmp
es
push
(bad)
lock
movs
ja
push
inc
mov
xchg
retf
mov
into
mov
test
sahf
out
push
out
sub
cmps
outs
xchg
push
cld
cdq
bound
aad
adc
lds
into
movs
and
xchg
movs
(bad)
ret
(bad)
mov
ins
inc
jge
ja
mov
ficom
mov
in
loopne
xchg
pop
mov
jp
dec
(bad)
jno
and
pop
fs
imul
mov
push
shl
push
outs
xor
mov
mov
inc
xor
xchg
inc
movs
cli
mov
ror
and
jmp
test
jns
fistp
push
rol
mov
stos
js
aad
mov
aaa
aam
sbb
aas
out
aas
cmp
sbb
or
ss
mov
repnz
push
pop
xor
rol
fdivr
(bad)
and
(bad)
cld
loopne
in
push
push
cmps
push
sbb
add
ret
pop
push
mov
and
mov
ffreep
xchg
push
xchg
lea
pop
sub
sub
xor
or
push
pushf
loope
xor
mov
in
out
adc
shl
cdq
or
pop
cs
ins
fcmovu
rol
xchg
add
imul
adc
pop
add
mov
push
or
stc
js
call
ss
mov
ss
push
cld
fcom
add
push
mov
shr
xor
aad
push
add
push
jecxz
aad
call
js
cmp
add
dec
std
pop
stc
dec
mov
push
lods
jle
retf
fbld
cld
shl
or
cs
mov
retf
xor
mov
ficom
icebp
push
fadd
scas
fnstsw
pop
scas
inc
jae
fstp
div
pop
sahf
add
mov
or
cmps
nop
ds
mov
dec
inc
fcom
cld
push
cmp
out
jno
inc
mov
(bad)
mov
sub
xchg
shr
push
mov
ret
shl
inc
xor
jne
mov
mov
adc
call
out
std
sbb
inc
lea
mov
test
out
adc
lahf
dec
(bad)
clc
pop
adc
dec
rcr
outs
xor
adc
cmp
ror
push
sub
fild
(bad)
xchg
cmc
mov
jns
xabort
cmp
je
sub
or
cmp
fstp
add
push
push
ins
int
imul
shr
push
or
out
adc
(bad)
pusha
cmp
adc
daa
mov
hlt
out
and
dec
mov
push
mov
outs
jne
cmp
mov
push
push
addps
add
stos
xchg
push
pop
movs
fst
daa
mov
(bad)
xchg
out
ds
jns
rcl
xlat
outs
mov
inc
test
mul
sahf
jecxz
ret
cli
mov
movs
lods
mul
rcl
loopne
push
(bad)
or
add
mov
cmp
mov
popa
push
scas
xchg
out
inc
mov
pusha
ja
ins
ret
popf
mov
mov
outs
addr16
in
mov
jno
xchg
inc
pop
adc
in
sar
jnp
adc
cmp
shl
jo
sub
or
and
jae
cmp
jmp
mov
comiss
fdivr
xchg
dec
mov
aam
aaa
lds
jle
enter
shl
jle
bnd
loope
push
sub
jno
ins
mov
popf
xchg
outs
jns
stos
in
sub
jl
cwde
sbb
inc
bound
dec
mov
mov
mov
sbb
rol
out
xchg
dec
cmp
and
inc
adc
fiadd
pop
xor
cmp
mov
cmc
mov
sar
call
cdq
sbb
add
sbb
cs
repz
add
mov
and
pop
mov
(bad)
fstp
(bad)
repnz
into
icebp
lahf
cmp
mov
fninit
add
imul
push
ins
xchg
dec
jbe
sbb
(bad)
fsub
and
mov
icebp
adc
cmp
adc
sti
xor
into
xor
(bad)
mov
mov
or
je
and
cmp
rep
or
test
lock
les
std
ficomp
in
xor
int3
mov
mov
clc
dec
test
fisttp
sub
stos
cmp
xchg
sbb
and
pop
js
jne
stc
xor
call
repz
or
stc
or
stos
retf
sub
xchg
mov
enter
rol
daa
and
adc
dec
sahf
cmp
mov
push
popa
xchg
cmp
outs
fldenv
aad
imul
mov
in
in
jo
mov
fnstsw
mov
adc
sub
xor
ins
add
dec
pop
enter
or
mov
or
cmc
enter
(bad)
ret
cmps
jmp
push
xor
adc
in
xchg
call
fsub
pop
dec
aad
repnz
movs
scas
daa
retf
loope
call
xchg
popa
mov
ins
or
mov
push
out
push
jae
or
xchg
cmp
mov
(bad)
out
push
mov
lods
enter
adc
int3
dec
jp
jl
int3
out
lock
jnp
test
and
push
adc
xor
pusha
aaa
add
movs
outs
sub
xor
pusha
jb
call
jge
mov
dec
mov
outs
pop
jmp
not
cdq
xchg
push
push
loop
push
ror
out
test
or
neg
sar
jns
cmps
sar
fld
sar
push
fnsave
mov
add
xchg
in
not
cmp
inc
call
cld
sahf
cmp
popa
int
stc
jmp
xchg
in
sahf
cmps
sub
pop
lods
xor
push
pop
loopne
and
push
mov
pop
jecxz
add
push
push
imul
fcomi
and
add
hlt
int3
in
loop
stc
mov
xchg
je
retfw
dec
ficomp
push
and
test
sub
dec
jb
cmp
jp
sti
or
ja
cmp
mov
push
cli
imul
xor
(bad)
hlt
sbb
push
ror
retf
ds
fdiv
adc
rol
cwde
les
jb
ins
inc
call
xchg
push
cmc
add
mov
xchg
pushf
retf
dec
in
cld
add
mov
mov
rcr
retf
push
xor
xor
sahf
iret
int3
clc
fwait
out
xchg
mov
push
loope
popa
inc
xchg
lahf
jecxz
clc
sbb
nop
push
inc
jmp
cmp
jmp
sbb
pop
mov
xchg
stos
dec
fs
cmp
xor
adc
push
mov
test
sub
loop
retf
cmp
dec
cmp
sbb
popf
mov
adc
pop
adc
xchg
mov
sbb
aaa
enter
cmps
push
mov
outs
and
lods
push
and
icebp
aaa
mov
nop
outs
scas
jmp
cwde
in
fisttp
add
outs
cmps
ret
pop
xchg
inc
pushf
(bad)
xor
ds
arpl
dec
(bad)
mov
pusha
mov
test
mov
bound
lods
inc
sub
jns
movs
sub
loop
(bad)
ret
cmp
adc
cs
sub
xor
idiv
sbb
(bad)
add
push
cmp
ror
in
call
scas
retf
adc
das
popa
ss
push
add
nop
or
cmp
dec
add
or
sysenter
(bad)
scas
mov
aaa
outs
ins
stc
and
mov
(bad)
test
cdq
pop
jmp
scas
lods
call
addr16
cmp
cwde
ds
jbe
and
test
cmp
aaa
inc
lock
cmp
div
mov
sar
cmp
ret
test
and
in
dec
fwait
clc
aam
or
stos
vpshad
mov
xchg
aas
aas
jle
push
pop
sub
ret
cmps
mov
call
xlat
add
jcxz
adc
stos
sahf
data16
imul
mov
cdq
jbe
mov
shl
je
inc
mov
rcl
cld
cwde
daa
jb
xchg
sub
mov
adc
aaa
fist
jae
push
retf
sbb
cwde
cmp
sub
in
in
mov
jno
adc
inc
mov
sbb
inc
mov
or
push
mov
mov
sub
fimul
jmp
xchg
fstp
xor
xor
rcl
into
jno
stos
(bad)
push
aas
test
(bad)
ror
addr16
dec
ficom
imul
cmp
aas
std
push
stos
dec
mov
arpl
leave
jp
cmp
jmp
fidiv
fild
jge
mov
and
enter
fist
rcl
dec
rcr
shld
cmp
mov
(bad)
iret
sbb
jo
add
pop
ins
push
push
call
mov
shl
or
outs
scas
pop
cmp
cmp
test
mov
ins
jmp
inc
mov
push
enter
es
mov
xor
das
pop
and
mov
xor
push
push
into
retfw
push
fcmovne
enter
and
mov
stos
sub
in
imul
push
cmps
leave
mov
fidivr
jo
xor
out
sub
call
jnp
jge
les
cmc
cmps
mov
movs
pop
imul
and
or
adc
std
(bad)
or
ss
cmp
mov
cmp
adc
xchg
jecxz
and
dec
fistp
cmp
clc
std
xor
cmps
xor
inc
ror
push
rcr
push
jo
and
(bad)
sbb
pop
stos
pop
jno
mov
pop
dec
jne
sbb
xor
movs
inc
xchg
push
pop
jg
mov
mov
or
or
dec
or
mov
pop
cmps
add
mov
or
mov
cdq
inc
mov
adc
(bad)
repnz
pusha
imul
add
neg
xchg
jae
mov
inc
loop
inc
pop
movs
out
(bad)
xlat
mov
stos
mov
xor
cmps
popf
inc
loopne
fild
in
fnsave
out
inc
or
cwde
stos
push
ja
xor
or
in
and
jmp
fneni(8087
dec
mov
add
out
jb
test
mov
in
pop
push
jl
inc
mov
xlat
call
xor
jnp
sahf
sbb
jnp
push
sbb
repz
outs
jmp
loop
rcl
xchg
icebp
in
lds
add
adc
pop
movs
(bad)
push
retf
inc
(bad)
aas
add
stos
inc
mov
inc
mov
xor
arpl
xchg
(bad)
das
jp
scas
inc
fmulp
jnp
popf
cmp
jmp
call
pop
jmp
aas
xchg
jecxz
jmp
and
nop
mov
cs
mov
xchg
mov
cmp
repnz
xchg
push
mov
les
push
ret
pop
sti
call
mov
xchg
pop
stos
push
iret
push
inc
ja
xchg
add
lods
out
(bad)
cwde
add
sub
mov
ret
or
mov
popa
cmp
adc
les
pop
xchg
mov
lock
out
popf
pop
jno
pop
add
or
(bad)
out
ja
fadd
fdivrp
pop
pop
pop
mov
jecxz
(bad)
inc
jbe
in
ret
aam
push
ror
scas
jge
sbb
pop
jecxz
std
iret
hlt
xor
je
mov
bound
fcmovnbe
mov
shl
push
addr16
popa
lock
mov
outs
lds
pusha
jmp
mov
cmp
loop
repnz
pusha
ds
cmp
ret
mov
xchg
or
mov
test
mov
jmp
gs
rcl
adc
cwde
ins
jne
mov
loop
adc
call
(bad)
retf
mov
push
xor
cli
data16
neg
push
inc
pop
fisttp
push
sub
xchg
jmp
jecxz
or
jnp
push
push
xchg
xchg
inc
mov
(bad)
ins
in
adc
mov
jnp
lods
sbb
rcr
test
mov
hlt
add
rcr
stos
xchg
scas
clc
or
(bad)
imul
xchg
test
inc
mov
popf
or
(bad)
popf
cmp
xlat
cmc
mov
test
pusha
pusha
das
(bad)
sbb
mov
lahf
(bad)
cs
fistp
call
pop
mov
mov
adc
jo
and
push
rcr
ret
mov
out
cmp
outs
sbb
inc
dec
jno
xchg
inc
inc
and
retf
popa
(bad)
shr
xchg
mov
test
sti
push
je
sbb
stc
xchg
cld
nop
push
cmp
stc
fdivr
xchg
inc
and
dec
jg
push
lahf
dec
or
xchg
mov
aad
not
iret
push
icebp
and
les
xlat
sub
pop
dec
sbb
cmps
leave
fbstp
add
addr16
jmp
das
js
jmp
in
cdq
popf
clc
mov
xor
ss
sub
ds
mov
inc
sub
push
ret
mov
movs
or
cld
lods
gs
pop
mov
cmp
(bad)
cmp
sbb
inc
cmp
cmps
(bad)
div
pop
and
mov
out
add
sub
in
fsubrp
cli
pop
int
retf
sbb
adc
adc
arpl
imul
mov
mov
ficomp
rol
imul
add
aad
dec
fcom
in
pop
fucomi
in
push
pop
clc
shl
cli
repz
dec
cmp
jmp
jle
dec
inc
sbb
int3
dec
lods
mov
and
into
sub
daa
test
adc
fcom
jmp
ins
out
test
or
jno
dec
and
test
fsubr
(bad)
ins
cmp
stc
mov
scas
sub
jmp
mov
loope
test
test
mov
inc
add
test
fdivr
retf
sar
mov
jae
or
add
test
fisub
ins
and
ss
adc
fmul
(bad)
and
cmps
adc
(bad)
ficom
lahf
sbb
shr
xlat
fistp
cmp
sti
retf
dec
test
es
cmps
mov
inc
sti
jmp
jbe
jecxz
mov
add
dec
push
lods
xchg
loopne
test
fwait
jb
sub
scas
mov
fst
xlat
cld
and
cmp
jmp
popf
idiv
loopne
xor
imul
rol
push
xchg
lods
push
pop
rcl
inc
xchg
xchg
stos
cwde
xor
jg
loop
daa
mov
cmps
les
fbld
push
mov
or
xchg
aam
mov
mov
imul
out
pop
push
in
imul
sar
dec
aaa
mov
fdivr
outs
sub
cmp
jmp
xchg
popa
imul
add
push
mov
push
cmp
pop
xchg
fiadd
cdq
dec
sbb
xchg
xor
fiadd
push
aam
iret
mov
lds
mov
mov
cmps
lds
xchg
cmps
out
jo
and
ss
mov
sbb
test
sti
inc
(bad)
fisttp
jecxz
add
pop
sti
retf
or
pop
xlat
xchg
sbb
std
sub
lock
jae
(bad)
inc
pusha
lea
mov
dec
mov
or
xchg
mov
jl
or
sub
push
mov
imul
mov
xchg
arpl
out
mov
inc
cmp
fsub
mov
gs
pushf
or
or
or
pusha
mov
xchg
repz
shl
mov
pop
(bad)
jmp
and
(bad)
push
adc
push
(bad)
push
or
inc
pop
sub
add
inc
mov
mov
jmp
clc
shl
fdivr
call
jns
aam
icebp
repz
xor
test
dec
in
and
xchg
or
dec
fidivr
aaa
xchg
xor
xchg
aaa
mov
xor
jae
xchg
loopne
push
mov
cmp
stc
inc
mov
test
popa
ins
mov
jns
in
jb
xchg
mov
push
mov
clc
ret
cmp
cmp
cld
popa
imul
xchg
test
cmp
loopne
mov
pushf
movs
inc
jl
fsubr
push
enter
test
jmp
sub
shl
in
jle
ds
dec
sahf
int
dec
cmc
test
dec
shl
push
mov
fld
cmp
je
add
mov
movs
xchg
int3
cmp
inc
(bad)
imul
popf
mov
jle
cmp
gs
inc
dec
cmp
je
dec
fimul
adc
iret
ret
int
inc
xor
mov
popf
ds
shl
sub
lock
sbb
jmp
mov
ins
pop
js
in
fs
aad
mov
mov
icebp
jp
(bad)
sti
test
outs
mov
adc
test
mov
xlat
idiv
mov
xor
jbe
xchg
ins
sti
test
stc
loop
push
test
into
mov
or
inc
mov
mov
pop
xor
xchg
stc
dec
arpl
or
jno
jmp
or
sub
mov
push
add
iret
xchg
daa
fs
sub
(bad)
lahf
adc
xor
jmp
mov
mov
call
xchg
fstp
lods
fs
jp
rol
jge
and
test
aad
xchg
data16
shl
or
add
inc
xor
dec
fcomp
add
xor
add
mov
xchg
mov
sbb
shl
sbb
add
sar
pop
cmps
aad
repnz
mov
pop
scas
or
adc
daa
push
fisub
lea
test
and
stc
mov
cmp
jl
dec
or
shl
out
sbb
adc
mov
out
ins
popa
pop
lods
adc
sbb
jmp
ins
push
pop
leave
cmp
jne
out
pop
fxtract
sbb
xchg
sbb
and
in
movs
sbb
fild
out
sbb
cmp
stc
pop
leave
xchg
pop
xor
xchg
lock
rol
mov
shl
pushf
es
sub
xor
pop
pop
pop
std
cmp
push
hlt
scas
jnp
mov
loop
aaa
loope
sbb
lds
mov
retf
mov
dec
and
and
push
loop
mov
ja
inc
rol
scas
mov
push
rep
push
aam
add
push
xor
mov
cs
sbb
cmc
movs
(bad)
mov
adc
sbb
test
pop
mov
mov
mov
shl
mov
dec
fwait
mov
dec
ja
adc
sbb
cdq
sub
inc
inc
les
leave
inc
mov
popf
sbb
ins
add
into
stc
mov
rcl
ss
inc
mov
aas
jg
(bad)
mov
push
mov
int3
jbe
mov
adc
mov
adc
(bad)
cmp
mov
arpl
popf
inc
test
repnz
xor
scas
imul
call
lahf
jmp
mov
and
imul
sub
cdq
push
jbe
ffreep
mov
pop
(bad)
(bad)
cld
and
sti
icebp
push
jo
and
jb
jo
cmp
and
or
ja
movs
aad
test
xchg
xlat
(bad)
fsincos
in
or
icebp
or
lock
leave
pop
ja
popa
pop
call
or
leave
popa
pop
mov
mov
dec
pop
xchg
repz
mov
lahf
push
sub
mov
movs
jmp
lods
(bad)
mov
and
push
sbb
adc
jne
cmp
pusha
jmp
iret
push
adc
sub
adc
xchg
xlat
adc
and
dec
inc
in
adc
rol
outs
adc
cmp
sar
jnp
push
clc
dec
sub
xchg
adc
cmp
aaa
inc
push
cmp
fwait
neg
shr
and
push
sbb
push
fdiv
push
xchg
mov
jnp
out
jmp
jmp
imul
fnstcw
aas
stos
jge
enter
inc
pop
shr
ja
xor
dec
dec
xchg
dec
inc
sbb
pop
add
ja
je
lods
cmp
jno
arpl
xor
sub
mov
sub
push
push
nop
jecxz
inc
xchg
iret
enter
and
sub
mov
hlt
pop
test
pop
test
sub
popf
xor
mov
lds
inc
inc
loopne
mov
push
stc
push
fnstsw
leave
pop
or
imul
xor
mov
mov
fimul
call
jecxz
push
pop
mov
and
out
dec
mov
aad
jne
add
ins
mov
jbe
scas
nop
mov
cmp
jbe
repz
push
jmp
pushf
xchg
out
scas
ja
fisub
add
dec
cmc
add
sbb
aam
jmp
fisubr
(bad)
aad
popf
ins
pop
outs
into
popa
sbb
pop
jo
pop
movs
and
lea
jo
addr16
jns
lods
movs
mov
mov
imul
cmp
pushf
das
loope
jp
sub
clc
stos
mov
int
add
lea
hlt
dec
add
xchg
push
xlat
popf
dec
lods
int3
sar
cmp
cmp
std
cli
rcl
dec
ins
mov
cmp
dec
inc
jmp
or
dec
sbb
je
and
adc
enter
je
inc
je
repnz
or
cmp
jmp
pop
mov
pop
sub
jl
xchg
mov
call
xchg
aaa
lahf
mov
cs
xchg
mov
stos
imul
jne
rcr
xor
(bad)
popf
ins
into
stc
sub
add
ss
inc
in
inc
mov
add
lods
ins
test
daa
mov
shl
rcr
adc
jge
inc
jecxz
adc
jle
test
fbld
ror
sti
mov
lods
ins
in
fisub
loop
cmp
push
(bad)
retf
dec
push
int
fwait
xchg
cld
adc
or
stos
lahf
aaa
or
ss
adc
je
mov
mov
or
sbb
xlat
mov
jae
sub
push
jo
push
mov
inc
inc
mov
lods
ss
std
push
xor
ins
sti
in
xlat
ds
adc
lahf
and
add
mov
xchg
adc
sub
jb
cli
add
mov
sbb
sbb
pop
push
xchg
imul
push
rol
rol
mov
xlat
popf
rol
jecxz
fnsave
dec
cs
mov
dec
xor
fsub
push
dec
pop
fwait
pop
jge
dec
jnp
fwait
pop
(bad)
(bad)
pusha
push
xchg
sub
xchg
xchg
inc
xchg
and
lahf
sbb
adc
bound
cmp
xchg
ins
xor
ror
cmp
pop
adc
jmp
xchg
out
sub
repnz
(bad)
stos
scas
cmps
sub
inc
sub
inc
jmp
lea
inc
fdivr
loope
leave
stc
mov
mov
sub
mov
mov
frstor
add
inc
or
aam
popa
and
fwait
fs
rcl
or
inc
jno
jo
mov
jne
jns
sub
fwait
lea
(bad)
adc
clc
jl
pop
daa
pop
or
mov
jns
fcomi
jle
int
or
aam
hlt
mov
cs
xor
(bad)
clc
arpl
jmp
push
(bad)
fs
cmp
outs
scas
(bad)
or
inc
std
mov
cdq
and
in
pop
inc
mov
xchg
sahf
push
sub
mov
dec
test
repnz
dec
xchg
push
mov
sbb
test
push
stos
leave
test
aam
mov
sbb
push
sahf
popa
xchg
xlat
pop
arpl
cmps
mov
ss
fwait
clc
nop
xchg
cmp
jbe
pop
mov
inc
ret
inc
cmp
xchg
in
popf
push
icebp
lahf
jg
repnz
int3
dec
lods
(bad)
lods
xchg
jle
dec
(bad)
mov
mov
les
jge
inc
push
fnsave
das
pop
mov
inc
or
les
hlt
push
push
cld
sbb
fldcw
push
popa
aam
test
and
mov
rol
cmp
movs
imul
mov
sbb
fild
sbb
dec
sar
loop
cld
pop
(bad)
into
and
fstp
popa
mov
mov
and
ror
mov
hlt
mov
pop
int
arpl
adc
inc
lods
or
stc
mov
or
bnd
sub
xchg
cmp
ret
inc
ret
jle
jno
cmp
xchg
inc
cdq
push
sub
pop
inc
or
ss
sbb
icebp
jb
fld
scas
mov
jmp
nop
int
sahf
rol
aaa
inc
lods
mov
int
icebp
add
mov
xor
push
out
push
mov
inc
cld
call
mov
div
shl
mov
jmp
and
add
jnp
adc
add
mov
push
jecxz
shl
les
jge
cmp
imul
fdiv
icebp
push
popf
shr
mov
or
push
dec
imul
ror
ja
pop
mul
xchg
mov
cmps
or
adc
out
mov
and
and
je
jae
mov
add
sbb
mov
pop
fist
shl
fld
xor
cli
outs
sub
mov
imul
xor
xchg
(bad)
and
jns
xchg
gs
aam
std
or
dec
add
xor
jae
loope
pop
cdq
mov
pop
(bad)
(bad)
ret
xor
(bad)
mov
sbb
push
lds
scas
sahf
pop
mov
inc
mov
retf
sub
push
push
sub
pop
(bad)
lea
cli
inc
lahf
leave
push
and
push
xchg
jecxz
fbld
xchg
test
cld
sar
sti
mov
sar
push
inc
cs
arpl
push
daa
in
dec
mov
mov
aad
cmp
lds
enter
dec
mov
fcmovb
mov
inc
sbb
lds
sahf
cdq
adc
push
mov
inc
(bad)
cmps
xchg
mov
lds
dec
jno
jnp
fisttp
or
push
sub
fstp
dec
neg
in
fbstp
sbb
mov
mov
mov
div
mov
add
aad
dec
(bad)
xchg
inc
repz
and
and
jno
mov
sbb
stc
test
cmp
aam
cmp
clc
jae
mov
or
lods
gs
sub
das
hlt
and
out
and
mov
adc
shl
fwait
xor
repz
lahf
cmp
sbb
jns
dec
sbb
ss
add
sbb
mov
sub
mov
ret
movs
mov
aas
dec
sahf
cli
mov
cmp
or
stos
push
xchg
or
push
retf
sub
xor
or
loop
push
push
cs
mov
lods
pop
sbb
(bad)
mov
imul
cs
xchg
aad
cmp
inc
cmp
(bad)
mov
xor
fadd
fisttp
daa
daa
aaa
xor
jno
pop
mov
push
add
xor
aad
rcr
sub
fsin
xchg
mov
loope
in
mov
add
call
sub
ror
arpl
cmps
sub
int3
bound
dec
pop
add
adc
adc
bound
outs
test
in
sub
loope
mov
outs
xor
out
ja
pop
lea
push
push
stc
xor
mov
fidiv
inc
js
jl
push
icebp
cmp
sahf
sub
in
jle
add
dec
jmp
and
cs
push
mov
or
xlat
jmp
fist
icebp
ror
fstp
cmp
out
sub
inc
hlt
shl
push
stc
mov
shr
fwait
inc
xor
xchg
cmp
dec
cmp
inc
into
mov
mov
sub
cdq
mov
into
out
push
push
pop
outs
mov
fimul
scas
mov
inc
lahf
enter
sub
and
dec
repnz
sbb
in
sub
xchg
call
sub
in
and
ins
cmp
inc
jmp
mov
enter
push
rol
mov
je
(bad)
xchg
pop
push
inc
lea
loopne
lds
jbe
push
js
popa
inc
aad
mov
lods
xchg
xor
sbb
call
mov
and
out
mov
or
jb
xlat
xchg
movs
fadd
and
in
fwait
mov
cdq
xchg
lock
addr16
xor
pusha
enter
out
rol
fld
daa
add
test
and
std
in
in
(bad)
movs
push
mov
(bad)
shl
int3
pop
push
mov
inc
push
stc
cmp
dec
jne
ficomp
aam
sub
test
scas
push
mov
add
jb
dec
in
sti
or
test
pop
shr
cmovno
mov
pop
push
lds
xchg
int3
mov
sbb
in
stos
in
pop
sub
aas
mov
fstp
gs
fisubr
retf
sub
retf
shl
inc
or
adc
repnz
ins
outs
je
cmc
stos
je
add
ret
fmul
sbb
sahf
mov
jo
and
push
mov
enter
retf
or
jmp
jecxz
or
or
mov
jne
ins
sar
iret
nop
icebp
fbld
inc
fwait
(bad)
pop
add
adc
mov
std
movs
inc
add
push
jbe
push
pop
rcr
bound
pop
loopne
mov
pop
imul
shl
jb
pop
gs
fild
xchg
xor
add
mov
push
stos
cwde
xchg
movs
test
aaa
adc
shl
push
mov
xor
mov
outs
xor
mov
cs
nop
pop
(bad)
test
adc
mov
mov
out
cmp
adc
(bad)
lds
pop
mov
(bad)
leave
mov
in
and
xor
mov
mov
mov
ret
lock
xlat
add
cwde
or
arpl
jns
push
xor
out
mov
dec
xlat
std
lea
out
mov
retf
sub
loop
add
mov
popa
inc
xor
adc
(bad)
mov
cmp
pop
add
not
fcmovb
data16
mov
sub
and
sbb
xchg
inc
xchg
in
pop
inc
ins
jae
mul
mov
pop
popf
sti
int3
sbb
inc
out
les
fidivr
mov
xchg
and
jg
and
cs
pushf
pop
mov
hlt
sbb
pop
cmps
dec
(bad)
sbb
dec
cwde
das
jne
hlt
pop
xor
xor
(bad)
gs
inc
js
add
shr
(bad)
stos
push
mov
jbe
(bad)
push
jae
jg
or
lock
or
pusha
sub
inc
add
mov
movs
dec
retf
mov
sub
movs
push
js
or
jnp
dec
rol
and
sub
aas
xor
dec
adc
sbb
push
xchg
mov
cwde
ret
xor
adc
(bad)
jne
js
push
sbb
es
(bad)
push
cmp
jo
adc
(bad)
(bad)
sub
pushf
mov
inc
mov
xor
push
pop
push
int
cli
inc
movs
pushf
jg
cmp
(bad)
aam
sub
sbb
out
(bad)
inc
enter
ja
(bad)
push
mov
shr
mov
push
in
jle
jno
inc
pop
adc
adc
pop
push
lods
retf
int
ja
lods
xchg
xchg
rcl
out
dec
rol
push
xchg
xchg
icebp
xor
jmp
ds
stc
pop
iret
(bad)
in
jge
cwde
mov
and
mov
xchg
adc
gs
and
push
add
adc
sub
cmp
pop
or
mov
push
aas
lock
dec
inc
les
es
mov
mov
test
xor
(bad)
gs
scas
jno
(bad)
dec
or
je
push
ret
xchg
xor
jecxz
out
mov
fistp
and
enter
cmp
ds
jns
mov
cwde
xor
jmp
adc
and
je
lods
scas
pop
xor
scas
push
inc
xlat
xchg
or
leave
jo
push
stos
sti
and
in
xor
jo
mov
test
jae
aam
int
inc
imul
sbb
int
cmp
or
and
dec
mov
cmps
xchg
mov
and
(bad)
std
jl
sub
xchg
aaa
fwait
int3
adc
shr
mov
scas
adc
jp
mov
mov
js
xor
and
mul
test
pop
mov
jno
pop
sbb
aaa
mov
sahf
fisubr
push
imul
and
adc
ret
jmp
mov
mov
pop
push
(bad)
(bad)
fwait
mov
mov
mov
jmp
daa
jle
adc
and
cwde
in
xchg
mov
xchg
jmp
fucomip
and
add
retf
dec
xor
(bad)
xchg
hlt
dec
xor
mov
dec
loope
out
into
fnstcw
adc
push
push
mov
and
mov
mov
fdiv
into
aam
or
dec
and
stos
sbb
cmp
push
das
fwait
jns
mov
mov
mov
jbe
ss
add
dec
dec
fidivr
mov
cmp
leave
xor
rcr
imul
mov
retf
push
cmc
pop
pop
cdq
cmp
stos
cs
jle
(bad)
jl
sbb
sar
les
fldcw
mov
stc
ins
push
xchg
imul
(bad)
cld
sar
sub
add
lds
arpl
sub
add
adc
test
imul
leave
pop
pop
cmp
es
out
pop
fld
adc
(bad)
dec
test
ror
leave
in
pop
icebp
push
pushf
movs
nop
stc
icebp
stos
dec
aad
adc
xchg
(bad)
addr16
mov
sbb
xor
les
hlt
sub
int3
ret
(bad)
dec
jae
jo
pop
push
inc
popa
xchg
pop
dec
pop
xor
and
icebp
xchg
popa
xchg
push
and
shl
or
nop
ret
add
and
fdivr
in
fwait
sbb
imul
fmul
mov
in
dec
movs
lods
pusha
dec
repnz
push
push
nop
setge
add
adc
scas
repz
pop
loopne
lock
pmaddwd
pop
adc
push
addr16
push
lea
test
lods
(bad)
div
sti
into
mov
not
(bad)
test
push
add
lahf
pop
push
stos
cmps
mov
push
cld
mov
sub
mov
test
out
dec
mov
mov
loope
push
aaa
mov
xchg
jb
push
jae
push
or
je
sub
push
ss
xchg
imul
push
xchg
push
mov
int
ret
jmp
popa
data16
inc
cmp
push
jo
rcl
mov
outs
cli
mov
mov
out
adc
test
aad
call
jbe
frstor
ja
bound
(bad)
(bad)
jle
ds
(bad)
lds
pop
std
outs
shl
mov
push
ret
imul
arpl
out
lds
push
dec
adc
lock
xor
mov
pop
add
loop
add
(bad)
stos
stc
cmp
scas
xor
neg
cmp
jae
movs
aam
xchg
mov
jg
fidivr
fiadd
out
pop
mov
mov
xchg
cmps
inc
sahf
gs
push
lods
cmp
xchg
push
lods
bound
out
push
and
jge
ret
outs
cli
xchg
dec
jl
add
inc
inc
add
mov
(bad)
fnstsw
adc
ror
(bad)
bound
fidiv
test
pop
mov
pop
jmp
leave
(bad)
pop
dec
fadd
ins
pop
push
aaa
or
test
mov
(bad)
pop
mov
std
shl
mov
ficom
and
jns
mov
add
call
jae
in
xlat
mov
inc
sub
mov
enter
add
xchg
fild
pop
adc
(bad)
out
or
inc
loope
mov
mov
inc
imul
push
xchg
inc
popa
out
pop
repz
repnz
mov
enter
rcr
cmp
xor
pop
es
mov
clc
xchg
xchg
mov
lea
call
stc
sub
mov
mov
xlat
push
add
jb
push
or
hlt
(bad)
cmp
and
xchg
es
sbb
das
fsub
cdq
fld
or
mov
mov
ja
in
and
xchg
inc
out
push
add
mov
dec
std
leave
and
rcr
dec
jo
clc
cmps
stos
ss
mov
mov
pop
not
mov
fcomip
rol
sbb
inc
adc
(bad)
xchg
repz
dec
push
ins
add
xchg
fcom
inc
cmp
pop
test
mov
jp
dec
lods
inc
fstp
add
xlat
adc
inc
sub
dec
xor
adc
sbb
repnz
sub
enter
ss
mov
js
fist
jp
mov
aad
test
mov
ficomp
or
and
aam
sub
jb
jmp
movs
adc
data16
sub
fwait
es
stos
mov
xlat
sbb
cld
mov
clc
movs
loope
mov
(bad)
call
fsubr
pop
jae
sub
ins
push
jecxz
fidivr
sbb
arpl
mov
jle
retf
test
enter
dec
rcr
sub
cmp
jno
dec
mov
sub
pop
mov
out
ret
dec
or
ja
fwait
mov
xor
in
(bad)
pop
movs
mov
adc
dec
xchg
sbb
pop
int
mov
inc
mov
jge
xchg
(bad)
and
mov
fisttp
fsub
shl
adc
mov
icebp
icebp
dec
sbb
sahf
xlat
sub
xchg
pop
loopne
add
or
es
pop
inc
xchg
mov
add
or
xor
or
pop
retf
mov
cmp
push
lds
push
adc
add
lods
inc
cdq
sub
shr
mov
xchg
(bad)
call
imul
add
sbb
daa
ss
pop
ffree
call
or
stos
mov
lds
jmp
cmp
or
jb
out
sbb
xchg
das
push
push
ret
jae
pop
ins
icebp
jo
and
mov
hlt
inc
aas
in
pop
mov
stos
and
adc
push
imul
pop
sub
mov
mov
mov
mov
mov
call
out
cs
ins
push
adc
in
es
mov
or
call
ins
ins
loopne
mov
xchg
dec
das
gs
mov
cmc
sub
xor
jl
sub
in
or
mov
xchg
adc
jge
loop
push
imul
adc
in
xlat
sbb
stc
pop
sub
pop
inc
lock
ret
jns
cmp
jo
mov
pusha
or
test
and
sbb
jae
arpl
cmp
pop
ret
and
xchg
sbb
daa
out
aaa
inc
retf
and
sbb
pop
push
leave
inc
out
jmp
mov
jbe
push
es
leave
inc
aas
xchg
adc
or
xor
jbe
dec
dec
mov
inc
ds
movs
jge
das
push
and
sti
repnz
dec
call
xor
out
sub
adc
xor
jno
rcr
mov
fild
test
daa
loop
mov
aaa
sbb
dec
cmps
xchg
add
mov
pop
xlat
pop
retf
pop
pop
xchg
sbb
int3
jno
lds
pop
push
fnstenv
or
leave
push
and
dec
(bad)
xlat
and
popf
jecxz
inc
jns
lock
or
and
test
push
sahf
sub
xlat
sbb
cdq
(bad)
popa
dec
add
mov
outs
cmp
daa
dec
enter
pop
shl
jae
lock
push
push
fdiv
sub
cmp
in
mov
test
jl
mov
je
mov
mov
jmp
inc
push
jl
or
repnz
mov
jp
xor
push
idiv
xchg
pop
xchg
pop
mov
test
sbb
pop
push
rcr
inc
adc
test
stos
nop
push
je
jle
jle
int
sti
inc
int3
out
ins
xor
xchg
ja
shr
in
pop
and
push
neg
neg
xor
push
sahf
lds
and
and
mov
jne
(bad)
or
jae
imul
fidivr
out
mov
inc
or
jmp
xor
setae
cmp
sub
test
xlat
mov
dec
or
dec
mov
pusha
data16
dec
xchg
repz
stos
lods
rdmsr
in
daa
movs
push
mov
mov
mov
inc
xchg
mov
push
add
push
add
fstp
sbb
push
pop
mov
arpl
cmp
jne
enter
sub
xchg
inc
idiv
in
in
cmc
or
sub
inc
pop
iret
jle
jbe
mov
bound
ja
xchg
push
jg
xchg
cmp
push
xor
hlt
outs
ds
xor
cld
movs
icebp
sbb
movs
mov
movs
jo
xor
bound
adc
aaa
sub
and
jno
or
pop
sti
loope
jbe
jg
or
jle
cmp
jp
mov
out
rcl
fcomp
inc
js
stc
ins
out
stc
mov
(bad)
lods
fisttp
ja
push
mov
(bad)
lock
popf
mov
xchg
retf
repz
fcmovu
mov
and
sbb
mov
test
xchg
inc
push
in
mov
and
das
add
push
call
mov
ins
pop
loopne
int
lods
stc
push
loop
xor
dec
jmp
ret
es
push
mov
arpl
mov
push
lahf
jmp
jge
and
cmp
fldenv
cmp
stc
jecxz
stos
ds
les
lea
mov
test
xor
mov
nop
sub
in
imul
test
dec
jmp
push
lods
push
pop
sub
cmp
xchg
popa
in
ret
xor
repz
stc
xchg
sti
dec
jge
push
ja
xchg
scas
xchg
inc
or
div
test
push
cwde
and
jmp
ficomp
cmp
pop
loope
and
loop
lahf
jo
in
sub
xor
stos
xchg
popf
mov
shr
jle
rcl
cmps
fwait
pop
cmp
mov
xor
push
pushf
call
ret
sbb
or
mov
mov
out
iret
stc
cmp
call
loope
inc
movs
loopne
iret
out
rcr
dec
xor
aas
push
mov
or
cmp
lea
and
mov
stos
fucomp
ret
mov
hlt
test
pushf
fidiv
dec
mov
dec
push
lock
sbb
loope
in
pop
fmul
jne
mov
and
or
out
out
popf
dec
sub
daa
push
rcr
daa
cmp
dec
sub
lock
imul
enter
push
enter
sar
xor
shl
cmp
and
sub
ins
mov
sub
ins
pshufw
mov
cmp
addr16
inc
ret
xor
xor
mov
hlt
add
and
adc
outs
mov
rol
bnd
sub
xor
ja
cmps
call
push
int3
push
(bad)
jp
call
pop
ja
in
loope
pop
push
fbstp
mov
lock
push
pop
es
jmp
push
jg
xchg
fmulp
jmp
(bad)
push
xchg
call
xchg
push
aad
mov
pop
icebp
and
lods
xchg
aaa
nop
mov
or
add
lahf
and
loop
mov
mov
dec
arpl
pop
pop
mov
cdq
cmp
neg
sar
cli
stos
xchg
sar
and
xchg
sbb
clc
or
mov
in
pop
jb
enter
pop
dec
pop
(bad)
cmp
pop
jp
xchg
add
aad
push
clc
aaa
sbb
(bad)
test
(bad)
cdq
fs
(bad)
in
mov
xchg
adc
fwait
xor
mov
mov
test
mov
xchg
fsubr
fdiv
ja
lock
sub
pop
pop
daa
or
sbb
stc
lds
sub
jne
loop
(bad)
test
pop
push
loope
not
add
popf
ret
xchg
and
aam
out
dec
jae
push
gs
cmps
je
xchg
pop
or
cmps
leave
xchg
ds
test
cmp
or
call
push
pop
outs
push
cmp
in
pop
test
(bad)
fwait
dec
mov
mov
xor
int
pop
push
ret
in
fild
ins
ss
cs
imul
neg
imul
mov
mov
out
push
sbb
retf
test
dec
jo
mov
cmps
jg
sbb
not
popa
lods
jo
sbb
repnz
dec
and
ret
sbb
cld
jae
pop
jmp
xchg
enter
ret
(bad)
stos
xchg
cmp
sub
mov
and
inc
arpl
ja
call
dec
js
inc
popf
jp
out
mov
fs
jno
and
add
fwait
sbb
mov
sub
xchg
fbstp
jae
addr16
int
fdivr
and
mov
loopne
test
xchg
into
jae
jl
fbld
add
mov
in
repnz
std
adc
push
jne
rol
ret
enter
adc
jbe
int3
retf
cld
push
mov
je
xchg
aam
ret
xchg
and
adc
mov
or
sub
push
addr16
fstp
fidivr
cmp
or
(bad)
jo
jl
mov
mov
push
push
jno
lea
adc
iret
mov
pushf
jno
xor
scas
pop
pop
adc
bound
movs
mov
call
pop
dec
mov
cmp
out
pop
mov
lds
loope
sbb
stos
cmp
mov
daa
dec
jb
ja
movs
or
rol
iret
xchg
and
mov
cmp
xchg
scas
or
ja
mov
mov
call
mov
inc
dec
fstp
inc
neg
jmp
nop
mov
(bad)
out
pop
pop
push
fistp
stc
test
dec
ror
shl
pop
lock
test
(bad)
mov
stc
jb
das
sub
adc
jecxz
repnz
mov
adc
ss
cmc
add
call
nop
inc
xchg
out
lods
sbb
inc
xchg
sbb
pop
in
int3
pop
jno
pushf
sahf
mov
adc
aam
data16
hlt
dec
enter
imul
xchg
inc
jno
mov
mov
ds
jg
loope
dec
daa
pop
and
or
es
addr16
and
rol
sub
rcl
xlat
test
mov
cmps
push
xor
fist
call
iret
daa
lea
sbb
fdiv
lds
adc
(bad)
rcl
push
cmovo
cmps
into
push
or
ds
lock
xchg
mov
stos
es
push
push
scas
sbb
dec
xor
jne
pop
lea
or
leave
pushf
push
je
daa
repnz
ss
jecxz
mov
popa
pop
call
jb
push
iret
in
add
mov
or
out
xlat
scas
sbb
in
jae
mov
fwait
hlt
movs
test
rcr
cmp
sub
ret
sub
fistp
out
ins
sbb
and
dec
je
push
xor
loop
cmc
out
cmps
clc
push
lahf
ret
loopne
mov
mov
xchg
jae
in
xlat
out
gs
mov
pop
iret
(bad)
int
pop
jge
adc
mov
stos
mov
in
cmp
sbb
fcomi
lods
imul
lahf
repz
push
ins
push
cmps
je
(bad)
cmps
sub
pop
pusha
(bad)
inc
sbb
es
sti
add
clc
cmp
ficomp
addr16
inc
fisttp
or
and
push
je
lods
imul
ja
mov
out
cmc
xor
sbb
sub
push
sub
sbb
in
dec
popa
bound
inc
xor
cli
js
add
mov
sbb
push
idiv
mov
mov
push
adc
dec
lds
mov
ret
xor
or
dec
ss
jb
sbb
mov
clc
cli
cmp
sbb
adc
dec
mov
out
cmps
xchg
pop
fs
dec
lea
fld
inc
test
pop
fsubr
scas
inc
(bad)
jmp
(bad)
push
cmp
or
mov
sbb
adc
sbb
cld
push
out
cmc
call
dec
gs
jecxz
mov
loopne
jno
adc
pop
pushf
stos
shl
xchg
shl
jmp
pop
mov
outs
cwde
cmp
push
imul
retf
fstp
lea
sbb
xchg
and
(bad)
cld
cld
dec
xchg
push
mov
pop
pop
hlt
xchg
xrelease
adc
int3
ret
lahf
push
sub
mov
mov
sbb
jbe
ja
pop
mov
into
clc
adc
pop
jmp
cmp
loopne
mov
cmps
cmps
jecxz
sti
das
sbb
mov
(bad)
jmp
mov
mov
loop
or
ds
fst
xlat
imul
je
cmp
in
or
test
lds
xor
adc
cdq
xchg
push
push
dec
movs
push
div
jle
xchg
mov
mov
out
push
push
rcr
mov
loope
xor
lods
pop
stos
stc
jecxz
xchg
inc
fadd
mov
bound
xchg
repnz
in
dec
xor
or
sub
jle
adc
push
or
aad
xor
cmp
sbb
xchg
pop
add
std
lock
xor
mov
push
repnz
(bad)
imul
neg
pusha
mov
xchg
test
enter
inc
push
pop
fld
stos
cmp
lds
ins
hlt
test
stc
pop
pop
jl
add
aaa
push
and
cmp
inc
dec
arpl
dec
int
out
mov
adc
cmp
cs
stos
(bad)
mov
fst
add
and
add
sbb
xor
aam
jle
ret
xchg
stos
pop
call
clc
or
fimul
pop
jbe
xor
mov
inc
xor
pop
dec
sub
mov
pushf
adc
push
retf
dec
imul
retf
not
popf
je
stos
xor
or
shl
out
xor
sbb
lds
nop
loopne
dec
(bad)
dec
fidiv
push
sbb
jo
addr16
sub
aad
and
aas
dec
imul
push
test
dec
(bad)
movs
test
(bad)
daa
imul
test
adc
xchg
outs
mov
mov
xor
shl
ret
add
mov
icebp
pushf
adc
(bad)
rol
mov
mov
adc
mov
scas
push
adc
sbb
(bad)
xlat
push
and
inc
adc
stos
es
pop
test
xchg
int
mov
and
data16
int3
push
ins
fwait
jp
mov
xchg
cmp
les
popf
aaa
mov
int
and
stc
push
stc
or
xchg
cmp
mov
add
sti
mov
cs
cmp
mov
and
push
lods
xor
inc
or
pop
sbb
cmc
std
mov
dec
lds
pop
xchg
push
(bad)
sub
mov
and
xchg
xchg
xchg
ror
test
loopne
and
out
dec
ret
add
outs
and
add
cwde
xchg
mov
lods
jae
mov
and
jo
cdq
mov
(bad)
loope
mov
xchg
mov
jmp
fbstp
in
stos
retf
jmp
add
push
mov
cmp
ja
xchg
xchg
mov
fstp
push
jp
pop
cli
lahf
pop
fdiv
mov
into
fldcw
or
add
and
push
push
dec
sub
mov
clc
test
popf
inc
(bad)
lea
push
dec
inc
repz
cmp
rcl
std
sbb
ret
mov
fimul
movs
fwait
push
hlt
xchg
pop
aam
rcl
xor
sar
sub
push
in
jge
je
das
loopne
(bad)
outs
jmp
ja
call
(bad)
test
repz
sub
push
les
pop
ret
xor
jle
pop
sbb
jno
adc
cli
std
sbb
cmp
jmp
inc
cmp
inc
cmp
inc
fdivr
mov
mov
std
mov
push
fnsave
fadd
cmp
pop
push
sub
ins
cmp
jp
sbb
vrsqrtss
mov
jno
inc
sub
cmc
dec
retf
popa
cs
js
add
dec
loop
rcl
add
(bad)
pop
xchg
mov
or
inc
ins
cs
xchg
retf
ins
stc
sbb
add
aam
(bad)
push
(bad)
std
xchg
jg
cmps
in
jbe
cli
xor
mov
jo
mov
(bad)
fisttp
mov
loopne
into
shl
sbb
pop
mov
sub
add
cld
cwde
(bad)
sbb
js
add
js
call
mov
std
ss
xor
fisubr
int3
xor
pusha
scas
test
jecxz
out
jb
mov
and
in
push
je
lods
mov
mov
clc
xchg
(bad)
imul
test
(bad)
mov
popa
and
cwde
jnp
or
addr16
dec
xor
jg
pushf
mov
or
cmp
pusha
imul
jnp
dec
pop
in
mov
adc
int3
lods
mov
mov
ss
movs
call
cmp
in
fcmove
dec
not
add
sub
lds
adc
mov
jl
icebp
test
inc
ins
loopne
jne
fwait
(bad)
psubd
mov
mov
movs
xor
jb
js
cmp
add
mul
ret
lods
jmp
pop
dec
test
ret
loope
sbb
mov
xor
jg
and
pop
ins
cmc
into
ret
lods
jnp
ficom
sahf
repz
fdiv
retf
jmp
in
or
push
stc
in
xchg
inc
pop
clc
jne
addr16
(bad)
dec
out
scas
mov
sbb
inc
mov
imul
(bad)
and
test
xor
ret
cli
adc
or
adc
and
add
xchg
sub
jecxz
lahf
mov
outs
imul
mov
jmp
aaa
shl
js
mov
mov
bound
and
mov
mov
jnp
dec
jecxz
(bad)
cld
pop
aas
sub
xchg
or
adc
mov
or
ror
movs
test
cli
inc
retf
iret
dec
int
mov
mov
or
mov
adc
(bad)
repnz
mov
pop
jb
(bad)
shr
inc
add
push
test
sar
iret
sbb
repnz
dec
mov
and
xchg
and
retf
fld
or
add
pop
jp
mov
in
pop
out
pop
repz
sub
inc
jno
xchg
xor
mov
shl
adc
jmp
and
(bad)
test
or
adc
cmp
mov
dec
ds
fistp
adc
push
shl
scas
jmp
div
sub
imul
(bad)
xor
push
or
fbstp
sahf
out
xchg
xchg
lds
outs
push
mov
pop
lock
fisubr
inc
pop
sbb
clc
gs
out
push
sbb
mov
sub
xchg
pop
sbb
pop
stos
xchg
pop
xchg
jecxz
and
sbb
ss
add
dec
nop
ficomp
adc
out
xor
aad
aas
fs
call
outs
repnz
mov
imul
jge
stos
dec
xchg
xor
add
xor
sub
add
rcl
pop
or
inc
push
inc
js
jbe
pusha
in
ror
sar
into
hlt
pop
outs
scas
ja
inc
into
pop
xor
inc
and
mov
cmp
pop
jg
dec
xor
sub
movs
clc
dec
imul
push
push
scas
push
jle
sbb
push
test
movs
mov
sub
cmps
or
ja
or
mul
mov
in
ins
xlat
jne
dec
popa
mov
mov
cmp
lahf
and
pop
shr
lock
icebp
jmp
pop
stos
fucom
mov
jmp
jg
push
sti
adc
mov
jg
cmc
pop
sbb
scas
out
test
mov
dec
pop
outs
pop
fs
pop
popf
test
jmp
sahf
mov
jecxz
mov
int
(bad)
pusha
aam
inc
jno
jp
xchg
push
inc
sbb
mov
jmp
icebp
retf
lahf
fldcw
sbb
cdq
rcr
push
push
adc
xchg
sbb
mov
pushf
les
ret
xchg
outs
jb
(bad)
mov
xchg
lahf
pushf
mov
shl
jns
dec
add
adc
cmp
(bad)
int
sub
loop
adc
push
pushf
sti
sub
add
(bad)
stc
push
pop
cmc
mov
mov
aaa
ins
and
adc
xor
inc
sub
sti
push
cli
cmc
jns
retf
popf
loope
xchg
sahf
movs
out
xor
(bad)
xor
dec
sbb
imul
call
sub
jno
mov
ss
adc
jecxz
imul
out
add
rol
test
mov
inc
sahf
and
sub
jo
popf
pop
xor
aam
or
inc
or
xchg
imul
mov
cmp
mov
call
dec
xor
pop
imul
pop
rcr
cli
aad
push
sub
mov
pushf
xchg
ins
jnp
mov
or
jg
pushf
ins
fisubr
xor
push
(bad)
sbb
adc
sbb
into
outs
xchg
xchg
pop
shr
adc
ins
loope
and
sbb
pushf
sbb
sti
icebp
xchg
inc
adc
mov
pop
rol
push
push
sub
dec
sub
repnz
cs
cwde
rcr
jb
or
jne
movs
shl
std
lahf
popa
adc
xor
jnp
movs
mov
inc
inc
add
call
xchg
sub
and
mov
mov
shr
int3
pop
xlat
cmp
mov
and
sub
dec
lods
jno
(bad)
in
dec
jmp
in
aaa
addr16
shl
retf
lods
cmp
and
movs
iret
loop
jmp
lock
mov
mov
movs
(bad)
inc
(bad)
aam
dec
ins
sar
iret
xchg
sbb
icebp
aam
ret
cld
ins
sub
inc
(bad)
cmp
in
shl
stos
sub
jne
mov
loop
jle
cs
retf
push
mov
lea
add
xchg
mov
cdq
push
or
push
aaa
scas
push
push
mov
fidiv
inc
push
push
jge
(bad)
fsub
mov
aaa
(bad)
xchg
aaa
cmp
jne
xchg
fistp
mov
adc
ds
and
adc
(bad)
in
mov
scas
jp
neg
cmp
(bad)
test
sahf
or
lods
and
jo
imul
ds
mov
fmul
mov
pop
stos
dec
adc
jl
imul
iret
rol
push
scas
cmp
in
jle
stos
xchg
mov
dec
jbe
loope
and
or
xchg
or
xchg
(bad)
pop
mov
mov
fldenv
push
popa
fbstp
pop
popf
ins
dec
push
neg
out
jle
adc
mov
xor
nop
xchg
repz
addr16
inc
dec
jno
xlat
cmp
stc
sub
in
inc
inc
mov
xor
sub
mov
enter
mov
in
retf
ja
ror
jmp
xor
cmps
add
jnp
ror
dec
movs
bound
std
mov
push
dec
mov
inc
repz
jecxz
mov
out
repnz
jb
xchg
mov
mov
scas
stos
dec
ja
xchg
gs
sub
vmwrite
fstp
adc
outs
push
push
icebp
repnz
sbb
inc
xchg
aas
ret
in
pop
pusha
mov
scas
call
lods
cmp
push
and
les
jge
dec
sub
not
jmp
and
mov
xchg
mov
mov
jecxz
xor
in
pop
inc
or
lea
scas
dec
inc
shl
cdq
(bad)
adc
lods
jne
cmps
pop
and
neg
or
movs
jno
jp
imul
ds
clc
pop
pop
in
loope
ja
xor
je
shr
in
xchg
xchg
gs
scas
daa
pop
push
fsubr
mov
xchg
inc
jae
jb
mov
fild
xor
mov
fnstcw
pop
aas
inc
scas
ret
ficom
enter
fmul
arpl
cmps
dec
scas
mov
scas
sbb
xchg
mul
inc
inc
popa
fwait
sahf
mov
cld
mov
or
push
stc
sub
push
aas
mov
sub
movs
mov
sub
or
ja
mov
arpl
jge
sbb
dec
sub
push
iret
pop
jecxz
and
jb
repz
xchg
mov
and
aad
aad
sahf
ins
push
cmp
cmps
test
fstp
stc
mov
inc
xchg
(bad)
es
addr16
xchg
(bad)
ds
mov
mov
or
loope
mov
clc
icebp
fsub
ror
mov
lahf
mov
dec
jp
frstor
push
enter
mov
jns
pop
push
call
arpl
loop
push
inc
mov
fsub
ffree
or
(bad)
and
mov
ret
stos
shl
les
(bad)
xchg
cmp
cwde
rcr
loop
movs
add
jle
and
jmp
xor
and
pop
pop
ss
xchg
fwait
cmp
arpl
pop
aaa
mov
push
cmp
(bad)
rol
cmp
shr
rcl
ficom
cmp
fdiv
inc
sbb
pop
jnp
sbb
cmc
(bad)
sub
cli
mov
pop
ins
fadd
retf
and
movs
mov
xchg
mov
jae
mov
retf
mov
fistp
pop
dec
dec
rcr
cmp
(bad)
imul
in
xor
inc
pop
or
pop
sahf
xchg
dec
and
push
fild
mov
or
stc
repnz
and
sub
movs
xchg
movs
mov
arpl
lods
sbb
jecxz
stos
repnz
push
mov
pusha
mov
push
push
repnz
mov
icebp
inc
adc
sub
xor
outs
mov
mov
pop
arpl
ret
push
inc
adc
stos
inc
and
popa
setp
test
sub
xor
fbld
mov
cwde
cld
or
mov
xor
ret
push
xor
dec
stos
shl
mov
shl
sub
shr
mov
cmp
in
sbb
pop
outs
and
xchg
xor
and
mov
pop
xor
sbb
cmps
and
aas
pop
sub
xchg
loopne
mov
lds
jp
add
jb
and
pop
cmps
sub
dec
outs
addr16
stos
xchg
sbb
cmp
call
shr
cmp
mov
cmps
loop
add
dec
lds
das
js
ror
inc
rol
std
mov
cmp
test
adc
jnp
xor
lea
imul
cmp
push
div
push
or
sub
cmps
xchg
mov
sub
arpl
loopne
adc
int3
test
sub
sbb
fcom
scas
ficomp
das
pop
mov
hlt
inc
jp
lea
inc
out
repnz
add
adc
loope
(bad)
sbb
xor
rcl
and
sbb
int
(bad)
in
cmps
ds
nop
out
jb
imul
xor
out
loopne
push
movs
mov
push
push
mov
add
adc
aam
and
mov
das
and
(bad)
jae
in
clc
and
xor
adc
call
pop
out
ret
push
fild
adc
push
aaa
loop
xchg
push
add
test
inc
bound
inc
push
sti
add
fwait
sahf
mov
and
iret
pop
loope
mov
je
mov
outs
pop
add
push
and
imul
aad
add
sbb
cmps
inc
out
call
pop
push
loopne
or
or
scas
xchg
xor
mov
loop
pop
jmp
inc
mov
stc
cdq
inc
xor
addr16
pop
shl
jmp
out
movs
xchg
xchg
sub
fucomip
sbb
xchg
dec
cmps
mov
shl
xor
in
rcr
or
lahf
(bad)
sbb
in
pop
push
jp
test
int3
jo
les
push
fistp
jp
jp
rol
aad
in
ins
cmp
jmp
sbb
cmp
fucomip
cli
into
jns
pop
leave
call
call
aad
add
in
shr
push
sbb
jo
inc
mov
aam
ret
popa
fisttp
imul
add
(bad)
das
cmp
imul
test
sbb
neg
mov
and
mov
mov
daa
xor
dec
jne
stos
loope
push
mov
sub
xchg
outs
cwde
cli
int
cmp
(bad)
je
fs
or
das
push
stc
jle
test
mov
ds
bound
xchg
mov
shr
les
sub
retf
mov
mov
jmp
xor
(bad)
fstp
adc
jecxz
outs
sbb
(bad)
push
lea
sub
lds
sbb
xor
ins
pop
ds
or
inc
enter
push
lea
pop
jecxz
cdq
and
(bad)
loopne
push
jae
pop
pop
mov
or
and
push
into
mov
push
mov
push
or
repz
xor
or
or
test
movaps
fidivr
js
dec
mov
xor
mov
mov
push
in
outs
pop
adc
call
(bad)
xchg
cmp
jbe
les
aad
fucomip
pop
outs
jp
sub
push
ja
sub
mov
call
(bad)
sub
add
adc
xor
fisttp
and
cmp
leave
push
sbb
in
sbb
iret
push
test
imul
and
mov
test
mov
in
loop
push
mov
xchg
call
and
mov
mov
dec
jns
pop
mov
add
and
jns
mov
xchg
or
jg
jnp
sti
ret
out
sbb
xor
(bad)
dec
arpl
adc
inc
mov
loop
neg
(bad)
enter
sub
loopne
mov
iret
out
arpl
jge
add
das
cmps
xchg
cld
sahf
ins
or
adc
jo
movs
inc
aaa
movs
add
jle
sub
mov
xor
rep
pop
(bad)
mov
das
scas
cmp
in
or
std
scas
dec
fsubr
js
outs
ret
lea
dec
push
inc
lock
lea
test
jmp
fcom
mov
pop
fucomp
cmp
adc
mov
in
xlat
jl
push
cmp
fcomp
das
fnsave
mov
pop
ins
xchg
bound
inc
inc
scas
inc
push
mov
fmul
xchg
pop
dec
xor
fisub
cdq
xor
fwait
push
jns
push
ret
in
in
dec
pop
inc
lds
push
pop
adc
fsub
push
lea
addr16
imul
adc
imul
push
add
push
jns
or
stos
cmps
add
(bad)
dec
cmps
inc
out
xchg
push
test
mov
mov
push
pop
xor
cmp
movs
int3
mov
jmp
iret
jo
mov
fadd
aam
scas
mov
icebp
or
mov
test
(bad)
adc
xbegin
fdiv
cli
inc
pop
inc
mov
xchg
sub
dec
loope
daa
and
xchg
clc
mov
addr16
inc
cmc
xor
add
xchg
outs
mov
mov
dec
jae
loop
or
adc
lods
fild
cmp
jp
inc
mov
push
mov
aas
fwait
inc
or
or
fs
scas
cmp
adc
sub
dec
aaa
cmp
shr
cmps
addr16
rol
and
dec
mov
jo
mov
cli
fist
and
data16
sti
pop
sub
in
mov
das
inc
add
in
ret
dec
mov
mov
mov
dec
xor
mov
add
aam
push
jns
test
jmp
cmp
jnp
fld
dec
mov
retf
push
retf
xchg
ins
retf
fwait
mov
xchg
mov
cmp
pusha
cmps
imul
shr
xchg
lds
fs
adc
cmp
and
(bad)
inc
sub
sub
pop
dec
retf
sbb
mov
sub
jmp
mov
jns
mov
cli
adc
iret
xor
xor
push
ds
and
popf
fs
cwde
xlat
jbe
retf
inc
mov
pop
or
stos
xor
in
ins
mov
cmp
dec
les
sbb
adc
sub
mov
add
(bad)
mov
cmps
stos
int
mov
pusha
xlat
and
in
test
and
cmps
scas
in
aad
or
aaa
or
cmp
mov
jb
lock
imul
rcl
aas
jecxz
jno
cmps
jg
repnz
std
or
or
add
mov
mov
lahf
(bad)
cmp
cmp
jl
jle
test
jmp
ret
shr
push
lea
hlt
xchg
test
movs
mov
ja
push
pop
jle
push
cld
jmp
jo
mov
mov
xchg
stos
aaa
cld
mov
mov
test
in
es
shl
inc
in
(bad)
cli
lods
sbb
inc
(bad)
in
push
jne
mov
mov
repz
jo
and
inc
rol
jbe
push
cdq
and
stos
in
sbb
xchg
cmps
cld
xor
out
mov
pop
aas
xchg
popa
sub
jg
neg
adc
in
mov
adc
inc
adc
outs
mov
xlat
and
hlt
add
or
inc
dec
xchg
int
adc
xlat
fs
pop
add
or
jmp
jne
add
(bad)
jnp
mov
push
cdq
sbb
and
aas
push
dec
push
aas
repz
xor
sub
movs
mov
jns
inc
xchg
xchg
sub
fcmovnu
and
repnz
scas
addr16
cmps
(bad)
jl
xor
aam
addr16
mov
sahf
push
mov
jno
jl
sbb
fcom
(bad)
cwde
cmc
sbb
cld
inc
(bad)
sahf
pop
sti
outs
push
shr
pop
jle
cld
sub
sbb
cwde
dec
std
jl
sbb
sbb
push
out
outs
ret
pop
adc
movs
fcomip
push
xor
hlt
fwait
das
fst
fwait
mov
mov
xor
sub
das
in
sbb
lock
lea
fwait
jae
cmp
(bad)
loopne
and
out
pop
fcomp
xor
fisubr
dec
pop
rol
addr16
xchg
ins
push
out
jge
push
sti
ins
mov
ds
dec
mov
sahf
pop
pop
jb
lds
sbb
outs
dec
test
not
test
stos
out
sbb
enter
out
cld
push
xor
add
push
cli
sub
ins
push
mov
ss
stos
jmp
mov
and
shr
leave
push
jae
mov
call
mov
push
push
push
sub
cmp
cmp
(bad)
xchg
fsubr
cld
data16
pop
lock
scas
aas
scas
pop
lock
mov
push
mov
fsubrp
xor
mov
out
and
(bad)
or
cmc
xor
add
iret
das
and
cmp
int
push
or
push
sbb
cmp
mov
xchg
sub
adc
mov
ret
mov
mov
jo
loop
outs
stc
sbb
loopne
test
mov
jg
shl
imul
inc
and
or
jge
stos
mov
fldenv
sbb
push
jmp
gs
push
push
call
pop
(bad)
mov
jge
add
push
or
push
leave
in
nop
xor
movs
and
repnz
or
and
js
pusha
lds
in
sbb
dec
push
mov
pop
bound
stos
es
scas
cmps
loop
sbb
fwait
cdq
mov
sub
fistp
jecxz
adc
jns
outs
push
and
cli
mov
(bad)
adc
lock
out
and
push
in
ss
xchg
cld
and
push
and
aaa
jmp
call
daa
in
sbb
jne
test
dec
push
stos
sti
mov
xor
mov
cmc
xor
aaa
rcr
lahf
(bad)
dec
or
sub
ins
leave
and
test
xor
scas
xchg
movs
cmp
imul
arpl
dec
jmp
pop
out
cmp
pop
mov
ret
dec
dec
aad
xchg
out
lock
cmps
cld
cli
jmp
push
xor
xchg
addr16
xchg
daa
pop
lods
xor
jnp
mov
cmps
pop
test
push
or
pop
lea
fimul
cmp
cwde
xor
jp
lods
fwait
es
cmps
cs
nop
cmp
(bad)
sub
(bad)
mov
in
dec
sbb
mov
jmp
xlat
inc
sub
lods
push
iret
jnp
jl
sub
mov
jne
mov
cli
(bad)
sbb
jge
push
icebp
rol
ret
mov
cli
push
(bad)
jl
mov
jp
dec
retf
jb
clc
dec
push
xchg
fwait
xchg
mov
cdq
ins
push
sbb
xchg
mov
gs
or
mov
test
adc
jg
mov
mov
xor
sbb
int3
into
pop
mov
mov
(bad)
pop
push
push
subps
mov
sub
xchg
shl
jb
cmps
mov
in
vpunpckhdq
enter
sub
fs
aas
sbb
cmp
pushf
hlt
mov
adc
and
push
mov
jae
aam
popf
xchg
ss
mov
mov
cmc
or
mov
dec
(bad)
scas
sub
and
ds
dec
xlat
push
jle
ss
mov
iret
xor
dec
jmp
out
mov
and
mov
mov
test
jge
aas
xchg
mov
mov
mov
cmp
(bad)
and
ins
test
pusha
fnsave
test
retf
and
int
lahf
cs
mov
jp
jle
pushf
inc
fiadd
js
and
stc
push
out
xchg
cwde
adc
and
retf
ss
repz
jmp
push
ds
call
jno
cmp
or
xor
add
xchg
dec
inc
jp
jae
sti
mov
fwait
push
mov
pop
std
hlt
lds
push
sub
push
dec
fidiv
sub
pop
(bad)
sub
(bad)
pop
dec
mov
(bad)
imul
hlt
sub
and
jge
out
dec
xor
retf
and
add
jl
push
lock
lea
jmp
mov
call
push
ficomp
adc
push
push
bound
xor
ins
lea
xchg
int3
lahf
and
push
xor
ins
mov
inc
retf
retf
leave
daa
shl
dec
jmp
mov
enter
mov
mov
or
sub
mov
fmul
sub
or
jb
leave
rcl
and
(bad)
or
sub
jb
pop
or
cli
das
popa
dec
mov
sub
outs
jo
jae
xor
stc
jmp
mov
stos
stc
push
pop
jle
dec
in
and
adc
jmp
sub
fwait
(bad)
lods
sub
cmp
or
mov
adc
call
and
cli
sub
jnp
sub
(bad)
or
enter
adc
pop
adc
push
in
push
jo
add
or
push
dec
lods
add
mov
lods
sub
pop
aaa
xor
xchg
cmp
xchg
mov
add
icebp
fisubr
and
rol
jge
xor
enter
ds
repz
test
mov
pop
dec
and
data16
inc
jne
xor
imul
addr16
popf
data16
cmp
push
imul
or
inc
mov
fyl2x
pop
js
pop
not
leave
cmc
sbb
and
sbb
fist
jo
call
xchg
mov
repz
not
leave
jl
movs
jp
or
pop
retf
xor
xchg
or
mov
pusha
outs
mov
lea
push
(bad)
repz
sub
cld
int3
push
mov
rcr
jge
rdmsr
xchg
ret
inc
or
int3
pop
jge
cmp
mov
in
adc
cmc
(bad)
repz
fdivr
fdiv
and
loope
rcr
icebp
xchg
scas
movs
mov
aaa
or
mov
dec
jb
or
fisttp
cld
jl
test
inc
sub
pushw
cmp
pop
mov
cdq
mov
push
cli
sahf
icebp
(bad)
sub
mov
push
aad
scas
enter
push
stc
pop
mov
shl
int
int3
cmps
xor
xchg
aas
xor
cmps
and
push
dec
inc
lea
jo
or
loope
std
out
mov
cmp
fmul
mov
dec
sub
mov
cmp
cdq
push
(bad)
jbe
cld
fisttp
stos
stos
inc
call
in
inc
jb
call
inc
xor
dec
sub
icebp
daa
cmc
shr
sub
ret
fwait
or
mov
in
scas
pop
inc
xor
mov
add
add
jp
pop
test
mov
(bad)
test
hlt
bound
lock
in
idiv
iret
dec
fisub
ss
and
js
jmp
dec
(bad)
cmc
jp
adc
into
es
ret
(bad)
cmp
mov
in
pop
fsub
scas
bound
mov
imul
std
in
adc
mov
mov
push
out
or
clc
inc
pop
push
xor
add
or
(bad)
loopne
cmp
popa
sbb
xchg
cmp
je
aas
popf
ficomp
mov
(bad)
xlat
stos
lods
outs
fadd
ins
inc
call
or
(bad)
loopne
cmps
imul
int3
push
or
add
sub
cli
rcl
mov
dec
stos
pop
mov
inc
jne
fist
imul
and
cdq
stos
cmp
int3
repz
pop
out
xor
jmp
pop
in
dec
push
mov
lea
xor
add
mov
fidivr
enter
xchg
lock
fisttp
or
xchg
dec
sti
pop
push
lea
inc
xor
sbb
sub
sub
fbstp
test
out
inc
jecxz
repnz
mov
pop
es
xor
nop
pop
dec
and
lock
cmp
stos
cdq
movs
or
(bad)
js
push
out
lahf
sahf
data16
pushf
outs
mov
pop
clc
xor
inc
or
sbb
sub
pop
aas
(bad)
clc
jb
dec
ret
and
mov
in
nop
xor
pop
das
scas
mov
push
push
dec
fnsave
out
and
hlt
ds
sbb
xor
cmp
mov
mov
cmp
shl
push
xor
in
test
xor
les
inc
sub
xchg
cld
in
push
pop
sub
pop
add
sbb
rcr
retf
fsubr
es
push
inc
mov
fsub
adc
fcom
(bad)
xor
test
push
xor
pushf
lods
cli
ss
dec
xor
mul
arpl
mov
pop
adc
jb
mov
cmp
enter
adc
test
int3
lock
popf
xor
cwde
jmp
adc
retf
inc
call
push
cmp
jno
loope
loopne
jp
or
hlt
enter
add
(bad)
movs
hlt
repz
mov
ins
inc
ja
sbb
xchg
fcom
mov
xor
les
(bad)
ja
(bad)
and
sub
jg
jmp
push
(bad)
into
int
xor
or
mov
jo
rcl
scas
push
enter
ret
cmp
bound
out
sar
and
jp
adc
dec
out
fistp
mov
dec
pop
mov
scas
shr
ss
lods
cmp
fwait
mov
mov
shl
sbb
aas
int
(bad)
cmps
rol
push
mov
push
fs
xor
movs
std
retf
call
push
sub
sar
push
fiadd
cmc
or
mov
add
inc
(bad)
shl
lods
adc
sub
mov
add
mov
arpl
push
arpl
loop
and
xchg
and
jnp
push
push
xor
and
adc
lods
push
idiv
leave
xchg
shr
dec
ret
fcmovnbe
push
and
(bad)
mov
lds
xor
push
jne
jnp
(bad)
in
inc
xor
push
jle
int
mov
(bad)
jo
jp
daa
repz
pop
xor
gs
idiv
cld
in
aad
gs
dec
sbb
push
fcmove
adc
ja
fincstp
mov
fadd
out
lods
mov
cs
push
in
cmp
fsub
je
ss
mov
cs
pop
aad
push
sbb
mov
pop
xor
cmps
sub
loope
cli
and
dec
ss
sub
in
mov
cmc
mov
pop
dec
mov
pushf
lock
rcr
stc
test
and
aaa
inc
iret
inc
cmp
fdiv
or
in
sbb
das
clc
mov
add
imul
xchg
mov
pop
ret
mov
mov
shl
scas
push
push
outs
cmp
icebp
ror
mov
adc
retf
pusha
(bad)
sbb
lods
pop
(bad)
loope
mov
pop
jmp
xchg
mov
test
sub
or
jg
inc
jle
scas
lods
js
mov
retf
andps
sub
jo
and
pop
in
xchg
sbb
popf
mov
pop
mov
dec
sbb
adc
sub
xchg
add
jmp
mov
xchg
xchg
loopne
or
test
dec
jb
jmp
out
dec
stc
jmp
mov
rcl
rol
inc
jl
jecxz
jbe
loope
mov
adc
mov
mov
inc
sar
sbb
loope
rcr
dec
sub
cmc
cmp
pop
movs
mov
sub
mov
sub
shl
mov
pop
push
jmp
jb
pop
add
pop
repnz
dec
mov
lds
sbb
hlt
cmp
push
mov
xchg
push
daa
or
mov
mov
scas
lahf
adc
ja
jge
pop
cmp
cdq
iret
test
icebp
mov
(bad)
jb
outs
xor
xlat
lods
addr16
mov
shl
scas
popa
inc
addr16
jno
xchg
jb
(bad)
push
stc
sahf
(bad)
cmp
fisubr
and
sub
pop
xchg
rol
fimul
jnp
cmc
repnz
ins
mov
rcr
push
xor
pop
or
xor
and
jg
cmp
mov
lods
stos
imul
loope
rcl
cmp
or
xchg
or
(bad)
inc
rcl
cmp
mov
or
lahf
xchg
(bad)
jno
mov
repnz
or
xchg
sub
enter
inc
push
icebp
ds
inc
(bad)
lods
xchg
stos
push
rol
jae
cdq
les
jge
xchg
rol
cmps
inc
add
jo
leave
es
pop
int3
xlat
sbb
jecxz
or
test
pusha
(bad)
pop
sti
xchg
cmps
push
mov
dec
fcom
dec
mov
lds
jmp
add
icebp
leave
push
movs
push
cmp
adc
add
add
jae
push
sub
sub
dec
pop
sub
scas
and
pop
fisttp
dec
ja
push
(bad)
cli
popa
ds
sahf
arpl
jge
aad
loope
mov
add
shr
inc
mov
cmp
mov
mov
mov
(bad)
mov
push
jno
test
ins
call
int3
jge
lock
push
add
jbe
adc
clc
jl
xor
dec
or
push
(bad)
lea
mov
sub
aad
fdivr
inc
or
iretw
push
inc
sahf
outs
pusha
push
jno
enter
(bad)
fbstp
dec
stos
cld
cmp
and
xchg
fidivr
movs
mov
and
test
movs
mov
and
clc
inc
dec
adc
rcr
shr
fistp
call
mov
mov
in
adc
dec
xor
push
pop
ret
xor
int
retf
mov
mov
sti
ret
pop
fisubr
ins
call
jne
jno
scas
or
push
out
inc
push
out
fsub
mov
sbb
dec
(bad)
mov
popa
ins
push
fsub
fisub
cmp
xchg
mov
into
add
shl
push
hlt
xor
stc
xor
or
mov
addr16
xlat
call
ror
mov
les
es
dec
ins
pop
sub
lea
jnp
adc
sbb
clc
add
or
push
outs
pop
retf
cmp
and
adc
movs
jno
push
and
push
add
inc
inc
cmp
add
pop
and
(bad)
push
les
arpl
jp
fwait
adc
mov
pusha
push
xor
mov
fidiv
cwde
retf
jmp
cdq
mov
stos
xor
xchg
push
cmp
cmp
repz
int
inc
scas
sbb
cmc
cld
aas
(bad)
aaa
jo
push
sti
mov
out
aas
sub
mov
pop
ds
icebp
clc
daa
sub
sbb
lock
loop
imul
dec
jnp
xor
int
adc
call
cmp
push
mov
inc
inc
cld
shr
cdq
cmp
in
aad
(bad)
mov
int3
or
nop
rol
and
movs
jg
adc
(bad)
in
xlat
(bad)
cmp
pop
aaa
aas
movs
outs
fcom
jle
jb
mov
rcr
dec
ficomp
dec
or
sub
dec
(bad)
(bad)
mov
(bad)
adc
mov
scas
adc
cmp
cdq
mov
dec
pushf
push
xor
call
push
xor
fidivr
rcr
or
mov
popf
outs
push
fst
shr
cmp
and
adc
and
rcl
xchg
std
idiv
adc
data16
push
(bad)
mov
inc
dec
jbe
retf
xchg
dec
out
xchg
not
pop
xor
jo
rol
fnsave
mov
mov
aas
cmps
or
in
call
jecxz
adc
(bad)
sub
enter
mov
repz
ror
(bad)
ret
movs
dec
ret
and
fcom
sub
mov
mov
aas
ja
(bad)
fs
aas
scas
clc
arpl
add
aam
xchg
xor
aaa
icebp
cmp
cs
rol
jae
mov
sub
mov
adc
xchg
inc
ss
and
mov
cmp
das
cdq
ds
add
ficom
push
int3
jns
js
(bad)
xor
pop
inc
dec
pop
ret
rol
mov
push
ret
adc
das
rcl
xchg
dec
jg
shl
or
repz
jne
mov
lds
jmp
cmp
mov
nop
popf
dec
push
lock
stos
jne
cmp
fisubr
shr
leave
js
or
sub
movs
xor
xchg
arpl
xchg
add
jl
sub
and
loope
imul
mov
xchg
es
in
rol
int3
cvtps2pd
sbb
or
icebp
jge
(bad)
ds
fist
lds
xor
(bad)
push
xchg
mov
pop
and
retf
(bad)
int3
mov
inc
inc
inc
push
adc
retf
sbb
push
inc
dec
inc
test
push
out
repnz
mov
dec
fild
sbb
test
rcl
pop
(bad)
dec
xlat
ss
mov
lds
add
push
sbb
mov
jge
add
in
push
inc
push
sub
std
ret
int
cmc
add
retf
jae
or
retf
mov
scas
push
movs
xchg
les
push
or
push
inc
adc
sub
dec
sahf
shr
mov
xor
xlat
jl
mov
dec
dec
pop
push
sti
sub
dec
imul
movs
shl
lock
movs
mov
popa
or
add
inc
das
dec
mov
push
lods
mov
sbb
jp
sahf
enter
imul
popa
test
sar
(bad)
pop
push
fidiv
in
adc
out
cwde
jle
mov
mov
(bad)
push
fwait
rcl
in
mov
scas
jge
mov
jae
aam
scas
mov
jns
and
lea
adc
push
sbb
cmp
push
icebp
push
out
sti
cmps
aad
dec
call
aam
add
rcr
test
je
popa
outs
aaa
sbb
fsubr
mov
inc
and
cmp
inc
enter
cmp
ins
loopne
mul
lods
mov
add
js
and
outs
dec
sub
xchg
cwde
adc
add
stc
out
in
and
test
lea
mov
push
(bad)
mov
xor
retf
or
shl
push
iret
mov
mov
fstp
add
xchg
aaa
adc
mov
mov
loopne
arpl
shr
push
xor
sbb
xlat
dec
jmp
sub
das
mov
out
mov
or
test
xchg
imul
sbb
cwde
pop
retf
cmp
(bad)
xchg
pop
xlat
ins
sub
data16
bound
cdq
scas
daa
sbb
ror
(bad)
pop
xor
dec
cmps
inc
adc
(bad)
push
fmul
xchg
int3
cld
gs
cld
cs
mov
loopne
lds
shl
cmps
jmp
loop
pop
pushf
out
xchg
lahf
sub
nop
adc
inc
or
jb
mov
out
mov
iret
dec
lods
addr16
pop
or
push
sahf
aas
push
test
xchg
stos
out
pop
xchg
es
not
pop
pushf
inc
dec
and
sti
jmp
or
loope
pop
into
lahf
sub
pop
dec
pop
cmp
std
cld
imul
jo
jecxz
jo
loop
pop
xor
mov
cmp
call
xor
xor
mov
push
cmc
cwde
push
add
movs
dec
scas
stos
scas
scas
ins
sbb
push
test
cmp
jnp
or
jno
mov
add
pop
clc
push
popf
imul
inc
mov
push
push
lahf
repz
mov
retf
jmp
xchg
rol
add
int
and
mov
sub
jnp
xchg
ja
iret
shr
jmp
xor
cmps
fadd
lods
je
in
scas
cmp
leave
push
enter
ss
mov
scas
(bad)
aad
sbb
cmp
neg
(bad)
and
iret
cmp
in
cwde
test
or
rol
inc
sub
pop
ror
pop
out
or
mov
mov
(bad)
sbb
push
push
pop
nop
in
nop
int
xchg
(bad)
retf
das
test
add
jae
jb
movs
neg
icebp
out
cs
xchg
enter
vpextrw
lds
jmp
jp
daa
adc
cmp
xor
mov
ret
movs
ss
dec
adc
push
add
cld
sub
loopne
xor
inc
lods
retf
loop
fcom
fidivr
mov
daa
out
stc
out
xor
stc
call
idiv
loopne
cmps
cmp
mov
loop
dec
push
sbb
es
push
add
stos
or
aad
pop
cmp
xor
pop
sbb
inc
adc
sbb
ror
dec
mov
mov
or
cmp
in
inc
imul
addr16
add
adc
movs
arpl
iret
cwde
dec
pop
inc
test
sbb
(bad)
push
cmp
and
movs
test
push
fcmove
xor
mov
in
mov
inc
and
push
jmp
push
in
leave
mov
add
test
ins
jb
arpl
xchg
sbb
clc
jo
test
aad
xchg
ds
jmp
and
dec
xchg
mov
lods
dec
ffreep
adc
cwde
jg
xor
(bad)
mov
cmps
dec
mov
mov
inc
arpl
cwde
jmp
push
jns
add
mov
inc
cmp
je
mov
lds
call
add
bound
mov
mov
cmps
shr
push
sub
(bad)
in
sbb
and
and
adc
and
sbb
pop
scas
dec
aad
ret
mov
mov
push
dec
add
into
lods
jnp
lock
ror
or
push
or
std
jb
mov
fldenv
mov
lods
pop
js
gs
sub
rol
jb
gs
jmp
ins
sbb
push
ret
mov
(bad)
xor
fwait
dec
inc
addr16
cdq
or
ss
xor
rcr
imul
dec
sar
mov
mov
mov
pop
mov
mov
mov
xchg
(bad)
nop
dec
les
mov
push
mov
scas
jecxz
push
mov
and
adc
test
jp
ja
movs
nop
mov
add
pusha
mov
aam
push
mov
jne
es
inc
in
jl
pushf
jbe
pop
push
arpl
sbb
imul
aam
dec
pop
out
leave
mov
cmps
dec
jbe
cmp
dec
mov
in
or
sbb
jecxz
fucomip
or
dec
movs
(bad)
and
or
clc
mov
mov
adc
inc
dec
aaa
sbb
stos
jns
xchg
cmp
sub
test
and
ror
(bad)
ins
push
stos
rcl
cmc
stc
jnp
rcl
retf
mov
xlat
rcl
sbb
test
loop
arpl
cli
sbb
mov
mov
and
dec
pop
gs
add
cmp
xchg
mov
mov
enter
and
xor
push
xor
(bad)
shr
fsubr
pop
or
jo
xlat
(bad)
mov
(bad)
xor
inc
push
cmp
aad
jle
int3
sbb
jns
leave
jae
stos
sar
sahf
add
push
stos
pop
js
fxch
arpl
jmp
jp
add
lahf
cmp
aam
cmp
or
cmp
movs
pop
aad
xchg
sub
loop
cmps
fcom
mov
retf
sti
sbb
mov
fsub
xor
push
push
shl
jp
push
fdiv
push
mov
xchg
das
shl
cmps
jnp
mov
(bad)
aaa
sbb
cmps
repz
adc
pushf
(bad)
cmc
pop
sbb
fimul
push
mov
ja
and
jp
xchg
inc
sub
mov
or
sub
(bad)
lods
inc
fmul
(bad)
mov
xchg
ds
and
outs
sbb
xchg
ja
jge
sbb
inc
sub
and
cmp
mov
shl
cdq
aam
adc
out
sbb
outs
shl
out
je
or
mov
out
test
sub
push
movs
inc
push
mov
mov
cld
xor
cmps
pushfw
sar
adc
test
loopne
stc
sbb
pop
cmp
mov
loop
pop
xchg
push
in
fistp
clc
int3
dec
or
jnp
aas
jnp
xchg
push
mov
iret
out
pop
in
mov
jmp
hlt
inc
lock
dec
scas
jp
pop
bound
xlat
imul
out
popa
xchg
iret
cs
sub
jmp
mov
nop
call
pop
mov
xchg
mov
rcr
pop
xor
pop
cmp
bound
xlat
jo
sbb
push
or
fbstp
cwde
xor
mov
add
sahf
jge
test
movs
ror
cld
mov
dec
(bad)
out
aas
jmp
xchg
adc
(bad)
adc
pop
repz
xchg
sti
js
dec
adc
js
test
mov
cli
sar
jnp
mov
mov
fcomp
add
scas
add
(bad)
cmp
sbb
lahf
in
js
jbe
mov
mov
dec
sti
dec
adc
pop
or
mov
add
into
in
cmps
adc
mov
sti
jmp
int3
je
mov
jnp
cmc
mov
sub
adc
push
and
xor
mov
add
or
fisttp
mov
push
es
mov
adc
push
xor
(bad)
aas
into
mov
test
out
aam
es
push
pusha
hlt
push
dec
cmps
icebp
iret
in
mov
xchg
pushf
xor
iret
sahf
mov
sub
xchg
pushf
scas
inc
xchg
cmps
and
fmul
aam
jg
adc
sbb
mov
xchg
mov
mov
test
pop
xlat
ret
pop
in
out
cwde
inc
sbb
push
inc
imul
daa
pop
fmul
in
adc
dec
iret
daa
add
xor
test
ret
je
ror
and
shl
jp
dec
or
or
push
pop
add
out
sbb
cmps
fs
fcom
(bad)
(bad)
sub
jb
push
aad
sar
xchg
xor
xchg
xlat
xchg
ror
test
or
mov
outs
or
popa
hlt
jge
or
outs
out
out
push
pusha
pushf
or
mov
call
pop
xchg
pushf
mov
rcl
idiv
neg
add
jmp
sti
pslld
xor
mov
aaa
ja
add
xchg
addr16
jnp
fucomp
push
cmps
adc
push
push
mov
push
aam
(bad)
mov
es
hlt
test
jnp
or
cmp
aaa
xchg
sbb
xchg
and
sub
pusha
addr16
jle
cmc
push
jo
cmp
jo
sub
jl
bound
in
push
movs
stc
neg
fld
cmp
add
out
mov
cwde
push
arpl
push
mov
ret
xchg
jb
cwde
push
and
cld
mov
wbinvd
pusha
cmc
outs
dec
ficomp
mov
sub
ret
bound
sahf
setge
sbb
int3
pop
pushf
es
popa
int
shl
je
iret
dec
xor
pop
retf
jno
mov
or
cmp
mov
dec
and
or
xlat
gs
add
push
rcl
enter
fmul
mov
pop
out
loope
cmps
fdiv
pop
pop
pop
mov
fcom
adc
jbe
push
imul
pop
inc
xor
repz
adc
lods
push
pop
je
aad
shl
leave
inc
rcl
mov
loop
loopne
mov
add
test
ss
lods
or
repz
rol
lods
leave
sub
mov
and
or
mov
mul
push
aam
sbb
cdq
pop
mov
mov
out
dec
mov
and
push
xchg
aad
mov
mov
arpl
xchg
or
scas
in
mov
jp
mov
mov
and
ret
ficomp
fild
ror
call
fwait
mov
jl
dec
int
sub
repz
leave
xor
pop
mov
or
in
stos
int3
mov
out
in
aam
inc
retf
jo
out
jnp
mov
cmp
aad
xchg
movs
xchg
push
mov
loopne
jmp
sahf
and
mov
pop
adc
icebp
addr16
fs
movs
int
mov
xor
pop
mov
inc
mov
sub
dec
mov
cwde
fcmovu
rol
adc
dec
pop
icebp
push
jle
ret
pop
mov
xchg
pop
add
retf
push
xlat
add
js
clc
xchg
ins
out
call
lods
div
sbb
in
in
das
dec
add
mov
aaa
div
sub
sub
inc
inc
mov
les
mov
enter
mov
sahf
add
ret
jno
rol
and
pop
cmp
fldcw
jb
scas
rcl
push
sbb
jecxz
dec
pop
ret
or
dec
push
sub
xchg
pop
(bad)
jmp
rol
pop
retf
mov
in
je
add
aas
pop
sar
repz
fst
aaa
jge
rcr
mov
in
out
sbb
push
es
push
jb
mov
sub
mov
jl
test
push
retf
add
mov
prefetch
or
mov
call
mov
cmps
(bad)
out
jnp
mov
or
data16
repnz
or
jl
lahf
lods
and
pop
mov
xor
and
add
iret
fdivr
pop
push
icebp
lods
call
test
cmp
cmp
cmp
dec
mov
or
(bad)
or
sahf
xchg
mov
aad
les
pop
add
in
push
and
(bad)
retf
inc
and
push
xchg
dec
out
push
setb
cmc
or
loop
push
fistp
and
jle
movs
mov
jbe
mov
mov
xchg
jecxz
dec
icebp
aaa
dec
addr16
idiv
jl
push
cs
aam
cli
mov
and
lahf
(bad)
aaa
mov
ins
and
mov
enter
clc
ret
test
jp
stos
xlat
stos
inc
mov
arpl
push
jne
or
movs
jg
or
sbb
(bad)
call
xchg
inc
mov
ret
jle
fs
(bad)
dec
addr16
cmp
push
call
or
ret
adc
lods
inc
mov
inc
call
test
push
cmp
sbb
jmp
mov
fimul
(bad)
and
sbb
int3
jecxz
aam
xor
dec
sbb
call
retf
jle
push
rol
lods
push
jecxz
push
jo
xor
fdiv
ins
xchg
lds
jnp
stos
out
enter
jbe
jl
fcom
(bad)
pushf
fucomi
jmp
add
(bad)
mov
daa
mov
out
xor
push
(bad)
or
add
dec
jge
ins
in
pop
sti
xchg
or
inc
stc
mov
lods
mov
jecxz
mov
sar
call
dec
or
ja
sbb
dec
jnp
out
adc
xor
pusha
arpl
pop
movs
ins
inc
retf
lea
inc
jle
mov
jle
callw
in
pop
pusha
cmps
sub
fdiv
aam
mov
cs
lock
inc
clc
push
jp
xchg
mov
jmp
mov
lods
pop
js
(bad)
in
pop
rcl
hlt
jg
in
dec
xor
sbb
fldcw
cli
movs
pop
outs
rcl
mov
clc
dec
out
into
mov
add
std
outs
push
push
inc
in
and
adc
xchg
mov
jecxz
mov
mov
pop
pushf
push
das
and
sbb
cmps
and
push
cmc
push
jo
xor
mov
add
xor
ja
stc
xor
add
and
sbb
lds
sar
cmp
jo
imul
and
jo
jne
mov
jnp
mov
test
xor
pusha
test
push
std
mov
es
pop
xchg
(bad)
in
aaa
sti
jae
xor
fiadd
mov
add
xor
ret
out
pop
jle
xor
mov
add
fs
fxch
rcl
ja
jle
dec
xor
loopne
mov
jmp
fs
arpl
jp
fdivr
aad
lea
mov
cmp
push
in
push
push
mov
mov
adc
loop
cmp
leave
add
add
add
dec
scas
inc
out
pop
xor
jl
fwait
imul
jo
shl
cmps
(bad)
or
adc
out
or
pop
and
int3
jecxz
sbb
cmps
stos
out
pop
(bad)
(bad)
ficom
clc
or
pushf
cwde
stos
cmps
jb
loope
push
mov
or
in
cld
nop
out
hlt
in
jle
xchg
ficom
mov
mov
call
xchg
push
or
iret
mov
xchg
dec
into
ins
sbb
push
jno
mov
(bad)
mov
test
jnp
mov
ins
repz
pop
mov
mov
js
scas
or
bound
outs
jbe
retf
mov
jmp
cmp
retf
mov
add
fdivr
pop
and
jo
rcr
add
push
ss
jle
mov
lock
cdq
xor
cmp
and
sbb
jnp
inc
or
lods
stos
xchg
mov
mov
retf
(bad)
cmc
jle
fcomp
jbe
std
out
mov
sahf
push
sbb
add
rcr
pusha
loope
xor
leave
jae
mov
pop
cld
push
fwait
imul
xor
(bad)
cmp
pop
ds
xlat
adc
(bad)
jecxz
sbb
pop
in
cli
retf
inc
ins
xchg
xchg
stc
ins
sti
in
fcomp
jo
push
and
xchg
sub
push
or
add
daa
or
or
sahf
ins
adc
sub
test
dec
je
test
ins
jbe
fs
cmp
iret
dec
in
jo
stos
push
fnstsw
pop
mov
mov
inc
shl
sbb
cmp
loopne
loop
mov
cli
inc
inc
shr
pusha
mov
adc
xlat
sbb
into
sub
cmp
and
cmp
cmp
lods
fcomp
cmp
mov
lea
mov
cmp
cld
cdq
add
xchg
jge
mov
jecxz
rcl
mov
loopne
sbb
sbb
adc
and
stos
retf
jge
(bad)
mov
push
pop
mov
sub
out
jne
add
xor
push
out
fisttp
jo
dec
mov
pop
mov
xor
cmp
popa
xchg
push
jmp
test
mov
(bad)
(bad)
and
into
ret
aam
jge
dec
aad
pop
into
je
pop
imul
or
(bad)
mov
pop
fst
cmps
mov
call
mov
dec
mov
das
popf
mov
pushf
lea
mov
inc
movs
push
jmp
sub
pusha
fisttp
push
pop
cmp
add
lock
mov
xchg
add
push
jecxz
fcmovnbe
aam
sub
mov
dec
imul
mov
fmulp
sti
add
cmp
fsubr
add
dec
rcr
add
in
test
test
ret
mov
mov
push
ds
cmp
lahf
loope
push
xchg
adc
fist
sbb
push
fsubr
inc
int3
xor
or
and
pop
sti
repnz
int3
adc
xchg
imul
lods
cmp
xchg
aam
inc
leave
add
dec
fisttp
jge
or
pop
dec
sub
xor
das
mov
std
dec
test
adc
bound
and
xlat
ret
dec
scas
or
cmp
dec
mov
out
sar
lods
fisub
mov
int3
(bad)
repnz
jmp
clc
jne
jge
inc
add
jbe
mov
xor
xchg
push
push
sar
dec
xlat
add
adc
cmc
loopne
push
cli
xchg
ret
loope
xor
iret
inc
ja
adc
xchg
jle
mov
xlat
in
xor
mov
jb
cmps
in
aaa
xchg
inc
add
inc
cmp
(bad)
pop
(bad)
push
(bad)
aam
stc
and
loope
call
jp
jns
xor
cmp
jo
sub
int3
or
push
xchg
div
loop
lahf
stc
sbb
push
repz
xlat
add
retf
popa
das
or
xchg
in
adc
ret
mov
in
repnz
es
mov
es
xor
shl
pop
and
dec
xchg
adc
std
pop
(bad)
imul
xor
sahf
emms
std
pop
daa
cmps
shr
mov
cwde
(bad)
xchg
dec
dec
stos
or
movs
inc
inc
sub
or
ret
mov
mov
pop
mov
pop
mov
mov
dec
push
outs
lea
sub
(bad)
jmp
mov
neg
outs
pop
retf
jbe
cli
inc
loop
fsub
ret
enter
xor
test
jg
lods
je
adc
and
shl
fmul
stos
addr16
dec
int
sub
cmp
mov
xchg
cld
leave
push
sub
mov
in
das
popa
sbb
dec
lahf
stos
nop
fs
sub
out
xchg
popf
mov
mov
pop
xchg
ret
jg
xchg
fs
loopne
inc
and
add
jo
std
sbb
sti
sub
cmp
fst
mov
mov
loop
mov
adc
mov
and
fild
add
neg
xchg
adc
dec
cdq
ss
fwait
nop
mov
add
or
sbb
sub
jo
cmps
pop
scas
leave
mov
or
mov
(bad)
(bad)
arpl
in
add
jno
pop
(bad)
mov
pop
ret
mov
sub
inc
pusha
adc
dec
addr16
pop
dec
cmp
and
ss
test
dec
cli
lea
inc
data16
mov
sbb
sub
dec
ja
push
inc
clc
cli
mov
push
sbb
(bad)
xor
inc
icebp
daa
call
jp
xchg
mov
add
(bad)
test
mov
inc
in
cmp
cs
std
mov
and
pop
cli
jge
pusha
or
mov
sar
dec
mov
mov
adc
or
sub
call
lahf
dec
jb
imul
gs
popf
pop
dec
ins
stos
xor
rcr
aas
jmp
pop
mov
mov
in
add
fild
pop
pop
mov
xchg
lock
ror
adc
jo
sub
adc
out
pushf
cmp
adc
mov
dec
scas
or
inc
jg
pop
and
cmp
push
in
xor
push
jbe
and
mov
cmp
test
les
mov
inc
jne
shr
push
jle
shl
fdivr
data16
dec
add
dec
aas
fist
vpsrlq
cmc
cs
dec
vcvtss2sd
mov
in
push
jne
sbb
jb
out
push
test
enter
mov
ret
sub
pop
mov
mov
mov
fcomp
mov
punpckldq
jg
dec
pop
ja
jae
enter
cli
xor
add
mov
xchg
out
jbe
out
call
add
test
aam
out
out
jae
movs
out
jne
cld
outs
mov
mov
xlat
scas
mov
cmp
addr16
mov
int3
and
ins
adc
(bad)
push
and
inc
mov
dec
jmp
je
xor
lds
dec
mul
outs
scas
and
in
add
pop
loope
stos
pop
clc
xlat
lds
xchg
push
pop
mov
in
push
or
cmp
daa
inc
cmp
sub
xor
push
scas
in
shl
leave
int
mov
push
test
jno
fwait
cmp
pop
dec
push
test
enter
ins
ins
loopne
cli
aas
sbb
push
scas
ror
add
jo
iret
xor
add
mov
push
jne
or
jno
inc
mov
pop
out
add
xchg
adc
jmp
sti
or
ret
dec
dec
cmp
adc
sahf
and
xchg
sti
adc
cli
add
cmc
push
mov
fimul
jmp
or
stc
jmp
sti
ins
dec
add
mov
in
imul
out
inc
aaa
add
shl
and
iret
ins
cwde
outs
shl
(bad)
sar
retf
jmp
mov
popa
push
mov
stos
add
dec
enter
mov
sti
ds
sbb
sub
push
lods
xor
idiv
div
xchg
push
jge
pusha
out
fsubrp
mov
(bad)
daa
sbb
xchg
xchg
sub
push
sub
jmp
adc
ret
lods
loop
xor
scas
mov
dec
jp
jmp
fild
jno
lea
sub
jg
(bad)
int3
and
mov
cwde
mov
pushf
mov
das
jo
cmp
xor
nop
xchg
loopne
js
call
call
(bad)
clc
mov
movs
bound
or
fwait
xor
adc
jae
ror
cmc
(bad)
test
mov
push
and
cmp
or
mov
shl
std
pusha
mov
mov
mov
mov
lahf
addr16
push
std
repz
adc
cmc
sbb
sub
arpl
cmp
cmp
jnp
mov
push
and
pop
push
inc
pop
and
scas
adc
shr
mov
pop
add
popa
leave
test
or
outs
ins
push
dec
cmp
fstp
inc
aad
xchg
aam
div
retf
xlat
ret
mov
sbb
ja
aas
and
adc
dec
mov
mov
push
jl
adc
movs
loopne
ret
mov
fiadd
in
xchg
pushf
hlt
adc
loop
(bad)
mov
out
dec
lock
clc
cwde
cwde
mov
into
or
aaa
xchg
cmp
aad
and
es
mov
cwde
cmp
fistp
lahf
cli
jne
fwait
bound
rcl
mov
ret
dec
out
xlat
push
adc
outs
pop
sbb
cmps
mov
add
sub
pop
cmovg
mov
aam
and
pop
in
xchg
jo
cmp
ss
aam
add
or
mov
iret
imul
sar
mov
pop
mov
sbb
xchg
xor
xor
xchg
adc
pop
sti
iret
sbb
and
dec
mov
jle
adc
cs
out
push
mov
pop
cmp
ja
test
in
rol
fidiv
adc
add
push
pop
pushf
or
xchg
movs
div
call
pop
ds
hlt
xchg
sbb
or
mov
dec
jnp
call
jecxz
ficom
pop
repnz
cmp
dec
shl
mov
fisub
mov
xchg
push
xor
test
jmp
(bad)
clc
or
pop
push
test
in
hlt
retf
in
dec
inc
xchg
pop
mov
fcomp
(bad)
pop
lss
popa
lods
inc
fisubr
jns
sbb
pop
fldcw
dec
add
cld
xor
leave
mov
test
(bad)
cmp
xor
push
aad
sbb
xor
lahf
dec
mov
or
dec
daa
ds
fild
xchg
or
pop
aas
or
mov
add
aas
mov
sub
sbb
sbb
mov
add
fcom
mov
repz
ja
mov
clc
fdiv
mov
retf
jo
fmul
pop
pop
scas
cmps
xchg
dec
cmps
fdiv
adc
jbe
dec
and
adc
dec
gs
idiv
dec
push
xor
into
push
lock
fcomp
push
cli
and
xor
dec
add
mov
jecxz
fistp
cmps
fimul
out
sbb
pop
mov
jle
mov
mov
jge
inc
lods
fcomp
pushf
pop
in
xchg
or
mov
jb
and
and
inc
jo
mov
push
int
das
or
or
fwait
cmp
mov
or
or
test
xor
push
mov
add
in
loop
jns
xlat
(bad)
aas
push
(bad)
int3
jno
aas
aas
xchg
popf
int
mov
sti
das
scas
stos
fld
movs
or
push
clc
in
and
cmp
push
dec
js
stos
mov
mov
pop
and
sbb
call
mov
movs
mov
sbb
movs
fisttp
push
push
mov
dec
or
loopne
rol
add
jae
push
std
outs
mov
or
call
push
call
mov
(bad)
cmc
rol
dec
js
sub
mov
sub
cmps
clc
les
sti
cs
push
movs
and
xchg
ds
lods
dec
mov
repnz
into
test
mov
mov
out
mov
mov
rcr
cmps
clc
ret
in
es
or
fcmovnbe
sbb
xor
jle
xchg
or
cmp
lods
sbb
repz
xlat
loopne
les
sbb
shl
dec
cwde
ret
adc
and
cmc
add
mov
call
mov
in
in
mov
pop
and
dec
pop
or
add
jnp
aas
push
popf
sar
and
pop
jg
push
sbb
ds
and
mov
mov
inc
(bad)
xor
fstp
loopne
cmp
sub
mov
dec
xlat
loopne
jno
es
push
inc
stos
inc
push
js
inc
jmp
ror
or
ror
xchg
sbb
pop
jmp
std
xor
pop
mov
imul
test
movs
stc
sub
mov
rcr
inc
sahf
cmp
jne
or
das
xor
xchg
das
jb
rol
mov
mov
aam
sbb
je
push
xchg
sti
or
sahf
push
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
xlat
aas
push
fnstenv
int3
icebp
rol
mov
imul
and
ret
shl
cmc
lods
adc
std
jmp
(bad)
int3
jno
cmp
or
imul
in
pop
aas
and
mov
jp
lods
adc
gs
sub
fnstenv
cmp
mov
imul
and
ret
shl
in
adc
mov
sub
(bad)
int
iret
test
adc
inc
mov
aas
mov
and
adc
mov
sub
(bad)
int
iret
test
adc
or
mov
and
adc
mov
sub
(bad)
int
iret
test
adc
fbstp
aas
mov
and
adc
mov
sub
(bad)
int
iret
test
adc
mov
pop
aas
mov
and
adc
mov
sub
(bad)
int
iret
test
adc
ja
fst
pop
aas
mov
and
adc
mov
sub
(bad)
int
iret
test
adc
cmp
aas
mov
and
adc
mov
sub
(bad)
int
iret
test
adc
movzx
push
pop
pop
aas
mov
and
adc
mov
sub
(bad)
ret
mov
adc
pcmpgtb
push
sub
int3
shl
adc
sub
f2xm1
cmp
aas
adc
add
gs
aas
and
shl
push
mov
sub
fxch
cmp
icebp
cmp
mov
add
pop
aas
and
shl
in
adc
xchg
std
sub
(bad)
int3
jno
cmp
or
imul
pop
pop
aas
mov
das
mov
cli
add
sub
(bad)
int3
jno
cmp
or
imul
xor
and
cmps
fbstp
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
in
pop
aas
mov
mov
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
lds
mov
arpl
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
mov
and
cmps
pop
mov
cli
add
sub
(bad)
int3
jno
cmp
or
imul
xchg
pop
aas
mov
adc
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
dec
pop
aas
mov
dec
mov
cli
add
sub
(bad)
int3
jno
cmp
or
imul
and
xor
cmps
shl
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
sbb
xor
dec
cli
add
sub
(bad)
int3
jno
cmp
or
imul
cmc
pop
aas
mov
xchg
mov
cli
add
sub
(bad)
int3
jno
cmp
or
imul
lods
pop
aas
mov
(bad)
mov
cli
add
sub
(bad)
int3
jno
cmp
or
imul
test
mov
fwait
mov
cli
add
sub
(bad)
int3
jno
cmp
or
imul
jge
aas
mov
ja
dec
cli
add
sub
(bad)
int3
jno
cmp
or
imul
push
pop
aas
mov
shl
adc
mov
sub
(bad)
int3
jno
cmp
or
xlat
rcr
(bad)
mov
stos
adc
std
sub
(bad)
int3
jno
cmp
or
arpl
push
in
aas
mov
pop
mov
cli
add
sub
(bad)
int3
jno
cmp
or
imul
fstp
mov
xor
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
mov
aas
mov
xlat
mov
cli
add
sub
(bad)
int3
jno
cmp
or
adc
push
pop
pop
aas
and
shl
push
rcl
loop
cld
sub
fchs
cmp
icebp
cmp
aas
adc
add
pop
aas
and
shl
in
adc
mov
sub
(bad)
int
iret
test
adc
cmp
push
jns
aas
mov
and
adc
mov
sub
(bad)
int
iret
test
adc
das
data16
pop
aas
mov
and
adc
mov
sub
(bad)
int
iret
test
adc
adc
push
jns
aas
mov
and
adc
mov
sub
(bad)
int
iret
test
adc
pop
data16
pop
aas
mov
and
adc
mov
sub
(bad)
int
iret
test
adc
jmp
fcom
pop
aas
mov
and
adc
mov
sub
(bad)
int
iret
test
adc
fbld
push
jns
aas
mov
and
adc
mov
sub
(bad)
int
iret
test
adc
ret
fcom
pop
aas
mov
and
adc
mov
sub
(bad)
int
mov
xlat
push
ins
pop
aas
mov
and
adc
int
sub
fst
cmp
jno
test
adc
std
imul
lock
test
mov
stc
popa
xlat
xchg
aas
sbb
inc
aas
pushf
jno
cmp
imul
test
inc
cli
mov
stc
jnp
test
or
push
aas
mov
sub
imul
test
dec
cli
pop
test
sub
(bad)
aas
push
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
fsin
cmp
ins
adc
xchg
imul
fadd
mov
cli
mov
sub
(bad)
cld
jno
or
or
imul
inc
retf
cmps
and
jle
fdivr
dec
xlat
mov
aas
int3
jno
sbb
(bad)
imul
aam
mov
cli
xchg
ins
xlat
cmps
aas
and
and
movs
jno
sbb
xchg
imul
icebp
ret
shl
lods
jle
(bad)
xlat
mov
aas
lods
jno
sbb
mov
mov
mov
dec
mov
cli
xchg
lods
xor
idiv
inc
xlat
movs
aas
and
data16
int3
jno
and
or
mov
inc
mov
cli
mov
inc
xlat
mov
aas
int3
jno
sbb
(bad)
imul
aam
mov
cli
xchg
ins
xlat
cmps
aas
and
and
movs
jno
sbb
xchg
imul
xchg
(bad)
mov
jnp
mov
fnstcw
aas
movs
jno
adc
retf
push
dec
pop
bt
mov
cli
lds
sub
(bad)
test
or
xchg
imul
rol
mov
cli
test
inc
loop
stc
jle
xchg
aas
adc
jno
cmp
or
imul
rol
mov
cli
xchg
lods
push
(bad)
stc
inc
xlat
mov
cmp
cmp
int3
jno
adc
mov
push
or
mov
or
xor
test
adc
out
aas
ins
(bad)
int3
jno
xor
or
pop
push
mov
dec
mov
cli
mov
inc
xlat
mov
cmp
sub
sub
imul
hlt
ret
mov
mov
or
mov
jge
movs
aas
cmp
sub
mov
adc
xchg
imul
jecxz
mov
dec
mov
cli
xchg
lods
jbe
xchg
stc
jle
mov
fnstcw
aas
movs
jno
sbb
mov
push
add
mov
push
mov
cli
mov
sub
(bad)
pushf
jno
adc
cwde
imul
ret
ret
mov
cli
mov
add
idiv
fldenv
jno
adc
or
imul
sub
mov
inc
mov
cli
mov
stc
dec
xlat
lahf
aas
cmp
cs
mov
adc
sti
imul
ffreep
mov
cli
xchg
lods
jp
(bad)
inc
xlat
(bad)
aas
push
fld
jl
mov
or
imul
loope
xor
popa
test
cmps
and
adc
mov
sub
fldenv
aas
adc
sti
imul
retf
ss
inc
test
cmps
and
adc
mov
sub
fnstenv
aas
adc
sti
imul
lods
ss
mov
(bad)
in
adc
mov
sub
fld
jno
cmp
or
imul
mov
scas
(bad)
in
adc
mov
sub
fst
jno
cmp
or
imul
xor
mov
and
adc
mov
sub
fldenv
jno
cmp
or
imul
xchg
ss
test
dec
cli
in
adc
mov
sub
fnstenv
jno
cmp
or
imul
jnp
xor
cmc
scas
(bad)
in
adc
mov
sub
fld
(bad)
jno
cmp
or
imul
inc
aaa
xor
in
(bad)
in
adc
mov
sub
fst
(bad)
jno
cmp
or
imul
sub
xor
aad
(bad)
in
adc
mov
sub
fldenv
(bad)
jno
cmp
or
imul
xor
xor
lds
dec
cli
in
adc
mov
sub
fnstenv
(bad)
jno
cmp
or
imul
pop
aaa
xor
xor
mov
cli
in
adc
mov
sub
(bad)
int3
jno
in
xor
push
mov
fcom
aaa
xor
or
inc
cli
in
adc
arpl
fldcw
cmp
or
imul
popa
xor
mov
aaa
fild
in
adc
stos
xchg
xlat
(bad)
aas
push
fldenv
(bad)
jno
cmp
or
imul
and
mov
dec
fild
in
adc
ret
xchg
xlat
(bad)
aas
push
fxch
push
(bad)
jno
cmp
or
imul
retf
xor
mov
cdq
fild
in
adc
ja
xlat
(bad)
aas
push
fstp
cmp
or
imul
xor
cmps
aad
inc
cli
in
adc
(bad)
mov
addr16
jnp
cmp
mov
inc
mov
add
cmc
clc
adc
test
xchg
dec
mov
sub
mov
es
imul
ret
retf
dec
mov
mov
dec
mov
cmp
mov
jno
mov
mov
(bad)
(bad)
dec
xchg
mov
and
fwait
popf
inc
mov
sub
inc
hlt
scas
pop
jns
int
bound
je
iret
ffree
sub
fisub
xchg
xchg
sub
xchg
push
adc
mov
cmp
btc
stos
mov
xchg
in
jp
fcom
cmp
stos
in
adc
mov
mov
je
out
std
ret
cmps
aam
shl
leave
xlat
xor
stc
sub
mov
cmps
repz
push
fcmove
imul
cmp
mov
mov
xchg
xchg
fldenv
fldcw
aaa
lods
dec
aas
call
mov
xchg
or
push
cmp
dec
xlat
les
sub
in
push
call
xor
(bad)
repnz
xlat
push
push
cmp
aam
xchg
aad
(bad)
sub
mov
nop
pop
mov
dec
aas
test
out
pop
mov
les
btr
pop
ins
ret
xchg
in
mov
sahf
mov
push
nop
rcr
mov
push
outs
mov
push
mov
mov
jbe
and
xchg
sti
jp
ret
test
push
int3
jno
cmc
outs
pusha
mov
sbb
(bad)
mov
xchg
in
pop
xchg
lock
mov
aas
int3
jno
loopne
jl
mov
scas
push
ins
pop
ins
retf
aam
mov
(bad)
xchg
enter
stc
jle
xchg
pop
and
mov
pop
popa
mov
mov
scas
cmp
iret
fisub
and
repnz
pop
xchg
xchg
aas
push
fstp
pop
mov
ins
mov
push
sub
dec
repz
or
in
fs
fs
dec
aas
fwait
and
mov
mov
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
ds
push
pop
cld
cdq
inc
cmps
and
adc
dec
push
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
sahf
test
fidivr
(bad)
fcmovbe
(bad)
sbb
jnp
retf
fdiv
mov
inc
mov
push
call
jecxz
xchg
add
xor
xchg
ret
shl
repnz
push
sbb
sti
push
sar
lahf
mov
adc
cmp
icebp
sub
test
sub
mov
jo
out
jecxz
(bad)
aas
push
(bad)
int3
jno
cmp
or
pop
cmp
and
dec
cli
in
adc
push
stc
and
fnstsw
push
(bad)
int3
jno
xchg
aas
adc
fwait
mov
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
dec
aas
mov
and
add
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
div
adc
in
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
in
pop
aas
inc
in
mov
in
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
sub
mov
aad
mov
cli
in
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
sub
ret
shl
in
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
push
xor
enter
inc
sbb
loop
fsubr
fldcw
int3
cmp
cmp
mov
dec
inc
out
mov
and
or
aam
pop
xchg
dec
xor
mov
mov
lds
mov
adc
popf
xchg
out
clc
int
cld
push
pop
sbb
stos
ret
dec
popf
pop
push
loopne
dec
int3
jb
sbb
mov
cmp
add
jb
mov
mov
pop
scas
in
idiv
icebp
inc
out
addr16
test
dec
mov
retf
xor
cli
loopne
retf
repz
pushf
fistp
xor
fild
cdq
arpl
rcl
push
lock
cmp
xlat
mov
jge
lds
lea
jp
lahf
mov
pop
in
test
call
dec
cmp
jmp
jge
or
adc
es
ret
(bad)
xor
xor
sahf
je
ret
mov
add
daa
adc
mov
pop
jp
loopne
fwait
mov
push
adc
fisub
imul
push
(bad)
mov
mov
ss
fs
mul
sub
fisub
cs
and
sub
test
movs
and
cmp
cmp
jmp
data16
pop
sub
mov
jae
dec
sar
adc
into
jge
push
fisubr
hlt
cmp
(bad)
pop
jno
and
and
pop
sbb
mov
ret
into
enter
movs
and
fdiv
daa
jo
dec
cmp
cld
add
push
aam
xor
test
mov
cmp
test
adc
sbb
adc
mov
cmp
and
sbb
shl
cdq
sahf
mov
out
pop
add
xor
cli
fild
pop
cmp
jae
movs
jl
fild
inc
ret
cmp
loope
push
fsubr
mov
bound
xor
cmp
xor
int3
mov
shl
cmp
in
xchg
add
cmp
scas
push
(bad)
fld
cmp
mov
sub
xor
aas
loopne
(bad)
sahf
sub
es
sub
int
push
iret
mov
out
push
adc
cmova
fsubr
fmulp
enter
or
jo
(bad)
pop
add
mov
add
xchg
jg
retf
mov
in
inc
scas
adc
xchg
stos
scas
inc
arpl
out
out
in
adc
sbb
mov
adc
fwait
cwde
or
sub
xchg
sbb
xchg
jae
sub
cmc
pop
push
retf
jmp
sbb
addr16
and
sub
mov
in
movs
jmp
enter
xchg
ds
xchg
(bad)
call
movs
jmp
test
mov
sbb
push
xor
or
xchg
dec
mov
sub
enter
fwait
(bad)
imul
imul
pop
mov
aad
push
jge
pushf
adc
xchg
lods
std
dec
cs
adc
movs
js
adc
or
les
mov
ins
mov
dec
bnd
mov
rcl
adc
sbb
cld
mov
out
push
push
xchg
sahf
pop
mov
xor
movs
lea
jno
inc
int3
fcomp
aaa
inc
jge
mov
cmp
cmps
das
add
mov
inc
stos
loop
cld
mov
xor
in
movs
sub
ret
repz
jg
or
retf
gs
aas
mov
jle
sbb
dec
test
(bad)
sub
mov
(bad)
cmps
out
rol
jl
outs
ds
jno
adc
adc
je
enter
fistp
imul
pop
cmp
mov
or
es
inc
stc
enter
adc
int3
cmp
mov
js
push
test
call
mov
add
fcom
mov
pop
scas
es
sub
sar
dec
cld
push
push
inc
icebp
lods
in
fmul
rcr
adc
xor
stos
cmc
sbb
jl
jnp
xlat
xchg
cmp
lds
pushf
pop
and
int3
shl
ins
retf
inc
je
push
cmps
les
dec
aad
jmp
adc
add
pop
jo
imul
fild
lods
xchg
sahf
repnz
test
test
push
(bad)
lods
sub
nop
cmc
xchg
jb
aam
dec
mov
add
dec
xor
sbb
leave
dec
pop
mov
jno
push
jg
ja
mov
iret
jg
sti
jp
jns
pop
fnsave
enter
ret
mov
xor
pop
cli
sbb
push
push
call
adc
and
out
iret
cmc
and
js
add
xor
rol
push
jns
jo
in
jmp
ret
test
xor
mov
out
pop
sbb
pop
add
dec
inc
movs
fsub
push
scas
dec
stos
add
aam
push
dec
in
addr16
out
sbb
and
outs
xchg
and
icebp
inc
test
mov
pop
jmp
daa
dec
ds
fldlg2
mov
shl
std
sti
mov
lods
gs
sbb
lea
xlat
push
mov
mov
stos
sub
adc
in
sbb
or
ret
and
xor
iret
mov
push
test
out
or
pop
imul
cwde
push
xchg
push
cmp
sbb
pop
or
ins
push
jne
test
or
dec
mov
movs
inc
inc
or
xchg
xchg
(bad)
imul
dec
or
cli
cdq
repnz
sub
and
fadd
pop
bound
dec
xlat
pop
adc
pop
ret
cmp
push
sbb
inc
mov
popf
out
leave
in
retf
jp
outs
mov
push
ins
dec
mov
add
popa
les
pop
popa
imul
ins
fs
(bad)
pop
sub
pop
xchg
bound
rcr
ss
dec
aaa
shr
fsubr
cmps
lods
sub
inc
outs
sub
aad
pop
dec
cmp
les
mov
fisub
aas
sub
das
add
ret
fcomp
sbb
add
outs
jge
fs
shr
outs
pop
mov
adc
repz
imul
call
cmp
rcl
mov
repz
mov
xchg
retf
adc
data16
push
js
(bad)
ret
mov
imul
lods
je
cmc
and
mov
dec
imul
mov
mov
mov
test
inc
mov
mov
rcl
icebp
xor
pop
popf
cmps
xchg
push
pop
je
xor
fcmovnb
sbb
loope
loopne
pop
jmp
inc
fwait
sbb
cld
push
int
into
iret
les
sub
call
or
dec
push
movs
sub
and
sbb
push
(bad)
xor
push
dec
scas
outs
rol
(bad)
ror
dec
icebp
sar
mov
movs
mov
outs
mov
stc
enter
cmp
ffree
sub
xchg
mov
(bad)
ret
call
scas
fist
stc
add
daa
add
sahf
dec
cmc
das
pop
cld
push
les
repnz
das
mov
(bad)
out
ds
fistp
cld
outs
add
adc
stc
and
fwait
imul
xor
in
mov
repz
mov
inc
mov
adc
icebp
xor
fisttp
pop
jbe
mov
push
jae
push
cli
push
xor
mov
or
inc
rcr
cmp
lods
stos
mov
xlat
out
sti
into
xchg
jmp
jb
dec
xor
lea
(bad)
push
or
rcl
inc
inc
pop
lahf
or
mov
hlt
mov
ja
xchg
xor
cld
or
imul
fst
cdq
rcl
fidiv
leave
out
lds
out
and
outs
cdq
fild
fs
or
ja
cmps
loop
pusha
xlat
ds
jbe
ins
out
mov
cmp
mov
cwde
or
shl
sbb
retf
sub
push
jae
mov
push
sbb
fidiv
xlat
movs
jmp
xchg
adc
xor
clc
xchg
xchg
xor
call
retf
push
push
fiadd
and
push
arpl
add
and
xor
lds
aam
in
scas
nop
or
pop
jae
ror
jae
cmc
pop
mov
pop
pushf
and
rcr
push
sub
cld
in
out
jl
push
sbb
sbb
mov
lock
jae
out
out
push
rcl
mov
call
adc
pusha
repnz
sub
jae
mov
jg
push
dec
sub
loope
je
inc
(bad)
mov
sbb
in
push
dec
cmp
adc
movs
mov
mov
push
sbb
in
dec
xchg
in
sbb
bound
cmp
in
retf
(bad)
adc
xchg
jbe
add
daa
mov
shr
cld
cmp
pushf
int3
xchg
retf
int
mov
jl
fstp
mov
jecxz
fadd
jbe
mov
inc
cli
xchg
mov
sbb
loope
add
push
xchg
(bad)
js
sub
rcr
xchg
jne
inc
test
and
add
in
mov
add
ret
dec
popf
int
std
out
aad
inc
and
push
fisubr
sbb
xchg
xor
push
out
movzx
pop
pop
xor
adc
sti
push
mov
arpl
fs
les
pop
retf
mov
push
das
inc
test
loopne
add
dec
test
pop
es
dec
push
mov
test
leave
sub
jno
int
sbb
loop
mov
popa
(bad)
adc
in
adc
sub
xor
mov
jb
cmp
xchg
shr
loop
mov
xor
aas
(bad)
retf
jb
dec
fnstenv
or
push
pop
or
fcomp
mov
dec
xchg
xor
scas
jl
sbb
inc
inc
mov
addr16
retf
mov
or
xor
cmp
dec
adc
mov
mov
xchg
aam
int3
inc
sti
or
(bad)
mov
add
xlat
shl
cdq
jns
cmp
mov
retf
call
inc
movs
push
fild
stc
pop
mov
icebp
std
or
loop
push
jne
mov
or
call
fisttp
add
jg
das
retf
sbb
cmp
out
aad
and
inc
int3
aam
or
inc
pop
outs
fiadd
test
xchg
bound
inc
stc
leave
mov
xlat
pop
test
and
jp
xor
or
jl
icebp
outs
push
push
mov
sti
inc
jns
pop
fist
push
in
nop
mov
test
xchg
push
add
ss
xchg
push
mov
stc
dec
enter
sbb
jbe
in
lds
pop
movs
sbb
ja
fadd
leave
ror
xchg
outs
inc
cmp
add
mov
shr
sbb
sub
or
pop
sbb
and
div
jb
dec
sub
jl
pop
push
popa
gs
retf
(bad)
push
pop
lea
jbe
push
fwait
xchg
aas
sub
sub
int
jns
dec
scas
iret
inc
xor
push
mov
and
loopne
and
mov
sti
mov
in
jmp
(bad)
stc
adc
dec
mov
mov
nop
sub
xchg
jae
fild
(bad)
scas
in
jp
or
mov
loop
ss
jo
out
mov
fcomp
ffree
jbe
out
aam
(bad)
cli
ja
cmp
push
jg
das
jmp
mov
push
sbb
or
das
icebp
jb
mov
das
jbe
mov
in
stc
dec
loopne
sbb
sbb
xor
dec
mov
xor
ja
int3
pop
imul
test
mov
jg
push
mov
retf
sbb
ja
pop
pusha
ins
arpl
push
stos
rcr
xchg
leave
(bad)
lock
mov
daa
pop
pushf
push
xchg
ja
cmp
push
dec
ins
icebp
adc
jle
mov
clc
mov
adc
mov
in
or
movs
sub
mov
pushf
enter
test
dec
lods
sar
fidivr
fs
xor
and
cld
pop
test
inc
cmp
xchg
cdq
call
mov
jbe
mov
and
addr16
out
jl
sbb
icebp
xchg
sbb
and
in
cmps
in
inc
pop
or
dec
daa
out
js
or
test
(bad)
loop
mov
mov
int
xchg
out
out
fdivr
sub
adc
test
ins
sbb
xchg
cs
mov
mov
add
adc
jle
inc
inc
lock
sub
jecxz
mov
movs
adc
call
std
mov
das
popa
dec
mov
aaa
fbld
repnz
pop
ror
jns
push
stc
push
(bad)
rol
jmp
adc
(bad)
mov
add
outs
inc
mov
adc
mov
jmp
inc
and
xor
in
in
shr
(bad)
push
push
sbb
and
xor
jle
inc
and
push
xchg
aas
push
mov
jge
test
fadd
inc
lods
cld
daa
test
push
mov
inc
dec
fdiv
lea
hlt
sbb
popa
xchg
mov
or
pop
mov
out
and
pop
fsub
in
adc
sbb
das
adc
mov
mov
pop
mov
sbb
(bad)
cld
nop
outs
test
mov
xchg
add
xchg
push
iret
int3
fistp
push
pop
sub
inc
adc
jl
pop
cmp
dec
in
xchg
xor
push
mov
mov
imul
mov
std
inc
jle
jmp
cmp
inc
lods
dec
mov
sub
xchg
xor
mov
(bad)
aam
xchg
jmp
fnstcw
daa
jb
loop
dec
mov
pop
jl
popa
adc
sbb
dec
xchg
leave
mov
repz
sbb
(bad)
jb
lea
fcom
jno
mov
stos
add
gs
sbb
cli
add
(bad)
std
sub
pop
pop
mov
jno
mov
lock
sbb
ror
fcomp
in
push
mov
push
cli
std
movs
arpl
jl
movs
rcr
mov
adc
push
ja
fs
jbe
cmp
push
fcmovnbe
mov
mov
pop
clc
xor
neg
loope
or
mov
cdq
mov
xor
fucomip
outs
mov
xchg
jg
pop
sub
or
test
popf
pop
dec
jmp
mov
aaa
or
and
clc
xchg
js
jle
rcr
aad
mov
inc
stos
lods
adc
dec
push
fwait
mov
mov
push
iret
mov
test
pusha
outs
ror
xchg
lods
fucom
(bad)
int3
ins
imul
test
sbb
push
sbb
icebp
push
xor
jmp
add
adc
repnz
add
adc
jl
bound
scas
mov
xchg
mov
cmps
test
enter
push
adc
cmp
cmp
lahf
leave
jb
ret
jnp
mov
push
and
cwde
sbb
adc
jge
fidiv
inc
mov
mov
xchg
push
(bad)
out
xor
adc
mov
icebp
push
pusha
ins
jl
and
shl
xchg
data16
adc
popf
pop
jmp
sub
push
cwde
scas
cmp
out
enter
(bad)
into
jo
adc
shl
dec
jae
imul
mov
xchg
add
aad
mov
or
adc
and
test
ss
fmul
out
stos
ror
xor
and
arpl
jbe
rol
pop
or
sbb
and
jb
sti
mov
loop
xor
adc
mov
pop
xchg
add
push
pop
in
fs
push
adc
sbb
movs
fld
pop
sti
in
cwde
out
(bad)
pop
imul
inc
jl
or
sub
inc
mov
js
dec
xchg
jne
mov
(bad)
in
ins
nop
enter
sahf
mov
loopne
sbb
paddsw
pushf
rol
or
fsubrp
lea
loop
retf
cli
retf
xlat
popf
inc
aas
dec
add
xor
adc
or
js
std
aaa
mov
retf
(bad)
and
inc
xchg
shr
mov
ret
ret
xchg
xlat
mov
mul
in
fcomi
popa
and
sbb
call
scas
movs
jns
rcr
xchg
mov
inc
aas
cmp
xor
shl
jge
add
popa
push
imul
inc
pop
in
les
arpl
fstp
fisubr
add
jae
mov
fld
mov
rol
fsub
loopne
adc
movs
and
jle
mov
push
jo
dec
xor
test
xchg
sub
add
push
cld
xchg
pop
fsubp
jle
jae
daa
js
fstp
push
imul
and
pop
pop
sahf
pop
mov
bound
push
nop
add
cmps
or
fcom
les
(bad)
dec
ins
fistp
(bad)
(bad)
cmp
fxam
scas
and
cmc
scas
or
cld
mov
adc
inc
mov
xchg
mov
ret
adc
sub
repnz
in
dec
js
ret
popf
bswap
pop
sub
cmovo
retf
dec
sub
leave
cld
xor
jmp
mov
dec
push
(bad)
pop
and
or
test
or
arpl
jge
in
xchg
into
jne
or
(bad)
retf
fstp
ret
pop
(bad)
inc
adc
push
sbb
xchg
popf
adc
fdiv
aad
mov
jmp
outs
jle
xchg
adc
cmc
repnz
fsubr
into
in
mov
inc
sub
fidiv
jecxz
(bad)
in
icebp
mov
mov
repnz
int3
ftst
imul
mov
xchg
dec
jecxz
dec
jle
aas
dec
xchg
mov
test
adc
cs
loope
sub
lea
jno
lds
lea
jp
pop
jmp
fs
movs
pop
xlat
call
mov
test
div
push
ss
(bad)
lds
jge
es
(bad)
mov
fwait
sbb
xchg
push
popa
popa
and
mov
aas
and
pop
mov
cwde
fisubr
repz
dec
xchg
fs
ds
test
lods
in
mov
adc
mov
pop
cli
pop
or
inc
fimul
pop
sbb
push
dec
retf
mov
xor
mov
xor
mov
movs
loope
dec
dec
push
jne
out
cmp
mov
dec
mov
dec
xor
xchg
or
rol
pop
or
shr
sahf
inc
mov
sbb
lods
ja
out
lock
and
inc
or
int
test
sbb
sub
lock
xor
mov
jae
ret
loope
jb
mov
and
retf
fnsave
adc
fs
add
jg
ret
mov
xor
inc
(bad)
and
jmp
mov
fcomip
sbb
jmp
jno
ja
mov
das
push
mov
add
pop
sbb
shr
jp
jecxz
test
mov
inc
xor
(bad)
xchg
in
daa
push
ret
scas
mov
jg
jmp
in
cmps
fwait
retf
in
xchg
aas
sbb
push
out
pusha
rcl
mov
inc
push
dec
(bad)
mov
or
push
cdq
test
add
leave
add
ret
jecxz
lock
das
dec
xor
inc
(bad)
(bad)
dec
fwait
cmps
movs
xchg
push
mov
addr16
les
out
jecxz
pusha
cmp
jb
leave
out
sbb
jns
fwait
xchg
xchg
jae
pop
add
jb
fs
xchg
add
pop
xchg
bound
mov
push
dec
mov
cmc
int3
jmp
cmp
packssdw
cld
daa
add
add
mov
nop
(bad)
cmp
lahf
pop
ret
xchg
adc
arpl
xor
outs
add
sub
and
repnz
and
or
js
and
and
out
push
inc
or
pop
xchg
scas
jp
xchg
or
addr16
retf
push
arpl
in
pop
fwait
mov
shl
pop
and
push
add
outs
push
(bad)
push
sub
icebp
jmp
and
sbb
stc
(bad)
outs
imul
jle
xor
pop
sub
lock
mov
or
cmp
shl
jle
lds
ss
pop
push
add
and
cld
leave
call
(bad)
clc
nop
or
mov
jae
out
test
jbe
ret
mov
push
fcom
imul
cmp
loope
daa
ins
inc
stos
inc
mov
aaa
jmp
jnp
push
xchg
push
mov
add
push
sub
ja
xchg
sub
sar
scas
xchg
adc
int
test
in
jnp
pop
(bad)
inc
and
cmp
pop
add
je
je
popf
push
inc
ficomp
pop
daa
cld
jae
inc
and
movs
out
cmps
or
pop
xor
and
push
add
inc
push
fs
add
dec
jne
cmp
mov
movs
(bad)
sbb
xlat
aaa
xor
addr16
sub
mov
stos
push
call
sbb
push
xchg
jmp
(bad)
xor
xchg
xchg
xor
(bad)
cmp
pop
cmp
cld
cld
mov
(bad)
or
mov
mov
call
lock
fstp
popf
inc
(bad)
push
fwait
xchg
xchg
imul
test
jns
inc
es
ret
pop
cmps
push
and
imul
xlat
fimul
out
jbe
xor
pop
sbb
push
sbb
imul
dec
cmp
call
pusha
out
icebp
jle
and
and
jne
cmps
rcl
int
mov
(bad)
mov
loop
pop
and
lahf
das
das
rol
push
xchg
or
mov
mov
and
push
les
mov
push
test
push
imul
aad
sub
push
nop
push
je
rol
(bad)
jle
not
fs
sub
xor
mov
in
loop
sbb
pop
jp
push
into
xchg
inc
and
scas
and
mov
xchg
xchg
mov
pop
jmp
popf
mov
repz
lahf
(bad)
and
push
gs
cmp
cmp
movs
pand
jle
aaa
std
sub
test
mov
inc
mov
and
sub
jg
push
mov
push
pushf
cmp
out
jno
fs
cmp
in
sbb
cmc
jnp
mov
ss
add
cdq
xchg
hlt
outs
inc
fdivr
add
xor
ret
push
dec
fucompp
(bad)
(bad)
mov
pop
push
ficom
scas
and
repz
lahf
in
in
lods
dec
add
and
mov
xchg
push
mov
inc
jns
inc
pop
int3
scas
or
in
in
mov
cmps
out
adc
(bad)
in
pop
(bad)
(bad)
lds
pop
mov
cwde
es
(bad)
scas
jmp
dec
fcmovnu
jo
dec
mov
push
mov
outs
and
lods
outs
or
sub
cmp
jg
mov
hlt
cmps
pop
push
inc
cmc
xor
add
cmp
ins
out
mov
pop
mov
inc
imul
scas
dec
mov
pushf
mov
and
(bad)
xor
dec
xchg
(bad)
mov
(bad)
rcl
fstp
lea
in
rcl
imul
jle
push
push
ror
imul
push
pop
sbb
sbb
stos
daa
(bad)
shr
nop
mov
lods
pop
mov
mov
sbb
mov
je
sti
lods
inc
fwait
and
jecxz
pop
push
pop
xchg
clc
out
jns
and
ss
xchg
in
adc
and
push
hlt
pop
pop
sbb
adc
test
leave
push
cmps
in
pop
sbb
sbb
(bad)
dec
mov
imul
add
xor
pushf
test
ins
jae
cwde
sbb
fcomp
xchg
stos
fdivp
mov
repz
(bad)
in
test
iret
push
and
mov
adc
data16
xchg
pop
ret
mov
dec
pop
xchg
xchg
jmp
mov
sbb
data16
test
xor
or
enter
inc
mov
out
mov
or
out
ds
push
ja
xor
xchg
xlat
sti
out
or
loope
inc
arpl
inc
add
pop
add
int
outs
xchg
and
aas
inc
jle
sti
xor
cmp
adc
loop
(bad)
outs
sahf
mov
daa
sub
inc
cmp
mov
jae
iret
mov
mov
push
sti
popa
retf
mov
push
sar
idiv
test
xlat
test
cmp
pop
push
add
mov
adc
lahf
or
pop
mov
inc
mov
lahf
pop
iret
bound
sbb
test
inc
jecxz
imul
sbb
pushf
or
adc
mov
sbb
cmp
jmp
jbe
and
stc
ror
call
loopne
or
loopne
jnp
adc
adc
pop
popf
mov
dec
stc
mov
jae
and
iret
fbld
pop
scas
mov
ror
mov
in
pop
pop
sbb
push
jp
pop
mov
sub
retw
rol
ret
into
(bad)
push
test
sbb
or
push
adc
or
or
ja
push
push
dec
and
xchg
imul
fsub
sub
clc
ins
xor
idiv
dec
mov
fild
imul
push
imul
push
mov
jg
(bad)
cmp
das
(bad)
mov
push
in
and
push
mov
xchg
aaa
inc
das
fdivr
(bad)
or
mov
mov
stos
je
ret
js
ficom
jecxz
bound
mov
mov
mov
mov
mov
mov
xchg
inc
fdiv
fwait
pop
fisubr
aam
mov
call
in
shl
fstp
inc
sbb
xchg
je
loop
xor
push
ficomp
inc
int
scas
das
clc
leave
mov
rcl
adc
xchg
xor
(bad)
and
xchg
xor
mov
inc
loopne
cmp
std
xor
dec
cs
or
test
xor
std
das
popf
mov
rol
xchg
mov
test
fs
call
sub
mov
add
adc
mov
addr16
repz
dec
dec
inc
mov
cmps
int
adc
call
jmp
mov
(bad)
xchg
xchg
in
sub
adc
push
mov
cmc
xor
inc
dec
sub
jno
loop
xor
rcr
xchg
mov
daa
push
frstor
aaa
and
jnp
pop
jnp
cmps
loope
mov
push
jmp
cmp
sar
push
xchg
or
popf
cmp
in
push
and
in
add
icebp
xor
xchg
lods
mov
mov
call
or
push
nop
pop
retf
adc
cmp
lea
xchg
dec
retf
ins
hlt
cmp
rol
mov
mov
mov
adc
adc
(bad)
mov
sar
lods
scas
ja
adc
sub
(bad)
push
cmps
test
adc
rol
adc
ret
or
pop
dec
dec
xlat
repnz
add
xor
int
add
xor
adc
(bad)
test
inc
les
dec
mov
pop
or
cmp
(bad)
cli
leave
outs
inc
loope
lods
loopne
jp
js
sub
mov
mov
xchg
adc
jo
movs
call
sub
adc
ret
dec
shr
jns
les
mov
mov
rcl
fwait
popa
rol
out
or
inc
sub
mov
imul
fwait
call
sbb
mov
mov
movs
adc
sbb
lahf
push
mov
xor
aas
icebp
mov
and
and
jmp
push
rcr
sub
shl
adc
adc
das
mov
dec
ss
repnz
ret
sbb
call
imul
(bad)
dec
retf
mov
and
cli
ret
mov
pop
jmp
sahf
mov
bound
and
fs
jnp
jnp
in
pusha
mov
pushf
icebp
das
mov
inc
xlat
(bad)
outs
pop
fstp
jne
xlat
in
cmps
shr
mov
xor
or
repnz
in
lods
movs
(bad)
jns
in
fdiv
xor
shl
lock
jb
mov
jg
cmps
fisttp
les
pop
pmaxub
es
test
mov
dec
imul
leave
out
mov
into
adc
and
mov
je
ret
lock
inc
push
mov
inc
pop
or
pop
cmp
jmp
mov
shl
mov
xor
int
xlat
xor
pop
or
mov
mov
in
mov
add
mov
or
mov
mov
mov
cmp
and
retf
inc
dec
rcr
inc
sbb
retf
add
adc
dec
aam
fsubr
xor
or
mov
out
sub
cmps
pop
xchg
inc
out
ins
adc
push
jle
inc
(bad)
add
pusha
jecxz
sbb
movs
scas
xor
or
shl
mov
loop
mov
aad
add
jo
xchg
push
mov
inc
pop
popf
pop
mov
(bad)
in
ret
scas
jae
pop
mov
sahf
mov
inc
outs
pop
cmp
inc
add
in
lahf
cs
aas
or
dec
cli
pop
pop
fmul
sub
mov
mov
repz
test
hlt
mov
enter
cmp
push
ret
(bad)
and
mov
xchg
mov
jmp
sub
cmp
jl
push
ss
dec
scas
(bad)
fistp
fucomp
dec
dec
pop
arpl
jmp
push
fs
test
rcl
push
ins
adc
cli
xchg
mov
jg
mov
push
mov
add
lods
xchg
js
movs
sti
shl
data16
xor
dec
cmc
pop
stos
ret
jecxz
or
add
jmp
dec
mov
or
xor
and
cs
mov
xchg
jnp
outs
sub
adc
jle
mov
ud1
sar
cmp
or
sti
cli
ficomp
jp
push
ficom
inc
pushf
aam
xor
sbb
inc
or
xlat
inc
jbe
test
loopne
push
clc
imul
call
js
xor
sub
retf
not
sahf
and
or
inc
rcl
add
dec
mov
cmc
mov
mov
ret
out
movs
inc
ss
or
fild
or
mov
jg
ds
xor
fadd
lock
sub
cmp
and
jnp
fisub
imul
call
inc
pop
cdq
fcmovnb
aas
pop
pushw
mov
test
cmps
jmp
or
leave
xchg
ins
inc
adc
add
mov
out
xor
cmp
pop
sbb
das
add
imul
add
adc
ret
dec
ucomiss
xor
pop
sub
fldl2e
loope
dec
jecxz
rol
das
dec
inc
or
jg
mov
push
jecxz
adc
bswap
pop
rol
push
scas
mov
inc
inc
mov
aam
push
bound
rcl
loopne
jne
pop
jecxz
dec
in
lods
inc
adc
arpl
ins
or
sub
pusha
mov
(bad)
iret
movs
ins
cwde
in
xor
bnd
movs
aam
jge
out
or
and
popf
test
leave
inc
(bad)
es
sub
ins
ss
repnz
or
push
or
pop
aad
inc
mov
sbb
pop
cmp
aad
push
aas
xlat
sbb
mov
cmp
dec
outs
dec
call
push
in
adc
fwait
mov
cwde
or
pop
xchg
(bad)
retf
xrelease
jmp
xlat
mov
xchg
fisubr
mov
inc
je
or
(bad)
pop
or
jg
xchg
inc
(bad)
inc
xchg
cmp
scas
push
mov
das
push
mov
movs
xor
adc
cmp
iret
mov
pushf
not
jecxz
sub
fldcw
ds
add
ds
inc
lea
push
test
jg
jb
aaa
pop
stc
mov
ficom
mov
rol
sti
stc
sub
mov
push
jns
xchg
mov
mov
aaa
jecxz
xor
sub
fucomip
or
pop
mov
or
add
into
inc
fs
lds
lds
cli
retf
int
cmp
out
loop
jle
pop
jecxz
cwde
lods
jnp
pop
jnp
lods
imul
dec
aas
int3
jno
cmp
or
pop
mov
mov
das
pop
je
lods
ja
mov
pop
xchg
mov
and
leave
(bad)
cmp
cmc
xor
aam
jae
dec
stc
in
adc
imul
cli
push
movs
scas
adc
fistp
xlat
push
ins
pop
stc
out
mov
sub
xchg
aad
in
sahf
mov
scas
xchg
dec
aas
ret
(bad)
mov
cmp
mov
fwait
je
push
mov
mov
xor
stos
cmc
ins
xchg
outs
sub
dec
mov
sub
pushf
dec
aas
int3
jno
inc
jnp
mov
lods
xlat
push
ins
pop
aas
sbb
lds
and
aaa
mov
adc
or
sbb
int
or
repz
mov
and
sbb
and
fwait
repnz
daa
xlat
ret
jnp
or
dec
jo
sbb
aas
mov
addr16
add
outs
cli
mov
fld
imul
not
dec
inc
xlat
push
(bad)
in
cmp
push
retf
xchg
in
jbe
add
shl
imul
aas
ins
xchg
ins
dec
ret
repnz
mov
repz
push
sbb
cmp
dec
jae
mov
inc
js
repz
shr
mov
add
inc
xlat
push
lods
ds
mov
push
inc
mov
xchg
mov
pop
cmp
xor
jnp
leave
cs
sub
ret
cli
imul
sub
sbb
jns
mov
leave
rcr
mov
sub
(bad)
aas
(bad)
dec
xor
loop
pop
pushf
lahf
int
dec
fistp
hlt
adc
xor
call
(bad)
shr
xlat
(bad)
push
push
xchg
(bad)
int3
repnz
dec
mov
cmc
imul
sub
lods
aas
or
cmps
and
or
(bad)
jmp
aas
push
fld
enter
sbb
test
repz
dec
or
fucom
les
ret
cli
in
outs
(bad)
std
push
shr
(bad)
mov
xchg
dec
mov
push
cli
or
add
fbld
fcom
or
cmps
hlt
out
sub
sbb
bnd
push
lds
into
jno
inc
xlat
push
aad
inc
add
push
jns
out
mov
sub
lds
dec
cld
scas
stos
repnz
ds
clc
inc
cmp
je
jae
sub
mov
inc
fst
xlat
mov
(bad)
dec
aas
int3
add
fcmove
mov
jne
sub
dec
cmp
cmps
and
cmp
fwait
cwde
mov
inc
jo
mov
xor
cdq
add
inc
xlat
push
lods
ds
mov
push
inc
mov
xchg
mov
pop
fwait
aas
xchg
xor
jnp
leave
cs
sub
mov
lahf
call
cwde
xor
loop
dec
ja
lods
jne
lock
(bad)
dec
(bad)
jnp
xchg
popa
clc
inc
mov
sbb
mov
and
and
xchg
hlt
shr
or
imul
or
inc
(bad)
mov
repz
aas
mov
and
xor
call
aad
pop
fimul
dec
sbb
fcmove
mov
jo
repz
xlat
xchg
mov
das
cmp
js
sub
rcl
int3
cli
stos
movs
inc
cwde
scas
mov
out
daa
jnp
arpl
and
scas
rol
xchg
ss
push
and
hlt
clc
push
inc
xlat
push
mov
imul
fidiv
pop
aam
cmp
loop
adc
and
adc
cmp
push
cdq
xchg
xor
repz
push
sbb
xlat
dec
push
daa
and
dec
imul
jns
xchg
sbb
mov
mov
dec
jno
std
imul
imul
cmp
and
aam
jae
std
mov
xlat
push
push
add
hlt
pop
out
inc
mov
or
pop
aas
aam
clc
mov
jecxz
adc
add
in
xor
(bad)
mov
or
or
stos
movs
pop
pushf
sub
add
pop
aas
lods
push
add
or
mov
loop
inc
sub
punpcklwd
or
fcmove
cmp
cmp
mov
xchg
sti
mov
mov
es
(bad)
aad
popa
repz
(bad)
mov
dec
jnp
or
shr
int
es
shr
jae
xor
mov
sbb
push
icebp
outs
ficom
pop
fisttp
int3
jno
jno
std
rol
pop
shl
push
imul
xchg
jge
outs
fnstenv
(bad)
cmp
or
dec
mov
inc
mov
int
add
ins
imul
int
mov
test
ins
pop
in
adc
fstp
dec
(bad)
fstp
loop
mov
(bad)
mov
pop
adc
pop
mov
xchg
mov
mov
rcr
shl
push
xchg
push
cwde
pop
or
xlat
mov
imul
jb
aas
mov
inc
jo
jmp
aaa
fcmovbe
shr
inc
mov
int3
pop
dec
or
adc
int
sbb
aaa
repz
fisubr
cmps
mov
fist
and
repnz
sbb
repnz
(bad)
mov
(bad)
pop
dec
adc
mov
push
popf
dec
cmp
push
shr
cmp
rcr
push
mov
mov
stos
sti
imul
pushf
jae
mov
add
loop
dec
pushf
int3
outs
cwde
cmps
xchg
shr
mov
rol
aas
(bad)
int3
imul
cs
push
icebp
imul
inc
sub
repnz
movs
aam
rcr
pop
push
(bad)
mov
mov
ins
daa
mov
and
stc
sbb
pop
ret
xchg
rcr
mov
sub
mov
rcl
dec
aas
int3
cli
and
and
adc
mov
movs
stc
gs
ins
ret
sub
stc
sub
push
or
pushf
clc
xchg
movs
outs
sahf
xchg
jmp
sbb
jle
sub
out
cs
xchg
adc
and
jmp
inc
mov
aas
cwde
sahf
lea
rcl
mov
pushf
jg
add
loop
neg
sbb
out
add
cmp
pusha
mov
jbe
jmp
addr16
add
movs
adc
pushf
adc
mov
jnp
sbb
lods
aas
adc
stc
or
sbb
cmp
shl
push
fistp
and
movs
pop
mov
mov
lock
jmp
in
or
push
xor
xor
pop
dec
cmp
movs
rol
mov
fcmovnb
iret
or
call
bound
cmp
in
fldcw
jle
sbb
pop
mov
dec
cld
jmp
aas
inc
jne
or
sahf
stos
cmp
out
inc
imul
mov
cmc
ins
retf
adc
pop
(bad)
add
(bad)
clc
fisttp
ror
mov
mov
or
fs
out
scas
and
adc
std
das
xlat
(bad)
mov
std
pop
mov
push
idiv
ds
fild
jl
ror
mov
xchg
add
lods
ret
call
mov
movs
ja
aad
mov
sbb
xchg
pop
stos
sar
stc
movs
pop
mov
pop
inc
cmc
push
addr16
je
jmp
xchg
jns
adc
xchg
imul
movs
jmp
xor
lahf
add
mov
inc
push
sbb
test
cwde
jg
loope
je
loop
mov
or
scas
rol
pop
sbb
(bad)
(bad)
fmul
jno
add
mov
loop
cs
ret
pop
rol
leave
mov
loop
push
(bad)
xchg
jmp
fild
cmp
jno
lds
sbb
sti
out
push
out
sbb
pop
stc
mov
sbb
or
dec
aas
or
sbb
in
repz
xchg
out
sbb
xlat
dec
(bad)
retfw
mov
mov
iret
pop
jnp
xchg
lock
les
test
aam
enter
or
aam
cwde
xchg
out
or
sub
shr
pop
xchg
xor
mov
push
loop
mov
(bad)
jmp
pop
rcl
int3
pop
and
dec
jae
and
xor
retf
(bad)
pop
ja
pop
xchg
jae
cli
mov
adc
out
jecxz
mov
sub
repz
loop
jo
repz
add
dec
or
and
aaa
repz
fisubr
mov
adc
pop
stc
inc
cmc
push
scas
rol
pop
push
jo
dec
leave
test
js
(bad)
sbb
xchg
mov
xchg
mov
jge
loopne
adc
repz
push
(bad)
mov
inc
jnp
(bad)
int3
mov
sti
rcl
push
ins
pop
mov
xchg
(bad)
shl
cmc
ins
loop
push
shr
sub
and
jae
call
adc
fbld
fistp
pop
inc
fldenv
cmc
ins
mov
es
loop
adc
fsub
pop
jbe
push
or
fisttp
jnp
xchg
jne
add
imul
lods
mov
mov
data16
mov
pushf
mov
fisttp
cs
and
mov
jmp
xlat
fstp
jle
jecxz
xlat
hlt
sub
xchg
imul
cmp
or
fnstcw
inc
inc
loop
mov
(bad)
xchg
les
daa
repz
out
sbb
xor
rcr
mov
stc
sub
popf
ins
arpl
in
and
adc
jno
xchg
fsubr
jle
sub
lds
mov
es
xlat
out
push
jo
cmp
daa
pusha
dec
add
mov
mov
loope
pop
dec
inc
lods
sub
add
jmp
aas
push
fnstcw
daa
jbe
cmp
fisub
nop
dec
shl
repz
aas
xchg
jno
inc
cmp
aaa
xchg
cmp
cmps
dec
repnz
push
(bad)
(bad)
repnz
fs
test
lods
test
call
fdivr
movs
stos
fsub
sbb
mov
jno
xchg
xor
mov
or
call
movs
cmp
cmp
add
push
dec
mov
(bad)
push
jae
mov
fs
cmps
sbb
adc
jp
fild
test
pop
sti
rol
aad
adc
repz
sbb
cwde
push
(bad)
in
ins
jne
adc
mov
cmp
sbb
mov
(bad)
adc
adc
fst
pop
iret
pop
dec
js
mov
mov
scas
(bad)
dec
sub
push
or
push
fxch
pop
mov
cmps
test
loopne
lods
xchg
add
or
jnp
xor
mov
or
rcl
(bad)
aas
push
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
pop
sti
imul
ins
pop
cmp
adc
adc
gs
sub
fstp
int3
icebp
xlat
cmp
mov
imul
std
sub
cmps
and
adc
in
stc
sub
fxch
aas
int3
icebp
cmc
hlt
aas
adc
sti
imul
std
sub
cmps
and
adc
(bad)
xlat
dec
into
push
fnstcw
int3
jno
test
adc
sti
imul
std
sub
cmps
and
adc
sub
int
fldenv
test
adc
sti
imul
std
sub
cmps
and
adc
jne
sub
fldenv
int3
jno
test
adc
sti
imul
std
sub
cmps
and
adc
pop
stc
sub
(bad)
dec
pop
and
cmp
or
imul
ins
pop
aas
mov
adc
adc
mov
sub
(bad)
dec
pop
and
cmp
or
imul
inc
pop
aas
and
rcr
in
adc
mov
sub
fistp
push
(bad)
ds
jno
jbe
adc
dec
outs
xlat
push
ins
pop
aas
mov
and
adc
mov
sub
pop
and
int3
icebp
mov
or
imul
ins
pop
mov
mov
push
adc
cwde
stc
sub
(bad)
int3
jno
sub
arpl
xlat
push
inc
pop
aas
mov
arpl
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
fmul
add
dec
push
shr
sub
stos
es
xor
and
test
dec
xchg
gs
movs
dec
cmp
mov
push
push
out
sbb
sub
shl
cmp
xor
add
pop
dec
cmp
pop
fmul
add
dec
lds
sub
add
mov
xor
add
sub
dec
cmp
pop
fmul
add
dec
push
shr
sub
stos
es
xor
and
xchg
push
scas
xchg
cmps
aas
fmul
sar
sbb
stc
sub
es
int
cmp
cmc
add
scas
xchg
pop
ds
dec
ret
rcr
mov
add
dec
stc
sub
cs
push
es
repz
add
and
dec
cmc
add
pop
dec
cmp
pop
fmul
add
dec
push
shr
sub
stos
or
adc
mov
pop
cmp
mov
lods
adc
mov
sub
(bad)
int3
jno
cmp
or
jmp
push
ins
fidivr
cmps
mov
sub
lods
xlat
push
call
(bad)
jle
adc
add
xlat
push
xchg
pop
shl
dec
mov
in
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
in
push
sbb
ret
shl
sbb
in
mov
fld
xor
lods
mov
xlat
scas
xchg
movs
rcr
mov
in
adc
sub
stos
fidivr
aas
int3
jno
cmp
cmc
add
sub
pop
aas
mov
fmul
add
mov
sub
es
xor
fcmove
mov
sti
imul
xchg
movs
rcr
cmps
and
adc
sub
stos
(bad)
int3
jno
cmp
cmc
add
sub
pop
aas
mov
fmul
add
mov
sub
es
xor
fcmove
mov
sti
imul
xchg
movs
shr
ret
shl
in
adc
(bad)
sar
jno
cmp
in
imul
ins
pop
aas
mov
and
cli
in
adc
mov
sub
aaa
cmps
aas
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
fmul
add
dec
push
shr
sub
stos
es
or
push
dec
mov
add
push
xchg
pop
aas
mov
(bad)
adc
cs
push
es
int
cmp
cmc
add
scas
xchg
pop
ds
dec
ret
rcr
mov
add
dec
cli
shr
add
mov
jle
jmp
sub
dec
cmp
pop
fmul
add
popf
stc
sub
fldcw
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
add
or
push
push
in
fidivr
mov
jecxz
mov
in
in
loop
push
sub
fnstenv
add
or
sub
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
jno
adc
add
mov
pop
dec
xor
add
mov
shr
sub
push
(bad)
xor
fcmovb
xor
cmc
mov
push
ins
pop
xor
ret
shl
in
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
fmul
cli
sbb
loop
jbe
xlat
cs
(bad)
xchg
adc
cmp
lods
push
aas
mov
jecxz
dec
cli
and
push
sub
fnstenv
jle
adc
sti
imul
outs
pop
pop
xor
jns
in
and
xlat
aas
push
fldenv
hlt
das
add
jmp
push
ins
pop
or
mov
mov
cli
in
inc
loop
stc
jb
cmp
fstp
aas
lahf
jno
xor
mov
cdq
push
sub
mov
sahf
mov
add
lods
adc
mov
sub
(bad)
aas
push
(bad)
int
mov
or
imul
imul
cmps
and
adc
mov
sub
(bad)
call
int
or
pop
push
mov
and
pop
loop
stc
jns
movs
aas
xor
jno
sbb
xchg
imul
mov
mov
cli
in
inc
loop
stc
pop
xlat
mov
aas
mov
adc
xchg
imul
(bad)
ret
and
and
mov
sbb
fnstcw
int3
jno
sbb
or
pop
mov
ins
mov
cli
mov
sub
fnstcw
aas
cmps
jno
cmp
fld
push
add
mov
push
mov
cli
aad
sbb
xlat
movs
aas
cmp
sub
mov
adc
xchg
imul
bnd
and
lods
push
loop
stc
sub
(bad)
mov
adc
sahf
imul
faddp
mov
cli
aam
cmp
xlat
(bad)
aas
push
fnstcw
(bad)
jno
sub
lahf
imul
out
mov
push
mov
cli
mov
sub
fnstcw
cld
jno
cmp
or
imul
aam
mov
cli
mov
inc
xlat
mov
push
fldcw
aas
int3
jno
xor
or
pop
push
mov
dec
mov
cli
mov
inc
xlat
mov
cmp
sub
adc
or
jecxz
mov
dec
ret
cmp
enter
cwde
nop
jns
repz
adc
cmp
pop
sbb
cmps
test
or
adc
mov
sub
fprem
(bad)
int3
jno
js
adc
sti
imul
ins
pop
aas
mov
mov
cli
in
adc
mov
sub
(bad)
int3
jno
cmp
or
xchg
xlat
push
test
shl
icebp
push
adc
mov
sub
pop
dec
aas
int3
jno
les
lahf
add
cmc
repz
popf
xchg
adc
adc
stc
xchg
dec
mov
push
ss
sub
xor
cmp
cwde
sub
shl
lds
mov
popa
(bad)
rcr
cmp
adc
scas
mov
lods
add
in
cmps
mov
and
inc
nop
ficomp
push
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
(bad)
int3
jno
cmp
or
imul
ins
pop
aas
mov
and
adc
mov
sub
pop
add
add
add
add
sbb
add
inc
and
add
add
popa
jne
je
add
push
lods
pop
and
add
imul
add
inc
sub
add
add
add
data16
outs
add
add
or
call
ins
imul
add
add
add
add
add
gs
imul
or
std
add
or
add
inc
add
nop
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
add
(bad)
(bad)
inc
add
push
(bad)
inc
add
add
add
add
pusha
xchg
nop
inc
add
add
add
add
push
(bad)
inc
add
add
add
add
pusha
xchg
nop
inc
add
add
add
add
push
(bad)
inc
add
add
add
add
pusha
xchg
nop
inc
add
add
add
add
push
(bad)
inc
add
add
add
add
pusha
xchg
nop
inc
add
add
add
add
add
and
(bad)
(bad)
(bad)
inc
add
add
add
xchg
nop
inc
add
inc
add
add
add
add
add
add
adc
add
(bad)
(bad)
inc
add
add
add
add
inc
add
add
push
add
add
add
add
add
xor
inc
add
(bad)
(bad)
inc
add
add
add
add
inc
add
add
dec
add
add
add
add
add
push
pop
inc
add
(bad)
(bad)
inc
add
add
add
xchg
nop
inc
add
inc
add
add
add
add
add
add
and
inc
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
sub
jo
inc
add
sub
je
inc
add
sub
js
inc
add
sub
jl
inc
add
sub
sub
add
jmp
in
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
push
call
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
mov
push
jmp
lea
call
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
lea
lea
call
push
lea
push
call
mov
and
mov
lea
push
push
push
push
lea
push
call
mov
mov
mov
lea
lea
call
push
jmp
lea
call
ret
lea
call
ret
lea
mov
movs
movs
movs
movs
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
push
push
push
push
lea
push
push
push
call
add
mov
xor
sub
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
lea
call
push
jmp
lea
call
ret
lea
push
push
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
push
push
lea
push
call
push
push
push
push
lea
push
push
push
call
add
call
call
mov
push
lea
push
call
mov
xor
sub
mov
mov
lea
mov
mov
push
lea
push
call
mov
lea
push
call
mov
xor
sub
mov
mov
mov
mov
mov
push
lea
push
call
mov
xor
sub
mov
mov
lea
mov
mov
push
lea
push
call
mov
lea
push
call
mov
push
pop
sub
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
push
lea
push
call
mov
push
pop
sub
mov
mov
lea
mov
mov
push
lea
push
call
mov
lea
push
call
mov
push
pop
sub
mov
mov
mov
mov
mov
mov
add
mov
push
lea
push
call
mov
xor
sub
mov
mov
lea
push
call
mov
lea
push
call
mov
mov
and
lea
push
push
push
push
call
call
push
push
lea
push
push
push
call
call
push
jmp
lea
push
call
ret
lea
mov
lea
push
push
call
lea
push
push
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
mov
call
push
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
mov
push
call
sub
sbb
push
push
call
mov
push
push
push
push
lea
push
push
push
call
add
push
lea
push
call
push
push
push
mov
xor
sub
mov
mov
add
push
push
call
call
lea
push
call
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
lea
push
call
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
mov
and
lea
call
jmp
mov
add
mov
mov
cmp
jg
mov
mov
sub
mov
mov
movzx
push
call
mov
lea
call
push
mov
inc
mov
sub
mov
mov
movzx
push
call
mov
lea
call
push
call
mov
lea
call
push
mov
inc
inc
mov
sub
mov
mov
movzx
push
call
mov
lea
call
push
call
mov
lea
call
push
mov
push
call
neg
sbb
inc
neg
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
cmp
jne
mov
add
mov
jmp
mov
dec
mov
jmp
push
mov
sub
push
push
push
push
push
push
call
add
mov
sub
mov
mov
and
jmp
mov
add
mov
mov
cmp
jg
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
jmp
push
jmp
lea
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
lea
push
push
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
pop
call
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
and
mov
push
lea
push
call
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
and
mov
push
lea
push
call
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
and
mov
push
lea
push
call
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
and
mov
push
lea
push
call
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
and
mov
push
lea
push
call
mov
mov
mov
mov
push
pop
shl
mov
and
mov
push
lea
push
call
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
mov
push
lea
push
call
mov
xor
sub
mov
mov
lea
mov
mov
push
lea
push
call
mov
lea
push
call
and
mov
lea
push
push
push
push
lea
push
call
push
jmp
lea
push
call
ret
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
push
lea
push
call
mov
xor
sub
mov
mov
add
mov
mov
push
lea
push
call
mov
lea
push
call
mov
push
lea
push
call
mov
xor
sub
mov
mov
add
mov
mov
push
lea
push
call
mov
lea
push
call
mov
push
push
call
inc
mov
mov
lea
push
push
mov
push
push
call
inc
push
push
lea
push
call
push
jmp
lea
push
call
lea
push
call
ret
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
push
push
push
push
lea
push
push
push
call
add
push
push
push
push
lea
push
push
push
call
add
push
push
push
push
lea
push
push
push
call
add
jmp
mov
push
lea
push
call
mov
xor
sub
mov
mov
lea
mov
mov
push
lea
push
call
mov
lea
push
call
mov
push
lea
push
call
mov
xor
sub
mov
mov
lea
mov
mov
push
lea
push
call
mov
lea
push
call
push
lea
push
call
mov
push
pop
sub
mov
mov
lea
mov
mov
push
lea
push
call
mov
lea
push
call
mov
mov
mov
lea
push
mov
xor
sub
mov
mov
push
push
push
lea
push
call
mov
mov
jmp
mov
xor
sub
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
mov
jmp
push
jmp
lea
push
call
lea
push
call
lea
push
call
ret
lea
push
push
call
lea
push
push
call
lea
push
push
call
ret
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
push
lea
push
call
mov
xor
sub
mov
mov
lea
mov
mov
push
lea
push
call
mov
lea
push
call
push
push
push
push
call
mov
mov
push
lea
push
call
mov
xor
sub
mov
mov
lea
mov
mov
push
lea
push
call
mov
lea
push
call
mov
push
push
push
push
push
call
push
call
mov
mov
push
jmp
lea
push
call
ret
ret
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
lea
call
lea
lea
call
lea
push
call
mov
mov
push
lea
push
call
mov
xor
sub
mov
mov
add
mov
mov
push
lea
push
call
mov
lea
push
call
and
mov
lea
push
push
push
push
lea
push
call
push
jmp
lea
push
call
ret
lea
call
lea
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
pop
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
lea
call
push
lea
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
lea
call
push
lea
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
pop
ret
push
mov
pop
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
lea
call
push
lea
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
cmp
jle
call
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
mov
sub
mov
jmp
push
jmp
lea
call
ret
lea
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
push
push
lea
push
call
push
push
push
push
lea
push
push
push
call
add
push
push
push
push
lea
push
push
push
call
add
mov
xor
sub
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
mov
xor
sub
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
and
push
lea
push
lea
push
call
mov
mov
mov
push
lea
push
call
mov
push
pop
sub
mov
mov
lea
mov
mov
push
lea
push
call
mov
lea
push
call
push
pop
shl
mov
mov
mov
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
lea
call
push
jmp
mov
and
test
je
lea
call
lea
push
call
lea
call
ret
lea
push
push
call
lea
push
push
call
lea
mov
lea
push
push
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
pop
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
push
push
lea
push
call
lea
mov
mov
lea
push
call
mov
lea
call
lea
push
call
mov
and
lea
push
push
push
push
push
call
mov
mov
call
push
lea
mov
lea
push
push
call
lea
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
pop
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
and
mov
push
lea
push
call
and
mov
lea
push
push
push
push
lea
push
call
push
push
fld
call
test
je
jmp
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
and
mov
push
lea
push
call
push
push
push
push
push
push
push
call
add
mov
xor
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
and
push
push
call
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
and
mov
push
lea
push
call
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
and
mov
push
lea
push
call
mov
mov
mov
mov
push
pop
shl
mov
and
mov
push
lea
push
call
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
and
mov
push
lea
push
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
mov
push
lea
push
call
and
mov
lea
push
lea
push
call
mov
lea
call
push
push
call
mov
mov
call
lea
call
mov
mov
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
mov
push
lea
push
call
mov
mov
lea
push
lea
push
call
mov
mov
call
fwait
push
jmp
lea
call
ret
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
pop
call
mov
mov
mov
push
lea
push
call
mov
push
push
push
lea
push
push
call
call
mov
leave
ret
push
mov
push
pop
call
push
call
push
call
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
and
and
mov
mov
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
mov
mov
push
lea
push
lea
push
call
mov
mov
push
lea
push
lea
push
call
mov
mov
push
lea
push
lea
push
call
call
call
mov
push
push
push
push
push
call
leave
ret
push
mov
push
pop
call
mov
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
push
push
call
mov
cmp
jle
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
leave
ret
push
mov
pop
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
lea
call
mov
lea
call
push
lea
call
lea
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
call
call
call
call
call
call
call
call
call
call
call
mov
mov
call
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
push
call
push
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
neg
sbb
inc
neg
not
mov
lea
push
lea
push
push
call
add
movsx
test
je
jmp
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
push
call
push
jmp
lea
push
lea
push
push
call
add
ret
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
push
push
push
push
lea
push
push
push
call
add
mov
neg
mov
adc
neg
mov
xor
sub
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
and
lea
push
push
push
push
call
call
push
lea
push
call
push
push
mov
xor
sub
mov
mov
lea
push
push
push
call
call
lea
push
call
push
jmp
lea
push
call
ret
lea
push
push
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
lea
call
push
jmp
lea
call
ret
lea
call
ret
lea
mov
movs
movs
movs
movs
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
push
push
push
push
lea
push
push
push
call
add
mov
xor
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
push
pop
sub
mov
mov
mov
mov
lea
call
push
lea
push
call
lea
call
lea
push
push
call
mov
lea
call
push
lea
push
call
lea
call
lea
push
push
call
push
jmp
lea
call
ret
lea
push
push
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
lea
call
push
lea
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
sahf
sahf
sahf
sahf
or
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
fiadd
add
add
or
add
sbb
add
and
add
xor
add
inc
fild
push
fild
(bad)
fild
jbe
add
xchg
add
xchg
fild
mov
fild
rcr
add
loopne
add
hlt
fild
add
add
adc
add
push
add
and
add
xor
add
fadd
push
fadd
pop
fadd
ins
fadd
sbb
add
fadd
scas
fadd
mov
fadd
(bad)
add
clc
fadd
or
add
push
fld
sub
add
fld
push
fld
pusha
fld
outs
fld
js
add
mov
add
pushf
fld
lods
fld
rcr
add
fld
add
and
add
out
fld
(bad)
fld
or
add
push
fiadd
fiadd
cmp
add
inc
fiadd
dec
fiadd
pop
fiadd
push
add
je
add
test
add
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
dec
bound
gs
add
pop
popa
fs
imul
imul
popa
fs
imul
xor
imul
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
push
je
inc
ins
jo
add
pop
pop
jbe
popa
inc
jb
inc
outs
outs
jae
jb
arpl
add
add
jbe
popa
inc
jns
xor
add
inc
ins
ins
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
fs
data16
je
outs
add
add
jbe
popa
push
gs
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
inc
dec
jae
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
jo
ins
jo
jns
add
add
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
push
bound
outs
add
add
jbe
popa
push
popa
jb
popa
je
add
pop
inc
dec
ins
outs
add
add
pop
popa
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
pop
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
inc
jb
dec
outs
arpl
add
add
jbe
popa
push
popa
jb
jne
add
add
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jo
add
add
jbe
popa
dec
xor
jns
add
pop
popa
ins
ins
ins
jne
add
add
dec
je
outs
add
add
pop
pop
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
add
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
