push
cmps
xor
sub
mov
bound
pushw
dec
in
and
in
xor
out
fs
data16
xor
and
adc
es
cwde
push
jb
addr16
leave
inc
data16
addr16
ss
in
sub
push
jle
cdq
cdq
push
pusha
pop
adc
adc
adc
jle
in
sub
in
cs
sbb
jbe
adc
cdq
xchg
add
ja
addr16
mov
movs
daa
leave
xor
sub
loopne
daa
lea
addr16
pop
cmp
mov
outs
xor
das
dec
in
and
jmp
xor
jnp
lock
pusha
jb
addr16
leave
and
aaa
mov
addr16
mov
adc
stc
cmp
mov
dec
in
iret
arpl
cmp
ja
aaa
lods
in
data16
inc
les
add
daa
lods
in
shl
jb
and
and
push
xor
retf
push
addr16
pop
pop
ret
in
inc
je
and
mov
jmp
jl
and
leave
pop
push
ret
aas
sub
inc
cmp
stc
sbb
dec
push
inc
retf
sbb
and
in
jbe
or
and
(bad)
movs
mov
jmp
add
es
outs
in
or
push
retf
push
jmp
lea
lea
adc
cwde
xor
(bad)
ret
mov
arpl
and
data16
in
inc
addr16
dec
outs
cmps
pop
popa
or
(bad)
xor
data16
or
data16
mov
popa
retf
data16
inc
in
mov
push
jbe
add
cmp
data16
test
inc
push
xlat
and
test
sbb
in
jbe
data16
cmp
sub
out
mov
and
pop
lock
fidiv
addr16
test
dec
ret
or
mov
addr16
mov
rol
data16
out
sbb
(bad)
ret
push
call
and
inc
jb
addr16
lods
ja
and
out
add
es
push
inc
fs
jbe
addr16
sub
xor
inc
ret
push
push
lock
data16
push
dec
ret
cdq
inc
xlat
and
mov
addr16
push
push
xlat
and
test
adc
in
push
scas
out
aas
mov
addr16
lds
addr16
xor
xchg
clc
jg
jae
(bad)
addr16
adc
push
out
mov
aam
(bad)
leave
mov
or
sub
jb
addr16
cmovbe
add
pusha
cmp
sti
sbb
push
inc
addr16
xchg
leave
loop
sar
cdq
pop
inc
push
cmps
cdq
sub
aad
mov
data16
lahf
aad
mov
adc
ror
call
or
sub
les
inc
jmp
adc
in
dec
pop
cdq
lea
adc
cmps
es
pop
in
arpl
mov
jb
nop
cmp
mov
xchg
aad
mov
cmp
sub
ss
fmul
popf
daa
add
int
sahf
and
and
dec
inc
push
data16
adc
adc
std
push
data16
mov
data16
xchg
adc
cmps
lea
jle
xor
or
cdq
pop
mov
addr16
mov
adc
jb
xchg
adc
cmps
lea
sahf
jae
pusha
fidiv
addr16
dec
out
cmp
addr16
and
sub
movs
xor
movs
in
jle
xor
mov
push
retf
data16
sub
mov
fwait
sbb
fs
addr16
pop
dec
cwde
adc
xor
jb
out
mov
inc
or
push
cwde
adc
addr16
pop
push
cwde
adc
inc
out
mov
ins
cmp
jnp
adc
or
leave
lahf
xchg
xchg
leave
and
mov
ret
mov
push
xor
pop
dec
mov
clc
retfw
and
sti
adc
shl
ret
add
jb
or
retf
and
sti
adc
shl
jno
lea
retf
and
jp
fldenv
dec
fnstenv
jns
adc
out
xchg
icebp
mov
popw
mov
cwde
and
add
and
cs
addr16
pop
mov
and
mov
inc
adc
adc
mov
outs
out
mov
scas
cdq
xor
pop
addr16
sahf
pop
aaa
mov
cwde
cdq
retf
data16
cmp
xchg
clc
ja
jae
(bad)
pop
push
inc
addr16
jle
cmp
lds
push
and
cdq
cdq
sti
or
aad
cdq
mov
and
out
mov
scas
cdq
xor
pop
addr16
sahf
pop
mov
outs
mov
lea
sub
mov
je
mov
outs
in
data16
bnd
addr16
lea
pop
mov
mov
lahf
cdq
mov
cdq
cdq
test
lahf
cdq
mov
cdq
cdq
sti
lds
mov
ja
addr16
lea
jecxz
inc
cwde
cdq
sub
adc
jae
and
in
cmp
and
retf
data16
add
aaa
mov
(bad)
push
or
in
cmovs
mov
and
sti
adc
lods
sti
nop
ds
mov
movs
pop
cli
push
push
and
sbb
jbe
addr16
aaa
mov
and
aaa
lods
out
and
xor
xchg
adc
xor
jle
and
stc
add
movs
out
daa
mov
(bad)
addr16
cmovs
mov
and
sti
adc
lods
sti
nop
ds
mov
movs
pop
cli
push
push
and
sbb
jb
add
aaa
mov
and
mov
sub
scas
movs
daa
leave
xor
push
xor
pop
push
in
cmp
and
stc
add
movs
out
daa
mov
and
jp
add
pop
out
mov
in
aas
dec
push
mov
inc
push
cmps
xor
sbb
xor
pop
cmp
xchg
adc
xor
jp
mov
jecxz
out
sahf
inc
mov
adc
xor
adc
cmp
xor
cwde
cdq
sti
add
and
sbb
xchg
push
(bad)
push
(bad)
mov
fwait
and
(bad)
mov
mov
mov
lahf
out
mov
cmp
xchg
adc
xor
jle
out
js
add
in
sbb
xchg
xchg
leave
and
jp
dec
adc
out
mov
sbb
xor
sbb
test
inc
fidiv
dec
test
mov
mov
out
sbb
cmp
xchg
adc
and
xor
sub
nop
jmp
inc
addr16
fadd
and
inc
adc
fadd
and
adc
jle
adc
xor
cwde
adc
jg
and
pusha
lea
jle
adc
mov
out
mov
jb
cmp
xchg
ret
mov
push
xor
pop
dec
fsub
dec
repz
out
mov
out
mov
inc
data16
arpl
inc
pop
add
jmp
mov
push
bound
pop
data16
movs
out
mov
out
mov
cmps
outs
test
add
xor
sbb
xchg
sub
jb
and
jb
out
movs
inc
sub
fsub
cmps
pop
jae
xchg
icebp
and
loopne
and
retf
popa
cdq
inc
retf
ja
push
addr16
out
movs
repz
das
sub
jnp
push
cmp
arpl
daa
lea
lahf
addr16
mov
cdq
lea
push
cmps
sub
adc
addr16
rcl
jb
xor
and
outs
out
mov
repz
shl
inc
cwde
cdq
jb
adc
gs
shl
inc
addr16
or
and
imul
retf
and
cmp
and
shl
fadd
and
inc
adc
fadd
and
adc
push
lea
outs
out
retf
jb
inc
cli
rol
data16
jb
loop
lea
imul
inc
setne
mov
(bad)
dec
mov
pop
cdq
lea
adc
inc
cli
rol
addr16
sbb
data16
xchg
xchg
jp
addr16
push
xor
jb
and
stc
add
stc
js
xor
and
jge
push
addr16
in
mov
jecxz
inc
addr16
and
sbb
xor
cdq
jb
adc
cwde
nop
test
lds
movs
lea
shl
inc
in
and
add
jne
inc
sbb
add
sar
and
leave
and
jb
or
data16
out
mov
adc
and
mov
and
jb
and
icebp
lods
ja
xchg
stc
arpl
inc
xchg
ret
stc
cmp
xor
dec
mov
fwait
out
stos
mov
out
neg
movs
in
mov
sti
lds
inc
xsha256
cmps
xchg
add
aaa
mov
in
dec
mov
addr16
add
push
out
stos
imul
ss
les
adc
pop
(bad)
xlat
repz
out
and
xchg
mov
cdq
lea
in
aaa
dec
pop
jecxz
mov
out
rep
addr16
jge
lds
inc
adc
sti
lds
inc
aaa
in
inc
mov
lahf
in
aaa
mov
and
mov
les
inc
fbld
jns
addr16
xchg
leave
loop
lea
cmp
xchg
ret
mov
push
xor
mov
scas
xchg
sbb
push
nop
sti
mov
xchg
push
sbb
fwait
data16
add
arpl
shl
jb
mov
call
out
sahf
test
mov
dec
stos
or
sahf
bound
in
and
pop
push
push
dec
pop
push
push
inc
in
mov
and
and
adc
not
add
push
test
mov
out
mov
xor
mov
cwde
cdq
jnp
adc
and
fwait
pushw
pop
(bad)
xor
add
push
hlt
and
sahf
jae
out
mov
inc
fwait
out
sahf
test
mov
adc
xchg
adc
jne
aaa
dec
in
bound
pop
sbb
push
sbb
add
mov
mov
out
jo
imul
ret
add
jb
push
push
jmp
mov
cwd
cmp
mov
sbb
data16
sbb
data16
daa
push
jb
es
leave
and
sbb
mov
data16
add
scas
cdq
xor
pop
addr16
sahf
out
mov
addr16
mov
xor
xor
(bad)
sbb
int
xchg
and
gs
and
mov
das
addr16
mov
xchg
in
aaa
mov
mov
mov
cmp
mov
out
or
addr16
inc
or
xor
and
pop
(bad)
add
addr16
xchg
leave
loop
lea
movs
popa
js
addr16
cwde
cwde
lea
adc
addr16
lds
jecxz
mov
pop
popf
lea
jecxz
jp
addr16
stos
jno
out
mov
mov
addr16
leave
loop
lea
mov
stos
lea
cwde
cwde
lea
(bad)
mov
dec
in
out
jecxz
data16
lods
fisubr
inc
test
ret
cdq
sti
sub
xchg
mov
sti
lds
inc
aaa
in
dec
mov
fwait
outs
mov
(bad)
mov
out
imul
cwde
cwde
(bad)
leave
movs
jmp
pushf
cwde
cwde
lea
clts
xchg
add
mul
in
pop
lea
jb
addr16
aaa
mov
push
outs
jb
out
ficom
addr16
cmps
cdq
mov
and
cdq
and
dec
cmps
imul
sub
(bad)
xor
shl
mov
mov
out
iret
mov
loop
lea
and
mov
int3
mov
sti
lds
inc
aaa
in
dec
mov
fwait
outs
mov
loop
jne
addr16
std
fstp
test
data16
ficomp
jge
cli
popa
jb
or
and
int
fwait
lea
xchg
cdq
(bad)
ret
mov
out
iret
out
cwde
(bad)
shl
(bad)
mov
addr16
dec
shl
aam
cdq
cdq
xor
jmp
sub
(bad)
xor
popf
sbb
dec
push
cwde
lea
es
ret
mov
or
xor
imul
shl
sub
rol
mov
cwde
cdq
icebp
test
lea
or
and
int
fwait
lea
xchg
cdq
(bad)
ret
mov
data16
ins
mov
lea
data16
pushw
mov
and
daa
jb
(bad)
xchg
lea
cwde
cdq
jb
adc
inc
pandn
mov
(bad)
lods
xchg
pop
cdq
lea
adc
loop
lea
addr16
sub
xchg
inc
(bad)
rol
addr16
mov
cdq
icebp
test
lea
or
and
int
fwait
lea
xchg
cdq
(bad)
ret
mov
data16
ins
mov
lea
data16
pushw
shl
(bad)
daa
jb
add
jle
cwde
cdq
jb
adc
inc
pandn
mov
(bad)
and
dec
pop
cdq
lea
adc
loop
lea
addr16
stos
mov
out
mul
cwde
cwde
(bad)
leave
movs
or
sub
xchg
inc
(bad)
rol
mov
cwde
cdq
icebp
test
lea
mov
cdq
jae
data16
in
add
and
es
ret
mov
data16
ins
mov
lea
data16
pushw
or
(bad)
daa
jb
stos
xchg
lea
cwde
cdq
jb
adc
sbb
fist
mov
(bad)
cwde
in
dec
pop
cdq
lea
adc
pushw
add
call
mov
cdq
icebp
test
lea
mov
cdq
jae
addr16
ins
jb
in
fidivr
jno
ja
shl
inc
jmp
test
pushf
lea
bound
mov
rcl
(bad)
and
jecxz
shl
inc
out
mov
mov
call
inc
addr16
bound
jmp
retf
loop
lea
cwde
xor
leave
and
test
inc
fistp
neg
in
pop
lea
inc
out
aaa
mov
out
movs
icebp
cmp
mov
ret
cmps
mov
xchg
int3
cmp
in
nop
cwde
cwde
lea
fcmovne
mov
jmp
out
imul
jb
mov
cdq
gs
mov
cdq
jae
addr16
out
cdq
mov
cwde
cwde
lea
in
jecxz
mov
push
cdq
and
out
mov
idiv
jmp
sub
xchg
inc
in
jecxz
mov
pop
cdq
data16
data16
out
and
jle
data16
loop
lea
mov
mov
lock
inc
addr16
aaa
mov
out
movs
icebp
cmp
bound
jmp
retf
loop
lea
cwde
xor
and
mov
mov
push
jb
mov
lds
in
neg
pop
lea
pop
out
aaa
mov
addr16
xchg
leave
loop
lea
sbb
jno
addr16
movs
cwde
cwde
lea
in
jecxz
mov
pop
cdq
and
leave
mov
in
mov
fs
mov
push
inc
addr16
mov
cwde
lea
ror
adc
daa
jb
loop
lea
or
ret
mov
cdq
mov
data16
lea
inc
addr16
mov
data16
ror
idiv
lsl
mov
(bad)
pop
push
inc
addr16
push
out
mov
adc
loop
lea
loop
lea
cwde
cwde
(bad)
int
cli
lea
out
cdq
mov
sbb
inc
addr16
cli
mov
ja
xchg
stc
arpl
inc
xchg
ret
stc
std
(bad)
cdq
mov
xor
add
loop
jo
addr16
in
cwde
lea
movs
mov
addr16
ret
cdq
mov
and
cdq
mov
jae
jb
addr16
add
loop
jo
addr16
push
ds
loop
lea
ret
cdq
mov
xor
sti
add
loop
jae
addr16
call
mov
jb
fwait
or
inc
ds
stos
jno
out
mov
mov
cdq
jo
in
jecxz
mov
pop
cdq
mov
cdq
cdq
and
rcl
lea
out
or
mov
jmp
xor
jbe
cmps
fisub
inc
addr16
xlat
retf
fcmovb
lea
cwde
xor
leave
and
jb
test
neg
cwde
(bad)
leave
movs
in
mov
data16
ret
mov
jecxz
mov
and
cdq
mov
jae
jb
addr16
add
loop
jae
addr16
les
loop
inc
addr16
pop
cdq
mov
rcl
test
in
pop
lea
inc
out
aaa
mov
out
movs
icebp
cmp
mov
in
and
jecxz
inc
addr16
std
setns
addr16
loop
lea
setns
cwde
in
dec
out
mov
lea
ins
data16
fidivr
lea
call
jecxz
mov
data16
rcr
mov
call
mov
call
sub
icebp
test
(bad)
mov
scas
cdq
xor
pop
addr16
sahf
out
idiv
mov
inc
addr16
(bad)
sbb
cmp
lds
loop
mov
(bad)
stc
sbb
in
dec
or
cdq
mov
and
cdq
mov
addr16
test
cmp
(bad)
lea
in
jecxz
mov
push
cdq
and
out
mov
sub
cwde
jecxz
mov
(bad)
cdq
mov
cdq
cdq
jge
push
lea
cdq
cdq
and
push
cdq
and
in
jecxz
mov
push
cdq
and
cwde
jecxz
mov
sbb
mov
mov
cmp
mov
lea
inc
jb
addr16
xchg
leave
loop
lea
loop
lea
cwde
xor
fidiv
push
dec
in
jecxz
mov
push
cdq
and
in
cmps
mov
imul
xchg
cwde
cwde
lea
in
push
lea
outs
in
neg
in
push
lea
outs
in
neg
push
lea
outs
out
stos
jno
out
mov
loop
lea
cwde
xor
inc
xchg
lea
movs
xor
movs
or
and
sub
jbe
inc
add
jb
data16
out
inc
jb
addr16
lods
jae
and
out
add
ja
dec
repz
addr16
addr16
out
xchg
mov
jb
aas
fs
(bad)
ins
sbb
in
inc
(bad)
adc
mov
shl
inc
adc
mov
dec
mov
jb
in
and
xchg
mov
stc
cmp
cdq
out
pop
pushf
mov
mov
fwait
cdq
lea
imul
aaa
mov
lds
data16
movs
bound
out
and
fdiv
adc
xor
mov
out
mov
jb
addr16
sub
inc
xor
data16
or
inc
addr16
mov
pop
mov
ret
mov
push
in
cmp
sbb
and
xchg
jae
out
mov
xor
mov
xor
out
add
mov
inc
jle
add
icebp
gs
stc
xor
in
dec
mul
jb
mov
data16
addr16
and
xor
data16
out
scas
xor
les
fldenv
data16
bound
jmp
outs
mov
jmp
jo
addr16
lea
data16
adc
jb
cwde
inc
not
shl
shr
add
fwait
and
jb
bound
mov
push
mov
pop
inc
jge
cmps
cs
mov
lahf
addr16
clc
daa
jb
pop
fs
out
push
data16
dec
fs
xchg
arpl
fldenv
data16
push
sahf
frstor
data16
pop
stc
xor
pusha
lea
stc
xor
xchg
test
mov
lea
stc
xor
pushf
jae
addr16
ja
shl
mov
jle
add
push
inc
push
cmps
fwait
outs
fs
xchg
cdq
jne
addr16
pop
clc
daa
jb
(bad)
es
les
daa
data16
jno
cdq
lea
bound
cmps
fwait
inc
fs
xchg
and
addr16
pop
clc
daa
jb
mov
mov
clc
daa
jb
adc
or
mov
add
jb
push
in
add
rol
(bad)
daa
jb
daa
(bad)
xor
test
clc
daa
jb
adc
or
sub
mov
push
in
add
mov
mov
xor
data16
mov
mov
clc
daa
jb
adc
or
pushf
dec
push
jle
add
mov
and
xor
data16
mov
mov
shl
mov
addr16
add
mov
push
in
add
fwait
inc
data16
mov
xor
arpl
es
data16
sub
repnz
jg
xor
(bad)
xchg
inc
shr
jb
cmps
fs
pop
stc
xor
test
inc
addr16
fldenv
data16
outs
div
inc
mov
jb
addr16
sahf
frstor
data16
pop
stc
xor
enter
cdq
ja
shl
ret
bound
add
fsub
jb
xchg
dec
or
in
js
daa
jb
mov
jb
addr16
mov
test
imul
push
shl
mov
adc
and
dec
shl
loopne
data16
sbb
icebp
mov
inc
jecxz
clc
and
data16
es
mov
jp
inc
test
addr16
ja
arpl
hlt
and
mov
add
ja
clc
daa
jb
inc
cdq
ja
clc
daa
jb
xchg
push
or
out
pop
clc
daa
jb
mov
or
test
das
data16
bound
mov
nop
ja
clc
daa
jb
push
data16
mov
in
jb
pop
(bad)
xor
xchg
pop
mov
mov
rol
addr16
mov
addr16
add
pop
(bad)
xor
xchg
and
and
dec
jecxz
jb
addr16
mov
bound
add
pushf
pop
and
and
inc
adc
add
daa
jb
bound
add
dec
add
daa
jb
adc
cmp
out
mov
sub
inc
outs
div
inc
lea
rcr
jbe
inc
out
pop
clc
daa
jb
out
xchg
jae
out
mov
jb
cmp
inc
push
daa
jb
xchg
add
bound
jg
sbb
ja
mul
jb
out
xchg
pop
mov
mov
xor
lea
scas
daa
stc
push
imul
inc
in
data16
inc
jb
jmp
addr16
ja
mul
jb
outs
div
inc
pop
arpl
daa
data16
addr16
gs
inc
lea
scas
daa
stc
push
imul
inc
in
data16
inc
jb
rol
addr16
ja
mul
jb
pop
stc
xor
arpl
daa
data16
and
mov
jb
cmps
es
scas
movs
daa
leave
xor
push
xor
cmp
mov
data16
sub
lea
shl
inc
movq
add
add
addr16
xchg
jne
add
call
(bad)
xor
dec
enter
call
stc
xor
and
xchg
leave
and
enter
call
sti
xor
sub
call
stc
xor
cmp
add
call
(bad)
xor
cmp
ret
mov
and
xor
stos
jbe
sbb
cwde
mov
cwde
arpl
hlt
and
and
int
into
and
addr16
jg
jb
out
mov
icebp
and
iret
out
aaa
mov
and
ror
mov
addr16
ja
shl
ret
add
stos
leave
movs
in
xchg
addr16
data16
mov
data16
add
inc
nop
test
add
bound
enter
aaa
mov
and
fs
ficomp
sbb
test
movs
mov
jb
in
retf
sbb
int
mov
inc
addr16
ret
test
push
jb
popa
inc
xchg
sti
xor
mov
inc
jmp
inc
or
adc
inc
jmp
int
(bad)
and
mov
and
lea
shl
inc
or
or
sub
jbe
popa
cdq
pop
movs
(bad)
sbb
mov
mov
movs
cdq
pop
movs
(bad)
addr16
ja
shl
int
mov
mov
xor
push
xchg
sti
xor
and
in
data16
cmp
xchg
ret
mov
add
sub
aaa
mov
and
aaa
pushf
out
and
add
out
sub
jno
out
daa
lods
out
and
sub
aaa
mov
aaa
cdq
pop
mov
xchg
sbb
jb
in
add
aaa
mov
popa
repz
scas
mov
out
and
fsub
pop
js
mov
out
mov
bound
mov
cdq
pop
dec
or
stc
xor
or
leave
and
mov
out
xor
imul
retf
cmp
inc
adc
xor
cdq
jge
arpl
mov
push
imul
mov
dec
imul
mov
jnp
les
gs
mov
ja
les
bound
addr16
jecxz
jo
addr16
aaa
push
jmp
enter
add
and
adc
and
pop
dec
sub
inc
addr16
mov
jno
mov
loop
jb
addr16
mov
lea
jae
dec
adc
sti
mov
shl
jns
adc
lahf
in
inc
push
mov
adc
dec
shl
lea
cmps
imul
add
call
xor
push
jb
into
add
and
out
and
adc
bound
ret
lea
nop
and
add
jmp
test
in
daa
mov
jb
inc
addr16
inc
imul
push
out
ja
(bad)
inc
adc
add
cwde
cdq
lea
addr16
jle
adc
leave
lahf
cs
bound
or
sahf
icebp
test
out
inc
arpl
xor
lahf
in
inc
out
je
adc
mov
shl
jl
adc
fldenv
inc
adc
mov
pop
pusha
push
xor
and
adc
arpl
stos
arpl
mov
out
bound
addr16
pop
pop
jo
add
mov
out
je
adc
sti
mov
pop
pusha
jo
ss
mov
(bad)
gs
fs
push
out
sahf
icebp
test
imul
inc
addr16
inc
pop
(bad)
jb
adc
scas
cdq
stc
adc
bound
ret
lea
nop
mov
arpl
aaa
mov
and
inc
lahf
in
inc
in
xor
inc
addr16
addr16
adc
sahf
cmp
pop
pusha
jae
cs
mov
(bad)
fs
addr16
jle
sahf
icebp
test
out
inc
adc
lahf
in
inc
push
pop
push
dec
pop
cwde
jb
adc
cwde
data16
adc
jmp
xor
adc
arpl
in
jbe
arpl
inc
addr16
data16
addr16
pop
cmp
xchg
ret
mov
push
xor
jb
adc
pop
push
cdq
cdq
inc
out
dec
inc
adc
rcr
add
mov
addr16
jle
(bad)
gs
pop
mov
jb
addr16
dec
cwde
arpl
hlt
and
jbe
mov
inc
div
inc
push
mov
and
ds
ja
shl
dec
shl
jge
data16
adc
test
inc
in
mov
mov
jb
enter
add
daa
dec
add
inc
in
jbe
out
bound
jns
retf
addr16
aaa
mov
dec
mov
mov
out
and
retf
xor
jbe
daa
data16
mov
scas
cdq
sti
mov
mov
jae
data16
test
out
aaa
mov
jmp
leave
ja
ja
shl
ret
scas
cdq
pop
mov
data16
test
out
aaa
mov
arpl
inc
and
daa
push
cmps
test
push
jae
cld
and
cdq
(bad)
ret
mov
scas
mov
out
or
inc
data16
stos
ds
xor
and
mov
cwde
cdq
jb
fistp
jb
pop
data16
out
jne
loop
lods
mov
xchg
mov
xor
and
inc
out
xchg
lahf
cwde
cdq
jb
jbe
(bad)
lds
ja
(bad)
inc
adc
test
popa
dec
shl
sub
addr16
inc
mov
jge
repnz
popf
mov
mov
imul
add
call
into
lods
mov
aaa
push
inc
push
cdq
lea
lods
js
dec
push
leave
add
mov
gs
out
mov
jae
fldenv
call
retf
bnd
cwde
out
jbe
inc
div
inc
out
sub
cwde
cdq
sbb
mov
imul
xchg
xchg
popf
mov
repnz
popf
mov
in
addr16
mul
jb
push
data16
repnz
popf
mov
in
jb
adc
daa
jb
repnz
mov
shl
rcr
lods
mov
lock
(bad)
pop
mov
mov
adc
add
out
mov
cmps
cdq
push
cmps
test
arpl
daa
data16
lds
cdq
cdq
popa
pcmpgtd
addr16
jb
mov
xor
fisttp
shl
mov
cdq
lea
mov
test
(bad)
cmp
inc
addr16
ja
shl
ret
ret
mov
addr16
cwde
cdq
jb
cwde
rcr
cmc
mov
imul
dec
cmps
adc
ret
ret
mov
out
lea
out
mov
nop
inc
xor
cmps
arpl
std
lahf
mov
rcr
scas
rcr
jge
mov
data16
(bad)
lea
addr16
inc
out
jb
addr16
cwde
adc
mov
mov
jb
loop
lods
mov
addr16
lds
loopne
mov
adc
xor
shr
jns
data16
daa
gs
push
cdq
lea
jb
jecxz
addr16
out
mov
popf
mov
xchg
mov
leave
mov
xchg
sub
(bad)
push
(bad)
mov
xchg
gs
stos
or
lods
repnz
gs
div
xchg
popf
mov
addr16
mov
addr16
mov
adc
jb
iret
xor
out
jecxz
sahf
cwde
cdq
sti
and
addr16
repnz
lods
mov
fs
(bad)
lea
cwde
cdq
stc
aad
mov
outs
inc
gs
not
mov
(bad)
lods
mov
mov
out
not
mov
retf
cwde
in
not
mov
outs
int
fisubr
cmc
mov
add
not
fisubr
retf
loop
lods
mov
mov
mov
iret
mov
adc
push
sub
out
mov
push
retf
repnz
dec
xor
data16
aad
mov
lea
shl
inc
push
cdq
lea
mov
jmp
lahf
cwde
cdq
sti
dec
jb
out
addr16
mov
jae
push
shl
data16
aad
mov
inc
addr16
jge
data16
loop
lods
mov
loop
jae
addr16
dec
addr16
retf
loop
popf
mov
pop
(bad)
jb
adc
sbb
dec
jecxz
jae
addr16
data16
lds
jb
inc
addr16
lea
sti
lds
jecxz
sahf
cwde
cdq
jb
retf
mov
cmp
rcr
push
gs
inc
adc
mov
mov
pop
popw
push
out
xchg
icebp
test
out
inc
adc
in
ja
pop
pushw
dec
sub
mov
imul
mov
shl
call
lea
pop
(bad)
jb
adc
arpl
inc
addr16
test
jmp
jo
out
mul
out
test
mov
or
out
bound
pop
fist
test
cwde
cdq
jae
shl
rcr
gs
into
push
ret
mov
jb
pop
pop
jae
addr16
dec
out
jge
data16
adc
pop
pop
jno
addr16
jae
dec
jge
data16
adc
pop
pop
ja
addr16
and
jecxz
cdq
lea
sbb
rcr
jae
jnp
(bad)
lds
(bad)
pushf
mov
mov
mov
cwde
cdq
icebp
test
iret
mov
adc
in
mov
mov
cdq
lea
cmps
(bad)
jo
xchg
fwait
in
not
mov
arpl
cwde
out
mov
cdq
lea
data16
mov
ja
shl
test
out
sub
cwde
cdq
sbb
mov
imul
pop
cmp
xchg
ret
mov
push
xor
das
dec
mov
xchg
or
mov
cwde
addr16
cmp
fisub
stc
jbe
jb
xchg
ret
lahf
out
aaa
mov
and
add
jmp
add
jge
addr16
mov
add
jne
addr16
mov
data16
pop
add
dec
and
aaa
mov
out
movs
jae
out
xor
stos
jno
jno
shl
mov
jae
xor
arpl
jae
sbb
aaa
mov
addr16
inc
push
and
push
repz
xor
out
mov
pop
mov
addr16
shl
inc
inc
cmps
jb
addr16
add
(bad)
jge
and
sti
and
jne
popf
bound
dec
in
ja
outs
in
add
(bad)
jge
and
test
data16
pop
dec
in
jne
lahf
arpl
inc
out
lea
and
leave
xor
push
and
jge
data16
adc
add
fs
test
popw
dec
xchg
and
repnz
call
ret
lea
mov
inc
push
and
adc
add
out
mov
sbb
sub
addr16
inc
adc
and
lea
cmp
xchg
adc
xor
xor
mov
jne
inc
setns
xor
inc
(bad)
popa
and
out
add
cdq
xor
pop
addr16
sahf
out
mov
imul
jne
and
inc
mov
ret
cwde
addr16
cwde
out
movs
sub
adc
inc
data16
inc
aaa
jb
xor
int
or
leave
lahf
xchg
xchg
leave
loop
lods
mov
lahf
out
mov
adc
mov
xchg
mov
inc
xchg
mov
addr16
test
mov
out
mov
xchg
cmp
movs
xor
movs
xor
in
into
dec
repz
std
outs
jb
or
adc
addr16
adc
sub
movs
in
jle
xor
int
cmp
rcl
jb
out
jb
or
sbb
repnz
call
in
mov
imul
in
and
inc
data16
mov
xchg
out
mov
cmps
lea
sub
call
in
push
aaa
or
test
aaa
jb
out
and
inc
addr16
ret
sbb
xor
in
aaa
dec
out
and
mov
adc
and
scas
aaa
jb
xor
stc
add
lahf
dec
mov
mov
movs
daa
leave
xor
push
xor
inc
outs
dec
dec
sti
mov
or
data16
arpl
sub
jb
cmps
lea
addr16
xchg
mov
icebp
mov
cmps
lea
sub
jb
xor
data16
and
and
pop
jae
adc
call
adc
test
aaa
jb
or
sbb
xchg
xchg
add
call
mov
call
data16
cmp
sub
in
jle
xor
ror
retf
data16
sub
mov
(bad)
jb
addr16
sub
jb
addr16
cwde
adc
xchg
jb
out
mov
sti
add
cdq
cdq
pop
inc
push
cmps
cdq
ins
or
data16
xor
inc
or
lea
xor
sti
mov
xor
inc
and
sub
movs
xor
movs
ss
jp
and
repz
addr16
test
dec
shl
inc
movs
and
imul
adc
xchg
inc
(bad)
sbb
pop
mov
minps
adc
icebp
test
test
inc
jns
sbb
and
test
xor
jp
pop
cmp
(bad)
push
lea
adc
arpl
pop
pop
sbb
xchg
xor
push
dec
xor
jp
and
sti
adc
scas
movs
daa
leave
xor
push
xor
das
dec
in
adc
and
repz
addr16
dec
mov
xor
cdq
cdq
push
push
push
inc
mov
xor
outs
xor
sub
xor
test
stc
add
movs
out
daa
mov
movs
xor
movs
in
pop
adc
xor
shr
inc
leave
mov
add
ret
add
jb
add
push
(bad)
inc
fisub
inc
addr16
xlat
clc
cli
push
jb
nop
test
add
sbb
xor
test
retf
and
mul
fs
add
mov
inc
nop
test
add
shl
lea
and
in
ins
inc
and
pop
inc
in
sahf
inc
out
shl
repnz
cwde
popw
mov
and
shl
jo
and
xchg
dec
addr16
and
add
js
add
adc
or
jae
sbb
stos
mov
out
aaa
cwde
out
movs
stc
add
in
xor
shl
push
cmps
pop
inc
addr16
xor
movs
out
mov
stc
or
and
test
and
lds
popa
in
daa
dec
push
mov
div
test
movs
addr16
movs
in
and
shl
jp
xor
div
and
inc
out
mov
sub
and
mul
shl
fidiv
daa
data16
jecxz
xor
fisttp
pop
jo
loop
cmps
mul
shl
adc
mul
jno
mul
shl
es
div
loop
div
loop
mul
loop
div
loop
div
loop
neg
shl
mul
xor
neg
jb
and
xchg
inc
neg
xor
lds
adc
div
loop
outs
mul
shl
in
inc
div
loop
mov
adc
and
mul
shl
add
add
loop
div
adc
inc
aas
mul
shl
div
pop
es
dec
inc
dec
add
stc
pop
div
loop
in
cs
div
stc
adc
loop
push
jne
shl
div
and
rcr
loop
div
push
lods
div
loop
in
jle
div
icebp
js
mul
rcl
scas
loop
div
adc
div
loop
add
jb
daa
data16
data16
cmp
and
xor
and
and
mul
shl
fidiv
daa
data16
arpl
loop
idiv
loop
div
loop
lahf
data16
not
and
div
loop
jecxz
xor
out
stos
shl
mul
imul
mul
adc
mul
shl
out
mov
mov
mul
shl
mul
shl
mul
sbb
mul
shl
fmul
pop
jo
loop
push
mul
shl
addr16
div
loop
xchg
mul
shl
fidiv
and
data16
not
and
div
loop
mov
xor
out
stos
shl
mul
imul
mul
adc
mul
shl
out
mov
mov
mul
shl
mul
shl
mul
sbb
mul
shl
fdiv
jno
mul
shl
addr16
div
loop
xchg
mul
shl
pop
loop
div
loop
mov
mov
out
xor
jg
and
in
cmp
and
leave
and
add
push
in
aaa
mov
out
xor
add
mov
mov
in
mov
cdq
sub
movs
out
daa
mov
adc
add
(bad)
xor
aaa
lods
fistp
jne
addr16
xor
jmp
sahf
out
mov
and
mov
xor
mov
call
in
bound
adc
jl
adc
mov
shl
shr
mov
out
bound
bound
data16
adc
cwde
xchg
xor
jbe
imul
pushf
pop
mov
jbe
add
addr16
sub
data16
jmp
inc
addr16
cwde
xchg
and
and
nop
aaa
mov
push
data16
and
mov
mov
push
addr16
test
mov
out
mov
data16
cwde
and
or
jge
jg
lea
movs
xor
movs
in
pop
adc
xor
xor
pop
inc
mov
push
addr16
mov
out
cmps
test
push
mov
lods
sti
nop
ds
mov
xor
xor
adc
cmps
(bad)
ss
inc
xchg
lea
cwde
cdq
icebp
test
mov
cmps
imul
dec
rcr
popf
add
dec
data16
(bad)
inc
out
mov
leave
sbb
popf
add
out
test
mov
call
or
leave
xchg
gs
fisub
inc
and
jb
in
push
scas
(bad)
inc
out
and
sub
jb
xchg
gs
mov
and
and
add
ja
fisub
jns
call
addr16
aaa
mov
xor
jb
test
aaa
pushf
out
movs
sti
mov
and
add
(bad)
and
xor
arpl
add
or
jb
out
and
inc
in
sbb
sub
add
rep
jns
jb
(bad)
and
aaa
cwde
(bad)
pop
aas
inc
addr16
sets
(bad)
leave
movs
imul
dec
mov
dec
pushf
fisub
sub
push
retf
data16
mov
arpl
test
sub
in
jle
scas
(bad)
inc
out
and
movs
push
data16
xchg
gs
mov
jae
std
and
and
add
ja
fisub
jns
xchg
add
addr16
aaa
mov
ja
mov
and
add
(bad)
and
xor
arpl
add
nop
gs
test
and
dec
shl
popf
xchg
test
data16
(bad)
inc
in
imul
pop
out
test
mov
les
jae
xchg
std
and
(bad)
inc
out
push
shl
scas
adc
or
call
(bad)
inc
aaa
mov
mov
outs
or
sub
jo
addr16
sub
jb
cwde
adc
outs
das
jb
out
and
inc
addr16
int
mov
mov
adc
jb
adc
jb
(bad)
mov
mov
mov
inc
pop
data16
test
aaa
xchg
out
movs
sub
adc
jg
jb
xor
and
xor
fmul
inc
addr16
xchg
leave
loop
(bad)
mov
bound
mov
int3
jb
addr16
mov
xchg
push
or
mov
or
enter
bound
out
cmps
test
sahf
jns
mov
mov
leave
mov
pushf
cli
aad
cwde
lea
mov
shr
jb
rcr
(bad)
cli
mov
adc
out
mov
lea
ins
imul
out
out
cwde
cwde
lea
in
and
xchg
popa
lea
sub
jb
movs
nop
mov
adc
lds
lea
cwde
cdq
lea
nop
ins
sbb
inc
cwde
cwde
lea
and
and
int
popf
(bad)
mov
sub
jb
addr16
sub
jb
addr16
jb
addr16
pushf
fwait
lea
addr16
lds
adc
out
lods
xor
mov
data16
jecxz
mov
data16
inc
setle
add
(bad)
mov
cdq
lea
out
xchg
jae
out
mov
lea
addr16
ja
shl
adc
mov
idiv
(bad)
fnstcw
inc
addr16
mov
bts
cdq
cdq
lea
pcmpgtd
out
and
retfw
data16
sub
(bad)
leave
mov
and
sub
lods
add
idiv
pcmpgtd
out
push
inc
and
or
lods
add
jo
addr16
dec
addr16
mov
sbb
cmp
sub
in
jle
xor
stc
xor
std
dec
sti
mov
cwde
arpl
hlt
and
cmp
ret
add
and
and
dec
inc
push
data16
adc
adc
popa
cs
xchg
in
mov
adc
sahf
lea
or
cdq
pop
mov
addr16
jg
data16
adc
jb
cmp
xchg
pop
fdivr
pop
and
out
push
es
adc
dec
and
sub
lea
cwde
adc
adc
jne
data16
mov
xor
movs
ss
cmps
pop
push
pop
leave
lahf
xchg
xchg
leave
and
sbb
data16
push
xor
addr16
test
mov
adc
xor
clc
xor
mov
mov
jmp
mov
popa
data16
or
lea
(bad)
cmp
mov
arpl
stos
push
cdq
pop
pop
cwde
adc
adc
inc
cwde
adc
adc
jb
cmps
adc
adc
jb
cmps
lea
lahf
dec
mov
mov
dec
cmp
push
mov
cmp
icebp
lods
ja
and
add
jg
leave
or
and
mov
push
mov
mov
push
imul
sbb
adc
adc
mov
data16
cmps
adc
cmps
lea
jle
push
or
adc
adc
jb
cmps
adc
adc
jb
cmps
lea
adc
jb
shl
push
imul
push
test
or
cmp
movs
xor
movs
ss
fadd
adc
jg
mov
add
jb
pop
call
(bad)
popa
ss
addr16
sahf
sti
mov
(bad)
call
adc
and
xor
addr16
mov
data16
data16
pop
lods
add
sub
sar
jb
nop
jae
inc
outs
mov
arpl
stos
jno
inc
mov
das
and
out
and
cmps
jge
jb
cmp
jmp
out
scas
pop
mov
cmps
stc
add
(bad)
call
mov
jp
xor
xchg
adc
and
sbb
cmp
cli
jne
and
leave
xor
bnd
imul
out
sahf
pop
cwde
aaa
out
add
lea
addr16
test
mov
in
daa
push
mov
sahf
icebp
and
shl
cmps
push
addr16
pop
jb
mov
out
jle
adc
lahf
cs
ins
pop
push
in
and
addr16
push
inc
addr16
stos
add
and
out
mov
adc
outs
lea
out
add
lea
addr16
add
movs
out
daa
mov
mov
cmp
sub
in
adc
xor
sbb
add
out
and
adc
out
aaa
mov
in
jp
or
data16
and
jge
arpl
mov
outs
mov
ins
imul
xor
bound
pop
adc
mov
pop
jb
add
cdq
or
movsx
dec
jnp
sahf
retf
pop
addr16
nop
lahf
sti
xchg
in
adc
out
sahf
retf
pop
addr16
sub
mov
fs
daa
lods
out
mov
xchg
xor
cmp
mov
sbb
mov
add
aaa
mov
enter
cmp
sub
fild
jb
mov
add
and
xor
add
in
mov
cwde
lea
ret
sahf
mov
loop
lea
imul
test
mov
xchg
addr16
outs
test
test
in
mov
push
call
(bad)
pusha
dec
lea
jae
cmp
addr16
lds
jg
inc
addr16
xlat
mov
loop
lea
cwde
fwait
lea
fidivr
stc
aad
cdq
(bad)
mov
arpl
pop
or
data16
loop
lea
adc
mov
data16
fbld
jb
out
xchg
pop
mov
mov
not
cmps
in
mov
adc
or
retf
repnz
mov
(bad)
cwde
in
dec
rdpmc
lods
add
pop
dec
(bad)
addr16
dec
movaps
mov
aas
and
in
jp
pop
and
fisubr
inc
pushf
ja
je
and
cdq
mov
addr16
dec
out
xchg
inc
mov
mov
jb
ins
data16
(bad)
xchg
mov
popf
arpl
arpl
fist
inc
addr16
sahf
xor
std
fwait
cdq
mov
and
and
in
bound
fisubr
inc
pushf
ja
je
and
cdq
mov
addr16
dec
sqrtps
mov
and
inc
in
jp
(bad)
and
fisubr
inc
pushf
ja
je
and
cdq
mov
addr16
dec
(bad)
sbb
js
addr16
sahf
in
inc
sbb
sub
data16
add
jb
(bad)
xchg
mov
in
fisttp
sub
xor
mov
addr16
test
pop
pcmpeqb
mov
cmova
or
data16
mov
aas
jb
pop
inc
fistp
addr16
sahf
in
inc
sbb
mov
and
mov
cwde
mov
add
data16
test
js
and
cdq
mov
addr16
dec
(bad)
lea
inc
fistp
addr16
sahf
in
inc
sbb
mov
and
mov
cwde
mov
addr16
test
jno
and
cdq
mov
addr16
dec
(bad)
aad
inc
fistp
addr16
sahf
in
inc
sbb
loope
data16
add
jb
(bad)
xchg
mov
in
fisttp
sub
xor
mov
add
icebp
test
pop
sub
out
jecxz
mov
(bad)
fistp
data16
sahf
xor
mov
fidivr
call
mov
lea
cwde
cwde
lea
movzx
and
jb
mov
data16
ins
data16
(bad)
xchg
mov
popf
arpl
arpl
fist
inc
addr16
sahf
xor
std
fwait
cdq
mov
and
and
(bad)
leave
xchg
xchg
xchg
leave
loop
lea
xchg
and
inc
fisubr
inc
pushf
ja
je
and
cdq
mov
addr16
dec
(bad)
lods
xor
fistp
addr16
sahf
in
inc
sbb
mov
call
addr16
test
aam
addr16
dec
addr16
nop
lahf
icebp
mov
xchg
xchg
inc
cwde
ror
test
outs
sti
mov
xchg
sti
xchg
icebp
lods
add
pop
push
in
jecxz
mov
std
mov
or
addr16
test
sub
addr16
dec
addr16
nop
lahf
icebp
mov
lods
mov
mov
and
outs
call
data16
(bad)
xchg
mov
popf
arpl
push
setbe
mov
aas
and
inc
in
jp
jae
jb
fisubr
inc
pushf
ja
inc
mov
addr16
and
jb
nop
lahf
and
ficomp
sbb
and
pop
(bad)
cdq
xor
in
push
in
push
inc
push
data16
in
cdq
(bad)
mov
addr16
lea
pushf
pop
adc
jb
ret
mov
in
jecxz
mov
cmps
cdq
(bad)
mov
cdq
cdq
add
in
(bad)
std
cmps
cdq
(bad)
mov
out
sahf
retf
pop
addr16
nop
lahf
icebp
add
sti
mov
fdivr
lods
mov
mov
repnz
ret
mov
data16
cwde
xor
sbb
data16
cwde
xor
ret
mov
data16
sub
(bad)
leave
mov
fwait
(bad)
rcr
lea
addr16
mov
cwde
cdq
pop
pop
jmp
retf
loop
lea
mov
jns
inc
addr16
pop
(bad)
cdq
xor
fistp
addr16
sahf
in
inc
sbb
sbb
rcr
ins
add
icebp
test
test
addr16
dec
addr16
nop
lahf
icebp
mov
lods
mov
mov
daa
data16
mov
xchg
sti
xchg
fistp
addr16
sahf
in
inc
sbb
mov
and
mov
cwde
mov
outs
out
test
data16
loop
lea
cwde
cwde
lea
mov
lock
mov
mov
out
test
addr16
add
cwde
cwde
lea
out
jb
cwde
cdq
jb
jecxz
jae
addr16
xor
mov
and
inc
scas
data16
loop
lea
data16
loop
lea
cwde
fwait
lea
mov
xchg
lea
daa
data16
mov
cdq
(bad)
mov
out
jae
adc
iret
xchg
push
or
jmp
inc
addr16
lea
push
fwait
(bad)
int
arpl
test
pop
jb
jmp
test
sahf
lea
loop
lea
cwde
cwde
lea
xchg
cdq
(bad)
mov
cdq
cdq
and
add
aam
addr16
test
hlt
jg
retfw
dec
addr16
nop
lahf
icebp
mov
cmp
mov
pop
data16
mov
xchg
sti
xchg
fistp
addr16
sahf
in
inc
sbb
mov
call
addr16
test
inc
jg
retfw
dec
addr16
nop
lahf
icebp
mov
xchg
xchg
inc
cwde
ror
adc
mov
cdq
(bad)
mov
addr16
add
jb
loop
lea
addr16
lea
cwde
ror
test
xchg
lea
loop
lea
loop
mov
and
cdq
mov
addr16
dec
(bad)
movs
dec
inc
fistp
addr16
sahf
in
inc
sbb
sbb
rcr
nop
jle
data16
test
in
jle
retfw
dec
addr16
nop
lahf
icebp
mov
lods
mov
mov
pop
data16
mov
cmp
mov
mov
jb
ins
data16
(bad)
xchg
mov
popf
arpl
push
setbe
mov
jmp
jb
in
jp
push
mov
mov
pop
data16
mov
data16
ins
data16
(bad)
xchg
mov
popf
arpl
arpl
fist
inc
addr16
sahf
xor
std
fwait
cdq
mov
and
pop
jb
in
bound
fisubr
inc
pushf
ja
je
das
sahf
and
cdq
mov
addr16
dec
out
imul
data16
ins
data16
(bad)
xchg
mov
popf
arpl
push
shrd
cwde
cwde
lea
in
jp
xlat
pop
jb
fisubr
inc
pushf
ja
je
and
cdq
mov
addr16
dec
(bad)
in
dec
inc
fistp
addr16
sahf
in
inc
sbb
cmp
jb
add
jb
(bad)
xchg
mov
in
fisttp
sub
xor
mov
ja
pop
sahf
and
cdq
mov
addr16
dec
out
xchg
pop
mov
mov
jb
ins
data16
(bad)
xchg
mov
popf
arpl
push
setbe
mov
cmp
inc
in
jp
jnp
xor
ror
or
jb
mov
data16
ins
data16
(bad)
xchg
mov
popf
arpl
push
setbe
mov
inc
pop
jb
in
jp
jge
xor
ror
push
pop
data16
mov
jo
inc
(bad)
mov
js
addr16
sahf
in
inc
sbb
mov
and
mov
cwde
mov
outs
jmp
sahf
cwde
fwait
lea
in
jecxz
mov
gs
aam
addr16
test
hlt
jl
retfw
dec
addr16
nop
lahf
icebp
mov
xchg
xchg
inc
cwde
ror
in
data16
mov
and
mov
cwde
mov
jl
data16
test
cmp
addr16
dec
addr16
nop
lahf
icebp
mov
xchg
xchg
inc
cwde
ror
sub
mov
data16
sub
(bad)
leave
mov
retfw
test
data16
nop
lahf
sti
xchg
out
bound
and
call
mov
imul
(bad)
fistp
addr16
sahf
in
inc
sbb
mov
and
mov
cwde
mov
data16
test
lods
popf
and
cdq
mov
addr16
dec
(bad)
ror
fistp
addr16
sahf
in
inc
sbb
mov
and
mov
cwde
mov
outs
out
xor
data16
jmp
jb
fisubr
inc
pushf
ja
inc
mov
jnp
retfw
and
jb
nop
lahf
and
ficomp
sbb
and
pop
(bad)
adc
addr16
push
movzx
mov
out
pop
jb
in
jp
addr16
sub
jb
addr16
jb
lea
outs
mov
addr16
lds
mov
(bad)
cmc
fwait
cdq
mov
addr16
int
xchg
lea
rcr
(bad)
test
fwait
lea
cwde
rcr
mov
rcr
shl
data16
mov
xchg
sti
xchg
in
addr16
lds
cmp
mov
jp
addr16
gs
out
sahf
test
cwde
cdq
sti
xchg
pop
jge
and
xor
jecxz
mov
rcr
out
sahf
inc
mov
pavgb
mov
packuswb
out
test
jnp
aaa
mov
pop
arpl
dec
and
sub
addr16
out
mov
xchg
mov
mov
scas
add
jno
addr16
leave
xchg
cdq
(bad)
ret
mov
cs
cmp
rep
repz
xor
and
xor
sahf
inc
mov
sti
fwait
lea
out
jae
repz
icebp
mov
call
inc
bound
inc
addr16
test
lahf
dec
mov
mov
outs
sti
xchg
mov
inc
inc
addr16
daa
dec
jmp
loopne
cdq
lea
(bad)
push
inc
inc
addr16
idiv
cdq
lea
cwde
mov
data16
adc
call
int
fs
out
repz
sahf
sti
xchg
mov
addr16
lds
fwait
lea
cwde
cdq
call
adc
fcomp
push
jb
in
xor
jmp
dec
(bad)
in
push
cdq
(bad)
int
ins
jae
xor
out
repz
mov
add
pcmpgtd
addr16
(bad)
lea
data16
inc
ret
fwait
lea
addr16
adc
push
jbe
addr16
rcr
fstp
and
sub
jb
(bad)
jo
mov
outs
cmps
pop
dec
xor
inc
or
jge
cwde
cdq
sbb
jb
loop
mov
rcr
adc
(bad)
cmc
repz
lea
cwde
cdq
(bad)
cmc
jmp
lea
cwde
cdq
(bad)
cmc
call
sar
loop
(bad)
mov
xchg
cdq
(bad)
ret
mov
fwait
lea
xor
inc
or
rcr
cwde
lea
addr16
mov
jmp
int
call
pop
data16
xchg
mov
mov
or
cwde
lea
addr16
test
mov
out
mov
loop
mov
addr16
cdq
cdq
lea
data16
mov
cdq
jb
in
idiv
jnp
mov
(bad)
cwde
lea
js
jb
jmp
test
xchg
lea
call
mov
addr16
sub
jb
addr16
int
call
(bad)
xchg
inc
inc
outs
mov
jecxz
jb
addr16
(bad)
call
fist
inc
out
sahf
pop
mov
repz
lea
addr16
setl
cwde
lea
addr16
test
div
call
mov
cmp
jmp
sub
mov
inc
inc
addr16
mov
cmps
adc
(bad)
gs
(bad)
or
div
call
mov
adc
xor
inc
pop
data16
sub
inc
in
loop
cwde
cdq
jb
ins
push
jb
addr16
sub
jb
jmp
adc
or
sub
jecxz
mov
and
lea
cwde
cdq
jb
adc
in
fwait
lea
ret
mov
js
jb
mov
in
fwait
lea
push
data16
loop
(bad)
mov
push
data16
lock
inc
nop
cmp
mov
pop
push
jb
or
fwait
lea
addr16
(bad)
in
cdq
lea
in
jecxz
mov
fistp
js
addr16
xchg
leave
loop
(bad)
mov
cmp
daa
leave
and
push
xor
and
(bad)
imul
leave
mov
test
mov
out
xor
mov
fld
addr16
mov
out
xor
in
push
data16
movs
add
adc
push
data16
movs
add
adc
cdq
imul
dec
shl
test
imul
push
dec
sbb
fld
addr16
mov
mov
cmp
addr16
mov
sbb
dec
repz
sti
add
arpl
aaa
pop
aaa
out
add
mov
jne
data16
test
pop
dec
out
xchg
icebp
and
jns
data16
adc
mul
cwde
inc
arpl
adc
out
mov
out
mov
adc
mul
cwde
inc
arpl
xor
and
xor
lds
bound
adc
shl
test
and
adc
jmp
mov
jne
jb
mov
data16
xchg
mov
xor
inc
push
push
jb
xor
stc
add
scas
movs
daa
leave
sbb
pop
addr16
adc
xor
sbb
jnp
sti
mov
fucomip
jp
addr16
xchg
leave
loop
xchg
mov
loop
xchg
mov
addr16
cld
xchg
mov
cwde
cdq
and
add
pop
inc
addr16
mov
cmps
imul
rcl
(bad)
cmc
mov
jmp
mov
outs
cmps
pop
pop
cwde
sar
xor
addr16
mov
rol
inc
and
sub
cwde
es
inc
addr16
cld
xchg
mov
cwde
cdq
and
(bad)
outs
mov
push
out
mov
out
mov
cwde
shl
jne
data16
mov
jg
cmc
scas
xchg
test
dec
jb
push
cmps
xor
cs
int
mov
cmp
xchg
clc
jae
jb
(bad)
cmc
pop
inc
addr16
jp
int3
cmp
jbe
data16
mov
xchg
sti
xchg
jbe
addr16
leave
mov
out
inc
adc
or
leave
mov
inc
into
mov
rdpmc
lods
add
call
outs
repz
or
pop
mov
mov
jb
loop
xchg
mov
push
data16
mov
data16
ins
data16
(bad)
xchg
mov
popf
arpl
push
setbe
inc
xchg
inc
inc
addr16
dec
(bad)
fld
fistp
addr16
sahf
in
inc
sbb
jmp
add
jb
(bad)
xchg
mov
jmp
sub
mov
jb
cwde
cdq
and
inc
in
bound
fisubr
inc
pushf
ja
jae
and
xchg
jae
data16
test
sub
mov
push
mov
jb
cwde
cdq
and
in
jp
daa
push
jb
fisubr
inc
pushf
ja
jae
and
xchg
jae
data16
test
push
dec
addr16
nop
lahf
icebp
mov
outs
push
jb
fiadd
test
xchg
scas
add
iret
inc
xchg
inc
inc
addr16
push
cwde
adc
jne
xor
jecxz
mov
inc
mov
jb
cwde
cdq
and
in
leavew
xchg
xchg
xchg
leave
loop
lods
mov
xlat
push
jb
fisubr
inc
pushf
ja
jae
and
xchg
jb
data16
test
js
and
xchg
jb
data16
test
add
addr16
dec
addr16
nop
lahf
icebp
mov
xchg
xchg
inc
jmp
test
push
jb
in
jp
fs
jb
cwde
cdq
and
in
jp
xchg
xchg
xchg
leave
loop
lods
mov
push
push
jb
fisubr
inc
pushf
ja
dec
mov
retfw
and
jb
nop
lahf
and
fisub
mov
mov
xchg
mov
push
data16
mov
and
int
xchg
mov
push
data16
mov
data16
ins
data16
(bad)
xchg
mov
popf
arpl
push
setbe
inc
xchg
inc
inc
addr16
dec
cvtps2pi
inc
xchg
inc
inc
addr16
dec
out
xchg
inc
mov
mov
jb
ins
data16
(bad)
xchg
mov
popf
arpl
push
setbe
inc
xchg
inc
inc
addr16
dec
(bad)
lods
add
test
int
inc
addr16
dec
pop
inc
inc
fistp
addr16
sahf
in
inc
sbb
mov
and
int
xchg
mov
push
data16
mov
dec
jb
cwde
adc
loop
xchg
mov
mov
xchg
mov
push
data16
mov
data16
ins
data16
(bad)
xchg
mov
popf
arpl
push
setbe
inc
xchg
inc
inc
addr16
dec
pcmpgtd
xchg
inc
inc
addr16
dec
pop
js
addr16
sahf
in
inc
sbb
mov
and
int
xchg
mov
push
data16
mov
data16
sub
(bad)
leave
mov
retfw
test
data16
nop
lahf
sti
xchg
out
bound
and
xchg
mov
mov
xchg
mov
push
data16
mov
data16
ins
data16
(bad)
xchg
mov
popf
arpl
push
setbe
inc
xchg
inc
inc
addr16
dec
(bad)
scas
add
test
loope
inc
addr16
dec
out
rol
call
stc
ins
data16
(bad)
xchg
mov
popf
arpl
push
setbe
inc
xchg
inc
inc
addr16
dec
(bad)
jno
inc
fistp
addr16
sahf
in
inc
sbb
inc
push
data16
add
jb
(bad)
xchg
mov
jmp
sub
mov
jb
cwde
cdq
and
inc
in
bound
mov
xor
jecxz
mov
imul
in
jp
addr16
sub
jb
addr16
jb
and
jb
out
jecxz
lahf
cwde
cdq
xrelease
jecxz
mov
imul
or
mov
(bad)
std
xchg
cdq
(bad)
mov
or
cwde
ror
cmp
cmps
es
inc
out
xchg
pop
mov
mov
mov
out
xor
jecxz
jb
xor
and
sub
sahf
test
cwde
cdq
sti
xchg
ret
out
mov
xchg
out
xor
data16
cmp
test
dec
jb
in
xor
xor
repnz
mov
sub
rcr
imul
test
dec
jb
(bad)
pop
xchg
push
data16
addr16
inc
(bad)
adc
addr16
mul
call
int
ret
cwde
ss
addr16
jmp
sub
mov
scas
add
jo
addr16
mov
mov
loop
inc
data16
data16
loop
mov
rcr
dec
push
data16
mov
cwde
rcl
mov
loop
(bad)
mov
popf
cdq
(bad)
ret
mov
loop
inc
addr16
mov
call
dec
data16
loop
(bad)
mov
fwait
cwde
lea
addr16
leave
loop
(bad)
mov
lahf
out
mov
and
int
fimul
dec
data16
mov
addr16
mov
cdq
ss
addr16
sbb
inc
in
jmp
add
mov
adc
inc
jmp
test
or
call
mov
addr16
sub
jb
addr16
int
call
(bad)
cdq
pop
inc
outs
mov
jecxz
jae
addr16
(bad)
call
cmps
dec
jb
out
sahf
jae
out
mov
lea
addr16
setl
cwde
lea
addr16
test
idiv
pushf
cdq
lea
dec
xrelease
pop
jb
jmp
sub
mov
pop
inc
addr16
mov
cmps
adc
(bad)
gs
(bad)
adc
idiv
pushf
cdq
lea
jecxz
mov
adc
loop
inc
data16
data16
aaa
dec
jb
out
sahf
pop
mov
data16
loop
mov
scas
dec
jb
or
and
int
test
aam
(bad)
ret
mov
data16
jecxz
jb
addr16
int3
pushf
cdq
lea
xor
ret
cdq
icebp
test
mov
jecxz
jb
addr16
mov
cwde
jmp
int3
pushf
cdq
lea
(bad)
addr16
aas
or
jb
loop
(bad)
mov
repz
lea
cwde
out
mov
shl
(bad)
mov
data16
and
test
dec
jb
aaa
push
jns
and
dec
jb
in
dec
cmps
adc
ins
mov
pop
inc
addr16
out
fcomp
pop
and
movs
adc
cwde
cdq
call
push
pop
in
jecxz
mov
push
ss
shl
(bad)
mov
cwde
cdq
icebp
test
popf
movs
or
jb
(bad)
popa
pop
inc
addr16
call
int
ror
mov
jb
lahf
addr16
mov
ret
cwde
mov
data16
cmc
ret
fwait
lea
addr16
neg
call
dec
add
cmp
daa
leave
and
push
xor
and
mov
inc
adc
mov
xor
jb
and
cmp
data16
adc
ja
sbb
(bad)
sbb
mov
xor
retf
data16
sub
mov
mov
jb
cwde
adc
xor
adc
xor
jb
and
sbb
cmp
jb
addr16
test
dec
jb
out
mov
int3
push
nop
cmp
int
call
xor
data16
and
mov
out
or
ja
jb
repz
jb
xor
int
and
push
shl
ja
adc
mov
mov
out
mov
xchg
adc
cmps
lea
sub
jecxz
mov
cdq
and
pop
jae
adc
lds
lea
cwde
cdq
icebp
test
lea
out
xchg
cdq
push
out
ins
data16
mov
push
mov
sub
leave
and
dec
xor
xor
lock
mov
sbb
aaa
mov
push
push
je
and
ss
dec
sub
jmp
mov
or
sub
jb
cwde
push
repnz
call
dec
shl
mov
cmps
and
cwde
mov
xchg
(bad)
stc
pop
inc
addr16
pop
jmp
add
jb
push
dec
in
add
mov
data16
and
icebp
mov
scas
movs
daa
leave
and
dec
xor
int3
xor
jle
clc
mov
inc
nop
cmp
fwait
out
mov
addr16
sub
jb
bound
sub
jb
addr16
loop
data16
data16
jbe
jge
data16
mov
test
mov
push
lea
(bad)
xor
jmp
jae
or
sti
xor
sbb
addr16
pop
or
(bad)
xor
or
addr16
pop
or
stc
xor
cmp
addr16
pop
or
repz
sub
addr16
fidiv
data16
xor
jo
push
pop
fbld
call
sub
sbb
push
push
fbld
call
sub
sbb
push
loop
and
data16
xor
jo
push
push
loope
call
leave
xchg
push
or
or
pop
or
push
inc
(bad)
xchg
push
inc
addr16
pop
or
sti
xor
test
addr16
pop
or
lds
inc
(bad)
mov
inc
addr16
pop
or
lds
inc
(bad)
movs
push
inc
addr16
push
out
and
mov
or
nop
xor
inc
addr16
mov
mov
addr16
es
ja
xor
call
(bad)
pop
push
inc
addr16
mov
mov
sar
daa
jb
ja
xor
call
(bad)
jno
inc
addr16
add
jb
fwait
cdq
inc
ins
clc
daa
jb
lahf
inc
jb
les
add
(bad)
(bad)
daa
data16
call
sub
es
mov
jb
les
add
(bad)
(bad)
daa
data16
call
sub
daa
jb
xlat
inc
jb
les
rol
addr16
(bad)
(bad)
daa
data16
call
sub
daa
jb
jmp
jb
les
add
(bad)
(bad)
daa
data16
call
leave
lahf
push
mov
mov
loop
add
adc
rcr
jb
ja
xor
call
(bad)
xor
cmp
lods
jae
and
pop
out
scas
arpl
sbb
adc
rcr
push
sahf
fwait
and
call
outs
stc
xor
data16
out
ss
inc
xchg
ss
or
inc
or
stc
xor
data16
and
stc
add
aaa
or
sub
jb
out
sbb
mov
jo
mov
rol
(bad)
daa
jb
addr16
inc
je
daa
jb
sbb
and
test
sbb
sbb
out
sub
mov
jb
outs
inc
jb
les
add
mov
out
mov
addr16
inc
je
daa
jb
addr16
inc
add
daa
jb
mul
inc
in
and
test
sbb
or
out
sub
mov
jb
mov
push
rol
addr16
sub
jb
addr16
sub
jb
addr16
sub
fs
or
outs
sbb
push
inc
addr16
mov
data16
jo
push
jbe
es
sub
inc
je
daa
jb
addr16
inc
add
daa
jb
ja
inc
inc
data16
or
data16
or
test
test
inc
jb
les
rol
addr16
jo
data16
addr16
inc
je
daa
jb
addr16
inc
add
daa
jb
ja
push
inc
data16
or
data16
jg
xor
mov
jb
jnp
jb
(bad)
(bad)
rol
addr16
mov
addr16
mov
addr16
sub
(bad)
jb
addr16
sub
jb
push
test
addr16
test
and
test
lds
data16
push
inc
fbld
data16
push
ss
data16
push
jae
addr16
int3
inc
data16
data16
aaa
push
cld
call
jb
addr16
rcl
daa
jb
addr16
inc
je
daa
jb
addr16
inc
and
and
sub
or
sub
data16
or
out
sub
jecxz
add
jb
adc
inc
les
mov
inc
data16
sbb
data16
data16
(bad)
push
push
inc
addr16
pop
call
jae
addr16
inc
test
daa
jb
jnp
jb
or
stc
xor
lea
(bad)
xor
dec
jae
addr16
sub
data16
or
out
sub
jecxz
add
jb
imul
(bad)
out
add
mov
and
sub
inc
je
daa
jb
addr16
inc
and
and
sub
jb
or
data16
leave
data16
pcmpgtw
aaa
push
scas
lahf
and
and
sub
mov
ins
clc
daa
jb
dec
pushf
lea
push
stc
xor
lea
(bad)
xor
jbe
jnp
xor
push
sbb
data16
data16
or
xor
mov
jb
jmp
jb
(bad)
not
add
mov
out
mov
inc
fbld
data16
push
ss
data16
out
inc
addr16
lea
data16
jb
addr16
sysexit
test
addr16
test
and
and
lds
data16
push
inc
fbld
data16
push
ss
data16
add
pop
data16
movs
data16
pcmpgtd
aaa
push
xor
mov
mov
shl
daa
jb
addr16
inc
je
daa
jb
addr16
inc
add
daa
jb
ja
pop
data16
data16
add
jb
sbb
and
sub
call
jecxz
sti
xor
lea
stc
xor
lea
(bad)
xor
jbe
push
cvttps2pi
addr16
rol
data16
data16
popa
mov
test
test
inc
jb
(bad)
repnz
addr16
mov
addr16
mov
addr16
sub
jb
maskmovq
div
addr16
sub
repnz
mov
jae
and
data16
pop
inc
jb
(bad)
addr16
mov
addr16
mov
addr16
sub
data16
shld
addr16
sub
repnz
not
add
jae
and
data16
inc
inc
jb
les
add
mov
out
mov
addr16
inc
je
daa
jb
addr16
inc
and
and
sub
pop
sub
jb
inc
addr16
sub
addr16
addr16
jb
addr16
jecxz
stc
xor
lea
stc
xor
lea
(bad)
xor
jle
and
xchg
jb
addr16
sub
repnz
mov
jae
and
data16
retf
inc
jb
les
add
jb
push
push
in
add
jb
push
and
add
gs
data16
bswap
jae
addr16
sub
repnz
test
cdq
and
adc
jmp
cdq
(bad)
leave
lahf
dec
mov
mov
cdq
sub
leave
and
pop
xor
int
or
push
mov
mov
lea
cwde
cdq
sti
xchg
mov
pop
nop
cdq
(bad)
ret
mov
daa
jb
lahf
dec
mov
mov
outs
in
add
je
inc
xchg
ss
addr16
jb
or
stc
xor
data16
and
stc
add
aaa
or
sub
jb
out
sbb
mov
jo
mov
rol
daa
jb
addr16
inc
je
daa
jb
sbb
and
test
sbb
sbb
out
sub
mov
jb
sti
inc
jb
les
add
popf
sub
addr16
inc
je
daa
jb
addr16
inc
add
daa
jb
dec
addr16
in
and
test
sbb
or
out
sub
mov
jb
aas
inc
jb
les
rol
addr16
sub
jb
addr16
sub
jb
addr16
sub
fs
or
outs
sbb
push
inc
addr16
mov
data16
jo
push
jbe
es
sub
inc
je
daa
jb
addr16
inc
and
and
sub
or
sub
data16
adc
mov
neg
(bad)
lds
repz
jle
jb
nop
sub
jb
aaa
mov
pop
data16
mov
push
xor
lea
sti
xor
icebp
ins
inc
addr16
rol
and
je
jo
inc
or
data16
push
mov
add
or
cwd
push
or
sub
addr16
inc
test
daa
jb
add
inc
or
stc
xor
lea
(bad)
xor
dec
jae
addr16
sub
or
data16
mov
neg
(bad)
xor
addr16
and
sahf
sti
xchg
stc
xor
lea
(bad)
xor
dec
jae
addr16
sub
fadd
data16
out
sub
jecxz
add
jb
jg
jb
les
add
or
cwde
push
inc
fbld
data16
push
ss
data16
out
inc
addr16
sub
jb
pcmpgtd
aaa
push
and
mov
mov
xor
and
sub
inc
je
daa
jb
addr16
inc
add
daa
jb
ja
adc
inc
shld
addr16
jb
sbb
mov
mov
call
push
inc
fisttp
xchg
leave
and
lea
stc
xor
lea
(bad)
xor
jbe
mov
(bad)
data16
or
data16
je
xor
mov
jb
cmp
inc
les
jb
push
push
in
add
jb
push
and
add
bound
xor
retf
inc
addr16
addr16
addr16
punpcklbw
fwait
and
inc
ins
inc
addr16
and
push
inc
fbld
data16
push
ss
data16
xor
push
xchg
inc
data16
data16
aaa
push
or
and
and
sub
cwde
pop
sar
(bad)
and
sub
inc
je
daa
jb
addr16
inc
add
daa
jb
ja
pop
data16
jns
jb
sbb
mov
mov
call
lds
inc
or
stc
xor
lea
(bad)
xor
jle
ret
jb
dec
or
sub
repnz
not
add
jae
and
data16
pop
jnp
inc
les
add
test
push
data16
addr16
inc
je
daa
jb
addr16
inc
and
and
sub
pop
sub
or
sub
repnz
mov
jae
and
data16
pop
jnp
inc
les
add
jb
push
push
in
add
jb
push
push
rol
addr16
sub
or
sub
jb
out
sbb
mov
jo
mov
shl
daa
jb
addr16
inc
je
daa
jb
addr16
inc
add
daa
jb
jo
jmp
add
jb
jns
jb
out
sbb
popf
mov
call
lds
inc
(bad)
rol
adc
test
mov
cdq
sub
leave
and
pop
xor
and
dec
out
sahf
test
mov
data16
or
sbb
repnz
call
in
mov
data16
mov
pop
addr16
xor
les
data16
and
xchg
bound
addr16
mov
out
mov
inc
fwait
lea
and
data16
lds
jns
call
fwait
push
and
mov
push
xor
cwde
cdq
icebp
test
aaa
mov
or
and
sub
xor
addr16
out
or
test
mov
out
mov
cmp
xchg
ror
and
ror
and
xchg
jae
out
mov
jb
pinsrw
addr16
inc
cwde
cdq
lea
(bad)
cmp
mov
retfw
dec
addr16
nop
lahf
sti
xchg
out
cmp
xor
and
cdq
lea
addr16
mov
xchg
sti
xchg
sbb
cwde
xlat
and
int
lea
jg
jb
sbb
xchg
and
cdq
lea
addr16
pop
push
(bad)
ret
add
test
lea
addr16
add
mov
sbb
inc
icebp
and
cdq
lea
addr16
pop
push
cvtps2pi
add
test
shl
addr16
mov
add
xor
jecxz
mov
(bad)
jno
inc
out
lea
ja
ret
(bad)
and
int
lea
jo
jb
xchg
dec
or
out
mov
(bad)
inc
jmp
test
jno
inc
out
lea
ja
lahf
(bad)
and
int
lea
jo
jb
sbb
jae
and
cdq
lea
addr16
pop
push
cmova
add
test
inc
gs
addr16
mov
pop
aam
inc
jmp
test
jno
inc
out
xchg
test
cwde
cdq
sti
xchg
sbb
adc
loop
lea
jno
jb
addr16
sub
sub
test
data16
add
sahf
movs
cwde
cdq
sbb
and
sub
xlat
xor
es
add
cs
inc
outs
jb
xchg
jl
inc
in
pop
leave
xchg
xchg
xchg
leave
loop
mov
inc
cwde
lea
arpl
leave
xor
inc
sahf
pop
mov
xor
call
addr16
mov
outs
cmps
push
dec
or
jle
inc
cmp
sub
out
xor
pop
outs
jb
xor
and
jle
nop
pop
sub
data16
inc
pop
jb
unpcklps
add
imul
(bad)
dec
fs
mov
retfw
dec
addr16
nop
lahf
cli
aad
sahf
lea
cwde
cdq
jae
jbe
fdivp
and
xchg
lea
addr16
xchg
sahf
lea
mov
jecxz
mov
cdq
and
out
cmp
and
xchg
lea
addr16
data16
sub
(bad)
leave
mov
cdq
lea
sbb
and
int
mov
loope
data16
ficom
pop
push
movq
add
imul
(bad)
loope
inc
addr16
mov
cdq
lea
ja
je
and
int
mov
sub
ficom
pop
push
movaps
add
imul
(bad)
xor
add
mov
ficom
pop
push
(bad)
rol
jmp
lods
nop
cdq
lea
(bad)
push
addr16
addr16
mov
cdq
lea
ja
retf
aam
jb
loop
test
jb
jb
ficom
pop
push
bswap
rol
jmp
lods
nop
cdq
lea
(bad)
cdq
inc
addr16
mov
cdq
lea
ja
mov
and
int
mov
movs
jae
jb
xchg
xchg
xchg
leave
loop
test
ficom
pop
push
jle
imul
(bad)
fldenv
addr16
mov
cdq
lea
ja
inc
shl
int
mov
in
data16
ficom
pop
push
cmovbe
add
imul
(bad)
in
inc
addr16
add
and
xchg
lea
cwde
cdq
sti
mov
cmp
mov
mov
jb
call
lahf
sahf
mov
out
jecxz
mov
cdq
repnz
xchg
sahf
lea
fimul
jge
pop
gs
out
repnz
addr16
mov
cmp
mov
mov
inc
fwait
or
and
test
movs
lea
loop
mov
loop
jo
addr16
jae
addr16
fwait
call
gs
ficomp
jge
pop
addr16
out
lea
dec
jae
addr16
fwait
cdq
lea
sub
inc
addr16
xchg
leave
loop
test
loop
mov
mov
call
jg
jb
mov
sahf
lea
daa
jle
inc
frstor
sti
adc
lods
sti
nop
ds
mov
pop
fisttp
(bad)
sub
in
adc
es
push
push
loop
and
and
int
call
jg
jb
xchg
dec
or
push
loop
and
and
int
call
jo
jb
mov
data16
addr16
mov
pop
inc
addr16
sbb
test
cwde
cdq
sti
xchg
jecxz
mov
ja
xor
jecxz
mov
(bad)
inc
pcmpgtw
mov
(bad)
addr16
push
jmp
test
jae
inc
jmp
and
lds
push
mov
fwait
sahf
lea
addr16
test
jb
loop
mov
jae
jb
pushw
xchg
fwait
call
cwde
cdq
icebp
test
mov
loop
jae
addr16
mov
cmps
arpl
test
jo
inc
ds
idiv
xchg
xchg
xchg
leave
loop
test
ficomp
jge
push
addr16
cwde
ror
rol
and
sub
jecxz
mov
addr16
inc
in
bound
call
jecxz
mov
push
je
inc
jmp
test
jb
inc
out
jecxz
mov
cdq
cdq
data16
jecxz
mov
cdq
repnz
bound
pop
push
in
jecxz
mov
cdq
mov
bound
cdq
dec
cwde
jmp
mov
cdq
icebp
std
mov
lea
xchg
xchg
xchg
leave
loop
test
rcr
idiv
mov
add
idiv
sbb
in
push
jmp
test
jne
inc
out
jecxz
mov
cdq
(bad)
std
fwait
cwde
lea
addr16
std
scas
xchg
lea
xor
test
je
inc
out
jecxz
mov
int3
ja
inc
jmp
mov
cwde
mov
addr16
fwait
sahf
lea
addr16
std
fwait
cwde
lea
lahf
cdq
(bad)
int
popa
jae
(bad)
xor
idiv
or
sahf
lea
addr16
sub
sub
data16
jmp
adc
cdq
call
push
sub
lds
lea
cwde
cdq
call
dec
cmp
aaa
jl
call
retf
mov
scas
movs
jbe
xor
xchg
clc
add
inc
(bad)
frstor
addr16
inc
mov
mov
(bad)
xor
data16
jns
test
je
inc
out
jecxz
scas
cwde
cdq
jnp
adc
test
ja
inc
or
data16
out
in
js
data16
add
es
aaa
sti
xor
data16
out
mov
(bad)
lods
cwde
cdq
sti
or
out
add
adc
data16
test
arpl
mov
data16
out
mov
data16
data16
loop
pushf
mov
outs
mov
psadbw
add
div
mov
jmp
push
pop
cdq
lea
imul
ret
bound
mov
outs
mov
inc
cwde
arpl
hlt
and
jl
inc
pop
inc
fsub
jbe
leave
cmps
xchg
cwde
sbb
aas
sti
xchg
mov
out
mov
lahf
mov
(bad)
adc
(bad)
std
aam
lea
ja
sti
adc
lods
sti
nop
ds
mov
mov
repnz
jecxz
cdq
(bad)
shl
lahf
mov
aam
lea
out
sysenter
addr16
int3
mov
push
addr16
adc
imul
mov
fsubr
loop
lahf
mov
(bad)
and
sub
jecxz
lods
cwde
cdq
and
out
xor
data16
jecxz
lods
cwde
cdq
and
loop
pushf
mov
ja
jb
loop
sahf
mov
mov
lds
mov
jle
inc
jmp
test
ja
inc
or
data16
xchg
xchg
push
inc
addr16
iret
cwde
and
and
sub
es
add
rcl
data16
std
add
push
jbe
and
data16
add
sbb
mov
(bad)
xor
mov
add
and
data16
mov
jmp
push
push
and
and
and
and
sub
inc
loop
mov
push
addr16
std
test
repnz
and
data16
add
sbb
mov
(bad)
xor
mov
jb
es
ret
mov
mov
xchg
and
data16
ret
imul
or
sub
jb
sbb
daa
jb
jmp
inc
out
and
sub
jb
addr16
fimul
add
ror
and
dec
ror
lea
out
jae
adc
retf
jmp
cmc
mov
(bad)
test
imul
fbstp
sbb
xchg
xchg
add
pop
hlt
(bad)
mov
cdq
pop
and
xchg
fimul
add
ror
add
dec
ror
lea
out
jae
adc
retf
jmp
cmc
mov
(bad)
test
imul
fbstp
sbb
xchg
xchg
add
pop
hlt
(bad)
addr16
pop
hlt
(bad)
ins
jl
fisub
test
cwde
cdq
stc
(bad)
lea
xchg
xchg
loope
stc
xor
and
add
aaa
or
or
test
imul
sbb
or
data16
and
jb
mov
data16
addr16
push
addr16
add
fs
out
mov
mov
mov
mov
jb
jmp
inc
addr16
mov
addr16
sub
jb
addr16
sub
jb
lods
data16
xchg
call
stc
xor
bnd
or
sub
xor
data16
(bad)
in
inc
(bad)
adc
jb
addr16
outs
psllq
dec
data16
jb
pop
inc
addr16
imul
mov
gs
mov
data16
cdq
out
mov
pushf
mov
addr16
stos
imul
ss
retf
mov
hlt
and
and
sub
shl
inc
packuswb
out
std
(bad)
cwde
cdq
icebp
test
mov
pusha
in
sub
and
inc
mov
data16
addr16
leave
mov
jmp
call
or
mov
add
jb
mov
data16
jb
jmp
sub
jb
js
xor
data16
mov
addr16
push
xchg
data16
push
jb
es
stos
jg
aaa
movs
aaa
mov
dec
repz
inc
jmp
inc
addr16
sub
jb
and
jb
outs
cmps
pop
xchg
cmp
sub
out
xor
pop
fs
xor
and
and
mov
stc
add
push
or
sahf
jo
jecxz
jae
addr16
mov
push
data16
jecxz
jo
addr16
popa
inc
addr16
pop
pop
ja
inc
addr16
jge
addr16
push
data16
jb
pop
push
mov
data16
mov
jb
setae
sub
and
test
or
cwde
cdq
sti
mov
jp
(bad)
lods
call
mov
loop
(bad)
mov
call
mov
push
jb
cmps
imul
int
scas
(bad)
mov
and
xor
xchg
jle
outs
mov
or
mul
loop
(bad)
mov
in
repz
aad
fwait
lea
in
jecxz
mov
mov
mov
repnz
mov
call
sub
mul
mov
stc
lds
jecxz
mov
addr16
mov
addr16
dec
addr16
imul
and
cmps
jne
addr16
push
hlt
and
and
rcl
push
and
and
inc
out
add
and
ss
pop
add
and
jmp
shl
test
or
addr16
mov
(bad)
in
add
aaa
dec
push
data16
popa
jg
addr16
rol
daa
jb
and
dec
cwde
adc
jae
jb
fistp
addr16
xchg
leave
loop
(bad)
mov
push
popa
jb
in
and
loop
mov
dec
data16
(bad)
not
add
ss
adc
add
dec
jnp
push
jmp
adc
bound
pop
jnp
repnz
adc
bound
rol
adc
(bad)
(bad)
rol
adc
bound
add
jle
bound
add
neg
addr16
pop
push
pop
idiv
bound
rol
adc
(bad)
(bad)
rol
adc
bound
add
jg
xlat
jbe
inc
cwde
adc
fild
inc
setns
push
(bad)
stc
jle
ficomp
test
stos
mov
in
scas
mov
ret
mov
mov
mov
dec
addr16
lds
mov
fwait
push
popa
data16
lahf
dec
mov
mov
inc
cwd
lea
cli
daa
jb
mov
out
jae
cwde
cdq
jb
inc
or
sub
and
(bad)
xor
addr16
inc
test
daa
jb
arpl
inc
mov
mov
out
mov
loop
lea
call
mov
pop
shl
inc
imul
data16
cwde
data16
jmp
mov
addr16
dec
addr16
cwd
lea
out
jae
adc
outs
sub
sub
and
cdq
lea
cwde
cdq
icebp
test
lea
or
push
stos
add
jb
scas
ins
jb
cwde
push
mul
and
data16
add
inc
fnstsw
dec
inc
addr16
xchg
leave
loop
(bad)
mov
loop
lea
xchg
fwait
lea
and
fwait
lea
addr16
test
lea
inc
cwd
lea
bnd
mov
inc
out
jae
cwde
cdq
jb
inc
or
sub
jl
and
xor
addr16
inc
pop
bnd
arpl
mov
inc
cdq
(bad)
ret
scas
cdq
xor
pop
addr16
sahf
in
push
adc
inc
or
and
sub
push
dec
lea
repz
test
mov
addr16
addr16
lea
shl
jb
cwde
cdq
clc
les
lea
arpl
ds
or
sub
xchg
xchg
and
test
addr16
inc
pop
bnd
imul
inc
mov
jbe
addr16
inc
cwde
cdq
lea
jecxz
mov
adc
sahf
sti
xchg
jecxz
mov
loop
(bad)
mov
mov
xchg
(bad)
mov
ins
data16
mov
data16
loop
lea
out
xor
cdq
jp
addr16
inc
cwde
cdq
lea
inc
sbb
data16
mov
dec
lea
(bad)
xor
jno
inc
addr16
jnp
repz
outs
push
jb
jmp
int
xchg
(bad)
mov
mov
xchg
(bad)
mov
ins
data16
mov
data16
loop
lea
dec
stc
xor
icebp
jp
addr16
inc
cwde
cdq
lea
inc
sbb
data16
mov
jb
mov
lea
stc
xor
leave
jp
addr16
rol
data16
mov
jmp
int
xchg
(bad)
mov
mov
jb
loop
(bad)
mov
ins
data16
mov
data16
loop
lea
dec
stc
xor
dec
jp
addr16
inc
cwde
cdq
lea
inc
sbb
data16
mov
jb
addr16
dec
lea
stc
xor
and
addr16
dec
inc
addr16
cwd
lea
out
jae
adc
push
sub
jb
dec
mov
inc
or
data16
push
dec
in
add
pusha
dec
addr16
inc
fs
loop
mov
push
cdq
(bad)
retf
jae
cwde
cdq
dec
jo
bound
sbb
inc
or
and
sub
push
dec
lea
stc
xor
mov
inc
addr16
mov
repnz
mov
cdq
cdq
lea
retf
leave
lahf
dec
mov
mov
cdq
lea
jmp
sub
xor
jecxz
mov
mov
mov
jb
jmp
mov
mov
inc
addr16
cwd
lea
addr16
sub
xor
call
mov
mov
inc
addr16
or
data16
loop
mov
push
cdq
(bad)
retf
jae
cwde
cdq
dec
jo
bound
sbb
inc
or
and
sub
sbb
lea
stc
xor
jge
inc
addr16
jg
repnz
mov
cwde
cdq
(bad)
ret
scas
cdq
xor
pop
addr16
sahf
imul
mov
out
sahf
inc
mov
cwd
lea
call
add
div
(bad)
addr16
push
(bad)
cs
addr16
xchg
leave
loop
(bad)
mov
call
sub
jbe
addr16
sub
jb
mov
add
in
addr16
lds
sbb
data16
cmc
xchg
cwde
lea
addr16
xor
and
inc
adc
dec
push
inc
in
lea
out
jae
adc
call
xchg
fwait
lea
(bad)
es
rcl
test
data16
jecxz
mov
gs
and
cwde
lea
addr16
mov
cdq
(bad)
ret
scas
cdq
xor
pop
addr16
sahf
or
int
xchg
(bad)
mov
cli
xchg
(bad)
mov
xchg
cwde
lea
addr16
int
xchg
(bad)
mov
setbe
mov
cdq
lea
cwde
rol
push
arpl
mov
addr16
inc
data16
data16
sbb
data16
daa
push
push
shl
call
leave
loop
mov
sub
movs
call
mov
gs
sub
(bad)
mov
cdq
lea
jmp
mov
popw
mov
jmp
adc
not
add
(bad)
mov
cdq
lea
or
fwait
lea
mov
xchg
arpl
mov
cwde
mov
inc
addr16
or
xor
data16
out
sahf
pop
mov
or
and
sub
mov
mov
push
jae
addr16
(bad)
jmp
(bad)
ret
mov
push
jp
es
clc
iret
jle
inc
nop
cmp
mov
cwde
adc
adc
xor
pop
sub
scas
movs
bound
out
xchg
ret
mov
push
xor
pop
dec
fadd
jns
add
out
mov
and
inc
data16
loop
jb
addr16
push
outs
imul
jnp
loop
add
jns
push
mov
add
in
inc
addr16
mov
lahf
out
mov
push
mov
add
jns
push
out
add
lock
addr16
jne
(bad)
xor
ins
lea
stc
xor
or
addr16
inc
ins
clc
daa
jb
ins
cdq
inc
pop
bnd
cmp
inc
out
sahf
test
mov
es
ins
cdq
inc
push
daa
bound
pop
push
pop
fbld
popw
dec
cwde
push
push
fbld
call
jnp
inc
in
add
data16
add
pop
dec
cwde
push
call
data16
push
inc
in
add
ins
rcr
add
pop
push
cwde
push
mul
and
data16
outs
out
mov
out
mov
call
jnp
aad
dec
jne
(bad)
xor
pusha
stc
pop
pop
stc
xor
push
pop
fbld
popw
inc
in
jnp
fbld
repz
stos
jns
inc
pop
push
outs
aad
popw
inc
in
jnp
shl
dec
jne
stc
xor
pusha
stc
pop
pop
(bad)
xor
push
push
fbld
popw
inc
in
jnp
fldenv
dec
jne
(bad)
xor
pusha
stc
pop
jnp
xor
mov
mov
lea
adc
inc
mov
xchg
jb
cmp
sub
cwde
inc
jp
and
data16
cwde
inc
jle
and
data16
cwde
inc
bound
addr16
cwde
inc
data16
data16
addr16
cwde
inc
push
mov
data16
addr16
cwde
inc
pop
mov
data16
addr16
cwde
inc
inc
mov
data16
addr16
cwde
inc
inc
mov
data16
addr16
xor
xchg
adc
mov
inc
addr16
xchg
pop
push
xor
lahf
and
in
jp
and
sti
xchg
lea
out
push
xor
lea
push
adc
lahf
inc
pop
mov
addr16
adc
icebp
mov
mov
data16
or
adc
cmp
inc
ja
jb
addr16
inc
loop
push
jge
jbe
inc
adc
pop
test
bound
xchg
inc
in
xor
push
cmps
retf
mov
popf
xchg
fdiv
in
and
icebp
in
push
arpl
stc
add
bound
inc
cwde
inc
xor
addr16
cwde
inc
ss
data16
addr16
cwde
inc
cmp
addr16
cwde
inc
ds
data16
addr16
cwde
inc
and
addr16
cwde
inc
es
data16
addr16
cwde
inc
sub
addr16
cwde
inc
cs
data16
addr16
cwde
inc
adc
addr16
cwde
inc
push
mov
data16
addr16
cwde
inc
sbb
addr16
cwde
inc
push
mov
data16
addr16
cwde
inc
add
addr16
cwde
inc
push
mov
data16
addr16
cwde
inc
or
addr16
cwde
inc
push
mov
data16
addr16
cwde
inc
repnz
data16
addr16
cwde
inc
div
addr16
cwde
inc
cli
mov
data16
addr16
cwde
inc
(bad)
mov
data16
addr16
cwde
inc
loop
and
data16
cwde
inc
out
and
data16
cwde
inc
jmp
data16
cwde
inc
out
mov
data16
addr16
cwde
inc
shl
addr16
cwde
inc
(bad)
mov
data16
addr16
cwde
inc
fidiv
addr16
cwde
inc
fidiv
addr16
cwde
inc
ret
data16
addr16
cwde
inc
(bad)
mov
data16
addr16
cwde
inc
retf
data16
addr16
cwde
inc
into
mov
data16
addr16
cwde
inc
mov
and
data16
cwde
inc
mov
and
data16
cwde
inc
mov
shl
jb
cwde
inc
mov
shl
jb
cwde
inc
mov
shl
jb
cwde
inc
cmps
mov
data16
addr16
cwde
inc
stos
mov
data16
addr16
cwde
inc
scas
mov
data16
addr16
cwde
inc
xchg
mov
data16
addr16
cwde
inc
xchg
mov
data16
addr16
cwde
inc
call
data16
cwde
inc
sahf
mov
data16
addr16
cwde
inc
mov
addr16
cwde
inc
mov
addr16
cwde
inc
jb
and
data16
cwde
inc
jbe
and
data16
cwde
inc
jp
and
data16
cwde
inc
jle
and
data16
cwde
inc
bound
data16
cwde
inc
data16
data16
addr16
cwde
inc
push
and
data16
cwde
inc
outs
mov
data16
addr16
cwde
inc
push
mov
data16
addr16
cwde
inc
push
mov
data16
addr16
cwde
inc
pop
mov
data16
addr16
cwde
inc
pop
mov
data16
addr16
cwde
inc
inc
mov
data16
addr16
cwde
inc
inc
mov
data16
addr16
cwde
inc
dec
mov
data16
addr16
cwde
inc
dec
mov
data16
addr16
cwde
inc
xor
data16
cwde
inc
ss
data16
addr16
cwde
inc
cmp
data16
cwde
inc
ds
data16
addr16
cwde
inc
and
data16
cwde
inc
es
data16
addr16
cwde
inc
sub
data16
cwde
inc
cs
data16
addr16
cwde
inc
adc
data16
cwde
inc
push
mov
data16
addr16
cwde
inc
add
data16
cwde
inc
push
mov
data16
addr16
cwde
inc
or
data16
cwde
inc
push
mov
data16
addr16
cwde
inc
repnz
data16
addr16
cwde
inc
(bad)
mov
data16
addr16
cwde
inc
loop
and
data16
cwde
inc
out
and
data16
cwde
inc
jmp
data16
cwde
inc
out
mov
data16
addr16
cwde
inc
shl
data16
cwde
inc
(bad)
mov
data16
addr16
cwde
inc
fidiv
data16
cwde
inc
fidiv
data16
cwde
inc
retf
data16
addr16
cwde
inc
into
mov
data16
addr16
cwde
inc
mov
and
data16
cwde
inc
mov
and
data16
cwde
inc
mov
shl
jb
cwde
inc
mov
shl
jb
cwde
inc
mov
shl
jb
cwde
inc
cmps
mov
data16
addr16
cwde
inc
stos
mov
data16
addr16
cwde
inc
scas
mov
data16
addr16
cwde
inc
xchg
mov
data16
addr16
cwde
inc
xchg
mov
data16
addr16
cwde
inc
call
data16
cwde
inc
sahf
mov
data16
addr16
cwde
inc
xor
jb
cwde
inc
xchg
data16
cwde
inc
mov
data16
cwde
inc
mov
data16
