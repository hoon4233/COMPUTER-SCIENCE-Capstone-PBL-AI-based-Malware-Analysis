and
or
outs
sub
sub
lahf
ins
dec
and
jge
cmp
sub
das
adc
push
cmps
push
or
add
imul
adc
or
xor
push
or
xor
pop
fs
jmp
or
in
bound
dec
and
popa
fs
push
(bad)
xchg
js
and
sub
sub
shl
cmp
jnp
inc
push
cmp
sub
push
adc
xor
ror
jns
int3
jmp
sbb
ds
mov
pusha
(bad)
cwde
cdq
sub
sub
sub
es
nop
adc
push
imul
fsubr
movs
sub
cmps
addr16
xchg
rcr
lods
shr
in
bound
sbb
inc
jl
inc
add
sub
sub
sbb
outs
adc
cmp
sbb
retf
adc
imul
js
cmp
push
outs
adc
pop
sbb
push
adc
fsubr
jo
jb
jge
sub
jecxz
sbb
test
cmp
pop
cmps
outs
and
les
(bad)
xchg
rcl
cmp
jg
jmp
cdq
and
jecxz
sbb
cmp
sbb
adc
and
or
ret
cdq
inc
js
jmp
cmp
and
js
push
sub
adc
add
cld
stos
adc
adc
lods
and
jmp
scas
sub
sub
sub
jle
add
push
in
popa
shr
xor
cmp
and
fsubr
shl
adc
jmp
sbb
pop
cmp
imul
push
push
xchg
adc
jbe
ja
lds
pushf
push
sub
adc
add
add
arpl
hlt
jno
sub
ret
dec
leave
sub
sub
popf
int3
add
jl
fsubr
inc
repnz
sub
dec
popf
or
sub
sub
rol
jnp
dec
cmp
dec
xchg
and
inc
or
inc
push
sub
or
dec
pushf
push
sub
shl
add
outs
adc
pop
or
fsubr
mov
push
sub
in
jo
frstor
and
sub
sub
sub
xchg
or
imul
jp
jnp
xchg
or
mov
in
fsub
inc
push
inc
adc
push
lods
jl
clc
ins
adc
jp
adc
loope
lods
adc
sub
fimul
shr
mov
sbb
inc
jle
in
loopne
xchg
rol
pusha
adc
call
arpl
push
sub
jp
sub
push
inc
test
pop
aam
xlat
xchg
jl
push
imul
(bad)
xchg
sub
pop
ins
sbb
xchg
out
jns
cli
jno
sub
into
loope
cld
call
loopne
xchg
shl
pop
in
dec
ja
in
jl
leave
inc
jns
jnp
ret
sub
xchg
sub
push
sar
mov
adc
push
sub
sub
sub
sub
sub
pop
shl
adc
test
xor
push
sbb
popa
xor
xor
xchg
pop
add
sbb
sub
mov
xor
pop
ins
sbb
imul
push
adc
and
sub
push
jbe
in
jl
leave
xchg
lds
xchg
xchg
push
mov
sub
repz
in
call
sub
adc
sbb
les
push
fisub
pop
in
call
xchg
pop
or
sbb
inc
adc
sbb
les
sub
out
xchg
pop
call
sub
pusha
sub
pop
in
push
ret
in
fimul
jmp
ja
out
inc
mov
cmp
mov
nop
fiadd
mov
cmps
push
shl
out
and
(bad)
ins
pop
mov
(bad)
jno
push
cmps
push
shl
out
adc
(bad)
ins
pop
mov
ret
push
aad
aam
jl
and
cmp
imul
imul
aad
jmp
push
cmp
loopne
ins
cmps
push
aad
adc
or
movs
push
shr
movs
in
mov
sub
rcr
rcl
jecxz
sbb
test
lods
sub
push
rcr
stos
adc
jmp
rcl
jmp
push
out
inc
mov
imul
jp
jnp
pop
cmps
dec
cmp
shl
sbb
push
lahf
lods
xchg
shr
(bad)
loope
cmp
(bad)
xchg
shr
sub
cwde
push
sub
imul
sub
adc
sub
jmp
(bad)
cmp
aam
(bad)
jns
mov
ins
sub
sub
lods
xchg
shr
(bad)
loope
in
(bad)
xchg
rcr
(bad)
lahf
mov
(bad)
xchg
rcr
(bad)
loope
call
icebp
inc
(bad)
lods
ins
sub
cdq
lods
imul
loopne
jns
int3
jmp
add
jnp
je
jmp
aad
adc
xor
push
imul
fild
sub
mov
and
in
jecxz
test
xor
mov
loopne
and
repnz
out
ins
xor
mov
pushf
movs
push
fstp
rcr
mov
jge
jp
jnp
je
jmp
aad
pop
call
mov
cmp
or
out
sub
mov
and
in
jecxz
test
xor
mov
loopne
and
repnz
sub
jno
loope
in
mov
sbb
push
sub
imul
ss
jmp
inc
mov
jl
push
aad
adc
push
imul
mov
sbb
push
sub
(bad)
xor
(bad)
sub
xchg
add
sbb
sbb
and
outs
push
repz
cld
das
sub
sbb
out
inc
mov
ds
pop
pusha
xchg
rcr
jl
rcr
popf
out
xchg
sub
sub
pop
fs
dec
enter
shr
jmp
loope
call
jp
jb
imul
sbb
jno
push
jp
retf
jmp
lods
or
and
aam
into
loope
in
mov
mov
jge
jp
jnp
je
xchg
pushf
aaa
cmp
lods
mov
(bad)
movs
push
aad
jmp
pop
pusha
les
pop
push
sub
sub
ror
sub
inc
(bad)
sbb
sub
retf
adc
sub
retf
popf
ins
nop
movs
shr
ins
pop
adc
cwde
jae
jb
out
inc
mov
aas
cmps
popa
and
pop
and
xor
stos
push
mov
imul
and
mov
imul
xor
sub
pop
ins
cmps
or
cmp
das
xchg
sbb
mov
sub
cmc
sub
dec
jb
out
inc
mov
cmp
mov
push
lahf
xor
mov
jmp
adc
add
mov
sub
movs
sub
int
sub
movs
xlat
mov
scas
sbb
mov
loope
clc
and
pushf
cmc
imul
inc
push
les
push
in
sbb
mov
sbb
in
adc
mov
imul
(bad)
pop
cmps
add
jl
adc
push
ret
pop
bound
and
mov
movs
push
int
in
popa
sub
in
push
ret
in
sub
sub
(bad)
xchg
jne
jmp
stos
jns
int3
rol
adc
push
sub
jg
xchg
cdq
pop
retf
add
jmp
jmp
push
or
sub
mov
cwde
push
sub
sbb
in
in
sub
push
and
push
sub
stos
push
mov
imul
xor
mov
imul
sbb
cmps
inc
sub
xor
add
jmp
push
shr
jns
pop
sbb
neg
sub
sub
adc
in
int
xlat
xchg
jl
add
and
(bad)
xchg
sub
pop
fs
xor
xor
fsub
adc
fwait
cmp
push
cmps
push
and
ins
adc
adc
jle
movs
push
aad
push
loopne
addr16
sub
xchg
push
xchg
sub
lods
inc
sub
in
sub
adc
sub
(bad)
push
hlt
jecxz
loope
int3
(bad)
xchg
rcr
popf
sub
ins
pushf
adc
adc
outs
scas
xor
outs
adc
leave
push
mov
shr
out
adc
sub
sub
jne
icebp
pop
hlt
popf
jmp
lahf
ins
nop
movs
push
ror
mov
fnstcw
mov
add
(bad)
xchg
adc
push
push
sbb
pop
sub
push
rol
loope
call
mov
xchg
movs
xlat
stos
adc
inc
mov
mov
mov
push
rol
adc
sub
sub
imul
mov
stos
mov
jmp
leave
mov
imul
adc
sub
ins
xchg
and
adc
outs
adc
xchg
sub
mov
mov
jmp
add
jmp
mov
arpl
inc
mov
xchg
imul
ins
nop
and
stos
dec
mov
imul
imul
xchg
std
xchg
shr
mov
mov
scas
clc
cmp
jp
xchg
movs
gs
jmp
sub
(bad)
fist
sub
dec
call
test
in
mov
iret
pop
jl
push
aad
sub
sub
fistp
ins
nop
movs
rol
adc
xchg
sar
dec
mov
imul
sbb
sub
ins
pusha
mov
jl
retf
shl
sub
call
repz
scas
sub
push
fucomi
(bad)
popa
in
pusha
sub
jmp
call
jge
outs
adc
or
push
sub
aam
out
jmp
call
rcr
movs
rol
je
iret
pop
ins
adc
push
mov
pop
adc
push
ins
scas
jno
push
movs
shr
imul
in
pop
jmp
xchg
scas
jno
push
pop
sbb
sbb
ins
adc
mov
push
xchg
out
cli
cmp
add
sub
sub
add
sub
push
inc
push
or
push
rol
cs
add
rcr
sub
imul
sub
mov
and
pop
sbb
sbb
sub
inc
push
inc
push
inc
cwde
int3
push
sub
inc
adc
loope
jecxz
loope
in
sub
pop
in
rcl
dec
loopne
jns
int3
rol
inc
push
xchg
jae
jbe
lods
call
xchg
popf
xchg
shr
mov
bound
out
in
shr
xlat
xchg
sub
int
outs
adc
or
sub
test
cdq
lods
lods
shr
(bad)
cmp
rcl
and
mov
stos
inc
adc
inc
pop
adc
add
push
shr
mov
stos
shl
movs
in
call
cld
ret
xchg
shr
stos
lods
and
sub
ficom
lahf
iret
popf
lods
fcom
jmp
shr
(bad)
cmp
inc
mov
loope
call
mov
in
sub
xchg
movs
xlat
movs
in
lock
xchg
jl
dec
mov
mov
xchg
jl
adc
sub
mov
addr16
xchg
jmp
aam
xchg
rol
(bad)
push
sub
cmps
sub
aas
push
popf
ins
xchg
and
sbb
push
sub
pushf
test
jmp
scas
shl
loope
push
mov
xchg
cmps
xchg
in
shr
mov
push
sub
hlt
cmp
lods
(bad)
shr
(bad)
cmp
inc
mov
loope
call
xchg
outs
sub
dec
jmp
stos
(bad)
xchg
rcl
in
mov
test
sub
mov
push
jb
imul
aam
shr
jns
mov
(bad)
xchg
scas
shl
aad
jmp
xchg
lods
xlat
lods
push
sub
fild
sub
xchg
sub
es
adc
mov
(bad)
sub
xchg
shr
(bad)
cmp
sub
rol
sub
stos
lods
and
sahf
in
mov
xlat
xchg
jmp
push
shr
sub
adc
sub
es
out
adc
stc
dec
sub
inc
imul
enter
inc
(bad)
(bad)
jmp
sbb
rcl
sbb
jle
add
hlt
imul
aam
shr
jle
and
(bad)
xchg
scas
shl
push
test
xlat
xchg
sub
adc
sub
jl
push
xchg
rcl
(bad)
push
sub
adc
aad
jmp
xchg
jnp
loop
shr
stos
lods
and
(bad)
xchg
sub
pop
(bad)
jmp
adc
inc
mov
jns
ins
adc
into
fldpi
(bad)
jmp
sbb
rcl
sbb
jle
add
test
jle
movs
loope
xchg
scas
shl
push
test
xlat
xchg
sub
adc
sub
jl
push
xchg
rcl
(bad)
push
sub
adc
aad
jmp
xchg
jnp
outs
popf
shr
stos
lods
and
(bad)
xchg
sub
pop
(bad)
jmp
adc
fcomi
mov
xchg
movs
xlat
inc
imul
enter
jle
jmp
jmp
sbb
rcl
sbb
shr
sub
sub
sub
adc
cmp
(bad)
xchg
scas
shl
push
test
xlat
xchg
sub
adc
sub
jl
push
xchg
rcl
(bad)
push
sub
adc
aad
jmp
xchg
jnp
xchg
sub
xchg
sub
pop
jne
adc
sub
xchg
jmp
sar
jmp
jmp
sbb
rcl
sbb
shr
sub
sub
fistp
push
shr
(bad)
push
pop
mov
lods
xchg
shr
(bad)
cmp
mov
ret
adc
outs
adc
leave
js
imul
popf
sub
jmp
adc
jae
adc
jmp
sub
lods
mov
jmp
shr
jns
adc
jle
movs
push
aad
in
sbb
test
inc
mov
xchg
jl
adc
rcr
jmp
shr
mov
lods
out
and
stos
int
jmp
xchg
sub
xchg
rcl
jmp
sub
test
pop
push
push
shr
(bad)
jg
shr
sub
sub
test
inc
movs
in
mov
xlat
xchg
jl
lods
mov
jmp
xor
lods
in
shr
(bad)
loope
cdq
lods
mov
inc
test
sub
lods
clc
shr
(bad)
cmp
adc
push
and
adc
push
shr
jns
test
inc
mov
push
rcr
jmp
adc
push
shr
(bad)
cmp
jmp
jecxz
jmp
push
movs
push
aad
in
sbb
(bad)
sbb
inc
in
cld
(bad)
xchg
rol
lock
xchg
jl
adc
shr
mov
jmp
stos
scas
imul
imul
in
enter
jl
lods
adc
(bad)
cmp
popf
ins
xchg
movs
int3
sbb
rcl
in
dec
pop
sub
call
sub
stos
int
jmp
xchg
sub
pushf
nop
shr
(bad)
add
push
shr
jns
sbb
shl
xchg
rcl
push
sub
ret
adc
fwait
in
sub
mov
movs
in
shr
xlat
xchg
jl
dec
mov
movs
in
shr
xlat
xchg
jl
push
add
adc
lods
cmp
jmp
jmp
push
shr
mov
xchg
mov
jmp
in
pushf
(bad)
xchg
rcl
nop
ins
sub
sub
shr
(bad)
jmp
add
(bad)
xchg
adc
push
xchg
cld
(bad)
xchg
rol
push
rol
loope
call
inc
push
adc
int
jmp
xchg
sub
jmp
mov
xchg
rol
int
sub
test
inc
mov
push
imul
push
push
adc
fwait
bound
push
shr
jns
test
inc
mov
loope
call
(bad)
imul
xlat
xchg
sub
enter
inc
push
sub
mov
stos
dec
shr
sub
lods
rcl
(bad)
loope
ins
(bad)
xchg
rcr
(bad)
cmp
jmp
test
sub
mov
fstp
xchg
scas
clc
cmp
retf
lods
sub
int
test
jle
adc
jle
movs
push
aad
pop
inc
sub
mul
xchg
movs
xlat
stos
adc
dec
adc
lods
xchg
shr
sub
test
inc
inc
sbb
push
sub
test
inc
mov
push
imul
aas
imul
xlat
xchg
sub
lods
popa
sub
je
xchg
rol
shl
mov
xchg
jl
adc
rcr
jmp
iret
sub
jb
aad
jmp
xchg
and
lods
movs
sub
sub
xchg
jl
xchg
rcl
in
in
adc
push
shr
jns
cdq
jl
xchg
sar
push
fwait
shr
stos
lods
and
out
das
movs
test
test
mov
sub
test
sub
fwait
sub
shr
sub
sub
sub
pushf
rcl
(bad)
in
jmp
inc
xor
test
inc
ror
sub
call
jmp
xchg
scas
(bad)
sub
mov
xchg
lods
push
fnsave
xchg
mov
jmp
jecxz
in
(bad)
xchg
rcr
xlat
xchg
jl
mov
sub
stos
lods
and
in
jmp
inc
xor
push
sub
test
inc
shl
add
fwait
push
push
sub
test
sub
lahf
lods
call
cmps
and
ds
icebp
lahf
iret
popf
lods
xor
jmp
shr
(bad)
jecxz
mov
xchg
shr
(bad)
scas
sbb
xchg
rcr
(bad)
cmp
lahf
lods
hlt
shr
(bad)
cmp
jmp
test
jmp
shr
(bad)
scas
cli
aad
rcl
(bad)
push
shr
xlat
xchg
sub
or
sub
fimul
shr
mov
xchg
shr
jns
sbb
jg
scas
test
sub
lahf
lods
mov
cmps
and
ds
xchg
mov
pop
sbb
xchg
jl
sbb
hlt
jmp
xchg
jl
sbb
lock
xchg
jl
sbb
sbb
xchg
leave
xchg
shr
jns
sbb
jg
lds
ficom
in
jl
leave
jle
add
mov
sub
mov
adc
cmp
or
sub
sub
rol
ds
dec
sub
int
sbb
xchg
adc
sub
sub
ins
mov
xor
push
sub
and
sub
stos
lods
sub
pop
sahf
shr
stos
push
lods
mov
test
(bad)
cmp
sub
sub
ins
mov
lahf
dec
sub
cmc
jb
in
sub
push
enter
jmp
imul
jbe
ja
mov
push
in
sub
cmp
jle
push
inc
mov
sub
lods
mov
inc
push
sub
sub
sub
inc
or
jnp
into
or
jbe
out
inc
mov
cmp
je
xchg
push
fldcw
popf
out
xchg
sub
sub
mov
cwde
sub
xor
imul
sub
or
sub
stos
dec
and
imul
push
sub
sub
sub
sub
popf
loope
cmps
adc
sub
adc
ins
adc
test
cwde
push
push
adc
xchg
sub
sub
sub
jmp
in
mov
sbb
imul
imul
outs
adc
test
sub
popa
jmp
adc
imul
push
push
mov
sub
ficom
sub
loop
sub
sbb
imul
jmp
xchg
sub
sub
ins
pushf
movs
rol
ins
cs
xchg
sub
sub
(bad)
ins
pop
mov
xor
ins
adc
sbb
and
sub
loop
outs
sub
test
push
ins
adc
js
push
sub
ficom
xor
ins
adc
sbb
and
sub
loop
js
adc
gs
push
xchg
shr
fild
mov
and
cs
in
std
enter
test
dec
ja
push
ins
adc
enter
push
sub
retf
jmp
ins
xor
push
pop
in
std
pushf
push
adc
cwde
add
sbb
imul
sub
sub
sub
std
sahf
xchg
shr
fild
mov
cs
cs
in
std
mov
xchg
sub
sbb
imul
sub
sub
sub
std
mov
ins
pop
mov
adc
ins
adc
cwde
sub
sbb
imul
imul
sub
sub
mov
sub
xor
push
fcomp
mov
sub
ror
mov
scas
aam
imul
std
out
sub
mov
sbb
sub
mov
sub
sub
(bad)
ins
pop
mov
adc
ins
adc
xor
shr
push
sub
sbb
sub
and
mov
sub
shl
sub
mov
retf
imul
sub
mov
popa
in
push
push
outs
shl
lods
clc
xchg
push
sub
adc
push
sub
sub
push
jmp
in
in
mov
xor
ins
adc
sbb
sub
cwde
push
sub
ins
adc
ins
adc
push
ins
adc
push
cwde
movs
shr
push
in
std
js
sub
test
test
rcl
pop
fsubr
fild
mov
ins
sbb
loope
push
mov
sub
out
addr16
test
adc
loopne
out
fisubr
mov
sub
leave
outs
movs
push
shl
push
rcl
adc
push
sub
test
outs
rcl
and
ins
adc
xchg
push
sub
mov
sub
popa
and
push
adc
clc
ins
adc
push
push
popa
cmp
push
out
sub
sub
jmp
sbb
sub
ret
imul
gs
push
imul
push
mov
sub
lahf
ins
enter
scas
hlt
cs
out
test
lods
imul
ins
and
imul
popf
out
jmp
sbb
jo
fsubr
cmp
mov
loopne
add
icebp
ins
adc
ins
and
sub
sub
not
sub
or
mov
jo
fsubr
cmp
mov
loopne
add
ins
and
sub
sub
imul
sub
cwde
push
sub
in
icebp
retf
sub
ss
jmp
inc
xchg
daa
pop
jmp
shl
push
sub
repnz
xchg
sub
sub
and
outs
adc
push
jae
sub
jmp
cmp
outs
adc
sub
mov
sub
add
outs
adc
sbb
push
sub
push
sub
fimul
jmp
cmp
push
sub
(bad)
sub
push
sub
ja
outs
adc
sbb
sub
dec
mov
sub
ja
out
inc
mov
cmp
xchg
mov
adc
hlt
adc
sub
cwde
push
sub
test
imul
cmp
outs
adc
sub
sub
icebp
imul
clc
sub
imul
push
sub
stos
or
rcl
ins
pop
mov
stc
push
movs
xlat
stos
or
hlt
adc
ins
mov
adc
push
sub
retf
mov
shr
mov
sbb
push
sub
sub
xchg
add
lahf
iret
popf
ins
cld
movs
xlat
out
sub
sub
dec
shr
push
aam
popa
stc
shr
adc
push
les
sub
sub
imul
mov
sub
icebp
pop
hlt
popf
jmp
cdq
ins
int3
jl
sub
sub
sub
mov
mov
sub
ins
enter
int3
mov
adc
sub
sub
sub
inc
adc
ins
inc
adc
sbb
sub
xchg
mov
iret
popf
ins
clc
movs
xlat
(bad)
sbb
sub
(bad)
ins
pop
mov
sar
popa
cdq
in
lock
cmp
mov
sub
ins
mov
adc
push
out
inc
mov
scas
imul
mov
mov
lock
xchg
cmps
push
and
and
scas
jno
push
rcr
push
aam
movs
sub
aam
sub
imul
pop
pusha
rol
sbb
ins
adc
sub
inc
call
loopne
jns
int3
cmp
or
mov
scas
rcl
pop
fsubr
(bad)
sbb
cmp
sub
into
adc
fimul
jmp
loopne
jns
int3
jmp
sbb
jnp
pop
pusha
cmps
dec
and
sub
pop
push
rcl
push
push
adc
push
push
adc
push
push
adc
push
push
adc
push
sub
mov
imul
cmp
scas
imul
(bad)
addr16
addr16
jmp
sub
(bad)
pop
fidivr
add
stos
and
mov
addr16
loope
xchg
ret
imul
cmp
push
movs
in
stos
sub
lahf
ins
sub
shr
pop
and
es
adc
outs
adc
xor
push
inc
(bad)
cmp
aam
adc
cmp
dec
jne
sub
ins
nop
scas
(bad)
jecxz
add
cmp
adc
xchg
scas
(bad)
sub
nop
scas
cld
sub
sub
sub
mov
ins
sub
xor
fisubr
inc
test
xchg
adc
push
imul
(bad)
xchg
rcl
pop
fsubr
test
cmp
in
popa
call
addr16
shr
les
test
sub
xchg
adc
loope
xchg
shr
outs
adc
adc
and
aam
shr
das
dec
pop
add
in
sub
jmp
adc
jge
adc
push
pop
jno
nop
fs
adc
loope
xchg
shr
das
push
inc
mov
call
push
shr
les
fisubr
adc
sub
sub
sub
push
scas
(bad)
jecxz
add
cmp
adc
xchg
scas
(bad)
sub
jmp
adc
js
push
sub
in
stos
sub
jl
movs
add
sub
sub
adc
sub
lods
sub
imul
sub
adc
sub
les
test
pop
movs
in
stos
sub
lahf
ins
sub
adc
and
xlat
push
adc
sub
popa
xor
cmps
inc
cmp
js
sub
(bad)
xchg
ret
ins
movs
adc
sub
sub
lods
jmp
ins
sub
es
jb
out
inc
mov
cmp
(bad)
ins
pop
mov
and
sub
das
lods
jmp
imul
cdq
lods
jmp
imul
jp
lahf
ins
fs
sub
sub
shr
stos
scas
es
sbb
push
sub
inc
cmp
cmp
sub
icebp
cmp
nop
fist
pop
mov
sub
push
lds
push
rcl
movs
int3
sub
movs
add
xchg
imul
sub
call
mov
jbe
push
imul
cmp
repz
push
aaa
imul
push
sub
xlat
adc
scas
(bad)
loope
adc
shr
adc
mov
pop
lds
jl
movs
add
ins
pop
mov
(bad)
inc
aam
jge
sub
mov
and
sbb
push
and
nop
push
sub
scas
shl
stos
jns
int3
shl
sub
fdiv
sub
jg
(bad)
retf
rcl
lods
mov
jmp
push
sub
sub
xchg
pop
outs
jmp
scas
test
adc
ins
pop
mov
xchg
mov
jmp
push
test
xchg
adc
push
xchg
div
xchg
rcl
fwait
ret
jmp
call
outs
adc
sbb
call
std
test
(bad)
xchg
inc
fisub
in
sbb
aam
adc
add
xor
sub
lahf
std
(bad)
(bad)
xchg
inc
fidiv
in
sbb
shr
js
into
push
mov
xchg
shl
cmp
mov
sub
cmps
or
sub
lods
fwait
ret
jmp
imul
jmp
add
or
sub
es
popa
jmp
xchg
jmp
addr16
mov
xchg
adc
push
sub
addr16
mov
lahf
cmp
push
shr
(bad)
ins
pop
mov
retf
jmp
addr16
sub
cld
push
xchg
shr
mov
xchg
rcl
pop
fsubr
mov
xchg
movs
(bad)
call
jle
int3
sub
sub
sub
test
and
sub
adc
add
stos
sahf
sub
mov
(bad)
das
lods
xlat
sub
adc
cmc
fdivr
(bad)
xchg
pop
ret
movs
in
test
(bad)
xchg
jl
jbe
sub
(bad)
ins
pop
mov
lds
mov
jmp
push
ret
jmp
xchg
cdq
int3
not
shr
stos
lods
and
pop
or
jmp
jecxz
xchg
not
rcr
call
xchg
cmps
and
fcom
popa
and
lods
jmp
ins
sub
pop
mov
jmp
imul
movs
int3
sub
cmp
sub
test
jmp
out
adc
push
fcom
push
call
xchg
ror
in
sar
xchg
sub
sub
xchg
movs
mov
jmp
xchg
rcl
push
test
sbb
xchg
sub
sub
pushf
mov
jmp
adc
sub
sbb
xchg
in
imul
jecxz
add
stc
ins
adc
std
fdivr
(bad)
xchg
scas
mov
xchg
jmp
jecxz
loopne
xchg
rcl
retf
push
int
sub
pop
aad
and
not
ret
jmp
test
in
std
sub
rcl
(bad)
in
fdivr
(bad)
xchg
lods
test
sub
pop
(bad)
adc
outs
adc
aad
retf
(bad)
xchg
sub
jb
jb
imul
jg
sub
lods
enter
loope
pop
cmp
push
shr
stos
stos
push
pop
sub
test
lahf
lods
enter
jecxz
mov
xchg
rcl
mov
xchg
cmps
xchg
mov
mov
push
mov
xchg
movs
xchg
test
clc
retf
(bad)
xchg
movs
xchg
cmc
mov
jmp
je
xchg
xchg
mov
jmp
xchg
cdq
enter
cld
dec
aas
sub
mov
xchg
adc
jmp
sub
jmp
in
cwde
retf
(bad)
xchg
sub
jmp
aad
retf
(bad)
xchg
sub
jmp
adc
std
cwde
retf
(bad)
xchg
in
(bad)
and
mov
jmp
and
inc
gs
sub
sar
mov
sub
sub
lahf
std
(bad)
(bad)
xchg
in
imul
jecxz
enter
aas
movs
mov
and
sbb
ins
adc
fidivr
aad
push
add
mov
loopne
xchg
sar
sub
jnp
adc
push
shr
and
sub
test
in
push
adc
fld
sub
shr
pop
lods
imul
imul
sub
test
lahf
cmp
push
push
lock
bnd
push
shr
sub
cdq
lock
lods
sub
sbb
les
test
loope
xchg
shr
sub
les
test
loope
xchg
shr
sub
adc
outs
adc
fidivr
aad
push
mov
(bad)
call
rcl
shr
pop
jle
adc
sub
sub
(bad)
jmp
sub
adc
xchg
(bad)
xchg
mov
in
fdivr
(bad)
xchg
sub
add
mov
jmp
sbb
xchg
test
bnd
imul
jmp
test
cmp
cs
sub
sub
cmp
push
adc
sub
adc
jbe
sub
sub
sub
add
push
lods
sub
pop
pop
outs
and
lahf
in
(bad)
and
imul
fisubr
inc
(bad)
(bad)
retf
(bad)
xchg
shl
rcr
jmp
jmp
sbb
xchg
sub
imul
loopne
xchg
rcl
std
fdivr
(bad)
xchg
in
imul
loope
aad
push
cmc
sub
call
not
rcl
test
fdivr
(bad)
xchg
sub
sub
(bad)
(bad)
ins
pop
mov
aad
rcl
imul
jmp
add
or
sub
es
add
(bad)
xchg
jae
jb
out
inc
mov
cmp
mov
nop
shl
enter
sar
adc
scas
imul
movs
pop
pop
test
sub
out
jecxz
in
mov
mov
imul
push
mov
and
sub
sub
mov
adc
outs
sub
sub
xor
sub
das
dec
sbb
rcl
jmp
out
popf
jl
jmp
imul
jl
push
push
cmp
pop
adc
bound
xlat
jns
lock
sub
sub
sub
das
sbb
jge
sbb
imul
test
fisubr
adc
sub
sub
sub
adc
nop
ins
popa
sub
addr16
outs
scas
out
sub
ins
pop
sbb
sub
addr16
sbb
scas
in
sub
sub
nop
movs
(bad)
add
call
push
sub
sub
addr16
sbb
adc
sub
call
push
jmp
(bad)
xchg
rcl
ins
xchg
sub
aas
loop
sbb
jge
popa
das
call
es
ins
xchg
sub
data16
inc
in
sub
sub
ins
lods
push
(bad)
imul
dec
jb
out
inc
mov
jecxz
sbb
fdivr
push
cmp
jl
push
sub
cmp
mov
sub
mov
push
adc
outs
jmp
daa
scas
jmp
pop
rcr
aaa
jb
je
jns
int3
shr
xor
push
sub
jle
xchg
jp
inc
movs
in
fimul
shr
mov
scas
mov
popa
and
test
inc
sar
sub
test
inc
shl
sub
call
in
mov
ss
jl
leave
inc
xchg
(bad)
xor
pop
jmp
sub
sub
sub
pop
pusha
inc
adc
idiv
sub
jno
jl
leave
xchg
lds
jle
test
jg
jecxz
imul
sub
jle
add
sub
sub
sub
shl
xor
sub
shr
jmp
sbb
sbb
lahf
ins
fs
xor
loope
jecxz
loope
loopne
scas
sbb
adc
sub
sub
xlat
stos
test
inc
inc
sub
sar
sub
ins
xchg
lods
sti
mov
adc
push
pop
sbb
sub
(bad)
adc
shl
cmp
popa
aad
(bad)
fdivr
sub
rol
call
add
ja
jmp
inc
xchg
pop
add
add
aam
shl
jmp
sub
lods
adc
push
inc
adc
push
pop
sbb
adc
sub
jmp
jmp
jmp
ins
sbb
push
inc
push
lods
inc
sub
push
and
xchg
ins
xchg
adc
loope
jle
in
call
and
push
imul
(bad)
xchg
inc
sub
jecxz
inc
sub
jg
jge
sub
adc
ja
in
jl
leave
xchg
lds
xchg
(bad)
mov
ror
push
sub
repz
add
test
ins
inc
adc
push
in
jmp
pusha
(bad)
hlt
jns
sub
out
loope
jecxz
loope
loopne
scas
scas
jmp
add
add
sub
(bad)
lock
sub
sub
imul
(bad)
sbb
jge
sub
aam
shl
jmp
sar
push
jbe
in
jl
leave
inc
jp
jnp
pop
pusha
jmp
aad
dec
sahf
push
dec
sub
sbb
and
outs
push
push
sbb
jg
pop
fs
push
leave
sub
push
cmp
test
sar
adc
jg
sub
call
pop
fisubr
or
sbb
imul
jp
sub
in
pusha
outs
das
je
push
cld
sbb
adc
ins
jmp
fs
in
add
imul
jp
sub
in
pusha
cmps
push
aad
out
adc
jbe
ja
jmp
inc
mov
fs
aad
cmp
push
jmp
sub
inc
push
int3
push
sub
jne
(bad)
cmp
lahf
ins
pop
inc
inc
pop
int3
push
sub
scas
shl
das
adc
xor
sub
out
sub
jo
imul
mov
xor
xlat
jl
leave
xchg
lds
jle
lods
pop
adc
int3
sub
imul
lds
jno
push
mov
(bad)
xchg
sub
fcmove
xchg
mov
sub
retf
enter
imul
scas
imul
and
push
sub
imul
dec
push
imul
ins
xchg
and
jmp
call
sub
ret
adc
call
push
jmp
sbb
and
xlat
or
ret
adc
addr16
cdq
scas
aam
imul
pop
ins
scas
jns
push
jns
imul
mov
jecxz
sbb
fild
jl
and
jmp
addr16
inc
retf
addr16
sub
hlt
popf
jmp
push
lds
pop
retf
lahf
int
ins
mov
imul
mov
cmp
cmp
retf
addr16
sub
and
and
inc
and
adc
int
sub
jmp
test
push
xchg
nop
cmps
sub
nop
adc
add
aam
clc
mov
test
clc
mov
test
clc
mov
test
clc
mov
test
clc
mov
push
sub
xchg
(bad)
enter
nop
das
and
imul
aam
clc
mov
test
clc
mov
test
clc
mov
test
clc
mov
add
mov
pinsrw
sub
mov
ins
push
sub
mov
adc
jecxz
test
ins
mov
sbb
clc
mov
test
clc
mov
test
clc
mov
test
clc
mov
test
clc
mov
jmp
sub
mov
add
push
sub
and
imul
test
clc
inc
adc
clc
mov
in
sub
mov
test
sub
mov
clc
add
test
mov
jl
mov
mov
fninit
mov
clc
mov
test
adc
add
and
clc
mov
test
clc
mov
push
sub
scas
in
sub
mov
test
sub
mov
clc
add
test
mov
jl
mov
mov
fninit
mov
clc
mov
test
das
and
imul
and
clc
mov
test
clc
mov
test
jns
jmp
stos
jns
int3
jmp
or
ds
je
cmps
push
and
scas
imul
mov
imul
loop
scas
imul
sub
popf
icebp
imul
jmp
xor
xchg
push
xchg
sub
das
scas
imul
jp
sub
mov
pop
sub
xchg
outs
sub
sub
inc
shl
aad
clc
icebp
fucomi
mov
icebp
fucomi
mov
shl
push
sub
jno
loope
cld
mov
jbe
fs
jl
imul
int3
sub
and
mov
jbe
imul
push
hlt
adc
cmp
pop
rol
pushf
cmp
imul
inc
pusha
inc
test
push
jl
xchg
sub
fisubr
jns
hlt
adc
(bad)
inc
shr
inc
shl
adc
add
cdq
ins
call
rcl
adc
jmp
xor
xchg
sbb
push
and
out
scas
or
xchg
ror
xor
xlat
jl
leave
xchg
lds
jle
in
add
jae
xlat
sahf
inc
sub
rol
adc
shl
adc
test
popf
call
test
xor
mov
jmp
rcl
sbb
adc
in
hlt
jns
pop
sbb
rcl
jmp
jmp
sbb
scas
and
push
sub
mov
sub
cmp
test
outs
adc
jl
mov
(bad)
daa
movs
imul
xchg
repz
outs
adc
lahf
das
sub
aad
adc
sub
sub
sbb
movs
in
ins
call
push
sar
lods
fs
(bad)
fcom
mov
sub
in
sub
xchg
push
sub
xchg
ins
xchg
sub
sub
test
aad
cmc
mov
aad
adc
sub
rol
push
lock
jmp
add
aad
adc
js
push
shr
xchg
sub
sub
xchg
push
sub
in
pop
mov
sub
ins
mov
jo
push
and
sahf
mov
sti
popf
adc
xchg
push
sub
(bad)
or
push
sub
mov
and
hlt
sbb
(bad)
aad
js
ret
mov
push
xchg
push
sub
fcom
sub
xchg
push
sub
(bad)
hlt
gs
(bad)
fcom
mov
sub
in
sub
xchg
push
sub
xchg
ins
pushf
sub
sub
test
fstp
cmc
mov
aad
adc
sub
fcom
ins
cwde
cmps
add
aad
adc
js
push
fldcw
xchg
sub
sub
xchg
push
sub
in
mov
jecxz
push
call
mov
mov
sub
and
xchg
push
sub
and
mov
aad
adc
fidivr
clc
mov
push
sub
and
xchg
sub
or
adc
scas
jns
jo
mov
fldcw
rcl
shr
(bad)
jmp
sbb
push
inc
adc
push
ins
jmp
pusha
les
push
lods
out
jg
adc
push
shl
shl
adc
push
xor
cld
out
and
sbb
sub
sub
mul
aaa
jb
loopne
jns
int3
jmp
sub
jg
xchg
retf
pop
lods
xchg
adc
fimul
shr
mov
fsubr
sub
movs
jne
retf
imul
sbb
addr16
sar
pop
dec
js
popf
call
outs
in
in
ss
out
stc
xor
popf
shl
mov
shr
inc
cmp
push
xchg
xchg
(bad)
or
call
ja
fisub
jmp
jne
cld
adc
xlat
xchg
rcl
xchg
adc
mov
shr
sub
movs
(bad)
fild
test
daa
out
in
sub
(bad)
xchg
push
xchg
fbstp
adc
in
jmp
xchg
rol
lea
add
retf
imul
rcl
sbb
push
inc
push
inc
push
sub
imul
rol
imul
test
jmp
pusha
xchg
pushf
jecxz
sub
shr
sub
sub
lods
cwde
shr
(bad)
cmp
push
outs
adc
fstp
jmp
popa
push
fcomp
aam
sar
jmp
mov
hlt
mov
adc
in
shr
(bad)
xchg
jl
xchg
and
movs
in
xlat
jmp
cmc
mov
adc
in
shr
(bad)
xchg
jl
sub
xchg
sar
adc
shr
repnz
xchg
movs
rcl
ins
pop
mov
imul
sub
in
outs
adc
in
shr
(bad)
xchg
jl
sub
xchg
ror
sub
inc
js
sub
push
mov
adc
push
adc
and
sub
sar
fimul
push
in
jl
leave
xchg
lds
jle
pop
add
loope
cmp
sub
cwde
push
sub
aam
into
loope
loopne
scas
scas
jno
push
mov
adc
push
sub
sub
sub
sub
sub
pop
shl
or
stos
mov
sub
push
rcl
sub
add
sbb
sub
test
adc
aad
rcr
jae
jb
out
inc
mov
inc
dec
inc
test
cmp
popa
cmp
push
pop
add
sbb
shl
sbb
sub
shl
aaa
jno
jl
leave
inc
jle
retf
sub
inc
movs
in
fimul
jmp
sub
jl
jmp
js
popa
and
outs
sub
sub
call
inc
mov
xlat
xchg
inc
(bad)
and
shl
rol
inc
adc
push
jle
add
sub
and
jb
sub
and
(bad)
and
sbb
shl
add
pop
js
popa
aad
inc
pop
sub
aam
shl
adc
sub
aam
jns
in
add
sar
add
sub
sbb
jns
int3
jmp
add
aas
cmps
popa
cmp
loope
or
shl
psubsw
dec
outs
push
movs
in
sbb
rol
sub
sub
sub
pop
shl
sbb
sub
aam
ins
sbb
push
xor
jp
sub
sub
pop
js
popa
aad
leave
push
sub
aam
shl
sub
sub
aam
jb
popa
aad
cdq
push
sub
mov
xchg
test
adc
lahf
retf
popf
ins
cwde
movs
shl
in
jl
leave
inc
jns
jnp
(bad)
push
dec
or
scas
push
sub
sub
mov
paddb
sub
adc
or
shl
aam
shl
jmp
aad
outs
adc
sub
in
push
ret
adc
scas
sub
sub
sub
sub
sub
dec
mov
adc
xor
sub
rol
imul
cmp
sub
and
mov
imul
outs
push
(bad)
adc
push
xchg
inc
pop
icebp
ds
loope
in
call
in
jne
sub
mov
aas
cmps
popa
and
jno
out
sub
sbb
add
repz
adc
and
add
mov
xchg
pop
add
xor
sub
call
int3
mov
push
popf
shr
in
push
ret
push
aad
cmp
das
lods
sub
push
pop
xor
pop
jae
in
popa
call
ds
ins
js
adc
jmp
sub
mov
loope
adc
ins
push
imul
and
sub
add
push
outs
adc
jecxz
call
mov
imul
dec
ja
in
jl
leave
xchg
lds
jle
jno
out
sub
sub
sub
cld
jp
sub
mov
mov
jnp
imul
(bad)
aas
addr16
test
push
fisubr
daa
stos
cwde
pop
pushf
sub
nop
pop
icebp
test
fdiv
sub
sbb
push
pop
popf
rcl
ss
push
cli
xchg
out
or
rcl
ss
push
(bad)
retf
test
rcr
jecxz
loopne
add
imul
push
cs
stos
lods
cmp
sub
shr
ins
nop
pop
mov
ja
in
jl
leave
lods
popa
push
ins
adc
cmp
xchg
and
call
stos
int
jmp
xchg
sub
mov
xchg
rcl
pop
sbb
repz
(bad)
jmp
sbb
stos
movs
in
cwde
movs
shl
mov
adc
test
cmp
push
shr
(bad)
push
test
push
daa
adc
xchg
pop
add
outs
adc
loope
int3
(bad)
xchg
shr
int
jmp
xchg
movs
xchg
std
xchg
shr
mov
xchg
inc
test
sbb
mov
cdq
xchg
push
sub
sub
jle
cmp
push
shr
test
cmps
popa
sub
popa
and
sub
push
inc
fcomp
mov
xchg
movs
aad
mov
sub
rol
cmps
cmp
xchg
jle
inc
movs
shr
stos
lods
and
jl
outs
adc
sbb
sub
stos
lods
and
addr16
adc
fst
jmp
xchg
les
sub
in
pusha
les
push
sub
mov
aad
shr
pop
inc
cwde
int3
push
sub
sar
jle
sub
stos
lods
and
fstp
popf
out
and
sub
push
sub
(bad)
ficom
paddb
sub
adc
or
sub
fucomi
jnp
xchg
call
inc
push
repz
sub
(bad)
in
ins
push
(bad)
int3
ins
push
sub
mov
aad
shr
pop
inc
cwde
int3
push
sub
sar
fisubr
adc
lods
and
push
mov
adc
fst
jmp
xchg
(bad)
lock
push
les
push
aad
shr
pop
inc
cwde
int3
push
sub
sar
xchg
sub
adc
lods
and
push
sub
adc
bound
sub
fucomi
stos
xchg
sub
add
push
sub
ficom
shr
(bad)
aas
inc
sub
sub
ror
adc
jmp
add
sbb
outs
adc
in
shr
xlat
xchg
jl
or
gs
sub
sar
push
sub
nop
bound
sub
fucomi
stos
xchg
sub
add
hlt
imul
aad
shr
shr
adc
jmp
sbb
(bad)
cdq
call
push
sub
adc
lods
and
ret
adc
bound
sub
fucomi
stos
xchg
sub
add
hlt
imul
aad
shr
shl
sub
call
push
sub
sar
fisubr
sub
stos
lods
and
call
adc
icebp
fucomi
stos
xchg
sub
or
sub
(bad)
ficom
shr
(bad)
aas
inc
sub
sub
shl
adc
jmp
add
sbb
retf
movs
shr
(bad)
loope
cld
inc
sub
nop
sub
sub
fucomi
jnp
ror
imul
not
inc
push
sub
xchg
not
pop
add
in
shr
xlat
xchg
jl
stc
mov
adc
cmp
push
sbb
push
sub
(bad)
ficom
paddb
sub
nop
or
sub
fucomi
jnp
xchg
call
inc
push
repz
sub
les
push
sub
in
js
in
mov
jmp
scas
(bad)
in
push
sub
mov
aad
shr
pop
inc
cwde
int3
push
sub
sar
sub
stos
lods
and
loop
sub
nop
bound
sub
fucomi
stos
xchg
sub
add
retf
shl
rol
sbb
into
outs
adc
shl
adc
push
(bad)
adc
in
sub
pushf
xchg
shr
(bad)
sub
sub
shl
loope
and
mov
sbb
shr
(bad)
cmp
sub
rcl
adc
jmp
add
outs
adc
shl
adc
push
(bad)
adc
fcomip
sub
pushf
xchg
shr
(bad)
adc
push
adc
push
sub
(bad)
ficom
aas
jl
mov
(bad)
fst
jmp
xchg
les
sub
in
pusha
les
imul
and
adc
lahf
aad
shr
aaa
shr
sub
dec
adc
push
cmps
test
jle
adc
imul
(bad)
sub
stos
lods
cmp
push
dec
sub
lods
in
sub
rcl
xchg
rcl
daa
sub
adc
xchg
rcl
xchg
sub
mov
xchg
shr
sub
shr
(bad)
imul
lods
nop
shr
(bad)
sbb
xchg
lods
shr
(bad)
imul
lahf
push
pop
popf
rcl
ss
push
out
jne
loope
lods
xor
adc
daa
rcl
lahf
into
aad
imul
mov
aas
mov
jmp
add
imul
sub
jmp
add
push
add
sub
repnz
xchg
movs
rcl
in
in
jmp
xchg
lods
test
test
jmp
fst
xor
lods
push
cmps
xchg
aad
shr
jns
dec
retf
jl
sub
stos
lods
xor
(bad)
sub
nop
bound
sub
fucomi
stos
xchg
sub
add
imul
aad
shr
shl
sub
call
adc
shl
adc
push
(bad)
adc
fcomip
sub
pushf
xchg
shr
(bad)
adc
sub
shl
loope
and
xchg
sub
nop
bound
sub
fucomi
stos
xchg
sub
add
hlt
imul
aad
shr
shl
sbb
in
call
adc
push
shr
mov
xchg
adc
jmp
jmp
lds
fcomi
mov
xchg
movs
rol
adc
or
xchg
lds
push
sub
(bad)
push
sub
mov
scas
cmps
push
xor
push
shr
es
adc
rcl
shr
xchg
shl
add
imul
fst
xor
shl
xchg
rcl
adc
loope
jb
aad
jmp
xchg
movs
in
cwde
movs
shl
jl
sahf
in
jmp
pushf
shr
(bad)
cmp
xor
push
shr
(bad)
cmp
movs
rcl
movs
xchg
fst
fsubr
xlat
xchg
shl
xchg
cdq
in
xchg
rcr
(bad)
cmp
sub
ror
adc
jmp
or
out
adc
shl
adc
push
(bad)
adc
dec
imul
sub
pushf
xchg
shr
(bad)
or
and
fcom
jb
sub
nop
bound
sub
fucomi
stos
xchg
sub
add
retf
shl
rcl
adc
jmp
sbb
pop
adc
shl
adc
push
(bad)
adc
in
sub
pushf
xchg
shr
(bad)
cmp
push
cdq
in
xchg
sar
jmp
add
push
shr
movs
in
sub
(bad)
xchg
jl
pushf
nop
shr
(bad)
cmp
cmp
xchg
rcl
rcl
and
inc
push
repnz
sub
sar
cs
sub
stos
lods
and
jmp
adc
icebp
fucomi
stos
xchg
sub
add
imul
aad
shr
ror
sbb
not
adc
shl
adc
push
(bad)
adc
fcomip
sub
pushf
xchg
shr
(bad)
adc
and
fsub
iret
loope
rcl
xchg
rcr
sub
push
sub
(bad)
ficom
aas
jl
mov
(bad)
fst
jmp
xchg
les
in
pusha
inc
imul
sub
pushf
xchg
shr
(bad)
adc
push
sbb
sub
push
sub
(bad)
ficom
paddb
push
sub
nop
or
sub
fucomi
jnp
xchg
call
inc
push
repz
sub
les
push
les
push
sub
mov
aad
shr
pop
inc
xor
cdq
call
ss
sub
stos
lods
and
fbstp
adc
cmp
sub
push
sub
(bad)
ficom
aas
jl
mov
adc
fst
jmp
xchg
(bad)
loopne
push
les
push
aad
shr
pop
inc
cwde
int3
push
sub
sar
out
sub
stos
lods
and
mov
bound
sub
fucomi
stos
xchg
sub
adc
push
sub
ficom
shr
(bad)
aas
inc
sub
sub
rcr
adc
jmp
add
inc
repnz
sub
sar
scas
push
sub
stos
lods
and
fld
popf
out
adc
sub
push
sub
(bad)
ficom
aas
jl
mov
(bad)
fst
jmp
xchg
les
push
inc
or
sub
pushf
xchg
shr
(bad)
and
push
sub
sub
push
sub
(bad)
ficom
aas
jl
mov
(bad)
fst
jmp
xchg
les
adc
sub
in
pusha
inc
push
imul
sub
pushf
xchg
shr
(bad)
cmp
and
ficom
aas
push
sub
nop
bound
sub
fucomi
stos
xchg
sub
add
hlt
imul
aad
shr
ror
sbb
in
bnd
xchg
jl
lods
xchg
shr
(bad)
cmp
sub
ror
adc
jmp
add
out
adc
shl
adc
push
(bad)
adc
in
sub
pushf
xchg
shr
(bad)
or
and
sub
imul
aad
shr
sar
adc
jmp
sbb
adc
shl
adc
push
(bad)
adc
in
sub
pushf
xchg
shr
(bad)
add
push
pop
outs
sub
repnz
xchg
movs
rol
jb
adc
rol
pop
sub
jecxz
loope
xchg
out
js
adc
aas
cmps
test
jle
(bad)
leave
imul
es
sub
stos
lods
cmp
(bad)
push
sub
nop
bound
sub
fucomi
stos
xchg
sub
add
hlt
imul
aad
shr
shl
sub
call
push
sub
sar
rcl
adc
lods
and
sahf
push
sub
nop
bound
sub
fucomi
stos
xchg
sub
add
hlt
imul
aad
shr
sar
sbb
sahf
pop
push
sub
cwde
adc
lods
and
adc
lahf
aad
shr
aaa
rcl
adc
ror
sub
jecxz
cmp
jmp
add
retf
imul
pop
push
sub
stos
lods
cmp
stc
mov
adc
fst
jmp
xchg
les
pusha
inc
adc
push
inc
adc
push
pop
sbb
push
adc
loope
cld
(bad)
xchg
rcl
sub
sar
scas
push
sub
inc
push
shr
jle
shl
(bad)
ffree
jmp
xchg
les
sub
pushf
adc
(bad)
adc
sub
mov
ror
adc
loope
adc
sar
adc
jecxz
clc
(bad)
xchg
ror
xor
xlat
jl
leave
xchg
lds
adc
aas
xchg
pop
sub
popf
rcr
shr
(bad)
loope
shr
call
addr16
sub
lods
xchg
shr
(bad)
cmp
mov
rcr
popf
out
add
scas
mov
adc
in
shr
(bad)
xchg
jl
sub
xchg
rcr
or
sub
xchg
jle
add
imul
hlt
sub
sub
xchg
sar
enter
into
cmc
sub
ret
adc
imul
and
or
ret
dec
popa
push
jns
int3
jmp
sub
jg
xchg
mov
rcr
popf
out
jmp
mov
xchg
rcl
sub
and
mov
xchg
cmps
push
and
sub
sub
adc
in
mov
in
add
cmps
push
and
jmp
pop
sub
mov
push
push
mov
xchg
jp
push
pop
sub
mov
xchg
shl
ror
sub
jns
mov
xchg
mov
inc
sub
popf
mov
loope
adc
shr
sub
test
jmp
enter
sbb
sub
xchg
pop
xchg
shr
(bad)
fnsave
pop
push
cmps
cdq
push
xchg
shr
movs
cmp
adc
xchg
mov
inc
sub
popf
mov
jmp
sub
sub
sbb
loope
adc
rcl
sub
cmp
sub
test
inc
shr
sub
jl
push
push
sub
inc
ins
sub
mov
inc
(bad)
lock
sub
cwde
enter
push
sub
cld
aas
cwde
shr
stos
lods
or
ror
adc
pop
in
std
ja
sub
shl
(bad)
add
adc
aad
shr
jns
test
inc
ror
adc
xchg
cdq
adc
shr
pushf
clc
shr
(bad)
xchg
cdq
cwde
aam
shr
pushf
loopne
jmp
xchg
cdq
mov
xchg
shr
pushf
enter
mov
jmp
and
xchg
scas
ror
loope
mov
xchg
rcr
rcl
sub
std
fild
adc
enter
in
call
rol
adc
loope
cmp
lods
(bad)
jmp
cmp
jmp
cmp
(bad)
xchg
rcr
(bad)
add
sub
test
inc
sar
sub
call
in
mov
xchg
shr
ins
push
enter
sub
shr
sub
xchg
in
shr
(bad)
push
test
adc
push
rcl
jmp
cmp
pop
fst
mov
(bad)
xchg
jl
lods
rcl
jmp
cmp
inc
push
inc
adc
push
shr
jns
sub
ficomp
and
sub
(bad)
fld
sbb
popf
rol
popf
out
xchg
cdq
adc
sar
outs
adc
adc
test
inc
rol
adc
jmp
add
in
pop
jmp
pop
jmp
sub
lods
xchg
shr
(bad)
cmp
sub
or
adc
stos
and
cld
sub
cld
inc
pop
sub
test
xchg
sub
jmp
push
sub
popa
mul
add
sub
pop
sbb
clc
shr
(bad)
push
fcom
adc
sub
cdq
lods
xchg
shr
(bad)
cmp
sahf
pop
sub
inc
imul
xchg
shr
(bad)
cmp
push
xchg
xchg
rcl
(bad)
push
mov
ret
mov
xchg
shr
sub
jmp
dec
push
mov
test
mov
sub
xchg
popf
xchg
shr
jns
jno
sub
xor
sub
into
loope
fs
rcr
sbb
jle
xchg
cdq
mov
xchg
sar
jmp
jmp
sbb
lahf
lods
hlt
shr
(bad)
and
jno
sub
fimul
shr
mov
mov
movs
icebp
stos
test
jg
cmps
dec
cmp
movs
in
sbb
and
out
sub
mov
xchg
movs
in
sbb
and
xchg
pop
sub
mov
xchg
shl
add
dec
loope
loop
or
dec
loope
loopne
fild
fistp
sub
sub
loopne
sub
cmp
add
xchg
pop
sub
mov
es
sbb
and
mov
sub
ins
inc
rcl
adc
jmp
sbb
sbb
in
adc
adc
popa
and
in
adc
jl
push
pop
sub
mov
scas
shl
addr16
push
xlat
in
adc
fwait
inc
aad
push
sbb
push
imul
fistp
sub
mov
cld
ret
adc
sub
jp
retf
adc
push
push
adc
loope
xchg
(bad)
xchg
or
add
inc
ror
adc
in
in
jns
les
push
sbb
in
jbe
ja
jmp
adc
sub
jle
jno
xchg
mov
dec
loope
cmp
mov
(bad)
movs
xchg
xchg
mov
jmp
scas
jmp
xchg
mov
jmp
ja
adc
in
nop
hlt
(bad)
xchg
jl
lods
test
jmp
cmp
sub
jmp
aam
in
mov
jecxz
jle
adc
xchg
cdq
ror
xchg
sar
cmps
pop
sub
stos
lods
and
jmp
mov
pop
sbb
inc
sbb
sub
aam
into
loope
mov
out
pop
in
push
ret
xchg
xchg
mov
jmp
ja
adc
in
nop
hlt
(bad)
xchg
jl
lods
test
jmp
cmp
inc
inc
sub
and
add
jmp
lods
int3
jmp
sbb
sub
shl
popa
in
popa
xor
shr
pop
fs
rol
sub
jmp
xchg
pop
sub
mov
jb
out
inc
mov
push
sub
jp
jnp
je
xchg
mov
out
dec
sbb
loope
adc
inc
ins
sub
and
push
rcl
sub
rol
movs
into
sub
shr
stos
lods
and
jl
outs
adc
sub
push
fiadd
fld
popf
out
add
imul
sub
sub
shl
or
sub
push
sub
(bad)
ficom
cmp
outs
adc
in
sub
(bad)
xchg
jl
(bad)
pop
sub
stos
lods
and
xchg
pop
sub
nop
bound
sub
fucomi
stos
xchg
sub
add
sub
(bad)
ficom
int3
jmp
aas
inc
dec
cmc
sub
xchg
push
les
js
xchg
sbb
lods
and
adc
lahf
aad
shr
add
int3
push
sub
test
inc
shl
adc
jmp
sbb
cwde
add
and
sub
lods
push
les
in
pusha
les
sub
and
adc
lahf
aad
shr
add
int3
push
sub
test
inc
shl
adc
jmp
sbb
jb
adc
shl
adc
push
(bad)
adc
sbb
push
sub
mov
aad
movs
aad
hlt
(bad)
xchg
jnp
jno
outs
adc
aad
hlt
(bad)
xchg
jnp
(bad)
pop
sub
stos
lods
cmp
pop
js
push
imul
sub
lods
push
inc
xor
lods
push
(bad)
enter
xchg
in
jl
in
mov
jmp
scas
les
push
aad
shr
add
int3
push
sub
test
inc
shl
sbb
(bad)
test
inc
rcl
adc
jmp
sbb
push
push
adc
shl
adc
push
(bad)
adc
in
sub
lods
push
les
in
pusha
inc
pop
imul
sub
lods
push
les
pusha
movs
in
mov
jmp
scas
les
push
sub
mov
aad
shr
cmp
sub
dec
adc
push
mov
jmp
add
push
shr
jle
cmp
sub
sar
add
xchg
sub
or
sub
shl
or
sub
push
sub
(bad)
ficom
cmp
outs
adc
in
sub
(bad)
xchg
jl
(bad)
pop
sub
stos
lods
and
bound
hlt
(bad)
xchg
jl
ret
adc
lods
and
fstp
popf
out
or
sub
(bad)
ficom
cmp
outs
adc
in
sub
(bad)
xchg
jl
xchg
pop
sub
stos
lods
and
xor
sub
(bad)
xchg
jl
sbb
stos
lods
and
dec
pop
sub
nop
bound
sub
fucomi
stos
xchg
sub
add
hlt
imul
sub
test
shl
jmp
sub
pop
mov
jmp
add
enter
xchg
sub
adc
cmp
xchg
push
sub
(bad)
ficom
cmp
outs
adc
in
sub
(bad)
xchg
jl
adc
adc
lods
and
sub
sub
(bad)
xchg
jl
push
pop
sub
stos
lods
and
retf
adc
bound
sub
fucomi
stos
xchg
sub
add
hlt
imul
sub
sub
shl
rcl
jnp
push
ror
xchg
movs
rol
(bad)
sbb
sub
les
sub
jecxz
loope
xchg
out
js
adc
aas
mov
jmp
add
enter
test
jle
mov
sub
sar
adc
push
sub
ficom
cmp
outs
adc
in
sub
(bad)
xchg
jl
mov
sub
stos
lods
and
div
sub
(bad)
xchg
jl
scas
pop
sub
stos
lods
and
(bad)
fisubr
sub
xchg
push
sub
(bad)
ficom
cmp
outs
adc
in
sub
(bad)
xchg
jl
jb
sub
stos
lods
and
ds
sub
nop
bound
sub
fucomi
stos
xchg
sub
sub
sub
ja
push
jle
xchg
push
inc
dec
cmc
sub
xchg
push
(bad)
call
in
js
(bad)
hlt
sub
lods
push
les
sbb
xchg
in
pusha
inc
adc
push
inc
adc
push
les
xchg
repz
jmp
sub
lods
push
les
add
sub
sub
xchg
in
not
xchg
adc
xchg
rol
fst
retf
(bad)
xchg
(bad)
lock
xchg
repz
adc
push
sub
out
aaa
jb
loopne
jns
int3
jmp
sub
jg
xchg
cli
dec
xchg
inc
popf
rcr
xlat
jmp
loope
xchg
mov
shr
(bad)
push
pop
pusha
sub
dec
and
les
pusha
mov
cmp
in
lods
out
(bad)
xchg
movs
rol
and
adc
cmp
and
push
shr
test
std
and
push
sub
pop
inc
sub
mov
xchg
inc
add
push
shr
jns
in
cmp
push
sub
lods
(bad)
jmp
cmp
sub
popf
mov
adc
push
adc
or
(bad)
xchg
scas
ror
lds
adc
add
adc
aad
shr
jns
test
inc
rcl
sub
aam
shl
jmp
pushf
enter
cmp
jmp
add
and
sbb
adc
add
aad
shr
jns
test
sub
xchg
popf
xchg
shr
jns
test
inc
sar
adc
sbb
(bad)
xchg
movs
xchg
mov
shr
mov
scas
inc
push
inc
push
shr
jns
cmp
sub
shl
push
shr
(bad)
sub
adc
scas
test
adc
xchg
lock
(bad)
push
test
adc
inc
push
shr
(bad)
cmp
bswap
xchg
ror
in
mov
(bad)
xchg
jl
lods
rcl
jmp
cmp
inc
push
inc
adc
push
shr
jns
sub
(bad)
inc
sub
and
sub
(bad)
fld
add
popf
shr
popf
out
xchg
cdq
mov
xchg
sar
outs
adc
adc
test
inc
rcr
adc
jmp
add
in
push
out
(bad)
xchg
sub
pop
jmp
sub
lods
xchg
shr
(bad)
cmp
sub
add
adc
scas
and
cld
sub
cld
pop
inc
sub
test
xchg
sub
jmp
push
sub
popa
ficomp
lods
popa
sub
in
push
sub
rol
popf
out
add
adc
mov
ds
fadd
push
inc
enter
xchg
mov
cmp
xchg
scas
shl
push
sub
movs
in
mov
inc
rcr
jmp
jmp
sbb
test
nop
xchg
adc
push
shr
movs
in
mov
cld
inc
sub
test
push
jg
push
shr
jns
cdq
adc
sar
gs
shl
shl
adc
add
enter
or
push
lock
sub
(bad)
in
add
jl
aam
inc
inc
pop
cmc
sub
(bad)
inc
sub
mov
xchg
scas
call
cmp
jmp
cld
shr
(bad)
sbb
(bad)
xchg
scas
shl
hlt
shr
(bad)
jmp
daa
jns
shl
shl
(bad)
jmp
sbb
push
sub
out
in
mov
(bad)
xchg
sub
xchg
popf
xchg
shr
jns
in
sub
in
sub
shl
rcl
sub
sar
ss
sub
mov
xchg
(bad)
adc
push
out
adc
cmp
cmp
jg
cmps
dec
and
(bad)
or
adc
cmp
push
pop
sbb
and
in
movs
cmp
add
add
inc
sub
mov
dec
or
shr
pop
sub
repz
cmp
xor
push
mov
cld
cs
sub
jp
jne
sub
push
aad
inc
adc
add
adc
push
sub
out
add
inc
rcl
adc
loope
jecxz
loope
in
scas
mov
cld
push
sub
jg
inc
xor
push
jb
loopne
jns
int3
shr
sub
or
sub
jle
pop
push
pop
dec
lods
shl
pop
sub
inc
ins
shl
adc
sub
shl
scas
and
aam
sub
push
fsubr
(bad)
cmp
into
inc
sub
inc
imul
adc
shr
jmp
jmp
sbb
rcl
sbb
popf
fld
dec
adc
add
inc
rol
adc
loope
inc
cmp
and
sub
aaa
jmp
sub
out
sub
dec
sbb
outs
lock
sub
imul
sub
jecxz
xor
movs
sub
inc
push
sub
jmp
call
add
mov
sub
inc
jmp
sub
ins
pushf
jl
mov
sub
stos
lods
xor
ins
pushf
jl
sub
outs
adc
add
xchg
add
sub
rcl
addr16
push
xlat
jmp
sbb
jae
jmp
inc
jle
pop
das
xor
xchg
std
and
jecxz
loope
call
inc
push
adc
push
inc
adc
push
sub
jle
add
jle
adc
sub
rcl
lahf
retf
nop
movs
rol
jnp
sbb
sub
cmps
inc
sub
inc
imul
mov
sub
push
inc
sub
inc
imul
mov
sub
inc
inc
sub
inc
imul
mov
sub
jbe
sub
inc
imul
mov
inc
sub
test
mov
sub
adc
sbb
mov
sub
inc
adc
sbb
mov
sub
inc
adc
sbb
(bad)
push
sub
inc
adc
sbb
lea
and
sbb
jnp
sbb
sub
fimul
adc
imul
mov
sub
retf
adc
imul
mov
sub
cli
dec
sub
inc
imul
mov
sub
jmp
adc
lahf
retf
pushf
movs
shl
in
jle
out
or
sub
inc
xchg
shl
shl
adc
or
retf
or
imul
jle
xchg
sbb
mov
sub
adc
adc
xchg
shl
test
dec
or
retf
adc
scas
sub
aad
sbb
dec
sub
test
outs
sbb
push
add
punpckhbw
or
js
push
sub
shr
sbb
mov
sub
inc
call
imul
mov
clc
ins
adc
js
push
sub
shr
sbb
mov
xor
push
add
push
push
outs
adc
js
push
sub
shr
sbb
mov
sub
inc
call
push
push
ins
adc
js
push
sub
shr
sbb
mov
sub
movs
in
sbb
shl
lods
leave
outs
adc
or
adc
retf
xor
scas
sub
aad
sbb
jle
sub
jbe
jns
int3
jmp
add
xchg
loopne
push
xchg
(bad)
mov
adc
add
iret
imul
and
movs
rol
not
les
in
js
sbb
sub
sub
les
sub
fisubr
adc
in
in
les
push
sbb
mov
sub
sub
cmps
push
aad
imul
add
inc
adc
push
lock
imul
repnz
sub
adc
push
or
retf
push
adc
pop
sbb
jns
adc
fldpi
les
add
jle
add
test
sub
repz
adc
push
sub
sub
nop
add
adc
pop
sbb
(bad)
pop
push
test
push
pop
push
fldpi
les
add
cmp
cmp
sub
repz
adc
push
sub
dec
enter
push
inc
adc
ins
inc
adc
inc
push
sub
sub
sub
and
cmp
cs
sub
mov
add
sbb
mov
sub
inc
adc
pop
sbb
(bad)
pop
push
add
pop
cs
add
add
sub
sub
inc
js
sub
repz
adc
push
sub
push
leave
outs
adc
lahf
sbb
sub
adc
pop
sbb
(bad)
pop
push
add
dec
cs
add
add
sub
inc
or
sub
repz
adc
push
sub
mov
outs
adc
push
ins
adc
push
ins
adc
js
lds
push
sub
inc
inc
inc
adc
push
outs
adc
mov
push
sub
sub
retf
adc
fs
sub
sub
sbb
mov
sub
sub
sbb
mov
add
push
imul
sub
add
sub
inc
inc
out
push
sub
test
push
or
retf
cmp
(bad)
pop
sbb
(bad)
pop
dec
mov
push
inc
mov
cmp
cmp
sub
lods
mov
adc
push
sub
shl
adc
scas
cmps
xor
push
sub
sub
outs
adc
sbb
inc
sbb
sub
push
sub
(bad)
pop
les
or
xchg
sbb
mov
sub
sub
sub
add
pop
inc
mov
push
add
adc
cmp
sub
lods
mov
adc
push
sub
test
scas
jo
sub
adc
pop
sbb
(bad)
pop
dec
mov
push
sub
adc
push
sub
sub
inc
inc
mov
push
sub
test
adc
mov
add
rcl
sbb
mov
sub
sub
sub
cmp
pop
jl
push
sub
adc
cmp
sub
repz
adc
push
sub
mov
nop
fcomi
mov
add
sbb
mov
sub
sub
sbb
mov
add
test
sub
inc
xchg
sub
sub
cmp
sub
jl
mov
adc
mov
push
sub
sub
outs
dec
sub
mov
jmp
pop
mov
sub
sub
sbb
mov
add
dec
add
sub
jl
push
not
add
iret
imul
shl
sub
sbb
push
pop
sbb
(bad)
pop
push
add
xchg
sub
sub
sbb
jo
push
aas
into
imul
repnz
sub
(bad)
in
sub
sub
sub
sub
sub
cmp
jp
arpl
adc
enter
add
sub
inc
adc
sub
repz
adc
push
sub
mov
push
ins
adc
push
outs
adc
jo
cmp
push
sub
inc
jl
adc
call
outs
adc
imul
push
sub
je
push
outs
adc
push
ins
adc
push
outs
adc
jo
xchg
sub
jl
push
inc
adc
call
outs
adc
imul
push
sub
xor
push
ins
adc
nop
add
adc
pop
sbb
(bad)
pop
dec
mov
push
inc
enter
jle
add
test
sub
sub
cs
or
sub
cmp
sub
sub
sub
sub
sub
xor
dec
jl
push
inc
adc
call
outs
adc
imul
push
sub
mov
or
ins
adc
push
ins
adc
push
ins
adc
jg
(bad)
jl
imul
sub
jl
retf
adc
xchg
cmc
push
sub
sub
pop
dec
sub
mov
(bad)
push
sub
movs
in
add
aad
(bad)
aaa
jb
jmp
inc
jle
sbb
je
in
sbb
not
xchg
pop
sbb
inc
fucomi
(bad)
loope
jl
mov
adc
xor
(bad)
xchg
scas
sar
retf
and
push
nop
movs
rol
shl
and
ins
adc
outs
or
in
les
push
sbb
mov
sub
sub
cmps
push
aad
imul
add
inc
adc
push
lock
imul
repnz
sub
adc
mov
push
adc
pop
sbb
jns
adc
fldpi
les
add
jle
add
test
sub
repz
adc
push
sub
sub
xchg
sub
adc
pop
sbb
(bad)
pop
push
cmp
push
pop
push
fldpi
les
add
cmp
cmp
sub
repz
adc
push
sub
dec
enter
push
inc
adc
ins
inc
adc
inc
push
sub
sub
sub
and
cmp
mov
sub
mov
add
sbb
mov
sub
inc
adc
pop
sbb
(bad)
pop
dec
mov
push
inc
add
inc
pop
sub
jl
cmc
mov
adc
in
not
add
(bad)
ja
adc
xor
aas
push
outs
adc
push
sub
rol
adc
add
imul
inc
sub
cld
mov
sub
mov
push
mov
popa
aas
add
sub
bound
shl
adc
adc
adc
cmp
sub
sub
imul
mov
les
push
sbb
mov
sub
sub
sub
add
pop
inc
add
inc
pop
sub
jl
cmc
mov
adc
in
not
add
jle
sub
mov
lea
loope
adc
sub
sub
sub
sub
add
push
inc
add
sub
sub
das
adc
cmp
sub
lods
mov
adc
push
sub
add
adc
jmp
add
sbb
mov
sub
sub
sbb
mov
add
test
sub
inc
push
inc
add
push
sub
inc
cmp
push
sub
test
push
xor
retf
pop
mov
push
sbb
(bad)
pop
push
add
cmove
jmp
adc
add
imul
repnz
sub
(bad)
and
sub
rcr
fimul
jmp
sub
sub
sub
sub
cmp
rcl
push
sub
dec
add
sub
inc
pop
repz
repz
adc
push
sub
fprem1
ins
adc
push
ins
adc
push
ins
adc
js
inc
inc
shr
sub
mov
push
jl
das
mov
adc
mov
push
sub
sub
or
adc
cld
(bad)
push
sub
sub
sbb
mov
sub
sub
sbb
mov
add
int
sub
inc
mov
sub
xor
sub
inc
push
cmc
push
sub
test
push
xor
retf
push
mov
push
sbb
(bad)
pop
push
add
xchg
sub
sub
rcl
push
sub
jns
jnp
imul
repnz
sub
(bad)
mov
sub
sub
sub
sub
sub
xor
scas
adc
push
inc
adc
call
outs
adc
imul
push
sub
ins
xor
sub
xor
lahf
scas
ins
sub
adc
pop
sbb
(bad)
pop
dec
mov
push
inc
push
inc
jl
adc
call
outs
adc
imul
push
sub
sub
sub
add
ins
adc
push
ins
adc
push
outs
adc
jo
jo
aaa
inc
add
sub
jns
lock
imul
repz
sub
adc
outs
xor
retf
or
push
pop
sbb
(bad)
pop
push
add
sub
sub
ins
adc
inc
push
iret
int
push
sub
sub
(bad)
mov
fwait
shr
xchg
mov
adc
lahf
retf
popf
ins
and
(bad)
aaa
jb
jmp
inc
jg
xchg
ss
shl
popf
rcr
movs
rol
inc
xchg
sub
jle
add
sub
sub
sub
shl
xor
stos
xchg
rcr
lods
stc
sub
sub
sub
shl
adc
loope
inc
rcr
adc
jmp
call
sub
nop
fcomi
mov
in
in
in
loopne
in
call
inc
push
cwde
push
sub
sub
pop
mov
adc
jle
xchg
pop
call
sub
js
imul
and
mov
jmp
jmp
or
sub
movd
nop
jl
pop
js
sub
push
mov
(bad)
jmp
or
nop
sbb
dec
jb
out
inc
mov
imul
pop
jbe
popf
fldcw
popf
out
jmp
sub
mov
outs
adc
in
sub
(bad)
xchg
jl
jbe
sub
rcl
adc
push
call
imul
sub
test
inc
rcr
sub
fdivr
push
xchg
cs
cmp
hlt
movs
imul
sub
xor
imul
popf
pushf
push
sub
test
inc
shr
sub
push
jmp
sbb
outs
adc
in
sub
(bad)
xchg
jl
ret
adc
cwde
sub
imul
pop
popf
push
sub
test
inc
shl
jmp
sbb
outs
adc
in
sub
(bad)
xchg
jl
sahf
jg
adc
adc
inc
jo
sub
lods
push
les
xchg
and
cmp
scas
movs
imul
sub
movs
add
push
movs
shr
jns
mov
sub
lods
push
les
push
es
cmp
rep
imul
sub
jns
sub
imul
imul
inc
rcl
sub
push
jmp
sbb
outs
adc
in
sub
(bad)
xchg
jl
push
jg
adc
adc
inc
sub
lods
push
les
push
retf
xchg
shr
(bad)
loope
xchg
push
xchg
and
add
imul
sub
rol
push
inc
push
lock
bound
sub
(bad)
xchg
jl
sub
ins
adc
test
jmp
add
int
push
sub
imul
shr
(bad)
add
xor
push
sub
in
inc
movs
in
mov
jmp
scas
lds
xlat
xchg
ror
mov
movs
icebp
jp
jnp
pop
pusha
xchg
repz
inc
aam
out
loope
inc
shr
adc
in
adc
aas
jg
and
and
jmp
aas
les
push
jno
sub
jmp
sub
jg
xchg
adc
sub
xchg
fistp
ret
push
outs
adc
in
shl
xchg
jl
add
adc
scas
ss
shl
adc
push
mov
xchg
xchg
fwait
aam
(bad)
imul
sub
test
inc
rcl
out
xchg
rcl
pop
jns
rcr
test
jmp
cmp
lock
sub
xchg
fwait
aam
(bad)
imul
(bad)
sahf
push
sub
test
inc
shl
add
mov
xchg
movs
shr
xchg
sub
add
xchg
les
lea
sub
test
sub
cmp
adc
in
shl
xchg
jl
scas
jge
adc
aad
in
(bad)
xchg
sub
add
cmps
imul
les
inc
add
push
shr
cs
outs
adc
in
shl
xchg
jl
jp
sub
mov
scas
lods
test
and
outs
adc
in
shl
xchg
jl
sbb
adc
aad
in
(bad)
xchg
and
cmps
imul
les
xor
test
and
outs
adc
in
shl
xchg
jl
(bad)
jl
adc
aad
in
(bad)
xchg
daa
popa
cmp
in
imul
les
leave
add
push
movs
xchg
leave
lahf
shr
mov
nop
shr
and
fld
movs
in
shl
xchg
jl
xchg
jl
adc
aad
in
(bad)
xchg
and
add
mov
les
mov
sub
test
daa
sbb
outs
adc
in
shl
xchg
jl
mov
sbb
ficom
shr
loope
jecxz
loope
enter
popf
out
add
push
sub
rol
popf
lods
sbb
(bad)
call
shl
pop
gs
test
sub
das
sub
xchg
(bad)
call
fsub
iret
loope
int3
ficom
fcomp
sub
pop
mov
push
rcl
lds
and
shr
sub
xchg
call
es
in
sub
test
adc
das
sub
xchg
xchg
xchg
shr
(bad)
push
and
out
in
shr
(bad)
xchg
sub
arpl
fimul
shr
mov
nop
shr
jns
sbb
imul
aad
shr
jns
lods
or
push
xchg
in
rcl
les
sub
jmp
jecxz
test
xor
mov
nop
aam
(bad)
stos
pop
sub
xchg
adc
mov
sub
and
lea
add
int
push
shr
jns
cmp
push
movs
rol
lea
add
int
push
shr
jns
aad
sub
shl
and
ins
sub
movs
in
shr
(bad)
xchg
jl
or
xchg
(bad)
sub
fucomi
(bad)
loope
cdq
lods
xchg
aam
(bad)
cmp
sub
lods
xchg
shr
(bad)
cmp
test
push
outs
adc
in
shr
(bad)
xchg
jl
out
sub
stos
lods
cmp
(bad)
cmp
add
sub
lods
xchg
shr
(bad)
jmp
adc
test
inc
inc
xchg
hlt
push
sub
test
inc
rcl
adc
jmp
add
push
shr
jns
mov
sub
adc
sub
test
inc
rcl
jmp
jmp
sbb
test
xchg
dec
imul
(bad)
xchg
scas
aam
cmp
enter
dec
mov
xchg
movs
in
mov
jmp
scas
scas
test
and
and
push
aam
(bad)
add
icebp
sub
lods
xchg
aam
(bad)
cmp
adc
push
inc
fwait
fwait
sub
lods
xchg
shr
(bad)
cmp
and
push
shr
(bad)
cmp
and
mov
or
(bad)
call
shr
push
sbb
fucomi
(bad)
scas
test
aad
shr
sub
fucomi
(bad)
jmp
rcr
rcl
pop
mov
movs
xchg
in
shr
mov
nop
shr
movs
in
shr
(bad)
xchg
jl
push
shr
(bad)
xchg
jl
push
jle
adc
lods
cmp
lods
xchg
aam
(bad)
cmp
sar
push
fucomi
(bad)
in
call
rcr
adc
jecxz
(bad)
xchg
rcr
inc
sub
hlt
cmp
popf
lods
pushf
aam
(bad)
jmp
sub
lods
xchg
aam
(bad)
cmp
mov
rcr
adc
in
call
rcr
adc
in
call
mov
xchg
mov
cld
jp
sub
movs
in
aam
(bad)
xchg
jl
sub
sar
ins
adc
push
aas
adc
cmp
sar
sub
lods
xchg
shr
(bad)
cmp
pushf
test
jmp
adc
(bad)
xchg
scas
shl
addr16
jmp
test
jmp
xor
push
sub
inc
sub
sub
jne
test
ja
jmp
sub
mov
push
sub
jp
jnp
mov
xor
stos
inc
sbb
sub
xor
push
ret
popa
in
pusha
cmp
push
and
xchg
ret
adc
jecxz
sbb
pop
mov
sub
sub
sub
popf
icebp
lahf
iret
popf
lods
fadd
jmp
loope
jl
cmc
ins
adc
or
adc
push
sub
or
adc
pop
cmp
xor
push
or
add
adc
cwde
xchg
jmp
xchg
pop
sbb
cmps
cmp
sub
sub
adc
in
popf
cli
(bad)
xchg
jl
and
shr
stos
lods
cmp
(bad)
xchg
sub
es
xor
pop
fsubr
and
sub
sub
cwde
push
sub
out
jo
push
sub
xchg
mov
movs
aad
sub
cs
movs
les
jmp
out
sub
stc
(bad)
xchg
jmp
sbb
pop
jl
adc
ficom
scas
cli
and
in
jecxz
test
xor
mov
loope
pushf
mov
xchg
lods
xchg
call
cmps
les
in
xchg
jmp
mov
ror
sub
out
loop
imul
(bad)
xchg
pop
shr
mov
jmp
add
icebp
sub
lods
test
sbb
cs
add
lods
test
xchg
cwde
xchg
jmp
and
push
shr
jns
push
(bad)
xchg
mov
jmp
and
(bad)
xchg
scas
shl
add
lods
test
adc
push
sbb
sub
out
dec
sub
inc
aad
push
sub
mov
shl
sub
imul
aas
adc
in
jbe
xchg
rcr
sub
or
jb
add
test
mov
adc
sbb
sub
int3
add
add
(bad)
xchg
mov
adc
jne
adc
fwait
dec
mov
ret
hlt
push
sub
mov
shl
sub
or
ins
adc
sub
adc
in
test
rcr
sub
unpcklps
push
mov
imul
mov
sub
out
mov
adc
push
cmp
sub
shr
xchg
stos
les
cli
push
sub
and
mov
mov
int3
mov
push
inc
adc
push
sub
push
push
inc
push
inc
push
sbb
xchg
xchg
and
in
lods
jns
test
inc
sar
adc
in
mov
loope
ins
xchg
adc
add
pop
sar
movs
aad
sti
(bad)
xchg
jnp
pop
fadd
enter
jle
in
lods
jns
cs
mov
(bad)
sbb
sub
test
xor
push
and
in
lods
jns
test
inc
rcr
adc
in
mov
loope
ins
xchg
adc
add
pop
sar
movs
aad
sti
(bad)
xchg
jnp
pop
fadd
nop
es
imul
sbb
sub
(bad)
sbb
sub
xchg
mov
iret
popf
lods
fadd
jmp
jecxz
movs
les
sub
repnz
mov
sub
ins
movs
mov
adc
sub
sub
inc
push
sub
ins
mov
sub
sub
movs
push
stc
jmp
sub
ins
mov
adc
push
cmp
sub
imul
sub
popf
icebp
inc
hlt
popf
jmp
adc
sub
sub
ins
aam
cld
mov
push
ins
adc
push
inc
adc
push
sub
sub
int
imul
repnz
sub
(bad)
adc
sub
mov
push
and
add
mov
shr
stos
lods
sub
pop
gs
adc
sub
test
mov
adc
jb
adc
add
imul
push
gs
mov
xchg
lods
dec
stos
and
add
stc
(bad)
xchg
jmp
test
sub
mov
stos
mov
jmp
in
mov
inc
add
push
sub
push
int3
imul
popf
sub
sub
xchg
shl
jmp
jmp
or
test
adc
push
cwde
push
sub
adc
cmp
add
test
(bad)
xchg
jl
sub
sub
lds
ins
adc
push
and
cmp
pushf
and
rol
(bad)
cmp
inc
push
sub
sub
sub
(bad)
gs
jns
inc
sbb
push
sub
jmp
push
jne
sub
or
sub
and
jmp
sub
ins
mov
data16
inc
push
mov
inc
daa
push
stc
dec
ja
in
cmp
popf
int3
jmp
sub
jg
xchg
or
cmp
or
adc
jecxz
sbb
clc
sub
xchg
shr
nop
dec
imul
sub
adc
pop
push
adc
jnp
adc
sbb
sub
imul
sub
sub
push
sub
sbb
push
outs
adc
addr16
sub
jl
mov
adc
pop
inc
mov
int
rcr
(bad)
loope
adc
lds
shr
xchg
les
int
rcl
rcl
jmp
pushf
adc
(bad)
cmp
es
test
xchg
loope
shr
jns
sbb
sub
fisub
and
int3
jmp
icebp
xchg
shr
stos
sub
mov
inc
mov
sub
lods
mov
jmp
inc
test
xchg
shr
xchg
shr
add
loopne
(bad)
xchg
adc
adc
(bad)
xchg
pop
xchg
cmc
xchg
shr
jns
test
aas
lods
mov
jmp
cmp
inc
push
ins
adc
ret
sub
fstp
es
cwde
push
sub
nop
jmp
or
push
sub
inc
mov
sbb
adc
dec
dec
mov
adc
cwde
push
sub
adc
sar
(bad)
xchg
jne
adc
cwde
push
sub
xchg
movs
outs
sub
(bad)
pop
inc
mov
iret
xchg
ror
adc
adc
loope
adc
sub
ins
adc
sub
sub
add
cs
shl
adc
leave
sub
push
sbb
les
and
sub
xor
adc
(bad)
movs
xchg
lds
lds
cs
movs
xchg
rcl
inc
sub
adc
sub
adc
outs
adc
push
pop
adc
icebp
ins
adc
pop
pop
adc
cmc
ins
adc
inc
pop
adc
dec
pop
adc
outs
adc
je
adc
jl
adc
fs
adc
in
not
sub
adc
sbb
sub
mov
xchg
pop
adc
outs
adc
js
adc
pusha
pop
adc
gs
movs
cmp
jmp
js
lods
and
xchg
rcl
sbb
sub
xchg
inc
add
lahf
retf
popf
lods
mov
jmp
loope
xchg
mov
mov
xchg
shr
sub
test
inc
shl
adc
loope
cld
aam
rcl
sub
movs
in
add
sub
sub
test
inc
(bad)
pop
les
and
xchg
xchg
imul
xor
push
hlt
push
sub
sub
jle
sub
(bad)
pop
les
and
std
fild
adc
nop
sbb
xchg
sub
fldl2t
(bad)
xchg
jmp
call
sub
es
mov
sub
jmp
push
shr
(bad)
cmp
and
out
es
in
adc
loope
ins
xchg
adc
jmp
adc
inc
adc
sub
mov
(bad)
xchg
rol
xchg
mov
sbb
rcl
sbb
sub
sbb
(bad)
fsub
push
lea
sbb
push
sub
scas
push
sub
fimul
shr
mov
xchg
shr
jns
test
inc
inc
inc
hlt
push
sub
test
inc
shr
adc
jmp
add
xchg
sub
sub
test
inc
(bad)
pop
xor
and
xchg
xchg
imul
xor
push
hlt
push
sub
sub
jle
sub
(bad)
pop
xor
and
std
fild
movs
in
jmp
xchg
scas
(bad)
sub
stos
nop
cmp
or
sub
sub
retf
ret
imul
ror
sub
sub
out
sub
shr
adc
xchg
rcl
push
and
(bad)
loop
adc
xchg
shr
adc
push
push
xor
push
sti
push
sub
sub
retf
adc
pop
xor
and
std
stos
ins
sub
test
xchg
sub
jmp
push
cmp
nop
loope
cmp
lods
imul
xchg
fcom
add
imul
fcom
mov
sar
add
adc
push
shr
jns
sbb
pusha
sub
test
xchg
sub
or
sub
sub
jmp
imul
rol
adc
xchg
sbb
popa
sub
shl
sub
ret
sbb
push
shr
(bad)
cmp
jmp
add
int3
imul
fcom
add
sub
sar
add
adc
push
shr
jns
sbb
mov
sub
mov
aad
jmp
xchg
sub
or
sub
sub
test
imul
shr
sub
sub
xchg
adc
leave
das
adc
loope
and
lods
imul
xchg
fcom
mov
imul
fcom
jmp
sar
add
adc
push
shr
jns
sbb
sub
push
pusha
sub
test
xchg
sub
or
sub
sub
inc
ret
imul
shl
adc
xchg
sbb
sub
outs
pusha
sub
rcl
sub
mov
xchg
loope
ins
xchg
adc
jmp
pop
pop
dec
inc
adc
push
sub
sub
shl
add
ins
adc
jp
adc
sub
xchg
(bad)
xchg
shr
sub
shr
(bad)
xchg
cmps
nop
sub
shr
(bad)
push
sbb
sub
add
sub
add
imul
ror
sub
sub
cli
outs
sub
shr
jmp
xchg
rcl
(bad)
xchg
adc
pop
shl
shl
jl
lods
popf
shr
(bad)
cmp
sub
lods
popf
shr
(bad)
cmp
int3
and
xchg
in
js
jmp
push
shr
(bad)
cmp
and
imul
shr
adc
call
rcl
dec
inc
adc
push
sub
sub
shl
or
ins
adc
xor
adc
and
xlat
xchg
shr
sub
shr
(bad)
xchg
cmps
nop
sub
shr
(bad)
push
sbb
sub
add
sub
ret
push
sub
xchg
sbb
sub
xor
adc
gs
call
rcl
(bad)
xchg
scas
(bad)
sub
fidivr
sub
rcr
popf
out
in
adc
movs
in
fldl2t
(bad)
xchg
jl
add
outs
adc
in
fldl2t
(bad)
xchg
jl
es
sub
stos
lods
cmp
xchg
xor
adc
(bad)
movs
xchg
rcl
jmp
inc
push
inc
adc
push
ins
jl
imul
sar
adc
loope
loopne
xchg
sar
add
sub
sar
mov
adc
push
pop
mov
outs
in
and
sub
loope
ins
xchg
adc
loope
jle
in
in
xchg
rol
add
fst
sub
add
lods
cwde
shr
(bad)
cmp
inc
cwde
int3
push
sub
sar
xchg
ins
sub
movs
in
jmp
(bad)
sub
inc
push
shr
jnp
mov
jmp
xchg
cdq
loopne
xchg
sar
mov
push
shr
jns
cs
mov
(bad)
fstp
jmp
sub
pushf
pushf
shr
(bad)
cmp
ins
enter
(bad)
sub
add
sub
sub
add
sub
push
inc
dec
mov
adc
push
shr
mov
in
enter
cmps
xchg
int
shr
mov
push
fsubr
(bad)
xchg
les
and
mov
jmp
jmp
call
aad
jmp
jmp
cmp
mov
fstp
jmp
sub
sub
test
inc
inc
imul
pushf
shr
(bad)
xor
sub
mov
rcr
adc
scas
sub
sub
rol
popf
out
add
jle
add
imul
icebp
sub
jns
outs
adc
imul
(bad)
xchg
scas
shl
add
jmp
pusha
mov
sub
xchg
mov
into
loope
hlt
aam
rcr
pop
jl
popa
cmp
and
retf
adc
ss
jmp
sub
mov
cmp
mov
arpl
in
mov
push
sub
sub
xchg
clc
push
cmp
es
jmp
sub
and
arpl
and
cmc
ins
adc
imul
adc
loope
jecxz
loope
in
mov
cmc
ins
adc
arpl
and
jmp
mov
sub
and
sub
inc
ins
sub
adc
mov
pop
pop
(bad)
pop
xor
sub
lahf
retf
popf
ins
pushf
movs
rcl
pop
xor
(bad)
pop
add
push
push
mov
sub
mov
sub
pop
and
imul
pop
jl
sub
outs
adc
sbb
mov
sub
pop
and
imul
pop
ja
sub
outs
adc
sbb
lea
sbb
sub
sbb
mov
pop
imul
sbb
mov
sub
mov
xchg
mov
sub
das
jecxz
sub
inc
mov
sub
mov
sub
ret
fnstenv
push
mov
lahf
xor
mov
cmp
sub
das
jecxz
ins
mov
sub
sbb
mov
sub
mov
sub
nop
mov
sub
das
jecxz
or
sbb
jmp
jl
popa
cmp
les
push
jmp
xor
dec
ja
in
cmp
jmp
pusha
fist
clc
mov
jmp
fist
clc
mov
jmp
js
push
sub
mov
jmp
jl
push
sub
mov
jmp
dec
fist
clc
mov
jmp
inc
fist
clc
mov
jmp
pop
fist
clc
mov
jmp
pop
fist
clc
mov
inc
mov
(bad)
sub
sub
jmp
push
dec
pop
aaa
inc
dec
movs
in
imul
sub
in
pusha
movs
push
aad
in
pusha
add
jmp
ret
xchg
push
dec
pop
out
ret
sbb
ins
scas
in
or
and
sub
aam
pop
fwait
inc
adc
scas
sub
sub
sub
cld
adc
out
dec
test
sub
sub
adc
push
adc
push
call
cmc
sub
lahf
jge
and
jmp
xchg
stos
out
fcmovnb
fcmovne
movs
and
lahf
ins
dec
and
mov
int3
mov
xor
push
fist
clc
mov
jmp
sub
push
sub
mov
jmp
and
push
sub
mov
jmp
and
push
sub
mov
jmp
cmp
push
sub
mov
jmp
cmp
push
sub
mov
jmp
xor
push
sub
mov
jmp
xor
push
sub
mov
jmp
or
push
sub
mov
jmp
or
push
sub
mov
jmp
add
push
sub
mov
jmp
add
push
sub
mov
jmp
sbb
push
sub
mov
jmp
sbb
push
sub
mov
jmp
adc
push
sub
mov
jmp
adc
push
sub
mov
jmp
call
mov
jmp
in
fist
clc
mov
jmp
loopne
push
sub
mov
jmp
in
push
sub
mov
jmp
clc
fist
clc
mov
jmp
cld
fist
clc
mov
jmp
lock
clc
mov
jmp
hlt
fist
clc
mov
jmp
enter
clc
mov
jmp
int3
fist
clc
mov
jmp
rcr
sub
mov
jmp
(bad)
fist
clc
mov
jmp
fcomp
push
sub
mov
jmp
(bad)
push
sub
mov
jmp
rcr
push
sub
mov
jmp
aam
push
sub
mov
jmp
test
push
sub
mov
jmp
lods
fist
clc
mov
jmp
mov
mov
jmp
movs
fist
clc
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
push
sub
mov
jmp
mov
push
sub
mov
jmp
mov
push
sub
mov
jmp
mov
push
sub
mov
jmp
sbb
sub
mov
jmp
test
push
sub
mov
jmp
nop
fist
clc
mov
jmp
xchg
fist
clc
mov
jmp
push
mov
jmp
ins
fcom
clc
mov
jmp
pusha
fcom
clc
mov
jmp
fcom
clc
mov
jmp
js
push
sub
mov
jmp
jl
push
sub
mov
jmp
jo
push
sub
mov
jmp
je
push
sub
mov
jmp
dec
fcom
clc
mov
jmp
dec
fcom
clc
mov
jmp
inc
fcom
clc
mov
jmp
inc
fcom
clc
mov
jmp
pop
fcom
clc
mov
jmp
pop
fcom
clc
mov
jmp
push
fcom
clc
mov
jmp
push
fcom
clc
mov
jmp
sub
push
sub
mov
jmp
sub
push
sub
mov
jmp
and
push
sub
mov
jmp
and
push
sub
mov
jmp
cmp
push
sub
mov
jmp
cmp
push
sub
mov
jmp
xor
push
sub
mov
jmp
xor
push
sub
mov
jmp
or
push
sub
mov
jmp
or
push
sub
mov
jmp
sbb
push
sub
mov
jmp
sbb
push
sub
mov
jmp
adc
push
sub
mov
jmp
adc
push
sub
mov
jmp
call
mov
jmp
in
push
sub
mov
jmp
clc
fcom
clc
mov
jmp
cld
fcom
clc
mov
jmp
lock
clc
mov
jmp
hlt
fcom
clc
mov
jmp
enter
clc
mov
jmp
int3
fcom
clc
mov
jmp
rcr
sub
mov
jmp
(bad)
fcom
clc
mov
jmp
rcr
push
sub
mov
jmp
aam
push
sub
mov
jmp
test
push
sub
mov
jmp
lods
fcom
clc
mov
jmp
mov
mov
jmp
movs
fcom
clc
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
push
sub
mov
jmp
mov
push
sub
mov
jmp
mov
push
sub
mov
jmp
mov
push
sub
mov
jmp
sbb
sub
mov
jmp
test
push
sub
mov
jmp
cwde
fcom
clc
mov
jmp
pushf
fcom
clc
mov
jmp
nop
fcom
clc
mov
jmp
xchg
fcom
clc
mov
