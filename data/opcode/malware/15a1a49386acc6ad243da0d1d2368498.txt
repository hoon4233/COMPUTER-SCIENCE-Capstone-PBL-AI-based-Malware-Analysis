shr
mov
cmps
adc
xchg
ja
ret
stos
jbe
pop
jne
rol
jne
out
inc
cmp
arpl
lock
loopne
add
sub
ins
(bad)
jo
aaa
jnp
int3
add
xchg
js
lea
sbb
push
out
fs
cli
fs
mov
and
cli
retf
xor
adc
inc
test
es
xchg
jns
push
stos
dec
repnz
jmp
mov
cli
gs
test
ss
cmp
loop
xchg
xor
xor
(bad)
jg
test
dec
ret
xchg
jp
and
sbb
mov
jmp
cli
data16
push
aaa
inc
add
jecxz
pusha
xor
sbb
pop
das
fldenv
test
outs
lea
dec
cmp
shr
iret
push
out
shl
fwait
sbb
cmp
and
xor
dec
test
xchg
pop
push
mov
rcl
or
sbb
sbb
out
mov
loop
cmp
dec
xor
test
pop
pop
push
jmp
jo
in
ins
test
mov
cwde
mov
xor
sbb
pop
fwait
out
loop
cli
imul
pusha
and
jns
xor
xchg
push
pminub
fimul
cwde
mov
jo
mov
out
cmp
mov
pop
ja
cmp
sub
or
xchg
dec
xchg
pop
push
xor
sar
mov
mov
xchg
sbb
shr
pop
das
out
sub
sti
(bad)
cmc
xchg
push
cmp
hlt
and
test
fmul
mov
jno
and
test
and
lods
je
out
and
stc
out
dec
lods
sti
nop
sbb
cmp
in
(bad)
test
jnp
jno
inc
in
test
inc
dec
cwde
movs
adc
lods
jne
mov
and
psrlq
cmps
ret
out
jb
sti
xchg
cmp
mov
push
or
dec
mov
dec
pop
pop
lahf
add
push
test
push
cwde
cmps
xor
jl
inc
retf
das
shl
retf
(bad)
out
xchg
inc
sti
xchg
popa
cmc
push
aas
bound
cvtps2pi
ss
mov
pop
pop
ret
int3
jno
mov
cwde
cmps
pop
xchg
lods
ja
inc
rol
shl
out
push
out
mov
mov
and
push
shl
loopne
test
out
pop
pop
out
jno
mov
test
jl
cwde
test
pop
lods
js
adc
dec
adc
shl
adc
out
(bad)
sti
xchg
test
cmp
ss
dec
dec
mov
add
or
sub
mov
jl
jns
fcmovb
dec
aaa
mov
sbb
inc
out
add
pcmpgtd
gs
sbb
cs
cmp
jno
cli
fiadd
into
pop
jp
movs
ror
aam
es
(bad)
es
xchg
icebp
sbb
and
xchg
dec
mov
xchg
pop
sbb
test
call
adc
jg
aam
dec
(bad)
call
xchg
adc
fwait
and
stos
dec
ss
lods
dec
mov
popa
pop
test
jno
inc
jae
add
fisubr
dec
mov
mov
sti
cwde
cmp
and
iret
sbb
or
sub
fbstp
xor
cdq
sar
movs
lods
mov
(bad)
mov
sbb
pop
push
cld
mov
sub
and
repz
or
cmc
pop
xchg
pop
test
push
mov
lods
mov
mov
aam
mov
call
mov
dec
cli
and
pop
scas
aaa
or
popa
dec
fld
jae
inc
jge
dec
or
(bad)
scas
(bad)
fadd
xchg
mov
push
jmp
jecxz
mov
and
add
or
xchg
jae
inc
xchg
call
or
cwde
mov
jmp
in
xchg
xchg
pop
in
popa
sub
dec
add
pop
jae
mov
xchg
lds
leave
and
ret
mov
imul
push
adc
dec
bound
xor
push
dec
add
leave
pop
scas
jecxz
jae
scas
fild
push
inc
inc
scas
retf
ret
push
(bad)
push
or
push
(bad)
out
sbb
mov
into
and
jno
cmp
cmp
dec
add
xchg
pusha
rcl
inc
jae
shl
fwait
pop
push
outs
retf
int
mov
icebp
aaa
push
fild
mov
icebp
sub
out
aas
xor
add
mov
data16
mov
jp
jge
lea
jle
mov
movs
dec
cmp
push
dec
xchg
(bad)
adc
test
popf
loopne
adc
sbb
push
xchg
ja
arpl
fnsave
inc
xchg
mov
push
mov
(bad)
in
pop
fdiv
(bad)
xor
and
jno
cmp
xchg
dec
sub
cmps
je
or
push
or
scas
into
aam
ret
jge
dec
mov
cmp
(bad)
imul
jae
dec
and
push
out
aaa
pop
dec
mov
add
cmp
and
arpl
rcl
aam
cli
dec
out
cli
lods
sti
mov
(bad)
mov
xor
pushf
pop
test
jecxz
sbb
xchg
add
cmc
xchg
xchg
repz
inc
hlt
push
mov
mov
shl
mov
or
mov
xor
call
and
pop
out
mov
cmps
aad
iret
mov
push
test
loop
push
xchg
cmc
int
repz
push
sbb
sbb
das
neg
inc
(bad)
out
push
jb
je
inc
mov
jge
mov
xchg
mov
jg
mov
out
stos
fbstp
push
mov
sbb
loope
sub
pop
lods
fist
xchg
xlat
js
jp
jns
mov
add
iret
unpckhps
jnp
jae
dec
(bad)
out
neg
test
enter
je
xchg
sub
cmp
sar
ja
aas
sbb
xchg
or
mov
aad
lds
(bad)
cmp
loopne
out
in
mov
add
or
daa
fnstenv
adc
test
jno
push
add
jne
into
mov
xchg
pushf
dec
call
leave
gs
(bad)
jne
mov
std
icebp
xor
adc
std
(bad)
sbb
cmp
enter
leave
dec
jb
xchg
inc
loop
adc
sub
ror
sub
out
sub
cli
xchg
xchg
or
add
movs
xor
ret
add
mov
ins
(bad)
sti
(bad)
jg
cld
and
or
fsub
xchg
dec
loope
pop
cld
hlt
scas
pop
pop
or
sub
sub
inc
test
jge
push
neg
imul
in
nop
mov
(bad)
push
enter
cwde
and
icebp
inc
and
add
shr
sub
mov
inc
push
jmp
xchg
xchg
mov
mov
jl
pop
push
fcmovu
sub
jmp
lahf
adc
xor
mov
dec
and
dec
jg
retf
popf
jbe
xchg
mov
jecxz
(bad)
repnz
fadd
scas
push
jmp
scas
mov
ds
adc
jp
es
inc
fmul
adc
mov
popf
xchg
sti
fwait
das
test
scas
fld
imul
je
jmp
sar
xor
add
push
or
cld
or
pop
js
mov
dec
mov
les
jo
(bad)
mov
in
cmp
out
add
stc
push
shr
xor
pushf
sbb
outs
frstor
or
xor
mov
cmp
fs
retf
into
xchg
jbe
jp
aam
dec
popa
mov
out
mov
sub
push
xchg
out
clc
or
push
sbb
push
lds
out
sub
pop
arpl
sbb
pop
popf
fbld
push
inc
mov
scas
push
pop
repnz
repz
pop
mov
in
stos
mov
jnp
div
daa
push
push
add
and
pop
movs
and
je
sbb
and
ja
lock
gs
mov
cmp
mov
xchg
dec
lods
(bad)
sbb
adc
mov
add
out
sub
mov
cmp
jge
bound
jle
jbe
dec
push
mov
adc
mov
adc
sub
movs
loopne
jmp
stos
cmp
and
and
outs
inc
pop
dec
sbb
pop
mov
xchg
push
iret
xchg
sub
lods
mov
movs
repnz
cmps
push
call
mov
bound
arpl
and
cmp
ror
or
jo
aam
adc
cmc
xchg
cmps
lahf
test
mov
iret
imul
lahf
ss
dec
aaa
sub
add
pop
enter
cwde
int
inc
inc
into
dec
pop
lock
lods
ins
rcr
xchg
cmp
jb
call
xor
xor
xchg
cmc
loopne
repz
enter
xchg
mov
push
test
pop
sub
pusha
xchg
jge
cdq
mov
stc
imul
bnd
mov
sbb
(bad)
into
sub
outs
pop
loopne
ds
addr16
mov
add
loop
adc
fcomp
daa
out
or
cmp
xchg
sub
dec
cmp
shr
pop
fs
mov
mov
mov
lahf
retf
add
inc
dec
xchg
fpatan
dec
lock
lahf
dec
dec
add
add
sbb
pusha
daa
in
jecxz
cmp
scas
and
jne
jp
mov
inc
dec
scas
or
cmps
ret
fcom
pop
(bad)
mov
mov
std
add
retf
fisubr
and
test
cmp
je
pop
test
inc
add
cmc
or
lods
mov
xlat
and
sbb
mov
xchg
push
push
inc
and
outs
movs
xor
xchg
cmp
outs
push
push
leave
cmp
fisubr
push
popf
in
shl
push
pop
or
xor
push
stos
xor
xor
and
add
ins
mov
int3
out
xchg
pop
xchg
mov
mov
inc
arpl
loope
cs
hlt
ret
cs
sbb
ss
adc
jmp
nop
cld
imul
xchg
mov
mov
xor
jle
fsubr
(bad)
lods
repz
icebp
pop
hlt
in
add
aad
jmp
mov
push
and
data16
and
and
lea
xor
mov
in
inc
enter
fild
pop
out
in
mov
push
push
enter
jl
out
ficom
in
gs
mov
js
mov
mov
jl
lahf
sar
mov
dec
sbb
cli
dec
ja
retf
add
mov
fistp
repz
dec
outs
stos
lods
bound
jbe
jne
jbe
mov
inc
shl
jecxz
loop
(bad)
push
inc
jmp
push
adc
movs
add
cmp
pop
dec
add
jne
aam
sub
cmp
xchg
cmp
int3
ror
shr
out
sahf
mov
push
jno
into
and
xor
ds
imul
push
and
add
cmp
cdq
jae
mov
fs
xor
xor
xor
cld
push
pop
inc
mov
cmp
xchg
es
sub
mov
pop
call
sub
inc
idiv
inc
ret
ror
xchg
mov
jge
pop
xchg
nop
mov
and
retf
arpl
mov
push
icebp
pop
lock
xor
xchg
xchg
aas
pop
xchg
data16
stos
jp
sbb
mov
mov
jmp
sub
dec
mov
out
hlt
mov
add
xor
jno
dec
sub
add
pop
adc
ja
jecxz
mov
jecxz
popf
xchg
in
mov
scas
xchg
les
jp
jmp
jnp
call
mov
es
adc
cmp
fstp
pusha
(bad)
fnstsw
je
test
xchg
dec
fwait
dec
je
mov
or
les
aam
xlat
mov
lahf
sar
mov
loop
mov
inc
cmp
aaa
push
pusha
inc
push
jae
add
int
call
sub
mov
fs
pop
gs
sti
retf
test
dec
xor
ss
mov
pop
xchg
(bad)
into
jo
enter
xchg
loopne
mov
pop
repnz
or
add
mov
(bad)
stc
test
adc
and
shl
lods
rol
sub
dec
and
and
mov
popf
out
int3
loop
lock
sbb
cmp
xchg
xchg
xor
dec
inc
adc
push
mov
sbb
jb
or
and
mov
xor
dec
repz
and
sub
sti
push
ins
inc
cmps
pop
retf
push
ja
jle
and
fdivr
nop
(bad)
lahf
scas
out
mov
sbb
leave
(bad)
jp
fst
inc
jo
adc
and
rcl
sub
fst
gs
jae
mov
mov
add
imul
or
sub
fucomi
cld
aad
add
mov
(bad)
cmp
ins
mov
mov
cmp
jbe
cmp
mov
add
popf
cdq
add
mov
iret
out
adc
call
cmp
imul
mov
jnp
ss
popa
sub
loop
cli
xchg
xchg
xchg
xchg
push
scas
(bad)
xchg
mov
into
pop
fs
pusha
ret
sub
imul
aam
(bad)
test
inc
ret
out
ret
mov
mov
test
pop
mov
stos
xchg
pop
jns
arpl
mov
fcomip
ds
mov
pushf
or
or
bound
mov
pop
push
push
je
add
rcr
xchg
dec
jmp
enter
je
pop
test
push
ror
dec
sub
sbb
pop
jmp
jecxz
jg
in
xchg
xor
scas
pusha
mov
pop
jnp
loopne
jl
hlt
fld
pop
xchg
sbb
xchg
add
hlt
inc
rcr
cmps
push
jle
add
jl
test
retf
mov
inc
inc
(bad)
repnz
cmp
ret
icebp
outs
or
add
jmp
pop
sub
mov
jo
adc
jns
outs
loopne
pop
cmp
fild
add
push
shl
add
pushf
leave
adc
push
push
cmp
xor
arpl
dec
ja
(bad)
dec
(bad)
retf
jo
outs
lds
and
in
xchg
sub
popa
xor
push
arpl
es
movs
cmp
stc
mov
or
(bad)
mov
add
pop
jmp
sbb
std
daa
pop
adc
repnz
and
ins
aaa
dec
mov
jle
(bad)
mov
jno
mov
cwde
out
push
mov
mov
push
and
out
in
kmovb
and
ud1
inc
mov
outs
pop
push
pop
adc
or
test
jmp
jl
iret
mov
jecxz
mov
test
mov
xor
inc
inc
adc
pop
lock
ins
rcr
jg
loopne
xchg
cmp
mov
xchg
lods
inc
int
ja
loopne
js
hlt
loopne
or
lea
sbb
sbb
inc
(bad)
cs
test
mov
movs
inc
jl
cmps
sahf
nop
shl
mov
dec
cmp
retf
ret
pop
jbe
jne
aam
inc
rol
sub
sahf
cdq
aas
outs
lahf
not
push
jmp
xor
sbb
loop
sub
fistp
ds
or
pushf
add
cwde
push
adc
push
bound
rcl
je
jg
shl
sti
test
retf
(bad)
xchg
mov
(bad)
cmc
lds
test
in
ret
pop
mov
adc
int
in
sub
cmp
cmp
cmp
lock
ror
mov
fwait
pusha
mov
or
mov
aad
pop
shr
pop
and
aad
xchg
and
mov
add
jno
xchg
test
retf
cwde
cmc
push
sub
sbb
out
out
call
add
cmp
xor
jg
dec
mov
and
bound
outs
xor
ss
xchg
xchg
scas
loope
test
sub
mov
cmps
js
not
leave
or
jns
push
iret
inc
(bad)
jnp
cmp
adc
pop
not
dec
ins
(bad)
(bad)
jg
fcomp
cmps
adc
mov
jae
loope
ds
out
xchg
or
or
loopne
mov
mov
imul
ins
jnp
fsubr
test
lea
and
lahf
(bad)
add
repnz
iret
push
sbb
iret
ins
sub
call
inc
data16
xchg
jp
xor
xor
mov
std
mov
mov
leave
(bad)
xchg
jns
loop
xlat
push
mov
mov
pop
pusha
jmp
push
fisubr
sti
arpl
test
rol
push
mov
ret
jl
dec
mov
fdivr
mov
push
mov
es
gs
outs
icebp
ret
popa
aas
mov
aad
mov
mov
scas
aaa
push
fwait
ret
stc
(bad)
mov
lods
jmp
das
jmp
lods
mov
aaa
pop
mov
dec
add
mov
add
push
dec
push
cwde
cld
dec
mov
int3
sbb
sbb
ror
jne
hlt
in
cli
les
in
inc
jnp
xor
jnp
dec
mov
add
jne
iret
mov
pushf
lea
das
ret
or
(bad)
mov
inc
jmp
push
adc
std
push
and
std
cmp
sbb
leave
jbe
cli
xchg
sub
xchg
mov
and
lods
repnz
sahf
sub
sbb
mov
push
xchg
ret
inc
ret
sub
dec
mov
pop
rep
cmp
or
add
stos
xchg
push
mov
add
clc
jg
cmp
sub
cwde
pop
cld
push
dec
xor
push
pop
pop
and
mov
and
and
cwde
xor
cmc
adc
add
ror
xchg
sbb
inc
or
in
push
scas
cmp
mov
xchg
add
add
mov
sub
adc
aad
jo
or
sbb
call
jp
repnz
es
ins
shl
jg
push
shl
xor
int
jmp
loopne
add
push
jnp
dec
sbb
std
sub
mov
cwde
ins
addr16
cdq
retf
jp
cdq
sub
inc
cmp
neg
outs
xor
add
xor
cwde
std
sbb
inc
(bad)
js
lock
(bad)
dec
pushf
push
ins
retf
sbb
inc
mov
retf
movs
pushf
xchg
xchg
pop
scas
inc
xchg
mov
in
xchg
adc
mov
arpl
cld
adc
test
shl
das
xchg
ss
xor
mov
cld
arpl
loope
jne
(bad)
enter
xchg
xchg
or
clc
test
or
pusha
push
push
fisub
xor
sub
pop
push
sub
(bad)
jg
clc
xor
cs
xchg
cmps
inc
inc
mov
push
lds
loopne
nop
mov
rcl
jb
sub
test
pop
loop
push
pop
inc
and
hlt
jp
sub
jnp
mov
daa
sub
mov
cmc
rol
neg
fimul
jge
pop
ret
int3
ret
js
in
sub
mov
dec
mov
pop
adc
pop
outs
mov
pop
int
je
sub
lock
cmp
jmp
sbb
lods
pextrw
and
push
dec
in
sar
rcr
imul
stos
xchg
pop
cld
mov
jmp
and
mul
retf
sub
mov
cmp
xchg
push
out
cmc
imul
pop
xchg
push
mov
ret
mov
ss
fsubp
mov
repnz
out
pop
push
inc
sbb
pop
mov
aas
xchg
mov
xor
add
(bad)
jns
out
and
pop
lock
mov
repnz
mov
add
lods
mov
pop
mov
es
push
cmp
push
ror
push
xor
push
mov
inc
xchg
and
lods
add
pop
rcl
paddq
out
out
retf
sti
clc
mov
frstor
push
mov
cdq
dec
int
dec
pop
jns
stos
outs
dec
push
pop
adc
mov
cmps
sub
xlat
into
movs
push
xor
cmc
and
inc
or
and
cs
imul
adc
mov
out
sar
test
jbe
inc
mov
mov
push
fcomp
mov
add
push
ret
push
and
jae
jle
inc
pop
xor
pop
nop
arpl
and
in
call
outs
in
mov
xlat
jmp
int
xchg
mov
mov
adc
cmp
aaa
ins
xchg
dec
cmp
lods
pop
call
push
imul
mov
jmp
jmp
jmp
or
mov
pop
or
mov
inc
mov
sub
xchg
test
xchg
pop
dec
cwde
cmps
or
mov
test
or
xor
repz
push
mov
aad
push
jmp
xchg
push
xor
fidiv
mov
push
adc
(bad)
scas
or
jle
sub
dec
loope
xlat
dec
aas
adc
push
sbb
call
scas
dec
stos
sbb
jne
out
mov
out
pushf
mov
mov
ret
in
(bad)
retf
jle
jmp
and
mov
ss
dec
int3
dec
clc
dec
sub
pop
fidiv
sbb
and
call
in
mov
hlt
in
in
mov
div
jns
sbb
jl
xor
jle
pop
adc
dec
pop
jle
dec
mov
sbb
movs
jmp
push
daa
retf
inc
pop
test
adc
cmp
mov
jecxz
sbb
in
sub
scas
push
aas
xchg
scas
fs
ds
pushw
jnp
jns
jnp
mov
xor
loop
inc
(bad)
mov
ficomp
push
in
or
add
adc
and
fnstsw
or
lods
xchg
je
lods
icebp
xchg
scas
lods
scas
das
jns
rcr
mov
call
add
push
mov
lea
adc
xor
fcom
std
pop
test
pop
outs
push
fimul
add
ins
xchg
lods
(bad)
test
sub
cmp
movs
jbe
not
dec
or
ja
sbb
js
xor
mov
push
rol
mov
adc
movs
leave
fistp
retf
push
(bad)
fnsave
add
test
and
ds
aaa
push
push
jbe
fs
js
inc
cmps
mov
add
mov
or
jne
sbb
shr
jmp
adc
inc
and
mov
cmps
mov
pop
test
jb
test
xchg
je
lods
jmp
faddp
mov
inc
lock
inc
dec
cli
jecxz
add
cmp
mov
inc
mov
fldcw
and
movs
popf
cmps
cmp
scas
into
mov
or
hlt
or
leave
or
cmp
fld
xor
or
push
mov
dec
push
sub
(bad)
mov
mov
fdiv
add
mov
pop
movs
out
sub
push
(bad)
outs
clc
sub
jno
push
(bad)
cmp
stos
cmp
jbe
cmp
fcomp
jle
xchg
les
inc
xlat
cli
aam
jmp
popa
adc
mov
jae
jnp
ror
ins
test
ins
jecxz
mov
cmp
cwde
pop
cmp
retf
cmp
rol
ret
in
push
and
lahf
pop
jg
jo
xor
sbb
nop
xor
shr
inc
je
dec
pop
inc
lahf
add
pop
jg
mov
jo
sbb
les
xchg
aaa
loopne
inc
cmp
repz
cmp
imul
inc
rol
addr16
rcr
mov
popf
jmp
adc
cmps
fisttp
push
add
push
adc
bound
sub
push
aaa
xchg
add
bound
add
mov
into
stos
pushf
mov
or
or
(bad)
(bad)
ficomp
(bad)
cld
xor
and
push
add
xor
sub
jb
(bad)
jmp
mov
daa
int3
xchg
in
int3
repz
push
or
scas
push
cld
cwde
arpl
test
rol
pop
and
shl
pop
fiadd
and
stos
lods
and
mov
sub
pop
in
lock
or
iret
push
std
mov
mov
mov
pop
and
mov
jg
push
scas
xchg
dec
push
or
mov
jne
jge
and
fcomi
int
cmp
sahf
in
in
sbb
dec
sub
out
test
(bad)
mov
mov
jns
mov
sub
repnz
mov
push
clc
in
sbb
(bad)
push
mov
xchg
pop
push
cmp
and
mov
in
xor
xchg
in
icebp
fwait
xchg
mov
add
jmp
popa
aad
test
sti
adc
test
nop
push
jecxz
cmp
inc
dec
call
sbb
mov
adc
setbe
jmp
and
mov
jecxz
mov
mul
out
or
add
mov
mov
push
dec
into
jge
push
sub
or
movs
fstp
ds
sbb
retf
cli
fiadd
call
or
jmp
sbb
xor
inc
dec
mov
cmps
lahf
es
pop
mov
dec
mov
fsubr
dec
jne
cli
sbb
jmp
sbb
es
cwde
cmp
out
dec
jnp
push
pusha
dec
mov
jae
mov
xchg
mov
lods
pop
jg
ror
xor
ja
xchg
out
dec
inc
cli
repz
movs
or
dec
dec
pusha
xor
sbb
enter
je
shr
in
xor
in
cmps
dec
out
mov
or
pop
jecxz
inc
mov
or
adc
xor
fidivr
push
or
cwde
push
fcomip
jle
stos
stos
xchg
xor
mov
sbb
pop
ja
fiadd
js
add
cs
inc
sub
inc
movs
aas
stos
addps
adc
jns
fcmovnb
mov
and
mov
fucom
(bad)
cmps
test
fst
repz
(bad)
test
add
es
jbe
cmp
inc
jne
mov
inc
xor
inc
pop
ja
mov
shl
mov
lahf
ficom
out
fld
sbb
and
cmps
fidiv
lock
pop
pushf
jae
outs
dec
je
sbb
pusha
xchg
les
mov
mov
in
or
loop
or
cmc
inc
or
popf
sbb
fdivr
das
ins
fstp
cmp
movs
imul
leave
jge
jo
nop
adc
mov
lea
fucom
cmp
pop
add
or
sub
aad
push
ss
mov
out
mov
inc
mov
clc
sahf
or
mov
xchg
fdiv
outs
(bad)
jmp
outs
and
mov
adc
ss
mov
repnz
add
pop
das
or
fisttp
bound
push
aam
lods
add
sar
jg
jecxz
sub
lahf
or
push
ins
mov
add
inc
lods
outs
ins
pop
jl
and
cmp
clc
add
xchg
enter
je
inc
mov
int3
rol
loop
pushf
mov
dec
popf
adc
cmc
popf
jo
lds
das
jno
add
loopne
in
xor
imul
ss
mov
ins
add
leave
sbb
push
fucomp
int
lock
into
das
add
lea
out
iret
jmp
mov
fwait
std
push
push
pushf
pop
fs
emms
xchg
ins
mov
push
jg
mov
xor
xlat
adc
dec
dec
add
and
mov
sbb
int
pop
xor
mov
aaa
call
mov
pop
rcr
mov
das
xor
(bad)
enter
and
fnstenv
add
aaa
inc
mov
xchg
pop
pop
push
ins
sub
cmps
sbb
add
cmps
push
xchg
pop
mov
lods
xchg
shl
pop
cwde
xor
sub
pop
aad
inc
sbb
das
push
inc
std
das
mov
test
xor
and
cld
and
enter
enter
leave
dec
out
push
retf
and
mov
cmp
popa
ror
popa
bound
sub
sahf
pushf
retf
mov
stc
scas
ret
inc
cli
or
jmp
outs
(bad)
jge
sbb
(bad)
mov
in
dec
inc
xchg
dec
pop
out
xchg
test
test
mov
stos
ret
pusha
ja
xchg
sub
sar
sub
in
sub
clc
mov
clc
clc
push
adc
push
xor
stc
mov
nop
les
cmp
(bad)
imul
and
mov
xchg
movs
adc
repnz
mov
fistp
pop
add
in
bound
mov
push
sbb
je
or
sub
push
mov
jecxz
xor
neg
mov
or
shufps
and
xor
fst
pop
xchg
daa
pop
pop
out
cmp
pop
dec
dec
(bad)
daa
add
sub
sub
fwait
stos
hlt
into
scas
push
cmc
sub
add
mov
rol
ds
sub
cli
psubq
xor
and
pop
iret
pop
jl
jnp
fiadd
mul
dec
mov
pop
repnz
jecxz
repnz
or
jne
hlt
mov
xchg
shl
sbb
cdq
push
mov
jge
mov
inc
push
or
pop
(bad)
pop
and
sbb
icebp
les
sbb
inc
sub
lock
ds
icebp
add
repnz
gs
mov
rcr
jmp
mov
inc
mov
(bad)
mov
push
push
cmp
ret
and
dec
xchg
and
(bad)
out
xor
out
pop
lock
lods
ss
pop
ror
xchg
or
sub
arpl
cmp
pop
mov
outs
pop
and
xchg
mov
imul
fucomi
fsub
xchg
ss
push
mov
dec
sbb
test
sub
mov
push
push
push
sub
lods
push
in
jl
cwde
leave
sub
neg
aam
push
lock
jmp
std
jmp
sub
mov
push
and
mov
inc
mov
mov
mov
test
jne
adc
and
jmp
adc
sbb
aas
cmp
call
push
pop
push
jmp
call
stos
repnz
mov
outs
or
mov
pop
inc
dec
pop
xor
dec
mov
pop
imul
ins
pop
sbb
jg
sbb
xchg
xchg
out
cmps
aas
call
test
addr16
repz
sbb
nop
cmp
adc
push
mov
dec
inc
jp
dec
movs
mov
sbb
mov
mov
cmp
adc
(bad)
test
or
mov
sub
mov
dec
add
jle
jne
jg
mov
dec
aam
test
ret
nop
(bad)
add
inc
jmp
pop
sbb
adc
jecxz
and
jecxz
ss
dec
cs
pop
(bad)
scas
xor
mov
xchg
es
stos
sar
jle
lods
ror
popa
in
dec
mov
or
rcr
and
lea
jmp
dec
loope
imul
cld
or
inc
mov
mov
jecxz
sub
mov
(bad)
pop
fnstcw
or
cdq
sbb
movs
dec
das
mov
or
jno
imul
jae
mov
test
jmp
fld
or
lock
or
pop
or
sub
(bad)
enter
es
sub
mov
xchg
mov
hlt
popf
add
push
les
xlat
sub
jmp
cmp
movs
cmp
adc
xor
into
or
or
jb
aam
test
(bad)
outs
lods
push
mov
adc
inc
hlt
jmp
adc
std
daa
imul
cmp
sar
xchg
mov
je
lea
xchg
lea
scas
addr16
cdq
rcl
not
mov
pop
mov
cmp
addr16
call
daa
and
sub
pop
mov
hlt
lock
pusha
mov
call
ret
lea
or
mov
imul
pop
push
cmp
daa
retf
daa
sub
adc
in
loope
xchg
out
(bad)
hlt
cmc
add
cmc
push
adc
mov
gs
rol
push
ret
mov
ret
fisttp
loop
out
scas
mov
stos
(bad)
or
jmp
bound
minps
fbld
sub
dec
aaa
sub
pop
jecxz
inc
jo
hlt
cli
sbb
xchg
or
mov
mov
adc
xchg
enter
jl
daa
push
xor
rcl
or
pop
dec
xor
and
inc
test
pop
pop
push
and
sbb
lock
xchg
jl
sub
aam
in
movs
mov
div
cld
mov
or
jns
addr16
mov
aas
ror
xlat
dec
push
xor
mov
and
(bad)
int
popa
fnstcw
mov
add
lock
mov
repnz
push
mov
sahf
pusha
jbe
cld
jae
mov
push
call
retf
mov
aam
push
fsub
jb
cmp
push
pop
cwde
push
out
and
and
inc
repz
pop
ret
out
sbb
lock
sbb
aad
(bad)
icebp
xor
inc
mov
mov
cmc
imul
sbb
mov
jo
iret
inc
inc
push
adc
loope
cwde
push
aas
jnp
pop
popf
(bad)
adc
push
mov
ins
and
enter
fsubr
out
push
out
xchg
lock
inc
icebp
ficom
mov
mov
test
in
pop
jbe
mov
pushf
jmp
push
sub
gs
mov
adc
jmp
lea
clc
adc
and
out
mov
xchg
and
dec
(bad)
out
lds
lock
lock
loop
icebp
mov
cmp
popa
div
mov
xor
push
das
inc
mov
push
aaa
push
jmp
pop
and
xchg
sub
movs
das
out
push
mov
stos
mov
jle
add
nop
sbb
xchg
xchg
push
push
mov
mov
sub
sub
mov
aam
call
in
push
in
stc
add
in
push
adc
mov
(bad)
dec
sar
xor
xchg
test
lods
push
xchg
and
aam
push
arpl
jns
sar
push
pop
push
neg
shl
mov
and
pop
retf
outs
jbe
inc
into
in
mov
mov
idiv
fdivp
jb
cmp
pop
xchg
das
fwait
push
lods
inc
inc
push
or
push
push
jl
push
jp
sbb
fsub
jae
xchg
leave
inc
jmp
fsubr
jmp
out
fwait
in
add
dec
in
popa
push
sbb
jae
jo
ror
mov
jecxz
cwde
test
inc
xchg
mov
push
mov
ins
push
(bad)
sbb
jmp
xchg
push
jg
inc
pop
frstor
in
pop
cmp
mov
jmp
pop
adc
in
or
mov
js
xchg
mov
mov
adc
inc
or
movs
push
cmp
xor
push
mov
xchg
push
adc
ds
jb
push
push
es
push
test
adc
inc
mov
mov
push
fidivr
in
scas
repnz
rcr
mov
jge
fild
(bad)
gs
test
js
test
mov
call
or
lds
sbb
sub
fistp
mov
mov
out
pop
jmp
mov
push
pop
pusha
in
mov
xor
(bad)
cdq
mov
add
test
shl
test
cli
sub
cmps
or
test
xor
push
rol
je
lods
sbb
xor
aad
inc
cmps
sub
std
int
jmp
loope
mov
hlt
push
mov
pop
add
sub
jle
fld
test
push
(bad)
test
jnp
push
stos
mov
push
or
push
push
(bad)
sbb
xlat
out
jle
xor
adc
cmps
jmp
and
adc
jnp
jb
daa
mov
test
dec
test
sti
test
cld
ja
mov
and
push
and
push
ins
mov
sbb
fsubr
push
cmp
and
dec
test
js
pop
ror
mov
mul
mov
mov
leave
and
jne
inc
push
and
push
jge
push
mov
dec
push
adc
sbb
retf
sbb
push
loope
in
call
repnz
inc
jmp
ret
push
outs
mov
sbb
jl
xchg
xor
inc
or
call
jmp
push
pop
inc
push
mov
and
jmp
sub
sbb
cmp
jmp
neg
cmp
rcl
in
mov
stc
jb
xor
xor
icebp
inc
in
movs
pop
nop
dec
add
popa
jg
push
mov
cmps
fs
mov
loopne
loop
mov
inc
repz
sahf
push
in
cld
sbb
mov
inc
or
mov
mov
xor
cmp
lea
dec
(bad)
or
fidiv
push
add
sbb
adc
sbb
mov
cmp
sbb
out
mov
inc
je
jmp
add
xchg
jno
add
cmp
and
pop
cmp
xlat
dec
repz
das
dec
scas
pop
fisttp
outs
stos
sbb
adc
xchg
add
mov
sub
in
loop
call
test
push
mov
sbb
mov
das
lods
mov
inc
pop
mov
push
sub
mov
out
sub
inc
mov
test
push
leave
push
dec
mov
add
lock
mov
sbb
sub
sub
out
cmp
push
call
dec
ja
mov
mov
popa
popf
and
mov
les
sub
std
movs
sub
jbe
lahf
and
dec
std
aaa
into
dec
pop
dec
jp
mov
jno
sbb
test
out
lods
inc
mov
mov
call
stc
push
jle
or
jle
pop
outs
jg
xor
cmp
dec
sub
xchg
dec
mov
call
xchg
mov
sbb
pop
sbb
loopne
in
repz
in
push
in
in
sbb
mov
inc
adc
repz
shl
jp
jle
(bad)
call
jg
mov
dec
rol
adc
fidivr
in
add
pop
mov
daa
xchg
sbb
cmp
in
popa
mov
in
xchg
out
fwait
loope
cmp
lea
clc
aam
mov
call
popa
jle
push
push
jg
and
dec
fmul
dec
ss
loop
xchg
outs
mov
dec
sbb
xchg
or
add
mov
bound
in
loop
in
cmc
mov
das
or
jecxz
pop
mov
das
mov
lahf
inc
pop
mov
push
das
jge
imul
jle
(bad)
xor
mov
scas
dec
(bad)
pop
dec
cmp
pop
dec
cdq
lock
push
dec
add
or
add
mov
push
pop
in
arpl
mov
sub
inc
mov
mov
les
jge
jmp
jb
jge
es
dec
test
aad
loop
or
jno
push
push
test
sbb
stos
and
jecxz
sar
jge
sub
(bad)
stc
scas
(bad)
or
mov
xor
mov
inc
into
jl
pop
jp
mov
pushf
add
ss
add
sbb
add
add
adc
add
cmp
add
push
add
pop
lods
pusha
pushf
add
add
xchg
ja
retf
add
outs
pop
(bad)
ds
lock
mov
adc
(bad)
adc
fcomp
add
adc
mov
test
lods
rcl
jbe
mov
xor
pop
ins
bound
ffree
pop
(bad)
je
dec
jno
and
shl
push
add
cmp
add
cmp
add
(bad)
jge
imul
jge
fidiv
inc
push
jmp
pop
mov
add
xchg
push
ins
test
xchg
fisubr
movs
fdivr
xchg
cmc
jecxz
(bad)
ins
adc
and
xor
push
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmps
push
js
shl
fwait
inc
xor
push
test
stos
rol
test
lods
(bad)
iret
sbb
push
jb
jl
ret
and
mov
lods
scas
(bad)
mov
xor
push
add
or
mov
pop
and
xchg
and
cs
sub
mov
fidivr
shr
stc
push
mov
xor
pop
mov
sbb
ret
bound
mov
inc
inc
out
jo
pop
cmps
in
into
xor
mov
sbb
enter
shl
mov
inc
call
sbb
shl
fwait
or
pop
cdq
rcl
xor
push
add
in
xor
cmp
add
cmp
add
cmp
add
xor
shl
push
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
loop
or
xor
push
add
cmp
add
cmp
add
fwait
pop
jno
imul
mov
iret
aaa
inc
jecxz
mov
loopne
rcl
xor
push
add
cmp
bound
hlt
mov
clc
inc
lea
pusha
xor
rcl
xor
push
add
xor
or
hlt
mov
retf
sbb
addr16
movs
jb
movs
sub
out
push
rcl
xor
push
add
sbb
shl
jae
xor
lock
bound
pop
mov
data16
cli
iret
lds
cmp
cmps
rcl
shl
push
add
push
xor
addr16
mov
pop
loop
fisttp
fstp
stos
add
sbb
xor
push
add
xor
sbb
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
out
ss
mov
add
in
mov
dec
sbb
sub
mov
(bad)
fadd
jmp
push
clc
adc
fwait
or
inc
sub
in
xchg
imul
test
sub
dec
pop
clc
out
out
inc
xor
sub
mov
or
in
call
push
das
int3
ds
mov
in
jg
mov
adc
dec
mov
cmps
fst
or
in
scas
test
neg
push
cmp
xlat
sub
mov
adc
popa
sub
jg
call
jmp
adc
cmp
mov
popf
pop
jno
neg
sar
movs
js
loope
jmp
push
lock
test
pop
fwait
jmp
lahf
nop
arpl
cmp
jbe
fnstsw
(bad)
and
stos
sub
mul
aam
in
sbb
std
mov
inc
sbb
aad
retf
inc
xchg
(bad)
pushf
pop
(bad)
sahf
aaa
sbb
adc
icebp
inc
inc
ins
mov
sahf
mov
aad
xchg
rol
pop
xchg
shr
sbb
(bad)
lods
or
pop
cdq
add
xor
inc
jge
cli
adc
ins
jmp
fsubr
xchg
cmp
adc
int
call
in
lds
push
fnstsw
call
mov
push
inc
sbb
adc
xor
add
pop
test
jl
icebp
sti
xlat
mov
in
inc
xchg
jo
jmp
dec
sar
push
mov
add
outs
jle
stc
mov
loope
(bad)
out
push
sub
mov
cmp
cmp
in
xchg
xchg
and
in
loopne
stc
sti
adc
fdiv
inc
in
sub
xchg
adc
mov
mov
leave
push
outs
pmaxsw
(bad)
xlat
dec
mov
sub
jl
sub
mov
sub
outs
je
pop
in
mov
push
push
js
fcom
nop
inc
xchg
inc
out
js
cmp
dec
movs
xchg
aaa
mov
sub
xchg
xchg
cld
imul
mov
push
cmp
clc
fiadd
fsubr
push
dec
in
mov
mov
cmps
pop
div
dec
(bad)
lahf
sbb
bound
jl
popf
sbb
mov
pop
mov
in
pop
out
jmp
mov
dec
xchg
and
jl
cli
dec
jb
xchg
dec
movs
sar
out
sub
(bad)
nop
pusha
xor
rol
add
mov
pop
addr16
(bad)
aas
or
cmc
and
jl
lahf
out
popa
adc
xchg
push
ins
movs
int
push
fild
stc
sub
shl
push
inc
sahf
fs
ror
mov
adc
aad
xchg
cmc
jle
adc
push
jge
sar
ins
mov
stos
xchg
fimul
mov
lods
sbb
fidiv
pusha
dec
inc
dec
outs
lods
ret
bound
rol
aaa
inc
mov
and
les
rol
ret
bound
jnp
pop
js
and
mov
aam
mov
das
sub
in
and
leave
fsub
or
hlt
scas
mov
pushf
mov
and
push
mov
sahf
inc
pop
fmul
mov
retf
push
jmp
sahf
pop
cld
stos
xcrypt-ecb
cmps
int
into
into
outs
cmp
shr
push
sbb
shr
daa
and
bsf
(bad)
jne
fwait
dec
sbb
mov
imul
cmps
mov
push
push
dec
push
dec
add
imul
arpl
sub
push
ds
les
xchg
pop
std
jne
popa
fldenv
sub
or
xor
rcr
sub
xchg
push
hlt
xchg
sub
mov
out
adc
scas
(bad)
mov
pop
and
js
dec
mov
dec
mov
push
imul
mov
jge
(bad)
js
mov
sbb
mov
mov
xlat
(bad)
cmp
(bad)
je
and
xchg
jne
inc
inc
jae
repnz
push
sub
ins
xor
(bad)
pop
dec
pop
xchg
out
add
in
push
cmp
dec
cmp
loopne
fs
sub
inc
mov
stc
push
out
pop
mov
repz
out
lods
ins
shr
dec
fist
mov
pop
xor
sub
or
jae
in
std
out
push
lds
inc
dec
xlat
pop
add
test
sbb
xchg
pop
int
stos
or
mov
call
pop
(bad)
cmp
mov
and
fs
mov
dec
mov
mov
fist
adc
pop
and
stc
getsec
mov
aam
ret
fcmovb
les
xchg
or
cmp
(bad)
std
call
push
frstor
cmc
in
sti
pop
fdivr
adc
xor
repnz
loope
sub
mov
ficom
out
rol
jg
loop
mov
inc
pop
clc
cli
test
stos
dec
pop
dec
test
cli
loop
call
rcl
inc
lods
ins
ror
fst
imul
and
adc
mov
sbb
mov
mov
mov
lods
inc
cli
add
lahf
and
pop
sub
cmp
pop
sub
sub
push
and
arpl
inc
mov
add
push
mov
push
dec
push
je
jmp
push
jnp
dec
dec
cmp
xor
pop
arpl
push
sbb
mov
xchg
or
out
ffree
jne
scas
movs
pop
inc
dec
mov
pop
retf
inc
inc
inc
cmc
imul
fucomi
xor
nop
je
ins
bound
pusha
sbb
test
dec
bnd
jmp
fistp
bound
pop
sub
jecxz
imul
mov
push
cmp
aaa
sbb
push
cs
shr
cdq
add
into
sbb
inc
sbb
leave
test
xor
pop
jne
repz
in
outs
fsub
jnp
xor
cmps
mov
add
xor
mov
push
push
cwde
cwde
dec
aad
push
sti
push
test
iret
aad
sti
add
xchg
stos
popa
inc
sbb
stos
sub
push
sub
xchg
inc
fstp
fsub
or
in
or
in
mov
or
xor
mov
pop
es
retf
xchg
in
fcomp
ds
cmp
xchg
dec
pop
xchg
dec
(bad)
in
inc
shl
es
pop
add
and
ffree
data16
je
pop
and
xchg
lds
xor
and
ins
jbe
xor
mov
out
in
fdiv
imul
mov
fs
or
leave
ret
mov
sbb
mov
xchg
sbb
xlat
in
add
aam
pop
pop
mov
jp
pop
daa
(bad)
call
push
jecxz
cwde
add
pop
mov
add
adc
pusha
push
add
cmps
inc
sti
lea
dec
sahf
les
mov
jp
stos
sub
mov
scas
lds
jp
nop
shl
jb
mov
or
cmp
pop
jge
mov
nop
jg
mov
mov
call
cmp
dec
cs
out
movs
retf
loop
dec
add
sub
dec
push
jb
mov
jne
push
adc
daa
mov
stos
rol
ja
aad
xor
nop
shl
nop
(bad)
popa
xchg
push
mov
leave
and
retf
or
ins
ret
mov
lods
imul
scas
jle
jne
(bad)
xchg
daa
mov
mov
and
add
push
les
in
push
push
mov
(bad)
(bad)
pcmpgtw
mov
sar
out
xor
add
repz
and
and
out
sub
sbb
dec
aaa
xor
pop
sbb
retf
or
or
out
(bad)
(bad)
xor
jg
(bad)
jmp
push
inc
mov
xor
jp
push
out
in
cmp
or
push
out
lahf
gs
push
iret
mov
scas
cli
sub
sub
mov
stos
test
cli
cld
je
push
clc
xor
jns
dec
in
jg
mov
outs
and
or
fdiv
retf
out
pop
push
pop
add
repnz
and
je
and
inc
mov
(bad)
xor
pop
sbb
xor
dec
jb
fiadd
dec
sub
daa
ds
add
mov
push
sti
or
push
sti
fist
xor
stos
or
gs
dec
sub
mov
in
(bad)
lods
push
das
nop
test
xchg
int3
jg
or
(bad)
stc
outs
jae
rcr
dec
lods
ret
out
xor
hlt
mov
mov
in
inc
dec
in
mul
adc
push
das
out
or
jno
sbb
pop
adc
test
mov
add
repz
jle
xchg
out
shl
ins
test
sub
imul
clc
mov
mov
es
adc
xchg
pop
xchg
mov
lock
out
js
dec
in
xchg
cdq
ficom
jno
pusha
cmp
mov
outs
scas
faddp
or
xchg
and
neg
popa
jns
fdiv
sbb
out
icebp
cmp
add
ja
or
jp
shr
jo
stc
ds
(bad)
and
xor
pop
xor
sub
pop
jl
loop
sbb
outs
push
cs
in
xchg
jb
mov
pop
(bad)
fs
xchg
lods
loopne
ficom
scas
cmps
dec
scas
cmps
mov
xlat
push
jle
mov
cmp
inc
out
or
int3
fsub
add
jne
pop
and
xor
jl
test
test
rcl
imul
mov
sub
cmp
xchg
xchg
dec
mov
fld
cmp
xor
pop
pop
out
dec
and
mov
aad
(bad)
(bad)
ds
(bad)
and
xor
pop
cmp
cdq
pop
ins
mov
test
movs
fs
enter
lods
cmc
mov
mov
inc
sub
mov
int
add
inc
mov
icebp
mov
fcom
scas
icebp
sbb
clc
jae
out
pop
jb
out
dec
mov
ja
xor
push
cmp
dec
cli
dec
pop
imul
pusha
mov
mov
pop
inc
push
or
xor
imul
je
mov
je
mov
adc
sub
xchg
jmp
out
pop
repnz
dec
out
fld
mov
cmp
push
nop
fnsave
test
inc
aad
and
dec
stc
pop
test
lods
lahf
idiv
ret
inc
pop
xlat
test
sbb
adc
mov
imul
lea
loopne
cmp
cmp
mov
sub
outs
mov
retf
ds
int
lods
call
nop
xor
jmp
jge
sbb
test
out
jmp
cmps
xor
dec
jmp
int
pop
mov
push
mov
adc
jp
dec
enter
push
xchg
movs
xor
(bad)
cmp
mov
scas
cwde
push
enter
iret
mov
jl
and
or
jmp
test
mov
pop
push
sbb
(bad)
jecxz
inc
jno
mov
imul
xchg
cmps
fimul
mov
cmp
jne
or
iret
mov
sbb
push
repnz
lods
mov
test
idiv
and
dec
pushf
and
and
add
(bad)
pop
cli
ficomp
adc
or
test
mov
imul
mov
push
mov
cmps
pop
test
jmp
xlat
addr16
mov
stos
and
arpl
adc
add
push
and
fidiv
jmp
jbe
mov
repnz
jmp
fs
cmp
sbb
inc
or
cmps
stos
xor
mov
push
popa
bound
xor
sub
ds
mov
push
sub
mov
pop
mov
jmp
add
mov
aas
in
sbb
rcl
fsubr
xor
loop
lock
cld
jp
js
inc
dec
jbe
adc
xor
les
push
scas
sbb
jo
xchg
in
push
fsub
repz
mov
inc
xlat
pop
dec
push
movs
jnp
inc
sbb
lods
rol
fcomp
xchg
es
cmps
push
mov
sbb
pop
dec
jb
fs
dec
jecxz
inc
movs
(bad)
test
frstor
mov
mov
jmp
cmp
xchg
dec
loop
xchg
push
jnp
fadd
(bad)
cwde
mov
imul
test
int3
and
inc
xchg
imul
pop
out
mov
cmp
shl
mov
aad
(bad)
retf
dec
sbb
fmul
jnp
mov
inc
adc
(bad)
lock
repz
loop
cmp
mov
pushf
ds
lock
mov
loopne
or
sbb
dec
ret
rcl
xor
mov
adc
loop
test
xor
adc
or
call
addr16
xor
add
inc
mov
fiadd
aas
fdiv
push
adc
scas
loopne
sub
ret
cdq
sub
pop
push
inc
in
xchg
add
jbe
clc
pcmpgtb
mov
scas
imul
iret
hlt
jno
icebp
inc
lods
xchg
dec
push
and
inc
jnp
in
mov
pop
aaa
push
lea
xor
xchg
cmp
fisttp
into
adc
push
push
xor
lds
nop
call
xor
rcr
into
xor
fist
iret
movs
enter
sar
mov
or
inc
pop
pop
pop
fdiv
je
pop
aas
sub
push
(bad)
call
pop
ins
adc
jmp
out
out
ins
fcom
loop
out
mov
cmovl
sub
int3
int3
push
ins
mov
mov
or
inc
pop
add
loope
int3
push
cdq
jl
jo
dec
push
stos
adc
jno
lea
inc
(bad)
jbe
sbb
sub
fild
enter
mov
sub
rol
aas
int3
(bad)
pop
les
dec
pushf
inc
ins
jp
inc
loopne
push
and
mov
mov
sbb
dec
xor
dec
push
icebp
pushf
xchg
sbb
div
dec
out
cs
outs
and
pop
dec
sti
test
push
mov
(bad)
adc
sbb
test
cmps
sbb
cmps
add
push
push
js
push
sub
and
sbb
dec
jle
pop
adc
popa
dec
xchg
mov
idiv
sbb
jecxz
dec
xchg
daa
sti
xor
cmp
retf
test
mov
(bad)
push
mov
cmps
in
or
imul
lea
dec
fdivrp
test
sub
jecxz
inc
fbstp
fiadd
or
cmp
add
rcl
scas
cmp
push
push
jmp
xor
and
add
popf
pushf
adc
jnp
and
ins
mov
jbe
sub
mov
inc
nop
les
bound
sub
cmp
test
add
(bad)
leave
and
call
pop
or
or
mov
sub
pop
std
sub
jmp
sbb
addr16
ins
retf
mov
(bad)
fimul
sub
aad
dec
sub
cli
retf
push
xor
push
imul
mov
adc
mov
(bad)
cli
movs
cmp
out
test
xor
cmp
test
arpl
mov
retf
adc
jmp
cmp
mov
sbb
outs
int
scas
jbe
mov
out
jno
cmps
xchg
out
das
mov
adc
mov
or
cld
push
inc
jbe
(bad)
imul
jns
daa
pop
fisub
retf
or
mov
dec
push
shr
jmp
dec
jecxz
out
xchg
push
loopne
psrlw
and
addr16
and
xor
lock
pop
dec
pop
retf
sub
push
push
and
adc
mov
or
dec
push
push
add
(bad)
ficom
pop
xchg
cs
xchg
xchg
xchg
int
dec
clc
lock
mov
mov
loopne
mov
mov
js
jns
outs
jp
je
sbb
popa
jno
cmp
dec
je
or
inc
loopne
sub
push
push
mov
repz
mov
(bad)
jne
or
pop
cli
ja
out
call
mov
mov
add
(bad)
xchg
scas
das
add
arpl
enter
mov
popa
or
push
jb
add
add
aas
sbb
(bad)
mov
out
enter
cwde
dec
in
pop
aam
adc
inc
popf
fwait
and
mov
jge
scas
mov
iret
sub
sub
pop
leave
out
cli
ror
cld
dec
add
mov
inc
arpl
sub
sub
jbe
cmp
xchg
bound
mov
iret
sub
popf
mov
jp
icebp
enter
daa
repnz
test
adc
scas
mov
iret
(bad)
fdiv
push
xor
mov
push
repnz
daa
xor
inc
outs
add
cwde
mov
xor
adc
out
inc
ins
outs
push
adc
xlat
fistp
push
lea
shl
dec
retf
jb
dec
xchg
jmp
stos
test
sbb
loop
outs
imul
int
or
div
push
inc
mov
fwait
(bad)
fdiv
imul
lods
mov
push
or
adc
xchg
pop
mov
cmp
push
out
mov
mov
pusha
mov
loope
test
and
push
mov
popf
(bad)
dec
sti
jle
ret
add
fist
in
add
sub
push
sbb
mov
jl
mov
cmp
shl
push
add
cli
xchg
push
mov
mov
rcl
xor
push
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
lods
stos
xor
dec
lea
test
popf
setne
rcl
cmp
fcmovbe
xor
inc
in
push
add
dec
movs
cmp
js
(bad)
daa
loopne
jp
test
out
inc
fisttp
cmp
or
xor
cwde
imul
mov
jmp
mov
fdivr
int
lods
inc
ss
ja
adc
lods
and
(bad)
mov
pushf
scas
les
jp
retf
stos
jle
add
jle
mov
fadd
test
jnp
inc
das
scas
arpl
dec
adc
adc
mov
cdq
mov
rcr
xchg
(bad)
repnz
jmp
rcl
pop
push
push
pop
lahf
dec
push
ds
scas
adc
xchg
and
lahf
mov
cmp
xlat
imul
add
retf
(bad)
js
dec
mov
sbb
mov
call
lods
sub
pop
ror
popf
fwait
ins
add
jle
jae
xor
and
(bad)
xor
scas
loope
xor
rol
mov
pop
inc
xchg
imul
sub
sub
bound
add
jo
xchg
retf
in
sbb
fistp
lods
aaa
mov
je
or
test
xlat
nop
aam
idiv
sbb
stos
addr16
pop
xor
loop
test
dec
popf
test
test
in
ret
fidivr
scas
or
loopne
stos
inc
aam
sbb
ror
(bad)
adc
push
mov
xor
cwde
cld
mov
fistp
fimul
or
inc
clc
loop
stos
lock
add
dec
jp
or
(bad)
and
push
fidiv
outs
and
xor
inc
fidiv
and
in
(bad)
or
in
lods
ja
icebp
(bad)
and
sbb
or
imul
imul
std
(bad)
jg
pop
and
xchg
rcr
dec
data16
inc
or
adc
and
inc
or
jns
mov
stos
ret
push
add
into
mov
xor
test
pushf
out
mov
dec
loope
call
dec
repz
pushf
add
xlat
or
rcr
mov
push
mov
std
add
test
test
scas
cmp
push
(bad)
adc
mov
clc
jp
or
retf
std
pushf
xchg
lea
lds
aam
sti
cmc
outs
xchg
xor
mov
mov
fcom
adc
test
movs
xor
add
push
test
jo
icebp
pop
repnz
in
pop
mov
sbb
inc
retf
add
(bad)
inc
pop
inc
and
repz
pop
and
inc
dec
(bad)
test
inc
cmp
dec
lds
mov
in
(bad)
rol
in
pop
in
add
imul
stos
mov
lods
fsub
or
jns
in
fcmovnbe
iret
mov
lahf
(bad)
out
addr16
into
stos
add
inc
std
pop
push
push
or
popf
jecxz
test
pop
jb
dec
sbb
div
xchg
push
mov
cli
xor
(bad)
mov
loop
in
stos
fcomp
in
xchg
imul
mov
inc
lock
pop
jo
sub
aas
mov
fwait
push
mov
add
inc
mov
add
mov
rcr
add
lods
repz
jle
dec
cdq
xlat
or
dec
mov
outs
mov
mov
lea
cs
imul
dec
sub
lods
sub
push
mov
aaa
mov
or
(bad)
(bad)
mov
(bad)
cmp
mov
aad
cli
sbb
cli
mov
lods
mov
pop
rcl
loopne
and
outs
mov
ret
mov
loopne
pushf
je
stos
mov
add
push
test
push
mov
mov
scas
push
fcmove
inc
popa
fdiv
gs
(bad)
stos
dec
les
shl
mov
mov
add
xchg
lea
ss
mov
cdq
and
dec
add
test
in
xchg
push
push
(bad)
fwait
sbb
pop
add
fiadd
mov
or
add
or
mov
movs
xchg
scas
js
dec
cld
repnz
sbb
dec
outs
(bad)
icebp
push
das
test
sub
popf
pusha
test
sahf
repz
push
cli
sub
ins
or
mov
fcmovnb
xor
mov
xchg
jmp
sub
sar
xor
sub
inc
adc
lahf
scas
inc
aam
call
retf
movs
ins
mov
aaa
mul
aaa
mov
jae
out
sbb
push
popf
loope
pop
jl
pop
pop
cli
test
es
int3
test
nop
into
std
addr16
fcmovne
adc
xor
mov
retf
inc
jge
inc
xor
dec
cmp
add
sub
sub
push
sbb
xchg
pop
push
mul
push
xor
mov
jmp
jl
add
pop
push
xchg
pop
mov
inc
mov
sub
jb
in
xor
cld
push
js
fs
jmp
fcmove
or
hlt
aam
inc
int3
enter
(bad)
ins
test
cld
setb
lahf
(bad)
icebp
movs
das
add
add
or
scas
div
add
(bad)
pop
shl
push
ds
out
mov
in
jmp
add
push
jae
ds
push
xchg
out
stos
iret
sub
cwde
popf
mov
ins
jmp
call
mov
mov
lock
add
(bad)
mov
add
xchg
jmp
and
popa
test
cld
lea
xchg
xchg
adc
mov
mov
inc
xchg
mov
mov
push
fidiv
mov
cmp
mov
jae
inc
sahf
(bad)
ja
pop
(bad)
leave
jl
and
repz
outs
cmp
xchg
dec
mov
bound
(bad)
sbb
pop
adc
add
push
rol
cmp
retf
into
sbb
mov
imul
pop
pop
addr16
movs
cmps
or
ins
push
xor
mov
icebp
rcr
mov
mov
jmp
xor
int3
sbb
pushf
hlt
inc
pop
jmp
xor
pop
imul
adc
push
int
div
mov
sub
gs
mov
int3
mov
sbb
test
jl
fdiv
retf
retf
fcom
int
jae
and
out
lods
jg
cmp
rcl
and
out
dec
imul
dec
in
out
pop
rcl
xor
aad
adc
sahf
jmp
push
push
div
fsub
mov
pop
sbb
mov
or
or
mov
xchg
dec
jl
dec
imul
and
fbld
xor
movs
xchg
outs
dec
inc
jle
arpl
shl
sti
out
jbe
jg
int3
inc
cmp
jle
test
cs
pop
mov
sbb
lahf
scas
(bad)
pop
inc
mov
pop
dec
xor
mov
sub
fdivr
jnp
xor
jl
je
ret
pop
push
xchg
cmc
shl
jmp
xor
jl
fdiv
retf
in
stc
test
test
mov
call
es
mov
mov
push
or
je
mov
popf
retf
push
mov
mov
movs
fild
jne
jbe
(bad)
push
mov
inc
mov
sub
ins
sub
repnz
movs
int
cld
lods
lea
xchg
inc
mov
pmaxub
dec
jnp
cdq
cmps
loop
ja
adc
dec
and
sbb
xor
or
or
xor
dec
in
add
push
xor
shl
mov
jl
ss
lea
hlt
fcomi
dec
and
jno
jmp
push
test
ja
jmp
ret
ins
out
sbb
sub
loop
cmp
retf
and
xchg
lahf
mov
add
out
out
ins
test
popa
lahf
lods
cmp
cs
xchg
popa
xlat
sahf
fdivr
enter
sbb
aam
jge
cli
mov
dec
push
test
ret
repz
into
xor
jno
xlat
push
mov
cmc
out
out
jge
retf
cs
adc
out
imul
stos
(bad)
int
pop
mov
dec
popf
gs
rcr
and
xchg
(bad)
cdq
and
int
(bad)
ret
fsub
push
pop
pop
(bad)
loopne
dec
jne
sub
add
int
mov
leave
iret
xor
dec
mov
leave
leave
cmp
cmc
mov
dec
pshufw
popf
mov
or
rcr
retf
fptan
(bad)
adc
sbb
dec
neg
cmp
xchg
adc
loope
jl
cdq
rcl
dec
xor
ins
cs
enter
mov
(bad)
ja
sub
and
lock
mov
sub
sub
mov
in
push
sbb
ror
jnp
push
mov
mov
dec
fcom
aam
dec
test
lock
pop
mov
aaa
ja
push
pop
or
or
(bad)
push
dec
jg
test
std
mov
cmp
ficom
mov
pop
mov
inc
scas
xchg
xor
lds
ins
xchg
(bad)
aas
push
and
out
or
das
sub
sub
scas
aam
xchg
jecxz
or
push
popa
stc
cmp
(bad)
dec
out
cmp
lea
rcr
ds
mov
mov
test
nop
call
outs
fisttp
mov
dec
mov
xlat
shl
jb
and
and
xor
inc
add
xor
sub
pushf
adc
ja
aad
adc
mov
jp
fst
adc
imul
mov
xor
add
test
xor
out
fbld
outs
add
scas
popf
sar
leave
or
cmp
aaa
retf
sub
inc
jae
fwait
mov
mov
loopne
jge
xchg
data16
fadd
mov
pop
out
addr16
movs
inc
cld
test
adc
in
pop
adc
mov
mov
sub
or
cmps
pop
push
push
gs
dec
movs
inc
xchg
xor
fidivr
mov
fwait
xchg
out
mov
mov
sbb
and
mov
sbb
dec
les
jge
fdiv
retf
icebp
mov
cbw
jp
inc
(bad)
pop
pushw
lds
popf
xlat
fadd
xor
sub
dec
mov
ret
pop
xor
aad
pop
movs
jne
mov
inc
push
int
je
sub
movs
aaa
adc
adc
imul
jecxz
push
mov
cmp
sahf
adc
xor
or
mov
jbe
not
(bad)
push
(bad)
bound
jmp
cdq
imul
xchg
cmp
lahf
in
sub
jo
sbb
pop
retf
sub
mov
adc
xchg
pop
jmp
or
lods
movs
push
sbb
icebp
es
ja
neg
add
je
int3
dec
xor
scas
jnp
je
push
dec
call
inc
(bad)
imul
jae
inc
test
or
shl
push
adc
sub
sbb
adc
mov
pop
mov
into
lods
clc
or
push
lea
xor
cmp
popf
pop
or
leave
scas
iret
aad
xchg
in
mov
es
cld
push
xchg
mov
xor
xchg
mov
xlat
(bad)
sahf
pop
stos
and
mov
shr
xchg
adc
inc
cwde
sahf
cmp
repz
rcr
inc
pop
jae
ins
fdivr
and
scas
sub
jae
div
xchg
pop
pop
ret
push
mov
lea
sbb
mov
cli
push
or
pop
mov
push
jo
ret
loopne
enter
cli
jmp
iret
mov
cli
inc
fwait
and
popf
popa
jo
pop
fwait
xchg
ret
mov
xor
jb
sbb
cmp
scas
dec
cmp
sar
push
add
repnz
mov
xchg
out
retf
sbb
test
inc
das
add
or
movq
adc
mov
mov
mov
push
(bad)
or
inc
mov
outs
mov
xor
enter
arpl
int3
dec
in
repz
idiv
sti
cmp
mov
cmp
or
dec
mov
mov
loope
imul
fisubr
test
ss
dec
movs
outs
test
xchg
fdivr
add
xchg
sbb
and
adc
call
sbb
call
stos
retf
dec
push
(bad)
pop
imul
stc
mov
sbb
xchg
inc
loopne
and
outs
jns
lods
and
dec
mov
add
pop
in
out
mov
xor
pop
lea
fld
jl
out
adc
xchg
hlt
pop
int3
cmp
jmp
jge
retf
adc
dec
jmp
inc
pop
pop
dec
rcl
add
ja
fwait
aas
ins
sub
dec
sub
mov
and
test
inc
out
xor
nop
sbb
popa
mov
mov
cmp
shl
pop
test
pop
xor
jbe
push
push
sbb
fsub
xor
jl
sar
cmp
fwait
jecxz
sbb
jg
arpl
cdq
sub
les
push
lahf
cmc
sub
mov
fadd
sub
or
mov
push
lea
(bad)
(bad)
je
loope
and
lods
mov
(bad)
retf
scas
sbb
outs
out
inc
xor
pop
xchg
jle
jecxz
cmp
pop
icebp
test
xor
stos
lds
lea
mov
lock
outs
and
dec
add
mov
sub
jo
and
cmps
retf
sahf
(bad)
xchg
dec
pop
je
push
or
sbb
or
sub
outs
std
pop
cld
or
aad
mov
ins
jne
data16
xchg
and
movntq
out
popf
pop
cmp
add
ds
push
sub
xchg
test
fistp
jne
or
or
dec
test
xchg
jne
sbb
jae
push
cdq
jno
pop
xchg
movs
or
inc
xchg
ds
(bad)
add
mov
ret
popf
xor
jge
leave
scas
lods
inc
out
movs
ja
inc
clc
(bad)
movs
jne
pop
mov
arpl
jns
aam
fxch
push
retf
clc
xchg
add
adc
cmp
cwde
jecxz
test
sahf
ret
sar
ret
(bad)
mov
mov
mov
and
pop
rcr
in
mov
pop
scas
in
or
leave
mov
neg
dec
aaa
fs
sub
(bad)
inc
mov
icebp
mov
and
ins
mov
mov
or
or
cmp
adc
out
mov
dec
sub
sbb
int3
mov
cmp
push
and
adc
aas
jo
jmp
outs
out
and
shl
and
(bad)
loope
mov
jb
push
ror
(bad)
ror
bound
inc
sbb
retf
sti
aad
or
shl
enter
test
repnz
sbb
inc
adc
scas
out
in
sbb
sub
pop
mov
das
imul
test
add
push
jno
les
int3
mov
mov
pop
dec
mov
aad
ins
jo
mov
add
sbb
jge
jns
sbb
or
cmp
inc
or
adc
mul
pop
cmp
dec
loopne
dec
jns
adc
sub
pop
enter
mov
or
test
adc
xchg
push
inc
sahf
jbe
loop
lock
rcr
sahf
sub
cli
je
js
mov
add
jo
arpl
sub
in
or
or
fistp
sub
cmp
bound
rol
xor
popa
inc
cwde
jne
pop
jg
(bad)
mov
lods
sbb
sbb
dec
push
aas
cmp
mov
xlat
push
cmps
sub
lock
pop
pop
pop
hlt
aas
sbb
sti
adc
es
xor
dec
xchg
mov
cwde
int
loope
push
push
sbb
ret
or
add
jmp
sbb
pop
add
cdq
push
movs
out
lods
jo
aam
in
cmp
sub
lahf
cwde
lds
ins
ss
jns
mov
cmps
xchg
xchg
cmp
int3
dec
cmp
ins
cmp
and
mov
pop
jmp
and
addr16
jecxz
dec
das
dec
cs
daa
inc
addr16
jbe
inc
mov
imul
cmp
test
fsub
cmp
push
cmps
call
or
test
sbb
test
add
lea
mov
loop
(bad)
and
aam
mov
cmp
in
or
xor
ret
mov
push
loope
int
xchg
fiadd
and
sub
pop
loope
das
or
sbb
and
shl
loop
call
hlt
mov
inc
in
mov
and
mov
sub
aaa
mov
nop
inc
sbb
xchg
mov
dec
pop
lock
cdq
repz
cwde
loop
or
mul
popa
and
lods
pop
fsubr
pop
sub
push
hlt
xor
xchg
and
rcr
mov
mov
nop
push
xor
inc
and
pusha
jg
inc
or
out
add
jle
shr
ins
cmps
inc
or
jl
in
or
lea
adc
popf
xchg
(bad)
or
cmp
es
(bad)
mov
dec
sbb
cmp
mov
fcom
neg
addr16
bnd
and
popa
xchg
das
aam
fistp
call
add
or
int
mov
js
(bad)
int
test
sub
es
in
(bad)
icebp
out
sub
dec
mov
xchg
punpckldq
(bad)
mov
sub
test
adc
fld
ins
jle
test
in
fst
pop
scas
adc
es
cmp
retf
arpl
pop
movs
jae
push
inc
mov
jmp
sbb
sub
inc
movs
and
inc
pusha
cmp
xor
cmp
cmp
ds
addr16
and
sahf
into
jle
mov
push
test
jp
std
sbb
jno
into
cmp
sbb
test
popf
jae
mov
inc
sar
lods
arpl
sbb
and
add
neg
pop
cwde
xchg
push
aaa
loopne
or
cmps
xchg
fist
mov
jge
mov
in
shl
adc
dec
or
mov
fisubr
pop
test
mov
das
cmp
xor
(bad)
cmp
in
out
rol
dec
mov
jge
ficomp
xchg
int3
in
faddp
rcl
addr16
mov
(bad)
dec
mov
sbb
adc
dec
stc
pop
cmc
popf
mov
inc
pop
adc
add
pushf
dec
(bad)
std
add
cmp
cld
ins
sbb
outs
or
ins
cli
mov
scas
cmp
les
xor
sub
aam
sub
push
mov
mov
loope
push
pop
or
ss
(bad)
loopne
sub
scas
sub
mov
or
ins
inc
fmul
rcr
ror
movs
mov
sub
cs
loope
xchg
inc
cmps
inc
inc
enter
inc
shl
bound
movs
push
mov
loopne
push
cmps
inc
or
repnz
lods
adc
jmp
or
neg
and
jmp
inc
dec
fnsave
pop
jnp
retf
mov
jecxz
inc
jbe
jmp
fldz
cmp
dec
jle
je
dec
data16
ins
dec
push
das
dec
mov
mov
mov
rcl
xor
loope
xor
push
scas
push
inc
fistp
ins
enter
xor
imul
pop
sbb
adc
icebp
sub
mov
jne
pop
pop
mov
cdq
mov
scas
out
rcr
loope
sbb
xchg
js
adc
lock
xor
loope
cwde
jne
and
ret
adc
les
jo
leave
mov
cmc
dec
jne
adc
cmp
int
adc
out
repz
sbb
xchg
shr
sti
add
test
sbb
cmp
inc
sub
xlat
push
repz
jo
outs
xchg
or
into
and
push
or
fbstp
pop
into
nop
jmp
cmc
adc
out
aam
shl
scas
lock
test
cmc
or
fdiv
retf
sahf
dec
xchg
inc
mov
(bad)
fbld
les
mov
sahf
jne
push
mov
clc
rcl
xor
push
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
jge
rol
push
fimul
pop
jb
jo
push
aam
fsub
mov
cmp
add
sbb
rcl
xor
push
add
cmp
add
push
in
pop
jmp
lahf
imul
mov
cmp
add
jno
nop
call
sub
cwde
mov
int
lods
aas
(bad)
and
scas
mov
push
ja
xchg
sahf
and
mov
mov
outs
add
movs
ins
push
lahf
lea
jne
and
cmp
aam
(bad)
leave
jne
jb
cdq
mov
leave
or
loop
jge
stos
push
outs
rcl
xor
add
imul
jns
push
fwait
and
and
jne
jae
rol
pop
fild
rcr
mov
cmps
xchg
das
dec
das
sub
sub
dec
xchg
cmp
int
imul
fiadd
pop
(bad)
test
xchg
call
mov
mov
inc
es
lock
retf
stos
sahf
add
or
ins
(bad)
and
or
test
xchg
call
(bad)
mov
ins
(bad)
and
or
pop
pop
test
cmovs
sbb
adc
sbb
inc
std
or
dec
push
mov
adc
dec
mov
lock
nop
jge
sub
add
imul
js
inc
imul
loop
jnp
ja
sti
in
sahf
sub
inc
ins
sbb
loope
and
inc
mov
out
leave
mov
adc
and
adc
cmp
mov
xchg
inc
sbb
inc
enter
cmp
shr
push
scas
inc
mov
idiv
xchg
mov
jb
xchg
loope
pop
bound
sbb
repz
xchg
call
inc
mov
mov
aas
xchg
fsub
sub
add
jmp
out
mov
cmps
push
jp
stos
test
pop
jp
fnsave
pop
(bad)
cs
or
xor
cmps
into
mov
dec
cmp
aad
(bad)
(bad)
sub
cmp
pop
mov
sub
mov
pop
sbb
xchg
sub
nop
lea
mov
mov
dec
xchg
retf
int3
aam
adc
idiv
pop
pop
out
dec
and
mov
cmp
cli
mov
enter
cli
cmp
movs
int3
imul
jg
retf
adc
bound
aaa
test
cmp
iret
test
push
jbe
js
shl
mov
imul
popa
in
sub
lea
popa
(bad)
(bad)
pushf
mov
sub
cmp
jge
cdq
loope
jmp
xor
mov
push
push
cwde
cwde
dec
aad
push
sti
push
test
rcr
lahf
mov
test
mov
rol
es
jne
jb
jo
dec
(bad)
pop
int
sub
in
cmp
dec
test
or
mov
out
dec
cs
arpl
in
jne
xchg
or
sbb
pop
loope
cmp
jecxz
int3
int3
adc
into
(bad)
dec
pop
leave
cwde
ja
daa
add
jns
adc
out
dec
cs
shr
out
sbb
je
cmps
inc
sbb
jmp
adc
mov
inc
push
repnz
mov
sub
xchg
push
mov
xor
mov
push
aad
in
mov
xchg
(bad)
repnz
aas
mov
sub
dec
pop
clc
xor
inc
xor
push
ins
jo
not
cmp
(bad)
cwde
std
mov
shl
push
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
fs
cmp
bound
sbb
fist
jo
pop
daa
cmp
mov
and
dec
std
sbb
les
test
jno
and
out
aam
fbld
outs
inc
sahf
add
sbb
jmp
xor
lahf
pop
cmp
mov
in
pop
push
xor
rcr
sub
push
adc
cmps
mov
push
movs
lea
and
mov
popa
cli
or
lahf
xchg
ret
cmps
gs
ret
or
mov
nop
loope
fcomi
retf
mov
mov
mov
lods
enter
adc
in
pop
rcr
enter
pop
fisttp
clc
es
cmp
pop
cmc
xor
das
int
mov
push
stos
stc
movs
or
add
add
inc
sub
std
adc
adc
stos
xor
cmc
jb
and
inc
jg
mov
mov
push
movs
cmps
sub
inc
sub
imul
pop
arpl
(bad)
xor
fistp
cdq
fsubr
pushf
mov
imul
jmp
(bad)
cdq
(bad)
lea
pushf
or
ficom
out
out
dec
nop
jge
mov
xchg
retf
sub
dec
movs
imul
mov
ror
repnz
loopne
xor
mov
cmp
mov
sbb
fwait
leave
fmul
mov
or
rcl
xor
push
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
pop
or
arpl
jb
mov
fsub
push
mov
adc
inc
or
shl
hlt
dec
sbb
adc
aam
inc
mov
add
ins
cs
ficom
cmp
fnsetpm(287
dec
and
push
iret
xchg
sub
or
scas
and
inc
movs
cmp
inc
or
cmp
mov
inc
pop
movs
pop
cs
pusha
dec
out
out
es
ds
and
call
xchg
ret
rcl
out
aas
push
lea
nop
mov
movs
repnz
inc
rol
test
sti
push
rcr
mov
call
shl
pushf
pop
adc
out
es
out
loopne
enter
bound
inc
cmps
outs
addr16
mov
cmc
stos
lds
pop
mov
jne
or
jl
mov
add
jle
cs
int
add
in
lods
dec
mov
mov
arpl
les
xchg
dec
loopne
xchg
sbb
pop
cs
or
daa
sbb
ins
dec
and
test
ins
jns
mov
inc
dec
pop
or
push
movs
in
outs
imul
(bad)
mov
fcom
mov
mul
sbb
cs
ins
add
ret
add
scas
jno
shr
scas
sub
pusha
fimul
sub
inc
ja
fild
push
cmp
jle
sbb
xor
iret
loopne
cld
xchg
dec
fs
pop
xchg
cmp
iret
fsubr
mov
iret
xchg
(bad)
fist
cmp
pop
mov
test
cli
dec
ins
pop
jmp
aas
and
sub
out
adc
sbb
mov
mov
push
xchg
ficomp
ret
cmp
cmp
jae
sar
sub
mov
js
jns
out
arpl
aam
test
jl
and
loope
test
lods
mov
or
cwde
(bad)
jnp
inc
mov
mov
dec
mov
mov
add
movs
les
ret
imul
nop
and
mov
push
fld
and
or
sub
xchg
adc
inc
(bad)
mov
stc
cmp
in
and
int
mov
repz
sbb
stos
add
shr
int3
leave
enter
adc
add
sbb
pop
repz
cmp
fisttp
push
cmp
adc
or
out
les
add
inc
and
mov
int3
lea
and
out
sbb
push
scas
out
add
sub
(bad)
jl
inc
dec
jmp
xor
sub
fisub
jp
pushf
int
jp
mov
popa
inc
push
mov
imul
sbb
(bad)
les
add
adc
jmp
lods
lds
icebp
inc
imul
inc
mov
jmp
inc
push
daa
call
stc
loope
stc
bnd
iret
pop
es
pop
sub
mov
inc
mov
cmps
ret
ret
rcl
xchg
fist
or
call
mov
pop
or
cmp
adc
fs
pop
loope
cmp
adc
fcom
test
push
test
cmp
sbb
js
bswap
dec
push
popa
gs
std
sar
in
xchg
pop
jg
or
cmp
loopne
scas
enter
movs
ffree
in
adc
xor
mov
in
shl
sub
lahf
or
cmp
daa
push
shl
lods
js
dec
jp
mov
fwait
aad
std
int
sahf
movs
mov
push
loopne
mov
jmp
aaa
sub
mov
add
jle
push
(bad)
retf
pop
aaa
dec
xor
ss
(bad)
fild
stos
int
jg
mov
jmp
out
inc
jmp
div
scas
mov
(bad)
enter
(bad)
push
add
add
or
mov
pop
fcomp
out
xchg
nop
fldcw
(bad)
scas
mov
repnz
mov
fwait
repnz
push
(bad)
inc
xor
(bad)
nop
jbe
push
les
xchg
jg
sub
mov
or
mov
jo
mov
or
and
rcr
call
jle
call
call
(bad)
rcl
xchg
loope
stos
stos
xor
pop
nop
lds
lods
and
(bad)
stc
xchg
sub
add
mov
data16
add
outs
xor
push
daa
pop
xchg
mov
test
sbb
je
mov
push
cmp
(bad)
repnz
std
mov
mov
and
fistp
mov
xchg
test
mov
mov
push
cmp
jmp
inc
test
xchg
mov
sbb
add
cmps
xchg
scas
es
push
jecxz
mul
sub
mov
jmp
les
retf
dec
mov
inc
loop
jno
rol
xchg
sbb
cs
sbb
jl
inc
or
pop
movs
out
(bad)
fsubr
test
inc
in
retf
sbb
adc
sbb
stos
repnz
jl
pop
mov
add
arpl
test
jle
mov
ds
cmp
jns
push
je
pop
mov
ror
popa
in
jmp
mov
jg
in
cmp
(bad)
cmp
sbb
mov
lea
push
push
imul
pop
out
loope
pop
push
fadd
push
cmc
std
xchg
xor
sub
sub
mov
push
test
add
add
push
cmc
test
push
fucomi
pop
inc
xor
pop
mov
adc
pop
jne
xor
jle
cld
mov
inc
pusha
dec
cwde
test
lea
mov
in
cmp
icebp
xchg
or
in
sub
xchg
adc
jecxz
out
(bad)
jbe
push
sub
sub
and
fst
ror
rol
dec
jp
(bad)
out
dec
or
lods
push
mov
xchg
mov
fnsave
push
icebp
mov
inc
mov
mov
ja
xchg
mov
pop
rol
xchg
sub
and
mov
mov
mov
xchg
pop
mov
mov
in
adc
or
dec
mov
mov
shr
hlt
dec
sti
mov
pop
das
in
inc
dec
sahf
popa
int3
and
xchg
mov
dec
out
aas
fs
cs
mul
mov
or
sbb
mov
(bad)
mov
dec
add
xchg
adc
in
and
push
mov
add
imul
leave
mov
xchg
inc
rcl
inc
sub
stc
xchg
leave
hlt
dec
lock
mov
xchg
sbb
mov
ret
int3
sar
mov
repz
mov
mov
adc
cld
jae
jmp
fisubr
hlt
test
xchg
push
cmp
sbb
nop
xchg
pop
test
(bad)
mov
or
pop
push
sub
les
ror
cdq
in
dec
aam
mov
pop
scas
or
push
int3
pop
or
pop
push
pop
data16
and
call
or
in
movnti
(bad)
lods
daa
mov
ret
ds
sbb
pop
(bad)
xor
test
in
ja
das
pop
stos
mov
stc
lods
aam
inc
jns
mov
pop
arpl
lahf
fiadd
push
mov
dec
inc
loopne
inc
mov
adc
arpl
repnz
adc
mov
sub
mov
into
mov
and
adc
inc
mov
xchg
std
mov
in
adc
sub
add
stos
mov
imul
push
mov
push
mov
cmp
mov
jl
mov
push
shr
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
shr
add
shl
add
xor
mov
add
xor
sub
mov
shr
add
mov
shl
add
xor
mov
add
add
xor
sub
dec
jne
mov
mov
mov
add
dec
jne
pop
pop
pop
leave
ret
int3
jbe
mov
pusha
int3
xchg
in
test
shl
mov
fs
ss
fwait
lods
mov
mov
rcl
fbld
fucomi
out
das
mov
jno
js
mul
pop
in
push
sub
daa
sbb
pop
sub
rol
add
add
xchg
jmp
cmp
cs
shr
xlat
lahf
sbb
push
push
mov
and
shl
cs
push
ret
hlt
aaa
neg
aam
inc
aad
arpl
xchg
dec
mul
mov
adc
push
fist
icebp
push
(bad)
std
sti
leave
sbb
mov
ins
jl
jge
stc
push
movs
ret
fsub
cwde
enter
xor
(bad)
jmp
ret
mov
inc
mov
cmp
xor
mov
int3
jp
adc
jbe
add
bound
out
fdiv
adc
pop
xchg
mov
xor
cmc
jne
jns
sub
or
dec
push
xchg
xchg
pusha
cld
xchg
out
je
bound
fwait
dec
cs
sbb
push
(bad)
xchg
les
fs
cs
adc
inc
and
pop
es
dec
sub
mov
pop
xchg
retf
fwait
dec
push
jg
cmc
push
ffree
lds
out
jmp
adc
and
jg
cmp
sbb
or
pop
ficom
loope
push
loope
call
cmps
shl
mov
cld
out
or
jle
(bad)
mov
nop
dec
or
pop
fstp
clc
jb
cmp
push
add
push
shl
sub
cld
out
xor
and
aaa
cmp
pop
dec
call
xchg
ins
jb
pop
and
add
xor
xor
aam
shl
and
or
popf
push
mov
sbb
iret
dec
jmp
mov
jno
mov
dec
cwde
loope
cmps
lods
mov
pop
rol
ins
out
in
sti
int
ror
jp
xor
dec
jnp
sbb
dec
jmp
jno
fcomp
cmps
adc
mov
and
cmp
out
or
cli
stos
or
jnp
sti
and
scas
xor
(bad)
push
pop
xchg
xor
rol
retf
cmp
pop
xchg
dec
shr
bound
out
bound
stos
sub
lds
sub
and
enter
je
jmp
test
scas
stos
nop
lock
or
je
fadd
fmul
sub
dec
dec
movs
call
mov
and
xchg
ror
ins
dec
xlat
mov
or
loopne
stc
mov
add
push
ja
xor
inc
push
dec
cmps
or
pop
push
or
fild
sahf
mov
mov
shr
cmp
clc
add
aaa
sar
pop
fwait
sub
mov
mov
ds
push
xor
outs
push
push
or
add
dec
enter
xchg
leave
shr
pop
jge
xchg
pop
(bad)
sub
hlt
inc
pop
in
mov
inc
test
data16
add
sub
fistp
mov
in
and
adc
sbb
xchg
sbb
inc
popa
in
pop
xor
mov
jge
imul
stc
adc
ror
fstp
test
sub
ret
xor
ds
pop
push
or
or
push
sub
mov
cmps
xor
mov
and
inc
or
retf
cmc
sbb
outs
xchg
pop
inc
aas
bound
ins
mov
clc
adc
les
into
or
mul
and
push
mov
icebp
jnp
sbb
das
pop
in
xchg
imul
cmc
xchg
cmp
pop
mov
test
int3
cmc
add
or
dec
xor
jge
xchg
xor
inc
inc
sbb
loopne
imul
mov
cmps
in
sar
popa
or
xchg
cmc
add
test
jle
pop
xor
adc
cmp
retf
imul
xor
out
fwait
mov
bound
lods
loopne
xor
hlt
fdivrp
mov
sbb
shr
sub
cmp
pop
xchg
push
sub
inc
hlt
std
xchg
repz
pop
movs
ret
mov
ret
int3
aas
mov
loopne
push
aad
fbld
mov
mov
out
pop
in
call
mov
push
test
pusha
imul
xchg
hlt
sbb
movs
mov
in
int3
inc
scas
jmp
in
scas
dec
repz
inc
mov
cmp
or
ret
inc
(bad)
jbe
test
aam
push
cmps
mov
jb
nop
shl
movs
mov
or
retf
sbb
rcl
repnz
aam
push
push
and
sub
mov
jmp
xchg
lahf
push
add
mov
rcl
ret
bound
push
sub
mov
call
sbb
les
out
add
pop
mov
arpl
push
fbld
fsub
sub
fmulp
push
push
icebp
ja
mov
dec
sbb
pop
sub
call
sub
frstor
jg
jnp
dec
out
(bad)
mov
mov
mov
loopne
retf
push
icebp
js
jp
and
inc
mov
or
push
adc
mov
outs
pop
mov
or
sub
fld
lock
shr
add
fwait
mov
sub
xor
inc
cld
sbb
cld
jns
mov
xchg
loope
cmp
repz
fisubr
cmps
fadd
hlt
mov
pop
sar
jle
dec
mov
push
pop
push
nop
out
and
and
mov
out
addr16
fadd
dec
sub
pop
aam
xchg
sub
scas
cmps
push
and
gs
jp
jns
inc
ins
lea
mov
call
cmps
in
cmps
inc
out
xor
test
mov
or
mov
and
pop
sbb
out
xor
imul
stos
iret
mov
or
test
div
sbb
int
shl
fild
jle
pop
push
dec
inc
ins
retf
sbb
or
push
loopne
mov
xchg
stos
jl
bound
div
inc
in
fild
sbb
jg
test
pop
sti
mov
outs
jg
outs
int
inc
cmp
mov
xchg
iret
inc
loop
call
loopne
or
mov
shl
xor
inc
sub
rcr
mov
js
xchg
xchg
and
cmc
cmps
hlt
pop
test
int
sub
cmc
adc
sbb
call
push
fldenv
cli
imul
or
shl
ror
jno
test
sbb
sbb
sbb
test
cmp
adc
jp
push
inc
and
adc
xchg
add
xor
rcr
out
mov
cmps
stc
loopne
jb
repz
pop
fwait
cmp
jae
pop
or
inc
out
test
sahf
cmp
lahf
xchg
jge
push
xchg
add
pop
mov
sub
outs
(bad)
retf
and
retf
xchg
aad
js
xor
dec
(bad)
out
sbb
stc
push
xchg
clc
lods
push
adc
mov
mov
pop
pop
test
sub
cmp
fsub
dec
push
jns
std
sbb
xchg
inc
lds
push
jno
and
sbb
mov
mov
lock
jle
retf
sub
adc
push
jp
(bad)
sbb
jnp
imul
lea
jmp
inc
inc
lahf
jl
or
(bad)
mov
xlat
fs
mov
jbe
fisubr
repnz
cmp
add
daa
add
sub
mov
call
out
gs
(bad)
mov
xor
mov
cld
mov
or
inc
fnsave
xchg
push
add
add
fs
sub
inc
movs
repz
push
push
hlt
sub
mov
xchg
mov
mov
leave
call
jmp
lock
mov
sub
dec
inc
push
push
sbb
data16
sbb
int
add
mov
sbb
leave
jmp
inc
(bad)
adc
pop
loop
mov
ds
cmps
mov
cs
data16
cmp
jns
cmp
mov
not
aas
enter
fcom
push
add
xor
pop
sub
retf
jle
or
fsub
xchg
nop
jns
popa
inc
mov
mov
mov
test
(bad)
sbb
inc
mov
add
mov
sub
and
cmps
fs
mov
ins
lahf
add
retf
push
jle
movs
sbb
ficom
nop
out
and
inc
add
mov
adc
ins
jle
cmp
jge
sbb
mov
jne
add
scas
inc
dec
icebp
ret
adc
loop
jmp
push
xor
and
scas
inc
xor
mov
adc
cli
(bad)
xchg
cmps
pop
scas
inc
jno
ret
sbb
ret
jmp
fist
psrlq
cmp
imul
xlat
xor
xchg
add
retf
das
ret
jecxz
lahf
xchg
inc
jmp
aas
sub
adc
sub
and
idiv
dec
cmp
int3
pop
or
fiadd
push
and
lods
add
push
aad
mov
imul
leave
xchg
cdq
push
das
aaa
imul
pop
in
hlt
jb
mov
test
push
cdq
xor
lods
add
shr
sub
fbstp
sti
stc
fist
and
mov
dec
push
inc
or
inc
imul
xlat
rcr
fisub
xchg
rcr
hlt
out
cmp
push
cmps
add
and
ins
ss
call
ret
xor
xchg
test
xor
paddb
stos
mov
(bad)
or
pop
xchg
mov
cli
xlat
pop
ror
test
test
push
sub
xor
hlt
mov
cmps
jo
mov
sbb
mov
stos
mov
and
cmp
xor
or
inc
or
push
dec
lods
xor
dec
or
sbb
outs
dec
in
sbb
loope
cdq
jp
mov
adc
adc
mov
push
or
fsubr
cmps
and
fisub
xor
cmp
inc
cmp
clc
xchg
retf
test
inc
lahf
mov
in
push
clc
xchg
xor
aaa
pop
lgdtd
inc
scas
xchg
cld
pop
pop
xchg
pop
outs
sub
adc
sub
sar
ret
in
ret
mov
or
stos
push
in
pop
or
mov
lock
cmp
into
ins
or
xchg
test
dec
mov
rcr
or
or
jle
xor
dec
in
cmp
dec
xor
pop
cmps
xor
iret
rol
loop
inc
xor
or
jmp
xor
outs
scas
pop
push
outs
or
jg
cmp
xchg
bound
xchg
scas
fwait
cwde
loop
dec
cmc
sub
or
xor
retf
cld
adc
ja
outs
inc
inc
enter
xchg
xlat
imul
xor
xchg
aas
pop
inc
cmps
cvtpi2ps
mov
mov
or
pop
rol
sub
rcr
push
xchg
js
cmp
and
push
in
test
xchg
inc
adc
in
sub
dec
and
mov
xlat
loopne
sbb
or
scas
pushf
sbb
jnp
inc
and
inc
shr
je
jno
daa
xchg
sbb
cmps
cmp
imul
repz
pop
pop
mov
adc
xchg
les
xor
and
mov
mov
imul
dec
ss
xchg
push
add
retf
mov
inc
int
fist
cwde
jae
out
daa
push
xchg
arpl
cs
in
inc
(bad)
dec
push
scas
(bad)
(bad)
imul
adc
retf
and
(bad)
retf
inc
icebp
mov
pop
mov
fwait
push
xchg
xchg
inc
mov
inc
loopne
adc
push
sub
fimul
test
in
mov
dec
mov
fdivp
adc
gs
inc
lods
ja
adc
inc
mov
inc
cmp
jnp
push
dec
(bad)
(bad)
add
push
movs
adc
and
outs
es
mov
add
in
sub
rcr
push
push
mov
cmp
jp
addr16
mov
std
sub
add
cmp
rcl
dec
add
pop
add
pop
sub
aas
fwait
cmc
(bad)
push
imul
popw
rcr
out
lea
arpl
mov
and
add
push
fsubr
mov
jbe
cld
sub
int3
dec
fiadd
lods
cmp
imul
mov
rcr
push
jl
enter
jl
sbb
xor
enter
cdq
cmp
imul
push
inc
in
pop
push
mov
mov
jl
push
sub
jge
xchg
retf
lock
leave
movs
repnz
xchg
pop
add
inc
pusha
push
push
sub
inc
ret
push
xchg
imul
push
push
ret
fimul
mov
pop
pop
retf
mov
clc
mov
inc
fldenv
inc
or
inc
mov
mov
mov
or
xchg
mov
ret
cmp
push
add
rol
add
in
into
cmp
mov
call
lock
mov
pushf
xor
pop
ins
sti
(bad)
ins
sbb
and
call
xchg
mov
xor
sahf
rol
push
jecxz
sub
or
pop
push
std
mov
sub
push
fstp
push
cmp
and
sub
jmp
test
mov
mov
loope
(bad)
jecxz
dec
jp
pop
dec
fmul
sbb
stos
jecxz
inc
jp
push
pop
dec
jns
ins
idiv
add
pop
xchg
xchg
bswap
cmps
inc
adc
mov
loop
nop
loop
cmps
out
neg
mov
sbb
stos
pop
push
pop
daa
sar
neg
mov
inc
xor
mov
mov
retf
cmp
push
or
retf
pusha
jle
mov
inc
pop
sub
push
add
out
imul
mov
xchg
cwde
push
pop
test
and
mov
in
and
mov
fdiv
pusha
mov
jmp
dec
cld
inc
jge
mov
sub
push
ins
stc
in
or
jne
jne
shl
adc
inc
cdq
loop
adc
popa
fld
or
ficomp
fisubr
mov
pop
sub
fsubr
aas
ss
or
xchg
jbe
popf
cmps
and
sti
mov
ret
loope
ins
shl
aaa
jne
lar
sbb
add
inc
aaa
into
cwde
push
pop
cdq
dec
imul
add
fs
xchg
push
das
adc
iret
cli
and
lahf
(bad)
outs
nop
mov
sbb
popf
sbb
daa
scas
inc
cmp
bound
repnz
je
test
xchg
rcr
out
int3
jl
dec
loopne
jmp
leave
mov
sbb
and
push
in
mov
pop
jmp
xchg
xor
scas
mov
jge
push
fild
inc
je
stc
push
sub
retf
sbb
cmp
inc
movs
in
inc
repnz
dec
push
ret
imul
pop
lds
rcl
retf
pop
popf
mov
push
sahf
call
push
cmps
xor
push
xor
sub
repz
adc
push
aas
pusha
fisttp
mov
mul
fiadd
ret
xlat
mov
test
js
add
inc
shl
mov
mov
icebp
jl
test
mov
mov
imul
sbb
fimul
out
repnz
mov
push
jl
sub
rol
push
mov
fnstsw
(bad)
in
test
mov
imul
in
icebp
icebp
mov
movs
add
xor
mov
add
push
push
jle
jl
dec
aaa
xor
aaa
mov
call
leave
push
cdq
pop
fucom
arpl
add
das
int
xor
sub
cli
fidivr
scas
lds
sub
pop
lea
daa
push
inc
repnz
fadd
mov
jecxz
inc
mov
adc
loopne
test
push
pop
jmp
fdiv
and
dec
xchg
enter
(bad)
loop
add
lods
imul
imul
or
jecxz
mov
inc
mov
movs
test
add
mov
out
dec
cmp
add
pop
adc
rcl
push
push
sahf
mov
js
xor
mov
imul
scas
retf
jle
loop
dec
pusha
xchg
add
pusha
hlt
adc
ja
push
cmp
idiv
arpl
ret
xchg
lea
arpl
sahf
mulps
lds
out
push
in
sub
push
sub
sar
and
cs
hlt
sbb
arpl
out
jbe
out
mov
cmps
sahf
adc
mov
jge
lds
and
or
add
fidiv
adc
stos
inc
cmp
jne
bound
or
popf
in
(bad)
iret
mov
mov
loope
cmp
jmp
ins
repz
add
xor
cmp
iret
ins
dec
rcr
jle
dec
xor
retf
mov
sti
test
push
(bad)
or
out
mov
adc
iret
xor
cmp
sub
dec
scas
repz
popa
jg
dec
je
mov
pop
pushf
retf
push
push
scas
ja
ins
ret
inc
and
xlat
pop
jmp
jmp
in
inc
mov
and
loopne
stos
dec
mov
pusha
pop
sbb
xchg
jecxz
fwait
test
sub
jp
(bad)
hlt
inc
dec
jmp
jo
pop
adc
or
cmp
jno
pop
cmp
jae
cmp
cdq
call
stos
rol
or
rcr
jo
dec
push
adc
xor
xor
dec
push
inc
pop
cmp
pop
xchg
bound
xor
rcl
scas
clc
xor
jle
in
dec
mov
and
pop
stos
aaa
fwait
and
dec
inc
and
outs
jno
lock
xchg
mov
xor
rcr
inc
aam
sbb
out
sbb
or
cld
mov
and
jle
dec
dec
dec
xchg
dec
in
les
test
neg
adc
mov
out
inc
and
or
push
(bad)
xor
and
ins
scas
jo
outs
or
jno
rcl
add
mov
imul
xchg
cli
or
or
xchg
pop
xor
add
outs
pop
rol
and
enter
xchg
xor
push
pop
call
mov
push
lods
in
cmc
or
out
mov
and
shl
push
test
and
pop
scas
and
sub
test
sti
mov
stos
retf
adc
ja
outs
rol
and
pop
sbb
clc
ret
sbb
xchg
in
and
xor
mov
inc
loopne
lods
pop
mov
outs
pop
inc
mov
xchg
fcom
shr
push
fucom
shl
xchg
in
jb
mul
ds
pop
inc
or
xor
or
mov
lahf
aad
cmp
out
mov
inc
test
ss
mov
add
or
ror
mov
or
rcr
push
arpl
call
ins
cmp
std
and
pop
xchg
mov
push
xchg
mov
add
aad
scas
es
jle
out
dec
mov
clc
xor
xchg
imul
and
and
test
jle
mov
add
loop
dec
std
idiv
mov
push
loopne
sbb
int3
stos
jbe
pushf
jbe
pop
dec
ja
ins
sbb
sub
lock
xchg
or
add
loopne
adc
mov
(bad)
cmc
pop
outs
and
sbb
test
rcr
imul
mov
lds
xchg
jno
ret
xor
adc
sub
mov
enter
xchg
out
or
xchg
dec
sbb
pop
add
stos
sub
push
es
(bad)
imul
jp
mov
mov
out
push
sahf
int
and
push
mov
cmp
arpl
or
jne
xchg
fst
dec
cmp
sbb
jle
in
xchg
dec
in
movs
pop
mov
mov
fwait
jnp
loopne
inc
jp
pop
inc
fadd
call
fdivr
cs
push
add
add
jge
ds
nop
sub
jne
cld
or
mov
js
cmp
dec
mov
mov
sbb
add
adc
(bad)
push
loope
jns
mov
sub
nop
sub
arpl
retf
jns
add
and
les
push
(bad)
(bad)
nop
sub
adc
nop
push
mov
icebp
mov
(bad)
mov
xchg
jns
es
sub
add
jae
repnz
mov
inc
out
jg
push
mov
dec
push
jnp
push
retf
push
sub
jbe
retf
jnp
cdq
fisttp
dec
repnz
sbb
mov
and
in
fsubr
cmp
jl
add
(bad)
or
dec
mov
lods
call
sub
repnz
xor
movs
xor
sbb
xchg
icebp
(bad)
cwde
push
rcl
jnp
pop
pop
(bad)
or
sub
mov
and
pop
mov
xor
add
push
push
sti
sub
and
push
sahf
in
shl
je
sbb
xchg
dec
cwde
leave
sbb
in
lock
pop
add
scas
adc
push
jp
sub
jp
aas
iret
inc
xlat
push
jnp
xor
jp
fcomp
xchg
cmps
scas
mov
jb
enter
fsub
cmp
rol
pusha
or
sub
aam
lods
lahf
dec
push
jl
jmp
imul
xor
lds
inc
int3
(bad)
enter
fcmovnb
xchg
call
add
push
push
or
clc
popa
cmp
pop
les
sub
test
and
dec
(bad)
icebp
lock
ficomp
mov
les
mov
sbb
call
js
mov
mov
jg
mov
dec
adc
ficomp
push
test
sbb
cmp
xchg
lods
dec
cmp
ja
push
aaa
inc
mov
sub
mov
mov
mov
ffreep
repz
out
outs
add
add
pop
adc
mov
gs
push
cmp
or
xor
xor
lahf
push
(bad)
cmc
mov
enter
xchg
pop
fisub
pop
sbb
sbb
repz
hlt
fidivr
mov
inc
arpl
mov
popa
push
mov
xor
push
add
sbb
fnstcw
das
in
dec
and
cli
add
dec
cmc
daa
jbe
push
cmp
pop
dec
push
in
(bad)
xchg
scas
int3
mov
sbb
inc
xchg
lds
adc
sti
cmps
or
cmps
cmps
imul
and
dec
repz
jecxz
outs
or
aas
aam
popf
setg
les
xor
int3
call
add
es
int3
xchg
cmp
inc
dec
rcl
push
jne
sub
imul
les
xlat
cmp
inc
(bad)
mov
hlt
adc
es
cmp
icebp
mov
pusha
jge
retf
je
xchg
sbb
push
xchg
scas
cdq
sbb
mov
jmp
push
and
fimul
dec
scas
adc
xchg
jae
loope
xchg
stos
cmps
fwait
retf
scas
jbe
mov
aad
inc
retf
jmp
xchg
fdiv
adc
fst
cmp
outs
clc
dec
mov
pop
pop
cmp
jae
add
sbb
cmps
ror
lods
push
shr
aad
xchg
call
outs
xor
and
std
mov
dec
mov
jle
or
test
inc
lods
push
cmc
test
rol
or
mov
mov
nop
and
and
dec
imul
dec
jno
mov
pop
cdq
test
lods
xor
rol
and
lods
sbb
jge
xor
dec
mov
push
cli
mov
and
jnp
ss
pop
push
adc
test
test
stos
push
test
xchg
shr
aas
cmps
cli
sub
pop
push
sti
aam
and
mov
rcr
xor
ss
outs
aaa
inc
xchg
aas
add
stos
bswap
stos
mov
mov
jo
pop
fs
or
test
xor
dec
and
inc
pop
hlt
(bad)
sti
outs
mov
pop
or
stos
in
es
mov
push
mov
cwde
or
mov
and
push
or
pop
mov
outs
jge
int
dec
mov
xchg
sbb
adc
imul
pop
clc
in
or
mov
rcr
lods
push
xor
js
inc
fidivr
pop
scas
inc
in
jle
cwde
sub
fldcw
mov
inc
jo
in
cmp
test
push
xor
xor
rol
fistp
ins
pop
push
rcl
sar
retf
repz
xchg
neg
pusha
test
xor
sub
pop
mov
and
add
push
call
mov
add
loop
out
or
mov
mov
shl
in
dec
test
jecxz
imul
dec
jg
out
xchg
mov
pop
cmps
test
xor
into
add
loope
dec
xor
adc
dec
fsubp
sbb
fiadd
retf
inc
call
imul
mov
xchg
xchg
or
cmps
(bad)
(bad)
test
fisub
dec
hlt
pop
ins
test
sub
pop
sbb
add
das
cmps
add
ja
and
cdq
aad
repz
xor
fs
outs
gs
movs
aas
xor
mov
mov
(bad)
mov
pop
or
test
test
cmp
sub
imul
mov
shld
mov
mov
and
push
mov
sub
push
push
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
push
mov
mov
pop
push
call
test
push
jne
push
push
call
push
push
push
push
push
push
push
call
jmp
mov
mov
mov
push
push
mov
call
push
push
push
mov
call
mov
mov
push
add
push
push
call
mov
mov
mov
shr
mov
rep
mov
and
rep
mov
xor
lea
mov
add
mov
inc
add
cmp
jb
lea
push
lea
push
call
lea
push
call
mov
mov
mov
mov
lea
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
mov
push
sub
push
push
call
push
push
push
call
mov
mov
push
sub
push
push
call
push
mov
push
push
push
push
push
call
mov
cmp
jne
call
call
call
mov
pop
pop
pop
leave
ret
