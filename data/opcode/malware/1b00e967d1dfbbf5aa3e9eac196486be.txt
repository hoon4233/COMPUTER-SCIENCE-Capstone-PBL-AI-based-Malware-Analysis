adc
sbb
add
add
dec
add
add
add
add
add
add
add
add
add
mov
adc
add
adc
add
add
add
add
add
add
push
add
pop
add
push
or
add
sub
add
xor
add
add
add
add
adc
sub
add
pop
add
push
or
add
sub
add
xor
add
add
add
add
add
adc
add
sub
add
sub
and
add
and
add
add
adc
or
add
sub
xor
add
add
add
add
add
sub
add
or
inc
or
sub
add
sub
add
or
add
or
add
add
or
add
outs
sbb
add
or
adc
adc
add
sub
add
or
fadd
pop
sub
add
add
add
and
adc
add
add
xor
add
add
add
add
add
adc
add
sub
add
sub
and
add
and
add
add
adc
or
add
sub
xor
add
add
add
add
add
sub
add
or
inc
or
sub
add
sub
add
or
add
or
add
push
add
outs
sbb
add
or
adc
adc
add
sub
add
or
fadd
pop
sub
add
add
add
and
adc
add
add
xor
add
add
add
add
add
or
add
inc
or
add
add
jo
sub
sbb
outs
sbb
add
or
or
pop
add
add
jo
outs
sbb
add
or
adc
adc
add
outs
sbb
add
add
add
sub
add
add
add
add
xor
adc
add
add
xor
add
add
add
add
add
or
add
add
or
add
add
sub
add
push
or
push
adc
add
cmp
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
add
jo
pop
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
adc
add
add
add
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
retf
add
jo
sbb
push
add
or
jle
add
add
and
add
or
sub
add
or
add
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
inc
add
sbb
push
add
or
add
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
adc
add
adc
add
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
add
add
adc
add
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
add
jo
pop
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
push
jb
add
jo
sbb
inc
or
sub
add
jo
sbb
push
add
or
sub
add
push
add
or
adc
or
adc
adc
add
sub
add
or
fadd
pop
sub
add
add
add
add
adc
add
fwait
add
add
add
add
add
add
add
add
xor
add
add
add
pop
sub
add
push
or
push
jb
add
jo
or
add
pop
add
and
add
add
add
add
inc
or
sub
jns
add
add
add
adc
add
outs
and
add
add
jb
add
jo
add
add
and
add
add
jb
add
jo
add
and
add
add
jb
add
jo
push
add
add
and
add
add
jb
add
jo
pop
add
add
and
add
add
jb
add
jo
or
add
and
add
add
jb
add
jo
or
add
and
add
add
push
jb
add
jo
or
add
and
add
add
jb
add
jo
or
add
and
add
add
jb
add
jo
or
and
add
add
ficom
push
adc
add
pop
sub
add
or
fadd
sub
adc
add
add
add
out
adc
add
add
xor
add
add
add
inc
or
cmp
add
add
pop
sub
add
push
or
push
jb
add
jo
adc
add
pop
add
and
add
add
push
jb
add
jo
adc
add
pop
add
and
add
add
jb
add
jo
adc
add
push
add
add
add
or
push
jb
add
jo
adc
add
pop
jle
add
add
add
jo
outs
and
add
add
jb
add
jo
adc
and
add
add
jb
add
jo
xor
add
and
add
add
jb
add
jo
push
add
add
adc
add
outs
and
add
add
add
adc
adc
add
pop
sub
add
or
fadd
add
sub
add
push
or
push
jb
add
jo
adc
add
pop
add
and
add
add
jb
add
jo
adc
add
push
add
add
add
or
push
jb
add
jo
adc
add
pop
jle
add
add
add
jo
outs
and
add
add
jb
add
jo
adc
and
add
add
jb
add
jo
xor
add
and
add
add
jb
add
jo
push
add
add
adc
add
outs
and
add
add
ficom
push
adc
add
pop
sub
add
or
fadd
sub
sbb
add
add
scas
ret
add
add
add
fild
bextr
add
sub
add
jb
add
jo
and
add
add
add
add
inc
add
jo
and
push
add
add
add
add
xor
add
add
adc
lea
add
add
push
push
jb
add
jo
push
pop
pop
aas
mov
add
add
jo
push
sbb
push
mov
add
add
jo
push
sub
add
or
jb
add
jo
or
add
arpl
add
or
add
or
add
jg
add
or
add
popf
add
jo
or
add
mov
or
daa
add
or
jb
add
jo
sldt
add
fild
add
adc
add
fild
add
adc
add
adc
add
adc
add
bound
sub
add
or
add
add
add
add
add
and
add
sub
xor
add
add
add
add
adc
add
add
add
jnp
add
add
sub
add
or
or
add
sub
add
adc
add
push
add
add
add
adc
jae
add
or
add
sub
add
or
add
or
push
jle
add
add
and
add
sub
jae
add
or
mov
das
add
or
or
add
or
sub
add
or
outs
xor
add
outs
xor
add
adc
add
add
add
adc
add
push
add
add
add
adc
jae
add
or
sub
add
or
outs
xor
add
or
add
or
push
jle
add
add
and
add
xor
jae
add
or
mov
das
add
or
or
add
or
or
add
or
add
or
add
add
add
add
add
add
add
add
pop
or
or
add
add
add
pop
or
add
mov
add
add
add
cmp
add
and
add
lea
add
and
add
cmp
add
and
add
push
add
sub
add
sub
adc
add
and
add
or
add
add
xor
add
or
sub
add
or
sub
push
pop
sub
add
push
or
add
xor
add
add
adc
push
or
jle
add
or
or
adc
sub
add
push
or
sub
or
sbb
add
inc
sub
push
add
add
add
add
add
sub
add
or
add
sbb
add
inc
adc
pop
jb
add
jo
cmp
add
outs
cmp
add
or
aas
add
or
add
add
add
add
ficomp
add
jle
add
or
inc
add
or
inc
adc
or
das
add
push
es
add
adc
add
inc
adc
jb
add
jo
pop
adc
add
add
add
add
add
add
add
add
or
push
add
add
adc
add
sbb
add
or
add
add
add
inc
add
or
(bad)
(bad)
inc
pop
sub
add
push
or
add
sub
xor
add
add
adc
adc
add
add
pop
jae
add
push
or
sub
add
push
or
add
sub
add
adc
add
adc
add
or
add
add
add
inc
add
or
sub
push
sub
add
adc
add
adc
add
or
add
add
add
inc
add
or
sub
push
sub
add
adc
pop
add
add
add
add
adc
sub
add
or
add
jl
add
add
adc
add
add
dec
add
add
sub
add
add
jl
add
add
dec
add
add
jge
add
add
jl
add
add
dec
add
add
gs
add
add
jl
add
add
dec
add
add
jge
add
add
jl
add
add
dec
add
add
and
add
add
jl
add
add
dec
add
add
jge
add
add
jl
add
add
dec
add
add
jge
add
add
jl
add
add
dec
add
add
jge
add
add
jl
add
add
dec
add
add
jge
add
add
xor
add
or
sub
add
or
push
loopne
inc
add
or
add
add
pop
add
add
add
add
cmp
add
push
sub
add
jge
add
add
add
sbb
or
add
add
add
add
inc
add
or
add
add
pop
sub
add
push
add
add
adc
or
push
add
add
add
adc
add
add
or
push
sub
pop
add
add
add
push
add
push
or
push
push
add
cmp
add
add
cmp
add
pop
push
push
and
add
add
and
add
es
or
push
add
push
es
sub
add
push
add
outs
inc
add
or
sub
add
adc
or
inc
add
add
add
adc
add
sbb
push
add
add
add
push
add
push
or
add
add
cmp
add
add
cmp
add
push
push
push
and
add
add
and
add
es
pop
sub
add
push
es
sub
add
push
sub
add
jge
add
add
add
push
add
add
jle
add
jge
add
add
add
data16
add
add
add
push
add
push
fiadd
add
add
dec
add
or
add
add
(bad)
sub
add
jge
add
add
(bad)
sub
add
jge
add
add
(bad)
sub
or
add
add
add
adc
add
add
add
adc
add
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
add
add
jnp
add
add
jae
add
or
sub
push
sub
add
adc
add
imul
add
add
adc
push
lea
add
add
pop
push
jb
add
jo
pop
pop
add
add
add
push
add
add
add
jo
pop
sbb
jnp
add
add
push
add
add
add
jo
pop
sbb
jnp
add
add
push
add
add
add
jo
pop
sbb
add
push
add
add
add
or
add
sub
add
sub
add
sub
adc
add
jmp
add
adc
add
add
add
adc
sub
add
or
add
adc
add
sub
add
sub
add
jge
add
add
add
inc
add
push
or
jb
add
jo
cmp
pop
outs
push
add
or
add
or
inc
push
inc
or
adc
jnp
add
add
inc
push
inc
or
jb
add
jo
cmp
add
adc
jnp
add
add
inc
push
inc
or
jb
add
jo
cmp
add
jb
add
jo
cmp
add
pop
outs
push
add
or
add
or
inc
push
inc
or
add
add
add
add
add
inc
push
inc
or
adc
jnp
add
add
add
add
pop
and
add
add
add
inc
or
jb
add
jo
cmp
add
add
jb
add
jo
cmp
add
add
add
add
add
inc
push
inc
or
add
add
outs
push
add
or
add
or
inc
push
inc
or
adc
jnp
add
add
add
add
add
add
add
inc
or
jb
add
jo
cmp
add
add
add
pop
sbb
add
inc
or
jb
add
jo
cmp
jb
add
jo
sub
adc
jnp
add
add
add
add
add
add
add
inc
or
jb
add
jo
sub
add
add
add
pop
sbb
add
inc
or
jb
add
aaa
adc
jnp
add
add
add
add
add
add
add
inc
or
jb
add
adc
jb
add
or
add
add
jo
sub
or
add
xor
add
add
adc
add
add
add
adc
adc
rcl
add
add
dec
add
or
push
add
or
add
add
add
inc
add
push
or
sub
add
jo
sub
add
add
add
add
pop
add
or
sub
pop
sub
add
xor
add
add
adc
add
add
dec
add
or
jb
add
outs
push
add
or
add
add
add
add
add
push
add
add
push
outs
push
add
or
add
or
add
add
cs
adc
or
adc
add
pop
cs
sub
jb
add
inc
add
outs
push
add
or
add
or
add
add
or
add
add
or
inc
adc
adc
sub
add
sub
add
add
sub
add
push
add
sub
cmp
push
outs
push
add
or
add
or
add
add
pop
inc
add
add
add
add
or
add
adc
add
js
add
sub
jb
push
add
sub
jb
push
add
sub
push
outs
push
add
or
add
or
inc
push
inc
adc
adc
sub
push
add
add
inc
push
outs
push
add
or
add
or
inc
push
inc
adc
adc
sub
push
add
add
pop
push
outs
push
add
or
add
or
inc
push
inc
adc
adc
sub
push
add
add
or
jb
push
add
sub
sub
pop
or
add
sub
add
adc
add
adc
add
adc
sub
add
outs
push
add
or
add
or
sub
push
sub
add
adc
add
adc
add
adc
sub
add
outs
push
add
or
add
or
sub
push
sub
add
adc
add
adc
add
adc
sub
add
outs
push
add
or
add
or
sub
push
sub
add
adc
add
adc
add
adc
sub
add
outs
push
add
or
add
or
sub
push
sub
add
adc
add
adc
add
adc
sub
add
outs
push
add
or
add
or
sub
push
sub
add
sub
add
sub
add
sbb
add
mov
add
adc
jb
push
add
jnp
add
add
fild
add
pop
add
or
jae
add
or
pop
outs
pop
add
or
add
or
add
or
pop
outs
pop
add
or
add
or
add
or
add
push
jae
add
or
add
push
jge
add
add
jnp
add
add
pop
add
or
add
or
push
add
add
add
popa
add
or
add
or
sub
add
or
xor
add
add
push
adc
add
sbb
add
add
add
push
adc
adc
add
add
add
adc
adc
sub
or
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
jnp
add
add
jnp
add
add
push
add
add
jnp
add
add
add
sgdtd
add
jnp
add
add
jge
add
add
jnp
add
add
add
add
jnp
add
add
jnp
add
add
and
add
pop
add
or
add
add
add
jo
jge
add
add
mov
add
adc
push
inc
adc
adc
sub
add
or
fcom
pop
add
add
jnp
add
add
sub
add
sub
add
sub
add
push
inc
adc
adc
sub
adc
add
add
add
adc
adc
sub
or
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
ficom
or
inc
adc
adc
sub
add
or
fadd
fimul
add
adc
cmp
(bad)
(bad)
inc
sub
add
sub
add
add
adc
add
add
add
sub
add
add
add
ins
jle
add
push
add
sub
add
sub
xor
add
add
add
add
adc
add
mov
or
and
sbb
and
add
add
or
add
inc
push
inc
sub
push
add
add
add
sub
push
sub
add
adc
add
jb
add
sbb
add
add
or
pop
jns
inc
add
add
sub
add
sub
add
pop
and
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
mov
add
xor
add
popf
add
add
sbb
and
add
add
or
add
inc
push
inc
sub
push
add
add
add
sub
push
sub
add
xor
add
add
add
add
adc
add
push
add
push
sub
add
push
push
inc
sub
push
add
sub
push
sub
adc
add
and
add
pop
add
adc
add
push
add
push
sub
add
push
add
push
sub
add
push
push
inc
sub
push
add
sub
push
sub
adc
add
cmp
add
sbb
add
add
add
or
pop
and
add
add
add
or
pop
and
add
add
add
or
pop
and
add
add
or
pop
or
add
add
or
add
sub
add
adc
add
in
add
add
add
adc
jae
add
or
pop
and
imul
and
imul
and
add
add
add
or
pop
and
add
add
add
or
pop
and
imul
and
add
add
add
or
pop
and
add
add
add
or
pop
and
add
outs
imul
and
add
add
add
or
pop
and
add
outs
imul
and
add
add
add
or
pop
and
add
outs
imul
and
add
outs
imul
and
add
outs
imul
and
add
outs
imul
and
add
outs
imul
and
add
outs
imul
and
add
outs
imul
or
add
add
or
add
sub
add
adc
add
sbb
add
pop
add
adc
add
push
add
push
sub
add
pop
add
push
push
inc
sub
push
add
sub
push
sub
adc
add
cmp
add
sbb
add
add
add
or
pop
and
imul
and
imul
and
add
add
add
or
pop
or
add
add
or
add
sub
add
add
add
dec
add
add
add
add
jae
add
or
add
add
push
jge
add
add
adc
cmps
add
add
sub
or
add
sub
add
add
jnp
add
add
bound
add
outs
ins
add
or
add
add
add
jnp
add
add
outs
add
or
add
add
add
xor
add
add
pop
add
adc
add
pop
add
pop
add
or
inc
or
cmp
add
add
jb
pop
add
outs
add
or
add
add
add
gs
add
jo
add
add
jnp
add
add
jno
add
jo
add
add
jnp
add
add
jge
add
jo
add
add
jnp
add
add
pop
add
outs
add
or
add
add
add
test
outs
add
or
add
add
add
leave
pop
add
outs
add
or
add
add
add
jno
add
outs
add
or
add
add
add
jmp
outs
add
or
add
add
add
jge
add
outs
add
or
add
add
add
cmc
pop
add
outs
add
or
add
add
add
or
add
outs
add
or
add
add
add
sbb
add
outs
add
or
add
add
add
and
outs
add
or
add
add
add
xor
add
outs
add
or
add
add
add
inc
or
jo
outs
add
or
add
add
add
push
or
jo
outs
add
or
add
add
add
popa
or
jo
outs
add
or
add
add
add
outs
or
jo
outs
add
or
add
pop
add
jnp
add
add
jno
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
add
add
push
inc
outs
jb
add
add
jnp
add
add
push
inc
outs
jb
add
add
jnp
add
add
push
inc
outs
jb
add
add
jnp
add
add
push
inc
outs
jb
add
add
jnp
add
add
push
inc
outs
jb
add
add
jnp
add
add
push
inc
outs
jb
add
add
jnp
add
add
outs
jae
add
add
jnp
add
add
outs
jae
add
add
jnp
add
add
push
inc
outs
jae
add
add
jnp
add
add
push
inc
outs
jae
add
add
jnp
add
add
push
inc
outs
jae
add
add
jnp
add
add
push
inc
outs
jae
add
add
jnp
add
add
push
inc
outs
jae
add
add
jnp
add
add
outs
jae
add
add
jnp
add
add
push
inc
outs
jae
add
add
jnp
add
add
push
inc
outs
jae
add
add
jbe
add
sub
add
add
jnp
add
add
je
add
add
sub
add
add
dec
add
jnp
add
add
jne
add
sub
add
add
add
adc
add
mov
add
sbb
add
add
add
add
push
or
add
add
add
call
add
add
jb
add
jo
mov
add
jbe
add
outs
ja
add
or
add
add
push
add
or
add
or
or
or
jo
xor
add
and
add
add
jb
add
jo
xor
add
and
add
add
jb
or
jo
xor
add
and
add
add
jb
or
jo
xor
add
and
add
add
jb
or
jo
xor
add
and
add
add
outs
mov
add
adc
add
add
add
adc
jb
or
jo
outs
mov
add
outs
and
add
add
outs
lods
add
push
adc
add
add
add
adc
jb
add
jo
outs
lods
add
push
outs
and
add
add
outs
scas
add
push
adc
add
add
add
adc
jb
or
jo
outs
scas
add
push
outs
and
add
add
outs
stos
add
push
adc
add
add
add
adc
jb
or
jo
outs
stos
add
push
outs
and
add
add
outs
mov
add
adc
add
add
add
adc
jb
or
jo
outs
mov
add
outs
and
add
add
jb
or
jo
outs
mov
add
sub
add
or
add
push
sub
add
push
sub
jo
outs
and
add
add
jb
or
jo
outs
mov
add
sub
add
add
jo
outs
and
add
add
pop
pop
pop
or
add
add
add
outs
(bad)
(bad)
inc
jb
or
jo
mov
push
add
add
add
or
sub
add
adc
add
pop
add
add
add
adc
jle
add
add
push
jb
add
jo
mov
add
jbe
add
outs
ja
add
or
jb
or
jo
outs
and
add
add
jb
or
jo
outs
and
add
add
jb
or
jo
sub
add
or
add
push
sub
jo
outs
and
add
add
add
xor
mov
add
adc
jle
add
add
push
jb
or
jo
mov
add
add
or
or
add
or
or
add
jae
add
push
adc
jb
add
jo
mov
add
jbe
add
outs
jns
add
adc
jb
or
jo
sbb
push
add
or
jp
add
outs
test
adc
add
jo
xor
add
js
add
outs
push
add
or
add
push
add
add
add
jo
xor
add
js
add
outs
push
add
or
add
push
add
add
add
jo
xor
add
js
add
outs
push
add
or
add
push
add
add
add
jo
xor
add
js
add
outs
push
add
or
add
push
add
add
add
jo
xor
add
js
add
outs
push
add
or
add
push
add
adc
jo
xor
add
js
add
outs
push
add
or
push
adc
push
sub
add
or
mov
xor
add
js
add
outs
push
add
or
adc
add
sub
jo
outs
mov
add
add
fiadd
add
adc
add
jo
fisttp
add
js
add
outs
push
add
or
jnp
add
outs
mov
or
add
jl
add
add
or
pop
or
adc
adc
cmp
outs
jne
add
adc
sub
adc
sub
adc
add
add
add
add
adc
add
das
add
add
add
add
add
jge
add
adc
add
inc
or
sub
adc
jnp
add
add
jge
add
je
add
add
sub
push
sub
add
pop
sub
add
add
add
adc
add
xor
add
push
add
adc
jae
add
push
or
jnp
add
add
je
add
add
bound
add
add
add
add
jnp
add
add
outs
add
or
add
sub
add
add
adc
add
sub
add
adc
jb
or
jo
sbb
add
mov
inc
or
sub
mov
jle
add
add
sub
add
add
sub
add
adc
add
add
add
adc
add
arpl
add
adc
add
inc
or
sub
sub
add
or
jnp
add
add
jg
add
or
jnp
add
add
jg
add
push
inc
push
inc
or
sub
jnp
add
add
add
add
add
pop
pop
outs
add
or
add
or
add
add
add
pop
pop
push
outs
add
jnp
add
add
add
or
add
add
add
pop
pop
outs
add
or
add
pop
add
push
add
add
xor
add
add
adc
add
arpl
add
adc
add
inc
or
sub
sub
add
outs
mov
add
push
inc
or
add
add
add
test
add
or
sub
add
push
outs
mov
add
add
xchg
add
or
sub
add
push
push
add
sbb
add
or
fadd
add
arpl
add
push
outs
mov
add
add
add
xchg
add
add
sub
add
add
add
add
adc
add
add
add
push
add
add
add
adc
add
imul
add
add
adc
add
add
add
add
mov
add
push
inc
or
outs
mov
add
push
outs
mov
add
jb
or
jo
mov
add
outs
mov
add
or
jb
or
jo
pop
add
or
inc
or
sub
mov
add
sub
mov
add
add
mov
add
sub
nop
add
or
add
sub
adc
add
call
adc
add
sub
add
add
sub
add
or
jnp
add
add
jno
add
jne
add
add
add
add
add
outs
lods
add
push
outs
outs
add
or
add
add
add
outs
scas
add
push
outs
outs
add
or
add
add
add
outs
mov
add
outs
outs
add
or
add
add
add
outs
mov
add
outs
outs
add
or
add
add
add
outs
mov
add
outs
outs
add
or
add
add
add
outs
stos
add
push
outs
outs
add
or
add
add
add
je
add
add
add
adc
add
add
add
adc
add
arpl
add
adc
add
inc
or
sub
sub
add
or
jnp
add
add
jg
add
or
pop
pop
add
add
add
xchg
add
or
pop
inc
push
inc
or
sub
jnp
add
add
add
add
add
pop
pop
outs
add
or
add
or
add
add
add
pop
pop
push
outs
add
jnp
add
add
add
or
add
add
add
pop
pop
outs
add
or
add
pop
add
push
add
stos
add
mov
xchg
add
or
add
xchg
add
or
add
add
add
add
xchg
add
or
add
push
add
add
adc
add
sbb
add
pop
add
adc
add
arpl
add
adc
add
push
sub
add
add
xchg
add
or
sub
adc
add
dec
add
add
add
adc
add
add
add
inc
or
sub
mov
add
outs
xchg
add
or
add
or
add
add
push
add
xchg
add
or
add
or
pop
outs
cwde
add
or
inc
or
sub
add
add
outs
cdq
add
or
add
add
xor
add
add
add
add
adc
add
add
add
inc
or
sub
outs
call
add
add
xor
add
add
and
add
add
or
cmp
add
add
add
outs
add
or
pop
outs
test
add
add
add
push
inc
push
inc
or
sub
mov
outs
add
or
sub
add
pop
pop
or
add
add
add
xchg
add
or
add
or
sub
adc
add
sub
add
pop
add
adc
add
add
add
add
inc
sub
pop
add
push
sub
cmps
add
add
sbb
add
add
add
sub
sub
xor
add
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
movs
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
outs
test
add
add
jnp
add
add
and
add
jae
add
or
add
or
add
add
add
jae
add
or
add
or
add
add
add
or
jo
lods
add
or
add
add
add
std
add
add
pop
jae
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
add
add
sbb
test
stos
add
or
add
add
add
jne
add
lods
add
or
add
add
add
pop
pop
or
or
add
or
add
add
add
sub
add
or
add
add
add
or
jo
outs
add
or
add
add
add
test
add
pop
sbb
or
add
or
add
add
add
jae
add
or
add
or
add
add
add
cmps
or
jo
lods
add
or
add
add
add
dec
pop
adc
add
or
add
or
add
add
add
movq
add
add
add
ret
or
jo
outs
add
or
add
add
add
inc
push
add
jae
add
or
add
or
add
add
add
mov
add
jb
or
jo
jnp
add
add
jecxz
add
jae
add
or
add
or
add
add
add
add
add
pop
sbb
add
or
add
or
add
add
add
repz
jo
lods
add
or
add
add
add
outs
jb
add
add
jnp
add
add
je
adc
scas
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
sbb
add
sub
add
outs
outs
add
or
add
add
add
inc
ins
add
push
jae
add
or
add
or
add
add
add
inc
jno
add
jae
add
or
add
or
add
add
add
test
add
sbb
test
stos
add
or
add
add
add
jae
add
or
add
or
add
add
add
or
add
lods
add
or
add
add
add
dec
pop
adc
add
or
add
or
add
add
add
adc
add
or
add
add
add
pop
or
jo
outs
add
or
add
add
add
inc
push
mov
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
jl
add
sbb
test
stos
add
or
add
add
add
das
or
jo
lods
add
or
add
add
add
sub
add
or
add
or
add
add
add
daa
outs
mov
add
add
jnp
add
add
cmp
outs
add
or
add
add
add
mov
add
jb
or
jo
jnp
add
add
scas
or
jo
jae
add
or
add
or
add
add
add
jle
add
pop
sbb
add
or
add
or
add
add
add
dec
or
jo
lods
add
or
add
add
add
outs
jb
add
add
jnp
add
add
cmp
adc
scas
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
add
jmp
test
stos
add
or
add
add
add
or
jo
lods
add
or
add
add
add
dec
pop
sbb
add
or
add
or
add
add
add
or
mov
add
add
jnp
add
add
jne
add
outs
add
or
add
add
add
inc
imul
push
jae
add
or
add
or
add
add
add
outs
mov
add
add
add
call
test
stos
add
or
add
add
add
jg
add
lods
add
or
add
add
add
dec
pop
sbb
add
or
add
or
add
add
add
or
add
or
add
add
add
xchg
or
jo
outs
add
or
add
add
add
inc
add
push
jae
add
or
add
or
add
add
add
outs
jae
add
add
jnp
add
add
outs
mov
add
add
add
dec
add
add
aaa
jae
add
or
add
or
add
add
add
mov
lods
add
or
add
add
add
dec
pop
sbb
add
or
add
or
add
add
add
or
add
or
add
add
add
mov
add
outs
add
or
add
add
add
inc
add
push
jae
add
or
add
or
add
add
add
outs
jae
add
add
jnp
add
add
outs
mov
add
add
add
clc
add
add
aaa
jae
add
or
add
or
add
add
add
ret
or
jo
lods
add
or
add
add
add
dec
pop
sbb
add
or
add
or
add
add
add
or
add
or
add
add
add
xlat
or
jo
outs
add
or
add
add
add
inc
pop
add
push
jae
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
or
test
stos
add
or
add
add
add
in
add
lods
add
or
add
add
add
dec
pop
or
or
add
or
add
add
add
and
add
or
add
add
add
repz
jo
outs
add
or
add
add
add
mov
add
jb
or
jo
jnp
add
add
mov
jae
add
or
add
or
add
add
add
or
sbb
add
or
add
or
add
add
add
adc
add
lods
add
or
add
add
add
outs
jb
add
add
jnp
add
add
jl
adc
scas
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
cmp
jae
add
or
add
or
add
add
add
and
add
lods
add
or
add
add
add
and
add
or
add
or
add
add
add
pop
outs
mov
add
add
jnp
add
add
xor
add
outs
add
or
add
add
add
mov
add
jb
or
jo
jnp
add
add
mov
jae
add
or
add
or
add
add
add
cmp
sbb
add
or
add
or
add
add
add
aas
or
jo
lods
add
or
add
add
add
sub
add
or
add
add
add
outs
jb
add
add
jnp
add
add
pusha
pop
adc
scas
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
mov
jae
add
or
add
or
add
add
add
push
or
jo
lods
add
or
add
add
add
sub
or
or
add
or
add
add
add
sbb
or
add
add
add
pop
or
jo
outs
add
or
add
add
add
mov
add
jb
or
jo
jnp
add
add
xchg
add
jae
add
or
add
or
add
add
add
mov
sbb
add
or
add
or
add
add
add
ins
or
jo
lods
add
or
add
add
add
outs
jb
add
add
jnp
add
add
jp
adc
scas
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
mov
add
sbb
test
stos
add
or
add
add
add
jg
add
lods
add
or
add
add
add
pop
pop
or
or
add
or
add
add
add
sbb
add
or
add
add
add
lea
add
outs
add
or
add
add
add
mov
add
jb
or
jo
jnp
add
add
mov
add
jae
add
or
add
or
add
add
add
mov
add
pop
sbb
add
or
add
or
add
add
add
mov
lods
add
or
add
add
add
outs
jb
add
add
jnp
add
add
je
adc
scas
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
add
cmps
add
add
aaa
jae
add
or
add
or
add
add
add
ror
add
lods
add
or
add
add
add
dec
pop
sbb
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
or
add
outs
add
or
add
add
add
inc
data16
push
jae
add
or
add
or
add
add
add
outs
mov
add
add
add
push
pop
aaa
jae
add
or
add
or
add
add
add
out
add
lods
add
or
add
add
add
dec
pop
sbb
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
test
add
or
add
add
add
inc
pop
add
push
jae
add
or
add
or
add
add
add
outs
mov
add
add
add
pop
aaa
jae
add
or
add
or
add
add
add
add
jo
lods
add
or
add
add
add
dec
pop
sbb
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
pop
or
jo
outs
add
or
add
add
add
inc
add
push
jae
add
or
add
or
add
add
add
outs
mov
add
add
add
outs
mov
add
add
add
test
add
pop
aaa
jae
add
or
add
or
add
add
add
daa
or
jo
lods
add
or
add
add
add
dec
pop
sbb
add
or
add
or
add
add
add
push
outs
mov
add
add
jnp
add
add
cmp
jo
outs
add
or
add
add
add
outs
mov
add
add
add
outs
mov
add
add
add
push
add
add
aaa
jae
add
or
add
or
add
add
add
dec
or
jo
lods
add
or
add
add
add
dec
pop
sbb
add
or
add
or
add
add
add
or
or
add
add
add
push
or
jo
outs
add
or
add
add
add
mov
add
sbb
or
push
add
add
add
push
pop
add
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
outs
mov
add
add
add
jnp
add
add
mov
add
add
add
pop
or
jo
rol
or
add
add
add
rol
or
outs
ret
or
add
add
add
ret
add
or
outs
les
add
add
jnp
add
add
lds
add
push
outs
mov
or
add
add
add
mov
enter
add
jnp
add
add
inc
imul
add
or
add
or
add
add
add
mov
retf
add
or
add
add
add
outs
or
jo
int3
add
or
add
add
add
outs
int
add
add
jnp
add
add
outs
into
add
or
add
add
add
mov
add
retf
add
or
add
add
add
or
add
add
jnp
add
add
outs
int
add
add
jnp
add
add
outs
into
add
or
add
add
add
scas
or
jo
retf
add
or
add
add
add
xchg
or
jo
int3
add
or
add
add
add
outs
int
add
add
jnp
add
add
outs
into
add
or
add
add
add
xchg
add
retf
add
or
add
add
add
stos
or
jo
int3
add
or
add
add
add
outs
int
add
add
jnp
add
add
outs
into
add
or
add
add
add
pop
or
jo
jo
add
add
jnp
add
add
retf
or
jo
retf
add
or
add
add
add
mov
int3
add
or
add
add
add
outs
int
add
add
jnp
add
add
outs
into
add
or
add
add
add
jnp
add
add
iret
add
or
add
add
add
outs
test
add
add
jnp
add
add
rol
add
sbb
add
or
add
or
add
add
add
push
jae
add
or
add
or
add
add
add
jnp
add
add
rol
add
add
jnp
add
add
jae
add
or
add
or
add
add
add
ror
jo
lods
add
or
add
add
add
std
add
add
ja
add
jae
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
rol
add
pop
lea
push
add
add
add
pop
outs
rol
add
add
jnp
add
add
inc
ins
add
push
jae
add
or
add
or
add
add
add
inc
outs
add
push
jae
add
or
add
or
add
add
add
inc
outs
add
push
jae
add
or
add
or
add
add
rol
add
jae
add
or
fiadd
add
add
pop
sub
add
or
add
std
add
add
iret
add
add
add
or
fadd
add
add
sub
jnp
add
add
cmps
add
or
add
cmps
add
or
jnp
add
add
cmps
add
or
add
jae
add
or
fld
add
add
jb
or
jo
lods
add
or
add
sub
add
or
add
sub
add
or
add
sub
add
or
add
or
jo
outs
add
or
add
add
add
loope
add
add
jnp
add
add
outs
loop
add
add
jnp
add
add
jecxz
add
add
jnp
add
add
loope
add
add
jnp
add
add
loope
add
add
jnp
add
add
loope
add
add
push
sub
add
or
sub
adc
add
inc
add
add
add
adc
sub
add
or
add
or
sub
add
or
outs
xor
add
or
add
or
pop
outs
out
add
or
add
jb
or
jo
xor
add
jmp
jmp
add
add
push
add
sub
add
sub
adc
add
or
add
daa
add
adc
add
add
sub
push
sub
add
sub
add
xor
add
add
adc
pop
sub
add
push
or
jb
or
jo
outs
sbb
add
and
add
adc
adc
add
pop
sub
add
or
fadd
sub
add
add
add
add
or
adc
add
add
add
sbb
add
adc
add
sub
add
add
add
push
jge
add
add
adc
int3
add
add
push
jge
add
add
jae
add
or
add
add
push
jge
add
add
push
jge
add
add
jb
or
add
add
jb
add
jo
fadd
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
push
jge
add
add
jb
add
jo
fld
add
jb
add
jo
fiadd
add
push
jge
add
add
adc
loopne
add
sub
or
add
jmp
add
shr
add
or
add
or
add
or
sub
add
or
or
add
or
add
add
cmps
add
push
add
add
push
jp
add
jae
add
or
lock
or
add
inc
xchg
add
push
jae
add
or
icebp
add
or
sub
add
push
es
add
add
daa
add
or
repnz
or
inc
or
jle
add
or
add
jb
or
add
or
add
adc
add
pop
jb
add
jo
sbb
inc
or
jb
add
jo
sbb
push
add
or
add
or
add
ficom
pop
adc
add
outs
sbb
add
add
add
ficom
push
adc
add
outs
sbb
add
add
add
add
add
add
jnp
add
add
outs
add
or
sub
add
or
add
or
cmc
add
or
jnp
add
add
outs
test
or
add
add
push
add
or
add
or
add
add
add
outs
test
jnp
add
add
dec
or
add
or
add
jnp
add
add
clc
add
or
add
add
sub
push
add
jle
add
add
fld
add
jle
add
add
fiadd
add
sub
add
add
sbb
add
add
add
pop
add
add
add
add
adc
pop
outs
add
add
add
sbb
add
rol
add
add
adc
add
or
cmp
add
outs
cmp
add
or
adc
(bad)
push
adc
add
outs
push
add
or
or
add
or
inc
or
sub
in
add
add
jmp
add
outs
add
or
pop
or
adc
(bad)
push
adc
add
outs
push
add
or
add
or
or
add
or
inc
or
sub
in
add
add
cmp
outs
add
or
pop
or
push
sub
jle
add
add
add
add
sub
jge
add
add
add
jnp
add
jge
add
add
pop
jge
add
add
jnp
add
add
xchg
add
or
add
fiadd
add
sub
add
add
add
add
add
mov
add
add
xor
add
add
sub
add
add
sub
add
or
add
or
sub
add
or
add
or
pop
outs
std
add
or
add
or
push
jb
push
add
inc
add
push
inc
adc
add
add
add
or
jb
add
jo
fiadd
add
sub
add
add
add
add
cmp
add
add
xor
add
add
sub
add
add
sub
add
push
or
push
jb
push
add
jns
add
or
pop
adc
add
add
add
jnp
add
add
jb
push
add
or
jo
js
add
outs
push
add
or
add
jo
pop
add
or
add
or
pop
jb
push
add
xchg
push
add
js
add
outs
push
add
or
jnp
add
add
jb
push
add
add
add
outs
add
add
add
jnp
add
add
jb
push
add
add
add
outs
add
add
add
jnp
add
add
jb
push
add
add
add
outs
add
add
add
jnp
add
add
jb
pop
add
add
add
outs
add
add
add
jnp
add
add
jb
push
add
add
add
outs
add
add
add
add
adc
adc
add
outs
sbb
add
add
add
ficom
push
adc
add
outs
sbb
add
add
add
add
add
add
adc
add
add
add
add
out
add
add
add
adc
add
or
add
push
add
adc
add
add
add
sub
push
sub
add
sbb
add
add
add
xor
add
add
adc
push
or
jb
add
jo
add
daa
add
or
jle
add
or
push
or
adc
add
add
jg
add
or
sub
or
sbb
add
inc
sub
push
add
add
add
add
sub
add
or
or
inc
push
inc
or
sub
add
outs
cmp
add
or
add
add
add
add
ficomp
pop
jle
add
or
inc
add
or
inc
or
sub
add
add
add
add
add
jo
add
add
sbb
sbb
add
add
xor
adc
add
sub
jb
add
jo
jb
add
jo
jb
add
jo
add
jge
add
add
jnp
add
add
add
add
add
push
sub
add
push
or
add
jo
or
jo
js
add
outs
push
add
or
add
jo
pop
add
or
add
add
adc
adc
add
adc
adc
add
or
fadd
add
add
add
push
sub
add
push
adc
adc
dec
push
add
jns
add
adc
inc
adc
adc
sub
add
jo
add
add
jo
xor
add
js
add
outs
push
add
or
sub
add
or
adc
adc
add
or
adc
add
or
fiadd
add
adc
jo
xor
add
js
add
outs
push
add
or
adc
jo
mov
add
add
or
add
or
add
ficom
add
adc
adc
sbb
add
add
add
ficom
add
inc
adc
adc
sub
sbb
add
add
add
jae
add
push
jge
add
add
jnp
add
add
outs
test
add
add
add
mov
stos
add
push
add
jnp
add
add
(bad)
add
lods
add
push
add
jnp
add
add
icebp
push
add
scas
add
push
add
jae
add
push
jge
add
add
jnp
add
add
outs
test
add
add
add
or
add
stos
add
push
add
jnp
add
add
and
add
lods
add
push
add
jnp
add
add
daa
(bad)
jo
scas
add
push
add
jae
add
push
jge
add
add
jnp
add
add
outs
test
add
add
add
cmp
add
stos
add
push
add
jnp
add
add
push
(bad)
jo
lods
add
push
add
jae
add
push
jge
add
add
jnp
add
add
outs
test
add
add
add
ins
(bad)
jo
stos
add
push
add
jnp
add
add
or
jo
lods
add
push
add
or
or
add
or
add
push
adc
sub
adc
outs
jmp
add
pop
add
or
adc
adc
sub
add
push
inc
push
inc
sub
pop
add
adc
adc
jge
add
add
sub
cmp
add
adc
jle
add
add
mov
or
jo
js
add
outs
push
add
or
or
push
add
or
add
inc
adc
adc
cmp
add
add
add
add
add
outs
test
add
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
add
add
mov
or
and
add
add
add
jnp
add
add
add
push
add
sub
sub
add
adc
push
adc
push
adc
adc
adc
adc
add
adc
adc
adc
outs
lods
add
push
outs
stc
add
or
movups
outs
scas
add
push
outs
stc
add
or
adc
lar
add
add
lods
add
push
outs
inc
add
sub
jnp
add
add
lods
add
push
outs
inc
add
sub
adc
sub
pop
add
adc
adc
push
jge
add
add
adc
add
lar
add
add
lods
add
push
outs
inc
add
sub
adc
adc
adc
sub
push
jge
add
add
adc
and
add
inc
add
sub
daa
(bad)
jo
inc
add
sub
adc
add
add
adc
adc
or
adc
jge
add
add
add
adc
adc
inc
adc
adc
and
(bad)
inc
jnp
add
add
inc
adc
adc
sub
out
add
jnp
add
add
test
add
mov
add
add
or
add
pop
add
or
add
or
add
or
adc
adc
adc
adc
adc
adc
add
add
add
push
outs
jl
add
add
push
outs
mov
add
push
inc
adc
adc
sub
adc
push
outs
test
add
add
add
add
test
add
inc
push
inc
adc
adc
sub
push
jge
add
add
add
adc
adc
inc
adc
adc
scas
(bad)
jo
inc
add
sub
add
add
add
inc
sub
pop
add
adc
adc
add
add
jnp
add
add
test
add
mov
add
add
or
sub
adc
adc
add
adc
adc
add
add
adc
add
push
mov
add
add
or
sub
jnp
add
add
jnp
add
add
test
add
mov
add
add
or
add
jnp
add
add
or
add
adc
add
inc
adc
adc
sub
add
add
jnp
add
add
jnp
add
add
test
add
outs
add
or
add
push
mov
add
add
or
sub
add
add
add
add
push
add
add
add
add
add
add
add
fwait
add
into
add
add
mov
jg
add
add
add
add
cmps
pop
add
add
add
xor
add
add
adc
add
inc
or
add
add
add
or
push
sub
add
outs
ins
add
or
pop
or
push
outs
test
add
adc
inc
adc
test
add
or
outs
lods
add
push
outs
stc
add
or
(bad)
jo
inc
add
sub
add
push
outs
stc
add
or
(bad)
jo
inc
add
push
inc
sub
push
add
or
add
xchg
add
or
movlps
push
push
add
sbb
add
or
fadd
pop
push
inc
or
push
push
add
add
add
or
add
add
outs
jne
add
sub
add
add
add
add
add
add
sub
push
jp
sldt
add
adc
add
sbb
add
pop
add
adc
add
push
add
push
sub
add
push
push
inc
sub
push
add
sub
push
sub
sbb
add
repz
add
add
adc
jae
add
push
or
push
outs
test
push
jb
(bad)
jo
stos
add
push
add
jb
(bad)
jo
lods
add
push
add
jb
push
add
mov
add
add
pop
outs
mov
jae
add
or
pop
sub
add
outs
ins
add
or
pop
or
pop
outs
test
add
adc
and
add
test
add
or
add
or
add
push
sub
add
or
inc
adc
push
or
add
xchg
add
adc
fimul
adc
push
push
add
sbb
add
or
fadd
or
inc
adc
add
push
push
outs
or
add
add
outs
jne
add
sub
add
add
add
add
add
add
add
add
jnp
add
add
bound
add
outs
ins
add
or
add
add
add
outs
test
add
mov
add
add
or
sub
add
add
add
pop
add
add
add
xor
add
add
add
adc
push
or
jnp
add
add
clc
add
or
add
or
add
adc
adc
sub
add
into
add
push
or
push
inc
push
inc
adc
adc
sub
add
adc
jle
add
add
jmp
sbb
and
add
add
jmp
sbb
push
add
or
add
jo
pop
add
or
add
add
sub
add
push
inc
adc
adc
cmp
add
add
push
or
or
add
add
bound
add
outs
ins
add
or
push
adc
test
add
adc
cmp
or
test
add
adc
add
push
outs
lods
add
push
outs
stc
add
or
adc
jo
inc
add
sub
lods
add
push
outs
stc
add
or
adc
jo
inc
add
sub
lods
add
push
outs
stc
add
or
adc
jo
inc
add
push
inc
sub
push
add
pop
adc
sub
add
lods
add
push
add
add
add
lods
add
push
outs
inc
add
push
inc
adc
adc
sub
or
add
or
xchg
add
adc
adc
cmp
(bad)
(bad)
fimul
adc
(bad)
push
push
add
sbb
add
or
fadd
adc
add
add
pop
xor
adc
add
add
pop
adc
sub
add
push
inc
adc
adc
cmp
add
add
add
add
test
add
adc
sub
or
test
add
adc
add
push
push
outs
mov
add
or
xchg
add
adc
adc
sub
or
push
push
add
sbb
add
or
fadd
add
add
add
add
push
add
or
add
push
add
jnp
add
add
jnp
add
add
clc
add
or
add
push
add
jnp
add
add
jnp
add
add
clc
add
or
add
push
add
jnp
add
add
outs
mov
adc
add
add
add
or
add
add
add
jne
add
sub
add
add
jnp
add
add
add
add
add
jnp
add
add
bound
add
outs
ins
add
or
add
add
add
jnp
add
add
test
add
mov
add
add
or
add
add
add
add
sub
or
add
add
pop
adc
cmp
add
add
jle
add
add
jmp
jne
add
and
add
add
adc
test
add
adc
sub
or
test
add
adc
add
push
push
outs
mov
add
or
xchg
add
adc
adc
sub
or
push
push
add
sbb
add
or
fadd
pop
pop
outs
mov
pop
adc
sub
add
outs
mov
add
add
add
add
add
clc
add
or
add
push
add
add
add
add
clc
add
or
add
push
add
add
jne
add
sub
add
add
jnp
add
add
add
add
add
jnp
add
add
bound
add
outs
ins
add
or
add
add
add
outs
test
add
mov
add
add
or
add
sub
sub
add
add
add
add
add
mov
and
add
add
add
sldt
add
sbb
add
fild
add
xor
add
add
jnp
add
add
inc
adc
cmp
add
add
or
jnp
add
add
clc
add
or
add
or
add
adc
jle
add
add
into
add
push
or
push
inc
push
inc
adc
cmp
or
add
add
sbb
sbb
and
add
add
sbb
sbb
push
add
or
add
jo
pop
add
or
add
add
sub
add
push
inc
adc
add
add
jae
add
or
add
outs
ins
add
or
add
outs
test
add
adc
sub
adc
sub
add
adc
lods
add
push
add
add
add
lods
add
push
outs
inc
add
push
inc
adc
add
add
add
adc
sub
add
fimul
adc
(bad)
push
push
add
sbb
add
or
fadd
pop
adc
add
inc
adc
add
add
add
outs
test
add
adc
sub
push
sub
add
adc
outs
mov
add
push
sub
add
fimul
adc
(bad)
push
push
add
sbb
add
or
fadd
add
add
add
add
push
add
or
add
push
add
jnp
add
add
jnp
add
add
clc
add
or
add
push
add
jnp
add
add
jnp
add
add
clc
add
or
add
push
add
jnp
add
add
outs
mov
or
add
add
add
or
add
add
outs
jne
add
sub
add
add
jnp
add
add
add
add
add
jnp
add
add
bound
add
outs
ins
add
or
add
add
add
jnp
add
add
test
add
mov
add
add
or
add
add
add
add
sub
or
add
add
add
add
add
jle
add
add
sbb
jne
add
and
add
add
or
add
or
push
sub
push
sub
add
adc
outs
mov
add
push
sub
add
fimul
adc
(bad)
push
push
add
sbb
add
or
fadd
pop
pop
outs
mov
pop
adc
sub
add
outs
mov
add
add
add
add
add
clc
add
or
add
push
add
add
add
add
clc
add
or
add
push
add
outs
jne
add
sub
add
add
jnp
add
add
add
add
add
jnp
add
add
bound
add
outs
ins
add
or
add
add
add
outs
test
add
mov
add
add
or
add
sub
add
add
add
mov
inc
icebp
add
add
add
add
sbb
and
add
add
add
add
add
add
xor
add
add
adc
add
sub
add
push
or
push
adc
add
inc
adc
adc
cmp
jae
add
push
or
jb
adc
jo
stos
add
push
add
pop
outs
mov
pop
jb
adc
jo
lods
add
push
add
add
or
sub
add
outs
ins
add
or
pop
or
add
or
or
adc
sub
add
outs
stos
add
push
adc
stos
add
push
sub
add
or
inc
adc
adc
sub
or
xchg
add
adc
adc
sub
or
push
push
add
sbb
add
or
fadd
or
inc
adc
adc
sub
pop
outs
or
add
add
outs
jne
add
sub
add
add
adc
(bad)
add
adc
frstor
add
jb
adc
jo
jns
add
adc
movups
or
inc
push
inc
sub
push
add
pop
adc
sub
fnsave
add
add
add
push
or
adc
jo
sbb
push
add
or
add
push
add
adc
jo
sbb
push
add
or
add
push
add
pop
outs
mov
pop
adc
jo
sbb
push
add
or
add
push
add
adc
jo
sbb
push
add
or
add
push
add
add
or
sub
add
outs
ins
add
or
pop
or
add
or
or
adc
sub
add
outs
stos
add
push
adc
stos
add
push
sub
add
or
inc
adc
adc
sub
or
xchg
add
adc
adc
sub
or
push
push
add
sbb
add
or
fadd
or
inc
adc
adc
sub
pop
outs
or
add
add
outs
jne
add
sub
add
add
adc
fidivr
ficom
add
pop
adc
sub
sbb
add
add
add
ficom
push
adc
add
pop
adc
sub
add
or
fadd
add
add
add
push
adc
sub
add
push
sub
add
inc
jl
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
lar
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
adc
adc
add
add
add
or
add
adc
add
inc
or
sub
add
add
add
add
sub
add
or
add
outs
push
add
or
jnp
add
add
test
add
or
add
or
pop
add
or
inc
sub
pop
add
sub
add
add
cmp
rol
add
add
add
or
add
outs
push
add
or
jnp
add
add
test
add
or
add
or
pop
add
or
inc
sub
pop
add
sub
add
add
sub
add
jnp
add
add
test
add
adc
cmp
add
test
add
or
pop
outs
test
add
or
add
or
jnp
add
add
or
add
outs
push
add
or
pop
add
or
inc
or
sub
sub
adc
xchg
add
or
sub
add
push
push
add
sbb
add
or
fadd
add
push
jge
add
add
jnp
add
add
outs
mov
add
outs
outs
add
or
add
add
add
outs
mov
add
outs
outs
add
or
add
add
add
outs
mov
add
outs
outs
add
or
push
outs
lods
add
push
or
add
outs
scas
add
push
or
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
add
add
add
mov
dec
inc
sldt
add
adc
add
call
adc
sub
add
or
pop
cmp
add
xor
add
add
adc
push
adc
sub
push
adc
call
add
or
add
or
add
or
inc
adc
adc
sub
lea
or
or
pop
popf
adc
outs
adc
add
adc
add
add
add
pop
inc
push
inc
adc
adc
sub
pop
call
or
jo
pop
adc
pop
pop
pop
adc
adc
adc
mov
add
or
or
sub
add
add
xor
add
add
xor
add
jnp
add
add
test
add
or
sub
add
test
add
or
add
add
or
outs
lods
add
push
outs
stc
add
or
pop
add
or
inc
or
push
or
and
adc
sub
or
add
push
push
add
sbb
add
or
fadd
adc
sub
add
sub
adc
add
add
add
dec
add
add
add
sbb
add
add
add
adc
add
xchg
add
add
sub
add
jnp
add
add
test
add
adc
inc
adc
test
add
or
push
outs
test
add
adc
add
or
jnp
add
add
or
add
outs
push
add
or
pop
add
or
inc
adc
adc
sub
jge
add
add
push
add
add
xchg
add
adc
adc
sub
add
push
push
add
sbb
add
or
fadd
jle
add
add
sub
aad
add
add
sub
push
adc
sub
add
add
sub
lea
add
add
jnp
add
add
jnp
add
add
mov
add
outs
mov
add
add
jnp
add
add
jnp
add
add
mov
add
outs
mov
add
add
jnp
add
add
jnp
add
add
mov
add
outs
mov
add
add
jnp
add
add
clc
add
or
add
add
add
adc
add
push
inc
adc
adc
sub
add
jo
add
jnp
add
add
push
adc
sub
add
add
test
add
add
add
add
clc
add
or
add
add
add
clc
add
or
popa
add
push
add
jnp
add
add
lods
add
push
or
add
jnp
add
add
scas
add
push
or
add
adc
add
or
jb
push
add
adc
add
add
jb
push
add
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
(bad)
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
(bad)
jo
adc
add
add
jb
adc
jo
adc
add
add
jb
adc
jo
adc
add
add
jle
add
add
stc
add
or
add
or
or
add
stc
add
or
add
or
add
add
add
adc
adc
cmp
add
add
sub
push
add
push
push
inc
adc
adc
sub
adc
jo
or
add
xor
add
or
add
sub
add
push
sub
add
push
inc
adc
adc
sub
adc
jo
or
add
mov
add
or
add
sub
sub
pop
add
push
push
inc
adc
adc
sub
adc
jo
or
add
repz
jo
or
add
sub
push
add
push
push
inc
adc
adc
sub
adc
jo
or
add
xor
add
or
add
sub
push
add
push
push
inc
adc
adc
sub
adc
jo
or
add
xor
add
or
add
sub
pop
add
push
push
inc
adc
adc
sub
adc
jo
or
add
xor
add
or
add
sub
add
add
add
inc
adc
adc
sub
adc
jo
or
add
aad
add
or
add
add
add
add
and
add
adc
adc
sub
add
add
jnp
add
add
or
or
add
adc
add
adc
outs
add
or
add
add
add
outs
push
add
or
add
add
add
outs
pop
add
or
add
add
add
outs
test
jnp
add
add
outs
test
jnp
add
add
outs
jae
add
add
jnp
add
add
outs
test
add
add
adc
add
add
sldt
add
sbb
add
jns
add
aaa
add
adc
add
ins
cs
add
cs
add
cs
add
inc
push
inc
sub
push
add
or
or
add
push
or
or
rol
add
add
jae
add
or
add
mov
add
jbe
add
adc
xor
add
jb
adc
jo
xor
add
adc
sbb
add
jb
adc
jo
add
or
ficom
or
add
or
or
add
or
fadd
sub
add
or
outs
xor
add
adc
adc
jb
adc
jo
pop
add
or
fisubr
pop
add
pop
inc
push
inc
adc
adc
sub
adc
add
sbb
add
add
sub
add
adc
jo
sbb
add
jb
adc
jo
pop
outs
sbb
adc
push
adc
jo
pop
adc
push
add
or
sub
add
or
add
or
add
fiadd
add
pop
pop
pop
or
sbb
add
inc
adc
adc
cmp
(bad)
(bad)
inc
push
push
inc
adc
adc
cmp
add
add
jnp
add
add
clc
add
or
adc
jo
pop
add
or
rol
add
jnp
add
add
clc
add
or
adc
jo
pop
add
or
cmps
add
add
jnp
add
add
clc
add
or
adc
jo
pop
add
or
lea
add
add
add
add
clc
add
or
adc
jo
pop
add
or
add
add
clc
add
or
adc
jo
pop
add
or
add
add
clc
add
or
adc
jo
pop
add
or
add
add
clc
add
or
adc
add
or
add
add
clc
add
or
adc
add
or
add
add
clc
add
or
adc
add
or
inc
sub
push
add
or
or
add
add
adc
adc
push
jb
adc
or
add
adc
sbb
adc
or
sub
add
mov
ret
jo
adc
sub
add
or
push
add
pop
inc
sub
add
or
cmp
add
add
sbb
and
add
jb
push
add
and
or
or
and
add
push
inc
adc
adc
sub
push
add
mov
add
push
add
aas
add
or
push
add
pop
inc
sub
add
or
add
ret
add
sbb
adc
adc
push
jb
push
add
adc
pop
add
adc
sbb
push
add
adc
sbb
sbb
add
mov
fcom
add
adc
sub
add
or
push
add
pop
and
push
add
or
inc
push
inc
adc
adc
sub
mov
add
add
pop
sbb
and
add
sub
add
or
pop
add
pop
add
or
and
or
or
add
add
sub
add
or
adc
sub
add
or
add
sub
pop
add
pop
add
sbb
add
adc
outs
sbb
pop
add
or
push
add
pop
inc
sub
add
or
add
add
add
sub
add
or
add
or
add
add
add
sub
add
add
cmp
add
add
add
add
cmp
jb
add
add
add
add
add
aas
add
jle
add
adc
add
cmp
add
cmp
add
add
adc
add
sub
add
sub
and
add
and
add
add
adc
or
jb
pop
add
outs
sbb
add
or
jb
or
jo
outs
sbb
add
or
jb
pop
add
ja
add
or
add
mov
add
add
or
or
or
jo
jnp
add
add
clc
add
or
add
or
or
or
jo
jnp
add
add
clc
add
or
add
or
or
or
jo
jnp
add
add
clc
add
or
and
add
sub
add
add
clc
add
or
adc
add
sub
jo
outs
and
add
add
jb
or
jo
pop
or
jo
and
add
add
jb
add
jo
fcom
add
and
add
add
jb
or
jo
out
add
and
add
add
jb
or
jo
mov
add
add
or
or
push
add
sbb
add
aam
add
outs
and
add
add
jb
pop
add
out
add
and
add
add
jb
sbb
jo
out
add
and
add
add
add
sbb
add
add
add
adc
add
sub
add
jge
add
add
and
fdivr
jmp
and
pop
sbb
out
add
add
adc
add
or
sub
add
push
or
pop
jb
push
add
ja
add
or
or
add
push
adc
sub
pop
push
add
sub
add
add
jo
outs
and
add
add
jb
push
add
sub
and
add
add
add
adc
adc
add
push
adc
sub
add
or
fadd
add
adc
adc
add
push
adc
sub
add
or
fadd
jle
add
add
xchg
add
push
outs
iret
add
push
add
add
add
pushf
add
push
outs
aad
add
add
sub
add
sub
sub
sbb
add
add
add
push
adc
adc
sub
add
and
add
sbb
mov
push
add
add
add
add
and
add
add
sub
sub
add
add
add
jge
adc
add
add
add
add
add
add
add
add
mov
repnz
jle
add
adc
add
cmp
add
cmp
add
add
xchg
add
push
jb
sbb
jo
xor
add
jmp
add
add
add
inc
or
sub
add
jnp
add
add
pop
add
or
sub
or
add
sub
xor
add
add
add
add
adc
sub
add
add
add
inc
or
sub
add
sub
or
add
sub
add
xor
add
add
cmp
add
add
sub
pop
add
or
je
add
or
jbe
add
jle
add
add
sub
pushf
add
push
add
nop
add
push
jle
add
add
add
add
push
or
jnp
add
add
pop
jle
add
or
add
adc
add
outs
push
add
or
sub
add
or
inc
sub
pop
add
push
adc
sub
jge
add
add
add
add
add
and
cmp
add
add
sub
or
sbb
jo
inc
add
push
inc
sub
pop
add
push
adc
cmp
add
add
pop
push
lea
add
add
pop
adc
push
jb
sbb
jo
adc
pop
pop
mov
add
rcr
add
adc
sbb
add
add
into
add
push
mov
add
in
add
adc
sbb
sub
adc
sbb
neg
add
adc
sbb
push
mov
or
add
adc
pop
or
pushf
add
push
mov
jb
sbb
jo
adc
pop
or
jnp
add
add
or
add
mov
jb
sbb
jo
adc
pop
or
add
adc
sub
add
or
or
add
add
sub
add
or
sub
add
or
add
or
sub
sub
add
push
add
add
add
add
and
sub
add
xor
add
add
adc
jle
add
add
repnz
add
sub
add
or
add
sub
add
adc
add
adc
add
adc
jle
add
add
jmp
clc
add
or
sub
push
sub
add
adc
add
sbb
add
or
jle
add
add
in
add
add
clc
add
or
sub
add
or
add
sub
add
xor
add
add
adc
jle
add
add
out
add
add
clc
add
or
sub
push
sub
add
adc
add
xor
add
pop
add
adc
add
sub
add
or
add
sub
add
or
add
add
add
sub
add
add
add
add
inc
or
sub
sub
adc
add
stos
add
add
add
add
jnp
add
add
inc
push
inc
or
xchg
add
add
add
add
add
jb
sbb
jo
adc
jb
sbb
jo
adc
jb
sbb
jo
adc
jb
sbb
jo
adc
jb
sbb
jo
adc
jb
sbb
jo
adc
jb
sbb
jo
adc
push
or
sub
add
sbb
jo
outs
add
or
or
push
add
add
inc
or
jb
sbb
jo
outs
add
or
add
add
add
loop
add
outs
add
or
add
add
add
mov
outs
add
or
add
add
add
cmp
outs
add
or
add
add
add
xchg
add
outs
add
or
add
add
add
hlt
sbb
jo
outs
add
or
add
add
add
sbb
add
outs
add
or
add
add
add
mov
add
outs
add
or
add
add
add
dec
or
add
or
add
add
add
sbb
add
outs
add
or
add
add
add
cmp
add
outs
add
or
add
add
add
mov
add
outs
add
or
or
push
add
pop
add
or
inc
or
pop
or
or
push
add
pop
add
or
inc
or
add
add
or
jnp
add
add
push
sbb
jo
outs
add
or
add
add
add
data16
jo
outs
add
or
add
add
add
jl
add
outs
add
or
add
add
add
mov
add
outs
add
or
add
add
add
mov
outs
add
or
add
sbb
jo
xlat
add
add
jnp
add
add
in
add
outs
add
or
add
add
add
repnz
jo
outs
add
or
add
add
add
xor
add
outs
add
or
add
sbb
jo
outs
add
or
add
jb
pop
add
pop
add
or
inc
or
add
add
or
jnp
add
add
jmp
outs
add
or
add
add
add
dec
sbb
jo
outs
add
or
add
add
add
sbb
jo
outs
add
or
add
add
add
jb
add
outs
add
or
add
add
add
mov
add
outs
add
or
add
sbb
jo
outs
add
or
add
add
add
ficomp
add
outs
add
or
add
add
add
adc
add
outs
add
or
add
add
add
and
jo
outs
add
or
add
add
add
inc
sbb
jo
outs
add
or
add
jb
push
add
pop
add
or
inc
or
sbb
add
add
add
mov
outs
add
or
add
add
add
cmp
outs
add
or
add
add
add
xchg
add
outs
add
or
add
add
add
dec
sbb
jo
outs
add
or
add
add
add
pusha
sbb
jo
outs
add
or
add
jb
sbb
jo
pop
add
or
inc
or
sbb
add
jb
push
add
pop
add
or
inc
or
sbb
add
add
add
nop
sbb
jo
outs
add
or
add
add
add
cmp
outs
add
or
add
add
add
sahf
sbb
jo
outs
add
or
add
add
add
stos
sbb
jo
outs
add
or
add
add
add
les
jo
outs
add
or
add
jb
push
add
pop
add
or
inc
or
add
add
add
add
add
in
sbb
jo
outs
add
or
add
add
add
(bad)
sbb
jo
outs
add
or
add
add
add
push
sbb
add
or
add
add
add
and
add
or
add
add
add
ss
add
or
add
add
add
pop
sbb
add
or
add
add
add
jp
add
outs
add
or
add
add
add
mov
add
or
add
sbb
add
or
add
add
add
add
clc
add
or
add
add
sub
add
push
pop
call
add
or
sub
add
push
pop
call
das
add
or
sub
adc
add
stos
add
add
add
add
add
xor
add
push
inc
or
sub
add
cmp
jnp
add
add
xor
add
push
inc
or
sub
add
sub
jnp
add
add
xor
add
push
inc
or
sub
add
sub
jnp
add
add
xor
add
push
inc
or
sub
add
sub
jnp
add
add
xor
add
push
inc
or
sub
add
sub
add
add
add
xor
add
push
inc
or
sub
add
sub
jb
push
add
sub
push
sub
add
xor
add
add
adc
add
add
add
clc
add
or
add
jo
pop
add
or
inc
or
sub
pop
add
add
add
clc
add
or
add
jo
pop
add
or
inc
or
sub
add
add
add
clc
add
or
add
jo
pop
add
or
inc
or
sub
push
add
add
add
clc
add
or
add
or
add
or
sub
add
or
add
sub
add
adc
add
adc
add
adc
jle
add
add
jmp
clc
add
or
sub
push
sub
add
adc
add
adc
add
adc
jle
add
add
cdq
add
push
or
add
sub
xor
add
add
adc
add
add
add
or
jge
add
add
sub
add
add
add
mov
inc
or
add
add
jnp
add
add
outs
push
add
or
add
jge
add
add
jnp
add
add
inc
push
inc
or
add
add
add
add
push
adc
jo
add
inc
or
add
add
or
jnp
add
add
adc
add
add
or
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
ficom
push
push
inc
or
add
add
or
fadd
push
or
jnp
add
add
adc
add
add
or
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
ficom
pop
push
inc
or
add
add
or
fadd
jb
adc
jo
or
add
push
adc
jo
or
add
xchg
add
push
and
add
inc
or
jb
adc
jo
or
add
xor
add
or
add
add
add
add
and
add
or
jnp
add
add
jnp
add
add
or
or
add
adc
add
adc
outs
add
or
add
add
add
outs
push
add
or
cmp
add
add
sbb
add
or
push
add
pop
add
or
mov
push
add
sbb
xor
add
add
cmp
add
add
jae
add
or
outs
pop
add
or
add
or
add
or
or
add
or
add
or
add
or
or
jnp
add
add
push
add
add
pop
add
or
add
or
add
push
sub
add
add
jbe
add
outs
pop
add
or
add
or
sbb
jae
add
or
add
or
add
jnp
add
add
adc
add
add
add
add
adc
add
sbb
add
add
add
add
sgdtd
add
jle
add
add
jnp
add
add
outs
test
jnp
add
add
outs
test
jnp
add
add
outs
jae
add
add
jnp
add
add
outs
test
jnp
add
add
sub
add
add
pop
add
add
add
add
add
add
add
pop
rol
adc
add
add
add
add
add
add
add
sbb
add
add
add
add
add
jo
pop
adc
add
push
add
add
mov
add
push
inc
adc
adc
sub
add
or
add
adc
adc
sub
add
pop
add
or
add
or
add
or
sub
add
outs
lods
add
push
jb
pop
add
inc
add
sub
add
push
outs
lods
add
push
jb
(bad)
jo
inc
add
push
inc
sub
push
add
or
or
cli
add
add
jb
pop
add
or
add
xor
add
or
add
or
add
jb
push
add
xor
add
adc
add
imul
add
or
or
lea
add
adc
adc
push
(bad)
data16
add
add
or
push
adc
adc
add
and
pop
(bad)
data16
add
add
call
data16
add
or
add
pop
add
or
sub
add
push
adc
jo
sub
inc
adc
adc
sub
add
add
xchg
add
or
cmp
pop
adc
cmp
(bad)
dec
push
inc
adc
adc
sub
push
lahf
add
push
jae
add
or
add
or
jle
add
add
adc
add
cmp
add
add
add
add
cmp
add
add
add
add
add
and
add
adc
adc
sub
add
push
adc
mov
add
add
mov
add
add
adc
add
jae
add
or
add
or
push
adc
jb
pop
add
cmp
add
add
push
outs
cmp
add
add
sub
push
adc
add
add
add
adc
pop
sub
or
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
ficom
pop
push
inc
adc
adc
sub
add
or
fadd
add
add
add
and
add
adc
adc
sub
add
push
adc
mov
add
add
mov
add
add
adc
add
jae
add
or
add
or
or
or
pop
add
cmp
add
add
or
add
or
add
inc
add
adc
add
add
add
adc
or
add
or
add
jnp
add
add
jge
add
add
jnp
add
add
jge
add
add
ficom
or
inc
adc
adc
sub
add
or
fadd
add
add
add
add
add
mov
pop
add
add
add
loop
sub
add
add
add
adc
add
add
xor
sbb
add
inc
add
adc
sbb
add
add
adc
push
or
pop
add
or
add
or
sub
sbb
add
popa
add
add
add
add
or
jnp
add
add
or
add
or
add
or
jnp
add
add
adc
add
add
or
add
jnp
add
add
or
add
daa
add
add
add
or
sbb
jnp
add
add
or
add
or
add
or
add
add
add
add
jnp
add
add
adc
add
jnp
add
add
adc
add
add
add
add
jnp
add
add
sub
add
jnp
add
add
pop
or
ret
add
jnp
add
add
or
add
or
add
or
add
add
add
add
add
add
add
pop
or
nop
add
add
jnp
add
add
or
add
or
add
or
add
add
add
add
add
add
add
pop
or
popa
add
add
add
or
add
adc
jnp
add
add
or
add
inc
sub
pop
add
add
add
adc
pop
or
xor
ficom
push
push
inc
adc
adc
add
or
fadd
add
adc
push
inc
adc
or
add
or
fadd
add
push
or
add
or
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
xor
add
add
adc
jae
add
push
or
add
cdq
add
push
outs
pop
add
push
add
jnp
add
add
inc
or
sub
int3
add
add
jo
add
add
outs
cmp
add
pop
xor
push
outs
arpl
add
adc
add
inc
sub
push
add
add
add
push
add
push
inc
or
sub
out
add
or
add
movs
push
add
add
outs
arpl
add
outs
test
add
inc
or
sub
add
add
outs
arpl
add
outs
test
add
mov
add
add
or
sub
add
sub
add
add
adc
add
ins
add
add
add
adc
add
add
add
inc
or
sub
add
add
outs
push
add
or
add
jge
add
add
jnp
add
add
outs
test
jnp
add
add
outs
test
jnp
add
add
outs
jae
add
add
jnp
add
add
outs
test
adc
sbb
xor
add
add
pop
add
or
add
or
sub
add
adc
add
adc
add
adc
jle
add
add
repz
add
clc
add
or
sub
push
sub
add
adc
add
xor
add
adc
add
add
add
mov
add
add
or
add
add
add
outs
outs
add
or
add
jge
add
add
sub
add
or
inc
or
add
sub
add
adc
add
sub
add
pop
add
adc
add
add
add
add
inc
sub
pop
add
push
sub
loopne
add
sbb
add
add
add
sub
sub
xor
add
sbb
add
adc
add
add
or
add
add
sbb
add
sub
add
jae
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
add
aas
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
add
inc
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
inc
add
or
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
inc
add
or
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
add
add
movs
add
or
add
movs
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
or
or
or
add
or
add
add
add
fcomp
add
lods
add
or
add
add
add
rol
add
pop
jae
scas
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
jb
pop
add
inc
add
or
add
outs
dec
add
or
add
add
add
pop
pop
(bad)
test
stos
add
or
add
add
add
sbb
add
lods
add
or
add
add
add
push
add
add
push
jae
add
or
add
or
add
add
add
outs
dec
add
or
add
add
add
and
dec
add
or
add
add
add
outs
dec
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
or
lea
add
jae
add
or
add
or
add
add
add
xor
add
lods
add
or
add
add
add
fild
add
and
scas
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
jb
and
jo
inc
add
or
add
outs
dec
add
or
add
add
add
outs
dec
add
or
add
add
add
mov
push
jae
add
or
add
or
add
add
add
jae
add
or
add
or
add
add
add
jp
add
lods
add
or
add
add
add
adc
add
or
add
or
add
add
add
xor
mov
add
add
jnp
add
add
inc
mov
mov
add
outs
mov
add
add
jnp
add
add
dec
pop
push
jae
add
or
add
or
add
add
add
jae
add
or
add
or
add
add
add
pushf
and
jo
lods
add
or
add
add
add
inc
add
or
outs
dec
add
or
add
add
add
inc
add
or
add
or
(bad)
retf
add
add
pop
push
pop
sti
jae
add
or
add
add
jnp
add
add
inc
add
or
add
or
(bad)
into
add
add
push
jb
or
jo
mov
add
push
push
jb
add
jo
pop
jae
add
or
or
jo
mov
add
xor
jb
add
jo
pop
jae
add
or
or
jo
cmp
cmp
jb
add
jo
pop
jae
add
or
or
jo
xchg
add
sub
jb
add
jo
pop
jae
add
or
add
add
jnp
add
add
inc
add
or
jnp
add
add
push
add
or
add
add
add
inc
add
or
or
jo
push
add
or
add
add
add
inc
add
or
or
jo
push
add
or
add
add
add
imul
add
outs
scas
add
or
add
add
add
xor
add
or
add
add
add
inc
mov
add
jae
add
or
add
or
add
add
add
pop
pop
jae
add
or
add
or
add
add
add
push
or
jo
lods
add
or
add
add
add
inc
pop
or
or
add
or
add
add
add
xor
add
or
add
add
add
sbb
add
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
dec
pop
es
add
or
add
or
add
add
add
mov
lods
add
or
add
add
add
add
add
adc
scas
add
or
add
or
add
add
add
sub
mov
add
add
jnp
add
add
pop
adc
add
or
add
or
add
add
add
shl
add
lods
add
or
add
add
add
inc
pop
or
or
add
or
add
add
add
das
outs
mov
add
add
jnp
add
add
cmp
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
pop
sub
add
or
add
or
add
add
add
out
add
lods
add
or
add
add
add
inc
pop
or
or
add
or
add
add
add
xor
add
or
add
add
add
loop
add
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
dec
pop
or
or
add
or
add
add
add
cld
and
jo
lods
add
or
add
add
add
add
add
adc
scas
add
or
add
or
add
add
add
sub
add
or
add
add
add
pop
inc
jae
add
or
add
or
add
add
add
adc
add
lods
add
or
add
add
add
inc
pop
or
or
add
or
add
add
add
xor
add
or
add
add
add
mov
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
dec
pop
ds
add
or
add
or
add
add
add
and
add
lods
add
or
add
add
add
sub
add
or
add
add
add
add
add
adc
scas
add
or
add
or
add
add
add
sub
or
add
add
add
outs
mov
add
add
jnp
add
add
dec
pop
ins
jae
add
or
add
or
add
add
add
xor
add
lods
add
or
add
add
add
addr16
adc
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
pop
and
jo
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
test
add
add
add
or
add
or
add
add
add
jl
add
lods
add
or
add
add
add
call
cwde
add
add
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
jb
and
jo
inc
add
or
add
outs
dec
add
or
add
add
add
mov
add
pop
xor
test
stos
add
or
add
add
add
mov
lods
add
or
add
add
add
adc
adc
add
or
add
or
add
add
add
outs
dec
add
or
add
add
add
cmp
add
or
add
add
add
outs
dec
add
or
add
add
add
outs
mov
add
add
jnp
add
add
stos
add
add
xor
test
stos
add
or
add
add
add
aam
add
lods
add
or
add
add
add
daa
pop
adc
add
or
add
or
add
add
add
aaa
outs
mov
add
add
jnp
add
add
stos
push
add
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
inc
cwde
add
push
jae
add
or
add
or
add
add
add
mov
push
add
or
add
add
add
or
jp
test
stos
add
or
add
add
add
fisub
add
lods
add
or
add
add
add
inc
add
or
and
jo
pop
add
or
add
add
add
aad
add
pop
adc
add
or
add
or
add
add
add
sub
add
or
add
add
add
outs
test
jnp
add
add
pop
add
or
add
or
add
add
add
js
pop
jae
add
or
add
or
add
add
add
bound
add
lods
add
or
add
add
add
pop
pop
push
jae
add
or
add
or
add
add
add
xor
add
or
add
add
add
sbb
add
outs
add
or
add
add
add
outs
test
jnp
add
add
adc
or
add
or
add
or
add
add
add
xchg
add
lods
add
or
add
add
add
and
or
or
add
or
add
add
add
sub
add
or
add
add
add
xchg
add
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
jb
and
jo
inc
add
or
add
outs
dec
add
or
add
add
add
inc
pop
xor
test
stos
add
or
add
add
add
mov
lods
add
or
add
add
add
adc
adc
add
or
add
or
add
add
add
outs
dec
add
or
add
add
add
outs
dec
add
or
add
add
add
outs
dec
add
or
add
add
add
outs
mov
add
add
jnp
add
add
popa
pop
xor
test
stos
add
or
add
add
add
shl
add
lods
add
or
add
add
add
sub
adc
add
or
add
or
add
add
add
sub
or
add
add
add
lahf
push
add
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
inc
cwde
add
push
jae
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
outs
add
add
add
jnp
add
add
popa
pop
or
test
stos
add
or
add
add
add
fsub
add
lods
add
or
add
add
add
daa
pop
adc
add
or
add
or
add
add
add
sub
add
or
add
add
add
outs
pop
add
or
add
add
add
xchg
push
add
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
inc
cwde
add
push
jae
add
or
add
or
add
add
add
sbb
pop
jae
add
or
add
or
add
add
add
in
add
lods
add
or
add
add
add
push
pop
push
jae
add
or
add
or
add
add
add
xor
add
or
add
add
add
sbb
add
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
outs
test
jnp
add
add
jb
and
jo
inc
add
or
add
outs
dec
add
or
add
add
add
mov
add
pop
and
add
or
add
or
add
add
add
or
add
lods
add
or
add
add
add
adc
adc
add
or
add
or
add
add
add
outs
dec
add
or
add
add
add
xor
or
add
add
add
outs
dec
add
or
add
add
add
outs
mov
add
add
jnp
add
add
popa
pop
and
add
or
add
or
add
add
add
and
add
lods
add
or
add
add
add
daa
pop
adc
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
cdq
push
add
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
inc
cwde
add
push
jae
add
or
add
or
add
add
add
jb
and
jo
inc
add
or
add
outs
dec
add
or
add
add
add
mov
add
pop
or
test
stos
add
or
add
add
add
push
and
jo
lods
add
or
add
add
add
adc
adc
add
or
add
or
add
add
add
outs
dec
add
or
add
add
add
xor
dec
add
or
add
add
add
outs
dec
add
or
add
add
add
jb
and
jo
inc
add
or
add
outs
dec
add
or
add
add
add
inc
pop
or
test
stos
add
or
add
add
add
mov
add
lods
add
or
add
add
add
adc
adc
add
or
add
or
add
add
add
outs
dec
add
or
add
add
add
xor
add
or
add
add
add
outs
dec
add
or
add
add
add
outs
mov
add
add
jnp
add
add
stos
add
add
and
add
or
add
or
add
add
add
movs
and
jo
lods
add
or
add
add
add
sub
adc
add
or
add
or
add
add
add
das
outs
mov
add
add
jnp
add
add
movs
push
add
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
inc
cwde
add
push
jae
add
or
add
or
add
add
add
jb
and
jo
inc
add
or
add
outs
dec
add
or
add
add
add
inc
pop
and
add
or
add
or
add
add
add
shl
add
lods
add
or
add
add
add
adc
adc
add
or
add
or
add
add
add
outs
dec
add
or
add
add
add
xor
add
or
add
add
add
outs
dec
add
or
add
add
add
outs
mov
add
add
jnp
add
add
stos
add
add
or
test
stos
add
or
add
add
add
jmp
add
add
jnp
add
add
es
adc
add
or
add
or
add
add
add
sub
mov
add
add
jnp
add
add
dec
pop
add
outs
add
or
add
add
add
outs
pop
add
or
add
add
add
inc
cwde
add
push
jae
add
or
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
or
xor
add
jae
add
or
add
or
add
add
add
hlt
and
jo
lods
add
or
add
add
add
rol
add
pop
and
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
out
add
add
or
add
or
add
add
add
mov
lods
add
or
add
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
mov
add
outs
add
or
add
add
add
inc
mov
mov
add
outs
mov
add
add
jnp
add
add
cwde
add
add
or
add
or
add
add
add
adc
jo
lods
add
or
add
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
and
or
add
add
add
push
or
jo
outs
add
or
add
add
add
inc
mov
add
jae
add
or
add
or
add
add
add
adc
pop
add
or
add
add
add
inc
popf
add
push
jae
add
or
add
or
add
add
add
cmps
add
or
jnp
add
add
cmps
add
or
add
add
add
outs
test
add
add
jnp
add
add
push
jae
add
or
add
or
add
add
add
sbb
add
lods
add
or
add
add
add
jmp
add
and
add
jae
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
popa
add
or
and
jo
add
add
jae
add
or
add
or
add
add
add
popa
add
or
add
or
outs
add
or
add
add
add
popa
add
or
add
or
outs
add
or
add
add
add
outs
add
or
add
add
add
and
add
or
add
or
add
add
add
jg
add
lods
add
or
add
add
add
in
add
and
scas
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
bound
jo
outs
add
or
add
jnp
add
add
push
add
add
rol
add
jae
add
or
fiadd
add
add
pop
sub
add
or
add
jmp
add
and
add
jae
add
or
fadd
add
add
sub
jnp
add
add
cmps
add
or
add
cmps
add
or
jnp
add
add
cmps
add
or
add
cmps
add
or
jnp
add
add
cmps
add
or
add
cmps
add
or
jnp
add
add
cmps
add
or
add
cmps
add
or
jnp
add
add
cmps
add
or
add
sub
add
add
push
jb
and
jo
inc
add
or
add
sub
add
add
push
sub
add
add
push
sub
or
add
and
jo
lods
add
or
add
sub
add
or
add
sbb
jo
outs
add
or
add
inc
xchg
add
push
jae
add
or
icebp
add
or
add
add
add
loope
add
add
jnp
add
add
outs
loop
add
add
jnp
add
add
loope
add
add
jnp
add
add
loope
add
add
jnp
add
add
outs
loop
add
add
jnp
add
add
jecxz
add
add
jnp
add
add
inc
add
or
add
or
add
add
add
loope
add
add
jnp
add
add
loope
add
add
jnp
add
add
outs
loop
add
add
jnp
add
add
jecxz
add
add
jnp
add
add
loope
add
add
jnp
add
add
inc
add
or
add
or
add
add
add
loope
add
add
jnp
add
add
loope
add
add
jnp
add
add
loope
add
add
jnp
add
add
loope
add
add
jnp
add
add
loope
add
add
jnp
add
add
loope
add
add
jnp
add
add
outs
loop
add
add
jnp
add
add
loope
add
add
jnp
add
add
outs
loop
add
add
push
sub
add
or
sub
add
sub
add
sub
adc
add
or
add
or
jnp
add
add
sub
push
sub
add
jge
add
add
adc
add
or
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
adc
add
or
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
adc
add
or
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
adc
add
or
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
adc
add
or
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
adc
add
or
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
adc
add
daa
add
add
add
mov
add
sub
add
or
inc
or
sub
add
push
or
or
sub
sub
push
sub
adc
add
or
add
pop
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
push
add
sub
add
sub
xor
add
add
cmp
add
add
sbb
and
add
or
jb
and
jo
and
push
sub
add
or
sub
add
or
push
or
add
sub
sub
add
and
add
jo
add
sub
add
add
add
add
add
jno
add
add
add
adc
add
cmp
add
add
or
add
add
aam
add
jb
push
add
pop
add
or
inc
or
cmp
add
and
jo
pop
add
or
inc
or
sub
add
cmp
add
add
jb
and
jo
pop
add
or
inc
or
sub
add
cmp
add
add
jb
and
add
or
inc
or
sub
add
cmp
jb
and
add
or
inc
or
sub
add
cmp
jb
add
pop
add
or
inc
or
sub
add
cmp
pop
add
pop
add
or
inc
or
sub
add
cmp
add
add
add
pop
add
or
inc
or
sub
add
cmp
add
add
daa
add
pop
add
or
inc
or
sub
add
cmp
jb
daa
add
pop
add
or
inc
or
sub
add
cmp
add
add
jb
daa
add
pop
add
or
inc
or
sub
add
cmp
add
add
jb
sub
jo
pop
add
or
inc
or
sub
add
cmp
add
add
jb
sub
jo
pop
add
or
inc
or
sub
add
cmp
jb
sub
jo
pop
add
or
inc
or
sub
add
cmp
xor
add
pop
add
or
inc
or
sub
add
cmp
add
add
sub
jo
pop
add
or
inc
or
sub
add
cmp
add
add
add
add
aam
add
jb
push
add
pop
add
or
inc
or
cmp
add
and
jo
pop
add
or
inc
or
sub
add
cmp
jb
and
jo
pop
add
or
inc
or
sub
add
cmp
add
add
jb
and
add
or
inc
or
sub
add
cmp
add
add
jb
and
add
or
inc
or
sub
add
cmp
add
add
jb
add
pop
add
or
inc
or
sub
add
cmp
jb
add
pop
add
or
inc
or
sub
add
cmp
mov
pop
add
or
inc
or
sub
add
cmp
add
add
daa
add
pop
add
or
inc
or
sub
add
cmp
add
add
daa
add
pop
add
or
inc
or
sub
add
cmp
jb
sub
jo
pop
add
or
inc
or
sub
add
cmp
add
add
jb
sub
jo
pop
add
or
inc
or
sub
add
cmp
add
add
jb
sub
jo
pop
add
or
inc
or
sub
add
cmp
add
add
jb
sub
jo
pop
add
or
inc
or
sub
add
cmp
add
add
jb
sub
jo
pop
add
or
inc
or
sub
add
cmp
sbb
add
aam
add
jb
pop
add
pop
add
or
inc
or
cmp
add
and
jo
pop
add
or
inc
or
sub
add
cmp
add
add
and
jo
pop
add
or
inc
or
sub
add
cmp
add
add
and
add
or
inc
or
sub
add
cmp
jb
and
add
or
inc
or
sub
add
cmp
add
add
jb
add
pop
add
or
inc
or
sub
add
cmp
add
add
jb
add
pop
add
or
inc
or
sub
add
cmp
add
add
jb
add
pop
add
or
inc
or
sub
add
cmp
add
add
jb
daa
add
pop
add
or
inc
or
sub
add
cmp
test
add
pop
add
or
inc
or
sub
add
cmp
jb
sub
jo
pop
add
or
inc
or
sub
add
sub
jb
sub
jo
pop
add
or
inc
or
sub
add
sub
jb
sub
jo
pop
add
or
inc
or
sub
add
sub
add
sub
jo
pop
add
or
inc
or
sub
add
sub
add
sub
jo
pop
add
or
inc
or
sub
add
sub
add
sub
add
sbb
add
ja
add
inc
add
adc
add
mov
adc
add
and
sub
adc
add
jb
add
or
pop
adc
adc
adc
add
push
or
and
jae
add
add
add
adc
inc
push
adc
sub
add
jb
add
and
or
jae
add
add
fiadd
add
sub
add
add
add
add
outs
jo
add
adc
add
pop
add
add
add
add
add
pop
and
push
add
or
add
inc
or
sub
add
or
add
sub
push
sbb
add
sbb
push
add
add
adc
add
outs
add
or
sub
add
sub
add
sub
sub
add
add
sub
add
add
add
push
sub
add
add
add
adc
add
sldt
add
add
add
add
push
or
outs
cmp
add
sub
adc
add
adc
add
adc
add
jae
add
push
or
outs
cmp
add
sub
push
and
add
add
jb
push
add
sub
add
sub
add
sub
add
sub
add
adc
add
or
add
dec
add
adc
add
add
add
sub
push
sub
add
add
add
add
add
adc
add
or
add
dec
add
adc
add
add
add
sub
push
sub
xor
add
add
add
add
adc
add
add
mov
add
sbb
push
or
add
outs
jg
add
or
sub
jge
add
add
jb
add
fiadd
add
add
sub
add
xor
add
add
dec
add
adc
add
add
add
sub
push
sub
xor
add
add
add
add
adc
add
add
sub
push
sub
jge
add
add
jb
add
fiadd
add
add
sub
adc
add
or
add
or
add
add
add
sub
push
sub
xor
add
add
add
add
adc
add
add
sub
push
sub
jge
add
add
jb
or
jo
fiadd
add
add
sub
adc
add
or
add
or
add
add
add
sub
push
sub
xor
add
add
add
add
adc
add
add
sub
push
sub
jge
add
add
jb
add
fiadd
add
add
sub
adc
add
or
add
or
add
add
add
sub
push
sub
xor
add
add
add
add
adc
add
add
sub
push
sub
jge
add
add
jb
add
fiadd
add
add
sub
adc
add
or
add
adc
add
add
add
sub
push
sub
xor
add
add
add
add
adc
add
add
add
sub
push
sub
jge
add
add
jb
push
add
fiadd
add
add
sub
adc
add
or
add
dec
add
adc
add
add
add
sub
push
sub
xor
add
add
add
add
adc
add
add
mov
add
sbb
push
or
add
outs
jg
add
or
sub
jge
add
add
jb
add
fiadd
add
add
sub
add
xor
add
add
add
adc
jnp
add
add
push
or
add
add
or
add
or
jl
add
add
pop
sub
add
sub
push
pop
inc
push
inc
or
adc
add
xor
add
dec
add
adc
jnp
add
add
push
or
add
test
add
je
add
add
jl
add
add
pop
sub
add
sub
push
pop
inc
push
inc
or
adc
add
and
add
dec
add
adc
add
add
add
push
adc
add
pop
sub
add
add
or
add
or
add
push
add
sub
add
sub
add
sub
add
add
add
jle
sub
add
or
add
add
add
add
add
xor
add
add
add
sub
add
sub
add
add
add
bound
sub
add
or
add
add
add
add
add
xor
sub
add
sub
add
add
add
inc
add
sub
add
add
add
jge
add
add
sub
add
sub
add
add
add
bound
sub
add
or
add
add
add
add
add
cmp
add
sub
add
sub
add
add
add
jle
sub
add
or
add
add
add
add
add
cmp
add
add
add
sub
add
sub
add
add
add
fiadd
sub
add
or
add
add
add
add
add
cmp
add
add
push
add
aas
add
add
push
add
add
push
push
jge
add
add
sub
add
sub
add
add
add
bound
sub
add
or
add
add
add
add
add
inc
add
add
sub
add
pop
add
add
add
add
sub
add
sub
add
add
xchg
add
or
add
sub
add
add
xchg
add
or
add
sub
add
add
xchg
add
or
add
sub
add
adc
add
adc
add
dec
add
adc
add
xchg
add
or
outs
fadd
add
or
add
sub
add
xor
add
add
add
add
add
add
push
or
add
add
add
add
xor
add
add
add
push
outs
fadd
add
or
add
jnp
add
add
pop
jnp
add
add
sub
or
adc
add
adc
add
push
add
adc
add
xchg
add
or
outs
fld
add
or
add
sub
add
xor
add
add
add
add
add
add
push
or
add
add
add
push
outs
fld
add
or
jnp
add
add
pop
jnp
add
add
sub
or
add
add
xor
add
add
add
add
add
sub
fiadd
add
or
add
sub
add
xor
add
add
add
add
add
add
push
or
add
add
add
push
outs
fiadd
add
or
jnp
add
add
add
add
pop
jnp
add
add
sub
or
add
add
xor
add
add
add
adc
add
xchg
add
or
outs
fild
add
or
add
sub
add
xor
add
add
push
add
adc
jae
add
push
or
add
add
add
add
cmp
add
add
push
add
aas
add
add
push
add
add
push
push
jge
add
add
push
outs
fild
add
or
pop
pop
jnp
add
add
pop
jnp
add
add
sub
or
sub
sub
add
or
add
sub
adc
add
aas
add
add
add
add
add
add
sub
inc
or
sub
add
sub
add
sub
add
outs
in
add
or
add
or
push
add
add
add
add
sub
pop
sub
adc
add
or
add
push
add
adc
jle
add
add
sub
push
sub
add
add
add
adc
add
and
add
pop
add
adc
sub
add
push
jb
das
add
inc
add
add
xchg
add
or
push
je
add
sbb
sub
pop
sub
add
adc
add
and
add
pop
add
adc
sub
add
push
jb
das
add
inc
add
add
xchg
add
or
push
je
add
sbb
sub
pop
sub
add
adc
add
or
add
pop
add
adc
jle
add
add
sub
push
sub
add
add
sub
sub
add
add
add
push
add
cdq
add
or
add
add
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
pop
cdq
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
push
popa
xor
test
fwait
call
inc
out
jecxz
fst
loopne
movs
cmp
xchg
pop
add
push
add
add
add
add
add
cwde
add
add
add
add
add
add
add
sbb
add
daa
add
add
add
add
jae
add
arpl
outs
add
add
add
sub
add
add
jo
jb
popa
add
popa
add
add
jbe
add
jne
add
ins
add
add
mov
jo
imul
jne
jb
add
outs
add
xor
add
ins
add
add
dec
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
xor
add
arpl
je
jne
jb
add
outs
add
xor
add
ins
add
add
test
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
pop
mov
add
jo
imul
jne
jb
add
outs
add
xor
add
popa
add
add
jo
imul
jne
jb
add
outs
add
add
add
ins
add
add
in
add
and
imul
jne
jb
add
outs
add
aaa
add
add
ins
add
add
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
mov
add
add
add
add
add
add
aaa
add
push
add
add
xor
add
add
add
aaa
add
and
add
add
and
test
add
es
add
sbb
add
add
and
mov
add
into
ins
add
adc
add
add
and
push
ja
add
or
or
add
or
add
add
add
add
or
add
add
data16
ss
dec
inc
inc
push
js
in
popf
or
pop
(bad)
pop
pop
mov
mov
inc
movs
pop
cmps
retf
xchg
stos
cld
std
sub
mov
add
add
mov
retf
push
movs
add
inc
add
pop
adc
std
out
dec
mov
fstp
cli
pop
xchg
popf
out
xchg
dec
fisubr
out
and
inc
dec
cld
fist
lods
aad
push
xor
test
sahf
inc
and
dec
sbb
fistp
xchg
xchg
icebp
push
cmp
xor
pusha
repnz
push
xchg
nop
push
sub
xor
mov
pop
ja
add
leave
sub
adc
add
sub
aad
push
stos
add
and
je
xor
in
pop
jge
cmp
add
pop
mov
and
addr16
cld
add
icebp
scas
sbb
cmp
xlat
mov
imul
movs
xchg
adc
leave
stos
adc
mov
clc
mov
imul
(bad)
clc
out
out
lar
sub
std
jecxz
pop
fnstsw
sahf
shr
jecxz
push
aas
mov
xor
or
gs
or
mov
sbb
cli
mov
or
or
test
add
sub
and
jmp
movs
aas
mov
pop
sbb
adc
(bad)
cld
std
loope
sbb
sar
cmp
mov
add
repnz
rcl
mul
add
enter
adc
(bad)
cld
popa
jo
sbb
push
xor
push
bound
xlat
dec
sahf
and
inc
add
pop
in
add
aad
sbb
fisttp
add
iret
ins
mov
ret
(bad)
lds
jo
scas
aas
int
pop
cmp
jns
inc
and
js
xchg
(bad)
fndisi(8087
fisubr
adc
(bad)
xor
stos
div
stos
sbb
in
ja
adc
out
mov
loope
imul
adc
mov
mov
div
rcr
mov
jno
loopne
dec
add
aam
mov
das
xchg
fcomp
cld
retf
call
dec
jns
test
mov
jecxz
or
and
test
xchg
and
in
mov
clc
in
out
repz
pop
cmp
jge
in
mov
add
dec
clc
aaa
mov
loop
addr16
xchg
lods
mov
inc
add
in
fmul
add
add
sbb
test
ror
dec
hlt
push
adc
sub
pop
cs
repnz
xor
cwde
pop
out
or
stos
movs
mov
ins
jno
hlt
sbb
les
iret
push
fldenv
in
std
std
mov
and
add
(bad)
mov
push
push
jnp
addr16
xchg
or
arpl
mov
xor
outs
add
xchg
movs
movs
cmp
(bad)
lds
jmp
(bad)
outs
cmp
fucomip
retf
out
pop
neg
pop
pop
sub
popf
(bad)
fidivr
call
test
jo
push
es
(bad)
lahf
mov
adc
push
add
mov
dec
stos
ret
xchg
test
hlt
data16
int3
gs
jno
xchg
pop
xchg
jmp
loope
bound
lods
or
cmp
push
sbb
mov
add
mov
iret
jle
(bad)
jg
mov
cli
push
or
xchg
or
pusha
fs
mov
movs
jnp
data16
or
pop
scas
(bad)
fcomp
jge
int
fadd
mov
outs
cmc
std
(bad)
and
add
icebp
cld
mov
or
lahf
std
in
out
test
fst
inc
stos
repz
daa
xor
pop
(bad)
jp
and
pop
pop
push
jp
cmp
cwde
in
lock
cmp
rol
xor
into
xchg
pop
xlat
scas
push
aad
(bad)
stos
mov
xor
push
pop
stc
sub
mov
add
(bad)
cmp
or
aad
jecxz
dec
ret
test
imul
repnz
mov
js
sub
or
jge
push
push
repnz
repnz
pop
gs
icebp
pop
fidiv
test
scas
gs
pop
cld
fxch
jle
mov
xor
aaa
add
jmp
push
jmp
popf
push
(bad)
bound
cmp
loop
pop
leave
sbb
jmp
das
test
(bad)
sar
sbb
mov
xor
ja
or
inc
retf
mov
dec
push
fisubr
bound
mov
add
cli
jns
xchg
jbe
dec
fiadd
sub
mov
xchg
push
xor
stos
and
sbb
jp
daa
(bad)
jmp
fcompp
xor
cmp
xor
jmp
movs
outs
cmp
xchg
leave
mov
sub
xchg
xor
mov
das
push
cmp
stos
or
out
adc
test
xchg
pop
pop
outs
ja
mov
movs
(bad)
push
fiadd
xor
xor
popf
push
mov
xor
aas
xor
popa
iret
adc
push
add
jp
xor
mov
out
ins
pop
sbb
jae
aaa
pop
and
cdq
retf
xor
dec
jmp
mov
mov
mov
pop
pop
mov
js
cmps
and
jb
add
sub
in
and
(bad)
cmp
inc
loopne
(bad)
hlt
or
mov
(bad)
cmp
push
jae
xchg
mov
enter
xor
ins
dec
and
icebp
mov
push
mov
out
xchg
aad
mov
nop
push
dec
mul
sbb
jmp
fld
mov
hlt
mov
push
(bad)
sub
or
adc
push
retf
outs
outs
loope
dec
mov
inc
shr
add
shl
int
(bad)
push
loope
push
and
xlat
dec
loope
sub
cmp
retf
out
and
in
fsubr
sub
or
sar
xor
sub
ret
daa
cmp
mov
pop
in
push
adc
inc
mov
sahf
sub
icebp
dec
or
das
pop
jg
ins
int3
sub
sub
xchg
mov
push
in
cmp
sbb
jo
das
jp
(bad)
out
jecxz
mov
aam
push
loopne
inc
inc
jnp
adc
jbe
add
mov
add
loop
xor
outs
outs
shl
sbb
in
pusha
ss
mov
dec
pop
jg
es
shl
jb
mov
xor
pop
sti
das
mov
add
test
pop
or
adc
gs
(bad)
and
inc
add
mov
fdivrp
leave
sub
data16
mov
jmp
dec
in
sbb
inc
cmp
and
jns
jmp
sub
push
hlt
dec
out
loope
out
adc
fiadd
adc
fsub
cld
icebp
mov
stos
add
ja
jne
dec
jp
popa
icebp
and
xchg
gs
sar
fist
and
mov
in
mov
xchg
xchg
enter
pop
push
jnp
fucomi
jbe
fwait
sub
push
cmps
(bad)
push
or
and
fcomp
pop
cmp
rol
fisttp
and
mov
int3
jecxz
out
sbb
mov
out
cmp
mov
mov
les
xchg
lea
xchg
call
cmp
ret
jl
jle
adc
add
jg
fsubrp
loop
mov
pop
lods
and
std
jmp
fdivrp
in
jl
lds
int3
out
fcmovnbe
jo
sub
(bad)
xchg
mov
dec
lea
mov
jo
fld
or
xor
cmp
jb
neg
test
por
aad
dec
movs
fdivrp
iret
in
loop
mov
sar
xor
adc
std
mov
(bad)
repnz
cmp
push
lods
add
xchg
mov
adc
inc
movs
pop
or
cs
cld
mov
dec
xchg
mov
jmp
adc
icebp
stos
or
xchg
mov
cmps
fwait
adc
(bad)
jge
jbe
cmp
sbb
and
or
pop
sbb
and
scas
xor
jno
imul
inc
out
arpl
add
sub
(bad)
int3
cmp
sti
(bad)
dec
fild
test
int
in
sbb
push
pop
lock
mov
scas
jg
sub
xchg
sti
inc
inc
ins
cwde
mov
outs
ins
and
dec
repnz
fwait
(bad)
enter
xor
mov
xor
retf
out
or
shl
dec
pop
pusha
(bad)
out
dec
retf
and
xor
jns
push
xor
jmp
lds
dec
ds
cli
mov
push
adc
aas
(bad)
jns
mov
dec
lods
int3
popw
in
mov
xchg
icebp
(bad)
aam
jg
mov
sahf
adc
clc
jmp
test
stos
std
or
test
test
popf
scas
pop
dec
and
jp
(bad)
lock
sti
fldenv
pop
cmp
enter
and
xchg
aam
and
rol
or
sbb
adc
xchg
ins
sub
add
sub
out
sahf
or
inc
sbb
aaa
jae
and
out
popf
sahf
daa
movs
add
push
and
loopne
(bad)
sbb
ret
jae
test
xchg
gs
pop
lea
add
(bad)
mov
add
mov
jmp
clc
std
xor
out
inc
(bad)
scas
gs
inc
aad
ror
je
popa
in
xchg
mov
mov
test
push
push
in
cmp
cmc
icebp
and
icebp
out
das
cdq
lds
xor
cmc
iret
(bad)
sbb
cmp
pmaxub
cld
aam
xor
out
mov
jmp
retf
mov
cwde
lock
call
ins
pop
mov
sub
lods
cli
xchg
xchg
cmp
or
cld
push
jo
mov
int3
loope
(bad)
das
pop
call
push
push
je
pop
or
loop
ins
xchg
jmp
add
xchg
xor
int
shl
xchg
aaa
dec
xor
(bad)
cld
mov
mov
cmp
fucomip
inc
pop
leave
addr16
add
xchg
xor
ret
rcr
outs
daa
lods
cld
inc
(bad)
jp
ja
fist
jmp
lds
pop
pop
mov
xor
idiv
push
clc
mov
sar
icebp
stos
or
add
adc
les
fcomp
mov
arpl
add
(bad)
(bad)
or
fisub
js
jge
mov
mov
outs
nop
ss
icebp
es
cmp
lea
lea
push
cmps
xchg
cmc
bound
fwait
pop
mov
jmp
jae
pop
adc
outs
mov
pop
pusha
loop
repz
pop
sar
std
push
xchg
in
add
sub
lods
fwait
repnz
mov
jle
mov
or
push
pop
push
jecxz
inc
(bad)
sbb
mov
add
lahf
mov
iret
(bad)
pop
adc
fidivr
push
jmp
aas
dec
inc
jecxz
retf
cs
int
and
push
pop
pop
inc
add
lods
data16
add
aad
aaa
cmp
mov
add
mov
pop
std
call
stc
fwait
sub
mov
sbb
sti
xor
stos
or
ss
inc
mov
fstp
push
push
pop
cmp
inc
mov
data16
aas
jbe
mov
adc
fdivr
les
mov
xchg
mov
ja
test
mov
add
mov
push
test
fcomp
iret
sahf
xlat
ficom
cmp
in
mov
mov
mov
loope
scas
mov
retf
mov
xlat
or
sub
and
xor
aaa
lods
bound
adc
mov
add
xchg
or
mov
jg
push
das
xchg
not
mov
ins
aas
pop
dec
cmp
ss
mov
into
push
push
cld
mov
sti
pop
push
adc
jns
mov
(bad)
es
jecxz
add
xor
iret
jmp
mov
xor
jecxz
arpl
lock
in
fwait
push
in
adc
scas
mov
add
pop
add
pushf
pop
loop
jg
cwde
into
mov
adc
and
repz
fld
dec
sti
pusha
ret
cmp
enter
xchg
lea
into
fist
in
pop
adc
aad
and
mov
jne
idiv
popf
test
mov
(bad)
scas
cmp
popf
inc
lock
pushw
stc
js
jmp
mov
push
pop
jns
shl
test
(bad)
out
lahf
jnp
clc
mov
add
inc
xchg
outs
inc
leave
cmp
cmp
call
push
sbb
imul
pop
cmc
inc
scas
mov
sahf
into
ret
or
jmp
pop
jbe
into
push
adc
sub
or
jge
xor
inc
and
push
fdiv
repz
mov
dec
in
sbb
stc
fwait
jae
jns
mov
jmp
sub
add
icebp
mov
jecxz
iret
push
adc
dec
shl
jl
fdiv
jmp
sub
mov
xchg
push
lock
mov
mov
inc
ret
cmp
arpl
pop
pusha
ss
pop
xlat
xchg
push
jg
into
push
xor
mov
pop
in
dec
jae
or
inc
mov
lods
adc
call
shr
jg
cs
jb
push
sbb
cmc
ficom
mov
adc
xlat
hlt
in
lahf
test
sbb
(bad)
fistp
push
cwde
mov
fist
pop
sbb
adc
inc
aaa
xchg
sub
inc
pusha
std
jle
shl
and
jle
jmp
fisubr
imul
scas
add
push
iret
iret
frstor
or
add
cmp
les
sbb
sahf
ficom
or
xchg
test
js
je
test
cmp
(bad)
icebp
sbb
cwde
imul
clc
mov
add
fwait
pop
imul
xlat
xor
ret
call
jmp
dec
xor
arpl
xor
add
movs
sti
fdivr
adc
aaa
xlat
xor
pop
xchg
mov
mov
or
and
fwait
scas
ins
lea
adc
sbb
and
inc
adc
pop
and
or
jns
mov
xor
popa
xlat
popa
repz
pop
mov
jecxz
or
xchg
outs
lods
repnz
add
cmp
cmps
shl
cmp
dec
mov
fcompp
pusha
ret
ja
hlt
xor
mov
daa
bound
mov
xchg
icebp
sub
xchg
ja
std
out
add
gs
sbb
(bad)
pop
add
jne
jnp
mov
push
fisubr
lock
push
pop
jns
inc
xchg
mov
out
std
rcr
repz
mov
out
dec
xlat
push
mov
mov
out
(bad)
mov
mov
sbb
das
xor
std
add
daa
mov
clc
xchg
sub
ficom
loop
fmul
cmp
cs
mov
lds
and
scas
sub
pop
mov
adc
repz
mov
xlat
sbb
repnz
ss
outs
lds
in
ret
inc
int
add
(bad)
jecxz
xchg
push
push
mov
xchg
fdiv
in
and
pop
mov
sub
mov
test
jae
push
test
mov
push
mov
pop
imul
popf
adc
sbb
dec
dec
jecxz
or
cmp
(bad)
adc
mov
mov
push
pop
pop
icebp
jmp
idiv
imul
dec
or
cmp
adc
jns
mov
ja
into
mov
jg
push
(bad)
jns
mov
xor
ret
repz
inc
push
sahf
xor
jg
stos
mov
pop
popa
mov
fstp
add
sbb
fldcw
ffree
cmp
fistp
(bad)
pop
and
jne
fiadd
std
fwait
inc
fistp
vphaddbw
jle
jns
mov
sbb
push
ss
imul
(bad)
gs
jl
or
nop
cld
fisttp
or
out
or
sbb
sti
mov
or
jmp
icebp
and
add
jl
jo
jns
dec
jl
stos
lock
lock
or
out
cli
add
sar
cld
clc
out
movs
push
jle
sbb
add
cmc
stos
icebp
into
xchg
mov
dec
pop
fiadd
sbb
into
cmp
icebp
(bad)
in
loope
lahf
and
jno
cmp
paddq
push
xchg
inc
cmps
popa
out
xchg
mov
jnp
in
cmp
retf
pop
iret
js
out
jbe
shr
fcom
jp
add
test
mov
sub
sbb
fsub
data16
addr16
jo
mov
(bad)
call
jns
cmp
test
xchg
iret
fdivr
mov
jnp
adc
jmp
sub
dec
fistp
sub
push
push
push
jp
scas
into
aaa
test
xchg
sti
inc
sbb
mov
aam
xchg
(bad)
bound
push
mov
fwait
scas
imul
inc
inc
popa
push
or
push
popf
cmp
mov
sbb
mov
jle
ds
in
push
call
rcr
or
call
inc
outs
add
aad
in
inc
dec
sbb
mov
mov
mov
faddp
mov
inc
in
in
js
cmp
xor
add
dec
push
mov
xchg
lock
xchg
xchg
mov
mov
lods
add
lods
imul
push
jl
retf
ins
or
fwait
loope
lahf
(bad)
loopne
xor
bnd
dec
sbb
xchg
out
jbe
popf
fistp
in
inc
test
push
add
dec
mov
fstp
jmp
lock
mov
ins
fs
arpl
pop
out
push
inc
(bad)
pop
fidiv
pop
adc
mov
jecxz
hlt
mov
test
add
push
sar
call
push
inc
jecxz
ja
push
add
mov
pop
inc
cmps
jnp
sbb
sbb
in
adc
mov
ret
loope
nop
cmp
ins
test
lock
hlt
pusha
push
dec
outs
imul
icebp
addr16
add
popa
cmp
outs
in
rol
call
int3
inc
jl
adc
inc
jmp
inc
dec
les
repz
aaa
mov
xchg
aad
ficomp
add
ss
into
sub
xor
push
call
retf
cs
pinsrw
out
mov
mov
sub
or
sub
pusha
jmp
dec
shl
mov
add
sub
jo
cs
fucomi
mov
(bad)
out
je
mov
adc
cmp
aam
fwait
push
cmp
and
push
arpl
repnz
dec
sti
xor
sub
je
inc
jecxz
cmp
and
scas
mov
add
adc
jp
movs
out
stc
fwait
ja
dec
or
lods
jnp
sub
mov
inc
mov
jae
cmc
cmp
adc
and
jbe
mov
jae
mov
jl
or
ss
iret
add
sahf
mov
add
xchg
(bad)
shr
jne
sbb
mov
enter
inc
test
mov
or
dec
dec
bound
mov
inc
cmps
dec
sbb
and
cmp
dec
adc
test
mov
mov
leave
xchg
cmp
scas
dec
into
gs
repnz
add
cmp
inc
pop
push
fidivr
leave
mov
jnp
cmp
rol
jg
mov
xor
ss
pop
mov
movs
push
je
pop
jp
fisttp
fisttp
jecxz
data16
adc
addr16
mov
in
icebp
pop
push
test
inc
mov
jns
cwde
not
ins
push
dec
mov
jo
dec
and
or
jecxz
cs
leave
(bad)
ficomp
xchg
mov
cdq
xchg
pop
nop
mov
div
es
xchg
inc
push
add
sar
pop
cmp
(bad)
lods
aas
out
ins
jo
xchg
ret
add
push
xor
inc
repz
je
mov
sub
idiv
xor
cdq
jl
mov
call
push
mov
clc
retf
pop
xchg
cmp
rcl
int
or
addr16
jns
sub
cmp
fcomp
sti
or
sub
fst
arpl
retf
pop
out
inc
cmc
sbb
sti
inc
cmp
xlat
mov
mov
inc
push
jmp
adc
add
adc
mov
test
sbb
rcl
shr
push
bound
or
cmp
jno
(bad)
push
dec
aas
repz
and
xchg
aam
xor
sti
pop
es
pop
rcl
iret
imul
push
add
push
add
adc
jbe
sbb
adc
fs
jo
add
outs
or
mov
sbb
xor
fsubrp
pop
inc
xor
inc
les
or
dec
adc
or
and
nop
add
mov
adc
loopne
ror
sub
cwde
or
movs
sti
movs
lods
test
cmp
push
pop
aad
nop
test
arpl
jle
jmp
jecxz
outs
xchg
pop
push
and
push
mov
and
popf
or
aad
sbb
sub
sar
push
into
icebp
inc
mov
imul
cld
test
icebp
add
sbb
dec
xlat
cmp
xor
add
aas
rol
push
inc
add
mov
aaa
imul
dec
popf
inc
addr16
sbb
sub
shl
pop
imul
or
add
or
add
jg
mov
popf
out
cmps
cmp
cmp
mov
or
xchg
outs
outs
(bad)
sbb
movs
jmp
jecxz
push
adc
and
mov
add
sbb
stos
sar
adc
xor
nop
shl
dec
bound
dec
xchg
das
cmp
pushf
xor
fwait
xor
in
or
pusha
fidivr
cwde
jne
mov
pop
xor
inc
pop
pop
call
ins
int
sub
dec
inc
and
pop
adc
call
inc
inc
cmp
in
jl
xchg
add
mov
sbb
or
shl
call
mov
xor
int3
pop
mov
mov
out
cmc
ins
pop
pop
cmps
ds
inc
pop
popf
pop
pop
or
xchg
lea
(bad)
jbe
pop
push
sbb
jbe
mov
dec
dec
add
fsubr
add
mov
push
shr
mov
cmp
cmps
std
(bad)
dec
in
add
out
call
sbb
jbe
aam
jo
(bad)
cmp
jecxz
cmp
out
xor
imul
or
pop
adc
std
xor
call
mov
jne
cli
xor
pop
jb
js
inc
or
jp
cmp
fwait
xor
icebp
shl
pop
dec
add
xchg
sahf
inc
popa
cld
mov
jb
cmp
jg
hlt
add
jmp
inc
call
in
iret
aas
or
out
popa
jbe
addr16
or
scas
fbstp
retf
and
fcmovne
push
xchg
jle
dec
sti
jle
mov
push
das
xchg
sahf
jmp
mov
leave
jae
jmp
or
adc
into
pop
xchg
dec
sbb
push
or
inc
push
cld
in
test
sar
inc
sub
inc
jo
jp
lahf
jns
pop
js
sub
jno
cmp
push
out
lock
adc
sbb
mov
jg
push
arpl
mov
cli
xor
test
sahf
push
dec
push
add
stos
or
lods
adc
imul
jge
test
adc
clc
inc
xor
dec
sbb
or
push
jmp
outs
jecxz
mov
mov
popf
pop
lock
mov
cwde
or
mov
xadd
or
adc
dec
cmp
in
movs
sahf
fwait
cld
adc
push
fistp
stos
gs
(bad)
push
xor
sahf
push
(bad)
push
pop
shl
(bad)
out
sub
repz
pushf
mov
push
and
aas
cs
pop
cli
retf
aaa
in
daa
cmp
mul
stos
pop
test
xor
or
ret
icebp
rol
xor
mov
xchg
outs
fsubr
mov
add
jo
and
vmwrite
jae
inc
retf
xchg
xchg
xchg
imul
or
gs
stos
jns
xchg
outs
loop
inc
push
mov
inc
out
(bad)
cdq
pop
mov
push
push
inc
and
or
loopne
in
sahf
daa
and
push
sub
stc
shl
dec
push
nop
retf
leave
fst
sub
mov
push
in
add
push
cdq
xchg
xor
push
add
add
and
test
pop
jo
mov
mov
and
aad
push
loope
add
push
fwait
push
add
fmul
sub
xor
inc
fiadd
or
sbb
or
stos
fnstsw
out
mov
push
out
mov
pop
or
inc
adc
xchg
mov
sbb
sti
pushf
ja
dec
xor
mov
mov
fist
cmp
or
(bad)
outs
dec
add
cmp
out
bt
pop
add
mov
inc
hlt
mov
loopne
mov
pop
push
mov
out
push
xchg
shr
or
(bad)
mov
add
pop
mov
xor
xchg
add
repnz
iret
or
shl
jmp
rcl
dec
mov
inc
je
inc
mov
mov
pop
mov
xor
aad
add
add
or
fldenv
ror
pop
mov
jmp
lock
adc
pop
and
push
add
cmp
jecxz
movs
pop
mov
js
inc
je
or
js
fiadd
ja
jns
mov
stc
or
js
push
rcr
mov
add
lahf
add
push
rol
push
cmp
popa
cli
xchg
lods
mov
imul
fnstcw
shl
shl
aaa
jns
adc
cmp
mov
mov
dec
sbb
adc
push
add
mov
xchg
loope
inc
pop
mov
mov
cld
xchg
sbb
xor
cmps
rcr
mov
jge
add
inc
adc
jg
stos
add
fs
mov
jno
jg
loope
sldt
js
aad
pop
cdq
mov
adc
pop
xchg
add
mov
push
xor
sbb
fistp
dec
mov
mov
loope
mov
or
pop
mov
stos
(bad)
call
ds
lock
mov
ins
inc
adc
pusha
cmp
push
jl
push
inc
jmp
jmp
add
shl
les
mov
jae
or
or
nop
and
add
(bad)
gs
ss
in
je
cdq
ins
mov
push
add
add
push
add
push
sbb
pop
out
popa
jp
adc
stc
and
(bad)
js
xlat
(bad)
jecxz
movs
mov
sbb
adc
pop
dec
outs
pusha
rcr
out
dec
call
xor
sub
ja
adc
es
mov
push
sub
sbb
adc
mov
mov
adc
cmp
inc
jns
out
jno
xor
jecxz
lods
adc
bndldx
leave
inc
inc
jmp
shl
or
mov
mov
sub
call
adc
jg
sub
sbb
ins
sahf
sti
xor
ins
pop
xchg
pop
sahf
cld
(bad)
push
inc
pusha
dec
cld
lods
sub
enter
inc
out
not
pop
sti
call
sub
add
add
add
and
ja
sub
mov
not
and
icebp
pop
xchg
lods
add
add
sub
add
popa
les
xor
mov
adc
(bad)
fild
xchg
xor
stos
jge
out
ins
cwde
call
jo
mov
mov
push
adc
ins
jmp
xor
adc
pop
or
stc
add
cmp
ins
jns
ret
push
lock
and
sub
shl
ror
jp
pop
jecxz
ficomp
dec
(bad)
mov
add
jne
ja
add
(bad)
lahf
hlt
(bad)
jmp
sbb
pop
or
in
movs
jl
stos
hlt
adc
pop
loope
in
add
xchg
mov
sub
dec
sbb
add
add
adc
test
ret
out
mov
xchg
lods
stc
mov
fimul
sbb
adc
push
sbb
push
ret
outs
jae
add
clc
jne
add
repz
add
aaa
scas
pop
mov
mov
inc
jne
popa
inc
cli
pop
jmp
imul
sbb
pop
adc
sub
add
or
loope
pop
leave
jl
inc
(bad)
sar
cmc
(bad)
sub
jle
pop
inc
das
xor
in
std
jge
add
inc
out
and
loopne
retf
mov
fdivr
mov
outs
iret
out
daa
mov
add
cmp
loopne
inc
jne
inc
push
(bad)
add
vminss
add
iret
loopne
and
lea
mov
jp
jnp
rol
adc
(bad)
aaa
(bad)
xchg
adc
and
clc
adc
add
pop
inc
or
inc
sub
adc
push
arpl
lea
jno
inc
push
into
mov
sub
jne
inc
ss
mov
or
sbb
popa
xlat
mov
jne
sub
cmp
outs
outs
xor
leave
cld
std
dec
sahf
std
and
test
sbb
adc
ficomp
test
ins
mov
jo
fxtract
sbb
adc
mov
gs
adc
mov
mov
dec
jne
iret
or
fiadd
sbb
mov
hlt
enter
fbstp
sub
or
adc
cmp
lea
mov
inc
dec
loopne
shl
repnz
ret
xchg
jmp
xor
jp
clc
popa
jns
nop
jnp
fldcw
mov
jp
adc
inc
enter
fisttp
add
inc
not
xor
pop
cmps
adc
jns
pop
pop
(bad)
jg
push
pop
cmp
xor
fstp
add
add
add
je
fwait
or
dec
nop
test
add
fcom
cmp
push
pop
and
push
jp
sub
jns
imul
sbb
stos
or
add
fxch
adc
add
popa
out
sub
mov
or
or
add
pop
mov
mov
ins
xchg
add
enter
adc
out
ins
mov
movs
add
inc
(bad)
in
ds
fldln2
mov
adc
ins
sub
push
sbb
add
leave
stos
bound
push
cmp
xchg
xlat
das
pusha
fsub
cmp
push
into
mov
lods
adc
or
pop
and
add
and
call
jl
or
and
sbb
fdivr
jge
dec
or
add
inc
or
psadbw
sbb
add
sbb
ins
je
and
add
add
pop
leave
daa
mov
scas
outs
sbb
rcl
mov
pusha
sub
call
jo
ror
or
xchg
or
mov
mov
add
add
out
out
push
mov
retf
scas
xor
and
xor
xor
jle
adc
cs
xor
mov
inc
dec
sbb
fs
jmp
adc
cmp
ffreep
adc
(bad)
loopne
xor
data16
mov
dec
jle
dec
jle
dec
sbb
out
fst
ja
xor
jg
out
push
test
jge
enter
int3
ins
scas
in
cmp
push
repz
fs
xlat
mov
add
ficom
call
sub
and
push
inc
rcr
ret
inc
and
push
xchg
jb
jne
in
xchg
pop
jmp
(bad)
popf
inc
cli
(bad)
jge
or
out
xchg
sub
push
mov
es
jmp
jecxz
add
or
popa
fdiv
sahf
push
(bad)
lahf
push
cmp
inc
fst
sbb
push
cli
in
ins
ffree
lods
mov
into
cmovns
call
sbb
inc
mov
arpl
pop
aaa
xchg
dec
pop
fstp
jnp
xlat
add
rcr
jecxz
gs
ins
pop
cmps
mov
xchg
mov
mov
mov
jle
repz
ja
outs
(bad)
push
sbb
or
cmp
loop
aas
cmp
imul
fist
jbe
fdivr
add
lods
loopne
test
mov
test
pop
loopne
inc
enter
loopne
aaa
dec
inc
mov
pop
mov
ja
or
mov
mov
ins
xchg
sar
int3
inc
sub
or
out
cwde
mov
stc
pop
cmps
sub
out
mul
(bad)
mov
ins
daa
xlat
mov
and
aas
xor
dec
dec
mov
scas
cmps
cmps
jne
adc
or
cmp
imul
loope
jo
and
popa
adc
loopne
into
icebp
rcr
sti
leave
xor
mov
push
neg
pop
(bad)
adc
mov
sti
arpl
test
push
cwde
mov
push
js
add
loopne
clc
cmp
je
sbb
iret
cmps
xchg
mov
std
ret
out
push
dec
out
jb
pop
adc
sar
jbe
adc
add
sub
int3
push
pop
mov
mov
out
push
paddusw
ret
xchg
addr16
ins
movs
hlt
xchg
test
mov
add
add
sbb
(bad)
ja
cli
dec
(bad)
and
xor
mov
sbb
fwait
add
jns
cmps
cmc
jo
dec
imul
add
adc
mov
add
or
int3
loopne
jae
add
(bad)
test
push
mov
xchg
repnz
push
dec
sbb
into
ror
cmp
(bad)
fmul
mov
add
or
mov
add
adc
lock
rol
or
mov
outs
fld
dec
pop
bound
sbb
(bad)
sub
xchg
adc
mov
sbb
loope
cmps
push
int3
gs
mov
repz
retf
ja
cmp
mov
add
into
dec
add
sbb
clc
in
addr16
xor
push
jmp
add
xadd
push
je
xchg
(bad)
pop
sub
and
add
dec
add
gs
or
stc
add
push
imul
add
push
cwde
sar
test
push
scas
and
xchg
add
add
das
stc
add
jp
jg
mov
sbb
mov
js
push
cwde
sar
test
push
scas
and
xchg
add
icebp
mov
(bad)
jmp
add
xchg
imul
int3
adc
ret
mov
retf
in
pusha
das
mov
fbstp
repnz
inc
stos
add
lods
adc
pop
(bad)
popf
xor
sti
dec
mov
push
xchg
aad
mov
fcom
arpl
sar
inc
inc
mov
stos
add
imul
jno
icebp
push
jb
arpl
xchg
aad
mov
pop
jl
fiadd
pusha
iret
std
pop
rcl
adc
xchg
(bad)
or
hlt
mov
jmp
or
adc
add
push
push
lods
pop
sbb
outs
out
in
into
jp
inc
pop
loopne
pop
mov
fucomi
or
hlt
mov
movs
test
and
ds
push
lods
mov
ficomp
pusha
mov
jmp
movs
inc
add
jmp
add
in
sti
xor
add
in
inc
or
js
or
pop
scas
mov
add
sbb
push
dec
xor
adc
loopne
gs
pop
push
cmovp
sbb
push
add
je
and
and
scas
test
pop
sub
dec
adc
(bad)
cld
mov
inc
int3
adc
call
xor
fsubr
test
clc
push
cmps
add
cdq
scas
jmp
push
add
mov
call
xor
pop
shl
or
in
les
add
mov
fwait
mov
gs
data16
xchg
cmp
packuswb
fdivr
mov
or
hlt
mov
push
cld
add
xor
pop
xchg
loope
movs
mov
icebp
or
cmp
xor
fnstenv
mov
xchg
xor
shr
jno
add
add
mov
test
add
sub
outs
in
push
aaa
xchg
mov
retf
inc
cmp
es
mov
jbe
add
add
mov
mov
or
lock
iret
jb
jns
ins
call
dec
xor
jne
addr16
rcl
test
sbb
fs
fdiv
adc
mov
and
ds
push
movs
xchg
icebp
stos
sbb
test
jnp
pusha
pop
fimul
xchg
(bad)
lahf
mov
(bad)
rcl
add
popa
rcr
aam
cmp
pop
or
lock
jns
xchg
shl
scas
pop
lahf
add
add
add
clc
movs
hlt
lock
xor
pop
push
fimul
or
mov
scas
out
movs
xchg
mov
call
xor
pop
push
outs
adc
push
popa
add
mov
pop
sub
aaa
or
stos
xor
add
xor
adc
loopne
gs
add
test
jp
ja
mov
int3
in
inc
or
add
or
in
push
pop
inc
push
rol
loopne
add
out
leave
test
inc
pusha
out
and
pop
retf
loopne
add
mov
pop
test
pop
inc
add
fisub
data16
pop
in
and
jbe
add
pop
retf
loopne
add
xor
aad
inc
data16
pop
inc
add
fisub
or
xor
aad
and
inc
add
fisub
add
add
pop
or
lock
fwait
add
or
mov
and
out
and
pop
retf
loopne
add
ins
and
add
pop
retf
inc
pop
add
and
cli
xor
xor
pop
push
fiadd
nop
mov
sbb
test
cs
mov
add
pop
retf
inc
fistp
and
sub
gs
dec
pop
mov
test
clc
pusha
sbb
add
cli
cmc
test
in
inc
or
push
pop
jp
lahf
xchg
or
add
xor
jmp
add
mov
xchg
jno
and
add
jg
int3
in
inc
or
out
out
and
adc
adc
sbb
fsubr
test
pop
test
cmp
test
dec
hlt
cmp
cs
scas
xor
call
mov
and
push
sub
add
xor
sti
(bad)
cwde
mov
hlt
cmp
mov
imul
ret
cmps
add
or
hlt
mov
or
adc
hlt
mov
out
xchg
pop
mov
mov
loopne
retf
sub
std
adc
(bad)
repz
cmp
push
add
popa
sbb
mov
and
mov
int
inc
cmc
sbb
inc
jmp
(bad)
mov
add
push
in
xor
movs
clc
pushf
cmp
shl
call
jp
bound
and
mov
je
xor
dec
and
cdq
jnp
mov
out
mul
push
and
ret
(bad)
push
lods
inc
idiv
inc
fisttp
out
jne
shr
mov
out
les
ror
mul
adc
loopne
scas
dec
shr
test
and
add
mov
std
or
test
add
cmp
dec
gs
push
test
mov
fidiv
fnsave
add
jg
mov
popf
pusha
in
dec
mov
pop
or
fld
arpl
movs
sbb
fdivrp
arpl
shl
(bad)
mov
xchg
push
iret
fucomp
inc
sti
jb
add
xor
xor
xor
jmp
rol
dec
out
mov
add
jg
mov
(bad)
cmps
out
sub
in
lock
push
mov
jle
add
or
add
or
cs
fiadd
movs
inc
xchg
sub
cmp
cmp
and
ins
arpl
ret
hlt
fst
sub
cmp
adc
add
scas
add
cdq
ja
test
pop
js
pop
retf
fst
shl
sbb
mov
(bad)
xchg
push
call
fldln2
mov
fimul
or
popa
or
rcr
ret
pop
adc
repz
sbb
mov
add
xchg
pusha
out
mov
(bad)
cmp
add
jl
scas
imul
pop
or
mov
and
nop
fstp
mov
add
mov
and
ja
fidiv
arpl
ffreep
(bad)
outs
xor
stos
xchg
mov
sbb
sub
and
stc
mov
fild
cmp
push
add
dec
idiv
xor
jae
jns
nop
xchg
xor
inc
stos
xor
pop
outs
sbb
lahf
xchg
out
cmps
jge
jmp
ficomp
(bad)
(bad)
sbb
adc
mov
(bad)
jecxz
ins
jno
inc
cmp
add
jb
pushf
(bad)
(bad)
pop
retf
in
mov
test
dec
sbb
mov
or
out
jmp
xchg
xchg
pop
inc
test
inc
pop
push
sub
cmps
arpl
push
or
cmps
dec
imul
outs
and
aas
mov
cmps
cmp
cld
jmp
or
mov
xchg
cmp
adc
push
or
mov
mov
fiadd
call
ins
xchg
jmp
fsub
or
fmulp
xchg
bound
out
out
xor
sub
mov
fild
sbb
fiadd
aad
stos
cmp
mov
lea
xor
dec
neg
mov
cs
ins
add
xor
fild
cmp
shl
jo
mov
xchg
adc
mov
outs
xchg
repnz
fistp
in
push
mov
cs
(bad)
mov
mov
loope
cmp
inc
(bad)
cmp
dec
lock
cmp
xchg
cmp
xchg
mov
add
ins
lea
loopne
mov
fdiv
adc
ss
int3
mov
add
(bad)
sbb
dec
fs
shl
aas
js
sti
inc
cs
pusha
cmp
cdq
sbb
cmp
sbb
std
pop
shl
add
ja
inc
sub
dec
xchg
scas
ins
movs
ficom
cmp
inc
inc
cmovnp
cmp
cld
shl
cmp
xchg
loop
fistp
fst
mov
inc
push
add
enter
fist
(bad)
(bad)
cwde
dec
ins
daa
pop
test
(bad)
imul
mov
(bad)
ins
xchg
sti
in
jb
mov
sahf
dec
popa
int3
rol
pop
mov
(bad)
and
(bad)
retf
add
hlt
push
cmps
std
add
and
push
mov
movs
push
inc
leave
enter
cmp
sub
push
sub
inc
add
iret
loope
mov
outs
scas
mov
adc
pop
lods
scas
aad
test
dec
mov
das
(bad)
lods
cmc
ja
mov
and
or
or
not
mov
iret
sub
sub
pop
sbb
scas
or
addr16
ja
push
add
addr16
iret
jmp
std
push
dec
inc
mov
aam
cmp
jno
in
jmp
stos
add
cmc
xchg
pop
shl
sti
lods
xchg
add
jge
pop
or
cmp
ss
cmps
cmp
lahf
(bad)
repnz
add
cmp
in
pop
sti
fdiv
shl
cld
jg
(bad)
inc
or
xor
push
scas
lods
sub
lock
and
dec
icebp
mov
jp
call
mov
mov
add
mov
add
imul
add
loopne
test
add
sar
pop
mov
jno
fisub
aaa
or
sbb
(bad)
sti
test
(bad)
sub
mov
stos
pop
mov
sbb
add
movs
xlat
popf
into
inc
xchg
mov
mov
sub
loopne
not
mul
add
je
stos
retf
or
inc
sti
ret
add
cs
xchg
in
pop
mov
dec
cmp
bound
inc
xor
rcr
jb
xchg
push
mov
cmps
mov
add
pushf
enter
por
jle
shl
jge
imul
or
das
push
adc
dec
sahf
mov
add
jmp
pop
add
aad
shl
cmp
in
shl
add
lock
dec
ins
pcmpgtw
gs
xchg
sar
shr
rol
movs
out
fldenv
add
mov
out
mov
mov
outs
cld
mov
js
mov
aad
xlat
jecxz
(bad)
xchg
xchg
mov
in
ret
jp
dec
pop
pop
xchg
sbb
test
cmps
test
jl
push
add
pop
cmps
xor
sar
shl
mov
dec
cmc
and
add
out
cmc
xchg
cmp
adc
push
daa
mov
cmp
mov
in
jp
and
xchg
mov
cli
das
pop
repz
dec
fld
pop
adc
pop
inc
dec
add
cmps
xor
mov
retf
pop
add
dec
jmp
jae
shrd
adc
fwait
inc
push
or
dec
or
add
sub
pop
xrelease
not
pop
mov
das
jnp
out
cmps
outs
(bad)
std
xchg
imul
lods
mov
jmp
jp
sar
in
push
jmp
xlat
iret
mov
jne
push
(bad)
push
mov
pop
push
dec
push
mov
test
scas
jo
add
cmp
jbe
loopne
mov
cdq
jbe
and
or
jmp
or
(bad)
aas
or
push
dec
add
repz
repz
sub
or
adc
sbb
movs
in
sub
and
jae
xchg
call
sub
xchg
std
ret
mov
dec
(bad)
push
dec
sub
sbb
mov
jb
add
or
jns
pusha
jnp
inc
add
add
mov
inc
jmp
push
es
push
xor
outs
aas
ror
add
adc
jge
in
mov
cdq
jns
mov
jno
loopne
pop
test
scas
daa
add
xor
sbb
dec
mov
jle
cld
pushf
and
retf
in
daa
dec
lahf
jmp
push
sbb
sbb
and
mov
adc
dec
imul
mov
jle
and
aas
addr16
sbb
and
fldenv
adc
xlat
test
inc
and
sbb
xchg
pusha
and
clc
or
cld
call
add
sbb
jns
int3
mov
pop
in
jnp
sbb
add
xor
mov
jnp
add
add
adc
ja
adc
pop
mov
and
cld
(bad)
push
mov
add
cwde
hlt
hlt
leave
jns
or
or
inc
and
xor
jnp
push
lods
xchg
mov
bound
inc
les
mov
xchg
jg
sbb
and
add
dec
and
pop
mov
dec
jmp
sub
add
add
dec
inc
scas
inc
pusha
sub
add
xor
add
pusha
add
add
add
add
xor
mov
imul
push
jmp
imul
push
jmp
imul
push
jmp
imul
push
jmp
imul
push
jmp
imul
push
jmp
imul
push
jmp
imul
push
jmp
imul
push
jmp
imul
push
jmp
imul
push
jmp
imul
push
jmp
imul
push
jmp
imul
test
sbb
cmp
add
xor
fadd
mov
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
(bad)
push
out
sti
push
out
sti
(bad)
stc
clc
std
push
cmc
cld
push
out
sti
push
repz
push
out
sti
push
icebp
sti
push
lock
push
cmc
cld
push
idiv
(bad)
clc
idiv
push
out
sti
push
icebp
sti
push
icebp
sti
push
out
sti
(bad)
clc
idiv
push
out
sti
push
hlt
cld
push
out
sti
push
repnz
(bad)
cld
sti
(bad)
push
icebp
sti
push
repnz
push
hlt
cld
push
repnz
push
lock
push
out
sti
push
repnz
push
hlt
cld
push
icebp
sti
push
icebp
sti
push
hlt
cld
push
out
sti
push
repz
push
out
sti
push
lock
jmp
jno
call
retf
test
cmp
pop
xchg
dec
xor
aad
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pop
(bad)
jmp
(bad)
(bad)
mov
(bad)
fdivr
jb
xlat
push
xlat
call
sar
stos
sahf
out
push
cmp
call
sar
int
icebp
inc
pop
xlat
jmp
call
into
jmp
sar
jl
(bad)
je
fdivr
jge
(bad)
push
dec
sar
in
idiv
pop
dec
sar
jnp
(bad)
xchg
test
jmp
sar
dec
xor
push
fcos
ins
pop
(bad)
call
aad
push
aad
bound
jp
(bad)
pop
inc
sar
pop
inc
sar
loop
idiv
pop
inc
sar
push
cmp
(bad)
mov
in
jmp
pop
inc
aad
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
sar
sub
jno
xlat
jmp
sar
sahf
nop
in
jg
(bad)
pusha
dec
sar
mov
push
enter
fcos
icebp
out
sti
call
push
aad
pop
inc
sar
jl
(bad)
push
cmp
aam
arpl
jmp
aad
je
fdivr
out
clc
call
sar
imul
jne
fdivr
pop
inc
sar
pop
inc
sar
outs
pop
xlat
push
fdivr
popa
dec
sar
fs
sar
je
fdivr
jge
(bad)
push
aad
pop
inc
sar
jg
(bad)
jbe
fdivr
test
dec
(bad)
lock
(bad)
(bad)
(bad)
push
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jecxz
(bad)
fcmovnbe
out
push
icebp
cmc
push
icebp
cmc
push
lock
push
cmc
idiv
cli
stc
std
(bad)
clc
idiv
(bad)
out
in
cli
call
repz
clc
cmc
idiv
div
idiv
fcom
out
jmp
cmc
push
lock
jmp
fcomip
(bad)
(bad)
out
push
repz
div
cld
(bad)
sti
cli
std
(bad)
std
std
(bad)
push
repz
push
lock
push
lock
(bad)
stc
clc
cli
(bad)
stc
clc
std
(bad)
clc
idiv
push
repnz
repz
push
lock
push
idiv
(bad)
sti
sti
(bad)
push
hlt
cli
push
repz
repz
push
lock
push
repnz
push
repnz
(bad)
cld
sti
std
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
inc
cmp
test
inc
je
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
retf
inc
cmp
test
inc
cmp
test
inc
cmp
test
inc
sub
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
fxch
ret
inc
cmp
aad
mov
jmp
fcmovnbe
inc
pop
cmp
test
call
les
(bad)
call
pop
inc
inc
cmp
test
dec
repz
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aam
jmp
push
jmp
push
jmp
push
jmp
push
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
sti
cli
jmp
adc
push
xor
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
(bad)
js
sub
clc
cmc
hlt
(bad)
out
jmp
sbb
outs
cmp
(bad)
out
jmp
(bad)
push
xor
jmp
push
jmp
push
call
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
jge
xor
push
xor
jmp
push
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fcom
jmp
push
jmp
push
jmp
push
jmp
push
inc
stos
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
push
xor
jmp
push
call
ror
(bad)
fst
retf
xchg
cmp
xor
jmp
push
jmp
push
jmp
push
(bad)
fmul
sar
jmp
push
sbb
push
jmp
(bad)
(bad)
(bad)
(bad)
inc
xor
jmp
push
jmp
push
push
and
lock
mov
jmp
push
jmp
push
jmp
push
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fcom
jmp
push
jmp
push
jmp
push
jmp
push
inc
stos
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
jmp
push
jmp
push
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fst
retf
xor
jmp
push
jmp
push
jmp
push
inc
mov
push
jmp
push
sbb
push
jmp
jmp
(bad)
jmp
push
jmp
push
jmp
push
jmp
push
jmp
ud0
mov
(bad)
(bad)
(bad)
(bad)
dec
xor
jmp
push
jmp
push
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fcom
jmp
push
jmp
push
jmp
push
jmp
push
inc
stos
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
jmp
push
jmp
push
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fst
retf
xor
jmp
push
jmp
push
jmp
push
inc
mov
push
jmp
push
sbb
push
jmp
push
xor
jmp
push
jmp
push
jmp
push
jmp
push
call
(bad)
(bad)
dec
xor
jmp
push
jmp
push
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fcom
jmp
push
jmp
push
jmp
push
jmp
push
inc
stos
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
jmp
push
jmp
push
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fst
retf
xor
jmp
push
jmp
push
jmp
push
inc
mov
push
jmp
push
sbb
(bad)
in
in
inc
xor
jmp
push
jmp
push
push
jmp
push
jmp
sbb
div
repnz
xor
jmp
push
jmp
push
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fcom
jmp
push
jmp
push
jmp
push
jmp
push
inc
stos
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
jmp
push
jmp
push
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
jmp
mov
mov
test
mov
push
jmp
push
sbb
call
(bad)
mov
jmp
push
jmp
push
jmp
push
push
pop
jmp
push
inc
mov
dec
xor
jmp
push
jmp
push
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fcom
jmp
push
jmp
push
jmp
push
jmp
push
inc
stos
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
jmp
push
jmp
push
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovnbe
cmc
dec
int
push
add
call
add
dec
int3
call
shl
push
jmp
push
sbb
jmp
xor
jmp
push
jmp
push
jmp
push
jmp
(bad)
(bad)
mov
xor
call
inc
jmp
push
jmp
push
jmp
push
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fcom
jmp
push
jmp
push
jmp
push
jmp
push
inc
stos
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
jmp
push
jmp
push
jmp
(bad)
(bad)
(bad)
stc
clc
std
call
into
call
add
dec
sub
call
add
dec
int3
jmp
fsubp
push
sbb
push
and
jmp
push
jmp
push
inc
(bad)
(bad)
(bad)
jmp
cmp
push
sbb
jmp
push
jmp
push
jmp
push
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
out
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fcom
jmp
push
jmp
push
jmp
push
jmp
push
inc
stos
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
jmp
idiv
jbe
and
jmp
push
jmp
push
jmp
(bad)
(bad)
(bad)
(bad)
hlt
jmp
or
jmp
or
(bad)
cmp
enter
loop
xchg
and
sub
inc
mov
sbb
jmp
push
jmp
push
jmp
push
jmp
push
push
(bad)
(bad)
(bad)
cld
cli
cli
dec
push
jmp
push
jmp
push
jmp
push
jmp
push
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
lock
xor
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
(bad)
jns
sub
cli
clc
idiv
outs
cmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
ud0
or
(bad)
(bad)
jg
push
push
(bad)
dec
push
shl
push
sbb
push
xor
jmp
push
jmp
push
jmp
pop
jmp
xlat
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xor
jmp
push
jmp
push
jmp
push
jmp
push
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
lock
ds
push
sbb
push
sbb
push
sbb
push
sbb
call
fcmovbe
push
sbb
push
sbb
push
sbb
push
cs
jmp
add
call
into
jmp
pop
xlat
dec
into
call
(bad)
(bad)
aas
push
push
sbb
push
sbb
dec
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jmp
push
pop
push
sbb
push
sbb
(bad)
jl
cs
cli
clc
idiv
(bad)
(bad)
(bad)
(bad)
mov
imul
lock
repnz
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
push
in
jmp
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
push
out
jmp
ror
icebp
(bad)
cmp
enter
sar
add
fdivr
in
jmp
out
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
push
in
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
out
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
sti
cli
stc
(bad)
(bad)
(bad)
(bad)
(bad)
mov
dec
sub
mov
lds
(bad)
sti
stc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
clc
std
inc
mov
out
push
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
push
jmp
jmp
ror
dec
stos
pushf
jmp
das
inc
sbb
cmp
inc
push
xor
mov
xchg
jg
retf
scas
mov
(bad)
in
jecxz
push
in
jmp
clc
cmc
repz
std
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
div
push
lock
push
call
int3
call
mov
(bad)
mov
jnp
call
sub
cmp
pop
inc
cmp
iret
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
dec
pop
cmp
popf
dec
jmp
xchg
mov
mov
mov
(bad)
fadd
mov
(bad)
fcmovnb
mov
(bad)
fcmovnb
mov
(bad)
fcmovnb
mov
(bad)
fcmovb
mov
dec
mov
inc
movs
xchg
(bad)
mov
mov
stos
jnp
call
pop
inc
dec
aas
sbb
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
iret
cmp
pop
inc
cmp
inc
cmp
inc
cmp
inc
inc
sbb
push
mov
movs
dec
mov
dec
mov
inc
popf
mov
lods
jle
call
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
iret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
(bad)
(bad)
sti
stc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
hlt
repnz
fmul
mov
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
push
inc
push
inc
push
inc
push
push
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
push
aas
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
sbb
test
sbb
xchg
inc
inc
push
inc
inc
push
inc
dec
es
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
jecxz
call
mov
cwde
dec
mov
jmp
aad
(bad)
std
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
clc
idiv
mov
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
cmp
iret
mov
dec
inc
adc
dec
inc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
and
mov
dec
inc
adc
push
clc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
adc
dec
inc
adc
dec
inc
adc
dec
inc
adc
dec
inc
adc
dec
inc
adc
dec
inc
adc
dec
inc
adc
inc
cmp
iret
mov
dec
inc
adc
dec
inc
adc
(bad)
cld
cli
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
adc
dec
inc
adc
dec
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jmp
mov
dec
inc
adc
mov
dec
inc
adc
mov
dec
inc
adc
mov
dec
inc
adc
mov
dec
inc
adc
mov
dec
inc
adc
mov
dec
inc
adc
mov
inc
cmp
iret
lea
dec
dec
adc
lea
dec
dec
adc
nop
dec
sbb
loop
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
shr
lea
dec
dec
adc
lea
call
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
in
call
call
imul
mov
fs
dec
adc
lea
dec
dec
adc
lea
call
push
aas
jmp
addr16
nop
dec
sbb
lea
dec
dec
adc
lea
dec
dec
adc
mov
inc
dec
adc
nop
dec
adc
nop
dec
adc
nop
dec
adc
nop
dec
adc
nop
dec
adc
nop
dec
adc
test
inc
(bad)
stc
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
cld
call
mov
push
xchg
jno
mov
mov
int3
(bad)
(bad)
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aad
jmp
cmc
repnz
sti
stc
idiv
sti
stc
idiv
stc
cmc
repnz
sahf
jle
nop
dec
adc
nop
dec
adc
nop
dec
adc
nop
dec
adc
xchg
push
push
(bad)
fcmovb
mov
cli
div
(bad)
sti
stc
idiv
sti
stc
idiv
cli
div
(bad)
mov
dec
adc
nop
dec
adc
nop
dec
adc
nop
dec
adc
nop
dec
adc
nop
dec
adc
mov
inc
dec
adc
xchg
push
ud0
push
ud0
push
ud0
push
ud0
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
cld
(bad)
mov
pop
sbb
in
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
in
call
push
ud0
push
ud0
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repnz
jmp
push
ud0
push
ud0
push
ud0
inc
push
inc
push
or
call
push
or
call
push
or
jmp
aam
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
clc
cmc
dec
test
call
push
or
mov
pop
(bad)
(bad)
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
scas
mov
xchg
push
or
call
aad
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
or
call
push
or
xchg
push
or
xchg
push
or
xchg
push
or
mov
inc
push
push
call
pop
push
call
pop
push
call
pop
push
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cli
clc
(bad)
clc
repz
push
out
call
push
in
jecxz
icebp
jmp
(bad)
call
mov
jmp
pop
ud0
pop
or
jmp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
pop
or
(bad)
std
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
call
call
pop
or
call
pop
or
call
inc
adc
iret
pushf
pop
adc
popf
pop
ud0
pop
ud0
pop
ud0
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
push
sub
movs
addr16
jmp
adc
popf
pop
ud0
pop
ud0
pop
ud0
pop
ud0
jle
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
adc
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
ud0
pop
ud0
pop
ud0
pop
ud0
dec
push
dec
pop
adc
mov
popa
adc
mov
popa
adc
mov
popa
adc
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ffree
test
jmp
jle
push
jno
jmp
popa
adc
mov
popa
adc
mov
popa
adc
mov
popa
adc
mov
ret
movs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
cmc
lock
scas
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
loop
jmp
popa
adc
mov
popa
adc
mov
popa
adc
mov
popa
adc
mov
dec
push
dec
arpl
jmp
gs
cmps
gs
cmps
gs
cmps
gs
cmps
gs
test
sbb
bnd
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
div
(bad)
in
loope
(bad)
stc
div
(bad)
cld
cli
idiv
sti
stc
idiv
clc
repz
(bad)
jmp
fwait
jmp
gs
cmps
gs
movs
gs
movs
gs
movs
gs
movs
gs
mov
xor
div
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
inc
xchg
pop
jmp
gs
movs
gs
movs
gs
movs
gs
movs
gs
movs
gs
movs
gs
movs
gs
xchg
dec
pop
dec
addr16
test
push
jmp
push
jmp
push
jmp
mov
stc
hlt
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
jmp
int
jmp
push
jmp
push
jmp
push
jmp
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
outs
sbb
test
push
jmp
push
jmp
push
jmp
push
jmp
dec
sbb
mov
iret
stos
imul
scas
outs
adc
jmp
outs
adc
jmp
xchg
push
(bad)
cld
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
clc
repz
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
adc
jmp
outs
adc
jmp
jp
push
out
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
outs
adc
jmp
outs
adc
jmp
outs
adc
jmp
outs
adc
dec
outs
pop
push
jae
push
jae
push
jae
push
fcmovb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
inc
cdq
push
(bad)
mov
pop
jmp
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
mov
jae
push
jae
push
jae
inc
mov
clc
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
popf
pop
push
jae
push
jae
push
jae
push
jae
push
jae
call
inc
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
cld
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
cli
inc
xchg
dec
push
js
push
sub
sti
stc
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
dec
push
js
push
js
push
aad
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jecxz
(bad)
mov
js
push
js
push
js
push
js
push
js
call
inc
sbb
mov
jge
(bad)
mov
jge
(bad)
mov
jge
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
rol
(bad)
mov
jge
(bad)
mov
ffree
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
movs
popa
(bad)
mov
jge
(bad)
mov
jge
dec
mov
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
std
sti
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
(bad)
mov
jge
(bad)
mov
jge
(bad)
mov
jge
(bad)
mov
jge
(bad)
mov
pop
sbb
mov
iret
mov
sbb
rol
inc
sbb
rol
inc
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cli
idiv
enter
rol
inc
sbb
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
lahf
push
inc
sbb
rol
inc
test
push
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
(bad)
fdiv
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
loopne
les
sbb
rol
inc
sbb
rol
inc
sbb
rol
dec
sbb
les
sbb
les
sbb
les
sbb
les
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
leave
fwait
inc
mov
inc
xchg
call
scas
addr16
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
hlt
jmp
xlat
scas
addr16
pushf
inc
inc
xchg
les
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
call
and
(bad)
sti
clc
icebp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ror
les
sbb
les
sbb
les
sbb
les
sbb
lea
iret
lds
sbb
dec
mov
dec
mov
dec
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jmp
stos
push
loop
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cli
dec
xchg
sub
int
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
fldcw
sbb
jmp
retf
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
clc
repz
xchg
xor
leave
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
call
xchg
sub
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
movs
inc
jmp
lds
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
loope
dec
xchg
and
dec
xchg
pop
call
sahf
cmp
cli
cmc
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
jmp
sbb
int3
(bad)
and
rcl
and
rcl
and
rcl
and
rcl
and
aad
sub
(bad)
(bad)
std
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
call
mov
loop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
and
rcl
and
rcl
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
stc
repz
mov
and
rcl
and
rcl
and
rcl
sbb
mov
fwait
and
xlat
fwait
and
xlat
fwait
and
xlat
fwait
and
xlat
fwait
and
xlat
fwait
and
xlat
fwait
and
xlat
fwait
and
xlat
fwait
and
xlat
fwait
and
(bad)
jae
in
rcr
(bad)
out
aam
(bad)
jmp
jmp
mov
pop
jmp
mov
pop
jmp
mov
call
fwait
and
loopne
push
jmp
shl
shl
jae
loope
push
call
fwait
and
xlat
fwait
and
xlat
fwait
and
xlat
fwait
and
xlat
fwait
and
fcomp
(bad)
jmp
shl
je
in
fs
fcomp
and
xlat
fwait
and
xlat
fwait
and
xlat
fwait
and
xlat
fwait
and
rcl
sbb
test
sbb
ret
and
ficomp
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
fsub
and
rcl
sbb
pop
add
add
test
sbb
xchg
mov
fwait
push
sbb
call
push
sbb
call
push
sbb
call
push
sbb
call
push
sbb
call
push
sbb
call
push
sbb
call
push
sbb
call
push
sbb
call
push
sbb
call
push
sbb
call
push
sbb
call
push
sbb
call
push
sbb
dec
cmp
push
test
sbb
add
add
add
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
add
movs
mov
and
add
inc
add
add
add
add
push
cmp
mov
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
inc
popf
(bad)
push
dec
cs
mov
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
push
xchg
mov
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
bnd
fcom
push
movs
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cwde
xchg
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cwde
xchg
mov
xchg
mov
xchg
(bad)
(bad)
(bad)
jmp
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
jmp
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
jmp
ud0
ud0
ud0
ud0
ud0
ud0
ud0
repnz
ud0
loope
imul
ud0
push
(bad)
(bad)
(bad)
(bad)
jmp
xor
jmp
ud0
(bad)
(bad)
jmp
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ud0
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fxch
ret
jmp
ud0
ud0
(bad)
(bad)
call
mov
ud0
ud0
ud0
(bad)
(bad)
jmp
ud0
xchg
jmp
ud0
ud0
ud0
mov
xchg
imul
ud0
(bad)
jmp
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ud0
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fxch
ret
jmp
ud0
ud0
(bad)
(bad)
(bad)
fxch
ret
jmp
ud0
ud0
ud0
(bad)
(bad)
jmp
ud0
cmp
imul
ud0
ud0
cwde
xchg
imul
ud0
(bad)
jmp
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ud0
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fxch
ret
jmp
ud0
ud0
(bad)
(bad)
(bad)
fxch
ret
push
push
dec
xor
(bad)
(bad)
(bad)
(bad)
jmp
ud0
xor
jmp
ud0
ud0
push
push
push
push
ud0
ud0
(bad)
jmp
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ud0
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fxch
ret
jmp
ud0
ud0
(bad)
(bad)
dec
ret
cmp
enter
sar
push
scas
push
out
sti
jmp
ud0
push
jmp
ud0
ud0
push
inc
mov
jmp
ud0
xor
jmp
ud0
(bad)
jmp
popf
(bad)
(bad)
in
in
(bad)
(bad)
(bad)
(bad)
push
ud0
ud0
(bad)
(bad)
push
bnd
mov
ud0
ud0
(bad)
(bad)
call
sar
pop
add
dec
int3
jmp
jg
jmp
ud0
ud0
ud0
ud0
repnz
ud0
ud0
ud0
ud0
(bad)
jmp
popf
(bad)
(bad)
jnp
sub
jmp
ud0
ud0
ud0
ud0
ud0
ud0
xor
jmp
ud0
ud0
ud0
sar
dec
das
int3
jmp
das
int3
push
int
imul
ud0
ud0
ud0
mov
(bad)
call
xor
jmp
ud0
ud0
(bad)
(bad)
jmp
popf
(bad)
inc
mov
push
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
sar
xchg
mov
xchg
mov
xchg
mov
xchg
test
call
add
(bad)
cmp
enter
int3
jmp
cwde
xchg
mov
xchg
mov
xchg
mov
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fxch
ret
push
xchg
mov
xchg
mov
(bad)
(bad)
jmp
popf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
loopne
jecxz
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
imul
mov
jmp
fcmovbe
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jmp
inc
sub
cmp
inc
cmp
inc
push
xor
mov
nop
jge
mov
mov
(bad)
(bad)
(bad)
into
(bad)
into
(bad)
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
(bad)
(bad)
(bad)
into
(bad)
into
(bad)
mov
(bad)
mov
nop
jge
mov
push
xor
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
jmp
mov
(bad)
(bad)
(bad)
into
(bad)
into
(bad)
into
(bad)
test
push
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
push
inc
push
inc
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
sbb
xchg
inc
inc
push
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
inc
mov
mov
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
push
inc
inc
sbb
mov
dec
inc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
adc
dec
lds
(bad)
(bad)
(bad)
(bad)
jmp
rol
dec
inc
adc
dec
inc
adc
dec
inc
adc
dec
inc
adc
dec
inc
adc
inc
inc
pop
dec
dec
adc
(bad)
dec
adc
(bad)
dec
adc
icebp
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
dec
adc
(bad)
dec
adc
pushf
bound
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
rol
(bad)
mov
movs
mov
(bad)
movs
mov
mov
dec
adc
(bad)
dec
adc
(bad)
dec
adc
mov
pop
inc
movs
mov
(bad)
movs
mov
mov
dec
adc
(bad)
dec
adc
(bad)
dec
adc
(bad)
dec
adc
xchg
sbb
mov
call
push
adc
xchg
push
adc
xchg
push
adc
cmps
jno
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
jmp
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
rol
call
push
adc
cmps
jno
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
adc
xchg
push
adc
xchg
push
adc
xchg
push
adc
mov
dec
push
or
call
push
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
call
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
or
call
push
or
call
pop
ud0
pop
ud0
(bad)
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xlat
ret
dec
scas
xchg
iret
scas
xchg
mov
xchg
stos
jno
call
pop
ud0
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
ret
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
scas
xchg
sahf
pop
ud0
pop
ud0
pop
ud0
dec
push
jmp
adc
movs
arpl
jmp
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
mov
shl
jns
scas
jbe
jmp
adc
movs
arpl
jmp
das
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
cmc
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
cmc
lock
arpl
jmp
adc
movs
arpl
jmp
sbb
xchg
push
sbb
stos
push
jmp
push
jmp
jge
(bad)
stc
cmc
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fnstcw
adc
stos
push
jmp
push
call
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
jmp
push
jmp
push
jmp
push
dec
push
sbb
mov
push
push
jno
push
jns
(bad)
stc
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
in
loop
cmc
in
loop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
push
push
jno
push
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
div
push
jno
push
jno
push
jno
push
dec
sbb
sahf
pop
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
shr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
ffree
push
js
jmp
int
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
int3
test
mov
sbb
mov
sbb
mov
sbb
fidivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
xchg
dec
sbb
mov
jg
(bad)
mov
jg
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fidivr
sbb
mov
lahf
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
ffreep
(bad)
mov
jg
inc
xchg
(bad)
cli
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
loop
mov
jg
(bad)
mov
jg
(bad)
mov
jg
call
popa
sbb
les
sbb
inc
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
call
sub
les
stos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
fnstcw
inc
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
cmp
div
loop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fidiv
sbb
inc
xchg
inc
xchg
jmp
mov
dec
mov
dec
mov
dec
mov
dec
xchg
sub
sti
clc
icebp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
div
(bad)
clc
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
lock
rcr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
stos
dec
mov
(bad)
fistp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
div
dec
xchg
sub
retf
mov
dec
mov
dec
mov
dec
mov
call
push
and
rcl
and
rcl
and
fld
jecxz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
repnz
out
xlat
stos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fsub
and
rcl
jecxz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ret
cmp
xchg
and
rcl
and
rcl
sbb
out
aam
and
ficomp
and
ficomp
and
ficomp
and
out
addr16
in
iret
nop
(bad)
in
iret
nop
(bad)
jmp
cmp
mov
jmp
mov
jmp
mov
jmp
mov
(bad)
fild
pop
jmp
mov
jmp
mov
(bad)
ficomp
and
ficomp
cmp
jmp
mov
(bad)
fild
and
ficomp
and
leave
mov
inc
cmp
nop
dec
sbb
lods
push
pop
push
outs
pop
push
outs
pop
push
outs
pop
push
outs
pop
push
outs
pop
push
outs
pop
push
outs
pop
push
outs
pop
push
outs
pop
push
outs
pop
push
outs
pop
push
outs
pop
push
bound
inc
cmp
sub
add
sbb
add
xor
add
add
and
popf
bound
(bad)
mov
sar
enter
(bad)
(bad)
iret
dec
mov
int3
dec
mov
iret
dec
mov
dec
mov
dec
mov
int3
call
(bad)
iret
dec
mov
int
retf
call
mov
int3
dec
mov
int3
inc
lods
leave
jmp
push
xchg
lds
(bad)
call
int3
repnz
jnp
call
test
call
sar
ret
jmp
aad
ja
fcos
js
fcos
nop
and
(bad)
jnp
(bad)
mov
push
xlat
dec
data16
xchg
push
fdivr
xchg
mov
jmp
mov
mov
(bad)
in
in
jmp
sub
(bad)
(bad)
inc
lods
movs
jmp
jp
jmp
sub
jnp
out
jmp
mov
push
out
jmp
movs
sub
cmps
cwde
(bad)
clc
div
jmp
sub
(bad)
mov
repz
(bad)
(bad)
push
jmp
jmp
ud0
ud0
aad
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xor
(bad)
jp
sub
mov
pop
cmp
jmp
xchg
cmp
xchg
cmp
scas
mov
push
push
push
cmc
repz
jmp
ud0
mov
(bad)
fadd
mov
repz
(bad)
(bad)
push
jmp
jmp
ud0
ud0
aad
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xor
inc
(bad)
(bad)
jmp
xor
call
xchg
cmp
xchg
cmp
push
jmp
ud0
ud0
mov
sub
imul
test
fadd
mov
repz
(bad)
(bad)
push
jmp
jmp
ud0
ud0
aad
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xor
inc
(bad)
(bad)
(bad)
mov
pop
cmp
xchg
xchg
push
sub
cmp
jmp
ud0
ja
(bad)
jns
sub
imul
test
fadd
mov
repz
(bad)
(bad)
push
jmp
jmp
ud0
ud0
aad
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xor
inc
cli
std
dec
int3
call
sar
inc
sub
cmp
imul
and
in
out
push
push
sbb
dec
mov
(bad)
fadd
mov
rep
sub
ins
push
jmp
ud0
ud0
jne
push
xor
push
push
jmp
retf
push
aam
outs
pop
(bad)
jmp
xor
jmp
ud0
(bad)
call
xor
jmp
ud0
mov
(bad)
fadd
mov
repnz
sar
mov
lods
dec
mov
lods
call
shl
retf
mov
lods
call
enter
jb
inc
jmp
into
(bad)
dec
mov
lods
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
jmp
fcmovnbe
dec
mov
lods
jmp
(bad)
(bad)
fld
mov
out
gs
push
stos
pushf
(bad)
fcmovb
mov
push
icebp
out
(bad)
cli
clc
idiv
std
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
sti
cli
(bad)
stc
div
push
in
jmp
call
mov
(bad)
jmp
pop
cmp
cmp
sbb
cmp
pop
inc
cmp
call
mov
(bad)
cmps
cwde
dec
stos
pushf
(bad)
mov
fs
call
pop
aas
call
push
xor
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
push
inc
pop
dec
mov
(bad)
(bad)
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
call
ds
inc
push
inc
push
inc
push
inc
push
inc
push
inc
sbb
mov
dec
dec
and
std
cld
cld
(bad)
(bad)
(bad)
(bad)
inc
popf
test
xchg
pop
xor
pushf
bound
(bad)
(bad)
mov
jmp
fmul
dec
inc
adc
dec
inc
adc
dec
inc
adc
dec
inc
adc
dec
dec
adc
lea
dec
call
(bad)
push
dec
adc
lea
inc
popf
cmp
clc
cmc
repnz
jns
call
dec
adc
lea
call
ja
jmp
push
sbb
dec
inc
adc
out
push
ud0
push
ud0
std
std
(bad)
sti
clc
idiv
lock
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
lds
(bad)
push
out
jmp
push
ud0
mov
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
call
push
ud0
dec
adc
nop
dec
adc
cdq
pop
or
call
mov
(bad)
(bad)
stc
div
(bad)
in
loopne
(bad)
jmp
sar
call
pop
pop
push
jmp
(bad)
dec
test
xor
cld
cli
clc
(bad)
(bad)
(bad)
(bad)
dec
scas
mov
cdq
pop
or
call
push
adc
xchg
dec
adc
jmp
pusha
adc
fmulp
lods
(bad)
(bad)
(bad)
(bad)
dec
movs
jne
mov
dec
push
push
adc
mov
popa
adc
ret
(bad)
(bad)
(bad)
(bad)
(bad)
clc
hlt
out
jmp
into
mov
(bad)
(bad)
(bad)
push
lock
jmp
popa
adc
mov
push
adc
cwde
push
pop
out
imul
jmp
test
(bad)
cld
sti
clc
(bad)
(bad)
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repnz
inc
xchg
pop
jmp
imul
(bad)
in
fmulp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
jmp
imul
jmp
pop
adc
out
jb
push
jb
dec
mov
(bad)
push
lock
shr
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
clc
repz
mov
pop
push
jb
(bad)
ffree
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jb
push
jb
push
arpl
jmp
jl
(bad)
mov
jl
(bad)
ffreep
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
fnstsw
sbb
mov
bnd
inc
(bad)
cmp
mov
mov
(bad)
cld
stc
idiv
(bad)
(bad)
(bad)
(bad)
clc
bnd
jmp
shl
(bad)
mov
jl
(bad)
mov
push
jmp
xchg
les
sbb
fnstsw
(bad)
push
loope
inc
mov
dec
sahf
dec
(bad)
std
cld
sti
(bad)
std
cld
stc
call
scas
imul
jmp
(bad)
(bad)
(bad)
stc
repz
(bad)
cld
cli
idiv
(bad)
std
cld
call
mov
sbb
les
sbb
mov
sbb
stos
push
pop
dec
nop
pop
dec
nop
pop
call
xchg
sub
imul
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fld
cld
(bad)
(bad)
(bad)
(bad)
jmp
mov
pop
(bad)
call
(bad)
(bad)
push
jecxz
dec
xchg
and
int
pop
dec
nop
pop
(bad)
mov
pusha
sbb
call
call
xlat
fwait
and
fldenv
jg
lock
(bad)
jmp
(bad)
jmp
mov
(bad)
in
into
(bad)
(bad)
jmp
call
fwait
and
fisub
mov
jmp
mov
fcomp
and
xlat
fwait
and
mov
push
out
mov
sub
je
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
lods
imul
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
sub
add
adc
add
and
add
add
and
mov
sar
loopne
(bad)
jmp
into
(bad)
jmp
into
(bad)
jmp
into
(bad)
jmp
into
(bad)
jmp
into
(bad)
jmp
into
(bad)
jmp
into
(bad)
jmp
into
(bad)
jmp
into
(bad)
jmp
into
(bad)
(bad)
fadd
mov
iret
fadd
mov
jmp
ud0
retf
ret
jmp
ud0
ud0
ud0
sub
jmp
xor
jmp
dec
sub
dec
mov
jmp
into
(bad)
(bad)
fxch
ret
jmp
ud0
ret
jmp
ud0
xchg
imul
dec
(bad)
jnp
sub
push
push
dec
xor
jmp
into
(bad)
jmp
into
(bad)
(bad)
fxch
ret
jmp
ud0
ret
jmp
ud0
stos
(bad)
cmp
jle
test
jmp
ud0
ud0
sub
jmp
ud0
into
(bad)
push
pop
cmp
imul
sub
jmp
ud0
sub
call
add
dec
pop
jmp
ud0
sub
jmp
ud0
ud0
into
(bad)
call
shl
fxch
ret
(bad)
fxch
ret
(bad)
fxch
ret
(bad)
fxch
ret
(bad)
fxch
ret
jmp
pop
fdivr
aam
into
(bad)
fxch
ret
jmp
fcom
push
repnz
fxch
ret
(bad)
fxch
ret
call
shl
mov
shl
div
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fcmovbe
(bad)
(bad)
(bad)
mov
push
pop
inc
inc
cmp
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fcmovbe
jmp
cmp
pop
inc
cmp
pop
inc
cmp
sbb
mov
dec
mov
(bad)
dec
scas
cwde
jmp
repz
xrelease
inc
adc
dec
inc
adc
dec
inc
pop
dec
dec
adc
mov
pop
(bad)
(bad)
(bad)
(bad)
(bad)
fadd
mov
into
mov
push
repz
clc
hlt
lock
fadd
mov
fcmovnb
mov
cwde
pop
and
rcr
(bad)
mov
dec
adc
mov
call
pop
push
push
(bad)
push
jmp
jmp
xlat
ret
jmp
xlat
ret
(bad)
mov
lods
xchg
(bad)
(bad)
(bad)
call
mov
(bad)
clc
hlt
out
(bad)
(bad)
(bad)
(bad)
jmp
pop
push
call
pop
adc
push
(bad)
(bad)
(bad)
in
loope
(bad)
call
mov
adc
lods
jno
push
in
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
jmp
addr16
sahf
pop
adc
push
xor
(bad)
(bad)
(bad)
push
out
(bad)
call
(bad)
(bad)
call
test
push
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
pop
push
sbb
mov
sbb
ret
call
mov
(bad)
jmp
enter
call
out
test
(bad)
(bad)
(bad)
(bad)
push
lock
(bad)
(bad)
(bad)
(bad)
out
ffreep
inc
test
ret
push
ja
call
xchg
and
rcl
aad
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
fnstsw
jmp
mov
popf
(bad)
(bad)
(bad)
(bad)
(bad)
fld
and
mov
push
sbb
inc
mov
inc
mov
call
mov
pop
call
mov
pop
dec
call
(bad)
mov
dec
mov
call
mov
cmp
rol
iret
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
out
add
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
dec
inc
add
scas
enter
jmp
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
js
inc
inc
push
cmp
xchg
retf
outs
adc
(bad)
mov
es
pop
cwde
test
popa
push
push
mov
mov
ss
pop
pop
dec
dec
mov
and
cdq
add
arpl
inc
add
inc
ins
ror
dec
adc
mov
jno
fwait
outs
data16
out
fsubrp
fmul
add
push
jg
enter
push
test
adc
cmp
fucomi
jle
cmps
mov
pcmpgtb
sbb
fiadd
push
pusha
mov
inc
stos
cmc
sbb
xchg
movs
sbb
dec
cmps
aas
aad
xor
xchg
jb
xchg
ror
dec
mov
arpl
xchg
in
add
arpl
inc
lods
jp
and
(bad)
(bad)
cmp
xchg
add
and
fstp
and
add
les
inc
fs
adc
adc
dec
scas
add
mov
sub
mov
lods
stos
aad
test
(bad)
rcl
adc
push
sbb
xchg
mov
sbb
xchg
xor
mov
retf
jmp
adc
or
int3
pop
mov
xor
dec
scas
add
add
sub
lods
lods
mov
or
stc
sbb
pop
loope
fisttp
inc
add
cmp
setp
cmps
jp
push
imul
call
aas
inc
iret
call
adc
or
test
aas
cli
mov
jo
pop
jmp
(bad)
int3
jae
int3
jb
clc
addr16
xchg
sti
push
gs
fstp
ret
mov
or
push
pop
div
not
adc
add
adc
loope
gs
test
adc
lods
mov
add
cld
jle
fs
cmps
and
or
jmp
ficom
jg
or
cld
inc
xor
ss
clc
sbb
lods
in
sbb
sub
cmp
mov
xchg
xchg
pop
cs
iret
and
mov
jmp
or
dec
cli
dec
jg
jg
scas
scas
bsr
mov
fwait
(bad)
ret
cmp
clc
xchg
and
std
std
xor
call
(bad)
xchg
scas
pushf
sbb
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
inc
or
add
mov
inc
or
add
or
add
add
add
add
add
xchg
add
inc
dec
inc
add
mov
or
popa
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
mov
js
mov
xor
enter
pop
adc
push
sti
rcl
inc
movs
dec
xchg
pop
movs
sub
sub
mov
xchg
movs
imul
mov
add
dec
scas
rol
sub
xchg
cld
out
fs
leave
pushf
in
sti
cs
(bad)
out
addr16
dec
xor
cdq
in
jnp
sahf
cmp
cmp
popf
into
ret
sub
and
adc
ret
push
test
adc
les
imul
rol
mov
push
retf
cmp
inc
ret
xchg
dec
xor
mov
loope
clc
mov
dec
mov
inc
nop
xchg
sub
test
stos
aad
in
and
clc
cmp
cmps
mov
enter
push
pop
jl
mov
pop
sti
popa
std
popf
dec
pop
add
out
push
pop
xchg
jne
ins
add
(bad)
enter
ror
dec
cmps
and
fbld
mov
xlat
imul
xchg
sbb
mov
mov
sub
xchg
dec
adc
leave
cmps
test
jl
mov
mov
sti
sub
pop
neg
cmp
std
pop
nop
xchg
cmp
ins
mov
adc
imul
mov
inc
cmps
mov
pop
xchg
xlat
fisubr
cmps
jmp
mov
add
jp
pop
les
stc
test
or
adc
xchg
hlt
push
data16
imul
aas
and
loopne
jmp
and
and
ins
jge
out
jbe
inc
jns
popf
ret
jne
push
xor
cld
and
mov
push
mov
push
inc
clc
mov
data16
jge
dec
xchg
imul
enter
pop
shl
bound
mul
out
inc
sbb
xchg
jo
loope
ret
xchg
ins
mov
hlt
cmp
push
push
loopne
ret
fsub
stos
dec
repnz
aas
ins
jg
cmp
retf
cli
mov
pop
dec
and
inc
enter
dec
cwde
das
call
outs
gs
mov
inc
cmps
cmc
(bad)
xchg
sti
movs
mov
mov
sub
push
cs
inc
xlat
sub
cmp
test
cld
push
movs
scas
mov
and
jp
mov
xor
je
push
and
in
xchg
mov
in
xor
lahf
xchg
scas
and
retf
pushf
jmp
lds
in
mov
mov
dec
pop
dec
or
dec
stos
and
xlat
(bad)
xchg
inc
mov
mov
ret
and
ror
or
data16
pop
inc
pop
mov
pop
out
cs
xchg
rep
bnd
inc
jo
jmp
fidiv
mov
rcl
inc
(bad)
push
mov
in
mov
cmp
xor
sub
aam
mov
lea
push
arpl
or
jne
and
jg
adc
cli
ud1
lahf
push
daa
jns
imul
das
sbb
xchg
ins
cmp
mov
jmp
pop
jmp
fcomp
dec
call
rcl
sahf
call
push
mov
mov
add
daa
pop
mov
cmp
retf
inc
je
cmp
mov
fcmovbe
mov
cdq
mov
fnstcw
inc
mov
xchg
or
inc
cli
cmp
stc
ss
sub
mov
fild
sbb
imul
fwait
mov
fnstsw
jge
jle
sbb
(bad)
xlat
inc
mov
in
mov
mov
or
pop
dec
aaa
call
push
cdq
sbb
pop
push
push
stc
xchg
sub
das
inc
cwde
dec
rol
stc
out
test
ins
xchg
fs
rcl
xor
sti
pop
add
mov
mov
dec
mov
sbb
pop
lods
addr16
inc
fld
(bad)
fnstenv
xor
inc
dec
(bad)
(bad)
and
push
in
addr16
jb
div
call
pop
jmp
pop
mov
push
shl
retf
and
jo
mov
sub
and
add
jb
mov
jge
loopne
jle
jp
or
inc
mov
xor
pop
and
pop
pop
pop
das
enter
mov
(bad)
xor
das
cmp
repnz
mov
jb
pop
cmp
xor
out
(bad)
iret
inc
shl
popa
cmp
adc
push
pop
mov
lds
ins
cmp
adc
add
pop
cwde
lock
inc
dec
jge
mov
sbb
outs
call
sahf
sar
leave
dec
sti
bound
lds
mov
aas
jp
daa
daa
fldenv
and
lahf
adc
(bad)
repnz
mov
jmp
int
lods
jge
sub
imul
call
aaa
call
push
fxch
jnp
pop
fimul
xor
pusha
xor
xchg
xlat
mov
mov
xchg
inc
movs
das
(bad)
lahf
adc
push
inc
jp
data16
xor
adc
sub
and
clc
and
xor
mov
xchg
jmp
gs
sbb
fcmovnbe
in
xor
mov
ds
pop
pop
gs
imul
test
add
mov
pusha
sub
leave
fstp
jle
les
aam
loope
aam
xor
sub
ins
ss
dec
and
jp
push
cmc
xor
mov
sub
jnp
xlat
(bad)
jge
and
jo
mov
dec
mov
mov
out
je
fisub
mov
xchg
xchg
ins
das
nop
(bad)
hlt
fsubr
dec
or
(bad)
fcom
push
hlt
addr16
dec
sbb
inc
xlat
or
adc
leave
test
test
ret
push
ins
rcl
push
fcomp
add
retf
dec
add
ss
je
lods
push
or
shl
es
into
dec
out
xor
add
mov
sub
neg
dec
dec
es
retf
jb
fnstcw
push
sub
add
das
mov
ror
jo
ss
adc
adc
repnz
inc
ficom
mov
ss
push
ss
test
add
hlt
inc
push
mov
lods
dec
ins
inc
mov
inc
aaa
jge
xchg
lods
dec
pop
pop
call
mov
aaa
daa
fnstcw
movs
push
inc
retf
add
call
mov
and
mov
fwait
push
mov
xchg
xor
mov
mov
pop
push
pop
push
cld
mov
shr
mov
inc
mov
sub
mov
jns
(bad)
and
mov
add
(bad)
(bad)
cmovo
ins
dec
lock
aam
xor
jmp
or
lahf
inc
ror
or
adc
leave
(bad)
fmul
xchg
inc
test
xlat
test
bound
sbb
lods
adc
inc
lahf
push
(bad)
nop
cmp
mov
stos
dec
pop
retf
stc
mov
lods
das
in
sbb
cvtps2pi
shr
fwait
adc
mov
outs
mov
mov
add
pop
xchg
jns
icebp
xchg
hlt
push
pop
pop
xchg
das
add
pop
inc
jmp
lahf
mov
psrlq
rcl
jp
push
dec
jle
pop
mov
inc
mov
stc
xchg
mov
outs
es
push
scas
xor
and
adc
mov
or
pop
or
je
mov
out
push
cmc
dec
sbb
in
push
cmp
shl
xor
cmc
add
hlt
aam
pop
sbb
inc
push
cmc
retf
xlat
mov
xor
jbe
mov
push
cdq
mov
gs
dec
adc
adc
fs
and
jbe
and
dec
int3
and
add
movs
push
scas
adc
sti
jp
ret
pop
cmp
ds
int3
movs
pop
outs
in
sub
sub
sar
cli
jle
fdiv
ss
sbb
sub
shl
int3
pop
sub
add
mov
add
and
mov
pop
push
hlt
sub
dec
push
in
xchg
cli
movs
retf
ins
adc
and
daa
inc
and
xchg
in
adc
cmc
push
jmp
push
mov
mov
mov
(bad)
rol
sub
mov
pop
scas
enter
sub
pop
adc
sub
sub
pop
xchg
mov
xchg
mov
pop
add
test
(bad)
xor
and
add
push
pop
push
fwait
xlat
xor
sbb
jne
adc
in
xor
nop
fcom
nop
es
pop
mov
scas
hlt
inc
pop
bound
push
mov
dec
in
cs
ds
mov
xor
(bad)
cdq
leave
xchg
push
jge
stos
out
in
mov
clc
push
push
xchg
imul
xchg
mov
mov
lock
or
fsub
adc
adc
cmp
adc
adc
add
jne
jmp
dec
cmp
leave
test
int
push
div
aad
pop
mul
dec
aas
imul
pop
(bad)
cli
cmp
xchg
sub
cmp
cmps
push
pop
mov
mov
cmp
ja
mov
jle
je
push
icebp
pop
xchg
xlat
xor
jg
(bad)
stos
pop
add
ss
call
jmp
(bad)
add
pop
dec
scas
jne
das
add
stos
jl
cmp
mov
fcmove
dec
jmp
pop
in
pop
scas
or
or
lahf
neg
push
imul
dec
pop
inc
movs
xor
mov
inc
mov
das
cmp
or
clc
xor
or
xchg
adc
pop
pop
repnz
into
xor
xchg
pop
and
mov
mov
mov
inc
das
pop
mov
xchg
jno
cmp
and
ds
sub
popf
mov
and
ds
mov
push
pop
sbb
imul
test
dec
cmc
jp
sub
dec
add
push
test
jmp
(bad)
iret
pusha
pusha
(bad)
jnp
in
(bad)
ins
xor
lods
sar
imul
cmps
add
sbb
sahf
cmc
sbb
and
sbb
ss
push
jns
cmp
outs
ins
adc
gs
iret
cmps
sub
movs
xor
inc
sbb
dec
push
mov
jp
inc
jns
(bad)
ds
std
adc
pop
repnz
cmps
gs
jg
and
push
mov
test
repz
mov
pusha
jmp
mov
push
sub
nop
xor
add
or
scas
sub
push
cmc
or
fs
xchg
enter
in
shr
inc
outs
inc
ds
lods
and
aam
fnstsw
das
lods
mov
pop
ss
lea
adc
retf
fxch
mov
neg
pop
fisub
add
pop
jae
jbe
adc
cmp
int
mov
pop
pop
test
sub
dec
pop
repnz
cmps
mov
jge
jg
push
cmc
mov
stos
daa
mov
push
popf
sti
adc
mov
add
icebp
test
push
stos
inc
seto
pop
sub
mov
push
daa
xor
test
movs
sub
xor
ds
shl
and
std
and
jns
add
fisub
jns
adc
jmp
int3
sahf
fs
pop
out
sahf
xchg
inc
jns
imul
jae
sub
dec
scas
mov
sub
lock
dec
mov
xor
pusha
fmul
enter
mov
or
mov
mov
mov
cmc
or
leave
adc
repnz
mov
dec
lahf
mov
leave
mov
movs
xlat
idiv
fisub
outs
iret
jmp
jge
test
inc
outs
jge
js
dec
mov
xchg
xchg
jp
ss
mov
sub
hlt
xor
mov
ss
mov
ss
cmc
pop
mov
jb
inc
xchg
test
or
mov
shl
or
test
sbb
pop
push
ss
mul
pusha
mov
sbb
in
mov
aam
(bad)
sub
sub
inc
ss
mov
mov
sub
sbb
push
shl
inc
shl
push
mov
and
lahf
mov
enter
pop
pop
pop
xlat
jg
mov
(bad)
and
inc
(bad)
cwde
je
and
xchg
push
nop
in
shl
bound
add
pop
or
add
pop
in
xchg
out
and
ret
imul
sub
fmul
pop
mov
cmovs
dec
mov
jno
xlat
cmps
stc
jmp
and
icebp
or
inc
mov
sub
push
(bad)
popa
std
sub
dec
pop
(bad)
xor
inc
xlat
imul
push
popf
cdq
or
adc
ins
jnp
or
(bad)
repz
(bad)
xchg
icebp
sbb
out
fs
push
dec
dec
sub
jg
jge
fimul
not
sahf
inc
dec
push
xchg
in
rcl
test
push
jl
iret
or
sub
stos
jl
dec
pop
cmc
pop
jmp
scas
gs
jne
gs
cmc
push
gs
out
stos
enter
dec
daa
mov
jmp
popf
lds
(bad)
xchg
sbb
int3
shl
lahf
(bad)
xchg
in
cdq
pop
xor
jp
push
jp
iret
xor
sub
popf
xchg
sbb
nop
xchg
aam
mov
lods
scas
ins
inc
push
imul
sbb
pop
dec
sbb
jmp
push
sbb
lods
hlt
enter
stc
das
mov
pop
retf
ss
push
cmp
dec
std
ret
pop
pop
cmp
sbb
jne
test
enter
sbb
jae
into
nop
pop
cld
stos
rcr
aas
mov
or
mov
mov
and
xor
movs
enter
sar
or
add
ror
fisub
mov
out
adc
leave
pop
int3
push
jg
lahf
rcr
mov
and
xlat
sbb
cli
mov
cmp
fisub
ins
dec
dec
outs
lock
jge
jge
pop
mov
or
adc
repz
xchg
in
inc
dec
push
mov
es
(bad)
shr
mov
scas
out
(bad)
mov
out
out
sbb
mov
shr
mov
jecxz
dec
pop
in
inc
cmc
ret
jmp
sbb
mov
ss
outs
sub
mov
mov
push
in
aaa
or
dec
mov
push
sub
aad
fs
and
dec
or
test
jo
sti
retf
inc
mov
add
pop
push
mov
xlat
gs
jb
mov
out
cmp
adc
cdq
ficom
dec
inc
pop
repnz
pop
xchg
xchg
push
mov
(bad)
jle
jp
pop
and
dec
jns
enter
dec
in
xor
(bad)
neg
mov
or
dec
sti
popf
or
std
push
shl
dec
inc
pop
retf
lods
dec
in
cmp
pop
(bad)
shl
mov
je
cmp
out
mov
sub
or
gs
add
mov
jae
lock
or
xchg
dec
pop
mov
xchg
gs
cmp
dec
dec
inc
mov
test
sub
sbb
nop
push
and
jmp
test
mov
aas
dec
push
cmp
scas
and
hlt
push
dec
mov
(bad)
mov
popf
inc
push
pop
call
out
mov
jmp
inc
js
iret
leave
idiv
std
shl
dec
cdq
rep
cmp
call
retf
pop
outs
mov
mov
fnstenv
and
ss
mov
xchg
ret
push
mov
ss
cmp
or
jmp
loopne
or
cld
inc
cld
repz
out
cmp
out
mov
jecxz
repz
loopne
cs
je
sti
into
mov
fmul
push
cmp
std
pusha
movs
and
pushf
xchg
into
mov
mov
psrld
pop
adc
ds
ret
movs
mov
mov
push
inc
movs
fimul
ror
ror
add
arpl
or
dec
jne
ror
sbb
and
gs
xchg
dec
ins
clc
xchg
pop
or
sahf
inc
aas
outs
repnz
xor
push
add
ror
cmps
out
outs
jmp
std
out
mov
sbb
cmps
xor
nop
push
push
idiv
cld
imul
pop
sbb
sahf
(bad)
dec
pop
cs
dec
inc
repnz
push
fnstcw
xlat
add
out
mov
das
repz
ficomp
jno
inc
xlat
aad
xchg
test
pop
(bad)
in
and
arpl
jmp
push
stos
mov
mov
and
in
pop
nop
into
inc
cwde
jp
ins
hlt
and
(bad)
not
rcl
ds
(bad)
jne
xor
xchg
sub
dec
and
sti
imul
je
ins
push
leave
cmc
push
stos
xlat
jmp
imul
lods
(bad)
enter
dec
leave
cmps
enter
into
(bad)
xchg
(bad)
in
ins
jle
jmp
dec
pop
mov
sahf
and
add
int
and
add
cs
mov
pop
sahf
in
(bad)
ffree
out
idiv
jg
xchg
hlt
fcmovnu
jmp
mov
lods
iret
jo
out
pop
push
data16
mov
(bad)
ins
icebp
xchg
fdivr
mov
push
(bad)
fs
cld
jo
call
inc
ins
mov
repnz
inc
cmp
inc
adc
or
gs
lock
inc
mov
mov
retf
mov
ficom
repnz
jmp
scas
xor
mov
or
repnz
(bad)
sbb
jg
(bad)
enter
jle
je
mov
sti
jnp
sub
sub
dec
sbb
cwde
bound
imul
dec
mov
or
sub
xchg
out
sub
push
loopne
jl
pop
aaa
in
(bad)
mov
or
jns
or
data16
cmp
(bad)
aad
popf
stc
jbe
je
pop
fnstsw
or
mov
and
mov
jge
dec
aaa
loop
jmp
push
inc
dec
mov
and
inc
(bad)
xchg
lods
iret
arpl
popa
hlt
cmc
iret
push
fcmovne
xchg
push
loope
cmc
jnp
fnstcw
jmp
mul
outs
hlt
cmp
add
cwde
stos
int
jns
retf
dec
pop
stc
cmp
pop
mov
out
add
or
pop
les
je
(bad)
mov
lods
aam
sbb
push
cld
enter
(bad)
neg
popa
std
jae
jbe
mov
or
addr16
sti
dec
(bad)
daa
ins
outs
dec
xor
fnstenv
scas
mov
cmc
lods
dec
mov
or
pop
jl
mov
sar
sub
add
push
jmp
(bad)
push
fwait
in
in
dec
jbe
sub
movs
arpl
add
sbb
mov
scas
enter
lahf
xchg
or
cmp
add
ja
(bad)
cmc
adc
push
scas
mov
movs
mov
jecxz
jge
sahf
pop
sti
cmp
jle
jmp
sbb
out
test
cmp
sub
cmc
or
push
mov
jle
inc
dec
pop
clc
shl
mov
mov
aad
loopne
jg
push
cs
mov
retf
das
and
push
aas
and
sbb
fist
into
bound
imul
mov
retf
jns
pop
pop
and
test
ds
movs
(bad)
aas
(bad)
out
sub
outs
xchg
dec
mov
cmp
dec
mov
or
mov
std
lock
inc
mov
into
mov
push
dec
xor
out
adc
adc
scas
popf
inc
mov
xchg
mov
mov
pop
push
and
xchg
and
in
jb
aaa
das
mov
mov
xchg
fiadd
setae
loope
(bad)
sar
or
xchg
repnz
jne
xchg
mov
push
dec
xchg
sti
sbb
movs
add
leave
add
lahf
int
out
inc
and
(bad)
xchg
cmp
jmp
xchg
int
dec
sbb
lahf
xchg
sbb
iret
lds
adc
or
add
outs
inc
cwde
test
cmp
mov
and
cli
mov
pop
pop
sub
jne
mov
cli
dec
ds
retf
and
push
sbb
cdq
jge
scas
in
(bad)
mov
dec
adc
xor
ins
cmc
ins
pop
pop
inc
mov
adc
mov
jb
cmp
shl
out
test
and
popa
sbb
out
cli
mov
div
dec
out
adc
adc
out
std
dec
or
hlt
mov
lock
into
imul
dec
fsubr
fisubr
xchg
dec
je
and
shr
repnz
ds
cld
les
loope
xor
jp
mov
mov
retf
std
cmp
cli
mov
cmp
xchg
add
int
adc
scas
repz
sub
popf
pop
pop
lock
xor
or
js
jp
xor
lahf
lahf
loopne
cli
leave
ja
aam
xor
inc
mov
fs
sbb
cmp
xchg
ja
repz
aam
fs
pop
mov
call
xor
xchg
outs
pslld
mov
xor
retf
or
fild
sbb
out
clc
in
sub
imul
xchg
sar
rcl
scas
adc
cmp
(bad)
ss
retf
je
and
dec
lock
xor
mov
inc
test
das
push
(bad)
pop
and
or
mul
sub
jo
and
gs
in
daa
retf
int3
cmp
sub
adc
stc
mov
pop
fistp
mov
je
neg
lahf
call
and
mov
test
xor
xchg
jbe
sub
jae
movs
bswap
push
cmp
clc
sub
cmp
dec
inc
(bad)
and
retf
push
inc
cmps
mov
loopne
aaa
fsub
jle
out
and
jae
int
mov
in
pop
jle
movs
dec
sub
cmp
jmp
in
adc
inc
out
or
pop
pusha
shl
ja
or
inc
lods
mov
jo
jmp
jno
cdq
test
test
cmp
mov
in
fdiv
mov
fist
mov
pop
add
out
mov
ja
mov
cli
mov
xchg
dec
cld
jnp
and
mov
imul
inc
mov
or
test
mov
xor
pop
pop
or
pop
sbb
adc
hlt
cmc
fild
les
jmp
repnz
add
add
retf
aas
retf
mul
rcr
loopne
push
and
sub
out
imul
add
add
mov
push
inc
sub
fisubr
mov
sbb
jge
jmp
clc
pop
es
clc
push
outs
jns
xor
(bad)
fisttp
cmps
jae
inc
mov
repz
jmp
in
sub
ins
sbb
add
shr
movs
inc
imul
in
popa
xor
mov
cmp
or
pop
ins
adc
and
cmp
mov
and
arpl
loopne
test
clc
stos
and
or
mov
inc
rcr
xchg
in
ret
adc
pop
in
sbb
sbb
mov
push
aaa
retf
gs
aad
push
jbe
push
inc
add
jl
data16
jl
ins
repz
mov
mov
in
dec
mov
repz
cmp
loope
jbe
(bad)
outs
mov
aad
inc
dec
fbld
sub
stc
fwait
cli
pop
cmp
rcl
ss
adc
movs
cmp
(bad)
lahf
jne
jae
cwde
push
cmp
mov
mov
(bad)
xchg
sbb
ds
lods
xor
fistp
mov
sbb
stc
ret
and
mov
mov
leave
fucompp
loop
add
test
(bad)
sbb
and
cmc
mov
ret
jae
jns
or
mov
call
xor
popa
sub
stc
lock
mov
mov
xchg
scas
and
rol
mov
call
xchg
ins
cmp
xor
not
xchg
leave
xor
cmps
ds
mov
xchg
push
pop
xchg
xor
mov
jmp
fwait
pop
sti
outs
call
push
sub
mov
xchg
in
push
xchg
mov
adc
push
aas
dec
mov
leave
pop
jge
sbb
out
fcomip
push
hlt
mov
dec
jecxz
std
mov
lahf
js
shl
fmul
inc
fwait
push
jl
push
out
pop
push
adc
cmps
push
inc
(bad)
mov
cli
cmp
pop
jne
xor
sbb
es
mov
inc
cli
adc
icebp
movs
iret
(bad)
xchg
outs
push
pushf
xchg
xor
out
dec
xor
scas
add
push
cmp
jmp
pop
imul
pop
sti
push
cmp
cld
pop
jnp
jg
nop
movs
imul
(bad)
aas
jnp
add
mov
push
ins
and
sbb
stos
jl
cmps
add
into
mov
loope
loop
inc
popa
cs
mov
dec
and
dec
inc
mov
pop
rcr
and
scas
dec
test
je
and
mov
push
adc
cmps
mov
mov
js
retf
imul
jle
cwde
enter
(bad)
ins
(bad)
mov
dec
push
scas
dec
outs
aas
aaa
push
push
cmp
fbld
push
and
xchg
or
in
or
daa
nop
ins
mov
cmp
sub
sub
fsub
xchg
(bad)
jmp
(bad)
mov
sti
pop
imul
xchg
mov
scas
test
(bad)
sub
shl
(bad)
retf
xchg
adc
clc
leave
add
movs
add
fldz
xchg
mov
cmps
rcl
sbb
jnp
push
mov
jne
jle
fs
shl
aaa
shl
jb
cmp
add
fisttp
je
adc
sahf
xchg
test
sbb
jbe
xchg
scas
mov
jne
fimul
in
jl
dec
jmp
mov
lock
je
pop
cmc
mov
and
cli
shr
pop
or
cmps
jg
rcr
adc
jnp
mov
jecxz
or
lds
jns
mov
movs
and
aas
dec
pushf
retf
jp
leave
ss
sub
pop
push
int3
out
jmp
inc
aam
inc
out
pop
movs
mov
rcl
rcr
xchg
lods
out
or
ffreep
push
push
(bad)
adc
cmps
rcr
mov
fbstp
mov
add
addr16
fwait
dec
(bad)
in
je
mov
fimul
clc
add
jge
rol
dec
popa
arpl
add
sbb
and
jno
xchg
fyl2x
mov
stc
enter
std
shl
inc
nop
fldcw
rol
mov
jg
fisubr
push
idiv
xlat
dec
popf
shl
pop
pop
leave
inc
mov
inc
push
xor
jbe
xchg
retf
(bad)
repnz
pop
retf
inc
repnz
or
outs
(bad)
call
dec
and
inc
sub
fs
pop
retf
(bad)
xchg
mov
mov
cmp
fld
xchg
fmul
out
into
std
fmul
fwait
lahf
loope
sbb
mov
imul
iret
cli
aam
xchg
pop
inc
repnz
jne
or
ret
or
jbe
jge
push
add
mov
stos
cs
cmovl
outs
mov
add
(bad)
adc
xchg
psubb
(bad)
xor
jae
repnz
sub
(bad)
pusha
xor
cmps
mov
dec
xchg
aad
pop
xor
enter
mov
cmps
mov
mov
call
cmc
cmp
fsubr
cld
sub
in
test
js
daa
or
rol
bound
int
test
cli
push
inc
aam
aas
push
cmp
xchg
sti
aad
leave
cmp
stos
fstp
pop
retf
mov
vhsubpd
pop
aas
cmps
xlat
cmc
ret
fsub
call
nop
adc
or
div
dec
mov
or
ret
dec
fld
clc
xchg
arpl
jns
popf
pop
(bad)
cmps
call
mov
jp
scas
gs
outs
fcmovnbe
cli
mov
das
enter
sar
std
shl
cdq
inc
pop
sbb
xchg
sub
mov
(bad)
lds
push
cdq
(bad)
inc
sbb
imul
js
adc
cmp
push
out
or
mov
cdq
xchg
mov
sti
lahf
shl
pop
jae
test
inc
xchg
in
mov
iret
mov
movs
lahf
cmp
sar
and
inc
fs
push
scas
mov
inc
adc
xor
jnp
inc
cdq
push
inc
scas
cmc
sub
add
mov
xchg
xchg
push
aas
add
ins
jbe
jle
mov
int
lahf
out
pop
fbld
call
outs
scas
and
sbb
and
adc
(bad)
jl
je
and
mov
inc
push
pop
mov
ss
sub
ins
sub
stc
loop
push
iret
add
popa
xor
sti
jle
push
or
xor
sbb
pop
jle
je
clc
push
mov
pop
nop
pop
or
data16
(bad)
fsubr
push
inc
pop
in
jne
add
inc
aam
cmps
stos
xchg
scas
cmp
jl
adc
icebp
ret
out
add
(bad)
xchg
aad
jle
jo
mov
in
mov
push
pop
pop
sub
cmp
(bad)
pop
ins
retf
gs
fidivr
imul
and
mov
retf
mov
lods
pop
inc
leave
dec
test
shr
cmp
call
data16
add
ret
add
pop
div
pop
mov
(bad)
xlat
neg
mov
push
mov
inc
pop
xor
movs
cmp
mov
jecxz
xchg
dec
xchg
mov
jg
lock
(bad)
mov
mov
ins
dec
retf
fnstsw
cld
sbb
xchg
lds
(bad)
enter
sub
add
dec
popf
loop
daa
enter
sti
and
call
cmp
shl
fdivr
jb
pop
fnsave
loope
sub
xchg
lods
adc
xchg
fsubr
bound
lahf
xchg
ins
jnp
(bad)
pop
xor
or
cwde
loop
adc
pop
cmp
repz
lds
pop
mov
push
hlt
(bad)
and
or
imul
cmc
push
lods
movs
jecxz
adc
cmp
inc
imul
xchg
fs
push
scas
jecxz
std
or
jmp
xchg
pop
in
inc
mov
neg
pop
xchg
cmp
jne
(bad)
push
xchg
inc
push
call
and
in
movs
iret
adc
or
es
mov
movs
fwait
mov
or
inc
mov
(bad)
pop
frstor
jmp
pop
jg
dec
test
xchg
(bad)
shr
repnz
inc
mov
xor
push
je
mov
into
cmp
jmp
mov
scas
push
mov
xchg
lods
movs
ins
push
mov
stc
push
pop
retf
inc
cmps
repz
mov
push
je
retf
jb
xor
cli
dec
ror
jbe
ffree
in
jae
cmc
out
jecxz
aas
jae
jle
icebp
or
retf
add
retf
outs
jl
push
(bad)
je
dec
dec
mov
lds
cmp
int3
jge
mov
or
adc
cmp
push
(bad)
(bad)
push
dec
xor
idiv
and
dec
mov
(bad)
and
rcl
xor
and
les
push
es
add
out
xor
nop
mov
inc
jle
add
scas
rcr
adc
push
repz
ds
pop
cmp
pop
push
push
pop
mov
div
mov
dec
gs
ds
ss
int3
test
fwait
mov
enter
jle
in
xchg
inc
pop
push
into
and
(bad)
out
mov
dec
mov
fsub
sbb
xchg
push
inc
jg
rol
repz
mov
mov
mov
repz
and
clc
or
dec
jge
mov
test
pushf
sbb
rol
xchg
adc
add
cmp
fild
(bad)
mov
pop
pop
or
(bad)
inc
leave
inc
nop
jmp
clc
shl
aaa
cld
jmp
mov
mov
repz
add
push
mov
jl
and
gs
sar
push
jmp
ds
pop
in
jne
sub
add
xlat
shl
ins
popf
mov
mov
adc
mov
dec
(bad)
cli
push
push
dec
pop
jne
adc
cmc
mul
xchg
popa
and
ficom
iret
leave
push
xchg
jl
sbb
arpl
movs
pushf
dec
pop
retf
test
adc
push
loope
inc
sbb
cmp
stc
mov
mov
mov
ficomp
rcr
cmp
cmps
xchg
lods
pop
clc
jg
std
loop
mov
aam
aaa
fild
inc
xor
xchg
outs
and
in
enter
xchg
lahf
inc
jg
xchg
jmp
pop
mov
jle
mov
fimul
fcomp
push
add
mov
fsub
lds
test
sub
lock
dec
outs
or
sub
clc
in
cli
dec
push
mov
dec
jmp
mov
dec
mov
dec
sub
push
mov
push
or
mov
test
push
stos
das
jb
pop
and
fdivr
imul
inc
fcom
dec
push
push
leave
adc
dec
jmp
sub
sbb
icebp
imul
dec
jnp
xchg
jmp
inc
push
add
add
rol
adc
and
jae
out
cmp
adc
out
or
loope
jno
(bad)
(bad)
fdivr
shl
cmc
mov
cmp
cmps
out
(bad)
mov
pop
cmp
cmps
mov
mov
stc
(bad)
outs
hlt
test
sub
mov
jecxz
rcr
and
(bad)
jmp
add
inc
inc
mov
dec
repz
mov
and
sub
mov
stos
das
sti
push
retf
cmp
imul
cmp
test
and
mov
jae
xchg
popa
and
daa
nop
sub
js
sahf
stos
cmc
iret
jp
lahf
mov
and
dec
mov
in
dec
popa
loop
into
in
mov
add
out
(bad)
xchg
cmc
mov
mov
add
inc
and
std
outs
cli
leave
cmps
mov
mov
sub
in
adc
retf
add
cmp
jp
push
fadd
add
xchg
cmc
sbb
(bad)
jns
xor
pop
and
aam
call
adc
stos
or
push
cmp
push
aas
mov
xchg
in
fsubr
cmps
jmp
(bad)
test
push
inc
fild
aad
repnz
pop
cmc
js
sub
mov
inc
and
adc
cmp
mov
arpl
aad
mov
es
hlt
cwde
neg
xchg
aaa
cmp
jbe
ins
outs
pop
scas
jne
lahf
jg
out
idiv
popf
iret
mov
std
popa
cmp
sahf
fidiv
mov
(bad)
jle
rcl
lods
sub
jae
and
fld
xlat
fdivrp
jl
in
inc
push
push
adc
pop
jp
jecxz
(bad)
mov
mov
inc
mov
pusha
xchg
sub
xor
into
repz
out
ror
pop
mov
mov
and
js
sub
scas
inc
mov
int
xchg
repnz
sub
xor
jb
icebp
imul
or
ja
push
adc
dec
mov
xchg
pop
xlat
(bad)
das
adc
stc
stc
xchg
bound
mov
xchg
sub
shl
cmp
jmp
loope
push
or
dec
xlat
and
and
pop
call
call
or
(bad)
test
adc
jnp
popa
loope
ret
cmps
cmp
fdiv
mov
or
xchg
in
icebp
cmp
retf
and
fmul
aas
mov
mov
dec
ss
pop
clc
push
cdq
cs
cdq
pop
hlt
jmp
sbb
xor
mov
popf
mov
std
mov
retf
xchg
mov
in
fs
je
shl
call
ss
mov
fwait
in
jp
jnp
mov
leave
add
push
js
or
fnsave
lahf
out
pop
stc
or
ret
pop
movs
test
mov
stc
icebp
xchg
jg
sti
pop
jae
jnp
movs
ja
cdq
shl
pop
adc
push
sbb
repnz
pop
fs
jns
xor
enter
je
test
imul
cmp
jmp
scas
icebp
fldcw
jl
sbb
aaa
aas
into
inc
les
in
ins
jmp
ins
lock
mov
and
sahf
gs
push
sbb
cld
stos
out
mov
(bad)
std
adc
pop
push
enter
ret
leave
push
aas
adc
jmp
outs
test
and
mov
sub
test
arpl
sbb
clc
xor
mov
pop
inc
jecxz
or
jnp
jmp
adc
xchg
fs
and
add
in
fbld
(bad)
cmp
retf
push
fidivr
inc
mov
iret
mov
aaa
out
sar
adc
pop
enter
out
(bad)
loopne
mov
out
sbb
and
out
cli
add
fcomi
aas
add
stc
cmp
scas
inc
repz
and
pop
in
push
pop
clc
aam
inc
cmp
fmul
out
push
mov
jg
jns
retf
xor
out
pop
fwait
pop
and
push
cld
dec
push
les
jne
mov
imul
retf
repz
xor
xor
rcl
add
int3
mov
mov
and
call
repnz
out
retf
sub
xchg
adc
fidivr
fsubr
xor
icebp
clc
or
cli
(bad)
ficomp
jnp
neg
stos
movs
loope
rcl
mov
push
not
scas
cmp
iret
fwait
push
fs
xchg
add
(bad)
in
jns
mov
std
stc
cmps
cmps
clc
ds
jecxz
cmp
push
into
shl
(bad)
cli
movq
sbb
push
ins
push
add
cmp
out
mov
out
mov
imul
idiv
pop
imul
scas
mov
push
hlt
ret
fs
and
mov
pop
xor
sub
sbb
pop
xor
or
std
cli
jmp
mov
pop
mov
dec
inc
sahf
retf
push
mov
pop
jg
stos
int3
jmp
aas
sbb
jnp
idiv
je
dec
ss
and
sub
mov
or
(bad)
mov
sbb
(bad)
fild
std
mov
mov
cmp
shl
xlat
lds
mov
jb
pop
fbld
popf
stos
shl
stc
pop
pop
pop
(bad)
cli
mul
es
dec
mov
xchg
int
mov
jl
pop
out
arpl
xchg
ins
pop
pop
ins
add
sub
mov
cmc
cmp
out
shl
mov
jl
mov
xchg
jl
dec
shl
pop
enter
movs
sbb
(bad)
cmps
fsubr
ins
cli
rol
dec
mov
mov
out
retf
scas
jo
pop
add
fwait
adc
cmp
lock
repz
mov
xchg
inc
mov
or
icebp
addr16
pop
(bad)
or
lea
das
adc
repnz
aas
jecxz
mov
mov
stos
in
jae
and
aam
aam
dec
push
push
dec
or
(bad)
jecxz
inc
inc
clc
mov
out
in
sbb
mov
inc
sahf
cmp
inc
add
cmp
and
aam
sbb
cli
js
cwde
mov
push
retf
stc
fdiv
mov
jnp
mov
mov
shl
movsx
pop
(bad)
jo
jno
(bad)
sub
jmp
pop
inc
mov
lods
fst
sub
and
lods
lea
out
fwait
push
int3
inc
and
pop
jae
das
sub
pop
mov
lods
dec
cmc
cmp
xchg
fcom
mov
imul
add
int3
rol
and
shl
and
sub
cmp
xlat
in
or
inc
out
(bad)
mov
cmc
arpl
cdq
and
(bad)
xchg
out
data16
gs
dec
fcom
lock
push
mov
adc
cli
jecxz
mov
in
push
cdq
push
fsub
mov
pop
mov
mov
mov
out
push
pop
and
push
aas
ficomp
sub
adc
imul
sti
adc
mov
xchg
repnz
(bad)
jns
stos
fcom
mov
stos
popf
call
push
adc
pop
xchg
inc
mov
pusha
xor
jne
loope
dec
cdq
sub
ss
or
shr
mov
icebp
ret
ret
push
adc
in
sub
mov
fucom
and
daa
inc
mov
pop
push
cdq
xchg
mov
mov
clc
retf
icebp
ret
repnz
xchg
test
lock
test
out
add
fstp
std
clc
fdiv
inc
inc
fisub
and
hlt
fiadd
(bad)
arpl
scas
nop
bound
ret
jmp
jl
js
nop
outs
xor
inc
push
mov
and
je
pop
or
lea
inc
inc
sbb
sub
cs
push
cmc
fs
imul
pop
lods
dec
(bad)
pop
sbb
fld
jp
sti
clc
jns
fdiv
in
test
cld
jge
xor
inc
jnp
jecxz
mov
retf
inc
and
fcmovb
pusha
fsubrp
movs
in
jge
arpl
aam
adc
pop
push
pop
scas
arpl
neg
test
jge
imul
jecxz
xadd
scas
in
rcl
(bad)
pushf
jge
repnz
jp
add
arpl
sub
fstp
jecxz
ins
jae
repz
test
jno
sahf
out
mov
arpl
loope
mov
(bad)
in
xor
dec
jge
inc
jl
pop
fucomp
ss
popf
in
push
xchg
(bad)
ins
add
(bad)
jmp
mov
mov
add
cmc
mov
mov
and
aaa
cmp
aam
jl
push
xor
std
stc
pop
dec
cli
ins
add
inc
(bad)
rcr
dec
test
sbb
movs
test
or
pushf
enter
xchg
sbb
xchg
sbb
inc
pusha
jmp
ins
pop
pop
sti
and
jp
in
fmul
retf
sbb
mov
in
fdiv
xchg
dec
jge
push
mov
jns
inc
fnsave
in
rol
ror
ins
inc
mov
jb
mov
mov
ins
xor
push
cld
and
(bad)
mov
xor
dec
ins
push
fcmovb
fbld
cs
mov
xchg
and
sbb
(bad)
cdq
lea
sti
xor
dec
std
mov
and
xor
and
repz
ins
cmp
into
or
adc
xor
int
sbb
cmp
pop
inc
ds
xor
or
sub
mov
popa
rcr
lods
mov
(bad)
xchg
jmp
mov
clc
dec
xor
out
std
pusha
call
pop
daa
aam
aad
nop
test
add
jg
push
mov
cmp
ret
js
jl
repnz
mov
add
jle
loopne
jmp
in
in
std
inc
and
jge
pop
adc
cmc
je
fwait
cs
pop
mov
in
mov
leave
ins
mov
mov
sbb
jmp
sub
cmps
pop
sbb
outs
mov
mov
in
pop
lods
dec
jl
jmp
fistp
sbb
sti
ins
push
gs
movs
inc
xor
sub
and
cmp
jle
ret
das
cmps
out
in
inc
lods
retf
ss
rcr
mov
ja
enter
nop
jmp
mov
xchg
ins
and
jb
lea
cmps
std
fsub
dec
add
sub
fsubp
mov
shl
imul
or
jp
pop
add
(bad)
fbstp
mov
push
in
push
fiadd
cmp
lock
mov
daa
gs
jbe
ds
fidiv
mov
stc
jo
cmps
outs
mov
jecxz
cwde
add
f2xm1
and
fistp
outs
in
(bad)
lahf
mov
jmp
lods
fdiv
stos
retf
adc
xchg
je
mov
add
add
fdivr
pushf
push
pusha
daa
and
in
lds
cwde
sahf
pushf
xchg
nop
cld
xchg
pop
xchg
inc
add
jle
cli
xchg
das
mov
adc
inc
or
daa
inc
imul
adc
out
ins
into
inc
imul
mov
push
test
mov
mov
adc
test
rcl
push
ins
push
(bad)
loopne
movs
movs
ss
stc
repnz
ret
sub
mov
cld
xchg
iret
leave
sar
rol
arpl
xchg
mov
mov
out
aad
xor
lahf
ins
(bad)
stc
in
lods
das
in
mov
jge
fs
push
push
lods
mov
(bad)
xor
or
inc
fimul
je
mov
mov
ret
ret
xchg
mov
sub
gs
sbb
push
in
jne
mov
(bad)
mov
adc
pop
xchg
dec
out
jnp
xor
retf
addr16
shr
mov
inc
mov
push
pushf
in
jl
jl
or
dec
inc
cmps
retf
test
pop
jbe
and
sub
das
jmp
aas
sub
idiv
sti
push
fmulp
and
scas
add
jl
ret
jg
aas
std
stos
lock
aas
lock
fdiv
mov
jmp
out
mov
out
out
fnstsw
jecxz
cmpxchg8b
mov
mov
sbb
xlat
int
mov
lahf
loop
mov
xchg
call
inc
mov
lahf
out
imul
mov
xchg
lods
and
mov
mul
hlt
mov
mov
dec
aad
js
dec
mov
ja
dec
outs
ret
not
mov
movs
adc
shl
mov
stc
rol
stc
jmp
retf
or
fild
mov
mov
fiadd
mov
jns
pop
cmp
in
cmps
repnz
jg
shl
pop
push
mov
(bad)
lds
xchg
mov
inc
js
fild
std
and
fbstp
inc
leave
push
xor
ins
xor
xor
std
sar
sti
mov
outs
imul
hlt
mov
dec
pop
add
push
jg
ss
ins
dec
inc
mov
dec
dec
je
xchg
push
in
and
les
sbb
jmp
jo
pop
int3
xor
dec
sbb
(bad)
push
jg
cmp
das
mov
or
adc
imul
in
bound
sbb
std
adc
jmp
popa
pop
loopne
out
arpl
ja
pop
adc
mov
push
in
adc
sub
fidivr
jl
je
mov
mov
jno
lock
icebp
push
retf
lock
fucomp
push
cmp
movs
pop
or
pop
jns
sbb
jg
cld
shr
mov
mov
push
or
(bad)
in
dec
outs
enter
in
dec
xor
inc
cwde
cmp
xor
(bad)
ss
cmp
or
neg
ins
pop
movs
add
cs
je
popa
loopne
loopne
or
xchg
xor
mov
pop
rcr
cmp
in
in
loopne
xchg
jmp
pop
arpl
inc
stos
out
jmp
dec
push
jge
push
daa
dec
icebp
enter
scas
mov
out
cli
sub
add
fld
xchg
cmc
jmp
(bad)
shl
cmp
xor
aaa
imul
shl
(bad)
stos
mov
jg
pusha
popa
pop
ficomp
xlat
dec
and
loope
push
and
not
jmp
pop
dec
mov
mov
sub
shl
in
push
mov
(bad)
mov
mov
shl
sub
or
ins
and
fsubr
dec
xlat
pop
sti
mov
add
cmps
inc
sbb
call
je
fdivrp
sub
push
pop
sbb
push
aam
jb
jge
xor
push
fisubr
lods
xor
xchg
loop
pop
shr
js
fstp
inc
mov
ficomp
and
push
xchg
jle
push
dec
push
xchg
sub
dec
sub
or
add
mov
jmp
pop
sbb
pushf
lahf
pop
adc
inc
sahf
jns
adc
fimul
cld
test
in
fstp
and
fmul
idiv
dec
imul
nop
loope
add
xchg
int3
jle
cmps
sahf
ins
sbb
fs
aad
adc
adc
cmp
adc
fistp
aad
outs
aam
sub
aas
xchg
in
popa
inc
pop
pusha
add
pop
pop
add
push
into
jle
inc
and
xlat
aas
and
xchg
popa
sbb
imul
mov
in
add
test
mov
int
add
movs
das
mov
in
adc
sbb
dec
xchg
setg
cmp
jg
pusha
std
xor
adc
out
jae
inc
push
push
pop
jmp
dec
hlt
add
and
xchg
ss
ss
pusha
mov
(bad)
xchg
jge
mov
je
pop
shl
fdivrp
sub
jmp
or
adc
cmc
sub
jne
pop
es
xchg
mov
(bad)
shl
cmp
sub
jl
jl
mov
push
retf
push
cdq
enter
push
fadd
jno
lds
aam
pop
inc
sbb
in
jne
add
enter
dec
dec
and
aam
arpl
cmps
outs
lahf
and
movs
and
ja
mov
fwait
nop
xlat
mov
lods
jnp
cmp
movs
int
fild
std
lds
xchg
sti
les
imul
sub
arpl
out
movs
jae
ins
adc
pop
aas
dec
mov
or
mov
imul
lahf
not
xor
pop
xchg
(bad)
cmp
sti
mov
(bad)
sub
lahf
dec
sbb
cmp
and
adc
bswap
leave
out
sbb
mov
xchg
dec
xchg
lahf
xchg
popf
fwait
mov
pop
sbb
xchg
sbb
push
bound
mov
loope
sub
dec
mov
dec
and
xor
gs
out
mov
mov
and
jnp
push
mov
je
push
dec
sti
jns
ins
loopne
pop
in
dec
xchg
out
sbb
mov
add
inc
stos
jae
stc
sbb
icebp
loopne
fcmovnbe
pop
rol
jbe
cmp
shl
push
test
jns
in
daa
call
pop
dec
outs
push
sbb
fisub
sbb
(bad)
pop
adc
repz
pop
fnsave
mov
inc
cmp
pop
inc
(bad)
jmp
and
icebp
fidiv
repz
pop
jp
pop
popf
xchg
aaa
ins
dec
fwait
mov
xchg
in
pop
and
movs
cmp
cmps
out
shl
ror
fiadd
arpl
and
push
(bad)
lock
cs
gs
mov
and
icebp
mov
ja
sub
dec
mov
and
cmps
sahf
std
loopne
and
(bad)
inc
popf
add
inc
leave
cmp
std
cmp
mov
div
mov
std
push
mov
ret
mov
fcomp
retf
test
and
and
cmc
jns
xor
jno
bound
push
jmp
dec
mov
aaa
cmp
mov
sub
jle
cdq
cmp
xchg
pop
jns
sbb
or
and
adc
out
and
jmp
or
cmps
std
idiv
jmp
dec
mov
cdq
dec
mov
push
or
pop
pop
retf
(bad)
mov
cs
mov
enter
mov
mov
(bad)
jmp
jge
adc
xchg
jl
ins
mov
pop
adc
jbe
in
jp
push
push
arpl
lods
adc
jo
adc
call
(bad)
in
push
xchg
adc
dec
inc
inc
push
lahf
sahf
and
ins
jno
js
pop
mov
in
mov
mov
cwde
rol
pop
jo
mov
or
adc
push
jbe
repnz
sar
inc
pop
in
cmps
jle
add
sbb
xchg
iret
xchg
inc
stos
dec
cmc
das
out
addr16
fnstenv
(bad)
mov
xor
mov
data16
shl
mov
arpl
cmps
ins
lods
or
je
in
mov
dec
(bad)
mov
in
stos
add
out
leave
and
call
mov
mov
and
dec
gs
sub
test
(bad)
mov
dec
ss
inc
stos
sbb
retf
adc
add
nop
in
aas
cwde
enter
in
sub
ds
arpl
out
and
sbb
mov
jne
outs
jae
out
sti
in
fisttp
gs
ds
cdq
xchg
inc
pop
xchg
cmps
and
cmp
into
inc
(bad)
lock
push
jecxz
stos
stos
add
pop
stc
inc
mov
in
cmp
fist
out
jmp
pop
lock
jecxz
loop
xor
jecxz
xchg
pop
add
xchg
add
pushf
xchg
imul
movs
test
pop
mov
leave
outs
dec
mov
hlt
add
pop
pop
add
jno
sbb
inc
test
adc
test
and
js
inc
jmp
imul
outs
shl
pop
cli
fcom
mov
(bad)
sub
push
xchg
repz
pop
pop
movs
repz
adc
mov
mov
imul
mov
fild
dec
push
inc
repnz
sbb
shl
enter
push
test
lods
add
gs
mov
inc
sahf
es
add
xchg
in
and
add
cmp
jns
je
clc
mov
jbe
sbb
mov
outs
mov
jnp
leave
fidiv
mov
mov
dec
jbe
repnz
fadd
jbe
shl
mov
push
fiadd
aam
cli
aam
test
rcl
ror
and
sbb
or
push
dec
in
sbb
jge
ret
dec
js
or
(bad)
out
and
inc
mov
repnz
add
fstp
xchg
pop
cmp
int
adc
in
adc
pop
lds
add
cli
jne
mov
test
sub
mov
bound
xor
sub
shl
hlt
idiv
adc
scas
outs
fnstsw
test
stc
adc
int3
xchg
xor
call
imul
adc
ins
jg
fldenv
movs
dec
ins
nop
jle
push
push
shl
xor
les
xchg
mov
test
adc
mov
adc
dec
psubusb
imul
movs
stc
cmp
arpl
mov
loopne
adc
dec
lds
push
push
sbb
xor
std
jl
mov
cmp
jb
mov
iret
fsub
cmps
(bad)
das
cmp
rol
dec
das
repnz
movs
pop
hlt
xor
or
or
push
test
and
adc
cli
loope
jmp
xchg
pop
pop
je
fwait
xchg
rcl
outs
mov
and
fs
push
ret
cmp
jg
stos
jnp
jmp
mov
push
push
in
cmps
adc
adc
stc
push
rcl
(bad)
mov
xlat
push
(bad)
iret
pop
push
(bad)
cmp
jmp
mov
jns
sbb
mov
dec
and
inc
mov
pop
inc
in
leave
add
popf
sub
sub
(bad)
and
fwait
push
enter
mov
push
lea
dec
xchg
mov
xchg
icebp
mov
fld
or
mov
(bad)
inc
test
enter
dec
mov
pop
data16
push
sbb
push
hlt
sub
(bad)
inc
aam
movs
jl
xchg
fld
mov
push
shl
in
xchg
dec
cmps
add
xor
mov
fwait
mov
xchg
jl
(bad)
jmp
mov
ficom
fs
shr
adc
fprem1
into
jb
jle
push
das
outs
sbb
inc
sbb
repz
arpl
and
pop
jecxz
pop
(bad)
stc
or
push
loop
cs
popf
mov
pop
jo
lds
enter
out
jmp
mov
sbb
fnstenv
out
movs
jnp
mov
adc
and
scas
das
cmp
jge
mov
clc
push
adc
mov
dec
addr16
ins
xchg
sti
push
xchg
out
dec
pushf
mov
in
and
cmc
cmp
dec
clc
push
cmc
jge
cmp
jne
popf
cli
dec
imul
and
sahf
out
dec
push
fstp
outs
sub
(bad)
dec
xor
jl
sub
retf
jns
jno
out
xor
iret
mov
call
clc
pop
call
std
fdiv
ins
xchg
pop
or
adc
jecxz
nop
ins
mov
inc
mov
jge
leave
push
pop
leave
push
out
leave
mov
cs
push
das
xor
out
nop
mov
push
imul
(bad)
mov
cmp
stos
jg
inc
repz
push
add
aam
or
test
daa
stos
pop
and
sar
scas
mov
sub
shl
mul
jge
stc
stos
leave
add
push
iret
inc
lock
pop
shl
inc
pop
inc
iret
add
sbb
movs
jl
cmp
mov
stos
mov
in
cld
mov
add
inc
hlt
adc
int
jo
add
fistp
mov
add
mov
pop
jge
ins
xlat
test
repnz
or
lods
xchg
std
test
xor
xchg
cli
inc
stc
xchg
jle
jne
mov
mov
out
ror
clc
dec
mov
shr
push
cli
xor
pop
dec
mov
push
sbb
mov
mov
ins
add
inc
mov
jmp
and
sub
aaa
fdiv
add
pop
into
sub
or
mov
add
test
jg
aaa
hlt
fucomi
lds
push
inc
mov
ss
add
je
or
fwait
call
faddp
mov
pop
mov
ror
push
fist
lods
lods
mov
jecxz
adc
dec
mov
pusha
and
push
out
shr
adc
cs
jbe
gs
or
push
cld
or
hlt
shr
xor
(bad)
sbb
add
jne
dec
mov
xor
mov
mov
mov
jb
mov
mov
jmp
div
jno
cdq
cs
movd
add
test
sub
js
mov
movs
(bad)
push
push
push
imul
jns
cmp
or
retf
out
mov
and
ror
ins
add
push
jns
pusha
jae
in
ja
inc
das
mov
jmp
movs
sti
out
das
mov
and
repz
dec
or
mov
mov
fdivr
mov
loope
jle
movs
dec
gs
aam
xlat
shl
outs
sti
push
jmp
mov
dec
fidiv
or
dec
outs
test
dec
pop
dec
(bad)
int3
test
mov
je
das
xor
dec
cmp
out
mov
xchg
pusha
shl
or
pop
pop
sbb
push
loopne
fidiv
ret
mov
jb
retf
aaa
loopne
jae
inc
test
es
dec
ss
push
stos
jne
push
fcom
and
xchg
int
fst
sub
aad
inc
push
sub
nop
stc
scas
clc
push
ins
mov
mov
add
scas
push
inc
jmp
ins
fidivr
mov
mov
inc
in
mov
arpl
fsubr
jns
jb
pop
push
xchg
imul
imul
jmp
mov
push
cmp
mov
xchg
ja
xlat
shr
and
ins
dec
shr
retf
sbb
inc
inc
inc
and
cmps
(bad)
in
out
mov
(bad)
sub
loop
jl
sbb
das
mov
mov
jns
mov
jb
lock
add
mov
sti
enter
push
dec
xchg
cmp
(bad)
pushf
jb
mov
jo
das
xor
ret
cmp
sbb
movs
mov
std
adc
loop
das
and
pop
adc
push
fild
jmp
fstp
mov
dec
mov
push
ja
jl
ds
sti
adc
out
fld
mov
adc
outs
lods
push
mov
(bad)
mov
imul
hlt
sbb
cmps
call
cmp
adc
pop
dec
outs
add
mov
dec
push
adc
sub
dec
add
out
gs
adc
push
fst
push
or
retf
sbb
pop
rcr
jmp
ins
sub
pop
std
adc
cli
add
inc
rcr
fild
(bad)
pop
mov
jb
shr
xchg
pop
cs
repz
xchg
in
clc
imul
pushf
adc
mov
popf
call
push
in
xor
aam
dec
mov
adc
ss
xlat
and
jl
icebp
mov
idiv
mov
cld
pusha
pop
out
aas
mov
repz
es
xor
iret
mov
sti
in
rcl
(bad)
dec
jo
lock
aaa
ins
inc
push
in
jbe
int3
int
inc
cmp
rol
cmp
or
push
fwait
div
out
(bad)
cmps
aas
sbb
mov
(bad)
fwait
hlt
ret
pusha
cmps
jge
je
push
and
aad
lea
mov
xchg
scas
mov
cld
push
xchg
(bad)
sbb
fmul
stc
mov
inc
aam
iret
inc
jmp
or
rcl
adc
push
inc
and
jle
push
in
dec
jmp
dec
inc
scas
xor
or
jmp
cmps
mov
inc
mov
xor
movups
mov
push
pop
inc
scas
mov
and
inc
mov
retf
out
(bad)
retf
jge
jge
sub
icebp
stos
jmp
jg
mov
fild
std
loopne
push
rcr
mov
mov
mov
sti
gs
fist
fistp
rcl
lods
xlat
imul
xchg
scas
cmps
in
dec
in
inc
cdq
xchg
push
pop
imul
inc
cli
mov
cli
movs
jne
mov
pop
enter
jne
cmp
jne
sbb
cmps
or
mov
mov
aad
icebp
retf
add
and
jmp
jp
sub
(bad)
jmp
cmp
xor
mov
out
mov
adc
ds
outs
repnz
push
(bad)
ds
aam
inc
mov
int
int3
and
ret
push
jne
jno
mov
repz
cdq
pop
jmp
aaa
adc
mov
mov
clc
sub
ins
mov
movs
dec
imul
out
xor
push
jle
adc
mov
call
repnz
dec
cmp
movs
cld
aad
push
je
int3
mov
das
jp
test
repnz
lods
into
cmps
(bad)
jp
(bad)
jb
xlat
rol
mov
(bad)
mov
(bad)
adc
push
push
push
dec
sub
push
jmp
int
ds
movs
adc
fsubp
and
inc
je
in
test
jbe
ficom
hlt
fidivr
mov
sub
into
retf
jmp
or
in
test
or
inc
lods
mov
cdq
fdiv
rol
jge
jns
fstp
cmp
jg
mov
and
les
jg
xlat
push
mov
sbb
push
cs
nop
jb
xchg
inc
stos
repnz
add
push
aas
popa
jnp
and
adc
push
in
push
test
repnz
mov
ret
scas
lods
ret
jle
jne
sub
mov
shl
(bad)
sti
push
dec
stc
into
icebp
mov
lods
push
(bad)
xor
out
add
into
xchg
js
cmp
je
or
pushf
loop
sti
sti
mov
std
push
jmp
add
loope
call
dec
mov
sub
mov
add
ret
inc
sub
in
jb
inc
push
xchg
pop
mov
mov
clc
add
aad
pop
sahf
leave
out
mov
xor
std
lods
leave
sub
or
inc
adc
aas
inc
fld
lahf
sbb
push
stos
iret
sbb
inc
push
sbb
dec
or
sub
jecxz
mov
test
mov
shr
push
push
lods
retf
xor
lods
rcr
in
mov
aad
xchg
into
jae
in
sar
scas
xchg
or
bound
cld
int3
pushf
jp
out
adc
in
sub
cmp
outs
cmps
pop
pop
pop
pop
sti
sbb
mov
sbb
jmp
xchg
push
es
gs
aad
mov
mov
pop
(bad)
jge
stc
lods
jmp
in
movs
dec
loop
(bad)
shr
lea
loop
push
pop
pop
(bad)
lods
aam
enter
sub
xchg
mov
mov
shl
shl
mov
or
cmp
push
xchg
inc
mov
out
jp
jnp
std
(bad)
fwait
add
popa
mov
dec
sbb
out
pusha
je
cmc
dec
mov
ins
mov
mov
jae
std
cld
inc
xlat
mov
leave
outs
rcr
je
xchg
cld
xchg
loopne
jge
cmp
push
ins
jo
adc
repnz
in
and
inc
ss
repnz
lds
ret
mov
sub
daa
retf
jg
in
push
and
jl
pop
sub
cs
jns
pop
and
or
or
and
mov
pop
jbe
pop
jne
movs
lahf
mov
shl
or
fild
pop
popf
mov
movs
cmp
mov
pop
outs
in
cwde
fs
(bad)
dec
rep
lahf
adc
xchg
lods
and
loop
(bad)
cmp
lea
pop
popf
imul
jb
pop
fwait
push
sbb
xchg
mov
and
int
push
push
sub
mov
push
cmps
lods
pop
std
imul
xchg
(bad)
aad
lods
aad
repnz
sbb
pop
les
push
sub
add
push
cmps
jmp
mov
ins
pop
pop
and
push
or
ror
ficom
mov
push
push
loopne
push
aas
test
rcl
(bad)
jl
dec
sub
fld
outs
push
std
sub
xor
loop
push
stc
(bad)
inc
lahf
mov
std
addr16
pop
mov
pop
inc
ret
sti
push
adc
fcom
ins
add
je
ins
iret
mov
add
cmp
dec
xchg
pop
loope
mov
in
pop
add
xchg
and
push
xchg
dec
jmp
fnstcw
mov
cmp
or
inc
mov
cs
adc
(bad)
jle
cmp
daa
int
div
mov
fnstcw
or
cmc
dec
repnz
repz
fld
xor
iret
aas
jge
xor
pusha
adc
jg
popf
and
je
mov
mov
xchg
add
mov
pop
xchg
test
dec
div
aad
popf
inc
mul
dec
mov
into
pop
pushf
cmp
addr16
mov
sbb
dec
pop
add
pop
mov
dec
mov
mov
pop
dec
sub
pop
sbb
lods
pop
lods
xchg
xor
imul
repnz
sub
jb
inc
push
xor
pop
sbb
das
inc
std
outs
ds
jb
out
pusha
aas
push
dec
inc
mov
adc
pop
ds
add
mov
sbb
js
push
adc
sbb
sti
pop
jle
push
fucomp
movs
push
pop
daa
cli
dec
les
pop
push
add
add
xchg
and
bound
sbb
mov
inc
xchg
cmp
jae
ret
fst
sub
loope
and
sahf
je
lods
xchg
repnz
fs
jns
pusha
ret
pop
mov
fdivrp
add
cmps
xor
scas
cmp
aam
pop
or
imul
aaa
and
jecxz
sub
repnz
pop
imul
stc
push
(bad)
cmps
cdq
jmp
mov
daa
aam
enter
sub
pop
pop
sub
sub
xor
es
jbe
dec
ror
cmp
jns
mov
pop
retf
and
test
in
ins
sbb
jns
(bad)
mov
adc
nop
imul
lods
or
push
pop
imul
mov
xor
mov
mov
ds
adc
scas
push
scas
pop
shl
scas
(bad)
mov
push
mov
dec
cs
ret
shr
xchg
ins
push
xchg
scas
mov
sub
(bad)
leave
jne
cmp
dec
das
add
push
sbb
jg
shl
xor
add
mov
out
jne
xor
ins
or
and
ins
ja
idiv
pop
push
ret
cdq
sbb
mov
sti
mov
and
xchg
xor
sub
leave
pop
outs
in
or
fiadd
jns
dec
sbb
inc
enter
mov
xchg
mov
xchg
cli
adc
sub
(bad)
repnz
ss
xchg
idiv
cmps
xchg
pop
jmp
or
adc
in
xchg
stc
sbb
in
sahf
fs
pop
adc
and
mul
adc
dec
sbb
(bad)
stc
push
(bad)
(bad)
mov
xchg
fldcw
(bad)
mov
xchg
mov
into
or
sbb
stos
(bad)
jns
out
adc
mov
std
xchg
jp
(bad)
in
popa
jb
fist
ror
push
jb
sub
das
(bad)
mov
or
pop
dec
das
mov
in
adc
test
test
cmp
(bad)
jae
sbb
movs
push
fs
inc
push
(bad)
jg
mov
adc
push
repz
rep
xor
dec
arpl
cmp
ret
push
mov
push
popa
inc
add
xor
inc
jmp
scas
mov
xchg
rcl
(bad)
mov
mov
sbb
mov
and
inc
xchg
push
jo
mov
mov
mov
sar
lea
jge
mov
sbb
repz
pop
pop
loopne
adc
into
xchg
aas
mov
jns
mov
movzx
sub
adc
daa
mov
ins
xchg
sub
inc
add
and
or
mov
adc
popa
loopne
sub
mov
mov
xchg
test
mov
jl
mov
fidiv
jb
pop
jo
movs
inc
scas
cmc
movs
jl
call
rol
jmp
cmp
push
scas
lods
ds
pop
mov
clc
push
in
cmc
or
mov
sub
jmp
aam
test
leave
inc
das
cmc
jne
push
push
in
(bad)
jb
adc
ror
(bad)
or
jne
loopne
js
pusha
test
xor
push
aad
test
xor
jle
fadd
daa
repz
jl
pop
in
inc
xchg
or
bound
rol
cmc
mov
retf
outs
mov
(bad)
jmp
repnz
and
imul
push
jmp
mov
jmp
or
stc
icebp
rol
push
aas
and
repnz
or
mov
ficomp
(bad)
mov
out
or
mov
sbb
jbe
retf
daa
test
fdivr
add
aad
pop
cmps
iret
call
jl
mov
in
xchg
mov
push
push
inc
shl
nop
out
call
inc
push
adc
lds
pop
test
inc
call
cmp
jg
lods
dec
addr16
test
push
jge
test
xchg
sub
nop
imul
or
and
fidiv
mov
ins
pop
(bad)
pop
add
jle
sbb
shl
(bad)
stc
push
jmp
inc
pusha
in
cmp
dec
outs
fst
pop
into
jae
fdiv
push
inc
push
mov
mov
lods
inc
pop
sbb
mov
mov
push
inc
inc
scas
mov
dec
jb
pop
and
dec
mov
call
xchg
xchg
shl
ret
shr
sub
dec
jmp
mov
mov
sti
inc
ds
inc
outs
jge
pop
rcl
fs
scas
sbb
psubq
leave
sub
test
imul
cmp
lods
mov
shl
pop
jne
arpl
and
and
shl
jo
lahf
jge
jnp
aaa
hlt
push
std
lods
hlt
mov
dec
sbb
arpl
jno
sbb
pop
ds
and
mov
push
(bad)
push
scas
gs
mov
ret
imul
jnp
or
add
mov
or
xchg
int
outs
lods
inc
pop
test
(bad)
mov
push
aam
cs
sub
sar
and
xchg
pop
jl
stc
in
mov
jne
imul
fimul
mov
fcomp
shl
jmp
jle
fisttp
movs
or
xchg
ins
sbb
outs
or
stos
fbld
mov
xchg
cli
arpl
cmc
mov
xchg
inc
fisub
repnz
or
push
dec
mov
push
add
jb
ftst
cld
cld
pop
pop
xor
cmp
pop
ins
test
mov
cmp
xchg
sub
adc
cdq
mov
repnz
xor
std
scas
je
push
add
test
xchg
and
sahf
stos
adc
in
popa
sbb
icebp
arpl
lahf
push
jle
dec
xchg
sahf
in
pop
popf
jmp
inc
icebp
push
pop
(bad)
jo
stc
das
iret
jb
push
adc
xchg
shl
stos
mov
es
ins
mov
sub
fcmovu
int
lahf
gs
mov
in
jae
loop
test
sub
shr
sub
dec
push
xchg
sub
mov
cmp
mov
xchg
icebp
in
mov
cs
ins
pop
jbe
and
mov
lods
cmc
sub
add
fwait
cmp
add
jno
xor
sub
pop
xlat
mov
repnz
mov
jg
out
(bad)
xchg
aad
mov
jbe
push
mov
jne
cmovno
mov
push
stc
ss
jmp
jg
imul
jae
xor
mov
mov
in
and
push
jmp
mov
jle
imul
mov
fs
imul
pop
mov
dec
push
push
push
sub
mov
(bad)
pop
jo
fist
push
enter
fist
sbb
pop
mov
mov
add
fbld
ja
pop
jbe
ret
(bad)
aas
not
sub
rcl
es
sub
ds
icebp
push
and
lahf
dec
mov
xchg
lahf
jge
sbb
sub
stos
(bad)
imul
xchg
cli
and
nop
xor
mov
in
jnp
pop
push
jns
or
fst
call
addr16
sbb
jl
add
nop
out
test
or
repnz
push
aas
add
xor
sub
cmp
adc
pop
xchg
scas
push
fmulp
fadd
inc
jge
std
das
rcl
inc
pop
sub
dec
dec
xlat
pop
out
jo
lock
cmp
cmc
movs
scas
fnstenv
jg
ds
jmp
ror
jmp
pop
cmp
jl
loop
mov
imul
sar
jmp
aaa
(bad)
ins
jne
in
arpl
sub
jle
mov
rol
add
dec
out
imul
imul
outs
fstp
clc
xor
test
sbb
mov
xor
imul
(bad)
out
push
jp
cmp
or
sub
sahf
dec
jge
(bad)
(bad)
adc
adc
jno
sahf
and
iret
dec
push
fxch
(bad)
cmp
lods
adc
retf
mov
cmc
push
aas
stc
cmp
sub
(bad)
jge
je
fistp
cmp
inc
fwait
mov
push
aas
inc
jo
mov
jbe
(bad)
repnz
mov
add
mov
pop
pushf
out
and
les
dec
jbe
test
jecxz
dec
inc
push
mov
sbb
inc
leave
in
lea
jmp
js
cmp
sbb
mov
mov
in
gs
jmp
ins
and
int
mov
sub
jnp
imul
call
(bad)
lods
sbb
add
sub
sbb
xchg
ins
repz
es
dec
cmps
ror
xor
add
dec
pop
ins
cmp
cdq
jb
inc
pop
push
push
mov
outs
test
adc
(bad)
std
push
in
mov
xchg
imul
aas
jmp
pop
and
out
ins
inc
fiadd
and
or
gs
mov
movs
and
cdq
out
add
out
dec
jno
dec
iret
cmp
sbb
stos
scas
and
dec
jge
pop
lods
ror
imul
in
mov
outs
xor
ds
and
lahf
push
movs
or
repz
pop
add
xor
movs
mov
lods
mov
jmp
(bad)
pop
jmp
dec
mov
cmps
ds
in
mov
push
mov
pop
sti
inc
ja
dec
dec
bnd
mov
adc
pop
int3
sub
out
movs
jecxz
dec
dec
push
pop
addr16
loopne
jle
cld
jmp
movs
mov
icebp
mov
jmp
out
frstor
leave
adc
vandnps
gs
outs
shr
xor
push
psubw
pop
lahf
fst
pop
ins
lahf
cld
add
pop
xor
jo
push
popf
mov
cmp
das
gs
cmp
(bad)
xlat
fisubr
leave
or
sar
push
scas
(bad)
(bad)
adc
cli
pop
xor
imul
scas
gs
and
hlt
or
add
int
lods
mov
call
sbb
pop
in
dec
and
(bad)
xchg
add
cs
and
jge
cmp
daa
mov
and
sub
cmp
das
jge
dec
(bad)
xlat
and
ins
scas
cs
sub
xchg
pop
icebp
call
push
mul
jae
jecxz
std
jmp
cmp
or
mov
push
and
pop
jbe
jae
pop
xlat
fdivr
fs
push
mov
aam
outs
jge
in
mov
jne
je
lods
jp
dec
fisttp
mov
dec
mov
nop
and
xor
movs
daa
push
pusha
popf
jne
adc
xchg
sti
stc
iret
dec
and
jmp
neg
iret
mov
xchg
mov
stc
cmp
jecxz
icebp
repnz
(bad)
adc
jecxz
pusha
ins
mov
xchg
cli
(bad)
push
out
xchg
lds
mov
cld
retf
and
jns
ja
sub
and
dec
dec
mov
sub
mov
mov
jl
add
cmp
or
dec
and
mov
call
hlt
cdq
dec
leave
cmps
and
adc
jge
add
mov
push
push
(bad)
test
scas
inc
jmp
(bad)
not
fld
hlt
inc
ret
mov
ror
jl
ss
ds
cmps
je
dec
(bad)
adc
pop
inc
dec
cmc
push
mov
inc
(bad)
cmovns
sub
xlat
lods
or
shr
xlat
ds
jl
ror
repnz
pusha
or
jg
retf
xor
jne
mov
icebp
sbb
dec
(bad)
fcmovbe
outs
lods
dec
pop
cmps
in
jmp
cmp
loopne
mov
cmp
mov
outs
ja
jnp
aad
mov
adc
fdiv
es
sub
icebp
aaa
mov
cwde
in
xor
dec
push
jle
cmps
push
enter
jae
(bad)
iret
js
inc
in
cmp
fbld
fsubrp
ss
(bad)
adc
push
(bad)
or
mov
mov
dec
push
enter
and
xchg
fdivr
jne
cmp
add
mov
enter
inc
outs
inc
out
inc
pop
icebp
rcl
xchg
or
push
je
or
leave
mov
mov
repnz
ja
iret
int
out
add
and
je
and
popf
xchg
enter
fild
adc
in
fmul
mov
sbb
push
push
adc
adc
sub
gs
add
dec
sahf
out
ins
inc
mov
fs
xor
enter
mov
pop
sbb
ds
lock
jne
sub
pop
addr16
mov
mov
xchg
push
add
dec
xor
aad
mov
xor
ds
addr16
cwde
xor
jmp
in
jae
lods
push
pop
push
mov
aad
adc
sub
scas
pop
cmp
sbb
into
mov
aam
dec
mov
sahf
sub
aas
xchg
jecxz
stc
sub
dec
in
mov
ins
cmp
call
cmp
mov
cmc
clc
sub
xchg
add
inc
jmp
mov
xchg
rol
movs
add
mov
push
std
jecxz
idiv
mov
int
hlt
sbb
shr
and
fnstsw
fdivr
rcr
inc
jle
jmp
sar
push
inc
xlat
ds
mov
out
fucomp
addr16
neg
dec
out
cli
daa
icebp
cmp
sbb
mov
dec
sti
and
leave
adc
inc
adc
pop
outs
mov
pusha
adc
jmp
dec
jbe
mov
and
cmp
jno
fmulp
sbb
out
dec
jb
in
imul
jo
icebp
out
je
mov
lds
bound
ds
or
clc
sub
cdq
pop
clc
xlat
inc
fdiv
push
out
mov
bound
fsub
pop
lock
cmc
std
or
push
test
ror
lea
xchg
sub
dec
mov
gs
in
(bad)
dec
cmps
test
dec
repz
jne
popf
movs
xsha1
cmps
mov
fsubr
in
sub
mov
movs
or
xchg
inc
pop
in
dec
xor
sub
fist
fsub
xchg
push
push
mov
inc
imul
(bad)
push
(bad)
aaa
or
jb
mov
fdiv
mov
dec
cmp
mov
jae
sbb
fidiv
mov
stc
pop
pop
inc
push
seto
xchg
mov
xchg
test
mov
fcomi
mov
mov
inc
xlat
mov
stos
std
(bad)
repnz
adc
pop
loope
inc
mov
mov
rcr
adc
nop
add
in
daa
mov
js
jne
or
inc
mov
xor
fdivr
sub
xchg
jmp
sbb
mov
cdq
add
and
fnsetpm(287
xor
lds
mov
ins
dec
add
aad
out
ins
jbe
xlat
ins
imul
jg
in
test
loop
mov
sub
push
push
cmp
adc
cmps
jle
jge
mov
mov
dec
jo
add
test
mov
jmp
lds
xchg
test
and
push
push
jne
fsub
push
bound
in
je
jnp
aas
outs
sti
addr16
pushf
call
or
push
loope
sti
jmp
jle
jecxz
pushf
lahf
shr
stc
int
and
out
dec
je
in
jae
fwait
jle
std
(bad)
out
popf
lds
outs
ror
cwde
and
imul
jns
mov
fldln2
jecxz
mov
push
and
ds
pop
push
cmp
pop
adc
cmp
aam
sub
jbe
int
ror
leave
std
rol
jmp
fmul
lds
cli
or
xchg
punpckhwd
je
push
retfw
or
call
inc
pop
(bad)
cld
push
ffreep
sbb
fisubr
pop
inc
jns
jle
dec
loopne
mov
xchg
pushf
ja
mov
inc
mov
(bad)
pop
pop
jmp
mov
xor
xor
xchg
xor
pop
xchg
sub
sar
jne
std
mov
mov
in
leave
mov
pop
fstp
mov
mov
inc
sub
test
dec
mov
mov
nop
bound
mov
std
add
cmp
sahf
outs
cmps
loope
jno
jle
test
xchg
rcr
cmp
shl
in
xor
das
xor
mov
rcr
lock
fidivr
ret
jns
loopne
push
cmp
outs
jne
mov
push
in
cwde
hlt
and
inc
adc
pop
cmp
adc
cmp
adc
scas
mov
and
sbb
bound
lahf
or
inc
in
xor
mov
push
nop
ins
je
xchg
aaa
movs
je
or
ss
je
aaa
and
repnz
and
or
cmp
mov
test
push
xchg
repz
test
jns
std
test
and
sub
sub
call
mov
ins
sbb
out
fdivr
pop
out
cmps
iret
jge
and
pop
sub
imul
retf
(bad)
ss
js
gs
ror
mov
inc
push
inc
retf
mov
movs
aam
test
dec
std
and
sbb
push
push
or
jb
(bad)
dec
dec
pop
std
out
xchg
cs
out
adc
mov
sub
mov
fs
jmp
jb
(bad)
pop
jl
repz
push
pop
mov
jmp
mov
sub
push
xchg
pop
lods
mov
fbld
add
(bad)
ror
mov
pop
push
outs
jmp
mov
cmp
in
repnz
test
scas
cld
(bad)
dec
sar
jmp
sub
pop
or
daa
inc
retf
shr
jne
pusha
jmp
pop
gs
dec
pop
or
inc
nop
in
enter
xor
pop
mov
outs
das
ja
pop
ja
inc
sbb
cmp
add
or
repz
out
pop
in
adc
jb
mov
pop
push
inc
jle
dec
mov
das
idiv
xchg
popf
cwde
mov
and
loop
and
xor
or
imul
mov
push
mov
cli
cmc
pop
jg
xchg
js
push
dec
adc
enter
enter
push
movs
test
aaa
cmp
ins
mov
add
rol
add
jo
dec
cwde
les
(bad)
dec
or
shl
pushf
push
add
(bad)
sar
(bad)
push
and
cmp
push
test
fsubr
out
test
mov
jmp
adc
jl
test
addr16
neg
pop
jb
sti
ds
not
jecxz
jl
push
or
mov
(bad)
cmp
inc
pushf
int
sahf
mov
pop
arpl
mov
inc
dec
cmps
inc
pushf
xor
fnstenv
adc
dec
addr16
std
cmp
daa
inc
pop
js
push
repz
mov
jnp
pop
(bad)
inc
mov
pop
(bad)
xchg
mov
gs
or
xlat
shl
outs
xchg
test
add
stos
mov
inc
mov
mov
add
outs
aam
mov
and
sub
inc
pop
jmp
gs
aad
xor
enter
dec
retf
dec
jns
shl
dec
fcmovbe
ja
adc
and
adc
pop
out
xchg
or
mov
mov
fs
cmp
ror
sti
xchg
xor
pop
or
sub
icebp
push
call
jb
xor
mov
adc
imul
test
pop
mov
out
mov
rcl
pushf
push
es
frstor
aas
int
mov
in
cmps
jb
popf
adc
xchg
push
aaa
and
adc
and
mov
jecxz
inc
cmps
addr16
in
addr16
out
es
hlt
ins
jae
scas
dec
mov
or
mov
(bad)
scas
sti
pop
jb
movs
repz
cwde
push
pop
xchg
into
rol
scas
mov
pop
mov
inc
pop
imul
test
jns
cs
out
dec
cmc
mov
pop
cmp
sub
jge
test
cmps
sti
out
out
pushf
jmp
sub
mov
popf
iret
xor
retf
ins
shl
mov
ret
rol
adc
add
mov
lea
imul
push
push
or
pop
push
xlat
jbe
imul
mul
and
repz
jbe
scas
in
inc
(bad)
mov
lahf
movs
mov
dec
push
les
sti
pop
clc
sub
add
dec
outs
jg
in
xor
or
or
xchg
aaa
je
pop
(bad)
cwde
cs
fisttp
lahf
iret
sti
pop
mov
pop
mov
cs
cmc
sbb
adc
mov
mov
sbb
sbb
push
call
call
cmp
inc
adc
test
scas
loope
sbb
pusha
(bad)
lds
pop
xor
mov
je
popa
xor
mov
dec
cmps
fwait
xor
mov
pop
fst
pop
(bad)
sar
jb
add
mov
repnz
add
ret
or
push
sbb
jg
sahf
mov
jge
jne
xchg
and
in
idiv
je
cs
popf
mov
jbe
enter
ins
pop
in
sbb
adc
push
and
cdq
jg
mov
popf
fwait
mov
(bad)
or
cs
jge
mov
xor
push
data16
jb
mov
push
mov
loopne
xchg
inc
xor
test
dec
add
dec
mov
cli
scas
std
mov
dec
addr16
and
add
push
dec
pop
mov
pop
je
mov
rcr
sbb
sub
dec
mov
inc
cmp
sub
cmp
cli
push
mov
imul
push
push
xchg
jb
xlat
mov
xchg
(bad)
cmp
div
call
pop
retf
stc
push
out
mov
mov
mov
pop
fnstsw
hlt
(bad)
retf
and
and
bound
add
mov
into
arpl
(bad)
pop
addr16
fnstsw
jp
fdivp
add
imul
push
nop
(bad)
jae
mov
inc
movs
or
and
scas
xchg
and
enter
fst
stos
test
in
out
outs
or
sub
aas
div
pop
jno
push
out
mov
std
push
adc
aad
ss
mov
mov
and
adc
sbb
xchg
or
je
pusha
stos
mov
sahf
dec
mov
and
stc
lods
into
es
add
neg
xchg
scas
icebp
push
ds
jb
nop
xchg
into
push
retf
cmp
or
out
mov
mov
jp
mov
or
jmp
sar
mov
frstor
ds
imul
loope
push
push
idiv
sub
fmul
hlt
pusha
test
sub
fbld
add
call
(bad)
jmp
lea
pop
test
dec
xor
pusha
imul
jmp
mov
mov
shl
dec
nop
out
mov
hlt
add
test
out
jae
idiv
das
leave
aaa
movs
je
repnz
sahf
std
int3
ja
xchg
dec
stc
xchg
dec
adc
and
xchg
or
jnp
dec
mov
jne
inc
or
out
outs
pop
add
jge
mov
adc
cli
xchg
mov
sti
test
adc
repnz
or
es
mov
sbb
invd
cmp
push
jmp
xor
cmc
add
sub
xchg
loop
sar
ins
neg
ins
loope
xchg
and
dec
pop
xchg
and
iret
in
add
int
call
nop
sbb
pop
hlt
xor
aas
es
sub
pop
lock
fldenv
loopne
loop
out
(bad)
(bad)
xor
call
call
(bad)
add
aas
outs
sar
in
jb
jg
push
loop
fcomp
adc
mov
mov
(bad)
xor
out
sti
dec
in
dec
(bad)
inc
mov
sub
nop
sub
adc
and
ins
fiadd
fcomp
cmp
pop
jg
repz
sub
add
mov
push
sbb
idiv
call
xchg
pop
loope
mov
dec
jle
sbb
test
cmp
sub
rol
jle
jo
xchg
jne
nop
sub
push
ret
fs
and
inc
mov
stc
push
daa
adc
pop
adc
mov
jmp
fs
xchg
out
mov
popf
loop
fucomi
push
mov
cmps
mov
clc
push
mov
cmps
shr
add
popf
or
repz
cld
je
retf
out
jo
aaa
enter
hlt
mov
in
mov
sbb
inc
mov
push
dec
mov
mov
add
sub
mov
sub
fidivr
or
cmp
(bad)
mov
rcr
mov
or
pop
mov
ror
and
out
cs
mov
xchg
mov
push
and
adc
cmp
mov
jl
xchg
cmps
ins
add
loopne
push
xchg
mov
out
retf
inc
jge
push
jp
sub
mov
mov
jmp
cmp
shl
sbb
mov
jl
jae
(bad)
xor
fbld
stc
or
pop
mov
scas
hlt
(bad)
xchg
push
daa
cld
test
push
rcl
jle
adc
cld
inc
xchg
xor
dec
pop
pop
or
dec
das
daa
mov
ds
mov
push
fld
fcmovb
mov
loopne
loope
call
and
cmp
data16
dec
test
xor
leave
dec
mov
push
frndint
mov
adc
shr
adc
cmp
scas
and
xor
fisttp
sub
inc
aas
test
rcl
xchg
int
mov
cmp
idiv
and
lahf
adc
repnz
inc
sub
test
repz
dec
cwde
xchg
pusha
std
in
xchg
(bad)
cld
sub
mov
inc
aas
push
push
lock
jb
pushf
call
or
(bad)
mov
scas
and
adc
mov
movs
mov
jmp
push
add
dec
test
ins
sub
push
sub
sti
rol
fbstp
xchg
cmps
jmp
arpl
and
sbb
adc
xchg
outs
cmps
(bad)
repz
sahf
fild
pop
jnp
cmp
das
xchg
lahf
dec
in
jnp
clc
add
lea
mov
xchg
xor
rol
push
(bad)
daa
cmp
inc
mov
popa
cmp
and
icebp
cli
mov
pop
ja
pop
std
test
mul
out
(bad)
fld
(bad)
popf
das
jb
in
jb
fucomi
mov
mov
sti
cmc
dec
pop
repnz
fadd
pop
(bad)
mov
ret
sub
fldln2
cs
cmp
mov
out
xor
jg
jmp
jno
loope
xlat
cmp
jg
cdq
jo
arpl
cmps
cmp
pop
push
jns
ror
es
frstor
scas
jl
(bad)
repz
jb
test
jnp
(bad)
jae
std
mov
dec
ss
ins
retf
cmps
mov
inc
mov
jmp
pop
jbe
jnp
mov
pop
enter
adc
mov
int
dec
jae
ror
mov
push
aam
push
icebp
sar
inc
loope
mov
dec
add
ret
mov
mov
lds
fist
nop
scas
xchg
cdq
fs
test
jo
and
add
call
ret
pop
xchg
mov
dec
mov
xor
(bad)
jle
pop
sti
stc
add
mov
sahf
dec
and
popa
jge
pop
cli
sub
mov
aaa
mov
add
cdq
cld
xchg
cmp
jle
icebp
inc
inc
aas
and
inc
sbb
jbe
out
mov
(bad)
scas
adc
das
movs
sbb
or
add
movs
ss
call
jo
ret
jae
je
sar
icebp
lahf
stos
ds
and
mov
push
(bad)
jae
xor
and
mov
jmp
loope
inc
call
fst
jg
fsubr
pop
mov
push
in
dec
sbb
lds
xadd
shl
(bad)
and
add
pop
loopne
pop
jge
cwde
aad
push
aas
mov
and
cmp
jne
mov
inc
mov
inc
fiadd
repnz
add
jecxz
fwait
ins
and
dec
push
jne
sbb
mov
xchg
hlt
and
xchg
sub
stos
add
(bad)
adc
xor
push
mov
jp
xchg
scas
ja
dec
loop
ds
adc
pop
js
repnz
add
out
paddusw
sub
mov
(bad)
jnp
pop
ja
repz
push
mov
aam
out
xchg
movsx
mov
call
push
xlat
mov
in
inc
xlat
mov
lds
push
dec
mov
out
dec
das
cmps
adc
pop
repnz
sub
inc
aas
jo
shl
adc
push
push
fld1
dec
not
xchg
hlt
imul
out
cmp
shl
movs
pop
or
scas
jne
or
dec
sub
test
ins
jns
sti
stc
mov
aas
std
fbstp
jecxz
leave
dec
mov
adc
out
jae
sub
cwde
fwait
outs
fsub
leave
into
cs
mov
inc
mov
pop
ficomp
inc
lea
leave
call
popf
push
xchg
add
adc
dec
pop
xchg
popf
(bad)
cmp
ins
out
pop
lahf
xchg
xlat
cs
mov
rcl
sahf
mov
aam
rcr
loop
mov
cwde
mov
cmp
fwait
pop
js
mov
add
cld
pop
in
mov
cmc
fwait
jecxz
dec
stc
inc
in
das
shl
push
mov
dec
in
or
cmp
or
lea
movs
leave
out
std
sub
mov
cwde
xchg
fs
lods
dec
fnsave
pop
mov
mov
ja
jns
(bad)
mov
mov
xor
xchg
jmp
outs
fiadd
mov
sub
cmps
sbb
add
jle
jmp
clc
sahf
pop
jg
movs
jns
div
(bad)
adc
out
shl
fwait
jp
(bad)
add
xlat
xor
push
sti
push
js
inc
shl
loope
(bad)
out
loope
and
xlat
cmp
stc
mov
mov
in
cmp
mov
add
xor
push
outs
les
aaa
mov
mov
retf
loopne
rcr
dec
sbb
lock
adc
retf
stc
adc
inc
imul
ja
jp
lds
retf
cli
sub
pop
xor
std
out
icebp
jno
mov
inc
stos
push
adc
pop
dec
mov
dec
das
mov
movs
cmp
ret
xlat
fistp
dec
push
addr16
jmp
retf
push
dec
(bad)
cmp
cmp
sti
pop
jmp
aam
adc
(bad)
sub
mov
pushf
dec
jmp
outs
jg
(bad)
xlat
out
(bad)
push
sub
ins
(bad)
enter
jecxz
outs
mov
gs
jno
neg
jbe
and
pop
pusha
aad
out
iret
xchg
ficomp
mov
sub
icebp
xor
repz
rol
leave
fimul
or
int
or
push
lods
sbb
test
clc
xchg
mov
dec
push
stc
mov
and
jecxz
imul
xchg
out
inc
sub
(bad)
out
dec
add
adc
arpl
jge
mov
add
lock
push
iret
popa
cmp
jp
fchs
sbb
mov
xor
mov
pop
stc
xor
mov
pop
aas
push
popa
jmp
sub
pop
add
movs
dec
inc
cmp
data16
push
loopne
retf
pop
leave
pop
rcl
or
arpl
jl
dec
lock
push
jle
and
div
cmp
xor
jbe
or
and
cwde
inc
cmps
cld
add
jecxz
cmp
mov
cmp
cmp
or
jo
clc
push
cli
out
imul
mov
test
xor
ss
and
dec
pop
test
and
mov
clc
shl
(bad)
jp
mov
imul
xor
inc
std
jge
div
not
jle
outs
dec
dec
xlat
pop
ficomp
out
xchg
in
ficom
aam
xchg
lods
lods
xor
cmp
cwde
arpl
(bad)
mul
mov
out
pop
int3
xor
xor
scas
push
push
adc
inc
xchg
inc
in
ror
mov
fwait
mov
dec
shl
lds
mov
mov
(bad)
aad
or
and
dec
cmc
inc
test
pop
adc
mov
out
or
fiadd
inc
mov
mov
or
adc
and
daa
sti
cdq
mov
nop
sub
iret
addr16
fldenv
shl
pop
test
xchg
sbb
(bad)
jnp
popa
add
std
out
jnp
add
and
mov
fcom
je
sbb
enter
enter
(bad)
shl
pop
dec
and
sbb
fwait
push
aad
xchg
xchg
mov
cmps
icebp
add
mov
xchg
mov
and
jo
or
push
sahf
and
mov
ret
scas
(bad)
ins
mov
ds
hlt
pop
mov
inc
mov
aaa
xchg
sbb
mov
fnstcw
adc
movs
jns
pop
ds
nop
enter
jge
call
idiv
fcmovbe
cmc
jno
adc
sub
mov
push
jmp
pop
scas
scas
and
cli
call
sbb
test
push
pop
cli
imul
mov
cli
ret
push
popa
cmps
push
add
jmp
ds
das
dec
mov
ficomp
adc
lock
mov
movs
cwde
xchg
neg
mov
hlt
jge
dec
mov
stc
cmps
dec
push
ins
(bad)
mov
add
shl
mov
cli
push
jnp
mov
cdq
popf
sbb
cld
mov
jbe
(bad)
jae
pop
lods
adc
add
repz
fwait
mov
lods
nop
push
adc
ja
int3
jg
fwait
jle
add
xlat
out
sar
add
or
mov
sti
shr
ins
or
mov
imul
fld
jo
hlt
ror
sub
jg
in
arpl
mov
xchg
enter
pushf
inc
lods
pop
ss
retf
inc
mov
mov
test
jecxz
cmp
js
cli
cwde
leave
mov
cld
sbb
and
ficom
leave
jb
dec
and
jle
pop
loopne
(bad)
fsubr
jp
jle
cwde
jbe
out
or
pop
ins
icebp
arpl
iret
iret
out
mov
and
lds
je
and
popf
popf
or
repz
cdq
xchg
sub
dec
mov
and
jmp
outs
xchg
sub
cwde
pop
adc
dec
cdq
fs
cs
out
leave
pop
les
loopne
sub
imul
add
rol
mov
arpl
das
push
xor
into
push
mov
xchg
or
xor
repz
fnstenv
mov
jnp
and
dec
cmc
mov
push
mov
(bad)
and
test
or
and
and
sti
repz
and
xor
cmp
not
and
sbb
std
and
mov
mov
jne
cmp
inc
xchg
pop
fimul
mov
into
pop
mov
mov
dec
push
jne
xor
xor
cld
cli
sub
inc
xor
add
pop
add
push
mov
sbb
jle
mov
paddusb
neg
jbe
cs
test
or
xchg
mov
pop
addr16
into
jbe
adc
jae
sahf
repz
jle
mov
nop
inc
jns
mov
int
scas
test
outs
icebp
cmp
retf
mov
mov
xor
adc
inc
and
(bad)
mov
sbb
xor
dec
jmp
or
jp
inc
mov
and
out
pop
lahf
mov
retf
mov
push
and
sub
xor
loope
out
mov
xor
xchg
rol
push
xchg
stc
fisttp
aam
or
ret
int
test
lahf
sbb
jle
fsub
mov
fstp
in
pop
js
fwait
imul
add
mov
fst
dec
sahf
movs
mov
aaa
or
or
pop
clc
and
lds
adc
and
stos
jl
retf
xlat
inc
movs
cmp
or
and
test
push
popf
popa
std
sti
adc
mov
stos
pop
or
pop
mov
into
push
les
movs
movs
ds
jecxz
rcl
jae
aad
sti
clc
icebp
or
sti
pusha
push
lahf
outs
push
mov
jb
std
int
and
hlt
jns
inc
stc
xor
cmps
jecxz
retf
fdivr
xor
shr
add
adc
stc
retf
mov
xchg
rcr
pop
sub
jb
(bad)
jb
jmp
xor
mov
repnz
adc
xchg
in
xchg
(bad)
out
jno
sar
ror
inc
cmp
jae
pop
xchg
inc
dec
push
jae
test
jmp
jecxz
mov
cdq
xchg
mov
add
and
hlt
and
add
ins
jns
das
and
mov
into
sub
xchg
scas
mov
fisttp
aad
mov
cmc
scas
xor
dec
xlat
cmp
xlat
cmp
jae
mov
jmp
add
xchg
jmp
scas
jge
scas
and
push
imul
sub
jmp
inc
mov
xrelease
(bad)
mov
out
mov
nop
ds
test
(bad)
iret
test
inc
mov
and
push
and
pop
movs
mov
inc
stos
sbb
sahf
repz
jmp
repnz
sti
enter
es
or
add
out
mov
jge
ins
(bad)
mov
mov
jge
lock
fnsave
in
mov
sbb
out
sbb
fnsave
(bad)
mov
or
xchg
ins
xchg
jmp
push
and
dec
xlat
and
sbb
stc
add
dec
mov
dec
cmp
lahf
and
rol
jp
inc
rcr
rol
repz
pop
adc
(bad)
pop
mov
aaa
gs
jmp
dec
fwait
xchg
sub
add
push
push
movs
jl
stos
in
jecxz
mov
aam
sbb
add
cli
push
jmp
daa
pop
jg
gs
aad
jb
pop
sub
(bad)
daa
sahf
pop
or
icebp
out
push
and
xlat
jle
clc
dec
jne
sbb
and
cmp
(bad)
mov
clc
inc
stos
cmps
mov
cmp
pop
(bad)
jl
and
push
jg
div
or
cld
jecxz
push
pop
push
stos
jg
fincstp
pop
jne
jp
sub
fiadd
mov
loop
xchg
jp
fs
add
cs
and
fisttp
dec
mov
test
int
push
aaa
cmps
inc
icebp
xchg
xchg
adc
and
std
std
mov
mov
aas
pop
addr16
jg
into
add
jb
ret
cmp
out
adc
cmp
jae
(bad)
not
dec
sub
loop
sbb
mov
lods
dec
jns
dec
mov
outs
aaa
lahf
inc
(bad)
lahf
push
add
jnp
stos
(bad)
adc
adc
and
or
sub
lock
xchg
cld
inc
dec
pop
ins
stos
add
mov
imul
shr
xchg
sub
xchg
add
leave
bnd
dec
pop
stos
sub
mov
mov
dec
clc
mov
push
into
or
out
add
mov
sar
hlt
sbb
adc
inc
mov
loop
and
or
adc
nop
pop
ins
jecxz
cdq
gs
je
pop
xor
push
cdq
icebp
cmps
outs
call
std
data16
test
adc
push
xchg
stos
mov
das
push
cs
cld
add
and
add
mov
sbb
push
cmp
sub
int
loopne
and
shl
add
mov
sar
jns
fldcw
retf
xor
mov
std
movs
inc
sub
stc
or
cmp
(bad)
mov
lock
or
adc
lea
(bad)
fs
retf
test
pop
pop
mov
jge
pop
hlt
shl
fistp
aad
cmpps
test
mov
cwde
adc
(bad)
dec
int
jge
ss
ins
inc
fwait
sub
das
jl
jne
dec
dec
mov
fistp
out
das
stos
addr16
add
adc
stos
movs
push
sahf
pop
pop
pop
add
jmp
add
adc
pop
cmp
hlt
or
fs
fs
sbb
icebp
scas
adc
push
hlt
mov
adc
mov
dec
and
sbb
sub
cmps
inc
adc
jmp
xchg
rol
or
mov
and
jae
jne
aas
(bad)
push
outs
pop
adc
sbb
mov
xchg
inc
mov
mov
sub
repnz
mov
movups
pop
adc
mov
and
jmp
jb
enter
outs
test
sub
aas
(bad)
adc
ds
cmp
push
in
stc
mov
and
push
pop
sahf
cs
dec
and
cs
mov
mov
jne
popf
cwde
xlat
jb
xchg
cli
inc
shl
out
movs
pop
adc
cmp
mov
and
push
mov
pop
fst
inc
sahf
and
in
out
cdq
jg
aaa
int
mov
leave
or
call
pop
cmp
(bad)
fwait
jb
xchg
or
icebp
cmp
fs
pop
retf
mov
popf
cs
mov
in
or
(bad)
(bad)
fadd
test
pop
xor
out
push
pop
xchg
xchg
push
in
lock
pop
add
pop
fcomip
jl
sub
adc
jne
adc
mov
jmp
clc
jb
sahf
sub
shr
sti
(bad)
xor
pop
pop
lods
(bad)
in
push
hlt
jns
aam
inc
xchg
ins
ins
adc
and
mov
out
rol
fnstsw
adc
sbb
cmp
sub
rol
sbb
(bad)
loopne
(bad)
out
imul
sbb
sbb
aaa
(bad)
popa
retf
or
test
or
lods
xor
out
(bad)
out
or
xchg
jp
push
sti
cli
mov
dec
ins
xchg
mov
xchg
frstpm(287
test
xor
cmp
addr16
and
sbb
add
or
mov
jle
dec
xchg
inc
adc
and
mov
nop
sub
aad
leave
(bad)
pop
stos
mov
arpl
sub
paddw
in
cmp
out
fldenv
cdq
ret
cdq
dec
pop
sti
int3
mov
ins
sbb
repz
push
cmp
test
and
cld
adc
push
xchg
push
push
jmp
jge
adc
add
inc
cdq
iret
pop
cli
mov
mov
and
out
sbb
mov
pop
mov
jno
fs
push
inc
mov
sbb
sub
mov
outs
call
icebp
xchg
jmp
cmc
xor
add
loop
ret
sbb
aas
repnz
xor
loope
pop
add
jmp
mov
pop
pusha
pop
aaa
fs
ja
ror
mov
fwait
jbe
lea
sti
fisttp
inc
or
mov
fistp
ja
sti
into
push
popf
into
add
call
or
into
inc
jle
xchg
adc
loopne
xchg
sbb
mov
sbb
mov
aas
in
scas
jp
cmp
sbb
cmp
jae
or
or
xchg
(bad)
lock
mov
xor
mov
int
pusha
jne
fidivr
sti
ret
fwait
scas
scas
retf
jge
dec
push
fist
jae
aad
in
mov
(bad)
shl
or
pop
out
jg
stc
inc
sahf
mov
cli
push
jo
ds
ret
loopne
aaa
mov
rcl
push
dec
rcr
out
fcomp
push
ss
mov
mov
leave
add
mov
icebp
mov
dec
inc
lods
loop
dec
mov
scas
add
xchg
paddusw
mov
outs
mov
jmp
mov
cmps
arpl
call
adc
movs
rcl
and
sub
cmps
mov
mov
xor
and
cmps
add
mov
inc
repnz
pop
and
cmps
xchg
sti
les
jl
mov
push
or
xchg
mov
in
shl
sbb
sub
mov
outs
daa
aas
xor
sub
mov
and
inc
mov
mov
sahf
ins
pop
cld
adc
push
push
sbb
out
and
sub
mov
push
fistp
data16
mov
push
cmp
ja
fnsave
hlt
fisttp
and
pop
sbb
iret
push
jmp
push
mov
mov
loope
mov
push
loopne
popf
jmp
mov
addr16
fdivr
imul
push
jp
xor
ja
mov
push
mov
mov
xor
jmp
pop
push
push
js
(bad)
sar
xor
fld
xlat
mov
ins
push
or
std
aam
mov
add
(bad)
or
mov
add
pop
cmp
lds
cdq
jle
je
inc
mov
paddd
imul
and
in
adc
jge
cwde
adc
lods
aam
stc
jl
sbb
gs
(bad)
into
mov
mov
not
lock
or
repz
loopne
sbb
std
add
cmp
retf
leave
ret
or
jl
add
js
gs
cmove
mov
xchg
mov
cmc
cmps
outs
add
or
addr16
leave
pop
mov
lods
add
fild
cmp
xor
xlat
inc
pop
clc
into
daa
jnp
int
xchg
cmp
adc
shr
pop
gs
push
and
mov
pop
pop
mov
rep
pop
mov
or
sub
mov
cmps
stos
leave
push
sub
fs
cmp
add
inc
scas
add
mov
clc
dec
outs
add
cdq
mov
gs
sub
adc
xor
push
jnp
leave
xchg
jecxz
pop
sub
ins
mov
rcl
fs
jg
jg
out
mov
std
movs
jl
(bad)
aas
test
aas
mov
dec
(bad)
xchg
lods
ins
lds
enter
fldcw
sbb
sahf
aas
mov
cmp
sahf
sbb
xor
cmp
pop
retf
inc
daa
jns
add
addr16
fld
clc
add
arpl
mov
cmovp
(bad)
lea
movs
mov
ss
lds
imul
jno
repnz
aad
addr16
mov
fdivr
out
add
sub
mov
data16
daa
pusha
add
ins
rol
mov
bound
fs
cmp
mov
jl
gs
mov
sahf
iret
out
mov
loopne
jmp
fbld
push
in
xchg
jle
jp
cmp
cld
push
scas
fbstp
fld
and
mov
fcomi
rol
aad
xor
mov
jge
hlt
xor
out
sahf
lods
pxor
in
bound
(bad)
(bad)
nop
jne
ds
jno
lds
cmp
fs
inc
mov
test
test
fs
or
jmp
adc
pop
hlt
outs
div
fcmovnu
clc
shl
or
cmp
xor
xchg
call
test
xchg
dec
fld
in
es
(bad)
enter
das
jg
or
xchg
sbb
or
mov
out
jne
push
fwait
ror
adc
in
jg
or
and
sub
pop
and
inc
mov
aaa
jnp
and
fsub
lahf
mov
retf
repnz
mov
out
test
pop
not
and
sbb
std
jae
push
inc
test
mov
dec
std
or
add
mov
fidivr
dec
aaa
setno
mov
inc
push
jle
in
movs
jnp
mov
nop
jb
xchg
push
test
clc
dec
mov
jns
jge
fwait
cli
add
and
mov
and
popf
cmps
mov
mov
cld
cli
mov
inc
popf
movs
cld
push
sbb
je
jge
shr
lods
aam
div
daa
pusha
jb
mov
xchg
lds
sbb
shl
jecxz
xchg
ins
or
fsub
pop
popf
aaa
(bad)
in
mov
pop
mov
in
mov
ret
retf
mov
js
aam
test
inc
imul
dec
pop
xchg
shl
nop
fist
daa
frndint
mov
push
in
and
cmc
mov
mov
dec
mov
push
cwde
fwait
mov
dec
cmp
and
cs
xchg
dec
mov
jo
retf
bound
fiadd
es
and
shl
add
cmp
xchg
add
sbb
test
mov
pop
mov
data16
inc
push
test
out
cmp
push
loop
sub
and
and
fwait
das
xor
sbb
and
push
jg
adc
lods
loopne
aaa
fnstsw
lods
pop
sbb
cmps
(bad)
cmc
into
daa
sbb
idiv
mov
out
into
jp
or
enter
jecxz
hlt
inc
cmc
mov
pushf
idiv
mov
enter
sub
sti
inc
clc
popf
mov
popf
(bad)
sbb
sbb
rcl
mov
cmps
in
pop
repnz
mov
das
lods
jmp
jbe
inc
and
fdivrp
in
lds
into
dec
ss
or
and
mov
sbb
ret
inc
out
mov
and
mov
push
inc
mov
aad
in
loop
pop
adc
cli
cli
inc
jge
sbb
jge
ds
fs
xor
mov
mov
mov
jge
and
xlat
(bad)
(bad)
jl
pop
ror
call
shl
inc
mov
div
mov
pop
dec
mov
fwait
aad
and
jae
fidiv
push
push
imul
ret
pop
imul
and
scas
and
sahf
icebp
(bad)
cs
inc
scas
ins
cmp
sub
mov
test
mov
sub
mov
pop
xor
fs
mov
dec
in
xor
loopne
xor
add
jecxz
scas
bsr
dec
jns
cmp
mov
inc
sub
aas
adc
in
and
pop
adc
adc
pop
inc
lock
dec
je
lea
pop
and
mov
and
mov
adc
cld
adc
mov
jge
inc
aaa
test
test
and
pop
call
xor
dec
adc
loop
sub
push
sub
mov
sub
fcmovb
sbb
mov
and
jne
mov
or
mov
mov
ror
or
xchg
repz
xchg
fstp
dec
mov
mov
stos
shl
pop
in
or
inc
mov
xchg
mov
mov
repnz
clc
jmp
and
int3
ds
dec
(bad)
and
cs
pop
fist
dec
mov
out
aam
sub
push
movs
out
mov
jge
idiv
retf
cmps
sbb
inc
mov
xor
push
shr
loop
leave
jmp
ins
fild
pop
mov
jne
hlt
neg
ins
add
data16
retf
push
repz
pop
cmp
jns
fidivr
pop
xor
aas
and
fldlg2
mov
lds
(bad)
ins
fidiv
jmp
jno
fs
or
movs
jle
pcmpgtb
leave
es
in
loop
xor
xor
out
iret
jne
cmp
fistp
mov
mov
leave
push
adc
fcom
cmp
xor
test
add
arpl
jb
lods
js
fld
cmps
cmp
cmp
cmp
adc
aad
push
inc
bound
dec
cdq
cld
cdq
dec
out
add
shl
scas
mov
sbb
ret
nop
sub
mov
add
jg
bound
dec
sbb
rcl
std
xchg
pop
imul
scas
mov
mov
lea
pusha
jnp
mov
sti
das
xchg
daa
sbb
test
push
dec
push
ror
adc
repnz
and
out
out
or
ds
push
ins
lock
mov
mov
jmp
leave
or
push
and
gs
xlat
xchg
sub
arpl
(bad)
sbb
pusha
retf
adc
cs
cmc
sahf
ins
or
mov
add
ror
inc
and
cld
mov
jbe
mov
inc
sti
cwde
(bad)
and
adc
popa
inc
fidivr
fwait
out
adc
int
pop
shl
outs
mov
repz
ret
(bad)
div
pop
mov
fld
mov
jecxz
pop
scas
in
mov
fild
scas
jmp
pop
(bad)
push
gs
into
stc
out
aaa
push
lock
clc
stos
sar
jge
adc
cmp
jg
xchg
pushf
or
pop
jns
mov
es
and
ds
je
adc
jge
adc
leave
(bad)
aad
stos
mov
not
sti
xor
xlat
xor
xchg
in
xchg
push
call
shl
pushf
mov
xor
in
adc
(bad)
cmc
sub
sahf
sbb
inc
cld
call
sub
int3
and
dec
mov
mov
rcl
and
add
mov
or
test
out
sbb
xchg
(bad)
in
and
mov
movs
jbe
test
popf
sub
mov
jecxz
(bad)
fisttp
repnz
mov
pop
cmps
mov
aam
add
stc
push
jnp
push
repnz
pusha
xor
xor
mov
fcom
out
scas
cs
jae
(bad)
js
push
iret
lock
pop
gs
mov
gs
or
jnp
sti
nop
jle
ins
test
and
and
add
and
jns
loop
adc
xchg
adc
int
mov
xchg
in
pop
out
leave
cs
pop
xor
pop
inc
das
push
mov
pusha
and
test
stos
ins
mov
pop
clc
push
push
fld
inc
mov
jmp
fcomp
(bad)
jmp
repnz
xchg
cli
ins
fs
jmp
dec
pop
xchg
sti
fisub
call
sub
cmps
jp
and
lock
mov
leave
pop
ss
sar
jo
xchg
xchg
in
fsub
aaa
xor
leave
push
dec
and
mov
jnp
mov
lds
xchg
inc
and
cdq
sti
cs
pop
sti
cmp
scas
lahf
repnz
je
idiv
fcomp
call
mov
add
cdq
je
inc
mov
es
xlat
ss
jle
repnz
push
jmp
and
and
jns
scas
adc
fst
test
add
and
dec
cmp
out
lods
or
inc
sbb
mov
sbb
neg
jl
cld
jmp
aas
lock
xor
add
loopne
add
xchg
(bad)
mov
add
and
mov
out
in
cli
push
fadd
sbb
xchg
cli
and
dec
stos
shl
(bad)
jl
repz
stc
xchg
or
cmp
cmp
cmc
mov
stc
aam
out
xchg
push
es
sti
fld
cdq
loopne
jl
leave
mov
jmp
pop
sti
fcomp
cli
inc
mov
stc
aas
jecxz
cmp
mov
inc
std
(bad)
hlt
jo
pop
push
or
push
(bad)
mov
mov
xchg
inc
mov
mov
mov
sub
cmp
popa
stos
mul
(bad)
mov
hlt
mov
out
mov
pop
sti
enter
cli
cmp
ror
ror
in
outs
sbb
(bad)
clc
repnz
out
jp
jae
inc
les
fidivr
(bad)
int
daa
push
test
mov
cmp
clc
inc
(bad)
xchg
ins
dec
cmps
dec
cmp
mov
cmp
push
pop
loop
jns
cli
jp
lock
mov
adc
les
add
mov
int
retf
bound
and
push
or
pop
mov
pop
dec
out
outs
not
sbb
cmps
mov
jg
mov
(bad)
stc
fmul
ins
ret
fidivr
das
mov
cmp
lock
mul
jbe
je
lock
fist
xchg
inc
pop
pop
clc
add
and
fnstenv
and
and
ins
ret
lods
pop
pop
dec
jge
sub
inc
mov
in
int
shl
lahf
bound
popf
or
jb
cmc
jle
cmp
add
pop
lods
cs
cmc
movs
scas
movs
mov
hlt
push
clc
pushf
movs
(bad)
out
jg
xor
shl
xlat
iret
fcmovnbe
jge
sahf
mov
pop
adc
inc
jle
xchg
stos
inc
mov
dec
jecxz
jnp
movs
iret
clc
jmp
inc
dec
pop
in
push
inc
rol
mov
nop
xrelease
and
push
sub
and
adc
or
adc
pop
and
and
cmp
cmp
repz
push
fistp
mov
jg
dec
std
or
gs
and
sub
hlt
xor
jg
mov
lock
sbb
and
scas
or
jg
mov
sub
dec
les
add
cmps
mov
mov
in
ret
xor
inc
push
inc
repz
dec
pop
pop
add
inc
mov
adc
lock
and
jo
loope
aam
fild
movs
jbe
mov
cmps
jae
addr16
mov
fcomip
inc
or
arpl
leave
retf
mov
inc
and
jnp
lds
cdq
aad
retf
pop
ds
cmp
inc
shl
dec
(bad)
pop
shl
ins
sub
xchg
mov
mov
sub
ret
and
ins
gs
pop
pop
loope
arpl
jmp
jb
fsubr
das
pop
xchg
sar
xchg
pop
and
inc
pop
ds
lods
xlat
dec
lock
inc
jl
or
fimul
out
dec
and
loope
daa
or
ret
jmp
jmp
inc
lock
xchg
retf
cmp
jl
sbb
or
std
add
sbb
fild
sahf
fs
sti
stc
je
fcomi
mov
sbb
adc
inc
pop
xor
std
xlat
rcl
pusha
dec
push
mov
jecxz
xor
imul
push
dec
pop
xchg
adc
push
retf
adc
not
shl
nop
mov
add
(bad)
sti
jns
and
repnz
lea
jg
mov
fild
bound
lods
inc
pop
dec
mov
push
and
push
push
leave
or
xor
or
cmp
cmp
mov
(bad)
jecxz
jo
(bad)
push
cmc
add
lahf
ds
fisub
jp
arpl
pop
sub
ss
add
or
jl
mov
fadd
xor
add
dec
add
xor
jle
pop
inc
fisttp
int3
loopne
sub
pavgb
aaa
fild
daa
loopne
clc
leave
inc
mov
es
fdiv
imul
mov
shl
div
pop
jl
ret
sahf
inc
repz
add
mul
es
movs
imul
daa
mov
rol
gs
cli
je
leave
pop
fs
and
or
js
mov
pop
adc
mov
in
aas
int
test
fimul
iret
fmul
sar
jg
mov
jmp
pushf
cs
sbb
mov
dec
out
push
ficom
icebp
or
pop
jp
pop
jbe
sub
lahf
(bad)
push
dec
stc
(bad)
or
sbb
std
sti
jg
inc
(bad)
add
jle
cld
(bad)
push
int
mov
lock
sbb
push
ds
iret
test
leave
jb
pusha
push
cmp
leave
mov
lahf
xor
es
cli
jae
lock
mov
aam
sbb
and
pop
lods
mov
push
and
mov
fucom
mov
xor
les
sub
iret
ret
icebp
jae
shr
dec
sbb
xor
and
and
add
loopne
push
or
adc
xchg
inc
and
or
bound
stos
pop
pop
jae
dec
clc
lods
cli
js
add
pop
mov
dec
dec
push
les
cs
sahf
retf
test
add
test
mov
mov
xor
je
mov
(bad)
es
sub
fdiv
js
pop
xchg
sub
xchg
sub
cmps
and
shl
mov
cmp
nop
add
pushf
cwde
or
sbb
sbb
jo
jge
and
adc
bound
dec
push
inc
lods
inc
mov
pushf
push
pop
clc
push
and
jecxz
mov
mov
bound
mov
xor
es
outs
pop
mov
xor
test
ficom
jmp
or
mov
daa
sub
push
scas
jns
mov
fdivr
shl
lods
scas
xchg
jl
ins
adc
dec
pop
int
jmp
sti
ret
xlat
call
jmp
and
jmp
call
sar
hlt
or
xchg
jmp
test
cmp
fmulp
js
and
lock
ds
fist
xchg
lods
clc
enter
dec
and
or
out
clc
adc
push
fisub
outs
cmps
and
and
ins
push
dec
ss
retf
out
jae
inc
cli
inc
sub
jns
or
das
or
iret
jl
mov
ficomp
cli
shl
pop
fisub
add
lds
rcl
jns
or
les
pop
sbb
xor
lea
sahf
push
imul
pop
mov
sbb
test
add
dec
mov
xchg
and
sbb
mov
and
mov
xchg
shl
mov
adc
and
(bad)
in
inc
mov
xor
jb
les
inc
mov
push
mov
fistp
mov
push
(bad)
ja
leave
sar
(bad)
out
adc
fs
inc
lods
mov
or
add
dec
dec
inc
mov
shl
xchg
mov
data16
push
and
and
test
retf
aad
fs
inc
adc
pushf
nop
inc
sbb
aam
mov
inc
mov
sti
scas
sub
or
sbb
sti
(bad)
push
leave
xchg
cld
js
mov
ins
sub
and
lahf
ret
out
push
mov
jo
aad
pusha
xlat
xlat
mov
cmc
cld
movs
out
adc
jmp
jae
je
sahf
sub
in
loope
pop
pop
pop
outs
aas
jg
pop
xchg
lods
lahf
dec
enter
dec
outs
sbb
mov
add
lock
fld
test
arpl
adc
out
lock
(bad)
push
out
add
shl
imul
add
fist
fisttp
sub
fidiv
aas
xchg
lods
cmp
push
jg
je
jle
loope
lock
es
or
jecxz
in
js
push
inc
in
out
xlat
jmp
es
stos
add
leave
mov
cmc
sub
jns
fcomp
call
xchg
sbb
daa
sbb
loop
sub
push
or
idiv
inc
mov
mov
add
pop
mov
popa
and
lods
sbb
push
inc
ins
call
push
add
out
lds
mov
or
enter
pop
jp
xor
pusha
add
stos
inc
(bad)
and
inc
sub
jmp
test
adc
ins
mov
dec
push
and
sti
mov
jl
xchg
xchg
dec
ss
dec
inc
jmp
adc
lds
xchg
mov
or
mov
and
pop
cdq
or
nop
imul
push
lds
adc
pop
clc
in
mov
jg
pop
and
cmp
icebp
or
cld
mov
adc
add
js
sub
nop
out
ror
pop
dec
sbb
mov
retf
lahf
mov
bound
popf
jecxz
retf
repnz
rol
mov
adc
xchg
in
add
je
add
repz
jecxz
inc
js
adc
fcom
cli
int
lock
ror
lock
push
js
addr16
dec
mov
xor
pop
fadd
push
sbb
inc
retf
and
cmp
in
call
movs
mov
cld
ja
dec
pop
inc
cmp
retf
add
mul
sub
mov
test
int
lods
jne
mov
sar
jnp
call
cmps
or
ret
outs
ja
(bad)
pop
dec
mov
stc
sbb
adc
sbb
and
or
jge
add
xor
and
out
retf
push
bound
ror
rol
and
sahf
add
dec
std
arpl
mov
push
cdq
shl
jle
push
arpl
mov
adc
ins
enter
add
inc
mov
inc
mov
sbb
adc
mov
cmp
jl
add
sub
iret
cmp
dec
adc
lds
ss
sub
inc
lock
fwait
lds
and
adc
ins
mov
stos
and
inc
mov
repz
fld
jb
mov
and
jns
stos
sbb
aad
leave
es
xchg
mov
stos
jge
and
ds
pop
inc
jge
or
jns
mov
pop
aam
ins
dec
mov
arpl
pushf
xlat
jb
leave
es
cmc
jnp
leave
xchg
pop
cmp
mov
repnz
xchg
loopne
fadd
or
dec
jb
jmp
or
jns
(bad)
jp
xor
nop
aad
pop
stos
mov
mov
cwde
xchg
in
mov
loope
in
push
and
(bad)
jb
push
cmc
test
jle
pop
jl
call
push
cli
add
xchg
jle
add
lahf
inc
loope
sti
cmp
jne
inc
sahf
xchg
add
in
int
mov
mul
inc
push
mov
jge
xor
das
add
dec
push
inc
mov
mov
and
ins
mov
shl
inc
mov
add
stos
or
scas
jnp
xchg
iret
clc
sahf
jo
aaa
test
jecxz
shl
sahf
sbb
cmp
inc
js
xchg
(bad)
mov
sbb
adc
lock
mov
mov
inc
mov
or
inc
mov
out
push
cmp
push
xchg
sub
push
rcl
rol
and
sbb
push
vucomiss
jo
push
and
add
sti
loope
jo
cs
inc
stos
add
add
sub
mov
scas
xchg
mov
pop
inc
in
mov
out
pop
ja
adc
mov
ret
mov
pop
std
arpl
mov
mov
or
mov
idiv
or
mov
jns
sti
push
push
mov
cli
and
jo
push
ficomp
es
retf
adc
mov
test
lock
stos
sub
in
add
arpl
out
iret
inc
ret
pop
into
cmc
or
es
mov
popf
nop
cli
pop
push
add
ficomp
dec
jecxz
add
out
xchg
sti
dec
nop
idiv
clc
xor
cmps
iret
pop
es
jns
dec
dec
(bad)
mov
mov
ss
movs
xor
dec
sti
sbb
ss
arpl
jmp
fs
ins
cmp
das
inc
rcl
cmp
fcmovb
add
jo
fstp
add
std
add
inc
rdpmc
sub
xchg
in
out
and
push
cld
sbb
and
stos
or
fldenv
mov
fst
outs
mov
cli
arpl
xchg
je
dec
inc
dec
pop
or
add
dec
add
fsub
pop
or
arpl
inc
mov
sub
and
mov
mov
out
sub
pop
jg
aas
lock
stc
and
dec
sbb
inc
mov
push
inc
mov
scas
call
icebp
inc
and
pop
adc
pop
cmp
add
leave
or
mov
fs
push
lds
xchg
mov
pop
fmul
sub
push
sub
movs
push
add
and
jnp
repz
leave
jp
dec
(bad)
retf
mov
jo
sar
fld
pminsw
les
shr
inc
ss
cmp
add
scas
hlt
repnz
arpl
aaa
jle
lahf
dec
rol
pop
add
xlat
imul
xor
xlat
adc
mov
jecxz
test
outs
std
mov
push
in
mov
xor
aam
add
push
stc
push
and
adc
iret
jbe
dec
inc
hlt
xor
(bad)
bound
inc
not
and
xchg
jo
fldenv
out
ds
mov
aad
das
std
ret
mov
xchg
fist
add
sbb
xchg
loope
out
sub
(bad)
repz
call
aam
jbe
and
cmps
sub
mov
add
(bad)
and
sahf
mov
idiv
dec
dec
into
and
pop
pop
(bad)
sti
ret
cmp
aas
aaa
(bad)
fsubr
jne
outs
out
popf
lods
rcl
jbe
hlt
clc
mov
jnp
leave
ds
pop
and
cli
mov
sti
stc
mov
retf
out
inc
hlt
lea
jle
add
sbb
call
ret
outs
ja
cmp
clc
push
push
add
cmps
sahf
sbb
nop
retf
pusha
iret
push
lods
and
sbb
fldlg2
push
push
inc
inc
mov
and
fpatan
sahf
jb
mov
add
lds
sub
dec
xchg
add
pop
daa
jle
adc
aad
and
add
pusha
cmps
mov
push
and
(bad)
and
and
xchg
imul
lock
push
sub
xchg
stos
and
imul
and
pop
lods
push
cmp
adc
(bad)
mov
inc
mov
push
inc
in
cmp
aam
aad
adc
fld
test
mov
les
gs
xchg
add
push
fnstcw
stos
jle
add
dec
adc
cmps
mov
adc
ss
pop
scas
cmps
in
inc
shr
pop
aad
cmps
pop
jne
and
in
daa
push
add
out
movs
mov
cmps
jp
mov
adc
fadd
fmul
or
cmp
mov
jecxz
dec
xchg
cmp
(bad)
and
jle
add
cwde
dec
inc
aas
jno
add
retf
xor
int
rol
mov
cmps
mov
push
jl
mov
cld
pop
cmp
xchg
cli
test
pop
mov
mul
(bad)
sbb
cmp
ret
push
jle
push
loop
xchg
pop
jo
js
cmp
ret
bswap
xor
das
addr16
pop
dec
xchg
movs
mov
xor
mul
out
je
dec
addr16
or
and
aas
cwde
ror
fstp
clc
imul
(bad)
adc
pop
and
xchg
jmp
mov
out
out
mov
movs
ins
lods
sbb
(bad)
out
adc
std
cmp
in
xchg
lds
mov
mov
repnz
xchg
lods
nop
dec
or
outs
hlt
adc
jnp
jno
xor
or
adc
mov
pusha
or
call
(bad)
rcr
adc
adc
xchg
jns
or
xlat
ins
jo
not
jno
pop
out
arpl
aad
retf
sub
mov
cdq
xchg
mov
jecxz
ss
mov
jle
mov
aas
push
adc
pop
and
sub
(bad)
sbb
xchg
lods
nop
push
dec
adc
in
ja
adc
repnz
xor
mov
pop
leave
popa
mov
arpl
pop
adc
ja
xchg
pushf
push
and
mov
sub
xchg
retf
and
popf
popa
into
pop
cmp
adc
inc
cmp
in
fldenv
idiv
in
mov
inc
xchg
cmc
dec
in
lods
jge
cdq
das
jmp
(bad)
imul
push
hlt
stos
repnz
pop
sub
cli
and
retf
xchg
scas
mov
or
mov
cmp
jnp
in
(bad)
sbb
scas
je
add
mov
(bad)
in
add
cs
imul
inc
scas
dec
jno
daa
jg
into
out
push
repnz
lahf
mov
fs
cs
sub
add
xor
pusha
xsha1
fs
in
out
lods
cmp
mov
and
test
xchg
mov
cmp
arpl
push
dec
push
mov
xor
(bad)
and
inc
mov
ins
dec
nop
imul
jmp
out
icebp
jno
mov
inc
ja
je
sub
cmp
aaa
push
cmp
xchg
xchg
xor
iret
ret
ss
outs
inc
jb
add
and
and
jns
add
dec
or
xrelease
sub
stc
inc
lea
sub
dec
adc
and
hlt
test
ret
hlt
sbb
mov
pop
xchg
dec
mul
mov
test
in
(bad)
xchg
movs
dec
sub
or
dec
pop
int
push
mov
xor
pop
ror
pop
pop
dec
imul
and
ins
mov
pop
inc
neg
mov
in
test
fidivr
inc
push
add
inc
fimul
movs
sahf
out
cmps
inc
fwait
mov
add
fcomp
cli
mov
xlat
mov
repz
mov
push
neg
clc
scas
sbb
call
je
mov
mov
pop
jecxz
retf
add
test
cwde
push
into
sub
ror
cld
sar
loope
pop
mov
(bad)
xchg
push
and
cwde
sbb
jbe
mov
out
fsub
enter
enter
enter
es
and
dec
sbb
ficom
lahf
jae
aas
stc
scas
jnp
ret
mov
xchg
mov
jmp
fs
outs
push
(bad)
iret
inc
movs
pushf
push
mov
sub
inc
hlt
stos
and
lds
leave
or
add
icebp
inc
(bad)
es
adc
mov
loopne
push
xchg
ins
cmp
(bad)
in
mov
or
jl
push
movs
nop
repz
retf
std
pop
dec
adc
and
jp
jge
ss
or
and
fwait
aad
or
ret
mov
xchg
das
fld
ror
inc
shr
push
and
mov
or
repnz
stc
add
xchg
pushf
(bad)
ins
fidiv
outs
mov
(bad)
mov
aam
mov
scas
mov
xchg
dec
ror
bound
xchg
pop
push
ins
xlat
movs
push
push
pop
cli
pusha
cmc
sbb
jge
rol
xchg
and
movs
in
push
pop
inc
into
mov
mov
mov
lds
pop
and
out
mov
pop
dec
pop
je
sub
retf
and
outs
scas
dec
push
jecxz
into
adc
pop
mov
cmp
pop
adc
ja
sahf
hlt
int3
mov
sbb
and
cmp
mov
enter
inc
inc
mov
shr
mov
ins
jg
shl
jge
(bad)
fcom
out
retf
mov
add
mov
les
mov
push
les
and
add
xor
mov
xor
inc
mov
test
adc
xor
dec
xchg
pop
frstor
mov
loope
lods
inc
mov
pushf
shl
stos
mov
inc
mov
cmp
adc
and
test
repnz
push
mov
call
mov
pop
loopne
inc
or
mov
cmp
mov
nop
or
outs
xor
jle
out
mov
xlat
mov
outs
sub
arpl
jmp
(bad)
sbb
pop
push
cmps
push
dec
fimul
ins
or
pop
pushf
inc
jnp
scas
cmc
mov
mov
cwde
jbe
je
dec
test
jge
cld
xor
adc
cli
cmp
fs
dec
sti
jmp
pop
or
movs
rcl
rcl
in
adc
mov
mov
dec
add
sub
push
icebp
ret
mov
inc
cld
sti
sub
fld
or
call
jg
dec
out
(bad)
test
(bad)
mov
fistp
mov
jp
jg
neg
pop
xchg
pop
jg
or
mov
and
and
mov
daa
inc
adc
add
push
mov
retf
in
mov
loope
rcr
jp
jno
and
sahf
out
pop
adc
repnz
ins
and
rol
pop
scas
and
leave
and
add
repz
aas
xchg
and
(bad)
xchg
inc
ja
jnp
push
lds
pop
out
(bad)
loop
sbb
aas
(bad)
mov
inc
repnz
mov
fstp
lea
jnp
adc
stos
or
xor
mov
jnp
jmp
retf
dec
inc
mov
(bad)
mov
inc
(bad)
inc
or
pop
sbb
dec
std
out
xchg
inc
pop
mov
pop
cdq
jb
sub
addr16
aad
dec
jl
cli
fcmovnb
cmp
pop
mov
pop
dec
jne
xor
pop
inc
lahf
push
retf
cli
mov
xchg
pop
dec
cmp
repz
test
mov
pusha
xor
cmp
in
jo
mov
add
pop
adc
xor
or
test
sbb
test
mov
add
add
test
cli
pop
out
mov
dec
leave
add
mov
mov
add
and
fwait
stc
sub
or
mov
inc
mov
pop
adc
enter
pop
lods
fdivr
retf
cmp
mov
xor
shl
mov
and
imul
mov
rol
std
call
mov
adc
hlt
inc
and
aaa
xor
xchg
sub
das
hlt
mov
mov
push
fwait
cs
add
adc
in
mov
sub
pop
aam
popf
sbb
xor
dec
mov
pop
in
jg
dec
push
test
sbb
fimul
mov
and
stos
mov
ins
(bad)
popa
std
call
pop
repz
stc
mov
aad
mov
(bad)
xor
xchg
retf
xchg
sahf
sbb
inc
scas
lock
xchg
fs
and
inc
loope
sub
aam
xchg
or
xchg
out
cmp
std
es
mov
or
loop
add
arpl
mov
loopne
(bad)
fadd
dec
sbb
fwait
inc
call
std
inc
sbb
and
xor
das
jg
cmp
mov
push
shr
iret
sbb
or
push
xchg
mov
add
in
and
mov
pop
and
push
xchg
add
les
mov
inc
sub
push
sub
lods
and
nop
ins
pop
lock
adc
mov
pop
sahf
hlt
mov
mov
jge
ja
xlat
xchg
xor
fimul
push
movs
or
ret
xor
dec
dec
fldenv
mov
test
pop
jl
pop
in
push
leave
xor
leave
lods
mov
sti
fiadd
cli
push
xor
mov
fimul
inc
cmp
jle
ins
aaa
jns
mov
xchg
(bad)
push
mov
lods
cmovno
js
cmc
jp
add
add
(bad)
xchg
ficom
stc
mov
in
ja
pop
sbb
pop
pop
imul
cmp
xor
push
sahf
dec
push
sub
xchg
mov
pop
in
pop
dec
mov
mov
cmps
mov
cmp
adc
rcl
ja
or
jg
(bad)
and
fs
xchg
push
popf
psubd
adc
inc
sub
and
mov
inc
push
add
push
cdq
in
bound
(bad)
cwde
push
xchg
jmp
add
push
add
rol
xor
movs
sub
push
and
inc
scas
inc
scas
xor
cmps
mov
xchg
dec
jmp
jo
push
mov
fs
cmp
add
push
fcmovne
and
ret
xchg
pop
addr16
(bad)
xor
adc
mov
test
or
push
sbb
lds
mov
jno
push
mov
mov
shr
xchg
loope
add
inc
pop
xchg
jl
pop
mov
repz
inc
pop
mov
pop
dec
(bad)
mov
call
jb
aas
fisub
xchg
xor
jmp
in
or
inc
test
aas
retf
shr
jg
fadd
test
dec
in
call
mov
jne
pop
imul
push
cmp
jno
inc
add
mov
in
push
jb
jg
test
sar
mov
push
cmp
fadd
retf
icebp
into
fxch
call
arpl
mov
adc
adc
test
push
mov
test
popf
add
jmp
pop
push
(bad)
in
rol
sbb
stos
adc
dec
and
or
xor
push
and
loopne
mov
mov
xchg
out
ret
adc
cmp
iret
(bad)
repnz
bound
hlt
sbb
scas
and
push
pop
sub
movs
push
adc
aam
lods
out
xchg
jb
adc
dec
pop
pop
in
mov
dec
fwait
dec
jmp
inc
ficomp
jb
scas
iret
push
xor
stc
or
mov
je
shl
sbb
test
mov
sbb
pop
push
in
xchg
je
sub
sub
cmp
inc
das
cwde
sbb
and
shl
scas
ins
jne
cmc
sub
sub
jmp
in
shl
in
add
adc
stos
mov
xchg
lds
mov
jp
mov
dec
adc
add
(bad)
and
sbb
mov
ins
mov
stos
lahf
out
pop
es
fstp
imul
into
(bad)
inc
mov
sub
xchg
or
sub
push
mov
sar
or
add
dec
leave
jmp
jmp
pop
adc
in
add
push
add
pop
jb
mov
das
jo
add
mov
in
neg
cli
call
mov
fidiv
inc
sub
mov
gs
mov
pop
sub
sub
mov
lds
rcl
inc
mov
(bad)
fnsave
sbb
xchg
sub
pop
add
sub
inc
shl
stos
in
cmp
dec
aam
mov
push
das
loopne
dec
mov
dec
inc
fld
sub
jnp
ins
aad
push
in
sub
lea
or
in
xor
sub
dec
test
push
leave
xchg
fwait
sbb
popf
cmp
jmp
into
cmp
jle
pop
leave
mov
sbb
in
mov
or
rcr
retf
push
not
push
add
arpl
test
add
push
retf
lock
in
in
dec
add
push
inc
sub
shl
dec
sub
aaa
ds
(bad)
hlt
pop
(bad)
test
sbb
add
mov
push
xchg
jg
test
(bad)
push
mov
and
mov
sbb
cmp
das
adc
xchg
repz
sub
(bad)
mov
mov
adc
sub
xchg
sub
(bad)
in
mov
mov
retf
adc
push
sub
je
adc
cmps
test
xor
pusha
add
mov
jge
clc
inc
add
das
add
cld
or
(bad)
xor
(bad)
ror
xchg
pop
jmp
and
or
and
mov
addr16
pop
fbstp
sub
mov
vorpd
or
cs
push
dec
pop
movs
mov
pop
shl
inc
cmp
xlat
test
mov
ror
sbb
xor
out
ss
push
retf
sar
mov
repnz
push
sti
imul
fwait
xchg
xlat
cld
repz
add
push
push
cli
xlat
int
jb
cmp
adc
dec
xchg
pop
push
je
div
mov
mov
or
mov
mov
outs
jno
pop
icebp
test
out
mov
inc
nop
and
call
outs
or
sbb
(bad)
aas
cmp
mov
mov
addr16
or
adc
dec
popf
xlat
in
push
pop
fstp
or
add
fsubr
ins
and
aas
sub
push
sub
cmps
inc
stos
add
add
popa
add
adc
inc
jb
sub
xchg
cmps
mov
xchg
mov
adc
popw
ror
add
ror
cld
cmp
xchg
add
fld
popa
icebp
adc
fcom
pop
lods
or
dec
fs
xchg
std
mov
in
je
cmp
push
movs
adc
add
aas
cwde
neg
ins
dec
cmp
inc
pop
rcr
inc
jmp
pop
pop
inc
push
rcl
jmp
xor
pop
popf
scas
xlat
dec
cmp
sub
xchg
jecxz
mov
push
mov
mov
inc
leave
push
retf
je
push
sti
and
in
dec
jnp
xor
lods
scas
sbb
mov
adc
mov
adc
out
dec
add
cmps
sti
inc
mov
xor
mov
cli
cwde
and
pop
(bad)
clc
mov
cdq
test
jle
inc
push
stos
or
sub
(bad)
xchg
mov
retf
add
rcr
inc
hlt
dec
inc
ja
enter
sbb
inc
or
sbb
and
imul
add
adc
iret
inc
cmp
push
push
mov
add
mov
dec
sub
inc
lods
xchg
pop
mov
aas
or
bound
movs
dec
push
enter
mov
jns
inc
mov
fadd
pop
inc
mov
shl
sub
fadd
and
call
cmp
mov
mov
sti
mov
imul
sbb
lea
imul
dec
icebp
or
adc
das
mov
in
cmp
jnp
loopne
stos
pop
je
bound
push
inc
aaa
cmp
lock
aaa
cli
cmp
jl
xlat
loop
(bad)
sub
scas
(bad)
cmc
cmp
mov
int3
mov
sbb
gs
sub
pushf
ds
iret
popa
mov
sub
push
xor
popf
int3
pmulhw
xchg
cmc
sub
lock
and
fist
lea
push
cmps
add
sbb
mov
dec
nop
ins
mov
ins
dec
nop
push
mov
jecxz
cli
dec
pop
cmp
or
mov
xchg
mov
outs
rol
xor
fistp
out
cmp
adc
and
test
pop
push
jns
inc
in
leave
or
in
pop
and
std
dec
stos
lods
push
data16
test
cmc
xor
push
add
imul
dec
test
test
inc
mov
cmp
sti
adc
ja
add
sbb
adc
adc
popf
pusha
and
mov
arpl
xlat
inc
mov
sub
ds
and
int3
pop
inc
mov
popf
bound
jle
dec
jl
cmp
pop
adc
mov
fcmovu
inc
pop
and
or
jno
jns
pop
jnp
sub
ficom
add
jne
cli
push
mov
mov
inc
stos
in
pop
fbld
rcr
scas
inc
jmp
jbe
imul
int3
std
xlat
cmp
sub
fs
xchg
imul
in
cwde
mov
add
adc
pop
push
mov
sbb
and
fucomp
push
in
pop
mov
or
mov
fs
test
jg
stos
sahf
jg
lea
jb
jecxz
fcomp
in
addr16
cdq
call
mov
ins
mov
leave
or
and
ret
call
push
iret
adc
mov
rol
cld
pop
ss
and
lods
retf
sub
cmp
out
int
add
test
adc
push
push
xchg
push
sub
push
dec
push
and
add
or
rcl
call
inc
mov
and
rcl
mov
xchg
mov
addr16
in
mov
ret
clc
jno
out
into
ss
mov
xchg
sub
imul
lods
nop
ins
jmp
pop
adc
cmps
rcl
and
inc
jg
popf
inc
div
rol
lds
leave
mov
and
push
adc
push
xor
cmp
mov
aaa
pop
xchg
mov
retf
mov
(bad)
(bad)
push
aad
jns
fld
in
mov
pop
pop
lods
push
shr
jmp
addr16
pop
or
push
ror
fucomi
arpl
jge
in
jl
dec
and
and
mov
aas
add
cmp
inc
fiadd
sbb
mov
inc
sub
push
js
(bad)
outs
adc
js
add
push
sahf
jbe
fcomi
xchg
(bad)
mov
mov
jl
enter
mov
xchg
jae
es
sbb
icebp
inc
ret
sub
aad
mov
icebp
xchg
aas
ret
pop
jg
fisub
mov
jge
cmps
pop
std
mov
sbb
adc
and
dec
inc
movs
sbb
call
inc
retf
inc
xchg
outs
or
add
and
lods
adc
fst
cdq
jb
dec
sub
xor
dec
test
pop
xchg
dec
(bad)
clc
inc
mov
setbe
jg
and
push
fsubr
sbb
adc
and
sub
das
test
enter
std
outs
jle
fs
retf
fdiv
adc
or
mov
lods
cmps
mov
push
fwait
mov
mov
cmp
loopne
out
icebp
jge
fld
jecxz
sub
inc
stos
hlt
sub
imul
inc
pop
retf
cmps
cmc
gs
aam
pop
sbb
inc
jbe
pop
jl
add
ins
jb
pop
mov
xchg
in
pop
lods
pop
mov
add
fbstp
aas
mov
sub
sub
fstp
push
mov
pop
dec
stc
push
ds
add
sub
or
or
stc
sti
mov
inc
inc
dec
add
mov
add
rcl
adc
or
inc
or
in
sar
mov
cmc
xchg
jnp
sub
cmp
stos
mov
mov
es
pop
push
jmp
cmp
jno
sti
in
jae
sbb
mov
cdq
or
out
arpl
cld
cmp
jmp
out
mov
jne
jge
dec
mov
icebp
mov
or
mov
dec
inc
inc
enter
add
adc
ds
retf
test
shl
idiv
movs
jle
dec
pop
dec
test
cmp
mov
xor
shr
rcl
adc
dec
add
sbb
adc
add
push
cli
int3
(bad)
mov
push
add
pop
test
push
scas
cwde
mov
fstp
(bad)
sti
dec
add
fisttp
jl
inc
or
sub
inc
jecxz
cmp
adc
(bad)
pop
mov
adc
test
movs
or
pop
push
mov
push
rep
repz
in
push
jmp
jb
cmp
mov
xchg
dec
cmp
pusha
rcl
scas
add
or
mov
fldcw
mov
fimul
in
mov
stos
pop
add
imul
mov
nop
cmc
das
in
jge
xchg
retf
paddsw
add
mov
jnp
movs
cmp
test
pop
jg
(bad)
cli
fstp
push
cli
pop
sbb
mov
xor
test
mul
mov
ror
inc
xchg
adc
mov
ror
inc
in
pop
hlt
cwde
fwait
(bad)
jmp
idiv
lods
(bad)
(bad)
mov
shl
fbstp
push
in
std
dec
out
jnp
cld
mov
out
shl
nop
repz
mov
outs
and
js
or
mov
jmp
std
pop
repnz
adc
or
add
add
and
adc
or
push
add
adc
or
call
and
aam
xchg
sbb
sti
push
jb
adc
mov
xchg
mov
push
add
jl
push
mov
mov
jmp
xor
sar
cdq
cmps
mov
cmp
mov
push
or
pusha
jmp
cli
cld
adc
and
xchg
mov
mov
outs
sub
cmc
in
mov
xchg
outs
sub
push
outs
mov
pop
pop
ret
iret
out
dec
jns
popf
(bad)
dec
loope
out
cmp
in
add
pop
or
ins
sbb
imul
pop
push
push
fisttp
pop
cmc
test
cmp
jp
arpl
stos
push
nop
jne
jmp
sti
xor
pop
(bad)
dec
(bad)
mov
mov
in
lods
das
jmp
nop
aad
push
retf
pop
sar
jge
shl
push
inc
and
dec
push
adc
mov
mov
adc
cs
mov
inc
inc
mov
movs
rcl
mov
and
push
cli
cwde
cmp
xchg
add
push
repz
inc
sbb
pop
scas
pusha
lds
dec
inc
mov
lods
and
cmp
sbb
test
fsub
adc
or
loop
cdq
jo
pop
mov
or
add
repnz
ins
dec
add
mov
aam
adc
das
cmc
pop
push
repnz
add
or
inc
lods
push
outs
inc
cmps
cmp
jo
or
xchg
sbb
psrlq
(bad)
stc
xchg
add
cmp
shl
neg
mov
neg
pop
add
mov
xchg
or
cmp
(bad)
in
icebp
or
pop
xchg
leave
xor
sbb
pop
lahf
in
push
jmp
mov
repnz
pop
dec
das
mov
pop
or
call
and
adc
mov
sti
pop
nop
imul
xor
icebp
pop
jmp
repnz
cmc
mov
adc
aad
jge
repnz
inc
in
pop
mov
stc
pop
shr
nop
cmc
jmp
test
jmp
pop
movs
mov
fild
push
mov
push
adc
leave
add
xor
out
inc
test
push
rol
mov
sub
push
or
cwde
cmp
adc
repnz
add
(bad)
hlt
and
shl
xchg
mov
rol
and
inc
nop
movs
add
inc
add
nop
xor
inc
and
adc
adc
or
and
inc
les
sbb
cdq
enter
dec
retf
movs
inc
cwde
mov
sbb
inc
popf
int3
pop
cmp
ins
and
std
adc
in
xor
sahf
adc
inc
and
jne
in
mov
mov
jns
mov
push
add
icebp
std
push
cli
fdiv
inc
or
adc
cli
pushf
jns
adc
clc
mov
inc
jb
adc
(bad)
(bad)
ja
in
or
fistp
jl
(bad)
ds
out
retf
push
in
push
stc
push
xchg
dec
push
enter
adc
sbb
mov
cmp
ret
push
mov
xor
add
test
mov
jl
dec
mov
iret
cmps
pop
xchg
mov
adc
(bad)
pop
cld
test
sub
aam
dec
ds
cmps
cmovo
lea
icebp
mov
je
lahf
xor
dec
test
mov
inc
fnsave
pop
fsub
sbb
fs
push
ds
dec
cmp
adc
out
dec
in
stos
dec
std
add
add
inc
sub
jo
push
and
pop
mov
and
test
mov
add
push
inc
cmp
and
adc
or
add
adc
add
fld
add
inc
sub
arpl
cmp
pop
and
into
xchg
or
push
adc
xor
inc
add
nop
add
jne
retf
mov
test
call
(bad)
das
out
(bad)
scas
push
inc
cmp
add
popf
mul
ret
nop
xlat
inc
call
push
data16
mov
shl
frstor
cld
mov
add
sub
sbb
add
dec
jle
shr
into
add
nop
outs
jo
pop
popa
or
mov
(bad)
enter
and
dec
push
jmp
scas
mov
sub
add
or
les
jge
aam
xor
add
mov
cdq
mov
mov
mov
add
mov
in
sahf
push
lock
pop
pop
mov
enter
and
mov
aad
adc
jnp
push
repnz
pop
daa
jp
aaa
rcr
inc
push
fbld
sti
cmps
cli
cmp
ret
xor
retf
add
xchg
shr
mov
push
add
push
ds
add
inc
jno
or
outs
dec
and
jmp
pop
addr16
retf
mov
inc
push
add
and
dec
xor
or
ins
cmp
(bad)
adc
or
push
repnz
adc
adc
cmps
cmp
fadd
je
js
pop
movs
call
push
push
into
shl
retf
fist
fwait
or
or
and
mov
cwde
push
adc
xor
cli
cmps
and
int
jo
or
xchg
push
cmp
dec
call
sub
out
sub
into
mov
js
or
jl
shl
test
jmp
dec
jl
cmp
inc
lahf
das
ds
cli
fdiv
ucomiss
dec
fisttp
jl
lock
inc
ret
mov
cmp
or
jbe
xchg
dec
(bad)
cmps
jle
xor
ds
xor
xlat
jmp
cmp
dec
push
pushf
cs
add
pop
rcr
je
jge
push
or
mov
fist
jle
(bad)
xchg
mov
je
xchg
lods
call
sub
sub
pop
jl
ins
push
xlat
inc
cmp
test
ins
dec
ret
fimul
push
ss
jg
mov
pop
xchg
retf
mov
push
pop
repnz
mov
retf
and
stos
aam
or
xchg
ins
and
xchg
(bad)
es
shl
fistp
mov
xor
pusha
or
pusha
ficom
push
lods
lods
ds
aam
das
add
mov
int
sub
pop
jge
sbb
(bad)
rol
jge
inc
mov
loope
int3
test
inc
inc
leave
mov
fild
movs
js
sub
fadd
sub
add
test
and
mov
xchg
je
nop
and
cmps
jl
(bad)
mov
movs
fst
in
mov
sub
retf
jno
jo
in
les
cmp
mov
repz
repz
cmp
sbb
hlt
dec
lahf
adc
daa
mov
xor
(bad)
sahf
push
cmps
iret
adc
sub
jecxz
cmp
push
(bad)
test
loopne
sub
scas
sub
adc
cmp
loop
aad
jo
rol
adc
jmp
je
or
jl
mov
loopne
push
in
jb
cmc
jb
imul
arpl
mov
outs
in
and
and
push
outs
xor
add
aaa
cli
pop
leave
aaa
je
sub
or
arpl
fcmovnbe
fidiv
mov
xor
jmp
jnp
adc
jne
lods
cmc
ror
in
arpl
xlat
cmp
push
inc
mov
enter
mul
js
add
pop
inc
mov
pusha
ror
and
scas
mov
push
pop
mov
or
mov
sbb
add
pop
shl
mov
and
and
and
and
(bad)
fwait
pushf
je
pop
inc
ds
jo
xchg
xchg
test
cmp
ret
jmp
jb
ret
jmp
push
aaa
in
jge
pop
dec
cmp
shl
loope
pop
test
mov
add
jecxz
add
inc
sbb
test
aas
fnstcw
sub
arpl
loope
jne
in
add
in
iret
or
xchg
lock
adc
std
sub
clc
dec
or
jl
lock
into
ja
adc
sti
push
or
daa
pop
and
pop
sahf
retf
inc
cs
jb
jge
inc
adc
pop
ficomp
cmp
jnp
ss
fwait
prefetch
repz
fcmovbe
mov
fsubrp
cmp
and
xchg
dec
fst
pop
mov
mov
push
icebp
movs
mov
xchg
sahf
dec
jne
mov
fistp
loop
push
in
pop
retf
stc
ins
imul
xor
ins
dec
pop
cmc
mov
cmp
mov
out
mov
scas
jge
mov
adc
xchg
xchg
xor
dec
sub
xor
(bad)
repnz
xlat
fst
inc
mov
enter
cmps
add
mov
inc
add
add
cmp
mov
xchg
sub
ja
pop
add
jecxz
xchg
or
sub
add
or
mul
es
ds
hlt
xor
movups
repnz
mov
in
jl
mov
push
push
push
push
ins
inc
retf
add
mov
mov
(bad)
aam
sub
add
test
std
inc
aas
ins
sub
sbb
inc
into
xchg
retf
mov
xor
loope
inc
scas
pop
xchg
pop
in
neg
xor
jmp
or
cmp
int3
jb
jnp
in
out
or
(bad)
fisubr
das
jo
pop
arpl
and
imul
xchg
sbb
stc
cmp
jp
sub
js
push
jmp
or
sbb
push
loopne
or
pop
outs
sbb
repz
inc
scas
out
fild
dec
mov
scas
jg
dec
faddp
mov
mov
mov
fcmovnbe
xor
sub
call
call
aam
in
jmp
mov
xchg
mov
enter
xor
mov
test
cli
mov
and
mov
leave
and
sub
mov
jae
sar
pop
or
test
xor
and
mov
bsf
dec
cld
add
mov
pusha
fidiv
sbb
jle
and
push
repnz
add
jmp
mov
mov
fistp
fistp
mov
xchg
dec
add
and
popf
pop
jge
dec
in
push
sbb
retf
inc
retf
fnsave
(bad)
fmul
pop
add
jp
add
jl
sub
and
fs
shl
popf
cmp
mov
(bad)
iret
add
cmp
dec
lahf
pop
dec
or
xor
ret
jl
dec
mov
jecxz
adc
mov
or
(bad)
mov
mov
bound
movs
imul
sar
xchg
imul
push
loope
push
pop
mov
push
das
xor
test
sub
ins
imul
mov
jns
mov
jne
push
dec
jmp
push
ins
add
test
xchg
jl
pop
in
xchg
adc
xor
daa
xchg
ds
fwait
(bad)
outs
out
xchg
jae
cmp
and
pop
aad
in
fisubr
enter
add
push
fs
adc
sti
mov
push
mov
mov
popf
in
mov
add
mov
and
loope
mov
fldenv
data16
adc
mov
jae
lods
dec
and
push
cmps
rcr
mov
and
add
add
push
and
and
repnz
(bad)
push
je
pop
and
cmp
xchg
std
add
add
and
ins
or
ret
dec
push
(bad)
in
jl
push
(bad)
test
jne
out
jl
hlt
int3
mov
and
xchg
cmp
mov
dec
and
das
(bad)
push
mov
xchg
repz
push
pushf
addr16
cmp
dec
out
jg
scas
hlt
jns
push
adc
out
pop
xor
or
test
xlat
popf
mov
jecxz
add
fmul
and
pop
shl
addr16
test
into
test
leave
adc
rol
inc
mov
or
dec
jne
xor
fs
adc
mov
and
xlat
cld
pop
push
retf
xchg
jl
sub
clc
adc
xchg
pop
(bad)
fwait
mov
jnp
fwait
scas
sbb
mov
lds
pop
sub
(bad)
mov
fwait
gs
or
dec
mov
imul
out
retf
jge
dec
jnp
cli
pop
jmp
lahf
ins
mov
in
sbb
push
sub
fild
fs
mov
xor
dec
sub
dec
adc
cpuid
add
pop
inc
mov
mov
shl
cld
sbb
mov
adc
cmps
and
sbb
adc
(bad)
aad
fsubr
and
aas
lahf
scas
call
inc
mov
fdiv
and
sar
clc
(bad)
dec
(bad)
mov
mov
fdivr
jnp
inc
mov
or
mov
in
jl
repz
(bad)
inc
adc
sar
inc
movs
popf
mov
jmp
pop
sti
das
cmp
ins
sar
in
jnp
jae
fsub
xor
lahf
lea
les
inc
lods
clc
cmp
and
jg
ds
push
cld
clc
mov
cwde
pop
ret
test
jle
rcr
jle
push
dec
mov
and
leave
pop
add
test
fiadd
and
fnstsw
cmps
mov
das
je
push
aaa
pop
enter
push
sub
leave
cmp
shl
mov
aad
icebp
pop
xchg
lods
add
mov
jmp
inc
outs
shr
sub
lds
adc
mov
dec
in
or
sbb
popa
push
call
fld
jns
push
lds
ret
jmp
fdiv
retf
ins
cmp
push
shl
fwait
ja
and
in
sbb
fst
ins
sub
hlt
icebp
out
(bad)
rol
nop
and
test
and
inc
ret
or
(bad)
and
pop
and
fist
loope
xchg
push
ror
add
pop
or
sti
adc
and
or
pop
icebp
pop
pop
nop
xchg
retf
mov
scas
jg
adc
lahf
das
adc
xchg
out
int3
sahf
push
neg
jmp
mov
pop
xlat
mov
out
pop
jle
mov
jmp
fistp
out
repnz
mov
movs
mov
movs
jb
sar
fwait
push
loopne
cmp
sbb
into
pop
clc
or
(bad)
(bad)
adc
cli
mov
or
mov
or
xchg
sub
jmp
push
adc
jle
add
inc
fist
movs
mov
cdq
scas
mov
popa
outs
call
es
in
xchg
lods
nop
mov
sahf
(bad)
cmps
imul
scas
imul
sub
sub
gs
enter
pop
(bad)
push
in
cmp
lock
mov
push
sbb
add
lahf
inc
das
jle
les
xchg
scas
test
inc
lahf
je
mov
gs
and
push
aas
fdiv
xor
scas
ror
xor
out
fst
adc
in
mov
icebp
fisttp
in
ror
sub
iret
neg
enter
repnz
mov
sub
and
mov
or
mov
pop
stc
cmp
inc
sahf
dec
pop
test
dec
pop
add
inc
mov
dec
mov
outs
or
cmp
add
push
push
add
outs
push
mov
ret
mov
clc
pxor
js
shr
dec
movs
(bad)
fst
or
cmc
scas
jl
push
sahf
jae
(bad)
pop
push
cld
mov
push
dec
je
scas
xor
scas
jne
mov
pop
mov
push
adc
sbb
add
mov
sub
xor
mov
and
repnz
inc
pop
jmp
adc
into
das
cmps
in
ja
jae
shr
push
nop
jmp
ret
(bad)
mov
add
sub
dec
ret
inc
xchg
cdq
push
adc
jge
adc
lea
clc
(bad)
lock
mov
ds
mov
dec
inc
fldenv
pop
push
pop
xchg
cmp
shl
inc
add
ins
pop
inc
cli
and
daa
repnz
sub
fdivp
xchg
jle
push
lods
sub
je
stc
scas
push
jle
(bad)
mov
sbb
mov
sub
adc
xchg
cmp
retf
pop
and
adc
fbld
and
je
push
adc
mov
mov
iret
adc
and
jg
pop
add
cld
jg
xor
data16
daa
jns
out
mov
xchg
jle
dec
repz
mov
lock
cmp
push
rcl
jb
and
popa
(bad)
ds
outs
jmp
in
mov
mov
xlat
or
push
mov
loopne
in
cli
cmps
rol
js
and
ins
imul
mov
or
and
mov
mov
xor
dec
pop
xchg
or
in
loopne
nop
daa
and
mov
cdq
push
cmp
and
imul
and
inc
pop
inc
adc
sub
shl
scas
clc
mov
cmp
cmp
out
enter
int
sbb
add
jle
mov
mov
mov
jbe
dec
jmp
mov
loopne
aam
lods
das
ja
pop
cdq
fidivr
fsubr
sbb
sbb
and
ja
icebp
xchg
aas
imul
push
push
nop
loope
add
add
ret
jg
out
dec
mov
scas
test
fiadd
shr
sub
fdivr
test
dec
fcom
jb
cdq
into
aas
data16
xor
adc
jge
lock
xchg
scas
mov
cdq
scas
inc
fist
inc
or
test
rol
(bad)
ja
sub
fcom
adc
xor
add
daa
mov
out
inc
pop
add
mov
and
mov
lods
ret
cli
dec
pop
out
cmps
mov
add
lock
mov
adc
scas
ins
lock
inc
repnz
sub
(bad)
retf
nop
outs
inc
in
(bad)
sahf
in
push
fisub
ret
icebp
mov
popa
and
push
jle
in
adc
sbb
or
call
xchg
pop
dec
js
jmp
ret
pop
or
cmp
push
jle
cld
cwde
retf
mov
cmp
dec
(bad)
and
aas
and
jecxz
out
dec
out
push
xchg
iret
dec
shl
add
adc
or
xor
dec
ins
push
cmp
jmp
fild
inc
sar
loopne
addr16
mov
sti
adc
xchg
jecxz
ror
jg
ds
cmp
dec
inc
pop
scas
and
mov
sbb
pop
imul
push
in
mov
cmps
ins
pop
pop
inc
hlt
and
push
(bad)
call
inc
cmps
and
mov
add
and
push
outs
sbb
dec
sahf
inc
push
shl
or
or
mov
jge
jne
cmp
sbb
dec
movsx
push
mov
mov
clc
rcr
cmp
inc
popa
rcl
sbb
(bad)
xchg
mov
cmp
xchg
cmp
sahf
xlat
aas
jecxz
jns
pop
xchg
cmp
popa
and
xchg
lds
test
out
mov
repnz
js
ror
rcr
or
dec
add
int3
sbb
bound
into
std
inc
sub
and
lock
add
cmp
dec
out
out
xchg
fisttp
lods
cmp
jmp
shl
fimul
test
stc
pop
pop
lock
push
add
mov
shr
jno
outs
jns
pop
bnd
outs
mov
repnz
mov
icebp
and
pop
(bad)
mov
cmp
cmc
dec
outs
jmp
fwait
lahf
idiv
jg
out
test
fst
mov
jmp
out
or
ja
fiadd
jmp
or
iret
pop
adc
jp
adc
in
add
je
sub
sahf
jg
fcomp
dec
mov
pop
dec
lahf
in
dec
aaa
aas
in
push
cmp
es
dec
shl
arpl
mov
pop
nop
sub
ror
clc
dec
dec
mov
int
dec
mov
xchg
ds
sub
lahf
dec
aas
imul
mov
pop
mov
inc
(bad)
stos
xor
push
cmps
and
mov
ret
dec
push
add
push
test
xor
adc
outs
sub
pandn
mov
inc
in
test
mov
jl
movs
fild
jno
pop
test
ret
jmp
mul
cmps
push
xchg
nop
mov
sbb
mov
push
movs
mov
repnz
stc
mov
and
mov
push
retf
push
stos
std
inc
mov
into
loop
ror
add
pushf
xor
fwait
dec
aam
out
push
call
test
shl
or
icebp
jecxz
sbb
mov
hlt
ja
retf
sub
mov
lea
(bad)
xor
push
fmul
fldcw
in
mov
add
adc
adc
imul
or
inc
mov
push
movs
and
stc
sub
aaa
push
dec
repz
aad
adc
add
cld
ror
ficomp
(bad)
stc
sahf
sub
and
popf
(bad)
repnz
jnp
lods
icebp
sar
mov
mov
pop
adc
pop
stc
iret
outs
std
dec
push
or
movs
mov
add
daa
ficom
mov
jmp
psubsb
adc
push
enter
pop
inc
jne
and
add
mov
mov
mov
cdq
mov
xchg
dec
and
add
jbe
in
out
inc
fdivr
pop
ja
add
push
(bad)
int
dec
lock
jg
jne
sahf
inc
lahf
jecxz
mov
xor
fdivp
out
jecxz
lahf
shl
pop
out
mul
or
jg
mov
xor
nop
fsub
cld
adc
in
jns
fstp
into
(bad)
fcomp
out
adc
(bad)
fiadd
sbb
jge
shl
xchg
pop
addr16
scas
call
mov
mov
jbe
pop
xchg
cmp
mov
aam
pop
push
(bad)
push
ret
jl
rol
mov
fnstenv
jo
movs
push
addr16
jns
test
and
pusha
push
xchg
jecxz
push
outs
cmp
mov
adc
stc
std
les
arpl
pop
and
mov
out
add
mov
lods
adc
cmp
je
fld
outs
out
lock
pop
inc
shl
sbb
lahf
aas
and
in
jecxz
mov
dec
dec
enter
add
pop
jno
push
jnp
jmp
cld
mov
jle
xchg
jl
cmp
daa
in
les
fisub
loopne
test
imul
nop
or
push
sti
add
pop
cmp
bnd
adc
outs
cli
adc
leave
or
dec
sub
cmp
xor
jmp
sub
xchg
bound
adc
jmp
adc
fistp
jle
into
mov
in
iret
mov
dec
popf
cmp
dec
mov
and
sub
push
hlt
pop
cs
(bad)
xor
shl
retf
sti
mov
iret
mov
aas
adc
into
jg
dec
push
sti
loop
xchg
(bad)
pop
loope
mov
xchg
in
jne
ror
add
or
ret
jecxz
rcr
jg
sti
and
inc
jge
int3
cmp
mov
lods
add
dec
fcomp
add
loop
mov
ficomp
(bad)
pop
das
mov
daa
(bad)
inc
mov
jle
addr16
pop
jle
cdq
jnp
xchg
jno
adc
out
pop
adc
add
fisttp
dec
adc
data16
loope
mov
fld
and
dec
cli
cmp
cmp
mov
cld
and
cmc
ss
jp
aas
and
lods
jmp
cmc
aas
cmps
idiv
cli
or
mov
pop
jo
fdivr
mov
out
scas
add
inc
out
div
xlat
cmp
ret
fistp
cmc
fld
push
cmc
das
or
inc
mov
inc
xchg
mov
outs
xchg
ja
outs
ficomp
jbe
loop
shl
out
stc
bound
rcr
add
xchg
pop
rcl
scas
leave
out
pop
dec
and
jb
sbb
and
push
(bad)
jg
and
icebp
inc
aam
mov
clc
jecxz
xchg
loopne
dec
cmc
sub
or
mov
mov
repnz
rol
mov
pmuludq
xor
out
jecxz
dec
jmp
js
sub
or
push
fwait
daa
nop
in
out
xchg
sub
repnz
fisttp
mov
mov
jbe
mov
xchg
mov
xchg
leave
push
push
mov
out
ds
and
cmc
xor
fist
mov
test
dec
sar
je
rol
pop
mov
repz
xchg
jp
mov
lods
mov
(bad)
jl
outs
fwait
scas
mov
push
cmc
pop
lods
pop
shl
leave
adc
mov
mov
adc
sbb
mov
jmp
clc
cmp
std
(bad)
out
sar
sbb
add
or
fstp
fist
jbe
sbb
(bad)
pop
jb
mov
aas
adc
and
fiadd
pop
lahf
jmp
cmp
dec
test
jg
xor
fsubr
in
ja
cmps
sub
out
jg
cdq
nop
(bad)
mov
loope
test
lahf
movs
inc
lahf
mov
cmp
jb
cmp
xchg
mov
and
test
cmp
inc
mov
and
xchg
cmp
mov
das
mov
add
adc
mov
ja
mov
inc
fdivr
adc
test
pop
neg
jnp
and
(bad)
cld
pop
jle
sbb
inc
jno
in
stos
repz
cmp
mov
jno
(bad)
sub
popa
xchg
dec
fwait
pop
hlt
inc
push
dec
aas
clc
jb
push
ins
clc
add
lock
fldz
(bad)
pop
fwait
mov
xlat
adc
jbe
pop
out
in
mul
mov
xor
dec
out
rcr
sahf
jo
dec
jmp
into
in
fstp
out
jno
cli
loope
sub
pusha
jmp
add
fnstsw
jg
jg
loopne
neg
repz
fwait
jle
loope
xchg
jge
inc
sbb
xchg
xchg
pop
xor
inc
xchg
mov
mov
rol
aam
adc
or
mov
pop
push
mov
repz
sbb
cld
add
xchg
cmp
push
pop
dec
leave
sub
pop
cmp
jmp
cli
cli
pop
mov
popf
lahf
adc
(bad)
(bad)
pop
test
call
aaa
in
leave
mov
adc
jecxz
pusha
sbb
(bad)
movs
adc
add
hlt
adc
sbb
je
jl
mov
jo
lods
(bad)
lods
inc
sar
ds
mov
xchg
fbld
pop
into
jae
dec
cmps
or
(bad)
(bad)
xor
mov
push
and
sub
pop
into
daa
cmps
jnp
inc
std
cwde
xchg
shl
mov
mov
jbe
xchg
jl
lahf
push
int3
dec
imul
mov
dec
icebp
js
adc
jecxz
push
iret
push
adc
loopne
inc
fiadd
xor
mov
icebp
or
add
rcl
in
cmp
adc
push
test
xchg
pop
inc
or
inc
sub
mov
ja
xor
data16
(bad)
cld
iret
repz
xor
(bad)
aaa
mov
cmps
aas
out
cmp
stc
pop
stos
retf
std
or
sbb
retf
jb
fisubr
jb
sub
call
jge
je
mov
xor
cli
outs
lock
sub
aas
or
and
push
jp
sar
push
mov
ins
mov
xor
scas
cmp
pop
sbb
outs
shr
xchg
mov
dec
pop
scas
fisttp
outs
imul
idiv
mov
dec
mov
cld
arpl
sbb
add
loopne
mov
int
in
scas
mov
add
outs
jmp
jb
cmp
int
movs
int
outs
out
je
sti
call
xchg
ror
xchg
ins
loopne
leave
ds
in
push
add
mov
mov
call
jbe
out
mov
jmp
lods
push
cmp
jb
xchg
jmp
sbb
sub
repnz
popa
jne
ss
call
lods
arpl
dec
inc
aas
jns
mov
rcr
sti
push
xlat
fisttp
mov
and
mov
dec
xor
mov
ins
adc
(bad)
jmp
data16
jo
popw
jns
gs
mov
in
push
ja
push
test
and
mov
(bad)
sub
jnp
mov
out
xor
mov
lahf
call
gs
dec
push
(bad)
and
movs
outs
dec
mov
pop
loop
in
or
pop
push
push
jo
mov
cld
repnz
in
call
jp
inc
sti
lahf
or
mov
das
xchg
aaa
adc
pop
jmp
push
scas
push
mov
mov
clc
in
dec
xchg
iret
jp
leave
mov
adc
rol
leave
fistp
mov
outs
mov
cmc
pop
sub
dec
push
dec
enter
clc
test
ror
add
mov
pop
ins
outs
in
gs
inc
push
jecxz
and
and
leave
mov
push
(bad)
hlt
mov
jae
nop
ins
retf
adc
mov
cmc
inc
(bad)
js
inc
gs
cld
cs
int3
cli
jle
add
sub
xchg
das
or
stos
out
xchg
mov
adc
(bad)
mov
mov
mov
mov
in
adc
jmp
imul
(bad)
jo
pop
mov
xchg
ret
call
shl
or
sub
ins
or
mov
lds
add
or
xchg
ds
jb
and
adc
or
jbe
fs
ds
xchg
jmp
dec
sub
fdiv
adc
cmc
in
and
and
sub
mov
adc
jno
mov
mul
fs
dec
sbb
inc
dec
call
outs
dec
mov
fs
retf
fldln2
jbe
in
xchg
fs
les
sbb
fcmovb
pop
fist
pop
outs
loop
inc
nop
(bad)
scas
jg
sbb
add
retf
dec
outs
loop
idiv
push
jmp
dec
or
arpl
cmps
stos
or
push
div
mov
pop
shr
adc
sub
lahf
mul
lahf
jne
ss
(bad)
pushf
in
inc
dec
clc
mov
sahf
(bad)
jle
in
push
dec
sti
outs
inc
aas
sbb
cdq
call
dec
mov
(bad)
fdiv
(bad)
in
push
test
and
lock
scas
mov
pop
mul
das
mov
retf
add
dec
jmp
mov
adc
xor
scas
lods
and
setl
clc
scas
es
mov
test
movs
mov
mov
ds
outs
mov
sbb
movs
mov
mov
add
sbb
adc
dec
ss
dec
test
iret
adc
lds
inc
mov
int
or
jmp
cmp
aas
test
mov
pushf
inc
jns
mov
das
pop
xor
int
dec
outs
jg
add
ss
push
icebp
in
pop
jmp
push
retf
ss
stos
aam
movs
mov
or
fst
ins
mul
and
ret
xchg
pusha
cmp
push
mov
xlat
aas
(bad)
cmps
or
arpl
ss
shr
xchg
inc
mov
jnp
stc
push
fnstsw
inc
push
mov
adc
aam
xor
add
js
jecxz
cmps
mov
push
mov
out
lds
aaa
push
dec
loopne
nop
outs
sahf
call
out
aad
fcmovb
pop
outs
aam
jo
das
fimul
and
jne
or
or
dec
out
inc
jg
xchg
sub
push
icebp
iret
add
inc
jge
push
frstor
xchg
out
jae
iret
jl
ins
push
pop
fcom
in
ds
jbe
lods
mov
or
mov
cs
pop
inc
fild
aad
outs
push
or
dec
je
ds
ja
pop
inc
push
movsx
push
ret
fisubr
out
(bad)
push
outs
repz
dec
cmps
call
fwait
pushf
loopne
std
xor
mov
ins
fdivr
jbe
les
jnp
out
push
mov
out
xlat
pop
outs
dec
cli
loope
push
sub
lods
xor
in
ja
in
imul
pop
popf
jo
ins
pop
rcr
adc
mul
mov
stos
or
and
leave
jb
dec
leave
push
and
(bad)
and
push
pop
in
retf
pusha
and
push
sub
loopne
lods
add
std
and
xor
repnz
scas
mov
loopne
sbb
xor
aaa
dec
dec
ds
fs
pushf
ret
xor
test
dec
dec
(bad)
lahf
out
in
neg
punpcklbw
fwait
mov
shl
inc
jmp
pop
outs
aam
ss
mov
ss
lea
mul
xlat
sbb
call
fs
jnp
gs
imul
shl
dec
addr16
push
mov
xlat
mov
mov
sbb
xchg
das
xchg
xchg
xchg
jo
(bad)
add
cwde
mov
mov
cli
inc
pop
aad
jmp
std
cmp
add
sub
(bad)
cli
cli
push
out
jp
jnp
jmp
mov
pop
mov
cmc
jbe
inc
xchg
mov
jmp
ror
retf
lea
pop
ss
push
inc
les
inc
loop
add
(bad)
mov
hlt
bnd
xor
sub
ins
jne
fcomi
movs
jmp
xchg
jg
inc
jge
push
xchg
mov
and
daa
pop
mov
sti
loope
adc
and
jp
xchg
sbb
rcr
jno
(bad)
fcmovbe
push
das
adc
sub
out
inc
mov
and
fidivr
pop
xchg
mov
loope
pop
inc
cli
mov
aas
jge
aad
adc
cs
pushf
pop
jg
xchg
pop
outs
loop
inc
(bad)
iret
jbe
sub
cmp
ffreep
cmp
jnp
lds
jmp
inc
dec
ss
fucomi
cld
aas
test
neg
sahf
out
addr16
fnstsw
lea
ss
pop
dec
ja
das
sub
pop
xor
or
(bad)
jle
lods
jle
fcom
ss
test
arpl
adc
xchg
movs
dec
cmps
test
add
mov
jmp
sub
and
xor
xchg
and
sbb
or
xchg
call
add
pop
mov
dec
(bad)
sbb
xchg
stos
ror
aaa
inc
rcr
jp
dec
lods
inc
push
(bad)
fisttp
mov
jge
in
mov
test
and
std
or
div
call
and
pop
sahf
lahf
gs
movs
fs
std
and
mov
and
jp
aam
cmps
jp
jmp
ss
and
lahf
test
je
and
fs
jno
adc
(bad)
ds
adc
ss
sub
imul
xchg
sbb
aas
stc
mov
inc
mov
sbb
jnp
lods
sub
scas
jnp
dec
cwde
dec
mov
lds
mov
and
adc
(bad)
mov
jo
push
je
mov
bswap
arpl
stc
mov
fmulp
sub
mov
fisttp
jg
es
cmp
lods
scas
mov
push
and
lock
inc
adc
dec
iret
jb
ds
pop
and
ins
inc
cmp
inc
jmp
fisttp
mov
test
jbe
cmp
sub
fs
fucomi
punpcklwd
fistp
in
ja
cmc
not
xor
mov
scas
xor
imul
cld
jns
mov
retf
aad
adc
inc
stos
pop
pushf
imul
jge
scas
addr16
out
movs
xlat
fisub
les
add
clc
leave
pop
pop
push
jg
das
jl
sub
pop
cmps
add
(bad)
ficom
fsubr
pop
dec
mov
ins
sub
pop
clc
jb
mov
mov
lahf
push
xchg
fld
mov
mov
lea
or
fist
in
cld
cmp
lods
jno
in
inc
aam
fidiv
sar
xchg
in
pop
jecxz
sub
sub
pop
xchg
cmps
sbb
inc
retf
sbb
fnstenv
clc
or
sbb
test
add
retf
jns
mov
sub
dec
cmp
(bad)
cmc
jbe
jns
xor
or
mov
dec
inc
jp
lea
daa
(bad)
push
push
(bad)
sahf
scas
(bad)
xor
dec
mov
sbb
sahf
outs
mov
and
call
mov
jae
cmp
push
scas
aaa
mov
dec
mov
mov
das
or
add
jg
adc
cmc
cmc
ins
or
or
aad
sbb
fidivr
arpl
retf
in
jl
data16
loopne
add
sbb
sub
mov
xchg
bound
xor
pop
adc
mov
call
jg
sahf
ins
pop
hlt
pushf
or
loop
cmps
jge
jo
scas
ror
dec
(bad)
ret
and
pusha
ins
xchg
(bad)
mov
jl
rcr
loope
fsubp
cmp
nop
out
js
pop
test
jne
cmp
call
fs
fbld
in
sahf
mov
stos
push
js
jae
arpl
add
adc
(bad)
fnsave
repz
cwde
movs
lea
loop
inc
push
xchg
dec
dec
in
iret
xchg
ror
jo
sar
ja
mov
adc
mov
clc
aad
aaa
out
cmp
jno
icebp
sub
enter
mov
pop
push
jg
jno
jbe
xchg
ret
cmc
dec
loopne
push
fsub
sbb
push
fistp
ds
ds
aas
lds
jg
js
cld
cmp
test
(bad)
call
pop
cmp
lods
fs
adc
nop
fiadd
jg
jecxz
addr16
jb
iret
iret
cli
and
ins
inc
imul
inc
sbb
push
call
mov
in
fmul
mov
pushf
pop
jno
dec
into
pop
shr
les
mov
dec
(bad)
pop
leave
xchg
(bad)
hlt
int3
pop
adc
sub
aaa
push
mov
pop
pmaxub
jo
leave
popf
push
repnz
loopne
fst
ficomp
nop
mov
repnz
nop
outs
fcmovb
arpl
sar
hlt
xchg
push
inc
repnz
mov
neg
push
jb
sbb
retf
dec
cmp
scas
or
rcr
ret
int3
mov
fadd
lea
adc
xchg
jle
out
inc
(bad)
nop
mov
shl
jno
jecxz
clc
inc
iret
xchg
jmp
stos
outs
or
dec
inc
daa
fnop
mov
jecxz
nop
imul
and
fwait
mul
sbb
(bad)
lock
in
test
sbb
jmp
icebp
popf
je
pop
rcr
rol
inc
(bad)
(bad)
jmp
rcr
mov
pop
inc
cmp
test
stos
lea
loop
daa
mov
scas
pushf
repz
pushf
xchg
fistp
mov
out
sbb
xchg
in
test
repnz
xchg
ins
loopne
and
ja
loopne
popf
retf
jb
mov
addr16
std
push
out
dec
sbb
out
inc
(bad)
pop
sbb
into
sbb
push
mov
loop
jae
add
and
fucomi
and
test
sub
cmp
xchg
out
test
sub
mov
jo
mov
in
pop
dec
mov
jmp
push
jmp
jmp
outs
mov
and
fcom
ins
mov
bound
lods
dec
jge
mov
test
pop
mov
jecxz
pushf
cmp
leave
out
jle
mov
xchg
mov
stos
dec
cld
xor
neg
jge
inc
push
sub
mov
push
jmp
jnp
fiadd
cmps
xor
(bad)
and
ret
clc
dec
(bad)
loop
adc
out
jle
(bad)
repz
sar
inc
adc
pop
(bad)
std
inc
out
dec
fsub
mov
mov
popa
xchg
or
fistp
push
sbb
pop
or
int
sbb
push
pusha
mov
in
xchg
inc
mov
scas
pop
dec
movs
mov
inc
push
push
and
lahf
sbb
pop
pop
lds
in
inc
stos
adc
outs
jns
push
inc
jle
test
int
inc
das
(bad)
stc
pop
add
cs
out
jp
jne
sbb
in
cmps
pusha
mov
fbld
lock
cdq
and
mov
das
jle
cld
aaa
aad
aas
mov
inc
mov
hlt
dec
fidiv
ss
movq
mov
push
jecxz
lock
lock
je
pop
mov
cmp
mov
mov
jle
ins
jmp
cmp
daa
call
push
mov
(bad)
loop
in
mov
pop
mov
xor
popf
fist
bound
lds
ins
js
jle
cmp
lea
cli
pop
jno
jbe
(bad)
mov
pop
jge
push
pushf
xchg
popf
xchg
sahf
cmp
push
fld
shr
adc
out
push
std
in
out
movs
xlat
sub
iret
cs
adc
jmp
xor
out
ret
into
cmps
push
cmp
rol
fs
out
jae
pop
leave
push
adc
ins
cmp
jl
repnz
out
jno
dec
or
push
inc
std
cmp
xchg
sbb
xchg
in
xchg
(bad)
xchg
xor
xor
xchg
mov
jmp
sub
mov
stos
jo
push
inc
arpl
jns
fnstsw
(bad)
adc
xchg
jb
mov
xchg
push
clc
popa
pop
fld
push
pop
icebp
jle
out
push
xchg
jge
retf
ds
loop
out
xchg
cmp
(bad)
leave
push
jl
and
sti
add
push
(bad)
aaa
mov
cmps
imul
test
mov
outs
jl
xchg
test
pushf
jb
sub
add
pop
leave
push
xchg
lds
(bad)
jmp
stos
sbb
cmp
stos
xor
int
rol
aam
dec
push
(bad)
fwait
add
shl
sub
mov
test
pop
mov
fist
in
ss
ins
fsubr
sub
repz
and
xlat
sub
and
imul
mov
sbb
xchg
ins
mov
mov
pushf
xchg
push
in
or
int3
imul
or
jae
loop
mov
mov
scas
jmp
jp
test
xlat
or
and
jo
test
stc
test
push
loope
jne
and
pop
test
dec
lock
pop
dec
lods
xor
push
xchg
pop
movs
movs
mov
outs
fmul
aas
adc
mov
sbb
jbe
jg
movs
cmp
int3
repz
mov
jmp
inc
cmp
pop
adc
(bad)
dec
mov
jl
imul
add
mov
sub
mov
fld
lds
clc
les
outs
sbb
push
dec
lahf
jge
mov
or
push
jns
xchg
repz
outs
les
es
dec
mov
or
fisttp
nop
push
sahf
aaa
sar
mov
mov
mov
repnz
push
mov
and
cmp
or
addr16
cdq
xor
cmps
pop
add
inc
jns
stc
xchg
rcl
pop
pop
loope
test
fdivr
aam
mov
movs
mov
inc
stc
cdq
popf
dec
or
adc
mov
pop
add
arpl
lods
jnp
sti
jecxz
jns
jnp
in
cmp
jge
jmp
std
(bad)
scas
push
xchg
movs
add
lahf
xchg
cmc
outs
jl
out
cs
xor
dec
mov
movs
sub
xchg
xchg
sub
inc
pop
push
sbb
jecxz
cli
xor
xchg
mov
clc
sbb
add
ror
adc
cwde
js
sub
les
cmp
fistp
call
cmc
sub
add
xchg
jno
xor
dec
mov
jb
inc
jg
xchg
leave
pop
(bad)
xor
scas
jmp
and
hlt
fisttp
fdiv
imul
push
sub
xlat
xchg
lods
(bad)
mov
mov
scas
sbb
outs
fcom
pushf
adc
data16
leave
mov
ret
fs
stc
push
gs
or
es
pop
(bad)
xchg
sbb
arpl
icebp
xchg
mov
sub
sub
and
das
mov
jns
inc
push
ret
fisubr
(bad)
and
adc
stos
mov
pmaxsw
or
sbb
xlat
iret
jge
dec
ret
into
jge
int3
inc
xor
push
fidiv
adc
movs
add
or
leave
scas
icebp
mov
ror
mov
leave
lods
cmp
jle
hlt
gs
dec
dec
test
(bad)
sbb
movs
sbb
out
mov
xchg
adc
mov
mov
cmp
mov
dec
std
or
or
jmp
xchg
scas
dec
dec
jbe
jge
push
mov
lea
ins
icebp
sbb
push
fbstp
stc
pop
push
jg
loopne
in
xchg
push
aas
and
(bad)
cld
lds
aad
faddp
pop
inc
mov
ror
pop
push
lahf
out
pop
pop
cmp
dec
push
dec
data16
(bad)
pop
ret
mov
cdq
mov
js
push
add
les
daa
mov
cli
fmul
scas
mov
xor
imul
push
jb
(bad)
pop
pushf
cs
or
lea
add
push
pop
jne
icebp
loopne
xchg
loopne
push
xchg
mov
xor
pop
cdq
cmp
xchg
in
mov
dec
pop
sti
xchg
in
mov
jno
sbb
push
repz
mov
retf
gs
fiadd
repnz
mov
test
jno
push
(bad)
repz
sbb
(bad)
(bad)
loop
xchg
xchg
xchg
lods
sub
add
les
cmp
sbb
das
or
int
test
and
fcomi
dec
push
div
pop
mov
clc
js
and
loope
sbb
jns
vpaddsb
sub
mov
cld
idiv
jno
fwait
call
sbb
add
imul
fs
fcom
scas
test
adc
pop
mov
push
xchg
sbb
inc
mov
ja
mov
jecxz
stc
in
jecxz
add
sahf
jae
push
loop
in
push
inc
mov
les
xor
push
jg
mov
sub
leave
mov
icebp
jecxz
int
jnp
and
lds
inc
bound
shr
div
mov
cmp
ins
(bad)
jnp
dec
lea
icebp
loopne
xor
fdivr
aas
xor
sar
aam
movs
jle
jecxz
cmp
mov
rcr
sahf
jnp
in
add
jmp
jg
adc
cmp
out
in
out
sub
in
icebp
jmp
mov
mov
adc
adc
mov
push
jl
xchg
sub
stc
and
add
sub
push
mov
fidiv
push
sbb
mov
mov
outs
scas
and
js
(bad)
pop
(bad)
push
outs
inc
cli
loope
cmps
dec
mov
and
push
and
(bad)
dec
hlt
inc
xchg
icebp
stc
mov
in
or
inc
sub
mov
cmp
mov
idiv
hlt
add
scas
push
ror
sbb
push
jl
xor
movs
mov
outs
test
push
(bad)
(bad)
and
or
inc
jg
cwde
pusha
(bad)
and
push
test
xchg
nop
mov
pop
xchg
mov
setp
or
sti
add
cmp
inc
js
mov
(bad)
ins
cmp
shr
icebp
mov
add
shr
adc
cli
call
xchg
mov
jmp
sti
ja
dec
cmp
pop
pushf
in
mov
mov
inc
bound
(bad)
retf
inc
sbb
aaa
lea
daa
(bad)
shl
outs
sbb
(bad)
push
jae
imul
dec
sbb
aam
shl
fsub
or
arpl
jmp
inc
mov
std
inc
mov
int
test
jb
dec
and
pop
jp
sahf
fcom
pop
pop
fwait
xchg
or
enter
sbb
adc
cs
and
xlat
out
mov
or
cmc
test
out
jno
pop
jl
jnp
cdq
xchg
and
sub
js
add
ins
cmc
pop
ja
fisttp
out
mov
or
fisttp
(bad)
jl
pop
push
or
(bad)
out
xchg
in
cmp
dec
cmps
xchg
in
push
mov
in
and
(bad)
sbb
data16
test
mov
sub
xchg
fwait
jl
mov
inc
xchg
gs
adc
fistp
ret
mov
outs
inc
in
test
push
xchg
mov
sub
repz
dec
(bad)
std
std
in
(bad)
lahf
je
out
jnp
mov
sbb
adc
xchg
mov
inc
dec
test
fs
push
xchg
(bad)
pop
pop
adc
in
clc
mov
mov
mov
xor
fstp
iret
out
inc
jle
icebp
out
mov
out
jno
std
stc
cs
aas
fidivr
je
clc
add
sub
mov
jle
pop
mov
dec
cmp
xor
fs
pop
pop
mov
push
outs
loop
les
sub
fadd
dec
(bad)
xchg
sub
stos
dec
or
mov
sub
inc
mov
es
call
mov
cmps
mov
push
loope
mov
dec
retf
ds
pop
adc
inc
cmps
in
lods
nop
xchg
jne
xlat
lock
(bad)
cmp
and
fst
loope
(bad)
mov
add
pushf
fdiv
fwait
mov
daa
fisttp
xchg
in
pop
lods
mov
pushf
cmps
or
mov
adc
in
pusha
pop
dec
mov
(bad)
daa
cmp
sti
mov
fimul
jl
mov
ds
push
movs
or
jb
movs
push
jae
mov
mov
std
in
(bad)
daa
mov
adc
in
lods
aas
fdivr
idiv
cmp
imul
fdivrp
test
mov
leave
(bad)
and
jge
jb
jae
cmp
push
hlt
(bad)
xchg
and
dec
mov
mov
cs
push
and
dec
mov
outs
sub
xlat
(bad)
jmp
dec
mov
sub
mov
mov
add
stc
mov
cmp
idiv
lds
mov
push
lahf
cld
test
push
dec
jge
ja
movs
clc
pop
mov
fst
push
imul
in
jae
arpl
ret
dec
mov
sub
js
(bad)
and
mov
lahf
xchg
xchg
or
sbb
push
pushf
jo
cli
imul
xor
sbb
retf
jl
jle
out
out
mov
jnp
push
mov
or
outs
mov
call
fadd
mov
shl
mov
fld
dec
jl
enter
ja
or
pop
aas
or
fidivr
xor
pop
leave
cmps
rcr
jbe
in
(bad)
jmp
dec
push
sbb
scas
in
lds
leave
mov
sysenter
ds
repnz
pop
or
push
shr
xor
sbb
mov
fmul
pop
loop
es
fbld
pop
pop
xchg
sbb
sub
or
(bad)
in
pop
enter
push
mul
dec
mov
mov
(bad)
dec
sub
xlat
ins
ja
test
push
xor
push
fadd
xor
jne
sti
into
add
mov
inc
sub
jo
mov
arpl
xlat
pop
test
mov
ficom
fdivr
mov
out
and
mov
and
cld
cmps
pop
fucomp
mov
pushf
inc
mov
pushf
mov
fnstsw
js
jmp
call
jecxz
das
or
adc
mov
ror
neg
jno
loope
mov
imul
fild
pop
ja
clc
xchg
std
out
dec
out
rcr
out
div
(bad)
sahf
jb
aas
push
sahf
adc
jo
cmps
pop
out
ins
jnp
(bad)
in
out
mov
cwde
pop
popa
outs
mov
cmps
mov
test
das
movs
jg
mov
cmp
or
ds
add
scas
jae
cmp
pushf
pop
jge
daa
pop
xor
mov
dec
add
(bad)
pop
pushf
out
into
mov
pushf
(bad)
cld
sbb
hlt
adc
test
ins
out
xchg
cmps
mov
je
das
inc
mov
jnp
imul
mov
sbb
mov
shl
pop
outs
cmp
shl
jbe
js
inc
ds
sbb
sahf
sub
psraw
lahf
lock
sbb
push
loope
mov
mov
xchg
(bad)
fwait
sub
aad
jge
adc
das
and
cld
add
pop
mov
jl
int
fbstp
add
lahf
xchg
scas
jns
cwde
scas
leave
ss
lods
fimul
leave
pop
arpl
lock
imul
mov
mov
mov
push
pushf
mov
adc
outs
repz
shl
fisub
jo
fidiv
shl
lock
mov
push
mov
push
mov
xor
jg
xlat
loope
and
pop
popa
jge
xor
cmp
aaa
lods
cmp
dec
es
push
in
inc
repnz
test
sbb
push
sub
div
pop
sbb
pusha
sbb
or
shl
xchg
xor
lock
pop
outs
ffree
ffree
mov
xor
(bad)
outs
hlt
lea
icebp
pusha
cmp
je
ds
(bad)
dec
sub
scas
ror
leave
or
ret
mov
mov
call
mov
or
xchg
int
ins
jp
sti
lock
or
jbe
sub
push
daa
loopne
shl
dec
dec
pop
icebp
ret
pop
fs
mov
cmpxchg
dec
ins
xor
std
adc
pusha
cmp
pop
loop
lock
xchg
and
or
(bad)
xlat
fs
and
es
cmps
retf
inc
(bad)
movs
aad
mov
cli
push
(bad)
cli
mov
xchg
test
xor
scas
jns
mov
fidiv
(bad)
cmp
call
jg
or
sub
int
xor
js
cmps
mov
xchg
int
bts
nop
sbb
or
lahf
xchg
in
and
ss
movs
jb
stos
lea
adc
nop
ss
xstore-rng
cmps
xchg
(bad)
nop
jecxz
shl
js
bound
lods
retf
imul
(bad)
lods
and
addr16
repz
cmps
icebp
adc
enter
fmul
fbld
push
xchg
jne
sbb
jno
(bad)
ss
sbb
cmps
out
ret
cdq
call
push
sub
xor
(bad)
pop
sahf
jmp
push
sbb
sti
lea
and
mov
(bad)
push
add
xchg
xchg
adc
jp
pop
mov
cmp
inc
xchg
jmp
mov
fiadd
std
inc
loop
bound
push
lock
sub
ror
sbb
dec
lods
pop
cdq
pop
mov
cmps
add
xchg
cs
xor
std
repnz
xchg
sub
gs
dec
mov
popa
mov
pop
adc
cli
xchg
test
jp
xchg
jns
stos
mul
pop
pop
mov
add
retf
mov
stc
in
mov
xchg
hlt
aam
sbb
push
push
cmps
mov
retf
inc
cs
push
(bad)
push
mov
lea
psubq
inc
jo
fdivr
add
repz
mov
pop
retf
pop
jl
and
sub
shl
setp
xor
dec
sub
xor
pop
mov
out
psraw
(bad)
ins
mov
jecxz
icebp
pop
xchg
sbb
mov
pop
mov
retf
dec
je
arpl
jge
pop
call
pop
test
rcl
mov
leave
push
fucom
jp
push
sbb
in
repnz
and
in
fs
dec
xchg
adc
sbb
mov
repnz
sub
push
jge
aaa
loop
hlt
xchg
xchg
cmp
sbb
or
or
push
sar
retf
push
stc
push
fild
inc
loope
in
fistp
hlt
sub
pop
xor
outs
xlat
retf
out
sbb
fnstsw
and
or
xchg
cld
(bad)
pusha
aas
scas
dec
mov
cli
adc
cld
push
xchg
hlt
jno
adc
sub
or
jns
xchg
adc
jne
rcr
ret
push
or
xor
lahf
dec
gs
es
sbb
(bad)
add
loope
pop
mov
imul
hlt
sbb
xchg
or
jecxz
jmp
mov
les
mov
mov
pop
pop
fwait
mov
sbb
lock
mov
push
retf
jo
adc
jge
ins
mov
lahf
ret
add
cmp
fimul
lods
imul
mov
stos
lds
sub
stos
push
ins
pop
je
rcr
jae
push
mov
dec
or
stos
sub
pop
dec
mov
xchg
jb
sub
pop
repnz
add
and
das
jmp
sbb
pop
imul
dec
int
and
outs
mov
(bad)
jbe
jle
scas
fs
and
stos
push
enter
daa
fxam
fist
pop
dec
xchg
shl
lahf
(bad)
retf
arpl
mov
mov
in
jg
fimul
pop
or
push
movs
inc
scas
sbb
imul
cmps
ins
out
jge
dec
cdq
adc
jne
sti
push
ficomp
aam
mov
inc
sar
add
jnp
nop
leave
sub
(bad)
lods
hlt
xchg
inc
push
inc
call
test
jecxz
clc
mov
icebp
gs
ins
fldenv
(bad)
retf
or
(bad)
push
cld
push
cmp
idiv
dec
imul
cmp
adc
jg
ror
and
fistp
mov
imul
sub
leave
mov
mov
xchg
fild
fdivr
cld
test
jl
mov
sub
mov
outs
add
and
dec
xchg
cmp
aaa
or
retf
sbb
mov
popa
push
aam
sub
fiadd
mov
xchg
add
pop
mov
hlt
pop
push
shr
dec
jmp
test
adc
jb
test
ficom
inc
daa
rcl
push
or
dec
arpl
push
ins
dec
jecxz
push
shr
mov
adc
aaa
lods
loop
adc
test
dec
jns
inc
add
sub
bound
xchg
arpl
data16
dec
hlt
ror
or
push
push
jl
mov
call
mov
movs
ja
inc
jns
mov
loop
lahf
mov
push
jmp
jle
or
outs
jle
and
jecxz
pop
lahf
les
and
sar
sbb
call
sub
cld
lock
mov
stos
test
in
mov
ins
inc
lea
sub
arpl
test
inc
and
mov
mov
repnz
jecxz
std
push
sub
fild
idiv
push
fwait
cmps
add
xor
test
ss
mul
test
sub
mov
call
dec
pop
leave
pop
mov
dec
sar
ins
dec
pop
and
(bad)
mov
repnz
arpl
stos
pop
inc
fcmovnb
and
int
movs
dec
sbb
add
call
xchg
(bad)
aad
push
call
pop
inc
int
(bad)
sub
mov
mov
shl
sub
jo
scas
xor
sub
fidivr
sub
and
sub
test
sub
jle
jmp
fs
xchg
popa
sbb
dec
dec
in
and
mov
xchg
ja
jecxz
cmp
adc
data16
out
mov
in
or
js
sub
sbb
xor
mov
scas
mov
xchg
retf
repnz
add
jns
rol
in
call
icebp
stc
adc
or
retf
es
popf
adc
in
sbb
jbe
inc
hlt
xor
add
cld
xchg
dec
push
pop
cmp
dec
pop
gs
test
(bad)
std
inc
pop
pop
xchg
or
ret
repz
aas
dec
nop
repnz
call
lods
dec
xchg
jo
out
xlat
adc
out
jg
jle
sti
pop
mov
test
cmp
xor
loope
and
push
daa
shl
or
imul
ss
sub
xor
jge
mov
inc
lock
ja
lea
pop
or
push
xor
(bad)
mov
dec
xor
xor
ficom
add
rol
pop
jg
cmps
xchg
in
loop
push
xlat
adc
rcl
cld
test
mov
sbb
inc
retf
xchg
mov
imul
inc
xchg
sbb
dec
mov
pop
add
loope
mov
cmps
jg
ret
or
test
or
add
in
inc
sahf
mov
jne
pop
leave
xchg
pop
lahf
in
popa
movs
js
mov
mov
aaa
xor
arpl
jno
xor
in
push
jge
pop
rcl
not
je
pop
hlt
adc
mov
fadd
lahf
movs
sbb
fwait
jbe
pop
add
and
pop
shl
pop
cli
repnz
std
adc
xchg
out
inc
inc
jmp
mov
call
xchg
pop
cmp
jge
movs
xchg
jmp
pop
js
pop
outs
and
xchg
je
xchg
je
xlat
mov
pusha
pop
mov
sbb
cli
or
pop
ret
inc
xor
inc
pop
mov
loope
lods
jge
iret
sub
leave
xchg
jb
mov
rcl
retf
mov
xchg
je
aad
movs
pandn
test
cmp
mov
push
ins
mov
stos
sbb
sub
or
cmp
mov
mov
nop
mov
push
cmps
mov
ds
inc
dec
jns
pop
mov
outs
inc
bound
pop
mov
inc
repz
mov
mov
add
lods
sti
adc
pop
cli
dec
stos
outs
dec
xchg
std
mov
mov
ret
pop
xlat
les
dec
dec
pop
jne
push
xchg
lahf
or
fdiv
ins
aam
repnz
fnsave
dec
jle
fsub
xlat
ins
loop
scas
rol
(bad)
pop
sbb
(bad)
les
adc
mov
add
mov
jp
leave
fidiv
das
shl
jecxz
cmp
adc
jle
jg
xchg
pusha
pop
xchg
inc
push
repz
xor
scas
dec
pop
sbb
xor
push
xor
sbb
sti
pop
cmc
inc
(bad)
in
shl
sub
mov
inc
pop
je
pop
sar
bound
push
sbb
enter
icebp
sbb
jle
lods
push
and
sbb
call
movs
sbb
lahf
ins
je
sti
dec
in
mov
out
aaa
or
push
sbb
inc
lds
sbb
push
(bad)
jo
bts
push
add
jns
ror
pop
repnz
or
xor
dec
jns
out
mov
mov
or
retf
sub
leave
xchg
movs
pop
stos
mov
xor
loopne
and
mov
or
imul
int
push
int3
call
cmp
and
arpl
xor
retf
or
repnz
cli
dec
cs
pop
inc
jmp
jbe
imul
out
lock
mov
add
sbb
xchg
ins
loopne
jns
adc
imul
mov
shl
fcomp
call
adc
daa
call
jle
cmps
(bad)
cmp
pop
mov
jp
mov
lea
mov
cwde
adc
inc
dec
jl
cmp
pop
xchg
sahf
or
fld
adc
cmp
mov
mov
sahf
sub
gs
xchg
xor
scas
add
ds
dec
das
jmp
mov
(bad)
push
clc
jle
mov
push
std
test
retf
repz
fucom
pop
mov
ror
xlat
(bad)
repnz
mov
(bad)
shl
pop
bndldx
inc
(bad)
(bad)
mov
or
cmp
and
imul
(bad)
rol
addr16
xor
popa
sub
lods
rol
stc
add
movs
push
cli
add
jb
sbb
mov
scas
nop
and
iret
mov
cld
or
sub
xchg
push
gs
add
pop
mov
dec
out
mov
or
stos
cli
push
jmp
push
mov
ins
stc
xchg
nop
cmp
int
sbb
mov
movs
movs
imul
bndstx
mov
push
test
xchg
je
xlat
aad
dec
mov
cmps
data16
pop
mov
(bad)
fist
in
and
xlat
call
push
jmp
jo
stos
mov
cli
movs
inc
retf
cmp
ret
out
loopne
fidivr
mov
cmp
cld
aam
or
fist
std
nop
hlt
inc
ins
call
rcr
and
jb
(bad)
xchg
lods
mov
out
adc
imul
cmp
sub
inc
push
inc
xor
mov
scas
pop
in
sbb
push
and
mov
jge
repnz
inc
loope
jmp
rcr
xchg
sub
(bad)
lea
int
and
mov
imul
mov
retf
out
loop
outs
les
fstp
clc
ins
push
rep
repnz
pop
scas
das
outs
aaa
call
mov
xchg
ins
xlat
nop
(bad)
mov
jmp
in
iret
fwait
pop
dec
movs
out
fist
pop
push
inc
pop
mov
stc
xchg
sar
sbb
in
inc
je
sbb
shl
mov
cmp
pop
inc
pop
jl
xor
cmp
stc
mov
call
or
hlt
push
sbb
mov
xor
fadd
clc
mov
(bad)
mov
rcr
dec
cmp
sahf
mov
(bad)
or
jp
xchg
nop
xchg
and
sub
icebp
dec
inc
mov
xchg
bound
sbb
jmp
dec
pop
add
push
shr
mov
pop
rol
jbe
pop
mov
shl
cld
test
push
cmps
int3
xchg
clc
add
cmp
fnsave
inc
pop
jo
sbb
mov
stos
sub
aad
push
push
lds
and
ss
daa
fabs
clc
sbb
sbb
xor
repz
push
pop
cli
add
call
scas
(bad)
or
scas
sar
jg
outs
sub
inc
icebp
imul
mov
or
aas
cli
test
sbb
ins
push
inc
repnz
xlat
pop
daa
shr
inc
lods
call
jns
sar
mov
dec
shr
push
or
lea
(bad)
shl
enter
sti
rcl
lods
dec
pop
mov
pop
and
shl
fbld
sbb
jmp
jbe
adc
or
mov
mov
inc
jl
frstor
in
inc
js
or
mov
mov
pop
test
scas
jecxz
add
movntps
push
scas
loope
xor
cmp
sub
jo
add
scas
out
push
fstp
inc
fidiv
popa
sar
jno
push
and
outs
loope
shl
jns
push
xor
jp
mov
mov
mov
sahf
and
add
mov
mov
sub
or
sbb
cmp
imul
test
leave
fbstp
ins
add
loopne
pop
push
xor
jns
adc
and
mul
ins
jne
mov
fist
dec
repz
sub
mov
pop
stos
mov
xchg
dec
sti
je
sti
xchg
movs
cmps
mov
or
cmp
mov
and
imul
or
push
fcmovnbe
arpl
fist
pop
cs
sub
pop
out
adc
cmp
inc
addr16
pop
not
stos
pop
inc
xchg
ds
mov
call
dec
out
xor
adc
cmp
adc
cmp
out
mov
pop
shl
ins
dec
jecxz
sub
adc
mov
imul
push
mov
cli
inc
mov
jl
pop
cmp
add
inc
in
add
inc
xlat
call
loop
movs
test
sbb
fidiv
fnstenv
fucomi
call
sbb
lahf
cmp
add
push
retf
adc
leave
imul
hlt
movs
pop
cmps
dec
dec
mov
inc
retf
and
mov
jp
ds
xor
data16
jbe
and
xor
push
es
imul
into
les
outs
mov
add
fsubr
and
ret
xchg
fwait
mov
jno
mov
fisubr
sub
das
clc
xchg
fdivp
scas
mov
xchg
ins
jae
in
or
imul
and
fcmovnbe
dec
scas
dec
inc
ret
jmp
xchg
sbb
xor
shr
mov
fs
pop
arpl
lahf
loope
dec
mov
imul
sar
stos
loopne
pop
xchg
cs
cmp
data16
mov
jne
std
(bad)
mov
dec
arpl
bound
cli
loopne
sbb
sub
xchg
ins
push
es
data16
push
cmps
das
sbb
xor
ret
nop
(bad)
test
xchg
es
inc
imul
inc
jno
sbb
inc
dec
call
cs
mov
jmp
imul
pop
fs
mov
iret
add
add
loopne
ins
test
jl
lods
in
add
shl
imul
adc
jmp
sub
int
pop
xchg
ss
imul
popf
jge
fs
sbb
clc
mov
sti
push
rol
cmp
arpl
aad
movs
jne
ja
in
cli
outs
adc
xor
mov
pop
mov
mov
ins
call
js
jmp
inc
mov
xor
jmp
mov
cs
ds
lock
cmovno
fsub
mov
mov
cmc
xor
je
mov
mov
and
hlt
add
mov
jg
dec
mov
popf
pop
mov
in
outs
leave
cli
xor
movs
pushf
out
cmp
fcmovnbe
push
pop
popa
das
(bad)
push
push
mov
fincstp
xor
inc
js
add
sbb
lock
pmullw
aam
cmp
test
pop
mov
pop
sbb
sub
xchg
pushf
mov
jmp
fisub
movs
pop
int
jmp
mov
aam
mov
mov
enter
loopne
pop
dec
jecxz
icebp
mov
sbb
shr
in
push
or
js
jmp
and
pop
mov
mov
pop
mov
hlt
xor
lods
adc
ins
movs
pushf
out
push
jmp
popf
stc
mov
mov
int
mov
mov
lds
xchg
ror
rcl
lock
sbb
jecxz
aas
fild
adc
pop
dec
hlt
or
movs
inc
sahf
cmps
pop
nop
jb
inc
pop
mov
inc
lock
fst
outs
rcr
xor
in
sub
xor
shl
mov
cdq
out
jmp
jle
dec
jg
ins
je
shl
jne
ds
mov
cmp
push
cmc
ss
or
xchg
xchg
xor
lods
rcl
mov
sbb
push
mov
xchg
loop
jge
fld
push
mov
ins
pop
stos
mov
and
retf
sbb
jne
cmp
out
dec
loop
mov
xlat
and
adc
ficomp
bound
pop
(bad)
or
inc
sub
leave
mov
out
ds
lock
test
je
lahf
test
test
or
pop
jl
pusha
fsubr
jg
jge
retf
xor
sti
push
out
xlat
and
inc
pop
mov
ss
sbb
inc
push
pop
nop
arpl
loopne
pop
arpl
xchg
dec
iret
aaa
call
fist
rcl
dec
xchg
scas
ins
fisubr
mov
lds
mov
(bad)
popa
pop
rcl
lea
(bad)
cdq
push
xchg
ror
add
rcr
(bad)
das
sub
push
jecxz
call
mov
jge
clc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
aad
add
add
or
or
add
or
add
add
add
add
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
mov
add
add
sbb
je
outs
data16
popa
jb
add
imul
and
cs
hlt
jb
add
add
inc
inc
push
cmp
nop
dec
or
and
std
jmp
push
stos
add
pop
fwait
cmp
jne
jmp
cmp
push
out
push
aam
dec
cmc
inc
jns
stc
push
out
and
add
pop
dec
xchg
mov
pop
repz
(bad)
add
loope
push
lahf
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
aam
add
add
or
or
add
or
add
add
add
add
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
mov
add
add
sbb
je
outs
data16
popa
jb
add
imul
and
cs
hlt
jb
add
add
inc
inc
push
cmp
pop
inc
std
dec
mov
fwait
pop
cmps
js
lock
test
test
add
mov
mov
loope
sub
xor
pushf
or
loopne
sub
rol
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
mov
add
add
sbb
je
outs
data16
popa
jb
add
imul
and
cs
hlt
jb
add
add
inc
inc
push
cmp
clc
dec
and
pop
add
loopne
add
icebp
and
inc
adc
and
fnsave
sub
push
inc
add
push
add
sbb
cld
dec
add
and
and
imul
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
mov
add
add
sbb
je
outs
data16
popa
jb
add
imul
and
cs
hlt
jb
add
add
dec
inc
inc
push
cmp
clc
dec
and
pop
add
add
xor
dec
adc
add
push
cmp
or
inc
icebp
and
inc
adc
or
rol
and
rcr
(bad)
inc
inc
inc
fdiv
xor
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ss
dec
ss
add
ss
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
add
inc
rol
rcr
push
retf
add
inc
inc
and
add
cmp
and
inc
and
inc
inc
add
add
inc
inc
inc
inc
inc
pusha
inc
inc
cmp
inc
mov
inc
inc
loopne
add
inc
pusha
and
add
inc
pusha
pusha
inc
pusha
cmp
pusha
mov
inc
pusha
loopne
add
and
add
pusha
inc
add
add
loopne
add
and
add
pusha
inc
mov
mov
inc
mov
add
add
and
add
inc
inc
shl
rol
add
sar
shl
add
add
add
and
add
inc
inc
loopne
inc
loopne
inc
loopne
inc
loopne
inc
loopne
inc
add
inc
add
inc
inc
inc
pusha
inc
cmp
add
inc
loopne
inc
and
inc
and
inc
and
inc
and
inc
and
inc
sar
and
inc
add
inc
inc
and
inc
inc
inc
inc
pusha
inc
cmp
inc
mov
inc
loopne
inc
pusha
add
inc
pusha
and
inc
pusha
inc
inc
pusha
inc
cmp
pusha
mov
inc
loopne
inc
add
inc
and
inc
add
and
add
inc
add
inc
and
inc
mov
and
inc
mov
pusha
inc
cmp
mov
sar
mov
add
inc
shl
inc
rol
shl
rol
inc
rol
inc
shl
inc
loopne
inc
and
inc
loopne
inc
pusha
inc
cmp
loopne
inc
sar
loopne
inc
add
inc
add
add
inc
add
inc
and
inc
and
and
inc
and
inc
inc
add
add
add
add
add
add
add
add
and
and
and
and
and
and
and
and
add
inc
and
add
add
inc
mov
inc
inc
mov
mov
inc
rol
add
inc
shl
rol
add
inc
loopne
inc
loopne
inc
loopne
inc
loopne
inc
add
inc
add
inc
add
rol
inc
add
inc
add
inc
add
inc
and
inc
and
inc
and
shl
inc
and
inc
and
inc
and
inc
inc
add
rol
rol
rol
rol
rol
rol
rol
shl
shl
shl
shl
shl
shl
shl
shl
rol
inc
add
and
add
rol
inc
mov
and
shl
inc
mov
mov
inc
mov
add
rol
inc
rol
shl
rol
lock
(bad)
jmp
cmp
add
inc
inc
inc
(bad)
(bad)
(bad)
inc
add
inc
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
loopne
loopne
sti
sti
loopne
loopne
loopne
loopne
add
loopne
loopne
sti
sti
loopne
loopne
loopne
loopne
add
loopne
loopne
sti
sti
loopne
loopne
loopne
loopne
add
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
loopne
loopne
sti
sti
loopne
loopne
loopne
loopne
add
loopne
loopne
sti
sti
loopne
loopne
loopne
loopne
add
loopne
loopne
sti
sti
loopne
loopne
loopne
loopne
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rol
add
add
or
or
add
or
add
add
add
add
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
mov
add
add
sbb
je
outs
data16
popa
jb
add
imul
and
cs
hlt
jb
add
add
inc
inc
push
cmp
(bad)
ror
add
or
sti
call
adc
jecxz
adc
ins
icebp
enter
je
jns
or
call
out
cs
dec
xor
loopne
dec
ja
or
add
add
adc
cmp
inc
pop
pop
cmp
add
dec
inc
scas
inc
pusha
or
add
dec
loope
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
sar
mov
add
inc
add
add
add
add
add
jae
je
popa
add
add
add
pop
add
ins
add
jb
je
pop
add
add
pop
add
xor
pop
add
add
jp
add
xor
xor
add
add
or
aaa
add
popa
add
sub
str
push
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
add
add
mov
mov
int
mov
nop
nop
push
push
jb
addr16
ins
and
jae
and
and
outs
and
fs
push
imul
aaa
push
inc
add
dec
add
add
add
add
add
add
add
sbb
inc
add
rol
add
add
add
add
add
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
adc
add
add
add
add
adc
add
add
add
nop
add
ror
add
add
add
add
add
pop
aam
add
adc
add
mov
add
add
add
xchg
add
or
add
cs
js
add
add
add
add
add
add
add
add
add
add
pusha
imul
or
add
adc
add
or
add
test
and
add
fs
je
add
add
and
add
push
add
add
add
inc
add
shr
jae
add
add
mov
add
add
add
add
add
add
add
add
add
imul
or
add
add
add
add
add
inc
add
shr
ins
jae
add
add
add
add
mov
add
add
add
add
add
cs
popa
je
add
sbb
add
add
add
add
add
inc
add
inc
cs
jb
add
add
mov
add
rol
add
add
inc
add
inc
add
add
add
add
inc
add
inc
add
inc
add
or
jae
inc
push
add
add
add
add
adc
jae
jb
outs
sub
inc
add
or
jae
push
je
imul
nop
adc
nop
adc
or
add
add
add
and
inc
add
cmp
pushf
cmp
xchg
cmp
mov
inc
add
cmp
mov
inc
add
inc
add
inc
add
dec
bound
arpl
lods
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
mov
add
add
inc
add
add
(bad)
(bad)
push
inc
and
add
mov
and
mov
add
pop
ret
lea
jmp
mov
jmp
mov
jmp
mov
in
add
(bad)
(bad)
(bad)
call
add
inc
popa
jae
dec
dec
and
jb
popa
outs
and
imul
sub
xor
xor
sub
cmp
push
imul
and
arpl
and
and
outs
data16
imul
outs
data16
popa
jb
and
gs
outs
jo
outs
je
add
and
gs
arpl
and
ins
outs
jb
and
imul
popa
jae
outs
arpl
jb
gs
add
add
and
gs
arpl
and
popa
ins
ins
and
outs
arpl
ins
gs
imul
jb
cmp
and
jp
jae
outs
data16
gs
arpl
and
imul
ins
gs
and
and
outs
arpl
and
cmp
add
add
and
je
jae
and
add
add
imul
outs
add
jae
push
je
imul
imul
jb
outs
add
add
outs
gs
arpl
and
ins
outs
jb
and
imul
lock
ret
lea
mov
mov
mov
mov
mov
mov
ret
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
lea
fild
fild
fild
fild
mov
mov
fistp
fistp
fistp
fistp
ret
lea
fild
fild
fild
fild
fild
mov
mov
fistp
fistp
fistp
fistp
fistp
ret
nop
fild
fild
fild
fild
fild
fild
mov
mov
fistp
fistp
fistp
fistp
fistp
fistp
ret
lea
fild
fild
fild
fild
fild
fild
fild
mov
mov
fistp
fistp
fistp
fistp
fistp
fistp
fistp
ret
nop
fild
fild
fild
fild
fild
fild
fild
fild
mov
mov
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
ret
lea
sub
add
add
neg
jns
fild
fild
fistp
fistp
add
js
fild
fistp
mov
mov
ret
lea
sub
add
add
neg
fild
fistp
add
js
mov
mov
ret
nop
mov
mov
cmp
mov
mov
je
ret
nop
sub
mov
shr
movzx
mov
rol
and
jne
mov
mov
rol
and
ret
mov
sub
shr
sub
sbb
and
add
lea
mov
cmp
mov
mov
mov
mov
je
ret
nop
nop
sub
mov
shr
movzx
mov
shl
or
mov
mov
shl
or
ret
cmp
jne
ret
nop
nop
mov
test
jne
or
mov
sub
lea
mov
mov
cmp
jae
ret
nop
nop
mov
and
cmp
jb
call
mov
mov
and
mov
sub
add
jmp
ret
nop
push
mov
call
push
push
push
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
add
mov
sub
mov
mov
sub
mov
sub
mov
mov
or
mov
sub
mov
pop
ret
xor
mov
xor
pop
ret
nop
cmp
je
jmp
cmp
jne
push
call
mov
mov
xor
call
test
je
push
call
mov
mov
xor
call
test
jne
ret
nop
push
push
push
push
mov
lea
dec
add
and
push
push
push
push
call
mov
test
je
mov
mov
or
mov
call
mov
mov
mov
mov
mov
mov
add
mov
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
sub
call
mov
mov
mov
mov
mov
mov
test
jne
push
push
push
call
test
je
xor
jmp
or
jmp
mov
mov
and
xor
push
lea
push
push
call
push
push
push
call
test
jne
or
jmp
mov
cmp
jbe
sub
add
jmp
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
mov
sub
mov
mov
and
sub
cmp
jae
mov
shr
add
cmp
jbe
mov
jmp
mov
mov
sub
and
add
mov
push
lea
push
mov
push
call
cmp
jne
and
mov
sub
mov
cmp
jae
mov
sub
add
dec
and
mov
cmp
jae
mov
push
push
push
mov
push
call
test
je
push
push
push
mov
push
call
test
je
mov
sub
mov
mov
add
or
mov
mov
jmp
mov
call
mov
test
je
cmp
jbe
mov
sub
mov
mov
sub
mov
mov
mov
xchg
call
mov
call
jmp
shr
cmp
jb
mov
sub
mov
jmp
mov
call
mov
test
je
cmp
jbe
mov
sub
mov
mov
mov
mov
call
mov
call
mov
add
pop
pop
pop
pop
ret
lea
shr
cmp
push
mov
ja
test
movzx
lea
jne
mov
mov
mov
cmp
je
add
and
mov
mov
je
mov
pop
ret
nop
nop
nop
mov
movzx
add
cmp
ja
add
mov
mov
mov
pop
ret
nop
nop
nop
mov
mov
mov
mov
pop
ret
nop
nop
mov
lock
je
add
mov
lock
je
add
mov
lock
je
sub
pause
cmp
jne
push
call
mov
lock
je
push
call
jmp
push
push
cmp
je
mov
lock
je
pause
cmp
jne
push
call
mov
lock
je
push
call
jmp
movsx
and
je
bsf
lea
mov
bsf
lea
lea
mov
mov
mov
mov
cmp
jne
mov
rol
and
jne
btr
mov
and
cmp
jb
mov
movzx
sub
lea
lea
mov
mov
call
jmp
movzx
mov
cmp
jb
mov
movzx
lea
cmp
jb
mov
sub
sub
mov
jmp
movzx
mov
call
mov
test
jne
mov
mov
pop
pop
pop
ret
and
lea
mov
xor
mov
mov
mov
mov
mov
lea
movzx
lea
mov
add
sub
mov
mov
mov
pop
pop
pop
ret
nop
mov
lock
je
pause
cmp
jne
push
call
mov
lock
je
push
call
jmp
nop
nop
nop
cmp
ja
lea
and
add
test
jne
lea
mov
shr
shr
mov
shl
and
je
and
bsf
or
jmp
nop
nop
mov
mov
shl
and
je
bsf
mov
bsf
mov
shl
or
jmp
nop
mov
sub
jb
mov
sub
mov
mov
or
mov
jmp
mov
call
mov
pop
ret
push
push
lea
mov
mov
mov
mov
cmp
jne
mov
rol
and
jne
btr
mov
and
mov
sub
je
lea
lea
mov
mov
cmp
jb
call
jmp
nop
nop
nop
and
lea
mov
mov
mov
pop
pop
pop
ret
pop
test
jns
xor
ret
mov
test
mov
push
mov
jne
test
mov
jne
sub
mov
je
test
mov
lea
mov
je
xor
mov
pop
ret
nop
mov
mov
mov
mov
mov
mov
xor
pop
ret
nop
nop
test
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
jmp
mov
lock
je
pause
cmp
jne
push
push
push
call
pop
pop
mov
lock
je
push
push
push
call
pop
pop
jmp
nop
nop
nop
mov
lock
je
pause
cmp
jne
push
call
mov
lock
je
push
call
jmp
nop
nop
nop
test
jne
and
test
mov
push
mov
jne
test
mov
jne
or
mov
test
jne
cmp
je
lea
mov
mov
mov
mov
call
mov
xor
pop
pop
ret
nop
lea
and
add
cmp
jb
call
jmp
nop
mov
sub
add
cmp
jb
mov
call
jmp
cmp
jne
sub
mov
mov
mov
mov
mov
push
push
push
call
cmp
sbb
pop
pop
ret
nop
nop
nop
lea
call
mov
mov
mov
mov
xor
pop
pop
ret
nop
nop
pop
test
je
mov
ret
mov
test
push
push
mov
jne
mov
movzx
sub
cmp
jb
lea
cmp
jb
pop
pop
ret
nop
mov
mov
call
test
je
mov
mov
mov
mov
call
mov
call
mov
pop
pop
ret
nop
nop
lea
push
mov
xor
sub
adc
and
add
call
test
je
cmp
jbe
mov
movzx
sub
mov
mov
mov
call
mov
call
mov
pop
pop
pop
ret
nop
test
jne
mov
and
push
lea
sub
and
cmp
push
ja
lea
cmp
jb
pop
pop
pop
pop
ret
nop
nop
nop
cmp
jae
cmp
jb
mov
cmp
jbe
lea
and
add
add
sub
cmp
je
mov
lock
je
pause
cmp
jne
push
push
call
pop
mov
lock
je
push
push
call
pop
jmp
nop
mov
and
or
mov
mov
mov
test
jne
or
mov
jmp
nop
mov
and
add
add
cmp
jb
call
mov
lea
mov
cmp
jb
lea
mov
call
mov
mov
pop
pop
pop
pop
ret
mov
mov
call
test
je
mov
mov
mov
mov
call
mov
call
mov
pop
pop
pop
pop
ret
mov
test
je
and
lea
cmp
ja
cmp
je
mov
lock
je
pause
cmp
jne
push
push
push
call
pop
pop
mov
lock
je
push
push
push
call
pop
pop
jmp
nop
mov
and
mov
test
je
and
lea
cmp
ja
cmp
jb
mov
push
push
call
pop
pop
mov
shr
add
xor
sub
adc
and
lea
and
add
lea
sub
ja
and
add
jmp
nop
nop
mov
lea
mov
mov
cmp
jb
add
call
or
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
mov
mov
shr
add
xor
sub
adc
and
add
mov
mov
push
call
pop
test
je
cmp
jbe
mov
mov
mov
mov
mov
call
mov
call
mov
pop
pop
pop
pop
ret
nop
pop
pop
test
je
xor
ret
mov
push
lea
and
call
cmp
sbb
lea
or
cmp
jae
neg
fldz
fst
add
js
mov
ffree
fincstp
pop
ret
mov
mov
mov
sub
mov
and
add
mov
mov
sub
mov
and
test
jne
xor
ret
lea
cmp
je
mov
cmp
jb
mov
add
cmp
jae
add
ret
cmp
je
mov
jmp
xor
ret
lea
push
push
mov
add
mov
mov
cmp
jne
mov
cmp
jbe
mov
mov
sub
mov
and
add
movzx
sub
mov
pop
pop
ret
mov
dec
mov
pop
pop
ret
mov
push
mov
add
mov
mul
shr
mov
and
shr
lea
add
mov
or
mov
mov
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
cmp
sbb
shr
or
mov
lea
pop
ret
lea
push
push
mov
mov
mov
mov
call
mov
add
pop
pop
ret
mov
push
mov
test
je
add
mov
movzx
inc
mov
call
pop
ret
mov
call
mov
mov
mov
call
pop
ret
nop
push
mov
push
mov
cmp
jbe
test
jne
mov
mov
mov
cmp
ja
mov
mov
add
add
cmp
jae
mov
xor
mov
push
mov
add
push
push
call
mov
cmp
jb
mov
cmp
jne
mov
test
je
mov
test
je
xor
jmp
mov
pop
pop
ret
xor
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
cmp
jge
mov
push
mov
add
call
pop
test
je
mov
push
mov
add
call
pop
test
je
mov
add
mov
mov
add
cmp
jne
test
je
mov
push
mov
call
pop
test
je
mov
push
lea
mov
call
pop
test
jne
xor
jmp
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
add
push
mov
xor
mov
push
xor
mov
call
pop
test
jne
xor
mov
pop
mov
pop
ret
mov
cmp
je
jmp
cmp
jne
push
call
mov
mov
xor
call
test
je
push
call
mov
mov
xor
call
test
jne
cmp
jne
push
push
push
push
call
mov
cmp
setne
ret
mov
push
mov
call
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
inc
mov
jmp
xor
mov
pop
ret
push
push
push
mov
mov
xor
cmp
je
call
test
je
mov
mov
dec
test
jl
inc
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
dec
mov
jmp
inc
dec
jne
mov
mov
pop
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
sub
shr
shl
mov
lea
lea
lea
mov
call
jmp
mov
sub
test
jne
mov
call
test
jne
mov
mov
xor
mov
call
mov
test
jne
mov
cmp
jge
mov
mov
mov
mov
movzx
mov
cmp
je
cmp
jne
mov
inc
imul
add
mov
cmp
jle
mov
mov
movzx
sub
cmp
jl
mov
cmp
jne
mov
add
mov
mov
test
jle
mov
cmp
je
mov
cmp
jae
xor
jmp
mov
mov
inc
dec
jne
cmp
je
mov
cmp
jne
mov
jmp
mov
add
mov
mov
test
jle
mov
cmp
je
mov
cmp
jae
xor
jmp
mov
mov
add
dec
jne
cmp
je
mov
cmp
jne
mov
jmp
mov
cmp
je
cmp
je
inc
cmp
jle
cmp
jg
mov
jmp
xor
inc
mov
mov
movzx
add
mov
cmp
jbe
pop
pop
pop
mov
pop
ret
push
mov
push
mov
add
push
dec
jne
mov
add
push
push
push
lea
xor
mov
call
lea
xor
mov
call
xor
mov
mov
mov
jmp
mov
call
mov
test
je
mov
sub
mov
test
jne
test
je
push
mov
call
pop
jmp
cmp
jge
and
sub
mov
mov
call
test
jne
mov
mov
mov
mov
inc
mov
call
mov
test
jne
mov
cmp
jne
mov
jmp
mov
add
call
test
jne
mov
mov
and
sub
sub
mov
mov
inc
mov
cmp
je
cmp
jl
cmp
jne
mov
xor
mov
mov
call
mov
lea
mov
call
mov
mov
mov
lea
mov
mov
movzx
sub
mov
mov
mov
mov
mov
lea
cmp
ja
cmp
jbe
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
cmp
jne
mov
inc
mov
inc
mov
inc
mov
call
mov
mov
inc
mov
inc
mov
inc
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
jmp
mov
inc
mov
inc
mov
sub
jb
je
dec
je
jmp
mov
call
mov
mov
mov
call
mov
jmp
mov
call
mov
mov
mov
call
mov
jmp
mov
call
mov
mov
mov
call
mov
jmp
mov
mov
call
mov
mov
inc
mov
inc
mov
inc
mov
mov
call
mov
dec
sub
cmp
jne
mov
mov
add
add
dec
jne
cmp
jle
cmp
je
mov
inc
mov
inc
mov
inc
mov
inc
mov
call
mov
mov
mov
call
mov
mov
dec
test
jb
inc
xor
lea
mov
test
je
mov
inc
mov
inc
mov
mov
mov
call
mov
lea
cmp
ja
inc
add
dec
jne
mov
call
mov
mov
mov
call
push
mov
push
lea
push
push
call
pop
pop
pop
mov
pop
ret
lea
push
push
xor
xor
mov
cmp
je
test
jne
movzx
shr
mov
add
add
cmp
jbe
mov
inc
cmp
ja
mov
inc
add
cmp
jne
pop
pop
ret
mov
push
push
push
mov
mov
cmp
jne
mov
lea
mov
lea
mov
xor
mov
mov
movzx
add
add
lea
add
and
add
cmp
jae
mov
add
shr
cmp
jbe
mov
mov
mov
shl
mov
shl
add
mov
movzx
movzx
mov
shl
lea
add
and
add
cmp
jae
mov
cmp
jbe
mov
mov
sub
movzx
mov
xor
div
imul
add
and
add
mov
add
dec
jne
call
mov
mov
mov
mov
mov
mov
mov
add
dec
jne
mov
mov
pop
pop
pop
ret
lea
push
push
push
push
mov
mov
mov
jmp
mov
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
dec
jne
mov
mov
mov
mov
mov
mov
mov
add
dec
jne
mov
jmp
mov
push
push
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
pop
ret
cmp
je
mov
push
call
xor
mov
cmp
je
call
cmp
je
push
push
mov
push
call
xor
mov
call
ret
lea
test
je
call
test
je
repz
mov
jmp
ret
test
jle
call
test
je
repz
mov
jmp
xor
repz
nop
test
je
call
test
jne
repz
mov
jmp
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
call
cmp
je
call
mov
mov
ret
xor
ret
call
cmp
je
call
mov
mov
ret
xor
ret
push
call
mov
test
je
mov
xor
mov
cmp
je
mov
call
jmp
xor
mov
pop
ret
lea
call
mov
ret
mov
call
ret
push
push
mov
mov
and
cmp
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
movzx
movzx
movzx
mov
call
pop
pop
ret
lea
and
mov
jmp
ret
push
push
push
call
cmp
pop
pop
pop
jne
ret
xor
jmp
ret
lea
push
mov
call
mov
pop
ret
push
call
mov
call
xor
mov
mov
pop
ret
lea
cmp
je
cmp
ja
sub
jg
jmp
fild
fild
cmp
jle
fild
cmp
jle
fild
fistp
fistp
fistp
fistp
ret
nop
nop
icebp
das
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sub
dec
or
fild
push
neg
and
lea
pop
fild
fistp
add
jl
fistp
pop
fistp
ret
jle
cmp
ja
sub
cmp
lea
jbe
sub
push
fild
fild
add
and
sub
fild
fistp
sub
jg
pop
fistp
fistp
ret
movzx
mov
ret
movzx
mov
ret
mov
mov
mov
mov
ret
mov
mov
ret
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
fild
fistp
ret
lea
add
push
call
test
je
mov
mov
pop
pop
ret
call
mov
pop
pop
ret
lea
push
xor
imul
inc
mov
mul
mov
pop
ret
mov
mov
fnclex
fldcw
ret
nop
push
fnstcw
pop
ret
nop
cmp
je
call
mov
jmp
ret
mov
push
movzx
sub
je
dec
sub
jae
mov
call
mov
jmp
xor
jmp
cmp
je
cmp
jne
xor
jmp
mov
test
je
mov
call
mov
pop
ret
lea
mov
call
ret
lea
push
push
mov
xor
movzx
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
push
push
mov
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
cmp
jne
dec
je
mov
cmp
jne
dec
je
mov
cmp
jne
xor
pop
pop
ret
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
ret
nop
cmp
mov
jl
mov
mov
mov
mov
sub
fld
fst
fst
mov
and
sub
sub
add
add
neg
fst
fst
add
jl
ffree
fincstp
ret
nop
nop
nop
test
jle
mov
and
neg
lea
jmp
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
ret
nop
push
push
push
mov
push
test
je
xor
xor
mov
mov
add
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
add
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
add
test
jne
dec
je
test
jge
jmp
add
jmp
neg
jle
js
pop
sub
jmp
inc
mov
add
jmp
mov
mov
add
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
add
test
jne
dec
jne
neg
pop
xor
shr
mov
pop
pop
pop
ret
mov
jmp
ret
mov
push
xor
test
jl
je
cmp
jge
mov
and
lea
fld
fmulp
shr
je
mov
and
je
lea
fld
fmulp
shr
je
lea
fld
fmulp
jmp
neg
cmp
jge
mov
and
lea
fld
fdivrp
shr
je
mov
and
je
lea
fld
fdivrp
shr
je
lea
fld
fdivrp
jmp
fstp
fld
jmp
fstp
fldz
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
or
add
add
add
push
ret
cmovo
add
add
add
adc
add
add
adc
add
add
mov
add
add
sub
sbb
add
add
add
add
add
inc
mov
mov
add
adc
add
add
sub
test
add
sub
mov
xor
add
add
leave
sbb
add
cs
add
inc
jbe
imul
cmp
add
mov
(bad)
mov
inc
add
bound
inc
add
xlat
fadd
nop
lods
outs
xor
xchg
add
test
in
int3
into
sbb
ror
mov
push
pop
test
enter
mov
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
rol
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
(bad)
div
jl
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
add
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
mov
popa
mov
fsub
addr16
repz
mov
sub
and
and
outs
bound
xor
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzx
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
push
mov
mov
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
movzx
and
movzx
and
or
mov
mov
pop
ret
push
add
inc
add
add
push
add
pop
add
outs
add
ins
add
outs
add
add
add
add
imul
push
add
add
push
add
dec
add
jae
imul
add
ins
add
add
add
add
jecxz
fldcw
ret
mov
mov
jmp
ret
push
push
mov
mov
mov
add
mov
call
pop
pop
ret
lea
push
mov
mov
call
call
mov
mov
call
pop
ret
mov
push
mov
mov
call
mov
call
pop
ret
nop
add
mov
ret
mov
test
je
add
call
test
je
call
pop
add
ret
call
test
jle
call
ret
nop
test
je
mov
mov
call
ret
push
push
push
mov
mov
stos
mov
xor
push
shr
dec
rep
pop
and
rep
mov
mov
mov
test
je
push
mov
test
je
mov
jmp
cmp
je
pop
mov
add
mov
test
je
mov
mov
add
dec
jne
cmp
jne
pop
pop
pop
ret
mov
push
push
mov
mov
mov
mov
mov
test
je
call
mov
test
jne
mov
call
pop
pop
ret
nop
cmp
sete
ret
mov
ret
lea
push
push
mov
mov
test
je
mov
mov
call
test
jne
xor
pop
pop
ret
mov
pop
pop
ret
lea
push
xchg
jmp
mov
mov
test
je
movzx
push
add
repnz
je
pop
mov
test
jne
pop
ret
pop
add
sub
mov
pop
ret
mov
jmp
mov
cmp
je
mov
test
jne
ret
mov
ret
nop
mov
ret
mov
push
push
mov
mov
mov
mov
call
pop
pop
ret
mov
ret
lea
ret
lea
ret
lea
push
mov
or
je
cmp
jae
push
mov
call
pop
je
mov
pop
jmp
pop
mov
jmp
ret
nop
push
push
push
test
jl
call
xor
lea
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
jmp
mov
mov
test
je
mov
mov
push
call
pop
call
call
ret
lea
mov
call
ret
mov
push
mov
push
push
push
push
mov
xor
push
push
push
mov
mov
mov
call
mov
pop
add
jmp
jmp
mov
mov
call
call
call
pop
pop
pop
pop
pop
ret
mov
test
jg
ret
push
push
mov
call
pop
pop
ret
nop
call
mov
test
je
xor
mov
mov
call
ret
nop
push
push
mov
cmp
je
cmp
je
mov
mov
call
mov
xor
call
pop
pop
ret
nop
mov
add
mov
add
sub
mov
ret
nop
cmp
jbe
push
push
push
push
call
ret
nop
cmp
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmp
jbe
push
push
jmp
ret
nop
cmp
jbe
push
push
jmp
ret
lea
test
je
mov
cmp
je
cmp
jne
movsx
inc
inc
jmp
add
add
ret
mov
cmp
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmp
jbe
push
push
push
push
push
call
pop
ret
push
push
cmp
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
test
jne
cmp
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmp
je
call
cmp
jbe
cmp
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmp
jbe
cmp
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
or
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
push
mov
mov
mov
mov
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
test
jne
cmp
je
cld
call
mov
test
je
call
test
jne
jmp
mov
mov
mov
push
push
push
push
mov
mov
lea
mov
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
cmp
jne
mov
mov
xor
mov
cmp
jne
inc
inc
call
je
mov
mov
test
jne
add
dec
jne
pop
pop
pop
pop
jmp
mov
cmp
mov
mov
je
call
mov
call
cmp
jbe
cmp
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
cmp
jbe
cmp
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
xor
mov
push
push
push
push
mov
or
push
push
push
push
push
call
pop
mov
call
push
mov
mov
mov
mov
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
test
je
push
xor
push
push
push
push
push
push
mov
mov
mov
mov
push
push
push
push
mov
call
push
mov
mov
mov
mov
add
call
call
call
mov
mov
mov
add
xor
pop
pop
pop
mov
pop
pop
pop
pop
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
test
je
mov
mov
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
or
jne
mov
call
pop
push
push
push
push
push
push
push
mov
push
push
push
push
push
mov
test
je
push
push
push
push
push
push
push
push
push
push
push
call
mov
pop
pop
test
je
mov
push
push
push
mov
call
add
jmp
ret
lea
mov
mov
call
mov
mov
mov
mov
and
cmp
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
movzx
mov
call
pop
ret
mov
mov
test
jne
cmp
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmp
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
push
xor
lea
mov
mov
mov
mov
mov
pop
mov
ret
lea
mov
xor
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
mov
push
mov
push
push
push
mov
test
je
mov
mov
xor
push
push
push
mov
test
jle
dec
mov
mov
test
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
test
je
mov
xor
mov
mov
xor
push
push
push
mov
cmp
jle
mov
mov
inc
mov
test
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
ret
nop
mov
mov
mov
xor
mov
mov
mov
mov
mov
call
mov
call
ret
lea
push
mov
push
push
push
mov
mov
xor
push
push
push
mov
lea
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
xor
push
push
push
mov
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
nop
push
push
mov
mov
mov
mov
call
pop
pop
ret
mov
push
xor
push
push
mov
lea
mov
mov
mov
add
mov
test
je
dec
je
dec
je
int3
call
jmp
call
jmp
call
add
dec
jne
pop
pop
pop
ret
lea
push
xor
push
push
mov
lea
mov
mov
mov
add
mov
add
dec
jne
pop
pop
pop
ret
in
add
(bad)
(bad)
(bad)
call
add
add
xor
xor
inc
inc
inc
inc
inc
inc
add
add
push
push
push
mov
mov
mov
mov
mov
cdq
idiv
add
movzx
mov
mov
mov
cdq
idiv
mov
dec
test
jne
mov
mov
mov
and
inc
mov
movzx
movzx
mov
mov
mov
xor
div
mov
dec
test
jne
pop
pop
pop
ret
lea
mov
mov
mov
push
push
mov
mov
rep
pop
pop
xor
xchg
neg
sbb
inc
leave
ret
ret
nop
push
cmp
je
cmp
jne
cmp
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmp
jne
push
push
push
push
call
pop
ret
add
add
add
(bad)
(bad)
inc
add
add
push
push
push
mov
mov
cmp
je
call
call
xor
mov
cmp
je
call
cmp
jne
mov
call
mov
call
cmp
jne
cmp
je
mov
mov
xor
mov
call
cmp
jne
cmp
jne
cmp
jne
xor
mov
call
mov
test
je
mov
call
call
mov
test
jne
call
cmp
jbe
cmp
je
mov
test
je
mov
call
mov
mov
mov
cmp
je
test
je
push
call
mov
call
cmp
jne
call
cmp
je
mov
call
cmp
jne
cmp
je
call
mov
push
call
mov
push
mov
mov
mov
rep
pop
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
pop
jmp
ret
mov
test
je
mov
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
mov
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
cmp
je
mov
jmp
mov
inc
jg
push
push
mov
movzx
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
jo
and
push
push
call
pop
pop
mov
add
pop
mov
mov
test
jne
mov
mov
mov
mov
ret
jmp
xor
ret
mov
push
mov
push
mov
test
jne
mov
push
push
push
push
mov
push
push
push
push
call
pop
pop
ret
lea
push
mov
push
push
mov
push
push
push
mov
push
call
pop
ret
lea
mov
movzx
call
ret
nop
mov
call
ret
push
mov
mov
call
mov
pop
ret
mov
mov
test
je
mov
sub
cmp
je
mov
call
mov
mov
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
cmp
jg
mov
call
jmp
test
jne
movzx
mov
push
movzx
push
mov
xor
xor
call
mov
mov
xor
mov
call
test
jle
mov
push
movzx
push
mov
mov
mov
call
mov
sub
mov
jmp
mov
call
pop
pop
pop
pop
pop
pop
ret
mov
xchg
push
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
add
add
add
mov
pop
sub
shr
jmp
ret
lea
test
je
push
xor
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
pop
sub
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
add
(bad)
(bad)
(bad)
inc
add
add
mov
ret
mov
test
je
cmp
je
push
call
pop
mov
mov
dec
je
push
mov
mov
movzx
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
push
push
push
mov
mov
mov
xor
test
jle
mov
test
je
cmp
je
push
mov
mov
mov
call
pop
mov
mov
xchg
cmp
jne
sub
add
jo
push
mov
call
pop
add
mov
mov
mov
test
je
push
mov
call
pop
jmp
jmp
mov
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
pop
ret
nop
mov
jmp
ret
test
je
push
push
call
test
je
ret
lea
xchg
test
je
push
call
ret
lea
mov
test
je
mov
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
mov
push
call
add
dec
jne
pop
pop
ret
lea
cmp
je
test
je
mov
shr
je
push
push
push
call
test
je
ret
push
mov
add
push
add
push
push
push
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
mov
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
lea
mov
mov
call
push
mov
push
mov
call
mov
mov
call
mov
test
jge
xor
mov
mov
call
pop
pop
pop
mov
pop
ret
lea
push
mov
push
call
pop
ret
nop
test
je
push
push
push
call
test
je
pop
push
mov
call
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
test
je
mov
cmp
jne
xchg
push
movzx
xchg
jmp
jmp
jmp
ret
test
je
ret
nop
add
mov
ret
mov
push
push
push
push
mov
mov
xor
test
jle
mov
call
mov
mov
mov
mov
mov
test
je
sub
mov
shr
test
jle
cmp
jge
mov
mov
add
mov
mov
call
mov
mov
call
pop
pop
pop
pop
ret
lea
jmp
ret
mov
jmp
ret
mov
jmp
ret
mov
test
je
cmp
je
jmp
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
shl
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
je
cmp
je
jmp
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
je
ret
mov
ret
nop
push
mov
add
push
add
push
push
push
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
mov
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
lea
mov
mov
call
push
mov
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
pop
pop
pop
mov
pop
ret
push
mov
push
call
pop
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
shl
call
mov
call
mov
pop
pop
pop
ret
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
add
add
add
mov
pop
sub
shr
jmp
ret
lea
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
lea
xor
test
je
cmp
je
movzx
xchg
push
mov
jmp
jmp
jmp
ret
xchg
push
xor
test
je
cmp
je
mov
jmp
pop
xchg
jmp
ret
nop
xor
test
je
mov
shr
jmp
ret
lea
xor
test
je
mov
cmp
jne
jmp
xchg
push
movzx
xchg
jmp
ret
nop
test
je
sub
mov
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmp
je
push
mov
mov
call
pop
mov
mov
xchg
cmp
jne
sub
add
jo
add
jo
push
mov
call
pop
add
mov
mov
mov
test
je
push
mov
call
pop
jmp
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
shl
call
mov
call
mov
pop
pop
pop
ret
nop
test
je
mov
test
je
push
push
push
mov
mov
cmp
je
cmp
je
call
mov
mov
push
cmp
je
mov
mov
mov
call
mov
call
mov
mov
mov
mov
add
test
jne
mov
call
mov
mov
mov
shl
add
shl
call
mov
mov
test
je
call
pop
pop
pop
pop
ret
cmp
je
mov
xor
call
mov
mov
mov
mov
shl
test
jne
call
mov
mov
push
jmp
jmp
ret
nop
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
push
push
cmp
je
mov
mov
call
mov
call
mov
cmp
je
mov
mov
call
lea
call
mov
mov
add
test
jne
call
mov
mov
mov
mov
shl
call
mov
mov
shl
mov
shl
add
call
mov
or
je
mov
mov
call
pop
pop
pop
mov
test
je
dec
call
pop
pop
pop
ret
mov
jmp
mov
jmp
jmp
ret
nop
push
mov
push
push
push
push
push
push
mov
xor
push
mov
test
je
cmp
je
mov
mov
call
mov
lea
call
mov
mov
mov
mov
cmp
jne
mov
mov
dec
jmp
xor
jmp
xor
jmp
push
mov
test
je
cmp
je
mov
mov
mov
call
mov
lea
call
mov
mov
mov
mov
add
test
jne
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
call
mov
push
shl
add
dec
jmp
call
push
mov
mov
test
je
mov
test
je
mov
shl
add
call
dec
jne
mov
mov
neg
lea
call
pop
mov
test
jne
test
je
dec
call
mov
lea
pop
pop
pop
pop
pop
pop
pop
pop
lea
jmp
jmp
ret
lea
push
mov
push
push
push
push
mov
mov
mov
mov
call
xor
push
push
push
mov
mov
test
je
mov
sub
cmp
je
lea
mov
call
test
je
sub
mov
cmp
jge
xor
jmp
dec
cmp
jge
mov
test
jge
xor
jmp
mov
sub
cmp
jge
mov
cmp
je
mov
sub
movzx
jmp
mov
movzx
cmp
jne
mov
add
add
mov
mov
call
jmp
mov
add
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
call
xor
push
push
push
mov
mov
test
je
mov
sub
cmp
je
lea
mov
call
test
je
sub
mov
mov
test
jle
mov
test
je
mov
sub
cmp
je
mov
mov
call
test
je
sub
mov
mov
cmp
jge
xor
mov
jmp
dec
cmp
jge
mov
mov
cmp
sete
lea
mov
cmp
jge
call
mov
mov
call
cmp
jle
mov
add
mov
lea
mov
mov
lea
sub
mov
add
call
cmp
je
mov
mov
lea
mov
add
call
jmp
mov
mov
lea
mov
add
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
mov
test
je
cmp
je
push
call
pop
mov
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
shl
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
nop
jmp
ret
mov
test
jle
push
add
jo
add
jo
call
add
pop
mov
mov
mov
mov
movzx
mov
ret
jmp
xor
ret
lea
xor
push
mov
push
push
mov
lea
mov
test
je
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmp
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
nop
mov
jmp
ret
nop
cmp
je
call
ret
mov
call
ret
push
push
push
push
mov
mov
xor
mov
lea
mov
xor
mov
test
je
push
mov
sub
jle
mov
add
add
call
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
add
call
mov
jmp
mov
add
call
mov
jmp
mov
add
call
mov
jmp
lea
add
call
mov
jmp
xor
mov
push
push
mov
mov
lea
add
call
pop
jmp
xor
mov
mov
push
mov
lea
add
call
pop
jmp
mov
add
call
mov
jmp
mov
mov
add
call
mov
add
add
dec
jne
pop
sub
jle
lea
add
call
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
xor
mov
lea
mov
mov
mov
mov
push
call
add
add
dec
jne
jmp
mov
mov
mov
call
xor
mov
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
mov
call
add
add
dec
jne
pop
pop
pop
pop
ret
ret
lea
push
call
pop
call
ret
lea
mov
jmp
ret
push
push
mov
mul
mov
mov
mul
add
mov
mul
add
pop
pop
ret
ret
test
je
mov
ret
call
dec
ret
nop
push
mov
push
call
pop
ret
nop
jmp
ret
mov
call
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
jg
test
jge
mov
call
mov
mov
call
jmp
xor
mov
test
je
sub
mov
mov
sub
movzx
add
mov
mov
mov
mov
test
je
mov
jmp
xor
mov
imul
mov
mov
cdq
idiv
cmp
je
mov
call
add
cmp
jge
mov
call
test
je
cmp
jne
mov
cmp
jge
test
je
mov
add
mov
imul
add
mov
sub
mov
call
lea
mov
call
mov
jmp
dec
mov
call
mov
mov
mov
cmp
jge
mov
test
je
mov
imul
mov
add
xor
call
mov
push
mov
mov
mov
add
mov
call
jmp
mov
imul
mov
add
mov
mov
call
mov
add
mov
add
mov
sub
imul
mov
imul
add
xor
call
cmp
jle
add
dec
dec
test
jl
inc
mov
mov
push
mov
lea
mov
mov
call
inc
dec
jne
mov
mov
pop
pop
pop
mov
pop
ret
push
add
call
ret
nop
mov
test
je
mov
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
mov
test
je
lock
test
je
lock
jne
push
push
mov
inc
call
pop
pop
mov
pop
ret
nop
push
push
add
mov
cmp
jne
push
lea
push
mov
push
call
mov
mov
call
mov
mov
test
jne
mov
mov
mov
add
pop
pop
ret
nop
push
push
push
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
mov
call
mov
jmp
mov
test
jne
mov
mov
pop
pop
pop
ret
nop
push
push
mov
jmp
push
call
mov
movzx
test
je
cmp
jne
mov
pop
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
push
call
mov
cmp
je
push
mov
push
call
mov
test
je
push
lea
push
mov
push
call
test
je
mov
push
lea
push
mov
push
call
jmp
mov
cmp
jne
mov
cmp
jne
mov
add
call
mov
cmp
je
lea
call
mov
cmp
je
jmp
mov
add
mov
sub
sar
jns
adc
lea
push
mov
push
lea
push
call
jmp
lea
call
mov
mov
sub
sar
jns
adc
add
inc
cmp
jg
mov
sub
sar
jns
adc
inc
push
push
lea
mov
add
add
push
call
lea
push
lea
push
call
mov
cmp
je
mov
push
call
lea
push
call
lea
add
inc
cmp
jg
mov
mov
sub
dec
push
lea
push
lea
mov
add
add
add
push
call
lea
push
call
inc
add
mov
cmp
jne
mov
push
lea
push
mov
push
call
mov
pop
pop
pop
mov
pop
ret
add
imul
add
outs
add
ins
add
add
add
add
add
add
add
je
outs
outs
addr16
popa
je
dec
popa
ins
gs
add
add
push
mov
add
push
push
mov
push
lea
push
push
call
mov
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
jne
xor
push
push
push
mov
mov
lea
mov
call
lea
push
lea
push
push
push
lea
push
mov
push
call
test
je
lea
push
lea
push
push
push
push
mov
push
call
test
je
mov
mov
sar
jns
adc
mov
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
push
mov
push
lea
push
call
push
lea
push
push
call
push
call
xor
cmp
je
cmp
jne
cmp
je
lea
push
call
mov
add
lea
add
jmp
sub
cmp
je
lea
cmp
jne
lea
cmp
je
add
cmp
je
mov
sub
sar
jns
adc
mov
sub
push
lea
push
push
call
push
push
lea
push
call
mov
test
jne
cmp
je
lea
mov
sub
sar
jns
adc
mov
sub
push
lea
push
push
call
push
push
lea
push
call
mov
test
jne
mov
lea
mov
sub
sar
jns
adc
mov
sub
push
lea
push
push
call
push
push
lea
push
call
mov
mov
pop
pop
mov
pop
ret
push
add
data16
add
jb
add
add
add
inc
add
popa
add
pop
add
add
popa
add
add
add
push
add
data16
add
jb
add
add
jb
ins
add
outs
add
add
add
popa
add
add
add
add
push
add
data16
add
jb
add
add
jb
ins
add
outs
add
add
add
add
imul
outs
add
popa
add
add
add
add
add
push
mov
mov
call
mov
mov
mov
mov
pop
ret
nop
push
push
push
push
mov
mov
test
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
jmp
mov
test
je
mov
test
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
jmp
mov
test
jne
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
cmp
je
xor
push
push
push
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmp
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
push
mov
xor
push
push
push
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
test
je
mov
cmp
jne
mov
mov
mov
jmp
mov
test
jne
ret
jmp
jmp
pop
pop
ret
mov
mov
test
je
mov
push
push
mov
call
pop
ret
lea
test
je
push
push
mov
push
call
pop
mov
pop
test
jne
ret
mov
push
call
ret
mov
test
mov
je
mov
push
call
ret
push
mov
push
push
push
mov
mov
mov
xor
test
je
test
je
test
jbe
push
push
mov
push
push
push
push
call
test
jbe
cmp
jb
cmp
je
cmp
jne
cmp
jbe
cmp
jb
cmp
ja
dec
jmp
inc
mov
jmp
push
push
mov
push
push
push
push
call
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
mov
mov
xor
push
push
push
mov
mov
xor
call
cmp
je
movzx
lea
mov
call
push
mov
call
lea
lea
call
mov
test
jle
mov
dec
lea
call
jmp
lea
xor
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
ret
nop
push
push
mov
mov
mov
mov
call
pop
pop
ret
mov
push
push
push
mov
add
push
dec
jne
mov
add
mov
mov
test
je
cmp
jge
push
lea
push
mov
push
mov
mov
call
push
call
mov
mov
mov
call
jmp
mov
mov
call
add
pop
pop
ret
mov
jmp
mov
add
push
call
mov
add
ret
lea
call
mov
and
and
shr
cmp
jne
cmp
jae
cmp
jbe
mov
ret
mov
ret
mov
push
mov
xor
push
push
push
mov
inc
jne
mov
call
mov
call
mov
call
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmp
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
push
mov
mov
mov
push
push
push
call
pop
pop
pop
ret
lea
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
push
push
mov
mov
xor
push
push
push
mov
mov
shr
jne
push
push
call
mov
jmp
lea
mov
mov
call
mov
call
push
push
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
mov
call
mov
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
mov
inc
jne
cmp
je
mov
push
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
jmp
mov
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
dec
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
ins
inc
add
ins
inc
add
ins
inc
add
add
cmp
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
add
add
add
add
add
adc
add
add
or
arpl
je
outs
outs
dec
ins
inc
add
add
add
js
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
inc
bound
je
mov
inc
add
add
js
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
cdq
inc
add
cwde
inc
add
cdq
inc
add
cdq
inc
add
inc
dec
gs
jo
js
gs
imul
add
inc
add
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
cdq
inc
add
cwde
inc
add
cdq
inc
add
cdq
inc
add
dec
gs
outs
jb
lea
xchg
outs
inc
add
add
js
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
dec
outs
dec
jne
inc
jb
outs
jb
outs
inc
add
outs
inc
add
add
add
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
inc
js
gs
popa
ins
mov
ins
outs
inc
add
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
inc
js
gs
popa
ins
inc
js
gs
imul
add
outs
inc
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
dec
outs
je
jb
outs
jb
ror
push
jo
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
inc
imul
outs
nop
mov
add
add
jo
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
push
popa
outs
addr16
jb
outs
jb
jno
add
inc
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
jbe
jb
ins
outs
ja
inc
add
add
pushf
jno
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
dec
popa
je
inc
jb
outs
jb
add
add
jb
add
add
add
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
dec
outs
jbe
ins
imul
add
add
add
add
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
pop
gs
inc
imul
inc
add
jb
add
add
add
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
dec
jbe
jb
ins
outs
ja
rol
dec
jae
add
add
add
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
push
outs
fs
ins
outs
ja
mov
inc
add
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
cdq
inc
add
cwde
inc
add
cdq
inc
add
cdq
inc
add
inc
dec
outs
jbe
ins
imul
jb
je
add
je
add
add
js
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
ins
imul
add
add
add
add
add
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
jbe
jb
inc
jb
outs
jb
rol
inc
add
jne
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
inc
arpl
jae
push
imul
outs
lea
je
inc
add
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
push
jb
jbe
ins
gs
loopne
inc
add
jne
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
push
je
arpl
jbe
jb
ins
outs
ja
push
jbe
add
inc
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
inc
outs
outs
je
outs
ins
inc
mov
mov
add
add
jbe
add
add
js
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
imul
outs
jb
shr
add
inc
add
add
js
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
inc
jae
gs
imul
gs
mov
add
add
add
add
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
inc
bound
jb
arpl
jb
jb
adc
add
js
add
add
js
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
dec
outs
je
inc
popa
jae
inc
jb
outs
jb
cmp
mov
add
add
js
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
push
popa
data16
ins
inc
js
gs
imul
add
js
add
add
js
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
dec
outs
outs
imul
jns
add
inc
add
add
pushf
js
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
imul
inc
js
gs
imul
inc
add
jns
add
add
pushf
js
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
dec
outs
dec
outs
outs
imul
outs
jb
inc
js
gs
imul
add
add
cmp
add
add
adc
dec
add
add
adc
or
jae
je
ins
jae
shl
add
add
xor
sbb
inc
add
add
sbb
inc
add
push
jns
push
je
ins
jae
shl
(bad)
inc
add
add
add
lods
jp
add
jp
add
add
add
adc
and
inc
add
cmp
pushf
cmp
xchg
cmp
mov
inc
add
cmp
mov
inc
add
inc
add
inc
add
inc
add
xor
sbb
inc
add
xor
sbb
inc
add
xor
sbb
inc
add
push
inc
outs
arpl
imul
push
mov
mov
mov
push
push
mov
mov
mov
call
call
pop
pop
pop
ret
mov
test
jne
test
je
mov
neg
ret
test
jne
mov
ret
push
push
push
push
push
cmp
je
push
mov
lea
call
pop
mov
cmp
je
push
lea
call
pop
mov
mov
mov
sub
sbb
and
add
lea
add
add
neg
je
mov
mov
cmp
je
cmp
je
and
and
cmp
jl
cmp
jg
sub
cmp
jl
cmp
jg
sub
sub
jne
mov
mov
and
and
cmp
je
shr
shr
cmp
jl
cmp
jg
sub
cmp
jl
cmp
jg
sub
sub
jne
add
jl
mov
mov
mov
or
je
push
mov
mov
call
pop
add
pop
pop
pop
ret
lea
or
jne
or
jns
neg
call
mov
mov
sub
inc
ret
mov
push
push
xor
div
add
sub
cmp
jb
add
mov
or
jne
pop
pop
sub
shr
sub
jbe
add
sub
mov
sub
jmp
mov
dec
jne
mov
ret
or
jne
mov
test
je
push
push
mov
neg
adc
neg
call
inc
mov
sub
add
ret
push
sub
fnstcw
fnstcw
or
fldcw
mov
fld1
test
je
push
push
and
push
push
fild
fild
fadd
faddp
add
jmp
fild
fild
fld
sub
fprem
fistp
fdivr
mov
add
cmp
jb
add
mov
fld
fcom
fstsw
sahf
jae
fldcw
add
ffree
ffree
ffree
ffree
pop
sub
shr
or
js
sub
jbe
sub
mov
sub
add
jmp
mov
dec
jne
mov
ret
nop
or
jne
mov
test
je
push
push
mov
neg
adc
neg
call
mov
dec
inc
add
ret
push
sub
fnstcw
fnstcw
or
fldcw
mov
fld1
test
je
push
push
and
push
push
fild
fild
fadd
faddp
add
jmp
fild
fild
fld
dec
fprem
fistp
fdivr
mov
add
cmp
jb
add
mov
fld
fcom
fstsw
sahf
jae
fldcw
add
ffree
ffree
ffree
ffree
pop
sub
sub
jbe
sub
mov
add
jmp
mov
dec
jne
mov
ret
nop
push
mov
push
mov
sub
xor
push
xor
lea
call
mov
pop
call
add
pop
pop
ret
mov
push
push
mov
mov
call
cmp
je
mov
pop
pop
ret
mov
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
in
add
push
push
push
mov
mov
mov
call
xor
push
push
push
mov
mov
test
je
mov
sub
cmp
je
lea
mov
call
test
je
sub
mov
mov
mov
call
mov
test
jle
mov
test
je
mov
sub
cmp
je
lea
mov
call
mov
cmp
je
mov
test
je
mov
sub
cmp
je
lea
mov
call
mov
movzx
mov
call
test
jne
dec
test
jg
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
pop
ret
push
push
push
mov
mov
mov
mov
call
mov
push
lea
mov
mov
call
pop
pop
pop
ret
add
add
(bad)
(bad)
inc
add
add
add
add
add
in
add
push
mov
test
jne
xor
lea
push
lea
push
lea
push
lea
push
push
call
mov
mov
imul
xor
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
nop
cmp
je
mov
neg
mov
add
test
jne
lea
shr
ret
xor
ret
nop
cmp
je
mov
neg
mov
add
test
jne
sub
ret
ret
mov
push
mov
add
xchg
call
mov
pop
ret
nop
push
push
push
push
push
mov
mov
mov
mov
mov
call
mov
cmp
jae
mov
mov
add
mov
mov
call
mov
mov
pop
pop
pop
pop
pop
ret
lea
push
push
push
add
mov
mov
mov
xor
cmp
jae
movzx
movzx
mov
add
sub
jae
xor
mov
add
sub
jae
xor
cmp
jne
test
jne
movzx
movzx
sub
mov
jmp
add
add
inc
cmp
jb
xor
mov
mov
pop
pop
pop
pop
pop
ret
jmp
test
jne
xor
ret
add
movzx
cmp
jne
ret
mov
push
test
jne
call
mov
jmp
xor
jmp
test
je
add
movzx
cmp
jne
mov
add
jmp
mov
pop
ret
mov
push
push
mov
mov
mov
mov
call
pop
pop
ret
mov
push
push
add
mov
mov
cmp
jbe
mov
mov
mov
call
mov
mov
mov
mov
lea
mov
xor
call
add
pop
pop
ret
lea
push
mov
push
mov
push
mov
push
mov
push
call
pop
pop
ret
mov
push
mov
push
push
push
mov
mov
mov
test
je
test
je
mov
call
push
mov
push
mov
push
mov
mov
mov
call
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
push
mov
xchg
xchg
call
pop
ret
nop
push
mov
push
mov
add
push
dec
jne
mov
add
push
push
push
mov
mov
mov
mov
call
xor
push
push
push
mov
mov
mov
test
je
mov
sub
cmp
je
lea
mov
call
test
je
sub
mov
cmp
jge
mov
test
je
mov
sub
cmp
je
lea
mov
call
test
je
sub
mov
push
mov
push
mov
push
mov
lea
mov
call
mov
jmp
mov
test
je
mov
sub
cmp
je
lea
mov
call
test
je
sub
mov
mov
mov
mov
dec
cmp
jg
jmp
add
mov
xor
call
mov
mov
call
mov
test
je
mov
sub
cmp
je
lea
mov
call
mov
mov
test
je
sub
mov
push
mov
push
mov
push
mov
mov
call
mov
mov
dec
call
mov
mov
dec
cmp
jle
mov
mov
call
jmp
lea
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
push
push
mov
mov
mov
xor
push
push
push
mov
lea
mov
call
lea
mov
mov
call
lea
mov
call
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
mov
push
mov
cmp
je
mov
mov
call
pop
ret
mov
call
pop
ret
lea
push
mov
push
movzx
push
mov
push
mov
push
call
pop
pop
ret
nop
push
mov
add
push
xor
mov
push
push
push
mov
mov
xor
mov
mov
lea
mov
xor
mov
mov
or
je
cmp
je
lods
cmp
je
stos
dec
jne
mov
sub
shr
jmp
cmp
je
lods
cmp
je
lea
mov
mov
cmp
jne
cmp
je
lods
call
cmp
jne
mov
cmp
je
lods
jmp
mov
mov
cmp
jne
cmp
je
lods
call
mov
mov
push
push
call
pop
mov
sub
jae
xor
cmp
jne
sub
jae
add
xor
rep
xchg
sub
jae
add
xor
mov
rep
xchg
sub
jae
add
xor
rep
pop
mov
jmp
xor
cmp
je
cmp
jb
cmp
ja
imul
sub
movzx
add
cmp
je
lods
jmp
pop
jmp
mov
cmp
jg
inc
mov
cmp
mov
je
xor
cmp
je
lods
ret
and
mov
mov
mov
cmp
jg
inc
mov
lea
mov
movzx
jmp
push
xchg
or
inc
add
xchg
push
xchg
or
inc
add
xchg
lock
xchg
inc
add
xchg
xchg
and
inc
add
shr
add
add
fsubr
rcl
jmp
jnp
(bad)
dec
loopne
cli
and
xor
mov
sub
je
mov
cmp
je
mov
cmp
je
jmp
lea
mov
mov
cmp
jbe
xor
sub
je
mov
cmp
je
mov
cmp
je
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
ret
cmp
jne
cmp
jbe
mov
lea
call
mov
jmp
xor
ret
cmp
jne
movzx
inc
mov
jmp
mov
jmp
mov
cmp
jne
add
mov
lea
push
mov
call
pop
mov
jmp
cmp
jne
mov
or
je
mov
jmp
cmp
jne
mov
or
je
mov
shr
cmp
ja
ret
mov
ret
cmp
jne
mov
push
mov
xor
mov
jecxz
repnz
jne
dec
dec
mov
sub
shr
pop
ret
cmp
jne
mov
mov
lea
jmp
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
jbe
mov
cmp
jne
movzx
jmp
mov
mov
cmp
jbe
mov
push
push
push
lea
mov
movzx
mov
call
mov
lea
lea
mov
call
mov
or
je
mov
shr
ret
push
push
lea
mov
call
pop
pop
ret
call
pop
pop
pop
pop
mov
pop
ret
nop
push
xor
stos
cmp
je
xor
stos
or
jne
xor
jmp
or
jge
mov
neg
jmp
or
je
mov
stos
cmp
je
xor
stos
xchg
push
push
mov
sub
push
xor
div
add
mov
inc
dec
or
jne
or
jg
pop
pop
dec
mov
stos
cmp
je
xor
stos
cmp
jne
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jge
mov
cmp
jle
mov
mov
push
mov
cmp
jb
mov
push
lea
call
mov
movzx
sub
cmp
jae
mov
call
shl
lea
mov
rep
jmp
lea
movzx
cmp
je
cmp
ja
movsx
cmp
jle
mov
lea
mov
call
mov
sub
shr
pop
pop
pop
jmp
mov
inc
add
mov
pop
mov
pop
mov
(bad)
mov
dec
add
inc
add
inc
add
lods
or
jne
mov
dec
xor
ret
cmp
je
mov
stos
ret
call
movsx
xor
cmp
jg
cmp
jl
or
jg
mov
stos
cmp
je
mov
stos
neg
mov
rep
jmp
mov
inc
lods
or
je
xor
stos
loop
lods
or
je
xor
shl
mov
stos
lods
or
je
xor
stos
jmp
mov
rep
or
je
xor
jmp
ret
call
call
stos
mov
stos
mov
dec
call
stos
loop
mov
mov
cmp
jbe
xor
mov
mov
mov
movsx
dec
call
ret
call
mov
cmp
jb
mov
movsx
or
jg
mov
stos
jmp
xor
cmp
je
mov
dec
mov
div
mov
inc
call
stos
dec
je
dec
jne
mov
test
je
stos
mov
jmp
or
je
mov
test
je
stos
jecxz
mov
stos
dec
je
inc
jne
call
stos
dec
jne
ret
xor
mov
mov
cmp
je
mov
mov
cmp
jbe
mov
add
lea
mov
mov
cmp
je
push
push
cmp
je
cmp
je
xor
stos
jmp
call
jmp
call
pop
pop
inc
loop
ret
push
mov
test
je
mov
rep
pop
ret
and
inc
inc
inc
sub
inc
inc
and
sub
sub
and
inc
sub
sub
and
inc
inc
and
sub
and
sub
and
inc
sub
sub
and
inc
inc
sub
sub
sub
and
inc
and
sub
sub
sub
and
sub
sub
and
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
cmp
je
call
jmp
call
jmp
mov
mov
and
je
cmp
jne
test
je
cmp
jne
cmp
je
inc
xor
mov
jmp
fld
sub
imul
sar
inc
mov
mov
sub
fabs
push
mov
call
pop
frndint
mov
fld
fcomp
fstsw
fwait
test
je
fidiv
inc
fbstp
lea
mov
fwait
mov
mov
shr
and
add
stos
dec
jne
xor
stos
mov
add
jns
xor
jmp
cmp
jb
mov
cmp
jae
cmp
jb
mov
dec
js
inc
cmp
ja
jmp
mov
inc
jmp
mov
mov
dec
js
cmp
je
mov
mov
shr
mov
mov
ret
xor
jmp
or
add
add
add
add
add
daa
add
mov
mov
mov
or
je
or
jns
neg
neg
sbb
xor
mov
or
jge
xor
cmp
jl
mov
inc
sub
sbb
jae
dec
add
adc
mov
mov
fild
mov
mov
sub
je
mov
fidiv
fbstp
lea
fwait
or
jne
mov
mov
mov
shr
jne
mov
and
jne
dec
jne
jmp
mov
add
stos
mov
mov
mov
shr
add
stos
mov
and
add
stos
dec
jne
mov
lea
sub
mov
dec
cmp
je
mov
shr
jmp
xor
xor
mov
mov
mov
ret
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
push
lea
push
push
push
call
test
jle
mov
dec
lea
mov
call
jmp
mov
mov
call
pop
pop
mov
pop
ret
mov
push
push
push
push
mov
mov
mov
push
lea
push
push
push
call
test
jle
movzx
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
mov
mov
mov
mov
push
mov
mov
xor
mov
call
cmp
jne
mov
mov
mov
call
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
push
push
push
push
push
push
xor
push
push
push
mov
call
mov
mov
mov
mov
push
push
lea
push
mov
mov
dec
lea
dec
call
pop
mov
mov
call
push
push
lea
push
mov
mov
dec
lea
dec
call
pop
mov
mov
call
inc
add
add
cmp
jne
mov
mov
mov
lea
mov
cdq
idiv
mov
push
push
lea
push
mov
mov
dec
mov
add
call
pop
mov
mov
call
push
push
lea
push
mov
mov
dec
mov
add
call
pop
mov
mov
call
inc
add
add
cmp
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
lea
push
mov
push
push
xor
mov
jmp
cmp
je
inc
cmp
jne
lea
mov
call
mov
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
xor
push
push
push
mov
xor
mov
jmp
cmp
je
inc
cmp
jne
lea
mov
call
mov
xor
call
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
push
push
xor
push
push
push
mov
lea
push
call
mov
mov
call
mov
mov
call
mov
mov
add
sub
jae
push
push
call
push
push
call
mov
mov
mov
add
dec
jne
push
push
call
push
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
add
in
xor
push
push
push
push
push
push
push
push
push
mov
mov
mov
call
xor
push
push
push
mov
mov
mov
xor
call
lea
push
call
mov
mov
call
mov
mov
call
add
sub
jb
mov
sub
je
add
sub
jb
xor
jmp
mov
test
je
jmp
mov
movzx
mov
sub
je
sub
je
lea
mov
call
mov
mov
call
inc
lea
call
call
cmp
jle
jmp
mov
mov
call
jmp
mov
test
je
mov
sub
cmp
je
lea
mov
call
mov
cmp
jb
cmp
ja
mov
mov
call
sar
jns
adc
mov
lea
push
mov
mov
mov
call
mov
mov
call
add
jmp
mov
mov
lea
mov
call
test
jne
mov
mov
call
inc
jmp
mov
mov
lea
mov
call
test
jne
mov
mov
call
add
jmp
mov
mov
lea
mov
call
test
jne
mov
mov
call
inc
jmp
mov
movzx
sub
je
sub
jne
mov
mov
call
jmp
lea
mov
movzx
call
mov
mov
call
inc
lea
call
call
cmp
jle
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
jns
jns
jns
jns
add
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
jns
jns
add
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
je
sub
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
xor
push
push
push
mov
push
lea
push
push
call
cmp
jne
push
lea
push
mov
push
call
test
jne
push
lea
push
mov
push
call
mov
call
mov
jmp
sub
mov
lea
mov
call
mov
add
lea
mov
call
mov
mov
mov
mov
call
test
je
mov
call
mov
mov
call
test
je
cmp
je
mov
push
lea
push
mov
mov
push
mov
call
push
call
lea
mov
call
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
mov
mov
call
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
add
add
add
add
add
xor
add
add
add
(bad)
(bad)
inc
adc
or
jae
je
ins
jae
rcl
add
push
push
xor
mov
xor
push
push
push
mov
push
lea
call
mov
mov
cmp
je
mov
call
call
push
push
push
push
push
lea
push
push
push
call
mov
push
lea
mov
mov
call
add
push
push
push
mov
push
push
lea
push
push
push
call
push
lea
push
push
mov
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
jmp
push
lea
push
mov
mov
push
mov
call
push
call
push
lea
push
lea
push
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
in
add
(bad)
(bad)
(bad)
inc
add
add
mov
push
mov
mov
mov
call
jmp
pop
ret
lea
pop
jmp
ret
nop
mov
call
ret
nop
push
push
push
test
je
add
call
mov
mov
mov
lea
mov
call
mov
test
je
call
pop
add
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
test
je
add
call
mov
mov
mov
xor
push
push
push
mov
lea
push
mov
mov
mov
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
test
je
call
pop
add
mov
pop
pop
pop
pop
pop
ret
push
push
push
test
je
add
call
mov
mov
mov
lea
mov
call
mov
test
je
call
pop
add
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
push
test
je
add
call
mov
mov
mov
xor
push
push
push
mov
lea
push
lea
mov
call
mov
mov
mov
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
test
je
call
pop
add
mov
pop
pop
pop
pop
pop
pop
ret
nop
push
push
call
mov
mov
lea
call
cmp
je
mov
call
xor
mov
mov
and
mov
call
test
jle
mov
call
pop
pop
ret
jmp
mov
mov
test
jne
ret
push
push
mov
mov
mov
call
cmp
je
mov
call
mov
mov
call
pop
pop
ret
mov
push
mov
cmp
je
call
mov
call
test
je
call
mov
pop
ret
nop
mov
ret
push
push
mov
mov
mov
xor
call
test
je
cmp
je
push
push
push
mov
mov
call
jmp
mov
mov
call
mov
test
jne
pop
pop
ret
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
inc
call
ret
mov
in
inc
add
or
jb
jb
arpl
add
add
add
add
adc
add
add
nop
push
push
add
xor
call
mov
jmp
inc
cmp
jg
cmp
jne
cmp
jg
mov
mov
mov
call
jmp
mov
mov
push
push
mov
mov
mov
call
mov
pop
pop
pop
pop
ret
mov
fs
js
gs
push
arpl
add
add
add
add
adc
add
add
push
mov
mov
dec
je
dec
je
dec
sub
jb
jmp
mov
jmp
mov
jmp
movzx
lea
mov
mov
mov
call
mov
jmp
call
mov
push
mov
jmp
pop
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
xor
push
push
push
mov
test
je
lea
mov
call
jmp
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
jmp
ret
mov
push
mov
call
lea
add
mov
call
pop
ret
mov
mov
mov
mov
call
call
ret
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
nop
push
mov
mov
call
movzx
mov
pop
ret
mov
push
mov
add
push
push
xor
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
mov
cmp
jne
lea
mov
call
jmp
lea
mov
call
mov
push
lea
push
mov
push
call
cmp
jne
push
lea
push
mov
push
call
test
je
mov
mov
mov
lea
lea
mov
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
pop
mov
pop
ret
mov
push
mov
add
push
xor
mov
mov
xor
push
push
push
mov
mov
call
movzx
mov
add
sub
jb
je
dec
sub
jae
lea
mov
mov
mov
call
mov
jmp
push
call
pop
mov
jmp
mov
mov
mov
mov
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
mov
mov
call
test
je
mov
mov
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
push
mov
mov
mov
mov
call
test
je
mov
mov
mov
call
pop
pop
ret
nop
call
mov
call
ret
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
lea
cmp
je
mov
mov
mov
mov
call
xor
mov
cmp
je
mov
mov
mov
call
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
call
test
je
call
mov
call
test
jne
call
push
call
pop
call
ret
nop
push
push
push
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
pop
pop
pop
ret
mov
push
push
mov
mov
test
je
mov
mov
mov
call
cmp
jne
mov
pop
pop
ret
mov
push
push
push
xor
mov
mov
cmp
jne
push
push
push
call
test
jne
cmp
jne
push
push
push
push
call
mov
mov
jmp
add
dec
jne
test
jne
push
push
push
push
call
mov
push
call
mov
pop
pop
pop
ret
mov
mov
mov
cmp
jne
push
lea
push
call
ret
add
dec
jne
push
call
ret
nop
push
mov
call
test
je
mov
xor
mov
mov
xchg
call
jmp
push
push
push
push
call
mov
push
call
mov
pop
ret
lea
push
mov
mov
call
test
jne
mov
call
mov
mov
xchg
call
pop
ret
nop
push
test
je
test
jne
xor
push
call
jmp
test
je
test
jne
push
push
call
mov
jmp
push
push
push
push
call
mov
mov
pop
ret
mov
mov
mov
ret
push
push
mov
mov
test
je
mov
cmp
je
mov
push
call
mov
mov
call
mov
test
jne
pop
pop
ret
push
push
mov
test
jl
inc
mov
push
push
push
call
test
jne
mov
push
call
add
dec
jne
pop
pop
ret
nop
push
mov
push
push
call
call
mov
push
push
call
call
mov
mov
call
pop
ret
mov
add
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
cmp
jne
mov
and
mov
jmp
mov
mov
mov
lea
mov
call
add
ret
mov
movzx
cmp
jb
cmp
ja
cmp
jb
cmp
ja
mov
ret
mov
ret
lea
push
mov
push
push
push
mov
mov
mov
call
xor
push
push
push
mov
mov
mov
test
je
mov
sub
cmp
je
lea
mov
call
movzx
cmp
jb
cmp
ja
mov
call
mov
add
add
sub
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
mov
call
ret
mov
push
mov
push
push
push
push
mov
add
push
push
call
xor
jmp
movzx
movzx
sub
jb
inc
mov
movzx
movzx
bts
inc
dec
jne
add
cmp
jge
movzx
or
jne
pop
pop
pop
pop
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
call
test
je
mov
test
je
mov
and
movzx
mov
movzx
shr
mov
mov
mov
mov
rep
cmp
jle
cmp
jne
mov
jmp
push
call
test
setne
mov
mov
mov
test
je
push
call
pop
pop
pop
pop
mov
pop
ret
add
in
mov
push
push
dec
jne
push
xor
push
push
push
mov
call
call
cmp
je
call
call
mov
lea
push
xor
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
xor
call
mov
lea
push
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
lea
xor
call
lea
xor
call
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
mov
call
jmp
lea
mov
call
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
mov
call
jmp
lea
mov
call
push
push
push
push
mov
mov
call
push
push
push
push
mov
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
das
add
add
jns
add
add
mov
add
(bad)
(bad)
(bad)
dec
add
ins
add
ins
add
and
add
and
jns
jns
jns
jns
add
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
ins
add
add
add
(bad)
(bad)
inc
add
add
ins
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
push
add
(bad)
(bad)
inc
add
dec
add
dec
add
add
(bad)
(bad)
inc
add
push
add
and
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
add
add
(bad)
(bad)
inc
add
add
add
ins
add
add
jae
add
add
mov
inc
add
push
push
push
outs
imul
jb
jns
add
add
add
add
(bad)
(bad)
inc
add
add
push
jns
push
je
ins
jae
inc
add
test
add
or
fs
gs
outs
outs
or
add
add
add
mov
inc
add
add
lea
push
push
push
push
add
mov
mov
call
mov
push
push
push
push
push
push
call
mov
cmp
jbe
mov
add
call
mov
jmp
mov
push
push
push
push
push
push
call
push
push
call
xor
mov
dec
test
jl
inc
xor
mov
shl
shr
or
mov
movzx
xor
inc
dec
jne
mov
cmp
je
mov
call
mov
add
pop
pop
pop
pop
ret
nop
push
push
mov
xor
push
rol
mov
test
jne
cmp
je
cmp
jl
cmp
jg
or
xor
inc
jmp
pop
pop
pop
ret
pop
pop
pop
jmp
ret
lea
push
push
push
push
add
mov
mov
test
je
cmp
je
mov
test
jne
mov
cmp
je
mov
cmp
je
mov
mov
cmp
je
mov
jmp
mov
mov
call
mov
test
jl
inc
xor
lea
mov
cmp
je
mov
mov
lea
mov
mov
mov
jmp
mov
cmp
je
lea
mov
mov
call
mov
xor
div
mov
mov
mov
mov
mov
lea
cmp
jne
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
lea
mov
mov
mov
inc
dec
jne
mov
mov
call
mov
xor
mov
add
pop
pop
pop
pop
ret
jmp
mov
push
push
mov
jmp
mov
mov
mov
mov
mov
call
cmp
jne
pop
pop
ret
nop
push
push
call
mov
test
je
push
push
call
mov
cmp
jne
mov
mov
pop
ret
add
imul
add
outs
add
ins
add
add
add
add
add
add
add
add
add
jae
imul
add
add
push
add
popa
add
add
js
push
add
add
or
(bad)
inc
mov
push
mov
add
push
mov
push
call
mov
xor
push
push
push
mov
fnstcw
xor
push
push
push
mov
mov
call
push
call
mov
xor
pop
pop
pop
mov
push
fnclex
fldcw
ret
jmp
jmp
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
push
mov
mov
test
je
cmp
je
mov
mov
call
xor
mov
mov
test
jne
pop
ret
mov
mov
xor
mov
call
mov
xor
mov
call
mov
xor
mov
call
mov
xor
mov
call
mov
xor
mov
call
mov
xor
mov
call
ret
lea
pop
add
add
sub
shr
inc
add
add
add
sub
add
add
mov
inc
add
sub
add
add
add
sub
add
add
mov
sub
add
add
cwde
sub
and
add
add
add
sub
add
add
add
sub
add
add
sub
add
add
add
inc
add
sub
add
add
jo
inc
add
sub
add
add
push
sub
add
add
pusha
sub
mov
inc
add
add
add
inc
add
add
push
sub
pop
sub
add
add
add
inc
add
add
add
inc
add
add
add
add
sub
hlt
sub
add
add
xor
inc
add
sub
add
add
sub
inc
add
inc
add
add
add
sub
push
add
add
sub
mov
add
add
sub
pop
sub
add
add
add
sub
pusha
sub
add
add
add
sub
push
sub
add
add
clc
sub
xor
inc
add
add
add
sub
loopne
inc
add
add
add
sub
sbb
inc
add
add
add
sub
add
inc
add
add
add
sub
push
sub
add
add
add
sub
pushf
sub
add
add
sub
add
enter
dec
sub
add
add
add
sub
sbb
inc
add
add
add
sub
adc
inc
add
add
add
inc
add
add
add
sub
add
add
mov
inc
add
inc
add
add
add
sub
add
add
lods
sub
cwde
sub
add
add
test
inc
add
sub
add
add
movs
sub
cmp
inc
add
add
add
sub
add
add
pushf
sub
xor
add
add
add
sub
add
add
add
inc
add
add
add
sub
add
add
mov
inc
add
add
add
add
sub
add
add
test
inc
add
inc
add
add
add
sub
add
add
jl
inc
add
add
add
add
inc
add
add
je
inc
add
sub
add
add
jo
inc
add
sub
add
add
ins
sub
js
inc
add
add
add
inc
add
inc
add
add
add
add
add
pusha
sub
fs
add
add
add
add
add
add
add
inc
add
sub
add
add
push
sub
push
sub
add
add
push
sub
adc
inc
add
add
add
add
inc
add
add
add
inc
add
add
inc
sub
sub
inc
add
add
add
inc
add
sub
add
add
cmp
inc
add
inc
add
add
add
sub
aam
inc
add
add
add
inc
add
add
add
add
sub
movs
sub
add
add
sbb
inc
add
inc
add
add
add
in
xor
push
push
push
mov
inc
jne
mov
xor
mov
call
mov
call
mov
call
call
call
call
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
mov
cmp
ja
jb
mov
cmp
ja
jb
jmp
xor
inc
ret
or
ret
xor
ret
nop
add
adc
setae
ret
mov
push
push
mov
mov
test
je
mov
call
movzx
call
test
jne
mov
mov
mov
call
pop
pop
ret
mov
mov
call
pop
pop
ret
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
ret
mov
cmp
je
cmp
je
xor
ret
mov
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
xor
push
push
push
mov
mov
call
mov
test
jne
mov
mov
mov
call
jmp
lea
push
mov
dec
mov
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
push
mov
mov
mov
test
je
sub
mov
mov
cmp
jl
movzx
call
test
je
movzx
call
test
je
mov
xor
cmp
jl
movzx
call
test
je
inc
cmp
jge
inc
cmp
jl
movzx
call
test
jne
jmp
mov
mov
call
add
cmp
jge
mov
dec
jmp
cmp
jl
movzx
call
test
je
cmp
je
mov
jmp
xor
jmp
test
jle
mov
mov
call
mov
inc
cmp
jl
cmp
jne
cmp
je
cmp
jle
movzx
call
test
je
lea
jmp
mov
jmp
xor
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
call
mov
mov
mov
test
je
sub
mov
mov
lea
cmp
jl
movzx
call
test
je
cmp
je
mov
jmp
mov
inc
jmp
mov
mov
call
add
mov
dec
mov
cmp
jge
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
mov
add
push
dec
jne
mov
mov
mov
push
lea
push
push
mov
call
push
call
mov
test
jle
cmp
jge
lea
mov
mov
call
jmp
mov
mov
call
add
pop
pop
pop
ret
mov
push
push
push
push
mov
xor
mov
test
je
sub
mov
mov
mov
mov
call
mov
inc
cmp
jl
cmp
jne
mov
inc
jmp
mov
mov
call
add
cmp
jge
mov
pop
pop
pop
pop
ret
push
push
push
mov
mov
mov
mov
call
mov
push
lea
mov
mov
call
pop
pop
pop
ret
mov
push
mov
test
jne
xor
pop
ret
mov
test
je
sub
mov
lea
mov
call
pop
ret
mov
cmp
jae
sub
mov
ret
mov
push
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
sub
mov
mov
jmp
dec
cmp
jge
lea
mov
call
movzx
call
test
jne
mov
test
je
sub
mov
cmp
jne
mov
mov
call
jmp
push
mov
mov
mov
call
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
xor
push
push
push
mov
lea
mov
call
mov
call
push
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
ret
nop
call
cmp
je
test
jne
xor
ret
mov
ret
push
mov
mov
call
inc
setne
pop
ret
push
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
test
je
sub
mov
push
mov
call
push
mov
call
push
call
mov
test
jne
mov
xor
call
jmp
mov
mov
call
test
je
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
xor
mov
xor
jmp
cmp
jne
xor
jmp
cmp
je
mov
mov
lea
mov
inc
add
movzx
test
je
cmp
seta
or
jne
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
xor
mov
mov
mov
xor
push
push
push
mov
lea
xor
mov
call
lea
mov
xor
call
lea
call
mov
lea
mov
call
mov
mov
mov
call
jmp
add
movzx
test
je
cmp
jbe
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
push
push
push
mov
call
lea
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
lea
push
mov
push
push
push
xor
push
push
push
mov
call
lea
call
mov
xor
jmp
inc
lea
mov
call
mov
cmp
jne
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
xor
push
push
push
mov
test
jne
push
lea
push
push
call
mov
lea
mov
call
jmp
call
mov
cmp
jne
lea
xor
call
jmp
lea
mov
call
mov
test
je
dec
jmp
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
lea
push
add
mov
push
lea
push
call
mov
mov
call
add
pop
ret
lea
push
mov
push
push
push
mov
xor
push
push
push
mov
mov
mov
call
cmp
je
mov
call
test
jne
mov
mov
call
cmp
je
mov
call
test
jne
mov
cmp
jne
mov
mov
call
cmp
je
mov
call
test
jne
mov
call
lea
mov
call
mov
lea
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
pop
ret
add
(bad)
(bad)
inc
add
add
add
add
mov
add
(bad)
(bad)
(bad)
inc
add
push
add
dec
add
add
add
mov
add
(bad)
(bad)
(bad)
dec
add
add
push
add
push
add
push
add
inc
add
dec
add
add
push
push
mov
mov
mov
test
je
sub
mov
cmp
setg
call
mov
pop
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
xor
push
push
push
mov
xor
xor
mov
lea
push
push
lea
push
push
mov
push
push
call
test
jne
mov
cmp
je
mov
cmp
jne
cmp
jne
mov
xor
call
mov
jmp
cmp
jb
call
mov
inc
shr
lea
mov
xor
call
lea
push
lea
call
push
lea
push
push
mov
push
push
call
cmp
je
test
jne
mov
cmp
je
mov
cmp
jne
mov
shr
jmp
dec
test
je
mov
cmp
je
cmp
jne
test
je
inc
lea
mov
call
cmp
jne
test
je
lea
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
push
call
ret
mov
push
mov
push
mov
cmp
jne
or
mov
push
push
mov
push
push
push
call
pop
pop
ret
mov
push
mov
add
push
xor
mov
mov
xor
push
push
push
mov
push
push
call
push
call
test
je
call
mov
jmp
mov
cmp
jne
push
push
lea
push
mov
mov
xor
call
test
jne
lea
mov
mov
call
mov
push
call
jmp
push
push
lea
push
mov
mov
xor
call
test
jne
lea
mov
mov
call
mov
push
call
lea
mov
mov
call
mov
lea
call
mov
cmp
je
xor
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
inc
add
je
push
add
add
inc
add
data16
jne
ins
add
add
dec
add
outs
add
jne
popa
add
add
add
add
add
outs
add
ins
add
add
add
add
add
add
add
add
add
inc
add
dec
add
add
outs
add
je
jb
outs
add
add
popa
add
add
add
outs
add
add
outs
add
je
imul
popa
add
add
add
add
popa
add
add
add
add
outs
add
je
jb
outs
add
add
popa
add
add
add
add
imul
add
jo
pop
add
add
outs
add
jb
arpl
add
add
popa
add
add
(bad)
(bad)
inc
add
add
add
push
push
mov
mov
mov
mov
call
cmp
je
mov
call
cmp
jbe
mov
mov
call
pop
pop
ret
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
call
mov
test
jne
mov
mov
call
pop
pop
ret
mov
mov
call
test
je
mov
mov
call
jmp
mov
mov
call
pop
pop
ret
add
(bad)
(bad)
call
add
add
inc
add
arpl
add
je
dec
add
push
add
je
cmp
add
add
add
add
les
clc
(bad)
dec
add
add
push
push
push
push
call
jmp
dec
test
jle
movzx
cmp
jbe
cmp
je
mov
mov
xchg
call
add
pop
ret
mov
sbb
inc
add
mov
add
cmp
inc
add
cmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
sbb
inc
add
xor
sbb
inc
add
push
inc
jne
je
ins
inc
imul
add
add
add
les
inc
add
cmp
pushf
cmp
xchg
cmp
mov
inc
add
cmp
mov
inc
add
inc
add
inc
add
inc
add
inc
add
ret
sbb
inc
add
rol
push
inc
imul
add
inc
add
add
add
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
inc
imul
nop
push
mov
add
push
xor
mov
mov
xor
push
push
push
mov
lea
mov
call
cmp
jne
lea
push
mov
mov
lea
xor
mov
call
mov
mov
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
mov
pop
ret
add
(bad)
(bad)
call
add
add
imul
and
dec
add
add
and
add
jb
outs
add
and
and
add
fsubr
and
(bad)
dec
cmp
(bad)
call
nop
push
push
push
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
call
pop
pop
pop
ret
add
xor
mov
mov
mov
mov
call
pop
pop
ret
mov
push
mov
push
push
push
test
je
add
call
mov
mov
mov
xor
mov
call
movzx
push
movzx
push
movzx
mov
mov
mov
call
mov
mov
test
je
cmp
jne
mov
call
mov
mov
cmp
je
call
pop
add
mov
pop
pop
pop
pop
ret
nop
push
push
call
mov
mov
cmp
je
mov
push
call
mov
and
mov
call
test
jle
mov
call
pop
pop
ret
push
mov
push
push
mov
mov
push
push
movzx
mov
push
push
movzx
mov
push
movzx
mov
push
mov
call
push
call
pop
pop
pop
ret
push
push
mov
mov
xor
mov
push
lea
push
push
mov
push
call
mov
cmp
jne
call
test
je
mov
call
pop
pop
ret
mov
push
push
mov
mov
lea
push
mov
push
call
mov
cmp
jne
call
test
je
mov
call
pop
pop
ret
lea
push
push
push
push
mov
mov
mov
push
lea
push
push
push
mov
push
call
test
jne
cmp
jne
call
cmp
je
mov
call
mov
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
lea
movs
movs
mov
push
lea
push
mov
push
mov
push
call
cmp
jne
call
test
je
mov
call
pop
pop
pop
pop
pop
ret
nop
push
mov
mov
push
call
test
jne
mov
call
pop
ret
lea
push
push
push
push
mov
mov
mov
push
lea
push
push
push
mov
push
call
test
jne
mov
call
cmp
je
mov
mov
call
pop
pop
pop
pop
ret
lea
mov
inc
add
add
js
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
inc
outs
ins
jo
gs
inc
jb
outs
jb
and
inc
add
inc
add
add
pop
ret
inc
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
inc
outs
ins
jo
gs
inc
popa
je
inc
jb
outs
jb
cwde
les
mov
add
add
add
cmp
sub
inc
add
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
inc
inc
outs
ins
jo
gs
dec
outs
je
jb
popa
ins
inc
jb
outs
jb
adc
inc
add
add
cmp
inc
add
cmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
sbb
inc
add
push
inc
jne
je
ins
inc
arpl
jo
gs
outs
jb
lds
mov
inc
add
adc
add
adc
and
inc
add
cmp
pushf
cmp
xchg
cmp
mov
inc
add
cmp
mov
inc
add
inc
add
inc
add
push
inc
outs
ins
jo
gs
gs
ins
outs
arpl
gs
fs
push
xor
mov
mov
mov
test
je
shr
xor
jmp
shr
dec
jne
mov
inc
add
cmp
jne
pop
ret
lea
push
push
push
mov
mov
mov
cmp
jne
call
push
push
call
mov
test
je
mov
and
movzx
xor
movzx
mov
shr
xor
mov
dec
inc
test
jne
mov
pop
pop
pop
ret
push
push
mov
mov
mov
mov
or
call
xor
pop
pop
ret
push
mov
add
push
mov
mov
cmp
jl
sub
mov
xor
cmp
jge
movzx
cmp
je
cmp
jne
inc
cmp
je
cmp
jne
mov
add
add
and
mov
movzx
movzx
shl
or
movzx
shl
or
cmp
jne
sub
test
je
movzx
not
mov
cmp
je
add
mov
mov
shr
mov
shr
mov
add
jmp
inc
cmp
jl
pop
mov
pop
ret
push
mov
push
push
test
je
add
call
mov
mov
xor
mov
call
mov
mov
mov
mov
mov
test
je
call
pop
add
mov
pop
pop
pop
ret
nop
push
mov
add
push
push
push
test
je
add
call
mov
mov
mov
xor
mov
call
mov
lea
mov
mov
mov
call
cmp
jne
lea
mov
mov
mov
call
cmp
je
mov
mov
mov
call
call
lea
mov
call
cmp
je
mov
mov
mov
call
call
lea
mov
mov
call
lea
mov
call
lea
mov
mov
call
lea
lea
call
test
jle
mov
mov
mov
call
call
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
mov
cmp
je
call
pop
add
mov
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
call
add
ins
add
jb
add
jae
add
add
ins
add
arpl
imul
add
jae
and
arpl
outs
add
jb
jne
jo
je
add
add
add
call
mov
mov
mov
call
cmp
je
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
and
mov
call
test
jle
mov
call
pop
pop
pop
pop
ret
lea
push
push
push
mov
cmp
jae
mov
mov
mov
call
call
mov
mov
mov
call
sub
mov
cmp
jbe
mov
lea
mov
mov
call
sub
xor
mov
mov
lea
mov
call
cmp
je
mov
mov
mov
call
call
pop
pop
pop
ret
add
add
(bad)
(bad)
call
add
ins
add
jb
add
jae
add
add
ins
add
arpl
imul
add
jae
and
arpl
outs
add
jb
jne
jo
je
add
add
push
push
push
mov
mov
xor
mov
mov
test
jle
cmp
jne
cmp
je
mov
call
mov
cmp
jbe
mov
mov
mov
lea
mov
call
add
sub
add
sub
add
test
jg
mov
pop
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
mov
test
je
mov
mov
mov
call
jmp
mov
mov
mov
call
cmp
je
mov
mov
mov
call
call
pop
pop
pop
ret
mov
add
(bad)
(bad)
(bad)
call
add
ins
add
jb
add
jae
add
add
ins
add
arpl
imul
add
jae
and
arpl
outs
add
jb
jne
jo
je
add
add
retf
inc
add
inc
add
add
cmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
int
add
push
dec
pop
dec
inc
xor
popa
ins
ins
inc
arpl
jo
gs
outs
jb
add
mov
mov
mov
push
push
mov
mov
mov
call
call
pop
pop
pop
ret
add
(bad)
(bad)
push
add
add
add
popa
add
add
outs
add
jo
jae
ins
add
ins
add
add
add
outs
add
jo
jb
add
jae
add
add
add
add
add
jae
and
arpl
outs
add
jb
jne
jo
je
add
add
add
add
add
add
(bad)
clc
mov
mov
mov
push
push
mov
mov
mov
call
call
pop
pop
pop
ret
add
(bad)
(bad)
call
add
add
add
popa
add
add
outs
add
jo
jae
ins
add
ins
add
add
add
add
in
push
push
push
push
mov
mov
mov
xor
push
push
push
mov
lea
push
mov
mov
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
ret
mov
mov
call
xor
ret
nop
push
push
call
mov
mov
mov
call
mov
and
mov
call
test
jle
mov
call
pop
pop
ret
push
mov
xor
mov
mov
test
je
push
push
push
call
xor
mov
pop
ret
nop
push
push
mov
mov
lea
mov
xor
mov
cmp
jne
lea
mov
mov
call
mov
cmp
jne
mov
pop
pop
ret
lea
push
push
push
add
mov
mov
mov
mov
call
cmp
je
mov
call
lea
xor
mov
call
push
lea
push
lea
push
lea
lea
mov
call
test
je
mov
call
cmp
jbe
mov
call
mov
add
cmp
je
mov
call
push
push
push
push
call
mov
mov
test
jne
call
mov
mov
add
lea
mov
call
mov
add
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
mov
cmp
jne
mov
call
mov
mov
push
lea
push
mov
lea
lea
call
mov
sub
jb
je
jmp
mov
call
jmp
mov
mov
lea
xor
mov
call
mov
cmp
je
mov
call
add
pop
pop
pop
ret
add
add
(bad)
(bad)
call
add
add
add
popa
add
add
outs
add
add
add
popa
add
ins
add
add
add
add
add
add
add
inc
adc
mov
ret
lea
push
mov
push
push
mov
cmp
jne
mov
mov
mov
mov
call
mov
mov
add
mov
cmp
jne
mov
mov
jmp
mov
inc
mov
pop
pop
pop
ret
nop
nop
nop
push
mov
xor
push
mov
xor
mov
xor
mov
mov
mov
xor
mov
call
mov
xor
shl
mov
or
inc
cmp
mov
jl
pop
pop
ret
nop
nop
nop
push
push
push
push
push
mov
mov
xor
mov
test
mov
mov
mov
je
shr
add
cmp
ja
sub
or
cmp
jae
shl
mov
call
xor
shl
mov
or
mov
dec
test
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
push
mov
movzx
mov
shr
imul
cmp
jbe
mov
mov
movzx
sub
sar
add
cmp
jae
mov
call
and
mov
shl
or
mov
shl
xor
pop
ret
sub
sub
movzx
sar
sub
cmp
jae
mov
call
mov
xor
shl
mov
or
mov
shl
mov
pop
ret
push
push
push
push
push
mov
mov
mov
mov
mov
test
je
lea
mov
call
add
dec
add
test
mov
jne
mov
mov
shl
push
mov
pop
sub
pop
pop
pop
pop
pop
ret
nop
push
push
push
push
add
xor
xor
mov
mov
mov
cmp
mov
jge
lea
mov
call
add
add
mov
shl
or
inc
cmp
jl
mov
pop
pop
pop
pop
pop
pop
ret
push
push
push
mov
mov
mov
lea
mov
call
add
or
mov
cmp
jl
mov
pop
pop
pop
ret
nop
nop
push
push
push
push
push
mov
mov
mov
mov
movzx
sar
mov
and
add
mov
shl
shl
add
add
add
mov
add
call
add
or
cmp
je
cmp
jge
lea
mov
call
add
or
mov
cmp
jl
jmp
cmp
jl
mov
pop
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
mov
mov
call
test
jne
mov
mov
shl
mov
add
add
add
call
jmp
lea
mov
call
test
jne
mov
mov
shl
mov
add
add
add
call
add
jmp
lea
mov
mov
call
add
pop
pop
pop
ret
nop
nop
push
push
cmp
jge
mov
pop
pop
ret
mov
cmp
jb
mov
pop
pop
ret
xor
cmp
mov
jb
inc
add
cmp
jae
xor
cmp
mov
jb
inc
add
cmp
jae
and
mov
xor
xor
inc
mov
movzx
mov
inc
shl
inc
shl
add
cmp
jl
cmp
jne
mov
xor
pop
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
shl
dec
mov
mov
mov
mov
shl
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
jne
xor
jmp
cmp
jne
lea
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
xor
add
shl
add
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
inc
add
mov
cmp
jb
mov
xor
mov
mov
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
lea
call
cmp
je
mov
jmp
cmp
je
mov
jmp
xor
mov
mov
mov
lea
mov
jmp
mov
sub
cmp
jb
add
mov
mov
push
mov
pop
mov
mov
mov
inc
inc
inc
cmp
jne
xor
dec
cmp
je
mov
cmp
jb
test
jne
mov
mov
mov
mov
jmp
mov
mov
mov
xor
xor
mov
mov
mov
mov
lea
mov
mov
cmp
jae
mov
add
and
mov
cmp
je
mov
jmp
cmp
je
mov
jmp
mov
mov
shl
add
add
add
add
lea
call
test
jne
mov
mov
add
xor
and
shl
mov
mov
sub
sar
add
shl
lea
add
add
add
cmp
jl
mov
sub
mov
mov
cmp
jb
mov
add
mov
mov
mov
mov
lea
mov
call
mov
jmp
lea
call
mov
mov
mov
mov
inc
inc
mov
cmp
jae
inc
mov
mov
mov
inc
cmp
jne
xor
cmp
jge
xor
jmp
cmp
jge
sub
jmp
sub
jmp
lea
mov
add
add
add
call
dec
jne
lea
mov
add
add
add
call
test
jne
mov
mov
shl
add
add
add
add
lea
add
call
test
jne
cmp
jne
mov
jmp
cmp
jge
mov
jmp
mov
mov
mov
sub
cmp
jb
add
mov
mov
mov
mov
mov
mov
inc
cmp
jne
xor
mov
mov
mov
inc
mov
cmp
jae
inc
jmp
jmp
lea
mov
add
add
add
call
test
jne
mov
jmp
lea
mov
add
add
add
call
test
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
call
mov
cmp
jge
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jge
mov
jmp
mov
mov
mov
add
lea
mov
call
mov
lea
cmp
jge
mov
jmp
mov
shl
mov
add
add
add
call
mov
cmp
jl
mov
sar
dec
mov
mov
mov
and
or
shl
cmp
jge
mov
mov
add
add
add
lea
add
sub
mov
add
call
add
jmp
mov
lea
add
call
shl
lea
add
mov
add
mov
call
add
jmp
mov
inc
jne
mov
jmp
add
cmp
jbe
mov
jmp
mov
sub
cmp
jbe
mov
add
jmp
mov
mov
mov
sub
cmp
jb
add
mov
mov
mov
mov
mov
mov
inc
cmp
jne
xor
dec
mov
mov
mov
inc
inc
cmp
je
mov
cmp
jb
mov
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
push
push
mov
mov
cmp
je
mov
jmp
mov
mov
mov
call
test
jne
mov
mov
add
shl
mov
add
add
mov
mov
mov
mov
pop
pop
pop
ret
nop
nop
mov
mov
mov
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
mov
test
jle
lea
mov
mov
call
mov
sar
jns
adc
lea
call
cmp
je
lea
call
mov
mov
mov
call
mov
mov
call
add
dec
jne
mov
test
jle
lea
mov
mov
call
lea
xor
mov
call
cmp
je
lea
call
mov
mov
mov
call
mov
mov
call
add
dec
jne
mov
add
add
add
mov
sub
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
mov
add
(bad)
(bad)
(bad)
inc
add
add
outs
add
outs
add
ja
outs
add
add
(bad)
(bad)
inc
add
add
cmp
add
add
(bad)
(bad)
inc
add
add
add
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
je
popa
add
imul
add
pushf
fiadd
push
or
push
gs
jo
gs
fs
add
add
add
add
adc
add
add
sbb
inc
add
add
sbb
inc
add
add
add
adc
or
add
sbb
inc
add
add
add
adc
adc
add
sbb
inc
add
add
add
adc
sbb
add
sbb
inc
add
add
add
adc
and
add
sbb
inc
add
add
add
adc
sub
add
sbb
inc
add
add
add
adc
xor
add
sbb
inc
add
add
add
adc
cmp
add
sbb
inc
add
add
sbb
inc
add
add
adc
dec
add
add
adc
dec
add
add
adc
push
add
add
adc
push
add
add
adc
pop
add
add
adc
pop
add
add
adc
pusha
add
add
adc
add
add
adc
push
adc
ins
add
add
inc
add
add
and
inc
add
add
inc
add
add
mov
mov
inc
add
adc
je
jo
popa
outs
addr16
addr16
outs
je
jns
add
add
add
add
adc
add
add
sbb
inc
add
add
sbb
inc
add
add
add
adc
or
add
sbb
inc
add
add
add
adc
adc
add
and
inc
add
add
add
inc
add
add
and
inc
add
add
add
inc
add
add
lea
push
mov
xor
push
push
push
mov
inc
jne
mov
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
xor
push
push
push
mov
mov
xor
call
test
je
mov
mov
call
mov
test
jne
lea
mov
call
mov
mov
call
jmp
cmp
je
mov
sub
sar
jns
adc
lea
mov
call
mov
mov
call
mov
add
mov
mov
cmp
jae
movzx
mov
movzx
bt
jb
xor
jmp
mov
mov
cmp
je
movzx
sub
mov
cmp
setle
jmp
mov
cmp
je
mov
movzx
mov
mov
call
add
jmp
mov
mov
call
add
cmp
jne
add
jmp
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
mov
push
push
push
mov
mov
mov
mov
push
movzx
mov
call
mov
mov
call
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
push
mov
lea
xor
mov
call
pop
pop
pop
pop
ret
lea
push
push
mov
mov
mov
xor
call
add
dec
jne
pop
pop
ret
mov
mov
mov
call
call
ret
add
(bad)
(bad)
inc
add
push
add
add
add
add
add
and
data16
ins
add
jae
and
popa
add
add
add
outs
add
jb
jne
jo
je
add
add
add
ins
add
popa
add
add
add
bound
je
popa
add
outs
add
add
and
outs
add
ja
and
arpl
outs
add
jns
and
outs
add
and
je
push
add
jb
outs
add
jb
popa
add
add
add
push
push
push
mov
mov
cmp
jbe
mov
mov
mov
call
je
call
mov
add
mov
mov
mov
not
cmp
jne
cmp
jne
cmp
je
call
mov
add
mov
add
mov
mov
sub
sar
jns
adc
mov
add
mov
call
cmp
jne
mov
cmp
je
call
mov
mov
cmp
jb
call
mov
call
mov
mov
mov
mov
call
inc
mov
add
add
add
dec
jne
pop
pop
pop
pop
pop
ret
push
mov
xor
push
push
push
mov
inc
jne
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
push
mov
mov
test
jne
mov
pop
ret
cmp
je
lea
push
call
cmp
sbb
inc
test
je
mov
jmp
push
call
xor
pop
ret
nop
cmp
je
mov
push
call
ret
push
mov
add
push
push
mov
mov
lea
mov
call
test
jne
xor
mov
jmp
xor
push
push
push
mov
mov
call
push
call
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
push
call
mov
pop
pop
mov
pop
ret
mov
push
mov
add
push
push
mov
mov
lea
mov
call
test
jne
mov
jmp
xor
push
push
push
mov
mov
call
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
push
call
movzx
pop
pop
mov
pop
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
push
mov
push
push
push
push
mov
mov
xor
push
push
push
mov
mov
xor
call
mov
lea
mov
and
movzx
call
mov
mov
mov
call
shr
dec
jne
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
call
xor
push
push
push
mov
lea
mov
call
mov
lea
call
mov
call
mov
mov
inc
cmp
jle
xor
cmp
jne
lea
mov
call
mov
lea
mov
call
mov
mov
mov
call
call
push
push
lea
mov
call
push
push
lea
mov
call
mov
mov
call
test
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
jae
sub
mov
mov
push
push
dec
jne
push
push
push
mov
xor
push
push
push
mov
lea
push
lea
call
mov
mov
xor
call
push
mov
call
push
call
test
jne
call
mov
cmp
je
lea
push
lea
mov
mov
call
mov
mov
mov
xor
push
push
lea
call
mov
mov
lea
mov
call
mov
mov
lea
mov
mov
call
mov
mov
mov
call
call
jmp
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
jmp
mov
add
mov
cmp
jne
push
push
call
push
call
test
jne
xor
jmp
lea
push
push
push
call
mov
mov
push
push
push
lea
push
push
mov
push
call
call
test
je
xor
jmp
push
push
call
cmp
sbb
inc
add
ret
add
add
push
add
add
outs
add
jb
imul
ins
add
add
add
push
mov
push
push
push
push
mov
mov
mov
dec
test
jl
inc
xor
cmp
jne
mov
push
call
jmp
cmp
jle
mov
push
call
mov
mov
call
test
jne
call
cmp
je
call
cmp
je
inc
dec
jne
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
lea
push
push
movzx
push
call
test
jle
mov
jmp
or
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
mov
test
je
xor
jmp
mov
mov
mov
call
test
jne
mov
mov
mov
jmp
inc
lea
mov
call
test
jne
movzx
sub
jb
je
jmp
call
mov
jmp
call
mov
jmp
xor
test
je
xor
jmp
mov
mov
movzx
cmp
jne
mov
mov
mov
jmp
inc
lea
mov
call
test
jne
xor
jmp
mov
mov
and
mov
and
movzx
cmp
jne
mov
and
cmp
jne
mov
movzx
call
push
mov
call
pop
cmp
jne
mov
mov
mov
jmp
inc
lea
mov
call
test
jne
movzx
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
xor
mov
mov
mov
mov
xor
push
push
push
mov
call
mov
lea
push
movzx
mov
mov
mov
mov
xor
push
push
lea
call
mov
mov
lea
mov
call
mov
mov
lea
mov
mov
call
mov
mov
mov
call
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
push
mov
push
xor
push
push
push
mov
call
mov
call
test
jne
push
mov
mov
push
lea
call
mov
call
push
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
ret
lea
push
mov
push
push
push
push
push
xor
push
push
push
mov
call
mov
test
jle
mov
lea
mov
call
mov
mov
call
test
je
lea
push
mov
mov
mov
call
mov
mov
call
test
jne
mov
jmp
lea
push
mov
mov
mov
call
mov
mov
call
test
jne
push
mov
mov
mov
call
jmp
mov
mov
call
test
je
mov
mov
call
test
jne
mov
inc
dec
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
add
(bad)
(bad)
inc
add
das
add
push
add
add
(bad)
(bad)
dec
add
add
add
push
add
push
add
push
add
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
push
mov
test
jl
cmp
jge
cmp
je
imul
mov
lea
call
mov
mov
mov
mov
mov
test
je
sub
mov
xchg
call
mov
pop
pop
pop
ret
xor
cmp
jge
imul
mov
lea
mov
mov
mov
ret
lea
push
push
mov
mov
movzx
call
mov
call
pop
ret
nop
push
mov
mov
xor
mov
sub
je
sub
je
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
jmp
mov
push
mov
push
push
mov
push
mov
push
call
mov
mov
pop
ret
mov
push
add
mov
jmp
push
call
push
call
push
push
push
push
push
call
test
jne
add
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
mov
xor
push
push
push
mov
push
push
push
push
lea
mov
call
lea
xor
mov
call
mov
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
push
call
test
jne
mov
call
mov
push
call
call
push
push
push
lea
push
push
call
cmp
je
call
push
mov
push
call
mov
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
cmp
je
mov
mov
mov
mov
call
call
ret
mov
mov
mov
call
call
ret
add
(bad)
(bad)
inc
add
push
add
add
add
add
add
and
data16
ins
add
jae
and
popa
add
add
add
outs
add
jb
jne
jo
je
add
add
add
ins
add
popa
add
add
add
bound
je
popa
add
outs
add
add
and
outs
add
ja
and
arpl
outs
add
jns
and
outs
add
and
je
push
add
jb
outs
add
jb
popa
add
add
add
shl
or
ret
mov
push
push
push
push
add
mov
lea
lea
push
call
mov
push
push
push
call
test
je
jmp
cmp
jne
test
jne
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
lea
push
push
mov
push
mov
push
call
test
je
mov
xor
jmp
mov
add
call
add
cmp
jb
cmp
je
lea
push
mov
push
mov
push
mov
push
call
mov
add
mov
push
push
push
call
test
je
mov
cmp
je
add
pop
pop
pop
pop
ret
nop
push
push
push
push
call
mov
test
jne
call
push
push
call
cmp
je
call
push
push
call
mov
test
jne
call
push
call
mov
test
jne
call
mov
pop
ret
push
mov
push
xor
push
push
push
mov
lea
mov
call
push
push
mov
call
push
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
ret
add
(bad)
(bad)
(bad)
dec
add
push
add
add
add
add
add
and
jo
jb
outs
add
jb
popa
add
and
popa
add
arpl
add
je
jae
and
outs
add
je
imul
popa
add
add
outs
add
ins
add
outs
add
add
add
add
add
popa
add
popa
add
add
add
jae
add
add
add
add
inc
add
add
and
das
add
add
add
outs
add
jae
and
je
push
add
add
outs
add
outs
add
ins
add
je
imul
add
add
push
add
add
add
popa
add
ins
add
jae
and
je
push
add
add
jae
and
ja
imul
and
imul
je
popa
add
add
add
add
add
add
add
add
outs
add
and
ja
imul
and
je
outs
add
add
outs
add
je
imul
add
add
add
jb
outs
add
jo
je
and
popa
add
add
add
and
bound
add
imul
imul
and
outs
add
and
push
add
je
jne
jo
add
add
dec
add
add
push
add
and
das
add
inc
add
pop
add
dec
add
add
push
add
add
jae
je
jb
jne
arpl
je
jae
and
push
add
je
jne
jo
and
je
outs
add
add
add
add
imul
outs
add
add
jb
and
jbe
add
jns
and
jae
imul
outs
add
add
add
push
add
push
add
inc
add
push
add
push
add
inc
add
pop
add
push
add
add
jae
je
jb
jne
arpl
je
jae
and
push
add
je
jne
jo
and
je
outs
add
add
jne
jo
jo
jb
add
jae
and
ins
add
jae
jae
popa
add
add
add
outs
add
add
add
add
add
or
add
jne
jae
add
and
push
add
je
jne
jo
and
je
outs
add
add
jb
add
je
add
add
and
ins
add
add
add
imul
and
imul
je
push
add
jae
add
daa
add
and
push
add
dec
add
and
add
jb
add
je
outs
add
jns
add
add
add
cmp
add
ins
add
outs
add
ins
add
and
or
add
ins
add
and
popa
add
and
das
add
add
sub
and
add
arpl
add
je
and
imul
popa
add
add
ja
jae
and
jns
outs
add
and
je
outs
add
add
jo
add
imul
and
popa
add
add
imul
add
add
popa
add
add
add
imul
outs
add
ins
add
and
je
outs
add
add
jae
add
add
outs
add
and
je
push
add
add
and
data16
ins
add
add
add
dec
add
inc
add
inc
add
dec
add
add
add
add
je
jae
and
je
push
add
jae
add
and
data16
outs
add
and
arpl
popa
add
arpl
add
add
outs
add
and
add
jb
imul
and
je
push
add
outs
add
je
popa
add
add
je
imul
and
jo
jb
outs
add
add
jae
add
add
dec
add
inc
add
push
add
push
add
add
add
jb
add
add
je
jae
and
push
add
je
jne
jo
and
data16
outs
add
and
jb
add
je
popa
add
je
imul
and
je
push
add
jns
jae
je
add
and
data16
ins
add
add
imul
and
popa
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
outs
add
je
popa
add
add
je
imul
sub
and
outs
add
and
popa
add
je
add
and
popa
add
add
jb
add
popa
add
imul
and
je
outs
add
add
outs
add
je
popa
add
add
add
popa
add
ins
add
jb
add
add
add
je
and
jb
add
jne
add
je
jae
and
popa
add
add
add
je
popa
add
je
add
add
inc
add
push
add
push
add
add
dec
add
add
inc
add
cmp
add
je
and
arpl
outs
add
add
add
add
imul
add
and
popa
add
add
jne
jae
je
outs
add
and
add
imul
arpl
outs
add
add
add
add
je
and
push
add
je
jne
jo
and
imul
je
outs
add
add
add
add
outs
add
add
push
add
add
add
and
jae
jns
jae
je
add
and
outs
add
add
add
add
add
add
add
add
add
je
popa
add
je
add
add
add
dec
add
push
add
inc
add
push
add
add
inc
add
add
dec
add
or
add
jae
je
jb
jne
arpl
je
jae
and
push
add
je
jne
jo
and
je
outs
add
add
ins
add
jae
add
add
jo
jo
ins
add
arpl
popa
add
add
outs
add
and
jne
jae
imul
and
data16
ins
add
jae
and
je
push
add
add
add
add
add
add
add
add
add
jo
add
je
add
add
add
dec
add
dec
add
push
add
inc
add
push
add
add
inc
add
add
dec
add
or
add
add
add
je
jae
and
push
add
je
jne
jo
and
data16
outs
add
and
arpl
ins
add
jae
imul
and
popa
add
jo
ins
add
arpl
popa
add
add
outs
add
and
jne
jae
imul
and
data16
ins
add
jae
and
je
push
add
add
add
add
add
add
add
add
add
jo
add
je
add
add
add
inc
add
push
add
push
add
add
push
add
add
inc
add
add
dec
add
or
add
jae
je
jb
jne
arpl
je
jae
and
push
add
je
jne
jo
and
je
outs
add
add
add
je
popa
add
je
and
popa
add
jo
ins
add
arpl
popa
add
add
outs
add
add
add
dec
add
inc
add
push
add
push
add
add
push
add
add
inc
add
add
dec
add
or
add
add
add
je
jae
and
push
add
je
jne
jo
and
data16
outs
add
and
jb
add
je
popa
add
je
imul
and
popa
add
jo
ins
add
arpl
popa
add
add
outs
add
add
add
add
inc
add
dec
add
cmp
add
ins
add
outs
add
ins
add
and
or
add
jae
je
jb
jne
arpl
je
jae
and
push
add
je
jne
jo
and
je
outs
add
add
add
add
add
add
and
jae
add
add
outs
add
jae
and
data16
outs
add
and
je
push
add
jo
add
imul
add
add
imul
and
popa
add
je
add
and
push
add
outs
add
and
arpl
push
add
add
add
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
inc
add
inc
add
dec
add
cmp
add
ins
add
outs
add
ins
add
and
or
add
jae
je
jb
jne
arpl
je
jae
and
push
add
je
jne
jo
and
je
outs
add
add
popa
add
add
add
outs
add
je
popa
add
add
je
imul
and
jae
add
add
outs
add
jae
and
je
outs
add
add
add
and
jae
jo
add
imul
add
add
imul
add
add
add
inc
add
add
add
popa
add
add
add
add
imul
add
and
je
push
add
outs
add
add
outs
add
ins
add
add
popa
add
add
add
data16
add
add
and
ins
add
outs
add
jne
popa
add
add
add
add
add
jae
add
add
add
add
cmp
add
add
add
jb
outs
add
ins
add
and
or
add
add
jb
imul
jae
and
je
push
add
add
popa
add
ins
add
add
add
add
je
outs
add
jns
and
outs
add
ins
add
add
add
push
add
push
add
cmp
add
ins
add
add
and
outs
add
ins
add
and
or
add
add
jb
imul
jae
and
je
push
add
add
popa
add
ins
add
add
outs
add
add
jb
and
outs
add
ins
add
add
add
dec
add
inc
add
dec
add
or
add
jae
je
jb
jne
arpl
je
jae
and
push
add
je
jne
jo
and
je
outs
add
add
outs
add
je
imul
ins
add
and
arpl
push
add
and
je
push
add
add
daa
add
add
jb
add
je
add
add
and
push
add
add
je
and
dec
add
outs
add
and
data16
ins
add
add
and
arpl
push
add
and
bound
outs
add
add
add
add
inc
add
add
add
add
popa
add
add
add
add
jb
imul
jae
and
je
push
add
add
popa
add
ins
add
add
add
add
and
je
jns
jo
add
add
add
dec
add
push
add
dec
add
dec
add
add
add
ins
add
popa
add
add
add
popa
add
popa
add
add
add
add
je
and
outs
add
and
arpl
outs
add
jo
outs
add
add
je
and
outs
add
ins
add
jae
and
or
add
add
jb
imul
jae
and
je
push
add
add
popa
add
ins
add
add
outs
add
jo
outs
add
add
je
and
jae
add
add
outs
add
jae
add
add
add
dec
add
cmp
add
ins
add
popa
add
add
add
popa
add
popa
add
add
add
add
je
and
outs
add
and
je
popa
add
imul
add
popa
add
add
and
or
add
add
imul
add
and
popa
add
add
add
je
and
outs
add
and
je
popa
add
imul
add
add
add
je
and
jae
push
add
add
add
add
add
outs
add
je
imul
ins
add
and
jae
add
add
je
add
add
add
inc
add
inc
add
push
add
push
add
push
add
add
ins
add
popa
add
add
add
popa
add
popa
add
add
add
add
je
and
outs
add
and
je
popa
add
imul
add
popa
add
add
and
or
add
imul
add
add
add
and
das
add
add
dec
add
and
jo
popa
add
popa
add
add
add
sub
and
add
arpl
add
je
and
je
push
add
jo
add
imul
add
add
add
imul
add
add
imul
and
bound
add
add
add
add
add
add
imul
and
je
push
add
add
add
data16
add
add
imul
add
add
add
je
and
ja
outs
add
ins
add
add
popa
add
add
add
je
push
add
imul
and
bound
add
outs
add
add
add
add
je
add
add
jns
and
add
data16
jne
ins
add
add
add
inc
add
push
add
dec
add
inc
add
add
jae
ja
outs
add
add
add
add
imul
add
and
je
push
add
popa
add
jae
ja
outs
add
add
add
add
add
jae
add
add
add
add
outs
add
and
ins
add
jb
add
add
add
add
ins
add
add
add
outs
add
outs
add
ins
add
je
imul
sub
and
jo
ins
add
popa
add
add
add
imul
je
and
push
add
cmp
das
add
add
ja
ja
add
jb
jae
outs
add
je
ja
popa
add
add
add
jb
add
add
jae
push
add
das
add
outs
add
add
add
push
add
add
imul
jae
add
add
arpl
ins
add
add
outs
add
add
add
push
add
je
jne
jo
add
push
mov
xor
push
push
push
mov
mov
call
mov
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
pop
add
add
inc
add
adc
test
inc
add
imul
js
inc
add
inc
add
add
add
mov
add
inc
add
fadd
and
inc
add
add
add
add
loope
add
inc
sub
jae
call
mov
mov
mov
mov
call
mov
mov
call
test
je
call
call
mov
mov
mov
call
mov
call
mov
call
mov
mov
call
mov
call
ret
mov
sub
jae
xor
mov
ret
lea
push
sub
jae
push
call
mov
push
push
call
test
je
push
call
push
push
call
test
je
push
call
push
push
call
test
je
push
call
pop
ret
add
add
outs
add
ins
add
add
add
add
add
add
add
je
ins
ins
inc
imul
jns
push
gs
gs
jb
push
dec
outs
fs
add
je
jb
arpl
jae
inc
push
push
outs
ins
imul
pop
inc
add
jae
call
ret
nop
push
mov
xor
push
push
push
mov
sub
jae
mov
call
mov
call
cmp
je
mov
mov
call
call
call
mov
call
call
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
sub
ret
push
mov
xor
push
push
push
mov
sub
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
push
mov
push
xor
push
push
push
mov
sub
jae
push
push
call
push
call
mov
push
push
call
push
call
mov
cmp
je
cmp
jne
xor
jmp
mov
mov
mov
mov
call
lea
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
ret
add
add
outs
add
add
inc
add
jae
popa
add
ins
add
push
add
ja
add
inc
add
push
add
add
jb
add
je
imul
add
add
imul
add
outs
add
ins
add
add
add
add
add
add
add
outs
add
add
push
add
jbe
add
je
push
add
ja
add
inc
add
push
add
add
jb
add
je
imul
add
mov
add
(bad)
(bad)
(bad)
dec
add
add
push
add
add
add
add
add
add
in
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
xor
push
push
push
mov
xor
push
push
push
mov
mov
call
call
cmp
je
call
xor
call
lea
xor
call
mov
mov
call
push
push
push
mov
mov
mov
call
mov
xor
push
push
push
mov
call
mov
mov
cmp
jne
mov
mov
call
mov
cmp
jne
lea
mov
mov
call
cmp
jne
lea
mov
mov
call
mov
mov
cmp
jae
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
je
call
xor
push
push
push
mov
mov
push
mov
mov
mov
call
mov
xor
push
push
push
mov
push
push
mov
mov
mov
call
mov
mov
imul
call
mov
mov
dec
test
jl
inc
xor
push
push
imul
mov
add
mov
mov
call
inc
dec
jne
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
xor
pop
pop
pop
mov
jmp
jmp
add
add
int3
ret
inc
add
adc
aad
(bad)
call
call
test
jne
cmp
jne
push
mov
mov
call
push
lea
mov
mov
call
mov
call
push
push
call
cmp
je
mov
call
call
lea
call
mov
mov
call
lea
mov
call
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
pop
call
mov
mov
call
mov
mov
mov
call
xor
push
push
push
mov
xor
mov
push
push
push
mov
mov
mov
call
mov
xor
push
push
push
mov
mov
mov
call
mov
mov
mov
mov
mov
xor
call
xor
push
push
push
mov
mov
push
mov
mov
mov
call
mov
xor
push
push
push
mov
mov
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
xor
pop
pop
pop
mov
jmp
jmp
add
add
int3
ret
inc
add
adc
(bad)
call
push
mov
mov
mov
mov
xor
call
mov
mov
mov
call
mov
cmp
je
call
mov
mov
mov
call
mov
call
xor
mov
call
mov
mov
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
call
mov
call
ret
jmp
jmp
xor
pop
pop
pop
mov
jmp
jmp
add
add
mov
inc
add
inc
add
mov
imul
call
mov
xor
mov
call
push
push
push
push
push
push
push
mov
push
push
mov
mov
xor
call
mov
push
push
mov
push
call
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
push
push
push
lea
call
push
lea
mov
call
mov
mov
mov
call
cmp
je
mov
call
xor
pop
pop
pop
mov
push
mov
call
cmp
je
push
push
mov
mov
xor
call
cmp
je
mov
call
push
call
cmp
je
mov
push
call
cmp
je
mov
mov
mov
call
mov
call
xor
mov
ret
jmp
jmp
cmp
je
call
test
jne
push
mov
mov
call
push
mov
mov
call
push
push
call
xor
pop
pop
pop
mov
jmp
jmp
call
call
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
call
add
add
(bad)
(bad)
inc
add
add
add
add
add
dec
add
outs
add
push
add
je
jne
jo
dec
add
add
imul
outs
add
add
add
push
add
add
add
add
add
mov
add
(bad)
(bad)
(bad)
call
add
add
add
dec
add
add
and
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
lea
xor
mov
add
inc
add
lea
adc
inc
add
add
adc
add
inc
add
inc
add
inc
add
adc
xor
inc
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
xor
aam
inc
add
add
add
adc
add
inc
add
inc
add
add
push
adc
add
add
add
pop
add
add
add
push
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
loopne
add
jo
add
adc
add
rol
add
add
add
add
xor
add
xor
add
xor
clc
sbb
jl
inc
add
add
inc
add
retf
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
jmp
nop
inc
jb
outs
jb
mov
push
jne
je
ins
and
jb
jb
and
and
popa
je
xor
xor
xor
xor
add
add
inc
add
(bad)
(bad)
inc
add
add
add
inc
add
add
inc
add
add
add
inc
add
inc
add
push
add
add
cmp
fidivr
inc
mov
or
add
inc
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
ins
inc
add
ins
inc
add
ins
inc
add
ins
inc
add
ins
inc
add
ins
inc
add
ins
inc
add
ins
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
dec
jo
add
add
add
add
add
inc
add
add
add
jb
add
add
add
add
add
add
jb
add
add
add
add
add
add
je
add
add
add
jne
add
add
add
add
add
add
inc
add
add
add
jne
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
inc
add
add
add
add
add
add
js
add
add
add
add
add
inc
add
add
add
jns
add
add
add
inc
add
mov
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
outs
outs
and
je
jo
push
gs
jo
inc
popa
je
and
xor
sub
sub
add
add
outs
outs
and
je
jo
dec
gs
popa
addr16
sub
sub
sub
add
add
inc
add
add
add
add
add
add
xor
add
add
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
lea
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lea
pop
imul
push
add
imul
call
ins
inc
add
inc
add
xor
clc
push
add
inc
add
xor
cmp
pusha
imul
sub
adc
add
inc
add
ins
inc
add
inc
add
inc
add
imul
loopne
inc
add
push
add
imul
push
add
imul
xor
lock
xor
sbb
add
xor
adc
inc
add
inc
add
imul
push
add
inc
add
ins
inc
add
imul
mov
inc
add
push
add
cmp
or
add
imul
push
add
imul
push
add
imul
imul
imul
ins
inc
add
push
add
inc
add
imul
push
add
ins
inc
add
inc
add
ins
inc
add
xor
adc
add
push
add
inc
add
and
pop
ins
inc
add
add
push
add
imul
imul
ins
inc
add
add
ins
inc
add
push
add
imul
imul
imul
imul
and
push
imul
ins
inc
add
push
add
push
add
push
add
inc
add
push
add
inc
add
daa
inc
add
push
add
inc
add
nop
add
or
add
add
add
add
add
push
xchg
add
or
add
adc
add
add
add
nop
xchg
add
sbb
add
and
add
(bad)
xchg
add
xor
add
cli
xchg
add
mov
add
mov
add
add
add
add
add
enter
hlt
xchg
add
ds
add
add
add
add
in
add
jo
add
lock
add
in
xchg
add
xchg
popf
add
clc
xchg
add
hlt
xchg
add
stos
popf
add
add
add
push
xchg
add
es
add
cmp
add
add
add
pop
xchg
add
jb
add
adc
add
add
mov
xchg
add
add
add
in
add
out
xchg
add
not
add
adc
add
and
add
xor
add
dec
xchg
add
pop
xchg
add
jb
add
adc
add
xchg
add
(bad)
xchg
add
fcom
add
cld
xchg
add
push
xchg
add
and
add
dec
xchg
add
pop
xchg
add
push
add
jl
add
mov
add
mov
xchg
add
retf
add
xchg
add
in
xchg
add
add
add
or
add
and
add
xor
add
push
cwde
add
fs
add
js
add
mov
add
mov
add
les
add
out
add
neg
add
sbb
add
add
add
dec
cdq
add
pop
cdq
add
outs
cdq
add
test
add
cmps
cdq
add
mov
add
les
add
in
cdq
add
cld
cdq
add
push
call
sub
add
dec
call
push
call
sahf
call
(bad)
call
out
call
adc
add
xor
add
pop
fwait
add
outs
fwait
add
jle
add
xchg
fwait
add
mov
fwait
add
int3
fwait
add
out
add
cli
fwait
add
push
pushf
add
and
add
add
pusha
pushf
add
outs
pushf
add
sbb
movs
pushf
add
mov
add
les
add
pushf
add
neg
add
popf
add
es
add
ss
add
inc
popf
add
pop
popf
add
add
add
jle
add
add
add
mov
add
add
add
add
xchg
add
es
add
cmp
add
add
add
pop
xchg
add
jb
add
adc
add
add
mov
xchg
add
add
add
in
add
out
xchg
add
not
add
adc
add
and
add
xor
add
dec
xchg
add
pop
xchg
add
jb
add
adc
add
xchg
add
(bad)
xchg
add
fcom
add
cld
xchg
add
push
xchg
add
and
add
dec
xchg
add
pop
xchg
add
push
add
jl
add
mov
add
mov
xchg
add
retf
add
xchg
add
in
xchg
add
add
add
or
add
and
add
xor
add
push
cwde
add
fs
add
js
add
mov
add
mov
add
les
add
out
add
neg
add
sbb
add
add
add
dec
cdq
add
pop
cdq
add
outs
cdq
add
test
add
cmps
cdq
add
mov
add
les
add
in
cdq
add
cld
cdq
add
push
call
sub
add
dec
call
push
call
sahf
call
(bad)
call
out
call
adc
add
xor
add
pop
fwait
add
outs
fwait
add
jle
add
xchg
fwait
add
mov
fwait
add
int3
fwait
add
out
add
cli
fwait
add
push
pushf
add
and
add
add
pusha
pushf
add
outs
pushf
add
sbb
movs
pushf
add
mov
add
les
add
pushf
add
neg
add
popf
add
es
add
ss
add
inc
popf
add
pop
popf
add
add
add
jle
add
add
add
mov
add
add
add
add
gs
jne
xor
cs
ins
add
add
push
jns
inc
jb
gs
je
imul
jns
push
gs
ins
ins
outs
arpl
jb
outs
addr16
outs
add
add
jae
ins
ins
outs
arpl
jb
outs
addr16
outs
add
jbe
jo
xor
cs
ins
add
add
push
gs
jne
jb
push
popa
ins
jne
inc
js
add
add
push
gs
jo
outs
dec
gs
js
add
add
addr16
ins
outs
jae
dec
gs
jne
gs
xor
fs
ins
add
add
inc
gs
gs
outs
popa
jb
push
jns
add
add
fs
je
imul
dec
gs
popa
addr16
outs
js
add
add
popa
jb
gs
push
add
jb
gs
xor
cs
ins
add
add
inc
gs
inc
push
add
add
push
ins
gs
add
push
imul
jb
add
add
jb
jne
ins
inc
ins
ins
outs
arpl
add
add
je
jns
je
ins
dec
outs
outs
add
add
je
imul
je
add
add
gs
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
add
inc
gs
gs
imul
inc
gs
jne
jb
outs
je
push
dec
add
add
push
imul
jne
jb
add
add
push
imul
outs
dec
jne
je
inc
jns
add
add
ins
je
inc
jns
gs
outs
push
imul
add
ins
jae
jb
outs
push
add
add
ins
jae
jb
jo
outs
push
add
add
fs
imul
js
add
add
inc
gs
push
dec
outs
arpl
add
add
je
je
jb
jne
dec
outs
outs
inc
add
add
je
jb
arpl
fs
jae
add
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
add
inc
gs
outs
fs
gs
imul
add
add
inc
gs
outs
arpl
gs
outs
outs
push
add
add
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
jb
gs
imul
add
inc
imul
je
imul
inc
imul
add
add
imul
jae
add
push
jb
je
inc
imul
push
gs
js
gs
imul
gs
add
add
ins
push
outs
ja
outs
add
add
imul
jo
imul
inc
gs
je
dec
popa
outs
fs
add
add
inc
ins
outs
jae
dec
popa
outs
fs
add
jb
gs
xor
cs
ins
add
add
push
ins
jae
gs
popa
ins
jne
add
add
inc
gs
popa
ins
jne
add
add
popa
ins
inc
ins
ins
outs
arpl
add
add
je
outs
fs
gs
popa
outs
fs
gs
add
jne
gs
xor
fs
ins
add
add
inc
jb
popa
je
push
imul
push
add
add
outs
jae
popa
je
dec
gs
popa
add
add
push
gs
imul
outs
addr16
add
add
push
gs
jae
addr16
add
add
dec
jae
push
popa
imul
je
jo
gs
bound
arpl
add
dec
gs
popa
addr16
outs
js
add
add
fs
je
imul
inc
gs
jns
je
ins
dec
gs
imul
inc
js
je
imul
js
add
inc
imul
dec
gs
popa
addr16
add
add
inc
gs
jb
jns
imul
add
popa
jb
jo
gs
jne
push
add
add
inc
popa
ins
ins
push
imul
outs
arpl
imul
gs
xor
cs
ins
add
add
push
jb
je
inc
imul
fs
push
dec
jne
je
inc
jns
add
add
imul
ins
gs
bound
arpl
add
jb
jne
ins
push
jne
jb
add
add
push
imul
jb
je
arpl
add
push
imul
jb
add
add
jb
jne
ins
inc
ins
ins
outs
arpl
add
add
jp
outs
push
gs
jne
arpl
add
add
outs
popa
ins
dec
bound
arpl
fs
popa
imul
dec
popa
jae
inc
jb
outs
jb
add
add
je
imul
gs
add
add
je
jbe
outs
je
add
add
je
jb
outs
jb
outs
fs
add
push
gs
outs
fs
inc
imul
gs
je
jbe
outs
je
add
add
ins
outs
jbe
inc
imul
jns
add
add
push
gs
fs
imul
jne
je
inc
jns
gs
outs
push
imul
add
dec
outs
arpl
gs
jne
arpl
add
add
fs
gs
jne
arpl
add
add
fs
imul
add
add
inc
gs
imul
imul
jns
add
add
inc
gs
gs
imul
add
inc
gs
jae
jb
gs
jne
je
popa
outs
addr16
inc
add
add
inc
gs
push
dec
outs
arpl
add
add
je
jns
je
ins
dec
outs
outs
add
add
je
je
dec
popa
outs
fs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
add
inc
gs
outs
fs
gs
imul
add
add
inc
gs
outs
arpl
gs
outs
outs
push
add
add
inc
gs
popa
jae
inc
jb
outs
jb
add
add
je
jne
ins
push
popa
je
dec
popa
ins
gs
add
add
inc
gs
imul
add
inc
gs
imul
bound
gs
add
add
inc
gs
js
je
outs
fs
jb
arpl
jae
add
add
je
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
add
add
je
imul
push
jo
arpl
add
add
je
jne
jb
outs
je
jb
arpl
jae
add
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
gs
push
dec
outs
outs
add
add
je
jb
outs
arpl
fs
js
push
add
add
je
jb
outs
arpl
fs
outs
ins
jo
jb
inc
js
push
add
add
inc
jb
gs
imul
add
inc
outs
jb
popa
je
gs
popa
addr16
add
add
inc
imul
jne
arpl
add
add
jne
inc
popa
ins
outs
fs
jb
outs
outs
push
add
add
gs
inc
imul
jb
popa
je
push
jb
arpl
jae
add
add
inc
jb
popa
je
inc
imul
jb
popa
je
inc
jbe
outs
je
add
add
inc
jb
popa
je
inc
imul
jns
add
add
inc
ins
outs
jae
dec
popa
outs
fs
add
jbe
jo
xor
cs
ins
add
add
push
gs
jne
jb
push
popa
ins
jne
inc
js
add
add
push
gs
jo
outs
dec
gs
js
add
add
addr16
ins
outs
jae
dec
gs
add
dec
jo
outs
push
jb
arpl
jae
outs
imul
add
add
imul
jb
jbe
ins
gs
popa
ins
jne
push
add
ins
arpl
xor
fs
ins
add
add
dec
outs
imul
inc
outs
outs
je
outs
ins
jae
add
jb
gs
xor
cs
ins
add
add
push
ins
gs
popa
fs
jo
xor
cs
ins
add
add
inc
fs
jae
push
outs
imul
jb
jbe
ins
gs
add
inc
add
inc
add
jmp
add
add
add
add
add
add
jo
add
mov
add
loopne
add
clc
add
sbb
add
adc
add
inc
dec
jmp
add
add
add
add
sub
add
inc
add
add
add
pop
add
add
add
add
inc
dec
jmp
add
add
add
sldt
mov
add
mov
sldt
mov
sldt
rol
add
call
adc
add
add
add
add
inc
dec
jmp
add
add
add
add
sbb
add
xor
add
dec
add
and
add
add
inc
dec
jmp
add
add
add
add
cmp
add
add
inc
dec
jmp
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
inc
dec
jmp
add
add
add
add
add
add
add
add
inc
dec
jmp
add
add
add
add
add
add
add
add
inc
dec
jmp
add
add
add
add
add
add
add
add
inc
dec
jmp
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
sub
add
inc
lds
add
add
lods
retf
call
add
add
add
add
add
cmp
add
push
add
add
add
add
add
js
add
movs
add
add
add
lods
add
add
fiadd
add
add
add
xchg
add
add
add
nop
arpl
add
add
add
add
add
add
sub
add
sbb
add
add
add
add
add
add
add
call
add
add
add
add
add
dec
add
push
add
add
dec
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
sub
add
adc
add
and
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
inc
add
(bad)
inc
add
add
add
(bad)
inc
inc
inc
(bad)
(bad)
inc
add
add
jo
add
pop
add
lea
ja
mov
js
or
js
add
jnp
fisttp
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmp
js
mov
jb
and
jo
pop
push
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
(bad)
push
pop
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
(bad)
mov
out
add
add
add
add
cdq
add
add
add
add
xor
add
xor
add
add
cdq
xor
add
xor
add
xor
add
data16
xor
add
add
cdq
data16
int3
data16
jmp
add
cdq
add
xor
add
cdq
cdq
add
int3
cdq
add
call
add
xor
add
data16
add
cdq
int3
add
int3
int3
add
dec
add
inc
add
inc
add
add
add
add
add
xor
cdq
add
add
add
add
add
add
xor
add
xor
add
xor
cdq
xor
add
xor
add
xor
add
xor
xor
add
xor
cdq
xor
int3
xor
jmp
add
cdq
xor
xor
xor
cdq
cdq
xor
int3
cdq
xor
call
xor
xor
xor
data16
xor
cdq
int3
xor
int3
int3
xor
dec
xor
xor
xor
push
add
push
add
push
add
add
xor
data16
data16
add
inc
data16
xor
xor
data16
data16
xor
push
data16
data16
data16
data16
data16
cdq
data16
cdq
data16
data16
cdq
data16
cdq
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
inc
int3
add
add
add
cdq
cdq
add
add
add
add
add
cdq
add
xor
add
cwd
add
cwd
add
cdq
add
cwd
add
xor
add
cdq
add
cdq
cdq
add
cdq
cdq
add
int3
cdq
add
int3
cdq
add
data16
int3
cdq
add
int3
cdq
add
call
add
cdq
add
call
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cdq
add
data16
add
cwd
add
cdq
int3
add
cdq
int3
add
int3
add
cdq
int3
add
cdq
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cdq
add
dec
add
dec
add
add
add
inc
cdq
add
add
xor
add
xor
add
inc
cdq
xor
add
xor
add
xor
add
inc
xor
add
int3
add
inc
jmp
add
cdq
inc
xor
inc
cdq
cdq
inc
int3
cdq
inc
call
inc
xor
inc
data16
inc
cdq
int3
inc
int3
int3
inc
dec
inc
xor
inc
dec
add
(bad)
inc
jmp
add
data16
jmp
data16
jmp
add
inc
movs
add
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
lock
add
add
add
(bad)
inc
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
pop
add
in
(bad)
inc
(bad)
cli
add
add
add
in
pop
add
pop
pop
inc
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
inc
in
sti
pop
sti
(bad)
inc
pop
add
add
add
inc
pop
in
sti
sti
(bad)
(bad)
inc
pop
pop
pop
add
in
inc
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
(bad)
(bad)
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outs
jp
xor
(bad)
in
add
add
in
(bad)
(bad)
in
outs
in
push
xor
in
add
add
add
in
in
outs
in
jp
xor
in
add
add
add
add
outs
jp
in
push
(bad)
in
add
add
add
add
outs
dec
dec
dec
dec
dec
(bad)
in
add
add
add
add
lock
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
(bad)
inc
add
add
add
(bad)
inc
inc
inc
(bad)
(bad)
inc
add
add
add
add
ja
pop
js
fst
add
js
lock
jg
mov
cdq
nop
add
add
add
xor
clc
std
fstp
add
js
lock
js
mov
cwde
mov
add
add
jg
cmp
xchg
(bad)
add
js
lock
js
or
add
jg
cmp
xchg
add
add
js
lock
mov
jo
add
add
cmp
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
(bad)
js
mov
lock
clc
lock
mov
jg
lock
add
ja
jo
jg
lock
jg
(bad)
(bad)
push
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
add
push
or
mov
ja
ja
jo
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
(bad)
inc
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
ja
ja
ja
ja
add
inc
inc
clc
add
shl
shl
jg
add
jg
add
aas
rol
aas
rol
aas
rol
aas
rol
aas
rol
aas
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
(bad)
mov
out
add
add
add
add
cdq
add
add
add
add
xor
add
xor
add
add
cdq
xor
add
xor
add
xor
add
data16
xor
add
add
cdq
data16
int3
data16
jmp
add
cdq
add
xor
add
cdq
cdq
add
int3
cdq
add
call
add
xor
add
data16
add
cdq
int3
add
int3
int3
add
dec
add
inc
add
inc
add
add
add
add
add
xor
cdq
add
add
add
add
add
add
xor
add
xor
add
xor
cdq
xor
add
xor
add
xor
add
xor
xor
add
xor
cdq
xor
int3
xor
jmp
add
cdq
xor
xor
xor
cdq
cdq
xor
int3
cdq
xor
call
xor
xor
xor
data16
xor
cdq
int3
xor
int3
int3
xor
dec
xor
xor
xor
push
add
push
add
push
add
add
xor
data16
data16
add
inc
data16
xor
xor
data16
data16
xor
push
data16
data16
data16
data16
data16
cdq
data16
cdq
data16
data16
cdq
data16
cdq
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
inc
int3
add
add
add
cdq
cdq
add
add
add
add
add
cdq
add
xor
add
cwd
add
cwd
add
cdq
add
cwd
add
xor
add
cdq
add
cdq
cdq
add
cdq
cdq
add
int3
cdq
add
int3
cdq
add
data16
int3
cdq
add
int3
cdq
add
call
add
cdq
add
call
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cdq
add
data16
add
cwd
add
cdq
int3
add
cdq
int3
add
int3
add
cdq
int3
add
cdq
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cdq
add
dec
add
dec
add
add
add
inc
cdq
add
add
xor
add
xor
add
inc
cdq
xor
add
xor
add
xor
add
inc
xor
add
int3
add
inc
jmp
add
cdq
inc
xor
inc
cdq
cdq
inc
int3
cdq
inc
call
inc
xor
inc
data16
inc
cdq
int3
inc
int3
int3
inc
dec
inc
xor
inc
dec
add
(bad)
inc
jmp
add
data16
jmp
data16
jmp
add
inc
movs
add
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
lock
add
add
add
(bad)
inc
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
add
jmp
add
jmp
xor
add
add
mov
add
add
jmp
pop
xor
lahf
inc
add
in
(bad)
mov
add
jmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
(bad)
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
jmp
add
repnz
out
out
inc
in
(bad)
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
jmp
add
add
lock
in
in
inc
in
(bad)
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
(bad)
(bad)
(bad)
inc
imul
jmp
jae
out
test
in
(bad)
(bad)
(bad)
inc
in
imul
jmp
mov
inc
in
(bad)
(bad)
(bad)
inc
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
(bad)
(bad)
(bad)
inc
div
div
jmp
mov
add
add
pop
out
in
add
add
(bad)
(bad)
(bad)
inc
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
(bad)
(bad)
(bad)
inc
div
div
add
(bad)
in
in
in
in
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
add
add
in
in
in
in
add
div
test
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
jmp
div
add
out
or
in
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
add
add
add
add
jmp
in
inc
add
add
add
add
add
add
pop
in
in
jmp
inc
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
(bad)
(bad)
(bad)
inc
in
inc
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
inc
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
inc
pop
ret
pop
ret
pop
jp
xor
xor
inc
in
add
add
inc
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
inc
jp
pop
ret
pop
ret
pop
jp
xor
inc
in
add
add
inc
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
inc
add
add
add
add
add
add
pop
in
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
(bad)
inc
inc
clc
add
shl
shl
jg
add
jg
add
aas
rol
aas
rol
aas
rol
aas
rol
aas
rol
aas
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
cld
add
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
push
add
outs
add
popa
add
add
add
imul
and
outs
add
ins
add
and
sub
add
add
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outs
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
add
push
add
outs
add
add
outs
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outs
add
add
push
add
outs
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
add
add
dec
add
jns
add
dec
add
outs
add
add
jne
ins
add
add
jne
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outs
add
add
dec
add
ins
add
push
add
jne
add
jae
je
pop
add
outs
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outs
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outs
add
add
popa
add
add
outs
add
add
outs
add
popa
add
add
add
jb
add
ins
add
outs
add
add
js
je
add
outs
add
ins
add
add
js
arpl
add
je
imul
and
and
add
jae
jae
add
je
imul
and
data16
imul
add
add
outs
add
add
data16
arpl
add
add
outs
add
add
jne
jo
jo
outs
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
je
and
ins
add
arpl
imul
add
outs
add
add
ja
outs
add
add
add
outs
add
imul
jb
and
jae
jne
jo
jo
outs
add
je
and
data16
outs
add
je
imul
and
outs
add
je
and
imul
je
imul
imul
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outs
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outs
add
add
je
and
popa
add
add
add
jae
and
and
add
outs
add
add
outs
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
push
add
outs
add
popa
add
add
add
ins
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outs
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outs
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outs
add
add
and
push
add
add
jb
imul
ins
add
add
add
add
outs
add
je
jb
jne
arpl
je
imul
adc
dec
add
add
popa
add
add
outs
add
add
bound
outs
add
je
add
add
js
arpl
add
je
imul
and
and
add
outs
add
add
outs
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
ins
add
arpl
popa
add
add
outs
add
add
jb
jb
outs
add
xor
inc
add
jb
ins
add
je
and
daa
add
add
add
outs
add
popa
add
add
add
jb
and
imul
outs
add
jo
popa
add
add
ins
add
and
ja
imul
and
popa
add
add
ins
add
outs
add
add
outs
add
add
jb
add
ins
add
outs
add
add
outs
add
and
data16
jb
ins
add
je
and
daa
add
add
add
popa
add
imul
je
and
ins
add
je
push
add
add
popa
add
add
and
outs
add
je
and
jae
jne
jo
jo
outs
add
je
add
add
add
add
add
je
add
inc
add
jb
outs
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outs
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outs
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outs
add
je
and
outs
add
and
bound
outs
add
outs
add
add
add
add
add
data16
add
add
outs
add
jns
or
dec
add
add
and
add
jb
outs
add
and
and
add
imul
and
outs
add
je
and
data16
jne
outs
add
add
add
and
ins
add
outs
add
and
outs
add
add
and
data16
ins
add
jae
adc
inc
add
ins
add
and
popa
add
arpl
add
jae
and
add
outs
add
add
add
add
add
add
add
outs
add
add
add
outs
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
ins
add
add
outs
add
popa
add
add
add
jne
ins
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outs
add
and
bound
jns
and
jp
add
outs
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outs
add
adc
dec
add
je
add
add
and
outs
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
ins
add
popa
add
add
add
add
outs
add
outs
add
add
jo
add
popa
add
add
outs
add
add
ins
add
popa
add
add
add
add
outs
add
outs
add
add
add
imul
outs
add
and
bound
jns
and
jp
add
outs
add
add
ins
add
popa
add
add
add
add
outs
add
outs
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outs
add
outs
add
add
outs
add
add
data16
add
sbb
dec
add
jbe
popa
add
add
add
outs
add
outs
add
add
and
outs
add
add
popa
add
add
outs
add
add
add
add
and
add
inc
add
enter
call
add
add
add
add
push
add
jo
add
add
add
add
add
add
add
add
add
add
push
add
jo
add
add
add
add
add
add
add
add
add
add
add
push
add
jo
add
add
add
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
and
xor
push
add
push
add
add
add
pusha
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
and
xor
inc
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
and
mov
xor
xor
xor
xor
push
add
push
add
add
add
mov
mov
mov
mov
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
xor
nop
add
add
rol
add
nop
add
add
rol
add
adc
and
xor
inc
push
fiadd
push
push
pusha
push
push
add
add
push
rol
push
add
rol
push
rol
push
mov
add
push
lock
inc
push
rol
adc
lock
pop
xor
inc
pop
add
out
add
add
add
jo
add
add
pop
mov
pop
rol
loopne
add
pop
add
adc
and
xchg
add
add
add
or
push
or
add
jo
or
add
add
add
or
or
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
or
add
add
or
add
add
or
or
pop
lock
add
add
or
add
add
add
push
or
lock
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
or
or
add
lock
or
lock
add
or
push
or
jo
or
or
add
add
add
add
add
add
add
add
or
add
add
add
or
or
or
or
or
or
add
or
add
add
add
add
add
add
add
or
add
add
push
or
or
add
add
add
add
push
add
add
nop
or
add
jo
mov
add
or
add
add
add
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xor
push
or
jo
or
or
ror
add
adc
adc
and
adc
xor
inc
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
push
adc
pusha
push
adc
adc
adc
adc
jo
adc
sub
xor
or
or
push
nop
push
add
or
or
push
add
pop
or
ror
or
or
or
or
push
pop
or
or
or
or
or
or
or
or
or
or
or
or
push
or
or
adc
adc
adc
adc
adc
adc
femms
adc
adc
loopne
adc
lock
add
add
movups
adc
adc
and
xor
inc
(bad)
mulps
pusha
movups
jo
or
push
nop
sysenter
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xor
xor
xor
xor
xor
xor
xor
xor
mov
push
xor
xor
ror
push
ror
adc
mov
loopne
add
add
add
add
add
add
add
add
add
add
push
add
add
lldt
mov
mov
mov
mov
mov
mov
adc
and
push
add
xor
lock
add
add
fs
add
add
add
add
add
adc
add
add
add
or
movups
adc
adc
adc
adc
loopne
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
adc
adc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
or
or
lldt
adc
adc
ret
or
or
adc
or
or
or
add
add
add
add
add
add
add
add
add
add
adc
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
or
add
add
adc
add
add
add
add
add
add
add
lock
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
adc
adc
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
adc
pusha
adc
lock
add
add
add
add
add
add
add
add
push
add
or
add
adc
add
add
adc
adc
adc
adc
pop
push
add
add
add
add
add
add
add
add
add
add
adc
pop
or
ror
and
xor
add
add
add
add
add
add
lock
add
add
add
lock
add
adc
add
add
add
push
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
lock
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
ror
fimul
add
add
add
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
or
or
or
adc
adc
adc
or
adc
adc
pusha
adc
add
or
or
or
or
add
add
add
add
add
add
or
or
or
or
or
adc
add
add
add
add
add
adc
adc
adc
or
add
add
adc
adc
adc
adc
add
adc
and
push
adc
push
add
add
adc
adc
add
or
add
add
xor
push
add
xor
nop
adc
add
xor
jo
adc
add
adc
mov
push
add
push
add
adc
into
adc
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
lock
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
push
sbb
adc
adc
adc
or
or
sbb
or
or
or
or
or
or
or
or
or
or
or
or
adc
add
add
add
add
add
add
add
pop
sbb
sbb
add
sbb
sbb
prefetchnta
add
adc
or
or
or
or
or
or
add
add
add
add
or
or
or
add
or
add
or
add
or
add
add
add
add
or
add
add
add
add
add
or
add
add
add
pop
or
add
or
or
add
or
or
add
add
or
or
or
or
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
sbb
push
push
push
push
push
push
push
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
or
or
or
or
or
or
or
add
add
sbb
add
add
push
add
add
add
sbb
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
add
add
add
add
add
or
add
add
or
or
or
or
or
or
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
or
or
or
or
or
or
or
or
or
add
adc
adc
add
add
add
add
add
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
pop
pop
adc
add
add
add
add
add
add
add
add
add
add
adc
or
or
or
add
add
adc
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
adc
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
or
or
add
or
or
or
push
push
or
sbb
or
pop
pop
or
or
pop
pop
pop
sbb
pop
adc
adc
adc
add
or
or
or
or
or
add
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
add
add
add
add
add
add
add
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
push
sbb
add
add
add
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
or
or
or
or
or
or
or
or
or
add
or
or
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
adc
or
or
add
add
add
add
pop
pop
pop
pop
pop
add
or
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
pop
add
add
add
pop
pop
pop
add
or
or
or
or
add
or
add
or
or
add
add
add
add
or
add
add
pop
add
pop
pop
or
add
or
or
pop
pop
pop
pop
(bad)
(bad)
(bad)
(bad)
(bad)
bndldx
add
add
add
or
pop
pop
pop
pop
pop
pop
add
add
pop
pop
add
pop
add
pop
add
pop
add
or
or
or
add
add
or
add
or
or
add
add
add
add
add
pop
pop
pop
pop
add
add
pop
pop
pop
add
add
add
add
add
add
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
add
pop
pop
pop
pop
add
or
or
or
or
or
or
or
or
or
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
pop
add
pop
pop
pop
pop
add
or
or
or
or
add
or
add
or
or
add
add
add
add
add
add
pop
pop
add
pop
pop
add
add
or
or
sbb
add
add
add
add
add
add
add
add
or
add
pop
pop
pop
pop
pop
add
add
pop
pop
add
pop
pop
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
pop
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
or
or
or
add
or
or
or
or
add
add
add
add
or
add
add
add
add
(bad)
bndldx
sbb
sbb
pop
sbb
add
add
add
or
add
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
add
add
or
or
or
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
or
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
add
or
or
or
or
add
or
or
or
add
add
add
add
or
add
add
add
pop
add
sbb
add
add
add
add
add
add
add
or
or
add
or
add
or
or
add
add
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
pop
pop
pop
add
add
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
or
or
or
or
or
or
or
or
add
or
adc
add
add
add
add
or
pop
or
or
or
or
add
add
pop
pop
pop
pop
pop
pop
push
or
or
or
or
adc
or
or
add
add
pop
add
add
pop
pop
add
add
pop
add
add
add
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
pop
add
pop
pop
add
add
add
pop
pop
add
pop
pop
pop
or
pop
or
or
or
add
pop
add
pop
pop
pop
pop
pop
add
add
or
or
add
or
or
add
pop
pop
add
pop
sbb
sbb
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
or
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
pi2fw
sbb
or
adc
adc
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
add
add
or
or
or
or
add
or
or
or
or
or
or
or
or
or
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
adc
add
add
add
add
add
add
pop
add
pop
pop
pop
pop
add
pop
add
or
or
or
add
or
or
add
add
add
or
adc
adc
pop
pop
or
or
add
add
add
or
or
or
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
pop
pop
pop
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
pop
add
pop
pop
pop
pop
pop
pop
pop
add
add
pop
pop
pop
add
pop
add
pop
pop
pop
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
or
adc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
lar
add
sbb
sbb
sbb
sbb
sbb
add
add
add
pop
pop
pop
pop
add
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
pop
pop
pop
pop
pop
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
adc
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
push
add
add
add
add
add
add
add
add
pop
or
or
add
add
add
add
add
pop
pop
or
or
adc
add
add
add
pop
or
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
pop
pop
pop
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
add
or
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
lar
add
add
adc
adc
adc
add
pop
pop
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
add
add
add
or
or
or
or
or
add
add
or
or
or
or
or
add
add
add
add
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
or
add
add
add
or
or
add
add
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
or
or
or
add
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
add
add
adc
sbb
sbb
sbb
or
or
or
or
or
sbb
sbb
sbb
sbb
add
add
add
add
push
push
push
add
add
add
add
add
add
or
or
or
or
or
or
add
add
add
add
add
add
add
add
add
or
or
add
add
or
or
add
add
add
add
or
or
or
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
or
or
or
add
add
or
sbb
add
or
or
or
sbb
add
add
or
sbb
sbb
add
or
or
sbb
add
add
add
or
sbb
sbb
sbb
sbb
add
adc
adc
adc
adc
adc
adc
adc
adc
add
add
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
syscall
add
(bad)
(bad)
(bad)
(bad)
(bad)
nop
sbb
adc
(bad)
(bad)
(bad)
(bad)
(bad)
nop
sbb
adc
push
push
push
push
push
add
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sbb
sbb
sbb
or
sbb
add
sbb
sbb
sbb
or
or
sbb
sbb
sbb
or
or
or
or
or
sbb
add
add
or
sbb
sbb
sbb
add
sbb
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
femms
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
add
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
sbb
sbb
sbb
sbb
add
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
bndldx
sbb
sbb
sbb
sbb
sbb
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
bndldx
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
add
add
add
add
add
add
add
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
push
adc
adc
adc
adc
adc
adc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
bndldx
add
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
sbb
sbb
add
add
sbb
sbb
sbb
push
adc
adc
adc
add
add
sbb
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
sbb
sbb
sbb
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
sbb
sbb
add
add
add
add
add
add
add
adc
add
add
add
add
add
pop
pop
pop
pop
pop
pop
add
add
add
add
add
adc
adc
adc
adc
adc
add
adc
add
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
push
pop
push
push
adc
adc
adc
adc
adc
sbb
adc
adc
adc
adc
push
adc
sbb
push
push
push
push
push
push
push
push
or
or
or
adc
push
push
push
push
sbb
push
push
push
push
pop
adc
pop
pop
pop
pop
pop
add
or
sbb
push
push
pop
adc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
sbb
(bad)
(bad)
(bad)
bndldx
sbb
sbb
sbb
sbb
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sysret
pop
pop
pop
pop
pop
add
add
add
add
add
pop
pop
pop
pop
pop
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
push
push
push
add
add
add
sbb
add
add
add
add
add
add
add
pop
or
pop
pop
or
pop
pop
pop
or
pop
pop
pop
pop
pop
pop
or
or
or
sbb
sbb
add
add
pop
pop
pop
adc
add
add
add
add
pop
pop
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
add
add
pop
add
pop
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
add
adc
add
add
add
adc
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
sbb
adc
add
add
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
adc
adc
sbb
add
add
push
sbb
sbb
adc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
add
pop
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
pop
add
pop
pop
pop
add
add
pop
sbb
sbb
pop
add
sbb
sbb
sbb
add
add
add
add
add
add
add
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
femms
push
push
push
push
(bad)
(bad)
(bad)
bndldx
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
(bad)
(bad)
lar
add
add
add
add
add
pop
push
pop
pop
pop
pop
pop
pop
pop
pop
push
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
adc
push
add
add
add
add
add
pop
pop
pop
pop
pop
pop
add
pop
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
add
add
add
pop
pop
pop
pop
pop
pop
pop
(bad)
(bad)
(bad)
lar
add
add
add
add
add
add
or
pop
pop
pop
pop
add
add
or
or
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
lar
add
add
add
adc
adc
add
add
add
adc
add
add
add
add
add
add
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
or
or
or
sbb
or
or
or
add
add
add
add
or
or
or
or
sbb
or
or
or
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
or
or
add
add
add
add
add
(bad)
lar
add
add
add
add
add
add
or
or
or
or
or
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
add
add
add
add
or
or
add
or
add
or
add
or
or
or
or
or
or
add
add
add
or
or
or
add
or
or
or
or
add
or
or
or
add
add
or
add
or
or
or
or
or
or
add
or
or
or
or
add
add
add
add
add
add
add
add
or
or
or
or
add
add
add
add
add
sbb
or
or
or
or
or
sbb
add
add
add
or
or
or
or
or
or
or
or
add
add
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
and
xor
adc
inc
add
pusha
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
push
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
add
adc
push
add
adc
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
pusha
add
add
add
add
add
add
add
add
mov
add
add
dec
add
add
add
add
add
add
add
add
rol
loopne
lock
add
add
add
add
add
push
add
add
jo
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
and
xor
and
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
inc
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
lock
add
lock
add
sar
add
add
add
loopne
add
add
add
call
add
add
mov
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
mov
add
xor
add
add
add
mov
add
lock
add
lock
add
lock
add
lock
add
lock
add
and
add
add
add
pop
inc
add
add
add
inc
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
loopne
add
add
add
clc
aas
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
inc
add
add
add
sbb
add
add
add
inc
add
add
add
and
add
add
add
mov
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
and
add
add
add
xor
add
add
add
ds
add
add
add
inc
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
add
add
push
inc
add
add
add
add
add
pop
inc
add
add
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
xor
add
add
add
inc
add
add
add
xor
add
add
add
mov
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
push
push
aad
pop
push
dec
or
in
call
aas
call
aas
xor
xor
xor
jecxz
call
aas
je
sub
pop
push
lds
mov
stos
jmp
add
aas
add
add
add
fdivr
add
add
add
in
add
add
add
in
aas
add
add
add
lock
add
add
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
and
add
add
add
es
add
add
add
sub
add
add
add
add
add
add
pop
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
and
add
add
add
es
add
add
add
sub
add
add
add
inc
add
add
add
sub
add
add
add
cs
add
add
add
xor
add
add
add
inc
add
add
add
xor
add
add
add
inc
add
add
add
xor
add
add
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
and
add
add
add
es
add
add
add
sub
add
add
add
inc
add
add
add
and
add
add
add
es
add
add
add
sub
add
add
add
inc
add
add
add
sub
add
add
add
cs
add
add
add
xor
add
add
add
inc
add
add
add
xor
add
add
add
inc
add
add
add
xor
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
es
add
add
add
sub
add
add
add
inc
add
add
add
sub
add
add
add
cs
add
add
add
xor
add
add
add
inc
add
add
add
xor
add
add
add
inc
add
add
add
xor
add
add
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
and
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
and
add
add
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
and
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
loopne
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
and
add
add
add
xor
add
add
add
ds
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
mov
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
xor
add
add
inc
add
add
add
aaa
inc
add
add
add
cmp
add
add
add
inc
add
add
add
cmp
add
add
add
inc
add
add
add
cmp
add
add
add
cmp
add
add
inc
add
add
add
aas
inc
add
add
add
inc
inc
add
add
add
add
add
inc
inc
add
add
add
add
add
lock
add
inc
inc
add
add
add
add
add
inc
inc
add
add
add
add
add
inc
inc
add
add
add
add
add
inc
inc
add
add
add
add
add
inc
inc
add
add
add
add
add
inc
inc
add
add
add
add
add
dec
inc
add
add
add
add
add
dec
inc
add
add
add
and
add
add
add
xor
add
add
add
ds
add
add
add
inc
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
add
add
push
inc
add
add
add
add
add
pop
inc
add
add
add
imul
shl
add
add
add
add
add
add
inc
add
add
add
add
add
add
test
add
add
add
add
and
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
mov
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
icebp
inc
add
add
add
add
add
cmc
inc
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
sar
add
add
add
loopne
add
add
add
lock
add
add
add
adc
add
add
add
dec
inc
add
add
add
inc
add
add
add
add
add
inc
add
add
add
adc
add
add
add
and
add
add
add
dec
inc
add
add
add
pop
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
adc
add
add
add
and
add
add
add
dec
inc
add
add
add
pop
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
inc
add
add
add
and
add
add
add
lock
add
add
add
lock
add
add
add
lock
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
ds
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
pop
inc
add
add
add
jb
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
adc
add
add
add
dec
inc
add
add
add
loopne
add
add
add
loopne
pop
push
dec
or
in
add
add
add
call
add
add
mov
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
adc
add
add
add
and
add
add
add
dec
inc
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
mov
add
add
add
mov
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
pop
inc
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
and
add
add
add
xor
add
add
add
pop
inc
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
xor
add
add
add
pop
inc
add
add
add
inc
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
or
add
add
add
inc
add
add
add
adc
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
or
add
add
add
inc
add
add
add
adc
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
lock
add
add
add
add
add
add
add
inc
add
add
add
or
add
add
add
inc
add
add
add
adc
add
add
add
lock
add
lock
add
lock
add
add
add
add
add
add
add
inc
add
add
add
or
add
add
add
inc
add
add
add
adc
add
add
add
or
add
add
add
inc
add
add
add
adc
add
add
add
inc
add
add
add
adc
add
add
add
inc
add
add
add
sbb
add
add
add
add
add
add
sbb
add
add
add
sbb
add
add
add
and
add
add
add
inc
add
add
add
and
add
add
add
inc
add
add
add
and
add
add
add
inc
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
aas
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
inc
add
add
add
adc
add
add
add
adc
add
add
add
lock
add
lock
add
lock
add
add
add
add
pop
imul
push
aad
pop
push
dec
or
in
mov
stos
jmp
push
aad
pop
push
dec
or
in
add
add
add
sar
add
add
add
aas
je
sub
pop
push
lds
add
add
add
sar
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
push
inc
add
add
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
lock
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
inc
add
lock
add
add
add
add
add
add
add
inc
es
aaa
mov
pop
fwait
cmp
add
add
pop
add
add
or
je
jo
fs
adc
jb
jne
arpl
add
outs
arpl
add
push
push
jns
gs
add
outs
imul
je
ins
add
aaa
push
popa
je
inc
jne
arpl
add
push
jns
push
je
ins
jae
adc
push
je
jb
or
push
imul
adc
push
push
dec
inc
outs
outs
jae
jae
adc
dec
popa
je
add
popf
push
jns
inc
outs
outs
jae
add
pop
push
je
push
je
ins
jae
adc
dec
ins
jo
adc
outs
outs
add
inc
inc
imul
add
ret
je
xor
ins
add
arpl
jae
inc
jne
arpl
add
dec
jae
dec
inc
jae
add
add
ret
ins
jo
gs
add
test
jb
arpl
add
add
push
push
push
dec
add
dec
gs
popa
addr16
adc
inc
xor
gs
jo
outs
je
add
pop
dec
inc
inc
arpl
jo
ins
popa
ins
ins
add
push
pop
push
push
push
add
push
popa
gs
dec
dec
push
popa
je
add
ins
push
je
int
xlat
jnp
sub
add
add
ltr
push
or
sar
adc
dec
push
xor
add
add
add
mov
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
fild
and
add
bound
fild
and
add
aas
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
cs
add
add
add
add
add
add
add
bound
xor
add
jb
sub
add
ins
add
add
je
jae
add
push
add
imul
imul
je
popa
add
add
je
imul
and
ja
popa
add
and
bound
jne
imul
and
ja
imul
and
dec
add
outs
add
and
push
add
je
jne
jo
add
add
add
add
outs
add
jo
popa
add
jns
dec
add
ins
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
mov
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jae
je
popa
add
add
add
and
push
add
popa
add
je
and
push
add
add
add
xor
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
dec
add
add
ins
add
push
add
jb
jae
imul
add
add
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
push
add
push
add
dec
add
and
add
jae
imul
and
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
outs
add
add
je
dec
add
ins
add
add
add
push
add
popa
add
je
and
push
add
add
add
xor
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
mov
xor
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
cmp
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
jae
ins
bound
fs
je
je
or
and
ins
gs
dec
outs
outs
outs
cs
gs
jo
or
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
and
jb
imul
xor
xor
xor
or
and
gs
xor
and
ds
jae
jb
jo
imul
outs
and
je
jo
das
fs
jb
jo
imul
fs
outs
fs
arpl
or
and
gs
outs
fs
je
jae
gs
bound
or
and
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
and
gs
xor
and
and
and
and
and
and
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
and
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
and
and
and
and
and
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
and
addr16
addr16
or
and
and
and
and
ds
and
fs
outs
fs
je
jae
gs
bound
or
gs
outs
fs
arpl
or
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
and
and
and
and
and
jne
inc
arpl
jae
cmp
jae
and
ds
and
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
je
jne
je
outs
outs
ds
jo
imul
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
imul
gs
imul
and
and
and
and
cmp
jo
inc
ja
jb
and
ins
outs
jae
and
je
cmp
das
jae
push
cs
imul
je
arpl
das
push
dec
dec
das
xor
xor
outs
ja
push
gs
imul
jb
gs
fs
inc
ja
jb
ds
and
ja
outs
outs
ja
push
gs
imul
cmp
popa
jo
ins
imul
ds
ins
jo
je
bound
imul
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
jo
je
bound
imul
or
and
jo
ins
imul
ds
and
and
and
jne
jo
jb
gs
push
and
cmp
xor
xor
xor
sub
sub
sub
gs
xor
das
ds
and
and
and
jne
jo
jb
gs
push
and
cmp
xor
cmp
popa
sub
sub
sub
sub
xor
xor
jge
das
ds
and
and
and
jne
jo
jb
gs
push
and
cmp
xor
cmp
sub
sub
sub
sub
xor
xor
ss
jge
das
ds
and
and
and
jne
jo
jb
gs
push
and
cmp
ss
arpl
ss
sub
sub
sub
data16
cmp
das
ds
and
popa
jo
ins
imul
ds
outs
ins
jo
je
bound
imul
popa
jae
gs
bound
or
add
bound
push
in
fwait
loopne
pop
add
xchg
mov
pop
imul
add
xchg
add
inc
out
jl
cmc
or
inc
add
call
(bad)
rcl
sahf
popa
pushf
adc
mov
push
adc
lds
enter
inc
mov
(bad)
jb
or
lds
test
adc
pop
lahf
(bad)
push
mov
pusha
popf
aam
stc
sti
popa
in
outs
mov
cmp
sbb
lahf
leave
push
push
mov
mov
imul
jl
call
adc
xor
mov
addr16
ret
sbb
loope
pushf
aad
pop
jbe
push
out
dec
int3
and
add
retf
test
cld
xor
shl
pushf
fidiv
ficomp
int3
mov
push
xor
ds
out
sbb
(bad)
adc
adc
pop
pop
dec
movs
js
xlat
iret
or
cmp
jnp
xchg
loope
xchg
or
mov
pop
push
xor
dec
xor
aam
adc
js
ds
jg
das
sar
mov
fs
pop
dec
adc
mov
aaa
mov
movs
data16
xchg
adc
adc
(bad)
jmp
sub
cli
and
bnd
dec
stc
mov
ror
and
pop
call
adc
dec
gs
fnstenv
icebp
test
outs
jbe
div
scas
lods
add
lods
stos
mov
fsub
sub
clc
cmp
fsub
xor
pop
mov
push
scas
rcl
inc
cdq
mov
lea
mov
loope
mov
mov
and
fisub
xchg
mov
fs
fimul
inc
fs
sbb
push
add
test
push
inc
fwait
imul
push
mov
inc
popf
inc
imul
jne
popa
jbe
add
push
jno
pop
push
jmp
sub
(bad)
jmp
cli
pushf
ret
cmp
lahf
sbb
pusha
(bad)
test
movs
adc
adc
or
jmp
das
sbb
movs
jnp
dec
cmp
stos
je
retf
cmp
cld
in
(bad)
cmps
sub
inc
add
mov
outs
dec
push
dec
jmp
cwde
dec
pusha
ret
adc
mov
mov
inc
xor
push
loope
push
imul
fidiv
retf
jnp
dec
icebp
cmc
stc
inc
jb
mov
and
fwait
gs
mov
xor
push
mov
push
popa
(bad)
out
gs
jae
je
cwde
mov
daa
fnstcw
mov
xchg
leave
rol
test
or
xchg
lods
sub
sub
dec
js
lea
inc
rcl
test
pusha
retf
(bad)
adc
je
neg
bound
aad
out
outs
or
js
cmp
or
xlat
cmp
cs
adc
retf
shr
popf
push
mov
xchg
jg
(bad)
fistp
repnz
je
jbe
out
inc
jmp
pop
pop
jno
dec
jmp
cmp
inc
mov
aam
pop
and
outs
movs
adc
sar
add
pop
dec
jg
sub
push
inc
cli
clc
aas
int3
xrstor
popa
mov
cdq
mov
xchg
in
jl
not
mov
les
mov
fs
inc
lods
out
mov
es
pop
pusha
dec
ret
daa
or
test
lock
into
fisttp
xchg
mov
xor
lods
inc
push
lock
push
add
fbld
test
stos
popf
mov
dec
pushf
ss
jne
add
inc
mov
or
xor
cs
pop
jnp
xchg
inc
mov
es
jecxz
bound
pop
mov
sub
repnz
mov
and
int
iret
in
mov
scas
inc
retf
test
lds
ins
sbb
sub
mov
mov
or
sub
add
and
(bad)
mov
(bad)
xchg
in
and
out
icebp
test
mov
pop
ss
fsubr
ss
test
push
leave
fisubr
imul
leave
cmps
test
pop
dec
push
into
loop
adc
mov
lahf
or
add
jmp
les
pop
mov
pop
(bad)
repnz
lock
mov
jno
inc
pop
fucomip
or
daa
add
pushf
or
mov
xor
aam
push
add
(bad)
jae
(bad)
out
push
xchg
addr16
sti
adc
jne
jecxz
shr
iret
pop
dec
clc
or
into
sub
repz
js
push
retf
ss
mov
loope
inc
retf
loop
test
pop
imul
loope
mov
or
sar
test
mov
call
sub
cs
cmp
push
mov
xor
test
gs
loope
mov
push
std
rcl
mov
ins
pop
cmp
adc
test
sets
inc
pop
pop
fild
inc
int3
push
ds
and
stos
out
daa
xor
leave
xor
fst
add
inc
mov
xchg
dec
lea
mov
ret
movs
jae
leave
daa
and
pop
jbe
xor
hlt
stc
adc
jle
fist
scas
pop
stos
pop
movs
mov
cmp
cmps
cld
test
add
inc
push
adc
cdq
stc
mov
outs
mov
loopne
inc
es
and
and
mov
lds
jae
int
pop
jl
pop
adc
cmp
sti
shr
add
jae
and
icebp
mov
cs
xchg
test
jmp
aam
xor
or
pop
jge
cld
or
lods
repz
push
mov
cmp
cmps
xchg
int
xor
add
xor
xor
(bad)
fdiv
and
xchg
inc
bound
xor
push
mov
test
pop
dec
or
mov
(bad)
cmp
jbe
jns
or
stc
stos
sub
mov
ins
ja
push
cmp
dec
shl
div
out
inc
je
ds
lds
xchg
or
stos
or
call
loop
mov
(bad)
(bad)
fdiv
aam
clc
fimul
sbb
movs
push
cld
outs
mov
retf
pop
xchg
and
and
addr16
add
aas
imul
rol
sbb
inc
mov
xchg
in
div
xchg
je
sbb
addr16
cmp
data16
push
jae
scas
cmc
cmp
xor
dec
(bad)
(bad)
stc
sbb
clc
imul
bound
cmp
arpl
cmc
dec
mov
ja
lock
rol
or
dec
pusha
inc
call
les
jbe
adc
sub
sbb
pop
dec
call
data16
add
add
loop
or
stos
jmp
xchg
dec
stc
mov
fwait
das
mov
fs
cld
neg
sub
mov
repz
sahf
push
xrelease
xor
push
popa
mov
xor
stos
imul
pop
ss
and
cmps
inc
push
call
inc
ins
xchg
retf
(bad)
std
add
jb
or
(bad)
jge
(bad)
out
mov
popf
push
xor
pusha
mov
out
out
xchg
pushf
xlat
jge
pusha
cwde
jns
xchg
aas
mov
dec
jg
rol
ins
data16
sbb
push
add
or
jecxz
call
push
jge
stc
dec
pop
out
into
rol
add
aam
or
add
dec
mov
rcl
cdq
loopne
in
repnz
scas
inc
ror
psubsb
add
sub
jne
dec
lods
or
pop
clc
mov
pop
(bad)
dec
xor
push
(bad)
push
fstp
and
adc
(bad)
pop
call
and
push
add
and
hlt
loope
fnsave
mov
stos
mov
fimul
inc
repz
mov
call
cmp
mov
jmp
out
test
ficom
sub
xor
icebp
fs
je
int3
lods
fucomp
cmps
mov
inc
adc
xor
(bad)
xchg
xor
mov
mov
mov
push
dec
add
mov
adc
or
les
and
data16
xchg
fstp
or
xor
cmps
imul
push
pop
adc
add
mov
scas
xchg
call
xchg
lods
sbb
pop
push
xor
fbstp
mov
in
fwait
inc
call
xchg
aad
xor
jle
jmp
jb
ja
cmp
or
movs
xlat
mov
ja
sahf
cmc
push
js
iret
cmp
(bad)
xor
bound
jg
out
imul
or
movs
mov
mov
add
sar
jle
cdq
jae
push
adc
adc
pop
test
ds
pop
sub
xor
cmp
xchg
aad
pushf
loop
inc
dec
jbe
dec
or
jle
xor
call
cmp
ss
mov
add
xor
sub
das
mov
aas
lock
dec
and
sbb
jmp
cmp
popf
inc
push
imul
mov
cmc
fs
lods
cmc
inc
jmp
dec
ss
mov
test
xor
mul
dec
in
aad
jbe
adc
adc
cmp
imul
mov
sub
in
imul
push
dec
lahf
in
push
jb
out
adc
push
pushf
mov
popf
fisttp
out
xor
sbb
je
out
ret
inc
ins
adc
push
cmp
xor
mov
dec
mov
xor
mov
cmps
mov
jge
das
arpl
fidiv
aad
pop
retf
add
or
pop
ins
leave
and
pop
and
repz
sbb
dec
loope
movs
add
adc
mov
xchg
sti
pop
sahf
xchg
loop
dec
leave
jnp
jmp
clc
fwait
and
movs
mov
fldenv
fnsave
jg
les
sar
mov
js
mov
loopne
imul
aas
xchg
pop
jecxz
inc
jmp
shl
out
aaa
pop
add
in
sbb
push
imul
add
outs
cld
sbb
test
jne
sbb
mov
dec
in
std
mov
jae
jne
fwait
sbb
es
pop
mov
jp
mov
and
and
push
call
and
(bad)
cld
adc
push
(bad)
fisttp
xchg
cmps
repnz
dec
add
imul
sub
dec
ja
test
pusha
mov
xchg
lds
mov
pop
sti
aam
std
rol
bound
movs
lods
adc
sbb
lea
cli
mov
inc
out
mov
out
cdq
mov
dec
mov
int3
in
movs
jbe
xchg
hlt
ds
mov
pop
popa
pop
adc
ds
inc
cwde
mov
or
imul
je
stos
rcr
mov
scas
sbb
jne
and
xlat
ins
jae
std
out
out
ret
dec
out
je
clc
push
cmp
jecxz
mov
mul
inc
nop
and
sti
imul
mov
push
test
outs
dec
rcl
inc
jno
mov
sbb
sub
inc
pushf
sub
xchg
or
and
push
push
xor
sbb
jmp
mov
xchg
stos
fcmovnbe
mov
leave
and
adc
in
cdq
jbe
sub
mov
iret
mov
pushf
gs
lahf
and
js
jnp
out
xor
or
lahf
sbb
pop
sbb
scas
shl
pop
ror
and
inc
ror
dec
pop
test
les
fist
xor
inc
(bad)
gs
cmp
stc
dec
or
ret
and
cmc
xlat
jmp
inc
mov
sub
xor
ret
mov
retf
pop
int3
inc
mov
mov
xor
sub
test
jl
cmp
iret
sub
lds
and
fwait
inc
inc
push
mov
rol
jle
inc
call
neg
push
cmc
daa
lds
cmps
nop
mov
repz
inc
adc
stos
xchg
sbb
cmp
in
out
inc
xor
adc
sub
dec
jle
mul
sub
loopne
retf
imul
hlt
jns
es
test
dec
out
or
lahf
pop
aas
gs
fwait
ds
clc
mov
jmp
cmp
inc
xchg
js
xlat
inc
adc
es
arpl
ins
sbb
repnz
sub
(bad)
mov
bound
xchg
inc
out
push
fcomp
mov
outs
movs
ret
pop
mov
sub
cmp
or
enter
rcr
mul
add
fst
or
sti
leave
mov
(bad)
sub
shr
sbb
out
pusha
(bad)
(bad)
std
adc
jmp
data16
dec
pop
mov
aas
jnp
or
cmp
mov
pop
rcr
in
add
ds
aaa
outs
clc
xlat
push
dec
sub
inc
(bad)
mov
pop
aaa
mov
(bad)
stc
aas
xchg
loop
dec
lahf
mov
inc
push
aaa
ret
or
push
icebp
dec
cmp
fdiv
push
mov
inc
fisubr
cwde
dec
pop
jns
mov
test
daa
rol
mov
lea
fs
inc
cmp
add
or
push
stc
nop
(bad)
icebp
and
mov
dec
and
or
and
hlt
sbb
(bad)
cmp
mov
cdq
mov
inc
adc
and
xchg
shl
cmp
cmp
leave
js
fwait
test
repnz
test
xchg
mov
(bad)
mov
mov
fld
dec
jg
push
adc
jg
sbb
jbe
enter
mov
xor
lea
(bad)
in
std
cli
mov
jae
jg
and
push
movs
test
sahf
xor
dec
add
das
adc
jo
mov
fistp
out
(bad)
mov
in
pop
inc
push
push
(bad)
xchg
int3
in
into
loopne
push
dec
pop
cli
cmps
xchg
sub
ds
ret
ss
call
xor
sub
push
push
js
cmc
cmp
push
popf
in
popa
lods
cmp
sahf
out
jmp
sbb
jnp
rcr
dec
xchg
and
mov
ss
xchg
mov
dec
pushf
out
mov
mov
jecxz
imul
iret
inc
mov
(bad)
xor
jle
loopne
sbb
inc
inc
and
lods
les
jp
sbb
inc
sti
xor
in
rcl
mov
xor
out
mov
push
retf
adc
add
mov
into
or
in
jo
inc
test
jl
bound
loop
and
pop
lods
pop
pushf
fmul
pop
add
enter
pop
push
fcomp
or
push
cmps
mov
inc
mov
ins
fidivr
in
pop
sahf
repnz
or
fidivr
cmp
and
cs
ds
ror
mov
sbb
mov
xor
fwait
mov
loop
std
retf
and
imul
mov
cdq
mov
cwde
ret
jno
and
cmp
aaa
dec
out
pop
dec
xchg
sub
clc
mov
inc
repnz
inc
push
fwait
lds
mov
mov
fcom
mov
xchg
cmp
fcmovnb
popf
(bad)
adc
lods
das
sbb
sub
pop
mov
adc
stos
pop
jns
pop
outs
out
xchg
cld
xor
inc
fcomp
xchg
sub
ds
add
push
mov
dec
arpl
(bad)
iret
xchg
or
xchg
sub
pop
dec
pop
daa
sub
pop
gs
lds
mov
push
pop
pop
out
dec
xchg
mov
fbld
pushf
or
shr
sbb
out
jg
and
imul
inc
aas
xchg
and
aad
xchg
addr16
xchg
arpl
(bad)
mov
setae
fld
sbb
xchg
or
outs
out
jbe
xchg
mov
add
movs
or
dec
jno
cmp
xchg
(bad)
jbe
cwde
mov
fsubr
push
cs
mov
dec
and
pop
ins
mov
sub
dec
mov
sbb
popa
callw
jne
ds
cwde
jne
push
ror
or
pushf
loope
leave
adc
xchg
repnz
push
cwde
push
inc
scas
sahf
dec
xor
jle
icebp
jb
mov
jae
adc
fwait
shl
mov
(bad)
lods
adc
jl
add
jle
aad
enter
icebp
clc
xor
inc
loope
test
or
push
add
dec
ins
ret
lea
cdq
fs
dec
out
fild
sub
call
cli
push
or
daa
js
and
loopne
in
shl
in
mov
ret
cmp
cmp
dec
jmp
pushf
xchg
push
sti
push
pop
and
add
mov
mov
sbb
adc
and
clc
mov
mov
mov
mov
jg
pop
sbb
pop
js
mov
sub
loope
outs
pushf
sbb
lgs
mov
repnz
(bad)
fwait
ss
shl
outs
sti
fnstcw
pop
shl
sahf
dec
push
ins
mov
push
or
sub
inc
out
inc
lods
mov
gs
lods
adc
push
jno
xor
mov
shl
inc
jle
lea
ins
push
jne
jb
fdiv
mov
mov
test
push
mov
iret
cmc
cmp
jno
cmp
lock
dec
or
xor
fsubr
jecxz
jno
fisubr
in
pop
inc
dec
call
inc
xchg
add
dec
(bad)
fcmovbe
sub
pop
int
adc
xchg
bound
div
cwde
shl
fs
ror
inc
dec
adc
mov
jge
mov
int
inc
lods
mov
jp
shr
ins
cmp
mov
mov
and
test
pop
mov
aad
loopne
push
sahf
lds
out
xor
xchg
adc
mov
popa
inc
or
dec
or
int
aam
sub
cmp
pop
push
sbb
jno
add
shl
loope
mov
mov
xor
inc
popa
jae
int3
pusha
test
icebp
inc
pop
pop
in
fcomp
inc
lock
push
mov
ss
popf
fdiv
push
retf
dec
shl
mov
and
fisubr
aaa
mov
pop
jno
lock
scas
loop
pop
mov
repnz
fisttp
sbb
into
mov
xor
cmps
aam
(bad)
sbb
or
ret
dec
jle
call
sahf
out
icebp
inc
cmp
inc
pop
out
lods
fcmovne
mov
pop
leave
mov
mov
mov
(bad)
xlat
dec
in
outs
cmp
dec
lock
push
out
sbb
retf
in
jbe
dec
mov
or
in
loope
mov
icebp
call
sti
xchg
shl
jb
push
sub
jae
fldcw
outs
dec
fwait
xchg
add
aad
(bad)
das
inc
test
inc
ror
xchg
xor
jno
pop
dec
(bad)
(bad)
imul
xchg
ins
jp
jb
lods
mov
cld
in
icebp
loope
out
pop
bswap
dec
xor
gs
add
jne
add
xchg
pop
or
aaa
lods
popf
mov
jmp
push
push
stos
fadd
mov
out
inc
addr16
sub
jae
dec
xchg
hlt
xchg
sbb
frndint
lock
mov
xchg
and
aam
fwait
cmp
retf
pushf
fmul
or
and
sbb
iret
xchg
popa
add
inc
nop
fwait
lods
lahf
cmps
in
movs
or
test
neg
popf
jmp
fcomp
ret
or
loopne
sahf
dec
repz
scas
lods
sbb
pop
xchg
mov
or
scas
push
xlat
(bad)
or
mov
push
into
xchg
pop
outs
cld
shl
adc
inc
lods
rol
add
sub
jge
rol
xchg
ins
shr
mov
cmps
inc
icebp
and
inc
xchg
test
jp
jp
jne
lea
and
pop
(bad)
inc
add
(bad)
or
repz
sbb
mov
in
mov
pop
pop
bound
xchg
popf
add
mov
lods
pop
mov
or
or
sbb
pop
add
test
mov
mov
add
cmc
pop
mov
inc
mov
or
jae
hlt
stc
mov
daa
sub
mov
mov
pop
cmp
or
inc
(bad)
aam
sbb
ret
inc
xor
jne
and
(bad)
das
jnp
scas
repz
cmp
mov
test
and
outs
lea
dec
push
inc
mov
addr16
sbb
cmp
pushf
(bad)
sub
repnz
xchg
lock
ins
cwde
inc
mov
out
mov
mov
dec
pop
mov
sub
je
lods
add
push
jo
fldcw
mov
retf
cmp
jno
push
imul
mov
push
outs
cmovne
ins
sbb
sub
and
sub
push
jle
clc
jno
xchg
mov
adc
mov
stos
cmp
add
jl
cld
xrelease
outs
jns
not
(bad)
imul
ret
jmp
inc
push
sar
addr16
push
push
sub
fstp
jg
mov
and
(bad)
mov
cmps
add
ficom
mov
or
cmp
dec
jo
cmc
sbb
push
mov
sti
xor
xor
sbb
nop
mov
xchg
cmp
(bad)
(bad)
pop
jae
mov
popa
dec
dec
adc
inc
test
nop
sub
jg
push
dec
adc
arpl
push
cmp
(bad)
xchg
sub
shr
fsubr
popf
add
test
xor
xchg
cmc
hlt
aam
dec
adc
dec
mov
or
push
scas
mov
jg
cmp
lods
inc
ficom
or
fist
mov
fld
pop
push
sbb
test
adc
cmp
loopne
mov
jge
add
(bad)
(bad)
xchg
loopne
jge
mov
jb
add
cwde
add
push
iret
in
pop
test
std
xor
mov
movs
ins
shr
icebp
add
xchg
sbb
ficom
fisub
push
lds
and
or
mov
shl
pop
pop
pop
dec
push
je
iret
movs
push
dec
dec
sahf
sar
xor
data16
scas
dec
into
xor
inc
fidiv
adc
test
add
out
mov
dec
pop
stos
aam
(bad)
sbb
fdivr
xor
daa
add
adc
repnz
out
mov
test
ret
or
in
sub
dec
and
pushf
cdq
mov
jae
test
push
adc
push
jmp
or
aaa
mov
(bad)
lock
test
out
das
add
cli
stos
es
imul
mov
xchg
cli
lahf
and
mov
not
sbb
or
lods
cmps
jmp
push
movs
add
test
mov
push
dec
mov
xor
jg
add
rcl
(bad)
in
xor
xchg
sub
dec
sbb
pop
int
mov
out
test
je
sub
mov
pop
leave
mov
gs
imul
or
pusha
ja
stc
icebp
dec
lahf
cwde
cmp
xor
inc
sbb
inc
fwait
inc
idiv
sub
pop
call
(bad)
xor
push
test
dec
clc
into
loop
aad
arpl
pop
sti
or
int
repnz
sbb
add
or
cdq
fwait
pop
xchg
icebp
dec
imul
retf
sbb
mov
stos
mov
rcl
repnz
arpl
(bad)
push
(bad)
mov
pop
mov
jecxz
or
(bad)
aad
pop
in
and
lds
cli
movs
ffree
movs
imul
test
dec
mov
inc
cli
or
je
xor
mov
js
jmp
mov
xor
mov
cmp
inc
outs
pop
jo
jne
movs
out
ret
movs
xchg
jmp
mov
(bad)
pop
loope
cmp
cmp
mov
pop
sub
cli
jmp
mov
gs
fnstenv
rcl
cdq
sub
jmp
add
ins
jp
mov
mov
(bad)
out
in
push
mov
push
retf
xor
xchg
in
mov
in
mov
ins
xlat
call
inc
icebp
push
mov
call
adc
pop
add
sar
(bad)
es
fdivr
ins
popa
push
test
sub
jmp
mov
or
(bad)
and
or
aad
add
movs
cmp
lds
outs
popa
xor
mov
ret
pop
sbb
inc
popa
mov
pop
enter
adc
popa
pop
shl
enter
in
and
loop
dec
data16
cwde
lea
leave
sbb
inc
jmp
(bad)
inc
retf
js
cld
inc
inc
or
adc
xor
lea
popf
and
sub
xchg
adc
bound
fisub
xor
dec
jmp
sbb
fs
fwait
sahf
scas
jnp
(bad)
iret
div
xchg
call
xlat
ror
jns
cmp
cmps
xchg
add
imul
xchg
mov
sub
xchg
outs
push
inc
mov
jno
(bad)
xor
dec
xchg
push
jbe
cli
jg
inc
cld
test
lea
cmp
ins
sub
fmul
inc
mov
jnp
sub
pop
sub
or
sub
bnd
fwait
cmp
xor
sar
dec
inc
push
cmp
adc
iret
out
mov
or
cmps
mov
not
adc
das
jmp
sbb
fldcw
or
movs
sbb
mov
inc
jae
lods
scas
dec
int
adc
sub
into
mov
loopne
cmp
loop
data16
aas
and
sbb
arpl
jecxz
addr16
mov
cmp
stc
push
in
jg
and
cmp
xchg
(bad)
push
or
je
movs
inc
scas
adc
cli
sbb
(bad)
and
pop
and
and
xor
sbb
lods
lods
loope
aaa
mov
mov
add
fmul
mov
ins
pop
retf
mov
mov
sub
(bad)
mov
lock
movs
push
dec
push
xchg
mov
cld
pop
jp
inc
cmp
dec
leave
xor
into
sbb
cmp
and
test
push
repnz
(bad)
pop
pop
in
int3
mov
mov
xchg
and
pushf
ja
fs
push
aaa
xor
mov
stc
pop
pop
out
mov
popf
jg
mov
mov
pop
adc
jb
nop
pop
out
movs
das
jmp
(bad)
xchg
mov
sbb
push
sti
adc
jl
xchg
dec
pop
mov
call
sub
dec
inc
test
jl
sub
ins
loope
in
int
sbb
das
jg
retf
or
ins
pop
xor
sbb
sub
inc
mov
fwait
cmp
out
dec
lds
and
jecxz
pop
mov
lods
outs
mov
scas
in
icebp
sbb
bndstx
imul
fdiv
mov
outs
in
sub
cmps
hlt
mov
and
loope
mov
sbb
sub
and
mov
mov
lods
or
stos
das
mov
test
push
xor
in
(bad)
ror
scas
mov
sub
and
xchg
xchg
cli
sahf
fidivr
pop
or
jg
dec
sbb
scas
push
ins
(bad)
test
inc
cld
mov
xor
xor
ins
or
sub
mov
lods
dec
push
stos
enter
scas
aam
retf
cmps
test
fld
inc
ins
sub
add
and
fstp
push
mov
in
or
jg
xor
sbb
mov
stos
out
cmc
(bad)
push
inc
mov
fnsave
cmp
aaa
inc
fwait
xor
add
mul
jecxz
test
jl
repz
pop
shl
lods
sahf
test
jb
and
jbe
cmp
jnp
and
xchg
neg
je
jmp
sub
add
call
cmps
stos
mov
or
retf
ret
inc
lds
ror
push
jbe
adc
movs
ret
mov
xchg
pop
dec
in
sti
sahf
inc
dec
mov
jp
aad
push
arpl
xchg
mov
call
xor
push
and
test
js
dec
mov
lods
add
in
scas
rcl
ficom
ins
sub
xchg
jb
(bad)
popf
adc
mov
shl
popf
fnstcw
adc
and
xchg
scas
mov
pop
and
ins
xor
add
cmp
fld
cmp
add
in
pop
out
in
add
popa
mov
pop
mov
push
lods
imul
pop
(bad)
out
lea
adc
dec
mov
inc
fsub
mov
mov
sub
mov
sub
adc
sub
lods
jecxz
mov
mov
xlat
cmp
or
inc
pop
hlt
loopne
test
xor
mov
xor
push
push
mov
push
clc
fiadd
sbb
mov
dec
xchg
add
push
push
mov
repnz
movs
cmps
mov
add
sti
test
inc
stos
sahf
mov
stos
sub
popa
imul
sbb
dec
xor
ja
sub
mov
sub
and
inc
xlat
mov
and
cmovbe
out
mov
push
fnstsw
test
cmp
cmp
fucom
xchg
lds
jmp
test
int3
fstp
sub
mov
out
jne
sub
scas
mov
scas
dec
loop
or
and
ret
fucomi
push
mov
adc
out
push
aam
mov
jb
or
hlt
xchg
adc
cs
call
stc
jg
mov
mov
outs
sub
push
mov
add
les
cmp
dec
pop
xlat
(bad)
sbb
fsubr
(bad)
mov
add
imul
fnsave
and
dec
push
int3
mov
adc
in
or
sub
(bad)
mov
div
test
iret
in
and
and
jbe
inc
neg
retf
outs
mov
sub
sbb
mov
(bad)
xor
fidiv
fistp
out
inc
fld
push
cmp
test
rol
push
mov
stos
mov
add
int
mov
xchg
sar
sahf
sub
rol
std
cdq
sub
ins
sub
mov
pusha
mov
sub
call
in
es
adc
loopne
out
cdq
clc
xor
sbb
ret
inc
adc
jle
aaa
xchg
or
push
cmp
js
adc
cmp
push
inc
pop
jl
(bad)
aas
pop
cli
mov
scas
sub
mov
ret
adc
jno
adc
repnz
sub
mov
cmp
scas
cli
push
fcomp
in
cli
adc
xor
xor
arpl
cs
loope
pop
pop
mov
repz
dec
pop
ret
scas
xchg
dec
pop
inc
int
mov
dec
lahf
cwde
bnd
int
and
pop
sti
arpl
mov
mov
ja
mov
dec
pop
push
push
in
mov
sbb
cmp
xchg
imul
inc
add
adc
rcr
mov
arpl
cmp
jg
pop
fdivr
xchg
shr
imul
(bad)
sbb
mov
inc
jecxz
rep
inc
push
call
dec
mov
jns
jle
ret
adc
pop
out
cmc
test
inc
outs
or
cmp
sub
in
push
push
test
xchg
clc
outs
add
fwait
repz
inc
jns
jns
repnz
ins
sti
je
cmp
xor
sbb
das
cmp
test
mov
fimul
mov
jmp
outs
pop
call
mov
add
ret
inc
xor
push
(bad)
call
fdivr
call
xchg
mov
in
and
popf
repz
fwait
add
loope
jmp
add
popf
xchg
adc
fisttp
enter
rcl
int3
(bad)
sub
repz
out
scas
and
xchg
dec
xor
scas
outs
pop
data16
inc
cmp
sub
jle
jno
xor
repz
jbe
or
xchg
inc
pop
sbb
loopne
push
mov
icebp
bound
jae
addr16
out
cmc
push
test
and
mov
pop
xor
sbb
imul
cmps
sub
adc
hlt
pop
iret
xor
jb
aad
jno
pmaxsw
nop
or
or
pop
lods
jne
out
fwait
or
or
and
pop
mov
test
push
gs
clc
push
in
add
xor
or
cli
push
jbe
push
jecxz
je
add
ss
js
xor
loopne
data16
les
ret
sub
ins
xchg
mov
icebp
jno
arpl
mov
shl
les
jo
je
push
mov
aaa
push
mov
out
mov
xchg
fldpi
and
out
sbb
sub
add
ins
fdivr
jae
test
gs
cdq
mov
inc
fadd
push
ficomp
cmp
adc
sub
mov
sti
jbe
push
je
inc
sub
or
ds
ret
mov
adc
mov
in
mov
int3
cdq
ins
outs
cmps
dec
mov
aad
dec
mov
xor
sub
jecxz
push
imul
xchg
stc
sub
inc
mov
jne
xor
mov
and
mov
or
xchg
fimul
hlt
pop
cmc
mov
or
mov
mov
dec
sbb
and
and
push
mov
mov
mov
xchg
inc
xchg
outs
scas
and
leave
int
jae
div
daa
pusha
jae
icebp
out
jle
icebp
inc
fdivr
jg
jl
or
dec
(bad)
and
sbb
mov
push
(bad)
lahf
aaa
pushf
mov
out
xchg
inc
inc
ror
call
and
jae
or
push
addr16
lahf
mov
pusha
inc
jb
push
jae
shr
icebp
mov
cmps
jmp
gs
es
push
mov
cs
aas
xlat
dec
or
jp
sbb
pop
mov
fldenv
out
es
mul
dec
sahf
push
cmp
fwait
push
and
ins
mov
jne
mov
out
push
movs
rcl
or
mov
xchg
test
daa
mov
pop
test
retf
lock
mov
pop
or
movs
in
dec
and
jne
mov
mov
add
scas
mov
cs
and
push
int3
jge
retf
cmp
mov
push
fwait
retf
in
sub
dec
not
dec
mov
clc
scas
scas
call
test
movs
clc
mov
je
mov
and
push
inc
fcom
push
adc
cwde
repnz
cmp
jmp
or
push
inc
outs
xor
mov
adc
xor
shl
push
pushf
stos
xlat
or
or
jecxz
dec
std
pushf
mov
dec
mov
xchg
test
fcomp
adc
fadd
push
fstp
push
sbb
xchg
mov
xchg
ret
or
cmp
sub
mov
in
sbb
pushf
pop
lea
imul
mov
mov
dec
sbb
xchg
xchg
mov
mov
dec
imul
shr
mov
bnd
sbb
sub
not
xchg
inc
mov
lahf
out
(bad)
mov
sar
popf
or
loope
cmc
enter
add
mov
dec
into
stos
icebp
add
sti
shr
xlat
cld
mov
lahf
fwait
mov
movs
mov
shufps
iret
into
mov
ins
jnp
gs
push
gs
mov
mov
or
pop
int
mov
dec
dec
out
fld
lods
push
mov
nop
out
(bad)
mov
sbb
aam
loopne
pop
fs
stos
out
test
adc
sbb
pop
sub
pop
or
sub
xchg
aaa
out
or
jmp
nop
and
retf
inc
bound
lds
pop
jbe
xchg
adc
or
sbb
jle
hlt
xor
daa
lea
xchg
mov
and
stos
xchg
jbe
lahf
call
cmp
adc
xchg
sahf
dec
push
mov
dec
add
mov
xchg
xor
push
fld
mov
sbb
push
inc
jmp
mov
sbb
sub
jecxz
sbb
jl
std
ror
mov
mul
aam
and
mov
sub
pop
xor
adc
je
push
jae
stc
mov
aam
ss
enter
ins
or
mov
je
ss
xor
arpl
ins
stos
cli
aaa
pop
and
add
xor
ja
jmp
and
call
sbb
sub
cmp
outs
sbb
add
or
shl
stos
fwait
or
jl
xor
retf
loopne
(bad)
in
push
cmp
icebp
add
xchg
loopne
fs
movs
ror
loop
lock
mov
cmp
in
push
mov
xlat
sbb
push
cmp
pop
push
or
xor
iret
cli
xchg
sahf
sbb
sbb
xor
sbb
fmul
loop
mov
sbb
shl
neg
imul
sahf
outs
(bad)
scas
lea
call
cld
rcr
mov
lock
pop
(bad)
iret
out
adc
sti
add
mov
or
push
mov
scas
xor
fnstenv
sbb
cmps
pop
mov
cmp
jo
inc
push
cmp
fdivp
movs
adc
xchg
jbe
popf
mov
add
push
push
xlat
add
loop
adc
or
aam
mov
cmp
retf
cmp
mov
shr
push
into
dec
outs
lahf
leave
lea
aad
push
retf
push
cwde
push
mov
out
or
mov
cmp
xor
pop
inc
and
xchg
repnz
sbb
retf
mov
mov
iret
mov
cmp
cmps
mov
cmp
fsubr
les
xchg
sti
lds
imul
cs
call
mov
mov
or
and
rcr
std
lock
mov
xchg
cdq
and
add
push
sub
test
rol
cwde
jl
jae
and
xchg
das
sbb
mov
mov
(bad)
dec
data16
ds
(bad)
lods
fild
mov
push
xor
or
jne
inc
movs
gs
in
int
sbb
retf
or
xchg
retf
sub
pop
sub
lahf
fmul
mov
fisttp
ja
add
cwde
adc
jg
ds
pop
dec
and
xor
push
cs
arpl
mov
outs
leave
cmc
pop
pop
fs
xchg
les
adc
stos
je
(bad)
repz
adc
push
adc
lock
pusha
and
adc
(bad)
mov
ins
jb
gs
test
pushf
or
xchg
jno
(bad)
jne
es
popf
or
jo
jmp
int3
push
sub
jns
ds
jns
sub
or
jne
sti
aam
jl
call
jg
pop
call
rcl
and
shr
das
xchg
rcl
outs
imul
arpl
pop
and
ds
jge
inc
fwait
or
pop
aaa
ja
in
xchg
push
adc
imul
sbb
lds
retf
inc
xor
cmp
and
cmp
lods
dec
out
lock
push
ds
mov
stc
retf
mov
push
or
pop
sub
jns
pcmpeqw
(bad)
jg
gs
test
frstor
push
pop
sub
sbb
or
mov
stc
xchg
(bad)
ss
nop
sub
mov
imul
push
sub
stos
xchg
pushf
(bad)
fild
ja
pop
jne
pop
into
popf
in
mov
inc
xchg
jecxz
mov
fldenv
cmp
push
aad
(bad)
idiv
aam
xchg
push
sbb
xchg
clc
sub
nop
loop
ja
inc
sbb
aam
cmp
xchg
adc
cld
aad
addr16
(bad)
cld
sub
out
add
sbb
sti
movs
jmp
inc
or
test
xchg
or
fwait
push
rol
mov
sbb
cs
xchg
jb
or
mov
mov
shl
inc
cmp
mov
test
mov
sbb
mov
repz
ins
jl
shr
nop
arpl
leave
jno
stos
fiadd
dec
repnz
push
imul
cmp
pop
push
aaa
daa
or
out
cmp
push
or
enter
and
sub
jae
xchg
xlat
jbe
or
mov
inc
(bad)
dec
mov
sbb
(bad)
xchg
pushf
test
inc
jle
in
jle
cld
sub
movs
sub
enter
loopne
test
push
push
jg
add
sbb
mov
das
movs
aam
(bad)
mov
jae
mov
mov
or
psubusw
es
cmp
xchg
(bad)
cmps
cld
jno
cmp
ins
mov
sar
adc
mov
inc
cmp
pop
hlt
jg
and
inc
pop
test
add
pop
sar
adc
xchg
mov
or
mov
dec
inc
sub
pop
xchg
test
out
xchg
cmp
push
out
or
sbb
lea
sub
sbb
scas
mov
popf
je
(bad)
arpl
fwait
(bad)
xlat
sbb
pop
imul
fsub
lods
adc
(bad)
in
mov
rol
mov
push
push
pushf
lea
test
lods
movs
mov
imul
leave
add
call
lods
push
cmp
stos
(bad)
push
shl
jl
out
inc
sbb
ret
jge
mov
and
retf
xchg
pop
mov
mov
popa
xor
add
push
dec
mov
pop
dec
pop
inc
pop
test
jg
cmps
sbb
mov
adc
loop
retf
test
adc
mov
cmp
cli
(bad)
je
pop
jbe
sti
outs
lds
fcmovnu
sub
push
adc
aas
dec
mov
out
xor
lds
scas
fwait
mov
mov
push
mov
push
js
jno
mov
cmp
pop
and
cmc
fdivr
test
or
shr
inc
and
xlat
mov
mov
lods
mov
ds
dec
or
push
mov
mov
jbe
cdq
lods
cmc
jmp
jno
out
test
xor
je
stos
xor
sbb
adc
sbb
xchg
lods
enter
sub
push
dec
fwait
add
xchg
pop
je
pop
jmp
stos
lock
mov
push
int
or
pop
mov
and
aaa
sar
inc
sbb
or
dec
cwde
ds
fisub
aas
fstp
hlt
lods
jmp
lock
mov
jg
lds
stos
sbb
popa
push
sub
xchg
popa
iret
pop
in
out
ins
retf
lea
xchg
out
adc
aad
jmp
dec
jmp
fcmovb
and
cmp
cld
fisttp
jmp
or
inc
push
mov
test
pop
cld
push
pushf
into
and
stos
stos
xchg
std
sbb
aas
and
adc
cwde
call
xor
push
hlt
enter
sahf
stos
jo
jl
cmps
pop
imul
sub
push
inc
mov
dec
js
popf
sar
loopne
cmp
aam
and
ds
cwde
sbb
push
xor
inc
fwait
(bad)
jmp
(bad)
(bad)
push
adc
xrelease
call
cdq
pop
lea
fbld
in
sbb
sets
cmp
in
push
dec
pop
iret
sub
cmp
test
dec
mov
sbb
fmul
repnz
or
sti
and
jnp
cs
jle
call
adc
stos
adc
int3
xor
clc
into
add
xlat
jbe
jg
inc
stc
jo
jb
retf
add
mov
dec
mov
cmp
xor
shr
loopne
xor
inc
jmp
add
sahf
or
inc
jg
adc
push
ja
in
retf
or
test
(bad)
loop
adc
repz
inc
gs
mov
pop
hlt
pusha
mov
jg
mov
mov
(bad)
cld
retf
sub
cmc
nop
cwde
fld
cmp
lahf
es
into
sbb
stos
xchg
cmp
pop
ja
mov
outs
xchg
mov
adc
adc
jno
mov
mov
and
pop
in
dec
mov
push
jo
mov
in
mov
push
sbb
aad
lds
fs
fwait
add
add
popf
mov
out
inc
mov
push
mov
pop
and
sub
movs
pop
jb
test
mov
pop
call
(bad)
push
aam
call
cmp
inc
mov
nop
inc
cdq
ins
js
aaa
add
inc
paddd
ret
jo
aad
dec
cmp
cwde
js
inc
fstp
or
push
loope
jg
adc
sub
mov
les
cmp
adc
adc
mov
pusha
pop
push
out
(bad)
pop
lahf
mov
mov
hlt
stc
movs
js
int3
and
lahf
fdivr
ret
mov
or
xchg
fbld
and
mov
xchg
rcl
adc
mov
sar
adc
dec
dec
cmc
jp
dec
repz
mov
push
into
in
sub
test
int3
fs
jo
stos
or
inc
jae
movs
xor
call
aad
xchg
jne
rol
jmp
mov
cmps
repnz
push
pushf
jl
movs
scas
fmul
adc
mov
mov
push
or
push
daa
popa
fucomi
(bad)
int
inc
mov
mov
xchg
je
mov
arpl
adc
or
scas
add
push
mov
pop
test
rcr
out
pop
fisub
gs
xor
scas
xor
shr
or
dec
das
inc
xchg
in
mov
xor
movs
xor
and
jge
loopne
mov
clc
mov
or
dec
jno
sub
pop
xchg
cmp
in
add
mov
das
out
(bad)
xor
sub
xor
xchg
xor
xchg
adc
jno
mov
push
sub
mov
jle
daa
push
and
fimul
inc
jbe
fld1
push
jno
ds
inc
mov
and
inc
mov
in
mov
repnz
jbe
fiadd
add
stc
adc
cmc
xchg
fisub
loop
test
push
retf
mov
add
dec
pusha
fiadd
movs
mov
jmp
cli
xor
js
xchg
aaa
out
lahf
push
xchg
leave
ds
call
and
sub
test
adc
jno
mov
xor
ins
aas
pop
repnz
push
jno
and
mov
les
and
and
add
cwde
lods
mov
xor
out
sbb
imul
xchg
sbb
pop
imul
inc
mov
adc
adc
nop
add
lods
push
fwait
sbb
mov
in
inc
cmc
cmps
ins
and
mov
and
xor
cmc
xchg
mov
shr
jb
xchg
jmp
mov
inc
sub
push
call
push
mov
pop
inc
mov
scas
pop
ror
and
out
leave
push
xor
in
imul
imul
lock
addr16
lock
aas
mov
push
aas
ror
ins
inc
cmp
lock
dec
pushf
push
xchg
and
into
push
test
jecxz
je
test
cmp
xor
sbb
sbb
cmp
xor
les
adc
(bad)
xchg
loop
sub
adc
cli
fdivr
test
(bad)
out
(bad)
stc
mov
xchg
rol
cmp
rcr
or
mov
jnp
add
adc
loopne
adc
out
clc
sahf
popa
ja
mov
call
and
mov
imul
scas
dec
ret
mov
jge
cmp
mov
cmp
mov
sub
inc
imul
xchg
xchg
mov
cmp
(bad)
stc
adc
ret
and
and
inc
sahf
ret
inc
xchg
pop
xchg
push
aam
jecxz
or
mov
or
add
outs
aam
pop
inc
jbe
aad
das
fstp
cmc
and
mov
push
stos
or
cli
mov
ret
mov
out
ret
inc
fwait
cmc
aaa
cmps
hlt
xchg
or
cdq
clc
add
push
movs
repnz
hlt
inc
and
test
cld
pop
test
repz
adc
aas
sahf
dec
jne
adc
shl
repnz
sahf
into
inc
dec
ret
and
xor
outs
sbb
fild
lods
loope
cmp
addr16
xor
dec
rcr
int
fist
retf
xchg
inc
pop
and
fst
inc
test
adc
neg
sti
fistp
pop
outs
push
icebp
mov
sub
ins
stos
adc
xchg
add
sub
ficom
loopne
xchg
call
rcl
jecxz
jecxz
jle
aas
out
mov
movs
data16
sub
xchg
jns
in
fiadd
aas
int
inc
in
in
push
je
(bad)
dec
ret
pusha
retf
jne
int
lds
sbb
sub
call
and
loop
mov
inc
xchg
ss
retf
pop
xor
xchg
pop
dec
lock
push
mov
cmp
ds
fstp
in
mov
adc
lds
xor
lahf
jmp
pop
cmp
mov
std
and
push
mov
je
xchg
aam
push
cmp
dec
out
push
ds
in
stos
inc
in
idiv
jb
mov
inc
leave
std
xor
jp
repnz
mov
imul
xchg
fcomp
xchg
and
push
leave
sub
mov
xchg
sub
pop
fisttp
nop
or
mov
jmp
dec
add
or
rol
mov
imul
mov
fild
hlt
das
mov
jge
in
stos
ds
je
rol
sti
outs
push
mov
cmp
add
sbb
rol
jb
push
(bad)
cmc
test
mov
scas
enter
icebp
jp
jbe
outs
test
js
mov
jmp
addr16
pop
in
xchg
ror
ja
jecxz
sub
sbb
fwait
enter
fwait
mov
leave
fnstsw
pushf
inc
imul
(bad)
bound
aas
mov
data16
jae
fs
or
mov
jbe
sbb
xlat
sahf
(bad)
adc
jge
push
cmps
or
inc
enter
mov
sbb
popa
je
loopne
into
test
and
(bad)
lock
mov
adc
mov
pop
ror
xchg
sub
jnp
cmp
inc
inc
jnp
add
retf
adc
loope
pop
mov
cdq
ficom
popf
xor
jns
adc
jp
push
out
and
cmps
mov
fldcw
push
inc
mov
fimul
outs
add
mov
test
push
mov
es
repnz
dec
loope
call
inc
fnstsw
scas
test
cmp
pop
sub
or
movs
pop
fsubr
dec
add
rcr
imul
imul
or
xchg
cmc
jle
push
cmps
push
neg
pop
and
adc
pop
fnstcw
sbb
stos
push
aaa
addr16
inc
jmp
and
xchg
repnz
mov
arpl
dec
ja
inc
test
and
mov
cmp
jb
dec
cmp
or
inc
add
ss
pop
mov
bound
cmp
(bad)
fcmovbe
jmp
and
push
cmc
outs
sub
pop
cld
sub
sar
cmp
ins
mov
das
and
mov
popf
and
adc
mov
xchg
push
loope
jb
loope
cmps
out
push
jmp
out
inc
scas
pop
inc
adc
dec
xchg
sbb
jmp
mul
lock
pusha
xchg
sar
mov
inc
xchg
push
gs
fldcw
jo
(bad)
cld
fist
fidiv
add
dec
and
(bad)
fdivr
mov
adc
inc
daa
or
rcr
jecxz
jg
add
lea
jns
push
dec
xchg
movs
test
sahf
inc
jb
mov
jb
inc
mov
dec
mov
clc
fs
out
mov
fwait
or
and
dec
ror
jnp
jo
jle
xchg
(bad)
cmc
icebp
cmc
cs
(bad)
cmps
mov
lods
xchg
dec
push
cmp
scas
dec
mov
out
ja
ins
add
loope
or
les
cmpps
mov
push
adc
movs
pop
pop
aam
das
inc
es
sbb
icebp
call
mov
imul
jbe
repz
leave
push
or
jo
mov
and
shl
jo
mov
aaa
dec
sti
pop
inc
shl
add
repnz
adc
stos
jbe
xchg
inc
je
push
je
test
mov
pop
dec
jno
ja
sti
hlt
das
jae
inc
ins
lea
push
(bad)
loopne
sub
prefetcht0
repz
push
xor
dec
or
dec
in
xchg
sub
les
pop
or
retf
into
and
inc
xchg
and
push
scas
sub
lahf
cmps
inc
ins
jne
xchg
or
out
out
add
dec
cdq
inc
adc
xor
stos
sub
lds
push
fld
pop
out
aaa
pop
rcl
std
and
fdivr
xor
int
and
call
jmp
in
mov
inc
dec
jae
into
mov
jle
adc
dec
add
mov
clc
jb
leave
repz
sti
cld
shl
fmul
movs
xchg
lock
pop
shr
cld
or
lds
xchg
pop
ins
(bad)
xchg
bound
jmp
cmps
repz
cdq
repz
lahf
aas
inc
inc
inc
jnp
push
xor
lods
and
mov
mov
mov
ss
lea
or
mov
ss
add
xor
or
or
aam
lods
jmp
imul
cli
addr16
mov
pop
ja
nop
out
cmp
cmps
cmp
loop
dec
fisttp
push
or
jmp
push
jl
sub
in
out
addr16
mov
das
pusha
int3
cmp
and
xor
xchg
push
lea
addr16
cmps
mov
xor
inc
mov
imul
pusha
das
jle
and
cdq
xchg
jns
lods
(bad)
loopne
push
mov
or
add
fstp
imul
lods
jns
imul
pop
jbe
mov
int
inc
(bad)
ret
imul
jmp
les
ret
outs
push
das
pop
test
xchg
mov
pop
cmps
clc
outs
retf
xor
xchg
test
aam
shl
loope
fsubr
sbb
pop
pushf
or
pop
arpl
cmp
pop
imul
mov
cli
and
pusha
scas
or
mov
icebp
ins
sub
(bad)
xor
scas
xor
xchg
ss
mov
or
ud0
enter
push
pop
in
mov
or
sbb
clc
bound
sbb
xor
loop
popf
lahf
mov
lods
dec
jg
lock
(bad)
ins
jae
in
or
pushw
mov
pusha
aad
aaa
dec
add
scas
xchg
and
mov
movs
jb
push
and
fldl2e
inc
repnz
cmp
fisub
ja
jmp
or
jle
rcl
mov
ret
sbb
les
out
jb
jmp
sub
mov
in
cmp
or
sub
mov
add
pop
xchg
sbb
dec
fisttp
xchg
mov
mov
(bad)
icebp
in
(bad)
lods
(bad)
fdivr
inc
add
pop
ins
mov
js
out
add
ins
sub
jmp
movs
dec
mov
daa
aaa
jg
sbb
sbb
enter
(bad)
xor
push
in
dec
xor
std
add
lock
in
shl
in
push
cmp
ja
pop
push
fbld
fwait
scas
(bad)
imul
in
pushf
mov
xor
nop
lds
cmp
pop
daa
or
repz
sar
lea
jbe
inc
lods
sbb
mov
imul
mov
and
sahf
in
dec
int
cmps
sub
fld
sub
fsubr
sub
pushf
mov
loop
stos
fs
dec
aad
movs
pop
jae
mov
inc
xor
popf
inc
or
lock
push
xor
pop
push
dec
icebp
add
lea
cmp
movs
xchg
cli
aaa
(bad)
pop
and
mov
imul
inc
and
add
dec
inc
pop
and
clc
or
jnp
xor
xor
es
push
and
movs
pop
rcr
(bad)
stos
mov
mov
inc
cmp
lds
shl
mov
ficomp
shr
das
mov
call
sub
mov
pushf
sub
xor
sub
or
es
mov
adc
shr
dec
pop
in
add
push
sub
cwde
fucomip
ja
ss
jbe
mov
cmp
aaa
adc
jo
mov
xchg
or
enter
adc
outs
out
loop
jnp
jge
ret
and
push
lods
xchg
cwde
sub
push
mov
stos
fild
mov
push
inc
xor
jmp
sub
xchg
sub
cmp
cmp
and
lods
out
or
imul
lahf
daa
sbb
inc
dec
aam
pop
dec
sbb
mov
out
das
pinsrw
sbb
jnp
mov
std
popa
es
popf
ret
out
push
jmp
jo
pop
(bad)
and
jns
loopne
adc
mov
ror
aam
adc
jle
or
repz
lds
stos
xor
adc
cmc
mov
jge
div
mov
cmp
mov
hlt
ror
aam
fldenv
xchg
mov
fld
nop
in
add
cmp
mov
jmp
sub
mov
repz
test
vpaddsw
mov
xor
out
scas
mov
out
pop
sub
fstp
jmp
push
movs
jae
enter
adc
inc
call
outs
push
lahf
mov
or
out
(bad)
pushf
test
inc
aas
retf
imul
cdq
ds
inc
and
bound
arpl
pop
dec
pop
push
shl
(bad)
cwde
fiadd
or
(bad)
push
fstp
loope
cmps
xor
aas
mov
mov
push
je
inc
xlat
into
jge
inc
push
std
cmp
out
outs
popa
ror
xor
into
dec
or
push
mov
jge
arpl
mov
jg
ds
add
and
out
fdivr
gs
jecxz
push
sbb
push
push
cdq
sar
xor
dec
fld
dec
repz
jge
jg
cmp
mov
xchg
add
mov
adc
jne
jge
push
mov
cmp
ja
out
sar
mov
mov
in
pop
fabs
fs
sub
sbb
and
test
pop
jns
test
jg
jp
clc
dec
out
in
xlat
cmps
pop
dec
jecxz
xor
js
test
sub
cmp
(bad)
lods
cmp
sahf
cli
aad
xor
hlt
jo
scas
ins
push
fild
sahf
push
mov
jo
fistp
outs
and
fistp
inc
popf
sub
xor
fs
es
mov
repnz
jns
adc
sub
push
stc
mov
iret
and
push
mov
lahf
push
sbb
sbb
movs
adc
lahf
jnp
sub
pop
pop
sbb
and
mov
jecxz
fist
jmp
popf
pop
(bad)
aad
push
imul
push
je
adc
ins
push
imul
pusha
sub
push
mov
rcl
and
sbb
(bad)
out
xchg
in
es
cmp
jmp
sbb
icebp
loope
and
mov
call
or
cmc
(bad)
in
inc
lds
xor
and
pop
mov
int3
cwde
ds
fs
inc
fs
aad
pusha
fcomp
sub
dec
retf
mov
mov
cmp
or
cmp
and
aas
mov
mov
sub
mov
cmp
mov
push
fistp
leave
jo
adc
js
addr16
clc
pop
cld
lds
data16
das
xor
cmp
push
js
ret
sbb
fild
cmp
fisub
mov
xchg
or
daa
std
xchg
or
cmps
pop
add
xchg
or
cmp
push
repz
add
scas
cwde
jne
mov
fwait
dec
mov
sub
add
push
aas
dec
mov
ror
dec
test
lock
pop
fs
fucomip
ret
ror
lahf
inc
jae
inc
sbb
icebp
add
stc
add
push
retf
fcmovu
cmp
jecxz
cmp
nop
inc
aas
xor
cmp
dec
xor
mov
xchg
cwde
or
std
lds
dec
cli
mov
pop
stc
dec
dec
fistp
mov
(bad)
push
xchg
cmp
fwait
das
shl
sbb
retf
dec
xchg
cmp
jbe
aad
and
jl
pushf
fcmovnu
dec
or
mov
jo
ret
test
fxtract
mov
call
and
xchg
dec
aaa
fld
cmp
xor
pop
push
cmp
inc
mov
sub
mov
(bad)
xor
or
xchg
rol
xor
fisub
retf
add
add
add
test
rcr
sbb
push
es
aas
(bad)
in
add
outs
dec
mov
jp
inc
dec
fist
dec
cmps
ss
dec
mov
xchg
or
test
loopne
aam
push
aas
mov
xor
imul
into
cmps
rol
pusha
adc
out
mov
pop
ret
mov
stos
push
lods
xchg
xchg
mov
mov
pop
ja
in
push
rcl
mov
arpl
mov
aad
nop
enter
lock
movs
lea
in
jo
xchg
adc
xor
pop
xchg
cmc
or
cli
bound
pop
icebp
sbb
pop
scas
inc
xchg
ficom
out
or
add
fidiv
nop
stos
test
mov
in
mov
dec
fisubr
cdq
sahf
and
adc
scas
xor
xchg
inc
pushf
je
inc
inc
sub
mov
fbstp
push
jge
jge
out
fdivr
test
sbb
pushf
test
retf
adc
or
dec
sub
cld
cmc
dec
inc
push
cmc
out
(bad)
jge
push
std
cmp
lods
dec
test
stos
xchg
into
(bad)
adc
test
cli
fwait
lods
sbb
test
inc
jno
push
fs
dec
add
adc
lods
mov
mov
js
inc
test
imul
xor
lods
mov
mov
fild
adc
lds
enter
jne
add
dec
mov
mov
bound
push
cdq
shl
sub
fisubr
in
(bad)
mov
mov
jg
push
retf
leave
add
sar
icebp
cmp
enter
sbb
add
mov
das
pop
test
movs
jnp
jbe
test
cli
adc
sahf
mov
es
fwait
rcl
daa
cmp
sbb
loope
enter
gs
ficomp
or
mov
pusha
cmp
jge
push
pop
adc
dec
and
mov
cmp
or
lods
loop
out
nop
xor
je
int3
ret
pop
not
idiv
dec
dec
fstp
sub
gs
pop
scas
je
and
xchg
mov
xor
movs
out
pop
(bad)
pop
out
mul
nop
pop
add
xor
mov
dec
scas
imul
test
rol
mov
icebp
rcl
dec
outs
pop
inc
cmp
sub
mov
and
mov
inc
sub
push
es
in
nop
inc
add
imul
adc
inc
mov
sbb
push
repz
sub
out
xor
cmp
int3
rol
ror
in
add
imul
xchg
rcr
(bad)
das
pop
(bad)
or
lds
mov
out
scas
sub
push
retf
retf
clc
inc
loope
mov
sub
ja
fnstsw
mov
push
add
fdiv
mov
jmp
xchg
jae
adc
in
daa
dec
add
out
pop
sbb
jae
in
inc
mov
mov
add
mov
xchg
dec
mov
add
cs
ja
cmp
mov
loop
loope
jne
cmp
outs
sub
sbb
lods
inc
adc
adc
aad
xchg
(bad)
pop
inc
push
imul
lds
repz
mov
aaa
out
xchg
adc
jno
lahf
xchg
dec
out
and
aad
mov
mov
jecxz
or
push
scas
push
test
ins
sub
or
or
dec
mov
inc
pop
cmp
cs
push
gs
retf
call
cdq
mov
or
pop
jge
sbb
pop
scas
cmps
cs
adc
mov
ins
js
repz
xchg
dec
dec
in
mov
xchg
in
in
jmp
ret
fs
test
pop
or
pushf
out
repz
pushf
mov
push
adc
out
mov
retf
fisub
and
iret
mov
js
mov
and
scas
aaa
mov
jl
aad
xchg
sbb
mov
ss
adc
mov
lock
pop
xor
fbld
mov
das
leave
sahf
into
xor
inc
lods
mov
fwait
fwait
pop
xor
pusha
xchg
lahf
fld
rcr
leave
mov
xchg
mov
repz
scas
adc
inc
iret
cmp
xchg
adc
push
data16
repz
mov
movs
jnp
or
xchg
bound
and
call
pop
outs
and
mov
mov
cdq
dec
pusha
test
ds
and
mov
daa
xchg
mov
sub
pusha
xor
scas
xchg
adc
fwait
leave
push
cli
lods
out
rcl
and
shr
and
adc
mov
push
in
hlt
ins
outs
(bad)
test
shr
xchg
out
dec
dec
inc
jnp
sbb
int3
ins
lahf
jmp
sub
jbe
jae
ret
pop
mov
mov
je
dec
jl
int
adc
jl
push
int
retf
jnp
fist
ss
mov
pop
sbb
rol
xchg
mov
xor
adc
dec
or
mov
je
xor
dec
mov
call
adc
push
dec
jb
test
add
popf
nop
fisttp
add
adc
pop
mov
scas
das
lods
pusha
jge
nop
cli
push
jo
cli
mov
ins
aad
and
pop
jne
inc
jns
mov
out
mov
daa
loop
sar
sbb
cmp
sub
imul
pop
mov
pop
jecxz
push
mov
out
cmps
jae
lds
adc
call
dec
mov
ins
nop
jno
push
dec
ds
imul
xchg
push
(bad)
jmp
xchg
mov
push
test
jnp
sbb
pop
push
push
call
lds
retf
xor
shr
rcr
je
push
xchg
mov
jbe
clc
enter
stc
in
xchg
pusha
mov
outs
jae
mov
aad
imul
cmp
adc
push
xchg
mov
xlat
add
fstp
pop
add
xchg
int
or
sbb
outs
daa
add
pusha
jmp
jno
sub
mov
mov
adc
mov
pop
push
arpl
mov
adc
not
add
fdiv
or
adc
dec
or
arpl
pusha
xchg
push
sub
jg
cmp
ss
aad
mov
push
iret
dec
je
mov
push
fst
push
push
test
nop
cmp
push
fdivr
jne
xchg
pop
jnp
cmps
push
fidiv
imul
(bad)
loope
push
mov
mov
fldenv
and
icebp
inc
dec
fild
fsubr
stos
repz
jae
xchg
inc
inc
sub
mov
add
fs
xchg
clc
std
jnp
gs
cmp
fsub
out
xchg
cmp
psubd
aaa
pop
xchg
test
ret
in
jp
aam
mov
push
sahf
cmp
xchg
div
jbe
int
fdivr
pop
fsub
lahf
and
sbb
(bad)
cmp
lods
jo
cmp
pop
or
cwde
(bad)
mov
clc
mov
or
fwait
loopne
loop
xor
jle
push
adc
xchg
rcr
or
outs
mov
(bad)
cmps
dec
add
pop
dec
jo
bound
icebp
test
and
pop
(bad)
and
movs
dec
jecxz
push
push
sub
das
mov
mov
(bad)
push
ins
dec
movs
into
rol
push
mov
mov
fdivr
xchg
es
mov
mov
data16
(bad)
jo
shl
xchg
lods
retf
mov
std
mov
cmps
cli
jns
lds
add
push
daa
xchg
mov
add
xchg
push
movs
cmp
out
loop
pop
dec
cmp
pop
cmps
outs
inc
xor
adc
cli
mov
xor
pop
lea
add
lods
fild
pop
jb
xor
aaa
rcl
sahf
in
sbb
pushf
gs
jo
gs
enter
add
rcl
mov
enter
movs
sub
(bad)
jle
lods
jmp
dec
sbb
shr
jmp
jmp
cmp
and
dec
outs
xchg
and
mov
mov
cdq
sub
(bad)
(bad)
ret
and
jo
outs
cmp
in
jecxz
test
pop
loopne
dec
adc
push
mov
fwait
out
xlat
mov
das
xchg
cmp
push
dec
xchg
push
movs
lods
mov
mov
rol
adc
cli
add
cld
xor
lock
imul
mov
dec
aas
cs
pop
scas
gs
jae
and
aas
fsub
cmp
sbb
out
adc
mov
fstp
cmp
or
outs
rcl
ins
xchg
js
addr16
cmc
leave
sub
add
ins
les
cmovbe
retf
adc
fwait
add
shl
xor
lea
push
sbb
jno
push
push
xor
std
hlt
enter
adc
push
inc
adc
jg
xor
out
int3
sub
sbb
cdq
stos
push
and
sub
pop
popa
pusha
xor
push
(bad)
push
mov
icebp
clc
ins
mov
sbb
add
push
loope
pop
shr
push
jae
ins
mov
outs
jmp
pop
cmp
or
add
jnp
mov
shr
ss
enter
test
shl
ins
adc
xchg
movs
push
fs
loop
in
dec
jne
std
add
mov
push
jmp
add
inc
pop
ret
enter
sahf
nop
nop
cmps
int
push
or
adc
xor
repnz
dec
sbb
into
test
mov
repnz
mov
stos
in
mov
inc
sbb
stos
jecxz
je
outs
rcr
cs
jl
int3
cmps
xchg
retf
hlt
jae
push
das
inc
xor
pop
cdq
pop
in
push
call
pop
jge
fs
repnz
ror
aas
js
push
xor
and
push
and
xor
pop
mov
mov
jnp
(bad)
jno
push
pop
in
jnp
jbe
pop
js
sub
inc
mov
pop
add
push
imul
(bad)
lea
lahf
sbb
mov
movs
jge
inc
pushf
ret
push
push
jmp
stos
push
mov
nop
icebp
sub
or
cmp
dec
push
mov
add
cmp
js
loopne
scas
and
push
dec
or
retf
pusha
ss
ja
out
movs
mov
cmp
js
retf
xchg
mov
sbb
xchg
sub
retf
push
psubusw
pop
adc
repnz
dec
lea
dec
cmc
(bad)
pop
fdivrp
jle
or
jne
cld
pop
sub
pop
loopne
cs
iret
and
mov
mov
mov
mov
inc
mov
sbb
call
je
mov
repnz
lock
mov
in
push
jnp
or
movs
mov
mov
mov
or
cmp
fucomip
(bad)
push
push
jo
push
dec
fwait
xor
adc
pop
je
jnp
or
add
mov
push
xchg
jmp
push
daa
add
(bad)
outs
ret
cmps
sub
xor
js
pop
aas
adc
enter
add
mov
fcomp
mov
jb
push
pushf
cwde
(bad)
xor
adc
ins
and
mov
(bad)
push
inc
fild
sub
stos
jno
xchg
(bad)
test
cmp
cs
mov
mov
xchg
xchg
mov
push
and
add
retf
pop
test
mov
add
xor
mov
jns
xchg
mov
xor
push
mov
movs
outs
sub
retf
mov
adc
jo
ins
or
inc
retf
sub
add
(bad)
pop
arpl
cld
xor
fistp
and
retf
cmp
inc
inc
jns
dec
xchg
sbb
std
pop
mov
mov
xor
cmp
out
cwde
bound
mov
push
outs
(bad)
dec
jmp
jo
and
jne
xchg
cmp
add
out
mov
xchg
out
xor
pop
in
jl
(bad)
fild
inc
mul
into
mov
or
push
mov
stos
pop
and
enter
add
mov
push
jmp
pop
dec
out
push
pop
cld
add
sbb
xchg
shr
fsubr
in
sub
call
call
fcmovne
lea
push
inc
and
scas
inc
mov
and
repnz
repnz
test
mov
scas
inc
push
push
and
cs
arpl
mov
loop
es
xchg
in
jg
daa
sub
fcomp
leave
xchg
(bad)
fdivrp
sbb
jns
mov
ds
cmp
mov
jae
sub
add
ins
pusha
pop
scas
retf
pop
mov
add
adc
dec
xchg
sbb
bound
push
mov
cdq
add
loope
jg
in
pop
mov
or
fisubr
cmps
jns
mov
dec
out
outs
push
adc
mov
and
and
mov
in
or
xchg
(bad)
pop
add
xchg
ror
sub
jge
sub
sar
jne
sbb
or
fist
sub
xor
adc
add
data16
scas
adc
cmc
sbb
dec
and
push
mov
popa
aad
mov
xchg
or
sbb
pop
frndint
xchg
int
popa
ds
adc
mov
scas
mov
push
fdivr
outs
inc
xchg
pop
dec
jmp
xchg
ror
pop
pop
test
loopne
lahf
pop
std
mov
fidivr
jg
cli
jno
or
outs
dec
jbe
cmps
sub
rol
and
loope
ret
xchg
pushf
xchg
out
xor
lods
cmps
xor
xor
push
or
in
pop
mov
push
repnz
fldcw
add
das
je
and
(bad)
jmp
stos
cld
jnp
rol
or
mov
mov
add
dec
xchg
jecxz
mov
add
inc
sub
std
and
cmp
mov
mov
mov
xor
xor
mov
jb
(bad)
sti
test
inc
sbb
cmps
jp
add
mov
dec
sbb
outs
dec
mov
js
sub
adc
movs
test
fwait
push
sahf
int
mov
dec
scas
sub
sar
xlat
movs
jmp
pop
push
call
imul
cmp
sahf
push
adc
jmp
loopne
pop
popf
xor
shr
ins
(bad)
jb
fs
add
sub
mov
pop
out
je
loope
adc
adc
ds
fmul
std
add
pop
inc
pop
mov
shl
mov
push
cmp
into
mov
xchg
dec
ds
pop
into
bound
mov
jge
int3
rcl
xchg
imul
mov
shl
cli
out
adc
push
xchg
sbb
adc
jns
dec
and
jecxz
stos
jp
mov
sbb
into
or
xor
mov
mov
sti
outs
lea
movs
shl
mov
je
fadd
adc
sbb
mov
movs
test
aam
cmove
lahf
jb
xlat
push
lds
push
and
push
push
sub
xor
scas
mov
hlt
popf
sub
inc
data16
int3
sbb
ret
xchg
aaa
popa
adc
ficomp
pop
cmp
gs
mov
out
lods
pop
nop
cmps
sti
int
cmp
cmp
and
pop
lods
rcl
rcl
dec
dec
xchg
shl
fsub
rcl
fcom
adc
and
aad
fld
in
test
in
lock
call
inc
inc
div
test
ins
sub
aam
test
sbb
adc
xor
lahf
mov
ret
scas
or
mov
cli
clc
out
les
pop
arpl
ds
cmp
adc
mov
inc
adc
out
inc
aad
std
lahf
cmp
retf
(bad)
push
sub
inc
dec
div
inc
mov
fdivr
mov
adc
loope
pop
xlat
clc
gs
repz
shl
sub
xchg
sub
sbb
pop
inc
call
pop
dec
movs
gs
test
cs
fnsave
in
mov
stos
je
sbb
call
into
xor
fisttp
add
sub
popa
mul
loopne
xchg
sub
sbb
add
out
mov
outs
stos
sti
fcom
out
mov
push
imul
lods
adc
pushf
pop
adc
push
shr
test
xor
push
sbb
inc
out
lahf
vpcmpeqd
int3
rcl
je
popf
loopne
mov
and
sbb
mov
jmp
js
dec
dec
sub
leave
jl
adc
mov
xchg
fstp
cld
cmp
or
fwait
shl
popf
add
repnz
xchg
and
sub
lods
cmps
scas
bound
cmps
push
mov
in
mov
push
mov
call
xchg
mov
xchg
jbe
jecxz
and
fucomi
aad
push
and
xchg
sbb
sti
mov
push
cmp
push
mov
repnz
sahf
(bad)
jns
fisub
out
push
mov
inc
push
scas
pusha
xor
loope
and
xchg
sub
fsubr
mov
(bad)
clc
lods
mov
cmp
pop
pop
dec
and
jmp
xor
in
mov
mov
out
push
mov
(bad)
jne
mov
xchg
jle
(bad)
call
jae
fdivr
lds
mov
inc
cmp
xor
out
and
and
push
jns
ja
dec
movs
mov
les
(bad)
das
test
or
sti
cld
dec
cdq
mov
mov
jo
lods
push
mov
aad
dec
(bad)
or
sbb
cmps
mov
cli
push
neg
xor
jb
cmp
xor
add
sub
push
hlt
xor
(bad)
call
push
add
aaa
sar
mov
int3
(bad)
imul
inc
push
aas
ja
fs
and
push
or
and
adc
ror
lea
enter
stc
pop
rcr
loope
movs
xchg
sbb
cmp
cmps
imul
mov
jne
xchg
xchg
(bad)
or
iret
xor
dec
dec
scas
xor
and
push
xor
icebp
xchg
aas
stc
cmp
jb
out
adc
cli
sbb
nop
pop
push
(bad)
pop
dec
cmps
iret
imul
xchg
or
push
ret
in
xchg
fs
xchg
mov
out
xchg
(bad)
adc
icebp
xchg
mov
xor
and
jne
cmc
sub
xor
or
rcl
push
movs
out
mov
cwde
push
mov
lds
ret
mov
mov
ret
mov
and
clc
rcr
adc
mov
jl
mov
xchg
push
mov
sub
pcmpgtw
scas
adc
jge
push
pop
clc
jp
pop
data16
aad
dec
cmp
lods
mov
test
aas
mov
div
sahf
into
cmp
clc
jg
not
add
add
push
adc
lahf
xor
and
test
pop
fucomip
outs
jb
stos
inc
test
xchg
bound
ss
repz
int
loopne
add
ins
push
sub
out
inc
sar
inc
ficomp
fistp
mov
jmp
in
in
ins
out
in
or
sbb
inc
and
or
out
repz
add
stc
loopne
push
jbe
pop
bound
out
outs
pop
or
or
add
jl
mov
push
jns
imul
ins
fs
inc
and
mov
fmul
mov
add
mov
cmp
push
(bad)
cmp
pop
mov
jle
into
and
jle
cmc
out
sbb
scas
out
jne
jecxz
sub
or
test
ret
iret
arpl
loope
in
or
stc
addr16
cmovne
xchg
out
iret
lods
fdiv
xor
jne
in
(bad)
cmps
mov
xchg
ficom
fstp
call
dec
adc
cmp
ja
bound
or
fcom
mov
and
pop
and
mov
in
inc
rcl
adc
add
pop
cdq
mov
inc
lds
and
xor
in
add
icebp
mov
push
mov
addr16
aaa
in
cwde
mov
test
cld
loop
rcr
xor
cmps
xchg
push
mov
ins
or
(bad)
xchg
xchg
ret
cmp
cmps
pusha
enter
repnz
popa
mov
addr16
dec
cmps
push
pop
mov
lods
cli
mov
pop
mov
pop
mov
lds
fld
push
push
push
jle
ficom
mov
movs
(bad)
lock
jbe
shr
out
push
sub
sub
push
mov
adc
(bad)
pop
mov
repnz
fnsetpm(287
push
cmps
inc
fst
(bad)
jg
ret
xlat
mov
add
mov
mov
cmp
inc
jb
xchg
and
xchg
sbb
cmp
mov
movs
leave
mov
repnz
aas
mov
xchg
xor
(bad)
mov
xor
push
cli
hlt
xor
jns
and
xchg
loopne
push
(bad)
hlt
out
pop
xor
jp
lods
lock
and
mov
iret
pop
mov
sub
push
lds
lock
dec
loope
test
xchg
stos
cmp
mov
inc
mov
or
mov
mov
(bad)
adc
(bad)
iret
add
test
push
push
out
fmul
mov
or
hlt
gs
jbe
jmp
fcomp
inc
push
xor
outs
xor
mov
stos
mov
iret
xor
ficom
(bad)
sbb
cmp
dec
punpckhwd
scas
lock
sub
mov
push
xor
pop
jmp
ds
add
fisttp
out
pop
xchg
mov
jge
hlt
push
les
aad
mov
and
pop
and
mov
sub
sub
jo
inc
push
sub
mov
cmp
xlat
cs
sub
in
lahf
pop
adc
xor
iret
shl
push
add
enter
xchg
push
or
and
push
(bad)
int3
sub
loop
xchg
inc
(bad)
adc
in
mov
push
mov
shl
scas
pop
sbb
int3
push
popf
addr16
mov
jmp
jle
in
mov
pop
out
ins
shr
out
out
pop
in
into
mov
daa
pop
cmp
movs
push
fcmovne
adc
loop
mov
xor
sahf
(bad)
add
xor
inc
add
xor
into
xor
xor
cdq
fcmovne
(bad)
pop
dec
(bad)
fisub
cmp
xor
cmp
jmp
retf
inc
push
adc
push
ins
les
outs
add
jge
mov
adc
mov
push
adc
inc
push
cs
mov
adc
loope
add
or
call
or
enter
sbb
mov
push
adc
mov
xchg
shl
jmp
mov
pop
leave
add
xlat
or
pop
popa
call
ror
test
test
nop
retf
enter
jl
retf
stos
xchg
ja
int3
fcomp
div
and
pop
imul
mov
sahf
shl
loop
xchg
sub
push
shl
(bad)
iret
lods
leave
jb
shr
and
xchg
jb
das
mov
es
xor
xchg
call
or
pop
push
loop
jmp
cs
pushf
pushf
mov
mov
push
add
dec
cmps
mov
cwde
bound
jae
sar
inc
sti
aaa
daa
mov
stos
mov
inc
out
sbb
lahf
sub
cmps
cmp
push
push
xlat
jecxz
or
fidivr
push
jmp
jno
xor
dec
push
fcom
cli
push
dec
xchg
jp
cmp
std
xor
jb
mov
or
sar
cdq
inc
cmp
lods
cmc
retf
mov
cmps
fld
cmp
pop
aaa
mov
jae
bound
in
inc
jge
xchg
push
out
jb
or
inc
ror
iret
jae
pushf
sub
in
xlat
mov
mov
rcl
or
push
dec
mov
dec
xchg
out
in
(bad)
or
and
(bad)
cmp
in
jmp
retf
shl
fidiv
pusha
inc
push
aad
or
push
xor
xor
jmp
gs
adc
in
movs
fs
xor
xor
sub
ja
cmps
fstp
and
ret
adc
movs
out
bound
popa
ds
xchg
repnz
add
in
jle
sub
mov
ja
nop
and
sub
jae
stos
fist
test
mov
push
ins
cmp
shl
jno
jno
in
sub
mov
or
sbb
sbb
push
mov
push
or
and
in
mov
es
test
push
add
retf
adc
and
push
retf
test
and
fsubp
mov
jo
cdq
les
cmps
mov
xchg
in
scas
adc
outs
dec
mov
lds
jmp
add
loopne
mov
jecxz
pop
retf
pop
jle
jb
and
push
imul
cmp
sbb
cmp
jne
outs
jae
stos
sbb
pop
cmps
cmp
mov
fisttp
inc
out
in
in
test
(bad)
(bad)
clc
xor
sub
xor
mov
test
sub
xchg
call
imul
cmp
mov
push
and
js
shl
add
movs
sub
dec
and
inc
dec
push
jp
cmp
jle
xchg
push
popa
jmp
(bad)
adc
enter
sbb
mov
scas
pop
clc
in
add
shl
add
add
mov
neg
bt
jns
int
mov
push
mov
loopne
test
iret
mov
je
add
call
or
add
mov
or
jecxz
retf
jge
jbe
add
mov
js
dec
xchg
sbb
fs
jns
sub
out
cmc
retf
push
aas
mov
xor
dec
xlat
cmp
ins
xor
sub
jle
push
call
push
cmp
dec
fcom
sbb
repz
test
cmp
sbb
mov
and
mov
push
pop
dec
aad
cwde
xor
in
push
and
and
stos
or
rol
jp
movs
push
iret
cmp
movs
call
jno
call
cmps
xor
jge
inc
cmp
sub
dec
cmp
in
add
lahf
jnp
scas
repnz
test
das
xor
cmp
adc
mov
jbe
fst
int3
mov
xchg
sbb
fs
pop
js
pop
loopne
jle
adc
add
pop
lock
jne
stos
pop
retf
push
nop
rcl
addr16
bound
inc
in
xchg
jnp
xchg
inc
int
jno
xchg
call
imul
cwde
leave
xlat
jecxz
lods
sub
adc
mov
hlt
push
or
push
stos
pop
adc
pop
ins
movs
test
mov
ins
cdq
jne
cmp
test
daa
add
jnp
adc
cmps
(bad)
dec
cmps
mov
mov
aam
xchg
pop
cmp
and
xchg
or
ins
pushf
jne
push
mov
cld
pop
inc
pop
dec
dec
push
mov
dec
mov
pop
test
test
or
iret
xor
add
jb
push
mov
iret
push
jl
enter
jge
mov
(bad)
xor
je
test
jg
shl
imul
jp
imul
fs
sbb
cli
sbb
add
inc
call
and
mov
push
adc
test
xchg
movs
mov
movs
mov
push
push
cmp
pop
inc
enter
xor
ins
jo
out
repnz
movs
pop
cmc
inc
and
ds
data16
test
es
or
dec
cs
inc
in
dec
ins
repz
mov
daa
repnz
ins
jmp
aaa
add
sbb
mul
ja
(bad)
mov
or
popa
call
fistp
xchg
jge
out
repnz
pop
cmp
iret
aad
jns
test
das
clc
mov
icebp
sub
int
js
enter
pop
cmps
frstor
sub
pop
adc
or
ficomp
retf
dec
cli
int3
sub
sbb
pop
mov
mov
imul
sbb
xor
out
push
fnstcw
inc
adc
or
aad
or
sbb
mov
xchg
push
mov
enter
dec
mul
or
push
pop
dec
subps
push
pop
lea
inc
stos
push
rcr
mov
das
jnp
jecxz
xchg
ret
les
loopne
test
inc
(bad)
scas
or
jl
(bad)
bnd
xchg
sbb
aam
xor
(bad)
fxch
jbe
mov
fild
pop
jbe
fmul
out
jmp
mov
xor
out
and
xor
and
out
outs
fsubr
aaa
pop
pop
mov
fld
add
jmp
das
add
ds
mov
aaa
dec
pop
stos
shl
test
sar
cmp
sub
xchg
pusha
and
aad
ss
fmul
add
mov
or
dec
scas
in
lods
push
inc
mov
jp
(bad)
xlat
jb
mov
push
push
call
cli
sbb
fucomi
inc
cwde
jmp
pop
mov
jmp
cmp
add
xor
loopne
mov
sbb
imul
jecxz
imul
push
xchg
jmp
sbb
jg
jns
inc
daa
lahf
add
or
call
icebp
test
je
mov
push
jb
sti
sbb
imul
mov
push
xchg
outs
std
mov
lods
leave
rcl
cmps
ret
ds
loope
das
mul
dec
mov
xor
push
lods
test
imul
dec
mov
shl
inc
out
cmp
cmp
mov
cmp
addr16
das
mov
jne
or
add
int
sub
mov
and
sub
test
xor
mov
jno
adc
or
aaa
stos
mov
push
pop
aas
xchg
push
push
xchg
cmp
call
repnz
lods
jp
sbb
jnp
lods
sbb
cmp
adc
xor
jnp
out
push
test
dec
out
mov
xor
push
pop
mov
dec
dec
ja
movs
loope
jb
in
xor
in
push
into
push
(bad)
pushf
and
sbb
pop
push
xchg
adc
dec
dec
jg
push
clc
push
sbb
cmp
jl
xlat
inc
arpl
fnstsw
push
frstor
es
inc
ss
int3
arpl
jns
inc
les
sahf
add
int
mov
rcl
movs
out
pop
mov
mov
ss
call
or
les
lea
jmp
les
pop
bound
pop
in
pop
mov
cwde
and
adc
ret
outs
or
sti
pusha
mov
pshufw
pop
xchg
inc
sbb
idiv
jne
jl
pop
add
(bad)
lods
sbb
clc
or
mov
xor
inc
adc
fcmove
imul
shr
fidiv
mov
imul
retf
test
cmp
int
mov
adc
or
jmp
jbe
or
in
popa
sbb
clc
(bad)
pusha
mov
lea
jae
fst
ss
pop
and
or
inc
jl
or
pop
jge
and
arpl
jmp
rcr
add
jle
test
push
xchg
dec
inc
cmp
cmps
push
leave
cmp
stc
mov
popa
lods
clc
jmp
xor
into
lock
add
dec
push
cmp
or
push
test
retf
push
jmp
pop
push
lahf
in
and
sbb
(bad)
sub
jne
jmp
popa
push
repnz
outs
aad
outs
xor
into
add
mov
or
loope
(bad)
in
mov
jne
adc
cmp
fldz
jg
cmp
je
idiv
arpl
xchg
dec
daa
les
stos
push
aaa
rol
xor
push
dec
icebp
pusha
adc
dec
retf
jnp
and
shr
xlat
retf
rcr
fld
xor
test
cdq
sti
out
push
ss
sub
fcmovnbe
add
lea
mov
dec
test
sbb
stos
xchg
xchg
scas
mov
mov
std
pusha
js
sub
nop
adc
jnp
cmps
fcom
mov
jne
scas
fwait
out
fcmove
mov
cmps
mov
push
std
out
in
jne
dec
ins
popa
clc
pop
cld
inc
daa
or
pop
jl
push
mov
clc
enter
in
or
mov
mov
or
int3
mul
fadd
test
lea
cmps
inc
pop
test
inc
pop
les
inc
rol
repnz
stos
push
dec
mul
xchg
test
push
or
in
dec
shr
cmc
jbe
jge
fidivr
shl
stos
mov
test
mov
or
mov
retf
push
repz
cwde
int3
pusha
push
fist
sbb
cmp
xchg
inc
pop
adc
dec
and
sbb
cld
sub
not
lea
push
(bad)
out
dec
cwde
jp
xor
push
cmps
aad
add
div
iret
dec
ret
push
cs
xchg
lods
cdq
dec
mov
mov
add
dec
sub
sbb
test
mov
dec
(bad)
adc
leave
jo
lea
mov
pop
clc
mov
into
adc
adc
dec
lods
aaa
sub
push
aaa
(bad)
rcr
adc
pop
je
cmp
test
outs
shr
pop
or
movs
rcl
inc
in
cmc
xor
or
inc
sub
lods
pop
pop
or
loop
fistp
outs
mov
adc
call
sbb
mov
xchg
(bad)
mov
dec
das
jl
loope
adc
outs
and
daa
sar
xchg
sbb
inc
jmp
pop
icebp
(bad)
cmc
ins
hlt
mov
push
mov
mov
out
inc
jle
or
jnp
test
test
(bad)
in
add
mov
jle
(bad)
mov
pop
test
loop
push
push
scas
in
jecxz
aaa
or
inc
sub
call
xlat
cmp
les
packsswb
gs
jmp
jg
add
pushf
mov
inc
sub
inc
cmp
jmp
out
jmp
in
je
xchg
sbb
add
arpl
ds
mov
cmps
lds
or
cmps
sub
movs
ret
xchg
sub
xchg
add
sub
scas
push
jno
jmp
dec
mov
outs
fadd
scas
push
(bad)
cdq
push
test
and
mov
out
sbb
clc
xor
fisub
iret
mov
stc
ret
pop
imul
and
mov
icebp
fisub
les
imul
jmp
pop
idiv
aaa
push
and
int3
cli
pop
in
cli
add
cmp
add
movs
pop
xor
movs
aad
hlt
pop
mov
ss
cdq
mov
data16
aaa
aas
aas
(bad)
cmp
loopne
pop
gs
test
sti
out
dec
nop
clc
add
retf
dec
fstp
data16
popf
jbe
outs
dec
inc
inc
push
call
stos
jno
mov
jnp
mov
mov
xchg
popf
lods
into
pusha
inc
neg
in
dec
adc
mov
xchg
xor
sbb
cmp
outs
lods
fwait
data16
inc
jno
ins
mov
mov
jle
mov
jb
jo
xchg
adc
xlat
jmp
mov
rcl
call
(bad)
js
inc
pushf
and
(bad)
clc
mov
pop
pop
mov
dec
sub
ret
xor
and
lods
or
fdiv
jbe
je
sbb
(bad)
and
cmp
push
test
xor
in
jecxz
adc
jbe
mov
mov
cmp
stos
sub
ins
in
pop
sti
or
fwait
into
(bad)
fwait
jmp
xchg
cmp
ret
mov
sti
inc
mov
scas
mov
jmp
pop
addr16
int
aaa
outs
jge
cwde
mov
inc
push
movs
dec
mov
add
or
mov
pop
mov
push
fsubr
xchg
cmp
call
cmps
inc
xlat
pop
sub
fild
aam
sub
pop
enter
sub
ror
sub
fdivr
lock
cs
stc
adc
mov
sub
cmp
ss
xlat
mov
push
movs
jae
stc
sub
push
repnz
push
jae
inc
xor
jb
lods
jae
adc
fwait
or
adc
push
retf
mov
sqrtps
push
mov
mov
out
or
or
sub
pop
inc
xor
hlt
fistp
mov
adc
jecxz
js
cdq
stc
adc
pop
shr
cmp
push
adc
mov
or
(bad)
jge
ds
adc
mov
test
ror
ja
xor
jne
sbb
lods
(bad)
adc
fcmovnbe
lea
stc
push
retf
and
xchg
jle
pop
mov
aam
addr16
pop
add
jbe
ret
mov
(bad)
idiv
and
dec
dec
add
scas
outs
loopne
les
mov
cmc
adc
jbe
jge
sti
sti
sub
daa
and
adc
icebp
inc
push
xchg
xor
(bad)
mov
lods
loop
push
mov
shr
scas
movs
sub
daa
outs
ror
push
rcl
mov
(bad)
enter
lods
push
or
xor
popa
xchg
dec
jbe
jmp
mov
pop
fisubr
stc
shr
xor
pop
jo
cmp
push
pop
ret
loopne
outs
loope
inc
(bad)
ficomp
hlt
retf
add
push
xchg
shr
push
push
mov
mov
bound
jbe
mul
iret
mov
push
dec
(bad)
(bad)
mov
stos
cmp
cmc
cmp
fwait
dec
inc
mov
or
mov
sbb
cmc
int3
mov
jmp
pushf
ret
jmp
lock
mov
mov
pop
out
cmps
mov
gs
push
ror
imul
pop
cmp
or
int
jne
mov
dec
pop
push
dec
mov
pop
jecxz
xlat
ins
add
gs
icebp
out
mov
and
cli
mov
add
das
arpl
jmp
fisub
jle
pop
jo
sub
xor
movs
jp
xor
enter
not
adc
aam
or
imul
push
pop
outs
pop
movs
jge
pop
jbe
adc
inc
(bad)
mov
mov
adc
fs
pop
aaa
int3
add
pop
push
pop
(bad)
jmp
or
or
xchg
movs
jle
mov
mov
lahf
pop
popf
xor
jno
mov
adc
out
mov
mov
push
cmps
fstp
cmp
retf
mov
mov
aam
add
adc
out
cmp
sub
dec
aaa
fs
fcomp
pop
push
dec
xchg
sub
pop
cmp
test
xor
push
and
sahf
mov
rcl
into
jne
test
popa
push
nop
mov
and
dec
sti
out
loop
lds
hlt
aad
cmps
ins
ss
add
xor
stc
jp
sbb
out
dec
das
repz
pop
adc
in
mov
out
mov
sahf
mov
mov
pop
cmp
or
ret
clc
cmp
imul
retf
or
call
sub
in
add
or
retf
mov
(bad)
repnz
retf
cmps
movs
inc
loopne
popa
add
mov
shr
and
sub
push
daa
arpl
or
call
xchg
push
add
aas
inc
pop
add
push
ds
xor
fcom
scas
jmp
addr16
jne
iret
retf
aas
iret
out
movs
adc
hlt
test
vfrczps
cmp
or
scas
movs
ret
out
mov
mov
xchg
je
lock
test
fs
mov
mov
loope
rcr
fs
or
push
dec
loopne
sti
xchg
sub
mov
outs
fs
xor
adc
sbb
xchg
push
pop
mov
sbb
call
movs
mov
jnp
cmp
cmp
jle
stc
mov
inc
ss
adc
aad
xchg
inc
std
call
into
jbe
inc
mov
sbb
mov
sar
xchg
xor
mov
(bad)
jp
sbb
xor
lfs
(bad)
fnstenv
jns
mov
mov
push
in
data16
add
xor
jg
cmp
xor
fdivr
in
inc
(bad)
aad
inc
xor
sub
mov
cmp
xor
pop
xchg
jmp
cmc
sahf
push
in
aad
sub
inc
int3
daa
dec
aas
inc
pop
mov
push
mov
sbb
pop
push
fcomp
mov
lea
and
shl
loope
(bad)
fcmovne
(bad)
(bad)
(bad)
xchg
xor
ins
out
mov
fdiv
push
mov
clc
inc
sbb
adc
mov
push
(bad)
fcom
js
pusha
inc
xchg
add
in
inc
pop
adc
fwait
scas
mov
mov
adc
xchg
jnp
sahf
retf
sbb
mov
xor
cdq
adc
inc
fisubr
mov
ss
test
jbe
pop
add
mov
push
int3
jge
or
(bad)
mov
lods
cmp
push
push
cmp
sbb
(bad)
fsub
push
mov
xchg
push
in
and
cmps
and
xchg
js
mov
stos
shl
mov
push
mov
and
stos
cmps
and
shr
dec
cmp
ss
rcl
pop
popa
es
fisubr
int
ror
aas
xchg
xor
pop
(bad)
mov
out
sbb
jnp
add
int
cmps
mov
inc
or
or
ret
mov
or
or
loope
retf
cs
test
das
or
movs
out
rcr
loop
dec
fdivr
pop
fldcw
or
xchg
mov
pop
pop
push
pop
stos
cmps
add
cmp
das
push
pushf
mov
push
push
ins
sbb
outs
iret
ficomp
push
mov
iret
scas
or
cli
mov
dec
adc
sub
mul
imul
push
jo
fnsave
data16
inc
bound
sbb
inc
iret
inc
or
and
inc
mov
xor
ins
dec
push
pop
xchg
dec
mov
mov
or
mov
add
jnp
mov
(bad)
es
(bad)
fidiv
(bad)
sbb
mov
xor
add
mov
pushf
and
mov
mov
retf
inc
xor
pop
pop
mov
enter
pop
aam
push
and
stos
mov
or
adc
mov
dec
pop
push
rcr
retf
stos
cwde
add
jecxz
das
fwait
xchg
cmp
mov
imul
(bad)
shl
repz
mov
pop
dec
fldcw
imul
xor
xchg
hlt
jo
push
rol
xchg
pop
lea
mov
shr
out
add
mov
cdq
dec
pop
leave
push
jns
cmp
fwait
mov
and
loope
shl
and
aam
repnz
fisttp
xchg
add
add
dec
jo
test
test
jg
arpl
ss
fiadd
mov
cs
fdecstp
int
ja
jmp
mov
fs
xchg
xchg
dec
ins
pop
scas
bound
mov
mov
enter
mov
lea
sbb
or
sbb
fwait
dec
adc
and
ja
loope
dec
add
pop
cmp
mov
(bad)
sbb
xor
inc
imul
mov
mov
jecxz
add
xor
test
dec
test
ins
outs
mov
adc
and
mov
adc
push
(bad)
in
std
or
mov
imul
sbb
aam
xchg
push
fsubr
adc
outs
xchg
xchg
ins
call
sbb
das
xor
cmp
jo
cli
scas
jl
push
sub
movs
cmc
push
(bad)
loopne
jge
pop
jo
ss
lds
push
imul
shl
or
mov
push
lods
pushf
and
sub
fwait
repz
sahf
and
or
xchg
in
cmp
inc
and
push
hlt
xchg
inc
xlat
enter
pushf
dec
cdq
ret
shl
ror
xor
dec
push
or
jmp
push
neg
dec
call
call
cmp
xor
mov
in
mov
jmp
inc
push
mov
shr
sar
push
(bad)
mov
sbb
xchg
aad
enter
fnstenv
xor
fdiv
cwde
jno
xor
test
sub
xchg
(bad)
test
fild
add
sbb
mov
popa
mov
push
es
(bad)
aad
fistp
adc
jp
je
mov
pusha
adc
ret
test
leave
imul
cmp
pop
fs
and
inc
inc
mov
jmp
test
mov
in
and
xlat
or
retf
sbb
lock
test
sub
mov
mov
outs
jmp
dec
jmp
bound
add
lods
(bad)
add
adc
xor
imul
mov
ds
sti
mov
fsubr
dec
push
push
mov
pushf
cmp
inc
xor
cmp
push
shr
mov
mov
mov
lods
js
enter
xor
push
sub
adc
icebp
(bad)
movs
fldenv
call
out
mov
(bad)
or
cmp
cmps
loopne
pop
or
add
(bad)
cwde
(bad)
cld
cmp
xchg
scas
jmp
xor
jecxz
mov
fnstcw
inc
push
sbb
and
fld
jle
dec
mov
adc
xlat
loopne
popa
jmp
xlat
loope
inc
adc
retf
xchg
aam
xor
das
xchg
adc
fwait
sub
push
sub
sbb
ins
and
das
add
sbb
nop
hlt
push
jl
mov
scas
fisubr
je
cmc
scas
or
test
mov
xor
or
out
add
rol
data16
xchg
mov
adc
inc
fadd
cmp
fucomp
lock
movs
fisubr
movzx
test
in
add
mov
dec
mov
lds
mov
xlat
aaa
fcmovu
jp
imul
popa
jle
repnz
inc
jmp
pusha
mov
(bad)
push
data16
sub
aam
stos
sti
xchg
scas
sbb
jmp
shl
push
pop
pop
push
mov
cmps
loop
fcmovbe
or
sub
fidiv
sti
or
das
or
pusha
adc
and
adc
movs
clc
and
hlt
fisub
or
xchg
xor
jl
and
jge
push
into
and
cwde
int
mov
lods
cmps
nop
out
mov
lahf
pop
dec
push
loop
mov
pop
sbb
fsubr
(bad)
mov
xchg
xor
sub
or
dec
push
xchg
mov
jb
daa
inc
mov
push
ret
push
pop
mov
stc
retf
jno
gs
cmc
comiss
pop
cmp
js
sub
sbb
sbb
jae
jb
outs
jecxz
xlat
lock
jle
pusha
or
repnz
cld
and
lea
xlat
call
xchg
mov
ss
ja
test
(bad)
sub
loop
sub
adc
jmp
popf
mov
fsubr
inc
das
add
es
ret
rol
jb
rcr
(bad)
mov
adc
add
movs
xchg
jno
sbb
push
in
mov
xchg
mov
add
sub
push
pop
lock
add
mov
add
cmp
cmp
sub
in
cmp
pop
add
jmp
inc
mov
push
mov
pushf
dec
sbb
imul
cmc
adc
je
sbb
(bad)
fnstenv
xchg
xor
inc
cmc
pop
adc
and
sbb
bound
js
inc
mov
gs
pop
aad
dec
cmp
dec
push
pop
cld
dec
bound
inc
jl
push
loop
dec
fld
dec
scas
jg
and
add
cdq
inc
sub
xor
mov
push
cmp
femms
mov
out
retf
fwait
cwde
cmc
mov
mov
and
imul
pop
mov
mov
loopne
sub
pop
jns
cmp
ret
push
(bad)
stc
int
(bad)
popa
aad
inc
and
sub
mov
cwde
pop
call
lods
lds
or
rol
scas
or
inc
xchg
xor
(bad)
aam
inc
xchg
mov
add
cmc
jmp
icebp
xchg
dec
or
jle
jle
push
push
sub
in
cld
add
ins
les
cmp
or
add
daa
inc
ret
fstp
je
cmc
xchg
cmc
outs
sub
sub
in
and
xchg
mov
sub
test
es
(bad)
jb
and
cs
into
mov
mov
push
jecxz
jmp
inc
repz
ins
or
into
pop
aas
sub
cmp
lock
adc
jmp
dec
dec
and
push
popa
mov
xor
pop
stos
call
int
call
mov
mov
sti
mov
(bad)
push
xor
xchg
cmp
xchg
mov
sub
mov
mov
jmp
pop
mov
adc
push
shl
ds
cli
cmp
dec
xor
sbb
or
hlt
leave
clc
mov
push
jno
cwde
push
fistp
movs
test
imul
xchg
xchg
ins
ds
sub
pusha
sti
in
loopne
jge
aaa
mov
mov
or
loop
push
adc
ja
dec
repnz
mov
push
sar
ins
rcl
push
rol
cmps
arpl
lods
pop
addr16
or
mov
mov
inc
mov
imul
fwait
dec
or
jnp
hlt
out
mov
cmp
lds
imul
xchg
repz
mov
loope
arpl
cld
mov
xor
xor
push
mov
push
popf
aad
push
cwde
pop
aas
icebp
inc
fcom
inc
and
(bad)
(bad)
nop
mov
xchg
mov
xor
push
dec
push
scas
cld
loop
stos
inc
xchg
lea
(bad)
inc
cmp
jo
push
retf
and
lds
fcomp
and
dec
jmp
push
push
sub
push
sub
pop
sahf
lds
pop
mov
and
ror
arpl
xor
fnstcw
rcr
adc
xor
fxam
mov
and
sar
sbb
push
adc
mov
pushf
or
push
in
out
mov
(bad)
dec
or
jns
(bad)
not
cmps
push
fstp
xor
mov
sbb
xor
jmp
out
cmc
cmp
and
call
mov
ds
cdq
int
out
popf
shl
xchg
add
shl
in
adc
add
push
mov
inc
mov
mov
mov
daa
xor
adc
(bad)
jns
repnz
test
xor
mov
or
call
lds
xchg
inc
mov
mov
icebp
mov
sti
scas
xor
mov
adc
ffreep
xchg
jmp
or
(bad)
cmp
dec
pop
bound
int3
sahf
or
stos
mov
push
mov
(bad)
imul
or
xor
xchg
inc
inc
fs
stc
ss
cmp
gs
jle
retw
mov
dec
sub
into
enter
jmp
cdq
mov
jle
sbb
sbb
addr16
pop
lods
not
call
sub
dec
add
add
pop
sahf
out
sbb
stos
jp
dec
inc
mov
sahf
cli
scas
test
clc
das
loop
and
addr16
add
aad
xchg
adc
inc
lahf
shr
int
cmp
push
cld
lds
stos
icebp
(bad)
int3
lods
lock
shl
mov
inc
jecxz
lock
sub
mov
les
or
out
mov
jmp
fimul
mov
inc
xlat
jae
ins
push
xchg
cmp
sbb
mov
je
das
inc
in
dec
pushf
outs
daa
xor
ins
inc
sub
div
addr16
xor
fcmovnbe
leave
std
aaa
call
add
arpl
fimul
cwde
mov
mov
mov
xchg
lods
xchg
int3
(bad)
xchg
adc
in
jge
inc
mov
into
(bad)
sub
mov
(bad)
sbb
mov
ss
nop
add
or
jbe
or
push
inc
ret
pop
dec
(bad)
fisub
sbb
pop
jbe
sub
mov
xchg
fimul
jmp
and
mov
imul
cmp
xchg
retf
or
or
jae
push
pusha
cmp
jle
ss
or
lahf
gs
jo
push
dec
pop
xchg
or
aas
mov
adc
sti
inc
push
ret
add
movs
mov
out
push
xor
xor
pop
shr
inc
cmp
xor
push
int
inc
loop
xchg
xchg
xchg
and
xor
pop
popa
outs
bound
adc
and
mov
or
inc
jl
push
push
sbb
ret
in
stos
out
add
inc
loope
inc
lods
pop
xchg
outs
mov
mov
mov
fadd
add
fmul
sub
push
addr16
adc
sub
add
pop
aad
dec
ds
movs
test
dec
and
or
add
jle
sahf
cwde
jbe
gs
inc
inc
shl
jg
adc
lahf
rcr
call
sub
mov
mov
cdq
aam
adc
or
sbb
inc
aad
pop
and
cmp
daa
or
test
sub
out
pop
cs
fimul
sub
push
push
(bad)
xor
sbb
push
loope
and
or
fild
sbb
mov
push
popa
inc
sti
or
mov
push
cmp
push
sub
sub
xlat
in
das
sbb
mov
hlt
adc
xchg
jne
sbb
xchg
or
(bad)
imul
inc
add
mov
call
das
or
(bad)
inc
(bad)
in
lods
test
outs
outs
daa
adc
cmp
cmc
mov
adc
int3
into
xor
les
or
(bad)
pop
mov
(bad)
pop
outs
sub
aaa
xchg
out
adc
jo
js
aaa
push
xor
push
dec
ror
ins
nop
ins
push
lock
jo
stos
(bad)
pop
lds
jp
cs
in
sub
imul
jno
inc
(bad)
and
(bad)
jnp
xchg
sbb
clc
inc
(bad)
jp
jge
test
mov
fidivr
lods
nop
add
mov
nop
sbb
loopne
adc
and
push
pop
push
mov
pushf
mov
sar
addr16
xchg
and
arpl
xchg
sbb
or
adc
xchg
lahf
cwde
jns
popa
aam
or
push
jns
test
pop
scas
(bad)
mov
pop
sbb
sub
sbb
sbb
aam
push
je
dec
sub
daa
cmp
ret
adc
ror
push
sub
xor
stc
cld
or
cmp
scas
clc
jge
xchg
mov
push
(bad)
xlat
sub
inc
std
jbe
xor
sub
fstp
xchg
jmp
jns
dec
arpl
inc
push
in
aas
xor
loop
les
pop
(bad)
ins
jg
adc
jne
add
popf
sbb
xchg
inc
fild
push
and
lahf
adc
dec
(bad)
jmp
and
pop
push
jae
and
call
fs
or
fistp
and
(bad)
mov
mov
rol
dec
lods
push
lods
cmp
stc
shl
stos
sub
out
stc
cmp
ret
pop
adc
lock
inc
je
mov
sub
push
ror
xor
ficom
pusha
fisttp
pop
(bad)
push
push
outs
fadd
jge
xor
lea
or
scas
fistp
retf
repnz
push
jne
les
adc
and
cmc
or
jbe
pop
adc
div
jl
ins
leave
cmc
ds
aam
int3
ffreep
cwde
ret
pop
stos
jl
fcom
push
test
out
(bad)
xchg
(bad)
cdq
dec
sub
mov
loope
push
xchg
daa
sahf
test
test
rcr
adc
add
fldenv
add
ret
loop
pop
bound
add
xchg
setge
loop
push
mov
inc
paddusw
(bad)
cmp
adc
jle
ja
push
and
out
add
test
adc
jo
adc
not
inc
enter
jge
test
fsubr
mov
adc
fdivr
inc
stos
ja
xchg
sub
aam
and
idiv
clc
(bad)
jae
mov
mov
add
mov
fld
jle
sbb
xor
and
xor
fiadd
popa
mov
pop
imul
mov
pop
cmp
aam
popa
outs
stos
cmp
push
sbb
outs
test
into
mov
aas
pop
mov
movs
adc
inc
cmp
push
and
inc
sub
data16
(bad)
jb
cmp
xchg
mov
pop
imul
xor
jecxz
xchg
push
fadd
xor
outs
fmul
mov
jb
arpl
cli
(bad)
shl
dec
xor
cs
jne
push
inc
jne
aam
mov
xchg
or
sbb
lea
add
arpl
or
xlat
(bad)
mov
jmp
imul
adc
inc
ret
cmps
adc
outs
test
pop
arpl
inc
push
or
dec
es
and
inc
out
call
jge
adc
js
mov
ins
mov
(bad)
stos
or
retf
and
mov
jnp
adc
popa
sub
xchg
adc
mov
cwde
test
pop
mov
mov
movs
pop
pop
ret
xor
in
loop
hlt
int
mov
pushf
lds
popa
mov
test
aam
xlat
mov
mov
icebp
xor
dec
ret
bound
hlt
lods
(bad)
jne
push
jp
loop
mov
ror
jnp
clc
ret
xor
aam
sub
inc
(bad)
mul
leave
retf
mov
mov
cmc
shr
fiadd
retf
jmp
cwde
mov
push
sar
aaa
je
dec
ds
mov
popf
lods
add
xchg
sbb
push
sub
dec
add
rol
jmp
lock
jmp
xchg
push
in
sbb
sub
js
daa
out
pop
addr16
or
in
sbb
inc
popf
xchg
lock
xchg
add
cs
cli
imul
aad
jle
mov
call
mov
imul
cmp
lahf
les
or
push
push
call
inc
adc
pusha
jecxz
sub
stos
sbb
out
and
mov
or
lock
add
imul
test
enter
out
mov
ins
cmp
mov
fsubp
int3
dec
and
mov
ja
pop
aam
adc
mov
imul
mov
jg
dec
call
pop
mov
aaa
mov
fcmovnu
(bad)
ret
sbb
adc
out
gs
mov
call
fistp
sub
push
dec
or
mov
jmp
xor
loop
mov
add
loope
(bad)
and
jnp
xor
fs
mov
or
repnz
mov
mov
xchg
jb
pop
fwait
pop
lock
push
neg
mov
xchg
pop
in
xor
lods
jecxz
not
mov
inc
xor
jg
loop
fnstenv
push
adc
add
sbb
xchg
iret
and
cmp
or
repnz
adc
push
ins
loop
xchg
popa
sbb
sbb
sbb
push
and
mov
pop
and
test
or
pop
sub
mov
dec
push
(bad)
jno
outs
sub
xchg
push
push
pop
leave
rol
mul
aad
call
fisubr
icebp
adc
nop
cwde
cdq
adc
xchg
gs
dec
ja
xor
jmp
pop
cmp
dec
push
loopne
mov
mov
out
popf
mov
add
push
ins
mov
mov
lea
inc
loopne
aam
out
xchg
out
enter
pop
mov
lock
mov
in
es
pop
sar
sbb
dec
sbb
push
add
sbb
pop
test
add
stos
adc
rol
fcmove
or
mov
mov
inc
inc
mov
imul
fsincos
xor
int3
mov
adc
inc
rol
fisub
retf
arpl
(bad)
shr
push
mov
fadd
cdq
xchg
fdivr
(bad)
xor
sar
push
pop
je
pop
xchg
jmp
std
loop
or
ins
in
aad
pop
sub
push
ins
and
ficomp
shl
mov
cmps
cmps
arpl
imul
shr
jmp
pop
lods
mov
sub
paddusb
aas
outs
int
pop
mov
ret
idiv
push
push
xchg
push
mov
xchg
jb
addr16
out
shl
pop
dec
push
xchg
push
pop
xor
push
fidiv
cmp
inc
sub
xor
enter
sub
mov
jle
arpl
dec
pop
jg
push
inc
(bad)
iret
add
(bad)
out
sub
iret
push
sbb
movs
movs
xchg
ss
loope
mov
pop
pushf
pop
cs
xchg
(bad)
jmp
mov
add
mov
pop
(bad)
pop
mov
jnp
adc
push
pop
jb
lods
mov
mov
aam
(bad)
and
or
int3
cmp
and
aad
fistp
and
or
dec
adc
rcl
cmp
adc
sub
fdiv
in
mov
mov
xchg
pop
arpl
lods
xchg
pop
adc
pop
mov
or
push
not
xchg
daa
inc
rol
fist
outs
adc
pusha
daa
dec
mov
cld
push
mov
jl
xchg
cli
ins
sbb
mov
ds
cmp
cmp
js
ret
es
in
stos
pop
daa
fidiv
mov
cmp
(bad)
mov
inc
test
sub
or
icebp
lods
mov
out
pop
or
and
inc
test
out
pop
xor
push
and
or
and
in
addr16
mov
fs
cmp
fidiv
std
push
add
dec
cmps
mov
jns
call
pushf
ds
push
jo
in
mov
shr
in
stos
pop
add
dec
jmp
nop
xchg
mov
ficomp
inc
sbb
jae
inc
xchg
es
aad
mov
and
mov
inc
daa
and
cmps
imul
pop
lods
movs
dec
lods
retf
cmp
call
dec
pop
jecxz
sub
ret
lods
loopne
xchg
pushf
ret
out
(bad)
or
out
retf
loop
xor
inc
(bad)
mov
cmps
test
(bad)
(bad)
shl
pusha
fidiv
imul
push
and
or
sub
daa
sbb
xlat
xchg
pop
xchg
fisubr
or
(bad)
in
ins
or
mov
pop
xor
inc
xor
mov
dec
cwde
xchg
jmp
cli
outs
dec
or
jg
pop
adc
shl
fimul
cdq
movs
push
cmp
into
sti
pop
test
jb
fstp
fdivp
xor
jne
loope
popf
adc
ss
loopne
mov
mov
aaa
add
pop
xor
loop
or
jle
(bad)
cmps
xchg
fwait
push
aas
xchg
mov
retf
sub
mov
cmp
or
add
cdq
int3
xchg
mov
jmp
or
out
loop
not
xor
fdivr
scas
inc
or
sub
pop
mov
dec
retf
retf
xchg
stc
out
retf
sub
dec
shr
push
dec
lea
imul
xor
inc
imul
sbb
xchg
addr16
ret
cmps
fiadd
or
add
mov
cs
jbe
dec
popfw
sar
xor
pushf
xor
add
popf
jle
cmp
ja
sar
inc
daa
aam
pop
or
jne
sub
mov
ds
and
int
jp
dec
mov
inc
test
mov
sti
or
dec
sbb
jbe
cwde
gs
mov
jns
adc
mov
loop
ror
les
and
or
lahf
ss
call
sub
mov
mov
mov
int
xchg
aad
les
sub
or
mov
xchg
sbb
les
pop
dec
clc
inc
cmp
or
dec
sub
iret
mov
mov
dec
mov
je
out
popf
shl
push
cmc
in
ret
push
ja
mov
call
in
loop
pop
rcl
mov
js
jae
fsub
jmp
sti
xchg
mov
rcl
push
mov
(bad)
inc
aad
jle
retf
mov
xor
std
bound
fild
das
mov
sbb
xchg
lods
cwde
mov
sbb
add
sbb
cs
xlat
sbb
stc
mov
(bad)
lds
(bad)
and
addr16
cmps
sti
adc
call
dec
adc
out
add
retf
jo
mov
sti
cld
mov
fcomp
clc
rol
test
fidivr
in
cmp
xchg
es
inc
adc
stos
lods
(bad)
jmp
gs
out
jno
sbb
or
mov
dec
seto
je
verr
shr
nop
arpl
lea
ss
repnz
and
pop
(bad)
jmp
mov
cld
mov
test
sub
es
test
enter
or
outs
in
bound
cmp
out
lock
cmps
iret
inc
retf
inc
shl
pop
cmp
mov
mov
ret
icebp
or
fnstsw
adc
fwait
sub
loopne
scas
jbe
test
je
adc
in
sub
fcmove
push
mov
or
adc
ss
push
cmp
outs
push
mov
xchg
and
inc
outs
(bad)
sahf
test
mov
lahf
pop
add
and
jb
inc
in
xor
mov
enter
hlt
sbb
pop
repz
xlat
(bad)
xchg
out
aaa
push
sub
and
retf
push
cld
xor
dec
or
pop
sbb
iret
sub
mov
cmp
dec
mov
out
retf
fiadd
out
enter
call
adc
jb
ror
push
in
push
inc
stos
jb
sub
enter
sbb
xor
cmp
(bad)
outs
or
push
std
mov
(bad)
int3
sbb
fnstenv
lahf
mov
clc
adc
das
retf
retf
jp
repz
and
mov
push
dec
sbb
mov
fsubr
imul
mov
mov
mov
jle
mov
xor
ror
or
mov
call
push
ret
fsub
pop
int
cwde
mov
cmc
sbb
fisub
pop
movs
ror
fbstp
cmp
fild
sub
mov
sub
loop
test
(bad)
xchg
push
and
mov
out
(bad)
add
cdq
lods
fwait
jl
mov
sbb
movs
cmp
xor
mov
xchg
pop
adc
(bad)
lock
in
aam
stc
jns
aaa
cli
stc
cmp
pushf
or
repnz
fcomp
scas
sar
or
pop
aam
(bad)
jno
popf
out
adc
sub
imul
xor
or
call
fimul
dec
jmp
fnstenv
lods
dec
xor
call
int
mov
(bad)
fsub
push
or
and
xor
test
pop
pop
jno
std
jp
ins
adc
xor
(bad)
add
loope
xor
in
add
lods
sub
fwait
dec
(bad)
mov
dec
mov
push
sbb
in
adc
in
push
jp
or
outs
sub
push
imul
mov
adc
sbb
add
icebp
add
push
xor
jae
dec
call
cmp
aam
jno
aas
fld
jno
fxch
das
lods
je
add
rcr
cmc
cmp
lahf
cmp
push
adc
inc
mov
add
into
rcl
test
push
pop
xor
jnp
sub
add
inc
inc
sar
add
sbb
adc
push
inc
xor
in
pop
jp
mov
test
or
mov
ret
dec
adc
mov
inc
mov
pop
js
std
pop
push
test
lods
out
fist
ret
mov
call
mov
ds
pop
pop
lock
push
adc
pop
and
sbb
sub
test
mov
mov
jg
mov
dec
pusha
dec
les
cli
sbb
gs
xchg
mov
mov
push
popa
pop
adc
adc
and
repz
nop
lds
jno
imul
call
pop
in
dec
mov
rcl
ror
loope
pop
retf
fld
jecxz
xor
test
rcl
rol
enter
in
mov
inc
mov
dec
or
or
sub
adc
mov
imul
or
mov
sahf
stos
rep
sahf
and
imul
add
or
sub
out
in
stos
cmps
pop
in
dec
mov
das
cld
xchg
ins
ret
ins
and
imul
enter
adc
cs
mov
sub
xor
mov
popf
sub
inc
enter
pusha
mov
sub
shr
cmps
and
adc
arpl
sub
add
xchg
repnz
cs
fwait
mov
push
jecxz
xchg
inc
inc
les
xor
test
dec
jno
jp
and
sub
rcr
push
or
cdq
mov
into
mov
pop
mov
push
jge
fnsave
mov
sbb
retf
in
in
in
cmp
mov
jae
jmp
repz
mov
xchg
pop
add
cld
pop
leave
mov
xor
(bad)
and
jnp
dec
dec
dec
arpl
inc
rcr
std
cmp
aam
mov
mov
xor
fwait
retf
cmp
test
and
nop
mov
jne
lea
ret
hlt
sub
aad
test
mul
or
mov
sbb
cmp
push
fistp
sbb
adc
aaa
mov
test
mov
rcl
icebp
pop
or
inc
fwait
in
pxor
inc
xchg
dec
fs
jbe
packuswb
and
ins
push
xor
pop
aad
xchg
retf
xchg
adc
icebp
cld
or
mov
sub
clc
push
iret
shr
daa
mov
scas
pop
xchg
loope
mov
or
ds
je
jp
push
adc
test
mov
adc
pop
jp
aam
cmp
xchg
(bad)
icebp
stc
imul
nop
jp
xor
rcl
sub
outs
push
mov
(bad)
outs
enter
and
cdq
or
fdivr
and
add
xchg
popa
int
nop
outs
jg
cmp
fidivr
pop
into
jno
mov
cli
cmp
enter
and
sbb
mov
(bad)
call
stos
addr16
add
and
lods
call
cmc
pop
ss
jl
jns
jg
std
push
out
or
std
mov
in
jae
in
ret
add
call
paddsw
jae
mul
loope
mov
out
loop
ss
jp
push
jbe
sbb
pop
les
in
movs
sub
shl
adc
or
inc
pop
cmp
mov
lea
js
ret
leave
pop
dec
in
rcr
je
xor
mov
add
enter
hlt
stos
push
cmps
pop
jo
sub
movs
fisubr
lods
dec
dec
xchg
aad
xlat
push
rcr
loop
jo
mov
jno
test
jo
ss
and
sub
in
jp
(bad)
jbe
popf
sub
leave
sub
ja
mov
shr
fld
cdq
cld
push
xchg
aam
scas
add
outs
add
cmp
push
mov
rcl
jo
push
mov
dec
fwait
xchg
mov
ret
jb
xor
cwde
out
into
test
mov
sahf
sub
fistp
xlat
push
sub
pop
loope
xchg
loope
xlat
rol
add
dec
lahf
dec
mov
sbb
mov
adc
adc
cdq
mov
clc
xor
(bad)
sahf
xchg
pop
inc
adc
ja
out
movs
lock
push
sbb
aam
gs
sti
adc
nop
sbb
mov
xlat
nop
scas
cmp
inc
mov
mov
das
cmp
jmp
bound
pop
dec
mov
cmp
mov
nop
and
and
pop
aam
ins
cmp
add
ror
scas
jecxz
mov
cmps
cdq
(bad)
sub
je
push
leave
and
xor
adc
les
or
mov
pop
dec
jmp
std
ror
mov
dec
mov
or
ror
into
inc
out
push
ins
fwait
out
mov
mov
adc
in
sbb
push
in
mov
mov
mov
clc
out
lahf
test
adc
pushf
xchg
enter
pandn
mov
cwde
pop
into
or
dec
aaa
cs
js
adc
mov
add
sbb
fdivr
dec
cmp
jecxz
xchg
movaps
les
push
sub
jne
pop
mov
ds
imul
jb
repz
pop
pop
push
push
shr
inc
dec
pop
data16
rcr
xlat
stos
pop
fnstcw
sub
add
cdq
outs
lahf
mov
in
mov
test
or
in
mov
or
or
sbb
mov
stos
adc
push
fs
mov
es
xor
enter
or
mov
xor
xor
loope
and
(bad)
ss
fwait
jp
xchg
push
pop
mov
fs
int
sub
rcl
sub
cmp
cmp
jmp
lods
pop
push
fs
sub
out
mov
lods
lock
cmps
jne
into
dec
xlat
xlat
and
sti
icebp
not
dec
int
mov
and
pop
cld
in
add
movs
xchg
jge
mov
xor
int3
rcl
sbb
mov
cmp
std
inc
cmp
and
inc
dec
mov
in
pushf
xchg
cmp
dec
enter
aas
dec
fisttp
mov
out
dec
repz
sbb
pusha
lods
sbb
dec
cmp
mov
enter
div
es
(bad)
push
int3
fnsave
dec
sub
push
sbb
ss
pop
call
sub
cdq
xor
(bad)
push
les
cmovae
pop
mov
mov
mov
test
clc
std
sbb
jmp
int
mov
mov
xor
push
dec
outs
dec
xor
mov
inc
test
pop
sbb
adc
xor
push
xchg
sbb
das
push
xchg
repnz
and
mov
iret
sbb
sub
or
sbb
not
fisttp
ins
xor
push
das
push
push
in
stos
jecxz
mov
lahf
cs
inc
gs
sub
jge
push
mov
jno
pop
std
mov
js
je
test
xchg
dec
cmp
lods
jle
std
add
ds
cwde
mov
add
mov
jle
retf
pop
cmp
mov
and
pop
rcl
add
add
mov
in
xchg
rcr
sti
cld
imul
fs
cmps
inc
cld
bound
sub
jnp
stos
dec
or
loopne
add
or
mov
and
fwait
popa
aas
scas
outs
outs
cdq
inc
fnstsw
inc
mov
gs
ds
mov
retf
mov
xor
test
fwait
mov
idiv
(bad)
jbe
xchg
xor
cwde
cmp
mov
sti
scas
fisubr
sub
or
out
dec
push
test
movs
xor
mov
mov
sbb
push
cmc
dec
outs
push
loopne
dec
sub
jl
push
cmp
sbb
cmp
or
int3
dec
repz
cmp
dec
add
mov
push
data16
ins
and
es
std
mov
sahf
mov
mov
mov
or
sahf
pop
sar
pop
mov
add
mov
or
mov
cwde
or
xchg
dec
stc
or
xor
xor
push
add
out
scas
in
jle
cli
or
push
push
adc
adc
push
xchg
or
or
add
xchg
nop
xor
cmc
pusha
push
push
adc
loop
dec
mov
mov
addr16
sbb
frstor
push
cmp
out
sub
es
das
add
mov
std
dec
cmps
xchg
and
push
pop
mov
out
fnstsw
cmp
sbb
call
sar
fsubr
adc
mov
into
and
sub
mov
inc
mov
pop
dec
je
retf
pop
dec
sti
rol
mov
cwde
xor
out
test
push
fnstenv
outs
mov
sbb
mov
add
int3
jp
mov
lods
aaa
call
test
xchg
call
repnz
ret
(bad)
popa
daa
push
add
push
xchg
sub
sub
clc
nop
loope
inc
mov
dec
sub
or
retf
inc
mov
xor
sbb
ins
adc
pop
pop
sbb
test
ret
out
call
aaa
or
push
imul
or
int3
adc
dec
movs
ret
stos
cmp
and
mov
aad
das
stos
and
sbb
cmc
add
in
sbb
retf
pop
cmp
bound
xchg
adc
xor
inc
test
mov
scas
cmp
or
fldcw
ins
sti
lods
in
dec
fdivr
cmp
mov
push
sub
cmp
clc
in
pop
les
lods
(bad)
out
pop
mov
sahf
test
into
or
xor
push
adc
int
xchg
in
mov
lods
mov
mov
cld
mov
call
sub
adc
rcr
pop
ins
mov
or
fnstcw
mov
pop
sti
mov
cmp
hlt
pop
pop
push
inc
adc
pop
sbb
mov
aad
mov
nop
es
mov
cld
jns
fmul
xor
cld
or
popf
adc
mov
cmp
fcomip
retf
dec
cmp
cld
scas
test
jg
jb
cmp
movs
test
pop
inc
pop
fs
leave
jne
push
shr
mov
or
pop
xchg
sub
cmp
jbe
ins
call
scas
or
push
mov
sar
or
mov
arpl
sbb
outs
(bad)
mov
xchg
adc
sbb
aas
rsm
aam
jb
mov
dec
cwde
lock
pop
hlt
mov
loopne
cmp
mov
push
pop
shl
xor
stos
aam
pop
xchg
lock
or
push
adc
and
in
inc
loopne
inc
mov
shl
mov
(bad)
fdivr
lock
clc
mov
mov
out
cwde
mov
mov
test
(bad)
mov
repz
imul
test
xlat
mov
adc
pop
shr
adc
push
lea
push
mov
outs
dec
sbb
shl
or
repnz
aad
aas
or
les
dec
xchg
in
bound
cmps
mov
mov
push
jmp
pop
jecxz
sub
jl
or
cmp
mov
push
ins
sub
sahf
sub
pushf
fs
ficom
jecxz
xchg
dec
outs
mov
mov
fs
mov
fnsave
mov
push
aas
dec
cmp
mov
xchg
repz
cmp
fld
ret
ret
call
sub
add
mov
dec
sbb
dec
adc
sub
in
jae
mov
lods
nop
xchg
mov
ret
adc
into
push
jmp
in
test
call
adc
mov
mov
ret
jmp
cld
cmps
in
inc
mov
sub
ret
cld
nop
lahf
and
mov
hlt
pop
add
or
iret
bound
ret
idiv
mov
mov
cmp
pop
add
ror
loop
call
mov
add
mov
xchg
pop
mov
outs
xlat
mov
jmp
es
push
pop
cld
or
adc
adc
xor
loope
fnstsw
add
mov
mov
stos
xchg
mov
dec
xor
push
mov
fadd
cmc
das
pop
ret
mov
mov
and
movs
icebp
pop
cld
cmp
add
mov
pop
adc
jp
mov
jno
js
cmp
sbb
and
aaa
repz
int
push
push
jp
mov
fsubr
mov
mov
jo
inc
dec
push
retf
add
arpl
cmp
inc
xor
xor
ficom
and
aaa
(bad)
push
sbb
jg
jg
mov
je
out
dec
ins
pop
sahf
rol
xlat
xlat
mov
sar
cmp
cmp
mov
retf
sub
mov
ja
int
std
(bad)
rcr
and
cmc
dec
int
pop
or
dec
imul
adc
cmp
mov
dec
imul
sbb
lahf
pop
mov
into
repz
ins
sbb
xchg
retf
fidiv
push
int3
sub
inc
xchg
mov
add
ficomp
inc
mov
imul
jmp
mov
add
fstp
sub
xor
cmps
enter
and
outs
jecxz
and
test
imul
cmps
push
les
sub
and
add
mov
mov
jl
stc
std
sbb
inc
bound
cmp
rep
sub
push
fadd
and
stc
mov
js
xchg
mov
dec
lds
mov
adc
or
stos
int
sbb
jns
mov
pop
sub
not
sub
push
test
lods
inc
jmp
loop
sbb
or
je
das
jl
dec
das
js
or
mov
add
(bad)
pop
repnz
cld
nop
xor
jnp
ins
aas
add
mov
mov
test
rcl
fidiv
lahf
or
mov
mov
test
das
cld
mov
xor
data16
pop
or
or
and
popa
pop
in
sub
out
jns
scas
sbb
fcompp
push
mov
fsubr
sbb
pop
pop
aad
or
sti
inc
(bad)
sbb
popa
loope
std
pop
pusha
push
es
lock
inc
out
shl
mov
dec
xchg
repnz
pop
adc
cmp
sub
and
in
lea
mov
scas
jge
je
out
mov
add
hlt
push
cmp
jnp
(bad)
fnsave
lock
or
enter
(bad)
fcom
inc
push
in
jne
cmp
dec
popa
mov
mov
loop
(bad)
xor
ins
mov
mov
mov
adc
inc
mov
sub
pushf
stos
sti
inc
adc
pop
stc
push
adc
mov
or
int
push
inc
and
push
jne
sbb
ins
setbe
ficomp
in
push
ins
in
(bad)
fs
xchg
add
stos
es
cmp
push
aam
dec
mov
mov
xor
leave
xor
and
scas
mov
jmp
sbb
push
ja
mov
mov
ret
jge
ret
push
adc
push
adc
cmp
sub
pop
xor
cs
fwait
add
in
dec
mov
inc
stc
and
pusha
mov
das
mov
ror
xor
pop
mov
xchg
xchg
cs
mov
jmp
das
xchg
out
or
fbld
aas
dec
xchg
dec
mov
sahf
retf
rol
das
cli
std
stc
mov
inc
clc
movs
mov
add
mov
mov
sar
ins
xchg
je
jns
loop
jmp
imul
shl
sti
fcomp
sub
adc
inc
pop
(bad)
cmc
pop
mov
loope
mov
and
mov
fbld
mov
pop
sbb
cmp
mov
mov
sbb
push
ins
test
retf
push
mov
pusha
and
repz
aaa
adc
mov
mov
arpl
mov
sub
sbb
ror
inc
repnz
jle
jmp
retf
mov
movs
xchg
enter
mov
cdq
neg
inc
inc
push
retf
mov
inc
mov
sub
jge
(bad)
lds
xor
dec
sbb
pop
shl
add
imul
sbb
sti
cmp
or
into
xadd
popa
xchg
shr
shr
adc
retf
enter
push
dec
pop
clc
push
into
clc
cmp
clc
jbe
dec
push
dec
push
dec
pop
add
adc
lds
movs
adc
gs
call
xor
into
add
data16
fnsave
push
sti
push
dec
retf
push
ds
ins
mov
dec
test
cld
dec
push
mov
ror
mov
sbb
inc
dec
mov
dec
rol
gs
and
mov
jo
push
je
pop
popf
mov
push
fsubr
mov
push
adc
addr16
dec
xor
jo
and
test
ror
test
outs
adc
shl
mov
mov
xchg
test
rcr
pop
mov
in
pusha
mov
jbe
ret
adc
lods
leave
mov
mov
sbb
mul
dec
cmps
inc
iret
push
push
inc
sahf
inc
sbb
fwait
jecxz
in
cwde
sahf
mov
sbb
mov
sbb
mov
mov
and
jle
push
push
dec
out
in
push
hlt
nop
pusha
mov
cdq
sbb
add
gs
or
stc
mov
xchg
push
cmps
jmp
dec
xor
(bad)
test
jo
scas
dec
fidivr
pop
pop
fist
pop
dec
mov
sahf
pop
fs
and
pop
(bad)
retf
dec
imul
neg
pop
sub
pop
mov
xchg
adc
inc
arpl
dec
add
adc
jbe
push
mov
push
xor
add
sysret
fidivr
in
ds
mov
cdq
adc
pop
jmp
call
jge
loopne
fcomp
mov
scas
mov
mov
pop
mov
movs
or
dec
jle
jmp
sbb
xchg
fcmovnu
xchg
les
xor
repnz
pushf
mov
loope
pop
(bad)
jnp
dec
imul
push
sub
xchg
xchg
rcl
lods
push
(bad)
push
mov
mov
mov
in
or
cs
mov
(bad)
test
out
push
or
cmps
into
aas
mov
adc
aaa
das
fmul
xor
out
cmp
cmp
jecxz
ficomp
and
xlat
mov
jo
rcl
xor
jbe
fs
jle
sub
pop
rcl
dec
retf
adc
cmp
push
ja
sub
ins
sti
(bad)
pop
add
mov
pop
jle
mov
fabs
sbb
and
fwait
std
dec
stos
add
add
aam
(bad)
sbb
mov
dec
cmp
icebp
arpl
in
jbe
std
jmp
data16
movs
adc
mov
sub
cli
pop
movs
pop
jecxz
jmp
movs
ja
aaa
mov
mov
sub
stc
push
cmova
adc
adc
cs
mov
sahf
popa
sbb
out
pop
iret
test
pop
mov
out
add
loopne
outs
pusha
xchg
mov
xchg
nop
and
(bad)
mov
jecxz
cmp
das
adc
daa
and
pop
shl
enter
add
mov
pushf
ins
mov
or
pop
and
ins
loop
sub
dec
rcr
aam
xchg
mov
lods
addr16
jnp
inc
xor
in
mov
xchg
aam
into
popf
aam
sbb
cld
(bad)
sti
test
cmp
adc
adc
sub
test
xlat
rcl
test
push
inc
int3
and
mov
mov
icebp
(bad)
sub
xor
mov
fwait
movs
push
or
push
ins
cmp
xchg
test
pop
push
rcl
or
dec
mov
test
jge
jg
sbb
pop
cmps
inc
icebp
test
jl
rcl
pavgw
or
repz
(bad)
call
ss
(bad)
dec
mov
inc
lar
test
xchg
jp
jecxz
xchg
push
mov
jns
xchg
and
adc
in
ficom
inc
(bad)
xor
pop
cmp
inc
cmp
mov
movs
je
jle
pop
dec
imul
lahf
aam
xor
in
enter
or
cmp
ja
pop
pop
mov
repnz
icebp
cld
(bad)
inc
cmc
adc
jb
gs
adc
xchg
mov
add
loopne
sar
ror
mov
gs
add
add
cmps
xchg
leave
jl
dec
mov
stos
popa
lds
aas
and
xor
sbb
aas
sbb
jo
pop
pop
sub
or
xor
push
mov
mov
jns
cwde
ins
cli
inc
fnstsw
loope
mov
cli
dec
(bad)
jecxz
xor
es
(bad)
stos
jl
out
imul
mov
iret
(bad)
push
inc
imul
adc
(bad)
cmp
in
inc
call
bound
jo
or
mov
shl
or
xor
jae
pop
mov
js
xchg
mov
jb
sar
cmp
cld
and
stos
cmp
dec
(bad)
and
ret
std
sub
cmc
xchg
cmp
leave
pop
imul
fiadd
cmp
push
cli
sub
xor
dec
mov
dec
pop
adc
cwde
jge
sbb
and
push
in
ss
xchg
or
mov
test
mov
cmp
xchg
cmp
mov
shl
int3
or
sub
jge
dec
mul
sub
mov
adc
das
mov
call
jmp
jg
sbb
or
xor
scas
pop
xor
sbb
mov
pop
adc
cmp
fld
sub
add
cmp
stos
dec
mov
sti
inc
pop
xor
mov
lods
mov
test
xchg
fsub
es
call
sbb
dec
shl
lock
xchg
inc
mov
dec
ja
stc
bound
pop
or
mov
inc
test
movs
(bad)
jl
in
xor
fisttp
mov
movs
clc
mov
gs
xchg
cmp
adc
add
mov
cwde
jle
xchg
int3
daa
mov
adc
dec
fsubr
pop
pop
dec
adc
pop
dec
sbb
dec
xchg
inc
fwait
inc
or
ds
sbb
sbb
cmp
sub
cmps
mov
sar
add
mov
leave
mov
retf
xchg
xor
std
popa
sti
repnz
xchg
test
stos
jbe
cwde
mov
mov
cs
pop
lods
add
je
pop
mov
popf
mov
mov
js
and
fmul
das
mov
jl
dec
hlt
fist
cli
xlat
ja
and
lods
xor
or
mov
cmp
sahf
and
aam
into
adc
inc
add
mov
int
idiv
pop
inc
das
fisubr
(bad)
sbb
shl
mov
mov
(bad)
clc
and
pop
dec
cli
or
mov
dec
pop
push
pop
push
aas
cmps
jp
js
xor
xor
pop
mov
clc
clc
pop
sbb
test
and
adc
mov
pop
inc
pop
dec
add
pop
cmc
call
xchg
pop
or
mov
pop
test
xor
addr16
or
ret
and
(bad)
into
loop
sahf
and
sub
cmc
gs
cmc
mov
cdq
sti
in
dec
loope
cmp
(bad)
clc
push
lea
and
imul
pop
dec
adc
cmp
je
jge
mov
mov
cmp
and
gs
add
sbb
xchg
push
fadd
fidivr
cli
sub
jo
call
stos
repnz
sbb
scas
xchg
popf
and
pop
daa
pusha
in
push
test
adc
jns
mov
popf
sbb
stos
ins
dec
mov
arpl
fistp
xlat
mov
fwait
mov
scas
iret
mov
and
ret
or
add
stc
mov
stc
lods
push
mov
dec
and
xchg
mov
push
out
cmp
sub
xor
jle
xchg
aaa
pushf
repnz
(bad)
jge
out
cdq
add
inc
adc
into
push
inc
cwde
pand
out
out
sbb
jmp
rcl
fs
jp
dec
(bad)
ins
out
jmp
outs
xchg
dec
pusha
popa
int
lea
mov
inc
into
push
xor
mov
push
loopne
pop
ja
aaa
(bad)
dec
sub
mov
xor
in
xchg
xor
sbb
mov
sub
xchg
add
xchg
adc
icebp
push
sub
mov
loopne
push
dec
outs
or
imul
or
mov
loopne
mov
mov
dec
mov
(bad)
jae
push
mov
fdiv
push
cld
push
add
mov
clc
dec
ror
jmp
popf
retf
ret
bound
sbb
or
sbb
ret
dec
retf
pusha
pop
es
xchg
xchg
pusha
cmp
add
stos
std
mov
xor
inc
(bad)
push
pop
aam
xchg
push
into
push
jae
adc
retf
jmp
pop
iret
fsubrp
test
sub
jno
int3
mov
inc
sahf
xlat
sub
jo
add
inc
jmp
pop
pop
xchg
repz
mov
adc
(bad)
fcmovbe
and
ss
inc
cdq
sbb
fmul
or
cld
cld
jo
push
mov
test
dec
xlat
lds
icebp
pop
stos
movs
xchg
retf
and
dec
or
xchg
or
int3
pop
repz
and
mov
mov
xor
ins
stos
add
int3
int
dec
ror
adc
lock
cmps
lock
adc
pop
xor
inc
ss
(bad)
mov
cmp
(bad)
ss
adc
sub
test
lahf
in
add
repz
movs
jmp
jne
and
popf
ret
stos
mov
cwde
push
scas
push
icebp
pop
cmp
mov
sbb
mov
mov
out
push
cld
push
push
push
and
arpl
xor
jbe
xchg
loop
cmp
test
jl
mov
add
ror
inc
xchg
loope
loop
pop
sub
in
ret
mov
sbb
mov
sbb
ldmxcsr
mov
aam
movs
cmps
shr
in
popf
add
loope
stos
into
cwde
push
jle
adc
push
cld
push
sbb
inc
dec
inc
dec
sbb
fld
sbb
fs
mov
movs
fild
xor
and
add
sbb
(bad)
mov
xor
mov
mov
sar
sbb
dec
rol
in
ins
dec
retf
lods
sti
repz
jp
inc
inc
jae
add
in
mov
adc
mov
fxch
add
in
stc
and
jp
je
and
fdivr
fwait
jge
dec
fcom
sub
mov
retf
xchg
cli
(bad)
and
fwait
repz
pusha
dec
cmps
xor
push
adc
(bad)
push
les
mov
fstp
movs
mov
stos
push
aad
sub
addr16
pusha
jnp
cli
rol
arpl
fwait
push
xor
and
inc
push
out
pop
aas
test
push
adc
push
data16
sub
mov
stos
cmp
or
fwait
in
jb
cld
les
push
sahf
dec
push
(bad)
lidtd
inc
popf
movs
in
pop
jl
mov
xor
xchg
sbb
adc
out
and
mov
xchg
jmp
ret
xor
loopne
adc
ss
jo
and
repnz
sbb
dec
or
pusha
js
(bad)
cmps
popa
pop
mov
xchg
mov
or
jnp
loop
cli
enter
in
and
xchg
cld
xchg
fwait
test
mov
mov
int
adc
test
inc
loope
jle
mov
sti
mov
mov
cli
fsub
xchg
je
outs
adc
outs
adc
inc
pushf
fisub
xor
lock
repnz
pop
jecxz
mov
test
push
or
std
mov
sti
mov
ror
xor
jns
mov
shr
aam
es
push
hlt
vmaxss
in
lock
mov
enter
cmp
adc
movs
sbb
imul
bound
out
sub
(bad)
in
adc
pop
pushf
loopne
retf
xlat
jp
movs
mov
popf
jecxz
fcomp
jo
shl
out
popa
dec
mov
popf
dec
xchg
test
or
loopne
sbb
push
test
xchg
push
adc
movs
and
movs
shr
pop
ss
sti
cmp
add
xchg
mov
rcr
pop
in
push
mov
outs
push
enter
retf
std
hlt
or
jo
xchg
cmp
push
test
je
lahf
fisub
fwait
icebp
pop
je
repnz
inc
retf
jbe
enter
out
pop
xor
mov
jecxz
lock
xor
test
dec
icebp
sub
mov
mov
je
rol
cmps
or
cmp
sbb
add
loopne
or
leave
and
outs
xchg
idiv
js
xlat
push
xchg
and
pusha
cmp
cld
int
add
jle
xchg
jbe
mov
arpl
sahf
fs
out
fisttp
cmp
jnp
cmp
inc
gs
mov
ins
mov
push
xor
mov
sahf
neg
cmp
push
out
pusha
shl
mov
mov
mov
xor
or
adc
adc
dec
sub
loope
cmp
xchg
push
popa
adc
arpl
push
dec
fidivr
sub
sub
int
mov
mov
leave
out
test
jecxz
fnstcw
inc
aas
inc
sub
xchg
push
jl
mov
scas
sbb
jae
ret
adc
js
adc
sahf
jb
fwait
add
outs
push
ret
pusha
pusha
sub
pop
repz
push
neg
call
repnz
clc
ror
ins
sub
(bad)
inc
mov
adc
jns
dec
daa
arpl
in
mov
jmp
dec
xchg
jg
or
mov
das
aam
arpl
fwait
mov
movs
retf
out
cmp
add
adc
push
sub
lahf
sub
retf
movs
mov
cmp
ins
inc
cmp
test
mov
xor
push
sahf
aas
scas
xchg
inc
push
jae
data16
out
add
fnclex
test
pop
sbb
sub
mov
xor
jo
aas
das
pop
dec
cmc
sbb
mov
retf
nop
icebp
mov
and
ja
sbb
lock
cwde
out
clc
cmps
neg
sub
int3
sub
dec
stos
shl
cmp
sub
xchg
adc
and
leave
inc
xchg
out
mov
cmp
mov
loope
div
retf
dec
mov
movq
dec
ror
(bad)
mov
inc
ficom
sub
sbb
idiv
lods
sbb
vandps
shl
or
mov
(bad)
cli
(bad)
rep
cmc
fucomi
sub
fcmovb
retf
int
inc
or
jecxz
cmp
or
idiv
ins
sbb
int3
retf
xchg
dec
xchg
fwait
cdq
xor
push
test
movs
test
jge
das
inc
xor
mul
xchg
int3
sbb
or
jecxz
jns
lods
sub
js
or
je
mov
test
stos
adc
cmpps
ret
push
add
push
clc
jmp
(bad)
out
pop
data16
xsha1
cmps
iret
xchg
mov
scas
icebp
(bad)
inc
or
and
or
or
movs
mov
sub
xchg
xchg
bound
jg
or
enter
pop
ret
test
push
cmp
in
pop
fiadd
lds
rcl
adc
pop
add
inc
mov
and
dec
jae
mov
mov
(bad)
dec
sbb
lock
cmps
in
push
nop
ret
gs
lods
cld
dec
cdq
adc
nop
clc
and
test
dec
mov
retf
out
and
jne
xchg
mov
cmps
fisub
jecxz
(bad)
outs
cmp
retf
fcmovne
pop
jle
jno
mov
outs
ds
movs
pop
call
inc
mov
mov
rcl
mov
sar
test
jnp
mov
add
add
mov
add
push
leave
and
lahf
test
mov
lock
pop
cmp
inc
adc
jno
jmp
xchg
cli
fs
inc
pop
fistp
(bad)
push
push
(bad)
retf
pop
(bad)
mov
sbb
pop
call
push
iret
aam
or
outs
imul
(bad)
js
and
loope
xor
add
push
sbb
fistp
push
ins
fidivr
add
or
mov
jle
(bad)
rcr
iret
push
add
jmp
ficom
dec
lea
inc
push
pop
call
(bad)
and
clc
inc
mov
sbb
mov
pushf
ret
or
and
dec
std
or
inc
xor
ja
jns
pop
mov
in
add
lahf
mov
jmp
(bad)
(bad)
sbb
cmp
test
out
imul
lods
pop
mov
into
mov
sbb
(bad)
adc
mov
xchg
or
xor
dec
in
fbstp
popa
scas
mov
push
lods
std
mov
dec
inc
in
(bad)
out
inc
and
fbstp
daa
xor
sar
fiadd
dec
(bad)
xor
xchg
mov
dec
out
stos
aam
fld
jo
bound
std
and
sti
imul
adc
mov
ja
sbb
ins
pop
neg
and
xor
popa
adc
cmp
add
mov
jae
rcl
lahf
add
cmp
and
mov
xor
fmul
mov
add
mov
cmp
int3
xchg
push
sub
stc
ror
mov
in
inc
aas
fbld
pop
mov
mov
aam
inc
adc
jo
(bad)
mov
inc
lahf
call
push
xchg
cwde
fsubr
ret
scas
retf
les
jg
stc
cs
fld
mov
push
test
lea
dec
jmp
(bad)
push
pop
xor
and
aas
stos
outs
mov
fst
je
js
mov
sbb
fnsave
div
cmc
xchg
and
std
ins
retf
ds
sbb
fucomip
cdq
aad
sub
mov
ficom
aaa
add
or
mov
in
out
ret
gs
add
mov
add
or
mov
mov
add
aad
cmp
arpl
xchg
bound
dec
pop
pop
pop
xor
dec
sbb
adc
adc
push
adc
test
movs
xchg
cmc
cmp
pop
cmp
seto
sub
into
mov
mov
jbe
neg
xor
add
in
mov
xor
dec
rol
(bad)
push
sbb
or
jnp
xchg
mov
mov
outs
imul
ins
loop
mov
or
daa
inc
jmp
jmp
ins
mov
jl
add
inc
dec
pop
jne
mov
sub
xor
mov
pop
je
data16
jp
adc
xchg
pop
mov
push
mov
xchg
jnp
cmp
in
jmp
popa
mov
(bad)
xchg
sbb
add
popf
add
pop
fsub
pop
xchg
jp
pop
mov
mov
in
in
pop
add
ja
fcomp
and
daa
cmp
pushf
sub
sub
sub
pop
sbb
pop
pop
shr
pop
test
scas
adc
imul
mov
lahf
mov
and
or
cld
(bad)
test
add
xlat
push
add
(bad)
mov
(bad)
cmp
rcl
aas
lock
(bad)
(bad)
imul
arpl
jmp
test
jge
cmc
jns
leave
jp
(bad)
fdiv
pop
out
cmp
and
pop
dec
das
xor
retf
out
sti
sub
sbb
adc
enter
loopne
inc
xchg
pop
push
mov
mov
sahf
es
fbld
movs
out
mov
clc
js
pop
mov
hlt
shl
aam
enter
push
repnz
push
mov
sbb
fwait
mov
dec
fnstenv
fild
aad
sbb
sub
pop
jne
cmp
bound
das
push
jns
gs
div
fucom
test
adc
add
fisttp
cmps
lahf
ret
mov
in
aaa
jmp
mov
or
push
cld
dec
push
loopne
loopne
out
cmps
push
addr16
ret
dec
repz
adc
push
mov
adc
aad
loope
in
imul
dec
in
cli
inc
lock
dec
test
jl
ds
aad
pushf
inc
in
fisttp
ds
lock
mov
mov
jge
or
movs
rcl
dec
gs
pop
pop
mov
stc
enter
leave
xor
mov
(bad)
cmp
fwait
jo
loop
jns
and
cmp
loop
dec
push
mov
inc
inc
shr
jle
push
aam
fwait
inc
jns
pusha
push
test
adc
inc
add
cmps
popa
adc
xor
lea
(bad)
lods
jmp
cmp
test
jg
outs
mov
sub
add
icebp
mov
es
xor
out
fs
into
pop
inc
nop
nop
popa
cdq
lods
mov
pop
mov
mov
pop
mov
mov
mov
push
mov
jnp
retf
cmps
mov
jne
out
lods
dec
bound
mov
mov
je
mov
movs
pop
rcr
test
inc
mov
sub
mov
pop
call
sub
loopne
lods
dec
or
pop
dec
jg
jge
in
xchg
scas
mov
sbb
retf
int3
sbb
test
add
fs
stos
mov
data16
lods
in
(bad)
fdiv
fcomp
xchg
ss
mov
mov
lock
inc
mov
ror
shl
rol
and
ror
mov
sub
fcom
aam
mov
and
cld
push
push
sbb
idiv
mov
pop
xchg
push
xchg
stos
sub
xor
lahf
and
adc
xchg
jb
fs
push
push
sub
clc
add
cwde
lea
xchg
mov
mov
and
mov
jb
sub
xchg
pusha
loopne
xor
jae
dec
in
inc
movs
add
xlat
dec
cmp
sahf
dec
outs
jle
and
fist
cmp
es
sti
mov
dec
cmp
pop
std
xor
call
aas
mov
in
mov
clc
nop
push
push
fdivr
leave
push
xlat
sub
add
mov
dec
adc
add
and
pop
cmps
stc
push
mov
rep
inc
repz
hlt
add
cmp
stc
out
add
sub
sar
cld
add
std
sti
add
and
and
test
fwait
mov
mov
jg
movs
mov
sahf
xor
into
xor
popf
push
add
mov
jp
add
pop
or
xchg
outs
jnp
(bad)
je
arpl
xchg
stc
add
icebp
shr
in
mov
push
xlat
clc
sbb
add
mov
cmps
or
addr16
nop
and
and
rol
and
repz
lock
sbb
in
shl
mov
test
inc
dec
jmp
and
push
outs
leave
sti
xchg
pop
xor
sbb
mov
mov
(bad)
jmp
add
or
xchg
jnp
ins
les
push
fcmovnbe
loope
push
shr
or
cmp
sbb
dec
cwde
(bad)
mov
jb
addr16
leave
mov
clc
cmp
jmp
xlat
sti
clc
xchg
repnz
jmp
jae
push
jecxz
pop
mov
retf
pop
mov
retf
test
sbb
cld
inc
repz
push
jecxz
cmp
add
sbb
dec
xorps
jp
adc
jno
inc
add
xor
pop
push
xor
mov
push
cs
xchg
fwait
daa
or
leave
pop
mov
stos
jne
xchg
lods
fimul
rcl
add
mov
mov
xor
js
fidivr
cmp
inc
js
fstp
mov
imul
das
sub
cmp
jno
mov
and
imul
(bad)
mov
loope
mov
(bad)
fdivr
sub
xchg
cld
or
les
retf
jmp
jmp
int
adc
inc
fs
sahf
mov
xadd
sbb
fld
test
jge
scas
dec
ja
mov
cmc
popf
leave
call
repz
int
aaa
xchg
mov
xchg
sub
mov
push
mov
aad
jmp
jmp
in
adc
aas
in
hlt
mov
sbb
or
enter
repz
jmp
push
push
out
fwait
sahf
iret
inc
cmc
inc
in
pusha
aam
cmp
(bad)
inc
fistp
dec
call
pop
jl
sbb
cmp
stos
out
xchg
fwait
jg
jecxz
cwde
icebp
mov
scas
push
xor
push
mov
lds
and
mov
xchg
call
out
ret
repz
shr
adc
jo
sub
icebp
sub
call
mov
stc
mov
fwait
adc
pop
jmp
cld
dec
imul
(bad)
and
sub
jns
out
clc
in
out
stos
jno
pop
test
subps
xchg
add
inc
retf
lahf
into
pop
mov
fdivr
jns
cld
sub
push
stos
mov
test
jne
cli
mov
sahf
ret
and
icebp
sbb
test
movs
push
mov
mov
cmp
rol
pop
(bad)
pop
pop
xor
fstp
cmp
or
in
and
adc
xor
call
lods
sahf
sahf
add
xchg
sub
mov
and
repz
call
scas
test
push
inc
adc
xor
es
jle
cdq
add
out
std
(bad)
retf
(bad)
(bad)
ret
pushf
xchg
mov
loop
cwde
cmp
mov
gs
xor
loopne
mov
icebp
(bad)
lds
mov
or
mov
sub
jl
mov
push
jns
mov
arpl
xlat
inc
xor
sbb
lods
mov
test
xchg
mov
add
in
repnz
jo
xchg
or
shl
aaa
pusha
adc
cmps
mov
scas
push
push
cmp
fisub
pop
cmps
scas
dec
js
jmp
mov
mov
mov
shl
or
fwait
mov
out
jp
jl
dec
mov
gs
neg
inc
xor
test
lea
ror
or
cmp
dec
loope
jne
ja
sbb
sqrtps
(bad)
fstp
test
cmp
sub
pop
aas
lahf
mov
cmp
enter
mov
push
or
pusha
ret
mov
call
(bad)
fst
or
push
push
aaa
divps
push
jns
mov
push
adc
dec
jnp
dec
mov
arpl
jne
iret
cs
movs
(bad)
(bad)
retf
mov
adc
setl
(bad)
mov
pop
and
adc
ret
imul
(bad)
xchg
pop
mov
inc
push
xchg
add
sbb
cmp
out
dec
sti
add
mov
les
pop
fstp
mov
mov
pop
fcomp
jecxz
mov
loopne
test
dec
imul
and
dec
cmp
in
or
sub
cmp
(bad)
pop
sub
sti
ds
lods
fmul
dec
and
repnz
push
and
ret
les
jae
xor
retf
cmp
mov
popf
in
(bad)
dec
pop
inc
and
cli
repnz
mov
ins
inc
xlat
xor
pop
pop
xor
adc
xlat
mov
pop
imul
xchg
retf
into
and
movs
retf
or
jge
repz
ds
xchg
xor
and
imul
xlat
pop
out
es
xor
inc
jmp
xor
sbb
hlt
pop
gs
(bad)
sahf
sub
icebp
iret
push
xlat
fisubr
in
dec
push
in
pushf
mov
(bad)
adc
fst
push
fwait
and
lds
std
shl
enter
mov
pop
jae
das
loopne
and
pop
ficom
(bad)
xchg
aad
push
mov
shl
or
pop
mov
inc
stc
fild
sbb
push
jl
(bad)
sub
sbb
in
es
movs
sub
fxch
xchg
adc
add
out
stos
sar
cmp
(bad)
push
or
pop
pop
retf
movs
xchg
clc
in
adc
(bad)
mov
push
retf
retf
add
or
out
retf
sbb
mov
dec
cs
add
fnsave
sub
cmp
loope
(bad)
jo
(bad)
mov
jmp
mov
test
(bad)
xchg
jle
or
call
sahf
xchg
cmp
stos
xchg
ds
clc
cld
ins
call
xor
adc
fdiv
jge
jb
xor
or
mov
movs
cdq
and
ss
mov
outs
pop
add
out
in
sbb
sub
lahf
int3
xor
daa
add
mov
mov
inc
movs
int3
mov
push
xor
cld
push
cli
cdq
data16
mov
or
mov
cdq
jb
mov
std
xchg
sub
xor
add
loop
loop
mov
aad
sub
or
dec
and
cmc
leave
call
add
lock
mov
fcom
push
push
clc
xor
add
jns
fisub
pop
ja
cmc
fiadd
(bad)
scas
xchg
dec
jmp
and
es
imul
inc
adc
fnstsw
cmp
icebp
adc
sub
cmc
and
into
(bad)
xor
xchg
shl
sbb
sbb
out
gs
mov
test
test
scas
cmp
mov
loope
xor
dec
cmp
movs
push
jmp
push
fcmove
push
adc
pop
mov
mov
xor
aad
jbe
ret
rol
and
pop
mov
outs
push
adc
and
cli
pop
arpl
aad
mov
xchg
call
cmps
cmp
dec
and
mov
mov
mov
fs
out
mov
pop
(bad)
arpl
xchg
aas
lea
add
mov
cmp
scas
jo
dec
lods
cmp
push
out
addr16
test
add
in
xlat
or
cld
sbb
mov
enter
out
clc
fcmovu
jmp
popf
mov
cmps
fs
mov
xor
adc
outs
dec
cmps
js
jmp
repz
fwait
inc
es
jne
leave
imul
push
pop
jge
aas
loop
leave
mov
sub
es
cmc
icebp
loop
out
cmp
mov
rcl
jnp
ret
push
mov
gs
fld
test
or
jp
dec
mov
inc
and
(bad)
mov
cmp
jne
adc
and
pop
das
xchg
inc
pop
inc
add
sbb
fcomp
repz
mov
xor
ret
or
rol
lods
movs
push
imul
lods
jmp
xlat
test
retf
scas
mov
retf
fcmovnb
push
enter
loop
scas
cmp
arpl
cs
push
cmps
and
dec
and
aad
push
mov
ins
mov
leave
jbe
dec
mov
stos
aas
fmul
shl
xlat
jae
dec
call
addr16
(bad)
loopne
pop
mov
inc
xor
popa
dec
std
sub
lea
and
push
mov
inc
and
aad
mov
sbb
fwait
out
cmc
test
lods
retf
push
xchg
push
jmp
ds
je
xchg
mov
lods
(bad)
loope
jo
pop
cs
pop
xchg
jae
or
xchg
cmp
cwde
xor
lds
inc
pop
xchg
ins
ja
lea
mov
and
test
ins
inc
xchg
pop
out
mov
fcom
je
jb
jbe
cmp
js
jle
jg
repz
and
and
pop
add
adc
add
or
(bad)
in
mov
cld
add
xchg
lods
ja
imul
or
mov
adc
adc
jle
in
or
daa
cld
retf
xor
pop
sahf
int
enter
icebp
push
jae
or
test
ja
out
call
mov
ret
cmp
mov
je
test
push
and
popf
adc
dec
shr
(bad)
fidiv
xor
sub
movs
aad
mov
movs
cmp
cmp
push
arpl
inc
test
(bad)
addr16
push
cmp
and
inc
test
call
dec
push
bnd
inc
test
lds
hlt
test
(bad)
and
cmp
cmp
retf
adc
aaa
repnz
sub
mov
std
shl
neg
push
mov
or
stos
inc
cmp
retf
call
jae
fnstsw
mov
adc
xor
mov
add
jnp
ja
adc
push
mov
and
neg
or
or
pop
jne
cmp
adc
jnp
sbb
faddp
movs
push
lods
dec
inc
fcmovnbe
and
sahf
pusha
adc
cmc
aas
mov
inc
jnp
call
mov
xchg
clc
rcl
sbb
sar
jp
mov
movs
lods
sbb
sbb
pop
xlat
leave
int
jle
inc
pushf
cli
mov
pop
aam
lods
mov
mov
jle
fcomp
call
in
push
mov
push
je
add
(bad)
not
fild
enter
rol
mov
push
fcomp
addr16
adc
push
inc
mov
inc
jbe
inc
jl
sub
(bad)
das
adc
adc
mov
push
or
and
or
int
push
adc
xor
push
cmp
call
pop
jmp
inc
jnp
std
dec
cld
jg
fmul
jmp
dec
adc
scas
out
xor
adc
call
stos
mov
mov
je
mov
push
test
jae
jne
test
adc
call
jl
and
jl
mov
gs
int3
inc
add
xchg
outs
push
mov
(bad)
xor
adc
in
(bad)
xchg
in
inc
mov
aaa
popa
mov
mov
sahf
or
jp
std
mov
pop
and
jnp
icebp
sbb
fsubp
jb
aaa
dec
sar
pop
jbe
sub
ins
aam
js
xchg
es
inc
stc
xlat
out
shr
cmc
or
loop
jle
pop
push
iret
movs
jge
std
cmp
and
push
mov
rep
or
xlat
jne
sub
das
test
xor
out
lds
or
push
je
pop
mov
cmps
push
repz
ja
fiadd
xchg
adc
adc
imul
xor
and
test
xchg
push
cmps
inc
lds
inc
call
or
(bad)
fmul
sar
ret
jmp
rol
out
pop
adc
mov
shl
repnz
sbb
cmp
(bad)
pop
fcmovnb
inc
sbb
sbb
dec
or
push
mov
cli
jb
je
jmp
or
imul
sub
cmp
ja
sub
test
(bad)
sbb
xchg
out
or
fisub
pop
dec
inc
mov
in
mov
push
mov
mov
jo
outs
xchg
xchg
pop
adc
pusha
out
push
or
mov
mov
pop
cmp
adc
test
bnd
mov
or
fwait
aaa
(bad)
aam
cmps
inc
pop
icebp
ds
test
push
xchg
stos
adc
lea
into
add
add
neg
rol
xchg
jo
jmp
pop
(bad)
call
jb
data16
push
shr
or
adc
outs
stos
scas
and
pop
sub
push
xchg
xor
add
outs
scas
es
cwde
push
dec
xor
cmc
mov
mov
xchg
add
mov
and
popa
and
add
inc
aaa
cmp
mov
or
iret
push
sub
adc
pop
sub
dec
(bad)
out
aas
sub
xchg
lea
cmp
sub
xor
xchg
jbe
inc
loopne
test
mov
fisubr
addr16
out
cmps
fiadd
xor
add
xchg
jo
sub
bound
shl
adc
adc
or
stos
push
scas
mov
pop
(bad)
inc
aas
cmp
mov
movs
rcl
xchg
inc
push
sbb
retf
repz
js
in
jge
(bad)
das
cwde
out
fidiv
xchg
lds
cmp
jmp
xchg
not
fistp
dec
push
js
xor
add
cmc
jp
jno
ins
jbe
mov
lea
lods
test
aas
push
hlt
dec
mov
movups
jno
mov
cmps
xchg
mov
pop
inc
dec
mov
jo
mov
jmp
or
add
push
or
push
add
je
mov
jecxz
aaa
enter
fsubp
xor
inc
mov
cmp
test
cli
xchg
adc
pusha
or
add
mov
(bad)
in
outs
xchg
pusha
repz
sar
pop
cmp
sbb
(bad)
aas
icebp
adc
test
dec
mov
mov
cmp
enter
mov
repnz
mov
push
int3
mov
leave
add
inc
adc
jg
xchg
inc
test
jnp
(bad)
sub
xchg
xor
and
xor
cmp
push
inc
add
jbe
sub
idiv
or
pusha
xchg
ret
sti
pop
imul
sub
dec
fyl2xp1
out
sbb
adc
cmp
popa
mov
call
popf
std
out
dec
jmp
jo
cmc
sbb
das
lods
mov
pusha
push
sti
not
dec
mov
and
mov
jne
call
daa
push
xchg
cmp
(bad)
loop
xchg
int
mov
lea
sub
sar
arpl
dec
lock
nop
test
and
leave
inc
jne
or
jge
push
pop
imul
es
iret
pop
push
mov
xchg
sbb
sub
retf
movs
and
pop
sbb
leave
push
push
sub
outs
mov
xor
hlt
jle
or
inc
es
sub
jg
push
sub
add
sbb
outs
ss
test
fldcw
and
jmp
sbb
cmp
bnd
jmp
cdq
cmp
sbb
bound
dec
jnp
pushf
retf
add
rcr
pusha
xchg
aas
(bad)
retf
icebp
test
aam
add
cmps
dec
inc
push
push
push
mov
cld
jno
push
test
cmp
xor
(bad)
xchg
push
rcl
into
ins
stos
mov
xor
lods
push
mov
hlt
and
test
pusha
pop
fdivrp
(bad)
fs
cwde
pop
fdivr
mov
dec
ret
mov
fiadd
lods
xchg
pop
dec
cmps
pushf
call
pop
pushf
add
add
rcr
jmp
xor
add
adc
loopne
nop
ret
stc
test
cmp
aad
sahf
add
dec
addr16
out
cmp
aas
cmp
ror
xor
mov
mov
xor
or
outs
mov
jge
jle
or
int3
jmp
mov
mov
sbb
or
sbb
stc
sar
push
pop
mov
int3
mov
sub
ret
dec
adc
pop
into
loope
sub
cld
lahf
lods
mov
and
out
and
ins
add
fnstsw
out
adc
adc
dec
or
inc
js
shr
pop
js
pop
mov
cli
in
(bad)
icebp
mov
push
fsub
test
gs
test
mov
jecxz
mov
jge
jbe
scas
les
movs
sub
in
pushf
neg
dec
adc
mov
sti
scas
popf
or
xchg
add
loope
xchg
xlat
and
sbb
cmp
pushf
int3
jmp
cld
xchg
add
dec
jp
scas
aad
mov
jne
test
aaa
into
jae
dec
sbb
int3
pop
pop
jmp
mov
mov
jmp
sbb
or
sub
ror
cdq
push
dec
add
dec
and
sahf
or
rcr
fimul
and
pop
push
xchg
outs
inc
cmp
test
dec
outs
out
call
mov
or
dec
data16
cwde
test
adc
sub
rcr
lea
(bad)
pop
dec
repz
dec
sbb
fiadd
xor
sbb
inc
shr
pop
std
leave
xor
cmp
in
push
lods
jb
icebp
xor
pop
pusha
cdq
aad
adc
xchg
mov
mov
jl
adc
adc
mov
mov
cmp
pop
fsincos
or
pop
push
lds
jle
scas
adc
fistp
imul
xor
(bad)
jnp
adc
xor
push
rcr
and
xchg
ss
xchg
and
hlt
arpl
pop
or
dec
jnp
(bad)
and
mov
mov
sahf
call
dec
or
mov
movs
test
xor
std
adc
or
dec
xchg
stos
push
add
cmp
mov
or
jmp
and
lock
push
push
shr
aas
imul
adc
add
scas
mov
jp
pop
jns
stos
push
adc
call
outs
pop
ret
cld
pop
std
shl
test
xchg
ror
xor
and
shl
xchg
shl
ins
jns
and
sti
dec
inc
sbb
adc
js
xchg
test
sub
mov
cmps
or
(bad)
sti
inc
nop
jmp
loop
je
pop
lahf
mov
shl
clc
add
lea
bound
mov
or
mov
mov
xor
sti
pop
iret
adc
pop
or
js
dec
add
out
stos
dec
test
enter
repnz
or
pop
bound
push
fmul
out
and
mov
scas
fmul
sub
int3
cmp
jl
(bad)
mov
mov
mov
mov
jle
and
xchg
lds
mov
stos
inc
push
daa
inc
mov
xchg
push
(bad)
adc
cmps
in
xchg
push
pop
xchg
pop
ss
stc
pop
aam
popf
mov
cdq
push
popa
into
jg
mov
pop
test
ins
jmp
retf
data16
popf
cld
outs
jae
sbb
scas
rcr
nop
inc
jge
into
push
mov
xor
pop
test
shl
dec
enter
and
shl
in
fcomp
mov
and
pop
mov
out
mov
sbb
xlat
js
cmp
in
push
and
dec
cmp
emms
fcmovnbe
mov
mov
outs
scas
icebp
iret
ins
(bad)
cmp
sub
or
pop
cld
mov
mov
popa
fs
mov
push
xor
div
add
imul
xchg
xor
jmp
aad
sar
mov
add
jge
push
jne
push
and
pop
xchg
int3
cmp
cmp
out
test
xchg
into
xchg
mov
cmps
out
xchg
sub
pop
lock
cmp
pushf
fwait
pop
lahf
(bad)
dec
sub
mov
mov
sub
dec
cli
aaa
dec
push
cmp
push
repz
arpl
aad
sub
clc
push
outs
test
xor
sar
aas
into
arpl
lahf
scas
retf
inc
das
bound
push
mov
cs
popa
test
sbb
cmp
pop
add
lahf
add
lods
bound
push
jp
in
pusha
mov
ins
push
xor
mov
cmp
and
add
faddp
push
ss
xchg
je
push
or
out
mov
xchg
and
cmp
cmp
xchg
jmp
ret
sbb
adc
xor
inc
pop
push
test
mov
ss
in
sub
clc
lods
cmp
int
jmp
push
sti
cwde
rcl
into
scas
inc
stos
ds
popa
popa
imul
inc
pop
and
xlat
clc
cmps
mov
jae
or
inc
fucomip
sub
inc
stos
fnsave
clc
or
sub
iret
rep
test
xor
scas
add
call
fwait
mov
icebp
push
or
lahf
mov
pop
nop
sbb
movs
inc
in
xchg
push
fcomi
adc
ins
xchg
and
adc
cmps
jle
push
shr
and
inc
leave
inc
jo
stos
add
push
aam
imul
mov
fs
mov
adc
and
rol
or
lahf
aad
cmps
in
rcr
jecxz
push
cmp
mov
xchg
inc
push
lock
mov
xlat
or
adc
mov
push
push
aad
lock
scas
jns
scas
sub
and
scas
cwde
add
jmp
push
push
push
movs
mov
xchg
fcom
retf
jnp
out
dec
xchg
inc
pop
int
mov
les
xchg
xor
imul
les
dec
rol
dec
push
leave
add
push
repz
das
std
push
mov
fldenv
mov
mov
js
jbe
cli
pop
ins
test
(bad)
dec
(bad)
jne
aam
jne
add
push
inc
adc
aaa
cmp
shl
fistp
jecxz
mov
das
scas
and
call
xchg
push
sub
xlat
xchg
gs
inc
mov
xchg
retf
inc
sub
adc
test
dec
jecxz
mov
inc
mov
ret
jb
rcl
and
icebp
xor
mov
stos
scas
pop
fiadd
mov
aam
leave
jno
imul
or
inc
stos
mov
lds
sbb
out
jnp
and
adc
sub
pop
fst
jg
lods
call
push
mov
fdivr
enter
movs
cmp
jge
jg
or
sbb
pushf
in
std
xchg
lea
les
mov
(bad)
xchg
mov
pop
push
jae
fadd
sbb
jo
push
dec
mov
nop
or
mov
lea
add
push
cmp
test
or
jo
sub
fiadd
fcom
cld
inc
xchg
in
mov
dec
loope
sub
adc
adc
lods
lock
mov
add
xchg
mov
movs
leave
xor
adc
jecxz
jo
fisub
cmp
add
movs
clc
sub
imul
jg
mov
jmp
and
pop
and
bound
jns
call
cmc
ret
or
enter
popa
jmp
xchg
pop
mov
fiadd
in
push
jmp
or
mov
dec
fsub
loop
outs
in
jl
dec
sub
nop
shl
jmp
rcl
mov
pop
pop
ror
pop
rol
xor
lods
cmp
sbb
sbb
sub
loope
dec
mov
out
retf
pop
pusha
retf
icebp
add
aas
addr16
and
sbb
and
fmul
outs
pop
rcl
mov
les
sar
jle
and
repnz
pop
js
mov
fisttp
xor
scas
les
mov
pop
clc
cmps
call
and
je
lods
arpl
xor
sbb
lods
adc
jne
mov
or
jp
in
dec
inc
(bad)
imul
jae
push
rep
adc
fisttp
into
ficomp
ror
into
adc
dec
fnsave
adc
inc
pusha
movs
lea
lock
xor
stos
retf
mov
leave
mov
inc
mov
aas
mov
and
daa
in
cmp
mov
mov
inc
imul
dec
pushf
fldenv
inc
xor
xchg
fld
cdq
mov
mov
cmp
into
xchg
pop
paddq
add
add
mov
xor
repnz
adc
imul
lahf
jge
frstor
push
mov
(bad)
xchg
jg
cwde
mov
inc
dec
mov
adc
jmp
sahf
es
mov
es
gs
xchg
cs
xor
adc
lahf
lods
fisubr
dec
jb
(bad)
push
dec
pusha
movs
mov
iret
sub
iret
or
lock
fsub
scas
adc
ss
es
(bad)
and
frstor
push
lods
cmp
and
mov
adc
stos
iret
dec
cmp
xlat
(bad)
loop
mov
pop
test
in
fldenv
dec
xlat
or
fldcw
pop
push
neg
jo
jp
mov
dec
cmp
test
retf
out
sub
enter
push
pop
das
fs
cmp
mov
sub
mov
mov
in
pop
cmp
adc
cmp
cli
lds
(bad)
and
jle
in
dec
hlt
cmc
mov
jle
adc
add
bswap
cmp
pushf
enter
adc
mov
sbb
mov
inc
xchg
mov
push
mov
imul
mov
outs
xlat
pop
cmp
and
mov
aad
or
out
push
add
dec
out
stc
ss
(bad)
in
sbb
xchg
loope
or
adc
dec
pop
mov
push
aas
in
mov
ja
pop
push
test
pop
shl
icebp
fiadd
retf
test
pushf
fisubr
cli
xchg
pop
push
shl
shl
gs
lahf
jle
xor
xor
loopne
or
cmp
xchg
mov
mov
or
bndstx
jmp
mov
lock
stc
addr16
adc
add
mov
jb
test
pop
mov
aas
fisubr
cs
jae
leave
adc
push
lods
jecxz
jae
mov
mov
(bad)
addr16
test
dec
out
loope
loop
mov
imul
test
shl
push
xchg
push
mov
xchg
adc
pusha
pop
jne
jp
jne
jno
add
lahf
inc
not
sti
cmp
add
and
or
push
and
sbb
mov
and
mov
mov
sub
cwde
jp
sbb
mov
or
pop
outs
and
mov
jmp
jae
daa
sub
mov
mov
ds
sbb
jae
lods
popa
scas
jle
push
out
es
repz
add
ss
inc
sar
and
outs
dec
ret
cmc
icebp
mov
out
sbb
inc
scas
movs
test
pushf
out
stc
sbb
and
ss
and
mov
xchg
rcl
ins
leave
cdq
lods
iret
jmp
cli
dec
xchg
test
push
loope
cld
dec
dec
adc
sbb
adc
retf
in
push
sub
mov
inc
out
jp
ja
movlps
xor
add
outs
(bad)
lds
adc
xlat
std
(bad)
and
mov
aam
scas
jecxz
xor
push
mov
es
push
mov
mov
mov
(bad)
ins
sbb
pop
int
movs
arpl
out
and
repnz
bswap
mov
add
fdiv
add
push
vmaxps
xor
cmc
fsub
add
dec
push
mov
inc
lahf
(bad)
xchg
outs
lods
sbb
data16
push
movs
xor
(bad)
jae
or
lods
retf
fscale
inc
pop
in
scas
mov
call
jge
fldenv
lahf
inc
cmp
inc
add
xchg
cmps
sub
ins
cmc
cmc
mov
and
rol
push
cwde
(bad)
xchg
adc
js
sahf
or
pop
xor
jb
or
mov
add
sahf
or
in
mov
out
push
mov
outs
pop
cli
fisub
dec
out
jle
cmp
loope
xchg
adc
mov
push
cwde
popf
lods
stc
cdq
mov
mov
and
clc
aaa
cli
(bad)
mov
ss
rol
imul
out
jb
in
add
mov
mov
sbb
popf
mov
idiv
lock
lahf
(bad)
nop
mov
popa
jmp
cli
pusha
leave
dec
movs
mov
jne
test
cli
xor
add
lea
out
stos
loopne
dec
(bad)
loop
sub
add
test
mov
rcl
add
xchg
jmp
test
fld
mov
inc
xchg
add
xchg
dec
or
jnp
push
enter
cmp
add
sub
inc
or
sub
mov
popa
arpl
inc
xchg
jl
jnp
sahf
popf
sar
mov
jle
loop
mov
sub
aaa
ja
iret
mov
int
jmp
and
xchg
pop
jg
xchg
cdq
or
adc
or
jbe
ret
lea
jmp
je
add
pop
adc
out
aas
(bad)
(bad)
(bad)
imul
ins
shr
into
rol
inc
out
pop
rol
sbb
jg
or
(bad)
xchg
pop
imul
loop
test
aam
push
inc
test
jno
mov
xor
je
xchg
es
and
push
(bad)
iret
xchg
mov
pop
loopne
mov
push
or
pop
bound
movs
mov
stos
mov
push
mov
pop
sbb
jle
and
or
mov
and
pop
pop
xor
mov
pop
shr
es
cwde
add
pop
in
stos
cld
sub
dec
fs
add
outs
and
inc
rcr
sbb
pop
mov
cmp
retf
mov
add
aaa
sbb
sub
jmp
dec
adc
aam
movs
sub
dec
scas
dec
and
push
xchg
sti
push
mov
fisttp
pushf
ins
push
pop
add
push
xor
js
std
dec
push
bnd
ins
sbb
inc
test
sahf
aam
jge
test
mov
stos
ret
xor
push
lds
xor
movs
popf
test
dec
das
jg
mov
cmp
std
or
test
xor
test
add
lods
mov
sbb
push
rcl
aaa
mov
sbb
adc
scas
and
sub
sti
arpl
leave
xlat
leave
bswap
in
pop
sbb
and
xlat
push
add
pop
outs
adc
nop
cmp
push
imul
outs
or
fisub
out
test
cmp
jnp
add
jge
call
repnz
or
loope
out
push
inc
mov
sub
cmps
nop
or
daa
mov
ficomp
jecxz
sar
retf
aaa
data16
jmp
jp
inc
dec
add
inc
inc
xchg
sbb
jnp
(bad)
cmc
iret
ins
scas
mov
(bad)
pop
lahf
lock
pop
mov
jbe
mov
dec
xor
jle
rol
popf
push
push
add
rcl
imul
mov
cmps
stc
mov
fadd
xor
nop
aaa
pop
sbb
inc
in
icebp
ins
push
dec
inc
mov
(bad)
in
fld
jge
adc
push
sub
mov
add
shr
in
rcr
je
fnsave
cmc
loope
imul
add
aad
adc
ja
push
and
jecxz
dec
fdiv
cli
mov
jp
out
or
(bad)
gs
push
rol
dec
cli
inc
rcr
mov
mov
call
daa
lods
dec
sub
or
shl
sahf
push
push
lods
fisttp
loop
xor
jo
and
and
adc
sbb
ret
outs
dec
sbb
leave
push
xor
gs
adc
std
mov
mov
push
outs
dec
jo
add
cdq
imul
fnstcw
scas
xchg
imul
pop
add
repnz
nop
xchg
push
push
add
mov
add
adc
pop
pop
loope
test
pop
lods
stc
push
xor
sub
iret
daa
adc
xchg
js
inc
call
sbb
cs
(bad)
fbstp
xchg
not
rol
clc
cmps
push
inc
shl
lahf
xchg
mov
cmp
cmp
dec
xchg
dec
stos
xchg
dec
mov
rcr
dec
inc
clc
(bad)
popa
sub
loop
add
add
repnz
mov
int
cmp
fwait
or
js
mov
push
push
mov
cwde
test
or
(bad)
sbb
cmps
leave
sub
int3
pop
repnz
jae
xchg
xchg
inc
and
jae
xor
rcl
jge
inc
out
dec
mov
inc
cs
movs
mov
les
retf
and
xchg
sbb
mov
in
ret
(bad)
push
inc
mov
dec
lock
dec
xor
loope
xchg
cs
add
sub
arpl
pop
js
adc
jle
jns
push
mov
not
cmp
test
mov
jnp
sbb
je
(bad)
xor
or
pop
and
push
sub
gs
(bad)
popf
cli
pushf
jbe
mov
les
pop
push
pop
aam
fstp
mov
into
jge
pop
jge
outs
lea
cmp
repz
mov
mov
fs
lods
cmp
mov
push
push
xor
(bad)
xlat
mov
mov
movs
xor
retf
mov
retf
imul
(bad)
dec
dec
sub
movs
adc
test
leave
jnp
enter
fild
xchg
lods
nop
test
or
sub
sbb
inc
sahf
(bad)
call
out
mov
retf
jbe
scas
jecxz
fbstp
test
sub
xchg
xor
pop
mov
dec
enter
xchg
stc
cdq
imul
je
mov
neg
sub
retf
mov
jecxz
push
adc
scas
cmovnp
push
leave
mov
push
jne
(bad)
inc
loopne
ins
xor
ins
or
mov
addr16
jbe
jne
inc
pop
rol
inc
jg
ret
(bad)
xor
or
ja
jnp
mov
dec
pop
mov
lahf
pop
out
movs
mov
ret
mov
jb
mov
cmps
inc
mov
push
ret
add
adc
and
out
(bad)
inc
mov
or
idiv
pop
loop
mov
cmp
mov
and
xor
jns
loope
stc
push
or
jp
xor
cmp
jns
xor
std
mul
sahf
fbld
sbb
mov
jecxz
out
mov
push
xchg
inc
and
sub
daa
cli
mov
ins
loopne
sahf
mov
clc
aad
cwde
stc
mov
jge
jmp
fst
push
jmp
cwde
data16
push
cmp
mov
lods
(bad)
and
and
call
jmp
loopne
mov
inc
dec
xor
inc
push
ja
cmp
adc
or
xchg
xchg
int3
test
rol
retf
clc
xchg
lds
sar
push
movs
or
ins
cmc
pop
and
push
jns
pop
sbb
aaa
test
jno
fcom
pop
jge
ja
mov
inc
sti
cmp
cmp
test
in
test
(bad)
test
cmp
mov
cmp
mov
loopne
dec
es
pop
outs
inc
mov
daa
cmp
sub
loop
aam
test
pop
in
mov
(bad)
mov
xor
inc
(bad)
movs
(bad)
sbb
jb
and
imul
cmp
sti
popf
sub
scas
loopne
sub
add
js
stos
icebp
arpl
dec
xchg
ret
test
not
lods
xor
push
cmps
es
jb
mov
mov
imul
inc
out
rcl
in
xchg
btr
xchg
std
add
xor
jb
add
movs
mov
imul
pop
in
cmps
(bad)
outs
pextrw
xor
in
iret
stos
inc
inc
test
rcr
fmul
mov
ret
sbb
fisub
rcr
les
jmp
cmp
or
movs
adc
inc
mov
ror
cmp
push
push
repnz
add
jmp
adc
arpl
mov
scas
jge
inc
cmp
pop
jmp
repnz
fsubr
sti
and
push
or
mov
fdivr
mov
mov
cmp
test
push
aad
cmp
hlt
lahf
fadd
dec
xchg
add
lds
xchg
jns
push
sti
ret
cmp
mov
and
mov
jb
add
adc
je
mov
mov
clc
push
inc
fmul
sub
push
pop
inc
rcl
ret
loopne
and
jae
imul
dec
xor
mov
mov
outs
iret
retf
(bad)
adc
xor
sub
fbstp
cmp
push
dec
jbe
stos
mov
sahf
repnz
dec
pop
lock
test
cmp
adc
pop
ret
and
and
lods
or
iret
cmps
fist
jbe
jp
push
mov
fsub
sub
call
mov
mov
pushf
dec
stos
push
jp
sbb
push
inc
popf
sub
clc
mov
add
outs
gs
or
mov
(bad)
pop
daa
push
jne
in
inc
cmp
inc
in
aad
outs
div
push
stc
cmp
ds
outs
stos
or
push
jmp
lock
stc
in
cli
cwde
addr16
jmp
push
mov
es
out
cmc
inc
(bad)
imul
sbb
xchg
and
and
add
mov
jmp
retf
fisubr
or
daa
sub
xor
test
cmps
js
outs
xor
inc
les
cdq
fmul
sbb
(bad)
jmp
jne
push
add
jae
xchg
adc
dec
das
addr16
mov
lods
pop
or
mov
inc
fdivrp
add
mov
in
add
daa
mov
and
das
test
ins
sub
pop
inc
sub
lods
pusha
add
aam
mov
inc
mov
dec
fmul
push
pop
and
(bad)
mov
sbb
inc
jbe
mov
clc
pop
int
iret
dec
sbb
das
cmps
mov
mov
leave
loopne
sbb
(bad)
push
dec
arpl
scas
(bad)
pop
dec
pop
dec
cdq
(bad)
fisttp
adc
sbb
mov
outs
pop
sqrtps
sbb
dec
push
and
add
and
mov
(bad)
dec
or
jnp
enter
cdq
int3
jecxz
lds
cwde
pusha
repnz
mov
dec
cs
cwde
push
jne
daa
pop
mov
pop
ja
div
retf
xchg
in
adc
cli
loopne
ficomp
lock
sub
call
ficomp
fdiv
jns
push
fistp
popf
mov
fist
fwait
mov
into
mov
push
pop
mov
inc
test
lds
sbb
jae
pusha
mov
enter
sub
jle
out
push
add
lods
or
inc
sub
in
outs
cwde
in
pop
daa
sbb
adc
pop
push
pop
imul
xchg
aam
sub
repnz
jmp
stos
adc
fisttp
(bad)
jbe
cwde
das
pusha
xchg
sbb
rcl
and
cmc
test
sbb
fisttp
stos
int3
retf
pop
and
jle
aas
pop
pop
pop
movs
inc
or
sbb
xor
push
out
iret
or
(bad)
jnp
(bad)
pushf
cmp
add
xor
mov
scas
or
int3
dec
xchg
jne
repnz
ror
addr16
fdiv
and
push
not
icebp
repz
push
adc
jecxz
sub
mov
inc
lds
daa
lea
and
push
xor
ins
out
mov
pusha
xchg
test
inc
mov
mov
xor
xchg
xor
xlat
sti
dec
jb
or
cmp
cwde
jmp
test
fldcw
xor
std
iret
int
or
aaa
repz
gs
lock
jb
push
or
or
movs
add
xchg
add
xchg
adc
jnp
mov
lods
mov
sar
push
mov
mov
and
push
mov
cld
push
leave
and
adc
popf
cs
retf
and
call
imul
mov
sahf
cmps
mov
lods
gs
inc
sahf
pop
inc
in
pop
call
repz
ins
cmc
push
cwde
test
mov
fimul
(bad)
ja
int3
mov
fisubr
jb
push
jp
push
mov
(bad)
xor
mov
adc
pop
out
dec
ins
lea
inc
retf
sub
sbb
in
jp
jge
int3
jge
fdiv
mov
push
pop
sub
ins
xor
pop
pop
adc
div
test
xor
lea
js
pop
xchg
neg
push
sbb
mov
dec
jecxz
imul
jmp
loope
int3
xor
fsubr
jne
cmp
shr
movs
sub
cmp
bound
jecxz
mov
aam
test
fmul
out
dec
aam
jp
pop
(bad)
js
fs
cld
mov
fcomp
dec
add
jne
xchg
add
out
gs
aas
xor
xor
and
sti
aam
loope
sar
gs
xchg
xchg
jo
js
into
fldcw
add
outs
mov
stos
test
cmp
sbb
jp
add
mov
imul
jmp
out
pusha
ja
add
sub
bound
inc
fs
pop
btc
leave
js
jmp
test
test
ret
xchg
loopne
push
rcl
jae
fild
cmc
mov
lods
out
cld
mov
sbb
icebp
inc
mov
push
xchg
sub
mov
lods
xor
outs
sbb
ins
sbb
cmp
lods
jecxz
jl
(bad)
xchg
pushf
add
dec
imul
movs
cmps
outs
mov
hlt
ja
xor
pop
out
pop
cmp
sbb
hlt
cmps
pandn
rcr
add
add
bound
call
pop
sbb
pop
je
cmp
pop
fsubp
outs
cmp
shl
inc
data16
pop
sub
push
push
xchg
out
sub
data16
std
mov
mov
sar
ins
pop
ret
adc
pop
mov
sbb
mov
cs
call
sub
xchg
sbb
pushw
jnp
je
movs
sar
adc
push
rcr
xor
pop
aas
into
and
mov
ficom
jmp
aam
xor
test
clc
pop
pop
mov
jecxz
or
dec
sar
mov
je
mov
and
jno
cmp
je
das
cmp
(bad)
xchg
int3
jo
icebp
dec
lock
dec
repz
push
loope
hlt
push
dec
aad
and
stos
cmps
loop
jnp
xchg
dec
loop
aas
and
test
ds
jp
mov
mov
pop
call
push
adc
sbb
mov
xchg
or
cld
add
and
ret
dec
imul
inc
imul
pushf
js
addr16
lds
sub
aas
pop
push
fdivr
clc
pusha
fadd
imul
cmp
ret
fwait
xchg
xor
mov
push
and
loope
loopne
sbb
lea
mov
pop
lock
rol
adc
inc
dec
not
or
xor
sahf
push
outs
iret
dec
xchg
outs
jmp
jo
aad
cmp
lods
push
jmp
int3
fsubr
dec
inc
xchg
push
adc
lods
inc
cmp
xor
psubusb
cmps
mov
jmp
dec
push
sub
xor
cmc
imul
dec
addr16
dec
mov
ds
sar
dec
int
or
sbb
sub
std
inc
push
push
sub
das
jl
les
add
repz
push
popf
fild
jo
mov
js
add
mov
pop
add
ficomp
arpl
daa
rol
xchg
imul
dec
xchg
push
ss
push
dec
pop
and
xchg
lea
mov
retf
fwait
inc
push
mov
aam
cmps
sbb
aaa
mov
xor
and
arpl
add
push
sar
mov
or
sahf
inc
jns
sub
jmp
ins
(bad)
enter
lea
jae
adc
stos
int3
int3
mov
inc
jmp
aad
sahf
rol
aas
out
mov
jp
imul
and
sti
les
inc
lea
or
dec
cmp
push
pusha
repz
iret
fisubr
cmps
jp
add
(bad)
stc
cdq
jecxz
aas
(bad)
popf
out
and
loopne
mov
mov
sbb
xor
loop
jl
xor
xchg
pop
add
push
xchg
jmp
dec
loope
in
xchg
gs
and
xchg
adc
push
ds
inc
sbb
ficom
(bad)
xor
cmp
pop
je
(bad)
movs
popa
cli
(bad)
idiv
push
inc
ret
js
mov
enter
(bad)
adc
push
push
xchg
pop
xchg
xor
das
xchg
push
and
sti
and
cli
xchg
mov
dec
shr
push
pop
mov
cmp
inc
adc
mov
(bad)
aas
and
out
jbe
jmp
shl
and
int
fwait
dec
inc
sbb
fsubr
push
adc
dec
ja
mov
jge
nop
mov
jo
test
(bad)
xchg
fs
iret
and
outs
sbb
add
pop
pop
xor
retf
ret
adc
adc
xchg
and
mul
xor
jecxz
call
clc
jmp
fxch
mov
pop
daa
pop
xor
mov
cmp
push
sbb
cmp
pop
jmp
and
int
or
call
shr
cmp
das
sbb
aad
lahf
push
sti
shl
retf
push
fld
jne
lods
and
mov
out
sbb
cmp
pop
out
stc
xor
xlat
jbe
mov
lea
mov
ss
mov
xor
xlat
mov
sub
scas
mov
rcr
cwde
cdq
dec
addr16
ja
mov
xor
outs
pop
(bad)
pop
aas
enter
loopne
rcl
push
arpl
mov
jo
std
and
pop
iret
mov
jb
ins
inc
in
xchg
mov
xchg
aas
out
jle
inc
(bad)
fisub
push
ins
test
sbb
daa
mov
jae
div
jmp
or
(bad)
and
int
jb
(bad)
cmp
and
push
xor
xor
or
cwde
jmp
mov
xlat
jl
mov
stos
mov
fcmove
lea
int
fild
jecxz
xor
xlat
aas
pop
stc
mov
add
aad
stos
cmp
aas
mov
repnz
push
mov
in
jg
rol
and
jge
leave
(bad)
sbb
bound
mov
aas
sbb
repz
in
les
test
lods
cmp
test
out
clc
test
nop
xchg
mov
loop
add
enter
fadd
and
call
jbe
and
xor
push
pop
sbb
and
inc
xchg
fidiv
mov
inc
bound
xchg
jae
inc
sbb
xchg
xor
clc
call
sub
cwde
pushf
xchg
sahf
inc
push
push
loope
(bad)
pushf
ror
lea
js
(bad)
fwait
and
daa
retf
inc
jp
xor
xlat
xchg
mov
repz
push
ins
ret
addr16
inc
and
outs
lea
enter
daa
stc
gs
cdq
popa
jbe
adc
out
or
pop
add
cmps
sti
xchg
mov
loop
and
jne
ret
shl
mov
mov
or
es
outs
pop
jo
fisub
mov
mov
call
sbb
mov
in
cmp
push
inc
cmp
mov
mov
int
mov
in
dec
lea
dec
pop
or
pop
loop
mov
pop
dec
pop
sub
add
push
inc
fsub
jl
mov
xor
cmc
lods
jnp
repz
icebp
rcr
xchg
cmps
mov
sar
mov
or
std
push
ret
pop
sub
test
(bad)
mov
out
repnz
push
or
sar
pop
xor
sti
cmp
fs
xchg
push
xchg
adc
jle
xchg
scas
push
scas
and
pop
ret
and
or
jne
sub
jne
jmp
pop
les
int
aaa
sub
jae
jae
out
shr
movs
sbb
inc
fisub
es
out
daa
imul
sub
mov
lods
mov
hlt
mov
popa
jb
jl
cmps
add
lods
mov
or
mov
pop
loop
(bad)
es
push
pop
sbb
pop
iret
add
inc
and
lods
es
or
outs
leave
dec
das
in
(bad)
div
(bad)
aas
adc
cs
push
jmp
or
test
mov
inc
mov
cmc
mov
inc
cmp
pop
xor
aaa
iret
stos
dec
xchg
(bad)
int
or
push
out
leave
mov
sub
aad
pop
jno
retf
out
cs
xor
xor
ja
push
pop
icebp
dec
jns
pusha
sub
jp
xlat
aaa
cmp
sahf
test
in
add
mov
ret
mov
shl
pop
mov
mov
jl
sbb
out
in
icebp
aam
push
jge
push
daa
sub
jno
or
div
mov
pop
aaa
enter
test
mov
or
cli
add
dec
jo
ret
popa
ret
or
adc
jno
fwait
xchg
inc
addr16
iret
ss
jmp
pop
mov
pop
push
dec
pop
mov
mov
xchg
or
xchg
xchg
and
fadd
inc
(bad)
gs
inc
xlat
and
loop
inc
add
daa
sahf
xchg
mov
(bad)
dec
loopne
retf
jg
loop
push
nop
arpl
jg
repnz
mov
daa
mov
mov
inc
or
mov
sub
into
je
push
arpl
clc
imul
stos
xchg
popf
jns
ins
loop
mov
out
sahf
push
and
xor
aas
jp
mov
fidiv
xor
gs
sub
lods
scas
inc
fldenv
add
xchg
sub
daa
cmps
jmp
mov
xor
or
add
int3
icebp
aam
cwde
jb
(bad)
mov
push
mov
scas
push
or
pop
sbb
or
pushf
cmp
pop
or
sbb
jmp
mov
pushf
push
mov
mov
push
fwait
jle
and
std
push
inc
mov
arpl
push
mov
xor
retf
add
rol
sub
arpl
fucomp
ins
mov
daa
xor
sub
mov
mov
pop
lods
mov
jmp
jg
rcl
ret
out
mov
(bad)
call
pop
fsub
jns
cld
into
pop
add
cs
inc
adc
xor
pushf
out
mov
es
dec
dec
std
ja
movs
outs
dec
mov
sbb
js
cmc
sahf
inc
rcl
out
mov
cmp
shl
cli
xchg
dec
mov
ret
mov
inc
ror
mov
shl
mov
aas
fsubr
movs
mov
jle
fsub
fistp
jo
dec
xchg
xchg
lahf
les
xchg
shl
sub
and
movs
push
xchg
or
xchg
aam
mov
cmp
in
mov
xor
sbb
cmc
and
add
scas
sti
int
ins
movs
mov
sbb
or
mov
nop
push
push
imul
mov
out
jb
movs
outs
xchg
mov
int
(bad)
es
xchg
pop
xor
cld
imul
jno
xor
scas
test
jg
test
xor
push
scas
icebp
pop
xlat
dec
adc
push
movs
in
mov
outs
jno
push
dec
dec
cmc
adc
push
out
mov
aad
fldenv
rcl
pop
fstp
cmp
cmp
les
pusha
mov
adc
sar
mov
sub
cmp
mov
jne
repz
jmp
ret
add
in
mov
cmps
sub
outs
in
push
adc
fcomp
xchg
jle
cmovbe
pop
or
jmp
ins
sbb
repnz
pop
jmp
ds
(bad)
xor
push
jle
lahf
fdivr
jl
dec
inc
xchg
icebp
(bad)
fld
mov
call
dec
mov
fild
pop
jno
sahf
dec
xlat
jne
sbb
add
inc
fild
rcr
sbb
mov
mov
movs
sub
sar
(bad)
sbb
or
sbb
inc
cmp
repz
shl
es
fisub
fld
dec
das
jb
mov
outs
xchg
hlt
call
div
retf
add
push
test
dec
add
out
sbb
xor
mov
pop
(bad)
daa
out
inc
fstp
outs
or
mov
push
jp
xchg
mov
retf
inc
xchg
stos
not
cdq
sbb
icebp
add
ret
sub
lock
or
or
outs
mov
sub
xchg
rol
sbb
pop
mov
jecxz
fst
fst
jg
es
dec
test
in
pop
sbb
(bad)
call
cwde
movs
mul
lods
les
lahf
(bad)
or
clc
mov
push
sahf
mov
or
xlat
test
dec
jecxz
nop
jmp
add
fnsave
inc
imul
cmp
lea
sbb
pop
(bad)
jmp
jne
mov
xor
push
stos
cmp
sbb
rcr
sub
inc
into
loope
test
lods
and
lods
cwde
bound
inc
js
mov
out
daa
scas
push
mov
sti
cmp
push
test
or
xchg
mov
inc
cmp
add
mov
jo
push
int
fbstp
mov
mov
or
push
add
ror
inc
cmp
dec
inc
jno
sub
je
jle
adc
repnz
sbb
jecxz
stos
xchg
inc
(bad)
cli
sar
xchg
jg
js
mov
sub
es
pop
jne
mov
xchg
pop
retf
(bad)
adc
and
cmp
or
push
mov
lea
mov
push
ret
mov
fnsave
mov
(bad)
fisub
jl
pop
dec
loope
adc
je
bswap
adc
scas
leave
sub
out
stc
das
mov
test
sbb
add
sub
and
mov
xchg
pop
data16
or
jg
into
xor
les
jne
movs
cmp
rcl
and
(bad)
and
lahf
lahf
out
stc
mov
popf
cdq
sbb
call
daa
cmps
dec
sub
jmp
mov
mov
(bad)
sar
lahf
leave
pop
jnp
cwde
mov
mov
loopne
dec
aas
mov
aas
jo
xchg
jge
jge
pop
test
fs
sbb
cmp
outs
out
rol
mov
or
push
cmp
push
ret
jns
mov
stc
cmp
inc
cdq
and
test
push
test
jecxz
(bad)
repnz
dec
cmps
je
cld
cmps
mov
pop
add
jbe
add
cli
jne
cld
pop
test
mov
aam
pusha
cmp
push
mov
dec
(bad)
or
inc
mov
nop
outs
adc
fisttp
sub
stc
mov
mov
(bad)
pop
cdq
push
into
fs
rcr
inc
outs
loope
mov
jmp
cmp
int3
sub
pop
adc
into
cmc
in
cli
repnz
scas
xchg
mov
scas
call
mov
jno
push
neg
adc
aad
push
mov
jns
(bad)
xcrypt-ctr
cmps
pushf
jmp
xlat
xor
loopne
out
mov
repz
sbb
cmp
mov
and
cmps
test
sub
lods
adc
arpl
xor
or
or
repnz
xor
lods
out
(bad)
dec
std
ret
div
xor
push
ror
xor
adc
adc
xor
call
lds
rcr
jns
iret
lahf
scas
fwait
stos
jb
jmp
daa
scas
les
push
dec
pop
xchg
mov
mov
rol
dec
jb
cmp
clc
add
aaa
or
mov
outs
ins
push
cmps
mov
push
outs
mov
or
out
arpl
int
sbb
mov
lods
cmc
ret
cmps
mov
xchg
outs
mov
outs
(bad)
push
lds
inc
xor
sbb
loop
out
rcl
adc
dec
loop
mov
cli
bound
clc
cld
les
sub
inc
ror
adc
pop
jmp
cwde
sub
(bad)
repz
push
add
pop
(bad)
cld
sbb
loope
mov
mov
lods
sub
or
dec
sahf
cdq
add
mov
test
pop
xor
stos
mov
inc
push
idiv
gs
sub
fdiv
aam
push
pop
cs
lods
mov
mov
cmp
inc
pop
(bad)
movs
adc
lea
dec
mov
mov
repz
push
jmp
dec
push
mov
mov
pusha
sub
inc
sub
movs
daa
mov
sbb
and
ds
data16
in
xchg
sbb
in
aaa
fdivr
and
jo
ret
mov
mov
outs
sub
jns
mov
jbe
(bad)
(bad)
lods
call
lahf
pop
cwde
hlt
enter
sbb
xchg
movs
adc
mov
and
bound
sar
retf
sbb
mov
ret
out
lahf
mov
test
das
dec
mov
mov
xor
push
cmp
iret
leave
clc
jbe
push
push
jle
in
adc
dec
je
adc
sahf
xchg
push
popf
hlt
dec
dec
(bad)
iret
sbb
cmps
dec
js
out
push
mov
stos
jmp
outs
xor
push
in
add
outs
and
repnz
fldln2
mov
test
mov
or
add
imul
div
sahf
shl
scas
bound
ja
add
stos
jbe
mov
or
jnp
fstp
stos
hlt
adc
cdq
iret
or
inc
in
jnp
and
icebp
sub
dec
cmp
adc
movs
(bad)
gs
and
hlt
or
dec
mov
ja
jno
in
lods
stc
jb
push
jmp
repz
in
jle
ror
add
daa
fnstenv
add
sbb
aaa
fwait
stos
xchg
pusha
pop
mov
mov
sub
(bad)
rcl
xchg
dec
and
movs
test
adc
jmp
mov
dec
push
mov
shl
mov
mov
mov
adc
rcr
or
popf
dec
jnp
push
or
cmp
pop
push
mov
mov
mov
cld
mov
mov
stos
or
jmp
mov
mov
push
dec
dec
mov
gs
sub
mov
aaa
sahf
cwde
mov
cmp
adc
sbb
pop
test
cld
lea
sbb
ret
push
leave
xor
mov
cmc
ds
mov
loop
imul
adc
shl
sub
cmp
push
mov
in
cmp
nop
cmps
push
xor
jno
loopne
add
inc
inc
cmps
mov
stos
enter
pop
mov
ret
mov
jg
cmp
or
leave
cmp
adc
mov
push
add
cmc
(bad)
xor
jecxz
sbb
int
outs
out
add
xor
dec
gs
mov
mov
add
jmp
cwde
stos
xchg
std
jno
int3
mov
call
add
fiadd
pop
adc
xchg
ds
mov
data16
xchg
sub
sbb
xchg
jmp
sahf
jp
and
mov
enter
out
nop
jmp
(bad)
aam
or
stos
push
pop
xchg
hlt
mov
ins
mov
hlt
movs
inc
push
xlat
int3
bound
inc
mov
or
je
push
push
cmp
(bad)
in
mov
cmp
push
push
pop
dec
cmps
push
rol
dec
inc
aad
ret
xchg
imul
lods
nop
in
hlt
xor
popa
xchg
shl
stos
cmp
xor
stos
sub
jne
pop
mov
mov
xor
seto
adc
push
or
nop
mov
(bad)
and
jg
push
sbb
fild
adc
and
push
out
jnp
sbb
ds
(bad)
mov
fnstcw
push
push
and
loop
lds
dec
stc
test
out
clc
push
mov
(bad)
push
mov
in
and
shr
adc
sbb
out
sbb
pop
pop
adc
aaa
add
je
and
jecxz
adc
pop
lods
push
fstp
pop
xchg
dec
mov
aad
std
(bad)
jmp
stos
enter
jne
aas
pop
in
inc
or
jmp
loop
movs
data16
cwde
pusha
add
lock
out
dec
int
xlat
sub
push
lahf
sahf
mov
push
jg
jg
and
cmp
fsubr
out
cmp
int3
mov
cwde
and
mov
xchg
adc
mov
jge
repz
cmp
adc
mov
mov
daa
pop
repnz
outs
jb
jg
cmp
(bad)
(bad)
mov
adc
repz
call
mov
add
inc
dec
sar
popf
inc
imul
fstp
test
out
repz
adc
sbb
repnz
into
add
fcom
and
sbb
mov
bound
or
fdivrp
cwde
mov
mov
add
retf
loop
ja
add
loop
mov
scas
lds
lods
push
fmul
mov
fcom
int
sub
dec
popf
jns
fcomi
and
retf
cmp
adc
leave
xchg
ss
mov
test
jmp
loopne
aaa
mov
aaa
xor
jns
cmp
mov
xor
sub
push
fistp
(bad)
outs
push
sub
fdivp
es
dec
test
aaa
in
push
adc
sbb
sub
int
enter
dec
(bad)
les
out
sub
mov
leave
push
mov
inc
test
aam
clc
mov
in
data16
rcl
call
out
cwde
mov
cmp
pandn
fldenv
jnp
jl
fadd
mov
mov
je
or
out
adc
cmp
cwde
xchg
push
pop
mov
mov
jo
loope
imul
dec
jae
test
mov
call
out
ja
into
jmp
loope
(bad)
gs
int
scas
dec
xchg
dec
add
aas
ret
mov
pop
add
cmp
add
or
dec
imul
test
xchg
xchg
adc
or
mov
rol
inc
xchg
and
xchg
retf
lahf
and
pop
hlt
add
js
sar
shr
dec
or
repz
cmc
xor
adc
inc
mov
xor
(bad)
stc
mov
ja
inc
jne
(bad)
aam
fs
loope
mov
test
cmp
push
imul
data16
adc
sbb
in
scas
pop
mov
sub
shl
mov
loopne
xor
or
adc
mov
sub
imul
lods
call
push
dec
leave
bound
mov
push
les
jae
mov
in
sbb
cmp
mov
sbb
mov
push
or
pop
gs
(bad)
scas
add
mov
fst
call
pop
in
les
xor
movs
(bad)
mov
push
aad
add
push
mov
in
in
push
stos
cs
ss
dec
aam
test
xchg
push
and
or
fistp
adc
xor
iret
repnz
call
jl
addr16
xchg
leave
lahf
mov
mov
fmul
pusha
sub
mov
leave
out
jmp
stc
cld
inc
jo
mov
mov
mov
dec
and
adc
inc
push
out
xor
pop
imul
pushf
pop
je
repz
enter
lock
(bad)
aad
cmp
fistp
es
xor
leave
out
hlt
jl
mov
repnz
push
mov
je
cmc
dec
sbb
movs
ror
(bad)
in
ret
cmps
sub
jmp
movs
scas
mov
pusha
dec
fbstp
mov
adc
mov
push
stos
cdq
les
iret
bound
arpl
in
pop
mov
mov
xchg
xchg
in
test
movs
or
les
adc
xor
xor
fstp
sub
and
lock
xor
sub
jnp
je
inc
(bad)
or
pusha
cmc
dec
fcmovne
lods
push
sub
neg
jle
inc
jl
clc
test
sbb
add
xlat
jb
jne
lahf
hlt
pop
add
xor
pop
in
pushf
cmp
int
outs
xor
push
mov
xor
dec
xor
sbb
ins
xor
mov
gs
jmp
mov
inc
and
loope
lock
rcl
in
mov
sbb
fisubr
mov
cmp
mov
retf
aas
daa
add
xor
shl
sub
inc
xlat
pop
add
fist
xor
mov
adc
cmp
icebp
test
pop
ret
ret
in
popf
xor
push
int
push
fisubr
popa
in
push
inc
push
sub
mov
out
mov
dec
push
inc
xor
or
dec
jo
xor
cli
leave
xchg
call
fnstsw
nop
test
pushf
addr16
cwde
js
inc
and
xlat
sar
dec
sar
jns
rcr
jg
call
push
repz
dec
fs
push
aam
xchg
or
call
lods
stc
clc
nop
imul
(bad)
inc
xchg
fs
pop
les
add
pop
imul
imul
cli
fisttp
shl
sub
lock
pop
je
adc
or
int
addr16
fwait
gs
out
jae
es
fld
fld
xchg
jge
jmp
add
outs
ret
fstp
or
les
jle
sbb
mov
hlt
pop
adc
cld
daa
add
rcl
mov
xchg
aaa
cwde
ins
cvtpi2ps
aad
les
cwde
mov
inc
out
sbb
mov
pop
popf
push
ss
mov
iret
xchg
stc
lahf
out
xchg
rcr
retf
lds
push
xchg
xor
pop
xor
push
inc
xchg
sub
and
xchg
jp
mov
movs
jmp
retf
js
mov
(bad)
emms
cdq
stc
out
dec
fcomp
movs
movq
das
mov
scas
std
lods
pop
push
cmps
mov
jecxz
ret
stos
js
cli
sub
or
mov
stos
pop
not
cld
ja
mov
int3
sbb
mov
iret
repz
fcom
jmp
cmp
adc
cmp
sub
gs
or
scas
in
xor
adc
daa
push
xlat
in
mov
or
inc
popf
repnz
js
movs
xchg
clts
sub
out
and
movq
dec
sub
daa
inc
pop
inc
retf
test
xor
ret
movs
jnp
push
repnz
mov
xchg
push
mov
mov
jo
dec
jns
cmp
dec
mov
sbb
xor
sbb
ret
add
cmp
popa
fwait
sub
shr
pop
fiadd
ret
push
fst
data16
sbb
pop
(bad)
(bad)
pop
stos
add
jns
xlat
adc
jno
in
lea
add
cmp
mov
adc
xchg
sbb
in
dec
push
mov
cmp
and
call
cwde
stos
push
pop
retf
aam
adc
mov
inc
mov
cmp
shl
sbb
stc
and
arpl
call
test
loopne
clc
inc
(bad)
out
mov
call
pusha
ficomp
xchg
call
inc
mov
mov
xchg
cld
mov
pop
or
pop
xchg
cld
jl
adc
or
in
aaa
cmc
mov
dec
arpl
cmp
out
leave
in
cmp
and
inc
loop
mov
mov
sbb
aaa
cmps
cmp
fidivr
sbb
ins
in
sbb
mov
(bad)
mov
push
movs
mov
cmps
cmp
sub
scas
adc
popf
xor
hlt
cmp
push
addr16
push
iret
xchg
xor
push
push
jmp
mov
mov
sbb
stos
lea
sbb
aad
shr
mov
sbb
fild
mov
add
in
sbb
(bad)
in
jnp
jmp
(bad)
push
ins
dec
mov
loopne
rcr
cwde
(bad)
aas
into
mov
call
jge
icebp
lods
or
and
fcom
cmp
mov
inc
repnz
cmp
rcl
sbb
jl
mov
retw
data16
ds
dec
sub
cld
(bad)
push
test
shl
lods
popa
push
xor
cmp
pop
out
lahf
pop
lods
test
(bad)
fstp
popf
inc
jmp
out
(bad)
test
adc
pop
dec
xor
add
ror
test
shr
xchg
outs
nop
jl
xor
and
xchg
loop
jmp
ins
sbb
add
retf
fimul
lds
cmp
cmp
das
inc
inc
mov
scas
sub
ja
fdiv
dec
mov
out
ja
sub
scas
(bad)
cmps
jne
into
jecxz
enter
dec
mov
sbb
jae
fild
cwde
xor
lahf
or
sbb
lods
and
mov
jmp
setno
mov
push
popf
js
es
or
test
jge
xchg
push
push
mov
test
adc
pop
xchg
and
jle
aad
fldenv
ins
cdq
(bad)
aad
call
loop
pop
mov
push
aaa
mov
mov
lahf
inc
jl
stc
int3
sub
jo
dec
nop
enter
jno
xchg
stos
ret
mov
mov
(bad)
aaa
inc
jg
gs
(bad)
(bad)
jbe
xor
ffreep
xor
fimul
arpl
mov
or
(bad)
xor
adc
icebp
pop
add
mov
dec
enter
push
mov
imul
in
jmp
sub
push
mov
xchg
jecxz
repz
mov
in
(bad)
sub
sub
mov
sbb
mov
jg
push
and
lods
mov
push
mov
sub
int3
mov
add
pop
sbb
std
mov
aam
xchg
mov
and
sahf
mov
and
movs
je
push
and
mul
add
sub
rol
aad
inc
adc
int3
dec
test
pop
iret
pop
iret
push
mov
push
inc
out
xor
mov
lds
adc
ret
pop
jbe
loop
rol
nop
jp
out
or
or
jo
jnp
and
inc
xchg
sbb
cs
je
sub
mov
popa
jmp
and
sbb
pop
mov
xor
rcl
enter
and
adc
xor
fstp
loop
sbb
adc
ds
sbb
push
mov
test
add
shl
push
loopne
lock
dec
mov
sbb
rcr
adc
sbb
jnp
or
pop
loopne
jg
fiadd
pop
mov
or
add
sub
(bad)
mov
mov
call
mov
cwde
jo
imul
(bad)
clc
lods
adc
out
pminsw
jbe
mov
xchg
jns
jbe
add
popa
aam
mov
fild
sbb
mov
or
mov
and
mov
dec
fwait
(bad)
or
ficom
xchg
dec
inc
(bad)
adc
aaa
cmp
sbb
push
(bad)
and
pop
sbb
xor
xlat
shl
adc
neg
loope
cmp
pop
hlt
loope
xchg
sahf
xchg
cmps
xor
and
lahf
mov
cwde
in
test
xor
je
ror
fcmovnu
dec
enter
mov
imul
test
sbb
(bad)
lods
xor
or
imul
clc
in
outs
popf
xor
sbb
pop
mov
scas
jae
lds
adc
push
adc
test
shr
std
int3
sbb
xchg
sbb
lds
adc
and
add
and
pop
sub
dec
pop
push
sahf
lods
jecxz
jb
mov
sti
std
pusha
xor
push
gs
rol
cmp
leave
adc
or
ret
lea
cmp
loope
cli
add
or
jp
add
pop
inc
in
xchg
loope
addr16
loop
ss
mov
push
shl
repnz
dec
push
xchg
mov
add
mov
mov
inc
mov
not
mov
fst
sbb
adc
arpl
mov
mov
cli
rol
sbb
dec
(bad)
hlt
inc
xchg
mov
rcl
pop
dec
js
ins
push
or
push
jge
jmp
push
(bad)
dec
call
pop
fs
dec
pop
cdq
(bad)
xchg
jo
push
xlat
loop
mov
jne
xor
mov
jmp
in
outs
add
adc
mov
xchg
cwde
mov
xor
(bad)
out
or
and
pop
rol
nop
cmps
jge
mov
popa
dec
jnp
cs
popa
mov
leave
fld
mov
sub
xor
lods
mov
cmp
fild
jmp
mov
lods
push
test
gs
fimul
int
iret
aas
cmp
xor
sub
sub
hlt
inc
add
icebp
cs
das
in
inc
jno
pop
js
fs
adc
icebp
pop
or
push
mov
jl
push
arpl
adc
sub
mov
xor
adc
sbb
cmp
ret
mov
inc
push
and
ja
mov
cs
mov
push
cld
mov
sbb
imul
sbb
dec
xor
push
mov
call
into
push
adc
xor
sbb
arpl
mov
add
rcr
jns
dec
loop
std
mov
add
jo
jge
ret
sub
cmp
jecxz
xchg
imul
lahf
out
cmp
push
xchg
mov
dec
dec
sub
mov
mov
mov
movs
scas
dec
in
jns
das
fisubr
xor
jbe
iret
ins
inc
ds
fimul
cmp
sahf
fcom
pop
push
lock
mov
loop
mov
push
(bad)
sbb
int
sbb
aas
fcom
loopne
push
cmp
lods
dec
sbb
imul
dec
inc
xchg
pop
adc
call
cmps
xchg
mov
lahf
cmp
push
dec
sub
test
arpl
pusha
ror
or
pop
mov
xchg
jbe
sub
adc
hlt
and
mov
rcl
jnp
or
mul
mov
(bad)
int
int
(bad)
arpl
je
mov
inc
bound
not
stos
mov
push
push
pop
jbe
imul
adc
sbb
mov
push
xchg
(bad)
inc
lods
pop
jne
push
push
fs
aad
xchg
ja
xchg
lods
jnp
sub
sbb
add
pusha
inc
pop
mov
aas
cmp
mov
enter
addr16
movs
add
push
inc
cmp
mov
scas
mov
out
jmpw
mov
sub
dec
cs
xchg
cmp
retf
and
out
or
pop
mov
out
aam
adc
or
cmc
sub
jnp
push
shr
xchg
xor
mov
jmp
pop
outs
push
cmp
jmp
popf
in
pop
cdq
xchg
sahf
sub
fisub
mov
mov
cmps
xchg
push
push
(bad)
aaa
push
pop
neg
mov
dec
push
jae
lea
cmps
movs
icebp
and
ins
in
popa
push
int
lock
xchg
and
push
adc
dec
adc
std
mov
mov
pop
xor
xchg
jmp
cmp
and
(bad)
std
icebp
jbe
cwde
lahf
push
and
mov
cmc
inc
add
inc
stos
test
cmp
xchg
inc
push
pop
and
push
repz
sub
xor
pushf
not
mov
fistp
mov
pop
cs
int3
sti
movs
pop
bound
push
inc
add
mov
daa
adc
cmps
adc
jle
ds
cmc
sbb
lds
and
xchg
push
pop
shr
neg
pop
ins
xor
xchg
movs
fimul
mov
mov
pop
gs
sub
out
push
or
pop
test
mov
xor
in
(bad)
fs
sub
jno
lods
cmp
mov
scas
cs
or
push
xor
js
adc
jo
dec
jge
scas
leave
retf
jg
mov
(bad)
loopne
mov
xor
mov
and
jmp
frstor
rcr
sub
movs
cmc
mov
mov
aad
stos
inc
mov
pop
jmp
retf
adc
inc
icebp
sub
hlt
lea
xchg
adc
xchg
and
jge
jno
std
jge
sbb
cwde
ret
mov
push
hlt
std
adc
repnz
xchg
popf
pop
mov
pop
dec
ds
ins
sub
imul
(bad)
sar
push
rcr
leave
popf
hlt
jecxz
mov
mov
sub
xor
rcr
xlat
mov
in
lods
push
ffreep
adc
cmp
call
pop
jnp
js
loop
and
jo
and
pxor
push
push
les
push
push
dec
mov
push
push
out
mov
jno
jle
xchg
inc
ds
inc
(bad)
popf
sub
mov
jns
fistp
call
xchg
mov
dec
push
cmc
mov
mov
rcr
hlt
mov
(bad)
ja
add
or
dec
xor
pop
mov
cmp
add
mov
shl
ror
pop
add
and
das
test
jnp
or
and
in
retf
pop
sbb
mov
push
push
aaa
pop
dec
jle
adc
aad
cwde
loopne
std
jmp
xchg
fistp
outs
js
movs
in
sub
fs
shr
cmp
outs
jno
jmp
inc
adc
xor
rcr
(bad)
mov
movs
pop
rol
sub
neg
mov
or
arpl
mov
push
stos
in
xor
dec
shl
dec
cwde
movs
xchg
adc
fcmovbe
cmp
lock
hlt
imul
xchg
inc
adc
das
aad
or
sbb
xchg
pop
mov
stos
sub
ror
psubsb
dec
ror
ror
shr
xor
sub
into
(bad)
sub
dec
cmc
gs
fdivr
pop
cmp
in
call
add
out
into
xor
and
fild
aaa
loop
daa
cmp
xor
idiv
scas
js
mov
scas
fmul
js
cmp
rcl
outs
cmp
imul
jo
and
pop
cmp
adc
(bad)
and
xchg
mov
adc
in
imul
hlt
mov
push
rol
movs
adc
scas
jae
push
jp
mov
mov
dec
repz
mov
stos
(bad)
and
add
cld
into
dec
adc
sbb
retf
enter
dec
and
rol
aas
mov
rcr
push
test
or
inc
push
cmp
sbb
jl
push
imul
scas
mov
rcl
cs
pop
pop
push
xor
loopne
dec
mov
mov
lds
xor
sub
es
sbb
xlat
aas
repz
push
mov
imul
jb
das
in
imul
test
jge
es
mov
test
mov
mov
mov
xchg
mov
xchg
adc
jns
test
neg
gs
pop
out
pop
push
sbb
in
dec
in
pop
int
pop
adc
iret
dec
ret
(bad)
in
dec
ror
adc
call
sub
adc
jns
imul
popf
mov
test
mov
jne
inc
push
pop
outs
dec
fnstcw
jno
pop
js
push
gs
imul
(bad)
iret
es
cmp
out
push
outs
cmp
test
retf
mov
push
nop
outs
inc
jbe
mul
mov
sub
jno
mov
call
mov
ficomp
pop
pushf
neg
push
fsubrp
(bad)
ficom
push
sub
adc
lds
call
add
jecxz
xchg
repnz
data16
xchg
jns
sub
pop
sbb
add
ficomp
and
call
je
add
cmp
lods
xchg
in
(bad)
sub
aad
dec
add
adc
das
pushf
js
or
sub
or
fld
ror
push
mov
pop
cld
mov
mov
lods
fld
(bad)
pop
mov
cmps
imul
retf
fucomip
gs
je
cmps
jb
mov
and
int
xor
dec
les
add
lahf
cmp
pop
pushf
push
push
fs
cmp
add
lods
out
push
stc
mov
fmul
adc
cdq
ret
scas
leave
add
scas
hlt
xchg
dec
add
imul
imul
push
cli
mov
lds
mov
jnp
ja
and
jmp
xchg
cwde
jecxz
retfw
std
xchg
cmps
mov
stos
push
and
pop
out
xchg
or
xchg
fs
mov
push
sub
in
inc
lahf
mov
fnsave
call
and
daa
jo
call
push
xor
ins
loop
xchg
(bad)
xor
push
xchg
or
sub
lea
jbe
arpl
mov
jbe
ja
xor
xor
in
push
dec
lock
mov
mov
jbe
(bad)
mov
sti
loope
jne
and
in
push
xchg
xchg
mov
jmp
push
adc
adc
rcr
leave
loope
ret
scas
push
mov
lea
pop
ins
dec
out
and
adc
movs
(bad)
dec
enter
push
fscale
in
jecxz
sbb
mov
jg
mov
dec
dec
adc
adc
(bad)
adc
outs
inc
test
cli
in
inc
xchg
xchg
sbb
or
jmp
cmp
jmp
inc
and
call
dec
pop
retf
ins
cmp
sub
call
push
sbb
in
fadd
inc
mov
mov
in
mov
mov
fbld
(bad)
ret
mov
data16
cmp
rcl
sbb
inc
(bad)
test
clc
mov
repz
in
mov
mov
mov
sub
icebp
daa
cmps
js
xor
cmp
out
aaa
daa
icebp
pop
xor
in
jg
ja
push
out
adc
retf
ja
mov
xchg
iret
xor
ins
repz
jb
push
pop
mov
and
cmp
rol
jbe
pop
cmps
xchg
enter
inc
mov
and
push
push
ins
int
jnp
and
repnz
cmp
cmp
ror
mov
(bad)
pop
mov
shl
inc
inc
iret
jo
push
enter
dec
xchg
loop
into
sbb
pop
and
(bad)
ret
inc
inc
daa
sub
dec
mov
push
pop
sbb
mov
out
pop
repz
jbe
scas
sbb
sbb
xchg
inc
xor
mov
fist
cmps
add
sahf
fisubr
mov
repz
ss
dec
xchg
mov
add
push
pushf
mov
std
pop
iret
mov
lds
call
retf
adc
mov
push
test
cli
ins
dec
mov
jg
dec
xchg
xchg
fwait
pop
mov
mul
xchg
jbe
sbb
jp
out
inc
sub
scas
daa
xchg
js
loopne
adc
push
loop
in
xchg
ins
pop
outs
inc
loope
aas
jecxz
imul
shl
xor
inc
add
pop
cmp
xchg
(bad)
popf
dec
xor
inc
xor
xor
mov
add
inc
das
les
or
cdq
add
and
das
pop
mov
xor
ss
int
pop
push
movs
fs
xchg
pushf
sbb
test
adc
test
lock
es
scas
jne
repz
mov
sub
xor
fisub
cwde
and
xor
inc
(bad)
cmp
outs
sahf
ror
sub
div
jle
aas
test
aaa
and
jecxz
movs
stos
pop
and
pushf
mov
and
sti
jecxz
mov
inc
cmps
cmp
retf
xchg
(bad)
and
add
and
jb
dec
cmc
pushf
test
pop
aam
pop
add
sbb
push
inc
js
adc
sub
ss
mov
xchg
xlat
xor
cmp
outs
loopne
or
pushf
sbb
push
mov
(bad)
scas
jp
fmulp
out
xor
dec
sbb
fs
push
test
lahf
cmps
push
lea
pop
inc
mov
mov
mov
es
test
out
cmp
call
xlat
jbe
into
(bad)
fdivr
(bad)
out
inc
loop
push
addr16
xchg
loop
scas
xchg
xor
int
out
mov
inc
mov
sub
jno
xchg
fnstcw
out
sub
popf
xchg
inc
mov
iret
dec
stc
lods
jge
(bad)
lock
or
adc
sbb
sub
xchg
pushf
adc
in
stos
and
pop
and
cmc
add
mov
xor
stos
clc
popf
ss
loop
mov
mov
mov
pop
test
inc
add
mov
lahf
out
es
mov
or
mov
enter
sbb
call
cwde
aam
cdq
fsub
stc
xchg
ret
push
dec
pop
jle
sbb
mov
lea
fadd
adc
fs
retf
int
jns
loopne
mov
and
fsub
popf
jl
ins
ror
jnp
outs
(bad)
test
xor
(bad)
jle
adc
add
mov
repz
jmp
mov
ins
stc
pop
cmp
stc
add
mov
rcl
aas
mov
paddusb
sbb
fs
mov
adc
aad
mov
shl
adc
neg
sub
mov
arpl
cmps
jecxz
into
jne
arpl
movs
jns
mov
popf
movs
je
xchg
shr
pop
or
xchg
xchg
inc
repnz
in
sti
test
pusha
or
mov
sub
fs
add
mov
push
outs
push
pop
aas
xchg
enter
outs
xor
retf
xor
mov
xchg
mov
mov
retf
mov
sub
adc
mov
enter
cs
sbb
xor
(bad)
xchg
pop
push
push
(bad)
popa
mov
sbb
adc
sub
dec
jbe
jmp
sub
ja
xchg
fdiv
das
clc
fsubr
cmp
add
add
fld
push
test
and
mov
ret
fcomip
and
push
pop
sbb
sti
dec
and
inc
bound
pop
adc
test
fisttp
or
repnz
push
inc
retf
mov
or
arpl
push
sbb
cmc
sbb
mov
ins
xor
ret
cmp
jnp
sbb
and
pop
mov
fisub
adc
adc
js
ret
jae
adc
and
call
fisubr
and
pusha
out
in
movs
retf
cmps
inc
adc
mov
jno
push
int
sub
sub
rcl
mov
mov
mul
adc
add
cmp
push
cmp
mov
add
or
mov
rol
test
push
adc
add
dec
or
pop
and
add
inc
ficom
ja
cmps
rol
mov
rol
mov
sub
mov
ins
iret
mov
fidivr
mov
jmp
xchg
ja
sbb
cs
push
mov
mov
xchg
out
pop
xchg
jnp
cdq
sbb
mov
and
sbb
sbb
push
mov
cli
int
loop
int
push
cwde
jns
(bad)
mov
scas
sub
xor
inc
cmp
das
cld
and
nop
inc
push
sub
bound
mov
fld
out
xor
nop
mov
movs
daa
(bad)
sbb
cmps
cmc
push
push
or
cmc
int3
sub
clc
punpcklbw
mov
dec
add
push
int
hlt
imul
cmp
or
call
aam
dec
mov
xchg
push
xchg
shl
pop
pop
addr16
arpl
call
or
in
movs
inc
jg
daa
aam
xchg
popa
jl
cmc
ins
(bad)
jge
scas
movs
inc
adc
inc
mov
sub
lahf
or
mov
hlt
out
xor
xchg
sub
(bad)
in
fild
movs
lds
jnp
fimul
ds
ja
js
ja
mov
popa
aam
dec
sbb
outs
jno
fcomi
adc
(bad)
mov
add
jo
push
dec
add
pop
jnp
mov
lea
adc
in
out
or
imul
in
mov
push
je
ins
mov
mov
out
xchg
jo
into
out
cmp
ja
add
mov
adc
bnd
xchg
popa
xchg
xor
not
sbb
inc
inc
stos
retf
mov
cs
fwait
mov
mov
mov
and
imul
and
pop
or
cld
cmp
aad
sub
(bad)
adc
mov
aad
cmp
shl
loope
fdivrp
and
test
lods
(bad)
cmp
push
(bad)
sub
in
push
add
ds
cmp
hlt
div
popf
jge
adc
mov
sar
pop
data16
cmps
adc
sbb
mov
jae
shr
stos
xlat
aas
push
shl
sub
daa
adc
push
xchg
add
lock
or
fwait
cli
adc
fwait
sub
pop
mov
data16
jbe
jne
stc
jo
inc
icebp
cmp
xlat
mov
pushf
mov
int3
js
fsub
push
ss
ja
cs
outs
jg
imul
cmp
mov
sub
test
sub
in
cmp
aas
mov
cmc
cli
and
push
mov
test
lahf
mov
movs
aaa
ja
sti
stc
ds
(bad)
sbb
rcl
mov
test
inc
iret
fistp
xchg
push
mov
xlat
dec
push
fcom
ins
fs
gs
cmp
add
cld
ss
ret
mov
pop
repz
pushf
icebp
cmc
movs
xchg
or
in
sbb
mov
call
inc
dec
ss
xor
shl
ins
xchg
xchg
dec
clc
daa
jns
inc
shl
xchg
clc
and
lods
mov
shl
fidiv
xor
jge
fdecstp
mov
jge
sti
leave
aam
jp
ins
rol
sub
pop
fcomp
jae
mov
mov
cmp
sbb
cmp
adc
sbb
cdq
cwde
xchg
push
out
dec
mov
xlat
inc
sar
add
cwde
sub
movs
mov
push
mov
xchg
sub
cli
es
test
outs
mov
das
or
leave
and
sub
cli
cmp
test
mov
out
mov
inc
jnp
jns
les
idiv
or
enter
xchg
fs
cmp
and
xlat
mov
inc
and
xchg
rcr
sbb
cmp
(bad)
jmp
(bad)
hlt
add
mov
adc
dec
rol
jl
aas
add
scas
push
imul
lods
loopne
and
mov
int
test
cmp
js
ret
mov
je
or
outs
cmp
adc
dec
add
ins
adc
jmp
jge
push
popa
inc
and
psubsw
pop
aas
mul
movs
add
test
cmc
mov
dec
jl
dec
out
push
cmp
cmp
clc
stc
push
jnp
xchg
push
push
mov
shl
aas
movs
push
xor
jnp
jo
dec
add
shl
add
adc
mov
xchg
add
dec
sub
cmp
jp
stos
mov
ja
das
jne
mov
inc
adc
pop
mov
aas
mov
sbb
jecxz
retf
or
adc
add
pop
pop
call
xlat
retf
aas
pusha
mov
mov
mov
fist
retf
mov
popf
jnp
dec
outs
scas
imul
rol
arpl
in
xor
mov
xchg
frstpm(287
and
lods
rol
mov
jmp
push
stos
adc
xchg
and
sub
add
jns
push
(bad)
mov
(bad)
fistp
aad
xor
xchg
pop
imul
sbb
sbb
test
icebp
xchg
pop
lods
dec
cmp
vpsrad
jle
pop
jg
fcom
xor
jns
and
(bad)
push
cmp
fmul
mov
shl
xchg
xor
bound
dec
cmp
dec
and
xor
int
mov
jge
clc
pop
ret
aad
int
test
std
pop
push
(bad)
sbb
jecxz
out
repz
cli
mov
adc
mov
pop
nop
xchg
data16
lock
xor
test
and
jno
xchg
out
push
test
out
inc
sbb
push
es
pop
mov
lock
pop
popa
xor
dec
pop
inc
mov
or
adc
enter
jmp
scas
add
add
push
mul
(bad)
imul
out
push
sbb
mov
pop
popf
sahf
movs
inc
or
mov
sub
enter
jnp
out
cs
leave
push
jmp
dec
dec
ficomp
loopne
clc
aam
icebp
lea
fisttp
fstp
fst
mov
sbb
movs
push
pop
pop
adc
fwait
push
pusha
mov
add
adc
aam
fst
pop
push
aas
inc
test
call
sub
push
mov
rcl
jbe
adc
jp
mov
lods
or
or
adc
(bad)
(bad)
sti
je
inc
imul
loop
rol
dec
leave
shl
adc
pop
scas
or
and
cmp
leave
pop
cwde
call
fcom
jle
sub
pop
retf
rol
loope
pop
mov
mov
push
repz
or
imul
cwde
or
(bad)
repz
addr16
shr
dec
pop
inc
xchg
xchg
or
adc
xor
shr
sar
hlt
ds
arpl
call
mov
aas
iret
in
dec
imul
add
mov
ret
cwde
cli
mov
mov
and
jmp
test
add
sub
adc
imul
out
cmp
lods
into
adc
fst
jno
in
mov
sbb
sahf
pop
shr
movs
shl
es
inc
adc
jg
sbb
inc
push
jno
push
mov
aas
lahf
mov
dec
lods
mov
jmp
outs
xchg
xor
and
dec
pop
repnz
idiv
cdq
mov
push
out
clc
and
pop
sbb
dec
push
mov
or
loopne
in
in
push
ret
sbb
(bad)
jl
jp
adc
or
and
call
out
loop
stos
push
test
xor
push
ret
mov
inc
or
call
cld
out
push
pop
rol
add
cmps
or
je
dec
cmp
sar
jle
sub
cli
xor
mov
fldcw
add
jmp
push
mov
inc
adc
pop
in
aad
test
call
mov
fwait
xchg
pop
mov
shr
inc
pop
sahf
lock
ja
aas
cmp
mov
loope
pop
scas
mov
dec
sub
xchg
fstp
mov
sub
movs
mov
adc
xor
push
xor
ins
jp
movs
fcmovne
repz
push
dec
pop
stos
cli
jl
add
call
inc
jb
adc
icebp
xor
mov
popf
jae
jl
not
or
mov
mov
adc
mov
xor
or
mov
push
cmc
dec
fisub
jmp
not
je
pop
(bad)
in
mov
addr16
xchg
mov
push
clc
xor
and
(bad)
hlt
out
imul
mov
push
jg
outs
cmps
add
shl
push
fptan
fdiv
mov
pop
dec
mov
and
leave
aas
jno
pop
out
sub
in
ins
in
dec
lea
movs
out
cmp
pop
inc
or
mov
mov
sti
lock
aas
scas
ret
mov
jge
fmul
lahf
jge
lds
xlat
hlt
sahf
lods
imul
add
adc
in
in
(bad)
adc
adc
jecxz
stos
mov
ins
ins
rcl
retf
lds
mov
in
test
fwait
jae
inc
adc
add
sbb
aaa
push
aam
pop
mov
ss
dec
push
pusha
shl
xchg
mov
adc
lods
in
retf
pop
ja
gs
inc
dec
stos
sub
dec
adc
dec
dec
jge
mov
jge
data16
test
add
and
sub
add
adc
cmps
mov
mov
push
sbb
mov
xor
sub
(bad)
std
adc
mov
mov
or
jp
test
mov
scas
(bad)
mov
test
popf
cld
or
add
fxch
xor
in
jl
xor
popf
jno
xor
push
inc
jge
mov
dec
inc
push
push
jns
pop
mov
xchg
inc
dec
pop
dec
bnd
jb
imul
inc
cld
call
inc
jb
lahf
jns
nop
mov
arpl
push
sbb
cmc
add
push
daa
fst
dec
aam
das
jmp
imul
mov
dec
or
or
jb
add
pop
aad
sub
push
mov
sub
pop
push
int3
and
pop
int3
in
in
out
neg
les
fcom
ins
scas
or
fstp
rcl
and
sub
jno
ins
mov
stc
icebp
sbb
into
sbb
das
call
mov
aad
jecxz
ffreep
cdq
mul
dec
pusha
xor
movs
pop
outs
inc
scas
jecxz
mov
data16
jg
fistp
std
xchg
cdq
xchg
shl
loope
stc
aas
aaa
mov
mov
mov
add
repnz
pop
or
stos
outs
sti
into
test
jp
sbb
adc
dec
mov
sbb
loop
dec
cmp
sbb
sbb
push
jnp
aad
sub
jecxz
adc
or
sbb
out
or
idiv
ja
dec
stos
fstp
cmps
ds
lds
xor
(bad)
enter
xchg
repnz
in
and
dec
jle
lahf
inc
icebp
or
jmp
xchg
add
adc
mov
cdq
jns
loopne
mov
out
rol
mov
cmp
pushw
sub
dec
jl
jnp
ficom
dec
dec
add
(bad)
lods
dec
ss
pop
mov
pop
push
fwait
xchg
dec
leave
mov
test
dec
sahf
loope
repz
into
xchg
bound
(bad)
out
xor
mov
sbb
lds
pop
xor
rcl
iret
out
add
mov
mul
aad
fnstcw
ror
add
dec
daa
push
push
lahf
and
mov
cmc
loop
pop
mov
ficom
stos
cmp
iret
int3
sub
add
sub
(bad)
(bad)
mov
test
mov
mov
lods
fsubr
jmp
dec
sub
cmp
sbb
ret
mov
jo
or
lods
inc
ins
sub
cmps
mov
int
cli
jle
js
jp
pop
cmp
jnp
xchg
xchg
movs
fadd
int3
mov
pop
mov
test
je
sub
jae
daa
jne
dec
in
sahf
or
stos
shl
cmp
adc
aas
aas
jp
retf
jb
imul
mov
fwait
call
jl
scas
adc
xchg
mov
sub
cmc
adc
xor
rcr
pop
(bad)
cmp
leave
adc
mov
mov
pop
pushf
lea
fld
jb
and
sbb
sahf
xor
mov
cmps
xor
mov
outs
or
test
cmp
inc
aaa
mov
cs
push
ror
push
out
xchg
lods
and
hlt
hlt
fild
fld
push
cli
ins
cmp
movq
pop
dec
mov
xor
and
and
xchg
outs
mov
mov
(bad)
jmp
cmp
jp
cwde
mov
popf
cs
inc
jecxz
inc
lahf
call
fisttp
jge
adc
add
lds
sub
dec
retf
les
cld
ss
ja
imul
bound
jle
sub
ret
test
fs
popa
pop
sbb
xchg
mov
cmp
out
xchg
outs
imul
movs
push
ret
mov
in
mov
popf
push
imul
imul
xor
mov
push
mov
movs
jno
or
data16
mov
fld
sub
sbb
cmps
imul
adc
push
cmp
ja
adc
in
call
arpl
sbb
stos
popa
add
mov
and
scas
push
xor
rol
xchg
mov
sbb
ret
fldcw
jo
sar
dec
and
into
cmp
mov
sub
inc
sub
xor
cmc
test
cmp
in
sar
jmp
loop
push
sub
mov
aad
jnp
sub
rol
jmp
xchg
sbb
or
das
cmps
loopne
scas
mov
push
and
mov
mov
nop
(bad)
cmps
lahf
sbb
aad
mov
daa
dec
rep
mov
inc
and
daa
and
mov
jb
xor
or
inc
jns
outs
sti
enter
(bad)
jmp
inc
cmp
pop
mov
sub
inc
mov
cs
(bad)
cmp
jecxz
sbb
xor
not
jns
iret
dec
jbe
shl
fist
xlat
out
int
cs
or
(bad)
repz
cmps
jne
fisubr
outs
jno
js
cmc
xchg
cdq
das
test
inc
mov
outs
mov
arpl
ja
daa
aad
out
loopne
xchg
cmps
sub
sbb
pop
jbe
out
aam
push
(bad)
adc
xchg
in
scas
(bad)
hlt
std
test
shr
int3
test
aaa
add
add
xor
call
ret
test
mov
sub
xchg
cmp
xor
imul
push
ins
cmp
sub
jae
ss
pop
lock
sbb
test
cmp
(bad)
clc
add
imul
mov
add
das
jecxz
(bad)
xlat
sub
or
fdiv
sbb
sub
pop
xchg
sbb
fild
inc
or
inc
iret
sub
or
xchg
jecxz
clc
pop
not
test
adc
dec
push
mov
pop
call
or
push
fsubr
adc
adc
scas
sbb
xor
or
mov
or
pop
ss
stc
sti
enter
loopne
sti
jb
loop
cmp
jno
pop
push
rcr
sbb
cdq
(bad)
clc
pop
movs
mov
pop
leave
push
out
jmp
stos
dec
jp
sbb
jge
out
(bad)
lds
outs
xor
and
adc
or
xor
div
sbb
pop
ret
int
inc
add
mov
enter
hlt
mov
pop
adc
fadd
adc
scas
loop
pop
mov
out
out
sub
push
cmp
mov
lahf
imul
or
call
mov
inc
mov
(bad)
rep
add
addr16
xor
xchg
arpl
jge
cli
mov
les
adc
imul
push
push
int
pop
push
popa
jmp
xchg
movs
(bad)
sbb
and
xor
lahf
sti
mov
dec
pop
pop
cdq
loope
iret
sub
call
js
cmps
cmovo
aad
mov
ss
mov
lds
ds
add
cmp
pop
jge
pop
or
sbb
push
adc
adc
sahf
pop
movs
arpl
pop
into
(bad)
mov
push
pop
jmp
ja
sub
stos
and
mov
cld
scas
jne
jo
sbb
(bad)
cmp
test
jecxz
and
mov
mov
fdivr
add
add
retf
in
pop
mov
jae
sub
lods
jbe
aas
shl
ja
lahf
xor
mov
scas
out
fldenv
cmp
imul
pushf
inc
xchg
xchg
or
shl
mov
jnp
xchg
daa
test
repnz
enter
add
mov
xchg
js
push
mov
or
fsubr
and
dec
aad
and
dec
push
add
sub
hlt
sub
ret
and
dec
add
fimul
add
push
or
fs
hlt
out
lea
retf
or
sub
add
int
or
cwde
dec
cmc
rol
ret
xor
push
adc
idiv
mov
repnz
push
dec
mov
cli
jle
cwde
mov
mov
jne
test
mov
mov
out
push
and
aaa
mov
ins
std
and
jmp
xlat
add
ficom
push
test
aad
test
mov
pop
test
inc
fld
fwait
rcl
retf
or
mov
hlt
aad
jbe
gs
jmp
and
ret
adc
mov
mov
xor
mov
fidivr
inc
push
mov
xor
mov
jb
lock
dec
mov
(bad)
adc
ror
outs
push
add
pop
pusha
clc
out
ja
aad
ins
and
movs
dec
sub
push
test
clc
mov
add
jge
arpl
xchg
jb
cmp
jne
test
push
adc
addr16
cli
mov
loopne
adc
arpl
dec
jmp
dec
cs
inc
mov
add
sub
mov
push
add
push
ins
hlt
mov
ret
push
lahf
pop
mov
(bad)
xlat
lods
mov
les
std
dec
xor
add
or
jmp
adc
sbb
rcl
addr16
jne
mov
aam
popa
outs
jo
inc
sbb
dec
clc
inc
xlat
adc
sub
mov
ret
adc
pushf
icebp
bound
shld
stos
pop
ss
mov
pusha
mov
and
push
cmp
into
ret
sub
mov
mov
mov
or
cli
xor
jmp
mov
lds
loopne
mov
and
mov
xor
jg
dec
and
scas
bound
cdq
aad
mov
fsubr
popa
mov
or
ds
xchg
mov
aas
sbb
xchg
repnz
data16
mov
call
fmulp
dec
pop
jp
fbld
clc
mov
dec
inc
dec
aad
push
dec
xchg
(bad)
(bad)
retf
push
xor
cmp
cmps
lods
sub
cmc
and
nop
rcl
xor
int
push
aas
and
pop
in
mov
div
mov
or
and
das
test
outs
ins
dec
pop
dec
add
js
scas
jbe
dec
fsubr
fcomp
or
je
cmova
(bad)
in
daa
jl
mov
dec
ins
fisub
(bad)
mov
test
sub
pop
int
dec
clc
inc
dec
fwait
aas
clc
mov
cmp
mov
xchg
cmp
cmc
xor
jmp
mov
cmp
push
pop
inc
sbb
add
xchg
and
popa
jns
and
(bad)
or
nop
loop
pop
jecxz
(bad)
xor
sahf
mov
xor
arpl
les
push
jne
mov
rcl
movs
loopne
in
ds
inc
loope
pop
mov
dec
outs
add
fs
imul
fdivr
in
cmp
xor
shl
pop
jmp
dec
add
lods
das
std
pop
and
movs
test
rcr
inc
stos
jnp
out
loop
pop
popf
jecxz
shl
or
sar
in
fistp
pop
sub
inc
(bad)
in
push
sub
sub
scas
or
cmp
jae
push
inc
push
stc
bound
inc
or
sub
adc
mov
xor
into
jno
sahf
scas
dec
cmps
jmp
mov
mov
xor
push
retf
xchg
rcl
mov
pop
in
fimul
dec
cs
add
mov
pop
xchg
sub
lock
mov
aas
xor
jbe
cmp
sub
mov
icebp
test
jl
push
push
pop
clc
std
xor
and
gs
dec
(bad)
bound
mov
cmp
imul
mov
sbb
xchg
xlat
scas
push
in
sbb
jmp
or
mov
push
mov
ins
fisubr
aas
ja
xor
and
cmp
call
cmp
inc
adc
lea
jg
in
add
and
sahf
cld
clc
(bad)
or
ja
pusha
xor
and
movs
aam
test
or
sub
dec
out
rol
aaa
ror
pop
and
les
ins
xchg
and
mov
clc
outs
xchg
cmps
sub
inc
into
mov
das
hlt
fcomp
in
sbb
(bad)
push
xor
inc
loop
clc
hlt
test
jg
cmp
pop
mov
es
mov
sbb
mov
repz
dec
jl
push
rol
sub
mov
jecxz
mov
jns
mov
enter
pop
push
leave
in
push
clc
inc
cmps
das
sub
aad
push
clc
test
cwde
mov
gs
xchg
das
sub
or
mov
sbb
movs
iret
push
cdq
jecxz
cmp
loopne
mov
adc
shl
sub
add
sub
fldenv
pop
jbe
stc
fiadd
leave
jne
lods
outs
push
pop
(bad)
xlat
xchg
mov
fwait
outs
loopne
push
xchg
inc
ds
imul
neg
call
repz
ins
jmp
stos
int
fs
adc
and
bound
mov
sub
sub
sub
fild
pop
jmp
and
add
mov
mov
fisub
mov
aas
pop
cld
dec
xchg
pop
xor
das
inc
fcomp
test
cmps
mov
and
cmc
ret
aaa
push
cli
mov
push
loopne
fdivr
or
sar
ret
aad
adc
mov
rcl
(bad)
push
mov
out
cld
std
pop
lods
mov
or
aas
outs
movhps
repz
jl
stos
fst
or
inc
faddp
cmp
mov
add
dec
mov
stos
call
push
pop
ins
dec
xchg
and
push
int
push
repnz
jae
jge
std
push
push
xchg
xor
add
mov
cmp
int
mov
or
jae
into
es
xchg
std
xor
dec
daa
icebp
cmp
mov
loopne
rcl
mov
fst
ret
fdivr
push
ffree
ins
rcl
mov
sbb
pop
xor
and
(bad)
scas
lds
xchg
outs
ss
jns
mov
and
ja
rcr
js
btr
xor
mov
inc
jne
add
fwait
sub
in
test
xor
js
mov
cmc
mov
stos
pop
mov
and
call
sbb
xchg
add
aad
cmp
leave
movs
pop
add
pop
or
mov
cld
enter
xchg
sub
pop
push
jnp
jecxz
(bad)
(bad)
je
out
imul
ins
fisubr
arpl
cwde
dec
aam
add
out
retf
(bad)
mov
xchg
popf
xor
jecxz
loop
cs
js
xlat
pop
fbstp
into
pop
rcr
sub
mov
cmp
sbb
sbb
xlat
jno
rcr
in
and
scas
xor
icebp
jg
mov
pop
out
pop
scas
out
std
sti
mov
jmp
leave
cmp
aas
bound
add
pop
int3
lods
sti
mov
fld
aad
clc
gs
ds
jno
adc
js
aas
sti
push
scas
sub
shr
cmp
jmp
sub
and
dec
loop
clc
bnd
cli
mov
sbb
xchg
sub
stos
pop
aas
add
pop
pusha
ss
(bad)
mov
jbe
loop
arpl
ficomp
add
jl
push
push
bound
and
xlat
stos
ins
gs
sub
push
les
mov
jmp
push
xchg
push
jle
cmc
stc
dec
lds
in
jmp
sahf
add
std
popf
xchg
pop
xchg
push
mov
sub
in
test
jnp
jge
adc
fcmovnbe
pop
call
pop
cdq
sbb
aad
xchg
push
pop
xor
pop
out
sub
mov
pop
xchg
or
mov
in
push
(bad)
(bad)
pop
mov
push
pop
mul
dec
pushf
dec
or
adc
xor
aam
(bad)
fcom
sahf
mov
or
or
sbb
(bad)
call
mov
sar
or
or
imul
cli
adc
outs
lods
into
cmp
dec
rcr
scas
aam
sbb
inc
movs
lahf
(bad)
aaa
dec
sahf
enter
mov
jg
aam
cmp
test
call
jb
into
loopne
inc
ins
push
and
pop
daa
out
es
dec
ss
xlat
sbb
xor
xor
dec
push
xchg
lahf
mov
inc
mov
ffreep
call
aaa
xchg
jecxz
sbb
sti
xchg
inc
and
sbb
push
mov
loopne
sub
(bad)
dec
call
xor
inc
in
xchg
xchg
mov
rcl
add
sbb
scas
lods
mov
mov
sar
or
adc
jns
sbb
sar
mov
daa
aam
imul
mov
shl
xchg
adc
sub
sbb
data16
test
iret
prefetch
arpl
inc
fs
out
in
cld
mov
mov
in
sub
arpl
xchg
cwde
ds
enter
xchg
add
shl
popf
aas
jl
(bad)
scas
pop
retf
(bad)
xor
iret
repnz
mov
jns
ror
or
and
pop
sbb
in
fist
cmp
xor
movs
out
shl
lds
imul
xor
mov
cmc
push
cmps
adc
cmps
daa
push
iret
push
pop
push
mov
xchg
fcomp
popf
or
pop
sbb
lock
xchg
mov
jmp
add
sbb
xor
or
mov
leave
sub
sbb
fcomp
jmp
daa
leave
push
clc
jmp
out
mov
icebp
cld
sbb
mov
inc
call
jb
mov
icebp
fs
xchg
(bad)
jne
xlat
mov
push
adc
imul
jl
cmps
push
cmp
imul
or
es
je
and
xchg
scas
bound
or
mov
jne
(bad)
add
loope
push
scas
jp
cmp
push
jne
cmps
pushf
ds
pop
sahf
stos
fwait
loope
arpl
adc
cmc
in
shl
add
lods
stc
mov
jbe
sbb
dec
femms
fsubr
or
push
stc
rcl
shl
loop
cmp
sub
mov
loopne
cmc
jnp
push
add
mov
or
rol
call
mov
and
sub
xor
aaa
inc
imul
mov
sar
mov
fld
push
sar
hlt
sbb
and
xor
lea
imul
xchg
xlat
jo
and
jns
arpl
adc
shl
xchg
adc
jg
pop
out
inc
dec
lea
aad
jno
or
out
mov
ins
ins
pop
mov
jg
inc
sbb
fsubrp
add
sub
nop
test
cmp
push
cmp
stos
das
sbb
ins
xchg
jle
fnsave
lea
(bad)
in
jecxz
movs
jmp
inc
rcl
and
cwde
adc
xor
xchg
inc
push
or
fwait
repnz
cmps
faddp
(bad)
pop
outs
dec
gs
pushf
pop
mov
call
pop
or
inc
cld
mov
jle
popa
adc
(bad)
cld
xor
fsub
cmp
neg
fadd
jno
out
push
mov
dec
xchg
dec
jmp
jp
outs
or
in
pop
ror
xchg
rcl
imul
ror
ins
inc
aaa
int
out
fcomp
ret
adc
push
cmp
mov
xchg
push
not
inc
mov
out
mov
xchg
in
iret
inc
mov
sub
xchg
xchg
mov
movd
mov
jns
idiv
fwait
jbe
ss
mov
shr
test
les
aam
push
retf
mov
movs
lock
mov
adc
sub
xchg
inc
sbb
xchg
jge
add
aam
mov
mov
mov
adc
ds
push
inc
ins
sbb
jae
aam
push
jl
inc
adc
push
jle
mov
lds
(bad)
in
dec
pop
(bad)
into
push
and
xor
shl
inc
push
in
dec
sub
jmp
dec
and
mov
xlat
inc
repz
les
mov
sbb
adc
loopne
or
stos
xlat
sub
repnz
jge
mov
fld
gs
call
sub
stos
inc
xor
stos
call
add
(bad)
inc
out
mov
outs
mov
adc
mov
sub
in
jg
add
stos
hlt
add
xchg
pop
into
test
lock
xor
mov
cwde
imul
inc
sub
in
or
mov
pop
iret
adc
into
sub
stos
ins
fcomp
rol
xchg
and
je
test
dec
cmp
xchg
cmp
inc
enter
pop
pop
out
cmps
bound
or
push
jg
xchg
fstp
jae
lds
sar
xor
mov
pop
add
push
scas
dec
adc
aad
out
or
mov
(bad)
mov
add
out
or
repz
(bad)
fstp
lods
xor
xor
xchg
push
ins
jne
or
sbb
pusha
loop
xor
pop
outs
jmp
cdq
inc
jp
iret
ins
and
icebp
and
xor
mov
xchg
sbb
test
adc
mov
fadd
mov
inc
cwde
cdq
(bad)
cld
mov
mov
lods
stc
test
mov
inc
mov
or
mov
fcmove
mul
adc
loope
(bad)
in
dec
mov
shl
xor
jbe
push
add
mov
sbb
mov
and
push
jno
xchg
test
adc
cwde
dec
inc
cmp
cmps
cmp
imul
mov
dec
or
mov
test
ror
stos
(bad)
aam
add
xchg
xor
jl
xor
jns
cli
jmp
inc
dec
fisub
jecxz
out
retf
jmp
stos
jecxz
outs
mov
add
sub
adc
out
cmp
into
push
adc
arpl
dec
mov
cmc
xor
icebp
xor
mul
push
js
stc
ret
dec
sti
jne
fcomp
cmp
xchg
cli
adc
jecxz
cli
or
push
sbb
cli
es
in
push
ret
ror
mov
inc
push
ret
adc
rol
cmp
jb
test
gs
mov
jmp
imul
jnp
add
popa
loopne
cld
jb
bound
add
dec
lock
ja
test
sti
adc
out
mov
aas
(bad)
jns
fdivr
add
jbe
jmp
push
mov
out
or
inc
rdpmc
ja
mov
pop
pop
mov
xor
cmp
pop
fnstsw
cmp
fcomip
loopne
out
pop
add
mov
aaa
cdq
retf
fmul
in
and
dec
jg
ins
push
cli
(bad)
in
ret
lds
pop
lahf
xchg
gs
xor
imul
push
sub
jmp
pop
dec
mov
and
xchg
pop
ins
xchg
ror
jns
jge
ficomp
aad
sub
mov
and
pop
jmp
jns
push
add
dec
jge
outs
mov
xchg
push
sub
in
enter
push
cmp
or
jnp
clc
sar
inc
pop
into
add
pop
(bad)
fs
jp
cli
mov
fyl2x
(bad)
sub
clc
(bad)
add
ss
icebp
cs
fstp
outs
fist
pusha
in
jmp
test
pop
jne
add
jno
jl
loope
pop
scas
push
loope
add
and
or
pushf
mov
fwait
retf
mov
sub
repnz
enter
xlat
int3
stos
sbb
dec
jae
popf
mov
dec
rcr
fbld
mul
mov
mov
jmp
ins
cli
push
mov
jecxz
xchg
adc
scas
add
xchg
push
mov
push
jmp
jno
es
in
push
pop
jmp
jmp
cwde
das
mov
pop
sub
jns
ds
pop
xchg
mov
dec
mov
jbe
jge
(bad)
imul
pop
fadd
cwde
test
les
hlt
pop
stos
cmc
mov
push
shl
sahf
stos
pop
pop
int3
push
fidivr
scas
rol
fstp
clc
addr16
fnsave
xchg
fst
inc
mov
jne
aas
adc
dec
inc
xor
jo
popa
out
movs
out
or
into
adc
dec
pop
jp
push
xchg
call
icebp
(bad)
jmp
dec
jne
jecxz
add
xchg
fcom
out
add
dec
sbb
stc
push
dec
sar
mov
in
mov
imul
rol
xchg
xor
fcomi
sub
call
int3
aaa
push
xchg
mov
jl
push
test
ss
add
movq
dec
or
mov
dec
xor
jnp
sub
mov
(bad)
sbb
sub
cmp
les
xor
mov
outs
mov
lahf
cmc
sbb
pop
pop
ins
stos
adc
bound
mov
stc
(bad)
mov
scas
shr
sub
push
addr16
ss
fld
mov
lods
ins
jle
enter
outs
push
out
aas
add
jno
in
aas
lea
arpl
cmp
sar
rol
aas
mov
cmp
movs
aas
ja
xor
sti
stc
mov
jecxz
daa
popf
lea
cmps
push
sub
inc
jmp
retf
in
movs
dec
stc
pop
lods
addr16
push
hlt
jne
dec
fimul
mov
ins
fdivr
pop
in
mov
add
call
(bad)
cmc
xchg
lods
test
pop
jns
nop
sub
fild
pop
or
adc
pop
adc
ss
(bad)
cmc
mov
push
mov
mov
jno
sbb
cmp
loopne
cli
jae
into
or
mov
outs
jbe
pop
mov
shl
or
cmp
xchg
push
cmc
jo
sbb
jecxz
add
push
inc
adc
in
mov
push
or
mov
ins
inc
mov
mov
cmp
test
mov
xchg
dec
out
inc
adc
cdq
in
mov
outs
add
ins
rol
ins
sbb
inc
call
adc
sub
mov
pop
xor
adc
sbb
adc
std
test
push
mov
pop
or
movs
movs
push
mov
ins
data16
dec
jp
jns
pop
add
sbb
dec
mov
arpl
fwait
das
lods
and
push
cmp
adc
xor
inc
inc
lea
adc
jo
aad
ins
mov
mov
(bad)
(bad)
add
push
mov
pop
sub
movs
enter
adc
push
inc
or
mov
ds
mov
mov
stos
imul
cmp
test
gs
xlat
mov
pop
push
inc
push
div
fidiv
push
xchg
inc
(bad)
cmc
and
outs
and
fild
sar
pop
lock
mov
adc
xor
pusha
in
mov
in
out
sub
daa
pop
sbb
pushf
(bad)
sbb
js
out
in
pop
cmp
call
call
mov
loopne
loopne
adc
push
mov
cmp
pop
enter
jae
or
test
ror
scas
mov
inc
dec
mov
cmps
out
dec
sub
mov
mov
imul
mov
pop
jae
sub
push
call
jmp
repnz
iret
mov
ret
ja
dec
sahf
icebp
sub
(bad)
adc
iret
(bad)
shl
mov
jbe
or
call
(bad)
into
add
or
(bad)
aad
(bad)
jb
mov
stos
adc
rcl
retf
lfs
aas
fcomp
mov
jmp
fs
scas
jge
push
jnp
xchg
ds
dec
es
or
mov
sub
fwait
jnp
mov
mov
std
push
fstp
mov
icebp
cdq
pop
das
nop
mov
fild
mov
lods
dec
lods
or
sub
mov
out
cld
dec
cmp
fs
test
sbb
(bad)
mov
sbb
mov
dec
imul
fidiv
push
pop
push
dec
stos
leave
(bad)
jo
push
add
fcom
lods
dec
xchg
(bad)
mov
jl
sbb
pop
paddb
es
sbb
loopne
scas
mov
or
pop
sub
das
xor
mov
push
imul
fdiv
push
movs
retf
dec
mov
dec
cmp
pop
mov
ins
adc
push
sub
fwait
sbb
cli
repnz
data16
loop
mov
xor
inc
ins
cmc
ret
shl
(bad)
shr
fist
aas
pop
pop
enter
popaw
xor
aad
dec
loopne
jbe
movs
xchg
and
pop
inc
mov
and
mov
loopne
hlt
or
push
mov
pop
bound
add
rol
inc
xor
push
in
cmp
jmp
ror
sub
loop
std
dec
sbb
stos
test
dec
jecxz
cmp
(bad)
mov
pop
out
daa
and
xor
sub
scas
stos
enter
out
pop
inc
fdiv
cmps
cmp
jmp
mov
dec
je
ret
mov
not
mov
xor
in
adc
es
retf
je
jmp
mov
and
and
sbb
jne
cmps
lahf
and
jne
adc
dec
call
or
jecxz
dec
add
loop
sub
mov
sub
leave
pop
cmp
adc
jge
adc
inc
sub
adc
cmp
mov
adc
lods
ins
sar
xor
test
inc
or
xlat
sbb
mov
xchg
mov
push
movs
xor
mov
pop
and
xchg
sbb
lds
sub
retf
adc
xor
int
sbb
jp
not
cwde
ud2
es
mov
(bad)
call
rcl
jns
sahf
xchg
dec
pop
push
mov
pop
cmp
pop
out
and
inc
mov
(bad)
jo
(bad)
(bad)
fchs
pop
inc
or
retf
(bad)
movs
mov
std
sub
xchg
pop
push
inc
xchg
into
lea
jle
sti
inc
adc
mov
mov
xor
call
sbb
mov
and
aaa
inc
fldcw
addr16
cmps
mov
push
cmp
inc
jp
fist
xchg
aas
add
(bad)
scas
lods
test
lds
xchg
pop
out
int3
sbb
int
fstp
adc
xchg
jo
push
popf
jne
sti
mov
ror
adc
retf
scas
mov
aad
out
sbb
cmp
pop
jno
jb
inc
and
dec
stos
push
in
xlat
xchg
call
scas
std
gs
mov
sbb
mov
aam
int3
add
push
mov
loop
fistp
outs
bound
inc
shr
jo
das
std
push
pop
dec
stc
outs
pop
pop
mov
jb
ja
in
sbb
xchg
aas
fistp
xor
idiv
xchg
aam
push
jp
test
into
pusha
call
lds
and
aas
jbe
xchg
mov
adc
test
pop
lock
adc
sub
inc
in
jmp
pop
dec
ror
xchg
das
push
cld
je
xchg
cmp
mov
dec
mov
pop
ins
out
movs
sbb
out
fbstp
push
xor
mov
pop
cmps
mov
loop
jg
jmp
sbb
xor
mov
xor
push
mov
adc
test
xor
add
sub
(bad)
mov
cwde
cmps
lods
dec
fimul
aas
dec
cmc
xor
call
adc
inc
xlat
loopne
jl
push
push
push
call
pop
loope
fsub
in
or
std
movs
ins
test
xor
push
cmp
add
dec
shl
test
push
cmp
and
jnp
into
adc
movs
fs
(bad)
int
pop
retf
sub
jae
test
das
addr16
add
into
add
inc
aam
or
inc
cld
div
pop
popf
pop
sbb
add
call
add
push
mov
mov
jge
cmc
clc
xchg
or
adc
enter
mov
das
add
movups
fsubr
test
loop
test
ret
pop
sbb
scas
shr
mov
fwait
jl
sub
icebp
inc
cmp
cwde
and
adc
mov
or
jne
in
fisttp
jno
stos
test
sub
not
push
shr
and
cmp
test
jae
pop
mov
(bad)
fwait
cmc
add
mov
sbb
push
arpl
nop
and
cmp
mov
xor
data16
adc
inc
and
dec
ss
jo
arpl
shl
mov
dec
cmp
pop
call
neg
or
aad
xchg
adc
fsubr
add
jmp
lock
xor
test
rcr
test
mov
pop
adc
sbb
mov
jecxz
loope
jae
outs
retf
jmp
push
hlt
or
and
mov
bound
xor
and
jb
mov
retf
mov
sbb
ins
jnp
fnstcw
std
pop
pop
adc
push
lahf
outs
pop
or
inc
cld
mov
mov
and
cs
xor
sbb
inc
neg
cs
mov
data16
ja
ins
sub
clc
ins
out
push
stos
out
test
cld
and
sub
dec
mov
mov
push
bnd
cmp
push
push
ins
jge
adc
add
hlt
cdq
pop
jns
setp
mov
popf
inc
in
sub
push
cs
push
and
enter
in
jle
fs
in
add
mov
xchg
(bad)
call
jne
gs
fs
adc
push
cmp
sti
inc
sbb
dec
call
sbb
mov
mov
aam
push
shr
mov
and
jle
pop
jl
lahf
addr16
sub
push
inc
js
test
dec
dec
mov
xor
mov
lahf
scas
bound
xchg
xchg
inc
gs
fistp
inc
(bad)
cmps
ins
stos
jle
movs
sbb
jl
out
mov
int3
pop
adc
and
vaddss
ja
sub
mov
push
cmp
mov
mov
mov
and
shl
dec
push
dec
add
call
push
int
lea
jbe
popa
fisub
or
mov
mov
mov
xchg
cwde
ret
jb
add
(bad)
lock
pop
dec
int3
pop
addr16
lock
adc
xor
ret
dec
push
ret
inc
jae
adc
imul
clc
(bad)
gs
out
daa
xchg
mov
push
and
push
fst
cmp
cmp
in
aam
inc
push
xchg
inc
cmp
dec
dec
pop
inc
loopne
ins
dec
enter
push
arpl
mov
imul
push
mov
add
ds
push
push
xchg
cmp
dec
jge
push
scas
scas
mov
mov
xor
lea
inc
jge
cmp
pop
add
cmc
sbb
add
xor
jae
dec
pop
loope
add
ror
enter
dec
cmps
xor
mov
js
mov
xchg
shr
or
or
dec
xlat
loop
push
(bad)
shl
movs
loop
js
enter
cwde
or
pop
dec
daa
aam
jp
jp
add
jl
cmp
ficom
jns
xchg
int3
fsubr
jbe
enter
add
retf
sbb
in
fnstsw
int
inc
setns
es
sbb
xchg
in
push
adc
mov
mov
(bad)
mov
adc
jo
mov
cwde
sbb
add
std
ds
fnsave
rol
ss
call
and
call
fadd
xlat
and
stos
xor
pop
inc
(bad)
out
or
adc
fsubr
sub
jne
mov
cmc
jge
dec
test
hlt
and
adc
pusha
in
retf
shr
loop
lock
xchg
xor
in
or
jge
test
imul
(bad)
mov
repz
aaa
cmp
cwde
ds
lds
jmp
adc
jo
(bad)
mov
jno
jle
mov
lahf
mov
lods
xchg
addr16
push
jns
adc
adc
iret
das
mov
push
push
ins
pop
stos
or
lea
aad
sbb
xchg
in
jno
xor
scas
lds
fsubr
xor
call
cmp
xchg
dec
sbb
xchg
ret
mov
add
stos
inc
jae
cmps
inc
pop
stos
cmps
in
pop
pushf
into
dec
jae
xlat
ds
xor
stos
mov
cli
xor
hlt
mov
loop
sub
retf
aaa
inc
add
jge
dec
je
int3
and
jne
add
xchg
lods
ret
je
cmps
inc
imul
(bad)
call
xchg
daa
js
add
into
xor
dec
std
add
add
shl
or
push
push
dec
out
and
hlt
ror
das
scas
mov
das
popf
pop
jle
mov
push
or
pusha
leave
inc
movs
scas
test
jae
pushfw
sub
add
jmp
(bad)
pop
and
cmp
test
rcl
adc
dec
dec
mov
mov
jmp
push
push
jge
mov
ret
xlat
cdq
mov
sar
sbb
loopne
xchg
dec
sub
rcl
pop
cmp
dec
test
lods
jnp
dec
fcmovnbe
(bad)
jge
mov
mov
add
mov
and
inc
pop
iret
dec
inc
rol
jns
ins
das
rcr
mov
and
dec
mov
imul
mov
shr
adc
inc
test
test
aas
and
aad
sub
adc
loopne
xchg
xchg
loope
stos
mov
ins
test
cli
sbb
or
retf
movs
hlt
int
ss
or
call
mov
repnz
cmc
push
xchg
ret
sbb
leave
jns
mov
sbb
xor
bound
bound
outs
adc
push
mov
popf
sbb
fs
inc
loope
int
cwde
hlt
ret
pop
ss
inc
mov
stos
hlt
dec
lock
and
(bad)
in
cmc
in
mov
scas
xchg
push
imul
retf
xor
mov
fdivr
inc
jg
mov
ss
mov
daa
stc
inc
jmp
sub
mov
in
sbb
shl
lods
sub
in
cld
pushf
out
push
push
aad
cmp
dec
inc
test
int3
adc
and
fist
stos
sahf
scas
and
loopne
div
push
mov
cld
pusha
cmp
pop
repz
cmp
sbb
ins
movs
add
out
icebp
inc
pushf
imul
mov
mov
mov
cdq
imul
jmp
adc
mov
jmp
and
test
and
adc
sahf
pop
fiadd
xchg
nop
xlat
mov
fisttp
cs
jno
dec
loope
test
push
xchg
pop
ja
ret
outs
push
xor
mov
push
adc
lods
xchg
xchg
daa
inc
neg
sbb
jmp
retf
rcr
leave
pop
dec
iret
dec
sbb
lds
adc
jnp
aad
or
lods
in
test
jmp
out
xor
mov
xchg
aaa
into
pop
pop
push
pop
aam
call
lock
pop
jmp
xchg
sub
add
sbb
out
xchg
xchg
icebp
jno
test
dec
jl
inc
adc
push
int3
inc
cld
daa
(bad)
pop
xor
adc
test
push
es
sub
dec
adc
bnd
mov
mov
adc
jnp
and
or
shl
icebp
(bad)
or
cmp
xchg
mov
dec
popf
pop
das
and
lea
dec
inc
sub
mov
daa
neg
cmps
xor
pop
pop
in
movs
in
adc
cmc
std
imul
inc
dec
jp
pop
mov
push
inc
mov
jg
mov
xchg
test
cdq
sub
xchg
iret
icebp
loopne
mov
cli
jle
mov
and
pop
dec
retf
xchg
test
stc
ins
fisubr
ja
into
or
sub
dec
jle
test
mov
daa
ss
or
adc
mov
mov
inc
dec
mov
or
add
ja
dec
iret
sbb
sub
sti
outs
jl
dec
sub
mov
xchg
push
or
sub
js
jge
(bad)
outs
mov
push
loopne
push
dec
scas
dec
mov
cmp
lea
adc
mov
sbb
(bad)
pop
jae
lds
mov
sar
lods
sub
or
or
cdq
inc
xor
es
rcr
lods
dec
bound
data16
and
add
dec
xor
add
scas
pusha
not
dec
mov
xchg
(bad)
add
aam
adc
push
imul
mov
popf
ficomp
jns
xor
xor
lock
ret
inc
mov
and
add
lahf
mov
imul
cmps
je
mov
ds
add
pop
stos
(bad)
movs
xchg
push
jne
sti
into
fistp
mov
pop
repz
xor
add
push
add
sub
inc
jo
ret
out
fisttp
adc
stos
ds
add
fild
mov
jmp
ins
out
cmp
push
scas
test
mov
mov
mov
out
mov
push
inc
mov
xchg
cld
add
mov
pop
cmps
inc
sahf
xlat
mov
imul
jbe
and
xor
dec
mov
pop
push
sbb
(bad)
mov
xchg
(bad)
jb
inc
clc
mov
inc
sub
sub
cmp
and
dec
adc
jmp
pmaddwd
cmp
test
inc
cdq
sub
out
enter
sti
mov
sbb
cmp
aad
inc
test
in
mov
sub
loope
mov
xchg
rcr
jp
es
jo
shl
cmp
mov
ins
ja
adc
pop
in
outs
lahf
cdq
inc
mov
shl
repz
jno
ja
lods
mov
lods
(bad)
pop
jecxz
out
sbb
pop
dec
push
jg
xchg
outs
sti
imul
adc
ins
pusha
clc
mov
movs
lea
fild
(bad)
retf
jecxz
mov
add
sbb
adc
dec
push
data16
nop
lar
int3
cmp
retf
ja
and
adc
fist
cmp
ret
sti
adc
fcomip
mov
retf
mov
pop
add
sar
(bad)
aaa
lds
pop
sub
cmp
adc
inc
pop
jg
xchg
pop
xchg
pop
loop
hlt
sub
aaa
sbb
fst
(bad)
bnd
adc
movs
dec
test
and
add
and
cwde
outs
sbb
adc
mov
in
inc
lock
in
dec
stos
fwait
jns
xor
mov
mov
adc
call
dec
adc
cmp
scas
jmp
ss
orps
jge
ret
shl
pop
ret
cmp
arpl
out
add
xchg
rcr
mov
inc
sub
sar
pop
movs
or
pushf
cdq
jmp
sti
adc
xchg
gs
adc
sub
adc
pop
stos
push
fisubr
outs
cli
aaa
lods
inc
or
sbb
hlt
ins
icebp
jb
pop
mov
std
(bad)
mov
aaa
retf
jmp
xchg
jp
mov
ins
stc
xor
test
nop
mov
pop
xchg
aam
inc
sahf
pop
in
in
mov
loopne
push
cwde
ins
dec
in
mov
movs
mov
jae
xor
addr16
(bad)
fild
adc
cmp
daa
js
enter
out
and
mov
mov
lock
sahf
sub
adc
mov
inc
cmp
mov
push
jmp
push
mov
xor
and
call
fdiv
sahf
add
or
es
jmp
mov
sbb
fcomi
pop
enter
repz
mov
imul
mov
push
adc
xchg
sbb
jg
jmp
repnz
jbe
push
hlt
inc
pop
push
arpl
mov
(bad)
into
popf
out
dec
loop
sbb
inc
mov
imul
mov
pop
aas
loopne
inc
sub
fisttp
lea
(bad)
mov
push
push
aaa
jo
mov
or
xchg
xor
dec
test
dec
xlat
das
and
loope
adc
jg
mov
std
rcr
fcom
add
xchg
xor
js
add
jge
pop
cwde
iret
retf
cmp
das
fs
nop
sbb
add
cdq
cmps
in
fdiv
sbb
xor
push
shr
(bad)
aad
gs
outs
sti
mov
repnz
xchg
rcl
scas
or
les
push
popa
cmp
jno
sub
aad
fs
jge
frstor
adc
jbe
sub
popa
icebp
xchg
add
mov
inc
inc
jne
out
movs
push
nop
in
int
out
pusha
pop
scas
jae
aam
sub
push
push
daa
inc
cmp
mov
pop
mov
push
in
or
std
enter
fsubr
clc
jecxz
lods
ja
add
in
ins
jecxz
xor
xchg
out
ror
shl
ss
dec
out
mov
ins
stos
int
sub
jp
xor
fnstsw
inc
mov
rcr
xor
outs
leave
(bad)
lock
mov
lds
popa
jmp
mov
stc
and
jecxz
out
iret
fwait
aas
add
mov
push
rcl
xor
(bad)
pop
daa
xchg
adc
popf
int3
retf
sub
mov
push
(bad)
fisttp
sbb
mov
in
call
add
clc
scas
mov
movs
cmp
sub
mov
pop
xchg
adc
shr
jns
(bad)
(bad)
lea
mov
mov
ins
cmp
arpl
mov
mov
or
and
dec
pop
(bad)
mov
scas
daa
fnsave
xor
sbb
in
lahf
sbb
dec
jne
jbe
(bad)
(bad)
and
jmp
jne
loope
add
rcr
stos
xor
ins
xchg
mov
xor
pushf
xor
ret
aas
mov
icebp
push
gs
loopne
dec
jl
pcmpgtw
sub
sbb
ins
repz
sbb
enter
sbb
dec
jno
and
push
cmp
jae
sbb
xor
jnp
cdq
repnz
or
nop
(bad)
je
mov
xor
pop
pushf
jg
pop
mov
fcomp
xor
add
cli
push
jp
outs
mov
fldenv
push
or
pop
test
outs
nop
outs
pop
enter
jle
cs
js
and
mov
es
cli
aad
inc
retf
mov
or
fwait
xlat
dec
cmp
sahf
and
nop
push
mov
cmps
push
jb
mov
xchg
fidiv
cmp
and
mov
iret
nop
xchg
movs
jae
jae
or
adc
ins
push
adc
mov
fild
aaa
test
lock
xchg
ror
cmp
or
push
ffreep
fistp
lods
int
ror
add
aas
push
dec
and
push
je
mov
pop
fnstcw
push
sahf
jmp
adc
xchg
adc
ret
add
ds
mov
jmp
sbb
and
rol
lods
daa
data16
xchg
mov
or
lds
movs
cmp
sbb
push
retf
mov
out
dec
sbb
not
jmp
fwait
jmp
sub
adc
cld
lock
test
mov
xor
les
cmp
or
push
push
div
push
sub
mov
xor
lds
mov
int
jnp
jmp
(bad)
retf
xchg
xchg
mov
jns
inc
push
repz
retf
ret
sub
inc
js
add
dec
daa
movs
fwait
out
sub
mov
adc
je
fdiv
and
dec
(bad)
lock
push
inc
lods
jnp
add
(bad)
retf
into
xchg
sub
pop
and
xchg
push
cli
jo
jae
loope
out
scas
ja
call
out
cmp
lahf
shl
xchg
xor
inc
adc
pop
pushf
mov
jb
rcr
push
mov
les
cmp
scas
jge
int3
pop
in
or
test
leave
xchg
ret
jnp
iret
xlat
loop
push
stos
or
dec
adc
mov
fild
xor
call
dec
and
out
xor
ss
pop
ss
pop
frstor
loope
mov
and
jno
pop
add
jne
jbe
dec
dec
mov
in
test
in
fild
dec
retf
pop
pop
mov
inc
inc
cmp
cwde
xchg
hlt
dec
xor
dec
test
pop
cdq
shr
or
jle
mov
jg
pop
lods
jnp
adc
(bad)
xchg
adc
movs
pop
jl
inc
xor
mov
jmp
fisubr
xor
adc
push
add
mov
dec
test
(bad)
not
mov
js
fcom
ins
push
ror
call
jmp
xchg
xchg
cdq
test
retf
xor
repnz
mov
adc
push
fwait
inc
xor
cmps
add
mov
mov
fld
mov
imul
pusha
pop
sti
sti
in
dec
cmp
mov
push
pop
or
clc
mov
inc
mov
pop
fcomip
dec
inc
cmp
in
jo
push
xchg
shr
fisub
xor
pop
stc
loopne
add
test
push
sub
dec
test
clc
int
bound
or
mov
outs
push
ret
push
lock
loopne
push
jmp
push
imul
repnz
jmp
shl
fstp
repz
popf
jecxz
fs
imul
push
sub
ja
fisubr
and
test
sbb
iret
mov
das
ss
pop
push
xor
cmps
int3
mov
repz
call
mov
faddp
or
xchg
cmp
div
loop
popa
stc
and
sbb
cmp
lds
dec
push
repnz
cwde
or
pop
sub
outs
fwait
out
mov
sub
lods
ins
pop
mov
mov
fidiv
add
mov
jns
out
push
mov
push
js
aad
mov
adc
retf
push
and
adc
jp
jle
iret
sbb
cmp
cmc
mov
push
fcom
fisttp
push
push
imul
rcr
mov
sub
dec
xchg
jne
cmp
in
inc
mov
push
sub
jne
inc
loop
sbb
mov
(bad)
sahf
fisub
sbb
cwde
xor
cs
xchg
movs
ins
shr
push
and
movs
add
in
xchg
in
scas
or
add
cmp
pop
shl
mov
das
fidiv
xchg
fldl2e
into
sahf
jge
addr16
in
in
(bad)
rcr
fidiv
bnd
mov
push
pop
outs
push
lahf
outs
inc
and
push
sub
fstp
jmp
stos
mov
pop
jmp
mov
or
outs
pop
mov
and
out
mov
dec
pop
(bad)
scas
pop
sbb
or
aam
(bad)
nop
cmp
mov
ret
test
mov
pop
mov
sub
loope
mov
retf
mov
cmp
or
mov
xor
enter
push
movs
push
repz
clc
mov
adc
pop
cs
in
jl
imul
mov
adc
les
cmp
out
dec
in
dec
jbe
dec
bts
mov
push
popa
fwait
push
popf
cmc
push
jne
int
mov
add
stos
pop
mov
fsub
mov
jg
ds
sub
aam
ins
add
imul
test
loopne
add
ins
mov
add
pop
fisttp
daa
mov
ret
push
adc
push
fcomp
ja
cmps
pop
icebp
sub
push
aaa
ficomp
jle
data16
jae
pop
jb
mov
outs
xlat
fsub
gs
pop
fistp
dec
(bad)
cmp
unpcklps
mov
mov
push
push
dec
mov
add
outs
xor
pushf
cmp
fstp
dec
or
in
les
rcr
mov
daa
dec
xchg
mov
aaa
jne
push
xor
jo
test
mov
push
mov
sbb
cmp
imul
in
xchg
xor
jmp
add
call
pop
adc
fmul
shl
es
cmc
inc
cmps
repz
pop
int
out
push
and
push
sub
push
outs
out
cmc
push
call
pop
xor
jl
xchg
shl
inc
push
repz
sbb
fs
ins
dec
inc
pushf
shr
and
pop
data16
mov
cli
fdivr
push
je
inc
fisubr
jle
mov
test
leave
mov
cwde
or
and
or
and
or
or
mov
popa
mov
mov
(bad)
or
or
int
lea
fs
jno
add
adc
mov
push
jns
push
pop
or
scas
xchg
test
sub
mov
xchg
cmc
add
mov
jle
std
mov
jle
add
shl
dec
dec
scas
repz
jns
dec
retf
sbb
rcl
pop
jge
repnz
dec
repnz
hlt
ds
jge
movd
mov
icebp
dec
fyl2x
cmps
sub
loopne
not
mov
push
inc
and
and
in
gs
and
mov
xchg
or
push
fs
repnz
fistp
stc
dec
xor
jne
(bad)
js
add
mov
outs
cmp
jb
mov
cmp
es
sbb
mov
test
scas
jno
imul
pop
inc
push
jae
xor
or
jmp
test
in
xchg
cmps
lods
leave
setg
cmp
rcl
mov
cmp
fst
ja
xor
cmc
test
out
les
inc
jmp
adc
pop
movs
add
fnstsw
jo
mov
adc
mov
setge
xchg
add
stos
nop
pop
mov
adc
call
into
imul
in
jnp
pop
and
push
mov
sti
das
in
xor
stc
cmc
mov
xchg
pusha
mov
leave
cmp
cmp
int3
dec
call
inc
inc
or
sub
cmp
sar
or
and
sbb
fnstsw
lods
ss
shr
cmp
int
mov
mov
or
adc
dec
(bad)
pusha
adc
push
pop
fsubr
leave
ins
jl
cmps
lods
sbb
nop
jno
xchg
cmp
add
(bad)
loope
test
not
outs
xchg
pop
mov
mov
bound
rcl
sub
iret
and
cmc
retf
mov
movs
scas
or
jnp
jb
icebp
in
fnstenv
jbe
ror
cwde
js
or
retf
inc
call
cdq
mov
mov
gs
jecxz
pop
mov
xor
mov
ss
arpl
push
mov
mov
pop
xor
cmp
lahf
push
xchg
daa
dec
mov
aas
scas
sahf
sar
push
sti
xor
jmp
pop
sub
in
sahf
fild
inc
fisttp
jne
aam
(bad)
pop
pop
or
xchg
and
je
xchg
stc
shr
xchg
outs
pop
xchg
jg
pop
out
adc
mov
div
jle
outs
mov
sbb
pop
push
fbstp
push
sbb
lods
jo
call
sahf
xchg
popf
outs
fnstcw
sbb
scas
xor
pop
ins
mov
fiadd
jns
fld
xlat
pop
aaa
jne
jns
inc
jmp
and
sbb
add
ror
shl
in
loope
cmps
or
or
je
es
test
loopne
push
xor
(bad)
jp
aam
inc
jmp
fldenv
retf
sub
adc
adc
popa
sub
lahf
or
daa
push
ds
and
jmp
retf
(bad)
hlt
mov
and
xchg
ret
jmp
sbb
mov
pop
cdq
das
adc
retf
or
mov
pop
jge
jbe
imul
js
stc
inc
mov
into
sub
xor
cli
sbb
ds
add
xlat
mov
add
aas
push
test
cmps
in
aad
call
cdq
xor
or
call
shl
test
iret
nop
or
sahf
rcr
push
adc
hlt
inc
dec
sub
enter
getsec
jae
xor
nop
mov
dec
(bad)
std
inc
and
xchg
call
loopne
push
and
call
mov
into
out
cdq
lahf
push
(bad)
sbb
and
or
in
jno
loop
xchg
pop
out
gs
shl
popf
dec
cmc
sbb
dec
add
jl
xor
pop
xchg
shl
movs
retf
add
loopne
jecxz
ds
add
xchg
mov
test
mov
mov
les
(bad)
out
outs
mov
xor
ror
push
js
pop
out
push
add
cmc
into
pop
es
sub
js
in
fdiv
push
xchg
popa
mov
push
lock
mov
mov
shr
aam
leave
pop
lds
xchg
(bad)
mov
jmp
sbb
xor
ffreep
pushf
out
sbb
mov
mov
or
cvtps2pd
sub
push
push
jne
mov
(bad)
iret
mov
das
pop
mov
sbb
(bad)
push
cmp
xchg
mov
les
(bad)
in
lods
push
adc
int3
or
aam
imul
cs
lock
fdivr
(bad)
(bad)
subps
cmp
xor
outs
jp
ins
bound
inc
xchg
or
nop
not
inc
inc
(bad)
pop
pop
out
xchg
lds
repnz
cli
lds
adc
addr16
popa
(bad)
sbb
pop
pop
mov
inc
fwait
xor
or
mov
jae
jmp
pushf
ins
fdivr
cmp
imul
and
aam
jae
jno
gs
mov
rcr
cmp
and
mov
into
gs
call
and
test
and
lds
or
ret
test
ins
jle
ret
sti
daa
jmp
pop
jns
inc
lods
mov
and
icebp
dec
push
test
fstp
data16
cmp
add
lahf
ds
mov
push
daa
xor
out
adc
mov
call
mov
movs
and
mov
fidivr
ins
add
les
mov
jno
jmp
add
push
sub
lods
ins
movs
pop
cld
bswap
popa
scas
test
int3
pop
or
data16
test
add
sbb
mov
(bad)
pop
ror
pop
call
adc
dec
push
retf
jle
pop
push
(bad)
into
mov
mov
sbb
out
jne
pushf
mov
retf
jle
inc
pop
mov
dec
(bad)
mov
shl
mov
pop
and
mov
lods
mov
jl
ja
fdivr
jae
and
mov
es
into
(bad)
mov
push
call
jg
imul
jb
cmp
inc
inc
in
popa
je
pop
ret
imul
scas
stos
in
dec
jae
out
jo
nop
out
mov
je
retf
cwde
pop
mov
inc
das
cmps
cmp
mov
mov
into
fnstcw
daa
xor
jmp
adc
dec
sbb
inc
and
xchg
xchg
sub
pop
pushf
adc
in
or
push
aad
push
lahf
test
mov
es
sbb
ja
jae
xchg
popa
mov
adc
imul
push
(bad)
jge
xchg
nop
test
dec
mov
(bad)
pop
(bad)
mul
jmp
inc
test
or
in
xchg
pop
or
leave
mov
movs
cli
jb
outs
cli
sti
fs
pop
leave
fiadd
clc
out
das
adc
hlt
out
mov
push
xor
add
lods
(bad)
and
js
cld
es
push
or
mov
xchg
mov
jmp
outs
xchg
(bad)
jbe
fld
cmp
and
cmp
pop
cmps
xor
inc
(bad)
bound
push
mov
daa
pop
and
cmp
ret
mov
out
jle
cmc
fsubr
gs
sub
iret
cld
loope
inc
add
ret
mov
or
cmp
pop
and
ins
mov
fild
ins
mov
aaa
push
movs
jp
fcomp
fimul
mov
mov
jmp
add
hlt
(bad)
adc
fmul
stc
cwde
or
sbb
mov
lods
ja
inc
lahf
sahf
mov
fldenv
xor
call
data16
or
dec
or
push
comiss
je
inc
dec
cmp
sub
jo
jne
or
scas
xor
rol
loop
sbb
shl
daa
jmp
inc
adc
aam
and
cmps
inc
in
and
pop
test
mov
fadd
mov
addr16
adc
pop
pop
inc
cwde
sbb
in
pop
push
cmp
hlt
stos
pop
inc
dec
mov
cmp
je
shl
add
push
mov
rcr
std
out
shl
cmp
aaa
mov
int
jle
cwde
mov
pop
xchg
dec
repz
inc
jmp
pop
leave
dec
inc
mov
shr
cmp
push
mov
pop
mov
cwde
xchg
or
or
scas
div
jo
jno
jmp
in
lds
out
lods
aam
in
mov
lods
jmp
sbb
sbb
(bad)
ficom
test
jbe
pop
fisubr
adc
mov
sbb
fst
into
addr16
pop
pushf
popf
ficomp
lods
es
jp
add
push
push
lods
pop
dec
out
adc
mov
das
ffreep
inc
cmp
movs
jns
cmp
add
pop
div
test
int
add
fadd
test
fadd
movs
and
arpl
retf
xchg
dec
(bad)
mov
icebp
cmp
movs
rcl
push
pop
movs
xchg
repnz
mov
mov
fcmovnbe
(bad)
movmskps
xor
pop
cmp
pop
xchg
in
in
xchg
test
test
and
push
sub
fs
fcmove
mov
xor
adc
or
inc
push
loopne
push
adc
inc
iret
xor
xchg
popa
shl
ret
outs
in
mov
cmps
(bad)
xchg
retf
inc
mov
inc
sbb
and
das
xchg
shl
sbb
push
test
loop
mov
dec
pop
pop
push
jge
or
iret
dec
mov
add
aaa
data16
fist
xchg
cmp
add
mov
repnz
arpl
in
iret
aam
mov
sbb
sar
(bad)
nop
jecxz
add
movs
lock
lahf
imul
sub
inc
ds
pop
fstp
mov
add
xchg
pushf
leave
push
xor
pop
or
idiv
inc
sub
clc
mov
test
imul
xor
stc
stos
fs
sbb
pushf
sysexit
(bad)
sar
out
mov
cli
cmp
add
or
mov
or
sbb
ja
das
xchg
call
pop
or
imul
(bad)
jns
dec
lahf
pop
add
(bad)
jp
stc
lea
in
inc
sbb
cmp
cld
popa
mov
jmp
(bad)
sub
xchg
xchg
das
cs
sbb
sbb
xor
sub
push
aaa
sbb
mov
aas
or
es
mov
test
aaa
xchg
test
mov
mov
(bad)
adc
popf
xor
retf
sub
jns
mov
pop
mov
ret
xchg
push
bound
add
stc
xlat
cdq
inc
inc
dec
stos
dec
mov
ret
xacquire
fwait
mov
rol
mov
xchg
loop
push
repnz
es
dec
push
mul
or
xchg
addr16
icebp
iret
sbb
ds
in
cmps
xchg
lahf
shr
cli
mov
in
pop
adc
jmp
nop
xchg
in
or
jmp
stos
mov
fld
mov
pop
jecxz
out
in
fsub
mov
push
addr16
cmc
mov
and
inc
dec
lods
ret
repz
cmps
not
retf
ins
mov
jmp
add
mov
(bad)
push
xlat
ins
div
dec
dec
cli
loope
ror
outs
shl
cmp
jne
adc
jg
pop
icebp
adc
rol
add
arpl
adc
arpl
jp
adc
push
out
pushf
outs
push
or
in
xchg
pop
mov
(bad)
jmp
adc
addr16
ror
popa
mov
call
xor
std
inc
mov
std
and
repz
jmp
in
dec
jecxz
call
in
push
jg
pushw
(bad)
inc
push
sub
and
(bad)
xchg
repz
pop
xchg
push
fld
or
retf
fidivr
cmp
fcmovb
inc
mov
jmp
jg
add
es
adc
fst
dec
stos
push
arpl
(bad)
das
pop
mov
pop
lea
pop
bndldx
mov
xor
xchg
int
jmp
jno
adc
leave
imul
xor
pushf
jp
shr
push
jge
fcom
mov
clc
jae
shl
mov
out
or
and
or
sub
mov
gs
mov
xchg
or
add
(bad)
sysret
mov
test
ds
and
lods
jae
pop
ds
xor
cmp
outs
ins
sbb
xor
loope
shl
or
movs
inc
mov
jnp
imul
hlt
rcr
iret
or
cwde
lods
cld
pop
and
inc
dec
in
sar
inc
adc
mov
cdq
and
ss
adc
mov
pop
sub
pop
push
inc
jae
pop
mov
test
mov
add
ins
jp
xor
cld
add
enter
mov
(bad)
aad
mov
stos
sbb
movs
add
push
in
in
push
popa
mov
jge
and
sub
icebp
mov
popa
in
dec
dec
pop
pushf
cld
push
jecxz
or
rcl
aad
sbb
sahf
es
in
fbstp
aam
push
cdq
out
hlt
into
sub
movs
sbb
push
hlt
cmp
push
and
cmp
mov
dec
mov
sbb
mov
pop
cmps
dec
fstp
pop
mov
push
xchg
stc
jae
aaa
inc
jle
ins
loop
leave
mov
jb
out
fcmove
cmps
rcl
or
lods
push
loope
dec
mov
movs
je
cmps
fwait
ss
jbe
scas
ins
or
sub
movs
aas
mov
inc
jae
xchg
int3
push
test
inc
jle
or
lods
inc
and
dec
lods
xchg
pop
push
and
and
lea
adc
xchg
mov
sub
sar
or
in
sti
sbb
imul
aaa
and
mov
xchg
retf
retf
xor
ret
pushf
pop
push
xor
and
ror
add
js
pushf
in
xchg
(bad)
and
pop
ja
lods
jl
jae
int
or
aad
sbb
mov
add
popf
sub
xchg
fwait
mov
mul
ret
js
xchg
jmp
dec
das
mov
ins
xchg
popf
mov
aam
mov
rol
and
int
pop
pushf
jg
ins
inc
add
or
jbe
js
cmc
inc
sub
lods
out
daa
(bad)
in
jnp
ret
adc
into
pushf
pop
cwde
or
pop
push
push
cmp
jp
fld
dec
shl
or
push
ficom
xchg
rcl
movs
push
js
pop
push
jb
ds
fnstcw
xchg
ret
or
pusha
jbe
ss
mov
push
lock
imul
sahf
sbb
movs
outs
rol
aas
add
ficomp
addr16
lods
mov
clc
dec
jecxz
daa
or
iret
sub
or
aaa
movs
and
cmc
mov
icebp
xor
mov
xchg
sti
hlt
in
mov
sti
pop
js
jns
js
sub
sub
fstp
test
xchg
pusha
ins
and
bnd
mov
dec
dec
mul
hlt
fisub
shr
popf
aaa
imul
jb
out
enter
xchg
xor
adc
cmp
jnp
mov
popf
scas
mov
sbb
ins
mov
dec
aam
push
lods
sub
sbb
sar
pushf
push
jg
and
lods
clc
mov
sbb
inc
or
or
jne
sub
add
popa
mov
sbb
xchg
pushf
retf
daa
add
mov
inc
pusha
mov
outs
mov
cmp
ja
icebp
mov
adc
shl
mov
cmp
fcom
sti
sbb
repz
sbb
inc
mul
ja
cmp
jl
retf
fidiv
mov
jmp
xchg
outs
loope
jmp
call
sub
sub
outs
push
inc
pop
scas
out
ror
inc
xchg
xchg
xor
leave
jge
repnz
cwde
lahf
repz
in
push
or
stos
inc
dec
mov
das
cmp
jb
pop
jbe
call
push
jmp
mov
inc
imul
pop
inc
pop
loope
or
cmp
adc
mov
in
pop
jno
xlat
jecxz
jmp
lods
mov
cdq
mov
lods
jl
lea
sub
test
fucomip
pop
mov
xor
xchg
xchg
inc
int3
mov
mov
es
clc
inc
or
call
mov
xchg
ror
ja
jae
ret
and
and
jmp
sbb
cli
push
dec
test
pop
sub
jb
fldl2e
sub
es
ins
push
mov
adc
xlat
xchg
jge
push
(bad)
pop
jns
jle
jmp
and
push
popf
movs
fcom
mov
pop
mov
hlt
loop
inc
xor
clc
jg
out
enter
ins
scas
mov
xchg
retf
cmp
lods
sbb
xor
mov
xor
pop
add
fstp
xor
dec
fiadd
mov
outs
shl
xor
jmp
pushf
and
fidivr
loope
jmp
xlat
movs
xor
and
xchg
sbb
fdivp
mov
adc
cmp
rcr
adc
jge
mov
add
imul
jb
arpl
mov
mov
rep
outs
outs
outs
outs
cmp
cmp
jbe
jp
retf
cs
sahf
mov
movmskps
mov
int
xchg
lahf
jne
or
inc
push
into
iret
add
(bad)
(bad)
push
jp
jae
inc
cdq
push
mov
sub
and
add
mov
mov
shl
pushf
leave
movs
test
mov
pop
xor
mov
inc
jg
cs
dec
js
cmps
ror
mov
in
aam
sar
sub
inc
fcom
fucomip
in
jae
pop
fs
mov
dec
mov
xor
xchg
cmp
movs
das
jecxz
xor
mov
inc
ins
xor
adc
mov
arpl
jbe
cs
pushf
call
push
(bad)
xchg
data16
jb
xor
mov
xchg
jge
mov
rcr
out
xor
and
stos
jle
nop
mov
sub
nop
mov
dec
repz
sbb
cmp
test
or
inc
and
dec
jae
add
fnstenv
imul
test
push
and
je
mov
jg
repnz
push
xchg
cs
inc
stos
int3
mov
pop
and
(bad)
ins
lahf
push
add
enter
push
inc
sbb
mov
ja
and
mov
pop
ret
or
mov
inc
and
test
sar
ds
push
jl
jmp
pop
and
add
ss
mov
aad
ror
in
cwde
loop
xchg
into
call
mov
jecxz
fbld
cmps
mov
inc
push
cmp
pop
inc
leave
mov
ss
scas
loope
dec
mov
mov
xlat
rol
pusha
(bad)
bound
dec
mov
pusha
xchg
es
sub
push
xor
xchg
daa
jnp
aas
scas
add
xor
fcmovb
sub
jne
std
int3
mov
aad
enter
xchg
push
mov
dec
movs
cmp
mov
sub
je
pop
imul
mov
mov
cmps
rcl
adc
stos
add
inc
sub
sub
out
in
out
aam
call
test
ins
adc
cmps
aad
in
nop
jmp
jbe
xor
shl
pusha
jbe
sbb
jp
les
test
sub
fcomp
test
add
sbb
fcom
icebp
scas
js
and
mov
call
test
push
stos
pop
cs
cmc
neg
not
sub
das
jnp
ins
jp
sub
xchg
mov
mov
ja
xor
sbb
ror
repz
mov
pop
ficom
cmp
clc
mov
xchg
sbb
call
mov
fstp
pop
dec
push
adc
pop
push
inc
dec
pop
xchg
mov
mov
call
test
sub
sbb
jo
outs
add
xchg
cdq
sub
push
retf
arpl
xor
dec
sbb
push
cmp
cdq
mov
(bad)
pop
mov
or
sub
sbb
and
fwait
xor
add
xchg
loopne
icebp
ins
inc
aaa
jmp
jbe
fwait
adc
jbe
pop
gs
daa
loope
mov
mul
jae
mov
mov
xchg
enter
mov
cmp
loope
pop
or
out
and
call
lds
xchg
(bad)
inc
pop
mov
push
and
pop
ret
ins
push
mov
test
(bad)
mov
je
mov
les
daa
mov
cmc
cmps
ret
jl
push
sub
(bad)
frstor
sub
cmp
push
mov
inc
inc
sbb
enter
fist
stc
cli
out
jne
cmc
inc
and
cwde
mov
cmp
xchg
fdiv
ret
stc
and
test
stos
sub
cmps
dec
push
lock
xchg
outs
mov
mov
xchg
(bad)
jmp
dec
and
push
mov
jae
test
sahf
mov
mov
mov
(bad)
push
cwde
call
xchg
stc
imul
repz
or
(bad)
xor
mov
xor
aad
fiadd
mov
mov
pop
push
mov
adc
ins
ret
xchg
stc
pop
and
fs
jg
dec
ret
pop
pop
cmp
adc
cmp
inc
int3
mov
pop
fwait
movq
fistp
repnz
out
and
inc
push
test
inc
add
sbb
and
enter
sets
adc
push
out
pop
xor
leave
ret
ror
and
inc
call
mov
and
jbe
mov
adc
dec
add
and
ds
jb
mov
(bad)
mov
xchg
scas
clc
sub
push
data16
and
sub
fist
cs
daa
mul
adc
test
scas
add
(bad)
mov
add
inc
cmp
pop
lods
inc
push
aad
stos
cdq
retf
jne
pop
in
mov
pop
cmp
mov
pop
dec
paddusw
and
retf
pop
xor
call
mov
in
cmp
pop
adc
mov
sbb
sahf
ins
cmp
inc
idiv
je
pop
cmp
scas
fs
retf
xchg
test
push
mov
gs
sbb
rol
sbb
xchg
adc
or
dec
mov
pop
aam
add
stos
loope
adc
and
scas
pop
push
test
in
mov
ins
stos
xor
lds
jg
loope
xor
fmul
xchg
push
xor
outs
fidivr
cmp
bound
jle
inc
xchg
mov
jbe
push
mov
mov
retf
jae
stc
fidiv
cmp
pop
fisubr
dec
in
in
xor
retf
cli
(bad)
out
outs
cmps
sub
mov
mov
ret
inc
jle
out
mov
xor
ds
inc
or
cmp
mov
cmp
jae
cdq
xor
jp
mov
mov
cld
mov
out
add
cmp
xor
or
push
leave
and
xor
pop
and
adc
pop
les
cli
mov
inc
test
mov
and
sahf
aas
into
xchg
das
cmp
sbb
mov
aas
cdq
dec
cmp
push
ds
add
xchg
xchg
je
ret
push
cmp
push
xor
cdq
jge
aas
and
ret
sub
push
sub
mov
or
js
enter
outs
mov
ficom
inc
mov
inc
sbb
cwde
fxch
popf
in
and
mov
and
movs
mov
cdq
imul
cwde
call
dec
and
xor
inc
imul
or
popf
retf
and
cmps
movs
shl
ins
sub
aaa
mov
sti
pop
fsubr
mov
lods
xor
mov
(bad)
fxch
in
bound
dec
les
push
xor
movs
lahf
or
or
xor
jmp
dec
pop
pop
fistp
js
mov
add
adc
inc
out
stc
adc
cmps
and
jnp
out
or
rcl
pop
call
sti
push
pushf
(bad)
sub
cli
push
mov
sub
bound
inc
push
mov
pop
mov
sub
mov
ja
mov
sub
pop
sub
mov
int3
mov
loope
xchg
pop
stos
pop
xchg
jb
shl
dec
stos
and
sar
scas
pop
jmp
mov
mov
or
xchg
fwait
jmp
lea
fadd
sbb
int
sub
xchg
mov
pop
mov
inc
addr16
pop
jecxz
data16
adc
mov
ss
mov
gs
hlt
inc
mov
cmps
inc
or
mov
in
cdq
imul
lock
loop
outs
dec
xchg
inc
adc
fwait
inc
xor
pop
jno
pop
pop
inc
out
cmp
push
nop
test
lock
ja
(bad)
stc
mov
jnp
add
mov
xor
ja
add
fcmovnbe
lods
mov
(bad)
leave
mov
sub
add
das
push
push
mov
cmc
sar
mov
or
js
fwait
push
xchg
xor
pop
pushf
add
and
mov
imul
aad
sti
cld
xlat
mov
fsubr
(bad)
nop
mov
jae
ss
iret
(bad)
push
call
imul
jle
(bad)
aad
add
mov
mov
addr16
pop
lahf
and
inc
data16
outs
enter
pop
cli
and
inc
shl
in
add
dec
mov
sub
and
push
sbb
dec
jno
pop
scas
xor
or
ror
and
(bad)
sub
xlat
popf
jle
push
xor
or
test
jmp
pop
add
and
pop
rol
dec
loopne
inc
add
mov
push
jbe
sub
hlt
jl
shl
outs
cmp
jno
mov
stos
jbe
xchg
enter
pushf
imul
test
and
mov
out
loopne
inc
inc
sbb
ret
rcr
xlat
call
hlt
mov
and
push
cmc
xchg
sahf
shl
add
int
loop
or
cwde
lods
pop
cmp
cmp
pop
adc
cmp
movs
jmp
fsub
jl
movs
fwait
in
(bad)
rcr
pop
sti
and
pop
inc
cmp
jmp
push
sub
adc
pop
imul
and
sub
(bad)
es
pop
out
fadd
call
mov
sbb
sbb
xchg
std
(bad)
out
dec
push
sub
int
and
inc
in
and
mov
cmps
std
pop
fisttp
pop
and
pushf
and
scas
jmp
pop
cli
mov
mov
inc
or
pusha
das
mov
xchg
mov
repnz
in
mov
xchg
pop
adc
sahf
xchg
sar
add
inc
(bad)
xchg
push
adc
ror
cli
pop
sbb
lds
ss
or
outs
pop
push
shl
inc
js
pop
mov
test
cmp
dec
in
icebp
out
not
fild
xor
add
dec
cwde
in
add
cli
xchg
xor
mov
sub
pop
stos
loopne
sub
cmp
cmp
mov
addr16
xchg
xor
inc
push
dec
or
xor
in
enter
pop
retf
pop
dec
std
(bad)
pusha
daa
mov
(bad)
xlat
sub
hlt
outs
cwde
movs
psubusw
cmp
push
inc
ins
sbb
add
sub
xlat
repz
push
scas
pushf
cmps
sbb
cmp
push
pushf
aaa
ja
or
jo
inc
adc
add
jp
fisubr
arpl
xor
and
faddp
jge
push
mov
mov
and
arpl
inc
(bad)
fld
gs
inc
addr16
test
cmp
and
test
lods
inc
xchg
ret
addr16
add
dec
in
mov
out
jmp
outs
into
lods
xor
test
out
lahf
stc
in
add
xor
cmp
jae
push
sbb
test
xlat
popf
icebp
cmc
call
mov
imul
in
sbb
enter
arpl
xor
in
fisttp
call
pop
mov
inc
inc
shl
xor
lods
xlat
push
retf
xor
movs
sar
xchg
add
jg
(bad)
mov
adc
dec
icebp
callw
retf
dec
dec
cwde
mov
fdiv
mov
cli
int
leave
mov
in
outs
sub
es
push
or
jp
sbb
push
icebp
popa
data16
sti
jmp
pop
mov
cwde
mov
add
out
fsubr
call
fistp
mov
ins
nop
cmp
inc
sbb
call
aam
ins
jecxz
out
cmp
xchg
mov
xor
mov
or
jmp
(bad)
loope
stc
or
enter
and
(bad)
sbb
jno
mov
inc
mov
push
in
mov
cmps
xchg
or
mov
sbb
add
lods
div
pop
in
retf
fwait
cld
pop
out
push
nop
push
les
es
or
jo
mov
lock
imul
sti
dec
leave
add
pop
jb
lds
aam
(bad)
aad
dec
fidiv
xor
mov
sbb
ss
(bad)
arpl
add
lock
or
inc
stos
lahf
jbe
and
push
sbb
cmp
pusha
aas
add
mov
sar
add
adc
call
les
push
aas
pop
ret
dec
je
xchg
jl
mov
mov
mov
retf
icebp
jg
mov
push
mov
push
call
push
mov
pop
(bad)
sub
xchg
pushf
dec
ror
inc
jl
mov
jmp
retf
je
lds
cmp
or
sub
push
xchg
pop
(bad)
cmps
pop
cmps
and
imul
pop
lea
out
and
or
out
and
and
jo
test
ja
inc
cli
adc
jne
xchg
arpl
imul
lahf
aam
daa
pop
xlat
inc
jg
xor
lds
popf
pushf
lahf
and
or
sahf
adc
sub
push
in
sti
pop
dec
das
pop
push
mov
mov
add
sbb
inc
addr16
inc
shl
pop
jmp
repz
or
xor
sub
mov
adc
js
lahf
or
push
out
ins
adc
dec
je
dec
lds
add
pop
inc
(bad)
jmp
xlat
cmp
and
sub
cli
and
ja
pop
adc
in
pop
xchg
mov
add
aaa
and
mov
outs
and
and
ja
jge
xor
inc
int
dec
aam
jb
jp
push
mov
je
cdq
and
mov
mov
ins
and
fwait
jo
adc
test
pop
out
popf
stos
and
sub
push
icebp
ret
daa
mov
mov
lock
test
stc
inc
cdq
xchg
jecxz
dec
cs
and
jmp
leave
jecxz
lahf
mov
or
inc
and
out
add
or
retf
mov
cmp
or
mul
push
jns
jecxz
clc
jg
aam
pop
neg
cmp
jg
mov
cmp
cdq
repnz
adc
add
test
out
inc
or
xor
cmp
or
jecxz
pusha
sub
xor
movs
add
mov
mov
dec
adc
shr
lock
jmp
repnz
loopne
mov
add
jne
iret
add
push
xchg
and
add
imul
pop
inc
jne
es
mov
push
(bad)
movs
mov
test
inc
rol
mov
addr16
pop
arpl
daa
jbe
outs
jmp
push
mov
cli
adc
adc
push
pop
pop
inc
mov
push
push
add
and
loopne
pop
out
ins
jns
add
dec
mov
push
mov
es
jae
mov
mov
mov
dec
gs
and
sbb
test
cmp
or
push
add
cwde
jp
dec
mov
into
fsubr
int3
cmps
xor
nop
mov
test
retf
xor
adc
gs
xchg
in
cmp
or
cmp
jle
push
pop
mov
cmp
les
nop
sub
pop
gs
dec
sub
ins
leave
pop
add
cmp
xchg
in
shr
add
sti
jmp
mov
int3
ds
shr
adc
and
push
cmp
push
jb
(bad)
cmps
fnstenv
add
clc
sub
cmp
bound
sub
jae
lds
es
ins
sbb
inc
push
xchg
add
dec
out
mov
or
inc
fld
shl
adc
in
inc
inc
stc
rol
mov
dec
nop
mov
jge
xor
add
test
imul
stc
jl
jle
mov
push
retf
fnstcw
push
cmp
mov
dec
adc
push
push
add
adc
rcl
retf
int
rcr
loop
(bad)
outs
xchg
and
sbb
adc
into
jbe
in
fwait
add
cmps
xor
lahf
aad
mov
(bad)
mov
sbb
jmp
loopne
dec
jmp
jge
loope
jae
vpinsrw
pushf
dec
mov
add
scas
or
pop
ss
and
or
pop
into
sbb
inc
dec
in
sub
pop
jg
mov
mov
cwde
cld
pushf
test
sahf
add
mov
mov
pushf
popf
push
(bad)
inc
or
cmp
ficom
xchg
mov
dec
retf
mov
xchg
add
adc
pop
fcmovne
in
test
add
clc
xor
pop
ds
push
sub
jne
(bad)
jge
cmp
push
xor
jns
sub
jl
cmp
jns
adc
xor
sub
ja
into
pop
shr
repnz
pop
mov
arpl
jle
mov
mov
lock
movs
mov
lahf
add
enter
push
and
ins
lds
test
xchg
xor
js
mov
out
jl
mov
call
sbb
jnp
fmul
sub
addr16
rol
fsub
nop
and
rol
jl
sub
jne
xor
cmps
loope
test
sub
mov
jno
test
and
icebp
ins
jo
fnsave
pop
test
test
jbe
or
fsubr
add
mov
stos
adc
lds
xchg
ins
sbb
imul
mov
rcr
popf
push
cwde
dec
les
fs
xor
add
test
and
cmp
xchg
out
je
sbb
inc
shr
cwde
push
movs
icebp
jge
push
mov
pop
js
cdq
es
retf
pop
fcom
add
inc
pop
mov
jnp
push
fist
push
or
inc
and
enter
ds
addr16
test
lds
cmps
jno
js
xor
pop
loop
jmp
push
mov
div
jge
sar
jg
cwde
(bad)
popa
add
push
jae
inc
loopne
or
mov
push
daa
xor
imul
mov
test
mov
jl
lock
jnp
mov
mov
cmc
cmp
xchg
retf
and
and
add
fwait
mov
cmp
sbb
scas
or
mov
push
mov
cmp
jmp
not
loopne
aaa
arpl
test
bound
inc
scas
push
call
dec
imul
cmps
pop
push
or
rcl
xchg
cmps
popa
test
inc
mov
loop
adc
cmps
shl
sahf
(bad)
test
ret
mov
jnp
js
int3
and
test
sub
aaa
daa
jb
rcl
push
hlt
push
mov
ins
sbb
adc
loopne
retf
push
gs
outs
or
call
sub
xchg
ins
repz
sbb
loopne
mov
pop
retf
xor
int
shl
cmp
push
daa
pop
cwde
mov
jb
xlat
or
pop
adc
inc
lock
(bad)
push
neg
dec
add
gs
inc
add
fadd
dec
adc
leave
cmps
(bad)
or
sbb
inc
cmp
inc
push
fs
loope
out
(bad)
jl
retf
jnp
out
jmp
cmp
fstp
mov
cmp
stc
add
xchg
js
fld
in
mov
sub
dec
stos
data16
xchg
adc
test
mov
in
pop
std
mov
ds
or
jge
sti
jge
pop
adc
retf
ret
fisub
jne
into
adc
and
mov
loopne
ss
mov
jge
add
cmc
jmp
inc
int
aam
adc
sti
sub
leave
retf
and
lods
and
bound
jno
jmp
xchg
adc
lahf
fwait
adc
xchg
icebp
jno
not
shr
and
sub
mov
jnp
push
jno
sti
punpcklbw
ja
mov
sbb
cli
pop
jge
push
mov
clc
ins
add
inc
jne
cmp
xor
ret
(bad)
add
iret
jmp
sbb
push
ins
out
scas
adc
mov
jle
aas
std
adc
imul
inc
pop
inc
outs
sub
add
lods
mov
ja
push
es
mov
cld
jne
je
lods
pop
arpl
mov
sub
mov
xor
and
mov
xor
xchg
call
fsub
xchg
ins
shl
es
xlat
sbb
fisub
adc
lods
or
cmp
in
jle
add
ss
xchg
inc
sbb
es
jbe
and
in
aaa
xor
cmp
mov
dec
mov
xchg
fadd
cwde
or
mov
mov
sbb
fstp
inc
enter
sbb
arpl
mov
and
push
mov
(bad)
dec
dec
add
add
(bad)
adc
dec
jmp
fadd
stos
gs
cwde
dec
out
push
dec
pop
bound
dec
fbld
sbb
arpl
cmp
in
push
ds
in
xchg
jne
in
push
push
jns
push
sub
jl
scas
inc
cmps
push
xchg
jecxz
cdq
push
mov
sahf
sbb
dec
add
and
adc
hlt
mov
mov
(bad)
hlt
cmps
fs
xchg
(bad)
xor
xchg
xchg
pusha
mov
lods
lds
xor
or
(bad)
sti
enter
xor
dec
xor
ret
mov
jne
push
(bad)
xlat
sbb
jmp
or
fcomi
jne
(bad)
popf
lods
cdq
or
adc
push
push
push
inc
ds
(bad)
test
sub
push
retf
movs
sub
sub
adc
push
push
push
and
pop
sbb
sub
cmp
and
scas
jns
cmps
ret
stc
xchg
mov
into
push
and
lods
(bad)
push
jmp
mov
xchg
sbb
add
and
jb
ret
adc
jbe
mov
data16
sbb
sub
jmp
(bad)
pop
(bad)
(bad)
cmc
bound
in
hlt
pop
cld
pop
jno
adc
sbb
push
cmp
adc
pushf
adc
xchg
jo
jne
in
xchg
dec
or
sub
rcr
jb
or
data16
test
int3
cs
mov
mov
repnz
ds
sahf
xchg
xor
mov
aaa
jmp
mov
jbe
mov
std
dec
mov
pop
cmp
in
inc
mov
or
test
aam
retf
jbe
sub
adc
(bad)
aaa
lds
jge
push
sbb
test
fdiv
and
loop
push
push
mov
or
adc
xor
push
sub
cmp
popf
push
push
movs
lods
inc
xchg
inc
push
call
loope
jno
fistp
xor
aaa
push
cmps
push
xchg
mov
add
cdq
push
in
xor
jmp
inc
jp
push
pop
enter
pop
gs
or
adc
xchg
imul
loop
mov
mov
movs
mov
ds
xor
push
sub
or
push
shl
mov
mov
add
xchg
and
jne
dec
mov
loope
ret
mov
imul
inc
xchg
push
push
xchg
xor
cmc
loop
(bad)
pop
jecxz
mov
mov
jno
sub
sbb
loopne
fldcw
jo
daa
test
jl
popf
pop
push
repnz
push
fs
call
mov
jno
mov
cmp
cmp
xchg
pusha
inc
inc
adc
data16
adc
int
(bad)
hlt
pop
ror
mov
dec
iret
pop
sbb
add
stc
iret
jmp
call
dec
ss
out
mov
mov
push
pop
and
les
outs
mov
loopne
xor
inc
jae
sbb
mov
jne
push
std
cdq
push
sahf
cmp
mov
mov
enter
les
ror
sbb
shl
xchg
dec
int
mov
push
dec
and
lds
std
push
inc
push
jae
push
pop
sub
inc
dec
pop
sahf
in
mov
xchg
ins
jo
retf
rcr
fdiv
cmc
jo
daa
dec
repz
mov
mov
shl
hlt
pop
or
and
push
cmp
adc
push
xchg
push
test
call
data16
loop
sub
jne
dec
mov
xchg
(bad)
jge
mov
xchg
sti
div
jb
das
xchg
cmp
add
(bad)
pop
mov
test
loopne
mov
aas
cmp
dec
pop
cmps
adc
rol
mov
hlt
scas
test
or
add
cs
mov
xlat
popa
ins
or
(bad)
push
repz
adc
push
into
xor
and
adc
sbb
add
ins
jmp
dec
cmp
or
outs
inc
sbb
outs
call
rcl
jle
loope
js
xchg
push
adc
leave
mov
hlt
mov
jg
inc
add
cmp
sahf
add
dec
unpckhps
stos
jne
lds
je
pop
js
stos
fdiv
jg
sub
inc
aam
out
lahf
inc
inc
bound
imul
ficomp
stos
push
xchg
pop
push
arpl
inc
mov
xchg
cmp
out
and
jmp
push
add
cli
or
pop
or
cmp
lea
push
shl
sti
test
mov
mov
por
fs
sti
ror
das
retf
nop
dec
dec
push
in
repz
retf
cld
retf
push
dec
mov
stos
inc
fst
int3
xchg
inc
ret
in
push
pop
iret
test
mov
jp
dec
hlt
dec
jnp
or
inc
shl
sbb
push
sub
int
pop
(bad)
int
into
cmp
imul
in
aaa
nop
cld
imul
stos
test
aad
ret
adc
retf
out
ror
rcr
gs
fnsave
lds
pusha
scas
gs
sbb
cdq
pop
adc
add
sbb
mulps
int3
push
in
int3
loop
inc
inc
(bad)
ins
lea
ud1
xchg
dec
ret
hlt
and
int3
pop
aad
mov
je
push
add
(bad)
jp
fwait
stos
std
out
mov
test
jno
call
rcl
sub
(bad)
mov
aam
movs
mov
movs
mov
daa
rcr
dec
inc
and
pop
push
pop
cmps
xchg
xor
in
shr
sti
scas
fwait
push
xchg
add
pop
out
outs
js
xchg
and
xlat
xchg
mov
out
mov
leave
stos
push
popf
xchg
xor
mov
ror
out
and
jecxz
jnp
mov
popf
or
xchg
mov
push
call
jle
mov
test
mov
or
inc
ja
clc
pushf
push
sub
push
enter
das
sti
fild
mov
push
push
xchg
sbb
pop
inc
icebp
cmps
adc
vpaddusw
xor
fs
std
aaa
dec
adc
bound
ret
aad
push
push
xor
outs
pusha
iret
adc
ss
je
and
cli
mov
scas
test
dec
and
xchg
lds
repnz
mov
cmp
in
push
adc
jo
xlat
rcl
dec
jo
mov
cmp
js
jnp
leave
(bad)
ja
xor
xor
stos
mov
jnp
xor
imul
adc
sbb
xor
inc
pop
cmp
stc
xor
stc
or
iret
aas
repnz
repnz
fiadd
dec
xlat
daa
mov
pop
stos
mov
stos
arpl
neg
nop
jbe
mov
jge
call
and
je
fsub
popa
loop
(bad)
mov
in
popa
lods
shr
(bad)
repz
into
cwde
test
sti
inc
pop
adc
mov
test
push
jg
in
sub
xor
ins
add
xchg
mov
and
addr16
pop
adc
int3
mov
dec
mov
push
fdivr
pop
mov
ret
outs
bound
test
lahf
scas
out
add
call
push
sbb
cs
popa
retf
xchg
cmp
lea
addr16
pop
inc
jmp
jecxz
cdq
xchg
push
push
fcmovbe
ror
(bad)
mov
inc
jb
test
sub
push
(bad)
in
cmps
shl
shl
cmp
and
lods
test
cmp
and
in
ja
je
cwde
or
div
xor
push
fisttp
hlt
cmps
push
adc
and
stos
xchg
rol
daa
dec
and
or
jl
and
xchg
xor
or
out
pop
fdivr
mov
faddp
lahf
cmps
pushf
jno
inc
(bad)
pop
mov
mov
arpl
daa
pop
xor
cli
stos
push
jle
sub
mov
loop
shr
(bad)
cmp
jecxz
add
gs
pop
push
(bad)
sub
add
cs
jmp
xchg
sub
sbb
scas
cmp
stos
pop
and
sar
mov
cmps
ss
or
or
in
movs
jnp
push
sub
mov
sbb
mov
test
xor
rol
xchg
push
pusha
adc
sub
sbb
xchg
cmp
js
inc
jmp
lea
cld
dec
cmp
mov
jmp
(bad)
rcr
sar
push
xor
ret
mov
call
sahf
and
sbb
jmp
setae
sbb
pop
ss
inc
or
jge
mov
pop
mov
or
adc
or
fidiv
(bad)
ins
bound
nop
movs
out
sub
cmp
loope
enter
bound
inc
mov
sti
stc
pop
out
cli
mov
outs
xor
nop
movntq
push
out
dec
mov
adc
adc
daa
sub
push
aam
loopne
push
mov
mov
mov
ret
dec
test
out
dec
xchg
or
jbe
fimul
mov
shl
add
cli
aam
mov
add
in
repz
aas
test
inc
jae
test
bound
add
xlat
cmps
out
sub
xor
lahf
mov
cld
sti
out
je
pushf
lock
imul
adc
cli
lahf
add
ret
fwait
or
sub
pop
mov
in
ins
bound
cmps
ret
repz
movs
(bad)
mov
mov
xlat
rcr
jbe
and
or
pop
dec
push
add
push
mov
retf
fmul
pop
xor
mov
xor
outs
sub
div
push
xchg
add
ss
adc
(bad)
push
(bad)
in
or
arpl
pop
fwait
cld
gs
fnstcw
xor
inc
imul
lahf
adc
and
sbb
mov
sub
adc
jg
repz
inc
test
retf
jbe
sub
addr16
adc
pop
idiv
fbstp
addr16
call
lods
xchg
push
inc
adc
push
fsub
jns
push
mov
sbb
jecxz
mov
xor
or
scas
sar
ss
pop
rcr
rol
pushf
iret
cmp
sub
aaa
push
arpl
mov
je
sub
ins
mov
xchg
in
push
or
sahf
cld
mov
push
sub
sbb
mov
dec
adc
jb
pop
jl
push
int3
imul
pop
dec
(bad)
pop
xor
xchg
add
fdivr
cli
add
dec
adc
ds
dec
imul
jbe
push
leave
pop
xor
xchg
ret
xchg
icebp
stos
inc
xchg
arpl
test
stc
mov
sub
dec
jns
pop
sahf
add
mov
cmp
std
cmp
adc
and
sub
ret
xor
sbb
mov
out
xchg
(bad)
adc
fnstenv
push
repnz
adc
scas
fadd
sub
jmp
xchg
dec
dec
and
stos
sub
frstor
in
es
rol
jb
mov
fs
aad
cmp
loopne
lea
cmps
lods
xchg
push
fwait
test
fnstenv
in
adc
in
jns
shr
lea
mov
push
push
imul
int
cmp
adc
xor
lea
and
stos
sahf
push
mov
shl
jecxz
popa
xor
dec
scas
enter
mov
cmc
or
aaa
leave
sbb
lahf
jmp
in
cli
add
dec
pop
sub
(bad)
mov
sahf
ins
ins
jbe
fdivr
es
cld
lock
jecxz
(bad)
jns
fmul
imul
(bad)
ins
mov
xor
sbb
shr
test
inc
fsubp
sbb
nop
aas
or
lahf
mov
jl
cmp
data16
sbb
mov
stos
inc
setp
fbstp
mov
sub
jnp
imul
aad
xchg
clc
repnz
or
(bad)
jmp
xchg
cwde
dec
mov
les
cwde
pop
jge
pop
pop
sub
imul
js
fstp
movs
xor
dec
and
ss
xor
push
ret
retf
jbe
lods
dec
bound
sub
sbb
sub
add
dec
add
outs
mov
xchg
xchg
fwait
or
not
sti
dec
rcl
adc
and
jns
and
push
xchg
jne
pop
lods
rcl
jle
test
pop
or
pusha
retf
xor
pop
inc
cmp
enter
mov
aam
adc
mov
sub
test
sti
repnz
mov
mov
in
inc
mov
dec
xor
add
rcr
pop
mov
push
mov
pop
ror
popf
nop
cdq
mul
sbb
or
xor
fnstsw
push
test
or
lock
gs
arpl
repnz
mov
cli
xchg
pop
out
arpl
ins
mov
lock
sbb
sti
cmc
add
sbb
loopne
and
(bad)
or
(bad)
call
pop
das
mov
or
idiv
adc
adc
inc
push
push
call
xor
call
aas
pushf
mov
lods
xor
es
mov
(bad)
push
mov
adc
and
inc
test
call
jmp
call
cwde
nop
cmc
push
and
fst
lds
jae
mov
sbb
(bad)
jle
sbb
and
lock
fist
ss
pop
test
sbb
jo
out
push
jmp
(bad)
adc
xor
addr16
jg
jmp
lock
sti
bound
dec
cs
xchg
(bad)
jle
scas
cmp
sub
inc
sbb
pop
dec
xchg
mov
inc
daa
jecxz
xor
add
adc
into
mov
inc
push
dec
and
stos
in
xchg
cdq
cmps
out
and
fiadd
scas
xor
xor
retf
(bad)
scas
dec
pushf
cli
mov
add
or
xor
and
pop
out
lahf
aad
fstp
cmps
pop
scas
nop
mov
xlat
inc
mov
loop
pop
mov
and
cmp
cld
or
or
push
(bad)
xchg
hlt
cmc
add
xchg
ret
imul
or
loope
cmps
mov
(bad)
jb
aam
gs
xor
lea
enter
mov
xchg
jo
mov
pop
mov
jbe
fsub
nop
xchg
sub
dec
pushf
imul
cmp
or
popf
and
mov
dec
ror
das
mov
jg
call
push
pop
aas
shl
jb
fimul
test
xor
int3
adc
mov
xchg
or
fs
pop
xor
add
pop
mov
movs
push
int
and
jb
pop
pop
call
je
icebp
or
rcl
jne
add
test
out
mov
jnp
push
cmps
or
jmp
add
pop
cmp
stos
mov
xchg
mov
lods
xlat
aas
jae
inc
jns
pusha
push
xor
and
xor
add
dec
or
xchg
cmp
outs
or
pop
imul
out
out
mov
xchg
iret
sti
pop
mov
inc
sub
inc
push
iret
inc
add
(bad)
adc
dec
das
push
jg
dec
xor
out
or
lock
test
inc
push
ret
jecxz
out
push
jae
push
(bad)
mov
repnz
in
mov
sbb
lods
(bad)
mov
retf
pop
jns
js
sub
xchg
or
movq
and
imul
cmp
test
lock
outs
xchg
faddp
scas
mov
dec
dec
xlat
fcmovnbe
jp
icebp
push
ins
xchg
outs
aam
and
retf
xchg
jmp
mov
or
test
dec
sub
ret
outs
out
or
jb
imul
rcr
js
mov
movs
mov
test
repnz
xchg
imul
dec
ret
add
cmps
xchg
mov
jge
lock
in
mov
popf
or
or
xchg
add
call
pop
cwde
test
sub
mov
shl
loop
int
mov
jmp
and
fs
or
enter
test
jne
imul
adc
xchg
sub
(bad)
inc
xchg
push
cmps
test
mov
dec
(bad)
popf
push
and
jb
call
inc
shr
retf
data16
add
mov
or
add
mov
or
das
mov
push
mov
stc
adc
(bad)
xchg
repz
cmp
rcl
sahf
pop
push
jns
lock
nop
shl
xchg
add
ins
test
jb
xlat
add
fist
cmove
adc
inc
fisttp
ins
or
sbb
cmc
ja
cmp
mov
push
push
fstp
(bad)
ins
dec
cmc
fstp
mov
mov
cmp
clc
and
and
and
pop
xchg
std
rcl
call
ds
xor
data16
cmp
jecxz
jle
stc
and
lock
or
or
pushf
dec
sbb
scas
data16
call
mov
push
xchg
xchg
(bad)
rcl
inc
jl
cld
cmps
xlat
sub
stos
dec
js
push
xrelease
pop
daa
dec
repnz
dec
int
rcr
jp
mov
in
adc
fidivr
test
xor
jae
jge
adc
or
mov
pop
mov
mov
xor
xchg
popa
outs
outs
dec
fadd
sbb
int
iret
es
jne
pushf
inc
dec
scas
jo
sub
jno
jle
jns
mov
adc
loop
cvtdq2ps
sbb
xlat
push
lods
test
push
call
dec
in
push
push
dec
mov
add
dec
addr16
sub
sar
jne
and
movs
daa
sub
cmp
sbb
jb
dec
mov
call
cli
stc
mov
js
inc
fistp
and
out
pop
dec
add
ja
sbb
add
xor
out
loop
sbb
xchg
das
test
in
fadd
push
retf
and
scas
mov
shl
pop
cmp
xchg
inc
xchg
cld
sub
ds
sub
test
scas
fisttp
push
cmp
cmp
jle
fs
fwait
mov
jmp
pop
fdiv
pop
nop
inc
inc
mov
out
ins
lock
icebp
jae
addr16
retf
rol
jns
jmp
je
mov
and
fcomp
and
ins
cmp
aas
xor
std
cmp
jno
fsub
aad
sbb
outs
push
add
fdivr
adc
cli
inc
sub
fnsave
mov
int3
lock
into
fstp
push
clc
outs
xchg
and
push
jmp
lock
mov
clc
nop
and
repnz
aad
dec
sub
aas
into
bound
retf
pop
add
xchg
or
(bad)
dec
shr
add
mov
or
pop
mov
cmc
dec
jl
xchg
fwait
nop
jnp
and
add
push
and
xchg
mov
jnp
push
pop
ds
jb
sbb
sti
mov
fisub
retf
rcr
add
aaa
inc
mov
fdiv
out
xchg
outs
push
imul
pop
out
push
mov
jmp
ret
dec
fldl2e
xchg
cmp
leave
mov
leave
xor
into
jl
repnz
and
stos
sbb
xor
(bad)
mov
push
in
cmps
xlat
pop
fs
xor
clc
push
int
call
pop
mov
loopne
jg
outs
add
ret
pop
call
push
mov
ret
jle
les
ins
add
ss
dec
fiadd
les
test
(bad)
cdq
adc
xlat
cmp
adc
loope
daa
push
mov
daa
stos
mov
or
jnp
ins
mov
out
pop
xchg
iret
inc
rcr
and
addr16
nop
jecxz
pop
leave
inc
mov
mov
xlat
mov
int
xor
jmp
jp
aam
xor
aam
shr
loope
shl
dec
xchg
daa
ds
arpl
lods
in
push
inc
aad
and
jmp
cmp
dec
inc
cdq
or
ins
adc
xor
fisub
les
loopne
cmps
add
sbb
cli
stc
mov
div
mov
(bad)
pop
sub
pusha
inc
cmp
push
leave
inc
pop
inc
add
sbb
in
add
leave
rol
fwait
mov
or
enter
xor
repnz
push
xchg
sub
call
mov
out
adc
push
mov
push
shr
rcr
lahf
sub
pop
(bad)
daa
pop
sub
jae
add
jp
aad
inc
gs
addr16
or
mov
or
popa
xor
scas
imul
xchg
loop
mov
fbld
enter
ror
rol
imul
mov
addr16
xchg
call
mov
jg
aaa
cmps
xchg
in
das
sbb
scas
pushf
mov
xchg
outs
pushf
stos
sub
ret
fwait
mov
pop
xchg
pop
aad
push
leave
into
or
loop
xchg
dec
add
jae
(bad)
mov
mov
dec
jge
sub
dec
js
ret
mov
sbb
ficom
lock
repz
add
mov
mov
mov
pop
(bad)
imul
repnz
fdiv
inc
sbb
pusha
jae
adc
test
xor
fdiv
repz
ja
push
scas
mov
sbb
adc
iret
hlt
call
and
outs
test
nop
adc
fsub
mov
mov
or
inc
cmp
inc
xchg
fdiv
mov
pop
inc
push
jae
fmul
(bad)
in
jo
push
adc
xchg
jl
push
les
xchg
mov
loope
jecxz
cmc
jecxz
jns
fwait
or
pop
shl
mov
cmps
repz
out
ja
sahf
and
mov
jae
xchg
pusha
push
sub
push
mov
mov
and
fild
(bad)
fstp
(bad)
fnstcw
rcl
mov
jp
sbb
cmps
xor
pusha
lods
xor
dec
in
int3
stos
mov
xchg
adc
jo
sub
xor
xlat
leave
pusha
xchg
ss
sub
add
jmp
lods
stc
in
movs
add
stos
mov
push
int3
add
or
dec
sub
fisub
mov
mov
push
test
sub
push
cmp
lods
jecxz
test
and
in
fistp
lahf
xor
cmps
ret
test
xor
sahf
or
jp
int3
jno
xchg
outs
jbe
xchg
aaa
stos
xor
ret
pushf
call
lds
je
cmp
inc
(bad)
movs
out
or
sbb
mov
mov
xor
mov
jno
jg
mov
cmp
loop
add
mov
sub
inc
xchg
and
mov
imul
(bad)
push
xor
ja
or
xor
cmc
sub
div
test
add
retf
cmps
dec
add
sbb
lds
mov
jecxz
mov
mov
cwde
xchg
jl
lock
out
je
pop
push
and
pushf
test
push
call
dec
sar
bound
cmp
fiadd
sub
push
inc
rol
xor
lds
jae
fimul
aad
movs
icebp
or
rol
add
push
push
add
movs
into
push
xor
mov
push
and
in
adc
sti
sub
jmp
pop
mov
(bad)
mov
xor
cmp
dec
and
lods
mov
cmps
call
sahf
bound
jno
and
pop
pop
std
jns
jno
add
ret
bound
pop
test
cs
js
and
loopne
into
scas
aam
dec
sub
cmp
movs
cmp
push
dec
mov
cmp
in
push
pop
or
xchg
adc
gs
jecxz
or
cmp
sbb
adc
pop
in
mov
or
stos
shl
fbstp
in
mov
mov
pushf
push
cwde
pop
je
add
hlt
lods
pop
cmc
les
adc
hlt
mov
dec
and
shl
(bad)
cmp
fwait
mov
dec
ret
loop
mov
out
ja
(bad)
imul
adc
jl
pop
retf
push
mov
mov
outs
movs
movs
shl
pop
xor
es
arpl
repz
cmp
inc
push
sbb
pop
jg
imul
into
(bad)
adc
adc
xchg
cmps
or
imul
and
stos
xor
fld
imul
in
adc
(bad)
mov
scas
add
je
dec
and
cmp
mov
icebp
inc
mov
je
mov
jno
jns
or
imul
mov
icebp
stos
xchg
(bad)
fmul
and
sub
pop
pop
sub
xlat
jno
xchg
test
out
xor
jmp
inc
pop
sbb
loopne
and
cwde
retf
ret
mov
sub
jbe
sti
cdq
dec
sbb
ins
rcl
xor
js
jg
xchg
push
ror
dec
and
cdq
punpckhwd
pop
test
(bad)
ffreep
jns
lahf
lods
test
pop
pcmpgtb
push
push
bound
scas
adc
dec
mov
jle
or
int3
in
rol
xlat
in
inc
movs
mov
lock
inc
jns
jecxz
pop
out
rol
jecxz
idiv
sahf
cmp
cmp
jnp
cmp
test
loope
jb
rcr
inc
pop
adc
imul
mov
iret
es
lahf
(bad)
cmp
cmp
outs
xor
cmp
icebp
xchg
data16
retf
sti
ret
in
dec
mov
xchg
dec
ins
enter
jecxz
(bad)
out
fisubr
xor
shr
push
test
(bad)
addr16
xor
push
scas
mov
cmp
ficom
std
cmc
cmps
mov
dec
jne
out
mov
test
mov
mov
idiv
data16
dec
call
int
sti
add
sbb
cdq
jmp
cwde
gs
pop
sub
inc
movs
fst
addr16
inc
pusha
xor
scas
sti
mov
hlt
aam
ja
adc
aam
mov
in
or
pop
call
xchg
mov
cwde
retf
jb
and
dec
add
test
out
lds
add
pop
test
fistp
mov
mov
sub
je
pop
cmp
mov
sar
pop
sbb
in
cmp
inc
and
inc
loope
add
shl
ret
in
add
mov
das
sub
inc
(bad)
rol
xchg
sub
mov
xor
lock
imul
sbb
retf
in
sub
ds
mov
xchg
sub
mov
dec
imul
jo
jg
mov
ins
mov
popf
pop
mov
movs
pop
push
lds
jecxz
cmp
dec
pop
mov
xor
pop
sbb
push
inc
and
push
and
mov
(bad)
sti
push
outs
pop
adc
mov
mov
jbe
cmps
hlt
inc
test
mov
cmps
pop
ror
test
and
dec
clc
arpl
dec
cmp
cmp
and
inc
xchg
ins
fwait
and
push
es
fild
aam
int3
loope
mov
ret
ficomp
stos
inc
data16
aaa
jge
and
jecxz
imul
fld
dec
iret
call
fidiv
in
xchg
and
pushf
add
pop
and
dec
jo
dec
or
retf
push
cmp
aaa
pop
cmp
pop
cld
dec
fmul
and
mov
or
scas
inc
and
out
sub
add
fwait
jae
jp
inc
jmp
not
aas
mov
nop
shl
int
adc
xlat
aad
fild
xor
loope
frstor
xchg
in
jmp
outs
popa
stc
rcr
xchg
call
sahf
neg
dec
add
aaa
pop
xchg
xor
ret
mov
push
es
(bad)
(bad)
jb
fild
sub
xchg
sbb
pop
stos
(bad)
pop
sahf
lock
inc
rcl
jns
hlt
sti
add
inc
xchg
call
in
outs
rcr
pop
or
xchg
mov
sub
fmul
(bad)
in
push
retf
int
adc
adc
cmp
stc
sub
push
stos
fist
mov
data16
dec
add
sbb
scas
sahf
aas
jns
adc
jecxz
mov
mov
inc
mov
mov
ss
inc
or
test
dec
mov
xlat
mov
adc
dec
jb
lock
sub
std
nop
dec
fwait
push
mov
sub
jle
push
mov
pop
xchg
push
push
xchg
mov
push
jmp
sub
jmp
sub
dec
sbb
rol
adc
lahf
sbb
push
mov
int3
jmp
inc
cmp
pop
test
xor
lods
(bad)
inc
loopne
test
test
ret
dec
addr16
lock
daa
fs
es
jg
push
jmp
(bad)
jmp
stc
neg
jl
call
sub
pusha
push
fsub
enter
cmp
jmp
call
push
jge
cmp
ja
mov
stos
push
mov
mov
daa
xor
js
jg
xor
jg
xchg
push
scas
xchg
add
ss
mov
pop
icebp
xchg
push
mov
mov
fwait
(bad)
mov
jp
lods
dec
pop
outs
je
push
in
mov
mov
xchg
pusha
call
std
cmp
mov
cmp
jecxz
cli
cmp
mov
xchg
cdq
icebp
jbe
pushf
inc
inc
(bad)
(bad)
rol
pop
add
retf
popa
inc
out
ins
push
call
or
bound
out
mov
jmp
mov
dec
arpl
cs
xchg
js
ret
(bad)
rcr
popa
push
push
push
fwait
imul
test
dec
rol
mov
sub
push
les
je
add
xchg
and
std
adc
mov
mov
jne
stos
sbb
jl
jne
mov
push
xor
adc
aaa
jmp
neg
or
push
lods
popf
pop
xchg
int
pop
fisub
lds
push
mov
jl
call
and
bnd
out
ret
and
int
and
rcl
repnz
pop
not
mov
jecxz
es
inc
scas
push
mov
repz
pop
mov
adc
arpl
push
and
in
sub
in
imul
pop
out
lock
ror
(bad)
jmp
add
dec
test
add
iret
aam
inc
mov
xchg
cmp
(bad)
xor
mov
(bad)
adc
dec
mov
std
pop
mov
push
pop
loop
repz
fist
adc
stos
int
neg
mov
leave
aam
dec
fild
jmp
sub
xor
sar
xchg
or
mov
cmp
jns
pop
adc
sbb
cmp
sbb
ds
popa
cmc
add
mov
xor
dec
lahf
sti
imul
dec
les
mov
jnp
sub
mov
inc
cdq
fisubr
jns
shl
addr16
popf
jmp
leave
mov
fdivp
shl
adc
cli
pop
jmp
dec
fld
in
je
inc
(bad)
nop
addr16
mov
mov
das
xor
test
push
cmps
pop
(bad)
mov
jge
inc
dec
arpl
adc
aas
pop
inc
sbb
pop
bound
xchg
mov
or
jno
or
mov
mov
mov
push
jl
xchg
ror
ret
dec
mov
inc
dec
clc
cmc
div
cmc
mov
push
gs
cld
fcomp
jno
dec
mov
arpl
dec
xor
sub
mov
add
mov
enter
cmp
ret
into
scas
sbb
lock
es
xchg
pop
(bad)
(bad)
mov
mov
jmp
lahf
sub
xchg
push
mov
sub
xchg
xor
jmp
mov
(bad)
pop
jmp
mov
cmp
push
mov
int
movs
scas
sbb
(bad)
jb
fisub
cmp
retf
pop
jge
inc
movs
jnp
out
cmp
jle
xor
dec
mov
dec
mov
mov
ja
dec
test
inc
mov
mov
fiadd
js
pop
iret
btc
retf
mov
jg
cmp
outs
gs
sub
push
mov
and
push
push
jle
adc
or
fisttp
jge
mov
aam
sub
push
loopne
xchg
cmp
mov
hlt
xchg
test
and
sub
and
jnp
push
test
xchg
enter
mov
or
fnstcw
jmp
mov
push
sub
movs
sbb
xchg
jno
cwde
mov
leave
(bad)
aad
addr16
(bad)
pop
xor
mov
and
dec
pusha
retf
stos
cmp
jno
in
inc
movs
sub
pop
and
pop
pop
xchg
push
inc
add
inc
popf
sahf
cmp
mov
cmp
aad
mul
movsx
jp
(bad)
sub
(bad)
lahf
(bad)
aaa
push
dec
inc
mov
mov
gs
xchg
outs
add
jecxz
jge
dec
inc
test
pop
cmps
imul
dec
stos
out
cmp
mov
mov
(bad)
(bad)
xchg
dec
xlat
test
add
jno
popf
xchg
fstp
push
ret
jmp
test
cmp
dec
sub
inc
or
add
mov
scas
test
sbb
jae
stc
out
push
inc
inc
ror
jae
inc
push
imul
in
pushf
bound
cmp
pop
xor
clc
jmp
cmp
jns
out
lods
retf
dec
sti
adc
inc
mov
stos
rcl
push
sub
push
mov
fdiv
(bad)
sbb
add
arpl
bound
push
scas
les
or
test
xchg
lea
mov
inc
cmps
(bad)
fmulp
mov
sbb
pop
xchg
repz
clc
stos
sbb
test
push
fidivr
popf
inc
sbb
ins
in
test
test
mov
shr
sub
enter
jp
imul
lods
enter
dec
ret
pop
inc
sub
push
fstp
mov
and
lock
sub
push
dec
cmp
mov
sti
or
jno
cmp
mov
mov
movs
test
fsubrp
cmp
mov
dec
push
sahf
stos
jp
jmp
xchg
sahf
add
leave
xlat
pop
push
clc
cmc
sub
ins
scas
enter
adc
mov
mov
repnz
cmp
dec
jmp
xor
pop
xchg
sub
jo
mov
or
mov
pop
dec
popf
jg
xor
adc
and
add
retf
aad
push
cmc
stos
pop
pop
in
mul
and
aas
aas
ins
cli
pop
add
mov
pusha
pusha
pop
lock
dec
xchg
cmps
popf
xchg
and
jae
cmp
dec
fidivr
push
ja
xchg
mov
sti
push
jne
push
gs
push
lock
das
mov
jo
mov
nop
and
call
jb
jle
sub
xor
jmp
or
push
sahf
in
dec
adc
jnp
push
jp
xchg
dec
ins
popa
sub
mov
pop
pop
mov
inc
xchg
ins
aad
call
or
enter
je
dec
ficomp
and
jp
aaa
mov
sub
imul
repnz
mov
pop
div
les
mov
jmp
fldcw
test
aad
push
pop
pop
pop
out
jne
xor
add
push
cmp
pop
movs
cmp
daa
bnd
out
sub
adc
jnp
imul
stc
dec
mov
bnd
mov
add
xchg
daa
icebp
arpl
mov
mul
add
fcomp
ss
inc
das
and
mov
aam
mov
jle
mul
je
push
test
js
jo
jmp
movs
push
or
inc
ror
ja
mov
ret
mov
cmp
and
cwde
xor
mov
mov
ds
and
push
pop
out
outs
es
hlt
jg
shl
cmc
sbb
das
arpl
or
jbe
add
and
cwde
ror
cmc
pop
push
adc
dec
or
sub
and
mov
push
std
cli
add
mov
jmp
mov
push
sub
sbb
rcl
sbb
xlat
mov
jne
hlt
ret
repnz
push
mov
mov
adc
and
sbb
and
mov
pop
mov
cmp
pop
cs
and
cmp
xchg
push
inc
inc
data16
mov
dec
or
(bad)
sub
mov
sbb
xchg
stc
sahf
jp
jecxz
jle
stos
stos
or
jmp
hlt
sbb
sti
push
fbld
dec
xchg
fwait
clc
and
inc
mov
xor
pop
inc
pop
mov
lods
mov
nop
es
mov
icebp
xchg
(bad)
cwde
xchg
mov
mov
dec
jl
sbb
test
and
cwde
or
retf
pop
aaa
dec
or
jns
mov
cvtps2pi
cwde
mov
pop
dec
inc
add
inc
lods
xchg
stos
ds
sub
call
sar
and
push
mov
mov
pop
bound
out
sbb
mov
jp
and
mov
jp
pop
and
stos
dec
mov
int
ror
adc
xor
xor
sahf
mov
int3
mov
or
and
and
outs
pop
push
jmp
mov
ret
pop
jmp
mov
in
dec
or
sahf
mov
xor
or
xor
test
xor
(bad)
ins
(bad)
ja
xor
or
inc
pop
add
aas
dec
out
mov
popf
jo
loope
in
jge
pop
lods
call
fstp
mov
sti
aam
arpl
stos
xchg
leave
dec
mov
retf
imul
leave
add
sub
xor
dec
repz
fimul
pusha
stos
cld
cmp
ins
jns
xchg
test
scas
loopne
mov
arpl
test
int
fcomp
das
aam
loope
or
pushf
dec
into
daa
jne
push
jl
fild
call
and
lea
mov
ins
xor
gs
cld
(bad)
sti
fdivr
(bad)
jmp
fisttp
inc
ins
ds
sbb
mov
add
std
xchg
(bad)
jmp
jne
jae
gs
or
mov
movs
mov
test
inc
push
jnp
ret
sti
jbe
dec
jbe
or
ficom
dec
sahf
sub
cdq
rcr
xor
mov
inc
ss
pop
or
mov
sbb
jne
movs
ret
dec
jle
push
xor
dec
push
loop
nop
call
and
xor
fstp
add
and
lods
jg
cmps
ins
loopne
adc
jecxz
xchg
xlat
clc
repnz
leave
and
int3
rcl
cmp
clc
pop
mov
push
adc
repz
ja
mov
sbb
rol
ficomp
test
mov
(bad)
cmp
cmc
in
jg
out
movs
dec
cwde
jne
arpl
sbb
mov
(bad)
push
sub
dec
jno
sub
data16
arpl
add
ror
retf
aad
in
pushf
fwait
enter
sub
imul
not
mov
sbb
jge
pop
nop
jmp
dec
iret
movs
mov
in
sbb
or
inc
cvtpi2ps
inc
push
out
cmp
mov
test
out
xor
mov
mov
cmc
fwait
inc
enter
mov
pop
xchg
cld
sbb
jmp
and
addr16
mov
jne
mov
jl
scas
cmp
xchg
lods
cdq
sar
and
cmp
and
test
or
jge
mov
add
jae
lea
(bad)
popa
shl
je
repz
jecxz
add
imul
dec
(bad)
cmp
arpl
js
xor
out
sti
cmp
jg
popa
mov
stc
and
fistp
mov
fmul
out
scas
fwait
push
mov
xlat
push
fsub
in
dec
mov
cmp
hlt
ja
loopne
rol
out
ret
inc
in
sahf
pushf
and
pushf
int
mov
lahf
jb
fldenv
add
cmp
fiadd
mov
fwait
sub
cmc
jno
lock
mov
aas
mov
es
movs
rol
push
add
(bad)
jae
dec
mov
fs
inc
and
js
dec
cmp
outs
mov
cmp
inc
and
sub
dec
rol
sbb
sub
push
lea
scas
mov
popf
push
cmp
(bad)
sub
mov
gs
out
(bad)
or
inc
jecxz
imul
mov
test
mov
shl
jnp
loope
hlt
or
icebp
jb
iretw
jmp
cdq
(bad)
in
xchg
sbb
lahf
inc
rcl
cmp
add
add
xor
jo
outs
inc
out
jmp
test
sbb
fild
jmp
test
mov
inc
fnstcw
loope
mov
fadd
cs
idiv
dec
jmp
(bad)
int
mov
enter
sub
mov
push
stc
push
xchg
imul
xchg
or
fcom
xchg
mov
or
lods
test
mov
enter
(bad)
mov
hlt
out
repnz
aaa
pop
sbb
or
fwait
sbb
lock
push
loope
cmp
dec
stc
push
inc
(bad)
mov
and
push
in
jecxz
in
rcr
xor
dec
sahf
in
pop
pop
ret
pusha
jns
cmp
push
sub
xor
cmp
inc
retf
(bad)
push
or
test
mov
push
repz
sbb
es
pop
add
mul
loope
cwde
mov
mov
fdiv
pop
icebp
sti
mov
gs
test
dec
call
cmps
add
sub
in
sti
fistp
in
xchg
sbb
push
mov
in
scas
sub
dec
fst
leave
(bad)
stos
je
sbb
jno
js
push
and
cld
or
aas
mov
imul
sbb
(bad)
inc
aad
adc
clc
ds
shl
clc
int
test
jmp
nop
retf
sbb
ss
inc
loopne
and
int3
push
jg
jbe
push
jmp
lds
(bad)
fucom
jmp
arpl
fisttp
dec
std
idiv
cdq
mov
mov
sub
enter
mov
rep
sbb
rcr
adc
jne
mov
pop
loop
in
leave
rol
imul
sahf
pusha
inc
xlat
fwait
mov
mov
repnz
outs
sahf
hlt
int3
push
arpl
imul
dec
mov
std
mov
nop
xor
fmul
cmc
jmp
arpl
inc
rcr
xchg
gs
cld
popf
pusha
jmp
in
mov
imul
sbb
mov
enter
xchg
xchg
xor
jb
jne
(bad)
xor
mov
jle
(bad)
jae
iret
or
mov
shl
fadd
xor
sub
dec
add
and
das
cmps
stos
cmp
xor
fld
mov
jg
into
pop
cmp
(bad)
fcomp
adc
pop
lock
dec
(bad)
and
xchg
mov
in
push
inc
aad
repz
push
adc
pop
adc
test
cld
ret
in
jle
push
cmp
jae
push
xchg
mov
adc
loopne
mov
xor
mov
jno
clc
movzx
aad
mov
arpl
mov
mov
gs
stos
lds
jp
gs
fwait
lahf
push
mov
enter
mov
cmp
adc
jo
test
dec
xchg
out
cmps
not
xor
xchg
cli
popa
xchg
scas
and
push
pop
mov
js
or
cli
and
cmp
or
movs
iret
stos
add
pushf
cmp
sub
pop
jmp
ins
xor
retf
mov
data16
rol
nop
pop
push
dec
cs
and
cmp
loop
inc
outs
movs
xchg
bound
adc
push
dec
retf
(bad)
add
pop
pusha
dec
cmps
push
cmovbe
shl
and
jae
adc
loope
inc
lahf
jnp
xchg
cmp
pop
cli
sbb
es
jp
jns
mov
pusha
xor
sbb
inc
inc
(bad)
jmp
mov
fcom
mov
dec
xchg
leave
adc
adc
push
into
call
(bad)
lock
inc
nop
or
mov
jno
pusha
aad
cmps
lahf
lods
arpl
mov
or
jbe
sub
les
pop
xor
xor
or
data16
mov
jb
or
icebp
in
pop
iret
icebp
ins
mov
fnstcw
and
icebp
mov
out
cmp
shl
inc
pop
sub
mov
out
popa
or
push
push
shl
push
or
out
push
movs
cmp
ja
imul
imul
mov
sub
shl
fwait
jmp
sti
je
inc
adc
add
je
fs
mov
xor
dec
adc
dec
jp
test
pop
dec
mov
pop
mov
mov
add
gs
push
adc
mov
push
inc
and
into
int3
jl
mov
into
cld
and
adc
sbb
ds
inc
dec
call
push
mov
into
test
sbb
jecxz
sbb
sbb
pop
dec
call
rcr
test
mov
push
push
test
lods
stc
and
pop
sbb
sbb
and
mov
jg
jb
xchg
mov
add
cs
lods
rol
xor
lock
jno
pop
in
mov
ret
movs
sub
sbb
adc
or
sbb
scas
add
ret
sbb
(bad)
fidiv
ror
loope
xor
xchg
xor
sbb
or
(bad)
pop
in
cmp
xchg
push
shl
push
jecxz
sbb
retf
jl
sub
mov
mov
clc
jecxz
nop
stos
test
inc
cmp
mov
lahf
imul
bound
ins
xchg
iret
sbb
jle
nop
cs
pop
xor
nop
fdiv
jne
retf
mov
mov
add
rol
paddq
mov
sub
out
imul
lods
sub
adc
xor
push
in
adc
jbe
repnz
shr
adc
fbld
es
adc
das
(bad)
mov
scas
sbb
str
mov
shr
pushf
lock
sub
(bad)
fiadd
iret
push
jmp
fisub
icebp
jnp
daa
sub
fsubr
fs
sbb
and
cwde
add
jo
jb
or
and
cmp
dec
dec
das
xchg
cld
aam
cmp
inc
jb
mov
out
cdq
sbb
into
xchg
sbb
call
out
xor
(bad)
fistp
aaa
sub
es
push
mov
fcomp
pop
pop
dec
mov
mov
inc
into
clc
fcom
jle
or
mov
mov
pop
pop
sbb
cld
pop
sbb
mov
add
cmp
leave
ret
stos
dec
dec
add
imul
jmp
and
pusha
lahf
(bad)
mov
out
(bad)
push
daa
dec
(bad)
mov
data16
mov
add
arpl
test
jae
xor
and
push
and
enter
sub
cdq
sahf
imul
jae
jge
xchg
mov
sub
mov
push
or
std
and
mov
or
arpl
rcl
adc
fadd
jae
jnp
xor
mov
shl
jo
cmps
int3
in
retf
sub
loop
addr16
push
mov
iret
ficomp
cmp
jp
inc
stc
pop
add
add
xchg
sbb
adc
fs
inc
mov
loopne
mov
(bad)
movs
xchg
cmp
rcr
pop
gs
mov
inc
push
in
jns
mov
lds
jge
sub
sti
ds
retf
mov
jg
mov
push
xchg
test
adc
fcmovnu
out
retf
mov
inc
mov
arpl
in
sti
xor
pop
das
rcr
sbb
inc
(bad)
push
fadd
push
xchg
jbe
dec
pop
mov
popa
fild
movs
(bad)
lock
out
int
xchg
daa
jnp
gs
stos
add
pop
fnstcw
sti
not
(bad)
int
and
test
sbb
inc
pushf
jae
and
shl
test
lahf
jmp
inc
mov
ret
fwait
movs
cmp
xor
add
mov
ret
test
popa
push
mov
cmps
bound
push
sub
fxch
loopne
shr
and
popa
inc
icebp
adc
mov
add
std
push
daa
cmp
lds
adc
retf
arpl
or
jecxz
inc
jb
iret
enter
jmp
sub
cmp
(bad)
repz
push
emms
jle
mov
xor
out
sub
fst
push
loopne
test
sbb
daa
shl
data16
fucomp
das
imul
sub
fimul
push
jecxz
jge
xchg
je
leave
rol
dec
(bad)
daa
(bad)
les
test
mov
mov
fld
stc
stos
cmp
pushf
icebp
add
popf
ja
(bad)
and
and
push
sub
mov
xor
sub
jle
mov
lock
jmp
ins
xchg
add
daa
push
cld
jno
mov
pusha
push
and
mov
sub
loop
les
std
in
xchg
frstor
out
pusha
mov
jnp
popa
mov
int
scas
mov
aaa
and
pop
pushf
std
mov
hlt
dec
mov
sahf
jae
add
dec
leave
adc
xchg
test
sahf
xchg
sbb
sub
xchg
or
pop
vmovmskpd
outs
mov
fstp
push
sub
aas
sub
scas
in
aaa
cmp
jge
push
cld
push
aaa
mov
sbb
pop
inc
or
(bad)
push
and
into
pop
xor
test
or
imul
pop
lahf
mov
(bad)
sar
inc
inc
nop
mov
iret
(bad)
sub
inc
jp
adc
fucom
js
pop
cmp
cli
push
(bad)
pop
cmp
mov
lahf
cwde
add
adc
ficom
sti
(bad)
dec
js
mov
mov
mov
xor
shr
retf
mov
pop
clc
imul
movs
jae
(bad)
adc
or
ins
push
mov
aas
mov
jge
or
sub
jmp
inc
jp
jae
hlt
je
or
div
es
scas
outs
stos
dec
repnz
ins
mov
and
movs
stos
div
dec
xchg
xor
in
fnstenv
clc
fcmovbe
sbb
jb
sti
dec
jmp
hlt
mov
call
dec
xchg
in
js
sbb
mov
shl
test
xchg
rcl
loopne
ror
xchg
mov
retf
cmp
push
out
pop
jo
mov
add
sti
or
icebp
mov
pop
sub
jns
and
or
push
jbe
icebp
mov
sbb
xchg
inc
dec
shr
sbb
mov
(bad)
hlt
push
mov
dec
fsubr
jae
sbb
xchg
(bad)
out
psraw
pop
xchg
or
add
fstp
push
jmp
xchg
fwait
or
mov
lods
pop
jg
sub
xchg
into
ret
in
and
dec
ja
outs
dec
into
es
stc
loope
xchg
and
inc
push
add
cmp
mov
push
mov
push
enter
out
jb
cmp
or
scas
mov
sub
pop
ds
fdiv
retf
add
sbb
jmp
loop
mov
jge
cwde
ins
cmc
shr
sbb
push
cmp
mov
sbb
fcmovu
mov
add
mov
stc
aad
imul
hlt
dec
pusha
inc
xor
fs
(bad)
jmp
fisttp
fisubr
test
(bad)
sbb
push
mov
into
pop
and
xor
jecxz
nop
pop
retf
add
(bad)
sub
(bad)
cmc
push
and
rcr
and
scas
sbb
call
pop
push
es
(bad)
cmc
jbe
loop
cwde
movs
ja
out
pop
sub
(bad)
fimul
scas
aad
mov
mov
or
gs
sbb
test
cmp
popa
inc
push
jmp
cwde
add
mov
add
adc
mov
mov
outs
jge
mov
jg
mov
in
dec
mov
es
or
cld
cmp
cmp
les
(bad)
push
jo
jo
push
imul
xchg
mov
in
rcr
dec
dec
fistp
stos
inc
cmp
xchg
add
int
mov
xchg
pop
mov
fsubr
pop
jno
mov
imul
mov
retf
jae
retf
push
call
push
adc
test
mov
mov
xor
dec
pop
jno
call
cmc
imul
lods
jnp
ins
mov
xor
leave
dec
les
adc
cmp
add
retf
dec
pop
inc
scas
fld
pop
out
inc
js
test
aad
hlt
neg
push
mov
bound
fwait
mov
lock
aad
sub
mov
movs
imul
mov
jge
mov
out
sub
loopne
enter
jbe
or
pop
sbb
inc
sbb
scas
push
cmp
pop
dec
scas
inc
pop
(bad)
mov
mov
into
jmp
lods
ret
(bad)
cmp
addr16
je
jle
fstp
sbb
sub
pushf
inc
add
ins
aas
enter
imul
callw
retf
cmp
nop
mov
xor
xor
mov
mov
fbld
jp
hlt
cmp
fwait
es
shl
pop
add
push
(bad)
adc
mov
es
aas
(bad)
mov
dec
mov
mov
dec
shl
fcom
jno
mov
jb
scas
or
jns
jl
enter
xlat
stos
dec
mov
mov
add
and
jnp
jmp
ror
enter
xchg
jne
fbstp
jle
nop
inc
aam
cmps
nop
cmp
cmps
xor
add
push
leave
adc
mov
xchg
xor
clc
ins
cdq
pop
mov
fdivr
add
inc
(bad)
mov
imul
dec
dec
fwait
pop
shl
jo
jmp
cdq
das
and
fidivr
aad
ins
mov
adc
scas
scas
aam
sub
inc
(bad)
sbb
cmc
rcl
mov
scas
cdq
jnp
jno
ficomp
ds
(bad)
add
push
dec
das
or
pop
xor
jl
scas
out
dec
xchg
xor
or
and
mov
xor
add
mov
xchg
lahf
jno
(bad)
out
fdiv
int
fist
sub
das
pop
call
xchg
out
aam
mov
push
ret
(bad)
mov
and
aam
and
xor
pop
pop
mov
and
push
and
inc
es
mov
stos
jg
cmp
xchg
in
stos
stos
xor
retf
dec
push
aas
fild
cdq
cmp
test
jg
jne
imul
pop
popa
fisttp
mov
shl
adc
or
out
sub
pop
pusha
ss
cmps
ja
cld
fidiv
inc
mov
cmps
xchg
std
and
cmp
ins
loop
sbb
sbb
xchg
fs
sbb
push
jb
add
lods
push
add
push
and
lea
adc
adc
dec
test
jae
test
popa
es
call
outs
mov
xchg
dec
ja
cmp
xchg
popa
mov
sahf
mov
test
addr16
sub
jge
xor
xchg
push
jbe
inc
add
mov
sbb
jo
jmp
xor
lock
adc
jne
xchg
sbb
(bad)
and
je
(bad)
jmp
das
movs
icebp
call
sub
lea
dec
in
sbb
cmp
mov
push
or
lahf
sbb
cld
mov
mov
pushf
jmp
jne
or
add
imul
fwait
mov
xor
cmp
xchg
call
cmp
sub
inc
call
leave
cmp
clc
xchg
add
aam
call
cmp
dec
fs
push
ret
dec
xchg
xchg
test
ja
xchg
or
scas
mov
inc
lods
and
pop
xchg
hlt
push
mov
push
cli
xchg
int3
leave
std
cmps
jmp
xchg
adc
xchg
rcl
sbb
ins
jle
or
je
inc
mov
shl
sbb
ror
ja
loop
mov
in
mov
leave
adc
aam
cmp
mov
stos
fwait
test
cmc
xchg
ficom
test
enter
jne
popf
xchg
fsubr
mov
sub
add
push
push
sub
mov
jae
push
inc
xchg
and
push
stc
stc
fld
or
cmp
out
dec
jl
rcr
push
mov
add
shl
adc
aas
push
and
xchg
jnp
adc
repz
je
inc
mov
outs
mov
sbb
scas
scas
pop
sub
xchg
leave
inc
pop
lea
sub
pushf
adc
inc
pop
pop
out
clc
imul
cwde
aam
mov
xchg
mov
or
xor
mov
inc
or
xchg
nop
jne
shl
enter
xchg
rcr
inc
iret
inc
pop
inc
mov
cmp
xchg
test
aad
jecxz
mov
push
sub
addr16
push
or
lea
jb
enter
jl
gs
inc
test
sub
jg
(bad)
jnp
dec
mov
pop
iret
es
icebp
xor
mov
xor
aaa
out
xchg
bound
jl
out
add
fbld
cmp
cmp
jmp
jae
(bad)
into
bound
arpl
sbb
jo
test
out
mov
iret
cmp
cdq
mov
cmc
adc
cmps
dec
aam
jno
xchg
dec
xchg
outs
les
jnp
xchg
add
xor
inc
xchg
jmp
xor
or
inc
fdivr
cmp
ins
jmp
rcr
in
repz
adc
out
sub
sbb
popf
imul
stos
aas
sbb
int3
movs
icebp
pop
call
and
pop
xchg
mov
fdivr
add
jnp
pop
and
mov
jns
es
mov
out
mov
clc
jge
jl
popa
lahf
xchg
test
jne
xchg
dec
fabs
clc
ror
in
mov
movs
aaa
or
dec
xor
sub
and
jge
push
fwait
in
dec
dec
cmp
fadd
addr16
xor
clc
cmps
pop
ss
xchg
ins
mov
je
xchg
pop
aaa
inc
in
mov
aaa
mov
jecxz
fadd
movs
jb
inc
mov
pop
das
cs
mov
dec
jmp
or
jg
sub
cmc
imul
push
or
sub
push
xor
sub
push
sub
int
(bad)
jmp
inc
aam
fs
and
cwde
dec
mov
xor
mov
mov
push
mov
dec
or
(bad)
jne
daa
call
mov
sbb
pop
cwde
cwde
inc
fisubr
bnd
mov
fnstcw
pop
mov
test
into
or
je
stos
fwait
neg
in
and
dec
jp
and
mov
xor
fstp
push
add
(bad)
loop
add
pusha
fild
hlt
(bad)
xchg
dec
mov
scas
call
fisub
and
cmp
mov
jnp
jns
adc
cs
mov
sbb
and
adc
mov
xor
int3
in
cmp
add
daa
push
mov
adc
lods
dec
inc
fdiv
sahf
push
sub
add
xor
shr
mov
cmps
sbb
jecxz
enter
sbb
lock
xchg
sar
int
sub
xchg
jb
sub
repz
adc
inc
les
into
push
mov
movs
aad
sahf
(bad)
xor
retf
cmp
out
sub
sub
fsub
mov
(bad)
xor
clc
repz
(bad)
sub
cs
jb
cmp
jbe
jne
add
ror
jmp
pop
leave
xchg
int
sub
inc
scas
sub
cdq
pop
(bad)
sub
es
dec
call
or
cmps
jno
fcmovu
sub
scas
outs
or
fist
cdq
scas
int
into
xchg
fimul
inc
push
test
pop
mov
xchg
ja
clc
cld
scas
out
ja
mov
add
pop
add
add
cs
xor
dec
jns
dec
sbb
xor
jmp
aad
mov
retf
out
cmp
mov
popf
inc
in
sub
and
pop
cmp
mov
sahf
add
nop
out
js
mov
and
popa
imul
fdivr
loope
jne
cmp
out
out
mov
repz
and
cmp
sbb
int3
pop
mov
outs
xor
scas
gs
pop
add
cdq
movs
jmp
add
mov
fsub
je
dec
or
jl
das
cmc
jno
pop
fcomip
fist
in
push
iret
call
add
fnsave
push
dec
repnz
stc
(bad)
mov
retf
ret
mov
das
push
lds
outs
fidivr
(bad)
xor
xor
add
sub
inc
iret
push
cmps
xor
repz
clc
xchg
sbb
adc
jp
inc
dec
ins
test
call
push
shl
xchg
adc
aam
in
mov
jno
push
dec
fcom
lea
inc
xor
inc
mov
out
cmp
push
imul
add
std
loope
stc
aas
push
jmp
out
(bad)
xor
ds
mov
or
pop
push
mov
sti
int
mov
push
push
and
pusha
push
out
(bad)
push
xor
std
clc
sbb
sbb
lock
mov
and
gs
dec
clts
popa
pop
sub
add
xchg
adc
int
push
mov
pop
pop
xor
cmp
lods
pop
adc
mov
loop
int
das
mov
sub
lea
dec
dec
popa
push
xor
daa
bound
scas
xor
pusha
pop
mov
xchg
cmps
nop
(bad)
std
xor
push
cmp
unpckhps
inc
push
je
clc
or
sahf
loopne
test
cmp
je
push
cmp
jno
dec
sti
lods
mov
push
pop
clc
push
out
mov
mov
ss
data16
adc
xchg
add
mov
pop
ror
sub
sahf
aas
sti
push
aas
out
adc
and
imul
pop
and
push
adc
push
retf
and
adc
daa
imul
sbb
(bad)
iret
in
cmp
jmp
push
fstp
xchg
test
pusha
pop
or
loopne
sbb
xor
sti
push
fst
enter
je
scas
(bad)
clc
or
push
mov
inc
bound
rcr
mov
sub
xchg
aam
and
jp
jmp
in
sub
arpl
jg
pop
outs
xchg
inc
xor
and
add
imul
sahf
or
mov
ret
or
enter
jo
loope
out
cdq
xchg
fisttp
in
inc
js
outs
retf
cwde
dec
sub
fs
in
jbe
bound
ficom
sub
mov
cmp
and
jb
call
sbb
mov
mov
ror
jo
gs
jne
push
or
mov
jmp
mov
jl
and
je
cmp
and
imul
test
jo
jbe
sbb
adc
xchg
sub
add
fnstsw
mov
sub
mov
retf
sbb
mov
push
ret
cld
gs
pop
inc
dec
mov
aad
adc
ins
dec
add
pop
dec
dec
test
addr16
adc
sbb
push
mov
push
dec
(bad)
pushf
xchg
push
cmc
sub
xchg
fdivr
(bad)
dec
add
fcomp
stc
stos
and
in
dec
jp
vsubps
cmps
push
dec
data16
popf
js
es
dec
ret
xor
pop
cmp
push
cmp
outs
repz
test
sbb
push
mov
scas
xchg
sahf
mov
and
cmc
pop
and
mov
retf
and
js
jg
jl
(bad)
dec
cmps
xchg
shr
xchg
xlat
mov
ja
dec
or
xchg
(bad)
outs
mov
xchg
shr
sbb
push
fidivr
inc
pushf
dec
es
jmp
jb
nop
rcl
pop
dec
retf
mov
and
fist
mov
xchg
push
(bad)
cli
push
push
enter
int3
lahf
sti
mov
mov
pusha
add
out
movs
dec
aam
fcmovb
push
in
loope
scas
jae
rol
pop
adc
push
mov
pusha
pop
adc
sub
cmp
adc
dec
xor
and
sub
adc
test
pop
loop
and
rcl
and
inc
mov
out
cmp
push
pop
movs
or
(bad)
pop
mov
mov
cmp
jns
std
out
enter
inc
xor
or
dec
call
stc
dec
cmp
add
jne
dec
jne
cmps
sub
fdiv
add
retf
test
xor
xor
sbb
lock
xor
test
(bad)
dec
jne
out
adc
lahf
in
test
lock
ins
inc
and
adc
jge
adc
mov
pop
adc
jb
sub
pop
dec
mov
hlt
scas
fsub
mov
int
sti
outs
fisub
mov
dec
cmp
les
cmp
inc
fsubr
(bad)
adc
loopne
out
loop
pushf
mov
pop
and
mov
xchg
pop
daa
sbb
xor
jmp
cli
or
mov
inc
mov
and
and
jg
mov
push
xor
add
inc
in
popa
inc
lock
ret
loope
bound
cmc
xchg
jmp
fadd
sbb
pop
test
xchg
retf
push
stos
out
pop
fldenv
or
push
jecxz
pop
jl
cwde
nop
je
adc
jle
inc
ins
jbe
sbb
lahf
aad
mov
sbb
push
mov
fprem1
fst
cmp
jno
jae
mov
dec
cmp
jmp
sbb
test
lahf
cmc
or
lds
xor
pop
pop
fst
mov
push
mov
cmc
cmp
sbb
mov
dec
nop
adc
inc
call
aam
or
sbb
mov
test
int3
jbe
mov
repz
sbb
fst
mov
jg
icebp
xor
and
pop
loope
fsub
call
call
das
mov
das
or
pusha
jo
xor
inc
inc
jmp
movs
iret
adc
xchg
iret
xchg
ins
xor
push
cs
stos
xchg
xor
jb
cs
js
adc
addr16
inc
xchg
cld
rcl
jge
jge
jmp
popf
popa
cmp
mul
jge
je
or
add
sub
nop
and
ret
outs
add
inc
jle
xchg
ins
mov
test
push
mov
sub
dec
sahf
adc
pop
mov
push
cmp
sub
adc
fdivr
jp
repnz
dec
fcmovnbe
jae
push
pushw
ret
xchg
in
aaa
inc
int
xlat
xchg
adc
sub
sti
imul
lea
inc
push
jmp
imul
loop
cmp
aad
inc
fsub
pushf
cmps
cmp
in
xchg
pusha
adc
div
push
xor
xor
ins
jecxz
push
test
jmp
add
jbe
mov
adc
or
aad
or
je
xor
daa
shl
jmp
cmc
(bad)
jns
jae
jnp
add
push
mov
das
mov
cmp
sbb
jns
test
pop
out
out
inc
pop
cmp
fs
mov
bound
add
xchg
out
add
xchg
mov
sbb
mov
push
mov
(bad)
pop
out
ins
fcmovnbe
push
pop
(bad)
cmp
xchg
jmp
stc
mov
mov
fbstp
adc
mov
sbb
mov
jl
push
and
mov
jmp
fcom
aad
in
imul
and
lea
and
in
icebp
int3
jbe
push
pop
lods
sahf
xor
inc
adc
mov
rol
(bad)
scas
les
mov
adc
(bad)
or
cmp
sbb
loope
clc
push
mov
xchg
dec
adc
or
push
cmp
xchg
jo
icebp
sar
mov
jns
fs
stc
jo
jmp
popa
stc
jecxz
pop
sti
mov
push
js
mov
(bad)
pop
in
rcl
inc
dec
das
sub
jbe
or
jne
test
cmc
out
jp
lods
fadd
push
test
or
xlat
aam
mov
sbb
cs
aaa
sub
leave
mov
mov
add
enter
mov
or
fldenv
pop
dec
not
mov
pop
jmp
sbb
or
and
push
hlt
pushf
lock
pop
int
sub
test
inc
inc
clc
xchg
dec
adc
xchg
pushf
dec
push
push
xchg
sub
(bad)
imul
push
aad
shl
int3
int3
mov
mov
pop
hlt
xor
inc
stos
sub
jmp
sbb
jmp
clc
in
inc
pop
add
imul
mov
rcl
inc
enter
fdivr
mov
jl
jmp
dec
mov
sbb
and
mov
cmp
pop
xor
in
dec
fdivr
je
cwde
push
dec
push
mov
test
xor
lahf
shl
inc
int3
mov
xor
loopne
ss
pop
rol
xor
jne
popa
aas
xor
in
fnstcw
fs
fisub
jbe
and
adc
arpl
sub
neg
out
sbb
hlt
fsubr
ffree
and
ins
neg
push
lock
mov
sub
jno
into
or
imul
sub
inc
jo
aad
out
scas
lods
aas
sub
xor
(bad)
xchg
arpl
das
dec
out
mov
test
loope
push
repz
lods
mov
pushf
stos
(bad)
add
jp
int3
or
adc
mov
(bad)
cmp
int3
in
adc
dec
movs
ins
addr16
sbb
cmp
dec
and
mov
dec
std
stos
sbb
(bad)
mov
enter
add
test
cld
xor
movs
in
ror
push
test
mov
dec
inc
sbb
mov
xchg
cmps
ja
cmps
or
pop
jl
popf
dec
scas
(bad)
lahf
jp
lods
push
sbb
out
(bad)
in
(bad)
(bad)
adc
sub
add
test
stc
into
clc
fld
jns
cmc
call
push
or
xchg
jmp
call
ret
adc
mov
xor
pusha
sbb
dec
pop
adc
lea
into
dec
dec
mov
cmp
dec
scas
xchg
imul
data16
scas
dec
mov
les
and
shl
arpl
xor
mov
jl
cs
cmps
cmps
test
(bad)
data16
fwait
push
lods
xchg
int3
stos
push
adc
xor
jmp
stos
xor
xor
mov
or
sbb
jmp
popf
fstp
inc
aaa
mov
ins
pop
dec
sti
mov
xchg
push
lahf
sbb
outs
imul
lods
xchg
sub
mov
clc
or
sbb
sbb
inc
out
xchg
jb
or
dec
jae
cdq
xchg
dec
mov
cmp
rcr
mov
xrelease
cdq
add
popf
inc
add
clc
cld
popf
rol
retf
pop
and
or
push
rcr
mov
cmp
fimul
and
sbb
inc
data16
sub
xor
jo
mov
xchg
jo
mov
(bad)
icebp
pop
loop
pop
addr16
(bad)
mov
dec
(bad)
push
cmps
call
cmc
jl
pushf
call
mov
dec
dec
sub
jae
jns
xchg
ins
test
add
pop
ret
mov
jp
xor
into
scas
aad
hlt
jl
dec
stos
sbb
push
repz
sub
xchg
push
cli
pop
cmc
dec
adc
popa
mov
iret
aas
push
ret
lods
or
fist
arpl
cmp
xor
(bad)
or
aaa
test
repz
addr16
dec
repz
int
inc
out
jecxz
enter
fisttp
nop
mov
dec
mov
clc
mov
push
shl
jb
clc
jmp
jle
jne
xchg
mov
and
mov
xchg
dec
inc
mov
fstp
mov
shl
call
xchg
mov
scas
and
mov
inc
push
test
and
imul
nop
dec
mov
push
test
push
push
je
cdq
iret
fisttp
and
mov
mov
cmp
lods
gs
xchg
shl
sti
sbb
mov
in
pop
in
or
push
mov
or
cmc
sub
je
call
cli
(bad)
jecxz
dec
stc
adc
scas
add
cmp
sbb
and
jns
or
dec
inc
loope
dec
push
sub
jl
sbb
ss
stos
xchg
cmps
mov
inc
mov
call
and
cs
add
(bad)
lods
pop
push
pop
mov
mov
xlat
jb
test
mov
in
mov
sbb
dec
dec
sub
push
push
xor
lods
jno
cmp
adc
cmp
inc
test
cld
xchg
inc
lea
xor
mov
data16
test
dec
cmps
mov
mov
fistp
cmc
dec
clc
push
lods
stos
std
ins
out
retf
jle
pop
movs
shr
adc
sub
xor
xchg
jg
push
xchg
xor
push
jecxz
add
rcr
cmps
call
inc
jns
sbb
aas
stos
dec
inc
jmp
test
gs
xchg
push
pop
lods
in
iret
and
dec
dec
lea
cmp
std
lock
cs
sbb
add
cdq
push
ret
into
ds
xchg
sbb
dec
jb
aam
adc
stos
xchg
push
pop
sbb
pop
test
jbe
sub
in
mov
out
mov
int3
or
dec
scas
adc
lock
retf
push
dec
(bad)
push
mov
mov
retf
jmp
enter
pop
fst
rcr
inc
and
sbb
rol
cmp
movs
in
into
retf
in
pop
mov
sbb
or
pop
test
aaa
movs
jp
lods
rcl
jge
push
adc
xchg
cmps
popa
repnz
or
call
and
dec
call
add
mov
scas
cmp
fsubr
leave
pop
loope
push
inc
dec
jl
outs
mov
cmps
mov
loope
int
mov
inc
aas
call
pushf
cs
aaa
adc
xor
mov
adc
je
sar
mov
ins
rcl
nop
es
lahf
jge
pop
lods
test
and
dec
or
push
dec
rcr
cmp
ret
xchg
hlt
and
je
(bad)
jge
mov
push
jae
inc
pop
jmp
push
into
inc
aam
mov
idiv
scas
pop
dec
jl
aad
cs
mov
int3
(bad)
mov
lods
call
and
xchg
lahf
out
ins
inc
cmp
jmp
sub
or
push
adc
daa
idiv
scas
pop
and
movs
jmp
pop
pop
pop
jns
clc
clc
nop
adc
xchg
jns
mov
xchg
mov
push
push
mov
pop
xchg
and
xchg
loop
jno
xor
inc
add
in
mov
or
rol
push
xchg
rcl
xor
push
loopne
ja
int3
movs
mov
fidiv
cs
mov
mov
mov
and
test
inc
cmp
mov
inc
xor
xor
sub
mov
xor
add
repz
sub
xor
mov
xor
cmc
lahf
mov
icebp
mov
leave
fsubr
loopne
test
cmp
(bad)
outs
fadd
clc
fs
jecxz
test
or
jo
fsub
loop
mov
sbb
ret
inc
mov
fst
sbb
xchg
mov
mov
loop
shl
jns
lock
cmp
cwde
mov
fnsetpm(287
mov
push
mov
(bad)
fcom
add
scas
xchg
xor
mov
jne
imul
mov
cdq
sbb
(bad)
mov
cld
mov
lods
mov
mov
pop
xchg
aad
pop
movs
adc
push
ret
sub
jecxz
shr
adc
ret
fucomi
xchg
cmova
ret
daa
scas
cmp
cmp
add
out
loop
jl
enter
adc
xchg
pusha
adc
mov
std
das
pop
push
pop
cwde
popf
stos
cmp
lock
push
mov
push
and
mov
add
and
mov
les
repnz
xor
aam
icebp
pop
dec
hlt
mov
or
repz
icebp
test
ja
stos
leave
sub
popa
mov
xor
jae
fisttp
jae
jns
add
sahf
cmp
repz
pop
inc
mov
sub
bound
not
loop
jle
adc
movs
ja
(bad)
in
movs
mov
(bad)
mov
mov
mov
jb
cs
fistp
pop
std
retf
pop
inc
lds
adc
sub
push
movs
xchg
imul
dec
(bad)
push
sub
pop
ja
clc
xchg
imul
xchg
imul
pop
and
stos
rol
cli
push
call
push
enter
dec
ja
imul
push
xor
ror
mov
inc
test
das
cmp
xor
cmps
push
test
add
mov
es
push
sub
ror
mov
xlat
dec
sbb
test
sbb
dec
pop
das
push
push
pushf
mov
xchg
mov
aam
push
add
loop
loope
stos
pop
xor
mov
mov
imul
clc
call
cmps
cld
and
in
xchg
sub
or
mov
and
cs
and
and
sub
(bad)
and
adc
xlat
jg
iret
ss
push
sbb
lods
cmp
cdq
(bad)
mov
xor
mov
sub
inc
dec
cld
lds
rcr
push
inc
sub
cmp
test
cli
lods
push
cwde
jbe
mov
in
xchg
ins
into
jae
inc
mov
fbld
in
pushf
stc
out
push
or
imul
mov
hlt
ins
pop
movs
lea
aad
retf
push
jp
push
cdq
es
addr16
loopne
sbb
and
add
fist
je
or
jl
sar
xor
push
mov
mov
sbb
shl
or
jp
adc
lds
mov
retf
repz
ds
mov
pusha
rcr
push
xchg
push
add
movs
mov
in
loopne
dec
(bad)
and
push
xchg
cmp
jne
xchg
fisttp
sub
xlat
add
(bad)
and
add
and
adc
cmp
or
ret
test
mov
sub
xchg
mov
add
clc
ud2
jnp
fild
retf
mov
mov
scas
not
fwait
scas
popf
std
adc
jmp
adc
or
test
cwde
fstcw
add
adc
iret
(bad)
bound
mov
loope
jno
loop
mov
mov
cmp
dec
(bad)
jmp
test
jnp
aam
jbe
dec
lahf
rcr
lahf
in
dec
xor
ret
movs
push
push
jge
mov
and
sub
and
xchg
push
outs
movs
push
addr16
cmp
lds
lock
inc
jge
xchg
in
loope
lahf
mov
out
enter
ret
and
repnz
pop
ret
xchg
mov
dec
push
loopne
mov
repz
cdq
pop
mov
ins
sub
dec
out
mov
pop
sub
pushf
ss
inc
dec
pushf
mov
push
and
mov
push
jne
inc
fisttp
or
out
cld
test
arpl
retf
adc
lea
lods
jmp
and
mov
or
std
mov
cmp
rcr
mov
in
push
mov
cmps
div
jle
je
xor
inc
inc
push
push
mov
shr
cli
out
ret
mov
in
sbb
out
mov
dec
popf
int3
aam
mov
cmp
inc
mov
and
cmp
push
ror
movs
fdiv
in
add
lds
mov
push
xor
cmps
loope
sti
loop
push
pop
jp
pushf
mov
shr
mov
clc
stos
test
inc
cld
cmp
add
pushf
outs
repnz
cmps
stos
loope
or
push
ds
push
cs
nop
pop
repz
cdq
mov
in
daa
jns
frstor
adc
ret
pop
dec
xlat
dec
loopne
clc
dec
mov
test
push
lds
test
mov
movs
jo
mov
retf
movs
clc
sbb
push
add
popa
movs
xor
aaa
xor
sub
rcr
mov
retf
or
ret
pop
or
and
sub
cdq
fsubr
in
(bad)
and
mov
dec
sar
sbb
(bad)
sti
mov
fsubr
sbb
xchg
xor
pop
cmp
ss
dec
xor
xor
mov
test
sub
daa
cmc
adc
push
aam
and
and
push
enter
or
fadd
and
hlt
cmc
(bad)
(bad)
es
sub
and
arpl
xchg
pop
xchg
retf
aas
or
popa
sbb
xchg
push
cmc
ds
movs
in
inc
inc
ins
pushf
pop
xchg
imul
dec
mov
in
cmp
adc
dec
sub
or
sbb
xchg
rol
stc
and
pop
cld
or
or
mov
scas
add
bswap
sbb
or
int
in
std
in
iret
and
jg
push
movs
pop
push
mov
arpl
pop
dec
and
fistp
push
push
dec
jge
shl
ja
repnz
pop
mov
mov
stc
inc
jns
push
pop
push
inc
mov
test
push
mov
sbb
sub
stc
mov
mov
inc
dec
or
push
xchg
jl
out
loop
xor
out
or
or
push
pop
mov
(bad)
inc
add
(bad)
pop
scas
mov
sub
mov
stos
or
lahf
pop
imul
(bad)
int3
sub
push
jne
push
dec
jp
scas
cmps
(bad)
icebp
push
adc
fist
pop
retf
sub
push
test
and
jbe
mov
int3
mov
shl
and
add
fcmovnb
aaa
inc
add
int
loope
retf
or
lahf
inc
inc
in
stos
loop
xor
cmp
pop
mov
(bad)
enter
das
and
(bad)
sub
adc
mov
stc
and
mov
pusha
scas
stc
or
mov
(bad)
sub
icebp
imul
push
or
gs
ror
dec
xchg
xchg
mov
sbb
or
sub
aam
xlat
iret
mov
fild
adc
pop
hlt
pop
push
inc
ret
xchg
pop
enter
js
add
add
and
arpl
int
mov
sar
mov
test
pop
aaa
lods
pop
add
cwde
xor
mov
je
xchg
fwait
int
pop
outs
push
sub
ds
jnp
cli
mov
neg
push
imul
mov
add
pop
inc
or
ins
pop
dec
sub
xor
xor
mov
daa
pop
pop
adc
adc
mov
fldenv
ftst
mov
mov
sbb
ret
cli
cdq
clc
arpl
jb
jge
stos
pusha
sbb
inc
loope
sbb
xchg
add
test
call
cld
in
mov
pop
pop
dec
inc
push
lods
xchg
in
test
icebp
add
jb
or
cmc
or
push
push
int
(bad)
mov
mov
mov
stc
pop
jns
cdq
sbb
add
dec
fisttp
jmp
add
sbb
sub
pusha
dec
mov
(bad)
fidivr
add
jle
mov
std
sub
jbe
jae
xor
daa
aad
jno
out
out
mov
or
mov
mov
lods
inc
jg
xor
sub
or
cmp
daa
add
arpl
hlt
stos
pop
cs
mov
dec
xchg
mov
pop
jl
loopne
imul
mov
iret
in
push
push
pushf
pop
fwait
ret
dec
lock
dec
test
mov
or
jno
push
push
mov
shr
clc
ins
mov
mov
data16
xchg
jle
jge
add
and
jo
ja
cmp
int
out
sar
jae
mov
sub
adc
lods
ret
cli
pop
sar
ret
inc
jnp
cwde
xor
xor
aad
loopne
cmp
inc
mov
rcl
jnp
mov
(bad)
ds
(bad)
in
retf
or
leave
pop
push
hlt
inc
(bad)
enter
mov
enter
adc
push
mov
push
idiv
dec
or
lea
inc
mov
in
rol
int3
push
into
fbstp
dec
push
nop
in
arpl
adc
or
retf
loop
sub
hlt
cli
push
dec
shr
and
dec
arpl
add
push
inc
add
jns
jnp
imul
mov
rdpmc
sbb
stc
xor
das
repnz
cmc
rcr
push
int
sar
ss
cwde
dec
pop
mov
(bad)
in
repnz
aaa
jo
jge
ficom
mov
aaa
mov
push
(bad)
aas
(bad)
jo
and
lods
cmc
adc
jb
cmovae
outs
mov
xor
push
mov
sub
dec
jo
mov
xchg
out
movs
mov
loope
push
add
fwait
scas
pop
lea
pop
and
dec
sbb
mul
popa
adc
dec
loope
ins
mov
cmps
shr
out
inc
scas
sub
mov
mov
hlt
out
mul
mov
icebp
test
xor
aad
adc
mov
sbb
jmp
imul
pop
xor
sub
push
inc
rcr
movs
test
inc
mov
mov
mov
inc
push
arpl
arpl
hlt
iret
and
push
in
pop
jecxz
or
retf
add
popa
add
fdiv
inc
test
jmp
inc
or
ret
jnp
scas
adc
cmp
popf
lahf
stos
mov
cmp
pushf
sbb
mov
mov
push
sub
cmp
cmps
mov
mov
sbb
add
daa
sbb
imul
jne
repz
mov
adc
mov
inc
sahf
and
mov
pop
add
push
ret
outs
test
dec
loopne
inc
les
ins
or
dec
push
out
dec
bound
inc
pop
inc
int3
out
mov
mov
mov
rcr
lods
addr16
sbb
movs
jne
inc
mov
repz
popf
icebp
push
xor
in
mov
mov
dec
retf
sbb
in
mov
add
mov
ss
movs
sub
pop
aaa
lock
pop
dec
xchg
test
and
mov
pusha
(bad)
aaa
loop
mov
push
xchg
push
dec
(bad)
push
xor
cld
xor
in
mov
in
jne
cmps
cli
dec
pandn
ret
outs
and
sahf
inc
ds
fs
std
mov
xlat
repz
inc
or
push
pushf
mov
test
dec
hlt
clc
stos
push
sub
sub
outs
xor
cs
div
mov
cmp
mov
out
enter
xchg
add
push
inc
xchg
call
imul
jl
mov
fstp
pop
pop
jecxz
jle
int
mov
in
or
mov
mov
and
lea
fs
add
imul
movs
iret
sbb
adc
xor
imul
call
jmp
jne
xchg
adc
sub
push
bound
add
aas
pop
call
pop
(bad)
mov
mov
cwde
enter
mov
xor
xchg
fwait
sbb
mov
mov
pop
ins
out
cmp
sub
loopne
stc
mov
test
or
jnp
outs
scas
xor
(bad)
in
retf
data16
cmp
push
in
stos
std
aaa
xor
adc
or
cmc
adc
xlat
xor
sub
inc
jo
push
repnz
xchg
fmul
outs
jg
call
jecxz
loope
add
push
or
dec
push
pop
movs
out
add
mov
xchg
sub
ret
cmp
sub
push
mov
test
(bad)
loope
mov
enter
xor
shr
fwait
mov
pop
inc
push
add
xchg
cld
mov
shl
xor
pop
lds
push
ds
sahf
cmp
xor
mov
out
cmps
stos
fst
sub
std
inc
jbe
call
and
push
jbe
dec
in
call
cmc
retf
sub
cmp
dec
fdivr
push
sub
into
popf
shr
jmp
xor
mov
push
int
push
sbb
(bad)
stc
mov
xlat
out
pop
mov
ficom
pop
cs
(bad)
mov
aaa
mov
mov
mov
repnz
xchg
push
ds
out
mov
call
int3
inc
bound
push
sub
hlt
or
out
js
out
add
psubb
pop
mov
int
ficom
mov
data16
jp
xor
jg
gs
ins
or
(bad)
jg
mov
mov
test
sahf
xor
(bad)
xchg
jle
add
je
push
addr16
push
hlt
or
inc
sub
xchg
mov
xor
mov
mov
add
cmp
mov
adc
pop
stos
into
cmps
out
push
test
scas
push
es
shr
push
stos
imul
dec
aas
cmp
(bad)
div
(bad)
cmp
js
sar
sbb
mov
sahf
push
icebp
hlt
test
jae
data16
lods
in
mov
xchg
push
pop
pop
xor
enter
push
fmul
sub
ret
fs
xchg
and
test
cmp
je
loop
jno
cld
mov
sti
sub
push
sub
test
stc
call
in
jne
aaa
enter
fnstcw
inc
stc
mov
imul
add
(bad)
jmp
ror
pop
pop
les
movs
or
pop
jecxz
cmp
call
scas
xchg
test
cmps
lds
push
or
scas
pop
fsub
and
test
rol
jbe
sbb
mov
je
pop
mov
shr
dec
and
retf
cmp
cs
ss
jne
or
xor
popf
out
pop
pop
shl
mov
fs
xchg
loop
mov
mov
fs
rcl
sub
int
jne
inc
mov
pushf
stc
or
sub
out
and
cmp
push
pop
pop
push
loop
outs
inc
push
inc
adc
cmc
adc
div
and
jle
std
adc
adc
sub
and
or
dec
cmp
sub
xchg
bound
pop
inc
cs
xchg
mov
pushf
jl
add
jge
cdq
out
sbb
pop
push
je
dec
mov
fldcw
xor
xor
mov
popa
ds
jb
mov
test
cmp
leave
sbb
and
mul
std
hlt
movs
mov
sub
jno
xor
mov
fsubr
in
add
enter
fadd
xchg
in
mov
mov
je
shl
jne
mov
(bad)
xor
xor
std
jbe
and
ficom
call
dec
lock
mov
retf
cli
sub
pop
inc
push
fwait
jle
adc
add
dec
adc
movs
int3
arpl
push
leave
das
lds
mov
and
mov
cmps
add
xchg
out
out
fadd
cmps
xor
inc
das
fnsave
enter
sar
das
sub
les
and
mov
jns
leave
loope
add
stos
mov
and
mov
jecxz
outs
jno
aaa
das
mov
repnz
xor
mov
mov
pusha
xor
(bad)
fs
pop
je
push
retf
retf
pop
push
adc
fst
repz
xor
mov
cmp
xor
retf
(bad)
in
inc
out
outs
in
jae
(bad)
das
or
js
in
shr
hlt
(bad)
shl
sar
aas
or
int
xchg
fs
retf
repnz
mov
fdiv
xchg
pop
pop
enter
cli
movs
add
pop
and
addr16
ret
retf
and
xchg
xlat
or
cmp
push
repnz
int3
out
xor
retf
push
jle
imul
popf
jmp
pop
fcom
mov
cmp
popa
jl
fisttp
mov
add
cmp
cdq
ss
sbb
pop
sub
int
les
pop
ret
dec
push
out
mov
retf
rol
and
sbb
retf
sub
jno
and
out
sti
cwde
jns
stos
sti
mov
jmp
mov
add
pop
mov
jp
mov
xchg
ds
js
xor
nop
aaa
pop
push
mov
test
stos
jns
xor
icebp
pop
hlt
xchg
mov
sbb
loop
cmp
push
and
mov
add
in
sahf
not
(bad)
or
lods
mov
xchg
sub
or
push
pop
fidivr
(bad)
mov
sub
pop
sbb
and
hlt
das
lods
push
cs
mov
mov
(bad)
jnp
sar
add
and
retf
out
mov
xor
pop
(bad)
movs
test
sub
add
mov
mov
nop
xchg
sti
scas
arpl
imul
xor
mov
ja
pop
jnp
cmp
ins
xchg
jno
jle
xor
(bad)
outs
loop
add
and
stos
mov
jno
fxam
pushf
xor
fcomp
nop
into
addr16
sub
shl
and
dec
mov
dec
sar
lea
(bad)
mov
jecxz
dec
add
sub
jns
sar
cli
lods
or
sub
fdivrp
push
inc
dec
inc
hlt
inc
ret
popf
das
pop
rcr
fcmovnu
neg
cli
inc
pop
ror
popf
(bad)
scas
sub
xor
imul
pop
ja
sbb
dec
adc
movs
pusha
pop
pop
mov
nop
inc
jmp
push
(bad)
pop
xchg
xor
mov
retf
xchg
inc
into
movd
jp
(bad)
xor
fimul
or
xchg
xor
mov
or
add
adc
mov
ds
cmp
arpl
les
jmp
mov
or
xchg
mov
sbb
aaa
lods
dec
xchg
or
mov
lahf
(bad)
push
(bad)
ins
test
jne
fstp
adc
xor
push
inc
aaa
or
ror
mov
addr16
hlt
fidivr
adc
inc
or
test
jae
loop
jge
push
cmp
sub
jle
aam
cmps
adc
jecxz
xchg
cmp
mov
out
popf
stc
and
inc
xchg
mov
lods
fucomp
das
push
iret
mov
cs
pop
push
inc
aaa
xchg
loop
jecxz
jle
pushf
jnp
frstor
mov
pusha
mov
imul
push
sub
sub
in
or
push
jno
jg
enter
dec
xchg
loopne
push
mov
lods
or
hlt
leave
(bad)
(bad)
cmp
mov
inc
cdq
xchg
sti
xchg
pop
mov
aaa
in
lahf
gs
mov
sbb
jae
cmp
dec
lods
sub
in
add
movs
jo
inc
sar
or
fidivr
cmp
nop
sbb
push
push
dec
or
xchg
fcomp
(bad)
hlt
adc
lods
retf
push
xor
ret
adc
mov
jmp
test
enter
inc
mov
pop
inc
jb
not
cmp
inc
add
jl
dec
jl
mov
and
push
mov
bound
mov
cmp
push
pop
cli
add
repz
stos
jnp
mov
sar
inc
inc
or
adc
clc
ja
ss
shr
mov
push
movs
idiv
pop
aaa
xor
cdq
cmc
popf
cwde
js
or
(bad)
xchg
add
les
mov
pop
sub
sar
(bad)
sahf
jmp
scas
lods
push
mov
mov
cs
fadd
mov
push
in
cmps
dec
fs
icebp
ret
cwde
pusha
lea
rcr
out
push
jae
ret
aam
inc
icebp
in
sub
mov
jo
or
test
lea
lahf
mov
out
cs
ss
jns
push
lea
push
xor
std
mov
mov
inc
mov
mov
sahf
push
sti
mov
stos
inc
ficomp
call
ss
inc
imul
out
adc
out
jb
int3
xor
and
mov
ins
jno
fcmovne
inc
push
scas
mov
shl
xor
and
cs
xor
xor
cmps
lods
ja
out
loop
mov
sub
dec
dec
pop
jne
sbb
sbb
mov
and
inc
mov
jmp
mov
ror
xchg
add
add
push
ret
add
cld
sahf
rol
inc
in
enter
dec
sbb
sti
ret
bnd
test
movs
push
and
in
inc
fcom
shl
mov
cwde
icebp
or
int3
dec
minps
(bad)
pop
xchg
inc
or
jl
push
addr16
fnop
or
out
add
xchg
adc
aad
mov
add
jecxz
mov
pop
inc
jp
inc
call
sar
and
jbe
mov
pop
inc
inc
cld
mov
outs
pop
fadd
sbb
call
mov
fld
or
cmp
push
add
push
fldenv
push
js
fisttp
push
jns
pop
(bad)
jl
stos
retf
ds
pop
mov
add
(bad)
xrelease
dec
inc
out
inc
loopne
sahf
and
and
fldenv
xchg
push
cmp
xchg
push
cmc
dec
test
clc
xor
pop
pop
shl
popf
scas
mov
shl
mov
pop
sbb
sub
cmps
mov
je
cmovp
fwait
bound
jge
push
stc
push
clc
psllq
jns
dec
adc
xor
adc
jmp
add
popa
test
and
sbb
data16
mov
cld
retf
or
inc
jb
imul
add
jp
inc
ds
(bad)
imul
mov
fwait
arpl
inc
mov
loop
pop
jne
ret
mov
inc
fstp
and
mov
push
pop
ins
scas
pop
mov
push
push
sti
jp
jnp
shl
ret
cli
push
jne
cld
jg
loope
arpl
stos
dec
dec
in
pop
jle
inc
leave
mov
fdivrp
mov
ins
pusha
mov
out
pop
cmc
dec
in
sahf
nop
je
cmc
movs
outs
xchg
(bad)
rol
xchg
dec
pop
and
lea
mov
mov
enter
cmp
xlat
ins
and
add
pop
pop
stos
iret
fbstp
retf
mov
test
mov
lods
pop
ds
inc
dec
sbb
ja
pop
sub
mov
aam
retf
aam
mov
in
mov
enter
outs
test
in
movs
cs
gs
lock
outs
mov
nop
jno
repnz
sub
test
sbb
inc
rcl
fsub
icebp
in
rcl
sti
push
xor
jg
xor
jecxz
mov
pop
aam
dec
or
xlat
and
mov
xchg
rcr
loope
push
push
lods
in
(bad)
cmp
dec
xor
or
shl
add
jno
(bad)
mov
ror
aam
cmps
mov
jno
mov
(bad)
push
jno
jnp
lds
adc
fistp
imul
int
mov
stc
push
xor
mov
sbb
cmps
add
jge
mov
xchg
mov
inc
cdq
and
and
sbb
dec
ins
mov
lock
and
push
dec
aam
xchg
iret
dec
idiv
sub
lds
loop
neg
add
test
imul
shl
(bad)
xor
out
sbb
add
xor
dec
outs
and
leave
js
mov
aad
or
pop
fist
pusha
int
cmc
iret
or
aad
jae
sub
inc
sub
mov
stc
mov
sbb
pusha
cmp
inc
cld
push
out
outs
out
int
inc
add
aad
jns
ret
outs
out
and
pop
lea
ret
and
or
jnp
jo
or
cwde
xchg
loope
shl
stos
gs
(bad)
sub
call
ret
or
shr
inc
inc
fadd
(bad)
push
cmps
push
sbb
mov
push
loopne
sub
pop
jmp
sbb
jne
mov
xor
xor
jae
push
std
imul
xchg
or
dec
in
fadd
call
xor
inc
jns
inc
retf
and
lock
(bad)
mov
lods
ja
clc
mov
mov
and
dec
(bad)
cmc
inc
mov
cmp
cwde
jnp
dec
dec
shl
cmps
cmp
lods
mov
outs
pop
ja
cmp
mov
and
dec
jle
rcr
jle
mov
(bad)
mov
fist
and
jmp
ins
xchg
mov
push
jbe
push
bound
push
rcr
inc
in
and
scas
nop
dec
gs
call
test
push
enter
ins
sub
out
and
mov
enter
sub
js
xlat
fs
in
xor
dec
sub
and
mov
or
outs
lea
jp
(bad)
test
jns
pop
jmp
jbe
xchg
scas
addr16
push
movs
repnz
(bad)
lods
jg
mov
cmps
mov
mov
sub
mov
pop
leave
xchg
scas
or
sub
sub
stc
add
inc
push
pop
jle
push
jg
add
sbb
xor
stc
jne
pop
inc
shr
xor
mov
add
outs
dec
stos
and
mov
loop
xchg
or
inc
scas
mov
push
sar
pop
inc
inc
ja
sub
mov
lods
sub
add
xchg
repz
xchg
outs
sub
test
arpl
test
sub
rol
jl
cmp
sub
pop
jp
xchg
xor
stc
fbld
pop
xchg
into
sbb
xchg
or
push
rcl
sbb
or
rol
cmc
jge
jno
fwait
test
in
mov
jmp
shl
add
push
stos
jne
fistp
xchg
xor
lea
jge
in
inc
pushf
sub
fisub
lahf
jl
mov
jg
neg
(bad)
cmp
inc
push
push
mov
xchg
std
addr16
cs
dec
addr16
cdq
ins
xor
or
je
dec
or
and
mov
repnz
or
popa
pop
gs
cmp
xchg
into
mov
push
out
iret
fsubr
add
cdq
add
rcl
cwde
push
movs
pushf
cmc
(bad)
xchg
push
lock
(bad)
xchg
and
mov
push
cmp
mov
andps
lods
stos
sti
inc
push
fisttp
das
leave
call
dec
xchg
jle
push
jnp
push
push
cmps
pop
sub
imul
retf
sbb
dec
setnp
mov
ja
push
push
loope
xchg
ds
idiv
or
rcr
sbb
ins
rcr
lods
sbb
mov
popa
mov
lock
(bad)
and
sti
repnz
adc
test
lods
dec
and
mov
mov
dec
mov
jae
cwde
and
add
sti
ret
xor
sub
push
leave
jecxz
push
pop
aas
jns
add
js
push
call
aad
or
mov
jo
xor
mov
push
mov
arpl
xchg
push
mov
jmp
inc
dec
push
out
inc
xchg
add
or
jns
or
push
(bad)
ja
xchg
mov
mov
pusha
push
cwde
fcomip
icebp
jae
repnz
loopne
rcl
hlt
mov
aas
add
js
rol
daa
cmp
fsub
aam
icebp
jno
daa
int
mov
jne
push
js
cmps
(bad)
js
or
shl
(bad)
xchg
pop
neg
pop
inc
dec
iret
aad
imul
mov
jmp
out
pop
lock
jnp
mov
mov
sub
stc
inc
scas
pop
retf
dec
cld
sti
iret
xor
jns
out
dec
cmp
sahf
es
loopne
cmc
jae
cld
iret
movs
movs
rcl
push
idiv
push
outs
push
push
inc
push
out
cmps
add
ret
test
add
jno
popf
dec
jmp
leave
in
cmp
bound
(bad)
out
retf
stos
mov
nop
lock
push
outs
dec
mov
or
scas
enter
call
mov
mov
movs
jae
xchg
sbb
aaa
xchg
jmp
and
or
xor
lahf
(bad)
add
fnsave
rcl
inc
push
daa
mov
inc
xchg
add
mov
pushf
pop
(bad)
sti
repnz
mov
push
retf
xor
jl
jl
and
add
or
out
or
mov
lods
mov
stc
mov
clc
mov
jne
mov
mov
sti
rcr
sbb
mov
mov
xchg
add
sbb
pop
xor
fs
and
sbb
dec
rol
imul
test
std
mov
jns
pop
out
mov
loop
add
jnp
mov
add
ins
jge
das
lahf
push
pop
add
scas
push
mov
shr
push
imul
div
lea
outs
mov
retf
fwait
adc
ret
dec
dec
xor
pop
push
cdq
fadd
and
sbb
mov
in
adc
call
dec
shr
sbb
xor
ja
dec
out
mov
jge
mov
inc
dec
pop
cmp
add
or
mov
mov
fimul
stos
adc
in
imul
push
aas
lods
or
popa
int3
inc
enter
jecxz
jbe
inc
cmp
pop
cmp
xor
mov
push
jle
sti
test
nop
sub
stc
xchg
adc
je
adc
lahf
or
mov
aaa
dec
rcl
stc
iret
cmp
(bad)
mov
push
in
sub
scas
test
cmc
lods
pusha
(bad)
out
(bad)
fdivrp
(bad)
pop
in
scas
loopne
fsubr
push
inc
fs
push
and
pop
cli
push
ja
adc
stc
fbld
push
and
shl
mov
xor
mov
cmp
add
int3
pop
dec
fwait
mov
loope
sub
out
jge
imul
dec
les
fisttp
jae
neg
mov
xchg
pop
arpl
mov
xchg
mov
mov
mov
cmps
push
retf
dec
xchg
mov
cmps
mov
and
push
adc
dec
dec
into
cmc
jle
ret
push
fwait
arpl
mov
cdq
stos
sbb
inc
cmps
jmp
push
add
push
into
aam
movs
retf
xchg
dec
cmp
add
inc
arpl
in
rcl
cdq
in
or
sti
btr
jmp
jbe
jne
lods
xchg
jne
add
sbb
inc
das
mov
shl
inc
and
dec
and
push
adc
mov
mov
pusha
leave
into
pop
xor
push
xchg
shl
mov
jbe
or
cwde
jae
int3
in
imul
dec
sbb
pop
dec
shl
xor
sub
je
aaa
js
mov
cdq
push
or
ja
repz
in
xchg
fidiv
dec
test
cmp
lds
inc
out
push
adc
or
pop
shr
mov
fs
xchg
lea
mov
mov
and
mov
sahf
cmp
loopne
and
aas
fisttp
rcl
loopne
pop
fnstenv
rol
in
mov
add
sub
mov
aam
test
int3
out
test
ror
jmp
pop
(bad)
popf
mov
mov
popf
hlt
sub
popf
(bad)
jle
cmp
enter
sar
push
jae
into
ins
inc
stc
and
add
push
aas
push
(bad)
dec
(bad)
mov
push
dec
gs
xchg
hlt
lea
lock
pop
xchg
push
jae
(bad)
mov
cmp
dec
inc
sti
ror
ds
cli
sub
js
xor
cld
xlat
push
mov
cmp
imul
jmp
lods
pop
xchg
(bad)
out
pop
mov
aad
ss
jnp
(bad)
mov
inc
adc
cmps
sahf
push
pop
and
lahf
dec
dec
pop
push
rcr
and
das
sbb
xor
add
push
(bad)
nop
sbb
sar
(bad)
pushf
dec
das
adc
pusha
js
dec
in
xor
cmp
push
sbb
iret
clc
sar
xor
loop
add
inc
cwde
hlt
and
push
mov
loop
out
rcr
mov
add
call
int
loop
inc
aaa
push
cmp
inc
lods
xchg
aad
xor
outs
(bad)
test
cmp
xchg
or
stos
push
arpl
cmp
scas
call
(bad)
mul
sub
imul
fistp
dec
lods
(bad)
cmps
fwait
fs
pushf
cli
lods
aaa
push
pop
mov
stos
pusha
mov
mov
cmps
daa
in
aad
inc
repz
fucomp
sub
ins
sub
js
data16
cld
push
test
(bad)
jecxz
imul
xor
push
adc
aad
test
mov
push
and
dec
nop
or
rcr
add
jnp
lahf
cs
push
xlat
(bad)
cli
push
inc
inc
adc
call
retf
pop
out
cmps
push
nop
push
push
pushf
sub
pop
and
sub
shl
xor
pop
mov
sub
loope
dec
jae
scas
fiadd
or
or
fidiv
out
xchg
adc
mul
aaa
push
fist
inc
mov
adc
or
sub
shl
push
xchg
gs
push
pusha
dec
sbb
inc
(bad)
pop
adc
mov
nop
and
not
rol
sahf
lds
out
pop
nop
mov
loopne
push
or
mov
aaa
fistp
fld
or
sbb
dec
sub
xchg
and
add
sub
aaa
mov
imul
test
or
and
out
sub
or
inc
lods
mov
jno
shr
aad
dec
and
adc
xchg
fnsave
push
mov
push
add
in
call
aam
movs
test
adc
jle
dec
outs
xchg
inc
in
jge
lods
dec
aam
xlat
sbb
sub
scas
addr16
mov
add
pop
mov
xor
sbb
(bad)
jnp
loope
test
dec
xchg
dec
js
sbb
shl
mov
adc
bound
sahf
je
xchg
mov
pop
or
scas
inc
pop
(bad)
mov
sub
enter
mov
inc
mov
(bad)
pop
movs
sub
xchg
push
dec
sbb
push
cmp
jo
ins
adc
aam
sbb
shl
ret
aad
fimul
ins
lock
call
jecxz
jno
pextrw
push
sub
jg
mov
mov
push
cmp
cld
(bad)
std
xchg
or
test
movs
imul
adc
popf
lea
test
xchg
inc
xor
iret
sbb
arpl
adc
gs
repnz
cmps
mov
mov
pushf
and
rcr
popf
out
push
xlat
pusha
test
fcmovu
inc
add
ret
fimul
iret
mov
mov
out
adc
ins
jae
das
sub
mov
adc
int
enter
out
xor
xchg
(bad)
(bad)
cmps
or
inc
and
adc
adc
jmp
inc
lock
pop
retf
fidiv
int
int
jl
(bad)
stos
jnp
rol
cmps
jmp
stos
stos
xchg
sbb
and
dec
jno
lods
add
out
sbb
cs
xor
lock
xor
pop
das
in
loopne
jl
mov
mov
leave
or
ror
mov
xlat
into
mov
shl
inc
add
or
jb
test
jbe
pop
icebp
outs
adc
adc
jp
fnsave
sub
mov
sub
jl
cwde
xor
and
pusha
cmps
rcl
int
scas
inc
sbb
hlt
fisttp
(bad)
sub
scas
push
cmp
mov
(bad)
mov
xchg
jmp
jmp
mov
fist
pop
xchg
sar
mov
cmps
aad
add
sahf
pop
dec
cmp
push
cmp
rcr
arpl
jne
ret
stos
loopne
pop
or
stos
cs
sub
and
test
mov
fs
xor
sub
in
sub
lods
scas
sbb
sub
icebp
pusha
jl
iret
mov
jns
js
mov
and
xchg
dec
fsubr
leave
mov
cld
leave
inc
mov
test
cmc
dec
in
imul
dec
mov
inc
call
xor
test
mov
iret
sbb
mov
xor
ror
push
push
and
shl
aaa
les
aaa
inc
inc
and
into
inc
call
or
adc
call
lds
sbb
xor
mov
popa
dec
mov
sub
cdq
cdq
xlat
pop
jmp
jmp
bound
data16
adc
int
repnz
lock
xor
push
mov
fmul
iret
out
hlt
clc
cmps
inc
mov
mov
xor
cmp
popf
pop
and
push
mov
test
(bad)
loope
or
cs
cmp
inc
mov
aas
jno
lods
xchg
jmp
movs
addr16
sbb
add
pop
cmp
add
ret
mov
movs
loop
loop
aaa
lds
mov
xor
out
enter
fmul
mov
mov
cld
retf
imul
or
dec
jb
ins
adc
mov
rol
out
loop
or
mov
fcmovnb
mov
and
cdq
or
push
int3
out
mov
je
call
push
inc
push
pop
shr
bswap
jl
push
jg
sbb
and
cmp
jp
test
dec
ja
outs
sub
cmp
cdq
outs
dec
es
or
inc
cld
add
mov
ss
rcr
cmp
lock
pop
fcmovb
dec
in
xor
shl
iret
and
popa
in
fild
adc
lea
retf
add
call
loop
mov
popf
lock
loop
test
cmp
mov
movs
and
push
cld
fmul
sub
aaa
or
push
and
xor
dec
imul
mov
mov
pop
(bad)
cs
fsub
xchg
fyl2x
adc
xchg
mov
push
dec
sbb
adc
ficomp
ret
out
mov
adc
mov
(bad)
icebp
dec
leave
sar
cmp
mov
(bad)
mov
(bad)
mov
push
jmp
push
movs
jmp
lds
std
mov
icebp
popa
xchg
out
or
rcr
neg
es
push
jae
xor
push
popf
aaa
dec
dec
dec
mov
inc
push
fild
push
push
or
mov
test
jl
imul
int
or
sbb
mov
jecxz
mov
cmc
sysexit
sahf
dec
frstpm(287
jo
and
jne
jge
add
add
test
fidiv
sbb
push
mov
sub
je
mov
shl
sbb
mov
cs
pop
xor
in
mov
test
add
cdq
xchg
cmp
test
sbb
inc
loope
adc
not
inc
jge
cmp
cmp
mov
xchg
or
lock
pushf
lea
(bad)
jno
in
pusha
sahf
and
es
cmp
(bad)
fwait
sbb
into
retw
xlat
es
(bad)
daa
adc
cs
outs
xchg
or
mov
imul
mov
xor
cmp
bound
mov
lds
mov
imul
fidiv
jnp
stc
mov
mov
push
dec
xchg
mov
in
cdq
pop
jbe
ins
push
rcl
add
jle
adc
sub
push
dec
push
jmp
mov
(bad)
cmp
sbb
mov
in
(bad)
sub
mov
das
out
aas
pop
push
jg
int
inc
std
inc
ret
cwde
aaa
xchg
scas
stc
sub
mov
lock
loopne
pop
pop
scas
mov
push
inc
adc
ret
scas
(bad)
dec
je
push
mov
mov
shl
shl
cmp
dec
sbb
add
jp
pop
dec
clc
jg
mov
mov
sti
pusha
pop
test
dec
jnp
mov
pop
push
push
stos
iret
call
jl
pop
cmp
pop
int3
stos
(bad)
pop
fst
push
push
test
pop
jo
adc
xor
mov
div
adc
ins
es
es
mov
into
int3
div
bound
(bad)
cli
xor
adc
cmp
jmp
mov
and
cli
sub
imul
push
adc
bound
lods
mov
into
mov
movs
inc
jmp
shl
(bad)
sub
lahf
push
cmp
scas
inc
stos
pop
add
fadd
xor
xchg
cmp
inc
add
xor
scas
adc
outs
test
rcl
mov
daa
test
dec
je
adc
icebp
pop
retf
sub
push
scas
push
push
out
shl
pop
mov
add
xor
jmp
xor
inc
imul
jl
sub
push
sahf
shr
arpl
push
jge
pop
adc
cli
out
inc
in
jg
sti
push
add
dec
fldenv
dec
dec
test
pop
(bad)
fistp
dec
iret
lds
or
xchg
push
push
cli
inc
jae
cmps
cwde
fdivp
fcomp
sub
ret
test
xchg
jbe
mov
outs
cli
mov
xor
xlat
outs
push
cli
(bad)
aam
mov
out
push
lahf
mov
jne
cwde
loope
lock
test
lods
jl
enter
(bad)
mov
pop
mov
xor
in
pop
ins
bound
xor
icebp
inc
int3
dec
mov
fidiv
cmp
lods
mov
add
cli
cmp
mov
cmp
pop
stos
mov
out
mov
gs
xchg
fcmove
and
pop
jnp
jbe
push
adc
sbb
out
out
pop
cmc
inc
pop
movs
std
pop
mov
sbb
sub
lahf
push
jae
or
push
pop
enter
sub
jp
stos
loope
mov
inc
nop
test
jge
push
mov
test
scas
adc
in
popf
mov
jb
cmp
cmp
aad
jecxz
adc
or
clc
xor
mov
sbb
sub
xchg
sahf
jmp
sub
fdivr
aas
scas
inc
cli
stos
(bad)
ins
or
sbb
fild
inc
mov
cmp
rol
jbe
xchg
fcomp
mov
inc
icebp
xchg
dec
sar
inc
dec
icebp
fstp
(bad)
mov
cmp
xor
or
jnp
mov
xor
inc
add
mov
stos
movlps
je
push
les
mov
imul
mov
and
cmp
xor
lock
jnp
push
add
and
jp
inc
dec
out
loope
comiss
mov
adc
scas
imul
mov
or
std
push
(bad)
repz
cmp
add
ror
int
inc
scas
mov
jno
dec
dec
push
add
repz
lds
fisttp
cmp
xchg
mov
movs
xchg
jge
sbb
cmp
loope
into
and
push
mov
sbb
xor
call
loopne
ficom
ret
adc
sbb
push
movs
loop
add
dec
sbb
cmp
jmp
adc
call
sub
jmp
dec
ret
push
lds
gs
test
in
lds
sahf
lds
ds
arpl
and
out
mov
mov
imul
mov
(bad)
mov
daa
cmp
test
sbb
mov
imul
adc
rcl
into
and
fcom
mov
hlt
xchg
sub
push
movs
mov
xchg
hlt
fisttp
ficom
out
cmp
and
iret
hlt
ret
cli
push
aaa
xchg
aaa
outs
enter
bound
sub
mov
mov
sbb
adc
fiadd
pop
xor
fistp
ret
cmp
test
adc
les
fisub
inc
inc
xchg
(bad)
out
xchg
push
sbb
jb
mov
dec
cmp
scas
push
(bad)
sar
cld
rcr
into
jp
xchg
xor
pop
icebp
fmulp
xor
inc
shld
inc
mov
shr
int
stc
daa
test
cmp
imul
cmps
push
or
loopne
and
sbb
dec
inc
cmp
scas
mov
pushf
mov
jno
or
icebp
in
popa
fidiv
(bad)
jo
inc
cli
jmp
adc
je
xchg
pop
fistp
cmp
xchg
jle
inc
jbe
fwait
rcl
sub
ins
push
jg
sti
inc
add
cmps
or
(bad)
push
(bad)
sbb
adc
leave
cmp
lds
cmp
jmp
inc
and
movs
sub
jp
sahf
pop
test
jle
jns
xor
jge
mov
dec
aas
fist
inc
xchg
dec
mov
adc
aas
pop
call
mov
xchg
jo
dec
in
inc
inc
sbb
ja
int
mov
push
js
mov
cmc
data16
popf
dec
ror
mov
cmc
push
and
push
sub
scas
iret
mov
adc
push
mov
pop
fstp
jmp
xor
movhps
cmps
jecxz
mov
mov
sub
or
push
call
mov
push
mov
and
in
xchg
push
ret
sbb
push
ins
out
sbb
inc
xor
fucom
mov
je
add
mov
mov
test
jecxz
or
outs
or
sbb
pop
xor
sbb
dec
loope
repz
push
in
pop
and
rcl
mov
push
les
cmp
jl
(bad)
fst
pop
pop
into
mov
rol
inc
xor
(bad)
jns
push
test
jns
mov
xlat
stos
jnp
hlt
call
jmp
adc
mov
push
inc
mov
mov
jl
clc
sbb
sub
out
sar
adc
cmp
mov
and
lods
inc
push
clc
xchg
or
and
xchg
mov
jl
lds
das
pop
sbb
mov
retf
fadd
cmp
sub
mov
and
or
lods
push
and
adc
jns
mov
inc
cmp
jb
test
(bad)
push
dec
xchg
push
repnz
xchg
fwait
or
mov
adc
mov
push
push
jmp
clc
inc
sbb
add
pop
jge
jnp
pop
lds
test
add
repz
push
lahf
jge
cmp
fisttp
in
pop
cdq
add
xchg
daa
add
sbb
test
mov
pushf
je
cld
mov
adc
mov
in
arpl
xor
mov
jg
cwde
call
push
mov
sub
out
(bad)
cli
jne
sub
test
cmp
stc
cmp
or
test
xchg
int3
jb
cmp
cmps
adc
ret
or
push
pop
xlat
(bad)
pop
xlat
cmp
jno
jp
(bad)
stos
ror
ins
test
adc
mov
popa
test
enter
scas
jl
cmps
dec
push
dec
dec
add
add
pusha
jb
scas
xchg
pop
inc
mov
shl
mov
push
into
pop
xor
cwde
mov
in
xor
out
repz
mov
push
jmp
mov
mov
icebp
sub
and
jge
jbe
inc
push
ret
bswap
push
inc
mov
dec
mov
cmc
push
ret
sti
je
std
scas
shl
(bad)
out
mov
adc
cmp
mov
shl
cvtps2pd
loope
dec
pop
mov
enter
mov
jno
jo
xchg
push
movs
data16
or
(bad)
ja
push
mov
stos
pop
mov
ins
sbb
sub
cmp
add
scas
or
sub
mov
loopne
mov
dec
xor
jnp
or
gs
push
or
clc
pop
fld
mov
aam
push
sbb
mov
sbb
mov
je
and
iret
or
(bad)
fisub
retf
jb
in
vandps
dec
ja
and
sbb
cmp
adc
pop
pop
xchg
or
(bad)
sub
mov
adc
and
lods
out
jmp
(bad)
and
mov
stos
mov
int
mov
dec
sub
outs
inc
xchg
outs
inc
and
shl
xor
movs
xor
and
mov
outs
inc
cdq
addr16
in
adc
(bad)
push
out
ret
lods
pop
les
xor
lds
inc
(bad)
push
inc
cld
mov
shr
sub
dec
nop
fsub
pop
jmp
mov
jbe
out
sar
xor
(bad)
aas
push
dec
pop
push
mov
repz
mov
and
xchg
fidiv
loope
pop
into
hlt
sub
pop
movs
mov
mov
xor
movs
(bad)
inc
dec
out
outs
xchg
dec
cli
fsubr
jp
jl
stos
inc
mov
dec
out
dec
pop
nop
das
out
mov
fnstsw
inc
outs
xor
popa
in
dec
pop
xchg
loopne
pushf
mov
mov
pop
div
mov
mov
shr
lods
xor
call
sbb
jmp
cmp
or
repz
cmc
call
or
sub
arpl
cmp
test
cwde
mov
adc
(bad)
iret
test
dec
jp
out
js
test
popf
and
ja
cwde
sbb
mov
add
leave
mov
pushf
jle
mov
je
inc
loopne
nop
(bad)
fmul
mov
test
jmp
fwait
pop
push
das
xor
iret
xchg
push
jl
loop
dec
popa
push
push
mov
sub
adc
test
inc
ror
je
mov
inc
paddsb
adc
xor
ds
popa
cmp
aam
xchg
stos
popf
push
pusha
mov
inc
xchg
aas
mov
retf
xchg
cmp
aaa
popa
scas
cmp
cmc
xlat
lods
scas
gs
jbe
inc
mov
ds
xchg
adc
ss
cmps
movs
xor
stc
xchg
out
pop
stos
inc
movs
nop
jae
pop
shl
rol
arpl
(bad)
mov
ret
pusha
aas
add
arpl
xchg
sbb
fs
lahf
ss
imul
pop
jg
push
out
in
jl
mov
jg
mov
and
push
pop
es
arpl
adc
je
xor
or
dec
lea
xor
je
add
xor
nop
cld
pop
shl
add
cmps
test
aaa
inc
bound
push
cmp
data16
or
sbb
mov
cmc
jae
sti
inc
repz
mov
add
xchg
in
aas
shl
call
sbb
in
sub
pop
xchg
aaa
test
out
xchg
and
js
push
(bad)
and
sub
mov
sbb
js
jmp
or
mov
push
or
cmps
jbe
cmp
adc
inc
loop
mov
ins
mov
sbb
xlat
clc
push
dec
sar
and
add
and
out
cs
mov
mov
xchg
std
cmp
in
xchg
popf
ror
inc
push
mov
aam
pop
cmps
fnstcw
add
ret
rcl
invd
pop
mov
(bad)
popf
lods
lods
call
jmp
cmp
(bad)
ins
mov
out
adc
aaa
into
in
xlat
outs
(bad)
mov
int
xor
add
inc
pop
or
call
mov
aaa
inc
xchg
pop
scas
jl
mov
not
xor
das
jge
jp
push
push
pop
lds
nop
fs
dec
loop
mov
inc
nop
or
mov
mov
or
sbb
jge
mov
pop
daa
mov
jno
inc
sub
outs
mov
add
sbb
inc
test
push
test
sbb
ficom
jp
popa
push
mov
jo
cmp
mov
mov
jae
ins
push
std
xchg
add
cli
add
and
dec
sub
lods
inc
rcr
mov
sub
jns
fs
adc
mov
pop
mov
add
stos
or
ret
cmp
ds
and
sbb
jecxz
scas
cs
neg
lock
int3
sar
iret
ret
into
jp
inc
scas
addr16
inc
inc
out
xchg
push
arpl
call
int3
fs
xchg
shl
jl
inc
mov
push
test
xor
sub
test
rcr
ins
sub
rol
test
(bad)
and
xlat
pop
cmp
jb
cli
imul
add
fincstp
mov
stos
sbb
pop
dec
ins
mov
int3
sbb
jnp
mov
cmp
xor
(bad)
hlt
call
and
mov
pushf
or
fistp
or
fsub
and
adc
sub
(bad)
xor
or
scas
out
(bad)
gs
mov
dec
shl
jo
xchg
or
aad
xchg
int
inc
xchg
xchg
fadd
or
(bad)
mov
inc
cwde
mov
push
ret
ret
shr
ror
mov
mov
inc
js
mov
neg
cwde
jmp
pop
mov
cmp
ss
mov
mov
call
cli
sbb
fistp
add
inc
jne
inc
sbb
jmp
ins
mov
jo
(bad)
xchg
sbb
push
les
xor
test
and
mov
and
jae
outs
imul
dec
inc
or
clc
sub
retf
(bad)
pop
jbe
jo
cmps
jno
movs
icebp
adc
lds
popw
test
jg
(bad)
jle
dec
fimul
fs
dec
fpatan
addr16
aas
cwde
ret
add
pop
fadd
in
mov
(bad)
jl
ss
inc
or
shl
movs
xchg
stc
adc
out
not
pop
xor
push
loopne
xor
xchg
add
sub
sub
(bad)
mov
leave
int3
ret
call
mov
and
jle
hlt
xlat
and
cmp
mov
fld
lods
inc
add
leave
cli
inc
mov
jl
add
lea
cld
dec
xchg
sbb
adc
xchg
mov
lahf
xchg
in
mov
popf
lock
add
mov
repz
div
sbb
ficomp
jle
cmp
add
arpl
cs
rol
les
pop
inc
(bad)
rol
icebp
jge
call
xor
cmc
pop
pop
fld
inc
lods
cmp
pop
(bad)
dec
push
push
outs
popa
(bad)
mov
out
xchg
push
je
dec
sbb
mov
lock
test
pop
loope
enter
add
repz
adc
loopne
shl
lods
fldcw
ja
dec
sub
jae
(bad)
mov
or
adc
and
xchg
dec
pop
or
rcl
push
dec
movs
mov
sbb
pushf
adc
or
xchg
jnp
test
mov
pusha
jmp
mov
push
jne
pop
punpckhbw
daa
inc
iret
or
add
jmp
lahf
dec
ds
inc
dec
mov
neg
push
les
sub
sahf
and
xlat
jecxz
not
scas
adc
test
imul
mov
sbb
mov
gs
int
ror
int
cmps
dec
(bad)
and
xor
adc
sub
rcl
aaa
aam
mov
aam
lods
jne
dec
inc
jge
movs
xor
add
xchg
(bad)
mov
xor
pop
mov
xchg
dec
shl
mov
and
adc
cmp
fimul
iret
lock
retf
stos
push
repz
fsubr
dec
(bad)
jmp
or
push
dec
cld
out
in
dec
pusha
test
xchg
and
xchg
jno
ret
clc
dec
xchg
aaa
adc
xor
jmp
mov
or
xchg
sbb
xchg
ss
pop
aaa
cs
jg
loopne
jo
xchg
xor
jecxz
xchg
add
mov
imul
cmp
popf
dec
pop
stos
sbb
jl
lea
mov
les
ret
dec
mov
push
fist
sar
or
mov
ss
add
stc
xchg
sub
test
mov
mov
pop
dec
(bad)
mov
push
push
pop
cs
sbb
mov
push
test
sbb
pop
in
and
inc
cdq
shl
or
sub
test
cld
(bad)
push
ins
pop
out
leave
pop
or
(bad)
loopne
pop
xchg
jmp
stc
sbb
push
sbb
stos
adc
fistp
pop
adc
push
aam
pop
add
cdq
jb
pop
adc
xchg
jge
cmps
cmp
ja
sub
popa
enter
js
xchg
ja
mov
sti
sub
mov
jbe
pop
mov
push
mov
xor
aad
or
mov
imul
fbstp
xor
jg
jbe
iret
loope
cli
push
mov
sub
sbb
aas
loop
xor
lahf
add
jge
xchg
(bad)
jmp
outs
cmp
or
push
outs
mov
lods
mov
push
and
(bad)
xchg
ss
(bad)
loope
lods
and
arpl
push
add
popf
xchg
pop
adc
mov
mov
movs
ja
(bad)
aas
out
popf
push
push
int3
jae
push
sbb
mov
int
sahf
dec
loop
push
inc
sub
jl
cvtdq2ps
xor
sbb
in
mov
std
sub
lds
scas
repnz
call
xchg
adc
daa
mov
pop
mov
mov
mov
out
ficomp
sub
sbb
es
mov
and
loopne
adc
and
ins
js
test
dec
xor
xor
mov
shl
movs
sbb
outs
shr
loope
das
icebp
fwait
mov
and
sub
imul
cmps
inc
shr
jecxz
shl
cwde
dec
push
mov
fild
ja
(bad)
ja
jmp
enter
out
add
addr16
arpl
out
out
jb
add
pop
lea
adc
and
cmc
cmps
stos
pop
loope
sbb
jbe
or
ficomp
sbb
sbb
lock
cdq
add
xchg
mov
test
sub
aaa
mov
jno
add
out
sbb
mov
push
add
out
pop
test
shl
and
sahf
and
push
cld
inc
dec
cs
cmps
mov
sub
xchg
and
mov
hlt
pop
mov
cdq
int
lds
xchg
ss
mov
inc
fcmovne
loopne
sahf
ror
dec
jnp
adc
in
mov
dec
push
mov
cmp
(bad)
mov
loop
pushf
sbb
out
jg
mov
xor
int3
stos
stc
mov
vmread
ret
inc
push
cmp
mov
rol
in
pop
pop
int
xchg
jmp
jno
(bad)
popa
hlt
jbe
ret
adc
in
adc
adc
mov
mov
ret
cmp
sub
or
data16
call
ss
jo
imul
jge
xchg
xchg
sbb
cmp
rcr
rcl
xchg
inc
or
je
pusha
cli
ja
dec
mov
jl
mov
rol
enter
mov
shl
adc
jno
jb
pop
jl
push
xchg
adc
jge
mov
xor
lods
mov
shr
jae
cdq
into
aaa
adc
les
in
(bad)
or
mov
out
sti
out
sub
jb
jle
outs
adc
push
or
loop
gs
adc
pop
out
mov
mov
add
stc
gs
std
lods
xor
dec
es
adc
mov
or
mov
sub
rol
imul
test
in
retf
xor
(bad)
adc
pop
retf
xchg
pop
or
movs
cmp
pop
ds
shr
movs
mov
in
cld
xor
push
mov
or
dec
xor
mov
dec
xchg
movs
sub
push
push
mov
jne
add
inc
xchg
(bad)
idiv
sub
loopne
pop
or
inc
(bad)
into
xlat
and
cmp
jg
arpl
fild
sbb
pop
push
mov
push
test
and
adc
fild
dec
cwde
sub
loopne
mov
outs
cli
lock
int
retf
cli
call
xchg
fadd
mov
lods
ins
dec
(bad)
mov
imul
rcr
into
pop
sub
pop
ret
xchg
add
retf
xor
jle
mov
mov
retf
xchg
icebp
jo
bound
mov
call
clc
test
enter
xchg
sbb
jne
loope
mov
dec
sub
push
jle
lea
jbe
fst
and
ds
dec
punpcklbw
push
dec
jl
ins
add
lea
jnp
pushf
pop
addr16
arpl
xchg
outs
push
push
loope
xor
outs
out
popf
xchg
adc
inc
out
movs
sbb
jecxz
mov
loopne
push
clc
mov
aaa
pop
movs
jno
scas
out
call
shr
imul
sub
(bad)
jl
jne
call
cmp
mov
push
enter
push
push
dec
iret
lods
aad
ds
jne
cmp
mov
and
cld
push
call
and
fsubr
xor
sti
(bad)
jne
or
stos
cmp
sub
ss
retf
or
or
sbb
sti
jb
clc
push
mov
daa
add
out
stc
add
pop
jg
cmps
push
sbb
aas
jnp
xor
xor
shl
mov
sbb
(bad)
das
mov
xchg
cmp
jmp
call
pop
jg
stos
dec
aad
inc
call
and
xchg
mov
adc
mov
sub
sbb
inc
push
es
hlt
cwde
dec
inc
xchg
pop
into
dec
jae
cmp
add
lea
inc
out
sub
stc
jmp
out
mov
mov
shl
pop
jp
add
(bad)
leave
pop
or
sub
cmp
mov
retf
ret
aaa
test
jge
push
jno
xchg
(bad)
ds
mov
and
mov
gs
or
fwait
nop
fs
arpl
loopne
and
dec
sub
push
movs
aaa
jb
adc
xor
and
rcr
fdivp
test
movs
clc
lahf
cmps
and
jb
sub
cmp
je
push
inc
or
enter
mov
rol
mov
mov
popa
fcmovbe
loope
adc
hlt
sub
jo
xchg
mov
push
add
ss
push
xchg
inc
and
nop
mov
cld
xchg
add
(bad)
fdivr
and
cli
in
in
(bad)
pop
mov
retf
pop
and
mov
push
or
test
push
mov
xchg
mov
shl
popa
out
in
dec
xchg
stos
jmp
mov
lea
sbb
sub
cmp
test
jmp
sti
outs
jne
or
mov
fstp
mov
inc
lods
add
test
sbb
mov
pop
sar
and
sub
pop
cdq
xchg
jne
xchg
fwait
imul
mov
rcl
std
aam
(bad)
pop
xor
addr16
enter
out
xchg
mov
daa
dec
jne
shl
push
(bad)
pusha
(bad)
inc
loope
aaa
retf
sub
leave
iret
jmp
lock
mov
push
add
pop
mov
test
or
push
mov
pop
loopne
jp
aas
outs
enter
pop
repz
xor
pop
pop
lods
mov
adc
loopne
push
xchg
dec
pusha
sbb
sbb
and
cmc
retf
push
sbb
or
and
push
adc
leave
neg
adc
repnz
(bad)
sbb
fcomp
outs
cmp
jg
fldenv
aad
test
iret
add
hlt
in
nop
pop
cwde
je
icebp
icebp
imul
push
lahf
jmp
out
xor
ror
push
dec
out
and
mov
sbb
jnp
or
xchg
rcl
pushf
mov
popa
add
mov
inc
fwait
cdq
(bad)
shr
cmp
fcomp
jge
pop
jp
jns
inc
mov
adc
xor
jle
loopne
jle
mov
mov
jbe
shl
xor
dec
jno
jg
scas
icebp
ja
mov
popa
pushf
rcr
sub
lock
adc
popa
push
test
or
shr
xor
push
mov
adc
cmp
xor
or
adc
mov
push
mov
enter
adc
outs
outs
ins
pop
outs
test
cmc
jle
mov
adc
popa
cmp
fsub
and
jne
addr16
mov
inc
push
ficom
inc
imul
or
xchg
test
sub
imul
xchg
mov
jecxz
dec
push
icebp
add
js
(bad)
mov
pop
cmp
push
test
or
ror
xchg
xchg
pop
(bad)
fmul
jnp
lar
mov
push
jl
popf
jmp
call
mov
jmp
jecxz
into
add
mov
cmp
push
xchg
ss
ins
cmps
arpl
lods
push
sahf
je
cmp
sub
neg
push
and
lods
sub
imul
inc
mov
test
in
xchg
(bad)
cmp
call
idiv
xchg
imul
sbb
lods
or
sub
out
call
add
fs
mov
mov
mov
dec
rcl
pop
xchg
(bad)
jl
mov
and
cmp
mov
sbb
pop
(bad)
push
sub
sar
js
lds
ins
jmp
and
mov
and
xchg
sti
mov
jmp
adc
imul
ja
adc
in
add
rol
(bad)
scas
jmp
mov
mov
and
dec
push
outs
nop
mov
cli
lahf
out
add
mov
hlt
sbb
xor
adc
pop
out
xchg
stos
(bad)
mov
cmp
mov
mov
(bad)
lock
clc
aas
cli
dec
sub
out
cwde
jge
xchg
xor
push
mov
mov
ss
clc
add
xor
add
loope
test
daa
cmp
adc
inc
dec
dec
cdq
ins
jmp
cmp
data16
out
dec
scas
mov
or
cmp
test
and
lea
ins
inc
outs
or
jp
sbb
outs
repz
or
repz
jbe
in
hlt
sar
xchg
cmp
in
in
jecxz
xchg
xchg
mov
push
and
push
mov
mov
outs
cmp
push
mov
push
adc
in
cmps
arpl
or
pop
xchg
sar
push
dec
and
or
inc
jp
xchg
mov
test
movs
mov
retf
inc
test
jmp
and
addr16
fsubr
movs
jecxz
sbb
ins
cwde
mov
cmp
cdq
push
das
aad
mov
fwait
cld
cmp
jmp
jmp
xor
cmps
xchg
mov
shl
adc
lock
clc
and
cmps
lock
xor
xchg
mov
adc
loop
sub
cmp
sbb
add
sahf
loope
cdq
jmp
push
stos
call
rcl
mov
and
lea
inc
shl
adc
dec
retf
cmps
js
add
outs
pop
push
mov
inc
pop
cmp
ds
(bad)
lods
inc
pop
pop
fucomi
xchg
mov
pop
lock
mul
pop
movs
jns
je
stos
pop
xchg
sub
addr16
sub
xor
mov
(bad)
xchg
aad
rcr
dec
sub
add
push
pop
stos
mov
ret
les
test
push
into
xchg
and
(bad)
or
push
or
xor
ja
inc
lds
and
pop
and
push
push
inc
sub
jno
pop
xor
and
mov
dec
mov
test
push
inc
cmp
and
cld
add
cmp
jmp
xchg
shl
mov
pop
add
jmp
jae
out
pop
pop
sub
fdivr
sub
jo
stos
dec
addr16
and
push
imul
push
push
and
(bad)
loop
inc
xor
imul
adc
or
inc
pop
icebp
ins
int
dec
and
mov
(bad)
xor
aaa
cmps
int3
cmps
push
mov
ret
mov
push
repnz
mov
mov
and
daa
sub
push
sub
mov
stc
rcl
jp
fsubr
push
push
mov
int
popa
clc
or
xchg
inc
lds
push
jp
cmp
popa
sub
mov
aam
jns
movs
(bad)
jecxz
mov
xchg
rcl
scas
fs
pushf
pushf
movs
aam
sbb
shl
mov
mov
div
sbb
fsubr
pop
(bad)
fcom
push
or
and
mov
inc
or
sti
pop
xchg
mov
xchg
add
sbb
and
inc
stc
and
sub
add
arpl
lahf
jno
sbb
lds
jns
mov
nop
mov
(bad)
movs
enter
test
add
in
dec
inc
xor
xor
pop
cmp
sub
jns
sbb
jmp
adc
sub
push
fwait
inc
jmp
cwde
cmps
aaa
xor
xchg
addr16
mov
dec
shr
push
dec
div
aaa
mov
es
cdq
out
mov
xchg
mov
outs
bound
add
repz
xor
stc
sbb
std
mov
jl
mov
imul
dec
mov
loope
sub
vmovntdq
mov
outs
cmp
arpl
push
jb
jno
fwait
push
add
bound
dec
adc
arpl
stos
xchg
data16
scas
fs
sub
jle
mov
aaa
sub
scas
scas
mov
out
pop
inc
cwde
outs
loope
push
sbb
leave
inc
pop
or
inc
iret
mov
xchg
fisub
ficom
into
dec
and
or
scas
inc
repnz
fwait
sub
into
xchg
lock
aaa
out
add
in
jns
add
fdiv
stc
stos
mov
aad
fsubr
int3
mov
and
dec
outs
push
test
and
push
sub
aam
or
inc
shr
xor
fdiv
psraw
pop
bound
test
in
push
adc
sbb
add
dec
xchg
pop
xor
xchg
test
sbb
repz
fadd
or
stos
sub
inc
cmps
mov
and
sub
xor
dec
push
into
fiadd
test
xor
iret
xor
lock
inc
push
or
jns
xchg
cmp
sub
jp
sub
mov
les
ret
ss
data16
lock
and
repnz
mov
push
fiadd
and
test
hlt
dec
xchg
rcr
jo
xchg
cmps
rcr
int
mov
inc
dec
sub
fsubp
pusha
mov
(bad)
xor
rcl
or
imul
jg
test
out
fdivp
cmp
xor
or
jmp
mov
bound
fdiv
push
in
or
je
xchg
jg
dec
push
dec
cdq
leave
shl
pop
or
popf
test
pushf
(bad)
jmp
je
adc
inc
push
(bad)
sbb
push
shl
and
push
sub
repz
aam
jp
repz
clc
adc
lds
push
dec
and
fisubr
inc
inc
int3
(bad)
xor
je
jp
adc
mov
(bad)
hlt
scas
pop
add
int3
mov
inc
pushf
not
xchg
int
pop
scas
and
fmul
jg
jmp
repz
(bad)
pop
fidivr
xchg
inc
cmp
pop
fsub
sub
push
icebp
push
(bad)
(bad)
std
and
and
pop
mov
sbb
pushaw
(bad)
mov
dec
pop
or
lods
pop
test
out
aas
ins
ficom
pusha
lahf
jmp
sbb
mov
jbe
(bad)
push
adc
jno
call
scas
sbb
mov
or
mov
push
stc
push
shr
(bad)
fisubr
mov
pushf
sub
push
and
mov
mov
mov
call
repnz
mov
cmp
daa
xchg
nop
push
xchg
add
and
sub
fistp
scas
movs
bound
jnp
(bad)
cdq
cmp
call
fwait
inc
sbb
pusha
sbb
jbe
and
sbb
mov
cmp
xor
(bad)
xchg
dec
nop
js
mov
lods
fist
jmp
add
cmps
mov
and
sti
pop
fmul
inc
ror
mov
xchg
mov
sbb
fst
dec
push
xor
fisub
add
pop
out
icebp
xor
jb
ds
imul
sbb
push
sbb
dec
(bad)
dec
xor
pop
xor
cmp
xchg
out
cld
inc
enter
pop
dec
add
(bad)
cwde
push
cwde
adc
ins
add
movs
das
scas
sbb
inc
clc
adc
sub
std
mov
call
scas
mov
fiadd
mov
inc
cmps
sbb
sbb
lock
out
push
jl
cmps
loopne
mov
pop
scas
inc
inc
retf
lods
in
clc
add
enter
call
cmps
retf
dec
xchg
adc
xor
pop
shl
pop
xor
popa
push
outs
mov
pusha
dec
pop
cmp
push
push
lods
cs
ror
mov
into
std
(bad)
gs
and
xor
sbb
std
mov
iret
enter
pop
xor
mov
mov
mov
cdq
(bad)
sub
dec
je
scas
xchg
pop
cmp
xchg
mov
js
sub
mov
inc
push
fimul
add
mov
push
or
or
js
ins
sbb
add
outs
bound
pop
je
jge
jmp
lds
dec
cdq
iret
pop
es
ds
adc
ret
mov
test
xchg
adc
or
sub
ins
push
inc
cmp
je
xchg
(bad)
jo
or
sbb
out
dec
pop
arpl
sar
sub
(bad)
pushf
das
pop
xor
repz
cmc
jecxz
nop
mov
jb
daa
ins
pop
(bad)
mov
sbb
popf
push
mov
fisttp
xor
xor
sub
push
mov
sar
aas
xchg
pop
fstp
add
inc
into
pop
jl
xchg
pop
or
sub
ins
(bad)
out
lods
inc
es
cld
pop
mov
mov
and
add
pop
and
add
pop
(bad)
lock
push
movs
scas
ja
push
inc
fsubr
inc
sbb
cmps
cmp
mov
xlat
dec
push
xchg
retf
and
inc
push
xchg
xchg
lock
dec
pop
daa
ja
push
iret
sbb
sub
xchg
cmp
xchg
mov
inc
push
mov
loopne
imul
test
mov
sbb
jb
es
shr
test
and
loope
(bad)
pop
xor
es
popa
es
xor
add
lea
cmp
stc
ins
jns
jae
inc
data16
repz
push
(bad)
call
pop
fidiv
xlat
pop
daa
stc
add
lock
(bad)
mov
inc
sbb
pop
push
sbb
shl
mov
pushf
fistp
xchg
cmp
cli
adc
sbb
wbinvd
addr16
and
xchg
out
pop
into
add
outs
ds
sahf
or
iret
cdq
aad
push
ja
pop
ret
mov
bound
sub
jnp
mov
test
mov
mov
mov
xor
popa
pop
mov
mov
imul
dec
shr
jae
xchg
cmp
es
sbb
and
cli
dec
push
xchg
or
mov
xchg
jmp
push
mov
jge
(bad)
in
movhps
jg
loope
stos
sub
cdq
and
xor
sti
push
jo
pop
cwde
sahf
lock
mov
aad
stc
test
push
xchg
add
test
mov
call
or
xchg
scas
pop
xchg
dec
scas
popf
pop
pop
(bad)
retf
(bad)
call
cmc
repz
push
int
inc
js
inc
jae
mov
ret
pop
xchg
or
sti
out
in
sub
loope
xchg
(bad)
pop
sahf
out
fsubr
or
fldenv
stos
mov
fwait
dec
sahf
mov
clc
xlat
call
lods
ret
das
hlt
or
call
in
fstp
sbb
pop
sub
out
mov
call
push
fsub
jns
jbe
xlat
xor
xchg
fiadd
inc
or
sub
pop
mov
sbb
js
or
test
ret
fbld
mov
jmp
dec
xchg
dec
imul
jo
jne
xchg
adc
adc
jl
sbb
iret
(bad)
int
addr16
(bad)
sti
xlat
adc
mov
mov
sub
push
in
hlt
mov
movs
gs
rol
lods
movs
mov
outs
cmp
or
mov
inc
pop
call
or
dec
xor
mov
push
ss
and
ficomp
add
mov
pop
push
push
fiadd
sbb
ret
loopne
lods
in
xlat
or
sbb
sbb
movs
add
lock
mov
call
das
jle
and
gs
ror
pop
inc
and
push
xchg
ins
and
cmc
lock
mov
out
loop
pop
sub
lock
and
add
mov
bound
xor
jb
and
fldcw
dec
sbb
inc
sub
mov
shl
mov
xchg
(bad)
pop
inc
stos
dec
popa
and
bound
stos
(bad)
jne
sbb
int
xchg
cmp
xor
gs
xor
sti
(bad)
push
clc
(bad)
inc
add
pop
ins
mov
enter
pop
movs
lds
jge
(bad)
shr
ja
inc
cmp
fidiv
sub
inc
jg
pop
cmp
fbld
(bad)
in
popf
out
xchg
jge
int
popf
dec
lahf
lahf
sub
rol
fild
sbb
jle
or
retf
in
in
sahf
xchg
dec
mov
pop
adc
ja
loopne
mov
mov
inc
mov
dec
scas
mov
pop
inc
adc
sub
sti
jbe
imul
retf
sbb
loope
test
inc
mov
repnz
in
and
(bad)
cmc
icebp
cmp
rcl
fsubr
xchg
in
jge
sub
pop
jb
pop
adc
icebp
add
inc
inc
mov
push
sbb
pop
inc
outs
push
(bad)
das
out
(bad)
push
rol
push
or
mov
stos
(bad)
ds
rcl
add
jle
push
ja
clc
mov
in
adc
dec
and
inc
ret
and
rcl
jle
adc
(bad)
mov
std
out
rcr
mov
add
push
inc
jmp
cmc
hlt
sbb
push
and
outs
push
mov
sbb
mov
(bad)
jbe
cmp
ror
std
cmp
push
mov
inc
les
out
shr
mov
sub
jge
loopne
cld
add
stos
fs
cmp
addr16
or
mov
data16
shl
or
arpl
adc
add
loop
and
lds
ja
sbb
(bad)
mov
cmp
push
adc
sahf
mov
daa
sbb
jns
arpl
mov
mov
dec
stos
fbstp
rcr
outs
outs
mov
mov
mov
jae
and
sub
lahf
pop
add
xchg
or
xor
cwde
pop
and
jmp
ror
hlt
fs
push
lock
pop
push
shl
sub
jge
cli
or
(bad)
and
pop
ins
sub
xor
cdq
retf
cmps
test
das
ret
(bad)
int
xor
or
cdq
ja
add
out
jecxz
push
ja
xchg
aaa
and
push
jle
js
add
xor
inc
mov
cs
dec
mov
add
mov
movs
inc
shl
mov
mov
lahf
sub
dec
pop
jb
mov
mov
in
retf
xchg
push
ja
jle
mov
popf
test
icebp
mov
dec
add
xchg
ret
pop
in
leave
xor
mov
lea
jp
xchg
shr
mov
mov
inc
xlat
out
add
jle
fist
into
aaa
cld
xchg
aaa
test
jbe
lods
mov
repnz
jbe
pop
jle
cmp
cmps
dec
mov
xor
xor
nop
jnp
cli
cmp
mov
inc
cdq
and
loope
scas
jbe
mov
mov
jge
leave
pop
gs
pusha
sub
or
fucomi
movs
out
add
and
inc
pop
xchg
hlt
(bad)
aad
mov
test
repz
call
out
sub
mov
mov
add
add
xor
push
mov
int3
jne
mov
out
mov
sub
loop
shl
sbb
pop
jp
imul
mov
push
xor
sub
xor
aad
push
and
adc
loope
dec
mov
addr16
inc
push
pop
in
xor
push
jmp
inc
hlt
hlt
mov
scas
mov
mov
xor
sbb
lods
sbb
dec
popa
lods
pusha
data16
push
xchg
ins
addr16
ret
or
push
push
out
imul
out
(bad)
jl
add
inc
ja
bswap
repnz
adc
sar
mov
sbb
sub
cli
cli
mov
pop
dec
jmp
inc
and
mov
and
jle
sbb
mov
popa
lds
bound
xchg
pop
movs
test
js
retf
inc
mov
ror
test
jns
cmps
xchg
pusha
and
cmp
sti
or
xchg
or
in
popf
es
cmp
xor
loop
(bad)
ds
push
ret
fwait
inc
ja
imul
retf
sub
ret
pop
cdq
pop
jae
mov
sbb
in
pop
stc
(bad)
fcom
inc
cs
out
dec
fbld
or
mov
cs
outs
icebp
repnz
in
mov
pop
xor
out
inc
add
les
mov
loopne
push
lods
dec
not
jmp
xchg
xor
cwde
xchg
in
sub
je
lldt
and
jnp
jle
xor
xchg
cmp
add
fdiv
push
rol
xchg
mov
push
mov
push
pop
hlt
add
call
call
repz
sbb
mov
int
lds
xlat
add
movs
mov
push
mov
hlt
xor
mov
xor
or
jo
mov
lods
arpl
cmp
mov
pushf
cmp
ds
and
stos
or
fld
rcl
ret
enter
aad
pushf
iret
cmps
jnp
(bad)
push
ins
scas
add
sti
in
jbe
fimul
mov
push
enter
scas
sar
(bad)
mov
mov
inc
fisttp
xor
arpl
int3
lods
arpl
mov
jo
in
pushf
cmps
or
ins
nop
dec
jns
mov
adc
retf
ret
mov
lea
jle
jns
jb
cdq
add
sar
or
jcxz
cli
sahf
mov
mov
add
jecxz
clc
jo
pop
jo
xchg
nop
push
dec
jg
inc
pop
in
xchg
(bad)
and
mov
retf
int
cdq
enter
pushf
pop
outs
push
sbb
gs
adc
(bad)
xchg
cwde
loopne
pop
cdq
(bad)
sbb
ds
test
aaa
movs
arpl
dec
push
or
pop
hlt
aas
mov
jne
ss
xchg
repnz
shl
not
adc
les
xchg
push
and
push
jne
mov
mov
sbb
adc
fnstenv
movs
mov
and
ds
pop
inc
in
mov
mov
and
mov
in
inc
sub
pop
push
mov
sub
cmps
ror
pushf
jne
push
loop
popf
mov
loop
fisub
add
jle
mov
int3
inc
xchg
xchg
loope
mov
out
es
scas
inc
dec
stos
mov
lock
in
or
repnz
xor
idiv
xor
mov
clc
xor
mov
push
arpl
xchg
push
mov
pop
stos
xor
mov
mov
loope
mov
retf
xor
ins
dec
das
cmps
jb
and
adc
adc
dec
mov
add
dec
inc
int3
mov
sub
scas
pop
xor
dec
enter
or
pop
pop
mov
xchg
pop
mov
mov
mov
xchg
dec
dec
out
es
lea
jmp
into
js
push
or
mov
in
sbb
fist
add
push
fisub
add
inc
add
dec
push
mov
jmp
(bad)
mov
inc
inc
pusha
mov
aam
call
hlt
jmp
leave
mov
ret
push
(bad)
and
(bad)
cs
pop
int3
or
push
xchg
mov
cwde
jnp
push
int
jbe
out
out
push
adc
and
sahf
bound
pop
inc
pusha
mov
cmp
mov
xchg
ja
push
cmps
int3
adc
mov
pop
(bad)
sti
push
retf
iret
lods
enter
adc
push
xchg
hlt
jne
jmp
dec
and
mov
adc
mov
and
leave
loope
mov
pushf
cmps
aaa
mov
and
jno
add
cmp
xchg
pop
arpl
mov
stos
pop
push
(bad)
aaa
sbb
test
cmc
lock
mov
sahf
and
jae
pop
sbb
sar
test
dec
cld
lahf
push
js
jmp
xchg
adc
cld
(bad)
fwait
(bad)
sbb
call
inc
cmp
cli
push
retf
push
(bad)
shl
pop
pop
dec
sbb
mov
ret
or
fild
lahf
leave
fsub
cmp
xchg
fsubr
ss
push
mov
ja
mov
mov
rcl
(bad)
push
call
scas
test
(bad)
(bad)
dec
adc
mov
mov
and
aaa
shl
popf
in
cmp
lahf
add
mov
cmp
xor
xchg
fcomp
push
mov
push
dec
cmp
push
push
into
cmp
loopne
popa
inc
fld
test
loopne
out
aam
inc
in
and
or
jle
outs
mov
pop
(bad)
sbb
sbb
cmp
in
or
add
or
sub
call
ins
lock
retf
shl
sub
cmps
mov
bound
call
into
or
jo
(bad)
dec
loop
lea
xchg
cmp
mov
jp
lods
ds
mov
shl
jl
(bad)
fcmovnbe
lds
hlt
aam
retfw
cmp
adc
hlt
cli
or
mov
sbb
fbstp
xchg
or
xchg
push
adc
in
mov
mov
inc
dec
push
mov
jp
jecxz
xchg
and
dec
pop
jb
mov
pop
mov
mov
mov
rcr
jg
clc
mov
cld
mov
adc
lods
fbstp
lahf
cdq
cmp
fstp
popa
mov
jp
shl
fsub
jb
push
test
jae
sbb
scas
test
ins
inc
mov
jo
push
jle
jecxz
rcr
stos
mov
inc
(bad)
(bad)
push
stos
ins
popf
movs
leave
mov
and
add
cwde
mov
shl
stc
arpl
popa
add
mov
pop
call
icebp
scas
loop
dec
pop
stos
arpl
dec
jg
or
and
mov
gs
and
inc
(bad)
psubusw
xor
jns
xchg
push
push
jne
ror
int3
mov
test
mov
mov
pop
dec
(bad)
clc
push
aaa
inc
cmp
mov
lahf
pop
sub
out
icebp
rcr
shl
gs
mov
adc
adc
jp
inc
add
or
fisubr
pushf
in
sub
push
xchg
cmp
adc
test
imul
cmp
ins
xchg
xor
cs
mov
call
arpl
fs
out
div
test
sbb
push
int3
adc
and
jbe
lods
das
sbb
test
lods
cdq
cld
dec
imul
mov
(bad)
mov
cli
mov
mov
ret
ret
push
or
rcr
xor
xlat
push
fcmovnb
pop
mov
pop
pop
sub
or
xor
ficom
cmp
mov
or
mov
lock
jae
clc
xchg
push
(bad)
jg
mov
push
lods
(bad)
int
dec
add
sbb
pop
rol
and
inc
cwde
rcl
push
arpl
iret
mov
jg
out
test
in
out
xchg
stc
dec
sbb
jmp
sbb
mov
xchg
test
xchg
aas
cmp
xor
loope
push
xchg
aad
inc
pop
sub
mov
jbe
dec
pop
mov
mov
xchg
mov
in
mov
mov
dec
lea
lock
push
mov
jnp
adc
add
push
ficomp
inc
test
push
pop
mov
in
fdivr
outs
xchg
xor
test
(bad)
pop
mov
nop
push
mov
mov
mov
mov
cmc
icebp
mov
les
sub
iret
sbb
adc
dec
daa
cmps
popf
out
mov
dec
sbb
aad
inc
dec
mov
into
ror
je
push
cmp
and
les
mov
or
push
pop
je
pusha
shl
push
push
mov
jae
sub
dec
xor
adc
jne
sbb
or
add
dec
or
in
(bad)
adc
ins
popf
sub
movs
bnd
scas
int
cdq
imul
fdivr
mov
fnstcw
retf
out
sbb
pop
pop
mov
inc
add
add
neg
loope
pop
hlt
xchg
dec
shr
jp
(bad)
xor
fadd
mov
cmp
mov
(bad)
pushaw
lahf
rol
rcr
cmp
clc
pop
fs
test
out
std
jns
cmp
dec
or
fistp
and
sahf
xchg
addr16
jb
add
rcl
pop
scas
jecxz
cmps
(bad)
jno
fwait
loop
push
shl
push
sbb
pop
lods
addr16
push
xor
xchg
stos
pop
leave
inc
(bad)
lods
cmps
ret
test
sub
sub
ins
inc
popf
jo
sbb
mov
bnd
add
mov
aaa
jp
inc
sbb
fmul
jnp
inc
jg
inc
imul
mov
sbb
sub
push
sub
pop
mov
leave
daa
xor
mov
fidivr
cdq
outs
adc
pop
sub
out
jge
pop
fmul
aam
fdiv
xchg
rcl
mov
lahf
icebp
cld
lods
jne
dec
dec
xchg
rol
sub
sahf
retf
data16
pop
push
jns
aaa
xor
test
jno
pop
jge
jno
add
clc
cmps
aad
sbb
jno
or
or
and
cmp
or
xchg
xor
scas
les
pop
nop
mov
mov
cmps
sbb
fld
xor
fdiv
or
dec
scas
je
inc
adc
fdiv
call
adc
jp
(bad)
lock
mov
jge
out
(bad)
shl
int3
je
sub
fdiv
jmp
test
cmp
add
add
dec
xchg
inc
jo
jle
bound
jae
push
push
push
jmp
call
dec
stc
adc
mov
sub
push
mov
mov
sahf
cmp
dec
popa
test
inc
adc
adc
enter
in
sbb
stc
shr
out
test
mov
ins
and
xchg
imul
push
fisubr
mov
inc
or
neg
rcl
or
das
sahf
sub
popa
add
dec
cld
outs
xchg
ins
adc
and
in
call
aas
cmps
ins
imul
in
pop
lea
out
out
ins
add
pushf
aam
pop
inc
push
test
sbb
or
test
sub
mov
lods
sub
sbb
in
jge
push
or
paddsw
cmp
adc
sahf
or
rol
loope
cwde
aas
xchg
outs
cmc
sbb
xchg
ret
xchg
call
int3
mov
fdivrp
cmp
or
cs
les
or
jecxz
jne
mov
nop
fwait
push
cli
xchg
icebp
inc
xchg
jnp
or
sub
xlat
je
add
lods
(bad)
cmp
fsub
cmps
test
repnz
pop
sti
xchg
scas
mov
mov
mov
push
mov
enter
jnp
mov
mov
xor
cmp
jne
scas
out
mov
cmp
rol
jo
call
jge
lock
mov
ins
inc
jecxz
retf
mov
repz
fimul
jae
xchg
scas
rol
clc
adc
jmp
iret
xor
hlt
cmc
cmp
frstor
daa
sub
jne
inc
les
cmp
bound
xor
add
jnp
cwde
inc
xchg
div
scas
div
test
add
scas
adc
pop
xor
jge
mov
pop
mov
add
pop
dec
jmp
or
test
std
dec
daa
push
pop
inc
loopne
adc
mov
inc
adc
(bad)
(bad)
rcr
or
out
pop
dec
xlat
sbb
mov
adc
shl
inc
(bad)
ret
gs
jge
sbb
(bad)
out
icebp
mov
mov
into
push
push
mov
out
mul
or
stos
out
les
das
and
adc
data16
push
cmp
cmp
pusha
mov
rcl
jecxz
scas
repnz
mov
mov
push
xchg
add
test
push
push
mov
cdq
push
or
cs
push
mov
in
loop
xchg
fst
in
xor
pop
not
cmc
les
mov
sub
loope
pop
push
cmp
rcr
sbb
jge
adc
cmps
mov
jae
jp
inc
xchg
aaa
jnp
movs
cmp
cmp
push
mov
pop
stc
addr16
int
cmps
push
(bad)
ror
gs
out
daa
inc
push
jle
movs
sbb
std
push
sbb
fucomip
adc
ins
pop
int3
mov
or
lods
add
retf
inc
nop
les
jno
push
in
stc
lahf
jbe
xchg
movs
retf
push
push
arpl
mov
stos
jnp
push
inc
lds
stc
mov
xchg
sub
popa
stos
mov
ja
mov
or
data16
mov
test
jne
pop
test
rcr
not
xchg
rol
loopne
adc
and
mov
fwait
mov
xor
out
mov
xor
pusha
dec
mov
add
gs
add
aas
inc
cmp
and
mov
or
and
gs
xor
leave
rcr
push
adc
add
sub
fbld
(bad)
in
sahf
dec
pop
mov
xchg
mov
pop
outs
mov
test
bound
aas
movaps
aad
in
or
lds
adc
adc
push
xor
sbb
add
add
xchg
in
out
push
mov
loopne
mov
rol
xchg
or
jbe
je
jmp
(bad)
dec
mov
cmp
or
sub
fdivrp
sub
inc
cwde
cmps
movs
bound
lds
cmp
jbe
mov
scas
repnz
sbb
fwait
mov
stos
int
js
push
push
sub
add
pop
or
pop
push
mov
xor
pusha
neg
mul
add
nop
fcomi
pushf
dec
xchg
out
pop
(bad)
xor
cmc
loopne
jmp
xor
cdq
cs
xchg
mov
fs
stos
mov
shl
pop
ins
stc
sbb
mov
pop
sub
stos
pop
movhps
and
je
jp
dec
mov
sbb
repnz
ret
mov
or
ds
es
jecxz
jns
xchg
pop
dec
fsub
iret
ins
hlt
jnp
add
leave
pop
cli
popf
push
dec
int3
mov
fisub
jo
adc
jle
scas
mov
in
retf
int
out
mov
movs
adc
push
lds
mov
pop
ins
mov
sbb
sbb
push
fsubrp
inc
bound
sbb
sbb
push
arpl
repnz
arpl
xor
gs
in
and
nop/reserved
lds
(bad)
mov
mov
popa
rcr
outs
repz
or
pop
sbb
xcrypt-ecb
cmps
dec
or
pop
inc
or
stos
dec
jnp
icebp
cdq
xor
jmp
fdiv
xor
fimul
sbb
cmp
dec
xchg
sub
cdq
lahf
out
adc
dec
or
push
cli
iret
sbb
ds
mov
inc
pushf
ins
lahf
idiv
adc
arpl
jmp
jno
or
cld
lods
nop
or
xchg
sbb
aas
test
cmp
xchg
imul
mov
sub
test
icebp
jle
adc
xor
loope
arpl
out
call
outs
mov
iret
jp
dec
popf
fld
mov
cmc
les
mov
(bad)
push
jl
idiv
iret
jbe
in
push
mov
ds
and
pop
lea
into
addr16
adc
cmps
or
outs
cwde
xchg
aas
out
push
fisttp
int3
test
clc
dec
aam
sti
or
bound
sbb
imul
mov
call
ins
adc
jbe
repnz
pop
or
fidivr
inc
and
push
xchg
jo
xchg
or
mov
cmps
mov
test
fldenv
sub
sbb
xchg
or
adc
dec
pop
and
sub
repz
das
sub
add
bsr
push
inc
pop
stos
retf
jge
jle
push
xor
and
push
sbb
push
pop
adc
mov
gs
test
xchg
dec
xchg
push
sub
andnps
and
mov
pop
(bad)
sahf
lahf
loope
jnp
jbe
add
jmp
outs
out
xchg
aaa
daa
cmp
(bad)
retf
imul
mov
sbb
test
xor
adc
xor
sub
pop
pop
into
sti
aam
add
cmps
into
inc
push
pop
rol
xor
mov
in
stos
inc
xor
mov
inc
aas
addr16
mov
sbb
das
mov
popf
popa
pop
jne
mov
in
das
mov
cmp
ret
aaa
jg
ins
add
popa
jl
ret
clc
(bad)
mov
adc
or
sub
mov
lea
gs
jge
scas
push
addr16
addr16
jmp
frstor
int
or
in
xchg
arpl
sbb
xchg
cs
cmp
push
cmps
test
mov
call
xor
js
pushf
mov
call
mov
addr16
add
ret
es
icebp
jmp
sub
lods
or
mov
retf
retf
call
into
popf
add
sbb
sahf
push
xchg
xchg
std
mov
arpl
sbb
fwait
lahf
jmp
adc
push
dec
inc
mov
outs
(bad)
ja
aas
ss
popa
cmps
stos
inc
int
(bad)
retf
mov
out
icebp
fisub
mov
mov
xor
add
mov
mov
fsub
mov
mov
inc
inc
outs
mov
inc
in
push
mov
scas
fild
daa
add
push
cmp
ins
mov
popa
rcr
fldln2
jb
sti
sbb
push
(bad)
enter
pop
cs
fmul
pop
jmp
bound
push
aas
adc
scas
scas
sub
in
scas
mov
add
xchg
sbb
push
stos
xor
jecxz
nop
cmps
mov
cli
nop
xor
mov
jge
jnp
sub
addr16
(bad)
pop
sub
jo
or
or
lahf
imul
mov
(bad)
jecxz
mov
mov
cs
inc
push
push
jae
retf
lds
xlat
das
dec
outs
mov
sub
dec
sbb
loope
aaa
sbb
push
push
jo
inc
jb
scas
xchg
sbb
sahf
jg
and
jmp
mov
add
nop
sub
fs
repz
pop
xchg
pop
sbb
mov
and
cmc
push
das
imul
xchg
into
push
mov
xchg
dec
out
push
mov
and
inc
jmp
iret
push
out
(bad)
pop
add
push
aas
cwde
rol
int3
sub
sub
movs
in
mov
scas
mov
or
shr
mov
sbb
repnz
add
sbb
cld
push
pop
xor
rcl
fadd
popa
iret
ds
fwait
sub
pusha
out
gs
xchg
fld
push
inc
cmp
dec
cmc
inc
fwait
cmp
std
fidiv
aaa
sbb
jo
es
mov
imul
xor
leave
and
pop
push
and
in
stos
xor
inc
retf
jecxz
cmp
mov
pushf
repnz
cwde
xchg
mov
mov
jae
adc
jae
div
xchg
into
es
(bad)
inc
mov
in
mov
addr16
sub
fdiv
jle
es
lock
cmp
out
into
inc
rol
xor
dec
mov
lock
cmp
(bad)
mov
xlat
fucomp
iret
jmp
pop
daa
into
popa
popa
push
repz
hlt
jae
inc
retf
and
leave
test
inc
mov
scas
fld
rcl
gs
cld
aaa
and
mov
leave
retf
sbb
mov
addr16
sub
fcom
and
out
(bad)
jnp
lods
mov
call
popa
inc
jg
add
not
dec
dec
test
mov
xchg
fwait
sbb
add
loope
out
sbb
cmp
outs
cmove
rol
fsubrp
xor
mov
call
xchg
movs
cmp
xchg
fs
rol
ins
stos
lea
fnstsw
xor
lds
nop
das
repz
enter
jo
call
sbb
dec
into
stos
(bad)
pop
bound
push
hlt
xor
sbb
inc
lock
xchg
cmp
cmps
pop
mov
push
add
push
sbb
and
cmc
mov
popa
mov
dec
xor
pusha
sahf
out
adc
push
mov
stos
test
test
jae
ret
mov
add
ror
push
inc
push
xlat
xor
retf
or
sbb
jecxz
das
movs
test
add
push
dec
mov
or
into
test
jecxz
in
mul
(bad)
dec
(bad)
(bad)
xchg
out
xchg
or
je
mov
and
or
push
ret
cmp
add
(bad)
pushw
pop
fcom
mov
jmp
inc
xor
sub
sub
outs
sbb
xchg
dec
mov
sbb
ret
push
xchg
mov
aas
ret
jmp
int3
sbb
fiadd
inc
mov
push
sahf
(bad)
adc
mov
lods
pop
(bad)
xlat
sub
fisub
icebp
sub
stos
mov
pop
sub
ins
mov
retf
test
sahf
add
ins
sub
jg
mov
and
call
or
out
(bad)
mov
fcmove
or
mov
neg
jb
ins
mov
push
cli
ret
(bad)
data16
retf
inc
lock
mov
int
movs
adc
or
fs
dec
dec
scas
test
sub
fwait
or
in
push
pop
xor
cli
xchg
sub
push
push
push
add
shl
leave
inc
jbe
jl
mov
xor
inc
pusha
test
dec
dec
xchg
and
cmp
adc
(bad)
and
sbb
sti
cdq
dec
push
retf
jbe
mov
mov
hlt
add
mov
and
aam
xchg
rol
push
aas
cmps
lock
cmp
push
push
dec
(bad)
push
dec
xor
aas
mul
cmp
inc
mov
dec
je
jbe
inc
jns
loop
retf
add
in
popf
sub
xchg
mov
add
mov
mov
push
xlat
jl
cs
arpl
jp
test
add
cdq
pop
in
push
adc
stos
sahf
pop
es
in
xlat
aad
sahf
xchg
ja
call
jbe
mov
or
pop
add
fcmovnb
(bad)
fld
pusha
ret
out
clc
cmp
or
mul
add
and
and
jmp
sbb
dec
in
mov
cmps
bound
dec
sub
jns
pop
and
rcr
inc
pusha
js
push
(bad)
in
jecxz
sbb
test
stc
jg
mov
shr
sub
pop
jp
cmps
dec
fst
cdq
dec
retf
pop
cdq
mov
pop
inc
popf
cmp
add
retf
(bad)
cmc
push
pop
pop
jb
adc
add
pop
shl
add
inc
and
and
inc
cs
sbb
xchg
popf
call
test
add
and
jo
ss
inc
jb
(bad)
pop
(bad)
adc
fsubp
je
je
push
rcr
fiadd
sahf
or
sub
repnz
ret
mov
jl
or
sbb
mov
sub
xor
push
jl
cmp
test
pusha
pop
pop
repz
test
cdq
leave
jne
mov
rol
sub
retf
and
jl
mov
es
int3
mov
xchg
add
push
int3
mul
call
idiv
fdivr
(bad)
(bad)
xor
retf
dec
inc
sbb
shl
lods
push
das
add
fistp
or
lahf
sub
popa
pop
cs
stos
out
sti
pop
dec
cmp
dec
(bad)
adc
jno
add
xor
push
sbb
leave
cdq
cmp
popf
pop
push
fisub
mov
inc
aaa
aad
hlt
sub
or
sub
xchg
add
pop
(bad)
outs
push
outs
sahf
(bad)
loop
aas
js
xor
iret
icebp
sub
jns
lods
mov
xchg
xor
xchg
pop
mov
mov
inc
push
mov
fucom
xchg
popa
xchg
xchg
data16
cmp
cmc
fcom
sub
adc
adc
hlt
call
or
cmp
or
dec
push
clc
fdiv
push
(bad)
outs
xchg
pop
xchg
pop
dec
mov
ss
or
inc
hlt
adc
mov
pop
mov
mov
je
mov
ss
dec
mov
jmp
inc
pushf
push
cmp
cmp
sbb
dec
push
cmp
shl
push
ret
outs
sub
push
cmp
jns
add
inc
mov
mov
imul
nop
pop
xlat
push
xchg
aas
or
push
xchg
(bad)
adc
outs
adc
outs
sbb
cmp
stos
je
arpl
jnp
ja
out
jge
push
ins
and
inc
xor
and
push
adc
mov
mov
sub
test
(bad)
scas
mov
lods
dec
push
(bad)
in
and
jae
daa
rol
sub
adc
repz
lahf
xor
rcl
or
int3
icebp
push
adc
cdq
bound
xchg
adc
pusha
(bad)
xchg
rol
sbb
(bad)
ins
cmc
rcr
rcl
xor
jne
(bad)
add
add
dec
sbb
ja
add
sahf
icebp
(bad)
in
sbb
loopne
xchg
not
push
and
jno
xchg
cmp
popa
push
or
or
xchg
addr16
(bad)
pop
inc
jg
mov
push
loopne
sahf
sub
es
frstor
dec
lods
fidiv
pushf
mov
jb
shl
xor
mov
fwait
cmp
sub
sub
aaa
retf
pop
aam
sti
pop
movs
dec
adc
sar
pop
mov
mov
clc
and
cmp
or
sub
xchg
xor
call
lea
jbe
mov
shl
pop
or
mov
neg
pop
daa
pop
mov
dec
push
push
out
in
bnd
and
bound
es
dec
sbb
fld
out
pop
and
loopne
pop
sbb
mov
xchg
add
es
push
in
mov
loopne
pop
dec
inc
sbb
xchg
ins
sbb
bound
xchg
dec
cmps
sbb
popa
cli
and
and
imul
clc
cmp
ret
ficom
clc
out
add
and
push
cli
loopne
xchg
das
xlat
movntq
or
inc
fidiv
dec
xchg
and
inc
data16
mov
ror
sub
fsub
ds
jle
es
xor
inc
shl
in
nop
fsubrp
adc
cmp
mov
and
sar
xor
xchg
inc
dec
out
ds
nop
fldcw
je
adc
fld
push
int3
xchg
es
aas
mov
enter
iret
cmps
and
fcmove
call
pop
xchg
inc
loop
pop
add
clc
mov
xor
xchg
fldenv
mov
ss
mov
mov
mov
inc
jmp
inc
je
sbb
loope
xchg
and
xchg
(bad)
jmp
mov
in
(bad)
mov
xchg
sub
stos
fs
jns
sub
pop
adc
sbb
(bad)
movs
sub
jne
or
iret
pop
ja
cmp
inc
and
sub
fs
outs
pop
out
mov
lods
movs
xchg
fs
dec
mov
adc
and
adc
pop
inc
das
pop
fnstsw
dec
xchg
mov
cmp
repz
(bad)
fmulp
and
push
gs
jmp
push
dec
pop
pop
std
dec
(bad)
imul
loope
sub
(bad)
jno
daa
sub
cmp
inc
dec
in
outs
xor
mov
cs
iret
add
inc
shl
mov
jge
mov
or
ja
icebp
test
push
jge
sub
xor
sub
jae
addr16
int3
fld
popa
fadd
jg
call
lods
and
cmp
xor
adc
cdq
in
pop
xchg
pop
addr16
jae
sbb
mov
xor
adc
int3
rcr
dec
mov
dec
popa
mov
cmp
mov
jecxz
outs
mov
pop
cmp
xor
cmc
or
pop
mov
mov
push
shl
xchg
pop
scas
mov
in
sbb
iret
mov
and
fldpi
xchg
scas
or
in
sti
pop
addr16
daa
jmp
icebp
jmp
cmp
jno
and
ret
mov
(bad)
cmp
jne
sub
mov
(bad)
fwait
gs
mov
xor
push
jne
adc
jnp
call
shl
(bad)
retf
xchg
pop
call
iret
mov
or
add
inc
iret
push
mov
add
push
loope
pop
test
in
xchg
lds
hlt
aam
add
push
jmp
ds
bound
inc
out
in
(bad)
jnp
mov
stos
mov
cmp
iret
mov
dec
cs
mov
mov
(bad)
xor
mov
or
fidiv
mov
dec
or
test
aas
ja
dec
scas
cmp
mov
mov
and
(bad)
not
cmp
and
push
into
push
movs
enter
jecxz
shr
in
out
jne
mov
pop
(bad)
cmp
sub
adc
cmp
mov
and
ins
mov
movs
aas
jl
sbb
inc
shl
mov
xor
addr16
and
loop
dec
mov
mov
lds
mov
out
shl
and
jp
pop
(bad)
mov
scas
push
add
gs
ss
in
jb
repnz
fldcw
mov
clc
lods
jmp
arpl
popf
icebp
not
pop
hlt
vpsubusb
cld
xor
cmps
dec
call
aam
adc
js
in
cmp
(bad)
xlat
test
jo
scas
fs
and
mov
cmp
aad
pop
inc
jecxz
fst
inc
pop
lock
test
mov
jecxz
or
sub
add
mov
leave
sbb
cmp
ja
xor
adc
call
movs
and
lds
jne
inc
lea
mov
xchg
jmp
mov
pop
(bad)
mov
lock
or
call
stos
push
sbb
adc
and
or
inc
clc
pop
push
int3
push
or
in
push
xor
add
mov
mov
ins
cwde
mov
dec
jecxz
shl
fdivr
jmp
in
or
movs
aaa
call
fld
add
inc
in
mov
dec
dec
data16
mov
cmp
inc
jp
sbb
mov
and
out
int3
sbb
out
rol
arpl
jmp
dec
test
cmp
cmps
or
cmp
cld
push
jae
adc
cmc
dec
sbb
jne
jbe
aaa
(bad)
mov
inc
push
mov
mov
inc
lock
test
popa
pop
push
clc
ror
pop
idiv
sbb
int3
sub
mov
out
imul
(bad)
rcr
(bad)
mov
dec
xchg
xchg
or
push
inc
and
test
aad
call
(bad)
loope
cmp
mov
mov
aad
lods
add
mov
mov
or
jmp
clc
xchg
mov
imul
movs
lods
popfw
pop
shl
dec
retf
or
in
adc
cld
out
jecxz
mov
addr16
ror
pop
sub
int3
stos
xor
int
xchg
jl
push
cdq
inc
cli
mov
adc
sbb
popf
cmc
mov
inc
xor
jle
out
inc
xor
add
mov
ds
push
sbb
mov
bound
pop
movs
pop
aaa
mov
(bad)
out
lds
loope
dec
aad
repnz
imul
mov
push
dec
ret
es
xor
mov
cmps
or
xchg
das
test
add
xchg
dec
mov
scas
(bad)
popa
mov
xchg
lock
cmp
mov
sub
or
jae
mov
jmp
mov
imul
(bad)
pop
das
push
gs
rcr
clc
mov
dec
(bad)
aas
mov
sbb
or
dec
adc
add
push
pop
ins
adc
mov
mov
or
sub
jg
sbb
retf
cld
xchg
adc
push
adc
jb
stos
rcl
rcr
loopne
dec
mov
inc
xchg
lock
xor
cli
dec
pop
xor
sbb
dec
shl
mov
aaa
mov
sub
xor
int
call
(bad)
adc
movs
(bad)
sub
sbb
fbld
(bad)
sbb
aaa
xchg
xor
mov
gs
or
mov
pop
iret
inc
sahf
pop
or
inc
stos
adc
push
sbb
test
gs
xlat
dec
sub
inc
sbb
fcmovnb
dec
or
mov
leave
pop
push
sar
stc
and
addr16
ins
sbb
adc
ficomp
adc
sbb
dec
in
sub
imul
(bad)
fnsave
push
inc
(bad)
imul
(bad)
or
or
cmp
(bad)
movs
xchg
sbb
arpl
pop
xchg
mov
pop
loop
mov
jmp
popa
in
pop
xchg
fld
mov
and
std
call
out
push
and
and
dec
adc
adc
xchg
and
push
xchg
xor
(bad)
fnsave
and
test
push
pop
call
sub
or
or
xor
bnd
jb
fisub
idiv
gs
retf
cli
sbb
mov
jne
leave
push
clc
stos
movs
scas
adc
adc
jmp
add
mov
mov
mov
aad
inc
es
inc
fsub
mov
xchg
jnp
out
pop
inc
bound
sub
test
mov
bound
out
aas
jbe
xchg
sub
jmp
(bad)
jne
out
jl
in
and
cdq
lock
int3
or
sub
xchg
sbb
fisubr
jmp
dec
out
push
dec
adc
dec
or
shr
fsubp
les
mov
(bad)
loopne
(bad)
in
cmp
retf
fcom
movs
sbb
sub
mov
fsub
push
cmp
nop
mov
sbb
mov
outs
adc
imul
push
addr16
loopne
aam
repnz
in
pusha
shl
mov
mov
(bad)
fisub
and
sbb
cld
shl
sub
mov
imul
int
mov
mov
std
inc
mov
iret
jnp
xchg
mov
sbb
sbb
and
sbb
fmul
outs
sbb
ja
xor
pop
sbb
add
ds
inc
inc
in
adc
pop
add
and
ds
cdq
xor
fstp
lock
iret
and
mov
inc
jle
ja
inc
sub
iret
ret
fcomp
sar
pop
adc
shl
add
cmp
pop
repnz
pop
pop
mov
mov
sbb
ins
test
ror
cmc
mov
out
stos
and
rcr
mov
dec
out
shl
cs
mov
nop
mov
adc
leave
pop
test
jmp
xchg
xlat
mov
mov
mov
push
shr
cld
(bad)
cmp
sbb
push
retf
add
daa
movs
mov
mov
pop
cmp
cli
ins
inc
xchg
popf
outs
rol
cmp
fisubr
dec
sti
mov
fdivr
popa
dec
push
dec
or
sub
pop
cld
jmp
shr
icebp
mov
addr16
pusha
sbb
loop
sahf
(bad)
mov
in
add
imul
xor
jecxz
in
push
cs
std
xchg
jne
push
into
aam
ins
add
or
aaa
adc
jle
stc
push
clc
cwde
inc
stos
fwait
and
scas
movs
pop
inc
js
test
shl
xchg
xchg
jnp
test
pop
ret
dec
lds
add
jle
push
or
sub
scas
xor
lea
inc
mov
addr16
cmc
fild
jmp
cwde
fmul
jge
pop
cdq
leave
cs
nop
outs
in
add
push
sbb
or
nop
stc
fs
retf
arpl
cld
push
push
call
add
aas
adc
pop
cdq
add
icebp
cmp
mov
mov
inc
inc
test
test
jmp
inc
imul
xor
pushf
dec
sbb
es
in
movs
aaa
cli
xchg
(bad)
ds
jl
add
mov
add
repnz
pop
mov
(bad)
xor
pop
jmp
cmp
fdiv
cmp
test
shld
jb
pop
dec
xor
dec
lea
sbb
jg
or
mov
data16
mov
pop
repnz
(bad)
mov
mov
jno
jo
jecxz
cld
sbb
pop
dec
test
mov
pushf
dec
add
(bad)
lods
or
cmp
xor
push
mov
adc
jecxz
sbb
cmp
scas
dec
pushf
addr16
jo
xchg
jmp
xor
sub
and
rcl
pop
xlat
int3
aas
push
je
jle
adc
je
xor
cmp
daa
outs
mov
lods
xor
adc
jle
jns
inc
sub
into
into
mov
add
mov
not
cmp
test
cmps
cld
ins
mov
adc
cli
jb
xor
dec
push
stos
out
das
lods
add
or
and
mov
fisub
inc
nop
arpl
outs
int
push
int
(bad)
pop
cwde
je
lods
lods
(bad)
mov
adc
aam
pushw
lock
adc
pop
add
mov
xchg
fsubr
push
sbb
shl
mov
call
dec
pop
leave
cmp
inc
test
inc
mov
push
pusha
pop
push
sub
das
out
add
push
mov
les
cmps
inc
sbb
xor
rol
mov
mov
add
xchg
xor
shl
push
add
or
lock
jmp
cld
movs
aad
aas
mov
xchg
(bad)
add
fcomp
sbb
outs
add
mov
gs
stos
inc
retf
xchg
pop
rcr
icebp
fisttp
mov
cmp
push
(bad)
rol
mov
loope
lods
and
popa
push
sub
sub
aas
int3
ja
xchg
(bad)
sbb
stc
scas
mov
or
jno
inc
test
clc
movs
loopne
mul
mov
xor
cld
dec
add
jmp
dec
push
adc
adc
and
jl
in
mov
adc
dec
adc
ror
inc
je
out
rcl
cmp
dec
jae
nop
call
int
or
div
inc
mov
inc
aad
cmc
pop
or
and
stos
xchg
loop
mov
enter
in
in
jmp
push
fwait
xchg
imul
sbb
icebp
neg
add
xor
jg
and
jmp
pop
icebp
movs
inc
mov
div
fidivr
push
mov
cdq
inc
dec
clc
jb
cmp
and
pop
inc
jo
push
or
xlat
jmp
and
mov
test
pop
sub
repz
adc
pop
mov
fsubr
push
xchg
xor
fisubr
(bad)
xchg
push
sbb
in
sbb
cmp
loopne
jae
lods
mov
inc
inc
mov
push
or
sbb
cmp
jo
xlat
cmp
popa
les
cmp
mov
lds
ret
shl
repz
sub
xor
mov
adc
adc
sahf
(bad)
mov
mov
adc
mov
inc
xchg
fsubp
popa
int
call
jmp
xchg
cmp
es
call
sar
gs
add
dec
out
push
cmp
fild
pop
xor
add
hlt
jne
cmp
xor
mov
cmps
cmp
mov
mov
int
jne
mov
add
imul
je
fsubr
inc
mov
cmp
rcl
aam
pop
jns
sub
pop
mov
adc
shl
ins
popa
cmc
sbb
cmp
and
xchg
jns
or
aas
fcmovnbe
loope
aad
lods
add
mov
push
loope
cwde
and
xor
jnp
push
imul
cld
xchg
cld
jns
stos
cwde
aas
lods
into
sub
(bad)
gs
mov
adc
jg
cmp
adc
in
ret
out
shl
aaa
(bad)
sub
mov
push
pop
fcomp
push
arpl
sub
mov
xchg
inc
xchg
inc
sub
lea
cmp
push
std
ret
outs
inc
and
pop
cli
loopne
ret
lds
mov
mov
xchg
lock
dec
push
pop
push
or
(bad)
cmp
dec
mov
call
push
add
loope
ret
xchg
xor
daa
jg
js
xchg
(bad)
cmp
cmps
(bad)
repnz
repz
aam
mov
mov
(bad)
cmp
xchg
pusha
not
xor
aam
cmp
test
loope
dec
scas
sub
(bad)
cmp
mov
mov
out
(bad)
dec
(bad)
ds
mov
adc
or
dec
mov
inc
repz
test
mov
mov
cmp
mov
jne
jbe
not
or
mul
mov
int
fstp
ret
js
pop
(bad)
popf
(bad)
retf
or
or
lods
xchg
aas
sub
pop
ret
stc
inc
in
jno
fwait
pop
jle
out
out
pusha
mov
and
ss
xor
cmp
dec
(bad)
sbb
scas
push
clc
push
mov
nop
adc
xor
cmp
pop
jmp
aas
(bad)
add
out
pop
sbb
test
push
mov
ins
jp
mov
add
dec
pop
sub
in
xchg
cmp
mov
es
iret
sub
or
enter
cdq
stc
fisttp
cli
mov
jns
shl
dec
clc
xchg
fs
and
call
sub
mov
inc
pop
call
ffreep
pop
mov
test
hlt
pop
movs
xchg
mov
shl
int3
xchg
add
out
dec
stos
pop
jge
aad
jnp
test
or
clc
mov
adc
mov
std
mov
std
xchg
xor
and
jge
sub
mov
and
rcr
add
ins
aam
pop
ins
and
pop
(bad)
jmp
push
xor
or
mov
mov
call
push
adc
and
dec
ja
cmc
ret
dec
in
aas
sbb
sbb
out
adc
mov
or
enter
dec
mov
push
sub
inc
sub
js
cwde
lods
scas
fwait
ret
xchg
sbb
sub
dec
lds
jbe
push
pop
pop
add
rcl
jmp
or
cwde
xchg
jl
sub
in
enter
fmul
pop
mov
sub
jg
in
dec
(bad)
jmp
sub
les
sub
inc
mov
sub
mov
pop
mov
(bad)
mov
fdivr
push
add
inc
into
pop
dec
jae
ds
xor
cmp
pusha
push
add
ins
sti
sub
mov
push
jbe
adc
push
sti
push
pushf
cdq
je
mov
test
adc
int3
mov
in
inc
push
gs
out
ret
xchg
add
and
push
ja
ss
repz
vpaddusb
(bad)
cmp
dec
pop
and
xchg
icebp
leave
push
pop
sub
(bad)
mov
xor
ins
mov
adc
test
push
or
jnp
sbb
mov
je
ins
stc
add
outs
ret
add
sub
js
fld
cmp
fs
(bad)
leave
push
lea
sub
inc
shr
scas
adc
scas
mov
ret
pop
iret
sbb
imul
mov
jl
lock
jp
mov
sbb
rcl
in
jne
inc
retf
adc
aas
mov
dec
outs
aas
popa
jo
cmc
hlt
mov
push
out
push
loope
or
mov
std
jl
push
cmovg
out
dec
js
jnp
mov
cmp
sar
or
mov
mov
inc
out
or
test
jecxz
bnd
xchg
lds
cli
ss
pop
dec
push
inc
scas
jno
stos
dec
ja
lahf
inc
mov
inc
pop
xor
in
xchg
inc
jp
mov
xchg
test
mov
add
jo
jl
pop
(bad)
and
pop
lds
jg
add
ins
sub
std
test
into
pusha
push
push
push
dec
xor
test
imul
pop
xchg
xchg
rcl
dec
inc
stos
(bad)
ret
cwde
test
shl
jge
stos
(bad)
or
cmc
retf
shl
dec
jno
mov
jne
pop
dec
xlat
in
mov
in
push
je
push
add
lahf
movs
sub
cmp
pushf
mov
push
xor
in
cmp
retf
movs
gs
(bad)
cs
push
jmp
pop
sbb
or
pop
sbb
jae
and
(bad)
jne
scas
(bad)
dec
pop
ins
push
aad
and
retf
sbb
mov
test
inc
stc
imul
mov
or
xor
xlat
pop
scas
jnp
inc
cmp
iret
mov
int3
cmp
lods
adc
cdq
cli
ins
inc
ins
stc
int3
pop
imul
xchg
mov
repz
cmc
jmp
push
push
movs
icebp
(bad)
cli
and
aaa
and
int
xchg
test
scas
rol
jle
sar
fisttp
inc
dec
sub
xchg
add
fxch
jge
push
outs
or
outs
pushf
movsx
mov
add
mov
nop
lea
mov
xchg
outs
jle
inc
dec
xchg
sub
mov
cdq
and
add
mov
out
or
repz
mov
ret
imul
and
mov
leave
in
rcr
iret
setbe
cld
addr16
cmp
rep
jo
pop
xchg
call
or
push
sub
inc
ss
add
add
enter
lahf
and
dec
pop
in
(bad)
fidivr
call
shl
mov
nop
and
sbb
test
(bad)
cdq
or
call
add
imul
gs
xchg
dec
fcomp
dec
popa
dec
push
out
sbb
ja
jb
mov
clc
fcom
sub
inc
jle
adc
(bad)
mov
int3
movs
mov
ins
int3
ins
cmc
dec
pop
fadd
pop
pop
xchg
imul
cli
xor
test
mov
sub
fist
mov
adc
lock
mov
aaa
adc
call
mov
push
push
not
pop
pop
cld
gs
sbb
loope
push
in
fcmove
mov
xor
xlat
(bad)
pusha
adc
push
adc
shl
xor
(bad)
out
icebp
push
xor
xor
fcmovbe
pop
popf
inc
mov
mov
pop
(bad)
(bad)
jle
std
or
cmps
pop
sar
fdivr
cmc
clc
or
inc
cs
(bad)
push
fisub
push
jns
mov
jnp
in
fcom
mov
sbb
lods
add
jge
cmp
inc
and
shl
pop
mov
pop
lods
cwde
loop
inc
xchg
or
aas
lock
inc
(bad)
call
pushf
call
xchg
loope
(bad)
jbe
jl
pop
pop
mov
jno
(bad)
sub
outs
xor
jno
mov
push
mov
inc
stc
adc
sbb
mov
dec
shl
or
fidiv
(bad)
dec
aas
in
add
push
mov
xchg
adc
jb
in
popf
mov
cmc
pop
pusha
dec
clc
push
outs
xchg
adc
push
jp
sbb
adc
(bad)
mov
retf
pop
xor
add
icebp
mov
or
imul
in
mov
popf
ret
cmp
fwait
scas
jns
dec
sbb
jo
call
jle
jecxz
jle
(bad)
rcl
into
lds
push
adc
mov
sub
mov
adc
ins
fs
out
mov
mov
int
mov
daa
jmp
cli
adc
xor
sub
fcmovbe
sar
js
dec
sub
jmp
and
inc
arpl
js
mov
in
test
fbld
cs
jecxz
sub
call
pop
inc
pusha
push
sub
jno
jae
mov
or
popf
mov
lds
popa
mov
out
or
int
pop
push
mov
push
adc
pop
scas
xor
mov
dec
ins
xchg
test
adc
into
push
pop
das
jg
into
or
and
push
xrelease
mov
fs
(bad)
mov
sub
aad
lock
ret
dec
xchg
sbb
cmp
and
nop
mov
xor
leave
xor
call
pop
push
ins
stos
ins
pop
out
pop
jo
cmps
jmp
pop
jp
or
xor
push
or
mov
out
xchg
gs
fs
xchg
aas
ja
outs
ret
ja
add
xor
imul
out
pusha
pop
mov
(bad)
sbb
adc
xor
xor
mov
imul
jno
cmc
rcl
out
es
stos
xchg
push
pop
adc
iret
add
rcl
scas
push
imul
jp
pop
mov
cmps
dec
or
test
sub
leave
xor
jno
jl
fidivr
adc
gs
push
pop
fadd
in
cmc
xchg
mov
sub
(bad)
aas
push
dec
test
mov
test
cmp
fwait
xchg
push
inc
add
add
mov
lods
movs
enter
jg
(bad)
cmp
scas
pop
test
fxtract
test
xlat
(bad)
mov
inc
xor
loopne
mov
lock
sbb
lds
(bad)
out
add
dec
mov
dec
rol
jbe
mov
addr16
(bad)
fmul
jo
imul
lds
in
(bad)
or
jp
xor
sub
or
mov
popa
add
mov
sub
cld
neg
mov
retw
ror
sub
fbstp
mov
pushf
inc
pop
and
mov
inc
cmps
bound
mov
je
mov
cs
lahf
jbe
mov
in
jbe
cmp
arpl
xchg
xlat
push
pop
add
pop
mov
arpl
test
ret
adc
pop
xor
pop
xchg
jmp
cmp
mov
ins
cmp
pop
fild
int3
pop
jmp
cmc
jo
and
push
ror
push
inc
add
call
shr
in
mov
gs
mov
jmp
and
mov
mov
movs
sub
mov
pop
test
add
mov
test
mov
xchg
push
dec
adc
push
aad
sub
mov
push
pop
jp
xor
ja
add
push
pop
jo
mov
pop
pop
outs
sbb
adc
ss
or
(bad)
(bad)
lods
cli
aad
mov
inc
cli
add
fwait
mov
imul
jmp
or
sbb
int
mov
add
pop
push
imul
sbb
cmps
and
or
(bad)
(bad)
or
jne
mov
jno
pop
fbld
fiadd
shr
xchg
mov
mov
xchg
lods
in
lods
push
push
xor
xchg
cmp
push
push
adc
or
(bad)
pop
(bad)
pop
in
add
addr16
xor
shl
mov
rcl
mov
xchg
test
lock
push
fisub
dec
sub
or
add
int3
fsub
jmp
mov
pop
cdq
sti
icebp
pop
jp
retf
pop
rdpmc
inc
rcr
sbb
mov
loop
sbb
into
lds
sub
xor
push
inc
pop
jns
neg
push
add
loope
test
dec
mov
xor
pop
unpckhps
push
jnp
daa
das
mov
xchg
and
dec
out
and
pop
cmps
pop
cmp
neg
(bad)
shl
popa
dec
inc
imul
jge
dec
xchg
sbb
jne
and
imul
xchg
mov
std
lea
fxsave
mov
xchg
movs
loopne
(bad)
and
jge
mov
ficom
stc
ins
jnp
loope
xor
scas
dec
and
push
pushf
fs
shrd
dec
std
mov
mov
stos
add
push
cld
call
lahf
cwde
cmp
pop
xacquire
inc
xchg
jns
mov
xor
out
sub
mov
ins
outs
call
(bad)
fcom
and
xchg
popf
push
or
adc
pop
sub
repz
rcr
lahf
sbb
sbb
push
bound
aam
jg
fimul
add
js
lahf
call
in
clc
jae
sar
fmul
les
jb
bound
pop
mov
jne
into
sti
ret
cdq
adc
sbb
dec
(bad)
jmp
adc
sbb
mov
jb
jecxz
(bad)
test
aaa
(bad)
mov
mov
dec
je
and
(bad)
add
arpl
xor
(bad)
cmp
leave
mov
inc
and
adc
dec
aas
(bad)
jb
pop
inc
popf
mov
arpl
(bad)
loopne
xor
or
fimul
outs
stos
cwde
lods
rol
shl
aaa
inc
mov
inc
pop
or
rol
or
es
sub
inc
cwde
xlat
mul
and
scas
(bad)
call
stos
hlt
push
call
in
jo
rcr
repnz
sbb
test
lahf
adc
push
xchg
fisubr
add
mov
mov
or
dec
cli
and
inc
out
retf
mov
scas
inc
adc
cli
push
call
gs
or
push
dec
icebp
add
out
inc
je
xchg
xchg
in
fild
fnstsw
dec
icebp
xchg
lods
pop
stos
iret
add
sub
push
xchg
mov
jne
push
jmp
movsx
mov
nop
lea
mov
pop
lea
mov
ins
ins
gs
push
js
sub
or
div
adc
mov
mov
dec
push
retf
xor
or
ins
data16
adc
pushf
or
das
in
repnz
lea
jbe
fisubr
and
xlat
ins
push
and
mov
adc
lds
clc
xchg
mov
or
js
mov
or
add
pop
adc
push
pop
sub
sbb
sub
(bad)
loopne
repz
mov
test
lea
mov
test
lods
sub
jbe
leave
repz
fwait
popf
or
xchg
or
inc
test
pop
cmp
test
dec
mov
jo
ins
fdiv
adc
push
push
fcmovne
adc
mov
mov
mov
xor
cmp
(bad)
cli
xor
mov
jno
mov
sub
pop
push
xchg
adc
sub
push
sub
xchg
rcl
outs
xchg
jge
push
pop
jae
or
and
push
jbe
retf
adc
shl
rol
pop
rol
cmp
push
push
mov
push
push
cs
lock
and
pop
mov
push
jmp
adc
jge
mov
pop
push
addr16
pusha
pop
and
dec
dec
ins
scas
xlat
xor
or
in
pminsw
mov
mov
test
inc
mov
(bad)
ret
je
lods
jp
(bad)
into
lods
adc
cmps
mov
cmps
imul
ret
add
mov
mov
loope
fdivr
scas
dec
and
test
out
xor
mov
dec
and
in
fdiv
cmps
lods
in
sub
popf
movs
mov
fucomp
or
jle
mov
in
push
lds
cmp
popa
ja
mov
leave
sbb
ins
and
scas
xor
sub
cmp
data16
iretw
cmp
cwde
pop
dec
jnp
add
cmps
xchg
ret
xchg
enter
jne
dec
ret
mov
adc
pop
and
fcom
mov
ret
out
inc
mov
test
(bad)
dec
mov
gs
aad
sub
push
and
or
jp
xor
sbb
sbb
(bad)
loopne
jb
or
or
sbb
daa
bound
call
cs
sar
sub
jo
sbb
fs
or
mov
into
jge
lock
pop
jmp
in
inc
popf
jno
xor
lahf
in
cmc
data16
add
test
cmps
xlat
sub
repnz
pop
and
or
xchg
pop
add
add
(bad)
jbe
inc
push
lea
cmp
or
imul
scas
jle
mov
pop
jno
mov
cmps
addr16
loop
loope
(bad)
fdivr
inc
mov
sub
fwait
test
iret
sbb
movs
add
mov
repnz
jge
adc
rol
dec
std
call
(bad)
cld
(bad)
inc
xchg
xchg
jmp
in
out
ds
(bad)
sti
je
jl
xchg
adc
stc
arpl
add
cld
xor
ds
mov
clc
pop
dec
mov
call
push
cmc
das
adc
cmp
popa
ret
test
jp
mov
cwde
test
loop
adc
inc
stc
push
cmp
sub
test
addr16
or
add
add
imul
outs
mov
or
nop
mov
jmp
and
js
fld
sbb
jnp
xchg
inc
fidiv
aaa
in
cmp
push
mov
es
sub
jbe
sbb
pusha
xlat
es
loopne
pop
adc
cmp
sub
inc
fmul
mov
dec
dec
push
pop
nop
es
sahf
adc
jge
scas
xor
inc
cmp
pop
loopne
or
leave
inc
in
pop
dec
mov
mov
xchg
popa
stc
dec
cli
mov
and
and
out
xchg
not
mov
stc
(bad)
cmp
jg
sahf
aam
inc
add
xor
mov
das
adc
push
mov
in
sub
(bad)
adc
call
pop
fisubr
jns
pop
leave
inc
dec
adc
icebp
push
mov
pushf
mov
outs
(bad)
jne
sbb
int3
mov
int
dec
pop
fmul
std
ds
mov
xor
fbld
xor
dec
sub
jmp
xor
mov
dec
fsubr
push
sbb
jae
int3
jno
pop
fistp
fwait
jb
inc
lods
push
vmovaps
add
std
jl
inc
test
loopne
pop
iret
jle
scas
and
push
dec
repz
add
pop
jb
mov
mov
xchg
mov
mov
(bad)
mov
(bad)
jo
fcomi
(bad)
dec
aam
mov
inc
stc
jmp
jns
xchg
shr
lods
scas
jmp
ins
mov
ror
mov
ja
cmp
mov
scas
shr
repnz
fdiv
adc
fwait
in
(bad)
inc
jmp
jo
dec
test
jae
mov
pop
repnz
ficom
out
mov
emms
mov
fnstsw
mov
add
js
stos
pop
fsubp
fadd
out
sbb
lea
pop
outs
mov
nop
inc
inc
jnp
pop
pop
and
push
mov
cmp
fwait
push
retf
aaa
sahf
inc
xor
test
jnp
mov
ror
cmps
xchg
aas
fs
or
sbb
test
pop
fwait
jp
test
adc
jae
ins
daa
xor
mov
ret
push
loope
clc
push
add
and
jp
inc
hlt
popa
retf
cmp
and
mul
mov
jmp
pop
jle
adc
int3
mov
or
movs
es
mov
push
mov
ss
ret
cs
mov
aad
and
dec
cmps
cmp
lahf
sub
movs
jae
or
fwait
test
data16
bnd
loopne
and
aas
push
push
xor
popf
xchg
xor
sub
mov
push
or
call
cmps
ja
mov
mov
icebp
cmp
pop
or
into
data16
mov
not
lods
test
mov
aam
fdivr
outs
popf
int
pop
add
neg
fld
pop
dec
push
rol
in
mov
or
or
stos
bound
test
cmp
sub
(bad)
mov
dec
push
jp
inc
leave
or
(bad)
mov
int3
adc
call
int3
test
xor
in
sbb
mov
shr
leave
xor
or
into
push
or
and
fild
xor
popa
dec
sbb
jno
in
iret
inc
or
xor
dec
(bad)
push
jp
jp
xchg
add
repnz
xor
jg
jg
rol
outs
xchg
les
ss
lods
fnstsw
xchg
pop
stos
mov
test
(bad)
dec
mov
sbb
gs
mov
push
aad
add
push
test
addr16
inc
ins
pop
inc
cmp
imul
mul
inc
int3
cmp
xor
fdivr
or
fwait
lahf
out
daa
mov
add
pop
push
outs
mov
fisttp
push
icebp
cmp
test
xchg
mov
div
pop
fist
pop
inc
pop
add
in
push
ror
out
add
scas
arpl
jbe
or
sub
inc
and
leave
or
adc
rcr
stos
cmps
outs
push
sbb
scas
(bad)
mov
pop
clc
sbb
and
adc
(bad)
test
test
inc
jbe
pop
cmp
stc
mov
sbb
mov
push
and
(bad)
xor
add
pop
or
xchg
into
inc
imul
cmp
ss
adc
cwde
mov
or
shl
fst
ret
cli
lfs
imul
(bad)
jbe
aad
xor
jnp
call
shl
repnz
int3
inc
mov
vpsllw
xor
fldl2t
push
mov
xchg
lahf
fwait
retf
enter
das
dec
pop
add
pop
outs
in
mov
(bad)
adc
and
or
cmc
jle
sub
je
sbb
mov
xchg
aad
int
jns
mov
daa
jge
push
push
mov
push
imul
pop
jae
sbb
pop
sub
add
cmp
push
(bad)
cmp
icebp
fwait
repz
adc
xchg
xor
mov
push
pop
xchg
jne
and
or
fwait
ins
xchg
inc
je
pop
mov
retf
or
pusha
fdiv
ret
push
in
shl
repz
mov
jb
push
xor
(bad)
xchg
es
adc
mov
test
add
inc
jg
jmp
not
xchg
jmp
pushf
xchg
mov
call
add
sahf
fwait
jmp
loope
mov
xchg
ins
mov
icebp
leave
jbe
stc
jp
shr
inc
and
push
loop
jmp
cmps
and
mov
movs
ja
fistp
jp
and
movs
add
stos
aas
jne
ds
push
add
in
xor
or
ss
or
lods
ror
mov
repnz
mov
sbb
inc
dec
pop
pushf
or
sbb
and
lock
mov
sub
dec
pop
cmp
xor
(bad)
loopne
add
adc
out
test
and
sahf
pop
adc
out
ja
adc
call
push
mov
add
fdivr
xor
rcl
adc
inc
xor
fistp
in
inc
cs
add
scas
xor
hlt
or
icebp
fbld
lea
push
adc
ss
mov
jge
lds
add
jns
repz
cdq
es
cmp
jnp
aas
push
mov
push
stos
(bad)
sub
ins
aaa
add
cld
outs
sahf
ss
in
xor
(bad)
push
outs
enter
int
cs
jno
lock
cmp
sub
sahf
mov
push
or
std
push
and
imul
sub
cmp
out
or
lds
(bad)
fimul
mov
not
xor
pop
cmp
add
lea
push
bound
xor
stc
sahf
sbb
xchg
sbb
in
test
mov
lods
(bad)
pop
cmp
lea
push
cld
cmp
cmc
mov
dec
nop
push
test
pop
cmp
test
popa
call
mov
and
dec
push
jo
sub
aas
mov
cwde
cmp
inc
(bad)
and
cmp
daa
or
pop
sub
jmp
(bad)
mov
sub
shr
dec
shl
xchg
inc
pushf
inc
test
call
push
aad
push
lods
pop
imul
cmp
xchg
mov
cld
mov
jl
xchg
push
cmc
sbb
std
retf
jno
mov
xlat
inc
fild
iret
mov
imul
push
mov
es
bound
sbb
jl
mov
xchg
mov
into
cwde
adc
inc
cmp
inc
movs
pop
sub
hlt
sub
inc
in
dec
sbb
call
loop
sub
mov
xor
cmp
(bad)
in
icebp
in
mov
imul
pop
pop
aas
sub
retf
test
mov
hlt
sar
out
das
ja
lds
dec
xchg
or
enter
jbe
aas
test
jmp
jns
adc
lods
mov
sub
in
jb
test
shr
pop
sbb
(bad)
jno
dec
sub
sbb
dec
dec
pop
mov
cld
xchg
imul
loope
(bad)
movs
cmp
test
mov
sub
out
leave
dec
dec
xchg
mov
mov
mov
sub
xor
ret
or
push
imul
data16
mov
lods
sub
mov
inc
fdivrp
jge
jge
push
lea
dec
retf
cmp
sahf
sti
mov
cmps
repz
rcl
and
jbe
imul
into
iret
data16
addr16
mov
jl
daa
inc
pop
add
jae
mov
ss
adc
mov
push
mov
scas
scas
mov
arpl
mov
rol
not
fmul
jmp
xor
loop
gs
into
inc
ss
mov
cli
gs
push
cld
mov
dec
ins
inc
imul
ja
jbe
(bad)
pop
cmc
aaa
out
and
dec
lods
pop
adc
adc
cmp
add
rcl
dec
xor
shl
sub
call
retf
or
push
mov
mov
hlt
aaa
inc
jmp
aas
sbb
xor
fsubr
imul
xor
cmp
jle
stos
or
mov
stos
in
push
add
sub
test
pop
sub
lods
cmp
xchg
sub
sub
add
cmp
push
mov
mov
xor
and
popf
addr16
test
std
mov
inc
mov
(bad)
loopne
dec
repz
pusha
mov
mov
js
aaa
mov
pop
int
add
aas
(bad)
int
cmp
jnp
retfw
add
or
stc
push
nop
mov
ret
dec
popf
mov
pop
or
sbb
mov
push
mov
and
add
movs
ret
loopne
mov
dec
lea
je
pop
cmp
pop
inc
inc
mov
dec
fst
sub
jmp
int3
cmp
cmp
out
jmp
xchg
clc
ret
je
ret
mov
mov
adc
push
pop
sub
dec
shl
aaa
rcl
mov
outs
cmps
aad
in
ins
std
js
bound
and
xchg
shl
add
ja
cmp
pop
cld
adc
scas
jae
and
in
dec
call
jnp
mov
js
xbegin
mov
loopne
test
or
out
jg
inc
pop
addr16
ds
test
jmp
dec
cmp
ins
(bad)
jg
push
push
lods
movs
xchg
out
sub
repnz
and
dec
sbb
mov
sbb
cmp
xlat
dec
and
xchg
cmp
(bad)
pop
pop
jp
adc
out
je
fwait
add
pop
into
fstp
and
pop
and
xchg
repz
cmp
icebp
mov
inc
inc
jo
clc
fld
imul
leave
xchg
fst
aas
xchg
cs
(bad)
scas
pop
js
loope
xchg
jmp
push
clc
push
imul
jnp
sti
xor
mov
mov
inc
sbb
les
fs
das
mov
enter
push
inc
addr16
hlt
xor
scas
fldcw
push
sub
push
mov
vminps
test
aad
xchg
icebp
push
out
inc
mov
mov
gs
mov
inc
bound
push
das
push
xchg
or
ss
das
add
leave
(bad)
and
sahf
xor
inc
push
mov
pop
jae
or
inc
mov
mov
jecxz
enter
add
stc
jne
push
and
ret
xor
fcomp
mov
push
fcomp
pop
ror
test
(bad)
iret
push
paddusw
inc
es
inc
dec
or
scas
fwait
js
pop
scas
xchg
xlat
icebp
js
ss
movlps
mov
sbb
je
add
mov
retf
inc
and
and
std
xchg
inc
push
shl
(bad)
outs
jp
popf
fbstp
addr16
nop
fptan
test
or
cwde
jg
inc
mov
sub
xor
test
ds
loope
lahf
push
lds
add
or
add
jg
push
xchg
outs
xor
aam
push
pop
adc
outs
xor
aaa
shr
sahf
ret
or
leave
mov
xchg
mov
ins
adc
inc
clc
(bad)
pop
xchg
xlat
dec
fcom
rcl
(bad)
jle
imul
mov
mov
sbb
push
outs
jne
lahf
jle
call
push
add
js
add
imul
dec
fs
inc
sbb
loop
(bad)
fdiv
push
dec
mov
pop
xchg
rcl
push
pop
jp
mov
cwde
adc
xchg
jmp
jle
or
adc
push
int
xor
and
and
mov
cwde
aad
jae
or
add
fs
adc
inc
sbb
aaa
test
or
xor
mov
inc
mov
aam
sbb
shl
xchg
mov
push
mov
(bad)
test
aam
adc
cdq
ret
call
cmps
or
xlat
xor
call
adc
jbe
pop
adc
adc
inc
das
push
lahf
push
mov
inc
xor
aad
jae
hlt
pop
xor
push
add
pushf
push
sub
stos
leave
bound
in
cmc
fst
(bad)
cdq
mov
pushf
or
inc
outs
es
push
out
mov
mov
fucomi
packssdw
rol
les
loopne
mov
ret
mov
ffreep
mov
xchg
lods
(bad)
jns
adc
std
and
mov
lods
xchg
lds
add
popa
fxam
xchg
push
aas
movq
xor
xor
sub
rcr
pop
adc
sbb
inc
les
jmp
adc
aad
mov
(bad)
aad
cwde
lds
jge
or
sbb
mov
adc
sbb
inc
mov
cmp
popa
mov
shr
arpl
aad
xor
test
dec
mov
aad
(bad)
push
cmp
xor
in
pop
mov
inc
mov
shl
push
or
arpl
dec
mov
lahf
sbb
icebp
inc
dec
lods
sub
mov
and
jecxz
push
dec
lods
icebp
jp
push
cwde
and
pop
daa
jae
push
cli
test
das
push
mov
mov
pop
add
cli
arpl
call
or
fcomp
xchg
shl
mov
or
lods
sbb
xchg
add
pushf
fwait
rcr
hlt
jmp
cdq
sbb
fisubr
push
pop
test
dec
cmp
cmp
jmp
push
popa
push
pop
lock
mov
push
je
loop
add
cmc
cmps
fistp
adc
aas
mov
daa
ror
icebp
mov
fsub
repz
arpl
scas
mov
fcom
xchg
xor
arpl
add
shr
inc
jge
mov
xchg
das
aas
ja
pushf
out
(bad)
aad
ret
lahf
xchg
fisubr
fnstsw
aad
cld
inc
sub
fbstp
enter
out
(bad)
stos
push
mov
imul
int
es
dec
dec
mov
rcl
pop
push
sub
mov
dec
call
aas
add
rol
xchg
or
ds
pop
push
or
inc
jmp
ss
icebp
iret
jnp
dec
sub
cdq
fisub
hlt
cli
inc
sbb
lods
dec
mov
mov
dec
sub
mov
jmp
adc
fstp
adc
or
enter
outs
out
mov
retf
jb
xchg
add
stos
popa
pop
sub
xchg
mov
xor
add
pop
xchg
adc
push
mov
enter
dec
adc
and
xchg
ret
push
imul
push
aas
mov
push
xor
dec
add
lea
push
xor
fwait
(bad)
clc
sti
dec
fdiv
jecxz
cmps
push
enter
jmp
xor
inc
dec
sbb
adc
mov
not
(bad)
dec
(bad)
sar
int3
mov
sti
xchg
sbb
aad
clc
in
dec
outs
(bad)
sbb
clc
and
lahf
xchg
adc
fild
dec
pop
leave
test
jbe
loopne
push
jg
fisttp
loopne
pop
cli
or
xor
and
popf
dec
es
mov
iret
push
scas
dec
iret
into
xchg
push
mov
mov
out
mov
push
add
test
repz
push
stc
push
shl
jns
push
lahf
rcr
movs
push
cmp
(bad)
bound
mov
rcl
dec
retf
sub
mov
ins
inc
lds
in
push
mov
das
test
bound
push
mov
xchg
mov
jge
outs
lock
add
inc
in
dec
cmp
test
imul
mov
lods
ror
inc
in
jp
gs
call
pop
mov
cmps
aaa
sub
call
jae
push
retf
inc
push
sbb
and
mov
cmps
leave
add
mov
sahf
scas
jne
retf
pop
add
retf
inc
loopne
rol
push
adc
mov
xchg
call
xchg
ins
shl
xchg
pop
(bad)
aam
icebp
add
inc
in
dec
pop
mov
jp
or
jb
test
clc
stc
jbe
das
mov
ret
call
mov
repnz
jnp
add
dec
dec
std
jo
jns
xor
cmps
mov
add
add
pop
inc
out
cs
popa
cmp
loope
adc
cmp
dec
(bad)
mov
aam
add
push
sbb
mov
lds
fistp
sub
sub
cwde
mov
test
mov
xor
pop
mov
jle
mov
xchg
scas
add
shl
loope
test
push
loopne
(bad)
sbb
xchg
icebp
inc
mov
sbb
jle
aam
xchg
jns
es
jb
out
cmp
out
sub
and
out
xlat
adc
push
adc
lods
ss
enter
ret
mov
lods
ss
mov
add
fidiv
ins
addr16
dec
nop
xlat
and
(bad)
je
loopne
or
mov
stos
fwait
aad
psrlq
jecxz
call
inc
cmc
ss
xlat
dec
sar
call
pushfw
jns
add
push
loop
inc
sub
mov
adc
mov
mov
dec
jle
xor
(bad)
push
jne
mov
add
fwait
pop
xchg
dec
fdivr
ins
nop
div
jp
jae
mov
sub
call
sti
ror
outs
mov
push
in
mov
ror
add
mov
mov
cld
fnstsw
sbb
or
xor
lds
shr
(bad)
dec
inc
test
(bad)
fmul
pop
xchg
cli
mov
mov
sbb
jmp
or
enter
imul
jnp
push
mov
dec
je
stc
add
imul
sbb
pop
pop
in
dec
lods
jo
sbb
inc
or
fs
mov
sub
xor
jmp
dec
push
xor
ror
outs
cmp
ds
icebp
inc
or
inc
es
jle
pop
pop
fadd
push
pop
inc
xchg
ins
imul
cs
xchg
pop
sbb
bnd
sub
or
out
or
or
adc
jb
push
ja
pop
mov
fs
or
add
lahf
stos
jb
in
or
or
(bad)
addr16
pushf
mov
add
jae
sar
imul
mov
lock
nop
or
fwait
js
cdq
popf
cmp
lds
jmp
lea
lods
and
mov
push
or
rol
gs
and
sahf
xchg
xchg
out
cmp
adc
pop
jmp
sub
xchg
xor
in
call
inc
pop
pop
push
or
sub
test
xchg
stc
icebp
in
dec
inc
or
mov
add
mov
xchg
adc
inc
ds
aas
pop
js
mov
mov
ret
jge
cmp
in
push
ficom
sar
cwde
xor
mov
mov
das
or
call
out
inc
nop
ins
add
(bad)
cmps
cmp
outs
popa
mov
sar
and
into
ret
mov
jmp
lods
jns
mov
and
pop
sbb
mov
and
mov
jle
ins
xchg
jp
test
sub
dec
sti
data16
cmps
mov
jl
and
(bad)
imul
xor
aas
dec
xchg
popa
sti
cdq
xchg
sub
(bad)
xchg
inc
fucomip
call
mov
or
sbb
cmps
(bad)
rol
cmp
aad
mov
push
jno
retf
retf
push
sbb
and
icebp
mov
adc
mov
add
jmp
in
lock
int
sbb
shl
xchg
pop
stos
or
pop
data16
leave
or
sbb
mov
iret
jne
add
in
in
movs
adc
sbb
xor
lahf
loopne
adc
(bad)
dec
xor
pop
call
pop
cmp
jno
sbb
pop
sub
adc
cmp
ins
dec
add
cmp
loope
movs
stos
(bad)
clc
jmp
inc
lods
sbb
inc
ret
mov
fidivr
pop
xlat
and
pop
int
iret
and
push
pop
cmps
mov
push
call
xchg
iret
rcl
sti
mov
mov
call
cli
mov
daa
loop
loop
fcmovu
ret
icebp
pushf
mov
in
ret
(bad)
aad
enter
scas
xchg
retf
test
ror
repz
int3
ins
repz
inc
push
sub
test
xor
imul
inc
inc
pop
xor
shl
cmp
in
das
movs
jns
xor
mov
mov
jno
shl
out
and
loopne
xor
retf
imul
fisubr
sub
ins
shl
pop
jge
dec
mov
cld
pop
aad
(bad)
icebp
dec
loope
popa
ficomp
aad
pushf
cs
sbb
outs
stc
cmp
sub
fadd
cmps
dec
xchg
dec
sbb
xchg
dec
mov
cmp
xor
fprem
jg
cmp
and
ret
movs
cmp
jae
mov
and
jo
(bad)
ret
jmp
ins
cmc
push
push
ret
outs
cmps
fisubr
ss
xlat
retf
int
icebp
or
addr16
int3
aam
pushf
push
mov
mov
out
daa
in
sub
jmp
dec
test
cmp
xor
mov
bound
cwde
add
cmc
outs
ds
test
outs
add
sbb
ret
and
imul
nop
and
and
iret
xlat
pop
add
mov
or
imul
or
inc
js
xlat
jne
inc
je
pop
push
or
ins
ins
iret
push
or
sbb
mov
iret
jmp
dec
loope
xor
ret
mov
sbb
sub
cmp
lods
push
cli
scas
shr
test
sbb
std
adc
xchg
sub
loopne
mov
and
lods
and
and
and
sahf
cdq
outs
cmp
aaa
xor
loope
adc
adc
jnp
cmp
not
mov
or
cmp
cmp
imul
jbe
lock
inc
inc
or
fld
push
ficom
add
jbe
xor
test
pop
fcmovnu
test
jns
push
mov
fisub
sub
xchg
push
add
dec
mul
iret
lds
loop
add
push
adc
pop
pop
xchg
push
inc
mov
pop
jg
mov
shr
jmp
jge
jle
adc
gs
cmc
cmp
mov
cmp
retf
fwait
sbb
inc
cmp
fbstp
stc
xor
or
xor
or
aaa
outs
repnz
das
pop
int
loope
lods
fimul
das
push
cmps
call
rcl
scas
mov
popa
pop
data16
lss
sub
push
cdq
push
xor
push
mov
shl
cmp
mov
mov
xchg
ins
(bad)
fwait
inc
cmps
or
push
pushf
mov
mov
xchg
int
int3
xchg
add
or
int
loopne
inc
xor
stos
mov
cli
xor
pop
dec
pop
or
data16
xchg
pushf
inc
shl
je
push
loope
jecxz
int
and
mov
and
cld
test
loope
sub
(bad)
pushf
pop
rcl
retf
xchg
sub
push
add
dec
jmp
inc
mov
xchg
inc
mov
fnstenv
cwde
xchg
add
shl
iret
nop
cmp
push
and
push
adc
mov
push
cdq
pop
enter
cmp
pushf
mov
cmps
es
adc
or
xor
cmp
cmp
xchg
dec
repnz
xchg
adc
(bad)
daa
inc
or
push
mov
dec
test
loope
pop
movs
mov
sub
bnd
scas
inc
(bad)
dec
aad
movs
adc
jecxz
test
jg
jbe
nop
add
inc
fcomp
std
(bad)
xor
inc
(bad)
xchg
mov
scas
arpl
mov
add
adc
sbb
push
out
pop
lahf
sar
mov
push
xor
push
pop
rol
stos
fld
xor
bound
and
loopne
and
popf
or
sbb
sbb
pop
mov
mov
clc
popf
lods
mov
unpcklps
ror
(bad)
push
cmp
mov
mov
xor
out
(bad)
addr16
push
ja
jge
jbe
cmc
and
adc
sbb
push
xor
cmc
cmp
add
xor
sbb
mov
ss
and
icebp
mov
pop
jle
cmp
mov
stos
es
sbb
scas
mov
add
push
jmp
ins
paddusb
mov
pushf
test
scas
cdq
xchg
test
cmp
cmc
adc
jl
push
imul
movs
or
and
shr
push
jecxz
mov
in
jle
rcr
call
out
cli
pop
xor
pop
or
and
fs
into
add
repnz
shr
mov
out
sub
xchg
adc
repz
daa
fs
stos
xor
xchg
and
jns
popa
adc
mov
daa
in
add
sub
popa
xor
in
inc
fcomp
sub
mov
call
cmp
test
rol
add
jmp
stos
imul
ja
fild
xchg
push
mov
movs
add
sbb
lea
(bad)
icebp
push
jecxz
stos
stos
cdq
cmps
adc
movs
jb
and
retf
mov
clc
cli
xchg
ror
out
mov
ss
push
call
xchg
in
sbb
outs
aam
xlat
call
std
add
push
adc
bound
mov
push
sbb
ins
inc
sub
pop
jmp
out
push
and
inc
pop
out
lods
jbe
repnz
pusha
pop
push
pop
and
(bad)
or
inc
sub
or
mov
out
std
push
mov
imul
pop
movs
add
jg
arpl
(bad)
daa
fld
movs
(bad)
mov
jmp
add
movs
xchg
jl
pop
push
or
push
inc
sub
dec
test
cwde
jle
fwait
cmp
loope
lods
sti
fwait
ja
dec
retf
sbb
sbb
xlat
clc
mov
mov
push
add
push
ins
pop
push
in
push
xchg
pusha
sbb
jmp
(bad)
leave
lods
cmp
and
iret
sub
sbb
or
push
or
mov
inc
cmp
or
xor
inc
cmp
int
mov
das
sti
and
cmp
cs
sar
push
push
fist
test
shr
fdiv
cmps
(bad)
xchg
retf
mov
lods
fldenv
fidiv
ja
mov
jb
inc
test
and
add
sbb
stc
sbb
fnstcw
xchg
shl
ins
dec
cmp
and
pop
push
frstor
dec
cmp
cmp
mov
mov
stos
mov
pusha
retf
mov
inc
movs
sub
fucomi
cmp
push
jle
fsubr
sar
jmp
push
lods
mov
in
les
add
outs
ret
imul
and
lods
lea
pop
mov
fwait
inc
sub
and
adc
std
out
loope
int
inc
fcmovu
das
pusha
lahf
test
xchg
int
(bad)
fcom
cld
inc
rcl
std
test
cmp
ret
fcmovnb
ret
fs
cmp
xchg
(bad)
and
xor
test
or
jnp
retf
mov
push
pop
rol
nop
xor
adc
adc
push
mov
icebp
cmp
sbb
jp
mov
jle
cmps
out
mov
adc
mov
sbb
cmc
mov
jl
repz
or
and
sbb
lods
xchg
aam
outs
call
cli
mov
out
push
loope
push
pop
mov
xchg
call
(bad)
hlt
mov
xor
sub
repnz
jmp
aam
cmp
out
jnp
cmp
jl
mov
push
xor
sub
test
mov
mov
test
mov
jne
je
aaa
mov
mov
xor
inc
shl
leave
cmps
sub
sbb
pop
jge
imul
and
sub
(bad)
mov
adc
gs
mov
inc
jle
test
xor
and
fs
mov
inc
xor
hlt
(bad)
sbb
stos
cdq
loopne
test
mov
bound
int3
lea
(bad)
xchg
push
pop
les
jecxz
push
sahf
sahf
lods
in
pop
mov
or
dec
pushf
sbb
jno
push
push
test
loope
lds
xor
stos
popa
or
xor
sar
mov
call
adc
sbb
sbb
cmp
shr
fcom
in
xchg
or
data16
ins
por
and
popa
mov
adc
loopne
mov
cmp
ss
inc
into
push
and
mov
jle
push
aas
pop
lea
fisttp
jns
pusha
je
bound
fld
cmp
adc
in
cdq
dec
mov
mov
sbb
scas
and
adc
mov
lods
mov
xor
leave
inc
leave
sahf
popf
xchg
cmc
and
inc
or
and
sub
mov
cmp
add
pop
sub
sbb
inc
ins
add
movs
neg
adc
inc
rol
or
sub
ror
xchg
push
(bad)
out
push
push
shl
rcl
popf
mov
sbb
lods
dec
fs
arpl
repnz
inc
scas
leave
inc
xor
lds
pop
dec
mov
aas
imul
stc
in
add
inc
push
mov
mov
fdiv
pop
mov
sbb
jmp
lds
push
cmc
dec
loopne
fsub
inc
inc
lahf
dec
arpl
pop
repnz
pop
lock
mov
sub
inc
call
in
push
dec
data16
js
xchg
or
push
pop
nop
ss
mov
addr16
dec
repnz
arpl
cld
sbb
enter
sbb
imul
jns
or
add
int
push
mov
shl
out
sbb
js
rcr
xor
xchg
mov
(bad)
aas
sub
aas
push
out
into
daa
inc
leave
cmp
xchg
mov
pop
adc
or
push
pop
gs
push
mov
into
movs
pop
jmp
add
mov
or
inc
nop
pushf
fistp
outs
sbb
out
ficom
dec
sbb
mov
cmp
icebp
inc
(bad)
jmp
add
add
shl
sub
dec
sub
gs
mul
loope
or
lock
jno
mov
mov
mov
fmul
pushf
mov
xchg
mov
out
hlt
mov
adc
xchg
dec
fsub
jmp
arpl
popf
cmc
xor
sub
sti
test
scas
pusha
arpl
mov
jle
jbe
xchg
(bad)
imul
inc
retf
loopne
pushf
cmp
add
inc
cli
jno
fnstsw
or
enter
bound
lea
stc
jne
mov
es
add
out
push
mov
imul
mov
popa
adc
je
adc
lahf
in
out
fild
shl
push
bound
icebp
cmp
les
dec
int3
stos
leave
gs
adc
add
in
jnp
daa
push
cmp
add
test
jg
adc
aaa
test
shl
ficom
pop
push
or
cmp
xchg
push
sbb
push
movntq
in
lea
(bad)
popa
cwde
mov
adc
push
sbb
mov
adc
imul
test
jns
push
aam
cmp
std
inc
adc
adc
xchg
mov
retf
jne
inc
pop
test
(bad)
add
out
inc
xor
and
mov
jmp
jmp
mov
or
cmc
cwde
sbb
std
sub
lods
or
inc
outs
lds
mov
lods
jp
lea
xchg
cmp
movs
pop
add
stos
adc
sub
mov
sub
pop
rol
adc
and
arpl
call
sti
call
or
mov
mov
push
pushf
imul
or
dec
ss
in
cmc
cmps
inc
inc
mov
add
test
fwait
inc
in
xchg
xor
jp
fnsave
cmp
ins
add
xchg
mov
mov
dec
cmc
mov
jnp
add
(bad)
push
push
es
inc
dec
dec
(bad)
imul
stos
cmp
out
push
call
xchg
je
stc
inc
cmp
xor
mov
mul
outs
xchg
mov
and
or
in
dec
sub
jmp
mov
outs
push
pop
ret
das
pop
mov
mov
sbb
inc
xor
imul
fidivr
sub
clc
sub
adc
icebp
cmps
(bad)
leave
mov
or
jecxz
mov
jns
lock
clc
enter
test
adc
cmp
fdivr
xchg
inc
mov
test
aas
push
pop
inc
jle
cmp
retf
or
in
aas
les
xchg
sti
mov
aas
adc
cmps
sti
out
das
stos
daa
or
lea
movs
inc
test
fucomi
mov
cld
into
std
in
iret
mov
(bad)
pop
loope
inc
shl
inc
add
jecxz
addr16
ins
call
leave
cwde
mov
sub
cmps
(bad)
add
push
bound
jmp
ins
outs
out
push
shl
xor
dec
pop
push
(bad)
fdivrp
je
add
push
std
xchg
cmp
cmc
pop
xchg
shr
(bad)
jb
jo
(bad)
cmc
mov
push
fs
xlat
push
xchg
mov
adc
mov
retf
jae
loop
popf
mov
and
pop
pop
mul
and
cmc
xor
lock
mov
jnp
mov
jg
dec
jmp
xor
sahf
aas
push
icebp
mov
dec
mov
pop
stos
call
stc
dec
xchg
jnp
xor
mov
(bad)
mov
hlt
fist
imul
pop
mov
dec
ret
mov
pusha
sbb
retf
mov
push
or
arpl
retf
lods
fidivr
data16
add
ds
push
push
mov
enter
mov
sbb
mov
push
cmp
or
inc
and
or
pop
jle
jmp
xchg
stos
jns
test
cmp
cmp
test
xlat
fstp
scas
push
dec
movs
adc
in
cwde
xchg
dec
xor
lahf
mov
ins
vandnps
rol
popa
ja
sbb
out
ret
stos
sub
mov
pop
inc
dec
pop
xchg
xlat
mov
adc
push
retf
mov
jl
aad
fistp
cld
xor
cli
fmul
inc
aad
orps
lods
in
cmp
aad
outs
inc
fs
in
push
inc
ds
leave
scas
inc
xor
out
in
cwde
sub
sti
enter
test
popa
mov
xlat
rol
adc
jge
imul
jl
add
add
pop
jns
mov
es
mov
push
sbb
push
jno
mov
mov
aaa
add
int3
add
push
outs
test
inc
push
cmp
mov
sar
add
or
or
add
popa
add
pop
ins
lea
retf
jge
or
sar
pop
out
pop
dec
movs
addr16
sub
jl
sub
icebp
mov
outs
or
mov
js
xchg
cmc
and
push
xor
sbb
fcomp
sahf
cmp
js
fwait
lods
push
xchg
cli
outs
xchg
cmp
xor
sbb
adc
scas
dec
adc
loopne
sub
inc
mov
nop
xchg
mov
sub
stos
mov
rol
mov
inc
jmp
ja
(bad)
clc
fs
jo
jp
cmp
pop
sbb
xchg
repz
daa
loopne
cmp
lea
mov
lock
fs
push
jbe
clc
adc
aaa
test
lahf
sbb
mov
arpl
fisubr
sub
mov
sbb
fidiv
js
ret
aaa
out
stc
xor
mov
retf
or
fucomp
inc
scas
(bad)
popf
in
jle
xchg
sbb
pop
add
inc
loop
neg
xchg
dec
(bad)
pop
cmp
jnp
scas
daa
jne
leave
fldenv
outs
std
and
and
cwde
push
(bad)
in
cmp
dec
sub
jmp
adc
ins
je
pop
lods
(bad)
out
call
jg
ja
push
inc
repnz
pop
in
sub
or
inc
jns
jns
xchg
sar
sbb
int3
sti
sub
loopne
stc
into
xlat
or
xchg
mov
nop
sub
mov
pusha
and
inc
clc
hlt
shl
mov
mov
lea
and
xchg
pop
sahf
mov
scas
dec
inc
sub
fmul
sub
addr16
pop
or
(bad)
push
add
jne
mov
and
xlat
int
pop
mov
pop
inc
icebp
cmp
jmp
lds
sub
xchg
add
push
mov
adc
sub
mov
xor
push
mov
jmp
dec
adc
int3
ss
into
popf
xor
or
mov
pop
dec
mov
popa
stc
jb
int
pop
fistp
stos
xchg
or
data16
cli
lods
fmul
loop
xor
aaa
test
es
cs
cs
jecxz
lea
inc
push
out
xchg
mov
mov
cmc
lock
add
sbb
lods
pop
in
inc
push
mov
cld
lock
in
cli
mov
inc
or
sub
fcom
inc
and
aaa
jbe
pusha
jnp
loop
fist
dec
out
cmp
sbb
jl
pop
popa
(bad)
xor
popa
or
clc
add
fisttp
cmp
movs
jno
mov
jne
mov
xor
sub
iret
fild
sbb
or
dec
dec
inc
jp
rcr
xor
mov
mov
mov
fist
loop
outs
test
mov
mov
test
or
mov
jp
cmp
push
fwait
movs
out
loopne
add
jbe
call
push
mov
sar
pop
aam
sbb
(bad)
shr
jae
cmp
dec
add
adc
ret
jmp
jno
mov
ret
int3
fdiv
inc
xor
(bad)
jmp
(bad)
ja
mov
push
dec
out
bound
xor
outs
stc
std
or
jmp
int
(bad)
jne
js
cwde
arpl
stos
dec
call
mov
inc
ja
pop
push
xchg
(bad)
imul
lea
int
jmp
retf
jae
aaa
ror
or
xchg
push
and
mov
call
mov
dec
sub
mov
fs
fs
pop
push
jnp
lock
jmp
leave
imul
mov
or
inc
jle
xor
out
scas
sbb
fcmovb
nop
test
inc
in
pusha
out
xor
jo
or
shr
mov
xchg
aam
sub
fstp
cmp
ret
mov
xor
int
jb
ror
cdq
push
or
stos
fisttp
ret
rcl
xchg
cli
xlat
inc
rcr
mov
into
test
sub
mov
outs
push
daa
int
call
div
stos
adc
outs
jb
or
sub
push
aas
movs
adc
adc
pop
fcmovnbe
and
imul
sbb
bound
push
cs
inc
(bad)
pop
mov
mov
adc
je
xchg
ret
jne
sbb
cld
mov
dec
cmp
aaa
adc
push
es
dec
mov
sub
stc
xor
stos
pop
nop
mov
mov
(bad)
push
cmp
push
push
fadd
xchg
in
pop
mov
cmp
sbb
les
sub
push
clc
jns
(bad)
outs
pop
mov
mov
cmp
mov
mov
xor
enter
movs
retf
sahf
inc
pop
ins
mov
add
push
xchg
nop
fimul
mov
sub
mov
mov
push
mov
sbb
popa
jp
clc
(bad)
scas
mov
pop
mov
push
outs
mov
adc
daa
les
pop
lds
or
or
push
pop
inc
inc
shr
inc
xor
cmp
mov
sahf
leave
leave
cmp
ret
sub
test
add
lds
push
(bad)
dec
inc
adc
ret
lea
xor
pop
test
aad
scas
fld
inc
call
mov
adc
pop
xor
mov
inc
mov
push
or
(bad)
stc
outs
xchg
popf
push
mov
mov
stos
push
in
addr16
adc
push
ja
cmp
ret
loopne
js
jno
inc
fbstp
daa
je
aam
lea
cdq
sti
rcl
mov
fs
jg
fucomp
test
jne
out
gs
leave
xchg
lock
ds
jae
lods
sub
and
adc
imul
cld
cwde
and
outs
add
jp
mov
xchg
mov
pop
mov
jb
adc
into
rol
fld
in
pop
pop
push
pop
fs
iret
lods
push
add
shr
les
and
xchg
add
clc
(bad)
in
jns
cmp
(bad)
push
sbb
push
jecxz
jb
int3
push
add
push
inc
or
imul
mov
mov
and
mov
(bad)
std
or
cmps
dec
dec
icebp
cmp
retf
imul
(bad)
cmp
ins
out
hlt
lods
test
push
jbe
imul
add
push
scas
push
dec
push
cmp
pop
mov
scas
push
xor
rcr
fcom
mov
lods
fs
pop
loop
xor
in
dec
mov
sub
lea
fs
leave
inc
inc
lds
loope
(bad)
sbb
sub
in
adc
push
rol
jns
into
loope
test
in
mov
fcmove
cmp
dec
or
clc
fwait
and
ficomp
jmp
cmp
dec
sar
inc
push
out
mov
mov
ror
leave
cdq
jae
mov
mov
mov
dec
dec
ss
jno
sub
repnz
jmp
pop
iret
(bad)
aas
(bad)
cmp
xor
icebp
push
add
pop
mov
xor
cli
mov
or
push
add
jmp
sub
cmp
push
dec
mov
ss
ret
out
xchg
ret
adc
loop
pop
sbb
add
lods
out
jo
ror
popf
enter
in
pushf
add
mov
push
pop
cli
js
cmp
xor
es
sub
aas
mov
jg
push
jb
stc
fwait
imul
cmp
jmp
mov
fist
out
sti
pop
call
aas
push
in
jo
push
mov
addr16
sub
dec
jno
sti
mov
sub
mov
jne
mov
jno
ds
nop
out
add
fucompp
mov
or
jno
daa
pop
mov
cmp
mov
or
(bad)
mov
js
fucomp
and
xchg
fist
cwde
leave
xor
xor
add
add
xor
jae
inc
inc
cmp
xchg
test
mov
mov
mov
sub
mov
nop
mov
and
nop
pusha
lahf
in
jae
and
inc
inc
fnstsw
int
pop
cmp
ins
not
mov
mov
sbb
ds
call
sti
cmp
pop
jecxz
das
hlt
push
(bad)
pop
push
pop
pcmpgtd
movs
scas
xchg
mov
add
fsub
jp
cmp
std
sub
daa
loope
bound
sbb
pop
inc
push
mov
leave
or
or
les
and
in
jbe
sti
iret
lods
lock
out
mov
outs
xchg
mov
inc
scas
shr
retf
lds
mov
lock
ret
and
push
test
jp
hlt
xor
leave
jmp
(bad)
push
cld
out
push
mov
jbe
into
inc
popf
js
inc
dec
jns
pop
add
arpl
and
dec
sub
inc
cwde
cwde
xchg
mov
xchg
pop
aas
lock
sbb
inc
push
call
sub
sub
aad
icebp
mov
ficom
stos
jo
xchg
jbe
lods
jl
jecxz
mov
mov
dec
cmc
mov
adc
push
pop
mov
xchg
push
jecxz
push
mov
add
into
icebp
sub
mov
sub
test
retf
ret
addr16
jp
jp
mov
jno
and
push
loope
pop
shr
ficomp
push
frstor
int3
pop
imul
popf
push
or
cmp
sub
(bad)
xor
sbb
jmp
push
fcmovne
mov
pop
mov
arpl
dec
mov
(bad)
loop
mov
mov
xchg
dec
dec
outs
mov
out
jp
dec
data16
hlt
out
test
push
sbb
in
stc
sbb
push
mov
repz
jmp
pop
lds
push
cmp
sbb
jbe
dec
fst
and
xchg
mov
inc
dec
fstp
cmc
xor
jo
test
jecxz
add
(bad)
fstp
pop
jb
add
stc
imul
jecxz
jecxz
pop
cmps
mov
imul
ins
cwde
into
ins
add
pusha
nop
mov
or
jg
push
sbb
aad
xor
cld
fild
iret
and
cmp
jo
mov
xor
mov
push
pusha
or
push
sub
stos
ins
cmp
loop
xchg
jo
or
(bad)
repz
sub
inc
pop
or
xor
or
mov
out
inc
mov
or
xchg
leave
out
dec
sub
mov
mov
rcl
imul
scas
(bad)
xchg
aam
je
xor
pop
push
idiv
movs
or
pop
jns
push
into
sbb
cld
(bad)
in
sbb
fistp
pop
icebp
pop
adc
dec
push
mov
cwde
add
mov
mov
ret
or
mov
add
fimul
add
jne
pushf
lods
(bad)
stc
pop
ficom
popa
aas
sub
cmp
or
je
sub
aaa
mov
cmps
movs
jge
jmp
popf
(bad)
out
fisub
je
mov
enter
adc
pusha
sbb
jno
sub
scas
loopne
lock
nop
ins
jne
xchg
xor
call
adc
adc
inc
mov
in
loope
mov
add
sbb
xor
and
jmp
xor
mov
dec
add
fs
in
inc
push
sbb
xchg
sti
aaa
pop
clc
ins
pop
aas
mov
push
mov
ret
xchg
push
inc
repz
jg
fldl2t
push
ja
idiv
cmp
ja
mov
test
dec
movs
or
mov
adc
sti
fs
push
sub
jecxz
aas
cld
xchg
jbe
dec
icebp
stc
jns
jnp
xor
fdivr
les
js
jno
mov
stos
push
mul
and
push
or
stos
xor
jmp
mov
js
(bad)
loopne
xor
cmc
(bad)
ds
fst
std
fst
daa
aad
xchg
dec
sbb
mov
push
test
jecxz
jno
and
outs
push
push
aaa
(bad)
loopne
mov
ret
push
cdq
dec
movs
lods
mov
mov
mov
sub
pushf
sbb
xor
or
xchg
imul
jg
sub
pop
data16
call
js
in
or
arpl
data16
mov
pop
add
adc
dec
outs
xchg
mov
jae
mov
and
cmp
sbb
jno
mov
push
sub
stc
xlat
jb
pop
jp
adc
es
daa
adc
enter
gs
xchg
adc
sbb
adc
loope
in
sbb
adc
ins
shr
mov
fisubr
out
stos
ror
push
aaa
ja
push
aaa
or
movs
and
enter
cdq
mov
cli
or
mov
in
mov
shr
pop
sub
push
mov
jge
out
inc
cdq
lds
arpl
aaa
lock
inc
cmp
pop
imul
out
add
sbb
sahf
sub
cmc
dec
stc
mov
mov
xor
add
cmps
jo
and
cmps
mov
std
mov
data16
jge
mov
mov
call
push
jae
adc
out
and
repz
dec
sub
and
clc
ret
xor
les
gs
cwde
cdq
(bad)
mov
outs
adc
daa
jmp
and
std
dec
jb
pop
or
aad
cmp
mov
ret
ret
dec
jge
dec
fmul
jnp
cmp
(bad)
ins
sbb
xchg
push
or
xor
js
pop
cs
nop
xor
push
jbe
xor
add
jmp
test
or
imul
(bad)
jmp
out
enter
arpl
out
call
mov
pushf
jecxz
bound
sbb
inc
mov
ins
repz
xchg
arpl
(bad)
out
jno
mov
sti
xchg
sub
and
jle
jb
add
xchg
movs
hlt
loop
and
jne
fucomp
test
inc
or
add
fisub
out
xchg
xchg
push
nop
fwait
add
int3
scas
and
ficomp
mov
addr16
pop
pop
ror
mov
aad
or
dec
lods
xchg
push
(bad)
pop
mov
mov
bound
push
lahf
clc
mov
and
call
mov
jns
cmp
pop
(bad)
fsub
pop
ss
out
cmps
mov
jmp
mov
and
dec
pusha
in
bound
inc
mov
fst
or
rcl
sbb
ins
sahf
je
pop
loop
inc
loope
shl
bound
clc
cmp
daa
ret
das
fs
out
cli
mov
gs
pop
sbb
fs
and
outs
pop
jge
or
shl
push
jo
pop
fist
add
pop
out
add
xchg
test
sbb
and
aaa
fs
mov
adc
push
push
push
std
int3
mov
lock
xor
test
loope
iret
sub
jns
and
push
push
xor
sub
sub
popa
outs
loopne
or
inc
bound
push
stc
sbb
cmp
test
push
mov
xor
mov
push
sti
push
faddp
mov
xchg
sub
in
lods
xchg
push
dec
inc
jbe
add
loopne
pop
loopne
div
sub
xchg
cmp
repnz
fwait
test
ret
lahf
jns
fist
xor
ror
mov
(bad)
or
inc
pop
push
jbe
pop
in
cld
dec
mov
xchg
or
call
sbb
aam
xchg
push
jnp
outs
dec
pop
loope
adc
xchg
inc
ja
outs
arpl
add
mov
mov
push
ins
mov
pop
mov
loope
lods
hlt
jnp
and
sbb
out
das
out
add
mov
or
js
fist
in
inc
out
xor
xchg
cmp
mov
cmps
(bad)
jecxz
mov
mov
shr
push
mov
lahf
(bad)
jbe
add
loope
(bad)
mov
inc
mov
pop
imul
in
dec
cwde
aas
adc
or
pop
out
cmp
pop
dec
or
cs
jmp
inc
push
add
jl
icebp
cld
pop
neg
mov
jae
jmp
sub
imul
not
dec
lods
push
sub
mov
push
and
jp
jmp
xchg
jnp
test
xor
dec
push
adc
push
xor
pop
mov
js
sub
jle
daa
mov
sbb
or
imul
sahf
cmps
addr16
ret
(bad)
push
ret
packsswb
ins
xlat
test
int3
and
add
fld
dec
xor
sub
jno
jbe
fidiv
sahf
jmp
sti
test
(bad)
cmps
iret
loope
popa
push
movs
fcomp
or
outs
mov
pop
mov
mov
dec
fiadd
dec
mov
inc
(bad)
in
jge
xor
add
sub
fisttp
push
cmp
outs
or
popf
dec
test
addr16
ss
clc
(bad)
mov
xor
sub
dec
cmps
push
retf
xchg
inc
js
call
mov
das
lods
ficom
call
fsubrp
rol
jmp
sahf
xchg
cmp
in
lea
movs
jmp
and
push
loopne
sub
push
or
setne
aam
loopne
push
shl
jmp
out
pusha
cmc
cmp
(bad)
les
xor
mov
xor
std
cld
inc
std
pop
fs
ins
pop
mov
inc
xor
movs
push
jl
out
mov
adc
xchg
mov
out
test
xor
call
sbb
(bad)
sti
in
adc
ret
dec
test
xor
leave
cmp
sahf
and
int3
push
jno
arpl
mov
test
xchg
add
sbb
fwait
shr
test
xchg
stos
outs
xor
inc
or
lahf
fs
dec
adc
mov
jp
stos
stos
jge
ror
cmp
cmp
ja
jmp
jle
push
jle
ret
and
loopne
or
push
sbb
cmp
enter
jge
mov
jmp
inc
loop
xchg
out
(bad)
in
(bad)
sub
cmp
pop
dec
inc
cmp
mov
push
xor
imul
mov
cli
push
push
push
sbb
pop
dec
(bad)
fstp
sbb
inc
mov
cmp
and
int3
inc
or
push
aad
dec
ds
aas
push
enter
je
add
imul
sub
mov
pop
jp
(bad)
or
xchg
fxch
cmp
cwde
pop
pushf
adc
or
scas
adc
jno
adc
mov
push
iret
and
hlt
xchg
mov
push
nop
xor
or
push
or
pop
out
mov
dec
retf
xchg
pop
xor
es
mov
xchg
lds
mov
jmp
sub
(bad)
mov
call
repz
lds
sbb
mov
xor
inc
retf
or
jg
pop
call
(bad)
sbb
jmp
xchg
cld
test
jns
cmp
mov
xchg
jo
mov
das
xchg
mov
xchg
aad
mov
leave
in
call
inc
inc
cmp
and
inc
mov
add
shr
popa
retf
jns
pop
or
fnstcw
push
fst
aam
sti
cmp
mov
loope
xor
outs
pop
enter
test
inc
ds
sbb
pop
aas
sub
ja
cmp
adc
je
repnz
mov
mov
ffreep
(bad)
adc
mov
cdq
out
pop
sub
lock
in
mov
fs
push
xchg
mov
jo
jmp
lods
ret
ficom
xor
cmp
add
sub
shl
stos
shr
mov
adc
sti
mov
imul
push
ffree
in
rol
cmp
jb
push
and
jns
xor
fstp
sub
fdiv
mov
sub
mov
pop
das
fcomp
mov
mov
sbb
jns
jo
jns
rcl
lds
test
xor
aam
int
es
push
mov
popf
lods
inc
cmp
jnp
dec
pop
mov
test
mov
adc
or
icebp
cmc
gs
test
neg
push
cli
pop
mov
into
leave
es
std
outs
mov
xchg
mov
xor
push
aaa
add
add
mov
je
es
(bad)
xchg
call
and
xchg
std
test
ins
shr
(bad)
jl
iret
mov
inc
and
and
push
sbb
mov
sbb
dec
push
out
xchg
fld
(bad)
xor
(bad)
enter
mov
and
jb
outs
cli
bound
mov
inc
in
sbb
bound
cmp
test
cmp
arpl
ins
in
adc
xchg
fadd
mov
cmp
dec
pop
clc
xchg
outs
psubq
div
outs
test
je
iret
mov
jle
es
fisubr
or
fcom
(bad)
mov
xor
dec
dec
mov
repnz
add
dec
test
sbb
cmp
xchg
es
out
pop
mov
scas
lea
cdq
test
push
mov
scas
lea
adc
fstp
dec
xchg
mov
sbb
mov
cmp
jae
int3
ins
fnstcw
jle
inc
cmp
cmps
jl
les
fild
push
sub
pop
cmp
int3
pushf
cmps
cdq
mov
push
test
xor
cmc
jmp
or
retf
xchg
sar
mov
pop
iret
mov
fidiv
and
push
addr16
daa
pop
(bad)
sbb
je
data16
or
int3
out
movs
inc
xor
xor
mov
sbb
(bad)
test
inc
or
cmps
mov
xchg
xor
addr16
and
mov
bound
js
nop
adc
jae
push
pop
xor
mov
sbb
rcr
push
aad
push
shl
mov
retf
mov
push
pop
fwait
in
or
adc
jbe
sub
out
fadd
aam
inc
int
repnz
loopne
adc
mov
fxch
xor
shl
ss
fwait
mov
movs
mov
push
and
sbb
loop
fld
inc
cld
(bad)
nop
out
aaa
les
retf
cmp
inc
push
(bad)
dec
jne
mov
add
xor
fnsetpm(287
int3
retf
icebp
aas
cmps
ins
fmul
div
int
sti
sahf
mov
mov
sub
call
in
sub
sub
ss
add
mov
dec
inc
mov
xchg
rcr
popf
js
mov
jae
loopne
mov
sbb
xchg
inc
push
nop
scas
imul
aad
out
mov
cld
xor
mov
cmc
es
lds
mov
jmp
jmp
(bad)
mov
adc
in
adc
test
jo
adc
pop
mov
fs
add
or
or
xchg
mov
mov
add
push
pushf
mov
push
in
or
ins
jmp
jmp
push
and
ins
in
sar
popa
aas
imul
mov
xchg
imul
push
scas
cwde
icebp
rcl
lods
aas
les
cdq
inc
push
cmp
out
test
stos
sbb
out
pushf
sbb
mov
popa
outs
sub
or
out
mov
mov
jmp
cmp
mov
xchg
jo
popfw
dec
push
adc
fist
cmp
idiv
mov
addr16
test
pop
jae
mov
xlat
scas
pop
xchg
inc
cmps
and
push
stos
sar
(bad)
in
(bad)
pop
sti
mov
and
jne
cli
pushf
fstp
iret
cmc
pop
sbb
xor
add
in
cwde
or
scas
inc
pop
int
or
cmps
or
cwde
into
dec
sahf
ins
shl
cmps
add
sub
mov
jp
xor
(bad)
popf
push
jae
mov
iret
and
xchg
mov
sub
sbb
and
push
xchg
retf
scas
(bad)
push
xlat
pop
fcomp
xchg
mov
xlat
pushf
pop
loope
mov
retf
jmp
push
and
cld
sbb
lds
lods
daa
test
daa
fisttp
(bad)
lock
mov
aas
not
icebp
cmps
dec
dec
lea
cmps
iret
jg
data16
pop
inc
ds
adc
dec
dec
add
and
mov
xchg
aaa
xor
in
mov
dec
std
outs
(bad)
dec
(bad)
sbb
pop
stos
xor
stc
jnp
sti
lea
sbb
push
pop
cmps
rcl
iret
fs
out
bound
lods
jb
sbb
sbb
xor
sbb
lods
jg
hlt
imul
aas
inc
cmps
lods
shr
pusha
sti
xor
aaa
mov
dec
pop
sbb
arpl
pusha
sbb
xor
jno
mov
xchg
and
adc
jge
rol
sbb
imul
jno
push
mov
mov
xor
add
push
cmp
fs
pusha
push
cmp
shr
add
in
dec
inc
aas
das
mov
xchg
and
mov
sub
rcr
push
push
inc
icebp
cdq
pop
mov
sti
cmp
mov
int3
ret
jl
mov
add
ficom
js
mul
mov
sub
mov
mov
fld
and
enter
movs
and
jnp
daa
sub
adc
stos
sbb
mov
ror
add
cmp
mov
push
vshufps
mul
loopne
call
xchg
(bad)
jne
sub
add
pop
sub
xchg
and
dec
jmp
push
cmp
int
fs
sbb
sub
sbb
sub
jae
bound
(bad)
mov
inc
push
fmul
xchg
rcr
popa
lods
inc
sar
dec
pop
pop
in
lahf
jl
enter
stos
mov
and
xor
mov
adc
(bad)
dec
jp
sahf
fadd
ror
hlt
mov
add
or
fisubr
ror
in
cwde
and
and
cmp
aaa
in
inc
leave
or
cld
xlat
cmc
fcmovnb
mov
jp
cmp
cmp
mov
xchg
stos
mov
push
mov
in
not
stos
mov
push
xchg
pop
push
add
jne
add
ja
mov
or
fild
push
sar
in
and
call
cmp
sahf
pop
ss
retf
and
xor
mov
jmp
adc
dec
leave
sub
loopne
mov
ficom
jnp
stos
dec
push
movs
jmp
out
cmp
jmp
or
ffree
push
enter
aas
cwde
les
push
mov
mov
push
test
ret
loope
test
mov
div
hlt
lock
xor
out
test
scas
pop
out
jl
or
test
in
mov
push
ds
(bad)
push
mov
push
ss
dec
imul
push
sbb
push
jge
in
outs
sbb
add
cmp
mov
test
adc
ret
aaa
lahf
mov
ret
les
aam
mov
add
(bad)
ss
test
rol
cmp
enter
and
sub
ins
cmp
pop
jae
int3
je
add
bound
imul
push
cwde
ins
std
out
dec
ja
mov
mov
leave
fcomp
pop
fdivr
fsub
ja
cmp
fdiv
mov
jo
test
xor
push
pop
sti
dec
pop
into
out
jne
pop
jmp
mov
push
sbb
sar
cmc
mov
clc
gs
out
and
sub
inc
ins
push
push
push
repnz
mov
aaa
(bad)
xchg
nop
add
hlt
(bad)
scas
xchg
fs
js
cmc
adc
(bad)
out
inc
(bad)
xchg
fucomi
cmp
mov
inc
bound
xchg
ss
pusha
fdivr
cmp
adc
pop
rol
xor
repz
adc
(bad)
push
mov
or
nop
inc
add
mov
outs
mov
xor
(bad)
arpl
dec
(bad)
push
xchg
inc
lds
scas
mov
int
jmp
dec
(bad)
sbb
jp
std
rcl
sbb
mov
mov
or
push
cmp
pop
mov
add
sbb
loop
mov
(bad)
js
lea
sti
pop
dec
loop
scas
mov
into
sub
scas
aaa
dec
inc
addr16
aad
popf
xlat
lods
retf
jnp
fbstp
retf
and
push
les
cs
int3
leave
mov
add
outs
sbb
xor
sbb
mov
pop
or
jmp
and
in
in
dec
test
inc
dec
retf
pop
xor
sbb
pop
loop
xchg
mov
jb
(bad)
mov
scas
adc
test
mov
outs
fld
cs
(bad)
xor
imul
popf
lock
cmp
sar
sbb
or
data16
jmp
push
repz
inc
inc
xchg
xchg
cmp
rcl
xchg
shl
mov
dec
aas
pop
push
mov
dec
xor
xchg
imul
xor
cmp
pop
sbb
inc
stos
mov
adc
or
into
shr
(bad)
sub
push
lods
mov
popa
dec
test
lock
cmp
ds
(bad)
xor
scas
ins
fnstenv
mov
(bad)
push
or
cld
push
fcom
pop
sub
cli
sub
adc
int
retf
mov
fwait
inc
stos
xchg
add
cdq
push
mov
mov
and
adc
mov
mov
and
dec
in
loop
jnp
dec
aam
shl
xor
add
loopne
test
inc
call
js
jns
fldl2e
scas
or
jbe
scas
mov
outs
pop
or
retf
scas
lock
dec
sbb
hlt
sbb
call
adc
and
es
adc
aaa
cmp
std
lds
jl
xor
sub
das
mov
repnz
xchg
jge
and
mov
arpl
mov
lahf
adc
sub
in
cmps
loope
sub
(bad)
lods
adc
imul
jo
ins
sar
xlat
test
inc
test
loopne
mov
imul
or
fadd
push
lea
mov
or
les
cmp
xchg
sbb
mov
xor
xchg
jns
push
sub
jb
xchg
mov
enter
or
sub
cmps
mov
ja
stos
stc
retf
das
pop
(bad)
pop
stos
dec
gs
std
fs
and
inc
in
add
xchg
fs
addr16
xor
inc
cmps
(bad)
jne
enter
test
out
into
sub
jnp
jge
stc
cmp
mov
lods
aas
cmp
dec
popa
jmp
lea
sbb
jp
sbb
repz
push
sub
ja
out
mov
leave
push
or
loopne
dec
sub
not
cmp
mov
in
dec
aad
test
add
xchg
pop
push
lods
push
shr
adc
xchg
aaa
pop
out
stos
sbb
out
xchg
mov
xchg
mov
sbb
popa
repnz
add
mov
xchg
jb
push
aam
fwait
(bad)
jmp
in
sti
call
pop
lahf
gs
mov
iret
sbb
mov
xor
pop
cmp
popa
aaa
or
pop
cs
cs
dec
stos
mov
adc
pop
out
or
ds
cmp
xchg
mov
stos
push
(bad)
and
xchg
rcl
jmp
push
nop
out
or
sub
out
call
(bad)
pop
gs
fmul
cmp
adc
xor
mov
and
or
rcl
inc
xor
dec
sahf
inc
int
cmp
mov
ja
xchg
xchg
inc
pop
jo
sub
aad
mov
dec
xchg
dec
push
pop
mov
sbb
sbb
xor
push
js
add
push
xchg
and
ja
inc
pop
nop
jnp
pop
or
adc
pop
cmp
xchg
adc
ins
nop
ret
mov
inc
inc
sar
pop
xor
or
mov
in
out
mov
ss
mov
mov
or
or
push
xor
mov
mov
or
test
mov
ins
clc
dec
push
sbb
push
inc
addr16
mov
out
inc
jbe
jp
or
ins
sar
sbb
adc
aaa
push
mov
inc
out
xor
in
js
dec
adc
and
cmp
adc
or
enter
adc
inc
cmp
test
sbb
push
imul
mov
dec
ror
sbb
inc
mov
mov
repz
test
and
xchg
mov
jge
test
mov
mov
cs
hlt
sub
or
or
push
cmp
hlt
loop
cmps
jae
mov
pop
(bad)
mov
xchg
xchg
and
aad
(bad)
ror
and
out
shr
mov
or
out
mov
or
out
out
push
add
stos
outs
mov
cmp
popa
push
and
lods
push
addr16
ja
mov
dec
pop
xor
cmp
(bad)
movs
cmps
inc
je
pop
jne
aaa
sbb
int
mov
pand
call
dec
loop
test
jecxz
pusha
xchg
mov
sbb
inc
lea
mov
or
hlt
adc
cmp
jae
pop
imul
out
fdiv
ret
sahf
minps
or
mov
mov
addr16
popf
loop
ins
inc
gs
mov
cs
mov
dec
sbb
sahf
sbb
xor
adc
sbb
dec
out
cmp
das
inc
sub
inc
dec
sbb
push
adc
push
pop
dec
fild
out
push
push
jmp
mov
sub
or
ds
xor
pop
ret
das
mov
retf
cmp
addr16
xchg
shl
das
sub
loope
lods
test
das
pop
leave
or
sbb
(bad)
arpl
pop
push
es
arpl
sbb
out
xchg
imul
add
xchg
pusha
sub
popa
inc
ins
push
xor
out
inc
das
inc
stos
pushf
call
(bad)
xchg
in
xchg
out
jmp
movmskps
jecxz
and
ret
adc
idiv
test
xchg
dec
jno
neg
xchg
inc
aas
iret
and
ja
pop
aas
enter
pop
adc
mov
xchg
cmp
loop
rcl
mov
push
inc
mov
or
in
xchg
int3
cdq
jmp
ja
push
hlt
jl
push
rol
mov
call
in
stos
(bad)
clc
pop
cmp
xchg
neg
push
xchg
out
mov
mov
sbb
outs
ficom
mov
stc
pop
or
rcl
fiadd
std
arpl
sbb
arpl
(bad)
jmp
ins
and
cmps
jo
fs
rol
repnz
add
lods
dec
cmp
pop
sub
mov
and
gs
mov
aaa
pop
push
push
xchg
fild
mov
test
pusha
xor
imul
pushf
retf
dec
cmp
fimul
sub
ja
repz
call
adc
mov
mov
sub
or
sar
mov
sub
fldpi
push
pop
mov
inc
in
xchg
aas
sbb
aaa
jl
xchg
xchg
fisub
mov
mov
(bad)
sti
aas
popf
push
popa
ds
retf
pop
add
dec
jp
mov
scas
out
fwait
push
test
mov
scas
mov
jae
mov
sub
dec
add
cld
movs
dec
jp
fdivp
push
mov
mov
sbb
push
arpl
adc
jo
add
neg
sub
(bad)
imul
sti
inc
aam
popf
jae
loope
mov
pop
mov
adc
mov
sub
out
pop
cmovp
(bad)
pop
adc
add
push
mov
push
sub
fistp
test
in
push
ret
clc
ins
out
idiv
add
ds
hlt
xchg
mov
inc
inc
lods
popw
jg
pop
std
xchg
pop
or
xlat
sar
adc
ja
fdiv
dec
mov
push
data16
jno
loop
in
mov
hlt
into
lods
(bad)
mov
repz
in
mov
cmps
icebp
xchg
mov
pop
push
call
retf
jle
push
inc
(bad)
lock
in
jmp
xchg
data16
xchg
add
push
sbb
nop
imul
adc
adc
inc
sbb
pusha
pop
cmp
add
add
add
jo
es
aam
inc
jns
sahf
sahf
retf
dec
inc
aas
xor
(bad)
ds
sti
movs
add
adc
inc
repz
not
mov
lds
inc
jns
es
inc
ds
cli
repz
(bad)
int3
inc
mov
popa
cld
mov
fld
fcomp
in
pop
mov
ss
mov
leave
into
cmp
add
enter
sub
retf
xchg
mov
push
in
fsub
add
dec
jle
cmp
retf
jge
loope
inc
jno
pop
pop
cmp
jecxz
lahf
mov
pop
mov
call
je
pop
imul
dec
or
cmp
push
mulps
mov
push
mov
jge
jg
mov
dec
or
pop
out
inc
pop
(bad)
icebp
(bad)
push
jb
in
pushf
pop
push
popa
hlt
inc
popa
add
call
push
pop
cmp
dec
pop
(bad)
push
out
repz
pusha
sbb
data16
fcomp
or
imul
nop
hlt
cmp
das
scas
or
call
push
jmp
xchg
loopne
popa
mov
lods
std
mov
out
leave
mov
cmp
inc
xchg
or
in
mov
cli
addr16
das
aad
bound
icebp
xor
cwde
lods
xor
std
xchg
cmp
xchg
repz
das
pop
es
mov
imul
sahf
mov
cmp
popf
movs
pop
push
stc
sub
(bad)
adc
addr16
das
ja
xchg
rol
sbb
lods
adc
inc
xchg
and
out
inc
add
cmc
add
fist
movs
ds
retf
xchg
test
dec
push
out
mov
ffree
in
in
mov
add
mov
arpl
adc
pushf
push
adc
lea
xchg
nop
jg
das
push
fwait
cmp
or
pop
sub
outs
pop
or
das
in
icebp
xlat
xor
loop
(bad)
jo
fs
mov
cmp
dec
jmp
push
dec
fst
ss
and
xchg
push
mov
lea
push
push
and
fldcw
mov
mov
or
jbe
cmps
mov
out
out
mov
cs
adc
retf
inc
xchg
dec
retf
mov
neg
jnp
mov
je
xor
loopne
outs
and
add
mov
pop
mov
nop
push
add
or
enter
fst
push
dec
push
popf
jmp
pop
xor
xchg
nop
cli
icebp
xchg
push
mov
inc
push
test
push
jecxz
in
xchg
and
lods
xor
xor
push
xchg
movs
xchg
mov
cmps
scas
cmp
sub
aam
sub
mov
pop
xor
sbb
lahf
cwde
push
icebp
pop
loopne
(bad)
es
adc
pop
push
jns
fidiv
mov
sub
(bad)
mov
add
adc
sahf
call
mov
dec
rcr
push
sar
push
inc
fwait
movs
jne
rcr
or
(bad)
pop
dec
into
xchg
les
xchg
cwde
sub
repnz
push
icebp
add
aas
icebp
ret
push
and
push
pushf
les
push
stc
cmps
xchg
or
shl
add
retf
imul
es
mov
jbe
stos
lea
sbb
call
or
fs
mov
lock
(bad)
jge
mov
mov
push
aam
shr
jmp
xchg
rcl
cmp
jp
or
fidivr
cmp
fdiv
lahf
xor
lock
fs
pop
mov
inc
jg
xchg
cld
pop
movs
mov
sub
cli
hlt
lods
ret
mov
hlt
xchg
cmp
cdq
(bad)
cli
aaa
xor
mov
shr
jp
ret
loopne
jmp
inc
push
dec
dec
rcl
jae
pop
xchg
bound
aaa
(bad)
call
(bad)
call
stos
ror
inc
sbb
mov
daa
adc
jno
mul
scas
pop
sbb
cli
ficomp
loopne
(bad)
nop
repnz
aad
pop
popa
das
enter
mov
and
xor
inc
push
popf
rcl
xor
add
js
adc
scas
pop
repnz
lds
sub
add
jg
inc
xchg
stos
push
das
push
xor
sbb
cmp
fbstp
adc
icebp
iret
xor
fwait
stos
dec
shl
jo
test
dec
sub
or
mov
push
dec
mov
sbb
imul
inc
sub
mov
fwait
adc
aas
mov
cdq
jmp
jmp
stos
out
(bad)
movs
cwde
(bad)
mov
lahf
bound
(bad)
mov
inc
dec
cdq
cld
cmp
ret
into
rcl
xor
push
mov
xor
jmp
sti
xchg
sbb
mov
aad
dec
sti
call
shl
and
add
push
out
add
aaa
sub
fadd
stos
pop
enter
or
lahf
inc
cmps
in
aad
sbb
push
cmp
pop
imul
add
fsubr
sar
mov
mov
jl
inc
push
push
jg
pushf
mov
enter
fimul
add
movs
pop
jge
pusha
(bad)
mov
dec
call
xor
dec
sbb
pop
loop
sar
xchg
adc
ret
cli
xor
rol
push
leave
dec
sbb
cli
shl
loopne
and
les
push
mov
cmp
test
aaa
cmp
fsubr
icebp
dec
(bad)
add
popf
sub
stos
jmp
xlat
push
push
jge
sahf
pop
daa
adc
add
std
int3
popa
popa
movs
aaa
mov
ja
inc
in
es
ja
jno
into
jg
mov
pushf
cmc
mov
mov
push
adc
(bad)
(bad)
mov
dec
mov
idiv
jecxz
cmps
sti
sbb
push
clc
fild
sub
cmc
mov
mov
mov
addr16
sbb
mov
in
scas
fwait
pushf
leave
out
or
in
mov
mov
gs
sbb
fcmove
leave
fsubr
test
xor
fstp
pop
xchg
mov
adc
and
scas
(bad)
push
mov
sub
stc
sub
jnp
test
loopne
(bad)
push
jo
xlat
cdq
int3
sti
sbb
lahf
jmp
frstor
jmp
xlat
mov
das
ja
out
jno
out
ret
aas
out
add
and
nop
dec
mov
nop
cmp
inc
mov
pop
sub
fwait
pushf
jg
lahf
ins
push
and
mov
or
xor
shl
daa
(bad)
push
cmc
xchg
xchg
imul
jmp
pop
bnd
jp
sub
add
cmp
movs
nop
(bad)
pop
mov
ja
fdiv
cmps
out
jbe
cmp
shr
pusha
jp
in
test
push
lahf
jl
imul
xchg
movs
sti
fidivr
xchg
loopne
out
(bad)
mov
or
call
push
int3
rol
add
dec
enter
and
out
push
or
(bad)
stc
dec
imul
out
adc
je
movs
dec
outs
stc
lods
adc
mov
ins
push
pushf
ret
call
ds
mov
jg
imul
mov
push
mov
clc
test
rcl
cdq
test
lock
sub
sbb
ja
aam
mov
jp
dec
and
(bad)
fstp
(bad)
push
mov
pop
fs
xchg
shl
xor
pop
add
adc
arpl
jo
fisttp
add
test
or
int
mov
mov
cmp
push
xor
loope
dec
inc
and
dec
test
inc
add
fs
shl
dec
repnz
jne
shl
pusha
mov
xor
cs
aas
xor
cmp
fucomi
daa
mov
inc
add
pop
xchg
call
sbb
mov
je
int3
fs
push
leave
stos
and
lods
jmp
sub
sti
les
inc
cdq
mov
mov
jo
cmp
(bad)
aaa
js
cdq
cwde
push
jo
dec
ins
(bad)
inc
imul
pop
xlat
cmp
iret
xor
sbb
stos
in
stc
and
fwait
(bad)
mov
addr16
mov
mov
fisub
fnstsw
mov
data16
adc
popf
pop
into
std
pop
fcmovb
pop
neg
jmp
sub
add
scas
cwde
(bad)
in
dec
mov
les
stc
mov
inc
jnp
xchg
retf
fstp
pop
stos
outs
xor
ja
push
pop
pop
pop
out
icebp
push
xor
sti
call
(bad)
push
(bad)
cdq
adc
pushf
es
jbe
loopne
cmp
test
popf
mov
cmc
cdq
into
jno
loopne
dec
sar
add
cli
mov
sahf
cmps
mov
cli
mov
cmc
xchg
jp
adc
mov
fist
or
sbb
sub
jl
loopne
clc
cmp
mov
div
pop
cmp
mov
stos
sti
sti
jecxz
add
or
xchg
cmp
xor
mov
mov
pusha
add
inc
adc
mov
dec
(bad)
(bad)
cmp
scas
leave
into
stc
adc
lahf
out
mov
push
push
and
outs
xchg
je
pop
push
mov
pop
jmp
sti
jl
inc
mov
test
call
push
cmp
fisttp
mov
fcom
dec
mov
ds
inc
fsub
push
mov
in
fnclex
test
mov
je
push
lods
in
js
sub
add
jge
cmp
iret
dec
push
dec
ret
pop
retf
lods
ret
xchg
nop
pop
xor
pop
jbe
and
mov
repnz
jmp
arpl
jecxz
mov
fstp
and
mov
sub
rcr
inc
push
stos
outs
add
inc
xchg
pop
fld
xchg
(bad)
(bad)
xor
and
retf
push
mov
mov
pushf
mov
jbe
push
and
aad
movs
jle
ret
test
xor
bound
dec
jecxz
icebp
test
lahf
test
and
mov
dec
icebp
mov
daa
pop
js
icebp
push
ins
push
sbb
xchg
jl
loope
cmp
adc
mov
inc
adc
test
jno
add
sub
mov
fsubr
repz
push
fsub
in
mov
nop
add
(bad)
idiv
fldenv
sub
int3
adc
push
stos
movs
mov
(bad)
xchg
fwait
(bad)
aad
xor
sub
call
aaa
sub
xchg
and
popf
ja
addr16
nop
sub
adc
ror
enter
inc
mov
leave
mov
adc
push
lods
sub
jp
fmul
out
addr16
xchg
fwait
add
push
out
mov
aas
rol
mov
scas
xor
inc
push
imul
add
add
mov
cld
inc
jbe
cwde
jo
sub
stc
dec
cmp
ja
fnsave
push
pop
inc
jecxz
xchg
mov
arpl
imul
(bad)
fs
fimul
repnz
mov
sbb
adc
inc
mov
cmp
stos
icebp
sbb
cmp
dec
loop
imul
movs
retf
pop
in
out
ret
push
in
mov
repz
call
adc
and
inc
movs
cmp
(bad)
and
jp
pop
(bad)
jmp
sbb
mov
pop
xchg
pop
add
jmp
xchg
push
xor
xor
int3
ja
aas
neg
push
aas
dec
ja
mov
jl
test
jo
or
adc
lock
hlt
mov
jmp
mov
sbb
scas
and
cli
imul
in
in
es
imul
and
test
cwde
sbb
push
call
mov
mov
jo
add
rcr
cwde
cs
hlt
mov
cmp
rcr
inc
pusha
jno
add
cmps
fild
jno
les
je
xchg
fnsave
inc
sbb
sbb
mov
loop
add
push
inc
in
and
shl
out
jbe
daa
test
jmp
and
pushf
or
mov
xchg
inc
shl
xchg
aam
arpl
scas
idiv
sbb
sbb
jne
mov
xor
sbb
aas
xchg
ins
(bad)
push
vmwrite
sub
inc
arpl
(bad)
into
out
mov
mov
and
xor
jmp
or
pop
stos
dec
movs
mov
push
sbb
add
or
(bad)
popf
pop
aam
sbb
xchg
jmp
std
pop
cmp
pop
ret
fisub
test
inc
imul
pop
cmp
jmp
sub
xchg
and
adc
jmp
sub
pop
addr16
xchg
jae
inc
xchg
xchg
jecxz
retf
xchg
and
es
cmp
fisub
aaa
sub
cld
lea
(bad)
adc
es
sbb
int
add
pop
rcl
test
out
sbb
addr16
mov
rcr
jnp
dec
gs
xchg
repnz
es
dec
clc
pop
xchg
mov
aam
dec
adc
inc
adc
sbb
shl
lds
leave
into
xor
adc
arpl
pop
mov
adc
adc
(bad)
xor
sub
or
inc
xor
movs
imul
dec
jmp
dec
pop
dec
jmp
es
mov
retf
push
aas
mov
call
imul
lds
leave
or
retf
mov
inc
add
lahf
das
loopne
aaa
sar
pop
mov
les
pushf
adc
ss
or
cmp
mov
dec
sbb
sbb
movs
pop
push
cwde
jp
push
aam
sub
jae
out
add
rol
movs
adc
adc
or
xchg
add
(bad)
es
icebp
js
out
mov
pusha
gs
mov
lds
sbb
daa
js
inc
pop
ja
lods
retf
lds
outs
sub
mov
test
movs
xchg
and
aad
ds
inc
mov
push
cmp
popf
mov
fs
push
add
mov
enter
push
sbb
int
jae
hlt
mov
inc
cmp
or
aad
int
jecxz
dec
(bad)
adc
add
xchg
pop
stos
data16
aad
das
xlat
xlat
into
mov
fwait
mov
rcr
fs
(bad)
je
mov
test
mov
pop
dec
push
cmovl
xor
pop
dec
adc
inc
in
bound
mov
loopne
mov
rcr
pop
daa
addr16
jp
call
mov
imul
xor
cmp
add
scas
das
dec
movs
and
out
retf
call
mov
loopne
cmps
sub
in
dec
fisubr
repnz
(bad)
call
push
nop
mov
ret
stc
enter
mov
xor
outs
ficom
jge
cmc
xlat
int3
lods
(bad)
jecxz
repz
inc
push
push
push
ja
mov
int3
loop
neg
in
mov
sbb
(bad)
dec
jp
call
xor
push
push
mov
rcl
xor
loope
pop
jmp
mov
jmp
pop
aas
std
jo
loopne
xlat
xchg
jne
cmc
std
mov
nop
push
call
mov
jae
cs
arpl
adc
cmp
fs
sub
mov
lds
out
ret
js
cmps
outs
(bad)
inc
jg
jl
(bad)
cmp
iret
or
fimul
js
lods
dec
enter
daa
lods
jae
je
fneni(8087
cmp
fidivr
aam
in
aas
imul
int3
jae
cli
mov
test
push
inc
xor
dec
fdiv
out
push
inc
jg
clc
cwde
push
sub
push
inc
(bad)
(bad)
clc
sbb
cmp
pop
ret
int3
sub
dec
jmp
and
lds
xchg
in
or
cmps
pushf
shl
in
loopne
popf
mov
xor
jns
jo
fwait
sbb
jb
inc
retf
es
fisttp
bound
sbb
lods
aas
adc
loopne
mov
aad
jp
inc
pop
sti
outs
loope
shl
pop
pop
mov
xchg
mov
bound
lds
sub
pop
inc
sub
push
mov
mov
mov
jne
xchg
pop
ins
test
mov
ret
mov
jo
sub
mov
mov
fsubr
pop
sbb
pop
lods
dec
je
jp
repnz
sub
dec
jg
adc
xchg
nop
inc
add
(bad)
out
jg
das
test
mov
fisub
fisub
cmp
mov
ja
ror
or
xor
fld
xor
cmp
xor
mov
xor
mov
sbb
lea
add
(bad)
jae
outs
outs
lock
pop
sub
leave
ret
mov
mov
and
sti
leave
lods
(bad)
hlt
xor
mov
jae
dec
loope
push
xor
jmp
jmp
(bad)
mov
fldcw
adc
adc
push
sbb
int
xor
dec
xchg
retf
xchg
mov
xchg
or
cmp
rol
mov
icebp
(bad)
leave
pusha
ficomp
sbb
mov
and
cmp
imul
xchg
jmp
fistp
or
push
ret
dec
and
fwait
jmp
addr16
mov
push
push
dec
push
pushf
imul
lods
dec
pop
ret
adc
add
mov
mov
push
inc
sbb
dec
dec
sbb
sbb
js
aad
jle
or
mov
dec
jo
mov
lods
sbb
test
aaa
cmp
cmp
mov
sub
lods
mov
loope
loop
cmp
or
cwde
jg
sbb
cmc
hlt
push
mov
dec
hlt
xchg
adc
push
rcl
(bad)
cmp
and
add
inc
mov
inc
es
jno
mov
inc
into
xchg
ins
mov
(bad)
cld
push
call
mov
ret
(bad)
cmp
push
jo
pop
call
xchg
fs
push
cdq
movs
or
rol
mov
inc
aas
add
xchg
js
dec
mov
and
(bad)
push
mov
iret
test
adc
pop
fcomp
sbb
add
(bad)
shr
dec
fldenv
outs
mov
adc
adc
rcl
xchg
push
cmp
cmc
mov
imul
jns
inc
call
cwde
inc
fstp
cmp
fild
mov
and
pop
loop
jg
enter
xchg
jmp
and
mov
nop
or
mov
pusha
or
adc
adc
sub
cmp
ins
fsub
rol
mov
fisubr
push
jmp
mov
call
adc
mov
mov
sbb
push
out
out
gs
pop
add
ret
arpl
(bad)
cmp
cmp
sbb
rol
mov
adc
pushf
mov
test
xor
retf
add
mov
add
test
popf
gs
cli
(bad)
mov
sub
dec
nop
in
xor
inc
arpl
dec
shl
xchg
inc
and
jb
scas
push
std
imul
xchg
stos
rcl
pop
dec
call
aam
mov
adc
aaa
adc
gs
test
inc
mov
mov
mov
lods
adc
rcl
dec
idiv
sar
mov
scas
pop
lods
lock
pushf
mov
add
fsubp
dec
inc
lock
(bad)
sbb
xchg
les
xchg
sbb
into
pop
mov
jne
xchg
push
aam
lahf
(bad)
in
call
sub
pop
jge
lods
and
inc
imul
call
push
pop
cmp
fstp
hlt
int3
fmul
pop
xchg
mov
and
mov
push
sub
jae
adc
int
adc
xchg
pushf
jns
mov
stos
and
and
aam
inc
enter
pop
lock
scas
gs
jecxz
(bad)
xor
or
jmp
les
adc
sub
iretw
mov
dec
hlt
ss
pop
repnz
call
xor
mov
mov
stos
test
arpl
push
jecxz
lods
inc
sbb
in
cmp
nop
out
retf
mov
rcr
or
mov
pusha
sub
je
add
hlt
jg
in
xchg
jle
call
jle
fdiv
or
sub
inc
sbb
fwait
cmp
pop
lea
retf
cli
pop
push
loop
xchg
loop
push
dec
stos
(bad)
and
les
mov
leave
mul
sub
stc
sub
ss
inc
push
cmp
and
sub
pop
add
and
(bad)
cmp
test
or
stc
mov
dec
ror
xor
mov
popa
pop
out
in
(bad)
jmp
out
ja
out
aad
pop
dec
pop
pop
xchg
mov
and
mov
jle
push
movs
fmul
pop
(bad)
sbb
(bad)
pop
xor
xlat
xor
jns
iret
lods
and
jae
mov
mov
imul
leave
jb
popf
dec
aad
cmp
dec
outs
lahf
imul
scas
mov
test
sbb
test
lods
test
adc
sahf
add
dec
mov
pop
inc
or
jg
dec
ret
dec
mov
jecxz
jo
sar
repz
repnz
out
mov
retf
popa
and
jbe
ror
lds
push
push
cs
mov
popf
mov
lods
ror
out
push
xchg
pop
pop
aaa
cli
mov
pop
fsub
rcr
div
popf
xlat
adc
rol
and
test
cmp
cmc
mov
or
cmp
and
or
test
pop
lock
mov
es
dec
out
adc
shr
(bad)
fdiv
xchg
xchg
cld
lahf
cmps
pop
jle
dec
shl
mov
imul
mov
jl
outs
or
es
mov
pop
sub
sbb
dec
jae
repnz
pop
lea
and
xor
mov
hlt
or
cs
xchg
fld
xchg
popa
jbe
and
pop
stos
cmp
inc
hlt
mov
and
das
mov
hlt
mov
pop
outs
(bad)
in
(bad)
out
jmp
cmp
jb
mov
rcr
pop
imul
popa
pop
aas
adc
dec
cmp
(bad)
test
popf
jle
bound
pop
jae
loop
sti
sub
sub
sub
jmp
outs
add
adc
push
aaa
out
jle
ss
adc
dec
cs
(bad)
cmp
lock
xchg
push
lock
and
fcomp
(bad)
inc
dec
ja
movs
jnp
rcr
ror
add
popa
jmp
add
lock
bnd
jmp
mov
lds
sbb
inc
cmp
cmps
ret
out
fwait
pop
adc
mov
(bad)
rcl
push
inc
bound
xchg
mov
xor
push
movs
inc
scas
xor
or
dec
dec
add
into
std
xor
mov
cmp
stos
(bad)
dec
neg
(bad)
xchg
mov
xabort
aad
shl
and
in
adc
sbb
std
out
jecxz
cwde
aaa
mov
pushf
sar
bound
loop
repz
sub
aas
data16
jle
mov
cli
sub
cld
jmp
add
fisubr
shr
das
mov
arpl
in
and
cli
sbb
jmp
push
aas
xchg
sbb
push
lahf
xlat
fwait
cdq
lock
mov
jp
popf
dec
cli
push
in
aas
cdq
push
ret
call
inc
xchg
pushf
sahf
push
cmp
(bad)
inc
jo
rep
iret
jo
pushf
cmp
fnstsw
stos
or
in
scas
mov
stos
lea
in
aam
xchg
sti
fnstcw
(bad)
mov
mov
mov
fild
jbe
imul
jmp
popf
into
xor
push
jecxz
pop
or
aad
shr
jp
sub
and
popa
and
mov
mov
mov
adc
enter
cld
call
pop
test
mov
pop
xchg
jmp
cmps
fsubr
mov
(bad)
pop
xchg
adc
fwait
push
add
js
pop
add
pushf
in
xor
jl
pop
pop
fiadd
adc
mov
aas
leave
sub
shl
xchg
jecxz
mov
outs
in
loope
inc
jae
(bad)
sbb
cmp
sahf
or
xor
pop
movs
adc
fdivr
test
cmp
rol
mov
sbb
rcr
cdq
push
test
jg
out
rcl
in
adc
push
jmp
jnp
stos
xchg
inc
and
lea
aaa
mov
mov
add
int
arpl
and
shl
shl
aad
jne
mov
pop
into
inc
or
in
(bad)
dec
hlt
xor
jmp
fld
mov
sbb
pop
dec
js
sub
in
cmp
les
mov
xor
xchg
test
(bad)
fdivr
jg
jbe
dec
fldlg2
adc
inc
fwait
mov
sbb
inc
or
retf
mov
ss
adc
out
retf
pop
(bad)
mov
je
mov
mov
and
out
push
test
add
jno
jle
adc
xchg
pop
cmp
and
mov
add
test
mov
rcl
nop
jge
lds
add
and
in
dec
sti
test
xchg
std
jne
call
(bad)
mov
cmps
clc
sbb
js
jb
inc
or
inc
or
mov
cli
mov
data16
mov
icebp
mov
add
push
out
jno
push
lods
pushf
inc
jg
add
pop
mov
jmp
xchg
or
xor
call
test
add
sub
test
inc
int3
xchg
xor
andnps
cmp
sti
xchg
mov
test
jmp
sub
inc
adc
mov
movs
jb
ja
aad
cmp
(bad)
mov
sub
addr16
mov
adc
mov
call
dec
xchg
xchg
cmp
lods
shr
xor
addr16
and
ror
jno
movs
cmp
dec
xchg
movs
ins
fucomi
shl
(bad)
push
add
sbb
jle
es
xor
add
mov
pop
jmp
mov
sub
popf
sar
outs
mov
aad
lods
loopne
push
test
ja
xchg
and
mov
inc
xchg
lahf
sti
xchg
add
fsubr
and
sbb
call
add
xchg
in
adc
jmp
int3
mov
xor
hlt
std
inc
lahf
mov
sub
cmp
sbb
sbb
and
fidivr
fwait
sar
cmp
sbb
sahf
mov
xor
add
mov
xchg
xor
mov
add
push
xchg
and
pop
aas
loopne
jg
dec
or
cmp
xchg
and
and
adc
stc
mov
test
jmp
add
lock
xchg
test
call
cmp
add
test
and
push
xchg
mov
fistp
aam
pop
mov
inc
cdq
dec
leave
cmp
in
test
push
inc
repnz
sub
leave
out
mov
fs
test
scas
mov
fistp
or
scas
popf
dec
sbb
push
mov
xchg
mov
dec
cmp
xchg
in
sbb
mov
(bad)
and
fadd
or
sub
iret
xchg
stos
sub
or
aam
cmp
push
mov
jnp
cmp
fisubr
mov
rep
mov
push
and
inc
fs
cmc
int
cs
std
cmc
ds
in
ror
inc
fstp
jnp
in
cmc
das
ret
or
add
clc
add
mov
int
arpl
sbb
imul
adc
or
les
cli
sub
pop
add
sbb
mov
jmp
xchg
cmp
jae
push
clc
adc
or
inc
jns
scas
dec
pop
adc
push
test
into
cdq
fldcw
fdivr
and
ror
std
cmp
sbb
(bad)
mov
and
mov
add
cld
nop
cmovae
scas
ror
icebp
push
pop
in
dec
add
dec
ja
or
add
pop
xchg
out
mov
in
sub
mov
loop
pop
push
adc
xchg
xchg
out
hlt
movs
or
xchg
mov
mov
pop
adc
in
xor
and
mov
cmp
and
or
push
mov
xor
inc
test
dec
xchg
in
xor
jbe
cs
gs
int3
pop
xchg
ins
adc
pop
mov
push
aad
aas
sbb
pushf
iret
sbb
jb
hlt
xlat
ror
pop
fild
retf
enter
(bad)
and
cmps
mov
arpl
add
scas
mov
adc
je
sub
or
outs
scas
or
into
pop
mov
add
mov
pop
ficomp
ret
push
mov
aam
cmp
aam
inc
mov
std
pusha
or
(bad)
jae
into
pop
or
and
out
cmp
jg
std
scas
ficomp
sti
addr16
xchg
lock
and
dec
leave
test
mov
(bad)
dec
xchg
sub
add
rcr
mov
dec
aas
popf
shl
sbb
lea
push
inc
hlt
loop
fnstenv
les
mov
es
les
push
and
or
sbb
push
mov
fst
popf
mov
adc
movs
pop
fcmovu
or
clc
push
inc
dec
mov
mov
pop
mov
jo
mov
ins
out
hlt
loope
mov
mov
dec
(bad)
jp
mov
mov
cwde
and
xchg
aaa
jmp
ja
mov
addr16
cli
je
jecxz
mov
mov
les
adc
mov
and
mov
in
jb
out
push
cdq
push
pop
je
stos
stc
es
fs
call
pop
repnz
add
and
inc
and
adc
mov
(bad)
jp
sub
mov
mov
pushf
les
fcomp
pop
jno
sub
faddp
lods
xor
jmp
adc
mov
xchg
movs
sbb
pop
push
inc
or
in
dec
lea
ficom
es
clc
inc
dec
std
out
outs
and
sub
mov
push
or
xlat
xchg
fscale
adc
jo
stos
scas
(bad)
in
jbe
mov
mov
mov
xchg
(bad)
inc
cdq
or
adc
jp
mul
mov
mov
aad
ins
out
push
mov
call
loope
sbb
gs
mov
aas
jecxz
push
cld
xor
mov
(bad)
mov
jecxz
fsub
std
daa
and
ins
shl
fistp
or
push
retf
mov
cs
xlat
(bad)
nop
outs
lock
cmp
jns
push
out
cli
xor
add
add
(bad)
mov
or
mov
(bad)
xor
dec
and
mov
fsubr
mov
ret
test
xchg
outs
sub
dec
push
outs
pop
pop
(bad)
xchg
mov
call
sbb
mov
xchg
and
sbb
push
xchg
cmc
and
sub
mov
push
sub
jb
xor
neg
xor
lods
mul
inc
(bad)
pop
or
call
mov
clts
jge
lock
push
je
adc
jne
jl
fisub
jecxz
arpl
jmp
inc
out
icebp
jp
fisttp
mov
and
mov
jns
pop
aam
pop
mov
test
dec
dec
hlt
jae
push
push
test
out
and
shl
add
jge
jbe
ja
cmp
cmps
inc
add
xor
maskmovq
test
scas
or
call
jno
sbb
inc
xchg
jne
mov
mov
sbb
dec
and
add
inc
adc
lods
pushf
push
dec
cmp
or
aad
jl
add
std
call
push
jmp
add
pop
xchg
xor
repnz
mov
outs
daa
(bad)
das
test
jnp
sbb
sub
sti
(bad)
daa
inc
jne
and
mov
rol
fs
xor
jb
jns
sbb
push
repnz
loope
fucomip
jmp
jno
mov
fxch
or
dec
jecxz
or
mov
xchg
or
xor
test
jnp
sahf
and
inc
test
inc
(bad)
mov
add
xor
inc
push
dec
in
jg
inc
mov
ins
mov
retf
cmp
pop
mov
and
fist
mov
pop
sub
mov
lods
fstp
mov
movs
imul
sbb
ins
cdq
(bad)
push
stos
out
xor
int3
bound
cmps
cli
jmp
inc
xlat
mov
push
loop
pop
add
adc
mov
xchg
jno
imul
mov
jmp
adc
sub
not
daa
cmp
dec
icebp
out
pop
psubd
and
xchg
mov
imul
out
pop
addr16
pop
sbb
out
mov
or
sbb
inc
cmp
sub
pop
cmp
ret
cmp
jno
loope
and
xchg
aaa
cmps
push
inc
cmp
pop
fnsave
aad
out
inc
popf
push
add
stos
mov
inc
xor
fwait
imul
lods
dec
fwait
outs
gs
out
add
test
je
cmc
or
int
ins
scas
xchg
repnz
std
test
out
dec
pop
(bad)
mov
or
mov
cli
mov
sub
loope
dec
adc
into
jge
es
and
mov
invd
push
(bad)
out
or
inc
pop
ror
into
mov
pushf
inc
or
out
mov
retf
mov
lods
(bad)
popf
push
sub
dec
ret
add
movs
lock
call
xor
cmps
icebp
retf
aas
(bad)
ja
jne
std
mov
xor
sbb
outs
fdivr
ds
jb
pop
add
mov
fidiv
inc
jecxz
push
fistp
adc
fiadd
gs
push
add
jle
mov
mov
pop
mov
mov
retf
cld
(bad)
pushf
in
into
in
xchg
dec
je
sub
ds
adc
repz
inc
lods
push
xchg
jne
loopne
push
popf
jno
pop
cmps
xchg
fwait
cmps
jno
lea
leave
sbb
repnz
and
in
inc
aam
push
inc
mov
cdq
repnz
gs
popf
push
ins
inc
inc
mov
mov
repz
hlt
inc
test
mov
in
cmc
hlt
add
cwde
mov
sbb
and
push
cs
popf
jne
in
add
fisttp
lock
(bad)
push
dec
mov
mov
cmp
mov
cmps
inc
leave
test
mov
fsubr
inc
jo
or
(bad)
jecxz
xchg
add
pop
jl
jo
retf
jnp
clc
call
and
xchg
test
fucomi
or
push
cdq
mov
xchg
cmp
and
sbb
ret
fiadd
adc
push
inc
cs
pop
and
push
in
mov
call
test
jne
cmp
movs
repnz
push
inc
shl
mov
jns
dec
push
test
dec
or
scas
iret
rcl
add
jg
xor
out
push
je
in
mul
fsubrp
lds
adc
hlt
aas
xchg
dec
or
data16
inc
lods
pop
adc
fisubr
pop
inc
loope
push
mov
aaa
inc
mov
pop
not
mov
pop
ror
and
or
mov
test
xor
adc
out
adc
aam
inc
das
cmp
clc
shr
ja
dec
popf
movs
adc
pop
ss
aaa
out
inc
out
sub
jmp
and
gs
jno
xor
adc
push
retw
fxch
bound
or
add
mov
les
mov
js
dec
cwde
mov
lea
or
enter
push
pop
lds
mov
cwde
xchg
or
push
scas
cmp
mov
lahf
(bad)
xor
sbb
jb
xchg
and
mov
xor
dec
ret
mov
push
pop
sub
jl
ins
ret
ins
idiv
int
pop
sub
mov
jge
sub
jecxz
push
stos
test
xlat
fwait
cmp
outs
outs
or
push
mov
xlat
les
(bad)
push
pop
lock
fist
repz
adc
adc
lea
mov
rol
jae
lods
or
push
xor
scas
and
(bad)
push
push
lds
addr16
lods
dec
lods
cmp
fbstp
jmp
into
fmul
add
bound
in
sahf
loop
cli
jecxz
ret
add
loop
retf
cmps
dec
push
in
xor
jmp
sbb
and
mov
mov
jae
and
cmc
je
jg
shl
outs
popa
mov
adc
mov
out
dec
cdq
adc
shl
mov
push
icebp
loop
int3
inc
ss
rol
jmp
add
fistp
and
sbb
cs
dec
jno
scas
hlt
stos
push
cmps
push
push
mov
mov
jb
mov
inc
es
pop
ret
cmp
mov
inc
xchg
push
sbb
shr
xor
rol
push
ins
dec
jae
adc
inc
ins
or
adc
fdivr
adc
(bad)
xchg
sub
shr
jne
or
and
mov
jecxz
out
out
sti
pushf
pushf
ror
retf
sbb
xchg
pop
call
cmp
sub
and
inc
push
pop
and
enter
aad
cmp
xchg
dec
jns
daa
aam
retf
out
pop
pop
movs
inc
test
aaa
test
pop
jne
in
(bad)
fisub
dec
ret
sbb
lods
pop
mov
imul
sub
fs
hlt
rcl
in
fcmovbe
inc
cmps
pop
ins
push
ror
js
ror
(bad)
mov
jmp
outs
jmp
add
push
pop
dec
fisttp
inc
jl
aas
sub
push
lea
mov
add
add
das
scas
sub
ret
or
lods
mov
mov
mov
mov
stos
xchg
(bad)
ins
(bad)
cmps
cwde
int
or
sahf
dec
jle
fidiv
fwait
out
aam
add
(bad)
enter
aam
push
cs
das
mov
loopne
je
out
xchg
pop
pop
fdivr
enter
mov
jnp
pushf
push
ss
inc
xor
mov
clc
es
shl
shr
ds
cmps
jno
mov
fs
je
cmp
imul
sbb
(bad)
adc
out
mov
jmp
pop
xchg
push
adc
out
movs
mov
lea
cwde
pop
push
dec
es
mov
(bad)
and
fadd
out
lahf
jbe
inc
test
iret
pusha
scas
lods
mov
xchg
aaa
fldcw
mov
mov
xlat
loope
xchg
sti
ds
jns
popf
push
dec
mov
xchg
aaa
fidivr
retf
inc
out
adc
add
mov
lds
adc
je
and
loop
faddp
ins
shl
sub
mov
mov
mov
xchg
mov
fmul
test
or
pop
pop
sub
sahf
xor
or
fcom
outs
les
sbb
cmp
ins
loop
mov
xor
cmp
sbb
ds
ins
test
add
or
xor
sbb
icebp
pop
div
pop
(bad)
icebp
inc
and
mov
retf
pushf
je
sub
push
mov
inc
inc
fild
jne
dec
or
push
daa
dec
push
or
lods
mov
cmc
retf
and
dec
add
push
cmp
adc
outs
hlt
adc
mov
jns
fwait
pop
ja
retf
aas
add
mov
daa
add
sbb
sahf
jecxz
aam
xor
cmp
lods
and
rcr
(bad)
xchg
pop
sub
jb
dec
test
ret
push
xor
xlat
push
and
cmps
push
adc
test
iret
ret
mov
or
xor
je
(bad)
ds
inc
push
jb
test
shl
std
or
scas
sbb
sar
stc
adc
sbb
sahf
sub
cmp
add
mov
arpl
nop
or
adc
pop
cdq
adc
sbb
xchg
inc
out
and
ds
loope
cmp
add
jnp
mov
mov
xor
push
loop
jmp
leave
and
or
mov
push
adc
xor
nop
fiadd
in
scas
inc
or
call
mov
in
mov
mov
mov
retf
popf
jmp
es
jo
mov
sub
in
cmp
popf
inc
cs
adc
mov
jns
test
mov
popa
enter
jo
or
mov
sar
sbb
push
arpl
sbb
icebp
add
daa
xchg
xchg
adc
in
add
xor
retf
adc
sbb
and
mov
(bad)
add
cs
cli
shl
mov
adc
mov
clc
xor
outs
and
jmp
adc
push
mov
sti
mov
xchg
movs
in
cmp
mov
cmp
fadd
sub
cmp
jne
shr
mov
ss
loope
jmp
lods
loopne
cmp
lea
xchg
sbb
in
and
in
jmp
shr
in
cmp
push
pop
mov
mov
pop
jbe
push
mov
mov
repnz
int3
mov
icebp
and
jb
std
or
mov
or
lods
and
sbb
int
xchg
lds
fcomp
lds
and
inc
mov
mov
push
dec
mov
and
xor
push
pop
xchg
in
sub
inc
popa
movs
test
adc
xchg
(bad)
aam
(bad)
adc
fild
lods
sbb
pop
mov
mov
leave
add
fmulp
ss
pop
mov
outs
pop
fcmovb
in
clc
sub
inc
add
mov
sbb
data16
adc
arpl
push
add
fmul
int3
and
(bad)
pop
cmps
mov
or
mov
sub
mov
pop
mov
add
push
mov
leave
jmp
inc
or
mov
add
imul
jmp
mov
mov
sahf
pop
fimul
int
enter
fs
and
int
pop
mov
cld
popf
and
es
mov
cmp
pop
xor
(bad)
in
xor
and
fldl2e
sbb
mov
out
mov
jne
inc
mov
ins
retf
dec
push
mov
scas
mov
xchg
inc
addr16
into
jle
loopne
inc
or
and
jno
pop
cs
push
xor
jge
sbb
imul
sub
imul
pop
(bad)
(bad)
sbb
push
xor
cmps
outs
shl
(bad)
int3
outs
ror
jae
sub
ins
jp
push
icebp
addr16
imul
and
loope
pop
sbb
jae
mov
into
inc
aam
jge
mov
xchg
and
adc
jle
or
loopne
add
xchg
pop
mov
pop
mov
dec
mov
test
out
xchg
dec
jns
mov
add
sub
pop
adc
push
pop
adc
fs
pop
xor
cmp
jmp
cmp
pop
pushf
icebp
adc
sub
mov
cdq
call
jmp
sub
dec
jg
dec
mov
mov
std
ret
push
sbb
mov
cmps
ja
fisttp
cmp
xor
and
jbe
add
push
inc
xchg
popf
call
sbb
dec
sub
mov
pop
mov
mov
stc
ja
inc
and
ret
dec
jbe
das
movs
sbb
(bad)
add
push
dec
outs
cmps
cwde
inc
mov
shr
pop
push
(bad)
rcl
aam
popa
daa
xor
dec
ins
inc
iret
jge
imul
pop
ins
push
outs
scas
and
aaa
adc
fwait
pop
or
je
mov
hlt
mov
push
mov
dec
pop
cmp
pushf
dec
mov
cmp
push
int
xchg
xchg
jg
sbb
xchg
sub
ret
fld
add
nop
lods
xor
inc
stc
test
and
or
add
cmp
imul
retw
jmp
mov
adc
pushf
cmp
hlt
xchg
pop
and
cmovae
stc
ret
je
data16
imul
or
sahf
adc
adc
in
aas
arpl
aam
addr16
outs
stos
dec
dec
daa
add
add
out
clc
lods
jae
and
ret
int3
out
jo
mov
out
fsub
or
cmp
int3
fist
movs
sbb
and
push
aaa
daa
scas
(bad)
and
pushf
aam
fild
mov
cli
cmp
xchg
and
in
repnz
imul
(bad)
sub
icebp
ret
mov
pop
xchg
mov
mov
xor
mov
sbb
aaa
(bad)
cs
pop
lods
pop
sbb
push
push
pop
jle
shl
arpl
jmp
cmp
add
dec
jmp
jo
push
mov
sub
movs
stc
sub
dec
arpl
es
dec
les
cmp
xchg
outs
xchg
jecxz
adc
neg
jne
into
pushf
test
push
sbb
cmps
nop
call
mov
(bad)
scas
sbb
call
lahf
daa
sbb
idiv
or
add
add
mov
xor
push
mov
inc
dec
pop
push
fisttp
pop
pop
mov
in
(bad)
cdq
outs
rcl
push
les
push
(bad)
int
cmp
sub
xchg
mov
cmp
sub
cli
xor
ror
es
mul
jl
sar
movs
or
sub
ror
jmp
(bad)
pop
das
cmp
push
in
sbb
lock
jl
call
mov
stc
es
xchg
sti
pop
fbld
in
dec
mov
fistp
jl
inc
and
inc
push
ror
inc
push
lds
and
lahf
ss
inc
pop
pop
(bad)
test
and
int
sbb
push
inc
fild
add
fisubr
sub
xor
push
push
adc
test
out
(bad)
jecxz
dec
adc
mov
out
sar
repnz
test
test
xchg
pop
jmp
xchg
sub
xchg
rol
aas
xor
in
push
mov
cmp
cli
xchg
push
ss
mov
cmp
sahf
xor
mov
scas
pop
adc
cdq
xchg
xchg
xor
pop
cdq
test
imul
jle
pop
mov
sar
aad
xor
mov
push
jecxz
daa
adc
pushf
mov
retf
dec
call
in
or
out
sbb
scas
aam
xchg
lods
mov
push
push
sbb
(bad)
mov
pop
in
mov
ror
adc
stos
ss
jg
fwait
inc
aaa
sti
cli
movs
mov
stc
xchg
xchg
icebp
enter
loope
jle
shl
mov
mov
push
imul
test
mov
out
loope
nop
jae
cmp
mov
rcl
xchg
inc
mov
push
ins
add
push
js
jl
adc
push
lods
xor
nop
sbb
movs
sti
jp
jns
das
push
push
cld
dec
or
mov
mov
sub
sub
test
mov
test
xchg
inc
push
fdiv
test
sahf
xchg
xchg
and
jnp
xlat
shl
out
push
popf
imul
pusha
out
sar
inc
push
dec
jle
dec
push
jae
jo
or
aad
test
inc
add
lods
mul
in
lock
aam
lods
or
out
call
mov
pop
jo
js
cdq
fist
jmp
pop
sub
sti
jae
pop
dec
jl
loopne
cmps
and
adc
push
dec
enter
jg
mov
and
ja
dec
mov
jae
and
sbb
and
or
daa
mov
mov
test
mov
rcl
addr16
pop
cmps
mov
jae
xor
stos
(bad)
jle
mov
mov
pop
ss
mov
lahf
(bad)
push
hlt
push
daa
add
inc
mov
gs
and
clc
outs
push
fsub
dec
stc
retf
xor
jne
cli
cmp
pushf
xor
adc
mov
inc
xor
data16
neg
int3
dec
ret
cmp
addr16
or
sti
enter
mov
push
shl
test
scas
adc
repz
daa
test
mov
pop
aaa
fsub
call
pop
and
sub
pop
mov
inc
aaa
cmps
neg
push
mov
xchg
test
lds
jp
mov
add
add
rcr
clc
repnz
pop
inc
das
lea
adc
rcr
and
jecxz
mov
rol
fwait
xchg
xlat
loop
mov
mov
or
inc
adc
mov
xor
not
mov
xchg
ins
mov
int3
sub
fs
sbb
(bad)
jmp
sbb
leave
mov
xchg
(bad)
jne
mov
es
push
rol
add
daa
sub
mov
repnz
lock
push
adc
push
inc
iret
cmps
ret
lds
mov
mov
test
rcl
fwait
add
rol
outs
pop
stos
outs
xor
pop
and
retf
dec
int3
fnstenv
mov
test
gs
sahf
mov
sar
adc
add
cmps
lea
imul
dec
and
fmul
adc
fist
adc
xchg
rsm
out
and
je
sahf
dec
xlat
ss
clc
pop
or
xchg
dec
lds
das
pushf
xlat
xchg
shr
add
jno
cmc
test
repnz
daa
cmp
mov
iret
arpl
jnp
pusha
cmps
rol
cli
dec
aad
cmc
mov
adc
and
fnstsw
daa
cmp
inc
mov
adc
inc
xor
out
dec
popa
push
cmps
inc
push
arpl
and
ret
xchg
data16
mov
pop
dec
inc
adc
test
mov
mov
lock
adc
or
les
push
or
int
imul
loop
jecxz
push
cmp
xchg
pop
inc
test
add
dec
cs
mov
cli
ret
jmp
pop
jb
xor
iret
cld
sbb
call
or
stc
jge
je
bound
lods
retf
loop
mov
cmp
mov
dec
sbb
jg
movs
ins
out
aaa
jp
rcr
scas
mov
ins
sub
jp
sbb
add
mov
sbb
shl
outs
in
add
jns
inc
leave
imul
sbb
mov
cmps
inc
and
loope
cmps
xchg
repnz
add
cdq
repz
nop
xchg
pop
hlt
mov
push
mov
or
shr
inc
retf
pop
stos
and
cwde
popa
dec
ret
scas
cli
lods
push
hlt
cs
ins
push
sti
lea
inc
dec
dec
in
dec
cmp
cwde
mov
sbb
rol
(bad)
and
sub
mov
jecxz
mov
dec
dec
xor
in
(bad)
test
bnd
js
adc
daa
hlt
add
add
outs
inc
mov
lahf
outs
xchg
cmp
into
and
mov
call
pushf
adc
test
and
ret
inc
mov
rcr
xchg
jp
into
and
leave
imul
test
mov
add
mov
add
popa
test
(bad)
outs
add
sub
inc
dec
ds
pop
inc
(bad)
pushf
dec
stos
xchg
xchg
scas
or
cli
lods
push
mov
es
test
and
retf
lea
not
cmp
cmp
into
jns
adc
stos
cmps
into
jbe
pop
out
mov
mov
pop
jne
pop
add
arpl
test
test
sbb
(bad)
aad
or
ja
in
(bad)
jp
into
mov
or
int
(bad)
inc
shr
aaa
sar
add
sub
icebp
cmp
test
add
sub
shl
jmp
imul
push
push
mov
cmps
fadd
pop
mov
xor
cmc
jne
cwde
call
cmp
push
or
xor
pop
mov
shr
sbb
cli
or
sub
lods
cmps
add
shl
jp
jmp
push
stc
xchg
pop
out
rcr
mov
imul
adc
nop
mov
je
mov
out
adc
(bad)
mov
dec
cdq
mov
or
cmp
scas
ret
xchg
retf
xor
outs
ror
sub
stc
movs
or
inc
xchg
lds
fxch
fiadd
ret
enter
stc
(bad)
js
hlt
aaa
mov
lods
jne
rcl
ffreep
push
sbb
cli
push
icebp
or
xor
xchg
jmp
adc
movs
or
xchg
push
cs
(bad)
in
dec
or
jp
enter
fild
ja
aam
lea
or
mov
popa
call
inc
add
fldl2t
cmp
dec
mov
inc
call
push
pop
inc
rol
imul
imul
mov
fild
outs
dec
push
data16
and
jmp
inc
imul
cmp
xchg
add
inc
sbb
(bad)
push
pop
sbb
popf
out
xchg
in
scas
mov
retf
cld
test
jae
idiv
mov
mov
dec
sti
aad
(bad)
int
dec
ins
adc
push
or
je
xor
ja
sbb
xor
ja
das
cmps
mov
jge
sbb
jnp
sub
out
pushf
push
mov
stos
ret
inc
cmp
test
xor
pop
jno
mov
or
pop
pop
jle
push
mov
loop
mov
and
adc
int3
loope
mov
(bad)
cdq
adc
iret
movs
inc
xchg
aam
sbb
icebp
mov
mov
jo
mov
mov
ins
sub
xchg
inc
aad
sahf
add
mov
sub
shl
(bad)
xchg
cmp
xor
sub
add
pushf
sub
pop
je
jecxz
mov
rcl
rol
jg
int
xor
xor
iret
mov
repz
mov
repz
js
add
cmps
dec
arpl
popf
fcom
adc
push
sub
inc
mov
(bad)
adc
retf
jns
into
push
jmp
or
das
mov
push
loope
js
add
adc
mov
mov
in
arpl
jg
je
adc
mov
fadd
sbb
inc
sub
cmps
call
lea
mov
pop
mov
mov
cmp
ds
nop
fstp
fild
lahf
popa
lds
std
lea
inc
scas
fcomp
call
icebp
les
sub
cmp
ret
call
inc
daa
jnp
imul
neg
mov
iret
fnstsw
mov
pop
pop
loopne
add
sub
inc
jmp
(bad)
stos
aaa
jns
sbb
cwde
popf
ret
cmp
sbb
sahf
in
cmp
mov
pop
popf
lahf
xor
push
pop
in
xor
mov
adc
pop
scas
arpl
xchg
aam
enter
sbb
sub
xor
mov
adc
ins
cmps
pop
mul
hlt
jbe
mov
in
sub
mov
and
sahf
outs
shl
sub
int
nop
(bad)
xor
adc
nop
mov
jecxz
push
fiadd
jp
pushf
lock
mov
push
mov
dec
lds
push
stos
mov
mov
sbb
adc
mov
sbb
push
mul
inc
loopne
add
jl
mov
jmp
sbb
jecxz
dec
jp
cmp
and
and
sbb
fs
sar
jmp
jmp
sbb
push
outs
ins
sbb
es
sbb
call
clc
cld
pop
add
sub
mov
add
dec
mov
fcmovnu
add
in
popf
rcl
stos
pop
test
mov
cli
hlt
jno
push
adc
cmc
mov
adc
add
or
into
icebp
mov
jbe
test
ins
(bad)
fiadd
fsub
xchg
jmp
jmp
popa
dec
or
in
jmp
add
sbb
clc
out
dec
or
mov
mov
push
js
pop
add
rcr
ss
outs
sbb
test
rcl
out
sub
retf
xchg
pop
cdq
and
mov
rcl
jge
ret
stos
xor
xchg
sub
dec
xchg
inc
cmp
clc
xchg
mov
or
cmps
mov
inc
les
lods
clc
and
xor
inc
cmp
jl
xor
mov
aaa
adc
loopne
adc
sub
aas
pop
popa
jnp
hlt
xor
add
mov
gs
jns
loope
xor
aas
fst
xor
inc
imul
test
mov
jge
cdq
push
ror
(bad)
dec
mov
cld
test
adc
fisttp
pop
jmp
outs
aaa
jp
fcmovnbe
ficomp
sbb
pop
push
pusha
pop
mov
ins
adc
rol
xchg
push
sbb
ins
test
xchg
sbb
sahf
mov
loop
movs
mov
shl
fld
push
xchg
ret
test
or
sub
cmp
xor
xor
stos
sub
inc
cli
ins
add
mov
enter
imul
fwait
aam
imul
xchg
mov
mov
lods
cs
and
dec
ret
ror
xor
ret
or
pop
lds
cmp
fdivr
xor
jno
fimul
mov
jmp
push
adc
(bad)
fs
ret
daa
call
fucompp
ret
test
adc
dec
push
neg
mov
xlat
or
cld
ret
test
clc
aaa
pop
xor
mov
repnz
xor
mov
in
das
or
and
add
or
pop
jmp
or
mov
mov
or
inc
and
mov
adc
stos
add
imul
ficomp
sub
xchg
mov
adc
sbb
repz
push
fidivr
dec
gs
gs
retf
imul
ret
xchg
sti
or
retf
jmp
cmc
dec
push
cmps
call
and
es
sub
jb
(bad)
jmp
push
(bad)
sub
lods
cli
push
jb
shr
xor
or
sti
dec
movs
push
mov
test
or
ret
or
and
fs
jno
retf
jo
adc
cwde
add
dec
out
xchg
pop
push
lds
xchg
shr
dec
retf
aaa
repz
movs
xor
mov
repnz
mov
xor
repz
loop
into
cmp
add
xor
mov
mov
push
hlt
movs
and
xchg
jmp
mov
or
dec
mov
aad
mov
imul
jae
mov
rol
jl
rcr
inc
fwait
push
xchg
pop
mov
hlt
cmp
loop
arpl
movs
call
icebp
dec
sub
sti
gs
pop
(bad)
fs
scas
movs
mov
popa
jle
pop
or
adc
xor
mov
xor
repz
sbb
arpl
shl
jb
cwde
ins
jnp
enter
cmp
lock
and
rcl
jl
sar
push
jp
arpl
popw
(bad)
retf
test
test
xlat
(bad)
imul
cmp
push
movs
and
add
cmp
std
bound
mov
xor
in
pop
mov
or
pop
xor
cli
iret
cdq
test
mov
bound
sar
add
div
pop
add
(bad)
es
jecxz
aaa
nop
(bad)
(bad)
cmp
(bad)
fild
ret
test
cmps
int3
fdivr
bound
jo
push
fiadd
add
loope
rep
bound
(bad)
retf
in
mov
lods
pop
jmp
cmp
sub
sbb
icebp
aaa
stos
mov
xor
cmp
mov
icebp
fsub
fsubr
xchg
or
sbb
enter
mov
sub
or
hlt
jnp
inc
enter
sub
jo
add
mov
lods
fsubp
lea
in
es
ret
std
enter
or
aas
mov
test
call
and
pop
xchg
fisttp
push
and
add
aam
ret
ins
inc
inc
jb
sub
out
sub
icebp
cmp
aam
cmc
dec
mov
dec
fist
call
and
jno
or
(bad)
mov
xor
push
hlt
cmp
(bad)
inc
mov
in
add
popf
inc
dec
ror
sbb
xor
mov
es
imul
aas
outs
(bad)
jne
stos
cmps
ds
jp
or
push
iret
mov
or
bound
pop
xchg
rcr
(bad)
and
outs
aam
out
jle
mov
ret
leave
(bad)
stc
add
inc
lds
mov
out
ret
stos
in
jg
aad
add
pop
sbb
mov
jecxz
lods
fcom
jbe
push
pop
loopne
not
loopne
mov
xor
cmp
mov
dec
loopne
scas
or
lods
jae
cmp
mov
pmovmskb
imul
test
test
clc
pop
in
test
imul
adc
mov
add
xlat
(bad)
mov
sub
ror
and
pop
lds
push
pop
movs
push
or
int
jge
repnz
push
or
es
lock
imul
mov
fs
and
outs
dec
retf
mov
pop
daa
neg
std
(bad)
dec
int
in
pop
xchg
iret
ficomp
sbb
jge
inc
arpl
fs
xchg
xchg
sar
sbb
mov
not
mov
mov
into
cmp
aas
jmp
jmp
jno
cli
movs
enter
(bad)
gs
sbb
cmp
vmovaps
xchg
mov
lds
les
xor
or
test
mov
sbb
inc
test
repz
mov
mov
stos
sub
stos
push
jmp
outs
(bad)
loopne
in
imul
lods
jp
push
in
adc
xor
mov
ja
add
xor
leave
ret
push
sahf
loope
stos
push
hlt
pop
das
jo
mov
and
leave
stos
dec
aaa
and
xor
xor
addr16
xchg
push
loopne
push
movs
mov
push
(bad)
sub
sub
push
sub
daa
mov
sahf
pop
shl
xor
outs
les
jne
stos
fisubr
cmps
in
mov
ins
push
push
ja
sar
daa
xchg
mov
push
aas
jmp
jae
data16
jb
imul
xchg
dec
push
jb
add
sbb
or
jecxz
and
pop
stos
sar
outs
fnstsw
pop
mov
fnstsw
pop
pop
and
sbb
dec
pop
iret
sti
xlat
xchg
mov
shr
pop
mov
xchg
and
sub
outs
ret
pop
xlat
jnp
pusha
pop
jp
inc
jns
adc
fmul
out
rcl
mov
out
xor
xchg
pop
rcl
cmp
loope
pop
icebp
(bad)
jae
fistp
retf
xor
pop
xchg
enter
sub
jb
icebp
sbb
mov
leave
xlat
mov
cmp
lea
jecxz
jae
ret
pop
jle
inc
sub
mov
and
push
inc
sbb
sbb
mov
hlt
fmul
or
out
push
sub
popa
daa
inc
das
call
addr16
xlat
dec
xchg
mov
inc
mov
sbb
cld
cmp
out
mov
clc
fisttp
aad
dec
xchg
hlt
adc
pop
adc
int3
xor
sbb
or
icebp
stc
sbb
mov
in
xchg
clc
in
dec
inc
out
es
push
cmp
push
(bad)
aad
sbb
push
ret
sbb
iret
inc
scas
mov
push
out
scas
mov
bound
rol
out
test
jnp
pop
sbb
iret
push
les
mov
neg
xchg
sub
sub
mov
jo
in
into
aas
pop
inc
in
push
in
inc
jbe
cdq
sahf
scas
fwait
mov
inc
(bad)
add
jmp
arpl
addr16
and
or
rcr
int
dec
int
dec
out
sti
cwde
ins
xchg
stc
and
call
fs
push
dec
adc
ss
fst
and
adc
jae
(bad)
out
xchg
js
xor
jmp
cdq
(bad)
int
movsx
repz
jp
ret
xchg
mov
loopne
clc
sub
sbb
xor
aam
push
bound
mov
push
sahf
ins
test
ret
fstp
push
and
inc
out
xchg
loope
gs
popf
adc
arpl
mov
mov
xor
lods
call
inc
frstor
sbb
test
sub
ins
push
add
push
repnz
xchg
test
dec
jne
aam
jp
and
fwait
gs
loopne
dec
push
pop
pop
fidivr
cdq
pusha
dec
ds
loopne
mov
adc
xchg
cmp
jae
jo
bound
pop
cmp
retf
aas
mov
aaa
popf
cwde
cdq
repz
inc
ror
inc
sub
cdq
stc
jmp
pop
test
pop
in
nop
add
arpl
xlat
push
mov
std
jmp
and
xor
shl
sbb
sbb
ss
fwait
pop
ret
pop
pop
sub
xchg
cld
iret
js
(bad)
lods
inc
fcmovbe
les
jmp
out
xchg
cmp
push
jne
test
push
jno
sbb
retf
push
cs
sub
sub
ins
fdivr
push
test
sbb
jbe
and
je
pop
loope
in
sbb
mov
push
jbe
(bad)
jle
outs
inc
pop
mov
adc
adc
ins
fstp
sbb
push
pop
test
lods
push
stos
popa
jae
inc
mov
neg
cmp
push
jnp
jne
test
mov
ins
fistp
push
xchg
mov
stos
mov
jecxz
repz
mov
pop
dec
mov
hlt
clc
cmp
aas
xor
sbb
in
mov
dec
pop
int3
dec
push
leave
sub
and
aam
iret
or
addr16
ror
sbb
ins
sti
imul
les
data16
inc
(bad)
in
fistp
scas
mov
sub
data16
rcl
pop
pop
cmp
dec
inc
and
dec
(bad)
(bad)
sbb
sub
and
and
leave
(bad)
fmul
je
lea
enter
or
clc
pop
movs
ins
sub
and
retf
(bad)
mov
mov
iret
and
xor
dec
dec
test
jnp
aam
inc
jns
add
into
outs
lock
retf
sar
nop
arpl
pop
test
push
mov
scas
and
xlat
out
jo
out
mov
or
sub
popf
xchg
scas
out
movs
das
and
dec
repnz
xor
push
xchg
push
aas
push
rcr
sbb
xchg
add
dec
xor
or
sub
push
je
push
lahf
mov
sub
cdq
fldenv
je
mov
in
jne
inc
(bad)
in
cmp
jecxz
adc
xchg
call
dec
pop
jecxz
or
mov
xchg
mov
mov
dec
jne
mov
popa
rcr
mov
scas
jp
mov
adc
cld
inc
jmp
movs
or
mov
push
dec
dec
mov
fst
mov
addr16
fstp
dec
ins
mov
sbb
out
cmc
pop
(bad)
pop
or
test
ss
sub
jl
dec
packuswb
push
call
addr16
sub
push
pop
and
stos
fcmovnbe
adc
sub
xlat
jge
stos
add
xchg
inc
cli
xlat
fcomp
jp
adc
stc
repz
mov
jmp
ja
and
xlat
repz
mov
add
lea
mov
stos
cmp
dec
sbb
add
sti
das
(bad)
xchg
arpl
mov
nop
dec
jecxz
rol
setg
fbstp
(bad)
sbb
push
mov
xchg
aas
add
in
or
xor
movs
retf
xchg
je
pop
leave
pop
push
sub
std
pusha
repz
shl
(bad)
out
imul
mov
jle
dec
mov
es
into
mov
iret
scas
pop
push
mov
stos
iret
inc
shr
and
or
mov
arpl
sbb
loope
data16
mov
fsubr
jbe
cmps
pop
sbb
xchg
arpl
icebp
into
adc
div
pop
inc
pop
call
mulps
inc
jbe
scas
fstp
jmp
jnp
ficom
not
inc
lods
inc
inc
lock
lock
(bad)
sub
inc
ins
mov
push
pusha
icebp
mov
adc
movs
add
sar
int3
add
inc
and
xor
mov
cdq
popa
push
sbb
sbb
repz
jl
dec
mov
xchg
or
xchg
test
clc
in
jl
jmp
lgs
xor
iret
ror
lea
xor
push
enter
call
icebp
xor
fmulp
and
out
aas
fnstsw
stos
jmp
stos
iret
dec
mov
inc
test
aam
test
dec
mov
mov
ins
adc
fiadd
dec
iret
push
push
mov
dec
fwait
ss
fisubr
les
pop
and
xchg
jmp
outs
in
icebp
mov
hlt
inc
ja
pop
ds
aaa
dec
rol
mov
push
out
out
mov
mov
inc
mov
mov
mov
fsub
pop
sar
push
(bad)
push
jmp
enter
xchg
ins
pop
mov
pop
lock
imul
jbe
cmp
or
aam
test
mov
cld
ins
push
mov
popf
cmp
cmps
gs
pop
imul
pushf
cmp
cdq
cmp
popf
dec
mov
pop
add
repz
mov
lods
xor
xlat
cmps
mov
jmp
push
(bad)
aad
pop
inc
call
mov
xor
push
push
sub
sub
cdq
cmp
sub
cmp
mov
aas
ror
mov
loop
dec
pop
jmp
push
jno
lock
cmp
inc
sahf
and
add
or
add
sub
dec
jae
xor
and
out
sbb
sahf
mov
mov
mov
js
and
arpl
lods
retf
out
cmp
adc
cli
test
mov
rcr
fnsave
fst
and
rcl
xor
bound
mov
out
or
test
les
xchg
icebp
loop
out
in
cs
(bad)
ss
pop
jnp
and
loope
retf
jge
xchg
push
push
test
lds
adc
out
mov
in
dec
add
nop
ret
sbb
cmp
xchg
dec
xchg
iret
add
in
dec
mov
loop
jns
mov
dec
inc
enter
push
inc
mov
pop
(bad)
dec
iret
neg
xchg
int
fild
pusha
push
loop
dec
mov
clc
dec
ja
cwde
cmp
pushf
scas
mul
cwde
or
and
mov
sbb
in
mov
sub
xchg
ds
push
xor
jmp
cld
sbb
inc
imul
je
stos
xor
add
ss
outs
cld
fdivrp
xchg
dec
or
aad
push
into
mov
sahf
add
pop
ret
fsubr
js
inc
add
push
sbb
sub
pop
mov
ja
jnp
fdiv
aam
pop
push
add
shl
mov
push
pop
cs
sbb
jnp
repnz
sbb
enter
fidiv
out
push
sbb
sbb
pop
in
test
ins
sbb
ror
das
loopne
inc
jecxz
adc
int
ret
xor
sub
or
in
(bad)
pop
push
mov
sub
mov
hlt
adc
mov
(bad)
sub
sub
pop
aaa
aaa
adc
mov
stos
ins
bnd
xchg
mov
outs
push
iret
dec
in
mov
fnstenv
inc
adc
scas
xorps
loopne
addr16
ins
scas
mov
xor
aaa
inc
stos
out
test
or
in
int3
xchg
cmps
ja
pop
popa
popf
adc
sub
(bad)
xchg
xor
jge
in
fiadd
rcr
inc
mov
out
std
test
push
in
xlat
aad
sub
lds
pusha
add
mov
test
popa
ret
cld
xchg
std
or
adc
push
push
lahf
and
lock
mov
push
push
repz
(bad)
lods
add
add
cmp
jnp
hlt
imul
cmp
add
imul
adc
mov
je
or
pop
fist
sbb
pop
pop
mov
daa
push
dec
scas
div
jg
push
rcl
stos
repnz
(bad)
xor
lock
cmps
add
call
out
pop
aam
icebp
(bad)
mov
bnd
das
add
js
lds
mov
dec
test
gs
jbe
sbb
mov
lods
inc
push
xor
push
mov
aad
movs
rol
adc
hlt
ds
lds
repnz
int
mov
les
pop
(bad)
in
fwait
movs
test
xchg
xchg
sub
jl
cmp
stc
stc
inc
scas
mov
dec
pusha
dec
test
in
jmp
cmp
(bad)
imul
popa
inc
mov
dec
in
dec
(bad)
dec
cwde
bound
or
push
lock
pop
repnz
pusha
or
aad
pop
xor
mov
push
aas
shr
mov
xchg
sub
pop
enter
pop
adc
mov
or
add
adc
in
mov
not
push
cwde
sbb
out
les
gs
out
dec
mov
imul
into
imul
gs
ret
mov
xor
shl
push
jp
repnz
adc
loopne
or
jb
shl
mov
and
stos
dec
mov
in
jno
cmc
bound
test
addr16
je
and
popa
lods
cmp
add
cmps
and
mov
mov
retf
and
ins
or
pushf
aam
add
out
test
aam
ror
int3
shr
pusha
cld
cmp
jbe
adc
cld
outs
dec
mov
dec
inc
jno
imul
pop
xchg
push
pusha
enter
adc
(bad)
mov
mov
(bad)
or
mov
adc
fs
and
out
inc
and
push
pop
xor
aam
stc
or
outs
fistp
push
mov
cmps
mov
out
cmp
enter
inc
(bad)
dec
push
push
rcl
xor
and
call
sub
inc
stos
repz
mov
fld
inc
add
(bad)
stc
mov
and
fidivr
dec
cs
dec
fdivr
adc
adc
sahf
nop
pusha
icebp
pop
aam
fcmovnb
or
adc
pushf
adc
or
lea
add
rcl
mov
mov
data16
scas
jae
push
fistp
ds
test
in
je
push
fdivr
scas
jnp
ins
movs
fs
inc
xchg
xchg
dec
sub
pusha
push
dec
sbb
movs
ins
pop
popa
int3
sub
icebp
hlt
mov
in
inc
dec
or
lock
clc
adc
sub
js
cld
(bad)
addr16
out
sub
mov
and
ins
or
repnz
cmc
ficom
xor
jno
test
(bad)
jmp
int
adc
les
sub
pop
out
pop
(bad)
mov
in
pop
adc
jp
xor
pop
xor
xor
xchg
or
xor
and
xor
shr
sahf
retf
cmp
sar
int
fistp
loop
in
adc
(bad)
or
pop
dec
les
pop
cmp
adc
pop
ins
mov
stc
mov
push
call
mov
sub
aas
xor
mov
push
(bad)
cmp
jl
out
mov
adc
shl
ins
popa
cmps
pop
ret
outs
adc
mov
rcr
mov
std
test
and
dec
ret
xlat
jmp
stos
ins
xor
pushf
xlat
(bad)
call
mov
sbb
enter
lods
test
aad
ficomp
fidiv
daa
fsub
fwait
(bad)
hlt
mov
scas
xor
or
and
loope
xchg
pop
xor
xchg
fcom
inc
push
cmp
jae
sar
fucomp
jmp
cmc
jmp
mov
sbb
mov
dec
out
fucomip
popf
and
and
and
push
(bad)
retf
sub
add
div
pop
and
cmp
mov
xchg
stos
lods
cmp
or
in
rcr
mov
lds
clc
shr
nop
std
mov
imul
mov
addr16
inc
imul
xchg
fs
jns
je
fcomip
stos
sbb
mov
dec
int
xchg
pop
cmp
jnp
scas
mov
mov
or
aaa
add
mov
stos
pusha
cli
jnp
push
push
push
mov
or
inc
inc
lea
(bad)
cmps
arpl
enter
dec
sbb
lods
lahf
in
in
push
repz
bound
pop
(bad)
adc
push
clc
imul
dec
outs
mov
adc
adc
fs
ja
sbb
mov
push
or
in
mov
cli
jne
sub
scas
xchg
pop
mov
ins
add
ficom
les
jge
cmps
pop
adc
lods
jmp
std
(bad)
and
mov
xchg
mov
in
aam
jmp
push
xchg
mov
mov
out
imul
jmp
shl
out
fisub
sub
mov
out
xchg
jne
dec
inc
dec
aaa
xlat
cmp
or
popf
pop
dec
mov
mov
sbb
and
cmps
cmp
call
adc
out
add
mov
into
xor
mov
xor
aas
sub
cmps
push
or
rcr
pop
jmp
repnz
mov
sub
and
add
fsub
sbb
movs
cmp
lds
leave
idiv
in
rcr
fstp
pop
in
aad
jnp
add
mov
xchg
pop
jmp
xor
pop
jg
je
out
fwait
(bad)
mov
jae
mov
xchg
jmp
sub
out
mov
ss
pop
push
push
xchg
dec
clc
mov
dec
xor
aas
stos
(bad)
retf
add
scas
pushf
mov
adc
mov
jno
in
inc
push
mov
clc
mov
cmp
je
in
ja
popa
(bad)
cmp
mov
lods
push
xchg
mov
(bad)
xchg
jp
pusha
imul
xchg
pop
xchg
shl
mov
arpl
cmp
lea
dec
sub
push
jnp
lods
or
cdq
lods
pop
cs
push
inc
mov
mov
xor
lea
into
cld
pop
in
aam
inc
pop
and
cwde
push
ins
rol
adc
pop
bound
into
xchg
fidivr
dec
adc
xchg
daa
fwait
mov
push
adc
add
imul
dec
xchg
add
jp
mov
test
hlt
imul
mov
inc
xor
inc
int
bsf
dec
mov
xchg
scas
jp
test
sti
sti
mov
inc
loopne
enter
mov
aas
pop
push
into
std
popa
gs
sbb
int
sti
cld
mov
inc
cmp
add
ins
push
andnps
dec
xor
data16
mov
pop
mov
ror
xchg
or
dec
stos
pop
popf
lds
out
fnstcw
and
cmc
(bad)
shufps
sbb
outs
les
lds
(bad)
inc
push
pop
sbb
xchg
out
loopne
sar
and
add
mov
scas
jbe
sub
and
clc
adc
fwait
iret
rcr
in
sbb
xchg
rol
mov
aad
cmp
out
xchg
dec
aad
les
xor
mov
std
es
dec
mov
or
lods
dec
mov
push
mov
shr
fwait
(bad)
sahf
scas
sub
xlat
test
jmp
add
(bad)
add
add
(bad)
push
mov
pop
jo
gs
jno
cmp
dec
mov
std
test
inc
xlat
sbb
(bad)
cmp
retf
jecxz
loop
jnp
(bad)
fwait
cwde
mov
sub
(bad)
xchg
adc
cmp
loop
(bad)
push
ret
je
fstp
inc
sub
sahf
sbb
fs
push
les
outs
add
and
stos
neg
sub
leave
or
leave
add
out
(bad)
ja
and
and
fdiv
add
hlt
clc
les
lahf
mov
repz
xor
jb
pop
xor
inc
inc
sahf
in
xchg
mov
cmp
jbe
fistp
and
enter
mov
pop
test
push
xor
in
inc
or
xor
cld
leave
les
cmps
stos
(bad)
and
loopne
jnp
push
push
sub
aaa
je
cmp
xchg
dec
xlat
xor
rcl
test
push
sbb
retf
push
sub
hlt
movs
mov
xor
xchg
rcr
movs
inc
xchg
imul
ss
push
call
ror
dec
test
sub
ja
stos
sub
sti
mov
adc
adc
dec
push
repz
je
push
xchg
or
add
ss
ds
inc
lea
das
mov
inc
pop
retf
add
aaa
dec
xchg
lahf
dec
call
loop
dec
ds
daa
cmp
inc
fdivr
xchg
(bad)
fnsave
jae
xchg
iret
fucomp
and
sub
out
mov
jp
adc
cmps
imul
add
lahf
jle
pop
mov
retf
dec
sub
mul
aam
add
mov
add
sub
sbb
xchg
pminsw
mul
cmp
call
sbb
push
pop
repnz
or
mov
pop
aaa
push
and
or
mov
or
push
jnp
mov
push
cmp
lea
sar
(bad)
out
vmwrite
popf
enter
xchg
xor
and
pop
or
push
and
ffreep
sbb
sbb
push
cdq
scas
push
(bad)
popa
scas
loope
jg
mov
ror
rcl
call
(bad)
xor
add
jecxz
iret
or
in
mov
test
adc
push
adc
fsub
stc
push
outs
shr
ds
fs
xchg
popa
ins
stos
movs
pop
jnp
in
mov
push
je
test
movs
jnp
sbb
jl
xchg
push
(bad)
xchg
push
mov
adc
mov
mov
cmc
out
ss
cwde
(bad)
pop
pop
in
lea
iret
test
sbb
cli
cmp
add
icebp
ror
jae
xlat
mov
mov
and
and
jge
xor
test
mov
adc
icebp
mov
je
xchg
cdq
jo
leave
fs
sbb
cld
jo
pop
mov
xor
mov
push
int
sub
mov
pop
cmp
scas
ret
ret
mov
add
mov
cmp
daa
xor
icebp
rcr
out
inc
mov
retf
pop
dec
sbb
or
jle
fist
jmp
js
dec
dec
xor
jo
mov
mov
jp
jne
test
jne
jo
sub
xor
xchg
in
push
retf
(bad)
repz
pusha
sub
jne
jecxz
pop
xlat
lahf
mov
inc
xchg
fadd
inc
sbb
nop
pop
push
push
aas
jb
sbb
jle
xor
mov
fst
and
mov
mov
aas
movs
test
push
mov
stos
imul
add
in
add
fild
xor
jns
imul
test
or
(bad)
push
mov
dec
movs
dec
in
loopne
inc
inc
aaa
push
imul
pop
and
jmp
cs
aad
lods
in
pop
aad
mov
loop
and
popa
in
mov
shl
rcl
(bad)
test
mov
enter
mov
(bad)
retf
or
fcmovne
xor
mov
retf
sar
in
out
mov
js
mov
popf
push
adc
loopne
sbb
push
(bad)
mul
add
jae
fwait
cmc
mov
push
jnp
cmp
mov
xor
pushf
movaps
imul
cmps
fs
in
add
jbe
std
jae
call
popa
jl
dec
sahf
adc
sbb
xchg
mov
jno
push
mov
mov
xor
inc
cs
jl
scas
push
pop
std
inc
cmc
xor
add
mov
add
push
es
pop
iret
fld
test
sub
jle
fs
mov
jbe
cdq
pop
(bad)
outs
std
pop
in
xchg
hlt
push
push
test
leave
push
and
push
out
cmp
adc
xor
dec
xor
mov
imul
loop
add
fmulp
inc
or
imul
nop
mov
inc
int
hlt
sbb
xchg
stos
movs
fdivr
adc
clc
imul
test
ror
or
xchg
data16
pop
dec
mul
ror
and
scas
cmp
fmul
gs
shr
or
lods
sub
xchg
iret
aas
call
daa
push
inc
movs
scas
cmp
cld
push
out
shl
test
jecxz
sub
jmp
test
pop
push
aas
sbb
in
movs
test
les
aaa
jg
(bad)
in
xchg
inc
icebp
inc
out
xchg
gs
push
and
mov
xchg
icebp
fbld
lock
mov
sub
inc
ficom
jmp
popf
dec
push
mov
push
pop
xor
ja
xchg
aam
push
pop
iret
icebp
out
add
mov
mov
test
jns
adc
cmp
jmp
dec
push
and
and
jnp
mov
push
xchg
sar
inc
sub
mov
gs
inc
call
adc
add
cmc
nop
mov
sub
push
xchg
mov
and
sub
test
data16
pop
faddp
aaa
fs
iret
mov
outs
movs
cld
(bad)
mov
and
inc
sbb
adc
arpl
outs
mov
lds
cmp
rcl
scas
adc
stos
push
(bad)
rcl
les
jnp
(bad)
sub
retf
dec
mov
mov
mov
test
stos
sahf
and
push
mov
inc
(bad)
mov
call
mov
cmp
aam
lea
push
hlt
cdq
mov
rcr
mov
mov
ins
out
ret
int3
mov
les
movs
sbb
stc
push
mov
jmp
xchg
(bad)
pushf
(bad)
xchg
(bad)
pop
push
sub
push
xchg
push
das
cmp
xlat
and
xchg
add
cs
push
data16
mov
push
dec
push
mov
aaa
xchg
mov
cmp
or
xor
cmc
test
push
lock
xor
out
popf
dec
les
sbb
repz
scas
rcl
ucomiss
mov
in
dec
pop
xor
fstp
lea
jo
(bad)
mov
sahf
scas
or
cld
rcr
jno
jle
pop
mov
inc
push
inc
mov
push
sbb
sbb
jb
je
mov
aaa
iret
xor
mov
pop
adc
loop
push
dec
loopne
or
sbb
scas
icebp
bound
(bad)
adc
inc
fwait
jg
leave
pop
cld
jecxz
pop
test
dec
and
cld
push
repnz
out
jge
dec
jbe
mov
mov
shl
in
das
imul
les
push
mov
mov
jg
lahf
shl
lea
sahf
dec
sub
mov
imul
push
ss
xor
or
cmc
lods
iret
or
push
and
addr16
imul
inc
stos
scas
jo
aas
mov
mov
fadd
xchg
mov
xchg
lds
cld
push
or
cwde
rcl
int3
pop
stos
mov
adc
cdq
gs
inc
bt
(bad)
cld
dec
aad
xor
(bad)
mov
jg
shr
cmps
xor
mov
(bad)
mov
mov
or
cmp
jae
loop
scas
mov
stos
fcom
sahf
dec
pop
daa
push
inc
mov
stos
and
sub
repnz
add
inc
cmp
sti
cmps
and
pop
mov
push
jno
cmc
and
or
lea
daa
mov
add
nop
mov
aad
pop
shl
or
and
sbb
es
dec
dec
les
iret
push
dec
scas
ret
inc
cmps
(bad)
pop
nop
addr16
(bad)
jmp
sbb
fild
fmulp
rol
sbb
les
ins
imul
out
add
fnstsw
inc
mov
cmps
add
xlat
fs
or
fisttp
add
pop
cmps
repnz
mov
mov
xor
pop
out
(bad)
pusha
mov
ins
or
pushf
cmp
push
pusha
push
fnstsw
dec
push
push
mov
bound
cmp
push
les
mov
sti
into
ror
push
add
sar
cmps
nop
inc
xchg
sub
mov
lock
add
mov
add
cmp
pop
(bad)
cmps
xor
lea
mov
pushf
lds
and
test
lock
vlddqu
pop
add
jno
jmp
add
or
ja
jns
pop
push
sub
fisttp
cmp
mov
inc
xchg
jns
fmul
add
mov
push
add
mov
cwde
push
test
jg
imul
mov
push
mov
int
mov
fmulp
mov
outs
pop
push
xchg
loope
aas
es
and
pushf
sbb
push
dec
sbb
aad
repnz
mov
push
out
test
inc
ds
cmp
pusha
loop
add
mov
or
mov
loop
loopne
pop
sub
fild
mov
push
sbb
repz
sbb
out
loopne
hlt
pop
or
add
push
and
and
pop
dec
mov
or
lds
sbb
xchg
sub
push
pop
rcl
dec
mov
(bad)
cld
add
push
test
push
cmp
adc
call
cmp
xor
arpl
mov
in
sub
inc
cs
clc
push
das
repz
mov
sub
outs
loopne
fadd
adc
(bad)
or
mov
adc
mov
in
or
dec
cmp
cmp
pop
adc
shr
fist
adc
dec
sbb
inc
clc
mov
aad
xsavec
cld
in
sub
pop
ret
adc
inc
cli
push
mov
aaa
mov
sbb
aam
pop
mov
inc
jle
mov
mov
or
inc
mov
aaa
cmps
mov
in
movs
sub
mov
xchg
adc
lds
sbb
adc
cmc
sahf
mov
add
into
xor
ja
or
into
cmc
push
pop
fsubr
lahf
cmps
sar
retf
xor
fimul
leave
push
fimul
addr16
jbe
inc
jecxz
aad
pop
addr16
add
adc
aam
add
addr16
cmps
lods
cmp
xchg
adc
pop
mov
mov
mov
sbb
pop
xor
ret
jae
mov
sbb
mov
pop
push
cmp
imul
push
lods
jecxz
(bad)
cmp
movs
inc
pop
dec
shr
sbb
fwait
xor
sub
test
xchg
sub
cwde
xchg
xchg
mov
cwde
xor
into
jno
shr
repz
mov
jnp
scas
repnz
mov
add
bound
pop
jne
or
jecxz
lock
pop
jle
jp
leave
movs
or
shl
jb
pusha
adc
pusha
sar
mov
sub
xor
clc
xchg
cmps
out
inc
dec
xchg
outs
cmc
dec
cmp
mov
sbb
cmp
clc
cwde
cwde
sti
xchg
call
cmp
mov
sub
jecxz
cld
mov
stos
xlat
push
cmp
xchg
shl
sbb
rcr
rol
ds
mov
ja
cwde
mov
cwde
gs
in
inc
jmp
dec
mov
pop
mov
pop
(bad)
sbb
jb
mov
and
jmp
mov
inc
fsub
mov
lods
stos
frstor
leave
xor
adc
xchg
in
sub
in
aam
enter
in
xor
push
rcl
nop
adc
in
sar
loop
movs
out
add
pop
and
sti
jb
dec
inc
dec
aam
mov
les
popf
jns
xor
and
sub
dec
xor
jmp
or
adc
mov
loope
push
outs
pop
ja
xor
out
pop
mov
jp
or
cmps
cld
mov
inc
in
mov
pop
or
(bad)
mov
xor
data16
mov
jo
popf
and
(bad)
mov
jne
fcmovnu
dec
ja
(bad)
shl
and
inc
mov
xchg
xchg
add
inc
dec
mov
bound
movs
cld
(bad)
jmp
and
or
(bad)
sti
inc
icebp
xor
xor
xchg
pop
push
cmp
(bad)
cdq
push
push
jb
addr16
push
cmp
ret
mov
xchg
push
imul
inc
jl
push
lds
in
or
and
sbb
imul
fcom
dec
cmp
mov
int
push
les
in
sub
scas
(bad)
fmul
retf
inc
icebp
cs
shr
jo
lods
in
in
mov
stos
sbb
bound
rcl
test
cmp
in
push
pop
pop
les
pop
mov
mov
xchg
mov
sahf
outs
scas
pusha
mov
into
lahf
cld
pop
mov
fisttp
push
jmp
test
inc
push
mov
cmp
mov
push
xor
aaa
cmp
test
lock
xor
stos
sub
push
adc
xchg
xor
add
mov
aas
(bad)
push
pop
rcl
pop
cmp
inc
adc
imul
and
dec
fld
jb
mov
movs
xchg
add
cmps
push
and
popa
loopne
call
jmp
ret
push
(bad)
(bad)
mov
push
fcomp
or
lock
dec
adc
ret
sub
test
inc
popf
(bad)
ins
push
(bad)
jmp
lds
adc
and
mov
enter
out
ret
shl
lods
mov
push
clc
and
(bad)
pop
mov
cmp
into
adc
test
push
into
in
push
in
mov
pop
repnz
pop
inc
outs
es
cs
imul
xchg
xor
push
mov
adc
retf
push
jae
lea
or
ret
(bad)
and
jle
and
imul
dec
push
inc
xchg
pop
push
xchg
push
adc
pushf
push
pop
lods
jge
or
and
sub
and
inc
clc
jle
fisubr
add
retf
test
pop
jmp
dec
mov
aad
rol
cdq
push
pop
cmc
jmp
or
cli
xchg
mov
hlt
lods
int3
or
pop
mov
mov
ja
mov
xor
push
js
mov
out
enter
ss
xchg
fld
icebp
and
retf
push
enter
adc
push
adc
mov
sar
into
sahf
gs
xchg
inc
cmp
add
cmps
cdq
and
data16
adc
mov
fimul
jae
loopne
push
ret
popa
jno
inc
pop
pusha
push
adc
pop
sbb
lods
movs
call
lods
sbb
inc
fild
cmps
dec
arpl
fcom
sub
pop
cmp
ins
push
sub
sub
sub
sbb
cdq
jae
pop
pop
scas
popa
xchg
add
mov
jge
mov
mov
adc
sub
stos
pop
dec
mov
out
test
rol
mov
leave
clc
jb
enter
mov
mov
bound
or
add
rol
push
xchg
clc
pop
push
push
jge
pop
(bad)
xor
push
in
aam
cmp
dec
aam
rcl
mov
inc
imul
pop
retf
iret
addr16
cmp
mov
xchg
push
lea
dec
lahf
leave
cmc
(bad)
rcl
stos
or
ins
cmps
dec
test
inc
loop
cmp
dec
xchg
js
inc
stos
scas
xchg
inc
aaa
js
lds
adc
mov
js
int3
enter
sar
sar
(bad)
xor
mul
xchg
imul
ret
in
mov
sub
fisttp
cli
aad
imul
pop
(bad)
rcr
xchg
push
sbb
es
and
cs
mov
sti
or
and
xchg
fcom
mov
push
inc
add
in
pop
or
lds
and
or
test
push
into
arpl
or
iret
push
mov
mov
mov
dec
sti
imul
inc
movs
ins
repnz
pop
push
test
leave
cmp
enter
ja
scas
adc
stos
ror
and
ins
sub
jae
fimul
xor
stos
push
pop
or
stos
retf
pusha
fisttp
or
aaa
jb
lea
xchg
jecxz
and
dec
push
xor
mov
mov
cmps
pop
push
jae
dec
pusha
sub
mov
ds
popf
aam
mov
adc
ja
jne
js
test
out
dec
cld
cmp
jnp
cmc
cmc
sti
mov
mov
test
inc
adc
arpl
cld
aad
ins
icebp
or
sub
cld
iret
add
js
cmp
push
jo
cmp
dec
cmc
cmp
inc
jns
test
jg
push
in
lds
mov
adc
mov
ret
add
mov
sub
push
adc
mov
retf
jge
std
out
xor
and
dec
aam
mov
mov
mov
(bad)
test
pop
mov
int3
fnstenv
xchg
clc
lods
out
xor
jae
adc
js
push
push
dec
sub
sbb
lds
loope
repnz
or
(bad)
pop
(bad)
test
mov
inc
sub
adc
xlat
xor
dec
dec
sbb
cmp
arpl
pop
mov
aam
mov
jecxz
mov
in
mov
daa
mov
add
mov
dec
xchg
mov
imul
mov
mov
(bad)
sub
in
push
js
sar
call
ins
neg
sub
pop
outs
add
mov
push
sbb
in
cmp
cmp
sub
ret
ins
out
and
test
mov
gs
dec
push
mov
push
add
push
mov
ds
movs
mov
aam
(bad)
pop
jl
loop
sub
es
fsubrp
ficom
pop
pusha
mov
adc
aam
fmul
adc
(bad)
ins
xor
repz
out
das
test
rcr
popa
adc
jne
bound
(bad)
push
and
cdq
scas
shr
or
lock
dec
scas
outs
push
shl
iret
push
cmps
mov
sbb
xor
jg
adc
jb
pop
sub
out
test
cdq
mov
add
(bad)
xchg
pop
cwde
loope
movs
in
in
sbb
mov
scas
(bad)
(bad)
sub
add
adc
dec
aad
mov
hlt
pop
jne
call
in
xchg
xchg
push
out
test
xchg
iret
scas
jb
xchg
js
test
jl
mov
jnp
sub
test
pop
or
out
retf
outs
out
cmp
cwde
jo
pop
jl
mov
aaa
test
enter
out
dec
neg
inc
and
movs
ret
add
sub
call
ror
jge
test
scas
dec
jmp
ror
into
pop
stc
add
add
outs
inc
test
scas
xchg
push
sub
ss
jo
jbe
xor
(bad)
sub
push
cli
pop
and
and
xchg
stos
call
in
lds
inc
fucomip
push
popf
ffreep
fmul
or
or
fisubr
or
pushf
dec
lods
je
add
push
xor
mov
cmp
ins
das
push
dec
xor
jle
imul
cmp
cwde
add
shl
pop
in
sub
or
(bad)
and
add
mov
pop
movs
and
and
cmp
popf
and
mov
repnz
cmp
adc
call
mov
lock
dec
xor
shl
xchg
sbb
and
and
sub
test
in
adc
je
sub
jmp
std
jecxz
mov
pop
(bad)
push
outs
js
fs
pop
and
ss
jge
in
dec
movs
(bad)
jmp
hlt
sbb
and
jecxz
jecxz
mov
addr16
loop
test
pop
mov
adc
pop
(bad)
lock
add
dec
add
pop
fs
pusha
fdiv
lds
movs
add
pop
xor
test
ja
stos
retf
add
sub
fisubr
aad
xor
movs
pop
and
je
movs
das
lock
sbb
je
jnp
sub
and
mov
or
gs
shl
test
pop
lds
lods
ret
les
shl
jnp
jbe
outs
cmc
xchg
mov
jae
cwde
xor
xchg
jmp
push
jmp
das
push
or
cwde
sub
ror
out
sub
cmps
cmp
adc
adc
sbb
movs
iret
shl
sbb
daa
pop
cs
sbb
push
inc
(bad)
out
pop
mov
mov
sub
sub
movs
(bad)
leave
mov
sbb
cmp
xchg
dec
hlt
mov
mov
and
in
ret
jp
and
das
sbb
inc
jns
jmp
xor
cmp
pop
lahf
cdq
cmps
mov
ret
xlat
cmps
loopne
out
scas
ret
and
clc
lods
test
imul
cmp
mov
jbe
scas
std
mov
xor
loop
jne
and
sbb
pop
xor
into
scas
add
andnps
jp
cld
pop
xchg
and
mov
or
jne
frstpm(287
jmp
or
adc
es
mul
adc
dec
movs
mov
stos
fwait
lock
ret
fwait
cmps
pop
cmps
cdq
adc
add
jb
je
inc
pusha
fs
mov
xchg
cld
xchg
jmp
cmc
fnsave
jo
jmp
add
mov
and
add
aas
add
test
cwde
mov
push
call
mov
pop
cmp
sbb
mov
(bad)
pop
loopne
cwde
sbb
inc
mov
pop
jl
xchg
jae
mov
mov
sbb
sbb
outs
sbb
mov
aad
shr
out
ins
popa
xchg
adc
das
imul
rol
js
ret
idiv
rcr
cmp
mov
js
stos
sti
test
popf
jecxz
stc
sub
(bad)
cmp
cwde
call
retf
into
sbb
jae
pop
xor
inc
mov
aaa
sahf
out
push
mov
jle
mov
clc
dec
hlt
loope
(bad)
fst
out
test
pop
int3
pop
push
ficomp
xor
adc
pop
leave
fldcw
adc
into
sub
mov
ror
ins
mov
ss
adc
hlt
ficomp
ds
push
in
shl
test
out
jne
hlt
jmp
xor
shr
dec
jmp
shr
dec
stos
lods
aam
mov
lea
std
sub
mov
xchg
fucomp
sub
xor
lock
push
icebp
mov
mov
js
xlat
fist
cdq
data16
xchg
fstp
dec
push
jb
xor
dec
inc
js
mov
or
cmp
mov
mov
(bad)
mov
in
add
mov
js
or
das
or
xchg
xchg
in
pusha
jge
daa
pop
ds
div
push
(bad)
into
xor
mov
jbe
and
(bad)
(bad)
fs
and
xor
mov
imul
and
pop
or
or
repz
(bad)
sbb
fisub
and
pusha
ja
xlat
sahf
call
arpl
pop
daa
pop
test
out
pop
jecxz
and
xchg
pop
pop
cmp
jo
or
jle
ds
cmc
adc
jne
push
xchg
enter
(bad)
mov
call
pop
xchg
popf
ret
popa
mov
hlt
iret
pop
out
pop
dec
xchg
inc
pop
icebp
sbb
mov
xchg
cwde
sub
pop
test
mov
fsub
or
and
xchg
add
jmp
mov
push
sub
sbb
push
xor
jmp
imul
ins
cmp
iret
js
pop
add
rcl
lea
sahf
jp
hlt
jbe
icebp
movs
sub
jmp
adc
dec
jecxz
cmps
mov
outs
push
jbe
mov
aas
xchg
or
dec
popf
int3
sbb
or
adc
or
clc
mov
std
mov
and
mov
xor
sbb
shl
adc
lods
rcr
jne
ss
jae
pusha
lea
shl
mov
rep
cli
jo
(bad)
not
les
shl
div
imul
cmp
jle
lods
xchg
(bad)
adc
mov
or
push
fwait
ja
jmp
popa
add
push
fwait
sbb
adc
push
pop
mov
rcl
repz
test
add
push
xchg
mov
pop
jge
push
push
jo
sub
bnd
js
(bad)
sbb
lds
inc
pop
cmp
cmp
sub
mov
pop
dec
push
clc
xor
mov
pop
cmp
test
xchg
cli
bnd
xchg
fild
and
adc
dec
push
mul
cmp
adc
dec
inc
jne
and
aaa
and
int
(bad)
aas
hlt
outs
xlat
shl
push
in
cdq
add
xchg
outs
pop
inc
push
(bad)
daa
aas
out
mov
daa
push
sub
fwait
cmc
not
std
loop
cmp
mov
mov
cmp
mov
inc
test
pushw
mov
in
loopne
pop
ret
push
scas
or
(bad)
adc
dec
or
repz
in
cmc
sub
jbe
test
sub
jl
pusha
sub
inc
in
sbb
fwait
stc
xchg
daa
dec
jae
cmp
pop
add
rol
mov
sbb
fst
div
xchg
rol
jo
jmp
jo
loopne
jmp
imul
pop
cmps
or
cmc
jmp
ins
jmp
push
and
call
xchg
sbb
cmp
sbb
jg
(bad)
jl
iret
arpl
adc
xor
xor
adc
inc
pop
cmp
mov
lods
fstp
rol
lods
imul
imul
jg
xor
lods
out
lds
pop
mov
leave
xchg
mov
xlat
loope
mov
popf
imul
cli
pop
aaa
xor
(bad)
mov
imul
jge
or
sub
test
loopne
or
jns
xchg
jle
shl
popf
sbb
xchg
mov
adc
sbb
lea
call
xchg
cli
sar
mov
ss
or
and
(bad)
fs
and
or
push
push
add
retf
sub
push
stos
mov
aas
outs
(bad)
jmp
out
mov
arpl
inc
out
sbb
shr
je
iret
and
(bad)
jg
out
sub
stc
or
sub
(bad)
push
fwait
mov
adc
rol
pop
adc
sbb
adc
sbb
gs
lods
push
adc
movs
int
sbb
push
dec
pop
cmovns
jl
sbb
sbb
or
lahf
sbb
outs
cdq
fdivr
add
or
inc
add
push
xor
sahf
and
ror
out
leave
pop
or
lock
sub
icebp
jo
pop
cmc
xor
adc
cmp
mov
cmps
test
lds
int
and
pushf
cmc
add
addr16
rcl
or
lds
mov
add
(bad)
fcom
sahf
mov
inc
shr
arpl
aad
inc
jno
aad
inc
ja
sub
ins
outs
push
sub
dec
out
(bad)
fidiv
cmp
xor
fs
lahf
cld
push
ins
pop
ror
jae
jecxz
fwait
es
jle
mov
(bad)
(bad)
hlt
aas
jp
adc
sub
arpl
or
jno
test
pop
push
setae
sbb
sub
xor
shr
cld
adc
push
push
push
test
dec
sub
mov
or
or
test
push
cli
out
in
arpl
push
fist
fscale
pusha
sti
cdq
mov
pop
retf
(bad)
repnz
aam
push
fcmovu
scas
push
call
ins
int
fwait
xchg
mov
(bad)
jg
jecxz
shr
add
push
clc
sub
outs
push
adc
outs
mov
das
jmp
or
inc
sbb
push
popa
aaa
adc
pop
jmp
mov
mov
stos
rcr
sbb
paddsw
mov
pop
push
addr16
repnz
daa
pop
inc
and
xor
jp
fucom
mov
pop
gs
ja
int3
mov
push
ss
mov
jp
jno
fsubr
arpl
aad
xchg
sahf
shr
and
aas
inc
in
xor
ret
sti
icebp
add
cmp
popf
mov
and
(bad)
outs
outs
xchg
mov
pop
gs
ins
xchg
and
or
aas
test
sbb
push
xchg
nop
in
test
cwde
shl
add
add
dec
daa
cmp
push
xlat
mov
sti
ins
mov
push
(bad)
mov
and
(bad)
pop
mul
and
push
repz
ret
push
ret
call
lock
jnp
xchg
(bad)
js
fmul
(bad)
hlt
out
ja
lds
aaa
jnp
xchg
sbb
out
iret
retf
xor
xlat
fdivr
scas
arpl
test
ret
dec
xlat
adc
jmp
push
mov
push
cli
dec
jne
jns
jnp
stos
outs
popa
jmp
outs
ret
lods
sar
leave
xchg
call
nop
push
fs
sti
loope
cmp
or
ins
int3
xchg
mov
or
push
repz
mov
mov
xchg
dec
xchg
jb
sub
mov
shr
fidiv
test
in
ja
pcmpgtw
mov
inc
sub
jmp
adc
xor
mov
stos
mov
stos
out
scas
add
int3
sbb
mov
inc
mov
adc
xchg
inc
add
sti
or
push
pushf
sbb
pusha
cmp
stc
into
ins
sub
jge
jae
call
ret
mov
arpl
jecxz
out
lock
addr16
shl
leave
jmp
jno
mov
shr
movs
hlt
mov
inc
test
mov
and
stos
leave
jbe
pop
iret
call
or
fldcw
adc
jmp
outs
and
iret
jne
fwait
out
pop
inc
outs
mov
test
xchg
mov
jns
jmp
shl
inc
xor
repz
repz
std
aad
pop
dec
scas
cwde
push
loopne
xchg
jg
push
push
push
sub
ss
(bad)
pushf
xlat
jb
rcr
xor
clc
jae
out
rcl
dec
scas
das
les
cmps
inc
(bad)
jae
cwde
(bad)
fild
mov
jne
adc
mov
scas
rcl
or
iret
bound
xchg
add
mov
mov
pop
out
mov
stos
sti
xchg
sbb
and
dec
leave
adc
jb
loop
popf
ja
lods
mov
jl
mov
mov
packsswb
lea
xchg
or
stos
jecxz
add
stc
outs
retf
mov
stos
out
call
pop
outs
xlat
jne
push
lock
xchg
test
cmps
ins
jg
fwait
push
call
fisttp
inc
mov
mov
int3
ja
dec
and
scas
test
cmps
mov
push
sahf
test
jge
xchg
leave
daa
xchg
mov
sbb
dec
xchg
popa
out
xchg
stc
cmp
cdq
mov
mov
cs
stc
or
xchg
inc
sbb
lods
sbb
jg
inc
loopne
xchg
add
pop
ror
shr
lds
nop
and
enter
pushf
inc
sbb
or
test
cmp
popa
aaa
sub
pop
mov
sbb
and
ins
aam
pop
js
loop
lahf
xchg
xchg
icebp
jl
jp
enter
test
pop
jmp
test
jecxz
inc
(bad)
xor
jae
adc
sub
movs
push
test
enter
leave
mov
sbb
sti
jmp
adc
nop
dec
pop
imul
(bad)
adc
aas
xchg
pop
mov
stc
pushf
sbb
pop
add
xor
pop
sbb
or
ror
push
(bad)
mov
cld
int
adc
das
mov
ret
sbb
loopne
fdivr
mov
sbb
xor
jne
cli
arpl
pop
push
pop
cmp
int
cmp
cmp
mov
cmp
push
stos
push
mov
sbb
xchg
jae
retf
xor
fiadd
repz
icebp
std
cmps
jge
mov
dec
xchg
fcomp
jmp
xor
mov
(bad)
mov
aad
movs
retf
xchg
hlt
ins
xchg
mov
adc
in
outs
lods
fs
loope
jae
jnp
xchg
daa
dec
push
bound
test
dec
and
add
jl
std
jecxz
scas
enter
or
inc
movs
ja
fwait
es
out
pop
sbb
fadd
idiv
popa
dec
stos
and
stos
xchg
int3
pop
push
cdq
mov
in
xchg
in
pop
sbb
jg
xchg
mov
sub
dec
outs
imul
inc
cli
aad
(bad)
dec
enter
test
xchg
inc
movs
ins
mov
push
add
or
pop
push
pop
addr16
xor
add
xor
push
rdpmc
push
fmul
sbb
scas
mov
stc
push
pop
pop
xlat
mov
or
and
jmp
lds
add
stos
repnz
pop
sbb
aaa
popa
or
sbb
outs
and
inc
adc
aad
faddp
push
rcl
int3
ins
cmp
jo
add
in
sub
fisubr
pop
mov
ins
aam
mov
mov
adc
(bad)
ins
mov
minps
mov
jl
arpl
dec
shr
cld
sbb
mov
retf
pop
loope
mov
dec
fcomp
je
sahf
jmp
fsub
inc
mov
xor
inc
jl
xchg
inc
fcom
repnz
sbb
loope
push
inc
fdivr
ins
push
add
cmp
addr16
xchg
xchg
sub
add
aas
cmp
jp
xchg
sar
sar
sbb
xchg
into
in
mov
int3
inc
mov
(bad)
sahf
imul
(bad)
pusha
imul
sti
imul
aaa
ret
mov
arpl
pop
inc
cmps
frstpm(287
into
je
movs
ror
(bad)
or
idiv
out
cmp
iret
dec
mov
(bad)
es
mov
(bad)
std
push
adc
aaa
std
and
js
jmp
mov
jae
int3
cmc
shl
adc
push
push
sbb
and
cdq
cs
xchg
fldl2t
inc
mov
cld
stos
mov
mul
add
add
cdq
mov
add
movs
adc
fisttp
mov
test
sbb
sbb
jnp
std
repnz
scas
cmp
jmp
ins
hlt
retf
sub
push
fmul
pop
je
pop
mov
je
cmp
imul
(bad)
xlat
adc
daa
adc
sti
test
ret
sbb
add
sub
imul
neg
idiv
cmps
jge
popf
ins
sahf
sbb
setnp
unpcklps
mov
mov
out
adc
dec
push
mov
mov
lea
and
sbb
adc
cmp
push
stos
mov
ret
cmp
das
lock
inc
mov
call
sub
adc
inc
out
int3
dec
dec
push
ja
push
call
xor
push
sub
jae
mov
dec
icebp
pop
inc
je
add
and
(bad)
cmps
jmp
adc
jae
aaa
arpl
add
xor
mov
inc
shr
mov
inc
pop
adc
and
aas
xchg
pop
sti
cmc
sub
out
mov
ja
cmp
inc
je
int
arpl
dec
clc
mov
cld
out
mov
mov
retf
imul
adc
icebp
fnstsw
movs
mov
sti
inc
or
sbb
inc
jge
sub
xchg
loopne
adc
or
pop
cwde
cmp
jnp
nop
pop
iret
clc
pop
arpl
in
mov
jg
aaa
bound
pop
cld
and
push
mov
mov
jnp
dec
into
pop
push
stos
adc
retf
pop
xor
add
aam
loope
add
pusha
pop
mov
sbb
loop
mov
mov
jnp
cwde
jmp
stos
add
xor
xchg
push
aaa
sub
sbb
fcmovu
inc
(bad)
or
std
sub
sahf
pop
and
adc
loopne
mov
pop
jno
stos
inc
imul
jnp
mov
call
test
sbb
mov
mov
or
call
dec
adc
jo
jmp
dec
pop
mov
jmp
fmul
scas
imul
fcmove
dec
retf
ins
sti
sub
xchg
retf
outs
sahf
xchg
xchg
xchg
push
mov
and
sti
stos
xchg
adc
stc
xlat
add
(bad)
pop
xor
int3
imul
mov
or
adc
int3
mov
jl
mov
retf
add
outs
js
and
cs
daa
imul
mov
aaa
hlt
jmp
jge
sbb
or
lea
aas
xor
(bad)
mov
ret
cmp
mov
mov
test
add
in
shr
push
out
popf
shl
mov
pop
pop
mov
and
mov
and
in
pop
mov
push
scas
dec
jno
add
push
js
jmp
push
jae
or
dec
xor
das
jle
cmc
sub
test
push
mov
into
(bad)
movs
dec
lods
aad
fstp
xchg
mov
in
sti
xlat
leave
or
pop
int
sub
mov
js
and
aad
xchg
jg
dec
sub
das
xchg
mov
(bad)
mul
sbb
loopne
addr16
and
nop
fld
sub
dec
push
dec
pop
fdiv
jae
enter
aam
xchg
xchg
cdq
repz
mov
aad
out
pop
xor
iret
inc
sub
shl
jo
cdq
loopne
fdivp
jno
cmp
lods
ret
cmc
jae
push
iret
mov
and
mov
mov
jb
aaa
add
aas
jnp
sub
retf
dec
(bad)
(bad)
data16
sub
lea
outs
and
loopne
ret
xchg
sub
fisttp
addr16
repz
or
(bad)
sahf
inc
sbb
fidivr
enter
sub
adc
xchg
add
sub
shr
lods
inc
add
arpl
adc
clc
cmp
sbb
popf
popa
fisub
in
inc
lds
cmp
imul
cmps
jno
and
fldcw
imul
push
arpl
inc
cmp
dec
push
pop
dec
sub
imul
or
inc
xchg
xor
lahf
xchg
cmc
xor
stc
jne
mov
ds
adc
pop
mov
xchg
aam
push
int
ret
adc
mov
dec
or
loop
movs
je
mov
pusha
push
jae
mov
push
or
pop
iret
mov
mov
call
int3
mov
cmp
pop
sub
or
sbb
shl
in
sti
ret
mov
movs
prefetch
or
mov
jbe
loopne
ja
cmps
jmp
es
pusha
test
sbb
(bad)
xlat
icebp
in
sbb
or
fstp
xor
xchg
or
add
mov
mul
in
in
stc
and
shr
add
add
aad
mov
outs
or
lahf
iret
pop
push
loopne
push
test
loop
sbb
sar
fild
leave
jmp
dec
ret
push
stc
push
lods
js
test
imul
jno
(bad)
sbb
ja
xchg
loopne
pusha
mov
jmp
mov
sbb
xchg
adc
repz
fisub
xchg
hlt
pop
fdivr
fcomip
outs
xchg
adc
ror
nop
stc
and
or
outs
mov
call
stc
adc
fs
lds
in
dec
xchg
in
hlt
jnp
mov
repnz
mov
cmp
or
and
push
add
and
xchg
fstp
mov
xor
ja
addr16
(bad)
retfw
jo
popf
ins
or
in
shl
dec
rcr
out
pushf
cmp
test
es
inc
fst
movs
dec
shl
mov
shl
pop
add
mov
sbb
or
add
test
outs
bound
test
pusha
fild
retw
aas
mov
call
aad
out
push
sahf
add
arpl
aas
and
push
sar
cmp
das
pop
aaa
inc
ja
lahf
xchg
imul
or
in
inc
push
push
and
adc
jl
inc
bound
adc
aam
movs
in
mov
or
not
fisttp
test
enter
ror
gs
push
cli
or
mov
mov
out
and
or
imul
pushf
neg
xchg
pop
adc
fld
jo
sahf
fadd
sbb
mov
js
cmc
sbb
fcmove
js
pusha
aad
stos
lahf
lock
mov
stc
dec
xchg
in
or
lds
cmp
push
outs
scas
out
mov
int
inc
not
sub
push
cmp
iret
test
lea
test
pop
hlt
cmps
adc
jge
inc
mov
mov
out
aam
pop
repz
call
inc
imul
jle
retf
(bad)
jbe
je
add
mov
mov
or
xchg
jl
dec
sbb
enter
and
xor
sbb
outs
pop
sbb
and
stc
dec
fdiv
sbb
sub
xchg
call
pop
mov
add
pop
mov
mov
shufps
ins
ret
push
dec
pop
lods
test
cmps
pop
jp
ja
fild
jbe
mov
mov
scas
pop
fs
retf
xchg
addr16
pop
jmp
cmc
jns
loopne
jecxz
ret
xlat
or
or
push
adc
leave
inc
int
dec
xchg
adc
sar
mov
out
pop
retf
hlt
movs
leave
cmp
sub
or
mov
inc
cwde
fwait
mov
and
stos
push
sub
fstp
inc
icebp
mov
push
hlt
mov
adc
bound
add
or
mov
push
mov
cwde
sub
mov
(bad)
xchg
cld
test
sbb
jb
sub
ds
sub
mov
push
sub
retf
imul
push
daa
jb
(bad)
dec
test
std
pusha
aas
call
repnz
das
sahf
cdq
jnp
je
imul
fdivp
mov
inc
(bad)
mov
inc
(bad)
mov
nop
xchg
mov
jl
jge
rcr
cmp
(bad)
push
cmp
jnp
aaa
xor
test
sbb
fisttp
inc
loope
dec
add
push
mov
sbb
sbb
ss
mov
fsub
shl
gs
repnz
push
test
pop
daa
mov
mov
mov
sbb
inc
outs
movs
or
fist
mov
test
add
aas
ja
mov
xchg
sbb
and
fwait
xor
sti
popf
add
fwait
mov
add
xchg
test
jb
or
lods
jbe
imul
out
int
xor
test
fld
sub
push
mov
mov
and
addr16
adc
cdq
mov
lds
scas
repz
rcl
icebp
mov
call
pop
mov
pop
in
call
mov
jnp
inc
test
lods
lds
jmp
ja
jmp
sbb
fs
mov
(bad)
inc
jae
inc
mov
or
mov
push
mov
dec
push
sub
test
rcl
leave
jg
mov
xchg
(bad)
(bad)
and
dec
int3
and
mov
or
pop
pop
fidivr
popa
(bad)
pop
pushf
pop
pop
lea
scas
xor
push
lahf
mov
pop
and
sub
xor
inc
bound
daa
mov
popf
cmp
cmps
sti
stc
test
fdiv
mov
std
sbb
call
std
scas
pop
das
adc
add
(bad)
sbb
in
pop
lods
add
cwde
sti
nop
inc
adc
movs
stc
mov
sahf
nop
fcmovnbe
out
pop
mov
mov
mov
call
(bad)
out
adc
movs
aas
push
push
mov
xor
lea
addr16
stos
(bad)
ds
xchg
xchg
inc
jne
sub
dec
mov
xchg
test
mov
div
ret
cmp
mov
enter
pushf
and
xchg
out
pop
pusha
pop
dec
push
pop
add
mov
pop
jmp
int
fwait
gs
loope
dec
retf
cmps
jmp
loopne
and
daa
pop
and
jg
sti
rcr
arpl
arpl
cmps
push
or
(bad)
mov
mov
enter
mov
inc
ror
jl
std
lea
mov
hlt
stc
lock
xlat
mov
sti
std
movs
or
clc
lods
jle
(bad)
dec
into
mov
sbb
mov
mov
xor
in
dec
adc
dec
add
hlt
mov
fucomi
inc
iret
jne
dec
and
xchg
enter
inc
outs
scas
jecxz
mov
push
call
cmps
cld
xor
push
fucomip
xchg
cmc
ins
out
add
sub
(bad)
out
sbb
jae
repz
(bad)
test
js
mov
inc
sti
xor
and
and
into
(bad)
fwait
jo
mov
scas
mov
ja
mov
aad
mov
mov
aas
ins
iret
jle
retf
inc
mov
mov
jmp
adc
(bad)
xor
xchg
mov
or
mov
cmp
(bad)
sub
or
mov
xchg
pop
jle
xchg
cld
adc
call
sub
push
push
nop
hlt
imul
inc
add
push
out
lods
(bad)
push
sbb
inc
pop
(bad)
arpl
jo
mov
xor
add
dec
jmp
sbb
push
shr
das
or
in
sub
daa
push
xor
div
mov
dec
ins
push
cmp
pop
(bad)
fimul
sbb
(bad)
mov
(bad)
mov
fsub
or
(bad)
pop
sbb
sti
int
int
push
js
jp
lahf
repz
movs
and
inc
mov
xchg
xor
ss
pushf
lds
stc
push
daa
mov
or
adc
or
leave
mul
lds
jg
sbb
jmp
mov
ret
lahf
rcl
mov
pop
push
mov
cmc
jmp
mov
aad
jb
jnp
fisub
outs
fs
add
stos
push
enter
mov
mov
jle
sub
mov
sub
outs
pop
(bad)
call
inc
retf
xchg
jae
pop
in
or
sti
add
out
jb
xor
push
sbb
cmps
pop
push
ins
push
sbb
outs
inc
ins
test
pop
cmp
and
inc
in
mov
adc
daa
jl
imul
test
imul
xor
pop
(bad)
fs
cmp
rol
gs
fwait
hlt
fisub
dec
mov
in
jns
inc
pop
rol
mov
mov
out
mov
jns
(bad)
sbb
cmc
loop
pop
mov
pop
adc
jmp
std
pop
call
aam
(bad)
sbb
jo
imul
leave
xchg
and
mov
call
sub
mov
lock
mov
push
out
dec
retf
mov
mov
aam
cmps
das
inc
pop
and
in
inc
or
cmps
push
cmp
xchg
jle
or
test
call
mov
pusha
xor
and
sar
out
mov
test
pop
scas
adc
dec
xchg
push
jnp
mov
dec
inc
or
mov
jecxz
inc
out
pop
jno
movs
lahf
fs
das
dec
mov
or
call
pop
dec
inc
fdiv
aas
pop
pop
xor
cdq
(bad)
out
cmc
jecxz
sub
pusha
inc
popa
in
out
add
test
or
mov
mov
and
add
imul
jo
xor
(bad)
rol
adc
inc
sti
int3
loopne
repz
xchg
retf
into
data16
out
jp
movs
jo
fs
dec
mov
pop
pop
and
clc
stc
mov
aaa
imul
(bad)
mov
pop
ss
pop
imul
lds
mov
or
retf
push
sbb
ins
inc
inc
cs
in
mov
sub
or
add
aaa
mov
loop
xor
cs
popa
xchg
dec
mov
test
dec
jns
mov
les
jbe
cmps
jo
xchg
jno
sbb
and
test
cld
imul
mov
jmp
scas
cmp
out
jmp
sub
call
mov
sub
scas
test
aam
xor
mov
jp
cmp
inc
and
sti
sbb
push
jg
dec
or
pop
dec
adc
push
addr16
mov
call
push
sahf
movs
add
ins
inc
(bad)
dec
ins
dec
pop
cdq
cwde
in
and
pop
mov
ror
call
xchg
or
movs
dec
clc
pop
or
mov
add
jle
xchg
mov
retf
mov
mov
jae
sbb
fsub
cmp
inc
adc
mov
adc
and
into
outs
pop
push
xchg
sub
scas
push
fcmovne
push
fcmovnu
retf
xor
lds
into
bound
fnstenv
xchg
into
rol
xchg
call
xchg
int
loope
rcr
mov
jno
jns
adc
mov
mov
cmovae
jno
cwde
mov
or
adc
ja
push
mov
retf
mov
gs
and
in
popa
pop
fucomi
mov
or
mov
out
ret
mov
jmp
cs
pusha
imul
xor
push
cmps
add
mov
aaa
scas
sub
jmp
inc
loopne
sub
sar
sub
mov
mov
aaa
mov
es
jecxz
cmp
push
xchg
push
inc
push
pop
jge
inc
dec
dec
add
dec
std
shr
test
dec
ror
test
jb
pop
inc
mov
les
mov
sahf
cmp
bound
fst
out
sbb
or
sahf
cmp
test
cmc
imul
pop
retf
jb
xor
jo
sbb
inc
mov
cmp
dec
hlt
out
popa
and
ret
jge
sub
adc
cmp
ret
jne
inc
ins
adc
xlat
sbb
jbe
aad
push
(bad)
xor
sbb
cli
das
jns
mov
push
push
jl
mov
popa
push
(bad)
js
rcr
fcomp
sub
imul
test
xor
mov
or
ret
push
into
js
loope
push
popf
fidiv
push
ins
iret
adc
cs
arpl
aas
outs
ret
cwde
or
das
fsubp
aam
stos
jb
shl
jo
js
pop
inc
mov
add
sub
aas
pop
aaa
test
or
inc
loope
(bad)
int
psubsb
mov
jns
cmc
dec
mov
cmps
adc
or
push
xchg
jp
call
adc
adc
sbb
mov
jge
clc
jne
mov
pop
dec
inc
retf
mov
jle
addr16
xor
out
mov
fwait
inc
push
mov
push
mov
movs
mov
mov
into
dec
xchg
call
sbb
ins
scas
test
jb
lahf
lds
adc
jbe
stos
outs
icebp
out
mov
dec
ret
pop
retf
fisttp
and
leave
fcmovbe
or
add
lods
jno
repnz
cwde
dec
cs
adc
mov
xchg
dec
mov
iret
cmp
ins
adc
sbb
mov
test
jnp
sub
inc
aad
movs
jmp
jae
sub
jp
push
or
(bad)
jecxz
lahf
clc
push
dec
mov
xchg
ret
stc
mov
mov
aas
jp
xor
out
pushf
inc
test
adc
or
int
cmps
out
or
adc
jle
add
ins
in
nop
pop
mov
pop
mov
fisub
push
cmps
xor
sbb
pop
outs
jbe
jmp
jo
xor
popa
int3
or
jnp
sub
leave
(bad)
push
fmul
mov
es
sar
jb
xor
push
in
js
mov
in
dec
popa
aad
jbe
pop
sahf
or
xor
push
outs
cdq
cmp
dec
xchg
outs
leave
cli
or
fs
sub
mov
mov
cmp
dec
or
repz
xchg
add
jno
or
daa
push
adc
mov
icebp
or
sbb
jge
loop
mov
lds
jo
rcr
ror
aad
xor
stos
xchg
cmp
push
cs
out
cmps
inc
sub
mov
xchg
mov
pop
xchg
pop
mov
cmc
sub
aaa
or
test
cmp
jle
fild
sbb
mov
xchg
rol
mov
int
inc
outs
xchg
jg
pop
test
sub
cmps
in
xchg
dec
xchg
neg
rcr
(bad)
(bad)
push
dec
sbb
enter
jecxz
sbb
or
retf
(bad)
and
push
dec
sbb
dec
xor
jg
sub
loopne
cmps
retf
mov
inc
pop
cmp
add
sub
mov
mov
sub
in
mov
jmp
mov
fnstenv
cmp
cmps
pop
and
jmp
xchg
cli
scas
xchg
adc
sbb
cmp
pop
popf
push
test
retf
and
jmp
jns
fst
aam
mov
push
arpl
or
out
fsub
jne
xchg
(bad)
add
cwde
bound
imul
ja
aam
xlat
pushf
shl
or
sahf
retf
leave
fs
sub
dec
push
cmp
add
hlt
out
in
loop
out
jecxz
scas
mov
into
jb
cmp
shl
dec
dec
movs
push
dec
pop
inc
push
cmp
out
sti
out
dec
call
ffree
sbb
xor
jnp
(bad)
out
xor
shl
adc
xchg
adc
retf
or
sbb
sbb
cmp
push
mov
ja
xchg
jo
pop
fild
repnz
sub
(bad)
add
add
cmp
aad
adc
xor
pop
xor
stc
std
mov
cmps
dec
retf
div
adc
dec
dec
mov
scas
mov
(bad)
mul
lods
cmps
adc
clc
dec
inc
push
sbb
push
mov
scas
dec
add
loope
mov
mov
jbe
xor
movs
fs
xor
sahf
mov
inc
fs
sub
je
imul
std
inc
adc
ss
imul
and
and
dec
inc
test
imul
push
add
aaa
(bad)
clc
ret
dec
mov
out
pop
push
imul
imul
lahf
sbb
fistp
xor
push
dec
xchg
ficom
fbld
pop
test
fwait
xchg
pop
mov
and
mov
(bad)
xchg
pop
mov
cs
jno
loop
repz
out
pop
cmp
mov
push
mov
push
xchg
mov
xchg
xor
mov
cmp
pop
imul
stos
adc
xchg
jl
in
popa
mov
in
xchg
js
mov
push
aam
push
mov
sbb
stc
mov
dec
or
cmp
iret
jp
(bad)
movs
int3
jns
cmps
inc
add
out
pop
and
(bad)
in
xchg
mov
push
jecxz
inc
mov
cmp
test
lods
nop
ins
push
add
inc
dec
xchg
xchg
mov
mov
dec
mov
pop
or
loopne
mov
iret
or
popf
dec
cmp
adc
inc
rcr
mov
xor
ds
ins
cmps
adc
push
lods
or
inc
xor
loop
dec
and
mov
mov
(bad)
mov
in
sahf
repnz
or
sub
jle
(bad)
int
outs
push
pop
adc
mov
in
jmp
sub
fsub
aam
ret
mov
retf
dec
not
repz
mov
xchg
push
cld
xor
sub
inc
inc
ss
push
xchg
or
std
and
ror
or
jge
js
and
add
xor
jno
into
cmp
cmp
(bad)
sub
clc
mov
std
popf
rcr
jecxz
iret
int
push
das
mov
push
push
loope
rcr
adc
and
cmp
or
aad
in
adc
mov
mov
sbb
cli
xor
test
inc
mov
retf
adc
adc
pop
mov
push
pusha
out
xchg
movs
sbb
add
push
push
cmps
push
pop
div
retf
hlt
iret
aad
mov
pusha
push
cmp
popa
in
in
sub
jo
leave
fst
xor
lahf
cmps
cmps
push
mov
gs
add
sbb
cmp
ret
or
jmp
adc
push
leave
je
dec
in
cld
imul
lds
cld
mul
(bad)
fsub
pop
or
test
or
push
idiv
push
nop
scas
or
gs
jmp
and
inc
cmc
into
cdq
loopne
fidiv
pop
(bad)
xchg
frstor
dec
fmul
jbe
int3
lea
cli
ins
push
sbb
xchg
or
pusha
mov
mov
sbb
aaa
mov
push
(bad)
iret
(bad)
adc
dec
call
lods
test
stc
push
call
mov
iret
pop
mov
jg
data16
pop
xchg
add
mov
jnp
scas
pop
xor
inc
adc
mov
push
sub
xchg
dec
in
aad
mov
pop
and
pusha
adc
cmp
dec
out
or
mov
call
push
and
pop
jg
push
jle
jecxz
(bad)
xchg
fs
push
pop
lahf
leave
sub
in
sar
xchg
dec
js
int
sahf
jmp
fist
cmps
adc
push
fstp
(bad)
mov
mov
and
push
ss
sub
retf
aaa
sbb
fcom
clc
das
sbb
mov
shl
fstp
stc
and
sahf
xchg
push
dec
xchg
shl
and
xchg
retf
(bad)
push
shr
or
push
or
(bad)
xlat
ins
outs
(bad)
and
mov
jmp
psubq
jns
and
push
pop
sub
div
scas
test
scas
jo
pop
or
add
stos
retf
fistp
data16
push
cld
(bad)
add
dec
adc
lahf
retf
mov
mov
cmp
push
mov
push
xchg
pop
cmp
dec
jge
push
sahf
int3
ds
loop
dec
int3
(bad)
jg
add
xchg
ins
xor
sar
mov
jno
cdq
adc
push
sub
in
cmp
adc
adc
outs
pop
repz
push
jmp
ja
shl
lea
cmp
mov
test
movs
mov
aad
retf
adc
and
or
sub
push
es
xor
imul
push
jno
rcr
syscall
jge
ds
mov
pop
je
xor
inc
sbb
test
inc
add
stos
ins
mov
adc
lock
inc
lods
int3
push
pushf
xor
fucomi
sub
pop
jae
mov
js
mov
(bad)
div
push
xchg
(bad)
pop
xchg
xlat
stc
nop
dec
pop
(bad)
pop
and
cmc
xchg
(bad)
inc
push
add
cmp
xor
inc
pop
not
adc
andps
fcomp
test
loop
xchg
cmps
fidiv
es
jnp
neg
jb
mov
mov
stos
mov
sbb
and
mov
pusha
lahf
rcl
mov
xchg
adc
daa
ds
stc
mov
lea
pop
mov
push
call
aaa
repnz
sbb
jp
fst
adc
lods
rcl
fdiv
ror
es
sbb
pop
loop
mov
icebp
push
cmps
sar
fwait
(bad)
out
cmp
retf
aaa
(bad)
es
fidivr
mov
push
cmps
and
cmps
(bad)
popf
or
or
inc
adc
pop
mov
add
pusha
call
scas
and
or
cmps
cmp
push
lock
cli
retf
jb
xor
xor
pop
mov
ins
in
mov
retf
mov
imul
inc
lock
call
pop
fsubr
add
xchg
push
xor
xor
mov
adc
xchg
(bad)
and
popf
jmp
dec
xlat
pop
(bad)
push
js
cmp
mov
push
or
push
out
mov
inc
jo
cwde
lahf
mov
test
int3
sbb
mov
or
jge
and
ds
cmp
sub
jne
cmps
daa
jns
pop
cmc
iret
in
pop
and
adc
mov
inc
fs
dec
push
in
xor
pop
xchg
jp
ficom
lock
sbb
adc
jbe
mov
or
add
ficom
mov
adc
je
jne
xor
mov
iret
icebp
jae
(bad)
repz
and
adc
fist
jnp
adc
shr
inc
mov
cdq
sbb
stc
and
mov
xchg
stos
rcr
adc
addr16
xchg
jne
inc
mov
pop
and
repnz
stos
sbb
movs
dec
outs
test
push
and
push
(bad)
dec
loop
ret
pop
sbb
scas
shl
mov
cmp
xor
repz
inc
hlt
js
dec
sar
ret
jb
mov
or
test
int3
les
jge
jne
or
mov
lea
sbb
lods
add
clc
dec
and
ins
cmp
adc
pushf
imul
and
inc
and
in
adc
inc
imul
mov
mov
rol
fcomp
int3
mov
dec
sub
iret
jge
jl
sti
and
xor
or
cmp
push
add
arpl
int3
mov
ss
xchg
fdivrp
cmp
sbb
rol
pop
not
or
inc
inc
xchg
out
retf
mov
out
xchg
and
adc
mov
nop
jmp
imul
or
mov
mov
scas
add
sub
aad
and
and
mov
iret
push
leave
aas
stos
nop
sub
fyl2x
fs
push
xor
add
xor
fsub
ret
div
xor
bound
shr
cdq
jmp
xchg
jge
xchg
nop
rol
ins
cmps
(bad)
xor
shr
mov
sub
retf
push
shl
push
mov
sub
int
sbb
je
ret
rcr
daa
jno
sub
test
test
imul
mov
mov
cmp
fmul
pushf
int
(bad)
xchg
adc
lods
sub
jnp
mov
sbb
pop
sbb
pop
std
add
mov
mov
cmp
cli
xchg
mov
ficom
(bad)
fiadd
mov
xor
(bad)
mov
(bad)
xor
bound
fs
jb
sub
add
std
mov
add
not
test
push
cmp
inc
mov
add
adc
xor
sub
dec
sbb
aad
jnp
jnp
loope
test
ins
jg
add
out
hlt
dec
and
mov
js
dec
(bad)
fstp
out
in
fwait
(bad)
dec
mov
mov
dec
fisubr
(bad)
jl
fisubr
inc
int3
imul
xchg
mov
cmp
mov
rcr
enter
pop
jne
push
ins
fidiv
or
jg
cmps
inc
adc
pop
popf
fsubr
xor
imul
xor
cmp
push
sar
out
sbb
add
cmp
in
and
inc
mov
bound
iret
(bad)
fsubr
mov
xchg
jne
iret
and
dec
jo
addr16
mov
(bad)
sub
xor
sbb
out
dec
xor
xor
mov
push
pop
add
rcr
jno
shr
or
dec
push
push
movs
add
sub
and
dec
loop
in
das
dec
xchg
mul
jae
fyl2xp1
pop
popf
test
cmp
jne
push
sub
push
and
inc
dec
sub
movs
xchg
neg
inc
ret
mov
outs
mov
and
jle
mov
mov
aas
aaa
data16
inc
xor
inc
jnp
push
adc
sbb
or
push
mov
xor
dec
sub
cmp
les
xchg
aad
cmc
sbb
fiadd
or
sti
push
inc
adc
call
mov
gs
inc
jne
js
sub
dec
in
dec
fcomip
mov
stos
ret
mov
mov
sahf
iret
add
jge
cwde
dec
push
je
and
daa
sbb
push
cmp
cmp
dec
xchg
mov
icebp
dec
or
push
lods
mov
mov
(bad)
xchg
cmps
mov
leave
(bad)
mov
xchg
loop
push
call
or
mul
jmp
sub
ficom
xchg
lods
inc
imul
xchg
rdmsr
jge
sbb
inc
xor
fsubrp
sbb
cld
ror
test
pop
dec
inc
(bad)
jmp
in
mov
pop
mov
sbb
retf
test
xlat
mov
jns
(bad)
pop
daa
je
xor
retf
xor
fadd
push
call
in
jno
lahf
clc
popa
ss
inc
dec
jae
mov
out
pop
xor
scas
fidiv
cmps
std
or
mov
repz
jg
hlt
mov
pop
xchg
pop
je
test
popf
mov
out
and
add
sbb
add
retf
jae
sbb
inc
stos
jmp
dec
dec
mov
rcr
jo
mov
dec
mov
inc
lods
cmp
test
jg
cmp
pushf
mov
cmps
(bad)
cli
lods
jo
mov
adc
out
add
mov
ret
sub
inc
enter
daa
add
in
jl
dec
fiadd
push
fnstsw
fdiv
push
cmp
pop
jg
aad
lods
inc
out
(bad)
jmp
mov
(bad)
ds
add
xor
dec
jno
mov
fisubr
int3
inc
mov
loop
mov
nop
stos
popa
or
in
adc
inc
lahf
dec
mov
icebp
jbe
lods
mov
retf
out
mov
stos
aaa
mov
ror
pop
or
mov
push
cwde
sbb
(bad)
aaa
push
add
dec
into
lock
pop
fs
enter
adc
retf
and
pop
dec
cmc
nop
(bad)
loope
mov
lds
or
das
jle
mov
jmp
scas
adc
xor
mov
rcl
sbb
jb
loop
cmp
dec
sub
adc
out
xor
mov
std
mov
lahf
ror
dec
outs
bound
outs
sbb
fsub
dec
xor
add
adc
aas
push
jge
popa
sub
inc
mov
pusha
or
push
add
ins
cmp
lods
jmp
and
ss
mov
xchg
movs
jge
and
popf
push
inc
xor
dec
cmp
xor
mov
pop
loopne
add
loopne
inc
out
or
xchg
mov
add
xchg
inc
sbb
and
xor
mov
in
inc
data16
fst
pushf
dec
pop
rol
jge
addr16
ds
adc
scas
xadd
loopne
outs
test
ins
adc
shl
inc
xor
fiadd
push
mov
adc
push
mov
in
cmp
fild
dec
and
mov
(bad)
in
js
push
xchg
(bad)
pop
cmps
popf
jge
test
cmp
mov
inc
jp
push
test
mov
in
and
xlat
mov
pop
mov
inc
sbb
lock
lahf
fwait
inc
pop
mov
mov
jne
into
fld
dec
pushf
pop
push
jp
sti
and
sbb
pop
push
mov
xchg
jno
xchg
call
loop
popf
mov
retf
dec
daa
push
sub
mov
sbb
sahf
call
cmps
movs
popa
jge
into
dec
dec
(bad)
popa
rcr
fwait
mov
xor
adc
and
jnp
sbb
out
data16
daa
in
jnp
add
mov
mov
aam
sbb
sbb
and
cmp
stos
out
push
nop
jo
movs
push
aad
mov
cwde
pushf
pop
push
out
sbb
push
xor
sbb
jge
jp
popa
pusha
inc
dec
ficomp
sub
test
frstor
test
add
lods
dec
push
ret
test
adc
push
pop
inc
and
xchg
inc
xchg
out
mov
aad
or
inc
out
xchg
add
ds
dec
push
call
imul
pop
cmps
pop
xchg
cmp
test
stc
out
lods
loope
cmp
xor
cdq
sbb
jmp
sub
jae
inc
mov
mov
and
lea
sti
(bad)
sub
cli
lods
and
popa
adc
cmp
jge
xchg
add
sub
movs
mov
scas
fwait
jmp
ret
add
xor
mov
pop
or
xchg
mov
fwait
imul
rcr
cmps
mov
pop
add
and
push
pop
lock
dec
sbb
or
ret
xor
(bad)
test
out
pop
push
test
mov
mov
mov
xchg
push
repz
mov
inc
test
jne
fwait
push
in
(bad)
aad
inc
pop
hlt
cs
push
push
mov
retf
inc
aaa
push
test
jmp
adc
iret
sbb
fiadd
pop
(bad)
in
xchg
repnz
add
inc
imul
xlat
lods
loope
icebp
(bad)
enter
ret
and
adc
data16
jle
and
mov
sub
jg
fisttp
and
icebp
adc
jp
inc
pop
sbb
sti
sub
cli
pop
pop
jnp
mov
or
xor
pop
cs
push
test
leave
ficomp
lods
pop
xor
pop
idiv
shl
popf
mov
pop
jle
push
xchg
inc
sub
std
lods
pop
arpl
test
cmc
(bad)
aas
dec
imul
into
mov
cld
ins
sbb
popa
and
(bad)
xchg
ins
nop
add
mov
das
imul
pop
fs
jno
clc
sbb
inc
mov
imul
and
push
mov
mov
or
lock
rcl
mov
dec
fild
ds
xor
stos
in
sbb
mov
js
into
shr
fs
icebp
inc
push
lock
xchg
movs
xchg
dec
sti
inc
fnstenv
je
call
push
or
imul
or
push
(bad)
je
addr16
cmp
jp
mov
out
sub
pop
cmp
inc
out
push
into
(bad)
div
sub
loope
inc
retf
lock
shr
aam
fldenv
pop
push
daa
addr16
mov
sbb
test
repnz
retf
push
jmp
cmc
fsubr
popa
inc
leave
cli
sbb
out
cs
push
adc
mov
retf
mov
sub
sub
hlt
cli
jp
mov
xchg
stos
sub
inc
mov
inc
es
xor
adc
dec
cdq
adc
mov
in
xchg
pop
push
or
xor
pop
pop
test
push
dec
inc
lds
mov
push
int3
push
ror
into
mov
push
push
push
scas
dec
and
mov
imul
ins
dec
sbb
pop
sbb
hlt
mov
xor
imul
push
jns
lock
sub
jecxz
les
and
push
or
cs
in
pop
mov
add
out
push
mov
xchg
push
clc
xor
hlt
mov
xchg
jmp
or
dec
xchg
cld
div
jmp
rcl
adc
sbb
aad
popf
mov
adc
scas
dec
inc
inc
sub
clc
mov
adc
in
rcr
daa
add
pop
cli
xor
pop
mov
cmp
dec
push
ret
xchg
in
scas
xchg
dec
bnd
cmp
aad
int
sbb
and
stos
or
sub
mov
lods
push
mov
popa
push
dec
mov
or
xor
sub
xchg
movs
jmp
jp
mov
jle
out
loopne
mov
cmp
sub
scas
gs
cmc
iret
movs
jp
add
xchg
jae
adc
jge
mov
int
adc
mov
sub
(bad)
neg
jno
lea
retf
(bad)
pop
mov
cmp
and
fsubr
push
cmps
jg
and
jbe
xchg
je
neg
mov
xchg
push
xlat
(bad)
mov
add
adc
out
pop
lods
inc
rcr
mov
ss
cmp
jno
add
jle
test
test
sub
and
mov
mov
shr
icebp
addr16
adc
inc
addr16
ret
dec
cmp
jmp
sbb
xchg
dec
(bad)
mov
sub
into
hlt
movs
ds
mov
in
xor
pop
dec
into
les
and
jo
fnstenv
jl
mov
sub
adc
and
and
data16
adc
mov
sahf
cmp
mov
(bad)
daa
leave
mov
or
repnz
pusha
imul
mov
fimul
sbb
frstor
in
ror
stos
test
dec
xchg
(bad)
pushf
bound
bound
mul
jmp
inc
or
mov
test
pop
shl
retf
cdq
lods
mov
loopne
sbb
cmc
mov
jmp
push
aad
lds
outs
pusha
stos
xlat
mov
daa
mov
out
push
pushf
ret
into
sub
fs
dec
(bad)
mov
push
adc
adc
pop
int
stos
adc
adc
(bad)
imul
mul
ins
in
cmp
pop
shl
lahf
ret
dec
adc
lea
jo
shr
ins
pop
cs
xor
lock
dec
aam
or
mov
mov
dec
add
repnz
in
mov
cmp
lea
pop
dec
cs
mov
lods
(bad)
inc
jle
pop
movs
inc
xchg
mov
data16
or
mov
pop
add
adc
(bad)
xlat
packssdw
test
movs
mov
xchg
push
mov
add
xchg
jmp
cmp
xchg
xor
push
fsubrp
bound
call
mov
jbe
lahf
shl
pop
xor
cmp
mov
and
jge
call
dec
inc
sahf
mov
test
mov
das
mov
lods
mov
jmp
sub
test
or
sub
rcl
lahf
cmc
movs
xchg
pop
and
aaa
jmp
stc
push
pop
dec
inc
pop
mov
out
fisubr
in
dec
pusha
mov
loop
scas
(bad)
outs
dec
mov
enter
xor
cmp
sub
(bad)
xchg
inc
and
mov
mov
xchg
ret
and
jmp
mov
ror
ror
cmc
in
push
mov
ja
mov
add
and
lea
or
cld
jb
lahf
out
mov
call
pop
ror
adc
inc
fst
xchg
inc
(bad)
inc
or
dec
aas
add
bound
inc
mov
inc
dec
jge
pop
xchg
sbb
hlt
fimul
test
add
imul
nop
xchg
push
test
dec
(bad)
shl
pop
adc
jmp
std
outs
lea
adc
fstp
xchg
add
add
add
aad
inc
loop
pop
imul
fidivr
sub
or
mov
cwde
mov
call
pop
push
retf
movs
sahf
int3
and
imul
or
pop
or
movs
(bad)
jmp
inc
adc
lds
mov
xchg
sub
stos
xchg
call
aas
in
call
xchg
scas
push
jge
add
jg
fldcw
repnz
or
rcr
aas
out
mov
call
or
jno
jmp
and
jnp
jmp
sub
push
push
push
cmp
push
mov
fwait
push
in
jmp
movs
sbb
add
stc
pop
push
ret
mov
pop
cld
mov
push
imul
int3
mov
leave
(bad)
in
mov
mov
pop
(bad)
retf
add
xor
push
dec
sbb
js
test
mov
test
dec
addr16
xor
mov
and
ret
ror
popa
pop
or
loope
cld
es
sub
xor
mov
int
inc
mov
mov
movs
movs
push
aas
xchg
retf
mov
jg
and
out
inc
ret
ss
xchg
xchg
cli
or
push
scas
mov
push
cmp
or
xor
dec
pushf
pop
jo
fisub
or
gs
pop
icebp
add
movs
mov
retf
into
mov
mov
cmps
push
sub
cmp
cmps
sbb
test
ins
ins
mov
mov
mov
aad
xor
cmc
or
gs
cmp
sub
adc
inc
and
arpl
int3
in
pop
pusha
xchg
test
jo
xchg
cli
loopne
dec
fwait
packssdw
pop
cmp
vmovups
sbb
out
pushf
jno
mov
in
jnp
adc
stos
cmp
inc
adc
mov
jl
daa
ret
test
dec
mov
test
out
pop
pop
xor
iret
dec
fldenv
mov
jecxz
add
push
mov
cmp
fistp
push
mov
out
pop
jmp
mov
xchg
dec
test
or
repz
cli
fucomi
jmp
ins
lock
loope
fld
inc
call
je
pushf
(bad)
imul
inc
pop
retf
push
cmp
(bad)
sub
xchg
ins
sbb
ja
(bad)
push
mov
test
rcr
test
and
or
aas
iret
outs
popf
sbb
mov
jg
jmp
aam
pop
mov
mov
inc
and
xor
xchg
cmp
xor
dec
mov
movs
jne
lods
lods
fsubr
mov
lahf
fucomi
xlat
mov
cmp
test
or
fs
jp
pop
cdq
out
push
mov
and
and
test
xchg
inc
repz
and
scas
(bad)
mov
sub
xlat
cmp
jne
inc
test
ret
stos
aad
adc
mov
inc
aaa
ret
adc
mov
ins
into
add
push
mov
mov
outs
pop
outs
pop
(bad)
aas
jb
sbb
mov
cmp
push
rol
xlat
xor
movs
test
test
mov
lahf
in
std
cmp
push
ja
inc
jl
ds
cmp
adc
add
xor
mov
cmp
mov
or
inc
addr16
cmp
cld
ror
jns
(bad)
int3
or
test
mov
xor
nop
mov
ins
adc
or
hlt
(bad)
(bad)
inc
push
leave
loope
and
inc
or
add
bound
imul
pop
adc
inc
js
dec
add
mov
shr
stc
loop
cmp
xor
pusha
jmp
cmp
loop
mov
cmp
call
enter
ret
mov
test
mov
rol
jmp
cmp
je
xchg
jmp
lahf
xor
pop
ins
jne
in
in
pop
or
ins
xchg
int3
sbb
mov
xlat
rcl
pop
clc
mov
je
pop
mov
enter
loopne
imul
outs
add
outs
mov
(bad)
jae
mov
fwait
jle
push
pop
ins
and
pop
das
sbb
rcr
rcl
loopne
mov
ficomp
pop
in
repnz
push
ret
inc
add
test
lods
inc
dec
sbb
loopne
pushf
xchg
aas
sbb
push
push
scas
mov
and
adc
push
cvtps2pi
in
repnz
pop
loop
jae
xor
or
mov
inc
scas
das
or
inc
lea
xchg
aaa
int
jne
ret
cmp
addr16
pop
add
sbb
leave
inc
ficom
xchg
jecxz
xchg
pop
dec
mov
outs
or
push
lods
or
mov
inc
imul
aaa
jo
push
repnz
cmp
(bad)
div
(bad)
ds
push
push
mov
(bad)
ins
add
loop
(bad)
test
inc
pusha
(bad)
pusha
or
push
xor
std
rcr
xor
(bad)
or
mov
std
xchg
mov
sub
test
cmc
or
(bad)
jb
hlt
and
ret
aas
out
lock
popa
lods
scas
lods
enter
inc
icebp
and
retf
adc
inc
es
ins
sbb
xor
inc
lea
mov
into
cmp
jb
ss
addr16
(bad)
fistp
loop
push
cs
loopne
xor
ins
jbe
push
pop
rcr
xchg
hlt
cli
mov
ror
in
jae
popf
or
mov
aaa
rcl
stos
or
pop
cmps
imul
adc
sub
mov
retf
ja
inc
xor
jmp
sti
sahf
sbb
int
jmp
cmp
dec
push
popf
sub
mov
out
mov
push
out
cmp
sahf
or
cmps
stos
mov
(bad)
ins
inc
les
sar
mov
xchg
pop
mov
adc
sahf
jae
or
or
bt
aam
mov
cli
mov
in
sub
imul
test
jge
or
cmps
push
dec
cli
xchg
adc
cmp
inc
mov
pushf
rol
mov
pop
dec
js
fldenv
vpshaq
cdq
jbe
xor
scas
rdtsc
rol
shl
jmp
mov
jb
(bad)
mov
pop
ss
mov
sbb
push
dec
pminub
shr
push
ins
mov
push
mov
jnp
push
mov
test
ja
imul
popf
xchg
xchg
fnstsw
xchg
and
hlt
movs
gs
adc
or
xchg
mov
stos
dec
mov
add
js
aam
xchg
push
mov
in
lds
cmp
out
jge
pop
das
add
cld
popf
or
lds
rcl
adc
jecxz
dec
and
jp
sbb
pop
clc
pop
push
or
push
sbb
xor
jbe
push
jp
(bad)
retf
(bad)
shl
xchg
sub
mov
mov
inc
xchg
shr
loop
pop
lahf
je
jmp
sar
in
push
xchg
mov
outs
adc
scas
(bad)
movs
cmps
cs
cmps
jmp
jmp
out
sub
jb
fimul
add
push
xchg
(bad)
add
add
outs
push
and
sbb
js
das
(bad)
je
mov
jl
aam
aas
clc
inc
rcl
cmp
movs
mov
in
xchg
and
and
ins
cmp
pop
out
loop
in
jo
out
dec
into
outs
dec
add
and
test
movs
mov
xchg
das
mov
inc
ret
sti
and
aaa
jne
dec
jae
repz
call
inc
clc
retf
mov
inc
loope
cld
pop
arpl
xchg
mov
mov
mov
dec
fcmovnbe
dec
call
mov
or
xor
iret
lods
(bad)
sub
mov
fcmovnu
jmp
in
and
into
xchg
call
pop
or
aas
mov
mov
in
push
xchg
aad
or
push
ds
ins
imul
mov
ret
push
mov
inc
mov
mov
xchg
retf
bnd
or
sbb
shr
mov
pop
cwde
cmps
and
lgs
push
(bad)
scas
xchg
jecxz
inc
test
push
aam
adc
cli
xchg
xor
out
retf
dec
xchg
push
hlt
jle
push
test
mov
pop
adc
xchg
cs
jnp
movs
iret
sbb
(bad)
inc
out
xchg
xor
pop
inc
out
sti
iret
xor
sbb
mov
cmps
sbb
cmp
mov
fldenv
(bad)
mov
cmc
imul
test
retf
addr16
and
stos
imul
(bad)
cld
stc
xor
add
xchg
xchg
inc
mov
add
adc
jns
pop
mov
std
dec
and
mov
sahf
add
xchg
fistp
adc
mov
xchg
arpl
pop
test
push
loop
pop
int
cmp
jg
inc
dec
iret
push
adc
clc
and
les
sbb
enter
or
inc
lock
jmp
xor
repz
adc
or
ret
cs
cmp
mov
cs
push
xor
cmps
cdq
pop
xor
rcr
and
adc
and
(bad)
mov
push
fs
(bad)
xchg
sbb
jbe
push
je
scas
leave
xchg
sti
fdiv
push
sub
add
div
or
das
fadd
jbe
js
cdq
and
jl
jl
ss
inc
jge
lods
jno
inc
fcomp
jmp
mov
pop
mov
or
pop
stos
dec
cli
cmp
imul
add
adc
jb
pop
inc
mov
sub
stc
add
push
mov
xchg
mov
(bad)
mov
fcmovnbe
inc
sbb
imul
test
in
adc
imul
dec
sub
pushf
push
dec
push
xor
add
inc
mov
loop
shl
int
test
stc
dec
jle
test
out
and
outs
shl
mov
stc
adc
(bad)
mov
jne
xchg
mov
fadd
ins
neg
cli
sub
loop
clc
and
mov
cmc
in
outs
mov
dec
jae
xchg
movs
jne
rol
jmp
fdiv
mov
and
cmp
nop
jge
lock
out
mov
ficom
push
shl
jecxz
sbb
cmp
hlt
fild
add
push
xor
sub
repz
dec
movs
add
jle
mov
dec
imul
movs
push
movq
repz
sub
or
inc
sub
mov
jmp
cdq
inc
adc
mov
bound
clc
outs
jmp
in
cmp
mov
or
sub
inc
jb
xor
xchg
push
test
jo
pop
cli
pop
les
xor
push
daa
test
dec
cmp
xor
pop
jp
leave
cmps
push
mov
or
mov
pop
mov
sbb
mov
das
xchg
jmp
xchg
and
mov
cwde
enter
cmp
inc
bound
fdivp
jae
pop
mov
sub
sub
and
mov
repnz
test
xor
int
mov
dec
jnp
in
loopne
push
push
sub
stos
inc
sti
xchg
add
iret
xor
sub
xchg
cli
ins
or
leave
pop
adc
xor
fld
out
daa
xchg
or
xchg
mov
xor
xchg
mov
mov
or
cmp
push
and
fwait
mov
aas
js
jp
push
(bad)
mov
mov
nop
sar
scas
or
sub
mov
xor
and
(bad)
popa
and
data16
jmp
jmp
ins
mov
retf
mov
(bad)
enter
out
pop
movs
sub
stos
pusha
es
cdq
dec
daa
ds
imul
xor
retf
cli
pop
push
pop
mov
(bad)
stc
shl
fisubr
popa
mov
pop
push
sbb
loope
fistp
dec
xchg
repnz
lea
mov
mov
mov
not
dec
sub
dec
mov
(bad)
aas
sub
inc
mov
push
mov
or
out
mov
out
xor
sub
dec
stos
dec
daa
or
dec
push
inc
in
sub
push
into
jnp
ins
mov
and
js
ret
arpl
add
les
mov
xor
mov
mov
sbb
(bad)
mov
stos
retf
retf
inc
pop
dec
xchg
inc
push
and
call
push
rcl
xchg
dec
sub
add
std
xchg
add
retf
mov
(bad)
popf
add
pop
mov
iret
sbb
or
(bad)
movs
movs
jbe
fsub
or
repz
int
push
mov
mov
loope
out
sub
fwait
mov
and
dec
and
stos
push
xor
jmp
outs
ror
mov
dec
adc
sbb
int
arpl
sbb
cmp
or
scas
sbb
or
fprem
into
mov
jns
jne
das
bound
jp
inc
nop
mov
jae
mov
sar
scas
mov
call
jnp
pop
and
mov
add
outs
xchg
push
mov
sbb
out
mov
mov
cmp
mov
cmc
loope
(bad)
mov
xor
jns
pop
mov
dec
aam
adc
test
adc
aas
jmp
dec
adc
jb
xchg
fstp
ret
sub
jmp
xlat
loope
iret
and
add
ret
xchg
loope
cmp
call
jb
inc
retf
fwait
inc
push
jb
and
fdiv
mov
fwait
lods
ss
pop
loopne
ja
cmp
inc
dec
cmps
movs
pop
adc
repnz
dec
inc
retf
mov
mov
sti
lahf
or
repnz
add
mov
retf
pop
lods
inc
bound
inc
cmp
pop
mov
out
aaa
lock
aas
aam
aam
arpl
aad
data16
dec
bound
jl
adc
icebp
mov
pop
dec
lods
or
dec
(bad)
cmp
fist
test
inc
mov
or
ss
mov
xchg
rcl
dec
sahf
out
aam
cmps
or
pop
jnp
imul
and
aam
out
add
out
jle
xchg
xor
mov
or
mov
mov
xchg
or
jmp
(bad)
es
not
(bad)
lock
adc
movs
and
stc
aam
jbe
ins
fst
lahf
xor
push
jnp
pop
jae
adc
dec
(bad)
sub
call
stos
(bad)
sbb
int
aaa
inc
adc
jg
pop
inc
and
pop
iret
arpl
ror
jae
ins
jecxz
dec
cmp
and
fsubr
iret
mov
retf
mov
jae
cmps
push
and
adc
outs
rcl
leave
mov
fucom
mov
or
int
push
sbb
and
jmp
into
adc
jge
aaa
retf
push
mov
pop
jae
daa
mov
fmul
push
stc
adc
mov
jb
push
rcl
imul
mov
fdiv
loop
push
into
push
xchg
mov
and
sahf
js
or
int3
loope
daa
adc
outs
or
push
outs
mov
jb
lea
push
sub
xchg
dec
mov
(bad)
loopne
mov
cdq
xor
push
call
aad
dec
popf
out
lods
and
inc
retf
jae
lea
mov
add
mov
or
in
add
adc
in
inc
xchg
leave
add
jmp
hlt
and
xchg
add
jae
adc
es
addr16
in
push
xchg
pop
pop
jp
jge
rcr
pusha
mov
mov
cmc
push
imul
div
(bad)
loopne
adc
pusha
call
cmp
or
dec
add
popa
xor
arpl
mov
in
mov
and
in
pop
popf
and
xor
cmp
sub
in
lds
ins
mov
ins
retf
ret
jmp
popf
pop
movs
mov
dec
shr
and
add
fbld
add
cmp
jl
xchg
mov
pop
loope
add
ret
xchg
inc
rcl
jnp
add
imul
add
jns
shl
inc
push
cmps
or
push
or
push
adc
and
pop
retf
retf
mov
fbld
iret
popa
xor
xor
push
pushf
and
push
pop
inc
aam
out
dec
cmp
ret
popf
dec
jmp
in
iret
xchg
and
lea
in
sar
test
inc
cmp
dec
cli
mov
pop
call
(bad)
xor
push
inc
cmps
pop
mov
sbb
xlat
pop
idiv
sub
(bad)
and
inc
popf
iret
leave
das
dec
pushf
xchg
sub
pop
mov
ds
in
push
jb
ret
es
fxtract
mov
inc
sub
out
popf
cwde
jp
rcl
sub
or
adc
add
jg
loopne
mov
adc
and
sbb
push
adc
mov
hlt
jo
push
jecxz
dec
rol
push
aam
int
sub
(bad)
dec
call
loopne
jle
mov
jns
dec
or
inc
xchg
pop
stos
cmps
stos
jg
mov
inc
jecxz
popf
outs
imul
test
xchg
(bad)
pop
lds
pop
(bad)
cmc
dec
and
cmp
and
inc
sub
cmp
mov
push
icebp
or
std
push
in
or
dec
out
jno
cmp
div
in
xchg
je
push
xchg
ret
(bad)
jo
xchg
pop
or
cmp
cmp
jae
loope
ret
push
lods
daa
ror
pop
inc
adc
pop
pop
outs
int3
retf
mov
aad
adc
sbb
fxch
adc
inc
aam
ja
hlt
repz
xchg
ja
jge
aaa
(bad)
jns
dec
popa
sti
xchg
xor
inc
pushf
jmp
add
mov
call
(bad)
outs
pop
neg
nop
cli
dec
aas
gs
jle
movs
xor
rcr
out
pop
mul
pop
mov
cmp
(bad)
fisubr
cmp
push
sbb
xor
test
adc
jno
fcomp
lods
fwait
call
icebp
mov
cmp
xor
mov
push
mov
std
(bad)
push
mov
cli
mov
fist
adc
pop
adc
inc
fnstenv
iret
std
dec
add
hlt
stos
arpl
pop
mov
cmps
fcom
out
into
in
imul
xchg
int3
int3
gs
adc
or
ins
(bad)
push
test
or
(bad)
jns
inc
rol
mov
gs
out
mov
mov
push
lods
imul
pop
cmps
mov
addr16
mov
in
lods
xor
sti
xchg
clc
popa
ja
imul
mov
mov
mov
call
out
sbb
addr16
or
push
xor
push
clc
fs
push
pop
cmp
jl
adc
not
add
xchg
in
(bad)
iret
lods
cmp
ret
enter
fdivr
retf
test
adc
jmp
pop
maxps
mov
outs
scas
out
nop
mov
dec
add
pop
int3
dec
and
push
fisttp
lods
push
dec
xor
sub
ja
adc
mov
jnp
xor
pop
mov
jb
arpl
xchg
push
outs
cld
(bad)
adc
xor
ret
cmp
int3
stc
lods
sbb
add
loope
inc
jg
jns
mov
call
fisttp
iret
addr16
cli
and
sub
pop
sahf
std
mov
les
inc
(bad)
mov
int3
pusha
repnz
inc
xchg
neg
mov
loop
add
rcl
cmps
retf
cmps
sub
ficom
cs
js
int3
fisub
lods
fldenv
shr
xchg
cmc
ffree
jne
sar
sub
cmp
pop
xor
sbb
lock
jmp
lods
(bad)
rcl
dec
int
fst
mov
inc
fucomp
or
ret
sbb
cmp
and
fld
pop
mov
inc
jbe
fcmovnbe
pushf
mov
cmp
hlt
test
test
sub
pushf
aaa
jb
(bad)
inc
adc
sar
add
rcl
push
js
push
lea
dec
stos
movs
fs
pusha
cs
mov
xchg
push
mov
mov
pop
jl
xchg
in
pop
cmp
ds
push
sar
sbb
xor
inc
inc
mov
push
jg
inc
je
out
gs
pop
call
xchg
je
ror
sbb
int3
imul
data16
cmc
ret
retf
jmp
test
les
retf
xor
mov
sub
sbb
cmp
cmps
pop
movs
mov
repnz
sbb
ins
mov
(bad)
xchg
mov
mov
mov
loopne
mov
or
dec
pop
les
stc
das
cs
adc
pusha
jno
pop
mov
mov
inc
jl
les
jne
add
dec
mov
out
sti
shl
pop
xor
stc
and
rol
sub
xchg
rcr
sbb
xchg
fwait
dec
scas
retf
sbb
daa
push
jne
jbe
test
pop
into
outs
pusha
inc
ins
popf
push
inc
pop
cmp
or
cmovs
cmps
shl
cmp
dec
adc
and
adc
ss
lds
int3
scas
sub
add
cli
test
jp
mov
mov
mov
lods
cmc
jmp
add
jnp
pop
je
in
jbe
mov
adc
ret
push
gs
pop
int
imul
add
pop
jmp
fwait
in
cdq
push
ret
adc
or
pop
mov
fidivr
cmp
cmps
movs
mov
sbb
mov
jnp
xchg
and
ins
pop
mov
addr16
and
mov
(bad)
jns
out
mov
mov
bound
scas
jne
in
pop
pop
outs
ret
push
repz
xchg
cmp
mov
mov
xchg
hlt
jle
push
aam
jecxz
push
and
retf
sub
add
xor
cmp
outs
ret
shl
sub
jg
sub
inc
inc
adc
shl
call
ds
std
jno
and
cs
sub
call
jno
aas
or
jl
xchg
repnz
dec
pop
mov
jle
ins
jb
fidivr
jb
call
iret
outs
pop
(bad)
pop
mov
and
push
jmp
cmp
adc
mov
test
push
jg
cli
repnz
sbb
dec
test
and
pop
sbb
iret
or
mov
sub
jmp
arpl
into
add
iret
mov
sub
adc
inc
sbb
in
(bad)
dec
and
sub
stos
(bad)
mov
(bad)
lahf
mov
or
mov
aad
lods
out
push
dec
xlat
pusha
leave
xor
ins
jle
rol
and
jbe
inc
sub
sahf
mov
dec
push
sbb
add
mov
mov
pop
outs
inc
pop
and
loope
sub
or
dec
and
sbb
xchg
rcr
call
retf
ins
mov
clc
xchg
shr
scas
cli
(bad)
and
sbb
addr16
and
retf
and
jnp
mov
xchg
(bad)
out
dec
and
push
jb
shl
cdq
data16
cmp
xor
xchg
cld
adc
and
les
ret
mov
bound
or
fwait
lods
outs
sbb
pop
xlat
push
sub
add
jbe
jge
add
(bad)
nop
push
xchg
daa
adc
adc
call
stos
inc
xor
stos
and
lock
and
int3
imul
mov
(bad)
(bad)
lods
lea
jns
or
cmovb
and
adc
mov
adc
fcomp
dec
and
adc
mov
stos
add
inc
(bad)
movs
shl
add
ins
jp
outs
dec
std
jns
xor
jp
hlt
mov
mov
das
icebp
int
sbb
dec
js
das
pop
movsx
enter
jae
cwde
jae
pop
sub
icebp
pusha
into
jecxz
lods
mul
scas
xchg
out
pusha
pop
dec
sub
xchg
add
sbb
xchg
mov
inc
mov
push
into
mov
mov
cmp
pop
jns
stos
sub
movs
xor
inc
pop
into
ins
mov
pusha
rol
mov
(bad)
stos
ret
test
mov
mov
cmp
xor
add
xchg
smsw
pop
out
mov
shl
mov
ins
(bad)
movs
dec
ret
aam
push
stos
sub
push
pop
mov
in
out
xchg
pop
ds
xor
dec
add
lock
(bad)
sbb
ins
push
movs
cmp
add
pop
jnp
cdq
or
gs
mov
push
(bad)
jae
pop
jmp
mov
adc
jecxz
jns
mov
aaa
sar
jno
ja
fwait
jbe
loopne
cmp
test
ins
cdq
mov
pushf
(bad)
in
cmp
inc
sti
stos
or
scas
sti
jl
xchg
lock
inc
dec
aas
inc
jno
or
sbb
std
jbe
iret
rcl
out
sbb
xor
shr
pop
xor
xor
and
and
xor
mov
adc
retf
shl
dec
sahf
jne
mov
mov
imul
jp
jp
(bad)
mov
push
mov
inc
stc
out
xchg
jecxz
mov
or
xor
sbb
out
jmp
in
sbb
adc
pusha
push
xor
inc
inc
dec
sysexit
imul
inc
pop
or
fsub
pushw
ret
mov
add
sbb
in
mov
ret
or
outs
ss
sti
mov
dec
xchg
push
pop
push
repz
hlt
mov
add
cmp
cdq
data16
mov
outs
fistp
dec
mov
call
iret
and
push
pop
jp
dec
or
loop
fs
pop
fidivr
cwde
pop
(bad)
push
je
ret
ror
ins
jbe
popa
(bad)
sahf
ins
cmp
adc
pop
fdivp
push
xor
cmp
rcr
inc
add
add
lods
(bad)
xlat
pop
mov
ret
inc
or
das
add
in
or
fst
fsubr
aad
mov
adc
popa
push
je
nop
mov
sub
mov
hlt
jnp
mov
push
xor
hlt
or
mov
retf
sub
popa
fiadd
mov
xlat
popa
nop
aaa
cmp
fsub
inc
aaa
and
idiv
retf
jecxz
lock
test
mov
fnstcw
data16
xchg
rcl
(bad)
and
push
rol
add
jnp
push
xchg
sub
int3
pop
adc
cmp
aam
(bad)
call
test
mov
xchg
sub
sub
leave
xchg
cmp
push
jl
fsubr
push
cld
adc
mov
adc
cmps
pop
rdpmc
retf
jl
sub
mov
pop
push
jg
pop
push
nop
mov
adc
out
je
mov
cmp
cmp
iret
inc
out
xor
das
sub
adc
inc
stos
mov
stos
mov
retf
adc
pop
mov
dec
mov
lea
gs
ds
mov
xor
mov
in
and
adc
inc
pop
push
popa
adc
arpl
adc
cmp
cdq
cli
jl
or
jmp
adc
dec
lahf
mov
rol
test
or
aam
mov
sbb
repnz
jnp
stc
pop
cwde
(bad)
repz
inc
scas
add
gs
fdiv
and
cmc
js
cmp
jbe
inc
in
adc
mov
mov
je
jecxz
mov
dec
xchg
add
into
sbb
fs
pop
in
mov
sbb
in
cmp
ret
hlt
adc
sbb
cmp
cmp
imul
out
sbb
adc
dec
mov
pushf
adc
sahf
pop
popf
repnz
add
stos
sbb
dec
aad
xchg
pop
pushf
in
enter
dec
repnz
sub
ret
sbb
mov
cmp
pop
rol
pop
int
pop
jecxz
aaa
retf
call
adc
int3
xor
cmp
popf
mov
into
xor
mov
push
es
popa
bound
adc
rcr
(bad)
add
test
xor
sahf
xor
fs
in
jmp
xor
outs
int
and
mov
sbb
fistp
pop
push
pusha
push
jne
xchg
mov
add
aas
mov
jns
mov
aad
fwait
outs
ss
ss
cdq
mov
leave
xor
ficomp
pop
outs
in
pop
sbb
rol
jae
test
mov
sub
dec
push
push
adc
test
movs
popa
ds
ret
(bad)
mov
fsub
pop
jae
fs
mov
popf
in
dec
xor
pop
(bad)
inc
mov
fwait
sub
cwde
push
jge
cmp
repz
push
imul
aas
add
in
dec
ja
fisub
(bad)
push
in
out
out
enter
dec
push
push
loope
xor
pusha
adc
jns
fs
sub
xchg
leave
pop
stos
gs
shl
jb
movs
cmp
and
sub
out
mov
inc
sahf
retf
pop
and
xchg
movs
outs
imul
movs
pop
push
cmp
jno
fwait
cmps
mov
stc
cmps
push
jnp
cmp
arpl
pop
pop
xor
mov
push
sbb
pop
xchg
inc
push
lock
sti
push
add
xchg
cmp
cli
daa
(bad)
mov
mov
in
(bad)
xor
lds
ins
stos
pop
sub
loopne
(bad)
(bad)
mov
and
fwait
pushf
test
fild
inc
sub
scas
inc
and
fs
jbe
scas
sbb
clc
push
xor
sbb
sbb
adc
pop
sysret
fbld
mov
ror
dec
cmc
adc
(bad)
lds
arpl
add
add
fnsave
cli
repz
fild
inc
(bad)
lea
pusha
mov
xchg
fs
std
pop
int3
xchg
pushf
(bad)
sbb
sbb
adc
fldenv
icebp
adc
arpl
adc
es
add
out
cwde
adc
jne
jnp
mov
inc
mov
pop
push
mov
pushf
das
xor
mov
ins
int3
sub
sub
xor
or
test
lds
in
cdq
fimul
fdivr
stos
addr16
ja
mov
repz
pop
push
and
ret
daa
cmp
out
mov
lock
push
je
out
add
test
nop
adc
mov
pop
sbb
xchg
dec
cmps
lds
mov
inc
dec
retf
mov
leave
adc
bound
adc
ins
imul
inc
cmp
pop
or
fadd
jmp
icebp
fwait
addr16
cmp
in
inc
xor
mov
push
sub
cdq
enter
ret
call
mov
cld
pop
inc
cmc
sub
push
pop
push
push
add
or
aam
mov
enter
cmp
daa
cld
rcr
mov
clc
xor
xchg
js
fild
ss
int
cdq
mov
inc
jo
in
inc
add
loope
mov
pop
mov
repz
mov
fidivr
out
jne
mov
shl
es
imul
mov
jle
xchg
xchg
in
or
sbb
mov
and
or
push
xchg
icebp
in
push
add
lds
test
js
push
outs
dec
fist
mov
sbb
(bad)
ss
es
cld
scas
push
dec
jb
jmp
call
mov
inc
popa
sar
adc
test
leave
sbb
jge
or
in
call
xchg
movs
test
push
cmp
sti
lds
retf
sub
scas
ror
pop
ret
add
mov
dec
sub
sti
fcom
fdiv
cmp
cli
sbb
hlt
jge
sbb
aam
cmp
xor
sbb
rcr
stos
jg
in
xor
out
jg
js
mov
movs
clc
sbb
jbe
out
cmp
shl
adc
xchg
sub
in
repnz
or
mov
imul
xor
aaa
sbb
jle
mov
icebp
mov
inc
out
jecxz
retf
and
or
mov
fist
adc
pop
mov
enter
sub
dec
xlat
or
ror
cmp
shr
leave
jns
je
outs
cmp
out
dec
mov
or
sub
pop
dec
enter
div
mov
pop
fidiv
adc
stos
data16
adc
es
iret
retf
jne
xchg
xor
adc
outs
mov
mov
sbb
pop
jo
mov
pop
xchg
adc
mov
(bad)
ficom
jg
es
pop
ret
aad
sub
ja
adc
mov
in
jb
mov
jl
pop
inc
shr
in
mov
jecxz
sub
stc
call
movs
stc
jbe
in
aam
xchg
and
xchg
sahf
into
sub
xchg
movs
test
div
ins
clc
xchg
shr
sub
mov
or
cmp
add
jge
mov
(bad)
retf
in
sub
jl
pushf
into
lods
imul
sub
jle
jnp
je
jno
shl
add
mov
pusha
(bad)
fisubr
cwde
ss
mov
or
dec
lahf
cmps
push
fisubr
std
mul
loopne
and
test
cmp
dec
jmp
cmp
lea
std
or
and
sahf
mov
cwde
sahf
dec
cmps
sbb
pop
(bad)
sbb
push
adc
push
and
daa
xchg
loop
rol
or
or
loopne
cmp
fild
nop
pop
mul
jo
cwde
dec
mov
mov
pop
dec
cdq
push
js
popa
or
lods
out
jmp
je
pusha
inc
dec
jmp
aam
sub
js
sbb
dec
inc
ins
fcmovu
pop
aaa
fld
scas
daa
es
add
sub
push
and
jbe
lahf
xchg
test
idiv
movs
je
arpl
cmp
jmp
mov
bound
jo
out
ffree
push
fisub
mov
rol
and
jae
add
je
pop
xor
sahf
and
or
ja
xchg
aaa
dec
mov
jge
loop
pop
cs
push
push
jp
sub
neg
dec
cmps
xchg
int3
jmp
aad
pop
xchg
jmp
into
mov
shr
es
test
jl
les
mov
(bad)
dec
sti
ja
xchg
scas
inc
neg
outs
or
daa
push
aas
fwait
push
shl
call
add
xchg
fst
push
inc
call
pop
adc
addr16
mov
retf
cwde
enter
mov
mov
js
cmp
jge
int
sbb
in
shl
lock
fs
ja
xchg
fild
mov
cli
lea
outs
inc
adc
imul
fmul
nop
mov
push
push
fcomp
fiadd
push
jnp
les
cli
mov
jnp
adc
fadd
cmp
fidiv
sbb
inc
(bad)
push
cdq
fadd
inc
fsub
int
into
xchg
idiv
pop
leave
fwait
cwde
lods
iret
outs
movs
dec
clc
dec
(bad)
cli
das
in
dec
mov
das
div
xchg
pop
(bad)
adc
sub
jmp
retf
ficomp
jl
sub
dec
dec
push
gs
mov
fisub
lods
mov
sahf
aam
push
dec
jecxz
xor
mov
inc
outs
ficom
into
jbe
fwait
mov
call
cmp
adc
push
pop
cmp
cs
aas
xchg
cmps
sar
ins
or
dec
adc
imul
add
gs
repnz
nop
dec
mov
jo
ret
repnz
sub
pusha
in
xchg
movs
inc
adc
add
cmp
inc
pop
ds
stos
cwde
mov
es
test
inc
mov
sub
repz
push
xchg
pop
mov
inc
cmp
or
call
(bad)
mov
jne
xor
mov
mov
adc
lods
jle
sbb
dec
cmp
push
add
inc
xchg
je
jp
retf
inc
mov
cwde
cmp
stos
arpl
fimul
adc
(bad)
es
pop
fist
pop
ficomp
retf
pop
adc
adc
dec
clc
mov
xchg
into
jmp
add
mov
sub
push
test
ins
and
add
in
pop
lods
pop
hlt
fcom
cmps
lds
mov
sar
inc
(bad)
out
push
xchg
adc
fimul
xor
mov
add
add
jg
cs
das
fst
fnsave
add
hlt
test
repz
mov
inc
cmc
pop
mov
jno
adc
mov
aas
pop
jmp
repnz
dec
jecxz
xchg
xchg
mov
inc
enter
cwde
sbb
mov
mov
pop
ficom
daa
fiadd
jae
jmp
jmp
cdq
xor
pop
jnp
in
mov
ss
push
mov
mov
mov
mov
cmps
jae
xor
add
jmp
inc
retf
xor
mov
mov
outs
sub
push
xor
lahf
mov
dec
mov
inc
xor
addr16
out
daa
pop
inc
jo
xchg
lods
push
jnp
jge
imul
add
mov
les
addr16
clc
mov
xor
call
das
pop
push
test
pop
push
pop
pop
cmc
aas
in
retf
mov
xchg
pop
mov
fiadd
bound
test
ins
rcr
rcr
xchg
or
add
dec
xor
mov
(bad)
mov
stos
xchg
xor
or
cmp
cwde
mov
dec
test
in
jmp
and
out
cdq
aas
adc
shr
cmps
jne
xor
bound
sub
int3
ins
sub
gs
data16
enter
cdq
xlat
ret
and
add
scas
pop
les
adc
cmps
inc
loop
aad
jno
cmc
mov
xor
neg
test
jecxz
mov
xor
sbb
lahf
xchg
inc
mov
sub
xor
int3
rcr
lahf
(bad)
inc
mov
(bad)
pop
inc
adc
xor
xchg
adc
movs
neg
iret
shl
mov
ds
and
daa
jb
cmps
xor
dec
lds
sbb
dec
inc
push
pop
xchg
scas
adc
push
and
mov
sbb
sbb
sub
fistp
shr
cmp
addr16
pop
iret
pop
adc
pop
pop
in
addr16
hlt
sub
push
dec
xchg
sub
or
mov
jmp
lods
pop
dec
neg
pop
popa
or
jle
cmp
test
ja
xor
pop
popa
jmp
out
movs
rcr
sbb
cwde
pop
lea
aaa
mov
ds
cmp
test
push
jl
cmps
sbb
jmp
jl
addr16
dec
inc
xlat
adc
ret
inc
cmps
mov
(bad)
stos
enter
in
fldcw
daa
sbb
repnz
jns
xchg
es
(bad)
iret
hlt
jge
lds
(bad)
and
jecxz
movs
push
mov
lods
or
and
pushf
jmp
lods
push
(bad)
rcr
sbb
jl
mov
jns
pop
jbe
cmps
idiv
test
and
addr16
dec
inc
and
movs
(bad)
or
pop
(bad)
mov
gs
cdq
fsubr
aam
dec
jbe
sahf
jecxz
mov
cmp
call
inc
cmp
sti
jmp
mov
jecxz
mov
adc
pop
dec
and
pop
and
or
cmp
and
xlat
repnz
mov
mov
jae
in
jne
sub
mov
mov
xor
add
js
movs
cli
(bad)
das
push
mov
mov
aad
mov
loope
fs
cmp
in
push
(bad)
in
xlat
mov
shl
push
push
call
sub
push
cli
sbb
enter
xor
lock
movs
out
sbb
jmp
aad
pop
mov
scas
lea
sahf
adc
sub
dec
add
add
scas
(bad)
aas
hlt
imul
xlat
mov
pop
jnp
int3
xchg
or
daa
sbb
loope
addr16
jo
stos
shl
jmp
xlat
scas
dec
call
lea
push
inc
icebp
repz
push
sbb
out
pop
(bad)
aaa
mov
outs
lods
test
cmp
sbb
jne
int3
rcr
movs
add
clc
add
fs
call
ss
pushf
dec
pop
call
gs
pop
pusha
or
neg
xlat
scas
pusha
cmp
add
xchg
fs
retf
das
sub
sbb
scas
pop
push
xchg
(bad)
sbb
pop
adc
xlat
xchg
call
nop
sub
aas
adc
fdiv
cmp
dec
lock
popf
aam
jge
retf
repnz
push
jno
(bad)
xor
add
fmul
cmp
repnz
inc
cmc
mov
es
dec
inc
inc
xchg
or
lds
fistp
test
daa
push
out
test
rol
push
sub
stos
arpl
fadd
adc
mov
and
and
mov
pusha
dec
mov
aas
push
xor
fadd
jg
and
xchg
int
jns
(bad)
jno
movs
arpl
jno
adc
retf
hlt
xor
ss
data16
or
imul
mov
jp
cs
pop
or
les
mov
or
cmc
(bad)
stos
fsubrp
and
xchg
or
jmp
mov
cmc
pop
xlat
adc
push
icebp
xchg
(bad)
lock
inc
fcmovnb
dec
loope
cmp
mov
xchg
jb
ret
pop
imul
nop
dec
aaa
mov
(bad)
xchg
mov
push
js
adc
data16
mov
cwde
sub
jnp
out
mov
inc
or
fs
cmp
push
push
cmp
clc
dec
jge
dec
sub
sar
cmp
(bad)
(bad)
pop
iret
jo
mov
shl
pop
imul
inc
jge
shl
xchg
mov
sub
(bad)
jno
pop
imul
dec
mov
or
or
mov
ins
rep
out
enter
dec
pop
(bad)
in
js
cmps
mov
fs
inc
ins
push
add
out
daa
jl
sub
retf
mov
clc
(bad)
and
inc
(bad)
jbe
fwait
movs
push
stos
xchg
jg
(bad)
jge
xchg
cmp
jmp
sbb
lock
int
push
imul
push
mov
cmp
xchg
jo
std
iret
retf
and
sbb
push
cmp
mov
pop
adc
jnp
cmp
int3
sbb
dec
and
pop
push
fst
fstp
inc
or
adc
out
aam
or
nop
fimul
mov
adc
pop
lock
jne
dec
and
mov
mov
sbb
mov
into
or
out
outs
sub
mov
mov
pop
and
ja
pop
idiv
or
test
mov
(bad)
push
aam
push
xchg
ins
add
dec
or
loope
fbstp
dec
out
pop
push
xor
fld
out
mov
adc
and
fidiv
gs
data16
and
ins
xor
icebp
xor
jbe
arpl
sub
add
loopne
aam
(bad)
lock
add
mov
xchg
mov
push
shl
shl
inc
sbb
cdq
inc
mov
cmps
cwde
mov
test
pop
jg
dec
movs
fisttp
(bad)
xor
mov
pop
mov
cmp
das
and
nop
jmp
lods
stc
inc
xchg
shr
inc
jno
add
cmp
cmp
sbb
hlt
pop
mov
movs
lea
pop
addr16
fldenv
pushf
mov
retf
ret
push
lods
in
into
xchg
lods
xchg
adc
push
(bad)
sbb
push
in
mov
stos
sbb
mov
jmp
loope
mov
out
sbb
out
jno
push
addr16
(bad)
aas
out
push
or
jle
sub
pusha
mov
push
mov
sar
gs
cmp
popa
fimul
xchg
push
sti
pusha
xchg
adc
enter
sti
xor
into
loopne
(bad)
nop
push
jp
push
loopne
xchg
clc
cmp
ret
out
inc
inc
push
dec
pusha
mov
lea
daa
gs
and
int3
(bad)
sbb
jo
retf
stos
dec
add
pop
pop
aas
xlat
inc
sbb
mov
jl
test
mov
jp
jmp
push
xor
aam
aas
rcl
lock
imul
pop
dec
das
aaa
fnop
nop
adc
nop
test
movs
imul
add
scas
hlt
ret
rcr
arpl
jno
cwde
push
(bad)
ins
les
sti
add
pop
mov
shl
repnz
and
push
or
sti
mov
push
mov
inc
add
xor
jecxz
sbb
inc
push
repz
mov
pop
mov
jne
(bad)
stos
and
lods
addr16
mov
or
stos
and
push
aaa
cld
jae
sub
mov
dec
pop
movs
ss
push
push
aaa
iret
aas
outs
(bad)
cmps
loope
xor
je
push
and
loope
adc
sub
sbb
fst
cmp
mov
adc
iret
mov
cmps
ret
cwde
ret
popa
sub
or
int3
inc
inc
fistp
cdq
jns
fwait
xlat
hlt
loop
sbb
(bad)
mov
push
fisubr
setg
push
je
nop
xor
aas
xor
daa
dec
mov
jp
add
sub
push
(bad)
mov
outs
push
jae
jg
pop
dec
pop
(bad)
scas
fcom
xchg
push
jno
push
adc
icebp
out
cmp
inc
sub
ret
pop
mov
scas
call
gs
mov
cmc
adc
jno
dec
sub
ror
pop
jo
mov
int3
lea
fsub
bound
jmp
dec
loopne
sbb
add
jae
xchg
enter
je
add
xchg
push
xchg
shr
(bad)
outs
retf
cdq
pop
jp
mov
sub
sbb
cli
rcl
sbb
or
xchg
mov
aas
xor
outs
sahf
inc
(bad)
push
test
xor
cmp
cmp
popf
jnp
mov
adc
mov
cmp
jns
jecxz
out
stos
or
push
xchg
fld
icebp
retf
mov
sbb
ret
adc
cmps
jne
jo
lea
pop
cmp
cmp
test
outs
pop
mov
ret
rcr
mov
shl
das
iret
push
sub
jns
or
adc
leave
or
add
adc
jp
fiadd
mov
cli
xor
(bad)
jle
gs
mov
inc
jb
mov
mov
lods
push
mov
jo
xchg
mov
aad
sbb
pop
push
in
ja
imul
aam
stos
repnz
jge
lahf
jg
lock
sbb
sub
cmp
mov
mov
leave
jbe
mov
xchg
lds
js
sub
cmp
shl
xor
fisttp
fisubr
movs
cmp
in
jecxz
je
push
add
adc
or
mov
retf
daa
jnp
icebp
and
sahf
and
mov
lea
pop
add
cmp
pop
sbb
fwait
sub
shl
xchg
mov
pop
or
fistp
cmc
retf
adc
xor
aad
mov
ja
je
add
(bad)
clc
adc
dec
popa
fcom
pop
xchg
push
test
cmps
push
paddb
dec
mov
fcom
xchg
fidivr
add
je
movs
test
xchg
push
call
jo
retf
push
sbb
jge
cdq
xchg
pop
jmp
nop
xlat
cmp
gs
fldcw
movs
jge
push
pushf
outs
fmul
sub
inc
imul
xchg
jb
cwde
lods
or
ss
pop
add
xor
les
jmp
sub
(bad)
mov
gs
out
jmp
ins
sbb
int3
cmps
and
hlt
jecxz
cmp
mov
cmpps
out
sar
sub
mov
scas
ss
mov
pop
dec
in
push
ret
dec
inc
dec
mov
xchg
sub
sub
enter
out
pushf
cmc
int3
push
shl
call
adc
movs
(bad)
loopne
scas
hlt
shl
mov
into
lock
sub
data16
test
jne
das
pop
sti
bound
enter
dec
(bad)
into
push
loop
and
adc
and
fnstcw
sub
(bad)
sbb
rol
mov
int3
jmp
popf
(bad)
push
adc
aam
adc
xor
lods
adc
and
push
mov
inc
jae
mov
pop
rcl
xor
sbb
sub
xor
cdq
push
xor
scas
xor
ret
sub
leave
push
hlt
iret
xor
ss
cwde
arpl
push
mov
dec
mov
sbb
mov
or
iret
jno
jmp
mov
add
push
call
pop
mov
mov
jmp
push
jmp
or
mov
aas
add
pop
lea
inc
bound
ja
shl
xor
sub
fwait
push
loope
jae
dec
jmp
lahf
sub
cmp
test
or
(bad)
xor
pop
cmp
or
aam
fist
rol
cmp
jne
jae
retf
mov
or
fisub
sub
push
outs
out
movs
xor
mov
shr
fistp
movs
das
repnz
(bad)
shr
mov
mov
shr
rol
jmp
mov
mov
sub
out
and
mov
in
stc
(bad)
mov
mov
pushf
adc
imul
(bad)
cmp
jbe
arpl
xor
pop
pushf
lods
test
or
lods
cmp
call
push
jne
add
jg
jecxz
arpl
adc
push
inc
stos
sahf
test
sar
push
cli
xchg
daa
or
call
lahf
xchg
pop
les
not
repz
adc
rol
arpl
in
cmp
aad
or
stc
push
(bad)
and
jge
push
push
and
cld
cmp
and
xor
xchg
imul
lds
mov
pop
(bad)
xchg
sbb
mov
cmps
and
pop
xchg
push
mov
sbb
shl
scas
add
popa
scas
push
jl
cwde
imul
push
pop
mov
sub
pop
pusha
ins
ret
or
mov
fmul
repnz
ja
int3
fwait
or
daa
push
into
dec
mov
into
sbb
fstp
aaa
cwde
(bad)
into
ins
dec
dec
sar
jbe
push
mov
push
test
ins
popf
adc
repz
and
iret
rcr
(bad)
xchg
push
push
ins
mov
mov
loop
push
sbb
ins
out
inc
push
sbb
ret
out
push
jecxz
xlat
ss
ret
call
mov
aas
push
repnz
je
repz
clc
push
cmps
add
inc
inc
lock
out
fisttp
or
jge
bound
xchg
loope
cld
add
mov
mov
and
jo
dec
add
sti
jo
movs
adc
jmp
and
jmp
jne
scas
push
pop
outs
sub
inc
cmps
sahf
xor
and
mov
idiv
and
addr16
xchg
in
mov
and
stos
aam
inc
cs
mov
lods
sub
and
fst
mov
and
jle
sbb
mov
sbb
iret
ins
jnp
retf
push
test
fidivr
popf
data16
repz
sbb
sbb
sbb
sub
or
dec
int
push
push
cmps
test
push
jno
mov
in
pop
dec
mov
mov
arpl
sahf
mov
xchg
enter
sub
loop
pushw
nop
mov
in
push
inc
mov
bound
xor
add
pushf
inc
test
sub
imul
pop
movs
dec
and
sub
retf
div
mov
sub
hlt
push
stos
xor
mov
rcl
push
or
or
or
jl
leave
les
lods
pushf
mov
xchg
mov
push
or
js
je
and
push
cld
cmp
ret
mov
bnd
pop
test
lods
xchg
stos
dec
loop
sub
cld
(bad)
mov
sar
int3
mov
ins
cld
push
mov
idiv
lods
call
xor
lahf
jle
push
out
push
xor
jnp
dec
adc
arpl
(bad)
mov
js
sahf
push
mov
call
xchg
jns
or
outs
pop
and
test
jbe
cmps
and
popf
inc
sub
std
pop
(bad)
or
pop
inc
cmp
and
in
and
rcl
sahf
mov
sar
sbb
and
fs
inc
nop
sub
in
mov
inc
gs
pop
adc
pop
and
xor
(bad)
xchg
stos
arpl
mov
cmp
adc
inc
ins
or
daa
jmp
xor
pop
cmp
sbb
jge
mov
or
dec
dec
aas
fcomp
mov
loopne
clc
mov
rol
push
jp
jb
test
jmp
or
sbb
outs
and
mov
jne
mov
mov
enter
xor
outs
test
add
and
pushf
stos
mov
imul
repz
movs
adc
mov
push
je
mov
addr16
inc
movs
cmp
or
aam
daa
jmp
fist
(bad)
aas
jo
add
ds
adc
xchg
dec
jle
pop
xchg
dec
lahf
mov
cdq
rcl
mov
outs
loopne
arpl
mov
sub
clc
adc
sti
sbb
sahf
daa
lods
inc
and
mov
stc
loopne
cmp
popa
int
ins
test
sbb
sbb
outs
in
cmp
dec
inc
push
or
(bad)
cmp
cmp
dec
cdq
adc
pop
and
stc
xchg
test
shl
xor
and
fist
out
cmp
adc
call
popf
mov
mov
outs
pop
inc
and
je
nop
retf
pop
pop
push
frstor
shr
jo
fdivr
mov
jbe
sbb
push
jp
sub
add
imul
sbb
mov
xchg
jmp
sbb
cld
pop
dec
push
pop
loopne
enter
push
adc
pop
mov
pop
ja
inc
(bad)
pop
mov
ins
cmps
inc
jae
(bad)
push
arpl
in
retf
in
dec
dec
imul
ss
push
jecxz
xlat
dec
xchg
push
pop
stc
mov
fmul
push
divps
out
test
xchg
xchg
loop
push
jmp
dec
xor
mov
and
stos
popa
xchg
mov
or
pusha
fiadd
jp
leave
das
int3
adc
add
push
(bad)
int3
cmp
jns
mov
shl
sub
add
jge
xchg
pushf
pop
int3
int3
(bad)
adc
lea
out
ror
(bad)
jg
adc
cmc
dec
push
mov
inc
pop
push
aaa
jecxz
ss
dec
icebp
sbb
out
test
pushf
mov
mov
push
outs
and
les
inc
sub
out
adc
outs
and
or
add
pop
js
push
sahf
sahf
rcr
cmp
adc
push
ret
fdivr
push
adc
pop
pop
rcr
fistp
lds
enter
aaa
fcmovnb
mov
add
pop
add
fnstsw
fidiv
jno
dec
imul
(bad)
jmp
fisub
mov
leave
push
scas
cs
ss
aad
pop
popf
adc
jmp
test
lea
xchg
cwde
(bad)
pushf
pop
dec
push
(bad)
and
sbb
jnp
ror
jl
das
xchg
and
mov
sub
call
jae
xlat
mov
or
mov
in
or
loop
mov
(bad)
retf
cmps
mov
push
test
lahf
bound
sub
or
fwait
sub
fisttp
mov
inc
in
mov
cmp
das
mov
mov
outs
rol
jae
pop
mov
popf
cs
mov
test
aaa
mov
test
jle
xor
and
lds
(bad)
mov
add
or
cmp
cwde
test
dec
fcomip
js
iret
movs
xchg
sbb
pop
push
add
pop
popf
sub
fwait
int3
lock
js
sbb
xor
mov
push
jp
xchg
or
mov
inc
popf
dec
mov
mov
leave
pop
sub
les
mov
inc
push
out
sti
mov
xchg
mov
inc
leave
ror
and
push
mov
repz
iret
add
setbe
push
ja
adc
cwde
mov
xor
pushfw
outs
sbb
sbb
gs
inc
pop
xchg
jbe
popf
and
loope
mov
mov
jns
or
mov
ret
scas
(bad)
sbb
mov
retf
xchg
aad
jns
jae
mov
push
mov
(bad)
addr16
(bad)
mov
je
ror
add
xchg
lahf
(bad)
jns
mov
push
mov
sbb
into
sbb
cdq
xor
aas
hlt
push
push
jmp
ins
out
(bad)
dec
and
icebp
push
xchg
jno
mov
pop
popa
cmp
ss
xchg
lea
lea
xchg
pop
cmp
xor
in
dec
mov
pusha
mov
retf
fistp
mov
outs
mov
xchg
jmp
and
pop
imul
data16
mov
std
jp
xchg
aam
cli
pop
arpl
test
jb
dec
mov
fst
cmp
cs
sbb
and
push
and
mov
test
fsubr
fs
xor
pop
ds
aas
je
call
shl
repz
movs
xor
push
rol
inc
jg
mov
bnd
adc
ss
fs
fiadd
jne
pop
adc
mov
and
push
cmps
mov
sar
jne
push
xchg
das
rcr
push
xchg
lahf
lds
xor
ins
dec
rcl
mov
xor
jge
sbb
push
sub
sub
and
(bad)
adc
mov
repz
call
mul
push
jecxz
pop
movs
xchg
jl
outs
dec
add
test
pop
in
sub
mov
add
(bad)
loope
push
dec
fdiv
cmp
jp
cmp
hlt
add
movs
cmp
mov
sbb
or
dec
add
mov
loopne
jle
std
add
ja
sub
nop
int
cmp
xor
leave
sbb
or
sbb
js
jle
pop
mov
in
(bad)
inc
es
jmp
jmp
pop
mov
lea
jmp
aaa
sub
pop
mov
push
cmovae
and
dec
out
fidivr
mov
sub
mov
std
mov
shl
sbb
jle
push
daa
cmp
and
pop
enter
push
sti
imul
aas
fbld
xchg
lods
mov
adc
inc
inc
pop
push
inc
jle
cmp
sub
push
fwait
lahf
out
js
xor
jmp
repnz
lods
lock
dec
push
ss
outs
sbb
sub
inc
cld
jg
xchg
mov
push
and
xor
pop
add
mov
cmp
aam
fcmovnu
mov
pop
icebp
jae
and
(bad)
cs
and
(bad)
inc
pop
and
jg
lods
into
pop
(bad)
leave
leave
push
xor
out
inc
push
dec
imul
ds
inc
or
not
maxps
mov
cwde
sub
push
mov
xchg
(bad)
fstp
and
push
(bad)
loopne
sbb
loop
stos
rol
loop
test
je
scas
xor
sti
out
sti
out
dec
sub
fmul
inc
add
loop
aam
sbb
adc
stos
cli
addr16
cmps
repnz
push
sar
adc
xchg
mov
cld
inc
or
cmps
push
sti
jbe
ror
jecxz
lea
add
sbb
popf
lods
pop
push
sub
js
jns
mov
add
outs
jge
push
mov
mov
lahf
adc
or
pop
out
(bad)
and
inc
xchg
js
int3
xor
lds
lock
jns
add
lds
dec
xor
stc
mov
adc
repz
mov
(bad)
pop
jl
xor
and
jno
cmc
stc
pop
or
fisub
test
mov
xchg
mov
outs
call
in
jmp
fisttp
mov
push
inc
push
pop
pop
xor
pushf
mov
sub
xor
sub
mov
xchg
push
xor
xchg
out
jns
(bad)
cmp
fsubr
daa
loop
shl
ss
jp
aaa
inc
imul
jmp
add
mov
stos
cmp
xor
jmp
push
(bad)
cs
mov
adc
repz
stos
or
jmp
ret
xchg
ficom
fs
mov
xchg
dec
inc
lock
not
and
sbb
jo
inc
fisub
jge
cmp
or
bound
ins
movs
sub
js
popf
mov
sbb
stos
outs
shr
pop
dec
sub
call
add
icebp
fwait
daa
sub
mov
jmp
lods
add
imul
hlt
jle
icebp
adc
sbb
cmp
rcl
mov
dec
jp
test
dec
pusha
pop
fistp
sbb
les
or
cld
add
cmp
loopne
hlt
jb
cmc
test
mov
es
stos
dec
xchg
nop
lds
lods
xchg
mov
push
xchg
inc
in
push
xlat
test
ins
xor
aam
cmp
xor
dec
and
sar
push
ds
lock
add
jo
movs
cmps
test
test
pusha
mov
ins
call
enter
jmp
add
push
xchg
xchg
cmp
pop
mov
sar
jnp
imul
sub
int3
jmp
cli
jno
xor
xor
push
pushf
test
mov
ss
adc
jge
jmp
inc
cwde
fisubr
fdivrp
push
inc
fucomi
sbb
js
push
sbb
ficom
ds
arpl
lods
(bad)
in
int
or
or
out
ret
(bad)
mov
dec
mov
jmp
jnp
jl
mov
xchg
lds
xchg
lea
outs
das
repnz
pop
addr16
push
cmp
jle
stc
jl
fadd
sahf
shl
out
dec
jle
pop
in
and
cmp
push
and
pop
push
loop
icebp
in
and
mov
sub
cmps
daa
lock
lahf
xchg
cmc
movs
push
or
fidiv
icebp
xor
mov
mov
aaa
test
mov
sbb
jo
xor
leave
or
stos
repz
inc
sahf
scas
shl
jp
into
mov
dec
dec
pusha
movs
or
add
push
adc
sbb
movs
shl
jge
je
fnstcw
inc
lds
ds
adc
jns
out
es
sar
and
ja
or
jbe
sbb
adc
stos
nop
push
iret
or
xor
jns
inc
adc
fimul
and
jns
fldenv
fsubr
mov
cmp
add
sub
call
aaa
mov
cmp
add
js
jbe
push
in
shr
bound
sti
adc
mov
mov
(bad)
cmp
gs
mov
test
sub
dec
xor
or
scas
pop
scas
push
lods
adc
js
pop
retf
es
in
lock
movs
jl
mov
adc
jge
jle
sbb
and
sub
fnstcw
(bad)
jp
jnp
sub
int3
dec
fmulp
(bad)
lock
sub
cli
daa
jmp
stos
add
push
sbb
xlat
push
push
shr
xor
es
and
adc
push
scas
and
sbb
fs
fld
dec
std
xchg
lock
sbb
or
sub
fst
call
fnstcw
xchg
jae
movs
pusha
(bad)
ds
mov
sub
mov
dec
cmps
inc
xor
out
mov
mov
lods
mov
add
sub
mov
sbb
pusha
mov
call
add
pop
sub
icebp
xchg
dec
pop
loope
jae
mov
fcom
cmp
pop
dec
aaa
jns
repz
sahf
push
jle
sahf
push
enter
jmp
mov
data16
dec
mov
les
jbe
push
fsubr
dec
xchg
sbb
add
cmp
mov
jno
stc
outs
or
sub
std
fisub
jae
pusha
xor
xor
rcr
je
jg
ja
fld
aas
lods
cs
lods
adc
add
inc
loopne
sahf
pop
(bad)
cmp
inc
lahf
dec
fldenv
sub
js
ror
arpl
js
call
dec
aaa
retf
int3
outs
cmc
xor
enter
mov
and
in
cmp
mov
xchg
nop
mov
ins
push
aaa
gs
jbe
aaa
stc
jae
popf
bound
jg
mov
cmps
or
inc
clc
(bad)
idiv
sahf
fcomp
jo
(bad)
enter
adc
(bad)
xor
fnstsw
rcr
frstor
jp
fs
imul
jo
jp
xchg
inc
push
ds
jl
jns
xchg
enter
int3
inc
inc
xlat
xchg
movs
cmps
mov
jle
mov
push
xor
fnstenv
scas
jmp
xor
mov
(bad)
adc
xor
pushf
mov
xor
jne
stos
ret
(bad)
cmp
addr16
mov
jae
imul
pop
push
gs
inc
mov
shl
jbe
or
dec
sub
mov
pop
leave
xchg
loopne
cld
adc
jnp
mov
jmp
ss
and
mov
loop
sub
(bad)
sbb
xchg
(bad)
push
mov
fndisi(8087
xchg
xchg
inc
dec
mov
mov
call
cwde
pop
xchg
pop
outs
outs
sbb
cmps
mov
setne
sbb
stos
repnz
mov
adc
out
sbb
push
inc
pop
inc
jo
or
push
int
pop
(bad)
mov
mov
fadd
gs
aam
(bad)
push
dec
iret
call
push
in
adc
or
jns
dec
dec
pop
cmp
xor
das
aad
or
out
mov
arpl
mov
push
mov
(bad)
ja
ror
mov
out
or
ficomp
push
je
xchg
jo
paddw
mov
xchg
pop
cwde
test
movs
fild
idiv
jne
rdtsc
adc
std
xor
pop
ficomp
dec
mov
push
push
test
scas
dec
outs
arpl
sub
test
dec
cmp
pop
sub
iret
sbb
dec
fistp
add
loope
fist
cmp
xor
fs
(bad)
rol
addr16
jbe
sbb
popf
mov
xchg
icebp
and
xor
ficom
mov
je
repnz
xchg
aam
cmc
pop
mov
adc
gs
sub
sar
sub
ret
mov
sub
sbb
push
lock
scas
js
(bad)
pop
das
cmovle
std
clc
xor
xchg
xor
fwait
jne
bound
xchg
rcl
dec
stos
retf
sbb
mul
adc
movs
fisub
jbe
stc
xor
ret
mov
ss
lods
leave
sar
add
push
les
(bad)
rol
cmp
and
ret
jge
push
sub
pop
addr16
push
xor
mov
into
inc
sbb
in
mov
icebp
cmc
(bad)
mov
or
hlt
xlat
and
jecxz
cmp
std
mov
lds
inc
xor
fdivr
sbb
mov
xchg
mov
pop
and
test
add
loop
or
in
fadd
loope
push
dec
sti
push
pop
cmp
cli
mov
jne
(bad)
push
jae
xor
mov
mov
mov
lahf
mov
out
das
inc
hlt
in
cdq
pop
cmp
stc
les
fsincos
adc
(bad)
test
(bad)
scas
(bad)
movnti
add
and
jbe
xchg
add
popf
lahf
pop
sub
xor
push
inc
adc
movs
stos
mov
das
outs
mov
mov
adc
fld
ret
jmp
mov
das
and
jb
pop
mov
(bad)
add
(bad)
adc
ret
mov
ins
mov
jne
xchg
dec
ja
add
xchg
cs
pushf
cmp
add
pop
sbb
call
sbb
sahf
ja
aam
xor
mov
xor
jg
pop
and
xor
sbb
mov
fdivr
lea
es
jecxz
call
xchg
les
sti
out
xor
xor
adc
mov
mov
je
pop
push
jnp
or
shl
xchg
inc
mov
shl
add
xchg
dec
push
xchg
sbb
arpl
in
lea
ja
pop
movs
cld
ins
es
adc
(bad)
popa
fdiv
pusha
sbb
xor
movs
mov
das
pop
nop
test
mov
sbb
mov
stos
inc
dec
outs
cld
cmp
mov
std
xchg
out
and
dec
cld
mov
jno
push
push
lods
add
comisd
rcr
adc
test
out
mov
bound
pop
dec
mov
mov
fwait
daa
popa
pusha
adc
iret
mov
fild
cmp
adc
fild
(bad)
jp
push
not
stos
xchg
and
adc
mov
pop
push
dec
or
push
(bad)
rcr
aaa
sub
xchg
movs
cwde
inc
fild
push
fidiv
aas
ret
ins
je
cmp
test
je
and
push
pusha
xor
cld
inc
sbb
cdq
repnz
mov
mov
mov
mov
lahf
dec
std
ins
sbb
push
imul
in
test
sbb
(bad)
fcom
fidivr
or
and
cmp
pop
gs
xchg
pop
cdq
mov
xchg
push
retf
cs
xor
add
sub
mov
inc
push
sbb
cmp
mov
mov
call
cmp
pop
add
sub
mov
stos
ja
lods
cmp
push
call
pop
or
retf
in
jge
enter
jl
fidiv
cld
cmp
xchg
sbb
mov
fild
inc
mov
fs
ja
cmp
stos
cld
sub
and
lock
fs
xor
into
scas
mov
(bad)
fcomip
mov
hlt
pop
xor
or
clc
jmp
fwait
jmp
hlt
out
(bad)
sahf
out
fsin
push
aaa
jmp
fisub
xor
mov
int
test
pop
loopne
jl
int3
push
xor
arpl
fisub
or
jmp
mov
mov
xor
pop
loopne
scas
js
not
ror
pop
add
push
sbb
xor
nop
mov
and
ss
and
fwait
add
dec
pop
fwait
outs
clc
mov
adc
inc
mov
push
arpl
inc
sbb
push
scas
jae
mov
mov
leave
inc
jp
stos
xchg
shr
mov
xlat
or
stos
jmp
xor
int
rcr
push
bound
test
cmp
push
movs
ss
and
movs
dec
call
xor
cmps
jo
cmc
xchg
lods
push
push
mov
jnp
push
(bad)
out
cmp
sub
pushf
call
xchg
fsubr
(bad)
test
(bad)
sub
rcl
dec
loop
call
mov
out
retf
shl
popa
enter
push
(bad)
les
arpl
mov
out
mov
dec
inc
call
cmp
mov
sti
inc
movs
test
inc
xchg
cli
mov
pop
or
xchg
mov
dec
scas
jmp
stos
push
mov
fadd
xor
outs
cdq
add
push
scas
fstp
jecxz
jp
and
mov
int
ss
sbb
push
int3
add
cmp
call
(bad)
mov
call
xchg
out
add
sti
xor
out
add
add
hlt
fnstsw
adc
lea
cmp
pop
nop
pop
sub
xchg
pop
push
mov
push
and
xchg
(bad)
out
call
xor
lock
pop
dec
mov
aad
cwde
mov
dec
(bad)
loope
pop
ret
xchg
push
test
pushf
and
adc
daa
arpl
fwait
push
scas
jnp
adc
adc
(bad)
or
addr16
xchg
mov
mov
call
pop
mov
data16
loope
fld
mul
jmp
dec
push
ja
cmps
inc
mov
ficomp
daa
jmp
xchg
cs
loopne
cdq
inc
cmp
and
in
mov
fucomp
push
rol
adc
out
jbe
imul
push
push
(bad)
out
mov
xchg
or
stos
lods
cmp
and
mov
inc
movs
push
jns
hlt
and
jp
inc
cli
scas
add
xor
test
pop
(bad)
mov
test
xchg
and
xchg
scas
std
lods
fisub
or
icebp
jno
or
mov
mov
xchg
dec
aam
or
mov
add
mov
xor
shl
jo
pop
popf
call
and
push
pop
mov
data16
shr
cmp
test
bound
ret
inc
ror
int3
mov
aaa
dec
inc
call
test
shr
fwait
call
fptan
ss
idiv
sub
ins
ficomp
loope
dec
pop
rcr
cmp
sub
dec
add
adc
pop
ins
push
cmc
push
mov
push
sub
pusha
jno
(bad)
leave
add
or
shr
call
push
pushf
or
or
or
add
daa
cmp
jmp
dec
pop
mov
sub
(bad)
cwde
fsubp
sub
cld
outs
dec
je
std
xlat
xlat
(bad)
or
push
mov
icebp
xchg
rol
mov
loop
cmp
rol
sub
dec
and
sub
xchg
arpl
call
mov
data16
mov
mov
jne
or
gs
jp
mov
add
mov
cmps
or
lock
push
outs
sbb
mov
mov
mov
jl
inc
jp
ret
mov
cs
mov
test
bound
inc
cmp
data16
loopne
cmp
mov
mov
cmps
xchg
enter
add
pop
daa
mov
cmps
lods
mov
ins
aaa
push
aaa
(bad)
outs
ins
fwait
adc
jl
dec
push
lods
sahf
in
inc
or
push
mov
das
shl
lahf
rcl
mov
push
jecxz
xchg
mov
(bad)
sbb
adc
jle
fist
lock
cs
jb
repz
dec
repnz
xchg
pop
arpl
mov
leave
call
dec
cdq
jbe
enter
sbb
pop
xchg
(bad)
sub
pop
mov
xor
xchg
fstp
xor
pop
add
inc
imul
dec
repz
jmp
cmps
jmp
lea
shl
jg
cmps
(bad)
(bad)
in
lods
aas
sahf
loope
ss
push
loope
mov
jecxz
sahf
test
xor
mov
mov
outs
jb
sub
mov
push
add
aaa
adc
xor
xor
sti
dec
lods
test
das
sub
test
mov
mov
adc
sbb
in
dec
bound
xchg
(bad)
lods
mov
jns
push
in
jge
mov
repz
push
inc
imul
out
sub
adc
test
and
inc
pop
sbb
push
je
cmp
and
push
mov
or
ja
cmp
add
mov
add
pop
push
push
and
xchg
inc
aad
imul
inc
bound
lods
add
pop
lahf
icebp
shl
xchg
sahf
mov
xchg
call
aaa
or
into
xor
dec
gs
push
mov
adc
clc
clc
das
sub
movs
pop
cmp
inc
stos
jno
lock
cmp
dec
push
(bad)
push
cmc
jecxz
xor
mov
pop
sbb
fist
cmp
jecxz
imul
loop
inc
xchg
jecxz
push
or
jge
mov
adc
xor
dec
rcl
pop
xchg
jbe
xchg
jg
xchg
cli
push
or
mov
mov
cmp
sub
mov
fistp
push
hlt
jle
mov
mov
fistp
(bad)
push
add
test
pushf
(bad)
aas
push
sub
push
jle
mov
icebp
into
out
xchg
add
xchg
sub
into
fcom
icebp
sub
inc
xor
adc
test
cmps
cmp
idiv
push
pop
push
aam
ins
pop
jp
mov
dec
xchg
or
mov
jmp
push
adc
pop
push
mov
dec
lock
pusha
mov
cmps
out
dec
jmp
or
dec
mov
mov
push
sbb
les
rcl
cld
or
cmps
nop
mov
fs
adc
les
jl
int
iret
sbb
xor
sahf
in
cmp
fsub
data16
loope
jne
jae
push
ret
inc
data16
(bad)
(bad)
in
mov
int3
test
stc
xchg
or
in
inc
call
or
jg
aas
out
push
mov
dec
call
mov
stc
stos
add
iret
call
mov
add
rol
adc
cmp
ficom
(bad)
lock
pop
test
jnp
arpl
push
lea
in
adc
mov
(bad)
jge
in
or
xchg
push
enter
cmp
mov
sub
cmp
dec
bound
fdiv
rol
cmps
les
pop
xor
outs
add
sbb
sbb
int
and
mov
call
stos
mov
push
xchg
push
mov
inc
stos
mov
dec
das
ja
push
(bad)
iret
(bad)
mov
push
shl
mov
xchg
xor
(bad)
push
adc
aaa
pop
push
dec
addr16
inc
and
pushf
pop
imul
dec
fild
movs
mov
scas
scas
adc
push
mov
jbe
loopne
aas
push
mov
out
ja
sti
mov
loope
lods
sub
cdq
out
cmp
mov
aam
mov
ror
push
add
sahf
fdiv
inc
cdq
sbb
lods
je
and
and
jbe
das
rcr
int3
sar
xor
outs
inc
repnz
push
outs
xor
stc
ret
inc
jmp
aad
test
aas
xchg
ins
xchg
mov
xchg
pop
(bad)
dec
test
xor
inc
(bad)
mov
inc
xor
cmp
cwde
lahf
adc
pop
mov
and
inc
mov
retf
cmp
cmp
sub
data16
aad
lods
ins
inc
mov
cmp
cmc
jmp
pop
push
mov
js
inc
push
sti
aas
push
mov
and
sbb
mov
ja
cmc
lods
pop
test
mov
stos
es
fisttp
add
cmp
mov
in
loope
mov
inc
(bad)
je
fldcw
sbb
fnstenv
test
xor
jns
aam
xor
push
xlat
ss
rcl
ffree
mov
nop
push
fwait
or
xchg
ins
imul
push
mov
jb
mov
mov
mov
xor
ret
xor
adc
out
mov
fs
out
mov
sbb
inc
jo
cld
fwait
push
out
mov
neg
data16
sbb
das
cmp
jg
sahf
cld
add
movs
cs
jno
jno
sub
mov
retf
mov
jb
mov
pop
jo
jne
or
or
cdq
xchg
add
(bad)
add
mov
jl
push
ret
dec
mov
jle
adc
sahf
out
sar
stos
inc
imul
sub
jb
and
ins
dec
not
pop
fsub
mov
shl
xor
mov
sub
jmp
cs
nop
jmp
mov
adc
les
rcr
dec
aam
add
cwde
dec
inc
mov
test
in
fistp
in
fwait
aaa
stc
(bad)
mov
mov
lods
jp
ficomp
popa
or
xor
lods
mov
xchg
fistp
dec
push
(bad)
fstp
xor
test
dec
int3
stos
dec
movs
sub
jecxz
cmp
push
cmps
lock
pop
in
(bad)
out
retf
and
cmp
fucomip
addr16
xchg
mov
inc
rcl
mov
xor
sbb
sbb
pop
mov
adc
gs
icebp
lock
movs
(bad)
rcr
mov
movs
imul
or
sbb
retf
iret
push
sub
movs
cmps
inc
xlat
repnz
mov
loope
bound
cmp
sbb
xor
xor
fstp
jmp
icebp
in
push
loop
das
aas
sub
sub
int3
test
popa
cmp
push
cld
xchg
and
mov
xchg
jle
mov
repz
sbb
jp
sub
sbb
addr16
mov
mov
sbb
dec
dec
inc
aas
sbb
push
and
shr
jo
stc
sub
mov
rcl
inc
mov
and
mov
jnp
test
sti
test
sbb
ret
loop
js
push
or
cld
mov
pusha
xchg
(bad)
mov
(bad)
mov
sbb
shl
or
(bad)
mov
mov
retf
lds
in
mov
jge
or
sub
(bad)
cmps
imul
jp
std
mov
dec
add
(bad)
clc
inc
push
add
sub
sbb
fdivp
in
popa
pop
cli
jo
jo
mov
jae
out
mov
mov
popa
cdq
movs
in
mov
pop
mov
out
mov
sbb
add
and
pop
aas
push
push
scas
sar
in
hlt
sbb
(bad)
xor
fs
push
scas
xor
and
pop
inc
std
stc
push
mov
or
leave
mov
and
sub
ret
mov
xchg
push
lea
outs
add
xlat
dec
sar
inc
sub
in
inc
mov
fstp
inc
(bad)
arpl
xchg
and
stos
rcl
ins
dec
data16
stc
leave
loope
push
xchg
cdq
pop
ja
mov
jnp
jo
dec
jmp
std
and
jmp
movs
(bad)
in
sub
leave
pushf
sbb
int
fcomp
out
ins
les
xor
push
fist
xchg
bndldx
fwait
pushf
ja
arpl
nop
jnp
push
test
aas
mov
adc
lods
aam
aam
imul
rcr
int3
call
push
cmp
or
retf
xor
lods
(bad)
xchg
add
sub
mov
sub
xchg
cmps
push
push
cli
pop
outs
inc
add
dec
push
je
add
fimul
fiadd
rcr
retf
mov
sbb
fwait
jae
and
or
mov
mov
mov
pop
rcr
xchg
pusha
adc
clc
xchg
idiv
cmps
mov
icebp
pusha
push
dec
je
cs
jp
(bad)
call
cmp
rol
loop
int
xchg
push
movs
call
pop
imul
cwde
loopne
mov
push
outs
imul
inc
push
daa
cmp
and
daa
(bad)
fidivr
sub
test
dec
fimul
dec
inc
and
xchg
xchg
lea
xor
add
gs
cwde
dec
int
cpuid
lea
pop
lea
push
out
mov
stc
in
mov
pop
xor
mov
fsubr
mov
and
loop
out
xor
adc
push
xchg
aam
inc
sbb
push
js
das
sbb
jmp
jne
sub
dec
fs
sbb
lahf
rcr
sub
(bad)
mov
inc
push
stos
inc
addr16
es
in
pop
cmp
pop
call
xchg
cmp
jecxz
push
std
mov
xor
mov
push
icebp
inc
push
clc
xchg
pop
in
xchg
cdq
inc
xchg
dec
push
cs
and
sub
mov
cmp
sar
add
inc
gs
cli
jns
lods
ret
xchg
xchg
xor
fs
jae
sub
(bad)
jp
clc
repz
sbb
lods
icebp
cmp
addr16
jnp
cdq
loop
pop
mov
mov
or
push
lahf
lods
(bad)
push
mov
push
int
nop
pop
inc
out
call
sub
loop
pop
push
test
mov
bound
or
adc
pop
push
xor
popf
cwde
movs
xor
js
and
pop
push
out
and
pop
popa
and
jp
or
fcom
and
bound
pop
sbb
inc
les
ss
iret
add
or
xor
xor
out
jp
pop
add
jmp
movs
scas
mov
and
push
ins
int
jbe
rol
mov
mov
ret
stc
sbb
push
popf
(bad)
fnstenv
out
lea
sbb
or
imul
mov
jbe
leave
mov
add
mov
cld
pop
push
hlt
fst
xor
stc
clc
lods
ins
(bad)
pop
hlt
jnp
adc
push
dec
sahf
daa
(bad)
pop
jmp
outs
fidivr
mov
sub
adc
lods
push
les
pop
xchg
fxch
inc
fld
dec
push
in
out
test
inc
pop
sti
or
add
mov
add
or
stos
pop
cmps
pop
cmp
hlt
adc
sub
daa
cwde
fdiv
xlat
pop
int
dec
sbb
dec
(bad)
xor
cmp
or
arpl
inc
and
test
inc
pusha
pop
mov
call
test
stos
pop
inc
mov
mov
test
fst
adc
adc
xor
ds
adc
cmc
dec
push
or
inc
and
fistp
sbb
(bad)
pop
cmc
jae
sbb
mov
mov
add
fwait
inc
gs
mov
pushf
popa
xor
mov
xchg
mov
loopne
pusha
mov
mov
mov
ret
xchg
inc
push
cmp
cwde
sub
enter
repnz
xchg
sub
clc
adc
inc
out
sar
shl
movs
cmps
lahf
cmps
fisubr
imul
mov
loope
ss
sub
xor
jp
xor
pop
sub
popf
dec
repz
in
scas
dec
adc
jp
sub
add
in
xor
cs
mov
fisttp
js
lock
jle
pop
adc
lds
push
dec
pop
adc
mov
pop
cwde
popf
imul
pop
push
fidivr
in
jle
cwde
push
push
mov
jne
(bad)
xlat
aam
xor
pop
mov
cmp
jo
gs
rcr
cmps
scas
in
loop
dec
mov
mov
push
jbe
js
xchg
fmul
pushf
jge
xor
fscale
fist
jmp
pop
mov
popa
retf
dec
rcr
jl
dec
jmp
cmp
cld
and
xor
xor
ror
push
cmps
cmp
xor
pop
setb
addr16
sbb
sub
mov
push
push
rcl
mov
int
mov
gs
test
fwait
xchg
(bad)
imul
xor
jmp
loop
mov
mov
xchg
xchg
sub
imul
int
mov
shl
pop
jge
mov
add
mov
mov
xor
sub
pop
jo
test
jnp
cmc
inc
mov
ret
and
jmp
jmp
cmp
test
dec
push
dec
xchg
mov
mov
pop
jecxz
jae
sub
retf
stos
ins
ret
sub
cld
pop
ret
dec
jnp
and
xlat
add
pop
sub
jmp
push
mov
jge
and
inc
adc
es
xor
sbb
sub
xchg
push
xor
fisttp
mov
sbb
sub
cmps
jns
pop
outs
sub
test
xchg
and
xchg
sub
pop
adc
lea
(bad)
aaa
repnz
sub
imul
jo
pop
sti
lds
pusha
fs
pusha
mov
jo
in
inc
or
sahf
sub
and
fs
push
sbb
jne
xor
mov
mov
xchg
js
or
push
(bad)
lock
mov
and
pusha
jne
lods
add
pop
sub
pop
pop
and
cmp
and
mov
not
and
mov
or
(bad)
fldcw
xchg
ins
test
lahf
and
aas
xchg
outs
sbb
lds
and
gs
dec
jp
inc
mov
or
lahf
inc
adc
pushf
stc
pop
popf
loopne
(bad)
movs
pusha
xor
das
adc
fidiv
cmp
sub
xor
fist
sahf
dec
(bad)
push
cmps
pop
cmp
stos
xor
aam
fbld
jae
cmc
cmp
xlat
test
ins
jecxz
inc
ds
and
ins
aam
sub
xchg
dec
shr
mov
repz
mov
mov
lds
in
pop
hlt
cmp
adc
and
adc
xlat
lods
xor
push
mov
push
or
xchg
mov
lods
mov
ret
lods
sub
mov
(bad)
mov
cmp
push
jae
popf
into
adc
(bad)
loopne
fwait
ret
xlat
jns
push
adc
mov
ins
sbb
add
popa
rcl
mov
xchg
inc
mov
cmp
xor
mov
repnz
fdiv
neg
push
inc
push
test
shr
pushf
inc
mov
pop
or
test
aaa
mov
mov
dec
cwde
outs
mov
lea
pop
pop
mov
xchg
rcr
fcomp
adc
jmp
inc
or
fstp
repnz
mov
pop
pop
or
xlat
jo
ret
push
jns
popf
aad
xchg
adc
jae
or
xlat
xchg
pop
or
push
out
cli
je
xchg
scas
jbe
cmp
xchg
pop
lea
jg
xchg
push
mov
or
das
aam
push
push
pusha
out
sub
popa
cmps
lahf
aas
mov
js
push
push
retf
fwait
mov
out
pop
dec
pop
push
sbb
leave
(bad)
dec
mov
adc
cdq
and
sbb
xchg
jo
xchg
loop
mov
pushf
adc
test
xchg
cmp
pop
lods
je
pop
sbb
lods
ficomp
jo
jne
add
sti
bound
jl
adc
or
jnp
mov
adc
and
dec
cmp
push
adc
mov
add
push
pop
ss
and
lods
out
gs
mov
xchg
xor
bound
test
sub
dec
icebp
jp
lock
inc
fs
leave
dec
inc
pop
fwait
in
sbb
mov
ret
inc
stc
fisubr
dec
sub
fdiv
bound
pop
xchg
sub
dec
into
addr16
mov
das
pop
pop
cmps
add
jno
mov
(bad)
leave
stos
sbb
loop
scas
inc
out
dec
fsubr
add
cwde
shl
sbb
fstp
in
push
cmp
in
lds
test
mov
sub
in
pop
pop
lods
jge
shl
xor
adc
fstp
std
xchg
push
aam
dec
(bad)
sahf
fstp
(bad)
sub
jmp
lods
push
int
outs
adc
retf
popa
inc
push
stc
ret
mov
in
fisttp
sbb
aam
scas
inc
adc
fisubr
imul
sub
addr16
xor
into
sub
out
nop
mov
lea
test
pusha
sbb
mov
dec
aad
lods
mov
(bad)
out
push
mov
adc
mov
xchg
pop
cmp
(bad)
out
or
imul
mov
lods
jge
jnp
mov
sbb
xor
pushf
jnp
jb
mov
dec
push
movs
loopne
dec
push
add
sub
cmp
stc
sbb
adc
out
out
int3
lock
(bad)
dec
out
and
ins
and
fisubr
dec
mov
jle
test
cmc
or
adc
iret
pusha
push
lods
aad
sub
and
lock
jle
sbb
inc
xor
mov
fistp
retf
or
out
mov
dec
sbb
mov
stc
sbb
(bad)
arpl
mov
xor
and
neg
sbb
mov
and
imul
daa
retf
xchg
repnz
add
jg
mov
jecxz
out
mov
call
and
mov
daa
xor
pop
or
mov
dec
sbb
seta
dec
cmp
ins
sbb
pop
inc
mov
mov
fbld
mov
in
int3
lock
mov
les
jae
sbb
test
scas
enter
mov
icebp
add
xchg
add
stc
daa
xor
pop
pop
dec
lods
push
iret
je
jle
loop
lea
mov
push
(bad)
sbb
jle
add
in
xor
and
gs
or
xor
mov
and
test
movs
mov
jno
pop
clc
jbe
test
lock
imul
xchg
cmp
dec
retf
add
adc
(bad)
mov
sub
(bad)
shr
mov
or
or
imul
mov
aad
mov
xor
sub
lods
xchg
dec
push
adc
and
repz
neg
mov
popf
mul
imul
ja
aad
dec
sub
and
xlat
push
mov
xchg
push
sti
enter
inc
jge
nop
fucomi
push
push
popa
lahf
test
bound
ds
cmps
mov
jl
je
cs
test
loop
mov
sbb
dec
ret
sub
mov
dec
mov
cmp
(bad)
retf
xchg
retf
lea
mov
nop
in
rcr
lock
jmp
scas
adc
fsubr
stos
aad
fs
sahf
and
jp
or
fwait
mov
(bad)
xchg
loop
dec
pop
fbld
rol
inc
xchg
test
jmp
jnp
(bad)
sar
iret
popa
dec
mov
and
add
adc
mov
sahf
sub
push
mov
nop
pop
mov
xor
fisttp
jle
cmp
loopne
mov
mov
js
repz
in
les
(bad)
pop
mov
add
ja
or
cmp
dec
not
mov
in
jns
push
(bad)
outs
test
pusha
dec
fnstcw
mov
loope
mov
dec
fild
bnd
push
test
repz
shl
(bad)
xchg
sbb
pop
int3
in
push
mov
popa
cmps
idiv
pop
adc
jno
push
add
xchg
sbb
mov
jb
retf
push
and
mov
inc
adc
(bad)
and
adc
cld
push
clc
jnp
ror
or
js
ret
mov
call
dec
cmp
aas
sub
lds
stc
cmps
cmps
adc
or
sub
(bad)
rcr
aad
mov
mov
rcr
xchg
jnp
push
std
push
sar
into
adc
mov
ins
pusha
fisubr
test
rol
pusha
or
adc
xor
rcr
xchg
sub
inc
sub
jne
xchg
pop
mov
push
pop
ret
or
mov
sbb
out
into
inc
jns
jo
sub
(bad)
jno
fild
popa
jne
sti
xchg
int3
sub
sub
mov
daa
mov
sub
imul
fild
mov
inc
arpl
outs
xchg
fisubr
xor
loop
dec
out
fsubr
or
sar
cmps
scas
popf
mov
xchg
repz
ins
retf
dec
sahf
pop
mov
leave
or
sar
data16
not
adc
test
rcr
loope
xor
sub
int
les
dec
mov
and
jns
pop
xchg
push
xchg
and
pop
movs
in
jb
repz
mov
inc
pop
shr
inc
fstp
mov
jge
dec
cmp
mov
leave
pop
ja
icebp
xlat
movs
or
fimul
or
lahf
dec
xchg
jb
jmp
enter
dec
call
loop
not
rcl
mov
popf
jp
mov
fcom
mov
push
mov
or
outs
ja
test
mov
leave
sbb
mov
in
adc
ret
rcr
icebp
mov
repnz
mov
dec
sub
xor
sbb
jnp
or
push
scas
add
mov
shr
jne
fsub
and
aam
jmp
arpl
jmp
ss
fisub
inc
dec
lds
mov
ds
jmp
xchg
mov
scas
jnp
jbe
int
les
int3
adc
inc
(bad)
push
and
(bad)
pop
sbb
std
outs
xchg
inc
leave
fisub
aam
push
dec
pop
mov
mov
add
push
push
mov
sub
ja
(bad)
in
sbb
mov
std
mov
pop
xchg
mov
dec
call
in
(bad)
xchg
jle
iret
or
or
mov
add
sub
xchg
push
aad
fild
mov
aam
cmps
sub
push
in
arpl
xchg
dec
daa
or
xchg
push
pop
arpl
das
daa
ja
out
sahf
or
add
ins
icebp
xchg
adc
adc
xchg
sar
jl
jg
test
push
pop
mov
and
jnp
dec
and
adc
dec
mov
pushf
(bad)
mov
adc
push
push
mov
push
(bad)
xor
jge
mov
aad
cld
fs
in
jns
lods
dec
bound
jnp
dec
push
and
add
or
test
imul
loope
xchg
pop
dec
jge
fadd
gs
int3
xor
xor
jle
xor
icebp
lahf
xchg
sub
(bad)
fsqrt
adc
(bad)
push
iret
xchg
jo
cmp
jecxz
aam
fwait
adc
xor
xchg
lods
jl
in
std
addr16
rcr
test
xor
cmc
mov
or
adc
shl
jecxz
dec
scas
add
pop
inc
add
xor
inc
aas
cdq
mov
pop
and
or
ss
mov
xchg
outs
idiv
dec
fmul
hlt
repnz
jmp
xchg
sub
push
jmp
mov
loope
in
jg
ins
and
sub
push
imul
sub
jb
(bad)
mov
mov
xchg
sti
aaa
fimul
jmp
popf
pop
test
mov
lods
pop
cmp
ins
xor
jg
sbb
fs
mov
call
sub
mov
loopne
lods
mov
adc
cmps
mov
es
sub
loopne
repz
vmptrld
jecxz
daa
ror
sbb
repz
add
sub
xchg
sbb
dec
les
cmp
cld
adc
sub
pop
xor
stc
and
(bad)
jecxz
sub
aaa
cmp
mov
xor
in
in
popa
bound
or
jb
jae
and
(bad)
sbb
cli
cdq
imul
out
xor
fdiv
cli
push
mov
les
sahf
or
(bad)
mov
sub
ret
inc
imul
cmps
daa
adc
mov
push
je
push
cmc
outs
pop
push
sbb
ror
and
mov
fstp
mov
outs
adc
out
cld
mov
fnstcw
cld
das
mov
cs
jne
push
sub
ja
cmp
ret
xchg
out
daa
frstor
push
jl
fs
les
mov
iret
arpl
xchg
cli
sbb
ror
mov
test
shr
mov
dec
test
jecxz
dec
xchg
sbb
fwait
adc
jl
xchg
mov
in
sti
pop
mov
pop
xor
fisttp
out
fwait
xor
(bad)
mov
jo
in
push
jmp
xchg
leave
out
inc
mov
cli
push
cmp
shl
mov
xor
aad
dec
jae
sub
xor
ss
sbb
es
mov
icebp
popf
mov
xchg
outs
test
push
xchg
adc
inc
mov
cmp
ret
add
out
sbb
push
fidiv
sub
cmp
mov
add
retf
and
std
bound
out
out
adc
pop
xchg
call
dec
cmp
push
leave
outs
or
lods
call
dec
test
sbb
push
mov
fimul
ins
into
(bad)
jnp
cmp
add
(bad)
fsubr
xor
mov
mov
mov
add
xchg
sbb
sub
ror
(bad)
mov
movs
fidivr
pop
xchg
jp
in
aam
or
retf
cwde
push
div
jge
jbe
dec
movs
sbb
inc
pusha
mov
fiadd
add
adc
sar
pop
and
sub
sahf
add
repnz
cmp
push
fist
popa
xor
loop
(bad)
les
ds
ds
add
jbe
out
jecxz
mov
mov
je
sub
dec
cmc
add
ret
repnz
sbb
jl
pop
addr16
aaa
mov
mov
mov
movs
adc
mov
xchg
xlat
pop
add
inc
adc
sbb
or
sbb
jo
ror
inc
leave
xor
nop
movs
adc
jnp
ror
add
or
cmp
adc
mov
mov
fs
cmp
(bad)
inc
pop
shl
push
xor
mov
push
cmp
in
sub
call
sar
popf
push
inc
jmp
xchg
loope
ja
lea
or
ror
out
mov
mov
out
clc
sbb
imul
xchg
and
movs
jbe
mov
xchg
mov
fdiv
out
sbb
mov
(bad)
fadd
leave
xchg
push
mov
push
mov
jg
rcr
push
push
lahf
aad
in
lods
test
int3
and
or
lea
(bad)
cmps
fisttp
xchg
call
mov
xchg
xchg
je
inc
mov
xchg
(bad)
movs
sub
add
scas
sbb
fnstcw
add
jecxz
repz
push
(bad)
xchg
repz
in
push
pop
xor
gs
cli
and
inc
mov
dec
adc
inc
jecxz
cmc
inc
pop
jle
sub
test
in
movs
inc
sbb
inc
mov
add
mov
outs
aaa
mov
pop
nop
mul
lock
or
cld
ins
leave
mov
cmps
icebp
ret
loope
sbb
fidivr
test
push
mov
cmps
push
pushf
mov
push
shl
push
icebp
fstp
stc
mov
pop
icebp
pop
cdq
ret
mov
lods
cmp
ret
ins
aad
mov
cmp
xchg
inc
out
fwait
dec
(bad)
jecxz
pop
inc
inc
lea
push
repz
xlat
movs
scas
xchg
dec
rcl
loope
mov
stc
add
dec
dec
test
(bad)
ja
add
and
and
dec
fsub
mov
xor
ins
imul
out
cmp
rcr
popf
xlat
lods
test
jns
pushf
pop
jmp
sti
dec
rcr
push
idiv
fdiv
push
mov
mov
jne
and
sbb
fcmovne
or
loop
add
xchg
jae
jmp
enter
and
ins
pop
mov
ret
sbb
cdq
jb
mov
mov
ins
push
mov
push
shl
test
push
mov
pusha
add
or
add
xlat
cmp
stos
data16
cld
sub
sub
xor
test
ins
cs
test
or
sub
add
adc
inc
mov
dec
(bad)
cmp
jae
out
jns
cmp
jmp
and
les
das
dec
inc
out
scas
mov
imul
pop
cs
mov
ins
in
adc
nop
add
pushf
add
repnz
xchg
jmp
(bad)
sti
fmul
daa
out
dec
outs
sti
dec
aad
xor
inc
push
add
push
sub
push
pop
aas
aam
icebp
xchg
mov
dec
mov
jnp
pop
adc
mov
imul
xor
dec
mov
imul
cld
sub
xor
mov
ds
sub
ss
imul
dec
dec
fcomp
lds
and
ja
pop
mov
daa
mov
mov
mov
sub
sbb
mov
pop
(bad)
push
scas
repz
scas
mov
shl
dec
push
test
add
sub
shl
ins
xor
jno
imul
add
out
das
fsubr
rcr
add
jmp
enter
dec
dec
push
cmp
in
repz
push
mov
shr
xor
mov
push
call
mov
repz
add
call
mov
xor
mov
sub
and
ss
jae
inc
inc
jmp
mov
push
lea
jp
test
arpl
jb
mov
adc
cmp
loope
jg
lock
push
iret
out
sub
aas
cmp
mov
pop
int
xor
mov
jbe
nop
scas
add
(bad)
out
scas
mov
jns
adc
out
dec
xchg
std
dec
(bad)
xchg
lea
fwait
sub
std
fld
loopne
(bad)
lods
lods
jp
mov
mov
xchg
lea
mov
pop
lea
mov
pop
pop
xor
jb
cmps
and
stos
lods
add
pop
mov
cmps
mov
mov
loop
jmp
push
xor
jns
retf
fbld
xchg
maxps
clc
test
fistp
jb
int3
and
add
stos
mov
inc
jmp
fs
jno
add
sbb
fadd
cmp
mov
into
and
inc
xchg
pushf
loopne
pop
xor
jle
push
or
xor
rol
sub
or
js
int3
jmp
push
stos
fidiv
loop
mov
jmp
dec
xchg
mov
stos
test
or
idiv
add
add
xchg
repz
cmp
jle
jnp
or
int3
test
or
pop
xchg
daa
ins
push
dec
jmp
xchg
rcr
pop
fld
pop
add
outs
les
mov
sub
and
cmp
push
ret
push
cmp
mov
jns
call
fldcw
rcl
add
in
push
bswap
(bad)
jmp
pop
fcomp
mov
or
xor
out
loope
das
jmp
mul
pop
mov
call
and
in
dec
adc
or
jl
ss
dec
jns
mov
ins
xor
mov
ror
pop
mov
fwait
jle
(bad)
sbb
xchg
rcr
es
inc
xchg
cmp
jmp
lock
(bad)
scas
pop
(bad)
retf
jg
mov
pop
jmp
mov
lahf
mov
test
lea
pop
loop
jecxz
cmp
js
xor
and
push
(bad)
jo
sbb
jae
add
sub
push
out
fs
jmp
jmp
xor
push
push
mov
inc
jmp
dec
or
pop
cwde
(bad)
ds
pop
retf
pushf
packsswb
mov
or
mov
cdq
and
sub
(bad)
int3
fidivr
stos
and
push
aas
mov
xlat
push
jge
cmp
cmp
icebp
pop
(bad)
int
or
sbb
stos
int
popf
cmp
clc
test
mov
push
cmp
push
jb
add
mov
jns
mov
xor
adc
sahf
cli
into
sar
in
cwde
inc
imul
mov
sub
shl
(bad)
leave
mov
call
aaa
push
popa
dec
loopne
enter
daa
lods
clc
addr16
xchg
or
xchg
push
aad
popf
add
add
stos
jmp
popf
movs
paddsb
fldenv
jg
pop
clc
popf
mov
push
jo
cld
adc
sub
mov
and
xchg
(bad)
icebp
inc
pop
jmp
mov
dec
xchg
imul
inc
ror
push
ror
cdq
mov
add
es
xchg
ds
test
xchg
add
mov
pop
gs
call
ins
ror
pop
leave
inc
push
in
cmp
dec
dec
mov
xor
push
jl
test
stos
into
repz
sub
(bad)
ins
aaa
in
push
call
xchg
pop
fiadd
aaa
loop
and
push
dec
lods
dec
pop
pop
push
test
jecxz
popf
dec
or
retf
(bad)
cmps
xor
cmp
(bad)
xchg
jno
adc
add
cmp
and
hlt
mov
popf
push
es
retf
retf
sbb
or
xor
imul
int
mov
nop
hlt
push
cld
mov
ins
fidiv
inc
pushf
iretw
int3
or
outs
xor
lods
pop
cmp
mov
inc
or
(bad)
test
push
or
inc
int3
test
push
push
(bad)
(bad)
std
aas
sbb
pop
ret
adc
push
ds
pop
mov
mov
in
sub
push
cmps
sub
sahf
and
sahf
adc
ins
jb
mov
or
push
(bad)
adc
stos
fs
sbb
add
cmc
outs
pushf
cmp
xor
xor
shl
stos
pop
mov
mov
mov
add
hlt
push
mov
cld
inc
and
push
retf
in
shr
sbb
out
ror
je
(bad)
sub
sbb
(bad)
dec
clc
iret
push
ja
inc
fnstenv
mov
jb
shl
icebp
inc
into
jb
sub
cmp
jecxz
mov
out
lock
mov
jbe
lea
lea
cmp
adc
in
cmp
cli
jmp
jae
ror
shl
aad
xchg
jmp
sbb
aad
sub
dec
sbb
movs
std
repz
inc
(bad)
aad
js
test
test
(bad)
cmp
retf
cmp
repnz
(bad)
outs
pop
push
mov
iret
xchg
push
sub
dec
in
xchg
dec
in
or
pop
sbb
inc
push
jne
fldenv
mov
pop
sbb
adc
dec
jnp
test
dec
je
cli
or
fldcw
or
in
xchg
in
mov
xor
scas
or
stos
rcl
inc
lahf
je
inc
mov
jnp
mov
and
adc
jle
sar
dec
dec
pop
loopne
test
pusha
std
mov
and
jns
loopne
mov
adc
xchg
cli
retf
jg
push
mov
and
jae
(bad)
xor
mov
push
sub
xor
jne
sub
mov
out
fwait
mov
or
xchg
mov
or
int
pop
mov
lds
and
inc
pop
xchg
jo
jp
popa
sbb
sbb
lds
fdiv
adc
es
adc
js
jno
imul
fld
sub
mov
mov
pop
xor
mov
dec
cmp
call
xchg
and
mov
out
inc
(bad)
and
xchg
adc
xchg
cmp
popa
push
add
inc
hlt
jns
mov
add
stc
arpl
mov
in
cmp
jecxz
fisub
dec
imul
xchg
lods
xor
dec
and
xor
jmp
jmp
movs
repnz
jg
cmps
adc
mov
inc
push
xchg
cmp
in
in
mov
cmp
xor
in
add
push
sbb
mov
mov
call
cwde
sbb
popa
push
jecxz
inc
aam
push
test
call
xor
mov
fwait
int3
retf
nop
lods
dec
push
outs
inc
pop
imul
mov
push
sbb
jo
lods
mov
lahf
fmul
stos
int
in
mov
daa
pop
sbb
add
mov
repnz
jb
dec
mov
out
dec
fcom
xor
jae
daa
lock
gs
in
cmps
icebp
xor
xor
outs
and
inc
add
loop
cmc
clc
div
inc
push
ret
out
mov
xchg
shl
xor
mov
in
pushf
inc
jecxz
stos
sbb
test
xchg
dec
aas
mov
mov
xchg
sbb
xor
fucomi
scas
xchg
loope
je
push
inc
push
lock
ret
test
mov
push
adc
sbb
inc
je
(bad)
lock
jmp
add
lea
xor
dec
ror
push
adc
add
jno
xor
(bad)
fld
(bad)
cmps
sti
nop
jg
mov
inc
je
test
mov
shl
mov
shl
pushf
dec
sub
cmp
mov
cmp
mov
sti
in
pop
sub
sub
stos
test
sbb
call
int3
(bad)
repnz
and
sub
sbb
mov
jmp
mov
sub
push
dec
aam
outs
push
lods
mov
leave
enter
sub
mov
dec
push
xchg
pushf
data16
sbb
frstor
sub
sub
sub
mov
pop
sbb
mov
cs
mov
xor
sbb
mov
push
push
iret
dec
cld
call
and
fild
mov
jg
cmc
ret
add
cmp
mov
aaa
add
add
and
pop
adc
jb
aaa
in
(bad)
test
push
mov
mov
ja
jecxz
sub
shl
fs
aaa
inc
jb
sub
cmp
ror
imul
cmps
(bad)
repz
dec
loope
adc
data16
dec
les
xor
aas
and
xor
mov
retw
int3
mov
imul
ins
(bad)
lahf
or
and
pushf
es
adc
jmp
pop
lea
(bad)
shl
pop
mov
sub
pop
stos
adc
inc
sub
pushf
lea
fisub
push
clc
repz
imul
push
and
and
mov
and
stc
inc
sbb
dec
cld
push
cli
adc
xchg
xor
fwait
and
and
pusha
fnstsw
mov
ret
add
mov
retf
pop
jbe
fistp
rcl
sub
mov
add
xchg
push
xor
test
sbb
in
sar
xchg
dec
mov
push
jmp
imul
loop
arpl
cwde
sahf
in
test
(bad)
and
mov
cmp
or
aaa
pop
dec
sub
sbb
in
push
pop
aaa
mov
and
addr16
mov
add
enter
mov
lahf
imul
scas
xor
rol
dec
cmp
es
adc
ret
into
add
mov
jl
test
mov
popf
push
sub
jb
jno
add
pusha
mov
dec
cmp
fsubr
dec
scas
neg
cli
cmps
leave
aaa
or
cmp
cmp
sub
pop
cs
jmp
inc
pop
dec
push
(bad)
or
jle
jle
out
xchg
dec
int3
pop
(bad)
lock
push
fstp
sbb
lods
inc
out
jl
cmps
das
push
inc
int3
ins
xchg
push
dec
mov
lock
(bad)
push
pop
cli
or
mov
std
sbb
and
repz
test
adc
dec
jl
popf
stos
push
mov
push
(bad)
push
or
inc
call
fsqrt
mov
cmp
push
xlat
ror
xor
test
jnp
xchg
aam
hlt
aam
stos
outs
jl
sbb
dec
leave
sub
push
in
stos
movs
pop
sub
and
fs
shr
mov
popa
jnp
not
mov
pusha
scas
ds
mov
xchg
pusha
sbb
jg
into
mov
jo
inc
mov
mov
sbb
jae
in
adc
pop
aad
mov
xchg
int3
xchg
mov
bound
adc
cmp
mov
leave
ds
gs
jge
jne
rcl
xlat
inc
jo
nop
rol
out
mov
ret
sahf
cli
or
bound
iret
fild
iret
retf
mov
(bad)
cmp
adc
(bad)
fist
jmp
pop
push
push
imul
test
add
ins
mov
sbb
and
fimul
add
pop
pop
popa
mov
add
jp
pop
aam
pusha
xchg
mov
jmp
stc
pop
ja
dec
test
das
mov
iret
push
out
loop
test
imul
pop
sar
xchg
add
pop
aad
fld
pop
sub
push
lea
xor
(bad)
out
popa
cs
adc
push
mov
xchg
mov
repnz
out
dec
pushf
add
fst
push
pop
mov
and
stos
xchg
cdq
or
ret
mov
jno
popa
mov
push
xchg
fwait
fs
outs
fsubp
gs
xchg
pop
das
sub
and
in
retf
jae
adc
push
jbe
fsubr
sbb
jae
jle
test
test
xchg
push
jecxz
cmps
and
adc
ret
adc
lea
(bad)
out
adc
jle
gs
popa
cwde
shr
push
gs
shr
adc
addr16
push
fs
aas
scas
adc
sbb
push
das
popf
mov
ror
icebp
loop
test
ret
or
shl
add
dec
jbe
jne
stos
lahf
adc
aad
adc
lods
jmp
mov
cmp
imul
test
mov
movs
mov
(bad)
out
mov
data16
jbe
iret
dec
adc
push
xchg
add
loope
loop
loopne
mov
xor
in
arpl
add
call
leave
mov
jmp
jo
push
fcmovu
push
rol
mov
cdq
sub
inc
adc
lds
lahf
dec
in
mov
sub
inc
out
sub
and
fs
mov
out
jle
jne
into
shl
xchg
ror
lods
xchg
in
ret
jp
mov
sub
pop
call
nop
mov
mov
ja
rcl
pop
mov
pop
xor
dec
sbb
in
dec
cmp
frstor
sbb
xor
pop
pop
mov
gs
xchg
dec
pop
stos
test
stc
add
cmp
frstor
outs
xor
xor
mov
retf
scas
in
dec
data16
test
shl
xor
add
inc
or
outs
daa
jg
cmp
xor
into
or
inc
fnstenv
jp
addr16
add
aaa
xlat
xor
mov
popf
add
pusha
xor
cmp
xor
fstp
sbb
mov
ins
stos
leave
popa
jne
or
sbb
dec
sub
jmp
jmp
cmp
popf
cmp
(bad)
push
call
mov
loope
imul
js
fstp
inc
in
dec
pushf
in
cmps
and
cmps
fidiv
je
mov
out
jmp
push
inc
mov
xchg
test
xchg
outs
(bad)
in
pop
sahf
or
(bad)
mov
sbb
cmp
in
mov
dec
pop
push
rcl
sar
(bad)
(bad)
jecxz
int3
out
dec
add
jecxz
rcl
imul
mov
into
ss
fwait
xchg
xchg
inc
test
xchg
pushf
xchg
xchg
jbe
mov
fcomp
ret
push
and
in
ds
xor
xor
aad
sbb
cmp
scas
add
jnp
lahf
jp
dec
inc
gs
inc
push
and
cmp
ja
ja
sub
sub
sub
out
cs
int
add
pop
setae
ror
cs
sbb
mov
cli
or
ins
jns
lahf
pop
(bad)
xchg
jmp
jge
rcr
dec
neg
mov
pushf
js
test
outs
cmp
in
xchg
retf
movs
push
sbb
adc
gs
add
xor
dec
fisub
mov
cmps
dec
ja
fidivr
jbe
cli
test
push
es
sbb
les
imul
mov
imul
jbe
mov
les
loop
cmp
test
stos
daa
xor
dec
retf
out
and
into
jp
fdivr
scas
test
aas
and
outs
loop
mov
mov
(bad)
cmp
dec
dec
jecxz
fcom
cwde
call
je
ins
jp
jns
jae
cmp
xchg
stc
cmp
xor
sub
push
xchg
cdq
jmp
mov
jmp
int
lods
data16
adc
jmp
jge
(bad)
repz
and
ins
(bad)
test
jae
js
clc
cmp
jns
int3
push
repnz
outs
lahf
xor
adc
sub
pop
push
test
pop
fist
jo
xor
ret
movs
out
(bad)
in
jg
sbb
jnp
scas
ret
xor
(bad)
sub
jg
push
xchg
pop
icebp
xor
movs
push
ins
sub
lods
(bad)
and
mov
push
xchg
(bad)
fisttp
xchg
jno
aas
inc
stos
ss
movs
out
data16
xchg
adc
dec
outs
in
xchg
fadd
push
push
call
test
out
std
fnstcw
cmps
add
fwait
dec
cmp
(bad)
push
dec
xor
je
ja
pop
mov
or
es
mov
fpatan
mov
add
xchg
add
mov
fisttp
xor
push
es
push
in
lods
jmp
lock
inc
(bad)
sub
mov
mov
jecxz
cmp
lds
out
leave
xchg
pop
aaa
push
loop
cli
lock
ja
jle
pop
mov
ret
clc
in
movs
sahf
push
and
imul
popa
pushf
mov
xchg
cmps
add
xchg
cmp
lods
sbb
cmp
or
data16
xor
inc
stos
pop
xchg
xchg
test
jns
popf
push
fmul
ret
cmp
call
pop
xor
cmp
fadd
loopne
mov
imul
ret
push
mov
and
popf
sbb
daa
inc
(bad)
sbb
loop
call
cmc
cmp
mov
pushf
repz
imul
xor
cmps
(bad)
push
jbe
test
icebp
push
into
mov
mov
test
sub
inc
fwait
push
sub
mov
scas
iret
int3
out
sbb
cli
pop
sbb
imul
cmp
cmp
push
inc
stos
call
cmc
movs
enter
icebp
retf
pop
movs
or
cld
aad
fnsave
add
xchg
aam
stc
in
call
and
push
ret
xor
jmp
out
mov
push
cmp
mov
mov
hlt
aaa
aam
scas
ret
add
jno
iret
push
mov
fld
pop
pop
push
push
add
add
sub
cmp
out
xchg
dec
sbb
test
repz
xchg
mov
inc
ret
clc
sbb
push
aaa
nop
jl
aam
out
ins
push
aam
leave
add
add
pop
test
push
sbb
sbb
push
jmp
mov
add
sub
pop
iret
mov
out
pop
push
leave
xor
inc
xlat
addr16
pop
int
jge
push
cmp
or
aas
xchg
sub
shr
push
inc
mov
aam
and
pop
shl
mov
fwait
adc
call
push
ror
xbegin
cmp
sbb
cli
sub
xor
das
and
push
and
push
test
retf
pop
lock
je
neg
or
mov
xor
mov
fst
sub
dec
or
mov
mov
jmp
mov
adc
cmps
shl
hlt
in
inc
ins
mov
ins
sub
test
pop
and
cmps
inc
push
fsubr
add
icebp
xor
sbb
xchg
xchg
inc
push
rcr
push
sub
push
xchg
jle
sbb
push
rcr
mov
xchg
xor
adc
ins
push
sub
jns
fadd
lock
ret
fsubp
jo
adc
adc
pop
fcomp
xchg
cwde
iret
inc
std
cmp
adc
mov
imul
into
pop
pop
mov
repz
loopne
loop
adc
xchg
retf
outs
call
add
mov
std
cmp
mov
sbb
xchg
inc
int3
imul
aad
lock
into
and
mov
lock
ret
sbb
popa
int
dec
sub
popa
fsubr
mov
dec
dec
pusha
loope
sbb
adc
in
es
sub
add
retf
cdq
lods
jp
mov
test
es
aaa
sbb
xchg
(bad)
dec
mov
mov
sub
push
or
aam
sbb
inc
add
(bad)
sahf
rcr
(bad)
cdq
fcom
cmp
enter
jge
jb
dec
test
sti
mov
repz
sahf
(bad)
sbb
jl
and
cli
inc
in
push
mov
test
cmp
push
pop
cmps
aas
dec
adc
icebp
adc
push
imul
jns
cmp
mov
push
ins
es
pusha
xor
inc
push
call
or
sbb
call
imul
mov
lods
push
movs
lahf
lock
add
int
div
loopne
lock
in
or
aad
add
xchg
sub
cmp
mov
ja
xchg
xchg
adc
dec
adc
jne
outs
in
aaa
fidiv
push
stc
xor
mov
fld
frstor
rcl
aad
loop
dec
xchg
daa
cmp
(bad)
jmp
push
sub
sbb
stos
xchg
mov
mov
push
test
sar
add
shr
jne
cdq
aad
pop
adc
rcl
loope
clc
(bad)
fldenv
cmp
lods
pop
xor
call
sbb
push
fmul
std
adc
xchg
popw
add
iret
nop
mov
adc
sub
or
stc
dec
jbe
in
push
jne
cmp
cli
push
adc
and
imul
fistp
enter
adc
xchg
jp
ins
aas
into
and
and
push
mov
cld
dec
cmp
dec
movs
lds
cmp
jo
ror
bnd
xchg
or
test
xchg
push
(bad)
es
push
inc
imul
pop
fucomi
lods
pop
push
out
rcl
adc
push
add
mov
sti
hlt
mov
push
jnp
xchg
int
push
frstor
fdivrp
and
mov
inc
mov
fisub
mov
dec
push
mov
pop
pop
loope
or
mov
or
out
dec
xchg
outs
add
fwait
dec
mov
sbb
stc
repnz
in
xchg
retf
or
lods
call
sub
push
es
in
leave
dec
sub
pushf
adc
int
pop
lods
sub
sbb
push
scas
add
xor
add
iret
push
int3
mov
loopne
mov
xor
mov
push
fcom
jmp
fidivr
inc
adc
data16
les
imul
in
inc
cmps
ficomp
scas
lods
clc
mov
test
jp
bound
cld
cmp
(bad)
in
movups
inc
cdq
pop
pop
mov
sub
push
pop
add
into
push
cdq
mov
mov
fdiv
in
repz
ret
mov
mov
jns
fbstp
or
pop
and
xor
in
out
mov
jl
mov
shl
aad
cld
jmp
pop
sar
xor
scas
xor
mov
aas
fnsave
push
in
(bad)
movs
and
and
js
mov
add
ficom
sbb
jnp
outs
(bad)
into
mov
ins
mov
fwait
mov
jl
fdivr
jmp
cwde
sbb
mul
iret
xchg
jae
(bad)
dec
adc
pop
mov
mov
xchg
repz
js
fsub
jns
pop
mov
retf
add
popf
push
retf
mov
jg
cs
inc
arpl
adc
std
fld
cmps
xchg
(bad)
sub
mov
mov
add
out
in
cld
push
ror
dec
gs
adc
mov
cmp
push
xor
mov
dec
or
lahf
adc
xor
jl
mov
jae
xor
scas
mov
repnz
sub
mov
inc
add
cs
fdivr
cld
leave
add
std
aas
stos
jbe
and
or
aam
mov
mov
retf
or
jo
add
pop
mov
cli
cmp
xchg
int
adc
(bad)
retf
movs
xchg
test
data16
mov
xor
pop
mov
pushf
xchg
and
or
mov
mov
push
or
sub
adc
int3
shr
aaa
out
pop
fiadd
sub
and
call
mov
jg
std
movs
xor
mov
addr16
repnz
mov
and
ja
(bad)
test
adc
std
loope
rcl
xor
xchg
xchg
neg
scas
adc
pop
push
sti
mov
rol
out
inc
add
cli
jge
in
jbe
dec
push
movs
(bad)
cwde
cs
shr
jmp
in
retf
cdq
mov
push
mov
dec
add
cwde
dec
(bad)
inc
sub
adc
shl
pop
test
and
imul
push
cmp
xchg
or
and
inc
sub
inc
adc
mov
neg
and
push
mov
out
les
lods
mov
sbb
pop
cmp
jmp
xchg
retf
and
(bad)
adc
(bad)
imul
cmp
(bad)
pop
aad
test
push
mov
cmp
mov
jp
pusha
mov
aad
add
mov
stos
sbb
jne
je
sbb
inc
lock
mov
push
xchg
add
lea
int
push
jmp
clc
imul
inc
nop
rol
std
stc
in
cmova
push
add
test
inc
out
lods
xor
fwait
add
aad
cmc
sub
or
cmp
std
mov
inc
mov
popa
out
aad
inc
pop
add
jecxz
mov
push
mov
jg
sub
pushf
and
mov
mov
push
mov
arpl
in
inc
test
outs
cmps
xchg
fdiv
aaa
push
sar
imul
pusha
sbb
retf
xchg
cdq
fdiv
cmp
sub
jbe
pop
pop
ins
pusha
and
repnz
xor
fidivr
add
mov
sub
pop
cld
xlat
outs
div
aad
fcom
jp
adc
mov
adc
gs
(bad)
idiv
sbb
sub
call
adc
sub
cmp
stos
jno
mov
xchg
pop
loope
pop
add
or
mov
lds
leave
call
mov
push
sub
scas
sbb
xchg
jmp
add
fs
fist
push
in
repnz
clc
cld
popf
sub
out
into
dec
push
das
sbb
pusha
and
lahf
adc
adc
sbb
mov
les
aaa
mov
xlat
repnz
bnd
ins
(bad)
lods
mov
sub
(bad)
push
js
int3
and
xor
adc
movs
xor
jns
mov
push
pop
cs
mov
int
mov
loope
int3
sti
pop
inc
in
adc
jnp
(bad)
jle
(bad)
out
retf
(bad)
xor
fnstcw
and
mov
aam
pop
adc
cmps
jl
lock
xchg
(bad)
cmp
test
sbb
push
das
leave
pushf
cmp
call
std
popf
mov
int3
outs
mov
xor
jp
imul
movs
push
mov
ret
or
fadd
inc
adc
lahf
push
call
jnp
fs
jmp
and
ret
and
mov
sar
push
and
int3
das
xchg
xor
lds
mov
jo
and
loop
inc
adc
xchg
lds
mov
int
sar
jmp
mov
scas
repnz
push
push
add
xor
sahf
and
xor
rol
push
mov
out
call
jge
xchg
aas
std
pop
mov
pop
lds
mov
xor
rol
mov
cmp
scas
popw
scas
push
loop
iret
jno
or
cmps
jecxz
call
cwde
daa
sahf
lea
shr
xchg
mov
add
xchg
je
dec
outs
mov
xor
jbe
mov
ja
lock
into
push
sbb
jp
jae
(bad)
dec
lods
les
dec
pop
cmc
add
and
mov
fdivr
push
iret
mov
out
cmp
pop
ret
jl
mov
loop
imul
repnz
loop
adc
std
das
add
push
stos
(bad)
adc
movs
rcr
pop
mov
cs
retf
mov
shr
test
sub
and
idiv
pop
inc
mov
mov
outs
ror
mov
add
ja
hlt
les
cmps
test
add
mov
cmp
outs
adc
cmp
mov
pand
mov
shl
test
push
xor
imul
mov
cmp
dec
jmp
ror
cmp
cmc
mov
leave
scas
push
push
xchg
retf
cli
and
std
loope
dec
mov
and
xor
hlt
add
out
jmp
or
std
mov
sub
das
js
xchg
jbe
cmp
ins
call
call
inc
pushf
adc
cmp
xor
mov
jne
ror
xchg
pop
or
imul
gs
fiadd
nop
call
mov
and
sub
int3
clc
movs
shr
test
rcl
imul
sub
jns
push
sub
int3
cmovge
dec
test
imul
test
unpckhps
add
fdiv
pop
ja
je
lea
pop
push
movs
in
ret
shl
add
and
adc
lds
adc
in
loop
mov
pushf
or
and
imul
rol
test
jp
jae
aam
(bad)
stc
add
(bad)
call
repz
jge
dec
fs
dec
frstor
sub
mov
or
inc
pop
data16
jg
sbb
push
sub
push
mov
fimul
aad
inc
mov
sub
xor
std
mov
jbe
sbb
mov
cmc
lahf
gs
add
or
adc
in
push
int3
add
pop
pushf
push
es
out
mov
gs
sbb
bnd
stos
jle
std
mov
test
pop
test
push
cmp
jae
stos
xlat
cld
test
sahf
iret
adc
push
in
rcl
fld
sbb
ins
(bad)
or
sub
(bad)
mov
push
push
in
mov
adc
cmps
cmp
(bad)
xchg
push
cli
and
jbe
push
sbb
aad
sti
fs
and
mov
lds
mov
mov
cli
(bad)
mov
mov
test
inc
sahf
jmp
xchg
gs
xor
sbb
das
cmp
mov
ret
les
test
ret
sub
fxtract
fcom
inc
jne
jno
repnz
pop
sub
adc
cmp
xchg
cwde
mov
inc
jbe
xor
gs
mov
mov
or
(bad)
adc
ins
cli
mov
sub
fcmovnb
sbb
cmp
inc
jo
pop
jmp
pop
cli
mov
xchg
arpl
pop
cmc
lods
ins
mov
fild
out
inc
std
ror
int3
dec
and
mov
xor
movs
jne
repz
inc
je
jle
add
sbb
pop
out
mov
and
inc
and
test
enter
inc
sbb
pop
mov
leave
pop
mov
test
inc
data16
(bad)
mov
dec
out
jl
enter
pop
xchg
(bad)
push
aam
test
adc
sub
fdivr
jns
ret
push
adc
cmp
(bad)
aad
and
dec
in
aas
jbe
add
stos
lea
mov
ret
pop
jl
mov
add
test
js
cmp
stos
in
pop
(bad)
cmc
cmc
int3
push
inc
jae
inc
rol
mov
cmp
mov
mov
xchg
adc
xor
mov
sar
retf
movs
jnp
or
and
fisub
adc
sub
shl
push
sahf
icebp
and
and
stos
jo
(bad)
push
jno
(bad)
cwde
out
add
ins
ret
fs
jl
xchg
aaa
sahf
mov
push
or
pop
dec
(bad)
cmp
sbb
aaa
outs
inc
fsubrp
call
clc
(bad)
(bad)
pop
retf
ret
xchg
inc
cwde
mov
outs
cmps
push
dec
xor
mov
imul
push
sub
fcmovnb
scas
and
(bad)
enter
or
cmp
les
daa
sysexit
mov
rcl
ror
cli
call
inc
sti
sub
out
add
pandn
jne
imul
dec
xlat
push
adc
mov
iret
mov
mov
div
push
loop
stos
xchg
cmp
fisubr
push
adc
nop
fild
cmp
pop
imul
sub
clc
sbb
shl
mov
add
mov
je
shl
inc
pop
xchg
inc
and
cs
inc
(bad)
ins
scas
div
jecxz
stos
out
call
fwait
mov
int
mov
std
fld
add
test
jne
popf
outs
cmp
dec
mov
jne
aaa
adc
fistp
loope
mov
imul
push
adc
or
mov
pop
jl
xchg
sbb
push
jp
sub
dec
xchg
mov
and
test
pushf
jnp
sahf
ja
xchg
into
daa
out
and
inc
fldenv
and
mov
popa
jno
xor
loopne
sub
xchg
bound
mov
aam
and
fidivr
or
adc
push
arpl
sbb
jmp
ins
adc
cmps
fild
(bad)
mov
and
xchg
dec
ins
xor
dec
xlat
mov
ret
jle
cld
mov
(bad)
cmps
xor
sar
jmp
data16
inc
mov
les
popf
loopne
les
ret
jnp
jg
xor
cmp
adc
scas
pause
ds
data16
(bad)
lea
xchg
retf
retf
and
sub
fcmove
sub
in
inc
inc
sub
test
rcl
fwait
pop
cs
jb
aam
dec
cmps
lods
aaa
or
pop
adc
add
in
jle
sub
into
or
in
add
jns
cmp
loope
mov
retf
cmp
lods
jmp
mov
fdiv
cwde
add
int
bound
pop
push
add
fistp
push
imul
xchg
lods
retw
fbstp
inc
bnd
test
mov
inc
sbb
xchg
pop
inc
jecxz
sti
out
mov
pop
xchg
and
test
dec
je
or
ficomp
addr16
push
test
xlat
xor
pop
sahf
aaa
aas
xchg
es
(bad)
push
mov
rcr
test
xchg
retf
cmp
je
fistp
inc
pop
mov
into
cmc
add
out
nop
(bad)
push
ja
fldenv
xchg
fwait
xor
inc
adc
jp
dec
aaa
jl
iret
add
cmp
fst
jge
fisttp
inc
or
fcomp
mov
les
add
in
sub
xor
test
jmp
(bad)
fcomip
add
cwde
stos
ss
loopne
test
fs
push
iret
sub
xchg
and
(bad)
bound
adc
jmp
or
sbb
scas
or
xchg
jl
stos
sahf
mov
daa
iret
xor
ins
data16
retf
pop
mov
fs
pusha
test
ds
mov
cld
xchg
arpl
inc
inc
xor
ins
je
jns
push
imul
ja
xor
mov
lds
mov
mov
jb
cmp
jge
push
stc
mov
jl
mov
imul
aaa
add
adc
fisttp
pusha
xchg
add
xchg
sub
mov
outs
cmp
sub
icebp
xor
fwait
adc
lock
xor
xchg
sti
in
fstp
or
push
mov
pop
and
add
mov
iret
adc
aaa
sub
sbb
nop
pop
inc
or
mov
xor
stos
add
in
mov
push
jno
test
xor
mov
mov
sbb
xor
cmp
retf
shr
fsubr
push
ins
sbb
add
adc
add
stc
add
mov
mov
pusha
in
push
jge
jne
imul
imul
xchg
mov
sbb
pop
mov
fisubr
fsubr
(bad)
dec
aad
and
loop
bound
push
jnp
inc
sbb
(bad)
nop
push
mov
and
ror
mov
outs
andnps
movs
xor
out
add
jno
xor
cmp
rcr
or
dec
(bad)
nop
int3
sbb
xor
cli
popa
cmp
call
sahf
jmp
mov
je
adc
popf
xor
mov
jecxz
pop
jnp
aaa
xor
push
or
cmc
repnz
add
inc
enter
push
scas
lahf
mov
(bad)
(bad)
mov
test
jmp
xlat
add
and
push
ja
(bad)
pop
xor
fst
cmps
gs
fcmovnbe
iret
fisub
mov
sub
ja
cmp
in
test
fdivr
or
sub
mov
push
or
pop
or
in
retf
loop
aad
pop
iret
mov
jno
movs
xchg
xchg
ffree
fnstsw
mov
xchg
cli
data16
inc
int3
dec
sbb
hlt
push
repnz
(bad)
xchg
dec
test
push
scas
sbb
fld
or
pushf
pop
add
xchg
jne
sbb
mov
aam
fwait
xchg
mov
sub
sti
cld
push
push
mov
pop
sub
addr16
ja
cmps
rcl
push
aad
fs
mov
mov
xchg
xor
and
jo
stos
test
push
(bad)
hlt
inc
mov
inc
cli
or
or
jmp
test
shl
sbb
outs
lods
loope
sar
mov
jo
call
dec
popa
out
mov
icebp
mov
sbb
cdq
stos
sbb
stos
test
cmps
add
cmp
mov
push
xlat
es
mov
ds
sub
adc
clc
dec
nop
fwait
unpcklps
sar
jno
je
int
cmp
adc
jge
adc
mov
fwait
outs
xor
int3
loope
sbb
hlt
push
xor
add
test
or
test
inc
mov
adc
outs
mov
stos
test
dec
out
mov
(bad)
mov
mov
sbb
mov
xchg
icebp
push
cwde
test
neg
dec
push
xor
(bad)
arpl
mov
les
push
popf
bound
xor
fist
jno
adc
je
mov
js
fldl2t
inc
fwait
(bad)
out
addr16
dec
kunpckbw
xor
mov
stos
movs
fbld
and
mov
jecxz
js
adc
pop
sti
xchg
sbb
loop
xchg
in
cmp
sbb
or
push
or
push
mov
dec
xor
enter
daa
fsubp
xor
xchg
adc
cmp
call
dec
jle
sbb
pop
push
dec
sub
cdq
ins
xchg
into
add
and
xchg
lds
and
dec
xchg
push
sbb
xchg
jns
pusha
cmps
pop
mov
shr
imul
xor
xlat
jmp
fldenv
scas
lds
mov
pop
sar
inc
int
fwait
aam
pushf
test
inc
icebp
push
lds
or
hlt
sbb
fs
mov
shl
bound
lock
lods
cmp
(bad)
jmp
mov
and
in
pop
add
cmps
sbb
xor
xor
fsub
mov
inc
push
xchg
inc
mov
mov
adc
out
pushf
push
jecxz
(bad)
loop
sbb
cmps
out
and
(bad)
imul
push
lock
dec
cmc
fisttp
xchg
dec
fidiv
or
in
cdq
mov
movs
push
xlat
call
rcl
outs
loope
add
inc
dec
push
fs
lods
les
pop
(bad)
dec
outs
imul
ins
call
imul
pusha
cmp
je
test
sbb
cs
add
data16
cmc
out
retf
mov
mov
fldln2
pop
jne
clc
lods
sub
pop
sbb
adc
jne
das
inc
mov
arpl
push
fild
out
sbb
push
ficomp
add
sub
mov
jns
push
mov
xchg
mov
scas
je
or
push
cs
adc
xor
ja
cmp
push
and
call
sub
sbb
xor
adc
pop
push
js
adc
lahf
in
sbb
push
cmp
xchg
(bad)
push
mov
ins
fs
dec
jmp
ss
adc
lahf
shl
cwde
scas
add
xchg
mov
gs
pop
shl
gs
xchg
in
sub
ds
test
sub
and
std
clc
jl
lods
fld
sub
and
cdq
pop
inc
mov
adc
mov
ins
inc
adc
lock
push
enter
jno
movs
rol
(bad)
jb
cli
push
push
cli
xor
cmps
paddusb
push
mov
cmc
out
aaa
mov
pop
sahf
or
cmp
outs
cli
jbe
iret
push
jg
jns
(bad)
sti
ss
and
nop
mov
dec
xchg
mov
aaa
cmp
dec
pushf
jno
push
jo
js
in
adc
jbe
hlt
mov
pushf
lea
jge
scas
add
and
add
and
cld
aad
xchg
movs
jnp
cmp
inc
adc
push
in
sub
add
retf
icebp
mov
cmps
jns
loop
sub
in
mov
mov
jo
add
cmp
dec
loope
pop
fmul
repz
not
or
and
leave
sahf
shl
rol
mov
leave
sbb
das
xchg
enter
and
add
and
sub
into
mov
loopne
fldcw
ret
aaa
test
dec
cdq
ins
call
adc
jg
jae
retf
jp
xor
xchg
scas
imul
add
jbe
dec
movs
inc
pop
jae
mov
lea
mov
jns
shr
xchg
ins
pop
jmp
xor
push
ds
cmps
mov
or
xor
pop
iret
loope
repnz
iret
mov
test
and
fild
sti
fisubr
mov
js
jae
dec
jecxz
mov
and
adc
or
mov
and
or
ret
push
mov
retf
pop
push
into
mov
cmp
jge
add
cwde
mov
cmc
cmp
scas
and
cmps
cmp
add
pushf
mov
shr
xchg
pop
in
mov
push
mov
mov
xor
mov
mov
ss
test
loopne
mov
add
aam
cld
repz
push
add
in
push
sub
ds
call
pop
sub
xor
mov
sub
or
mov
jg
xchg
ds
stos
pop
mov
(bad)
cmc
ficom
dec
fld
sub
cmps
xor
mov
mov
xchg
mov
call
ret
mul
(bad)
call
leave
pusha
aaa
and
xchg
pop
int3
popa
aad
sbb
loop
cmp
fldenv
and
inc
xchg
pop
cmp
pusha
popa
or
mov
(bad)
jae
sub
mov
jbe
aam
je
pop
shl
sub
stc
push
pusha
ret
ret
jecxz
jmp
xchg
aam
dec
push
stos
adc
outs
jne
out
jmp
mov
jns
jno
(bad)
push
ficomp
xchg
daa
mov
mov
xchg
pop
mov
dec
fwait
out
out
adc
jg
mov
ret
rcr
ret
push
int
pushf
and
xlat
cdq
into
shl
jo
imul
inc
or
mov
jp
jg
aaa
outs
and
adc
inc
sbb
sti
out
jle
fcom
stc
cwde
ror
inc
int3
jbe
mov
imul
inc
xor
mov
cmc
inc
push
sbb
aad
xchg
dec
xor
fwait
mov
mov
repz
jle
dec
int
sbb
cmc
fld
pop
fldln2
dec
xchg
or
xchg
jo
add
in
call
pop
pop
jnp
add
add
push
in
pop
loope
ss
stos
movs
and
push
mov
sub
and
jb
lock
pop
mov
cdq
(bad)
jbe
and
aaa
cmp
lods
loop
gs
imul
lods
fld
push
in
test
xor
daa
ficomp
inc
hlt
mov
xchg
les
(bad)
loop
xor
cmp
cld
int
(bad)
int
psubq
mov
xchg
loop
das
xchg
or
mov
inc
dec
in
ret
mov
out
std
push
fisub
dec
nop
jmp
dec
xchg
retf
mov
(bad)
mov
retf
(bad)
fprem1
add
push
test
test
add
jnp
or
loopne
add
out
push
mov
(bad)
neg
ds
xor
(bad)
test
and
lock
jmp
pushf
jle
push
mov
cmp
mov
in
sbb
addr16
mov
enter
or
jge
dec
pop
(bad)
popa
jno
inc
cmps
(bad)
out
inc
loopne
cmp
bound
popf
bound
mov
stc
xor
enter
scas
sbb
retf
(bad)
movs
lea
daa
rol
aad
cmp
arpl
push
mov
in
inc
bound
add
sahf
inc
inc
xchg
add
scas
mov
adc
(bad)
imul
add
mov
sahf
push
std
rol
sub
call
mov
int
pop
fld
int
or
inc
adc
mov
sbb
mov
aad
fnstsw
dec
nop
loop
jmp
test
cli
neg
shl
test
ins
jbe
and
push
add
add
in
cld
aas
ins
shl
lock
mov
ds
clc
push
mov
push
and
mov
inc
mov
inc
push
sbb
mov
in
fcomp
push
mov
movs
(bad)
loopne
xchg
pop
and
mov
pop
loop
mov
mov
nop
push
xor
je
add
enter
pop
mov
sbb
and
mov
pop
rcr
sbb
xchg
loop
int
(bad)
push
ins
aad
idiv
bnd
mov
inc
add
jae
(bad)
repnz
pop
pop
cmp
pusha
jl
(bad)
jnp
inc
jmp
aam
pop
sub
call
stos
repnz
mov
cmps
out
xlat
xor
jmp
es
ja
(bad)
and
in
test
(bad)
call
and
fcmove
pop
cmp
dec
movs
push
cmp
adc
jecxz
mov
ret
mov
cmp
sbb
fisub
leave
and
aad
jnp
in
mov
retf
std
and
je
jmp
pop
cmp
shl
imul
jnp
mov
push
jmp
jae
xlat
retf
js
(bad)
fist
test
inc
and
jb
pop
adc
cmp
pop
xor
fcomp
popf
outs
and
inc
push
mov
mov
sti
stos
sti
dec
retf
ret
ins
xor
add
adc
and
shl
adc
(bad)
jo
in
inc
sub
shr
pop
adc
inc
add
into
nop
stos
aaa
je
pop
xor
mov
outs
dec
cli
adc
cmp
xor
test
xor
lods
adc
scas
fild
shl
sbb
out
lods
jb
push
fsub
fsubr
inc
xor
sub
sub
adc
dec
xor
in
pop
adc
aaa
loopne
ins
mov
leave
jecxz
sub
add
imul
jg
in
pop
xor
mov
pop
addr16
push
jnp
into
popa
adc
retf
mov
mov
xchg
sbb
push
push
call
dec
add
push
sbb
sbb
iret
xchg
xchg
xchg
fsub
mov
popa
and
sar
(bad)
lods
or
cmp
int
ss
mov
jmp
div
lock
mov
ret
and
gs
or
jno
jmp
push
pop
sub
sbb
fsub
and
dec
push
jg
int3
mov
(bad)
push
fsub
add
sub
add
test
cmp
lea
push
fwait
mov
jmp
or
xchg
or
repnz
data16
pop
ss
sti
(bad)
pop
imul
in
jecxz
fdivrp
pop
push
xchg
ficom
sbb
dec
pop
jo
sub
sbb
imul
adc
pop
mov
scas
xor
aam
aas
pop
push
xor
retf
fadd
xchg
(bad)
mul
add
jnp
dec
mov
imul
xor
mov
dec
data16
pop
out
pop
dec
jge
lahf
hlt
add
cld
iret
mov
retf
leave
push
aam
or
pop
leave
pop
xor
pop
in
mov
mov
jae
neg
loop
push
cld
add
sub
dec
inc
loop
es
dec
idiv
lods
sbb
div
es
fxch
dec
and
pusha
in
add
push
adc
ret
and
fcomip
inc
inc
into
movs
mov
cmps
lock
and
push
out
inc
pop
add
lods
mov
push
(bad)
stc
les
pop
in
pop
mov
sbb
adc
add
(bad)
mov
adc
cwde
sub
jns
gs
test
sti
sbb
mov
shl
idiv
ja
idiv
fidiv
sbb
int
push
les
push
pop
mov
mov
into
pusha
test
cld
mul
call
and
pop
retf
pop
sub
mov
jbe
out
jns
xchg
mov
adc
iret
and
jnp
mov
sbb
scas
fnstsw
or
add
cmp
xor
inc
cli
add
sbb
pop
xchg
or
xlat
mov
les
push
cwde
call
dec
push
shl
stos
test
inc
mov
sbb
mov
xchg
mov
dec
xor
dec
sbb
dec
xor
sub
stos
fstp
xor
inc
xor
mov
sbb
sti
clc
push
arpl
pop
repnz
pop
les
mov
movs
cli
in
daa
xchg
pop
stc
add
pop
jns
ins
adc
test
sbb
inc
sti
aam
pop
xor
xchg
push
jns
xchg
mov
pop
or
aam
aad
in
les
xchg
ins
inc
mov
repnz
test
mov
mov
sbb
lock
jb
int
out
int
xor
hlt
js
call
movlps
xchg
sbb
scas
sbb
jb
sahf
xchg
mov
xchg
loope
xchg
mov
mul
shr
mov
retf
mov
je
cmp
out
out
lds
and
sbb
pop
das
fadd
(bad)
out
and
mov
jp
add
inc
and
popfw
popf
retf
xchg
popf
sti
push
mov
adc
xchg
rcr
fdivr
fadd
bound
inc
adc
lds
test
lods
jnp
aaa
out
fld
dec
jb
push
ret
adc
nop
lea
(bad)
xor
jecxz
push
pop
and
push
jge
mov
dec
inc
scas
sbb
adc
out
mov
pop
push
movs
push
les
mov
adc
dec
aad
call
mov
data16
pop
jl
pop
je
fild
mov
sub
sbb
inc
sub
mov
mov
outs
push
push
xchg
pop
add
mov
lds
(bad)
push
test
or
cmp
jl
mov
cmps
dec
mov
adc
mov
xor
mov
repz
cmp
add
push
je
lahf
rol
cmp
fild
dec
pop
cmp
or
xchg
push
repnz
mov
ja
push
or
mov
mov
jb
add
ud2
pop
jbe
jecxz
cmp
and
jecxz
cmps
jno
test
in
adc
fdivr
jecxz
aad
add
div
sbb
es
and
or
imul
push
test
xchg
les
or
test
mov
mov
mov
cwde
inc
cmc
cmps
outs
enter
cmp
sub
call
or
mov
cmps
xchg
in
add
xchg
fimul
icebp
mov
adc
ja
in
dec
xchg
call
retf
dec
xchg
popf
int
sti
mov
mov
and
mov
arpl
jbe
ja
inc
mov
pop
add
retf
fst
mov
push
je
neg
lahf
inc
xor
pushf
lock
aaa
mov
push
inc
in
aaa
(bad)
mov
stos
cmp
aas
outs
mov
ret
push
fnstenv
fldcw
or
in
in
ins
les
sub
xor
aad
aas
pushf
cdq
clc
shr
mov
popa
sub
push
adc
push
xchg
dec
pop
rol
(bad)
sti
js
xchg
jo
xchg
sbb
paddb
xchg
mov
fwait
xor
mov
out
call
fimul
mov
or
jl
in
loop
push
sbb
adc
and
in
adc
sar
rdmsr
imul
mov
pop
cs
mov
xor
jb
aas
mov
xchg
test
dec
cmps
xchg
scas
ins
shl
pop
pop
mov
adc
pop
fdiv
jbe
mov
push
dec
add
inc
and
sub
fisubr
mov
int3
adc
mov
out
lods
nop
xchg
adc
push
sub
dec
int3
or
sti
stos
movs
mov
mov
xchg
mov
out
rol
mov
push
mov
je
and
les
jno
pop
ror
xchg
and
xchg
mov
inc
fldpi
and
or
xchg
sbb
xchg
sub
xchg
inc
or
lahf
jo
or
cdq
outs
sahf
inc
adc
mov
xor
jmp
jle
mov
xchg
push
fwait
mov
ss
sbb
xchg
xchg
jmp
adc
push
jl
je
ja
xchg
test
es
outs
mov
pop
jo
outs
and
scas
push
cmc
jmp
sahf
hlt
rep
stc
xor
(bad)
mov
mov
imul
or
mov
rcr
lods
mov
or
adc
add
scas
mov
adc
adc
stos
push
push
mov
nop
aas
(bad)
test
pop
icebp
test
jnp
xchg
cmps
xor
lods
and
retf
mov
aaa
loopne
jg
stos
lock
pop
stc
xchg
inc
das
push
out
sub
mov
sub
push
jmp
fmul
push
or
sbb
adc
xchg
scas
mov
retf
clc
inc
fsub
fidivr
cli
sti
pushf
ficom
lock
mov
inc
pop
pop
jno
dec
xchg
jmp
mov
push
jle
fwait
pop
xor
dec
movs
jnp
loop
pop
mov
hlt
mov
mov
aad
fist
inc
add
xlat
test
xor
cmp
dec
sbb
xchg
outs
mov
inc
pushf
sbb
cmp
arpl
jmp
aad
and
lods
sbb
sub
add
xchg
ins
repz
fst
es
inc
inc
(bad)
cmp
xchg
mov
ret
in
sahf
push
or
push
dec
jle
(bad)
adc
sbb
mov
mov
or
jge
xchg
jecxz
into
fdivr
add
int3
js
cmp
mov
sbb
pop
jns
lods
call
(bad)
xchg
addr16
dec
lds
fwait
shr
je
test
inc
sahf
or
inc
lock
push
dec
aas
cmc
into
xor
and
inc
dec
push
out
mov
movs
(bad)
js
sub
adc
push
pusha
sub
jns
rcr
jns
push
pop
xor
ja
cmp
sbb
aad
fcomi
dec
mul
push
outs
push
inc
ret
push
leave
aas
pop
mov
jge
and
cmc
outs
ja
sahf
popa
xor
ja
cdq
daa
jne
xor
das
aad
stos
add
pop
mov
popf
dec
jp
ins
pushf
test
jb
and
fs
xor
test
fnsave
mov
sbb
test
es
addr16
aad
in
jo
push
cli
test
cmc
cmp
fs
and
and
adc
mov
aad
cmp
idiv
mov
stos
dec
push
mov
pop
cmp
jns
xchg
dec
adc
movs
bnd
test
fistp
mov
std
mov
or
cdq
jb
popf
dec
add
xor
sbb
mov
cmps
sub
shl
movs
dec
add
add
xor
push
enter
repnz
push
loopne
dec
add
cmp
data16
fsub
jo
cmps
stos
xchg
test
add
test
icebp
scas
fisubr
aas
jmp
mov
xchg
mov
rcr
push
js
fsub
pop
inc
repnz
pushf
dec
dec
and
mov
data16
iret
xor
pushf
xchg
xor
cmp
inc
inc
add
dec
xchg
stos
cmp
sub
imul
add
arpl
lahf
add
adc
or
push
sbb
sbb
add
outs
fld
jl
xchg
jle
mov
and
hlt
or
outs
es
ficom
(bad)
pushf
call
imul
lock
daa
rcl
inc
sbb
fimul
rcl
cmc
pop
mov
fs
jmp
stos
jg
sbb
call
and
stc
rol
push
rcr
sbb
pop
mov
and
fst
and
mov
fwait
lahf
fild
sub
scas
stos
fild
vmovaps
and
movs
mov
movs
or
repz
cmc
fldcw
rol
xor
pop
dec
es
aam
out
cmp
xor
pop
fwait
cld
xor
xchg
xor
pop
sub
dec
shl
nop
jb
dec
dec
push
int3
ret
ins
fimul
jge
add
shl
dec
xor
cmp
pusha
call
sub
mov
dec
clc
fs
sti
in
jae
sbb
test
mov
popf
dec
sbb
push
xor
inc
test
cli
inc
sub
xor
test
js
mov
pop
aam
or
jnp
xchg
sub
adc
and
jno
ss
cwde
add
lock
pop
fadd
mov
pop
movs
aam
jbe
push
xchg
dec
in
fnstenv
jle
cwde
or
arpl
es
add
inc
and
sub
dec
(bad)
lock
and
and
cmp
jmp
stc
daa
idiv
in
jp
sbb
xor
dec
push
pop
mov
jecxz
stos
xor
xchg
enter
mov
retf
into
mov
mov
cwde
add
inc
hlt
js
and
push
test
lea
fst
mov
leave
popa
mov
sbb
cmp
inc
mov
frstpm(287
inc
xor
shl
cmp
movs
sbb
das
call
nop
movs
jae
mov
int3
ss
xor
rcl
push
pop
inc
inc
scas
dec
adc
in
inc
scas
enter
es
sub
or
pusha
push
mov
in
loope
stc
pop
sbb
call
mov
pop
scas
mov
mov
shl
fs
lods
scas
fisttp
pushf
mov
sbb
xlat
call
movs
(bad)
imul
xchg
dec
pop
xlat
in
sub
cmps
sub
pop
xchg
je
sbb
rol
jle
xchg
int3
mov
js
cdq
pop
pop
mov
pop
ss
cmp
repz
scas
fnsave
out
or
call
popa
leave
cdq
jl
adc
inc
(bad)
iret
xchg
arpl
jns
mov
inc
push
add
sub
popf
jmp
pop
shr
lods
xchg
sahf
jecxz
stos
jge
jnp
aaa
clc
in
cmp
and
sub
es
mov
or
imul
lds
clc
mov
push
and
fisub
sbb
jg
inc
xchg
out
mov
jle
sti
mov
outs
jo
lock
idiv
lods
push
loopne
clc
mov
xchg
sbb
dec
rol
xchg
bndldx
mov
js
pusha
ja
ret
sti
std
sub
cmp
push
shl
cmps
stc
test
cwde
addr16
jae
pop
mov
mov
xchg
shl
out
out
ins
inc
inc
in
mov
mov
adc
add
mov
cmp
in
ficom
mov
rol
imul
aas
mov
cmps
js
and
nop
pop
jmp
hlt
jns
add
pop
fistp
mov
add
push
sub
xor
xor
pop
lahf
test
mov
cmp
jno
cmp
mov
xorps
xchg
std
dec
inc
dec
push
retf
int3
sbb
mov
push
std
dec
xchg
into
jbe
push
stos
xchg
push
cmps
push
out
mov
add
dec
sti
inc
mov
mov
bound
pop
xor
fist
cmp
mov
sub
add
sbb
leave
push
inc
imul
arpl
add
mov
ins
adc
push
mov
push
and
popf
retf
or
cld
jne
cmp
or
mov
dec
add
or
fdiv
push
and
in
cdq
inc
fst
std
dec
aas
imul
cmp
imul
and
push
sub
mov
sbb
pop
ins
(bad)
clc
inc
mov
xchg
mov
xlat
adc
push
mov
out
out
sar
lods
in
cld
push
(bad)
pop
inc
cmps
sub
sbb
cmp
shl
jecxz
mov
push
sar
popf
xor
inc
mov
and
loope
ins
inc
inc
in
in
ffreep
out
dec
push
cs
fadd
push
sbb
dec
adc
addr16
jp
jns
pop
fild
test
xchg
or
mov
xor
sub
dec
adc
pop
sub
or
dec
dec
pop
addr16
cdq
outs
xor
jbe
mov
add
out
inc
adc
mov
(bad)
cs
mov
push
push
(bad)
arpl
push
or
jmp
idiv
in
pop
and
ja
lds
pop
mov
xor
fwait
mov
inc
jb
aad
mov
mov
fisubr
movs
pop
dec
cmps
stc
xor
cmp
mov
addr16
outs
or
mov
and
push
hlt
je
shr
mov
pusha
mov
hlt
fs
out
xchg
mov
js
dec
adc
dec
std
sbb
add
sbb
lahf
jo
pop
repnz
push
cwde
jge
fs
call
sub
jp
push
retf
test
leave
xchg
mov
add
das
mov
push
aad
add
fist
(bad)
dec
add
push
cmp
mov
sar
inc
add
inc
sub
in
jbe
cs
jmp
and
mov
mov
rsqrtps
aad
push
xchg
ins
retf
fistp
jl
mov
adc
or
mov
icebp
dec
mov
std
add
push
pop
xor
stos
adc
mov
jmp
and
xchg
sti
std
ja
inc
dec
iret
mov
cmp
adc
or
adc
or
stos
nop
mov
popa
movs
test
outs
lds
mov
and
adc
dec
mov
or
repnz
loope
inc
cmp
out
cmp
dec
cmps
popf
xchg
cli
push
int
and
es
and
popf
fsubr
cli
lahf
aaa
inc
(bad)
bound
mov
push
dec
and
push
pop
(bad)
frstor
jl
mov
ret
int
mov
mov
xchg
gs
add
dec
sub
adc
arpl
popa
jns
xchg
xor
sbb
xor
fs
inc
adc
or
xchg
add
add
test
je
sbb
ror
fwait
clc
popa
(bad)
nop
ror
adc
and
push
lock
into
out
mov
stos
in
mov
mov
cmp
adc
sahf
sbb
jnp
es
fwait
push
cdq
xor
cmps
push
hlt
mov
jmp
pop
aas
arpl
es
into
loop
ret
mov
mov
retf
ror
fst
in
cld
push
mov
ja
add
push
adc
fsubr
xchg
sub
in
fadd
cmc
or
jne
pop
cmp
push
and
lahf
and
pusha
repz
lods
lods
ror
cmc
enter
mov
sub
ja
adc
test
retf
out
cmps
xchg
jle
mov
lds
sbb
dec
in
movs
mov
inc
test
call
stos
push
xor
rcl
gs
xor
cmp
movs
xchg
cmp
adc
adc
mov
test
inc
and
sub
shl
scas
pop
inc
in
xor
push
test
mul
add
jge
int
adc
arpl
(bad)
push
pop
mov
retf
rcl
sar
popa
and
dec
icebp
push
popf
mov
ds
jecxz
cld
cmps
adc
rcl
fs
mov
cmp
push
loope
add
arpl
enter
es
loop
test
outs
enter
rcl
outs
add
cmp
push
pop
outs
movs
dec
fstp
scas
(bad)
pop
pop
scas
jp
test
repz
xchg
add
jmp
cmps
iret
jmp
clc
retf
jno
loopne
mov
inc
pop
push
nop
or
lock
js
test
je
push
test
and
imul
(bad)
adc
in
xchg
fst
push
lock
sub
pop
xchg
enter
cmp
adc
adc
mov
hlt
(bad)
lock
es
retf
adc
test
mov
int3
ins
jno
adc
ss
add
jae
push
fdiv
bound
ficomp
pop
mov
fld
jge
cmp
retf
mov
stos
pop
jmp
add
pop
and
sub
dec
adc
xchg
imul
inc
ins
add
xchg
out
ss
(bad)
outs
repnz
call
mov
xrelease
test
fnstenv
adc
scas
fcomp
rol
jmp
and
aas
mov
in
imul
sub
ror
push
leave
imul
jmp
adc
cdq
mov
(bad)
jmp
mov
cmp
test
cmp
ins
jl
dec
pop
dec
mov
loopne
(bad)
mov
test
frstor
outs
ss
pop
inc
shl
mov
loop
ss
mov
icebp
push
and
mov
in
lea
aad
fistp
jl
jmp
push
xchg
cwde
mov
fimul
out
dec
idiv
cdq
xchg
push
mov
sti
push
shl
pop
lods
mov
pop
pop
in
dec
test
pop
lds
push
aas
je
cwde
add
sahf
dec
gs
test
push
pop
or
nop
fiadd
mov
xchg
and
xor
adc
mov
mov
jle
adc
sbb
push
sbb
mov
mov
daa
shr
jno
test
xor
imul
or
and
sar
adc
repz
mov
mov
xor
push
sbb
xor
jnp
bound
xchg
movs
mov
icebp
cld
in
sub
mov
pop
jno
cld
loope
dec
cmps
or
sbb
inc
loope
shr
div
add
lock
pop
stc
addr16
jmp
cmp
mov
inc
(bad)
in
pop
push
js
cld
(bad)
in
(bad)
ja
mov
inc
xor
push
inc
mov
jmp
push
in
mov
jge
xlat
inc
and
xchg
mov
outs
adc
pop
sub
outs
xchg
mov
sbb
sbb
pop
jo
dec
stc
jp
stc
adc
mov
mov
call
pop
or
aad
cmps
mov
ins
add
cwde
int3
jmp
jp
cdq
leave
ja
xchg
mov
and
aam
dec
cdq
(bad)
and
xchg
fidiv
pop
or
or
cs
jmp
test
dec
out
mov
dec
mov
fst
ja
std
ret
(bad)
mov
dec
sub
jns
fiadd
cmc
hlt
shl
leave
les
mov
fnstcw
jmp
pop
or
jmp
dec
mov
cmc
add
xor
cmp
adc
les
bound
jecxz
loopne
push
dec
cwde
(bad)
out
dec
movs
and
sbb
enter
and
cmps
and
add
add
pop
dec
mov
inc
mov
jmp
in
jbe
or
stos
enter
loop
imul
call
sbb
cmp
addr16
push
frstor
mov
in
test
scas
push
cmp
adc
dec
cwde
cs
(bad)
push
(bad)
cmp
jb
or
adc
mov
adc
xchg
xor
push
sbb
pop
pop
mov
and
push
daa
cmp
lahf
sar
into
inc
sbb
cmp
and
fcmovbe
ffree
push
clc
stc
lods
sar
cwde
js
xor
mov
add
pop
repnz
dec
bndldx
data16
dec
sbb
stos
cmps
cmp
or
push
out
xchg
adc
push
or
sub
and
mov
jae
mov
push
fstp
das
cmps
std
test
sbb
jecxz
sti
adc
outs
jno
imul
das
inc
push
aam
cmc
jno
es
sub
jne
cdq
xchg
(bad)
aam
movs
lods
aas
cmp
jge
inc
mov
push
sbb
push
pop
imul
popa
push
cs
mov
gs
or
call
cs
xchg
sbb
in
fs
push
mov
mov
(bad)
push
jbe
int
aas
pop
sub
adc
or
icebp
scas
mov
fsubp
cmp
lds
and
or
js
push
mov
in
scas
cwde
scas
cld
addr16
jno
pop
xor
sahf
jl
test
sbb
or
push
mov
shl
scas
dec
pop
loopne
sbb
xchg
jecxz
out
and
iret
retf
neg
sbb
loopne
xchg
push
iret
cwde
push
fcmovne
jecxz
jns
jge
sbb
and
leave
outs
adc
jns
pop
mov
loop
sub
jb
outs
vmread
ret
aam
test
jb
pop
shl
mov
arpl
fidivr
mov
mov
call
inc
mov
add
mov
xor
fs
pop
mov
mov
and
cmp
fbstp
mov
mov
fcom
pop
pop
dec
inc
into
ds
call
inc
sub
cmps
jbe
dec
mov
cs
xor
push
fcmove
aam
je
xchg
data16
and
mov
fs
pop
cmp
gs
cdq
add
xchg
pop
icebp
cmps
mov
cmp
adc
outs
pop
push
sbb
pop
jo
jmp
das
xchg
mov
pop
xchg
ds
fmul
inc
sub
sbb
sub
(bad)
cmp
ret
loop
jmp
push
mov
pop
test
adc
(bad)
jg
or
mov
shl
and
les
in
xor
pop
pop
shr
mov
xor
shl
jb
jecxz
push
ins
and
les
or
mov
pop
fs
js
dec
repz
imul
add
xchg
ins
xchg
jno
mov
loopne
jmp
popa
ret
sub
cmp
popf
cmp
jns
(bad)
retf
push
adc
repz
jl
mov
pop
lock
cmc
test
mov
test
lock
mov
add
cdq
xchg
cmps
dec
push
jg
xchg
adc
loopne
nop
in
fldcw
sar
mov
sbb
cmp
or
or
ss
pop
sub
lock
pop
ret
xor
arpl
xchg
sbb
pop
xor
push
rcl
adc
mov
imul
ret
scas
adc
jle
(bad)
jno
mov
and
push
test
xor
lahf
je
adc
and
jno
jmp
jg
mov
xor
add
and
fcmovu
jle
push
dec
xchg
xor
pop
xchg
retf
dec
pop
inc
jl
out
pmulhuw
pop
sub
js
pop
mov
mov
fdivr
xchg
xor
call
jle
repnz
arpl
sub
xor
xchg
jae
xlat
pop
pop
ret
inc
repnz
inc
pop
xor
out
fsqrt
shl
pushf
jle
stos
cmp
dec
cs
and
jp
and
and
(bad)
fisttp
xchg
mov
test
pop
pop
outs
enter
push
inc
inc
ins
cdq
(bad)
shl
js
imul
nop
or
and
popa
inc
outs
jno
push
sbb
das
fstp
mov
iret
fbstp
mov
dec
dec
(bad)
movs
xor
mov
ret
mov
mov
push
mov
sub
dec
out
mov
shr
jle
xchg
fsub
adc
mov
mov
pop
je
push
push
call
adc
mov
movs
add
cmp
(bad)
cmp
cs
pop
cmp
nop
(bad)
into
pop
pop
outs
mov
(bad)
jl
mov
shl
(bad)
jns
sbb
mov
lea
addr16
fsub
xor
adc
sti
cmp
dec
xor
ins
dec
sub
inc
test
ror
or
mov
adc
sub
xchg
cmps
les
mov
cmp
js
int
leave
(bad)
adc
pop
retf
imul
test
xchg
push
arpl
add
fs
out
daa
popa
ror
sub
xchg
pop
push
jg
mov
dec
push
sub
cdq
adc
jbe
repnz
js
jb
(bad)
push
push
jns
pop
xchg
cmps
inc
ficom
int
das
push
jl
out
das
jecxz
test
jg
pop
cmp
inc
lds
(bad)
push
add
test
rcl
dec
das
cmp
arpl
mov
and
sar
jns
in
mov
loop
inc
mov
popa
push
adc
mov
mov
ds
cmp
and
mov
repz
es
int
mov
mov
mov
xchg
adc
sub
dec
clc
jg
fistp
test
out
lods
in
fwait
add
rcr
hlt
push
es
icebp
sbb
daa
clc
ror
outs
pop
aas
push
aad
popa
repz
mov
push
sub
sbb
pop
pop
test
adc
push
pop
cmp
arpl
test
add
adc
pop
push
mov
xchg
mov
out
sub
push
mov
ficomp
in
adc
mov
out
inc
ss
ins
pop
push
call
mov
and
xchg
sahf
(bad)
dec
aad
retf
int3
int
inc
mov
cmp
add
not
fsub
stos
push
push
dec
imul
fist
jbe
mov
punpckhwd
jecxz
cmp
pushf
scas
out
in
sbb
jo
shl
aad
push
mov
add
pop
add
ins
ins
ror
cmps
test
sti
popf
in
std
pop
sbb
ins
mov
test
fsub
sub
push
loope
call
ss
add
mov
imul
lds
mov
sub
sbb
icebp
aad
movups
imul
inc
jmp
imul
rcr
enter
test
cmp
and
es
sub
inc
and
adc
cmc
std
sub
mov
cmp
push
mov
sub
mov
xchg
fwait
retf
sbb
das
or
push
popf
sub
out
in
sub
or
call
jmp
jo
mov
cmp
(bad)
ret
movs
jecxz
push
movs
pop
inc
xor
call
xor
xor
cmp
or
je
lahf
ins
xor
vmovntdq
fs
add
dec
add
cdq
rol
mov
pop
loopne
and
sub
and
and
mov
mov
mov
mov
sub
mov
int3
push
pop
push
mov
sub
in
(bad)
cmps
popa
sar
movs
xchg
xor
inc
pop
add
inc
cmp
add
xchg
cmps
scas
(bad)
ins
loop
fmul
in
jnp
enter
xchg
sub
cmc
add
stos
mov
mov
dec
xchg
sahf
xchg
mov
or
and
add
mov
mov
(bad)
imul
sbb
sbb
xchg
int3
jo
std
ins
icebp
add
inc
mov
test
add
sbb
into
sub
(bad)
arpl
mov
mov
and
xor
icebp
in
push
seto
sti
sbb
sbb
rcl
aad
rcl
std
pop
cli
mov
and
clc
pop
enter
pop
enter
push
mov
dec
mov
call
mov
sbb
push
push
push
or
idiv
ins
xor
push
movs
or
lds
outs
mov
pop
in
inc
dec
ja
and
out
push
xor
fcom
and
pop
and
mov
adc
push
pop
mov
mov
pop
ja
dec
scas
pop
pop
rol
jge
ja
es
adc
loop
xor
and
adc
into
and
(bad)
test
das
push
out
pop
jno
or
dec
sbb
test
dec
int
jno
cld
scas
jl
daa
xor
cmp
jl
shl
cdq
inc
inc
aaa
add
retf
mov
loopne
push
mov
sub
sbb
test
sbb
push
not
outs
push
leave
call
stc
or
jb
xor
inc
mov
test
loop
fnstsw
xchg
icebp
push
or
or
ret
ja
lods
imul
or
pop
cmc
or
out
mov
retf
jle
stos
xor
jge
mov
xor
sbb
cmp
ret
mov
scas
adc
mov
push
pop
popa
pop
mov
push
cli
mov
jmp
outs
xchg
mov
psrld
xor
xor
stos
out
int3
sar
xchg
rol
aam
mov
mov
mov
jge
adc
mov
sbb
int3
cmp
outs
jne
inc
sahf
cli
js
sub
xor
cmp
mov
pop
test
add
push
pop
cwde
sub
pop
cs
fwait
lea
pop
sub
aas
jmp
int
push
mov
adc
and
loopne
test
push
test
mov
sbb
bound
jge
aaa
cmp
jmp
mov
loop
ror
inc
or
dec
(bad)
rcl
mov
mov
(bad)
cli
mov
mov
mov
fiadd
out
or
sub
cdq
pop
cmp
sbb
fwait
and
inc
ror
pop
push
retf
into
das
out
in
mov
imul
jbe
mov
fstp
push
lods
retf
sbb
aas
and
xor
(bad)
pop
or
jecxz
shl
je
mov
xchg
sbb
sbb
cld
add
sbb
pusha
cwde
pop
aaa
xor
sub
loope
push
dec
xchg
pop
pushf
dec
clc
(bad)
ins
punpckhdq
jg
mov
and
and
fwait
lock
cdq
out
(bad)
xchg
pop
fwait
fs
lock
mov
(bad)
mov
out
fst
or
sbb
out
inc
or
mov
scas
dec
sti
test
das
bound
daa
jb
pop
pop
jns
mov
(bad)
pusha
out
nop
or
pop
repz
movs
jnp
loopne
pop
xchg
shr
mov
sub
jmp
loopne
repz
nop
sub
cmp
mov
imul
(bad)
into
mov
stos
and
ins
stos
(bad)
jae
adc
fmul
cli
jg
setg
ins
mov
pop
push
popf
and
ja
sbb
retf
cmp
add
pop
inc
jmp
(bad)
xchg
mov
cmps
xchg
stc
fisub
mov
addr16
xlat
pop
and
inc
push
dec
lock
aaa
mov
mov
or
and
adc
cmps
xchg
loopne
mov
pop
or
add
or
sar
ins
fmul
push
std
pusha
cmp
add
dec
fsub
movs
icebp
xor
and
sub
bound
xchg
sbb
mov
xor
clc
add
mov
inc
test
out
jns
inc
in
call
call
mov
es
enter
cwde
out
mov
daa
arpl
jmp
or
(bad)
jge
inc
push
mov
xchg
push
sti
scas
xchg
fisub
adc
sbb
mov
and
fdivr
pop
int
out
cmc
clc
mov
jns
mov
jge
shr
mov
inc
loop
lods
jb
dec
pusha
fstp
leave
inc
xchg
repnz
mov
pop
mov
push
dec
test
jg
fs
and
js
test
das
lods
pop
test
outs
mov
in
xchg
pop
mov
mov
test
mov
cmp
xor
js
sti
call
retf
inc
ss
mov
call
scas
cmp
cld
sbb
cmps
jno
lea
pop
and
nop
dec
jae
out
mov
shl
add
push
out
fnstcw
mov
cdq
out
in
(bad)
and
leave
lds
bound
lea
cmp
mov
jne
repnz
repnz
or
cmc
sub
xor
xor
int3
pop
imul
and
aad
mov
adc
sub
sti
mov
out
push
and
mov
mov
pusha
mov
adc
in
cld
mov
mov
jmp
dec
(bad)
addr16
push
add
mov
retf
(bad)
mov
jmp
pop
add
jp
cwde
adc
mov
push
jo
js
test
jg
lock
mov
sub
pushf
data16
pop
enter
dec
cmp
inc
inc
push
cmp
xlat
cmp
out
push
inc
push
xor
mov
push
pop
push
mov
fmulp
in
js
xchg
aaa
jb
sub
in
jns
scas
pop
(bad)
rol
psrlw
nop
sbb
pop
inc
ret
cmp
jno
arpl
pop
neg
xor
xchg
data16
out
out
push
fdivr
pop
mov
in
arpl
repnz
push
aam
popf
add
sub
popf
adc
in
imul
cmp
inc
and
add
in
mov
xchg
stos
and
mov
push
cmps
push
adc
pop
sub
in
iret
mov
push
adc
sub
loopne
shl
jmp
aam
pushf
out
pusha
adc
and
retf
inc
or
push
aad
test
inc
shl
sub
mov
retf
inc
fsubr
cwde
mov
outs
dec
jae
jmp
add
push
lds
jnp
mov
mov
add
call
fidivr
call
aaa
dec
push
fld
pop
sub
jp
push
mov
fistp
sub
jp
ret
jp
adc
pop
and
adc
loope
fnsave
popf
test
push
je
sbb
mov
or
pop
movs
xor
dec
ja
mov
repz
jns
or
and
lds
sbb
dec
jne
test
sub
inc
mov
stos
scas
xor
mov
repnz
lahf
loopne
test
fs
inc
lahf
mov
rcl
loopne
aas
jmp
shl
push
sahf
xchg
repz
xor
ror
call
dec
xchg
add
jg
pop
pop
sti
cmp
cmps
dec
mov
icebp
push
mov
cld
call
int
dec
pop
ja
(bad)
or
push
bound
fst
pop
enter
loopne
inc
ds
mov
xchg
ja
popa
test
cli
adc
jg
xchg
fidivr
rol
dec
sbb
sub
ss
daa
xchg
dec
ret
jmp
aam
fstp
mov
les
nop
jae
mov
mov
out
add
jo
mov
adc
xlat
inc
mov
sar
fld
inc
out
xchg
icebp
and
fdivrp
mov
test
mov
iret
mov
mov
aam
and
dec
jb
fstp
data16
test
sbb
test
(bad)
and
outs
fs
xor
ins
scas
jmp
dec
ffree
movs
outs
mov
sbb
pop
leave
mov
xor
cmp
and
call
push
jmp
and
scas
push
xor
xor
inc
fstp
dec
and
fnstenv
pop
imul
jmp
sbb
cmc
inc
mov
je
sub
and
fwait
shl
jne
xchg
iret
push
inc
adc
into
inc
ficom
jl
or
fcom
loopne
(bad)
loop
repz
sub
xchg
add
sti
out
test
imul
js
clc
mov
mov
icebp
gs
int3
or
jmp
dec
dec
add
pop
gs
pop
pop
fadd
ret
xchg
mov
sub
push
xor
stc
mov
scas
adc
into
lods
mov
bound
push
jmp
mov
and
icebp
cld
shl
call
jnp
xor
movups
xchg
pop
mov
cmp
stc
pop
mov
xchg
in
inc
push
aaa
shl
add
loope
pop
scas
mov
add
mov
or
xchg
loopne
xor
cmp
(bad)
dec
nop
jmp
(bad)
(bad)
ja
xor
xor
cmp
xor
ds
imul
je
ins
icebp
loop
aam
out
sti
cmp
cdq
pusha
sub
push
idiv
(bad)
ja
test
pop
push
and
daa
push
add
push
xchg
call
xchg
adc
jl
add
push
sahf
pop
sub
or
stos
ss
cli
out
mov
int
jns
jo
pop
pop
fwait
repz
aam
mov
mov
adc
push
dec
sub
sub
leave
pop
in
jns
and
mov
dec
lock
push
shl
jg
popf
pop
int3
fwait
inc
repz
cld
xchg
daa
aas
inc
cwde
inc
in
loop
leave
or
pushf
dec
not
sti
adc
int3
cmp
in
or
bound
mov
pop
imul
adc
xor
mov
mov
push
aad
push
(bad)
xchg
int3
mov
push
add
dec
fiadd
inc
mov
inc
daa
mov
mov
cld
ins
mov
inc
mov
popa
dec
inc
repnz
stc
xor
fdiv
test
retf
sub
(bad)
or
xor
jmp
xchg
sbb
adc
inc
stc
push
ja
xor
pop
or
rol
push
adc
cld
push
sbb
xlat
out
sbb
push
sti
mov
mov
stc
int3
out
and
xor
ktestw
jmp
pop
daa
rcr
cmps
xchg
pushf
pop
add
outs
jle
sbb
(bad)
lds
add
add
mov
loopne
ss
push
pop
push
fwait
pop
cmp
dec
and
sub
sbb
mov
in
(bad)
mov
sub
les
call
arpl
fild
in
gs
nop
or
mov
xchg
arpl
push
push
add
pop
push
dec
and
in
xchg
lds
nop
popf
enter
push
and
push
jle
adc
ret
js
sahf
test
push
pop
pop
popa
(bad)
shr
sub
stc
inc
in
int3
add
add
sub
jle
pop
cmp
aaa
adc
aam
cmp
sbb
mov
repz
adc
mov
sbb
cmp
call
bound
mov
mov
xor
push
out
add
jne
(bad)
imul
sub
pop
ins
push
sbb
cmp
mov
jmp
fdivp
push
cdq
enter
retf
stos
pop
mov
mov
inc
pusha
fdivr
xchg
ret
mov
in
sbb
jmp
mov
cdq
test
xlat
cmps
push
mov
sbb
js
and
xlat
or
sbb
inc
movs
or
lea
mov
add
cli
loope
xchg
mov
cs
and
pop
in
(bad)
push
adc
sub
daa
aas
xor
cmp
add
mov
iret
into
mov
mov
in
push
test
dec
aaa
popf
mov
daa
jns
and
ja
stos
or
cdq
and
mov
inc
jmp
rcr
js
imul
mov
jo
cwde
(bad)
les
xchg
jnp
mov
das
shr
ret
jle
leave
adc
dec
and
outs
adc
enter
scas
xor
xchg
mov
and
mov
push
enter
sar
test
rcr
push
cmp
jge
daa
jns
jb
shl
mov
stos
sbb
inc
mov
sbb
imul
dec
daa
mov
add
pusha
mov
xchg
mov
outs
add
cwde
arpl
adc
nop
cmp
(bad)
adc
lods
pop
jbe
push
in
fucomip
add
pop
and
stos
sahf
mov
xchg
popa
sub
mov
out
pop
xor
mov
fbld
xor
mov
mov
adc
aam
imul
push
loopne
mov
cwde
xchg
push
and
mov
mov
xor
jmp
lock
xchg
bound
not
movs
cmp
in
or
push
int
jb
xchg
test
clc
retf
cmps
fst
or
and
dec
in
xchg
sbb
xchg
sti
and
cmp
xor
sbb
xor
jge
cmps
mov
(bad)
loope
mov
sti
fidivr
add
and
loopne
adc
mov
repz
mov
lds
fcmovnbe
sbb
std
or
jb
jmp
sbb
dec
in
sar
xrelease
cmp
jae
adc
loop
push
arpl
push
ret
cmps
(bad)
test
push
les
push
in
dec
inc
mov
xchg
sub
mov
neg
mul
rcr
repz
dec
lock
imul
arpl
jne
repz
mov
xor
add
out
push
push
leave
test
cwde
(bad)
lock
mov
iret
ins
mov
lea
pushf
stos
push
cmp
fdivr
mov
xchg
xchg
pusha
xor
jmp
dec
xchg
shl
jns
fild
xor
pusha
stos
sub
dec
and
xchg
xlat
xchg
and
mov
or
dec
jb
xchg
mov
cmp
icebp
sbb
jno
dec
loopne
outs
jmp
inc
adc
mov
addr16
dec
fld
xchg
mov
xchg
and
mov
sub
scas
ds
pusha
retf
ins
shr
or
add
add
les
(bad)
cmp
jne
leave
jnp
scas
lods
dec
mov
inc
and
retf
mov
lock
(bad)
std
jecxz
popa
imul
prefetch
or
mov
lds
std
out
inc
gs
xchg
in
ins
stos
lods
mov
(bad)
push
ret
mov
jno
stos
out
mov
dec
cmp
jno
push
push
mov
in
js
push
ss
loope
mov
aad
or
pop
inc
cmp
and
mov
jmp
cmp
ds
sub
inc
xchg
outs
and
jne
sbb
mov
xchg
jb
(bad)
mov
imul
xchg
xchg
sub
push
xchg
push
imul
jmp
pop
mov
call
pop
jo
sub
mov
imul
scas
fnsave
push
push
ja
push
in
rol
and
push
and
push
xchg
popw
test
mov
mov
(bad)
call
movs
aad
icebp
stc
dec
sbb
dec
xor
or
jne
mov
test
mov
sbb
scas
and
fsub
js
test
cmp
mov
(bad)
push
push
push
adc
es
xchg
mov
scas
and
cmp
retf
and
adc
or
fdiv
mov
jo
jmp
cwde
cwde
les
cli
push
adc
ins
stos
jecxz
lahf
mov
ja
inc
xor
inc
stos
outs
jge
call
je
inc
loop
xor
mov
aaa
and
mov
cmp
inc
in
(bad)
call
data16
jmp
arpl
das
jae
(bad)
outs
jo
dec
jp
int3
mov
mov
int3
push
and
(bad)
cmp
inc
scas
jb
jae
sbb
mov
or
or
lock
test
loop
xchg
test
inc
leave
and
pop
cld
or
sbb
addr16
adc
sub
and
inc
xor
jecxz
repnz
mov
jne
pop
sti
mov
cmp
sbb
sbb
adc
sahf
je
aaa
dec
aas
mov
lods
fdiv
xor
pop
push
xor
mov
pop
int
xor
enter
cmps
and
dec
not
fisub
push
dec
or
mov
xor
test
fisttp
fneni(8087
in
push
out
mov
enter
pop
pop
and
inc
pushf
scas
sub
mov
mov
jb
cmp
shl
jne
sbb
and
jecxz
add
data16
out
popa
pop
dec
int3
push
stos
cmp
sbb
retf
out
or
push
test
nop
and
adc
xor
lock
rcl
push
inc
mov
mov
add
xchg
es
repz
pop
jb
cld
or
loope
sbb
push
cmp
pop
out
mul
push
loop
push
dec
je
pop
loop
push
loop
in
ret
xchg
ds
retf
push
and
mov
mov
addr16
test
daa
xor
mov
pop
mov
adc
inc
clc
fst
lahf
fst
add
jle
push
add
mov
sbb
pop
mov
test
mov
push
adc
jo
or
cli
pop
mov
ins
stos
xchg
mov
inc
mov
cmp
sbb
fst
mov
pop
cmp
pushf
xchg
je
jo
mov
mov
test
cmp
retf
retfw
cmp
stos
jg
xor
and
imul
bound
arpl
mov
jg
push
xchg
or
jnp
push
mov
out
call
push
sbb
mov
mov
popf
dec
push
cmp
mov
sbb
(bad)
jle
aas
test
into
test
aad
mov
aaa
adc
sti
leave
xor
imul
adc
fcomp
cmp
xor
inc
push
test
mov
xchg
xor
inc
cmc
xchg
(bad)
(bad)
repz
jae
mov
and
xchg
xchg
out
sti
mov
test
pop
std
popa
cmp
scas
(bad)
jle
aaa
inc
mov
xor
pop
xor
repz
and
in
sar
pop
mov
push
shl
cmc
xchg
inc
in
jecxz
or
xor
out
or
mov
mov
cmps
mov
pushf
cs
int3
xchg
test
(bad)
cmps
inc
add
shl
mov
clc
xchg
cmps
out
rcr
aaa
pop
xor
nop
retf
push
jmp
cli
fcmovu
jno
sbb
ret
or
mov
aam
push
pop
scas
cmp
dec
jnp
imul
push
mov
in
cwde
in
and
pop
push
shr
imul
sub
fwait
ret
ss
pop
xor
std
cmps
mov
popf
sbb
inc
jno
push
sbb
(bad)
in
repnz
outs
out
jp
mov
repnz
push
jecxz
in
mov
cdq
in
arpl
mov
es
mov
add
out
pop
mul
inc
aas
add
dec
lahf
jmp
or
cmp
cli
jns
jo
fs
inc
aad
xor
sub
rol
out
popf
std
and
mov
in
sbb
xchg
dec
adc
aam
cmps
loop
xchg
(bad)
pop
scas
push
test
mov
inc
les
imul
xor
in
xor
(bad)
(bad)
mov
cli
xchg
std
jl
push
xor
xor
sbb
cmp
lods
imul
mov
and
lea
(bad)
popa
clc
arpl
daa
ds
or
je
mov
call
cld
add
jp
mov
inc
xchg
les
nop
retf
adc
xor
inc
mov
fdiv
test
sahf
loopne
shl
ins
pop
mov
mov
mov
pop
xchg
push
mov
call
loopne
jns
cmp
aaa
push
jne
xchg
or
(bad)
and
add
sbb
int3
test
push
sbb
jp
xchg
mov
pop
lea
add
inc
pop
scas
mov
div
and
call
out
sub
out
cmp
jl
mov
add
retf
pop
sub
aad
imul
aam
cmc
sahf
add
adc
cmp
sahf
inc
xchg
add
push
sub
inc
inc
jmp
gs
xlat
mov
and
imul
jne
out
mov
push
push
addr16
xchg
xchg
je
sbb
mov
sbb
bound
cwde
stc
jmp
push
ja
and
(bad)
dec
lahf
sbb
out
dec
cmp
jecxz
sbb
imul
mov
jbe
(bad)
cmp
lods
mov
jle
xor
movs
inc
mov
ins
push
mul
inc
mov
rcr
aaa
in
jns
mov
rcr
retf
mov
aas
add
push
dec
lods
sbb
mov
inc
pop
fisttp
push
mov
mul
sbb
aad
sbb
cmp
dec
pop
test
push
sbb
fcmovu
jns
lock
pop
jbe
push
repz
or
imul
xor
aas
mov
ss
mov
les
push
repz
adc
fisttp
cmp
out
cmps
add
dec
and
sar
leave
int3
mov
popf
(bad)
inc
jns
dec
mov
outs
jp
ss
fldenv
xor
ret
(bad)
fcom
push
mov
xchg
cmp
das
fldcw
push
pop
mov
mov
scas
fisubr
(bad)
cwde
adc
push
std
or
add
sahf
xor
popa
pop
lea
imul
sub
out
lock
js
push
and
ret
cmp
pusha
pop
jle
rcr
in
mov
ret
inc
inc
retf
mov
retf
mov
movs
imul
mov
jp
test
and
dec
test
clc
mov
test
pop
inc
shl
fs
push
loopne
jnp
not
mov
sub
fmul
(bad)
mov
and
add
and
popf
retf
aad
pop
ficomp
adc
test
push
(bad)
sub
pop
jg
xor
in
out
inc
or
bound
icebp
in
and
pop
xor
mov
cmp
sub
add
bound
jle
xchg
xchg
stc
pop
dec
call
cmps
stos
call
inc
mov
sbb
xchg
int
faddp
shl
jmp
sbb
jmp
mov
mov
sahf
leave
cmp
pop
mov
jns
or
mov
add
arpl
outs
(bad)
xchg
ja
sbb
addr16
mov
inc
loope
mov
sbb
pop
div
xchg
xchg
mov
outs
push
dec
adc
cdq
fs
xchg
outs
sti
daa
adc
inc
jae
push
jb
xor
jns
mov
lods
inc
jb
jae
jbe
mov
ret
xchg
sbb
mov
or
mov
xor
push
dec
adc
fnstcw
push
aas
mov
mov
icebp
mov
lea
adc
mov
outs
out
mov
sub
inc
and
hlt
das
pushf
lock
sbb
je
dec
retf
xor
je
std
sar
mov
cmps
in
arpl
cmps
inc
aas
das
dec
imul
cmps
cmp
lock
sbb
clc
pop
or
xchg
lds
adc
(bad)
cmp
push
xchg
jb
dec
inc
or
dec
out
jne
(bad)
shl
gs
arpl
sub
js
popf
mov
scas
push
add
(bad)
scas
or
xor
dec
jns
push
(bad)
sbb
scas
xchg
cmp
jle
fldenv
pop
cmp
sti
inc
sub
cli
xor
(bad)
jmp
je
loop
call
lahf
out
xchg
inc
fmul
adc
sub
mov
xchg
xor
jns
xor
in
pop
pop
mov
dec
in
pop
out
jmp
(bad)
pop
mov
mov
mov
leave
not
mov
test
inc
xchg
mov
jae
int
adc
test
test
add
mov
fcom
je
mov
jge
das
das
pusha
stc
call
stos
xchg
push
cs
call
mov
mov
out
popf
je
sbb
mov
inc
test
mov
daa
imul
rcr
jl
jno
dec
jg
and
sbb
ret
jmp
jb
sbb
and
dec
adc
mov
sbb
cmps
or
fnstenv
ds
jmp
test
pop
shl
or
daa
ja
lods
pusha
(bad)
jecxz
(bad)
sbb
dec
out
iret
jmp
mov
bound
cmc
mov
jae
mov
ins
fnclex
dec
call
test
das
daa
push
in
cmp
cli
xchg
arpl
in
aas
mov
mov
xchg
and
inc
arpl
pop
test
xor
push
loope
mov
in
lock
leave
push
loop
dec
jmp
cs
fs
or
fnstcw
ja
mov
xlat
movs
and
push
repz
adc
and
push
pop
push
(bad)
push
repnz
xchg
push
adc
sbb
les
cmp
call
and
outs
jnp
jo
mov
ja
sbb
rol
cmc
outs
jne
movs
out
fs
gs
adc
rcr
mov
ins
xchg
sbb
mov
sbb
sub
push
repnz
xor
xor
xor
and
pop
ja
pop
std
pop
add
test
es
stos
test
push
imul
or
(bad)
outs
mov
ins
fidivr
sub
xor
xchg
(bad)
fs
imul
xchg
jmp
dec
dec
or
aas
ja
push
sti
jns
lock
imul
les
sar
out
stos
jmp
inc
mov
cs
cmp
cmp
push
push
adc
cmp
cdq
cld
mov
xchg
xor
xchg
jge
and
and
cwde
xor
es
and
inc
cmp
call
and
ror
mov
bound
mov
pop
gs
in
nop
test
sub
stos
cmp
ins
jmp
pop
pop
scas
inc
xor
mov
loop
inc
add
out
xchg
out
mov
mov
and
xor
dec
sbb
inc
sub
iret
cwde
inc
icebp
fisttp
ffreep
repnz
jge
inc
mov
in
xchg
inc
into
jmp
dec
jns
arpl
jmp
pop
push
xchg
dec
loope
out
and
add
push
aad
test
popf
mov
dec
ret
and
cmp
xchg
sub
adc
mov
mov
dec
jp
mov
fwait
mov
bound
fnstsw
or
xchg
xor
mov
not
xchg
loop
mov
add
mov
loop
xchg
mov
cmc
fabs
(bad)
push
push
cmp
inc
pop
pop
pop
test
mov
dec
xor
and
xor
dec
data16
cmp
dec
xor
sar
(bad)
push
in
hlt
popf
push
and
jle
fisttp
jmp
retf
inc
cmp
call
add
test
push
push
rcl
xchg
mov
icebp
adc
stc
ds
cs
(bad)
push
and
stc
out
stos
sbb
xor
xor
sub
out
fcomip
retf
aaa
pop
icebp
and
das
xor
xchg
repnz
pop
das
add
stos
jae
scas
adc
pop
out
ja
stos
sub
mov
xchg
or
pop
js
pusha
and
xchg
mov
add
and
jle
adc
cmp
and
adc
mov
cmps
cmps
out
xor
jo
enter
cmp
sub
fdivr
jns
enter
jno
(bad)
and
xor
inc
loopne
test
add
pop
push
stc
and
push
cmp
adc
repz
aam
dec
cld
pushf
mov
jmp
mov
inc
pop
sbb
fsub
ds
ret
imul
mov
ficom
clc
xor
mov
xor
stos
xor
cmp
fs
les
jecxz
xchg
push
or
sti
dec
mov
pop
cld
cmp
inc
inc
mov
popf
lods
xor
ja
loopne
pop
nop
jmp
fcmovu
adc
and
push
jns
movs
daa
jg
sub
cli
movs
dec
mov
fiadd
pop
xor
push
(bad)
dec
es
pop
sbb
sti
jge
xchg
mov
mov
repz
pushf
mov
mov
add
aad
cmp
mov
mov
dec
mov
imul
adc
mov
sti
fwait
pop
shl
cmc
push
mov
inc
ja
jmp
inc
test
add
popf
cmp
pop
xor
fiadd
sub
mov
pop
xchg
and
scas
jmp
sbb
data16
push
cmc
mov
add
xor
fwait
pop
cmc
xor
bound
cmps
pop
cmps
hlt
hlt
cmp
jle
adc
dec
retf
adc
dec
jle
ret
cli
ja
and
adc
outs
push
pop
mov
mov
cdq
xor
dec
jmp
int
dec
call
sbb
push
mov
out
or
inc
mov
cmp
(bad)
sbb
cmc
test
dec
jge
jmp
and
push
pop
mov
lods
je
cs
cmp
aam
icebp
shl
cmp
pop
js
cld
jmp
add
je
jns
in
in
scas
xor
outs
or
dec
daa
stos
jno
pop
repnz
or
sbb
aas
xor
(bad)
sub
and
test
pop
and
or
push
fstp
outs
dec
inc
sbb
xchg
push
pop
in
add
mov
es
test
mov
xchg
scas
jmp
mov
sub
or
out
cdq
jns
jbe
xor
pop
cwde
daa
pop
call
sub
sbb
adc
ret
fst
out
call
or
mov
les
jae
pop
neg
into
pop
test
hlt
jp
adc
and
push
rcl
add
adc
pushf
dec
xor
je
push
out
mov
clc
out
out
dec
fadd
dec
ins
xor
push
out
repz
aam
or
jmp
push
sbb
push
retf
daa
and
loop
mov
aas
xor
fld
repnz
inc
sub
sbb
inc
movs
cwde
adc
inc
fs
push
mov
pop
xor
push
mov
xor
xchg
retf
mov
jnp
adc
nop
xor
mov
adc
ss
(bad)
arpl
xchg
adc
shr
mov
jbe
jo
jmp
dec
mov
retf
jl
es
xlat
inc
cmp
jbe
pop
sub
sbb
rol
mov
sub
pop
in
dec
leave
xchg
sbb
icebp
xchg
xchg
xor
push
mov
cld
pop
cmp
sbb
xor
dec
cmp
je
mov
test
jo
shr
or
adc
jecxz
push
sbb
mov
add
retf
ins
ins
ja
lods
rol
rcr
das
pop
aas
jae
dec
stos
and
xchg
mov
push
sub
push
(bad)
ins
pop
dec
and
in
cwde
dec
stc
pusha
fisttp
ss
xchg
push
push
xchg
mov
xchg
sbb
inc
push
dec
xchg
inc
push
ret
jge
test
inc
and
rol
cmp
xor
aaa
repnz
xor
xchg
mov
sti
push
jl
and
mov
mov
(bad)
mov
and
in
call
mov
mov
and
cmp
push
jb
addr16
push
das
add
cmp
mov
stc
popf
sti
mov
loope
cmp
fistp
sbb
xlat
adc
cmp
and
and
icebp
sub
push
mov
add
mov
jb
lods
mul
xchg
mov
mov
push
pop
out
mov
dec
loope
pop
pop
xchg
movs
arpl
fcomp
ret
mov
imul
push
xchg
imul
cmps
xchg
dec
mov
ret
pop
mov
push
js
sar
in
push
cmps
cmp
into
push
leave
mov
push
loopne
cmp
pop
pop
mov
mov
cld
je
xor
jmp
dec
jo
xchg
mov
mov
or
ja
je
cmps
imul
hlt
push
hlt
pop
lahf
jp
cmp
add
lahf
ds
adc
dec
or
adc
xchg
pushf
add
data16
sub
fild
pop
sub
test
lock
mov
mov
lds
je
mov
mov
fimul
ficomp
xor
mov
push
outs
addr16
pop
int3
jmp
popf
or
int
loop
and
int
repz
into
cmps
test
cmp
push
add
xchg
shr
ss
lods
fdiv
loope
mov
outs
cmp
mov
mov
jp
and
dec
xchg
mov
pushf
cmps
or
sbb
imul
xlat
adc
scas
(bad)
in
adc
icebp
inc
jl
sar
enter
hlt
push
mov
jne
dec
dec
xor
jne
pop
daa
shl
cli
les
and
cmc
adc
mov
lods
aaa
cmp
rcr
ss
push
xlat
(bad)
stc
push
(bad)
xor
sub
inc
xchg
mov
test
sub
mov
mov
pop
test
loope
mov
or
pop
fsubr
jmp
daa
and
pop
lea
ins
pop
retf
push
out
fnsave
jbe
pop
daa
sar
ins
cmp
xor
(bad)
sbb
mov
repz
dec
call
aas
or
inc
xchg
xor
xor
adc
std
loop
mov
push
dec
sti
xor
cmp
mov
leave
mov
and
(bad)
fst
outs
mov
push
add
lock
sbb
pop
mov
rcl
sub
sbb
cmp
cli
neg
ins
gs
sar
dec
vunpcklps
mov
mov
mov
ss
scas
xchg
mov
dec
outs
mov
bswap
aad
or
inc
xor
cdq
push
pushf
sub
ins
nop
repz
cmp
test
push
outs
pop
inc
xchg
fwait
ds
call
outs
push
mov
test
mov
pop
test
sbb
push
push
xchg
mov
pop
test
aam
xchg
loop
add
inc
inc
ins
and
(bad)
iret
lods
jns
sbb
mov
inc
jmp
icebp
pop
ins
sub
add
(bad)
in
adc
cmp
and
jg
imul
xchg
sub
fild
and
popa
(bad)
in
push
or
test
ror
fisub
xchg
xchg
xlat
test
rcr
arpl
loop
xchg
mov
pop
jp
ins
fcom
sub
arpl
pop
loope
jae
out
scas
fcmovne
(bad)
xchg
dec
jge
mov
je
pusha
mov
inc
mov
push
inc
movs
nop
outs
sbb
sti
or
jge
nop
sub
or
clc
or
dec
pop
mov
cli
adc
push
pusha
xchg
daa
mov
fild
pop
invd
ins
rol
or
pop
add
es
out
sub
jo
(bad)
mul
jne
mov
out
sbb
int
mov
std
or
pop
retf
dec
fisttp
aaa
int
add
nop
inc
or
xchg
int
push
pop
jmp
cmp
and
dec
push
mov
scas
xor
push
and
out
jbe
mov
push
or
loop
rcl
push
xor
push
push
cmp
ss
sti
lods
and
push
aaa
sub
pop
pusha
jmp
dec
mov
fdiv
push
sar
pop
loopne
pop
mov
pop
pop
sub
xor
or
fisub
ja
(bad)
imul
cs
mov
mov
mov
dec
sub
sub
repz
adc
ja
sar
loop
adc
push
inc
mov
call
xor
push
or
fisubr
cs
not
daa
inc
fwait
mov
(bad)
pushf
sbb
movs
aam
(bad)
out
shl
cmp
(bad)
fst
jnp
xchg
mov
xchg
xchg
mov
aaa
scas
mov
test
js
cmps
jmp
and
pop
dec
inc
fnsave
sub
fs
movs
jg
mov
fisttp
sbb
and
mov
scas
leave
inc
outs
mov
bound
push
dec
mov
add
mov
in
std
daa
ins
mov
mov
or
add
xchg
call
push
lea
cmc
in
pushf
wrmsr
pmulhuw
cdq
xor
outs
or
scas
lock
adc
daa
mov
xchg
rcr
leave
pusha
jecxz
inc
out
loope
stos
and
daa
xor
mov
xor
cmp
mov
mov
jae
and
or
aaa
push
fwait
pop
push
pop
jne
sbb
mov
pop
fnstcw
jns
loop
out
iret
bnd
and
outs
scas
aad
dec
xor
fs
mov
(bad)
mov
or
leave
and
jbe
in
xchg
js
jl
div
xor
ss
std
(bad)
push
cmp
xor
ret
inc
jmp
add
pop
push
mov
adc
iret
mov
loope
sbb
fcom
mov
sub
in
ins
push
push
stc
fsubrp
dec
sbb
adc
pusha
dec
stc
and
mov
dec
loop
mov
cmp
mov
jno
loop
add
(bad)
pop
add
jg
jp
dec
push
jmp
sbb
xlat
push
mov
dec
fldenv
inc
aaa
jne
push
(bad)
xchg
addr16
gs
aas
and
test
test
and
arpl
mov
mov
out
cmps
pcmpeqb
cwde
sti
int
loope
mov
lds
hlt
jno
sbb
rcl
fwait
bound
pop
pop
leave
mov
or
mov
inc
fucomp
jmp
idiv
retf
add
lahf
sti
adc
sbb
mov
jmp
inc
sti
test
mov
dec
xchg
dec
adc
(bad)
jno
jmp
aam
scas
in
xor
lea
sahf
test
jb
retf
clc
adc
cmp
dec
lods
jp
sub
lods
nop
std
mov
std
inc
inc
rcl
mov
test
js
es
or
clc
fstp
popa
ja
inc
fmul
sbb
mov
dec
outs
popa
mov
xchg
push
aad
out
inc
sar
xchg
(bad)
daa
push
cdq
das
and
in
push
call
and
push
push
mov
(bad)
xchg
lods
xchg
(bad)
pushf
std
repnz
pop
popa
dec
sub
scas
mov
and
jmp
rcl
cmp
add
sti
stos
hlt
sub
inc
sub
xor
pop
sub
inc
icebp
xor
test
adc
pop
lahf
jns
xchg
dec
inc
jge
call
jp
jmp
sub
int
push
mov
xor
push
movq
jo
jne
xor
in
or
jne
fisubr
mov
test
mov
jle
stos
inc
inc
jno
and
mov
cmp
jb
out
aam
mov
(bad)
jmp
jb
dec
fwait
adc
push
xor
cmp
lock
iret
mov
into
leave
and
lahf
mov
sub
out
push
sub
or
sbb
mov
mov
push
jmp
push
pop
inc
mov
(bad)
sub
imul
mov
inc
hlt
jl
push
arpl
adc
jmp
push
cmc
sub
mov
lods
xor
rcr
or
jl
scas
or
push
sbb
inc
xor
repnz
aaa
sbb
shl
xchg
cmp
movs
pushf
push
outs
mov
sar
jnp
loope
daa
and
push
rcl
sbb
sbb
pop
sbb
popa
aas
xchg
lahf
retf
jecxz
jbe
fst
stos
icebp
sti
inc
(bad)
pop
mov
and
shr
mov
int
mov
fdiv
les
call
(bad)
mov
sbb
add
fmul
xchg
fisubr
push
mov
xor
retf
daa
push
or
jecxz
dec
inc
push
jns
xor
xchg
add
adc
fldcw
sub
sub
sub
and
adc
dec
shr
in
mov
dec
or
nop
xor
pop
mov
sub
daa
arpl
enter
or
jecxz
out
xchg
mov
xchg
cmp
lahf
test
fdiv
cmp
mul
jge
mov
adc
mov
dec
add
sbb
pop
and
sbb
(bad)
xchg
imul
sub
add
push
les
sub
les
ret
out
xchg
or
adc
mov
outs
pop
ja
or
loopne
test
adc
mov
daa
std
fwait
rcl
test
and
xchg
in
repnz
xchg
pop
hlt
jmp
or
xlat
and
mov
xor
cmp
sub
fist
in
ds
cmps
outs
mov
inc
ds
adc
lods
jo
dec
popf
adc
sub
sub
cwde
sub
std
loopne
lea
mov
les
adc
pop
push
(bad)
dec
jb
stos
pop
enter
pop
jae
inc
cs
movzx
mov
dec
in
cmps
popf
xor
push
add
(bad)
sub
push
push
pushf
push
pop
out
jge
rcr
ja
xchg
pop
inc
jnp
cwde
jae
xor
(bad)
cmps
pusha
xchg
cmps
scas
hlt
inc
push
adc
jnp
movs
in
or
mov
jmp
xor
fwait
cwde
inc
jge
rcl
jno
shr
cmp
leave
sub
and
pop
adc
jb
push
fstp
data16
shl
enter
jb
lds
lea
test
ins
shr
shl
aaa
pop
adc
clc
dec
cmps
mov
fwait
loopne
fiadd
and
adc
add
lods
mov
aam
dec
mov
cmp
fxch
loopne
add
cdq
repz
push
test
or
jnp
mov
gs
and
imul
jmp
add
xchg
push
or
mov
in
imul
adc
mov
iret
pushf
loope
mov
icebp
lock
xor
jl
retf
ret
adc
mov
sbb
mov
jmp
bound
mov
bound
cmp
gs
stos
inc
xchg
mov
push
loope
pop
jge
out
fcomp
mov
sahf
jnp
xchg
sub
dec
pusha
jb
xlat
rcl
fidiv
sbb
xchg
xor
movs
aas
adc
xlat
fcom
ret
dec
out
ss
jmp
sbb
cmp
cwde
enter
lods
popf
jmp
out
rol
dec
inc
lods
cmp
xchg
std
push
mov
(bad)
mov
sbb
inc
ja
stos
sbb
push
sub
adc
jmp
mov
iret
cmps
adc
ins
xlat
pop
pushf
cmp
xor
rcl
sub
cld
dec
push
(bad)
addr16
retf
jl
ret
loope
jecxz
ss
sti
in
pop
movq
and
lock
fist
push
add
or
push
push
xchg
call
sub
cmp
push
out
xchg
fmul
lds
cmp
fstp
dec
add
or
add
mov
jecxz
inc
lock
in
or
mov
(bad)
inc
test
cdq
xchg
imul
jge
push
daa
icebp
cld
sti
jbe
cwde
in
add
imul
cld
call
loopne
std
stos
inc
adc
adc
cdq
add
mov
lahf
jns
mov
sbb
movs
ds
adc
push
cmp
pop
sub
cld
pop
test
shl
out
push
std
jmp
and
or
ret
xor
add
es
inc
xlat
mov
fdiv
test
fsubr
scas
popf
mov
xchg
sub
ss
sub
cmps
mov
fwait
pop
pop
cmp
adc
adc
fninit
neg
retf
imul
nop
jle
inc
cli
pop
xor
int
jmp
ss
call
cmp
mov
fistp
pop
push
lods
push
mov
push
add
xchg
cmps
sub
xor
mov
add
ja
adc
jb
test
into
sbb
enter
(bad)
jns
pop
daa
xchg
sub
jae
push
(bad)
out
shr
aaa
jp
fcomp
cwde
pop
xor
push
aaa
iret
push
daa
xchg
sbb
push
jno
push
enter
jb
cwde
pusha
lods
gs
mov
retf
push
pop
jns
aad
enter
lea
sub
sub
ins
int3
inc
push
mov
rol
inc
jp
pop
(bad)
cld
je
xchg
rol
sbb
add
and
fisubr
inc
push
cld
mov
test
shl
cmp
(bad)
dec
adc
dec
and
pop
call
ins
and
and
pop
shr
push
icebp
lahf
or
mov
or
lods
iret
jne
hlt
inc
(bad)
mov
push
daa
scas
adc
scas
or
cdq
xchg
cmp
add
jmp
dec
(bad)
inc
jmp
jae
scas
retf
sub
pop
mov
stos
jae
shl
out
aam
push
push
sub
cmc
or
add
repnz
in
xchg
repnz
lods
ret
mov
mov
dec
push
movs
movs
push
push
ds
shr
aaa
pop
mov
dec
dec
fidiv
mov
mov
adc
jno
xor
xor
cs
inc
adc
adc
or
(bad)
cmp
pop
mov
loope
arpl
or
push
out
imul
addr16
pop
psraw
pop
push
aad
inc
bound
push
or
xor
jge
cmp
push
push
sub
icebp
lea
cmps
cdq
mov
dec
inc
inc
sbb
std
inc
add
movs
ss
jo
push
imul
enter
fisubr
mov
xor
sub
fisubr
push
loope
xor
scas
movs
push
imul
jb
(bad)
arpl
sub
push
xor
mov
gs
in
loopne
inc
dec
sub
sub
in
dec
xor
add
enter
mov
mov
cmp
stc
jae
cmp
cmp
mov
sahf
nop
adc
adc
out
jle
arpl
or
rol
js
cld
sbb
cs
mov
xor
ins
scas
fadd
js
cmps
xchg
mov
scas
sub
inc
repnz
stos
sub
inc
sub
dec
cmp
iret
mov
add
push
inc
jecxz
jp
clc
fcomip
stos
push
loopne
sub
xor
popf
ja
pusha
cmp
movs
ret
xchg
cmps
dec
mov
inc
loopne
sub
shr
push
mov
inc
adc
mov
pop
adc
xor
out
pop
hlt
dec
adc
push
inc
retf
pop
dec
push
dec
ja
jae
inc
shr
push
imul
movs
mov
mov
jns
mov
cmp
pop
mov
xchg
jb
(bad)
cmc
and
push
xchg
test
xchg
sub
(bad)
adc
mov
in
loopne
cmc
imul
and
stos
push
push
je
or
lock
test
xchg
cmp
stos
push
pop
or
pop
sub
std
cmp
enter
add
bound
jle
mov
pop
loopne
fisub
jo
addr16
dec
lods
arpl
adc
sbb
(bad)
test
cmp
fisubr
mov
inc
(bad)
pop
loop
adc
inc
lods
inc
repz
xor
mov
push
movs
sahf
ins
lock
ja
mov
inc
fsub
push
nop
xchg
cli
cmovle
aam
call
pop
jns
mul
repz
push
and
aam
icebp
mov
pop
or
and
adc
data16
jge
rcl
sbb
cmp
cmp
xlat
stc
mov
inc
lods
jnp
mov
fidivr
xor
loope
pop
and
adc
jae
sbb
mov
nop
inc
inc
pop
lahf
pop
movs
jae
inc
js
and
xchg
push
mov
shl
jno
pop
or
shr
loopne
lahf
inc
adc
mov
cs
stc
jo
mov
stos
jne
sbb
mov
out
jg
add
test
gs
dec
or
loope
cwde
outs
or
inc
jb
hlt
sub
mov
cmp
es
dec
idiv
adc
xchg
aad
mov
test
aam
in
inc
push
pop
(bad)
pop
xchg
dec
sbb
out
ret
jns
leave
add
mov
(bad)
int3
loopne
ror
in
aam
push
rol
mov
sti
inc
aaa
mov
adc
push
jge
cmp
in
dec
cwde
or
pop
loopne
lahf
cmp
jae
leave
fcmove
iret
ftst
push
mov
int
sar
in
icebp
add
mov
not
shl
lahf
and
int
add
add
inc
dec
frstor
fmul
jge
ror
lock
rcr
ror
add
dec
push
leave
dec
fwait
call
adc
in
rcl
les
sub
outs
mov
inc
repz
mov
sub
out
push
sub
dec
retf
test
test
pop
data16
inc
mov
xor
aaa
sbb
addr16
arpl
pop
mov
push
test
cmp
and
int3
leave
out
ss
jae
dec
mov
xchg
es
mov
call
push
mov
inc
cdq
xor
out
or
or
jae
inc
(bad)
fst
dec
aad
adc
mov
iret
push
mov
daa
add
add
add
mov
mov
dec
retf
sbb
cmp
inc
out
jp
stc
or
loopne
ret
add
push
jmp
mov
xchg
ja
inc
cmp
mov
mov
xchg
jl
mov
xchg
cdq
in
and
sbb
push
imul
sar
and
into
cmp
ja
jnp
or
mov
scas
dec
(bad)
iret
test
mov
sar
int
test
cmp
jo
or
mov
jl
mov
in
pmuludq
add
cmps
test
pop
dec
ja
push
call
stos
sbb
nop
push
int3
xchg
in
or
rcl
dec
ret
mov
les
fdiv
hlt
pop
int3
push
aas
sub
lods
stos
sub
inc
lahf
and
stos
(bad)
popa
mov
into
test
jno
cmc
shl
sbb
push
pop
inc
std
and
mov
sbb
fwait
retf
fild
sub
mov
clc
ja
cdq
cdq
cmc
mov
jae
das
xlat
pop
dec
jg
repnz
repz
fcomip
xchg
lea
push
aam
(bad)
fisttp
xchg
jle
sub
inc
dec
xchg
sub
jecxz
es
or
ficom
and
mov
hlt
hlt
mov
xchg
or
cmp
push
mov
push
clc
xchg
dec
lea
jo
push
shl
int
shl
call
pop
out
dec
int3
out
cld
mov
adc
push
rol
popf
lds
jg
pop
shl
data16
nop
in
in
movs
rcr
imul
ins
jle
fistp
xchg
imul
test
aad
retf
ret
cmovne
pop
shl
xor
push
pop
xchg
xor
stc
push
add
mov
dec
mov
lea
imul
(bad)
outs
mov
push
push
jns
xchg
pop
dec
shr
pusha
mov
jmp
jecxz
pop
xchg
ja
cmp
jns
mov
in
xor
adc
iret
and
cmp
ss
mul
jns
dec
sbb
movs
jmp
mov
jg
(bad)
pop
in
mov
cmp
pop
adc
in
xchg
push
push
cmc
dec
xlat
jno
jo
movs
add
pop
mov
push
xchg
cs
push
or
lods
xchg
shl
cmp
xchg
sbb
mov
ficomp
sub
and
sbb
mov
std
or
je
jle
test
aas
push
mov
xchg
call
(bad)
out
stos
cmps
mov
sbb
fs
sbb
push
enter
push
(bad)
jg
in
in
inc
dec
inc
jb
lods
cwde
into
stc
adc
sbb
pusha
cmp
cmps
xchg
sbb
test
add
cwde
pop
push
leave
cs
stc
mov
aaa
jmp
neg
jo
cmp
xchg
push
mov
ja
call
dec
cmp
or
fs
(bad)
pop
(bad)
lods
pop
sahf
jae
shr
lods
popa
add
push
sbb
ror
xor
xlat
jns
adc
mov
and
pop
sub
xor
ror
rcr
outs
outs
into
sti
lods
daa
fbld
mov
call
bound
sbb
dec
sbb
dec
push
pop
and
test
sub
mov
(bad)
aas
inc
jp
pop
aaa
mov
loopne
loop
fimul
jne
rol
sbb
into
aaa
dec
hlt
mov
ja
clc
sbb
add
sar
mov
bound
push
xchg
and
int3
mov
lock
xchg
ja
jl
cmp
fidiv
cdq
mov
jecxz
aaa
add
add
dec
div
(bad)
pop
or
stos
in
ds
add
punpckldq
jecxz
ins
iret
mov
cmps
dec
sub
adc
ficom
push
mov
(bad)
psrad
lods
fisttp
pop
sbb
movs
push
mov
mov
pop
push
mov
xor
mov
scas
scas
dec
mov
lahf
jnp
jne
cli
sbb
mov
push
ficomp
mov
popa
push
cmp
ja
ffree
pop
fst
fs
xor
sub
leave
das
add
fsubp
scas
movs
push
retf
and
sbb
loop
pop
pusha
aam
and
popa
cmps
test
fadd
mov
fidiv
sbb
dec
mov
push
iret
test
fcom
adc
sbb
es
and
scas
out
fisubr
dec
iret
(bad)
mov
(bad)
int3
movs
adc
fstp
out
mov
jns
jmp
sbb
lds
out
retf
adc
fcom
int3
aam
mov
mov
pusha
jbe
das
lods
pop
leave
call
sub
lods
mov
test
inc
icebp
mov
test
rol
(bad)
add
call
popa
jmp
ja
push
sub
loope
dec
in
push
pop
ror
and
inc
nop
and
loope
jmp
sub
retf
mov
mov
mov
stos
or
xor
aam
aas
(bad)
mov
call
fistp
scas
mov
out
mov
pop
outs
inc
push
popa
sub
or
cld
jo
shr
cmp
lods
mov
das
push
outs
pop
ror
push
add
mov
ins
clc
outs
pop
ret
repz
sub
outs
xor
mov
push
jo
jne
loop
fwait
outs
adc
ss
fmul
fidivr
xchg
pushf
push
jne
out
int3
dec
ret
push
xor
outs
inc
mov
push
nop
mov
iret
dec
push
inc
push
movs
add
loop
js
arpl
ins
ret
inc
inc
pop
sbb
xchg
das
jnp
ret
sbb
push
ret
jnp
add
rcl
sbb
xchg
dec
push
lds
out
and
sbb
sub
mov
and
cmps
loop
test
mov
(bad)
scas
mov
hlt
ficom
or
pop
sub
(bad)
dec
int
add
jp
data16
sub
ja
sbb
cmp
xlat
(bad)
rcl
fnstcw
sbb
mov
or
cmp
xor
xor
enter
rcl
gs
movs
pop
inc
(bad)
cmp
hlt
loope
inc
mov
ficom
push
inc
les
test
shr
xchg
scas
shr
adc
scas
js
dec
add
test
(bad)
cmc
sahf
test
mov
in
jmp
and
addr16
and
push
and
xlat
test
retf
push
enter
arpl
popf
push
pop
adc
adc
retf
push
mov
sub
pop
loop
in
call
xchg
scas
(bad)
jecxz
dec
or
fnstsw
or
pop
mov
test
cmp
cmps
int
adc
pop
push
or
cld
test
dec
push
mov
std
in
es
push
fwait
cmp
out
adc
fsubp
in
lods
sub
adc
inc
aas
jo
cmp
adc
cmp
pop
mul
(bad)
cmps
shl
les
push
mov
shr
mov
(bad)
sbb
adc
int3
inc
mov
nop
sahf
mov
mov
in
stc
fcomp
or
mov
mov
push
pop
neg
call
push
and
hlt
outs
aas
adc
sbb
or
sbb
add
push
(bad)
pushf
repz
and
jl
jmp
(bad)
mov
fstp
cwde
push
dec
lea
ja
fist
jb
push
das
outs
jo
leave
sub
(bad)
pop
jecxz
push
cmps
sbb
mov
out
scas
cmp
fisttp
xchg
cmp
pop
mov
mov
popa
rcl
and
shr
dec
idiv
xor
pushf
test
iret
or
inc
mov
test
inc
fucomip
xor
shl
test
mov
pop
inc
fiadd
adc
mov
push
sbb
(bad)
int
stos
sub
mov
bound
cmp
test
sub
pop
push
inc
jbe
sbb
mov
add
cdq
adc
and
test
popf
sub
xor
sbb
mov
inc
xor
lock
or
loop
scas
psubsw
in
sub
inc
jno
test
je
les
sbb
cld
and
push
int3
dec
add
mov
xchg
add
repz
fmulp
push
(bad)
jecxz
rol
dec
sbb
push
dec
adc
mov
rcr
setno
xchg
outs
mov
add
pop
or
fwait
mov
pop
rcr
ins
jp
dec
pushf
push
(bad)
hlt
push
xchg
mov
cli
cli
daa
dec
in
fistp
sub
dec
je
add
jae
cmp
stos
dec
push
push
mov
mov
or
dec
jecxz
mov
in
call
pop
lea
movs
ret
test
pop
push
in
lea
pop
push
mov
push
push
dec
sub
fld
pop
dec
fdiv
aas
mov
jp
nop
mov
(bad)
scas
arpl
sbb
push
xor
imul
cwde
xchg
or
out
or
(bad)
std
push
mov
dec
fs
inc
fdiv
inc
outs
sti
shl
test
ins
fmul
mov
test
sbb
add
stos
popf
push
pop
mov
aam
hlt
add
mov
rol
lea
xor
and
pop
aas
(bad)
into
ret
mov
cdq
fmul
cmp
mov
push
jbe
mov
jae
call
movs
repnz
in
inc
adc
lds
mov
dec
out
int3
inc
fucomip
push
lea
call
push
xor
mov
in
js
mov
pusha
ins
inc
addr16
aam
mov
and
push
jbe
pusha
xchg
xchg
dec
pop
pop
fsubr
neg
sub
or
sbb
cmp
enter
xchg
dec
ss
iret
test
cmp
pop
sbb
neg
jle
xchg
cmp
mov
add
aad
ja
adc
jb
mov
repz
pop
in
ret
je
mov
out
cmp
pusha
mov
and
int3
aas
scas
and
pusha
cmp
or
xchg
mov
loope
mov
ins
jae
popf
fdivr
cli
add
and
outs
push
push
jp
scas
hlt
sahf
test
dec
mov
cmp
jp
ins
pop
jmp
push
xchg
jne
scas
fisubr
div
mov
pop
fcmovne
dec
fst
loop
mov
rcr
movs
adc
jb
cwde
jmp
or
movs
mov
sub
rcl
push
enter
xchg
add
call
test
inc
stc
or
sub
jecxz
arpl
sub
xor
fs
fwait
mov
mov
inc
inc
dec
or
jo
dec
out
dec
mul
shr
inc
test
repz
lahf
mov
(bad)
mov
inc
movs
and
mov
add
imul
mov
fwait
sub
data16
shl
pop
cwde
mov
mov
out
and
test
lds
movs
or
ret
rcr
test
lea
call
jecxz
pushf
stc
pop
retf
lods
and
sub
ja
rcl
cmp
lea
jp
ds
jnp
ret
fdivr
sahf
sub
call
es
adc
sbb
test
cmp
(bad)
mov
or
cmps
nop
mov
je
lods
jno
push
cmps
mov
mov
icebp
scas
push
add
or
inc
jo
add
push
jmp
lods
cmps
mov
std
add
mov
ds
movs
sbb
inc
jno
xchg
scas
jbe
fs
and
add
std
(bad)
and
enter
or
and
mov
pop
inc
sbb
pop
ins
fstp
rcl
mov
sub
fisub
(bad)
dec
test
and
or
data16
pop
mov
xlat
dec
scas
xor
ret
mov
mov
bnd
popa
or
pop
jl
push
mov
fistp
outs
ins
sub
add
icebp
scas
mov
xor
mov
(bad)
stc
ins
cmp
(bad)
dec
ds
mov
pop
dec
dec
and
cs
sub
loopne
call
inc
mov
std
push
push
cwde
pop
adc
pop
cwde
jne
mov
cmp
xor
retf
pop
push
ret
rcl
out
push
fwait
sub
ret
lea
lock
rcl
or
pop
lods
ret
cmc
xor
adc
add
(bad)
test
rcl
sti
pop
cli
jg
pop
push
test
fild
add
mov
iret
mov
mov
or
scas
aas
jno
lods
(bad)
cmp
gs
sbb
or
idiv
pusha
pop
push
mov
mov
icebp
sti
mov
dec
dec
push
xor
push
cld
cmp
scas
stos
jge
hlt
loopne
cmps
ss
or
push
mov
call
ja
rcl
push
jg
loop
cmp
sub
outs
in
adc
ror
jo
xchg
jns
ret
ret
add
add
test
inc
and
push
adc
jb
xchg
mov
out
mov
repnz
aas
mov
call
enter
dec
repnz
push
mov
or
push
movs
in
clc
xchg
(bad)
and
(bad)
lea
in
in
jbe
(bad)
and
ret
xchg
and
jecxz
xor
test
daa
fidivr
int3
inc
mov
jmp
into
jmp
shl
adc
imul
jge
les
xor
call
pusha
xchg
icebp
and
sar
xor
or
push
stc
outs
fdivr
ss
loop
mov
dec
in
fisttp
cmp
xchg
push
or
sahf
nop
mov
outs
push
aad
test
mov
sub
cli
outs
push
sbb
push
addr16
pop
cld
into
retf
gs
test
pop
mov
sbb
pop
push
addr16
mov
sar
imul
sar
adc
gs
ficom
jmp
cmps
and
ror
add
mov
arpl
add
jno
cdq
xlat
jecxz
fdiv
inc
(bad)
jb
jo
clc
push
loopne
inc
sbb
sti
jl
repnz
push
mov
je
mov
not
mov
into
push
and
pop
or
loope
xor
mov
loope
test
push
xchg
mov
jecxz
rcl
dec
imul
iret
jmp
cmp
add
xchg
xlat
loope
mov
xchg
arpl
xchg
mov
cmc
fs
fwait
sbb
sbb
mov
jne
dec
push
cwde
enter
cmp
sbb
cmps
jmp
shr
js
int3
xchg
pop
xor
push
repz
loope
xchg
arpl
sub
dec
inc
es
daa
pop
adc
sub
and
aas
mov
leave
and
cmp
mov
fldenv
popa
adc
mov
aaa
or
hlt
(bad)
jmp
rcl
add
sub
jb
mov
daa
ss
jg
cmp
push
aaa
pop
jmp
xor
out
xor
(bad)
pop
cmp
data16
dec
dec
push
fwait
dec
(bad)
add
add
mov
jnp
movs
add
inc
in
xchg
sbb
push
and
inc
cmp
dec
call
xchg
mov
scas
mov
cmp
sub
popf
jbe
loop
ins
cmc
js
pop
inc
jle
inc
push
enter
scas
test
or
jb
add
mov
enter
jecxz
cmp
addr16
add
cmp
jbe
mov
fucompp
dec
rcr
stc
inc
test
mov
or
jne
retf
add
xor
jbe
dec
mov
sbb
and
and
jnp
jbe
mov
mov
mov
sub
(bad)
pop
xchg
mov
dec
xchg
(bad)
cdq
imul
dec
pop
cmps
es
arpl
xor
cmp
fild
retf
xor
data16
add
xchg
mov
push
stos
cs
push
mov
lahf
mov
ficomp
repz
addr16
xchg
xor
mov
shr
jb
or
add
xchg
jmp
mov
arpl
sub
test
pop
fnstsw
mov
mov
popf
test
sub
int3
outs
ret
stc
xor
adc
fwait
xlat
fcomp
jmp
cmps
cmp
xlat
jbe
imul
aas
or
retf
and
xchg
mov
les
arpl
push
test
ss
mov
mov
iret
jecxz
lock
and
test
(bad)
or
cwde
shl
cmp
jmp
fidiv
ja
mov
je
jno
icebp
ja
ins
mov
dec
addr16
jo
jge
cmc
dec
je
push
jb
test
jge
push
stos
movs
cmps
push
in
mov
add
dec
add
nop
mov
sub
mov
jg
test
sahf
and
cmp
jae
jno
inc
inc
js
fs
retf
add
imul
fcomp
xchg
jmp
add
aad
dec
jbe
popa
jae
cmc
push
cwde
add
ror
add
std
popa
dec
aaa
scas
jmp
inc
adc
adc
fwait
(bad)
into
sar
fwait
das
mov
aam
call
adc
fs
jb
das
loopne
xor
adc
aaa
loop
adc
jne
pop
jecxz
inc
sbb
xlat
fsub
mov
xchg
scas
mov
sbb
push
imul
fcom
jp
xlat
pop
icebp
aad
adc
mov
test
lods
mov
in
xchg
jmp
scas
loop
sbb
repz
mov
(bad)
or
xchg
test
lods
shl
mov
xchg
pop
xor
out
xchg
repnz
push
or
ret
xor
mov
or
test
es
imul
ret
sub
mov
push
pop
mov
fstp
push
mov
mov
vpunpcklqdq
xchg
push
mov
mov
test
es
loopne
in
jbe
and
(bad)
cmp
mov
jge
and
xor
and
mov
arpl
push
retf
and
and
push
inc
fdiv
ret
addr16
mov
cmp
pusha
dec
dec
or
enter
ret
xor
push
pop
sbb
jae
call
sbb
or
sbb
xor
pushf
or
inc
mov
lods
push
js
scas
fwait
shl
and
fbstp
push
sub
inc
adc
jne
adc
lea
cmc
sub
and
cmps
xlat
and
sbb
and
sahf
sub
in
paddd
jle
pushf
in
dec
sbb
sub
push
sahf
setns
sub
pop
aam
jecxz
int3
dec
dec
pop
iret
dec
lock
fs
sub
lds
sar
enter
fdivr
and
xor
mov
int
dec
repnz
mov
addr16
push
inc
inc
hlt
in
out
out
outs
push
push
fwait
int
xor
rcl
(bad)
imul
pop
inc
mov
in
fbstp
sti
xor
adc
ds
sub
mov
xor
xchg
fidivr
push
adc
xor
mov
aam
popa
mov
xchg
les
inc
rol
mov
fild
cmp
or
ffreep
ins
ds
push
adc
pop
push
pop
loop
imul
sbb
std
pop
in
jae
jge
or
sub
pop
adc
cmps
sahf
push
xchg
add
imul
stos
fcomp
cmp
lahf
add
and
jb
jle
outs
or
scas
paddw
(bad)
int3
call
pushf
dec
inc
mov
(bad)
jnp
shr
scas
mov
mov
adc
mov
loopne
std
pop
mov
stos
lock
mov
add
sub
dec
add
cmp
pop
outs
test
fidiv
(bad)
out
ds
jp
push
scas
mov
stc
xchg
outs
repnz
push
int
xchg
jg
pusha
mov
ins
loope
bound
push
mov
mov
sub
jb
int
jo
xchg
xchg
cmp
or
dec
mov
xchg
outs
fstp
mov
leave
aam
adc
inc
je
cmp
or
sbb
mov
dec
sub
shr
push
call
call
pop
mov
ret
mov
mov
fisubr
and
ficom
aad
xchg
adc
pop
movs
out
shl
push
sub
cmp
rcl
and
sub
or
add
mov
sub
inc
in
cmp
pop
loope
jns
fild
inc
dec
les
add
cmps
add
xor
outs
sbb
jmp
sti
and
xchg
loopne
and
add
pop
in
mov
sbb
or
std
mov
arpl
cwde
mov
and
jno
xchg
es
enter
out
lods
cmp
adc
jl
out
sbb
rcr
add
mov
xchg
call
jmp
mov
clc
shl
add
mov
fwait
mov
outs
and
adc
out
jnp
push
test
xchg
push
push
inc
jecxz
push
push
adc
dec
es
call
repnz
sbb
out
std
imul
pop
inc
pop
xchg
jg
pop
clc
xor
iret
xor
leave
mov
mov
lods
int
test
cdq
xchg
mov
arpl
int3
pop
pop
xchg
sub
cmps
cmp
(bad)
popf
and
or
leave
fs
push
fstp
les
xor
js
popa
xchg
out
add
mov
sub
push
loopne
mov
rcr
fnsave
inc
inc
cmp
jns
in
stos
push
pop
mov
shl
or
nop
je
rcl
jl
fcmovbe
xor
les
repnz
inc
and
jmp
mov
daa
pop
dec
(bad)
popa
and
push
and
inc
xor
xor
lock
adc
and
neg
sub
stc
ds
lods
push
or
pop
data16
out
mov
test
or
dec
pop
mov
cdq
movs
dec
dec
lock
pop
dec
pop
stos
ja
inc
add
inc
sbb
add
fist
rcr
mov
cmc
in
les
ins
ja
jbe
xchg
xor
imul
loop
cs
call
pop
cmp
jecxz
ret
sub
(bad)
aas
nop
jb
ja
push
lds
sbb
xchg
pop
dec
lods
xlat
bound
lahf
daa
xchg
push
cmp
aas
lea
cld
inc
scas
fst
imul
cli
fimul
fwait
arpl
mov
leave
sti
test
push
inc
in
mov
jnp
ret
or
std
out
iret
jmp
xchg
movs
add
fdiv
pop
push
xchg
pop
push
pusha
push
dec
sub
inc
popa
adc
cmp
mov
pop
add
cmps
add
add
pop
sub
or
lock
mov
std
call
xor
(bad)
out
arpl
into
pop
pop
dec
jl
pop
rcr
daa
mov
mov
lods
xor
repz
pop
stc
std
jl
idiv
(bad)
dec
je
mov
aam
cmps
aaa
daa
pop
js
mov
push
mov
add
fnsave
shl
sub
(bad)
cmp
push
iret
push
fisttp
sub
add
pop
pop
retf
jecxz
mov
sbb
adc
out
inc
shl
(bad)
or
inc
jle
test
enter
or
gs
sbb
iret
and
xlat
stc
fsub
cmps
jae
cmp
dec
sahf
das
cs
je
jle
jnp
adc
mov
je
adc
or
test
stos
pop
dec
lea
ins
lock
aad
pop
xor
jge
cs
mov
sub
adc
or
jae
mov
in
movs
jbe
out
mov
pop
aaa
mov
ins
fst
cmp
rcr
icebp
jl
pushf
hlt
pop
stos
lods
jecxz
(bad)
cwde
mov
cmp
mov
(bad)
mov
dec
retf
push
pop
fsub
mov
test
imul
das
test
(bad)
or
dec
sub
js
iret
ret
test
int3
ds
or
stos
ins
(bad)
xchg
or
pop
inc
add
imul
test
jne
push
jmp
inc
sbb
jp
mov
cmp
push
mov
in
cmp
rcr
pop
jp
movs
mov
test
fwait
mov
mov
fidiv
mov
shr
pop
or
pop
adc
push
das
xchg
fnsave
int
mov
cmp
rcr
cmp
stos
stos
mov
and
outs
jbe
push
xchg
mov
das
leave
push
push
scas
inc
not
fdiv
test
mov
shl
pop
out
jmp
imul
xchg
das
add
xor
push
push
popa
in
int3
mov
fldln2
movups
enter
sub
div
dec
cmp
clc
je
stc
popa
xor
repnz
into
fnstsw
sar
inc
xor
cmp
lea
enter
xor
cmp
mov
and
arpl
loope
jb
xor
aaa
sub
add
retf
(bad)
pop
jmp
sbb
call
xchg
ret
pop
xchg
ins
mov
les
add
ror
stc
push
xor
imul
popa
and
inc
add
push
adc
out
aaa
dec
sti
test
imul
dec
fs
jmp
mov
shr
push
adc
add
pop
inc
push
mov
(bad)
cmp
and
retf
fnstcw
js
mov
pop
pop
pusha
inc
push
xchg
(bad)
mov
dec
push
mov
in
cmp
mov
xchg
push
and
inc
loop
mov
stos
inc
ss
mov
mov
das
xor
call
sar
arpl
sbb
push
pushf
in
mov
fisttp
aas
bound
movs
or
and
jle
xchg
movs
jns
imul
and
inc
pop
mov
call
or
xor
iret
out
sar
sbb
dec
std
add
sbb
add
retf
inc
loopne
xchg
mov
mov
fbld
push
(bad)
sti
inc
add
out
outs
add
jmp
popa
xchg
nop
push
sub
adc
popa
int3
xchg
or
inc
jecxz
pop
fisub
push
jmp
test
jne
and
pop
cmp
or
sub
xor
push
mov
lods
loopne
sti
popa
ret
mov
js
adc
mov
shl
mov
add
rcr
unpcklps
(bad)
jge
add
and
les
fst
inc
mov
sar
in
or
jecxz
and
mov
mov
(bad)
add
dec
scas
sub
adc
popa
shl
mov
retf
shr
push
addr16
std
fs
out
mov
xchg
imul
imul
outs
push
lock
sub
shl
or
lock
or
movs
push
mov
sbb
fwait
sbb
xor
inc
adc
pop
movs
nop
cmp
pop
aas
fld
adc
ss
adc
push
sti
ds
ds
ret
mov
retf
mov
and
loop
cmp
ud0
xchg
test
pop
sub
inc
push
jp
lods
(bad)
in
fstp
mov
mov
sub
xor
dec
adc
mov
int3
mov
stc
and
je
inc
or
pop
imul
sub
int3
pop
dec
xchg
mov
jno
xchg
adc
inc
or
out
je
xor
mov
leave
call
add
jns
cmp
js
add
sahf
mov
imul
and
call
pop
add
dec
jbe
xchg
sub
loope
cmc
inc
xchg
mov
mov
fs
clc
pop
shl
mov
out
mov
pmullw
xchg
sbb
and
ja
sbb
mov
adc
sbb
scas
xchg
push
inc
repz
add
mov
inc
pusha
xchg
scas
cmp
aaa
mov
adc
sahf
daa
mov
pop
aaa
and
retf
call
and
ss
sub
mov
mov
inc
fild
xor
push
rol
pop
push
xor
sbb
std
test
popf
mov
addr16
or
add
rcr
push
mov
mov
adc
xor
das
lahf
and
ffree
push
sbb
sub
jl
sub
xor
cs
cld
aas
in
xchg
in
push
xchg
int3
cmp
test
out
push
ja
push
xor
pop
aam
push
xchg
jnp
jmp
push
pusha
sbb
mov
rol
outs
ror
loopne
inc
push
in
or
xlat
(bad)
adc
and
out
push
sbb
mov
test
test
imul
pop
sub
out
xor
addr16
push
mov
inc
push
jnp
mov
repz
mov
pop
loope
jno
sub
mov
pop
xor
clc
out
sub
and
pop
mov
je
out
int3
mov
mov
test
(bad)
mov
pop
and
fisubr
aam
test
test
adc
add
inc
pop
and
imul
sub
retf
mov
out
ja
mov
pop
loope
adc
push
neg
push
mov
add
(bad)
mov
frstor
cld
hlt
mov
rol
out
cwde
xlat
dec
call
or
cs
test
cmc
icebp
stos
xchg
lock
cmps
retf
or
leave
das
mov
scas
dec
test
fnstsw
sub
mov
addr16
fs
dec
retf
xchg
ss
repnz
mov
rol
pop
fstp
adc
mov
pop
aaa
adc
cmp
mov
cmp
lds
pop
repnz
imul
rcr
xor
stos
ja
sbb
or
xchg
rcl
add
pop
push
mov
scas
ins
jg
pushf
aas
scas
dec
ins
int
sti
or
fiadd
int3
jp
sbb
(bad)
lock
and
repz
pop
mov
test
cmp
loopne
(bad)
mov
mov
inc
xor
les
js
add
inc
idiv
xchg
xor
jmp
addr16
fadd
mov
fxch
not
mov
outs
push
add
icebp
mov
cmp
sbb
(bad)
mov
lock
lea
inc
stos
outs
adc
ja
loop
sub
xchg
jp
cmp
mov
retf
ret
(bad)
sub
jae
inc
gs
repnz
jecxz
pushf
pop
add
mov
xor
(bad)
test
repnz
push
loop
adc
push
in
jae
movs
aas
cmp
(bad)
xor
pop
dec
xchg
ror
adc
ret
and
xor
dec
jmp
lea
xlat
xchg
stos
dec
inc
xchg
and
repnz
fimul
mov
xchg
fcomp
adc
inc
xor
mov
(bad)
aaa
fstp
xchg
mov
daa
xor
jle
loopne
inc
inc
or
cmp
dec
ret
and
movs
mov
push
in
stos
fwait
int3
inc
push
dec
jae
and
pop
or
out
loopne
fldcw
out
push
xor
sbb
movs
cmc
imul
push
(bad)
xor
into
adc
bound
cmp
cmp
push
dec
(bad)
jb
push
pop
jns
sub
push
retf
pop
and
mov
ds
or
ja
shl
cmp
xchg
add
imul
frstor
out
mov
cmp
inc
sbb
les
jns
push
in
jmp
sub
cmp
jmp
in
xchg
sbb
mov
ror
cmp
loop
int3
fwait
jae
enter
mov
mov
ret
mov
in
cmp
mov
mov
aad
dec
dec
mov
push
js
imul
xchg
sub
fcmovu
(bad)
fwait
cs
cs
push
les
jg
cmc
sbb
mul
xchg
adc
fisub
jmp
(bad)
cmp
(bad)
les
and
dec
add
sub
jns
sub
mov
push
add
cs
lods
outs
lea
cmc
neg
imul
or
retf
jmp
daa
xor
fxch
or
sub
test
xor
stc
repnz
iret
xchg
mov
lods
cmps
and
leave
repz
adc
sti
sub
lea
or
push
mov
movs
fisub
fld
jmp
ret
js
push
daa
pusha
and
test
cld
push
fsub
push
dec
mov
in
mov
mov
mov
add
bound
(bad)
cld
jmp
push
ret
aad
push
inc
ss
sub
mov
ins
and
adc
(bad)
repz
pop
push
loop
or
mov
dec
stos
loop
in
ins
add
out
fst
sub
dec
inc
xchg
xchg
ins
xchg
loope
sbb
mov
in
adc
pop
sbb
dec
push
popf
sbb
mov
sbb
outs
popf
jns
pop
and
popf
or
mov
and
cmp
in
push
adc
add
pop
ja
mov
pop
int3
cmps
mov
lods
scas
lahf
pop
inc
mov
pop
cs
cli
cmp
mov
aam
add
jno
sub
pop
(bad)
jnp
mov
adc
jp
fist
mov
adc
fwait
not
jnp
or
inc
sub
test
or
jecxz
hlt
mov
jno
leave
jmp
mov
lods
imul
lods
fld
test
jmp
dec
mov
comiss
mov
int
es
adc
movs
inc
fadd
mov
pop
fwait
push
push
ja
std
lods
inc
mov
fld
cmps
jcxz
mov
pop
rol
mov
pop
cmp
aas
push
lea
aaa
test
addr16
xchg
or
jmp
xor
jmp
ins
sub
enter
inc
je
ja
xchg
icebp
fisubr
mov
mov
cwde
pop
(bad)
in
shr
mov
data16
lods
and
pop
xsaves
adc
ins
mov
dec
mov
lahf
(bad)
int3
xchg
jae
mov
(bad)
cdq
int3
sahf
xchg
sub
pop
pop
(bad)
retf
mov
xchg
xchg
or
jp
adc
push
xchg
in
mov
adc
sub
mov
inc
xchg
aam
xchg
fistp
add
jb
test
out
scas
pop
enter
inc
test
mov
sbb
sub
inc
out
ss
push
lock
sub
(bad)
ja
inc
jge
mov
inc
sbb
int
cmp
int3
add
xchg
mov
mov
pop
repnz
jmp
ins
and
add
in
sub
cmp
add
mov
ins
int3
nop
jecxz
scas
(bad)
pop
popa
jle
sbb
pop
push
sbb
cmc
repz
jmp
sahf
mov
pop
das
jmp
dec
dec
mov
dec
ror
jnp
mov
sub
popa
ins
mov
int
cli
jnp
push
dec
iret
sub
jnp
ret
cmc
ret
mov
push
popa
mov
mov
std
mov
mov
mov
ss
push
or
(bad)
out
mov
int3
retf
(bad)
sub
aas
mov
adc
inc
ss
adc
pop
cmp
aas
outs
cmps
sbb
imul
cmp
and
adc
inc
in
call
dec
pop
add
lods
aam
sbb
repz
jmp
adc
xor
jb
fidivr
or
pop
(bad)
(bad)
aas
cmc
cmp
jbe
and
loopne
jl
add
cmc
ficomp
pop
and
inc
dec
rcr
pop
push
jns
(bad)
mov
and
pop
hlt
gs
cwde
(bad)
xchg
xchg
jmp
mov
movs
in
stos
sti
dec
dec
enter
js
arpl
mov
shr
shl
adc
add
mov
imul
fcomi
xchg
add
mov
hlt
jo
mov
jecxz
mov
or
mov
xor
or
sub
mov
test
inc
cld
or
and
cmps
ins
pop
xor
lea
jl
lea
std
in
dec
xor
xor
mov
int3
in
cmps
add
int3
adc
jg
adc
xchg
ins
jb
mov
div
or
sbb
add
hlt
add
pop
in
idiv
icebp
mov
jp
cmp
jmp
push
mov
mov
add
outs
mov
(bad)
(bad)
mov
push
inc
sbb
mov
sbb
cmp
xchg
add
jnp
push
jo
cmp
cmp
cmp
push
push
aaa
aad
jmp
dec
sub
out
cmps
movs
es
mov
ss
js
call
inc
xor
push
mov
mov
dec
jno
add
lods
aam
sahf
jb
aam
lahf
push
jge
pop
call
sub
inc
dec
mov
push
ins
das
iret
ss
dec
int
fcom
out
retf
adc
leave
popf
ds
jno
sbb
mov
push
mov
adc
inc
sub
push
push
shl
(bad)
pop
mov
xchg
pop
mov
inc
xlat
bound
mov
aas
aas
sbb
imul
movs
adc
icebp
or
jnp
mov
pop
addr16
xchg
mov
push
mov
repnz
jmp
or
push
push
nop
xor
mov
enter
push
mov
sahf
mov
sbb
mov
popf
mov
mov
sub
fldenv
xchg
ja
jl
js
inc
cmc
mov
cs
arpl
push
cmp
xchg
push
push
nop
fmul
lahf
adc
test
and
rcr
push
(bad)
dec
fidiv
cmp
jmp
js
jnp
and
lods
call
es
jmp
lock
jg
retf
push
mov
pop
mov
out
retf
lock
lods
and
mov
xchg
scas
sub
pop
(bad)
add
sar
add
pop
lods
push
lea
retf
hlt
mov
xor
mov
outs
sub
adc
in
icebp
pop
jl
std
int
rol
xchg
jb
icebp
rcl
mov
ret
adc
mov
xor
stos
cdq
sbb
cld
pminub
mov
mov
scas
and
mov
shl
je
push
in
(bad)
cmps
add
mov
inc
sub
jge
pop
and
dec
(bad)
jge
call
in
xor
mul
daa
js
retf
xchg
aaa
inc
cwde
mov
inc
pop
aaa
repnz
cmp
or
(bad)
mov
retf
sub
inc
mov
outs
cmps
mov
pop
fisubr
mov
shl
mov
retf
pop
in
cmp
sub
test
inc
sti
fmul
or
push
sub
test
xor
(bad)
cmp
or
xchg
jnp
(bad)
(bad)
jmp
aad
xchg
dec
scas
ret
mov
jbe
shr
(bad)
in
add
add
adc
pop
jno
dec
ins
jns
mov
xor
mov
loopne
push
adc
cmp
or
pop
fstp
xchg
cmps
mov
inc
cs
lea
outs
(bad)
jno
nop
lods
movs
dec
lock
arpl
lahf
sub
(bad)
xor
push
sub
mov
inc
out
mov
adc
shl
retf
xchg
je
jecxz
xor
or
je
dec
ficomp
sub
ds
test
aad
loop
push
ins
imul
das
sbb
fsub
mov
xchg
dec
cwde
inc
sub
retf
out
mov
sub
pop
cli
ja
hlt
xchg
xor
rcl
int3
std
inc
loop
inc
add
inc
es
push
xlat
shr
fimul
mov
xor
xchg
push
cmps
cli
in
(bad)
pop
loop
lock
pop
mov
or
sub
lock
mov
xor
jl
push
sbb
imul
adc
xor
popf
and
pusha
outs
cli
call
call
in
mov
add
lock
daa
cmps
dec
sahf
jge
and
je
mov
lahf
xchg
call
inc
push
cmps
pop
hlt
es
xchg
jae
push
adc
dec
loop
movs
adc
jbe
xchg
(bad)
mov
ficom
mov
pop
dec
(bad)
movs
mov
cwde
cwde
mov
inc
push
push
outs
xchg
cwde
sub
scas
mov
or
into
xlat
mov
pop
ret
cld
cmp
out
lock
lock
jp
stos
xor
in
or
lahf
xor
dec
mov
pop
aad
jg
mov
mov
pop
(bad)
retf
xor
pop
xor
xchg
jb
cmc
gs
adc
ror
out
cmp
repz
jb
jecxz
mov
scas
mov
mov
mov
out
sub
sub
dec
test
(bad)
std
jle
cmc
into
movs
push
xor
pop
imul
push
ret
xchg
idiv
sub
dec
xlat
add
(bad)
repnz
dec
inc
dec
jl
jle
xor
data16
icebp
jne
mov
repnz
mov
mov
dec
mov
xor
in
sub
xchg
cld
dec
jns
std
call
cmp
das
in
jge
pop
or
icebp
adc
xchg
daa
cmp
cli
cmps
add
jae
(bad)
cwde
loop
aas
into
push
sub
inc
mov
push
jo
cmp
inc
ror
div
push
pop
mov
add
xchg
pop
mov
push
(bad)
ficomp
pushf
adc
neg
lock
dec
adc
ficomp
stos
mov
xor
arpl
lods
mov
push
sbb
sbb
and
dec
mov
and
push
es
addr16
nop
movs
jmp
std
cmp
mov
je
pusha
fisub
sar
pop
xlat
lods
nop
out
xchg
lods
cld
in
mov
mov
xchg
mov
mov
xor
add
test
(bad)
nop
bound
mov
mov
rcl
ja
jle
pop
hlt
data16
fiadd
int
aaa
inc
icebp
int3
hlt
inc
mul
inc
into
mov
adc
bound
(bad)
push
in
shr
ficomp
sbb
(bad)
(bad)
fst
fwait
mov
aad
std
sbb
push
cmp
jg
mov
push
mov
adc
cmc
not
cmc
shl
mov
fs
in
stc
xchg
mov
test
not
mov
sbb
mov
int
shl
xchg
es
and
inc
rcr
jns
lock
push
mov
adc
or
mov
jg
jns
lods
(bad)
ins
dec
jne
and
inc
nop
jno
lods
repnz
std
in
test
mov
pop
cmc
repnz
jbe
xchg
cmp
arpl
mov
mov
cmp
punpckldq
std
adc
mov
xchg
in
cmps
arpl
aaa
sbb
fbld
dec
pop
dec
jecxz
sub
mov
push
inc
stos
push
mov
ins
mov
adc
inc
adc
and
dec
outs
daa
inc
aad
inc
mov
mov
in
les
fwait
or
cmp
inc
lods
dec
push
es
or
xor
shl
pop
jl
adc
mov
lahf
jmp
int3
cmp
retf
cs
iret
shl
xchg
das
ficom
cmps
ficomp
out
jecxz
sub
push
inc
and
js
mov
mov
je
rol
pushf
sbb
jecxz
rcl
adc
adc
inc
sahf
sbb
push
clc
call
inc
xchg
mov
and
jecxz
das
pop
cwde
int
cld
cs
leave
mov
aas
fsub
cwde
pop
adc
cmp
mov
mov
adc
(bad)
mov
popf
(bad)
in
fidiv
ja
not
stc
cmp
int
mov
sub
shl
xor
fistp
jb
sbb
and
jge
rcr
cld
sub
outs
dec
adc
clc
ja
adc
jae
jnp
pop
ja
push
push
xor
and
pop
cmp
or
mov
imul
adc
cmps
shl
ret
(bad)
sub
iret
mov
sbb
xchg
pop
mov
dec
mov
call
add
and
sbb
mov
loopne
sub
or
icebp
jle
movs
stc
mov
push
jg
add
addr16
sub
add
pop
retf
fbld
jge
(bad)
out
inc
sbb
inc
inc
call
inc
push
mov
arpl
rcl
jge
jmp
int3
xchg
pop
mov
mov
jno
jg
sub
loop
out
jmp
ja
fisub
jmp
push
ficom
idiv
pop
and
mov
mov
push
rcl
jb
mov
cwde
jge
out
adc
call
retf
sub
xchg
lahf
(bad)
xchg
movs
sbb
(bad)
mov
sub
adc
inc
pop
addr16
pop
mov
je
rcl
inc
out
push
hlt
movs
call
sbb
int3
repnz
stos
dec
or
bound
shl
and
loop
sub
jno
jmp
mov
cwde
jge
sbb
loope
frstor
ficom
sub
loope
mov
sub
and
bound
loop
fisubr
mov
cmp
xchg
outs
adc
stos
in
xchg
fimul
mov
mov
sbb
sub
ror
mov
mov
retf
mov
ficom
add
stos
push
ins
out
shl
pop
push
pusha
jae
cld
gs
sub
jmp
jmp
fsub
cwde
fild
mov
test
or
fild
mov
mov
push
js
jmp
cmps
in
(bad)
xchg
test
pusha
jmp
and
adc
outs
fisttp
adc
push
gs
outs
pushf
sbb
jne
jmp
loopne
xor
mov
std
and
arpl
repnz
sbb
adc
dec
sbb
sbb
mov
mov
xor
sbb
mov
popa
jp
adc
es
inc
push
dec
cmp
mul
lock
xchg
out
mov
ret
aaa
mov
adc
sbb
mov
xchg
aas
jecxz
adc
xor
pop
int
ss
push
ret
add
dec
test
add
test
rcl
ja
jno
add
cmp
push
(bad)
mov
xchg
retf
push
call
mov
sub
aam
sahf
pop
jb
add
imul
adc
call
test
fwait
ret
fwait
inc
mov
and
ficomp
jge
scas
adc
hlt
xchg
or
dec
inc
pop
jmp
mov
dec
xlat
or
mov
cmp
ins
xor
stos
movntps
aas
cmc
(bad)
outs
pop
xchg
jg
cmp
gs
pop
into
fwait
cmp
mov
fdiv
push
jbe
(bad)
mov
test
in
pop
pop
sub
jo
mov
push
clc
mov
xchg
pop
in
aam
push
and
jg
test
push
xchg
fld
dec
imul
jle
inc
push
adc
sbb
xor
xchg
xchg
test
jmp
push
scas
cdq
loope
jb
mov
xchg
sub
dec
xor
(bad)
shl
sbb
inc
pop
mov
hlt
sbb
ret
xchg
pop
jge
adc
not
mov
(bad)
in
imul
hlt
jne
movs
(bad)
(bad)
dec
push
push
push
xchg
mov
sbb
imul
mov
mov
das
xor
jae
aaa
repz
mov
add
je
jbe
adc
and
retf
adc
and
jp
addr16
mov
int3
imul
aad
xchg
sbb
or
pusha
sbb
fwait
jl
mov
fs
(bad)
mov
sub
dec
loope
ret
out
rcl
loopne
or
fs
ins
jle
movs
push
sbb
popf
or
repnz
jecxz
pop
xchg
aad
ret
mov
test
and
imul
test
mov
sub
retf
les
sbb
in
addr16
jb
sbb
push
sbb
lods
and
je
lahf
xor
mov
add
fmul
and
(bad)
pop
sub
push
add
inc
test
mov
repz
add
jb
mov
cmp
cmp
icebp
xor
sbb
jns
xchg
xchg
leave
cs
pop
movs
cld
dec
dec
xor
and
fdiv
ss
clc
in
cli
adc
mov
xor
loop
cmps
int
pop
call
fld
test
push
push
cmps
sbb
in
cmp
test
mov
adc
mov
test
cmp
lahf
sub
pop
das
cmp
or
inc
jnp
into
in
sahf
bound
mov
jl
out
cmp
push
xchg
cmps
stc
xchg
call
call
out
bound
cwde
dec
xor
xchg
xor
outs
cmc
jo
fimul
or
test
and
ins
and
mov
faddp
aas
test
xor
inc
out
mov
add
xor
push
out
outs
rcr
ins
pop
call
push
xchg
cmp
cmp
add
jo
dec
sahf
jecxz
outs
mov
pop
xchg
popf
fucom
push
lahf
push
push
mov
(bad)
sub
bound
adc
cmc
test
mov
stos
inc
out
sar
jno
mov
push
adc
mov
in
mov
or
scas
dec
pop
adc
pop
inc
das
inc
into
sbb
mov
mov
es
push
xchg
push
ret
stc
cli
test
pop
arpl
pop
mov
arpl
test
fisttp
sub
xlat
pop
in
add
neg
call
add
pop
aas
fistp
stos
xchg
cmc
xor
retf
xor
int3
movs
inc
fcomip
popa
add
mov
lahf
xor
jmp
and
inc
add
xor
mov
add
gs
jbe
in
adc
and
jg
mov
arpl
add
sub
pop
mov
pop
push
rcl
out
dec
add
push
pop
fs
popf
mov
push
inc
sbb
xchg
into
xchg
mov
or
(bad)
rcl
mov
aam
out
(bad)
mov
sbb
add
shl
cdq
sbb
mov
jns
dec
push
sub
les
pop
xor
dec
mov
sbb
jb
mov
push
shr
mov
cmp
(bad)
cs
bnd
jb
xor
fidiv
cmp
test
xor
cmp
scas
xor
sbb
sbb
cmp
sub
and
leave
inc
repz
mov
in
arpl
sbb
adc
ss
dec
mov
pop
jl
(bad)
mov
movs
outs
imul
and
add
push
cmp
gs
xor
fidiv
sti
cld
push
xchg
sbb
mov
jl
push
sbb
loopne
inc
rol
mov
scas
jmp
mov
add
pop
cmps
cmp
push
cmc
mov
int3
icebp
cmp
jbe
movs
jo
fcom
mov
cmp
cmp
in
jo
(bad)
jmp
mov
sub
sbb
jp
aad
outs
cmps
xor
loope
shl
jle
cmps
sub
sub
not
mov
aam
aas
and
xor
pushf
pop
or
and
mov
push
out
cwde
xor
(bad)
adc
mov
or
add
jno
inc
popa
sub
pusha
jo
out
int3
mov
mov
jne
sbb
icebp
push
repnz
nop
sti
dec
mov
jle
fwait
scas
cs
das
inc
aam
push
mov
mov
jae
mov
scas
jnp
mov
test
pop
fsub
out
push
mov
ins
xor
or
dec
test
mov
imul
inc
mov
call
nop
aad
in
into
add
adc
jne
xchg
adc
out
mov
shr
ins
loope
xor
mov
dec
push
xadd
and
sar
out
jnp
shr
fisub
mov
(bad)
mov
lahf
dec
mov
xchg
cmp
movs
and
popa
enter
xchg
cli
xchg
cmp
(bad)
and
mov
stos
add
clc
lods
repz
push
cmp
xor
push
hlt
scas
div
and
mov
cmp
push
sub
pushf
jp
sbb
jl
and
cdq
xchg
in
jmp
test
iret
xchg
xchg
dec
xor
add
scas
push
into
int
gs
add
(bad)
or
loopne
shr
scas
sub
jae
test
fcomp
movs
mov
inc
dec
mov
fnstenv
jmp
fdivr
test
pop
les
mov
movs
push
shl
fwait
sbb
sub
shr
js
shl
sub
sbb
push
mov
mov
movs
out
test
call
pop
mov
js
enter
pushf
mov
inc
dec
pop
cmps
inc
or
mov
test
daa
dec
rcl
shl
shl
addr16
inc
adc
pop
iret
pop
add
or
dec
sbb
mov
test
dec
int
pusha
fiadd
push
fs
or
jnp
ficom
jns
daa
xchg
mov
lods
pop
imul
outs
iret
cdq
cdq
xlat
pop
ins
jae
xchg
cmp
fcomp
rol
fwait
mul
outs
in
call
jbe
cmps
and
dec
das
xchg
adc
sub
lock
jnp
add
sub
iret
sar
push
xchg
ret
jp
fiadd
in
stos
pop
pop
into
(bad)
mov
icebp
(bad)
inc
retf
(bad)
movs
fwait
pop
jo
lea
das
into
add
test
(bad)
adc
arpl
xor
loop
sub
inc
cmp
mov
xchg
inc
(bad)
jnp
jle
inc
push
loop
(bad)
call
ret
mov
cld
or
sbb
mov
cmc
aad
xchg
std
loop
cdq
push
ret
adc
hlt
pop
jge
push
push
pop
ins
inc
or
inc
and
movs
daa
out
push
out
or
push
mov
push
adc
xlat
lock
mov
and
xchg
mov
and
scas
in
push
repz
mov
mov
scas
out
lahf
push
add
xchg
mov
and
or
mov
daa
xor
sub
jns
sbb
ss
mov
jmp
cmp
or
stc
jg
icebp
scas
and
in
mov
mov
sbb
retf
adc
sahf
inc
mov
mov
out
jl
push
xchg
cmp
rol
cwde
js
mov
call
int
jns
and
mov
outs
push
mov
sbb
dec
sbb
cs
xchg
popa
jl
iret
pop
add
inc
or
fiadd
(bad)
and
mov
mov
(bad)
jnp
bnd
mov
inc
xchg
inc
adc
xor
or
fidivr
sti
ins
pop
mov
into
iret
ficom
dec
xor
sub
pop
icebp
jle
mov
adc
clc
call
inc
loopne
jae
cmp
xchg
shl
dec
sahf
mov
adc
or
in
outs
adc
fsubr
jle
inc
out
pop
shl
int
xor
or
inc
lods
jmp
ret
jl
add
mov
jb
push
and
add
dec
ins
jae
ins
jmp
std
shr
pop
sub
stos
adc
dec
inc
add
mov
das
je
aas
(bad)
loope
sti
add
mov
cmp
enter
imul
jmp
(bad)
fs
cmps
and
dec
loopne
fwait
mov
and
call
cmp
jmp
stc
dec
je
dec
sbb
clc
(bad)
add
pop
cli
sub
jno
into
jbe
test
jmp
loope
data16
ins
ja
cs
push
fimul
or
sub
pop
jmp
leave
and
jl
adc
xor
(bad)
fdiv
cmc
clc
jecxz
ss
dec
and
push
dec
cmps
and
jnp
rol
jmp
out
out
mov
sbb
add
arpl
es
jmp
sbb
pop
pop
cmp
and
xchg
sub
ja
scas
dec
sbb
or
jmp
fcmovnb
sub
pop
inc
shl
clc
xchg
clc
jl
pop
xchg
xchg
outs
cld
fwait
pop
aaa
xchg
push
shr
sub
adc
push
mov
das
dec
es
ret
mov
xchg
test
xor
xchg
sbb
mov
bound
cmc
and
mov
ja
xchg
jae
js
loopne
xchg
push
cmps
stos
pop
push
inc
sub
dec
pop
push
outs
adc
sub
out
mov
inc
sub
mov
ror
inc
mov
cmps
mov
jp
js
adc
imul
pop
add
gs
nop
into
mov
xchg
xlat
fild
aad
addr16
sub
jno
fisub
aam
jecxz
adc
mov
xchg
xchg
call
cmps
and
xchg
outs
out
sbb
cdq
jle
sbb
cdq
cmp
repnz
xlat
jns
ins
mov
push
xchg
xor
mov
outs
push
mov
enter
and
imul
pusha
sar
loopne
test
sub
jmp
int
adc
adc
test
test
push
movs
fs
lahf
and
add
int3
jns
out
ds
or
arpl
in
push
or
dec
stc
push
add
push
imul
jbe
sub
inc
inc
adc
cmp
lods
or
pushf
xchg
nop
xchg
retf
rcl
loop
rcl
add
mov
cmps
sbb
or
sbb
or
sbb
cmp
inc
stos
and
pop
jbe
inc
inc
xor
outs
sub
out
scas
js
fwait
cmp
popf
pop
fwait
push
popa
jmp
mov
pop
inc
adc
(bad)
mov
ret
out
jae
inc
xor
test
sub
mov
and
jo
jbe
mov
jns
outs
inc
sub
aas
push
pushf
lods
xor
xchg
xchg
shr
inc
dec
aam
(bad)
stos
out
add
hlt
mov
mov
mov
mov
mov
or
call
xor
clc
dec
mov
mov
add
xchg
mov
pop
and
ret
mov
and
push
sub
cmps
add
ss
mov
mov
mov
mov
(bad)
cli
jb
mov
mov
xlat
test
daa
shr
xchg
mov
mov
mov
rcr
(bad)
push
pop
cmp
mov
mov
mov
add
adc
and
fcmovne
adc
xchg
dec
xor
cdq
sbb
stc
dec
dec
retf
jb
outs
mov
mul
leave
dec
int
xchg
push
mov
xchg
and
fs
push
daa
add
mov
pop
(bad)
fstp
fbld
or
jp
(bad)
cmps
or
icebp
out
pop
dec
in
pop
leave
mov
mov
add
fwait
adc
xchg
sbb
cmp
jmp
xor
xchg
mov
bound
dec
push
dec
and
or
inc
int3
add
ja
dec
jmp
fmul
sub
mov
lock
push
cmp
fwait
repnz
aas
jns
stos
jo
into
iret
mov
mov
push
pop
add
xchg
and
inc
fsub
push
std
aad
lea
adc
mov
inc
out
movs
fsub
jnp
cmps
imul
jns
xchg
jg
pop
add
cmp
and
cld
loopne
jns
pop
aaa
retf
pop
pop
in
or
or
test
mov
push
cdq
and
dec
cwde
test
ins
pop
dec
jg
dec
pop
add
mov
adc
cmp
fs
(bad)
iret
dec
and
sbb
lock
dec
dec
sbb
cmps
stc
mov
into
sbb
or
adc
or
jb
call
add
into
jge
adc
or
repz
and
and
push
(bad)
sub
and
jp
lds
test
(bad)
cs
mov
std
add
jnp
(bad)
push
mov
jmp
sbb
call
ins
gs
lahf
xlat
cmp
push
or
pop
jno
outs
add
pop
es
icebp
pop
mov
mov
mov
stos
xchg
and
pop
pop
sar
dec
add
inc
sub
and
mov
jo
ja
std
add
jns
jg
add
repz
cmp
fs
or
push
movs
cmp
sub
push
cmp
leave
shl
or
or
out
xor
inc
loopne
or
lods
add
(bad)
(bad)
jo
(bad)
jg
add
std
pop
mov
int3
loopne
out
lds
cli
pop
mov
pop
imul
stc
fucom
inc
test
add
mov
popw
sbb
dec
stos
(bad)
sbb
rcr
pushf
cdq
aam
jmp
xchg
sbb
mov
ins
push
mov
dec
inc
popa
mov
push
test
jns
js
inc
push
jnp
mov
dec
dec
sahf
jmp
shr
js
jb
fimul
(bad)
aaa
movs
(bad)
test
in
imul
jl
les
repz
sbb
pop
adc
cmp
inc
or
inc
sub
iret
sub
lods
xor
jp
fmulp
das
mov
sub
xor
(bad)
adc
or
and
cmp
jle
int
pop
jo
xchg
sar
or
pushf
inc
clc
ret
sbb
jp
dec
mov
jbe
jo
jge
sub
fild
cmp
pop
and
nop
aaa
rcr
pop
sub
int3
ja
mov
sub
xchg
xchg
popf
retf
pop
fimul
push
push
inc
mov
out
ror
mov
out
test
sbb
push
mov
bound
cdq
fmul
or
adc
xchg
call
rol
jns
dec
inc
cmc
cwde
mov
and
dec
and
or
or
scas
cmp
and
or
xchg
dec
hlt
call
in
out
sub
(bad)
in
push
add
xchg
pop
pop
push
pushf
pop
mov
mov
call
test
cld
jb
mov
add
clc
mov
jnp
pop
loop
pop
popf
add
cld
jp
fldenv
mov
jns
mov
inc
fstp
leave
call
and
pop
out
mov
enter
cmp
shl
lds
inc
imul
mov
in
sbb
aam
jo
xlat
inc
xchg
data16
adc
aas
cmp
jns
cld
jae
scas
in
mov
inc
clc
and
test
sub
lahf
jl
jp
xor
cmps
mov
imul
push
or
in
mov
mov
mov
push
jmp
cdq
test
cdq
in
ret
mov
pop
push
les
ret
mov
data16
cmp
jge
add
fwait
or
dec
cmp
jmp
jmp
call
enter
ja
mov
pusha
leave
sbb
inc
lea
fwait
jo
adc
jno
pop
ds
sbb
fwait
mov
(bad)
lods
in
xchg
and
mov
dec
mov
clc
fisubr
and
xchg
mov
loopne
call
gs
scas
test
lea
aam
jnp
out
sahf
in
inc
mov
(bad)
call
stos
dec
div
jmp
mov
sub
mov
or
cld
psubw
das
jae
add
stos
jnp
and
or
in
add
jmp
dec
out
jne
push
and
adc
std
and
outs
leave
retf
adc
sbb
stos
and
mov
nop
pop
repz
dec
pusha
enter
rol
and
sbb
cmp
xor
leave
mov
test
dec
xchg
and
mov
pushf
mov
mov
lock
adc
xor
in
imul
test
lea
pusha
aad
cmp
dec
xor
xchg
(bad)
in
mov
jb
mov
aas
xor
inc
arpl
aad
mov
push
pop
pop
inc
(bad)
ficomp
jnp
xchg
mov
js
jns
xor
and
sbb
jmp
jmp
shr
mov
fcom
xchg
int3
aaa
hlt
loopne
sub
push
mov
in
mov
inc
mov
adc
push
add
ja
sub
bound
sbb
sahf
sub
sbb
ds
mov
mov
xchg
cs
cmp
(bad)
pop
xchg
sahf
pop
shr
push
aaa
xchg
sbb
cld
pop
es
retf
cmp
mov
(bad)
cmp
int3
pop
(bad)
cmc
mov
xchg
adc
les
cmc
sub
sbb
jno
cmps
in
push
out
xchg
stos
scas
or
sub
dec
push
stc
push
pop
js
sub
sbb
mov
lea
sub
and
stos
ins
xchg
xchg
(bad)
out
outs
mov
inc
lods
adc
jge
fimul
push
sub
je
mov
sbb
je
jge
sbb
(bad)
cli
dec
pop
cmp
pop
ins
inc
add
sahf
xlat
nop
(bad)
fstp
aad
call
jl
pop
ja
fdivr
fisubr
repnz
lds
push
and
mov
fimul
leave
mov
nop
mov
dec
(bad)
cli
jb
mov
pop
xchg
jmp
mov
dec
cvttps2pi
push
jnp
lea
sbb
push
pop
lahf
int
adc
jno
pop
and
sahf
jge
inc
loop
in
jnp
sub
call
xor
pop
ja
cmp
cmp
add
addr16
sbb
adc
pop
cmps
or
sti
in
pushf
aas
pop
sar
repz
inc
scas
adc
xchg
xor
mov
neg
mov
mov
adc
aad
inc
cmp
jecxz
retf
dec
mov
adc
scas
xchg
dec
stos
adc
xor
mov
jns
popa
icebp
cwde
xor
cmp
xchg
and
push
fs
out
xor
jmp
ja
cmp
jns
jno
js
outs
aad
push
fist
rol
push
jle
cmp
stc
sbb
jg
sar
jecxz
sbb
aas
je
mov
sbb
out
and
adc
dec
in
call
outs
js
sbb
fwait
int3
pop
mov
popf
repnz
scas
push
push
xlat
cwde
push
sbb
mov
into
adc
and
cmp
addr16
mov
ds
loopne
scas
mov
sub
ins
fidivr
xor
inc
and
rcr
cwde
push
or
movs
ja
sar
shl
add
dec
fwait
adc
xor
adc
push
mov
dec
lahf
call
jae
pop
enter
mov
inc
(bad)
lock
mov
sbb
(bad)
out
movs
retf
xchg
xor
jg
mov
fcompp
into
pop
aad
pop
and
movs
and
cld
pop
inc
xor
push
mov
push
inc
adc
pop
(bad)
int
xlat
add
loope
push
inc
hlt
and
repz
inc
fsub
jg
es
ret
shl
mov
je
frstor
push
arpl
mov
or
and
mov
outs
dec
and
cmps
xchg
jmp
popf
push
and
lods
fldcw
pusha
sbb
jae
femms
sbb
ins
pop
stc
(bad)
(bad)
fld
aad
(bad)
pushf
gs
dec
test
pop
jno
pop
adc
and
xchg
pop
mov
cmc
stos
outs
mov
scas
sti
aad
in
or
es
adc
add
test
scas
xor
das
push
sub
pop
dec
sub
loope
push
push
stos
inc
sub
inc
popa
cmp
sub
movs
test
mov
push
cmp
imul
repz
test
test
push
and
adc
adc
fsubr
cmc
rcr
mov
stos
xor
fild
bnd
push
add
or
and
in
add
xchg
jne
popa
xchg
sahf
adc
out
test
test
jne
daa
and
adc
dec
movs
popf
(bad)
(bad)
(bad)
pop
sbb
push
test
or
push
cmp
mov
push
bound
popa
cmp
mov
sbb
pop
jbe
cmp
pop
bound
add
push
repz
jb
rcr
mov
sbb
daa
push
cli
sub
movs
(bad)
mov
sbb
(bad)
mov
and
dec
clc
xchg
or
xor
sub
xor
int3
ret
movs
movs
sub
or
pusha
cwde
adc
cs
repz
push
and
jg
or
cwde
mov
je
cli
xchg
mov
div
push
sub
fadd
inc
pop
or
out
adc
ret
pop
add
call
mov
push
loopne
mov
mov
jecxz
mov
jno
retf
pop
push
movs
ds
es
ror
push
push
pop
add
jns
data16
add
adc
and
mov
(bad)
fs
test
test
lods
jne
aaa
mov
aas
jns
push
sub
adc
push
dec
jmp
jae
test
test
jl
sar
pusha
std
repz
sar
pushf
cmps
fcom
(bad)
std
push
std
pop
mov
sbb
aad
pop
push
fs
in
mov
and
dec
(bad)
push
stc
mov
call
cli
loop
xor
jo
and
rcr
ins
fdiv
mov
inc
cdq
not
dec
jl
xchg
ffreep
test
pop
xchg
outs
loope
shl
mov
scas
repnz
cmc
push
jns
dec
mov
fisttp
in
dec
cmc
gs
inc
jmp
jo
gs
out
stos
mov
neg
adc
xchg
sar
ret
popf
or
mov
out
adc
xor
adc
in
or
mov
jb
fwait
pop
imul
dec
ins
cdq
test
in
repz
jnp
cmp
pop
mov
mov
hlt
sar
or
or
jo
dec
cmp
mov
mov
test
addr16
sub
inc
xor
aam
jno
jnp
mov
add
shl
jbe
fsub
pop
mov
cmp
lds
test
jmp
add
pop
retf
data16
jno
pop
jno
out
sahf
push
idiv
mov
sub
push
dec
ss
mov
(bad)
popf
inc
aad
ret
popf
or
dec
add
mov
inc
xor
cmp
ins
emms
lea
arpl
pop
adc
add
aad
outs
lods
adc
push
mov
sahf
cmp
retf
aad
mov
movs
jmp
mov
loope
jle
ss
fdiv
jno
jmp
outs
push
das
(bad)
dec
test
out
nop
mov
rol
cmc
jb
call
ins
hlt
or
add
fild
cmp
sahf
push
leave
dec
nop
mov
add
iret
and
idiv
repnz
xor
bound
push
mov
scas
xor
in
into
ficom
icebp
aas
cmp
adc
scas
out
jo
dec
jae
inc
inc
cmc
sub
mov
fdivr
cmps
test
mov
add
mov
std
adc
dec
retf
mov
fld
pop
xor
stc
popa
ret
and
mul
neg
adc
add
mov
sti
or
mov
or
arpl
shr
in
arpl
and
adc
gs
les
lods
(bad)
sbb
pop
bound
shl
sub
or
aas
jmp
fsub
fs
std
(bad)
inc
fild
inc
add
out
es
lods
cmp
rol
pop
dec
add
repz
cmp
dec
out
fild
xchg
adc
das
addr16
fst
iret
inc
cmp
out
xchg
mov
cmp
call
fdivr
add
cmp
(bad)
cli
dec
in
cmp
sub
das
mov
add
or
out
test
dec
fwait
data16
inc
std
push
xchg
xor
push
push
inc
iret
cdq
aaa
hlt
enter
or
popf
out
pushf
(bad)
outs
or
and
dec
nop
shl
in
and
mov
mov
ins
imul
ds
cmp
call
xchg
dec
repnz
add
fs
push
xor
enter
add
add
dec
ins
add
jmp
loopne
rcl
pop
or
rcl
cld
mov
xor
call
mov
jmp
nop
stos
pushf
test
mov
call
sar
stc
sar
repz
movs
test
inc
add
sub
dec
adc
cdq
dec
xor
addr16
sbb
jno
lea
dec
scas
add
dec
pop
leave
inc
mov
cli
fs
fdiv
jmp
inc
adc
cs
daa
xor
mov
pop
pop
in
shr
jmp
mov
mov
sbb
cwde
jae
and
cmc
xchg
ror
dec
int
jl
jns
mov
bound
inc
cmp
mov
inc
dec
outs
inc
inc
mov
les
push
int
shl
or
jmp
inc
fadd
aad
lahf
adc
lock
pop
push
mov
dec
jbe
clc
sub
cmp
jne
and
push
mov
in
icebp
inc
adc
daa
xchg
lods
fmulp
sbb
setne
cmps
or
pop
lods
dec
push
pop
out
test
sub
js
imul
jbe
mov
in
push
dec
packuswb
in
mov
sub
or
cmps
outs
leave
les
inc
in
in
add
call
rol
sar
aas
push
in
fadd
outs
mov
into
dec
pop
inc
popa
sub
aaa
push
cmp
push
popf
and
loope
cmp
pop
jo
retf
push
jae
jl
jp
cli
push
lods
cli
adc
les
inc
inc
ret
mov
mov
cmp
or
push
inc
mov
out
xchg
dec
lahf
je
xchg
mov
in
pop
inc
(bad)
sbb
pop
mov
test
jbe
jae
pop
mov
ja
push
dec
fmul
test
dec
popa
cmp
adc
xchg
mov
in
jno
in
inc
lods
dec
jg
test
add
(bad)
jnp
pop
mov
loop
and
pop
and
mov
stos
bound
hlt
aas
push
fst
mov
mov
cli
fdiv
xor
les
dec
xchg
movaps
stos
xchg
xor
int3
(bad)
pop
xlat
pop
pop
pusha
pushf
ins
cdq
xor
popa
(bad)
ja
push
xor
imul
das
(bad)
xor
(bad)
or
fcmovne
cmp
pop
retf
ins
clc
mov
adc
in
test
das
cdq
sbb
pop
icebp
(bad)
nop
mov
and
mov
addr16
iret
in
push
retf
sub
scas
jnp
pop
ins
outs
rol
mov
mov
call
repz
or
push
popa
mov
mov
imul
jo
mov
and
fld
aam
pop
sub
js
mov
aas
lds
stc
ret
fdiv
in
mov
fcmovnu
inc
inc
gs
add
repz
mov
sar
cmps
jae
mov
inc
dec
jl
xlat
dec
loopne
ret
call
fucomi
std
mov
std
ins
popa
(bad)
mov
mov
int3
out
xchg
mov
jmp
jl
(bad)
xor
jmp
(bad)
cs
js
loopne
stos
cmp
push
mov
xchg
iret
clc
pop
lds
xor
arpl
je
mov
sbb
mov
or
jle
inc
sbb
adc
loope
jle
inc
mov
sbb
leave
sub
or
rep
stc
mov
fdiv
(bad)
lahf
pop
xchg
pop
inc
in
imul
test
loopne
daa
xchg
imul
stos
test
sub
loop
push
aaa
imul
pop
mov
out
ret
jo
aaa
pusha
pop
aad
xor
jge
mov
(bad)
sbb
scas
pop
ja
repnz
mov
mul
in
fwait
stos
dec
add
or
pop
std
fiadd
popa
stos
loopne
lods
xchg
test
sti
xchg
or
sub
dec
xor
sahf
mov
inc
test
sbb
pusha
pop
mov
inc
mov
mov
in
sub
js
out
jmp
pop
stos
mov
pop
cld
leave
pop
inc
fst
adc
jge
in
sub
mov
cmp
jmp
xor
out
ins
test
and
jbe
jp
xchg
shl
dec
push
mov
push
(bad)
lds
add
test
loope
loopne
and
dec
cmp
jno
inc
mov
dec
ret
dec
add
xchg
gs
adc
fdiv
xor
je
add
call
push
pop
ror
and
jns
clc
imul
cld
fcomp
inc
xor
push
dec
push
adc
test
dec
nop
ja
data16
mov
or
and
mov
scas
sub
aas
cmp
int3
cld
xlat
jns
xchg
push
xor
std
mov
pop
loop
mov
jp
iret
mov
sub
dec
dec
fsub
outs
mov
out
jle
push
jg
xor
pop
loope
xchg
dec
mov
popa
jmp
mov
or
adc
popf
mov
sub
and
lock
jno
cmp
mov
fwait
test
clc
sbb
gs
in
jbe
mov
xchg
shl
imul
pop
pop
cwde
std
dec
cdq
dec
push
cli
(bad)
cmp
push
jmp
push
add
cmp
test
outs
repz
int3
pop
sbb
sbb
adc
xchg
add
ja
out
outs
cmps
das
sub
loopne
test
ins
jl
inc
aaa
jae
xor
pop
inc
sub
test
add
push
outs
mov
xor
mov
xchg
out
cmp
jmp
mov
jle
dec
xchg
cmpps
dec
fadd
outs
(bad)
mov
(bad)
adc
stos
inc
or
cmp
std
imul
mov
es
inc
fiadd
mov
sbb
(bad)
ret
stos
sbb
xor
pop
add
jae
mul
scas
das
ins
cmp
mov
pop
popa
aad
js
outs
imul
jo
mov
cmp
add
sbb
xor
test
xchg
sbb
ret
imul
or
adc
cs
or
xor
call
je
sar
inc
in
js
pop
xchg
stos
jb
xchg
cdq
jle
xchg
mov
scas
jge
popa
inc
push
pop
sbb
push
in
jnp
iret
cdq
in
js
inc
pop
in
jmp
sbb
sbb
mov
xchg
add
mov
fisttp
adc
popa
(bad)
fucomi
sbb
fwait
dec
jge
daa
push
adc
sub
inc
je
add
sti
sbb
outs
ret
das
add
mov
icebp
mov
xchg
and
dec
in
sub
ja
push
pop
imul
jae
add
shr
and
push
jb
jo
outs
leave
daa
add
in
cwde
and
dec
push
int
and
mov
out
adc
cmp
push
sbb
popf
test
div
push
xchg
mov
call
mov
jnp
ficomp
sti
or
jg
push
jns
xchg
sar
bound
mov
mov
popf
adc
pop
cmc
js
shr
pop
in
ret
ror
ss
jno
inc
mov
idiv
or
pop
fsubr
fsub
ror
imul
inc
scas
xchg
jne
xchg
pop
cmp
test
mov
cmp
xchg
lock
mov
outs
pop
pop
adc
test
lods
adc
inc
daa
stc
mov
cmp
push
cmps
fmul
retf
fld
je
sbb
xchg
pop
pop
mov
in
mov
outs
aas
xor
repnz
adc
pushf
or
jmp
aaa
inc
popf
clc
je
sub
nop
mov
shr
aam
mov
lea
mov
add
jl
or
xchg
mov
adc
push
inc
mov
hlt
jmp
sub
push
in
mov
or
fld
sahf
adc
pop
push
call
mov
test
jo
pop
mov
xor
adc
adc
aas
and
pop
repnz
push
and
jle
aaa
jge
outs
imul
addr16
movs
pop
cdq
(bad)
pop
pop
inc
test
mov
cli
pop
sbb
lods
mov
sub
sahf
xchg
in
push
push
fprem1
cmps
sub
lods
mov
or
xor
inc
mov
mov
and
sbb
aas
inc
dec
jl
push
clc
jecxz
call
cmp
xor
lahf
cli
fdivp
sub
lea
xor
xchg
loop
lahf
cmp
imul
xchg
call
cwde
fs
mov
fild
push
ss
jo
mov
push
cmp
jmp
js
adc
sbb
test
rcr
(bad)
push
fwait
sbb
rcr
(bad)
mov
jne
push
xchg
push
adc
pushf
arpl
movs
or
dec
jmp
retf
(bad)
out
fisubr
cmp
in
mov
jecxz
test
fs
test
xchg
rol
icebp
push
push
pop
and
jmp
dec
jge
sti
pusha
enter
pop
jns
aaa
dec
mov
fwait
icebp
inc
add
cmp
mov
sbb
(bad)
into
cmp
cmp
cwde
xor
pop
int
rol
inc
and
mov
pop
pushf
ret
mov
aad
mov
pop
mov
daa
sub
out
test
ror
cwde
leave
mov
inc
popf
pop
mov
xchg
das
pop
bound
movs
xchg
xor
mov
mov
scas
movs
mov
mov
xchg
dec
sub
out
and
mov
sbb
rcr
scas
jecxz
jbe
aam
gs
xor
ret
pushf
jne
out
fst
pop
pop
push
dec
leave
inc
pop
mov
(bad)
sbb
ret
jmp
test
shr
mov
xor
in
(bad)
sub
cmp
test
or
out
ret
dec
std
pop
xchg
inc
lds
jb
xchg
push
and
jno
das
loopne
loop
push
cmp
sub
jg
cmps
mov
xor
xchg
or
ret
fstp
iret
lods
dec
adc
sar
sub
xor
sub
add
xchg
push
test
cmp
pop
and
pushf
loope
repz
retf
jnp
dec
jmp
int3
lahf
icebp
(bad)
cmp
cs
inc
inc
add
sbb
or
fwait
cld
shl
int
data16
push
sub
and
and
inc
mov
inc
jae
inc
mov
add
dec
pop
fcomp
aaa
(bad)
hlt
ds
sub
movs
cwde
je
jne
inc
lods
int
stos
mov
inc
xor
sbb
inc
mov
hlt
push
sti
push
sti
lea
fs
cmps
call
shl
ret
or
das
imul
cli
dec
and
dec
les
mov
bound
or
sahf
mov
xchg
hlt
mov
cmp
cmc
dec
add
fcmove
and
xor
setnp
xchg
imul
loopne
call
mov
xchg
retf
sbb
jae
cli
faddp
sbb
hlt
fcom
test
xchg
inc
loopne
in
or
lahf
inc
int
adc
inc
jns
lods
loop
cmp
nop
test
mov
cmp
jb
jp
ja
fnstcw
nop
and
mov
cmp
and
xor
jp
shl
inc
mov
and
mov
inc
xor
call
cmp
cmp
push
nop
inc
jmp
or
iret
daa
int
add
push
ins
jo
push
cmp
xchg
pop
mov
lahf
ret
add
cmp
addr16
js
(bad)
and
stos
dec
retf
xor
es
ret
imul
arpl
out
ret
mov
call
enter
xor
xor
or
mov
dec
addr16
mov
daa
and
imul
mov
push
mov
push
jns
mov
(bad)
push
fiadd
mov
jmp
and
and
fadd
mov
jle
jecxz
mov
lock
loopne
repz
pop
lods
mov
and
xchg
dec
pop
sbb
xchg
mov
retf
add
jbe
int3
xor
test
sub
stc
push
dec
pop
mov
cld
xchg
sti
test
das
xchg
jl
and
push
mov
int3
lods
stos
repnz
push
xor
xchg
mov
(bad)
mov
inc
sbb
cmp
cs
loopne
lock
cmp
or
adc
pop
mov
vrsqrtss
sti
pop
xor
mov
loopne
out
mov
add
pop
shl
movs
xor
xchg
mov
xchg
mov
sbb
jo
and
add
jb
sbb
imul
mov
push
xchg
imul
inc
lock
pop
mov
pop
fs
mov
cld
or
ss
push
call
and
rol
adc
out
imul
xchg
mov
xor
and
je
fcomi
xchg
add
add
(bad)
das
shl
add
test
push
cli
sti
out
push
pop
cmp
add
xor
push
push
ds
xchg
lds
sar
xchg
jmp
mov
push
xchg
in
fnsave
push
xchg
out
aad
test
cmc
push
(bad)
mov
bswap
fisubr
fdiv
in
inc
pop
icebp
sar
gs
int
cld
(bad)
and
add
cmp
test
and
add
(bad)
out
popa
mov
xor
vmovsd
adc
jp
adc
or
or
out
mov
push
jmp
mov
mov
test
mov
(bad)
bound
jecxz
loop
lahf
ins
stc
loop
pop
mov
fstp
push
add
lods
scas
cdq
fs
fst
xor
adc
xor
in
inc
dec
pop
fs
lods
out
lahf
xchg
les
xchg
adc
xor
movs
and
add
call
loopne
outs
push
mov
mov
mov
loop
je
(bad)
mov
dec
sub
mov
cmps
ret
lahf
outs
push
out
leave
test
mov
adc
or
push
jo
push
push
ret
push
out
in
xchg
dec
in
jb
xor
loope
rcl
push
std
mov
push
adc
mov
(bad)
in
arpl
dec
push
imul
inc
jecxz
mov
mov
es
pop
lods
pop
(bad)
lods
movs
sub
int
xor
retf
cmp
jae
arpl
push
gs
and
jne
sti
xlat
xor
and
out
dec
packuswb
(bad)
adc
jmp
pop
jmp
dec
xor
mov
pushf
xchg
inc
mov
and
ret
and
repnz
push
je
mov
leave
subps
cli
std
sub
mov
push
pop
aas
sbb
adc
test
push
sbb
push
rol
jecxz
rol
sbb
pop
(bad)
adc
xchg
xchg
lock
movs
pop
jmp
mov
mov
out
ss
jno
or
push
dec
loopne
mov
out
loope
fist
ror
rol
xor
sbb
sbb
push
pop
(bad)
cmp
push
and
out
pop
sub
out
fistp
hlt
pop
mov
pop
push
dec
neg
xor
daa
loope
push
mov
fiadd
nop
mov
xchg
sub
xchg
out
adc
adc
outs
fstp
and
call
retf
xor
jge
mov
out
jns
loope
inc
ror
adc
(bad)
(bad)
arpl
push
dec
lahf
and
hlt
and
je
jno
out
pushf
push
scas
push
fnstcw
repz
cmp
jl
push
cmp
mov
not
ja
adc
xor
or
pushf
jp
add
mov
xlat
fxch
movs
(bad)
jge
add
mov
arpl
retf
leave
(bad)
cld
jge
mov
loope
fwait
inc
adc
retf
push
movlps
cmps
lahf
aad
mov
and
mov
and
(bad)
pop
or
and
enter
enter
inc
addr16
add
mov
or
push
lahf
push
inc
in
je
sbb
xor
rcl
dec
lds
cmp
cmps
aam
stos
xor
or
jp
(bad)
stc
js
repnz
pop
mov
jge
dec
cdq
test
or
or
fnstsw
push
sbb
adc
icebp
in
adc
scas
ror
add
xor
dec
scas
add
mov
jmp
dec
sub
std
jmp
xor
xchg
(bad)
outs
push
retf
lock
aad
sbb
int3
pop
in
mov
sti
out
sub
es
and
mov
fnstsw
and
pop
dec
adc
xchg
jbe
sub
pop
out
push
adc
je
xor
(bad)
push
cli
jns
and
rol
imul
les
jmp
rcl
aad
xchg
xor
xchg
pop
aaa
jecxz
out
xor
add
in
dec
stos
enter
ret
test
test
stc
arpl
xchg
inc
add
cmp
imul
push
movntq
add
push
cmp
push
cmc
xor
std
les
in
retf
(bad)
retf
mov
mov
bound
in
mov
cmp
dec
sub
sub
push
dec
movs
cmp
sub
fmul
mov
(bad)
into
outs
rcr
or
(bad)
xchg
dec
iret
or
and
pop
pop
sbb
and
movs
enter
repnz
or
pop
in
loop
cmp
movs
adc
or
daa
imul
mov
es
test
lock
adc
or
repnz
std
mov
jecxz
or
out
es
fadd
mov
inc
int3
inc
sub
push
mov
mov
inc
pop
sub
das
cld
(bad)
je
mov
xor
jp
sti
inc
sbb
shr
aad
mov
sub
je
test
les
xchg
out
cmovo
sub
cmp
mov
aaa
outs
dec
cmp
enter
cmp
movs
or
xor
mov
jecxz
fisttp
mov
stc
cmp
pop
movs
fwait
sub
mov
dec
(bad)
and
(bad)
pop
and
xor
mov
and
shl
test
sub
mov
sbb
enter
sti
push
pop
push
std
mov
cdq
mov
push
icebp
imul
inc
inc
adc
sub
mul
xchg
pusha
jmp
and
push
sub
rol
test
dec
or
mov
sbb
dec
and
out
or
jg
into
daa
xor
jecxz
xchg
lods
imul
hlt
mov
cmps
cdq
lock
movs
popf
popf
rcl
cdq
cld
push
cmp
adc
sub
push
jmp
or
div
mov
dec
(bad)
xchg
push
scas
je
sbb
mov
lea
xchg
push
neg
ror
not
(bad)
sbb
jae
or
jecxz
das
mov
sub
fadd
out
cld
pop
dec
pushf
js
sub
retf
push
xor
retf
pop
fnsave
or
xchg
mov
enter
jl
mov
add
jg
sbb
aad
in
mov
mov
xchg
or
xor
and
loop
jl
mov
jmp
adc
pop
xchg
mov
pop
scas
jmp
addr16
jne
pop
xor
stos
cwde
cs
xor
fadd
and
pop
mov
adc
lds
into
test
jge
out
popf
inc
sbb
fcmove
push
scas
dec
cwde
aam
mov
push
in
xor
pop
fist
shl
and
out
(bad)
out
imul
mov
and
add
xlat
jnp
fsub
cdq
pop
push
xor
mov
mov
out
lock
pusha
mov
lods
in
cmp
bound
(bad)
movs
not
dec
loop
fbld
or
mov
add
xor
add
stc
mov
jnp
sbb
jl
dec
jne
aas
retf
sahf
or
add
mov
jmp
(bad)
pop
mov
retf
push
adc
les
fnstenv
mov
repz
les
out
sbb
cdq
jae
cmp
pop
pusha
and
pop
and
jg
inc
jb
das
mov
ja
sub
iret
jge
shr
add
jmp
hlt
sub
xlat
push
push
arpl
adc
(bad)
and
outs
push
test
in
gs
mov
mov
pop
pop
scas
add
shl
sbb
adc
push
xor
(bad)
mov
jb
lock
xchg
stos
cs
push
mov
(bad)
das
ror
pop
lea
fiadd
lahf
loopne
fwait
nop
jle
test
or
xor
scas
out
adc
fisttp
pop
push
in
or
jne
xor
adc
shl
mov
push
mov
jnp
(bad)
out
aam
or
dec
pop
in
mov
(bad)
and
dec
or
mov
mov
sub
push
imul
(bad)
js
sub
inc
in
test
ja
mov
loop
jmpw
std
mov
(bad)
lods
mov
ins
and
iret
mov
repz
cli
mov
rcl
add
pop
mov
xchg
(bad)
dec
mov
scas
sbb
adc
leave
push
xor
cli
jo
sbb
xor
add
adc
(bad)
addr16
and
pop
dec
jno
mul
cmc
or
inc
pop
scas
push
out
adc
pushf
in
or
or
add
shr
inc
or
and
retf
les
repnz
dec
inc
and
add
out
mov
daa
mov
sub
xor
fcom
and
movs
pop
stos
es
xor
cmps
dec
mov
push
inc
imul
sbb
xor
shl
sub
push
push
add
sub
sar
int
add
jno
(bad)
fadd
push
push
and
and
lds
jne
add
aaa
sahf
xor
out
or
popa
xchg
imul
movs
aas
enter
(bad)
mov
push
popf
sub
xchg
mov
enter
in
adc
pop
xchg
sbb
inc
and
push
(bad)
jecxz
dec
push
jne
repnz
jge
xchg
sti
push
mov
add
cmp
jbe
pop
data16
inc
jg
nop
sbb
push
rol
scas
ss
mov
ror
adc
loope
retf
fiadd
cwde
fisub
xchg
and
(bad)
cmps
xor
or
int3
push
mov
in
lds
add
xchg
in
dec
jnp
retf
(bad)
outs
scas
inc
cmp
inc
outs
jmp
sbb
jnp
or
push
sub
mov
ret
lahf
pop
sub
cld
adc
loopne
xchg
mov
jmp
push
std
test
loopne
adc
pusha
pop
lods
cdq
movs
xchg
sbb
push
xchg
neg
cwde
sub
cld
jb
(bad)
adc
fdiv
pop
daa
xor
xlat
jb
cmc
pop
cmp
ins
scas
mov
inc
jmp
daa
test
lods
and
pop
adc
repnz
lods
fwait
pusha
or
sub
(bad)
xor
mov
adc
xor
mov
or
loop
and
sahf
jnp
retf
sub
jmp
mov
lods
mov
sar
shl
mov
and
int
inc
push
mov
mov
std
mov
sub
movs
adc
int
int
xchg
xor
dec
scas
xlat
xchg
push
or
cld
mov
loopne
cs
shl
add
sbb
cmp
data16
ins
rcr
cs
pop
push
cmp
xchg
adc
pop
sar
or
pushfw
mov
into
fs
adc
jne
push
or
add
add
lock
rol
adc
ficomp
in
int3
inc
or
aaa
sub
xadd
aaa
mul
add
cmp
pop
les
sbb
adc
pop
daa
xor
inc
pop
ss
lock
jp
aad
aas
xchg
cmp
aas
dec
jmp
xor
inc
dec
add
or
adc
stos
cli
loope
imul
jecxz
test
push
dec
add
mov
mov
je
inc
pop
mov
out
inc
push
push
aas
in
lods
fwait
mov
mov
call
xchg
mov
inc
in
sti
add
sbb
sbb
xchg
ds
std
xor
cmp
aaa
ja
adc
mov
mov
jl
pop
mov
jmp
add
and
outs
jg
cmps
jae
shl
fstp
(bad)
ins
fwait
(bad)
jae
cmp
sub
cdq
mov
add
jmp
jno
aaa
test
jp
sar
mov
int
mov
ja
ds
mov
push
jne
in
add
scas
test
popa
dec
ror
add
jnp
fdivr
mov
cmp
addr16
xor
int
sub
lahf
push
outs
sbb
es
cdq
js
lock
mov
aad
out
std
(bad)
pop
lahf
add
out
mov
mov
sbb
idiv
aaa
bound
mov
pop
push
test
addr16
dec
mov
push
lock
lds
sbb
ds
add
push
leave
(bad)
sbb
sub
rcr
pop
stos
imul
rol
fs
mov
mov
add
rcl
pushf
pop
pop
push
lods
pop
pop
fs
inc
add
and
in
fdivr
ror
fwait
fs
repnz
in
call
les
cmps
sti
mov
fst
ja
sub
pop
xor
pop
enter
jns
out
imul
xor
mov
jne
stos
push
push
lea
mov
stc
wrmsr
jns
inc
pop
adc
repnz
pop
not
je
sub
int3
mov
leave
push
push
or
hlt
pop
jl
xchg
call
cs
xchg
(bad)
xor
(bad)
jo
inc
(bad)
xor
inc
jl
cmp
jecxz
scas
cmp
test
enter
xchg
js
out
lock
popa
stos
std
xor
mov
es
jge
jno
pop
xor
jecxz
or
retf
jno
lahf
push
test
into
cmp
xchg
sbb
aaa
push
pop
pop
cmp
mov
call
mov
retf
push
dec
clc
jecxz
add
push
cld
call
xor
pop
or
push
mov
lods
nop
dec
xor
mov
push
mov
jns
ss
sbb
fisttp
sbb
ins
lods
enter
lods
mov
cmp
dec
pop
push
pop
cmp
(bad)
jge
push
in
mov
les
ffree
loope
sub
mov
and
mov
std
pop
mov
pop
fwait
call
inc
xchg
(bad)
jmp
pop
xlat
sar
jae
inc
push
shl
je
push
mov
jecxz
fwait
pop
sub
or
cmps
cmp
nop
je
into
bswap
pop
idiv
loop
in
icebp
fcomp
sub
cmps
int
in
jns
sub
inc
lea
inc
mov
iret
fdiv
jg
inc
rcr
retf
sub
mov
pop
int
sbb
sbb
mov
mov
sub
or
jle
call
sbb
pop
out
sbb
and
push
addr16
js
fadd
add
add
cmp
mov
dec
jecxz
enter
jo
pop
inc
jp
lock
sub
mov
dec
adc
mov
aad
cs
and
push
cmp
sbb
push
cmp
push
int3
push
mov
data16
inc
int
sbb
ror
loope
inc
mov
mov
push
scas
leave
fwait
aam
mov
inc
aaa
and
aam
(bad)
mov
movs
jae
into
clc
sub
jns
sar
inc
mov
adc
out
retf
jne
mov
(bad)
int3
xor
sub
out
test
loop
test
jle
mov
or
shl
dec
mov
(bad)
mov
mov
mov
cmp
je
push
jns
js
pusha
test
inc
call
xor
sbb
addps
rol
imul
bound
daa
cmp
fidivr
sub
ds
je
jno
test
repz
pop
add
(bad)
cmp
mov
iret
mov
les
fdivrp
outs
mov
mov
mov
in
loope
or
and
push
pop
retf
fiadd
xchg
sbb
pop
call
xchg
sub
cmp
(bad)
movlps
dec
adc
cmp
xor
das
add
daa
fldenv
push
jge
sub
inc
cdq
loope
nop
mov
sahf
sbb
(bad)
div
sbb
xchg
cmp
mov
fisttp
pusha
jns
(bad)
bound
mov
clc
scas
xor
popa
stos
cmp
fisub
adc
ja
stos
bound
push
repnz
jb
jbe
std
test
outs
dec
fs
imul
enter
cwde
add
or
fcom
(bad)
or
stc
jmp
cmp
mov
mov
call
sbb
or
add
mov
push
or
push
loop
les
mov
loope
add
mov
xor
jmp
ds
adc
mov
and
and
and
test
push
mov
xchg
ret
aas
push
push
nop
cdq
(bad)
je
mov
aam
ds
mov
jo
sbb
jmp
popa
pop
sub
jb
fldenv
call
push
test
inc
xchg
ret
in
stos
dec
xor
retf
std
mov
mov
loop
cmps
test
adc
xor
pushf
mov
dec
call
int
and
in
jo
inc
xor
lds
jle
mov
push
cdq
test
inc
out
ret
pop
adc
ins
(bad)
cwde
mov
movs
cmp
addr16
or
inc
pop
push
dec
repnz
rcl
enter
xchg
and
repnz
sahf
ret
imul
sub
popf
aaa
movs
mov
mov
js
mov
les
jne
stc
sbb
mov
or
mov
sub
or
(bad)
jno
xchg
movs
pop
jno
pop
mov
ins
xchg
retf
or
(bad)
cs
test
outs
leave
in
rcl
out
out
sti
add
popa
sub
sub
leave
jmp
cwde
push
jnp
shl
ins
or
lahf
mov
mov
push
scas
sbb
xchg
mov
into
sub
sub
int3
jnp
inc
movs
jbe
arpl
out
and
cli
sub
xchg
cmp
inc
dec
ja
pop
dec
popf
adc
mov
adc
jne
lods
lock
imul
rcr
fldenv
lahf
cmc
into
hlt
aam
popf
into
or
xchg
out
(bad)
jnp
fdiv
mov
das
mov
fidivr
fist
bound
add
push
cwde
test
jg
out
fnstcw
and
mov
leave
jmp
xchg
or
sbb
(bad)
add
xchg
dec
sbb
std
ins
test
sub
inc
popf
(bad)
sub
push
mov
inc
pop
mov
scas
pushf
mov
cmp
sub
mov
push
lods
add
jge
inc
push
jb
sbb
adc
lods
in
sub
or
inc
and
mov
aam
push
xchg
add
lea
jae
mov
add
cmp
dec
jecxz
pop
imul
xor
out
jns
mov
ret
mov
xor
xchg
pop
xor
dec
push
mov
sub
jnp
sbb
repnz
in
stc
jne
jl
out
add
add
arpl
dec
std
neg
jae
xrelease
cmps
idiv
std
push
push
in
pop
xrelease
retf
popa
inc
mov
popa
sbb
in
pusha
daa
pop
hlt
xchg
dec
push
int3
mov
jb
pop
inc
sbb
xchg
jg
xor
fldcw
movs
and
call
jg
and
icebp
cli
mov
adc
idiv
jo
mov
mov
push
mov
aas
ins
shl
(bad)
stc
nop
(bad)
scas
sub
bound
jp
pop
sbb
loope
mov
mov
das
pop
ins
pop
ror
in
stc
std
mov
mov
fcmovnbe
dec
sbb
aad
shr
mov
mov
adc
cmp
in
fdiv
push
add
xor
lods
je
jle
jmp
pop
daa
addr16
add
push
xchg
cmp
sbb
aam
mov
mov
jge
xor
icebp
push
mov
setle
arpl
shr
inc
dec
std
jo
ficomp
dec
lods
mov
arpl
loope
fcom
xor
add
xor
xor
cmpps
inc
or
jnp
int
jo
xchg
dec
fimul
mov
pop
mov
xlat
mov
pushf
sbb
push
dec
pop
call
lds
nop
mov
jmp
push
ss
jge
dec
xor
(bad)
mov
adc
aam
add
ror
test
push
cmps
arpl
xchg
fld
pop
xchg
sub
pop
cmp
cld
scas
repz
push
repz
(bad)
inc
add
jp
mov
xchg
in
js
lahf
cmp
mov
dec
test
pushf
sub
sub
sub
int
add
test
icebp
(bad)
pop
fidivr
mov
xor
push
arpl
mov
push
dec
push
mov
mov
scas
and
xchg
stos
imul
push
jmp
mov
mov
sub
inc
enter
scas
pop
ffreep
push
jae
push
adc
or
pusha
dec
pushf
pop
test
mov
jne
pop
dec
shl
push
mov
inc
dec
mov
sbb
ret
cmp
add
mov
pop
xchg
jns
mov
mov
xchg
and
inc
add
or
inc
jmp
add
inc
dec
aaa
sahf
sbb
test
out
sahf
dec
imul
popf
xchg
sbb
in
es
loop
xlat
jge
sbb
fist
into
ja
movs
out
ret
popa
gs
out
das
mov
jns
and
sbb
sbb
sub
adc
test
cmp
xor
jno
sbb
int3
pop
xchg
mov
fist
cmp
fnstcw
cmp
adc
bound
cmp
iret
jl
popa
add
cld
(bad)
ins
push
loop
push
xor
add
ds
inc
lds
ins
lea
or
bound
sub
(bad)
add
vpslld
push
lock
push
mov
inc
inc
inc
std
mov
sti
xchg
cwde
sub
mov
je
rcl
(bad)
adc
ret
push
int3
and
pop
sub
loopne
xchg
iret
retf
into
mov
mov
cmp
sbb
aad
gs
mov
and
adc
repnz
stc
xchg
and
and
jbe
jge
lds
mov
dec
repnz
cmc
sub
cld
and
lds
jp
icebp
dec
or
pop
lods
mov
lods
cwde
popa
pushf
arpl
jg
retf
retf
rol
xor
icebp
mov
dec
and
sbb
stos
jo
xor
xor
int
pop
out
shr
cmps
std
or
cli
sbb
jno
test
mov
push
mov
or
in
jns
jno
iret
sbb
adc
push
fimul
inc
fdiv
lds
call
sti
in
pop
or
inc
xchg
outs
jp
pop
int
or
jl
sub
inc
stos
fadd
jo
sub
sbb
fld
hlt
add
repnz
aas
push
jg
push
(bad)
cmps
mul
gs
cmps
cdq
push
mov
bound
mov
repnz
xchg
outs
and
frstor
sbb
xchg
lds
jecxz
jno
inc
add
je
ins
out
mov
int3
jmp
push
jge
fdiv
cmp
dec
jmp
stc
out
or
test
aam
mov
mov
mov
xchg
xchg
popf
and
dec
fs
sahf
dec
mov
and
jne
iret
repnz
jae
xor
xchg
dec
aad
fsub
add
mov
outs
scas
pop
hlt
mov
ficom
test
cmc
add
fld
out
inc
pop
jp
sbb
push
cmp
dec
scas
xor
mov
sti
mov
pop
mov
cmp
retf
or
push
or
es
ins
jl
and
inc
fmul
pusha
mov
into
loope
mov
dec
mov
sahf
rol
arpl
mov
fstp
fist
fs
in
adc
rol
vshufps
jg
mov
push
and
mov
ja
push
das
jp
rcr
scas
or
cwde
repz
push
xor
mov
sub
cwde
jns
outs
test
dec
cmp
sbb
outs
outs
(bad)
ins
test
call
inc
inc
inc
jo
pop
inc
inc
xor
pop
mov
adc
stc
jle
and
cli
pop
pop
pop
mov
push
xor
call
pop
push
fwait
hlt
cmp
sbb
lock
stos
cli
adc
ins
(bad)
out
(bad)
stc
pop
xor
jge
adc
ins
jp
nop
movs
jb
inc
aad
pop
push
push
xchg
add
xchg
inc
push
adc
test
lds
cdq
add
or
pop
xchg
dec
dec
inc
dec
fild
shr
mov
ror
pop
loopne
cmp
sbb
mov
lods
mov
add
sub
inc
scas
cmp
mov
sbb
(bad)
mov
out
adc
retf
sbb
mov
lods
and
(bad)
lahf
into
leave
test
push
sbb
mov
aaa
ins
hlt
mov
(bad)
rcl
mov
adc
jne
inc
xor
addr16
shl
aas
mov
sahf
retf
add
jae
xchg
shl
adc
je
xchg
push
(bad)
sub
and
xchg
and
pop
imul
mov
stos
hlt
jmp
out
(bad)
outs
fcomp
mov
inc
dec
mov
pop
fcmovne
sar
inc
sbb
out
inc
dec
ja
sbb
loope
or
js
jmp
adc
mov
cld
mov
mov
shr
push
ret
(bad)
mov
rcr
pop
jp
and
pop
add
add
xchg
div
jae
or
push
lock
data16
mov
add
loop
push
pop
retf
adc
icebp
xor
push
add
cwde
add
inc
stos
frstor
arpl
mov
mov
mov
xchg
add
out
cmp
push
xchg
sbb
test
cdq
fst
loop
dec
clc
ins
and
or
es
lea
adc
js
aam
inc
jmp
pop
retf
(bad)
(bad)
not
pop
test
fisubr
xchg
lss
jb
push
rcl
cmc
sbb
sbb
jb
jle
mov
bound
mov
pop
push
lahf
icebp
push
cdq
dec
ins
mov
jbe
cwde
jo
jb
inc
lds
push
push
out
jno
cmp
adc
lods
popa
fs
cmp
xor
test
rol
fistp
scas
test
ja
adc
movs
imul
sbb
pop
push
push
xlat
or
out
les
aad
loope
xor
jne
mov
push
int3
mov
cmp
or
test
jmp
push
loope
(bad)
rol
cld
imul
ins
(bad)
sbb
jl
jb
cmp
cwde
ja
scas
mov
dec
push
pop
mov
jb
cmps
(bad)
(bad)
mov
cmp
in
in
mov
cmp
addr16
shl
sbb
inc
lea
outs
xor
and
inc
pusha
fs
jbe
fisub
sub
clc
loope
ins
je
mov
jb
adc
(bad)
push
xchg
pop
mov
out
aas
aam
sbb
xor
(bad)
(bad)
fistp
call
mov
ret
not
aaa
outs
aad
mov
or
ins
jno
out
lahf
cmp
stc
popf
pop
push
repnz
jae
and
and
imul
test
pop
jnp
jae
jmp
cdq
pop
or
shr
inc
add
(bad)
cmps
jge
or
int3
hlt
mov
enter
fidivr
mov
dec
pop
imul
imul
inc
mov
adc
imul
int3
rcl
sub
inc
rcr
sar
inc
or
sub
addr16
cli
cwde
cld
mov
fninit
sub
or
cld
add
mov
mov
xchg
call
hlt
jae
cmp
data16
je
test
cmp
or
mov
cmp
mov
js
dec
mov
xchg
add
neg
jbe
inc
xchg
dec
ins
addr16
mov
movs
xchg
std
ror
inc
and
add
popa
fbstp
call
xchg
add
dec
out
add
sbb
adc
loop
sub
in
imul
mov
mov
pop
int3
cmp
pushf
jo
jnp
les
aas
sbb
or
std
(bad)
mov
jnp
loopne
outs
jmp
adc
inc
mov
jmp
sub
rol
out
dec
xchg
je
jne
in
mov
cmp
pop
inc
and
repz
inc
add
jp
cmps
mov
fisttp
mov
sub
sub
dec
jae
push
repz
addr16
out
std
std
mov
jne
mov
xchg
adc
add
call
or
push
fwait
pop
and
mov
call
pushf
dec
jnp
pop
call
dec
(bad)
mov
inc
sub
inc
rcl
sub
ss
lds
(bad)
lahf
daa
dec
push
pop
pop
push
xor
and
js
loop
adc
fsubp
call
mul
iret
in
rcr
adc
cmp
call
aas
cmp
jns
dec
adc
icebp
adc
and
mov
pop
ja
pop
dec
in
mov
inc
popa
lock
stos
data16
(bad)
jmp
in
iret
ja
dec
inc
nop
mov
icebp
and
in
imul
and
or
push
movs
sti
inc
or
mov
out
shl
in
icebp
aaa
fisub
(bad)
cld
aaa
xchg
ror
sbb
dec
push
jge
xchg
test
and
frstor
ins
mov
cli
(bad)
rcr
rol
lock
aad
xor
ss
sbb
rcr
mov
mov
les
mov
mov
stc
cli
jnp
rcr
sbb
or
fmulp
add
shl
loopne
mov
sbb
cld
popf
test
jmp
bound
sub
mov
mov
retf
data16
inc
(bad)
pop
push
sub
xchg
or
fwait
loopne
sub
sub
and
test
scas
int
or
cdq
mov
mov
dec
mov
clc
movs
jg
and
mov
stos
dec
lock
adc
or
dec
sbb
jle
cmp
lds
in
icebp
inc
dec
out
xor
stc
jnp
retf
fwait
jns
xchg
mov
cmc
mov
fiadd
mov
or
push
mov
inc
ins
leave
sub
test
call
mov
je
mov
int
mov
in
stos
loope
lahf
jns
push
inc
mov
mov
lahf
and
push
outs
jns
(bad)
ficom
pusha
jmp
in
loope
pop
and
inc
outs
cmp
(bad)
pop
inc
test
addr16
adc
stos
sbb
mov
cmp
rcr
mov
mov
add
fcmovne
pop
xor
pop
cmps
repnz
fild
ja
xchg
xor
cwde
cmp
lods
stos
shl
add
xor
xor
ret
retf
jae
inc
xchg
pop
mov
add
push
or
push
xor
ja
repz
je
and
cmp
or
test
dec
pop
int3
xchg
push
jo
rol
pop
cmp
xchg
or
(bad)
sbb
cmp
fidivr
mov
shl
xchg
xor
xlat
mov
adc
(bad)
dec
adc
xchg
aaa
sti
xchg
pop
enter
mov
lods
std
lods
imul
dec
mov
int
xor
lahf
ret
sub
inc
cld
xor
add
stc
jmp
xor
dec
cmp
and
pop
loopne
int
dec
test
dec
ret
adc
(bad)
sbb
pop
sbb
push
out
push
adc
in
int3
jmp
dec
jae
call
fwait
add
fldenv
adc
mov
fisttp
mov
leave
in
or
sub
inc
dec
xor
mov
jno
rcr
inc
dec
cmp
pop
add
rcr
cmpxchg
mov
rcr
gs
pushf
add
ds
mov
push
(bad)
ins
xchg
xchg
mov
mov
sar
pop
ss
jmp
cmp
push
mov
fwait
lahf
jae
adc
sbb
cwde
lods
popa
aas
cmp
and
(bad)
jmp
sahf
std
mov
mov
sbb
push
test
test
add
pop
add
mov
inc
xor
xchg
jecxz
sbb
pusha
bound
mov
cdq
and
out
sub
xchg
jge
xchg
lahf
inc
jmp
cmp
stc
lea
in
inc
xchg
and
scas
popa
inc
js
aam
adc
add
out
mov
jo
retf
mov
test
sub
and
fs
mov
(bad)
sub
inc
sub
retf
pop
pop
je
pop
fwait
pusha
cdq
aas
fisub
adc
leave
jbe
inc
ret
jg
shl
ds
cwde
push
jb
rcr
xor
xchg
sub
(bad)
ds
add
imul
jne
and
pop
js
push
or
movs
bound
push
dec
push
and
mov
(bad)
adc
test
iret
add
pop
mov
loope
cmp
add
fcmove
fsubp
inc
(bad)
pop
test
sbb
fidivr
int3
mov
jo
pop
enter
jmp
pusha
cdq
xor
rcl
push
sub
into
enter
es
dec
mov
xor
call
dec
cwde
xor
sar
scas
jns
(bad)
jl
adc
addr16
push
mov
out
mov
mov
js
sbb
int3
sbb
aad
mov
and
inc
pop
or
jp
xor
xor
aaa
adc
fldenv
jmp
imul
add
mov
mov
ficomp
pop
lahf
sar
add
and
mov
hlt
xchg
cld
ret
xlat
(bad)
xor
sub
dec
dec
fidivr
pop
jl
cmp
retf
mov
hlt
mov
mov
mov
mov
arpl
cmp
shl
mov
dec
in
mov
nop
mov
add
in
cdq
ja
outs
lahf
and
mov
xchg
frstor
gs
in
lds
std
in
sbb
bound
mov
stc
call
(bad)
push
xchg
gs
fdiv
sbb
lds
pop
aad
pop
(bad)
sbb
xchg
rcr
fisttp
repnz
pop
or
lahf
jecxz
cwde
xor
cmp
jno
(bad)
adc
jle
add
jnp
fisttp
dec
xchg
mov
or
test
ret
xchg
pusha
xor
xchg
xor
imul
sbb
push
xchg
das
out
mov
stos
sbb
in
daa
pop
mov
int
out
mov
stos
sbb
aas
popa
inc
jp
loop
(bad)
jb
dec
cmps
sub
fsubp
retf
xlat
mov
jnp
retf
shr
sbb
hlt
pop
pop
inc
push
push
in
ja
push
(bad)
rcr
push
stc
leave
stos
popf
push
pop
(bad)
fsub
sahf
out
movs
xchg
out
mov
popf
in
inc
inc
inc
mov
into
sbb
loope
(bad)
test
out
je
jl
mov
adc
fbstp
mov
and
test
sbb
or
mov
lods
imul
int3
fdivr
sahf
lds
std
stos
loop
aaa
and
call
call
and
mov
push
cmp
or
dec
xor
(bad)
lahf
cwde
or
cmp
mov
shr
xchg
jnp
movs
or
call
popf
push
push
cmp
popa
dec
adc
loopne
jne
cdq
push
or
add
xchg
sub
inc
pop
test
shr
addr16
lahf
add
movs
inc
and
xchg
stc
mov
clc
js
mov
cmps
push
xlat
and
aad
mov
rol
lea
popa
xchg
sbb
imul
data16
test
mov
or
xchg
dec
lock
(bad)
pop
push
dec
inc
bound
cmp
sub
push
outs
data16
sbb
rcr
push
and
push
pop
movs
js
lahf
jge
mov
add
push
add
(bad)
fcom
mov
(bad)
(bad)
sbb
jmp
stos
jns
jns
cmps
ins
imul
mov
pop
inc
bound
shl
imul
scas
cmc
scas
mov
push
sbb
mov
inc
mov
inc
pop
sub
test
sti
jle
fs
sbb
rol
inc
cmps
pop
sub
int
jo
add
and
pop
in
pop
cmp
inc
(bad)
sbb
and
pop
mov
mov
sub
hlt
add
sbb
lock
lea
jnp
xchg
int3
add
sbb
xor
scas
cli
repz
and
sbb
test
out
adc
scas
jbe
pop
imul
hlt
xor
cmps
pop
jle
mov
adc
pop
push
and
jnp
call
push
adc
les
jmp
aam
loopne
add
test
xchg
iret
ret
mov
mov
mov
inc
sar
cmps
out
xor
pop
sti
add
or
fndisi(8087
xor
jne
mov
and
push
iret
xor
cmp
ins
xchg
adc
mov
xor
(bad)
fimul
jmp
aam
fincstp
ja
cmp
xchg
mov
sub
push
je
xchg
pop
or
push
dec
icebp
sbb
or
jg
daa
movups
sub
mov
and
add
mov
mov
nop
movs
xchg
sub
or
push
mov
in
push
sbb
and
ret
or
sahf
pop
mov
and
lods
push
ds
rcl
pop
adc
test
adc
mov
jecxz
mov
sub
clc
std
mov
in
in
je
frstor
jo
or
stos
ins
cmps
push
lea
test
call
test
rcl
and
iret
mov
push
fmul
pop
mov
cmp
jle
mov
(bad)
xchg
push
out
jecxz
push
int
and
retf
call
rol
adc
xor
jecxz
adc
(bad)
jne
in
pushf
jo
repz
xchg
imul
push
inc
sub
std
fdiv
hlt
xchg
xor
out
clc
cmps
daa
sub
push
mov
cld
je
pop
cmp
jmp
retf
stc
sub
(bad)
xchg
push
movs
jb
sub
mov
sbb
xchg
loop
int3
jno
enter
aam
ins
adc
fbstp
mov
cmc
ja
jo
(bad)
sub
dec
call
jnp
mov
mov
jmp
jle
push
aam
shl
push
outs
sub
loop
xchg
mov
push
xchg
aad
adc
xchg
fdivr
adc
jl
pop
jb
movs
adc
mov
sub
push
xor
jo
fdivr
pop
cmp
shl
sbb
cmps
cmp
sub
mov
nop
retf
gs
sub
xor
ins
dec
enter
dec
das
jns
(bad)
das
popa
pop
push
xor
les
push
inc
cli
outs
or
cmc
test
(bad)
stos
mov
mov
std
mov
inc
shl
cwde
mov
and
loop
movs
daa
aam
cdq
dec
fidivr
mov
or
sar
sbb
pop
push
jle
ror
pop
not
cmp
and
jecxz
push
xor
dec
repz
pop
je
add
jl
(bad)
data16
xchg
push
gs
stc
jb
mov
ins
jle
loope
cmp
or
out
sahf
in
outs
sub
and
jmp
adc
je
xchg
retf
hlt
pop
xor
pop
out
adc
jmp
pop
jbe
stc
les
pop
push
jo
(bad)
cli
inc
xchg
xor
into
mov
or
xor
xor
xor
popa
aaa
outs
ins
mov
int3
sti
or
fcmovbe
adc
adc
sbb
cs
retf
in
jo
cmp
mov
ret
sti
(bad)
jbe
jne
(bad)
adc
xor
add
outs
neg
jmp
cli
mov
push
sbb
sub
jns
xor
or
icebp
push
pop
loope
push
xchg
(bad)
addr16
jb
pop
inc
setne
mov
pop
clc
and
in
fnstenv
call
xchg
cmp
icebp
stc
fadd
xchg
jp
icebp
imul
scas
cli
or
cmp
and
sub
cmp
sub
lea
lea
mov
cmp
push
outs
loope
int
(bad)
mov
fcmovu
mov
cmp
push
mov
(bad)
add
pop
adc
sbb
dec
inc
pushf
jle
mul
jns
jbe
adc
call
fsubr
std
popa
(bad)
cli
xchg
(bad)
pusha
int
fmul
(bad)
sbb
pop
jno
mov
outs
fnstenv
in
sub
pop
mov
outs
hlt
imul
mov
loope
or
sbb
mov
stos
fnsave
sub
icebp
and
fidiv
mov
cwde
xor
test
or
jecxz
and
dec
adc
aad
in
cdq
popf
xor
rcr
repz
cmp
push
xchg
sar
cmp
leave
cmp
mov
mov
jbe
aad
push
mov
inc
and
test
xchg
xlat
repnz
adc
cdq
out
jg
out
mov
xchg
lahf
imul
test
clc
stos
mov
sar
push
sti
jbe
fild
in
add
call
pop
outs
adc
mov
dec
movs
adc
fimul
cmp
icebp
leave
pop
fmulp
mov
and
push
push
and
out
cmps
xchg
sar
pop
pop
mov
sbb
or
retf
dec
xchg
pop
lods
ret
daa
mov
into
dec
test
inc
xchg
and
push
pop
movs
inc
inc
test
aas
push
mov
cs
cwde
mov
xchg
mov
mov
pusha
mov
sbb
stos
mov
pop
mov
out
leave
sub
mov
inc
jmp
or
test
push
jg
cs
dec
int
hlt
dec
ror
and
test
sub
popa
cld
and
cdq
fnsave
hlt
stos
nop
mov
mov
int
test
jle
ret
push
aad
sbb
(bad)
dec
push
sub
out
(bad)
adc
cmp
push
jne
cmp
dec
sbb
enter
test
imul
cmp
shl
xchg
add
push
xor
stos
sbb
nop
out
div
scas
adc
(bad)
repnz
movs
sub
sub
test
mov
ret
aaa
outs
and
jo
test
xchg
ret
sbb
adc
xlat
sti
out
rcr
loop
mov
dec
jmp
mov
test
cmp
addr16
mov
xchg
sbb
and
xchg
sbb
inc
div
into
aaa
fmul
in
ret
loope
mov
daa
int
mov
xlat
repnz
clc
inc
xchg
ins
pushf
inc
hlt
shl
mov
pop
lock
test
das
pop
sahf
jo
mov
xchg
test
bound
dec
call
stc
sub
and
lea
into
out
xchg
ins
xchg
stos
fdivr
(bad)
ja
mov
mov
loopne
mov
imul
push
call
mov
shl
cli
add
popf
dec
jle
mov
adc
das
mov
out
test
enter
add
sbb
add
push
popa
sti
call
push
imul
pop
sub
jle
xchg
sbb
dec
cmp
or
shl
mov
mov
and
out
or
mov
test
jl
call
push
loope
ins
mov
retf
popa
(bad)
jmp
inc
nop
retf
fs
repz
or
and
js
pop
push
retf
sub
mov
scas
xchg
das
aam
add
lods
mov
popf
push
xchg
fisubr
loope
or
or
adc
fstp
movs
sar
out
xchg
in
(bad)
inc
cmp
adc
daa
fcomp
cli
dec
lock
inc
mov
movs
cmp
mov
push
pop
xchg
shr
pop
aas
lods
movs
jl
jp
pop
aaa
imul
cld
mov
jmp
mov
fisttp
lahf
add
jns
push
mov
mov
push
push
push
xchg
dec
(bad)
and
cmp
push
mov
test
into
mov
jp
push
lods
ss
xchg
cmp
stc
arpl
adc
mov
cmc
inc
add
jg
jp
retf
sub
sbb
sbb
or
push
inc
ret
inc
add
leave
ja
dec
pop
out
sahf
add
icebp
add
pop
scas
xchg
adc
sti
icebp
icebp
ficom
jge
rcl
es
adc
pop
mov
and
ret
fbstp
in
repz
and
and
stos
add
or
push
in
ret
mov
pop
sub
xor
retf
fild
adc
pop
mov
mov
xor
or
jmp
dec
xchg
jecxz
dec
fidiv
ins
fisub
mov
xchg
aas
mov
in
mov
loop
mov
jmp
push
dec
cmp
mov
xchg
fisttp
and
mov
bound
ins
(bad)
inc
(bad)
cmp
and
shr
(bad)
scas
sub
mov
iret
test
cmpxchg
sub
cmp
test
js
leave
xlat
cmc
or
push
sahf
adc
jae
push
mul
mov
test
xor
xor
addr16
sbb
push
ret
leave
jmp
add
adc
ins
push
out
mov
fwait
or
cmp
mov
outs
adc
adc
stos
push
cld
lods
sub
in
ud0
jno
jg
mov
enter
dec
es
and
sbb
xchg
fs
mov
xor
xchg
pop
js
es
test
sub
push
bnd
cmp
push
cli
push
add
or
mul
icebp
jl
sbb
test
outs
mov
mov
mov
dec
clc
sbb
add
mov
aaa
(bad)
dec
pushf
call
dec
fst
cmps
or
mov
adc
movs
add
lock
retf
int3
lahf
jp
mov
call
sub
dec
jmp
das
jp
aad
rcl
int
mov
lds
jnp
rcr
sub
movs
je
mov
mov
mov
(bad)
popfw
pop
xor
inc
push
test
push
fdiv
adc
jp
mov
adc
jnp
add
cwde
xor
add
aas
xchg
xchg
inc
movs
call
aam
jle
fwait
pop
xor
bound
adc
cmp
mov
(bad)
xchg
xchg
ins
ds
xchg
add
repz
adc
out
pop
xchg
pusha
in
jmp
(bad)
in
mov
sbb
adc
nop
mov
jno
(bad)
(bad)
fst
xchg
test
(bad)
call
rol
loopne
cwde
jae
jmp
dec
call
xchg
les
imul
sbb
(bad)
dec
adc
test
and
mov
repnz
dec
mov
(bad)
pusha
bound
shl
pop
retf
mov
out
inc
pop
jb
jne
cmc
mov
fwait
pop
push
mov
aad
imul
les
jno
(bad)
out
loop
icebp
bound
sti
popf
sub
mov
mov
iret
mov
outs
ins
int
mov
ret
adc
enter
fsub
cs
mov
xchg
in
pop
ins
mov
sub
mov
cwde
xchg
add
lock
and
inc
jae
inc
add
idiv
sbb
cmp
(bad)
retf
xor
inc
andnps
cmps
add
mov
fdivr
add
xchg
pop
enter
cmc
je
les
ret
mov
shr
mov
enter
in
ret
mov
and
jmp
mov
inc
retf
pusha
shr
adc
cmc
mov
or
cmp
pop
jnp
mov
xchg
cwde
pop
adc
movs
xor
mov
aas
mov
scas
push
inc
in
rcl
retf
ret
sbb
sub
dec
and
push
push
push
dec
add
mov
jbe
sub
mov
adc
es
movs
add
pop
rol
xor
imul
dec
adc
add
in
call
aad
jl
or
inc
mov
call
dec
or
cmps
lahf
jno
xor
cli
cmp
jb
mov
xor
out
div
sbb
stc
not
mov
jb
fnstsw
push
retf
or
sbb
ins
add
xor
fisubr
iret
test
jmp
push
in
inc
dec
into
jecxz
in
stc
and
jmp
dec
mov
out
xor
add
lods
clc
or
pop
and
push
xor
mov
cdq
push
jg
lock
movs
lock
jmp
xchg
dec
leave
or
and
push
add
popa
loop
cmp
mov
or
jmp
loop
inc
gs
or
fnstcw
ds
mov
xchg
sar
cmp
or
xchg
cli
into
outs
cmp
pop
add
sbb
stos
jae
push
das
call
mov
test
xchg
fstp
jp
xchg
sbb
fnstsw
outs
sub
xor
sar
sub
xchg
add
cmps
and
ins
loop
mov
sahf
xor
rol
ins
cmp
retf
loop
loop
cdq
xor
fmul
jg
clc
pop
std
lds
ret
scas
out
pop
pusha
dec
fwait
inc
or
test
adc
and
pop
lea
fst
data16
xchg
push
daa
push
pop
push
adc
aaa
sub
xchg
sbb
and
scas
leave
in
call
imul
cmp
dec
mov
and
pop
lahf
jbe
sbb
adc
mov
dec
movs
packssdw
push
test
jge
xor
div
pop
inc
ret
xchg
sub
cmp
inc
scas
call
xor
enter
xchg
retf
repnz
jmp
fcmovnbe
adc
in
ds
or
test
popa
aam
aam
or
bound
ret
or
sbb
(bad)
std
(bad)
int
jmp
fbld
jno
(bad)
fnstenv
inc
scas
and
cld
movs
sbb
clc
fdivr
jl
popa
cmc
iret
pusha
dec
pop
and
fiadd
cmps
(bad)
jnp
sub
cmps
sbb
xlat
shl
xchg
daa
push
or
stos
sti
jbe
out
inc
call
ins
sbb
xor
into
gs
ss
push
adc
mov
outs
mov
fdiv
adc
lods
push
dec
adc
cwde
(bad)
fwait
(bad)
gs
repnz
mov
dec
ret
inc
out
sub
push
pop
aas
sub
movs
fild
dec
xchg
stos
ins
jmp
sbb
cmp
xchg
outs
cdq
ret
xchg
inc
mov
pop
pop
cmc
sbb
push
enter
mov
and
jnp
sar
jo
adc
inc
mov
cmp
jns
inc
sbb
and
out
inc
sbb
inc
xor
pusha
or
and
inc
inc
arpl
sub
lock
fisttp
mov
xchg
(bad)
mov
ins
xor
dec
out
sub
xor
sti
mov
sbb
popa
iret
inc
leave
jbe
frstor
sub
mov
pop
push
pop
push
in
addr16
(bad)
(bad)
lahf
or
adc
aad
xchg
xor
not
mov
cwde
inc
jle
sub
sti
push
cli
sbb
pop
ins
rcr
scas
add
sbb
push
push
sub
(bad)
and
xor
pushf
cld
js
out
and
cld
ret
mov
movs
sete
and
push
das
adc
mov
xchg
pop
out
sub
dec
and
push
lds
les
std
mov
icebp
xchg
stos
jmp
dec
mov
sahf
xor
mov
jmp
enter
push
icebp
xlat
mov
es
(bad)
mov
test
inc
sub
lahf
xor
mov
pop
lods
add
cwde
aam
adc
add
pushf
pushw
sbb
aaa
mov
push
iret
inc
out
mov
jp
cmc
scas
iret
pop
jmp
inc
and
cmp
ss
dec
and
xor
or
(bad)
fadd
(bad)
imul
(bad)
imul
xchg
jp
or
lods
fsubr
(bad)
and
pop
cmp
rol
xchg
pop
jbe
stos
int3
imul
mov
xchg
mov
or
repnz
in
pusha
sub
sahf
jbe
repz
rcr
leave
xchg
(bad)
out
adc
ror
cmps
out
sti
cmp
dec
jle
mov
mov
pop
pop
sbb
imul
mov
xor
push
jecxz
test
sbb
iret
iret
enter
xlat
mov
out
jae
cmps
call
into
div
mov
test
ins
and
imul
je
in
sub
imul
jl
sub
sbb
dec
push
js
sbb
dec
in
shl
inc
xchg
outs
sub
inc
loope
sbb
sbb
or
ds
mov
js
mov
test
jne
xchg
das
retf
test
push
lahf
mov
mov
ret
dec
arpl
out
pop
push
dec
std
fstp
mov
call
test
sbb
pusha
fadd
ja
mov
cmps
mov
imul
cmps
inc
shl
outs
int3
jmp
call
loope
inc
cmp
sbb
sbb
call
iret
push
ins
mov
xlat
push
xlat
icebp
pop
mov
popf
sub
inc
cmps
das
ret
and
pop
inc
vmovss
inc
cld
cmps
lods
mov
xor
xor
stos
pop
sub
stos
jae
sahf
dec
es
push
mov
ret
aad
adc
push
cdq
xchg
pop
retf
mov
mov
mov
push
xor
aad
jg
test
add
div
jle
addr16
movs
jb
add
ret
imul
add
je
sbb
aaa
shr
fldcw
adc
cs
cmps
das
jo
lds
dec
mov
add
out
or
repz
ret
aas
outs
dec
mov
dec
fsub
iret
fs
icebp
leave
inc
pusha
cmp
cmps
dec
lahf
ds
inc
lods
sbb
and
aas
mov
push
ss
mov
stc
sub
xlat
jbe
fcom
retf
int
jbe
dec
out
pop
sub
in
pop
stos
xor
inc
scas
pop
add
mov
fwait
add
inc
push
ds
ss
pop
mov
xor
and
(bad)
inc
std
jno
out
mov
shl
test
pop
dec
mov
neg
sub
mov
fistp
aaa
jo
cwde
inc
in
arpl
ret
dec
jno
push
dec
and
and
add
out
outs
mov
sbb
push
and
or
sub
in
xchg
repnz
jnp
outs
sub
call
mov
and
pop
(bad)
dec
sub
cmp
jecxz
mov
test
xlat
or
mov
(bad)
and
out
out
push
push
scas
pop
mov
sub
xlat
cli
fbld
clc
pushf
jns
sbb
inc
aam
xchg
jne
arpl
sub
cli
push
jl
arpl
mov
push
(bad)
xchg
icebp
fcomp
dec
jg
mov
fwait
pusha
ss
imul
and
movs
push
or
xchg
test
inc
sahf
ret
mov
jns
int3
pusha
inc
adc
xchg
fldl2e
xor
scas
push
repnz
adc
mov
gs
inc
ja
xor
ins
pop
call
sbb
stos
arpl
movs
inc
mov
shr
ins
es
inc
pop
call
adc
ins
sbb
ror
data16
xchg
mov
aaa
(bad)
rcl
add
mov
pop
mov
dec
jne
rcl
call
dec
iret
mov
sbb
xlat
lods
fwait
cs
pop
xor
dec
test
ds
push
adc
movs
jno
jmp
retf
adc
xchg
imul
rcl
pop
out
fsubp
cmp
jmp
xchg
fist
in
movs
cmps
adc
adc
xor
retf
sar
arpl
dec
mov
out
pop
add
fmul
retf
test
push
(bad)
(bad)
(bad)
out
bound
dec
add
inc
addr16
mov
test
out
nop
call
ja
mov
adc
ins
or
and
fild
adc
(bad)
in
in
add
call
adc
and
stos
stos
cmp
jns
(bad)
in
in
inc
int3
jns
stc
ja
and
push
mov
cmp
hlt
adc
mov
mov
cmp
jno
(bad)
or
sub
pop
jns
inc
mov
mov
sub
movs
cmp
out
add
jne
adc
cmp
mov
xchg
ror
sbb
or
push
sub
lahf
mov
push
push
mov
mov
jle
jle
movntps
retf
js
cmc
rcr
xor
rcr
mov
daa
int
fiadd
cmp
mov
ss
movs
lea
out
test
mov
ins
push
push
fldcw
jl
jp
mov
adc
fistp
xor
adc
dec
stos
mov
aaa
test
out
imul
sbb
rcl
shl
dec
adc
add
and
or
inc
inc
inc
stos
loop
xor
mov
push
pop
cdq
cwde
push
sub
jg
outs
sub
cli
test
cmps
rcr
or
ret
hlt
repz
jl
test
pusha
ror
repz
jb
xor
and
daa
push
fcmovbe
pop
jns
(bad)
scas
retf
sub
fnstcw
mov
mov
mov
popa
push
shl
or
add
jbe
add
outs
sbb
mov
inc
jb
sbb
movs
lock
cmps
inc
push
xor
sub
and
xor
sub
out
adc
ret
inc
fstp
sbb
(bad)
push
mov
adc
dec
ja
test
inc
clc
sub
out
sbb
adc
lea
jl
mov
mov
mov
pop
add
retf
pop
mov
lods
push
out
imul
mov
je
push
mov
add
and
ja
ja
stc
jl
cdq
push
nop
leave
and
fdivrp
jne
mov
xchg
rcl
sub
or
adc
adc
dec
xchg
jb
sbb
inc
lahf
push
adc
add
loope
into
ret
cmps
push
jnp
scas
scas
clc
test
test
test
retf
mov
xor
in
mov
mov
call
or
xchg
mov
or
fcomp
jne
imul
(bad)
fidivr
cmp
jle
mov
repz
lahf
ds
aas
mov
jbe
loope
ja
and
and
pop
lods
ins
outs
adc
push
mov
jo
pop
sti
loope
not
scas
je
retf
xor
ficom
popa
ss
call
test
xor
and
not
mov
je
add
bound
push
into
adc
shl
xchg
sub
add
(bad)
into
stc
test
xor
push
push
call
mov
jp
cmp
(bad)
jnp
scas
test
pop
inc
cld
push
data16
pop
push
push
leave
mul
sbb
je
nop
ja
lahf
hlt
outs
jns
jle
sbb
xchg
cmps
sbb
imul
inc
cmp
not
outs
ss
fidiv
frstor
cli
pop
les
cmp
sub
dec
cmc
(bad)
arpl
mov
hlt
cmps
daa
rcl
rcl
rcl
xor
cmp
loop
stos
and
or
jne
mov
push
sub
mov
and
mov
outs
not
fimul
jmp
int3
scas
pop
jl
pop
push
push
add
dec
loope
sub
fimul
pop
call
mov
ror
stos
xchg
iret
cmp
test
sti
cmps
inc
xchg
xchg
sti
pop
push
cmp
sbb
push
inc
loop
pop
push
ins
xor
and
leave
ins
xor
test
add
fist
push
test
lahf
cli
xor
jb
popa
std
out
sub
xor
and
push
retf
mov
and
sbb
outs
out
mov
jge
in
cs
push
jle
mov
push
push
repnz
adc
push
sbb
in
lock
into
xchg
mov
ds
xchg
fiadd
cmp
jmp
push
mov
push
cmp
adc
xchg
je
loopne
(bad)
and
pop
xor
fs
sti
jle
out
inc
jecxz
fdiv
jne
mov
fmul
xchg
pop
lods
xchg
cmps
mov
add
shl
daa
sbb
mov
dec
clc
mov
in
adc
xor
mov
popf
shl
leave
sbb
rcl
mov
bound
adc
xor
pop
nop
adc
and
and
xchg
sub
popf
movs
or
fcmovb
xor
jns
stc
inc
dec
jge
sub
mov
jae
jg
sbb
jo
jb
ins
mov
push
adc
outs
xor
pavgw
xchg
dec
call
aad
cwde
mov
mov
jns
inc
fldenv
sub
and
push
loop
lahf
or
scas
push
push
sahf
pop
cmp
add
call
movs
inc
mov
jge
fs
(bad)
pop
mov
xor
push
sub
and
and
or
xchg
dec
test
out
call
jmp
loope
cmp
pop
add
ds
cmps
rcl
ins
(bad)
fidiv
xor
xlat
loope
pushf
inc
mov
int
mov
shr
mov
fisubr
(bad)
imul
mov
sar
lock
cmps
repnz
jnp
inc
mov
sub
stc
aad
or
dec
add
cmc
pop
scas
imul
(bad)
xor
adc
fisttp
fcom
adc
in
and
js
push
(bad)
mov
sub
les
dec
jmp
addr16
push
sub
mov
loope
sub
dec
jle
adc
mov
retf
ins
dec
(bad)
popf
dec
xchg
shr
out
mov
cmp
ret
rcl
icebp
dec
and
cmp
js
pop
adc
xor
jmp
idiv
in
xor
icebp
mov
jecxz
and
pusha
(bad)
in
out
loope
dec
inc
sti
into
xor
sub
fnstsw
arpl
cmp
xor
pop
xchg
stos
mov
xchg
dec
push
loop
dec
in
jo
and
int
in
jle
je
icebp
clc
sbb
jae
call
and
loope
ins
je
and
cwde
jae
push
mov
dec
out
vminss
dec
ret
add
mov
sub
(bad)
gs
pop
cmp
pusha
push
movs
leave
bound
mov
pop
pushf
or
repnz
push
lea
call
pop
fs
push
jmp
mov
mov
jbe
and
fsubr
xchg
or
xor
popa
and
sub
mov
leave
mov
fs
and
pop
cmp
fwait
aam
ja
jmp
xlat
push
mov
neg
fiadd
retf
xor
into
loope
pop
lods
hlt
lods
inc
push
pushf
imul
scas
stos
aaa
in
gs
jg
inc
push
mov
setno
mov
int
jp
sar
sub
push
dec
inc
inc
adc
mov
pop
jmp
inc
mov
fcomi
jg
push
jmp
ja
fild
push
imul
xor
es
not
inc
aad
push
push
adc
push
(bad)
ja
repnz
or
inc
pop
ins
push
push
pop
mov
fdiv
push
adc
ret
pop
in
push
xchg
nop
outs
mov
lods
stc
jae
or
add
fidiv
adc
pop
push
mov
xchg
adc
or
add
push
je
adc
push
mov
popa
movs
jns
add
aaa
sbb
movs
inc
rol
test
cdq
out
mov
pop
jge
mov
ins
jb
out
fst
out
leave
stc
jge
mov
inc
jno
jl
(bad)
mov
pop
xchg
jp
sub
outs
sbb
dec
loope
jmp
dec
xchg
aas
dec
imul
adc
nop
cmp
sub
mov
or
mov
or
jmp
leave
add
in
mov
inc
scas
gs
or
das
pop
in
loopne
mov
xchg
into
aam
mov
mov
jbe
add
loopne
and
inc
push
sahf
mov
inc
imul
xor
push
nop
sub
jge
mov
xchg
int
mov
(bad)
cmp
sahf
jl
mov
neg
aam
retf
mov
into
mov
test
xchg
jge
cdq
pusha
outs
and
mov
push
pop
mov
dec
adc
push
ret
arpl
aad
mov
inc
or
scas
dec
movs
or
inc
mov
arpl
mov
jns
add
pop
retf
mov
mov
inc
int
or
mov
aas
fcomp
mov
(bad)
iret
sbb
cmp
adc
aam
jmp
or
cmp
lods
inc
mov
jb
jle
sub
in
add
or
mov
cmp
out
add
sub
ins
sti
jp
leave
mov
dec
std
mov
push
cmps
dec
jne
stos
push
arpl
movs
mov
pop
cli
out
jg
adc
outs
in
sbb
cmp
cmp
sbb
jae
jp
xchg
sti
ret
loop
mov
sti
xor
inc
aaa
hlt
mov
retf
mov
cli
or
ret
adc
jb
adc
push
(bad)
in
cmp
add
(bad)
cmp
iret
xchg
fwait
outs
adc
cs
stos
outs
out
jb
xor
cmp
inc
in
int3
sub
sub
imul
jl
cmps
hlt
shl
out
xchg
les
jnp
cdq
mov
mov
xchg
push
xchg
imul
ficom
add
mov
test
sahf
lds
xor
fs
test
push
push
jg
sub
daa
dec
in
inc
jmp
dec
push
or
dec
in
or
inc
bound
cmp
jbe
out
inc
cmps
loop
push
pop
adc
(bad)
aad
mov
xchg
icebp
cmc
push
dec
ins
cld
push
inc
aam
mov
pusha
mov
inc
in
jecxz
in
cmp
inc
add
(bad)
ss
outs
dec
out
iret
repnz
aas
lock
test
icebp
iret
out
push
push
js
dec
fstp
inc
dec
lea
add
push
mov
out
aas
cs
cdq
xor
repnz
dec
inc
inc
adc
push
push
mov
and
sbb
retf
dec
call
pusha
mov
psllw
int3
loop
dec
mov
or
aas
popa
sub
imul
sub
cmps
mov
(bad)
and
sti
push
inc
sbb
xchg
xor
data16
(bad)
inc
jle
pop
sub
ins
or
push
or
jecxz
int3
repnz
imul
nop
jno
inc
arpl
sub
mov
ins
mov
push
xor
xor
test
or
adc
and
add
sbb
jp
cld
or
and
pop
mov
and
mov
imul
les
jns
movs
jbe
not
lods
(bad)
aas
jbe
outs
shl
mov
mov
jns
dec
and
shl
movs
jl
inc
rol
or
dec
jno
loope
pushf
adc
stos
enter
or
mov
jg
ret
mov
aas
outs
bound
fnstsw
inc
push
mov
clc
sub
cld
and
xor
shr
cmc
mov
sahf
adc
mov
push
movs
sub
cmp
sub
fs
shr
and
cmp
loope
pop
hlt
aaa
cdq
mov
and
data16
(bad)
rol
pop
movs
cmp
jb
adc
pop
jbe
push
pop
xlat
jno
fdiv
push
popf
inc
arpl
mov
jg
std
mov
sub
(bad)
pushf
push
in
out
sub
lahf
add
jmp
pop
cdq
repz
jle
pop
(bad)
and
or
mov
cmp
aaa
jns
repz
cli
clc
imul
sub
mov
cwde
cdq
push
mov
das
and
xlat
aad
cmp
nop
and
fild
sbb
push
cmp
gs
and
cmc
retf
mov
xor
pop
out
and
sbb
jmp
or
scas
xchg
xor
xor
sbb
add
mov
and
mov
loop
bound
xchg
out
mov
and
scas
dec
pop
xchg
shl
xchg
cmp
mov
inc
fimul
out
call
fcom
push
out
push
(bad)
lea
repnz
(bad)
outs
mov
(bad)
dec
mov
mov
mov
ja
stc
push
sti
jno
gs
mov
sbb
cmp
cmp
jnp
and
mov
cmp
push
push
in
jmp
(bad)
mov
cli
push
pop
add
push
int3
scas
js
mov
(bad)
fld
xchg
add
ja
ret
(bad)
or
scas
cmps
xchg
mov
rcl
cmp
sar
cli
sbb
xor
call
sub
fwait
xor
and
outs
and
xlat
or
test
cmp
adc
sub
ja
mov
fnstsw
inc
std
jmp
or
aas
jns
hlt
add
and
sbb
sbb
push
repnz
inc
fadd
sbb
das
(bad)
mov
mov
or
xchg
xchg
(bad)
xchg
push
inc
jecxz
jbe
push
dec
xor
adc
mov
lahf
ror
lods
ja
pop
call
ds
ss
ins
dec
mov
mov
(bad)
bound
adc
int3
in
push
mov
inc
add
lods
dec
fs
pop
push
and
cmp
lds
sbb
add
xor
scas
jae
and
xor
dec
cmp
add
add
test
fmul
dec
lahf
out
pop
inc
nop
dec
test
pop
jmp
in
test
xchg
jo
add
imul
repnz
in
pop
test
ja
xchg
loope
cs
jmp
fidiv
push
mov
inc
jl
mov
dec
stos
add
rol
ja
clc
push
dec
jge
ds
mov
and
stos
enter
rcr
or
mov
call
jge
rcr
add
cmp
cmp
movs
pop
push
jmp
inc
fstp
pop
iret
sbb
mov
mov
out
sti
jno
cdq
call
fnstcw
and
movs
(bad)
out
xor
xchg
imul
xchg
or
sbb
inc
in
add
fwait
and
loopne
stc
jecxz
mov
dec
pop
inc
lds
fst
push
mov
bound
xor
call
jbe
cmc
inc
add
cmp
xchg
xchg
jae
add
push
mov
mov
ja
cmp
out
xor
pop
in
fldenv
mov
jnp
push
mov
ss
(bad)
rol
mov
xchg
jmp
daa
test
mov
xchg
fadd
test
addr16
adc
aas
pop
call
xlat
sahf
sub
mov
jbe
ja
xchg
in
popf
pop
sbb
mov
call
in
mov
stc
out
pop
mov
mov
es
mov
je
into
mov
add
inc
sahf
mov
repz
fdiv
xchg
lods
push
ds
jle
bound
dec
leave
outs
outs
mov
adc
shl
jb
shl
push
xchg
retf
retf
inc
addr16
mov
gs
adc
cmc
cmp
mov
xchg
pop
iret
push
mov
icebp
mov
sub
mov
loopne
movs
sub
test
mov
sbb
int
sbb
sub
cvtpi2ps
mov
mov
pop
cdq
inc
push
jnp
(bad)
mov
mov
push
and
sub
pop
xor
mov
popa
push
dec
or
mov
pop
push
lahf
xchg
jno
xor
mov
mov
mov
in
pop
jmp
test
inc
jnp
call
or
sub
and
dec
data16
fistp
inc
cmp
std
(bad)
iret
inc
fadd
(bad)
repnz
mov
xor
mov
jle
ds
push
inc
ret
(bad)
xchg
pop
fisub
retf
pop
or
std
dec
cs
mov
jnp
push
sbb
stos
sbb
push
or
sbb
jnp
dec
mov
lea
inc
pushf
xchg
lods
icebp
fnstsw
sti
sub
imul
mov
push
jns
bound
lods
in
jmp
mov
ret
mov
and
fbstp
or
mov
ret
and
inc
sbb
mov
sub
in
cwde
inc
pop
rol
jnp
dec
scas
push
rol
ror
mov
ja
mov
stc
push
adc
adc
sbb
in
mov
je
ss
mov
loope
mov
push
xor
add
add
cwde
push
das
mov
cmp
inc
fidivr
fst
mov
cs
movs
pop
rcl
(bad)
adc
inc
inc
and
mov
fnstcw
enter
inc
pop
xchg
push
jmp
push
cmp
fcomp
sub
push
push
dec
test
int3
repz
push
jecxz
pop
or
imul
fwait
mov
or
daa
sahf
jae
sub
cmp
push
mov
sub
fcomp
lea
(bad)
fadd
cmp
mov
into
div
pop
push
call
adc
cmps
cmc
jle
loope
or
repnz
inc
push
sbb
(bad)
aad
inc
or
mov
cmps
in
pop
fsubr
or
or
jecxz
mov
je
cmp
dec
push
(bad)
fstp
fstp
pop
xchg
push
jo
jne
mov
aas
push
(bad)
xor
fst
inc
(bad)
repnz
sub
mov
xchg
sub
add
mov
jmp
push
mov
test
jbe
test
or
jge
popa
jbe
in
adc
mov
rcl
inc
mov
mov
loope
jmp
mov
test
dec
xor
mov
inc
mov
not
imul
pushf
add
rcl
or
push
test
and
and
stc
pop
jnp
dec
push
popf
cmp
mov
ret
and
inc
pop
or
scas
popa
jmp
mov
das
sub
and
push
lds
dec
fxch
test
arpl
xor
mov
mov
xor
lods
xor
sbb
xchg
and
push
dec
and
in
fndisi(8087
push
cld
jecxz
jecxz
pop
rcr
out
and
sub
add
shl
xchg
retf
retf
cmp
sahf
mul
imul
cmp
lahf
inc
sub
dec
movs
pop
push
mov
dec
xchg
jge
movs
cmp
xlat
or
xchg
jo
jmp
call
stos
shl
std
enter
fcom
adc
into
cmp
jg
sbb
inc
add
mov
push
xor
mov
add
cli
in
pop
sub
fnsave
in
inc
cwde
cmp
out
clc
inc
add
(bad)
pop
mov
fnstenv
stos
ror
jecxz
xlat
call
mov
addr16
(bad)
push
ret
movs
xor
jo
jns
mov
mov
xor
mov
jns
rol
rol
adc
mov
xor
xor
pop
push
jnp
outs
mov
(bad)
in
push
dec
adc
pop
repnz
dec
scas
clc
jge
dec
(bad)
sub
pop
pop
jns
and
int3
or
cs
push
(bad)
nop
gs
into
push
test
in
sub
xchg
push
ror
ss
ss
mov
ret
jecxz
mov
shl
dec
dec
jae
out
(bad)
dec
test
jg
add
and
rcl
pop
jbe
rol
stos
jge
test
sub
inc
add
add
and
mov
ins
push
sub
dec
dec
jbe
xchg
call
jge
and
rcl
out
loope
mov
pop
mov
xor
and
in
push
mov
shl
cwde
outs
retf
call
jb
cmp
inc
push
aas
pop
xchg
rcr
cmp
sbb
leave
cmp
cmp
pop
or
xchg
adc
(bad)
fimul
loop
mov
push
pop
rol
gs
push
sbb
pop
pop
fstp
mov
or
mov
inc
cmp
test
pop
jecxz
rcl
mov
jo
mov
mov
out
adc
dec
sar
lods
jno
dec
mov
or
cmc
out
loope
sbb
mov
ja
sbb
js
sbb
addr16
xchg
cmp
fisubr
scas
cmp
sub
enter
rcr
xor
shl
push
and
push
movs
fdivr
cmps
(bad)
mov
or
imul
(bad)
cwde
xchg
cdq
repz
or
popf
jle
bnd
mov
cld
mov
cmps
stc
jge
rcr
xor
(bad)
xchg
(bad)
icebp
xor
into
fld
mov
jge
fistp
push
aas
fst
clc
or
je
mov
in
(bad)
loop
pop
mov
adc
(bad)
fimul
push
ja
(bad)
sbb
ins
push
sub
mov
adc
cmc
cmp
mov
hlt
les
or
and
bnd
rol
out
fcmovnu
imul
shl
les
fist
jo
stc
movs
in
lds
jae
adc
inc
jmp
mov
xor
test
mov
mov
mov
icebp
xor
adc
imul
xchg
pop
call
jmp
mov
pop
mov
fiadd
inc
jo
dec
xchg
leave
jbe
pop
xor
rcl
cmps
jns
or
xchg
jno
add
jmp
popa
ss
cdq
leave
mov
sub
int
mov
sub
cdq
(bad)
mov
dec
in
leave
(bad)
cmp
repz
sbb
out
xor
rcl
stc
icebp
int3
push
cli
ficomp
adc
mov
cmp
dec
pop
mov
inc
fisub
mov
mov
and
xchg
adc
or
fistp
call
js
sahf
mov
ret
mov
rol
mov
xchg
xor
divps
in
push
test
fs
cmp
push
mov
cs
xor
pushf
adc
ss
inc
ret
add
(bad)
dec
sbb
xchg
fist
mov
xchg
pop
push
loopne
or
mov
and
arpl
mov
mov
or
aad
gs
cmp
mov
sbb
(bad)
out
iret
or
pop
out
clc
xchg
jge
inc
xchg
push
mov
mov
fnstsw
jmp
sbb
inc
loope
test
cdq
adc
cmp
adc
xor
fcom
(bad)
dec
ds
xchg
jge
test
nop
cmp
xor
aad
or
lock
xchg
mov
jge
daa
jmp
cmovb
jne
jmp
outs
sub
rol
popa
repnz
or
xchg
sbb
cmps
and
mov
fwait
nop
imul
fdivr
push
xchg
pop
jl
mov
pop
cmp
push
retf
mov
div
stos
loop
lods
jo
bound
jmp
pop
push
daa
xor
sub
clc
lods
cli
adc
retf
mov
ret
pop
dec
mov
scas
mov
dec
xor
dec
das
out
xchg
add
jno
adc
loope
mov
xchg
(bad)
cmp
cs
pop
add
(bad)
out
mov
pop
in
daa
scas
loope
jl
ss
loope
sahf
pop
fstp
inc
push
adc
scas
inc
cld
xor
or
adc
push
xchg
fwait
dec
jae
adc
data16
push
out
sub
rcr
mov
sub
push
inc
pop
pop
jae
sub
aas
mov
sbb
mov
push
adc
dec
neg
inc
fcom
and
xor
call
lock
imul
std
mov
addr16
sbb
jge
cmc
bound
jge
mov
mov
fimul
hlt
mov
mov
mov
jno
outs
push
stos
movs
loop
cmovle
int
dec
test
popa
(bad)
xor
scas
adc
or
push
mov
xor
fidivr
les
add
loope
mov
mov
jp
cmps
leave
aad
std
dec
out
mov
ret
add
jae
cwde
jne
test
dec
xor
jp
sbb
adc
jecxz
ja
and
xchg
jnp
loopne
into
jb
and
vmovntps
pop
push
hlt
mov
movs
mov
xor
js
shr
in
cmp
hlt
pushf
cmps
fild
popa
mov
daa
dec
push
test
and
in
jmp
xor
adc
rol
sbb
add
rcl
adc
stos
jl
sbb
mov
gs
jo
xor
shl
mov
enter
or
mov
sub
aam
ins
movs
xor
jne
pop
xor
pusha
jbe
inc
inc
xchg
jle
mov
and
pop
xchg
inc
or
ja
xlat
inc
sub
jmp
add
or
outs
idiv
xchg
xor
pop
mov
pusha
xchg
cmp
dec
mov
(bad)
push
push
ret
retf
jmp
sbb
and
jecxz
ins
jnp
call
sbb
inc
mov
lods
rcr
push
pop
xor
push
(bad)
shl
stos
push
pop
dec
lods
pusha
mov
(bad)
std
out
imul
(bad)
mov
dec
xchg
xor
rcl
inc
ret
xchg
add
fcom
sbb
ins
cmp
jbe
bound
sbb
js
loope
sub
(bad)
jnp
mov
mov
popf
repnz
loopne
mov
iret
push
cmp
dec
int3
add
push
pop
pop
jmp
mov
and
imul
dec
pop
sbb
mov
in
fs
imul
mov
adc
or
pop
and
inc
mov
lock
leave
jp
xor
cmp
lods
xchg
jmp
mov
mov
jg
sar
lock
aas
shl
cmp
mov
push
mov
mov
inc
push
lods
adc
mov
ret
or
xor
out
sbb
xchg
cmp
lods
call
iret
mov
clc
sub
out
push
ins
imul
jns
jns
out
pop
cdq
add
push
pop
ja
sbb
dec
sbb
xchg
fwait
or
jbe
stos
or
and
adc
inc
pop
out
lods
fisubr
and
add
in
dec
int3
mov
ret
pop
gs
and
add
jne
or
xchg
push
sbb
pop
mov
in
adc
loope
adc
pop
ret
inc
cmp
sub
les
jl
add
dec
shl
inc
(bad)
rsqrtps
sub
das
int
xchg
mov
aaa
xchg
outs
shl
rcl
cmp
adc
shl
inc
inc
aas
out
dec
ds
mov
call
mov
add
and
jl
sbb
push
and
sub
gs
pop
std
fdivr
dec
fimul
xlat
(bad)
push
jo
fcomp
dec
sbb
cmp
movs
shr
fbstp
xchg
shl
das
pushf
js
lods
(bad)
mov
add
lods
add
sub
adc
mov
cmp
sub
jle
lahf
fwait
ret
pusha
je
sbb
add
mov
cmp
dec
mov
icebp
and
shr
bound
div
shl
loop
jbe
loopne
add
sub
rcr
movs
xor
arpl
push
jns
push
das
int
mul
mov
adc
not
sbb
in
gs
dec
or
cld
cmps
loop
in
sbb
sbb
or
sbb
and
out
repz
xchg
sbb
shl
mov
xchg
cld
xor
mov
mov
mov
rol
imul
adc
ss
jg
fwait
retf
pop
lea
mov
and
add
(bad)
lock
pop
adc
push
clc
mov
and
push
ret
mov
push
dec
in
ficom
mov
pop
mov
movs
adc
and
cmps
aam
pop
and
jmp
and
push
sbb
mov
cli
aas
enter
out
test
loope
retf
sbb
ret
loopne
jmp
mov
ror
shl
xor
or
daa
cmps
popf
repnz
dec
cmp
or
mov
fmul
adc
mov
cmp
add
(bad)
repz
sar
pop
lea
jg
add
ins
adc
aaa
inc
(bad)
cwde
cmp
(bad)
cli
cmps
sti
xor
jns
inc
mov
ja
cld
cmp
xchg
mov
icebp
or
(bad)
stc
call
call
imul
mov
rol
jo
icebp
jmp
jmp
fst
fsubr
mov
cmp
gs
sub
sar
and
sti
mov
dec
lods
mov
xchg
xor
pop
sub
add
fwait
mov
rol
mov
xor
gs
loop
sahf
lahf
push
xchg
jno
(bad)
outs
jno
add
mov
test
stos
xor
xlat
ret
jecxz
xor
lea
jp
lahf
or
inc
cmp
aas
cld
jge
xor
sub
loop
and
mov
popf
(bad)
mov
jo
xor
lods
jge
sbb
and
inc
cmp
push
call
sub
test
jge
sahf
sahf
ret
daa
dec
bound
or
jle
fld
inc
retf
dec
lock
call
ins
mov
movs
mov
cs
int3
stos
mov
push
pusha
call
mov
ror
out
(bad)
out
xor
inc
ja
pop
arpl
fcomp
mov
push
adc
das
sub
int
dec
test
mov
cmp
mov
cmp
mov
out
jno
pop
lods
mov
xchg
mov
inc
mov
hlt
jnp
data16
out
dec
mov
pop
lea
mov
adc
pop
sar
repnz
fisub
and
xchg
jmp
movs
popf
inc
lods
adc
push
out
inc
aas
test
pop
call
(bad)
imul
div
dec
inc
into
push
mov
test
adc
push
scas
mov
jo
movs
mov
sahf
jo
xchg
sub
cmc
xor
xor
fisttp
out
mov
pusha
mov
lock
xor
xchg
cld
test
cmp
push
movs
xor
aaa
inc
inc
aad
jle
rol
cmc
stos
mov
into
sub
aam
jne
inc
sbb
test
inc
into
sahf
mov
cwde
push
fdiv
cdq
loop
mov
xchg
fisttp
push
jmp
fldcw
and
ficom
loopne
dec
adc
pop
(bad)
ins
add
enter
xchg
test
in
sub
cmp
sub
jmp
mov
popa
imul
aaa
out
das
mov
mov
pop
(bad)
sbb
xor
cdq
pop
lds
cmp
sub
pop
dec
out
out
mov
push
xchg
clc
leave
div
xchg
xchg
retf
push
(bad)
sub
outs
or
pop
popf
jmp
mov
and
xchg
jmp
jmp
iret
in
leave
mov
cs
jmp
or
jo
mov
sbb
xchg
ss
fisttp
fmul
ret
jle
jo
push
adc
aaa
xlat
jp
shl
fld
xor
call
in
arpl
lahf
mov
imul
sub
test
loopne
test
stos
(bad)
enterw
mov
jmp
mov
sbb
cwde
out
add
push
xlat
int
gs
(bad)
jnp
xor
stos
adc
outs
xor
mov
mov
ds
xchg
add
ret
cmp
pop
out
adc
lods
push
addr16
lahf
cmps
gs
js
out
(bad)
jge
xlat
aaa
icebp
lds
sar
call
jle
sub
popf
dec
dec
cmp
lods
inc
xchg
sbb
mov
inc
mov
mov
jbe
pop
mov
xrelease
pop
imul
call
lods
(bad)
imul
sar
in
retf
je
ja
push
out
jmp
imul
rcl
ja
leave
push
and
xchg
inc
mov
xchg
mov
mov
cld
push
loop
clc
xchg
jmp
daa
sahf
ret
idiv
mov
and
pop
or
jmp
mov
mov
pop
call
movs
inc
fdiv
ins
sbb
ins
pop
fwait
pusha
sbb
mov
jle
cmps
jns
adc
ds
fsubp
jl
xchg
inc
xor
sub
jle
adc
les
shl
repz
mov
sti
aam
jecxz
push
rol
inc
mov
call
sti
dec
or
popf
outs
pop
aas
nop
loope
movs
addr16
(bad)
ret
enter
mov
in
xchg
jecxz
les
or
push
mov
add
cmps
xor
xchg
jmp
pop
add
hlt
push
xchg
inc
dec
sub
shl
xor
xor
arpl
mov
int
out
and
dec
leave
push
xchg
jne
mov
int
les
push
movs
sub
or
mov
mov
mov
nop
cmp
pop
hlt
jecxz
dec
jbe
mov
xor
xchg
sub
mov
imul
fwait
add
arpl
push
push
push
pop
sahf
xchg
gs
adc
test
pop
or
bound
cmps
pop
not
in
mov
leave
test
fcom
addr16
sbb
dec
jecxz
test
inc
pop
dec
test
imul
jmp
jmp
mov
or
cld
mov
xchg
dec
jb
cs
push
retf
push
xchg
mov
push
mov
shl
shr
mov
pop
and
sar
pop
movs
xor
repnz
aam
pop
pusha
mov
popa
xchg
fwait
xchg
lods
mov
jge
repnz
adc
aas
mov
stc
push
int3
sbb
adc
mov
in
inc
push
xor
out
arpl
loope
dec
pop
pop
in
fst
psubsw
mov
jno
jle
push
cmc
mov
cli
pop
mov
popf
mov
fidiv
sub
repz
jg
jbe
test
imul
dec
mov
sar
adc
fdiv
push
mov
push
outs
and
test
xor
sbb
call
or
xor
ss
dec
inc
fdiv
jae
lea
test
in
lods
jne
dec
fsubr
or
xchg
jbe
adc
retf
inc
inc
into
rcr
push
mov
out
jns
fwait
imul
fsubr
xchg
add
ins
push
out
mov
aaa
inc
xor
into
sub
mov
scas
pushf
iret
mov
ss
ret
add
(bad)
adc
sub
inc
pusha
hlt
jmp
and
add
icebp
in
fdivr
adc
repnz
arpl
mov
dec
push
push
jle
mov
test
sbb
and
mov
shr
mov
repnz
and
dec
std
inc
push
inc
lahf
jnp
sub
or
inc
nop
daa
inc
xchg
loope
xchg
lahf
add
(bad)
sbb
sub
cli
das
into
sbb
xor
pop
mov
mov
pop
sub
xchg
xchg
adc
inc
adc
jbe
(bad)
pop
fs
adc
arpl
out
mov
cmp
push
add
push
adc
cmp
cmc
mov
inc
sub
add
aas
jno
les
fisttp
mov
daa
cmps
add
inc
or
shl
das
js
aaa
mov
pop
loope
add
in
inc
mov
sub
aad
out
mov
mov
add
add
mov
aam
xor
cmp
jp
outs
or
fldz
ds
pop
gs
or
and
cmps
std
adc
cmp
xor
and
ret
pop
or
jmp
cdq
jne
pop
jmp
fdivp
aas
arpl
loop
inc
mov
push
lods
mov
jne
xchg
xor
inc
jbe
push
in
sbb
jmp
and
cmp
jns
frstor
xor
lea
mov
pusha
inc
push
stc
jle
in
inc
int
push
mov
sahf
jne
inc
sub
jp
mov
mov
xchg
repz
sbb
xor
outs
xor
xchg
pop
and
mov
mov
push
pop
mov
ds
in
in
stos
or
push
cmps
pop
(bad)
out
push
xchg
(bad)
icebp
addr16
(bad)
fcomp
dec
push
js
dec
pop
jb
lods
retf
sub
fisubr
push
push
aad
ss
mov
jg
ins
xor
dec
sbb
adc
mov
imul
into
and
push
push
push
in
dec
(bad)
jno
retf
xor
fbstp
pop
pop
push
arpl
jmp
mov
cmp
lock
test
popa
sub
mul
data16
pop
mov
cli
lock
ror
cmp
repz
inc
mov
xchg
dec
dec
ja
sub
fwait
mov
xor
gs
lods
pop
loope
stos
push
retf
mov
dec
mov
mov
sub
adc
sub
test
in
lahf
enter
bound
nop
outs
aam
mov
push
das
xrelease
aad
push
ss
and
cwde
sub
lods
mov
es
mov
bound
mov
ds
inc
pushf
sub
leave
retf
dec
mov
(bad)
cmp
mov
mov
jae
mov
adc
pop
mov
and
jmp
pop
loope
aad
aaa
mov
ror
ins
push
push
dec
iret
call
(bad)
push
nop
repz
data16
addr16
jecxz
fst
push
mov
sbb
pop
cmp
pop
pop
jbe
enter
(bad)
vunpcklpd
dec
or
dec
rcl
std
call
pop
(bad)
mov
xor
pop
aad
mov
jnp
sbb
movs
lods
test
rcl
and
sbb
inc
fwait
jbe
cld
xchg
xchg
cmc
pushf
(bad)
adc
fst
or
dec
xor
xchg
pushf
pop
arpl
leave
cmp
das
xor
pop
sti
mov
out
dec
data16
(bad)
fdiv
cmp
push
mov
movs
movs
cli
dec
clc
adc
(bad)
fs
cmps
repz
cmp
xchg
pop
jne
xor
bound
retf
fimul
(bad)
xchg
cld
das
pop
mov
sub
cmp
xchg
scas
sub
bound
mov
xlat
test
sbb
xor
(bad)
add
mov
mov
mov
cmp
adc
ja
push
mov
add
daa
push
push
outs
push
and
jmp
sahf
ins
xchg
jae
int3
sbb
jle
mov
pop
cmps
shr
sbb
xor
jne
mov
cmps
std
outs
dec
push
ins
push
lea
sti
daa
inc
sub
add
add
pusha
in
dec
or
int
das
loopne
pop
mov
(bad)
sub
add
lea
jp
pop
and
jnp
pushf
mov
sub
out
in
rol
int3
stos
pop
push
aad
mov
xor
inc
je
fisttp
inc
adc
pop
cmp
(bad)
mov
push
test
inc
push
repnz
out
fiadd
ins
mov
dec
out
fwait
sub
xor
cwde
lea
mov
mov
jmp
inc
fnsave
loop
and
test
ja
xlat
xchg
fild
daa
ffree
vpmulhuw
popa
test
(bad)
das
popf
sub
xchg
out
rcr
arpl
xor
mov
mov
mov
pop
fs
rdtsc
nop
(bad)
pop
outs
sbb
xchg
es
std
(bad)
inc
inc
test
(bad)
iret
in
xor
mov
push
cmp
ins
test
call
rcr
and
or
add
push
in
dec
push
cmp
push
cmp
jmp
idiv
imul
pop
repnz
or
sbb
adc
iret
mov
ds
bnd
sub
pop
pushf
mov
int
inc
cdq
pop
or
mov
jmp
pop
xchg
xchg
mov
jmp
adc
shl
out
lock
iret
mov
mov
fcomp
add
inc
pop
(bad)
shl
jecxz
jnp
cmp
and
jae
jns
sahf
add
outs
sub
jns
xor
test
sbb
jp
xchg
adc
shl
pop
inc
sahf
icebp
push
iret
mov
aam
(bad)
movs
push
retf
mov
mov
lods
and
icebp
push
in
jmp
cli
ds
cdq
(bad)
sbb
ror
ret
mov
jecxz
sbb
pop
add
addr16
sbb
mov
jnp
sbb
ss
lods
mov
mov
mov
ins
xchg
adc
add
pop
and
aad
sbb
lock
pop
out
dec
jle
jmp
xchg
(bad)
clc
imul
pop
dec
enter
out
sub
rol
xchg
not
xor
cmps
and
xor
mov
rcl
movs
push
dec
aam
dec
inc
cmps
push
outs
mov
sub
outs
dec
gs
and
ret
sahf
out
inc
rcr
(bad)
xchg
mov
mov
jo
push
gs
movs
add
jecxz
push
lea
imul
lock
nop
push
jge
xor
repz
fld
out
inc
iret
mov
inc
mov
push
xchg
into
sbb
mov
xor
pop
mov
sbb
jge
sbb
sbb
neg
outs
sbb
aaa
mov
push
push
mov
in
jae
dec
daa
mov
inc
inc
mov
repz
mov
adc
out
es
jp
adc
xchg
inc
neg
dec
adc
shr
ror
sub
push
pushf
and
je
(bad)
pop
out
outs
les
ins
mov
sti
push
out
cs
xor
(bad)
movs
(bad)
out
mov
fsubp
xchg
(bad)
ror
mov
xchg
mov
inc
dec
mov
sahf
sbb
jle
pop
dec
pushf
pop
sbb
dec
and
loope
mov
jge
push
retf
inc
shr
sahf
adc
xchg
pusha
pushf
sbb
icebp
inc
cli
ds
inc
hlt
call
mov
stc
fld
fidiv
mov
jmp
mov
in
das
add
lock
pop
scas
xchg
mov
jne
ss
jbe
mov
mov
jge
push
and
and
rcr
jne
nop
add
sar
xlat
inc
push
jle
cmp
sar
pushw
shl
jnp
aam
push
outs
push
adc
push
and
loopne
dec
push
mov
icebp
or
jle
les
ret
mov
adc
or
test
sub
and
out
cmp
jg
and
(bad)
pop
lock
sti
jno
ret
jbe
bound
xor
sub
(bad)
fisttp
dec
or
gs
shl
jmp
outs
push
es
xlat
cmps
jge
in
in
pop
popa
and
jg
sub
bound
std
inc
cmp
or
(bad)
out
mul
repz
push
and
mov
fimul
sub
arpl
jecxz
mov
xchg
xchg
lods
test
scas
sub
stos
mov
jp
enter
xchg
mov
movs
loopne
cwde
sbb
adc
xchg
pop
mov
rcl
ret
aas
popa
adc
xchg
push
leave
dec
fbld
push
ficomp
ret
pusha
cwde
xor
jmp
add
iret
call
xchg
aam
shl
nop
outs
or
das
out
inc
imul
std
xor
clc
lahf
js
cli
aad
fpatan
mov
add
ins
inc
adc
push
outs
mov
dec
sbb
sub
aaa
adc
and
and
pop
xor
rol
cmp
xor
fimul
xchg
fmul
jo
push
(bad)
in
xor
fsub
sbb
xor
(bad)
lods
repz
fldcw
jns
and
mov
retf
cmps
mov
arpl
ins
sbb
xchg
cld
into
cmps
dec
(bad)
jo
out
icebp
repnz
pop
hlt
aam
mov
call
repz
xchg
cmc
xchg
adc
(bad)
mov
mov
in
or
(bad)
in
and
test
mov
ficom
add
jge
mov
sbb
scas
xchg
push
cmp
mov
les
aas
cmps
push
lds
adc
xchg
movs
jp
mov
(bad)
call
pop
(bad)
pop
cmp
xchg
push
int
mov
mov
out
loope
mov
jl
call
mov
test
push
hlt
idiv
or
jmp
fmul
push
cmp
js
nop
sub
test
add
sbb
clc
jp
fidiv
xor
cmp
pop
test
and
mov
cmp
jb
ret
sbb
fdivr
push
cmp
mov
inc
addr16
cmp
jno
jge
or
xchg
or
int
and
fild
mov
cmp
aam
xchg
push
mov
ins
icebp
pop
iret
pop
dec
jle
stos
sub
sbb
rol
out
sbb
fldenv
inc
push
inc
sar
cmp
or
inc
push
out
xchg
cmp
je
dec
cmps
ret
outs
in
mov
repnz
sar
out
nop
mov
pusha
icebp
mov
jbe
sbb
adc
mov
dec
test
fxch
nop
xchg
ins
sub
lods
movs
xor
mov
or
jp
adc
xor
out
movs
pop
sub
test
int3
fisubr
scas
xor
nop
pusha
xor
fdiv
icebp
sub
jno
and
and
xlat
dec
int
xor
imul
jecxz
test
xchg
fmulp
pusha
fmul
push
test
inc
mov
sbb
mov
cld
mov
dec
mov
retf
adc
cmc
iretw
fs
in
fidivr
fld
cdq
fsub
adc
pop
xchg
lods
mov
(bad)
nop
cmps
bound
sbb
mov
int
xor
xor
add
mov
js
ror
fwait
repz
push
in
sbb
adc
xchg
jge
jge
adc
mov
push
push
jns
sbb
into
and
rcr
or
mov
mov
mov
shl
adc
or
and
and
sar
test
mov
ins
ds
loope
loopne
mov
(bad)
hlt
fwait
(bad)
jnp
iret
aaa
test
shl
aaa
aaa
push
pop
leave
sub
xchg
add
test
pop
out
inc
add
inc
push
std
sbb
lds
daa
push
iret
repnz
cwde
sbb
int3
xor
jo
in
push
(bad)
nop
shr
lea
mov
sbb
cmp
cli
dec
rcr
xor
inc
inc
pop
call
pextrw
js
in
pusha
sbb
dec
push
jne
mov
xchg
mov
into
inc
hlt
sub
dec
jnp
adc
fmul
pop
sbb
or
pop
push
cmp
mov
push
test
call
ficomp
pop
push
mov
into
push
daa
mov
(bad)
jns
push
aad
cmps
dec
jae
repz
out
inc
test
je
inc
aad
inc
gs
dec
push
jp
dec
outs
adc
push
pop
ds
sti
movs
inc
xchg
mov
aam
mov
add
movs
fsubr
test
les
(bad)
sub
push
std
loope
and
mov
mov
adc
adc
cwde
ret
jae
into
test
movs
arpl
ss
mov
aad
out
call
jmp
sub
pop
mov
xchg
ror
xor
mov
push
int
adc
(bad)
mov
push
icebp
pusha
cs
mov
shr
sar
into
add
sbb
adc
out
(bad)
fldcw
rol
and
sub
outs
dec
sbb
ja
sub
cwde
pushf
cmp
adc
in
test
and
cmp
sahf
shl
imul
jg
dec
hlt
inc
sar
int3
add
sar
jmp
sub
mov
retf
mov
push
jp
mov
aaa
stos
add
test
cmp
pop
xchg
mov
add
xchg
cmp
sbb
sbb
jbe
mov
sub
inc
movs
add
cmps
fild
in
vunpcklps
sahf
jb
sub
sub
retf
push
push
mov
jmp
xor
pusha
inc
and
(bad)
bound
xor
fwait
pusha
rcr
out
ins
lock
imul
or
mov
jge
shl
sub
push
dec
jbe
out
lds
jb
cmp
mov
in
lea
push
pop
push
or
push
or
stos
test
dec
pop
adc
adc
or
push
mov
iret
mov
sub
addr16
push
pop
and
sub
and
adc
jmp
xchg
cmps
fstp
(bad)
lds
inc
mov
or
xchg
fstp
fcmove
jne
sbb
jnp
outs
and
fist
cmp
(bad)
inc
cmc
clc
inc
adc
sub
inc
fidiv
jbe
imul
fcomp
lgs
mov
arpl
addr16
jmp
das
out
xor
adc
xchg
or
sti
(bad)
shl
mov
xchg
or
pusha
xchg
sti
add
xchg
pop
xor
mov
xchg
pop
mov
and
aaa
push
fwait
dec
xchg
(bad)
in
lods
xchg
push
cmp
adc
test
pop
cs
frstor
cmps
(bad)
aad
inc
loopne
mov
cmp
bnd
xchg
mov
adc
loope
and
xchg
mov
add
lss
(bad)
xor
jmp
adc
mov
jl
lds
enter
nop
mov
mov
inc
sub
mov
out
inc
xlat
xchg
inc
or
hlt
popa
add
mov
dec
aam
jb
xor
jo
pop
dec
stos
out
jno
imul
xchg
ins
sbb
clc
or
dec
xchg
test
cmp
(bad)
rcl
mov
push
xor
mov
cwde
icebp
stc
test
jne
sbb
in
repz
jge
in
scas
mov
ins
rcr
sub
jle
pop
frstor
mov
or
or
add
and
(bad)
mov
imul
fisub
inc
cmp
icebp
outs
in
loope
cmp
add
aas
adc
mov
mov
rol
mov
into
jmp
xlat
mov
dec
(bad)
add
xchg
das
pop
nop
adc
sar
outs
aad
xor
cmp
mov
arpl
es
loope
movs
push
(bad)
cld
retf
pop
adc
fistp
jae
ins
xchg
push
sub
mov
cmc
push
jbe
(bad)
into
sub
jns
cld
mov
scas
cmp
add
add
outs
sbb
cmps
lea
xchg
cmp
jno
sub
xchg
sub
imul
xor
(bad)
scas
sub
in
nop
mov
cmp
jno
add
fstp
mov
sbb
or
push
jns
push
jl
cmps
stc
jbe
cmp
add
iret
adc
frstor
fs
add
repz
jg
mov
mov
jmp
mov
(bad)
loope
scas
adc
or
cs
or
inc
lods
aad
std
clc
sar
shl
int3
mov
(bad)
dec
loopne
daa
jmp
mov
push
nop
data16
xchg
lock
popa
cmps
dec
push
rcr
mov
mov
sub
jle
sbb
mov
push
(bad)
lods
ret
cs
xchg
and
jl
aam
jp
pop
fild
mov
mov
imul
mov
popf
test
and
loop
sahf
xchg
add
fstp
xor
std
sbb
mov
out
ja
add
ins
xchg
xchg
das
dec
ins
pop
push
in
pop
fimul
int
mov
mov
fsubr
stc
shr
add
push
dec
aad
cld
fcomi
repnz
and
dec
(bad)
lods
aas
or
jg
(bad)
adc
arpl
dec
ins
jno
test
aad
lea
ja
cmp
retf
mov
adc
in
cmc
push
loop
mul
dec
dec
retf
jmp
adc
xchg
out
push
outs
push
das
jecxz
pop
mov
xor
pusha
dec
stos
bound
xor
mov
arpl
stos
(bad)
aaa
cli
jbe
xchg
sar
es
ss
or
imul
jns
test
push
(bad)
pop
inc
adc
or
add
mov
cld
push
inc
mov
sar
pop
or
inc
mov
xchg
rol
mov
lea
adc
not
ins
or
das
cmp
es
xchg
xchg
pop
inc
or
sti
cld
arpl
je
jmp
jnp
mov
hlt
rcr
and
pop
push
sub
pop
sbb
fist
inc
test
jmp
aas
aas
mov
push
mov
inc
ror
fnstcw
jge
in
ret
inc
and
out
ins
mov
jae
push
add
inc
pop
shl
mov
sub
add
loop
sub
and
rcr
xor
mov
fisub
ret
push
mov
adc
jne
mov
int
int3
sub
test
ins
xchg
mov
repnz
mov
or
sub
sbb
scas
sub
inc
stc
xor
mov
pop
(bad)
into
adc
cmp
in
out
pop
mov
repnz
and
bound
sub
cmp
ss
fstp
lods
push
jo
daa
or
leave
mov
in
clc
inc
inc
(bad)
pop
jno
or
adc
ds
inc
fwait
and
cli
sub
dec
leave
jge
ficom
out
mulsd
movs
sub
sbb
in
pop
or
jnp
call
sbb
mov
push
(bad)
repnz
and
pop
ins
out
xor
sub
mov
lds
fstp
jns
add
add
inc
lods
mov
into
mov
xchg
shl
mov
adc
cmp
push
test
pop
daa
inc
push
cmp
and
cmp
push
adc
movs
mov
call
pop
(bad)
jmp
pop
cmp
xor
in
pop
ror
add
imul
sbb
call
cmps
loopne
out
out
sbb
int
cmp
pop
shl
jno
out
xchg
push
xchg
mov
(bad)
movs
jge
jnp
sub
ins
(bad)
cli
inc
popf
push
xor
in
inc
faddp
push
fdivr
into
gs
mov
xor
lea
dec
xlat
in
retf
ins
cmp
std
inc
and
ret
add
push
in
rcr
(bad)
popa
or
imul
or
sbb
outs
lea
lods
jno
imul
pop
scas
inc
scas
sub
popf
jbe
mov
jo
repz
(bad)
retf
inc
add
in
jle
mov
out
xchg
sahf
mov
mov
xchg
or
mov
loop
inc
gs
scas
lds
pop
pop
sbb
xor
sahf
adc
jg
fidivr
xchg
cmc
dec
or
xor
xlat
xor
mov
mov
or
std
scas
and
xchg
mov
pop
in
pop
and
xlat
jge
fbld
clc
jle
jmp
lods
adc
push
mov
add
mov
sbb
sub
add
mov
xchg
ret
cmp
jp
xlat
inc
cdq
push
arpl
xchg
cmp
mov
arpl
fmulp
popa
ss
jbe
inc
adc
aas
mov
add
sub
lods
lods
xchg
outs
sti
and
or
outs
sbb
mov
or
aaa
pop
adc
xor
xor
(bad)
jmp
add
mov
ins
movs
loope
jne
push
cmp
scas
(bad)
fnsave
jecxz
ror
js
call
imul
nop
add
add
je
cs
jmp
nop
cmp
(bad)
jge
in
sub
xchg
aas
cmp
mov
and
les
inc
inc
js
mov
sub
js
jo
or
shl
dec
sub
rol
sub
push
cmc
mov
sbb
pop
dec
xchg
push
xor
int3
cmp
aam
mov
aam
adc
nop
xacquire
fldcw
cli
jmp
les
imul
aad
and
inc
add
mov
dec
lea
fistp
inc
xor
sub
mov
mov
aam
test
xchg
xchg
lahf
pop
push
aas
mov
outs
sbb
or
pop
sbb
enter
aam
xchg
and
pop
lock
pop
push
jae
sar
mov
js
fwait
ins
(bad)
(bad)
cmps
ja
fwait
jle
mov
popf
fnstcw
cwde
mov
xchg
cmp
or
mov
cmp
inc
aam
mov
repz
stos
push
inc
fcom
inc
and
add
sbb
pop
xchg
jo
imul
stc
ins
dec
and
sahf
pop
je
mov
pop
push
sub
jb
(bad)
int
mov
xchg
call
lahf
or
aad
ficomp
loope
cli
xchg
mov
mov
jno
inc
dec
jno
mov
or
int3
je
mov
js
ja
cs
mov
mov
sub
add
adc
(bad)
daa
adc
sbb
mov
push
loop
lods
inc
push
mov
cld
xchg
hlt
aaa
jmp
add
ret
nop
std
or
sar
sbb
sbb
ds
jo
mov
and
mov
sbb
pop
es
sub
test
mov
xor
adc
mov
push
pop
popf
push
and
inc
div
sbb
in
mov
out
loopne
xor
xchg
test
(bad)
movs
ds
fst
lods
cli
cmps
dec
gs
jns
and
xchg
jne
or
sbb
push
and
out
out
ret
xlat
outs
das
add
test
dec
dec
cmp
nop
push
or
pop
retf
xchg
hlt
push
pop
xchg
pop
mov
xor
ins
jmp
inc
cmp
push
loopne
sub
icebp
shr
push
ret
movs
xchg
(bad)
outs
push
(bad)
in
jle
mov
dec
stc
xchg
fnsave
cmp
in
sbb
mov
xor
in
fiadd
jno
dec
(bad)
push
jae
aas
je
(bad)
jmp
adc
cdq
mov
lods
push
outs
pop
jmp
mov
cmps
sub
pop
cld
mov
dec
jo
imul
pop
xor
mov
call
shl
pop
push
addr16
xlat
mov
fistp
sub
popf
cmp
and
in
sub
fwait
dec
daa
js
xlat
mov
out
sti
jne
test
test
call
inc
add
dec
aas
cmp
push
pmullw
mov
cdq
clc
fucomi
test
rcr
pop
lods
scas
js
je
lods
add
mov
fisub
xor
cmp
ret
aaa
loop
adc
loopne
test
mov
repnz
jbe
(bad)
call
ja
sub
repnz
in
push
jge
mov
pop
test
test
(bad)
shr
scas
mov
stos
je
(bad)
and
rcl
arpl
imul
test
and
dec
xor
or
dec
sub
movs
daa
sub
mov
sahf
idiv
mov
xor
push
xor
add
int3
cld
mov
xor
(bad)
(bad)
movs
mov
cmps
cdq
pop
ins
add
add
nop
out
jmp
inc
imul
push
pushf
aad
jmp
out
aaa
outs
test
aas
add
adc
cmp
movs
jmp
pop
adc
sub
push
mov
cmp
test
cdq
inc
lahf
mov
sti
cmp
in
xchg
arpl
lods
iret
or
movs
fst
rol
pop
jmp
cmp
xchg
pop
xlat
movs
dec
or
sub
fmul
cld
(bad)
repz
push
pop
sbb
inc
out
jecxz
push
xchg
adc
xor
jmp
xor
fistp
test
icebp
dec
inc
ret
pop
(bad)
cmp
rol
or
test
push
pop
stos
adc
push
dec
stos
and
aad
jl
push
mov
inc
or
adc
inc
push
add
sbb
push
inc
rep
sub
fbstp
ins
jb
mov
mov
iret
or
rol
jb
out
mov
add
cdq
pop
nop
mov
pop
jns
push
pop
push
test
ds
adc
ret
adc
or
fdivr
inc
add
ret
push
ds
ins
or
xchg
sbb
pop
mov
and
pop
fs
inc
jae
mov
mov
loop
les
stos
retf
sahf
std
push
or
xchg
xchg
pop
jae
cmp
inc
mov
mov
test
inc
cmp
daa
(bad)
adc
xlat
or
data16
sbb
shr
popf
gs
mov
mov
nop
push
stos
pusha
xchg
and
sub
inc
cld
loope
jmp
fistp
xor
ret
pop
add
sahf
push
mov
mov
fistp
sub
mov
fs
inc
movs
push
push
ror
sub
clc
mov
inc
aad
sbb
jno
inc
push
cmps
cdq
xchg
adc
ficomp
and
(bad)
call
es
sbb
sub
xchg
add
out
jb
cmps
test
add
ret
sub
pop
inc
xor
mov
cmp
adc
and
in
mov
enter
stos
cmps
mov
mov
mov
outs
cmp
add
repz
shr
jnp
push
out
inc
je
loope
popa
mov
xchg
cdq
jbe
or
jne
aam
mov
inc
jmp
pmaddwd
cwde
and
jbe
mov
ret
pusha
loop
outs
push
cmp
sti
lods
ror
xchg
ds
push
fbld
pop
or
ds
pop
mov
(bad)
xor
outs
xchg
pop
fs
popw
lds
pop
push
push
neg
sub
mov
lea
dec
cmp
icebp
shl
lock
mov
ss
aas
mov
pop
out
fldenv
stos
xchg
cmc
adc
add
repz
mov
dec
aad
out
inc
jl
nop
stos
mov
loope
or
inc
pop
pop
pop
addr16
ret
pusha
mov
mov
ds
xchg
push
mov
outs
mov
imul
imul
cmc
call
ds
add
cmp
(bad)
pop
sbb
popa
retf
aam
fadd
mov
or
inc
dec
mov
mov
xor
or
jmp
fmul
or
mov
test
gs
call
shl
dec
cmp
cld
inc
xchg
movs
in
dec
pop
rcl
(bad)
adc
js
pop
imul
xor
sar
or
jne
adc
sti
xor
add
jne
scas
dec
jl
repz
ds
push
push
jno
pop
and
(bad)
cli
in
push
retf
psubusb
pop
shl
jg
jl
cdq
dec
xor
or
sbb
ret
push
mov
add
pop
xor
pop
mov
in
out
mov
sub
push
jg
test
push
xchg
rol
shr
pop
je
mov
outs
xor
je
cmp
lods
xor
push
fcmove
push
shl
adc
fstp
mov
jge
bound
retf
mov
adc
test
or
movs
gs
push
cli
sbb
std
inc
jge
sti
add
xlat
ret
pop
test
dec
test
shl
not
jnp
mov
sti
popa
jp
mov
adc
sbb
(bad)
jg
sub
xchg
inc
xchg
js
pop
repnz
jge
push
mov
sti
sti
mov
test
mov
mov
lods
push
inc
popa
mov
mov
and
pop
cmps
loope
xor
test
mov
mov
and
popf
adc
push
pop
into
adc
cmp
leave
jae
stc
data16
cwde
adc
or
mov
jmp
mov
xchg
mov
pop
(bad)
push
sti
gs
repnz
dec
jb
xlat
xchg
imul
cmp
mov
call
inc
jecxz
jbe
and
fcom
pop
or
cmc
shl
adc
outs
into
dec
jno
hlt
retf
test
es
jecxz
es
sbb
test
inc
cli
enter
jecxz
int3
jae
push
mov
jmp
outs
ins
aad
cwde
jmp
int3
in
and
fiadd
mov
iret
(bad)
into
pop
pop
lahf
mov
xchg
add
test
cli
dec
daa
add
push
fbld
mov
repnz
inc
loopne
aaa
pop
mov
xchg
or
jp
fild
(bad)
jae
jg
sbb
mov
fwait
sub
and
outs
rcl
xor
ret
(bad)
fiadd
(bad)
cmp
lods
movs
and
loop
adc
fwait
jp
cmc
dec
out
icebp
or
and
imul
test
cmp
rcl
xchg
adc
ins
movs
loop
mov
pop
pop
xchg
sahf
inc
jae
clc
and
mov
jbe
retf
dec
in
cmp
xor
cmp
xchg
(bad)
scas
fwait
cmc
cmp
lds
in
jg
xchg
dec
dec
test
push
xchg
out
icebp
and
jmp
xor
leave
stos
pop
(bad)
adc
jne
sub
add
xor
ins
fmul
fstp
dec
vpsrld
jg
lea
sbb
and
xchg
sub
inc
push
in
sbb
(bad)
xlat
cmp
mov
dec
pop
inc
inc
std
jmp
cs
shl
mov
mov
shr
jmp
inc
xor
cmps
push
xor
rcl
es
les
cmc
mov
jmp
xlat
xor
cmc
add
adc
in
cld
adc
or
out
std
xlat
imul
(bad)
and
ss
or
or
pop
cmp
cmp
or
ret
cmp
push
rcr
push
xor
sub
int3
pop
daa
jg
pop
cmp
jle
movs
in
adc
shl
mov
rcl
mov
sub
icebp
ret
mov
mov
(bad)
sbb
sar
pusha
mov
in
xor
out
fild
arpl
sbb
mov
jnp
sub
call
pop
(bad)
dec
sub
test
or
inc
cs
pop
sub
in
jb
shl
pop
add
inc
std
aad
push
mov
enter
repz
setl
les
xlat
into
xchg
fcomp
jb
enter
pushf
mov
sub
call
mov
add
and
lea
test
in
dec
mov
imul
mov
xchg
push
jns
aaa
enter
test
mov
mov
pop
sbb
out
add
ss
dec
je
or
scas
or
jns
mov
pop
lahf
push
mov
mov
push
stos
or
and
fwait
push
(bad)
jmp
neg
sbb
add
outs
stos
div
int3
pop
inc
sub
mov
call
jle
jae
jle
into
push
ja
(bad)
push
ficomp
mov
jne
pop
retf
cmps
fst
jl
add
dec
sbb
adc
es
ror
(bad)
cmpps
fcomp
cdq
retf
and
in
lea
and
lock
loope
test
mov
or
xor
xor
mov
and
push
dec
push
daa
add
(bad)
jp
ja
jno
or
fs
mov
cmps
pop
push
iret
push
ficomp
mov
mov
cmp
sbb
xor
inc
or
out
cmps
ficom
leave
pop
seto
mov
cmps
mov
movs
retf
add
rcl
inc
lds
or
inc
cs
retf
inc
and
push
fsub
arpl
jmp
int3
rol
outs
inc
jnp
push
sar
jno
das
lds
push
xor
xor
rol
mov
dec
push
shl
hlt
or
ret
jmp
cs
aad
jns
test
mov
lock
sub
dec
xor
retf
xchg
imul
dec
xchg
(bad)
pop
mov
sbb
rcr
jae
xchg
fs
std
dec
sub
dec
adc
loope
xchg
retf
pop
shr
in
int
xchg
out
mov
cmp
in
fidivr
mov
das
repnz
fucomp
ins
gs
out
(bad)
xor
or
fwait
or
out
inc
jnp
pop
sti
out
retf
aam
ret
pop
ins
xchg
mov
pop
jb
pop
sahf
pop
cmp
loope
test
add
mov
cmp
imul
and
xor
jno
scas
inc
daa
clc
push
adc
jnp
mul
xor
and
mov
icebp
push
cmp
fcomp
jno
xchg
mov
scas
dec
add
in
and
dec
push
mov
adc
push
std
aas
sbb
js
movs
pop
or
and
es
pop
loope
shr
add
dec
imul
cmp
mov
xchg
add
bound
je
test
sub
out
add
retf
aas
ror
mov
sub
cmp
out
xchg
push
imul
fst
stc
jmp
jge
inc
test
jae
pop
pop
inc
and
mov
cmp
xchg
fucomp
cs
iret
loope
sub
ds
ss
add
or
mov
rcl
inc
repz
mov
rcl
push
push
pusha
cmps
xor
fdiv
mov
cmp
arpl
or
sbb
lock
das
stc
push
rol
xchg
mov
jb
retf
add
call
mov
cmp
pop
sub
cld
lds
das
out
adc
fimul
pop
mov
adc
lock
sbb
xor
jp
(bad)
call
je
mov
das
and
mov
call
mov
repnz
daa
test
pop
push
(bad)
call
push
push
aaa
xchg
adc
hlt
das
icebp
mov
sub
mov
mov
fsubr
ds
xor
fs
and
call
xor
push
pop
pop
(bad)
xor
add
fdiv
(bad)
push
(bad)
ins
shl
call
daa
xor
ret
jp
icebp
ret
xor
(bad)
call
shl
das
imul
jmp
and
adc
and
je
in
or
xor
ins
mul
pop
xor
ds
adc
sti
dec
sub
test
inc
push
aaa
cmps
nop
adc
push
and
pop
lahf
out
push
sub
and
inc
sbb
repz
jno
mov
dec
xor
(bad)
fmul
dec
sub
pop
stos
and
mov
add
cwde
mov
test
cmp
sbb
hlt
pop
cmp
xchg
inc
popf
fucomi
mov
out
cmc
xchg
fdivr
cmp
sahf
arpl
push
or
push
ds
or
pop
xor
std
xor
ret
lahf
dec
xor
xchg
jmp
sub
mov
pop
cld
mov
sub
fst
and
sub
cmp
ret
or
push
xchg
inc
mov
hlt
add
push
sbb
mov
stos
cmp
pop
call
jmp
mov
mov
pop
sub
sub
bound
mov
dec
mov
inc
popa
or
xchg
aas
mov
pop
jl
push
leave
push
lock
fidiv
mov
repnz
inc
mov
xchg
push
int
mov
retf
test
push
in
push
xchg
dec
cmp
leave
mov
xor
gs
adc
sub
stos
pop
int3
pop
fidiv
test
mov
sbb
aad
clc
add
sub
fimul
loopne
xchg
dec
jno
push
push
jo
loope
adc
in
scas
sbb
mov
ss
loope
mov
mov
jo
lods
jmp
loope
imul
push
jg
sbb
sbb
sub
push
imul
in
test
add
mov
aam
aas
xchg
hlt
push
or
mov
push
mov
push
pop
xor
push
lods
or
pop
sub
aam
retf
and
inc
or
add
push
clc
mov
jns
mov
jb
(bad)
xchg
test
dec
sbb
push
lds
add
mov
and
popa
sbb
push
jne
and
xchg
push
idiv
add
inc
adc
retf
and
add
fild
lahf
dec
adc
add
dec
and
lds
(bad)
repz
xchg
inc
xchg
pop
push
mov
call
or
xchg
sub
cmps
pop
dec
pop
stc
sbb
into
cli
loope
mov
and
aas
test
test
mov
repz
fstp
mov
ret
pop
popa
icebp
dec
jae
movs
scas
popf
mov
imul
pop
pop
jbe
dec
das
xchg
jg
xor
add
push
loop
repnz
or
xlat
cmp
(bad)
push
cld
lahf
and
fld
push
add
pop
(bad)
out
pop
idiv
pushf
stc
jnp
xlat
jmp
pop
adc
into
fisubr
or
test
imul
cmps
jge
test
mov
sar
data16
or
pop
push
and
int3
cwde
sub
lahf
sbb
iret
inc
adc
repnz
sub
mov
sti
add
fdiv
sub
adc
dec
dec
mov
mov
xor
ins
sbb
aad
shr
pop
pusha
and
das
lods
ret
push
mov
inc
ficom
ja
cmps
mov
jns
mov
(bad)
std
rol
and
das
out
and
mov
mov
xor
in
idiv
jbe
test
xchg
in
mov
not
fistp
lea
or
inc
scas
popf
ins
ja
ins
or
inc
xchg
ja
in
ds
sbb
pop
xchg
inc
es
jecxz
fbstp
retf
in
repnz
push
(bad)
movs
mov
add
test
and
movs
in
jg
blsic
adc
(bad)
(bad)
push
fistp
mov
imul
inc
jns
mov
in
das
(bad)
lahf
jecxz
repnz
lods
stos
adc
mov
jmp
arpl
jl
or
idiv
jae
inc
sbb
mov
and
popa
add
fst
(bad)
pusha
and
fst
jnp
xor
ror
repnz
mov
sbb
stc
gs
xchg
xor
sub
and
mov
mov
pusha
mov
lock
cld
(bad)
mov
scas
clc
nop
aad
and
lea
iret
push
pop
jae
cmp
movs
cmp
ins
pop
in
sbb
mov
iret
pop
mov
jne
jo
inc
bound
inc
add
xlat
sbb
fdiv
or
cmp
push
and
mov
repz
js
xchg
les
pop
sbb
daa
idiv
dec
sbb
dec
and
jae
mov
(bad)
mov
mov
fimul
cmp
or
mov
adc
in
sbb
(bad)
ins
int
jnp
and
sub
mov
out
mov
cmp
mov
les
xor
rcl
clc
fidiv
lock
retf
sub
cmps
jmp
fidiv
inc
js
cmp
cmp
out
stos
cmp
fisub
les
call
sbb
test
cmp
ins
mov
adc
js
in
int
sar
es
rol
int
xchg
add
fsub
std
cdq
dec
sbb
nop
push
call
(bad)
xchg
jmp
lods
mov
mov
es
mov
sub
pop
xor
jnp
push
inc
xor
popf
sti
pop
retf
cmovle
loop
sub
mov
in
pop
inc
add
rcr
add
mov
push
ins
(bad)
mov
sbb
inc
stos
nop
jecxz
leave
popf
data16
jno
xlat
inc
pop
jae
push
jge
cmovno
push
xor
or
test
out
repz
mov
cmc
es
cmp
and
les
sbb
cmp
cmps
mov
sub
push
out
push
or
aam
mov
pop
jbe
les
add
mov
mov
(bad)
cs
pop
pop
clc
ins
lock
pop
sbb
div
stos
pmullw
ret
inc
out
test
js
sar
rol
add
in
add
out
(bad)
lahf
scas
shr
out
test
mov
fwait
sub
cwde
fisttp
jp
test
pop
xchg
(bad)
or
sar
mov
ror
shl
jl
repz
add
adc
inc
push
lds
push
pop
adc
int
popf
inc
pop
and
cmp
xchg
dec
enter
pop
and
push
inc
push
jno
and
rol
cmps
pop
int3
(bad)
fisttp
jns
ffreep
sub
fisub
inc
stos
sti
push
mov
or
add
aas
jne
add
leave
jmp
or
loop
xchg
or
or
xor
xor
jge
cmp
inc
test
xor
addr16
popf
mov
pop
(bad)
sbb
mov
loopne
push
daa
lahf
inc
mov
xor
scas
(bad)
pop
(bad)
push
add
jae
and
mov
in
in
pushf
and
cmc
add
aad
div
lods
mov
ret
pop
movs
push
push
repz
(bad)
loope
ficom
das
test
mov
mov
sub
adc
push
(bad)
add
xchg
mov
or
sub
cmp
loopne
sbb
retf
mov
iret
jo
loop
ficomp
mov
bound
mov
jne
sahf
ss
jp
mov
xchg
sbb
shr
enter
cmp
sub
mov
pop
sub
inc
not
aam
cmp
sbb
mov
dec
repz
or
pop
or
outs
ja
push
leave
lock
push
popf
mov
jl
mov
aas
or
inc
lods
push
pop
sbb
xchg
pop
mov
push
cld
lds
movs
and
pop
fwait
cmp
xchg
jns
shl
repnz
or
aam
push
pop
int3
dec
arpl
fwait
pop
push
test
out
mov
xchg
cmp
ins
push
pop
cmc
jmp
jmp
rcl
stos
or
mov
and
cld
push
and
pop
das
not
xchg
mov
push
xor
push
sub
sub
mov
cmp
jb
fild
daa
mov
addr16
retf
and
cmp
and
adc
fmul
jge
mov
test
in
push
mov
fdivr
in
mov
push
mov
dec
sti
push
fisttp
xchg
cmp
les
test
call
in
fucomip
rol
cmps
cmp
ja
jbe
xor
cmp
arpl
inc
inc
jmp
shr
sahf
push
or
jmp
idiv
cmp
pushf
cmp
mov
push
push
nop
cmp
adc
adc
jmp
xor
add
jle
cmp
dec
dec
jb
sahf
mov
mov
jp
jbe
mov
add
repz
retf
push
xor
inc
push
xchg
adc
cwde
rol
ins
xchg
test
popf
xor
push
and
inc
jnp
mov
sub
cmp
and
hlt
in
dec
mov
sub
into
xor
mov
hlt
dec
out
sbb
rcl
lods
(bad)
jbe
and
(bad)
outs
push
in
ds
or
les
sbb
add
push
or
xor
xchg
test
es
retf
add
push
(bad)
arpl
ret
clc
jne
mov
xor
(bad)
out
dec
add
lock
sbb
push
jo
push
lahf
dec
movs
cmp
pushf
sub
shr
mov
push
jg
call
xchg
and
out
pop
jecxz
or
mov
and
dec
adc
popf
in
mov
and
test
(bad)
cs
sbb
mov
dec
mov
pop
cwde
enter
pop
pop
data16
xchg
mov
push
add
cmps
shl
inc
or
cmps
pushf
pop
jg
mov
call
mov
data16
mov
push
dec
into
and
inc
sbb
add
xchg
cmps
dec
jmp
push
aas
(bad)
and
push
cmp
test
mov
jecxz
xor
dec
mov
pop
add
push
and
lahf
je
inc
outs
in
scas
jne
retf
aaa
out
pop
xchg
push
mov
and
lea
jmp
jo
pop
lock
mov
mov
push
pop
imul
repz
pop
std
jb
mov
cs
cmp
pop
(bad)
sbb
pop
jge
and
push
icebp
xor
dec
stos
pop
mov
jae
pop
xchg
outs
scas
mov
xchg
cmps
dec
jne
dec
cmc
or
pop
sub
int3
add
shl
in
dec
mov
and
stos
add
xlat
aaa
dec
pop
push
and
or
add
pop
push
fimul
ds
in
out
cli
mov
pop
mov
jl
lahf
cmp
add
outs
sbb
xchg
inc
in
lahf
stc
das
(bad)
jmp
shl
mov
mov
pop
push
mov
nop
inc
xchg
rol
stos
imul
pop
pop
das
mov
dec
jnp
loop
sub
cmp
rcl
daa
xchg
pop
int
les
test
out
or
or
rcl
ins
fdivr
popa
inc
shl
cmp
jecxz
pop
or
hlt
dec
imul
aad
sbb
adc
data16
mov
mov
clc
scas
sahf
inc
push
mov
out
repz
lds
add
jge
hlt
jo
in
ins
es
mov
sbb
dec
pop
cdq
je
mov
sti
push
xlat
sub
or
push
pop
inc
pop
jle
mov
fucomp
add
aam
aas
or
retf
or
dec
jns
fsub
xchg
mov
aam
cmp
out
push
push
sbb
fmul
jnp
scas
lods
push
mov
mov
push
test
jae
cmp
rcl
xchg
cld
jg
inc
adc
pop
jnp
retf
cdq
adc
mov
jnp
fs
cli
jle
das
loope
pop
jg
loop
int
push
pusha
cmp
sbb
stc
add
push
mov
inc
fimul
adc
cld
mov
in
mov
retf
xchg
push
retf
ss
jg
sbb
pop
ret
les
dec
daa
add
push
in
or
cmp
stos
inc
pop
mov
out
or
pop
pusha
cmp
sub
loopne
push
push
mov
adc
or
out
dec
jmp
fsub
shr
push
frstor
or
idiv
pop
ret
gs
int3
pusha
push
mov
jmp
jecxz
movs
jmp
mov
ja
sbb
in
cdq
pop
outs
jecxz
push
push
cld
jno
push
pop
dec
test
inc
mov
or
shl
pop
mov
test
addr16
ror
retf
imul
xor
(bad)
mov
cmc
and
(bad)
push
push
inc
imul
mov
call
push
mov
adc
adc
cli
(bad)
cwde
mov
test
gs
in
(bad)
stos
popa
jecxz
xchg
dec
fstp
punpckhdq
(bad)
mov
sub
fsubrp
sub
xor
movs
bound
arpl
sub
(bad)
fcmovnu
add
inc
sti
out
mov
sub
outs
scas
fiadd
jo
addr16
sbb
stos
test
jb
mov
mov
mov
pop
adc
imul
shr
pop
add
(bad)
adc
mov
fs
mov
sahf
out
inc
or
mov
pop
mov
jmp
mov
pop
mov
cmps
mov
lahf
pop
push
sbb
push
jecxz
mov
xor
loope
ret
test
sub
bound
jb
ja
loopne
icebp
test
or
push
cmp
cmp
or
sti
push
aam
jae
dec
push
sbb
jp
mov
(bad)
psubusb
xor
cmp
(bad)
fst
xchg
subps
mov
div
clc
(bad)
push
lods
or
jnp
xchg
mov
daa
test
ins
add
add
mov
movs
outs
dec
dec
retf
xor
jno
aad
sub
arpl
adc
dec
out
push
add
mov
cmp
sbb
push
dec
ficomp
std
cdq
push
xchg
cdq
es
pop
jae
(bad)
sbb
mov
sti
xor
add
data16
xchg
into
inc
shl
lahf
sbb
push
(bad)
adc
sub
fld
sub
inc
sub
fist
pop
addr16
icebp
cmps
cmp
das
jge
fmul
imul
arpl
jbe
iret
daa
sahf
ffree
inc
mov
sbb
(bad)
pop
fisubr
sub
dec
xor
inc
out
movs
xchg
mov
fwait
push
jne
fcmovnu
mov
xor
ins
scas
iret
mov
xchg
jp
icebp
pop
jb
out
add
mov
xchg
sbb
xchg
mov
mov
xchg
xabort
sub
out
ja
mov
je
mov
cmp
cmc
popf
mov
ins
jp
outs
jge
jb
retf
retf
out
stc
pusha
scas
neg
outs
push
add
jno
sbb
jne
and
call
(bad)
fcom
and
in
add
shl
mov
mov
pop
inc
fist
cs
lods
rcl
or
pop
add
push
xor
mov
loope
int3
fsubr
(bad)
xchg
data16
adc
cwde
scas
in
adc
mov
mov
inc
cld
xor
aas
in
retf
and
xchg
aas
div
push
jle
sahf
ins
jnp
ror
pop
es
cmp
sub
mov
dec
cmp
push
test
pop
mov
cmps
adc
sub
fwait
imul
cli
mov
cli
push
sbb
xchg
inc
addr16
ds
adc
sub
jmp
or
ret
push
bnd
in
mov
dec
jl
stos
inc
lods
test
jmp
test
push
cli
mov
xor
mov
sbb
mov
mov
mov
adc
ret
ins
call
inc
movups
aaa
stc
jg
xchg
int3
std
cdq
das
jno
push
scas
cmp
xor
cs
fimul
idiv
dec
push
pop
mov
mov
arpl
cmps
lock
mov
adc
loope
mov
mov
push
cmp
test
sub
mov
xor
push
ins
aas
stos
fld
push
gs
addr16
mov
jecxz
jmp
cmc
jo
lds
dec
or
mov
sbb
iret
stos
vpacksswb
mov
push
xor
mov
dec
int
mov
ror
adc
mov
mov
sub
ins
adc
add
mov
mov
jns
nop
movs
int3
mov
jge
add
int3
cmp
(bad)
lock
jb
ss
jg
mov
call
mov
push
sub
loope
jb
push
dec
fistp
jne
add
dec
jns
sub
movs
xchg
and
lock
pop
cmc
push
fdivrp
sbb
xchg
mov
pop
movs
jge
es
in
pusha
inc
jg
or
stos
dec
xor
mov
(bad)
ror
xor
leave
in
cdq
mov
sub
jp
mov
cmp
pop
test
loop
popf
push
popf
ror
mov
mov
das
inc
movs
inc
stos
push
mov
xchg
popa
sub
mov
xchg
push
jmp
hlt
(bad)
pop
addr16
imul
mov
sbb
imul
xor
icebp
add
(bad)
ss
fwait
inc
mov
jmp
jmp
outs
xchg
adc
cmp
out
mov
cmp
or
cmps
inc
cmp
push
outs
inc
dec
cmp
adc
or
and
sahf
jg
idiv
js
mov
mov
mov
ror
not
cmp
add
jns
or
sub
clc
mov
xchg
fwait
xor
das
dec
add
push
sub
mov
adc
(bad)
into
xor
cmp
ss
or
jne
div
pusha
sub
fcmovnb
xor
dec
je
mov
pop
out
movs
out
ja
xor
mov
dec
mov
ins
adc
xchg
stos
popf
add
movs
adc
dec
aas
xchg
retf
pop
imul
mov
shr
or
test
nop
lods
dec
xor
push
sub
add
sub
xchg
pop
xlat
mov
sub
shr
or
out
inc
stos
mov
sbb
pop
int3
mov
pop
mov
rol
shl
adc
jl
test
sub
pop
and
jo
retf
jne
and
addr16
lock
pop
(bad)
retf
addr16
mov
dec
stos
rol
xchg
into
mov
add
jle
sbb
ret
sub
mov
shr
sbb
test
jle
inc
pop
sbb
sti
adc
imul
push
aam
aas
push
out
mov
xor
mov
sahf
out
fs
mov
int3
sub
int3
or
lods
scas
out
clc
test
mov
xchg
xor
sti
loop
sub
mov
cmps
(bad)
mov
int
dec
xchg
xchg
cwde
lock
(bad)
hlt
in
xchg
or
or
lock
sub
sbb
mov
and
lods
mov
mov
mov
lods
xchg
push
xor
mov
(bad)
cld
push
xchg
rol
or
and
xchg
loopne
jl
popa
sbb
xor
sbb
mov
jmp
pop
or
xchg
pop
sub
jp
aas
push
jecxz
je
pop
jmp
test
mov
rcl
mov
fscale
xor
pop
stos
ins
test
out
nop
vmptrst
js
mov
and
out
int
inc
sbb
inc
(bad)
jmp
(bad)
xor
stos
add
jbe
popa
ds
pop
jle
inc
xchg
cmp
push
hlt
xor
adc
into
(bad)
call
mov
movs
xchg
fistp
int
test
mov
push
mov
ins
fdiv
mov
lods
inc
and
cmp
cld
retf
pop
add
dec
fld
cmp
outs
jb
nop
xlat
pop
out
xchg
fnstcw
add
push
mov
in
ror
ss
imul
and
mov
arpl
push
push
or
mov
(bad)
fsincos
pushf
cdq
call
or
xchg
xor
icebp
nop
lods
sbb
pop
les
sub
inc
xor
xchg
(bad)
leave
leave
xor
gs
icebp
shl
or
add
adc
push
jecxz
fcmovu
pop
jmp
stc
cwde
adc
es
test
inc
imul
fs
adc
add
loopne
shl
mov
fistp
pop
addr16
xor
call
aad
aam
mov
cdq
add
mov
data16
fscale
enter
cmp
test
outs
gs
inc
outs
and
sbb
test
or
sbb
movs
jae
cmp
mul
das
repnz
nop
sbb
mov
pop
loopne
test
pop
imul
out
mov
in
push
xor
jae
mov
in
loop
sar
ss
or
mov
lock
mov
inc
mov
jmp
xchg
out
es
cmp
test
pop
jae
xchg
cs
push
push
cmp
loopne
retf
xchg
stos
repz
or
and
pop
rcl
mov
lock
mov
and
push
jmp
xchg
in
cmc
cs
mov
out
lea
sub
xchg
pop
push
adc
mov
aam
adc
int
jge
add
popf
(bad)
sub
jno
sti
loopne
(bad)
and
mov
(bad)
movs
cmps
hlt
sahf
sub
push
adc
shl
(bad)
pop
not
cmp
lea
dec
lds
and
sahf
push
(bad)
aas
push
lahf
mov
cmps
je
pop
(bad)
sbb
pop
(bad)
mov
jns
push
in
mov
push
push
fld
inc
or
test
mov
inc
(bad)
stos
ret
scas
pop
scas
or
mov
and
mov
sub
push
jp
jb
push
cmp
test
fwait
adc
repz
bswap
jae
std
mov
and
(bad)
(bad)
or
enter
cmp
ja
or
mov
push
sbb
mov
jne
cmc
mov
xor
call
sbb
sbb
mov
std
mov
out
repnz
inc
jb
cld
push
(bad)
xor
sbb
xchg
xor
sub
movs
jns
jle
push
or
add
inc
dec
les
jns
dec
out
mov
jmp
loop
add
test
inc
retf
imul
scas
retf
test
push
xlat
mov
add
shl
xchg
xchg
ins
push
out
cld
or
and
inc
jnp
cmc
sar
pop
mov
add
and
push
call
push
call
aam
test
sti
dec
(bad)
inc
retf
test
aas
mov
sub
cmc
stos
jno
jmp
sbb
inc
adc
pop
(bad)
ds
fdiv
inc
jne
hlt
test
xlat
cmp
mov
cmp
dec
fs
mov
mov
cs
fninit
out
loopne
push
inc
or
dec
pop
mov
loopne
cmps
sti
cmc
fadd
lahf
dec
fist
clc
popf
xor
mov
mov
cli
adc
cmps
mov
xchg
mov
push
jo
aad
mov
adc
or
(bad)
pop
sub
ins
adc
mov
leave
xchg
into
popa
jecxz
push
or
mov
inc
pop
jp
ins
imul
and
jo
aas
loopne
sbb
cmp
retf
cmps
sub
jg
call
push
push
nop
pop
push
mov
ss
pop
nop
push
fucomip
xchg
call
fs
mov
pop
mov
pusha
imul
adc
ins
loop
js
mov
xor
dec
push
lds
and
(bad)
imul
pop
imul
rol
(bad)
fwait
jb
and
jno
fidivr
fidivr
xor
stc
mov
or
ret
jbe
movs
adc
or
pop
fwait
in
pop
(bad)
cld
mov
add
not
(bad)
adc
mov
jo
adc
xchg
jne
sub
xchg
test
adc
mov
pop
fdiv
adc
mov
into
pusha
jp
sbb
mov
sub
sbb
shl
inc
fs
cld
mov
out
inc
jg
xor
stos
push
(bad)
fldcw
mov
xchg
xchg
inc
push
inc
pop
push
arpl
add
or
add
sbb
push
stc
sub
xchg
shr
je
pop
jg
loop
inc
rcl
xor
add
mov
bound
mov
push
aam
jne
inc
out
jbe
push
dec
scas
xor
pop
pop
or
ins
scas
and
mov
jb
mov
inc
inc
pop
test
and
out
into
mov
sbb
push
das
imul
push
int3
jecxz
aam
pusha
adc
pop
lahf
hlt
lods
gs
cmps
in
sub
repz
outs
dec
push
test
movs
iret
jae
sahf
or
test
jle
lods
inc
in
aaa
es
jmp
cmp
mov
clc
push
out
dec
sbb
push
fs
imul
pop
jnp
mov
out
repz
lods
pop
fst
cmc
ins
push
cmp
add
sbb
dec
jne
aad
hlt
xor
movs
xchg
das
inc
and
inc
mov
dec
call
jae
push
xchg
stos
ja
mov
mov
cmp
cmc
adc
shl
ins
ins
ds
adc
rcl
stos
lock
and
jge
aaa
out
mov
push
push
in
jge
pop
fwait
mov
(bad)
int
call
inc
inc
and
loopne
cmp
icebp
jne
mov
push
sbb
lds
adc
push
loope
repz
and
test
in
out
inc
cwde
jge
xor
jg
mov
aaa
mul
movs
pop
or
xchg
outs
inc
in
dec
jmp
mov
test
push
xor
leave
inc
shr
ror
in
adc
cmp
and
mov
loope
mov
ins
jge
adc
test
(bad)
adc
mov
mov
ficom
add
cmp
add
xor
fadd
mov
(bad)
pop
xlat
mov
and
adc
ja
pusha
cmp
dec
arpl
(bad)
mov
mov
jb
pop
adc
(bad)
test
xchg
pop
mov
pop
ret
test
push
(bad)
push
jg
mov
fdivr
jl
adc
int3
xchg
popf
cld
xchg
ret
or
push
cli
xlat
mov
add
or
(bad)
fs
data16
ss
repnz
jecxz
mov
cmp
mov
repnz
mov
ffree
and
pop
add
add
jg
adc
mov
jmp
mov
push
mov
inc
(bad)
cmp
xchg
ds
inc
add
daa
sti
stc
pop
or
ror
cmp
call
out
int
mov
add
stos
pop
inc
stos
dec
les
jle
or
inc
push
adc
mov
jmp
add
call
jnp
out
sbb
cmp
and
cwde
inc
and
cmp
into
fidivr
jno
mov
mov
mov
cld
int3
fldcw
retf
cmp
add
out
das
aas
es
push
push
lock
mov
push
and
pop
mov
sbb
push
enter
lahf
and
cli
fsubr
or
sub
add
inc
jae
mov
inc
jecxz
xchg
(bad)
in
js
push
shl
pop
pop
in
add
call
cmp
test
mov
into
push
jns
inc
inc
loope
xchg
fistp
and
fadd
test
arpl
loopne
(bad)
in
jo
(bad)
cli
xor
rol
jae
push
ret
inc
inc
aad
shl
sbb
cmp
pop
call
cmp
mov
(bad)
cdq
adc
add
push
mov
inc
fwait
jns
jns
(bad)
fmul
mov
test
mov
jno
mov
mov
scas
fsubrp
loop
ds
dec
mov
dec
and
inc
xor
inc
pushf
sub
imul
add
shl
dec
and
mov
std
lds
push
dec
jmp
mov
repz
ret
cwde
xor
jnp
rcl
mov
pop
pop
lods
iret
shl
cs
mov
ror
inc
jbe
clc
ja
pop
cld
add
fsubr
jnp
cdq
cmp
fmul
sub
or
push
imul
cmps
sub
mov
sub
(bad)
jns
add
add
lds
in
add
jns
div
(bad)
jmp
retf
xor
out
sbb
ret
mov
cwde
inc
mov
dec
es
push
iret
mov
jge
rcl
loop
repz
(bad)
jle
jp
add
mov
xchg
or
aam
cmps
mov
in
or
int
mov
adc
sub
cmp
stos
cmp
sbb
in
pop
cmp
aam
jp
push
data16
lock
dec
rcl
call
xor
dec
cli
ins
mov
ins
xchg
cmp
int
and
or
jmp
push
push
into
retf
jbe
push
push
xchg
or
xchg
mov
xchg
(bad)
push
imul
mov
fs
mov
xor
adc
lea
(bad)
neg
jbe
mov
imul
fisub
or
dec
push
mov
push
cld
jle
adc
sbb
adc
mov
in
retf
and
rol
mov
js
xor
shl
jns
rcr
add
cmp
sub
mov
sbb
adc
jne
retf
cli
push
sbb
out
mov
mov
cmp
test
aam
bound
add
or
jae
(bad)
repz
add
inc
xor
or
dec
rcl
jg
xchg
gs
repz
and
scas
sbb
lods
mov
and
cli
add
adc
pop
jg
call
mov
fisttp
inc
xchg
xor
cs
pop
and
mov
inc
outs
cdq
inc
ret
or
out
into
div
sbb
add
(bad)
out
adc
pop
adc
inc
mov
call
aam
popa
stc
xlat
cmp
std
or
xchg
mov
and
out
out
jg
dec
mov
dec
mov
movs
push
xor
popf
cs
and
leave
jo
dec
mov
les
(bad)
movs
add
pop
inc
test
pop
sbb
sub
lds
mov
mov
int3
mov
test
jae
lods
arpl
cmp
fld
out
cmp
push
dec
and
addr16
mov
mov
inc
test
jns
inc
data16
cdq
repnz
sbb
sahf
sar
test
pop
out
mov
adc
jae
inc
inc
jp
jle
push
push
mov
jo
imul
or
jnp
lods
ins
pop
sub
pop
gs
ss
push
xor
movs
retf
adc
adc
mov
lock
inc
adc
or
loope
pushf
jecxz
ja
mov
outs
cmp
in
loope
dec
xchg
ret
fmul
xchg
xor
popf
mov
and
xchg
xchg
push
and
test
sub
clc
xchg
mov
pop
mov
fisttp
add
hlt
sub
mov
and
push
and
or
outs
call
push
inc
je
cmp
push
pop
and
xor
movs
dec
pop
daa
stc
hlt
scas
popf
shl
shr
clc
sbb
xchg
pop
mov
pop
add
add
adc
pop
js
stos
lods
aaa
repz
popa
popa
ret
push
and
mov
enter
outs
xchg
xor
fs
push
push
mov
or
int
dec
wbinvd
ins
lods
sahf
sbb
cwde
push
pop
call
sbb
fsubp
xchg
pop
sti
sub
les
xchg
shr
xchg
or
inc
(bad)
arpl
pop
pop
test
cmps
cld
mov
mov
mov
movs
jecxz
jl
ss
jnp
jl
test
jnp
jmp
jge
dec
shr
mov
pop
xchg
sbb
xor
pop
clc
mov
mov
jnp
mov
movs
cmps
cmp
jno
add
cld
lods
mov
sbb
and
mov
dec
popa
daa
sti
xchg
outs
mov
sbb
loope
xlat
dec
push
ja
inc
cmps
jo
call
imul
lahf
cld
addr16
lods
mov
cwde
sbb
lahf
int
sub
dec
bswap
imul
pop
ret
daa
jmp
pushf
popa
cmps
dec
jbe
pop
das
jecxz
cmp
daa
fbld
cmp
pop
les
adc
mov
xor
mov
test
cli
mov
mov
or
jg
aam
sahf
pop
cmp
mov
scas
inc
pop
ds
jbe
sub
out
cwde
cmovl
in
add
sbb
das
dec
xor
mov
retf
fdivrp
jl
outs
ret
pop
in
retf
mov
aas
ins
(bad)
pop
lds
(bad)
xor
add
push
out
xor
dec
cmp
push
inc
mov
xchg
xchg
bound
out
mov
inc
pop
jle
cmp
lds
lock
xor
int3
adc
inc
push
push
fistp
push
retf
inc
in
and
retf
xchg
pop
xchg
fld
mov
mov
shl
arpl
xchg
mov
cmp
cmp
adc
out
add
out
push
jns
call
sti
jl
mov
data16
ins
mov
dec
js
pop
out
pusha
clc
shr
sar
push
in
push
outs
addr16
(bad)
std
pop
adc
xchg
xchg
(bad)
test
sbb
ret
adc
push
or
pushf
mov
cmc
sti
fist
inc
cmp
ds
ins
mov
cmps
mov
mov
xchg
fcmovne
imul
inc
mov
mov
(bad)
and
mov
or
lea
jmp
cmc
cmc
add
and
(bad)
(bad)
dec
xchg
pushaw
cli
lods
cmps
mul
pop
rol
mov
call
into
cwde
loope
shr
sbb
add
ror
fnstenv
dec
dec
imul
js
push
gs
jl
xchg
fmul
movs
adc
xchg
retf
adc
inc
push
cmp
call
mov
cli
cmp
inc
mov
adc
mov
and
sbb
(bad)
or
and
jl
xor
int3
or
cdq
ins
pop
das
fadd
xchg
pop
call
sub
aaa
pop
pop
and
fisub
movs
pushf
ss
sahf
mov
cmc
cld
adc
or
int3
cmc
(bad)
leave
add
push
xchg
xchg
dec
xlat
add
cmp
or
and
into
test
call
and
or
or
stos
sbb
push
cmp
repnz
cmp
and
ret
imul
fwait
pop
mov
add
enter
xor
inc
cmps
jge
sbb
mov
pop
ins
xor
sbb
jmp
add
(bad)
jne
push
dec
(bad)
mov
push
ja
adc
xor
aaa
cmp
ins
adc
or
and
jae
(bad)
sub
test
dec
xchg
pop
daa
call
cmps
call
xor
adc
dec
enter
call
push
pop
scas
movs
test
xor
push
test
cmp
hlt
xchg
pop
rol
inc
pop
std
imul
mov
sti
pop
stos
push
sahf
das
fcomp
ins
jmp
and
cmps
inc
std
pop
adc
pop
push
ja
pop
loopne
test
jl
loopne
retf
add
add
sub
test
out
sbb
scas
fisubr
cmp
imul
cmps
mov
push
mov
lods
fwait
push
lea
inc
outs
add
rcl
jmp
push
into
pop
push
fs
loopne
cmps
aad
mov
xor
mov
dec
pop
lods
adc
ss
adc
cmp
dec
into
jnp
out
xchg
add
std
std
cmp
fucomi
in
push
xor
dec
lods
fxch
adc
loop
sbb
and
cmp
mov
(bad)
icebp
mov
out
mov
sar
leave
pop
jecxz
mov
mov
loopne
add
pop
out
fsubr
mov
mov
ss
xchg
sub
adc
mov
inc
outs
cmp
and
add
popa
cdq
and
outs
lods
js
jo
jnp
(bad)
mov
js
test
cli
dec
sub
sub
sbb
xchg
frstor
popa
push
fwait
outs
sbb
retf
cs
jns
mov
mov
xchg
gs
xor
mov
lahf
jns
cmp
push
loop
sbb
pop
pop
(bad)
dec
retf
out
jmp
ja
loope
push
jo
fwait
iret
dec
xchg
jbe
jecxz
into
int3
pusha
cdq
pop
in
xor
and
je
cwde
enter
fadd
(bad)
scas
cmp
mov
and
(bad)
in
data16
gs
adc
jb
mov
sub
stos
sbb
repz
push
jb
jns
stc
dec
aam
xor
add
pop
(bad)
std
daa
cmp
daa
cwde
sub
mov
add
outs
mov
lods
ins
and
push
mov
pop
mov
outs
jl
dec
or
int
add
retf
pop
sbb
std
jns
pop
xchg
and
lea
or
sbb
xchg
imul
push
push
fucompp
cmc
jb
inc
test
clc
dec
push
jg
dec
mov
popa
enter
pop
adc
lods
int3
stos
sbb
fsubr
sub
test
in
jbe
pop
and
sbb
les
shl
rcl
adc
add
arpl
out
je
push
pusha
in
clc
xchg
pushf
mov
into
or
stos
dec
mov
lods
out
test
cwde
rol
mov
sub
sbb
jns
clc
clc
sbb
ret
mov
mov
jnp
out
pop
jno
scas
mov
xor
jge
stc
js
inc
out
mov
out
aas
mov
shufps
jmp
fidivr
adc
rcl
dec
mov
sub
push
adc
outs
gs
mov
lods
inc
pop
sti
pusha
scas
imul
or
push
cmps
stos
stos
mov
fist
mov
add
outs
cmp
push
fsub
js
xchg
cmps
and
jbe
sbb
mov
jecxz
adc
mov
dec
inc
xchg
(bad)
aad
add
in
push
sti
lea
push
cmp
stc
std
inc
inc
sti
test
push
push
mov
das
jecxz
pop
push
call
(bad)
(bad)
jle
adc
jne
xchg
stc
mov
int
into
adc
cmc
imul
sbb
std
xchg
pop
jecxz
sub
imul
inc
mov
lahf
ja
jno
mov
and
push
and
xchg
int3
xchg
push
inc
int
enter
mov
push
mov
(bad)
es
inc
cmc
push
outs
cmp
adc
adc
and
mov
jb
les
mov
test
les
psrlw
jmp
adc
scas
cmp
int3
mov
push
push
xchg
xor
pop
xor
out
xor
or
mov
inc
push
jae
nop
or
fstp
xchg
sbb
das
retf
xchg
mov
(bad)
cmp
push
jae
aas
out
shr
mov
gs
xchg
pop
sahf
ret
xchg
stos
dec
test
jecxz
test
push
sub
inc
pop
add
xor
push
aam
retf
sub
adc
jmp
xchg
add
cmc
cmp
popf
sub
ror
and
test
std
xor
test
or
call
mov
push
jbe
push
fisub
mov
lods
test
hlt
test
sub
xor
adc
(bad)
jg
(bad)
mov
mov
dec
nop
pushf
ja
fnstcw
out
daa
mov
xchg
mov
das
out
push
fadd
test
mov
add
das
fs
sti
idiv
mov
jecxz
(bad)
cmp
std
dec
or
enter
or
jbe
pop
nop
retf
cmps
aam
test
jbe
adc
mov
mov
gs
pop
aaa
and
cmp
nop
out
inc
add
push
shl
ss
aaa
rcl
outs
push
lods
xor
push
fwait
leave
out
adc
push
cli
fnstenv
pop
xchg
or
mov
cmp
cs
js
mov
mov
dec
add
jns
and
hlt
cwde
in
outs
mov
mov
push
inc
or
pusha
mov
jb
js
pop
cmp
sti
retf
out
xor
pop
lds
rcr
xor
dec
rcr
sbb
ficomp
outs
cmp
out
sub
imul
call
inc
pop
scas
out
mov
adc
in
jg
xor
(bad)
out
ficomp
mov
stc
out
dec
cmp
outs
rcr
pop
loop
jg
push
push
push
aam
pop
adc
dec
pop
push
out
std
imul
mov
inc
jle
std
das
sub
mov
imul
sub
mov
mov
cmp
dec
push
sub
ror
mov
div
adc
scas
shl
mov
push
or
mov
push
imul
repz
push
jg
fistp
or
mov
dec
xor
push
pop
pop
mov
jmp
cmp
add
ret
and
outs
in
das
rcr
out
sti
fbstp
cwde
arpl
jecxz
xor
push
cmp
inc
pusha
stc
jbe
or
xchg
js
aam
mov
jmp
adc
jb
fs
mov
repz
add
out
mov
out
cwde
pop
out
xor
je
scas
mov
cdq
cdq
mov
cmp
lock
sbb
push
lock
jp
fs
jno
enter
pop
int
sbb
inc
push
mov
out
mov
adc
cmp
xchg
dec
mov
test
stos
popf
inc
sbb
cwde
sbb
ss
adc
or
xchg
mov
mov
mov
sub
push
push
int3
fcomp
xchg
push
push
rol
lods
adc
xlat
and
mov
jae
mov
mov
adc
mov
es
sbb
retf
cmp
pop
fbstp
mov
or
mov
sub
in
dec
and
and
xchg
inc
mov
push
popa
popf
mov
ds
and
test
sbb
dec
aaa
jl
xlat
sbb
sbb
jb
imul
test
dec
arpl
sub
rcl
push
mov
cmp
fcomp
cmps
xor
and
ja
lea
retf
cwde
inc
xor
rcl
fwait
out
add
mov
adc
jae
std
pop
mov
pop
add
out
xor
ja
mov
mov
test
jb
lods
bnd
adc
pop
adc
hlt
xchg
mov
xor
push
xor
mov
int
repnz
fisttp
lods
mov
xchg
loope
mov
ffreep
adc
hlt
xchg
jns
jecxz
test
sub
clc
mov
or
(bad)
or
and
int
and
dec
add
out
inc
jns
(bad)
mov
inc
sub
adc
loopne
mov
(bad)
out
pop
pop
aad
jl
fisub
test
adc
adc
cmp
cmps
dec
lods
cmps
in
retf
xchg
xlat
sbb
xor
mov
sbb
pop
push
mov
in
in
lods
fidivr
mov
cs
arpl
cs
adc
add
test
popf
mov
pop
out
fsubrp
lahf
jl
xchg
lea
pop
retf
lds
cli
test
sar
cmp
xchg
mov
cmps
cmp
jne
std
and
dec
and
adc
out
mov
or
movs
std
shl
(bad)
push
ds
jbe
add
jno
add
cmps
push
sbb
jb
jbe
shl
fcompp
and
cmp
xchg
add
cwde
xchg
fwait
add
jae
test
pop
ficomp
adc
inc
test
mov
jnp
dec
jno
and
adc
shr
jg
jae
mov
and
mov
pop
mov
jo
aas
mov
std
into
sub
imul
cld
mov
or
jmp
jb
inc
and
xchg
jne
jb
gs
push
xchg
scas
test
mov
scas
das
cmps
inc
jns
xor
mov
(bad)
cmc
inc
xchg
push
cmp
daa
shl
mov
push
mov
add
xchg
test
scas
or
fist
shl
push
lock
pop
ret
add
lock
xchg
imul
mov
shl
push
and
lods
and
mov
pusha
xchg
add
icebp
push
int3
cld
dec
push
cwde
jb
mov
iret
fidiv
or
and
mov
test
sbb
jge
sbb
ins
aaa
xlat
inc
cmps
push
dec
sub
out
lods
pop
call
daa
cwde
cmps
mov
and
pop
(bad)
cmp
add
jo
add
fist
addr16
or
loopne
fcomi
adc
aas
sub
iret
imul
js
int3
std
std
js
in
out
pop
add
aam
push
ret
leave
aas
dec
mov
push
mov
jno
jno
add
inc
push
mov
mov
and
jne
(bad)
jmp
mov
int3
jae
addr16
mov
push
int3
arpl
jl
jo
inc
fistp
xlat
int
cmp
arpl
xchg
inc
inc
add
add
xor
cmps
sbb
jge
push
and
push
push
ds
idiv
call
in
pop
push
jae
adc
lahf
call
(bad)
xchg
gs
sar
mov
sub
ja
cli
outs
addr16
xor
sti
aaa
test
dec
leave
out
into
out
out
pushf
push
jns
push
stos
jp
outs
xor
push
jge
push
dec
scas
cmp
cmps
push
retf
and
mov
xchg
mov
movs
pop
push
fisttp
mov
add
rol
xchg
push
or
mov
mov
xchg
inc
(bad)
push
sbb
ins
imul
sbb
or
out
mov
xor
and
in
add
shr
xchg
xchg
mov
sub
out
mov
lds
scas
popa
lock
clc
push
jle
addr16
movs
fucom
lods
cmp
nop
dec
mov
push
rcr
sar
mov
push
out
call
hlt
mov
push
ins
out
retf
loop
inc
repnz
inc
inc
cwde
ror
mov
or
pop
nop
mov
retf
xchg
(bad)
lds
ds
in
bound
mov
dec
xor
sti
movs
test
vmovaps
loopne
jo
push
pop
cdq
fmulp
jns
push
pop
icebp
clc
test
daa
movs
mov
add
sbb
mov
adc
cmp
cwde
lods
vmlaunch
mov
popf
ins
or
adc
mov
jge
jo
ss
sar
rcr
or
bound
stc
mov
int
retf
in
stos
jbe
pop
lods
mov
int3
fs
mov
pushf
pop
mov
mov
clc
sbb
dec
sbb
mov
(bad)
(bad)
push
movs
xor
dec
rcl
or
mov
mov
dec
fmul
(bad)
bound
adc
pop
into
jb
xchg
sbb
fdivr
fild
ins
leave
leave
jbe
fucomp
inc
adc
jg
dec
jae
call
clc
mov
or
inc
arpl
nop
xchg
cs
push
gs
arpl
add
jmp
or
mov
cdq
daa
test
pop
inc
out
sbb
les
push
cmp
sub
daa
push
shl
cmp
push
mov
cdq
pop
xchg
fsub
push
in
loopne
outs
push
mov
push
pop
scas
lea
lock
aam
in
xchg
stos
dec
adc
xchg
pop
test
fisttp
cmps
adc
xor
xchg
inc
jae
mov
add
ror
dec
ss
lock
mov
mov
dec
pushf
ins
cli
push
push
stos
ss
dec
pop
enterw
lods
xchg
enter
outs
loopne
inc
icebp
shl
enter
mov
sub
dec
cs
mov
sbb
jmp
fisub
call
repz
jae
(bad)
out
(bad)
and
adc
inc
pusha
loop
xchg
clc
jmp
(bad)
aas
in
sub
out
push
(bad)
arpl
popa
cmp
mov
mov
or
jbe
mov
(bad)
call
mov
and
cmps
or
sbb
imul
stc
rcl
call
lahf
(bad)
push
mov
adc
(bad)
fcmovnb
inc
ficomp
fldcw
shl
jo
pop
xlat
out
mov
and
inc
jnp
imul
pop
loopne
out
push
and
xchg
loop
stos
sbb
mov
dec
xor
scas
inc
inc
jnp
or
adc
shr
aad
cmps
lods
sbb
cmp
adc
lods
xchg
cmc
xor
in
(bad)
stc
adc
mov
in
or
mov
and
fild
in
xor
imul
int3
sbb
ret
ror
ds
push
xlat
loope
cmp
adc
adc
sub
lahf
jae
add
ja
and
sbb
sub
dec
cmp
daa
cmps
fsub
sbb
fwait
adc
cmp
sbb
iret
jecxz
xlat
aam
movs
mov
or
test
stos
aaa
xchg
pop
adc
stos
mov
jmp
and
push
lock
lods
and
leave
retf
mov
cmps
fwait
jo
adc
loope
xor
test
repz
adc
and
xchg
xorps
jae
mov
loop
mov
mov
and
das
adc
mov
mov
lds
js
or
xor
dec
pop
shl
fnstsw
push
mov
call
loop
mov
cmc
clc
sub
add
cmps
xor
mov
daa
xor
pop
adc
mov
pushf
movs
cli
in
adc
inc
dec
cmp
push
push
jo
dec
jns
or
and
js
fs
push
(bad)
jg
inc
in
push
es
iret
add
pop
sar
loope
test
sub
aas
jne
in
js
jmp
dec
in
loopne
mov
add
mov
icebp
nop
enter
stos
mov
test
test
mov
cmp
cmp
xor
in
sahf
mov
pop
int
xabort
push
cmp
mov
outs
add
fwait
in
ret
adc
popf
jb
xchg
sub
sbb
sti
cmp
push
imul
push
pop
jecxz
dec
pop
inc
fxam
inc
test
ins
(bad)
test
pop
retf
and
or
push
or
daa
sbb
hlt
jp
lock
push
or
les
imul
call
loopne
jmp
mov
adc
sub
loopne
inc
daa
lds
inc
jbe
jle
push
push
outs
pop
add
or
fnstcw
jmp
mov
mov
int3
xchg
mul
or
movs
daa
jl
cwde
addr16
ins
push
outs
add
ret
inc
and
mov
adc
out
adc
cdq
jbe
sbb
push
sub
inc
jg
adc
into
ja
(bad)
mov
leave
add
jp
and
retf
cdq
push
sbb
mov
xchg
mov
scas
or
cmp
dec
call
pop
pop
jbe
int
push
inc
pusha
rol
pop
push
push
jg
mov
into
popf
(bad)
sti
call
push
cmp
and
jno
ret
cmp
shl
dec
ins
xchg
js
jae
pop
cmp
pop
add
out
adc
mov
jg
aam
outs
in
pop
gs
fcmovnu
(bad)
aam
mov
mov
adc
push
or
test
daa
rol
dec
adc
jne
cmp
ret
test
rcl
jmp
ds
cmc
mov
push
stc
jg
imul
cmps
push
or
push
cdq
cmp
stos
mov
pusha
test
test
in
popf
mov
pop
xor
popa
push
dec
scas
and
and
test
icebp
stc
ret
ficom
pop
add
imul
cwde
ret
loop
inc
inc
mov
xchg
or
std
jae
inc
mov
and
cdq
fwait
arpl
out
sub
fs
shl
sahf
fdivr
shl
push
jae
fcomp
add
lds
cmp
jmp
ret
call
and
aad
mov
push
js
sbb
popf
lods
cmp
stos
mov
and
jnp
adc
nop
out
and
push
ss
xlat
fld
mov
adc
pop
sti
sbb
sub
sub
mov
out
cmp
push
retf
(bad)
popf
lea
aas
mov
jnp
(bad)
ja
cs
add
in
and
ds
out
daa
push
push
push
mov
jb
mov
pinsrw
fidiv
dec
fdivr
stos
call
test
lea
mov
retf
and
jle
cmp
mov
outs
(bad)
push
jbe
push
into
int3
and
xchg
sbb
icebp
mov
and
sub
pop
jno
sub
fmul
pop
outs
push
mov
sbb
xlat
mov
ins
jecxz
and
leave
push
outs
mov
mov
push
fnsave
das
aas
fisubr
int3
mov
dec
jne
pop
jmp
jecxz
dec
sbb
push
in
punpckhwd
push
sub
xchg
cmps
dec
push
mov
fcom
and
imul
inc
fadd
ror
push
std
pop
cmp
fiadd
inc
aas
add
inc
je
mov
mov
call
and
or
pop
jl
mov
or
mov
pop
or
pop
mov
nop
mov
cwde
push
mov
(bad)
retf
mov
pop
xor
sub
jae
mov
cmp
cld
adc
mul
pop
into
repz
dec
sahf
pop
js
mov
pop
sub
or
and
test
cmp
je
fcomp
and
cmps
sbb
cmp
ret
(bad)
imul
nop
(bad)
adc
rcr
adc
cmova
gs
push
inc
mov
ret
lods
pop
jg
cmp
fidivr
in
sub
stc
or
adc
and
cmp
add
sub
shl
mov
or
test
(bad)
jle
mov
jg
jmp
inc
jp
lods
fstp
sahf
imul
cmc
jae
xor
scas
ins
mov
lods
pop
leave
pop
bound
into
rol
pop
push
leave
(bad)
jbe
cmc
xlat
out
mov
cmp
jl
add
cmp
jge
add
ds
hlt
out
cld
mov
cmc
call
out
jp
adc
xchg
je
jae
cmp
jb
push
cmp
mov
sar
ret
les
jmp
ins
adc
pushf
popa
xchg
pop
gs
fisubr
outs
xchg
and
adc
imul
bound
add
fistp
or
aam
mov
sub
stos
mov
jno
mov
push
mov
movs
mov
test
test
out
sub
cmp
lock
div
and
mov
imul
jns
(bad)
movs
and
je
vdivps
test
repz
mov
dec
xchg
sub
jle
xchg
daa
xchg
add
dec
mov
repz
pop
jb
sub
lea
sbb
ret
or
cmp
adc
mov
(bad)
arpl
imul
adc
mov
pop
ss
sbb
xchg
push
pop
ja
sub
mov
cmc
jnp
mov
daa
iret
retf
cwde
bound
scas
cwde
repnz
inc
aas
js
push
push
xchg
sti
adc
dec
aas
lods
leave
and
and
cdq
sub
aam
add
and
push
push
xor
retf
hlt
push
bound
sub
rcl
(bad)
es
bound
ror
mov
sbb
or
loop
sub
scas
es
cld
sbb
sub
shl
in
inc
xchg
test
xor
les
mov
cmc
mov
sbb
lock
mov
jmp
pop
(bad)
movs
mov
adc
push
bsf
fiadd
scas
pop
mov
add
outs
fstp
inc
scas
dec
cmp
stc
in
sbb
fdiv
mov
stos
sbb
shr
xor
inc
nop
(bad)
push
pop
lods
pop
stos
(bad)
sbb
sub
sub
(bad)
rol
sbb
mov
cmp
lds
call
or
inc
jmp
inc
sub
dec
jp
or
outs
cld
and
js
pop
nop
xchg
push
mov
out
std
jp
dec
push
mov
pushf
lahf
xchg
pop
inc
inc
xchg
out
push
mov
xlat
repnz
dec
pop
call
stc
mov
and
jns
call
test
adc
push
mov
mov
ds
mov
jecxz
mov
cmp
push
nop
call
fwait
(bad)
adc
lods
retf
neg
adc
jb
jmp
adc
inc
in
test
push
test
ds
xchg
mov
retf
js
cmps
jbe
mov
nop
jg
cmp
adc
add
cmps
test
ret
dec
cmp
fnstsw
das
xor
ror
fwait
daa
(bad)
dec
or
sub
sti
mov
dec
retf
dec
mov
mov
or
sub
aas
or
fstp
adc
data16
sub
xor
pop
cmc
and
nop
cs
imul
adc
sahf
fmul
rcl
fidivr
fsubr
push
jo
mov
lds
jl
adc
and
mov
ror
daa
inc
imul
dec
arpl
es
mov
xchg
mov
or
xchg
lods
add
test
jb
out
xchg
mov
xor
movs
das
das
retf
and
cmp
sub
mov
imul
int
xchg
test
jp
inc
pop
stc
sbb
leave
aas
cmps
sub
cmp
mov
(bad)
je
lods
lock
test
mov
sbb
mov
icebp
jmp
sbb
jbe
out
cmp
or
mov
je
mov
xchg
or
bound
lock
cmp
and
cli
(bad)
mov
and
sahf
ficomp
aam
or
(bad)
jmp
or
js
nop
dec
jnp
mov
and
rcr
inc
pop
xchg
jb
test
out
sub
mov
call
xchg
out
das
call
movs
clc
add
inc
pop
mov
test
mov
pop
xchg
repnz
mov
jne
jo
int
pusha
fstp
mov
not
and
add
inc
adc
cmp
cld
sub
dec
dec
test
pop
xchg
mov
loopne
aad
mov
cmps
inc
das
bound
mov
jb
ins
cmp
daa
or
xchg
inc
cmp
dec
out
pop
push
mov
icebp
out
dec
repz
mov
cld
js
ret
mov
xchg
mov
xchg
inc
outs
(bad)
jbe
cld
mov
lods
arpl
or
xchg
mov
sbb
push
test
lahf
mov
add
xchg
loope
inc
sub
movs
ja
test
(bad)
mov
popf
sahf
cmps
call
ss
or
push
cmps
test
add
int
lea
pop
or
push
pop
or
push
rol
nop
imul
sti
sbb
ss
call
(bad)
adc
add
jb
dec
mov
ins
adc
push
jae
mov
mov
cmp
xchg
push
cmc
inc
xchg
xchg
xchg
mov
cmovo
not
or
jmp
fbld
in
cmp
les
lock
idiv
mov
aad
imul
add
pop
inc
adc
inc
cmps
ja
pusha
sub
cmp
sbb
lods
retf
adc
mov
sbb
or
cmps
mov
call
jmp
test
and
cmps
mov
leave
cmp
cmps
(bad)
(bad)
pcmpgtw
mov
je
xor
movs
imul
movs
dec
int3
dec
jmp
mov
lock
and
push
pushf
xor
sar
jmp
data16
cmp
nop
in
outs
ja
aaa
aas
jno
shr
or
aas
mov
stc
and
add
mov
outs
dec
dec
shr
loopne
stos
dec
mov
jg
add
nop
cld
xor
and
movs
cmp
sbb
jmp
scas
xchg
jno
aaa
add
mov
jne
imul
xchg
aaa
fisttp
mov
xchg
push
popf
or
dec
mov
arpl
mov
push
(bad)
test
ror
jle
inc
inc
ret
push
idiv
daa
out
and
ret
fild
xlat
jae
jne
jmp
lds
xchg
xchg
mov
les
cdq
xor
movs
aaa
pop
adc
xchg
cli
movs
cwde
or
jg
data16
out
scas
(bad)
sub
add
sub
loopne
and
push
mov
push
inc
inc
dec
sub
in
cmp
les
pop
test
xchg
push
lahf
or
sbb
push
jne
sbb
in
jb
int
and
ja
dec
push
jns
lods
mov
inc
mov
fbstp
in
sar
and
retf
mov
jo
and
add
test
std
xchg
push
mov
sub
adc
mov
jl
lods
fiadd
adc
cmp
or
aad
push
inc
pop
and
jecxz
jns
sub
inc
cmp
lock
mov
bound
add
fnstsw
pop
scas
stos
cmp
fucom
into
pop
push
pushf
add
lock
xor
xor
jl
and
lock
sub
xchg
xor
pop
cmc
lods
jmp
xor
or
xlat
jg
das
lea
and
stos
aad
jb
sub
mov
xor
imul
push
(bad)
sti
fist
pop
mov
pop
aaa
and
scas
lock
idiv
and
aad
test
mov
les
jae
and
xchg
das
dec
or
rcl
push
and
cs
out
dec
pop
inc
add
pop
pop
mov
add
inc
sbb
cmp
and
push
imul
bound
mov
sbb
add
cmp
mov
call
sub
xor
add
cmp
popa
rcl
inc
adc
stc
mov
test
outs
int3
outs
out
aam
idiv
sbb
add
cmp
pusha
dec
push
arpl
pop
ins
or
pop
add
jge
pop
ret
dec
idiv
lea
mov
repnz
xor
lods
(bad)
fsub
stos
test
xchg
add
rol
cmp
es
inc
ds
ins
jmp
pop
pop
inc
and
cmps
sar
jae
pop
(bad)
jb
shl
cmp
or
xchg
pop
xor
lea
call
pop
fild
push
test
inc
and
adc
inc
xchg
(bad)
pop
in
inc
fiadd
rol
push
xlat
mov
lds
inc
test
xor
lods
or
outs
ret
mov
pop
mov
cmp
arpl
das
fisttp
out
sub
iret
or
aam
cld
push
call
stos
loop
mov
push
mov
inc
into
call
rcl
enter
fst
ja
mov
enter
out
sub
jge
push
out
xor
loop
xchg
pop
js
cli
nop
std
jae
leave
or
inc
clc
adc
leave
push
sub
icebp
xchg
sahf
sbb
adc
adc
les
mov
sbb
pop
dec
gs
jp
xchg
sub
test
adc
daa
sub
add
push
sbb
mov
div
rcr
fs
add
pop
shl
(bad)
clc
fdivr
cdq
mov
shl
pop
sub
pusha
cmp
lock
aas
push
mov
xor
adc
xchg
popf
shr
push
fist
push
lods
xchg
sbb
jo
jae
bnd
add
mov
imul
cmps
sbb
out
jmp
fs
pop
sbb
ins
lahf
and
sub
rcr
or
test
inc
or
xchg
ss
cmp
dec
in
fistp
out
cs
xlat
sbb
pop
aaa
ret
and
jge
inc
jg
ds
aaa
sbb
fisub
add
mov
or
adc
loopne
cmp
or
pop
les
mov
sbb
pop
fmul
loop
or
and
cmps
jb
fisubr
rcr
mov
adc
mov
ret
jmp
xor
mov
ror
(bad)
out
jp
cwde
movs
cmp
rcl
cmp
dec
fcmovbe
sahf
popa
and
repz
xchg
jne
or
pop
inc
dec
pop
mov
in
jp
dec
jge
cs
mov
add
lods
xsaves
add
adc
push
in
rol
pop
shl
out
test
xchg
rcr
loope
test
xchg
outs
iret
clc
mov
movs
mov
inc
out
gs
hlt
movs
push
inc
xor
dec
pop
movs
sub
inc
or
jge
add
sub
psrlq
xor
in
sub
scas
cld
ret
inc
ret
xchg
and
jae
cwde
fisub
mov
lods
div
js
adc
daa
ins
out
mov
popf
jbe
test
retf
lea
sub
stos
mov
inc
shl
div
fdiv
xor
pop
and
or
jnp
mov
push
pusha
mov
push
jg
sahf
scas
mov
sar
fidiv
jb
fidiv
test
or
jb
pop
sbb
addr16
inc
js
sahf
lock
xchg
mov
aam
and
jo
fcom
xchg
dec
inc
push
dec
dec
movaps
push
mov
add
pop
dec
push
mov
push
std
fst
outs
test
xlat
out
push
fisttp
push
mov
jns
mov
mov
mov
js
xchg
js
xchg
in
inc
aas
out
cmp
fcom
jl
dec
xchg
xchg
das
adc
hlt
out
std
add
mov
push
xor
out
dec
sbb
int3
ficomp
nop
xor
ss
retf
mov
call
movs
sub
or
(bad)
scas
and
jbe
xchg
div
inc
add
mov
or
xchg
pop
sub
das
xchg
jno
cmp
lock
aaa
in
sub
daa
xchg
icebp
fisub
ds
or
movs
retf
push
cmps
xchg
(bad)
mov
test
int3
test
push
jg
fnstsw
dec
cld
rcr
xchg
sbb
jae
push
dec
lods
pop
sbb
xchg
cmp
cdq
mov
jnp
aas
sti
fs
mov
icebp
in
sub
xchg
mov
pop
je
in
out
fldenv
pop
xchg
add
cwde
mov
fdivr
mov
movs
mov
in
mov
sub
loope
add
sub
movd
outs
in
loope
pop
lds
xchg
ds
(bad)
inc
push
ret
dec
(bad)
pop
dec
(bad)
fcmovu
xchg
shl
daa
fwait
scas
push
out
cmp
pusha
dec
dec
xchg
movs
jmp
sub
sbb
or
jo
pop
mov
cwde
test
jno
jecxz
xchg
pop
dec
push
push
mov
popf
frstor
fwait
pop
jle
das
add
movs
jns
push
add
sbb
push
dec
repz
mov
das
test
fdiv
mov
fbstp
add
xchg
cs
repnz
add
xchg
stos
mov
ja
je
pop
enter
outs
push
inc
(bad)
dec
jmp
xor
lock
add
cmps
int3
daa
shl
jns
movs
mov
cmp
inc
scas
js
push
cmp
fcomp
mov
push
psllq
sbb
add
shl
aaa
(bad)
in
or
mov
jge
cmp
cwde
inc
ds
cmp
mov
push
push
retf
stos
shl
imul
popf
cmp
clc
aad
(bad)
test
dec
xlat
fisubr
sbb
dec
popa
leave
popa
and
jae
sbb
inc
push
mov
inc
ficomp
mov
fsub
into
push
scas
inc
xor
sub
jae
aam
mov
xchg
sub
ds
xor
mov
sub
jne
mov
sub
xlat
shr
mov
mov
jp
xchg
inc
in
aaa
mov
scas
retf
ja
rcl
and
sbb
(bad)
aam
add
or
ret
mov
out
aas
and
and
adc
push
scas
pop
dec
fs
pop
cmps
mov
pushw
mov
loop
ins
lea
retf
dec
pop
fld
loopne
cs
sbb
imul
xor
aam
mov
or
mov
(bad)
xlat
xchg
int3
xor
and
sbb
enter
inc
scas
retf
xor
jae
mov
jae
daa
mov
dec
sub
inc
push
adc
fcmovb
lods
mov
(bad)
or
jg
fadd
pop
cmp
mov
aam
mov
cli
or
jno
(bad)
sbb
scas
test
fwait
mov
xchg
fild
push
mov
pop
ds
jge
fist
pop
pusha
mov
xlat
sqrtps
int
dec
pop
ss
mov
or
cmp
outs
dec
jmp
ins
xchg
pop
mov
shr
fild
ja
cmp
outs
sbb
or
xor
loope
jae
push
dec
mov
stos
jbe
icebp
sar
pop
cmp
xchg
jmp
xor
clc
test
jmp
sub
xor
pop
std
and
(bad)
pop
xchg
scas
pop
es
add
xor
imul
outs
mov
or
jmp
push
jns
imul
push
mov
sahf
test
sub
sbb
cli
mov
xor
scas
movs
cmps
in
and
cmps
cld
sbb
pop
cli
sbb
or
cmp
mov
jno
in
mov
(bad)
jge
and
(bad)
ret
js
mov
xlat
(bad)
jae
mov
jns
inc
mov
and
das
xchg
fcomp
push
lods
sub
int3
inc
loop
packuswb
(bad)
mov
push
xchg
lock
mov
dec
sbb
shl
add
xlat
dec
cs
xchg
jne
imul
add
popf
nop
popf
jnp
or
mov
lock
lock
aad
enter
ds
dec
out
mov
out
je
(bad)
sbb
and
jne
cs
dec
aaa
aam
jle
sti
adc
retf
outs
imul
mov
gs
mov
icebp
xchg
pushf
cmp
mov
sti
addr16
(bad)
aaa
fwait
cld
inc
sbb
sub
mov
add
adc
mov
adc
pop
in
and
(bad)
int3
or
std
lods
push
and
xchg
lods
jmp
lds
inc
mov
frstor
mov
retf
xchg
fs
jp
xchg
in
and
sbb
sbb
pop
mov
bound
shl
mov
jmp
mov
jge
xor
adc
inc
push
jg
or
loop
inc
mov
popa
push
scas
nop
fs
mov
jecxz
outs
or
mov
jb
dec
bound
dec
cli
add
aas
dec
test
ins
sbb
popf
mov
lahf
call
and
out
cli
pop
in
bound
xchg
dec
xor
ret
jle
mov
sahf
add
nop
push
ins
std
cmp
popa
pop
mov
cwde
push
shl
xchg
int3
ror
inc
mov
or
pop
popa
mov
mov
push
test
xchg
data16
jle
push
dec
fld
mov
ja
mov
pop
je
cli
mov
mov
test
stos
rol
or
(bad)
arpl
icebp
push
scas
push
out
retf
inc
adc
cmp
(bad)
or
nop
xor
int
pop
sub
mov
pop
push
sub
das
or
les
mov
imul
xchg
cmc
pusha
ja
addr16
and
push
ins
neg
push
adc
retf
sbb
test
dec
imul
cli
test
loopne
push
sub
hlt
lods
add
sbb
sub
scas
into
cdq
(bad)
sbb
ja
(bad)
fnstenv
push
pushf
and
or
pop
pop
cmp
out
shl
inc
scas
cwd
sti
add
fcomp
lock
gs
out
scas
enter
add
pop
cmps
mov
push
jnp
outs
repz
sbb
xor
(bad)
push
pop
add
into
loopne
or
out
push
(bad)
xlat
add
bound
leave
(bad)
clc
daa
ds
xor
fdivr
cmp
das
xchg
fxam
add
xor
jns
mov
push
mov
sbb
cmc
icebp
jo
jo
(bad)
add
fs
stos
imul
xchg
outs
xor
xchg
ret
pop
(bad)
pop
sbb
les
adc
jb
xor
sti
or
jecxz
call
cmp
dec
outs
mov
inc
dec
retf
retf
aad
push
iret
movs
lds
mov
out
mov
sahf
dec
(bad)
xchg
jmp
sbb
push
sub
cmc
xor
pop
mov
out
movs
or
add
sbb
pop
sbb
cli
mov
mov
(bad)
dec
sti
mul
and
in
aaa
lock
rcl
(bad)
jnp
mov
shl
(bad)
jmp
std
fidiv
call
cmps
dec
mov
test
dec
fiadd
pop
test
push
fcomp
fs
test
addr16
jmp
ds
dec
addr16
(bad)
jnp
in
ror
aaa
mov
dec
pop
je
adc
xchg
jp
test
in
xchg
daa
adc
jnp
mov
(bad)
leave
cwde
or
sbb
hlt
hlt
repnz
in
fwait
jns
shr
jne
xchg
jne
in
pop
sbb
and
sub
cmp
and
push
pop
mov
dec
shl
hlt
inc
xor
movq
mov
(bad)
sub
stos
cmp
adc
stos
adc
or
sub
in
ror
cmp
and
sbb
lods
xchg
test
aaa
aad
lahf
add
or
bound
int
adc
jecxz
xor
add
retf
mov
lock
xor
mov
inc
test
and
jl
fst
scas
daa
popa
inc
fisub
xchg
jp
test
loop
cmp
les
mov
mov
and
xchg
cmp
daa
in
repnz
outs
out
pop
add
add
retf
mov
arpl
push
mov
pushf
arpl
cwde
ss
push
dec
sbb
arpl
or
push
dec
xchg
push
inc
leave
dec
mov
sbb
loope
jecxz
sbb
(bad)
push
pop
cmps
inc
scas
inc
mov
je
xchg
dec
dec
outs
inc
cdq
mov
add
or
sub
add
pop
idiv
les
iret
inc
mov
push
ds
push
push
lds
adc
inc
cmps
mov
dec
retf
into
or
outs
test
dec
lea
mov
outs
mov
push
movs
sub
pop
mov
dec
add
jo
shl
sar
sub
mov
fdivr
sub
jno
outs
fdivr
mov
jp
mov
xchg
hlt
add
jnp
push
mov
and
adc
jmp
das
sbb
jnp
xor
add
sbb
movs
outs
aas
dec
jns
movs
movs
les
ins
xchg
sbb
mov
aad
xor
mov
fidiv
loope
dec
adc
jge
mov
(bad)
dec
pop
push
out
mov
(bad)
pop
jmp
push
lds
retf
sub
add
imul
ret
or
call
shl
xchg
movs
mov
xchg
xchg
xchg
shr
int3
adc
in
bswap
mulps
mov
cmp
jmp
out
idiv
lahf
inc
aaa
dec
mov
fisttp
mov
pop
sub
retf
jns
int3
call
cmp
inc
push
mov
mov
nop
out
pop
dec
push
scas
ret
xlat
pop
cmp
pop
push
cli
inc
call
or
cmp
enter
push
ret
jp
inc
mov
push
sub
mov
mov
scas
call
pop
and
push
mov
imul
leave
cli
push
out
cwde
call
inc
mov
inc
js
not
mov
jns
cmps
rcr
push
test
sahf
mov
and
pop
out
lock
mov
pop
fst
cdq
push
jmp
call
xchg
mov
mov
sbb
xor
data16
icebp
pop
mov
jo
jo
add
loopne
fimul
icebp
pop
and
(bad)
adc
retf
repnz
jl
scas
jg
push
sbb
dec
lods
leave
jnp
(bad)
repz
(bad)
jns
in
inc
daa
and
call
out
scas
and
pop
dec
lods
imul
add
(bad)
mov
sub
icebp
push
leave
repnz
imul
fmul
sar
lods
dec
in
into
or
sbb
gs
call
mov
adc
ficomp
sbb
shl
(bad)
mov
mov
sbb
gs
dec
jb
mov
push
add
sar
aad
imul
push
and
mov
call
call
lea
in
movs
imul
popa
or
fwait
sub
outs
jo
or
shl
clc
jno
xchg
push
pop
fcom
sahf
and
pop
or
pop
xor
mov
loopne
xor
sub
pop
fisubr
dec
adc
sar
cmps
inc
push
xor
lods
mov
cmp
pop
fnstsw
xor
retf
push
xor
cmp
cmps
scas
shl
ins
add
fwait
repnz
fdivr
fs
adc
imul
sub
iret
xchg
xor
or
push
xor
int3
sbb
out
fcomp
fwait
push
fnstenv
mov
fiadd
mov
fs
mov
clc
ret
push
ss
cs
test
jae
xchg
iret
xchg
xor
mov
dec
jae
aaa
mov
cmp
xchg
outs
mov
mov
cmps
es
int3
lods
dec
adc
pop
xor
cwde
xchg
out
push
inc
add
cmps
aad
jle
clc
cmps
or
(bad)
dec
or
dec
push
ss
sub
test
lods
inc
mov
ret
(bad)
and
outs
push
adc
jmp
in
repz
das
push
mov
xchg
xchg
and
mov
ja
xor
sahf
add
jae
dec
jae
or
imul
test
popa
cmps
test
inc
sub
enter
loopne
mov
dec
inc
cdq
std
int
sub
and
or
push
fstp
scas
push
repz
xchg
scas
sbb
pop
sub
cdq
out
enter
pop
fidivr
addr16
cmp
inc
idiv
inc
cmp
add
call
adc
adc
out
xchg
xchg
sbb
add
clc
int3
aaa
sbb
push
xor
enter
xor
mov
pop
out
add
cmp
iret
pop
retf
bextr
jle
(bad)
push
mov
dec
adc
sub
test
repnz
movs
ret
xlat
sub
mov
or
mov
push
(bad)
pop
and
ins
hlt
or
scas
shr
or
xor
outs
in
or
mov
pop
xchg
mov
dec
sub
lock
and
mov
retf
inc
inc
retf
push
jns
and
sti
dec
aam
or
repz
adc
sahf
xchg
into
js
icebp
and
jl
adc
inc
or
ror
dec
int
push
sub
fxch
jbe
jno
fstp
dec
xor
out
dec
repnz
pop
mov
test
icebp
and
mov
outs
add
scas
into
es
inc
sub
loop
fcmovnbe
test
xlat
xchg
mov
in
xchg
mov
or
sbb
das
and
fwait
mov
inc
fst
or
and
out
out
out
mov
fdiv
into
xchg
out
inc
(bad)
fdivr
xchg
cmp
imul
les
or
imul
retf
outs
cmp
popa
and
pop
daa
mov
adc
test
ret
cmps
push
aas
cmc
movs
test
shl
mov
xchg
xor
cli
add
test
mov
cdq
and
adc
mov
test
ror
xor
lahf
mov
xor
jmp
fldcw
(bad)
xchg
aaa
(bad)
mov
call
movs
das
pusha
icebp
mov
sub
retf
div
pop
test
enter
xor
ss
xchg
daa
push
xchg
add
repnz
sbb
retf
js
pop
xor
inc
xchg
stos
xchg
adc
cmp
mov
add
loop
or
add
cmp
jno
push
sbb
popf
lds
cmp
push
fldcw
mov
mov
mov
xchg
jo
cmp
dec
movs
adc
and
sbb
mov
cmc
je
(bad)
icebp
loope
or
add
push
xchg
jbe
jo
dec
sub
gs
cs
and
retf
pop
adc
sbb
sub
push
lods
lods
mov
xchg
add
xchg
outs
loope
call
lahf
or
push
es
lods
and
add
sbb
pusha
shl
add
or
sbb
mov
adc
push
xor
cmps
out
shl
jne
dec
hlt
daa
sub
adc
dec
ins
fisttp
cmp
mov
cmp
cli
out
test
lods
cld
out
mov
stos
xchg
(bad)
call
jo
test
loope
dec
fist
dec
pop
shl
mov
addr16
test
retf
outs
shr
xchg
test
fwait
push
(bad)
mov
imul
(bad)
jno
inc
(bad)
adc
pop
push
inc
ret
sahf
or
push
mov
clc
pusha
loopne
xor
in
cmc
adc
jno
outs
xchg
xchg
pop
pop
sbb
inc
sbb
out
out
jge
repnz
arpl
dec
test
push
lock
jmp
mov
es
retf
dec
shl
jo
ins
out
cli
push
ins
imul
aad
out
adc
out
cmp
adc
test
hlt
fdivr
xchg
or
sbb
test
xor
mov
mov
hlt
jle
sub
ins
cdq
sbb
sbb
aam
xor
cmp
push
movs
rcr
or
cmp
jmp
xlat
sahf
sbb
fnstsw
mov
adc
call
mov
fsub
and
ins
pushf
mov
test
inc
cdq
lahf
sbb
dec
pusha
mov
out
inc
mov
adc
rol
mov
aaa
add
add
out
cmp
ret
call
test
add
inc
(bad)
bound
movs
ins
xor
scas
inc
cmp
xchg
push
in
test
jae
sti
pop
cdq
sahf
(bad)
jecxz
cmc
xchg
adc
push
idiv
sbb
enter
mov
sub
and
leave
pop
jbe
xor
inc
loope
adc
xchg
int
xchg
retf
mov
xchg
mov
jb
xor
movs
pop
add
bound
movs
xor
sub
and
das
and
sti
fiadd
or
jl
out
cmp
mov
mov
sbb
jb
daa
mov
xor
cmps
in
mov
xor
add
cdq
push
dec
jge
xor
pop
xchg
jmp
popa
xchg
jge
dec
je
daa
jl
int
inc
jle
push
(bad)
sti
adc
int3
sbb
or
jle
ror
xchg
mov
in
or
int3
sbb
and
dec
out
sbb
inc
pop
test
ret
sahf
add
lods
fcomp
nop
and
inc
add
les
mov
stos
mov
shr
jge
push
sub
sub
pop
jmp
or
jg
inc
push
adc
in
sub
cs
dec
xor
(bad)
loop
leave
ss
sbb
sahf
in
fwait
sub
mov
sbb
or
sbb
mov
push
dec
xor
xor
loop
(bad)
sti
and
or
mov
fbstp
rol
dec
fmul
dec
ret
sub
aaa
xchg
dec
xor
jb
cmp
scas
sub
pop
push
jmp
jbe
out
inc
xor
xor
out
(bad)
xchg
in
fld
ret
aam
sbb
jg
dec
in
push
loope
push
xor
xor
(bad)
cmp
cld
add
inc
lods
inc
and
fwait
je
rcl
jmp
mov
icebp
push
imul
imul
adc
jmp
and
inc
mov
sbb
sbb
pop
and
mov
pop
add
les
mov
mov
fs
test
or
imul
repz
or
in
cmp
aas
mov
push
ror
push
in
je
lods
adc
fcmovnbe
(bad)
xchg
xlat
xchg
aad
jecxz
or
mov
popa
cmp
shl
shl
loope
inc
inc
call
mov
leave
cs
aas
sbb
push
aad
fwait
ja
stc
aam
mov
sahf
xchg
dec
aas
retf
nop
adc
in
push
dec
adc
add
jns
montmul
cmps
inc
add
fwait
inc
mov
push
xchg
and
push
mov
dec
loopne
or
pop
scas
xchg
and
dec
rol
adc
mov
push
adc
adc
mov
sbb
loope
push
in
push
leave
jecxz
bound
cdq
mov
cmps
stos
xor
pop
aaa
pop
ret
xchg
fistp
cs
jnp
jg
imul
push
add
add
cmp
adc
ins
adc
test
(bad)
daa
cli
sub
add
jmp
mov
adc
les
xor
mov
lock
add
test
jbe
pop
mov
outs
ror
push
inc
outs
test
dec
scas
pop
cmc
pop
mov
fld
mov
add
aaa
xor
mov
(bad)
jns
sub
and
mov
and
pop
(bad)
lock
dec
cmps
xchg
inc
push
mov
and
(bad)
rcl
and
imul
mov
cmps
xchg
sub
inc
sub
cmp
test
in
shl
lds
sbb
xor
cli
lds
stc
(bad)
inc
push
hlt
lods
enter
test
jno
call
lods
es
sbb
inc
movs
mov
loop
dec
xor
out
dec
fiadd
aaa
mov
lea
in
int3
loop
popa
js
test
not
in
fstp
inc
adc
sbb
aam
inc
mov
jmp
sbb
test
inc
aam
sub
outs
inc
jbe
imul
xlat
fidivr
xchg
cmp
arpl
ss
adc
jmp
jecxz
mov
cli
sub
(bad)
clc
inc
(bad)
in
adc
call
test
(bad)
int
cmp
fimul
out
push
into
cmp
cmp
int
cli
jmp
adc
stc
je
fisttp
test
repnz
sahf
mov
in
sahf
pop
adc
mov
test
sub
into
les
in
cmp
aad
jbe
xor
loop
cmp
pop
xchg
cmp
sbb
inc
sahf
sahf
pop
(bad)
sti
(bad)
enter
add
int
dec
popf
pop
sub
xchg
mov
dec
fs
ret
jno
xor
cmp
add
stos
mov
mov
jb
xchg
mov
rol
addr16
xchg
jp
jbe
les
jbe
into
mov
outs
lahf
jmp
dec
dec
inc
inc
dec
push
mov
push
pop
out
pop
shr
lea
mov
push
sar
js
nop
scas
or
inc
les
and
fidiv
xor
mov
mov
cmp
test
add
(bad)
jmp
test
jo
fwait
inc
add
loop
mov
jno
mov
fwait
test
in
test
out
cmc
in
push
ret
out
fcomi
loop
(bad)
ds
out
sub
inc
lods
dec
mov
and
adc
scas
pop
push
imul
xor
nop
rol
add
mov
lea
jnp
jecxz
adc
jno
dec
pop
push
jns
push
test
nop
or
call
pop
fmul
(bad)
call
bound
imul
cmp
fdiv
adc
arpl
ins
pop
(bad)
sub
jp
mov
sahf
mov
push
sub
aam
xchg
cmps
aad
nop
jb
imul
sbb
mov
icebp
inc
push
fbstp
(bad)
push
mov
in
cmps
test
cmps
adc
ret
sti
ins
xor
int3
mov
push
scas
mov
inc
mov
sub
sbb
jb
sub
xlat
loope
pop
shl
push
pop
sub
repz
pop
push
dec
mov
mov
test
cdq
xchg
lahf
add
adc
adc
fwait
xchg
retf
dec
shr
xchg
xchg
cli
(bad)
out
jmp
data16
push
ss
pop
mov
mov
jg
stc
push
sub
xchg
lods
and
push
jns
invd
popf
inc
jmp
(bad)
mov
or
popa
jg
outs
jne
sbb
xor
(bad)
(bad)
out
stos
xchg
sub
sbb
sbb
xor
jb
shl
push
sahf
fnstcw
arpl
push
add
sbb
test
jae
movs
bound
pop
pushf
inc
push
push
fistp
pop
push
retf
mov
xchg
pop
xchg
sub
jle
lds
sub
push
not
inc
rol
lods
inc
inc
or
(bad)
mov
cmp
stos
lods
push
and
sahf
rol
test
cmps
in
int
inc
jbe
mov
adc
cmc
sbb
fistp
pop
push
xchg
nop
sub
mov
and
sbb
xchg
es
faddp
xor
ret
mov
push
lds
push
loopne
push
fsubr
push
(bad)
mov
jge
xchg
ficomp
ret
dec
lods
test
jbe
cwde
inc
xor
jbe
movs
mov
pop
push
aad
xor
icebp
clc
cwde
frstor
pusha
dec
in
int
mov
lock
outs
jns
xor
mov
push
jbe
xchg
pushf
dec
pusha
mov
push
imul
sahf
add
ins
sbb
loope
jbe
stos
and
push
sub
in
pop
fist
mov
cmp
xchg
mov
clc
pop
int3
jge
and
adc
and
push
test
jmp
call
ds
add
test
or
ret
push
push
mov
adc
stos
xor
add
retf
add
sbb
cmps
jp
neg
cmp
or
cdq
inc
fistp
sub
mov
jbe
mov
mov
xor
xchg
ss
shr
call
cwde
pop
xor
or
iret
pop
fimul
mov
xchg
ja
(bad)
dec
test
and
scas
jae
and
or
mov
mov
data16
dec
push
aam
je
fldenv
scas
cmps
cmp
pop
adc
(bad)
mov
pop
iret
cmp
out
cdq
(bad)
sbb
test
sub
sub
mov
mov
dec
retf
cs
jns
mov
mov
hlt
or
enter
imul
popf
add
xor
xchg
mov
push
scas
xor
ja
sar
push
addr16
or
lods
cmp
add
jae
sti
push
jecxz
(bad)
push
cmp
mov
test
mov
cmp
pop
cmp
jns
or
out
syscall
jl
(bad)
cmp
cmps
jae
add
pop
jnp
cmp
or
mov
ror
lods
inc
mov
add
aas
push
pop
inc
ss
xor
mov
(bad)
adc
pop
ja
jae
ret
test
in
cwde
xor
leave
imul
out
add
sub
add
dec
retf
imul
cdq
jge
(bad)
push
sub
pop
aas
ds
mov
ret
mov
mov
cld
loop
mov
cs
fiadd
arpl
xchg
(bad)
push
jmp
xor
test
and
jecxz
cmp
retf
scas
xchg
jp
dec
jae
stos
cmp
(bad)
mov
push
fcom
jnp
jo
jno
mov
call
sbb
pop
(bad)
mov
mov
test
mov
outs
aad
loope
pop
jbe
faddp
push
jp
lds
cmp
sbb
clc
add
or
xor
push
in
mov
add
or
fnstenv
add
jle
inc
adc
jp
test
push
mov
fs
addr16
sub
cmp
pop
in
scas
ins
cwde
out
les
repz
mov
add
add
mov
(bad)
rol
in
cs
pop
bound
movs
jle
ret
xor
mov
bound
mov
popa
or
sti
mov
adc
cmps
xchg
sbb
mov
pop
pop
rol
jmp
test
iret
cmc
push
jnp
pusha
xor
sub
xchg
fst
dec
adc
cli
cmps
push
adc
div
add
xor
adc
aad
adc
out
jno
or
fst
pop
sbb
mov
or
bswap
ins
test
push
test
ret
cmps
icebp
push
push
cmp
int
cmp
sbb
jmp
fild
in
push
ins
iret
push
cmc
std
movs
or
stc
clc
daa
jl
pop
xor
mov
push
jnp
or
pop
icebp
loop
adc
mov
jmp
mov
sub
jmp
jecxz
cmps
(bad)
cmp
rcl
fs
xchg
cmp
dec
jno
loope
inc
push
mov
jmp
enter
dec
leave
fmul
pop
xchg
sub
nop
ja
sar
mov
dec
addr16
pop
btr
push
pop
mov
sbb
xlat
mov
or
addr16
cli
ror
nop
aad
mov
aad
sbb
adc
rcr
aad
mov
jge
jmp
pusha
xlat
push
ds
mov
mov
jmp
and
(bad)
pop
mov
cdq
xor
mov
fidivr
xor
push
dec
fadd
xchg
aam
pop
lahf
cmp
mov
jae
mov
test
xor
cmps
xor
xchg
arpl
mov
loopne
sub
inc
push
call
push
pop
cmp
lods
push
mov
aam
cmps
sbb
cmp
inc
xchg
shr
imul
jg
add
pop
xchg
dec
adc
js
fwait
fwait
jns
(bad)
mov
aam
dec
add
dec
mov
shr
inc
cmp
mov
dec
fstp
fsubr
in
repz
xchg
loopne
cdq
push
jns
out
call
fs
pop
fdiv
push
add
adc
lods
mov
dec
(bad)
repz
out
ret
push
inc
and
cld
std
popf
xchg
fptan
sbb
mov
ret
jmp
adc
xchg
ror
aaa
lock
loope
popa
loope
push
clc
ret
jo
in
and
lahf
arpl
jmp
(bad)
adc
das
popf
cwde
in
jecxz
out
std
aas
mov
stos
lahf
addr16
sbb
call
js
jo
ins
aaa
add
add
lahf
call
aaa
inc
aad
int3
inc
add
lods
and
leave
int3
stos
in
mov
push
shl
xor
mov
leave
xor
je
pmulhuw
mov
jl
ja
in
rol
dec
jno
imul
xor
scas
adc
jmp
add
fwait
add
pop
add
xor
pop
call
imul
jb
xor
mov
jmp
xchg
out
cmp
push
sti
dec
dec
or
mov
push
dec
jmp
(bad)
jo
ret
pop
aad
add
pop
xor
mov
int3
xchg
fwait
cmp
mov
push
call
push
daa
dec
leave
mov
and
jecxz
inc
xor
nop
in
xchg
sbb
hlt
ins
push
and
es
xchg
push
pop
sar
mov
xor
and
add
sub
aaa
dec
sub
cli
sbb
(bad)
loope
in
jp
jle
mov
retf
ins
xor
cmp
or
inc
cmp
jb
jae
cmovno
stos
jmp
(bad)
jbe
and
adc
cmc
lods
add
push
cwde
xchg
(bad)
(bad)
add
dec
push
cmp
push
sbb
mov
sub
ins
stos
adc
(bad)
repnz
ficomp
pusha
xchg
fisttp
lea
repz
cmp
fstp
or
mov
out
pop
ror
sbb
or
or
test
xlat
(bad)
cs
inc
mov
and
dec
daa
cmps
mov
movs
aad
outs
test
jmp
xchg
cwde
pop
or
fist
fmulp
popa
test
outs
js
mov
sub
cmps
daa
pop
cmps
xor
sbb
mov
mov
(bad)
les
jnp
stc
xor
push
loope
mov
dec
int
nop
sbb
and
push
cmc
ins
cmps
dec
movs
rol
adc
in
test
jbe
into
sbb
jo
addr16
int3
push
and
dec
or
sub
loopne
mov
test
loop
mov
xchg
adc
cmp
add
hlt
mov
loop
cmp
setbe
out
sbb
icebp
ins
das
sar
fucomi
idiv
js
jmp
pop
dec
mov
dec
push
sar
retf
inc
int3
aas
add
or
mov
add
mov
std
jl
and
popf
adc
mov
das
je
mov
jnp
lahf
stc
sbb
scas
mov
adc
fs
test
pop
mov
pop
je
and
mov
lahf
(bad)
adc
cs
xor
jns
cmp
test
cmps
call
loope
out
mov
mov
dec
mov
jmp
aam
(bad)
lea
retf
xor
cmp
shl
adc
add
push
std
je
xchg
fist
sub
mov
xchg
arpl
retf
sahf
xchg
pop
jnp
imul
and
cmp
lahf
aaa
pop
sub
aas
mov
rol
sbb
aad
fwait
ret
cmc
gs
mov
cmc
mov
jmp
mov
or
jp
inc
pop
sbb
sar
call
xor
pop
ficomp
adc
repnz
cs
mov
(bad)
or
arpl
jb
cli
cmps
push
fwait
mov
mov
pop
clc
adc
xchg
popa
jmp
sub
add
sub
in
inc
repnz
clc
fmul
xchg
push
das
repnz
mov
mov
std
ja
cmp
cmp
rcl
in
out
dec
jns
shl
jl
and
ficomp
xchg
sahf
jp
mov
mov
out
dec
aad
ja
jnp
pop
imul
sub
sub
aam
cmp
push
hlt
mov
add
mov
(bad)
in
lods
retw
sbb
ficomp
retf
inc
cld
xlat
jecxz
mov
sub
and
daa
das
jge
es
std
add
mov
and
fisttp
or
xor
fst
mov
div
arpl
or
push
push
jne
xor
out
lods
xor
dec
cli
xchg
arpl
inc
pop
xchg
aaa
xchg
push
xor
pop
pop
push
mov
mov
and
pop
aaa
jb
imul
sbb
(bad)
cmps
mov
aam
xor
into
xchg
and
addr16
retf
enter
mov
enter
xchg
les
mov
ja
mov
outs
js
sbb
cwde
(bad)
or
cmp
jb
cmp
cli
or
int
and
inc
adc
push
pop
jb
cmp
jae
cmp
(bad)
idiv
test
fimul
dec
daa
dec
dec
mov
cs
aaa
repnz
fistp
dec
je
pop
icebp
enter
push
sbb
leave
in
pusha
test
mov
jb
inc
jecxz
scas
fisub
mov
cmps
sub
aad
faddp
ret
jecxz
push
test
hlt
icebp
pop
shl
mov
fist
jecxz
and
int
in
jo
scas
mov
push
dec
int
out
jmp
inc
inc
adc
int
sub
ror
dec
sahf
add
push
xor
xchg
out
movs
sahf
mov
inc
sub
sub
mov
mov
(bad)
adc
pop
mov
adc
and
aad
lds
or
int3
(bad)
pop
inc
mov
xlat
das
and
pop
sub
jb
push
xor
enter
xchg
and
and
push
arpl
aam
in
inc
add
inc
pop
in
jbe
dec
xor
and
sahf
mul
lock
mov
sar
xchg
adc
in
mov
rcl
xchg
aam
push
xor
ja
or
xchg
dec
sbb
xor
mov
(bad)
sbb
ins
ins
mov
add
(bad)
fdivp
in
and
xor
inc
mov
sbb
and
shl
mov
adc
rcr
popf
push
mov
leave
movs
or
cmp
mov
adc
stc
mov
(bad)
dec
or
jp
jb
mov
add
(bad)
xchg
xor
xchg
jmp
jl
into
xchg
ss
mov
lods
in
sub
mov
push
pop
shr
arpl
mov
test
mov
or
fild
in
and
icebp
aam
call
je
test
addr16
or
mov
jl
retf
out
ja
fsubr
arpl
push
pop
and
cli
xchg
and
sbb
fs
pop
retf
(bad)
xor
bswap
rcr
push
cwde
jl
push
push
push
xchg
inc
jne
ficom
es
sbb
xchg
ficom
sti
push
cld
xor
add
arpl
mov
imul
inc
leave
outs
ret
stos
jmp
and
xchg
adc
imul
cmc
mov
jecxz
sbb
sbb
mov
(bad)
fisub
inc
dec
push
or
jecxz
push
aaa
jb
(bad)
mov
clc
dec
jae
xchg
loopne
call
test
sbb
outs
mov
aaa
push
mov
dec
repnz
call
sub
popf
mov
mov
add
and
push
(bad)
out
cs
or
or
sbb
push
fiadd
xchg
stos
adc
mov
(bad)
dec
push
movs
rcl
aam
push
pop
fstp
xchg
(bad)
dec
cmove
cdq
xor
fcom
pop
pushf
fsubr
shr
and
or
cmps
xor
shl
xchg
mov
popf
test
cli
aaa
push
push
ins
cmps
sbb
mov
pop
hlt
aaa
(bad)
mov
imul
nop
pop
sbb
pop
daa
add
and
addr16
in
mov
and
xor
xlat
fisub
aas
lock
push
cmp
movs
jle
outs
and
mov
add
int
jb
ins
jmp
in
fcmove
lea
xchg
hlt
retf
dec
pop
sub
jecxz
pop
imul
dec
mov
jmp
jbe
cmp
jl
test
xlat
push
xchg
pop
inc
lods
jnp
mov
leave
sbb
mov
in
test
sub
push
addr16
cmp
repnz
call
shr
add
scas
cmp
lock
pop
mov
ffreep
push
sti
in
sub
mov
push
push
adc
inc
sub
nop
inc
pop
mov
adc
retf
pop
je
push
out
js
xor
mov
mov
jns
mov
out
mov
adc
call
addr16
rol
outs
xor
mov
xchg
sub
pop
clc
retf
inc
cmps
add
adc
mov
push
mov
cs
popf
outs
and
xor
pop
and
pop
push
aaa
inc
stc
xor
jo
enter
xor
jbe
dec
jecxz
in
mov
push
inc
cmp
push
int3
jae
push
dec
adc
xchg
dec
sti
pause
mov
fwait
mov
jne
test
xchg
fdiv
cwde
jle
add
dec
frstor
js
test
mov
dec
stos
push
dec
add
mov
icebp
cvtdq2ps
push
sbb
mov
dec
dec
mov
inc
dec
or
inc
shr
push
mov
push
arpl
iret
clc
dec
push
lea
adc
inc
xchg
(bad)
mov
int
mov
call
call
xchg
inc
and
gs
leave
hlt
lds
fdivr
pop
popf
(bad)
test
mov
popa
xchg
mov
jnp
add
bound
cmp
ret
dec
clc
cmps
sub
push
ret
jne
jp
icebp
fsubr
add
jmp
mov
pop
icebp
inc
loopne
std
push
mov
xor
pop
inc
cmps
fdivr
adc
ins
ins
jae
hlt
fwait
sub
int3
cmp
xor
int
movs
test
xlat
cmps
mov
popf
inc
adc
clc
in
and
add
cmp
movs
rol
or
pop
or
xor
push
and
or
sub
jmp
and
sar
push
jecxz
out
out
pop
xchg
cmc
in
mov
cwde
daa
push
pop
(bad)
sti
mov
cli
adc
inc
sbb
mov
fs
xor
adc
xor
inc
and
mov
cs
cmps
test
add
loope
xor
jge
lods
jo
or
inc
lods
mov
mov
cld
rol
out
and
out
dec
pop
js
lea
in
mov
jp
mov
add
int3
je
not
dec
mov
test
cmps
mov
cwde
fld
and
cmc
mov
mov
das
int3
mov
push
jl
jle
cmp
call
mov
lods
jb
jns
movs
mov
xor
(bad)
stos
lahf
rcl
adc
lock
sub
xor
jo
or
les
fist
sub
push
xor
push
dec
clc
inc
and
jne
add
(bad)
or
out
ror
xor
xor
fstp
test
mov
pop
jl
int
iret
call
fnsave
lods
mov
mov
loop
int
cmp
inc
dec
or
ins
mov
movs
repnz
ss
push
sub
add
inc
inc
fiadd
adc
dec
imul
or
jge
pop
xor
movs
lock
out
jb
cwde
sbb
cmp
mov
mov
test
mov
in
and
mov
sbb
inc
push
je
dec
cmps
rcr
add
in
push
pop
fdivp
xchg
dec
lahf
mov
sbb
sub
fmul
fiadd
adc
into
xchg
lods
fcmovu
jmp
cli
jns
nop
repnz
push
or
mov
mov
sub
(bad)
mov
movs
cmc
or
add
mov
and
fstp
xor
xchg
or
test
xchg
leave
or
mov
mov
ret
add
sbb
rcl
sub
mov
dec
call
cmp
aaa
fs
mov
jno
cmc
adc
cmc
(bad)
dec
out
inc
push
jo
add
int
and
mov
call
call
fmul
inc
inc
xor
ror
jp
repz
les
cdq
inc
cdq
fs
lock
std
repnz
out
add
pop
cs
mov
dec
ja
xchg
mov
xlat
add
dec
stos
jg
xchg
stos
adc
inc
enter
jb
fbstp
lea
push
cmp
push
mov
pop
mov
ins
addr16
scas
pop
xchg
ins
sub
es
add
lahf
jnp
retf
popa
(bad)
lds
jo
add
in
or
push
movs
jmp
(bad)
aas
xor
mov
fiadd
out
enter
push
(bad)
cli
fldcw
sub
pushf
mov
setl
cmps
dec
popa
lds
sub
xor
mov
lods
inc
jmp
jo
jbe
aas
push
sub
fild
cs
test
adc
test
dec
es
jns
lods
ja
or
sub
daa
dec
pushf
jns
mov
mov
xor
movs
stos
push
xchg
adc
inc
jecxz
movs
sbb
add
aaa
adc
xor
hlt
inc
(bad)
dec
dec
ss
ins
mov
pop
push
pop
and
push
adc
xor
push
retf
and
cmps
mov
aam
or
mov
jmp
add
xor
imul
cld
daa
add
push
push
stc
pop
xor
pop
in
ror
sbb
loope
(bad)
jmp
mov
stc
daa
fsubr
cli
(bad)
add
sbb
xchg
mov
sub
jno
(bad)
test
fisubr
sbb
lahf
outs
cli
fucom
sbb
inc
jbe
or
ret
mov
sub
arpl
es
pop
add
mov
stos
cmp
jp
je
mov
adc
or
and
mov
mov
pop
cli
jbe
pop
repz
pushf
adc
retf
(bad)
cli
loope
scas
xor
mov
inc
cmp
sub
jp
out
(bad)
add
bound
data16
imul
fiadd
jmp
rol
icebp
or
fist
mov
dec
addr16
sub
sub
fdiv
cmp
dec
out
push
cli
(bad)
in
mov
xor
push
sahf
aas
add
les
push
pop
imul
movs
jmp
push
adc
push
test
out
loop
setno
fisubr
pop
mov
fsub
(bad)
out
jmp
sahf
jmp
pop
pop
and
ja
das
pop
test
jns
or
lds
arpl
xor
sub
push
ss
mov
rcr
iret
pop
out
xor
mov
sbb
aaa
ret
mov
and
mov
xchg
repnz
movs
ror
cli
daa
mov
std
pop
jbe
ins
sub
lds
daa
cmp
jno
sub
lock
rcr
imul
inc
gs
nop
pop
imul
xlat
test
sub
or
inc
add
aam
mov
gs
cmp
aaa
dec
xchg
(bad)
outs
cmps
jp
dec
sbb
xor
jge
mov
jp
icebp
ins
lods
sbb
fdivr
adc
fild
cmps
xchg
sub
push
mov
xor
jne
pop
cmp
repz
sub
cs
pop
aas
fild
scas
arpl
xchg
stos
imul
jbe
test
retf
fnsave
mov
push
repnz
sbb
std
xor
scas
add
popa
imul
jl
dec
mov
push
sbb
sti
in
(bad)
std
xchg
mov
or
popf
mov
sub
fidivr
jns
cwde
ins
mov
adc
sahf
rol
xchg
add
fisub
jp
jae
mov
jmp
add
test
mov
fcom
jno
pushf
cld
addr16
test
sub
test
cld
fdivr
push
sub
cmp
stc
or
int3
data16
mov
jne
aad
sbb
cmps
icebp
fild
xchg
push
dec
mov
or
cdq
ins
pop
cmp
xchg
fwait
mov
xchg
outs
sbb
icebp
aas
xlat
inc
shld
jno
pop
loope
push
or
ins
das
cld
loopne
in
stos
mov
imul
lods
xor
inc
fild
dec
scas
(bad)
pop
stc
int
sbb
push
jmp
jbe
mov
inc
xlat
ins
psrlq
js
in
mov
sbb
mov
arpl
ficomp
or
mov
(bad)
ins
jnp
bound
cmps
lds
pop
xor
mov
pop
pop
jne
mov
cmp
dec
pop
test
xchg
mov
sbb
and
mov
lods
mov
out
mov
shr
and
adc
cli
and
cmp
movs
sbb
daa
loopne
stc
(bad)
push
iret
or
out
stos
in
(bad)
and
fsubr
push
sbb
and
call
je
popf
sbb
add
mov
scas
adc
adc
push
outs
dec
adc
add
xchg
pop
or
jmp
jmp
icebp
in
call
xor
cs
adc
pop
stos
pop
hlt
mov
dec
xor
loop
xor
imul
arpl
xchg
(bad)
ds
push
adc
adc
push
mov
mov
imul
mov
mov
ror
push
cmp
test
or
jb
mov
mov
jg
push
dec
xlat
sbb
into
adc
jg
mov
movs
fmul
stos
out
sar
inc
jne
xchg
cmp
stc
or
add
js
dec
and
rcl
inc
cmp
sbb
push
cwde
fsubp
inc
xor
int3
fcmovu
test
and
js
push
jge
pop
fsub
pop
mov
sbb
imul
dec
call
test
inc
outs
ficom
xor
jb
jnp
push
or
pop
cwde
mov
push
and
hlt
gs
push
sbb
sti
xchg
fimul
bound
repz
and
(bad)
enter
hlt
sti
jns
imul
(bad)
xchg
call
lea
lods
mov
cmp
xchg
jmp
enter
push
sbb
imul
or
call
jnp
mov
and
adc
ret
jl
les
imul
ret
in
fcomp
imul
mov
fisubr
sbb
mov
inc
lahf
sahf
jp
sti
cmc
inc
xor
arpl
out
and
cmp
adc
push
xchg
jne
rol
add
int3
sub
pop
dec
sti
jb
push
dec
add
fdiv
xor
inc
mov
in
ja
cmp
mov
pusha
xchg
pop
ret
add
in
pandn
movs
cdq
jp
not
add
js
sar
push
adc
xchg
movs
xchg
lahf
jns
jge
sub
cdq
clc
aad
pop
stc
xor
pop
(bad)
out
shl
int3
movs
push
push
mov
mov
xor
jb
cmp
mul
and
push
loop
cs
jle
add
hlt
jb
in
rol
pop
mov
push
sub
(bad)
and
in
nop
fimul
cmp
jmp
dec
ja
pop
mov
cmps
xlat
dec
pop
mov
inc
jmp
mov
sub
add
ss
out
cmps
fcomp
fdiv
loopne
jnp
push
fld
pop
mov
push
enter
stos
pusha
fbld
add
ret
iret
repz
movs
sar
lods
jmp
and
sar
inc
jecxz
xchg
or
ja
je
inc
inc
pop
and
out
rcr
mov
sbb
jo
xchg
imul
pop
sbb
int3
xor
pop
sahf
dec
xor
test
jnp
daa
inc
inc
inc
add
mov
mov
out
mov
icebp
xor
push
stos
cmc
sbb
fcmovne
sub
je
adc
xchg
xchg
out
rol
add
jae
mov
sti
bound
punpcklwd
out
test
fcmovb
jg
jne
int3
movs
inc
pop
sar
les
test
imul
(bad)
leave
and
dec
shl
popa
mov
jbe
push
jmp
xchg
pop
add
xchg
jle
push
jge
cs
mov
cdq
cmp
enter
fild
sub
je
dec
fs
pop
mov
push
or
adc
push
cld
inc
ja
call
cmp
and
cmp
clc
or
jmp
add
movs
sub
dec
repnz
icebp
mov
xchg
(bad)
jb
dec
inc
retf
vdivsd
add
sbb
dec
pop
xchg
push
movs
mov
dec
ja
cmp
and
adc
pop
and
outs
sahf
add
inc
fisub
pop
jecxz
dec
mov
out
inc
ret
inc
inc
(bad)
cmp
addr16
lods
xchg
add
xor
repz
adc
(bad)
(bad)
or
xchg
loope
mov
sub
cmp
clc
adc
mov
and
cmps
jge
cmp
pop
in
push
ffreep
pop
loopne
in
mov
mov
imul
fidivr
mov
add
into
and
pop
adc
aad
mov
cmp
dec
ins
data16
add
jnp
add
jmp
xor
cld
cmp
ins
mov
pop
and
pop
adc
mov
jmp
xchg
aaa
ja
adc
(bad)
loopne
xchg
mov
push
push
xor
and
push
imul
js
sbb
test
sub
sbb
xor
pop
cdq
mov
mov
mov
shl
stos
dec
or
test
cmp
add
or
add
scas
std
shl
clc
push
inc
inc
out
and
mov
cmp
jne
mov
fwait
retf
std
stos
mov
xchg
outs
je
imul
lds
xchg
int3
jns
mov
pop
add
jae
das
and
add
cld
jb
out
mov
xor
call
shl
in
xor
in
pushf
js
test
push
mov
rcr
ss
mov
pop
and
inc
or
(bad)
scas
pushf
cmc
jnp
dec
mov
mov
(bad)
adc
icebp
out
pusha
inc
jmp
cwde
jecxz
jmp
cmp
jno
xor
popf
(bad)
retf
pop
and
cmp
xchg
fnsave
xchg
call
imul
xchg
test
xchg
(bad)
mov
lea
fistp
sbb
fbstp
xchg
jnp
or
fwait
sub
push
icebp
mov
lea
lods
hlt
(bad)
in
mov
neg
outs
dec
or
fs
jo
fisubr
cwde
push
enter
push
xchg
jb
in
dec
sbb
and
jg
pushf
inc
adc
shr
cli
cmc
or
(bad)
lds
call
sub
or
retf
es
sub
pop
cmp
mov
jmp
fs
jo
inc
cmps
mov
xor
xchg
shr
mov
call
mov
mov
pushf
mov
fs
mov
ret
sbb
jnp
pop
das
push
pop
addr16
xchg
ret
jmp
imul
test
fcomp
sub
(bad)
mov
enter
cld
sbb
sub
rol
xlat
mov
push
ficomp
dec
dec
in
mov
push
or
jmp
call
adc
std
aaa
xor
mov
daa
inc
pop
sbb
inc
push
sub
cmp
popf
loopne
xor
test
push
mov
ja
sub
inc
mov
dec
outs
jo
fst
inc
outs
pop
dec
dec
add
or
pop
data16
xchg
cmps
addr16
lds
and
dec
add
xchg
dec
enter
loop
and
cmp
xor
jbe
xor
ins
outs
je
xchg
leave
test
gs
cmp
dec
out
dec
ror
add
jo
cmps
jge
repnz
loopne
mov
imul
fsubr
dec
daa
das
fs
call
out
popa
adc
mov
mov
cmc
push
and
jmp
mov
sbb
ror
out
mov
push
mov
sub
daa
dec
mov
dec
popf
add
retf
(bad)
in
das
sbb
mov
sar
and
mov
add
inc
hlt
mov
mov
das
mov
les
js
out
and
aas
or
fldcw
add
int
ss
dec
xchg
and
adc
sub
aam
mov
cmp
add
xor
mov
pop
jns
jo
mov
push
stc
push
inc
lods
pop
cld
jl
xor
test
xchg
sbb
pop
add
and
jecxz
and
imul
lock
adc
or
test
movs
test
inc
ror
mov
popf
xor
(bad)
or
add
cmp
mov
or
mov
or
fiadd
xor
inc
inc
popf
cdq
imul
enter
aam
leave
aaa
cdq
xchg
xchg
pop
dec
adc
jne
in
push
push
jl
cmps
stc
mov
dec
mov
repz
xor
push
lods
clc
lods
dec
jmp
lahf
call
xchg
lahf
jmp
inc
neg
popf
jecxz
je
in
(bad)
fisttp
shl
hlt
in
cld
aas
scas
cmps
out
cdq
loop
push
lea
mov
test
pop
cmp
mov
jo
xchg
out
or
sbb
dec
dec
mov
xchg
dec
xchg
scas
mov
sbb
inc
cwde
ret
imul
cmps
rcl
fwait
and
jg
addr16
jmp
ror
std
in
push
sbb
xchg
or
sub
(bad)
int
push
push
fild
adc
push
mov
test
imul
xor
rcr
mov
or
mov
das
sub
ret
(bad)
pop
cs
xchg
imul
ja
ficomp
cvtdq2ps
mov
nop
bound
xlat
sti
sbb
or
popf
rcr
push
imul
(bad)
jecxz
frstor
pop
dec
(bad)
xchg
outs
lods
sbb
mov
mov
mov
jae
arpl
adc
(bad)
rol
ja
cmp
add
adc
cmps
push
mov
rol
lea
jo
jno
mov
mov
add
jmp
jns
(bad)
imul
int
out
out
jns
mov
xchg
(bad)
lds
jecxz
mov
add
mov
fdivr
add
sub
jge
imul
xchg
adc
shr
pop
add
mov
push
jnp
xlat
retf
dec
dec
lea
mov
lods
mov
xchg
ror
psubq
aas
bound
xchg
cmp
or
leave
nop
fcomp
je
cmp
xchg
sahf
mov
mov
fucomp
push
mov
pop
in
cmp
cmp
(bad)
cs
mov
icebp
dec
das
cmp
icebp
adc
imul
or
push
cmp
add
outs
jmp
cmp
add
mov
push
ret
repnz
out
test
aaa
push
or
out
out
xlat
push
inc
cmp
cmp
or
jo
xor
loope
pop
(bad)
daa
test
imul
aaa
mov
mov
inc
xchg
mov
sub
and
es
sbb
mov
fwait
push
jns
repz
mov
les
push
ret
xorps
xchg
jae
ret
(bad)
hlt
fs
mov
repz
xchg
mov
or
test
mov
jmp
mov
jnp
xlat
push
xchg
adc
ja
mov
cld
pop
ins
adc
sbb
and
idiv
int3
xor
bound
adc
sub
jo
mov
popf
pop
in
call
add
adc
mov
rol
popf
adc
push
mov
les
mov
fdiv
fdiv
and
push
jne
iret
dec
mov
lods
fcmovnu
cld
inc
xor
fild
fcomip
adc
test
lea
sub
into
jo
fsub
add
sub
enter
ds
int
adc
fisttp
sbb
jae
jo
cdq
inc
xchg
fsubrp
jp
es
adc
fnstsw
push
ja
add
inc
pop
dec
jo
xchg
or
xchg
and
push
aaa
push
retf
loop
add
mov
shr
hlt
sub
repnz
jg
adc
jl
data16
mov
inc
aas
or
loopne
enter
int
div
xchg
inc
lds
or
in
add
adc
retf
jmp
call
sbb
std
std
pop
add
jmp
push
in
int
(bad)
retf
mov
pop
dec
sbb
xor
dec
mov
sbb
mov
push
cli
cmp
int3
into
dec
dec
rcr
push
hlt
mov
mov
adc
mov
imul
dec
rol
retw
jb
or
(bad)
sub
mov
pusha
sbb
adc
sbb
fldenv
jne
out
sub
mov
fiadd
or
cli
dec
pop
xor
jg
cmp
in
iret
mov
cmp
mov
or
xlat
sbb
xor
sbb
in
cmps
add
xchg
retf
inc
cdq
fs
pop
mov
in
outs
sar
xor
dec
imul
cli
repnz
pop
sbb
mov
aaa
dec
loope
add
xor
je
add
mov
in
sub
xchg
or
ror
nop
push
jnp
std
push
(bad)
adc
fbstp
repnz
add
mov
inc
xchg
add
jb
daa
lahf
add
push
sub
mov
outs
lea
leave
retf
cld
dec
jmp
sahf
pushf
in
push
dec
pushf
cmp
mov
xor
jl
cmp
add
pop
out
jmp
push
(bad)
mov
addr16
popa
fiadd
ret
stc
loope
cmp
sbb
movs
std
fs
mov
pop
push
sub
out
pop
jne
xor
cmp
adc
and
mov
ret
xchg
adc
out
xchg
enter
xor
mov
lahf
cmc
lods
push
pop
xor
xchg
mov
sub
outs
sbb
and
shl
sbb
xor
cld
sub
ja
xchg
cmp
ins
out
inc
loope
jmp
lahf
ret
pop
and
jb
shl
jo
adc
xchg
scas
inc
(bad)
fbstp
sub
pop
out
js
cmps
push
gs
mov
push
shl
jl
mov
mov
add
lahf
pop
and
sbb
rcr
(bad)
rcl
imul
daa
pop
rol
stos
cmp
es
popf
fs
mov
sahf
popa
jl
jmp
popf
imul
inc
scas
cmc
hlt
icebp
inc
mov
rcr
sbb
mov
adc
fs
vaddpd
lea
mov
lds
jno
addr16
cmp
pop
cmp
jno
jno
and
push
aam
rcr
pop
jo
dec
add
mov
mov
test
jns
or
sub
in
push
int3
mov
(bad)
movs
jb
or
push
push
test
cs
pusha
mov
mov
repnz
pop
lods
scas
inc
iret
daa
test
or
nop
out
loopne
pop
mov
ds
push
cmp
or
arpl
push
popf
mov
or
call
int
popa
mov
xchg
or
push
inc
inc
fld
or
bound
inc
mov
loop
loopne
dec
rcr
pop
cdq
lahf
or
imul
jge
shl
push
ins
cmp
mov
dec
pop
(bad)
mov
jnp
mov
scas
xlat
mov
inc
daa
mov
imul
mov
jl
sub
adc
ins
adc
push
add
sbb
fsubrp
(bad)
(bad)
enter
push
jmp
pop
je
stc
(bad)
sub
lods
push
adc
int
daa
add
add
ins
call
call
inc
arpl
mov
sbb
or
push
cld
push
inc
mov
xchg
les
(bad)
cmps
mov
adc
pop
out
inc
or
(bad)
aas
maskmovq
imul
movs
stos
sahf
mov
inc
sti
cmps
add
mov
add
(bad)
(bad)
jns
leave
lods
es
adc
comiss
xor
out
leave
jmp
scas
test
jp
jo
pushf
out
neg
int
jne
jge
cli
push
mov
movs
jp
int
and
out
xor
aam
pop
and
aaa
call
sahf
xor
mov
cvtpi2ps
into
fist
hlt
mov
inc
in
(bad)
push
cmc
int3
xor
jo
inc
clc
sbb
cmps
and
mov
lods
mov
xchg
ins
or
sub
xchg
pop
sub
cmc
retf
int
pusha
sahf
inc
mov
pop
in
xor
cmp
movs
psadbw
out
(bad)
jge
add
std
mov
xchg
(bad)
frstor
hlt
push
xchg
or
sub
loopne
mov
or
mov
add
mov
gs
sti
xor
(bad)
xor
xor
jne
sbb
cmp
dec
xor
pop
push
push
shl
ficom
pop
jnp
jns
popa
shl
mov
mov
test
sbb
mov
call
daa
das
jp
adc
inc
cmp
xor
mov
ja
cmps
dec
cmp
aas
xor
leave
cmp
cmps
jle
sub
sub
(bad)
idiv
nop
(bad)
inc
cli
xchg
cmp
daa
xor
shl
stos
js
js
adc
push
mov
fst
pushf
cs
jbe
call
pop
mov
dec
out
je
mov
test
push
aas
push
retf
lea
sbb
xchg
(bad)
aad
js
or
scas
cdq
lock
iret
rol
or
or
call
sbb
cmp
dec
cwde
std
test
inc
pop
es
out
push
jecxz
test
jge
add
mov
pop
mov
sbb
aas
dec
dec
mov
inc
mov
out
mov
adc
jecxz
add
or
dec
int3
leave
fnsave
je
fwait
icebp
stos
pusha
pop
sbb
dec
push
bound
mov
dec
out
jno
mov
fxch
idiv
mov
in
jno
(bad)
pushf
hlt
or
outs
in
add
xchg
cmp
es
aad
not
call
or
sbb
and
and
dec
js
je
jmp
ins
mov
push
cdq
sub
xor
xchg
pop
mov
repz
iret
nop
dec
test
aam
call
aas
mov
jecxz
into
pop
push
gs
fdiv
loop
pushf
mov
shl
sahf
lea
data16
sub
xor
sbb
mov
fnsave
inc
dec
cmp
rcl
div
xor
inc
stos
ins
rcl
jle
xchg
mov
add
mov
test
ret
cwde
xor
push
cmps
cld
adc
dec
pop
hlt
dec
arpl
inc
ror
mov
mov
jp
sub
ins
sbb
adc
inc
aas
xchg
mov
pop
pushf
mov
enter
add
mov
or
ins
cmp
sub
xchg
arpl
xor
push
sub
adc
lods
jb
out
jno
dec
gs
dec
cmp
int3
cmp
mov
mov
push
fnstsw
out
dec
in
adc
mov
adc
mov
sub
or
xor
push
repz
stos
call
jae
test
mov
pop
out
pop
loope
and
pop
or
dec
addr16
xchg
dec
cwde
sbb
adc
shl
fidiv
add
pusha
(bad)
xchg
(bad)
add
imul
icebp
test
pop
dec
dec
mov
je
dec
leave
mov
rcr
mov
push
cdq
push
jecxz
adc
leavew
add
or
pusha
or
lock
sub
jns
sub
(bad)
aad
xor
repnz
repz
jae
fcmovnu
push
popa
test
ret
pop
dec
push
adc
mov
retf
fs
mov
cld
mov
or
lds
cmps
mov
pop
and
arpl
mov
dec
outs
movs
(bad)
imul
je
xor
mov
retf
hlt
sub
les
int3
loope
jecxz
xchg
or
lods
adc
icebp
xlat
scas
(bad)
lock
inc
(bad)
cmps
dec
in
jl
xchg
cmps
(bad)
xchg
adc
dec
push
imul
(bad)
sub
fcmovne
in
sub
out
xor
sub
movs
dec
jmp
push
rol
popa
jne
in
or
dec
lock
mov
fimul
ja
dec
jmp
stos
xchg
imul
in
or
xchg
pop
jmp
loopne
in
test
xchg
sar
sbb
xlat
mov
sub
mov
iret
adc
dec
mov
cmps
push
push
jge
leave
add
aad
xlat
dec
add
jle
cmc
xor
repnz
or
mov
inc
push
jne
ficom
ret
sbb
idiv
std
sub
inc
fimul
mov
push
retf
in
cmc
test
pop
mov
mov
ret
iret
xchg
cmp
cmps
cmp
jns
pushf
ror
movs
int3
mov
fsub
outs
sbb
movs
push
int3
cmc
xchg
shl
imul
pop
lds
test
pop
mov
icebp
xor
gs
ret
pop
ret
sbb
and
inc
mov
push
mov
ins
inc
fsub
dec
ja
je
xor
(bad)
cmp
std
sub
fild
sub
sbb
ja
jmp
push
shl
or
in
xchg
inc
mov
fst
(bad)
cmc
mov
push
mov
and
lods
mov
cmps
or
fdivr
les
mov
jbe
mov
retf
test
xchg
test
repnz
fistp
push
xor
inc
xchg
inc
pop
arpl
dec
sub
ja
pop
cdq
push
ret
popf
gs
ficom
out
int
or
outs
mov
fldcw
sbb
push
xchg
mov
push
retf
jmp
enter
and
pop
(bad)
cmp
xor
repz
fld
imul
push
sub
jg
add
xchg
repz
ins
test
sbb
fld
loope
popa
mov
jle
iret
or
outs
xchg
mov
fld
arpl
call
fisub
xchg
add
sbb
ins
dec
push
into
out
inc
jo
xchg
sub
sahf
adc
and
mov
push
jae
xchg
jp
xor
xchg
int
sub
ret
pushf
or
or
mov
in
mov
pop
mov
xchg
daa
mov
aas
mov
xchg
arpl
and
pop
inc
add
stos
add
mov
dec
xchg
and
repz
and
mov
push
and
sbb
ror
repz
mov
je
lea
cmp
sbb
sub
cmp
das
pusha
push
and
cmp
jns
loop
or
mov
cli
ficomp
ins
cli
sbb
xor
xor
xchg
mov
mov
push
int3
mov
cmp
xchg
xlat
adc
jbe
retf
mov
mov
mov
scas
jno
push
mov
test
out
xchg
push
fcomp
lods
sub
popa
sbb
jp
mov
in
and
popa
bound
scas
jp
std
mov
aam
sub
fs
push
in
xchg
mov
fadd
fiadd
or
or
xchg
mov
add
test
movs
sbb
shr
mov
mov
leave
xchg
fstp
arpl
and
or
mov
jno
aam
xor
dec
or
cwde
rcl
repnz
cmp
mov
pusha
mov
ja
dec
pop
xor
ds
sbb
mov
xchg
jnp
push
jne
mov
jecxz
or
and
jmp
(bad)
xor
jno
jo
imul
inc
sbb
out
aas
nop
div
jns
aam
dec
mov
dec
int3
aas
rol
sahf
nop
sti
test
and
lds
pop
mov
ss
pop
push
cmp
jl
cmp
or
dec
imul
sti
(bad)
outs
test
mov
xchg
out
loope
jnp
push
dec
mov
and
or
push
dec
sub
icebp
dec
mov
fucomp
cmp
inc
repz
in
fldz
and
or
jg
dec
cld
into
xor
dec
and
xor
call
stos
sub
ins
fdivr
nop
cmp
loope
sbb
pop
sti
lea
dec
jmp
das
aas
jmp
xchg
shr
push
fdiv
sub
in
sub
pusha
shl
mov
push
jns
jmp
push
mov
in
adc
scas
jae
sbb
mov
(bad)
jmp
adc
loop
sub
dec
mov
aam
gs
imul
pop
iret
adc
clc
fisttp
dec
cmp
outs
xchg
and
mov
loop
fcmovnu
dec
mov
pop
cmp
loopne
in
cwde
das
push
out
aas
mov
pop
jne
sub
cs
pop
push
pop
leave
and
mov
pop
ins
out
xor
pop
ins
pop
and
loop
jg
ss
div
xchg
mov
mov
jp
aas
arpl
test
stc
lea
push
jbe
sbb
loop
push
in
test
mov
push
and
lods
push
daa
adc
lea
inc
mov
cmp
mov
fucomip
imul
in
dec
imul
xor
cdq
mov
sahf
out
xor
neg
sbb
pop
add
loop
ror
push
outs
les
mov
jb
or
or
push
lahf
jno
pop
mov
outs
in
lock
lods
pmullw
cmp
hlt
out
push
(bad)
sbb
jb
xor
pushf
mov
mov
mov
sahf
pop
push
sub
adc
mov
stc
mov
add
jae
cld
daa
mov
dec
pop
mov
sti
sti
mov
mov
fnstcw
test
ja
mov
fdiv
inc
loopne
data16
add
or
das
retf
push
mov
jns
and
movs
jo
jae
mov
test
push
movs
fs
imul
sbb
jmp
cmp
cmc
neg
mov
rcr
mov
pop
mov
pusha
scas
das
cmp
mov
pop
fldcw
call
sbb
pop
or
sub
dec
sbb
retf
mov
ret
and
fcmovnb
enter
jge
sub
fld
lds
jmp
sub
ret
jle
xchg
cmp
mov
mov
sub
add
shl
aas
add
dec
sub
aad
mov
add
adc
add
jne
and
xchg
out
sbb
scas
or
mov
xchg
loope
call
sub
jle
lods
cmp
sbb
add
add
pop
ss
pushf
das
rcr
retf
adc
jle
ins
jo
add
in
pusha
mov
jecxz
or
movs
ss
ds
push
call
xor
pop
(bad)
daa
arpl
adc
pop
inc
into
adc
stos
pop
jg
and
dec
or
pop
or
mov
inc
jp
test
jne
jne
mov
xchg
cmps
ret
pusha
cmp
retf
adc
mov
popf
sbb
push
and
fiadd
jne
clc
push
xlat
stc
mov
mov
dec
adc
pop
pushf
or
mov
mov
cmp
mov
out
xchg
pushf
fincstp
pop
rcl
loop
dec
add
sbb
daa
popa
frstor
push
addr16
xor
mov
jae
push
mov
int
ja
ins
mov
sbb
data16
scas
fstp
push
push
sbb
xchg
lods
inc
loope
pop
xor
jg
loop
ret
lea
sub
sub
pusha
inc
jg
mov
hlt
cmp
adc
in
ret
jge
(bad)
sub
fwait
cmps
lea
aaa
hlt
scas
mov
loopne
add
dec
mov
mov
jae
add
fs
xor
or
out
into
or
pop
pop
adc
cmps
bound
jl
push
pop
call
mov
daa
das
(bad)
ret
mov
js
jnp
jge
cli
(bad)
icebp
adc
push
mov
mov
ins
bound
mov
pusha
sub
nop
or
and
inc
xchg
sbb
into
cmp
dec
icebp
xchg
inc
jo
leave
(bad)
rcr
mov
mov
adc
and
push
hlt
into
cmp
mov
push
fwait
add
sbb
sub
inc
inc
retf
inc
cmp
mov
mov
or
sbb
xor
mov
and
faddp
movs
adc
(bad)
xchg
popf
pusha
imul
xchg
cli
int
mov
leave
jmp
mov
shr
ins
xor
out
in
loop
add
sub
sub
jmp
mov
cli
jb
jne
inc
lods
out
(bad)
mov
jno
ss
jmp
ret
push
leave
loope
dec
cdq
jb
mov
adc
xchg
jp
mov
out
jno
(bad)
(bad)
(bad)
dec
psadbw
imul
cdq
ret
ja
std
cmc
ins
stos
or
ja
dec
sahf
popa
mov
test
or
arpl
adc
dec
mov
cmc
test
pusha
pop
dec
or
add
into
jp
sub
sub
inc
cmps
jns
scas
lods
xchg
sub
adc
jle
fcom
and
mov
sahf
xor
movs
adc
fsubr
movs
rcr
pop
jne
mov
cmp
int3
and
mov
idiv
jne
loope
mov
jmp
sub
xchg
mov
sub
imul
push
mov
mov
lea
mov
jns
mov
sbb
test
popf
or
je
test
test
mov
lea
mov
dec
mov
imul
icebp
rcr
(bad)
(bad)
sbb
div
push
js
sbb
and
mov
scas
or
rcl
push
sbb
mov
sti
in
stos
xchg
loope
add
push
pop
inc
call
sar
cmp
inc
dec
inc
test
cdq
fistp
inc
dec
or
sahf
aas
(bad)
aad
push
xchg
test
push
das
ins
sub
mov
jecxz
or
pop
scas
shr
sti
mov
jl
sub
iret
cmp
inc
nop
cwde
pop
sbb
cmp
fbld
or
xor
sub
inc
ret
(bad)
scas
scas
pop
cld
jne
aaa
push
inc
sbb
mov
push
fwait
sub
jmp
and
jmp
dec
rcl
rol
outs
aad
mov
lea
sahf
mov
push
fbld
dec
sub
sub
bound
inc
xor
fdivr
sub
lods
push
pop
xchg
out
retfw
es
jb
fs
xchg
sub
and
push
cmp
fisub
jbe
jle
inc
jns
or
dec
xadd
sub
push
gs
aam
jg
add
pop
fcmovu
lods
jecxz
mov
les
xor
push
hlt
popf
mov
push
sbb
scas
sar
and
stc
cli
and
sub
cli
repz
clc
sub
push
dec
mov
call
fdiv
loop
ret
jbe
mov
and
jecxz
scas
xchg
mov
jne
xchg
loop
xor
dec
or
inc
lods
xchg
xor
shl
and
xor
xor
lahf
pushf
dec
push
mov
rep
test
cmps
fcomp
mov
or
leave
test
loopne
fdivp
mov
hlt
jle
hlt
movs
mov
push
and
fidiv
scas
xchg
retf
ror
push
(bad)
jno
scas
ss
cwde
xchg
sub
fxch
jno
or
inc
dec
jle
movs
retf
out
fadd
ror
addr16
aad
sbb
outs
pop
dec
push
sahf
mov
add
adc
xchg
pop
or
lock
std
stc
or
ins
dec
mov
jmp
dec
or
push
jle
sub
mov
inc
lahf
mov
mov
cld
jg
push
or
jmp
sbb
(bad)
and
pop
push
(bad)
mov
ror
popa
dec
ds
jae
or
sub
neg
and
inc
scas
iret
shr
stos
test
mov
xchg
out
cmp
or
in
outs
sub
pop
mov
xchg
in
xor
cmp
or
jnp
jmp
imul
daa
ret
jbe
sbb
push
cmp
test
mov
std
repz
aam
fwait
lahf
push
adc
std
js
xchg
inc
mov
pop
fsub
shl
fcmovne
out
push
jb
aam
cmc
adc
pop
scas
jp
rcr
cld
mov
or
popa
pop
and
in
mov
ins
retf
les
(bad)
xchg
inc
mov
imul
rcl
call
mov
mov
or
xchg
fs
sti
xlat
popf
fcmovbe
sub
scas
xor
dec
xlat
xchg
sahf
or
push
add
and
mov
xchg
adc
aad
and
pop
ret
jle
xchg
test
push
daa
ds
jbe
ss
or
dec
inc
in
cwde
jae
add
adc
int3
push
mov
das
shr
iret
out
add
or
sbb
ins
fwait
mov
cmp
popa
mov
mov
mov
jne
xchg
mov
in
test
call
arpl
aam
pop
stc
push
xor
retf
ins
sbb
push
adc
in
cmp
lea
mov
push
in
push
sub
push
pushf
xor
sar
mov
aam
push
scas
cmc
and
inc
adc
jecxz
cmps
clc
out
mov
stos
push
(bad)
jne
mov
call
mov
out
jl
stos
sub
fcom
and
sti
pop
cli
xchg
or
dec
adc
loop
jle
mov
push
sbb
mov
mov
mov
lahf
cmp
jmp
push
loop
sub
std
xchg
pushf
and
mov
add
ds
out
imul
loop
mov
ss
fistp
int3
repz
ins
lock
mov
stos
daa
mov
imul
mov
mov
or
in
or
(bad)
push
push
or
aas
retf
int
add
adc
bound
lock
jmp
jmp
mov
jb
dec
test
jmp
xor
loop
fsub
aad
cmp
mov
les
ret
or
lods
push
(bad)
cli
inc
jg
jmp
push
lea
cmps
adc
adc
cmc
or
jo
cmps
xchg
mov
jae
fimul
fstp
xchg
push
push
mov
pop
xchg
cmp
cmps
imul
jno
dec
fwait
mov
sahf
mov
shl
adc
stos
cld
inc
retw
adc
fwait
mov
and
(bad)
stc
inc
sub
pop
imul
push
and
sub
and
jbe
jmp
sbb
lods
push
out
mov
adc
sbb
or
rcl
jb
add
fstp
xchg
call
fnstsw
inc
cmp
push
pusha
or
movs
add
test
cwde
mov
leave
mov
js
and
xor
sub
enter
jge
add
dec
loope
hlt
out
push
or
mov
ds
sub
iret
mov
dec
adc
xor
gs
stc
mov
mov
in
dec
repnz
lahf
push
lds
xchg
lock
pop
mov
add
loop
pusha
adc
aas
mov
mov
push
add
es
shl
adc
push
sar
pop
mov
in
stc
lods
pop
std
inc
out
movs
inc
int
jnp
dec
in
add
imul
sub
jl
cmps
enter
loop
sub
xor
pop
jmp
add
aam
inc
ret
outs
adc
fwait
xor
or
test
int3
daa
xor
pop
adc
das
sub
add
sbb
xor
jmp
les
sbb
ror
mov
sahf
mov
ror
mov
xchg
leave
arpl
enter
push
add
and
js
bound
add
jecxz
neg
sub
mov
inc
lds
jbe
fcmovu
aad
xor
mov
sbb
jne
sbb
xor
dec
cld
push
in
dec
gs
test
inc
cmp
cmp
fist
sub
lock
fstp
in
arpl
retf
add
and
enter
dec
push
xor
jns
repz
es
adc
repz
enter
adc
dec
dec
aad
test
adc
repnz
sbb
sbb
sub
cld
inc
shr
and
movs
fs
push
loope
jb
adc
inc
cld
mul
mov
test
popa
mov
pop
lds
sub
call
mov
or
out
(bad)
scas
(bad)
loopne
or
add
imul
ins
out
cdq
clc
sub
fisttp
leave
cs
popf
xlat
in
xor
(bad)
hlt
cmps
mov
mov
add
lock
test
test
add
popf
aad
retf
mov
or
shl
and
sbb
xor
and
retf
xchg
mov
call
mov
shl
bound
ins
cmp
cmp
cld
jl
xor
jbe
gs
arpl
cmp
sub
cwde
sahf
mov
rcr
fwait
add
cwde
dec
inc
fcmovbe
mov
inc
mov
jmp
ror
aas
sahf
jmp
cld
dec
pop
xor
adc
sub
sti
dec
pop
push
add
fcmove
push
inc
mov
fdiv
mov
mov
into
sbb
lds
cmps
xchg
sub
mov
gs
ret
test
sub
nop
lods
jbe
or
and
jbe
push
sbb
sub
pop
mov
mov
test
inc
lods
push
add
idiv
test
mov
add
mov
inc
add
daa
inc
cmps
jne
ror
ret
fs
mov
adc
into
xchg
push
xchg
sbb
gs
imul
push
mov
and
xchg
lods
imul
mov
jmp
xchg
mov
jo
ss
fst
rol
jo
or
xlat
sbb
jbe
jb
iret
pop
inc
out
pop
into
lahf
push
mov
test
dec
xor
cmp
mov
jo
mov
mov
outs
pop
mov
dec
inc
and
jae
int3
pop
mov
mov
xchg
aad
in
or
cmps
sbb
inc
mov
push
lods
out
lahf
scas
push
ins
pop
and
shr
and
xor
outs
sub
in
jmp
adc
cmp
mov
popa
xchg
sahf
div
mov
ret
adc
pop
inc
or
sub
mov
retf
rcr
lahf
test
out
xor
xor
push
cdq
jmp
rol
xchg
popa
mov
push
lods
fcmovb
pop
and
push
stos
and
inc
aas
or
out
call
or
ins
cmps
push
jo
jmp
ins
cmp
(bad)
pop
add
shl
call
into
test
pop
xor
cmp
test
(bad)
push
adc
push
mov
cs
sub
out
scas
adc
std
fsubr
mov
out
cmp
ret
stos
test
pop
sbb
adc
or
dec
imul
retf
sub
push
cmp
inc
test
and
sahf
mov
adc
pop
sahf
sti
jae
call
shr
and
add
push
int3
pop
fld
ret
mov
ss
mov
ret
imul
adc
adc
cmps
xchg
xchg
push
scas
cld
retf
into
ror
dec
jb
loopne
ret
xchg
add
test
sar
in
mov
hlt
jmp
jno
cmps
mov
fwait
and
int3
daa
aam
aam
repnz
inc
mov
dec
sahf
or
data16
xchg
loopne
test
daa
adc
inc
ss
xor
dec
mov
xchg
ins
or
stos
pop
pop
xor
ds
(bad)
loopne
mov
cwde
das
cli
lea
and
ins
adc
test
cmps
cmc
inc
inc
outs
push
aad
adc
enter
mov
adc
les
pop
mov
sub
push
inc
pop
adc
outs
sbb
push
loop
push
dec
sub
addr16
rcl
arpl
jp
sub
sahf
nop
cmp
push
cmp
pusha
mov
jmp
sub
lahf
rcl
(bad)
add
or
ds
push
mov
fwait
mov
fld
es
daa
mov
daa
test
inc
mov
int
or
test
xchg
lods
or
inc
not
xchg
int
mov
into
sbb
mov
jmp
adc
arpl
mov
call
js
leave
sub
push
push
adc
enter
jecxz
rol
or
cmp
outs
outs
(bad)
cmp
sbb
pop
int
jne
xor
cwde
rol
movs
add
xchg
in
fbstp
int
and
dec
push
push
push
or
(bad)
aaa
mov
cmovns
cmc
fdivr
or
cmp
daa
dec
(bad)
imul
dec
push
sbb
jmp
loopne
lock
cli
ds
mov
mov
icebp
add
mov
mov
or
inc
cdq
add
arpl
xchg
mov
ja
ins
jbe
mov
pop
dec
xchg
nop
inc
jnp
aas
jp
mov
pop
fwait
add
sbb
fisttp
lods
jno
mov
in
push
mov
inc
test
add
aad
sbb
cmc
and
nop
out
sar
popf
xor
mov
fistp
mov
(bad)
outs
sbb
cmp
adc
mov
hlt
fdivr
xor
cmp
xor
mov
jp
inc
mov
test
addr16
or
push
aam
or
and
xchg
jmp
(bad)
mov
jno
xchg
push
mov
inc
sub
jp
pop
call
dec
xchg
fistp
call
mov
ds
into
pop
jle
jmp
sahf
mov
xor
jns
(bad)
clc
inc
xor
sub
or
xchg
int
fisttp
dec
fiadd
or
mov
mov
repnz
fcom
sub
stos
stc
mov
imul
stos
pop
cld
inc
das
dec
adc
adc
and
jmp
test
dec
shr
fs
mov
je
and
pop
dec
ja
mov
inc
arpl
push
mov
sbb
cdq
cmc
jge
xchg
es
cmp
jmp
cwde
rcl
inc
cvtpi2ps
pop
fucomip
repz
cmp
mov
jle
(bad)
call
jmp
scas
repnz
and
inc
xchg
lock
retf
add
jmp
inc
imul
xor
jecxz
cmp
dec
cwde
pop
rol
jmp
xchg
shl
ror
out
call
sub
pop
shl
mov
scas
fcomp
jae
sub
mov
add
aad
into
clc
push
sbb
xchg
push
xchg
ins
mov
div
xchg
mov
nop
idiv
mov
fisttp
inc
not
pusha
push
sub
loopne
shl
mov
popf
push
sub
out
ds
fidiv
icebp
xor
(bad)
pop
sbb
pusha
mov
dec
sbb
xchg
cmp
leave
and
nop
jmp
adc
push
les
dec
mov
out
inc
imul
adc
mov
sbb
and
test
mov
and
cmp
xchg
das
push
inc
std
ror
xchg
clc
adc
push
adc
mov
fs
cs
call
sbb
jb
hlt
ror
adc
mov
mov
inc
outs
push
bound
or
shl
call
ret
mov
push
mov
imul
sbb
adc
mov
xchg
bnd
call
pop
cwde
test
mov
js
push
xor
std
mov
push
loopne
xchg
jns
cs
mov
fisubr
rcl
mov
retf
push
inc
mov
sub
and
xchg
inc
aad
aad
inc
(bad)
pop
and
ins
jp
cwde
repnz
sub
test
xor
sahf
adc
ss
std
sar
adc
scas
sub
push
mov
dec
inc
adc
add
mov
mov
xor
bnd
xchg
repz
mov
dec
pop
add
aaa
retf
test
sti
push
ss
loope
xor
adc
mov
pop
jge
xor
ja
cmps
mov
scas
dec
xchg
es
jp
jl
mov
mov
cdq
ret
mov
push
push
ss
(bad)
and
js
xchg
push
(bad)
shr
mov
pop
jmp
lds
mov
scas
shr
pop
std
xor
jb
and
pop
and
enter
stos
neg
cmps
scas
fwait
inc
push
outs
fldcw
mov
sub
xor
shl
mov
add
aam
sbb
mov
xchg
mov
xchg
push
jnp
add
in
sbb
cmc
cwde
cmp
pop
inc
pop
mov
xchg
into
fld
xchg
adc
dec
and
in
iret
stos
cmp
into
cdq
fist
jne
daa
int
dec
jnp
cwde
popf
lock
mov
shl
pop
fwait
mov
jp
arpl
sbb
sahf
jmp
movs
dec
jae
inc
push
pop
(bad)
stc
rol
outs
cmp
test
pop
cmp
cdq
sar
dec
out
or
adc
outs
(bad)
cmp
out
adc
mov
mov
or
fld
rcl
fisttp
adc
dec
add
mov
pop
push
sahf
or
dec
sahf
lods
daa
mov
rol
pop
repnz
scas
lahf
lods
ret
sbb
sbb
lods
sbb
add
retf
jge
fcmovnbe
es
(bad)
sahf
push
sub
xchg
(bad)
fistp
sti
dec
ds
and
cmc
and
pop
aam
retf
sbb
mov
dec
fistp
sbb
xchg
adc
sar
and
std
pushf
neg
neg
dec
mov
jmp
test
ja
mov
mov
add
test
xor
xchg
xchg
lods
dec
xchg
or
sub
popf
out
adc
in
pop
push
mov
test
inc
iret
pop
jmp
sub
fimul
shl
pusha
sub
mov
popf
int
daa
push
in
ror
js
repnz
sub
cli
movs
jmp
mov
fsub
jne
outs
jmp
pop
push
cmp
cdq
ins
stos
mov
int3
jle
in
inc
xchg
xchg
pop
leave
pusha
movs
or
popa
rcr
push
inc
add
imul
(bad)
xor
xchg
sbb
int3
or
je
xor
scas
inc
loop
pusha
out
(bad)
push
sbb
ins
and
cld
movs
xor
pushf
pop
pop
fldcw
mov
cmp
ins
(bad)
out
jl
ficom
xchg
lock
mov
scas
lock
in
jmp
nop
inc
cmp
call
jge
ds
push
sbb
fwait
push
addr16
fstp
sbb
push
ins
add
mov
cmp
and
xchg
leave
sub
jmp
push
icebp
(bad)
push
jecxz
inc
xor
pop
fwait
mov
rol
std
in
je
jl
(bad)
out
shl
sti
idiv
daa
mov
xor
mov
mov
cld
loope
mov
jmp
sub
not
gs
cdq
mov
sub
(bad)
xchg
xchg
cmps
adc
dec
arpl
or
pushf
in
sub
leave
cmp
rcr
sar
jno
or
pop
inc
mov
sub
jp
mov
xor
addr16
cmp
pop
or
sbb
and
mov
mov
sbb
in
in
jmp
cld
clc
and
test
xchg
stos
pop
fcom
into
jns
add
cmp
add
sbb
shl
push
int3
(bad)
pop
je
shl
jmp
add
and
in
push
stos
adc
repz
jns
scas
hlt
sbb
addr16
aas
sub
cmp
scas
mov
pop
pop
idiv
jg
pop
mov
cs
jge
pop
fwait
(bad)
jp
mov
fstp
test
lock
outs
xor
add
scas
mov
pushf
mov
les
ds
mov
stc
jmp
pop
ins
repz
inc
jae
add
jb
mov
pop
pusha
mov
sar
pop
dec
dec
int
adc
ins
jnp
inc
int3
imul
or
sub
shr
add
sbb
es
push
mov
(bad)
lock
mov
or
mov
sub
xchg
jb
dec
cmp
sub
outs
fstp
xchg
push
dec
jbe
mov
sub
popa
xor
cdq
push
mov
push
js
(bad)
aam
and
cdq
rcr
fimul
mov
sbb
loopne
ror
daa
iret
arpl
jb
mov
xchg
push
xchg
add
cmp
jae
imul
sub
icebp
scas
jmp
dec
or
xchg
nop
jle
push
jnp
and
xor
mov
cmp
int
not
push
aas
inc
push
mov
and
xchg
sbb
inc
pop
pusha
rcl
cmp
inc
loop
xor
addr16
xchg
std
lods
mov
or
push
xchg
icebp
int
repnz
push
xchg
aad
out
call
inc
jae
jmp
(bad)
xchg
lds
cmps
jae
(bad)
dec
data16
cs
adc
jmp
or
and
sar
xor
xchg
loope
push
mov
sbb
mov
fisttp
push
call
loope
pop
inc
dec
mov
xor
outs
cld
in
pop
jns
fwait
in
stos
mov
pop
cmp
pop
sahf
push
loopne
repnz
cmp
xchg
push
(bad)
sub
xor
sbb
jge
xchg
mov
ror
mov
leave
dec
loopne
sbb
mov
les
ja
inc
mov
mov
mov
shr
in
retf
in
sahf
out
(bad)
fcomip
mov
arpl
inc
addr16
jno
les
push
and
cmp
scas
bound
lock
daa
mov
add
sub
jp
outs
mov
mov
retf
fld1
mov
fimul
xchg
sub
in
pop
cmp
sbb
push
xchg
je
mov
mov
jmp
js
(bad)
movs
in
add
dec
mov
pop
push
inc
sahf
push
ror
pusha
ret
ja
or
stos
and
ins
pop
mov
mov
outs
mov
imul
xor
jne
inc
xlat
push
sbb
dec
sub
jmp
push
and
dec
pop
and
inc
adc
fsubr
not
sub
out
adc
jnp
stos
dec
pusha
adc
in
cmc
icebp
and
or
jno
(bad)
dec
pushf
fwait
adc
outs
mov
xor
cs
mov
lods
mul
dec
lods
rol
jo
fiadd
xchg
push
pop
adc
mov
xchg
test
cmc
cdq
xlat
cmc
stos
movs
mov
push
icebp
mov
mov
addr16
scas
jge
inc
les
dec
int
sub
movs
add
jmp
fwait
test
jle
lahf
or
(bad)
or
add
sar
mov
loop
mov
mov
mov
mov
jno
repz
scas
sbb
jnp
sub
or
sub
xor
ja
sbb
iret
mov
test
xchg
sub
adc
xchg
loop
inc
scas
retf
ret
retf
pop
das
std
inc
mov
lahf
push
or
sub
hlt
ins
inc
xchg
call
mov
pop
add
mov
test
retf
daa
movs
jmp
imul
cs
shl
mov
cmps
mov
stos
push
mov
mov
out
retf
std
sbb
addr16
pop
shl
jle
and
mov
lock
jmp
pusha
nop
inc
mov
pop
jle
mov
jmp
int
add
push
(bad)
push
push
mov
xchg
out
neg
outs
popf
xor
cmp
adc
test
mov
out
adc
add
test
xchg
ret
adc
daa
sub
inc
sub
sub
dec
pusha
pop
clc
movs
mov
or
sbb
xchg
fs
xor
inc
jp
cmp
fs
scas
hlt
or
add
lods
nop
mov
clc
cmp
jp
xchg
pop
in
popa
and
test
adc
cli
adc
lods
dec
xor
loope
mov
(bad)
jnp
xchg
push
push
jo
cmc
in
dec
nop
adc
xor
sub
mov
sbb
push
xor
cdq
mov
(bad)
mov
ss
add
dec
pusha
mov
into
dec
shl
es
and
test
pop
loope
adc
arpl
mov
mov
mov
hlt
hlt
movs
mov
dec
mov
ficomp
(bad)
mov
test
and
in
ins
fwait
xor
je
xor
sub
jne
xchg
mov
push
in
xor
pop
lock
(bad)
nop
je
or
adc
or
mov
push
hlt
jmp
or
sub
out
sbb
jmp
imul
xchg
ins
cmp
int
inc
clc
xchg
(bad)
xchg
mov
xchg
jae
xchg
jae
(bad)
or
xchg
aas
cmps
pop
and
imul
cmc
stc
xchg
rep
sub
aas
leave
loopne
or
ret
test
add
fmul
repnz
mov
and
gs
clc
(bad)
sahf
xchg
nop
fadd
inc
dec
fist
test
fs
xor
xchg
add
in
std
nop
push
imul
loop
dec
adc
sub
movs
add
je
sahf
dec
test
dec
jle
cmp
in
aam
inc
repz
cmc
test
(bad)
cdq
mov
and
mov
int
enter
xor
xchg
push
mov
jb
xchg
ss
and
and
pop
pop
sub
jns
out
shl
repz
xchg
pop
mov
in
lods
shl
mov
arpl
or
dec
push
loope
test
sbb
jmp
cmp
mov
aas
call
dec
dec
cmp
out
jp
stos
mov
jmp
cmc
idiv
add
(bad)
cs
or
shl
lock
in
(bad)
pop
test
cdq
pop
or
iret
xlat
add
dec
sti
std
cmp
mov
push
add
(bad)
mov
xchg
pop
add
xor
jo
loop
xor
aad
cmp
dec
jg
retf
jl
xchg
retf
pop
mov
mov
or
imul
inc
loopne
or
jb
sbb
rcl
xor
rol
pusha
iret
out
xor
fcom
adc
push
cmp
xor
mov
pop
outs
jl
or
pop
and
loop
lahf
pop
lods
adc
ds
cmps
mov
gs
xchg
mov
dec
pusha
jg
cli
frstpm(287
mov
adc
push
leave
xchg
or
jecxz
or
adc
mov
xor
dec
(bad)
in
sbb
out
jo
mov
in
outs
adc
in
call
and
jmp
leave
ins
inc
or
adc
stc
scas
loopne
hlt
dec
add
loope
add
sbb
adc
arpl
scas
mov
out
cwde
call
push
(bad)
sub
inc
scas
ins
dec
push
nop
aam
sub
cmp
jae
fstp
int
and
dec
scas
jmp
or
popf
aaa
push
mov
pusha
push
mov
mov
arpl
ret
loop
stos
cmp
inc
push
mov
mov
(bad)
(bad)
ins
adc
fyl2x
bound
popf
das
repz
cli
scas
push
jmp
addr16
jmp
mov
inc
ror
cmc
fcmovu
into
or
xor
pop
mov
in
mov
es
in
xchg
inc
fwait
into
loopne
xchg
shl
stos
fld
mov
adc
push
mov
call
pop
or
sub
adc
movs
xchg
leave
dec
not
add
mov
addr16
repnz
outs
ja
test
push
rol
fadd
cmp
pop
pop
retf
adc
sub
test
mov
pop
push
fcom
and
jmp
loop
jg
cmp
inc
outs
xchg
mov
lods
ins
xchg
adc
aad
lahf
loop
adc
test
rcr
fsub
loopne
(bad)
mov
cmp
call
gs
inc
fist
mov
retf
test
fdiv
movs
cwde
push
cdq
inc
or
scas
jmp
add
xchg
nop
adc
iret
pop
add
mov
test
retf
xchg
xchg
loopne
hlt
int3
fld
iret
scas
inc
(bad)
in
jl
fldcw
mov
mov
dec
je
repnz
push
imul
ja
xchg
in
pop
pop
in
lods
or
std
inc
push
and
jecxz
es
stos
cmp
bound
movs
jnp
fdivp
imul
(bad)
sub
cmp
xlat
out
add
sbb
std
pushf
jae
dec
jmp
in
push
fisttp
retf
or
std
pop
sti
fistp
push
clc
shl
lds
cmps
adc
mov
rcl
mov
cdq
fnstenv
push
or
jae
fmul
add
cmc
(bad)
fcom
scas
dec
pop
dec
movs
fs
adc
pop
dec
xchg
adc
cmp
(bad)
sub
je
enter
ret
loopne
stos
or
pushf
cmp
push
outs
add
dec
mov
mov
push
test
push
out
xcrypt-ecb
cmps
dec
outs
movs
jae
pop
cdq
or
bound
dec
cwde
jg
mov
pop
and
test
sar
sub
dec
push
pop
inc
mov
adc
adc
fidiv
pop
xor
mov
dec
sbb
pusha
add
xchg
push
test
mov
push
mov
cmp
push
push
shl
nop
aaa
das
push
les
cs
mov
mov
add
pop
(bad)
aas
mov
mov
ins
pop
popa
lods
aad
cld
(bad)
aam
mov
mov
out
test
test
loop
add
lahf
rcr
and
sbb
xchg
mov
int3
int3
stos
imul
enter
jne
loop
les
sub
push
inc
rcl
lahf
adc
nop
cmp
and
sahf
(bad)
imul
adc
xor
stos
adc
pop
cmp
rcl
xchg
ds
sbb
cmp
mov
and
cmp
add
imul
sub
and
push
jl
push
push
ret
mov
push
add
fstp
movs
and
push
aas
retf
mov
sub
fcom
push
(bad)
mov
repz
pop
pop
imul
fstp
sar
inc
dec
ret
push
cmp
cmp
scas
outs
jge
sub
stos
mov
adc
cmp
leave
cmp
cs
add
xchg
add
ins
stos
fs
test
stos
(bad)
push
mov
pop
dec
cmp
and
cmc
dec
test
test
in
into
imul
add
(bad)
in
fnstenv
les
xor
pop
xlat
(bad)
iret
mov
add
lock
retf
imul
mov
sub
in
mov
int3
lods
sbb
loopne
adc
stc
test
cmp
out
(bad)
sbb
pop
jmp
mov
pop
mov
les
mov
mov
test
idiv
repnz
and
push
dec
push
cmp
rcl
jb
fs
and
retf
jmp
inc
push
fldenv
int3
hlt
fwait
in
fimul
sub
jmp
pop
push
and
and
mov
fdivr
pusha
gs
sbb
fiadd
int3
cmp
sbb
fmulp
mov
into
jne
adc
add
je
xor
ret
and
sbb
(bad)
jecxz
aaa
iret
jno
stc
mov
or
fs
aam
lock
je
and
lahf
pop
lods
sar
xchg
dec
leave
or
mov
push
mov
xchg
daa
or
or
adc
int3
add
xor
pop
mov
loope
xor
cwde
cmps
scas
mov
mov
mov
mov
xor
pop
xor
(bad)
push
fnstcw
and
fwait
dec
cs
movs
xchg
lods
or
int
bound
sbb
shl
xchg
push
fnsave
mov
repnz
pop
push
jbe
fadd
pop
mov
movs
cmp
xlat
add
jb
pop
xor
in
mov
and
dec
aad
dec
inc
xchg
jno
std
sti
inc
lahf
ret
ins
scas
popf
ds
hlt
dec
stc
pop
jl
es
sub
jne
mov
mov
dec
push
dec
iret
or
clc
rcl
mov
add
in
iret
movs
mov
push
retf
adc
xchg
lahf
dec
xchg
stc
imul
iret
jo
push
push
dec
cmps
jbe
movsx
lds
outs
bnd
(bad)
hlt
out
mov
sar
mov
cmp
aad
nop
adc
neg
dec
das
cmp
inc
mov
mov
adc
mov
push
cmp
jge
pop
stos
mov
or
mov
dec
mov
xor
jbe
cmp
jmp
fsubp
(bad)
sbb
test
and
inc
ficomp
rol
scas
add
mov
jns
lock
lahf
ret
cli
sahf
sub
pop
inc
lods
cmpps
pop
(bad)
bound
(bad)
mov
ss
pop
jle
in
mov
aam
add
aaa
ins
dec
xchg
mov
call
out
adc
xlat
jg
hlt
jg
les
mov
mov
ins
and
inc
imul
clc
xor
fs
sub
add
(bad)
cwde
mov
cwde
sbb
arpl
or
mov
jb
lods
std
jmp
adc
leave
push
fsub
iret
push
rcl
push
or
(bad)
shl
call
retf
call
jl
xchg
xchg
cmps
sbb
dec
scas
sub
fyl2x
sub
das
and
sbb
arpl
mov
retf
cmc
loope
pop
rcl
fldenv
xchg
int3
mov
sti
jae
aaa
add
fnstcw
sub
sbb
leave
mov
ret
inc
test
les
xchg
shr
(bad)
ins
mov
stos
in
clc
pop
sub
in
fs
addr16
loopne
jmp
jmp
fmul
cmp
and
xor
pop
test
mov
pop
bound
jo
popa
push
mov
out
xchg
(bad)
enter
adc
sbb
mov
sti
pusha
lahf
retf
pop
add
lahf
jecxz
cmp
test
mov
lods
jae
sub
mov
ins
inc
inc
ins
fldenv
xchg
popa
mov
adc
jo
push
pop
cmp
jmp
add
fdivr
repnz
inc
int
(bad)
(bad)
lods
mov
mov
pop
outs
mov
pop
dec
add
fstp
ret
mov
push
and
sbb
adc
sub
jb
popf
cwde
and
adc
lods
frstor
fsub
mov
push
and
sti
stos
push
lds
mov
push
xlat
loop
out
xchg
add
push
fs
sbb
stos
fdiv
mov
out
fdivrp
jo
sar
jmp
mov
sbb
popa
pop
jae
in
(bad)
ret
cld
pusha
jo
out
cdq
dec
adc
(bad)
jecxz
xchg
jmp
push
adc
iret
jne
imul
sar
sbb
xchg
pop
pop
rcr
inc
or
stc
inc
mov
cmps
loop
push
and
scas
adc
outs
je
add
lahf
inc
adc
int
add
pop
sub
cs
call
scas
xchg
pushf
fsub
icebp
adc
xchg
neg
and
push
adc
lds
popf
pop
loope
rcl
sub
adc
(bad)
aam
mov
sub
push
push
jno
in
stos
mov
xchg
addr16
movs
pop
out
mov
out
xchg
movs
dec
in
cli
cdq
mov
or
aaa
shl
call
icebp
aas
rcl
or
mov
dec
push
cs
ret
enter
inc
jmp
add
cmp
rol
jo
xor
mov
mov
xchg
push
cmp
repnz
movs
xchg
mov
inc
xor
inc
test
popf
in
push
mov
mov
gs
(bad)
push
sub
sbb
test
leave
push
dec
test
sbb
dec
mov
outs
and
adc
inc
test
ds
and
cmp
aad
sti
je
fwait
test
inc
sbb
add
aaa
or
sbb
enter
jns
xor
and
retf
jb
aad
clc
rcl
hlt
ds
outs
mov
leave
lock
nop
jo
xor
enter
iret
sbb
call
lock
sub
jecxz
xchg
sahf
add
leave
imul
push
scas
sbb
push
inc
popa
andps
mov
jmp
jg
adc
outs
data16
mov
cwde
popa
ja
push
or
fnstsw
or
jo
pop
mov
aas
outs
push
cmps
(bad)
jle
add
outs
jp
dec
mov
inc
cmc
xchg
push
or
icebp
les
(bad)
push
jle
mov
xchg
lock
out
cwde
aas
jbe
movs
cmps
cmp
outs
ret
or
aaa
aaa
mov
xor
out
jmp
pushf
mov
adc
inc
add
je
jg
sub
stos
nop
out
fwait
xor
popa
xchg
int
xchg
xor
mov
dec
adc
or
cmc
inc
xor
jp
out
ja
(bad)
pop
mov
sub
cmp
out
dec
test
jnp
inc
sub
mov
mov
xchg
int
call
call
push
scas
int3
(bad)
call
pushf
mov
sbb
mov
jae
dec
in
popf
and
cmp
cmp
fist
dec
mov
pop
mov
std
xchg
push
xchg
outs
nop
or
xchg
imul
call
mov
pop
mov
mov
sub
vminsd
and
cmc
xor
push
loop
dec
add
test
sbb
in
out
in
cdq
dec
or
aas
pop
pop
jno
xchg
fs
adc
push
sbb
outs
mov
push
pop
xor
add
dec
addr16
(bad)
mov
dec
cwde
popf
and
fistp
mov
add
mov
les
sub
stc
jo
lock
and
xchg
inc
test
xchg
loop
sahf
mov
popa
aaa
mov
clc
xchg
sub
ret
jb
mov
fistp
fcomp
jmp
inc
and
jbe
jns
call
cmp
inc
mov
mov
mov
pop
and
sub
fidiv
in
sub
add
jbe
pop
cli
pop
mov
(bad)
mov
or
mov
mov
mov
dec
and
push
aas
mov
or
jae
mov
aam
pop
(bad)
enter
aad
or
and
inc
xchg
(bad)
shr
pop
stos
fist
leave
mov
mov
xor
das
jmp
adc
addr16
xchg
pusha
sahf
push
add
outs
daa
mov
add
std
clc
cmp
icebp
pop
xchg
dec
data16
cmp
icebp
add
xor
sbb
mov
push
jo
stos
fild
mov
in
mov
(bad)
(bad)
mov
outs
call
mov
mov
fdivr
stc
jp
xor
adc
mov
(bad)
sar
pop
iret
push
pusha
leave
(bad)
outs
sbb
retf
adc
push
dec
je
mov
ins
lea
into
clc
sub
inc
cmp
in
xchg
xchg
xor
jl
gs
pop
jle
(bad)
add
ins
retf
inc
out
cmp
sub
xor
jge
loopne
test
lahf
fsub
fs
in
dec
lods
add
xor
fidiv
inc
sbb
test
xchg
dec
call
fwait
mov
pop
into
sti
pop
lahf
mov
push
adc
int3
jno
aaa
lds
shr
xchg
retf
xchg
in
adc
push
lods
pop
sbb
and
sub
loop
icebp
out
out
sub
sahf
or
nop
adc
pop
fwait
add
bnd
(bad)
std
out
pop
sbb
test
inc
jno
pop
rol
neg
inc
inc
gs
jne
enter
jne
pop
pop
push
sbb
ror
pop
jl
push
nop
sub
sub
sub
xchg
jns
sbb
add
push
(bad)
(bad)
sub
add
push
mov
jo
clc
push
inc
in
lods
push
(bad)
push
sbb
(bad)
xchg
ds
or
lock
fsubr
lods
xchg
cs
mov
jno
ins
test
push
lods
push
xlat
add
pop
push
cmps
add
fisttp
lods
fwait
hlt
adc
mov
arpl
and
jle
bound
dec
push
push
jl
adc
mov
pcmpeqd
mov
lea
aad
cmp
mov
add
jnp
sbb
and
push
cdq
jb
aam
add
mov
sbb
call
jo
pop
retf
mov
mov
jmp
out
pop
mov
test
dec
mov
xor
(bad)
cs
loope
sub
adc
loope
ror
pop
and
lahf
sbb
in
inc
neg
ins
inc
sbb
pop
ror
dec
and
mov
xchg
in
hlt
pop
pop
pop
dec
(bad)
mov
or
sub
lock
aam
add
movs
shl
lods
jae
xchg
and
xor
inc
js
fimul
jge
mov
sbb
pop
mov
dec
mov
cmp
aaa
sar
fild
stos
pushf
push
ins
cdq
loopne
ss
or
cs
dec
repnz
ins
xchg
in
xchg
inc
std
(bad)
stc
push
mov
in
inc
xchg
fimul
dec
dec
adc
mov
out
sub
les
inc
fsubp
adc
xchg
sub
sbb
out
and
xlat
daa
mov
mov
sahf
out
and
cmp
call
jbe
push
sbb
fisubr
nop
ja
hlt
outs
jns
ins
ss
dec
inc
cdq
jge
jae
jecxz
cmp
addr16
sti
adc
and
loopne
test
hlt
imul
adc
jle
(bad)
lea
cmps
daa
jg
inc
rcr
std
ror
jmp
mov
fxam
rcr
pop
cli
out
mov
test
jae
pop
test
mov
leave
or
enter
int3
xchg
sub
lea
push
outs
lea
cli
sbb
jae
ret
hlt
pop
mov
cli
dec
mov
fwait
popa
pop
jg
xchg
push
mov
pop
adc
mov
pop
xor
ss
out
retf
ins
outs
test
pop
loopne
fwait
jmp
jmp
into
and
jecxz
push
test
mov
inc
std
movs
jns
xor
mov
sbb
ror
stos
inc
push
mov
xlat
gs
scas
mov
fsub
(bad)
test
mov
jne
push
sar
inc
jge
xlat
mov
cld
arpl
out
xchg
inc
sar
popf
mov
jp
sub
sub
xchg
imul
mov
retf
cmps
ds
jecxz
jno
std
out
jl
cmp
mov
in
add
xor
and
test
fs
push
pop
dec
push
out
pop
mov
lods
push
fsubr
inc
pop
xlat
inc
loopne
das
pop
push
out
cmc
push
push
push
sbb
jge
enter
mov
adc
dec
test
cdq
std
std
push
sub
fimul
popa
cmps
sbb
je
cmp
add
and
and
enter
dec
sub
xor
(bad)
xchg
jbe
mov
adc
idiv
cmp
fwait
sub
push
pop
xchg
cmc
icebp
repnz
or
shl
jl
jns
fcomp
cmp
sahf
pop
pop
cld
ins
mov
mov
rol
cwde
jmp
pop
ror
push
popf
(bad)
mov
mov
test
inc
or
dec
ds
jne
call
ret
mov
call
inc
sbb
aam
push
jne
mov
daa
mov
dec
mov
ins
aas
adc
loopne
cmp
push
jb
outs
mov
fnstenv
cmp
idiv
push
stos
dec
mov
stos
sub
or
stos
cs
popf
pop
in
cmp
test
gs
pop
cwde
mov
jbe
jo
adc
dec
jb
popa
out
into
movs
aad
imul
and
ss
adc
mov
fs
pusha
and
xor
or
bnd
mov
stos
adc
sbb
outs
push
xchg
add
push
mov
cs
cmps
mov
or
cmps
fsub
push
inc
or
shl
lods
or
and
or
sub
jno
rcl
push
iret
fdiv
push
ins
add
loop
ret
stos
stos
std
scas
sbb
mov
adc
cmp
cmp
in
sbb
or
retf
xor
ret
(bad)
and
push
call
cmc
add
and
sub
dec
adc
cmp
repz
mov
mov
lock
(bad)
xchg
in
sar
mov
out
(bad)
xlat
inc
and
into
arpl
out
mov
inc
js
push
dec
pusha
push
icebp
adc
xchg
sti
jne
pop
cdq
xchg
ror
xor
push
mov
or
mov
mov
(bad)
mov
aas
jg
cwde
mov
rol
sbb
xchg
and
mov
dec
jbe
lea
inc
push
aam
fisub
bnd
mov
xchg
jecxz
pop
xchg
mov
add
js
push
arpl
dec
add
in
mov
sub
aad
inc
xor
and
dec
jno
mov
jge
gs
pop
lds
xor
aas
xor
out
cmp
inc
jecxz
lods
and
not
inc
imul
das
cmps
xor
iret
fisttp
or
mov
arpl
xor
cmp
or
cs
pop
mov
and
push
test
adc
les
mov
daa
scas
(bad)
and
xchg
pop
pop
jnp
das
inc
inc
cmc
iret
out
(bad)
fmul
xchg
and
fld
ins
add
pop
sbb
add
add
add
fdiv
lds
(bad)
dec
mov
mov
mov
lds
(bad)
loop
lds
sti
je
dec
arpl
dec
mov
adc
cmp
(bad)
adc
andps
dec
(bad)
or
mov
ins
stos
int3
(bad)
fwait
jecxz
repnz
ins
shl
nop
mov
pop
pop
xchg
sbb
adc
and
cmp
xchg
add
clc
and
and
loope
icebp
retf
jbe
adc
imul
aam
add
(bad)
aad
jge
add
in
xor
in
push
pop
cdq
dec
jg
sub
jae
in
imul
push
sbb
fcom
mov
int
fimul
mov
lahf
xor
and
js
lahf
dec
hlt
jno
pop
adc
pop
imul
ror
shr
stos
aad
movs
iret
mov
test
jg
loope
xlat
cld
fsub
scas
movs
mov
xchg
gs
xchg
pop
movs
add
adc
push
pop
pop
dec
inc
and
dec
xor
pop
repnz
scas
and
dec
pop
inc
add
pop
jnp
mov
mov
push
cs
mov
adc
psubb
cmps
jp
out
call
push
inc
loop
adc
data16
fbstp
loopne
adc
in
movs
inc
dec
jmp
cmps
or
xchg
gs
dec
mov
es
sbb
add
xchg
dec
pop
ds
add
cmc
imul
adc
fist
loope
outs
inc
fist
fidivr
mov
sbb
xchg
outs
movs
dec
mov
cmp
and
test
test
sbb
call
xchg
xor
mov
lea
ret
(bad)
inc
push
fsubr
lahf
test
jge
mov
and
addr16
pusha
cld
jmp
aaa
push
addr16
and
in
mov
jno
sub
std
int3
xchg
and
xor
xor
inc
mov
je
fiadd
test
out
scas
mov
push
mov
fwait
movs
or
mov
add
neg
(bad)
(bad)
jo
and
and
xor
fisttp
shr
scas
mov
sub
push
in
pop
test
jbe
ret
add
xchg
ret
stc
xor
push
int3
mov
retf
and
(bad)
outs
aad
mov
neg
mov
mov
mov
push
xchg
dec
jb
ret
mov
xchg
cdq
jge
rcr
int
cdq
add
aas
jmp
into
imul
or
rep
loopne
jbe
leave
das
push
cmp
ds
pushf
ret
push
fisttp
mov
test
int3
mov
mov
fsub
int3
fisub
pop
cmp
es
clc
sub
int3
cmp
dec
jae
ja
hlt
mov
mov
pop
dec
lods
push
imul
scas
int3
dec
inc
inc
pop
scas
cmp
xchg
bound
dec
xor
push
mov
inc
cdq
pusha
cli
fld
xor
push
test
pop
add
push
popa
repnz
xor
ins
cmps
(bad)
xor
mov
(bad)
ins
mov
mov
and
push
inc
in
pop
jle
sbb
pop
test
and
sahf
adc
lock
fbstp
mov
xchg
in
xchg
das
mov
lea
daa
mov
cmp
leave
sbb
ret
and
xor
mov
xchg
les
ins
cmp
outs
(bad)
adc
std
outs
dec
jmp
pushf
jmp
or
neg
pop
pop
fdivr
dec
jmp
call
mov
repnz
mov
or
pop
outs
xchg
int
retf
cdq
lds
push
aaa
sahf
out
inc
sbb
retf
push
rcl
jmp
xchg
jmp
pop
xchg
pop
sbb
jecxz
inc
jecxz
sbb
bound
dec
lods
push
add
cmp
jg
mov
outs
dec
or
pop
fadd
and
retf
ds
add
lods
push
pop
enter
mov
pop
mov
out
pop
xchg
jge
enter
jle
or
fdiv
movs
cmp
xor
pop
mov
xor
imul
jp
xchg
ror
sbb
ror
shl
ss
stos
adc
push
repnz
pushf
rol
out
sub
xor
sub
xor
push
inc
iret
jmp
xchg
test
mov
mov
jmp
dec
jno
ficom
add
mov
imul
cmps
jbe
int3
lods
jp
mov
rcl
ins
adc
xchg
(bad)
das
lods
push
xor
xor
ret
mov
adc
imul
test
sbb
push
adc
arpl
ret
jnp
jmp
sbb
jbe
cmp
daa
rol
dec
sub
cmp
push
hlt
inc
fiadd
repnz
imul
adc
sti
and
fiadd
jno
test
ret
test
sbb
bound
pop
jecxz
mov
mov
sbb
jns
call
outs
pop
push
add
fisttp
arpl
dec
jo
dec
ins
mov
loopne
jb
or
ret
les
test
fimul
mov
adc
add
mov
and
mov
xchg
cmp
stc
mov
pop
pop
stos
xchg
fbstp
iret
ja
and
mov
adc
les
das
or
jmp
shl
mov
ja
outs
popf
call
xchg
and
rcr
add
xchg
clc
fwait
xor
xchg
popf
jnp
jge
(bad)
jp
cs
jb
pop
cmp
adc
mov
cs
inc
jmp
xchg
test
in
inc
aad
loop
adc
cs
sbb
xchg
test
lds
xor
push
inc
push
and
dec
call
sub
dec
test
popf
pop
cmps
mov
lahf
add
loop
popa
xor
js
cli
or
clc
sub
mov
test
pop
push
jge
sub
pusha
pop
out
push
xor
pushf
test
jp
or
or
cmp
movs
jno
cmp
pop
cmp
mov
mov
inc
xchg
mov
ins
fwait
ror
xchg
ins
jne
add
dec
repz
xchg
jp
jae
jnp
rcl
movs
cld
cwde
fisttp
in
mov
or
lea
inc
fbstp
ins
sbb
jns
dec
aas
add
(bad)
push
push
ins
cs
add
sub
push
pop
lods
jo
and
push
add
retf
pop
inc
or
outs
std
push
imul
retf
popf
push
cli
iret
push
(bad)
push
pop
jg
pop
push
(bad)
(bad)
das
add
les
xchg
inc
mov
mov
mov
movd
setae
in
jbe
xor
inc
int
imul
in
dec
or
aam
mov
ja
mov
dec
inc
enter
or
bound
test
sbb
les
sbb
cdq
add
mov
push
inc
ja
out
pop
jl
add
push
(bad)
loop
inc
imul
aad
stos
cs
mov
mov
inc
nop
push
sub
cmps
cwde
push
mov
ins
loope
xchg
pop
loop
push
jg
sub
addr16
ret
stc
cmc
and
sub
sub
push
inc
jle
out
adc
pop
adc
mov
jge
push
test
cld
dec
or
imul
mov
sti
push
jnp
adc
inc
out
lea
push
xor
(bad)
mov
pop
jmp
add
(bad)
les
add
loop
jle
push
xlat
cmp
sbb
loope
push
push
daa
adc
xor
int3
xchg
jl
cmc
mov
mul
or
pusha
ret
jb
outs
dec
(bad)
cld
add
repz
mov
jne
ins
sbb
pop
mov
mov
(bad)
test
lds
mov
cmps
popf
dec
lahf
loop
loopne
dec
jnp
pop
fcom
add
cwde
nop
bt
cld
lahf
jb
shl
mov
jl
shl
clc
fistp
push
shl
hlt
jmp
aad
dec
mov
sbb
jb
mov
ins
cmp
cwde
inc
iret
add
fistp
adc
fsubr
cld
inc
pop
xchg
sbb
sub
mov
in
xchg
cwde
mov
(bad)
adc
sti
in
pop
pop
sub
(bad)
fmul
jge
ja
cmc
lahf
fld
lock
pop
das
pushf
cmp
mov
cmp
mov
or
out
data16
mov
mov
ss
jp
daa
stos
mov
adc
loop
push
pop
adc
pop
and
push
add
jg
add
sar
retf
addr16
mov
xchg
inc
scas
aad
test
inc
sub
jmp
jle
mov
push
icebp
mov
aaa
call
arpl
es
rcr
push
or
popa
ret
(bad)
clc
or
mov
inc
data16
push
mov
clc
das
pushf
mov
pop
mov
aam
mov
into
lahf
xchg
inc
fisttp
pop
retf
pop
ret
jmp
fldcw
add
jg
call
push
push
popa
xchg
jns
push
pop
pop
mov
pushf
cmps
push
(bad)
mov
out
ss
and
stc
fwait
push
lds
xor
mov
(bad)
cmp
or
aam
fstp
fwait
aas
mov
clc
scas
cwde
pusha
dec
out
test
or
mov
call
jne
mov
sbb
push
lds
fcomp
adc
fnstenv
mov
int
outs
pop
cdq
shr
jo
and
dec
es
(bad)
pop
ja
ror
jmp
or
and
outs
aaa
lock
mov
adc
clc
sbb
(bad)
mov
test
xchg
cmp
je
mov
xchg
mov
aam
ror
jae
(bad)
shr
sub
adc
mov
and
cmc
loope
pop
sub
mov
xor
lock
aaa
dec
jne
ror
mov
sub
mov
mov
js
lahf
neg
sbb
mov
cmp
pushf
sbb
cmp
out
or
mov
out
lods
jmp
push
pop
and
xor
sub
icebp
xchg
jl
sub
inc
pop
jbe
xor
inc
fcomp
pop
mov
sub
cmp
jp
add
ror
fwait
jno
and
into
dec
fwait
cmps
mov
cmp
popa
popa
jmp
jecxz
mov
add
and
xlat
dec
dec
push
and
dec
add
lea
shr
mov
shl
std
fsub
xchg
int
jp
int3
repz
daa
cli
aad
push
mov
lock
jne
mov
push
jns
push
mov
popf
ret
cmp
cmp
push
fidiv
add
in
push
aam
mov
outs
pop
mov
out
pop
enter
pop
(bad)
in
and
ins
test
cwde
cmp
out
fisubr
repz
nop
out
push
sub
into
sbb
ins
add
scas
imul
fisttp
pop
jmp
dec
pop
(bad)
cli
test
sbb
fstp
aad
test
shl
xchg
inc
fld
ret
mov
aaa
and
dec
mov
aaa
pop
int
and
or
mov
jg
stc
shl
arpl
aam
test
push
push
sub
pop
xlat
jne
aam
(bad)
(bad)
fstp
mov
xchg
inc
or
push
std
add
out
cld
dec
je
popa
pop
gs
push
push
dec
pop
inc
clc
adc
icebp
out
mov
pop
cmps
pop
sub
ins
push
inc
je
pop
and
xor
dec
test
scas
inc
or
mov
mov
inc
and
or
mov
movs
push
dec
jmp
dec
inc
fucomp
shl
jp
out
inc
mov
pushf
jmp
mov
mov
cmps
cwde
mov
in
jae
(bad)
push
pop
cmp
push
test
cwde
shr
adc
daa
add
test
mov
lods
loop
ja
pop
frstor
pusha
loope
mov
pop
out
dec
dec
iret
mov
jmp
inc
ss
xchg
out
mov
outs
(bad)
ss
mul
jbe
mov
jl
mov
inc
xchg
sbb
mov
fiadd
mov
add
js
(bad)
push
push
outs
leave
mov
xor
dec
sub
sub
sbb
fdivr
cmp
(bad)
sub
inc
repnz
push
jp
std
mov
cmp
movs
sahf
push
mov
int3
jae
cs
out
xchg
rol
jno
lods
and
jmp
iret
xor
leave
mov
sti
pop
inc
cmp
rcl
pop
loopne
js
jle
adc
test
cmp
cmp
push
lock
push
lea
jg
xor
fidiv
mov
push
mov
xchg
fs
dec
fist
mov
xchg
clc
es
xchg
daa
xchg
dec
sub
int
ja
cmp
jl
aad
(bad)
and
adc
pop
cmps
mov
adc
pop
(bad)
(bad)
cmp
iret
scas
or
mov
ret
sbb
outs
scas
adc
cdq
test
adc
data16
in
xchg
push
daa
loop
outs
shr
dec
jle
inc
cmp
xlat
and
mov
ja
in
inc
lea
pop
lods
movs
mov
sub
mov
iret
adc
loope
jbe
pushf
push
aad
mov
xchg
dec
(bad)
ds
int
jg
cmp
and
sbb
stos
sub
rcr
and
retf
lock
pop
shr
jle
dec
rol
and
sbb
retf
push
and
(bad)
mov
js
fcom
sahf
mov
movs
push
jl
add
aaa
iret
daa
mov
hlt
mov
jp
inc
ja
and
fdiv
or
sbb
xor
sbb
and
adc
loope
mov
fild
add
push
das
sbb
add
mov
or
out
nop
adc
jp
movs
xor
call
mov
jae
cs
cmp
push
dec
ins
push
addr16
mov
(bad)
mov
sti
push
cmp
inc
data16
dec
push
in
jp
cld
test
xchg
mov
push
or
sub
ret
jmp
sbb
mov
rcl
loope
int3
mov
(bad)
xchg
out
push
jg
xchg
add
std
ss
sub
cmc
pop
cld
xchg
addr16
ror
lds
popf
push
sub
inc
clc
(bad)
loope
cmp
sub
sbb
lds
fwait
aaa
or
mov
aaa
adc
in
inc
iret
mov
or
sti
push
or
mov
retf
iret
out
lock
ins
repnz
sbb
push
pop
push
mov
cmp
out
add
and
jg
dec
xchg
xchg
addr16
mov
(bad)
sbb
hlt
push
sbb
inc
pop
sub
fldenv
das
or
mov
dec
xlat
bound
pushf
pop
pop
pop
outs
fistp
dec
and
sub
adc
scas
call
pusha
jmp
jl
inc
adc
inc
rcl
into
test
mov
arpl
movs
mov
inc
out
out
pop
pop
scas
out
adc
sub
jmp
cmp
mov
sar
dec
mov
dec
cdq
push
out
xchg
or
mov
out
ins
aam
adc
jb
das
(bad)
xchg
imul
mov
pop
lahf
loop
jg
xchg
pop
test
adc
push
int3
inc
fisub
mov
ret
mov
shl
xor
mov
leave
inc
mov
jo
add
stos
ret
inc
add
xor
cwde
add
int3
dec
jecxz
aaa
inc
icebp
fs
aad
movs
clc
es
inc
pusha
js
cdq
in
cmps
adc
(bad)
sbb
scas
pop
lods
add
mov
fdiv
fdiv
hlt
sub
xor
cmp
(bad)
xor
sbb
mov
leave
adc
xor
mov
pop
sub
cs
call
test
or
je
in
xchg
sahf
fldcw
xor
repnz
shl
rol
adc
push
ud1
icebp
inc
das
in
lods
cmps
fisubr
jbe
mov
inc
(bad)
xor
sbb
daa
jbe
mov
mov
shl
mov
loope
cmp
cmps
inc
call
call
popf
cmp
xchg
cmp
ins
jb
mov
and
data16
js
sar
cmp
repnz
std
(bad)
or
xchg
sub
sub
std
mov
mov
lods
fdiv
rcr
ins
or
adc
rol
inc
sub
push
adc
mov
and
push
mov
inc
mov
or
xchg
and
pop
pop
xor
adc
xor
leave
mov
push
sub
in
les
stc
stc
push
sbb
sub
out
mov
inc
mov
icebp
in
es
test
sub
(bad)
sar
jne
mov
cmp
adc
imul
dec
xchg
in
(bad)
mov
(bad)
shl
mov
add
cmps
aaa
out
hlt
aad
call
lahf
rcl
in
adc
lahf
dec
pop
push
mov
sbb
imul
mov
imul
adc
out
cld
rcl
mov
sbb
gs
(bad)
mov
ror
pusha
bound
lods
push
jl
xor
mov
adc
push
xchg
fsubr
xor
enter
dec
jge
jg
mov
fist
jmp
cmc
mov
fcomp
repz
sub
sub
adc
ret
add
(bad)
jle
ss
pusha
(bad)
adc
mov
sub
je
retf
idiv
jle
ror
into
sbb
int3
int3
daa
ficomp
sub
push
jmp
dec
outs
push
and
pop
xor
xchg
add
int
or
dec
add
nop
jecxz
movs
or
fst
out
jno
xlat
les
je
or
push
dec
and
imul
outs
les
mov
addr16
retf
stos
fwait
inc
dec
cdq
icebp
sbb
rcr
test
and
dec
jmp
xchg
jge
(bad)
scas
cmps
or
xor
push
add
or
frstor
cmp
add
test
push
adc
scas
push
rol
or
mov
jae
xchg
test
push
or
(bad)
sbb
clc
xor
call
jo
lea
cs
das
push
pusha
ret
mov
rol
ja
test
sbb
in
sub
and
or
jg
ss
push
cld
mov
lea
fsubr
dec
adc
pop
dec
push
pop
cmp
lds
xchg
inc
into
es
and
retf
retf
lods
mov
dec
xchg
loop
inc
inc
cdq
pop
jns
aaa
fst
fs
les
test
sbb
call
mov
adc
xor
ins
call
imul
fdiv
push
data16
or
call
test
adc
scas
pop
cmp
adc
mov
std
ud1
(bad)
jmp
lods
push
test
enter
push
jle
test
inc
jno
(bad)
cld
xor
add
pushf
pop
and
inc
hlt
dec
jnp
cli
mov
push
add
xlat
sub
jmp
rol
scas
dec
dec
jg
sub
test
and
mov
outs
mov
pusha
sbb
inc
test
xchg
mov
rol
pop
mov
dec
fldcw
popa
in
ror
xchg
xchg
loope
mov
mov
mov
or
je
push
push
pop
out
sbb
inc
push
mov
cmps
(bad)
gs
xor
push
adc
push
add
dec
cmp
inc
hlt
nop
dec
int3
jl
push
push
fisub
dec
pop
pusha
movs
fld
cs
push
push
rcr
(bad)
rcl
sahf
sbb
cmp
or
sub
nop
bound
in
fs
inc
sti
and
fmul
aam
pop
(bad)
arpl
cmp
or
rcl
jae
fisub
inc
rcr
mov
test
ins
cmp
in
adc
push
fcompp
jecxz
push
xchg
out
inc
cmp
aaa
push
sbb
imul
jp
addr16
jg
and
sbb
mov
push
xchg
mov
sbb
adc
jb
vmwrite
fs
mov
adc
adc
(bad)
add
xchg
mov
sub
cmp
arpl
fild
or
pop
fld
xchg
push
and
(bad)
sub
jne
sbb
outs
je
out
lds
dec
sbb
or
les
push
inc
push
jns
mov
fldcw
jae
loop
stos
or
jp
bound
jmp
mov
sti
aad
fwait
pop
inc
xor
sti
and
inc
fdivr
mov
arpl
adc
inc
xchg
call
jbe
xchg
ins
sti
enter
mov
sub
int
xchg
sub
or
mov
adc
popf
cld
test
adc
add
inc
shl
cmp
int3
dec
bound
js
into
lods
push
sub
es
sbb
add
int3
mov
cmp
arpl
pusha
movups
jae
jbe
test
xlat
cmps
retf
repz
sbb
mov
jge
fwait
or
inc
inc
repnz
jmp
aas
cmp
mov
hlt
push
mov
lods
dec
movs
add
mov
mov
movs
jmp
mov
xchg
sti
xchg
mov
fisubr
pop
add
jecxz
jns
mov
adc
add
imul
cmp
aas
mov
imul
loop
int3
inc
pop
(bad)
dec
xchg
cmps
push
cmp
and
xchg
push
dec
jmp
ficomp
xlat
push
fisttp
sub
nop
dec
data16
sbb
daa
adc
adc
mov
mov
push
inc
jmp
adc
fbstp
or
xchg
(bad)
sub
and
lods
sub
arpl
in
cwde
pop
mov
rcl
push
hlt
xor
out
rcr
inc
fwait
inc
lock
aaa
sub
jp
xchg
(bad)
fdiv
dec
push
adc
jns
jmp
mov
jae
push
cmp
adc
sub
add
(bad)
(bad)
mov
xchg
sub
sub
cmp
xor
mov
xor
add
dec
xchg
xor
lods
mov
ret
cmp
(bad)
fsubp
scas
mov
movs
lahf
inc
push
push
mov
and
pop
int
mov
mov
jb
xlat
movs
adc
pop
mov
fwait
mov
je
xor
out
cmp
cmps
dec
lods
xor
and
pop
popf
xor
mov
lods
test
adc
mov
xor
ins
fild
xchg
fs
xor
add
dec
movs
xor
jns
push
dec
jae
mov
dec
push
xor
cmp
pop
out
jmp
icebp
cmp
mov
cmp
fimul
pop
pop
sub
jge
xchg
push
jle
in
xchg
cmp
test
imul
xor
fdiv
fst
sbb
jno
movs
mov
inc
and
jecxz
push
or
jmp
cmp
jp
lahf
mov
data16
jp
cmp
sti
or
test
xor
dec
or
out
jo
jmp
sbb
cmps
cmp
addr16
sub
mov
les
xlat
cmp
mov
sbb
mov
cmp
mov
imul
mov
xchg
xor
sbb
test
sti
push
sub
(bad)
(bad)
dec
ja
repz
jno
(bad)
mov
jg
push
sub
pop
popf
inc
test
xor
pop
pop
mov
out
sbb
fcomp
sti
popa
out
mov
adc
jecxz
cmp
aam
sbb
dec
or
xor
xchg
lds
(bad)
fsubr
popa
sbb
push
int3
int3
dec
in
cmp
and
mov
test
adc
push
mov
mov
cli
mov
leave
adc
jne
iret
call
aas
or
test
stos
xchg
aam
scas
mov
movs
jl
pop
inc
lahf
(bad)
jp
loop
fwait
mov
push
inc
adc
jl
pusha
iret
mov
push
lods
pop
je
dec
movs
push
jnp
aam
add
or
jnp
enter
frstor
fcom
stos
fdiv
xchg
shr
nop
pop
inc
lods
addr16
xor
into
cli
mov
mov
imul
pop
mov
inc
push
aad
or
out
pop
jecxz
stos
jo
in
cmp
mov
inc
mov
push
pop
rcr
or
das
pushf
xchg
jns
ss
dec
mov
cmp
stc
push
mov
sbb
int3
stc
sti
retf
out
movs
lahf
cmc
jmp
jb
mov
mov
bnd
jns
retf
adc
(bad)
push
jl
pushf
push
arpl
(bad)
mov
adc
push
retf
xchg
int
fmul
ins
mov
adc
fidivr
cs
sahf
fsub
adc
pop
iret
mov
push
pop
mov
clc
dec
cwde
int3
sub
push
mov
fnstsw
cwde
cli
jae
and
je
push
scas
push
add
movs
fisubr
xchg
and
adc
dec
dec
pop
je
imul
inc
push
mov
and
dec
fnsave
icebp
mov
jne
mov
xchg
mov
ret
cli
xchg
cmps
scas
jbe
mov
ror
push
xor
mov
inc
fs
add
jae
dec
jmp
(bad)
std
pop
lods
mov
sub
inc
dec
in
inc
add
push
xor
pop
add
fadd
hlt
lds
mov
dec
add
scas
adc
inc
mov
jo
adc
add
rol
mov
jns
mov
mov
addr16
xor
test
and
in
xchg
push
xchg
fs
dec
push
fdivr
fs
std
fwait
inc
or
mov
or
call
jb
dec
sbb
mov
jns
(bad)
xor
push
inc
enter
push
test
sbb
jmp
xor
movs
push
xchg
xor
mov
cmp
rol
xor
cmc
xor
pop
es
jle
xchg
mov
cmc
push
mov
xchg
jo
(bad)
pop
std
pop
or
pop
mov
ror
and
cli
stc
inc
pop
pop
xchg
hlt
or
sbb
mov
stc
cmp
arpl
pop
imul
js
and
lods
inc
out
lahf
lods
fwait
daa
mov
mov
pop
xchg
or
fwait
pop
mov
sti
mov
jb
push
ret
test
test
cmps
and
mov
or
cld
cmp
jg
mov
gs
fimul
int
cmp
fsubr
cmp
and
sahf
mov
push
inc
shl
loopne
daa
mov
test
xlat
jmp
int3
rcr
out
inc
jne
jmp
sub
movs
pop
cmp
push
push
sar
cmp
test
mov
rol
push
les
jo
and
mov
sar
cmp
les
jmp
xchg
lds
test
pop
mov
adc
dec
iret
cmps
fs
adc
jno
cmps
test
ds
mov
stos
or
test
in
dec
xchg
icebp
pop
push
in
aad
and
add
pop
pusha
push
les
adc
sbb
lods
jne
in
sub
stos
sbb
xor
inc
test
adc
outs
imul
jg
xor
(bad)
inc
cmp
inc
push
call
shr
jp
stos
(bad)
ins
jp
or
outs
popf
icebp
das
retf
cmp
stos
add
add
out
pop
retf
gs
xchg
mov
xor
(bad)
daa
out
and
sahf
lahf
outs
jne
sar
jmp
sub
xchg
and
aas
aas
loopne
xor
mov
jbe
sub
js
xor
shl
cmc
cmp
inc
mov
push
inc
jle
and
jo
jno
and
sbb
pop
hlt
outs
add
(bad)
push
adc
cli
mov
(bad)
xor
fld
jecxz
adc
fld
push
fxch
mov
neg
sbb
sti
bnd
dec
js
pop
ficomp
call
cs
xor
outs
jp
add
push
xor
cmp
fisttp
test
daa
and
mov
sti
cmps
out
cmp
ins
ds
sbb
pop
xchg
xor
dec
(bad)
ret
and
adc
inc
lea
xor
or
cld
icebp
or
lods
(bad)
in
jo
xor
shr
loopne
sbb
dec
push
mov
ja
cmp
cmp
std
cli
stos
stos
jae
fldcw
ss
popf
xor
out
mov
inc
inc
push
adc
cmp
pop
pop
mov
add
mov
loopne
faddp
retf
stos
cmp
les
mov
inc
test
push
fnsave
inc
inc
mov
shr
jae
(bad)
hlt
mov
jmp
add
movs
out
cmps
test
stc
out
clc
imul
cdq
mov
add
push
jp
mov
cmc
bound
and
test
mov
xor
mov
mov
ret
dec
fbstp
sub
repnz
xchg
shl
cmp
cmp
mov
jbe
xor
xchg
gs
inc
cmp
mov
pop
ret
div
lods
cld
and
jb
jge
nop
inc
inc
mov
fcom
jne
popf
cli
inc
stc
sub
movs
pop
fs
dec
xchg
cld
sbb
mov
jle
pop
in
and
aad
xchg
add
es
push
inc
(bad)
cmc
push
mov
enter
sub
cmp
mov
ja
call
and
out
cs
xchg
sbb
neg
les
call
sar
dec
clc
mov
mov
mov
jl
mov
pop
sbb
sbb
pop
push
inc
xor
add
fucomip
xor
sbb
sbb
add
fimul
pop
mov
das
sahf
movs
aam
rol
sbb
adc
bound
out
lods
dec
xor
jno
addr16
int
or
fwait
jo
push
data16
div
sbb
adc
pop
in
xchg
fild
les
mov
sbb
ds
pop
push
push
dec
div
push
mov
ror
loope
inc
je
imul
das
xor
mov
addr16
ret
mul
mov
fild
test
or
ret
or
push
jp
lods
mov
pop
cs
cdq
in
pop
pop
pop
loopne
out
stos
std
mov
lods
repnz
adc
(bad)
adc
or
mov
test
fwait
ins
mov
repnz
call
or
sti
push
push
arpl
adc
or
xor
mov
sub
and
in
xor
push
pushf
aas
out
push
and
shl
ins
xchg
rcl
cmp
ror
aaa
mov
push
and
sar
jnp
fmul
es
push
mov
adc
out
and
dec
in
add
cmp
stc
rdpmc
xchg
xchg
jnp
add
jl
bound
mov
in
pop
retf
add
pop
adc
nop
mov
ss
jmp
imul
ret
cmp
fsub
xor
out
dec
push
xor
adc
popa
mov
sbb
and
test
sbb
pop
movs
xor
ss
pop
movzx
add
pop
arpl
ror
mov
xor
add
jae
fstp
aam
adc
shl
sub
aaa
in
and
cmp
test
jle
mov
(bad)
push
fwait
xchg
ja
imul
adc
cwde
xor
jle
pushf
push
adc
adc
sbb
xor
cmp
in
mov
jl
jg
lods
dec
mov
repnz
mov
leave
mov
xchg
mov
push
fdiv
adc
(bad)
int3
add
adc
cmp
shl
ins
std
push
xor
mov
cmp
lea
jg
jp
jmp
fs
jl
loope
inc
add
cvtdq2ps
pop
jmp
ficom
ss
js
jmp
shl
retf
dec
sbb
das
nop
or
scas
add
xor
imul
retf
nop
std
add
and
mov
daa
rol
jno
sbb
add
test
in
xchg
add
jnp
xor
sub
jnp
dec
mov
xchg
call
dec
pusha
mov
fst
mov
add
mov
dec
adc
cmp
cmp
inc
(bad)
sbb
enter
ret
jno
pop
push
bound
mov
add
scas
movs
repz
mov
mov
add
dec
or
pop
shr
jae
fcmovu
addr16
cmps
icebp
dec
fcmovnbe
lock
push
inc
xor
call
add
sub
or
jnp
call
loopne
or
mov
jg
loopne
enter
scas
jmp
dec
(bad)
cmps
ret
push
xchg
xchg
dec
jge
or
jns
jb
test
jmp
jl
dec
or
or
mov
xchg
mov
cmc
movs
jl
(bad)
adc
cmp
or
push
aaa
sti
jb
sbb
call
sub
dec
inc
dec
xchg
enter
out
xchg
jmp
jns
ja
gs
sbb
and
test
dec
cmps
fsub
(bad)
and
pop
sub
enter
add
dec
iret
loop
loope
cmp
mov
push
xchg
cs
ret
enter
and
pop
push
test
aaa
rcl
sti
lea
stc
add
lahf
cs
jmp
hlt
add
push
inc
stc
pop
mov
jo
scas
inc
jmp
cwde
mov
xlat
inc
loope
mov
adc
push
ret
es
ror
cwde
cs
mov
stc
jb
add
push
fbstp
cmps
jne
jo
in
and
push
test
loope
mov
cmps
mov
fldenv
push
int3
xchg
dec
cmps
mov
sub
out
xor
mov
push
mov
cmp
xchg
sub
or
mov
jb
adc
test
push
jbe
pop
jge
jnp
pop
mov
or
inc
push
or
mov
jp
enter
cmp
mov
pop
aad
and
and
packsswb
fsub
mov
sub
bound
out
shl
push
loope
mov
shl
adc
(bad)
arpl
adc
sub
add
dec
mov
xchg
rcl
dec
neg
out
inc
inc
push
xchg
pushf
and
test
dec
and
in
lea
dec
(bad)
pushf
cmp
mov
jnp
sub
fcmovnbe
sbb
xor
bound
test
clc
xlat
fild
or
jbe
push
(bad)
fcomip
retf
mov
ds
pushf
mov
pop
add
das
jbe
icebp
add
or
lods
push
push
lods
and
push
dec
dec
sahf
xchg
adc
dec
sub
cli
mov
push
inc
inc
or
cmps
xchg
and
add
cs
int3
(bad)
push
sti
or
xchg
mov
cmp
and
mov
ror
mov
xchg
mov
or
sbb
imul
push
outs
jo
les
sbb
out
std
ins
cmp
aaa
and
leave
test
push
or
movs
push
jecxz
mov
fdiv
cmps
jbe
dec
adc
mov
repnz
xchg
jp
mov
ret
test
push
leave
push
mov
jb
pusha
enter
inc
jnp
les
daa
jle
mov
mov
pop
stos
or
stos
mov
pop
xor
mov
je
mov
mov
aaa
xor
in
dec
mov
push
or
fadd
icebp
jb
scas
mov
cmp
out
cmps
or
fadd
push
xchg
mov
dec
repz
mov
inc
fldcw
sbb
outs
sbb
sub
cmp
popf
inc
and
pop
and
loop
out
and
fcomip
leavew
sub
xor
fdiv
aad
sbb
je
mov
loopne
shl
jg
test
sub
das
pop
mov
pop
sbb
mov
xor
and
retf
inc
int
jmp
sti
xlat
mov
outs
mov
lahf
inc
call
jge
idiv
push
cmp
sub
xchg
shr
adc
sbb
push
mov
gs
test
or
mov
int
dec
push
mov
stos
fisttp
sub
xor
popf
outs
js
arpl
push
ret
setnp
jp
mov
ds
mov
sbb
xor
pop
pop
cld
inc
arpl
xchg
and
xchg
cmp
mov
fist
(bad)
mov
pop
mov
iret
push
icebp
mov
cmp
divps
mov
fild
ret
clc
movs
dec
ds
jg
iret
sbb
scas
push
dec
cmp
sub
fisttp
sbb
fiadd
sub
xchg
jno
outs
adc
mov
ss
cmc
std
fistp
add
inc
fsubp
fs
mov
and
ja
movs
scas
xchg
call
dec
arpl
call
and
mov
dec
stc
mov
sahf
pushf
ins
mov
(bad)
daa
fld
xchg
mov
cmps
jle
sbb
int
or
sub
clc
jmp
clc
xor
dec
out
in
sahf
dec
inc
inc
stos
cmp
aam
cwde
aad
cwde
add
cmc
out
mov
sbb
les
push
gs
sbb
call
div
(bad)
stc
dec
adc
push
mov
pop
fstp
pop
jne
call
or
sub
fld
dec
xor
xor
and
cmp
or
lods
lock
and
sti
aas
fsub
fsub
imul
js
dec
jle
push
icebp
and
jns
inc
jp
pop
test
pusha
dec
les
into
inc
cwde
add
cmp
sub
ss
outs
inc
or
mov
mov
cdq
mov
cmp
int
out
lock
aas
add
mov
mov
movs
xor
jmp
je
enter
dec
call
xchg
jg
xor
pushf
outs
icebp
mul
scas
ins
inc
add
stos
loope
xor
fistp
push
push
js
mov
pop
sbb
inc
jmp
cmps
mov
mov
aas
dec
stos
jp
pop
jmp
cmp
loopne
icebp
or
in
adc
mov
dec
push
adc
sub
(bad)
in
pop
mov
cmp
gs
aas
pop
push
adc
inc
dec
shl
mov
loop
hlt
pop
inc
jge
mov
pop
adc
clc
xor
cmp
inc
and
push
fnstenv
cwde
xchg
mov
jnp
jne
inc
jmp
sbb
pop
lods
inc
jae
ret
shrd
mov
sbb
fsubr
(bad)
ins
xchg
pop
pushf
mov
stos
mov
push
es
inc
pop
dec
jno
jp
xor
mov
jne
fs
pop
sub
push
inc
cmp
push
in
jge
test
or
mov
aam
mov
pop
cmps
sbb
out
jmp
out
push
mov
mov
xchg
sbb
mov
jg
aaa
dec
jmp
jo
inc
push
push
fistp
mov
ffreep
cmps
push
aad
inc
rol
test
adc
xor
retf
cmp
out
sahf
retf
pusha
icebp
lahf
cmp
popf
xor
(bad)
loope
ds
lods
xchg
pop
pusha
in
data16
mov
sti
push
cdq
push
hlt
and
or
xchg
clc
fstp
mov
shl
adc
sbb
mov
jmp
imul
fcmovnbe
mov
je
popf
hlt
inc
enter
push
mov
cli
jecxz
(bad)
ins
or
xlat
inc
sbb
pop
je
push
cld
pop
mov
xor
stos
cmp
imul
shr
jo
rcl
mov
shl
and
mov
adc
adc
rol
pushf
fstp
imul
loope
loop
mov
adc
movs
xchg
and
or
into
rol
nop
int
ss
aad
push
mov
push
call
bound
movs
shl
mov
xchg
fs
repnz
cmps
mov
xor
(bad)
push
mov
dec
mov
push
popa
mov
scas
push
xchg
sahf
sbb
arpl
rol
ja
or
pop
dec
jecxz
mov
ds
sbb
dec
sub
icebp
lods
push
js
mov
hlt
pop
scas
scas
adc
xlat
loopne
in
xor
popa
mov
adc
fmul
adc
add
lods
shl
out
xor
cld
shl
int
sahf
movs
dec
inc
aad
not
aam
cdq
sbb
mov
mov
and
dec
ss
xor
std
fidivr
cmp
pop
jbe
test
add
sub
or
test
inc
inc
jne
or
dec
inc
mov
mov
dec
fld
mov
and
sub
call
xchg
or
sar
lea
test
xor
adc
mov
lea
jmp
sbb
dec
call
test
into
mov
push
rcr
push
inc
jno
xchg
add
jecxz
dec
xchg
xchg
out
xor
fistp
and
in
push
lods
lahf
pop
dec
push
cmps
jl
rol
std
push
and
xchg
mov
inc
inc
pop
in
hlt
mov
sub
pop
sbb
in
add
inc
adc
aad
add
ret
add
sbb
je
inc
xchg
pop
dec
xor
fcomp
cmp
imul
enter
dec
ds
pop
stos
dec
pop
fwait
hlt
cld
push
arpl
cs
mov
(bad)
add
hlt
jecxz
inc
shl
pop
data16
jb
jae
outs
popf
loop
mov
jmp
popf
(bad)
sti
or
xor
pop
xor
jnp
xchg
mov
xchg
add
cmp
push
xchg
xchg
ficom
mov
jo
jge
shl
jns
push
jecxz
adc
dec
adc
icebp
sbb
scas
dec
pop
sbb
push
jno
sahf
sbb
addr16
std
and
stc
outs
pop
icebp
xor
mov
mov
aam
fbstp
out
(bad)
fistp
stos
loopne
in
cld
stc
and
pop
xor
cmps
and
cmp
push
xor
mov
xchg
add
fiadd
aas
stos
ss
add
fcmovbe
mov
pop
loope
cmp
or
dec
ss
or
mov
inc
jns
fdivr
sbb
shl
sbb
sahf
mov
dec
jno
adc
and
cmp
pop
or
cmove
xor
in
cdq
and
aaa
xchg
imul
repz
mov
imul
pop
cmp
mov
pop
jno
lea
xchg
ror
fnstenv
popa
and
xor
popf
cmp
mov
mov
dec
xchg
clc
clc
inc
cmps
add
imul
and
shl
cmps
pop
pop
int3
xchg
push
leave
pop
imul
adc
dec
pusha
rcr
mov
in
sbb
push
xor
test
add
(bad)
cli
xchg
sub
adc
add
mov
adc
jmp
and
ror
inc
je
paddw
jo
sub
je
int3
sub
xchg
sub
sti
adc
imul
iret
mov
dec
scas
rcr
sub
push
aas
cli
loope
mov
add
sti
jmp
mov
mov
mov
dec
jle
cwde
dec
std
push
sti
inc
add
xchg
mov
push
into
and
fwait
xor
nop
in
shr
jmp
dec
in
movs
and
jl
xor
pop
mov
ins
in
add
xor
(bad)
pop
jecxz
aas
cmp
cmps
or
sti
cmps
cli
repz
xor
and
push
and
cmc
jbe
dec
sbb
or
pop
adc
dec
push
mov
inc
mov
loope
xchg
ret
fld
add
jne
aaa
ins
int3
(bad)
mov
adc
scas
bound
xchg
dec
lock
inc
fst
push
push
out
movs
ss
push
jns
push
inc
fst
push
adc
int3
jp
pop
leave
cwde
mov
pop
out
mov
or
leave
cmp
ret
rcr
mov
xor
inc
adc
adc
mov
xlat
(bad)
jle
sub
out
cdq
cmp
mov
adc
or
push
sub
jnp
in
out
xchg
leave
mov
inc
and
and
mov
sbb
sub
cmps
mov
leave
int3
mov
sahf
mov
lock
mov
pop
imul
add
(bad)
xor
mov
sub
ins
sub
adc
retf
jns
out
ret
std
fisttp
imul
xor
kmovb
pop
leave
sub
xchg
and
in
jmp
outs
imul
outs
pop
ja
rol
mov
cmc
mov
mov
adc
inc
pop
mov
jb
int3
mov
jl
loop
cmp
fincstp
xor
ja
or
or
jb
cs
jb
lods
sbb
mov
test
rol
dec
popf
inc
lock
loop
lahf
test
push
sbb
jecxz
mov
and
std
call
popa
adc
xchg
(bad)
add
xor
cmps
retf
dec
xchg
mov
aad
addr16
jge
mov
mov
scas
(bad)
mov
(bad)
hlt
jb
(bad)
sub
mov
mov
clc
test
jmp
and
push
cmp
retf
xchg
pop
arpl
pop
xor
adc
mov
shl
xlat
jle
inc
sub
nop
aaa
cmps
cwde
jge
push
mov
fdiv
dec
or
and
push
ins
(bad)
in
fild
adc
(bad)
loopne
sbb
imul
cmp
xchg
cmp
mov
(bad)
(bad)
sbb
inc
scas
daa
jl
cmps
xor
pop
imul
mov
mov
mov
push
cmp
in
cs
add
ficom
outs
not
(bad)
(bad)
retf
jne
ret
mov
int3
cld
and
jg
pusha
mov
lock
rol
ja
and
jge
xor
enter
or
ins
or
push
ja
jle
cmp
pusha
sahf
pushf
mov
lea
inc
call
mov
xlat
fsub
jecxz
push
mov
fstp
jmp
not
cld
sahf
xor
jns
xor
xor
(bad)
pusha
(bad)
adc
(bad)
adc
sub
test
in
loope
inc
repz
sub
aad
aas
popa
sub
mov
out
fldenv
sub
(bad)
ja
sub
movs
jbe
je
cli
mov
sub
mov
push
jle
cmp
nop
loop
dec
fstp
add
mov
jnp
jp
sti
lahf
inc
mov
shl
push
xchg
adc
ret
and
xor
pop
repz
adc
inc
test
sub
addr16
push
push
xchg
cld
and
pop
pop
lds
sbb
jnp
in
aad
test
inc
rcl
sti
and
int3
jb
out
das
scas
loopne
in
mov
sti
dec
arpl
dec
ret
sub
pop
pop
shl
sbb
sbb
adc
loope
retf
hlt
push
xor
mov
xchg
rcr
into
add
inc
jbe
les
sub
jge
mov
ds
aas
scas
pop
push
adc
aad
mov
je
mov
cmc
in
out
xor
mov
mov
mov
sbb
loop
mov
(bad)
pop
aad
inc
mov
es
and
(bad)
jg
mov
je
ins
in
icebp
mov
scas
ins
and
repnz
rcr
stc
jg
or
test
stos
mov
ds
repz
xor
push
mov
rcr
sub
xchg
jnp
inc
or
xchg
and
mov
sub
mov
arpl
test
idiv
adc
xor
je
cmp
add
test
stos
sbb
out
(bad)
imul
or
aas
cmp
cwde
add
mov
test
sub
and
inc
dec
push
lods
nop
jbe
dec
ret
sub
test
(bad)
into
and
mov
fadd
movs
mov
cmp
ja
int
mov
sub
mov
int3
les
sbb
shl
dec
xor
inc
loop
sahf
push
cmps
jns
jae
sahf
jle
pop
sub
xor
dec
adc
mov
push
into
dec
xor
imul
sbb
or
jo
adc
adc
cs
jmp
aaa
(bad)
cmp
mov
out
repnz
cdq
jbe
mov
cli
xchg
xchg
mov
leave
test
out
mov
adc
shl
and
ds
stos
sbb
mov
sbb
push
sbb
push
dec
iret
adc
sub
icebp
inc
sub
(bad)
cmp
bnd
mov
sbb
mov
lods
push
imul
pop
lds
test
push
cmp
inc
retf
(bad)
frstor
out
ret
inc
out
adc
inc
mov
sub
mov
ja
dec
inc
cmp
clc
adc
adc
mov
sar
(bad)
aad
jb
and
aam
mov
sub
jns
cmp
addr16
test
inc
jp
push
neg
or
jge
mov
pop
scas
pop
leave
jnp
(bad)
adc
push
pop
div
dec
std
iret
icebp
xor
pop
sub
inc
or
jmp
repnz
in
and
mov
lahf
arpl
in
test
std
jmp
int
xchg
mov
(bad)
not
xor
xchg
into
inc
aas
jmp
mov
adc
std
add
movs
pop
cs
and
or
scas
xchg
pop
dec
and
mov
jo
push
in
jg
inc
repnz
xchg
out
test
(bad)
adc
adc
pop
ds
out
cmp
mov
xchg
push
pop
mov
adc
push
inc
push
push
mov
(bad)
aas
sub
pop
cmp
aad
rcl
add
in
push
dec
test
(bad)
mov
fsubrp
(bad)
inc
dec
or
fidivr
jno
aam
lahf
pop
jns
jne
jae
cmp
xchg
lea
inc
test
mov
out
leave
cmp
stc
lds
into
jne
cmp
inc
cwde
pop
stos
loope
mov
ror
fs
jp
pusha
inc
scas
push
adc
sbb
inc
mov
(bad)
cmp
into
push
fcomp
add
xchg
leave
aas
outs
repz
jbe
cli
push
nop
fsub
arpl
and
xchg
iret
data16
push
dec
mov
cs
adc
mov
sahf
aad
dec
jg
(bad)
mov
xchg
jae
lock
sub
mov
das
loopne
cmc
mov
mov
sbb
loop
jno
mov
arpl
clc
and
cld
fsubr
add
cmp
jnp
cld
xlat
fsubr
push
sbb
push
add
dec
mov
(bad)
push
sbb
dec
or
mov
jo
add
aad
call
adc
pop
cmp
adc
into
pop
and
pop
mov
outs
jle
shl
pop
js
bound
add
sbb
sub
arpl
inc
or
mov
mov
sub
xor
movs
push
push
cmp
and
adc
xchg
retf
stc
and
cdq
adc
stc
jnp
inc
cmp
push
inc
xchg
or
dec
(bad)
not
sub
imul
inc
pop
stos
lea
pop
xchg
jne
outs
cmc
jb
jb
pop
retf
fs
mov
rcr
(bad)
icebp
mov
aam
fmul
sbb
ins
mov
aas
retf
push
jecxz
sbb
aaa
inc
es
pop
pop
or
in
test
inc
test
sub
lahf
lea
cld
dec
cmc
call
mov
push
and
jg
mov
retf
pop
cmp
in
mov
(bad)
out
std
hlt
rcr
xor
shr
xor
and
repz
inc
iret
jmp
xchg
in
cdq
jmp
repz
and
or
cli
clc
cmp
fst
repnz
sub
bound
popa
add
and
ins
xor
jb
push
in
out
cmc
adc
xlat
push
and
pop
mov
add
bound
xchg
movs
(bad)
sbb
cmp
sub
pop
into
jno
pop
in
jle
push
cmp
aaa
adc
ret
shr
adc
jo
stc
das
and
shl
call
fnstsw
mov
adc
daa
xor
dec
push
push
jno
mov
lock
inc
fcom
fucomip
mov
test
jae
dec
arpl
sahf
or
les
jo
fdivr
repz
and
push
sub
jae
cli
ret
ficom
pushf
adc
or
mov
mov
add
cmp
fwait
xchg
(bad)
hlt
jne
dec
sub
mov
mov
stos
xor
pop
mov
sub
mul
jno
ret
add
push
add
out
pop
adc
mov
(bad)
lock
mov
pop
lds
push
test
cs
mov
pop
xchg
mov
arpl
push
repnz
(bad)
(bad)
mov
(bad)
add
sti
lock
mov
nop
outs
ja
cmp
or
dec
rol
xchg
xor
add
cmps
mov
bound
(bad)
das
sbb
adc
push
fwait
test
(bad)
mov
cwde
xchg
xchg
dec
inc
pop
sub
loopne
add
imul
sbb
out
(bad)
cli
aad
mov
and
dec
aas
iret
or
ins
push
or
les
sbb
sbb
addr16
sahf
xor
fwait
cmp
mov
scas
movs
cmc
ret
cli
pop
sbb
(bad)
sbb
push
loop
xchg
nop
cmp
mov
dec
fdiv
shl
dec
xor
test
out
and
pop
loope
popa
mov
pusha
int
call
cmps
push
sub
mov
or
sub
sti
fs
out
dec
push
sbb
xor
repnz
enter
or
or
in
sbb
xchg
sub
pop
and
cmc
popf
and
inc
mov
lea
inc
adc
data16
inc
sahf
xchg
mov
dec
mov
rcr
outs
shl
and
out
icebp
and
mov
mov
jp
push
call
add
lahf
ds
dec
and
mov
mov
pop
xchg
jge
mov
xchg
and
repz
lea
test
loope
sub
fs
cmp
adc
out
stos
leave
int
pop
jecxz
nop
sbb
test
mov
ins
leave
movs
sbb
lods
(bad)
mov
sub
fmulp
push
or
in
call
sub
jns
cmps
int3
xor
pop
int
rcl
in
mov
inc
and
jbe
jo
mov
pop
push
lods
out
loop
pop
mov
frstor
rol
shr
xor
inc
xor
js
jo
push
hlt
call
xchg
retf
mov
mov
inc
dec
inc
adc
sbb
shl
jp
icebp
jle
sahf
cli
and
bound
cmc
aad
xor
jbe
jp
pop
or
push
fistp
mov
out
mov
mov
repnz
push
lock
mov
aad
pop
stos
lods
add
mov
(bad)
ds
push
sub
push
lock
cmp
sbb
lds
sub
pop
sbb
jnp
jle
aas
ins
dec
cmps
mov
rcl
call
mov
push
mov
inc
add
dec
adc
mov
stos
pop
(bad)
or
mov
sbb
popf
scas
shl
cmps
dec
ds
stc
fwait
js
ds
mov
mov
xor
cmp
(bad)
in
xor
and
adc
sbb
dec
les
adc
ror
xchg
or
jbe
pop
cmp
mov
or
sub
and
int
add
dec
sub
pop
idiv
les
push
jmp
or
std
(bad)
ret
(bad)
xlat
jae
bound
dec
sbb
xlat
or
push
stos
test
jno
jecxz
les
pop
or
xor
(bad)
mov
push
loop
sbb
fisttp
adc
aam
pusha
xchg
xor
xchg
test
dec
dec
xor
jge
pop
dec
mov
add
mov
jmp
mov
call
fmul
mov
ret
pop
pushf
pop
js
loope
loopne
add
sbb
push
mov
jle
(bad)
sbb
jle
jnp
in
leave
call
push
imul
out
xchg
leave
pop
fsubr
aad
mov
cmp
mov
addr16
call
jle
les
faddp
xchg
fsubr
das
xchg
mov
imul
in
nop
or
mov
push
retf
or
push
add
push
(bad)
pop
mov
mov
test
neg
fwait
cmps
sbb
xor
sahf
push
xchg
dec
cmps
sbb
pop
inc
mov
cli
lods
div
test
clc
in
xchg
cli
retf
ret
and
sbb
loope
scas
fsub
push
push
or
jp
scas
inc
clc
push
cmps
inc
in
cmp
out
adc
in
xchg
cli
mov
sti
ins
shl
xor
jp
aaa
push
ss
leave
stos
lock
call
(bad)
into
call
inc
test
fmul
std
or
(bad)
popa
mov
or
cmp
outs
cmc
or
outs
jecxz
cs
sbb
sub
cmps
pop
mov
mov
xor
(bad)
(bad)
jecxz
add
push
add
mov
arpl
add
fcomp
pop
jno
nop
mov
js
aaa
xlat
int3
pop
ret
sahf
iret
fs
mov
jmp
pop
leave
pop
fmul
ret
in
out
out
mov
adc
jmp
and
xor
mov
jp
inc
icebp
dec
test
sbb
test
xor
mov
sahf
ins
jge
mov
cdq
test
inc
loop
inc
push
ins
imul
fnstenv
ror
retf
adc
jbe
test
sbb
fcmove
dec
in
daa
ret
xchg
pop
xor
push
jg
lods
mov
jp
sub
dec
inc
cmp
test
test
dec
mov
imul
ins
push
fs
xchg
aaa
mov
inc
not
cmc
js
lock
fstp
jmp
inc
add
loopne
add
or
sub
test
inc
loope
mov
jo
sbb
outs
ret
sub
xchg
dec
ds
out
pop
xor
pop
sbb
enter
fs
hlt
adc
sbb
retf
(bad)
enter
dec
xchg
mov
jg
rol
popf
stos
ficomp
push
sbb
fmul
add
movs
mov
mov
xchg
fwait
xchg
int3
add
pop
mov
inc
and
mov
fnstenv
sub
ror
sbb
pop
adc
cmp
call
rol
cmc
movs
lods
cmc
pop
cdq
std
dec
inc
idiv
jg
xor
jl
retf
pop
fxch
retf
outs
mov
pushf
mov
ror
in
pushf
add
inc
xchg
dec
mov
inc
xor
mov
call
stc
fidiv
icebp
(bad)
fdiv
mov
mov
push
lods
mov
mov
jp
(bad)
aad
dec
enter
test
sar
lock
xlat
jo
dec
jnp
xchg
cmps
sub
pop
movs
push
bnd
in
(bad)
xor
and
cmps
in
xchg
enter
rcl
mov
ss
ins
pop
sbb
jbe
mov
test
sbb
scas
push
daa
sbb
and
popf
and
cmp
dec
cld
push
fistp
int
sbb
jnp
ret
stos
popa
xchg
xchg
int
jp
jg
call
xor
mov
out
adc
jmp
enter
add
inc
jbe
ins
jmp
cwde
jne
xor
mov
cld
jl
outs
sub
inc
jbe
sub
shld
hlt
leave
neg
pop
mov
pop
mov
(bad)
dec
push
lods
out
inc
repnz
mov
mov
inc
imul
xor
mov
outs
pop
call
fs
sub
push
shl
cmc
mul
div
sbb
lods
xchg
aaa
dec
fdiv
or
mov
ins
repnz
xchg
(bad)
pop
cmp
inc
mov
mov
jb
shl
pop
jne
test
ret
push
ret
test
add
pop
mov
sub
cmp
xchg
mov
dec
xchg
(bad)
or
mov
imul
or
xlat
je
adc
daa
sub
inc
cmp
dec
pop
fs
aam
out
mov
fwait
pushf
dec
ja
cld
idiv
pop
call
jb
sar
mov
mov
mov
push
fisttp
pusha
mov
xchg
ror
sub
push
sbb
imul
in
jg
pusha
xor
sub
leave
lea
(bad)
jle
xchg
int3
clc
dec
xchg
inc
sbb
cmps
adc
and
xchg
add
xchg
dec
outs
xor
adc
xlat
adc
ja
arpl
outs
jecxz
mov
iret
or
inc
push
cmps
mov
test
add
dec
cmp
cli
mov
xchg
mov
mov
test
sub
pop
clc
aas
jne
outs
movsx
dec
or
cmp
outs
icebp
cdq
cmp
inc
in
ret
scas
cmp
and
bound
cmp
into
leave
jae
(bad)
fsub
xlat
sbb
jbe
xchg
adc
xor
(bad)
std
xchg
ret
int
mov
inc
aam
lods
movs
(bad)
or
xchg
or
out
mov
and
sbb
mov
mov
xchg
add
dec
sub
mov
add
or
mov
out
cmp
cli
sub
addr16
pop
(bad)
pushf
jbe
sub
scas
test
cwde
xor
mov
jae
add
cwde
mov
in
xchg
outs
push
lea
leave
pusha
fisub
out
shl
inc
mov
movs
dec
jbe
inc
pop
push
hlt
fs
and
daa
sbb
push
or
lahf
repnz
or
cdq
sub
adc
pop
setns
aad
aaa
out
push
mov
dec
xchg
inc
mov
ins
xchg
in
cmp
mov
jo
rcr
or
mov
cld
mov
pop
mov
shr
leave
outs
ret
popa
(bad)
sub
addr16
jb
xor
movs
test
or
mov
pusha
outs
push
out
mov
add
fisttp
jmp
movs
ret
retf
inc
out
stos
jnp
push
ficom
js
push
mov
mov
popa
dec
lea
adc
adc
(bad)
adc
clc
jmp
nop
mov
jbe
dec
jne
(bad)
lods
jbe
pop
push
popa
add
push
ins
add
and
xor
stos
ins
pushf
mov
lods
fwait
xchg
movs
test
outs
or
push
and
push
outs
add
lahf
xor
hlt
jg
std
inc
or
or
cmp
out
int3
push
(bad)
push
in
rcr
jmp
(bad)
xor
scas
xchg
pushf
leave
mov
sub
or
out
fdivr
cs
in
leave
cmps
hlt
sbb
lods
sahf
test
dec
stc
ja
jge
leave
fcom
cmps
cmp
add
shl
sahf
retf
cli
loope
push
xchg
adc
xchg
dec
jp
data16
add
dec
sub
aad
shl
mov
mov
adc
and
(bad)
je
xor
push
(bad)
adc
cmp
call
jno
test
mov
rol
xchg
adc
push
call
into
mov
shl
sub
rcl
movs
(bad)
push
xchg
outs
out
mov
out
and
jae
adc
ret
or
test
jp
push
mov
jns
adc
xchg
lods
test
addr16
adc
pop
xor
push
loopne
jg
mov
cwde
loop
popa
stc
mov
stc
popa
shl
fdiv
mov
ins
mov
shl
ins
lds
sbb
fbld
retf
mov
mov
mov
mov
int
lods
jbe
xor
jnp
fisttp
out
icebp
aad
sbb
xchg
jp
pop
mov
xchg
lea
cmp
outs
aas
ins
imul
xchg
cmp
and
and
xor
out
imul
push
mov
fnstsw
mov
inc
cmp
scas
dec
sbb
xlat
jae
cli
fcom
test
add
ficomp
lock
dec
je
jg
adc
in
lods
mov
(bad)
xor
mov
and
and
pop
movs
retf
mov
mov
pop
fisttp
into
cmp
aas
stos
fdiv
imul
sub
xchg
jmp
sbb
pop
outs
(bad)
frstor
inc
ins
cmps
push
test
fcomp
in
icebp
inc
das
test
imul
xchg
cmp
sti
fdiv
adc
cwde
mov
sub
xchg
adc
je
outs
add
sub
retf
or
jmp
mov
xor
stos
pop
cmc
push
xchg
test
(bad)
and
and
add
fsubr
sbb
cmp
stos
xchg
mov
stos
mov
xor
leave
inc
cmp
jbe
mov
nop
stos
mov
sahf
int3
add
aad
and
sar
test
xlat
xchg
mov
fstp
xchg
js
pusha
and
imul
pop
mov
xlat
not
rol
push
sbb
(bad)
(bad)
shr
(bad)
out
and
enter
aaa
std
jae
adc
push
xchg
call
cdq
mov
or
fst
fisubr
sbb
int3
(bad)
xchg
and
aam
clc
or
push
sbb
xchg
and
xchg
(bad)
jbe
addr16
mov
mov
cli
int3
push
push
je
sti
xchg
loop
pop
lahf
enter
in
mov
push
mov
xchg
mov
stos
dec
iret
jb
movs
dec
cdq
pushf
push
and
sub
leave
push
mov
add
stos
sbb
cmp
out
(bad)
lock
mov
xchg
and
es
fiadd
aas
inc
and
xchg
mov
jl
vmovhpd
retf
push
mov
pop
call
push
push
rcl
(bad)
jmp
scas
jg
jmp
jb
add
mov
fld
mov
in
mov
repz
push
jecxz
add
jo
out
jb
scas
push
push
cwde
jb
std
sub
xchg
jae
fwait
xchg
into
jmp
xchg
push
cmps
xchg
pop
mov
jp
or
mov
das
sbb
xor
stos
cli
rep
inc
cmc
movs
xchg
in
jmp
retf
jmp
pushf
jmp
cmps
inc
xchg
shl
jne
push
aaa
xchg
mov
enter
loopne
cmp
pop
push
repnz
cmp
stc
ja
or
mov
mov
inc
cmp
fmul
data16
push
cmp
sub
ds
sbb
in
xor
fcomi
ins
mov
fwait
std
(bad)
cld
lods
push
lea
cmps
add
xchg
mov
cmc
je
inc
arpl
shl
push
inc
ror
jmp
(bad)
sub
outs
sub
ret
cmps
mov
jl
sub
xor
aaa
xor
js
sar
mov
jecxz
mov
imul
jle
jb
cmps
(bad)
shr
jbe
bound
pop
cmp
stos
cmps
push
mov
(bad)
test
xchg
bound
mov
aad
cmp
fcomp
fbstp
(bad)
adc
cmps
fistp
fld
clc
add
(bad)
popa
dec
cmp
mov
sar
sub
jecxz
mov
inc
cmp
aad
shl
or
push
inc
inc
mov
mov
pop
mov
movs
cmp
bound
jecxz
mov
xor
call
fldenv
fild
js
mov
ror
(bad)
jg
mov
push
adc
nop
or
and
imul
adc
fcmovb
mov
add
xchg
mov
mov
imul
mov
mov
jecxz
das
loop
stc
inc
jp
out
push
frstor
dec
push
xor
dec
les
jmp
jge
and
pop
fs
(bad)
loope
dec
cmps
mov
xchg
add
movs
mov
fcom
cmps
cmps
ins
cmp
mov
xor
stc
push
dec
arpl
or
dec
loope
cmps
mov
push
and
dec
js
clc
adc
xor
xlat
cmp
push
sub
rcl
call
add
int
test
dec
test
push
sub
in
aam
adc
adc
xchg
leave
fwait
jl
mov
cmps
adc
and
push
pusha
push
xchg
sbb
inc
test
xor
push
inc
mov
inc
fs
add
aad
outs
mov
mov
or
ja
sub
xchg
xchg
add
xchg
mov
shl
repz
xchg
rcr
outs
pop
out
mov
xor
clc
add
jmp
retf
cli
ja
daa
add
adc
fistp
cmc
mov
cmp
shl
retf
cmp
or
cmp
arpl
dec
jno
fst
inc
inc
sbb
jmp
imul
xchg
mov
and
mov
(bad)
mov
add
add
xchg
or
xor
mov
int
rol
push
lahf
popf
outs
retf
mov
jmp
inc
mov
pop
ficomp
lods
je
xchg
mov
xchg
lahf
push
jb
cdq
xchg
arpl
adc
jns
pusha
sbb
mov
pop
cli
dec
and
ja
xor
mov
jno
(bad)
dec
int
test
lahf
xor
mov
mov
mov
and
mov
jne
data16
daa
pushf
mov
loope
xchg
push
and
lods
jle
push
je
mov
cli
push
inc
stos
pusha
test
push
addr16
jge
and
ss
call
ja
in
or
xor
jno
or
push
sti
sub
popa
adc
push
adc
fimul
xor
jbe
imul
cmp
pop
imul
push
jmp
jp
ret
loop
mov
leave
mov
push
push
xor
add
fcomp
adc
inc
xor
ret
cmp
sar
out
iret
jnp
loope
std
pop
pop
sbb
xor
or
xchg
repnz
xchg
cmp
sahf
pop
sar
mov
sbb
out
mov
repz
inc
push
loopne
push
adc
xchg
mov
test
mul
pop
mov
rol
shr
mov
cmp
adc
ins
hlt
data16
mov
or
push
push
jl
xchg
and
add
adc
mov
test
fnsetpm(287
pop
aas
mov
push
mov
inc
push
mov
adc
dec
popf
cmps
or
shl
xor
pop
in
mov
cmp
(bad)
push
scas
adc
xor
out
xchg
stos
xor
bound
jnp
stc
push
mul
cdq
aam
xor
mov
jg
push
xlat
in
retf
dec
push
push
out
push
popa
lock
mov
out
retf
mov
jg
loope
cmp
iret
or
call
mov
cmp
or
bound
push
xchg
dec
inc
pushf
or
jp
xor
cwde
push
mov
loopne
ins
xchg
mov
nop
jg
cmps
jns
add
loope
shl
push
rol
fcomp
add
js
inc
xchg
adc
pop
sysret
fmul
mov
sbb
in
rol
push
call
mov
xchg
add
les
fs
bound
adc
mov
dec
inc
pop
sbb
xor
sbb
(bad)
into
adc
push
dec
les
mov
nop
add
repnz
add
push
cmc
pop
and
hlt
popa
pop
add
rcr
int3
cdq
out
shl
and
inc
xchg
imul
xchg
into
adc
hlt
outs
push
inc
mov
mov
imul
enter
(bad)
int
xor
or
mov
retf
xor
push
lods
(bad)
(bad)
mov
sub
in
mov
pop
test
sbb
xchg
(bad)
enter
mov
dec
and
outs
mov
add
aaa
push
and
mov
stos
sub
rol
cli
xchg
out
mov
mov
mov
adc
mov
imul
jne
fwait
mov
sub
ret
push
push
sar
or
addr16
popf
jo
scas
and
call
pop
imul
cmps
mov
push
inc
bound
stos
aam
test
ror
test
repz
cmp
das
mov
adc
retf
jecxz
shl
push
not
inc
push
jmp
ror
push
mov
pop
not
shr
popa
int
shl
pop
sbb
and
clc
sbb
out
inc
dec
sbb
mov
push
jmp
clc
adc
fidiv
adc
sbb
jnp
pop
out
xor
call
lds
popf
fcom
sbb
shl
(bad)
cmp
mov
test
inc
push
idiv
fnstsw
mov
shr
(bad)
out
push
mov
and
push
ret
out
and
mov
push
add
ins
pop
inc
dec
jg
in
daa
hlt
outs
mov
jae
inc
les
inc
inc
inc
fistp
and
xchg
leave
outs
jecxz
iret
daa
push
sub
cmp
sar
clc
in
push
sub
pop
shl
inc
hlt
aad
loop
mov
jl
scas
mov
cmp
imul
popf
enter
loope
int
mov
je
mov
into
popf
dec
pop
or
dec
icebp
jne
daa
dec
dec
cmp
jl
xchg
pop
xlat
or
popw
loopne
imul
fstp
das
push
pop
sbb
stc
imul
dec
sbb
leave
std
cli
dec
sub
inc
int3
(bad)
mov
pop
(bad)
aas
ret
hlt
dec
xchg
(bad)
xlat
movs
and
pop
nop
scas
sar
mov
jmp
loopne
shr
call
add
sub
xor
int
ret
pop
jge
pusha
icebp
inc
adc
test
bswap
add
xlat
clc
arpl
mov
cmp
push
shr
test
add
retf
or
out
mov
xor
ins
mov
stc
dec
aaa
cwde
and
mov
adc
fldcw
pop
pop
adc
ret
fnsave
add
fimul
inc
or
add
xor
imul
pusha
xlat
mov
jno
jns
or
and
and
pop
daa
push
pop
pop
(bad)
adc
sbb
push
mov
js
cmp
popf
inc
sar
pop
movs
cmps
xor
shl
movs
sbb
pop
scas
jb
mov
outs
daa
fadd
xchg
xor
scas
inc
loopne
ins
(bad)
sti
pop
dec
clc
xchg
pop
jmp
push
mov
shr
imul
jns
jmp
or
in
jp
test
push
out
fisub
lds
and
sub
xchg
scas
and
out
cmp
dec
cmp
jle
test
cmp
cmp
lahf
retf
sub
je
or
out
jmp
outs
or
in
sub
(bad)
cld
mov
out
pop
fisubr
mov
xor
loop
xchg
sub
scas
mov
outs
repnz
ins
aaa
jae
loope
adc
cmp
jmp
sbb
cs
cmc
and
jno
es
test
outs
loope
cdq
scas
fisttp
ins
sbb
cmps
dec
out
fistp
scas
sbb
mov
arpl
call
dec
mov
jmp
push
jo
jmp
(bad)
fisubr
aaa
lods
mov
dec
ror
lock
add
jl
aad
mov
mov
psubb
into
push
stos
push
sub
mov
aaa
std
jmp
scas
fimul
pop
pop
and
and
mov
and
cmp
cmp
pop
xchg
adc
lahf
outs
sub
retf
test
jecxz
int3
cmp
sbb
je
test
push
iret
imul
jle
xlat
mov
mov
sbb
out
es
dec
lods
jmp
or
add
push
rcr
jne
lods
cli
push
pop
dec
les
sub
mov
aas
fsub
dec
nop
inc
out
dec
mov
call
sub
sub
push
(bad)
and
fisub
and
dec
(bad)
jbe
outs
popf
mov
inc
jno
mov
jge
mov
pop
mov
je
mov
icebp
and
dec
pushf
pop
mov
mov
mov
push
push
inc
bound
repnz
inc
es
sub
mov
xor
(bad)
cmc
lea
jge
pop
pop
push
jo
(bad)
stos
push
mov
je
shl
dec
inc
jg
pop
call
ror
aaa
rcr
jo
test
mov
outs
adc
int3
push
or
mov
scas
mov
xor
mov
cli
jns
xchg
and
mov
lea
xchg
xchg
add
repnz
mov
xchg
mov
pop
mov
clc
push
test
jg
adc
mov
push
push
dec
lds
(bad)
cmp
ror
inc
mov
fwait
mov
jge
movs
xor
cdq
and
inc
jns
das
(bad)
fcom
(bad)
sub
jae
inc
das
fnstenv
jmp
lods
ins
pop
jg
dec
add
mov
stc
mov
add
sbb
lock
movs
movs
add
out
arpl
jg
xchg
fwait
test
addr16
xlat
jmp
out
push
cmp
and
and
fwait
and
inc
ins
loope
cmp
(bad)
scas
or
pop
sub
inc
scas
(bad)
cdq
push
ret
pop
(bad)
shl
mov
test
test
sbb
ins
and
and
(bad)
mov
(bad)
xor
fnstcw
mov
adc
sti
test
stos
rcl
lods
jmp
cmp
and
jns
retf
xchg
leave
mov
stc
call
out
sub
xchg
cli
pop
mov
cmp
cmp
ret
inc
add
in
in
nop
arpl
xchg
mov
cmp
dec
sbb
jo
xchg
ror
fdivr
or
dec
mov
sbb
xor
push
scas
cmp
sub
push
add
mov
sahf
push
shr
fistp
push
push
inc
fs
mov
(bad)
loopne
ret
jecxz
loop
mov
leave
das
adc
sbb
mov
add
cmc
fild
leave
push
xlat
iret
xchg
aas
(bad)
mov
sub
adc
xor
fisttp
enter
out
fmul
lds
aad
jo
popa
add
in
or
int3
stc
int
push
push
sub
jo
jg
pushf
retf
cmp
inc
add
jnp
mov
push
les
mov
jb
and
and
in
in
inc
jbe
mov
jne
movs
mov
mov
jp
fisubr
cmps
mov
arpl
fs
push
xlat
daa
add
inc
shl
mov
scas
and
repnz
movs
call
cli
sbb
mov
(bad)
fldenv
push
mov
imul
dec
cmp
neg
fdiv
(bad)
jo
pop
and
mul
jb
test
out
cld
mov
fnstenv
out
mov
stos
mov
jo
adc
in
add
cmps
pop
mov
mov
mov
pop
mov
enter
or
xlat
mov
adc
add
mov
cmp
mov
fisub
fidivr
test
add
lahf
call
scas
inc
repz
into
lods
jp
aam
enter
xor
pusha
pop
push
dec
cmp
leave
enter
ins
pop
js
iret
add
and
dec
cmp
inc
push
jecxz
sti
cwde
lea
clc
sub
xchg
das
inc
dec
dec
and
stos
fld
inc
test
aaa
pop
fs
xlat
jge
jns
imul
cmp
push
lds
jmp
xor
das
dec
std
xor
sbb
cmp
sub
loop
mov
mov
in
retf
dec
fcom
fstp
cmp
nop
int3
outs
add
xchg
pushf
dec
jl
nop
push
aas
in
push
pop
gs
repnz
rcl
jp
pushf
out
pop
(bad)
jl
mov
mov
inc
scas
cmp
or
cdq
movs
cmps
cmp
mov
adc
lods
or
das
xchg
xor
push
xor
pop
aam
(bad)
cmp
xor
xchg
call
lea
out
loopne
fsub
mov
mov
aas
cmp
les
lock
in
inc
and
jns
(bad)
fisubr
lahf
inc
popf
or
(bad)
dec
leave
dec
repnz
xchg
movs
cmp
call
jbe
pop
pop
movntsd
movsx
mov
jb
mov
pop
jmp
icebp
push
add
addr16
cmp
dec
(bad)
out
mov
sub
(bad)
ds
adc
add
jge
mov
push
mov
add
stos
mov
xor
add
stc
jecxz
dec
mov
(bad)
xchg
push
pop
mov
add
in
mov
inc
sub
adc
jl
pop
retf
pop
out
loope
aas
out
test
add
xchg
and
out
cld
xchg
lods
or
add
imul
in
repz
repz
push
(bad)
mov
sahf
push
adc
inc
lods
test
ins
push
cmps
and
mov
(bad)
mov
mov
ret
test
and
adc
sar
pop
jge
mov
retf
gs
push
sbb
mov
rol
(bad)
push
push
popf
mov
std
(bad)
idiv
loopne
or
xor
jecxz
fist
mov
lods
ret
mov
ds
fmul
arpl
mov
mov
sub
push
mov
sub
xchg
jae
es
dec
mov
and
xor
cs
dec
into
repnz
jl
loop
adc
gs
imul
sub
lds
lock
mov
ds
popf
ja
in
pushf
push
add
repnz
icebp
fsub
mov
adc
inc
xchg
ds
into
pop
(bad)
stc
sbb
inc
(bad)
jbe
cs
stos
or
dec
out
mov
in
out
loope
gs
pop
fs
neg
push
xlat
adc
out
test
inc
push
movs
cmc
jo
push
and
repz
aaa
inc
cmps
jbe
add
dec
lahf
in
dec
ss
movs
inc
jo
push
dec
jmp
mov
loop
iret
xor
mov
sahf
aam
xchg
stos
imul
sub
jno
sub
(bad)
mov
adc
mov
outs
repz
adc
inc
es
push
aaa
add
and
lock
icebp
add
mov
xor
push
xor
sar
cmc
add
inc
cmp
pushf
pushf
cmp
cwde
push
and
call
cld
lods
out
dec
repz
test
movsx
(bad)
cmp
lods
sbb
mov
and
out
sar
lock
retf
mov
lahf
cmps
fs
das
mov
ss
div
pop
and
aam
mov
std
jp
dec
vpermilps
push
retf
ds
iret
rcr
into
mov
cmps
inc
shl
xchg
dec
add
push
pop
inc
lea
nop
xor
sbb
popa
popf
loopne
ret
addr16
shr
movs
sub
cld
add
add
pop
loop
ja
cmp
xchg
push
loope
(bad)
ror
call
dec
xor
cmps
mov
push
out
outs
lahf
or
lods
loopne
cwde
test
pop
xchg
sahf
arpl
xor
sbb
xchg
icebp
mov
push
cdq
(bad)
retf
jnp
fcmove
lods
mov
mov
xchg
test
xchg
test
loop
xor
push
outs
add
mov
sbb
mov
ins
xor
iret
fidivr
sub
jae
imul
enter
mov
mov
lgs
into
mov
push
inc
repz
(bad)
cmp
dec
imul
test
call
cmp
out
xchg
adc
stos
fadd
sub
xor
dec
in
jge
das
and
rcr
xor
(bad)
dec
shl
call
mov
xchg
rol
or
bound
out
cmp
nop
ins
push
dec
stos
mov
stos
xchg
out
sbb
adc
lahf
ja
ror
loopne
xor
pushf
enter
or
sbb
or
nop
scas
cdq
dec
int3
nop
aad
xchg
and
cmps
stos
sub
lods
popf
mov
movs
jne
cld
sbb
adc
imul
and
inc
adc
call
adc
dec
sub
stc
scas
ss
sbb
push
adc
stc
(bad)
xchg
push
jl
add
call
mov
cli
aas
mov
pusha
into
mov
mov
cmp
pop
or
lds
dec
adc
enter
xor
aas
fiadd
in
add
push
fs
sbb
shr
cli
and
dec
jnp
mov
addr16
arpl
adc
cld
xchg
xor
add
(bad)
mov
ret
cmps
dec
dec
dec
clc
mov
call
mov
and
pop
mov
xchg
jge
cmp
push
mov
mov
stos
lahf
retf
int
inc
pop
shl
outs
call
mov
sbb
sub
fild
(bad)
dec
enter
sar
dec
xchg
data16
sahf
mov
push
mov
dec
enter
sub
inc
or
cmp
leave
sbb
jae
retf
jne
add
push
pop
mov
fdivr
rcr
repz
int
xchg
in
add
lods
jl
in
cmc
lods
lods
jno
das
jae
sub
fisttp
inc
lock
jmp
iret
jle
pop
stos
xchg
or
cmps
imul
sbb
mov
cmps
stos
push
mov
mov
push
call
scas
rcr
daa
popf
push
movs
movs
mov
leave
imul
sbb
mov
fst
cmp
push
imul
cmp
mov
xchg
int
xchg
jns
test
push
mov
sub
xchg
das
loope
and
pop
dec
sbb
out
xchg
popf
das
push
stos
push
push
arpl
inc
jmp
lods
pop
scas
outs
inc
jmp
mov
movs
mov
gs
ins
fidiv
loope
jmp
mov
pminub
pop
dec
fmul
(bad)
movs
fimul
cwde
int
and
movs
sbb
jnp
popw
cmp
punpckhwd
(bad)
sbb
mov
idiv
cli
mov
push
movs
(bad)
push
xor
fsubr
push
push
ins
mov
int3
sub
pop
js
sbb
in
mov
cmp
loope
sbb
shl
inc
add
aam
aas
xlat
js
or
out
in
(bad)
stc
mov
int3
pushf
arpl
jno
push
ror
pusha
cld
arpl
xchg
es
mov
icebp
call
call
pop
test
sub
add
(bad)
lahf
cmps
xchg
ja
stos
les
push
mov
pop
xchg
test
or
fwait
mov
jmp
jno
mov
mov
loop
and
retf
add
arpl
jmp
popa
adc
add
push
adc
adc
push
mov
out
lods
lds
mov
xchg
neg
jb
add
jg
and
pop
fucom
sub
sbb
pop
mov
out
dec
jl
into
gs
xor
ins
jb
in
mov
movs
ror
sbb
fidivr
jae
jp
mov
test
push
iret
fist
cwde
fimul
daa
jmp
retf
mov
int
xchg
bound
call
xchg
and
sub
lock
xchg
and
inc
les
stc
mov
mov
mov
pop
cmc
cmp
xor
pop
lods
mov
xor
fiadd
mov
mov
xor
add
cmp
imul
femms
mov
push
cli
test
pop
(bad)
cmp
dec
in
inc
cmp
out
int
mov
xor
add
inc
pop
lea
inc
xor
push
outs
bound
inc
jno
test
iret
xor
in
stos
mov
xchg
fwait
jns
cmp
sbb
div
or
xchg
cmps
xchg
adc
call
mov
inc
inc
cmp
lahf
push
js
fiadd
cmps
cmp
and
adc
ret
pop
and
sub
sbb
jmp
mov
inc
cmp
hlt
push
sub
and
jnp
mov
pop
fstp
mov
ja
stos
cmp
mov
cmp
cli
inc
push
enter
lock
mov
packuswb
mov
ins
push
or
push
xor
bound
jge
jb
cmp
aad
xchg
shl
popa
out
push
jecxz
xchg
movs
bound
sbb
shr
inc
sti
mov
ds
std
les
in
inc
sub
cs
inc
xchg
or
stc
js
retf
clc
mov
call
jmp
pop
jge
mov
aaa
xchg
js
repz
aas
daa
adc
sahf
clc
rcr
inc
mov
push
sbb
pop
les
mov
sbb
push
cmp
mov
push
adc
sbb
mov
push
shr
int3
rcl
daa
add
xor
int3
dec
fs
(bad)
adc
mov
pop
sub
xor
jae
sbb
sub
push
dec
cwde
xchg
ret
loopne
push
jg
and
inc
(bad)
sti
and
cmc
jp
into
mov
lods
fidivr
xor
mov
and
test
fs
add
movs
add
mov
imul
loopne
ret
std
inc
cmp
ret
retf
sbb
ss
fcomp
(bad)
add
ret
sbb
dec
mov
es
and
cmovo
sbb
test
(bad)
ret
ins
pop
push
es
gs
(bad)
fcom
jge
add
pop
mov
jg
call
sbb
sbb
ss
daa
mov
je
mov
sub
inc
push
push
test
(bad)
lock
mov
nop
add
cdq
cmp
cmp
sar
imul
(bad)
cmp
sbb
cmp
mov
sti
in
mov
push
adc
pop
(bad)
aaa
nop
psllw
mov
aam
(bad)
pop
or
call
mov
iret
out
cld
and
pop
mov
sar
ins
stos
mov
xchg
fwait
mov
and
adc
cmp
xchg
or
push
add
xor
popa
sub
pusha
inc
sti
or
jl
repz
(bad)
fcmovnbe
sahf
test
push
out
stos
lods
sbb
out
mov
ds
hlt
ret
rcr
mov
push
pop
pop
push
ss
mov
inc
add
mov
or
leave
adc
cmc
inc
sub
fs
retf
fist
sub
lock
add
mov
jne
mov
mov
(bad)
ffree
std
xchg
add
imul
adc
test
popa
ins
inc
out
shl
aaa
nop
test
inc
in
pop
mov
jno
mov
xlat
mov
adc
dec
xchg
sub
push
cmc
and
mov
add
adc
sbb
test
xchg
clc
test
push
pop
mov
mov
pop
(bad)
lahf
xor
mov
ret
retf
mov
push
clc
jnp
fs
dec
dec
jmp
mov
cmp
push
push
repz
retf
cdq
mov
push
dec
cmp
arpl
ror
push
xor
ror
push
outs
push
sbb
leave
add
mov
out
xor
hlt
adc
cld
cmps
pop
jge
or
js
and
or
sahf
push
inc
sti
shl
cmp
cld
arpl
js
adc
into
stc
pop
sbb
jge
arpl
cmp
fsubr
ja
(bad)
cld
inc
mov
mov
std
cmp
into
xchg
xor
add
or
sbb
dec
fiadd
loope
mov
test
lahf
idiv
imul
daa
ds
push
stos
and
cmp
idiv
loop
push
push
and
retf
dec
sar
aad
xchg
(bad)
xlat
mov
(bad)
aam
clc
sar
repz
jno
(bad)
gs
xchg
repz
mov
pop
jns
je
retf
addr16
fs
fist
jne
js
mov
mov
stos
add
mov
jp
outs
fsubr
xor
push
push
retf
dec
push
and
hlt
loopne
lods
imul
in
sub
in
ds
clc
and
mov
fisub
faddp
into
jnp
fist
hlt
aam
pop
mov
add
fucomi
in
gs
pusha
popa
mov
out
xchg
and
mov
adc
dec
add
inc
push
and
leave
call
mov
sub
movs
jmp
jg
sbb
inc
pop
loopne
pop
cmp
dec
cmp
fisttp
rcl
in
push
inc
mov
push
in
and
loope
mov
sbb
test
icebp
push
(bad)
dec
popf
cli
add
or
repnz
jl
sbb
loope
dec
pop
push
mov
sub
mov
lods
sub
mov
movs
jo
cmp
inc
into
shr
sub
sbb
mov
into
mov
pushf
xchg
psubsb
dec
mov
push
mov
add
cli
test
inc
les
call
retf
arpl
inc
mov
lods
sahf
jmp
jmp
add
leave
jne
inc
cmp
sub
cli
popf
fs
(bad)
pop
mov
lahf
mov
jno
jnp
inc
cli
loop
fld
ds
fstp
push
ja
push
inc
and
test
icebp
fld
pop
xchg
jbe
dec
mov
add
repz
js
pop
xchg
test
pop
mov
cmc
inc
inc
(bad)
std
je
repnz
ins
leave
imul
sbb
cmps
add
xchg
mov
or
adc
jno
pushf
jo
and
cmp
dec
lods
lock
pop
call
ret
stos
jge
inc
sub
in
rcl
inc
jmp
sub
dec
rcl
mov
push
push
lods
mov
movs
mov
inc
popf
add
fsub
ret
mov
mov
xor
mov
sub
fs
popa
xchg
ficomp
cmp
js
out
sub
dec
and
dec
mov
cmp
mov
ror
dec
mov
mov
push
in
xor
mov
data16
imul
mov
add
test
push
mov
es
mov
adc
jae
inc
jle
clc
jecxz
add
fdiv
aaa
xor
fsubr
dec
(bad)
test
loope
xor
retf
sbb
loope
out
sub
movs
xchg
sub
add
mov
retf
push
push
xor
add
int3
(bad)
mov
dec
pop
xchg
mov
xor
in
mov
call
xlat
je
adc
dec
(bad)
mov
mov
sbb
xchg
(bad)
(bad)
jle
psrld
add
jp
push
loope
out
mov
push
in
imul
data16
lods
fistp
pop
ins
lods
pop
or
push
jge
in
and
pop
push
dec
mov
fidiv
sub
adc
les
test
adc
shl
aad
popf
sar
cmp
cmps
test
mov
(bad)
retf
push
js
push
test
mov
pop
test
mov
stc
xchg
dec
test
es
adc
ins
xchg
dec
or
xor
fisttp
cmp
xor
xchg
push
sti
lods
pop
dec
jmp
sbb
fsubr
cmps
push
and
js
adc
add
dec
mov
(bad)
add
and
mov
mov
mov
(bad)
push
repnz
out
add
in
sbb
test
xor
sub
mov
adc
loop
into
cmp
js
mov
push
mov
and
shl
popa
cmp
ins
mov
stc
js
jg
adc
movs
ins
cmp
mov
cmps
mov
ror
xchg
call
cmp
mov
inc
pop
cmp
push
jl
cmp
in
mov
mov
mov
iret
jno
jb
mov
push
lea
idiv
cmps
inc
cmp
xchg
jb
or
dec
lods
std
int
pop
ds
lock
cdq
pop
shl
or
or
cmp
mov
fild
inc
mov
cdq
sub
(bad)
popf
sub
sub
hlt
jg
dec
pop
or
(bad)
adc
jb
mov
cmp
adc
shl
das
cmp
in
scas
and
clc
sbb
outs
adc
arpl
xchg
mov
mov
aaa
and
cmp
fnsave
cmp
or
pop
in
adc
xchg
cmp
hlt
movs
icebp
ja
pop
sbb
xor
pop
jg
ins
xor
sub
test
xor
sub
push
fsub
and
sub
or
inc
les
mov
ds
jmp
or
leave
out
(bad)
imul
xor
sti
xchg
and
jnp
mov
and
pop
sbb
sub
push
and
and
xlat
inc
mov
test
push
popa
or
dec
sub
push
push
loop
inc
jbe
add
xchg
std
push
mov
cmp
shr
push
cmp
mov
out
cmps
adc
mov
hlt
lods
jmp
jae
pop
pop
pop
ret
mov
jae
pop
aad
imul
out
dec
pop
out
inc
push
xchg
and
sbb
(bad)
ret
icebp
inc
fdiv
cmp
leave
mov
xor
push
xchg
sub
int
loop
pushfw
inc
dec
add
cmp
push
sar
jbe
xchg
nop
into
lods
scas
pop
rcl
stos
jmp
retf
pop
add
cli
loopne
inc
out
jg
jae
sbb
loopne
jge
xchg
imul
shl
test
lea
mov
fsub
addr16
neg
xchg
mov
inc
or
jb
dec
jb
inc
adc
fwait
inc
mov
sub
push
loopne
ss
enter
into
sbb
sbb
(bad)
mov
jnp
out
mov
sub
lock
or
adc
xor
push
sub
js
sub
pop
mov
(bad)
out
lea
dec
push
inc
mov
iret
imul
add
dec
call
retf
out
adc
add
mov
inc
test
and
pop
sub
jge
scas
xor
cld
add
xor
push
cmp
jbe
out
pop
push
int
push
data16
out
dec
ins
cmp
adc
(bad)
das
out
fiadd
xor
inc
test
pop
iret
scas
lods
loopne
mov
or
dec
sbb
mov
mov
ins
pop
push
jb
scas
int3
or
push
mov
xor
je
sahf
lods
jp
and
push
cdq
sub
icebp
movs
push
mov
mov
loop
or
cli
mov
(bad)
push
or
ins
iret
movs
mov
and
ret
in
repnz
cwde
xor
inc
imul
xor
pop
cmc
iret
mov
clc
mov
ds
sbb
push
xor
das
stos
inc
int3
push
or
sub
sbb
xchg
aam
add
mov
push
sbb
cli
daa
dec
in
loop
mov
mov
mov
cli
mov
inc
clc
push
sub
xor
jg
(bad)
sbb
jb
pop
sbb
(bad)
or
mov
xor
add
dec
jo
pop
adc
and
xchg
daa
call
movs
mov
adc
xchg
(bad)
repz
mov
lock
sub
jmp
test
test
cwde
and
mov
outs
sbb
repz
in
leave
adc
dec
iret
(bad)
dec
call
pop
add
xchg
cld
ret
shl
push
push
push
lods
enter
push
mov
jp
cmp
mov
ss
test
push
xchg
or
shl
(bad)
outs
or
xchg
jo
ret
sbb
and
push
stos
sahf
sbb
bound
arpl
xchg
movs
pop
dec
adc
and
mov
not
or
jne
push
out
call
enter
outs
mov
aas
and
lods
loope
in
in
mov
or
hlt
pop
adc
mov
and
in
cmps
push
loop
fldl2t
int3
mov
gs
aas
stc
xchg
loopne
arpl
shl
jb
out
loopne
mov
leave
mov
int3
daa
mov
pop
sbb
cmp
pop
stos
jg
shl
fcmovne
and
mov
outs
cmp
push
xor
lods
ret
pop
dec
cmp
adc
outs
in
mov
mov
jns
jno
je
xchg
mov
cmp
xor
sub
mov
mov
push
xchg
dec
pop
outs
call
(bad)
jp
cwde
out
add
xchg
iret
test
into
(bad)
mov
add
mov
push
mov
inc
pop
jecxz
mov
cmp
es
mov
sbb
xchg
sub
mov
lahf
fstp
rol
dec
or
mov
and
mov
adc
mov
sub
iret
mov
lods
sbb
inc
cmp
pop
jmp
xchg
push
and
jl
mov
mov
test
fcomp
xchg
fwait
push
mov
retf
jns
fmul
and
arpl
mov
leave
test
ss
or
rcr
jns
aam
adc
sahf
loopne
shl
imul
jmp
push
repnz
or
test
dec
gs
int
sahf
jl
push
fcomp
test
maxps
push
ret
packssdw
movs
push
sub
jp
sub
aad
pop
iret
adc
dec
mov
mov
cmp
or
push
test
mov
cmp
cmp
(bad)
cmps
push
mov
mov
inc
cwde
mov
cmp
cwde
and
into
jnp
test
xchg
sub
fld
inc
xchg
adc
sbb
push
xor
jp
push
fcmovbe
pop
cmps
clc
push
dec
movs
lods
es
nop
fs
ficom
scas
jmp
sub
(bad)
retf
add
push
ds
xchg
pop
sahf
shl
mov
pushf
and
ss
addr16
js
cmp
fadd
out
fcmovu
xchg
leave
movs
cwde
test
scas
jle
or
adc
sbb
div
push
fnstcw
mov
cmps
xor
xchg
push
jnp
mov
xchg
movs
inc
fwait
mov
xchg
dec
xchg
mov
test
xchg
pop
jo
loop
push
js
sbb
xchg
jo
(bad)
mov
mov
add
xchg
(bad)
nop
xchg
dec
sbb
loope
sub
dec
or
ds
or
retf
(bad)
pop
mov
mov
sub
(bad)
lods
hlt
fild
sbb
fwait
clc
in
push
xor
push
outs
test
or
scas
(bad)
mov
fwait
sub
daa
fadd
(bad)
or
jo
inc
or
pop
dec
das
aam
leave
ins
rcr
mov
mov
mov
sbb
ss
stos
hlt
push
shl
outs
sti
mov
xor
mov
pop
sbb
iret
mov
mov
ret
adc
dec
scas
push
xor
ins
push
std
and
js
mov
jle
std
xchg
add
mov
in
add
scas
sub
jbe
dec
pushf
mov
pop
dec
bound
ret
push
mov
fimul
movs
push
scas
dec
ficom
mov
xor
adc
inc
dec
pop
pop
mov
ror
loope
pop
jg
or
fs
pop
(bad)
shl
enter
data16
out
in
test
push
bswap
pop
mov
mov
jg
das
jae
ret
xor
ins
retf
sbb
js
xor
sbb
xlat
jbe
xor
or
and
adc
cmps
jmp
popf
rol
adc
push
and
or
xor
sub
int
cmps
push
push
pop
xchg
sub
test
mov
adc
sbb
lock
icebp
fist
xor
ret
cmp
ja
or
test
mov
mov
add
push
out
cmp
cmp
mov
xor
push
add
or
push
pushf
add
sbb
sub
xor
retf
add
lods
les
pop
push
das
xchg
mov
sbb
mov
(bad)
cmc
jmp
sbb
cld
mov
mov
xchg
jmp
ret
lods
cmp
mov
xchg
mov
push
scas
sbb
inc
lods
aam
fwait
jmp
push
stos
mov
clc
mov
cli
leave
push
ins
imul
or
xchg
jl
pop
sbb
sub
push
fs
fwait
sub
pop
pop
sahf
dec
mov
push
pop
jo
xor
es
aam
xchg
jmp
mov
add
(bad)
stos
loopne
mov
movs
shl
mov
pop
adc
inc
dec
cmp
dec
pop
xor
popf
jmp
dec
out
in
mov
mov
inc
out
push
and
mov
nop
xchg
pop
mov
mov
mov
gs
gs
pop
aaa
in
je
out
cdq
xchg
scas
sbb
imul
cmps
xor
jle
xor
jmp
(bad)
cmp
int3
inc
iret
add
mov
gs
inc
lods
mov
xchg
cld
pop
jno
pop
mov
stc
pop
mov
ds
adc
ret
sbb
sbb
(bad)
and
in
xor
adc
mov
movs
mov
popf
in
xlat
fidiv
jl
bound
pop
call
das
stos
xor
cmp
inc
push
mov
push
push
(bad)
adc
pop
fbstp
cmp
call
push
ds
scas
xlat
ficomp
xchg
and
in
and
sbb
mov
sub
aad
mov
or
mov
test
(bad)
mov
shl
rcl
push
pop
mov
(bad)
rol
pop
push
or
cmp
fs
xchg
loope
test
mov
fxch
cwde
xor
sbb
lds
pop
jmp
ror
pop
addr16
mov
int3
inc
mov
not
jnp
fadd
push
mov
arpl
dec
pop
cmp
shl
sub
xor
dec
push
fadd
mov
std
sub
lahf
out
mov
aad
and
sti
sub
push
iret
pop
in
lahf
test
repz
fwait
shl
push
in
sbb
icebp
nop
fidiv
stos
hlt
scas
xor
in
sti
neg
(bad)
mov
xchg
loopne
push
or
push
or
pusha
and
sbb
into
std
push
ins
xor
aaa
pop
and
test
adc
push
mov
ja
xchg
std
and
loopne
leave
test
mov
sbb
sar
and
movs
jecxz
xor
popf
mov
es
add
add
push
xchg
adc
std
lods
xor
jmp
push
and
adc
iret
(bad)
sub
mov
add
aad
dec
mov
sahf
push
or
pop
fwait
push
pop
inc
add
fist
mov
jl
adc
xchg
rcr
mov
dec
int3
jae
pusha
dec
jp
push
xor
pop
aas
mov
mov
and
ficomp
loopne
xor
retf
ret
stc
lock
adc
mov
clc
fiadd
dec
cld
push
push
adc
xchg
fiadd
jae
jo
cmc
shr
call
fsub
pop
sbb
add
cmp
shl
(bad)
xchg
nop
iret
xchg
fimul
mov
sub
outs
inc
icebp
mov
dec
enter
popa
cmp
mov
cmp
arpl
or
or
push
add
jns
dec
es
(bad)
dec
mov
mov
cmp
loopne
push
mov
dec
cmc
jg
jge
cmp
inc
jne
xchg
jo
xor
not
vpmacssdqh
or
fist
aas
xchg
nop
retf
mov
xchg
loopne
mov
or
push
mov
lds
cwde
retf
jb
push
fdivr
(bad)
std
or
out
in
push
pop
fisubr
add
mov
stc
sub
jbe
adc
cs
cmp
pop
dec
mov
ja
addr16
adc
ret
xchg
xchg
cmp
test
adc
ror
push
mov
aaa
rcl
hlt
bound
retf
add
mov
jne
sbb
std
inc
icebp
in
jecxz
xor
and
xor
fldcw
out
clc
ret
(bad)
int3
aad
xor
mov
stos
xor
cmc
in
pop
jmp
(bad)
scas
lods
pop
aaa
mov
xor
scas
aas
or
jae
ss
jmp
jne
sub
jne
push
sbb
scas
ds
gs
mov
fcmovbe
mov
jmp
mov
jg
lods
sahf
aad
pusha
cmp
and
imul
fmulp
add
cmps
jo
jne
push
popa
sub
and
pop
gs
call
mov
clc
into
push
clc
cs
mov
data16
mov
retf
lods
mov
cld
or
scas
or
fsub
jmp
cs
movs
and
inc
mov
std
mov
out
fild
jmp
ins
push
xor
xchg
mov
sar
fisub
mov
(bad)
sub
xor
cmp
mov
dec
or
add
aad
out
or
or
adc
cdq
test
das
dec
iret
(bad)
test
cmp
out
and
add
sub
mov
shr
cmp
xchg
out
rcr
iret
xchg
cmc
data16
repnz
push
adc
dec
stc
ror
clc
pop
jae
inc
imul
xchg
mov
shr
loope
mov
in
stos
jmp
cdq
or
pop
mov
push
jp
xchg
lods
ret
add
inc
cld
push
repnz
and
pusha
sbb
push
das
and
jge
mov
(bad)
sub
push
mov
xchg
pop
sub
sbb
or
push
jmp
cmp
dec
clc
mov
xor
and
mov
cmp
out
add
sti
xchg
aad
int3
mov
icebp
out
sbb
inc
jmp
test
add
jae
push
cmpxchg
aaa
sub
adc
dec
push
jne
pop
fisttp
hlt
shl
ror
dec
add
fisttp
fwait
push
xchg
xlat
add
jmp
push
xchg
xchg
pop
pop
mov
in
jmp
cmp
inc
je
xor
adc
arpl
jae
rcr
aam
xchg
mov
out
jns
sub
inc
adc
mov
mov
mov
gs
jb
cmp
div
mov
pop
push
shl
xor
cdq
xchg
jb
cmp
test
pop
or
mov
push
jmp
adc
ret
jne
or
cld
mov
dec
lock
adc
jmp
aam
fimul
jo
outs
sbb
push
out
mov
mov
adc
pop
ja
pop
push
not
mov
mov
cmp
or
add
movs
pop
push
out
popf
test
pusha
fs
mov
xlat
(bad)
jnp
mov
jp
bound
cmp
(bad)
cmp
iret
pusha
sbb
jae
sbb
inc
test
(bad)
loop
cmps
mov
and
in
out
mov
push
and
addr16
push
stc
sti
cmp
outs
test
addr16
pop
ds
cdq
into
in
xor
xor
outs
inc
pop
mov
scas
mov
push
imul
push
adc
inc
aas
imul
es
retf
(bad)
jmp
add
push
jge
arpl
repnz
das
add
ss
jmp
sbb
xor
loopne
and
pop
jg
repnz
xchg
in
pop
test
push
lds
repnz
arpl
arpl
enter
aaa
repz
(bad)
not
inc
daa
sbb
in
aas
pop
push
aam
add
call
jb
fwait
mov
jle
rol
sub
and
push
clc
and
xor
sti
fdiv
bound
sbb
pop
adc
shl
mov
or
mov
das
sbb
jnp
test
jl
out
outs
pop
inc
xor
ss
pop
rol
adc
les
adc
imul
js
inc
mov
cmp
sub
imul
adc
pop
arpl
xor
inc
xor
mov
pop
add
cmp
enter
cld
ins
push
sbb
scas
jne
add
sbb
nop
fs
and
xchg
xchg
push
test
mov
les
xor
mul
jmp
in
sti
xlat
mov
xor
loope
std
aaa
fcmovnu
xor
push
pop
mov
bound
out
dec
rol
fwait
xor
jmp
(bad)
pusha
ret
mov
jmp
fs
add
cmp
and
test
xchg
jp
call
imul
pop
adc
inc
(bad)
imul
loopne
mov
daa
adc
dec
fcom
shl
mov
xlat
xor
pop
xchg
js
xor
outs
mov
retf
les
leave
mov
out
shr
outs
adc
rcr
loopne
not
xchg
xor
pop
call
mov
mov
sbb
shl
and
fiadd
add
adc
mov
movs
ins
fisubr
call
sub
sbb
aam
scas
inc
push
sub
movs
mov
(bad)
repnz
adc
and
movs
(bad)
repnz
dec
xchg
loopne
pusha
mov
xchg
inc
leave
dec
jmp
and
mov
mov
gs
mov
fisttp
fcom
lods
frstor
sub
xchg
push
xchg
(bad)
shl
pushf
pop
imul
je
test
xchg
mov
jno
ss
inc
fs
inc
adc
adc
hlt
das
rcl
ss
ror
lods
aad
fisttp
call
cld
fsub
mov
cmp
bound
shl
test
fdivr
jns
jecxz
inc
cmc
and
dec
jbe
fdivp
mov
xchg
ror
xchg
mov
ret
(bad)
popa
mov
sub
sbb
jge
dec
clc
call
aaa
movs
stos
sub
aad
jle
aas
inc
ja
jp
xchg
mov
ins
sbb
xor
adc
stos
ds
cmp
repz
loope
push
and
cmps
sbb
cwde
lods
and
push
fld
sub
enter
push
push
xchg
xchg
mov
push
xor
retf
adc
dec
jae
mov
fstp
cmp
fild
call
das
sub
pop
xchg
data16
cmp
xor
fadd
stos
inc
in
jns
adc
pusha
xor
into
mov
jo
arpl
pop
push
cs
nop
mov
in
jecxz
xor
pop
in
pop
pop
or
mov
shl
jge
add
shr
or
push
jns
lods
pop
pop
les
lock
arpl
mov
cmp
ins
(bad)
cli
push
pusha
mov
retf
cmps
mov
jl
gs
in
jl
pop
ret
jae
popa
mov
jbe
jno
cwde
sub
xor
pop
sets
gs
sahf
cmp
xor
inc
push
push
jmp
out
push
test
rcr
mov
lea
ss
lea
into
mov
add
and
push
cmp
inc
xlat
test
dec
and
pop
ds
mov
(bad)
fwait
pop
stos
dec
jne
ins
retf
cwde
pop
xchg
cmp
bound
xchg
in
adc
inc
mov
jp
sub
(bad)
push
push
stos
xchg
adc
add
fld
hlt
loop
ret
add
sub
mov
sub
cli
test
and
mov
lods
fcomp
pop
sahf
xchg
dec
test
dec
ins
cli
lock
ror
jo
fdivrp
cmp
in
jmp
xor
push
(bad)
xacquire
or
or
inc
loop
or
inc
cld
xor
jge
xchg
push
(bad)
fcomp
dec
pop
aad
in
ja
adc
rol
sbb
mov
or
mov
and
lods
push
out
aaa
xor
mov
lds
dec
mov
or
xchg
retf
adc
stos
push
ret
pop
arpl
jb
push
jb
mov
xchg
sar
cmps
ret
in
(bad)
test
cmp
out
mov
and
xchg
gs
mov
shl
jmp
cs
rdtsc
mov
xchg
inc
jl
mov
mov
mov
in
push
xchg
loop
add
pop
leave
sti
mov
mov
or
xchg
mov
stos
sub
inc
sahf
aas
pop
lahf
sub
push
cmp
add
scas
cs
inc
pop
mov
xchg
add
cwde
sub
call
dec
mov
jecxz
push
mov
int
dec
pop
rcl
add
sbb
dec
movs
xchg
push
mov
mov
jbe
adc
scas
(bad)
xchg
fs
addr16
lock
shr
call
mov
jno
mov
nop
cmp
pop
cld
dec
cmp
add
js
dec
dec
js
fdivrp
call
or
das
push
mov
mov
enter
in
mov
mov
inc
pop
jmp
push
ja
add
data16
add
js
adc
or
(bad)
jecxz
xor
mov
test
pushf
or
lods
dec
xchg
pusha
xchg
mov
sahf
gs
push
inc
bound
jns
gs
jo
ins
mov
dec
hlt
loopne
adc
aaa
mov
pusha
data16
aaa
fbstp
push
repz
inc
clc
movs
outs
in
sub
sahf
sti
xchg
or
mov
xor
pushf
jmp
int3
jge
push
pop
cli
test
fs
lahf
in
jns
imul
call
and
xchg
fisub
jmp
retf
or
pusha
stos
or
arpl
adc
inc
ja
cld
es
push
xlat
mov
mov
mov
nop
push
clc
mov
leave
add
cli
add
sbb
xchg
scas
dec
cld
test
cmc
xchg
das
lods
in
or
xchg
xchg
bnd
stos
call
data16
dec
popa
sub
pop
and
mov
fstp
in
fild
inc
aad
lods
inc
es
pop
or
mov
(bad)
cwde
cld
mov
xchg
cmovp
jge
sbb
mov
mov
mov
(bad)
mov
psubusb
inc
scas
adc
leave
icebp
cmp
lods
adc
lods
in
popa
xor
shl
ficom
pop
gs
cmp
ds
ins
and
mov
mov
push
push
pop
pusha
dec
int3
stos
stos
mov
adc
mov
jmp
or
jno
sbb
add
xchg
imul
iret
movs
mov
hlt
sub
mov
test
sub
push
jmp
rol
mov
xchg
mov
mov
test
mov
shl
cwde
jecxz
xor
repz
mov
jmp
paddb
mov
ins
mov
stos
sar
jmp
push
jecxz
mov
pop
mov
or
adc
fsub
test
sahf
les
lods
or
mov
repnz
ja
clc
(bad)
xor
jecxz
dec
cmps
sbb
sbb
pop
loope
imul
hlt
aas
dec
lahf
fmul
mov
jo
jmp
loop
pop
fisubr
mov
arpl
pop
adc
push
cmp
adc
and
out
setl
fwait
out
call
ja
shl
dec
adc
push
scas
lods
(bad)
and
xlat
test
mov
or
fnsave
mov
add
jnp
retf
mov
movs
in
add
adc
(bad)
les
pusha
repnz
jmp
push
cmc
imul
dec
jp
push
out
test
push
lods
retf
fld
xor
pop
or
and
cmp
aam
sub
inc
xchg
(bad)
xchg
and
pop
push
outs
mov
pop
jnp
jp
mov
add
(bad)
ffreep
mov
sbb
inc
nop
mov
xchg
jecxz
int
cmps
mov
push
(bad)
dec
pop
mov
mov
cmps
push
mov
mov
and
out
in
rcr
push
xchg
ret
push
xchg
(bad)
xlat
adc
mov
(bad)
mov
fucomi
stc
test
retf
aad
jmp
push
lock
int3
dec
shl
das
in
(bad)
mov
fwait
outs
or
dec
mov
(bad)
cmc
repz
(bad)
cmps
int3
jns
push
inc
mov
scas
inc
movs
test
fldcw
adc
daa
inc
sbb
in
test
sub
dec
sti
jae
les
bound
mov
sbb
bound
xchg
mov
cld
mov
cmp
inc
loope
(bad)
pop
enter
mov
xor
pop
adc
push
nop
sub
mov
div
mov
dec
pop
es
jns
mov
fisub
sahf
aam
cmps
mov
test
fild
out
cmp
xchg
cwde
inc
mov
sub
jmp
or
rcr
mov
cmp
in
imul
adc
xchg
and
cld
in
aaa
neg
fnsave
bound
leave
inc
dec
sbb
add
or
je
cmp
daa
cmp
lods
push
bound
ds
ror
(bad)
aas
int
mov
ret
lea
jp
dec
mov
bound
sbb
cmps
pop
cmp
pop
mov
idiv
push
mov
fistp
mov
pop
in
hlt
icebp
sub
sbb
out
fwait
retf
js
add
pop
sbb
xchg
xchg
push
shl
scas
adc
or
fisttp
(bad)
cmp
cmps
je
dec
loopne
loopne
(bad)
int
scas
add
push
arpl
bound
inc
sbb
enter
mov
outs
fwait
mov
rol
jp
cmp
push
mov
inc
sub
push
pop
inc
sti
or
cli
stos
out
mov
setle
ret
sub
retf
add
add
mov
xchg
jb
imul
mov
sub
cmp
push
fadd
adc
sbb
pusha
addr16
inc
loopne
in
cdq
std
xchg
daa
add
and
jb
fidivr
dec
xchg
xchg
gs
scas
rcl
xchg
push
fisubr
jg
add
cmp
repnz
cmp
shl
inc
popf
xchg
add
inc
jo
or
test
sbb
iret
aas
or
adc
mov
sub
push
push
stc
jmp
adc
add
sbb
mov
test
cmc
push
mov
fstp
jle
fisttp
inc
xor
xchg
mov
loop
sub
les
and
out
sbb
stos
mov
pop
jecxz
lock
push
add
fst
dec
hlt
add
je
popa
loope
hlt
stc
cmp
cli
stos
jne
jbe
daa
inc
cmp
sbb
sbb
call
out
or
push
pop
es
enter
pop
or
fld
nop
in
jmp
push
gs
gs
movups
nop
ror
repnz
fxch
push
jo
xchg
or
pop
and
add
push
mov
pusha
push
push
pop
sub
lds
retf
ret
push
cmp
xchg
or
cmps
ret
mov
daa
fst
mov
add
test
inc
xor
ret
cmps
es
call
sbb
push
ror
sbb
stos
mov
dec
out
add
data16
inc
mov
push
ds
sti
mov
pop
outs
jno
xor
mov
inc
mov
not
pushf
outs
mov
rcl
adc
mov
xchg
jb
cli
mov
and
fwait
adc
adc
adc
jl
(bad)
icebp
pushf
(bad)
xchg
inc
sar
cmp
adc
pop
enter
cmp
out
mov
aam
out
lods
inc
icebp
xchg
pushf
dec
lahf
jo
mov
push
or
daa
xor
lea
adc
(bad)
add
loope
lock
arpl
bound
pop
mov
(bad)
push
fbld
sub
ret
retf
adc
mov
loope
(bad)
std
mov
loope
jmp
dec
cmp
test
sub
cli
ror
dec
ins
test
scas
xchg
fidiv
(bad)
stos
hlt
test
dec
jno
sbb
cmps
ss
or
es
sub
das
stc
loopne
push
enter
mov
rol
pop
retf
stos
or
lods
sub
jne
jl
jg
je
cmp
push
out
shl
mov
mov
call
pusha
out
cmp
ret
cld
fcomp
and
push
popf
mov
push
rol
popa
pushf
xor
and
aas
mov
cmp
xchg
mov
xor
lahf
dec
mov
dec
mov
adc
ficomp
pop
jns
cmp
mov
and
ret
jb
dec
pushf
(bad)
pop
or
sahf
das
pop
fsubr
std
or
sbb
jp
inc
call
movs
jle
mov
jmp
loope
and
jno
xchg
jmp
daa
fldenv
jmp
(bad)
call
push
jns
inc
mov
ficom
cmc
jg
into
pop
lods
or
add
add
cmp
and
stc
sub
add
pop
pop
xor
loopne
xor
adc
push
push
push
mov
add
jg
or
or
mov
sahf
je
pop
faddp
sbb
fild
bound
pop
pop
jg
lea
push
and
(bad)
test
push
movs
loopne
mov
dec
loope
or
ins
add
jg
in
dec
mov
xlat
repnz
mov
add
push
test
or
jp
stos
lea
nop
out
cmp
dec
push
lahf
shl
stos
xchg
cmps
dec
lds
pop
and
(bad)
inc
sub
jo
jl
mov
inc
enter
adc
push
push
pop
inc
scas
cli
jae
cdq
inc
shl
sbb
push
rol
dec
dec
sub
jmp
sar
loopne
push
xor
ret
push
icebp
mov
out
ret
add
ret
arpl
dec
lds
mov
fist
popf
aaa
xchg
adc
cmp
lods
loopne
iret
xor
sub
in
aas
add
adc
inc
push
fcom
icebp
xor
mov
loop
jecxz
and
and
scas
cmp
push
add
pop
sub
or
lea
mov
(bad)
(bad)
cmp
sbb
in
cmps
ror
push
xchg
xchg
cmp
pop
mov
xchg
test
and
in
inc
je
mov
cmp
or
mov
mov
popa
pop
inc
aaa
xor
iret
jecxz
adc
mov
sub
test
rcr
adc
addr16
inc
pop
or
push
or
jnp
shl
jl
fldcw
out
xor
fnstcw
xchg
cmp
mov
add
jecxz
dec
mov
push
xchg
xchg
inc
xchg
in
mov
push
dec
shl
mov
enter
add
jo
or
xchg
jl
xchg
aas
sbb
and
adc
xchg
jnp
in
pop
cld
rcl
adc
movs
xor
mov
retf
div
fsubr
pusha
(bad)
inc
dec
xor
xchg
sbb
out
xchg
adc
mov
stos
sahf
mov
jge
dec
cdq
mov
ret
push
cs
add
lds
mov
mov
adc
inc
xor
xchg
dec
or
rcl
ja
pop
mov
pop
mov
js
sub
dec
aam
dec
scas
mov
dec
in
mov
push
push
enter
inc
stc
std
fidiv
or
call
sbb
cld
lahf
loop
(bad)
imul
cld
enter
sub
test
out
jb
shl
outs
add
cmc
jb
jmp
ja
adc
int
(bad)
push
mov
imul
add
aam
sbb
ror
inc
mov
aam
inc
and
leave
neg
int
call
shr
cmp
neg
sti
xchg
xor
out
pop
gs
ror
ret
cdq
int3
jge
jle
sbb
clc
xor
ror
jno
ror
in
mov
jmp
sub
(bad)
das
cmp
out
and
in
pop
retf
scas
mov
das
mov
xor
adc
xor
mov
call
jge
popa
sbb
xchg
ror
mov
bound
adc
mov
jecxz
inc
aad
mov
nop
push
cmps
mov
pop
je
dec
nop
mov
or
je
push
sub
retf
add
int
test
push
retf
push
shr
imul
call
mov
mov
test
outs
xor
fsubr
cmps
jnp
mov
xchg
or
imul
push
ja
push
xchg
mov
add
pop
bnd
stos
mov
sub
push
jb
sub
leave
or
inc
push
sbb
add
cmp
cmps
addr16
cld
push
dec
or
or
imul
frstor
ds
inc
jno
inc
xchg
adc
mov
sbb
push
ror
retf
cli
cwde
mov
cs
and
mov
jg
push
shr
inc
cmp
sbb
sub
adc
outs
and
cdq
(bad)
sub
push
cld
fisub
out
xchg
mov
mov
xor
int3
mov
outs
leave
sbb
mov
mov
sub
pop
xor
sub
mov
or
pop
pop
mov
inc
xor
cmp
out
pop
lock
mov
lock
cld
push
sub
and
imul
xchg
sbb
sahf
sub
inc
fidiv
adc
push
cmp
xor
imul
xor
xchg
ins
inc
ins
ds
jo
ins
fisttp
dec
fs
loop
shl
sub
adc
cmps
neg
sbb
js
aad
mov
push
mov
pop
jecxz
mov
in
aam
sub
dec
push
xor
adc
mov
or
call
not
fdiv
pop
xchg
xchg
pop
push
sbb
dec
add
aaa
bound
shl
pop
aaa
pop
push
sbb
xchg
jg
repnz
add
movs
loopne
sbb
jle
scas
or
adc
scas
push
into
dec
enter
outs
xchg
cdq
and
push
mov
jmp
sahf
fwait
out
mov
out
dec
and
lods
lfs
int3
xor
push
sbb
push
shr
fistp
aam
repnz
ds
mov
idiv
pop
(bad)
pop
jl
jae
mov
out
adc
aam
retf
test
cmp
sbb
rcr
data16
jle
add
cmp
pop
push
cmp
(bad)
sti
mov
mov
pop
cmps
movs
or
jae
inc
push
scas
dec
cmp
in
jle
(bad)
sub
cmp
(bad)
fs
aad
bound
dec
push
mov
scas
jmp
pop
adc
shr
push
cmp
stos
popa
stos
sbb
jne
ja
ficom
mov
add
leave
popa
iret
push
push
mov
out
jo
out
and
xchg
iret
lahf
rol
call
dec
(bad)
repz
test
je
mov
xchg
mov
cmp
push
stc
in
adc
dec
xor
movs
(bad)
ins
pop
mov
pop
mov
data16
rcr
in
out
imul
(bad)
out
arpl
rcr
ficomp
sti
mov
fstp
xchg
adc
ret
sbb
and
ins
mov
jl
retf
ficom
jmp
sbb
cmc
call
dec
cdq
mov
(bad)
mov
mov
jle
mov
outs
test
mov
add
imul
or
mov
cld
add
ss
sub
rol
adc
add
mov
sbb
sub
xor
mov
mov
mov
(bad)
shl
aaa
into
xor
jae
mov
iret
aad
inc
inc
sbb
retf
inc
das
mov
sti
mov
movs
and
pop
cmc
xchg
out
adc
retf
call
lds
mov
xor
shl
mov
sbb
and
dec
fwait
pop
pop
dec
xchg
mov
in
enter
push
les
dec
xchg
arpl
jl
adc
(bad)
lods
inc
neg
dec
daa
fs
pusha
inc
jmp
or
pop
out
inc
jp
mov
mov
icebp
pusha
std
call
jmp
rcr
pop
dec
lods
js
repnz
or
int3
addr16
mov
shl
fstp
mov
mov
cmps
pop
adc
mov
and
sbb
mov
add
xor
pop
std
push
test
sahf
inc
ficomp
mov
cmp
icebp
loope
dec
loopne
push
inc
cmps
mov
jge
jbe
call
jnp
push
adc
aaa
pop
out
pop
or
jne
cmp
std
push
and
jl
adc
out
inc
push
mov
inc
(bad)
mov
mov
fdiv
leave
lods
jge
xchg
or
push
sub
jg
jo
jge
sti
add
sbb
ds
sbb
stc
lds
imul
xchg
xor
(bad)
stos
adc
sub
sar
lods
add
test
jle
mov
push
retf
cmp
adc
jne
popa
stos
ror
mov
aad
xchg
call
and
sub
mov
cmp
fs
cmp
cwde
sub
dec
int
jns
cmp
and
shl
jae
adc
call
pop
xchg
mov
outs
mov
or
dec
dec
ret
adc
xchg
or
sar
push
sbb
pop
mov
mov
aad
lds
sub
das
cmp
into
xchg
enter
fisttp
push
aam
shr
scas
das
nop
mov
sub
lahf
test
sti
xor
nop
adc
icebp
xor
ret
sbb
pop
mov
push
fmul
test
inc
jns
lds
or
cmp
dec
push
cmp
mov
(bad)
test
fwait
enter
seto
mov
mov
fcomp
lahf
fbstp
sub
test
fcom
stos
add
iret
push
cmp
xchg
or
inc
loope
jbe
xacquire
xor
das
mov
inc
mov
mov
pop
leave
and
mov
ror
outs
addr16
mov
nop
pop
pop
xchg
popa
inc
out
jmp
mov
nop
jbe
jno
add
or
jle
cmps
jmp
in
dec
sbb
jnp
xlat
mov
aam
mov
movs
(bad)
jmp
addr16
pop
rcl
sahf
and
ret
inc
sbb
into
and
dec
test
mov
out
stc
ror
mov
out
mov
std
push
outs
xor
je
or
add
aas
aad
retf
push
call
rcr
dec
mov
add
cwde
sar
gs
mov
cmp
mov
imul
mov
test
aad
inc
enter
in
add
jno
ins
sub
jnp
cmp
and
sub
inc
lds
fisttp
fwait
retf
mov
cmp
stc
(bad)
pop
pop
inc
pop
adc
vpavgb
movs
sti
icebp
cli
std
mov
(bad)
mov
aaa
outs
add
daa
dec
adc
pop
pushf
out
pop
mov
daa
add
pop
dec
cmp
xchg
lock
not
cmp
add
mov
mov
xor
push
jo
xor
mov
pusha
retf
pop
sar
mov
sbb
mov
lods
adc
push
mov
fs
push
fisub
and
fdivr
mov
out
push
jae
cmps
into
icebp
and
dec
(bad)
leave
push
call
frstor
dec
js
sbb
cs
xor
nop
jmp
cli
retf
jge
in
aad
cmp
add
cmp
add
out
sbb
popa
pop
cdq
ret
and
lahf
rcl
jb
inc
lods
scas
gs
xor
pushf
add
mov
fnsave
repnz
movs
out
shl
mov
mov
das
xlat
rcr
jl
(bad)
xor
jne
ss
cmp
(bad)
cli
(bad)
mov
xchg
int
pop
cs
js
xchg
mov
in
loop
pop
arpl
fist
mov
aaa
call
xchg
call
push
pop
xor
test
jae
mov
imul
jge
sahf
faddp
xchg
sbb
dec
jbe
lahf
inc
scas
(bad)
pop
es
imul
loop
mov
xor
cmps
in
jbe
(bad)
pop
jmp
jp
mov
sub
imul
inc
xor
or
mov
and
cmp
add
lods
ins
cdq
adc
mov
test
sbb
mov
test
xor
daa
push
imul
fsubr
int
cmp
sub
aaa
jl
in
(bad)
pop
or
pop
(bad)
mov
add
aam
adc
pop
mov
mov
loop
fidivr
or
mov
and
inc
mov
pop
cld
loopne
pop
pop
popf
icebp
outs
out
jnp
cmps
(bad)
push
mov
ror
jecxz
adc
sub
xor
retf
iret
and
jmp
pop
add
or
popa
(bad)
popf
and
mov
icebp
and
sar
lahf
jp
push
cmp
mov
add
add
fdiv
(bad)
icebp
mov
jmp
or
mov
mov
xchg
jbe
jae
inc
mov
xor
ds
aad
sar
pop
clc
or
sti
cmp
mov
rcl
ins
je
push
cmc
(bad)
in
ret
mov
and
das
mov
adc
jg
mov
cdq
mov
jne
lods
repnz
add
movs
loop
cmp
mov
out
xor
cmc
push
cmps
xor
aad
cdq
std
mov
emms
mov
and
out
ficom
jl
stos
enter
aad
add
test
into
enter
sbb
jne
pusha
fimul
ret
sbb
push
fmul
jmp
stos
inc
mov
imul
cmp
xor
or
jbe
inc
jmp
xlat
sbb
imul
and
adc
call
xor
push
frstor
es
sahf
or
cmp
ror
cli
fld
mov
xchg
out
popa
sub
mov
mov
lods
test
mov
std
push
inc
push
aas
xchg
lods
clc
sub
sti
dec
sub
int
xor
jle
dec
cli
xchg
and
jmp
mov
and
or
lds
sub
das
out
nop
jns
retf
sbb
stos
xchg
sbb
jp
xor
div
mov
out
and
dec
in
addr16
mov
xchg
mov
xchg
jae
mov
scas
add
jno
enter
aad
mov
cmp
cmp
cmp
cmp
inc
loop
push
nop
lock
lahf
inc
(bad)
in
push
addr16
inc
mov
fcom
arpl
jnp
out
ins
add
inc
add
cmp
mov
fsubr
stc
repnz
out
pop
inc
fmul
jecxz
xor
shl
into
je
inc
fstp
cmp
dec
fstp
sar
cmp
ret
daa
mov
es
cmps
xlat
inc
int
retf
dec
inc
mov
push
cmp
outs
lds
call
pop
or
daa
mov
add
pop
rol
jp
inc
mov
bound
arpl
dec
cmps
or
dec
je
xchg
push
dec
jmp
sbb
jnp
adc
jmp
(bad)
aad
lds
xor
ja
or
ds
sub
shl
test
inc
mov
int3
dec
dec
inc
out
mov
outs
mov
fcom
ret
xor
dec
mov
cwde
std
jmp
xor
mov
and
cmp
cmp
sar
xchg
es
and
sti
mov
mov
je
test
add
dec
fisttp
test
push
mov
stc
push
out
mov
imul
stc
sub
add
cmp
pushf
add
pushf
ret
mov
ror
sbb
cld
loopne
out
enter
cld
adc
das
sbb
arpl
ss
sbb
mov
retf
mov
call
imul
pop
ds
mov
icebp
aas
cmp
sbb
jno
aad
add
mov
mov
ror
mov
icebp
lds
fnstsw
sbb
dec
xor
mov
in
mov
jns
dec
leave
jnp
shr
mov
lds
ret
pop
stos
dec
sbb
ss
ds
push
imul
inc
sar
sahf
jp
and
and
imul
push
scas
jecxz
rcl
es
add
rcl
movs
inc
inc
mov
pop
mov
fistp
add
out
pop
sbb
push
call
jne
inc
and
mov
sahf
dec
xchg
sub
push
ret
addr16
inc
adc
xor
out
mov
mov
jo
pop
jne
cmp
push
out
mov
push
out
sbb
jo
(bad)
(bad)
sub
sbb
fcmovb
out
xchg
clc
repz
dec
add
jne
and
mov
clc
cwde
dec
imul
in
inc
or
aam
lods
pop
int
adc
bound
xor
dec
adc
leave
int3
jno
sub
push
outs
dec
jmp
sub
inc
xor
neg
cs
fadd
push
js
(bad)
sbb
adc
not
stc
push
push
dec
cwde
mov
shl
jbe
packssdw
add
in
pop
fwait
movs
das
or
pop
or
cld
ins
ins
leave
pop
fst
imul
bound
out
and
jle
out
jmp
movs
push
in
cmp
add
and
push
bound
adc
imul
(bad)
sar
fwait
nop
sub
mov
pop
sub
inc
std
sub
xor
retf
repnz
gs
les
(bad)
stc
jl
pop
out
stos
pusha
imul
jecxz
(bad)
stc
sub
xchg
push
xchg
add
jp
dec
inc
jns
fwait
adc
lods
or
into
dec
out
not
imul
lahf
call
adc
loop
pop
das
push
xor
fwait
mov
scas
jo
dec
and
fst
jnp
jnp
rep
clc
(bad)
jns
mov
ficom
mov
dec
mov
mov
pop
or
pop
sub
jmp
jle
out
pushf
jle
dec
test
and
xchg
out
or
xlat
mov
(bad)
lds
mov
push
adc
inc
sahf
aas
sub
jle
test
mov
sub
add
cmp
jmp
dec
test
xor
fst
sub
xor
movs
and
scas
lods
ret
jmp
jbe
push
popf
lods
xchg
fwait
adc
mov
dec
std
mov
cld
stos
movs
enter
sub
or
shl
jmp
test
test
lea
lods
fstp
mov
aad
adc
mov
mov
fst
pop
inc
adc
je
pop
fscale
sub
xor
cmc
sbb
lea
dec
add
mov
not
mov
cmp
scas
cli
(bad)
ins
mov
rcl
enter
repnz
lods
cmp
add
push
sub
mov
(bad)
or
ret
(bad)
mov
jno
xchg
fnstsw
mov
jge
pusha
jae
fs
out
jmp
outs
retf
aas
pop
jl
push
inc
imul
sti
stc
ret
cmp
imul
loopne
inc
movs
xchg
mov
movs
adc
fbstp
mov
mov
fdivr
iret
push
(bad)
fist
cmp
jnp
(bad)
in
aas
dec
rol
mov
sbb
push
loopne
call
sbb
xchg
pop
or
shr
cmp
stos
ror
mov
mov
repz
fisub
stos
mov
inc
jmp
add
test
mov
popf
jmp
aas
mov
and
xor
pop
adc
lahf
inc
jns
(bad)
out
push
mov
cli
mov
mov
push
mul
push
int3
inc
cmpxchg
sbb
sbb
stos
mov
sbb
idiv
scas
or
push
mov
pop
add
nop
in
xchg
out
adc
ret
out
push
mov
mov
stos
inc
add
and
mov
in
clc
and
(bad)
cwde
lods
test
call
pop
xchg
fucom
mov
sub
jp
mov
sub
cmp
sahf
(bad)
fdivr
outs
dec
push
mov
dec
in
jg
mov
sub
inc
stos
mov
inc
xor
test
outs
ret
jnp
or
lds
call
(bad)
out
rol
adc
sbb
cmp
inc
inc
sti
and
mov
test
in
sar
cs
cmp
mov
sti
cmp
xchg
inc
shr
or
iret
pop
cli
pop
mov
mov
xor
add
inc
(bad)
xlat
movs
ss
std
mul
cmc
push
xor
fcmovnbe
jmp
sti
pop
adc
mov
sahf
pop
push
mov
jecxz
out
mov
dec
mov
lods
adc
inc
pop
dec
mov
jnp
imul
aam
cli
ret
xchg
imul
int
clc
cmp
enter
mov
cld
mov
add
frstor
push
pop
iret
add
push
aaa
arpl
jno
out
inc
fcmovnu
mov
add
mov
ins
adc
xlat
xchg
pop
arpl
xor
aas
dec
shl
call
jae
jmp
jle
mov
inc
mov
push
fcom
dec
mov
mov
and
sbb
mov
cmp
sub
jg
pop
icebp
das
addr16
push
ret
test
pop
ret
les
or
jne
xlat
fcmovnbe
push
mov
inc
xor
xor
stos
cli
daa
and
jp
hlt
and
push
xor
add
sbb
cmc
or
jp
xor
mov
int
ror
cli
bnd
outs
cmp
sbb
jge
jge
or
in
test
addr16
pusha
movs
jg
mov
adc
repz
mov
cs
rol
jae
xor
fxch
sub
adc
loope
xor
sub
pop
sahf
(bad)
adc
adc
pusha
jns
fdivr
in
xchg
jg
push
fwait
cli
push
and
push
call
fld
in
jb
and
adc
shl
mov
pop
aaa
retf
xor
bnd
into
cmps
jp
adc
das
retf
mov
add
ins
daa
aad
add
sub
(bad)
push
movs
out
gs
push
lahf
mov
pop
xor
push
lods
das
dec
cli
pop
sub
sub
repnz
inc
(bad)
out
dec
inc
xchg
or
mov
test
or
mov
in
jmp
bound
out
and
scas
jle
jbe
int
xchg
fmul
hlt
mov
sub
les
cs
dec
in
fadd
lods
int
and
xor
ins
je
popf
dec
in
xchg
gs
dec
cmp
mov
inc
out
jnp
dec
in
pop
or
pop
push
push
xchg
jb
cmp
imul
dec
pop
sbb
sbb
not
jno
and
enter
addr16
test
inc
ja
out
dec
pop
sbb
ds
mov
ror
xor
and
enter
push
mov
mov
inc
xchg
inc
push
in
mov
jo
retf
aad
or
fdiv
movs
retf
(bad)
xchg
out
into
xchg
add
fwait
mov
movs
or
jg
xor
sbb
jnp
nop
mov
hlt
push
cdq
shl
xchg
dec
dec
hlt
push
outs
cmc
and
(bad)
cmps
adc
cmp
xchg
push
(bad)
push
add
(bad)
adc
xchg
sub
push
dec
adc
imul
cmp
push
add
dec
ss
stos
addr16
dec
pop
jns
cwde
sub
icebp
out
scas
xor
cdq
cmp
pop
adc
int
popa
cbw
inc
mov
jns
ja
aas
movs
ss
popa
fs
push
and
sbb
xor
test
mov
dec
out
gs
mov
imul
sti
out
fabs
jmp
pop
sub
fist
cmp
mov
xor
(bad)
push
adc
out
push
pop
ja
or
ror
lds
push
or
shr
loop
and
adc
test
cmp
add
mov
inc
xlat
int
inc
lock
pushf
adc
inc
outs
jecxz
mov
fist
retf
cmp
dec
dec
cdq
pop
xchg
bound
push
jnp
iret
dec
jmp
push
popa
fcomp
or
mov
fs
aaa
jle
jno
mov
aad
hlt
retf
and
or
imul
cmc
sbb
fisubr
xchg
jne
in
inc
push
fsubr
jge
scas
pop
pop
mov
leave
mov
jp
hlt
fld
push
scas
sub
cli
lock
ds
adc
ins
dec
bound
jnp
jp
jne
xchg
ss
out
mov
adc
fist
(bad)
xor
psrlw
cmc
and
jp
outs
jg
jge
cmp
mov
cmp
ds
ret
bound
out
jg
jns
push
cmp
ds
pop
adc
out
mov
call
aad
mov
cs
ret
sbb
fnstsw
ficom
nop
sub
ja
adc
mov
enter
mov
mov
cmps
mov
das
xchg
sub
out
cdq
mov
mov
aad
into
mov
shr
push
or
in
in
mov
test
pop
lea
sub
jbe
mov
rcl
jae
fmul
adc
and
xor
(bad)
inc
jb
mov
out
aad
jae
cld
cmp
cmp
inc
inc
pop
adc
lahf
add
and
xor
xor
sar
in
and
mov
pop
fisub
or
dec
jo
ret
push
fld
adc
lahf
push
xor
aad
xor
dec
outs
ret
jecxz
xlat
scas
das
push
mov
and
inc
shr
mov
mov
retf
push
mov
or
int3
lds
ret
sub
je
sbb
sbb
(bad)
sub
or
mov
mov
mov
jmp
pop
addr16
ds
or
das
push
dec
sbb
xor
fwait
add
aam
or
ss
xchg
movs
ror
xchg
out
mov
pushf
inc
shl
cld
mov
std
out
jno
repz
add
dec
sbb
pushf
pusha
or
ror
ins
cmps
mov
push
fisubr
mov
adc
pushf
inc
and
and
scas
retf
out
push
add
fdivp
aaa
movs
xchg
lds
shl
je
hlt
or
cmc
push
movs
add
ss
mov
popa
sbb
pop
stc
(bad)
in
cmc
inc
cmp
add
jp
pop
imul
(bad)
xchg
stc
sbb
xchg
push
sub
mov
mov
jbe
inc
out
int
adc
gs
dec
test
mov
leave
outs
cmps
add
arpl
jae
ret
xor
dec
dec
in
inc
sbb
ret
inc
test
xchg
and
push
add
fld
mov
xchg
xlat
sbb
push
sbb
loope
shl
xor
iret
inc
xor
das
mov
(bad)
bound
dec
ds
enter
pop
adc
(bad)
clc
push
mov
mov
pop
mov
daa
push
push
or
and
fnsetpm(287
add
and
test
out
clc
xor
mov
pushf
jae
jl
gs
in
shl
push
es
add
adc
dec
pusha
sub
xor
cmp
jle
(bad)
cwde
xchg
xor
mov
xchg
(bad)
jg
mov
jl
mov
xor
xor
ds
cmp
mov
cld
dec
sub
sti
dec
dec
mov
aaa
cld
xor
call
mov
mov
sub
movs
sub
inc
and
inc
cmc
adc
arpl
mov
into
in
mov
adc
movs
adc
mov
cmps
xchg
nop
jns
mov
xchg
out
xor
fstp
cmp
xchg
mov
lahf
aad
inc
jnp
jmp
arpl
ds
xchg
sbb
cmc
mov
call
in
jnp
lods
and
and
xchg
inc
sar
and
test
xchg
seta
enter
outs
mov
sbb
pop
sub
push
cli
out
push
aaa
mov
mov
jns
xor
xchg
jbe
mov
push
ret
fisttp
mov
sti
xor
test
aaa
inc
xchg
call
mov
mov
pop
mov
xchg
bound
push
mov
pop
mov
jns
fwait
jns
ins
ret
call
mov
leave
cs
lahf
mov
inc
cmc
push
jg
jle
adc
inc
push
cmp
nop
adc
icebp
sub
inc
and
inc
mov
mov
scas
cmp
cmp
nop
add
push
retf
and
int
mov
pop
ins
(bad)
mov
icebp
jle
cli
call
imul
in
push
push
ficomp
mov
mov
outs
sub
cli
ins
lods
xor
xchg
inc
pop
mov
pop
pop
call
(bad)
nop
or
jge
xor
jmp
sub
mov
loope
sub
(bad)
push
dec
jne
scas
push
push
dec
pop
dec
cmp
stc
fdivr
fiadd
nop
arpl
xchg
cmp
pop
xchg
fcomp
aad
imul
scas
fisubr
push
in
dec
sahf
cmp
inc
adc
sub
push
pop
lds
jmp
sub
cmp
adc
into
xor
dec
and
js
jne
inc
ss
jmp
jmp
cmp
out
mov
(bad)
lods
xchg
shl
inc
xchg
xor
mov
ja
pop
inc
jmp
lods
int
add
cwde
loop
das
fwait
mov
and
std
and
loopne
and
pop
sub
(bad)
lahf
imul
and
mov
aam
push
inc
cmp
sbb
and
pop
jmp
mov
cmp
or
xchg
adc
je
dec
mov
pop
or
inc
loopne
call
adc
int
sti
and
add
xchg
inc
xchg
lahf
add
dec
out
fucomi
push
outs
dec
jecxz
fxch
xchg
adc
sbb
int
stc
jp
mov
(bad)
mov
sbb
cmp
mov
(bad)
rcr
or
pop
test
pop
adc
cmp
fwait
int3
dec
imul
je
adc
jb
and
fiadd
sub
mov
xor
cs
into
fiadd
pop
mov
cld
ret
je
lahf
or
adc
aam
xchg
lods
jnp
or
dec
mov
lods
sahf
mov
push
adc
add
jle
ret
fild
push
cmp
fcomp
clc
xchg
sbb
xlat
fcomp
and
ss
(bad)
and
pop
das
mov
cmp
imul
and
jae
sub
mov
(bad)
popa
jle
pop
jne
dec
xor
rol
fdivr
push
mov
xchg
xor
and
mov
nop
inc
scas
aas
mov
and
call
lods
leave
cmps
test
jl
mov
inc
fisttp
test
inc
mov
or
jbe
lods
or
hlt
cmp
fstp
test
add
cmps
push
add
shl
pusha
push
mov
push
adc
fwait
push
sub
(bad)
dec
out
dec
arpl
gs
pop
adc
in
add
mov
mov
or
(bad)
push
jge
push
push
or
ffree
daa
jmp
jne
scas
(bad)
jno
fcomp
jo
jl
or
or
ja
cmp
mov
xchg
fnstenv
fwait
shl
mov
xor
jg
mov
add
ins
jl
sbb
aaa
popf
mov
sub
xlat
call
bound
lea
rcr
xchg
(bad)
jmp
adc
mov
int
inc
(bad)
or
xchg
popa
mov
dec
xor
xchg
cmp
mov
mov
xor
mov
cld
imul
and
ja
xchg
pushf
rcl
ffree
pusha
pop
cwde
fistp
mov
cmp
xor
shl
int3
mov
ins
out
pop
mov
in
and
cdq
pop
scas
(bad)
add
and
sbb
jg
in
out
xor
jne
sub
cmp
lahf
push
int3
ins
ret
mov
or
adc
dec
cmp
cmc
jle
xor
xor
xchg
mov
jno
push
cmp
daa
pop
and
test
jns
rcr
in
cmc
and
cs
cmp
pushf
adc
xchg
and
outs
fimul
in
inc
pop
popa
push
hlt
ret
add
test
movs
xor
cmp
mov
fadd
jl
sub
and
sbb
cmps
fwait
jl
jecxz
outs
add
xor
pop
and
push
retf
cmp
dec
retf
or
es
and
nop
icebp
xor
mov
mov
or
inc
or
xor
lods
cmp
nop
and
in
xchg
mov
leave
pop
fdivr
bound
enter
sbb
pushf
aas
iret
lea
or
jecxz
ss
gs
(bad)
call
pop
rol
xchg
call
sbb
xchg
gs
sar
cdq
pop
or
(bad)
push
sbb
and
fsubr
bound
xor
stc
sub
aaa
pop
jmp
mov
int3
jnp
aaa
cwde
inc
dec
lahf
aaa
retf
or
std
and
and
mov
stos
inc
or
pop
stos
mov
mov
retf
nop
cmp
inc
mov
xor
test
adc
mov
fsub
push
xchg
mov
movs
loope
push
out
jp
int
xor
jbe
popw
dec
sbb
pop
sbb
hlt
stos
iret
mov
mov
pop
push
mov
loop
jns
pop
das
pop
out
sbb
push
retf
pop
mov
add
and
add
leave
pop
or
retfw
icebp
push
imul
push
xchg
push
mov
ja
in
sti
stos
ins
jne
ins
(bad)
(bad)
adc
lock
xchg
rcr
push
bound
add
cdq
sub
cld
pop
stos
das
xor
or
jbe
mov
imul
mov
sbb
dec
and
push
xchg
cdq
adc
aaa
idiv
in
pop
dec
push
jnp
mov
dec
dec
fwait
fwait
inc
test
lods
ror
mov
lds
xor
mov
cmp
lds
xor
dec
add
mov
pop
loopne
in
xchg
cs
out
sar
cmp
iret
jge
mov
or
ss
int3
sbb
jno
outs
xor
outs
(bad)
ins
pop
pop
dec
loop
jle
call
call
mov
in
cmp
dec
sbb
enter
gs
add
daa
jecxz
mov
div
cmps
cmp
(bad)
inc
fwait
mov
mov
aad
pop
xor
jecxz
sbb
jns
mov
ficom
and
adc
push
jnp
leave
xchg
sbb
xchg
mov
sbb
fld
test
inc
sbb
repnz
inc
in
mov
jno
cmp
mov
in
sahf
xchg
arpl
loope
push
hlt
push
lds
aas
pop
fdivrp
mov
jmp
fwait
fs
mov
pop
mov
and
sub
add
cmp
in
push
test
scas
(bad)
pop
repz
dec
adc
mov
jns
dec
retf
xchg
mov
push
push
mov
and
mov
aam
ins
pusha
add
imul
jcxz
fwait
cmp
dec
push
shl
or
jge
xchg
ret
jmp
out
leave
push
outs
pop
adc
mov
or
icebp
jmp
or
push
sbb
pushf
movs
les
cmp
mov
loope
push
ret
jp
sub
sbb
mov
inc
idiv
mov
jbe
shl
stos
ins
pop
and
movs
stos
pop
push
or
xchg
mov
mov
mov
sbb
addr16
mov
outs
outs
sbb
xchg
sti
movs
loope
clc
pop
test
push
and
mov
jp
out
repnz
popa
jmp
or
test
test
leave
inc
fyl2xp1
mov
jmp
mov
sahf
test
nop
mov
cmp
mov
pop
repz
test
or
outs
aam
mov
cmp
loope
sbb
movs
jno
aas
imul
nop
pop
call
ret
shl
stos
xchg
or
push
add
xor
stos
and
enter
push
loop
push
sub
nop
fbld
ins
dec
(bad)
hlt
xchg
mov
and
test
jnp
in
gs
out
shr
je
cmp
adc
aaa
pusha
data16
popa
xchg
or
adc
inc
ds
adc
(bad)
loope
jne
sub
outs
and
xchg
push
mov
mov
mov
pop
ds
or
dec
pop
div
test
ins
fsubr
pop
test
gs
loop
xchg
outs
lahf
adc
jmp
int3
and
mov
ror
sahf
cli
sub
sub
lock
pop
jge
push
sub
jno
or
outs
pop
ds
dec
cmp
fidiv
outs
fwait
mov
dec
push
mov
shr
daa
out
sbb
adc
gs
fdiv
cmp
stc
jmp
sti
or
test
jge
inc
mov
sub
out
fs
out
jecxz
pop
enter
dec
enter
xlat
xchg
adc
rcr
or
dec
fsubr
and
ret
pop
push
fst
cmp
movs
aad
fiadd
icebp
jmp
or
adc
adc
adc
mov
sbb
lods
add
dec
rcl
cmp
(bad)
xchg
int
in
xor
das
xchg
mov
shl
cdq
jp
jmp
mov
add
xor
les
icebp
fnstsw
jle
(bad)
add
inc
mov
gs
add
and
mov
(bad)
retf
sbb
movs
aam
sub
xchg
mov
mov
cmp
rcl
ficom
jno
or
xor
fist
out
xchg
call
std
mov
cli
aaa
sbb
or
(bad)
ins
test
dec
outs
sub
push
test
addr16
jge
mov
(bad)
repnz
inc
call
mov
add
test
push
and
cmp
dec
fwait
sbb
cmps
fbld
dec
aad
dec
xchg
mov
push
or
(bad)
mov
mov
test
fiadd
mov
or
imul
in
popf
dec
push
mov
jmp
loopne
jno
call
adc
fisubr
dec
sub
jge
ins
call
and
ss
dec
and
fcom
pop
and
pop
push
cmp
cli
les
nop
adc
inc
mov
pop
test
mov
cmp
jp
sti
outs
cdq
add
sbb
xchg
mov
into
mov
test
int3
sahf
sbb
sahf
dec
fimul
inc
and
mov
lods
push
cmp
or
mov
mov
movs
ins
mov
mov
outs
pop
mov
inc
int3
jle
adc
setns
inc
jle
mov
test
jle
inc
pushf
(bad)
adc
cli
add
and
ficomp
and
xor
adc
(bad)
mov
aaa
mov
(bad)
pop
imul
aas
mov
add
inc
dec
add
sub
mov
aad
jb
lahf
mov
mov
jns
mov
pop
dec
xchg
ror
fninit
mov
cli
push
inc
adc
fwait
lods
pop
(bad)
inc
push
mov
lods
sar
push
dec
rcl
das
cmps
xchg
retf
shl
dec
add
(bad)
push
(bad)
out
data16
stos
mov
mov
xor
sar
stos
rcl
jmp
mov
(bad)
mov
cmp
xchg
xchg
mov
rcl
push
mov
mov
or
push
enter
cmp
(bad)
gs
ss
dec
out
xor
test
rcl
xchg
mov
arpl
std
push
fcomi
add
push
push
adc
cmc
or
push
outs
mov
push
push
mov
aas
ficomp
retf
push
dec
jp
ret
pusha
loopne
rsm
inc
mov
pushf
test
arpl
cdq
pop
jbe
(bad)
sub
cmp
jle
cwde
loopne
sahf
push
cmp
sub
mov
xor
repnz
scas
cmp
in
jge
(bad)
fidiv
push
lahf
lock
aaa
(bad)
and
mov
leave
lahf
idiv
fwait
jmp
adc
dec
lods
aam
jbe
cs
xchg
push
sbb
mov
jecxz
adc
inc
pop
jle
sub
out
mov
sub
mov
jle
and
movs
xor
dec
in
lea
rcr
stos
in
sbb
or
int
(bad)
mov
sbb
mov
stos
pushf
push
cld
scas
sbb
push
jmp
jle
cmc
js
cmc
jmp
inc
pop
cld
mov
jbe
aas
iret
push
test
pushf
mov
mov
inc
into
mov
add
mov
aas
leave
cmp
into
sti
daa
xchg
fst
in
mov
or
xor
mov
and
arpl
fs
out
inc
fmul
sti
xchg
jge
or
data16
pop
out
pushf
aam
imul
xchg
rcl
pop
push
mov
adc
mov
xchg
bound
pop
pop
inc
popa
push
aas
mov
test
jmp
sar
ins
mov
test
repnz
xlat
add
adc
inc
inc
lds
out
xor
jns
lods
mov
push
or
jp
push
in
inc
inc
mov
rcr
je
xchg
xchg
sti
mov
ror
lahf
lods
push
and
retf
imul
jle
lea
inc
push
movs
fldcw
stos
mov
and
in
push
xchg
lea
ins
(bad)
pop
jl
inc
out
and
(bad)
call
outs
or
fsubr
cmps
lods
mov
cmp
xor
push
fwait
ret
xor
jns
xor
icebp
or
cmps
jecxz
daa
in
mov
dec
add
in
cld
lods
xor
xchg
outs
xchg
mov
fisubr
xor
arpl
pushf
pop
stc
into
mov
loop
popf
mov
sbb
xchg
in
pop
xchg
imul
xlat
fld
leave
lock
dec
add
adc
fwait
jo
xchg
xor
scas
xchg
adc
xchg
xlat
call
add
mov
dec
dec
xor
xlat
ffree
xchg
repnz
dec
adc
sbb
test
enter
xchg
cmp
gs
cmp
pop
mov
js
std
inc
es
dec
call
fist
xor
and
xchg
in
pushf
jg
jne
into
jns
cmps
aad
mov
test
jbe
out
lock
inc
aas
out
(bad)
aas
repnz
in
push
add
pop
jmp
fstp
jo
ins
sbb
mov
sub
imul
push
jae
dec
adc
jnp
fs
addr16
cmps
mov
idiv
pop
cmp
dec
scas
js
push
jp
int
lods
pop
sub
aam
xlat
iret
lods
xchg
(bad)
(bad)
in
sub
cmps
or
pop
add
shl
call
mov
sub
hlt
push
les
adc
jle
loope
push
lahf
gs
lahf
mov
call
movs
aaa
jge
fs
arpl
add
inc
cmp
dec
pop
sbb
jle
fwait
adc
adc
bound
aaa
jnp
scas
mov
lds
xchg
(bad)
cmp
push
sub
cdq
xchg
push
add
arpl
jns
mov
mov
fldcw
add
(bad)
mov
cmp
rol
jmp
mov
in
jg
xchg
(bad)
je
pop
mov
mov
mov
repz
inc
and
(bad)
or
fdivp
dec
cmps
(bad)
in
popf
(bad)
outs
inc
repnz
mov
adc
xchg
add
and
mov
lahf
movs
mov
and
rol
jo
cs
cmps
push
(bad)
stos
push
or
xor
lods
sahf
or
mov
out
push
shl
sbb
fnstcw
imul
pop
jl
push
pushf
ret
addr16
cwde
lds
pop
cmps
sahf
jbe
push
push
pop
dec
mov
ja
sub
movzx
nop
mov
mov
sbb
lahf
(bad)
or
xchg
fild
je
inc
repz
xchg
aaa
lods
mov
or
out
jne
mul
in
les
mov
(bad)
es
cmp
mov
int
xchg
cmc
call
xchg
inc
xor
pop
xor
int
sub
inc
ds
fnstsw
fcom
xor
cmp
in
mov
out
test
int
aas
ja
dec
inc
fistp
and
xor
test
pop
sbb
rol
sub
cmp
cmps
inc
inc
xchg
imul
jno
aad
pop
adc
dec
add
(bad)
fldcw
xchg
jle
xlat
adc
ror
inc
xchg
xchg
in
xchg
fs
xchg
arpl
aam
(bad)
loop
cmp
aad
fmul
aaa
push
outs
pusha
adc
dec
pusha
leave
jl
jle
add
sbb
xchg
pop
repz
(bad)
jge
mov
and
mov
test
jo
and
xor
inc
jns
in
popa
cmps
loope
outs
sub
scas
clc
sub
lods
int
test
mov
and
leave
sub
mov
mov
sbb
cmp
mov
test
sbb
jle
sub
lods
cld
sub
adc
test
push
sbb
pop
ret
inc
shr
in
mov
inc
out
mov
shr
sub
sbb
xor
dec
(bad)
lock
rcr
push
sahf
xor
mov
clc
push
gs
mov
daa
push
xchg
repz
add
cmp
mov
stos
sbb
mov
int3
aaa
mov
cli
push
and
mov
mov
out
push
jne
sbb
mov
dec
arpl
xor
stc
jns
(bad)
cmps
mov
and
pop
in
jae
xor
ret
xchg
adc
arpl
cld
push
ficom
sub
push
in
in
push
mov
lock
push
loope
fidiv
outs
and
out
pop
lea
mov
adc
lods
sub
or
jecxz
cmp
xchg
xchg
push
mov
ins
pop
push
cmp
mov
push
mov
and
mov
and
cmp
jne
int3
pop
mov
adc
imul
xor
in
cmp
ss
and
lock
mov
jmp
adc
jae
inc
lock
lods
adc
jns
xor
fwait
mov
jne
addr16
fisubr
addr16
mov
inc
jl
jecxz
add
daa
ret
scas
ss
push
in
pushf
and
mov
xchg
jb
cmc
out
shl
js
fistp
sub
gs
pushf
lea
push
das
xor
sti
pop
xchg
je
or
(bad)
add
inc
loop
popa
jbe
xchg
dec
xchg
cs
cwde
movs
data16
cdq
mov
je
lahf
jo
jne
not
xor
shl
adc
dec
ins
sub
cmp
frstor
lods
adc
and
mov
xchg
pushf
dec
fimul
push
test
shl
loop
daa
enter
mov
cmp
add
out
sub
xchg
cmp
xor
mov
dec
sti
xchg
lods
sub
inc
and
mov
jb
push
pop
aad
pop
cmp
mov
sbb
cdq
mul
mov
and
stos
mov
gs
or
sbb
jecxz
in
jl
and
cdq
mov
fmulp
loop
jecxz
lds
test
aam
inc
cld
ins
(bad)
pushf
pusha
loopne
mov
stos
mov
push
mov
das
call
dec
xchg
xchg
arpl
enter
push
dec
jno
jle
or
pop
xlat
dec
sti
adc
test
and
pop
cmp
inc
iret
adc
xor
xchg
sub
cli
add
stos
pop
and
push
out
int
adc
call
push
addr16
loopne
das
xor
aam
lock
retf
cmps
aaa
xor
(bad)
push
cmp
and
mov
data16
push
aas
les
rol
(bad)
(bad)
std
push
mov
dec
cwde
aad
int
cmp
shl
ja
pop
cmp
mov
pusha
movs
jg
in
sub
xchg
cmp
rcl
dec
pop
mov
jb
test
lods
ds
in
jp
cmps
lock
lods
pop
mov
inc
push
and
push
mov
mov
retf
scas
fnstsw
fcomp
cli
icebp
gs
in
loopne
push
mov
push
in
clc
stc
test
or
push
cmp
dec
dec
adc
pop
sbb
ja
hlt
fcom
hlt
fsub
adc
mov
scas
xor
pop
test
loop
rcr
imul
outs
(bad)
mov
inc
xchg
sub
or
jl
xchg
sahf
cld
dec
repz
xchg
cmps
ins
dec
or
dec
fisttp
retf
xchg
dec
cdq
clc
mov
arpl
mov
jle
mov
xor
(bad)
arpl
inc
in
push
dec
jnp
lea
pop
fs
and
stos
xchg
stos
int
sbb
pop
jnp
push
popa
adc
mov
sub
jp
xor
cli
sbb
mov
jl
test
jo
rcr
or
mov
dec
sub
jge
cs
js
into
mov
or
fs
out
jns
xor
sub
mov
mov
adc
or
out
pop
test
popf
pop
sub
dec
mov
mov
dec
les
das
lds
mov
int
inc
or
xor
movs
jb
xchg
mov
cli
scas
and
(bad)
xchg
fs
call
push
les
jmp
mov
xchg
dec
mov
dec
push
cmp
lock
mov
fs
sahf
sbb
sti
jge
cmps
mov
sbb
sti
gs
pop
ss
pop
fld
pop
scas
cmp
es
push
sub
into
jns
(bad)
in
popf
jg
or
test
mov
jg
in
sbb
cmp
sar
aaa
fld
in
enter
out
sub
fldcw
imul
scas
mov
in
ret
push
mov
jnp
sahf
sti
xchg
je
ins
adc
mov
jb
mov
adc
mov
fsubr
test
mov
js
pop
outs
cmps
push
scas
out
mov
pop
fst
cdq
push
push
mov
sbb
and
(bad)
shl
xchg
mov
iret
fcomp
mov
out
daa
xchg
mul
outs
fmul
xchg
push
jecxz
loopne
adc
out
push
in
stc
(bad)
lods
iret
dec
lods
das
js
mov
dec
or
dec
fisttp
add
jl
push
jp
out
(bad)
sub
cwde
rol
xchg
out
rol
mov
ror
test
add
repz
retf
push
or
push
ror
jb
mov
(bad)
cmp
jg
xchg
aaa
sbb
add
or
xchg
and
xor
outs
test
aas
mov
pop
sahf
inc
ret
and
dec
scas
imul
and
test
adc
ins
push
ds
loopne
rol
mov
mov
aam
hlt
mov
icebp
iret
dec
cmp
and
xchg
data16
jbe
sub
mov
jno
jmp
jo
lea
mov
push
push
bound
lds
int
sub
ds
scas
mov
aaa
scas
sbb
mov
or
addr16
inc
in
adc
mov
adc
ret
push
jnp
sbb
inc
bound
lahf
imul
mov
fwait
cmps
sar
or
sub
sti
dec
mov
(bad)
mov
bound
jne
pop
jns
pushf
fwait
xlat
jb
adc
call
push
and
or
add
(bad)
ret
inc
(bad)
rcl
mov
pushf
mov
adc
sub
repz
fimul
aaa
push
(bad)
jnp
xchg
pop
sbb
or
mov
dec
out
jns
sbb
mov
stc
movs
ins
sbb
jle
bound
mov
loopne
pop
lds
hlt
xchg
in
mov
xor
in
iret
inc
arpl
out
sbb
es
pop
shr
les
inc
adc
mov
popf
push
cmp
xlat
add
push
and
xlat
mov
jmp
and
test
pop
and
aad
repnz
push
je
retf
mov
jns
loop
jmp
mov
imul
sahf
push
mov
and
(bad)
cwde
inc
pop
repnz
test
fucomi
mov
cmps
push
sbb
and
stos
sub
mov
js
xchg
pusha
add
jmp
lods
jo
or
cli
push
rcr
into
push
mov
push
hlt
dec
pop
jge
les
test
pop
push
sbb
push
loope
add
cmp
add
enter
lods
ins
std
bound
rcr
mov
sbb
push
push
(bad)
shl
loope
jo
in
sbb
or
fsub
inc
lahf
pop
mov
fcomp
fsub
sbb
cmps
push
or
inc
pop
outs
inc
mov
mov
cld
in
outs
lods
enter
cdq
cmp
push
xchg
dec
mov
ins
cmp
inc
es
scas
or
jne
jmp
push
shl
movsx
in
push
adc
cmp
fbstp
sbb
rol
xchg
fist
in
pusha
add
pop
cmp
inc
xchg
ss
adc
vmaxps
jns
mov
dec
lahf
mov
sub
out
in
retf
sub
sub
dec
movs
adc
test
in
xchg
or
es
loop
cmp
cmp
test
or
ins
inc
jecxz
jae
mov
cld
push
fcom
ins
xchg
push
fcomp
repz
sbb
push
jmp
sahf
inc
and
call
addr16
mov
ins
(bad)
ror
pop
rcl
test
dec
and
mov
iret
push
mov
xchg
lods
cmp
dec
dec
jne
std
retf
xchg
mov
retf
xor
or
cmp
cdq
in
mov
and
jno
xor
add
add
inc
in
cmp
aam
frstor
iret
fcmovbe
sbb
call
push
repnz
(bad)
or
ret
jno
jecxz
or
enter
stos
xchg
and
mov
jge
sbb
ret
and
xor
xor
jnp
push
add
sbb
popa
jbe
scas
sbb
or
inc
fcomp
or
out
pushf
rcr
pushf
lds
pushf
cmp
fld
push
aam
and
ja
js
xor
xchg
inc
adc
repz
xchg
xor
int3
push
dec
dec
inc
sub
je
mov
in
add
sahf
mov
(bad)
iret
cmc
add
sub
loopne
adc
mov
mov
pop
shr
js
cmp
call
mov
lods
dec
test
repnz
mov
sub
inc
mov
pop
js
xchg
jecxz
add
retf
push
js
cmp
inc
pop
mov
pop
aas
mov
scas
rcr
and
(bad)
sbb
bound
daa
ficomp
mov
lea
jl
mov
mov
icebp
add
jle
mov
mov
pop
add
dec
fcom
aaa
pop
or
push
das
rol
mov
jl
call
mov
les
jl
xor
cmp
popf
popa
push
push
call
pop
push
mov
mov
xchg
call
aam
mov
mov
(bad)
cmp
aam
stos
add
xchg
es
push
into
inc
in
or
adc
in
cmp
test
dec
das
and
cmp
popa
and
push
enter
adc
shr
mov
aad
sub
test
int3
xor
fsubr
cmp
(bad)
(bad)
inc
mov
jbe
inc
and
push
jns
hlt
retf
adc
ins
rol
add
cmc
mov
xor
or
inc
nop
in
dec
add
daa
outs
dec
retf
cmp
cmp
push
stos
or
imul
add
push
dec
pop
dec
adc
jno
out
mov
les
inc
adc
loope
test
sahf
lock
ret
pop
cdq
xor
push
pop
or
pop
pop
xchg
sub
(bad)
jb
push
mov
push
enter
xchg
push
sbb
aad
adc
sub
(bad)
xor
sbb
jb
push
xchg
aad
add
xor
mov
arpl
lahf
retf
pop
(bad)
sbb
pop
xchg
mov
leave
test
inc
mov
inc
es
lods
and
test
fwait
sbb
rcl
mov
bound
pop
clc
adc
repz
call
shl
outs
(bad)
scas
test
pop
cmp
jbe
cli
pop
jnp
and
cmp
lock
sub
sbb
fwait
sahf
mov
(bad)
mov
push
jmp
or
mov
dec
sbb
adc
cmps
ror
mov
or
outs
sbb
jae
dec
dec
dec
push
out
or
mov
aam
and
mov
fistp
add
inc
movs
ret
test
pop
pop
loope
mov
push
loopne
push
adc
push
add
xchg
js
loop
or
or
aas
xchg
cld
and
outs
xlat
call
sbb
scas
repz
jno
aam
inc
popa
imul
sbb
pop
jo
adc
cmp
pop
sub
adc
stos
ret
fimul
lea
adc
dec
loope
xor
and
sub
sbb
push
dec
fcmove
repz
add
add
or
ja
div
mov
fistp
cmp
jo
outs
or
aas
leave
hlt
xchg
aaa
cs
and
fbld
in
sub
sub
cmp
pop
(bad)
enter
mov
jne
outs
jecxz
mov
jbe
jb
sbb
pop
sub
add
and
add
jge
dec
iret
fsub
shr
pop
inc
xchg
pop
xor
mov
nop
call
lahf
les
adc
dec
add
jp
pop
mov
push
outs
jbe
pusha
push
cmp
cmp
or
out
ds
mov
(bad)
shl
enter
mov
lods
je
ja
adc
jb
aad
sahf
push
and
not
mov
or
xchg
jle
push
add
idiv
add
sub
cwde
fwait
mov
ss
or
jbe
addr16
xchg
dec
leave
adc
test
cdq
stos
test
sub
mov
or
neg
jecxz
mov
pop
addr16
mov
int3
sar
cld
scas
fimul
stos
mov
in
imul
jnp
pushf
inc
push
dec
enter
aas
in
enter
dec
add
scas
sbb
fisttp
pop
mov
pop
xor
movs
nop
xchg
in
aad
nop
mov
shl
add
push
das
jmp
mov
addr16
xor
mov
fdivr
jns
push
or
jmp
fst
call
pop
push
pop
push
jbe
dec
retf
in
mov
push
retf
(bad)
hlt
jae
adc
in
in
aas
fdivr
sub
mov
fbld
sub
inc
dec
mov
cdq
mov
push
jg
and
sbb
mov
popf
mov
dec
fisttp
push
pop
jp
xor
iret
hlt
pop
in
icebp
add
pop
jns
sub
add
les
fnstcw
out
fs
adc
fldenv
xor
sub
pusha
(bad)
cld
dec
in
xor
loope
mov
pop
mov
pop
pusha
out
sub
dec
pop
out
xor
push
aam
sub
jo
lock
cmp
rcr
xor
and
mov
fidiv
pop
xchg
hlt
jmp
mov
add
inc
cmp
lock
mov
popf
movs
dec
imul
xchg
pop
loop
pop
inc
pop
ins
adc
mov
or
add
pop
xchg
pop
or
stc
inc
(bad)
je
xchg
iret
sub
outs
lods
in
ds
cli
leave
adc
test
scas
(bad)
icebp
cdq
jnp
stos
inc
mov
xchg
clc
inc
test
pop
clc
add
dec
pop
cdq
ds
xor
push
in
xchg
push
shl
xchg
mov
arpl
lea
fadd
popf
mov
sbb
aad
jb
xchg
sahf
les
test
bswap
jecxz
popf
sbb
inc
mov
adc
rol
and
(bad)
push
xor
push
jno
adc
mov
mov
inc
mov
test
shr
inc
leave
hlt
retf
add
xor
cmp
xchg
dec
cmp
sar
popf
div
sub
add
je
(bad)
pop
add
sbb
cmp
sti
aad
inc
cmps
(bad)
push
pop
out
in
dec
lods
lea
add
or
jg
jo
jne
sub
ror
mov
mov
cld
add
sub
stc
pushf
frstor
dec
pop
sub
sbb
adc
xchg
adc
xor
push
dec
inc
cmps
adc
nop
aam
mov
jmp
int
movs
adc
mov
cmp
ret
ins
jo
push
adc
mov
out
xchg
icebp
fnstenv
push
mov
outs
adc
jnp
jge
xchg
mov
mov
mov
mov
repnz
cmp
mov
repz
pop
fistp
xchg
xchg
pop
lods
sti
inc
ds
test
imul
pop
jns
scas
inc
sbb
cli
loopne
cmp
xor
repz
fsub
out
sub
jne
sub
mov
and
popa
cmp
add
cmp
popa
push
into
xchg
xchg
es
ds
movs
aaa
stos
mov
in
inc
nop
xor
xchg
int3
or
movs
jmp
cmp
xchg
jecxz
or
pop
movs
pop
pop
xor
test
lods
add
inc
push
sbb
and
xor
data16
popf
cmp
push
test
mov
dec
pushf
mov
pop
cwde
movs
push
cld
fcom
in
pop
add
pavgb
push
xor
out
mov
ds
push
retf
shl
mov
lea
jle
(bad)
push
cmps
mov
cli
and
outs
das
or
mov
icebp
jne
dec
enter
sbb
jns
pop
pop
jno
cmp
pop
dec
jl
call
aad
outs
lds
leave
cwde
mov
cmps
xor
fcomp
sub
sub
inc
jp
in
fdiv
scas
pop
popa
out
adc
jecxz
jmp
or
pop
inc
hlt
sub
inc
pusha
or
daa
dec
cdq
inc
jl
sbb
sbb
jg
and
pushf
jae
mov
or
jg
mov
fsubr
add
adc
push
mov
ds
push
leave
dec
shl
or
dec
push
cmp
jg
adc
aaa
out
pop
lock
idiv
adc
xor
into
test
push
cmp
push
cmp
mov
cmp
cli
adc
mov
ffreep
and
test
dec
fsubr
mov
xchg
mov
out
loopne
jbe
cmp
arpl
je
out
xor
call
sub
mov
xchg
sub
retf
retf
xor
and
ret
cwde
jae
js
xor
adc
dec
jb
test
stos
mov
std
(bad)
mov
fldenv
inc
or
mov
pop
adc
inc
add
mov
mov
mov
pop
iret
loopne
mov
and
and
sbb
lahf
mov
pop
jl
jl
test
add
lods
lea
xor
pop
push
and
popf
enter
add
ror
fidiv
aas
mov
ins
mov
aad
jae
jns
and
cmp
dec
imul
and
leave
fmul
dec
and
jecxz
or
dec
mov
mov
sbb
loopne
loop
inc
into
shr
jo
cdq
or
add
dec
jl
fcmovnbe
xchg
xchg
int3
jl
mov
es
lods
adc
jmp
jne
ret
cmp
sub
ja
pop
les
mov
sti
adc
or
xor
push
push
push
ja
out
in
(bad)
sub
out
mov
mov
arpl
es
adc
int
adc
das
inc
jbe
xchg
data16
sub
fcmovb
stos
movs
out
sub
ins
and
out
(bad)
dec
mov
mov
mov
adc
les
dec
stc
pop
pop
adc
inc
mov
pop
dec
sub
pop
imul
pusha
test
rcl
xchg
mov
inc
in
xor
xchg
push
out
pop
xor
loop
clc
xchg
arpl
cmp
and
hlt
mov
int3
into
mov
test
inc
lahf
lods
ds
xchg
dec
add
imul
push
push
ret
push
push
push
mov
clc
(bad)
pop
(bad)
repnz
gs
add
int
xchg
enter
cmp
jge
pop
mov
sbb
xor
fwait
pop
test
sbb
(bad)
push
push
add
inc
xchg
jle
mov
pushf
pop
(bad)
fwait
bound
mov
sub
fsubr
pop
(bad)
inc
fdivr
nop
gs
or
(bad)
inc
imul
mov
xlat
clc
stc
cmp
(bad)
imul
repz
stc
outs
cli
jmp
adc
test
sub
jns
in
shr
adc
lods
push
push
bound
dec
cmp
jno
rcr
nop
dec
fwait
add
dec
mov
cmps
mov
cmp
call
outs
cmp
fcomp
sub
and
jns
or
mov
mov
cmp
mov
sbb
sbb
mov
push
inc
fdiv
clc
xchg
and
xchg
push
xor
fistp
mov
inc
cmc
cmps
jbe
fdiv
xchg
in
popa
mov
popf
shr
jae
fiadd
retf
retf
sub
ror
add
jl
inc
pop
mov
mov
jbe
push
adc
dec
scas
cmps
adc
and
xchg
sub
inc
xchg
imul
cdq
cmp
shr
lods
xor
aam
pusha
pop
lahf
fdivr
sub
fidiv
cli
cmp
aaa
add
enter
int3
fcomip
dec
cmp
inc
jmp
adc
xor
test
push
push
into
xor
fcomp
inc
xchg
imul
inc
xchg
movs
inc
mov
div
mov
adc
adc
movs
in
inc
in
loope
test
test
lock
jnp
mov
sbb
xchg
mov
aas
adc
add
call
icebp
mul
jp
xor
mov
pop
dec
sahf
stos
sub
cmp
push
sub
add
add
push
sbb
xchg
xchg
add
jbe
or
jns
inc
cdq
stos
jae
(bad)
clc
rol
sub
mov
push
test
push
loope
xchg
and
(bad)
repz
sbb
les
retf
push
mov
shl
test
lds
bound
jmp
pop
(bad)
aad
ds
jle
fidivr
fwait
sbb
lahf
pop
pop
lea
xor
retf
dec
cmp
mov
or
cs
loope
xlat
in
xor
loop
xchg
cmp
xor
(bad)
lea
in
les
lds
cmc
push
sub
movs
mov
mov
pop
add
mov
cs
pop
add
cmp
stos
push
dec
fwait
cmp
push
mov
test
rcl
and
in
push
push
ss
cmp
into
shl
les
int3
mov
add
push
pop
mov
mov
pushf
pop
mov
sub
aas
or
cmp
lods
lods
shr
fstp
adc
or
popa
std
add
dec
cmps
cwde
sub
mov
xor
mov
in
and
cld
jae
cmp
scas
sbb
cld
dec
sub
into
lea
adc
adc
xchg
cmps
add
fisttp
cli
retf
cwde
aam
xor
into
scas
jmp
imul
out
adc
xor
add
pushf
fcom
jns
sbb
in
push
(bad)
sahf
sti
jmp
mov
test
retf
fild
in
fmul
scas
push
scas
cmp
push
sar
or
push
push
jecxz
inc
inc
push
jmp
push
call
(bad)
setl
fmul
inc
das
lea
pushf
push
aas
push
in
nop
jbe
movs
add
push
nop
cmp
pop
sbb
leave
fwait
sub
mov
loopne
icebp
ss
out
loopne
repnz
xchg
mov
mov
pop
pop
dec
cwde
call
sub
inc
cwde
cdq
mov
ja
mov
ret
fs
stos
aaa
cmp
fdiv
fstp
mov
or
test
ins
inc
xor
pop
(bad)
fistp
test
adc
mov
sti
(bad)
xor
xor
xchg
aaa
aad
push
loope
jmp
adc
mov
fsub
and
adc
das
imul
or
xchg
pop
push
out
outs
lds
or
cmp
in
and
lahf
push
in
pop
jge
int
int3
pop
jge
mov
out
pushf
mov
bound
(bad)
in
cmp
cmc
mov
test
and
es
std
icebp
push
nop
out
xchg
mov
adc
mov
inc
cmp
lock
out
std
ffree
sub
jecxz
sub
mov
popa
int
adc
cmps
stos
mov
pop
add
in
(bad)
fbstp
sar
imul
push
pop
aas
adc
pop
mov
fs
xor
ficomp
sahf
xchg
jmp
ret
pop
cmps
jp
push
loopne
mov
and
loope
movs
repz
pop
push
push
loope
in
dec
les
xchg
hlt
lods
retf
repnz
icebp
test
movs
mov
arpl
push
cwde
cmps
sbb
jg
js
out
dec
std
dec
mov
call
sub
pop
jnp
sub
sub
dec
cwde
fwait
sub
xchg
lahf
mov
lock
jno
sahf
repnz
push
cmp
ds
mov
and
jns
data16
mov
aam
cmp
lock
jb
(bad)
(bad)
shr
(bad)
jb
mov
cmp
iret
dec
xchg
mov
mov
iret
dec
out
mov
mov
push
dec
sti
aas
mov
jb
shl
mov
mov
push
enter
scas
add
dec
push
xchg
inc
cmp
and
fwait
test
gs
adc
xor
ss
lods
sar
iret
ss
inc
cld
push
enter
adc
das
mov
(bad)
mov
inc
icebp
or
add
inc
cmp
movs
cmp
sbb
(bad)
ds
xor
mov
mov
push
aad
push
in
jno
mov
and
sub
(bad)
call
shl
xor
cmps
sti
test
idiv
and
cmps
and
or
pushf
jge
jmp
jne
into
push
jo
xchg
sbb
sbb
pop
pop
pop
xor
rcr
mov
mov
push
dec
retf
iret
cmc
out
push
mov
push
push
mov
cdq
shr
sub
ror
xlat
sti
sar
aaa
and
cmp
jo
jno
outs
int3
pusha
and
gs
sbb
ficom
in
mov
ins
inc
or
jecxz
inc
test
jmp
not
popf
out
jge
loope
cmp
(bad)
fldl2e
mov
(bad)
mov
mov
or
mov
popa
mov
inc
es
cwde
(bad)
sahf
retf
jmp
add
push
(bad)
(bad)
rcl
mov
std
mov
inc
sar
xor
out
dec
stc
inc
push
js
push
add
fistp
dec
(bad)
push
inc
fdiv
lods
imul
mov
(bad)
nop
sub
sbb
jl
sbb
and
add
cmp
test
xchg
sub
sahf
dec
(bad)
faddp
sbb
push
inc
cmp
mov
xor
sbb
js
push
jno
jns
sbb
fisttp
iret
loop
loope
sbb
ds
aad
out
scas
mov
mov
add
jns
(bad)
jp
out
into
pop
in
rol
xor
jmp
stos
std
adc
sbb
fwait
(bad)
xor
lea
push
loop
in
in
mov
ss
sub
(bad)
popa
and
push
ins
mov
bound
push
or
cs
shl
push
mov
das
int3
bound
push
ds
push
jns
or
or
je
or
stc
call
cmp
shr
call
jecxz
add
or
or
test
mov
repz
jne
(bad)
inc
bound
mov
mov
(bad)
push
adc
popa
mov
retf
ss
out
imul
mov
neg
in
ret
les
adc
rol
xlat
cmps
jbe
and
mov
lods
jbe
aaa
push
outs
ds
sub
(bad)
mov
cmp
(bad)
aas
xchg
(bad)
adc
out
pusha
adc
arpl
imul
inc
sub
imul
sub
push
sub
sub
test
jns
aam
loop
sar
enter
push
mov
imul
outs
ss
js
int3
dec
or
cmp
pop
push
in
sub
pop
ins
in
sub
ret
cs
mov
pop
cmpxchg
jbe
xchg
pop
stos
sub
sbb
sbb
sub
mov
daa
adc
push
fcompp
jnp
sbb
dec
pop
sbb
pusha
stos
xchg
sbb
and
cli
sub
mov
mov
sbb
mov
scas
mov
pop
in
out
loop
xor
test
or
and
add
daa
xchg
xor
test
push
or
sub
inc
fdiv
mov
test
cmp
bound
cli
xchg
bnd
mov
movs
rcl
adc
xor
lds
sub
inc
mov
mov
cmp
sar
or
inc
outs
mov
pop
sti
xor
jb
dec
repnz
inc
stos
(bad)
xor
fstp
arpl
mov
fwait
(bad)
nop
and
sub
sbb
lahf
(bad)
fldenv
cs
loope
lahf
inc
cmp
dec
pop
dec
nop
add
add
lock
mov
scas
dec
outs
dec
add
mov
or
(bad)
movs
jns
and
jcxz
mov
add
cmp
and
icebp
repz
lock
dec
sbb
jg
pop
sar
outs
in
fisub
shl
ret
mov
aad
cwde
add
jmp
nop
cmp
mov
addr16
mov
inc
fstp
mov
sub
mov
cmc
js
push
and
mov
mov
in
repz
and
inc
cmp
jne
jbe
adc
jl
daa
cli
bound
ins
outs
or
and
or
jmp
inc
lea
sbb
inc
js
xchg
clc
mov
mov
leave
retf
dec
push
sbb
push
mov
pop
xlat
sbb
movs
cmps
out
xor
and
stos
sbb
adc
xchg
call
xchg
je
shl
push
dec
xor
stos
test
and
mov
aas
mov
in
ss
mov
sbb
stos
jl
push
xchg
pop
xor
bound
mov
adc
and
hlt
or
sub
inc
mov
add
clc
gs
in
aam
push
xchg
mov
int
leave
adc
pushf
in
and
movs
outs
pop
je
push
mov
mov
fiadd
out
ins
lods
je
mov
cmps
lds
test
mov
mov
jg
mov
push
or
scas
ins
dec
ret
ficom
xchg
cld
dec
popf
scas
jbe
mov
fldln2
fdiv
push
xlat
sbb
cmp
mov
sbb
movhps
es
repz
mov
jp
leave
cs
(bad)
cli
shl
fs
cmp
jecxz
stos
mov
cmp
or
pop
sub
dec
cmp
inc
sub
cmp
jl
fldenv
icebp
mov
(bad)
lahf
xor
pop
lds
pushf
xchg
pop
ins
movs
je
ss
xchg
mov
dec
addr16
pop
xchg
pop
enter
out
or
push
stos
cmp
daa
outs
aad
jmp
shr
mov
xor
adc
push
sbb
call
jmp
nop
fcomi
imul
int3
in
sbb
sub
into
jg
outs
jae
addr16
mov
or
jl
and
fst
and
outs
xchg
jno
aam
pop
jecxz
pop
jmp
xor
jg
shl
mov
cld
push
subps
lock
push
adc
xchg
data16
mov
sub
xor
loope
and
les
pop
jmp
retf
cwde
push
push
push
xchg
sahf
push
cmp
dec
xor
mov
shl
xchg
mov
xor
xor
push
mov
ins
mov
lods
cld
mov
xlat
inc
cmp
int
aaa
out
hlt
scas
stos
and
sub
cmp
xchg
aaa
repnz
lds
call
sbb
loopne
cmps
dec
jecxz
cs
leave
std
sbb
sub
or
jno
movs
jbe
je
shr
mov
enter
(bad)
das
jo
cmp
cmp
and
push
mov
mov
jl
push
pop
xlat
lea
or
pop
xor
sbb
ins
test
test
ja
out
mov
ja
retf
mov
mov
(bad)
dec
add
jg
dec
arpl
sub
lock
xor
call
call
bound
inc
arpl
test
jp
adc
ret
data16
stc
or
out
fild
cmp
lgs
neg
or
test
out
call
mov
test
enter
xor
jg
push
in
push
test
mov
pop
mov
into
stos
sbb
psubw
aas
pushf
xor
cli
ror
mov
inc
xchg
stos
popa
xchg
out
push
sub
pop
mov
int
ror
jns
adc
mov
inc
ins
test
stc
icebp
mov
inc
stos
dec
push
xor
push
cmps
xor
fidivr
mov
fisttp
ins
outs
neg
fimul
pop
retf
stc
repz
mov
popa
xor
mov
rcr
mov
ins
arpl
dec
push
int3
jno
xor
sbb
cli
fbld
mov
add
retf
adc
stc
clc
test
mov
fnstsw
int
push
cmp
mov
loopne
and
xlat
int
jne
add
imul
into
cld
xchg
xor
mov
cmp
rol
push
xchg
mov
std
std
xchg
xchg
xchg
cmp
jle
pop
pop
sub
jge
ret
mov
mov
adc
mov
sub
mov
xor
imul
xor
mov
nop
ret
mov
mov
dec
or
cmp
cmp
cmp
mov
(bad)
rcr
adc
adc
in
jne
jmp
int3
adc
mov
cmp
mov
mov
xor
addr16
push
xor
xor
fmul
popa
add
pop
dec
xchg
mov
mov
pop
inc
out
mov
inc
rcl
inc
push
pop
jne
mov
imul
adc
lods
int3
shr
sub
sbb
mov
sbb
ds
and
test
mov
shl
jmp
and
and
mov
jbe
mov
inc
(bad)
aam
imul
int3
add
mov
mov
ret
rol
call
push
or
(bad)
inc
movs
rcl
dec
jg
xchg
je
jae
sub
mov
mov
(bad)
enter
cmp
outs
push
cmp
popa
sti
or
inc
pop
jno
cld
or
lahf
xor
shl
(bad)
or
sub
xchg
sbb
adc
inc
cmps
or
retf
call
popa
shr
adc
and
fwait
pop
sbb
fwait
enter
imul
xor
stc
aas
stos
push
mov
les
test
pop
pop
jne
or
inc
sahf
xchg
and
cmc
xchg
test
mov
and
cmp
xor
or
and
mov
adc
sub
aaa
pushf
arpl
inc
enter
pushf
xor
cmp
adc
xor
adc
sahf
ja
leave
retf
jae
pusha
adc
and
mov
mov
test
and
(bad)
pop
loope
ficomp
inc
sbb
inc
stc
push
loop
outs
out
sub
mov
jb
data16
and
cmp
push
xchg
mov
fs
add
jno
push
int3
jns
or
pushf
mov
int
sbb
shl
pop
fs
cld
jb
inc
mov
mov
pop
mov
xchg
xor
popf
jb
sti
xchg
push
pop
fild
mov
outs
stc
mov
jge
mov
ins
cmp
fs
cld
jge
movs
mov
icebp
out
cmp
mov
dec
xchg
imul
jmp
jb
jl
xchg
mov
lds
cmc
adc
or
ror
cmp
sbb
fistp
mov
inc
jge
cmp
mov
adc
dec
imul
mov
sbb
mov
aad
in
mov
jl
adc
sub
and
cmps
mov
push
dec
icebp
push
ds
cmps
das
mov
loop
adc
fist
inc
call
mov
inc
mov
push
mov
mov
sti
jmp
stos
loope
fwait
popa
cmp
test
or
pop
mov
ins
sti
mov
rcr
push
add
loope
cli
xchg
rcl
cli
rcl
cmp
shl
sar
fidiv
retf
lods
xor
mov
outs
jno
jae
(bad)
jp
sub
sbb
xor
sbb
push
cmp
push
dec
pushf
mov
clc
test
jns
hlt
gs
scas
cmps
jnp
push
repz
xchg
push
mov
pop
push
mov
pop
loop
imul
xchg
cwde
and
imul
push
(bad)
test
jmp
dec
jp
jp
sbb
xor
dec
or
into
ret
mov
mov
cmp
rcr
inc
pushf
sub
add
loope
loopne
pushf
(bad)
cmp
jb
xlat
cli
movq
stos
fnsave
xchg
imul
sub
jecxz
(bad)
jmp
pushw
sti
jo
dec
add
cmp
push
arpl
outs
int3
inc
jle
dec
mov
or
fldenv
mov
cmp
imul
dec
jle
xchg
mov
sub
lds
pop
xchg
movs
cmc
out
jmp
sahf
stc
or
mov
sar
std
pop
jns
adc
leave
xchg
jmp
stos
mov
mov
add
xchg
loope
daa
call
jge
call
fstp
adc
mov
pop
lea
xchg
sub
cmp
mov
mov
neg
xchg
(bad)
jnp
div
xchg
sti
lds
inc
push
mov
jno
movs
jnp
fisubr
retf
shl
sub
cmp
xchg
adc
daa
sbb
add
das
sub
mov
out
cmps
adc
stos
int
mov
aam
mov
ja
inc
push
mov
ficom
ret
test
inc
cld
dec
test
outs
inc
and
add
repz
(bad)
cmc
and
and
cmp
and
push
and
out
aam
xor
cmps
aad
movs
xchg
lds
pop
cmps
loopne
fist
jle
int
xlat
push
retf
fsub
sub
pop
adc
scas
mov
jb
adc
ror
call
sbb
and
jae
cmp
add
out
aas
out
pop
xor
push
push
push
xlat
rcr
out
lods
movs
(bad)
mov
lods
stc
dec
sbb
jecxz
jns
and
jbe
xor
mov
pop
popf
repnz
pop
stos
fs
nop
(bad)
punpckhwd
shl
mov
inc
lahf
pop
out
jmp
adc
xchg
movs
mov
fcomip
jno
sub
mov
jp
inc
sub
inc
cdq
adc
or
rol
stos
cmps
sahf
scas
shr
shl
xchg
jne
test
call
mov
pop
stc
mov
jno
or
or
imul
jle
pop
push
ret
pmaddwd
xchg
pushf
rcl
xor
jb
sbb
push
jns
push
jo
cmp
mov
inc
cmps
mov
sbb
mov
test
es
mov
xchg
cmp
inc
out
cli
bound
add
xlat
movs
add
pop
adc
jo
pop
push
scas
test
add
popf
xor
jmp
sub
in
pop
inc
adc
and
call
int3
sub
cmp
bound
xchg
nop
jl
outs
in
(bad)
xchg
add
bound
sub
jnp
leave
ss
jae
scas
call
pop
icebp
mov
xor
test
pop
sti
inc
adc
xor
outs
jae
daa
mov
(bad)
jecxz
jge
daa
ret
aad
xchg
outs
jbe
inc
xor
imul
fadd
xor
xchg
xchg
or
dec
sbb
test
add
xchg
or
es
int3
mov
pop
repnz
push
test
(bad)
int3
mov
outs
push
sub
dec
lock
push
js
aaa
mov
mov
sbb
rcr
mov
fs
aam
mov
and
mul
mov
add
pop
or
ror
fisub
xor
jecxz
outs
in
lea
push
out
sub
mov
hlt
leave
fnstcw
popf
aaa
jo
mov
fimul
rol
inc
test
pop
popf
sbb
cmp
cwde
hlt
push
fmul
inc
js
pop
dec
lea
pop
sbb
pop
dec
(bad)
fwait
gs
xchg
mov
aad
adc
xor
jecxz
mov
adc
imul
or
and
jp
out
js
ret
fld
sbb
fwait
dec
aas
in
stos
mov
imul
popa
in
cmc
loope
mov
mov
jmp
jbe
jnp
data16
outs
loope
sti
adc
fdiv
jle
test
inc
mov
adc
test
pop
fdivr
rcl
pop
sbb
sbb
ret
xchg
mov
inc
inc
shl
xor
enter
pop
inc
out
mov
lea
test
mov
jae
test
jmp
ds
hlt
dec
mov
xchg
pop
mov
jae
in
out
fisubr
out
mov
jno
jno
adc
mov
pop
fdivr
test
push
(bad)
push
dec
and
push
mov
xlat
pusha
pop
xor
sub
dec
(bad)
mov
and
iret
inc
mov
jbe
push
ds
lods
dec
fwait
mov
fidiv
imul
mov
or
dec
inc
scas
in
mov
inc
(bad)
bnd
popf
push
adc
mov
bound
jle
adc
lds
mov
outs
or
lea
push
add
jecxz
or
xor
jo
arpl
xchg
or
push
sbb
pop
nop
inc
pushf
js
push
out
inc
daa
pop
cli
out
pop
xchg
jno
pop
cli
jno
jo
jnp
or
scas
fild
test
or
mov
jmp
push
mov
stc
adc
xlat
mov
aad
pop
aas
popa
aas
push
mov
ret
add
mov
leave
xor
cmp
jns
shl
cbw
popa
pop
sbb
popa
rcr
movs
outs
mov
lahf
ja
inc
mov
jo
inc
mov
cmp
loope
xor
addr16
add
jle
ret
retf
pop
test
xchg
arpl
pop
sub
cmp
jmp
dec
mov
repz
out
jmp
push
dec
cmp
jge
scas
add
aam
xor
inc
stos
popa
or
xchg
mov
push
scas
xchg
or
bound
lds
out
(bad)
adc
mov
mov
fild
ins
ja
in
jle
sbb
jecxz
fisttp
sub
or
cwde
cli
int3
and
xchg
push
fnsave
jnp
cld
add
cs
xor
cmp
(bad)
mov
out
cmps
xchg
shr
ins
inc
mov
mov
aam
or
stos
sub
pop
add
(bad)
stos
sub
push
into
jle
push
xchg
and
push
jle
mov
add
mov
cmp
sbb
lds
out
shl
test
pop
js
cmps
add
into
add
dec
in
(bad)
aad
xchg
adc
clc
adc
jno
call
out
jp
stos
xchg
std
pop
jp
jae
adc
sbb
or
adc
xchg
or
in
xlat
dec
mov
jo
pusha
or
inc
jae
jecxz
sbb
test
fild
and
inc
jbe
movs
jmp
test
pop
lock
cdq
or
scas
scas
ins
bnd
fiadd
inc
(bad)
mov
jge
pusha
pop
pop
sbb
rcr
fs
pushf
inc
(bad)
jl
mov
sub
cmp
pop
xlat
mov
and
sbb
repnz
or
in
or
out
ja
push
add
mov
nop
aas
push
jnp
sbb
cli
inc
add
std
stos
movs
imul
mov
pop
cmp
daa
dec
sub
adc
and
jmp
xor
call
or
pop
jle
ffree
fsubp
pop
push
dec
xor
sahf
call
in
or
clc
(bad)
mov
sub
dec
inc
mov
jg
mov
push
cmp
(bad)
pop
inc
fnsave
xor
cmp
and
jb
xchg
xchg
bound
inc
and
adc
push
push
xchg
xchg
sub
xchg
icebp
int3
inc
call
push
push
and
imul
jp
jbe
rcl
iret
arpl
div
mov
mov
mov
mov
add
mov
and
mov
and
test
mov
dec
test
jmp
in
xor
mov
sbb
mov
or
sti
or
scas
mov
jo
pop
js
mov
inc
add
not
jns
neg
jne
cld
mov
clc
sets
sbb
repnz
cmp
cmp
jb
cmps
iret
fistp
jmp
call
retf
(bad)
pop
xor
inc
xchg
ss
mov
adc
dec
sub
pushf
mov
stos
mov
push
pop
push
pop
pop
icebp
jge
(bad)
nop
jbe
mov
test
scas
mov
in
and
xchg
mov
icebp
dec
or
xor
fsubr
sub
xchg
iret
mov
dec
cdq
in
and
sub
popf
xchg
jge
adc
stos
jno
mov
retf
int3
loope
pop
push
push
lock
(bad)
call
in
add
sbb
test
sbb
add
sbb
inc
(bad)
mov
sbb
hlt
les
xlat
arpl
push
cdq
and
lods
jmp
aad
movs
into
jae
cmp
test
jge
adc
dec
and
retf
inc
jns
scas
lahf
mul
outs
lods
sub
xchg
fucom
inc
xchg
rcl
dec
jnp
inc
mov
inc
mov
mov
pushf
or
movs
in
add
aas
mov
mov
cli
cmc
add
mov
mov
jcxz
sbb
pop
and
mov
je
jp
ins
sar
add
mov
scas
fs
int
mov
jns
pop
nop
or
mov
add
test
fdivr
out
jge
and
cmp
sbb
dec
pop
ret
rcl
push
jle
xor
sbb
mov
mov
and
push
inc
es
jle
rcl
push
ins
fisttp
xlat
loopne
mov
ret
add
and
xchg
jnp
xchg
mov
xor
or
scas
lock
add
sbb
mov
pop
or
pop
test
mov
xchg
push
jns
test
pop
fst
leave
in
xor
xchg
sub
add
jmp
rcl
mov
aam
shl
pusha
sbb
cmps
and
xchg
icebp
sbb
xchg
and
jb
aas
pushf
fld
xchg
das
out
pop
and
sub
fnstsw
(bad)
jae
add
xchg
sbb
jno
push
push
cmps
jg
jmp
dec
push
(bad)
dec
ret
in
(bad)
retf
jmp
jmp
mov
test
xor
stos
cmp
ffree
jl
daa
daa
xchg
and
push
jbe
and
mov
push
daa
into
dec
ja
dec
std
inc
jbe
(bad)
loope
sbb
dec
imul
and
aas
pop
jno
inc
dec
pop
push
dec
cmps
adc
(bad)
movs
or
stos
fistp
push
inc
fs
mov
test
cmps
sahf
or
pushw
dec
cli
adc
addr16
dec
cdq
xchg
push
inc
mov
adc
push
loope
ja
pop
and
(bad)
jns
jmp
xlat
ret
mov
pusha
and
jge
xchg
scas
mov
push
in
data16
clc
in
lock
sub
mov
outs
loopne
(bad)
cmp
push
enter
push
scas
push
imul
dec
and
jae
pop
out
std
ins
dec
push
or
loope
push
xchg
daa
(bad)
aaa
ins
shr
pop
pop
shl
pop
adc
pop
in
adc
icebp
jo
repnz
jne
pop
retf
mov
mov
retf
mov
sbb
daa
aas
mov
mov
cmp
jecxz
cli
sub
cld
mov
pminub
mov
jecxz
sahf
sahf
cs
fnstenv
xchg
push
xor
dec
ret
loope
in
push
mov
ret
jl
out
(bad)
mov
fstp
mov
mov
mov
mov
fadd
fstp
adc
jle
xor
inc
sub
push
fidivr
in
fldenv
imul
lahf
cs
pushf
add
(bad)
call
xchg
dec
mov
arpl
xchg
enter
test
(bad)
xchg
mov
js
test
inc
jb
push
push
scas
movs
add
adc
scas
daa
jno
aaa
pusha
pop
(bad)
jno
aam
stc
outs
icebp
mov
aam
push
dec
add
xchg
cmps
(bad)
cmps
movs
inc
or
btc
shl
or
add
cli
cdq
pop
pop
ror
outs
jo
movs
xchg
movs
inc
add
shl
sub
ret
or
xchg
js
sbb
mov
fild
mov
jno
out
iret
inc
test
iret
bound
adc
jno
sub
or
loope
bnd
mov
jbe
xor
jmp
cmp
cmp
xor
add
mov
add
inc
dec
fstp
shr
mov
dec
cmp
mov
jp
cs
pop
push
jno
add
xchg
mov
adc
jp
xor
cmp
mov
les
pop
cmp
sub
pop
cmp
sbb
sbb
js
retf
rol
and
jecxz
inc
mov
sar
adc
mov
add
xlat
repz
and
test
inc
repz
mov
cdq
loope
jmp
adc
pop
jno
inc
mov
jns
iret
cmp
movs
mov
retf
xor
test
xor
mov
lahf
inc
in
sahf
loop
pop
adc
dec
ds
jmp
or
xchg
fdivr
xor
scas
inc
out
shl
jmp
push
aam
add
sbb
mov
fdivp
mov
dec
ret
dec
ja
dec
ds
movs
arpl
xor
pop
xchg
jb
shl
mov
ror
lea
add
sbb
jo
inc
jge
(bad)
cli
jns
mov
push
xchg
pop
adc
mov
cmp
out
mov
shr
mov
loope
mov
fistp
mov
loope
fdiv
push
popf
adc
out
inc
movs
push
sbb
push
adc
or
xor
and
das
mov
jge
and
icebp
dec
jb
in
add
jae
or
dec
loopne
inc
dec
and
mov
xchg
or
(bad)
movs
das
cld
fiadd
sub
or
popf
adc
fidiv
loop
sbb
xchg
xchg
enter
test
aaa
xor
inc
mov
imul
lods
(bad)
pop
hlt
push
call
push
adc
cmc
mov
addr16
int
pop
jecxz
leave
add
loop
dec
pop
ins
xor
call
lods
push
cmp
cmp
leave
fwait
aas
cdq
fsubr
out
scas
adc
in
in
sar
into
imul
aad
add
push
mov
cmps
out
xor
out
sbb
ret
adc
movs
add
inc
xchg
xabort
xor
stc
rol
inc
rcr
mov
cli
adc
cdq
and
jge
and
aad
jl
sti
jae
inc
mov
bound
pop
xor
sbb
stos
cmp
cli
loop
jle
inc
cld
jb
mov
in
ja
and
mov
jge
sub
loopne
sub
ret
mov
add
arpl
or
loope
xchg
xchg
jno
dec
dec
jne
add
pop
stos
and
sbb
xor
adc
sub
mov
xchg
pop
jl
pop
sub
mov
inc
cmc
call
clc
inc
sbb
cmp
or
cmps
jle
dec
jbe
fwait
jbe
xchg
add
daa
ret
xchg
or
outs
push
repz
lds
jg
out
jae
lock
mov
mov
mov
and
(bad)
cmp
jl
jg
cdq
dec
int
jne
vpcmpeqb
cmp
nop
add
sub
sub
cmps
xor
mov
scas
cs
sbb
lahf
push
(bad)
mov
sub
lock
(bad)
cmc
(bad)
dec
loop
pop
push
mov
sub
adc
push
and
add
adc
fbld
sbb
(bad)
movs
test
iret
mov
cmp
fs
arpl
inc
sbb
clc
int3
dec
jb
push
lea
sti
stos
jns
hlt
push
ins
stc
cmps
xchg
(bad)
and
dec
out
cs
and
push
inc
loopne
push
mov
dec
cmp
aam
xor
add
outs
and
out
jmp
xor
mov
int3
pusha
sbb
adc
not
xchg
popf
or
mov
and
pop
stos
(bad)
dec
push
into
stc
or
pushf
xchg
(bad)
fdiv
lahf
cmp
sub
out
inc
mov
fild
or
in
enter
enter
sbb
push
adc
sti
xor
in
add
push
adc
jb
dec
sbb
inc
int3
cwde
add
stc
sub
addr16
ror
int
je
and
or
jns
inc
mov
sbb
xchg
pop
(bad)
ret
xchg
xchg
xchg
fcmove
out
jl
jae
and
jecxz
fs
add
cdq
retf
mov
mov
shl
jge
in
fcmove
js
das
rcr
dec
mov
adc
inc
test
mov
movs
sbb
das
mov
pushf
sbb
rcr
data16
push
xchg
enter
fbld
mov
xchg
add
mov
(bad)
ins
mov
cmps
popa
cwde
bswap
sub
lods
(bad)
mov
fstp
ins
xor
pop
jne
stos
scas
sahf
stos
mov
sti
xchg
cmc
outs
sbb
push
mov
jo
xchg
push
xchg
cs
stc
push
bound
test
lds
(bad)
imul
lds
mov
mov
pop
dec
mov
push
push
scas
sub
stc
push
mov
in
jb
adc
fwait
mov
jne
fdiv
jnp
cmp
movs
fidivr
add
xchg
push
sub
or
sub
and
jmp
sbb
js
push
push
sub
xor
sahf
shl
repz
fnstenv
inc
js
xchg
add
aam
test
mov
fstp
push
push
push
out
fstp
movs
or
mov
push
add
outs
outs
and
je
jo
push
gs
jo
inc
popa
je
and
xor
sub
sub
add
add
ret
inc
add
sbb
pop
jle
add
and
add
xor
mov
repz
(bad)
loop
ins
add
or
scas
and
fadd
pop
push
and
cmp
es
pusha
shr
cdq
adc
pop
retf
fwait
imul
and
add
dec
mov
cmp
bound
sub
mov
mov
cmp
push
mov
hlt
les
adc
jnp
pop
cmp
push
lock
xor
dec
sub
out
cmp
sub
ins
sub
and
inc
or
mov
or
add
xchg
or
add
test
mov
sub
movs
mov
jno
jne
cmps
mov
add
hlt
xor
sbb
pop
pop
nop
hlt
mov
enter
fwait
dec
pusha
mov
mov
aaa
adc
cdq
repnz
mov
ins
clc
stos
add
or
push
lods
mov
add
cld
js
adc
jmp
push
and
popa
add
mov
cmp
sbb
fldenv
add
mov
dec
movd
out
sbb
xor
inc
out
cmp
mov
jp
mov
jne
cmp
pushf
mov
dec
loop
sub
mov
cmp
in
cwde
jb
les
dec
and
lock
mov
test
push
outs
int3
shl
mov
and
data16
inc
cli
mov
sar
call
xchg
jecxz
cwde
fcomp
mov
jg
adc
sub
mov
pusha
mov
sub
adc
lock
inc
pop
add
inc
pop
mov
shl
sbb
adc
aam
add
mov
mov
or
aad
into
bnd
outs
xchg
jns
jle
rcl
inc
mov
cmp
xchg
hlt
inc
cmps
or
sbb
scas
jl
jg
mov
xchg
push
stos
sub
xchg
or
adc
sub
push
adc
sbb
lods
mov
aad
icebp
ror
mov
or
loopne
ret
jno
inc
lahf
fst
jp
mov
jae
pop
pop
(bad)
sub
sbb
ja
jge
and
xchg
or
mov
lds
int3
out
les
push
push
ja
imul
mul
out
cs
in
movs
push
mov
vpavgb
jmp
daa
mov
add
jbe
dec
test
(bad)
mov
je
jmp
sbb
dec
or
jo
loope
inc
enter
cs
push
mov
mov
xchg
push
ror
(bad)
cdq
mov
cmps
mov
jecxz
retf
push
je
shl
pop
adc
push
push
rol
leave
movs
dec
rcl
add
gs
sub
cmps
inc
ror
push
xor
lock
mov
into
mov
pusha
das
pop
iret
sub
popa
stc
xor
cmp
scas
push
cmp
aam
outs
aas
dec
fdiv
or
imul
jmp
stos
ja
mov
cbw
rol
xor
popa
std
inc
jnp
pop
mov
test
inc
pusha
mov
loope
dec
mov
xchg
nop
ret
or
sbb
jge
cmp
mov
mov
or
test
sub
mov
mov
pop
cmp
xchg
sub
test
pusha
or
(bad)
icebp
inc
xchg
aas
fist
or
xchg
call
dec
mov
fdivr
dec
fisubr
ins
add
lods
sbb
mov
inc
push
pop
mov
test
xor
clc
sub
xchg
mov
xor
ss
cmp
push
jno
sub
test
retf
pop
jbe
lea
dec
enter
or
dec
test
ficom
popf
pop
movs
push
fild
mov
push
and
(bad)
nop
and
pusha
mov
push
xor
rol
clc
push
mov
mov
inc
int3
xchg
mov
int3
add
ds
push
inc
imul
dec
and
add
lods
aas
mov
xor
jg
inc
inc
mov
stc
mov
adc
dec
add
ficomp
fdivr
adc
mov
out
xchg
and
and
and
fs
repz
xchg
lods
rcr
mov
fdiv
push
dec
ror
push
ds
inc
cmp
pop
ja
ret
xor
ret
sbb
ror
jmp
xor
pop
jbe
test
jmp
ins
aaa
dec
jns
jp
xor
cmp
retf
aad
mov
push
fcom
push
test
inc
jbe
aaa
push
frstor
inc
test
mov
mov
mov
push
inc
jge
fwait
add
jne
sub
hlt
iret
jmp
mov
call
repnz
xchg
loop
dec
cmp
mov
lds
scas
out
imul
jp
xor
jbe
dec
cmps
xchg
sub
inc
mov
push
ret
or
mov
adc
jmp
mov
adc
cli
in
stos
movs
retf
mov
mov
xlat
adc
add
lods
test
xchg
jg
jbe
cmove
add
xchg
sti
mov
xchg
clc
in
dec
inc
inc
and
mov
cli
jne
loope
pop
xor
sbb
jecxz
cmp
jmp
pop
xor
pop
adc
imul
in
popa
sbb
pushf
and
jmp
push
icebp
dec
or
ret
es
push
idiv
push
sub
and
jns
ins
and
adc
jle
lahf
cmp
pop
imul
test
mov
aam
cmc
outs
dec
cmc
movs
dec
das
xor
add
jp
rol
pop
or
sbb
pop
sbb
xlat
mov
jmp
test
push
push
pusha
int
pop
movs
push
aaa
xchg
pop
cmp
dec
mul
add
push
or
shr
shl
or
mov
jmp
jmp
push
cmc
sbb
adc
shr
fstp
jle
jo
push
stos
hlt
dec
das
jmp
ss
or
mov
(bad)
mov
retf
add
aad
ret
outs
mov
xchg
mov
inc
test
ret
adc
int
lahf
call
mov
call
inc
xchg
pop
xor
(bad)
xor
aam
sbb
sub
lods
ins
mov
push
popf
mov
push
and
mov
iret
loopne
ret
and
sahf
out
lods
push
movs
and
pusha
jae
jecxz
sbb
std
call
mov
adc
test
cmp
fcom
lahf
mov
add
push
pop
sub
in
in
add
stos
(bad)
cdq
adc
pop
inc
xchg
jb
sbb
jbe
call
hlt
pop
mov
pop
cmp
mov
cwde
mov
sbb
sbb
push
mov
cmps
mov
cmps
aas
xchg
in
iret
mov
inc
js
out
cmp
outs
cdq
loop
or
sbb
inc
cli
(bad)
(bad)
mov
jnp
mov
add
repz
pop
outs
mov
std
pop
mov
adc
push
(bad)
or
ins
mov
sub
repnz
aam
dec
je
mov
es
xchg
outs
je
test
test
inc
mov
dec
repz
in
lods
(bad)
mov
mov
in
mov
sub
or
inc
(bad)
add
mov
mov
aad
sub
inc
mov
or
xor
push
imul
mov
les
inc
dec
xchg
mov
cmp
mov
mov
cmp
rol
and
movs
sbb
sbb
outs
clc
imul
mov
jmp
xchg
das
inc
adc
push
jno
outs
fld
push
jae
jno
test
push
mov
cld
out
push
out
arpl
xor
cmp
and
loope
add
loop
test
pop
movs
pop
in
call
lahf
fst
push
mov
fild
push
and
mov
xor
icebp
repz
pop
fidiv
push
xor
sar
and
je
xchg
mov
outs
fs
mov
add
(bad)
mov
inc
lods
cmp
add
jmp
es
in
fs
sub
jbe
mov
jb
test
sub
mov
movs
mov
jmp
test
pop
adc
mov
dec
mov
cmp
sbb
adc
adc
dec
test
dec
push
and
cmp
xchg
pop
and
xor
aas
and
loop
push
jo
jns
jecxz
push
jbe
mov
(bad)
int
call
in
xchg
lods
leave
sub
addr16
mov
or
mov
arpl
int
movs
mov
stos
or
mov
pop
jge
fst
add
mov
ret
mov
mov
mov
xchg
cmp
bound
movs
mov
das
popf
aaa
nop
dec
add
xchg
icebp
mov
pop
xchg
mov
pop
out
int3
push
jbe
not
int
xor
sub
mov
mov
test
and
add
mov
push
push
in
dec
xchg
cmp
es
jae
div
outs
call
aaa
xor
iret
imul
or
jg
adc
sbb
mov
inc
das
lds
leave
stc
inc
cld
cld
imul
call
pop
cmp
sti
repz
pop
stos
jg
inc
movs
pop
jp
int
inc
xor
out
xor
add
(bad)
fld
add
int
je
lods
add
lods
into
inc
inc
and
rol
aaa
mov
mov
push
sub
es
sub
xor
lods
and
push
(bad)
mov
stos
inc
mov
(bad)
lods
jnp
div
jmp
inc
and
mul
inc
in
ret
mov
xchg
in
push
scas
or
dec
scas
aaa
pusha
(bad)
cli
in
ds
ja
fs
sub
call
add
dec
(bad)
adc
push
jle
scas
mov
cld
clc
lea
add
dec
xor
je
mov
bound
inc
int
pop
mov
fs
adc
out
push
inc
les
xor
push
test
cmps
ficomp
mov
js
or
lds
mov
push
xchg
xchg
jae
xchg
scas
xchg
cs
mov
xchg
ins
sbb
popa
fwait
into
pop
adc
enter
push
dec
mov
jmp
ret
ds
dec
mov
add
jmp
repnz
mov
inc
out
pop
lea
test
inc
sub
addr16
loope
in
adc
sub
test
fstp
xchg
fcomp
(bad)
jbe
inc
je
push
xor
inc
in
test
xchg
jl
mov
repz
jb
mov
cmp
mul
aad
jge
pop
cmp
mov
inc
in
dec
add
jg
xor
mov
sbb
mov
loope
add
inc
loop
lea
jmp
jo
sbb
js
add
or
push
adc
inc
mov
fstp
jbe
pop
iret
out
fiadd
hlt
xchg
jp
mov
sub
inc
xchg
rcr
xor
ret
daa
pop
pop
neg
inc
cmc
ss
loope
lea
cmp
js
out
cmp
stos
ret
rol
push
xchg
push
aas
std
imul
cmp
out
(bad)
push
xchg
dec
mov
add
(bad)
cmp
test
ins
add
xor
inc
xchg
mov
pop
mov
lods
push
scas
jecxz
xchg
rol
mov
mov
mov
(bad)
rol
sbb
icebp
jae
int3
ss
lock
push
and
or
pop
xchg
mov
xchg
jbe
lea
test
(bad)
loope
loope
lds
in
addr16
(bad)
mov
add
or
fadd
mov
loopne
mov
ds
data16
or
mov
cmp
inc
frstor
ret
or
dec
repz
repnz
(bad)
mov
fcmovu
dec
imul
or
xchg
data16
adc
or
and
fld
bound
int
xor
jmp
rcl
cmp
mov
push
dec
ins
pop
cmp
lock
mov
xchg
xchg
push
fld
adc
and
xchg
bnd
fistp
add
test
fiadd
popa
je
xchg
aad
push
hlt
mov
mov
xlat
popa
in
mov
out
enter
ss
es
mov
loope
sub
sbb
pop
add
jmp
or
sub
xchg
fstp
mov
pop
scas
dec
pop
loopne
std
xchg
dec
ins
(bad)
push
mov
inc
add
cmp
push
ret
dec
inc
xor
mov
movs
movs
test
add
cmp
pop
pop
nop
(bad)
gs
and
dec
repz
les
push
or
mov
sbb
test
mov
mov
mov
out
adc
popa
sub
aas
stos
or
aam
mov
jmp
jecxz
sti
adc
inc
xor
je
(bad)
xchg
(bad)
ins
cmp
adc
fisubr
sub
and
enter
ret
sub
mov
or
jg
and
jge
xlat
popf
arpl
shl
xor
loopne
pop
lock
or
in
or
push
out
pusha
sub
rol
push
outs
pop
nop
aaa
rcl
test
out
push
add
or
popf
jo
xchg
movs
stos
xchg
aaa
leave
push
or
lahf
add
in
lea
rcl
shl
das
in
xchg
lock
in
repnz
push
iret
imul
mov
retf
retf
sub
aad
jns
adc
mov
pop
fucom
pop
sbb
inc
sub
fdivr
dec
aad
fnstcw
inc
dec
mov
or
int
(bad)
pusha
scas
mov
lds
mov
ins
pop
mov
mov
xor
pop
sub
add
mov
fbld
pop
dec
repnz
jmp
mov
js
xor
push
mov
sub
addr16
(bad)
push
sbb
(bad)
mov
(bad)
aaa
sub
mov
or
mov
sub
mov
mov
or
mov
in
mov
idiv
ds
call
(bad)
sub
imul
push
xchg
mov
(bad)
out
lods
pop
ja
mov
inc
cmp
rcl
push
int
or
adc
dec
push
xor
(bad)
xchg
or
sti
jl
xlat
cs
das
cmp
cwde
scas
mov
cmps
data16
dec
jg
mov
xor
fiadd
imul
jno
add
call
je
dec
enter
push
add
pop
inc
ficomp
jns
push
arpl
sub
sahf
jle
(bad)
sbb
daa
jp
adc
hlt
clc
or
mov
mov
cmp
push
les
mov
sbb
add
push
pushf
call
cs
bound
jae
jns
popf
inc
and
inc
test
test
imul
adc
js
and
aam
pop
out
enter
mov
pop
push
enter
mul
fwait
fs
ret
rol
mov
jmp
inc
sub
xor
clc
adc
pop
jg
mov
adc
xlat
lock
dec
test
mov
xchg
or
bound
(bad)
xchg
cmps
or
int
xchg
and
sahf
outs
stos
repnz
sub
sub
hlt
push
xor
dec
mov
sar
pusha
mov
xchg
ds
or
stos
adc
xor
add
out
sub
mov
add
outs
nop
int
adc
popa
inc
mov
jecxz
sub
retf
xchg
test
inc
fs
mov
jae
loopne
int
mov
in
lahf
sub
mov
outs
xchg
addr16
xlat
mov
push
scas
xlat
lea
aaa
mov
jbe
and
jb
dec
jb
das
sbb
xlat
add
mov
pop
gs
jmp
ret
mov
ret
jge
retf
out
rcr
hlt
test
mov
test
push
mov
sbb
fisttp
adc
jae
call
sub
movs
cmp
cdq
cmps
push
leave
mov
push
mov
jp
call
cmp
mov
je
add
sub
(bad)
das
jmp
lods
sub
dec
cwde
and
cli
lods
(bad)
mov
(bad)
inc
call
mov
push
out
mov
xor
jmp
pop
mov
popa
push
stos
adc
adc
scas
(bad)
nop
jl
mov
addr16
jecxz
scas
sbb
sti
xchg
mov
ss
or
sub
adc
mov
(bad)
inc
sbb
or
not
movs
test
inc
mov
xchg
pop
jns
dec
stos
test
mov
pop
shr
pop
retf
aad
inc
int
dec
sbb
js
sbb
mov
call
das
loop
shl
pop
movs
stos
scas
das
push
dec
adc
inc
or
jle
retf
in
test
mov
mov
xchg
retf
dec
pusha
(bad)
and
mov
xor
jp
inc
pop
add
xlat
inc
movs
fcomp
jmp
inc
xor
and
imul
into
or
mov
cmp
mov
je
repnz
shr
sub
int
or
push
and
xchg
mov
cld
or
sbb
cmp
fsub
sahf
push
loopne
lock
loopne
hlt
fild
cmp
xor
jbe
inc
shr
mov
dec
cld
pop
(bad)
aam
mov
dec
outs
mov
repz
imul
xor
mov
inc
(bad)
fst
dec
jmp
adc
movs
inc
cmp
push
push
or
fsub
lock
xor
out
adc
mov
xor
int3
dec
sbb
mov
cdq
mov
aas
add
imul
int3
in
fsub
shr
dec
xor
pop
pop
pop
arpl
pop
sbb
repnz
sbb
push
add
inc
jg
pop
push
jecxz
es
jecxz
jae
fsubrp
int
(bad)
aam
mov
xchg
pop
aad
cld
dec
mov
push
mov
cmp
mov
push
nop
push
jecxz
sahf
dec
lods
add
call
dec
pop
push
mov
daa
mov
test
push
cdq
xchg
sbb
inc
pop
and
out
jae
adc
cdq
inc
xchg
addr16
jns
mov
xchg
mov
icebp
xor
adc
cmc
dec
mov
jmp
dec
mov
movs
outs
lods
mov
adc
and
fistp
add
push
int
pop
shl
aad
dec
test
movs
cli
ins
inc
push
ret
sbb
inc
sub
dec
xor
sbb
lock
or
mov
(bad)
cmp
and
aaa
sar
shr
sub
inc
xchg
out
and
shl
pop
lahf
int3
xor
dec
outs
test
push
mov
inc
pushf
sbb
dec
loop
jnp
sbb
scas
cmp
mov
and
and
pushf
inc
movs
sub
fcmovnu
push
jbe
loopne
pop
add
mov
enter
jbe
mov
xchg
call
adc
jmp
sahf
xor
ds
sub
fcom
cmc
cmp
aad
push
cs
fdiv
jne
mov
fiadd
out
dec
or
movs
push
hlt
jmp
and
aad
ins
xchg
mov
mov
stc
stc
pop
inc
adc
fcmovu
mov
dec
ja
mov
sysexit
jl
cdq
in
in
dec
jno
(bad)
xlat
or
shl
call
mov
je
cmp
clc
inc
cmc
mov
jbe
test
imul
sbb
std
iret
adc
push
and
adc
ror
jl
aas
mov
mov
pop
gs
pop
adc
push
adc
loop
daa
stos
xor
mov
test
mov
ja
dec
cmc
pop
inc
shr
xchg
add
jp
out
cmc
das
sub
movs
test
scas
push
adc
xchg
in
daa
sbb
push
lahf
addr16
fstp
rol
popa
push
cmp
jae
fwait
jb
push
outs
dec
es
cs
shl
addr16
sub
cmp
and
popa
dec
xor
add
mov
dec
and
sub
inc
cmp
jnp
adc
scas
in
push
mov
add
push
sbb
test
in
xchg
fsubr
pop
call
xor
bound
sub
dec
mov
sbb
retf
pop
out
retf
adc
mov
mov
pop
outs
out
loope
xchg
xchg
jbe
and
and
mov
sbb
pop
loopne
popa
movs
loope
ds
and
jne
mov
test
pop
sar
cmp
scas
jmp
mov
stos
push
xchg
leave
pop
mov
scas
sub
inc
xchg
(bad)
retf
cmp
out
push
fistp
adc
add
adc
mov
call
push
movs
ss
inc
inc
cld
mov
xchg
sbb
in
push
sbb
arpl
inc
daa
xchg
mov
xchg
call
sub
pop
ja
fucomip
dec
popa
xchg
aaa
mov
jns
jg
inc
jnp
sub
scas
pop
mov
mov
mov
jb
js
lahf
int3
shl
out
jmp
sub
sbb
fldcw
(bad)
leave
cmps
mov
inc
out
cdq
push
stos
mov
daa
sub
mov
jmp
fmul
jo
(bad)
(bad)
jmp
pop
addr16
jnp
jg
pop
sbb
inc
inc
sbb
mov
jns
aas
ins
fsub
inc
mov
ins
sahf
jae
sbb
push
aas
js
loopne
mov
cmc
xor
cli
or
jmp
sbb
and
jo
stos
out
repz
xor
mov
push
jno
in
ss
sub
lods
out
stc
jmp
(bad)
stos
add
leave
sbb
adc
nop
(bad)
mov
push
cmps
dec
lea
sub
leave
(bad)
(bad)
xchg
cmp
xor
jo
jno
fnstsw
dec
mov
and
imul
(bad)
imul
ins
stc
or
call
ja
push
mov
cld
and
inc
add
xor
sub
dec
and
mov
mov
pop
inc
call
sar
dec
bound
sbb
mov
mov
idiv
pop
repnz
pop
js
xchg
idiv
hlt
xor
or
lods
push
lds
inc
sub
popf
add
imul
jno
sbb
clc
sub
inc
aad
adc
push
pop
ficom
test
rcr
aas
jmp
ret
icebp
cli
pop
scas
data16
leave
daa
push
push
outs
xchg
lds
cli
ret
data16
mov
or
add
ins
loopne
leave
mov
out
mov
and
push
dec
es
jbe
bound
je
jmp
inc
pop
pop
fmul
rcr
lds
out
mov
cmp
les
pop
or
ret
jno
push
pop
fmul
mov
out
cld
mov
popf
sbb
mov
mov
inc
mov
mov
or
int3
retf
inc
in
mov
mov
jl
or
jmp
sub
jbe
xchg
xlat
or
test
lahf
adc
pusha
(bad)
or
adc
ror
iret
pop
jmp
cmps
hlt
iret
shr
or
or
mov
enter
xchg
fidivr
aas
pop
push
inc
sbb
pop
idiv
ins
cmp
sahf
fcom
arpl
fwait
sbb
sbb
ret
jmp
out
je
or
leave
ret
xor
out
mov
sbb
imul
les
test
in
adc
mov
mov
and
mov
xchg
add
add
das
dec
dec
ret
add
loope
pop
jecxz
jno
adc
(bad)
into
push
ins
pop
mov
dec
jnp
pop
pop
pop
jne
ins
adc
push
sbb
jecxz
mov
mov
sbb
sar
sbb
iret
imul
in
aas
adc
pusha
mov
dec
dec
sub
sar
std
pop
ret
arpl
aad
mov
or
cdq
inc
bound
add
fmul
push
dec
dec
xor
dec
mov
xchg
(bad)
jb
xchg
int
shr
add
sbb
dec
and
js
mov
jb
aad
sub
pop
xchg
retf
out
or
jmp
mov
aaa
pop
shr
sahf
or
je
lds
pop
cmps
dec
pop
dec
lods
sub
jecxz
sbb
pop
out
movs
mov
xor
ret
add
pop
lods
lods
loopne
jl
dec
sbb
pop
or
push
test
xchg
cmp
pusha
retf
mov
loop
inc
cmp
pop
or
xor
add
stc
aam
out
lods
sub
mov
mov
jno
js
sahf
sub
cmc
inc
sbb
mov
ja
sbb
fsubr
push
jecxz
movs
pop
mov
jne
pop
mov
js
mov
jmp
push
ins
pop
nop
std
and
sbb
xor
stos
icebp
and
sahf
sub
lds
push
jge
js
and
and
call
fsub
jnp
jle
scas
add
js
push
mov
dec
add
mov
loope
jo
retf
sub
fbstp
inc
jne
loope
pop
mov
add
and
sbb
loop
lods
sbb
inc
and
adc
ins
popf
lock
pop
cmp
mov
or
outs
aaa
mov
js
mov
int3
jle
jp
add
sbb
mov
jl
jb
jle
xchg
jl
pop
push
sbb
outs
inc
push
ret
fs
into
inc
pop
int
push
movs
mov
(bad)
lods
rcl
mov
popa
ins
mov
(bad)
jne
or
adc
jae
shr
cmp
lods
dec
and
adc
(bad)
(bad)
stos
addr16
in
lds
sub
ins
repnz
jl
gs
shr
and
jno
mov
mov
cli
push
inc
xchg
mov
in
fcom
pop
jg
push
xor
mov
mov
ss
mov
or
mov
out
rol
lea
test
gs
push
pop
and
jmp
(bad)
xchg
imul
mov
inc
pop
outs
jae
lods
mov
popf
cmps
or
test
sbb
cs
xor
pop
daa
add
xor
enter
(bad)
mov
and
dec
push
test
xlat
mov
mov
je
out
stos
inc
(bad)
adc
aas
fisttp
pop
(bad)
in
jg
fs
mov
mov
in
xchg
ret
data16
mov
les
jb
pop
dec
es
inc
push
rcr
pop
aad
retf
inc
out
add
xor
call
xchg
je
(bad)
xor
mov
pop
sbb
add
fwait
ret
leave
(bad)
xchg
dec
push
popa
or
daa
fisttp
pop
cmp
pop
(bad)
scas
cmp
xor
daa
mov
lahf
aam
xlat
movs
adc
add
(bad)
mov
mov
cmp
(bad)
and
mov
jp
sahf
xchg
dec
js
(bad)
lods
dec
inc
mov
outs
or
sar
mul
in
or
adc
xor
xor
mov
mov
lahf
outs
push
lds
sti
pusha
leave
jae
push
cdq
neg
mov
test
and
adc
push
and
dec
pop
cmps
fcomp
mov
mov
int3
stos
(bad)
in
sub
imul
xor
out
cdq
add
(bad)
popa
fs
leave
add
add
mov
add
(bad)
mov
cmp
(bad)
mov
sbb
mov
push
mov
inc
or
add
data16
dec
mov
add
movs
(bad)
adc
loopne
aad
je
stos
mov
lahf
sub
adc
int
sbb
movs
sub
xor
stos
jno
dec
cmp
aad
scas
adc
fld
sub
test
inc
dec
jmp
retw
dec
int
cmps
imul
add
add
and
xor
sbb
cwde
and
add
and
jnp
outs
and
mov
xor
int
push
sub
dec
(bad)
xchg
inc
jmp
hlt
(bad)
outs
jmp
push
into
dec
xor
mov
icebp
xchg
push
jnp
mov
or
push
aaa
jno
fadd
fwait
pop
add
fbstp
mov
lock
xlat
push
xchg
xor
(bad)
pop
js
jecxz
fcmovne
lahf
cmp
mov
push
mov
or
ret
aaa
fwait
push
pop
(bad)
js
mov
aas
mov
xchg
jo
dec
push
loop
inc
pop
shl
into
xor
push
gs
mov
push
test
push
xchg
in
bound
cmp
out
stos
xor
inc
enter
stos
or
xchg
sub
leave
inc
push
pop
es
sub
push
push
sub
arpl
xchg
leave
call
and
test
push
jno
aam
jmp
cwde
sub
stc
mov
(bad)
pop
add
xchg
sub
pushf
shr
lea
jmp
test
cmp
mov
inc
lea
jle
inc
adc
stos
ficom
int3
test
clc
stc
sar
stos
je
aas
inc
sti
jb
ins
dec
daa
xchg
test
je
xor
push
push
cli
sub
inc
pop
aam
dec
lods
pop
or
add
(bad)
jb
scas
xchg
xor
jno
ja
or
fld
neg
fwait
push
pop
dec
data16
inc
xchg
ret
jmp
push
rcl
jne
pop
mov
movs
fisubr
jno
mov
mov
mov
push
fadd
xor
in
lods
dec
mov
out
mov
out
sahf
aas
sahf
jno
sub
test
mov
(bad)
xchg
leave
punpckhbw
ja
and
pop
enter
adc
mov
and
pop
push
movq
dec
retf
stos
or
out
(bad)
sti
or
add
mov
rol
stos
inc
into
or
mul
push
popa
sub
cmps
hlt
xchg
xchg
stos
(bad)
sti
cmps
adc
adc
mov
mov
cmps
sub
cli
sbb
repnz
cmp
sub
xchg
retf
add
cld
xor
push
or
test
jne
dec
dec
jg
repnz
bound
mov
or
and
adc
sub
mov
test
push
jmp
mov
push
adc
jb
les
pop
(bad)
es
movs
jecxz
fdivp
jg
das
pop
push
mov
mov
mov
cs
mov
iret
jbe
or
jle
(bad)
outs
cli
push
xchg
repnz
cli
or
xchg
mov
jmp
cmp
imul
jo
mov
(bad)
xchg
cld
mov
outs
stos
scas
call
add
xchg
push
or
fs
add
mov
ins
lods
(bad)
fbld
sbb
jnp
mov
and
imul
jp
in
ds
xor
jmp
fldenv
adc
cmp
movs
jbe
sbb
cmp
test
jmp
inc
adc
mov
inc
jbe
aas
test
in
jmp
mov
and
dec
jno
pop
xchg
imul
clc
call
push
jp
add
sahf
bound
popa
js
js
out
adc
sub
push
sbb
stos
jge
movs
imul
outs
pop
mov
jp
std
inc
nop
add
out
cmp
push
inc
jp
pop
je
inc
cwde
inc
sub
into
mov
mov
jae
shl
outs
in
dec
(bad)
jge
mov
xor
jb
in
mov
mov
lds
mov
inc
shl
xchg
jecxz
sub
and
rol
mov
sahf
ret
lock
imul
or
mov
out
mov
add
add
cmp
add
jg
and
pop
loop
retf
mov
adc
mov
loop
fstp
mov
cwde
test
idiv
int3
rcr
lods
fisttp
clc
repz
push
xor
cwde
loopne
(bad)
std
xor
cmp
jg
stc
mov
jl
aas
out
mov
and
(bad)
pop
int
adc
jg
sahf
or
out
pusha
in
fiadd
add
cmp
data16
sub
jno
dec
or
icebp
repnz
(bad)
sub
popa
rcr
aaa
pusha
adc
sbb
push
pop
dec
clc
fs
loope
out
cmps
es
mov
dec
xchg
std
cwde
ins
(bad)
dec
inc
cli
aaa
fucomp
sahf
daa
or
push
fdiv
sub
stc
in
dec
popa
int3
leave
mov
sub
pop
fnstsw
mov
jmp
xor
ret
out
jns
nop
or
dec
loop
(bad)
pop
cld
(bad)
and
enter
pop
retf
jno
sbb
iret
xchg
in
xor
int
arpl
lds
or
xor
jb
in
xor
(bad)
mul
dec
sub
aaa
mov
bound
dec
(bad)
out
mov
jae
xor
xchg
fistp
sahf
sub
cld
mov
pushf
cld
push
mov
push
pusha
dec
fs
jle
mov
adc
sbb
sub
mov
in
and
mov
dec
pop
rcr
pop
mov
lea
sahf
inc
daa
(bad)
out
das
mov
outs
push
rcr
sub
inc
ins
xchg
arpl
cmp
(bad)
shl
enter
jmp
mov
cmp
call
cmp
push
inc
sbb
imul
imul
inc
jle
mov
clc
push
ror
ds
and
ds
sbb
in
aam
arpl
inc
mov
push
jae
add
sbb
xchg
pop
cmps
rcl
fdivr
outs
cmc
mov
pop
inc
call
test
lahf
jg
scas
test
pop
fdivr
push
xor
pushf
std
push
adc
mov
mov
and
mov
push
mov
scas
sbb
sti
xor
xor
int
sub
imul
jo
shl
cs
fwait
xor
std
sbb
mov
js
pop
in
shl
imul
mov
cmp
mov
lds
mov
ja
in
jmp
test
cmc
xchg
mov
cmp
sub
pop
dec
mov
add
push
icebp
xchg
xor
push
daa
cmp
jmp
out
(bad)
mov
inc
xor
test
jg
or
cwde
enter
push
ja
adc
xor
aad
push
add
dec
fimul
retf
inc
sahf
out
and
pop
pop
jle
out
xor
sub
sbb
dec
aas
adc
fsub
test
jbe
xchg
aam
adc
xor
mov
imul
add
call
jl
jae
mov
jae
mov
test
inc
adc
in
mov
dec
adc
mov
mov
loope
test
xrelease
fistp
jae
push
cld
mov
ins
sahf
inc
out
call
retf
and
jo
push
lahf
ret
jo
cdq
outs
cmp
popa
sbb
mov
retf
shl
popf
aad
push
push
xchg
mov
out
jnp
in
and
das
shl
mov
sbb
or
(bad)
icebp
(bad)
pop
fnstenv
ror
rol
xchg
xor
sbb
jne
nop
mov
into
jnp
xor
inc
cmp
lds
xchg
mov
jno
mov
jbe
rcr
add
adc
adc
pop
mov
(bad)
sbb
pop
xchg
(bad)
sub
jle
xchg
mov
loop
test
out
(bad)
push
and
lods
push
repnz
xchg
pop
jnp
sub
and
or
jbe
add
jp
fadd
pusha
inc
jmp
sbb
jne
xor
fs
push
push
cs
jl
daa
in
push
xchg
inc
es
cmps
mov
popf
test
cli
jne
xchg
mov
paddw
ds
adc
inc
outs
gs
jb
mov
stos
sub
add
dec
push
loope
sbb
and
adc
inc
jne
mov
lds
(bad)
out
mov
fcomp
jae
cs
aas
cmp
sbb
in
xor
inc
stos
xor
add
mov
push
scas
iret
xchg
ret
scas
fs
aad
pop
xchg
mov
(bad)
mov
jne
fdiv
enter
push
mov
sub
xchg
test
mov
arpl
cmp
mov
hlt
xlat
jns
fisttp
lahf
adc
outs
and
mov
or
ins
icebp
push
popf
push
bound
std
into
ins
jae
call
push
shr
test
xor
mov
mov
ficomp
pop
mov
inc
jne
fbld
mov
adc
sahf
mov
jecxz
sub
pusha
lock
add
cs
pop
sub
cmps
jno
data16
xchg
and
in
stos
ffreep
cmp
sub
cdq
push
mov
xchg
jl
mov
fmul
add
cmp
inc
cmp
or
push
xchg
cmp
mov
jl
lods
cmp
pop
pmulhuw
or
stos
sar
or
int3
retf
xchg
scas
aad
jmp
pop
sub
adc
fnstsw
imul
mov
mov
outs
je
and
sub
jbe
adc
aaa
adc
jp
push
jb
adc
repz
fistp
(bad)
mov
out
jl
pop
test
adc
fimul
pop
fidiv
inc
sbb
call
pop
fsubr
call
mov
pop
loopne
int
push
cmps
out
lahf
scas
adc
and
xchg
jmp
push
ins
inc
shl
jnp
cli
cmc
stos
js
mov
popa
sub
(bad)
xor
fld
scas
pop
retf
ds
stc
mov
push
mov
in
mov
mov
lods
out
sbb
bnd
or
mul
addr16
pop
mov
repnz
dec
mov
stc
adc
movs
pop
adc
xchg
addr16
mov
sub
add
(bad)
popa
test
mov
push
xchg
xor
ret
sbb
je
test
pop
pop
and
in
and
mov
inc
xor
adc
fsub
lods
pop
(bad)
in
mov
add
inc
pusha
sub
dec
xchg
inc
mov
inc
pop
xchg
inc
xchg
jmp
xor
lods
fist
xor
cmp
adc
add
jo
aam
lods
es
cmp
mov
or
mov
xchg
enter
cdq
retf
aaa
inc
mov
jle
dec
shr
mov
test
lods
mov
shl
pop
mov
pop
jmp
push
mov
imul
into
es
push
arpl
jg
into
popf
in
pop
push
jae
clc
in
(bad)
dec
fwait
inc
or
push
cmc
or
ret
(bad)
xchg
out
pop
inc
nop
enter
xor
test
test
inc
(bad)
popa
icebp
push
sahf
dec
mov
(bad)
mov
dec
cmps
xchg
(bad)
sub
inc
adc
ret
and
(bad)
repnz
sub
or
aad
push
enter
cmp
push
push
inc
aaa
ins
jno
inc
inc
int
dec
mov
inc
inc
and
inc
mov
sub
jmp
stos
sbb
ins
cmp
xchg
out
call
(bad)
xchg
les
(bad)
lea
jbe
inc
js
sub
pusha
add
xchg
adc
ja
mov
test
bound
pop
add
rcr
jns
mov
fcom
(bad)
mov
mov
dec
call
ins
idiv
pusha
cmp
xchg
xor
and
xchg
cmp
mov
stc
out
fmul
mov
pop
mov
shl
dec
popf
cmp
(bad)
shl
int3
mov
sbb
mov
mov
fwait
dec
mov
mov
sbb
fld
xchg
dec
stos
test
cmp
mov
call
leave
jl
jle
pop
jge
pop
sbb
cdq
fiadd
repnz
fs
and
mov
popa
call
jl
stc
dec
and
fadd
rcr
add
aad
mov
adc
cmp
cdq
divps
int
(bad)
cs
ror
jle
xor
movs
pusha
jns
jmp
sub
loopne
mov
shl
fcomp
test
pop
sahf
pxor
rcl
add
(bad)
sti
xchg
xchg
adc
jp
mov
xchg
outs
lods
cld
fstp
pushf
mov
mov
nop
mov
imul
(bad)
scas
sbb
ins
mov
pop
mov
imul
mov
fdivr
xchg
test
bound
das
sbb
je
mov
xchg
imul
mov
mov
add
push
sti
fistp
xchg
out
arpl
test
repz
retf
inc
movs
data16
mov
jecxz
std
mov
stos
jbe
and
inc
xor
aaa
adc
ret
pop
pop
sub
stc
push
sub
add
mov
mov
movs
daa
sbb
adc
add
cdq
mov
cwde
xchg
xor
cmp
(bad)
aas
(bad)
fisub
pop
addr16
add
ds
scas
cdq
cmp
xchg
pop
inc
mov
mov
(bad)
into
(bad)
jge
cmovae
jmp
sub
cmp
popa
cmc
mov
sub
xchg
or
es
adc
inc
rcl
rol
adc
loop
mov
pop
mov
call
mov
and
push
sar
pop
pop
push
and
lock
rol
shl
adc
add
outs
in
xchg
dec
nop
pop
jle
xchg
sti
mov
aad
sub
push
lods
lahf
mov
pop
sub
call
mov
adc
add
or
dec
push
xor
ror
mov
ret
xchg
mov
mov
and
xor
(bad)
jns
(bad)
jne
mov
or
scas
pop
xor
pop
(bad)
adc
fld
cmps
popf
data16
inc
pop
aaa
adc
out
repnz
cmps
inc
adc
mov
pushf
fnstsw
or
test
push
mov
xchg
fcomp
lds
(bad)
stc
xchg
test
aam
push
fsave
cdq
test
and
adc
xor
imul
bound
fwait
cmp
fld
mov
xlat
and
ss
lahf
inc
lods
movs
pop
jl
xlat
enter
sbb
and
and
fbstp
or
fimul
xchg
adc
push
push
mov
xor
retf
das
sub
ins
sahf
ret
inc
xor
mov
xor
push
mov
ret
inc
(bad)
aad
call
iret
ror
pop
js
jno
lds
pop
or
repz
push
stos
fsubr
in
popa
xor
fs
pushf
jbe
loop
test
cld
sbb
add
bound
popw
jo
pop
xchg
mov
out
nop
jbe
push
lds
mov
arpl
mov
push
test
leave
lods
adc
stos
xchg
enter
or
popf
fadd
add
mov
nop
call
or
cmps
inc
push
sub
inc
jae
stos
stc
stos
repnz
pushw
je
scas
mov
and
or
rcl
inc
pop
adc
pop
mov
and
cmp
push
fdivr
out
or
imul
(bad)
and
mov
out
sti
dec
fdivr
jne
push
lods
pop
fimul
fwait
iret
cmp
inc
ds
jno
loopne
xchg
dec
mov
call
ret
cmps
mov
or
jp
loop
jns
lahf
adc
or
adc
(bad)
inc
icebp
mov
sbb
inc
jg
inc
je
adc
sar
xchg
xchg
sbb
test
jb
fnstsw
push
cmps
mov
lahf
push
outs
out
sbb
(bad)
cmp
xchg
push
shl
push
in
stc
mov
cmp
dec
and
loopne
shl
imul
pop
or
sub
scas
push
js
and
jl
or
and
retf
sahf
pop
xchg
test
stos
movs
outs
pop
in
mov
jbe
dec
daa
clc
fstp
and
fdiv
mov
(bad)
jl
jmp
adc
mov
test
ss
jne
or
stos
dec
adc
dec
aaa
add
mov
movs
jle
add
mov
clc
movs
pop
sbb
and
pusha
les
sbb
call
mov
popf
jecxz
and
int3
jb
jae
(bad)
and
mov
cmps
xor
sub
cmc
sahf
dec
pop
xchg
sti
xchg
jmp
xlat
iret
movs
mov
and
jge
pop
or
pop
pop
lods
mov
test
mov
bound
stos
mov
xchg
sub
sar
out
arpl
jae
sbb
jmp
sbb
outs
add
xlat
mov
sbb
scas
push
arpl
ficom
push
aam
fild
dec
loop
xor
xchg
dec
aaa
loopne
hlt
ja
cmp
loopne
inc
and
(bad)
shl
xor
aaa
cmp
adc
pop
add
mov
in
push
or
sub
mov
lds
fadd
aam
push
xchg
mov
or
mov
and
jmp
sbb
push
out
stc
sahf
jg
xchg
fidiv
xchg
clc
mov
xor
xchg
test
cmp
mov
cli
mov
cmp
fcmovbe
sbb
mov
pop
out
nop
xchg
or
cs
inc
stos
lea
sbb
push
scas
hlt
pop
jmp
adc
cmp
loope
imul
xrelease
pop
(bad)
imul
mov
iret
jmp
inc
lds
mov
call
test
xor
loop
jp
(bad)
mov
mov
(bad)
and
shr
cmc
mov
push
cli
pusha
mov
cmp
iret
rcl
aas
cdq
pop
add
pop
jmp
pop
lahf
sti
sub
sub
adc
lock
cwde
loope
pushf
jl
mov
mov
out
lods
rcr
sbb
(bad)
les
ficomp
mov
dec
push
(bad)
aam
and
jl
pop
mov
cmps
lods
js
cli
inc
push
stos
mov
out
xchg
nop
xor
ret
xlat
das
sbb
adc
xlat
shl
lods
cdq
cs
jbe
xchg
mov
inc
cmps
es
inc
inc
fsubrp
movs
xchg
mov
fnstsw
xor
ficom
inc
popf
sahf
mov
shl
in
jp
fdiv
inc
(bad)
adc
fisub
push
jl
add
pop
inc
inc
sbb
stos
cmp
iret
pop
mov
js
mov
mov
add
(bad)
pop
inc
mov
jg
cmp
in
jmp
mov
jnp
jl
cwde
sbb
test
cmps
movs
les
xor
jg
(bad)
mov
in
lock
sbb
(bad)
ins
sub
inc
ss
adc
xchg
mov
jecxz
fcmovbe
ret
push
sub
dec
ja
vpxor
les
mov
xor
popa
xchg
fprem1
call
outs
iret
cmp
jmp
dec
rcl
repnz
fstp
cmp
sbb
mov
pop
cmp
shl
arpl
xor
and
mov
mov
cmp
les
pop
mov
xor
dec
loope
cdq
cmp
mov
data16
cwde
sbb
dec
gs
jb
jmp
fs
(bad)
imul
dec
pop
(bad)
jge
xchg
pop
loop
push
ret
(bad)
(bad)
sbb
or
or
and
scas
sub
push
icebp
movs
or
inc
bound
(bad)
inc
add
mov
xor
fsubr
push
out
jmp
inc
sub
add
sub
and
add
ds
out
test
mov
sbb
cmp
ja
outs
les
and
mov
sahf
inc
icebp
daa
repnz
aam
sub
shr
mov
mov
cmps
es
add
imul
adc
lahf
xchg
icebp
mov
push
jo
cmp
fisttp
or
pop
xor
das
mul
add
sub
out
pop
cli
iret
aad
sbb
rcl
push
mov
mov
sub
ins
lods
mov
dec
add
enter
pop
(bad)
std
lock
arpl
or
sti
outs
pop
aaa
sahf
mov
sti
pop
icebp
inc
mov
(bad)
into
xor
test
clc
or
push
(bad)
mov
fcmovne
movs
cmp
xchg
pop
inc
ret
aas
xor
xchg
(bad)
(bad)
mov
add
xchg
add
ins
push
push
sbb
mov
lahf
ret
or
sbb
imul
cmp
mov
inc
or
inc
jo
loop
inc
(bad)
mov
or
xchg
push
idiv
pushf
dec
push
sar
lock
jge
or
sbb
cmps
int3
aas
or
arpl
add
test
cmp
jno
push
iret
(bad)
or
test
push
or
jo
imul
cs
stc
das
ret
xchg
and
jbe
out
or
call
or
pop
lods
mov
ins
xlat
adc
cs
into
push
mov
dec
xchg
in
sub
add
(bad)
and
xchg
cmp
push
fwait
dec
jne
sub
ins
pop
mov
dec
mov
jo
test
js
push
mov
jecxz
cld
xchg
into
aam
jl
push
outs
or
int
lods
sbb
inc
xor
ret
adc
lea
inc
fcomp
je
add
and
push
xchg
cmp
repnz
dec
nop
mov
(bad)
sbb
and
pop
push
(bad)
call
je
sub
xlat
or
out
jnp
jno
ror
lods
movs
sbb
popa
mov
push
jno
lds
adc
mov
popf
inc
inc
cmp
inc
(bad)
(bad)
mov
cmp
mov
jae
out
adc
das
jnp
push
lods
add
pushf
stc
xor
pop
dec
daa
call
std
int3
inc
pop
idiv
mov
push
dec
lock
jle
jo
loopne
aam
pop
add
out
and
test
xchg
call
imul
sbb
xchg
cmp
ds
stos
adc
fdivr
test
pop
or
inc
dec
xor
xchg
shl
dec
loope
lds
add
jnp
mov
shr
fidivr
mov
or
pop
or
mov
or
mov
ss
adc
popf
fwait
or
sbb
push
sar
xchg
mov
xchg
or
cmp
int3
sub
mov
leave
fs
jnp
sub
or
out
imul
or
aad
shl
sbb
cmp
fsubr
(bad)
jge
loopne
iret
sub
cmp
aam
gs
mov
test
rol
arpl
invd
aas
cmc
pop
dec
push
pop
js
xor
add
cld
pop
mov
xchg
adc
(bad)
fsub
popf
rcr
pusha
push
inc
mov
xchg
lods
enter
dec
mov
sbb
retf
jl
rcr
push
(bad)
add
gs
adc
jge
repnz
out
lahf
mov
jbe
jo
js
shl
pop
aad
scas
pop
sub
cmp
jmp
xchg
push
fiadd
jnp
inc
adc
fidiv
lea
call
call
mov
addr16
imul
push
mov
out
jns
pop
aad
ins
mov
mov
or
add
sub
and
loope
fsubr
lea
dec
or
in
into
mov
sub
cmp
inc
fcom
ret
mov
mov
pop
into
cli
aaa
daa
in
push
and
or
(bad)
call
xchg
ss
push
dec
jo
jp
imul
dec
clc
mov
jmp
mov
mov
je
ins
xor
push
cmp
jnp
add
mov
cmp
mov
dec
adc
xchg
inc
sub
popf
cmp
inc
ins
in
(bad)
mov
out
pop
fsub
scas
mov
add
je
pop
dec
cdq
cmp
movs
push
pop
jmp
push
mov
pushf
(bad)
into
xchg
or
jmp
aam
outs
pop
sbb
adc
mov
test
jo
cmp
pop
cld
daa
ins
out
(bad)
dec
mov
fistp
test
sti
sbb
out
mov
rol
ins
mov
or
sub
push
xchg
(bad)
and
sar
pop
dec
repz
repz
push
ret
(bad)
ss
or
rcr
shl
aam
sub
or
loopne
call
pushf
inc
mov
ror
jb
iret
and
sbb
adc
push
mov
pop
sub
mov
in
scas
cld
dec
sub
outs
mov
ja
retf
or
enter
adc
pop
push
imul
movs
mov
xor
inc
in
mov
adc
dec
lahf
dec
mov
mov
adc
pop
dec
sbb
jp
or
lods
sbb
(bad)
and
cmps
cld
cmp
mov
xchg
sub
mov
or
jmp
xchg
clc
pop
and
fstp
fs
repnz
mov
(bad)
or
adc
popa
std
xor
jg
stc
xor
fnsave
mov
dec
sub
sbb
aaa
popf
and
xchg
cmp
add
data16
xlat
mov
icebp
sub
arpl
pop
ja
or
inc
call
mov
cmp
arpl
xchg
in
sti
pop
xor
push
xchg
jno
sbb
jecxz
jle
jae
push
sbb
in
sub
cmps
iret
shl
jnp
hlt
jne
xchg
jmp
cmc
cmp
in
loope
pop
imul
sbb
in
or
mov
(bad)
out
sub
pop
int3
sub
stc
dec
icebp
and
dec
icebp
pop
pop
js
push
ret
adc
inc
add
mov
hlt
rcr
rcl
pusha
pop
fadd
jno
loop
cdq
imul
hlt
mov
data16
xor
add
jb
cmps
jl
jp
or
xor
test
shr
mov
cmp
frstor
and
inc
add
adc
mov
jg
shr
ror
rol
sub
or
push
pop
sbb
gs
sbb
cld
mov
aam
jne
fsubr
dec
enter
adc
addr16
add
lods
dec
mov
sbb
lahf
or
xor
sbb
push
xlat
mov
mov
adc
imul
and
stos
fld
or
xchg
jmp
pop
adc
in
jecxz
ss
pop
pushf
pop
add
push
xor
mov
push
xor
outs
add
retf
das
pop
dec
lds
das
mov
adc
in
sti
(bad)
dec
push
sar
mov
sub
sub
and
mov
stos
fs
mov
mov
inc
pop
call
rol
jo
mov
add
sbb
jno
es
jns
dec
out
sub
and
icebp
xor
aam
pop
daa
cmp
inc
and
ss
ret
jbe
in
addr16
or
les
out
mov
cwde
sub
les
inc
int
add
leave
cmps
mov
xor
mov
cmp
adc
xor
sti
add
hlt
jg
dec
dec
mov
cmp
bound
push
mov
adc
stos
adc
jg
mov
out
or
jle
fst
loope
sbb
mov
pusha
popf
dec
pop
or
loopne
mov
enter
add
es
inc
imul
sbb
xchg
test
sub
data16
pusha
jecxz
je
lods
imul
das
mov
mov
dec
push
movs
div
xchg
popf
xor
(bad)
out
shr
push
xor
cmc
cmp
ins
das
cld
ins
add
fisttp
sub
adc
xlat
xchg
and
in
sbb
stos
mov
add
and
cmp
and
mov
cmp
jmp
adc
push
xor
push
sub
retf
jo
stos
js
and
cdq
into
loop
outs
mov
arpl
enter
xchg
enter
lea
hlt
pop
push
push
adc
in
les
xchg
into
ret
add
xor
and
je
es
inc
les
and
out
push
je
dec
mov
mov
mov
popa
adc
xchg
fcmovnb
int
push
cdq
pop
jo
aam
out
xchg
adc
dec
xor
into
sub
sub
loope
mov
mov
dec
pop
addr16
test
pop
dec
mov
repz
cmp
sahf
jb
or
xor
adc
push
cmp
push
icebp
fs
sbb
leave
mov
mov
mov
mov
and
pop
(bad)
ja
dec
jle
repnz
(bad)
pop
sub
mov
xor
ret
aaa
mov
mov
mov
xlat
add
stc
cmp
movs
cmp
call
movs
sub
ret
and
inc
ffreep
pop
movs
jae
imul
cmp
cs
popa
xor
xor
repz
mov
mov
ret
or
sbb
or
inc
xor
pop
xor
imul
inc
inc
outs
icebp
pop
adc
push
mov
mov
inc
jl
or
cmc
fidiv
aam
pop
jmp
mov
out
nop
mov
or
xor
pop
push
pop
sar
or
mov
lea
call
add
mov
and
add
clc
add
inc
in
adc
cmc
push
lea
les
push
pop
inc
ins
sub
push
shl
mov
in
call
cmp
pop
xor
fsubr
pop
jle
les
lods
popf
pop
loop
or
sbb
fldenv
cmp
call
popa
add
mov
in
icebp
dec
mov
(bad)
cmc
pop
cmps
fadd
ins
ins
sbb
or
xchg
test
stc
jge
cmp
cmp
jmp
and
xor
mov
push
adc
xchg
movs
mul
pusha
and
mov
add
or
cmp
ret
mov
and
hlt
in
out
lahf
xor
pop
les
aad
call
out
(bad)
out
arpl
mov
cmp
out
ins
pusha
outs
jne
xchg
inc
addr16
xor
push
cmp
add
cmp
pop
fsubr
dec
shr
int
sub
fidivr
js
outs
bound
pop
cmp
adc
(bad)
mov
int3
in
retf
in
out
push
cmp
je
mov
xor
and
sub
outs
and
mov
ffreep
xor
pop
sbb
daa
dec
and
xor
clc
push
cwde
mov
jmp
ja
pop
sub
mov
mov
outs
and
sahf
jl
frstor
ds
ins
mov
adc
jne
cs
add
push
push
push
fidiv
into
popa
outs
sub
loopne
sbb
mov
fst
and
sti
scas
cmps
shl
jbe
inc
dec
mov
into
sar
icebp
sahf
mov
retf
rol
ret
sbb
sub
test
dec
push
(bad)
mov
push
inc
es
jnp
test
dec
or
mov
cli
js
pop
mov
adc
push
mov
xchg
arpl
js
adc
dec
shr
call
xchg
ins
cwde
pop
aam
mov
jp
push
rcr
stos
pop
cmp
xchg
repz
add
or
in
mov
jl
sub
aad
push
jb
mov
add
adc
lods
pop
push
sar
cld
jae
pusha
shl
(bad)
and
cmp
inc
mov
loope
adc
inc
loop
pop
retf
xlat
(bad)
and
iret
push
xchg
ds
add
jge
dec
cld
inc
stc
call
mov
sar
aas
into
in
xchg
sub
push
mov
adc
cmc
enter
push
or
inc
mov
push
sbb
test
arpl
in
mov
jnp
mov
(bad)
xor
ins
rep
dec
test
jae
jle
adc
pop
pop
add
bound
push
xchg
mov
push
mov
imul
cmp
push
inc
mov
pop
call
push
in
add
outs
repnz
shl
daa
jge
imul
rol
sar
(bad)
dec
out
push
lods
sub
loope
loop
mov
retf
std
cmp
mov
jmp
fs
add
sti
pop
cmp
dec
pop
call
mov
(bad)
ret
iret
inc
inc
xor
loopne
mov
inc
stc
mov
xor
push
lods
sbb
leave
jo
test
(bad)
fcomip
out
ins
mov
cmps
jo
mov
jae
jmp
xchg
add
push
imul
mov
gs
inc
mov
repnz
push
pushf
push
push
js
xchg
js
sahf
xchg
mov
ins
ret
jmp
mov
enter
shr
jno
inc
lods
bound
das
jae
adc
mov
int3
leave
sahf
mov
jo
jmp
cs
inc
sub
int3
adc
sub
addr16
dec
push
cmp
adc
pop
repnz
(bad)
movs
dec
(bad)
aaa
and
sbb
cmc
cmp
mov
push
add
cs
sub
scas
and
jp
pop
xchg
int
out
pop
repnz
into
stos
sbb
jge
inc
pusha
cld
(bad)
mov
loope
(bad)
mov
fs
mov
in
or
xchg
push
xchg
add
inc
es
sbb
mov
ret
pop
dec
ret
xchg
or
retf
movs
or
jnp
in
frstor
cdq
fwait
retf
test
cmp
std
and
icebp
sbb
push
(bad)
pop
ret
mov
dec
movs
jmp
test
jmp
adc
fiadd
cdq
adc
imul
jae
ins
mov
add
add
mov
ds
push
mov
pop
xchg
mov
xchg
pop
mov
push
into
les
popf
je
mov
or
push
clc
xor
loopne
pop
xchg
jmp
pop
inc
or
mov
cmps
xor
jns
inc
ficom
add
push
repz
in
lahf
jle
pop
mov
jl
mov
inc
sub
add
lahf
cmps
ins
les
dec
push
ins
xchg
or
xor
mov
sub
dec
inc
add
jge
imul
repz
in
push
mov
cli
clc
in
gs
jae
xchg
movs
stc
pop
sub
lock
aam
inc
push
in
test
mov
mov
bound
in
shl
push
jo
ins
scas
sub
out
rol
jmp
data16
mov
rcl
shr
xchg
inc
lea
add
shl
lds
sub
int3
ret
adc
loopne
jmp
movs
ffree
sbb
lock
cwde
mov
pop
pusha
sub
iret
ds
(bad)
(bad)
mov
pop
sahf
dec
xor
es
mov
pop
outs
shr
ds
mov
dec
or
inc
xor
fisttp
mov
push
mov
aas
pop
jle
jbe
mov
cmps
xor
mov
ret
ja
call
jmp
mov
inc
ds
sbb
lods
rcr
and
fnstenv
daa
jp
(bad)
push
xor
cmps
sub
push
popa
add
cmp
nop
out
or
fwait
dec
xchg
fwait
jbe
popa
xchg
jmp
push
ins
neg
fdiv
out
adc
sub
fild
push
and
data16
mov
and
jp
or
xchg
dec
xor
and
enter
push
inc
sub
push
add
mul
adc
ud2
loope
(bad)
aad
mov
mov
imul
fadd
mov
imul
push
cld
in
mov
loopne
inc
lods
shl
fist
mov
push
data16
mov
cwde
fist
imul
fiadd
sar
stos
ja
test
inc
stos
stc
call
rcr
and
leave
fxch
pop
scas
scas
adc
mov
sbb
add
push
loopne
call
xchg
aad
cmp
scas
cmp
jle
rcr
stc
cmp
test
mov
jo
push
stc
loop
xchg
ret
add
retf
bound
(bad)
jmp
pop
cs
xor
fsub
sbb
jae
fld
sub
mov
loope
das
cmc
xchg
das
mov
jmp
dec
pop
std
pop
push
fst
ret
mov
pop
out
fcmovnb
mov
stos
add
retf
jae
outs
je
loopne
clc
jb
retf
pushf
push
and
cdq
push
add
pop
or
enter
bound
movs
loop
ror
les
iret
sbb
mov
stos
dec
sti
dec
jbe
add
stc
movs
retf
mov
loopne
jb
and
iret
stc
std
hlt
rcr
fst
je
cmps
push
or
jae
jecxz
jno
enter
cwde
and
(bad)
jp
ret
lds
pop
push
jp
loope
in
mov
dec
inc
mov
pop
add
mov
lods
sbb
ror
dec
nop
outs
inc
jge
retf
xchg
push
in
inc
(bad)
outs
xor
jp
mov
cmp
shl
push
fld
icebp
push
dec
cmc
push
mov
dec
retfw
stos
clc
push
jmp
ins
cld
popf
shl
sub
mov
mov
(bad)
mov
clc
jl
jne
fld
stos
pop
addr16
jo
jne
jb
xor
xchg
iret
jns
ins
cdq
xchg
aas
ja
in
hlt
jmp
mov
jbe
adc
add
repz
(bad)
cmp
hlt
dec
push
sbb
les
cmps
mov
inc
retf
cmp
and
and
or
xor
xchg
jne
xchg
xchg
mov
arpl
add
mov
or
stos
mov
adc
sub
cmps
cmp
scas
pusha
fcomp
(bad)
sub
mov
push
call
adc
loopne
push
stos
or
and
cmp
mov
jno
fs
push
jns
inc
sbb
xor
into
ins
push
ins
mov
stc
jb
mov
and
cmc
dec
pop
in
pusha
dec
jb
adc
imul
in
inc
in
out
sar
cmp
push
sbb
or
in
sbb
push
movs
xor
std
push
fwait
push
sub
test
cmp
lock
sbb
es
out
shr
cmp
sub
call
imul
cmp
stos
ret
push
stos
not
ins
popa
xor
les
sti
adc
sbb
bound
lock
(bad)
movs
adc
mov
inc
and
cmp
cmp
inc
pusha
xchg
(bad)
outs
mov
(bad)
jecxz
shl
push
test
imul
jl
cmp
push
out
jge
jp
and
loope
bound
test
loop
xchg
addr16
imul
push
jp
add
lods
and
(bad)
adc
call
jmp
into
mov
imul
fadd
mov
pop
lahf
sub
ret
bound
mov
xor
bound
fistp
sub
dec
mov
sub
xchg
push
adc
in
inc
nop
rcl
bound
retf
mov
add
add
push
cdq
jg
pop
xor
sbb
(bad)
mov
xchg
mov
pushf
icebp
andps
mov
push
fld
lock
sub
sbb
mov
int
jns
pusha
mov
loope
int
xor
jbe
dec
jecxz
(bad)
out
mov
neg
and
jp
ins
jg
mov
add
scas
ret
test
or
dec
imul
pop
add
mov
scas
je
or
mov
push
out
(bad)
jmp
(bad)
pop
in
mov
and
and
mov
adc
cmc
loopne
test
iret
vaesenc
icebp
out
or
push
jnp
sbb
jb
sub
lock
mov
lods
inc
pop
mov
shl
push
push
jae
xor
fwait
je
push
mov
or
fdivr
shr
(bad)
fsubp
jmp
(bad)
call
sbb
fwait
clc
repz
loopne
xchg
shl
sbb
mov
jo
jp
adc
cmp
mov
lahf
xchg
and
imul
xlat
and
sbb
outs
iret
pushf
ins
enter
enter
adc
gs
fild
out
and
mov
(bad)
mov
aaa
out
xchg
daa
adc
xchg
and
fidiv
cmps
ins
and
jmp
movs
xlat
xchg
xchg
sbb
into
xchg
or
adc
dec
mov
pop
les
pop
pop
push
pusha
mov
adc
outs
mov
shl
aas
pushf
xlat
xchg
jnp
loopne
bound
xor
mov
mov
out
and
xor
lods
push
out
push
sahf
or
scas
mov
out
jbe
push
dec
nop
rcr
sar
lods
test
adc
add
and
int3
push
dec
mov
sub
outs
das
imul
or
pop
push
int
sbb
inc
je
(bad)
stos
push
push
mov
fdivr
rcr
dec
sub
mov
ins
mov
cmps
loopne
js
ror
adc
jge
stos
int
in
ret
movs
imul
adc
fcomp
sti
add
and
mov
add
dec
out
cmp
adc
enter
imul
fild
sub
adc
lock
cmp
jne
and
ins
fisubr
in
pushf
inc
stos
or
mov
(bad)
mov
add
inc
sub
dec
sub
mov
xor
jle
pop
xchg
cmp
ficomp
shl
cmp
fcmovu
and
cmp
addr16
out
adc
call
into
in
or
jge
movs
and
push
jmp
add
jne
in
mov
mov
xlat
sbb
push
mov
jge
das
ss
int3
or
jne
inc
cmp
aas
dec
and
mov
push
aam
ret
imul
pushf
mov
scas
jle
lds
xchg
sub
aas
mov
imul
cmp
jecxz
mov
dec
pop
push
xchg
ja
aad
and
stc
ja
(bad)
daa
fs
ins
(bad)
lea
test
iret
cdq
dec
adc
fnstenv
fst
pop
xor
push
mov
scas
mov
mov
xchg
nop
inc
sar
inc
fmul
fstp
add
out
add
mov
pop
loopne
stos
inc
cmps
fild
adc
stc
ins
stc
jmp
inc
test
shr
cmc
jo
cmps
popf
jne
(bad)
rol
inc
cli
jae
loope
sbb
scas
nop
jnp
cs
mov
add
adc
scas
iret
in
test
arpl
mov
mov
inc
push
jle
add
out
fsub
fs
xor
mov
pop
sub
cmp
cmp
sbb
mov
mov
jl
retf
not
fs
mov
icebp
lahf
movs
dec
pop
inc
and
xchg
loope
cmps
sbb
je
push
mov
mov
test
outs
pop
mov
jns
mov
push
cmps
mov
imul
dec
aaa
in
jg
inc
cs
inc
daa
fidivr
shr
mov
adc
lock
push
pop
icebp
clc
imul
aam
jnp
shl
jecxz
lahf
push
sbb
inc
test
es
pop
push
in
adc
mov
ins
adc
fadd
fs
push
cdq
repnz
jbe
fdivp
sub
(bad)
mov
mov
cs
sub
dec
xor
out
push
(bad)
mov
jg
inc
inc
rol
push
inc
inc
inc
add
test
cmp
pop
inc
inc
cmp
js
inc
cmp
std
pop
dec
test
test
pop
or
aad
stos
mov
outs
xor
pop
jle
dec
ret
or
outs
aad
scas
test
lock
std
inc
pop
adc
repz
add
jnp
or
push
std
and
and
xchg
pop
call
sti
mov
push
fidivr
ret
add
ret
ret
mov
inc
jbe
rcl
mov
test
jg
fadd
mov
cwde
movs
int
rcr
jb
ja
shl
outs
pop
in
addr16
push
add
shr
gs
rcr
add
cs
fmul
stos
repz
add
jecxz
cmp
call
(bad)
(bad)
cmp
push
push
pop
inc
fmul
outs
out
or
add
imul
(bad)
jno
lock
daa
jmp
imul
jecxz
lahf
loope
xchg
inc
sub
loopne
shl
push
xlat
dec
les
jb
mov
test
stos
daa
call
ret
fbstp
ins
shl
retf
pop
cmp
cdq
jbe
inc
xor
sbb
ins
mov
sar
add
jg
mov
push
and
shl
hlt
pop
das
jmp
dec
cli
dec
jmp
(bad)
push
xchg
(bad)
add
xchg
sbb
repnz
(bad)
xchg
lea
cwde
xchg
push
pop
loop
fdivr
pop
cmp
lods
xor
fld
push
jno
mov
cmp
adc
inc
add
add
stos
fcmovnb
jg
dec
scas
cmp
out
cdq
stos
stos
mov
ins
das
stos
jp
movs
xor
int3
mov
fcmove
dec
nop
mov
test
pop
xor
gs
fidiv
pushf
std
pop
adc
push
push
sti
xor
ins
(bad)
std
xor
jmp
or
cmp
jbe
mov
out
inc
ins
lea
mov
xchg
sub
add
cmps
cmp
jbe
test
out
push
dec
out
jg
jecxz
jmp
mov
das
lahf
add
outs
cmc
adc
sub
pop
mov
mov
sub
and
jmp
mov
ins
adc
sbb
mov
or
lock
aam
mov
add
mov
(bad)
lods
and
xchg
cmp
idiv
jno
inc
outs
int3
(bad)
jmp
fxch
mov
ret
ins
test
gs
adc
loopne
adc
jge
cmc
xchg
sbb
into
and
add
xor
fisttp
ins
mov
sar
mov
jmp
nop
adc
pop
dec
outs
int
push
repz
mov
push
sahf
inc
and
ja
aad
call
pop
in
mov
ja
sbb
sbb
push
leave
adc
lods
inc
push
pop
pop
adc
arpl
mov
fcomp
fstp
mov
mov
mov
into
and
sbb
xor
mov
aam
out
push
pop
jecxz
add
push
sub
push
mov
cdq
or
mov
aam
stos
loopne
fadd
mov
push
jnp
retf
adc
and
adc
sbb
aaa
xor
aas
shl
shl
loopne
or
inc
xor
jmp
mov
sar
dec
dec
ins
and
mov
mov
push
cmp
mov
jne
ss
dec
lea
je
test
jbe
pminsw
pop
lds
lea
sub
add
rol
sti
sbb
popa
test
neg
xor
int3
rcl
dec
cmps
addr16
gs
iret
leave
clc
ror
fdivr
xchg
outs
jecxz
mov
lea
mov
cdq
or
jnp
sub
inc
adc
das
sbb
aaa
sub
aad
inc
mov
jns
xchg
xchg
pop
popa
ror
jo
call
mov
xchg
mov
in
adc
arpl
pop
mov
rcr
mov
iret
arpl
adc
es
ror
cmp
pop
jmp
movs
push
int3
retf
fs
mov
mov
sbb
cwde
enter
and
jo
pusha
retf
test
push
sub
int
(bad)
cmps
mov
inc
push
push
scas
and
ret
pop
mov
inc
jle
jae
cmc
xchg
cmp
enter
and
push
shl
fwait
add
inc
or
popf
xchg
movs
push
cmps
rcr
jae
out
adc
fwait
gs
jg
xchg
dec
in
adc
jmp
pop
dec
xor
(bad)
jns
xchg
jb
inc
add
imul
add
xchg
mov
jg
sub
mov
push
pop
mov
xchg
retf
and
and
(bad)
mov
stos
and
or
sub
out
lea
pusha
sbb
adc
sar
aad
jnp
sbb
adc
xor
or
pop
leave
ins
xchg
movs
pop
js
scas
jge
push
das
cmp
sbb
pop
mov
xor
fcom
in
cmps
jge
aam
bound
mov
sbb
mov
xchg
repz
cwde
nop
sbb
in
push
push
inc
scas
ret
cmps
jno
cmp
jb
inc
jge
dec
inc
leave
test
adc
mov
clc
ret
inc
popf
xchg
dec
mov
ins
inc
or
adc
nop
mov
inc
popf
cmps
push
aad
rol
cmp
add
pop
add
mov
test
call
cwde
fnstsw
ja
arpl
movs
sub
cmp
xchg
pop
mov
dec
sub
dec
jmp
(bad)
jmp
fidiv
and
test
xor
mov
jg
dec
push
mov
xchg
xchg
leave
dec
cmp
push
enter
sub
lea
(bad)
(bad)
bound
imul
out
movs
add
sub
mov
(bad)
ins
adc
arpl
ja
xchg
jmp
add
(bad)
out
inc
dec
xchg
add
fadd
mov
mov
out
xlat
rcpps
pop
ins
jmp
xchg
repnz
idiv
fnsave
dec
mov
mov
pop
mov
add
call
(bad)
retf
jge
adc
cmp
shr
pop
leave
mov
int
mov
outs
sbb
mov
sbb
jo
push
pop
dec
lea
mov
mov
inc
ret
pop
pop
(bad)
push
cmp
pop
call
fdiv
lods
inc
imul
out
mov
mov
retf
xor
rcl
ins
(bad)
mov
dec
sub
(bad)
or
scas
iret
jg
cs
or
daa
into
movs
in
retf
push
aas
push
dec
or
or
popf
pop
inc
fwait
imul
ret
push
movs
stc
ja
dec
rol
ds
inc
push
inc
int3
pop
mov
inc
push
fwait
sub
in
fsub
scas
ins
ret
int
cmp
stos
scas
pop
xchg
repnz
ins
and
push
mov
retf
push
push
stc
(bad)
sahf
fsubr
mov
inc
push
jnp
dec
ins
push
gs
stc
lds
inc
(bad)
(bad)
sbb
cmp
push
fwait
lods
jp
and
ret
xchg
imul
mov
mov
lods
mov
sahf
std
bound
mov
xchg
jecxz
or
push
test
jne
sbb
pushf
retf
xchg
inc
pop
(bad)
in
push
push
sbb
cmp
sub
jmp
push
cmp
je
inc
xchg
jbe
test
in
add
cmp
inc
out
cmp
push
popa
iret
or
loopne
add
(bad)
fistp
sub
std
xchg
(bad)
cmps
mov
sub
add
call
xor
push
in
pop
add
retf
push
(bad)
fdivr
mov
dec
aas
jae
js
or
(bad)
jge
(bad)
rcr
movs
lahf
in
ins
sar
cmp
stos
mov
push
aad
div
sti
xor
xchg
into
dec
iret
test
(bad)
cmp
inc
push
pusha
and
mov
mov
lock
(bad)
dec
mov
or
sbb
out
push
aaa
cmp
pop
push
dec
xchg
in
inc
push
xchg
(bad)
(bad)
mov
(bad)
rol
mov
lods
pop
fld
stc
cmps
dec
ins
xchg
push
adc
sahf
aas
movs
ret
test
gs
mov
and
inc
dec
sub
sub
mov
clc
cmp
out
push
in
int
adc
imul
lock
(bad)
xchg
or
in
sbb
push
inc
and
pop
push
in
push
mov
les
jns
mov
(bad)
dec
scas
in
inc
(bad)
mov
in
aas
pop
pop
in
ror
sahf
movs
cmp
mov
into
shl
fimul
imul
out
in
ins
outs
ds
out
daa
push
sar
pushf
xor
add
xor
cdq
fstp
cmp
inc
bound
mov
and
pop
idiv
push
out
or
icebp
aad
dec
cs
out
cmp
push
adc
push
lock
xlat
xlat
mov
mov
sbb
lock
mov
mov
cli
sbb
push
push
mov
sar
sbb
or
(bad)
fidiv
je
rol
call
sti
test
shr
call
mov
aaa
movs
pop
in
cli
call
inc
xor
push
stos
dec
rcl
adc
pop
fnsave
cmp
in
ret
push
push
dec
push
xor
rcr
dec
inc
shl
fsubr
out
sub
cld
sub
popa
adc
out
lea
jo
loop
dec
sub
pop
xor
adc
mov
repnz
fcomp
daa
fld
push
cmp
out
ins
sbb
mov
jne
sar
and
bound
sub
ins
scas
push
xor
sar
cmps
mov
sub
rcl
ss
pusha
out
loope
jp
xchg
pop
mov
pop
dec
add
call
scas
sbb
sub
or
aad
out
rcr
cmc
mov
dec
jmp
ins
imul
push
pop
mov
sub
mov
aam
cmp
loop
sub
sbb
mov
xchg
fimul
(bad)
lock
test
je
cmp
xchg
adc
and
sbb
jmp
adc
jg
pop
or
cld
jo
lock
imul
cmp
jmp
jnp
pop
mov
lea
adc
lahf
pop
pop
popf
ja
xor
xchg
mov
enter
(bad)
(bad)
or
(bad)
retf
rol
or
jmp
or
scas
clc
jb
cwde
dec
inc
test
jmp
cmp
inc
push
lahf
imul
mov
in
mov
(bad)
dec
dec
ds
test
addr16
push
pop
mov
xor
iret
aas
pop
cmc
inc
xor
sbb
fdivr
scas
scas
pop
fisttp
or
sti
imul
mov
scas
daa
pop
test
sbb
inc
pop
mov
ds
sbb
mov
lods
mov
mov
sub
pushf
add
mov
dec
fsubr
sti
pop
jle
jp
ss
mov
mov
ss
push
adc
imul
and
and
xchg
gs
leave
repnz
mov
test
xlat
and
xor
cs
ret
mov
fdiv
or
enter
xor
ins
lods
adc
sub
pushf
and
je
jg
call
je
xchg
jge
int
ret
inc
cmps
jnp
dec
in
push
jb
outs
xchg
xchg
xchg
ds
out
pop
jl
mov
sbb
sahf
call
jecxz
(bad)
dec
inc
mov
xchg
shrd
inc
and
pop
in
scas
mov
ss
in
mov
and
test
push
stos
arpl
(bad)
cwde
out
sub
push
jmp
mov
mov
or
movs
pop
jg
call
jg
xchg
dec
sbb
adc
mov
fistp
fstp
add
cld
frstor
dec
push
popf
vpmuludq
dec
aas
retf
xor
fdivp
jne
rol
hlt
test
dec
mov
nop
xchg
repz
sub
pop
inc
xchg
lock
jecxz
mov
dec
xor
pop
push
loopne
mov
(bad)
lock
xor
xchg
mov
mov
addr16
in
and
sbb
dec
outs
in
enter
out
rcr
daa
fistp
outs
mov
fwait
pop
adc
mov
cmc
stos
mov
dec
aam
repnz
jnp
scas
int
push
cmp
aad
sbb
mov
(bad)
(bad)
dec
add
gs
cmps
daa
cli
loopne
jecxz
mov
cdq
dec
enter
or
stos
push
or
and
sbb
or
jmp
or
ja
aam
out
test
daa
or
sahf
mov
cmp
outs
jae
pop
sahf
out
sub
fistp
cmp
push
push
(bad)
mov
in
push
cwde
mov
add
pop
rcl
mov
mov
aam
cdq
xchg
scas
stc
push
pop
push
retf
add
mov
mov
jns
inc
pop
test
sbb
bound
or
push
push
sbb
xchg
in
sbb
sub
shr
clc
and
add
stos
jmp
inc
sbb
leave
xor
(bad)
mov
add
sub
loope
ss
les
test
sbb
in
jp
(bad)
test
adc
dec
arpl
cdq
je
cli
lock
arpl
adc
jo
xor
in
(bad)
jle
mov
xchg
add
lods
mov
popf
scas
dec
mov
xchg
ret
sbb
dec
sahf
add
cmps
mov
int
scas
neg
arpl
je
sahf
stos
mov
cld
adc
fcmove
jbe
push
pop
mov
push
xchg
retf
nop
aam
clc
pop
sub
xor
jo
xchg
in
dec
pop
xchg
mov
xchg
out
fwait
xchg
in
jge
stos
test
add
int3
into
inc
inc
dec
xlat
jo
xor
call
sub
push
gs
sub
push
dec
test
lods
lds
idiv
and
add
xchg
pop
ret
fs
test
dec
stos
or
imul
xor
lea
pop
jns
add
mov
ficomp
xchg
(bad)
mov
mov
mov
mov
push
cmp
in
mov
dec
(bad)
and
jbe
cld
test
mov
imul
pop
xor
jge
xor
test
out
repz
pop
mov
aaa
or
pop
cdq
leave
jg
(bad)
std
pxor
xchg
cmp
push
and
je
in
mov
sbb
ret
sub
out
outs
clc
pop
in
inc
in
popf
xor
out
mov
cli
push
ret
mov
shl
push
sbb
mov
jnp
scas
bound
dec
fs
call
psraw
dec
pop
sbb
mov
fwait
sbb
pop
popf
and
jl
mov
push
js
xor
out
fs
push
in
pop
and
or
hlt
cmp
stc
mov
rcl
fldenv
add
pop
pop
cmc
push
cdq
cmps
js
sti
ret
ret
add
(bad)
cmp
movs
inc
jnp
cmps
and
dec
push
inc
and
mov
pop
and
dec
pop
push
dec
push
sbb
dec
or
or
push
pop
xor
cli
(bad)
xchg
lds
ret
or
rol
ins
call
and
rcr
push
cmp
sbb
or
mov
dec
ins
(bad)
cli
test
fisub
hlt
bound
xchg
pop
mov
or
lods
adc
jmp
clc
or
call
adc
sub
jno
into
call
setb
jl
or
test
adc
adc
inc
fldcw
sbb
icebp
or
cmp
(bad)
pop
pop
shr
jp
push
sub
div
jo
inc
jno
and
mov
imul
mov
add
fmul
pop
and
(bad)
and
out
(bad)
cld
ins
retf
xor
mov
xchg
repz
fcom
cmp
sar
push
push
ret
adc
xchg
jmp
cli
shr
(bad)
xchg
cmps
jnp
out
xor
es
addr16
(bad)
xchg
test
scas
push
or
mov
push
retf
jge
iret
adc
in
sub
(bad)
jp
push
xor
repnz
xchg
ds
sub
sub
xor
dec
lods
sbb
mov
bound
mov
lahf
adc
retf
loopne
loop
ret
das
in
jae
cld
mov
mov
ret
mov
jno
jmp
(bad)
jecxz
aas
ds
int
adc
or
(bad)
or
xchg
ins
dec
mov
lea
or
scas
adc
dec
inc
pop
push
mov
mov
and
out
scas
jp
xchg
and
jmp
retf
cmps
push
mov
mov
push
mov
jne
mov
rcr
inc
cmp
ret
jb
lods
pusha
pop
dec
(bad)
fs
scas
jmp
hlt
scas
mov
aaa
jnp
inc
shl
xor
xor
pop
xor
mov
pop
dec
xor
cmps
ret
pop
mov
mov
inc
stos
sahf
cs
idiv
not
and
repz
push
fld
mov
or
(bad)
push
cli
push
repnz
jl
mov
push
sbb
jb
xor
xlat
xchg
sub
mov
mov
jnp
stos
call
dec
inc
cmp
lahf
mov
in
mov
inc
fisub
(bad)
nop
mov
lods
sahf
pop
iret
xchg
cli
ins
jnp
idiv
rcr
fucom
bound
jbe
lods
or
jmp
movs
inc
inc
dec
cmc
inc
and
repz
shr
push
jle
sub
clc
imul
push
iret
dec
icebp
ss
gs
mov
gs
push
mov
mov
int3
mov
aad
cmc
xor
xlat
and
add
repnz
sbb
cmc
jl
int3
pop
ins
fcomip
mov
mov
xor
cli
imul
iret
arpl
pop
xchg
ss
dec
fidiv
mov
std
pop
add
aas
pop
dec
test
aad
adc
fist
ror
mov
adc
fadd
inc
jnp
iret
int3
sub
aad
adc
test
fsub
out
mov
jmp
jne
aas
dec
dec
adc
mov
sbb
nop
jb
loopne
lods
dec
and
pop
loop
mov
dec
leave
sbb
cwde
adc
arpl
shr
(bad)
in
hlt
stos
jmp
les
xchg
pusha
loop
mov
ins
movs
inc
push
pusha
xchg
clc
sahf
add
mov
mov
ins
fnstenv
mov
lods
call
scas
ror
pop
aaa
(bad)
(bad)
cmc
nop
outs
jg
xor
hlt
sbb
mov
bound
dec
dec
dec
or
test
bound
into
(bad)
jmp
adc
xor
cwde
in
adc
jmp
stos
cmp
mov
iret
jno
push
dec
stos
push
add
jne
fidiv
sbb
mov
jbe
scas
sti
iret
gs
or
dec
push
fimul
(bad)
(bad)
cmp
and
test
mov
or
mov
pop
push
(bad)
and
sar
mov
shl
sub
and
sar
pop
cmp
ror
icebp
push
repnz
jge
neg
dec
aas
fistp
push
repnz
push
xor
mov
fldcw
fwait
rol
std
xlat
dec
fcmovnb
clc
aas
mov
js
inc
outs
jno
inc
cmp
sahf
in
inc
add
ins
xchg
push
jle
push
dec
sbb
iret
les
dec
aas
fs
fidiv
je
out
out
loopne
nop
inc
xor
ret
leave
cmp
xchg
dec
(bad)
cs
cmp
mov
push
add
jmp
sub
cmp
repnz
xor
xor
mov
(bad)
(bad)
cmp
ja
gs
rdpmc
in
es
jb
jns
in
mov
(bad)
jle
iret
out
xchg
(bad)
mov
fdivr
mov
add
and
mov
mov
ss
cmc
repz
lods
fst
lahf
leave
icebp
jge
cmp
pop
add
adc
(bad)
out
inc
jb
retf
mov
jg
dec
cmp
jmp
dec
or
lods
fptan
jp
leave
add
inc
add
push
mov
or
into
int
or
pushf
and
xor
pop
mov
pushf
xor
(bad)
xchg
and
es
scas
lods
jp
dec
movs
dec
adc
jge
cmovb
add
mov
clc
dec
cdq
sub
jo
(bad)
or
sbb
sti
lock
mov
stos
mov
adc
cli
out
mov
test
push
(bad)
xor
xor
nop
shl
mov
sub
imul
pop
shl
aad
pop
inc
cmp
pop
retf
pop
outs
cld
mov
out
sub
push
(bad)
(bad)
lods
je
int3
cmp
ss
dec
add
jmp
outs
cdq
loop
mov
inc
sahf
out
ret
adc
jmp
(bad)
out
adc
xor
ret
and
mov
pushf
pcmpeqd
mov
icebp
adc
(bad)
out
(bad)
enter
cmps
ret
xor
int
pop
xor
popf
push
sbb
aaa
sbb
shl
das
jmp
out
mov
dec
push
or
mov
inc
cmps
iret
int
adc
push
xchg
enter
lfs
idiv
inc
fisttp
dec
cmc
cdq
dec
jg
in
adc
cmp
xor
mov
scas
cmp
sbb
sub
lds
repz
and
mov
pop
xor
add
ret
out
movs
mov
mov
(bad)
fld
sub
leave
cmp
call
xchg
ja
fcom
jmp
imul
pop
pop
and
dec
push
sub
pusha
push
or
fcmovnbe
popf
jmp
xlat
cmp
fwait
out
icebp
dec
and
xor
jnp
imul
jge
cwde
add
sti
es
push
inc
sub
retf
mul
js
sub
shr
arpl
add
push
retf
cs
test
or
lahf
not
test
adc
mov
push
pop
inc
enter
in
outs
inc
mov
and
fisttp
xor
or
mov
dec
push
cmp
mov
ret
pop
enter
loope
dec
jne
out
ins
push
or
in
sbb
(bad)
lods
stos
sbb
jne
rcl
sti
push
xor
std
cmp
pop
adc
adc
rcl
xchg
cmp
mov
sbb
stos
or
sbb
pop
jb
out
sti
arpl
sbb
or
or
xor
popa
lahf
nop
mov
(bad)
pop
enter
jbe
jecxz
ja
xor
mov
and
fst
leave
or
jecxz
ss
retf
push
rcr
mov
es
sbb
pusha
data16
jae
add
ror
outs
and
xchg
(bad)
cs
loope
and
fstp
xlat
sbb
stos
inc
dec
ins
sub
pop
jp
dec
lahf
imul
pusha
popa
test
pop
iret
(bad)
xchg
lock
das
pop
dec
ret
jmp
adc
pop
into
ficom
loop
xlat
iret
or
das
jg
cli
mov
in
lods
popa
imul
sbb
cmp
fsubr
sti
std
mov
ss
and
(bad)
xchg
add
push
arpl
adc
sub
mov
or
std
push
popf
or
add
mov
in
(bad)
fstp
sahf
(bad)
test
cmps
in
add
jmp
fstp
or
mov
ins
in
push
call
add
jb
cmp
(bad)
and
ins
cli
es
jmp
fcomi
and
jmp
and
scas
test
adc
je
mov
adc
mov
push
pop
in
adc
loope
dec
sbb
iret
mov
mov
add
cmp
xor
cli
add
fdiv
out
aam
fidivr
or
jecxz
les
sbb
mov
dec
pop
test
cld
sub
adc
mov
sub
jno
sahf
push
add
pop
mov
jle
xor
mov
retf
ds
and
cs
push
(bad)
push
xchg
cmp
add
cli
lahf
out
and
mov
dec
(bad)
push
cmc
das
std
adc
push
lods
adc
enter
outs
nop
push
mov
ret
xchg
pop
or
add
sub
jg
add
add
xchg
fsub
xor
jmp
fwait
bound
xor
into
cmp
hlt
fcmovu
push
push
pop
add
xor
lods
or
(bad)
mov
inc
mov
inc
push
jecxz
iret
out
inc
sbb
mov
fucomip
mov
push
add
dec
out
or
inc
dec
jecxz
ins
mov
out
push
jl
dec
cld
stos
in
inc
in
sbb
inc
xor
add
fsub
(bad)
iret
push
jle
pop
or
sbb
inc
push
imul
and
push
dec
outs
(bad)
adc
fistp
or
call
push
fldenv
adc
cld
jl
into
(bad)
cli
mov
stc
and
adc
in
out
sub
and
movs
stc
mov
sbb
dec
stos
mov
fisubr
adc
cmp
inc
xchg
pusha
add
ins
jg
adc
mov
mov
push
rol
imul
test
push
mov
lahf
cs
out
push
out
mov
mov
mov
movs
pop
push
sub
sub
hlt
cmps
fld
pop
or
mov
mov
push
int3
repz
pop
mov
out
mov
mov
test
add
or
add
leave
pop
pop
xlat
repnz
sbb
es
sub
mov
push
dec
daa
xor
sub
sub
push
and
inc
scas
xchg
xlat
adc
xchg
sbb
ret
cdq
xchg
jecxz
cdq
pop
mov
ss
inc
rcl
movs
mov
fwait
jle
jno
ret
jmp
adc
retf
daa
pop
in
mov
xor
retf
mov
dec
adc
cmp
fs
(bad)
mov
fiadd
push
dec
mov
ja
aas
lock
dec
iret
mov
xor
mov
pop
es
lock
mov
inc
adc
mov
cmc
int3
test
jns
inc
lea
mov
jbe
mov
pop
stc
in
jbe
push
jno
mov
pop
mov
xchg
mov
cmc
mov
push
pop
ds
fist
add
shl
jnp
iret
inc
scas
(bad)
mov
lods
mov
jmp
adc
push
test
mov
xchg
fnstenv
gs
pop
lea
and
jmp
lea
or
xchg
movs
adc
xchg
popa
xchg
jle
outs
cdq
pushf
xchg
addr16
addr16
jbe
xchg
outs
sti
fwait
icebp
adc
sub
adc
jne
jbe
cmp
mov
cmp
jmp
lds
jns
(bad)
sbb
jmp
push
xchg
dec
repnz
sbb
pusha
jo
adc
push
xor
aam
push
mov
push
jmp
push
xchg
ss
mov
sub
inc
and
jge
cmc
sub
int3
fxch
add
mov
shl
mov
jb
cdq
cmc
scas
je
(bad)
cmp
mov
fbstp
ds
xor
je
or
pop
ret
aad
sub
xor
mov
add
movs
and
and
mov
out
xlat
lahf
repnz
sub
sub
dec
fst
scas
mov
rcl
test
aad
inc
push
lock
leave
inc
mov
in
push
push
sbb
xchg
xchg
xor
dec
fldenv
xchg
mov
xchg
dec
js
or
ret
cdq
ror
into
les
retf
sti
lods
mov
pop
xor
arpl
je
sub
adc
mov
inc
cli
ins
inc
lea
sub
repnz
icebp
and
adc
jg
fisub
inc
xlat
pop
inc
jl
adc
inc
dec
sbb
pop
sbb
and
repz
jae
hlt
shl
jge
out
cmp
out
pop
xchg
inc
add
arpl
inc
jge
push
inc
test
adc
mov
retf
loopne
cdq
arpl
imul
jbe
and
push
adc
je
pop
mov
push
sub
jae
cmps
bound
or
jl
cmp
jae
mov
mov
xor
push
shl
mov
or
jmp
dec
pushf
cs
cs
pop
sub
ja
mov
push
(bad)
in
cmps
fs
ins
cld
inc
out
dec
ror
data16
bnd
add
test
js
push
adc
arpl
mov
out
pop
adc
aad
xor
jmp
scas
xchg
call
iret
retf
add
xor
sbb
pop
cdq
sub
inc
push
push
xor
and
fild
in
xchg
push
add
xchg
mov
js
das
jb
popa
xor
push
in
mov
jl
lds
scas
push
mov
fldcw
xchg
xor
aaa
js
dec
(bad)
xchg
mov
repz
or
movs
inc
js
adc
jbe
int3
mov
adc
std
js
aad
and
xchg
and
push
jnp
fnstsw
mov
(bad)
aad
(bad)
pop
aas
inc
(bad)
mov
and
sahf
jmp
adc
inc
pop
cmps
or
es
pop
scas
enter
sub
xchg
int
outs
mov
inc
fcmove
push
not
xor
sbb
mov
pop
pop
jne
mov
push
pop
jmp
ror
test
cwde
adc
push
add
mov
add
call
and
lods
in
cmp
scas
sub
fwait
sbb
jle
mov
int
std
xlat
ss
mov
iret
loopne
xchg
pop
mov
or
mov
daa
fstp
mov
push
jle
push
ret
cmc
ret
gs
inc
inc
mov
add
or
(bad)
mov
call
(bad)
out
retf
push
jle
loope
add
fwait
dec
(bad)
cmp
ja
clc
jge
mov
or
loope
jmp
iret
sub
pusha
xor
mov
xchg
(bad)
jb
dec
xor
mov
mov
fisttp
rcl
dec
icebp
jmp
repz
popf
(bad)
aam
lds
mov
popf
jne
(bad)
scas
jb
lock
std
xor
inc
sbb
jo
sbb
mov
loop
sbb
lds
and
pop
add
sbb
nop
dec
xchg
loopne
shr
jbe
aas
add
popa
outs
imul
(bad)
add
mov
ds
es
xor
ss
dec
(bad)
or
xor
data16
jnp
push
push
dec
dec
les
adc
push
stos
fild
sar
pop
cld
aam
or
cmp
dec
int3
mov
bound
jg
mov
sub
out
stc
jo
lds
inc
scas
jle
jne
jno
inc
repz
jge
mov
lahf
pusha
mov
pop
inc
mov
hlt
in
jle
sub
xchg
aas
gs
dec
fisttp
jle
mov
(bad)
aam
loop
jne
mov
imul
repz
mov
retf
pushf
sub
push
push
das
adc
daa
adc
retf
adc
shl
lods
jmp
jg
and
fld
push
dec
pop
pushf
stos
sub
rol
xchg
int3
or
imul
mov
enter
call
rol
jge
jbe
push
xor
cmp
mov
inc
cmp
and
cmp
or
dec
rol
dec
sbb
call
ins
jecxz
xchg
daa
outs
test
xchg
mov
xor
rcl
inc
add
aam
inc
mov
sub
push
in
push
call
je
mov
rcl
cwde
jmp
enter
mov
push
or
or
(bad)
jle
pop
(bad)
sar
dec
pop
cli
div
push
outs
retf
(bad)
fidiv
dec
cmp
sahf
(bad)
shr
sbb
jge
outs
dec
sbb
add
out
shl
loope
sbb
xor
jb
in
sbb
sar
clc
clc
mov
and
sbb
xchg
and
inc
sbb
scas
inc
or
mov
outs
push
clc
mov
xchg
adc
mov
xor
ins
cwde
aas
and
add
push
sub
adc
aas
es
daa
ror
fldenv
sub
xor
xor
mov
jp
bound
cmp
in
adc
push
sahf
sbb
dec
out
dec
lea
mov
fdiv
and
add
call
jno
stos
push
pop
adc
fild
jae
cmp
jno
push
pushf
out
xchg
popa
sar
sar
test
jns
push
(bad)
push
mov
jnp
push
arpl
adc
pop
ret
shl
(bad)
xchg
nop
pusha
xchg
in
cmps
femms
lods
xchg
add
add
inc
sahf
in
std
(bad)
gs
jb
pusha
sub
mov
arpl
std
bound
jge
push
adc
jge
mov
ret
fidivr
punpckhwd
sbb
jmp
movs
shl
call
arpl
outs
lock
lahf
sub
cdq
stos
xchg
and
xor
jnp
rcr
xchg
les
push
mov
fidivr
push
inc
test
popa
fidiv
fidivr
(bad)
clc
mov
mov
mov
sahf
mov
in
add
xor
push
jg
fidivr
shl
xchg
push
xor
mov
call
arpl
mov
lds
pop
fimul
pop
jnp
call
retf
xor
cmp
aad
sub
push
push
push
xchg
lea
sub
leave
push
xchg
test
inc
imul
nop
mov
push
mov
sbb
loop
push
mov
jb
pusha
inc
out
and
call
std
inc
cs
fiadd
cdq
loope
popa
adc
sbb
push
popa
sbb
add
ins
sub
add
cmc
push
dec
out
shr
xchg
inc
sti
fnstsw
ja
sub
pop
mov
pop
popa
loope
inc
loopne
inc
pop
add
jp
aam
mov
jae
sbb
mov
pop
cmp
fs
push
push
cmp
mov
sub
out
nop
mov
aad
adc
mov
ss
xchg
sbb
std
xor
and
fdiv
push
out
mov
retf
out
test
sub
pop
inc
test
data16
ret
xor
fidiv
retf
repz
add
pop
add
mov
and
sub
push
add
inc
pop
mov
sub
in
cmp
add
std
out
lea
shl
and
or
out
jne
mov
aam
xchg
mov
loope
int3
pop
mov
fistp
gs
loopne
xchg
stc
lods
sub
dec
and
call
ins
ret
stc
es
sti
or
fwait
push
loopne
jo
stos
out
pop
or
mov
sti
mov
sahf
scas
push
inc
lds
aaa
dec
push
pop
pushf
call
xchg
outs
sub
les
xchg
fisub
adc
test
xchg
imul
mov
gs
pop
stos
aad
mov
fnsave
aaa
repz
mov
jo
fist
iret
add
push
pop
stos
sbb
dec
mov
sbb
mov
retf
dec
inc
sbb
mov
ret
cwde
mov
adc
int
mov
lahf
push
dec
cmp
ss
cmp
lea
das
and
pop
push
or
xlat
pop
lods
imul
lock
jno
mov
sbb
inc
sub
outs
adc
es
mov
in
adc
outs
jbe
out
mov
inc
jb
cmp
lods
dec
dec
jge
mov
cmp
sahf
cmp
jmp
push
mov
mul
jnp
sbb
je
shr
mov
inc
or
jo
xchg
mov
aas
lods
cmp
icebp
int3
out
or
sbb
or
in
push
xchg
aad
xor
cmp
dec
sar
test
inc
out
daa
mov
out
lds
icebp
push
out
lods
fdiv
pop
lds
add
les
inc
mov
dec
sbb
out
xor
pusha
dec
ins
daa
test
xchg
xor
int
or
loope
repnz
dec
adc
and
sub
mov
outs
sub
int
inc
mov
popa
jnp
mov
fdivr
mov
inc
stos
pop
scas
dec
mov
mov
dec
mov
(bad)
popf
fnsetpm(287
cmp
jne
in
cs
clc
dec
jns
call
movs
fdivr
popf
cmps
outs
(bad)
enter
mov
mov
mov
or
dec
das
mov
and
xor
sub
leave
add
mov
(bad)
lods
xchg
jbe
rcr
out
push
inc
xchg
sbb
mov
in
sub
pop
clc
int
test
mov
cmp
(bad)
std
fisub
and
xlat
push
in
(bad)
ja
mov
in
aam
loop
cld
std
add
fsub
jae
js
xor
mov
cmp
push
ja
pop
popf
je
in
in
shl
xchg
adc
test
pop
ror
or
mov
sbb
add
mov
push
cwde
das
push
sub
mov
adc
cdq
ins
daa
in
je
push
sub
ficom
jmp
pop
pop
jle
and
jae
adc
lods
add
movs
cmc
add
add
popf
pop
sti
(bad)
jmp
stc
add
mov
(bad)
adc
int3
out
dec
adc
in
lds
cli
lea
pop
ror
add
xchg
dec
stos
dec
arpl
ror
call
lds
arpl
cs
sub
pop
xchg
out
pop
mov
inc
mov
mov
cdq
jno
pop
and
(bad)
xor
xchg
int3
push
push
pop
sub
and
test
sti
push
imul
rcl
addr16
push
mov
(bad)
mov
push
and
es
fmul
jecxz
ds
xchg
shl
push
xchg
push
ret
scas
sub
add
movs
cmps
icebp
movs
adc
inc
dec
scas
js
pop
pop
and
(bad)
and
cs
push
mov
dec
jg
leave
add
or
xchg
jne
push
lea
test
pop
pop
mov
cmp
inc
cmp
xchg
lds
sahf
jmp
sub
out
push
(bad)
sbb
xchg
add
pop
cmc
mov
push
das
mov
sar
push
shr
(bad)
fidiv
jge
push
pop
pusha
and
loopne
mov
retf
imul
jl
pop
pop
xor
jb
pop
dec
pop
jge
mov
arpl
cwde
jne
dec
cwde
mov
loope
mov
mov
retf
(bad)
and
jno
je
shl
mov
mov
fld
push
push
lahf
or
sbb
add
aam
xchg
sahf
adc
loope
mov
sub
(bad)
js
add
int3
push
mov
lahf
push
mov
mov
pop
aaa
mov
inc
and
mov
movs
in
mov
fs
xchg
jmp
sbb
jmp
aaa
xlat
jg
mov
or
cmp
cmp
mov
(bad)
push
ror
xchg
(bad)
cld
imul
add
fcomp
jmp
ins
lahf
ins
xor
and
mov
add
popa
cmp
aam
mov
push
mov
inc
adc
outs
jnp
mov
leave
scas
jp
int
icebp
or
mov
add
and
pop
push
sub
mov
ins
mov
pop
fcom
loopne
push
outs
rcr
je
sub
pusha
imul
call
ds
cmp
ja
mov
sub
mov
bsr
inc
repnz
iret
mov
scas
in
test
mov
or
or
into
mov
int
pusha
dec
dec
pop
scas
or
sub
adc
shl
xchg
out
ror
in
inc
mov
cmp
popa
(bad)
cli
out
jno
add
and
mov
mov
in
int
sbb
mov
retf
jp
mov
dec
and
or
stos
push
mov
inc
jo
jae
cmp
add
lahf
add
sub
mov
or
jbe
adc
mov
lds
stos
in
stos
adc
push
add
scas
pop
push
(bad)
xchg
mov
punpckldq
and
fcmovb
mov
movq
jne
rcl
loopne
movs
or
and
out
jle
pop
jge
int3
fsub
les
pop
mov
fcomp
push
shl
inc
mov
xchg
ficom
and
mov
and
jno
mov
or
pop
(bad)
jae
inc
xchg
jno
mov
pop
xor
pop
mov
and
call
mov
mov
adc
inc
push
jecxz
fild
test
or
mov
call
mov
inc
xor
iret
cmp
sbb
adc
cli
push
dec
stos
and
imul
push
mov
addr16
jo
pop
int
lods
fcomp
movs
outs
jmp
or
bound
add
mov
fisubr
and
xchg
dec
ret
xor
pop
xchg
jl
inc
test
pinsrw
push
mov
scas
adc
mov
push
movs
pop
xchg
dec
fwait
mul
aad
pop
nop
sbb
xchg
mov
leave
cmps
sub
or
push
jnp
jle
and
add
scas
movs
fwait
or
mov
jmp
inc
fadd
int3
push
jmp
test
sub
test
add
mov
lea
lahf
mov
not
shr
(bad)
mov
xchg
inc
dec
adc
jl
xor
push
out
addr16
outs
push
sbb
rol
movs
push
fwait
push
mov
adc
push
movs
and
pop
mov
ins
mov
or
dec
adc
push
jnp
push
xchg
dec
inc
shl
mov
fisub
je
stos
repnz
mov
dec
jnp
(bad)
jne
repz
int3
mov
fstp
add
xchg
sar
or
aad
mov
xchg
ffreep
out
dec
xor
scas
repz
scas
xor
push
(bad)
sub
cmp
and
dec
int3
add
out
scas
xor
lea
enter
cld
or
fimul
mov
sbb
jbe
in
add
movs
mov
ret
jnp
push
fs
adc
sbb
scas
pusha
or
mov
add
xchg
jmp
mov
aas
jle
movs
xchg
int3
int
dec
xchg
inc
jbe
push
mov
ss
lahf
sbb
add
xchg
mov
push
xor
out
sbb
sbb
shl
dec
cmps
(bad)
(bad)
imul
mov
aam
xlat
nop
sbb
cmc
and
push
jle
(bad)
test
cmp
fst
ret
xlat
dec
jae
add
cwde
sub
sar
popf
jp
dec
sub
inc
xor
pop
cld
je
mov
clc
dec
or
cmps
xchg
inc
outs
xor
shl
xchg
cmp
xchg
jns
cli
sub
retf
cmp
call
mov
test
or
cmp
inc
add
adc
cmp
push
sahf
ja
popa
ret
imul
addr16
es
fldenv
mov
test
clc
ins
cmp
ficomp
aas
add
push
mov
ja
mov
mov
(bad)
arpl
sbb
pop
(bad)
dec
mov
ds
xor
bnd
mov
mov
jge
(bad)
cld
aam
push
mov
mov
test
(bad)
push
sub
jnp
sahf
(bad)
mov
jge
popf
mov
add
pop
sub
dec
mov
jge
inc
shl
jmp
rcr
mov
sub
lods
sbb
dec
inc
scas
sahf
jle
xchg
not
adc
das
pop
cmps
dec
push
out
xchg
mov
mov
lea
adc
sbb
inc
inc
or
xchg
xchg
or
jmp
lods
test
xor
shr
call
mov
jmp
push
and
adc
push
clc
in
bnd
cmp
mov
out
sub
add
xor
cwde
dec
aad
pop
inc
adc
ret
and
jp
in
dec
jecxz
adc
mov
mov
add
mov
and
xor
(bad)
sti
popf
jmp
cdq
xor
mov
mov
stos
sub
and
sub
mov
imul
or
xlat
jae
mov
outs
(bad)
and
mov
and
addr16
aad
loop
in
cmp
call
add
mov
imul
icebp
aad
xlat
(bad)
push
pop
sub
ja
test
and
aad
cld
cli
inc
pop
mov
outs
int3
mov
cmp
or
retf
pop
push
and
mov
repz
pop
xchg
sub
fnstcw
xor
mov
test
mov
xor
imul
xor
aaa
jle
(bad)
shl
inc
mov
or
(bad)
xchg
mov
imul
aad
mov
in
sar
adc
cmp
push
mov
(bad)
jecxz
mov
sar
(bad)
stos
mov
xor
sti
add
fcomi
xchg
sub
daa
xchg
ins
call
add
clc
lea
adc
xor
sub
push
cmp
add
jmp
inc
jmp
test
pop
inc
test
mov
xor
ret
sar
aad
loopne
sti
mov
inc
(bad)
bound
lea
(bad)
mov
adc
and
jp
mov
adc
rcl
test
jno
in
in
mov
movs
mov
fcmovbe
adc
pop
into
ins
sbb
cmp
xor
sbb
pop
into
fmul
mov
mov
scas
fs
push
or
and
pusha
pop
jg
inc
ret
sub
cmp
add
or
cmps
xchg
mov
dec
and
adc
hlt
mov
cmp
sbb
mov
fadd
fisttp
stos
mov
cmp
(bad)
sar
ss
cdq
or
ins
mov
xlat
mov
fsub
ds
fs
cmp
xchg
cmc
inc
in
pop
or
mov
xchg
mov
mov
sub
and
or
mov
into
push
scas
jo
hlt
psubd
adc
test
sbb
sti
pushf
adc
iret
cmp
sub
clc
sub
fwait
imul
loope
ret
out
cmp
dec
daa
into
cmc
sbb
cmp
or
dec
lahf
clc
mov
pusha
fnstcw
mov
inc
inc
inc
mov
call
mov
mov
push
xchg
cld
inc
rcl
add
mov
xchg
idiv
jo
scas
xchg
inc
push
add
mov
jp
cmp
xor
jecxz
dec
outs
sub
(bad)
and
xchg
mov
fsub
and
mov
popa
out
pusha
les
sbb
test
dec
adc
out
inc
int
mov
mov
mov
cmp
daa
pop
ret
mov
pop
dec
mov
dec
mov
into
ja
jmp
push
xlat
retf
and
inc
xor
dec
xchg
arpl
lods
(bad)
fst
inc
dec
hlt
inc
jns
rol
xor
ss
rcl
in
xchg
xor
mov
jb
arpl
shl
fst
sub
push
dec
mov
pusha
mov
push
sbb
aaa
mov
je
sub
dec
cwde
pop
xchg
sbb
test
xor
stc
rcr
mov
(bad)
pop
cmp
xor
push
test
imul
jle
xchg
add
mov
pop
mov
popf
and
xchg
xchg
push
dec
imul
loope
pop
jo
dec
push
sti
lods
pop
adc
push
adc
lods
test
scas
ret
sti
dec
movaps
mov
retf
push
inc
cdq
push
jl
hlt
neg
fs
mov
push
lea
push
push
dec
fs
cmp
imul
sbb
add
xor
mov
cli
cmp
sub
pop
jmp
jbe
jl
out
daa
sbb
mov
es
std
mov
sub
jo
mov
loopne
ret
in
int
mov
shr
or
leave
loope
jno
mov
mov
icebp
ss
imul
mov
je
xchg
xor
xor
mov
mov
pop
pop
iret
jne
adc
test
mov
inc
jge
mov
mov
or
lea
jb
daa
gs
xchg
dec
lock
mov
cmc
pushf
dec
cmp
mov
dec
frstor
mov
mov
add
mov
arpl
xchg
mov
ficom
loope
das
loopne
mov
retf
into
pop
(bad)
and
stos
sub
test
mov
or
neg
inc
jl
ja
movs
xor
in
fadd
inc
sbb
dec
sub
inc
neg
nop
std
sbb
sbb
pop
fistp
add
data16
mov
fldcw
int3
xchg
sbb
nop
fisubr
outs
add
clc
out
out
mov
cmc
sub
mov
add
(bad)
gs
mov
xchg
mov
add
mov
dec
pop
cmp
mov
test
call
call
push
add
enter
xchg
cmp
fsub
adc
xor
inc
inc
test
daa
fwait
jecxz
cli
push
sub
ret
int3
jmp
jl
cli
add
mov
xchg
mov
sbb
jecxz
xchg
in
push
inc
outs
imul
xor
int3
mov
push
pop
mov
sbb
xchg
ins
scas
sub
pop
cmp
add
sub
jb
mov
std
inc
icebp
cmc
pop
loop
dec
ror
dec
imul
sbb
shl
mov
imul
mov
mov
cmp
mov
movs
mov
in
lahf
stos
jp
jo
out
gs
fdivr
ret
test
fist
inc
sub
nop
imul
retf
loopne
into
push
retf
cmp
cmp
pop
ss
add
test
mov
adc
fucom
pop
lods
gs
out
push
and
push
popa
mov
icebp
xchg
jnp
ret
xchg
or
frstor
cmp
jnp
jmp
jne
cmc
fs
xor
mov
mov
hlt
add
xor
call
mov
mov
xchg
push
scas
enter
xchg
rcr
(bad)
into
pop
mov
cmp
xchg
dec
pusha
and
xchg
shr
jbe
and
sbb
sbb
xchg
adc
loopne
xlat
in
call
cdq
aaa
xor
mov
xchg
sub
xchg
(bad)
loop
aad
jno
or
pop
std
into
xor
js
pop
(bad)
mov
out
call
pop
jnp
popf
fimul
fistp
push
or
(bad)
push
jmp
adc
mov
icebp
mov
(bad)
jnp
jmp
and
mov
aaa
dec
inc
mov
les
aaa
(bad)
sbb
push
shr
jae
stos
pop
push
pop
call
test
lahf
sbb
lods
jns
xchg
(bad)
(bad)
sub
mov
push
pop
fs
sbb
cmp
mov
sbb
cmp
mov
xor
inc
sub
not
sbb
xor
xchg
push
add
mov
or
test
pop
sub
dec
aas
mov
enter
fbld
sub
mov
adc
add
fsub
iret
or
cmps
add
popf
(bad)
mov
mov
mov
push
je
xchg
mov
test
dec
movs
cmp
sbb
std
stos
xor
mov
jbe
sub
icebp
push
mov
movs
mov
pop
cmp
nop
lea
cmp
aas
(bad)
hlt
inc
cmp
sahf
aas
movs
xor
jmp
into
push
arpl
ds
pusha
icebp
gs
stos
lods
call
mov
cmp
push
(bad)
mov
ror
sbb
movs
ins
mov
inc
mov
push
jno
ds
fwait
cmps
(bad)
hlt
out
or
mov
ins
lods
mov
push
and
lahf
(bad)
pop
sub
daa
jmp
mov
sahf
int
call
stos
in
push
in
adc
push
fsub
ins
mul
pop
pop
jmp
mov
pop
jg
adc
lods
jbe
cmps
popa
push
inc
out
cmp
jb
sbb
lea
jb
and
adc
add
cmps
retf
lea
in
push
fldpi
and
js
stos
fld
mov
es
imul
shl
addr16
data16
push
inc
retf
mov
adc
mov
in
jmp
in
cmps
xchg
or
scas
jnp
mov
jecxz
ret
je
mov
add
jmp
sahf
call
cld
dec
sbb
ja
cwde
test
mov
frstor
xchg
mov
cdq
aas
xchg
mov
push
xchg
mov
jne
jb
xor
push
and
mov
pop
dec
scas
bound
jns
push
test
dec
push
inc
mov
xor
leave
dec
cld
cmp
fbstp
xchg
jecxz
test
ds
or
aam
loope
rcr
outs
add
mov
adc
lods
jge
frstor
mov
mov
add
mov
jp
sub
dec
and
cld
pop
pusha
jbe
or
xchg
cld
aad
clc
cwde
cwde
popf
jne
lahf
fnstsw
shl
ins
popf
xchg
dec
rcl
ret
movs
mov
sub
jb
loopne
hlt
mov
sbb
pop
(bad)
addr16
fsubr
rcl
mov
retf
bound
aas
mov
hlt
cmp
mov
xchg
in
jmp
sbb
push
(bad)
call
and
adc
jae
into
lock
push
adc
mov
imul
dec
lock
and
cld
sub
mov
jge
sbb
add
stc
xor
dec
shl
inc
cmps
push
neg
or
inc
idiv
jp
pusha
hlt
jmp
mov
push
clc
push
inc
push
movs
push
jp
adc
cmc
ja
xchg
xlat
mov
jge
and
mov
ins
test
lock
ins
lods
repz
inc
push
rcl
add
ins
and
addr16
and
mov
pop
mov
(bad)
cmc
idiv
arpl
jmp
cld
xor
xchg
pop
push
test
popa
scas
push
inc
repz
xor
mov
loope
int
jecxz
jns
sub
dec
push
inc
pop
js
loopne
sbb
mov
jge
jmp
xor
mov
pop
jbe
scas
mov
loop
in
das
cmp
or
dec
aam
retf
mov
(bad)
xor
mov
ins
adc
outs
loop
popa
in
fnstcw
js
ja
add
and
cmps
inc
cmp
mov
push
or
xchg
lock
out
or
sub
and
jp
xlat
xchg
mov
pop
pop
xchg
adc
pop
inc
fs
leave
es
mov
call
pusha
(bad)
jge
stos
in
jo
xor
pop
jno
sbb
mov
(bad)
mov
and
add
xor
fs
ret
call
je
xchg
sub
std
cdq
push
sbb
addr16
hlt
xor
lea
shl
inc
(bad)
sbb
jmp
imul
mov
stos
add
xchg
cmp
jecxz
in
pop
clc
in
rcl
dec
mov
fmul
xor
and
cmp
inc
fucomip
jnp
lahf
adc
mov
es
test
lock
add
arpl
sub
sub
mov
pop
mov
xlat
jae
shl
mov
test
ret
jbe
rol
dec
and
fninit
shl
daa
push
fnstsw
mov
scas
jns
add
pop
bound
xor
xchg
fs
loope
jne
sub
data16
rol
mov
out
adc
test
mov
call
push
dec
neg
sub
cs
add
xchg
adc
mov
dec
or
mov
add
mov
add
push
repz
adc
pop
push
mov
cs
cmp
mov
inc
es
jge
sub
in
mov
fisubr
push
xchg
call
(bad)
ror
hlt
push
into
dec
cmps
jns
fcomp
dec
mov
jecxz
pop
js
jo
pop
xchg
xchg
loope
mov
out
mov
mov
int
movs
add
or
mov
pop
outs
xor
test
out
aam
xchg
mov
pop
imul
xchg
adc
and
dec
sbb
or
inc
xor
(bad)
aam
dec
loop
dec
aas
out
nop
adc
std
sbb
pop
sub
dec
sub
or
movs
(bad)
daa
ds
jecxz
pop
xchg
(bad)
fnsetpm(287
xchg
ret
jne
nop
das
aad
jmp
inc
test
push
inc
cmp
push
adc
pop
adc
outs
jle
xor
in
mov
stc
ds
adc
inc
out
ss
dec
pop
mov
push
push
in
mov
mul
icebp
lods
dec
dec
or
sub
test
jecxz
outs
and
fxch
jbe
add
push
(bad)
cmps
jle
pop
adc
dec
and
hlt
add
shl
ss
out
pop
jne
push
imul
inc
push
cmp
mov
sbb
jp
dec
and
arpl
and
(bad)
shl
push
jae
mov
or
(bad)
or
adc
mov
pop
dec
pop
faddp
ret
(bad)
cmp
leave
jecxz
mov
sahf
out
rcl
(bad)
pop
outs
add
and
pop
popf
ret
sub
std
mov
mov
pop
mov
test
lea
mov
sub
movs
stc
aas
pop
jmp
mov
ret
inc
icebp
fwait
popa
aaa
int
imul
mov
rol
dec
dec
add
cmc
cwde
loopne
xchg
cmps
jns
or
push
and
sahf
dec
or
pop
jnp
mov
inc
xor
mov
fucom
sub
mov
jecxz
not
int3
cwde
push
push
mov
mov
jo
arpl
test
pop
rol
neg
xchg
dec
sub
pop
sbb
add
push
frstor
push
out
aas
jno
retf
ins
xchg
cmp
jmp
lahf
mov
fbstp
lods
xchg
mov
test
je
xchg
inc
pushw
sub
jecxz
stc
(bad)
push
aam
pop
retf
jo
inc
out
int3
aam
in
fimul
or
and
dec
movs
dec
inc
ret
iret
sbb
cmp
dec
scas
(bad)
movs
adc
out
pushf
push
rol
mov
mov
clc
loopne
leave
movs
xlat
popw
repz
mov
fld
jns
addr16
ss
cmp
xor
xor
movs
mov
ficom
push
nop
add
adc
out
mov
cdq
je
stc
js
call
and
shr
(bad)
mov
mov
cwde
imul
jl
cmp
sbb
push
xor
leave
cmc
jne
jne
mov
push
sub
xor
ins
out
mov
pop
cld
or
fdivr
test
xor
mov
sbb
es
sub
shl
pop
out
dec
outs
ret
adc
dec
cmp
dec
shl
bts
out
rcr
push
xor
xchg
fs
(bad)
xchg
adc
mov
jae
arpl
or
repz
ins
mov
sbb
es
lds
jp
mov
in
dec
aam
dec
jp
cs
cdq
out
push
dec
mov
dec
pop
push
out
mov
leave
aaa
lea
ds
cmp
and
loope
xchg
pop
(bad)
bound
(bad)
in
jg
xchg
xor
push
aaa
add
bound
icebp
cld
xchg
aaa
es
mov
xchg
fld
jo
xor
lods
and
ret
push
mov
and
iret
repz
mov
test
xchg
adc
jbe
sub
mov
repnz
xchg
mov
cmp
add
push
dec
push
test
mov
jecxz
mov
push
dec
rol
test
out
mov
in
out
pusha
iret
jne
push
push
adc
cmp
clc
adc
(bad)
xchg
cmp
and
fwait
or
pop
pusha
mov
cli
bound
and
je
mov
imul
ror
int3
push
fistp
dec
cmp
mov
inc
inc
push
cs
pop
mov
jecxz
nop
das
fist
scas
add
test
mov
or
out
pop
xchg
mov
push
repnz
mov
fsubrp
pop
add
mov
je
adc
xor
inc
sbb
aam
dec
adc
rol
mov
dec
jl
test
test
(bad)
stos
cld
popf
int3
jb
cwde
adc
pushf
lahf
adc
mov
fwait
mov
gs
inc
ins
or
push
std
ins
add
and
push
imul
ins
add
shr
jae
and
and
xchg
in
dec
lahf
lahf
data16
and
ins
fild
scas
aad
sbb
jns
ins
lock
push
scas
adc
add
dec
sbb
mov
out
dec
fisubr
adc
dec
cmp
(bad)
and
hlt
xor
das
sub
jg
cmps
les
add
pushf
mov
aam
rcl
sub
fild
xlat
lods
dec
aad
out
jg
gs
sar
aad
lahf
mov
jns
int
push
adc
push
dec
add
lods
pop
mov
adc
cmp
adc
cmc
mov
hlt
fwait
push
mov
int3
adc
icebp
stc
dec
div
out
pop
sahf
jmp
xchg
adc
jno
aam
leave
ins
adc
push
test
and
cmp
jbe
stos
or
das
out
jnp
adc
mov
jp
fdiv
cdq
std
jmp
inc
stos
adc
pop
int3
iret
mov
pop
call
popf
cmp
leave
fcom
ficom
test
adc
dec
loopne
add
pop
in
ins
inc
mov
xchg
lds
mov
in
loopne
xor
test
out
xchg
enter
mov
pop
int3
in
push
fwait
call
fsub
and
(bad)
jmp
dec
pop
repnz
push
(bad)
pop
stos
out
xor
test
jbe
push
mov
mov
mov
and
add
(bad)
adc
mov
imul
and
xor
pop
fistp
sub
cld
mov
addr16
(bad)
pushf
xchg
cli
test
out
inc
in
out
mov
mov
fs
call
or
iret
fsubr
cmps
and
dec
push
mov
pop
push
xchg
aam
add
add
loope
jmp
pop
hlt
mov
dec
jp
cdq
cmp
test
bound
jp
sub
sahf
xchg
xchg
or
and
adc
or
cmc
cmc
ja
(bad)
das
cwde
fwait
add
sub
or
fnstenv
push
(bad)
mov
cli
sub
test
loope
int
cmp
or
sbb
and
cli
mov
stos
push
mov
mov
dec
das
sbb
out
(bad)
nop
sbb
test
arpl
movs
and
lea
cmp
ret
in
cwde
adc
or
fist
repz
ficomp
push
push
loop
mov
shr
sti
in
sbb
push
mov
pop
jnp
cs
test
or
cmp
popa
push
xchg
inc
sbb
ret
ins
ror
inc
jae
movs
sub
push
jl
retf
cmp
inc
and
pop
cmp
neg
pop
mov
cmc
daa
rcpps
push
xchg
test
in
jae
and
sbb
retf
sahf
xor
mov
dec
xor
jecxz
in
sub
jmp
xchg
aaa
cmc
mov
dec
jl
pop
dec
inc
in
or
pop
hlt
retf
mov
xchg
inc
push
popf
inc
arpl
retf
sbb
inc
xchg
scas
mov
lock
arpl
mov
dec
scas
sub
(bad)
and
push
data16
test
(bad)
fstp
sub
mov
add
loop
jecxz
cvtps2pi
pop
pop
out
sub
xor
mov
mov
mov
mov
imul
iret
int3
inc
push
and
fild
pop
jns
pop
cmp
(bad)
jns
repnz
xchg
or
or
and
arpl
ret
in
jle
add
jmp
call
dec
cmc
sub
adc
ret
mov
cmp
loope
test
sbb
pusha
jecxz
dec
cwde
popa
push
rcl
xchg
adc
add
add
inc
push
jle
xor
je
mov
out
jo
dec
fmul
pop
adc
adc
js
test
cmc
jne
inc
pop
leave
xor
lock
xor
sbb
sbb
mov
mov
scas
es
xchg
sub
repz
push
bnd
mov
out
fistp
int3
(bad)
xor
pushf
imul
xchg
inc
inc
add
pop
xor
jecxz
dec
lds
mov
dec
pop
add
repnz
mov
inc
lock
into
mov
out
mov
mov
xor
add
ins
int
push
inc
call
xor
scas
adc
fdivr
fisttp
and
addr16
cdq
shl
inc
mov
sub
mov
or
sbb
popf
jl
jp
or
cmp
inc
in
sub
shl
out
push
outs
xor
and
pop
cmps
mov
in
mov
std
mov
xchg
(bad)
aas
jp
push
stos
mov
(bad)
jmp
mov
jno
push
ds
xor
mov
mov
push
ficomp
pop
adc
shl
xchg
lods
int3
iret
jg
mov
pop
cs
cmc
test
shl
mov
xchg
mov
inc
cmp
add
xor
adc
enter
out
mov
data16
nop
add
shr
cmc
jmp
enter
sub
stc
(bad)
xor
(bad)
out
lock
push
dec
popf
push
mov
xor
add
sbb
dec
push
std
push
pop
hlt
bound
cmp
fsub
leave
std
mov
arpl
aaa
aaa
int
sub
sbb
jae
and
mov
cmp
dec
mov
mov
hlt
jmp
sar
push
nop
push
add
pop
jge
dec
pushf
pop
sbb
jge
and
outs
inc
out
cmp
cmp
mov
loop
pop
(bad)
out
lods
cld
pop
jle
pushf
enter
pop
cmp
and
lds
xchg
pop
hlt
cmp
push
outs
mov
mov
retf
popa
push
push
mov
rol
repz
xlat
xchg
dec
out
cwde
mov
call
test
inc
mov
ret
scas
(bad)
xchg
push
and
adc
sbb
jmp
inc
test
mov
mov
push
pop
pop
pop
pop
mov
fs
sar
dec
imul
iret
mov
cdq
daa
dec
xchg
fld
sub
mov
add
pop
div
mov
ja
imul
push
sbb
ret
cdq
repnz
jle
push
retf
ja
mov
sar
out
sahf
cmp
xor
inc
jecxz
ja
dec
jl
jmp
jmp
jle
fdiv
imul
pop
pop
or
adc
lods
lahf
std
xchg
jbe
ret
jb
outs
sbb
sahf
ret
loope
jbe
(bad)
mov
lods
das
cld
cmp
loopne
xchg
or
and
in
cmc
adc
cmc
push
jmp
imul
popa
(bad)
fild
pop
retf
int
imul
xor
xchg
retf
xor
test
add
dec
cli
ror
nop
xchg
repz
(bad)
sbb
dec
and
xchg
xor
pop
add
shr
cdq
(bad)
jp
xor
pop
sub
pushf
cld
ins
or
or
fnsetpm(287
or
out
mov
or
fldcw
lods
or
ins
jns
aas
push
cmp
test
mov
enter
inc
or
and
arpl
mov
add
dec
xchg
and
cmp
mov
stos
and
lds
jg
int3
cmps
xchg
mov
ja
fsub
(bad)
sub
jecxz
ss
dec
sbb
loop
cmp
retf
ja
push
cmc
(bad)
jle
std
cwde
jle
and
jg
adc
aas
xchg
and
dec
xchg
mov
pop
mov
arpl
das
and
add
es
inc
fsub
dec
retf
rep
jb
addr16
xchg
push
jo
pop
and
in
and
xor
mov
sbb
shl
int3
shl
xor
(bad)
fs
fstp
scas
js
jnp
and
adc
cmp
outs
xchg
scas
jb
mov
retf
int
fiadd
imul
mov
push
lahf
mov
mov
pusha
jecxz
pop
sti
loop
int
pop
sbb
mov
inc
jecxz
jle
mov
or
inc
lods
xchg
fisttp
jnp
or
push
loopne
repnz
jmp
ss
adc
shr
sub
push
push
push
sbb
mov
icebp
mov
hlt
xchg
jmp
push
mov
adc
xchg
sti
shl
psrld
and
(bad)
sbb
add
inc
(bad)
shl
rol
jae
cmp
push
(bad)
push
xor
fs
cmc
imul
daa
add
xor
add
mov
les
shr
retf
in
dec
sub
mov
in
movs
sbb
pop
psubsb
or
retf
push
add
mov
in
xchg
jns
inc
movs
in
retf
ss
aad
jmp
sub
xchg
and
push
fild
movs
sbb
(bad)
xchg
repnz
repnz
pop
test
mov
jp
leave
and
and
cmp
je
inc
jo
(bad)
mul
aad
(bad)
sti
pop
mov
inc
sub
retf
cs
js
pop
pop
mov
add
sub
test
adc
jb
test
and
into
sub
jecxz
sbb
fsub
jle
pop
hlt
mov
inc
adc
and
or
hlt
fstp
xchg
daa
fdivr
jmp
dec
jg
pop
xchg
xchg
jecxz
out
ds
call
inc
sbb
and
push
jl
outs
or
cwde
mov
scas
pop
push
xchg
or
mov
jmp
cmp
imul
adc
adc
(bad)
out
addr16
sbb
dec
sbb
pusha
cmp
mov
loope
pop
lahf
jmp
jne
scas
stos
adc
mov
in
movs
xor
clc
rcl
mov
cmps
(bad)
push
xchg
jno
div
mov
pop
mov
adc
cmc
mov
fdivr
out
sbb
mov
cmp
loopne
cmps
rol
sbb
cdq
(bad)
pop
mov
sbb
push
push
inc
cmps
inc
hlt
push
(bad)
pop
cmc
sbb
mov
xor
jns
lods
out
or
xlat
dec
xor
pop
outs
sbb
retf
leave
xchg
jp
test
mov
push
shl
bound
inc
lahf
sub
jo
das
(bad)
xlat
push
shr
jecxz
cmc
jbe
shr
and
rcl
cs
test
mov
jmp
xchg
int
cmp
jno
sub
xchg
push
dec
loope
imul
pop
xchg
sub
jp
pop
sbb
stos
adc
fidiv
not
inc
pop
je
imul
loop
lea
jge
and
inc
pop
outs
icebp
cmps
jae
inc
jecxz
xchg
enter
sub
sub
data16
push
jmp
mov
sub
fs
add
addr16
pusha
mov
pop
cmp
sub
mov
pop
xor
lea
sub
adc
dec
dec
in
jo
retf
and
mov
push
aas
xor
mov
xchg
jbe
ja
push
jae
arpl
xchg
and
mov
popf
nop
jb
dec
xor
lahf
push
or
fdiv
aaa
aaa
sbb
(bad)
cld
in
ins
stc
xor
mov
inc
sbb
adc
sub
cs
adc
outs
add
int
cs
mov
call
inc
inc
call
popf
int3
jmp
mov
es
les
(bad)
dec
xchg
stos
mov
jmp
sbb
pop
xor
xchg
lahf
push
adc
add
push
push
das
ss
ds
and
lock
test
js
pusha
jno
mov
jge
sbb
icebp
sbb
push
or
test
or
add
sbb
or
mov
fcmovu
shl
mov
push
cwde
mul
cmp
repnz
jae
and
sub
jno
xchg
xchg
jmp
jnp
dec
call
sbb
(bad)
mov
adc
fwait
mov
das
dec
pminub
mov
cmp
and
push
xor
stos
mov
outs
inc
in
mov
icebp
add
sbb
add
sbb
shl
sar
sti
push
add
xchg
and
push
mov
cwde
pop
clc
xchg
mov
mov
inc
stos
fadd
adc
sti
outs
pop
jge
inc
xchg
loope
mov
sbb
push
add
rcr
xchg
fnstsw
add
jmp
sbb
xor
inc
inc
leave
in
or
push
repnz
bound
sub
xchg
jno
imul
inc
test
in
dec
adc
test
retf
jle
shl
and
into
pop
mov
inc
arpl
test
push
push
sub
aas
jb
or
fldenv
pop
cwde
sahf
ds
(bad)
fistp
clc
stos
loope
lahf
addr16
jmp
dec
add
cdq
mov
and
mov
mov
sbb
sub
and
loop
mov
sub
int3
gs
pop
jl
dec
ret
call
jge
add
inc
pushf
sahf
jmp
(bad)
mov
or
push
xchg
and
lods
mov
jmp
dec
sar
jmp
and
add
jmp
popa
xlat
push
and
nop
sub
popf
xchg
pop
sahf
sti
repz
add
jp
push
dec
dec
xchg
xchg
sbb
lahf
popa
hlt
mov
jne
repnz
pop
jge
repnz
pushf
xchg
in
fs
mov
mov
iret
fwait
clc
(bad)
aad
sub
es
pop
jo
loop
dec
test
imul
xor
shr
xchg
xchg
nop
test
ins
sbb
test
pop
retf
(bad)
fbld
fcom
inc
xlat
dec
dec
fsubr
push
inc
in
mov
sbb
sti
cmps
hlt
(bad)
arpl
aam
jne
inc
je
ret
ret
cld
shl
(bad)
out
leave
test
shl
fscale
ret
loop
sbb
inc
xor
sbb
sub
jmp
xchg
mov
int3
fldenv
and
cld
test
xor
repz
lods
int
(bad)
mov
mov
mov
xchg
xor
mov
push
leave
inc
nop
sbb
retf
aad
inc
stc
shl
stos
pop
sub
xchg
pop
ins
sar
xor
pushf
out
and
loop
popa
popa
retf
mov
(bad)
addr16
fistp
xor
sbb
jmp
or
push
aad
mov
cli
push
sbb
loope
aam
dec
xor
pop
mov
movs
inc
ror
je
adc
inc
and
push
(bad)
fs
stc
popa
nop
rcl
cli
or
inc
push
xchg
dec
loope
xor
xor
jg
pop
push
mov
std
add
pusha
sub
outs
outs
inc
adc
lock
cmp
scas
jecxz
mov
call
adc
(bad)
push
loope
mov
pop
pusha
dec
aad
cs
test
pop
out
inc
sub
out
mov
sbb
dec
ins
mov
in
ret
pushf
lods
cmp
stc
int3
push
sbb
jbe
jmp
or
mov
jp
aaa
mov
imul
scas
cmps
adc
lea
push
adc
cmp
mov
fisttp
sub
(bad)
jo
jg
inc
out
sbb
or
arpl
inc
push
cwde
fild
or
mov
aam
cmp
repnz
bound
sub
fwait
push
dec
repz
mov
rcl
mov
xor
fnstsw
fisubr
fst
scas
lods
inc
jmp
mov
inc
(bad)
sub
mov
hlt
retf
xchg
pop
add
pop
aas
sbb
mov
jle
cdq
mov
pop
mov
jnp
xor
outs
mov
jae
lds
movs
cmp
xchg
push
dec
sub
add
jno
cmp
daa
clc
cdq
cmp
sbb
int3
addr16
in
call
call
inc
loop
test
call
adc
add
or
jmp
dec
aad
and
pop
ror
or
xchg
inc
cmp
pusha
mov
sbb
pop
out
jo
test
inc
dec
sub
push
sbb
or
mov
mov
cwde
xchg
xchg
shr
ret
das
sbb
fild
and
mov
cmp
mov
in
(bad)
and
jnp
mov
mov
sub
xor
test
mov
xchg
lea
out
rcl
cmp
popf
jo
(bad)
fnstenv
add
mov
or
aaa
icebp
inc
jecxz
xor
ret
mov
push
jo
test
retf
fdivp
xchg
loopne
out
int3
sub
out
mov
in
xchg
(bad)
cmp
mov
into
xor
sub
or
icebp
lea
aas
stos
shl
stos
mov
dec
scas
inc
(bad)
xchg
xor
jge
lds
pop
movd
int3
and
push
ret
test
in
out
movs
(bad)
stc
mov
clc
cmp
jbe
je
sti
popa
mov
arpl
dec
rcl
mov
mov
mov
xlat
scas
mov
mov
movs
or
cmps
mov
push
cmp
jg
push
std
or
or
pop
or
fcos
cmc
sub
push
cs
adc
mov
xchg
dec
pop
jge
and
(bad)
sti
jl
je
int3
push
xchg
inc
add
add
scas
and
pop
add
and
add
outs
add
cli
jge
sti
loopne
mov
(bad)
sahf
sub
(bad)
out
or
loop
xlat
test
sub
mov
push
xor
int3
mov
cmps
cmp
mov
(bad)
ror
sub
imul
add
out
dec
retf
pop
add
and
add
xchg
xchg
add
(bad)
cmps
mov
retf
rcl
(bad)
jle
cmc
xor
into
xor
xor
arpl
call
fwait
jp
jmp
std
xor
and
jp
push
pop
xchg
pop
pop
les
mov
cmp
sub
sbb
aas
fs
xor
sub
pop
in
or
pop
pop
out
xchg
bound
loope
test
arpl
mov
mov
sub
cmp
imul
and
cmps
jae
pop
push
mov
outs
aas
dec
sub
inc
arpl
cmp
push
push
sahf
data16
enter
cmp
pop
scas
xor
out
pop
mov
popf
xchg
mov
jnp
xor
(bad)
cli
jle
lds
test
loope
cmp
das
loopne
sbb
or
xchg
fwait
dec
sub
fisttp
cmp
leave
push
mov
pusha
and
push
pop
cmp
clc
nop
je
push
cmp
adc
cmc
popf
add
je
sbb
sub
cmp
cmp
sub
das
inc
mov
test
aas
stos
je
popf
retf
lock
xchg
outs
nop
jne
and
xchg
pushf
enter
add
shl
pop
xchg
mov
jne
test
pop
sub
in
jle
outs
icebp
sub
ins
in
jmp
fistp
mov
std
push
pop
in
(bad)
aas
aaa
push
lods
test
mov
cmp
push
js
xor
cmp
push
(bad)
jmp
pop
lock
stos
ins
retf
ins
push
call
jecxz
xchg
pop
dec
retf
fnstsw
imul
(bad)
cmp
test
jbe
cld
stc
jmp
movs
xor
mov
enter
mov
shr
cdq
addr16
fidiv
adc
adc
cs
in
(bad)
cmp
dec
mov
lahf
xor
aam
mov
mov
mov
call
mov
clc
push
ds
dec
or
push
stos
(bad)
maxps
idiv
pushf
pop
outs
jne
pop
clc
sar
fcmovbe
ja
js
or
jmp
mov
xor
ror
push
cs
retf
jecxz
cmp
pop
in
jnp
mov
sub
pushf
inc
iretw
inc
aad
inc
movs
daa
xchg
or
add
mov
call
imul
adc
das
mov
(bad)
ficom
scas
data16
pop
push
jmp
fcom
into
sub
sub
fcomi
fwait
test
test
aam
sbb
cmp
xor
pop
les
push
stos
xchg
punpcklbw
pop
cmps
mov
call
aam
lods
leave
dec
xchg
dec
jno
gs
xor
xchg
fld
imul
adc
xchg
clc
lods
mov
ficomp
mov
sti
aam
cld
pop
sub
shl
or
lods
cdq
mov
pop
sub
pop
mov
inc
shl
pop
hlt
cmps
mov
loop
and
pushw
jmp
and
mov
mov
dec
cmp
jge
cwde
ds
loope
dec
sti
lock
jl
push
jnp
imul
dec
lods
jecxz
cmc
jae
in
mov
in
add
mov
out
stos
ret
popf
leave
adc
cmp
mov
jmp
add
jl
pop
dec
call
mov
sbb
call
repnz
push
std
dec
pop
sbb
mov
arpl
sbb
(bad)
(bad)
or
pop
repz
je
sub
addr16
xchg
sti
mov
mov
jp
jecxz
je
or
cmp
xchg
call
rcr
out
addr16
ror
dec
mov
or
imul
push
cmp
and
mov
loopne
out
repz
inc
add
adc
sub
lahf
inc
push
adc
jmp
inc
mov
mov
mov
sbb
je
fcmove
dec
jne
in
pop
inc
adc
jmp
sbb
movs
mov
rcr
adc
leave
retf
push
add
xchg
xchg
add
aaa
jbe
add
adc
sti
xor
xor
(bad)
hlt
in
cmp
and
clc
lock
add
fimul
sahf
fiadd
fiadd
ret
push
loop
imul
or
ret
or
sbb
mov
mov
inc
(bad)
dec
sbb
mov
cmp
cmps
mov
inc
sar
sbb
add
scas
ins
xor
cmp
adc
test
gs
push
shl
mov
push
add
cmp
add
(bad)
mov
and
scas
jge
sti
(bad)
lods
cdq
in
icebp
pushf
ret
pop
xchg
cmps
jae
jg
xor
imul
jecxz
std
int
inc
or
sbb
pop
mov
mov
and
cld
rcl
lahf
xlat
movs
cmp
fnstcw
addr16
inc
cmp
cmps
cmc
inc
xor
sti
cs
lods
(bad)
xor
mov
mov
rcl
vprotq
pop
ins
sbb
inc
push
push
pop
out
je
int3
test
aam
pop
sti
popf
or
das
jne
(bad)
outs
aad
jp
mov
jmp
fsub
js
add
aas
push
je
(bad)
mov
(bad)
daa
fnstcw
mov
xchg
fisub
ss
or
pop
push
mov
out
jle
sbb
lock
scas
mov
(bad)
jo
xchg
and
je
mov
mov
sbb
jne
(bad)
lock
mov
mov
fs
js
repz
repz
add
fisubr
mov
cmps
add
loopne
sar
pop
lahf
jmp
push
cmp
jmp
imul
dec
xchg
jg
icebp
and
mul
movs
ror
jne
outs
(bad)
cwde
es
jecxz
lods
mov
out
popf
mov
clc
fidivr
mov
aas
fbstp
cwde
jb
push
test
adc
jg
es
in
repnz
fwait
mov
(bad)
popf
out
popf
ins
lea
xchg
movs
push
movs
xor
sub
add
mov
pop
xor
sbb
mov
pop
xor
sbb
inc
push
aas
pop
mov
add
out
jae
aam
pop
dec
push
sbb
pop
ffree
pop
inc
cld
cmp
in
sub
dec
push
jp
jne
add
and
sub
cmp
sub
adc
out
sbb
sbb
jg
sub
xor
fistp
jmp
and
jne
mov
pop
out
call
das
cs
mov
retf
or
std
xchg
pop
enter
xchg
sub
shr
mov
jb
add
in
addr16
xor
or
add
pop
or
cmp
stos
ret
xchg
push
das
adc
lods
xchg
loopne
jmp
sbb
cdq
daa
and
and
ror
fidiv
ret
lds
pop
mov
shr
adc
mov
and
test
inc
fcomp
xchg
mov
out
dec
inc
push
mov
sahf
jge
movs
jnp
pop
push
fist
xchg
fisttp
cs
push
mov
adc
push
cmps
bnd
and
ret
sti
in
pop
mov
mov
enter
rcl
imul
and
adc
cmc
push
fisub
pop
sub
ss
adc
push
inc
pop
sbb
dec
ds
popa
push
enter
stos
cmc
add
and
aaa
cld
sub
push
test
dec
sub
clc
xchg
aam
adc
test
mov
mov
in
dec
mov
xlat
stos
fadd
in
xor
fst
pusha
push
jae
test
xchg
ret
dec
xor
test
push
inc
mov
aad
sub
dec
inc
xchg
add
mov
pop
mov
xor
retf
shr
pop
pop
mov
pop
push
mov
sub
push
inc
cmp
push
add
xor
pop
dec
sub
sbb
or
rcr
dec
test
lea
or
mov
xor
enter
push
pop
sbb
push
pop
test
mov
or
adc
sbb
mov
(bad)
dec
jg
mov
ret
fcmovbe
cmp
push
jns
lahf
mov
dec
hlt
jae
or
xor
imul
and
enter
pop
dec
sar
jmp
jns
adc
dec
sti
cmps
cwde
outs
inc
adc
addr16
xor
and
jmp
cmc
fistp
repz
lea
enter
(bad)
jmp
sahf
push
cmc
and
adc
ins
scas
pop
sbb
(bad)
jmp
repz
add
cmp
in
cmp
mov
(bad)
lds
lods
call
jbe
popf
lds
cmp
or
pop
xor
mov
pushf
push
test
xchg
in
push
nop
mov
cmp
add
hlt
(bad)
out
into
and
xchg
add
gs
jmp
ret
ret
mov
jl
xchg
into
aad
dec
push
sbb
arpl
push
xor
jne
mov
pop
test
pop
push
xchg
mov
fistp
clc
fwait
das
sub
and
adc
xchg
and
sub
mov
mov
sahf
dec
pop
cmc
es
add
idiv
out
sbb
aaa
lods
xor
dec
sti
pop
jl
add
mov
loope
and
push
cld
jg
daa
je
out
or
sub
pop
push
aam
bnd
xor
lea
cmp
imul
test
mov
cdq
(bad)
je
sub
iret
mov
dec
out
sbb
cmp
hlt
pop
lods
fisttp
jg
adc
adc
jmp
cmp
iret
sub
dec
nop
and
xchg
jge
nop
xchg
lds
jmp
sbb
cmps
adc
mov
jb
jns
test
rol
sbb
in
call
std
rcl
xor
mov
in
in
mov
mov
mov
leave
mov
mov
inc
cmp
cmp
cmp
sub
std
cmp
push
jl
ds
push
jl
inc
cdq
mov
inc
jmp
in
pop
cli
inc
sub
mov
imul
add
jp
daa
mov
aam
and
adc
mov
mov
fimul
fsubr
pushf
adc
push
inc
inc
mov
jp
add
or
jbe
push
mov
xor
push
jno
neg
int
leave
nop
rcr
movs
push
mov
idiv
call
je
jp
lock
ret
outs
mov
inc
dec
mov
and
mov
loop
jbe
xor
lods
cwde
or
clc
mov
stos
popa
out
lock
sub
jmp
loop
addr16
(bad)
dec
xchg
push
xor
loopne
sbb
mov
clc
inc
in
sbb
sbb
ins
add
in
pop
aam
rol
je
xlat
fwait
adc
jb
ss
sub
test
in
jmp
test
inc
mov
cmp
sub
popa
lea
adc
xor
jle
lock
or
(bad)
call
push
mov
fcmovb
pop
cmp
xor
mov
ja
sub
icebp
jae
daa
or
fadd
or
mov
xchg
dec
pop
mov
mov
adc
adc
add
or
sahf
jae
cmc
jne
adc
int3
test
inc
(bad)
adc
push
push
pushf
pop
jae
add
adc
movs
dec
sub
sbb
outs
sbb
inc
pop
js
pop
sbb
(bad)
push
mov
cs
dec
loopne
push
mov
(bad)
xor
int3
cmps
sahf
adc
ss
sar
push
das
and
jno
das
lahf
xchg
inc
fistp
xchg
dec
je
dec
shr
push
push
in
jb
fstp
add
lahf
push
mov
movs
mov
or
adc
jmp
rcr
push
cmps
xor
xchg
dec
movs
aam
xchg
pop
retf
popf
sar
lods
mov
nop
cmp
out
push
stos
mov
mov
icebp
outs
sar
test
xor
mov
daa
popf
xchg
adc
into
mov
pop
ins
push
cli
sbb
pusha
std
adc
data16
test
js
inc
out
ror
lea
aas
sbb
into
cmp
stc
push
adc
mov
data16
daa
out
dec
pop
pop
mov
call
mov
lds
or
cmp
inc
cmp
test
mov
into
shl
sbb
adc
push
and
test
bound
jo
fcomp
ret
xchg
std
pusha
ficom
jmp
mov
xor
mov
add
inc
fs
lea
mov
xor
fistp
stc
lock
fistp
xor
int3
das
movs
repz
lods
mov
neg
jo
pop
adc
int3
or
mov
fld
xchg
repnz
add
xchg
and
fiadd
daa
movs
outs
add
mov
and
pop
pop
pop
retf
jo
cmps
inc
add
aaa
mov
add
jns
mov
je
lea
mov
fs
mov
rcr
mov
xor
inc
inc
adc
repz
dec
(bad)
sbb
data16
bound
and
loope
add
xchg
or
mov
shl
push
outs
sub
data16
(bad)
pop
iret
imul
jno
cld
lods
test
or
imul
push
jnp
or
mov
adc
add
in
pop
adc
push
pop
sub
sbb
dec
daa
mov
adc
mov
add
enter
add
out
in
jb
xchg
arpl
jmp
(bad)
fucomi
shr
add
mov
cs
sub
sub
imul
and
outs
aas
sbb
xchg
lahf
dec
jne
repnz
jbe
mov
push
loope
test
dec
push
loopne
dec
push
mov
sbb
adc
lods
mov
add
sbb
mov
in
daa
push
adc
mov
cmp
mov
ror
xchg
push
cli
sub
mov
mov
in
and
hlt
fisttp
fwait
icebp
cmp
stos
pop
xchg
and
jl
sbb
lahf
xor
mov
inc
inc
add
and
and
xchg
mul
add
mov
arpl
fldenv
in
jmp
mov
sub
movs
int
sub
push
fs
and
out
mov
and
mov
mov
push
pop
movs
imul
adc
cli
ds
xchg
pop
lods
leave
mov
and
imul
jbe
adc
ret
bnd
mov
mov
dec
dec
lods
out
add
cwde
mov
out
pop
shl
jmp
sbb
test
nop
mov
xlat
pushf
adc
imul
xor
lods
dec
jge
jno
add
aas
loop
push
and
outs
inc
xchg
arpl
gs
popa
repz
xchg
lds
cmp
inc
cmps
pushf
call
jno
add
fcmovu
xchg
jg
pop
dec
cmc
adc
pop
sub
ss
push
cdq
jg
or
inc
div
addr16
(bad)
cmp
ret
cdq
aad
add
mov
test
outs
mov
add
add
es
or
imul
cld
mov
xchg
loop
lock
mov
or
sahf
jg
lds
test
movs
scas
das
stc
xor
sbb
jg
daa
std
inc
add
xor
adc
xchg
xor
out
mov
jo
mov
xchg
(bad)
int
arpl
(bad)
push
ffree
shr
movs
clc
outs
prefetch
cmp
inc
mov
push
daa
jb
push
dec
in
inc
mov
push
cwde
scas
mov
mov
push
xor
js
mov
adc
imul
sar
xor
cmp
sub
jbe
xchg
sbb
add
cwde
adc
(bad)
sti
cmps
mov
addr16
mov
mov
cli
shr
jnp
add
push
es
clc
addr16
sbb
jg
jo
sahf
or
jae
mov
gs
lea
cmp
in
xchg
loop
adc
enter
xchg
or
jge
(bad)
dec
fist
sub
prefetch
or
dec
lds
fist
mov
in
inc
stc
jns
test
push
mov
adc
or
pop
sahf
pop
add
test
clc
dec
not
add
mov
test
ss
mov
push
test
inc
xor
xor
add
call
xor
mov
lods
jle
mov
dec
mov
cld
je
das
(bad)
hlt
sahf
(bad)
jl
add
add
push
and
mov
js
inc
in
pop
mov
js
push
adc
mov
inc
neg
sti
pop
std
xchg
inc
lahf
dec
dec
xor
stos
cmp
movs
sub
int3
in
fdiv
mov
ror
mov
push
cmp
add
sbb
cmp
sbb
dec
dec
mov
rcl
(bad)
aad
aad
mov
adc
(bad)
aaa
movs
adc
fld
mov
sub
dec
ins
hlt
test
pop
sub
addr16
inc
mov
loop
push
pop
into
aaa
jb
fwait
dec
lock
or
pop
or
sahf
movs
test
xchg
and
out
cmp
add
xchg
push
imul
jbe
ror
mov
ret
pop
push
pop
out
inc
xor
jno
mov
inc
ret
loop
inc
cmp
push
out
fcmovb
test
xor
push
pop
retf
cmps
fucomip
mov
leave
push
jecxz
cmp
test
(bad)
scas
outs
leave
push
jae
pop
dec
(bad)
out
mov
enter
ffreep
adc
loope
mov
mov
mov
imul
inc
shl
add
mov
loop
scas
shr
or
adc
inc
xchg
in
sub
(bad)
sub
outs
call
mov
adc
stos
cwde
jnp
test
pusha
mov
sbb
cwde
sbb
adc
inc
push
or
sbb
jne
dec
push
push
cmp
cmp
adc
xor
leave
jl
jecxz
and
cmp
push
ins
cwde
push
push
xchg
in
sbb
lods
xchg
ja
stos
cmps
test
jl
cmps
ss
xlat
push
ret
push
sub
or
js
stos
jae
xor
add
mov
in
inc
ins
mov
ja
pop
xchg
jmp
dec
fwait
or
mov
or
iret
dec
rcr
push
xchg
sub
rol
adc
jns
pop
or
nop
pop
in
pop
cmp
xlat
pushf
ss
retf
mov
jb
pusha
dec
inc
mov
jno
jne
and
mov
dec
or
xchg
int
outs
jmp
and
mov
sub
ficomp
sub
lahf
xchg
dec
sbb
mov
adc
pop
inc
jns
sbb
mov
arpl
out
std
enter
sbb
and
xor
test
test
addr16
or
loopne
lahf
fcom
dec
pop
icebp
add
and
addr16
clc
push
cmp
pop
in
dec
mov
lock
bound
aas
lods
jae
push
sbb
fst
and
adc
shl
shl
mov
aas
test
and
out
sub
mov
leave
push
cmc
xchg
adc
outs
sbb
xchg
lock
shr
(bad)
adc
sub
not
outs
inc
sbb
mov
dec
(bad)
sti
out
cmc
rcl
push
gs
retf
adc
push
aam
push
(bad)
test
xchg
add
and
lea
dec
fisttp
(bad)
adc
or
mov
jne
dec
mov
lock
std
xor
jmp
inc
pushf
push
je
loope
inc
outs
mov
fxam
js
pop
and
sub
mov
cmp
push
sub
mov
lods
or
imul
popa
or
cmp
sbb
cmp
(bad)
(bad)
retf
add
xor
aam
cmp
in
cmps
and
mul
cwde
inc
sbb
repnz
inc
imul
mov
mov
mov
xchg
pop
cmp
inc
dec
mov
cs
cwde
es
pop
(bad)
js
sbb
cwde
adc
jl
jns
jae
pop
add
aaa
dec
out
jae
inc
and
sub
pop
into
jp
jmp
sbb
aad
out
sub
jle
cli
mov
out
sub
and
add
es
movs
pop
xchg
test
mov
jmp
iret
mov
xchg
push
mov
gs
repnz
scas
or
inc
nop
(bad)
gs
sub
sub
mov
xor
inc
mov
cmp
cwde
push
jge
cs
push
xor
mov
mov
and
cmp
jp
fisttp
jp
fdivrp
push
dec
jb
popa
(bad)
in
ins
mov
ficom
add
cmps
mov
adc
add
or
(bad)
mov
mov
ds
pop
movs
or
add
pop
retf
inc
es
out
retf
shr
pop
xor
sti
jmp
xchg
outs
jnp
sbb
cmps
push
aaa
xor
xchg
or
cmp
mov
sub
fsubr
add
add
jg
pop
into
outs
mov
xchg
lock
in
cmps
jle
nop
out
sbb
dec
leave
push
cmp
popa
pop
inc
mov
push
ret
stos
ret
call
xchg
sub
icebp
out
xor
sar
loop
mov
stos
jns
(bad)
pop
out
shl
pop
push
leave
inc
adc
add
loope
adc
pop
jnp
enter
mov
fstp
lea
cmps
fadd
mov
fild
in
or
dec
enter
jno
(bad)
cli
sbb
mov
mov
cld
inc
cmp
aas
dec
ret
(bad)
cli
mov
xchg
xchg
cwde
xor
mov
retf
xor
retf
bound
sub
(bad)
imul
shl
and
add
gs
or
(bad)
iret
fimul
inc
cmp
mov
in
mov
imul
movs
mov
cmc
fwait
jns
inc
int
pop
shr
jg
cmp
dec
sbb
aaa
fstp
mov
fild
fs
mov
movs
inc
fisub
pop
and
ret
sub
inc
fist
jecxz
push
xchg
outs
jge
xchg
test
iret
dec
cmc
(bad)
fsub
daa
push
jae
xchg
xchg
cmps
lea
mov
gs
mov
pop
adc
cmp
add
test
setl
mov
iret
pop
sub
push
xchg
in
pop
pop
pop
pop
adc
cwd
and
jecxz
xchg
call
mov
xor
fisubr
ja
xchg
push
inc
xchg
mov
cld
paddsw
iret
mov
fwait
push
popa
sub
adc
ja
(bad)
dec
arpl
inc
jg
cmovne
in
inc
pop
ja
cmp
dec
jns
push
not
out
mov
push
mov
xor
ror
out
jno
nop
inc
push
lods
mov
and
stos
leave
push
(bad)
pop
movs
pop
adc
cli
enter
jmp
popa
es
sti
fild
inc
mov
jne
out
inc
mul
pop
xor
sub
fnsave
mov
and
sbb
push
xchg
xchg
xchg
jge
in
push
jns
stc
mov
push
xchg
pop
xchg
fldlg2
xor
pop
pop
pop
pop
movs
adc
mov
sti
fmul
shl
out
add
rcl
inc
xchg
mov
cmp
movs
mov
(bad)
adc
aaa
jmp
adc
ss
xchg
aam
call
jg
sub
jno
inc
in
mov
outs
xchg
dec
test
jge
loope
inc
fidiv
dec
fwait
sbb
shl
in
pop
movs
pop
xchg
or
add
mov
add
(bad)
adc
sub
sub
xor
aad
xchg
mov
adc
(bad)
fcom
sbb
retf
mov
mov
sub
daa
cld
(bad)
pop
(bad)
jo
sub
out
out
cdq
mov
jmp
in
pushf
(bad)
scas
lds
mov
arpl
stos
xor
pop
mov
sbb
je
mov
lds
mov
pop
pop
test
mov
mov
aaa
mov
pop
pushf
jl
sbb
sbb
mov
xchg
leave
call
cld
enter
retf
call
inc
mov
loop
pop
call
in
movs
retf
test
sbb
xchg
in
dec
outs
dec
cmp
pushf
sub
xchg
enter
iret
div
and
lods
test
(bad)
int3
push
fist
jmp
pop
repz
inc
dec
xchg
mov
mov
and
adc
adc
jp
push
in
outs
cdq
loopne
xchg
je
cmp
loop
inc
js
rcr
ret
es
cmp
lods
dec
jns
and
nop
xchg
xor
and
mov
rcr
rcr
add
lds
sbb
cmp
dec
push
adc
inc
xor
mov
dec
xor
je
adc
inc
pusha
push
dec
pop
mov
loopne
or
jmp
xchg
mov
in
test
mov
xor
mov
leave
daa
mov
mov
pop
pop
test
mov
mov
sub
mov
pushf
js
sub
xchg
daa
jb
push
xchg
jmp
shr
add
mov
pop
pop
test
mov
sahf
push
(bad)
adc
jno
inc
mov
aad
mov
inc
xchg
rcl
pushf
rcr
stc
ret
pop
adc
ret
test
call
imul
in
in
jecxz
sahf
sbb
mov
rol
es
repz
adc
call
call
scas
or
and
xchg
mov
inc
sbb
push
mov
pop
shl
out
mov
xchg
aas
xlat
xlat
int3
rol
and
mov
mov
mov
enter
pop
les
rol
dec
xchg
test
cmps
sti
jne
mov
or
mov
inc
sub
call
fidivr
or
inc
xchg
bound
adc
xor
push
sbb
adc
rol
fs
sbb
jbe
adc
cmps
cmp
(bad)
enter
mov
int3
dec
dec
push
nop
fwait
ja
std
test
push
push
xor
test
rcl
fld
popf
in
mov
lds
pop
jmp
cmps
mov
push
ret
adc
or
test
inc
(bad)
xchg
jle
hlt
mov
cwde
pop
addr16
(bad)
pop
xor
leave
mov
(bad)
rcl
les
out
mov
data16
bound
fs
push
cli
pop
in
mov
gs
jno
icebp
push
loopne
ds
sub
adc
ins
not
mov
inc
adc
sbb
add
in
mov
(bad)
sub
xchg
loopne
movs
ins
push
ins
push
sub
inc
retf
push
mov
aaa
out
(bad)
cmc
movs
jnp
(bad)
push
(bad)
jae
aaa
gs
inc
ins
mov
add
add
xor
out
(bad)
cld
adc
dec
mov
aad
jmp
jne
and
xor
xlat
cmp
add
ret
adc
(bad)
and
fidiv
jmp
xor
rol
inc
xor
stc
push
test
(bad)
push
cwde
(bad)
stos
dec
push
xor
adc
shl
mov
jmp
in
inc
xor
pop
adc
or
cwde
addr16
sbb
dec
aaa
in
jecxz
in
rcl
or
je
dec
fldenv
out
dec
or
jp
cmps
xchg
pop
jne
push
lock
scas
pop
js
test
mov
loop
add
add
out
cmp
icebp
mov
push
(bad)
cmp
mov
and
mov
jmp
pop
sahf
(bad)
cmp
lahf
repnz
mov
inc
xchg
ins
xchg
and
inc
and
in
(bad)
jbe
inc
add
jnp
lods
push
push
xchg
test
pop
inc
mov
xchg
push
cmp
in
xchg
or
retf
push
gs
fcmovne
inc
adc
pop
test
sahf
icebp
jecxz
cmp
fs
in
and
or
adc
jmp
cmp
add
mov
jne
jge
fidiv
call
bound
mov
cmp
call
push
in
inc
icebp
xchg
push
lahf
cmps
xchg
pop
mov
xor
mov
push
mov
scas
mov
mov
daa
rol
movs
mov
cmp
xchg
xor
push
inc
adc
jp
add
mov
out
(bad)
mov
inc
clc
ret
jno
add
mov
jmp
rol
sahf
add
and
adc
popa
cmp
jns
jae
mov
cmp
rcl
(bad)
jo
add
cmp
in
je
in
iret
adc
neg
lods
sub
cmp
das
std
or
or
mov
inc
test
shl
into
push
out
enter
dec
imul
in
cli
jge
lea
xchg
fistp
and
pop
repnz
es
adc
out
test
jmp
repz
call
pop
loopne
ja
and
movs
cld
mov
sbb
fnstcw
jb
xchg
retf
jb
xchg
mov
ds
bound
inc
test
jae
mov
mov
(bad)
and
mov
call
xchg
aam
leave
mov
xchg
pushf
enter
push
call
jb
cmps
int
stc
sti
cmp
fwait
dec
lea
jl
push
cmp
dec
mov
lods
jae
stos
mov
iret
xchg
or
cmp
pusha
sub
rol
(bad)
jo
movs
lock
rcr
pop
mov
imul
mov
jmp
icebp
mov
push
pop
shl
repnz
or
inc
sub
stos
cmps
pop
cs
mov
dec
pop
and
(bad)
retf
adc
push
push
lds
pop
inc
or
xchg
sahf
call
mov
xchg
stos
xor
ins
popf
iret
pop
jne
add
jno
adc
repz
push
dec
lock
mov
fidivr
mov
cmp
psadbw
pop
cld
dec
aad
or
mov
adc
(bad)
pop
pop
jae
int
ret
imul
and
jno
repz
mov
xor
cwde
cmp
dec
xor
scas
cmp
idiv
inc
dec
lock
push
add
retf
cmp
mov
add
pushf
adc
fdivr
push
or
xchg
mov
popf
and
push
dec
hlt
call
neg
add
cmp
sbb
ss
fwait
cmps
ss
jo
or
push
push
push
or
repnz
push
mov
shl
mov
mov
and
movs
js
pushf
pop
icebp
sar
loope
cmp
and
push
sub
psubb
mov
and
fsubr
or
ret
enter
jmp
idiv
push
inc
ds
mov
test
adc
xor
mov
jmp
shl
cli
sbb
jnp
imul
clc
test
mov
(bad)
cmc
lock
outs
mov
cwde
and
pop
sbb
test
or
push
sbb
pop
mov
or
repnz
pop
inc
aaa
retf
mov
shl
test
into
test
loop
push
push
push
push
clc
ins
out
test
push
into
daa
bound
push
aas
arpl
pop
inc
jp
push
add
loopne
or
cmps
int
pushf
mov
xchg
push
int3
and
mov
test
cmc
fistp
aad
ret
scas
pop
push
sbb
jle
jne
fidivr
push
sub
or
xchg
repz
jecxz
xor
hlt
mov
jnp
into
call
sbb
mov
xlat
call
je
loop
jle
and
clc
sub
out
lock
lock
jg
mov
ss
imul
stos
pop
test
ret
sahf
ss
xlat
test
xlat
retf
mov
pop
mov
xor
lods
and
in
frstor
mov
dec
fstp
inc
pusha
sub
or
cmc
mov
xlat
ins
push
lea
iret
sbb
lea
mov
push
xlat
mov
hlt
outs
imul
pushf
into
push
(bad)
mov
xchg
sahf
pop
sti
cmp
aad
ins
add
sbb
xchg
or
mov
stos
out
test
push
ins
jns
sahf
in
retf
or
rol
cwde
iret
mov
adc
add
xchg
movs
in
inc
add
lods
sub
aam
mov
jns
lds
scas
(bad)
jne
dec
shl
test
dec
icebp
fs
dec
dec
scas
inc
or
icebp
xchg
or
and
push
xor
test
add
jg
push
xchg
dec
or
(bad)
mov
ret
nop
xor
cmp
lods
jp
arpl
clc
add
in
sub
push
cmp
data16
clc
or
xor
rcr
dec
in
(bad)
adc
pop
(bad)
push
cdq
cmp
test
jle
cdq
out
aaa
(bad)
shl
je
std
pop
aaa
ja
repnz
jmp
and
ret
mov
cmp
sub
scas
fsubr
cld
dec
movs
shl
adc
imul
enter
sub
mov
das
shr
mov
das
ror
sti
sahf
ins
stc
xor
sub
test
pop
push
jns
(bad)
cmps
sbb
ins
add
dec
dec
sub
add
in
jnp
mov
vpaddusb
(bad)
dec
lods
das
add
jnp
push
shr
mov
enter
fnsave
pop
jae
repz
and
push
enter
fdiv
adc
dec
jne
pop
mov
nop
sbb
popa
ins
jmp
stc
mov
(bad)
jmp
pushf
sub
cwde
cmp
jle
in
mov
daa
ss
outs
pop
mov
iret
cld
and
mov
cld
outs
aaa
or
lahf
push
and
jmp
jecxz
add
pop
jno
or
dec
mov
or
xor
inc
outs
jmp
mov
scas
ror
push
ret
push
add
movs
jae
shr
sbb
ins
ins
xor
mov
push
fstp
mov
jle
test
sub
addr16
jmp
retf
push
mov
cs
arpl
xchg
cmps
xchg
lahf
cmp
sbb
int
jmp
fdivr
(bad)
push
cmp
pushf
clc
adc
mov
ins
sub
mov
test
retf
gs
jge
xor
pop
sar
scas
pushf
mov
fsubr
jmp
xchg
cmps
inc
push
inc
mov
and
mov
push
dec
or
adc
xchg
jae
shr
jg
inc
jo
int
ins
test
push
dec
sub
or
jb
rcr
pop
ret
fcmovnbe
into
cwde
mul
stos
ret
jo
or
int
dec
and
and
push
cmp
inc
(bad)
dec
jmp
and
cli
fdiv
jge
ret
in
sub
mov
push
jl
je
in
loope
xchg
jns
aaa
push
push
jmp
jp
pop
retf
xor
jb
cdq
pop
add
pop
mov
add
scas
mov
sbb
push
popa
mov
imul
pop
push
dec
add
scas
inc
icebp
test
mov
inc
daa
sti
lahf
adc
loop
xchg
mov
mov
shr
std
xchg
push
pop
icebp
push
imul
fs
pop
or
lods
es
call
xchg
sar
mov
cmp
ja
jo
ret
dec
enter
jo
ret
rcr
into
stc
sbb
cmp
jge
mov
inc
ss
add
and
jecxz
push
inc
xlat
mov
xchg
add
pop
ja
add
shl
sub
mov
ja
inc
retf
aaa
(bad)
hlt
or
je
pop
push
mul
jns
jo
out
js
mov
call
sub
and
push
repnz
push
mov
je
push
cmps
and
out
aad
idiv
test
sbb
in
push
cmp
dec
int
dec
and
push
mov
retf
cmp
iret
inc
jne
pop
pop
js
das
or
inc
mov
push
pop
ja
imul
jae
arpl
xchg
adc
pop
ret
inc
push
jmp
leave
lock
cmp
(bad)
(bad)
sbb
sahf
iret
imul
jp
adc
inc
test
sbb
jl
inc
mov
jo
mov
adc
cmp
add
in
mov
popf
adc
mov
pushf
jno
jle
lods
cmp
push
inc
mov
cli
fs
xor
cmp
mov
(bad)
dec
xchg
inc
jns
dec
(bad)
fnstcw
inc
adc
adc
movs
cmp
stc
and
xor
sbb
cmp
adc
push
mov
lods
arpl
inc
pop
push
shl
cmp
out
xor
xor
popf
cmc
or
jg
push
sti
or
aad
enter
xor
pusha
call
in
ror
int
inc
sar
adc
aaa
ficomp
lds
and
push
xchg
iret
adc
and
push
push
in
nop
dec
and
aaa
enter
adc
jne
jb
rol
fistp
retf
adc
loope
fist
jno
adc
dec
iret
jnp
into
scas
mov
dec
test
fisttp
pushf
dec
xor
dec
cmp
loopne
inc
repnz
xlat
mov
mov
rcr
fstp
sub
mov
or
(bad)
fcom
(bad)
push
inc
and
mov
xchg
(bad)
push
xor
cmovbe
push
cmp
ret
test
push
mov
inc
and
aam
je
stc
ds
out
xor
sar
dec
call
rcr
sub
push
dec
mov
push
push
xchg
lea
imul
xchg
cmps
inc
sbb
fbstp
sbb
xor
in
xor
pop
ss
jg
xchg
push
pop
out
mov
cmc
mov
sbb
cmp
fadd
cmps
fcomp
(bad)
mov
cwde
sub
xchg
sub
xor
loopne
mov
add
out
jmp
sbb
mov
dec
shl
pop
movs
mov
js
les
jnp
stos
adc
cmps
rol
xchg
aaa
cmp
push
test
jl
push
dec
pop
pop
inc
sub
lods
jbe
cdq
xor
sub
(bad)
xchg
jno
aas
inc
push
mov
int3
cmc
dec
jp
mov
pop
jg
sbb
and
xor
mov
xor
add
cli
and
push
xlat
or
cwde
outs
or
push
js
mov
cli
sar
pop
jmp
fwait
push
ins
daa
push
dec
jecxz
in
sub
and
movs
jg
push
in
mov
mov
adc
pop
add
lea
mov
(bad)
(bad)
jg
jbe
(bad)
sub
cmp
add
cwde
loopne
xor
jp
cwde
adc
or
test
sub
xchg
jmp
or
dec
lds
mov
aaa
mov
(bad)
(bad)
mov
pop
push
mov
sbb
or
jo
fist
and
in
xchg
test
in
sar
dec
in
out
adc
and
push
mov
mov
lea
mov
jl
shr
xchg
mov
xchg
ins
sbb
ss
pop
jnp
hlt
mov
xor
pop
push
hlt
sbb
movs
pop
das
jecxz
aad
inc
ins
dec
pop
imul
inc
sbb
movs
or
outs
xor
not
lods
cmps
sub
mov
or
sub
cmc
rcr
lods
sbb
fidiv
sti
push
idiv
mov
or
fs
cwde
dec
arpl
inc
add
fiadd
push
ins
ret
cdq
lods
pop
cmp
dec
xchg
std
inc
jmp
push
jmp
jg
shl
push
add
popf
movs
mov
xor
push
cmc
xor
and
nop
and
mov
stc
mov
ficomp
or
cmp
jae
cmp
test
jo
fcom
jbe
mov
sub
or
and
adc
test
adc
sbb
sub
sbb
mov
es
adc
push
and
adc
lea
dec
ret
or
retf
call
xchg
add
inc
and
cmps
bound
(bad)
pop
inc
sbb
gs
retf
or
ficom
stc
xchg
shl
fidiv
pop
sub
and
in
scas
and
mov
cli
ins
xchg
movs
or
jns
clc
fcomp
repnz
into
fisubr
int
shl
dec
loop
xor
loopne
adc
jge
clc
ss
xchg
sbb
jge
xor
movs
shr
mov
call
sar
je
cmp
test
fdivr
mov
int
mov
lods
jmp
retf
mov
mov
mov
popa
sahf
mov
mov
(bad)
fdiv
ja
push
adc
lahf
and
xor
mov
adc
mov
or
pop
inc
dec
adc
shl
hlt
mov
ins
mov
push
mov
push
inc
mov
jnp
inc
and
das
fwait
or
inc
add
stos
jne
xchg
mov
(bad)
pop
or
std
mov
in
jae
data16
ins
or
gs
cmp
fcmovnb
push
cmp
repz
xchg
hlt
mov
pop
(bad)
jle
out
imul
jb
add
xchg
shl
aad
in
sbb
enter
sub
fisttp
xchg
into
pop
jl
call
loope
add
(bad)
cmp
xchg
fisttp
cmp
jno
ror
cwde
xchg
test
fstp
cmp
nop
(bad)
outs
push
ret
mov
inc
out
leave
lods
(bad)
call
xchg
aam
fdiv
pop
xchg
in
xor
adc
inc
enter
inc
dec
sbb
test
and
mov
mov
mov
xchg
aad
or
test
mov
adc
das
jmp
mov
test
mov
push
push
sub
retf
sub
pusha
jmp
es
push
sub
dec
enter
test
jo
cmp
out
jp
cmps
out
test
aaa
sbb
mov
not
pop
cli
popf
dec
jne
les
xchg
sbb
mov
mov
call
mov
je
xchg
(bad)
ins
ss
data16
sbb
and
cmp
jno
wbinvd
leave
cmp
push
and
cmp
sti
and
ins
push
sbb
clc
cmp
add
push
ins
ret
xor
add
adc
lock
fwait
aam
sub
xchg
div
ret
movs
mov
mov
xor
ss
push
cmp
sbb
xchg
or
sar
xchg
call
stos
fsub
xchg
xchg
lods
sub
sbb
je
aas
repz
pop
lea
jl
fdiv
cs
clc
stc
mov
aam
test
cmp
add
mov
pop
ret
ror
das
aaa
push
jmp
fs
jo
mov
pop
pusha
in
int3
xchg
neg
jecxz
ds
jp
test
mov
stc
popa
popf
cmp
push
push
mov
xor
push
aam
adc
push
or
pop
sbb
cs
les
outs
ss
test
fcom
sub
or
mov
out
push
xchg
pcmpgtw
dec
xor
pop
inc
dec
cmp
pop
movs
mov
jecxz
push
pop
lods
aad
adc
xor
leave
cmp
sahf
loop
mov
(bad)
shl
dec
mov
and
adc
leave
(bad)
cmp
cmp
jbe
ror
push
xor
ja
(bad)
lods
jmp
movs
cmps
mov
add
popa
mov
and
fnstcw
cmps
iret
xchg
fbstp
xchg
add
add
and
sub
repz
dec
hlt
daa
repz
test
(bad)
jge
test
sbb
mov
fisubr
mov
push
mov
pop
out
outs
mov
pop
cli
adc
into
outs
inc
sbb
retf
dec
push
push
cwde
jne
mov
xchg
mov
sti
fld
(bad)
dec
(bad)
push
loop
cmp
sbb
sbb
jno
xchg
or
nop
mov
xchg
jecxz
jl
fstp
pop
xchg
movs
inc
out
xor
lods
ins
mov
mov
sbb
int3
lahf
shl
jnp
adc
xchg
xchg
dec
fcmovne
sub
outs
test
repz
outs
in
inc
hlt
push
(bad)
retf
xchg
mov
push
loopne
fs
sub
xor
dec
ds
in
inc
adc
push
xchg
cmps
das
outs
(bad)
lods
sub
mov
ret
test
xchg
ret
shl
mov
pusha
jns
gs
dec
sub
or
pop
mov
sbb
scas
jg
mov
or
jmp
into
mov
push
mov
jecxz
cli
outs
add
out
lods
xchg
aas
cmp
pop
pop
push
mov
mov
ins
dec
jns
add
jmp
adc
retf
xchg
and
vpsllq
ja
pop
dec
rol
sbb
cmc
mov
loope
popa
cmps
jge
pop
pop
jle
jmp
icebp
jg
xchg
mov
inc
xor
dec
aas
push
adc
dec
rcr
inc
push
push
jl
jns
cli
call
or
mov
sbb
xor
push
pop
mov
div
sub
in
movs
and
mov
add
js
rcl
je
or
lds
cmp
or
data16
aad
lods
imul
add
xor
std
jo
or
loope
popf
popa
scas
pop
jmp
xor
mov
xchg
adc
or
out
aad
dec
inc
fcomp
adc
pop
mov
aad
je
cmp
pop
shl
mov
sbb
icebp
sub
out
or
add
jecxz
lods
xor
or
cmp
add
ror
test
inc
dec
add
aad
cld
lea
pop
call
inc
add
jmp
xlat
out
jno
xchg
jmp
and
or
mov
adc
add
fs
add
fmul
pop
mov
xchg
fsub
mov
cmp
mov
movs
in
aaa
sub
jmp
nop
(bad)
fs
adc
ins
and
aaa
lahf
mov
mov
aad
(bad)
pop
(bad)
push
ret
jp
les
adc
shr
js
cli
out
mov
jp
repz
nop
and
call
daa
aas
pusha
fs
add
adc
rol
fwait
xor
sbb
xchg
xor
push
cmp
lods
push
mov
xor
test
test
inc
and
aam
mov
inc
pop
pushf
movs
fdivr
imul
les
or
mov
arpl
fimul
jae
fs
xchg
adc
ins
add
add
or
call
dec
clc
sar
aas
out
ret
imul
add
add
enter
adc
adc
push
xor
scas
fld
in
(bad)
aad
clc
sbb
out
fldenv
xchg
cmp
mov
xor
and
dec
jle
cs
or
xchg
inc
mov
idiv
inc
cmp
(bad)
call
outs
dec
leave
fld
mov
cwde
mul
lahf
mov
jo
lea
pop
pop
mov
and
adc
movs
out
jg
xchg
lock
sbb
lea
icebp
ja
fdivr
sbb
leave
sbb
(bad)
pop
mov
retf
jp
sub
cmp
jb
inc
dec
fld
arpl
push
lock
mov
(bad)
adc
js
inc
push
xchg
sbb
sbb
or
xor
mov
xor
push
aad
fs
lahf
pop
pop
push
inc
mov
movs
shl
fild
mov
cs
ret
lock
cld
jp
cmps
xchg
mov
mov
mov
aas
xlat
adc
sub
add
push
xchg
ds
jmp
xchg
sub
repnz
sbb
or
and
adc
shl
pop
xchg
xchg
loop
and
out
mov
cmp
mov
mov
test
in
cmps
pusha
mov
(bad)
rol
(bad)
cmp
lahf
pushf
in
sbb
sti
sbb
dec
ins
mov
push
fnstsw
cwde
or
stos
nop
cmp
in
ret
adc
xchg
(bad)
pop
cmp
add
sbb
pop
outs
jle
adc
fs
pop
aam
ret
test
dec
stc
pop
cmp
xor
cli
rol
pop
and
dec
sahf
icebp
es
adc
dec
arpl
mov
and
jnp
adc
mov
push
es
dec
inc
in
sub
inc
shl
sbb
sub
pop
xchg
popf
pushf
adc
add
pusha
xor
scas
xchg
ins
dec
push
push
push
stos
cmps
xchg
adc
or
jg
mov
mov
out
pusha
push
xlat
sub
iret
push
retf
adc
out
pop
lods
mov
int
cmp
scas
pop
add
ins
mov
aas
mov
iret
into
in
jno
(bad)
(bad)
cmp
pop
ins
addr16
mov
xor
and
adc
xchg
int
mov
lods
call
(bad)
(bad)
ds
push
retf
pusha
xchg
xlat
jo
fstp
fld
sti
jae
mov
out
out
cwde
hlt
cmp
scas
ret
hlt
push
xor
fstp
popa
clc
sahf
mov
stos
push
es
imul
adc
(bad)
call
pop
sub
mov
mov
mov
push
push
not
in
sahf
sbb
retf
mov
mov
ret
jo
mov
mov
call
rol
xor
mov
ins
lea
call
stos
mov
cwde
jp
test
lea
and
xchg
mov
lahf
loop
rol
xor
push
into
call
cmp
sub
les
sub
jo
mov
jmp
aas
or
leave
mov
bswap
xchg
mov
fmul
fisub
jmp
push
inc
dec
sub
xor
cmp
and
cdq
adc
push
mov
dec
sub
enter
in
pop
lods
or
cwde
xor
adc
cmc
mov
xchg
leave
aam
inc
test
and
ret
stos
jmp
cwde
lds
add
mov
scas
add
lds
pop
popa
mov
js
cmp
push
lods
sub
in
cmps
xchg
test
test
xchg
mov
xor
jne
adc
das
sub
repnz
adc
mov
xchg
rcr
jl
fs
jge
xor
and
stos
xlat
lds
adc
test
lock
mov
imul
cmp
add
out
mov
push
cmp
adc
inc
bound
into
and
aaa
cdq
jmp
loop
push
scas
push
loopne
inc
fld
pop
and
(bad)
stos
and
retf
enter
cmps
mov
or
das
jb
(bad)
xchg
ins
aam
xor
mov
lahf
(bad)
cld
enter
mov
sub
jmp
arpl
dec
sub
mov
and
pop
push
and
mov
addr16
dec
pushf
sbb
push
scas
push
mov
jo
mov
or
xchg
sub
ja
loope
push
adc
adc
lea
jge
ins
xchg
outs
(bad)
lods
or
stos
aas
or
and
mov
popf
or
les
daa
mov
int3
js
inc
mov
(bad)
fwait
dec
mov
jb
popf
movs
or
aas
cmc
push
mov
ja
test
cli
adc
jnp
mov
(bad)
xor
sahf
in
movs
mov
mov
fisttp
fistp
mov
mov
inc
mov
cld
cdq
out
into
add
push
pop
inc
pop
add
xor
(bad)
aam
jmp
jmp
sub
cmp
cwde
(bad)
cmp
neg
fs
scas
sar
call
gs
xchg
stc
gs
sar
imul
xor
mov
aaa
mov
ficomp
cwde
cld
fild
adc
push
and
test
mov
cwde
cmp
ds
mov
jmp
dec
imul
fidiv
push
or
pop
sub
push
and
pushf
cmp
movs
repz
pusha
icebp
vpsllw
andps
xlat
fild
dec
repz
mov
mov
out
mov
das
push
jmp
(bad)
pop
xor
movaps
or
xchg
push
(bad)
(bad)
push
outs
(bad)
mov
addr16
arpl
adc
sbb
jge
push
adc
data16
push
iret
mov
rol
out
gs
xlat
dec
mov
or
or
sub
adc
jp
pop
stos
jmp
jmp
(bad)
icebp
cld
adc
jbe
imul
add
js
add
cmp
aaa
mov
and
mov
aas
clc
cs
dec
cmp
add
fdivr
or
pop
cmp
push
or
push
mov
jmp
mov
std
adc
fcom
int
(bad)
jecxz
or
in
adc
sar
jmp
and
iret
dec
fsub
jbe
push
xchg
mov
mov
sbb
bound
mov
mov
mov
jb
cld
ror
xchg
push
hlt
sar
mov
mov
xor
add
sbb
daa
jmp
neg
xor
pop
int
cmps
sbb
push
shl
add
cdq
jp
add
jns
dec
inc
aas
pop
lahf
mov
jmp
dec
out
repnz
dec
or
push
fimul
arpl
mov
mov
fwait
icebp
(bad)
cdq
and
inc
sbb
sar
(bad)
fnsave
adc
int
dec
xchg
inc
mov
pop
mov
xchg
dec
test
shr
movs
add
or
sbb
dec
ins
je
push
inc
cmp
sbb
(bad)
fstp
pop
and
push
jl
sbb
pop
inc
retf
in
and
enter
movs
cmps
sbb
fldcw
jecxz
and
lea
jb
popa
dec
xor
bound
push
rcl
adc
cmc
jnp
gs
and
sbb
or
jmp
mov
and
aaa
and
pushf
sti
jmp
jns
cdq
and
jo
mov
add
sbb
retf
out
cmps
push
sbb
lods
xor
xor
xlat
mov
test
pop
add
xlat
mov
fstp
adc
mov
jno
sbb
sub
scas
(bad)
sbb
inc
ss
iret
cmovo
rcpps
repz
inc
ret
loopne
mov
jp
cdq
lds
shl
imul
ins
jmp
or
add
je
std
push
loopne
adc
inc
mov
dec
js
daa
pop
push
leave
sti
cmp
dec
xor
test
or
rol
outs
jg
test
ror
out
push
pop
jp
add
out
cmp
mov
test
dec
popa
cmps
push
(bad)
sbb
push
cld
ja
cmps
popa
outs
js
pop
ins
enter
cdq
dec
icebp
and
sti
xor
add
fidiv
pop
clc
push
inc
sbb
sub
cmp
fsubr
pop
mov
jnp
std
sub
mov
stos
out
sbb
fs
nop
test
dec
shl
pop
mov
pop
lods
sbb
leave
std
or
dec
sub
mov
or
leave
data16
ret
xchg
mov
jbe
repz
sub
mov
inc
js
jns
pop
mov
pop
sbb
cld
rol
or
inc
cmps
imul
daa
sti
dec
jae
or
and
or
mov
not
push
jge
cmp
enter
pop
fs
push
sbb
repz
push
mov
test
push
lods
call
mov
dec
pusha
outs
test
inc
pop
mov
retf
inc
fs
sar
pusha
bound
mov
cmp
jb
fisub
icebp
pop
mov
xchg
sbb
jp
mov
aam
daa
add
fdiv
gs
sbb
xor
pop
stos
test
call
or
jmp
ja
mov
pushf
jb
cmp
pop
push
xchg
jge
pop
fs
mov
xor
dec
pop
sub
cmp
pop
push
mov
sar
dec
retf
data16
xchg
xchg
psrad
mov
jmp
shr
jp
es
jg
ds
sub
mov
pop
cmp
cmps
cld
lods
mov
bound
sub
dec
xchg
(bad)
(bad)
faddp
jne
mov
fisttp
and
mov
retf
mov
pop
fadd
inc
cdq
fidiv
outs
adc
cli
aas
aad
add
pop
retf
aaa
sbb
jo
and
add
mov
ror
dec
jecxz
inc
xchg
jne
lock
retf
dec
cdq
and
mov
jnp
out
stos
sbb
(bad)
ja
push
out
mov
mov
rcr
push
imul
ds
jecxz
loope
xor
cmp
std
xor
pop
or
sbb
movs
or
into
fimul
test
loop
cmps
push
push
loopne
add
dec
sbb
xchg
retf
mov
or
cmps
and
(bad)
xchg
test
ret
mov
hlt
aam
call
ret
and
shl
outs
(bad)
pop
arpl
ret
in
dec
ret
and
jg
inc
loopne
(bad)
clc
add
ret
jmp
xor
ds
lahf
outs
pop
push
cmp
clc
mov
mov
sub
shl
push
rol
dec
ja
leave
mov
cmp
neg
sbb
push
not
jo
cmp
popa
push
jmp
cmp
out
sub
cs
out
mov
push
or
sub
jno
and
jge
fisttp
inc
scas
out
cmp
retf
xlat
sub
xor
ja
aam
or
or
rol
mov
inc
call
cs
ins
push
sbb
fild
jb
sahf
sbb
mov
aad
xchg
outs
leave
sub
or
sti
rcl
mov
add
bound
push
xor
inc
fst
jns
xchg
aad
or
mov
and
add
or
idiv
inc
jmp
adc
jle
xor
push
jnp
xor
xchg
xchg
mov
hlt
cmp
bnd
cmp
pop
out
mov
ins
(bad)
lea
sbb
xor
cmp
xor
(bad)
fisubr
xor
imul
jne
adc
arpl
mov
add
ja
aam
cmp
cld
adc
out
rcl
(bad)
mov
out
js
bound
mov
cpuid
sub
cmc
sub
or
jnp
add
enter
push
pop
cmc
stc
out
mov
ja
or
das
rol
outs
int3
nop
and
not
out
pop
adc
add
out
push
add
stos
xor
(bad)
(bad)
movs
mov
retf
sbb
cmp
arpl
xchg
retf
cmps
push
imul
arpl
adc
fcom
daa
cmp
adc
xchg
adc
pop
jb
or
out
sahf
sbb
je
lahf
hlt
jp
and
out
in
adc
cmp
call
sar
mov
jmp
sbb
jb
cmps
stos
xchg
ficomp
mov
push
sbb
mov
div
call
mov
xchg
sbb
mov
or
mov
test
mov
pop
ss
xchg
and
pusha
jno
aaa
aam
adc
jmp
mov
jge
scas
cmps
mov
mov
mov
cmps
cs
xchg
shl
push
iret
(bad)
das
ret
fsubr
rcl
mov
clc
push
xlat
call
jmp
in
stos
cmp
cmp
nop
xlat
or
jmp
mov
inc
add
cmp
mov
sub
push
or
sti
mov
push
mov
xchg
enter
bound
sub
sahf
cmovo
scas
add
loop
pop
(bad)
mov
ja
mov
std
sbb
sub
retf
sbb
sub
mov
mov
pop
rcl
or
or
out
outs
xor
stos
call
repz
outs
popf
add
ss
es
stc
fs
int3
pop
lahf
fnstcw
xor
jmp
stos
es
pop
std
cmp
mov
jo
mov
repz
and
jnp
adc
test
xor
shl
xor
jne
mov
call
adc
xchg
mov
into
mov
cs
test
(bad)
loopne
sti
xchg
cld
inc
pop
fistp
je
mov
xchg
out
add
test
out
cmp
out
jecxz
mov
into
cmp
jmp
or
cmp
xchg
pop
mov
adc
ret
jge
in
fwait
push
push
pop
dec
enter
push
sbb
mov
nop
jns
pop
popa
repnz
dec
cmp
or
xchg
pop
pop
cld
or
sbb
sar
fstp
lahf
(bad)
fsubp
dec
pop
jne
arpl
adc
outs
shl
xchg
loopne
rol
movs
jne
mov
adc
mov
sub
mov
jno
mov
rcl
push
and
pop
gs
fbld
idiv
imul
cmp
xchg
ret
pop
(bad)
fs
adc
stc
xor
mov
xchg
aam
cld
rol
pop
pop
(bad)
xchg
or
jnp
jmp
bound
pop
fsubr
inc
icebp
stos
pop
movups
(bad)
xchg
and
out
aad
push
nop
shl
adc
sbb
scas
add
push
xor
cmps
jg
jno
add
aas
mov
aas
movs
ss
data16
inc
jge
mov
call
jns
dec
dec
adc
ins
hlt
adc
cmps
mov
and
xchg
mov
adc
add
add
in
sub
add
rol
sti
ror
add
sbb
loopne
out
and
xchg
mov
(bad)
push
mov
push
adc
nop
outs
les
test
cmps
push
fmul
imul
xor
cmp
les
daa
out
daa
and
add
(bad)
sahf
dec
cmp
adc
and
retf
repnz
mov
mul
push
lods
enter
xor
xchg
adc
adc
mov
mov
retf
clc
jb
outs
adc
sub
into
jae
pop
aam
push
repz
inc
mov
mov
push
adc
popf
(bad)
inc
popf
xor
loop
pusha
add
inc
retf
shr
push
push
jmp
fldenv
(bad)
fst
mov
mov
dec
fadd
mov
push
fdiv
lock
ret
imul
pop
dec
xor
and
mov
jmp
push
adc
jmp
jecxz
mov
dec
leave
out
aaa
(bad)
ret
test
inc
call
sub
inc
cmp
mov
push
and
test
pop
dec
pop
sbb
sahf
dec
cmp
mov
inc
and
push
mov
push
cwde
aas
js
aad
add
fidivr
pop
xchg
cmp
jne
fcmovnu
pop
or
hlt
push
fisub
aas
jle
aam
jmp
je
add
out
jne
jmp
mov
mov
cmp
xor
xchg
push
gs
mov
jmp
inc
addr16
inc
fs
cs
jnp
les
test
or
dec
mov
adc
mov
popf
mov
mov
pop
ficom
cli
cmc
mov
shr
jo
jecxz
sbb
jnp
scas
adc
lock
std
push
push
push
pop
mov
call
add
ret
push
push
pop
fdiv
ds
mov
retf
cli
or
pop
hlt
mov
ja
retf
in
push
fcmovb
cmp
stos
lea
sub
call
scas
imul
mov
mov
cs
xchg
movzx
shl
inc
neg
pop
les
je
inc
xchg
jl
or
and
mov
ret
mov
xor
ins
idiv
fld
scas
lahf
mov
add
or
sahf
jbe
push
xchg
leave
mov
out
add
jecxz
push
sar
sbb
add
shl
pop
adc
ds
pop
pop
and
inc
fistp
jae
jl
shl
push
inc
pop
mov
aam
outs
idiv
lock
cmps
mov
push
popa
mov
mov
jae
cmp
call
icebp
mov
add
imul
int
xchg
xchg
cli
inc
push
pop
push
pop
cdq
fucomi
inc
pusha
lea
add
and
sbb
stos
push
ret
xchg
arpl
inc
or
mov
mov
lahf
pop
pop
outs
cwde
push
ins
xchg
leave
mov
ja
jnp
sub
lods
and
xchg
jbe
and
sub
stc
jg
imul
pop
shr
and
pop
fwait
(bad)
xor
(bad)
test
loope
(bad)
xor
ds
xchg
leave
sub
mov
test
xchg
fisttp
adc
jle
and
mul
sub
mov
jecxz
dec
rcr
pop
cmp
aaa
rcl
and
test
cmp
mov
jns
rol
sub
inc
pusha
bound
xchg
jl
mov
aam
xor
repz
jmp
cmp
mov
cli
mov
pop
loopne
mov
xlat
(bad)
mov
pop
mov
jmp
cmp
mov
popa
inc
jg
jmp
aad
(bad)
fwait
mov
sbb
cmp
mov
xchg
dec
jmp
mov
add
jp
imul
out
in
lods
cli
fstp
cmps
xchg
push
imul
mov
sahf
mov
iret
dec
sbb
nop
movs
inc
mov
mov
pop
jl
ficomp
push
fnstsw
sbb
out
cmps
cmp
dec
sub
cmps
daa
mov
mov
(bad)
adc
push
aaa
cmp
pop
mov
pop
psubusb
ror
clc
push
out
sbb
or
mov
sub
and
jae
test
into
sub
push
std
call
scas
jne
int
adc
mov
inc
push
cmc
mov
test
arpl
fidivr
mov
xchg
adc
cld
loop
ins
mov
movs
mov
in
jmp
inc
lods
xor
std
popa
mov
add
or
lock
icebp
sbb
xchg
js
xor
iret
pop
loop
test
test
sbb
in
mov
pop
inc
imul
mov
fist
repnz
cwde
pushf
xchg
sub
and
push
jns
pop
add
sar
cmps
test
cmp
jnp
pop
xchg
adc
xchg
retf
in
push
xlat
jmp
pop
mov
mov
pop
and
addr16
mov
sti
movs
sbb
jbe
pop
cdq
mov
repz
cmp
scas
sbb
mov
jo
rol
iret
xchg
inc
xchg
push
mov
dec
ror
scas
fmul
add
jle
daa
mov
xchg
lock
stos
ret
imul
push
fmul
stos
inc
retf
call
or
rcl
or
jb
mov
loope
fldenv
fldenv
std
dec
gs
push
sbb
mov
or
jne
sahf
xchg
retf
test
fmul
movs
pop
cmp
inc
sbb
pusha
sti
dec
lds
dec
in
mov
sti
add
xor
jmp
xchg
out
mov
idiv
pop
ret
push
inc
loope
ret
push
or
cmc
jp
xor
jl
shl
or
(bad)
cwde
pop
xor
fadd
call
scas
ret
sbb
push
js
xchg
fisubr
jne
iret
mov
inc
sbb
call
rcr
imul
es
jecxz
fisttp
sti
mov
jle
sub
pop
dec
movs
push
jne
les
mov
fsub
gs
mov
out
mov
mov
cld
fisttp
sub
add
in
sub
(bad)
fisub
lahf
push
stc
test
jg
hlt
pop
(bad)
cmova
jns
fs
out
cs
sub
iret
sbb
cmp
fldln2
test
jmp
mov
aad
xor
sbb
or
(bad)
int3
xchg
or
push
xchg
or
xchg
bound
retf
push
mov
cmps
int
retf
jae
loope
mov
div
mov
pop
mov
mov
popa
jne
xchg
jns
and
(bad)
lods
movs
jno
jmp
movs
adc
sti
sub
popa
addr16
arpl
bound
lods
or
cld
ds
xchg
cmps
inc
or
rcr
pop
adc
(bad)
dec
out
cmc
mov
mov
or
(bad)
xchg
add
jg
cmp
push
push
je
cmps
adc
jns
dec
movs
add
(bad)
jns
pop
jne
(bad)
retf
mov
sar
retf
sbb
fadd
cmp
jbe
cmp
fsubr
gs
loopne
xchg
jnp
push
or
jo
push
cmps
in
(bad)
sub
cld
dec
cmp
mov
movs
dec
pop
scas
and
mov
inc
mov
stos
pop
ins
and
(bad)
cli
les
cmp
pop
xlat
inc
xchg
xor
xor
cli
add
neg
xchg
xchg
std
xchg
in
aas
and
(bad)
in
loopne
stc
dec
add
mov
push
cmp
pop
jae
rcr
pop
adc
sub
xchg
ds
shl
cmp
add
cmp
dec
cld
fld
cmp
rcl
adc
and
stos
adc
xor
and
ror
or
pop
sbb
push
test
ins
xchg
movs
mov
mov
(bad)
fsub
mov
retf
add
in
xlat
in
sub
xor
sub
xchg
pop
mov
bound
shl
mov
mov
or
pop
out
cmps
xor
pop
inc
sbb
or
xor
sub
popa
test
adc
lahf
div
cs
xor
lds
sti
ja
mov
jb
stos
push
xor
stos
out
dec
(bad)
(bad)
jmp
inc
rcr
sub
psrad
jbe
mov
loopne
push
push
mul
nop
mov
sub
jns
pop
cmp
fistp
cmp
mov
leave
into
fcom
cs
and
loop
stos
pop
add
or
loope
mov
xor
xor
icebp
inc
shr
repnz
out
sub
aam
data16
out
mov
adc
xchg
mov
(bad)
outs
jl
push
add
mov
psraw
mov
je
and
jge
jno
popf
mov
cmps
ret
dec
fwait
call
add
out
add
inc
xor
out
out
cwde
cmc
sbb
arpl
test
aas
sbb
sbb
push
xchg
retf
or
pop
leave
fstp
fcom
leave
adc
lods
stos
pop
pushf
inc
mov
mov
jnp
mov
xor
out
outs
mov
and
adc
pop
cmps
pop
sub
(bad)
lock
mov
iret
and
ja
(bad)
push
pusha
cmp
(bad)
xor
pop
sti
stos
sbb
int
stos
push
std
sub
loope
push
leave
mov
xchg
mov
sbb
pop
imul
and
add
int
mov
mov
lahf
imul
in
xchg
push
cs
mov
dec
jmp
jo
adc
pop
aas
or
cli
ret
push
and
into
sbb
pop
and
push
call
pop
cmp
fst
lahf
fldlg2
adc
inc
ror
loope
pushf
repnz
inc
sbb
aas
sub
cli
ins
dec
rdtsc
mov
cs
test
jecxz
mov
faddp
gs
repz
fcompp
dec
jns
push
pop
int3
repz
jae
cld
jno
push
aaa
fwait
jmp
fwait
or
out
arpl
ret
push
or
adc
in
int
jbe
jb
jne
lds
jns
pop
movs
ficomp
(bad)
out
out
xor
add
mov
(bad)
cld
dec
mov
fisub
pop
aaa
fstp
or
popf
(bad)
jnp
call
in
test
jp
pop
int
pusha
dec
jne
into
es
cld
out
fcomi
mov
add
sub
jae
in
cmc
push
dec
pushf
xchg
loopne
in
aam
scas
jmp
retf
pushf
jo
call
les
push
test
cmp
je
or
je
mov
xchg
sub
in
mov
sub
push
dec
mov
popf
jmp
pop
ror
in
jmp
dec
adc
mov
add
std
mov
outs
cmp
push
push
rol
lods
mov
scas
cmps
(bad)
add
icebp
addr16
fld
cmp
int
daa
in
loopne
pop
(bad)
ret
inc
lods
outs
div
push
inc
dec
jmp
sub
push
jo
add
mov
and
xchg
pop
dec
jo
sar
dec
call
cmp
add
jg
ins
out
cld
inc
fld
stos
push
call
mov
mov
mov
and
outs
ret
arpl
push
lds
push
fisub
icebp
mov
or
retf
xchg
test
add
and
mov
push
add
in
and
push
call
arpl
or
in
ret
and
enter
xchg
sbb
adc
js
xchg
movs
sar
adc
ja
test
clc
jo
shl
scas
mov
xor
test
sbb
and
cmp
outs
adc
or
aas
inc
and
aam
out
xor
xor
dec
mov
es
or
rcl
mov
leave
inc
ja
ret
repz
xor
push
push
(bad)
imul
pushf
push
mov
pop
push
cmp
jecxz
sti
clc
pop
adc
mov
add
add
(bad)
in
or
rcl
ins
popa
int3
shr
and
or
jg
jnp
fist
add
lock
mov
adc
ins
mov
lea
mov
xchg
cmc
mov
mov
jmp
sbb
mov
loope
fnclex
mov
test
cmps
sub
or
mov
aam
mov
mov
push
cwde
xor
out
and
pop
lods
pop
retf
adc
mov
popf
int3
xor
mov
add
(bad)
aad
mov
pop
and
(bad)
out
dec
(bad)
pop
mov
mul
xor
mov
push
movntq
xchg
lea
push
and
out
mov
fidivr
and
jecxz
or
adc
sub
jge
cdq
mov
mul
lock
sub
dec
retf
imul
add
push
hlt
pop
inc
xchg
aas
pop
(bad)
ss
pop
lahf
xchg
xor
int3
fild
and
addr16
cmp
push
or
mov
imul
aas
das
sbb
loopne
inc
les
cmc
xor
daa
xor
add
xchg
fdiv
jmp
sub
out
movs
sar
adc
adc
dec
std
xor
cmp
(bad)
sbb
push
and
pop
loope
movs
sbb
frstor
iret
stc
cld
popa
into
fstp
mov
jmp
adc
and
das
pop
inc
fimul
out
adc
xlat
and
rcl
push
mov
call
ror
pop
jnp
loop
mov
mov
cmp
jae
repnz
inc
test
or
or
sbb
ins
xchg
xchg
icebp
shl
lock
sub
mov
inc
ror
jnp
mov
cmc
lock
mov
scas
add
mov
ret
push
jmp
fsub
dec
addr16
icebp
inc
cmp
adc
xlat
push
pushf
clc
nop
mov
clc
cmp
test
lock
fwait
push
xchg
vmwrite
mov
jle
adc
mov
inc
push
iret
fidiv
push
xor
dec
dec
add
int
push
gs
or
jns
into
loop
xchg
jmp
xor
bound
xor
es
arpl
std
or
shl
inc
into
xor
dec
sbb
adc
xchg
dec
xor
mov
je
push
sbb
jns
std
sbb
add
pop
mov
or
mov
adc
lods
mov
and
inc
ins
xor
jmp
cmps
(bad)
out
sub
dec
idiv
stos
imul
adc
aaa
ss
pushf
pusha
loop
hlt
test
retf
inc
mov
shl
mov
cmp
mov
retf
ins
lock
add
div
xchg
stos
outs
xchg
and
imul
pop
sbb
movs
xchg
mov
dec
(bad)
hlt
ins
adc
sub
test
inc
jnp
retf
ret
dec
loopne
mov
std
xor
call
sbb
popa
sub
inc
mov
in
cmp
int
mov
adc
jae
mov
out
xchg
inc
adc
in
movs
push
mov
adc
add
in
stos
ja
mov
jns
xchg
or
test
and
mov
mov
ds
outs
cld
cmp
mov
leave
cs
daa
adc
sbb
icebp
push
dec
mov
inc
jmp
sub
push
inc
out
stos
mov
mov
packssdw
test
xchg
imul
test
not
and
addr16
xchg
out
xchg
sbb
js
test
add
outs
mov
cmc
mov
mov
mov
rol
dec
inc
int3
loop
adc
dec
cmp
fs
sub
lea
adc
push
cwde
sub
cli
(bad)
loopne
inc
cmp
sub
fidiv
loope
sub
lds
hlt
out
xor
push
xchg
sub
aam
int3
fisttp
mov
xor
and
ret
mov
imul
jge
out
(bad)
jg
mov
iret
int3
inc
cli
xor
(bad)
imul
push
popa
repz
push
add
stos
dec
pop
pop
xor
pop
sahf
xor
push
test
sbb
clc
pop
mov
mov
ret
inc
ja
xchg
movs
(bad)
call
data16
sti
out
in
cdq
adc
push
xchg
repnz
cwde
(bad)
mov
jne
jns
xchg
bound
or
js
ss
in
gs
jne
push
inc
dec
fwait
mov
and
pop
adc
xor
push
cmp
fst
je
pop
sti
mov
dec
std
ret
add
ret
test
mov
and
push
mov
dec
test
movs
std
ins
xor
xchg
cmovns
mov
lods
cmp
xchg
and
mov
loope
hlt
cmps
ins
add
adc
stc
cmp
neg
repz
cmc
ret
add
cmp
call
xchg
pop
scas
cmp
enter
sbb
fs
mov
loopne
scas
sbb
jbe
dec
xor
and
sar
xchg
pusha
mov
(bad)
xlat
out
mov
int3
cmps
sbb
rcl
sub
xchg
cmp
mov
test
inc
adc
xor
dec
(bad)
pop
dec
sbb
lock
cli
out
cld
cdq
push
mov
lds
test
stos
dec
mov
pop
cld
jecxz
test
mov
dec
or
adc
out
xor
scas
jle
shr
ret
inc
rcl
div
inc
std
mov
push
ins
xor
xchg
int
push
fstp
dec
(bad)
rcl
ss
enter
mov
cli
ret
bound
loopne
outs
fwait
loop
pop
fistp
xchg
ins
outs
jno
sar
out
in
daa
cwde
xor
sti
jo
ins
(bad)
daa
cmp
add
fcomp
xchg
or
and
retf
xchg
shr
sbb
adc
pushf
adc
repz
repnz
and
xor
dec
(bad)
pop
cmp
mov
popa
repz
fs
cs
lds
cmp
(bad)
push
(bad)
jns
shl
(bad)
xlat
(bad)
shl
(bad)
call
fsub
stos
data16
push
or
add
and
imul
out
push
cwde
in
or
clc
les
jb
cli
mov
movs
cmps
rcr
rol
fs
pop
mov
repz
xor
jmp
ret
push
daa
je
sti
mov
lea
into
mov
out
xchg
mov
push
aad
mov
jmp
pop
outs
jbe
fwait
movs
mov
xor
jp
stos
in
sub
jmp
push
pusha
jmp
xor
iret
inc
push
adc
inc
mov
mov
dec
adc
mov
jns
faddp
xor
imul
(bad)
popf
mov
cs
pop
sbb
stos
jmp
out
sub
or
sbb
(bad)
les
add
mov
pop
fld
push
mov
cmc
sahf
(bad)
or
add
xor
rol
and
dec
retf
mov
dec
fwait
dec
mov
sar
adc
mov
add
shr
cmps
shr
fdiv
mov
jmp
call
xchg
cmps
or
add
jnp
or
jb
xchg
div
jmp
add
(bad)
dec
ins
and
dec
in
ret
pop
aaa
xchg
mov
or
call
xor
(bad)
mov
cmp
cmp
sbb
cmp
pop
sbb
mov
and
out
and
nop
xor
rcl
int3
add
push
mov
xlat
pop
xlat
mov
jmp
inc
pop
inc
xor
je
sub
hlt
cmp
rol
je
loope
or
loope
jecxz
xor
(bad)
ss
xor
scas
imul
mov
jg
hlt
ret
arpl
outs
test
out
hlt
inc
cmc
in
add
out
jmp
popa
cmp
int
cs
jae
hlt
mov
iret
or
dec
jb
push
sbb
mov
add
cmps
adc
jmp
mov
mov
ins
out
mov
jno
cld
sub
mov
sbb
xchg
push
sbb
cmp
dec
mov
jl
xchg
jl
retf
push
jns
je
lahf
ja
sub
leave
push
adc
and
jae
adc
sub
imul
mov
imul
pop
bound
aaa
jmp
jmp
cld
or
inc
into
nop
inc
jecxz
out
ret
and
xchg
push
sbb
cdq
ins
lea
jp
sti
jno
dec
sar
jno
sub
rol
sbb
xchg
mov
sbb
dec
pop
cmp
call
inc
(bad)
fdiv
push
je
cmp
repz
dec
xchg
mov
sub
popa
test
and
xor
sbb
mov
(bad)
loop
stc
and
(bad)
cmp
enter
push
push
inc
inc
imul
or
mov
dec
movs
or
xor
add
movs
ret
mov
mov
xchg
or
stos
cmp
fstp
push
jnp
push
inc
popa
scas
shl
pop
aad
movs
dec
mov
callw
xlat
dec
test
retf
sub
pop
cmps
add
dec
or
jp
push
cmc
sbb
les
cli
push
inc
test
rcl
mov
sub
cdq
xor
push
push
inc
sub
lods
xchg
jb
pop
pop
es
inc
inc
sbb
fs
mov
pop
and
push
inc
push
xchg
repz
cmps
ds
rcr
enter
add
add
jg
ins
cwde
jne
loope
outs
(bad)
jbe
out
outs
jo
je
scas
data16
mov
call
test
scas
rcr
sar
mov
dec
and
push
sti
loope
push
mov
xchg
or
cmps
packssdw
mov
or
(bad)
push
jmp
scas
or
mov
dec
ss
stos
movs
scas
test
xchg
aam
adc
fstp
pop
inc
fisubr
mov
je
xchg
outs
test
xor
jmp
punpcklbw
adc
scas
fucomip
and
(bad)
xchg
push
fcomp
xlat
js
xor
fcmovnu
jp
lods
cmps
mov
xchg
or
mov
mov
int3
sub
adc
mov
call
or
das
mov
push
(bad)
retf
imul
xor
jmp
dec
mov
in
fwait
repz
pusha
test
dec
xchg
mov
push
mov
or
test
out
ins
ss
jo
mov
stos
fs
push
adc
(bad)
xchg
loope
sbb
adc
clc
jge
ins
pop
push
push
ret
inc
outs
gs
(bad)
pop
pop
dec
mov
dec
adc
jge
pusha
ja
dec
les
inc
pop
or
aad
imul
push
sub
inc
sub
xor
push
es
or
and
movs
pop
das
mov
dec
mov
in
in
cmp
dec
add
dec
xchg
repz
xchg
sbb
shl
icebp
test
dec
scas
mov
pop
in
adc
push
mov
int
ret
mov
int3
xor
jp
ror
cmp
out
je
sbb
test
push
pop
push
mov
in
mov
into
jae
push
push
fxsave
xor
inc
push
rol
aam
(bad)
fadd
xchg
pop
or
sub
cmp
sbb
or
fstp
dec
das
add
xor
and
cmps
scas
dec
sti
add
mov
aad
inc
push
addr16
imul
xchg
push
sbb
xor
dec
aaa
jnp
(bad)
push
shl
fld
loop
aaa
xchg
inc
movs
shl
les
add
stos
cs
xchg
stos
nop
dec
cmp
add
jo
pop
pop
xchg
fcomp
fcom
fs
int
add
arpl
es
sbb
inc
pop
mov
or
scas
jg
add
lea
dec
xor
out
mov
cmp
enter
pop
repnz
mov
ret
lock
lods
pushf
(bad)
iret
sub
cwde
mov
mov
fcomip
mov
or
out
xlat
mov
stc
je
dec
mov
or
vpavgb
(bad)
in
xchg
call
loope
add
cs
xchg
jle
bound
aam
sub
mov
aad
push
out
jmp
xor
mov
mov
jns
xor
pop
cs
cmp
int
dec
mov
scas
retf
ret
inc
aaa
bound
(bad)
push
movs
xor
out
test
cmp
xor
xchg
lods
int3
in
xchg
cmp
fmulp
push
shl
jge
sbb
push
pop
push
ret
in
cld
(bad)
or
jecxz
fisttp
push
repz
add
mov
stc
and
xlat
xchg
mov
test
push
in
adc
(bad)
sahf
retf
in
lock
xchg
ds
mov
mov
xor
leave
push
not
fst
out
hlt
jge
cs
mov
pop
or
out
sub
data16
xchg
sbb
je
and
ror
adc
icebp
retf
inc
lods
stos
jge
loopne
ins
repz
mov
inc
and
and
movs
(bad)
in
add
je
(bad)
jmp
popf
sbb
pop
xchg
test
add
or
push
shl
cmp
and
lods
enter
sbb
iret
jnp
pop
mov
cdq
shl
mov
mov
sub
pop
fnstsw
in
ret
jns
fs
sub
dec
fucomi
fiadd
pop
inc
inc
inc
pushf
repnz
call
xor
adc
or
sub
nop
(bad)
mov
mov
sub
dec
push
div
xor
push
retf
fsubr
aaa
sbb
xchg
push
outs
mov
pusha
xchg
add
cdq
push
cmps
dec
add
push
ins
add
in
xor
xlat
and
jno
rcr
ss
cmp
and
dec
sub
(bad)
stos
pop
mov
inc
adc
mov
enter
adc
and
jnp
test
stc
test
xor
fild
hlt
adc
fisubr
mov
sub
and
nop
in
call
repnz
jecxz
or
jb
push
jbe
push
test
pop
ins
push
dec
cmp
aam
push
mov
test
xor
inc
rol
sub
jno
mov
adc
jbe
movs
jp
mov
and
test
je
in
cmp
je
rcl
(bad)
popf
sub
sbb
retf
shl
sub
aaa
lock
inc
pushf
es
pop
or
data16
dec
es
push
jbe
jle
dec
pop
in
mul
mov
imul
retf
(bad)
jmp
and
xchg
fisubr
or
fcmovbe
lods
test
xchg
jmp
inc
xor
movs
mov
imul
jo
cmp
scas
cmps
mov
mov
aaa
jno
xchg
add
cld
cdq
fs
loop
sub
adc
cmp
pusha
sub
mov
fld
retf
ror
les
daa
(bad)
outs
sub
pop
xor
xchg
jb
cmp
mov
retf
xchg
pop
test
movs
add
repz
sbb
mov
nop
cmp
and
mov
mov
rol
loop
jle
xchg
test
xor
ja
push
mov
push
in
arpl
int3
xlat
dec
sub
pusha
(bad)
inc
dec
sub
add
push
sub
inc
(bad)
std
cmps
add
cmp
loop
xchg
mov
outs
stc
mov
and
outs
fwait
outs
gs
xor
les
sbb
es
movs
push
cmp
movs
jmp
push
hlt
cs
xchg
retf
ja
(bad)
ja
mov
sub
lea
mov
lock
push
loop
pop
or
fwait
cmps
cli
push
dec
loope
mov
mov
inc
xlat
lds
add
sub
psubb
mov
in
and
retf
dec
lock
popa
je
sub
jnp
je
mov
mov
push
rcl
fsubr
mov
push
lock
and
test
arpl
mov
jl
(bad)
sub
dec
cld
lods
ret
sbb
test
pop
sbb
mov
inc
call
in
loop
ss
mov
push
pushf
and
xlat
pop
push
fs
test
fdivp
movs
inc
js
js
add
daa
dec
add
enter
add
inc
ficomp
lds
mov
ins
das
mov
fistp
pusha
adc
add
inc
sub
outs
or
cmps
dec
lahf
hlt
lahf
stc
mov
push
xchg
and
aaa
push
sub
lods
nop
pusha
ds
sub
mov
loopne
mov
push
test
jge
mov
xor
out
inc
(bad)
std
mov
inc
dec
sub
ins
and
pop
ins
gs
(bad)
test
adc
adc
or
or
ins
xlat
(bad)
mov
(bad)
xor
pop
mov
or
into
out
adc
xchg
dec
dec
inc
leave
(bad)
mov
inc
outs
pop
jnp
pushf
xor
fwait
jp
imul
mov
cmc
mov
xchg
loope
and
pushf
push
dec
or
push
(bad)
ret
inc
cmp
mov
cmp
cli
fwait
mov
xchg
adc
scas
imul
aam
fsub
outs
or
les
push
sbb
dec
push
sub
xor
pop
pusha
jne
ret
mov
pop
dec
nop
add
pusha
push
loope
push
sbb
mov
or
push
call
dec
and
jns
arpl
ins
inc
in
int3
in
or
add
lock
aas
int
js
popa
xchg
in
dec
das
jo
shl
inc
jno
pop
loope
adc
xchg
mov
pusha
sbb
out
jp
repnz
jbe
fld
jne
jbe
cmps
out
(bad)
addr16
inc
sub
daa
fneni(8087
fdivr
test
jl
cs
in
mov
inc
mov
retf
inc
or
xchg
mov
std
mov
rcl
jne
mov
sub
fadd
mov
cld
repnz
mov
jl
out
rcr
and
je
jnp
mov
dec
out
dec
push
sub
jecxz
or
call
int
push
(bad)
hlt
mov
sub
xchg
dec
xchg
add
jno
dec
ret
ja
push
mov
rcl
cmp
xor
sar
pop
xchg
pop
cmp
or
push
retf
add
dec
in
pusha
out
int
push
ret
mov
push
jb
adc
repz
ret
add
pop
cmp
dec
mov
xchg
jbe
xchg
sbb
mov
into
cmc
pop
push
pop
cmp
xor
cs
fild
xor
jne
ins
cmp
(bad)
fisub
mov
push
push
loopne
and
sub
or
enter
pop
sub
mov
icebp
jae
idiv
repz
cmp
adc
mov
pop
cmps
movs
xor
pop
(bad)
and
fsub
or
or
cmp
int
dec
rol
cmp
sbb
add
inc
cwde
jb
addr16
and
shl
(bad)
shr
aaa
xchg
mov
mov
sub
test
push
and
dec
sbb
out
jmp
adc
fcomp
mov
jno
cmp
inc
sar
(bad)
fisttp
push
jecxz
cmc
sbb
out
mov
xchg
sar
fdiv
call
out
and
call
stos
xor
add
inc
cmp
jp
cs
test
out
pop
pusha
clc
mov
imul
xchg
dec
sbb
and
mov
push
stc
adc
xor
push
push
popf
xor
inc
dec
dec
inc
nop
mov
sub
adc
ret
sub
clc
stos
mov
jbe
jb
xchg
inc
rol
mov
and
jne
mov
and
jp
arpl
pop
cmps
leave
das
jmp
push
or
xchg
loop
or
fmul
xor
scas
mov
add
jle
ror
pop
jg
sub
test
add
jo
call
rol
xchg
or
popa
div
jb
mov
or
ficomp
or
imul
push
dec
popa
(bad)
fwait
push
jg
cmp
rcr
jbe
mov
dec
inc
mov
push
jbe
pop
cmp
(bad)
in
into
sbb
pop
repz
lds
loope
add
into
mov
and
cmc
shr
out
loopne
push
cs
pushf
xchg
xchg
mov
mov
movs
xchg
sti
inc
jl
imul
xchg
leave
sub
pop
(bad)
stc
add
icebp
mov
in
push
sbb
adc
setl
or
test
int3
mov
lahf
dec
shl
xor
ret
mov
xchg
hlt
sbb
int
add
mov
loop
inc
test
jne
(bad)
retf
ins
mov
mov
jo
leave
in
xor
pop
into
inc
imul
xor
hlt
mov
dec
push
lods
mov
mov
mov
retf
icebp
imul
cli
jno
mov
imul
adc
push
imul
push
dec
out
or
pushf
mov
jmp
fbld
je
sub
sub
or
push
pop
inc
out
xor
mov
mov
retf
cmp
mov
or
lds
movs
movs
ss
dec
push
cmps
xchg
push
jbe
mov
xchg
add
xchg
outs
popa
fs
jle
xchg
jle
repz
pop
and
pop
in
xchg
jmp
push
arpl
das
pusha
daa
ret
dec
mov
or
scas
jle
xor
xchg
mov
loope
jmp
cli
das
and
jl
sub
out
dec
and
jae
stc
aad
dec
adc
mov
cli
rcl
pop
lods
jno
jb
les
inc
jp
pop
pop
jg
inc
mov
arpl
and
add
dec
sbb
xchg
sub
stos
jp
ins
nop
ret
xchg
mov
add
or
inc
adc
jg
jns
mov
sahf
aam
lock
pop
retf
daa
adc
mov
cmp
mov
mov
pop
sahf
adc
inc
cmc
jb
add
xor
(bad)
leave
pop
push
and
adc
jb
sub
in
hlt
iret
stc
inc
add
repnz
push
mov
mov
lahf
add
xchg
xchg
add
xchg
jb
data16
call
psrlq
xor
xor
bound
and
pop
add
or
push
pop
fisttp
test
jae
or
dec
iret
sbb
imul
hlt
ss
clc
cmc
clc
test
mov
clc
ins
aad
(bad)
movs
popf
sar
jbe
jnp
pop
or
cdq
jecxz
push
dec
cmp
sub
pop
(bad)
push
pop
movs
mov
pop
or
lea
dec
pop
pop
mov
dec
ins
(bad)
jle
std
aaa
ret
xor
cmc
arpl
sbb
cmps
and
jl
fs
or
jb
dec
adc
sbb
iret
mov
mov
stc
loope
inc
sub
add
test
xchg
ds
loopne
(bad)
mov
lds
push
mov
jge
mov
out
xchg
jnp
and
jmp
jnp
adc
shl
dec
xor
fwait
inc
retf
or
xchg
outs
add
ja
cmp
inc
sbb
imul
pop
stos
js
push
jecxz
add
rcr
(bad)
mov
int3
es
inc
adc
shl
enter
pop
inc
(bad)
call
inc
cli
in
retf
inc
xor
jecxz
shl
mov
mov
cmps
add
jo
jb
outs
lods
lock
(bad)
rcr
lahf
cmp
enter
cld
call
jae
out
(bad)
iret
fcmovbe
push
gs
cld
mov
jbe
dec
pop
xor
mov
sub
mov
mov
jae
mov
(bad)
jecxz
lods
scas
sub
mov
jae
and
pop
data16
(bad)
cmp
sti
dec
lea
cdq
xchg
pop
int
jmp
ror
mov
bound
pop
push
fisttp
jno
cwde
mov
push
push
dec
xor
push
inc
mov
mov
enter
mov
fsubr
xor
sub
into
ss
out
aad
mov
aam
adc
xlat
out
fwait
shl
dec
pushf
or
or
mov
adc
repz
dec
and
cmp
repz
push
push
icebp
int3
dec
push
into
inc
fs
push
out
in
(bad)
pop
inc
jp
pop
retf
int
out
cmp
cld
lods
ds
lods
xchg
push
mov
lds
push
push
fwait
leave
and
adc
repz
inc
dec
cmp
rcr
fcomi
ret
push
dec
dec
xor
loop
ds
in
leave
in
and
es
addr16
sbb
lahf
inc
sbb
cmps
mov
(bad)
sub
and
pop
or
std
call
sbb
out
mov
jnp
mov
fst
mov
gs
enter
pop
fmul
fild
mov
out
(bad)
cld
inc
xchg
aaa
xor
sbb
add
and
jne
dec
mov
dec
mov
push
xchg
push
add
mov
pop
and
adc
ins
test
sub
not
in
std
or
dec
adc
mov
int
fisubr
adc
test
cld
call
jo
jbe
popf
outs
sbb
int
lea
sbb
outs
sub
ficom
js
adc
dec
cs
in
test
movs
pop
xchg
xor
ss
aad
std
call
cmp
sbb
cmps
cmp
in
fdiv
pop
mov
shr
push
sahf
rol
fs
cli
pop
imul
or
adc
sub
xchg
movs
sbb
xchg
or
xchg
sti
out
push
adc
adc
jge
repz
test
out
sahf
mov
xchg
dec
mov
test
pushf
jnp
mov
and
mov
cmps
test
mov
loop
out
enter
shl
hlt
in
jle
push
outs
pop
retf
push
fsubr
fs
clc
mov
(bad)
mov
push
sub
sub
ins
cmps
or
scas
mov
jne
xchg
push
mov
mov
push
mov
ins
xor
cmps
in
dec
inc
lds
mov
mov
aad
jb
test
(bad)
dec
sbb
mov
sub
xchg
mov
inc
or
jnp
cmp
aam
retf
push
xchg
or
jns
test
retf
push
shr
adc
jmp
ss
jmp
xchg
(bad)
mov
js
ins
pop
mov
scas
jbe
dec
adc
xchg
cmp
dec
int3
ins
xchg
jl
jae
(bad)
aaa
pop
or
movs
lds
jbe
add
cmp
stc
mov
(bad)
je
or
xlat
pop
js
jle
add
add
dec
and
mov
and
mov
mov
or
push
or
int
mov
cmp
fstp
clc
inc
enter
fsub
je
add
lods
sub
mov
std
cmp
jle
popf
jno
sti
sbb
push
lea
nop
cmp
ret
sbb
jmp
pop
or
daa
push
idiv
in
jbe
enter
pop
mov
mul
jae
cmp
adc
repnz
in
push
inc
fldenv
sbb
lea
pop
imul
fs
fist
mov
sbb
mov
in
fiadd
mov
cmp
push
test
jmp
pop
fimul
out
push
jg
jns
sar
repnz
mov
lds
xchg
inc
rcr
jmp
cmps
(bad)
out
lea
mov
cmp
adc
mov
inc
retf
loopne
adc
jns
sub
add
js
xor
push
ret
pusha
mov
test
fs
not
mov
test
call
sbb
ins
mov
xor
jnp
jmp
out
mov
out
je
adc
inc
call
jne
jmp
sbb
fs
popf
jmp
dec
shl
bound
aaa
mov
inc
push
fiadd
movs
dec
xchg
(bad)
xor
mov
pop
(bad)
mov
pop
outs
mov
cmp
xor
jbe
mov
sbb
jbe
(bad)
adc
imul
call
iret
push
aas
dec
(bad)
sub
call
bound
sub
xor
leave
pop
jb
outs
sub
or
push
or
loope
lods
mov
pop
xchg
jns
std
div
pop
add
into
sbb
fld
push
mov
iret
stos
mov
fwait
adc
pop
add
xor
adc
mov
inc
cmp
mov
scas
and
into
add
mov
jns
sahf
test
add
add
push
pusha
into
dec
(bad)
sti
cmp
jle
inc
and
jge
jo
out
push
xor
call
lahf
cmps
mov
mov
dec
sbb
and
add
in
cmp
mov
or
fwait
jb
mov
rol
fcmovb
stc
dec
lods
das
jge
mov
mov
inc
pop
lods
daa
outs
cmps
mov
mov
fist
inc
sbb
jmp
imul
dec
test
repz
mov
mov
and
out
mov
cmps
add
into
fidiv
sbb
daa
repz
pop
cmps
mov
inc
add
xchg
hlt
sar
imul
push
test
dec
sbb
mov
jns
aas
addr16
shr
sub
cmps
test
in
mul
jmp
sbb
sbb
sub
ja
bound
sbb
or
aas
mov
inc
mov
dec
stc
or
mov
in
xchg
popa
mov
mov
push
fwait
push
ins
dec
in
jnp
dec
popf
mov
std
rol
ja
mov
into
dec
std
ror
ss
mov
jg
push
pop
fisttp
rcr
js
sahf
adc
retf
inc
and
cmp
clc
out
mov
call
fidivr
fimul
not
fwait
pop
cdq
cmp
ss
mov
loope
aam
jb
gs
add
aad
inc
xor
mov
jl
xchg
fldcw
jle
lahf
mov
add
pushf
fsub
stos
mov
es
xchg
xchg
in
std
inc
mov
outs
sbb
out
int
enter
push
rcl
pop
add
mov
add
mov
pop
inc
int
dec
and
(bad)
fadd
sub
xchg
and
scas
(bad)
mov
daa
mov
gs
sub
hlt
jns
fstp
xchg
sahf
clc
cmc
movs
imul
lds
in
loop
fcomp
mov
jno
cmc
or
pusha
push
js
add
fmul
mov
mov
mov
ret
std
pop
inc
repz
adc
add
or
das
cmps
stos
in
push
retf
pop
xrelease
mov
out
inc
fistp
pop
movs
push
outs
es
mov
or
jg
addr16
hlt
movs
mov
(bad)
mov
jecxz
mov
aam
add
sub
and
pop
inc
add
add
mov
aad
je
in
mov
imul
in
push
mov
pop
mov
add
push
icebp
xchg
jmp
shl
pop
imul
mov
imul
pop
hlt
sub
ds
fstp
loopne
aaa
fcomp
int
in
inc
fst
je
mov
rcl
jnp
lds
out
mov
pop
mov
push
mov
and
(bad)
xchg
outs
icebp
cli
xor
scas
jle
mov
jae
and
mov
xchg
movs
mov
push
sahf
leave
pop
mov
fisttp
and
das
stos
rcl
pushf
and
stc
mov
mul
jp
xor
adc
bound
mov
dec
lods
out
aam
shr
retf
cmp
inc
mov
jns
sub
cs
inc
jmp
cmp
cdq
gs
and
jno
push
dec
in
arpl
adc
push
mov
aam
dec
imul
mov
data16
lds
imul
push
outs
pusha
retf
ja
mov
ret
dec
mov
fwait
sub
imul
mov
lea
push
mov
push
in
cmp
inc
rol
sub
or
pop
adc
mov
das
cmp
cmps
lods
xor
fdivr
ret
test
cdq
shr
retf
retf
mov
sbb
mov
mov
inc
(bad)
mov
ins
add
scas
jbe
dec
mov
push
or
pop
repz
push
clc
push
cmp
sbb
(bad)
sbb
repz
mov
scas
popa
xor
pop
cmp
lds
in
mov
ins
dec
pusha
dec
jns
(bad)
fwait
arpl
repz
mov
jnp
mov
lods
shl
mov
das
outs
call
ja
les
adc
pop
in
fisttp
fwait
mov
pop
mov
repz
jo
add
cmp
sub
(bad)
sbb
stos
stos
mov
stos
gs
in
dec
ja
cmp
sub
in
push
and
into
inc
mov
ret
in
aam
xchg
xchg
cmp
(bad)
mov
mov
hlt
in
jmp
inc
mov
lahf
mov
xchg
scas
xor
sub
retf
retf
xor
xchg
add
sbb
dec
mov
sbb
dec
pusha
jns
push
in
sub
jg
pop
adc
or
mov
outs
iret
sub
and
or
mov
int
fwait
(bad)
fs
jne
adc
jo
pusha
outs
scas
jae
pop
ror
call
push
or
aam
mov
daa
shl
add
(bad)
jl
and
movs
push
sbb
cmp
int
frstor
or
add
xlat
addr16
cs
dec
ins
(bad)
fmulp
mov
xchg
sbb
(bad)
aaa
push
sahf
push
imul
adc
jne
cdq
lahf
inc
pop
xchg
imul
add
mov
xchg
movs
dec
push
cmp
fcomp
call
jle
mov
and
mov
push
and
sti
mov
(bad)
in
jg
lea
mov
inc
sbb
fxch
enter
mov
dec
pmulhuw
cmc
fiadd
or
mov
add
and
fwait
jae
lods
dec
in
cdq
daa
lea
xchg
loope
ins
pop
adc
inc
cs
js
in
outs
add
int
(bad)
push
in
adc
cmp
les
out
cmp
fcmovbe
lods
mov
arpl
sub
iret
xchg
and
icebp
stos
pop
leave
pop
sbb
mov
ret
adc
adc
mov
stc
fist
dec
adc
popf
mov
pcmpgtd
in
out
outs
cmp
pop
pop
jmp
(bad)
inc
sbb
(bad)
outs
fs
fs
pmaxub
fld
mov
fld
in
retf
adc
lock
sub
dec
pushf
mov
ror
mov
mov
test
sbb
push
arpl
mov
xchg
add
push
mov
sub
test
jmp
and
sbb
stos
leave
sbb
shl
test
inc
rcr
dec
std
jno
neg
call
call
push
adc
out
dec
xchg
pop
imul
push
xchg
xchg
sbb
push
test
add
cmp
nop
push
repz
fs
cmp
arpl
test
or
sub
pushf
test
pop
shl
fwait
sbb
dec
ret
push
dec
test
fbld
iret
retf
mov
(bad)
aam
xchg
nop
loop
call
push
clc
push
call
movs
xchg
cmp
pop
cmp
ficom
sbb
cmp
sbb
js
jecxz
sbb
(bad)
mov
gs
jnp
test
cs
iret
imul
arpl
xor
jno
je
sbb
popa
jmp
push
and
rol
ds
push
jnp
add
aam
retf
add
lock
jbe
add
popw
arpl
xchg
scas
lds
ret
mov
jnp
repz
and
fwait
sbb
dec
add
pop
clc
and
xor
stc
aam
mov
jb
mov
jno
(bad)
dec
jmp
pop
add
mov
hlt
and
cmp
addr16
inc
add
pop
jno
adc
mov
stc
cmc
jno
xor
mov
jbe
aam
push
leave
adc
call
gs
test
dec
rcr
inc
nop
push
enter
into
mov
cli
fmulp
sbb
add
sbb
aam
es
in
and
jbe
pop
pop
repz
or
xor
pop
shr
add
(bad)
or
retf
xor
fild
lock
jmp
xor
out
add
dec
jns
and
mov
and
stc
xchg
retf
adc
test
adc
or
fisubr
mov
xor
fcmovbe
in
add
rcr
add
jns
movs
cmp
(bad)
mov
call
ins
inc
into
xchg
scas
fbld
ret
hlt
add
std
cwde
xchg
jge
mov
and
pushf
inc
and
sbb
mov
or
dec
adc
idiv
cmp
enter
cmp
mov
push
mov
out
sar
sti
sahf
mov
mov
sbb
lock
jo
push
mov
pop
cmp
jno
inc
(bad)
jns
stos
or
clc
fxtract
mov
popa
mov
in
les
inc
sbb
(bad)
cli
stos
and
cmp
test
cmp
stos
jmp
test
sub
ret
pop
lods
pop
inc
mov
lea
jno
inc
call
shr
jno
shr
out
sbb
and
cmp
pop
or
outs
sbb
invd
scas
pop
mov
mov
dec
inc
pop
lahf
mov
inc
ret
push
bswap
test
(bad)
frstor
daa
into
adc
lock
sbb
popf
in
data16
scas
(bad)
fnstenv
shl
jp
data16
pop
mov
leave
xchg
cmp
fistp
scas
mov
push
xor
fadd
adc
jp
(bad)
lock
test
sti
cmp
pop
fbstp
inc
sbb
fnstsw
xchg
pop
sbb
push
cs
adc
mov
pop
add
fldcw
lahf
inc
cmc
loope
aad
fsubr
inc
lods
jle
add
adc
shl
mov
stos
cmps
jl
or
js
neg
mov
fmul
icebp
push
xchg
inc
fdivr
outs
xchg
fcomp
arpl
inc
adc
cmp
mov
adc
mov
push
data16
sub
inc
lahf
inc
inc
pushf
les
pop
nop
arpl
xor
xchg
cmp
(bad)
add
cmp
push
retf
dec
mov
add
add
mov
icebp
ja
xchg
push
(bad)
dec
lods
dec
dec
sbb
mov
and
pop
aam
in
mov
mov
out
shr
xor
loopne
mov
js
lea
adc
jg
mov
in
repz
popa
mov
dec
inc
arpl
inc
mov
push
dec
fwait
mov
test
les
mov
sbb
fxch
in
xor
call
in
js
inc
stos
call
adc
xchg
fwait
imul
fcmovnbe
aas
pop
jge
icebp
sub
xchg
sbb
mov
xchg
jecxz
in
add
xlat
jno
add
ror
sar
leave
adc
lahf
and
adc
jmp
lods
(bad)
int
push
adc
add
aad
adc
sbb
or
dec
popf
outs
clc
gs
fcomp
push
xor
jmp
data16
cs
fwait
xor
(bad)
fsubrp
jne
jnp
ins
test
js
adc
shr
(bad)
sbb
adc
dec
out
sub
mov
cmp
push
sub
adc
xchg
test
(bad)
idiv
bound
xlat
mov
xlat
xor
jg
sbb
shr
inc
dec
in
les
in
hlt
jge
inc
sub
push
or
mov
int3
cs
push
adc
jmp
idiv
nop
or
push
and
test
nop
and
push
mov
xlat
pop
push
nop
cmp
and
sbb
mov
mov
and
push
xchg
ins
push
dec
scas
ins
out
fwait
cwde
inc
jne
lds
rcr
fwait
je
movs
cwde
adc
sbb
sub
sbb
mov
cmp
cmp
shr
or
lock
xchg
les
repnz
adc
jge
adc
jecxz
xor
inc
or
push
test
jl
inc
pop
aas
mov
push
or
push
jnp
push
in
pop
sahf
xchg
mov
ficom
jbe
jle
in
repz
icebp
fistp
add
mov
jp
xor
lock
pop
rcr
enter
test
sub
clc
jae
(bad)
aaa
scas
das
pop
mov
jns
adc
xor
xchg
ss
xor
loope
sbb
push
push
jmp
adc
jb
jnp
xchg
mov
mov
add
inc
es
daa
mov
xor
inc
shr
jge
mov
hlt
loop
pop
jmp
cmp
data16
in
and
push
jmp
jbe
adc
fcmovu
sbb
aam
adc
inc
push
xchg
(bad)
loopne
inc
loop
pop
mov
rcr
bnd
mov
mov
inc
xchg
jge
(bad)
cld
sub
sub
xchg
push
cmps
int3
popa
sbb
ss
out
jmp
sbb
cs
inc
adc
into
xchg
inc
test
loop
bnd
mov
pop
xor
imul
in
push
dec
push
aas
lahf
sub
(bad)
into
shl
jo
ins
je
fnstenv
fld
outs
sahf
and
xor
(bad)
xor
out
inc
jbe
and
pushf
mov
xor
outs
jp
and
dec
sub
aas
test
jo
icebp
out
fs
(bad)
div
inc
mov
mov
cmps
add
and
pop
xor
cmps
mov
sub
(bad)
adc
pop
lsl
fld
sbb
mov
hlt
fild
fdiv
jp
xor
adc
pop
pop
leave
call
int3
mov
pop
pop
retf
dec
xchg
fs
inc
push
cmps
add
fwait
sub
xchg
sbb
icebp
xor
cli
jle
mov
pop
push
and
sub
push
fs
in
lods
scas
mov
mov
and
gs
jmp
adc
(bad)
fidivr
movs
arpl
pop
jns
mov
ds
pop
es
or
or
dec
gs
jg
push
sahf
scas
dec
and
(bad)
in
cmp
call
push
call
sub
mov
or
mov
test
(bad)
in
cmp
add
test
or
xor
or
jno
sbb
int
cmps
(bad)
stc
stos
fwait
push
movs
test
push
scas
pop
jbe
repnz
or
(bad)
in
and
call
add
dec
push
push
(bad)
ficom
outs
push
or
mov
inc
mov
fmul
adc
imul
xchg
clc
lea
arpl
lods
popa
int3
fst
sub
fcomp
daa
inc
add
pop
and
movs
lock
or
adc
aam
jno
cmp
xor
jnp
into
adc
ja
push
ins
push
add
adc
xchg
ret
and
mov
stos
je
adc
call
or
xchg
cmp
push
fdiv
cwde
hlt
dec
xchg
sub
push
loopne
icebp
mov
mov
cwde
out
sub
push
or
cs
and
neg
rcl
in
dec
mov
nop
fst
xchg
cs
jle
fcomp
jns
adc
cld
push
call
mov
xchg
mov
inc
sahf
in
scas
cmps
add
loopne
lods
(bad)
cmps
push
push
and
je
inc
movs
arpl
pusha
imul
fwait
or
add
loopne
add
jne
add
sbb
lods
sub
pop
call
xchg
test
retf
sbb
movs
rol
pop
adc
inc
fstp
cmp
loope
jno
xchg
shl
gs
and
mov
jne
push
jg
lock
inc
ja
jo
fbld
cdq
adc
cmp
xor
adc
pusha
in
ffreep
popa
jecxz
mov
repz
cmps
dec
pop
mov
adc
mov
cmp
jno
or
pop
popf
dec
pusha
gs
add
stos
or
sbb
in
cld
dec
mov
xchg
and
dec
rol
fld
jle
out
inc
nop
adc
and
retf
jb
jp
outs
(bad)
or
xor
test
aaa
imul
popa
and
adc
sbb
pop
les
jns
dec
adc
adc
and
add
gs
jb
pop
cmp
fisub
add
push
pop
out
mov
adc
shr
or
out
inc
add
mov
or
cmp
imul
sahf
push
sbb
(bad)
ja
mov
pop
lods
addr16
add
daa
fucom
mov
stos
cmp
jg
fisttp
not
and
clc
push
mov
ss
mov
jnp
push
pop
push
adc
cli
ret
inc
das
adc
sbb
cmp
dec
lods
fdivrp
pop
push
and
inc
sahf
push
cdq
sub
jp
xchg
mov
mov
jnp
scas
ret
or
fneni(8087
jnp
and
pop
enter
imul
mov
cmp
push
and
inc
mov
inc
fstp
int
daa
dec
mov
xchg
jnp
cld
jns
sub
scas
mov
pop
das
push
cli
xchg
cwde
aad
aaa
or
pop
sbb
and
ja
sbb
or
jns
pop
jecxz
sbb
jge
dec
xchg
push
je
in
dec
ret
arpl
inc
cmc
nop
cmp
xor
ret
pop
(bad)
das
cli
dec
pop
enter
or
xchg
ror
or
cmp
cmp
jmp
loope
clc
data16
icebp
cmps
fistp
loope
out
mov
inc
sub
cmp
bound
adc
movs
stos
push
mov
leave
add
out
call
inc
xlat
xchg
call
fst
mov
(bad)
mov
and
or
push
and
mov
or
sahf
mov
sub
stos
mov
fidiv
pop
xor
fidiv
inc
mov
test
push
xor
ja
mov
or
fs
adc
das
aaa
addr16
cmp
and
clc
out
xor
dec
js
inc
ret
scas
iret
mov
pop
pop
sub
inc
shl
or
sbb
push
mov
arpl
hlt
out
clc
or
mov
scas
push
arpl
push
(bad)
dec
rol
ds
push
retf
xchg
neg
or
sar
mov
and
shl
sub
push
mov
push
loopne
in
jnp
mov
repnz
call
xor
adc
or
outs
push
mov
jo
add
out
adc
xor
jg
les
sub
xchg
imul
jle
mov
dec
retf
js
arpl
and
sub
pop
rcr
push
add
jbe
addr16
push
push
sbb
sub
mov
stc
call
fisub
aas
jno
xchg
mov
dec
or
sbb
retf
stos
stos
lock
or
adc
add
or
repz
pop
dec
test
loope
push
retf
fisttp
std
xor
fcom
sbb
dec
inc
push
in
jno
std
retf
sub
cmp
iret
lods
add
cmp
jb
sub
and
das
cwde
pop
mov
push
shl
and
push
sbb
fcomp
mov
aad
lds
retf
dec
mov
xor
fst
sahf
or
in
add
adc
xchg
and
inc
scas
mov
lock
lods
mov
mov
js
mov
loope
push
jo
sti
fidivr
push
xor
out
push
dec
cmp
and
sar
js
xchg
push
push
add
mov
xor
bound
mov
jo
popf
hlt
mov
push
mov
xor
push
ja
xor
das
xchg
fisttp
mov
mov
int3
rol
add
pusha
cmp
scas
mov
push
shufps
mov
push
jno
mov
xchg
lds
inc
icebp
popa
stos
fdivr
cli
sahf
add
mov
fsubr
sub
xchg
sub
fadd
xor
div
xchg
mov
push
addr16
adc
sub
fdivrp
outs
cmp
sar
enter
xchg
ins
cmp
scas
imul
jmp
scas
jmp
aad
mov
pop
sbb
or
(bad)
out
enter
nop
ret
stos
push
jb
jne
pop
adc
shl
jns
cli
int
adc
jge
ret
mov
fdiv
das
dec
inc
mov
xchg
cmps
mov
inc
aaa
cmc
xchg
sub
mov
and
jnp
stos
repnz
loopne
loopne
or
imul
mov
and
mov
push
mov
test
push
push
in
scas
push
in
sub
in
out
repz
ret
arpl
test
loope
mov
push
xchg
(bad)
push
xlat
push
inc
cmps
pop
or
ret
mov
xlat
sbb
leave
fnstenv
sub
and
jge
sahf
bound
cmp
xchg
add
ret
imul
mov
jmp
lods
dec
cli
dec
mov
js
mov
mov
cmp
jnp
repnz
xchg
and
push
fsubr
pop
add
in
adc
jmp
and
push
cmp
popa
(bad)
jns
cdq
sub
mov
xor
cmp
in
call
icebp
cdq
xchg
inc
mov
sti
mov
sub
cmp
pusha
xchg
out
xchg
adc
stc
stos
inc
or
dec
imul
push
xor
jmp
into
dec
in
sbb
popf
inc
cwde
pop
dec
rcl
sbb
dec
adc
add
fiadd
addr16
jnp
dec
pop
pop
out
dec
scas
xchg
in
out
std
fsubr
outs
es
popf
pop
sub
jnp
pusha
imul
imul
bound
in
add
inc
lods
call
dec
pop
sbb
mov
fst
leave
or
push
inc
icebp
(bad)
and
xor
sti
sahf
retf
popf
sub
popf
fs
repnz
cmp
data16
fs
sub
fadd
adc
dec
fs
ins
int3
sahf
fimul
push
sar
aas
mov
int3
mov
push
test
pusha
rcr
pop
inc
lods
aas
ret
xor
out
adc
cmp
adc
scas
sbb
pop
cmp
jg
pop
dec
push
mov
movs
aaa
push
gs
inc
or
mov
gs
int3
stos
pop
mov
and
jmp
cdq
mov
cmps
lds
scas
fwait
jb
pop
test
js
dec
fld
int
ror
sub
out
iret
inc
aad
call
(bad)
leave
loop
imul
push
es
mov
mov
retf
and
ss
mov
mov
not
mov
es
cld
aam
jno
dec
loopne
imul
or
mov
jl
xor
and
fsub
and
shr
add
xor
jno
mov
out
mov
sbb
dec
in
and
(bad)
push
xor
and
xchg
mov
dec
stc
cmp
sub
test
jb
jb
mov
fstp
jmp
in
imul
mov
and
pop
arpl
out
adc
shl
push
mov
jno
and
cli
cdq
pop
ja
(bad)
dec
dec
sub
mov
std
(bad)
sar
loope
mov
jmp
movs
and
pavgb
lock
mov
jmp
xchg
jl
jnp
test
cmp
xchg
mov
jge
xchg
or
fdiv
in
jnp
fucomi
adc
or
js
call
or
mov
push
sbb
ficomp
lds
fwait
push
into
std
hlt
leave
lds
je
or
add
jbe
loopne
popf
or
fdiv
gs
imul
vaddps
cmp
loopne
es
std
mov
scas
pop
jbe
call
dec
stos
aam
cs
push
sbb
adc
cwde
inc
test
jp
nop
xchg
adc
mov
sbb
rol
and
scas
ret
std
sar
fs
pop
imul
push
cmps
push
jg
lods
std
iret
inc
and
call
inc
lods
les
stc
aad
loopne
or
out
add
jo
sub
loop
mov
enter
(bad)
mov
pop
push
cmps
retf
or
sub
push
int
sahf
data16
retf
repz
std
mov
sbb
iret
arpl
iret
into
jmp
(bad)
and
xor
and
dec
or
add
push
inc
sysret
pop
fbstp
cli
mov
jl
mov
pop
hlt
lds
stos
scas
sub
scas
mov
test
sub
or
imul
mov
push
(bad)
aad
loope
push
xchg
mov
out
shl
adc
mov
mov
inc
cdq
cmp
ret
mov
shl
sbb
adc
jne
out
add
fmul
push
pop
inc
pop
ds
xlat
rcl
pop
lahf
dec
repnz
sti
lods
pop
(bad)
pop
inc
movs
xlat
or
cmp
sub
sub
int3
lea
pop
xchg
sbb
fidiv
adc
push
jbe
stos
pusha
test
sub
loope
push
scas
sahf
jmp
mov
ror
ret
mov
gs
sub
mov
pop
push
jle
sub
sub
mov
or
adc
repnz
adc
jmp
rcr
add
mov
int3
mov
and
xchg
push
test
mov
or
stc
mov
pop
cs
mov
fild
mov
jmp
aad
add
rcl
mov
sti
outs
nop
mov
inc
jecxz
daa
cmp
mov
mov
mov
enter
xor
loop
sub
popa
mov
enter
loopne
iret
xor
bound
out
adc
lea
(bad)
shl
popa
pop
mov
push
sub
inc
dec
jl
shr
mul
retf
(bad)
pop
jns
xchg
jo
(bad)
and
call
and
sti
lds
sub
repz
and
ret
mov
and
in
ret
push
stos
push
dec
mov
cmp
add
aas
lock
pop
pop
imul
mov
(bad)
mov
mov
rol
je
jb
imul
and
dec
dec
and
leave
call
add
xor
or
retf
js
mov
cmps
cmp
ret
(bad)
pop
outs
shl
jns
sbb
add
jmp
cmp
call
jecxz
jmp
xchg
movs
mov
and
call
mov
mov
pushf
sub
xor
scas
data16
ret
lahf
lods
sub
pop
hlt
pop
dec
adc
loop
dec
jmp
mov
pop
repz
int
dec
xchg
sbb
fiadd
cmp
xchg
lock
dec
dec
lahf
sub
mov
hlt
in
jmp
mov
std
std
sub
sar
sahf
and
fdiv
sar
push
push
adc
and
xor
mov
aad
inc
mov
jp
mov
dec
adc
xor
mov
adc
push
clc
push
enter
mov
push
pusha
test
cld
sbb
jge
and
dec
fidiv
mov
mov
mov
ret
sahf
pop
repnz
aad
imul
and
loop
mov
movs
and
shl
pop
sub
mov
ror
call
iret
cli
bound
rcr
stos
jo
retf
in
cmp
mov
ficomp
mov
retf
dec
pop
icebp
scas
push
push
test
mov
push
out
ins
xchg
sar
js
aad
jl
dec
mov
bound
movs
lods
pusha
jae
icebp
jne
in
fdivr
imul
(bad)
sbb
adc
jg
fistp
imul
std
fist
jmp
(bad)
stos
xchg
pop
push
mov
(bad)
call
(bad)
or
xchg
aas
pop
repz
mov
icebp
mov
outs
ja
sub
cmp
add
js
int
sbb
enter
outs
iret
fadd
add
and
ret
xor
test
lock
cmp
add
jnp
or
leave
cmc
mov
addr16
aam
arpl
retf
test
ins
icebp
pop
jns
adc
div
outs
and
(bad)
sub
push
or
mov
retf
or
test
inc
std
xor
stos
enter
mov
jb
adc
pusha
jbe
ficomp
xor
rcr
and
aad
dec
inc
adc
outs
test
lods
(bad)
sub
or
push
aas
lahf
cmp
jmp
(bad)
pusha
lock
push
xor
lahf
das
rcl
test
mov
push
sub
adc
ret
jp
(bad)
imul
jbe
adc
dec
int3
or
into
sbb
sbb
inc
sub
push
or
lods
ins
mov
mov
jl
aas
movs
fsubr
pop
ror
rcl
fisttp
add
ss
lds
fisttp
call
lods
mov
sub
inc
popf
sbb
int3
jp
rol
pop
or
test
push
retf
or
sub
add
xchg
jmp
adc
mov
xchg
fldenv
sbb
popf
jg
jecxz
xchg
pop
add
xor
hlt
mov
repz
leave
push
aaa
xor
jg
mov
xchg
rol
ds
inc
mov
retf
mov
mov
les
pop
mov
jo
stos
inc
xchg
aam
loop
xchg
sbb
mov
jo
mov
mov
lock
dec
pushf
adc
(bad)
jp
fisttp
sub
mov
in
(bad)
cdq
push
icebp
jae
xchg
sti
mov
or
mov
leave
iret
fcomp
ret
out
sahf
mov
ss
das
inc
mov
cdq
lock
xchg
and
popa
gs
aad
movs
mov
mov
loopne
out
repz
mov
or
outs
mov
inc
add
ss
pop
popa
inc
jo
xor
xchg
mov
frstor
cld
popa
enter
retf
fistp
xchg
mov
xor
js
push
or
les
imul
sbb
and
add
dec
sahf
mov
(bad)
fcmovb
sbb
adc
into
arpl
dec
icebp
mov
xchg
adc
push
or
arpl
lock
(bad)
xor
jge
jmp
jl
mov
pusha
fsub
mov
sub
inc
iret
mov
loope
or
add
test
fcom
mov
and
mov
jg
push
fisubr
push
js
cmp
push
and
cmp
fadd
adc
pusha
imul
fs
xor
movs
pushf
or
(bad)
add
aas
mov
je
xchg
cwde
cmps
pushf
xchg
stc
in
lea
xor
mov
or
jb
js
test
mov
mov
dec
js
mov
mov
mov
icebp
push
cmps
cmp
cmp
mov
aad
push
cmp
pop
mov
sbb
shl
dec
push
pop
je
ins
mov
add
call
inc
sbb
mov
les
loope
in
jmp
es
ins
jge
fmul
xchg
xor
mov
add
std
retf
push
shl
pusha
sub
jae
mov
adc
or
cli
enter
pusha
jb
das
gs
jg
pushf
rcl
xor
(bad)
icebp
dec
dec
mov
mov
movs
jb
rol
cli
rcr
mov
push
lods
cmp
push
out
cld
mov
pop
das
sub
lahf
xlat
int3
int
call
ret
out
lea
(bad)
call
add
cli
shr
cmp
and
mov
repz
ror
dec
mov
arpl
test
mov
push
loop
sub
aam
mov
jnp
test
cld
fsubr
pop
test
jno
in
xchg
test
outs
pushf
mov
retf
shl
mov
push
sub
fisubr
cmp
arpl
cmc
and
pop
lods
and
dec
(bad)
nop
sbb
hlt
stos
mov
push
sub
outs
outs
and
scas
xchg
dec
fnstcw
or
fldenv
pop
imul
sti
xor
(bad)
fstp
inc
out
jp
and
jbe
jg
test
cmp
test
ret
cmp
xchg
enter
test
shr
and
jns
pop
addr16
(bad)
xchg
lea
push
in
jae
cmp
(bad)
rol
sbb
arpl
shl
adc
adc
xlat
add
addr16
(bad)
out
dec
xchg
cmp
xchg
fsub
mov
retf
fiadd
inc
adc
cs
and
int
ret
cli
add
std
xchg
in
shl
inc
(bad)
sahf
dec
imul
mov
out
lea
dec
sbb
pushf
dec
adc
std
test
rcl
xor
push
push
sti
fwait
xchg
sti
cmps
cmc
inc
jp
adc
inc
inc
push
or
ret
mov
test
arpl
aam
ss
cmp
stos
and
push
jg
addr16
lods
push
out
push
int
or
mov
jl
sbb
std
cwde
or
jae
mov
mov
mul
pop
pop
(bad)
mov
push
mov
cmp
popa
jmp
ret
mov
inc
xchg
or
mov
lods
inc
mov
mov
sub
mov
mov
mov
aam
dec
adc
in
or
add
jmp
mov
popf
lods
out
adc
jmp
gs
jo
loop
loopne
cmp
fnstsw
jnp
pop
adc
(bad)
push
(bad)
xchg
adc
inc
(bad)
jns
dec
xchg
pop
fidivr
fst
sahf
int3
mov
mov
mov
mov
imul
popf
and
or
add
push
mov
call
and
pop
ds
or
sbb
sub
xchg
inc
and
and
movs
jae
jne
sub
cmp
fdiv
jnp
mov
int3
shr
nop
xchg
dec
aas
xor
cdq
mov
sub
add
fcmovnu
ins
jb
mov
pop
jg
push
jns
aaa
push
cmpps
fcom
mov
ror
mov
loopne
(bad)
pop
cmp
push
push
sahf
dec
sub
cmps
movs
cmp
sub
in
cmps
ret
stc
loop
dec
retf
aaa
(bad)
fcmovu
xchg
jmp
push
jbe
jne
data16
rcl
sbb
ja
and
call
gs
inc
rol
or
hlt
lods
addr16
lds
mov
ret
out
(bad)
aam
pusha
push
jno
(bad)
outs
jle
imul
xchg
inc
out
push
retf
and
mov
in
gs
mov
sub
clc
push
enter
jbe
ret
or
(bad)
sbb
xor
int
and
ss
dec
loopne
daa
test
jne
cld
fsubr
xchg
popa
ss
adc
cmp
mov
test
xor
ror
inc
fsub
aaa
cmp
mov
mov
jmp
test
test
adc
xor
pop
test
mov
or
or
aam
cli
pop
mov
(bad)
(bad)
mov
dec
mov
ins
cmc
mov
fimul
iret
movs
jb
or
aam
push
mov
aas
leave
(bad)
ins
mov
lds
pop
xor
pusha
sbb
dec
jnp
inc
jno
test
push
iret
xlat
mov
fs
cmc
push
ret
(bad)
in
jmp
aas
out
scas
adc
test
or
ror
bound
les
outs
or
fnstenv
fucomip
jecxz
jne
or
imul
xchg
loopne
cdq
scas
(bad)
adc
or
jle
cdq
sbb
jb
dec
nop
ret
xor
fdiv
pop
stos
aam
das
shl
sbb
cdq
shl
add
rcl
cmps
mov
daa
push
jmp
add
out
iret
add
loop
cs
or
ret
xchg
cmp
pop
sub
pusha
sbb
and
cmc
sub
sti
cmps
icebp
jnp
lods
lea
out
ss
jb
mov
daa
sahf
popa
jbe
push
iret
adc
popf
mov
mov
cmp
push
in
pushf
push
in
xchg
inc
bound
push
sar
dec
mov
hlt
jnp
jecxz
cwde
inc
cs
(bad)
in
jnp
imul
repnz
inc
test
jl
icebp
fiadd
ins
push
push
retf
mov
xchg
push
popf
add
cmp
sub
and
push
sub
and
add
fst
jmp
pop
icebp
popf
pop
sbb
xchg
mov
lock
and
jg
sbb
fwait
pop
mov
shl
push
cmc
dec
int
retf
pop
lahf
adc
je
mov
sub
pop
dec
jnp
add
cli
ds
jbe
(bad)
xchg
sti
cmp
mov
retf
inc
mov
ins
jnp
(bad)
pop
scas
jae
fwait
loopne
jle
push
cmp
xor
ss
cwde
add
scas
cmp
ds
xor
mov
sti
scas
fldenv
dec
(bad)
loope
lods
sub
jmp
cs
mov
dec
test
inc
jo
xchg
dec
loopne
fdiv
or
retf
jl
fwait
mov
sar
sbb
jl
jmp
arpl
push
mov
push
cmp
les
pop
out
xlat
push
je
call
dec
je
push
inc
push
dec
xor
add
daa
sub
pop
movs
xor
xchg
cmp
xchg
fistp
sub
xlat
in
mov
adc
sub
in
push
or
shr
adc
mov
nop
push
lods
inc
retf
add
jb
loope
or
add
dec
xor
aaa
or
icebp
mov
(bad)
es
mov
mov
jmp
cmp
into
push
xchg
xlat
sub
mov
nop
fnstenv
cmp
mov
call
out
(bad)
xor
and
lahf
xchg
psrad
and
or
fnsave
mov
retf
hlt
mov
adc
call
mov
push
rol
cmps
mov
outs
pop
cwde
jbe
xlat
sbb
fneni(8087
xchg
pop
xchg
adc
push
dec
test
cdq
inc
jle
stos
push
adc
mov
and
arpl
mov
stc
(bad)
lea
pop
jmp
cmps
or
mov
or
push
stc
aas
sbb
jge
shl
es
jns
xor
mov
inc
pop
loope
les
adc
mov
fldenv
nop
mov
sbb
pop
fsubr
cld
stc
mov
push
push
push
jne
jmp
pop
aam
jmp
int
loop
sbb
mov
icebp
or
mov
std
xchg
gs
inc
aad
inc
cmp
dec
test
sbb
jg
mov
pop
in
mov
test
stos
mov
push
fsubrp
dec
outs
fidiv
(bad)
aas
push
sbb
iret
xchg
arpl
mov
pusha
mov
mov
jnp
dec
add
cmp
jnp
call
mov
jns
ss
fucomp
sub
sbb
inc
outs
ins
add
out
adc
xor
movs
fld
xchg
xchg
mov
sub
bound
or
lods
enter
pop
aaa
lods
push
jmp
fnstenv
cmp
mov
stc
and
icebp
dec
pop
lods
inc
aam
test
in
inc
xchg
test
int3
pop
outs
stc
icebp
lods
sub
repz
dec
mov
fsubr
sbb
scas
fiadd
lds
mov
jmp
cmps
cld
pop
push
push
hlt
xchg
push
shl
push
sub
sbb
xchg
cli
pop
fmul
test
cmp
jno
pop
test
mov
nop
mov
cmp
jnp
jp
jnp
jnp
out
mov
scas
sbb
push
adc
dec
ret
adc
cmp
jnp
mov
and
sub
shr
ds
xor
in
cdq
adc
cs
fs
dec
dec
icebp
jle
jmp
jecxz
or
push
xor
sbb
stos
cdq
sub
and
push
lds
repz
ror
cmp
addr16
sti
mov
mov
jo
pop
adc
or
mov
or
mov
fwait
sub
(bad)
mov
sbb
add
push
lahf
sub
js
lea
jns
fadd
pushf
xchg
sahf
xor
push
loope
inc
mov
adc
retf
push
pop
xor
idiv
add
dec
je
iret
fst
mov
jns
xchg
cld
addr16
loopne
cwde
sar
mov
push
stos
adc
mov
or
mov
mov
data16
add
adc
xchg
das
je
(bad)
stos
mov
dec
mov
xor
(bad)
(bad)
pop
jecxz
retf
sub
rcl
xor
test
dec
push
sbb
add
mov
out
pop
dec
xchg
lods
ficomp
xchg
fs
es
push
or
arpl
out
in
inc
cmps
xchg
adc
loope
or
mov
or
fistp
jbe
loopne
lea
stos
mov
sub
int
jmp
cmps
ja
mov
ficom
out
jge
test
stc
jmp
mov
sub
xor
ret
repz
jl
stos
cmp
aaa
push
dec
mov
mov
sub
mov
movs
add
fnstcw
inc
retf
ins
mov
inc
cmp
fadd
in
jle
rcr
pop
jle
aad
cmp
mov
inc
or
lock
or
inc
xchg
push
mov
inc
dec
dec
clc
je
rol
lock
fist
bound
(bad)
(bad)
sbb
pusha
adc
ficomp
cli
mov
scas
and
pop
adc
jecxz
push
push
out
sti
push
cli
dec
and
fdivrp
dec
mov
jecxz
std
sbb
nop
mov
adc
xchg
sub
je
sar
dec
iret
xchg
cdq
mov
adc
sub
imul
adc
pushf
pop
ins
add
(bad)
in
mov
ret
fwait
fs
pop
movs
ss
clc
mov
pushf
push
pop
jnp
arpl
aaa
dec
arpl
sti
imul
dec
mov
push
popa
sti
pop
push
push
(bad)
mov
pop
xchg
pusha
fisub
cmp
gs
lahf
pop
stos
in
dec
mov
cmc
cmp
push
jecxz
inc
and
fstp
leave
and
(bad)
out
or
sahf
mov
bound
fs
daa
and
sub
adc
push
push
sbb
lods
in
inc
f2xm1
or
int
pop
push
les
push
or
push
jbe
adc
push
mov
add
out
adc
in
loopne
pop
xchg
sbb
xchg
outs
pop
loope
movs
sbb
mov
and
mov
mov
inc
mov
push
xchg
ret
imul
test
mov
xchg
xchg
xor
add
push
gs
and
mov
ss
dec
inc
dec
rol
aaa
iret
cmp
add
cmp
scas
loope
fld
push
xor
iret
xor
fld
jns
das
cmp
pop
pop
mov
add
fbld
add
out
inc
call
xor
(bad)
daa
das
mov
popf
fbstp
mov
test
and
cmp
pop
push
or
cs
push
sub
push
pop
and
xchg
mov
addr16
lods
int3
sahf
pushf
popa
fisttp
sbb
sar
nop
in
mov
test
fstp
sub
enter
sbb
pusha
add
lock
imul
xor
push
daa
push
gs
iret
rol
aam
movs
retf
sbb
and
jmp
xor
pop
sbb
scas
and
add
inc
out
loope
lds
xor
jb
div
xchg
mov
push
mov
cmp
or
add
inc
dec
outs
mov
rol
adc
jge
out
(bad)
retf
sub
cmp
dec
cmc
jns
test
sbb
push
sbb
xor
xlat
sbb
sub
or
and
ds
push
aam
pop
push
xor
push
jge
sbb
sbb
repz
mov
or
dec
arpl
daa
jecxz
je
test
dec
test
leave
in
sub
retf
mov
imul
push
fsubr
shr
xchg
cmp
xchg
imul
data16
xchg
rcr
movs
inc
repnz
stos
ds
rcl
push
bound
cmp
in
daa
sub
imul
push
fsubrp
(bad)
xor
fisub
jecxz
lahf
mov
jo
jg
xor
xor
cmp
mov
xor
mov
mov
xchg
jmp
cmc
xor
aas
aad
push
stc
push
fwait
or
movs
push
xor
pop
sbb
adc
loope
ins
dec
into
jp
sub
hlt
lods
retf
clc
or
rcl
call
nop
xor
fnsave
or
gs
js
retf
retf
ins
movs
cmp
cmc
call
inc
lea
xlat
iret
and
xchg
cmc
addr16
cli
ficomp
shl
sbb
cmps
xchg
adc
sub
push
ins
lock
xchg
loope
cli
cli
jmp
inc
pushw
cld
pop
mov
dec
das
mov
mov
jg
ins
cmp
aaa
jno
push
ja
adc
or
dec
xchg
pop
or
cli
nop
or
les
nop
enter
jno
mov
mov
sbb
int
add
dec
mov
mov
cmp
(bad)
neg
sub
ret
jmp
int3
bound
sub
jnp
icebp
push
retf
cmp
sub
mov
mov
mul
or
nop
mov
cmp
aad
push
scas
xor
dec
or
jns
test
mov
jno
adc
outs
mov
fcom
xchg
aas
scas
or
sahf
gs
imul
sbb
popa
push
sbb
mov
inc
jno
sub
adc
push
jns
outs
cmp
xor
pop
ss
packsswb
mov
push
cmp
ss
jle
dec
or
std
jmp
and
int
push
xchg
mov
inc
outs
arpl
push
mov
mov
jp
inc
sub
and
and
sub
in
xchg
das
pop
push
or
es
in
retf
xchg
cmp
mov
xor
(bad)
adc
pop
or
mov
inc
retf
stos
mov
mov
ret
das
lahf
shr
fimul
push
ins
sub
or
or
push
pop
xlat
or
mov
sub
iret
dec
lods
or
(bad)
fcomp
jnp
adc
ror
pop
cmps
mov
xchg
out
in
or
lea
(bad)
hlt
jp
sub
or
aam
pop
in
add
inc
fldenv
stos
test
fsub
cmps
adc
sub
int
inc
(bad)
(bad)
sub
call
(bad)
sbb
stc
test
(bad)
fisttp
jo
or
jne
repnz
scas
movs
daa
ret
lods
xchg
push
xchg
push
jns
mov
cdq
jg
arpl
xchg
or
into
and
inc
cld
push
inc
repz
xchg
push
adc
adc
jmp
xchg
fs
in
nop
add
cwde
cmps
retf
(bad)
push
push
pop
pop
xor
adc
shl
sbb
mov
sbb
mov
mov
test
mov
jmp
mov
pop
call
push
pop
pusha
les
and
jmp
lods
inc
imul
sbb
in
xchg
jle
adc
sub
jne
push
data16
xor
bound
pop
call
xor
and
rcl
in
push
adc
test
sub
push
cwde
test
dec
jnp
and
and
and
adc
dec
(bad)
and
jge
sti
sar
std
aas
inc
fld
dec
or
das
xchg
je
and
mov
sub
inc
push
push
xchg
addr16
pop
push
pusha
push
stos
mov
jp
xchg
(bad)
sub
and
cmp
(bad)
aaa
and
cli
rol
leave
std
sbb
(bad)
call
outs
ins
scas
jns
outs
add
rol
test
stos
mov
xchg
ins
xchg
mov
dec
call
xchg
ins
mov
mov
pop
mov
mov
clc
call
ja
clc
and
cmp
inc
aam
add
fwait
mov
or
xchg
xchg
mov
(bad)
aad
or
sub
fmul
cli
movs
cmp
out
jne
cmp
test
xchg
into
cmp
jge
mov
add
test
jae
push
mov
stos
sti
cmp
jae
lods
xchg
dec
xchg
imul
outs
fldl2t
retf
les
and
push
gs
adc
lahf
test
lods
loop
xor
idiv
xchg
or
inc
xchg
ror
loopne
into
scas
pop
xchg
ja
in
push
and
outs
lahf
sti
jne
jge
mov
retf
loopne
movs
lahf
xlat
sar
xor
retf
sbb
pop
fidivr
sar
outs
jne
(bad)
dec
xor
cmc
push
jne
sub
xor
xor
dec
ficomp
push
aad
inc
pop
icebp
call
js
dec
jb
inc
(bad)
xchg
rcl
test
mov
mov
aaa
and
test
retf
push
add
dec
xchg
fbld
push
in
scas
stos
sbb
bound
pop
jo
push
cmps
into
cmps
mov
fnstenv
cli
push
mov
jg
into
lahf
loop
or
arpl
aas
ret
gs
pop
in
xor
push
nop
cmc
loopne
inc
mov
dec
dec
push
rcl
sub
sub
rcr
std
cmc
jae
pushf
mov
mov
pop
push
aam
mov
imul
sub
xchg
xor
sbb
dec
lahf
in
inc
clc
mov
cmps
jp
int
adc
or
jle
mov
das
pushf
or
loop
sbb
push
xor
stc
aas
out
cld
sbb
xchg
mov
pop
mov
mov
push
test
mov
jg
int
and
mov
pop
loopne
lahf
(bad)
cmp
cs
dec
stos
push
test
and
push
std
(bad)
fucomp
add
xchg
adc
or
fs
stc
dec
jnp
scas
jnp
or
enter
jle
das
ja
inc
mov
inc
push
or
je
lds
push
mov
mov
lock
retf
jg
mov
push
cli
cmp
add
sbb
test
sbb
inc
add
jg
xor
in
pop
mov
push
(bad)
mov
sbb
rcl
sbb
pop
sub
shl
imul
in
push
retf
xchg
aad
scas
push
adc
jecxz
int
imul
test
in
pop
mov
(bad)
call
xchg
push
fsubr
xchg
push
push
sub
daa
add
push
inc
push
(bad)
sti
jmp
sub
xchg
xor
xchg
adc
add
mov
jecxz
stos
dec
(bad)
dec
popa
bound
test
in
fidivr
inc
jo
push
imul
inc
pusha
out
(bad)
adc
cmc
push
dec
push
jp
mov
call
cmp
ja
fstp
pop
mov
xchg
pop
ffreep
sub
sub
(bad)
hlt
push
jo
fcomp
jb
mov
mov
xor
sbb
in
or
sub
repnz
iret
and
sub
inc
call
push
cmps
add
push
ror
inc
push
(bad)
pop
movs
imul
or
out
ret
cwde
adc
xchg
adc
movups
outs
xor
sub
jmp
adc
ret
int3
xor
popf
outs
scas
movs
(bad)
dec
in
retf
and
mul
dec
imul
test
cmp
mov
repnz
clc
aad
cmp
sbb
cdq
je
shr
les
sbb
inc
sub
call
shr
fcmovbe
inc
pop
ret
inc
dec
mov
stos
adc
sti
xchg
pop
out
push
sahf
iret
stos
clc
fdivr
repz
pop
fucomip
outs
add
push
push
xor
(bad)
jnp
adc
aam
jecxz
cs
(bad)
jmp
and
sbb
mov
sub
adc
stc
jmp
aam
lds
jmp
loopne
xor
sbb
mov
cld
cmp
push
push
adc
dec
push
(bad)
cmp
dec
cmp
pop
gs
and
sbb
xchg
rol
mov
dec
out
push
(bad)
push
or
scas
and
std
adc
xchg
fdiv
cwde
push
out
add
push
push
pop
add
or
adc
sbb
push
cli
es
rcr
ds
xchg
sub
adc
into
xrelease
pop
shr
xchg
fimul
dec
inc
iret
gs
cmc
pop
test
and
lds
out
and
and
pop
out
and
or
xchg
(bad)
and
adc
sub
dec
or
inc
mov
sub
add
dec
xchg
xchg
cs
mov
adc
xchg
dec
sbb
iret
mov
shl
or
jmp
mov
add
stos
mov
shl
bnd
adc
fnstcw
mov
jecxz
xchg
sahf
call
(bad)
mov
in
(bad)
jl
mov
mov
lea
add
in
and
sbb
popa
ds
jo
stos
shl
fs
mov
pushf
xchg
mov
mov
dec
dec
push
mov
push
shl
in
dec
test
and
jecxz
push
mov
aas
outs
add
xor
mov
push
fnsave
xchg
fcomip
repz
outs
mov
mov
jb
cmp
out
jl
std
xor
xor
fisttp
pushf
or
xchg
inc
aaa
xchg
mov
cli
add
mov
shr
ja
jno
dec
ret
mov
inc
mov
imul
fild
adc
out
ss
push
inc
sub
push
inc
ins
cmp
xor
cmp
or
pop
scas
adc
pop
int3
rol
sub
cmp
push
aas
fmul
cmp
and
cwde
push
cmps
cmp
scas
ins
inc
lock
pop
cmps
cld
addr16
xor
cdq
stos
adc
hlt
arpl
cs
cmp
adc
rol
lds
push
movs
push
xchg
adc
addr16
dec
rcr
or
in
add
aam
fld
add
les
add
jnp
stos
pusha
mov
fwait
(bad)
div
hlt
inc
and
push
fld
xor
inc
jbe
ret
jbe
cmps
call
mov
imul
pop
mov
jbe
inc
outs
sub
gs
push
movs
mov
(bad)
loopne
sbb
call
jge
rcl
pop
loope
pop
mov
xor
adc
jmp
jae
push
lods
adc
nop
call
add
inc
outs
or
jbe
rol
cmc
mov
add
idiv
or
jb
push
and
pop
cdq
xchg
aam
test
ins
aas
xchg
xlat
inc
mov
cmps
stos
imul
aaa
pop
push
mov
repz
pop
add
ins
ds
cmc
sti
ja
pushf
jmp
ja
pop
sbb
mov
push
sub
add
ss
jo
push
jecxz
in
test
xlat
inc
and
inc
(bad)
xor
mov
push
data16
shl
aad
js
dec
adc
(bad)
xor
lds
jae
adc
jmp
xchg
dec
test
cmps
mov
jns
arpl
and
jne
cwde
(bad)
loope
lsl
cmc
mov
ret
push
push
loope
xchg
jg
iret
sub
mov
mov
fisubr
je
cmp
sbb
in
mov
sub
das
fisubr
mov
and
ins
fist
shl
mov
mov
jl
inc
jle
mov
pushf
imul
bound
test
loop
mov
int
das
call
mov
shr
mov
lods
xor
xchg
out
mov
jno
mov
push
es
xlat
jmp
in
pushf
test
xchg
test
add
les
dec
push
adc
xchg
sbb
pop
sti
mov
add
sbb
mov
mov
lock
setb
adc
jno
pop
sbb
aad
aaa
pop
xchg
pop
into
lock
xchg
icebp
ss
push
xchg
cmp
cmp
xchg
out
jl
sti
cmp
sub
imul
bound
(bad)
xor
xor
cdq
dec
mov
popf
jbe
popf
mov
(bad)
and
hlt
xor
call
inc
sub
push
je
jbe
mov
cs
shl
dec
dec
and
enter
mov
js
test
add
mov
idiv
mov
ds
in
dec
jno
ins
sahf
rcr
jo
jp
mov
sbb
xor
and
jns
ds
movs
cmp
jmp
outs
test
add
cli
fidivr
mov
cld
ror
bound
cmp
mov
xor
jp
cli
add
ror
fimul
or
std
stc
test
cmp
addr16
cdq
adc
jns
dec
mov
es
rol
iret
pop
fcom
push
into
xchg
daa
shl
sahf
mov
popa
imul
lods
dec
int3
mov
pushf
or
inc
push
fisub
adc
sti
aad
jp
cmp
xchg
imul
imul
das
arpl
add
dec
shr
mov
int
inc
scas
add
add
xchg
mov
jmp
or
sbb
arpl
dec
inc
mov
jmp
daa
mov
stc
mov
push
popa
cmp
and
movs
sbb
jl
mov
push
sub
cs
pop
loope
std
pop
xchg
(bad)
xor
cmp
jg
test
repnz
lods
in
mov
mov
dec
push
cmp
(bad)
jmp
call
cwde
jmp
test
jo
inc
jmp
aaa
scas
(bad)
mov
fwait
sub
mov
adc
loope
popa
jp
mov
fs
cmp
xor
sbb
je
sub
inc
adc
enter
add
sbb
pop
jge
aas
cmps
push
cmc
push
adc
out
sti
add
call
pop
ret
mov
pop
in
push
push
bound
lds
xor
ins
mov
mov
test
lock
out
mov
call
jno
repz
stc
mov
pop
mov
adc
push
hlt
inc
push
cld
sub
pop
or
pop
inc
es
xchg
retf
or
adc
sbb
shl
fs
and
rol
mov
push
and
cmp
out
call
pop
mov
push
pop
ins
sahf
push
in
ds
or
lods
fdivrp
or
into
cli
out
and
pop
sub
mov
pop
mov
add
and
fs
fistp
push
mov
shl
add
mov
call
pop
pusha
mov
mov
call
pop
cli
inc
xor
int
xchg
pmulhuw
xchg
and
jns
rcr
jb
sbb
jl
jns
ins
loope
mov
les
(bad)
aad
sbb
xor
xor
ret
das
lods
lahf
add
adc
inc
rcl
xor
fwait
popa
xor
add
add
or
movs
mov
push
jbe
out
leave
sbb
scas
jb
dec
icebp
outs
mov
or
arpl
enter
push
jae
retf
outs
out
push
pop
std
xchg
inc
cli
push
add
call
call
dec
push
push
cmp
std
inc
push
fcmovnb
push
dec
cli
loope
cmp
popw
or
jnp
nop
cmp
dec
xchg
rcr
movs
loope
fs
shl
mov
jbe
int
lods
das
jns
cmps
or
sahf
sub
mov
out
adc
cmp
and
push
icebp
push
and
mov
pusha
lea
cmp
push
jmp
cmps
or
cmp
pop
daa
adc
adc
jl
jo
mov
and
(bad)
out
dec
fstp
stos
xchg
jne
es
test
mov
add
mov
outs
inc
dec
out
js
sbb
int3
or
sbb
mov
pop
or
jmp
xor
ret
mov
xchg
out
jae
int
jmp
sub
imul
add
and
or
xor
push
mov
mov
cmp
(bad)
dec
sbb
xor
jns
sbb
xor
out
inc
cmp
and
inc
popf
push
jp
jle
and
fild
ins
pop
pop
repz
dec
lock
push
ss
mov
sar
aad
or
adc
mov
iret
in
pop
rcr
mov
mov
in
mov
movs
or
or
movs
pop
repz
in
pop
leave
movs
ins
das
(bad)
push
mov
and
sbb
sub
shr
xor
cdq
fs
cmp
ins
(bad)
adc
adc
popf
inc
jmp
wbinvd
mov
repnz
push
stos
pop
xor
out
pop
call
xor
aas
outs
rcl
mov
push
ret
adc
(bad)
lods
sbb
test
sahf
out
push
ret
add
loopne
into
jg
cmp
jb
mov
xor
mov
aad
out
mov
push
push
iret
or
fwait
sub
test
scas
adc
hlt
pop
scas
nop
fs
rol
ins
lods
jp
and
mov
mov
or
pop
xor
arpl
jo
(bad)
sub
(bad)
into
mov
pusha
iret
push
in
cmps
mov
jb
xchg
movs
std
push
loope
push
(bad)
imul
pop
mov
sub
(bad)
cmp
iret
out
dec
inc
pusha
int
movs
(bad)
pop
add
gs
lea
mov
pop
push
sub
push
mov
fimul
pop
dec
and
test
movs
punpckhwd
mov
jl
cmp
stos
(bad)
cmp
in
int
jmp
in
retf
movs
lock
xchg
leave
inc
imul
xchg
push
mov
jbe
inc
ins
sub
repz
pop
push
aad
test
dec
in
popa
xchg
pop
adc
push
loop
clc
jecxz
das
add
jb
cld
loop
or
push
in
jl
sub
les
inc
jne
jo
mov
pusha
mov
and
cmp
xchg
inc
hlt
out
jo
push
call
mov
mov
inc
out
imul
in
cli
inc
mov
(bad)
out
jb
jle
jmp
mov
push
mov
cmc
jecxz
lock
xchg
jns
sbb
sub
mov
dec
hlt
xchg
and
sub
push
sbb
jl
dec
and
arpl
sbb
shr
fdiv
pusha
push
mov
xor
push
repnz
push
test
xchg
mov
add
mov
xlat
pop
or
add
mov
call
push
enter
mov
dec
cld
or
cwde
dec
push
push
(bad)
cmc
nop
ret
cmps
pop
sub
cmp
or
jecxz
xor
imul
(bad)
or
sahf
popa
(bad)
jo
mov
icebp
ins
xchg
fidiv
push
cdq
mov
sbb
jmp
mov
sbb
sbb
mov
test
iret
out
iret
(bad)
mov
xchg
(bad)
das
cdq
ret
test
push
lahf
call
cmp
stc
mov
xor
pinsrw
imul
std
mov
adc
inc
std
mov
sbb
mov
mov
push
dec
cmp
aad
pop
(bad)
mov
leave
add
fld
cld
call
scas
ret
ror
imul
clc
mov
je
leave
outs
mov
int
dec
push
xchg
lods
ret
inc
imul
add
inc
mov
add
cmp
fucomp
test
cmp
inc
mov
push
push
fild
(bad)
and
jbe
inc
mov
inc
cdq
xor
bound
mov
sbb
fldcw
push
cmp
jmp
pop
aad
xchg
xchg
cmp
rcr
pop
ror
add
xchg
dec
gs
inc
dec
jae
(bad)
scas
scas
add
mov
mov
mov
in
int3
les
cmp
dec
push
dec
and
inc
jo
inc
(bad)
sbb
cmc
pushf
jge
(bad)
js
cld
push
cmp
adc
jecxz
ficomp
adc
mov
cmps
add
idiv
xor
sub
add
(bad)
pop
dec
repnz
gs
ds
sti
es
cmp
mov
int3
sar
mov
addr16
push
(bad)
rcr
fiadd
mov
stos
xabort
sar
test
sbb
mov
inc
adc
push
test
hlt
call
mov
out
pop
pop
jb
je
jl
mov
sub
cmp
fmul
(bad)
and
mov
fwait
push
push
leave
and
dec
stc
mov
inc
int
lahf
mov
jl
pop
mov
retf
outs
sbb
repz
fst
and
stos
push
aam
dec
xchg
sub
fs
mov
push
fidivr
daa
add
lds
pusha
add
push
ror
es
cmp
bound
and
inc
push
stc
fldcw
sti
fadd
cdq
sbb
jbe
jne
test
sbb
out
cmps
cmp
(bad)
mov
dec
idiv
sub
das
cmp
(bad)
out
jle
jle
mov
dec
jo
dec
xchg
pop
pop
loope
shr
or
xor
and
lods
xchg
scas
sbb
jl
cmps
jecxz
movs
stos
scas
mov
arpl
and
dec
pop
push
dec
cli
ins
adc
neg
popa
xchg
inc
xchg
sbb
or
mov
(bad)
mov
push
fsub
inc
cdq
shl
fidiv
push
test
sub
aas
loope
jp
aaa
pop
call
cmp
test
mov
(bad)
cmc
fsubr
pop
jnp
add
push
or
mov
adc
push
les
and
pop
fsubrp
popw
test
cld
hlt
xchg
xchg
mov
adc
xchg
stos
mov
outs
pop
or
fldenv
xlat
push
repz
or
bound
mov
xchg
scas
popf
mov
sub
mov
mov
and
(bad)
mov
test
imul
enter
or
out
shl
sub
std
mov
jns
pop
mov
push
mov
cld
loop
xor
cmps
xchg
mov
movs
pop
mov
or
cs
inc
cmps
shl
and
test
retf
mov
(bad)
push
pusha
call
jl
gs
fwait
movs
(bad)
sub
jmp
and
dec
cmp
add
cmps
mov
pop
mov
mov
nop
retf
stc
retf
inc
cmps
mov
stos
shl
ficom
and
ins
inc
mov
pusha
mov
xchg
adc
pshufw
xor
jnp
push
imul
add
cli
nop
fisttp
xor
jno
push
or
lea
test
xor
mov
or
inc
imul
cdq
xchg
rcl
sbb
sub
repz
leave
mov
xchg
movs
xor
inc
dec
scas
mov
neg
hlt
xor
retf
xor
retf
mov
cdq
jb
inc
fs
xchg
xchg
inc
std
enter
ins
sub
ins
dec
cmp
pop
add
adc
dec
cmp
aad
inc
sar
and
pop
fidivr
bndldx
scas
dec
fcmovu
add
cmp
pop
xor
out
jg
adc
cmp
cdq
lock
mov
cdq
sub
or
stos
mov
shl
xor
sbb
(bad)
xlat
rcr
enter
nop
xor
scas
jbe
cmp
xchg
push
fbld
sahf
pop
test
leave
adc
js
mov
pushf
pop
push
push
imul
fild
mov
xchg
mov
and
mov
jmp
scas
push
adc
shl
push
leave
dec
inc
mov
mov
mov
aad
enter
rol
loop
xchg
mov
ret
cmps
xchg
ja
cli
pop
out
inc
jecxz
dec
cdq
ror
fist
xor
mov
clc
(bad)
retf
xadd
adc
xchg
in
cmc
adc
dec
mov
sub
pop
adc
push
ja
scas
clc
fidiv
fxch
mov
cmp
dec
pop
ss
mov
mov
and
js
sub
lahf
cmc
imul
mov
psrlw
popa
jmp
mov
push
mov
je
jmp
cmps
out
xor
(bad)
sti
dec
ror
mov
outs
xchg
dec
(bad)
clc
aam
jno
mov
push
inc
jecxz
rcr
adc
add
std
in
iret
cmp
jge
and
scas
ror
fcompp
cdq
loope
in
mov
scas
xor
rcr
or
pop
inc
ds
in
int3
outs
neg
mov
popf
push
cs
push
jns
jb
jbe
xchg
add
imul
add
in
push
dec
aad
sub
lods
jle
mov
or
mov
dec
leave
dec
icebp
pop
pop
or
shl
cmc
mov
mov
xor
das
mov
das
mov
push
lods
and
imul
aad
stos
jmp
xchg
cmp
mov
fs
adc
sub
push
fist
add
test
pop
cmp
test
push
cmc
(bad)
xor
mov
adc
mov
adc
add
jge
lods
mov
arpl
xchg
mov
call
mov
adc
lahf
cmps
ret
pusha
xor
xor
or
mov
(bad)
inc
retf
jp
push
mov
inc
push
mov
ror
mov
loopne
sub
out
fcomp
mov
push
or
outs
add
es
and
hlt
(bad)
mov
int3
mov
xchg
mov
mov
jmp
add
test
in
cs
adc
inc
aas
add
jns
jge
shl
into
mov
sub
scas
out
out
xchg
sbb
xor
jbe
xchg
pop
mov
(bad)
loope
je
xor
push
or
and
sub
cmp
cmp
dec
clc
in
sub
fwait
cs
sbb
fcmovnu
retf
leave
sbb
cmps
adc
neg
inc
cmp
jg
in
dec
mov
aaa
and
pusha
lods
sbb
add
loopne
(bad)
in
cmc
xchg
ret
xchg
cli
ffreep
inc
dec
aam
bsr
stos
and
(bad)
enter
push
dec
sbb
cmp
xor
jle
int3
fild
bound
xor
lds
retf
int
shl
(bad)
dec
jmp
mov
es
cs
sub
retf
lods
outs
shr
jnp
arpl
and
mov
ss
fcmovnb
inc
push
jae
or
loope
dec
repz
fnsave
mov
div
inc
iret
aam
mov
pop
cmps
inc
pop
fwait
ins
push
out
imul
loopne
mov
cmps
lahf
retf
(bad)
jae
call
mov
xor
mov
std
mov
pop
ror
arpl
loop
jmp
sub
inc
mov
rol
fdivr
retf
jno
add
lea
in
xlat
xor
inc
pop
and
xor
add
mov
or
cmp
in
movs
xor
or
shl
in
mov
sub
cmp
jecxz
iret
mov
and
fstp
mov
sbb
mov
add
dec
cmp
pop
cwde
push
push
jns
sbb
add
ret
mov
jo
xchg
sub
sti
push
sbb
and
call
ins
jne
push
jge
dec
and
mov
xchg
sub
test
test
jb
jmp
int
call
mov
scas
rol
jne
jne
push
or
aam
or
call
ja
mov
inc
mov
(bad)
fisubr
adc
loop
jno
in
ret
adc
out
mov
push
data16
cmc
sub
cmp
sub
ror
addr16
or
or
add
jo
push
test
icebp
cmp
in
push
sbb
and
sbb
mov
movs
repz
or
mov
aas
outs
cmp
push
push
pop
in
pop
jmp
out
scas
pop
jmp
or
xor
jo
mov
mul
hlt
sar
inc
push
ret
push
ja
scas
pop
stos
xchg
pop
and
push
mul
jmp
adc
xor
adc
jmp
push
ins
(bad)
adc
(bad)
sbb
push
jae
fwait
sub
add
fcomp
inc
fs
stc
es
adc
test
adc
mov
(bad)
rcr
inc
mov
outs
sub
xlat
cmp
fisttp
mov
and
call
or
or
sahf
pop
cli
jle
mov
sti
inc
movntq
push
dec
adc
cmp
dec
or
jge
cmps
jo
jmp
aas
mov
int3
pop
in
rol
xchg
repnz
or
jbe
add
pop
cmp
sbb
jmp
pop
data16
push
add
xor
loopne
leave
pop
mov
xor
dec
out
sbb
jmp
jnp
sti
aas
cmc
mov
push
in
call
out
sbb
int3
jae
pop
lahf
stos
inc
mov
fwait
xchg
adc
mov
pop
pop
repz
mov
repz
mov
iret
cwde
pusha
jae
daa
dec
(bad)
enter
mov
test
ds
cmp
push
cdq
pop
(bad)
scas
pop
imul
in
cs
sti
repz
mov
mov
jns
sub
xchg
(bad)
fbstp
or
mov
add
push
dec
(bad)
retf
sub
jecxz
and
shr
push
addr16
(bad)
cmp
push
stos
pop
mov
fiadd
fst
daa
sar
stos
adc
pop
add
outs
jecxz
mov
in
fwait
dec
sbb
sar
sbb
fwait
mov
cmp
jb
inc
xor
sbb
jne
pop
fwait
out
call
or
repz
mov
xchg
out
adc
jns
(bad)
jle
outs
cmp
pop
push
loope
or
cdq
retf
fild
and
add
or
loope
jmp
or
enter
loopne
(bad)
stos
leave
ret
xchg
mov
js
inc
jmp
jle
jns
jmp
sub
out
xchg
jo
cmc
(bad)
mov
out
scas
mov
xor
mov
xchg
push
mov
inc
mov
cmp
cmp
jp
ret
stos
ficomp
pop
dec
ss
bound
ror
dec
jb
push
sub
sbb
inc
int3
jmp
lds
or
xchg
ss
adc
inc
sbb
(bad)
ds
fldenv
icebp
lock
leave
scas
jo
mov
push
jnp
cwde
enter
pushf
ror
dec
das
bound
call
or
jns
cmp
and
sbb
in
mov
in
and
adc
movs
fcomp
cmc
mov
and
cmp
push
rol
movs
jg
push
lods
stos
sub
and
neg
xchg
sbb
rcr
mov
cmc
add
rol
or
sahf
mov
mov
aad
dec
aad
sahf
das
mov
xchg
and
jo
cmc
xchg
add
ret
push
jne
test
add
mov
cmp
push
xchg
mov
or
test
out
arpl
cmps
mov
shr
jle
(bad)
in
cmps
ficomp
fs
pop
xchg
adc
add
push
jbe
daa
jmp
mov
popa
nop
dec
sahf
or
retf
in
pop
popw
jmp
mov
xlat
mov
(bad)
sahf
mov
sub
sbb
xor
outs
(bad)
test
mov
adc
fstp
not
push
leavew
repnz
pop
cs
add
xchg
jg
xchg
leave
xor
ds
jno
iret
push
hlt
retf
mov
push
cmps
add
jle
or
movs
adc
pop
sbb
mov
into
adc
adc
xchg
std
xchg
push
jnp
test
js
(bad)
hlt
call
(bad)
leave
fdivr
cld
stos
sub
imul
adc
cld
or
sbb
fs
int3
int3
xchg
pushf
inc
jecxz
xchg
mov
nop
push
cmp
and
xchg
loope
loop
mov
sbb
int
dec
stc
int3
push
ror
and
in
xchg
pop
int3
dec
and
int3
(bad)
pop
outs
add
ds
or
ja
icebp
imul
sub
xlat
mov
sub
mov
cmc
push
adc
cdq
repnz
bound
call
or
mov
int
add
ret
into
mov
jo
sbb
sbb
stos
jne
mov
icebp
adc
mov
jmp
rcl
sar
in
mov
inc
test
jmp
or
cmp
pop
call
mov
dec
in
adc
mov
cmps
es
(bad)
mov
out
fldenv
pop
mov
cli
retf
xchg
jns
ret
sub
dec
ret
mov
and
add
fdivp
dec
push
jmp
es
jmp
(bad)
push
sar
pop
mov
xchg
(bad)
xor
jmp
imul
inc
or
xchg
ds
fidiv
fld
pop
pop
cmps
jmp
dec
cmp
pop
mov
mov
mov
retf
sbb
push
fucomi
les
dec
mov
pop
cs
mov
or
sbb
or
push
xchg
xchg
popa
jnp
outs
adc
mov
pop
xor
sar
cwde
mov
add
(bad)
mov
mov
cmc
add
adc
inc
cs
sub
adc
sbb
shl
(bad)
xchg
shl
dec
frstor
or
mov
xor
push
pmaxsw
gs
data16
xchg
sti
xchg
adc
sahf
pushf
jo
js
repnz
gs
retf
jne
popa
adc
movs
sub
and
sub
test
test
out
mov
iret
cld
imul
xor
push
imul
and
fsub
push
scas
xor
mov
mov
nop
imul
cmp
and
mov
push
mov
push
xchg
cmp
xor
or
popf
push
stc
in
push
inc
adc
sub
mov
(bad)
sub
dec
bound
inc
(bad)
add
mov
jne
dec
push
cs
pop
xor
in
inc
neg
sbb
xchg
rol
and
and
aam
js
adc
pop
jecxz
mov
push
pop
imul
sti
mov
adc
(bad)
sbb
jnp
xlat
xchg
push
mov
mov
lods
test
cmp
jmp
xor
scas
out
cmp
pushf
sub
mov
shl
and
data16
and
sub
js
stc
push
aas
and
and
out
lds
mov
mov
out
mov
dec
jno
(bad)
adc
add
int
pushf
inc
fisttp
retf
jl
cmp
mov
popf
and
jne
lods
push
hlt
shl
cdq
and
repz
jo
out
mov
pop
sbb
xchg
sub
mov
inc
test
pop
push
jge
sbb
pop
repz
rcl
call
movs
fidivr
test
fdiv
fnstcw
pop
jge
nop
add
pop
(bad)
mov
lods
and
cmc
add
and
push
jo
push
mov
adc
sbb
jmp
mov
ds
mov
je
lock
or
mov
adc
fxch
cmps
rol
ds
xor
and
into
aaa
lds
dec
fst
xchg
mov
fadd
ss
sahf
loopne
push
dec
ss
and
bound
(bad)
test
adc
cld
fist
out
pop
dec
daa
jmp
and
mov
mov
clc
jg
sbb
cmc
and
dec
(bad)
aas
mov
jge
std
pop
popa
pop
js
sub
xor
ins
xor
setns
in
addr16
sar
cmp
sub
fisub
lock
mov
adc
(bad)
std
cmp
cli
in
out
cmp
shl
movs
xlat
test
mov
mov
into
repz
push
ret
out
loope
popa
rol
cld
jmp
fsubr
add
fwait
jns
or
jp
mov
push
cmp
dec
and
(bad)
repnz
mov
mov
lods
shl
(bad)
adc
stc
hlt
popf
adc
(bad)
push
sub
adc
xor
shr
mov
gs
iret
outs
xor
cmp
sub
dec
and
andnps
fdiv
cmps
push
cmp
lahf
leave
pop
inc
cmps
outs
dec
adc
cdq
stc
fwait
dec
adc
push
ss
xchg
sub
imul
std
pushf
adc
pop
daa
xchg
pop
addr16
pop
push
mov
mov
aas
mov
pop
lds
pop
mov
fwait
scas
sahf
adc
dec
pusha
iret
mov
stos
cmp
sar
jbe
push
shr
inc
mov
push
pop
cmp
imul
shl
push
xchg
jl
mov
and
inc
jae
jg
add
outs
adc
and
pop
sub
sub
pushf
inc
int
iret
scas
lods
pop
xchg
push
lods
push
sub
imul
lds
jp
xchg
pop
out
jmp
ret
loop
ror
in
movs
dec
aaa
dec
jmp
xchg
cmp
xchg
stos
mov
push
bound
int3
ins
sub
dec
hlt
jno
std
pop
xchg
sub
stos
dec
shl
sbb
je
pop
mov
outs
and
jmp
push
out
sbb
out
ret
pop
mov
ss
and
mov
inc
scas
test
dec
mov
out
leave
pop
je
dec
aam
xchg
xor
pusha
cmp
movs
cdq
out
data16
pop
lods
sti
(bad)
fdiv
movs
mov
cmp
pop
imul
cmp
je
adc
bnd
mov
js
sbb
(bad)
rcr
mov
fsubr
or
mov
pop
mov
inc
pusha
cli
(bad)
dec
xor
outs
aaa
popf
mov
sbb
out
cmp
aad
pop
jns
mov
dec
loopne
loope
hlt
push
add
gs
in
adc
xor
or
ins
dec
or
pop
sbb
push
mov
and
shr
mov
stos
loop
ds
call
arpl
inc
imul
dec
retf
push
cmc
loop
mov
aam
enter
inc
fwait
jb
mov
pop
mov
jmp
mov
ror
xchg
rcl
aam
mov
outs
not
into
jo
mul
repnz
inc
test
push
dec
mov
cmp
mov
push
test
inc
fstp
or
push
scas
cmps
mov
push
adc
sbb
(bad)
cmp
jp
jns
js
out
retf
pop
sbb
cdq
sub
scas
inc
jl
loop
add
mov
xchg
cmps
(bad)
retf
sbb
dec
pop
sbb
jle
(bad)
mov
(bad)
pop
or
test
jecxz
add
jns
xchg
pusha
jmp
pop
popf
jge
ret
hlt
push
in
add
shl
fisttp
(bad)
aad
int3
cmp
and
push
cmp
push
ins
lds
into
dec
inc
mov
push
push
inc
das
xor
xor
jb
mov
sbb
mov
lds
jle
push
outs
sbb
mov
xor
xor
sbb
jecxz
rcl
into
(bad)
in
push
dec
mov
push
or
mov
popf
xor
out
xor
je
pop
fld
push
ror
movs
dec
push
adc
movs
inc
test
jmp
and
pop
movs
adc
fidivr
and
pusha
les
mov
pop
addr16
test
retf
ror
enter
test
sbb
shl
out
push
adc
sar
cmps
out
into
push
xchg
or
adc
mov
mov
inc
and
dec
(bad)
out
cwde
(bad)
xor
jmp
inc
call
sbb
jl
sbb
scas
icebp
push
pushf
mov
push
ret
jbe
pop
sbb
sub
test
jmp
mov
inc
out
mov
mov
push
add
mov
mov
std
aam
xor
or
xchg
inc
mov
mov
(bad)
imul
dec
out
(bad)
sti
leave
movs
test
sbb
les
sar
imul
sbb
leave
push
adc
push
stc
jno
xor
push
aaa
daa
iret
mov
mov
and
push
or
mov
ins
xor
cli
(bad)
adc
pop
adc
mov
mov
bts
xchg
js
push
pushf
test
js
outs
rcr
loopne
test
stos
dec
fbld
jg
push
and
fsub
dec
jecxz
cmp
shl
fs
scas
or
xor
pop
xor
adc
xchg
sbb
stc
add
(bad)
cmps
jl
cmp
push
mov
xor
jb
mov
rcr
loop
stos
outs
jge
mov
push
aad
in
jmp
mov
mov
test
and
mov
lods
sub
(bad)
ffree
out
into
inc
(bad)
ins
daa
mov
xlat
cmp
mov
mov
das
nop
and
cmp
pop
movs
xchg
jnp
pushf
pop
mov
inc
retf
jg
mov
fisttp
jmp
call
pop
out
cmp
cmp
aaa
das
jge
mov
xor
gs
sub
popf
or
pop
xor
in
mov
mov
ret
int
sbb
bound
lock
adc
popf
pop
cld
daa
or
jo
jne
fs
jge
sub
out
sbb
dec
xchg
call
pop
sub
test
call
dec
ss
ret
mov
jg
pushf
dec
loop
stc
fdivp
mov
daa
cmc
loop
call
fistp
pop
adc
cmp
inc
inc
sbb
dec
out
push
push
inc
push
loop
sbb
aad
add
pop
add
inc
rol
xchg
retf
mov
mov
mov
fs
shr
out
call
fadd
inc
iret
pop
aas
mov
jle
mov
dec
in
lea
sbb
jbe
pop
and
xor
push
inc
pop
scas
repz
imul
sar
es
push
dec
pop
mul
pop
movs
fild
imul
fiadd
add
push
outs
mov
shl
xchg
out
sbb
div
dec
xchg
addr16
inc
mov
adc
xchg
mov
dec
je
sbb
cmc
iret
mov
mov
clc
fyl2x
push
mov
jmp
sbb
jl
cmp
cmc
sub
jns
out
cmps
push
or
or
stc
add
ds
pop
fnstenv
lods
mov
(bad)
stos
ror
lea
xchg
cmp
and
jbe
cmp
jg
dec
push
mov
cmp
xor
jns
repnz
rol
adc
adc
test
mov
fisubr
js
inc
ja
or
sub
scas
xchg
inc
test
cli
push
pop
sub
push
ja
jle
dec
mov
pop
sub
or
push
fsubr
dec
clc
cmps
mov
inc
retf
xchg
sbb
pop
add
aas
sar
jecxz
and
lock
ins
mov
cmp
test
dec
push
sub
push
xchg
dec
test
push
hlt
shl
xchg
ds
sbb
jle
mov
jnp
sbb
mov
rcr
fs
inc
fld
rol
fwait
adc
fxch
loop
xchg
or
leave
pop
push
or
sahf
loop
mov
(bad)
dec
mov
push
fild
aas
cmp
cmp
cmp
or
aam
jo
mov
icebp
sub
inc
(bad)
sub
add
stc
xchg
aad
cwde
setns
test
add
cmp
cmps
shl
mov
inc
shl
addr16
jmp
lods
punpcklwd
sbb
test
sbb
movs
pop
mul
enter
fild
jp
add
inc
cwde
movs
inc
pop
ins
pop
jae
(bad)
jmp
add
push
xchg
imul
add
pop
in
dec
jbe
sti
inc
(bad)
stos
mov
jnp
mov
dec
adc
jg
test
aas
std
cmp
mov
jne
pop
mov
push
out
clc
sbb
and
push
sbb
mov
in
and
mov
sti
rcr
in
movs
jmp
push
pop
cmps
mov
or
repz
(bad)
sbb
push
inc
sub
and
jmp
stc
cmp
jae
dec
cmp
inc
dec
adc
fsub
lds
push
add
xchg
les
out
sbb
addr16
in
sbb
icebp
pop
fidivr
mov
mov
and
mov
mov
pop
mov
mov
xchg
imul
in
shl
(bad)
rcl
(bad)
ins
popa
dec
sbb
cmp
xor
mov
jl
push
arpl
xor
imul
out
mov
adc
and
jg
rcl
rcl
ins
icebp
shl
outs
out
push
inc
ss
jle
data16
ins
fbld
jg
fstp
mov
imul
clc
addr16
jae
out
push
jb
inc
fild
inc
xor
push
mov
sbb
repz
fidiv
mov
sbb
dec
xchg
out
cmp
push
push
sub
bnd
test
loopne
mov
test
sub
xor
or
ins
mov
mov
repnz
xor
xor
(bad)
loop
mov
in
or
ss
mov
mov
cmps
test
jae
jge
arpl
movs
or
cmps
mov
out
cdq
dec
test
(bad)
sbb
push
int
sub
enter
fist
loop
js
pop
mov
xchg
addr16
and
(bad)
(bad)
out
clc
jle
push
cdq
push
fnsave
mov
js
and
rcr
in
ret
pop
push
add
xchg
jmp
icebp
adc
xlat
ret
icebp
jmp
push
or
add
pusha
popf
xchg
aam
push
mov
mov
cli
js
jb
loop
adc
leave
or
mov
imul
inc
mov
das
add
cmp
cmp
mov
pusha
cdq
in
or
call
js
nop
inc
xchg
xor
fidivr
call
clc
or
push
inc
cmps
cld
cwde
cmp
out
lock
lea
add
(bad)
xchg
icebp
fstp
jle
clc
and
mov
out
jns
lahf
call
cs
in
test
cs
repz
pop
xchg
mov
push
mov
(bad)
sub
fwait
xchg
mov
push
jl
jle
jne
add
loope
sbb
sbb
cmps
adc
mov
push
shr
popf
cmp
stos
cmp
inc
and
mov
inc
popf
lock
in
jns
leave
jns
jo
sub
hlt
cmp
sub
jge
sbb
je
xor
fbstp
out
mov
inc
mov
push
test
xchg
enter
mov
or
dec
mov
xchg
cwde
jnp
mov
xor
or
cmp
es
jl
movs
ror
gs
daa
iret
fwait
xchg
mov
jg
int3
pop
loop
test
sub
jmp
add
das
inc
mov
sub
les
adc
and
out
cmp
push
aas
jbe
sub
in
add
xor
adc
xchg
lods
and
inc
in
inc
pop
lods
sub
bsr
lahf
and
nop
mov
inc
sbb
sbb
hlt
pushf
test
loopne
mov
js
adc
popaw
repz
pop
pop
dec
ret
scas
jle
stos
adc
mov
add
movs
mov
mov
inc
xor
jp
jbe
jno
leave
mov
cmp
add
loopne
ret
call
pop
push
dec
cdq
test
mov
leave
jns
adc
or
push
xchg
adc
daa
clc
xchg
ins
iret
adc
inc
mov
test
setae
cdq
dec
sub
sbb
iret
or
ror
pop
mov
adc
int
and
loopne
add
xchg
pop
retf
jg
movs
and
das
add
sub
mov
pop
fadd
pop
dec
loope
push
ss
inc
sbb
sub
inc
cli
xor
mov
jmp
int
xlat
pusha
retf
add
popf
mov
sbb
icebp
and
lahf
in
add
mov
call
stos
cdq
sub
sahf
iret
inc
jae
jo
pusha
cmp
addr16
movs
sub
enter
ja
cmp
xchg
push
pop
repnz
cs
push
jnp
pop
out
push
dec
jns
(bad)
xor
sbb
mov
xchg
xor
adc
stc
repnz
lods
mov
xchg
sbb
pushf
popa
sbb
xchg
mov
arpl
sbb
mov
xor
sub
out
sti
iret
bound
pushf
add
inc
and
pop
or
(bad)
popf
push
mov
ss
push
push
sar
fwait
outs
rcr
pop
or
aad
adc
pop
push
les
mov
iret
div
push
fprem1
pop
fdiv
mov
pop
in
push
mov
punpcklwd
lods
out
jmp
jecxz
ror
leave
pop
mov
xor
push
inc
in
rcr
daa
std
js
scas
sub
dec
bnd
jno
movs
dec
jae
pop
dec
adc
push
cld
(bad)
and
ds
pop
and
sub
cs
stos
jo
sub
push
movs
mov
fxam
adc
fsub
aad
out
sti
inc
sub
mov
dec
test
sbb
popf
popa
cmc
ds
mov
mov
test
pop
and
cmps
pusha
cmp
popf
fld
and
cs
les
test
dec
fdiv
mov
cmp
sub
xor
fisub
bound
push
test
mov
mov
movs
hlt
sbb
xchg
mov
adc
xor
fimul
call
mov
outs
mov
inc
ins
adc
xchg
sbb
and
push
(bad)
in
pop
bndldx
push
sub
daa
in
or
test
jmp
jmp
(bad)
imul
retf
aam
xchg
mov
mov
mov
mov
jbe
mov
xor
and
mov
sbb
sub
paddusb
xchg
sbb
(bad)
inc
cmps
add
xchg
cmp
hlt
or
scas
jo
(bad)
div
sar
cld
imul
cmps
push
mov
cli
aaa
sub
cdq
test
sub
push
fsub
dec
scas
in
js
push
adc
(bad)
je
sar
jg
mov
repnz
pop
cld
sub
iret
into
xor
stos
xor
cmp
cmp
les
xchg
or
mov
mov
jp
mov
sbb
jno
test
adc
push
jmp
push
mov
gs
leave
ins
sub
jmp
dec
scas
fcmovnbe
js
test
ds
aaa
addr16
mov
add
and
pop
inc
scas
jmp
dec
cmp
adc
jmp
data16
pop
imul
(bad)
repnz
outs
int3
mov
mov
mov
mov
mov
push
and
xchg
fwait
inc
mov
test
shr
shr
fst
jmp
push
or
out
repnz
mov
inc
add
xor
jno
sbb
jb
gs
xchg
mov
push
sahf
jmp
nop
mov
hlt
(bad)
cmp
dec
push
fild
out
inc
jmp
das
add
ret
aas
or
adc
sbb
pop
(bad)
sbb
fucomip
lock
addr16
mov
nop
sub
jle
mov
dec
ret
fdivr
data16
add
cmps
or
lock
lahf
or
in
enter
pushf
loopne
xchg
xchg
int3
cmp
xchg
cld
xchg
inc
rcl
push
jg
gs
in
fstp
popw
adc
jbe
lea
and
shl
nop
push
and
push
push
mov
mov
imul
dec
pushf
jns
leave
fistp
push
int3
add
mov
sbb
push
mov
and
shl
call
push
jg
fwait
mov
xor
aaa
xor
and
in
lock
loopne
stos
stc
out
adc
xchg
pop
sub
sar
daa
add
fdivr
(bad)
(bad)
xchg
fsubr
add
out
lds
mov
(bad)
pushf
in
out
les
retf
cmp
mov
jae
fwait
hlt
sbb
push
pop
inc
dec
inc
shr
sub
dec
pop
xor
aad
sub
(bad)
cmp
lahf
rcl
(bad)
and
addr16
xor
push
in
xchg
repz
shl
ds
mov
adc
xor
jo
gs
xor
xor
dec
lock
scas
or
ja
(bad)
dec
xchg
pop
add
enter
(bad)
movs
sbb
jl
sub
mov
mov
ins
in
and
dec
call
push
and
lods
mov
fwait
in
iret
mov
mov
je
sub
jno
cmp
les
xchg
mov
aad
lods
xor
dec
xchg
clc
inc
cmp
shl
stos
inc
shr
push
and
std
(bad)
popa
or
inc
jge
gs
mov
jg
hlt
or
lahf
push
xor
mov
cdq
rcl
out
scas
ror
lods
sub
mov
stos
int3
mov
pop
cmps
dec
xor
cmp
push
sbb
and
xor
sbb
adc
jno
or
pop
ja
aad
sub
mov
mov
push
inc
add
fld
int3
and
pop
je
ja
jae
loopne
xchg
je
in
ds
jns
jne
jb
std
xchg
jb
sbb
dec
ja
jg
movs
inc
xor
inc
inc
aas
scas
add
sbb
and
push
pusha
sahf
inc
sti
and
cwde
adc
push
imul
sti
inc
cmp
adc
adc
inc
jmp
xchg
pusha
mov
inc
add
jmp
mov
jge
xchg
inc
mov
jae
ss
int
push
xlat
call
xchg
pop
(bad)
into
aam
xchg
in
jmp
dec
mov
leave
stos
dec
jns
nop
or
jo
je
fwait
pop
cld
test
lea
mov
add
mov
pop
rol
pop
cmp
add
shr
fidivr
ret
inc
ins
retf
push
call
sar
data16
js
mov
call
xchg
mov
xchg
xchg
inc
sub
(bad)
dec
fwait
xor
xchg
sti
test
push
push
mov
das
jnp
dec
mov
and
push
adc
shl
push
push
jecxz
dec
xlat
pushf
push
xor
aad
imul
pavgb
out
jg
aaa
(bad)
scas
cld
cmp
mov
pop
mov
cmc
or
jmp
scas
add
sbb
mov
add
jnp
mov
(bad)
int3
std
lods
mov
dec
stc
scas
xor
fst
inc
cmp
jae
cld
mov
aaa
sbb
push
sub
push
repnz
sub
test
adc
out
nop
outs
jae
jae
int3
push
xchg
fisub
aas
sub
pop
cdq
or
pop
cli
popf
push
dec
and
adc
idiv
rcl
cmps
jmp
mov
imul
dec
loopne
inc
lods
push
and
sti
dec
aam
gs
fcom
in
pop
mov
and
and
adc
or
adc
mov
pop
ds
jne
rcl
sub
loopne
pop
pop
adc
stos
xchg
adc
adc
cmps
das
xor
mov
xlat
inc
inc
clc
lds
sbb
add
lahf
dec
add
leave
xor
cmp
loopne
cdq
js
(bad)
out
jbe
loope
jnp
mov
pop
cmps
call
xor
out
and
clc
inc
ret
jno
inc
popa
fsub
fucomip
pop
shl
cmp
xor
mov
add
loop
mov
adc
pop
push
mov
es
arpl
retf
arpl
addr16
push
fmul
rcr
jae
fstp
cmp
aaa
(bad)
movs
jne
rcl
mov
shl
aas
(bad)
mov
dec
lock
gs
xchg
cmps
arpl
imul
jbe
push
mov
mov
xor
packssdw
in
inc
mov
jne
fcmovbe
adc
push
sub
xor
cmp
mov
cmp
push
movs
inc
inc
fstp
mov
aam
dec
mov
shl
sbb
or
retf
pop
ja
test
jmp
or
cmp
jg
ja
test
sbb
(bad)
mov
adc
lods
sbb
mov
movs
cmp
or
ret
xor
(bad)
div
jmp
pop
lea
movs
(bad)
lods
mov
das
adc
add
inc
cli
out
mov
pop
sub
nop
enter
jmp
je
ficomp
or
jne
mov
inc
call
sub
mov
and
cli
mov
cmp
fcomp
mov
call
mov
fnsave
xchg
cmps
push
and
push
add
xchg
push
aad
or
adc
fnstsw
fld
arpl
fcmovnb
jle
sbb
or
pop
int3
mov
or
mov
rcl
cmps
add
adc
movs
aad
xchg
popf
sbb
mov
retf
xchg
cwde
das
jbe
stc
(bad)
movd
jae
shl
jmp
cmp
sub
cmpxchg
dec
das
adc
pop
fbstp
add
mov
clc
in
pushf
push
mov
call
jecxz
and
dec
adc
loopne
popf
into
xchg
nop
lods
hlt
cwde
test
add
add
mov
mov
cmp
int3
mov
repnz
adc
cli
sub
scas
push
rcr
pop
jp
push
push
jge
dec
test
outs
shl
xchg
loopne
sbb
popa
loopne
aad
add
jle
add
pop
in
mov
pop
shl
movlps
fwait
pop
push
retf
push
xor
jecxz
sbb
sbb
dec
sbb
into
int
dec
lock
jns
mov
and
inc
fs
shr
mov
fwait
push
xor
mov
cmp
cmp
repz
push
arpl
fwait
add
mov
into
in
pop
cs
sbb
xchg
(bad)
cld
mov
out
xchg
jbe
jg
or
push
scas
mov
xor
xor
jbe
stos
(bad)
push
aas
mov
outs
jge
int
inc
ret
sbb
sar
adc
ins
jge
movs
sub
cwde
jns
sbb
lods
lds
pop
dec
push
push
inc
sbb
sti
add
push
pusha
mov
arpl
lea
mov
test
aas
js
es
mul
or
lahf
pop
cmp
outs
ret
mov
idiv
xor
pop
ins
call
repnz
out
out
(bad)
lds
into
sbb
iret
es
or
cmp
jnp
fwait
mov
mov
sbb
mov
test
dec
dec
scas
ficomp
lock
xchg
dec
sub
add
or
aad
inc
mov
lds
cmp
xchg
add
and
jno
jge
push
loope
pusha
and
sub
and
movs
fmul
dec
adc
cmp
lock
out
and
and
shl
inc
out
push
into
xchg
lock
in
jecxz
xor
out
mov
cmp
mov
push
jno
jns
pop
outs
jnp
das
hlt
cmp
shl
fbstp
adc
ja
inc
imul
jg
dec
sar
cld
push
mov
movs
mov
pop
pop
scas
or
and
mov
nop
cmc
in
mov
iret
ret
arpl
out
iret
add
test
(bad)
ror
aad
data16
bound
js
or
inc
inc
sar
mov
popa
ja
adc
(bad)
fistp
mov
jg
mov
enter
iret
mov
(bad)
mov
xor
cs
push
push
jb
clc
shr
(bad)
ins
mov
sti
lock
aas
in
nop
mov
or
push
mov
xor
xor
xchg
rol
into
add
lods
jmp
stos
ja
stos
and
xor
imul
cmp
div
ins
test
and
and
and
push
pop
and
rcl
jbe
mov
pop
retf
cmps
push
pop
imul
cmp
xchg
pop
and
and
jo
pop
fistp
xor
lea
js
mov
lods
push
xchg
jne
leave
loopne
pop
dec
stos
sbb
xor
fcom
cmps
xor
data16
pop
dec
pop
and
test
push
jge
gs
(bad)
outs
movs
xlat
cmps
iret
mov
or
jmp
mov
les
enter
mov
xchg
js
or
in
push
cmc
jae
out
shl
dec
sbb
xlat
mov
popf
fcomp
push
jnp
popf
cmp
sub
and
xchg
mov
jns
call
inc
dec
pushf
pop
les
cmps
inc
jl
sub
add
xchg
pop
or
in
cmp
or
add
test
je
inc
jae
ss
sub
jg
ret
je
jnp
mov
jmp
out
inc
loope
test
pop
sbb
sub
repnz
fidiv
test
mov
leave
jno
(bad)
and
mov
mov
and
out
add
mov
movs
pop
adc
xor
jg
test
mov
ret
outs
inc
shr
mov
(bad)
ins
ud1
es
sahf
pop
fsubr
aad
pop
jbe
(bad)
push
ja
scas
bound
add
mov
xor
fistp
dec
jo
(bad)
cmp
pop
clc
xchg
mov
mov
xor
shr
mov
out
adc
dec
repnz
cmp
lds
sar
movs
pop
(bad)
fxch
dec
loopne
mov
mov
add
jg
test
idiv
pop
sbb
loope
iret
int3
xchg
dec
retf
cmp
or
movsx
shrd
ss
test
addr16
popa
push
pop
xchg
add
jnp
imul
(bad)
mov
mov
xchg
lods
gs
movzx
mov
ins
jne
xor
mov
loop
xor
lea
xor
sti
xor
add
inc
ins
mov
inc
out
addr16
add
xchg
inc
mov
jl
jae
dec
(bad)
loop
retf
cmp
popa
mov
xor
mov
icebp
xchg
add
(bad)
loopne
xchg
mov
out
lods
pop
or
jg
pushf
pop
jae
mov
jmp
jp
mov
pop
xchg
out
outs
arpl
aas
js
pop
repz
jmp
or
(bad)
pop
bound
and
outs
stos
cdq
addr16
push
add
stos
inc
in
pop
mov
(bad)
add
std
sub
shr
scas
and
mov
cmp
icebp
xchg
push
and
sbb
mov
add
add
mov
jg
clc
call
mov
cmp
dec
pop
(bad)
fist
push
dec
pop
or
pop
retf
mov
or
js
cs
fcmovu
mov
inc
ins
pushf
fwait
into
scas
movs
mov
das
dec
and
out
jmp
sub
jo
xor
add
fild
push
sub
ret
(bad)
clc
das
inc
sub
loop
xchg
enter
sub
sub
jp
xchg
mov
adc
mov
jns
mov
push
mov
mov
mov
sub
lock
pop
adc
cmp
cmps
scas
aas
shl
jmp
mov
push
push
xor
rol
pop
sbb
adc
pop
sahf
jo
pop
bound
pop
cdq
lds
xchg
xchg
cs
fwait
add
jmp
adc
icebp
ja
cmps
retf
add
fs
jl
mov
and
pusha
je
sub
sbb
fs
leave
jl
cmp
jb
fild
ror
push
movs
dec
jbe
push
jnp
stos
cli
loop
aaa
jmp
test
mov
test
pop
(bad)
pop
in
outs
pop
arpl
dec
push
mov
and
jnp
fiadd
mov
in
popf
or
inc
push
xchg
xchg
stos
cmp
(bad)
pop
aad
(bad)
call
mov
pop
add
mov
shl
pushf
push
fisub
mov
add
push
shl
loopne
repnz
stos
xlat
add
es
shl
pop
arpl
adc
mov
push
push
(bad)
adc
test
(bad)
inc
jno
fwait
push
mov
push
call
mov
jo
xchg
inc
aam
bound
dec
mov
out
push
call
sub
mov
jo
adc
lds
inc
mov
mov
cmc
leave
aas
adc
cmp
sahf
fucomip
hlt
dec
mov
pop
pop
pop
or
imul
ins
sbb
jns
mov
cmp
stos
dec
pop
cmp
mov
sub
mov
and
shl
cwde
or
into
adc
and
call
fucomip
mov
clc
mov
stos
inc
mov
and
mov
jns
clc
and
test
retf
jmp
prefetch
test
and
les
xor
sub
int
sti
in
cmp
les
inc
xchg
outs
cmp
nop
mov
jg
jns
push
aad
fs
test
jg
stos
outs
fcomp
dec
out
adc
fadd
xchg
dec
push
or
adc
mov
call
mov
xor
jbe
test
sbb
sti
or
lds
mov
sbb
cmp
neg
popf
dec
add
mov
mov
sbb
mov
fld
xchg
jg
or
xchg
pop
cmp
scas
mov
das
fisttp
in
or
inc
cmp
addr16
add
cdq
mov
daa
lahf
adc
inc
mov
arpl
std
and
shl
push
lds
adc
jl
inc
test
lods
adc
test
jmp
cmp
or
push
jno
sti
push
jg
daa
lods
repz
jne
aam
ds
fimul
jl
or
or
xchg
dec
xchg
fst
imul
fist
loop
jae
pop
sbb
cmps
dec
add
in
pushf
sbb
pop
jbe
mov
fidiv
inc
inc
call
aam
mov
popf
movs
pop
mov
fs
mov
mov
sbb
ins
dec
es
push
dec
pop
bound
pop
imul
xchg
das
xor
mov
icebp
push
xor
jb
ds
ja
or
rcr
je
lock
outs
add
push
imul
fs
arpl
pop
or
pop
aam
or
sbb
jmp
inc
aad
sub
add
add
(bad)
push
inc
xor
xor
jne
fild
shr
adc
popa
repz
les
or
adc
loope
pop
inc
stos
out
out
(bad)
mov
add
out
addr16
xchg
push
jmp
inc
inc
dec
js
cmp
jmp
xchg
dec
into
jo
inc
int3
lahf
jae
fwait
imul
push
inc
mov
test
ret
lea
dec
pop
push
mov
pop
retf
mov
and
lock
mov
fscale
pop
push
mov
dec
cmp
shl
dec
push
popa
adc
sub
aas
fist
cmps
adc
mov
fimul
fnsave
sbb
jb
xchg
jno
lea
adc
jns
inc
loope
ins
mov
adc
fst
or
fstp
push
loopne
pushf
je
mov
sub
xlat
jecxz
mov
mov
adc
sbb
in
sub
test
push
clc
adc
lods
sub
adc
pop
(bad)
jne
push
add
mov
inc
xchg
cmps
mov
add
rcr
out
int
daa
mov
jne
xchg
ret
push
mov
ficomp
mov
clc
stos
mov
out
out
and
cld
xor
adc
xor
sub
test
test
ror
or
xlat
mov
sti
stos
retf
mov
nop
pushf
ret
push
jae
jl
dec
jb
push
rcr
std
or
or
inc
sti
mov
jne
sar
icebp
pop
xor
mov
data16
bound
pop
jne
inc
inc
pop
or
(bad)
in
xchg
adc
jnp
cmp
bswap
in
std
xor
mov
sbb
ins
scas
int
jmp
mov
bound
xchg
mov
jno
inc
pop
mov
and
inc
dec
push
bound
mov
mov
and
adc
add
add
xchg
xchg
cmp
sbb
cld
and
imul
xchg
mov
pop
ficom
xor
inc
stc
mov
mov
jno
les
ds
ins
cmp
add
xlat
sti
xchg
stos
call
test
lea
pop
imul
xchg
dec
push
mov
imul
aaa
or
retf
jp
xor
test
pop
scas
stos
xchg
jns
arpl
nop/reserved
sti
stos
dec
or
daa
clc
xlat
pushf
mov
mov
sbb
cmps
(bad)
sti
adc
stos
movs
retf
mov
repz
in
ficomp
retf
sbb
sbb
dec
mov
sub
xor
mov
or
mov
jnp
sub
fimul
arpl
movs
fdivr
lahf
pop
iret
xchg
fnstsw
or
inc
in
cmp
adc
and
or
xor
or
addr16
ja
cmp
imul
push
sub
int3
sbb
jne
and
xchg
jb
cli
xor
shl
mov
scas
(bad)
cli
dec
jecxz
cmp
or
xchg
fisttp
call
xor
stos
gs
test
loopne
nop
ret
(bad)
and
leave
call
sti
(bad)
out
adc
add
pop
(bad)
sub
xor
mov
stos
ss
add
add
cmp
js
pop
jle
mov
dec
jno
test
adc
add
xchg
cmp
mov
arpl
sbb
jl
int
je
mov
out
call
or
int3
mov
mov
mov
sti
enter
jne
mov
jl
mov
out
push
sub
cmp
in
(bad)
and
std
sub
fcomp
iret
cwde
pop
pop
retf
and
stos
je
inc
cmp
push
cdq
jg
sbb
stos
mov
stos
xchg
movs
cmps
mov
test
sub
cld
enter
movq
stc
fcomp
lahf
repnz
push
dec
mov
dec
add
popf
jbe
push
je
ins
inc
xchg
call
pop
jo
mov
push
cmp
aaa
xor
shr
or
daa
cdq
jae
dec
cmp
mov
pop
call
ret
xor
and
dec
jmp
ins
leave
inc
pop
mov
int
mov
push
mov
push
(bad)
xor
sub
adc
sub
sub
and
jno
fdiv
push
and
hlt
cmp
in
xchg
xchg
mov
dec
add
xchg
jmp
je
add
sti
fdiv
pop
xchg
dec
stos
cwde
shl
into
in
or
xor
iret
push
add
lock
inc
cmp
sbb
adc
mov
(bad)
fimul
mov
xchg
pushf
fsubp
out
ret
jb
mov
(bad)
movs
fwait
mov
cld
in
add
xlat
jmp
retf
and
jmp
xchg
popf
xor
enter
inc
xchg
stos
ret
jg
inc
lea
inc
add
jns
jns
adc
xor
fwait
movs
adc
call
mov
xchg
or
fisubr
pop
dec
stc
jno
adc
mov
push
leave
xor
xchg
xor
push
shl
lahf
jbe
test
push
arpl
mov
rcl
jb
xor
xor
sbb
js
addr16
mov
popf
scas
xchg
shl
jg
mov
push
cwde
das
adc
out
dec
stos
jmp
sub
mov
cwde
or
cmps
into
into
hlt
rcl
mov
jmp
xchg
addr16
frstor
leave
adc
call
in
hlt
ja
xchg
pusha
or
shr
mov
push
fistp
sub
inc
addr16
repz
sbb
popf
push
and
fs
cmp
jo
pop
and
mov
paddb
imul
(bad)
les
push
mov
add
fs
mov
sbb
jbe
enter
sahf
jp
sub
adc
repnz
push
fcomp
test
cdq
stc
push
or
sbb
movs
mov
jno
rol
fsubr
les
push
sti
pushf
mov
mov
push
(bad)
mov
dec
or
repnz
call
jmp
sahf
pop
dec
dec
jge
je
or
rcr
das
jge
cwde
xor
lods
cli
out
push
cmps
pop
xchg
mov
fs
pop
xchg
fs
dec
sar
adc
or
call
das
(bad)
add
pop
push
out
repnz
(bad)
js
(bad)
jmp
adc
jecxz
loop
sbb
cmps
xor
mov
mov
(bad)
into
add
fs
push
in
mov
retf
or
ret
mov
xchg
dec
add
mov
pop
mov
in
out
fidiv
cli
mov
sub
stos
icebp
adc
test
nop
fmul
dec
or
push
popf
leave
and
test
sbb
pop
ret
push
jl
cwde
mov
mov
or
mov
pop
cmp
xchg
call
jle
psrad
imul
inc
push
mov
or
enter
adc
pop
mov
ds
gs
call
call
ds
jmp
sbb
lock
push
lahf
or
push
xchg
outs
xchg
dec
fild
movlhps
addr16
ret
in
rcr
es
icebp
es
icebp
sub
cmp
xor
mov
mov
push
mov
or
xor
arpl
pop
or
out
fidiv
test
clc
fs
pop
(bad)
fdiv
add
pop
or
popa
sbb
or
mov
or
stc
mov
push
xor
xchg
shl
mov
and
and
dec
adc
js
pop
jg
jmp
arpl
push
and
aaa
out
clc
pop
enter
sbb
sub
addr16
int3
push
retf
aad
xchg
sub
sbb
inc
pop
inc
mov
enter
scas
sub
fdivr
shl
dec
adc
data16
sub
scas
xchg
sub
xchg
int3
lock
lds
mov
sbb
pusha
push
xchg
sbb
mov
mov
into
xchg
daa
adc
jmp
fucom
stos
bound
arpl
xchg
xchg
les
and
addr16
cwde
pop
rcl
jp
hlt
sub
(bad)
pop
mov
icebp
mov
retf
sub
mov
push
mov
popa
cmc
sub
dec
sbb
shr
sbb
xchg
and
mov
call
add
xchg
out
inc
mov
addr16
(bad)
pop
in
xchg
imul
add
cmps
mov
sbb
push
xor
jmp
loop
sbb
mov
ja
mov
repz
push
adc
sub
test
stos
add
pop
push
mov
xchg
std
stos
adc
pop
in
ins
retf
mov
xchg
mov
je
clc
or
aam
lea
jp
cmp
add
mov
jmp
fidiv
outs
or
xor
push
sbb
lock
test
cmp
push
dec
adc
icebp
scas
call
push
mov
cmp
jge
das
sbb
outs
sbb
push
addr16
ins
clc
popa
cmc
mov
push
sub
cmp
bound
sahf
cmp
call
rcr
mov
movs
repnz
in
xchg
sbb
mov
xchg
fs
sub
sub
pop
or
xchg
mov
xor
into
shl
cdq
arpl
xor
push
mov
test
dec
jl
dec
jno
xor
leave
std
out
add
scas
out
xchg
cdq
sub
mov
and
pop
fs
cdq
push
sahf
jno
cwde
js
movs
out
push
div
or
push
scas
out
mov
pop
rol
lods
jp
jae
jg
xor
loopne
mov
push
or
outs
add
out
stos
gs
mov
scas
movzx
dec
cmc
ins
sbb
pusha
xchg
test
jno
mov
repz
test
cmp
fnclex
cdq
add
jne
and
cmps
sbb
jno
ror
mov
cdq
pop
sbb
lods
sub
jmp
xchg
pop
adc
pusha
in
push
inc
or
fwait
aad
xchg
sahf
retf
test
loope
inc
pop
dec
mov
mov
(bad)
call
sub
fstp
mov
cmp
sub
out
in
sbb
pushf
jle
arpl
mov
fbld
cmps
stos
aas
sub
mov
pop
pop
or
nop
fsubr
dec
mov
sub
and
mov
es
lods
aam
(bad)
(bad)
cmp
xchg
push
scas
xlat
xchg
dec
push
jl
jp
clc
lods
xchg
pop
(bad)
mov
jg
pop
xor
xchg
jb
stos
and
leave
fld
inc
ror
and
or
jg
mov
jne
hlt
pop
add
sub
mov
adc
push
ja
mov
add
lock
adc
push
jno
push
cmp
call
mov
icebp
(bad)
jmp
xor
les
test
popa
fcomp
mov
retf
inc
cmp
ret
mov
sub
inc
stos
test
popf
fisttp
or
stos
bound
adc
lea
shl
jbe
lock
sti
push
lock
sub
aam
std
add
adc
sub
pop
ins
sahf
(bad)
cli
inc
shl
repz
inc
(bad)
mov
pushf
mov
xchg
test
mov
dec
call
sub
mov
jae
add
cdq
pop
or
xlat
ins
(bad)
popf
push
jbe
adc
sub
lahf
inc
jle
sub
and
fisubr
pushf
movs
adc
(bad)
lock
outs
push
aad
fldl2e
mov
push
xchg
or
mov
jbe
sbb
outs
pop
jno
mov
add
pushf
push
jmp
lock
inc
sar
das
mov
shl
repnz
mov
ret
mov
fnsave
push
mov
mov
adc
dec
or
in
add
mov
add
(bad)
sub
lods
sar
test
sti
ss
jne
push
sahf
jo
stc
mov
xchg
cmp
popa
mov
inc
push
in
sub
mov
sbb
xchg
inc
push
add
cmp
dec
xor
sub
xchg
sar
rcl
pop
pusha
sbb
jns
ins
add
mov
pop
(bad)
dec
add
inc
or
ret
ins
ja
xchg
mov
cdq
push
pop
pop
sbb
xchg
pusha
stc
pop
cmp
inc
(bad)
adc
shl
xor
lods
jmp
mov
sbb
dec
mov
mov
mov
or
(bad)
idiv
jle
dec
repnz
fld
adc
aam
dec
data16
or
adc
out
lea
pusha
cmp
mov
mov
xchg
call
dec
sbb
pop
adc
sbb
jne
jp
mov
call
repz
or
movs
xor
pop
stos
inc
cmc
jno
mov
outs
mov
mov
or
mov
adc
imul
push
pop
xchg
ret
leave
xchg
jo
push
xchg
xor
mov
pop
fs
adc
and
and
xlat
pop
popa
xchg
dec
ins
xlat
jb
xor
jbe
push
jnp
popf
sahf
jns
sbb
das
dec
dec
or
inc
adc
hlt
pop
out
xor
dec
lds
sbb
and
loopne
es
loop
jno
adc
cli
not
push
data16
addr16
pextrw
dec
js
push
add
jecxz
jp
(bad)
enter
in
enter
cmp
jl
(bad)
dec
popf
jle
sub
ds
inc
fidivr
sti
mov
inc
xlat
pop
xor
jno
imul
adc
xchg
das
test
es
dec
adc
or
cmp
loopne
retf
sub
inc
clc
retf
jmp
cmp
mov
fldcw
aam
call
ja
mov
xor
test
and
sbb
test
leave
outs
jo
adc
call
mov
movs
mov
cdq
rol
add
xchg
loopne
nop
shr
fnstsw
stos
mul
lock
(bad)
fnstsw
cmp
std
dec
js
mov
ret
cmps
dec
jne
bound
mov
dec
shl
sahf
mov
adc
popf
lea
sbb
xchg
cmps
(bad)
enter
ret
push
fwait
mov
sub
inc
stc
push
pop
cdq
adc
lahf
or
aam
nop
cmps
(bad)
dec
sbb
mov
jb
aad
mov
jmp
test
sahf
push
(bad)
dec
dec
or
fimul
movs
mov
pop
xor
outs
or
pop
inc
sbb
movs
and
dec
inc
fld
and
push
push
sahf
cs
or
xor
mov
jne
xor
data16
inc
into
cmp
mov
sbb
adc
xchg
and
fcmovnb
mov
lahf
adc
cdq
jle
sub
mov
sub
mov
cmp
lods
mov
imul
dec
mov
icebp
jmp
add
outs
out
(bad)
cmps
push
arpl
call
in
stos
dec
(bad)
xchg
pop
adc
ins
test
mov
xchg
ss
test
xor
pop
nop
mov
nop
cmp
sbb
cmp
out
or
sbb
xlat
push
adc
popf
mov
or
sub
loope
pop
mov
mov
mov
xlat
sti
push
movs
nop
aaa
cmp
cmps
pop
pop
cmps
mov
aad
loopne
test
push
xchg
push
add
xchg
dec
sub
inc
adc
mov
sbb
addr16
mov
cld
test
sbb
jno
inc
or
(bad)
fld
sub
scas
push
add
sub
inc
(bad)
iret
sbb
dec
mov
scas
fnstcw
or
dec
(bad)
stos
sbb
pop
rcl
jp
inc
xlat
(bad)
mov
sub
add
sahf
or
xor
sub
ret
push
cmc
pop
test
push
sti
xchg
dec
gs
mov
jnp
pop
jo
out
ja
inc
loop
(bad)
push
clc
out
xor
cs
xchg
cmp
and
mov
int3
dec
inc
jmp
sbb
fwait
test
jbe
jne
xchg
rcr
sbb
aad
enter
jmp
sahf
dec
push
add
or
cs
push
and
pushf
ret
dec
aaa
popa
pop
pop
out
test
test
push
jmp
pop
popa
jb
fisub
jb
sub
mov
push
sti
pop
inc
push
out
mov
(bad)
(bad)
stc
test
sub
inc
call
stos
movs
and
cmp
jbe
test
inc
jbe
inc
ins
cmp
neg
xor
add
mov
lea
inc
push
mov
dec
or
xor
ret
mov
xlat
and
call
mov
fcmovbe
pop
(bad)
inc
push
inc
inc
cdq
ss
aam
mov
xor
push
retf
adc
ror
mov
aas
sub
add
cmp
xchg
xchg
jbe
push
nop
repnz
rol
add
mov
and
xchg
mov
mov
hlt
in
cmp
test
les
das
dec
jns
scas
jnp
out
and
pop
jo
js
leave
mov
pop
push
mov
fimul
push
jg
push
cli
mov
xor
je
xchg
pop
sub
or
jl
add
mov
sub
nop
enter
mov
out
call
scas
or
adc
push
cmp
ja
mov
dec
mov
inc
mov
jae
pop
inc
mov
mov
push
sbb
cmp
repz
xchg
cmp
ins
enter
fs
or
add
mov
jmp
shl
stos
iret
sub
cmp
inc
inc
mov
mov
outs
shl
push
sub
ss
inc
cmc
cmp
retf
das
jnp
pop
mov
mov
jmp
retf
pop
push
push
(bad)
(bad)
push
daa
mov
mov
mov
add
jl
dec
ret
shr
adc
sub
xor
pop
xlat
test
and
pop
sub
adc
test
mov
push
repnz
mov
(bad)
lahf
mov
mov
(bad)
popf
fwait
inc
pop
js
inc
(bad)
mov
sbb
push
ret
sub
or
stos
call
pushf
pop
sbb
int
sti
ficom
dec
pushf
xchg
mov
pop
mov
xlat
bound
mov
and
push
xchg
icebp
outs
ins
pop
enter
bnd
jbe
cmp
mov
sub
add
jno
repnz
repz
push
sub
or
arpl
and
sub
mov
sub
in
aas
cmp
adc
pop
jb
mov
mul
adc
jmp
mov
sar
imul
cmp
mov
cmc
test
adc
mov
clc
stos
dec
inc
out
xlat
aam
cmp
cmp
repnz
popf
xchg
jno
inc
jb
xlat
retf
aad
cdq
inc
int
daa
cmp
pop
adc
sbb
scas
fxch
jae
mov
neg
ficomp
neg
mov
stos
mov
mul
rcr
mov
enter
add
popa
jae
pop
sbb
cwde
xor
scas
iret
adc
retf
mov
loop
push
xor
out
push
pop
into
xor
pushf
add
out
test
dec
and
pushf
(bad)
call
sbb
test
stos
push
jl
and
jno
xchg
in
mov
sbb
fcmovnu
jmp
(bad)
jecxz
mov
sar
stc
outs
outs
pop
mov
lods
dec
ja
call
jns
rcr
iret
jp
sbb
sub
xchg
cmp
mov
fimul
les
les
or
out
sti
mov
and
sub
in
pop
adc
pop
push
pop
pop
call
xchg
cli
xchg
or
les
xlat
dec
mov
push
shr
xor
pushf
sbb
cmps
out
adc
adc
repnz
in
enter
cld
movs
repz
mul
push
cmp
adc
sbb
icebp
adc
and
pop
or
pop
ret
stc
lea
adc
mov
mov
adc
pop
movs
jnp
es
adc
(bad)
xchg
xchg
fsubr
and
movs
pop
sbb
shr
test
pop
mov
arpl
stos
and
clc
sub
in
push
xor
not
fisub
sub
(bad)
jbe
(bad)
jp
pop
push
or
inc
retf
mov
push
push
adc
in
adc
xor
fild
mov
push
dec
jmp
pop
sbb
cmps
mov
gs
popa
jae
sub
out
int
sbb
pop
jmp
int3
lods
pop
inc
jecxz
hlt
enter
popa
cmp
xor
sub
lods
std
lods
mov
mov
xor
gs
inc
aam
pop
repnz
loope
xchg
nop
bound
inc
data16
sbb
mov
push
add
xchg
pop
out
push
jne
aam
pop
bound
fidiv
mov
sbb
shl
xchg
xor
retf
cld
js
and
fisttp
inc
ja
ss
sub
adc
cmp
js
add
push
in
cmps
in
push
or
sub
push
and
scas
stos
sub
outs
shl
fisttp
in
mov
ss
and
xor
ss
(bad)
jecxz
push
xchg
in
or
mov
(bad)
and
cwde
rol
pop
dec
or
mov
jmp
xor
(bad)
std
aaa
mov
pushf
ret
sbb
test
cmp
xor
gs
mov
rcr
pop
xor
mov
ficomp
movs
clc
dec
popa
ja
les
out
sbb
xor
ds
inc
mov
sbb
scas
bound
nop/reserved
cdq
xchg
ret
adc
ret
ror
cmp
ins
xchg
cmp
pop
es
mov
adc
fwait
xor
out
fistp
sbb
in
or
adc
mov
jo
adc
jle
shl
iret
jmp
loope
jae
test
pusha
jbe
mov
cmp
mov
mov
mov
loope
outs
add
ins
repnz
mov
pop
mov
lds
sbb
sub
fimul
gs
jb
or
test
retf
mov
or
fs
movs
js
sbb
mov
scas
jno
or
mov
iret
adc
mov
inc
and
fld
int
in
pop
movs
fidivr
scas
sub
and
mov
xchg
or
sbb
(bad)
enter
jno
sti
jecxz
cwde
imul
in
push
mov
enter
popa
push
out
sub
pusha
popa
xchg
pop
out
pop
push
pop
xchg
into
pop
pop
out
xor
inc
cmp
inc
lods
scas
pop
jle
cmp
movs
sbb
jb
retf
push
pop
fld
pop
jg
push
and
mov
push
div
sub
jae
pop
pop
test
outs
loopne
mov
add
xchg
push
dec
mov
enter
xor
sbb
(bad)
jns
call
into
sahf
mov
pop
ja
shl
int
or
fisub
sbb
push
js
imul
or
call
loopne
dec
push
popa
pop
sbb
outs
shr
mov
in
push
ret
mov
inc
ja
clc
xor
xor
sti
push
imul
mov
sti
cmp
sub
(bad)
shl
js
pop
jmp
mov
push
adc
pop
mov
dec
sub
test
out
push
sbb
adc
and
push
shr
sbb
mov
lea
outs
jmp
in
das
mov
sti
push
sub
adc
inc
std
test
jecxz
fbstp
in
jle
dec
mov
mov
outs
jge
loop
xor
test
int
fisttp
sbb
or
mov
jbe
shl
xchg
neg
scas
int
pop
add
aam
pop
mov
into
lea
retf
in
xchg
(bad)
push
push
mov
les
xchg
(bad)
jmp
xchg
push
mov
mov
inc
aam
stos
das
ss
ins
add
out
and
dec
ret
mov
push
jb
or
retf
enter
aad
push
or
xchg
pop
push
mov
jb
rcr
fistp
fcomp
add
jnp
stc
jb
aas
or
popf
std
mov
add
pop
sbb
fstp
fdivr
and
lea
rcr
sub
mov
push
js
dec
loopne
lock
rcl
lock
xchg
sar
iret
xchg
gs
je
sbb
mov
shl
rcr
adc
pop
or
ror
frstor
push
add
fst
leave
enter
call
inc
push
arpl
mov
stos
pop
ss
mov
xchg
sbb
cmp
cmp
pop
xchg
jg
xor
pop
xchg
ss
pop
mov
xchg
cmp
push
aaa
pushf
sar
imul
xchg
ret
cmove
ins
push
pop
inc
rol
inc
jne
into
popf
stos
(bad)
and
jmp
dec
mul
jge
inc
push
fmul
add
mov
lds
mov
sbb
adc
inc
es
(bad)
loopne
inc
mov
pushf
cmp
add
push
fsub
push
les
pop
rol
push
icebp
lods
lods
xchg
mul
inc
(bad)
and
daa
idiv
push
outs
sar
test
scas
xchg
hlt
pop
mov
test
in
fistp
fdiv
mov
add
xchg
mov
enter
int
dec
movs
aad
mov
push
push
add
pop
iret
cmovns
in
push
lds
scas
cdq
push
cmp
(bad)
iret
popf
xchg
and
fimul
jle
call
pop
lahf
shl
mov
mov
fs
adc
cmp
nop
sub
push
xlat
or
jmp
pop
test
mov
xor
inc
push
xchg
test
js
in
sti
jbe
mov
xchg
loope
es
jae
sbb
push
lahf
(bad)
rcl
jns
shr
clc
mov
popf
fxch
jo
jge
jno
sbb
cli
mov
jmp
clc
add
pushf
dec
push
xchg
leave
cmps
pop
inc
in
xor
inc
push
jnp
(bad)
mov
cmp
fwait
mov
fnsave
pop
mov
and
movs
jp
jmp
loope
jl
add
clc
call
fidivr
sub
jnp
retf
fwait
aam
jecxz
sbb
cmp
repnz
mov
inc
test
ret
movs
or
test
fs
rcr
shl
push
mov
push
bnd
push
(bad)
into
jg
sbb
mov
add
jg
push
out
xchg
repz
push
add
call
popf
push
pop
lds
and
in
call
das
sbb
in
mov
xor
fidivr
mov
and
repz
adc
in
repnz
fidiv
mov
jne
adc
adc
arpl
cmpxchg
fdivr
popa
xor
sahf
mov
push
sti
or
neg
nop
loop
or
sub
stc
inc
retf
int
lds
(bad)
(bad)
rol
shr
jmp
fbld
scas
cmps
pop
xchg
sar
nop
dec
add
xchg
fmul
out
popa
cs
push
leave
cmc
push
call
imul
iret
jmp
(bad)
lahf
js
and
fwait
cli
jae
iret
popa
loopne
push
(bad)
push
(bad)
fwait
stc
div
daa
sahf
adc
mov
cmps
cwde
push
xlat
sbb
sar
jge
neg
inc
stc
in
and
nop
or
mov
inc
mov
xor
ins
cmp
push
imul
push
jp
sub
cmp
pop
add
or
test
scas
cmp
mov
in
les
jle
hlt
xor
cmp
je
add
cmps
mov
sbb
push
fdivr
mov
xchg
jl
push
fld
or
sbb
mov
call
call
mov
adc
sbb
es
mov
(bad)
cwde
pop
in
pop
or
xor
xor
frndint
outs
xchg
pop
jp
iret
xchg
sahf
inc
jae
movs
cdq
rol
xor
mov
sbb
pop
ret
jp
mov
push
jo
adc
cmps
fnsave
outs
add
mov
inc
xor
cmp
scas
dec
cmps
mov
std
cmp
pop
in
xchg
into
int3
xchg
xchg
fldenv
cmps
cmp
ds
fisubr
jne
sub
mov
test
lods
xlat
add
test
ds
arpl
push
add
out
enter
push
pop
mov
shl
retf
and
cmp
inc
hlt
xor
rcl
dec
mov
xchg
mov
cli
mov
adc
push
mov
sbb
mov
pop
lods
mov
sbb
inc
les
fisttp
fild
retf
inc
xor
xor
adc
aad
cmp
inc
push
xor
push
xor
jle
(bad)
push
bnd
jne
repz
hlt
push
add
outs
cmps
frstor
pop
sub
sub
or
push
leave
test
cdq
cmps
adc
int3
inc
adc
iret
out
adc
sub
cmp
push
nop
and
pop
out
js
shl
enter
add
div
sub
das
jmp
mov
(bad)
pop
cs
xchg
add
cmp
jl
and
and
pop
push
mov
fwait
sub
push
jle
aas
mov
fsub
push
or
inc
shr
add
cld
cmp
stos
mov
in
push
dec
ror
movs
sbb
stos
retf
rcr
rcl
mov
or
xchg
cdq
xchg
jmp
mov
push
dec
sbb
dec
stos
sub
jae
xor
mov
dec
sub
push
(bad)
cdq
push
pop
out
mov
xor
lock
mov
clc
clc
adc
push
mov
and
sub
aaa
or
add
xor
cmp
push
movs
arpl
sub
add
es
pop
lds
std
sbb
jmp
icebp
sbb
mov
jmp
repz
adc
inc
push
inc
fstp
xchg
sbb
or
or
xor
push
mov
sbb
mov
stc
xor
inc
(bad)
add
cmp
test
int3
outs
call
psllq
cli
cs
stos
inc
cmps
pop
adc
mov
pop
add
pop
retf
(bad)
lahf
in
adc
repnz
shl
sub
xchg
paddb
aam
xchg
push
nop
lods
sbb
gs
jmp
pop
sahf
and
add
xchg
das
sbb
mov
popa
xor
pop
icebp
ins
pop
cmp
pop
ret
cmp
push
test
retf
cld
retf
not
and
loopne
sbb
outs
pop
(bad)
fild
je
jge
stos
pop
sbb
fnstenv
xor
retf
mov
sbb
loope
ficom
adc
stc
sbb
repnz
jge
jbe
arpl
push
push
push
and
mov
jnp
jbe
xor
dec
mov
sub
es
xor
lea
push
adc
pop
sbb
shl
push
push
popa
and
cmps
aaa
adc
or
and
cmp
movs
xchg
out
sbb
or
test
repz
in
stc
xchg
stos
mov
dec
movs
cmp
dec
inc
push
repz
adc
adc
mov
jno
div
outs
inc
out
mov
push
xor
or
sub
movs
hlt
int3
gs
or
xor
jmp
adc
cmp
xor
mov
dec
mov
cmp
pop
mov
not
dec
push
xchg
movs
push
dec
pop
pushf
pop
fwait
iret
(bad)
mov
sbb
psrlq
xchg
add
ins
sbb
pop
les
dec
jmp
fnsave
jnp
mov
push
out
js
jmp
push
aas
leave
ret
in
jge
fsubrp
movs
ja
inc
xchg
out
frstor
inc
aaa
(bad)
mov
shl
icebp
ins
and
cli
push
loopne
or
mov
into
jnp
stos
cmps
mov
mov
movs
or
mov
repz
inc
hlt
in
daa
das
xchg
dec
mov
add
xchg
jp
mov
or
ins
repnz
sbb
jl
(bad)
fisttp
and
dec
stos
je
push
fbld
pushf
vmovsldup
jge
xlat
mov
(bad)
repz
cmp
call
clc
daa
repz
addr16
inc
subps
jp
xor
retf
lahf
sbb
int
push
adc
xor
icebp
dec
push
inc
cld
repz
cmc
inc
pop
xor
and
pop
je
cmc
push
jg
call
cdq
retf
add
cmp
pop
or
pushf
xor
push
xlat
push
inc
cmovnp
mov
mov
cmp
mov
scas
inc
dec
sbb
push
push
mov
sub
inc
(bad)
and
inc
out
add
ins
cmp
mov
mov
jno
dec
imul
and
pop
jmp
cli
cmps
cli
popa
cmp
jns
(bad)
add
mov
push
call
mov
mov
dec
mov
inc
ret
mov
mov
in
pop
add
adc
loop
jecxz
and
sahf
sbb
neg
xchg
pop
shr
or
cmps
cmp
ins
addr16
mov
push
dec
in
sub
test
adc
aaa
jecxz
cmc
and
inc
fisubr
jl
aam
cwde
add
mov
outs
add
cld
shl
push
xchg
push
and
ss
into
or
dec
aaa
jl
lods
hlt
and
pusha
pushf
cmp
call
scas
add
inc
pop
in
das
mov
push
into
fs
inc
jle
xor
jmp
add
sbb
ret
pop
jecxz
cmp
test
fst
ins
dec
xor
mov
gs
in
popa
sub
pop
add
test
xor
outs
(bad)
pop
mov
cmp
push
add
adc
rol
adc
pop
mov
in
scas
in
sbb
cmp
and
fisubr
adc
push
and
lods
xor
stos
fimul
outs
popa
mov
add
sahf
cmps
scas
sub
inc
mul
push
push
or
pop
dec
lods
cld
dec
mov
mov
jmp
adc
fbld
pop
or
push
ins
cdq
repz
int
xor
mov
cmp
lds
ss
mov
sbb
pop
inc
cdq
ds
(bad)
jmp
retf
dec
loop
cmp
xchg
fxam
add
xchg
sbb
mov
cdq
pop
inc
mov
jp
loopne
and
mov
xor
cmp
xor
xor
fwait
mov
call
shl
jae
sbb
imul
xchg
mov
repz
sub
xchg
call
dec
xchg
add
ficomp
mov
sub
pop
aam
int3
mov
xor
mov
out
mov
xchg
mov
popf
fldenv
mov
xor
and
dec
and
repz
imul
push
ja
add
and
call
movs
mov
cmps
loopne
and
sub
and
es
cli
xor
pop
test
popf
cmp
imul
push
dec
dec
ds
jl
gs
mov
xchg
push
xor
gs
cmc
jmp
mov
(bad)
nop
loopne
add
push
sbb
mov
pusha
pop
aaa
sub
push
pop
mov
js
sub
inc
fst
inc
into
cmps
out
lds
hlt
push
jmp
int
nop
cmp
dec
test
sahf
or
pop
test
jg
dec
cmps
jbe
pop
stc
lea
or
push
mov
xor
xor
clc
add
sbb
mov
jbe
popf
(bad)
(bad)
dec
inc
addr16
push
adc
lock
mov
je
mov
jp
add
jno
ret
xchg
aaa
push
mov
iret
sub
frstor
and
ffreep
lods
mov
mov
cdq
add
cdq
mov
xor
loop
sbb
mov
or
in
mov
adc
mov
sbb
sbb
push
mov
pop
pop
test
dec
imul
pop
add
jmp
mov
xor
pop
push
repz
or
repnz
loop
mov
pop
sbb
lods
in
dec
mov
cmp
push
int3
add
pop
sbb
add
(bad)
in
jo
movs
push
push
hlt
jge
sbb
jge
test
icebp
sbb
and
adc
xchg
lds
xor
mov
pop
push
xor
movs
xor
jp
xchg
lods
fistp
into
addr16
push
mov
je
and
cs
push
sub
xor
daa
sub
lahf
ds
add
push
fnstcw
push
adc
xor
mov
loopne
icebp
cdq
inc
imul
ds
mov
sub
pusha
add
add
xor
xchg
bound
lock
dec
es
xor
test
mov
mov
cmp
pusha
(bad)
jmp
add
je
repz
xchg
sbb
mov
sub
jp
push
pop
movmskps
push
movs
mov
inc
push
xchg
test
nop
repnz
adc
fcmovnbe
aam
cwde
or
daa
out
jmp
out
cmc
ins
addr16
(bad)
(bad)
pusha
(bad)
cmps
bound
ja
push
jns
nop
je
aaa
or
frndint
in
test
(bad)
cmp
retw
inc
jae
mov
sbb
test
(bad)
(bad)
iret
push
call
mov
ins
xor
out
mov
sbb
in
pop
inc
jne
loopne
sub
push
adc
movzx
adc
add
pop
mov
push
in
in
ss
lds
jo
cld
ret
std
mov
pusha
sbb
je
data16
cmp
adc
cmp
jbe
rcl
(bad)
lock
sub
mov
imul
jnp
into
rcr
js
cmc
add
dec
xor
fmul
jbe
pop
xlat
ja
scas
xchg
rcr
movs
mov
mov
push
fs
outs
xor
sbb
push
jge
in
arpl
mov
loop
or
lea
out
cmps
ret
cs
fmul
pop
xchg
in
mov
push
push
ret
add
mov
dec
(bad)
scas
js
lss
pushf
sub
inc
push
movs
mov
push
push
out
xor
mov
add
inc
lahf
int
ss
sbb
push
xor
shl
and
push
mov
imul
sar
add
sbb
mov
inc
cli
dec
(bad)
jbe
fwait
pop
mov
mov
into
mov
aad
(bad)
std
push
pop
sar
fwait
xchg
dec
(bad)
ror
inc
inc
ins
outs
bnd
mov
mov
into
outs
push
idiv
mov
int3
loope
jecxz
imul
jb
movs
out
mov
dec
js
(bad)
loope
ret
dec
scas
lahf
mov
shl
or
pop
shl
cld
pushf
retf
(bad)
and
ins
mov
stos
stc
imul
cmp
mov
aaa
in
dec
inc
into
push
xor
ds
mov
imul
lahf
mov
fistp
and
ins
call
jns
mov
adc
push
push
es
rol
leave
or
push
addr16
aas
dec
cmp
mov
push
push
aam
and
loope
leave
ds
or
loopne
sti
jo
test
pushf
into
pop
sub
fstp
cmps
(bad)
out
sub
mov
cmps
mov
add
imul
push
pop
xor
call
fwait
(bad)
ja
aad
int
adc
daa
push
add
leave
ror
call
js
test
ror
and
jmp
cli
mov
fs
dec
jmp
sub
es
(bad)
hlt
sbb
jno
jg
dec
out
xlat
sbb
(bad)
cmovne
inc
inc
pop
test
and
jmp
dec
cmps
pop
push
pusha
mov
xor
in
test
jo
pop
mov
rcr
ret
mov
mov
adc
jnp
or
ret
(bad)
push
mov
add
pause
pop
pop
imul
std
scas
xor
bound
push
mov
mov
push
xor
cmp
mov
fdiv
(bad)
sbb
out
call
adc
adc
inc
sbb
cmp
(bad)
nop
rol
dec
inc
xlat
imul
iret
pop
inc
sahf
jp
jno
push
add
fsubr
jle
sub
dec
std
das
dec
xchg
popa
int3
loope
pop
push
adc
jmp
jmp
in
push
xor
mov
iret
mov
repnz
xor
mov
cs
cmp
and
popa
dec
pop
dec
pop
jno
call
je
sub
or
in
pop
fiadd
imul
mul
loope
add
adc
sbb
in
mov
xor
cmps
sub
inc
dec
lods
(bad)
jle
mov
sub
adc
dec
pop
popf
cmp
add
movs
vmwrite
mov
xchg
dec
adc
adc
das
jp
popa
adc
aas
mov
pop
cmp
into
jl
iret
loopne
add
fistp
pop
and
xor
daa
outs
push
dec
rep
push
mov
call
stos
lahf
inc
adc
and
test
fidiv
mov
dec
into
push
xor
mov
add
cmp
out
arpl
pop
add
jne
fiadd
cmps
ins
push
add
mov
cmp
cmp
mov
pop
xor
push
adc
call
xchg
mov
arpl
pop
ss
push
into
out
cmps
push
jecxz
inc
xchg
loope
xchg
in
shl
push
stos
retf
stos
jmp
mov
mov
cld
xchg
cmp
aas
push
mov
icebp
add
mov
fimul
data16
push
sbb
imul
iret
add
jp
mov
popa
int
pop
cmc
adc
dec
pop
out
adc
push
cmps
or
mov
addr16
or
mov
jb
jb
jp
das
jl
aad
outs
in
and
cld
push
sub
out
daa
inc
jmp
sbb
clc
loope
mov
pop
sbb
pushf
push
or
or
jecxz
out
hlt
pop
mov
inc
mov
inc
adc
sahf
xchg
aam
mov
mov
mov
mul
ret
pop
xchg
shl
push
enter
in
in
sub
sar
ja
jl
popf
dec
adc
lods
imul
popf
cmp
das
out
enter
ror
pop
dec
cld
in
lea
mov
and
xor
mov
mov
or
fild
mov
dec
movlps
(bad)
rol
jno
out
jl
jns
mov
daa
sub
call
cmp
add
es
and
pop
out
out
xchg
mov
js
in
aad
sbb
int3
shl
adc
shr
dec
ret
xor
or
(bad)
lock
enter
fsub
jb
mov
movs
leave
test
push
neg
push
dec
ds
ins
test
jns
fisub
sbb
dec
dec
pop
rol
into
fsub
push
jg
int3
call
jne
stos
je
jp
call
pop
pop
loope
xor
ror
push
dec
scas
jnp
xchg
jl
mov
sub
out
jnp
fdivr
in
call
popf
nop
stos
aad
add
sub
push
out
aaa
or
data16
sbb
mov
adc
sbb
imul
xchg
jge
stos
sub
mov
jge
xchg
cld
xchg
mov
dec
rcl
gs
mov
push
in
movs
fyl2x
mov
aad
out
scas
retf
rol
jae
jno
mov
cli
dec
inc
mov
lods
test
ret
nop
(bad)
outs
jbe
rsm
leave
mov
inc
outs
pop
or
je
mov
call
mov
jp
mov
arpl
movs
and
not
out
and
sbb
sbb
lea
das
add
mov
xchg
push
or
cmp
lods
mov
mov
fistp
push
jo
(bad)
mov
push
or
outs
cmp
xchg
jp
mov
idiv
ss
cmp
lea
jmp
and
adc
aas
sti
pop
pop
add
push
retf
sti
enter
or
mov
jecxz
inc
idiv
test
and
jp
arpl
into
push
outs
adc
lock
mov
xchg
sub
into
ret
push
jbe
inc
cwde
fisttp
and
xchg
ins
cli
jl
idiv
cmps
sub
xchg
nop
adc
and
arpl
lahf
dec
cmps
mov
cmp
in
int3
push
cwde
pusha
hlt
add
inc
pfrcpit1
dec
movs
fisttp
in
pop
mov
rcr
or
iret
lds
jl
sbb
sub
adc
ins
test
scas
cmp
xlat
mov
inc
adc
pop
add
jb
arpl
gs
push
dec
ret
in
retf
pop
cmps
ret
push
xor
dec
sub
cmc
mov
mov
or
je
cmp
fidiv
pop
js
sub
stc
sbb
jp
into
(bad)
test
scas
ins
pop
sub
repnz
(bad)
xchg
dec
jl
sbb
and
leave
ficom
push
(bad)
jge
xor
scas
or
pop
xchg
mov
add
fwait
rcl
loopne
aam
mov
and
inc
mov
shr
sbb
shl
jle
jmp
push
les
pop
stos
loop
(bad)
pop
mov
sahf
and
push
aaa
jp
xchg
punpckhdq
(bad)
(bad)
sti
push
out
clc
(bad)
imul
test
dec
mov
sub
jle
push
lahf
shr
pushf
xchg
imul
xchg
test
out
and
mov
test
gs
je
mov
scas
push
inc
add
cmp
ins
mov
pop
scas
fwait
mov
call
or
bswap
fistp
(bad)
jmp
mov
push
int3
std
jmp
sub
push
(bad)
and
mov
mov
mov
inc
cmp
cs
mov
jo
inc
jbe
cmps
std
rcl
(bad)
int3
xor
fisub
push
sbb
test
dec
lock
xor
sbb
loope
cmp
je
adc
pop
dec
test
loope
pop
push
mov
js
push
pop
xor
inc
inc
pop
jl
mov
mov
inc
add
stc
jae
adc
jbe
sahf
dec
ror
clc
cdq
cs
jl
pop
rol
mov
in
inc
test
std
jne
es
(bad)
enter
mov
pop
das
pop
sub
push
push
in
pop
mov
pop
add
and
repz
stc
jmp
mov
mov
push
push
mov
dec
xor
in
(bad)
iret
xchg
dec
lahf
mov
test
mov
jge
add
lods
ja
jne
les
xchg
adc
adc
push
and
call
mov
fs
test
pop
loopne
mov
popf
retf
test
jl
lds
mov
xor
jne
hlt
pop
dec
mov
(bad)
pop
xchg
xor
push
out
pusha
inc
mov
ins
jmp
mov
or
adc
inc
sbb
add
jmp
mov
push
jmp
imul
in
sub
and
fwait
aam
mov
xor
cmp
inc
fidivr
sbb
out
mov
mov
pop
add
or
jge
sub
push
aam
pop
in
(bad)
call
shrd
pop
mov
popa
fs
or
or
mov
jo
mov
jle
inc
xor
and
sbb
ja
lock
dec
add
xor
mov
sti
push
in
mov
out
xor
sub
add
or
out
push
push
aam
jo
in
lods
xor
dec
(bad)
icebp
loopne
and
xchg
or
sbb
mov
bound
dec
inc
cdq
repnz
jnp
dec
add
sbb
sub
aas
xchg
inc
imul
es
lods
(bad)
xor
push
je
jl
test
fadd
cld
js
dec
dec
mov
add
jae
adc
ret
sbb
xor
dec
xor
jno
int3
dec
stos
int
daa
adc
retf
pop
push
xor
mov
lods
call
pop
fstp
pop
push
cmp
sub
push
rcr
mov
das
pop
adc
fldenvw
xchg
dec
sbb
cmp
test
inc
xchg
icebp
(bad)
mov
loope
xchg
push
mov
dec
js
jae
xchg
or
dec
mov
push
test
add
popf
das
or
add
movs
inc
(bad)
(bad)
jnp
jmp
cmp
imul
imul
call
xchg
in
sub
sbb
lds
or
sub
ror
push
mov
or
les
or
or
sti
push
clc
loop
test
xlat
sahf
aaa
mov
push
mov
pop
je
adc
jmp
cmp
pusha
test
xchg
sub
xor
out
shl
ret
enter
inc
jo
js
mov
jecxz
jo
aas
push
mov
cmp
mov
sbb
inc
iret
push
mov
xchg
cdq
dec
add
ins
(bad)
dec
dec
les
rcr
ret
pop
xor
inc
push
aam
leave
fsubr
data16
jmp
gs
and
pushf
test
push
into
dec
inc
imul
pop
js
pop
and
es
and
mov
push
sub
inc
adc
and
dec
mov
jg
push
jo
pop
mov
xchg
std
into
lds
xchg
inc
push
mov
sbb
jmp
dec
sub
jg
cli
loop
jno
pushf
mov
call
mov
and
dec
xor
inc
and
mul
inc
bound
push
jns
test
clc
push
add
lods
pop
cwde
jo
push
push
repz
adc
add
adc
or
inc
into
lods
lahf
xchg
test
pushf
ror
stos
in
sub
jbe
push
loopne
push
cmps
pop
std
pop
fsub
js
inc
cli
popa
das
je
mov
pop
jecxz
pop
or
pop
imul
pop
pusha
rol
jle
or
xchg
push
mov
jo
retf
and
test
mov
test
pop
jmp
into
neg
mov
pop
aas
jl
test
and
loopne
sbb
aam
mov
popa
popf
adc
push
or
out
dec
adc
dec
dec
test
xor
or
jmp
test
dec
push
lea
cmps
xchg
mov
inc
movs
sub
mov
(bad)
jne
fistp
test
mov
push
out
into
adc
shl
pop
xlat
inc
int
sub
or
and
pop
dec
lds
mov
or
mov
jge
test
shr
into
aad
push
mov
pop
dec
pop
inc
lods
dec
repz
xchg
shl
imul
daa
sub
mov
add
mov
jge
(bad)
pop
popa
mov
stos
pop
xchg
sti
ins
ror
mov
xchg
push
ret
jns
jp
cs
sub
xor
inc
mov
or
xor
lock
movs
cmp
mov
test
ror
mov
xchg
mov
jle
cmp
ror
outs
push
cdq
lods
and
mov
fld
cmp
push
add
adc
(bad)
mov
sti
dec
inc
push
inc
dec
adc
call
mov
dec
jns
imul
jnp
adc
jo
pop
pop
sub
mov
push
pop
sub
ror
retf
jnp
out
xchg
leave
call
mov
dec
jno
out
gs
pushf
push
into
sahf
xlat
xor
out
std
popa
mov
movs
mov
scas
and
aam
out
inc
mov
cli
fbld
mov
aam
jns
sub
add
inc
lahf
inc
jo
jnp
mov
cmp
cmps
das
mov
sub
(bad)
pop
xchg
adc
aam
inc
dec
hlt
outs
xlat
mov
rcl
inc
push
mov
es
aaa
(bad)
iret
mov
test
mov
mov
or
ja
cli
cvttps2pi
iret
shl
sbb
add
adc
jne
push
int3
shl
jnp
push
stos
aas
(bad)
call
mov
push
arpl
aam
pop
ficomp
leave
fwait
xor
inc
aaa
cmp
jb
sti
outs
inc
xchg
adc
movs
lods
dec
mov
push
mov
test
jno
xor
mov
xor
cwde
inc
imul
icebp
or
push
inc
mov
out
ds
test
loopne
pop
rcr
bnd
imul
dec
sub
ins
xchg
inc
mov
pop
jo
dec
mov
cmp
mov
sar
aaa
sbb
test
sub
xchg
and
mov
(bad)
daa
inc
cmps
inc
idiv
ror
cli
cmp
mov
jle
bound
in
jmp
or
in
ret
cld
outs
loope
mov
push
in
sub
out
sub
jo
adc
mov
mov
cmps
retf
xor
push
xor
rcr
pop
hlt
out
sub
sti
dec
pop
lahf
in
cmc
ss
cld
mov
dec
xor
fwait
mov
push
call
in
jmp
fld
mov
pop
js
das
aaa
jne
outs
inc
ret
aam
mov
jmp
sar
and
ds
pushf
xor
push
mov
icebp
sub
mov
lods
out
sub
xchg
test
imul
jne
dec
js
and
xor
push
popf
test
call
sbb
mov
mov
scas
inc
nop
imul
sbb
out
rcl
and
xchg
dec
test
push
xor
push
lods
inc
xchg
mov
mov
in
dec
mov
add
in
xlat
xor
cmp
imul
fwait
fs
pop
pop
outs
loop
popf
popf
sub
add
jg
retf
push
sub
leave
or
ins
cwde
pop
jle
in
popa
dec
popf
arpl
jno
mov
dec
sbb
jns
loopne
xchg
clc
retf
xor
outs
cmp
cmps
adc
stc
jo
ret
dec
lea
dec
add
mov
mov
cmp
adc
push
adc
xchg
jl
add
pusha
mov
adc
jne
mov
or
pop
pop
jnp
adc
mov
cs
jae
jl
rcr
jnp
leave
dec
pusha
inc
pop
pop
cdq
pop
inc
xor
jmp
pusha
movs
hlt
sub
inc
xor
fistp
int
je
cmp
xchg
mov
and
retf
push
ins
call
ror
loop
maxps
mov
jno
adc
popa
in
fstp
fmul
mov
popf
mov
xor
std
aam
shl
(bad)
dec
xor
out
sbb
int
mov
ins
mov
and
repnz
xor
in
push
inc
out
aaa
and
fs
into
ror
ss
xlat
and
lahf
minps
nop
mov
jg
inc
sub
(bad)
lods
mov
xor
mov
data16
(bad)
cmp
inc
sub
lock
jl
fmul
std
test
pop
or
cmp
jle
inc
jb
pop
or
xchg
pop
cmp
aam
xor
mov
cmp
popf
and
inc
outs
sbb
mov
int
cmp
aaa
imul
sbb
inc
es
add
fild
jnp
jns
mov
(bad)
cmp
rol
push
lods
int3
popa
fld
dec
(bad)
xchg
push
and
stc
cmp
pop
jns
mov
adc
cmp
sbb
xor
dec
js
retf
imul
mov
cmps
add
pop
(bad)
dec
jp
js
dec
mov
push
and
loopne
mov
mov
xchg
xchg
sub
call
push
jg
js
jno
(bad)
rol
dec
lock
(bad)
cwde
loopne
test
add
mov
test
pop
sti
enter
ror
add
mov
pushf
push
mov
xor
icebp
xchg
or
xchg
cs
shr
ror
nop
movs
sbb
sbb
adc
mov
test
movs
(bad)
mov
jns
fdiv
fbld
pushf
cmp
jne
push
int
xchg
jnp
bound
cmp
ret
arpl
mov
mov
cmp
or
mov
fs
jle
movs
xor
and
lods
mov
out
cmps
cdq
dec
inc
lods
adc
int3
xor
cmp
js
jecxz
(bad)
dec
adc
mov
or
test
and
pop
ss
test
es
retf
jb
adc
je
xchg
dec
adc
shl
call
xor
test
jg
jle
jle
mov
retf
hlt
out
add
mov
and
fwait
mov
or
repz
jne
xor
or
inc
lods
sub
sahf
sbb
cmp
sub
mov
mov
jmp
fbld
stos
push
pop
clc
sbb
xchg
and
imul
or
pop
xor
pop
ret
mov
mov
jg
add
daa
fwait
lods
xor
in
popa
mov
xor
mov
cli
addr16
push
mov
aad
mov
jmp
in
cs
aad
mov
or
mov
in
jns
enter
ror
sub
jno
repz
jg
mov
or
jbe
rol
sub
rcr
clc
lds
adc
mov
jmp
hlt
lea
sub
cmp
das
and
mov
ss
adc
lods
js
push
jns
mov
mov
jne
loop
test
or
mov
retf
icebp
push
aad
and
fimul
mov
xor
movs
cmp
and
sar
(bad)
shr
scas
in
mov
xchg
(bad)
dec
inc
xor
mov
mov
jecxz
jb
popa
imul
xchg
jae
call
add
shl
xchg
mov
idiv
outs
fmulp
or
mov
shl
out
into
inc
jmp
and
sub
mov
mov
data16
mov
or
pshufw
pop
pushf
mov
cli
mov
push
shl
pop
imul
ds
mov
out
ror
mov
mov
jnp
and
xchg
xor
data16
(bad)
dec
jecxz
sub
mov
pop
hlt
in
outs
mov
adc
scas
adc
push
jl
add
sbb
push
mov
dec
sar
push
jmp
and
mov
add
sub
cmp
mov
scas
jae
sbb
shr
iret
pop
(bad)
int3
add
add
cmp
arpl
movs
adc
add
jecxz
jp
and
fwait
push
rcl
or
and
dec
xchg
lahf
pop
inc
mov
cmp
leave
ret
sub
test
sub
pop
jns
dec
mov
xchg
fistp
lods
add
mov
pop
test
xor
seto
out
or
cmc
mov
push
pop
das
shl
or
and
sbb
inc
push
mov
dec
mov
adc
bound
movs
dec
fidivr
push
rcr
sub
imul
or
clc
jl
jmp
movs
mov
mov
outs
mov
sbb
jl
push
adc
ja
mov
sub
ret
jecxz
xchg
jae
adc
clflush
add
(bad)
adc
xchg
sbb
fwait
xor
or
call
popf
add
mov
pop
cmp
push
stos
ss
and
adc
or
xchg
ror
ins
and
ret
cdq
cmp
out
inc
sbb
(bad)
fdiv
dec
xor
or
pop
pop
arpl
rol
dec
sbb
mov
loope
rcr
xchg
lea
mov
sub
mov
mov
and
add
js
sub
and
jbe
push
fbstp
cwde
mov
rol
sbb
lds
and
mov
int
sbb
mov
rol
jmp
xchg
sbb
mov
lods
std
lods
push
ret
mov
fcomp
pop
aam
movs
xor
xchg
add
ret
cmp
and
mov
mov
(bad)
or
enter
ins
loopne
mov
and
movs
lock
sub
cmp
fs
jmp
jb
mov
sbb
sub
xchg
jmp
inc
adc
(bad)
jl
xor
rcr
add
data16
mov
and
xor
ret
push
ror
inc
inc
dec
pop
cmp
pop
cmp
sub
mov
push
test
and
(bad)
icebp
stc
ficom
push
popa
sbb
es
sbb
pop
out
mov
lock
push
movs
call
sbb
adc
dec
(bad)
mov
rcl
mov
jo
xchg
adc
cmp
cmps
push
jbe
out
sub
mov
push
pop
inc
sub
xor
pop
sahf
jg
test
adc
fwait
lock
aad
adc
dec
xchg
mov
out
test
imul
adc
fadd
loope
push
sbb
add
cmp
adc
jge
adc
dec
add
out
cmp
call
inc
(bad)
add
daa
mov
dec
fs
pusha
pop
xlat
xor
inc
add
fisub
nop
aas
ss
shl
aad
sbb
push
dec
repz
push
ins
js
out
inc
sbb
jle
jmp
jmp
push
add
mov
ficom
sbb
out
ret
xor
and
pop
dec
mov
mov
sub
and
adc
rol
jmp
and
pusha
xor
adc
xor
cmp
std
or
adc
xor
ds
jnp
mov
ins
ja
xchg
std
xchg
aam
ja
xchg
push
popa
add
dec
out
add
outs
out
bound
fld
int
das
inc
ss
test
xor
push
pop
adc
fadd
test
or
icebp
movs
loop
sbb
repz
lods
mov
jo
(bad)
int
push
xor
mov
daa
cmp
mov
mov
push
retf
mov
call
push
ror
lds
xchg
ds
add
(bad)
dec
pop
ds
shl
mov
iret
jns
inc
in
repz
jne
sbb
or
es
aas
mov
in
adc
movs
push
mov
fisubr
dec
clc
xor
jmp
mov
pop
add
cmp
dec
jp
arpl
icebp
(bad)
imul
xor
push
mov
out
mov
push
pop
or
mov
mov
nop
lds
jge
loop
loop
push
xor
mov
mov
add
lahf
sar
push
push
sbb
and
mov
movs
sub
lock
(bad)
pop
push
xor
fisttp
add
pop
push
xor
cs
ret
repz
add
cli
cmp
lea
dec
sub
jecxz
cmp
xor
inc
call
cli
fnstsw
bound
jae
das
adc
sbb
mov
cmp
push
stos
lds
daa
daa
sub
je
sub
mov
mov
mov
mov
popa
xchg
push
sbb
mov
outs
jae
inc
cmp
or
fisubr
aaa
out
or
mov
mov
lea
push
or
loope
cwde
ret
adc
pop
addr16
jno
cs
or
fmul
aas
jmp
mov
inc
xor
xchg
dec
mov
mov
dec
cmp
movs
or
outs
xchg
retf
or
cdq
ret
mul
sbb
mov
retf
xor
call
imul
fisttp
in
dec
and
push
fnstenv
lock
mov
daa
sbb
ret
cmp
mov
fwait
push
es
pop
clc
cmp
adc
or
call
xchg
fsub
adc
ins
std
and
ret
mov
ret
mov
sub
or
fstp
push
retf
push
addr16
jbe
xor
ret
stc
scas
push
leave
push
icebp
mov
jno
cmp
das
xor
and
xchg
xor
jmp
push
ja
pop
cmps
in
jl
push
xchg
gs
in
push
mov
pop
push
retf
xchg
ret
pop
loope
bound
and
dec
cmc
aam
aam
mov
fst
jae
das
mov
inc
test
gs
push
dec
repz
xchg
dec
xor
outs
sub
int3
dec
and
test
out
mov
mov
push
out
arpl
mov
lods
push
xchg
or
jb
push
mov
stc
imul
addr16
in
jo
mov
cwde
pop
nop
push
lods
inc
stc
enter
(bad)
mov
mov
mov
adc
or
xchg
scas
shl
sar
fs
and
jno
je
mov
pop
push
loopne
mov
dec
loopne
test
imul
jl
or
pusha
pop
inc
ret
inc
mov
mul
mov
out
out
je
or
pop
mov
and
mov
sahf
fstp
mov
jb
jg
rcl
add
adc
pushf
pop
scas
cmps
imul
mul
push
jecxz
push
adc
jl
pop
sub
popf
cdq
push
inc
inc
add
add
arpl
mov
adc
out
loope
hlt
add
cs
add
xchg
ins
sbb
fisubr
mov
enter
push
aas
ficom
sahf
loopne
cmp
push
inc
xchg
sbb
cs
(bad)
inc
adc
pop
or
adc
add
sub
mov
call
in
ret
pop
fcomp
xchg
mov
sbb
arpl
ja
jp
jae
cmp
pusha
add
int3
loop
in
cs
cli
fst
ins
fldenv
push
push
or
call
mov
sti
gs
dec
mov
xor
(bad)
mov
cdq
push
jmp
push
push
push
mov
arpl
push
inc
stos
adc
and
sbb
mov
inc
sub
jmp
(bad)
jo
movs
stos
adc
push
add
xor
and
mov
cmps
stos
jl
xchg
sub
pop
inc
xchg
mov
xchg
add
sub
jecxz
sbb
sub
cld
repnz
pusha
nop
or
test
pop
jae
jns
mul
rol
lahf
cmp
push
pop
xchg
jbe
adc
jmp
sar
pop
sub
pop
lahf
stos
mov
lahf
mov
adc
add
sbb
dec
hlt
cmp
add
loop
add
or
cmc
push
push
pushf
pop
mov
and
xor
add
imul
jnp
clc
mov
inc
lds
xchg
xor
and
out
push
popa
popf
add
cmp
in
inc
mov
xchg
inc
sub
dec
sub
mov
inc
jbe
les
enter
arpl
mov
xor
adc
jno
xchg
repz
aad
push
ins
mov
bound
fdivp
les
mov
into
sub
sbb
push
sar
dec
push
jmp
cs
scas
pop
pop
cwde
int3
jns
test
scas
sahf
mov
mov
nop
jno
ja
cdq
lock
jmp
xchg
movs
xlat
dec
movs
mov
ficomp
imul
fcom
cmp
mov
ret
loop
push
call
test
xchg
jecxz
jp
sbb
bound
es
cmp
in
adc
in
xchg
shl
cld
jle
cwde
idiv
ds
cld
adc
add
xor
push
mov
push
pushf
(bad)
(bad)
in
xlat
or
stc
movs
add
xor
icebp
push
pop
xchg
popa
inc
push
inc
lock
ja
xchg
add
adc
rcl
imul
mov
inc
aaa
fldcw
pop
ds
jmp
cmp
pop
(bad)
mov
cli
dec
jno
adc
sbb
xchg
imul
mov
xor
(bad)
sub
ins
xchg
mov
out
pop
mov
pusha
xchg
mov
leave
lea
inc
movs
mov
mov
xchg
sub
dec
(bad)
mov
add
cwde
jle
xor
hlt
es
pop
sub
dec
sbb
ja
mov
jo
sbb
mov
mov
mov
add
out
push
mov
sub
imul
test
sub
pop
mov
sbb
jo
lods
rol
cmp
mov
adc
pop
sub
mov
mov
aas
cmps
cmp
dec
fld
es
out
pop
or
test
xchg
jae
aam
mov
cld
xchg
fnstenv
sar
jp
push
mov
adc
fisubr
imul
(bad)
dec
ret
sbb
jg
aad
xor
or
lods
sbb
pop
sbb
je
outs
mov
push
mov
loop
cmp
cwde
cli
pushf
sbb
push
or
mov
pusha
inc
cli
push
scas
cmp
mov
ins
in
pop
pop
xlat
push
in
push
adc
ins
shl
xchg
cmc
fdivr
mov
push
fsubr
loop
sbb
scas
ror
mov
cmp
and
or
rcl
(bad)
fdivp
xchg
hlt
stos
int3
mov
mov
mov
rol
push
pop
call
lods
dec
mov
ret
imul
mov
adc
inc
imul
(bad)
out
je
add
lods
test
mov
or
pop
lea
pop
push
scas
sub
pop
hlt
call
adc
sub
jns
add
stc
stos
mov
jmp
ss
dec
retf
les
pop
(bad)
mov
dec
loopne
out
pop
mov
mov
inc
addr16
or
pop
fbstp
popf
jp
icebp
xor
int
push
push
inc
pushf
ins
xor
mov
or
lea
xor
fmul
std
xchg
pop
out
leave
out
sbb
and
jecxz
in
imul
mov
in
lahf
call
cmp
outs
stos
popa
push
clc
or
inc
mov
fistp
addr16
imul
shl
jg
xchg
les
daa
fwait
push
push
test
cmp
mov
fsub
xchg
lods
add
test
fcmovu
xor
dec
mov
ja
getsec
enter
aas
sub
cmp
movs
and
add
arpl
cmp
ror
sar
xor
and
or
mov
and
daa
mov
cmp
into
mov
and
test
sub
mov
loope
push
cmc
adc
outs
mov
ja
xchg
adc
xor
and
(bad)
sbb
lahf
je
shl
push
dec
scas
inc
sbb
fisttp
xlat
jnp
ss
sub
jae
push
push
push
mov
sub
and
push
lods
or
jno
gs
push
gs
cmps
push
push
mov
outs
mov
shl
cmps
fild
adc
cmp
popf
sub
int
add
in
sub
shr
jnp
ret
(bad)
push
pop
jno
push
cmp
jg
arpl
jp
jl
jne
rcl
xor
adc
call
pusha
iret
shl
sbb
inc
or
add
cmp
(bad)
jb
fidivr
clc
cmc
les
in
cmps
sbb
lods
jns
cmp
pop
sti
ds
adc
sbb
in
mov
imul
sbb
sub
jo
fdivr
bound
pop
mov
gs
mov
jge
gs
bound
lock
pop
sub
(bad)
loop
mov
add
rcl
sub
mov
aad
inc
call
mov
push
cmp
dec
jp
ds
les
mov
sub
inc
test
ja
adc
mov
lea
in
or
ss
and
icebp
shr
cld
inc
mov
jnp
shl
cli
add
add
clc
int3
or
gs
inc
bound
jp
movs
add
push
enter
popf
(bad)
push
fwait
jge
ss
jmp
cmp
inc
and
add
fild
mov
add
xchg
dec
out
stos
les
dec
or
push
pop
cmp
mov
xchg
lods
mov
aaa
dec
adc
jae
les
mov
add
mov
lar
jb
aas
fdivr
cmp
(bad)
retw
xlat
pop
adc
fimul
jb
fwait
sub
mov
ret
sbb
xchg
adc
mov
fimul
push
hlt
dec
mov
jno
gs
ja
ret
sbb
in
or
sbb
dec
int
cmp
gs
stc
leave
push
sub
xchg
sahf
add
jnp
icebp
mov
(bad)
jne
and
in
cmc
pop
push
sub
stc
cmp
mov
add
pushf
xchg
push
or
(bad)
push
loopne
mov
dec
push
mov
mov
jae
je
jne
fldcw
sahf
mov
test
hlt
mov
out
gs
sbb
adc
lds
or
pop
xor
das
ss
push
and
movs
les
cli
and
or
fucom
fwait
and
fstp
sbb
xor
mov
sar
xor
push
pop
cmc
pop
mov
and
or
adc
mov
xchg
ja
ror
jle
mov
pushw
imul
sub
repnz
pop
xor
ins
pusha
test
xor
push
out
fsubr
jbe
jb
lds
xor
arpl
loope
add
push
sub
loop
out
movq
dec
xor
not
ins
sub
and
jge
xor
xor
sub
cwde
inc
jb
cld
inc
pop
and
loop
push
push
mov
iret
cli
int
mov
leave
stos
jge
inc
ins
push
in
int3
sub
popa
popa
popa
adc
jo
jge
and
sub
xchg
dec
jmp
(bad)
xchg
dec
in
or
movs
jecxz
dec
xchg
dec
jno
ja
push
sub
not
shr
test
mov
(bad)
adc
adc
jae
fiadd
cwde
imul
in
icebp
sub
(bad)
in
cmc
lock
ins
mov
add
mov
and
out
in
xchg
push
in
pop
daa
mov
mov
hlt
sub
(bad)
inc
out
push
out
dec
inc
std
dec
idiv
jmp
in
mov
sbb
mov
idiv
mov
pushf
mov
xor
loope
jle
ficomp
mov
dec
stos
mov
jb
lea
lods
add
cmp
pop
cmps
xchg
push
test
pop
js
jp
fisttp
jmp
mov
idiv
mov
mov
(bad)
or
or
push
movs
adc
mov
stos
xor
adc
xor
sbb
xchg
pop
stc
mul
movs
test
pop
sub
push
int
imul
xchg
cmp
fbstp
xlat
mov
pop
ret
xchg
(bad)
icebp
ds
fs
shr
outs
stc
mov
pop
and
jp
out
shl
sbb
xchg
or
rcr
fs
push
and
je
(bad)
push
or
rol
adc
ins
dec
and
xor
push
in
add
jp
push
aas
push
adc
sahf
or
adc
ret
cwde
xor
adc
push
push
test
(bad)
adc
sahf
js
dec
cs
es
imul
pop
mov
push
cdq
cmp
push
and
js
add
lds
pop
push
cmp
and
adc
dec
(bad)
fistp
xchg
cmps
push
mov
fimul
or
mov
dec
pushf
xchg
sbb
test
mov
(bad)
dec
rcr
xchg
aad
cmp
xchg
adc
jle
jmp
xchg
sbb
das
and
lock
push
xor
jno
in
out
arpl
pop
add
ror
mov
adc
jns
mov
arpl
jo
idiv
in
test
dec
mov
cld
xchg
retf
xchg
out
adc
adc
repnz
mov
fbld
shr
test
in
int
cmp
mov
and
pop
mov
adc
mov
sub
rol
adc
xor
mov
adc
xor
or
jae
outs
jae
sub
std
xchg
test
push
aas
sbb
imul
push
in
add
fsub
cmps
push
add
bound
pop
out
test
xchg
int
mov
stc
inc
and
and
mov
jle
fidiv
jno
loope
xor
movs
dec
inc
mov
fdivr
stc
add
pop
in
add
fwait
movs
adc
mov
or
xor
or
sahf
mov
daa
shr
mov
add
xor
dec
mov
jmp
inc
and
jbe
mov
mov
dec
mov
add
mov
adc
out
les
shr
repnz
xor
xchg
pop
mov
push
shr
lea
mov
sbb
aas
mov
jno
outs
clc
mov
xchg
sahf
cld
repnz
std
xchg
imul
(bad)
jecxz
adc
mul
popa
add
mov
pushf
and
add
cmp
cld
movs
cmc
movs
in
test
ins
pop
mov
mov
cmp
test
fs
adc
out
mov
outs
inc
aaa
sbb
pusha
add
(bad)
icebp
push
cmp
aad
cmp
inc
jns
pop
adc
push
sub
scas
mov
mov
mov
lds
lods
mov
aaa
aad
out
push
inc
sbb
sub
jle
and
js
out
stos
inc
adc
popf
sub
and
and
and
div
cmps
push
dec
push
rcl
inc
xchg
fisttp
dec
pop
xchg
or
sub
cmps
adc
push
and
push
loop
push
inc
fstp
stos
test
push
inc
pop
stos
mov
bound
inc
xor
aam
push
inc
sbb
pop
jb
cmc
cmc
popa
outs
xchg
push
pop
jns
sub
pop
aaa
pushf
loope
es
ret
sub
leave
dec
add
jmp
xor
push
leave
sub
in
sbb
addr16
gs
je
adc
sub
sub
fadd
lahf
cmp
fld
and
mov
nop
mov
iret
sbb
cmp
out
fistp
mov
outs
xchg
adc
cmp
inc
jo
xchg
aam
enter
loope
sub
dec
ds
jg
sub
pop
mov
and
jnp
add
sub
and
out
lock
leave
mov
add
pop
mov
sti
sbb
les
mov
ins
dec
adc
cmps
jle
out
inc
mov
movs
push
adc
cmp
div
dec
push
nop
in
push
mov
mov
jmp
(bad)
push
fdivr
in
cli
inc
bnd
inc
leave
adc
sub
in
lahf
mov
xor
movs
push
in
inc
mov
or
aam
cmp
test
cmps
push
ins
aas
jp
push
leave
lock
push
lea
or
shl
mov
xchg
imul
call
pop
popa
push
inc
aam
mov
dec
test
fsub
mov
xor
(bad)
sbb
dec
retf
push
je
lods
mov
mov
jmp
sub
push
pop
cld
div
adc
test
mov
adc
jg
add
jo
repnz
stc
gs
xlat
push
inc
or
fdivr
push
and
xchg
cld
into
mov
xchg
mov
or
inc
out
mov
jne
lea
fdiv
std
sub
loope
pop
mov
dec
aad
pop
pop
jg
pop
clc
(bad)
int3
push
add
not
stc
mov
das
fyl2xp1
mov
mov
mov
cmp
mov
jmp
cmp
out
fiadd
xchg
sbb
sbb
mov
cs
ins
rcr
mov
retf
cmp
xchg
mov
fistp
rcr
lahf
xchg
sub
xchg
adc
mov
push
ja
sub
jo
xor
in
and
je
pushf
int3
cmp
add
push
neg
pop
push
(bad)
popf
or
mov
fisub
shl
cmp
out
mov
icebp
inc
pop
sub
jl
adc
pop
sbb
sbb
rcr
add
inc
and
cs
stos
maxps
cdq
ja
push
fidivr
out
das
jb
dec
cmc
icebp
and
stos
and
in
enter
daa
jns
sbb
lock
jno
mul
mov
sub
inc
sahf
fs
jmp
cmp
(bad)
arpl
mov
test
out
dec
sahf
out
addr16
frstor
sahf
pop
or
cdq
mov
loopne
sbb
arpl
or
push
repnz
push
sbb
rcr
push
inc
mov
das
xor
mov
out
xor
pop
jmp
out
shl
lods
sar
dec
js
inc
xor
xor
frstor
jo
add
lahf
(bad)
scas
mov
pusha
arpl
out
jb
cmp
or
shl
das
add
mov
mov
dec
int
cmps
and
mov
scas
mov
or
loop
sbb
outs
cmp
dec
adc
pusha
jne
scas
stc
out
mov
mov
out
icebp
dec
adc
xchg
mov
and
xchg
mul
or
fisttp
in
cmps
pop
xor
shl
adc
push
sbb
jnp
pushf
lds
xchg
mov
xor
sar
(bad)
movs
pop
in
out
mov
push
ficom
xor
jle
aaa
mov
iret
pop
cmp
pop
xor
das
in
inc
loop
mov
pop
push
xchg
stc
loope
rcl
and
mov
enter
imul
fnsave
test
mov
mov
les
cmp
enter
pop
enter
scas
mov
retf
pop
aam
cmps
cmp
push
xchg
jecxz
jo
movs
add
dec
sbb
add
stc
add
std
mov
stos
cs
sub
cmc
pop
push
add
in
pop
or
cld
push
call
jbe
(bad)
std
pop
dec
pop
cmp
in
mov
cmp
out
dec
mov
(bad)
adc
jno
gs
push
dec
retf
fist
dec
in
sbb
leave
lods
xchg
lock
jge
out
cdq
repnz
push
pop
jmp
cmps
jbe
dec
rcr
xor
stc
or
dec
repnz
frstor
xor
xchg
mov
ror
out
hlt
mov
shr
retf
out
call
pop
mov
jecxz
mov
xor
ss
xlat
and
and
movs
in
ds
in
scas
sub
dec
sub
popa
ror
push
je
icebp
sti
sbb
push
cmp
mov
sbb
dec
mov
test
test
mov
cmp
adc
fwait
cmp
adc
mov
push
xor
jns
add
outs
dec
jo
aam
cmp
hlt
cdq
push
scas
pop
inc
call
push
xchg
and
xor
jb
cmp
arpl
xchg
stos
test
xchg
out
pop
rcl
adc
and
jnp
sbb
pop
bound
xor
xchg
test
sub
aaa
(bad)
push
test
mov
mov
loope
fsub
out
mov
mov
fild
push
ffreep
aad
or
or
cmp
pop
test
cmps
sbb
aam
sub
repz
mov
or
mov
jo
xor
cmp
cmp
mov
push
rol
mov
fsubr
or
mov
adc
pop
outs
mov
jo
jne
cwde
jl
les
inc
mov
adc
out
mov
in
cmp
and
scas
in
adc
and
sbb
inc
push
jb
sub
sar
addr16
cdq
dec
adc
sbb
mov
int
ins
dec
out
mov
add
in
xor
cs
adc
daa
sub
adc
adc
data16
loopne
push
xchg
popf
jnp
or
sub
adc
sub
push
stc
scas
push
out
push
mov
or
shr
je
mov
push
and
dec
loop
sub
xor
xor
push
cmp
adc
clc
inc
and
push
enter
ja
ret
lods
cmp
call
xor
or
js
test
mov
adc
inc
adc
xor
(bad)
pop
sub
pop
in
and
out
sbb
dec
sbb
sbb
xchg
ret
in
out
int3
push
xor
sbb
loopne
imul
jg
dec
pushf
add
test
push
nop
out
push
mov
jo
ja
and
mov
mov
movs
cld
pop
cmp
add
loopne
and
and
aad
imul
test
mov
inc
inc
ds
cli
loope
rol
mov
inc
pop
out
xor
popa
push
mov
add
dec
xchg
mov
jnp
sub
xlat
shl
setp
jmp
sar
fldcw
in
call
or
or
xchg
fdivr
(bad)
mov
mov
mov
je
mov
or
push
das
add
mov
sub
hlt
cwde
or
dec
mov
loop
sub
or
cwde
cmp
iret
xor
loope
jno
aam
or
push
mov
stos
scas
pop
fwait
in
or
scas
and
jnp
rcr
adc
cmp
out
adc
pop
sub
mov
jo
aas
scas
cdq
clc
pop
cs
inc
imul
fisttp
fs
rol
(bad)
je
inc
jmp
lock
and
sbb
xor
inc
push
rcl
cld
xor
cmp
inc
outs
pop
cmps
sub
and
jae
sbb
push
mov
inc
pushf
mov
out
popa
push
cmp
dec
add
(bad)
out
pop
add
xor
sahf
or
jnp
sub
xor
mov
mov
mov
stc
add
mov
popf
jno
mov
imul
ror
ins
or
xchg
ja
and
adc
xchg
pusha
pop
cmp
or
test
cdq
retf
add
(bad)
fstp
cmp
jmp
ficom
lods
jmp
lods
jns
(bad)
stos
dec
cmp
add
retf
dec
ds
or
or
fld
push
int
dec
ss
jbe
lods
dec
cmps
in
push
loop
je
inc
add
arpl
jae
mov
and
push
inc
stc
jbe
add
fisttp
sub
or
mov
xor
dec
ret
or
ror
or
sbb
lock
ret
shl
jmp
rcr
pop
xor
cmp
mov
mov
test
test
push
jl
jno
sub
cli
mov
add
popa
jmp
cmps
outs
push
push
add
push
pop
add
xor
xchg
fstp
pop
dec
int3
inc
inc
imul
mov
adc
mov
gs
sub
mov
push
adc
cmps
push
add
lds
sub
(bad)
jecxz
mul
cdq
adc
jmp
jno
sbb
in
mov
ins
xchg
mov
movs
xchg
xor
sbb
push
sar
push
cmp
fist
ror
data16
lahf
add
pop
clc
pop
nop
xchg
dec
mov
cmps
hlt
outs
shr
nop
pop
pop
push
repnz
pushf
and
shl
lods
movs
dec
adc
mov
shl
jmp
adc
dec
dec
sbb
(bad)
not
cmp
cmc
into
mov
sbb
pushf
es
inc
or
jmp
in
gs
mov
push
and
lock
mov
or
push
adc
ficom
sbb
(bad)
leave
in
fild
and
popf
stos
push
lea
js
ret
pop
pop
xchg
cld
nop
movs
call
das
dec
mov
ins
jmp
cs
dec
icebp
pop
shl
jnp
sbb
adc
mov
cmp
pop
pop
scas
mov
fdiv
loop
sbb
push
gs
mov
ror
sub
mov
hlt
std
inc
pop
in
pop
push
test
add
sar
and
das
cmp
imul
call
mov
shl
(bad)
sti
sbb
mov
xchg
sbb
ror
xor
add
mov
pushf
clc
pop
(bad)
mov
jbe
je
sbb
fnstcw
out
jb
adc
lahf
ja
inc
and
jmp
mov
push
call
data16
test
test
push
test
adc
es
bound
xchg
mov
paddusb
pop
call
pop
cwde
sub
and
shl
aaa
mov
push
xchg
daa
push
xchg
push
xor
enter
fistp
push
and
repz
mov
shr
pop
scas
sub
outs
lods
enter
pop
xchg
push
xchg
xor
outs
sub
cmp
ret
xchg
jmp
jno
mov
jg
jns
pop
jecxz
hlt
add
or
dec
dec
scas
loopne
inc
mov
add
loop
sbb
je
and
xchg
loopne
push
inc
xor
adc
adc
fs
dec
push
add
fs
mov
dec
mov
mov
std
imul
imul
jmp
inc
add
lods
sbb
sti
and
nop
ds
sub
sahf
test
pop
mov
mov
aas
les
sbb
js
jbe
cwde
sub
stos
out
inc
inc
sar
aaa
sbb
test
add
sub
in
lods
gs
cmp
adc
(bad)
fdiv
stos
adc
(bad)
(bad)
mov
mov
into
shl
mov
(bad)
xchg
inc
dec
movs
mov
inc
push
xor
mov
mov
loop
jns
push
pushf
sbb
icebp
pop
xor
dec
lea
jmp
dec
and
(bad)
repz
inc
jo
sahf
hlt
sub
ds
sar
dec
mov
xchg
mov
iret
push
cdq
rcl
lea
movs
leave
fwait
jecxz
xor
pushf
out
inc
xchg
test
shl
and
outs
add
mov
sbb
sub
daa
rcl
addr16
das
lock
pop
sub
xchg
ret
cmp
sub
push
leave
adc
gs
addr16
inc
js
jmp
fmul
(bad)
cmc
mov
or
test
pop
or
xchg
arpl
add
(bad)
call
les
push
and
pop
sbb
cwde
sbb
adc
lds
adc
mov
frstor
mov
sub
in
cmps
cmp
xchg
add
nop
mov
imul
hlt
mov
mov
pop
jnp
dec
cmp
push
cmp
and
sti
data16
sub
mov
xor
and
pop
mov
adc
and
jae
cmp
imul
bound
mov
outs
cdq
cmp
push
pop
push
adc
js
dec
mov
aam
mov
xchg
les
popf
shl
mov
inc
imul
inc
nop
stc
jne
jmp
jo
jno
out
xor
pushf
pop
mov
ds
jp
and
mov
sub
add
aaa
js
add
test
xchg
leave
pop
es
and
cmp
lods
aad
xchg
add
add
nop
sbb
gs
mov
mov
retf
sbb
xor
and
pop
sbb
add
out
and
int
int3
(bad)
in
or
mov
cmps
pop
push
loopne
xor
aaa
mul
dec
push
and
stos
pop
and
and
or
mov
sbb
add
cmp
imul
add
or
push
push
xchg
inc
ja
sbb
jmp
dec
and
jl
repz
mov
jmp
cwde
cdq
mov
inc
cmps
inc
retf
std
movs
adc
fdiv
leave
push
jmp
mov
shr
ret
call
stos
cmp
cdq
mov
pushf
mov
arpl
dec
jno
and
out
add
loope
push
ja
repz
pop
shr
inc
cwde
add
or
in
sar
and
loop
cmp
mov
out
(bad)
cmp
ret
arpl
leave
push
xchg
out
ret
jmp
nop
scas
fwait
lods
and
mov
mov
xor
(bad)
(bad)
(bad)
sar
sti
jmp
xor
mov
daa
or
inc
jae
cmps
dec
push
or
in
loope
jne
inc
cli
add
inc
in
mov
cdq
test
out
test
cld
in
popf
jo
hlt
sbb
jmp
pop
loopne
push
ds
mov
and
pop
sbb
pop
arpl
dec
xor
and
and
(bad)
jmp
mov
inc
popf
sub
clc
mov
adc
or
dec
ins
sub
out
int3
xchg
ror
cwde
call
sti
in
test
pop
and
pop
adc
add
adc
popa
fisub
pushf
aaa
loopne
pop
xchg
push
and
xchg
lods
or
fnstcw
mov
lds
sahf
out
hlt
xchg
jae
push
push
pop
aam
retf
add
not
or
aam
es
push
xchg
das
mov
ficom
dec
iret
popf
xchg
jp
xchg
push
and
add
popa
imul
in
addr16
inc
repnz
or
inc
cmps
jl
jg
das
(bad)
inc
(bad)
sbb
xchg
aaa
lods
ins
mov
mov
mov
ins
mov
push
sahf
xchg
mov
mov
jmp
and
(bad)
dec
adc
mov
ret
jae
and
inc
daa
mov
cli
or
into
clc
push
mov
daa
pop
fdivr
xor
imul
fsubr
mov
aaa
cmp
pop
or
jns
fstp
mov
pop
jecxz
mov
call
data16
out
fidiv
cmp
mov
je
jbe
xor
jno
jbe
std
int
cmp
add
add
mov
loopne
or
clc
add
arpl
out
pop
or
call
mov
dec
push
fisttp
scas
xor
in
mov
sar
jb
cli
int3
test
fnstenv
mov
nop
fstp
nop
iret
scas
repz
(bad)
aam
jno
test
jmp
int3
ins
and
retf
cmc
jnp
(bad)
add
movs
aad
addr16
or
cmc
mov
xchg
lock
adc
movs
out
int
add
loop
jae
ins
cmc
dec
shl
je
xor
imul
push
frndint
mov
mov
cmp
inc
dec
mov
retf
dec
adc
sbb
dec
cli
xchg
leave
push
pop
hlt
imul
xchg
xor
cmps
xor
cmp
nop
or
es
pop
adc
dec
test
mov
icebp
in
lods
scas
pushf
rol
push
sahf
(bad)
sub
xchg
mov
and
mov
loope
sub
fld
cmp
cld
cmp
lea
pop
fcomp
cmp
into
lea
mov
jmp
lods
jne
inc
aaa
loop
aas
inc
and
inc
jbe
fisttp
lds
into
mov
movs
outs
fld
jbe
lahf
pop
inc
jnp
jmp
xor
lahf
and
sahf
into
lock
shr
sti
out
in
es
nop
mov
mov
imul
stc
aas
jo
rol
jp
cmps
ds
fwait
xchg
adc
or
xor
lock
movs
ror
gs
jg
adc
aam
and
jo
mov
imul
test
movs
mov
leave
mov
pop
cs
sbb
mov
aas
popa
push
iret
xchg
imul
inc
push
call
jns
fwait
adc
sbb
repz
fimul
into
cmc
add
leave
jbe
cmp
lea
xchg
clc
fadd
pop
pop
pop
xchg
inc
jg
inc
inc
jmp
push
aad
ja
or
jge
xor
and
mov
in
lods
loop
les
xchg
push
ror
adc
into
imul
xor
dec
sub
outs
push
add
sbb
jl
aam
xor
mov
hlt
je
jns
dec
out
cmp
outs
stos
scas
ss
rcl
adc
push
stc
adc
inc
xor
push
test
cmc
pop
lock
ins
retf
js
adc
xor
jno
cmp
icebp
in
popf
cmp
hlt
xor
adc
(bad)
shl
out
ds
dec
push
push
(bad)
lods
sub
out
cmp
sub
and
loopne
bound
inc
dec
pushf
mov
smsw
lahf
std
popa
nop
rcr
loope
mov
out
push
cmp
cmp
call
test
or
or
pop
or
aad
rcr
(bad)
nop
js
inc
mov
push
repz
cmc
inc
sar
push
dec
retf
bound
lds
xor
cmps
pop
shl
int3
lods
scas
bound
push
inc
pop
stc
jae
mov
fs
adc
jp
mov
out
ins
jle
pop
in
xchg
shr
mov
xchg
(bad)
clc
jl
iret
mov
mov
movs
xchg
or
test
cld
mov
sbb
lahf
jmp
out
xchg
adc
and
repnz
cmp
pusha
adc
js
std
fdiv
xor
lahf
xchg
xchg
retf
nop
jbe
test
stos
(bad)
mov
xchg
mov
adc
xchg
pushf
xor
and
xchg
xchg
adc
sahf
mov
fwait
mov
push
fld
out
fistp
jp
out
inc
push
out
dec
and
retf
jecxz
or
xchg
(bad)
aaa
xchg
jle
outs
xor
sub
sbb
out
jge
push
int3
imul
in
sub
pop
fwait
mov
das
cwde
pop
push
fisubr
jg
pop
(bad)
or
retf
dec
cmp
fwait
add
xchg
and
sahf
xchg
cli
push
mov
(bad)
ins
cmp
pushf
xor
jmp
aas
ror
cmovge
pop
test
jno
mov
(bad)
xchg
scas
adc
dec
cdq
jecxz
push
bound
cli
(bad)
addr16
xchg
mov
loop
sub
or
mov
lods
push
jg
(bad)
fild
lods
xor
(bad)
xchg
cwde
fdivr
xchg
mov
aas
jns
mov
jnp
daa
and
imul
ss
ds
cs
mov
jno
mov
mov
pop
add
dec
mov
sbb
loop
dec
fisub
repz
jp
xchg
push
into
adc
push
sbb
iret
fbstp
mov
lods
cmp
fstp
aaa
dec
or
jo
sti
mov
popf
jmp
out
(bad)
hlt
cmc
aas
cmp
sbb
push
pop
push
push
mov
jbe
cmps
lahf
sub
xor
pop
js
sbb
xor
out
jge
jnp
ret
xchg
xchg
fistp
enter
xor
jbe
ja
dec
arpl
adc
fld
xchg
push
leave
sub
or
fnsavew
aam
test
jmp
jo
movups
mov
enter
adc
jne
dec
inc
cli
ds
inc
mov
mov
jmp
stc
jbe
push
or
fist
jae
mov
adc
daa
into
in
pop
mov
pop
jecxz
imul
jnp
icebp
cli
xor
mov
push
das
and
out
or
loop
mov
jb
inc
add
cwde
pop
test
mov
cmp
(bad)
popf
sbb
xchg
sub
test
jae
mov
loope
xchg
lock
loopne
inc
xchg
pusha
or
sbb
jg
jae
pop
out
push
mov
(bad)
not
addr16
out
add
jmp
call
(bad)
xchg
test
in
and
retf
and
pop
mov
mov
add
or
add
mov
xchg
daa
(bad)
popa
(bad)
mov
sub
loop
add
adc
mov
test
mov
mov
inc
(bad)
xchg
iret
mov
mov
in
loopne
pusha
xor
mov
jmp
or
or
cmp
add
mov
fild
mov
scas
cs
repnz
xchg
push
js
shl
jnp
aas
or
daa
xor
test
das
icebp
adc
pop
push
xchg
fisubr
lods
(bad)
xlat
ins
cmp
push
or
mov
fwait
cmp
and
retf
cs
sahf
(bad)
jge
pop
fmul
nop
and
pop
cmp
pandn
loope
add
xchg
(bad)
ds
xor
push
jmp
or
jmp
and
and
jne
mov
inc
cmc
imul
mov
inc
mov
es
mov
aad
ja
add
sub
cmc
xchg
mov
push
out
in
push
shr
in
mov
mov
pop
stos
pushf
cs
iret
(bad)
sub
aas
lock
mov
(bad)
mov
lods
jne
inc
movs
inc
mov
je
mov
sbb
jl
push
shr
shr
pop
movs
add
dec
pop
jl
repz
bound
stc
repnz
leave
call
pop
out
xor
pop
loope
push
adc
test
adc
lods
fisubr
fisttp
je
push
xor
pop
adc
adc
sti
pop
or
inc
and
or
mov
faddp
mov
xor
mov
pop
outs
adc
adc
div
ds
pop
cmp
dec
xchg
std
xor
dec
push
cmp
inc
xor
sbb
xor
cld
sbb
push
pop
jle
retf
inc
mov
daa
push
or
push
fsubr
adc
repz
sbb
push
sub
icebp
daa
inc
aad
popa
jmp
test
in
mov
in
mov
and
out
inc
or
sub
pop
not
mov
or
cmp
jae
inc
mov
clc
sub
arpl
push
cmps
or
test
inc
pop
imul
lods
mov
jl
xor
mov
shl
ret
out
clc
mov
(bad)
add
ja
dec
rcl
aam
fcmovb
jmp
dec
arpl
leave
mov
pop
xchg
aaa
ins
data16
add
mov
inc
adc
jns
pop
mov
jns
jne
retf
fnsave
dec
push
mov
push
push
ror
movs
or
add
sbb
inc
(bad)
std
scas
mov
mov
or
fnstenv
addr16
fdiv
pop
clc
out
scas
rol
xchg
dec
dec
xchg
cmp
fimul
int3
shr
jg
dec
test
xchg
leave
sbb
std
pop
mov
mov
lea
jle
scas
adc
ret
cmp
adc
aam
ins
dec
xchg
imul
std
retf
test
rcl
pop
mov
lods
in
add
push
aaa
lods
sbb
xor
sub
or
jae
mov
xchg
out
mov
mov
mov
fwait
jmp
in
xlat
sub
addr16
loopne
xchg
jns
push
push
es
out
pop
(bad)
sub
jmp
sub
inc
cdq
push
test
ds
lods
out
int3
jle
arpl
add
(bad)
das
pop
xchg
frstor
cmp
lods
aam
movs
sub
ins
add
jge
inc
mov
xchg
mov
ds
push
test
call
push
jp
icebp
ins
cmp
popa
fs
push
push
inc
rcr
ja
(bad)
pop
pop
repz
aas
mul
test
lods
fs
fmul
loop
mov
das
mov
fs
mov
mov
dec
ds
les
push
jp
add
and
xor
dec
jbe
repnz
adc
and
ins
repnz
adc
push
nop
rcl
leave
xchg
or
rcr
jne
aas
leave
imul
cld
xchg
lahf
addr16
mov
(bad)
std
loop
cmps
inc
clc
mov
hlt
shld
jp
cmp
dec
or
push
mov
cmp
test
ret
xchg
cwde
push
inc
ret
leave
fld
mov
mov
inc
fst
push
out
mov
imul
daa
pop
adc
clc
cli
clc
dec
add
loopne
ret
xor
jno
imul
pop
pop
stos
pop
cs
hlt
iret
loopne
lahf
leave
ret
dec
inc
and
mov
sub
dec
pop
repz
pop
test
addr16
adc
xchg
dec
cmp
jg
call
push
icebp
imul
dec
cmp
lods
in
leave
outs
xchg
lea
xchg
inc
mov
push
scas
leave
loop
pop
and
out
mov
mov
ins
mov
cli
or
cmp
mov
cmc
mov
mov
stos
fs
int3
test
xchg
sbb
(bad)
shl
bound
fwait
outs
adc
jp
mov
(bad)
cld
inc
stc
enter
out
mov
sbb
mov
loopne
fisttp
aam
std
sub
retf
inc
dec
push
enter
cmp
xchg
pop
aad
push
sbb
(bad)
mov
dec
(bad)
fyl2x
xlat
adc
jge
stos
push
enter
ret
sbb
xchg
adc
dec
mov
xchg
loop
stc
ja
mov
adc
adc
mov
in
push
mov
mov
adc
push
popa
push
xchg
mov
mov
mov
loop
scas
test
add
jp
push
fsubr
xor
sbb
rcr
dec
popa
ret
leave
mul
pop
in
cmp
gs
dec
stos
shl
pop
xchg
and
and
jmp
pop
and
jo
xchg
sbb
in
jl
nop
inc
icebp
or
sar
mov
fisubr
jle
retf
jmp
pop
xlat
adc
lea
cs
aad
ja
add
xchg
test
xchg
and
dec
out
pop
dec
aad
cmc
test
pop
ss
out
cmp
pushf
outs
xchg
or
pop
adc
adc
jbe
pop
ds
in
cli
add
xchg
add
arpl
or
hlt
jg
push
cmp
aad
sbb
daa
push
jge
popa
in
lds
fwait
clc
mov
ins
mov
cmp
jle
jp
add
jns
aaa
shl
clc
retf
jl
and
xor
jle
cmp
dec
mov
push
enter
repz
(bad)
lds
retf
test
mov
adc
adc
push
and
mov
(bad)
in
dec
(bad)
jnp
pop
dec
sbb
inc
push
xchg
shr
and
mov
xchg
jns
mov
xor
add
xor
outs
lods
push
push
and
imul
das
jno
cdq
xchg
sbb
ja
mov
enter
aas
popa
es
and
pop
in
ds
or
xlat
cmp
and
les
into
das
mov
dec
les
xchg
scas
enter
popa
jbe
stos
out
adc
sbb
ret
addr16
int
fwait
cmp
loopne
je
pop
inc
xor
and
pop
lds
sbb
mov
xchg
sahf
cmc
(bad)
and
fwait
out
(bad)
push
mov
adc
and
or
mov
mov
push
sbb
nop
arpl
add
lea
stos
in
sbb
lahf
(bad)
neg
or
pop
ja
jb
push
adc
retf
push
mov
(bad)
(bad)
push
jmp
mov
adc
inc
inc
imul
and
pusha
js
sub
daa
or
imul
test
jb
and
xchg
call
pop
leave
jecxz
nop
ror
ret
pop
dec
mov
call
bound
lods
repz
sub
fwait
outs
pusha
add
mov
ss
ds
jmp
jl
icebp
in
cmc
mov
(bad)
in
fs
push
mov
pop
aam
aad
gs
fist
add
push
pop
jbe
outs
es
xor
popa
dec
stc
les
sbb
test
ror
icebp
test
not
mov
ins
adc
mov
add
call
stc
ins
mov
test
add
bound
les
int3
jp
pop
jecxz
int3
sub
cmp
bound
mov
dec
xchg
mov
adc
mov
dec
mov
call
inc
sub
ror
stc
imul
shl
aaa
or
cmp
push
movs
ror
mov
jo
jb
aad
cmp
jo
outs
shr
fldl2t
imul
push
cli
imul
js
fcom
std
nop
fucomi
shr
sub
call
mov
sbb
stos
data16
xchg
dec
sbb
les
imul
jno
mov
sub
sub
in
in
daa
and
xor
movs
mov
add
push
lea
les
sti
sbb
test
inc
call
ja
fucomi
clc
adc
xchg
dec
fldenv
fld
sub
in
mov
push
xchg
pop
dec
int
daa
jmp
hlt
or
xchg
xor
xchg
hlt
jae
jle
outs
dec
jae
add
outs
out
daa
loope
or
adc
adc
ror
in
and
push
repnz
sar
lods
sti
in
sahf
scas
outs
jbe
les
mov
icebp
retf
cmp
add
lds
adc
call
ret
adc
mov
ja
popa
mov
jne
(bad)
mov
sti
add
test
mov
sbb
scas
repnz
and
push
aam
and
arpl
jecxz
bound
in
jl
je
jmp
dec
mov
icebp
cs
stos
data16
sahf
mov
in
cwde
popa
enter
cmp
xor
and
add
inc
jle
mov
mov
push
mov
fucom
nop
xor
mov
cs
add
pusha
xchg
(bad)
dec
lea
call
lds
adc
aaa
and
imul
imul
adc
jge
aad
or
mov
push
inc
hlt
or
imul
(bad)
pop
pushf
mov
mov
mov
lahf
or
or
gs
and
mov
or
jle
imul
fwait
ret
mov
pop
loope
scas
xchg
movs
fsubr
xor
in
lods
mov
call
push
pop
jp
retf
cmp
icebp
mov
jg
hlt
mov
push
cwde
test
push
test
xor
xchg
arpl
sbb
stos
mov
mov
sbb
pop
cmp
call
mov
enter
loopne
mov
scas
add
loopne
ret
cwde
movs
mov
xchg
adc
or
lea
mov
or
or
xor
cmp
mul
mov
mov
jge
movs
push
out
sbb
or
loop
js
xor
push
push
aas
jl
mov
inc
dec
jno
(bad)
mov
cmp
fimul
loop
ficomp
xchg
outs
and
pop
xor
or
xor
or
test
jmp
out
sub
xor
push
hlt
loopne
test
hlt
cmp
jae
fist
cmp
jo
pop
inc
and
inc
push
bound
clc
(bad)
repnz
cli
ins
mov
add
mov
sbb
jmp
fidivr
and
in
or
popa
in
adc
cmp
mov
(bad)
out
or
in
out
adc
(bad)
push
call
and
imul
icebp
mov
sub
ds
inc
mov
jmp
call
cmc
xor
cmp
rcl
sub
lds
sub
ds
retf
test
mov
(bad)
cmc
jmp
div
cwde
push
adc
sbb
shl
out
jecxz
pop
test
popa
or
xor
add
neg
xchg
int
or
cmp
push
sub
mov
xor
out
inc
jb
inc
mov
pop
addr16
test
xchg
and
nop
and
sbb
cmp
pop
xor
hlt
push
xchg
and
push
cmp
xor
or
fld
lods
and
iret
inc
(bad)
or
push
pop
mov
lock
repnz
lods
mov
(bad)
jmp
add
add
or
fadd
fwait
enter
leave
sub
test
daa
jmp
movs
aaa
out
frstor
sub
adc
adc
ja
xchg
inc
fwait
movs
jle
xchg
shr
or
xor
mov
sbb
retf
daa
lahf
sub
push
(bad)
lea
sub
fwait
std
pop
fild
mov
mov
shr
mov
in
mov
sti
test
cmp
mov
sbb
mov
mov
mov
pop
mov
div
adc
and
and
shl
push
hlt
outs
cmp
jmp
sub
mov
repz
sbb
or
ins
repz
fcom
mov
dec
inc
mov
sub
loopne
xchg
cmc
in
mov
jo
jge
cmp
xchg
jle
jbe
nop
cmp
outs
mov
rcr
repz
(bad)
shr
ud2
push
sbb
jecxz
lods
popf
and
cmp
ds
shl
mov
out
push
jmp
dec
mov
jmp
xor
fucompp
ficom
jbe
mov
call
pop
xlat
test
push
fs
inc
iret
and
adc
xchg
cmp
or
and
imul
xor
add
mov
mov
shl
push
out
lods
jp
push
push
loope
push
mov
add
fldenv
mov
xchg
lods
es
int
sbb
fist
out
add
mov
je
add
adc
lahf
xor
retf
into
sti
repz
test
pop
dec
gs
pop
jmp
ins
xchg
inc
(bad)
and
mov
and
aas
cdq
jl
dec
out
arpl
dec
mov
mov
inc
adc
add
test
mov
lds
jmp
sti
pusha
call
aam
cs
adc
and
push
mov
shl
inc
cmp
popa
or
sub
add
shr
ret
imul
in
mov
pop
arpl
cmc
loope
in
lds
jecxz
int3
loope
or
mov
sub
lahf
jae
sti
call
and
popa
lds
dec
js
inc
sub
mov
xor
cmp
mov
div
adc
xor
sbb
sbb
movs
stos
adc
jno
fs
mov
adc
xchg
imul
imul
push
push
mov
nop
pop
fdivr
cmp
test
std
sub
jge
pusha
adc
fmul
adc
fiadd
daa
ins
cmps
pop
add
popf
add
js
xchg
sbb
xchg
in
call
xchg
and
repz
loope
lock
stc
or
or
add
jl
subps
sbb
(bad)
icebp
clc
jmp
xchg
ins
dec
shl
jns
(bad)
pop
retf
iret
nop
add
in
lds
test
enter
mov
add
cmp
in
(bad)
ss
and
pop
loopne
jne
outs
popa
stc
mov
sbb
fcom
nop
dec
iret
imul
es
jge
fst
sub
mov
test
retf
data16
dec
cwde
xor
xor
inc
mov
and
and
sub
or
sub
or
jmp
xor
xlat
push
outs
jb
int3
int
xor
sbb
cmp
push
sbb
jmp
out
and
mov
vpavgw
inc
popa
inc
sbb
mov
jb
mov
enter
scas
xor
or
cli
lods
in
sub
iret
mov
pop
mov
loope
push
jl
or
stc
cwde
mov
fwait
dec
push
push
pop
pop
jge
ror
imul
outs
adc
cmp
xchg
out
cmp
push
pop
lds
inc
or
mov
inc
ins
and
test
inc
aam
call
fdiv
lea
xchg
mov
pop
lods
shl
xchg
(bad)
test
jnp
call
sahf
popa
pop
sahf
out
pop
sbb
fdivr
push
mov
sub
shl
arpl
es
in
ins
and
aaa
push
cmc
inc
sub
int3
ror
adc
mov
stos
test
(bad)
adc
loop
fldenv
mov
(bad)
mov
adc
test
stos
inc
test
cmp
add
cs
inc
ja
ds
or
ret
sub
pop
imul
jmp
je
dec
loope
loop
or
sbb
ret
std
ret
xor
push
push
cdq
nop
cmp
(bad)
ss
jmp
mov
loope
cmp
jnp
dec
pop
jecxz
imul
jmp
push
add
sti
cld
jmp
shl
dec
push
jecxz
nop
pop
jnp
xor
je
inc
test
or
pop
xchg
shr
(bad)
popf
pop
std
fsub
adc
xor
stos
adc
inc
or
inc
hlt
mov
fimul
mov
xor
je
xchg
mov
mov
outs
sub
pop
cmp
test
cmps
test
fcomp
xchg
xor
add
dec
and
inc
cdq
xchg
pop
arpl
inc
iret
fld
loope
xor
dec
jmp
pop
dec
cwde
loope
push
nop
and
dec
xchg
ja
ins
mov
xor
outs
or
inc
jae
pusha
push
fwait
push
out
pushw
fnstenv
sub
sub
fmul
inc
pop
dec
dec
adc
cmp
lea
imul
in
pop
mov
(bad)
and
shr
aaa
sbb
xor
sbb
int
push
mov
not
xor
or
mov
scas
push
cdq
imul
js
dec
and
icebp
pop
mov
inc
mov
int3
inc
mov
push
movs
popf
aam
or
enter
pop
cdq
iret
je
fild
sub
mov
ss
pop
sbb
dec
cs
fld
cmp
xchg
aaa
mov
jno
cli
or
arpl
idiv
mov
mov
iret
xor
imul
out
xchg
ja
inc
cs
daa
daa
(bad)
jb
js
inc
mov
imul
cmp
popf
mov
push
dec
xchg
bnd
adc
fidivr
jmp
dec
es
loopne
mov
cwde
add
dec
lea
inc
jle
cli
xor
movs
xor
sbb
mov
das
(bad)
xlat
into
sar
out
clc
dec
pop
cmc
sti
dec
mov
mov
push
test
and
jl
jmp
sub
movs
or
xor
outs
js
gs
push
pop
clc
shl
xor
cmps
mov
rol
jnp
sub
cld
out
xchg
and
test
add
or
add
ret
jnp
out
dec
icebp
movs
jle
sbb
loopne
in
cmps
and
out
ss
leave
out
pusha
mov
fcomp
cmp
outs
and
and
cmps
adc
cmp
movs
test
mov
ret
inc
sbb
fnsetpm(287
aas
icebp
ficomp
mov
(bad)
loopne
inc
mov
cwde
mov
mov
jbe
xchg
jp
popf
nop
inc
cwde
pop
repz
idiv
inc
clc
retf
pop
push
imul
add
sbb
scas
and
popf
imul
sar
add
fwait
je
movs
jnp
loopne
jle
mov
sbb
dec
les
pusha
xchg
call
cmp
pop
inc
dec
call
sbb
sbb
dec
in
xchg
bound
xchg
int3
adc
sub
push
out
mov
add
ret
mov
pop
fs
int3
mov
cmp
imul
mov
clc
mov
out
cmp
sub
cs
stc
jmp
stc
loope
xchg
aad
mov
cdq
mov
inc
mov
test
fstp
adc
lahf
mov
jnp
stos
or
mov
jne
cmps
sbb
push
jmp
mov
pop
push
es
add
mov
(bad)
fs
and
fsubr
mov
icebp
mov
cvtps2pi
shl
sbb
and
bnd
xchg
inc
ror
push
sahf
dec
daa
iret
sbb
xchg
in
xchg
ins
cmp
mov
pop
pop
xor
test
stc
out
in
add
push
push
stos
mov
pop
mov
call
xor
nop
(bad)
movs
xchg
xchg
outs
adc
xor
(bad)
movs
ja
sbb
fdivr
xchg
and
xchg
fucom
pushf
mov
adc
fcmovnb
data16
pop
jae
mov
fstp
fwait
dec
pusha
pop
and
test
test
and
pop
ret
mov
aas
mov
das
sar
std
add
jg
pop
call
xor
dec
rcr
jle
mov
jmp
inc
pop
dec
stc
adc
or
sbb
jnp
shl
push
adc
mov
scas
or
mov
mov
sub
popa
test
cs
rcl
fiadd
fdiv
popfw
mov
pop
fmul
jmp
int
sub
retf
inc
mov
adc
dec
aas
mov
repz
dec
std
xchg
inc
mov
and
dec
dec
pop
mov
pop
neg
inc
push
xor
or
in
(bad)
cmp
jb
cmps
add
and
jno
mov
stc
sbb
mov
imul
pop
std
ins
(bad)
push
xor
imul
daa
les
inc
mov
mov
push
jg
push
arpl
jmp
mov
leave
cwde
mov
in
test
cmc
imul
and
mov
and
jp
and
jmp
xchg
sahf
fnstsw
jge
fsubr
jle
popf
mul
dec
pop
mov
and
xchg
ja
xor
icebp
test
jmp
dec
aas
cli
fild
adc
imul
jge
mov
push
sti
lahf
jnp
or
stc
xchg
inc
mov
mul
aad
inc
js
dec
mov
nop
scas
sub
push
scas
imul
cs
push
inc
or
lds
sbb
rol
(bad)
test
lds
loopne
aam
mov
mov
repz
shr
sahf
and
mov
cmps
outs
inc
adc
(bad)
in
hlt
pop
call
mov
or
je
lods
pop
and
addr16
pushf
jle
mov
push
mov
scas
adc
fidiv
xor
add
cs
std
retf
mov
sar
outs
push
add
(bad)
sar
es
imul
jmp
cmps
clc
std
out
cld
mov
loopne
jbe
cld
popf
int3
daa
mov
rol
outs
out
das
inc
mov
sbb
mov
cs
or
call
out
jecxz
(bad)
ds
adc
pop
mov
mov
inc
cld
adc
pop
call
cmc
retf
mov
mov
shl
outs
xor
mov
adc
xor
test
lods
dec
or
sub
mul
pop
sar
cmp
pop
cld
mov
cwde
fist
les
pop
add
mov
mov
sub
cmp
sar
add
inc
mov
jmp
adc
into
jae
jae
sub
jb
movs
mov
jmp
push
stos
loop
out
retf
ds
push
jns
or
jne
cld
xlat
xchg
mov
aam
in
lahf
and
push
pop
ror
cmp
xchg
sbb
xchg
dec
cmp
pop
cmp
cs
add
repz
add
mov
sbb
sub
dec
jmp
cmp
popa
enter
dec
xor
mov
and
xor
stos
mov
xor
pop
aam
retf
movhps
loopne
cld
xor
(bad)
jl
mov
mov
(bad)
jmp
enter
scas
add
mov
xchg
in
lods
mov
cmp
cs
fdivr
dec
inc
xor
push
cmp
stos
pop
test
mov
fisttp
and
inc
mov
or
mov
fsubr
sub
dec
das
pop
fld
repnz
xor
shl
lahf
lock
pop
mov
jb
jnp
xadd
xchg
lds
pop
mov
stc
jno
cmps
pusha
addr16
dec
(bad)
cmps
outs
mov
xchg
jge
in
lods
push
add
fnstsw
ins
jp
(bad)
sbb
lahf
push
dec
shl
lock
mov
mov
sub
cmps
cmps
sahf
es
push
cmp
loopne
xchg
scas
xor
int
pop
(bad)
loopne
outs
ja
lds
or
icebp
xchg
test
stos
aam
retf
add
push
mov
(bad)
pusha
cmovno
into
mov
rol
stos
call
jns
loop
psrlw
mov
xchg
dec
ret
add
enter
sti
pop
in
nop
jns
xchg
call
push
or
loopne
(bad)
adc
movlhps
stos
(bad)
out
xor
aaa
push
ds
test
fidivr
cdq
add
push
inc
add
adc
jg
xor
sbb
mov
stos
jo
je
or
adc
popa
or
jbe
repnz
xchg
add
adc
add
lock
scas
pop
or
jnp
mov
pop
cs
jo
pop
or
dec
sbb
dec
add
icebp
in
mov
jl
xor
fidiv
out
jp
or
mov
push
xchg
or
into
pop
push
in
pop
cdq
push
push
out
xchg
add
imul
ffree
push
sbb
jg
push
mov
pop
add
pushf
scas
sub
movs
mov
(bad)
mov
xchg
mov
adc
dec
mov
ret
sar
icebp
cmp
and
mov
xor
cmps
sar
adc
xchg
mov
and
sahf
push
pop
and
aaa
outs
je
sti
pop
cmp
mov
mov
pop
jecxz
in
sub
xchg
add
add
inc
call
popa
sbb
(bad)
mov
loop
sub
out
std
push
xchg
jmp
outs
scas
and
scas
adc
mov
add
xor
inc
bound
sbb
sub
add
outs
adc
pop
(bad)
repnz
lahf
xchg
sti
ret
sbb
call
shr
xor
fsub
cwde
xor
xchg
cwde
popf
or
test
movs
es
pushf
pusha
pushf
sub
cmp
pop
fistp
loopne
int
out
pop
sub
ret
mov
or
mov
push
cld
dec
ret
cmp
cmp
out
jecxz
test
inc
mov
imul
rcl
cdq
arpl
das
lods
ss
lds
test
mov
push
pushf
lahf
es
sub
(bad)
dec
mov
addr16
pop
dec
dec
enter
mov
fiadd
push
loop
leave
ret
xlat
sahf
adc
xor
(bad)
xor
add
daa
rcl
or
pop
xor
or
sbb
sbb
test
int
or
adc
or
jmp
daa
xor
push
mov
mov
les
je
(bad)
adc
mov
add
cmp
test
xchg
adc
adc
lahf
xlat
mov
lods
movs
sub
inc
(bad)
(bad)
aas
pop
inc
cs
fsubr
or
outs
mov
pop
mov
fdiv
push
cmp
jb
cmp
pop
into
pusha
jnp
mov
inc
js
cld
imul
jmp
inc
xchg
cmps
jne
jnp
movs
inc
ret
fldl2t
adc
mov
mov
mov
(bad)
pop
sub
inc
stc
popf
pop
jg
mov
xchg
mov
mov
call
mov
push
pop
ret
(bad)
hlt
jb
repnz
sbb
mov
or
mov
sahf
retf
and
xor
(bad)
fnsave
test
test
xor
stc
xor
outs
xor
je
pop
jnp
test
ins
sbb
cdq
test
or
jecxz
jp
add
push
adc
cmp
mov
aaa
imul
out
lea
sar
pushf
bound
xor
sub
cdq
mov
scas
sub
or
in
or
shl
and
sbb
push
stc
mov
(bad)
in
das
sub
sahf
add
mov
dec
cmc
dec
add
repnz
hlt
(bad)
rol
inc
pop
dec
xor
dec
sar
jno
(bad)
bnd
shr
jecxz
push
push
arpl
enter
stos
call
fstp
push
mov
jmp
scas
or
push
dec
xchg
loopne
xchg
push
int
ds
fidivr
mov
cmp
add
pop
pop
jae
push
jmp
fstp
cwde
cmp
or
jb
aam
sti
dec
cmc
dec
jne
retf
data16
pop
in
or
dec
div
mov
add
inc
push
mov
and
xlat
push
xlat
push
xchg
std
xor
sbb
mov
and
inc
mov
call
mov
or
mov
vmaxss
jb
or
dec
ss
adc
dec
sbb
bound
push
push
add
sub
adc
sbb
cwde
xor
xchg
out
fild
call
sbb
sub
jle
or
and
jae
ins
add
iret
or
mov
fwait
or
cmp
xor
xor
dec
in
mov
data16
pop
xchg
and
pop
sub
pop
shl
push
aad
dec
push
add
fwait
retf
mov
lods
paddusw
imul
xchg
xchg
jns
ins
and
add
outs
into
clc
xor
cmp
lods
mov
jbe
jle
push
pop
jne
lds
mov
add
loop
neg
pop
cmps
push
pop
out
outs
sub
mov
push
jecxz
jno
fld
(bad)
fisttp
ins
mov
adc
imul
call
cmps
dec
ins
aas
movs
lods
es
cmp
in
sub
lea
and
mov
aas
push
jae
xchg
add
pop
mov
fld
or
and
outs
clc
pop
mov
mov
jl
and
mov
jmp
cmp
mov
mov
out
or
mov
sbb
icebp
jnp
movs
mov
add
in
and
inc
sbb
adc
jle
jmp
or
cdq
mov
inc
es
test
cmp
add
xchg
or
push
mov
aad
lods
daa
pusha
scas
dec
sbb
sbb
iret
adc
cmp
push
in
jb
cmp
dec
or
retf
jae
in
mov
shrd
xchg
leave
xor
iret
pop
out
ficomp
cmp
dec
repz
ret
movs
loope
sti
sbb
and
xchg
pop
dec
cld
idiv
mov
stos
inc
jbe
cmp
(bad)
cld
jge
gs
sub
mov
jno
jp
(bad)
inc
adc
cmp
mov
or
mov
hlt
mov
dec
or
lds
xor
cmp
xchg
test
(bad)
adc
lea
push
jecxz
fstp
aad
jmp
sub
jo
loope
shl
cwde
mov
ret
call
retf
pushf
xor
mov
pop
mov
jb
(bad)
neg
arpl
cmps
xor
sti
xor
pop
cmp
call
ficom
xlat
ins
and
mov
mov
sub
sar
cmps
call
push
imul
xchg
xchg
push
(bad)
out
mov
rcr
adc
and
mov
push
in
pop
jae
xchg
or
mov
mov
and
(bad)
gs
mov
in
(bad)
xchg
or
xchg
retf
fwait
sbb
mov
jne
xor
stc
xchg
cmc
pop
xor
xor
stc
push
xor
test
hlt
clc
iret
sbb
sbb
fdiv
popf
cld
popa
mov
jno
cmp
and
or
inc
in
cmp
(bad)
add
imul
mov
adc
dec
(bad)
mov
mov
adc
xlat
push
mov
fsubr
push
repz
(bad)
pop
jge
dec
nop
in
ins
or
add
pusha
test
mov
aaa
ret
in
(bad)
xchg
je
push
sbb
out
(bad)
jb
fidiv
inc
leave
lock
mov
jmp
or
adc
push
xchg
out
fist
mov
(bad)
shl
cs
(bad)
fld
sub
ret
mov
test
jg
sar
sub
mov
xchg
scas
loope
les
mov
shl
push
jns
push
or
jae
loop
cld
fstp
scas
inc
shl
jge
fistp
dec
mov
sbb
(bad)
mov
lock
push
test
xchg
jo
movs
std
aaa
or
jmp
leave
mov
aad
mov
dec
pop
fimul
ss
or
lock
add
inc
push
pop
mov
sbb
sbb
inc
lea
sbb
retf
ins
jmp
add
shl
inc
mov
mov
pop
fwait
sub
adc
test
push
cs
mov
jmp
push
imul
push
and
aas
fwait
cs
pop
arpl
cmps
ret
in
jg
jecxz
jno
stc
popf
add
in
mov
or
retf
test
add
mov
dec
sbb
(bad)
rcr
mov
in
cld
movs
cld
mov
in
inc
mov
cdq
aaa
or
dec
push
inc
or
repz
mov
cmp
mov
or
mov
mov
scas
mov
pop
xchg
xchg
dec
dec
cwde
xor
stc
dec
push
jp
in
cs
cmp
and
mov
adc
test
daa
jmp
mov
mov
or
les
adc
cmp
jmp
add
or
neg
in
cld
adc
imul
cdq
aas
push
sub
or
sbb
and
ret
push
inc
(bad)
cmp
aaa
cvtps2pd
js
cdq
dec
stc
pop
push
scas
aam
ret
push
jle
dec
std
jne
ins
imul
neg
(bad)
clc
rol
lea
out
jne
sub
xchg
mov
xor
jo
out
scas
test
push
xchg
sbb
js
dec
dec
scas
in
mov
push
shl
push
push
(bad)
mov
mov
push
inc
push
cmps
out
fdivrp
lea
cdq
cdq
enter
cmp
lock
xor
mov
enter
dec
mov
xchg
dec
shr
aas
xor
sti
mov
into
jg
stc
in
ret
ficomp
mov
push
into
test
pop
lea
aaa
dec
cmp
cmps
in
test
test
xchg
xor
dec
pushf
or
inc
je
mov
out
push
gs
ror
xchg
pop
add
xchg
(bad)
adc
mov
jl
dec
fwait
inc
add
fnstsw
test
mov
mov
push
leave
push
dec
mov
mov
push
ror
rcl
cwde
stos
enter
sub
stc
push
pop
jbe
sbb
scas
aad
xor
imul
mov
mov
(bad)
fs
xor
out
xor
add
stc
ds
fucomp
neg
push
idiv
xor
cld
cmp
dec
scas
outs
pop
fs
shl
stos
popf
pop
pop
in
jmp
and
pop
push
retf
jl
mov
iret
hlt
lahf
mov
scas
loop
mov
add
arpl
xor
add
inc
fucomip
rol
mov
add
sub
bound
out
outs
ret
addr16
mov
aas
fst
nop
add
movs
call
adc
inc
lea
mov
loopne
jmp
pop
xor
out
ins
jmp
push
dec
xchg
xchg
fild
mov
sbb
lds
add
xor
cmc
mov
push
call
iret
retf
xor
bound
lock
es
movs
add
jb
inc
(bad)
sub
pop
mov
in
(bad)
in
in
adc
mov
xchg
aas
(bad)
iret
std
or
or
je
inc
xchg
push
gs
je
sub
fidivr
jmp
sub
cs
gs
data16
mov
or
push
and
or
pop
inc
cli
xchg
loop
ror
inc
jne
rol
xchg
mov
neg
pop
jge
mov
fidiv
mov
xchg
(bad)
rep
iret
mov
or
add
pop
and
xchg
mov
enter
call
push
mov
inc
push
inc
inc
xchg
scas
hlt
xchg
hlt
adc
pop
mov
adc
dec
xchg
mov
sub
pop
mov
dec
(bad)
fld
jle
push
cmc
(bad)
imul
repnz
js
lock
stos
test
lods
jg
cdq
ret
out
cdq
push
xor
sub
js
(bad)
in
sub
loopne
fs
inc
test
mov
ficomp
mov
jge
jecxz
cmps
sti
mov
std
and
leave
test
mov
add
hlt
inc
cmp
loope
mov
pop
xchg
data16
jbe
and
imul
in
mov
cmp
pushf
repz
imul
jg
pop
int
and
jmp
leave
arpl
xchg
or
or
pop
jae
aas
jne
aad
in
mov
xchg
pop
lods
jle
or
inc
or
pop
and
jg
cld
jp
inc
sbb
adc
lahf
jle
test
mov
jmp
sti
mov
or
(bad)
enter
pop
mov
xor
xchg
mov
sbb
and
jbe
lock
(bad)
call
ds
add
cmp
out
or
idiv
sub
or
cmp
pop
nop
jo
inc
call
in
inc
fsubr
repz
lods
mov
daa
sbb
call
jb
cmps
cli
jge
fidiv
or
jbe
lods
jle
mov
mov
psrld
add
push
jb
outs
ret
jp
xor
fwait
cmp
repz
dec
(bad)
js
in
daa
stos
ins
push
sbb
dec
mov
push
fwait
pushf
and
mov
add
daa
ins
pop
push
sub
adc
add
das
mov
imul
sub
ret
cmp
xor
pop
mov
sbb
xor
jl
shl
inc
push
das
(bad)
je
rcr
or
adc
mov
sub
dec
fist
pop
je
adc
retf
jmp
out
mov
cmc
xchg
mov
push
dec
cs
aas
mov
sbb
sahf
pushf
jns
mov
jg
das
(bad)
cmc
mov
adc
(bad)
repz
std
jmp
jns
xchg
sbb
xchg
add
sahf
inc
ficom
imul
clc
imul
sahf
ja
out
push
aam
mov
inc
hlt
pop
pavgw
mov
jl
push
jp
in
icebp
test
(bad)
xchg
dec
pop
pop
add
in
jns
pusha
js
lahf
jl
test
sti
inc
or
scas
xlat
and
mov
sbb
lods
(bad)
call
sbb
cmps
and
in
stc
in
sti
loope
push
or
mov
push
in
jo
or
adc
outs
pop
call
std
popf
ret
movs
lea
(bad)
fcom
out
out
push
shl
add
jg
push
xchg
jo
add
mov
fbld
push
imul
(bad)
outs
jo
stc
sar
and
shl
mov
mov
fidivr
loope
mov
or
rcr
xor
inc
jns
repz
xor
pop
icebp
imul
fwait
or
xchg
data16
movq
retf
mov
or
mov
std
pop
clc
mov
mov
je
xchg
cmp
jle
fcomp
mov
or
jmp
cld
cli
movs
(bad)
int
and
int3
jb
inc
mov
test
or
dec
imul
push
pop
scas
xor
pop
lock
in
jb
mov
mov
xor
add
and
ins
(bad)
shr
xchg
test
rcr
cwde
sub
fstp
ret
aad
or
pop
mov
int3
jg
and
scas
mov
and
test
(bad)
adc
mov
and
sbb
ja
add
or
dec
xchg
mov
neg
cmpps
inc
repnz
bound
jne
shl
lea
or
mov
hlt
les
sti
movs
lods
pushf
retf
xor
push
fsub
rol
xchg
mov
loope
xlat
mov
fimul
test
mov
dec
fidiv
or
idiv
(bad)
daa
mov
pop
push
add
clc
inc
or
icebp
push
sub
dec
adc
cmp
das
div
loopne
out
mov
and
pop
ja
ins
mov
data16
jae
rcr
adc
sar
icebp
les
jae
lds
adc
jo
xor
add
mov
push
jne
and
and
or
test
outs
jp
and
cmp
lods
fstp
int
dec
mov
sar
sbb
mov
in
xchg
test
sti
mov
mov
xor
or
imul
jne
rol
into
dec
mov
push
ret
in
idiv
or
mov
push
test
lea
mov
daa
jne
in
or
out
in
repz
push
pop
retf
mov
dec
movs
call
sbb
leave
mov
cmps
add
mov
lods
pop
fstp
dec
loopne
mov
xor
fwait
inc
adc
mov
xchg
iret
xchg
inc
out
fcomp
cmp
int3
sub
pop
in
adc
cmp
or
jno
imul
mov
in
inc
fnstcw
out
sub
mov
xchg
test
sub
ficomp
adc
lods
adc
or
adc
loop
mov
(bad)
cmps
mov
rcl
int
adc
jnp
ret
dec
mov
xchg
jno
mov
nop
(bad)
stos
inc
xor
jo
int
stc
cli
ins
mov
xchg
pop
push
aas
jmp
jo
jp
lods
mov
sbb
ss
sbb
pop
loope
xor
hlt
push
retf
pop
or
aam
gs
add
xchg
rcr
jg
(bad)
xchg
mov
mov
or
mov
mov
xor
push
idiv
cmp
int
mov
movs
out
repnz
sbb
test
jnp
ja
mov
test
and
and
mov
sbb
loope
sub
or
dec
dec
arpl
test
mov
push
dec
imul
xchg
test
out
inc
xor
push
jmp
dec
pop
mov
cmovl
aam
xor
jno
mov
jnp
dec
sub
enter
in
xchg
mov
xchg
gs
add
or
fistp
retf
xor
mov
xor
rcr
jmp
lods
mov
xor
hlt
jge
cmp
add
xor
inc
fdivrp
dec
repnz
in
ds
mov
shl
jbe
mov
lods
mov
arpl
mov
push
in
test
adc
repnz
adc
cmp
into
into
push
pop
imul
mov
mov
addr16
ret
out
fistp
xchg
sbb
dec
or
add
mov
sub
jns
sub
mov
inc
mov
leave
pop
pusha
loopne
mov
es
clc
sub
push
pop
lea
mov
push
xchg
fist
lock
xchg
call
cmp
dec
dec
sub
pop
dec
jmp
in
imul
call
ja
scas
jno
inc
std
(bad)
pop
scas
movs
mov
pop
pop
adc
daa
push
shl
sbb
cmps
add
inc
push
mov
bnd
pop
xor
mov
xor
xor
imul
mov
push
push
mov
(bad)
out
clc
push
scas
cwde
mov
add
cwde
es
adc
scas
mov
push
lahf
cmps
dec
xlat
sub
sbb
cmc
leave
push
inc
inc
mov
leave
arpl
xchg
pop
sub
xor
test
cmp
pop
add
sbb
push
imul
sahf
sub
rcl
fisubr
adc
mov
(bad)
mov
dec
pop
retf
sbb
mov
arpl
inc
nop
or
cmp
mov
mov
stc
addr16
xchg
inc
movs
cli
mov
(bad)
loope
dec
jae
int3
cli
test
xchg
jmp
mov
adc
or
test
hlt
lahf
fst
push
jno
imul
add
arpl
jmp
mov
punpckhwd
retf
mov
cmp
stc
stos
pop
add
mov
inc
into
dec
aam
clc
add
les
adc
adc
xchg
and
out
add
shr
xchg
out
dec
cmp
cld
push
int3
cs
ins
cmp
pop
add
out
push
out
mov
pop
je
scas
aas
mov
mov
mov
rcr
jbe
xor
push
push
jg
xor
sahf
lds
or
mov
push
in
dec
out
iret
(bad)
cmp
(bad)
data16
dec
push
stc
jg
xor
sub
jns
leave
xchg
push
dec
mov
xchg
add
dec
and
mov
sub
test
sahf
fwait
sub
stos
loop
call
push
add
rcr
rcr
imul
xor
inc
ret
outs
push
int
adc
xchg
inc
adc
pop
jae
pop
idiv
cdq
out
inc
fsubr
jg
aad
in
movs
adc
fsubr
out
mov
mov
xchg
sti
mov
push
mov
add
test
cmp
gs
pop
add
rcr
bound
push
das
pmaxub
sub
push
(bad)
cdq
loopne
cmps
rol
lds
jecxz
out
push
test
push
sbb
mov
push
inc
mov
and
in
clc
mov
pushf
mov
xor
mov
sub
sbb
out
cld
sub
pop
fadd
retf
jbe
clc
rcr
push
dec
add
pop
mov
dec
dec
xor
and
pop
pop
inc
push
push
add
xchg
pop
dec
adc
push
mov
leave
call
xchg
mov
lahf
dec
retf
popf
push
sti
popf
mov
mov
jns
pop
clc
cmp
inc
(bad)
xchg
sar
push
adc
popa
test
sbb
xor
jecxz
pop
jle
and
imul
mov
shl
adc
xor
lods
rcl
adc
mul
or
lea
and
and
rcl
(bad)
outs
daa
leave
retf
aas
mov
jo
and
sbb
imul
add
sbb
or
shr
mov
dec
in
add
int
test
pop
nop
test
in
cli
icebp
mov
(bad)
fdivr
jge
popa
mov
mov
adc
xor
adc
repz
dec
push
xchg
xchg
mov
jmp
or
nop
sub
sub
daa
jnp
popa
jecxz
cmp
cmc
popf
add
es
leave
cwde
push
ficom
inc
stos
pop
enter
dec
cmps
jg
loop
adc
loope
sti
mov
or
divps
enter
inc
stos
push
cmp
imul
push
pop
cmp
cmps
mov
pop
jo
arpl
mov
mov
mov
xchg
ins
xchg
rol
xchg
xchg
enter
scas
pushf
lds
adc
cmp
int3
imul
mov
daa
addr16
inc
test
jp
or
mov
xchg
pop
lods
or
or
push
mov
xchg
fmul
adc
mov
jno
push
jmp
mov
or
mov
(bad)
dec
add
repz
jecxz
js
xchg
xor
test
popa
cmc
push
nop
mov
jg
sub
and
or
jp
adc
cdq
clc
dec
retf
push
xor
lods
aad
xchg
hlt
loop
fcmovbe
xor
call
arpl
rcr
xor
js
mov
adc
cmc
or
js
fwait
add
xchg
mov
push
mov
adc
sub
icebp
imul
stc
or
cmps
retf
add
dec
inc
cmp
mov
adc
cld
push
push
mov
jno
(bad)
adc
sub
imul
sub
mov
and
aaa
repnz
dec
outs
not
push
mov
ins
cwde
(bad)
lahf
fstp
adc
jns
sbb
jecxz
hlt
clc
cmp
lods
sbb
push
dec
pop
jg
lds
add
fdivr
aas
mov
mov
loope
mov
mov
int3
mov
pop
(bad)
add
inc
or
and
or
mov
xchg
adc
lock
out
(bad)
out
mul
out
enter
jle
xor
ret
ror
adc
jo
daa
rol
lods
mov
sub
cmc
sar
dec
imul
sbb
mov
mov
mov
pop
and
pop
inc
ins
lods
iret
sub
pop
adc
dec
std
(bad)
hlt
cwde
out
push
xor
dec
push
add
ret
mov
mov
mov
xchg
fs
push
pop
pop
loop
dec
sbb
ss
push
out
push
or
adc
mov
push
pop
mov
cs
addr16
push
stc
fwait
inc
jne
adc
movs
into
ins
pop
push
cdq
sbb
inc
out
cmp
int
push
enter
test
xchg
mov
push
ins
adc
add
dec
or
cs
das
lock
popf
or
pop
scas
dec
or
add
outs
inc
jg
xor
inc
int
mov
adc
xchg
outs
mov
in
inc
push
push
mov
adc
sbb
cmp
add
rol
je
mov
mov
xchg
rcl
pop
jl
sub
mov
mov
popa
mov
xor
pop
outs
ss
mov
and
jle
mov
add
in
stc
out
scas
jns
loopne
fistp
sub
adc
push
push
out
jno
sub
jp
in
or
enter
jmp
mov
loop
les
std
mov
imul
add
inc
inc
cmc
ss
(bad)
hlt
lahf
pushf
loopne
std
addr16
jnp
jp
push
cld
fistp
mov
sbb
je
adc
mov
dec
jmp
xlat
loope
imul
jno
inc
xor
out
iret
rcl
fstp
stc
jb
dec
fisubr
sbb
sub
out
jbe
pop
pop
hlt
dec
add
and
retf
xor
dec
and
mov
push
pushf
jne
xor
push
(bad)
data16
daa
cmps
or
jb
lahf
mov
or
xor
stos
sub
push
call
dec
pushf
mov
jbe
scas
jae
push
jno
sub
pop
pusha
imul
popf
(bad)
sti
neg
inc
adc
sbb
lods
mov
adc
call
inc
repz
retf
lahf
mov
mov
jl
dec
in
into
sbb
js
mov
jg
dec
xor
sar
add
mov
sub
rcl
xchg
dec
test
(bad)
pop
imul
or
(bad)
hlt
into
xor
jmp
cli
movs
rol
ficom
mov
sub
inc
xor
mov
stos
arpl
xchg
scas
sbb
test
add
nop
sbb
sub
adc
add
scas
jo
rcl
inc
cmp
sahf
shr
inc
out
(bad)
pop
jae
repz
test
mov
call
push
in
or
leave
push
dec
jo
dec
ds
cmp
mov
bnd
shr
dec
pcmpgtb
int
and
pop
sbb
cmps
add
dec
fsub
jo
movs
mov
pop
cmps
fisttp
add
cmp
fsubr
mov
or
es
in
imul
int
inc
cmp
cmp
aam
stc
jl
lods
lods
sub
mov
cli
or
sub
cmps
(bad)
je
jo
pushf
addr16
or
ss
adc
push
cmp
adc
cmp
mov
mov
push
out
pop
aam
push
sub
cmp
xchg
add
outs
stos
fadd
fnsave
aas
out
repz
in
outs
and
xor
outs
push
shl
clc
sub
mov
enter
dec
outs
inc
sbb
sbb
pop
push
shl
aaa
jno
rol
repnz
mov
lea
mov
mov
xor
(bad)
les
dec
enter
pop
jle
in
loop
sub
or
mov
pop
aam
sub
lea
(bad)
ss
test
scas
inc
movs
test
aas
pop
jmp
out
lea
aaa
iret
sbb
jne
add
in
xor
rcr
xor
pop
lahf
push
hlt
jnp
stos
pop
lea
ret
inc
sar
mov
xchg
dec
hlt
xchg
add
call
shl
out
and
dec
(bad)
movs
stos
xor
add
push
ss
push
inc
inc
shl
push
fbld
arpl
sar
(bad)
vcomiss
into
jmp
shr
and
push
cmp
(bad)
gs
jge
js
jnp
push
mov
dec
loopne
sub
scas
adc
sub
sahf
(bad)
scas
add
add
and
in
fs
inc
cmp
call
mov
lea
sahf
mov
jmp
mov
push
push
sti
iret
in
ja
arpl
ficom
mov
lds
(bad)
cld
js
xlat
push
les
jns
movs
pop
ds
inc
mov
addr16
xor
mov
push
fwait
inc
enter
pop
xchg
stos
sbb
push
retf
cwde
pop
daa
sub
add
add
push
retf
add
push
jne
inc
aam
ss
fs
scas
into
sub
jl
shr
sbb
mov
stos
daa
in
cld
inc
inc
mov
pop
mov
pusha
sub
mul
fist
scas
add
popf
mov
or
mov
add
cld
add
pop
sbb
les
mov
mov
cmp
inc
jne
scas
in
add
ret
jne
mov
loopne
inc
pop
iret
call
imul
fsubr
sub
mov
pop
adc
repz
es
adc
push
xchg
lock
cmps
xor
addr16
outs
jle
frstor
mov
mov
mov
bound
sbb
cmps
jge
pop
nop
or
cdq
mov
imul
cmp
mov
sub
mov
mov
lahf
and
and
dec
or
add
imul
sub
adc
addr16
adc
hlt
inc
push
add
sbb
stc
lock
or
scas
push
jge
ss
sbb
fdivr
jle
cdq
in
mov
(bad)
fmul
inc
pop
push
mov
push
mov
cs
jle
mov
popf
shr
lea
and
or
sub
sub
mov
je
dec
lahf
loope
dec
cmp
imul
adc
jbe
jno
mov
sub
fnstenv
mov
xor
dec
xchg
fwait
inc
mov
daa
add
push
mov
cli
adc
sti
imul
push
xor
cmps
add
movs
mov
push
stos
mov
pop
xchg
fiadd
inc
push
jmp
jnp
add
and
nop
pop
and
out
xchg
ds
adc
lods
hlt
nop
sub
ja
jb
lea
shl
into
cmp
das
or
in
(bad)
addr16
call
adc
scas
mov
inc
movs
xor
inc
inc
cld
imul
(bad)
mov
std
xchg
push
aam
mov
dec
mov
mov
imul
retf
push
aad
fisttp
call
cs
mov
retf
imul
inc
int3
ja
repz
cmp
jl
or
push
fisttp
out
and
cmp
fisubr
ss
sub
dec
mov
or
pop
loope
pop
sar
cdq
jno
daa
sbb
sub
adc
outs
scas
cmp
std
xor
scas
xlat
jo
pop
scas
pop
dec
fild
ret
add
sub
in
pop
hlt
pop
push
xchg
aaa
jecxz
idiv
rcr
lods
out
add
lods
enter
push
dec
push
js
xor
cmps
gs
mov
pushf
in
ror
dec
add
or
int
ins
es
mov
jl
test
adc
dec
jno
add
lea
les
inc
pop
repz
mov
into
shr
pop
pop
and
out
cmp
in
dec
inc
sar
dec
arpl
pop
dec
xor
fistp
dec
inc
push
bnd
loop
jb
in
xor
fist
or
ss
iret
xor
fsub
push
inc
ss
mov
or
retf
stc
bound
jmp
sbb
cmps
js
repnz
(bad)
int3
xchg
rcr
sub
mov
and
pop
ja
push
push
in
inc
fs
xlat
sub
ror
fsqrt
bound
mov
std
stc
mov
sub
repz
outs
add
xchg
sub
jnp
xlat
lock
les
fsubr
jnp
arpl
dec
pop
icebp
inc
sub
ins
leave
xor
(bad)
nop
ss
mov
lds
mov
addr16
cmp
cmp
(bad)
popa
pop
aaa
sahf
(bad)
ficom
(bad)
nop
inc
pop
adc
xor
fisub
iret
ja
mov
int3
mov
int
and
imul
lahf
sub
push
sti
mov
pop
cmps
inc
jae
gs
ret
lock
lods
mov
je
in
jmp
ss
data16
mov
es
lock
pop
lock
pop
pop
sar
repnz
pop
ficom
xlat
jbe
dec
fcmovne
push
adc
in
stos
sub
sbb
xor
jb
fdivr
jb
popf
adc
mov
test
popa
pop
pop
xchg
push
loop
les
phsubd
in
xchg
stos
push
call
ret
call
add
jbe
loopne
xor
retf
mov
sahf
inc
xchg
add
xor
push
xchg
inc
dec
arpl
ror
shr
ret
sbb
sti
iret
rcl
add
mov
gs
xchg
or
adc
xor
pop
mul
xchg
retf
(bad)
movs
mov
fsub
adc
and
fnstenv
push
(bad)
imul
push
adc
adc
jmp
jg
call
retf
push
popf
xchg
cmp
cli
sub
xlat
sbb
or
test
scas
pop
jle
inc
fadd
fwait
jnp
sbb
es
sbb
and
push
sbb
test
inc
bound
stos
sbb
ja
sub
xor
jb
dec
inc
jmp
fs
xchg
sbb
sbb
movs
cmps
adc
sbb
or
and
cmps
or
adc
lock
inc
push
call
push
lods
pop
iret
push
or
std
sub
sub
mov
jbe
inc
jne
push
sbb
add
sbb
mov
call
arpl
mov
shl
out
fimul
enter
int
pop
(bad)
or
xor
sbb
jnp
mov
mov
gs
mov
(bad)
sar
test
or
cmp
push
mov
mov
outs
add
push
jl
or
arpl
jge
test
(bad)
mov
push
inc
outs
stos
sub
push
sbb
jle
mov
jmp
jb
ins
enter
mov
sub
pop
rcl
iret
pusha
and
or
mov
sbb
shl
leave
cmp
inc
imul
mov
sar
jns
(bad)
cmp
imul
mov
add
dec
xor
clc
fldcw
xor
call
fsub
test
xchg
ror
and
(bad)
js
cmp
mov
mov
pop
out
jo
clc
bound
mov
out
test
mov
add
jmp
mov
mov
pop
ret
outs
push
adc
sub
or
sbb
outs
lods
bound
in
rcr
or
lds
dec
pop
add
cmp
lds
add
or
in
and
inc
mov
jns
jge
out
add
add
lods
add
jl
mov
iret
add
enter
xchg
ins
ins
or
or
aas
pop
push
in
faddp
shl
ins
leave
pop
xchg
sbb
fidiv
lahf
xor
sti
repnz
stc
cwde
xor
inc
inc
push
movs
xor
int
mov
pop
mov
pop
shr
xchg
sub
ds
mov
stos
adc
jb
cld
mov
movs
aam
fsub
mov
ins
mov
arpl
jno
mov
test
inc
hlt
shl
mov
daa
xor
sbb
mov
xlat
ds
push
out
pop
push
retf
test
and
mov
mov
lock
stos
not
(bad)
out
mov
add
jmp
das
mov
cmps
aas
dec
cmps
mov
inc
push
cmps
outs
sub
shl
in
mov
and
popf
xchg
or
pusha
mov
cwde
add
es
and
add
lahf
cmp
test
pusha
adc
mov
loope
mov
pusha
lock
adc
hlt
sbb
jecxz
and
cmp
cmps
add
adc
test
inc
and
jbe
mov
sar
out
or
shr
dec
cmp
daa
sbb
jnp
mov
mov
dec
mov
xchg
jcxz
cmps
ret
mov
popf
dec
mov
shl
xchg
pop
jle
mov
outs
xchg
mov
pop
es
xchg
mov
add
sub
or
repz
loopne
shl
fcom
dec
add
shr
imul
push
push
repnz
test
pop
mov
mov
test
cmp
aad
jge
cli
es
push
push
fild
mov
inc
pop
xor
adc
dec
push
sub
inc
mov
ins
lds
inc
out
push
xor
inc
fist
in
fdiv
inc
pusha
in
fadd
lods
inc
xchg
mov
pop
push
inc
sub
mov
sbb
cmps
jbe
pop
jae
mov
cli
fiadd
xchg
ficom
cmp
dec
inc
cmc
cdq
cmp
movs
jge
lods
sbb
xor
cmps
xchg
je
or
inc
sub
dec
aas
pop
mov
int3
pop
sub
mov
inc
nop
adc
(bad)
xchg
jbe
mov
inc
out
mov
out
or
std
iret
mov
sub
mov
shl
cmp
scas
test
sti
bound
adc
into
pop
cld
cmp
cmps
imul
cs
xor
lds
test
add
repz
adc
stc
dec
nop
jmp
dec
sti
jg
cmc
nop
mov
jno
call
sub
xor
arpl
out
cmp
mov
(bad)
jl
imul
hlt
jno
push
jae
push
aad
jecxz
add
out
xchg
sti
xchg
out
or
mov
push
ja
in
ja
outs
ret
ss
mov
pop
push
pusha
aaa
push
sbb
loopne
push
dec
jns
lods
xor
mov
mov
(bad)
fld
push
sbb
xchg
lock
dec
out
retf
dec
mov
nop
fnstsw
aaa
xchg
gs
jg
xchg
shl
mov
fistp
daa
dec
dec
and
outs
jmp
jmp
data16
jne
xchg
retf
pop
sbb
sti
in
dec
fidivr
clc
pop
pop
inc
scas
scas
push
jecxz
xchg
xchg
data16
sub
cmp
and
mov
int
in
add
mov
mov
cwde
pslld
js
fucomip
fucom
call
xor
pop
in
cs
lds
sub
xlat
push
or
mov
mov
push
daa
outs
stos
adc
ds
sub
jle
ins
mov
arpl
fisub
xor
xchg
pop
mov
fisttp
nop
in
lock
jno
add
imul
movs
lds
aam
or
js
je
test
frstor
scas
data16
aad
pcmpeqw
movs
adc
ins
fidivr
fimul
call
mov
mov
mov
cwde
inc
std
shl
les
ror
jmp
int
(bad)
dec
mov
js
push
sbb
mov
jo
icebp
ret
adc
jb
xor
sti
ins
in
in
sbb
dec
scas
inc
imul
fisttp
and
not
push
push
or
or
lock
sbb
cmp
rcr
push
or
push
loopne
rcl
jmp
jmp
xor
dec
pop
(bad)
fidivr
clc
fisub
cmp
lds
aaa
pop
call
(bad)
sub
xchg
inc
retf
push
into
cmp
and
jl
adc
pop
jnp
in
sub
sti
and
(bad)
pop
jno
rol
xor
mov
daa
daa
inc
mov
das
mov
lock
xchg
dec
dec
mov
enter
imul
pop
inc
cs
push
add
sbb
dec
mov
sbb
int3
mov
pop
enter
push
dec
aam
jne
fisub
fdivr
imul
adc
imul
gs
cmp
jmp
imul
mov
pop
jns
pop
xchg
(bad)
lds
pop
xchg
jnp
or
and
das
pop
cmc
sahf
mov
ret
shl
pop
sub
outs
(bad)
jb
movs
jae
push
mov
popf
arpl
mov
out
in
leave
cmp
xchg
or
add
mov
sub
sub
out
lods
cld
in
add
stc
push
movs
sub
pop
ss
sahf
add
xor
add
fidivr
xchg
(bad)
loopne
popf
jg
lods
cmp
jg
in
sbb
or
mov
or
push
aad
daa
test
adc
cmp
int
lea
fwait
inc
jmp
aam
lahf
sbb
mov
cli
sbb
sub
in
das
in
push
mov
fs
ret
mov
mov
cmp
daa
inc
jae
mov
fwait
xchg
xchg
(bad)
pop
adc
cwde
mov
stos
les
mov
fcom
shl
int
retf
lods
mov
popf
popa
fwait
sbb
fs
inc
bswap
xchg
push
mov
mov
jp
inc
sub
lahf
pusha
bound
fstp
inc
mov
dec
jg
sbb
or
das
xchg
scas
cmp
ss
sbb
pop
sbb
cmp
mov
and
or
jo
pop
push
mov
add
push
xchg
mov
retf
sub
mov
imul
xchg
lods
fs
pop
and
in
push
cmp
mov
cwde
dec
(bad)
or
xor
sub
and
fisub
lea
hlt
shl
lods
cmovl
mov
jp
pop
daa
in
scas
pop
outs
sbb
jo
call
sbb
add
jmp
retf
aas
dec
mov
ret
jb
mov
push
test
mov
fs
pop
xchg
xor
lahf
inc
mov
push
pop
es
xchg
xchg
int3
sub
push
out
and
add
mov
mov
add
mov
scas
test
push
mov
(bad)
push
or
inc
fild
mov
sub
adc
xlat
adc
aam
imul
sti
fadd
daa
push
pop
and
xlat
and
not
mov
jge
pop
xchg
aaa
push
stos
sub
(bad)
fsubr
and
cmc
daa
mov
jge
sub
pop
ret
xchg
sbb
enter
neg
imul
repnz
sub
adc
push
push
mov
jns
addr16
pop
jo
mov
stos
jmp
rcl
inc
fldenv
mov
pop
inc
ins
cs
ja
inc
sbb
iret
out
ins
jb
outs
xchg
adc
ss
ins
push
int
or
push
lods
mov
jmp
push
cmp
jge
cmc
mov
gs
fs
sbb
jo
pop
adc
in
sbb
in
retf
ret
mov
mov
popf
cld
mov
mov
call
shl
inc
lds
or
cdq
sar
pusha
jecxz
mov
pop
mov
int3
mov
cmp
outs
pop
outs
outs
lea
daa
jae
adc
dec
adc
cli
mov
mov
cmc
mov
scas
pop
cmp
scas
je
cmp
jmp
pop
sahf
sbb
aad
call
daa
addr16
mov
mov
cmp
dec
(bad)
pop
gs
cmp
jbe
ffreep
or
inc
pop
cli
or
adc
div
fs
int3
cwde
jmp
push
jecxz
add
aam
clc
jge
fisttp
inc
ret
test
clc
cdq
mov
dec
popf
jne
xchg
out
or
rol
shl
add
mov
(bad)
test
stos
jno
ficomp
mov
xchg
inc
mov
push
retf
sbb
sbb
mov
(bad)
pushf
pop
lds
test
jle
fs
xchg
xchg
iret
or
push
and
stc
hlt
jno
mov
sub
pop
inc
rcr
clc
gs
push
loope
xor
adc
mov
jecxz
add
ret
mov
jmp
and
out
in
pop
jmp
ds
lods
stos
jnp
mov
sbb
sbb
iret
test
(bad)
outs
and
xor
sub
mov
fild
ror
dec
loopne
jmp
popf
cmc
dec
jl
mov
and
xchg
scas
mov
xchg
sub
js
jns
loope
nop
xchg
setp
push
loope
scas
and
xchg
adc
jbe
cmp
jp
jne
rcl
or
lods
jl
faddp
movs
mov
pop
sbb
pop
enter
stos
es
lods
movs
stos
cmp
icebp
neg
aad
std
inc
std
ins
aad
lea
xor
or
int
dec
(bad)
test
in
dec
add
adc
gs
es
cmp
jle
loop
enter
and
push
add
ins
pop
mov
sub
lock
jmp
retf
mov
ja
mov
pop
pop
sbb
ins
sub
mov
mov
and
inc
cmp
test
imul
mov
dec
(bad)
sahf
and
jp
int3
push
pop
add
xor
imul
test
xchg
jecxz
mov
push
xor
inc
fwait
cmp
clc
pop
leave
mov
pop
or
lea
xor
xchg
sbb
push
jno
jmp
sbb
mov
ficom
shl
xor
jg
sbb
ss
nop
cmps
shl
sub
adc
sbb
pop
inc
cmp
add
leave
push
sbb
pop
pop
cmp
dec
inc
and
sar
jbe
and
adc
mov
test
mov
sub
dec
test
jo
xchg
jmp
xor
fisttp
xor
mov
leave
xchg
outs
sbb
dec
jmp
inc
stos
dec
aam
dec
sahf
ds
mov
sar
and
stos
and
ins
jne
xor
xchg
test
and
popf
nop
pop
out
jns
(bad)
sub
fstp
clc
cmp
inc
sbb
clc
gs
addr16
and
jno
jecxz
jb
adc
dec
gs
popf
push
or
dec
push
pop
clc
outs
sahf
xlat
mov
cs
ret
sbb
neg
bound
adc
ss
inc
mov
sbb
push
or
cmp
jns
movs
mov
xchg
pop
sub
in
jb
sahf
adc
adc
(bad)
test
dec
es
push
sub
mov
pushf
stos
mov
xor
xchg
iret
fimul
iret
rcl
popf
mov
dec
and
shl
lds
xchg
jne
out
repz
fs
cmp
enter
push
in
cli
out
add
jbe
jae
mov
les
jmp
(bad)
rcl
aad
pushf
addr16
add
push
bound
fiadd
pop
(bad)
dec
test
adc
xchg
call
rcl
jg
in
fldenv
repnz
add
mov
jns
mov
(bad)
mov
push
lahf
outs
scas
xchg
outs
rcr
adc
loop
stos
pop
aas
mov
dec
icebp
push
cmp
neg
add
scas
adc
out
data16
dec
inc
std
sbb
pop
add
and
aaa
stc
pop
jae
inc
mov
push
xchg
sbb
jns
xor
push
(bad)
sbb
adc
imul
sbb
pop
or
popf
sub
test
jae
sub
sub
leave
push
lods
or
xor
xchg
inc
push
mov
gs
lods
jp
dec
jne
movs
scas
pop
in
mov
mov
leave
inc
inc
call
fcomi
cmp
pop
aaa
cmc
adc
xchg
data16
xchg
sbb
cmp
mov
mov
aaa
iret
loopne
sub
jns
test
outs
push
pop
mov
jmp
mov
add
dec
enter
mov
int
cmc
jnp
adc
jge
int
adc
imul
xchg
and
cmc
mov
fsin
sbb
or
xchg
and
inc
test
add
lock
mov
call
(bad)
inc
aas
mov
jl
ins
pop
dec
movs
mov
es
mov
push
sub
cld
pop
pop
ds
xchg
outs
int
lock
stc
(bad)
inc
cmp
inc
jle
ret
cld
rol
and
imul
push
pop
lds
popa
aam
es
repnz
add
xchg
mov
inc
mov
push
ret
rcr
sub
aam
pop
adc
xor
jmp
cmp
mov
clc
xchg
repnz
mov
cmp
cmp
pop
jne
sbb
in
jno
sbb
sbb
ins
xor
cmp
shl
xor
dec
test
push
pop
cmp
jg
push
(bad)
jb
dec
pop
xchg
movs
jo
and
jae
lods
retf
aaa
jg
mov
xchg
rol
out
popa
out
pop
aam
js
jne
loope
pop
call
adc
sbb
xchg
repnz
ret
enter
jnp
loope
jns
imul
dec
outs
outs
(bad)
lock
sub
dec
xor
and
test
es
fdivrp
test
sti
mov
(bad)
cmp
adc
push
fs
ret
sbb
xor
(bad)
jmp
or
retf
leave
xor
icebp
(bad)
sub
int3
test
test
dec
inc
out
cmps
mov
mov
mov
into
(bad)
test
xor
xor
inc
retf
push
sub
out
push
mov
lods
mov
pop
add
stos
call
cmps
scas
ror
inc
pop
cmp
jmp
xlat
test
dec
mov
lea
and
sub
mov
sbb
dec
movs
dec
scas
xor
lock
jmp
dec
mov
(bad)
enter
pop
jp
inc
cmp
inc
adc
cmp
outs
jae
iret
push
push
or
mov
pusha
cmps
repz
pop
mov
and
mov
dec
stos
push
es
nop
ss
fdivr
push
(bad)
cmp
and
movs
push
rol
sbb
(bad)
movs
test
mov
jo
imul
push
ror
adc
pop
fwait
xor
mov
add
jbe
and
scas
jno
(bad)
repnz
xchg
cwde
ds
ja
push
and
adc
aam
mov
push
retf
test
cmps
dec
push
jmp
ja
or
dec
ins
ret
dec
js
jmp
mov
cmps
adc
ficomp
(bad)
pop
(bad)
push
jno
mov
pop
cmp
mov
outs
mov
cmp
inc
inc
push
sbb
daa
bts
push
icebp
and
mov
jne
cwde
clc
cld
adc
loope
cmp
mov
sub
mov
(bad)
dec
leave
cs
jge
xchg
cdq
adc
jle
pop
fcomp
sbb
xchg
adc
pop
scas
jns
pop
out
movs
inc
loope
nop
xor
movs
xor
xchg
dec
call
mov
cmc
pop
inc
mov
neg
sub
sbb
lock
lds
sbb
(bad)
into
adc
loop
mov
mov
cmp
pop
mov
pop
scas
jecxz
and
dec
retf
push
dec
ret
push
and
aam
xchg
outs
test
mov
and
mov
jmp
hlt
xor
fimul
cmp
fstp
pusha
pop
mov
imul
rcr
or
mov
and
jmp
adc
loopne
scas
idiv
jle
repnz
mov
and
stc
retf
imul
repnz
sub
rcl
cmp
(bad)
xor
lea
xor
cmp
es
cmp
jg
ret
sub
mov
jmp
aam
popf
add
jecxz
xlat
xor
pop
outs
into
or
rcl
and
lock
fcomi
div
inc
dec
call
or
outs
sahf
jbe
xchg
daa
pushf
sub
outs
push
xor
fcomp
and
jns
aaa
lahf
jge
jnp
adc
pop
cmp
mov
jl
neg
or
lods
shr
test
pusha
push
inc
aas
popf
cmp
(bad)
xchg
test
xor
imul
sbb
fcomp
mov
inc
xor
mov
mov
pop
call
push
push
add
sub
mov
out
xor
adc
std
call
push
and
ins
pop
mov
push
jecxz
sahf
sub
jno
pusha
nop
mov
xor
popa
pop
(bad)
rcr
lahf
mov
das
cmp
pop
frstor
call
jle
adc
cmp
xchg
mov
ins
jb
add
pop
(bad)
mov
add
mov
dec
(bad)
aad
dec
add
lods
scas
add
xor
pop
mov
sbb
loopne
ss
lods
loop
(bad)
(bad)
(bad)
cs
dec
jae
xchg
sahf
movs
dec
pop
call
fiadd
adc
pop
sbb
es
mov
mov
retf
mov
test
pop
fistp
and
imul
fisub
jns
cmp
stos
xor
cmps
add
mov
outs
mov
pusha
clc
call
adc
stc
mov
hlt
pop
leave
dec
dec
add
jne
jmp
and
add
inc
ds
(bad)
xchg
scas
cmp
out
cmp
mov
retf
jmp
cmp
retf
dec
gs
push
or
xor
sbb
aad
test
sbb
outs
push
jmp
(bad)
jnp
add
mov
cs
cmp
sar
mov
jb
outs
sbb
outs
not
mov
sbb
xor
test
add
push
xor
cmps
xchg
jge
leave
xchg
lock
arpl
or
lahf
mov
dec
dec
xlat
and
cmp
mov
dec
hlt
js
sahf
sub
push
mov
loope
sub
mov
test
pop
int
xchg
dec
mov
cmp
push
jns
arpl
arpl
adc
je
cmp
daa
imul
es
mov
cmp
dec
test
fimul
and
lods
pop
pusha
inc
sub
test
hlt
stc
fbld
(bad)
in
shl
cmp
jo
inc
cmp
retf
or
dec
adc
push
popf
and
adc
and
mov
lods
inc
retf
popf
retf
mov
and
fidiv
sub
das
int3
leave
sar
pop
add
pushf
mov
adc
enter
jae
imul
xor
je
aam
mov
je
sub
repz
add
dec
(bad)
jmp
mov
sub
dec
pop
push
push
lea
pop
sub
ins
mov
mov
iret
lods
das
xor
dec
lds
cmps
fs
pop
mov
lahf
stos
sub
call
scas
lods
xor
add
pop
xchg
pop
into
and
dec
mov
sbb
fidivr
in
xchg
rep
sub
pop
(bad)
(bad)
mov
jp
xsaves
or
push
leave
inc
daa
clc
pop
test
enter
pop
mov
or
mov
retf
push
jnp
ret
dec
into
push
xor
mov
mov
xchg
xchg
sub
fcom
popf
adc
fdiv
push
mov
pop
ror
leave
leave
fmul
mov
jp
sub
xor
mov
ficom
xchg
mov
jecxz
stos
cmps
add
out
ficomp
push
add
in
pop
add
adc
outs
jl
jno
dec
inc
shl
or
add
push
cmps
aad
fisttp
das
sti
je
mov
ret
push
and
push
rol
push
xchg
jno
mov
and
push
in
das
psubusw
add
ficom
or
cmc
mov
sahf
rcl
pop
push
dec
dec
mov
fdivr
mov
push
stos
push
(bad)
shl
movs
xor
clc
or
ja
outs
in
xor
push
sahf
out
xor
pushf
daa
inc
enter
xchg
push
mov
xor
mov
dec
int
jmp
cmp
jb
adc
cmps
mov
pop
imul
xor
inc
fdiv
xor
mov
stos
mov
xor
outs
adc
aam
pop
cwde
test
mov
int3
mov
jecxz
push
lahf
and
aad
inc
movs
push
call
add
cld
out
shl
je
jl
xchg
xor
inc
xchg
lock
push
daa
enter
and
mov
jmp
rcl
and
sbb
mov
inc
lds
ja
bound
icebp
jge
push
jp
xlat
rcr
mov
add
jmp
repnz
(bad)
jecxz
sbb
or
(bad)
and
imul
pop
ret
movs
jge
dec
push
inc
loop
test
jae
or
into
in
loop
mov
jno
dec
es
cmps
repnz
sti
rol
xor
pop
fcom
mov
mov
pop
xor
inc
mov
inc
jno
test
inc
pushf
mov
fwait
addr16
xor
jne
pop
pop
or
mov
(bad)
sbb
mov
xor
or
test
mov
ins
cdq
mov
xor
call
pop
xor
out
add
out
mov
sbb
ins
push
sbb
mov
movs
enter
adc
test
rcl
pop
sti
mov
add
xor
sub
mov
retf
mov
mov
inc
push
dec
test
fcom
cdq
xor
dec
pop
and
movs
push
sub
rdmsr
xchg
call
sbb
fmul
and
fdivp
popfw
jle
hlt
jg
jmp
push
push
jmp
jmp
ins
aaa
pop
int
mov
xchg
and
pop
mov
xor
jl
jmp
int3
lds
in
and
add
nop
stos
cld
and
push
sbb
iret
mov
inc
dec
(bad)
cmp
dec
je
pusha
scas
int3
add
mov
or
(bad)
arpl
inc
add
in
mov
adc
jns
mov
add
stos
sbb
inc
jae
jmp
aaa
mov
fs
jmp
in
xor
inc
add
fcom
xor
push
mov
shl
mov
pop
jmp
pop
jg
out
xor
jnp
mov
sub
or
(bad)
inc
leave
(bad)
dec
pop
sub
retf
iret
xlat
adc
cld
xchg
add
pop
fs
cld
add
push
cld
sbb
jmp
xchg
into
or
test
je
sub
fdivr
inc
cmps
mov
xor
cmp
push
push
loopne
popf
inc
leave
push
and
dec
jl
jmp
outs
in
mov
icebp
push
inc
(bad)
call
mov
aaa
cli
jg
movs
cmc
sub
data16
sub
stos
and
xchg
mov
mov
stc
push
jmp
aam
xchg
fild
bound
(bad)
(bad)
out
push
sub
mov
push
out
arpl
add
push
and
bound
out
adc
sub
scas
mov
or
inc
sub
lahf
retf
push
test
js
stos
fnstenv
call
nop
out
mov
sti
mov
fs
das
cmp
imul
clc
retf
add
xor
inc
cs
inc
mov
mov
(bad)
fsin
and
call
mov
les
xor
adc
dec
push
xor
push
cmps
dec
fnstsw
retf
arpl
popa
mov
pop
mov
dec
and
lods
cwde
mov
adc
daa
les
inc
xchg
add
mov
(bad)
dec
mov
fs
lea
hlt
mov
and
cmp
mov
mov
sti
xlat
pop
aad
leave
jg
jg
jno
gs
mov
test
jle
mov
push
add
pop
rcl
rcl
pop
dec
add
nop
pop
xor
shl
std
mov
gs
xchg
(bad)
dec
pop
lds
push
(bad)
or
push
lds
emms
(bad)
sbb
popa
pop
ficom
add
mov
sbb
fimul
lock
iret
test
mov
dec
add
pop
cmp
retf
int3
ja
cli
jae
mov
mov
mov
ret
scas
loopne
sub
arpl
inc
add
ficom
and
test
pusha
repz
mov
mov
sbb
pop
jmp
cmc
mov
inc
bound
jns
lock
imul
sar
arpl
out
dec
mov
adc
dec
push
or
movs
out
mov
fwait
jg
les
sbb
xchg
ss
out
inc
setg
and
push
test
loop
push
bswap
xor
dec
movs
jle
sub
test
mov
popa
out
stos
fist
imul
nop
rol
mov
out
std
mov
mov
dec
or
(bad)
adc
mov
inc
or
jmp
add
aas
sub
pop
mov
xor
ss
cld
ret
jecxz
cmps
and
jne
jp
mov
xchg
std
cli
jnp
stc
icebp
inc
aaa
shl
int3
(bad)
shr
inc
ret
mov
mov
cmp
movs
cmp
dec
push
mov
frstor
gs
lahf
aam
test
scas
mov
push
jbe
imul
mov
inc
das
dec
bnd
scas
inc
(bad)
pop
sub
sbb
push
xchg
pop
jmp
push
sub
in
cwde
push
fist
dec
sahf
cmp
pop
cmp
mov
call
loopne
dec
imul
push
adc
push
loop
call
cmc
cld
daa
push
cmps
inc
xchg
and
int3
jb
jecxz
cmc
retf
(bad)
ins
in
cdq
mov
inc
pop
jmp
jl
mov
ja
push
mov
add
mov
xor
test
or
pmullw
xor
dec
mov
xchg
rcl
aaa
sbb
in
das
pop
ret
in
fdivr
pushf
inc
mov
out
call
push
push
mov
xchg
dec
test
les
fist
sub
jnp
gs
fist
adc
xor
int3
mov
push
cmc
mov
or
loopne
or
retf
cmp
mov
add
inc
inc
cmp
jl
(bad)
pop
or
je
outs
repnz
iret
xchg
xor
inc
and
sub
fwait
pop
or
jp
cmps
pop
push
ins
inc
imul
lods
jg
pop
(bad)
imul
pushf
push
jecxz
aam
dec
js
mov
sbb
cmc
push
sahf
ja
cmp
lock
pushf
shl
xchg
dec
popf
shr
mov
std
sti
push
stc
jno
mov
jecxz
ja
repnz
movs
lods
lea
scas
xor
push
inc
jp
(bad)
arpl
pop
popf
push
test
jg
inc
lea
cmp
pushf
mov
cmp
imul
gs
adc
jnp
and
push
outs
or
daa
retf
cmps
rcr
cld
icebp
pop
push
mov
mov
imul
xchg
pop
xor
je
pop
in
dec
cmp
mov
ror
xor
or
ror
test
in
xor
mov
shr
(bad)
xchg
mov
cdq
cmp
jge
xchg
bound
mov
idiv
and
push
hlt
hlt
mov
push
int3
dec
pusha
imul
jecxz
clc
inc
mov
add
push
and
pusha
loop
(bad)
cmp
in
int3
inc
push
test
mov
pop
div
out
loopne
js
cwde
pop
sar
pop
xchg
fs
adc
push
add
inc
aad
jmp
jg
sbb
sbb
or
imul
gs
ins
pop
mov
fbld
xchg
jle
mov
jo
mov
fstp
jae
lods
movs
mov
loopne
sbb
or
xchg
sbb
add
sbb
daa
sbb
cmp
out
pop
pushf
jmp
mov
lahf
imul
adc
inc
adc
sub
mov
xchg
sub
cmp
retf
xchg
add
mov
leave
push
jl
gs
das
imul
add
test
fwait
pop
pop
xor
imul
push
inc
sbb
(bad)
xchg
retf
dec
push
sbb
mov
dec
push
lock
lods
push
mov
pop
add
add
xchg
lds
lock
lahf
fwait
(bad)
ins
inc
cmc
fadd
es
test
inc
or
xchg
(bad)
mov
leave
push
ds
or
ficomp
int
leave
dec
dec
mov
out
or
xchg
lock
pop
push
jle
push
mov
jne
jmp
pop
retf
cmp
loopne
push
in
adc
lods
sbb
sub
push
pop
bound
mov
std
lods
mov
sbb
dec
push
inc
ror
dec
xchg
pop
push
cli
movs
retf
xor
jb
pop
mov
inc
cwde
pop
pop
mov
adc
inc
inc
lds
enter
jo
xor
sub
sub
push
retf
stos
push
inc
or
ins
xchg
pop
pop
xor
inc
shl
inc
mov
fld
pop
cmps
push
dec
call
lahf
and
sbb
inc
int
pop
in
jl
pop
cli
jp
push
pop
inc
fwait
loope
xchg
aaa
retf
dec
inc
dec
fistp
call
mov
loope
pop
sahf
and
sub
mov
or
aam
inc
inc
test
ret
cmp
(bad)
xor
(bad)
cmp
and
pusha
add
jno
jecxz
adc
fwait
movs
or
mov
or
xchg
cmps
pop
mov
mov
lahf
js
push
fld
and
fisubr
xchg
cvtpi2ps
add
stos
adc
jl
mov
sbb
clc
sar
addr16
out
inc
push
dec
xor
push
cmp
pop
bound
retf
mov
lahf
cmps
retf
mov
or
jnp
loope
cmp
inc
aam
into
push
jbe
ss
adc
and
arpl
call
dec
sbb
sbb
or
lds
sub
dec
add
ds
pop
sbb
loope
popf
dec
xchg
xchg
jg
fnstenvw
jae
jl
cld
pop
mov
pop
push
adc
xchg
ret
xor
jns
pop
(bad)
cmp
data16
cli
pop
inc
test
cmovb
js
adc
ret
daa
sahf
fstp
data16
repnz
dec
(bad)
lea
stc
pop
dec
cmp
sbb
dec
and
sar
xchg
in
xchg
cdq
xor
push
enter
mov
sub
jp
fsub
out
not
xchg
jecxz
cmps
in
sub
sub
in
out
mov
gs
cmp
jmp
shr
aad
fdivr
mov
repz
mov
xchg
or
push
jp
mov
ds
jne
push
ror
imul
nop
mov
loope
xor
mov
arpl
or
push
test
sub
adc
outs
les
xchg
mov
adc
xor
pusha
jecxz
inc
jecxz
js
fild
sub
call
adc
xlat
xlat
push
in
out
sbb
movs
mov
push
(bad)
jns
push
(bad)
cmps
dec
in
stc
fcomp
pushf
mov
adc
fsub
iret
sub
pop
in
sub
sbb
shl
lahf
xchg
lods
jge
sub
lds
dec
push
cli
ds
sbb
xlat
mov
movs
jl
lods
push
jle
test
jmp
mov
pop
js
mov
jb
cmps
lahf
test
mov
nop
fisub
push
cld
imul
or
or
inc
inc
into
sub
arpl
xchg
cmps
jae
in
cwde
pop
mov
jle
enter
and
pop
mov
pop
add
and
mov
out
fwait
stos
out
dec
adc
and
add
jno
mov
sub
stos
rcr
(bad)
mov
cwde
call
scas
test
xchg
adc
sar
pop
sub
jo
cmc
jle
retf
sahf
jge
aaa
sbb
mov
pop
call
fimul
pop
adc
xchg
add
pop
sahf
call
mov
inc
mov
sub
(bad)
pop
ja
dec
daa
out
sbb
fist
retf
xor
xchg
dec
mov
out
in
idiv
sub
push
or
push
mov
fstp
out
addr16
jbe
push
movs
icebp
call
push
ret
push
or
and
mov
or
cld
jbe
xor
adc
std
cli
add
and
xlat
push
jnp
and
cmp
inc
dec
pop
mov
(bad)
cmc
out
pop
(bad)
scas
mov
and
cmp
imul
push
scas
xor
outs
shr
aad
pusha
sbb
rcr
(bad)
mov
aad
ja
xor
int
popf
inc
test
rcl
popa
xchg
pop
mov
loopne
xor
and
lea
and
mov
or
test
test
mov
lods
lock
(bad)
xchg
fwait
dec
cmps
xor
sti
lea
jmp
add
mov
daa
pop
scas
adc
ret
or
(bad)
mov
daa
adc
jg
xchg
outs
sbb
test
out
pushf
repnz
add
dec
and
mov
iret
pop
(bad)
outs
movs
adc
or
or
shl
mov
retf
sbb
test
fwait
(bad)
and
or
retf
mov
hlt
fstp
mov
dec
(bad)
int3
bound
nop
inc
xchg
inc
mov
pop
sbb
dec
imul
test
pusha
std
ja
in
mov
or
gs
shr
push
jecxz
or
out
mov
sbb
call
cmps
adc
pop
mov
push
xlat
inc
dec
(bad)
(bad)
push
adc
inc
mov
addr16
aas
gs
mov
ins
jb
jne
mov
(bad)
clc
cs
xchg
pop
imul
std
jns
imul
jmp
int3
sbb
retf
test
sub
jnp
in
or
bnd
imul
xor
mov
call
ror
adc
repnz
loope
pop
add
sbb
pop
test
xchg
pop
push
in
stc
jp
lods
adc
mov
mov
aad
xchg
cmp
inc
mov
loopne
lods
rcl
sahf
sbb
sbb
fadd
ror
je
or
pop
(bad)
xlat
pop
cwde
pop
cwde
ins
in
pushf
pushf
or
pop
push
inc
sub
lods
nop
(bad)
ja
leave
cmp
pop
fwait
add
icebp
in
and
mov
or
push
out
je
mov
retf
jle
pushf
mov
ins
mov
dec
enter
fwait
pop
sbb
ja
xchg
sbb
nop
pop
pusha
fs
inc
bound
fwait
xchg
call
dec
loop
mov
sbb
jns
sub
mov
mov
push
xor
mov
jp
sbb
push
mov
mov
ins
xlat
or
jno
into
pop
cmc
push
sub
xor
daa
ret
test
mov
push
sbb
add
cmp
mov
sbb
pop
(bad)
in
ja
push
xor
mov
sub
push
fidivr
and
pop
dec
fnstcw
jne
rol
ret
pop
rcr
and
fsubr
call
test
das
add
mov
or
sti
aam
les
xchg
or
add
xor
(bad)
push
jp
pop
mov
in
or
push
cmp
sar
adc
pop
jle
dec
xchg
loope
loope
mov
mov
test
adc
push
pop
fstp
push
ficom
inc
stc
imul
add
sbb
push
pop
jl
mov
dec
ret
movs
adc
shr
cs
in
dec
retf
test
mov
popf
cmps
frstor
xchg
mov
adc
or
inc
sub
cmps
bound
aad
ja
cmp
xor
jae
into
movs
ss
dec
aam
inc
pushf
add
push
popf
in
pop
movs
loop
dec
mov
jno
sub
mov
sub
test
mov
mov
mov
push
data16
dec
ret
add
in
add
out
jl
jle
sbb
sahf
pop
jmp
movs
aas
jae
mov
in
inc
shr
xor
cmp
imul
xchg
sub
or
jb
shr
aam
jns
xchg
mov
not
sbb
loop
add
cmps
cmp
sbb
xor
sbb
mov
jecxz
mov
jae
popf
fld
xor
loopne
cmc
nop
dec
inc
sub
jle
cmc
aaa
jmp
ret
pop
cs
xor
(bad)
pop
je
(bad)
movs
jae
jae
stos
dec
xchg
retf
gs
pop
xlat
dec
push
sub
retf
fiadd
inc
xchg
iret
xor
jae
aam
dec
ret
and
jp
js
or
aad
jmp
sti
addr16
mov
test
jmp
loop
add
nop
sbb
sbb
aam
mov
dec
and
cmp
and
mov
adc
cmp
fs
js
dec
jmp
inc
stos
repz
push
leave
dec
cmp
dec
lahf
in
pop
xchg
popa
pop
test
jae
(bad)
sub
ficom
inc
icebp
jb
fcom
sbb
pushf
dec
add
lods
fwait
call
cmp
aaa
inc
jmp
xchg
or
or
sub
cmp
in
mov
pop
jne
rcl
bound
movs
leave
mov
xchg
xchg
adc
inc
(bad)
jecxz
in
mov
loope
mov
cli
add
shl
leave
mov
jae
(bad)
fistp
ss
je
retf
clc
(bad)
or
lock
(bad)
fdivr
std
jmp
outs
pop
inc
rep
cmps
inc
test
jmp
iret
xor
lea
dec
ins
test
mov
outs
fxtract
jne
xchg
aam
jecxz
int3
cli
aad
dec
aam
fist
cld
test
arpl
xchg
add
(bad)
popa
loop
loopne
jne
push
mov
or
(bad)
(bad)
rol
adc
mov
mov
ins
movs
(bad)
sub
push
mov
pop
or
mov
adc
cmc
or
gs
push
pop
in
jb
pop
fdiv
jns
mov
mov
sbb
sub
add
outs
repz
gs
add
scas
lods
xor
add
mov
das
push
pop
pop
cmp
or
push
imul
mov
mov
sbb
add
pop
scas
nop
call
fsub
jno
mov
bound
pop
sub
cmp
mov
bound
repz
inc
push
fbstp
fwait
or
adc
sbb
sub
xor
out
jecxz
or
imul
aam
out
dec
icebp
dec
mov
jmp
jle
mov
mov
add
ins
cmp
add
xchg
mov
inc
icebp
mov
cmp
inc
push
inc
push
push
push
xor
outs
adc
(bad)
sbb
or
aas
inc
in
in
jns
sub
jnp
jle
stos
retf
fstp
clc
push
je
dec
(bad)
lods
or
outs
push
dec
in
daa
xor
push
xor
leave
rol
scas
and
cmp
les
mov
jmp
jl
and
gs
jno
jnp
pop
mov
call
sbb
cmps
xchg
pop
aam
ins
inc
dec
pop
ins
jo
push
and
test
xchg
int3
mov
in
mov
fimul
scas
popa
mov
mov
inc
mov
adc
xchg
xchg
ins
inc
jb
retf
sbb
and
sar
and
sbb
and
pop
fnsave
loop
loope
test
imul
pop
inc
test
repnz
and
in
ror
cmp
inc
cwde
in
jb
cmp
test
fxch
push
push
or
data16
call
repnz
mov
adc
lods
sub
je
icebp
dec
(bad)
mov
ins
leave
ja
ficomp
sub
bswap
in
xchg
pop
xor
popa
(bad)
frstor
push
dec
leave
push
stos
sbb
pop
fnstsw
out
xchg
cdq
cmp
addr16
sahf
lds
mov
icebp
das
fndisi(8087
sub
sti
mov
sub
push
aas
movs
push
bound
mov
addr16
push
add
fiadd
or
sbb
loop
jecxz
mov
hlt
aaa
in
js
loop
sub
out
aad
sahf
(bad)
mov
jg
fcomp
jne
push
popa
shl
add
mov
dec
push
and
or
mov
fmul
movs
dec
mov
aad
jmp
ins
inc
sahf
lods
cmps
inc
dec
stc
test
sahf
clc
sbb
addr16
data16
std
add
popf
mov
test
popa
xchg
cli
mov
out
psubq
les
les
or
mov
cmp
mov
in
dec
sub
in
(bad)
fsub
xchg
xor
imul
cmp
mov
push
stc
fs
sbb
fwait
cmp
out
mov
xor
add
jns
jle
mov
mov
mov
mov
pop
in
dec
or
cmps
cwde
js
jns
adc
leave
rcl
push
push
lock
inc
mov
mov
jns
sub
adc
or
dec
cmp
ret
(bad)
xor
inc
jb
fwait
lods
sbb
fyl2xp1
out
sbb
mov
repz
pushf
add
addr16
stos
in
lea
sti
inc
dec
dec
popa
cmp
jbe
jmp
mov
mov
and
push
adc
mov
ins
xor
repnz
adc
test
stos
mov
and
ror
dec
ret
mov
and
mov
or
fistp
(bad)
cmp
out
mov
cmp
gs
fdiv
mov
dec
mov
ret
hlt
cdq
lods
test
outs
neg
and
(bad)
sahf
(bad)
repz
jp
mov
ds
fnsave
mov
(bad)
xor
mov
cwde
pop
iret
mov
cmp
loopne
add
mov
push
xor
xchg
icebp
enter
push
loope
xchg
lds
sub
pop
fisub
cmp
mov
adc
jb
jecxz
xchg
mov
add
das
(bad)
fcmovb
xlat
sbb
and
cdq
cmp
outs
jl
iret
add
push
jle
cmps
cs
push
dec
pop
pop
fdiv
leave
sti
loopne
push
xchg
sub
cmps
or
lock
in
sti
pop
sub
movs
neg
std
sbb
ds
fimul
sti
pop
popf
sbb
(bad)
movs
bound
sub
push
dec
sahf
or
(bad)
jp
push
push
sbb
(bad)
retf
mov
xlat
repnz
repz
mov
xchg
cmps
stos
nop
add
jb
pop
sub
inc
dec
loopne
dec
xchg
popf
(bad)
sbb
xchg
dec
out
push
retf
jae
dec
rcl
xchg
inc
lock
add
xor
sub
sahf
movs
or
mov
dec
push
hlt
stos
jg
xor
sahf
xchg
inc
push
es
dec
jno
push
adc
mov
xchg
rcl
sahf
add
or
dec
loopne
das
sbb
mov
fistp
rcl
cdq
call
fucomip
cli
ds
imul
add
adc
pop
mov
push
fs
dec
jge
imul
sbb
jmp
adc
jb
or
aas
sti
mov
nop
mov
aam
ds
jne
ins
outs
leave
pop
push
repz
repnz
sub
into
adc
jno
repnz
nop
xchg
mov
adc
inc
add
sbb
jp
neg
xor
cmps
fucomip
jb
pop
xchg
std
and
mov
ja
mov
ja
xchg
daa
dec
movs
scas
sub
in
add
fidivr
xor
jae
jmp
aam
mov
pop
out
mov
add
outs
mov
in
pop
rcr
(bad)
adc
xchg
pop
sub
loope
stos
js
push
fist
into
in
inc
push
xchg
cmp
push
jmp
inc
xor
pusha
pop
sbb
xchg
idiv
xchg
(bad)
js
dec
and
iret
dec
push
jnp
xor
mov
dec
sbb
pop
test
dec
cdq
pop
xchg
lahf
imul
jg
xchg
int
movs
and
add
(bad)
rol
mov
pop
pop
fmul
sub
cdq
sbb
pop
outs
jle
xor
mov
movs
popa
jp
fadd
jo
sbb
fisttp
xchg
push
out
imul
or
sub
addr16
stos
rol
call
dec
arpl
sbb
div
fdiv
xchg
mov
push
cld
sti
lods
mov
js
cmp
xlat
clc
jno
pop
enter
mov
daa
lds
(bad)
in
adc
out
or
mov
fidiv
adc
sbb
xchg
or
adc
fistp
mov
into
jl
shl
icebp
mov
out
fiadd
fidivr
pop
int
mov
icebp
lods
es
inc
jmp
shl
sub
repz
sub
dec
test
sub
jp
std
sbb
add
xlat
das
and
pop
imul
fld
cmp
sub
lods
loopne
sbb
lock
icebp
daa
or
sub
cli
mov
push
jl
(bad)
mov
push
and
fmul
cdq
jl
push
dec
jg
in
sbb
xchg
add
sbb
adc
jns
idiv
xchg
test
lea
add
inc
pop
xchg
inc
sub
xchg
retf
jge
jmp
jb
outs
popf
cmc
push
mov
mov
pop
cmps
sar
ja
sbb
and
cwde
mov
mov
push
loopne
jmp
iret
fsub
test
lahf
jb
call
fadd
retf
inc
mov
dec
adc
outs
jmp
adc
xor
mov
lods
mov
out
or
xor
xor
adc
and
dec
aas
leave
loopne
and
or
sub
cdq
in
sub
es
repz
(bad)
push
jecxz
cld
aad
mov
mov
gs
cmp
jmp
fsubr
scas
ins
cmc
loopne
pop
or
repz
adc
push
(bad)
xor
pop
sub
scas
sbb
add
inc
(bad)
cli
aam
inc
mov
cmp
arpl
ins
sub
inc
inc
test
mov
dec
mov
fbstp
mov
iret
jp
pop
mov
jmp
add
mov
mov
sti
fidiv
or
xor
aam
jne
mov
sbb
rcl
cdq
outs
dec
cmp
mov
xchg
leave
(bad)
shr
fist
adc
mov
pop
mov
pop
sbb
pop
push
and
sbb
or
dec
scas
cmc
mov
jbe
(bad)
sub
dec
dec
push
(bad)
cmp
ret
fnstenv
add
call
push
(bad)
and
mov
xchg
mov
ret
in
jnp
xor
mov
pop
retf
jns
(bad)
mov
jne
sbb
outs
fcom
mov
ins
rol
jmp
data16
popf
pop
cmc
adc
xlat
ret
push
imul
xor
and
xchg
ds
xlat
aam
sbb
xchg
jb
dec
xor
scas
(bad)
loopne
inc
dec
sbb
inc
aad
dec
mov
xor
push
jo
sbb
retf
daa
and
ret
xor
jge
jbe
mov
mov
ds
stc
or
test
pop
or
xor
add
cld
pop
in
dec
adc
mov
mov
out
fcomp
xor
cs
adc
sbb
fwait
aaa
mov
js
lahf
(bad)
aad
mov
mov
mov
leave
ss
xchg
sub
mov
mov
ret
movs
add
cmp
mov
or
jmp
pop
sub
mov
pop
stos
sbb
push
lods
mov
lock
cmp
(bad)
or
xor
mov
ret
movs
cmp
or
add
shl
aas
call
jg
cmp
pusha
shl
fwait
je
shl
ins
xchg
mov
xor
shr
out
add
out
fld
icebp
arpl
cwde
retf
das
outs
add
imul
stos
aam
inc
and
cmp
out
shl
dec
pushf
sar
or
push
popa
dec
mov
adc
cmps
int
mov
jno
test
and
adc
mov
imul
pusha
dec
call
dec
and
xchg
sub
sbb
xor
rcr
xor
es
inc
xor
loopne
add
(bad)
xor
mov
retf
not
sub
repnz
(bad)
mov
int3
and
push
mov
xchg
(bad)
mov
stos
xchg
ror
dec
enter
mov
pop
mov
jbe
cwde
mov
cpuid
sbb
jb
mov
(bad)
mov
enter
(bad)
push
mov
inc
clc
jg
mov
xchg
cld
dec
mov
and
(bad)
popf
scas
sbb
inc
sub
dec
(bad)
div
mov
sub
daa
or
adc
mov
pop
rcr
jecxz
push
std
loopne
adc
mov
and
or
data16
ins
sbb
jge
mov
mov
sbb
xor
enter
ss
fiadd
xchg
bound
(bad)
mov
(bad)
enter
sbb
arpl
jmp
retf
jbe
sbb
gs
mov
pop
(bad)
int3
(bad)
std
inc
xchg
cmc
test
sbb
ds
add
pop
or
loop
push
mov
mov
fs
dec
vcvtdq2pd
hlt
sub
cmps
xchg
ror
fnstenv
and
dec
push
rol
clc
and
shl
push
enter
push
ret
ja
mov
mov
cld
idiv
in
or
imul
adc
test
inc
cs
mov
movs
add
jns
fs
xor
ret
bswap
cmps
sbb
jo
xchg
aad
ja
xchg
jp
jmp
pop
imul
les
imul
xor
xor
mov
fnstcw
in
push
mov
loopne
sub
lods
mov
mov
retf
and
mov
add
jl
and
(bad)
fnstcw
retf
ja
xchg
xor
mov
in
mul
xchg
test
scas
pop
cmp
and
push
out
and
mov
js
icebp
(bad)
mov
push
int
(bad)
jae
pushf
mov
push
inc
shl
stc
pop
loop
nop
movs
mov
jg
aaa
mov
ret
cli
add
fisttp
aas
ins
outs
or
ret
jle
add
in
xor
stc
mov
xchg
les
icebp
cmc
sbb
mov
add
leave
lmsw
push
je
mov
xchg
out
hlt
push
into
lods
sbb
or
gs
and
popa
(bad)
jmp
cmc
mov
shl
xchg
in
pop
leave
retf
stos
out
outs
xchg
mov
lea
inc
movzx
int3
jmp
inc
inc
imul
jae
xchg
cmp
arpl
pop
or
inc
pusha
and
dec
sbb
pop
fs
mov
jmp
push
cmp
cmp
mov
retf
movs
clc
pop
push
lds
sahf
pop
in
popf
sub
iret
xchg
cld
rcr
adc
jbe
retf
xchg
call
xchg
ficom
and
cmp
es
das
gs
out
test
retf
mov
xchg
out
xchg
icebp
or
jp
outs
jg
dec
(bad)
add
pop
mov
ins
jb
xchg
(bad)
jmp
xchg
cmp
inc
(bad)
xchg
sar
xor
cs
jno
adc
scas
shl
ins
movs
pop
out
add
rcl
sub
xor
pop
adc
mov
sbb
and
repnz
sbb
stos
mov
adc
mov
fsubrp
into
inc
sbb
jmp
imul
dec
pushf
jo
or
(bad)
(bad)
retf
or
movs
pcmpeqd
fldln2
clc
push
movs
fwait
retf
pusha
xchg
xchg
xor
mov
ds
gs
sbb
sbb
jbe
dec
mul
scas
cmp
pop
movs
inc
mov
jecxz
test
icebp
sub
xchg
(bad)
jns
adc
sub
or
cvtpi2ps
and
lea
or
or
xchg
sahf
dec
dec
cmp
or
dec
test
xchg
(bad)
pop
loop
pop
sub
pop
shr
sbb
mov
test
dec
xchg
ins
repnz
aad
dec
test
and
leave
daa
sub
push
cmp
push
mov
leave
or
call
(bad)
call
ins
imul
popa
jo
inc
int3
xchg
ret
pop
sbb
aaa
jmp
bound
inc
imul
pop
push
addr16
cmp
xchg
bound
inc
xchg
iret
arpl
sbb
ins
sbb
xchg
mov
outs
es
lahf
push
mov
out
ret
cmp
add
iret
in
mov
lds
or
daa
or
or
and
jb
mov
ja
gs
sbb
je
stos
adc
cmp
ss
mov
outs
or
jnp
pop
sahf
pop
inc
sub
sti
push
xor
je
jnp
in
iret
xchg
inc
xor
das
test
fbld
fnstsw
mov
sbb
mul
and
test
les
ret
jge
in
xchg
rcl
cli
jp
push
dec
test
pop
inc
inc
and
lea
push
pop
retf
jmp
push
or
js
xchg
pop
cld
cmp
leave
scas
sbb
mov
mov
es
dec
pop
xor
and
not
outs
or
lahf
or
inc
pop
sbb
inc
pop
mov
icebp
push
lods
pop
and
jae
sbb
fs
fld
scas
sbb
lea
enter
xor
cli
loopne
enter
in
sbb
mov
sbb
pop
mov
shr
sbb
das
(bad)
mov
lahf
mov
jp
fldcw
mov
and
cmp
arpl
test
ret
pop
not
and
(bad)
xor
mov
xor
fstp
jecxz
mov
ins
fistp
xor
mov
jno
add
pop
gs
xchg
jo
fisttp
xchg
or
aaa
pop
cmps
ficomp
stos
retf
or
shl
cs
sub
and
push
(bad)
out
push
scas
sub
xlat
cmps
jbe
lods
xor
xor
push
(bad)
jbe
sbb
mov
retf
test
cmps
or
das
xchg
xchg
push
sub
pop
cmp
xchg
push
retf
out
jo
jp
aas
rcr
add
sub
dec
sbb
xor
(bad)
das
clc
or
inc
test
xchg
imul
in
int
clc
popf
nop
and
(bad)
jmp
mov
jmp
xchg
(bad)
idiv
dec
cmp
and
fdiv
mov
sbb
sub
add
enter
mov
cmp
data16
js
ins
int
mov
cmp
sub
mov
pop
push
inc
jns
pop
cs
pop
gs
push
cmp
dec
or
cmp
cmps
adc
push
or
inc
jp
enter
in
hlt
or
pop
pop
mov
retf
ds
and
cmps
out
add
pop
scas
out
fcmovne
loope
not
stc
popf
pusha
lock
mov
mov
shl
rcr
push
mov
lds
(bad)
sti
fwait
inc
dec
push
mov
repnz
aaa
pusha
pop
dec
call
sar
sub
fs
xlat
jle
movs
cmps
push
xchg
std
adc
or
repnz
push
mov
pop
sbb
pop
neg
dec
mov
idiv
call
mov
xchg
outs
jnp
jg
test
stos
iret
dec
icebp
mov
mov
sbb
ja
mov
mov
sbb
cmp
in
(bad)
dec
dec
(bad)
cmp
mov
mov
or
dec
std
xor
out
lahf
dec
push
cmc
test
imul
icebp
sti
and
adc
pusha
(bad)
mov
bound
in
(bad)
cmp
fidivr
mov
push
jbe
or
jg
loop
and
cs
outs
jp
sahf
ja
dec
jg
movs
dec
arpl
xor
not
pop
fimul
cmp
cmp
sbb
xor
pop
add
in
cmp
or
push
jmp
inc
popf
ficomp
gs
sub
mov
pop
mov
inc
add
movs
mov
mul
sbb
shl
sbb
(bad)
xor
mov
ror
(bad)
pop
cmp
pop
ror
aaa
test
mov
add
cmp
sbb
sub
mov
popa
test
cmp
leave
iret
xchg
aas
mov
adc
pusha
inc
jo
popa
(bad)
popf
lock
mul
add
push
(bad)
fistp
adc
and
ins
mov
mov
fs
pop
jmp
jo
in
dec
or
mov
mov
ror
push
sbb
cwde
sbb
(bad)
cmp
jmp
jbe
inc
dec
cmp
or
sbb
sti
adc
pop
sbb
stos
dec
loopne
(bad)
mov
mov
cwde
popa
inc
mov
int
pop
pop
xchg
ja
inc
aad
adc
retf
pusha
cld
stos
mov
rol
imul
outs
sbb
dec
addr16
or
mov
mov
ror
sbb
pop
stos
jp
xchg
cli
loope
xor
pop
icebp
ret
push
hlt
cdq
stc
inc
sub
rcr
popf
sub
cmp
xchg
or
sbb
dec
data16
in
cmp
jb
or
push
adc
cmp
int3
js
pop
cmps
add
(bad)
outs
out
hlt
movs
lahf
jbe
ror
out
mov
int3
jg
cmc
sti
mov
cmp
mov
jge
stos
in
jno
in
je
add
push
mov
fcom
cmps
jge
sub
loopne
sbb
loopne
sahf
sbb
fistp
out
inc
sbb
mov
lods
cmps
aad
pop
pop
inc
arpl
aam
hlt
dec
pop
fdivp
cmp
aad
cmp
leave
xchg
ret
test
inc
add
adc
push
(bad)
xlat
mov
mov
movs
retf
xchg
jp
push
into
jb
into
and
mov
js
in
rcpps
lahf
nop
sbb
fst
cli
lods
cli
xchg
and
int3
push
jae
and
mov
xor
inc
pminsw
shl
arpl
nop
dec
xchg
pop
ja
push
inc
or
sahf
dec
jno
sub
ret
fld
aaa
or
call
shl
push
xor
adc
or
add
gs
sub
(bad)
sbb
mov
sar
pushf
das
xor
int
push
sbb
daa
push
stos
hlt
iret
dec
fisub
jnp
cmps
jne
add
stos
(bad)
test
jl
stc
push
jmp
xor
in
stc
mov
adc
bound
sbb
inc
dec
dec
pop
sbb
or
xchg
ins
pop
dec
cmps
aam
jae
addr16
xchg
test
xor
mov
mov
loop
cdq
dec
lods
movs
cmp
inc
stos
mov
xchg
cmp
pop
lds
push
dec
mov
pushf
mov
pop
mov
enter
outs
hlt
xor
pop
cld
aas
test
ss
cld
fldenv
inc
xor
fcom
mov
push
inc
fnstcw
lods
sbb
push
dec
dec
mov
(bad)
fimul
and
xchg
jmp
jecxz
data16
in
xchg
js
pop
ret
xchg
out
add
jne
add
add
lds
add
movs
div
inc
sbb
jo
aam
fistp
xchg
add
fst
push
int3
fs
mov
ins
add
or
pop
daa
and
xor
ret
movs
dec
xor
jle
(bad)
push
and
dec
inc
sbb
dec
jae
push
ror
shl
movs
(bad)
retf
or
pop
(bad)
aad
and
arpl
mov
ds
cmp
and
loope
fidiv
adc
in
push
mov
pop
xchg
push
retf
dec
adc
and
fwait
xchg
jne
xchg
(bad)
push
pop
loop
or
mov
ret
(bad)
fisubr
into
in
cmp
mov
add
sub
inc
fstp
sub
adc
dec
pusha
cld
jo
mov
imul
push
mov
das
ret
mov
push
stos
cwde
pop
sub
dec
movs
add
xor
(bad)
dec
jge
cmp
push
mov
mov
out
xor
xor
dec
adc
dec
jmp
outs
xchg
lds
into
mov
(bad)
fldenv
aaa
stos
add
dec
lods
movs
ds
push
es
pop
jge
repnz
dec
xlat
fbstp
add
mov
inc
and
mov
inc
inc
mov
cmp
pop
adc
dec
push
in
(bad)
enter
push
int3
int3
push
dec
sbb
jae
cmp
bound
jo
rcl
sbb
loope
loop
push
inc
adc
inc
add
push
add
movs
in
jle
les
test
fild
stos
jle
push
or
shl
cs
sbb
push
mov
add
test
rcr
push
in
or
jecxz
inc
adc
aad
repnz
icebp
fdivr
(bad)
fs
add
mov
or
dec
dec
xchg
call
lods
pushf
and
aad
push
jl
sub
add
movs
xchg
pop
xor
dec
cmp
adc
push
mov
xchg
mov
mov
loope
cli
loope
add
dec
enter
cs
jne
sbb
into
cmps
dec
push
cmp
or
mov
(bad)
fistp
xchg
(bad)
call
sbb
mov
retf
vunpckhps
shl
and
in
in
dec
fs
cdq
cmp
dec
sub
mov
enter
shr
add
cmp
jp
bound
enter
sbb
subps
iretw
loop
sbb
es
mov
mov
mov
sti
and
mov
and
cmp
sub
out
and
push
cld
lods
cmp
dec
pop
in
xchg
(bad)
push
pop
jno
loopne
bound
xchg
int3
sbb
push
dec
or
in
pop
push
jo
addr16
adc
pop
jae
sbb
mov
movs
popa
mov
and
out
cmps
jmp
inc
sub
mov
ins
jl
jno
sub
inc
stc
pop
push
add
clc
(bad)
stc
adc
arpl
loop
pop
cmp
test
pop
push
aas
inc
test
mov
daa
std
push
movs
ja
sbb
(bad)
ins
cmp
lock
lea
ds
fadd
ds
popf
push
stc
mov
in
or
xor
or
jmp
fcom
cld
scas
inc
mov
cli
sar
mov
sub
ds
mov
mov
push
std
dec
inc
cmp
xor
test
jp
mov
sub
sub
out
js
cmp
push
jne
call
or
enter
(bad)
repz
in
xchg
mov
je
rol
outs
shl
sub
sub
iret
inc
xlat
test
dec
jns
jecxz
outs
xchg
cmp
sub
push
icebp
cmp
push
jle
cwde
push
mov
cld
iret
add
mov
lds
jp
and
(bad)
in
mov
test
call
les
ds
dec
fnstcw
jae
test
mov
cmp
push
xchg
sti
lahf
push
xchg
inc
ds
pop
jnp
int3
repz
add
sahf
cmp
repnz
loop
aam
rcr
out
dec
xchg
add
movs
cli
push
arpl
sbb
cmp
push
call
ret
or
loopne
lahf
sub
pop
ror
add
jmp
xchg
add
pushf
(bad)
or
jb
inc
aas
jp
fnstenv
(bad)
cmps
repnz
stc
xor
retf
and
add
popa
test
add
outs
inc
and
cs
cmp
pop
enter
mov
cs
and
mov
push
cdq
mov
pop
pop
nop
dec
sbb
int3
jno
repnz
sbb
ds
xchg
fstp
adc
loope
data16
xchg
mov
int
push
ins
cmps
scas
adc
mov
fwait
out
fdiv
mov
movs
lods
xor
cmp
and
sar
mov
jmp
mov
dec
adc
sbb
mov
push
mov
mov
sar
ja
xchg
dec
xor
icebp
cmc
jg
iret
nop
retf
push
mov
push
sub
mov
mov
mov
call
gs
call
neg
call
sbb
repnz
pop
call
fistp
or
outs
bound
inc
(bad)
or
fnsave
in
leave
test
jecxz
jecxz
imul
push
frstor
adc
jnp
mov
jae
mov
js
add
fcom
xor
outs
jns
shr
cmps
lds
add
add
inc
nop
mov
add
and
adc
out
mov
cmp
jo
jmp
pop
inc
and
arpl
add
cmp
mov
sbb
nop
sub
push
test
(bad)
(bad)
dec
mov
adc
sahf
test
imul
xor
test
ja
int
test
mov
adc
mov
inc
fisub
xor
lahf
xchg
loopne
push
dec
sbb
inc
mov
mov
int3
fld
lds
lods
dec
fild
(bad)
xchg
push
mov
push
test
imul
push
inc
ss
mov
pop
cmp
test
adc
xor
loop
lahf
mov
adc
cmp
pop
icebp
mov
add
xchg
cmp
fsubr
jp
aaa
xchg
cmp
js
enter
movs
mov
loope
sar
sbb
adc
out
fs
fbstp
xchg
shl
jns
inc
sub
inc
or
(bad)
cmp
imul
push
dec
cmps
ficomp
enter
(bad)
xchg
cmc
mov
loop
out
jnp
adc
xchg
std
jle
in
mov
into
shr
ja
and
ret
mov
push
ins
mov
aaa
mov
not
mov
or
xchg
xor
cdq
mov
jae
outs
std
inc
xchg
dec
push
inc
jb
test
pop
cmp
ins
fistp
adc
repz
fs
ss
add
(bad)
or
js
mov
add
push
pop
jns
cmp
jbe
cmps
dec
push
out
cli
cmc
fwait
push
(bad)
in
pushf
shl
in
add
out
push
les
fld
push
mov
in
and
sub
mov
movs
mov
ja
inc
lea
mov
mov
pop
or
shl
inc
mov
jmp
adc
and
sbb
dec
add
ins
mov
jp
rol
fwait
das
jp
test
xor
mov
xchg
adc
int
add
push
fsub
in
jge
mov
repz
ins
xlat
xchg
movs
rcr
pop
or
movs
xor
outs
movs
loopne
sahf
call
iret
xchg
push
lock
cmc
popf
and
push
add
jnp
jbe
fcom
jne
pop
stos
cmp
pop
iretw
std
dec
cmp
jns
stc
sbb
popa
jmp
and
movs
popa
std
add
int3
cmp
xlat
jl
pop
arpl
xchg
inc
push
lock
aaa
mov
test
lods
sub
call
add
iret
xchg
(bad)
xor
mov
leave
pop
popa
cmc
dec
jge
jnp
pop
ror
ins
fldcw
int3
mov
sub
mov
popf
jmp
movs
les
sar
out
outs
not
pushf
lods
dec
js
sti
inc
add
push
push
cmp
sahf
clc
push
adc
sbb
cmc
leave
loopne
sub
pop
xor
dec
mov
pop
cwde
in
cs
or
ss
inc
xor
add
mov
add
pop
scas
mov
fucomi
sub
aas
movs
add
push
pusha
xchg
mov
test
pop
ret
scas
mov
cs
test
(bad)
jmp
mov
movs
ss
out
pop
lea
les
mov
(bad)
sub
test
shl
ins
or
mov
std
call
hlt
pop
mov
sahf
lock
mov
inc
xlat
aad
push
sar
and
int3
in
retf
push
inc
sbb
cmp
dec
int
pushf
or
xor
pop
or
push
popf
(bad)
(bad)
mov
sub
out
jg
cmc
or
fcomp
loopne
sbb
dec
in
test
sbb
out
xlat
pop
call
mov
ja
push
mov
xlat
mov
pop
jo
xchg
call
pshufw
int
je
jo
mov
ins
sub
stos
jbe
jecxz
bound
cmp
and
fldenv
xor
arpl
adc
fisttp
xchg
mov
push
add
mov
mov
push
push
and
push
pop
je
icebp
mov
gs
jae
in
sbb
sub
nop
sbb
and
jne
(bad)
out
xchg
out
pop
into
call
add
cmc
in
jl
out
push
ret
js
sbb
cwde
test
pop
shr
or
adc
push
nop
(bad)
jg
xlat
hlt
pop
sbb
or
xchg
dec
sub
mov
add
hlt
repz
into
dec
add
inc
or
arpl
fcmovne
or
inc
and
data16
scas
mov
leave
(bad)
mov
(bad)
fsubr
inc
and
dec
pop
lea
movs
stos
cli
xchg
sub
adc
out
jne
mov
add
jmp
add
inc
out
adc
xor
jbe
mov
jne
scas
xor
(bad)
push
inc
pop
xchg
out
dec
mov
push
icebp
xchg
aaa
mul
pop
dec
mov
mov
push
ret
or
mov
ret
mov
jl
into
mov
add
call
cs
adc
(bad)
in
hlt
inc
push
jnp
and
mov
inc
int
out
test
mov
sub
push
and
loop
pop
adc
mov
jg
cmp
out
mov
mov
outs
imul
mov
stos
int
cwde
mov
fidivr
div
mov
outs
push
imul
not
push
sbb
pop
repz
or
ret
jo
enter
std
out
pop
jbe
aas
imul
daa
jmp
and
cs
cmp
mov
call
sbb
mov
and
int
fucomi
dec
and
rcr
adc
jg
adc
test
popa
mov
arpl
sahf
sbb
sbb
jno
cwde
xor
pop
lds
cmp
fmul
cmc
sub
fwait
push
test
xchg
repz
les
repnz
sti
movs
call
or
dec
stc
out
xchg
mov
ins
add
loopne
dec
mov
push
push
(bad)
fdivr
xchg
fwait
pop
sub
or
adc
push
stos
xchg
sbb
pop
shl
ret
jnp
in
adc
les
or
icebp
push
cmp
sub
repz
jle
xchg
sub
ins
xlat
test
push
test
jmp
rcr
(bad)
or
adc
jne
ret
call
dec
cmp
popa
jl
push
mov
and
int3
imul
lahf
scas
fadd
adc
stos
or
fsub
test
sbb
fcmovnb
pop
jmp
rcr
hlt
inc
cmp
pop
daa
mov
sysret
cmp
push
or
nop
lods
xchg
lea
inc
push
in
jmp
mov
mov
jg
icebp
push
dec
imul
hlt
adc
xchg
adc
ror
pop
cmp
pop
neg
gs
jp
pop
repnz
xor
in
mov
mov
or
aad
jle
test
outs
adc
jne
or
in
hlt
js
xor
xchg
mov
and
sub
push
cmps
shr
push
sub
lea
shr
sbb
es
sub
lahf
or
repz
daa
(bad)
popf
in
push
mov
imul
fst
add
out
mov
add
call
out
daa
sbb
jmp
xchg
mov
jno
mov
jb
loope
adc
jl
pop
cdq
popf
mov
push
mov
call
inc
dec
fcmovb
loope
imul
ds
loop
daa
pop
in
fs
sub
test
loop
mov
rol
scas
ss
(bad)
mov
montmul
cmps
inc
test
xor
mov
pop
retf
hlt
gs
test
sti
or
cwde
fcom
and
pop
mov
js
cmp
mov
cwde
loopne
mov
xchg
aaa
sbb
sar
popf
xor
sub
push
pop
es
mov
pusha
call
fbstp
inc
mov
neg
int
mov
mov
imul
inc
fbld
or
test
or
inc
add
mov
in
jp
push
push
or
cmp
pop
nop
cmp
mov
mov
add
inc
in
or
jl
inc
and
cmp
xchg
outs
dec
cmp
cmp
mov
lahf
fisttp
adc
retf
mov
in
sbb
add
pop
or
jg
mov
fisttp
cmps
movs
inc
pop
mov
ins
pop
add
jl
add
mov
jo
pop
jnp
adc
cmps
cmp
jbe
movs
ret
jg
popa
dec
inc
jns
sub
add
jp
aam
inc
out
icebp
cmp
add
xor
pop
jb
inc
xor
jl
push
stos
test
shl
xchg
pop
sub
xchg
sbb
loope
(bad)
jne
or
push
inc
jns
inc
mov
mov
imul
jno
shr
arpl
inc
jl
shl
sub
out
arpl
push
mov
jmp
jbe
lds
mov
adc
xchg
add
or
dec
push
pusha
movs
frstor
aaa
lds
pusha
or
fmul
push
adc
inc
hlt
call
mov
daa
lock
mov
arpl
and
pop
stos
inc
push
mov
push
xor
or
and
or
push
add
(bad)
push
or
cmps
jmp
add
popa
pop
in
mov
add
mov
in
in
xor
cmp
out
sbb
mov
cdq
ins
jp
add
lods
ja
mov
sub
xchg
add
cmp
xchg
ja
mov
sbb
dec
lea
in
cmc
sbb
cmp
sbb
in
xor
mov
or
call
mov
lods
std
int3
int3
call
fwait
in
cmp
ret
or
xchg
fwait
movs
ins
inc
jns
inc
ret
je
add
cld
and
cmp
call
(bad)
mul
sar
lahf
sbb
out
aam
xchg
mov
sbb
lea
add
dec
sub
repz
outs
or
jbe
lock
fs
(bad)
mov
mov
add
ss
jp
test
imul
mov
xchg
(bad)
jl
in
jl
push
frstpm(287
inc
test
cmps
sbb
push
fisttp
mov
std
clc
int3
jmp
pop
dec
stos
xchg
pushf
jnp
inc
pop
mov
sub
iret
sbb
push
xchg
loope
dec
add
pop
dec
xlat
js
popa
pop
leave
shr
int
test
outs
sbb
cmp
sbb
and
lods
dec
pop
xor
pop
xchg
das
or
(bad)
dec
ins
xchg
cld
jl
pop
sbb
add
sbb
jecxz
mov
mov
out
push
mov
enter
mov
les
dec
lock
stc
xchg
mov
inc
cmps
push
scas
ja
or
scas
test
mov
dec
dec
pop
xchg
sbb
inc
cmc
jg
and
fnsave
sub
sub
dec
into
es
push
dec
inc
sar
inc
es
inc
lahf
adc
dec
arpl
in
jbe
sti
cmps
sbb
mov
inc
jg
jbe
push
repz
sbb
rcl
jae
push
jmp
rol
inc
xchg
ins
pop
fcom
pop
xchg
mov
clc
in
adc
cmc
xchg
sbb
dec
adc
mov
mov
jns
dec
add
jo
movs
add
jecxz
dec
mov
pusha
daa
xchg
stos
cwde
xchg
in
nop
rcr
xchg
push
(bad)
cmp
pop
pop
and
sahf
ins
test
or
adc
cmc
pop
adc
hlt
pop
xchg
ret
sbb
jns
push
adc
(bad)
lahf
in
mov
sub
lods
(bad)
ins
dec
mov
sbb
in
push
pop
jl
test
xchg
xchg
dec
movsx
and
adc
enter
movs
push
jb
aad
sbb
repz
ds
and
sub
add
xor
aam
dec
dec
add
call
push
inc
scas
sub
adc
and
mov
movs
pop
test
vmread
jne
ins
jo
adc
imul
jmp
rcr
inc
cld
popa
inc
dec
adc
jg
pusha
loopne
test
ja
std
mov
aaa
xchg
jnp
hlt
xchg
shl
sub
and
(bad)
sbb
jmp
xchg
js
out
ds
out
xchg
lahf
into
pop
aam
dec
and
xchg
sbb
sbb
push
dec
sub
add
push
stos
outs
sub
push
lods
imul
addr16
sbb
pusha
in
mov
or
cmp
push
pusha
cli
ret
push
xchg
lds
icebp
mov
es
out
scas
pusha
push
cmp
pop
jmp
dec
leave
daa
adc
adc
fcom
cmp
xchg
lahf
sbb
xchg
mov
jp
inc
xlat
xchg
cli
pop
das
in
fst
jae
dec
dec
mov
push
mov
dec
and
cmps
in
arpl
dec
jl
(bad)
sub
xchg
mov
scas
popa
mov
push
sbb
adc
and
test
dec
mov
add
repz
add
clc
and
jnp
std
jg
mov
xor
or
push
jmp
cmp
ffree
gs
test
setae
push
les
fisubr
mov
inc
mov
mov
(bad)
adc
xchg
mov
aas
sti
cmp
out
mov
pop
leave
cmp
xchg
loope
pop
inc
cwde
lods
sub
popa
xchg
loop
add
inc
xor
lds
outs
mov
rol
(bad)
cmp
call
shl
inc
dec
test
xchg
dec
aad
(bad)
sbb
ret
sbb
sub
jbe
push
icebp
js
loop
dec
aaa
cwde
imul
aad
jecxz
test
inc
push
inc
aaa
mov
or
add
mov
int
adc
cli
sbb
ficom
fsub
fsubr
out
mov
mov
mov
(bad)
sub
ror
sub
push
push
int
xor
cmps
inc
and
jg
mov
clc
sub
enter
aad
mov
test
je
sbb
xor
mov
mov
pushf
inc
cs
arpl
pop
imul
adc
leave
sbb
call
cld
mov
and
ficomp
and
inc
pop
jecxz
mov
push
test
lods
ret
(bad)
popf
ins
shr
jno
call
dec
lods
and
jno
nop
xchg
cli
jecxz
jns
and
cli
sub
lods
sbb
dec
mov
cdq
xchg
push
test
ror
(bad)
(bad)
inc
mov
push
cmp
mov
mov
xchg
mov
fimul
xchg
fdivr
mov
inc
xchg
xchg
pushf
jmp
cmp
shl
fisttp
cmc
xor
stos
pop
jae
mov
aam
push
leave
sbb
imul
dec
sbb
dec
in
dec
mov
mov
add
pop
iret
inc
bound
mov
xchg
vmwrite
in
mov
or
rcl
js
sub
std
push
jnp
(bad)
mov
ficom
neg
daa
das
dec
mov
ja
outs
jge
cwde
scas
stos
xchg
and
add
(bad)
sub
cmp
and
scas
pop
sub
adc
add
jge
push
inc
mov
in
popa
popa
shl
inc
movs
cmp
xchg
jnp
mov
js
js
repnz
sub
repnz
in
ins
jns
xchg
push
pop
inc
xor
in
jecxz
mov
cld
sub
mov
cmp
pop
bound
cmp
add
arpl
jo
mov
stos
(bad)
mov
jecxz
int
mov
dec
jmp
cwde
mov
bound
lods
outs
ficomp
cmp
ins
cmc
aas
sub
push
mov
or
or
sbb
inc
popa
ror
rcl
ds
and
xchg
sbb
ss
xor
mov
fnstenv
clc
test
inc
loope
(bad)
mov
mov
mov
push
xchg
mov
lods
outs
push
mov
repz
jecxz
xchg
inc
xchg
fisttp
jmp
clc
adc
xor
inc
pop
rcl
cmp
mov
dec
pop
mov
test
lods
imul
call
xor
pop
mov
inc
or
mov
std
test
popa
popf
clc
xor
inc
cmp
call
jne
adc
dec
scas
idiv
shl
cs
mov
sbb
std
sub
clc
in
(bad)
xchg
imul
inc
dec
cld
cmp
jmp
jmp
(bad)
aam
mov
mov
push
inc
push
dec
mov
addr16
lahf
fyl2x
xacquire
sahf
loop
adc
cli
sub
pop
pop
loopne
mov
jl
das
loope
retf
fdivr
out
cmc
cmp
call
pop
in
aas
lods
repnz
add
sbb
mov
outs
add
mov
mov
ret
adc
ds
pop
test
cdq
fisub
ret
int3
xchg
fsub
dec
into
inc
dec
jmp
adc
pushf
aaa
movs
adc
stc
and
popa
jae
cdq
out
bound
add
les
pop
push
call
push
push
fdiv
or
add
out
mov
in
push
xor
pusha
mov
jns
jo
xor
aas
cmps
xor
and
mov
call
sub
mov
push
psrad
sti
neg
in
in
scas
nop
test
xor
imul
ret
xchg
cmp
fs
retf
sbb
push
lods
imul
sti
jo
mov
mov
test
sub
frstor
mov
pop
aam
ret
xor
sti
je
cmp
dec
fs
std
mov
and
mov
inc
(bad)
xor
push
out
dec
mov
mov
ja
mov
xchg
test
(bad)
sbb
mov
add
xchg
xchg
or
and
dec
std
cwde
addr16
retf
std
int3
add
test
xor
mov
hlt
ins
pop
les
in
mov
mov
imul
sbb
call
xchg
and
movs
mov
ins
into
rcl
adc
ret
retf
jmp
movs
push
mov
sub
idiv
cli
ror
popa
lods
je
inc
enter
dec
(bad)
jecxz
jns
fcmovb
dec
and
mov
cmp
adc
inc
stos
call
or
sub
in
stos
pop
xor
rol
ret
lods
xor
or
jae
pop
clc
jle
jg
cmp
sbb
std
inc
(bad)
dec
jge
cli
or
push
in
(bad)
dec
daa
data16
add
mov
jbe
or
movs
loope
mov
cmp
fimul
out
mov
jno
add
js
int
mov
mov
add
and
jge
xor
fst
sti
mov
mov
sbb
into
data16
dec
sbb
daa
or
cmp
icebp
(bad)
imul
enter
pop
mov
inc
(bad)
push
jmp
cmp
cmp
mov
test
sbb
cmps
pmuludq
inc
xchg
je
js
and
outs
xor
mov
push
(bad)
sub
dec
add
inc
imul
xchg
imul
jo
push
in
ss
out
xor
jp
mov
cwde
xchg
add
not
jl
call
and
adc
jb
mov
dec
gs
cmp
sbb
into
sbb
dec
dec
mov
push
enter
sbb
enter
cld
stc
push
sbb
mov
xchg
pop
jmp
shr
mov
mov
inc
cwde
shl
adc
fs
mov
cld
and
sbb
test
pop
mov
hlt
or
(bad)
and
loope
or
push
out
clc
xlat
clc
test
and
mov
add
in
enter
(bad)
mov
xchg
inc
jbe
aad
or
jae
fstp
adc
ja
add
pushf
das
push
jmp
test
jmp
mov
out
lods
xor
movs
ds
mov
jmp
xor
in
clc
xchg
iret
mov
and
scas
sbb
jmp
enter
enter
cmps
inc
push
xlat
push
outs
scas
test
xchg
adc
dec
and
push
push
jnp
cmps
retf
xchg
call
jmp
and
sahf
daa
pop
call
sub
cmp
jo
inc
sub
or
xchg
xchg
mov
(bad)
mov
xchg
outs
or
mov
jg
stos
mov
cld
imul
in
push
cmp
jnp
sub
xor
test
push
sbb
cld
mov
int3
rol
cmp
cmp
mov
test
loope
push
movaps
jo
push
mov
pop
leave
and
sub
pop
enter
ja
pop
ins
(bad)
fiadd
into
mov
xchg
mov
or
push
or
jo
sbb
xchg
adc
lea
call
jns
jge
jnp
lds
sub
dec
pop
mov
ss
push
std
fidiv
inc
in
xchg
icebp
lods
mov
rol
test
cdq
cmp
je
adc
sub
aas
loope
retf
ins
mov
sbb
popf
push
imul
cmp
jnp
es
outs
xlat
jb
jmp
out
and
push
jle
mov
cdq
mov
cmp
nop
cmova
pop
addr16
mov
push
mov
retf
jp
mov
stos
in
xchg
xor
xor
loope
push
or
enter
stos
mov
jns
lea
sbb
imul
fimul
and
out
add
push
frstor
xchg
shr
call
lods
in
pop
movs
inc
lods
cmps
rcr
mov
cdq
sub
mov
xchg
dec
aad
(bad)
fcomp
and
xor
add
mov
inc
adc
mov
xor
or
jb
sub
lods
push
lock
(bad)
cmp
lods
movs
ins
jnp
cmp
aad
xor
sahf
test
adc
xchg
xchg
xor
add
rol
sbb
ss
inc
ret
push
std
push
loop
test
jp
sbb
pusha
nop
mov
jo
mov
jg
repz
lds
in
loop
xor
movs
pop
jge
outs
fst
mov
or
lods
fcmovu
add
push
jmp
test
pop
adc
inc
hlt
je
rcr
arpl
test
imul
icebp
fld
pushf
in
je
cmp
jne
mov
sahf
out
neg
or
and
add
dec
and
mov
sti
inc
mov
mov
xchg
push
ss
and
jmp
or
pop
cmp
adc
iret
(bad)
scas
push
mov
mov
adc
jp
push
movs
shr
rcl
repnz
loope
dec
int3
retf
add
cmc
fistp
dec
mov
iret
inc
sbb
nop
adc
xchg
inc
and
shl
xchg
mov
fbstp
dec
mov
jle
sahf
or
cmp
push
or
jle
(bad)
lods
scas
mov
shl
push
xchg
sbb
in
leave
mov
out
add
push
push
fwait
dec
adc
and
pop
inc
out
jb
jbe
sbb
push
mov
stos
shl
push
xchg
adc
pushf
enter
gs
enter
and
xor
mov
fwait
dec
movs
stos
sbb
sbb
jbe
inc
xor
xchg
fld
loope
xor
mov
mov
push
inc
ins
fwait
call
mov
(bad)
pop
popf
imul
test
les
jo
adc
pop
xor
sbb
shl
inc
rcl
pop
mov
(bad)
mov
pop
push
mov
jle
jb
xor
(bad)
shr
mov
mov
ja
inc
outs
stos
add
imul
aaa
dec
test
ss
fs
adc
xchg
sbb
push
mov
out
jno
mul
adc
adc
inc
test
cmp
xchg
jmp
popa
sbb
xor
mov
leave
call
sbb
loopne
pop
sbb
arpl
cmps
lods
xor
push
ins
aas
sub
inc
push
lods
lods
test
out
hlt
imul
(bad)
push
mov
les
sub
ins
adc
xor
sub
aad
dec
xchg
mov
xor
inc
lds
sti
push
push
stc
in
mov
xchg
sub
dec
xor
dec
lea
scas
leave
push
or
jmp
ffree
or
mov
je
outs
pop
xchg
dec
dec
add
sahf
out
addr16
js
push
dec
(bad)
bound
mov
pop
mov
mov
mov
in
add
cld
sbb
adc
scas
cdq
fbstp
cmps
push
pop
mov
rcr
mov
jns
ficomp
xchg
mov
dec
sbb
test
and
jecxz
jecxz
xor
test
imul
add
sbb
fcmovne
aaa
push
ror
cmps
mov
ins
(bad)
mov
add
dec
xor
jmp
adc
pop
add
int3
mov
mov
pop
icebp
mov
mov
sub
outs
inc
cmp
inc
iret
lock
jne
popa
or
in
hlt
scas
xchg
and
pop
sbb
lea
mov
jnp
sti
jno
rcl
inc
pop
pushf
add
mov
mov
test
outs
into
pusha
xor
push
test
cmp
pushf
lock
and
add
test
dec
cdq
jae
pop
popa
bound
int
outs
xchg
(bad)
fdivr
inc
inc
push
aam
cdq
gs
inc
inc
jnp
stos
sti
or
imul
mov
mov
mov
gs
frstor
jne
xor
dec
push
nop
scas
push
stos
mov
jge
add
sub
pop
or
mov
scas
push
sbb
rcr
repz
mov
mov
cmc
stc
xchg
push
mov
repnz
mul
mov
(bad)
cld
cdq
cmps
pop
fisttp
lea
push
or
mov
scas
cs
sbb
add
jle
popf
dec
out
mov
or
and
xchg
mov
in
push
mov
pop
outs
push
stos
rcr
mov
lods
scas
mov
jae
xlat
out
jmp
jno
adc
(bad)
das
sbb
mov
cmps
or
stc
adc
(bad)
sbb
xchg
jge
sti
cmps
daa
jmp
imul
call
xor
xlat
out
mov
push
ds
adc
rcr
inc
sbb
or
fidiv
jns
leave
test
pop
sub
fistp
and
sbb
iret
cld
fimul
mov
mov
or
out
mov
sub
ins
movs
(bad)
mov
ins
or
sar
fld
push
sbb
adc
mov
mov
push
(bad)
sub
xchg
or
ret
pushf
dec
fadd
sbb
pop
scas
imul
mov
adc
xchg
sub
pop
cs
mov
push
dec
jb
jmp
es
stos
sub
fcom
movs
add
mov
push
repnz
sahf
stos
aad
in
mov
ds
jle
mov
icebp
push
push
sahf
icebp
mov
sti
mov
mov
test
fdiv
sar
adc
not
mov
push
jle
cmp
dec
add
aas
(bad)
xor
pop
cmc
dec
leave
push
jnp
xor
xor
dec
sbb
shr
mov
add
jp
jbe
jmp
mov
loopne
or
inc
push
sbb
sbb
mov
fsub
addr16
xor
dec
cmp
sahf
mov
rol
push
shl
xchg
cs
repnz
sub
rcr
pop
jns
jg
daa
push
mov
sbb
push
mov
(bad)
or
dec
lods
cli
das
shl
std
bound
fwait
pop
push
stc
add
hlt
cmc
dec
jge
mov
mov
in
sub
dec
or
out
xchg
sub
(bad)
jmp
aaa
sub
into
imul
fstp
jmp
mov
xor
mov
push
(bad)
jmp
scas
cmp
shr
dec
adc
stc
pop
xor
lock
cli
jns
aas
jp
lods
dec
or
jno
jle
and
(bad)
movs
jg
inc
cdq
xchg
pop
ins
and
or
out
daa
aad
cmp
cmp
jbe
std
ins
inc
stos
push
stos
inc
(bad)
out
add
rcl
add
jb
outs
shr
rol
das
fistp
mov
xchg
mov
and
ja
sbb
jecxz
pop
xchg
out
je
mov
shr
leave
cli
pushf
ins
test
xlat
cmp
lahf
test
int
adc
push
arpl
cmp
imul
push
hlt
mov
push
jno
pop
and
jmp
stos
sbb
mov
es
pop
cmc
and
bound
and
test
sti
stos
sub
jg
jp
dec
cmps
jno
adc
aas
fdiv
inc
and
out
push
adc
imul
loop
and
retf
mov
stos
(bad)
mov
or
aam
dec
pop
mov
(bad)
xchg
jne
sbb
fwait
ins
hlt
imul
inc
jno
repz
pop
dec
in
sbb
cmp
outs
xor
loopne
adc
jae
jbe
pop
inc
test
repz
xchg
or
int3
add
test
enter
das
sbb
sub
fwait
ror
ins
pop
(bad)
sbb
lock
mov
aas
loop
sbb
pop
test
ja
jo
cld
sbb
mov
mov
cdq
lods
das
ficom
jl
fistp
emms
pop
mov
fld
mov
out
pop
(bad)
mov
lock
out
xor
cmp
dec
test
or
in
loope
ins
mov
dec
jl
mul
or
mov
imul
mov
gs
shl
or
inc
int3
movs
sub
sbb
retf
rcl
cwde
inc
xchg
mov
stos
and
and
sub
or
and
inc
in
scas
in
lock
aas
(bad)
jmp
mov
mov
mov
sbb
xor
sbb
cmps
(bad)
cwde
fdivr
sub
aaa
and
jecxz
add
jno
faddp
stc
iret
add
in
nop
jecxz
mov
inc
xchg
cmp
xor
or
xchg
iret
adc
mov
or
sbb
xchg
mov
or
in
mov
sti
fidivr
mov
loop
xchg
retf
cmp
(bad)
loop
(bad)
and
xchg
add
and
and
imul
aam
mov
sti
pop
add
addr16
repz
mov
inc
pop
outs
clc
dec
cli
push
push
cmps
xor
sub
out
xor
push
jno
mov
pop
hlt
(bad)
push
ss
aam
repz
cmps
pop
lods
inc
jecxz
jbe
(bad)
mov
jbe
or
cmc
add
scas
jae
jg
add
cmc
mov
int3
cmp
idiv
push
lock
lea
movs
push
fisttp
add
pop
in
sub
sub
or
shl
dec
sti
push
sbb
ss
lods
cmc
out
cld
in
xchg
enter
xchg
mov
mov
adc
stos
lods
inc
and
into
(bad)
loope
inc
xor
dec
fistp
in
jmp
fnstsw
jp
sbb
sub
outs
push
xor
xlat
pop
gs
cmp
pop
sub
adc
dec
ret
popf
inc
add
das
cmps
mov
pop
mov
rcl
mov
cld
dec
sbb
cmp
adc
les
clc
fimul
fistp
dec
mov
mov
aaa
xor
mov
or
jecxz
out
or
mov
aas
jmp
xor
in
and
movs
loopne
outs
mov
xchg
jg
pusha
retf
pop
retf
(bad)
ficomp
movd
test
pop
into
lea
stos
arpl
dec
jmp
cmps
shr
cmp
ins
adc
(bad)
out
add
pop
cmps
or
dec
xor
fs
repz
(bad)
cmp
xchg
shr
ror
(bad)
fs
mov
sbb
jp
ret
mov
mov
mov
ss
in
push
pop
adc
int3
sti
sar
lods
mov
fdivr
loop
sub
test
or
and
repz
push
xor
test
call
cs
out
in
popf
into
xor
sar
mov
dec
fld
inc
adc
iret
nop
push
jbe
rol
out
adc
push
sub
cmc
adc
pop
std
imul
ss
mov
test
xor
push
jmp
push
lock
add
sbb
mov
lock
cli
sbb
ret
jecxz
mov
outs
in
lods
sbb
mov
pop
dec
daa
push
dec
mov
mov
and
xchg
imul
ret
add
jp
imul
jb
lods
repz
nop
adc
jp
sbb
dec
and
inc
sbb
jge
aam
(bad)
enter
es
dec
(bad)
sbb
sti
cmp
rol
sbb
mov
dec
jne
lods
push
movs
pop
jge
cmps
and
out
fdiv
mov
or
jl
cs
(bad)
das
push
sub
jns
out
stos
daa
sbb
mov
jmp
dec
fcom
adc
rol
lods
jp
add
or
cld
mov
(bad)
cmp
sub
push
and
xor
ds
(bad)
jbe
loope
call
inc
fist
mov
xor
mov
loop
sti
repz
sub
sbb
sub
sar
int
dec
mov
adc
pushf
and
pop
adc
pop
fucom
ror
push
jmp
or
lea
popf
cmp
jge
in
xor
sbb
pop
mov
add
lods
lods
out
or
xor
pop
ret
dec
pop
sub
cmc
xor
pop
mov
arpl
shr
mov
addr16
inc
push
or
(bad)
jecxz
outs
jecxz
pop
jae
gs
pop
cmp
add
mov
aam
xchg
add
mov
sub
mov
arpl
jno
cmp
pop
sub
pusha
cmps
cmp
movs
(bad)
and
ror
in
xchg
inc
(bad)
mov
add
shr
mov
cdq
mov
ds
cwde
xchg
imul
cli
cli
dec
xor
clc
xor
push
inc
cmc
loope
(bad)
aas
cld
jne
dec
movs
test
fld
nop
and
jmp
sbb
shl
cmp
mov
push
pop
mov
imul
int
add
mov
jne
lock
sub
mov
xor
sar
pop
arpl
in
mov
clc
rol
sub
out
into
mov
and
push
adc
mov
sub
add
sub
nop
fbstp
scas
test
ds
pop
in
mov
test
fnstenv
mov
in
and
add
adc
shl
dec
dec
mov
out
pop
(bad)
sbb
retf
mov
rol
test
in
sbb
mov
xor
push
dec
inc
pop
xor
or
adc
(bad)
outs
pop
out
xchg
and
cld
and
mov
(bad)
xchg
out
out
dec
jne
push
push
mov
mov
inc
sbb
pop
call
mov
dec
push
jne
sub
jmp
dec
push
add
scas
xchg
adc
mov
enter
xor
call
jmp
jp
ffree
dec
popf
popa
sub
(bad)
cmp
ror
sti
cs
ja
pop
mov
fiadd
pop
les
xchg
inc
mov
mov
push
inc
icebp
fs
xor
add
cmc
jmp
pushf
or
push
push
(bad)
xchg
gs
jo
jnp
fwait
mov
call
xchg
dec
sub
dec
dec
cmp
in
pop
dec
lahf
push
xor
and
cmps
fucom
or
jecxz
or
dec
retf
xchg
dec
mov
cmp
bound
adc
cmp
push
in
cwde
dec
jb
out
and
movs
popa
scas
fnstsw
in
in
out
xchg
stos
or
mov
mov
(bad)
loope
sbb
mov
and
xor
test
fidiv
xchg
sbb
fisubr
pop
sbb
repz
or
aam
dec
cmp
cmp
sbb
push
fnstcw
cmp
add
cmp
pop
jge
cs
je
sub
fldcw
xchg
data16
push
add
mov
test
inc
jmp
fisttp
repnz
and
mov
push
push
sub
sub
jbe
test
ja
add
cli
leave
and
jl
(bad)
ret
mov
mov
fmul
arpl
adc
stc
adc
mov
pop
mov
(bad)
fstp
add
nop
dec
call
mov
jle
loop
mov
xor
jecxz
cdq
mov
mov
pop
inc
pop
jle
xchg
dec
inc
shr
rol
mov
arpl
adc
add
stos
jg
rol
mov
mov
push
mov
sbb
test
mov
xchg
(bad)
jge
inc
loope
adc
mul
outs
shr
adc
test
pushf
frstor
cli
aad
mov
and
xor
aam
xor
mov
js
in
imul
sahf
adc
push
adc
add
mov
cwde
movs
xor
jmp
fidivr
bound
mov
adc
pop
outs
sbb
gs
xchg
mov
adc
sub
aaa
cmp
sbb
leave
in
inc
sbb
imul
dec
daa
aaa
adc
jnp
fs
lods
lock
(bad)
in
data16
call
and
push
inc
lods
fsubp
mov
mov
mov
or
jg
inc
or
out
je
jle
inc
addr16
ja
sub
jmp
ss
fldcw
fsub
ficom
jmp
dec
push
sub
daa
fsubr
and
stos
test
(bad)
pop
ret
(bad)
jmp
sub
push
lds
mov
outs
or
les
loopne
pushf
fwait
xor
clc
loope
xor
push
hlt
push
sbb
mov
push
and
and
push
mov
add
xchg
cmp
mov
int3
xchg
pop
(bad)
push
ds
div
jecxz
mov
lahf
repnz
jmp
fcomp
mov
xor
dec
inc
xor
xchg
xchg
mov
lds
in
xchg
inc
sahf
cmps
scas
lods
test
pop
or
sub
call
jmp
imul
fwait
sub
ret
push
sbb
outs
repz
add
out
xchg
aad
sbb
jp
sub
cdq
outs
and
loopne
cmps
mov
add
scas
sbb
mov
add
mov
xchg
outs
xchg
mov
pop
(bad)
dec
jno
or
ins
ret
lock
xchg
dec
xchg
jbe
add
add
add
pop
sbb
out
daa
sbb
xor
test
xchg
into
in
outs
pop
lods
adc
test
in
imul
mov
fstp
in
mov
mov
fimul
and
pop
int3
xchg
dec
jnp
in
push
or
cmc
and
(bad)
imul
(bad)
iretw
xor
retf
or
dec
or
retf
std
jns
call
pop
or
ret
jmp
ret
cmp
push
mov
pop
or
scas
jbe
mov
stos
inc
pop
xor
sti
lock
xor
inc
xor
jno
sbb
aam
or
aad
mov
js
movs
retf
mov
jle
adc
pop
add
mov
in
popf
loope
jne
scas
es
inc
mov
jno
dec
out
adc
jae
dec
(bad)
clc
fs
nop
arpl
or
push
pusha
jbe
jne
cmps
push
add
icebp
push
sub
push
xchg
imul
cmc
(bad)
push
lds
shl
cmp
mov
int3
jge
outs
inc
ret
mov
mov
pop
mov
cmps
xor
add
mov
jb
icebp
and
and
sub
repz
or
jmp
lahf
outs
ja
retf
lahf
jmp
in
push
ret
xchg
sub
sbb
pop
sub
jecxz
aaa
sbb
sub
cmps
popa
jno
lea
xchg
cmp
scas
pop
dec
mov
mov
sub
pop
xor
test
xor
push
data16
mov
cwde
mov
and
test
adc
in
pop
fild
loop
dec
out
mov
push
rol
movs
ins
jl
nop
xchg
ss
gs
into
hlt
stos
ins
les
xchg
mov
lea
mov
jb
in
rol
push
(bad)
jnp
out
mov
(bad)
out
es
sar
test
cmp
mov
loope
stos
ins
stc
xor
outs
shr
pop
fdivr
or
cmps
or
in
cmp
sti
call
in
fld
inc
mov
pop
hlt
inc
imul
or
inc
and
ins
mov
cdq
out
fcmove
mov
ret
ds
push
ja
int3
js
add
sub
or
in
pop
retf
aam
sub
rcl
outs
mov
das
cmps
ror
dec
add
into
dec
retf
dec
mov
pop
push
(bad)
adc
in
push
enter
ins
mov
jmp
imul
aam
cwde
jbe
stos
sbb
popa
push
jge
cwde
xor
pop
ret
cmp
xchg
popa
mov
shl
mov
cmp
jns
jg
daa
adc
jns
in
mov
cmp
lock
cmp
cmc
inc
out
mov
(bad)
xchg
sti
outs
(bad)
mov
jmp
cmp
fisubr
cmps
fdiv
loop
hlt
sbb
aam
inc
data16
jb
and
in
sub
jbe
and
sub
xor
clc
and
mov
add
(bad)
repnz
pop
or
pusha
enter
dec
adc
and
xor
mov
imul
and
out
jb
ret
add
and
push
fst
mov
movs
mov
dec
jmp
and
(bad)
pop
cmp
cmp
rcr
aad
push
pop
xor
pop
dec
mov
mov
xchg
(bad)
je
(bad)
jnp
dec
push
xor
and
jne
std
int
jb
outs
xchg
cmps
ficom
div
jge
adc
loopne
jns
in
pop
shl
in
lock
and
cld
cmp
lea
xor
mov
dec
or
mov
ins
and
inc
iret
daa
mov
pop
rcl
and
sbb
dec
jg
pop
mov
mov
add
cmp
xor
repz
jle
adc
les
jo
adc
fmul
ss
adc
in
xor
pop
out
xchg
push
xcrypt-ofb
cmps
stos
and
ftst
and
call
popf
xor
xchg
in
push
pop
loopne
les
aad
cmp
sub
cs
push
dec
and
fcmovne
aaa
jge
and
jns
das
cmp
cli
cmps
pop
iret
pop
add
and
mov
lods
pusha
movs
aaa
and
pop
fldcw
clc
in
cli
outs
imul
imul
ins
push
scas
in
ret
sbb
push
lods
fisub
mov
mov
sbb
mov
fwait
icebp
test
bound
jmp
repz
jg
push
xchg
mov
cmp
jecxz
call
sub
mov
shr
ds
nop
sub
popa
fucompp
sbb
adc
fcom
out
por
ret
retf
push
ret
jp
cmp
iret
cmp
out
out
loop
or
mov
or
mov
popa
cmp
jecxz
test
test
sti
fldenv
es
and
fadd
inc
not
popa
repz
or
retf
push
div
inc
dec
mov
or
xor
mov
icebp
pop
lds
jno
push
cs
inc
lea
es
fldenv
adc
pushf
fs
inc
dec
adc
lods
int3
dec
imul
ret
in
jne
fidivr
adc
and
or
in
mov
rcl
adc
xchg
or
sub
outs
in
aas
mov
jecxz
cmp
shl
adc
retf
pushf
jg
xor
push
dec
add
movs
dec
mov
mov
push
movntps
fstp
imul
dec
xchg
and
inc
xchg
mov
daa
(bad)
popf
sbb
sub
or
js
xor
jmp
test
sub
mov
jecxz
xor
sahf
push
jge
cs
dec
adc
and
inc
fwait
out
ds
out
mov
call
lods
neg
(bad)
sbb
inc
cmc
push
mov
shl
call
in
and
sbb
and
xor
or
jmp
jmp
outs
dec
push
push
out
and
push
repnz
fdivr
dec
retf
cwde
loop
aas
outs
sbb
scas
jmp
mov
push
ss
pop
stos
push
push
std
popa
dec
ror
or
dec
mov
pop
inc
add
mov
push
cmc
iret
mov
jecxz
arpl
jo
out
xchg
sti
fistp
cdq
inc
icebp
add
mov
popa
dec
xor
inc
std
retf
outs
mov
cld
mov
shr
shl
jb
(bad)
xor
inc
out
or
and
and
sub
addr16
cwde
stos
fadd
ins
jp
loope
mov
sub
xchg
frstor
xchg
push
es
xchg
idiv
fild
xor
cmc
or
adc
push
(bad)
push
jp
jl
jl
inc
cmp
push
xchg
pop
mov
neg
fwait
adc
cwde
dec
or
xchg
les
and
(bad)
pop
mov
push
test
and
sbb
in
or
pop
mov
mov
mov
out
mov
add
mov
jno
out
mov
retf
fnstenv
adc
pop
push
xor
add
mov
cmp
stos
pop
jle
push
fs
pop
pop
idiv
mov
test
sbb
cmps
xor
pusha
pusha
mov
mov
into
mov
mul
ss
xchg
mov
mov
mov
pushf
push
test
add
jno
sbb
mov
ror
ret
xor
xor
sbb
or
jns
mov
fistp
imul
(bad)
(bad)
push
dec
shl
in
mov
mov
cmp
push
ds
xchg
adc
fcomp
ror
inc
dec
stc
cmp
and
push
or
in
cwde
cmp
xor
cmps
imul
scas
xor
sub
cmc
inc
call
ret
out
int
ins
inc
shl
jg
call
pop
mov
and
jbe
shl
not
inc
or
dec
in
call
ins
inc
shl
mov
in
xchg
in
and
cmp
lahf
mov
push
ret
adc
popa
cmp
and
fsub
sbb
jl
out
cmp
scas
xor
call
jle
mov
cmc
sahf
lods
dec
or
fadd
cmp
aaa
mov
mov
aas
mov
xchg
add
adc
jl
sti
mov
xor
adc
movs
pop
xor
inc
sub
dec
int
rcl
ins
fist
std
std
in
mov
and
stos
movs
imul
mov
cmp
aaa
out
retf
and
stos
fsubr
and
leave
jno
xor
popf
je
pop
ror
outs
ror
sub
out
gs
test
jne
jecxz
push
neg
sub
inc
nop
xchg
loopne
in
dec
outs
push
add
and
fwait
mov
sub
fcom
shl
cmc
mov
pop
adc
test
jp
ja
lds
js
mov
xor
inc
jae
push
mov
test
(bad)
(bad)
out
push
push
dec
cld
pop
ins
add
adc
shl
mov
sbb
jmp
imul
cmc
frstor
(bad)
push
rcl
rol
pop
jle
push
dec
mov
xor
add
inc
pop
icebp
inc
inc
call
cmp
inc
xchg
jns
stc
or
test
scas
and
(bad)
pushf
bound
sahf
sbb
mov
mov
mov
(bad)
cmc
xlat
mov
or
mov
out
(bad)
mov
fstp
jb
sbb
aad
in
and
loopne
dec
xchg
es
cmps
dec
in
in
lea
lods
xor
in
xor
sti
xor
mov
jge
jmp
test
jbe
fidivr
stos
xchg
mov
mov
mov
lods
aaa
and
movs
repnz
pop
or
add
sub
inc
xor
imul
jle
in
cld
fscale
mov
jb
jmp
inc
ja
mov
retf
sti
out
add
jb
pop
loopne
mov
dec
popa
push
and
ins
pushf
inc
movs
push
add
pop
inc
inc
jmp
(bad)
push
push
lds
retf
xchg
cmp
dec
enter
mov
cmp
(bad)
sub
dec
cli
frstor
inc
mov
nop
push
(bad)
jle
mul
(bad)
fs
mov
retf
fmul
mov
cdq
jecxz
push
ja
shl
xor
or
mov
ins
in
fwait
in
fscale
fmul
test
sbb
push
or
jb
js
aam
sub
or
jae
aaa
imul
enter
sbb
add
outs
fnstenv
dec
ins
inc
cmp
lea
pushw
lods
out
ficom
(bad)
aad
(bad)
cld
add
jle
jnp
stos
jp
(bad)
aas
add
push
adc
repnz
and
aam
mov
(bad)
leave
cmp
sub
shl
xchg
or
outs
adc
mov
mov
ins
cmp
bound
pop
sub
jnp
in
mov
mul
mov
dec
aad
add
leave
icebp
in
pop
ss
xchg
xor
pushf
jp
lds
std
ret
leave
lods
les
test
fwait
loop
cwde
cmp
lahf
div
idiv
outs
pop
xor
lds
adc
retf
iret
fistp
gs
or
lahf
adc
xchg
jo
mov
dec
jmp
(bad)
adc
cmps
ins
mov
aas
ficomp
push
fiadd
aam
cmp
repnz
es
cmp
das
fild
and
(bad)
jbe
pop
cmp
adc
jge
sub
cmp
repnz
jl
mov
mov
push
out
sub
cwde
out
rol
ja
pop
dec
ins
fmul
xchg
js
bound
sub
cwde
inc
nop
scas
dec
pop
jecxz
fidivr
call
stos
inc
xor
add
jp
iret
and
pop
and
stos
xor
cmp
adc
xchg
addr16
push
adc
stos
pop
cmp
cmp
rol
pusha
int3
and
sub
jmp
cmp
aas
or
imul
push
mov
jecxz
jge
movs
(bad)
out
xchg
leave
shld
gs
daa
cmps
arpl
mov
test
adc
add
es
addr16
dec
push
fidiv
loopne
xchg
rcr
xlat
xchg
dec
inc
xchg
xchg
daa
lahf
push
inc
push
jmp
fbstp
(bad)
addr16
pop
mov
cmps
jmp
cmc
das
outs
arpl
push
sbb
sub
sbb
pusha
xchg
in
loopne
call
push
(bad)
pop
mov
adc
jp
pusha
xor
jl
fnstsw
idiv
mov
mov
test
in
push
(bad)
loopne
or
or
xchg
push
icebp
test
push
mov
jle
pop
cwde
jl
shl
retf
cmp
jp
cmc
xchg
jmp
pop
call
aas
mov
push
pusha
mov
lea
and
and
imul
into
sbb
aam
dec
ins
out
mov
jnp
xor
imul
mov
sub
pop
aam
ret
std
lods
pop
out
movs
cmc
or
test
aam
push
dec
xchg
ret
cmp
xor
dec
dec
lods
(bad)
mov
xchg
sub
xchg
xor
nop
sbb
ja
aas
mov
xor
mov
sub
loop
popf
leave
fisub
adc
test
adc
(bad)
cmp
or
dec
mul
jmp
xchg
mov
mov
mov
inc
scas
push
push
retf
clc
inc
lods
rcr
and
sbb
out
pop
(bad)
pop
jbe
ror
xchg
sub
cmc
jge
add
mov
shl
mov
sbb
sbb
popf
xchg
or
lahf
sbb
add
xor
mov
out
add
inc
pop
test
and
ss
dec
and
dec
mov
test
xor
or
mov
scas
div
cmp
leave
xchg
or
xchg
mov
leave
aam
retf
cld
xchg
xor
mov
pop
cdq
movs
mov
loope
cld
cli
mov
add
test
xchg
sub
aam
out
mov
push
add
or
adc
dec
push
sub
pop
adc
fwait
rol
aaa
fldcw
add
(bad)
cmc
in
cmp
outs
lahf
outs
jb
pop
(bad)
sub
xchg
je
inc
mov
mov
mov
iret
mov
fistp
out
dec
sbb
ins
mov
fld
cmp
mov
inc
lods
sbb
call
sbb
sub
cmp
mov
scas
sub
or
sbb
scas
out
cwde
shl
cmp
(bad)
frndint
push
cmps
fiadd
aam
pop
jne
xor
(bad)
sub
sub
cdq
cmp
xlat
mov
mov
jmp
bound
adc
gs
adc
lods
mov
adc
pop
jne
dec
dec
cmps
mov
xor
inc
jbe
pusha
pop
loope
add
rcl
dec
jno
jb
push
dec
xlat
and
mov
jno
mov
sbb
lods
xor
cmps
push
mov
stc
pop
jg
movs
cli
std
nop
push
pop
or
out
add
test
mov
test
fnstcw
out
cmc
push
sbb
cli
nop
cmp
test
jae
xchg
jp
push
aas
gs
mov
inc
cmc
and
dec
rcr
ins
mov
xchg
sub
mov
sti
jp
xor
sbb
mul
inc
inc
or
jns
jb
mov
hlt
outs
push
mov
ret
push
mov
and
mov
bound
es
pop
sub
sti
mov
int
mov
std
mov
xchg
in
rcr
xor
dec
addr16
aad
and
inc
cmp
pop
and
sti
xchg
in
mov
(bad)
xor
movs
scas
test
push
mov
sbb
cs
pop
cmp
stos
cdq
sbb
ret
inc
popa
mov
dec
popf
lock
out
das
adc
fwait
sub
(bad)
xor
xchg
sbb
daa
cmp
lds
cli
adc
cmp
jo
das
in
pop
sbb
stos
iret
mov
shl
add
inc
cwde
scas
sub
push
push
daa
clc
mov
cmps
shr
test
xchg
lock
push
or
sbb
loopne
add
mov
stos
lahf
test
aas
aaa
aam
(bad)
ja
stos
retf
loop
push
inc
in
xchg
shl
in
jo
stc
cmp
jnp
sub
cmps
inc
fcomp
dec
cli
cmp
add
mov
mov
out
(bad)
mov
mov
xor
pause
jmp
movs
fisttp
pop
jb
xor
dec
mov
mov
stos
mov
xchg
arpl
in
clc
aaa
fsub
call
(bad)
repz
loop
and
xchg
call
iret
cmp
jle
(bad)
(bad)
or
xor
pop
or
or
movs
dec
jo
dec
loope
fdiv
sbb
ret
xchg
xchg
fs
ja
sbb
dec
mov
call
test
inc
in
enter
sbb
inc
int
rol
mov
or
mov
ins
in
and
aad
sub
test
sbb
lock
mov
or
mov
sti
ds
xchg
mov
jbe
in
cmp
push
cld
or
sysexit
and
xor
mov
jmp
ja
sbb
adc
xchg
push
fnstenv
call
mov
test
pop
adc
aas
popf
pop
jae
xrelease
paddusb
mov
(bad)
fimul
pop
in
movs
mov
jno
scas
mov
jnp
hlt
jae
cmp
mov
neg
inc
push
int3
cwde
in
jb
cmp
sub
mov
inc
cmp
in
mov
add
xchg
icebp
mov
retf
jne
jns
mov
lock
sbb
out
mov
inc
dec
rcr
ins
mov
cmp
mov
sti
out
xchg
(bad)
xlat
cld
lods
mov
sub
retf
cdq
sub
test
inc
ins
cmp
dec
or
add
lods
add
movs
lahf
inc
fld
xchg
pushf
pop
cmp
jmp
mov
cld
mov
loopne
push
jae
jl
ins
(bad)
mov
xchg
add
jnp
xchg
aam
mov
pop
repnz
push
jp
mov
sahf
xor
add
xor
push
push
dec
cmp
xor
test
and
jecxz
mov
sub
fwait
or
xor
cmps
push
movs
xadd
jmp
fs
and
add
aaa
adc
sbb
out
mov
add
pop
inc
and
mov
cli
mov
cdq
jecxz
jae
call
lahf
adc
(bad)
fcomp
xor
mov
pop
imul
and
out
jbe
and
push
mov
mov
xlat
test
outs
std
int
ins
cmp
and
pushf
push
lahf
lods
cwde
and
xchg
xor
add
hlt
sub
enter
lock
adc
and
xchg
pop
cdq
scas
(bad)
inc
inc
retf
(bad)
fwait
imul
enter
inc
mov
std
mov
mov
in
enter
push
xor
jno
push
leave
pop
shl
sbb
xor
jae
in
mov
scas
jmp
mov
xlat
jl
aaa
dec
xor
std
sub
push
clc
(bad)
aam
mov
jmp
push
in
lds
movs
lahf
mov
xor
es
adc
mov
and
mov
loope
je
cwde
fistp
data16
add
ds
fiadd
mov
add
arpl
cmp
add
and
push
loope
out
test
jmp
or
adc
test
push
xchg
mov
in
jecxz
stc
dec
jnp
sbb
xor
cmp
outs
push
cli
sub
outs
nop
cmp
gs
sub
mov
popa
jae
scas
sbb
shl
or
int
xor
pop
aad
int3
cld
jecxz
adc
int
mov
fdiv
loopne
sub
loopne
push
add
js
popf
nop
into
xor
fisubr
add
iret
add
cmp
xor
sbb
test
in
and
pop
push
(bad)
fdivr
adc
int
rcl
jle
jle
adc
sub
mov
rol
aaa
adc
sbb
xor
cmps
or
jnp
dec
mov
push
ins
sbb
cmps
ins
add
and
pop
fdiv
and
mov
shl
push
mov
inc
jecxz
mov
addr16
test
aaa
movs
outs
push
das
xchg
adc
jae
jle
ins
ror
add
and
(bad)
cmps
inc
and
jp
mov
gs
out
cmp
jo
ret
int
pop
add
or
or
mov
or
adc
mov
fs
mov
inc
stc
cdq
pop
mov
out
data16
les
mov
retf
mov
test
cmp
xchg
shl
mov
adc
movs
je
jo
(bad)
jl
add
call
xchg
mov
mov
add
push
sbb
hlt
dec
hlt
pop
rcl
cmp
pop
int3
cmps
cmp
sahf
pop
sub
and
pusha
je
mov
test
loop
in
loop
inc
sahf
cli
movs
test
ds
ret
dec
fst
lds
not
cmp
or
pop
gs
or
out
lds
push
jae
pop
or
dec
mov
aaa
test
pop
ins
fnstcw
mov
iret
pop
int
adc
pop
jb
sahf
jge
lods
adc
repz
call
cmp
mov
cmp
mov
nop
dec
xor
jle
fiadd
call
scas
inc
ret
pop
jns
add
mov
mov
jmp
(bad)
(bad)
push
add
sub
fisttp
mov
xchg
dec
sub
dec
test
das
rol
mov
jno
lea
mov
jge
call
push
adc
mov
mov
movs
or
dec
mov
inc
inc
dec
lods
cmps
adc
retf
add
cld
call
dec
ins
mov
icebp
xor
xchg
stos
imul
cmp
push
test
pop
sub
adc
ror
(bad)
in
inc
cld
and
sub
adc
pop
pop
dec
cld
rcl
mov
or
mov
cmp
push
(bad)
push
(bad)
xor
dec
outs
fcmovnb
or
pop
repz
mov
or
lods
aas
push
ja
push
pop
pop
cs
or
rol
fbld
mov
dec
ds
ja
xchg
adc
sub
xor
jmp
mov
retf
out
ret
cdq
stos
dec
inc
into
pop
xchg
data16
lods
je
pushf
inc
inc
lds
fs
inc
sub
jno
jmp
push
push
add
std
adc
frstor
test
test
xchg
xor
sub
pop
ins
fsubr
jo
dec
xchg
or
(bad)
push
loopne
bound
mov
inc
aam
mov
jo
mov
and
data16
jl
push
push
cmp
push
test
retf
cmp
cld
nop
stos
xchg
call
mov
lods
lock
and
or
mov
fidivr
(bad)
jecxz
push
je
push
adc
outs
aam
xchg
call
daa
out
add
mov
dec
adc
jge
repnz
xchg
xchg
xor
and
cmp
or
add
in
lock
xchg
pop
enter
mov
in
and
mov
inc
xchg
jae
inc
shl
mov
cdq
ror
push
sbb
ret
jmp
ins
or
aaa
adc
jmp
pop
add
jg
pop
mov
dec
shr
std
hlt
jbe
dec
push
push
push
xchg
ins
ins
sub
call
cmp
sar
and
nop
jecxz
(bad)
xor
shl
es
adc
pop
add
mov
into
inc
jl
sub
push
mov
xor
shr
dec
xchg
ficom
jbe
retf
add
inc
xchg
dec
out
jmp
test
pop
popf
dec
xchg
mov
mov
cwde
and
stos
in
dec
test
scas
xor
and
je
test
dec
push
mov
or
rcr
loope
and
xor
test
push
or
lock
in
ret
sbb
clc
(bad)
inc
sub
movs
loopne
jp
mul
xor
pushf
lock
rcl
xchg
sub
push
push
dec
xor
jg
push
pop
js
popf
xor
adc
mov
xor
ins
pushfw
sbb
and
and
pop
cs
in
xchg
pop
and
sub
(bad)
(bad)
ins
mov
adc
scas
lods
dec
icebp
adc
xor
inc
je
ja
aam
aam
mov
and
call
shr
sti
jp
lea
xchg
das
xchg
dec
or
dec
leave
dec
mov
jmp
xchg
repz
and
mov
inc
mov
shl
mov
out
mov
outs
pop
in
inc
push
call
mov
int3
cld
sbb
pop
add
or
mov
into
movs
(bad)
jg
cmp
gs
ror
fs
pop
or
ins
aaa
fimul
jne
push
xor
loopne
stos
mov
stc
pop
xlat
in
push
mov
ret
loop
and
enter
outs
cwde
clc
xor
test
ins
fnstsw
mov
dec
push
add
cmp
popf
push
cmp
jg
jle
mov
in
and
pop
fimul
sub
(bad)
sti
cmps
stc
gs
(bad)
es
cmps
pop
xchg
lods
arpl
cmp
imul
mov
add
daa
mov
pop
cmps
mov
test
inc
int
lock
add
cmp
jmp
iret
hlt
test
and
pusha
jns
jbe
clc
movs
sahf
lds
and
scas
rol
pop
push
add
jp
or
retf
into
fmul
in
inc
(bad)
in
and
add
push
jg
mov
mov
xchg
fmul
pop
jle
inc
mov
sub
adc
pop
add
(bad)
call
test
xchg
(bad)
cmp
xor
ins
std
jg
lahf
scas
loop
mov
out
or
push
fistp
push
inc
jp
adc
cmp
lods
mov
aas
into
in
and
test
imul
outs
inc
call
sbb
pop
xchg
dec
sbb
stc
inc
xchg
shl
pop
inc
bnd
(bad)
out
cmp
pand
stc
cmc
xor
inc
int3
mov
xchg
stos
dec
xor
(bad)
add
dec
xchg
cmps
adc
out
and
jnp
jo
mov
and
addr16
dec
xchg
mov
scas
dec
adc
jno
loopne
hlt
or
retf
pop
outs
sti
sub
push
sub
mov
xchg
adc
cld
push
inc
in
mul
adc
ins
mov
sahf
pop
and
adc
movs
loope
hlt
xchg
cmp
push
push
fld
dec
(bad)
mov
pop
jmp
daa
fsubr
scas
mov
lock
sti
xchg
push
sub
xchg
mov
push
enter
clc
arpl
mov
cmp
mov
std
std
shr
pop
hlt
push
xor
dec
loopne
test
mov
dec
and
jp
shr
mov
(bad)
adc
(bad)
jo
test
or
test
cmp
stos
loop
cmps
xchg
jnp
inc
mov
mov
repnz
xor
cdq
mov
fnstenv
adc
adc
cmp
lahf
sbb
inc
jo
ret
inc
add
adc
xchg
aas
or
in
ret
cli
xor
leave
sar
cs
jl
into
jo
pop
push
add
pop
adc
aaa
cmp
mov
fsub
fisttp
lea
and
push
add
out
push
(bad)
cmc
sub
xchg
and
nop
mov
dec
sub
push
imul
(bad)
neg
jmp
mov
pop
jecxz
add
push
hlt
ficomp
pop
add
mov
daa
mov
xor
add
das
fdivr
ret
dec
pop
loopne
bound
int3
test
daa
add
and
dec
mov
and
ins
stos
imul
rcr
sbb
inc
dec
mov
mov
lods
int
push
mov
test
sar
test
mov
movs
mov
lea
pop
add
add
mov
jae
mov
js
aad
mov
repnz
jmp
outs
add
push
lahf
loopne
xchg
xchg
nop
mov
pop
loope
stos
or
mov
rcr
sbb
or
(bad)
mov
fstp
sbb
fist
xor
stos
movs
pop
and
loop
xchg
dec
repz
push
loopne
cmp
mov
(bad)
sahf
adc
pop
fnstenv
dec
jnp
xor
mov
and
jne
pushf
mov
push
fisttp
mov
hlt
jnp
fldpi
rol
stos
(bad)
jbe
fcomip
mov
inc
lods
(bad)
xor
loopne
mov
test
shl
pushf
adc
adc
jg
pop
add
call
cmp
xchg
iret
mov
(bad)
sbb
imul
cmc
pushf
xchg
inc
inc
jecxz
xchg
xlat
sub
test
sbb
jmp
test
xlat
not
lock
scas
shl
jle
mov
ins
mov
sub
leave
out
add
out
push
or
jmp
pop
popf
add
test
push
repz
das
mov
in
or
outs
daa
scas
jle
lock
in
scas
gs
pushf
cdq
les
fmul
aad
push
pop
leave
aaa
mov
rcl
ins
mov
mov
mov
adc
add
xchg
push
int
jp
fst
adc
xor
jmp
gs
jno
sub
ficomp
in
clc
mov
and
adc
add
sbb
mov
es
mov
pop
inc
repnz
cmps
add
pop
dec
xchg
rcr
push
cmps
into
ret
repnz
movs
or
pop
mov
cmovs
jmp
or
jns
mov
imul
mov
lahf
cli
int3
jmp
cmps
push
cmp
inc
xchg
cmp
out
push
sbb
mov
mov
cli
and
cwde
sbb
jns
cmp
aas
sbb
or
iret
inc
outs
or
adc
es
cdq
fisub
jno
das
sub
stc
cmp
inc
adc
pop
inc
fucomip
out
out
adc
and
xor
adc
mov
xchg
mov
leave
mov
adc
gs
cmp
pusha
jp
mov
fs
retf
xchg
push
ins
cmp
push
mov
ins
in
int3
jbe
test
test
adc
dec
outs
fcmove
(bad)
jmp
gs
jmp
and
pop
add
jp
or
aad
test
fwait
lds
add
mov
jnp
pop
je
xchg
xor
cmp
adc
mov
sbb
into
test
sbb
add
lea
jo
jmp
popa
or
xor
mov
not
dec
pop
cmp
jo
sub
sbb
aas
(bad)
sub
add
push
sbb
jecxz
mov
pop
(bad)
xchg
pop
push
push
push
popa
push
sbb
push
clc
icebp
clc
lahf
nop
lds
stos
pop
sub
lods
int3
pop
movs
(bad)
popa
dec
xor
out
mov
mov
lods
xor
dec
or
(bad)
dec
cmp
jge
mov
xor
ss
loopne
(bad)
mov
ficom
xor
inc
pop
dec
sar
aas
pop
xchg
push
int3
xor
out
cmps
mov
or
jbe
adc
inc
cmp
pop
adc
retf
outs
popf
out
jo
jmp
xchg
jl
add
adc
call
iret
pop
jmp
cmc
xchg
mov
inc
loopne
sbb
int3
mov
push
cmps
cmps
lods
dec
mov
outs
pop
ins
shl
scas
mov
into
je
rcl
jo
xchg
mov
xchg
out
repz
lahf
outs
jl
repnz
mov
pusha
sub
push
mov
sbb
rcr
sub
loope
mov
mov
hlt
xchg
cmp
fnsave
clc
ficomp
mov
xor
pop
icebp
(bad)
push
push
leave
mov
xlat
sub
clc
movs
fcomp
xchg
adc
stos
push
rol
pop
clc
xchg
mov
cdq
sbb
and
xchg
xchg
cwde
mov
mov
cmp
fcmove
cmps
mov
push
dec
scas
fdivp
push
mov
or
sub
cwde
gs
mov
xchg
dec
mov
out
loope
mov
sbb
or
ins
xor
loope
out
es
sub
inc
cdq
mov
xchg
dec
in
jne
cmp
and
pop
dec
imul
fistp
pop
inc
pop
xor
loopne
cmp
rcl
add
shr
mov
push
sub
ret
test
cwde
pop
mov
call
push
push
dec
jg
rcl
sub
mov
and
loopne
pop
(bad)
adc
pop
test
nop
cmp
lods
ds
hlt
leave
mov
ret
and
or
aaa
int
mov
aam
mov
nop
bound
test
cmp
mov
dec
ss
fist
jb
push
data16
vmovntps
sbb
cmp
and
jle
push
jne
pop
mov
dec
xchg
jp
mov
inc
inc
mov
or
lds
in
fisttp
dec
push
call
(bad)
jae
aaa
stos
les
and
pushf
jl
sti
cmps
pop
cli
inc
iret
nop
cmp
int3
jne
dec
sub
mov
jmp
stos
or
push
push
rcl
sub
retf
jg
dec
mov
(bad)
adc
pop
fst
es
or
add
(bad)
(bad)
lahf
sti
pushf
adc
pop
frstor
xchg
xor
popa
inc
sbb
fdivr
je
fidiv
xlat
loop
push
popa
cmp
and
pop
(bad)
xor
repnz
leave
cli
fwait
mov
sbb
scas
or
xchg
ror
in
mov
mov
(bad)
test
and
mov
daa
aam
mov
or
xchg
stc
aam
fsubrp
or
dec
add
nop
shl
in
sahf
ror
cmp
sub
inc
xchg
add
and
xor
ror
push
jl
(bad)
imul
aaa
shr
add
ret
hlt
pushf
jb
leave
sub
retf
popf
adc
or
out
icebp
mov
push
push
sbb
aaa
in
mov
xor
pusha
(bad)
pusha
movs
cmp
add
xchg
cmps
popf
pop
ins
inc
add
ja
pop
and
adc
xor
xor
push
push
stc
adc
mov
push
mov
sub
adc
inc
xor
sub
(bad)
pop
icebp
dec
push
jmp
mov
rcl
stos
xchg
out
push
jmp
push
push
mov
sub
jp
bound
cli
mov
sbb
ins
jle
cmp
and
clc
push
bound
dec
push
ss
arpl
(bad)
ins
jecxz
lock
cli
mov
es
pop
je
ins
bound
mov
and
push
int3
jae
lods
mov
jge
inc
ror
or
sbb
xor
jge
lea
call
fsub
retf
lea
test
scas
mov
pop
xor
mov
scas
std
mov
dec
ins
enter
pop
or
mov
cs
outs
repz
jle
adc
pop
mov
mov
push
movs
pop
scas
add
jmp
inc
scas
sub
(bad)
xchg
xchg
fld
in
inc
push
jmp
xlat
movs
cmp
movs
xchg
and
xchg
sti
xchg
sti
jp
mov
jl
test
dec
inc
mov
pop
inc
adc
retf
cmps
stos
ja
lods
fmul
ror
mov
jbe
mov
xor
int
push
jmp
jmp
jno
jne
cmps
stos
mov
(bad)
fcomp
lahf
xor
out
cmps
ret
rcr
mov
mov
call
sbb
mov
inc
cdq
adc
mov
pop
mov
in
and
jb
nop
popf
add
ss
mov
mov
sbb
sbb
sub
pop
push
ins
loope
int
std
les
in
push
jg
clc
xchg
in
dec
mov
out
bound
mov
imul
ret
loop
fcom
shl
rcl
popa
je
xchg
cmp
lahf
fbstp
pushf
repnz
mov
push
ja
or
popa
mov
and
out
ins
data16
mov
xor
sbb
xor
lods
stos
mov
ret
out
call
lock
daa
cmps
cmc
fsub
js
and
pop
pop
popf
sbb
retf
jmp
add
pop
shl
aas
jge
std
add
data16
jne
js
sub
or
int
cld
mov
jmp
mov
push
or
(bad)
jmp
clc
dec
inc
lahf
push
or
cs
xor
xlat
popf
imul
mov
es
push
addr16
push
add
call
dec
ret
stc
and
xchg
sbb
dec
sbb
test
sbb
push
push
mov
ds
sbb
mov
xor
adc
fwait
ins
mov
inc
fiadd
push
imul
inc
xchg
aas
mov
rol
retf
fsubr
popf
jb
pop
mov
dec
movs
xchg
add
xchg
adc
mov
ja
push
stc
push
xchg
push
xor
fmul
inc
add
add
lock
fnstsw
jo
fldenv
les
mov
scas
ror
outs
push
lock
leave
mov
mov
(bad)
jg
mov
mov
dec
cld
fcomp
ins
lods
nop
jge
or
gs
or
daa
and
xchg
pop
sub
jge
test
mov
sbb
inc
stc
nop
daa
pushf
cmp
jp
dec
es
fiadd
add
jns
ror
cmp
ret
push
or
rol
outs
jmp
pop
mov
lea
lock
sbb
pop
sbb
ret
loope
add
xor
push
shr
retf
scas
daa
add
push
or
test
jnp
iret
out
fwait
rcl
add
mov
xchg
jne
push
dec
pop
dec
xor
sub
loopne
pop
sbb
pushf
loope
and
adc
fmul
leave
cmp
jmp
cwde
mov
je
xchg
test
cli
cwde
std
jns
repnz
js
add
dec
pusha
jp
pop
add
sub
xchg
pop
ins
cli
dec
jmp
mov
mov
mov
sub
(bad)
arpl
enter
fwait
mov
and
cmc
popf
dec
push
pop
iret
cld
cmp
xchg
int
hlt
xchg
mov
scas
lahf
loope
fstp
mov
sbb
mov
(bad)
stos
iret
add
fild
xor
in
int
test
sub
jo
movs
aaa
dec
and
call
mov
sub
inc
mov
pop
inc
out
and
xor
push
cmp
(bad)
jnp
push
adc
imul
add
hlt
(bad)
mov
call
pushf
push
mov
pop
test
jo
(bad)
mov
fcomp
cwde
and
cmp
out
cmps
sub
les
ss
retf
mov
mov
(bad)
jecxz
cmp
cdq
nop
inc
mov
xor
call
xchg
jmp
outs
xor
pop
inc
push
mov
push
ins
cld
push
mov
pop
fcmovnbe
push
mov
xchg
cmp
fwait
adc
rol
dec
mov
mov
leave
pop
inc
gs
(bad)
test
mov
lea
inc
pusha
xchg
(bad)
lock
fwait
push
imul
inc
xor
sub
inc
and
pop
(bad)
int3
clc
dec
pop
out
inc
mov
mul
xor
clc
add
(bad)
fimul
outs
inc
daa
or
stos
cmp
or
je
sbb
cmp
mov
test
mov
out
pop
jmp
add
jo
mov
mov
jge
stos
xor
cmp
cmps
outs
and
and
scas
mov
pop
adc
adc
div
mov
sub
and
mov
push
dec
sbb
rol
bsr
movs
aaa
int3
(bad)
xor
adc
cmp
fsubp
call
or
mov
jmp
lods
push
repnz
(bad)
and
jbe
jbe
xchg
jecxz
or
sar
mov
(bad)
sbb
les
add
jae
imul
or
dec
test
or
xor
jmp
mov
mov
inc
imul
test
jns
pop
mov
xchg
push
mov
sysret
add
dec
rcr
out
adc
and
inc
add
sbb
pop
mov
or
daa
push
xlat
pop
jne
and
jle
mov
out
sahf
repnz
lds
adc
iret
push
cwde
push
jg
fcom
xchg
ss
lahf
cmp
xchg
pop
adc
cmps
jnp
(bad)
jl
int
sub
sahf
daa
idiv
push
bound
adc
xchg
into
test
test
ret
mov
out
sbb
ja
sub
adc
loopne
shl
sub
sbb
lods
pop
(bad)
cmps
mov
sub
push
ja
movs
pop
icebp
hlt
js
dec
daa
mov
enter
out
pop
sub
xor
and
or
mov
mov
(bad)
pop
cli
repnz
call
jge
fsubr
ins
or
daa
call
out
add
pop
mov
je
nop
sub
cmp
int
add
pop
(bad)
jnp
and
aam
jno
pop
xchg
push
repz
push
data16
out
mov
and
cs
lds
int3
push
test
push
dec
mov
xchg
movs
mov
mov
mov
fistp
js
mov
ficomp
ss
mov
fs
mov
dec
lea
inc
xchg
or
test
cdq
pop
iret
std
in
mov
aad
and
pop
int
lds
mov
scas
dec
fwait
les
scas
pushf
fs
jmp
out
sub
and
xchg
xchg
js
mov
int3
dec
hlt
std
in
mov
push
add
jl
jnp
das
mov
pop
je
and
cmp
push
leave
dec
aaa
test
fistp
cmp
jp
movs
dec
aad
mov
(bad)
lods
xchg
arpl
add
mov
and
pop
lods
jge
mov
push
test
gs
pop
outs
push
push
pop
sbb
pop
jecxz
aas
cmp
lock
out
out
iret
xor
in
sub
xchg
add
imul
xchg
inc
jno
xchg
xor
lods
mov
and
pop
push
jecxz
or
xchg
pop
push
push
test
xchg
pop
inc
cld
xchg
xor
and
pop
mov
test
(bad)
pop
mov
mov
in
adc
js
cli
in
cwde
jnp
jb
pusha
mov
pop
jns
fstp
int3
sar
mov
jge
inc
mov
xor
add
jg
xchg
gs
add
sbb
inc
call
xchg
loope
mov
call
mov
pop
push
sbb
pop
lock
in
int
mov
jne
inc
outs
xchg
daa
(bad)
dec
pop
or
into
add
jno
dec
xor
jbe
cmp
call
adc
aas
ret
rcr
ror
data16
sub
addr16
xor
fwait
popf
je
pop
dec
or
mov
call
std
aam
pop
mov
or
mov
in
mov
mov
cdq
aaa
mov
sub
jae
imul
mov
sub
sub
retf
pop
clc
call
adc
repz
gs
repnz
jno
cs
jbe
aas
sti
in
push
mov
mov
mov
lds
or
(bad)
mov
call
mov
cmc
pop
cmp
aad
push
push
pop
fsubr
inc
inc
xor
adc
dec
in
cmc
cmp
xor
mov
fsub
ins
push
adc
dec
dec
mov
inc
push
pop
push
and
jle
sahf
ret
dec
push
jbe
ret
sbb
call
push
fs
(bad)
pusha
jle
push
fsincos
jg
mov
push
jmp
rol
inc
xlat
stos
sbb
push
jnp
in
pop
clc
push
mov
sbb
(bad)
cmp
enter
(bad)
addr16
jle
mov
fidivr
xchg
pop
pop
aaa
inc
mov
jp
mov
in
pop
daa
add
fldenv
stc
shl
add
jns
pop
inc
add
cmp
pop
les
sbb
jmp
cdq
xor
xor
test
cmp
ss
add
in
xchg
pushf
sub
sbb
add
sub
mov
jbe
repz
cmp
push
sub
cmp
mov
xchg
or
out
xchg
push
pop
sbb
pop
and
jb
adc
mov
into
mov
fild
jae
jmp
int3
mov
mov
cmp
imul
xchg
ins
rol
sar
add
xor
(bad)
sbb
retf
mov
out
cmp
mov
mov
jg
dec
inc
lds
sbb
pop
mov
(bad)
cli
lods
sbb
and
mov
push
pop
dec
scas
cmps
dec
loope
mov
mov
add
sub
jns
xchg
jge
and
into
mov
stc
push
scas
ja
xor
test
jmp
iret
mov
int
fdecstp
mov
add
mov
inc
cmp
les
mov
xor
call
mov
mov
out
pop
mov
hlt
sbb
xchg
jbe
(bad)
adc
aam
scas
mov
lock
lea
sbb
movs
or
fstp
les
ja
out
(bad)
ret
imul
hlt
les
inc
pop
dec
pop
dec
jae
hlt
sub
xlat
mov
sub
popa
popf
add
xchg
out
lods
daa
sub
jae
scas
jmp
inc
pop
retf
stos
test
xchg
in
mov
mov
mov
hlt
jle
sbb
and
jle
stc
cmps
jmp
fadd
pusha
cli
out
xor
hlt
aaa
out
mov
add
addr16
rcr
sti
(bad)
adc
mov
inc
xor
mul
adc
xchg
ins
test
not
pop
stos
jns
mov
mov
xor
jmp
sbb
nop
sbb
cmp
int3
test
jo
push
xchg
cmc
es
sub
or
jle
fdivr
jne
xchg
mov
mov
jmp
outs
or
mov
add
aaa
neg
cmp
dec
ins
test
mov
mov
xchg
cmp
in
push
call
imul
inc
aas
pop
xchg
xor
icebp
stos
hlt
pop
nop
(bad)
sub
aas
xchg
or
push
stc
cs
jle
sub
pop
arpl
addr16
ja
inc
mov
lea
jae
mov
push
and
push
xor
add
jl
(bad)
das
jbe
xchg
mov
rol
jne
add
dec
jl
add
pop
mov
or
imul
xchg
scas
gs
mov
cdq
mov
(bad)
ret
icebp
inc
dec
sub
mov
je
push
leave
jb
test
mov
aaa
push
add
(bad)
outs
inc
sbb
mov
mov
imul
enter
aaa
sbb
fadd
mov
or
mov
daa
pop
call
int
imul
not
in
mov
mov
test
outs
or
mov
cmp
and
lahf
xchg
sbb
mov
xchg
push
js
mov
sub
inc
xor
cmpxchg
leave
and
xchg
xor
ret
push
and
ror
js
fadd
dec
fisttp
jns
xchg
sbb
jno
scas
nop
in
ss
jge
test
outs
fisubr
fnstcw
xchg
lods
int3
jecxz
sar
or
arpl
adc
xor
sbb
jmp
mov
adc
inc
xchg
aaa
lea
adc
arpl
sar
jbe
icebp
fwait
push
cs
cmp
lock
mov
ins
xchg
cmp
mov
sbb
sub
push
jecxz
cs
sbb
xlat
push
aas
mov
ins
sti
push
leave
inc
imul
and
(bad)
jbe
in
imul
mov
sub
gs
mov
mov
addr16
mov
mov
sub
inc
or
(bad)
outs
xor
fwait
inc
fst
sbb
inc
into
mov
and
popf
aas
(bad)
mov
js
popf
dec
scas
inc
fst
lds
cmps
test
in
into
adc
test
or
nop
and
push
add
cmps
pop
dec
sub
out
pop
xor
enter
add
imul
outs
xor
cwde
cmps
mov
fs
int
jb
call
sbb
enter
outs
or
pop
jne
fwait
or
sbb
(bad)
(bad)
cdq
inc
bnd
sub
loop
add
xchg
xchg
mov
dec
fsubr
adc
fistp
and
fiadd
cmp
retf
outs
cld
cmp
sahf
test
push
ss
xor
lock
pop
jecxz
test
(bad)
lods
cmp
cdq
jnp
push
sub
mov
cmps
or
xchg
es
adc
hlt
or
adc
mov
jae
iret
add
test
jp
sbb
xlat
out
jg
and
xlat
sub
aas
cld
js
xor
mov
call
dec
dec
addr16
dec
mov
jge
dec
mov
sar
xor
in
sbb
fsub
jno
call
fdiv
inc
(bad)
neg
dec
cli
imul
push
call
or
add
push
jno
dec
mov
add
mov
xchg
std
xchg
jo
je
(bad)
pop
addr16
jmp
dec
mov
(bad)
ja
cld
icebp
push
jno
cli
jp
jg
ret
xlat
leave
das
adc
test
aad
xchg
xor
mov
sub
shr
test
cmp
inc
dec
aad
dec
xor
add
int3
shr
out
jo
mov
or
into
clc
ret
pop
and
cmp
loop
mov
push
push
out
(bad)
pop
jne
mov
add
sbb
add
cmp
xor
jle
bound
jns
mov
fbstp
loopne
std
retf
fcom
cld
adc
in
xchg
sbb
push
out
and
pushf
cdq
stos
cli
xchg
jp
lea
push
fsubr
or
xchg
push
push
movs
nop
sti
daa
inc
test
and
mov
push
cmps
mov
(bad)
adc
mov
inc
mov
and
mov
je
scas
rcl
dec
imul
pop
iret
inc
hlt
push
sbb
je
(bad)
fldpi
mov
in
and
(bad)
push
push
adc
cdq
or
or
stos
mov
inc
push
mov
jg
dec
xchg
or
sbb
sar
xor
adc
adc
int3
cmova
or
je
and
es
(bad)
in
fadd
sub
ficom
loope
std
mov
push
jae
loope
(bad)
cmps
arpl
push
dec
jnp
and
pop
sbb
push
inc
inc
inc
push
lds
out
and
fiadd
test
sub
es
in
jmp
outs
cmps
jnp
push
mov
(bad)
mov
js
fcomip
fst
test
sti
xchg
mov
push
dec
stos
fadd
mov
sbb
fsub
push
data16
pop
xchg
hlt
sbb
push
inc
call
(bad)
jne
retf
dec
jmp
cmp
sbb
sub
dec
retf
mov
adc
gs
xchg
fidiv
js
sbb
ret
es
sub
mov
mov
stos
mov
mov
rcr
rcr
cld
mov
jp
push
and
mov
mov
loopne
xor
int3
sub
call
xor
imul
(bad)
adc
jecxz
out
push
sub
jae
(bad)
dec
cmc
inc
jg
dec
call
inc
dec
dec
mov
call
aam
loopne
ja
lock
aas
push
push
jp
sbb
cdq
adc
jl
sub
push
dec
rcr
xchg
jbe
mov
mov
pop
lods
jg
popa
outs
shl
addr16
pop
lods
in
hlt
data16
cmp
pop
fistp
mov
cli
imul
xchg
jmp
mov
add
xchg
cmps
int3
push
ror
mov
in
sub
xchg
in
sbb
call
iret
mov
fistp
scas
cwde
aad
ins
les
sti
jne
mul
jp
or
fs
jmp
adc
xor
xor
leave
xchg
scas
mov
mov
push
jno
pop
lods
sub
int
dec
dec
mov
cwde
mov
and
xlat
and
and
pop
and
mul
test
mov
mov
or
bound
imul
xchg
daa
xchg
pop
and
and
popf
test
push
test
xchg
ins
inc
loopne
sbb
mov
rcl
idiv
xor
pop
imul
jo
xlat
fisubr
fisttp
in
cmps
int
shr
leave
inc
lahf
jne
cmp
mov
gs
cmp
call
add
dec
cmps
xor
bound
scas
pop
out
add
xchg
xchg
retf
cdq
outs
jnp
scas
mov
cmp
(bad)
fs
mov
add
push
inc
repnz
push
pop
(bad)
(bad)
jle
inc
addr16
sub
jne
push
jl
repnz
sub
pop
inc
add
clc
outs
aaa
add
ret
imul
pop
pop
xchg
dec
ret
sbb
mov
retf
jmp
xor
cs
shl
jo
sar
cdq
push
add
and
dec
add
inc
or
sbb
and
jmp
adc
out
mov
push
pop
arpl
dec
cmp
mov
ds
pushf
or
add
sub
mov
inc
dec
dec
sbb
aas
ret
or
cmps
shl
pop
imul
pop
pop
clc
pop
or
int
jecxz
lea
mov
mov
cmp
lock
xor
mov
add
pop
outs
pop
in
mov
or
sub
add
lods
inc
or
mov
xlat
imul
dec
mov
pop
loope
xor
clc
mov
idiv
dec
rcl
or
push
jb
retf
adc
and
dec
rol
mov
cmps
pusha
pop
or
pop
mov
mov
push
sbb
dec
pop
xchg
sbb
xlat
xor
sahf
add
loop
jno
enter
je
mov
popf
repz
cmp
push
ja
add
add
and
xchg
jb
and
cmp
inc
adc
or
adc
scas
push
cmp
push
mov
mov
or
push
dec
pusha
jp
shl
xor
add
mov
mov
push
inc
pop
jecxz
popf
into
(bad)
sti
xor
repz
xchg
cli
repz
cs
push
pop
sub
xchg
or
cmp
sbb
in
inc
fs
icebp
xchg
xchg
pop
icebp
cld
enter
adc
dec
add
xchg
rcr
scas
mov
sbb
sar
push
pop
dec
xchg
sbb
or
and
in
inc
pop
loop
test
push
jg
xor
inc
stc
xchg
jmp
dec
mov
test
inc
xor
xchg
inc
lock
mov
mov
sahf
ja
inc
lds
xor
push
repnz
xlat
fldcw
es
mov
out
mov
mov
inc
div
ins
repnz
enter
inc
jno
test
mul
lods
nop
pushf
movs
ins
push
fnstenv
pusha
push
in
jle
or
inc
not
outs
mov
xchg
jns
xor
ficomp
outs
jecxz
mov
fwait
push
jp
inc
sub
pop
hlt
xchg
call
stos
test
iret
fistp
and
mov
sub
sbb
ins
test
xchg
leave
sbb
xchg
jmp
scas
cdq
ds
inc
adc
inc
imul
jo
imul
cdq
mov
jmp
mov
into
ins
mov
mov
in
dec
sub
stos
in
dec
shr
xor
cmp
add
(bad)
fisubr
fnstenv
sar
lea
fwait
mov
add
ja
jae
sar
icebp
xor
vmread
outs
inc
ror
(bad)
push
add
dec
push
call
inc
repnz
mov
(bad)
and
loopne
pop
cmps
pushf
dec
mov
daa
or
jl
les
push
shr
mov
inc
sbb
adc
cdq
lods
fld
cli
pop
pop
stc
fucomi
xor
dec
ror
pop
rol
inc
mov
or
xor
inc
paddsw
mov
dec
out
adc
mov
por
mov
adc
adc
sbb
and
push
push
adc
mov
pop
push
cmp
push
ret
pop
pop
test
xor
and
inc
adc
pop
fadd
inc
pop
push
mov
repz
iret
push
jb
int3
inc
xchg
loope
call
mov
lahf
jns
lods
arpl
popf
inc
sar
sti
sub
(bad)
cmps
cmp
or
sub
shl
dec
cmp
mov
mov
ins
inc
shl
daa
clc
xchg
sahf
push
pop
ret
fistp
cmp
xor
xchg
push
mov
mov
(bad)
in
scas
adc
stos
cmp
xchg
xchg
add
jnp
xor
cmp
ret
fild
fucomip
mov
and
pop
mov
dec
dec
mov
enter
jmp
pop
sbb
xchg
xor
in
xchg
lea
(bad)
xchg
cli
pop
mul
cdq
int3
inc
call
xchg
add
(bad)
daa
(bad)
popf
iret
pop
dec
jl
sbb
(bad)
imul
out
xor
sbb
or
mov
call
push
xor
call
clc
fwait
add
and
inc
pop
cmp
sti
out
imul
sti
movs
sbb
enter
fstp
xchg
idiv
lds
adc
mov
inc
mov
xchg
aad
push
inc
rcl
dec
in
cmp
cld
ss
cs
stos
pop
aas
adc
mov
push
dec
adc
add
xchg
repz
dec
sbb
push
mov
int
sub
sbb
push
cli
loope
adc
add
dec
test
shl
pop
cmc
lea
jo
nop
daa
xor
sbb
lods
xchg
fisub
or
inc
cmp
add
cmps
adc
fimul
bound
mov
cmp
mov
sub
aaa
pop
xchg
out
cld
es
jp
sti
mov
jb
movs
sbb
(bad)
push
jne
(bad)
jnp
mov
int
sub
cmp
bound
push
or
pop
or
pusha
call
jns
fiadd
cmc
mov
mov
add
sbb
mov
scas
cs
xlat
xchg
cmp
pop
ret
outs
dec
adc
lods
jl
xchg
push
std
xchg
sbb
pop
push
imul
and
in
mov
rol
xchg
inc
sbb
adc
loope
jne
data16
stc
rcr
inc
jmp
adc
mov
retf
mov
dec
cld
repz
push
jmp
dec
nop
adc
ficomp
repz
sub
data16
gs
fisub
jo
adc
cmp
inc
mov
ds
pop
repz
xchg
jno
add
mov
dec
fidiv
jl
push
pop
jmp
mov
mov
xor
imul
mov
jg
imul
or
pusha
movs
push
xchg
push
or
ja
neg
cmp
lahf
test
cmc
lods
mov
and
loope
push
enter
xchg
inc
mov
pop
push
lea
das
pop
nop
outs
mov
shl
out
fbld
movs
dec
xchg
push
sub
xchg
sbb
mov
xchg
mov
push
xor
cmp
das
xchg
inc
das
pop
jmp
mov
in
jbe
lods
lds
cmp
mov
test
pusha
push
push
pop
and
lods
fist
and
dec
cmp
sbb
and
xchg
xchg
or
or
pop
add
jmp
push
xor
ins
mov
(bad)
fwait
jg
xor
rol
in
outs
fstp
pop
cmp
xor
dec
fistp
and
fidivr
pop
cmp
inc
cld
mov
push
in
lods
js
popf
ret
arpl
adc
or
and
movs
xchg
jb
push
cmp
leave
inc
mov
stos
cmp
cmp
outs
jp
fwait
lods
cmps
xchg
add
int
lods
sbb
jbe
movs
out
imul
mov
nop
lods
sbb
call
(bad)
pusha
add
xlat
mov
inc
mov
mov
push
dec
xor
in
or
pop
push
loop
and
adc
push
das
pop
or
lock
bound
js
mov
lods
retf
pushf
mov
loopne
xchg
fstp
stos
stos
(bad)
sbb
or
xor
scas
mov
jmp
mov
push
imul
loopne
cli
pop
rsm
xchg
das
mov
sub
or
push
push
dec
xchg
pmuludq
xlat
or
outs
inc
(bad)
dec
fwait
or
xchg
xor
popa
fstp
ins
mov
jge
lahf
xchg
dec
mov
jo
retf
xor
add
xor
and
jns
xchg
in
retf
mov
aam
jle
pop
push
pop
jnp
sbb
add
cmp
(bad)
rcr
jno
push
shl
pop
mov
or
jae
mov
sbb
dec
jne
xchg
xchg
fisub
(bad)
add
lds
xor
fnsave
mov
ds
test
inc
inc
jmp
std
(bad)
aad
sahf
xor
mov
add
daa
movaps
or
shl
int3
div
cmc
mov
in
push
pop
aaa
add
sbb
stos
sub
inc
mov
lds
cli
pop
ins
rol
(bad)
jno
stos
cmp
and
or
shl
or
fisub
(bad)
retf
in
stos
popa
(bad)
into
popf
cs
sbb
jno
sti
sbb
ret
clc
adc
and
pop
pop
imul
mov
fistp
loopne
movs
inc
ins
(bad)
sub
add
ret
shr
rcl
aas
push
loope
aas
inc
clc
inc
and
stos
mov
sbb
sbb
int3
outs
mov
or
arpl
inc
mov
outs
lds
addr16
inc
ret
frstor
adc
test
mov
lods
mov
jp
shl
cld
aad
adc
es
addr16
sti
pusha
pop
(bad)
sbb
mov
mov
adc
and
or
sub
retf
sbb
in
cwde
cld
xor
mov
jmp
out
movs
inc
push
mov
and
mov
xchg
push
sub
iret
data16
mov
sti
outs
and
dec
ret
cmp
cmp
ret
test
bound
lock
mov
xchg
adc
mov
cmp
stc
dec
pop
popa
lahf
mov
jb
retf
dec
pop
add
adc
lock
ror
inc
ror
or
mov
dec
pop
scas
and
or
cmc
pop
arpl
icebp
or
aas
inc
xor
mov
push
jmp
test
hlt
pop
sub
pop
jmp
idiv
mov
repz
repnz
mov
rcr
ficomp
cmp
mov
adc
jl
leave
imul
fs
pop
pop
iret
sub
cmp
cmc
cld
ins
fisub
(bad)
jmp
add
mov
jmp
push
cmp
clc
and
icebp
repz
ins
fist
jle
mov
outs
sbb
sar
push
dec
mov
jmp
sbb
mov
cmps
ret
push
dec
cmp
sbb
pop
imul
add
fcomip
mov
pushf
retf
pusha
mov
dec
and
push
fsub
sbb
pop
and
sbb
mov
test
inc
into
aam
dec
(bad)
jge
ins
rcr
sub
js
xchg
call
dec
xor
cmc
mov
mov
pop
jmp
outs
movs
imul
cwde
inc
xor
fdiv
xor
mov
mov
cmp
lock
test
out
xchg
mov
inc
cmps
adc
cmp
adc
pop
cwde
push
fadd
repnz
pop
fld
aas
je
mov
jne
xlat
sub
push
pop
sti
in
leave
jb
out
std
fdivr
retf
xor
mov
mov
call
cli
push
cmc
dec
mov
or
adc
sub
pop
(bad)
js
push
hlt
xor
push
sbb
outs
jae
adc
mov
sub
cmp
xchg
xor
pusha
cmp
sbb
dec
xchg
push
push
add
pushf
popf
test
ret
cmp
cld
hlt
inc
dec
in
inc
enter
push
outs
in
mov
jmp
sbb
cmp
push
test
outs
cmp
adc
sbb
sub
jl
test
push
inc
xor
cmp
pop
in
inc
sub
or
into
push
xchg
popa
pop
bound
cld
in
inc
or
cmp
add
pop
cmp
xchg
pop
and
inc
mov
rcl
test
ds
out
add
jnp
fnstcw
fbstp
jnp
je
cdq
cmp
lods
add
popa
and
test
pop
pop
test
sti
test
fst
xor
cmp
ds
hlt
cmp
or
lods
jbe
pop
mov
arpl
push
sahf
fcom
pop
push
repz
inc
jmp
cmc
push
scas
daa
xchg
mov
mov
shr
imul
sub
jle
mov
retf
enter
(bad)
bound
lods
mov
push
je
push
cmp
add
in
jl
cmp
bsf
pop
pop
(bad)
cdq
jns
jne
jbe
push
jmp
push
inc
xor
leave
(bad)
jp
pop
rcr
xor
xchg
pop
mov
stc
add
cmp
ja
aas
xchg
call
outs
ds
xor
fs
xchg
xor
stos
(bad)
push
pop
jle
pop
(bad)
nop
jbe
adc
(bad)
mov
dec
out
ins
mov
outs
movs
clc
xor
iret
ror
inc
in
fiadd
jae
dec
pop
std
push
lds
mov
jmp
jge
ins
int3
and
push
nop
xchg
icebp
repnz
aam
mov
sub
or
adc
pop
and
inc
int
fdivr
movs
adc
inc
fild
nop
mov
fsub
test
dec
xor
or
icebp
and
xchg
jae
ret
fucomp
fwait
das
or
sub
pop
or
mov
adc
in
jo
les
pop
stos
fcom
data16
call
mov
mov
sti
daa
lds
cmp
aam
ds
dec
push
push
ret
xor
inc
mov
push
xor
sahf
les
cwde
or
push
aad
stos
stc
ins
or
das
sbb
or
addr16
mov
jle
dec
sbb
or
mov
icebp
int
enter
ror
inc
jns
inc
leave
mov
gs
(bad)
fisubr
push
jb
sub
addr16
add
push
data16
test
jbe
add
sbb
das
cwde
aam
jns
push
and
dec
fiadd
fwait
and
movs
out
out
sbb
jecxz
outs
xchg
retf
test
pop
push
xor
daa
test
outs
pusha
ret
call
inc
xor
shl
or
push
cwde
pop
xlat
mov
pushf
stc
cmp
mov
pop
sbb
popa
jb
mov
std
sahf
push
jmp
adc
cmps
mov
mov
mov
add
xor
mov
fmul
sub
xchg
xchg
jb
cmps
sub
es
mov
cmp
loopne
cmc
and
adc
sub
xlat
ja
in
sub
enter
jns
pop
ret
std
sbb
cmc
dec
mov
jae
push
nop
adc
mov
aas
sub
imul
adc
call
mov
cs
and
cdq
retf
pop
pusha
div
dec
inc
ja
test
mov
int
out
(bad)
pop
dec
push
push
out
or
inc
mov
outs
xchg
jge
push
outs
cld
scas
outs
cwde
not
fmul
mov
mov
pop
test
mov
test
in
imul
shl
aad
mov
mov
stc
fwait
popa
dec
push
test
push
iret
push
ins
and
cmps
aaa
adc
imul
push
mov
int
cmps
and
mov
jo
lds
vsqrtps
retf
inc
inc
xchg
repz
pop
jae
cmp
dec
sub
xchg
or
call
push
rep
sub
sar
push
ds
arpl
mov
je
outs
add
xor
sbb
mov
push
cdq
xchg
push
cmp
cdq
(bad)
aad
ins
mov
in
push
retf
adc
out
ins
cmp
test
sbb
sub
popa
outs
ret
cmp
xchg
xor
jbe
add
(bad)
sbb
lahf
inc
push
cmps
push
iret
pop
push
xchg
sub
aam
jl
mov
or
in
nop
add
cmps
sbb
or
in
jecxz
test
test
gs
xchg
test
push
mov
or
push
sub
pop
cmp
fistp
cmp
sub
fbstp
dec
out
std
retf
inc
pop
shl
and
mov
sbb
jne
fcomp
jmp
jp
add
lds
inc
lahf
cmp
lds
pushf
pusha
or
inc
mov
call
mov
xor
loopne
sbb
and
stos
lahf
mov
xchg
cli
aas
movs
lods
nop
ss
jmp
imul
aaa
in
test
or
cmp
add
jmp
imul
fidiv
add
cmp
imul
inc
inc
mov
addr16
cmps
sbb
sub
enter
mov
sbb
mov
ret
and
sub
xchg
call
push
test
sub
stos
sbb
fwait
mov
or
je
sbb
cs
test
cdq
sub
pop
xor
pop
mov
leave
stc
pop
mov
in
push
mov
dec
outs
fdivrp
jb
jns
and
add
jmp
js
in
shr
out
imul
or
xchg
and
bound
cmp
enter
lods
std
cmp
sahf
scas
xor
mov
mov
jg
movs
sub
push
fistp
ins
or
push
pop
push
cld
and
das
cmc
aam
sbb
push
in
loope
jnp
xchg
mov
push
jge
sub
sub
and
outs
mov
push
sbb
adc
push
test
(bad)
xor
cmp
cli
xor
mov
inc
xor
mov
(bad)
or
push
or
rcl
test
inc
test
iret
push
adc
cmp
mov
add
push
or
int
lds
jmp
sub
push
sbb
mov
dec
dec
sbb
outs
hlt
hlt
cmp
xchg
push
movs
sub
mov
enter
xchg
inc
push
dec
out
cld
dec
mov
(bad)
and
mov
fidiv
or
loopne
(bad)
xchg
fwait
aad
je
pusha
add
add
sahf
pop
nop
ins
sub
int3
hlt
push
ret
fbstp
das
js
and
movs
pop
lods
rol
stos
cmp
(bad)
aaa
xchg
retf
cmps
cmp
scas
int
adc
sbb
ret
(bad)
(bad)
or
cmc
xor
lahf
fimul
test
inc
sub
and
and
mov
pop
jle
repnz
fdivr
dec
mov
pop
les
fwait
je
jl
sbb
pop
lods
xor
popa
imul
pushf
mov
movs
iret
dec
sti
and
rol
(bad)
mov
mul
mov
into
fnstsw
push
mov
test
adc
movs
jno
enter
sets
out
cli
add
pop
shl
xchg
mov
loope
out
cmp
jno
aam
cli
add
or
call
push
sbb
adc
scas
(bad)
mov
(bad)
xor
jnp
push
stc
sub
jge
xchg
xor
sub
add
ins
in
mov
mov
std
fnsave
mov
sub
or
cwde
pusha
push
mov
adc
fwait
loop
stos
les
push
xor
pop
push
jmp
xor
mov
repz
push
es
mov
in
push
div
iret
xchg
adc
xor
mov
dec
sub
pop
data16
(bad)
mov
xor
inc
mov
mov
fidivr
lea
mov
add
aas
add
mov
inc
loopne
push
icebp
loopne
fwait
inc
int
or
cmps
jg
xchg
jecxz
mov
and
adc
push
sbb
push
fist
bound
clc
add
into
adc
dec
xor
(bad)
sbb
pop
sub
dec
imul
push
mov
adc
inc
xor
or
lock
das
inc
xor
push
ins
pop
mov
div
sbb
push
jae
into
cdq
dec
dec
inc
(bad)
stc
stos
sahf
test
cmps
sub
or
mov
add
sbb
xchg
fld
std
jb
jnp
and
push
push
iret
repz
dec
fisubr
sub
dec
xchg
das
sbb
adc
mov
sub
push
adc
jge
js
xlat
add
stos
mov
lds
repz
mov
invd
xchg
adc
gs
dec
mov
sub
or
ins
pop
sti
es
inc
mov
inc
adc
sbb
xor
inc
test
mov
mov
ss
inc
loopne
fcomip
test
add
dec
pop
sti
jb
add
addr16
rcr
cmps
je
inc
sar
inc
mov
and
dec
ficom
imul
xor
and
stos
cmp
inc
jae
(bad)
fstp
stos
mov
ds
sub
sbb
xchg
fst
pop
lods
sbb
xchg
repz
pushf
sub
jp
pop
aam
inc
neg
jmp
rcl
movs
outs
cmp
mov
addr16
mov
mov
test
aaa
mov
arpl
lds
pop
mov
lea
sbb
push
test
sti
inc
cli
popa
cmp
lea
sbb
inc
outs
mov
xor
fs
test
retf
clc
push
movs
dec
je
jge
dec
into
push
lea
jae
dec
ss
in
mov
mov
xchg
in
jle
push
xor
sbb
jno
aad
mov
das
inc
jne
sbb
fidiv
mov
rcl
jg
test
aad
hlt
xor
cmp
sahf
and
jle
and
out
xchg
jnp
or
jne
xchg
mov
rcr
jp
ds
fldenv
scas
or
cmp
shl
mov
js
inc
add
pop
inc
or
or
aaa
popf
data16
ins
inc
out
lock
dec
push
ins
xchg
fisubr
adc
jno
mov
jnp
or
xchg
inc
mov
mov
push
call
shl
gs
cmp
arpl
mov
inc
sbb
aaa
push
sbb
outs
sub
push
jp
pop
cld
adc
or
shl
pop
rol
push
xchg
or
retf
(bad)
adc
mov
pop
cdq
push
dec
loope
nop
lods
fstp
enter
push
push
add
in
add
or
mov
xor
adc
popa
push
daa
(bad)
out
scas
into
rol
clc
clc
sahf
or
or
shr
loop
sub
out
xor
into
cmp
add
xchg
fistp
es
int
in
push
inc
or
fistp
enter
xchg
aaa
out
call
push
xor
imul
pop
iret
bound
cmp
adc
clc
dec
xchg
outs
repz
mov
idiv
cmc
leave
push
sti
iret
aaa
lods
pop
inc
mov
bts
(bad)
fdivr
dec
cmps
stc
dec
fstp
cmp
push
jnp
ins
dec
or
cs
aas
jbe
repnz
pop
sub
aam
(bad)
out
(bad)
stc
push
xchg
adc
call
lea
cdq
pop
or
add
adc
adc
push
xor
mov
(bad)
mov
mov
jo
test
dec
pop
js
retf
daa
cwde
add
hlt
fsub
fild
adc
loopne
mov
push
and
pop
adc
jne
rol
push
jmp
cmp
xchg
mov
jae
cmps
inc
movs
out
cmc
loopne
add
ret
mov
outs
adc
push
adc
fs
sbb
lods
jmp
jns
adc
push
xor
cs
mov
inc
mov
add
cdq
stos
test
xor
xchg
mov
and
cwde
popa
in
jns
and
mov
ret
in
js
iret
mov
ins
pop
add
sub
jo
test
pop
xor
push
popf
push
fstp
adc
in
cmps
out
dec
pop
cmc
adc
addr16
jo
inc
inc
dec
mov
pop
ret
sub
hlt
push
push
hlt
cs
xchg
cmc
(bad)
shl
and
jns
mul
inc
popa
mov
fiadd
add
jmp
inc
jne
cli
lahf
fsubr
mov
daa
mov
jbe
in
dec
jne
sub
mov
inc
cmps
scas
sub
inc
mov
pusha
mov
les
and
sar
adc
mov
jmp
sub
sub
mov
pop
jbe
or
mov
outs
pop
adc
movs
outs
call
lods
add
shl
pop
xchg
sbb
test
cmp
and
test
inc
cs
or
xor
mov
stc
push
mov
lods
cld
adc
cmp
int
mov
push
repz
stc
add
inc
mov
imul
movs
add
cmp
adc
(bad)
jb
sub
inc
mov
test
into
mov
push
and
icebp
adc
cmp
dec
xor
mov
cdq
pop
mov
hlt
xchg
adc
mov
xchg
push
xchg
ja
sbb
dec
ja
xchg
add
jecxz
pop
adc
arpl
bound
jb
pop
retf
xchg
dec
xor
cmp
jnp
mov
jbe
out
dec
jae
lds
sbb
gs
mov
inc
push
je
nop
mov
shl
xchg
int
mov
xchg
pop
stc
arpl
dec
arpl
sbb
xchg
arpl
adc
sbb
xchg
sub
ja
mov
xchg
stc
xchg
in
call
mov
cwde
pop
pop
dec
add
nop
stc
jne
cmp
aad
inc
add
cld
jnp
inc
push
out
fist
cmps
jle
xor
jno
push
mov
call
add
(bad)
pop
push
push
lods
sub
mov
jne
sbb
xchg
js
fistp
into
sbb
cmp
cld
jg
dec
mov
aad
(bad)
popf
(bad)
push
xor
lods
dec
retf
in
xor
dec
push
in
(bad)
out
fwait
adc
(bad)
int
pop
cld
dec
pop
sti
loopne
and
lock
sbb
cmp
and
adc
add
bound
aad
jns
ins
or
xchg
add
add
sbb
jno
jo
jno
jle
test
fnsave
repz
pop
jns
inc
pop
inc
and
ret
es
xlat
sub
push
pop
loope
mov
arpl
fwait
cmp
mov
add
das
ins
inc
adc
pop
imul
in
xor
scas
test
jmp
rcr
sbb
(bad)
je
xchg
adc
push
mov
mov
sub
dec
(bad)
test
idiv
jne
in
mov
ins
add
ja
mov
aaa
icebp
fisub
inc
add
imul
gs
ds
or
jo
addr16
out
jp
or
mov
retf
and
out
pusha
adc
scas
pop
lea
mov
mov
stos
pop
sub
aaa
push
pop
mov
mov
mov
lea
in
push
inc
xchg
mov
sahf
in
fcom
adc
movs
rcl
clc
in
retf
adc
mov
shl
inc
jns
cmp
popf
pop
test
mov
mov
xchg
sub
push
loopne
adc
in
test
add
inc
add
add
xchg
sbb
movs
fwait
das
std
mov
cmp
pop
xchg
data16
mul
jmp
imul
mov
mov
call
fisttp
int3
scas
push
outs
das
jns
rol
dec
jns
ret
addr16
add
call
fcmovnb
inc
out
lods
mov
repnz
and
dec
pop
jecxz
outs
fwait
stos
(bad)
pop
in
out
mov
lods
jb
int
(bad)
jb
jb
loopne
int3
pop
into
sbb
dec
cmc
pusha
call
cmp
cmp
arpl
inc
and
jecxz
scas
add
adc
jo
enter
int3
cmps
repnz
leave
hlt
push
popf
and
shl
imul
test
out
fnsave
sbb
sub
ss
push
js
daa
sub
fstp
push
xchg
(bad)
xor
mov
jge
mov
clc
jo
xchg
xchg
push
lds
in
jle
jle
lahf
jge
add
fwait
cs
adc
jmp
mov
(bad)
int
dec
gs
jne
cdq
push
add
fnsave
jp
test
push
sub
fdiv
pop
cmp
test
aas
dec
aaa
sbb
mov
ds
add
inc
or
mov
sub
mov
cmp
mov
mov
cli
push
xlat
and
xchg
jno
and
lock
shl
adc
clc
jg
ss
xchg
pop
push
jnp
jle
es
add
pusha
and
or
xchg
dec
pop
xchg
jmp
sub
movs
data16
test
or
mov
mov
jbe
jno
out
jb
mov
aam
mov
cwde
jle
cs
sub
dec
jns
push
arpl
fidivr
xchg
sbb
inc
ds
jns
fsub
mov
(bad)
cdq
cmp
ins
add
shr
mov
push
xchg
push
sbb
or
fmulp
ficom
push
sub
xchg
les
mov
and
mov
push
xor
cmps
dec
lahf
and
les
pop
add
cmp
shl
test
or
sahf
sbb
stos
fistp
aas
mov
xchg
into
in
iret
xchg
cmp
pop
pop
sub
cdq
rcl
into
adc
ins
add
pop
xchg
inc
mov
mov
repz
pop
dec
cmps
push
cmp
ja
sbb
xlat
mov
hlt
add
les
mov
add
fs
lods
mov
xchg
push
xor
jns
loope
xchg
xchg
or
dec
xchg
inc
clc
pop
mov
test
aad
pop
sub
add
xchg
lods
(bad)
jge
mov
xchg
pop
xor
(bad)
jnp
ja
je
dec
xchg
jae
sub
je
mov
dec
dec
dec
sbb
aas
add
fstp
retf
rol
pop
mov
hlt
test
arpl
mov
or
and
(bad)
jns
cmp
or
xchg
cmp
or
pop
xor
push
and
dec
xor
push
(bad)
aam
jbe
aaa
mov
out
shr
imul
es
js
out
pop
dec
sti
movs
push
add
loopne
js
aas
ins
mov
ret
cwde
dec
mov
inc
test
sbb
ins
dec
shl
add
in
mov
cmp
or
rol
xchg
(bad)
mov
xchg
adc
into
or
imul
xchg
std
cs
xor
jle
pop
cmps
lods
pop
and
add
icebp
repnz
mov
xor
mov
mov
gs
test
inc
lock
jb
jb
fnstcw
mov
mov
cmp
pop
div
imul
mov
and
movs
dec
cwde
ins
aas
and
sub
test
test
pop
pop
stos
lods
mov
test
mov
dec
sahf
dec
adc
data16
inc
lahf
les
mov
adc
push
shl
mov
mov
xor
xor
cmp
mov
lods
adc
adc
jbe
lods
(bad)
jb
cmps
or
in
test
pop
mov
xlat
scas
enter
gs
inc
mov
outs
sub
fnsave
push
sbb
sbb
xchg
xor
in
gs
add
das
in
cmp
sub
xor
jae
ja
and
and
fnstsw
add
cmp
push
shr
mov
mov
dec
jne
psubw
lea
mov
jmp
inc
fstp
cmp
push
mov
imul
adc
js
scas
pop
push
xor
out
or
sub
mov
stc
jo
inc
(bad)
in
mov
xlat
dec
scas
cdq
cmps
pop
xchg
mov
hlt
cld
call
stc
mov
loope
xchg
ins
add
fstp
mov
jb
xchg
mov
and
dec
mov
lock
cmp
aam
xor
sbb
pushf
jle
call
inc
inc
add
xor
ja
stos
neg
enter
fidivr
cli
(bad)
adc
iret
add
mov
rol
repz
or
fcomip
jmp
inc
fisub
xor
dec
pop
or
outs
movs
jb
mov
jno
xchg
add
jae
push
jns
movs
fild
fisubr
fs
add
pusha
(bad)
addr16
jb
aam
sub
pop
jns
repnz
add
stos
loopne
mov
pop
push
sub
cmp
xor
loopne
imul
(bad)
fnsave
into
sbb
je
and
push
mov
rcr
cmp
ret
and
adc
add
sbb
add
cmp
mov
mov
stos
stos
je
push
out
daa
sub
aam
(bad)
push
sbb
sub
add
in
sub
int
sbb
sbb
int
pop
mov
xor
xor
paddsw
ins
add
mov
cmc
shl
mov
or
cmp
push
and
sti
xor
arpl
data16
inc
lock
dec
mov
sti
cmp
sub
cmp
int3
dec
ficom
add
sar
sbb
jno
(bad)
push
and
and
(bad)
mov
loopne
jg
mov
ror
mov
sbb
mov
pop
xchg
ds
movs
test
cmp
cwde
cdq
shl
outs
jg
(bad)
fnstenv
pop
ret
es
mov
in
xchg
fidivr
add
cmp
fdivr
fidiv
dec
jmp
mov
push
adc
sub
inc
stos
xchg
dec
xchg
and
sbb
popa
push
add
jp
sahf
fisub
ins
fadd
sbb
icebp
xor
mov
dec
ins
call
lods
add
mov
jmp
push
sahf
test
and
xchg
repz
push
pop
xchg
outs
ds
or
sub
xchg
pusha
dec
shl
or
xchg
mov
sub
dec
in
mov
cmp
xor
movs
cli
fdivr
pop
add
inc
lods
xlat
fdivr
enter
or
lahf
mov
or
ret
jnp
or
outs
ret
call
js
xor
out
inc
dec
bnd
shl
inc
xchg
lock
inc
test
cmp
repnz
xchg
sub
movs
fsubr
adc
jnp
out
mov
inc
aam
mov
not
fistp
enter
nop
adc
pusha
sti
repnz
mov
scas
enter
jl
push
repz
lahf
aad
sub
inc
dec
xchg
(bad)
sar
mov
jno
test
movs
mov
pop
das
popa
cmps
adc
scas
cmc
pop
test
fmul
sub
xlat
cdq
in
rcl
mov
mov
pop
fcmovnb
jle
or
adc
mov
pop
jo
jae
or
outs
mov
jb
js
pop
sar
test
adc
jecxz
jmp
fisttp
cmps
xor
or
fisubr
stos
and
cwde
sub
stos
fild
xor
jle
ror
(bad)
fnstenv
xor
sbb
leave
pop
repz
dec
test
int3
pop
mov
out
out
dec
pop
xor
cmps
je
inc
stos
sub
xchg
sbb
fnstenv
pop
sub
push
mov
fprem1
ja
test
push
inc
sbb
inc
and
jp
fwait
or
mov
adc
mov
xchg
add
sti
sub
dec
stos
push
cmp
(bad)
mov
mov
push
add
loope
fsub
lahf
ret
add
mov
push
ins
cld
dec
push
mov
es
dec
inc
sahf
call
jl
jmp
in
push
add
adc
xor
lea
add
xor
(bad)
pop
(bad)
cmp
pop
rol
div
call
inc
fcmovb
and
mov
aas
add
sub
call
popa
outs
mov
js
or
or
popf
xor
out
adc
add
fcomp
test
mov
xchg
inc
hlt
jns
daa
xor
pop
mov
mov
jb
int
push
sub
pop
jae
mov
jg
push
repz
pop
push
inc
pop
push
inc
mov
fs
sbb
int
cwde
mov
mov
aam
mov
out
loope
push
ins
mov
sub
inc
imul
push
or
xor
or
inc
jmp
dec
repnz
shl
push
stos
fst
stc
inc
mov
jns
sbb
pop
arpl
lods
push
cmp
cmp
in
call
cmp
push
mov
sub
(bad)
imul
inc
loop
sbb
xor
sbb
int
mov
jo
inc
push
mov
fsubr
mov
push
stc
and
or
and
mov
pusha
push
add
push
and
cmc
adc
inc
fwait
adc
and
cld
mov
fnsave
jp
sbb
or
lods
mov
fcmovb
push
cmp
dec
mov
ret
je
sbb
mov
or
mov
cmp
push
dec
fimul
arpl
rcl
adc
clc
pop
cli
ret
jns
mov
outs
mov
loopne
in
lds
jg
fs
xlat
pop
(bad)
jg
rcr
push
jo
std
mov
daa
into
rcl
push
(bad)
aaa
jle
mov
mov
sbb
fld
mov
je
mov
loopne
cli
mov
je
adc
adc
adc
sub
dec
mov
iret
jb
adc
adc
ret
mov
out
sbb
mov
inc
out
pop
sbb
xor
mov
push
fsubr
jae
into
into
dec
and
dec
les
int3
gs
shl
cmp
js
in
call
push
je
sbb
int
mov
fldenv
ds
cdq
xor
cmp
pop
ss
adc
jp
dec
xor
daa
mul
shr
mov
jae
scas
xchg
mov
inc
push
call
inc
jmp
jnp
add
loope
rcl
xlat
cmps
lds
lods
mov
or
(bad)
lock
jns
and
jae
leave
cs
mov
ret
lods
sbb
jmp
sub
enter
sti
lea
xor
and
nop
pop
repnz
outs
adc
ret
push
rcr
mov
push
inc
mov
into
popf
push
add
test
popa
aam
sub
xchg
mov
inc
mov
dec
jge
mov
adc
imul
sub
inc
dec
push
xchg
out
aaa
fmul
jnp
movs
shl
scas
mov
sbb
push
and
push
push
mov
dec
aad
mov
jnp
out
ret
sbb
jmp
mov
xchg
enter
call
mov
iret
inc
jp
jle
cld
lds
daa
mov
into
loop
dec
loopne
sbb
imul
push
in
pop
shl
clc
std
dec
dec
fs
imul
aaa
sahf
mov
addr16
loopne
(bad)
xor
movs
mov
in
jp
or
mov
sub
mov
fidivr
inc
dec
cmp
ror
xchg
inc
mov
mov
sub
xchg
mov
loope
xchg
rcl
jge
hlt
and
adc
fwait
xor
fstp
int
xchg
das
mov
fild
push
or
das
stos
(bad)
int
test
sub
cmp
std
push
mov
bound
in
in
mov
jg
add
dec
inc
(bad)
arpl
xrelease
in
movs
mov
and
adc
sub
cmp
sahf
loope
xor
enter
jle
cdq
mul
aad
or
ror
test
lds
ins
or
adc
out
or
retf
jl
and
(bad)
sub
mov
scas
push
pusha
xchg
rol
or
iret
mov
inc
rcr
or
pushf
sub
aaa
or
or
rcr
cld
xor
xchg
xor
stc
add
inc
loope
push
(bad)
scas
shr
jmp
enter
cmps
int3
inc
mov
imul
test
or
mov
fadd
addr16
jmp
xchg
das
(bad)
(bad)
push
mov
xchg
stos
ja
loop
cmp
leave
ds
xchg
out
push
jmp
das
lahf
fwait
int
mov
(bad)
sub
shl
mov
sub
pushf
scas
ficom
or
popa
cld
sub
adc
push
add
pop
sub
add
inc
push
push
fnstenv
jp
repz
xlat
or
popa
mov
loopne
add
nop
or
jge
sub
sahf
aaa
push
ins
xchg
or
fst
jmp
jl
pop
cwde
call
das
mov
scas
and
fsub
or
jmp
mov
cmp
push
dec
mov
cs
mov
xor
sub
jns
fld
add
push
jle
stc
inc
cld
jmp
lods
mov
in
pop
mov
and
dec
fcmovnbe
dec
mov
movs
push
test
sbb
mov
cmp
adc
scas
add
pushf
and
imul
test
pop
fdivr
mov
cmp
mov
pop
call
jne
in
xchg
int
scas
cmps
cmps
(bad)
aas
sbb
pop
xchg
(bad)
retf
stos
repnz
movs
in
gs
int3
sbb
shr
and
mov
pop
int
lock
push
xchg
jne
mov
sub
and
adc
and
cwde
leave
xchg
push
jne
retf
fnsave
cmp
(bad)
sbb
clc
cmp
add
mov
pop
push
and
iret
jmp
xlat
loope
push
dec
ret
or
jle
jbe
aas
lods
or
dec
or
and
mov
adc
repz
cmp
jns
imul
xchg
sbb
out
mov
je
rol
cli
dec
pop
js
xchg
ins
leave
cdq
jmp
movs
adc
(bad)
xchg
in
js
sbb
push
sbb
dec
psubusb
inc
xor
(bad)
(bad)
test
pop
cmp
xor
lahf
je
stc
ror
push
ds
(bad)
mov
jno
jecxz
test
pop
add
outs
call
jne
xchg
jno
imul
(bad)
xor
ss
mov
(bad)
sbb
fisubr
xor
mov
int
and
push
adc
mov
mov
pushf
push
cmp
movs
dec
xchg
cmp
add
jmp
fidiv
dec
push
test
movs
cmps
sti
dec
repz
jp
jo
mov
scas
lea
jmp
sub
sbb
xchg
adc
lds
cmp
test
(bad)
sub
les
cld
add
mov
cmp
stos
mov
mov
inc
popf
push
xor
aam
pop
xor
lds
push
movs
pop
or
icebp
add
out
movs
and
sbb
pop
and
popf
jo
repz
push
movs
test
shl
pop
jae
or
cs
mov
icebp
ins
ins
loopne
cmp
leave
add
mov
loope
jecxz
(bad)
mov
leave
or
cmps
idiv
in
outs
mov
jno
jmp
js
in
pop
or
data16
pop
jle
shl
inc
mov
lahf
inc
cmps
jp
enter
rcl
idiv
jmp
in
test
arpl
div
mov
outs
retf
mov
xchg
sub
mov
sti
and
xor
inc
dec
push
xor
dec
cmps
daa
and
mov
push
or
dec
out
cwde
xor
aas
push
jl
inc
in
push
mov
pop
dec
imul
sub
ja
cmp
sbb
jge
mov
pop
bound
inc
or
test
push
(bad)
jl
add
mov
mov
jnp
js
push
jp
(bad)
xlat
fwait
add
int
jb
adc
and
pushf
sbb
mov
aam
test
add
mov
add
dec
retf
adc
(bad)
ins
in
ss
fneni(8087
xchg
sub
pop
jl
cmps
jle
mov
lods
push
iret
scas
fmul
or
fsubr
ins
add
ds
ins
ins
stos
jb
mov
xchg
push
mov
pop
xchg
hlt
test
add
repz
sbb
mov
ds
inc
sti
aam
pushf
pop
ficom
xchg
xor
lds
xor
stos
dec
mov
and
leave
fwait
pop
hlt
mov
aas
dec
shr
jp
mov
repnz
and
inc
repnz
ins
sub
rcl
jbe
dec
cmp
xor
push
(bad)
push
jp
jmp
xor
int3
in
mov
mov
jae
dec
xor
out
xchg
mov
addr16
js
lahf
mov
pop
xchg
cmps
shl
pop
ds
sub
imul
jge
lds
cmp
xchg
test
in
or
jb
and
(bad)
push
push
sub
dec
pusha
in
pusha
test
add
(bad)
sub
mov
push
cmps
cmc
pop
retf
xchg
test
hlt
jmp
pop
ror
jp
sub
or
cmps
inc
or
div
movs
jge
dec
cmc
test
scas
sti
xor
jnp
mov
xor
mov
hlt
cwde
mov
ins
mov
mov
sub
xor
inc
mov
pop
call
push
push
into
adc
push
dec
add
push
mov
les
sub
mov
push
rcl
add
push
hlt
jno
xchg
xchg
ror
push
jmp
mov
push
ja
and
pop
cmp
jle
push
ins
(bad)
lods
push
pop
lods
inc
add
fstp
out
xor
fdivrp
fst
mov
pop
jbe
dec
mov
inc
in
sahf
ret
jle
and
adc
pop
sub
sub
das
(bad)
popf
add
test
sbb
lahf
ja
xchg
adc
mov
das
push
shl
push
pop
add
mov
push
adc
addr16
jae
push
cdq
(bad)
jmp
js
mov
lahf
adc
push
test
nop
dec
pop
arpl
or
test
in
sub
pop
push
inc
repz
pop
sbb
dec
xor
rcl
stos
mov
sub
lahf
or
add
dec
mov
imul
and
mov
repz
pushf
push
mov
mov
xchg
dec
inc
lock
aad
push
ins
ror
in
and
pushf
add
mov
cli
ret
mov
fild
xchg
cdq
xor
movs
push
daa
cmp
cmp
loopne
imul
hlt
pop
int3
push
jecxz
pop
adc
stos
in
ds
test
pop
(bad)
arpl
rcr
push
mov
sar
push
bound
clc
jns
adc
sub
adc
arpl
push
jbe
add
sub
and
xlat
cli
sbb
xchg
jg
ss
mov
mov
adc
repz
xor
(bad)
push
sbb
into
mov
adc
lea
and
adc
mov
icebp
call
cmps
sub
jne
lea
out
cs
adc
scas
cmc
sbb
xor
outs
cmps
out
shr
cmp
shl
or
xor
fcomp
xor
push
mov
lahf
clc
daa
iret
xchg
push
adc
in
mov
fdivrp
pop
(bad)
jae
or
xchg
(bad)
dec
nop
pop
int
int3
test
movs
xchg
lahf
adc
mov
pusha
imul
sub
add
lods
add
les
and
push
pusha
shl
fisttp
jl
inc
aam
jnp
in
dec
xchg
jecxz
push
sbb
out
test
pop
ror
bound
jl
out
ins
outs
sbb
sti
stos
cmc
cmp
loop
ins
imul
loop
test
test
mov
mov
pop
movs
xchg
cs
or
push
lds
ret
pop
adc
push
jbe
add
fidivr
dec
cwde
jno
cmp
pop
outs
jno
pop
or
jns
cmp
in
enter
shr
aam
rol
and
fild
neg
loop
mov
xchg
add
push
push
push
in
aad
add
retf
cs
mov
fxch
mov
psubd
(bad)
mov
pop
add
idiv
or
cmp
outs
fs
or
mov
mov
mov
cmp
(bad)
in
cmovs
sub
ds
fxch
loopne
or
jnp
mov
sbb
and
mov
adc
sub
jl
ret
jmp
rcl
lahf
aam
xchg
pop
iret
jae
inc
out
or
or
stos
jg
xor
jmp
sub
out
test
jnp
add
out
mov
(bad)
sahf
popf
mov
in
sub
dec
jecxz
cmps
out
push
inc
mov
out
ret
pop
bound
leave
push
or
and
sbb
inc
dec
mov
and
sub
loope
imul
test
inc
enter
jmp
(bad)
stos
mov
ja
mov
mov
pop
lods
clc
sub
mov
dec
mov
sbb
inc
cli
div
jno
push
lods
cmp
or
xor
icebp
or
cmps
enter
addr16
popf
dec
sbb
movs
pushf
pop
lods
or
(bad)
mov
ret
mov
or
push
jne
jb
mov
jge
int
nop
rol
pmaxub
stos
inc
cli
jnp
add
push
sub
xor
bound
push
repz
jno
sub
icebp
jmp
cmp
mov
cmp
lods
(bad)
popf
icebp
popa
and
icebp
push
mov
mov
push
inc
jp
mov
push
xchg
out
ds
in
in
mov
cdq
dec
hlt
dec
xchg
adc
enter
fistp
push
retf
fwait
push
jecxz
push
imul
dec
les
leave
(bad)
outs
cmp
mov
pop
mov
dec
daa
inc
adc
outs
sti
les
test
test
cs
aam
xchg
jns
retf
fisubr
repnz
adc
mov
mov
dec
push
add
push
daa
iret
mov
or
data16
xchg
pop
ss
xchg
xchg
mov
shl
fst
mov
and
(bad)
sub
cmp
aaa
mov
in
mov
xor
cmp
push
push
cmp
int
dec
sub
push
popf
or
pop
aaa
les
(bad)
das
push
loope
aam
pop
xchg
inc
nop
xchg
dec
call
xchg
imul
push
jae
sbb
mov
jae
test
outs
enter
xchg
pushf
shl
mov
push
leave
dec
add
mov
or
xor
fwait
call
adc
mov
vpcmpeqb
fbstp
(bad)
(bad)
pusha
mov
sub
jne
mov
daa
inc
sbb
or
repz
in
or
out
inc
mov
dec
cmp
in
push
jmp
pop
sti
(bad)
std
test
and
mov
stos
shl
out
sbb
push
cmps
sbb
cmp
cmp
ss
sub
xchg
inc
cmp
and
adc
mov
cwde
in
hlt
xchg
mov
stc
push
call
fnsave
mov
push
fimul
xchg
js
out
cmp
popf
pop
lods
mov
(bad)
test
inc
or
out
jle
shl
xchg
xchg
mov
sub
xchg
les
int
stc
mov
and
mov
das
cdq
jle
ja
in
mov
test
test
in
in
sbb
in
jne
test
call
cdq
rcr
sub
shl
iret
or
jp
sub
sar
lahf
cs
lods
cmp
jne
pop
dec
cmps
out
jnp
popf
(bad)
(bad)
(bad)
or
nop
rcl
pop
adc
lock
std
(bad)
int
(bad)
and
aad
jbe
jle
movs
outs
les
pop
je
loopne
cli
mov
call
sbb
faddp
jmp
js
push
mov
inc
dec
dec
cwde
ja
xchg
fcom
xchg
mul
xor
xchg
jae
push
and
mov
retf
xor
scas
cmp
mov
jae
ins
in
mov
lahf
xchg
outs
stos
mov
cwde
fdiv
out
ins
jne
jae
push
jmp
and
or
push
fldenvw
add
(bad)
out
or
mov
into
fsub
repnz
ins
mov
sbb
and
or
adc
push
addr16
push
xchg
in
mov
jp
(bad)
ror
popf
or
adc
adc
in
loopne
hlt
cmps
outs
aaa
inc
cmps
cmc
pop
loopne
lods
mov
push
mov
movs
(bad)
mov
lock
xlat
arpl
xchg
and
pop
inc
xchg
mov
inc
adc
je
cwde
mov
movs
daa
push
and
or
pop
mov
jns
jns
jecxz
out
imul
mov
sub
jl
mov
add
and
nop
int
xchg
test
inc
ins
cmps
jmp
popf
cmps
xor
lahf
jmp
add
push
push
mov
adc
jne
jb
inc
adc
xor
out
pop
or
or
xor
pop
outs
call
xchg
out
sub
or
test
clc
jae
rcl
push
outs
das
xor
push
adc
in
fiadd
sbb
nop
pop
xor
xor
lea
and
leave
mov
jp
mov
sub
loope
xlat
mov
in
ins
out
enter
mov
into
data16
sahf
pop
fld
fisttp
test
pop
movs
pop
add
shl
xchg
int
les
xchg
push
imul
arpl
cmp
shr
outs
mov
jl
jge
int3
mov
iret
sub
in
push
ds
ror
pushf
(bad)
sbb
call
rol
sbb
pop
add
shr
push
inc
xchg
dec
inc
aad
sbb
stc
lahf
dec
jecxz
xor
cmp
stc
mov
daa
std
ror
mov
(bad)
mov
xchg
xchg
test
xor
xchg
ror
sbb
sub
dec
outs
xor
and
or
cdq
lods
leave
cmp
popf
and
push
popf
push
test
fucom
or
inc
fist
sbb
cmp
pop
ficom
fwait
call
sub
test
adc
or
movs
jns
or
jecxz
jecxz
or
or
xchg
bound
xchg
sub
addr16
icebp
pop
adc
rol
inc
aad
jae
add
xor
jp
sbb
xchg
pusha
and
cmps
or
test
loop
mov
jecxz
push
xchg
daa
out
add
inc
in
xchg
lock
cli
adc
sbb
or
scas
jl
outs
jne
add
mov
mov
adc
add
cmp
aaa
and
mov
imul
xor
jnp
ret
pop
test
es
hlt
or
call
js
jmp
hlt
mov
lock
sti
shr
and
mov
and
cmp
call
and
xor
cwde
(bad)
(bad)
loop
outs
mov
std
add
iret
fsub
dec
out
jb
jne
jno
ficom
and
inc
and
ins
mov
aaa
adc
bound
add
mov
sub
add
pop
xchg
or
sbb
movs
out
pop
xchg
and
push
lds
and
jp
xchg
mov
adc
call
not
retf
scas
neg
dec
mov
cmps
loope
push
retf
(bad)
xchg
fbstp
sub
out
dec
lahf
mov
inc
out
jp
cmp
sbb
addr16
outs
inc
xor
loope
pop
inc
adc
fnstenv
fdivr
cmp
in
stc
jmp
call
dec
and
dec
jbe
sbb
mov
lods
js
arpl
mov
inc
dec
scas
mov
clc
rol
in
fs
enter
fimul
sbb
and
sbb
stos
aam
pop
dec
sub
ret
cmc
push
jno
loop
and
dec
pop
cmc
pop
push
sar
push
xchg
push
addr16
and
inc
aaa
std
leave
sub
aad
mov
stos
mov
(bad)
ret
inc
push
ficomp
test
ins
popf
dec
pushf
cmp
or
xchg
gs
sbb
jmp
pop
int
push
ins
mov
xor
ror
jmp
jno
out
cmp
sbb
je
outs
inc
sar
lds
mov
fsubr
leave
out
mov
jl
xor
mov
cmps
add
xor
cdq
jg
mov
addr16
jl
in
jg
loop
dec
arpl
pop
dec
mov
mov
jg
dec
ja
xor
pop
push
gs
mov
xchg
iret
pop
mov
test
dec
scas
push
xor
pop
push
push
in
cli
xchg
sbb
lea
fdivr
ss
in
test
ficomp
jl
mov
inc
jo
(bad)
int3
bound
jae
push
inc
out
sub
(bad)
push
push
xchg
in
push
pop
(bad)
sbb
or
add
into
pop
or
call
mov
dec
dec
add
jmp
retf
cmp
jae
popa
fwait
add
dec
mov
outs
xlat
mov
jecxz
xor
(bad)
push
push
ins
scas
mov
repnz
mov
test
xchg
mov
dec
sub
nop
call
popf
les
repnz
xchg
pop
ret
and
jg
push
ins
(bad)
out
lea
push
jb
lods
mov
or
(bad)
fcmovu
sbb
cmps
and
ret
dec
cmc
nop
adc
mov
add
mov
add
xor
pop
ins
sub
inc
jne
mov
lea
or
fsub
add
(bad)
cmp
loop
out
inc
sar
cmp
jl
int
fstp
lea
das
(bad)
xor
lods
div
fmul
call
pop
adc
jp
pop
mov
dec
jmp
dec
sbb
xchg
inc
sti
xor
sub
xor
mov
xlat
push
pop
stos
or
sbb
push
jp
mov
jb
imul
mov
mov
enter
cmps
scas
push
push
movs
mov
pop
ja
push
int
(bad)
cmp
jmp
out
add
or
out
dec
jo
cmps
pop
mov
(bad)
push
jg
jmp
movs
xchg
and
inc
jge
into
loopne
xchg
jne
mov
pop
mov
movs
pop
(bad)
xor
lods
pop
push
rcr
mov
movs
cs
dec
fidiv
dec
add
nop
sar
pop
dec
enter
and
mov
xchg
mov
mov
pop
add
jecxz
cmps
ins
push
les
xor
out
icebp
mov
scas
push
xchg
dec
cmps
push
cld
mov
xlat
or
cmp
mov
jl
add
mov
dec
scas
pop
sar
mov
(bad)
fadd
popf
movs
push
dec
jne
movs
xor
jnp
in
inc
add
xchg
mov
and
jmp
mov
inc
sub
(bad)
ja
add
mov
push
movs
xor
aam
retf
repz
iret
fsubr
jne
ins
mov
xchg
adc
dec
xor
push
sbb
or
pop
and
(bad)
xchg
jle
dec
nop
fadd
test
inc
jae
push
(bad)
aam
test
sub
es
ret
sbb
add
mov
pop
push
stos
ja
repz
mov
or
jmp
and
stos
sbb
in
movs
push
and
out
jg
cmp
movs
sbb
xor
and
sbb
inc
or
rcl
loop
test
mov
cmc
sub
popa
scas
add
and
xchg
in
lds
pop
sub
fimul
in
cmp
cmps
popa
pop
dec
xchg
push
and
mov
dec
cmp
data16
mov
iret
(bad)
xchg
ret
outs
push
or
or
lds
pusha
cmps
test
jns
in
mov
cwde
add
adc
shl
mov
jle
add
mov
xchg
fwait
jp
iret
xor
mov
jae
mov
pop
loop
sbb
cmp
outs
ja
and
popa
dec
gs
adc
fcmovnbe
mov
movs
mov
(bad)
jo
pop
lods
xlat
in
in
frstpm(287
pop
push
sbb
imul
mov
sub
sar
daa
cs
sti
sub
push
fnstenv
imul
bound
jl
scas
dec
push
sbb
(bad)
int
(bad)
push
xchg
push
imul
jle
das
out
add
in
pop
ffreep
xlat
mov
out
cmp
xor
dec
repnz
dec
mov
mov
push
cmp
add
dec
cli
(bad)
outs
lods
push
data16
inc
movsx
dec
mov
popf
adc
and
out
jp
mov
call
(bad)
adc
mov
(bad)
loope
jmp
test
sub
fs
xchg
clc
(bad)
js
push
and
ins
fisttp
and
or
push
inc
fdiv
cmps
loopne
push
lods
out
cmc
mov
adc
stos
adc
cmp
mov
fstp
adc
cld
scas
sub
dec
adc
or
mov
sub
aas
enter
cmp
mov
cmp
ins
dec
push
dec
stos
mov
or
lods
fwait
ja
in
out
inc
push
sbb
scas
cwde
lods
das
lahf
idiv
or
ja
sbb
mov
mov
xor
enter
sbb
stos
movs
pop
popf
lahf
ja
add
inc
shl
mov
add
dec
mov
add
mul
push
nop
int
xchg
xor
mov
in
(bad)
cld
test
repnz
cdq
add
das
jns
add
pop
jno
fstp
jp
and
call
push
into
out
mul
and
xor
scas
dec
and
dec
sbb
mov
popa
mov
sbb
xchg
lahf
sbb
xchg
arpl
inc
jg
out
movs
sbb
rcl
cdq
xor
xor
imul
out
jl
push
outs
xlat
aas
jnp
cmp
(bad)
(bad)
loopne
ret
ja
gs
xchg
out
stos
mov
imul
(bad)
pop
lea
jle
adc
mov
cmp
in
je
xor
leave
and
mov
sbb
jmp
push
xchg
inc
push
jae
rep
enter
pop
jmp
cmps
or
push
pushf
inc
int
loope
jb
dec
loop
push
ins
sub
imul
out
in
adc
test
xchg
sub
sub
sti
sub
mov
jb
ss
fwait
jns
adc
aaa
movs
push
outs
adc
pop
dec
push
rol
sub
jmp
div
add
and
cs
mov
stos
enter
in
dec
xchg
sub
ret
inc
bound
out
mov
retf
mov
push
aam
shl
movs
cmc
imul
xor
mov
xchg
adc
div
sub
jno
mov
pop
cmp
xchg
dec
jb
pop
cld
rcr
and
jnp
mov
cmps
push
jae
mov
mov
cmp
cmps
loopne
out
popa
jnp
inc
pop
pop
sub
pop
and
push
addr16
inc
cdq
mov
loope
xor
mov
jg
imul
pop
mov
xchg
xchg
sub
mov
test
ret
ret
(bad)
push
repz
sub
cmp
mov
stc
mov
xor
pop
add
inc
sbb
push
add
and
inc
ins
test
push
jmp
jl
jp
sub
shl
adc
jmp
ss
dec
out
inc
mov
and
mov
lea
clc
push
neg
push
ja
mov
gs
ficomp
add
mov
bound
adc
mov
pusha
add
mov
popf
push
mov
pusha
sub
mov
pop
leave
push
cmp
cmp
mov
xor
mov
dec
dec
push
xor
pop
and
shr
xchg
jo
nop
or
fsubr
popa
mov
scas
loopne
mov
pusha
mov
add
push
pushf
jp
clc
out
das
jne
lods
jns
mov
push
aad
inc
push
ja
jns
jp
dec
inc
stc
repz
xchg
popa
lock
mov
aad
cmp
jno
loop
out
imul
jmp
push
jno
out
les
push
adc
cmc
or
out
lods
inc
scas
dec
xor
loopne
cld
mov
mov
scas
mov
shr
sbb
ret
(bad)
pushf
outs
call
shl
call
das
inc
movs
mov
clc
xchg
fild
jmp
ja
jl
inc
jmp
gs
arpl
xchg
jmp
icebp
std
arpl
jnp
mov
inc
and
in
sbb
pop
outs
push
or
scas
cmp
mov
pusha
cli
das
fist
loop
popf
rcl
sub
mov
adc
leave
dec
call
or
aad
push
mov
xor
test
pop
push
cs
cld
test
loopne
mov
shl
adc
dec
mov
or
outs
rol
or
pop
sahf
sbb
sar
sti
loop
cld
inc
xor
xor
adc
xchg
mov
and
fldcw
and
sbb
dec
pusha
mov
cmps
mov
inc
rcr
ins
das
push
retf
ja
push
stos
in
mov
fdiv
cmp
in
sbb
inc
repz
mov
mov
lods
loope
mov
sub
call
int
jnp
loopne
dec
sub
clc
js
pop
sar
inc
pusha
fwait
clc
xor
dec
das
add
add
xchg
cmp
sub
push
je
mov
sbb
scas
dec
in
inc
(bad)
(bad)
into
xor
in
mov
mov
fld
cwde
fcom
stc
dec
push
mov
outs
inc
push
aas
jnp
aam
aaa
stos
in
mov
test
cmp
cmp
xchg
xor
mov
inc
cmc
imul
fwait
add
shl
repz
rep
inc
shl
xchg
adc
outs
xlat
mov
mov
cmps
cmp
lea
or
mov
es
jmp
movs
dec
mov
das
stos
or
dec
test
and
clc
test
ret
lods
sbb
jp
jle
imul
pop
int3
xor
gs
mov
add
mov
gs
popf
jmp
mov
push
popf
xchg
ret
les
mov
fdiv
push
mov
mov
hlt
(bad)
cmp
call
aas
push
fstp
repz
jnp
mov
inc
leave
repnz
add
out
mov
mov
xor
outs
cmp
fdivr
dec
stos
mov
jb
pop
rol
into
dec
and
mov
sub
mov
jmp
popa
out
fidiv
out
clc
ja
fldcw
out
pop
test
in
add
jle
push
shr
sti
sbb
sub
test
imul
add
(bad)
or
push
sbb
push
pop
jbe
mov
dec
xor
add
cmp
ret
pop
js
ins
adc
outs
mov
cmp
xchg
std
call
mov
mov
and
data16
and
pushf
fist
dec
(bad)
bnd
push
and
fldl2t
cmc
jp
ds
adc
sub
(bad)
sbb
jnp
dec
dec
adc
jmp
fdivr
dec
fbstp
add
and
cmp
enter
test
fcom
mov
xchg
out
jns
outs
ss
(bad)
out
xor
mov
or
nop
adc
xchg
adc
jbe
fnstenv
ins
ins
fisubr
ret
or
cli
cmp
dec
xor
retf
xchg
fcomp
in
pop
mov
inc
sbb
mov
pop
in
arpl
or
js
stc
retf
adc
xchg
add
jg
push
adc
fisubr
sub
pop
(bad)
loope
pop
adc
mov
mov
inc
sbb
scas
lds
sahf
inc
xchg
movs
mov
mov
cmp
in
jae
aad
ror
push
lahf
sub
outs
into
leave
dec
int
sub
popf
es
shl
das
and
add
fwait
sbb
arpl
mov
dec
inc
cmps
push
xlat
sub
adc
mov
data16
inc
pop
pop
adc
sbb
hlt
(bad)
shr
fistp
fsub
xchg
xrelease
(bad)
inc
xor
mov
dec
cmp
fcom
jnp
lock
cs
push
adc
test
jb
inc
jo
xchg
pop
int
xchg
dec
pop
mov
test
lds
retf
mov
jmp
(bad)
cli
mov
(bad)
loopne
out
xchg
(bad)
cmc
data16
mov
out
or
mov
sub
jmp
cld
sub
std
sahf
outs
cld
mov
push
dec
inc
(bad)
cs
mov
mov
lods
inc
mov
data16
shl
ror
adc
xor
inc
repz
int
pop
pop
mov
sub
ret
lods
div
clc
xor
sbb
xor
fisttp
jl
out
scas
into
push
sbb
add
jmp
pop
jae
jle
and
ret
cmp
arpl
cmp
xor
rol
and
pop
and
ja
stos
pushf
xchg
pop
cmp
mov
loope
inc
repnz
mov
icebp
jns
rol
outs
pop
mov
adc
dec
jecxz
inc
push
push
sahf
data16
cmp
sub
cmc
shl
fs
lea
(bad)
leave
cwde
outs
pop
aaa
and
(bad)
cmp
xchg
mov
mov
pop
xlat
xlat
jge
mov
repnz
lods
(bad)
lds
add
stos
(bad)
stc
dec
dec
outs
fldenv
loopne
dec
icebp
cwde
add
jl
clc
test
mov
push
dec
jle
sahf
mov
outs
paddb
fstp
pop
mov
pop
ret
lds
and
(bad)
loope
cmp
(bad)
push
jge
aaa
xor
pop
cmp
out
dec
push
sbb
neg
gs
div
lods
xlat
mov
outs
dec
mov
adc
clc
ins
sti
inc
mov
add
sbb
stc
(bad)
out
mov
mov
cmp
cmp
scas
scas
test
mov
pop
enter
out
cmp
addr16
int
jmp
add
sbb
xchg
push
add
cdq
inc
fwait
xchg
scas
or
or
pop
ins
xchg
jmp
mov
adc
scas
sub
sbb
lahf
loopne
sub
cmp
dec
jle
in
shr
stos
fsubp
movs
out
inc
in
fucomp
mov
inc
push
cmps
das
pop
cdq
fs
sbb
sub
mov
clc
jg
cmps
mov
adc
sbb
pop
mov
xchg
(bad)
mov
test
pushf
push
xlat
inc
inc
scas
and
lods
xlat
inc
js
rcl
xchg
push
cmps
enter
xor
test
(bad)
repz
retf
sub
add
clc
clc
mov
xor
jl
(bad)
(bad)
xchg
pop
sbb
mov
(bad)
xchg
lea
aad
je
inc
and
push
jmp
pop
(bad)
in
mov
mul
lods
push
scas
mov
push
(bad)
nop
stos
jno
and
and
dec
adc
add
aam
mov
rol
pop
test
mov
dec
out
outs
pop
jmp
push
mov
pop
outs
mov
cli
shr
xchg
add
or
adc
sbb
xchg
jmp
dec
imul
cmp
cmp
xchg
dec
jge
xor
test
int3
push
scas
leave
imul
cdq
lods
jne
pop
icebp
xchg
cmps
addr16
mov
sub
imul
inc
dec
stos
jb
xor
sub
xchg
nop
aam
(bad)
or
push
push
int
gs
inc
xchg
and
call
sbb
xor
fmul
fsub
sub
pop
push
faddp
xchg
xchg
ins
call
bound
push
inc
pop
inc
inc
mov
adc
sbb
sub
movs
retf
inc
(bad)
and
gs
ldmxcsr
and
push
mov
xor
leave
add
and
loope
stos
dec
push
sahf
fs
pop
mov
in
vpmadcsswd
add
push
add
sbb
ins
mov
dec
shl
pusha
ins
fild
inc
(bad)
dec
mov
(bad)
jo
jmp
xor
xchg
mov
pop
and
xor
xchg
ret
mov
add
sub
push
jae
adc
inc
push
dec
cmps
mov
mov
pop
fidivr
aad
add
(bad)
and
sub
xchg
mov
inc
das
not
sbb
push
ret
stos
jo
mov
mov
enter
shl
scas
sub
imul
cmp
popa
aam
imul
imul
ins
in
pop
push
retf
inc
rol
and
enter
xor
mov
fidiv
dec
push
adc
or
aam
dec
mov
adc
gs
xor
cmps
sub
arpl
dec
scas
aaa
pop
retf
xor
fstp
push
in
xor
pop
js
lds
pop
sar
sbb
addps
loope
adc
and
pop
xchg
mov
xor
frstor
dec
ret
mov
xor
push
lock
sbb
xor
pop
iret
imul
mov
mov
mov
popf
pushf
and
add
jp
sub
dec
adc
add
lds
iret
add
or
out
test
and
and
es
mov
pop
and
push
icebp
push
les
jns
sub
(bad)
hlt
sub
xchg
iret
push
rcr
and
mov
mov
jmp
inc
call
mov
inc
in
addr16
adc
fs
aaa
dec
xchg
cmps
fs
lods
dec
out
push
add
fild
xor
ret
and
xor
pop
ficomp
das
inc
rol
pop
loopne
push
ds
sub
cli
ins
sbb
and
inc
(bad)
mov
or
rol
cdq
in
shl
xchg
sahf
add
daa
pop
(bad)
push
sbb
sub
or
push
xchg
cld
daa
scas
pushf
xor
mov
mov
cwde
sub
jmp
mov
cld
mov
mov
cmp
and
and
int3
dec
repnz
sub
ficomp
jne
fisttp
and
data16
shl
sbb
dec
outs
mov
xor
mov
xchg
nop
or
test
ins
sub
test
mov
aam
loop
jg
aam
lods
arpl
sbb
inc
aas
push
cmc
or
and
imul
shl
movs
jl
retf
lahf
jae
mov
test
imul
xchg
sbb
add
and
out
arpl
call
clc
in
nop
rol
add
cs
xor
icebp
cmp
popa
pusha
inc
adc
push
fwait
fwait
mov
(bad)
push
std
pop
mov
rcl
loope
xchg
loope
cmp
mov
test
pushf
cmp
lahf
ror
push
add
(bad)
test
mov
test
jne
dec
je
int
ins
cmc
push
mov
movs
ror
fimul
push
push
out
out
out
test
sbb
test
jle
fldenv
scas
int
call
fbstp
xchg
lds
add
xchg
lahf
repnz
mov
xor
mov
adc
jns
aas
sti
mov
mov
push
xchg
or
mov
jmp
cmp
pop
push
sub
nop
js
xchg
enter
int
arpl
mov
or
mov
lahf
nop
mov
jmp
fist
bnd
scas
aam
xchg
popf
call
enter
fcmovb
sub
movs
add
or
push
or
mov
fstp
xchg
pop
dec
ja
or
js
and
xor
mov
ret
into
mov
jo
jmp
fs
fadd
ds
sar
leave
jb
sub
mov
out
in
mov
retf
cmp
cwde
loope
enter
movs
pop
inc
mov
fbstp
movs
mov
sub
mov
test
cs
pop
imul
aad
xchg
push
xchg
ficom
lock
aas
xchg
iret
ss
sub
mov
sar
fwait
mov
mov
and
out
cmp
xor
into
mov
sub
dec
and
pop
cli
fwait
idiv
sbb
lods
cmps
(bad)
nop
xchg
mov
cmp
adc
popa
pop
jge
xor
xor
jmp
arpl
call
or
stos
icebp
pusha
mov
pop
add
(bad)
cmps
pop
jnp
(bad)
pop
je
mov
cmp
pop
jmp
sub
pop
jmp
inc
pop
cld
out
cwde
xlat
rcl
psrlq
mov
or
dec
xlat
jns
mov
popa
fsub
jmp
div
aad
jae
mov
test
or
inc
pop
mov
out
pop
in
inc
xchg
(bad)
arpl
sar
dec
xchg
lods
mov
int3
xor
mov
repz
jp
pop
mov
fnstsw
sbb
cmp
mov
sti
dec
push
stc
les
(bad)
xchg
or
dec
push
pushf
cmp
dec
add
mov
dec
neg
jbe
mov
loopne
mov
(bad)
test
sbb
add
or
mov
sahf
fs
push
lods
mov
and
jno
mov
xchg
je
jmp
call
das
adc
cdq
xchg
dec
push
add
push
std
or
or
push
mov
fsub
push
mov
add
mov
stos
retf
xchg
enter
(bad)
out
sub
ror
cmps
test
cmp
lods
or
clc
jmp
xchg
push
sub
push
ror
push
jae
out
ret
outs
mov
pushf
std
cmp
xchg
and
push
stos
mov
jp
mov
and
jg
ror
loop
jmp
xchg
sub
push
push
push
icebp
pop
xchg
repnz
pop
cmps
pop
mov
cld
jno
xor
xor
push
cmp
cmps
jecxz
test
pop
jmp
mov
dec
mov
add
add
jl
add
cli
das
ja
jb
or
mov
addr16
enter
pavgb
int
lds
fisttp
sbb
std
cmps
pop
pusha
xor
xchg
adc
mov
cmp
push
imul
les
ins
aas
loope
adc
into
adc
adc
sar
xor
test
sar
mov
cmp
in
push
clc
pop
stc
mov
pop
xchg
mov
dec
mov
xchg
xor
mov
out
sub
dec
dec
mov
in
imul
fdiv
rol
pop
imul
push
leave
into
cdq
inc
inc
rcl
into
jae
add
sub
js
push
mov
and
push
in
inc
and
push
cmp
jae
xlat
cmp
adc
fprem
or
dec
stc
inc
fldln2
push
or
sbb
aad
mov
ja
or
retf
out
inc
ret
jns
pop
cmps
out
add
lahf
cs
add
aam
cmp
(bad)
(bad)
in
inc
fs
xchg
jmp
adc
cmp
lea
pusha
inc
dec
popa
or
xchg
sbb
jmp
loop
push
imul
dec
xor
dec
sub
aam
jnp
add
clc
cmp
and
es
pop
jb
dec
clc
or
movs
ins
outs
(bad)
xchg
cmp
jp
call
add
js
bswap
pop
push
rol
dec
mov
inc
xchg
mov
(bad)
jnp
mov
mov
loopne
inc
cmp
ret
push
int3
aam
add
mov
call
test
ds
call
fcomp
sbb
pop
jmp
push
in
popa
xor
aad
push
dec
jne
ret
out
and
fild
cmp
add
(bad)
test
sbb
shr
call
jg
push
pushf
stos
dec
rol
pop
xchg
in
sbb
mov
add
ins
lods
or
movs
repz
stos
mov
imul
retf
pop
push
cmp
call
arpl
lds
sub
jmp
pop
and
retf
mov
mov
push
gs
inc
repnz
das
and
jle
enter
in
jle
test
je
fwait
cwde
xchg
mov
(bad)
adc
lock
mov
inc
je
popf
scas
out
cmc
push
clc
sub
sbb
mov
cmp
jecxz
sahf
sbb
ins
and
dec
nop
fmul
jg
add
int
xchg
cmps
jg
adc
sub
(bad)
lods
pop
mov
or
(bad)
addr16
ins
add
and
inc
in
js
clc
xlat
xor
loopne
mov
add
loop
push
mov
pop
test
retf
sub
jnp
sbb
dec
nop
fimul
ret
dec
sub
adc
add
ss
mov
dec
fwait
push
imul
cmp
(bad)
xchg
fwait
int3
(bad)
cmp
inc
mov
xchg
into
stc
movs
xor
add
sar
fmul
xor
adc
pop
push
sbb
rcl
fwait
and
mov
mov
ror
lods
pushf
jae
hlt
inc
shr
repnz
jp
imul
add
push
mov
repz
cmp
push
ror
and
mov
sub
push
jmp
popa
or
jecxz
adc
push
push
(bad)
vfmsubadd231pd
movs
push
inc
push
sti
sub
fwait
not
xor
cmc
imul
jnp
pop
loope
jae
cmp
xchg
stos
mov
pop
and
jge
push
mov
push
xchg
dec
cmovl
jp
add
xor
aad
arpl
push
jle
mov
out
xor
repnz
cmp
adc
movs
nop
sub
es
sub
sub
ficomp
jle
lds
das
mov
inc
cmp
jp
in
fcom
test
mov
rcr
lock
dec
ror
mov
add
ja
xchg
push
out
jecxz
outs
mov
jnp
ds
pop
(bad)
call
aad
je
lahf
(bad)
cli
cmp
(bad)
xor
cmp
sub
outs
movs
in
loope
lahf
dec
(bad)
ds
cdq
mul
push
int3
push
jnp
ficom
js
out
stc
mov
(bad)
adc
popf
dec
jl
pop
push
push
xchg
add
cmp
jle
dec
sti
mov
int
out
xor
jb
clc
inc
dec
mov
arpl
jnp
jbe
sbb
inc
mov
jb
outs
jmp
imul
aam
outs
fs
mov
out
dec
fist
mov
mov
and
or
jmp
xchg
dec
mov
sbb
xor
les
xchg
lods
xchg
dec
mov
push
and
mov
aaa
add
cld
mov
aas
outs
bound
or
mov
scas
mov
mov
xor
inc
jne
nop
jbe
out
das
inc
(bad)
imul
(bad)
adc
cmps
rcr
or
shr
lods
and
test
retf
sbb
sbb
sub
loope
neg
int3
pop
mov
mov
push
sub
or
push
jae
pop
aaa
mov
stos
or
add
ret
out
aam
jge
add
aaa
aad
outs
sti
in
dec
xor
ja
sti
and
les
mov
stos
mov
push
mov
xchg
xlat
sub
pop
push
adc
adc
xchg
xor
arpl
push
jmp
cmp
jp
fnstenv
fisubr
jne
loopne
sbb
(bad)
fsubp
clc
ins
cld
call
aad
jne
inc
popa
jle
fnsave
ds
xchg
icebp
retf
push
mov
test
fsubp
stos
push
cmp
data16
adc
push
ins
dec
dec
popf
add
(bad)
cs
lods
ins
cmp
adc
pop
int3
mov
out
not
lds
mov
test
dec
sub
add
jge
stos
cmovl
add
cmp
xchg
sbb
rcr
fsubr
sbb
iret
mov
rcl
fldenv
push
setne
push
push
ds
imul
push
mov
shl
dec
and
push
pop
mov
pop
mov
int
(bad)
aas
jmp
xchg
push
cmp
sti
sbb
repz
ja
jg
jmp
mov
inc
jge
add
test
jp
das
repnz
imul
cmp
cmps
mov
push
retf
rol
pop
mov
xchg
push
rep
dec
(bad)
stos
cmp
cmps
icebp
pop
jmp
xor
je
retf
shl
and
adc
push
push
in
aad
xor
das
jle
and
jmp
ja
sbb
les
dec
shr
jmp
lea
ror
jb
jno
xchg
sub
sub
pop
or
std
mov
push
mov
frstpm(287
mov
sub
pop
(bad)
mov
(bad)
xchg
sahf
popf
adc
xlat
xor
add
and
lahf
in
inc
dec
jno
adc
aad
das
mov
dec
std
xchg
pop
test
mov
inc
inc
inc
inc
ret
mov
dec
xchg
js
sbb
inc
fdivr
loop
adc
pop
sub
in
aam
add
ss
nop
jno
aad
popf
test
jbe
push
xlat
sti
push
mov
xchg
sti
inc
cwde
xchg
xchg
inc
nop
stc
jo
sub
push
jne
mov
aaa
call
inc
mov
sti
xor
popf
sub
clc
shl
jmp
sti
xchg
std
in
les
and
loop
iret
ret
cmp
mov
adc
(bad)
outs
add
mov
push
ret
mov
mov
popf
ficom
and
and
mov
out
frndint
gs
imul
je
scas
fsub
or
into
cmps
call
(bad)
popf
push
push
jb
push
mov
cs
mov
adc
mov
imul
cld
xchg
movs
or
and
xchg
cwde
(bad)
iret
je
xor
shr
mov
aas
mov
scas
jno
std
fiadd
les
lahf
jle
and
add
inc
lea
cmp
aam
or
pop
adc
inc
aad
inc
ror
add
push
jl
xchg
add
popf
inc
xchg
sub
ret
cmp
xlat
int
daa
mov
cdq
fcomp
mov
rcr
inc
mov
jae
cmc
mov
scas
mov
sahf
inc
inc
sti
mov
in
lods
add
jb
adc
cmp
mov
loop
out
adc
es
stos
std
jnp
add
cmp
adc
mov
sbb
iret
frstor
js
fist
out
ret
ja
inc
xor
pop
mov
inc
cmc
call
fstp
mov
xor
std
pop
inc
push
xchg
xor
pop
jge
mov
cmc
adc
sub
push
cmps
xchg
ror
test
fs
xchg
jl
(bad)
hlt
jae
jmp
sub
aas
jge
popa
jae
dec
cdq
les
cwde
lock
sbb
push
jge
adc
jo
stc
(bad)
sti
pop
fwait
xor
push
jmp
loopne
ret
cwde
clc
jo
push
jge
jle
sqrtps
push
cs
call
cmp
test
inc
push
enter
int3
stos
into
movs
in
cwde
sbb
inc
mov
adc
pushf
pop
test
jle
xchg
jg
pop
mov
jo
outs
jle
call
dec
inc
sub
stos
mov
push
not
jmp
and
repz
in
jle
dec
(bad)
push
aad
out
cs
scas
not
stc
pop
or
mov
mov
test
lods
mov
(bad)
dec
ja
enter
ins
adc
fidiv
(bad)
jae
jbe
out
std
hlt
mov
out
push
mov
jp
(bad)
mov
popf
fwait
cmp
in
add
pushw
add
inc
sahf
sbb
scas
jb
loopne
ret
jmp
cmp
movs
nop
dec
(bad)
iret
aaa
call
sbb
popf
dec
mov
jmp
(bad)
iret
adc
mov
lods
imul
test
mov
lods
xor
repnz
adc
pop
(bad)
int3
push
inc
ret
xchg
outs
fist
inc
xchg
sbb
test
cli
dec
jmp
or
xor
call
fmulp
in
push
mov
push
shl
mov
sbb
cmp
cmp
popa
cmp
inc
fldz
push
fmul
mov
mov
push
sahf
loop
mov
lock
sub
mov
inc
mov
cs
pop
(bad)
fild
dec
xor
dec
or
mov
push
cmps
xchg
lods
rol
std
adc
xchg
or
aam
adc
aas
enter
popf
adc
dec
add
pop
fs
es
ins
loopne
sbb
mov
pop
cdq
add
stos
in
or
xchg
je
or
xlat
rcl
test
push
mov
add
outs
xchg
mov
push
(bad)
xor
xchg
sbb
mov
mov
(bad)
fisttp
daa
sbb
and
add
shl
jg
mov
ins
stos
xor
lods
fs
std
sub
arpl
fadd
(bad)
cmp
adc
pop
push
sbb
and
retf
xchg
mov
sub
cdq
iret
push
dec
test
jle
adc
push
or
and
nop
aas
js
lahf
mov
cmps
pop
mov
adc
push
adc
mov
out
mov
iret
repnz
sbb
into
dec
stos
cdq
mov
bswap
sub
mov
ss
mov
or
fld
and
sbb
xor
std
nop
fcom
fisub
mov
xchg
pop
xor
inc
adc
mov
mov
xchg
mov
jbe
(bad)
mov
xor
xchg
leave
das
aaa
in
cmp
imul
xor
xor
sbb
jnp
scas
dec
sub
in
into
inc
sahf
nop
push
and
adc
dec
pop
sbb
pop
dec
jne
xor
bts
retf
or
out
push
add
leave
jo
dec
test
je
cmp
aaa
inc
nop
sar
adc
rol
popa
push
and
cld
sbb
jnp
push
pop
and
xlat
out
in
pop
addr16
div
mov
shl
push
cmp
aad
and
lds
cwde
and
jno
cmc
das
cmps
je
loope
(bad)
fist
sub
or
retf
ret
jae
adc
arpl
xor
xor
xor
lea
clc
mov
pop
retf
and
adc
(bad)
push
ret
sbb
xor
fnsave
loope
in
cwde
xchg
jne
arpl
inc
js
das
repz
push
jle
fnstcw
call
push
cmp
pop
aaa
fwait
pop
dec
mov
mov
mov
inc
retf
pusha
adc
push
fldcw
std
pop
clc
scas
and
cmp
aaa
sub
mov
mov
shr
and
or
fwait
repnz
push
xor
jmp
cmp
ret
xchg
pop
dec
stos
dec
xor
ficom
pop
sahf
xor
adc
xor
xchg
clc
cmp
mov
sbb
cmps
xchg
inc
(bad)
clc
test
mov
mov
popf
jb
test
repnz
mov
pusha
(bad)
ficomp
xor
stc
lods
aaa
xchg
pusha
lods
daa
pop
mov
dec
mov
ds
xchg
cmps
aad
leave
and
int3
fs
push
cld
les
sub
mov
mov
div
xchg
xlat
mov
adc
push
mov
mov
daa
leave
xchg
sub
jno
pop
sub
pop
repnz
add
add
xor
pusha
sbb
or
push
mov
mov
leave
cmps
sar
jmp
or
into
mov
repnz
es
cdq
mov
lea
push
add
ins
jmp
out
pusha
rcr
loop
mov
ror
popf
popa
sbb
call
sbb
push
pop
xchg
mov
jb
retf
mov
xor
(bad)
xchg
movs
popf
test
movlhps
pop
cli
dec
or
loopne
sbb
mov
scas
cmp
mov
mov
aam
(bad)
retf
mov
in
fs
mov
dec
sbb
or
inc
jle
into
mov
movs
or
pop
xchg
repz
and
aas
mov
adc
daa
stos
stos
imul
push
push
cmps
jno
clc
jno
adc
add
dec
add
call
sbb
and
mov
pop
inc
sbb
repz
ror
les
xor
push
rep
mov
inc
es
pop
jae
out
ret
xchg
aad
cwde
add
mov
cmp
dec
xchg
push
stos
fisttp
lock
xor
xchg
or
mov
inc
test
adc
push
bound
cmp
inc
sbb
xlat
pop
inc
movs
sbb
mov
(bad)
test
jp
ja
std
cs
xchg
mov
ja
adc
or
dec
jns
nop
mov
xchg
lock
adc
xchg
sbb
push
test
mov
ins
jmp
iret
jmp
les
in
pop
and
sbb
popa
or
inc
adc
and
fsub
frstor
mov
xchg
or
push
dec
ret
cmp
push
imul
cli
or
and
enter
mov
shl
mov
adc
mov
jb
dec
jle
pop
push
push
jmp
push
adc
ins
stos
arpl
inc
bound
in
test
inc
cmp
addr16
mov
call
push
jo
arpl
das
xor
(bad)
aad
gs
fwait
sbb
cmc
scas
movs
xchg
mov
sub
and
inc
dec
inc
adc
xchg
mov
xchg
out
shl
outs
mov
out
(bad)
pop
jecxz
push
test
pusha
lock
stos
jmp
push
icebp
cmp
aas
addr16
cmp
dec
push
(bad)
sbb
lods
sbb
mov
mov
jp
bound
pop
adc
call
leave
mov
addr16
add
push
or
out
mov
es
cmp
push
jp
cld
jp
test
sub
or
in
es
aaa
bound
mov
cwde
fnsave
imul
add
ds
push
jo
inc
xor
cmovg
mov
gs
push
scas
retf
retf
sub
mov
adc
sti
retf
push
aaa
jo
adc
push
test
sub
jle
add
mov
pxor
stos
inc
lahf
mov
fidivr
adc
and
xor
add
(bad)
sahf
gs
xor
dec
cli
(bad)
xchg
mov
and
and
ds
clc
call
and
les
xchg
xchg
out
das
repnz
mov
pop
mov
pop
ss
lea
add
call
inc
add
(bad)
push
sti
popf
sbb
js
out
cmp
arpl
mov
mov
mov
cmp
mov
push
fcom
dec
pop
xor
push
jmp
push
fisttp
dec
mov
jl
mov
loope
mov
cmp
daa
pop
cmps
xor
mov
jle
ret
mov
dec
mov
aam
(bad)
arpl
mov
repz
std
retf
mov
dec
adc
dec
fldenv
dec
sub
fmul
shr
jbe
xchg
jne
sahf
fcom
fbld
xlat
push
inc
outs
sub
xchg
cmp
std
add
jmp
jo
xor
clc
in
cmc
call
iret
dec
mov
pop
pushf
in
loopne
shr
mov
lods
xor
sub
push
lds
mov
adc
inc
ja
cmps
out
sbb
add
push
pop
sti
mov
mov
mov
movs
push
sub
rcl
dec
stos
inc
scas
sub
adc
inc
imul
inc
les
dec
lea
je
lahf
or
mov
xchg
lahf
xchg
imul
dec
iret
mov
dec
scas
or
pusha
lods
xchg
xchg
into
add
inc
pop
popf
mov
cmp
inc
jmp
ss
(bad)
test
jmp
lea
lea
mov
cmp
and
bound
and
scas
in
adc
in
or
enter
push
loopne
jle
jmp
push
dec
mov
pop
jo
push
xor
sub
je
shl
enter
jns
mov
pop
adc
cmp
or
jbe
jo
outs
lods
jecxz
inc
add
jg
sub
pop
mov
outs
cmp
or
dec
int3
out
mov
jp
xchg
scas
mov
aas
sbb
mov
jne
daa
jmp
jl
sub
gs
mov
fwait
xor
popf
in
add
jl
push
dec
test
jnp
js
cdq
xchg
icebp
cli
jp
or
daa
mov
div
inc
cwde
movs
push
mov
push
push
fsubp
push
popf
sub
test
in
mov
dec
mov
mov
mov
inc
mov
sbb
mov
scas
sbb
loop
pop
es
jp
mov
out
int
data16
outs
ins
xchg
mov
adc
mov
mov
mov
push
xchg
dec
call
stos
rcl
push
test
push
jno
xchg
into
scas
adc
add
aad
(bad)
dec
fild
xor
or
mov
jmp
shr
in
pusha
mov
test
adc
jns
loopne
jmp
mov
sbb
xchg
xchg
call
repnz
and
push
rcl
mov
pop
xor
pusha
in
pop
xchg
dec
lods
ja
repz
pusha
mov
add
nop
mov
popf
and
mul
jmp
xchg
in
ja
arpl
nop
mov
cmp
test
ja
aad
mov
jmp
and
dec
leave
push
ret
fwait
js
pop
(bad)
xor
(bad)
out
xchg
sbb
out
or
in
mov
sub
sar
mov
aas
and
mov
hlt
add
lahf
leave
mov
(bad)
(bad)
call
xor
into
jmp
xor
jp
inc
xchg
ins
adc
leave
mov
in
pop
loop
mov
push
xchg
and
cmp
fidiv
mov
cld
in
cmp
shr
enter
stos
or
mov
in
pop
sub
lods
dec
inc
pushf
xor
stos
ins
mov
mov
repnz
pop
sub
xchg
pushf
aas
jb
jnp
push
sahf
add
mov
pop
out
ins
int3
js
push
mov
mov
mov
lock
movs
and
xor
lahf
fwait
mov
stos
fldenv
sbb
push
xchg
call
xchg
dec
(bad)
test
stos
cs
out
sbb
jae
lea
sbb
ror
das
rol
jbe
icebp
dec
pop
shl
dec
xchg
xor
pop
fxam
push
into
lds
add
sub
outs
aaa
push
data16
mov
call
inc
mov
and
je
push
pop
ror
or
les
retf
fld
or
xchg
pop
pop
xor
sar
mov
pop
cmp
addr16
sti
cmp
pop
ins
jns
pop
adc
pop
jb
retf
pusha
adc
push
xor
sbb
in
(bad)
in
sub
leave
pushf
jne
ficom
xchg
and
cmp
mov
lods
jo
cdq
into
rcr
xor
push
inc
xchg
pop
or
or
adc
and
add
das
xor
pop
imul
sub
adc
mov
push
out
das
mov
mov
sbb
cld
out
neg
rol
jg
sub
mov
test
dec
xor
xor
add
enter
push
mov
js
popa
and
imul
inc
mov
adc
sub
sub
out
or
xor
mov
mov
pusha
mov
and
ror
lock
call
dec
(bad)
test
int3
pop
out
jne
iret
fnsave
xchg
mov
shl
push
leave
pop
aas
jmp
arpl
dec
dec
or
out
sub
js
push
fdiv
or
dec
inc
mov
mov
and
pop
call
mov
fadd
jnp
nop
cmp
cmp
pop
push
(bad)
and
mov
xchg
add
pop
sbb
scas
add
aam
ja
or
cmps
jo
jl
aas
out
je
sub
or
daa
out
or
fs
adc
cmc
pusha
inc
sub
mov
xor
pop
jp
addr16
rcl
cmps
retf
jl
inc
jns
fs
es
jmp
fdivr
ja
lods
call
fdivr
inc
xor
mov
inc
sub
scas
dec
sub
dec
movs
xchg
pop
cmp
dec
into
sti
or
mov
stos
(bad)
fst
add
mov
jne
pusha
scas
ins
adc
leave
add
retf
lock
cli
movs
or
push
mov
pop
mov
fdiv
or
imul
call
lds
mov
dec
mov
jae
je
pushf
or
push
cmp
fcomp
or
pushf
dec
mov
test
adc
gs
mov
jge
nop
adc
movs
fsin
vminsd
lds
or
imul
adc
loopne
hlt
jmp
sub
or
popa
and
push
dec
sbb
pop
je
mov
movs
addr16
xor
add
mov
cdq
xchg
jne
pop
test
scas
(bad)
mov
dec
es
add
(bad)
mov
mov
mov
(bad)
mov
mov
inc
add
push
pop
jmp
nop
in
sbb
push
sar
cmp
rol
clc
dec
fdivr
xor
xchg
ins
xchg
fisub
mov
push
shr
adc
xchg
data16
jne
inc
inc
out
out
inc
cmp
sbb
cs
xor
or
fisub
mov
fmul
sub
cmc
inc
mov
pop
pop
dec
push
push
ds
jge
pop
dec
retf
mov
mov
in
lea
stos
jne
and
pop
adc
dec
sbb
add
out
std
das
mov
jecxz
sub
sbb
mov
ss
xor
jl
inc
out
(bad)
out
ss
into
mov
jmp
popf
xchg
or
push
cmp
pop
movzx
and
imul
enter
pop
fdiv
ins
cmp
rcr
push
cld
jmp
js
jne
lock
cld
pop
xchg
fnstsw
inc
mov
pop
dec
leave
xlat
call
pusha
ficom
mov
daa
mov
hlt
mov
test
sahf
jp
jge
pusha
xchg
mov
sar
sub
popa
mov
and
popa
and
dec
and
jae
and
ss
(bad)
jmp
dec
sub
mov
mov
add
or
jl
pusha
dec
test
mov
adc
aad
adc
jmp
xchg
or
add
es
adc
add
pop
fldenv
sbb
jb
lds
retf
into
test
sub
or
push
cmp
mov
mov
sbb
ror
and
stc
fcmovnb
cld
inc
imul
fnsave
addr16
js
fwait
xor
push
push
xor
popa
dec
dec
cmp
mov
cli
xor
fs
retf
loop
lock
arpl
xor
inc
cmp
mov
cmp
icebp
retf
inc
sbb
addr16
or
lock
sbb
cmp
adc
push
and
pop
ds
and
sbb
std
dec
ret
call
in
shr
aam
sbb
xor
pop
pushf
push
pop
cmp
inc
dec
pop
add
les
push
mov
jg
repz
mov
ret
cmps
imul
shr
cmp
and
sub
lds
add
test
adc
or
push
shl
jmp
jo
or
sub
add
mov
in
cmp
push
sub
mov
xor
fldcw
mov
and
daa
mov
adc
test
aam
out
imul
mov
dec
arpl
jge
xchg
and
rcl
pop
popf
sbb
jp
or
movs
add
ss
dec
add
into
aam
sub
inc
mov
dec
jns
icebp
xor
fcom
adc
jmp
push
cmp
dec
sub
arpl
sbb
into
or
or
outs
push
sub
(bad)
je
adc
pop
jmp
sub
xchg
inc
mul
fmul
movs
(bad)
xor
test
retf
fnstcw
data16
push
pusha
pop
sbb
mov
mov
dec
fstp
add
data16
cmp
daa
push
test
xor
mov
int
jbe
imul
jl
sub
(bad)
int
and
push
jb
cmp
lahf
push
arpl
adc
and
stos
retf
aas
mov
adc
rcl
jp
or
cdq
js
stos
es
inc
lods
mov
sub
mov
mov
push
rcl
sti
pop
mov
cli
ficomp
push
pop
shl
adc
cmps
mov
mov
mov
adc
jle
out
sbb
(bad)
std
adc
sub
jmp
clc
nop
fisubr
call
mov
out
cmp
icebp
pop
or
mov
cmp
je
pop
bnd
push
fisub
inc
dec
sub
sbb
and
rol
test
das
js
cld
in
out
out
or
aam
in
neg
inc
jle
retf
adc
mov
jne
pusha
fsub
push
push
pop
xlat
pop
shl
mov
pop
mov
cld
xchg
and
mov
sub
or
leave
jecxz
inc
cmps
lods
daa
int3
xor
pop
ja
test
lods
sub
push
jae
mov
adc
cld
test
call
jns
pop
pop
mov
rcl
int3
pop
arpl
cmps
clc
sbb
lahf
shr
popfw
add
pushf
add
pop
movs
call
ja
mov
fs
cmp
fcomp
pop
dec
pushf
xor
aad
inc
leave
sub
mov
mov
cmp
neg
iret
mov
repz
loop
or
sub
out
retf
inc
mov
popa
mov
out
popa
dec
cld
add
sahf
in
mov
mov
adc
sub
jb
adc
jg
pop
mov
ins
dec
(bad)
scas
pop
leave
xor
cmp
ret
push
sbb
pop
ss
add
cmps
cmp
arpl
(bad)
cld
pop
cmps
les
xchg
xchg
xchg
dec
lds
fiadd
mov
sbb
mov
ds
jp
(bad)
jg
cmps
jg
push
lds
lds
imul
add
pop
hlt
daa
cli
sub
aaa
aaa
stos
es
jl
pushf
push
add
fwait
ss
push
icebp
mov
ins
jle
xchg
sahf
sub
(bad)
iret
sub
rcl
repz
out
shl
xchg
into
or
bound
adc
mov
movs
adc
out
ror
test
sbb
sbb
sub
xor
xchg
ja
call
cmp
leave
sub
rcr
hlt
les
jmp
xchg
(bad)
retf
stos
imul
int
and
cwde
mov
sbb
(bad)
mov
psrlq
xor
icebp
xor
sub
(bad)
jnp
jne
xchg
movs
mov
and
jne
and
xor
pop
or
mov
adc
mov
jp
jmp
add
xor
in
out
push
fwait
mov
mov
paddusw
ret
xchg
(bad)
xchg
mov
movs
(bad)
retf
call
test
sbb
sti
imul
ror
push
push
aam
loop
mov
add
(bad)
loop
bound
pop
sar
and
stos
push
push
adc
xchg
fs
adc
mov
pop
in
outs
loope
cmc
lods
jnp
inc
jne
fistp
pushf
adc
sbb
adc
shl
nop
jns
mov
fisubr
outs
(bad)
cwde
xchg
jnp
ret
hlt
xchg
addr16
(bad)
repnz
jns
and
jmp
dec
repnz
daa
rol
fidiv
lea
xchg
cmc
mov
out
adc
ror
sbb
mov
lea
dec
lds
inc
inc
mov
lahf
ret
xchg
add
rcr
sbb
loopne
inc
(bad)
repnz
mov
dec
getsec
and
mov
cdq
cs
cmp
mov
xchg
fiadd
sub
(bad)
cmps
sbb
pop
call
mov
lock
pop
std
pop
stos
in
add
in
pop
xor
sahf
and
pop
sti
mov
addr16
xchg
cmps
mov
sahf
push
daa
jp
mov
adc
(bad)
ins
and
push
cmp
outs
cmps
imul
ret
fcom
rcr
imul
test
inc
retf
rcr
xor
test
retf
jno
pop
call
jge
fdivr
cmp
adc
xor
dec
mov
dec
out
adc
adc
push
xchg
pop
outs
(bad)
mov
(bad)
mov
int
inc
imul
jnp
inc
nop
xor
xchg
or
movs
or
sbb
sub
movs
mov
mov
outs
cs
xchg
pusha
scas
xchg
mov
into
cmp
pop
in
popa
dec
sub
and
gs
push
xor
adc
lods
inc
mov
outs
pop
push
xchg
je
fcom
cmps
pop
dec
pop
addr16
sbb
inc
ds
adc
stos
and
aaa
in
in
cmp
stos
jne
rol
push
cmp
fwait
dec
adc
push
mov
retf
fstp
jge
mov
xlat
push
mov
popf
or
mov
retf
cld
repnz
add
mov
and
and
mov
mov
sub
jmp
idiv
pop
mov
xchg
sahf
lock
les
push
xchg
dec
jae
xchg
fwait
sbb
arpl
mov
pop
mov
inc
push
or
std
sub
stos
xchg
fcomp
loope
push
jg
add
sti
push
push
mov
cdq
mov
and
mov
inc
shl
imul
jbe
mov
sahf
add
not
inc
les
out
push
nop
xchg
outs
ret
cwde
(bad)
(bad)
sbb
jno
popa
fdiv
or
out
mov
es
cwde
sbb
push
(bad)
mov
fisubr
fsubr
push
push
fiadd
add
inc
xor
nop
xchg
mov
je
ins
out
loope
sti
sti
fmul
add
stc
pop
pop
cmp
mov
sbb
shl
adc
or
inc
(bad)
cli
outs
push
mov
add
movs
arpl
xor
ja
lods
loop
dec
in
loopne
dec
lods
jns
pop
dec
(bad)
xchg
enter
ss
sbb
pop
add
mov
inc
jae
ss
loope
cmp
cmps
ficomp
push
jae
jne
aam
fadd
and
push
ja
mov
sub
loope
or
dec
ss
ins
mov
fcomp
in
inc
cli
imul
pop
push
add
jp
movs
sbb
sub
ffree
jmp
lock
out
into
push
out
adc
ret
and
movs
call
add
add
rol
xor
cmps
push
mov
sub
fistp
jnp
inc
daa
cmp
jmp
pushf
pop
add
test
xlat
add
jmp
outs
and
stc
inc
push
call
mov
loopne
cmps
arpl
push
xchg
sub
or
sti
push
jge
add
pop
cld
retf
mov
fnstcw
pop
inc
xor
nop
cdq
sbb
retf
cmp
test
aam
clc
popf
(bad)
mov
repz
shl
movs
aam
xlat
addr16
sbb
lahf
inc
test
fdivr
jne
repz
jle
lds
sub
cdq
js
pop
cmp
xor
add
fbld
(bad)
(bad)
mov
ins
(bad)
mov
mov
jl
aaa
xor
addr16
retf
jg
fadd
je
jecxz
out
adc
adc
jge
test
sbb
les
push
jle
not
or
xor
jmp
xor
xor
imul
mov
mov
int3
lds
sti
in
xchg
mov
test
add
cwde
fs
popf
test
adc
fist
jecxz
dec
out
xchg
dec
cmp
movs
pop
ss
push
hlt
sub
inc
in
in
add
inc
not
push
test
leave
out
(bad)
dec
dec
jno
inc
int3
mov
push
xor
pop
stc
xchg
retf
retf
pusha
mov
(bad)
jne
xchg
mov
or
jg
daa
mov
sti
pop
dec
aas
sti
cld
push
add
retf
jnp
mov
fcomp
sub
jmp
leave
repz
xchg
idiv
test
sub
jb
arpl
mov
adc
adc
pop
jl
scas
xlat
cmp
int
rcr
dec
dec
pusha
jmp
loopne
or
dec
out
dec
std
mov
ins
mov
out
daa
outs
iret
mov
inc
cmp
xchg
pop
js
psrlq
ficomp
mov
sub
jb
inc
in
fcmovnbe
cwde
fistp
aam
sbb
mov
mov
retf
adc
adc
inc
ins
mov
nop
jmp
pop
mov
push
cmc
mov
enter
xor
xlat
jl
xor
push
cld
add
add
adc
int
pop
(bad)
mov
push
push
push
sbb
push
call
(bad)
sbb
arpl
pop
sub
popf
mov
push
(bad)
fwait
loope
lock
mov
xchg
pop
test
or
mov
leave
mov
jbe
inc
cmps
mov
cdq
or
call
jae
test
mov
das
movs
mov
adc
mov
test
cld
and
shl
mov
stos
mov
sub
sub
daa
clc
add
inc
(bad)
xor
adc
or
xchg
cmps
sub
out
fwait
adc
cwde
inc
iret
inc
push
xor
imul
mov
imul
retf
sub
jne
add
mov
xchg
in
mov
stos
imul
sbb
shl
mov
dec
mov
push
dec
mov
and
ror
adc
sbb
retf
mov
ficomp
ds
jp
inc
std
mov
dec
les
movs
inc
jecxz
dec
sub
sbb
xchg
in
or
push
ss
dec
or
sbb
test
out
mov
jne
xor
les
mov
outs
pushf
adc
sbb
or
push
mov
ds
fs
es
inc
fnstsw
mov
cmc
pop
jecxz
jae
scas
mov
or
xor
in
pop
stos
clc
pop
push
div
push
mov
adc
lods
(bad)
lods
push
pop
cmp
loop
and
sbb
fmulp
ja
hlt
in
addr16
stos
sbb
cwde
fucomi
lahf
arpl
daa
sbb
mov
jmp
jge
mov
daa
mov
or
mov
lods
push
fist
or
inc
ja
cdq
push
jg
shl
xchg
neg
out
stos
rol
or
scas
cmp
(bad)
js
movs
jmp
push
adc
dec
cdq
movs
dec
mov
xor
aad
jbe
add
pop
imul
ins
push
not
jl
popf
bound
sub
cmp
xor
stos
movs
push
sbb
sub
push
add
scas
sbb
xor
mov
call
test
add
jnp
xor
mov
int
add
in
movs
data16
sub
lods
mov
push
sub
mov
shr
rol
test
dec
fld
scas
jmp
push
xor
add
gs
push
int3
adc
mov
pop
pushf
stos
lods
(bad)
fscale
pusha
jmp
ins
jnp
pop
test
inc
imul
xor
nop
loopne
fwait
data16
xor
add
xor
test
add
dec
pusha
dec
jae
aad
sbb
pop
push
outs
enter
icebp
rol
(bad)
call
xchg
xchg
mov
bound
mov
jns
jo
sbb
scas
js
xor
xor
add
popa
dec
jns
jo
cmps
pop
(bad)
in
sbb
(bad)
hlt
xor
cmps
inc
mov
pop
out
cmp
mov
retf
sub
fmul
cmps
neg
sub
inc
aad
inc
adc
(bad)
in
cli
cmp
ror
push
mov
icebp
fwait
sbb
jl
dec
mov
ja
lea
ins
idiv
lahf
into
jo
and
mov
xchg
pop
sti
sub
adc
shl
leave
cmp
test
stos
outs
adc
xor
dec
loopne
push
in
or
cmp
in
clc
dec
push
imul
dec
cmps
ds
sub
aad
pop
out
adc
nop
jne
fwait
add
jo
xor
repnz
fstp
push
clts
in
fidivr
in
fbstp
jo
jmp
pop
jne
push
fild
inc
aam
sbb
dec
jb
sahf
rol
test
sahf
or
or
mov
in
inc
(bad)
xchg
or
jp
ror
repnz
pop
call
daa
xor
sub
mov
les
scas
enter
mov
xor
in
lea
retf
push
pop
jecxz
ret
fst
and
push
jno
(bad)
fsubr
push
jge
mov
xor
xlat
push
xchg
ds
rcl
inc
inc
push
sub
xor
test
out
jle
mov
pop
xor
shl
dec
outs
cmp
arpl
mov
rcl
test
stos
xchg
xchg
or
hlt
nop
add
scas
into
push
push
dec
mov
mov
jno
add
ss
pop
lods
or
fxam
aam
mov
sbb
mov
mov
int
inc
mov
repnz
fucomi
je
call
dec
and
imul
retf
aaa
jge
sub
pop
push
nop
adc
xor
dec
pop
add
and
xor
mov
adc
jg
mov
loope
adc
lods
xchg
out
(bad)
data16
jns
(bad)
add
lea
jno
sub
pop
stos
ficomp
jle
cwde
test
bound
lods
sbb
loop
popa
jnp
push
or
mov
retf
adc
cmove
dec
dec
xor
add
adc
inc
pushf
jbe
sbb
push
inc
jecxz
call
loope
jmp
rcr
sub
push
inc
sub
out
mov
push
les
sub
ja
cmp
enter
jne
(bad)
mov
dec
leave
repnz
(bad)
ficom
sbb
push
scas
(bad)
out
test
ins
fwait
dec
(bad)
loope
je
xchg
jg
and
sbb
inc
add
cdq
popf
mov
adc
pop
sbb
ds
mov
inc
repz
mov
sub
fld
add
test
xor
mov
jne
ret
xchg
dec
adc
jb
aam
cmp
or
test
push
daa
push
test
pop
sub
xor
xchg
mov
pushf
fisttp
cmp
or
xor
sub
sbb
sbb
jmp
or
daa
xchg
retf
sub
or
sbb
dec
mov
jle
cmp
out
add
adc
mov
iret
call
cmp
je
inc
pop
cld
pop
ror
out
fbld
mov
sbb
jo
adc
push
push
fcmovnb
jmp
out
iret
mov
imul
sbb
dec
or
arpl
movs
loop
fnstsw
mov
mov
fisubr
pop
xchg
call
sahf
xor
mov
mov
jb
xchg
mov
test
das
sub
pop
xchg
lds
ret
nop
cmp
mov
lea
(bad)
mov
fbld
imul
movs
(bad)
stos
mov
cmc
sbb
mov
popf
push
arpl
adc
pop
fisub
add
sbb
mov
inc
lock
cmp
stos
rcr
enter
int
sbb
add
and
jnp
test
cmc
push
ins
daa
jno
jge
sbb
cmps
shl
inc
or
mov
add
loopne
jp
jp
stos
mov
push
les
push
rep
repz
cmp
js
mov
mov
leave
jnp
scas
pop
loop
lods
jo
add
push
add
(bad)
xor
loopne
push
xor
pop
jno
pop
div
ret
(bad)
lods
rol
in
mov
mov
sbb
das
jle
ds
mov
sub
pop
test
sbb
lods
mov
xor
inc
int3
or
and
add
fcmovb
mov
mov
sub
addr16
stc
and
in
arpl
shl
aam
pop
fistp
(bad)
out
jbe
or
fcmovnb
xor
lds
(bad)
aad
dec
xor
adc
test
push
test
pop
mov
test
adc
mov
sub
(bad)
or
mov
mov
adc
retf
mov
push
adc
add
dec
cmp
inc
dec
bnd
cmp
push
retf
in
ffreep
cmp
and
ins
lahf
sti
push
cwde
or
inc
sub
in
imul
test
outs
movs
add
test
mov
and
aad
imul
mov
fdivp
lock
jo
test
xor
inc
adc
icebp
mov
pushf
dec
repnz
test
adc
movs
dec
cli
test
cmps
aas
outs
or
call
xor
jl
lds
inc
inc
adc
sub
mov
in
mov
cmp
jmp
or
es
hlt
out
ror
mov
les
xchg
ss
add
cmp
xchg
stos
fistp
and
sbb
xor
push
sub
ins
xchg
inc
jbe
jns
or
cmp
jo
mov
jb
scas
sbb
inc
sbb
jo
(bad)
inc
loop
out
xchg
inc
add
sbb
fwait
push
and
inc
pusha
sbb
scas
sar
add
sub
mov
out
cmc
lock
out
push
sar
cmp
into
push
mov
fistp
mov
std
retf
data16
jae
push
mov
dec
push
push
sub
mov
in
cmp
scas
mov
in
and
or
mov
outs
stos
rcl
jl
xor
cmp
(bad)
js
test
jo
or
mov
movs
gs
mov
and
mov
sbb
xchg
adc
add
push
lock
add
jmp
inc
stc
adc
inc
(bad)
pop
add
adc
mov
mov
gs
xor
pop
mov
bound
outs
call
popf
pop
idiv
sahf
(bad)
call
pop
or
mov
fimul
dec
(bad)
push
inc
xchg
mov
fisttp
neg
mov
xchg
inc
xor
mov
jne
xchg
xchg
test
mov
scas
mov
cmp
outs
in
dec
pop
aas
in
ins
cmp
call
xchg
(bad)
jae
cmc
fcmovbe
and
cwde
adc
(bad)
and
(bad)
ds
xlat
lock
jo
dec
ins
pushf
jge
pop
inc
jb
cmp
out
add
push
in
jge
mov
add
jp
mul
cdq
inc
xor
and
sub
xchg
mov
push
imul
push
pop
call
arpl
mov
add
or
or
outs
jmp
pop
lea
out
jp
adc
adc
(bad)
cld
lods
fxch
mov
cwde
push
push
dec
adc
loop
cmp
sub
les
js
imul
inc
jbe
dec
jmp
test
lods
popf
push
jo
das
dec
(bad)
sti
fcmovnb
xchg
popf
stos
mov
bound
sub
jg
add
inc
jns
jmp
mov
add
or
adc
sahf
in
and
jo
out
enter
or
fst
cmp
pop
jmp
aam
add
dec
add
add
in
xchg
scas
not
movs
cs
repnz
adc
push
dec
pop
push
or
ret
pop
ss
in
push
xchg
(bad)
in
xchg
int3
rcl
jle
inc
jo
mov
enter
jbe
imul
xchg
push
xor
sbb
inc
mov
out
stos
mov
mov
inc
mov
pop
(bad)
popf
xor
in
imul
pop
rol
pop
test
fdivrp
cdq
sbb
pop
ins
lds
xlat
add
cmp
push
stc
sbb
and
cmp
mov
adc
lock
sub
fwait
js
ret
sub
popa
xor
dec
push
mov
mov
mov
stc
xor
pop
jecxz
imul
(bad)
stc
or
xchg
cmp
imul
push
pop
or
mov
mov
cs
sub
in
mov
ror
inc
jge
(bad)
inc
xchg
mov
mov
lahf
push
mov
or
sti
bnd
inc
pop
and
xchg
pop
dec
ss
movs
div
push
sbb
(bad)
jg
inc
sbb
in
inc
fistp
inc
enter
test
lds
and
setnp
aas
adc
sub
mov
cmp
push
inc
sar
into
shl
pushf
clc
(bad)
repz
fs
push
(bad)
in
int
repz
inc
mov
inc
sbb
sub
adc
inc
pop
mov
jns
int
or
dec
push
sar
or
sbb
lods
mov
cmp
into
shl
gs
call
mov
add
add
movs
add
out
mov
dec
pusha
sbb
les
jo
xor
sbb
push
fsub
sbb
loope
cmps
inc
popa
cmp
or
push
mov
adc
adc
jg
mov
fbstp
or
cmc
sti
sub
cs
add
mov
cs
xchg
xchg
adc
or
(bad)
cdq
sti
inc
push
jbe
mov
cwde
(bad)
lods
sub
cmp
lods
mov
inc
inc
(bad)
dec
mov
add
mov
(bad)
push
push
int3
push
neg
fdiv
(bad)
push
icebp
neg
jnp
mov
std
inc
leave
inc
outs
ret
cdq
data16
dec
inc
pop
daa
adc
mov
mov
ret
std
pusha
ret
inc
jns
xor
imul
dec
and
(bad)
jp
ret
xchg
and
inc
pushf
lods
fmul
mov
and
mov
ds
push
std
dec
addr16
call
add
mov
jge
fdivr
out
dec
pop
fidiv
xlat
call
cmp
sbb
push
ins
or
push
test
inc
push
add
sahf
fld
gs
pop
adc
cmp
xchg
loopne
cli
and
(bad)
icebp
push
mul
push
jns
push
call
inc
nop
hlt
(bad)
mov
inc
sbb
mov
cmps
mov
leave
ss
loope
xchg
ss
push
jmp
fldcw
push
adc
dec
cmp
inc
mov
pop
ins
jmp
jp
test
mov
bound
inc
repz
or
sub
ss
add
push
sbb
cld
popf
lds
shr
pop
add
dec
mov
cwde
pop
push
fs
loope
pop
pop
retf
jno
cmps
mov
adc
out
mov
mov
pusha
lahf
mov
and
add
and
jae
jge
sbb
cmp
iret
jno
dec
inc
fidivr
sbb
lahf
stos
adc
pop
jp
sub
push
xor
inc
cmp
pop
mov
(bad)
fcmovnbe
cmp
mov
mov
and
hlt
(bad)
loop
or
test
xchg
dec
out
dec
ja
out
outs
inc
ins
fstp
pop
or
in
inc
test
lahf
pusha
pop
xchg
jle
mov
dec
(bad)
dec
arpl
jbe
mov
jl
sub
inc
mov
and
inc
xchg
xor
inc
mov
cdq
ror
mov
sbb
push
stos
outs
dec
add
sub
adc
stos
aaa
push
mov
dec
jge
xchg
ror
pop
popf
jns
adc
dec
rcl
hlt
fdiv
and
adc
jecxz
push
cmp
xor
sub
imul
xor
xor
or
cwde
adc
stos
addr16
xchg
inc
mov
call
mov
push
mov
jnp
pop
jmp
nop
xor
jl
jp
sar
int3
push
pop
(bad)
ins
jp
std
or
daa
jno
outs
cld
jg
and
pop
xchg
adc
(bad)
fisttp
sar
cmp
jb
das
xchg
adc
push
rol
(bad)
iret
repz
jb
add
dec
xchg
jb
xchg
inc
push
test
pop
inc
test
jmp
cmps
sub
pusha
data16
push
push
daa
mov
shl
pop
mov
inc
pop
fcomp
pop
rcr
mov
fstp
pop
xchg
sub
xlat
cmp
mov
jmp
pop
jnp
sub
xlat
addr16
ret
sub
into
fwait
int
push
jnp
fdivr
in
fbld
ds
mov
sti
mov
mov
dec
(bad)
xchg
push
and
aaa
jecxz
cmp
push
xchg
jbe
add
test
jns
aam
sbb
test
cmp
(bad)
je
and
sbb
call
iret
clc
or
jne
add
add
xchg
add
cli
mov
lods
xchg
sysexit
pop
sahf
loope
inc
(bad)
sbb
btc
dec
xchg
push
or
pop
hlt
imul
push
(bad)
or
test
jmp
in
cmp
or
adc
(bad)
retf
hlt
mov
bound
xchg
shr
mov
sub
push
out
jns
jp
test
xor
cmp
push
and
sbb
lods
push
xchg
aas
pop
pusha
mov
adc
and
push
cwde
in
shr
or
ror
jbe
in
xor
lea
sub
das
std
jbe
hlt
(bad)
push
add
mov
or
iret
jne
mov
or
icebp
dec
stos
cmp
sub
mov
mov
les
(bad)
inc
mov
mov
push
jge
arpl
sbb
dec
and
mov
mov
dec
inc
gs
test
or
(bad)
xor
pushf
pusha
pop
loopne
aad
pusha
pop
push
scas
or
out
pusha
mov
mov
jg
cmps
daa
cmps
adc
dec
pushf
push
sti
jb
(bad)
pop
sub
sar
scas
add
xor
inc
jmp
int3
or
ss
iret
add
sub
add
pop
pop
mov
sub
cli
dec
mov
int3
jecxz
sti
push
fwait
imul
cmps
jae
call
inc
fwait
pop
mov
add
mov
push
pop
rcr
cmps
jle
xor
cmp
mov
jl
mov
and
ss
adc
imul
pop
stos
ds
clc
fwait
sbb
(bad)
push
xor
(bad)
outs
xchg
sub
data16
sub
fistp
and
jge
out
jge
loope
adc
add
cld
pop
jmp
repz
cmps
xor
les
push
pushf
dec
stos
lods
mov
mov
mov
mov
in
test
dec
int
fild
(bad)
mov
sub
add
sbb
xchg
or
out
cmp
pop
out
loop
out
outs
stos
and
mov
rcl
movq
inc
movs
push
mov
movs
push
(bad)
mov
pop
mov
lds
jae
inc
push
and
sub
cdq
test
ja
xor
(bad)
adc
aaa
call
movs
stos
pushf
mov
mov
sub
shl
(bad)
(bad)
xchg
dec
pop
scas
push
inc
js
push
push
cmp
sbb
and
dec
lea
cmps
push
sub
mov
shl
ds
inc
sbb
icebp
aam
cwde
jle
in
adc
and
add
sub
std
movs
sbb
dec
mov
push
fld
sbb
xchg
fstp
rcl
aas
outs
cli
icebp
imul
mov
sub
fstp
adc
setbe
cmp
into
ss
and
xchg
push
movs
es
sub
mov
outs
dec
test
js
lods
repz
rol
enter
frndint
xchg
lods
enter
or
inc
sbb
mov
mov
loop
adc
push
(bad)
jge
aas
xor
fcmovnbe
jle
add
cdq
lea
aaa
xchg
shr
mov
dec
mov
(bad)
outs
cli
nop
das
jmp
imul
ins
nop
jecxz
sub
mov
and
data16
cmp
fild
and
lea
call
pop
or
inc
idiv
xor
inc
inc
leave
xor
aam
dec
jge
rcl
xchg
aaa
add
adc
call
add
jg
stc
push
or
retf
loopne
pop
or
popa
ret
xchg
gs
popf
inc
(bad)
clc
jo
pop
xchg
ficomp
cld
in
rcr
xor
lahf
mov
jle
shr
push
add
xor
hlt
(bad)
jge
xor
stos
test
in
pop
mov
fucomi
sub
xchg
inc
cli
stos
jmp
pop
inc
out
jno
lock
cmp
mov
dec
fsubr
cmps
(bad)
push
cmp
sti
(bad)
stc
cmc
sbb
mov
mov
jge
xacquire
mov
iret
(bad)
pop
shr
push
ja
pop
popa
mov
sbb
mov
add
jae
inc
mov
sub
rcr
stc
(bad)
jle
adc
ror
repnz
pop
xchg
sbb
std
in
mov
aas
jmp
mov
ins
lods
add
aaa
pusha
test
clc
movs
or
stos
mov
into
repz
movs
jg
push
inc
push
push
mov
fs
pop
das
jb
sbb
popf
or
pop
inc
xor
jns
ins
xchg
mov
lock
pop
fbstp
mov
int3
ror
fucom
adc
test
ret
mov
scas
pop
aaa
ja
in
inc
mov
call
xchg
imul
mov
ins
sar
or
aam
sub
cmp
and
and
pop
mov
(bad)
mov
inc
pop
lahf
in
pop
(bad)
jecxz
popa
leave
dec
sbb
sbb
gs
les
fadd
adc
sbb
mov
into
inc
ins
push
les
hlt
sbb
cmp
add
cli
sbb
mov
movs
adc
out
jmp
movs
pop
cmp
popa
sti
xor
imul
mov
jbe
call
jno
(bad)
bound
jg
pushf
pop
jge
sub
dec
cmp
mov
or
aam
pop
sbb
cdq
call
pusha
dec
inc
clc
pop
out
inc
xchg
inc
push
lea
add
cld
(bad)
jl
xor
shl
lods
sbb
lds
mov
in
movs
jmp
add
popf
repz
add
adc
jl
pop
sbb
test
cmps
sub
iret
fwait
pop
push
push
xchg
(bad)
jnp
scas
dec
outs
pusha
pop
mov
imul
adc
(bad)
aam
xor
pop
arpl
mov
mov
scas
iret
adc
sbb
or
xchg
shr
xchg
mov
addr16
adc
dec
ins
dec
pop
adc
jbe
ror
addr16
mov
bound
xchg
inc
gs
mov
mov
lock
rcr
or
lods
fstp
jmp
movs
ins
shl
push
xor
movs
bound
ficom
ret
add
xlat
cld
(bad)
xor
and
mov
push
out
xor
xor
jge
jle
adc
or
loop
stos
and
fbld
or
sbb
jo
sbb
mov
sti
xchg
jo
cmp
loope
mov
retf
or
cmp
loop
add
add
mov
mov
and
stos
(bad)
xlat
or
add
mov
pop
xchg
loop
sbb
shr
dec
(bad)
xchg
mov
xchg
mov
jle
pop
or
push
mov
adc
push
cmp
xor
xchg
mov
(bad)
fsub
push
call
push
push
mov
in
std
stc
add
xor
pop
add
jmp
das
lahf
xor
fwait
(bad)
sti
mov
jmp
jle
loope
mov
sub
clc
cmp
fld
xchg
mov
xchg
mov
fisub
aam
xchg
xchg
cld
inc
adc
sbb
inc
push
retf
xchg
hlt
jmp
jmp
icebp
ret
xchg
lock
xchg
push
jmp
(bad)
mov
xchg
pop
popa
sub
call
push
sub
jl
movs
pop
xchg
cmp
fistp
adc
xchg
(bad)
and
xor
sbb
ds
sar
ds
mov
jmp
call
mov
ss
mov
test
adc
out
push
lds
mov
or
or
push
test
imul
lds
nop
jb
mov
xchg
pop
out
and
xchg
mov
ins
es
lea
jb
pop
adc
aas
cld
mov
ficomp
addr16
xchg
pop
call
cmc
xchg
cmp
sbb
ficomp
xor
sub
(bad)
push
xchg
jg
(bad)
retf
sbb
movs
jle
popa
out
adc
adc
and
cli
mov
outs
ins
cmp
inc
movs
jbe
pmulhuw
cmps
shl
arpl
adc
mov
imul
dec
stc
(bad)
pop
xchg
inc
add
adc
cwde
ds
stos
and
rcl
pop
(bad)
mov
dec
fisttp
(bad)
std
lods
mov
pop
enter
inc
cmps
push
das
xor
jl
jnp
push
xchg
aam
ins
addr16
push
dec
bound
(bad)
popf
arpl
das
shl
rcl
adc
cmp
adc
adc
push
fwait
data16
pusha
xor
jae
(bad)
idiv
mov
mov
or
jno
cwde
xor
pop
sub
adc
imul
adc
mov
fwait
shl
mov
push
(bad)
adc
push
or
int
inc
rcl
(bad)
sbb
jle
dec
loopne
lahf
or
in
xchg
imul
and
or
repnz
mov
pop
pop
(bad)
cdq
sub
je
aas
lods
cmps
or
fimul
xor
enter
add
sub
jno
and
mov
cmp
inc
xchg
les
icebp
inc
and
out
pop
jle
sbb
loopne
lods
sti
in
addr16
lods
mov
cmc
mov
in
scas
rcr
arpl
aad
repnz
mov
sbb
push
push
in
sbb
cs
ins
fwait
retf
shl
sbb
outs
dec
push
lea
mov
mov
inc
in
mov
(bad)
jp
adc
leave
mov
gs
icebp
jne
jmp
push
call
and
sbb
add
shr
retf
lea
sub
mov
call
adc
add
clc
pop
imul
neg
rcr
ja
in
iret
pusha
sbb
xor
in
(bad)
dec
mov
xchg
xchg
iret
mov
or
(bad)
fucomp
mov
popa
push
bnd
icebp
test
push
scas
mov
fldl2t
aam
sub
adc
ror
push
dec
adc
cmps
mov
pop
or
in
mov
push
icebp
test
arpl
cmp
jne
clc
inc
or
lds
dec
mov
pop
movs
out
inc
and
icebp
jle
bound
and
lahf
les
pushf
pop
mov
sbb
cmp
int
imul
ss
gs
mov
unpckhps
pop
mov
stos
inc
rcl
jno
pop
fs
call
mov
sub
dec
pop
test
jg
sbb
stos
sbb
mov
push
ins
adc
test
and
(bad)
leave
cli
movs
enter
aad
jp
add
icebp
dec
out
bound
popa
lods
cs
push
imul
cwde
fdiv
cmp
ss
mov
mov
xchg
inc
mov
repnz
push
outs
test
sub
push
sub
loopne
lods
push
mov
sbb
in
mov
int
adc
test
mov
and
int3
pop
aam
and
nop
mov
in
icebp
cmp
push
xchg
dec
mov
push
ss
push
std
sbb
or
rcl
out
sahf
push
ins
lods
mov
mov
mov
mov
cmps
jmp
inc
movs
mov
arpl
pop
loope
aaa
(bad)
int3
push
pop
xchg
push
mov
inc
rcl
mov
repnz
xchg
cmp
gs
pop
in
mov
fcomp
loop
adc
xchg
pop
jp
sar
pop
test
les
adc
pusha
sbb
adc
jecxz
adc
and
dec
mov
cmps
das
int
out
sbb
ficom
adc
leave
daa
repz
adc
push
mov
jo
inc
dec
dec
add
pop
pop
test
add
push
jecxz
mov
lods
mov
sub
xchg
dec
call
rcr
daa
pop
in
mov
pop
xor
dec
ss
addr16
ins
adc
xchg
add
aam
dec
fdivr
xor
das
inc
sbb
ja
sub
push
or
retf
add
xchg
ror
push
stc
or
dec
dec
push
sbb
sub
jmp
mov
cld
mov
xor
ret
push
or
push
mov
in
das
into
call
jo
scas
arpl
sub
jp
rcr
cmp
arpl
mov
adc
out
mov
sbb
add
and
je
add
stc
mov
(bad)
sahf
xchg
and
bound
push
js
int
enter
test
shr
adc
cmp
push
push
add
test
repnz
test
test
(bad)
movs
add
lds
retf
pop
inc
(bad)
push
mov
cmovp
fwait
adc
in
dec
and
and
mov
or
xchg
js
loopne
mov
shl
outs
int3
xor
dec
mov
or
fwait
mov
outs
shl
inc
in
imul
jecxz
outs
cmp
cmp
cmp
xchg
rcr
call
out
rcr
adc
int
push
stos
icebp
and
movs
fs
dec
inc
jmp
out
push
bound
mov
cmps
mov
sub
sub
daa
mov
xor
xchg
int
xchg
aaa
arpl
push
lods
adc
pop
or
or
xchg
bound
pop
mov
in
lahf
cmps
scas
stc
stc
repz
push
mov
jmp
fs
out
leave
imul
sbb
adc
shr
fs
or
sub
sub
(bad)
mov
in
cmps
and
xchg
jmp
js
jmp
div
and
add
int
jb
repz
je
adc
xchg
outs
out
les
xchg
sar
cmps
imul
dec
sbb
push
mov
mov
mov
ins
fwait
cmps
adc
iret
sbb
inc
xor
mov
jae
out
daa
dec
xlat
rol
mov
mov
mov
xchg
push
push
fimul
mov
test
push
xor
pushf
imul
cwde
mov
xor
xchg
mov
jbe
popa
inc
(bad)
sub
addr16
fcmovnu
inc
adc
cmc
inc
push
mov
and
inc
xor
aam
movs
dec
add
cwde
jp
movs
xlat
mov
clc
or
mov
jge
pop
sub
fistp
loop
xchg
pop
test
in
jecxz
enter
push
push
inc
outs
xchg
outs
mov
mov
nop
sub
mov
pop
out
(bad)
xchg
add
cdq
pop
cdq
xchg
and
lods
inc
mov
std
and
dec
and
jmp
clc
repnz
je
cmp
movs
test
jecxz
add
adc
mov
or
out
dec
(bad)
ins
sbb
rcl
repnz
mov
adc
js
mov
lahf
sar
jmp
dec
sbb
and
mov
jno
push
pop
lods
lock
lds
(bad)
and
pop
sub
inc
mov
mov
in
inc
pop
cdq
out
xor
mov
inc
leave
daa
adc
jecxz
jns
cdq
add
dec
push
movs
pop
jmp
mov
or
push
sbb
cli
enter
ja
in
cmc
push
aas
jae
sbb
sahf
clc
xor
xor
mov
mov
repz
das
mov
adc
ins
scas
out
sbb
idiv
daa
xor
xchg
not
loope
mov
movs
push
or
(bad)
sub
adc
aam
and
push
mov
sbb
jp
jmp
cmp
sub
int
lock
lock
out
stos
pop
push
iret
sbb
cwde
jns
enter
jmp
sub
cdq
or
test
daa
das
jno
mov
or
add
cmp
pop
sub
and
aam
pop
stc
xchg
inc
dec
or
jae
cli
mov
into
sar
enter
ja
je
jmp
or
jmp
fbld
fdiv
movs
je
inc
std
xor
retf
jno
or
xor
imul
inc
cdq
mov
sub
xor
fdiv
dec
xor
add
push
ja
mov
pop
mov
in
repz
sbb
sub
out
mov
out
mov
inc
mov
lods
in
outs
test
fidiv
repz
ins
mov
cld
xor
(bad)
sub
pop
test
gs
or
int
and
mov
stc
push
xchg
mov
leave
sub
(bad)
mov
sti
jmp
or
test
jbe
les
shl
or
mov
jle
pop
jno
xchg
out
inc
or
mov
xchg
inc
iret
nop
adc
mov
dec
mov
push
stos
sbb
jne
ins
pop
(bad)
mov
in
call
and
lods
test
push
nop
cli
jl
shl
push
rol
inc
mov
call
sub
rcr
pushf
mov
lea
xor
clc
mov
rcl
xor
push
stos
js
in
dec
mov
mov
xor
ret
outs
xor
shr
cmp
(bad)
pushf
or
aam
imul
inc
out
iret
or
cwde
and
mov
rcr
gs
rcr
mov
adc
xchg
fsubr
xchg
jp
and
imul
stos
mov
pop
mov
nop
inc
push
mov
les
mov
fisttp
and
jne
inc
ja
popf
idiv
xor
shr
clc
call
imul
xlat
adc
mov
push
(bad)
fbstp
pop
jmp
retf
les
ins
xor
inc
sbb
inc
or
test
jmp
sub
scas
jp
ret
lods
in
scas
out
xor
nop
mov
and
nop
mov
fwait
push
retf
and
jnp
jnp
in
out
mov
jns
fimul
cmp
mov
sbb
dec
ror
jecxz
lahf
mov
dec
ins
xchg
xchg
pop
jp
ds
pop
cs
push
inc
icebp
addr16
movs
xor
push
shl
cli
or
cdq
xor
pop
rcr
cmp
push
scas
pop
jnp
xchg
mov
mov
push
cmp
push
jo
mov
dec
ds
(bad)
jnp
pop
inc
xor
inc
repnz
push
push
inc
scas
pushf
dec
dec
or
fwait
xor
push
rcl
iret
mov
adc
mov
or
xchg
sbb
ds
cld
or
mov
dec
scas
add
fmul
sub
push
sbb
rcl
cmp
xchg
xchg
mov
dec
push
adc
xchg
or
jmp
popa
cmps
inc
push
ret
fs
mov
fisub
mov
push
imul
shl
cmp
imul
icebp
cs
push
pop
cmc
in
cdq
mov
mov
cmp
and
in
addr16
sub
sub
sub
dec
cmp
xchg
sub
int
xchg
dec
icebp
int3
sub
cmp
xchg
fild
test
jns
shr
mov
(bad)
iret
dec
cmc
outs
fistp
add
jmp
mov
pop
pop
lods
inc
mov
in
stos
shl
jle
sub
mov
sti
adc
pushf
repnz
adc
mov
xchg
imul
ins
mov
mov
aad
scas
pop
dec
add
fnstsw
std
dec
add
js
push
repnz
mov
stc
cmp
pop
scas
out
stc
test
mov
scas
aaa
xchg
jge
cmp
sbb
adc
test
push
popa
push
fldenv
aad
push
adc
gs
xor
mov
inc
mov
fmul
out
and
push
add
lds
fwait
test
aad
push
mov
jmp
push
idiv
xlat
clc
sbb
push
jle
cld
imul
ss
add
call
ja
adc
scas
dec
outs
shr
mov
or
aam
adc
push
out
add
cs
retf
adc
push
xor
push
xor
(bad)
test
stc
adc
ds
xchg
(bad)
mov
movs
shl
pop
pop
sub
leave
and
jnp
mov
mov
cmps
imul
pop
pop
inc
cmps
xchg
push
not
fsub
push
idiv
rcl
aad
xchg
mov
jnp
xlat
jmp
outs
sbb
ret
es
xchg
daa
push
and
jno
mov
jb
mov
mov
cmc
mov
sbb
rcl
mov
xchg
push
cmps
mov
mov
xchg
sub
cmp
dec
repnz
dec
mov
sub
xchg
shl
clc
ss
ror
rol
jmp
xchg
sbb
xlat
mov
imul
shl
fld
retf
xchg
je
out
aad
cmps
pcmpeqb
fist
xor
test
fnstsw
inc
ins
or
cmp
push
call
jecxz
mov
stos
inc
js
xchg
icebp
scas
inc
or
fst
call
add
outs
mov
and
js
and
pop
or
pop
leave
cmp
add
shr
jbe
cmp
adc
jl
aas
arpl
pop
js
mov
dec
call
rcr
sbb
imul
and
fld
or
mov
ins
movs
mov
inc
scas
sub
xor
shl
jmp
in
ret
movs
xor
dec
xor
xchg
adc
pop
or
mov
xchg
jmp
push
adc
cwde
dec
cmp
test
test
inc
adc
or
arpl
pop
(bad)
adc
shr
popf
shl
lods
sub
inc
out
and
dec
sbb
fistp
xchg
cs
xchg
aaa
adc
xchg
cs
jp
or
fnstenv
mov
adc
adc
scas
leave
mov
out
adc
mov
add
retf
jno
sub
ficomp
mov
mov
dec
test
jge
idiv
mov
imul
mov
dec
or
stos
xchg
sub
out
aas
into
icebp
outs
mov
mov
fist
mov
lods
mov
mov
daa
imul
addr16
sub
int
inc
daa
mov
scas
mov
and
mov
repz
ret
jns
pop
sbb
fadd
mov
add
outs
mov
and
gs
inc
cld
jmp
fwait
xor
xor
mov
sub
bound
ret
mov
or
cmp
jno
mov
inc
jle
iret
shl
inc
call
pushf
xchg
test
adc
xchg
test
fnstsw
jg
xor
call
sub
mov
cmp
or
loop
add
stos
icebp
call
xchg
jp
or
jmp
add
mov
addr16
outs
rol
nop
icebp
ja
in
vandps
pushf
or
outs
fidiv
rcr
mov
outs
sbb
push
adc
lds
arpl
sbb
mov
ret
and
shl
fidiv
inc
xor
sahf
pop
pop
std
mov
cmp
mov
sahf
lods
aam
add
cmp
cmp
or
mov
pop
icebp
push
out
not
(bad)
stos
fmulp
pusha
pop
mov
and
pop
cdq
std
retf
push
mov
enter
push
mov
jmp
repz
sbb
mov
cdq
cmps
rol
sbb
scas
fucomip
mov
int
fisttp
xor
lods
in
dec
push
add
mov
in
scas
icebp
leave
cmp
dec
sbb
out
ds
cli
pop
stc
imul
add
mov
mov
push
stos
dec
test
xchg
ret
lahf
iret
pop
pop
xor
int
rcr
scas
mov
mov
sbb
mov
inc
dec
test
les
out
pop
mov
or
jmp
push
adc
sbb
sti
neg
ja
mov
enter
or
xor
and
or
jge
and
out
not
inc
and
fwait
shl
or
jecxz
fdiv
pusha
or
cmp
mov
mov
mov
dec
and
inc
sub
sbb
movs
cmp
sti
hlt
nop
shl
xor
test
push
push
mov
sbb
mov
repnz
jne
or
or
push
icebp
stc
and
lea
mov
mov
xchg
popf
add
add
mov
jno
cmp
sub
mov
sub
sbb
je
aam
rcr
bound
xchg
cdq
ins
sahf
stos
popa
pop
sbb
push
call
stc
(bad)
outs
jmp
inc
sahf
jmp
mov
nop
dec
push
jb
sub
xchg
pushf
or
mov
repz
dec
leave
fmul
and
or
cmc
shl
push
sbb
in
mov
shr
or
in
cld
dec
xchg
dec
xor
test
jns
xor
in
or
and
aas
stc
sbb
imul
and
aas
adc
enter
fisub
cli
mov
movs
sub
mov
dec
retf
shl
test
out
and
jecxz
add
cmps
mov
jmp
repnz
inc
mov
cmp
mov
jmp
add
xchg
inc
loopne
or
push
ret
xchg
repz
arpl
sub
sti
lea
xchg
jae
push
jecxz
ret
or
std
outs
xor
push
xchg
cpuid
xchg
pop
dec
lods
sar
das
mov
adc
mov
cmp
(bad)
shl
test
dec
and
ror
out
push
xchg
(bad)
mov
pop
or
push
shr
xor
mov
xadd
out
dec
inc
and
mov
bound
cmp
sub
int
ja
xbegin
fisttp
sbb
mov
mov
push
call
push
outs
sub
adc
in
in
ret
mov
mov
bound
dec
add
push
cmp
xchg
mov
pop
mov
popa
(bad)
es
aad
btr
es
sub
inc
popf
sub
add
mov
push
movs
out
dec
stos
aad
inc
cmp
std
mov
outs
dec
fs
xchg
mov
fisttp
sbb
popf
pop
push
fsubrp
cmps
jecxz
cmp
mov
loop
out
imul
out
mov
bound
sbb
outs
mov
push
mov
or
out
das
daa
ds
jl
or
(bad)
mov
xor
push
xchg
cmp
mov
fsub
sub
lock
inc
gs
fsubr
cmps
inc
jle
and
xor
out
add
fstp
lock
mov
sbb
dec
mov
mov
cmp
mov
shr
xor
cmp
adc
outs
jnp
imul
cmp
cli
call
iret
xchg
mov
pop
xor
push
mov
xor
icebp
fwait
jbe
pop
cld
mov
sbb
add
cmp
js
stos
pop
add
fisttp
inc
fsubp
out
sub
sub
cmc
jo
pushw
jl
stos
scas
jns
int
push
push
and
dec
data16
and
jmp
xor
js
mov
jmp
pop
imul
add
sbb
or
and
or
mov
cli
or
add
outs
in
dec
out
lock
ret
fcom
mov
sti
dec
(bad)
imul
aas
stc
cdq
loop
sub
cmp
movs
call
pop
(bad)
pop
enter
lea
and
pusha
stc
adc
scas
call
sbb
pushf
xchg
fidivr
ds
sbb
cmp
(bad)
jmp
dec
ins
jmp
lods
jnp
lds
xor
sub
enter
pop
sub
mov
out
mov
pop
or
sbb
out
cli
pusha
push
push
mov
mov
jecxz
lods
add
in
inc
xchg
mov
inc
fwait
xor
ror
int
ss
add
xor
mov
stc
call
(bad)
popf
push
mov
xchg
jmp
mov
or
enter
xchg
in
stos
push
cmp
(bad)
push
mov
outs
pusha
xchg
xor
div
shl
jae
pop
stos
pushf
lock
inc
dec
(bad)
jle
xor
mov
add
adc
in
(bad)
adc
mov
mov
fwait
jmp
xlat
lock
je
jl
mov
sub
mov
enter
fs
xor
test
ret
out
mov
in
pop
push
dec
bsr
push
xor
retf
and
or
push
out
cld
or
(bad)
outs
inc
int
data16
adc
dec
dec
mov
or
call
jmp
(bad)
pop
jl
and
push
jge
xchg
cmps
sub
retf
movs
xchg
cmp
and
push
in
test
in
ss
mov
stos
jmp
aad
pop
pop
hlt
jecxz
fnsave
ja
loopne
or
fldcw
add
out
(bad)
popf
adc
jge
idiv
std
not
or
cs
sbb
xchg
sbb
sub
jo
out
sar
cmp
mov
fcmovu
mov
(bad)
push
or
add
outs
aaa
imul
loope
jge
xchg
les
adc
daa
daa
movs
add
in
and
inc
aam
in
ficom
or
dec
(bad)
int3
xchg
cmp
rcr
sub
fdiv
pop
(bad)
jns
ficom
and
stos
mov
adc
mov
push
pop
inc
mov
adc
in
dec
leave
(bad)
mov
adc
sub
popa
ficom
or
jle
mov
and
push
xor
mov
cmps
inc
sub
(bad)
push
into
enter
and
mov
mov
xchg
popf
push
sar
std
cmps
sub
jo
mov
adc
mov
call
pushf
sti
pop
aaa
push
in
test
jo
js
in
nop
xor
and
(bad)
push
lods
arpl
push
lods
sub
mov
test
jmp
sub
sub
or
xor
arpl
ror
arpl
dec
jmp
pop
jne
les
jmp
jl
jbe
lahf
aaa
stos
pushf
xchg
and
and
(bad)
bound
mov
pushf
mov
in
or
cld
ficomp
movs
(bad)
icebp
fst
cmp
push
mov
int3
inc
and
aaa
push
mov
fisub
test
push
scas
stc
push
sti
mov
push
jp
mov
(bad)
(bad)
mov
test
mov
sub
shr
in
ins
ins
enter
pusha
imul
out
jne
jo
and
xchg
pushf
or
and
pop
mov
in
js
test
jle
std
push
pop
test
cmp
int
fs
sub
sbb
ror
adc
xchg
popf
fcomp
sahf
scas
adc
sub
mov
mov
stc
pop
adc
repnz
sbb
sbb
mov
scas
jno
xchg
xor
xchg
sub
cld
ss
dec
loop
fist
ja
xchg
jg
aas
loope
dec
or
jno
clc
inc
mov
mov
adc
inc
movs
pop
mov
sub
adc
cmps
lods
retf
call
and
imul
and
xor
pop
ffreep
imul
pop
push
push
in
push
call
cdq
xchg
push
call
sbb
inc
jmp
sub
jno
mov
xchg
in
inc
iret
push
pop
enter
mov
pop
inc
xor
in
inc
dec
lea
xchg
aas
jmp
and
mov
pop
stos
fwait
nop
add
ins
push
jmp
(bad)
int
or
sbb
xor
cli
lods
gs
dec
in
test
dec
pop
push
or
dec
out
bound
jg
leave
pop
add
popf
jl
jle
dec
pop
pop
cmp
add
lahf
mov
movs
dec
test
iret
xchg
stc
outs
push
adc
adc
push
inc
inc
mov
mov
and
push
loop
add
cmc
dec
sbb
cmp
stos
mov
aad
jl
dec
xchg
mov
dec
ret
or
push
push
ins
outs
int3
repz
gs
(bad)
call
lods
lds
push
or
pop
inc
jl
xchg
neg
lock
xchg
retf
(bad)
mov
jmp
mov
mov
icebp
imul
(bad)
and
inc
dec
xchg
pop
aas
dec
movs
mov
ret
nop
cwde
outs
clc
jmp
std
jae
sub
sahf
pop
popf
fsubr
(bad)
mov
repnz
and
dec
pop
jecxz
sbb
xchg
pop
mov
mov
icebp
es
addr16
adc
popf
inc
push
add
mov
data16
jecxz
pusha
daa
xor
popf
mov
xchg
jb
sbb
inc
into
and
push
and
test
(bad)
cs
lahf
sbb
xor
cmp
into
adc
mov
inc
mov
outs
push
or
add
stc
sub
jno
xchg
retf
inc
(bad)
inc
pop
pusha
push
scas
ret
mov
ret
cmp
sbb
pop
call
aaa
test
into
sbb
mov
js
fwait
pop
lea
in
ins
jo
mov
repz
cmp
jns
and
push
push
cmp
je
cmps
push
rcr
dec
jne
or
mov
sub
loop
cmp
dec
das
sbb
(bad)
mov
fbstp
psraw
ror
mov
xchg
xchg
inc
dec
push
and
iret
sub
or
call
cmp
ins
hlt
les
xchg
cli
test
jmp
std
rcl
lea
out
or
ds
hlt
hlt
mov
mov
inc
lods
loop
cmp
jo
ret
pop
push
or
cli
lds
push
push
mov
jmp
jmp
mov
(bad)
ins
pop
mov
icebp
push
and
fisttp
push
movs
out
cmp
push
inc
test
ret
dec
fisub
adc
shr
add
ins
jmp
hlt
aad
sbb
shl
or
(bad)
jmp
xlat
jg
sti
lea
mov
dec
stc
mov
push
js
in
outs
sti
fild
outs
mov
clc
jns
jbe
imul
sub
stos
push
sbb
dec
imul
mov
ja
jg
or
or
push
fild
in
push
(bad)
jmp
loop
mov
cmp
mov
outs
or
mov
imul
xchg
lahf
mov
push
or
(bad)
out
not
imul
xchg
sub
scas
pushf
push
jmp
xor
psrlw
rcr
scas
js
push
dec
mov
jl
(bad)
fs
(bad)
daa
icebp
call
and
push
dec
shr
push
mov
cs
(bad)
jae
push
xchg
mov
push
xchg
int3
cli
mov
test
pushf
cmp
pop
xor
pop
cmp
mov
test
mov
push
icebp
jecxz
xchg
or
outs
leave
leave
adc
jmp
xor
xchg
lock
aas
sbb
mov
imul
je
leave
and
cwde
jb
movs
fs
jle
push
scas
lock
adc
add
xchg
jmp
cmp
retw
jmp
not
ficom
jae
push
sbb
and
or
push
fnsave
js
add
imul
and
and
jp
cmps
xor
rcl
jmp
add
aam
jae
xchg
adc
cmp
push
xor
adc
outs
jmp
int
jmp
push
and
xor
retf
push
mov
pop
in
mov
test
inc
mov
fadd
cmp
loopne
push
shl
lock
fidivr
addr16
mov
mov
cli
fbld
xor
pop
fst
push
pop
scas
mov
push
(bad)
and
rol
sub
clc
dec
mov
scas
fwait
sbb
sub
inc
fdivr
rol
adc
(bad)
data16
inc
sub
add
fdiv
mov
and
xchg
inc
sbb
inc
adc
popa
movd
scas
lods
pop
xchg
push
outs
daa
inc
sub
ficomp
and
out
jnp
ins
jmp
repnz
das
into
jecxz
pop
loopne
sahf
nop
push
and
test
scas
mov
mov
dec
mov
pop
js
sub
cmps
and
rcr
mov
(bad)
dec
out
outs
dec
js
lods
shr
cmp
dec
mov
xchg
jmp
cmps
hlt
hlt
push
cmp
push
mov
inc
ins
xor
icebp
js
arpl
xchg
mov
cs
push
mov
jmp
loopne
push
jae
lock
xor
xchg
mov
inc
loop
and
dec
pop
cmp
mov
shld
call
jnp
div
fimul
inc
jnp
gs
fnsave
push
stos
aad
pop
mov
pop
sbb
das
imul
leave
pushf
xchg
dec
xchg
loop
retf
mov
jecxz
std
sti
sub
aad
adc
sub
mov
ins
popf
mov
mov
inc
arpl
pop
adc
stos
pop
sbb
inc
mov
popf
enter
jge
cmp
dec
push
std
jecxz
inc
add
lods
mov
mov
or
mov
adc
mov
sub
xchg
retf
lods
popf
jl
mov
sub
mov
gs
bnd
mov
xor
and
lods
inc
addr16
out
adc
push
scas
cmp
addr16
pop
adc
(bad)
gs
aad
mov
xchg
adc
sbb
mov
adc
push
ins
and
outs
in
xchg
test
jge
and
int3
add
lock
sbb
pavgw
or
daa
adc
sar
and
in
jmp
aam
mov
xchg
nop
dec
mov
xchg
cmp
ror
cmps
inc
sub
out
pop
lds
test
mov
cmp
clc
and
jb
mov
xor
shr
jb
sbb
out
mov
push
adc
adc
xchg
adc
test
in
mov
cmp
cmp
hlt
jl
xor
cmp
push
in
leave
ins
xchg
xchg
or
in
push
in
sub
std
pushf
leave
imul
movs
xchg
scas
and
inc
out
dec
jae
mov
retf
ja
xchg
or
test
ret
lahf
sub
or
and
call
adc
sub
add
addr16
jnp
push
mov
shl
sub
mov
stos
cmp
out
lea
hlt
mov
or
adc
sbb
mov
jp
aaa
dec
add
sbb
(bad)
jle
shl
xchg
call
inc
lods
pushf
cmp
loop
dec
pop
fisttp
mov
in
add
outs
lods
mov
jle
fiadd
push
mov
mov
call
sbb
cmp
fs
lahf
out
rcl
or
ja
mov
cmp
rol
outs
jmp
lea
dec
test
mov
jbe
fimul
call
(bad)
jne
sub
addr16
jno
dec
repnz
pop
add
xchg
push
pop
ret
pushf
stos
aam
in
packssdw
scas
pop
in
movs
mov
outs
mov
(bad)
arpl
mov
int
jbe
mov
adc
jmp
dec
inc
test
call
call
inc
repnz
ret
enter
repz
xor
cmps
sar
or
sahf
inc
cmp
add
pop
dec
xchg
sbb
addr16
daa
pop
mov
es
mov
dec
xor
iret
lods
jge
(bad)
adc
push
test
ret
cmps
or
mov
add
stc
push
adc
mov
rcl
xchg
xlat
ror
aas
cwde
pop
loopne
cmc
mov
loopne
repnz
sbb
pop
mov
jl
fs
sbb
add
mov
popf
jg
fwait
call
pop
jo
fistp
pusha
test
scas
or
adc
add
cmp
add
cld
jns
scas
int
pop
and
lock
pop
dec
enter
dec
xchg
aad
sub
retf
xor
scas
ins
jno
or
je
fldenv
neg
ret
cmp
push
iret
jbe
repz
jge
enter
pop
mov
sbb
jne
and
icebp
xchg
int3
push
popf
cmp
enter
mov
iret
(bad)
sbb
push
xor
mov
outs
xor
push
fwait
cwde
mov
enter
adc
mov
inc
orps
pop
mov
add
lock
out
jge
mov
jp
retf
xchg
xchg
test
and
pop
and
xor
jge
mov
and
stos
imul
inc
sti
fisubr
jno
sub
mov
mov
adc
loopne
mov
mov
dec
clc
stos
test
out
jge
stc
sbb
mov
(bad)
mov
imul
or
cmp
movs
mov
mov
mov
(bad)
out
and
and
xchg
icebp
adc
cdq
mov
jge
jl
mov
push
cwde
cvtdq2ps
data16
push
call
fmul
daa
loope
push
leave
fist
mov
jmp
aas
push
fstp
mov
xchg
inc
and
adc
daa
cmp
inc
ficomp
std
xor
dec
xchg
mov
cmp
jmp
xchg
rcr
in
xchg
bound
dec
fs
retf
and
or
pusha
clc
stos
xor
push
loop
mov
mov
push
call
clc
or
jge
test
scas
fistp
sub
fstp
clc
and
stos
pop
sub
dec
(bad)
pop
hlt
clc
stos
iret
push
jns
xchg
xlat
add
xlat
xchg
stos
dec
xchg
sub
cdq
cs
inc
sbb
arpl
out
mov
xor
imul
fisttp
push
sub
and
sbb
fwait
push
add
jl
lahf
inc
cmp
lock
ror
xlat
dec
cmp
fs
mov
inc
fwait
sahf
push
pop
cs
mov
jle
mov
push
lds
loope
dec
jbe
and
cdq
(bad)
rcl
or
dec
dec
jmp
xchg
push
ins
xchg
xor
mov
(bad)
xor
scas
adc
dec
and
ds
popa
jmp
in
adc
or
push
or
xchg
ficom
movs
cmp
daa
push
loope
xchg
xchg
retf
imul
fst
out
out
add
inc
jle
jae
popf
xchg
sub
scas
arpl
sbb
stos
call
fisttp
xlat
jo
sbb
pusha
or
xor
xchg
call
out
loop
popa
add
inc
cmp
imul
jns
push
mov
hlt
repz
je
mov
mov
in
cs
fcomp
pop
lahf
cdq
test
or
sbb
mov
cld
aam
cmc
xchg
cs
(bad)
stos
std
push
in
push
sbb
pop
lahf
shl
pop
mov
mov
fidiv
cmc
inc
retf
adc
sbb
xchg
ret
sbb
mov
cmc
adc
push
sbb
ds
or
(bad)
jb
and
dec
and
adc
cmp
xchg
push
mov
arpl
cmp
repnz
lea
push
cwde
mov
loopne
pop
push
jne
xchg
into
mov
jle
scas
push
and
dec
std
xor
mov
fbstp
mov
xchg
cmps
xchg
inc
cli
int
imul
int3
cmps
es
jnp
bound
leave
scas
aam
test
leave
in
or
mov
adc
mov
xlat
mov
test
(bad)
in
xchg
inc
adc
aaa
in
in
leave
ficom
ds
call
jge
add
cmps
std
stc
div
push
into
push
stc
xchg
aam
add
xor
jb
dec
mov
daa
jge
cmc
dec
in
xchg
push
sbb
mov
bound
jnp
dec
sbb
sbb
lods
leave
jecxz
pop
daa
cs
and
paddw
push
dec
(bad)
out
call
jecxz
xor
xor
dec
cmp
push
add
add
sub
or
mov
enter
ret
jge
daa
in
xor
(bad)
pusha
clc
aaa
xchg
and
dec
out
nop
and
loopne
mov
mov
sbb
adc
xor
xor
dec
pop
sub
in
sti
pushf
pusha
ss
aam
out
dec
sbb
jmp
mov
xchg
push
mov
and
mov
rcl
sub
cwde
lea
pushf
sbb
ins
cli
cwde
sti
lea
push
push
push
out
xor
jmp
test
dec
inc
push
jo
push
sbb
lods
push
sar
dec
ins
pushf
and
xlat
add
mov
dec
cmps
jne
loopne
cmc
mov
iret
in
mov
fadd
aam
rol
clc
push
mov
ins
pop
cmp
lea
xor
xlat
and
ss
outs
jge
repz
mov
cmp
jge
dec
jle
pusha
fcomp
jl
icebp
and
jb
pop
jb
jmp
int
shr
push
or
arpl
imul
sub
add
in
xor
or
mov
jge
dec
popa
(bad)
into
xor
in
or
xchg
addr16
retf
imul
jl
xchg
xlat
aas
stos
pop
jae
inc
aad
addr16
inc
inc
call
fsubr
mov
pop
jb
lods
xchg
lods
xor
adc
mov
jo
rcr
(bad)
mov
test
xor
pushf
sahf
hlt
(bad)
cmp
dec
xor
add
in
add
es
ror
out
movs
call
dec
pusha
xchg
jle
pop
xlat
jo
mov
or
imul
ins
inc
inc
or
gs
sbb
(bad)
and
outs
ja
lea
sub
outs
iret
daa
arpl
mov
push
out
fbld
xchg
inc
jg
mov
xor
jne
add
mov
inc
loopne
jp
aad
in
adc
cmp
out
dec
daa
cld
dec
xchg
dec
test
mov
(bad)
mov
pushf
sub
fst
retf
in
fst
ins
pop
mov
icebp
call
dec
push
test
add
mov
retf
(bad)
out
mov
sub
xor
loop
add
lahf
mov
xchg
data16
dec
clc
rcl
sbb
xchg
sbb
lods
xchg
iret
adc
sbb
aas
mov
dec
lods
js
cmp
sbb
test
outs
rcr
jmp
ja
mov
into
jecxz
adc
and
push
ss
sbb
clc
xlat
xor
add
nop
push
icebp
sbb
xchg
lock
rol
iret
xor
xchg
in
out
sbb
cmp
mov
push
jge
push
enter
cdq
mov
sub
test
movs
(bad)
lods
fldenv
mov
cmp
cmp
cmp
cdq
dec
nop
mov
imul
aas
xchg
idiv
xchg
jge
test
in
popa
xchg
mov
cmp
es
push
popa
xchg
test
jmp
jae
cwde
out
fnsave
jne
adc
or
or
addr16
cs
and
ins
stos
jbe
xor
rol
xor
clc
pop
call
ror
jmp
(bad)
jnp
cmp
(bad)
icebp
icebp
jmp
add
(bad)
jmp
ror
je
inc
retf
mov
xor
xlat
and
mov
fdiv
pop
rcl
push
add
(bad)
stc
inc
js
icebp
out
inc
push
mov
or
mov
leave
imul
aad
stos
mov
pop
sub
dec
rcl
mov
sub
push
add
bound
mov
and
xchg
jmp
leave
jecxz
jb
lea
add
stos
das
or
(bad)
scas
fiadd
mov
imul
in
(bad)
jecxz
add
cmp
cmp
(bad)
mov
mov
push
js
cdq
icebp
std
fcmovb
stos
adc
lahf
sbb
mov
aaa
adc
adc
pop
push
daa
or
adc
pop
(bad)
outs
jecxz
mov
loop
pop
call
jnp
lods
je
outs
shl
shr
dec
into
push
push
cmps
addr16
sahf
ds
mov
dec
ins
es
ret
adc
fistp
xchg
push
xchg
fisubr
or
cwde
stos
jnp
cmp
dec
mov
movs
jne
jnp
out
iret
add
aad
call
sbb
pop
sbb
mov
inc
pop
retf
sub
pop
fwait
or
add
cdq
out
push
loope
pop
dec
inc
imul
ds
psadbw
mov
in
add
outs
popa
fdivp
sub
fdiv
xchg
inc
ins
mov
jmp
pop
ins
lods
jns
mov
mov
mov
xor
sub
jb
push
in
inc
repz
sub
out
jmp
mov
into
call
xor
ja
shl
push
xchg
dec
sub
and
cli
mov
sub
or
es
cmp
cwde
in
test
stos
les
jnp
lods
ja
mov
lahf
sbb
adc
sbb
push
clc
mov
in
daa
mov
adc
or
repz
into
cli
rol
fild
daa
sub
imul
popf
in
mov
(bad)
cmp
enter
xchg
cli
pop
dec
in
out
mov
push
in
push
and
sbb
jo
jmp
mov
push
fcompp
mov
or
sub
jne
stos
les
outs
movs
sub
icebp
(bad)
pusha
xor
outs
daa
adc
jbe
and
xchg
jmp
or
je
js
pop
cmps
xchg
daa
in
sbb
jge
pushf
or
or
adc
mov
mov
imul
lods
sub
mov
cld
or
add
jle
mov
pop
fwait
std
sbb
add
and
stc
inc
ror
sahf
jne
and
sbb
xor
int
inc
push
fsub
mov
dec
sub
outs
dec
xchg
jae
mov
mov
es
push
lahf
sbb
call
aam
mov
jns
mov
cmp
jbe
push
movs
adc
push
(bad)
(bad)
fnstcw
repnz
add
xor
xchg
pop
lds
xor
mov
repnz
ins
jmp
pop
xor
xchg
ret
and
(bad)
and
fs
aas
sbb
adc
pop
stc
push
std
fs
(bad)
fstp
adc
dec
push
jg
fisubr
stc
xchg
adc
scas
icebp
nop
(bad)
clc
sbb
daa
(bad)
xor
test
cli
arpl
jne
rcr
in
int3
cli
add
out
adc
or
xchg
xchg
out
fild
test
pop
jo
dec
push
cmp
lea
xchg
add
int3
dec
mov
pop
int3
jl
daa
xor
popa
mov
xchg
cmp
dec
cmc
ins
cdq
adc
cmps
leave
add
pop
sbb
enter
jae
pop
and
push
aaa
enter
mov
push
add
and
mov
lods
cmc
leave
sbb
mov
jle
mov
jecxz
lock
pusha
xor
shl
stos
movs
or
mov
xor
fwait
mov
fst
adc
pusha
ror
and
scas
or
test
ror
cld
scas
xchg
dec
xor
ficomp
xor
lea
aaa
cmp
bound
and
xchg
jge
pushf
sbb
scas
adc
xor
mov
ror
dec
div
inc
cmp
add
data16
enter
pusha
xchg
mov
(bad)
hlt
shr
mov
scas
cwde
int3
push
inc
push
dec
sahf
mov
jmp
iret
push
out
adc
in
jl
stos
add
or
inc
jnp
imul
in
push
dec
or
imul
leave
pusha
xchg
adc
jo
push
shl
mov
jge
mov
mov
out
mov
mov
ficomp
sbb
je
fs
add
outs
mov
call
cwde
je
ds
(bad)
iret
adc
and
std
(bad)
movs
pop
movs
and
pop
mov
mov
jmp
stc
xor
(bad)
retf
mov
pop
sub
cmps
shl
xor
pop
test
mul
xchg
es
enter
outs
bound
call
into
mov
(bad)
sbb
xor
adc
fsubr
adc
sbb
nop
sub
ret
push
inc
call
movs
cmp
dec
dec
daa
jmp
enter
jne
in
(bad)
(bad)
or
adc
imul
mov
and
dec
add
ds
in
cmc
scas
or
neg
call
xchg
mov
enter
inc
pop
sub
xor
cmp
stos
in
mov
add
cmp
pop
jmp
cmps
cmp
stc
push
fwait
adc
movs
xchg
sar
sub
pushf
enter
inc
out
sbb
ret
jo
sti
jns
or
and
xlat
cmp
xor
popf
es
jae
or
popf
hlt
je
fmul
lahf
dec
inc
adc
pusha
sbb
mov
inc
xlat
dec
inc
shl
mov
mov
pop
inc
loope
or
sete
cmps
sub
repz
mov
dec
fmulp
jo
xor
mov
out
scas
sbb
into
sti
cmp
sub
or
popf
push
ret
popa
sub
sar
inc
(bad)
(bad)
cmp
mov
scas
mov
daa
rol
cmc
mov
movs
ins
push
enter
sub
aam
jb
loop
shl
push
sahf
test
mov
pop
stos
fdiv
je
pop
mov
in
sub
fild
xor
nop
ret
pop
cs
shl
stc
(bad)
aas
pushf
xor
push
dec
cmp
sbb
sub
repz
sub
mov
cmps
(bad)
fadd
daa
mov
movs
cli
aam
and
bnd
and
inc
pop
mov
fidiv
pop
xor
dec
fdivr
popf
xchg
sbb
out
cmps
mov
pop
mov
mov
xchg
aaa
loope
sub
in
xchg
(bad)
xlat
sahf
cld
push
jns
pop
jl
mov
test
pop
hlt
int
push
xchg
sbb
neg
aam
lock
retf
aad
push
movs
jb
nop
stc
dec
and
mov
sbb
push
xor
ret
in
pop
ins
xchg
mov
dec
popa
fdivr
retf
es
adc
cli
scas
ss
jne
call
adc
into
cmp
xchg
rcl
popf
out
cmps
js
jmp
nop
xchg
scas
mov
lds
xchg
jnp
sub
cli
(bad)
jp
push
out
jne
test
xchg
addr16
repnz
dec
add
cs
or
mov
dec
or
and
mov
adc
mov
movs
test
cmp
xlat
mov
and
retf
(bad)
sub
inc
sbb
jmp
cs
or
adc
std
test
pushf
sbb
adc
and
dec
sub
sbb
ret
mov
in
stc
push
push
xlat
fnsave
hlt
pushf
xor
popf
sub
mov
mov
scas
inc
aas
aad
das
push
cmps
ror
mov
icebp
es
sahf
jmp
and
add
xor
mov
mov
sbb
fbld
stc
or
mov
or
jbe
lea
sub
div
xor
call
mov
push
das
loope
xor
in
cmp
jmp
out
pop
pop
pop
inc
lock
jnp
xor
bound
fdiv
(bad)
mov
pop
enter
cdq
loope
div
hlt
popf
xchg
and
sbb
popf
int
ror
ror
sbb
dec
mov
in
daa
mov
fcmovnb
pop
rcr
nop
sar
sti
div
pop
(bad)
xchg
(bad)
into
mov
push
sbb
push
dec
ror
aam
xchg
cdq
fstp
fisttp
into
rcl
jecxz
shl
sbb
xor
(bad)
or
jp
xor
or
mov
mov
add
test
int3
push
add
sbb
daa
loopne
jno
jmp
inc
stos
jns
mov
sub
not
push
cdq
inc
jmp
rcl
inc
xchg
(bad)
dec
test
(bad)
mov
or
outs
in
dec
neg
into
mov
ss
jbe
sub
lods
jmp
sahf
retf
adc
sub
adc
iret
into
push
mov
retf
(bad)
jg
push
int3
pop
ret
outs
xchg
adc
dec
sub
aam
mov
adc
sub
fwait
ins
pop
mov
push
das
cmovnp
repz
xchg
jne
xchg
out
fld
imul
xor
push
repnz
lahf
mov
inc
in
dec
pop
cmp
shl
into
push
loop
push
xor
sbb
sub
ins
mov
outs
mov
(bad)
mov
push
mov
sub
xor
pop
stos
btr
mul
push
js
je
fidivr
(bad)
sahf
int
sbb
imul
push
pop
mov
inc
xchg
cmp
pop
mov
and
test
pop
into
mov
outs
call
xchg
test
(bad)
je
sub
mov
nop
ins
mov
and
mov
sbb
lea
add
pop
dec
adc
call
out
mov
repnz
add
pop
push
sub
retf
adc
jbe
mov
rcl
xchg
sbb
mov
jns
add
lds
movs
(bad)
jl
ds
inc
lods
out
movs
mov
fsubr
stos
loopne
push
add
pop
cmp
movs
stc
nop
inc
mov
jecxz
mov
std
xchg
mov
mov
(bad)
adc
loope
ret
leave
mov
cs
daa
rcr
push
sbb
out
cmp
nop
and
cmp
enter
mov
ret
jnp
je
and
shl
pop
cs
dec
addr16
inc
mov
sar
mov
add
xchg
sbb
rol
push
loopne
rol
das
(bad)
sbb
jmp
aas
aad
mov
fistp
mov
mov
mov
loopne
jl
push
(bad)
addr16
repz
xor
push
hlt
inc
mov
in
add
inc
dec
mov
xor
xor
push
adc
nop
pop
push
sub
mov
dec
pop
lods
add
mov
cdq
inc
aad
mov
pop
aas
ret
adc
inc
imul
inc
data16
ret
jns
adc
jbe
and
mov
sbb
push
add
push
jno
pop
mov
sahf
hlt
stos
outs
sub
data16
mov
sbb
jmp
pop
inc
or
fs
fwait
mov
out
cmpxchg
cmp
retf
cwde
fnsave
pop
bound
cmp
xchg
popf
je
mov
pop
inc
lahf
cli
add
sub
dec
sbb
lods
dec
cdq
leave
xchg
jne
out
sub
or
and
sub
cld
add
jl
test
les
xchg
(bad)
call
into
cmp
jb
(bad)
loop
(bad)
jno
xchg
aas
xor
xchg
or
cmp
je
leave
arpl
mov
rol
add
adc
out
inc
cld
adc
test
pop
cmps
push
push
retf
fiadd
ret
ret
fdiv
jg
out
sbb
push
inc
push
imul
test
das
pop
xchg
inc
sbb
iret
and
dec
lea
dec
fwait
gs
daa
mov
loop
test
shl
loopne
pop
dec
lods
inc
cmp
inc
mov
das
aam
pop
pusha
stos
pop
jo
loopne
jne
aam
hlt
lds
mov
test
xor
cmp
loop
and
out
and
and
mov
inc
outs
outs
push
mov
jl
dec
xchg
retf
pop
pop
and
pusha
loop
iret
test
jae
dec
push
mov
fcmovnu
jno
jne
shl
mov
out
cmp
or
mov
in
mov
iret
ins
(bad)
aas
and
inc
loop
xor
loop
cli
mov
dec
jnp
push
lods
pop
outs
iret
(bad)
(bad)
push
jmp
daa
cli
in
lahf
dec
jns
les
jg
fwait
jbe
xlat
xchg
push
daa
fadd
push
xor
daa
sub
xor
jae
test
out
ficom
dec
cmp
xchg
mov
push
call
movs
jmp
push
fs
fsubr
int
add
inc
bound
mov
leave
sbb
mov
out
icebp
sti
cmps
push
aaa
retf
mov
mov
fdiv
push
push
lods
sbb
movs
call
adc
pop
xor
or
add
pop
mov
xor
lea
test
jnp
or
jl
push
xor
nop
fcmovnu
daa
sub
(bad)
movs
fld
dec
std
jle
fdivr
jge
dec
adc
push
dec
imul
xor
push
mov
and
jge
into
pop
mov
aas
cmp
add
jb
arpl
int
and
sbb
rcr
adc
daa
pop
(bad)
sbb
mov
dec
pop
xchg
sbb
imul
movs
ret
adc
and
mov
int
into
jg
sbb
loopne
fisttp
add
push
mov
xchg
sbb
lds
(bad)
fcom
or
mov
inc
lea
fcmovnu
mov
rcl
fnstcw
mov
outs
inc
xor
push
fwait
jp
arpl
shl
jbe
or
or
inc
pop
mov
jns
inc
loop
iret
sbb
add
mov
mov
push
addr16
cld
inc
cmp
push
pop
and
fcomip
data16
ins
adc
pop
cmp
sbb
out
loope
xchg
mov
in
push
test
pop
fs
das
pushf
xchg
mov
jge
shr
dec
inc
dec
jecxz
inc
xchg
or
sbb
xchg
adc
fcomp
mov
call
lds
cwde
ror
adc
add
mov
push
push
and
adc
dec
mov
sub
ins
adc
psrlq
stos
(bad)
imul
test
and
push
xor
inc
test
shr
pop
push
mov
mov
je
call
scas
inc
jp
icebp
sbb
outs
cmp
jp
push
aam
ret
jl
shl
pop
sbb
inc
pop
sahf
sahf
sub
fucomp
xchg
pop
dec
iret
movs
popf
mov
mov
mov
add
mov
xchg
in
pop
pusha
ror
xchg
lock
or
out
outs
dec
jmp
sub
je
push
test
push
sbb
inc
test
add
cli
jnp
add
pop
outs
fist
jmp
test
mov
mov
jle
mov
loopne
movs
test
imul
into
xchg
nop
jb
add
xchg
mov
les
je
pop
adc
(bad)
stc
ds
and
mov
fnstcw
imul
(bad)
jp
ret
loope
cmovae
retf
push
movs
dec
sti
sahf
stc
cmp
into
out
and
lahf
pop
shl
(bad)
gs
lods
dec
sbb
pop
fnstenv
std
mov
mov
mov
push
clc
ficom
pop
xchg
jbe
call
imul
sub
or
add
imul
push
pop
inc
ret
or
push
mov
pop
add
add
pop
jg
icebp
(bad)
push
icebp
loopne
pop
pop
into
rcr
scas
in
pop
sahf
shl
pop
lds
imul
push
add
shl
popf
out
pushf
outs
fwait
call
push
(bad)
mov
add
frstor
jne
xor
push
inc
imul
es
xchg
or
add
push
loope
fiadd
pop
push
call
xlat
dec
mov
ss
nop
pop
into
dec
in
xchg
(bad)
jns
aam
stos
shr
mov
js
out
div
rcr
pop
movs
jg
cs
retf
ror
ret
mov
enter
pop
(bad)
outs
lock
(bad)
cmc
adc
div
mov
pop
and
sbb
shl
xchg
xor
ror
popa
ins
cld
mov
mov
pop
adc
imul
lods
xchg
nop
sub
xor
(bad)
mov
gs
jmp
fsubp
in
xchg
or
add
mov
loope
pop
sub
sub
lods
push
and
push
fidiv
cmc
mov
and
sub
in
inc
jbe
cmps
cmp
xor
cld
test
out
fwait
or
xor
addr16
movs
mov
add
pop
mov
(bad)
xchg
popf
or
jmp
mov
xor
jp
sbb
out
sbb
aam
outs
cmc
lds
pushf
test
jge
cmp
shl
rcr
pushw
js
pop
outs
(bad)
jb
dec
jo
fcmovne
cwde
mov
pop
cwde
pop
jle
xor
xchg
test
mov
cs
jbe
shl
jb
cs
xor
mov
adc
dec
inc
push
arpl
adc
stc
mov
and
xchg
add
cmp
jle
and
cmp
xchg
aad
arpl
jecxz
push
ds
xchg
and
and
iret
xchg
jbe
mov
xlat
jo
je
sub
rol
sub
mov
adc
cmp
push
mov
je
dec
ds
iret
push
cmp
jo
xchg
mov
(bad)
sbb
mov
sbb
shl
pop
scas
mov
xor
popf
dec
dec
fmul
pop
cmp
jmp
rol
sub
jle
pop
int
scas
cmc
sub
popf
sti
jmp
cmp
cwde
or
mov
add
pop
or
xor
rol
mov
and
int
xchg
repz
mov
imul
aaa
inc
cmps
test
ret
push
mov
pushf
cmp
sbb
xor
inc
fidiv
jmp
mov
xchg
add
add
or
inc
ja
add
push
ss
int
lds
ret
push
mov
out
ins
int
mov
rol
fcomp
push
inc
mov
push
jno
movs
sbb
xchg
push
(bad)
cli
inc
jge
jno
(bad)
add
outs
xor
adc
xchg
dec
ror
push
stos
call
cwde
xlat
into
js
loope
cwde
add
jle
arpl
sub
sbb
jmp
rcr
add
inc
inc
push
xchg
adc
(bad)
xor
xchg
push
es
mov
out
fucomip
(bad)
fwait
dec
lods
cld
inc
int3
inc
add
push
push
push
dec
cmp
aaa
call
cmp
fwait
or
and
mov
cwde
mov
(bad)
shl
push
out
pop
or
aas
cdq
xchg
or
sub
adc
in
xchg
loope
jo
push
loopne
ja
jle
jno
call
xlat
(bad)
xor
fwait
ja
popf
jns
repnz
mov
mov
into
cdq
xor
into
xor
inc
bound
es
leave
push
mov
sub
push
lea
mov
dec
pusha
mov
cmp
lea
and
ja
outs
mov
push
pmaxsw
aad
test
pop
lahf
(bad)
js
xchg
mov
mov
(bad)
les
add
add
and
mov
call
cmc
pop
shl
lods
ret
pop
mov
dec
bound
ins
mov
fisubr
movs
mov
xchg
or
test
ds
xor
mov
ds
jne
jb
out
mov
push
xor
xor
pop
jae
xchg
jbe
adc
jl
cld
or
movs
ja
pop
js
sub
call
jbe
(bad)
jns
mov
inc
push
and
cwde
cld
icebp
sti
jno
inc
inc
iret
cmc
(bad)
dec
xchg
push
dec
jmp
(bad)
ss
jb
mov
dec
push
xor
xchg
push
mov
mov
sti
jecxz
repnz
shr
adc
icebp
add
and
shl
dec
fisubr
bound
dec
pusha
xchg
add
xchg
outs
adc
shl
or
scas
loope
bound
mov
adc
and
mov
mov
mov
and
or
jmp
scas
inc
fisttp
xchg
xor
ficom
push
mov
dec
adc
je
aad
sub
mov
mov
cmp
das
pushf
adc
adc
iret
data16
cmp
inc
cmps
xor
cmp
pop
sahf
scas
test
and
cld
xchg
pop
sar
daa
fistp
inc
adc
adc
jne
xchg
lea
out
or
cmp
xchg
push
ja
pushf
dec
das
xchg
fistp
fs
inc
and
lods
shl
jle
lods
pop
sbb
loop
lock
in
push
or
mov
in
cmp
cmp
and
xor
sub
xchg
stc
xchg
xor
(bad)
fs
dec
repz
lahf
movs
mov
and
aaa
mov
in
int
push
and
jecxz
cmps
lods
data16
pop
push
cmp
mov
dec
push
ret
int
and
dec
mov
adc
bound
push
enter
mov
adc
push
stc
mov
fcmovbe
icebp
mov
dec
jecxz
jns
mov
test
jmp
mov
xor
call
int3
and
jb
cmp
mov
and
inc
add
cmp
fsubr
or
shl
sbb
lods
in
imul
scas
in
jne
jnp
dec
cmp
and
ins
sub
sbb
retf
push
stc
adc
pop
mov
scas
mov
jbe
in
movs
cmp
sbb
test
push
adc
jp
add
cmc
mov
cmps
sar
adc
mov
dec
mov
push
jecxz
mov
into
pop
push
ret
xor
bnd
fcmovnb
loope
test
inc
mov
or
jge
mov
test
adc
lock
or
mov
pop
adc
inc
leave
add
adc
retf
inc
jb
or
sbb
adc
xor
ret
ficomp
ret
push
jl
jmp
retf
add
enter
ret
js
mov
mov
cmp
add
mov
pop
or
daa
jo
int
dec
push
jg
push
xchg
in
sbb
dec
and
pop
aas
aad
push
or
call
enter
xchg
jecxz
div
loop
int
data16
daa
not
cdq
push
lods
fistp
cld
shr
je
cmp
or
popa
mov
mov
dec
shr
pop
faddp
cmps
xchg
in
jecxz
popf
mov
fidiv
hlt
ficom
ret
jmp
jbe
and
mov
clc
xor
xor
and
xor
mov
shl
jle
sar
sbb
lea
mov
ret
xor
leave
sub
popfw
stos
jbe
call
into
jmp
cwde
mov
mov
jge
int3
aas
mov
push
jg
cmc
aad
and
in
jmp
lods
adc
lahf
arpl
aad
xchg
(bad)
imul
dec
sub
loop
add
pop
lock
push
mov
sahf
pusha
pop
or
pop
icebp
test
cmp
leave
cmp
mov
sti
outs
mov
or
mov
sar
movs
lock
sub
mov
xchg
sahf
fcomp
cmp
enter
dec
adc
fldenv
sub
xchg
je
arpl
sbb
and
dec
les
dec
scas
add
lods
retf
mov
or
lods
and
xlat
xchg
loope
xor
stos
mov
std
(bad)
pusha
or
xchg
(bad)
xchg
mov
cli
cmp
add
pop
pop
xchg
sbb
lock
invd
cmp
jbe
retf
les
dec
out
or
in
xchg
sar
mov
cmp
aas
fstp
out
in
push
inc
out
pusha
mul
or
pop
and
test
wbinvd
retf
or
or
sub
cld
jp
jmp
lahf
dec
mov
xchg
imul
arpl
inc
jae
pop
pop
mov
movs
sti
sbb
je
ror
jg
stos
gs
jb
sub
sbb
add
dec
cmp
inc
mov
and
imul
jmp
movs
test
push
xchg
inc
xchg
mov
xor
sub
fstp
(bad)
(bad)
push
push
xor
aad
jne
mov
imul
jle
mov
jp
mov
test
aaa
add
cmp
add
xor
or
into
arpl
aas
jmp
in
rcl
dec
clc
cmp
xor
test
pop
push
push
adc
enter
mov
jp
into
xchg
shl
pop
sbb
sbb
dec
cmc
cmc
xor
mov
cmp
int3
push
sub
add
cmps
pop
or
mov
push
mov
add
arpl
jg
imul
fs
add
lock
ret
test
loopne
jle
xchg
add
(bad)
xchg
pop
add
and
ror
pop
(bad)
xor
(bad)
out
sub
inc
shr
jb
mov
push
push
xchg
jp
dec
scas
fwait
and
mov
ins
arpl
pop
(bad)
mov
aaa
icebp
mov
inc
mov
stos
mov
jecxz
shl
push
and
dec
shl
push
sahf
xor
push
mov
push
add
(bad)
fsubr
push
dec
adc
out
adc
add
pusha
imul
les
push
leave
mov
repz
cmp
cs
adc
test
adc
scas
repnz
shl
push
mov
cld
jg
out
test
mov
icebp
rcr
push
mov
pushf
dec
js
(bad)
pusha
cmp
iret
pop
fbld
rol
sbb
push
jo
sbb
xor
xor
js
js
retf
pop
jp
mov
dec
out
rol
out
push
sbb
xor
cmp
inc
lds
xchg
arpl
fistp
jbe
xlat
in
pop
xor
ficom
or
and
ins
lods
jbe
inc
loope
pop
pop
les
xchg
inc
je
sbb
cdq
push
imul
bound
cwde
sbb
aaa
cmp
and
xchg
jmp
mov
fwait
push
xchg
xor
iret
mov
scas
outs
xchg
sub
jmp
ja
test
hlt
iret
popf
mov
cmp
push
stos
test
lods
call
push
rcr
imul
test
call
test
jb
xor
rol
fwait
clc
js
mov
out
mov
sub
push
in
mov
adc
ins
mov
aam
push
into
sub
push
pop
sub
dec
ret
jbe
(bad)
push
push
push
int
fbld
sbb
sbb
or
dec
jmp
stos
inc
mov
pop
in
ret
jne
rol
or
xchg
outs
lahf
je
ins
in
xchg
movups
js
mov
xchg
in
nop
lahf
es
jl
clc
sbb
mov
into
fmul
in
cwde
pop
cmp
sahf
mov
mov
ins
clc
or
adc
jne
int
jmp
shr
push
std
or
loop
cli
repnz
int
out
shl
xor
aam
lahf
shr
jg
sub
push
push
rcr
xor
rol
cmp
jns
or
or
dec
cmp
jnp
or
(bad)
xchg
in
rol
dec
inc
cmp
dec
xor
jae
push
push
pop
cmp
hlt
and
sub
sbb
cld
or
mov
ret
mov
mov
lods
jb
fdiv
ins
int
jle
cli
inc
scas
pop
rol
adc
jne
mov
ficom
sbb
into
or
add
fwait
dec
or
mov
enter
jo
xor
mov
cdq
jnp
cmp
lods
lods
and
pop
sahf
fadd
addr16
pop
dec
mov
loopne
popf
ja
xchg
test
pop
xchg
sahf
out
xchg
adc
lock
loop
outs
sbb
jo
cmps
lods
cmp
ret
push
imul
addr16
stc
adc
sub
scas
shl
mov
loopne
out
call
inc
pop
hlt
jo
xchg
aaa
iret
dec
call
inc
and
fcmovu
pusha
das
call
push
xor
bound
outs
pop
mov
adc
sti
imul
jmp
jecxz
rol
sub
dec
rcl
jns
ds
push
lds
lds
push
adc
xor
xor
adc
sbb
mov
push
xchg
push
mov
cmp
push
pushf
adc
xchg
jp
xchg
scas
out
mov
mov
mov
in
outs
inc
js
cld
inc
out
stos
cmps
mov
mov
dec
fld
rol
inc
sbb
mov
test
xor
cmp
aaa
dec
imul
movs
jo
inc
inc
sub
data16
push
(bad)
xor
jg
icebp
pop
xor
fstp
shl
lds
pop
in
loopne
aam
pop
dec
bound
jp
sub
jg
mov
pop
mov
pop
stc
stos
and
jle
leave
jge
(bad)
or
cmp
rcl
scas
add
inc
daa
add
xchg
sbb
stos
je
mov
pop
mov
test
aas
out
cmp
sbb
pop
retf
push
popf
jb
cmp
ds
jbe
cmp
add
aaa
fimul
push
mov
push
ret
addr16
into
jg
cdq
gs
hlt
leave
xchg
jl
mov
cmps
jnp
sub
pop
xor
adc
mov
mov
xchg
adc
add
adc
aad
ss
cmps
mov
enter
lods
inc
(bad)
pop
inc
mov
and
arpl
cmp
daa
or
aas
adc
pop
data16
pop
les
cmp
cli
test
jl
sti
js
sbb
into
lock
xor
cmp
push
jmp
xchg
sbb
adc
sub
(bad)
sti
sbb
sbb
pop
cwde
mov
pop
adc
pop
inc
cld
add
bswap
popa
mov
dec
xor
and
pushf
sti
inc
sbb
sub
dec
lea
cwde
rol
mov
push
pop
dec
push
shl
pop
js
pop
outs
cmps
(bad)
(bad)
cmp
outs
or
stos
dec
retf
sub
pop
cmp
(bad)
data16
loop
(bad)
fcmove
mov
adc
pop
adc
leave
mov
mov
scas
and
inc
sbb
lods
xchg
sbb
pusha
sub
xchg
jge
pop
in
rcl
dec
aas
rcr
inc
adc
ror
aad
outs
adc
fdivr
into
cmc
add
fistp
scas
inc
inc
mov
xchg
add
mov
fnstsw
repz
mov
cmps
inc
mov
adc
loopne
test
mov
sbb
push
xor
jae
mov
or
or
inc
es
dec
jmp
mov
in
cmp
jmp
gs
(bad)
pop
aaa
fild
or
hlt
jb
mov
pushf
fwait
mov
add
retf
rcl
cmp
jge
sbb
adc
stos
pop
xor
test
ins
inc
fmul
dec
or
fld
jae
fst
add
jnp
nop
lock
adc
stos
sub
movs
push
repz
add
fsubr
rol
or
xor
push
inc
push
test
and
stos
cwde
mov
cdq
aas
aaa
sbb
sbb
push
into
cdq
ins
out
dec
push
mov
fs
push
pusha
lods
xchg
adc
stc
dec
into
xchg
and
mov
daa
icebp
push
pop
and
or
jnp
cdq
sti
cmp
or
sbb
and
lods
adc
push
fmul
aam
pushf
add
xlat
imul
mov
inc
dec
sti
repz
into
addr16
pop
mov
and
ret
xchg
hlt
sub
cdq
into
hlt
out
mov
fadd
mov
mov
imul
push
shl
ins
loope
jg
mov
lods
mov
leave
and
loop
pop
out
icebp
jae
clc
popf
rcr
mov
leave
fucomip
jae
cmps
or
std
imul
call
retf
mov
(bad)
mov
gs
inc
arpl
mov
xor
mov
dec
repz
popf
in
jl
push
sub
jnp
and
mov
rcl
jne
es
mov
in
or
jb
stos
and
xchg
dec
fwait
dec
ds
or
push
cmp
test
push
cmps
and
cmp
jo
out
sub
jmp
cmp
ret
inc
pop
or
fwait
sti
jp
cld
cmp
in
rol
push
es
mov
mov
popa
jg
test
stc
cs
jle
sub
lods
in
pop
test
mov
test
mov
inc
dec
pop
xchg
sub
inc
(bad)
lahf
xchg
inc
mov
fidivr
lahf
test
xor
lea
pmovmskb
and
loope
out
out
cmps
and
test
xchg
add
add
xchg
jp
sbb
mov
mov
in
xor
fisub
adc
inc
xchg
adc
jle
ins
jns
mov
push
sar
iret
adc
data16
shr
mov
iret
inc
shr
mov
cdq
mov
sldt
aam
xchg
das
bndldx
cmp
bswap
xor
push
data16
sub
(bad)
rcl
not
pop
sbb
push
enter
or
sbb
ds
clc
xchg
sbb
test
fstp
sub
push
mov
cmp
and
mov
lods
xor
xchg
mov
jmp
pushf
iret
ja
mov
or
out
aad
pop
jno
(bad)
mov
sub
into
mov
fcmovne
mov
inc
xchg
cld
(bad)
fsubr
jae
mov
add
sbb
add
xchg
imul
ins
jl
xor
push
mov
mov
popf
mov
mov
fwait
call
outs
imul
xor
push
lea
pop
int3
xor
sub
(bad)
sub
call
xor
mov
call
stos
adc
xchg
pop
fninit
lods
shl
mov
sub
out
or
scas
mov
shl
add
fs
rcr
jge
jecxz
icebp
fidiv
or
jo
pop
pop
enter
sbb
fisttp
jecxz
test
pop
or
iret
cmc
inc
lds
imul
cmp
dec
daa
ds
dec
out
and
sahf
or
call
iret
fist
dec
ret
outs
or
jns
gs
pop
jns
adc
js
repnz
mov
pop
out
ins
jecxz
xchg
jb
std
loop
add
and
ret
push
or
ror
xchg
and
aas
adc
shr
xchg
sti
xor
(bad)
sbb
int
imul
mov
adc
call
jae
xor
sbb
hlt
inc
lods
in
and
ins
mov
out
je
mov
ja
mov
leave
(bad)
(bad)
mov
xlat
pop
push
mov
hlt
cmp
mov
shl
stc
and
dec
loopne
loop
pop
out
push
fild
aas
test
mov
les
sub
retf
fwait
mov
xchg
outs
xchg
jge
loope
pop
or
xor
inc
pop
daa
mov
cmp
in
inc
test
loop
and
mov
pop
xchg
push
aaa
pmulhuw
mov
xchg
mov
cmp
cmps
pop
xor
rol
cmps
mov
movs
or
cwde
pusha
adc
mov
or
in
xchg
pop
mov
add
cmc
test
push
xor
outs
repz
jnp
bnd
cmp
and
cwde
push
mov
pop
cmp
das
pushf
xchg
cmp
mov
pop
mov
movs
jno
jle
(bad)
ficom
mov
retf
cmp
and
push
retf
xchg
cmp
jb
add
out
mov
in
(bad)
in
pop
xchg
das
ffreep
mov
pop
and
outs
or
retf
iret
inc
or
adc
(bad)
daa
dec
pop
out
aaa
cmps
adc
loopne
mov
int3
sbb
loopne
inc
cmp
inc
xor
dec
add
jb
not
mov
jns
xchg
xchg
into
repz
push
cld
pop
dec
cwde
xlat
je
add
mov
loopne
and
leave
and
cmc
cmps
push
and
std
cmp
inc
cmp
out
sub
aam
(bad)
pop
sub
pop
and
sub
call
jecxz
push
xchg
push
or
repnz
out
dec
sbb
shl
addr16
push
and
adc
pop
adc
xor
ret
sub
ficomp
xor
and
mov
add
leave
int3
xor
call
(bad)
sti
mov
cmps
jae
aas
jnp
jecxz
inc
mov
add
mov
ret
dec
arpl
out
pop
push
sub
je
fadd
cmc
and
neg
dec
fs
mov
xchg
stos
mov
pop
div
mov
repz
aas
nop
add
or
push
pop
cld
mov
and
add
ins
outs
or
xchg
imul
pop
movs
dec
mov
jnp
push
dec
mov
mov
inc
lea
cmps
push
pop
call
(bad)
jmp
or
add
bound
mov
push
test
jmp
xchg
stos
je
pop
movs
stos
pushf
inc
push
push
jl
add
fimul
ds
jl
xor
and
jge
mov
inc
cdq
inc
mov
lahf
inc
jbe
test
sbb
push
xor
mov
aam
pop
retf
imul
out
stc
adc
into
jmp
and
xor
out
fisubr
fidivr
and
push
stc
push
cmps
mov
sbb
cwde
test
mov
mov
push
and
adc
dec
xchg
std
fisub
jmp
cmp
mov
repz
mov
or
scas
loopne
mov
mov
xchg
jg
push
push
out
jge
jmp
pop
pop
jle
je
rol
cmc
sub
sar
ja
mov
xor
push
adc
inc
popf
sar
pop
xchg
and
sub
cdq
in
aas
inc
lods
mov
mov
repz
ret
xchg
jae
fcom
add
mov
push
mov
xor
hlt
mov
xchg
xor
mov
jecxz
jp
xor
mov
jnp
retf
sub
bound
inc
sbb
mov
test
inc
sub
push
cmps
ins
inc
gs
mov
xchg
fs
jno
loop
aas
dec
scas
cmp
mov
mov
adc
push
aad
inc
and
shr
cmp
popa
movs
jne
adc
sbb
ja
lock
mov
dec
sbb
fcomi
push
popf
sbb
push
jno
jmp
mov
cmps
popw
outs
gs
pop
push
retf
push
cmps
dec
pop
mov
xor
inc
dec
jl
inc
mov
into
adc
cmp
jb
cwde
xchg
cmp
jns
mov
dec
dec
dec
pusha
fnstenv
scas
jecxz
pusha
inc
stos
mov
aas
sub
add
je
mov
or
jb
aas
mov
mov
nop
or
mov
pop
push
in
pusha
std
mov
iret
jmp
aam
lock
xor
mov
ja
fsub
rcr
cmp
(bad)
cs
xchg
aaa
sub
push
ss
pusha
xchg
xchg
mov
loop
pop
sbb
adc
and
retf
mov
or
cmp
loopne
push
ss
out
sub
(bad)
ror
fwait
outs
fidivr
inc
xchg
mov
jp
mov
jbe
lods
add
lock
loope
call
data16
or
jge
add
test
rcr
jecxz
xchg
push
xchg
xor
test
push
mov
shl
cmc
pop
div
mov
aaa
push
or
add
xlat
aas
retf
and
data16
xchg
data16
and
mov
mov
cmp
sti
popf
sbb
inc
iret
push
adc
sahf
push
repnz
je
adc
sahf
pop
jle
or
pop
jl
std
out
sbb
daa
adc
xor
lea
loopne
cmp
xor
mov
stos
outs
xchg
clc
cmps
and
movs
and
nop
push
bound
enter
in
stc
and
xor
nop
sub
add
movs
mov
pop
cmps
ss
jge
or
push
sbb
push
pop
fwait
test
scas
pop
lds
adc
data16
lds
xlat
(bad)
push
xchg
js
adc
retf
cwde
jmp
and
je
int3
enter
inc
mov
sub
cmc
(bad)
icebp
data16
xchg
push
sbb
cli
cdq
pop
ins
stos
jmp
inc
lods
sti
push
push
les
daa
adc
inc
sub
popa
or
jmp
xchg
mov
sbb
fcmovnb
or
enter
lock
xor
sahf
or
jmp
call
call
clc
clc
mov
(bad)
mov
mov
sub
iret
sbb
jecxz
test
mov
inc
cld
push
pop
xchg
mov
fwait
rol
jecxz
cli
sbb
push
push
les
ins
loope
jle
jnp
add
pop
mov
test
sub
mov
push
mov
cdq
imul
sahf
cdq
adc
pushw
adc
pop
pop
xor
and
add
mov
js
int
mov
mov
cmp
test
repz
add
pop
jae
outs
cmps
stos
dec
pop
loopne
imul
pop
dec
call
fisttp
push
add
out
dec
sbb
lds
call
pop
aas
adc
adc
cmp
mov
ret
or
jecxz
ficomp
xlat
loope
mov
jmp
mov
mov
mov
fisub
fdivr
es
xchg
sub
cmps
add
dec
(bad)
mov
daa
sbb
cdq
inc
xor
push
pop
adc
je
pop
gs
mov
rcr
cmp
ds
(bad)
hlt
xor
cmc
push
mov
ss
ins
es
clc
popa
lods
jl
pop
call
ins
mov
std
mov
mov
add
cmps
int3
movs
xchg
inc
pusha
ret
sbb
pop
popa
out
in
pop
jle
or
aaa
fisubr
hlt
push
cld
pop
dec
inc
cmp
icebp
push
or
int
or
mov
repnz
adc
hlt
sbb
jae
dec
jbe
mov
push
aaa
jmp
ss
pop
jb
or
xchg
cld
in
leave
out
mov
cmp
lock
ds
add
and
loopne
dec
(bad)
das
cmps
jnp
fwait
add
pop
xchg
jp
push
lods
call
push
fadd
cmp
data16
pop
int3
jnp
retf
xchg
aas
std
pop
cmp
pop
cdq
mov
arpl
cli
nop
xchg
dec
in
inc
xchg
mov
push
and
mov
sub
inc
and
pop
cwde
sbb
and
leave
movs
cmc
push
cmp
xor
retf
std
dec
mov
clc
cmp
pop
leave
or
out
jmp
aad
popf
ja
push
xor
loop
pushf
jnp
xchg
call
int
mov
and
fldcw
or
in
repz
jl
xchg
lock
sub
arpl
mov
cmp
sub
pop
ficom
lods
pusha
hlt
jb
xchg
cmp
mov
adc
mov
adc
and
outs
leave
cmp
and
rcl
add
sub
xchg
sub
sbb
dec
cld
(bad)
jmp
xor
daa
test
pushf
push
mov
jg
js
iret
push
lods
pop
ins
addr16
repz
cmps
and
pusha
outs
imul
mov
lock
dec
jae
in
inc
mov
stos
stos
add
cld
mov
mov
aad
dec
psubsb
add
lods
or
aad
pop
add
push
mov
shr
aad
test
lea
movs
sbb
sti
push
rcr
adc
inc
sub
pop
dec
dec
pop
sbb
xor
adc
in
inc
cmps
sub
dec
rcr
mov
not
push
or
mov
cmps
movsx
jno
jno
push
push
or
mov
dec
shl
loop
sbb
punpckldq
jg
call
pop
xchg
mov
gs
mov
ror
loope
pop
push
cmp
jmp
adc
fild
pushf
mov
or
mov
sbb
xlat
xchg
inc
add
xchg
js
sbb
xchg
push
xor
les
mov
cmps
std
sub
jne
stos
jp
pushf
imul
stc
addr16
add
xor
ret
cwde
cmps
or
add
fisttp
popf
pop
int
mov
push
push
sbb
jnp
mov
rol
jg
fist
add
cdq
dec
aas
daa
jno
sub
mov
or
push
jns
scas
bound
mov
jle
out
fimul
sub
jp
or
push
mov
lahf
xchg
add
and
pop
xchg
ja
mov
xchg
and
sub
mov
dec
push
and
mov
and
lods
xchg
add
cdq
pop
outs
fsub
push
imul
pop
xchg
cdq
ret
mov
cmove
icebp
ss
inc
pop
xchg
add
xchg
mov
push
jno
xor
fwait
and
pop
adc
mov
xchg
dec
xor
adc
push
pushf
pop
dec
push
fwait
push
sub
mov
sbb
mov
call
in
mov
jge
jnp
xchg
fnstsw
xlat
add
mov
sbb
pop
jp
and
jl
call
cmc
mov
icebp
aad
cdq
outs
es
movs
xchg
mov
jno
inc
jns
push
dec
jno
mov
jbe
pop
fcom
and
iret
mov
mov
pushf
call
xchg
or
jp
cdq
mov
out
push
addr16
sub
inc
dec
and
ror
loopne
jnp
shl
fwait
in
popa
mov
scas
test
push
pop
pop
outs
mov
scas
mov
ins
jge
sti
aas
fisubr
inc
fwait
leave
mov
mov
mov
jne
fstp
ja
je
cmp
(bad)
xchg
mov
shl
unpcklps
lods
push
sub
jle
jo
sahf
(bad)
adc
test
int
nop
dec
lods
or
retf
add
inc
test
in
not
aad
sti
aaa
in
or
cmp
ret
jns
and
mov
sar
aas
mov
and
inc
loopne
popf
mov
call
(bad)
dec
xchg
xlat
jl
pop
cmp
pop
xchg
sub
test
shr
je
or
div
xor
pop
or
aad
ds
jbe
add
scas
imul
ret
fcomp
(bad)
popa
mov
adc
mov
fsub
sub
fwait
retf
push
sub
out
repnz
in
rcr
ficomp
data16
push
nop
xchg
pop
clc
scas
jl
pop
addr16
mov
aam
pop
fcomi
outs
cmp
out
push
hlt
js
mov
mov
and
(bad)
pop
retf
ret
jno
std
shr
fxtract
test
(bad)
lock
fsubr
test
xchg
ds
cmp
mov
sub
add
xchg
and
aad
lods
inc
sbb
std
je
in
mov
sub
std
addr16
jno
(bad)
sbb
test
inc
mov
(bad)
lds
cmp
xor
push
xor
and
jnp
mov
mov
and
jne
cdq
(bad)
mov
clc
jnp
fiadd
dec
int
add
test
(bad)
mov
or
sahf
mov
data16
sbb
loopne
adc
mov
dec
sbb
xor
mov
xchg
repz
mov
sbb
sub
add
fs
retf
call
(bad)
xor
fs
or
sub
fs
push
retf
int
lods
cmp
add
outs
mov
scas
inc
pop
mov
call
popa
js
pop
shl
push
adc
xchg
ins
xchg
cmp
mov
xor
and
sub
cs
inc
dec
call
xchg
xlat
hlt
mov
enter
ja
inc
and
jb
dec
fucom
outs
and
dec
xchg
rcr
in
rcr
inc
pushf
rol
hlt
jmp
fild
int3
push
jge
out
(bad)
loope
inc
mov
dec
pop
jmp
or
imul
fcom
cmp
push
pop
pop
int3
out
inc
jbe
mov
jmp
pop
dec
push
xchg
(bad)
into
scas
movs
add
data16
ja
push
xor
jns
frstor
pop
ins
sbb
aas
and
xchg
dec
call
jo
shl
aaa
dec
cwde
mov
call
popf
fs
test
(bad)
loopne
xor
int3
pop
scas
imul
sar
mov
rcl
push
in
imul
icebp
popa
call
sar
out
call
out
sar
mov
sbb
mov
cmp
sbb
or
dec
ror
mov
add
jno
fistp
les
xor
pushf
scas
jo
mov
arpl
repz
push
test
mov
repnz
shl
nop
sbb
cmp
mov
pop
sahf
cmps
mov
push
jne
leave
mov
sbb
pop
stos
popa
adc
sub
cmp
rcr
jecxz
ret
inc
mov
jbe
or
lock
out
lds
jg
(bad)
jle
cmp
mov
pop
jmp
neg
cmp
call
jecxz
lods
sbb
cmp
and
lock
aas
stos
js
mov
xchg
jne
das
call
out
push
cs
or
jg
ret
mov
mov
or
dec
push
pop
lea
les
push
out
mov
sar
jns
mov
and
dec
icebp
data16
dec
dec
cmp
gs
and
push
xor
inc
fbld
add
pushf
push
ins
shl
in
in
mov
gs
imul
imul
push
jo
or
pop
add
popa
dec
fisubr
jecxz
jb
stc
pop
mov
fucomip
fidivr
fdiv
push
je
mov
jbe
mov
cmp
(bad)
jno
shl
nop
jmp
scas
jp
enter
xor
cmp
jae
pop
inc
cmps
xor
or
lods
rol
push
push
fs
xchg
cmps
imul
push
push
pushf
add
xor
cld
and
mov
sets
and
stos
dec
jmp
xchg
pop
jecxz
push
out
mul
(bad)
jno
cmp
xchg
cmp
cmps
mov
jg
dec
dec
call
jg
retf
mov
in
jmp
fwait
mov
jmp
in
pop
pop
and
lahf
js
idiv
pusha
cmp
fimul
seta
push
pusha
stos
sbb
sbb
scas
ret
or
enter
fild
out
jbe
js
push
and
adc
cmp
gs
inc
adc
push
add
mov
out
sbb
sahf
xchg
jbe
push
loopne
jmp
sub
xlat
les
sub
mov
jg
aam
leave
scas
into
xor
retf
and
loopne
push
and
(bad)
lahf
int3
in
xor
les
nop
mov
pop
aaa
shl
jb
ins
ja
or
stos
jl
loopne
out
or
out
sbb
fisttp
neg
mov
sbb
jo
imul
inc
call
xor
aam
imul
xlat
mov
ret
and
loope
cld
out
mov
inc
inc
js
sub
jnp
push
aam
pusha
cmc
(bad)
jo
sbb
jp
dec
xchg
hlt
stc
test
test
mov
test
cdq
mov
lahf
ret
icebp
pop
pop
xor
pop
and
pushf
mov
push
fs
pop
out
inc
push
ins
mov
sub
ss
xchg
mov
xor
pop
and
push
jg
cld
lods
dec
ss
sbb
test
fcmovbe
mov
jecxz
fs
sbb
dec
cmc
or
ja
into
sbb
sti
(bad)
adc
inc
dec
push
mov
mov
adc
push
arpl
shl
loopne
mov
in
add
jecxz
out
out
push
add
pop
aad
sub
aam
inc
aas
dec
jge
sar
xchg
push
ret
pushw
jp
dec
mov
(bad)
popf
xor
scas
xchg
fdivr
call
pop
jns
je
scas
sbb
xor
scas
jne
gs
test
jnp
cmp
jns
dec
and
mov
mov
xor
js
data16
rol
sbb
dec
icebp
retf
inc
stos
cmps
das
test
or
fist
mov
jbe
mov
sub
rcr
cld
mov
mov
in
jmp
push
in
mov
mul
fwait
jge
cmp
iret
xor
stos
and
scas
or
sar
(bad)
out
cmp
jg
jo
lods
fsubr
and
push
xchg
mov
adc
cpuid
pop
jl
adc
mov
jno
or
call
dec
ins
(bad)
mov
sbb
sbb
pushf
cs
add
sbb
xchg
pop
inc
out
jo
sub
arpl
sub
rcr
dec
mov
call
jns
aaa
mov
cmp
pushf
pop
loop
xchg
cmp
(bad)
aam
add
fiadd
mov
jmp
dec
test
mov
gs
add
les
dec
shl
test
adc
loop
addr16
and
aas
push
fisttp
or
clc
leave
in
inc
pushf
cmp
sub
pop
bswap
hlt
ins
rcr
mov
inc
push
daa
fadd
aaa
cmc
test
retf
cwde
mov
pop
xor
xor
gs
adc
in
xchg
inc
cs
(bad)
rol
pop
nop
call
inc
pop
sbb
jo
jae
xchg
shl
iret
and
mov
into
(bad)
js
jo
bound
jmp
jno
and
mov
pop
cmp
into
mov
test
xchg
cmp
daa
scas
sti
push
pop
xchg
pop
mov
(bad)
loopne
mov
xor
les
cmp
jb
lods
adc
xchg
movs
xor
mov
inc
push
rcr
jae
dec
mov
scas
cmps
push
pop
imul
mov
in
mov
mov
or
cld
pop
or
inc
daa
mov
sub
clc
push
xor
mov
std
js
int
leave
cmp
test
fbld
call
sbb
call
into
add
call
push
ins
cs
xor
je
js
ins
add
and
les
xlat
push
(bad)
xchg
retf
sub
xor
sbb
test
frstor
jp
xlat
push
imul
mov
xchg
pop
pusha
test
mov
shl
outs
and
push
push
shl
cs
sbb
sbb
aad
mov
fsub
inc
repz
out
sub
push
data16
fwait
packuswb
pop
sbb
xor
jne
jno
dec
mov
push
push
lods
cwde
out
fiadd
cmc
push
adc
xor
and
ficomp
int3
sub
pusha
arpl
fnsave
shr
cmp
jp
push
mov
jmp
dec
xor
iret
mov
movs
jle
cmp
cdq
push
add
scas
mov
cs
push
push
icebp
cwde
(bad)
push
dec
aaa
movs
cdq
pushf
fimul
jne
pop
es
ds
scas
mov
jbe
sar
sub
mov
out
cmp
xchg
sbb
pop
lods
leave
sbb
lods
dec
or
enter
shl
out
xor
cmp
sbb
inc
retf
ret
ja
imul
jae
movs
mov
mov
sub
xchg
mov
cmps
xchg
sub
push
jbe
and
mov
xor
sbb
adc
out
iret
sahf
call
out
or
out
mov
cmp
into
jmp
outs
or
ss
sar
into
cmp
dec
dec
dec
fisub
in
stos
mov
sub
pop
imul
or
ret
cli
sub
mov
xchg
repz
inc
out
ret
clc
es
cld
shl
inc
jg
fst
ins
push
mov
mov
leave
mov
imul
or
or
in
(bad)
or
ins
dec
call
ins
inc
sub
je
test
es
ret
scas
mov
push
mul
popf
xor
aad
scas
sbb
fcmove
mov
fidiv
pop
mov
mul
fwait
mov
rcr
mov
das
cdq
dec
popf
push
ins
scas
mov
(bad)
cmps
out
add
sbb
out
out
add
lods
dec
mov
cli
into
(bad)
sub
and
(bad)
imul
stc
inc
jae
cmc
push
push
not
mov
sbb
js
inc
sub
daa
xchg
inc
call
mov
adc
(bad)
xchg
lods
outs
mov
jp
xchg
inc
dec
mov
mov
dec
push
lods
jmp
xor
jnp
xor
jns
lahf
test
push
test
mov
jg
xchg
mov
mov
dec
mov
push
cs
movs
mov
shl
das
adc
dec
popf
inc
pop
(bad)
xchg
outs
add
push
jp
test
fidivr
dec
mov
ss
pop
adc
jge
js
(bad)
(bad)
jp
movs
and
dec
push
sbb
sti
iret
int3
mov
mov
into
pop
loop
mov
sub
stc
sti
pop
xchg
enter
je
mov
sub
loopne
inc
cdq
lahf
enter
mov
dec
jmp
push
add
xchg
xchg
inc
fisttp
jo
jmp
push
push
mov
sbb
popa
adc
pusha
ja
mov
and
(bad)
rcr
cwde
das
add
mov
xchg
leave
loop
fwait
loopne
or
cmp
pop
or
(bad)
pop
mov
xor
xor
pop
int
or
xchg
lods
aad
cmp
cwde
sub
jg
ret
xor
scas
xor
pop
pop
adc
ret
push
popf
xchg
stos
xor
inc
pop
jnp
push
mov
das
in
retf
pushf
cmp
lahf
jnp
stos
daa
out
jmp
adc
js
dec
jmp
inc
test
sub
int3
imul
(bad)
cmp
sub
and
int
dec
and
inc
cmp
out
mov
pop
aas
cli
mov
and
rol
mov
ss
jne
rcl
jmp
dec
fcomp
pushf
ja
mov
in
pop
pop
test
and
cmps
popf
cmp
outs
sbb
lock
cmp
lock
inc
xchg
test
lods
scas
dec
xchg
adc
push
sti
add
out
push
mov
test
or
mov
ss
fcom
mov
(bad)
sbb
pushf
push
xchg
dec
mov
hlt
cmp
jno
in
xchg
movs
cmp
push
adc
pop
fnstsw
push
setl
sub
cs
nop
(bad)
xor
shl
int
mov
call
add
retf
fs
(bad)
lds
and
int3
aaa
hlt
sar
fnstenv
lahf
push
sub
push
rol
retf
(bad)
stos
inc
in
sbb
mov
lds
push
nop
cld
fst
xchg
inc
shr
das
add
(bad)
ja
cmp
mov
mov
push
xlat
push
inc
push
push
(bad)
push
sahf
jmp
es
or
enter
push
push
test
adc
fdiv
stc
push
sub
sbb
sbb
xor
dec
and
pop
call
or
and
and
mov
cmc
outs
popf
add
das
dec
jecxz
inc
xchg
adc
call
jmp
ja
lds
xchg
cdq
pop
mov
xor
pop
scas
scas
test
ss
sub
std
ja
ret
in
xor
movs
inc
sar
xchg
jmp
shl
cmps
mov
push
push
dec
dec
ins
cmp
mov
(bad)
add
cs
pop
add
mov
jne
mov
push
cmp
mov
scas
pop
adc
mov
sub
xchg
push
pop
fwait
leave
mov
leave
xor
in
inc
mov
je
mov
bound
push
mov
push
cmp
ror
dec
dec
pop
repz
test
push
lock
pushf
scas
enter
mov
iret
sub
xchg
xor
sar
in
mov
imul
push
mov
hlt
sub
and
xor
inc
pop
dec
push
mov
sbb
ror
pop
les
mov
sbb
mov
fisubr
inc
sbb
loopne
pminub
push
push
sti
lods
inc
out
cmp
mov
into
out
and
and
shl
and
add
sub
enter
mov
mov
data16
jae
test
(bad)
or
jne
call
or
jecxz
cdq
mov
lds
cmp
mov
out
inc
and
add
or
das
jl
ror
mov
data16
test
cmp
ins
jmp
add
outs
pop
mov
xor
hlt
mov
nop
test
out
in
mov
adc
rcl
in
inc
(bad)
out
jl
dec
lods
adc
and
arpl
retf
ret
test
mov
xchg
sub
jcxz
pop
dec
mov
inc
aad
mov
jno
sbb
cmp
xor
xchg
fcom
pop
(bad)
mov
xchg
loop
loope
into
cmps
ret
cmp
add
push
pop
inc
xchg
jb
adc
movs
lahf
mov
lock
sub
dec
and
inc
push
pop
fdivr
repz
pop
mov
test
push
in
fst
dec
sbb
frstor
sub
add
pop
mov
icebp
(bad)
sub
dec
dec
add
sbb
ror
mov
push
jae
aaa
test
shr
push
frstor
add
dec
aas
pop
jmp
push
xor
or
xor
ret
sbb
ds
data16
call
js
cmps
dec
dec
pushf
shl
mov
sti
fwait
cli
scas
icebp
adc
mov
daa
mov
or
inc
lods
in
sahf
fucomi
ins
xchg
push
fs
and
mov
mov
xchg
out
fwait
sub
mov
sub
outs
or
adc
jns
test
fild
xchg
jae
pop
jg
(bad)
inc
std
cmp
movs
movs
mov
ds
mov
aad
sbb
cmp
push
mov
inc
push
stos
(bad)
ins
ins
xor
out
clc
and
icebp
stc
adc
(bad)
push
add
jg
imul
std
aad
pop
or
xchg
xrelease
js
cmp
hlt
xor
inc
gs
pop
mov
adc
xchg
add
jo
adc
mov
into
shl
in
(bad)
loopne
in
mov
mov
and
jl
or
inc
push
jg
xchg
retf
out
dec
sbb
in
mov
mov
ds
nop
aad
xlat
bnd
cmp
icebp
ins
inc
add
xor
es
add
fild
inc
mov
movs
rcl
cmp
ja
adc
lds
lahf
loopne
jg
in
fsub
dec
sti
shl
mov
mov
lea
dec
adc
icebp
add
popf
lahf
add
sub
outs
lods
mov
leave
or
sbb
push
inc
stc
jns
dec
pop
adc
sbb
movs
push
and
sbb
xor
imul
aas
xor
fucom
neg
or
and
sub
nop
ror
mov
in
and
dec
jb
dec
pop
inc
dec
dec
inc
push
int
mov
pop
pop
or
xchg
movs
pushf
sub
mov
jle
push
ja
in
mov
fnstenv
sub
lods
cld
and
xor
les
bound
(bad)
movs
push
fisub
fild
rsm
and
jmp
mov
ret
aad
jne
pop
or
clc
bound
push
or
xor
cmc
lods
hlt
mov
jmp
out
out
mov
loop
sti
sub
je
sbb
sub
ret
add
jge
or
loopne
push
inc
leave
push
sbb
or
sub
cli
stc
pop
movs
ret
xchg
cmp
test
push
jmp
push
test
test
mov
repnz
not
jnp
int3
push
push
ror
popa
popa
jp
jmp
stc
dec
or
ror
xchg
or
pop
cs
or
scas
jnp
mov
and
sub
add
push
cdq
cmp
mov
push
in
push
inc
(bad)
outs
in
mov
call
push
cli
test
xor
(bad)
push
sub
sbb
fidivr
cmp
sbb
sub
and
enter
sub
or
sbb
popf
aam
inc
js
(bad)
sti
dec
mov
ins
mov
jl
aad
dec
xor
bound
jbe
xchg
lds
cmp
ret
mov
arpl
mov
lods
push
dec
inc
leave
push
seta
idiv
push
sub
ja
ins
or
aaa
add
fisttp
xor
xchg
push
cwde
dec
jp
sbb
neg
aad
and
jns
add
jl
mov
sbb
repnz
retf
xchg
sub
jl
sbb
inc
out
jmp
test
mov
retf
jnp
stos
imul
xchg
sub
xchg
arpl
cmps
pop
dec
lock
pop
out
mov
test
xchg
test
mov
jbe
sbb
sub
and
movs
xor
retf
sbb
add
pop
xchg
or
cmp
mov
div
arpl
ins
mov
cmc
enter
call
or
inc
or
sbb
adc
cld
push
inc
jmp
push
stos
mov
inc
xchg
stc
jl
sbb
or
cwde
hlt
ss
test
inc
in
pop
mov
jl
jg
mov
rcl
jno
shl
mov
add
rcr
repnz
push
stos
pop
dec
rcl
mov
xchg
and
mov
rcr
cld
outs
cmc
cmp
repnz
cmp
mov
test
mov
add
push
je
bound
shl
sti
add
jbe
sub
(bad)
pop
int
div
and
test
loopne
sub
nop
mov
ror
xchg
xor
fs
pop
jecxz
outs
push
push
push
jmp
dec
cdq
dec
mov
mov
cmp
scas
popf
push
and
mov
or
sub
jno
dec
jns
movs
es
sub
add
pop
icebp
mov
rol
in
mov
jle
js
fwait
mov
das
inc
iret
cmc
or
sti
xchg
adc
fmul
cmp
sbb
test
push
scas
fdivr
add
add
sahf
push
pop
into
mov
cmp
and
adc
stos
adc
sbb
mov
pop
sahf
jg
ret
popf
(bad)
inc
jge
mov
sub
bound
and
cmps
xor
movs
aas
setp
sub
xlat
in
cld
dec
test
and
jno
mov
inc
dec
sub
cmp
out
add
jne
pushf
lea
cs
add
movs
pop
or
mov
mov
in
lods
adc
(bad)
in
loope
enter
cmp
std
jge
jmp
xchg
aad
lods
mov
dec
mov
je
rcl
mov
out
daa
call
mov
push
lahf
jecxz
fisub
cmp
cmp
xor
in
out
mov
jecxz
sahf
jno
out
push
(bad)
call
pop
outs
ret
inc
pop
add
cwde
call
inc
fdiv
pop
bound
mov
clc
ja
dec
xor
dec
sbb
xor
addr16
imul
hlt
or
and
inc
ret
aaa
(bad)
(bad)
jecxz
out
jbe
lods
jae
in
mov
sbb
cmp
pop
pop
jp
mov
adc
sahf
imul
pop
cmp
mov
mov
inc
push
outs
dec
(bad)
mov
jecxz
inc
or
pop
push
mov
fadd
mov
or
(bad)
popf
rcl
sbb
cmp
sub
dec
pop
in
cdq
fcomp
mov
add
dec
cdq
xchg
imul
mov
inc
xchg
push
stc
and
mov
sbb
dec
jl
sbb
inc
mov
sub
push
and
lods
jmp
sbb
jle
outs
(bad)
div
(bad)
push
mov
cmps
sbb
pushf
jge
sbb
out
push
xchg
xchg
dec
cmp
xor
jno
or
aad
pop
ror
lods
adc
xor
popa
jns
mov
lds
clc
ins
cmp
fidivr
sub
and
out
lds
jmp
and
ret
dec
xlat
hlt
enter
or
push
inc
push
push
pop
inc
jnp
cmp
aas
mov
jp
(bad)
push
(bad)
mov
(bad)
into
mov
cld
and
cmp
cmp
pushf
inc
data16
popa
into
mov
aad
xor
aam
and
or
cli
jo
and
push
mov
jecxz
jnp
or
xor
inc
sbb
inc
and
mov
fnstenv
ror
in
xor
or
lods
add
(bad)
fild
xchg
adc
inc
jmp
inc
push
call
shl
or
leave
sub
adc
shr
ins
scas
and
leave
scas
bound
dec
imul
scas
sbb
xchg
out
dec
cli
inc
es
outs
mov
sub
test
pop
jecxz
outs
cmps
fwait
cmp
push
es
push
xchg
fnstcw
push
sub
sub
sub
leave
jne
add
cwde
mov
xchg
fs
sbb
sub
popa
or
push
idiv
sbb
push
retf
jmp
push
aam
jle
nop
int
pop
add
das
ja
(bad)
fisttp
shl
xchg
outs
dec
loopne
mov
pushf
sub
cmps
es
pop
add
arpl
pop
aad
cli
mov
ss
mov
out
push
push
rol
jnp
daa
sti
cs
jbe
cli
aaa
pop
out
sbb
push
shl
aas
bound
mov
mov
or
jmp
sti
cmc
ins
movs
imul
rol
or
push
push
dec
push
mov
je
mov
retf
(bad)
push
mov
lahf
out
adc
jnp
pop
push
push
jo
pop
jg
pushf
xlat
mov
inc
lds
or
(bad)
rep
fst
xchg
je
fs
add
hlt
aas
pop
test
nop
popf
mov
mov
movs
(bad)
mov
sbb
(bad)
jmp
and
fild
add
outs
stos
fsub
icebp
and
dec
ja
pop
(bad)
mov
push
jecxz
or
or
inc
mov
ror
and
jae
sub
popf
repz
rcl
cmp
mov
ins
sub
and
mov
ficom
xor
mov
inc
mov
add
(bad)
out
data16
sub
addr16
fldenv
popf
dec
out
add
es
rol
pop
retf
fwait
cmp
in
and
inc
add
lea
ds
xchg
rcr
pop
(bad)
cmp
dec
cmp
mov
test
(bad)
nop
dec
add
lock
adc
cmp
scas
cs
(bad)
std
repnz
shr
popf
mov
push
les
jg
das
test
jmp
or
int
mov
inc
mov
and
lea
and
mov
xor
dec
jo
out
gs
test
inc
cs
push
push
jg
mov
test
or
mov
jno
out
push
lock
out
adc
xchg
push
loopne
ficom
sub
jge
mov
inc
dec
clc
sub
xchg
dec
or
xchg
ss
and
inc
xchg
dec
out
stos
fwait
sub
inc
inc
outs
adc
xchg
push
pop
out
es
and
aam
sbb
daa
sub
push
ins
arpl
dec
out
mov
std
cmp
and
cmps
jmp
mov
sar
in
pmulhuw
inc
sbb
cmp
pop
fwait
jo
lods
leave
lods
(bad)
aaa
pop
jnp
iret
movs
stc
test
int3
xchg
les
jmp
jae
mov
and
sub
lods
xor
aas
mov
jmp
ror
sub
dec
and
out
mov
in
add
(bad)
sub
fdivr
ret
mov
inc
call
icebp
cmc
mov
xor
mov
(bad)
fwait
ins
pop
xchg
and
ja
clc
rcl
out
adc
mov
xor
add
pop
push
lods
es
adc
and
mov
jp
xchg
mov
cld
add
nop
and
inc
jge
xor
in
mov
or
jecxz
int
or
adc
bound
sub
jmp
xor
cli
push
mov
mov
fs
inc
dec
and
cdq
adc
or
add
movs
dec
fadd
je
test
(bad)
dec
and
add
add
mov
frndint
jecxz
arpl
mov
pop
adc
cli
pusha
xchg
fisttp
in
repz
xchg
cmp
dec
xchg
adc
fcmovu
cmc
jecxz
out
xchg
stos
(bad)
movs
loopne
out
frstor
xor
mov
sbb
arpl
jnp
dec
adc
add
sub
and
hlt
inc
add
sub
mov
arpl
pop
xchg
out
fs
aas
and
jb
push
les
mov
das
adc
fdiv
sar
(bad)
js
fnstenv
je
rcl
hlt
bound
sub
and
and
sub
mov
call
loop
aaa
es
int
add
xor
jmp
(bad)
adc
(bad)
push
jecxz
nop
xor
(bad)
xchg
movs
outs
nop
cmp
xor
inc
movs
xchg
out
ins
jle
jecxz
or
dec
ds
data16
mov
stos
mov
pop
cs
xor
outs
clc
enter
outs
add
and
ins
fild
push
ja
test
aad
enter
xor
neg
adc
and
enter
ins
int
xchg
mov
jmp
(bad)
jo
jmp
cmp
mov
(bad)
fidivr
loope
sbb
mov
sbb
mov
scas
pop
fwait
jle
sar
push
xchg
jmp
or
neg
cdq
mov
lods
jmp
lds
call
ins
jp
loopne
or
xchg
loopne
mov
add
shl
or
daa
popf
fsub
leave
jecxz
dec
sub
test
pop
add
(bad)
repz
xor
dec
scas
fwait
mov
push
lods
mov
out
out
sbb
lea
mov
sbb
ret
cld
fiadd
lea
popf
cli
out
sbb
and
mov
add
inc
push
xchg
out
sahf
in
jae
fsub
dec
stos
mov
or
in
and
adc
gs
movs
daa
nop
iret
or
dec
sbb
push
in
jne
outs
jnp
fild
jmp
loop
es
push
addr16
sub
leave
xchg
ror
(bad)
outs
mov
cli
xchg
shl
push
movs
jbe
mov
push
add
or
cld
xchg
repnz
jae
icebp
jmp
inc
jae
nop
sbb
sbb
push
or
ror
sahf
sahf
in
int3
fdiv
xor
cwde
mov
out
xor
test
jb
mov
and
xrelease
lods
add
shr
inc
push
mov
out
aas
scas
mov
add
xchg
pop
ficom
or
movs
mov
test
xor
dec
mov
fcom
movs
int3
jmp
fs
inc
aaa
adc
ret
xor
dec
aam
sbb
cdq
retf
push
dec
jb
rol
dec
(bad)
pop
jb
mov
adc
jno
out
push
sbb
xor
pop
fst
stos
pushf
popa
aam
mov
dec
push
mov
mov
enter
mov
jns
fistp
pop
popa
loope
fsub
xor
push
add
inc
jl
and
nop
(bad)
push
mov
sbb
ficom
cs
ficom
jecxz
sbb
xchg
dec
mov
(bad)
mov
mov
xor
cmp
idiv
mov
xchg
sbb
push
pushf
sub
xlat
stos
xlat
pop
dec
ffreep
jnp
xchg
jne
ret
fs
(bad)
fstp
nop
jecxz
cs
jmp
dec
div
pop
or
out
jl
imul
lea
pop
or
xchg
sbb
stc
fs
sbb
xor
mov
sub
inc
popa
jb
stc
test
cmp
test
and
xlat
cmp
mov
cmc
fwait
aad
(bad)
jge
pushf
imul
xlat
scas
and
imul
aas
lods
pop
add
movs
das
hlt
leave
(bad)
stos
sub
fstp
aad
mov
adc
mov
cs
sti
mov
mov
add
dec
lea
jae
inc
jle
jbe
popf
cs
sbb
cld
or
jns
mov
jb
popf
loope
gs
adc
mov
pop
mov
and
add
rol
push
cmp
xor
mov
inc
mov
or
int
mov
add
mov
ss
jmp
mov
mov
ficomp
mov
leave
jns
int3
call
adc
mov
retf
mov
lea
lahf
enter
out
jl
push
out
add
(bad)
mov
leave
dec
adc
xor
pop
xchg
mul
cs
cmp
mov
or
mov
fdivr
clc
cmc
(bad)
jecxz
rol
cwde
inc
sbb
pop
aam
xchg
xchg
xlat
mov
push
jno
(bad)
mov
cmp
push
mov
push
add
mov
ins
out
popf
cmp
out
jbe
sub
fwait
inc
shl
in
stc
cmp
cmp
add
mov
retf
movs
jle
jecxz
xchg
mov
mov
lea
pop
push
dec
mov
and
xor
sahf
mov
or
test
pop
arpl
mov
add
lods
push
add
mov
les
aaa
pop
inc
xchg
jbe
push
pusha
inc
popf
aas
fisub
push
sub
pop
ins
sub
pop
adc
lahf
rcl
nop
loope
inc
aas
pop
stos
ret
lahf
ss
hlt
sub
aaa
mov
xor
add
push
push
add
mov
dec
xor
lea
jae
shl
fs
xor
fstp
dec
(bad)
daa
sub
hlt
jb
rdtsc
xchg
mov
add
loop
mov
adc
test
int
bound
(bad)
and
ror
pop
dec
loop
fsubr
(bad)
mov
mov
cmp
(bad)
adc
add
ret
inc
xchg
inc
push
xchg
cmp
push
fdivrp
add
jp
mov
cmps
dec
cs
movs
inc
mov
cmps
mov
ins
ins
loopne
jbe
inc
scas
jne
scas
inc
shr
mov
lods
xor
inc
mov
enter
push
mov
ret
adc
push
int3
sbb
push
xchg
retf
stos
fstp
cmp
stc
mov
in
dec
dec
xor
sbb
pop
push
aas
xchg
hlt
xor
cmp
add
cmp
popf
ret
adc
mov
mov
sbb
(bad)
hlt
movs
jmp
mov
lods
cli
fsubr
adc
sbb
adc
movs
es
aas
mov
test
in
clc
dec
pop
popf
popf
je
jb
or
xchg
mov
movs
add
cmp
xchg
xchg
not
cmps
cld
xlat
jns
push
jb
enter
and
push
mov
xchg
or
pop
scas
xchg
sbb
gs
cmp
fnstsw
cwde
lods
scas
mov
(bad)
push
push
inc
or
call
sbb
movs
mov
out
jns
imul
(bad)
mov
retf
inc
xchg
aam
sbb
fistp
adc
in
hlt
mov
imul
cli
pop
mov
js
mov
dec
scas
aaa
xor
fcomp
ret
cwde
ret
pop
and
hlt
and
cwde
lods
mov
dec
test
shl
add
adc
lahf
mov
fdivr
adc
jbe
xor
les
add
mov
sub
xor
pusha
pop
movs
stos
pop
sbb
ins
xchg
jno
in
pop
popa
rol
in
push
push
or
ficomp
aas
cmc
fwait
cmp
stc
pusha
push
push
xor
sub
les
test
push
mov
jo
mov
mov
mov
pop
jge
mov
fadd
push
imul
sub
adc
sub
mov
mov
jb
aad
call
cmp
movs
ficomp
mov
mov
mov
div
jecxz
mov
adc
repnz
das
adc
pop
push
or
mov
pop
cmps
and
mov
sub
lds
dec
mov
push
ins
xchg
or
cmp
dec
jmp
pusha
and
or
and
clc
movs
push
add
clc
loop
(bad)
mov
data16
addr16
add
jne
adc
in
push
xchg
sub
ss
in
cmp
or
inc
jo
(bad)
out
mov
pop
gs
in
cmp
loopne
mov
mov
xchg
adc
add
mul
pushf
pop
mov
mov
inc
mov
pop
dec
int
mov
pop
cwde
push
shr
call
add
or
pusha
push
pop
sbb
mov
lods
outs
mov
out
out
jecxz
jecxz
pop
dec
fisubr
dec
sbb
shl
pop
dec
jp
movs
jne
push
push
pop
pop
mov
fst
mov
cmp
xchg
js
xor
fsubr
fwait
or
fisub
adc
adc
cmc
(bad)
xchg
push
cmp
adc
in
icebp
in
push
fdivrp
adc
fidiv
adc
jg
(bad)
push
mov
mov
and
mov
(bad)
loope
loopne
sub
add
fcomp
lods
movs
call
repz
adc
fmul
out
sub
les
sub
pop
dec
movs
movs
es
(bad)
dec
mov
mov
cmp
mov
jbe
xor
dec
push
inc
clc
and
xor
mov
aam
data16
out
dec
push
retf
jmp
lds
(bad)
xchg
mov
test
ror
mov
xor
mov
test
add
inc
add
cmp
imul
push
jle
cmps
mov
bound
loope
push
jge
outs
and
mov
cmp
add
stos
sbb
mov
jnp
sub
scas
cmp
lea
in
pop
inc
jne
shl
inc
std
leave
mov
adc
mov
hlt
pop
out
fs
jge
das
aam
mov
repz
test
sbb
in
rcr
div
pushf
dec
mov
inc
ror
mov
mov
jmp
sbb
or
cmovp
jno
xor
adc
add
sub
daa
dec
jmp
adc
ins
push
call
or
rcr
into
mov
push
icebp
aaa
dec
out
pop
inc
call
out
mov
jno
pop
movs
mov
outs
dec
and
xchg
jbe
push
cmps
sbb
pushf
xchg
or
adc
(bad)
jp
aas
mov
(bad)
and
ja
ds
popf
pop
out
jg
mov
lahf
jbe
mov
sub
mov
clc
lock
mov
cmc
mov
ficom
pop
js
cli
(bad)
out
lahf
jle
sub
test
jge
or
xor
xor
cmp
ret
fcom
sbb
(bad)
sahf
mov
pop
inc
add
xor
add
clc
sbb
xchg
or
scas
mov
aas
jmp
or
add
hlt
sbb
inc
mov
(bad)
xchg
pop
jo
fbstp
stos
(bad)
pop
inc
ss
sub
pop
or
mov
or
sub
pop
leave
std
(bad)
gs
push
int
push
xchg
je
lahf
test
inc
mov
stos
push
sbb
retf
and
fdivr
pop
retf
inc
mov
call
mov
and
clc
test
and
add
dec
enter
bound
add
popa
fcom
aad
adc
or
shl
out
sbb
enter
xchg
cdq
add
icebp
sar
shl
dec
or
rol
mov
inc
inc
and
sub
dec
pop
inc
into
mov
and
adc
or
clc
mov
pop
add
fistp
jae
mov
ins
mov
jb
inc
adc
div
jge
push
outs
inc
popf
ja
ins
cmp
sbb
dec
push
xchg
mov
ins
inc
rcl
loop
(bad)
gs
fidivr
leave
or
inc
cmp
cmp
cs
mov
mov
out
jge
push
in
fdivr
data16
xor
push
aam
push
lock
sub
xor
out
int3
pop
mov
push
jbe
sbb
xor
lea
xchg
mov
jno
push
hlt
repnz
sbb
inc
or
xchg
test
dec
popa
hlt
call
pop
cmp
jbe
ret
cs
pop
or
mov
jg
es
clc
push
aad
dec
adc
leave
push
push
nop
outs
fs
fisub
push
jbe
sbb
add
fldenv
retf
lea
mov
mov
inc
mov
gs
xchg
retf
jns
test
jecxz
out
adc
iret
push
out
js
out
nop
fidivr
call
stos
in
cli
icebp
xor
push
cmp
sub
dec
jb
dec
mov
xchg
outs
inc
adc
xor
sub
dec
ins
adc
adc
loop
mov
pop
sbb
mov
stc
jae
bound
test
inc
inc
and
cmp
sub
rcr
and
ret
push
pop
fst
bound
inc
ficom
rcr
xor
int
scas
rol
(bad)
sub
jno
loopne
div
std
or
cld
pop
icebp
fdivr
sbb
stos
ins
sub
cmc
adc
inc
jbe
cmp
and
fsubr
ss
jge
push
xor
jnp
mov
sub
cmp
stos
addr16
mov
mov
je
call
push
pop
mov
icebp
in
inc
ins
lds
mov
nop
push
add
push
mov
cld
std
lods
push
leave
push
jae
outs
cld
ja
daa
and
mov
fwait
mov
and
loope
imul
xchg
fs
push
int3
sbb
shr
mov
cli
daa
je
adc
sub
pop
out
scas
add
(bad)
mov
out
nop
test
dec
jne
fcom
xor
clc
aas
dec
add
jle
inc
dec
xor
mov
outs
adc
sub
inc
push
push
push
out
cmp
pusha
add
xchg
dec
fucom
sbb
(bad)
dec
pushf
jmp
fistp
pop
inc
push
test
xchg
jle
push
scas
dec
les
and
aaa
jmp
repnz
jns
into
jns
jp
xor
test
popf
lds
cld
mov
xchg
jmp
pop
push
test
adc
mov
fs
sbb
jo
sbb
xchg
mov
mov
sbb
jle
mov
push
iret
jg
mov
cmp
sub
jo
jecxz
xchg
lds
jns
lds
pop
pop
mov
add
ror
sahf
mov
retf
xor
dec
inc
data16
add
pop
jmp
cmp
push
hlt
pop
(bad)
mov
sahf
data16
scas
xchg
mov
stos
push
mov
jmp
scas
ret
inc
lea
xor
rol
xor
mul
aad
xchg
cmp
test
arpl
popa
fld
lods
sub
es
clc
add
ja
and
cli
test
mov
xchg
mov
jae
adc
xor
dec
ins
repz
add
(bad)
jmp
xchg
rol
bound
mov
mov
inc
sub
dec
jnp
ins
mov
aad
leave
or
or
aas
call
int
inc
inc
enter
cli
dec
jne
sbb
jp
rcl
xchg
fdiv
repnz
jbe
(bad)
xor
fldenv
add
mov
dec
mov
idiv
jne
js
lds
jno
enter
or
jge
out
popa
cmp
cmp
mov
jecxz
jno
adc
cmp
ficom
xchg
mov
(bad)
pusha
dec
pop
and
in
cld
test
jne
ins
in
or
pop
pop
mov
movs
jecxz
adc
scas
and
jmp
test
in
clc
aam
lods
jno
dec
inc
fucomip
dec
pop
xlat
pop
ret
lock
inc
and
add
or
(bad)
xchg
dec
lea
sti
mov
in
jg
adc
scas
cmp
mov
inc
dec
push
out
shr
out
and
adc
sbb
xchg
pop
stos
cli
mov
sub
daa
rcl
push
or
ss
dec
fld
lods
xchg
push
icebp
inc
cs
mov
pop
adc
dec
retf
sbb
mov
inc
ret
add
daa
sbb
test
or
add
call
fsubr
mov
and
repnz
xor
xchg
aam
pop
fimul
outs
jp
leave
jno
movs
pop
call
imul
mov
mov
jp
and
(bad)
jae
in
loope
inc
arpl
mov
pop
sbb
pushf
dec
test
xor
test
lods
mov
arpl
adc
sbb
sbb
repz
loop
add
mov
mov
jb
sbb
aad
xchg
dec
jbe
int3
aad
fs
cs
jb
mov
ins
pop
jle
into
fcmovne
jae
fsub
or
mov
xchg
in
sbb
jbe
xor
ss
xor
dec
jns
mov
pop
sub
push
aaa
popf
outs
cli
pop
int3
push
js
add
push
imul
mov
or
pushf
int
cmp
sbb
inc
push
cmps
sbb
lds
lahf
cwde
pop
lock
cmp
add
cld
mov
inc
mov
(bad)
jp
push
dec
adc
cmp
adc
shl
aaa
shl
(bad)
js
lea
dec
cmp
movs
(bad)
out
loope
lds
out
xor
jecxz
std
shl
scas
ret
data16
xchg
mov
push
inc
jmp
jecxz
and
popf
mov
cmc
scas
jmp
or
cld
adc
sbb
mov
xchg
lods
cmc
scas
xchg
aam
xor
jp
push
bound
xlat
sub
or
shr
int3
sub
mov
mov
jne
and
mov
dec
aad
cmc
out
test
mov
or
adc
test
cdq
jl
popf
movs
adc
ret
xchg
enter
mov
outs
fld
and
push
cdq
subps
jns
and
xchg
out
shr
iret
ds
nop
pop
in
and
or
jno
mov
dec
cli
push
push
ss
and
imul
jne
imul
pop
dec
(bad)
or
ror
or
and
in
pushf
fist
xchg
xor
inc
jge
mov
or
mov
mov
pextrw
mov
hlt
test
push
loop
in
cmp
pop
es
rcl
mov
pop
and
xchg
sbb
icebp
(bad)
mov
pshufw
dec
adc
jns
xor
ret
stos
loope
outs
out
jo
loope
mov
test
inc
inc
idiv
test
inc
inc
cmc
sub
gs
aaa
lahf
out
or
sub
sbb
movs
hlt
push
loopne
retf
(bad)
jae
lahf
pop
jnp
iret
ja
pop
cmp
imul
mov
not
lock
dec
test
das
popa
(bad)
push
mov
sar
in
outs
sub
cmp
mov
rol
test
sub
es
jg
mov
push
mov
mov
das
pushf
jne
cdq
js
inc
jo
ss
xor
mov
dec
stc
retf
mov
jge
jle
in
push
mov
sub
dec
jo
enter
pop
movs
bound
adc
mov
lahf
xchg
nop
fstp
sbb
xchg
inc
pop
mov
nop
in
mov
daa
sbb
xchg
int3
sub
xchg
push
fstp
in
frstor
into
mov
mov
loope
and
ins
sub
idiv
inc
cmp
bound
mov
xor
int
cmc
jmp
loopne
mov
add
sub
xor
and
cwde
lds
mov
adc
and
jno
mov
das
lock
push
pop
mov
mov
clc
add
dec
out
ficom
std
aaa
adc
pop
sbb
dec
jmp
xchg
or
mov
mov
cdq
dec
push
lds
jg
int3
out
clc
push
cmp
in
inc
mov
push
push
ficomp
xchg
xchg
cmp
mov
dec
pop
into
mov
sbb
add
and
adc
nop
push
mov
mov
cmc
call
mov
movs
sti
dec
addr16
sub
pop
push
js
pop
push
cs
div
ror
hlt
mov
pop
inc
mov
push
and
xor
mov
or
xchg
cmps
mov
loope
fimul
pop
cmp
xchg
and
je
gs
xor
pop
add
int
ds
xchg
repnz
mov
ficomp
test
ins
mov
pop
or
addr16
scas
cmc
push
sar
push
xor
mov
into
mov
sbb
movs
in
loop
aas
dec
cmp
sub
cmps
stos
dec
pop
sbb
dec
inc
xchg
add
out
repz
icebp
sub
mov
fidiv
push
or
jns
cmps
cld
les
inc
stc
add
push
mov
shl
pop
sbb
rcl
push
ins
mov
stc
inc
ret
dec
imul
mov
jl
out
or
mov
adc
out
push
popf
xchg
dec
pushf
xchg
inc
push
and
sbb
mov
push
cmp
push
test
or
and
aas
cld
pop
jp
and
fsub
add
cmp
shr
or
es
mov
outs
add
or
inc
mov
ins
js
mov
xchg
shr
xor
gs
or
jmp
leave
dec
push
mov
pop
jns
neg
cli
add
cmp
ins
imul
shr
mov
js
xchg
cmp
dec
jl
ja
inc
add
daa
mov
call
xchg
test
xchg
repnz
loop
or
in
enter
icebp
lock
sub
mov
rcl
and
mov
retf
call
stos
call
pop
pushf
sbb
pop
and
dec
and
out
ja
dec
pop
pop
ret
mov
and
test
sub
arpl
lods
(bad)
inc
push
ins
push
icebp
pushf
in
sub
iret
aad
xchg
and
cli
pusha
xchg
retf
pop
out
jo
jecxz
cmp
aaa
(bad)
aam
add
retf
into
xchg
push
or
aas
dec
out
adc
sub
js
nop
jae
mov
xchg
push
inc
mov
sub
xchg
xor
int3
mov
xchg
fcomp
int3
adc
loop
or
scas
mov
jmp
or
std
loop
ror
(bad)
fdivr
dec
in
dec
pop
fadd
xchg
sti
(bad)
mov
or
mov
mov
adc
mov
in
mov
sub
cld
and
shr
pushf
les
je
nop
ret
cdq
push
aad
movs
dec
ins
shr
xchg
loope
cmp
mov
xor
aad
loop
xchg
jo
lock
lods
daa
dec
sub
cs
adc
(bad)
outs
push
arpl
stc
jmp
and
mov
fs
inc
test
pop
jl
push
pop
outs
enter
stc
pop
pop
sbb
mov
call
test
mov
lods
in
or
adc
(bad)
(bad)
or
inc
ror
sti
mov
or
cdq
jecxz
mov
pop
shr
ins
fwait
sbb
xor
out
fisttp
cmp
cmp
dec
cmps
jmp
and
lock
mov
inc
jnp
mov
dec
aas
mov
jae
pusha
je
sbb
in
outs
mov
xlat
ins
push
sar
cmp
int3
dec
pushw
mov
sub
repnz
adc
adc
mov
(bad)
sub
movs
push
xchg
mov
adc
pop
xchg
mov
adc
dec
rcl
push
xchg
sar
xchg
sbb
scas
test
out
nop
push
jle
retf
inc
lahf
ja
call
cmp
mov
xlat
fnstcw
mov
mov
or
sbb
jecxz
add
shr
xchg
sub
enter
les
mov
ss
stos
mov
dec
shl
and
mov
inc
es
ins
lods
push
mov
dec
cmps
loopne
mov
xor
mov
sbb
xchg
daa
pop
lock
dec
stos
sub
xor
inc
and
push
add
jno
jns
sub
push
jbe
cmp
imul
repz
sbb
push
mov
jg
jno
pop
ret
jmp
adc
jmp
sbb
mov
and
and
push
lock
sbb
aad
mov
fsubr
inc
xchg
loopne
daa
sub
addr16
pop
jne
mov
outs
xor
ins
repnz
cmps
sub
mov
sub
test
xor
xchg
out
inc
in
scas
sub
sub
ss
cmps
inc
xchg
lods
inc
mov
movs
inc
data16
xchg
(bad)
dec
or
mov
leave
ffreep
outs
pop
fisub
hlt
loop
fidiv
imul
mov
sub
and
mov
jns
mov
mov
inc
inc
push
jno
and
pop
mov
sbb
push
retf
xor
dec
mov
xchg
xchg
fdivr
(bad)
retf
sbb
xchg
vmread
cmp
(bad)
xor
pop
dec
nop
and
jns
es
push
ror
out
pop
inc
nop
add
mov
or
jmp
or
movs
mov
xchg
xchg
and
xchg
mov
pop
cdq
mov
ret
pop
bound
jne
jge
jle
jo
mov
mov
inc
mov
aad
and
sahf
jns
add
popf
inc
mov
std
xchg
mov
stos
dec
add
not
jecxz
icebp
add
sbb
lea
lock
nop
cmp
dec
push
and
or
jmp
jle
test
mov
fild
idiv
das
movs
sbb
jne
dec
jb
sbb
jmp
repz
pushf
push
mov
dec
aad
bound
xor
xor
ds
sub
xchg
psubw
js
cli
add
imul
cmps
mov
mov
and
data16
fdivp
mov
mov
mov
aad
imul
xor
and
add
xchg
adc
pop
push
adc
test
dec
es
aam
mov
add
sti
pushf
jns
rcr
add
sbb
stos
push
and
scas
xor
push
jle
dec
or
lea
fisttp
xchg
push
ret
push
scas
jnp
cmp
fld
dec
xchg
je
xchg
sub
and
xchg
dec
out
lods
push
imul
mov
fsubr
call
and
sbb
loopne
js
sub
out
jmp
cdq
add
ins
out
arpl
and
mov
test
jno
mov
pusha
cmp
push
or
fistp
(bad)
ins
sbb
mov
pop
call
sub
xor
iret
jns
gs
or
jo
imul
loope
pop
int
push
jnp
inc
sbb
xchg
cmp
sbb
pop
leave
aad
push
pop
cmps
mov
std
out
jae
in
cmp
xor
stos
inc
rcr
mov
cwde
and
and
push
shr
adc
mov
fsub
add
cmp
push
ss
test
popf
add
sub
jno
xor
ds
cmc
pop
lods
adc
rcr
jns
pop
sbb
sub
loope
imul
mov
adc
repz
cmp
dec
add
and
dec
cdq
adc
(bad)
push
dec
dec
shl
lods
mov
xor
mov
mov
shr
loopne
inc
int3
mov
dec
repz
jne
push
repz
cdq
mov
xor
dec
pop
inc
rcr
or
cmc
inc
cmp
into
sub
xchg
xor
mov
dec
fisttp
jo
inc
adc
inc
push
and
dec
xchg
mov
cmp
or
dec
push
or
pop
dec
jg
pusha
test
imul
push
aad
dec
adc
dec
lods
out
(bad)
mul
push
daa
jmp
(bad)
cmp
pop
in
xchg
das
xchg
pop
shr
mov
xchg
add
inc
int
mov
rep
mov
dec
out
(bad)
cmc
mov
movs
leave
sahf
add
test
fcom
stos
cli
shl
and
jle
or
icebp
xchg
cmp
and
mov
sub
in
adc
mov
mov
jns
enter
movs
add
fisttp
push
(bad)
inc
cli
cs
arpl
into
rcr
sub
jo
adc
sub
retf
fidiv
add
and
dec
fnstcw
aad
outs
lods
std
fbstp
jbe
xor
jecxz
retf
jp
and
xor
popa
xchg
xchg
jle
add
jg
xor
mov
add
js
push
sbb
inc
je
sbb
pop
dec
and
and
dec
int3
loope
mov
outs
sub
shl
retf
cmc
aad
sub
and
out
xchg
mov
loope
mov
(bad)
clc
ss
mov
into
push
ret
xchg
jp
loope
in
repz
xchg
jne
add
xor
neg
inc
dec
(bad)
push
add
cmps
inc
push
jns
js
xchg
sub
mov
pop
movs
loope
inc
push
mov
jge
push
xchg
jp
xlat
push
add
add
lods
mov
addr16
sar
es
sbb
shl
icebp
lods
retf
mov
xor
push
adc
scas
jae
mov
lods
jge
mov
(bad)
shl
leave
gs
arpl
and
in
pushf
or
jne
adc
cdq
gs
xchg
aaa
mov
imul
add
mov
(bad)
arpl
mov
lock
popa
jp
xchg
sbb
mov
xor
mov
dec
sub
xchg
aas
mov
xchg
or
or
test
mov
mov
(bad)
hlt
retf
pop
vminss
pop
sub
xchg
jp
loopne
or
stc
shr
mul
repnz
das
cld
movs
ror
jae
sbb
push
imul
mov
add
and
aas
inc
or
or
or
inc
enter
sti
js
mov
hlt
dec
or
stos
jmp
mov
cmc
fldcw
repnz
pop
ret
mov
push
jne
inc
and
je
and
mov
cdq
std
dec
mov
mov
or
sub
jmp
lods
push
inc
adc
repz
xor
cs
xor
adc
adc
cdq
xchg
gs
call
xchg
add
jge
mov
sub
sub
fldenv
clc
sbb
jp
sbb
call
leave
fld
pop
jge
in
xchg
push
icebp
add
mov
lea
mov
mov
ds
inc
popf
sbb
jbe
adc
test
das
std
push
and
xor
imul
jp
mov
xchg
dec
and
add
add
and
dec
mov
xor
dec
cld
outs
adc
mov
sbb
movs
rol
fs
scas
stos
fsub
fwait
daa
loope
xchg
dec
ss
mov
inc
pop
out
or
movs
mov
sub
movs
in
popf
xor
mov
mov
stc
jge
test
pop
sub
ss
ret
es
add
dec
(bad)
cmp
pop
add
pop
or
shl
cld
jecxz
push
idiv
or
popf
jge
iret
dec
sub
int3
rol
add
mov
sub
sbb
pop
dec
aaa
mov
mov
retf
imul
and
sub
or
inc
movs
mov
cmps
mov
int
xor
mov
inc
mov
xchg
sbb
dec
push
ja
and
sub
jp
push
xchg
xor
cmp
mov
mov
lods
adc
out
sbb
pushf
push
xchg
add
int
xchg
xchg
add
repnz
inc
adc
dec
xlat
movs
add
add
test
or
xchg
fidiv
sbb
jge
ja
dec
mov
sub
adc
pop
sbb
push
push
mov
dec
sub
ret
mov
jg
push
add
(bad)
inc
mov
dec
sub
cmp
inc
sub
popa
js
xchg
mov
ins
mov
movs
lods
or
pop
cmp
call
xchg
cmps
mov
inc
jmp
in
mov
jle
(bad)
pop
inc
aam
ja
into
inc
jmp
ja
ret
xchg
pushf
popf
popa
rcl
pop
adc
sub
neg
xlat
pop
xchg
orps
jne
fcom
mov
js
xchg
xchg
pop
aaa
push
or
mov
test
jecxz
dec
(bad)
pushw
dec
mov
pushf
jl
nop
mov
jle
adc
loopne
icebp
sbb
and
hlt
test
jle
jnp
xor
mov
adc
xor
pop
add
stc
popf
xchg
(bad)
adc
out
lods
cmp
pop
scas
ins
out
(bad)
push
cmps
jb
mov
lea
repnz
sbb
or
sub
xchg
adc
add
and
dec
add
sbb
loopne
sbb
mov
xor
adc
xor
out
xchg
xchg
mov
hlt
inc
enter
loope
adc
test
push
loopne
mov
mov
jae
js
xchg
ins
and
test
cmc
sbb
dec
or
gs
ret
scas
(bad)
int3
dec
idiv
sbb
pushf
jmp
sbb
sbb
pop
movs
inc
mov
dec
movs
mov
mov
mov
lds
mov
loope
cmps
jne
jne
fiadd
mov
or
ins
ss
(bad)
push
sub
push
bound
sub
add
loop
cmp
sahf
ds
pop
nop
push
mov
in
inc
mov
push
sub
mov
cli
lahf
jns
int
leave
adc
scas
outs
dec
fcomp
cmp
xlat
xor
pop
scas
call
mov
push
jl
pop
dec
sub
dec
cmp
push
sub
push
mov
jns
pusha
clc
loop
imul
inc
and
dec
sbb
stc
push
into
pop
inc
pushf
jmp
out
mov
sbb
xor
dec
push
aas
js
ds
mov
cmp
cli
test
pop
jmp
lock
loope
jae
mov
or
movs
jp
mov
or
cmp
sti
ret
clc
hlt
aas
mov
ret
int3
mov
in
inc
(bad)
and
scas
mov
fwait
hlt
ror
sub
cwde
jb
and
mov
add
sub
pop
dec
and
je
jno
mov
test
sbb
mov
push
and
ins
xchg
jno
inc
jb
sub
mov
or
sti
int
cli
iret
aas
(bad)
aaa
mov
jnp
in
hlt
adc
mov
fucomip
sar
hlt
test
sbb
mov
sbb
jae
rcl
retf
dec
sahf
dec
loope
mov
xor
sbb
bound
retf
mov
aas
popa
les
pop
lds
inc
stc
and
sub
popa
and
rol
jg
or
mov
adc
add
movs
(bad)
add
cmc
mov
inc
mov
jne
xchg
lods
mov
fnstsw
sub
test
fyl2x
sub
jmp
mov
cdq
iret
jmp
imul
out
cdq
xchg
xchg
xchg
mov
(bad)
ins
mov
gs
mov
mov
sub
lock
jg
pop
es
pop
push
xchg
adc
in
mov
pop
lods
inc
rcl
enter
sti
arpl
dec
ss
jne
nop
xchg
shl
leave
repnz
lahf
and
aaa
mov
mov
jp
pusha
fwait
sahf
(bad)
icebp
ins
fnstsw
add
cld
and
dec
(bad)
aaa
mov
(bad)
mov
mov
loop
pop
leave
or
xor
sbb
push
pop
inc
enter
fst
push
push
xchg
mov
out
movs
enter
mov
into
punpckhbw
int3
add
outs
inc
sbb
push
mov
repnz
cld
pop
shl
fisttp
dec
pop
xor
and
enter
nop
call
imul
enter
mov
push
ss
dec
mov
mov
and
cmps
mov
add
(bad)
in
xor
inc
add
test
sub
cmp
cmps
xchg
fisub
push
popa
iret
(bad)
jmp
(bad)
and
lahf
jo
adc
inc
adc
jnp
adc
xor
mov
mov
out
stos
ja
push
in
outs
daa
push
(bad)
adc
fimul
popf
(bad)
bnd
leave
fisttp
mov
outs
mov
xchg
cmps
jo
repz
out
repz
jae
rol
cmp
stos
ds
and
data16
jo
mov
out
jmp
shl
add
daa
(bad)
mov
bound
and
xor
retf
div
push
xchg
test
push
inc
aaa
jnp
adc
pop
cmp
mov
js
ins
pop
adc
stc
push
inc
jns
test
xlat
or
loopne
dec
popf
cmp
push
iret
mov
pop
push
hlt
fucomp
outs
popf
dec
mov
adc
sbb
and
popf
xor
dec
lea
popa
sbb
inc
adc
inc
mov
pop
rcl
sub
dec
daa
cwde
data16
mov
jp
adc
push
adc
inc
ss
ret
leave
mov
mov
inc
sbb
jecxz
lods
inc
xchg
data16
jns
jo
cmp
ins
xor
sub
jae
push
fisubr
test
aaa
mov
in
xchg
es
xlat
(bad)
js
mov
inc
sub
adc
sub
mov
xor
push
mov
test
imul
gs
cld
fisubr
push
and
push
mov
pmullw
cwde
xchg
xor
mov
mov
lock
ret
enter
loop
xchg
cmc
xchg
add
out
sub
cmp
xchg
int
stc
cmp
and
mov
es
ficom
pop
je
iret
cmps
in
loopne
xor
mov
ins
es
jp
in
repnz
sub
and
mov
cdq
mov
stos
popa
fistp
icebp
fstp
repnz
jecxz
ret
out
adc
repz
cwde
fld
mov
leave
mov
xchg
fldenv
pop
out
and
in
inc
(bad)
xchg
shr
push
movs
test
imul
les
or
mov
es
cmp
icebp
pop
rol
mov
xchg
daa
daa
popf
and
add
shl
inc
mov
mov
test
lock
scas
cmp
sbb
test
inc
add
xlat
iret
ja
jecxz
mov
jae
imul
jp
adc
ins
push
aam
fistp
xor
cmp
in
stc
aas
pop
fwait
daa
movs
lea
sti
cmp
lock
rcl
cmps
std
inc
jo
xor
mov
in
or
bnd
cld
cmp
pop
cs
addr16
out
(bad)
jae
(bad)
cld
pop
mov
dec
adc
sub
or
popf
lahf
ret
cmp
rcl
pcmpgtw
mov
ret
sbb
mov
or
pop
stc
cdq
fwait
out
push
daa
adc
xor
push
xor
push
scas
or
xor
push
shl
adc
xchg
xchg
gs
cmps
mov
mov
cmp
dec
inc
or
inc
in
mov
jl
test
popfw
xchg
cli
mov
pop
stos
jge
xor
jae
inc
adc
pop
call
iret
xor
in
cmp
ror
jmp
(bad)
jnp
nop
cmc
jo
mov
loop
inc
sbb
inc
in
fld
movs
mov
leave
and
add
pop
fs
mov
in
push
aaa
into
sbb
mov
pop
out
xchg
cmc
sbb
jl
mov
adc
mov
test
jmp
popf
and
out
scas
cmc
enter
xlat
ficomp
mov
mov
shl
adc
sti
(bad)
lock
stos
pushf
arpl
adc
and
in
inc
mov
das
das
jle
mov
imul
or
xchg
push
push
bound
loope
shr
fcmove
imul
push
(bad)
sbb
sar
push
enter
xlat
dec
daa
das
test
inc
and
add
mov
scas
daa
and
xchg
xchg
mov
outs
jmp
mov
or
cmp
cld
nop
mov
sbb
and
(bad)
out
inc
aam
mov
es
mov
movs
(bad)
lahf
test
or
(bad)
xchg
idiv
sti
std
lahf
out
push
das
call
fiadd
pop
sbb
dec
mul
pop
jp
lods
in
cmp
test
or
xchg
fdivr
xchg
repnz
fs
add
hlt
mov
test
xchg
mov
mov
adc
out
jno
dec
icebp
mov
or
cmc
leave
into
and
xor
pop
fsubr
iret
je
mov
sbb
or
rcl
popf
repz
mov
aam
(bad)
outs
enter
dec
xor
lds
fisttp
out
movs
aas
ds
mov
sbb
push
mov
div
nop
pusha
dec
enter
dec
cmp
(bad)
mov
xlat
lock
xchg
rol
or
cmp
retf
mov
xchg
or
call
cmovbe
repnz
je
xlat
aaa
xor
push
and
push
push
ror
repz
mov
pop
adc
sbb
aas
jne
in
mov
adc
push
out
(bad)
inc
mov
test
fdivr
shl
mov
sbb
mov
push
in
aad
jmp
mov
retf
push
mov
loope
xor
push
push
lock
rcl
bnd
inc
ffreep
in
sbb
bnd
in
inc
inc
out
jae
icebp
inc
loop
sahf
add
cwde
div
pop
pop
cmp
daa
imul
fld
cmp
mov
rcl
or
daa
pop
sbb
ret
addr16
jno
jg
movs
(bad)
imul
stos
mov
repnz
popa
cmp
mov
inc
ds
mov
inc
pop
mov
mov
jmp
imul
jmp
call
push
jno
movs
xchg
lea
je
call
lea
and
push
jns
(bad)
call
popa
pop
inc
cmp
in
call
sub
popa
sub
push
mov
add
jb
inc
push
addr16
mov
aas
xchg
sbb
or
mov
push
cwde
adc
xor
popf
or
mov
xchg
call
or
mov
cwde
xor
cdq
lods
(bad)
jge
jbe
mov
and
in
fisttp
scas
addr16
out
test
mov
jne
or
lea
in
pop
enter
jle
popa
add
push
sub
lock
dec
inc
sbb
add
adc
idiv
(bad)
aad
stos
rol
loop
xchg
ffreep
xor
inc
std
or
ins
pop
push
fisubr
cwde
pusha
call
push
push
mov
daa
and
jge
sti
mov
jne
pop
inc
cmp
ret
inc
and
in
jmp
jns
nop
xchg
xor
pusha
repnz
jbe
pop
sub
cld
rcl
jne
jmp
call
xchg
lock
xor
retf
pop
fdiv
sti
or
jns
add
and
fwait
and
retf
jb
das
sub
ja
and
mov
sub
cdq
std
or
test
sbb
xchg
mov
leave
and
mov
xor
aam
aad
and
jne
inc
(bad)
cmps
mov
and
int3
call
rcl
test
shl
cld
dec
add
or
ja
int3
sub
inc
fadd
push
mov
jle
xor
sar
popf
or
out
sub
or
call
icebp
jo
inc
lock
or
inc
outs
jl
clc
and
inc
add
adc
or
add
inc
pop
fcmovu
pop
mov
push
fiadd
sub
xchg
scas
pushf
cld
mov
in
adc
inc
jns
outs
push
mov
les
mov
inc
or
pop
enter
pop
ret
jmp
mov
retf
sti
test
lea
hlt
fcomp
sbb
or
cmp
retf
push
and
mov
stos
imul
sbb
mov
outs
push
mul
xor
pop
fucomip
ficomp
dec
and
rol
fwait
inc
adc
pop
lods
xor
jne
jmp
loope
in
scas
cwde
mov
mov
pop
out
mov
test
mov
dec
imul
les
jnp
or
or
push
inc
(bad)
imul
inc
std
pushf
xor
in
mov
xchg
push
cwde
inc
sub
lea
cmp
cmp
rcr
mov
imul
cmps
imul
lock
(bad)
stc
xchg
shl
(bad)
cwde
(bad)
sbb
jecxz
retf
inc
(bad)
xor
mov
outs
lods
call
mov
sahf
mov
fcom
ror
je
pop
and
cmp
or
jl
ins
and
xchg
iret
das
mov
cmc
mov
mov
mov
push
adc
xlat
and
mov
das
test
jmp
loope
enter
mov
cmps
imul
aam
stos
cld
mov
cmp
outs
fsub
out
daa
sbb
mov
fsub
xor
jecxz
pushf
mov
cld
test
and
aaa
xor
push
mov
cld
pop
mov
adc
pop
jbe
push
or
or
jg
mov
mov
cdq
or
lods
pop
mov
test
stc
pop
sbb
sahf
icebp
dec
or
pop
loope
mov
sbb
loope
pop
pop
call
ds
ret
fnstsw
cmps
pusha
or
mov
pop
(bad)
mov
in
add
aam
add
clc
xor
in
inc
icebp
pop
push
and
sub
paddb
dec
jns
xchg
aaa
stc
mov
pop
arpl
(bad)
repnz
adc
push
push
xor
mov
int
lds
popf
test
push
fidivr
mov
das
retf
pop
jb
aad
and
xchg
mov
cs
in
jge
retf
add
add
stos
cmp
mov
jnp
je
test
dec
enter
pusha
loopne
cmp
sub
xor
mov
das
cwde
sub
mov
push
sbb
call
ins
icebp
in
movs
jecxz
(bad)
or
lods
jmp
sbb
iret
cmp
daa
adc
pop
xor
fdiv
jmp
(bad)
ror
je
daa
mov
cs
cli
mov
mov
mov
and
inc
and
jmp
es
jns
mov
aad
or
cmp
cmp
sbb
call
mov
mov
ret
push
mov
cmp
movs
nop
sub
es
xor
add
or
xor
cwde
jnp
jl
imul
add
cli
gs
fldl2t
dec
outs
push
sub
inc
aam
dec
mov
push
ds
loope
rcl
jae
mov
adc
mov
and
lods
into
jo
movs
inc
add
lods
xchg
lea
dec
call
imul
into
push
cmp
xchg
dec
fld
lahf
rcr
mov
sub
xchg
sub
clc
jns
ret
stc
lods
xchg
push
fisttp
add
sub
cmps
pop
sbb
into
cmc
lods
stos
ins
out
sbb
stos
bswap
and
mov
xchg
ret
ror
test
cmp
jmp
dec
(bad)
out
scas
shr
(bad)
mov
add
adc
lods
imul
inc
ins
iret
in
and
jb
mov
cmps
cdq
js
cmp
sbb
mov
push
fbstp
pop
xor
cld
sbb
arpl
pop
int3
mov
mov
rcl
xchg
test
bound
lea
jae
adc
cmp
sbb
aam
pop
xchg
neg
(bad)
sub
mov
inc
fimul
sbb
and
pop
xor
das
(bad)
or
aas
ja
sub
les
std
dec
mov
jle
popf
call
or
lea
pop
ins
mov
stc
(bad)
rol
cmp
pop
mov
out
xchg
and
pop
dec
sbb
sub
adc
ret
xor
out
mov
in
dec
pop
loop
fadd
cld
xchg
push
sub
adc
mov
test
(bad)
not
ret
iret
dec
test
xor
(bad)
enter
mov
(bad)
cli
je
call
test
mov
pop
int
dec
adc
outs
pop
pop
push
and
icebp
cs
jbe
mov
jns
xchg
je
sub
push
xchg
mov
test
rcl
(bad)
adc
pop
jle
xor
xor
repz
mov
mov
xor
aad
pop
pop
sahf
lds
mov
cmp
sbb
xchg
mov
mov
and
pop
lods
scas
arpl
mov
pop
fisub
sub
mov
ins
shl
jge
stos
scas
cmp
mov
cmp
mov
outs
retf
jb
xor
leave
shr
(bad)
dec
jmp
in
mov
js
jmp
nop
sti
sub
xchg
mov
shl
out
mov
and
fld
push
and
mov
cmps
stos
adc
sbb
test
sub
dec
ss
cmps
xchg
mov
mov
jle
out
push
cmp
(bad)
fbld
cld
inc
dec
ffreep
arpl
arpl
(bad)
rcl
aad
xchg
jecxz
or
dec
icebp
hlt
cs
scas
dec
inc
xlat
push
int3
out
imul
xchg
add
dec
stos
test
retf
in
jge
inc
lea
pop
rol
push
or
sahf
pop
in
xchg
sti
pop
xor
dec
addr16
sub
lods
out
pop
in
repnz
ins
or
jge
scas
or
mov
push
jne
stc
add
mov
call
inc
fadd
nop
and
sbb
(bad)
lock
jb
pop
or
add
xchg
aaa
leave
icebp
aad
jecxz
lods
sbb
fwait
loopne
mov
loop
or
xchg
xchg
jae
popa
mov
stos
repz
sti
mov
fisttp
jno
mov
cmps
add
out
lea
pusha
jge
(bad)
cld
cmps
ja
mov
in
ficom
mov
shr
movs
jp
stc
dec
ds
cs
jo
call
xlat
sub
cld
(bad)
test
xor
ss
cmp
fnsave
xchg
repnz
mov
xor
adc
mov
jns
rcl
cmp
xchg
sti
mov
cmp
daa
mov
das
loope
cmp
outs
cwde
pop
call
movs
cmp
xchg
into
xor
mov
mov
push
retf
in
add
or
push
pop
cmp
add
push
fsubrp
inc
and
cmp
cmp
cmp
popa
xor
xchg
rol
(bad)
jmp
mov
dec
gs
mov
lods
out
ffreep
es
ins
idiv
stos
jnp
inc
imul
adc
sub
(bad)
fsubr
arpl
pop
repz
and
jnp
dec
sbb
jns
jae
pop
jge
fnsave
xchg
mov
test
test
dec
repz
arpl
xor
daa
in
fbld
jg
dec
adc
lods
ror
cmps
jae
jnp
and
hlt
cs
sti
call
mov
mov
mov
call
cmp
adc
mov
jns
xchg
or
add
mov
ss
push
xchg
addr16
leave
dec
or
adc
das
adc
mov
ret
mov
sar
pop
push
mov
fimul
inc
outs
adc
xor
shl
outs
push
xor
mov
jnp
pop
lahf
push
cmps
and
out
push
nop
shl
mov
push
add
stos
pop
mov
outs
jo
or
mov
bound
sbb
xlat
xor
xor
(bad)
mov
mov
loope
lds
mov
mov
sbb
add
(bad)
lahf
shl
xlat
xchg
pop
mov
lods
les
jns
add
pushf
das
jge
or
in
cs
dec
push
mov
cmp
leave
xor
push
ds
retf
inc
push
mov
fdivr
dec
ds
test
lds
sub
mov
(bad)
loop
sbb
xor
mov
xchg
and
xlat
or
adc
pop
inc
and
jnp
sbb
mov
push
imul
mov
dec
adc
mov
pmaxsw
std
(bad)
jmp
retf
fadd
lahf
ins
cmp
dec
fadd
sti
iret
(bad)
adc
lea
scas
vunpcklps
mov
sub
add
dec
out
iret
dec
lea
std
push
fmul
push
scas
fwait
dec
test
imul
jp
rcr
xor
xor
jp
cld
xchg
sahf
dec
cdq
dec
or
shr
jo
mov
jnp
adc
pop
data16
div
cs
xor
jb
sub
cmp
popa
pushf
cmps
mov
fnstsw
fsubr
fidivr
or
or
cli
lahf
and
cmc
repz
xor
jae
nop
sub
inc
aas
inc
sub
cs
xchg
in
test
xor
(bad)
cwde
mov
jnp
adc
inc
lahf
aam
lahf
xchg
sub
mov
sbb
mov
xchg
dec
mov
and
sub
aaa
pushf
jecxz
sub
int
cmp
mov
push
mov
push
dec
push
jmp
arpl
lods
pop
lock
sub
add
ins
adc
sti
sub
xlat
and
adc
fisubr
pop
adc
xor
add
ins
lea
loope
adc
lahf
xchg
fcmovb
adc
hlt
fs
test
mov
sbb
das
das
jmp
pop
mov
and
repz
addr16
mov
xor
fild
xchg
sbb
ins
and
jmp
das
cmp
jl
fisttp
pop
inc
push
je
dec
movs
in
jns
loopne
xchg
(bad)
imul
ja
ss
mov
pop
daa
add
dec
push
retf
div
dec
test
cmp
mov
push
cmps
xchg
cmp
or
stos
retf
fstp
sub
ds
and
jmp
and
jnp
lods
mov
ficom
pop
inc
adc
or
add
xchg
adc
push
data16
sahf
fistp
pop
fadd
outs
shr
jno
mov
cmp
pop
jl
sub
jecxz
add
pop
and
jg
stc
mov
leave
(bad)
jecxz
push
(bad)
neg
repz
fiadd
pop
in
les
add
add
mov
or
rol
mov
pop
sub
mov
jle
adc
fst
mov
retf
cmp
jb
push
cwde
push
lock
mov
cmp
add
xor
into
push
(bad)
fcmovbe
mov
ror
sti
cmp
div
fwait
adc
jle
dec
aad
retf
sti
test
pop
add
xor
mov
ins
sbb
cmps
mov
jnp
div
bound
fcmovne
push
inc
xor
dec
imul
mov
xchg
daa
arpl
cmp
inc
stos
jg
sbb
hlt
push
pop
(bad)
rcl
cmp
jmp
fwait
pop
(bad)
shl
jbe
movs
nop
lock
popa
ss
mov
push
out
cmc
rol
aaa
imul
imul
jl
aas
jns
data16
loopne
ret
fidiv
xor
bound
ja
sub
call
sar
out
test
xchg
sbb
les
jle
dec
add
mov
mov
xchg
loope
mov
inc
mov
ffree
stos
outs
addr16
add
jmp
xor
mov
pop
xor
shr
add
imul
in
leave
pop
sub
nop
xchg
cmp
fwait
mov
ss
pop
fidivr
push
aam
loope
xchg
add
dec
cld
jno
int3
mov
out
js
pop
jp
ret
cmp
gs
popa
push
std
sysexit
mov
xchg
fucomp
push
xor
iret
fwait
sub
(bad)
inc
movntq
out
scas
enter
push
xchg
add
dec
mov
cli
pusha
fsubr
mov
je
inc
scas
in
or
in
cdq
mov
outs
fcomp
out
inc
dec
repz
retf
mov
test
xor
add
cld
sar
jp
imul
aad
mov
ss
mov
push
hlt
ss
sahf
or
sahf
dec
int3
inc
add
(bad)
rol
shl
adc
gs
mov
cmp
leave
pop
arpl
inc
aaa
xchg
stos
outs
mov
fisub
inc
inc
add
sbb
sbb
mov
movups
dec
or
ret
or
add
xchg
jo
xor
fwait
pop
adc
inc
adc
xchg
inc
hlt
mov
movs
sbb
or
inc
or
aaa
jp
dec
and
mov
test
jp
std
dec
cmps
sbb
cld
cmps
mov
gs
(bad)
jnp
not
push
dec
mov
lock
pop
dec
and
pusha
xor
mov
sbb
pop
inc
xor
repnz
jno
dec
nop
les
lds
out
sub
je
mov
xor
pusha
imul
and
push
scas
cld
ja
push
imul
sub
nop
xor
inc
das
ret
mov
jbe
nop
in
jp
mov
cdq
sbb
sbb
inc
stc
fadd
clc
sub
cmc
jmp
jp
mov
xchg
js
loop
sbb
cmp
push
fwait
sub
or
pop
xchg
(bad)
xchg
(bad)
pushf
clc
and
gs
cmc
call
push
or
(bad)
outs
jmp
add
inc
stc
inc
cmp
out
outs
mov
test
je
fsub
xchg
test
not
(bad)
cmc
adc
mov
add
add
adc
ins
loopne
pop
ds
jns
dec
int3
and
ds
fisttp
mov
push
or
pop
push
or
stc
mov
and
loope
push
iret
les
sbb
push
dec
cli
(bad)
push
mov
rol
sub
data16
pusha
rcl
fnstsw
push
sbb
jg
cmp
lock
jbe
cmps
inc
push
push
and
fdivr
lds
shl
es
(bad)
xchg
in
ss
and
outs
scas
push
mov
rol
outs
mov
mov
imul
push
push
mov
and
sbb
data16
(bad)
adc
dec
ret
mov
mov
enter
push
and
xor
xchg
mov
push
std
add
call
mov
cmp
pop
ror
cwde
dec
out
rol
rcr
retf
push
pop
hlt
lods
ret
nop
mov
push
lods
dec
inc
sar
arpl
add
out
movs
rcr
outs
push
(bad)
mov
jmp
mov
pusha
xchg
daa
into
fistp
or
je
mov
outs
mov
loopne
jge
pop
fistp
xor
stc
xor
pop
(bad)
mov
sti
or
lods
cmp
stos
lock
mov
dec
lea
push
hlt
xor
ror
stos
adc
fcom
retf
ins
dec
pop
sbb
push
xlat
xor
je
or
(bad)
fisubr
cmp
cmc
mov
push
repz
cld
ret
mov
add
(bad)
pop
push
addr16
stos
jg
jmp
loope
inc
jo
lock
cmp
mov
addr16
mov
mov
inc
mov
push
out
es
pushf
inc
inc
loope
pop
mov
ja
movs
cmp
and
lods
cmovle
mov
and
ror
adc
dec
fld
es
xchg
mov
scas
sub
inc
cmps
(bad)
dec
xchg
push
call
xchg
rcr
mov
loop
outs
mov
addr16
inc
xchg
ret
mov
mov
dec
push
push
mov
xlat
das
bound
xor
jg
popf
prefetchw
jecxz
cmp
and
adc
xor
(bad)
mov
cmovno
mov
mov
jnp
adc
enter
and
shr
les
sub
rol
(bad)
jmp
mov
add
pop
add
add
add
xchg
leave
sbb
shr
sbb
gs
cmp
js
dec
and
add
push
adc
int3
sub
ror
rcl
push
sbb
jb
pop
xchg
dec
cmc
add
mov
or
pop
xchg
xor
sahf
out
imul
mov
popf
or
xor
fmul
ins
cmp
jmp
pop
out
les
mov
jo
dec
call
xor
or
cmps
je
xlat
loop
pop
adc
jg
hlt
outs
cwde
cmp
jnp
stos
fsubr
and
xchg
mov
mov
jo
adc
mov
stc
xchg
and
jns
mov
idiv
adc
mov
retf
movs
dec
mov
imul
and
(bad)
xor
fadd
inc
mov
jle
xchg
dec
xor
jmp
inc
lods
out
inc
loop
sbb
mov
dec
shr
(bad)
lock
outs
xor
pop
pop
bswap
fnstsw
outs
push
jb
jo
or
aaa
inc
retf
mov
or
or
dec
push
lods
dec
enter
jnp
mov
dec
adc
inc
mov
or
mov
rol
test
in
je
in
xchg
jmp
or
lahf
je
std
(bad)
mov
cmp
jne
cmps
and
imul
in
push
push
push
pop
lahf
test
xor
xor
adc
repnz
ins
push
loop
int
jnp
js
and
dec
adc
retf
cmc
fimul
mov
scas
aaa
mov
pop
cmp
mov
xchg
jb
jbe
mov
outs
xor
dec
ins
(bad)
jbe
inc
sbb
mov
dec
in
jg
mov
push
inc
jbe
cs
les
test
aam
dec
jge
push
shl
jmp
mov
jo
and
mov
aas
loop
cmp
cmp
in
jo
push
mov
adc
retf
jmp
dec
sbb
loope
fnstcw
sbb
test
sbb
add
dec
idiv
pop
or
push
dec
mov
shl
pop
lods
jnp
jmp
or
jp
enter
je
or
imul
inc
ins
xor
adc
out
enter
cmp
cmp
mov
aad
inc
cmps
push
fdiv
mov
jno
cmc
cmp
fist
or
mov
mov
and
jo
or
stos
xchg
ss
fadd
xor
mov
adc
adc
inc
mov
ds
jb
xor
pop
out
outs
push
icebp
jb
imul
fistp
repnz
dec
js
cli
adc
sbb
std
ds
dec
rcr
ror
xor
cmps
mov
xor
and
sub
sbb
jle
xchg
hlt
dec
ss
sub
test
imul
jbe
cmc
sbb
scas
movs
call
div
hlt
push
push
inc
sub
xchg
jb
sar
and
out
add
loop
and
(bad)
dec
dec
es
in
sahf
fidivr
dec
adc
mov
aaa
jne
shl
cmps
pop
ficomp
cli
sbb
mov
mov
aad
das
pop
adc
push
sti
int3
fstp
jb
xchg
test
cmp
pop
fdivr
mov
sahf
movs
sbb
shl
dec
call
pop
xlat
(bad)
adc
jae
lods
das
outs
mov
pusha
retf
pop
xchg
inc
mov
ins
xchg
inc
xchg
arpl
push
in
mov
mov
mov
and
retf
adc
out
jle
in
mov
push
mov
lea
mov
bound
xchg
iret
fwait
pop
mov
jno
test
aam
push
leave
jns
add
movs
jge
fbstp
push
ja
or
nop
stos
add
icebp
sub
gs
lea
push
jne
mov
jmp
xor
shl
cmp
mov
fadd
dec
dec
ins
pop
mov
mov
add
out
in
js
arpl
push
pop
pop
iret
out
stos
stos
mov
ret
sbb
ret
imul
call
repnz
lock
pop
add
(bad)
es
fidiv
pop
int
stos
push
or
fidivr
outs
pop
sub
adc
fistp
jecxz
in
dec
jnp
push
adc
mov
xchg
xor
push
leave
bound
in
xchg
loopne
sbb
int3
push
push
xchg
push
xchg
push
adc
mov
and
sbb
xchg
out
or
js
pop
(bad)
jmp
adc
aad
ret
test
push
xchg
push
popa
cld
repnz
in
fidiv
inc
nop
xor
inc
xacquire
imul
xor
in
lea
and
pop
mov
xor
dec
or
inc
mov
(bad)
and
bound
cdq
rcl
rcl
ret
jmp
imul
retf
ds
jne
mov
add
cmc
or
mov
jae
cmp
pop
add
jg
cs
(bad)
ret
bound
add
add
out
int
enter
sahf
adc
xor
xchg
and
into
aam
mov
mov
aaa
daa
cld
mov
dec
test
adc
mov
and
cmps
dec
cwde
(bad)
sub
mov
push
popf
xor
inc
or
push
push
cmps
rcl
les
(bad)
xor
mov
rol
mov
add
call
pop
pop
pusha
mov
aas
arpl
sbb
mov
push
pop
loop
add
rol
jmp
daa
push
mov
jg
ins
mov
sbb
idiv
repnz
and
movs
cdq
cmp
push
cmp
pop
pushf
dec
add
mov
mov
pop
inc
jmp
stc
pop
adc
rol
(bad)
lea
mov
(bad)
repnz
xchg
stc
mov
inc
lods
inc
(bad)
cmps
in
in
repz
out
xchg
ins
push
shr
sub
fs
fcmovne
mov
loope
jp
das
mov
jp
cld
out
aas
pop
and
std
mov
loop
jle
dec
stos
fs
cmp
into
frstor
sahf
shl
into
cmps
std
loopne
adc
pop
pop
push
stc
jns
xor
(bad)
push
aad
retf
inc
or
sbb
sbb
bound
sbb
push
fiadd
push
int3
xor
sub
dec
jge
leave
lea
les
fld
or
out
mov
jb
xchg
sub
push
imul
dec
jmp
pop
jne
sbb
adc
xlat
xor
mov
sub
cmps
(bad)
fcom
push
(bad)
scas
mov
scas
in
mov
xchg
loope
sbb
fist
arpl
lds
enter
nop
jo
iret
test
out
je
nop
movs
xor
in
sub
push
jl
dec
cmp
leave
sub
data16
or
in
push
hlt
sub
mov
fst
xchg
push
daa
ret
popa
dec
mov
push
ficomp
fisubr
adc
out
and
call
mov
daa
jmp
cli
stc
test
mov
loopne
lea
icebp
jp
mov
jg
mov
aas
repnz
push
movs
mov
movs
test
(bad)
push
sbb
or
test
cmp
aam
int3
ror
fistp
sbb
sub
repz
cwde
xchg
pushf
add
lods
push
jmp
in
inc
fdiv
lahf
mov
sub
push
ins
jb
outs
mov
dec
sbb
jp
pop
add
lock
fs
jmp
dec
fdivr
mov
iret
sti
iret
jnp
add
push
int3
xlat
fidivr
fld
clc
mov
xlat
mov
sbb
mov
lahf
mov
test
jo
mov
or
movs
in
cwde
sar
add
int3
aad
into
adc
repz
jl
pop
push
lahf
stc
adc
xchg
call
rol
ds
mov
xchg
add
adc
sahf
mov
imul
add
(bad)
xor
add
jb
daa
sub
sbb
mov
adc
pop
inc
repz
push
adc
or
cmp
push
int3
jb
push
fdivr
scas
scas
cmp
or
add
aad
sbb
imul
ret
js
fsub
xchg
cmp
fdiv
addr16
mov
pop
mov
cmp
xor
and
jmp
adc
retf
inc
int3
gs
jmp
mov
adc
bound
or
inc
jbe
lds
sbb
lds
sbb
mov
(bad)
push
(bad)
(bad)
inc
and
pmaddwd
and
lea
in
push
fprem
mov
test
dec
add
outs
out
in
daa
push
adc
jmp
loopne
mov
cli
adc
inc
dec
jns
jmp
fld
enter
sti
(bad)
xchg
xor
jns
mov
fmul
jmp
sub
mov
(bad)
mov
mov
cmp
sub
xor
jbe
stos
xlat
jno
xor
arpl
lods
mov
jg
inc
inc
gs
mov
cdq
pop
addr16
jge
or
loop
clc
push
cmp
adc
mov
hlt
or
push
jns
aas
mov
inc
sub
add
cmp
jmp
in
arpl
xor
push
add
mov
nop
or
xchg
pop
adc
fs
or
pop
not
push
imul
ror
clc
sub
dec
imul
js
and
ds
pop
mov
out
stos
xor
push
mov
pop
stos
out
jge
in
ds
cdq
inc
jl
jmp
aam
stos
xor
cmp
pop
pop
(bad)
in
test
call
xchg
jmp
test
ret
stos
cmp
out
clc
jmp
cmp
out
pop
dec
push
sub
xor
inc
inc
or
push
sub
sbb
ds
retf
dec
popf
std
pop
fdivp
sub
push
loope
cmp
ss
lods
iret
aaa
sbb
mov
cld
es
push
mov
into
pop
dec
push
(bad)
xlat
shr
fld
movs
xor
or
retf
test
xor
in
add
call
loop
xchg
jmp
fldcw
adc
and
enter
or
mov
pop
repnz
fsubr
xchg
fwait
sar
cmp
mov
in
or
or
test
pop
mov
pop
sbb
data16
mov
xchg
push
pushf
sbb
push
(bad)
cmps
les
fisttp
gs
adc
repz
enter
mov
jno
mov
adc
into
mov
out
pop
mov
mov
sub
(bad)
into
daa
mov
jne
sub
pop
mov
mov
(bad)
repnz
jo
stc
mov
ret
mov
mov
ret
lods
inc
cmp
xchg
xor
jecxz
inc
jnp
scas
xor
std
gs
pusha
rcl
enter
pop
in
inc
xchg
xor
cmp
fs
or
push
cmp
add
cs
cmp
dec
icebp
outs
lahf
fcos
mov
fs
pop
push
out
fs
test
fisub
(bad)
mov
retf
inc
xchg
retf
es
in
xchg
cmp
push
adc
dec
daa
sub
sub
scas
daa
adc
dec
std
mov
sbb
cmc
mov
ror
loope
out
enter
push
dec
jg
test
call
enter
xor
push
jnp
out
jmp
bound
lods
or
push
ja
xor
jb
sub
or
adc
adc
ins
into
in
ds
mov
mov
rcl
rcr
and
add
out
or
fdiv
inc
mov
jne
jecxz
xchg
(bad)
lods
jmp
dec
cmovns
jg
adc
add
sbb
pop
push
stos
test
jmp
and
pop
sub
movs
adc
repz
mul
push
(bad)
int3
clc
imul
sub
inc
lods
push
or
add
and
add
dec
in
popf
scas
ins
pusha
mov
cmc
xor
lahf
dec
out
push
jae
cmp
stos
adc
stos
mov
test
fxch
rcl
test
retf
mul
adc
mov
clc
js
int
scas
xchg
mov
push
xor
jns
add
cmc
arpl
loope
popa
sti
dec
ja
fsub
test
int3
cmc
(bad)
jecxz
sbb
test
mov
lock
fld
mov
fist
push
in
es
push
push
mov
dec
pop
jmp
and
sahf
jo
leave
jge
rol
scas
cmps
inc
mov
inc
jle
xchg
mov
(bad)
mov
mov
sub
mov
neg
mov
aas
pop
mov
retf
stc
outs
call
pop
pop
mov
pop
in
popf
int3
sub
xor
add
dec
mov
in
dec
push
push
pop
in
mov
icebp
mov
cmc
stos
mov
xchg
(bad)
mov
inc
pop
sub
cmp
mov
out
push
jno
jns
arpl
fnclex
into
fild
and
int3
mov
data16
xor
pushf
or
or
xchg
push
or
sbb
sti
loop
outs
mov
int
and
ds
and
rcr
pop
ror
out
push
cmp
inc
ret
icebp
xlat
inc
nop
sub
jle
push
mov
imul
sbb
(bad)
jns
dec
jp
push
popa
sub
fnclex
or
data16
out
add
je
add
mov
stos
jmp
loop
hlt
(bad)
pushf
add
(bad)
cwde
(bad)
fst
rcl
cmp
rcl
sbb
mov
or
lahf
dec
xchg
fdiv
sti
aad
not
je
sub
jnp
cmps
div
xor
inc
lds
call
xchg
repnz
mov
xchg
push
call
pop
xor
mov
xor
(bad)
test
mov
inc
leave
movs
or
vaddps
addr16
loopne
out
lahf
addr16
popf
rol
repnz
(bad)
addr16
loope
mov
jecxz
out
adc
push
mov
fcom
xor
xor
mov
cli
fisub
mov
fimul
xor
in
in
mov
pop
add
aas
mov
pop
repz
mov
repnz
mov
jb
dec
mov
adc
mov
popf
push
dec
ds
stc
dec
into
jae
loopne
sub
dec
movs
in
xchg
mov
gs
jl
xor
inc
test
jns
daa
shl
test
jmp
mov
sub
xchg
cmps
mov
pop
mov
sub
mov
lods
push
bound
aas
movs
cld
out
push
jbe
pop
xchg
add
push
jmp
lds
inc
(bad)
into
idiv
(bad)
ficom
or
add
mov
mov
scas
or
sbb
dec
inc
and
lock
mov
xor
sbb
out
jecxz
sub
pop
(bad)
into
xchg
popf
lahf
mov
cli
popf
add
sbb
and
mov
push
or
add
outs
mov
push
sar
inc
mov
fldcw
push
adc
sbb
fcomp
dec
inc
pop
stos
push
fldl2e
out
fprem1
push
(bad)
add
fnstsw
mov
clc
fs
jge
das
test
pop
imul
inc
mov
movs
jle
rep
pusha
lahf
daa
push
in
jo
inc
inc
out
pop
sub
stos
test
and
pop
(bad)
dec
xchg
cmp
xchg
imul
aad
or
ror
xor
mov
aam
outs
push
scas
leave
jmp
xchg
std
sbb
sub
push
sbb
pop
jo
pushf
shr
loope
xchg
movs
jo
pop
mov
inc
mov
stc
js
cs
push
sub
loope
jle
xor
sbb
or
clc
sti
enter
mov
test
lds
lds
rcr
aam
cdq
lods
mov
xchg
jmp
fstp
jne
xor
mov
scas
cmp
dec
push
out
xchg
lods
jae
ins
pop
aaa
cs
fcmovu
je
rcl
mov
fidivr
stos
aas
ins
test
ds
mov
sbb
outs
(bad)
mov
movs
fcomp
sub
int
add
test
rol
or
lods
movs
iret
cmp
jmp
mov
in
mov
ret
add
arpl
push
add
out
aam
out
lea
in
pop
jns
or
pop
in
mov
jae
sub
or
in
adc
aaa
adc
sbb
mov
mov
xchg
idiv
sub
test
mov
scas
scas
xchg
push
ucomiss
retf
in
jge
idiv
fnstenv
jbe
movs
jae
mov
scas
stos
adc
not
leave
push
in
fldcw
xchg
loop
mov
int
inc
sbb
pop
hlt
int
arpl
mov
pop
dec
mov
mov
lods
retf
pop
adc
movs
sub
pop
sub
push
xor
cmp
adc
pushf
mov
idiv
repnz
rcr
pop
lods
cmp
ss
mov
pop
enter
fnstcw
dec
xchg
outs
ror
cmp
and
xchg
push
sti
cmps
retf
cmp
add
daa
xchg
mov
mov
loopne
gs
push
xor
pusha
xlat
xchg
xor
in
jl
lea
jmp
ret
mov
leave
and
out
sbb
mov
scas
push
outs
in
fldcw
fdiv
xchg
pop
rcr
mov
xor
push
out
sbb
call
pop
xor
push
sub
xor
jnp
jg
adc
out
pop
pop
fmul
retf
xor
sub
and
xchg
ret
sbb
dec
mov
scas
pop
fbld
dec
test
clc
push
push
out
ins
int3
sbb
int3
(bad)
mov
cld
je
mov
arpl
mov
sub
hlt
xchg
jmp
(bad)
xor
popf
xchg
stc
and
(bad)
je
icebp
das
jbe
mov
int3
sbb
test
or
dec
call
not
push
mov
je
mov
clc
mov
sub
scas
test
lods
adc
sbb
inc
xor
or
xchg
js
fild
jno
lds
add
xor
loopne
bound
jae
fst
sbb
inc
hlt
adc
and
sti
test
icebp
jle
aas
fs
xlat
xor
sbb
mov
scas
ja
mov
repnz
sahf
ret
cmp
imul
push
out
xor
mov
adc
retf
dec
push
mov
fldenv
out
pop
(bad)
shr
mov
fist
(bad)
xchg
ins
or
mov
addr16
xchg
in
imul
stos
or
movs
add
fmul
dec
sar
xchg
not
out
push
ja
ret
call
ret
cmps
add
sbb
mov
adc
dec
add
cmp
and
jecxz
es
loop
lahf
adc
jne
test
inc
jmp
imul
cli
scas
cmp
sti
test
scas
inc
add
mov
lock
lods
loopne
xchg
mov
xchg
jmp
jp
dec
jb
and
lods
xchg
outs
stos
xlat
shl
inc
add
pushfw
adc
dec
pop
jae
cmp
das
add
adc
neg
outs
mov
xchg
retf
mov
inc
mov
outs
and
sub
pop
iret
clc
leave
pop
pop
sbb
adc
or
mov
xor
adc
jmp
repnz
mov
iret
(bad)
xor
stc
movs
xor
div
xor
test
je
aas
fistp
fistp
test
nop
aad
or
xchg
sub
dec
(bad)
out
xor
repnz
mov
js
jb
jl
shl
mov
push
inc
cmc
mov
push
call
in
bound
xor
mov
pop
dec
mov
jmp
fisttp
bound
ror
add
adc
sub
sub
frstor
jecxz
out
and
jnp
xor
dec
cmps
repnz
mov
loope
pop
adc
sbb
hlt
test
inc
or
daa
adc
inc
ins
sbb
sbb
lahf
cmp
cs
pop
sub
push
sbb
pop
add
mov
xchg
or
fadd
sbb
mov
iret
loopne
loopne
xchg
mov
jae
pushf
dec
test
jnp
pushf
nop
call
fs
ret
pop
test
xor
retf
jg
add
cmc
sbb
mov
adc
push
adc
adc
and
cs
(bad)
dec
arpl
add
sbb
mov
addr16
movs
mov
call
stos
in
mov
mov
push
pop
sbb
xor
jo
(bad)
call
mov
cli
inc
loope
daa
mov
or
cmp
mov
jo
jmp
cmp
push
rol
xchg
aam
cmp
ficomp
in
nop
ret
out
mov
or
dec
jecxz
movs
pop
xchg
xlat
sti
or
push
mov
std
test
outs
fistp
mov
fst
or
scas
and
add
and
ret
call
xchg
and
dec
jmp
ja
cmp
hlt
pop
dec
shr
dec
rcr
xchg
pop
mov
jb
ins
int3
test
lahf
or
dec
and
cwde
pop
push
or
lea
icebp
(bad)
fistp
xlat
inc
les
outs
cmp
sub
hlt
xchg
sbb
retf
add
dec
pop
daa
ror
clc
cwde
inc
sahf
lock
fadd
push
mov
pop
sar
adc
jp
xor
loopne
jmp
inc
ins
sar
cwde
add
sar
retf
(bad)
dec
(bad)
sub
inc
jno
mov
aad
sbb
movs
and
or
pop
gs
cwde
outs
je
aad
data16
fistp
fcmovbe
test
dec
iret
jb
loopne
ss
inc
inc
xor
jmp
jmp
popa
les
inc
or
mov
aas
mov
(bad)
bnd
pop
pop
sub
sbb
jo
(bad)
enter
sbb
stos
jae
mov
pop
xchg
mov
into
mov
loope
outs
pop
push
xor
inc
adc
adc
push
push
sub
scas
outs
sub
xchg
scas
icebp
inc
loopne
sahf
ror
sbb
push
push
test
stos
aaa
xor
(bad)
inc
jg
sbb
jnp
mov
rol
sbb
clc
adc
xlat
push
int3
xchg
das
sub
mov
add
and
jae
adc
mov
jne
int3
fadd
cwde
jmp
idiv
push
dec
lds
pop
popa
cdq
in
xor
in
addr16
or
or
(bad)
aam
popf
pop
bound
loope
sub
pop
push
add
loope
push
or
into
fnstsw
pop
jge
ss
ret
lds
jle
loope
or
sub
add
mov
pop
nop
mov
mov
imul
frstor
pop
inc
mov
sbb
pop
test
and
and
test
mov
sub
xchg
sbb
imul
popf
ss
dec
xor
adc
pop
mul
cmp
or
mov
pop
(bad)
fsub
stos
stc
mov
xchg
mov
not
fisubr
pushf
out
imul
push
adc
push
fmul
movs
aas
cmp
cli
mov
(bad)
mov
xchg
push
push
nop
lods
jnp
sub
xchg
mov
inc
jp
cdq
jne
sti
jg
out
xor
sbb
pusha
pop
xor
mov
shr
mov
mov
jbe
scas
pop
cmp
imul
pop
inc
add
sub
jb
adc
cmc
mov
xor
nop
cmp
jle
je
dec
outs
adc
cmp
test
mov
idiv
add
aas
(bad)
out
outs
push
in
in
mov
mov
adc
mov
push
xor
movs
inc
xchg
ret
and
clc
dec
repz
sti
in
fucomp
cld
dec
not
test
mul
fstp
loop
mov
or
xor
sub
loopne
fadd
pop
into
mov
push
push
mov
add
into
adc
cmp
fs
dec
and
jne
sahf
inc
xchg
out
mov
cdq
cmc
lods
scas
dec
cmp
fimul
cmp
push
add
retf
sbb
ret
retf
call
cld
adc
pop
das
adc
pop
adc
daa
or
sbb
xor
and
pop
jp
add
cwde
or
cmp
ret
jl
pop
js
mov
cmc
jns
jp
(bad)
xchg
bound
mov
xchg
mov
rcr
ss
fadd
xchg
leave
fst
cwde
or
and
lock
mov
cmp
aam
scas
sub
or
mov
push
das
shl
cdq
ror
cli
mov
dec
xlat
add
pop
push
sahf
sub
shl
sahf
test
fcomp
inc
and
icebp
fdivr
add
mov
(bad)
daa
cmps
push
nop
mov
pusha
(bad)
je
inc
mov
xor
jle
(bad)
aaa
loop
inc
sbb
jecxz
mov
mov
mov
int3
lea
jb
pop
call
sbb
out
test
lods
(bad)
and
arpl
mov
outs
inc
daa
imul
pop
not
mov
mov
adc
movs
bound
test
cmc
outs
dec
test
rol
cmp
pop
jecxz
xchg
aaa
(bad)
out
add
and
adc
sub
sbb
adc
in
clc
ret
mov
leave
cdq
in
jnp
cmp
ss
stos
imul
ja
sti
mov
hlt
cmp
cmp
ret
stc
aam
push
sar
mov
lock
cmps
jo
aam
xlat
(bad)
ds
jmp
nop
pop
or
add
push
stos
inc
xor
and
ret
dec
xor
push
jmp
in
pushf
rdmsr
jne
ficomp
sub
mov
std
mov
dec
mov
pop
rcl
sbb
lock
repnz
shl
div
add
data16
lea
out
(bad)
push
adc
adc
ds
ror
mov
pop
cmp
mov
or
add
int
out
and
icebp
mov
call
push
test
push
test
and
gs
dec
and
stos
jo
dec
ss
repz
sbb
mov
mov
nop
sub
fsubr
pop
jbe
mov
scas
int3
lock
scas
push
out
rcr
fwait
fwait
cli
data16
dec
(bad)
out
outs
call
sub
jg
and
repnz
mov
jnp
fisub
stos
pop
jo
add
xor
out
mov
mov
leave
pcmpeqb
xchg
push
es
retf
mov
clc
mov
sahf
and
sub
inc
xor
push
sbb
inc
gs
inc
popf
pop
xor
cmps
push
or
jnp
lock
mov
ds
in
xor
dec
jo
lods
movs
sub
and
mov
es
xor
out
xchg
and
dec
push
xchg
xchg
push
test
aas
out
repnz
and
nop
cmp
call
xor
movs
test
out
cmp
fmul
jb
sbb
shl
daa
std
jns
fist
xlat
and
mov
imul
push
dec
sbb
emms
or
push
mov
cdq
sti
addr16
test
add
repz
jmp
rcr
call
mov
inc
fsubr
sbb
xor
sub
popa
dec
data16
fidivr
dec
mov
xchg
retf
xchg
push
test
lds
cmps
pop
cmps
mov
mov
cmp
jle
xchg
scas
aaa
mov
mov
scas
mov
mov
ficomp
mov
into
sbb
(bad)
loopne
xor
inc
stos
pop
push
ins
lods
adc
push
jne
dec
xchg
mov
aas
cmp
jne
(bad)
sbb
mov
leave
lds
ja
lods
fidiv
sub
jg
jmp
mov
xchg
jp
inc
xor
inc
int3
add
push
sbb
mov
mov
repz
fimul
mov
jae
fwait
rcr
push
jmp
or
cmp
adc
cmp
cmc
mov
clc
sub
das
and
add
cmp
dec
loop
push
mov
cmc
jge
int
(bad)
jo
mov
add
adc
or
loope
dec
daa
test
push
mov
fdivr
and
in
xchg
test
shl
aad
(bad)
fisub
mov
ins
fdiv
or
sar
add
popa
into
mov
mov
mov
inc
mov
xchg
cmp
mov
cmps
cdq
cli
push
or
movs
add
pusha
not
jmp
test
jg
or
(bad)
and
mov
loop
out
ja
leave
loop
cmps
movs
fs
cmovnp
xchg
cmp
into
lahf
rcr
fcmovbe
dec
les
test
cdq
and
sbb
call
iret
pop
mov
fild
pusha
add
mov
inc
xchg
jbe
mov
lahf
dec
fwait
xchg
in
pop
mov
mov
cmp
lahf
fdivr
dec
pop
test
es
push
jnp
jmp
sbb
cld
ror
push
test
adc
mov
out
mov
scas
out
test
mov
xor
xchg
leave
(bad)
adc
(bad)
retf
sbb
fisttp
jne
(bad)
shl
xchg
mov
jmp
in
push
je
and
test
jbe
pop
arpl
neg
ret
je
sub
xchg
popa
pop
mov
add
xor
cwde
test
shl
lea
cwde
ret
or
lods
(bad)
(bad)
sub
aad
adc
ins
cmp
mov
loop
lock
cli
and
cmp
adc
repnz
mov
jmp
fcmovb
rcr
mov
sbb
dec
(bad)
repz
arpl
pop
xor
or
cmp
xchg
jp
pusha
ret
sbb
out
(bad)
sub
int3
mov
popa
push
popf
push
inc
cmp
outs
es
es
loop
dec
dec
push
in
fisttp
inc
(bad)
sub
frstor
dec
mov
repnz
mov
ret
xchg
xor
or
aaa
cmp
outs
add
mov
mov
in
mov
mov
imul
xor
daa
adc
or
inc
mov
imul
neg
jnp
mov
cdq
sbb
(bad)
mov
or
ret
mov
es
sub
pop
cdq
call
mov
pop
aas
jb
mov
pop
enter
stos
sbb
dec
jne
jmp
(bad)
pop
push
lahf
rcl
enter
fdivp
xor
inc
sub
stc
scas
popa
rcr
mov
in
shr
xchg
dec
jle
push
sbb
jl
inc
pop
into
and
inc
mov
mov
mov
shl
jmp
or
les
sbb
imul
arpl
cld
pop
inc
sbb
leave
pushf
dec
mov
mov
dec
js
std
stos
push
shr
cmp
add
outs
jg
fs
push
cli
or
push
mov
pushf
inc
sbb
loope
sbb
sahf
mov
jmp
cmps
rcl
jg
or
pop
mov
xor
out
bound
pop
mov
stos
sbb
aad
xor
movs
out
jl
std
scas
test
adc
(bad)
push
scas
mov
sbb
into
cwde
dec
jmp
iret
retf
jbe
in
dec
stos
loope
sbb
call
xchg
in
jbe
push
sbb
iret
add
push
inc
bswap
scas
scas
cdq
cmp
and
xchg
movs
sbb
ds
xchg
xor
or
ret
xor
mov
ss
pop
ret
das
mov
sub
aam
retf
aas
mov
push
mov
jmp
popa
neg
xor
pusha
adc
cs
mov
(bad)
(bad)
mov
(bad)
lock
push
lock
(bad)
ss
adc
cmp
icebp
add
jmp
ret
in
sti
test
mov
aaa
xchg
add
lds
push
cmp
stos
leave
dec
pop
mov
sbb
(bad)
cli
adc
mov
mov
mov
jo
clc
popa
mov
pop
test
push
test
cmc
icebp
rcr
add
cmc
push
mov
jmp
jno
popa
clc
int3
out
mov
or
fld
scas
dec
sar
mov
cmp
mov
jg
sbb
int3
test
inc
cli
loopne
pop
inc
sub
fwait
cmp
xor
dec
jmp
mov
sbb
xchg
xlat
xchg
jecxz
inc
fwait
or
jp
cs
pop
repnz
arpl
leave
or
fucomip
das
mov
mov
pop
and
inc
out
xor
loopne
dec
popa
xchg
aas
cdq
fistp
jmp
pop
or
xchg
ins
out
gs
aas
aad
adc
xchg
pop
adc
retf
dec
fcomp
and
sbb
pusha
mov
inc
sahf
js
mov
pop
inc
mov
dec
push
and
(bad)
xchg
aaa
jg
imul
mov
xor
add
sbb
and
in
sub
xor
out
inc
add
scas
stos
int3
cmp
dec
jae
(bad)
sbb
add
dec
or
pushf
int
mov
gs
push
stos
lods
pop
scas
mov
cmp
add
jg
cmp
pop
xor
inc
call
add
out
push
dec
sti
je
popf
ret
sbb
sub
or
cli
push
movs
repz
stos
jno
cmp
push
mov
inc
inc
xchg
cld
lods
ins
and
and
retf
fiadd
jmp
out
jle
mov
data16
popa
retf
jb
out
les
or
lea
lods
or
out
cmp
mov
and
test
mov
leave
xor
div
push
xlat
nop
and
ret
mov
mov
jecxz
std
mov
stc
xor
jne
cmps
inc
dec
ror
dec
inc
std
add
(bad)
xchg
xchg
add
rcl
ficomp
push
ja
cwde
push
mov
jmp
jle
in
mov
retf
nop
mov
dec
xchg
mov
and
jg
pop
or
lea
addr16
lahf
cmps
add
mov
xlat
(bad)
push
pop
xchg
jle
jp
lea
pushf
cmp
push
imul
adc
test
or
pop
or
dec
mov
ror
xchg
stc
cli
loopne
jno
inc
jns
sbb
repnz
pop
pushf
lods
mov
push
ja
inc
xor
sbb
or
int3
jge
popa
jno
data16
cmp
and
pop
xor
aad
dec
adc
cdq
adc
mov
pop
mov
ret
popf
ins
mov
js
pop
pop
push
add
outs
jo
mov
fldcw
ss
movs
sti
cmp
sbb
lea
mov
pop
int
(bad)
cld
outs
into
fcom
cmps
cdq
inc
shl
movs
add
xchg
jae
lods
shr
dec
xchg
mov
xor
jg
adc
mov
bound
add
jge
mov
icebp
jno
test
dec
or
dec
aas
imul
xchg
xchg
xchg
stos
mov
ins
cmps
push
adc
add
dec
mov
rcl
add
mov
repz
imul
cmp
in
and
shr
jmp
sub
jmp
sub
fsubr
stc
sbb
jl
adc
mov
(bad)
add
push
fnstcw
xor
mov
push
sti
sub
jne
and
repnz
clc
push
jle
add
cli
movs
pop
adc
hlt
sub
fcomp
jmp
jle
cdq
jno
in
shl
or
push
xlat
cld
push
mov
and
cdq
sbb
dec
mov
jae
daa
cmp
js
xor
xor
and
mov
sbb
sub
cmp
lock
enter
int
imul
mov
push
sbb
push
mov
xor
lods
cmc
movs
inc
addr16
xor
add
(bad)
in
and
mov
push
mov
inc
or
leave
xlat
imul
sbb
mov
dec
test
dec
adc
dec
mov
(bad)
jp
xchg
fst
pop
aaa
xlat
pushf
test
clc
mov
lods
call
push
push
pop
xchg
inc
jl
fdiv
inc
sbb
and
mov
test
jg
(bad)
mov
xlat
int
inc
jmp
mov
pop
addr16
adc
mov
loope
retf
mov
test
pop
pop
mov
pusha
cmps
push
jbe
sbb
aam
push
push
adc
or
call
fwait
ins
ss
mov
xchg
pop
loope
aaa
pushf
jns
push
jnp
adc
fldenv
popf
leave
sbb
pop
out
rol
jne
mov
repnz
mov
ror
div
or
mov
xor
jecxz
mov
cdq
rol
fdiv
adc
cmp
mul
push
xchg
inc
dec
pop
lock
out
mov
add
fnsave
in
pop
inc
push
and
lods
push
imul
lahf
in
jno
loopne
mov
inc
bound
dec
inc
xor
or
cmp
xchg
sbb
and
cmps
inc
mov
dec
xchg
mov
gs
mov
or
out
ret
pop
jp
cmps
leave
inc
and
lods
cmp
add
outs
movs
add
pop
or
aad
jne
popf
dec
cli
cwde
out
movs
movs
xor
mov
or
fimul
adc
xor
jmp
loope
xchg
push
es
not
shr
sub
outs
mov
push
cdq
xlat
jge
sti
cmp
fild
aaa
ret
mov
out
add
jle
test
movs
xchg
push
fdiv
(bad)
fnstcw
mov
sbb
mov
mov
mov
dec
dec
test
shl
xchg
int
repnz
mov
mov
pop
mov
and
test
dec
jno
in
inc
inc
pop
sbb
mov
mov
sub
sub
push
mov
xor
test
leave
ror
adc
(bad)
and
push
test
mov
outs
push
scas
add
ins
fnstenv
fisubr
mov
mov
enter
or
cmc
mov
mov
cmp
xor
dec
into
push
jnp
imul
cmp
jo
pop
test
xor
ja
sub
pop
icebp
xor
push
movs
rcr
inc
add
sbb
add
out
add
aam
rol
and
and
test
mov
mov
mov
jno
adc
inc
clc
in
movs
shr
mov
daa
xlat
jg
mov
iret
xor
into
xchg
xchg
fwait
and
dec
jmp
sub
xor
loopne
ret
jnp
fnsave
(bad)
out
mov
xchg
sub
jne
or
cmc
and
jg
(bad)
add
jae
add
mov
adc
es
jge
and
xchg
xchg
mov
sbb
xchg
sti
loopne
pop
retf
cld
dec
mov
jb
cmovno
fcmovnbe
sbb
int3
inc
mov
aam
mov
ret
dec
sub
sub
mov
jo
rcr
fst
pop
call
or
xor
add
mov
pop
leave
lods
inc
stos
sti
xor
cdq
aam
jae
lods
cli
pop
dec
ror
fdiv
mov
jecxz
imul
mov
icebp
into
add
(bad)
and
and
sbb
mov
sbb
out
shl
fs
sub
out
mov
push
jge
(bad)
pusha
(bad)
cld
sbb
mov
sti
or
stos
inc
dec
adc
inc
cmp
fnstcw
jmp
dec
not
adc
dec
adc
and
push
mov
hlt
adc
add
pop
iret
jns
shl
sub
push
in
out
jmp
xchg
xor
mov
sub
dec
sahf
pop
cmp
sbb
or
ins
push
pop
fadd
jo
imul
and
cmp
push
push
rcl
loopne
lock
bound
js
inc
mov
cmps
popf
pop
and
adc
test
dec
invlpg
ret
push
movs
push
jne
jmp
rcr
adc
icebp
sbb
dec
scas
xor
sbb
lea
jl
lods
movs
pop
out
xor
or
and
xchg
movs
xor
outs
jl
jge
fidivr
and
repz
ficomp
(bad)
adc
pop
mov
mov
cwde
lods
in
dec
inc
and
enter
stos
je
out
push
and
pop
dec
(bad)
je
cmps
popa
jecxz
jno
je
or
cmp
test
dec
xchg
stc
jb
loop
push
add
push
outs
pushf
jns
dec
cmps
sbb
mov
in
push
ja
push
xor
sbb
mov
sbb
inc
or
mov
mov
mov
mov
pop
outs
sbb
into
mov
mov
push
je
pop
dec
mov
test
mov
scas
xor
ret
dec
or
rol
dec
pop
sbb
iret
je
(bad)
cmp
jae
popa
cmp
push
ds
push
push
pop
in
ja
xor
dec
adc
adc
pop
leave
clc
cdq
idiv
stc
stos
dec
in
and
push
out
mov
add
dec
in
movs
sbb
pop
sbb
sub
stc
sbb
je
rcr
jmp
inc
xor
add
sar
jns
ja
mov
(bad)
ss
jo
jns
dec
sub
push
test
sub
inc
jp
fistp
fcomip
jge
mov
and
push
pop
fs
and
enter
jle
adc
push
or
cmp
push
xchg
int
xor
add
adc
stos
pop
lds
div
adc
test
xchg
dec
inc
ror
loopne
and
ins
outs
and
lods
jne
mov
hlt
add
ror
nop
fidivr
jl
xchg
into
fstp
(bad)
push
push
(bad)
pop
mov
iret
push
fbstp
repz
pusha
or
jge
shr
adc
jo
data16
mov
nop
daa
lods
or
mov
mov
les
retf
inc
lahf
rcl
ja
pop
popa
push
push
push
loop
lods
xor
push
inc
mov
jnp
ror
mov
sbb
cmps
stos
aas
cwde
mov
aaa
xchg
pop
jl
pop
retf
sub
imul
loope
sar
push
in
sub
mov
sar
mov
test
cmp
inc
adc
or
dec
sub
sub
xor
mov
cld
inc
xlat
sub
xchg
xor
in
in
push
jnp
push
jge
(bad)
int
out
dec
in
push
jbe
jl
es
pop
mov
mov
or
cmp
jecxz
inc
inc
cmp
sahf
inc
pop
mov
leave
out
sub
jecxz
repnz
(bad)
inc
sbb
xchg
int
jge
inc
mov
adc
lods
xchg
aas
popf
push
sbb
push
cwde
xor
test
sub
mov
and
inc
jne
cmp
jg
xchg
daa
cmps
ins
xor
mov
iret
mov
add
or
xor
cmp
fbld
ret
(bad)
jo
mov
not
sub
sub
push
ins
or
inc
xchg
js
ss
pop
jge
dec
inc
bound
jb
aas
sti
mov
std
cmp
je
sub
adc
ins
cdq
jg
push
mov
mov
es
aas
loop
inc
adc
ret
or
push
stos
mov
arpl
pop
jge
add
mov
sar
les
hlt
add
or
adc
(bad)
shl
int
(bad)
inc
cmps
in
and
(bad)
out
push
dec
aad
test
in
and
xor
(bad)
dec
fisubr
loop
inc
xchg
cdq
inc
ret
gs
inc
div
jo
(bad)
cli
and
(bad)
jge
add
scas
mov
cs
out
ds
cmp
hlt
lods
pop
shl
push
std
cwde
test
mov
stos
push
mov
out
mov
loopne
push
mov
fs
in
sahf
xor
int3
add
dec
sbb
fs
test
push
add
mov
mov
imul
push
xchg
jno
mov
fld
movs
jbe
push
sahf
mov
(bad)
fnstsw
cwde
repz
sub
dec
add
mov
sahf
out
scas
ds
sub
mov
movs
mov
repz
rcr
pop
stos
mov
sbb
retf
add
outs
dec
xchg
leave
jp
xchg
cmp
je
push
or
dec
lahf
(bad)
mov
cmp
sbb
adc
dec
push
mov
ds
and
leave
out
add
aad
jne
cs
xor
jnp
jo
(bad)
xchg
retf
jns
dec
push
jno
sti
add
mov
push
pop
arpl
not
xor
call
pop
outs
sahf
ror
mov
sbb
cmc
mov
in
pop
stc
mov
data16
mov
xchg
adc
mov
sahf
mov
push
mov
mov
jmp
cwde
mov
pop
pop
loopne
push
sbb
mov
jns
test
hlt
iret
scas
call
cmp
loopne
mov
jmp
cdq
mov
inc
mov
fwait
out
pop
pop
dec
cmc
ss
adc
test
sub
jge
out
dec
sbb
cmp
call
stc
cli
cmp
inc
adc
pop
add
cmp
stc
inc
cmp
xchg
xchg
scas
rcl
icebp
push
ror
jecxz
cmps
push
out
adc
mov
dec
or
pop
cmp
mov
cmp
in
push
mov
adc
pusha
aad
stos
inc
jb
hlt
xchg
nop
popa
dec
cmc
jno
inc
retf
xchg
jl
outs
aad
sbb
jae
lea
pop
(bad)
daa
xchg
fldcw
jle
xor
(bad)
aas
cmps
pop
std
mov
mov
dec
mov
xchg
mov
movs
push
neg
xor
mov
scas
cdq
out
pop
pop
cdq
ret
retf
data16
sub
adc
push
dec
ret
fidivr
mov
test
and
sub
mov
out
pushf
push
adc
adc
jnp
sub
das
out
or
dec
out
daa
lea
pop
fstp
mov
icebp
js
mov
mov
lods
sbb
in
xchg
pop
in
in
push
test
mov
das
popf
pop
nop
push
mov
xor
dec
stc
fcomp
xor
popf
ret
je
lea
das
je
test
fstp
(bad)
inc
repnz
cli
jle
cmp
fbld
or
and
xchg
lds
push
cli
iret
mov
dec
adc
xchg
push
cld
add
sbb
icebp
daa
xchg
mov
lahf
cmp
or
push
xchg
mov
std
sar
jmp
rol
loopne
in
scas
fisub
xchg
sub
xchg
test
daa
clc
xchg
(bad)
lea
fs
aaa
push
out
sub
jp
mov
inc
sti
pop
movs
sbb
push
mov
mov
enter
mov
adc
jnp
push
xchg
dec
(bad)
js
jmp
mov
mov
sub
inc
jmp
push
sti
pop
retf
adc
sbb
push
cld
sub
sbb
mov
cwde
es
xchg
bound
scas
xchg
ror
out
in
jo
(bad)
jle
add
fnsave
pusha
xchg
dec
cwde
dec
cld
and
pop
jo
jg
sbb
dec
sbb
sahf
dec
ds
add
shl
or
bound
and
or
int
mov
jle
fldenv
inc
aaa
movzx
cs
daa
(bad)
scas
stc
ja
lahf
inc
loope
pop
popa
lock
and
cmp
mov
adc
dec
or
movs
jo
add
std
(bad)
mov
mov
cmps
pop
dec
mov
ins
hlt
pop
adc
fadd
pop
pop
pop
outs
add
xchg
push
sub
data16
test
sbb
call
xlat
inc
mov
and
mov
in
adc
fld
sbb
jbe
fstp
(bad)
pop
mov
mov
push
(bad)
push
mov
jbe
into
lock
(bad)
pop
cmp
or
xlat
(bad)
fwait
mov
pushf
and
and
sub
in
push
out
xchg
mov
adc
sub
out
cmc
jne
and
ss
int
jbe
jmp
sbb
dec
das
push
cs
xchg
sub
mov
in
cmps
cmp
fs
rol
aad
jle
mov
or
xchg
sbb
dec
jge
jnp
jmp
fimul
pop
and
mov
inc
adc
les
sbb
rol
out
and
cmp
mov
or
mov
mov
arpl
test
test
xor
cmp
mov
lds
outs
sub
mov
stos
mov
jbe
aas
push
jmp
loop
push
adc
xchg
cdq
mov
(bad)
inc
and
mov
je
inc
inc
aaa
ret
push
add
pop
xor
imul
jne
gs
jns
xlat
retf
call
dec
adc
jecxz
out
sub
and
and
icebp
cwde
xchg
ror
adc
mov
jl
imul
dec
xchg
push
imul
dec
xor
mov
in
jmp
bnd
movs
pop
rol
xor
int3
(bad)
lea
call
pop
push
(bad)
popf
popf
sbb
dec
ins
jnp
arpl
pop
test
aas
lahf
cmps
push
mov
ror
inc
sub
lahf
imul
sub
mov
mov
sub
ss
inc
fsubr
and
dec
mov
jmp
std
adc
test
and
xchg
out
lock
pop
pop
arpl
sbb
mov
dec
sar
sub
jecxz
sbb
pop
sub
add
pusha
mov
cs
stos
(bad)
mov
std
sub
push
sub
xchg
jmp
push
push
dec
(bad)
lock
imul
cwde
push
and
(bad)
repz
retf
jl
or
add
and
adc
shl
sub
mov
in
and
sbb
or
mov
cs
hlt
arpl
mov
test
cmps
jno
retf
shl
dec
out
(bad)
pop
jp
lods
mov
inc
fmul
nop
fld
pop
cmps
clc
mov
mov
test
xchg
cld
xchg
cmp
fwait
shr
cli
in
movs
pop
push
push
push
push
imul
lds
lds
aam
call
movs
sbb
cmps
mov
xchg
scas
test
arpl
xchg
(bad)
fdivp
outs
mov
adc
sbb
xlat
pushf
call
or
loope
push
test
(bad)
sub
add
test
or
clc
push
push
push
out
xchg
in
scas
stos
sub
(bad)
or
lahf
mov
xchg
cld
sti
add
arpl
push
arpl
jmp
jae
push
xchg
push
sahf
sbb
mov
ss
add
jae
inc
inc
xchg
pop
push
dec
push
clc
cld
or
adc
adc
cwde
jno
lods
mov
push
(bad)
jecxz
jg
call
loop
rol
push
adc
loopne
lds
or
ja
cmp
push
call
data16
mov
mov
mov
adc
pop
aad
sbb
xchg
addr16
(bad)
aad
jecxz
and
lods
pop
mov
mov
js
loopne
mov
fs
xchg
popf
xchg
(bad)
movs
mov
aam
mov
mov
fwait
sbb
dec
xchg
dec
jmp
call
mov
mov
push
js
adc
and
and
lahf
call
aam
loop
ss
add
dec
xor
push
movs
ficomp
or
int3
imul
mov
movs
rcr
fcmovnbe
(bad)
ins
mov
rcl
cmps
aaa
mov
mov
dec
or
aad
enter
push
or
pusha
add
sub
call
adc
add
rcl
add
jmp
mov
cmc
inc
push
push
inc
ja
jnp
in
push
js
sub
xor
nop
mov
fs
mov
lods
cs
shl
or
jno
daa
(bad)
push
out
repz
cli
rcl
inc
fs
jae
sub
lock
adc
test
push
and
movs
and
mov
pusha
mov
rep
mov
jg
add
popf
add
dec
bound
inc
fsub
pop
sub
test
jge
call
ins
retf
or
(bad)
pop
jo
jae
xlat
pop
pushf
inc
lahf
pop
das
xor
pop
jae
clc
sub
(bad)
jbe
(bad)
inc
add
inc
retf
leave
pop
mov
int3
push
int3
sti
(bad)
ss
mov
aas
cmp
(bad)
mov
retf
jmp
std
scas
neg
sub
pop
(bad)
enter
push
jne
mov
mov
xchg
or
adc
xchg
icebp
rcr
inc
rcr
sbb
mov
and
dec
cmps
in
jp
js
or
inc
adc
mov
add
xor
jge
xchg
mov
pop
push
aam
jns
js
div
mov
shl
xor
and
pop
xchg
addr16
aas
fild
not
lds
pop
adc
mov
out
cld
jl
lods
scas
sub
in
jp
lock
fcmovbe
aas
jl
push
cwde
xor
(bad)
adc
jge
pushf
inc
add
test
mov
xor
adc
jns
imul
xchg
push
aam
ficomp
mov
cmp
inc
es
jae
rcr
push
push
mov
bound
or
adc
adc
jecxz
jp
dec
cmps
jg
std
cmps
dec
out
mov
mov
pop
jp
xchg
jnp
test
aaa
jmp
dec
mov
cdq
dec
clc
(bad)
cli
mov
adc
rcr
xor
adc
mov
nop
push
(bad)
hlt
xor
shr
and
sahf
dec
das
or
fnsave
fs
fidivr
mov
std
jmp
xchg
pop
fs
xchg
xchg
mov
mov
hlt
(bad)
xchg
(bad)
jno
je
pop
or
mov
mov
mov
xor
ja
lea
enter
fld
cmps
sbb
dec
push
adc
jp
ret
cmp
jno
(bad)
stos
sahf
add
sbb
repnz
adc
in
mov
mov
xchg
popa
cdq
adc
(bad)
xor
std
pop
jmp
add
hlt
or
mov
push
or
adc
xchg
popf
rcl
mov
mov
and
fsubr
daa
mov
lds
pop
pop
xchg
add
sbb
dec
repnz
jmp
daa
movs
push
and
fmul
stos
inc
ror
mov
(bad)
out
dec
out
shl
xchg
lods
and
test
outs
xor
jmp
mov
iret
jecxz
sub
and
mov
in
add
fmul
call
pop
adc
mov
dec
and
movs
mov
sbb
adc
in
cmc
mov
jg
dec
out
test
mov
add
std
pop
sti
sub
(bad)
leave
and
cmp
mov
inc
fsubrp
inc
sbb
in
xchg
arpl
sub
or
outs
mov
int3
xor
sub
jb
adc
or
imul
in
mov
push
cmps
call
push
push
cmp
dec
aas
jle
pop
add
in
add
sahf
mov
push
pop
popf
mov
stc
sar
mov
jnp
mov
cmp
add
inc
cmp
repnz
(bad)
sti
mov
mov
and
std
mov
outs
xchg
imul
xlat
sti
(bad)
xor
jmp
ret
push
pop
not
nop
push
imul
jp
xchg
out
inc
mov
popa
movs
xchg
xchg
or
dec
pop
push
jnp
mov
mov
pop
inc
das
mov
mov
movs
fwait
leave
add
push
xchg
lock
loopne
push
inc
in
jo
push
hlt
dec
(bad)
mov
or
test
jo
mov
sbb
sub
mov
cmp
mov
sbb
enter
repnz
cmp
inc
add
test
push
xor
es
mov
jnp
and
rol
or
mov
mov
ja
sbb
jne
or
dec
dec
xor
mov
push
mov
cdq
in
add
and
sbb
mov
xchg
push
pxor
mov
mov
or
xor
push
das
fadd
dec
mov
pop
test
push
nop
dec
jge
mov
and
push
push
in
scas
out
sbb
ja
dec
push
(bad)
test
out
hlt
push
movs
shl
adc
cmp
or
dec
and
hlt
popa
in
mov
adc
dec
test
loope
push
mov
shl
repnz
sub
add
pop
push
test
in
mov
or
mov
sub
xchg
outs
stc
popf
cmp
imul
add
dec
cli
xor
mov
cdq
scas
cmp
push
dec
add
clc
(bad)
pusha
retf
push
adc
test
mov
xchg
test
mov
pop
retf
inc
imul
(bad)
dec
daa
lods
pop
jb
jle
cmps
mov
call
adc
aaa
cli
rcr
aaa
and
xchg
sahf
add
ja
ins
mov
mov
arpl
std
cmp
inc
jecxz
dec
inc
cmp
leave
and
retf
std
iret
pop
popf
sub
jo
nop
add
xchg
mov
dec
aas
fdiv
out
cmp
test
aaa
sbb
mov
pop
rcl
push
jmp
stc
stos
dec
fsubr
loopne
xchg
pusha
movs
data16
jae
enter
js
mov
jns
idiv
ret
xor
sahf
in
out
adc
in
into
mov
sub
or
je
ret
ins
xchg
mov
inc
in
add
addr16
push
les
dec
fwait
mov
fwait
out
add
jg
xor
ins
mov
push
pop
or
pop
icebp
fst
rcl
jnp
inc
adc
mov
mov
push
stos
dec
test
lock
inc
mov
cmp
(bad)
and
les
or
stc
mov
push
lods
push
cmc
nop
dec
inc
pushf
fadd
xor
cli
pop
test
jbe
or
ins
into
sbb
popf
xor
ins
adc
imul
scas
mov
xchg
push
cmovae
movs
inc
xor
push
jecxz
xor
popa
fdiv
(bad)
sub
dec
mov
sbb
jbe
pop
mov
rcl
push
cmp
ja
jns
xchg
aam
or
inc
push
addr16
or
or
call
mov
adc
adc
je
inc
retf
jne
mov
inc
scas
lea
fadd
in
cmc
(bad)
mov
ret
add
push
bound
cmp
xchg
adc
pop
or
pop
scas
test
mov
loope
(bad)
out
jae
jmp
push
pop
and
jbe
stc
pop
out
jp
and
add
outs
imul
jo
mov
cs
cmp
(bad)
stc
inc
loop
jmp
ins
(bad)
mov
fsub
xor
xor
mov
movs
cli
mov
rcl
dec
mov
xchg
(bad)
adc
daa
adc
(bad)
jmp
pop
mov
fcom
in
leave
xor
daa
loop
fadd
sub
cmp
and
add
inc
xor
imul
shr
lds
xor
rol
arpl
scas
repnz
ror
cmp
jle
inc
dec
dec
push
sbb
adc
dec
ja
(bad)
fdiv
pusha
add
clc
pop
mov
push
enter
mov
cdq
mov
arpl
(bad)
cmp
mov
adc
push
lock
pusha
sub
inc
pusha
jne
push
shl
dec
clc
mov
call
push
sbb
dec
pushf
int
inc
mov
cwde
pop
lods
or
xor
cmps
in
out
clc
rol
pcmpeqd
lods
mov
xchg
jl
and
sub
mov
mul
cvtpi2ps
ficomp
cmp
test
cmp
xlat
ret
pop
pop
cli
xchg
shl
lods
loop
ja
neg
adc
sbb
clc
cld
dec
dec
or
je
repz
cmp
mul
ins
add
xchg
(bad)
fstp
out
or
push
rol
xor
or
adc
and
push
jle
or
push
jge
jb
add
pop
retf
std
jmp
or
mov
sub
lea
ja
mov
enter
ret
adc
test
pop
xchg
mov
or
loopne
sbb
test
cwde
scas
lods
jp
adc
inc
out
outs
inc
fs
gs
pop
and
push
add
mov
mov
leave
and
sbb
mov
mov
imul
jne
or
sahf
pop
and
mov
xchg
jl
shr
push
xor
push
cmp
ins
repz
mov
ss
test
xchg
sub
jmp
mov
dec
xchg
(bad)
ficom
aaa
(bad)
sbb
daa
mov
adc
push
js
mov
adc
jmp
sbb
mov
loopne
outs
jmp
push
xchg
xor
ret
fisub
int3
test
addr16
add
xor
cmp
out
pusha
popa
inc
mov
inc
rcl
sub
test
scas
mov
xchg
imul
repnz
rcr
sbb
jne
push
push
sub
sti
out
inc
je
add
sbb
dec
adc
xchg
fbld
sub
xchg
mov
imul
jnp
mov
lahf
or
outs
(bad)
addr16
fadd
push
mov
pop
pop
(bad)
or
push
mov
lds
jno
or
push
cmp
mov
or
leave
out
(bad)
push
stos
test
add
dec
popaw
leave
lods
call
cwde
sbb
sbb
idiv
adc
adc
add
out
inc
je
loopne
sub
or
cmp
test
clc
jne
shl
adc
scas
add
outs
sbb
mov
inc
ja
mov
popa
jle
add
ss
inc
ds
test
fwait
sub
rcr
pop
(bad)
outs
and
idiv
jne
popf
dec
test
enter
scas
enter
addr16
repz
xor
cmp
mov
fimul
ins
shr
dec
xchg
fwait
mov
repz
mov
cmp
inc
mov
push
data16
add
hlt
push
scas
jl
leave
test
fimul
sbb
mov
pop
out
(bad)
out
xchg
push
enter
clc
bound
or
sbb
cld
stos
call
cmp
xchg
mov
xor
xchg
mov
cmp
push
sub
sub
jecxz
int
fwait
xchg
lock
cmp
push
out
clc
mov
icebp
mov
scas
cli
pop
dec
lds
mov
stos
fidivr
inc
inc
jecxz
pop
jbe
ja
pop
ror
push
cwde
mov
mov
sahf
inc
dec
mov
es
out
(bad)
outs
(bad)
lea
das
jnp
and
adc
push
shl
sbb
sbb
cmc
jno
lods
dec
ret
rol
sbb
xlat
cmp
mov
mov
sbb
fidivr
mov
js
enter
loopne
xor
(bad)
dec
leave
cmp
iret
iret
jl
xchg
mov
dec
shl
lea
scas
scas
mov
add
xchg
nop
pop
lahf
cli
push
adc
mov
in
bound
cdq
pushf
ret
inc
stos
jo
mov
push
gs
(bad)
and
jo
outs
sbb
pop
xor
mov
fmul
lods
loope
lahf
adc
imul
and
or
aas
inc
aad
stos
je
data16
jmp
int3
pop
ffree
add
and
add
cmp
mov
push
pop
(bad)
pop
fs
ss
in
mov
dec
popf
in
ja
pop
cmps
std
(bad)
pop
cmp
sub
leave
ins
push
shl
loope
div
in
fldenv
jg
outs
jge
mov
or
test
rol
scas
loope
neg
cmps
(bad)
gs
jae
xor
(bad)
xchg
scas
mov
mov
push
gs
jne
inc
pop
outs
pop
rcl
pop
icebp
cmps
or
cli
cmc
jge
cli
fwait
sbb
fdivr
jnp
cmp
les
nop
inc
(bad)
sub
and
out
std
ins
pop
add
mov
les
repz
sbb
out
test
out
cmc
sub
(bad)
fidivr
jo
out
jae
cmp
or
addr16
(bad)
jmp
dec
out
std
in
dec
adc
xor
leave
push
inc
cmp
push
adc
call
or
test
xor
or
outs
sub
repnz
mov
mov
hlt
leave
je
fwait
pop
push
jge
cmp
imul
jmp
jns
xchg
(bad)
dec
(bad)
pop
lahf
call
stos
xchg
(bad)
in
lock
or
sub
xchg
mov
jnp
aad
sub
enter
out
push
lods
sti
mov
outs
movs
push
pop
mov
iret
mov
jg
sub
clc
addr16
out
outs
xor
jnp
inc
mul
and
jne
pop
inc
sbb
leave
fistp
stos
fiadd
xor
cmp
call
mov
jmp
xor
mov
clc
adc
push
jbe
jle
xor
add
popa
sub
adc
les
mov
imul
adc
mov
sub
aaa
daa
lock
cli
push
mov
jnp
push
into
jp
cmps
test
shr
jnp
mov
call
adc
mov
fsubr
inc
popa
mov
xor
xchg
gs
mov
cmp
mov
inc
mov
pop
push
mov
dec
mov
mov
and
or
mov
fdiv
push
jne
dec
leave
fidivr
cdq
jmp
sub
fwait
dec
mov
push
xchg
(bad)
outs
ror
mov
sbb
mov
adc
add
stos
lahf
imul
or
mov
daa
(bad)
ins
mov
ficomp
fstp
add
into
inc
pop
in
cmp
test
or
xlat
dec
outs
push
fsubr
pop
les
mov
xchg
(bad)
pop
jne
xor
cmp
in
mov
jns
fs
idiv
icebp
stc
out
lock
sti
jecxz
mov
mov
dec
mov
bound
(bad)
mov
cmp
pop
lds
stos
aaa
inc
jecxz
inc
rcr
sbb
cli
movs
or
fsub
sbb
les
cmps
div
mov
(bad)
stos
cmp
fisubr
std
nop
cwde
add
das
pop
into
sub
adc
mov
arpl
xchg
mov
jmp
in
aam
adc
cmc
sti
dec
fistp
popa
in
jbe
das
out
fld
add
jnp
arpl
fs
xor
dec
mov
sbb
in
(bad)
fimul
jne
leave
dec
push
retf
mov
ret
and
dec
lods
nop
enter
xchg
xor
xchg
pop
fstp
jp
inc
cwde
rol
pop
ret
je
(bad)
ror
(bad)
or
fadd
dec
shl
push
and
sub
jg
cmp
sub
dec
popf
repz
cmp
add
push
xor
mov
jb
pop
and
mov
xor
aaa
mov
ins
daa
or
dec
lea
mov
inc
gs
sub
xor
pop
xchg
adc
in
movs
sub
push
xor
mov
jp
fimul
movs
xchg
inc
mov
ins
ss
data16
jge
div
push
pop
cmp
inc
adc
mov
imul
or
(bad)
pop
shl
jge
int3
movs
ins
sub
inc
ins
fcomp
or
shr
dec
mov
mov
cmc
cmp
lahf
inc
sti
clc
mov
mov
sub
addr16
hlt
push
mov
loope
scas
cmps
add
(bad)
test
loop
jge
iret
movs
mov
lock
mov
mov
cs
lods
inc
adc
ficom
imul
mov
jns
inc
scas
or
sbb
xchg
mov
xchg
mov
mov
jmp
test
das
outs
inc
adc
xor
mov
test
xor
mov
jae
mov
icebp
outs
xchg
sahf
adc
sub
icebp
mov
hlt
xor
std
push
add
dec
popa
pop
popf
arpl
shr
jge
cmp
sub
fild
ins
fisttp
pop
adc
inc
cli
inc
and
and
(bad)
les
iret
cwde
or
sub
movs
mov
cwde
lds
adc
add
jecxz
call
mov
sub
ins
jg
or
and
imul
or
dec
retf
ins
adc
inc
(bad)
retf
fsub
pushf
pusha
jno
fdiv
jnp
ins
cs
jns
fnstenv
popf
in
dec
mov
or
sahf
jg
pop
dec
(bad)
lds
xor
pop
push
sub
sub
mov
mov
mov
fucomi
mov
mov
mov
push
ss
lds
shr
pop
es
gs
fcom
cli
add
jle
arpl
mul
sub
in
repnz
repnz
or
rcr
jns
mov
xor
inc
es
inc
test
test
jb
inc
cwde
jae
mul
das
and
ins
push
(bad)
mov
movs
jecxz
movs
arpl
mov
mov
jecxz
rep
stos
pop
jb
lea
hlt
and
push
xor
inc
xchg
mov
repnz
and
(bad)
sub
ret
loop
scas
mov
jo
sbb
add
xchg
pop
xor
cmp
hlt
mov
ins
and
jp
xor
imul
enter
cmp
ret
and
loop
rcl
mov
hlt
push
dec
mov
ins
or
or
add
out
mov
nop
out
mov
add
les
test
adc
mov
popa
mov
xchg
cmps
mov
or
and
call
and
cld
jmp
pop
inc
jecxz
cli
push
in
sub
and
fisubr
adc
aaa
or
arpl
jno
je
pop
and
jbe
mov
push
loopne
pop
and
push
mov
mov
sbb
sbb
push
out
stos
jne
jmp
mov
cwde
push
xor
mov
add
mov
jmp
pop
ja
pop
cdq
push
xchg
sub
sbb
xor
outs
xor
and
lds
inc
cld
fs
jmp
sub
push
and
xchg
adc
push
outs
repnz
enter
(bad)
cmp
push
jl
inc
adc
div
push
adc
mov
inc
fdivr
call
jle
sbb
push
scas
mov
push
sbb
dec
cmps
or
pop
movs
in
sub
push
retf
test
and
scas
aam
mov
call
(bad)
mov
fist
outs
cmp
lea
leave
ret
xor
in
xlat
ficom
mov
jecxz
xor
(bad)
push
jmp
push
push
cmc
push
or
div
adc
sub
cli
test
sahf
inc
xor
sub
xchg
pop
xchg
int
cmp
arpl
inc
hlt
push
fsubr
cmp
adc
retf
xor
int3
pop
cli
movs
fidivr
scas
sahf
add
and
cmp
hlt
fist
add
fcomp
cs
xchg
mov
push
or
icebp
(bad)
mov
out
repz
cmp
arpl
adc
and
out
stos
or
cmp
ret
retf
mov
or
mov
sbb
mov
and
test
inc
aaa
out
mov
fwait
sar
sbb
push
mov
push
hlt
mov
cmp
mov
test
ret
push
xchg
push
retf
aam
sbb
pop
pop
pop
not
aam
int3
xor
mov
aas
adc
add
and
(bad)
mov
xor
nop
sub
inc
pop
xlat
cmps
xor
mov
xchg
addr16
and
(bad)
push
daa
or
movs
orps
xchg
into
mov
js
mov
sub
add
scas
mov
mov
(bad)
in
pop
mov
aas
jmp
jp
pop
jp
and
xor
inc
retf
mov
lea
daa
cld
int
jnp
dec
in
call
mov
inc
ins
dec
rol
dec
xor
ret
sbb
push
nop
xor
ror
in
push
xchg
push
or
mov
inc
(bad)
ins
push
mov
adc
ror
mov
ins
pop
in
xchg
add
scas
mov
or
cwde
arpl
sub
and
xchg
dec
ret
mov
xor
sub
and
mov
je
fild
out
jp
mov
test
adc
les
mov
and
mov
(bad)
push
xchg
mov
popa
or
add
cmp
leave
jno
adc
aaa
(bad)
lahf
outs
aam
ret
mov
inc
stos
pop
mov
pop
mov
mov
dec
jecxz
mov
mov
and
fmul
adc
jmp
or
push
pusha
aad
stos
ret
jae
enter
or
(bad)
(bad)
mov
sub
sub
jae
jno
mov
arpl
call
shl
aam
adc
inc
das
sar
xchg
xchg
int3
and
jge
mov
inc
(bad)
xor
int3
inc
adc
dec
xor
dec
mov
mov
inc
mov
dec
mov
sbb
xchg
push
in
gs
hlt
mov
dec
fmul
inc
adc
push
mov
(bad)
out
das
std
add
xchg
mov
jmp
ins
jmp
push
adc
pusha
(bad)
outs
push
xchg
mov
mov
fbld
out
call
das
and
movs
or
nop
int3
movs
and
mov
sbb
pop
add
ss
adc
das
and
xchg
mov
jae
test
and
mov
jno
lock
je
js
outs
adc
outs
sbb
fmulp
mov
popf
push
xchg
inc
lds
inc
dec
outs
aad
test
test
mov
or
das
or
inc
test
sar
mov
hlt
jno
lods
push
or
daa
fistp
pop
fwait
aas
in
pop
cmp
xor
stc
(bad)
and
jns
dec
(bad)
mov
retf
push
jp
sub
lods
enter
fnstcw
clc
and
add
xlat
dec
inc
xchg
dec
push
push
rol
xchg
mov
rcl
cmp
jecxz
test
push
adc
xor
cmp
mov
jle
push
iret
push
les
mov
adc
jns
repnz
push
jmp
jmp
sub
retf
pop
xchg
hlt
xor
popf
add
into
xor
push
jmp
xor
xor
cmps
xchg
dec
cmp
sbb
push
das
int
sub
icebp
in
imul
loopne
out
gs
repnz
test
idiv
outs
or
dec
pop
mov
icebp
jns
aad
vpsllq
add
imul
mov
stos
loop
and
pushf
jle
ret
sub
mov
inc
(bad)
daa
push
add
add
sub
sbb
sbb
push
(bad)
out
add
jle
mov
movs
and
icebp
inc
movs
pop
mov
pop
js
pop
(bad)
cli
inc
dec
out
ror
loope
in
out
fucomip
stos
sub
cmp
mov
enter
test
adc
xor
fs
repnz
mov
sbb
repnz
leave
or
dec
(bad)
in
adc
and
adc
mov
fsubr
mov
popa
xchg
mov
xor
adc
xchg
or
sbb
div
pop
aad
aad
push
push
jl
inc
enter
cmp
les
imul
ja
push
out
aas
in
push
out
ins
jle
cli
fst
pop
dec
mov
push
xor
xor
add
jnp
push
jo
dec
imul
daa
jb
pop
or
pop
push
repnz
clc
clc
add
shl
mov
or
retf
(bad)
mov
lods
fldenv
push
add
imul
mov
dec
ins
inc
xlat
popa
pop
xor
fcomp
push
mov
dec
stc
out
leave
pop
dec
iret
lods
lds
or
jnp
repnz
mov
mov
cmp
adc
cli
adc
jnp
hlt
(bad)
dec
xchg
mov
dec
jmp
and
cmp
leave
cmp
repz
loop
or
pusha
js
lea
ja
fstp
and
jge
xchg
inc
retf
and
rcl
mov
dec
fimul
shr
jmp
movs
stc
mov
xor
xchg
push
adc
jno
pop
push
aad
jno
mov
in
arpl
mov
lods
cmp
xor
(bad)
pop
sti
and
dec
pushf
fcom
fs
and
sti
mov
das
stc
es
bound
xor
gs
es
lock
dec
jg
gs
test
adc
mov
adc
or
in
out
inc
dec
(bad)
fcomp
mov
sbb
pop
loopne
imul
or
call
add
popa
cwde
scas
sbb
xchg
xchg
add
cmc
ss
xor
stos
repz
(bad)
fisubr
ror
mov
push
icebp
int3
movs
xchg
div
xchg
jns
fincstp
push
sub
retf
cmp
sbb
sahf
ror
sub
cmp
or
call
(bad)
cmps
push
and
daa
mov
mov
xchg
neg
mov
js
loopne
jnp
imul
pop
lds
add
jno
aas
popf
sbb
leave
cs
rcr
dec
inc
nop
push
lds
push
mov
pop
sbb
in
and
mov
adc
or
ret
inc
dec
addr16
xor
mul
cwde
lods
daa
fs
mov
(bad)
sub
aas
nop
xchg
mov
scas
scas
inc
push
jp
add
mov
pop
bound
push
jo
cmp
iret
mov
out
loop
je
pop
(bad)
sahf
add
loope
(bad)
retf
inc
and
mov
push
leave
pop
ja
inc
scas
shr
nop
(bad)
dec
shl
mov
mov
in
lock
sub
sahf
push
sub
sbb
les
push
icebp
dec
mov
xchg
add
dec
lea
push
jmp
cmps
into
in
or
shl
or
mov
mov
inc
jl
sbb
rcr
adc
(bad)
sahf
add
in
loopne
test
int3
mov
mov
call
loopne
lds
or
inc
jp
mov
sbb
sub
mov
loopne
(bad)
pop
das
inc
jecxz
in
pop
mov
jg
(bad)
dec
cmp
scas
push
sti
jne
retf
out
xor
aad
jmp
sub
xchg
dec
mov
pushf
aaa
fimul
test
xchg
or
std
jb
ja
leave
xchg
pop
retf
mov
inc
xchg
leave
nop
and
test
push
and
pop
adc
(bad)
xchg
xor
push
mov
cwde
popf
push
test
mov
imul
mov
and
xor
addr16
aaa
pusha
adc
mov
out
fs
dec
jnp
call
shr
loop
cwde
cld
cmp
mov
rcl
repz
test
push
imul
push
lods
ror
icebp
adc
push
fdivr
cmp
pusha
test
sahf
mov
push
icebp
jmp
popa
cwde
jne
adc
sub
push
clc
pop
mov
ret
or
ja
add
leave
jecxz
pop
pop
jae
scas
in
(bad)
loope
mov
sub
popa
xchg
push
push
add
xchg
cmovle
xor
rcl
into
out
aad
rcr
cld
cmp
or
jns
dec
outs
loop
mov
nop
sub
into
(bad)
mov
adc
mov
cmp
outs
adc
ror
mov
out
shl
jp
jmp
inc
imul
jno
test
dec
arpl
jle
ins
cmps
jno
mov
pop
mov
test
pop
test
pushf
cli
mov
es
mov
push
cmp
xchg
mov
outs
push
lea
pop
ds
push
test
imul
test
xor
and
fwait
sbb
subps
repz
inc
jmp
add
and
gs
fs
inc
push
and
and
in
aas
xor
mov
push
pop
push
mov
sub
frstor
mov
jle
or
xchg
fnstsw
ja
adc
sub
and
dec
mov
pop
xchg
mov
leave
adc
outs
shl
jle
mov
call
mov
dec
out
push
jno
mov
pop
std
mov
lock
push
in
test
leave
add
iret
cmp
dec
push
test
xor
rol
add
mov
pop
dec
pop
sti
jmp
and
loopne
push
fistp
add
mov
mov
test
pop
add
les
out
jle
xor
dec
sub
or
fdiv
into
jne
data16
hlt
mov
dec
(bad)
mov
das
mov
xchg
std
jbe
fcom
push
xchg
test
imul
jns
retf
and
xchg
or
cli
mov
sub
sti
in
and
add
push
les
(bad)
into
mov
adc
lahf
pop
retf
fisttp
cmp
cmp
adc
xchg
mov
jle
mov
push
mov
cmp
dec
loopne
loop
mov
sub
ja
lahf
das
xchg
mov
dec
dec
cdq
xor
adc
sbb
inc
xchg
jns
add
xchg
cmps
mov
das
faddp
jno
mov
mov
mov
sbb
or
push
lods
jmp
mov
jns
jge
dec
pop
fs
xor
adc
fstp
mov
sub
cmps
mov
xor
outs
daa
mov
(bad)
push
test
jge
mov
mov
jnp
and
std
or
sbb
push
sub
push
aaa
pop
mov
fnstenv
sti
imul
test
sbb
fbld
enter
mov
mov
into
fwait
icebp
push
xchg
lahf
pusha
push
jne
sub
into
add
rcr
pop
lahf
xor
mov
test
stos
(bad)
inc
mov
cmp
lahf
xchg
jns
stos
in
dec
push
imul
movs
pop
fdiv
and
cmp
loopne
mov
not
pop
aad
ret
push
jb
stc
cmp
call
cmp
mov
in
add
icebp
gs
aad
pop
ret
sahf
push
pop
mov
fdiv
in
jmp
fs
cmps
xor
popa
pop
sti
lds
and
sbb
ret
mov
xor
(bad)
mov
push
arpl
push
js
mov
pop
push
or
bound
adc
shl
out
stos
pop
mov
pop
ret
add
icebp
std
sub
inc
pop
cmc
call
sbb
push
pop
jae
push
shl
jae
sub
mov
dec
push
loop
int
cmp
fsubr
pop
mov
push
gs
popa
sbb
ss
nop
add
lea
inc
adc
or
mov
jbe
adc
ror
jnp
mov
add
mov
mov
dec
mov
sub
pop
inc
das
mov
fstp
popf
mov
xor
or
pop
movs
mov
lods
rcr
pop
popf
(bad)
jmp
int
jge
cld
jbe
mov
sub
sub
xor
add
ds
pop
jbe
dec
clc
ss
jnp
fsubrp
pop
bound
xchg
push
mov
outs
dec
add
push
idiv
pop
cmp
pop
or
mov
xchg
cmps
aad
mov
push
cdq
call
pushf
dec
into
xchg
mov
(bad)
stc
sub
sub
gs
lahf
sar
fcom
and
and
int3
xchg
jnp
mov
dec
ins
and
inc
fisub
add
retf
arpl
ins
sbb
sub
hlt
xor
cwde
mov
and
shl
out
adc
push
cmps
lock
jge
xor
(bad)
jnp
mov
enter
push
(bad)
inc
xor
ins
inc
mov
adc
aam
gs
jle
jecxz
dec
jb
mov
push
adc
cmps
ja
push
hlt
jne
ins
sub
add
xchg
xchg
cmp
push
sti
shl
(bad)
fnstsw
stos
cli
out
ja
stos
(bad)
pop
fld
add
ds
sbb
adc
imul
xchg
and
das
xchg
iret
jmp
xor
or
sub
scas
mov
cmc
out
mov
rcr
div
retf
xchg
out
jecxz
xor
in
sub
mov
aas
inc
imul
arpl
fucomp
inc
movs
movs
inc
call
jmp
jb
mov
cmp
sub
or
outs
shl
inc
leave
mov
push
dec
xchg
adc
sub
std
cmp
sbb
push
adc
cmp
push
stos
stos
test
or
cmps
fisub
mov
dec
cmp
sub
loope
in
fbstp
xor
push
(bad)
aad
shl
mov
adc
int
scas
jge
dec
cmc
call
push
cmp
jo
shl
dec
fbld
jmp
leave
in
paddq
mov
cmc
(bad)
mov
sahf
mov
cmp
push
inc
fild
jb
test
aas
mov
sbb
xchg
inc
sbb
mov
xor
pusha
div
shl
dec
stos
arpl
jno
sbb
add
rol
dec
hlt
xchg
push
jg
mov
mov
jmp
and
add
jbe
fisubr
jg
mov
push
ss
ins
dec
popa
scas
xchg
mov
sub
fild
lahf
sbb
push
and
mov
dec
dec
or
aaa
add
stos
jbe
ins
cmps
aas
fsubr
sub
xchg
cld
inc
scas
and
cmp
xchg
clc
test
je
jno
ds
add
test
pop
xor
mov
add
call
xor
pop
xchg
push
mov
in
add
(bad)
fistp
fbstp
imul
or
pusha
call
xchg
mov
mov
push
sbb
xor
ins
fs
mov
and
inc
(bad)
lods
push
stos
cmp
sub
or
mov
push
inc
sub
cdq
dec
mov
xchg
rcr
adc
call
fisubr
cmp
push
stos
cld
(bad)
loope
xchg
mov
mov
pop
sbb
mov
sbb
mov
xor
xor
or
gs
mov
aas
jae
fild
ror
test
not
pusha
outs
jge
cld
cdq
pop
ret
or
mov
outs
fstp
jmp
push
push
(bad)
adc
sbb
pop
retf
shl
ret
mov
adc
dec
xor
into
jae
xor
sbb
and
inc
jge
(bad)
ds
call
dec
div
repnz
xchg
ficom
add
ds
fimul
das
jae
xchg
or
lahf
pop
hlt
jl
ins
scas
enter
xchg
pop
or
jae
mov
adc
jo
adc
out
xchg
aam
xchg
mov
or
lea
dec
dec
pop
loope
fidiv
out
out
add
mov
mov
ja
xor
sub
icebp
cmp
xor
fucomp
mul
movs
in
and
repz
in
das
rdtsc
les
movs
adc
test
dec
loope
ror
and
push
sub
and
dec
shl
loopne
shr
loope
fst
push
and
outs
ds
aaa
in
cmp
add
mov
test
in
into
sbb
mov
dec
or
add
call
icebp
inc
mov
lock
push
pop
in
jnp
daa
sbb
dec
push
xor
nop
push
dec
cmp
dec
xor
cs
sbb
std
push
pop
hlt
cmp
jge
sub
cli
movs
lods
pushf
inc
arpl
mov
sub
or
ins
std
dec
cmp
cmp
sbb
mov
jns
cmp
aad
test
movs
scas
jle
xor
cmp
xchg
push
call
rcl
aam
dec
mov
and
(bad)
retf
mov
dec
ds
add
push
out
lea
stc
cli
out
cmp
xchg
add
cwde
dec
leave
aaa
pop
mov
dec
in
stos
popa
xchg
jmp
xor
jle
dec
cmps
lods
cmp
inc
jmp
outs
mov
push
shl
push
and
fcmovbe
lods
fdiv
pop
xchg
mov
repz
(bad)
jnp
movs
mov
ret
add
inc
scas
sbb
cs
fs
sbb
pop
arpl
shl
dec
inc
scas
mov
mov
sbb
xor
xchg
not
mov
jmp
jnp
in
inc
jae
cmp
jmp
movs
sbb
pop
fild
repz
(bad)
mov
xor
retf
sbb
inc
mov
imul
and
push
test
jo
mov
xor
or
shl
xor
mov
aaa
mov
pop
mov
gs
mov
push
ja
jle
push
cmp
mov
xor
sbb
retf
movs
shl
dec
jp
mov
das
stos
imul
mov
add
shl
xor
push
add
not
jmp
ds
scas
adc
mov
dec
fs
dec
sbb
out
mov
mov
pop
xlat
or
push
aam
sbb
les
cmp
inc
or
add
popf
popf
inc
mov
outs
dec
imul
sbb
xchg
adc
test
xchg
movs
lahf
add
jge
push
idiv
cmc
xchg
shl
jmp
cmc
sahf
push
dec
int3
adc
cdq
lods
jbe
aaa
mov
cmp
clc
or
xchg
pop
out
sbb
ret
add
adc
sub
shl
out
inc
loop
mov
(bad)
and
add
pop
or
daa
cmps
cmps
xchg
inc
outs
js
and
fwait
dec
rcr
push
pop
popf
das
cmp
call
sub
jo
test
pop
lods
out
push
shl
mov
lods
xchg
(bad)
xchg
hlt
hlt
add
or
lods
mov
fst
cmc
xor
pop
shl
push
mov
addr16
inc
pop
out
imul
fcmovnbe
pop
cs
mov
leave
xor
mov
call
or
das
push
cdq
(bad)
pop
(bad)
mov
out
sbb
or
and
mov
jg
adc
cmp
jl
(bad)
rcr
push
inc
aas
rcr
data16
fist
imul
cmps
mov
xlat
dec
ficomp
leave
jle
das
sar
jno
daa
jmp
mov
clc
push
fsub
test
movs
leave
in
inc
fldcw
adc
lock
jmp
ror
mov
xchg
out
jge
push
movs
adc
inc
add
repz
data16
out
mov
ins
cmp
clc
retf
add
mov
enter
adc
std
in
adc
mov
sar
or
pop
xor
mov
std
cs
clts
push
push
aam
arpl
stos
push
inc
push
(bad)
dec
mov
sub
call
xor
movs
jno
cmp
push
clc
popf
addr16
jb
jmp
and
outs
in
jl
fldcw
fs
dec
dec
jp
dec
sbb
call
and
mov
cmps
scas
jle
imul
fld
outs
inc
xchg
push
ds
cmc
push
mov
sbb
cmp
xchg
pop
dec
sub
fdiv
dec
(bad)
loope
xchg
mov
xchg
adc
mov
xor
hlt
lods
(bad)
fistp
inc
xchg
xor
push
or
outs
push
iret
jo
mov
out
lock
jb
push
retf
xor
lods
sub
dec
xor
adc
jge
xchg
std
push
add
adc
mov
add
loopne
aad
cwde
pop
or
pop
hlt
adc
sbb
popa
arpl
or
mov
inc
ins
fistp
mov
outs
std
imul
int3
sbb
jns
mov
dec
xor
in
mov
xchg
xchg
mov
stos
mov
iret
push
(bad)
leave
dec
cmp
sti
or
scas
adc
adc
outs
outs
test
scas
stos
rcr
jge
lock
test
and
in
and
xor
jo
xor
imul
imul
cmp
popf
lea
dec
test
daa
add
sbb
pop
cmps
repz
adc
dec
and
xchg
test
push
inc
cmp
call
jl
push
icebp
push
add
hlt
loopne
lock
sub
dec
hlt
or
push
cmp
imul
xor
aaa
je
pop
stos
aas
jp
add
sub
idiv
imul
mov
dec
push
lds
jmp
and
inc
and
(bad)
xchg
lods
and
data16
repnz
retf
cmps
enter
pop
inc
cmp
and
outs
loopne
pop
jmp
sub
pushf
out
mov
into
into
cld
ret
xor
data16
cmovs
lock
arpl
rcl
movs
or
xor
test
push
mov
xchg
leave
call
sub
dec
mov
sub
mov
ja
and
(bad)
int
xchg
ss
mov
arpl
scas
aas
in
loopne
icebp
pop
dec
jp
or
in
xor
test
hlt
lahf
cmps
outs
dec
xor
lock
xchg
jp
xor
push
mov
push
cld
mov
xchg
out
fild
addr16
add
push
push
fdivr
ror
inc
fwait
mov
test
addr16
aad
test
jl
or
jge
cs
scas
jmp
add
or
cld
cs
mov
(bad)
ffree
add
leave
mov
push
dec
(bad)
push
and
cwde
mov
sbb
out
cdq
bnd
scas
lahf
sub
cmp
jns
xor
cmp
pop
xchg
movs
fdivr
mov
cmps
sar
fld
popf
inc
test
mov
sub
xchg
xchg
lods
jmp
mov
fist
sbb
int
sub
adc
ja
retf
shl
or
shr
dec
fistp
outs
inc
test
mov
sub
sub
sbb
jae
(bad)
ins
dec
sti
sbb
ret
dec
push
pushf
add
cli
or
pop
sub
mov
les
out
jnp
je
ficomp
rol
cmp
das
call
lahf
pop
imul
sti
sub
loope
fmul
dec
(bad)
jb
mov
sbb
call
mov
lds
cwde
ds
dec
jmp
ud0
jno
loopne
mov
push
lods
adc
aaa
xor
cmp
or
fsubr
jno
test
xor
xchg
cdq
(bad)
adc
pushf
(bad)
xor
and
add
in
pop
mov
and
cmps
rcl
dec
lds
enter
leave
ins
ins
sub
mov
arpl
adc
fdiv
cmp
ss
add
add
mov
adc
adc
push
fild
pcmpeqb
(bad)
push
repnz
sbb
cmps
enter
les
dec
ins
pop
pop
ror
cmp
sub
pop
arpl
push
jo
popf
mov
inc
adc
cld
rcr
mov
call
mov
retf
and
sar
and
mov
inc
pop
jle
or
jno
jecxz
scas
data16
loop
xchg
xor
cdq
cmp
fistp
sub
fisttp
das
cmps
cmp
lea
mov
jo
scas
fwait
clc
xor
mov
lds
dec
xor
inc
sub
retf
int3
cmp
mov
and
aas
adc
(bad)
ds
lods
movs
inc
bsr
inc
push
aad
cld
jmp
adc
arpl
and
or
pop
push
or
call
pop
or
pop
or
les
(bad)
jmp
inc
add
inc
sub
inc
movs
retf
(bad)
pop
jae
push
imul
dec
arpl
(bad)
fimul
inc
mov
fwait
movs
ffree
retf
xchg
cmc
push
ins
lods
into
loop
pushf
mov
inc
sub
jle
ins
adc
js
push
in
stos
cld
(bad)
mov
out
adc
outs
pop
pusha
push
daa
enter
mov
out
inc
dec
popa
repz
inc
sub
mov
mov
mov
sbb
pop
and
movs
(bad)
push
dec
pop
adc
push
retf
movs
call
mov
pop
pop
dec
aad
cmp
in
add
pop
neg
inc
fiadd
out
jns
cmp
and
adc
xor
jmp
aas
xor
adc
jp
loope
jmp
pushf
jmp
mov
push
sbb
xchg
add
mov
lahf
push
sub
daa
push
mov
and
sahf
mov
sub
test
xor
xchg
ins
inc
dec
hlt
sub
div
xor
mov
pop
mov
(bad)
or
js
xchg
sbb
sbb
xchg
lahf
gs
stc
daa
idiv
aas
loope
test
mov
mov
sbb
lock
mov
arpl
pop
add
and
sub
mov
mov
mov
cmp
call
gs
scas
js
loop
test
sbb
aas
std
mov
test
cli
adc
jne
scas
fmul
retf
sub
mul
push
imul
movs
jle
mov
add
mov
sbb
pushf
and
push
(bad)
in
push
sub
mov
xchg
je
in
xchg
loopne
movs
xchg
loopne
dec
sub
repz
loop
mov
cmp
jne
xor
sub
in
jmp
xchg
xor
aad
loopne
ret
sub
xor
jo
adc
outs
frstor
ja
mov
or
fidivr
call
inc
sar
push
loop
pop
and
xchg
mov
xor
sbb
pop
xchg
mov
adc
stc
std
aad
test
xchg
pop
inc
jg
imul
cli
enter
and
in
add
repnz
cs
adc
sbb
and
les
pop
mov
mov
test
sbb
cli
int
mov
push
(bad)
jl
inc
test
push
jmp
mov
jle
cmp
ret
or
movs
xchg
pop
jg
icebp
nop
stos
xor
xchg
mov
pop
imul
xor
adc
ret
adc
adc
dec
retf
dec
outs
mov
xchg
jbe
packuswb
sub
inc
push
daa
in
sahf
loop
sub
imul
(bad)
shl
add
push
sbb
inc
in
fiadd
mov
ins
ja
scas
out
fiadd
inc
movs
cmovp
push
ja
pop
xchg
dec
mov
pop
pop
sub
ja
popf
pop
js
sub
mov
pop
mov
mov
loop
cmp
fcompp
adc
lds
sbb
xchg
adc
aaa
pop
jl
cmp
aas
outs
xor
test
mov
jo
gs
xor
adc
mov
xor
test
cmp
(bad)
neg
test
dec
call
stc
xchg
inc
outs
mov
sbb
lock
sahf
cmps
inc
xor
sbb
js
ins
into
in
ret
push
jg
sub
in
daa
les
add
push
icebp
ja
outs
shl
push
out
lods
pop
mov
stc
sub
loop
inc
mov
sbb
repnz
into
ins
fwait
inc
inc
pop
pop
jmp
adc
rcl
sahf
jge
jecxz
or
dec
ja
push
mov
or
lds
popf
rcl
push
xor
in
pushf
fnstsw
movs
push
cmp
je
jge
pop
dec
jnp
inc
pusha
hlt
fisubr
inc
jle
out
mov
into
add
push
dec
das
mov
cmp
into
and
cdq
jns
and
mov
mov
daa
mov
popa
or
or
pop
cmp
call
shr
inc
es
enter
pop
pop
jnp
adc
sub
lahf
test
xchg
mov
cmps
jmp
push
pusha
mov
cmp
push
adc
adc
in
lds
pop
add
jmp
sub
aam
in
fcom
or
pop
push
jns
repnz
pusha
adc
lahf
xchg
xchg
leave
pop
adc
fidivr
sub
std
jmp
lahf
pushf
rol
in
adc
push
pop
movs
jmp
push
lods
cmp
cmps
cs
shr
cld
not
mov
loopne
pop
jle
adc
call
sbb
push
mov
ss
mov
push
inc
sbb
xchg
and
lods
and
je
mov
popf
inc
sub
iret
xchg
cmp
xor
aam
or
xchg
xchg
and
jg
ins
cmp
cli
jmp
xor
ins
add
mov
stos
lahf
mov
rcr
jbe
cld
retf
and
adc
pop
data16
mov
jns
add
repz
sbb
ss
mov
cs
mov
sahf
xor
loop
arpl
adc
iret
sub
das
sub
and
and
sub
push
jp
jnp
dec
pusha
sti
shr
popa
add
loopne
adc
dec
test
dec
add
daa
push
call
scas
xchg
jmp
das
adc
popf
lahf
dec
stgi
and
(bad)
add
push
fxch
or
loop
stos
jg
test
xor
and
int3
test
xchg
sbb
pop
pop
into
out
mov
add
fild
cmps
(bad)
enter
push
push
mov
jmp
pop
mov
mov
push
dec
or
mov
and
popf
inc
mov
mov
mov
pop
xchg
push
xchg
cli
out
ret
inc
cmps
pop
(bad)
(bad)
mov
jl
dec
and
(bad)
mov
mov
jnp
fcmove
nop
in
aaa
loope
jnp
cmp
arpl
xchg
repz
xor
adc
mov
lahf
inc
pop
inc
sar
sbb
xchg
in
cmp
retw
cld
leave
push
adc
jl
sbb
xlat
(bad)
cmp
nop
push
fcomip
pusha
enter
adc
sub
xchg
les
xchg
lea
mov
add
jns
les
shr
in
retf
jmp
sbb
gs
pop
fistp
pop
adc
shr
mov
inc
adc
les
sub
adc
mov
and
dec
(bad)
sahf
and
jne
scas
sti
rcr
inc
retf
retf
cld
sar
jecxz
loop
push
add
fisttp
adc
push
mov
nop
mov
ror
inc
mov
(bad)
jae
mov
mov
push
add
lds
inc
cmps
xor
aas
je
jl
scas
(bad)
mov
add
mov
loope
pop
mov
in
add
xor
repnz
test
ins
push
adc
xor
xchg
imul
enter
mov
jnp
in
mov
jbe
sbb
lods
popf
adc
ja
xor
out
pop
outs
mov
cmp
arpl
sub
inc
fdivr
inc
mov
jge
test
movs
jge
jno
idiv
(bad)
adc
fcom
into
test
icebp
mov
or
test
retf
movs
pop
pop
scas
push
dec
xchg
out
mov
pop
dec
jb
retf
add
mov
xchg
hlt
scas
pop
lea
loop
out
sub
pop
shr
cmps
xchg
xchg
push
xor
in
mov
test
and
mov
ss
cmc
popf
mov
mov
dec
pop
jb
inc
scas
pop
pop
ret
iret
jg
add
pusha
popa
ror
in
lds
sbb
pop
or
mov
fild
xchg
lock
mov
int3
outs
add
xor
iret
pushf
int
js
cmp
loopne
xchg
cmp
in
pushf
mov
push
inc
daa
push
(bad)
sbb
icebp
or
dec
sar
ins
mov
jp
jge
xor
jg
inc
sub
ret
test
jp
xchg
fsub
js
xor
in
out
repnz
dec
sbb
dec
dec
fist
(bad)
xor
std
addr16
ror
sahf
popa
add
das
jecxz
mov
aas
sar
or
pop
add
stc
pop
and
pusha
sub
and
push
add
push
push
mov
shl
rol
int3
adc
sbb
scas
xchg
push
pop
ret
movs
xchg
sub
mov
das
pop
js
fs
pop
pop
and
aam
ins
and
cmp
inc
gs
sub
sbb
push
hlt
jmp
jl
jmp
lods
ror
dec
mov
in
in
in
pop
shl
dec
pusha
into
xchg
shl
enter
cmps
sub
pop
int
or
das
and
fldenv
test
loop
pop
idiv
push
retf
lea
inc
xchg
jnp
xor
outs
shr
lds
pop
inc
mov
aad
push
js
es
je
out
aam
gs
ret
xor
dec
jno
xchg
fadd
adc
fisubr
loopne
pop
xchg
xchg
(bad)
dec
ja
inc
call
int
dec
movs
sbb
jns
mov
sar
test
cmp
xor
retf
outs
add
add
sub
fadd
punpckhwd
jo
mov
ror
mov
add
sbb
push
ret
std
out
inc
outs
imul
clc
popf
mov
ror
daa
(bad)
(bad)
gs
aad
loopne
mov
push
pop
in
enter
mov
gs
daa
cli
pop
(bad)
dec
ret
sahf
fnstenv
push
jns
aad
call
push
mov
hlt
push
ss
or
test
fwait
aam
mov
mov
xor
out
sbb
jae
xchg
xor
jge
jmp
out
sbb
mov
mov
xor
jne
or
inc
cmp
stc
test
adc
xor
or
push
iret
push
sub
cmp
add
jg
jo
pop
add
add
fs
jne
ror
fld
mov
xchg
out
(bad)
xchg
std
push
xchg
push
dec
fnstenv
xchg
sub
fstp
outs
scas
cmp
loop
(bad)
fmul
cmp
cmp
in
xchg
mov
or
dec
movs
popf
cld
dec
ror
sbb
js
push
or
push
or
sahf
adc
pop
adc
dec
mov
test
inc
lds
adc
xor
popf
ds
dec
hlt
mov
mov
call
sub
xchg
add
das
inc
pushf
out
stc
(bad)
mov
(bad)
jne
lods
push
inc
fist
and
test
jmp
and
popf
xor
pop
mov
mov
stc
jge
fild
sahf
mov
(bad)
mov
pop
inc
sub
mov
iret
mov
add
and
xchg
fs
pop
or
retf
stos
mov
mov
pop
add
call
mul
psubq
push
xor
fstp
out
pop
sbb
xor
mov
jae
jmp
neg
cdq
sbb
mov
cmps
aas
jno
popa
sub
shl
xor
(bad)
(bad)
popf
mov
inc
call
cmp
jmp
sub
test
stc
jecxz
jmp
in
xor
xchg
xchg
out
sub
jne
call
les
jge
call
mov
outs
xchg
cmp
mov
jae
xor
push
sub
dec
xor
or
push
mov
imul
mov
mov
movs
xor
and
retf
xchg
ret
sar
fld
mov
mov
mov
push
push
or
xchg
cs
or
push
mov
xor
cmps
stos
mov
ins
mov
arpl
adc
xchg
pop
inc
sbb
sub
add
das
adc
aam
stos
aam
jmp
add
mov
push
add
dec
jae
adc
jno
sar
clc
xchg
fmul
inc
std
adc
dec
pop
es
jecxz
pop
mov
sbb
jno
stos
test
jmp
or
pop
mov
frstor
scas
in
push
(bad)
pop
scas
dec
in
cmp
(bad)
xor
and
sahf
out
stc
jmp
jne
jo
stc
pop
inc
adc
les
std
inc
and
(bad)
call
cmc
stos
cmc
fs
int
add
sbb
push
pop
inc
mov
adc
sub
repz
jecxz
adc
cwde
jmp
push
pop
stos
adc
push
dec
test
dec
in
cdq
cs
dec
in
sub
push
inc
clc
inc
mov
add
sub
inc
rcl
mov
push
mov
pop
arpl
dec
nop
xor
cld
inc
(bad)
jb
ror
mov
mov
pop
jle
xor
jge
cwde
push
mov
aaa
icebp
fcom
loop
in
sub
push
sub
cwde
cmp
jmp
repz
inc
(bad)
ficomp
add
inc
popa
retf
mov
in
loopne
jns
xchg
aad
jne
pop
mov
inc
pop
inc
xchg
movs
mov
push
mov
push
jecxz
pop
mov
jmp
push
sbb
xlat
jmp
inc
lods
cmp
push
fs
xchg
popf
sub
loope
pushf
xor
mov
in
inc
mov
cmp
adc
je
lods
pop
data16
sti
xlat
mov
mov
icebp
mov
jno
adc
int3
pop
lds
xchg
loop
retf
dec
test
popf
jmp
sbb
mov
push
test
jno
and
cmp
pop
aas
scas
or
mov
mov
sbb
sbb
adc
movs
xchg
dec
imul
push
fwait
sar
sar
pop
das
test
je
xlat
jb
cmp
aaa
into
jmp
mov
shl
into
repz
icebp
(bad)
jmp
test
xchg
pop
test
xchg
nop
dec
ret
sub
sub
cmps
mov
movzx
push
cmps
lea
(bad)
test
dec
mov
mov
shl
loopne
add
leave
mov
stos
loop
hlt
mov
dec
pop
lds
(bad)
icebp
adc
mov
pop
popf
mov
jmp
push
fnsave
mov
cmp
pop
jnp
adc
cmps
out
int3
pop
pushf
push
fsub
xor
inc
push
push
int
xchg
and
iret
pop
aas
shl
and
push
mov
pop
xor
sub
pop
in
jg
in
mov
dec
xchg
into
sub
dec
jmp
ret
test
xchg
int3
sub
shl
push
mov
mov
and
jae
inc
dec
adc
(bad)
and
cmp
retf
lock
pop
sub
mov
bound
mov
daa
arpl
outs
hlt
or
or
jge
daa
xor
into
pop
cs
adc
pusha
cmp
popa
xchg
add
or
pop
xchg
lods
cld
mov
mov
push
das
sbb
pop
mov
shr
addr16
cmp
es
xchg
mov
into
push
xorps
std
inc
push
pusha
or
int3
push
out
jbe
sbb
retf
mov
pop
push
gs
xchg
ror
xchg
add
fimul
inc
inc
icebp
cmps
data16
mov
or
cmp
jge
sbb
das
fs
jns
das
fdivr
imul
rol
ja
test
(bad)
pop
cmp
inc
mov
xchg
fs
pop
push
ja
mov
sub
mov
test
mov
(bad)
in
cmc
das
call
retf
adc
cwde
push
xchg
pop
xchg
cdq
lahf
sbb
xor
stos
xor
and
xchg
popa
sub
cmp
xchg
mov
lods
mov
xchg
xchg
out
inc
enter
and
nop
add
test
ins
in
push
jmp
outs
and
fwait
mov
adc
adc
aam
xor
xor
gs
aad
and
movs
jp
ds
add
fmul
data16
dec
movs
fstp
dec
push
adc
das
xlat
xor
ret
cwde
jno
push
push
sbb
sahf
cs
adc
xchg
nop
in
in
mov
dec
repz
movs
push
push
dec
inc
mov
and
inc
iret
mov
out
jl
xor
in
fs
mov
iret
fsubr
sbb
push
shl
leave
pop
xchg
jmp
push
rep
mov
cmp
rcl
lods
addr16
mov
inc
shl
xchg
pop
jle
xchg
test
pop
dec
icebp
ss
and
leave
mov
mov
push
mov
call
mov
inc
push
pop
jp
(bad)
sub
add
inc
pop
add
pop
mov
dec
data16
in
int
jmp
aas
stos
loope
or
enter
pusha
inc
jne
dec
xor
xchg
push
loopne
outs
js
mov
mov
retf
add
and
mov
fimul
not
and
xchg
shr
cs
push
(bad)
cli
mov
mov
jno
stos
and
call
ret
xchg
cli
aas
enter
push
loop
(bad)
mov
and
lock
push
paddb
out
pushf
mov
(bad)
out
mov
xchg
jae
jmp
and
jg
dec
xor
jmp
xor
add
jle
aaa
pusha
fs
test
(bad)
mov
retf
(bad)
ret
mov
imul
(bad)
push
xchg
mov
imul
inc
inc
aam
and
lods
es
inc
dec
dec
aas
mov
enter
sbb
sbb
sbb
cmp
in
std
fadd
sbb
jmp
imul
push
dec
test
pop
sub
xchg
xchg
loope
in
fbstp
xchg
xchg
(bad)
dec
adc
ss
cld
jbe
dec
loope
dec
int3
xor
popf
in
hlt
jp
mov
xor
inc
imul
movs
push
fst
pop
push
data16
aad
(bad)
mov
jne
dec
adc
sbb
std
clc
sti
sub
or
enter
cld
ins
popf
dec
cmp
(bad)
mov
scas
or
fs
shl
aaa
loopne
ret
in
mov
scas
add
cmc
shr
xchg
pushf
xor
inc
mov
xchg
leave
call
(bad)
mov
scas
push
mov
mov
les
shl
imul
jl
inc
mov
lods
cld
out
cmps
int3
dec
mov
push
add
adc
cmp
std
mov
xor
aam
icebp
xor
mov
dec
or
call
add
into
add
loop
pusha
mov
xchg
or
adc
cmc
jmp
lahf
hlt
int3
mov
je
xchg
sub
mov
retf
and
xor
push
les
ror
call
lds
xor
pusha
lea
into
imul
cmp
sti
imul
mov
push
outs
or
les
add
push
not
dec
jl
aaa
mov
clc
mov
lahf
sbb
sbb
add
fdivr
daa
jae
push
mov
xor
inc
cmp
ror
fcomi
and
loop
repz
repnz
and
xlat
aaa
xlat
cmc
jecxz
jb
out
xchg
inc
aas
in
jno
imul
sbb
scas
lds
pop
je
adc
out
sbb
clc
enter
ss
outs
cmp
outs
scas
cmp
bound
iret
adc
popf
cmp
cmc
pop
jge
nop
aam
pop
jmp
lods
sbb
dec
xor
out
inc
or
cmps
call
push
sub
in
push
mov
out
pop
adc
gs
loopne
mov
mov
jae
lea
ins
pop
mov
sbb
sub
lahf
cs
mov
xor
jnp
bnd
jge
fimul
push
mov
mov
push
jmp
outs
xor
(bad)
cmps
popf
fstp
jge
xchg
jecxz
fist
mov
aaa
clc
add
sub
or
xor
stos
pop
xchg
cli
fisttp
int3
retf
shl
pusha
out
sbb
push
fadd
or
inc
mov
mov
add
and
or
adc
cli
mov
repz
sub
jo
lods
cmps
inc
daa
add
ins
(bad)
into
stos
shl
int
hlt
dec
lahf
sbb
jbe
je
sbb
fbstp
xor
clc
mov
call
popa
jle
xchg
dec
not
xor
jge
scas
push
pop
into
or
push
push
ss
or
lods
dec
ja
or
nop
xor
sub
not
loope
movs
lods
add
jg
cdq
cli
lods
clc
outs
cld
add
shl
dec
jp
xlat
mov
mov
or
dec
pop
shl
repnz
fcomp
shr
cmc
cdq
pushf
xchg
sbb
xor
in
or
pop
cmp
dec
rcr
cmps
or
jl
jno
pop
int
or
jno
sub
mov
xchg
adc
retf
repnz
out
push
jo
sub
mov
push
jns
pop
je
xchg
xor
in
xor
mov
enter
push
adc
scas
iret
pop
mov
call
inc
cld
(bad)
push
push
xchg
daa
jae
add
das
cmp
aas
jp
and
jg
xor
icebp
adc
in
test
push
cmps
xchg
xor
out
jne
xlat
and
jmp
mov
cmp
pop
pop
popf
sar
ss
ins
push
stos
mov
stos
repz
das
dec
push
xchg
sbb
jg
rol
repnz
adc
ins
mov
mov
outs
jl
mov
cld
loopne
mov
xchg
push
dec
jmp
xor
push
imul
xchg
fnstenv
push
pop
les
cmp
ret
cmc
inc
call
and
movs
aas
stc
inc
sub
call
jae
jo
enter
push
xchg
or
mov
stos
sub
mov
lods
adc
sahf
or
mov
jmp
imul
push
pop
test
and
mov
rep
cs
dec
push
cmp
loopne
xor
or
pop
jnp
adc
mov
outs
outs
(bad)
xchg
lods
nop
inc
jg
fisttp
sub
rcr
imul
pop
in
sub
push
ret
adc
outs
adc
in
iret
in
mov
and
and
jle
or
jg
dec
adc
and
pop
cli
cs
or
movs
adc
dec
dec
add
mov
pop
stos
test
rcr
xchg
jecxz
or
inc
out
xchg
les
mov
pop
xchg
std
adc
test
mov
mov
fsubr
ficomp
mov
pop
(bad)
popa
sub
in
dec
cmp
xchg
pop
sub
inc
xor
xchg
xor
repnz
or
inc
sbb
push
mov
jp
fsub
cmc
ss
ja
jb
dec
dec
inc
sahf
das
(bad)
rol
push
(bad)
imul
int
ins
jg
mov
adc
xchg
xor
lds
or
and
xchg
aad
jne
mov
jb
pop
sahf
jno
add
je
inc
cwde
mov
sub
pop
mov
xchg
mov
adc
cwde
nop
sbb
jmp
push
mov
outs
gs
mov
cmp
aad
jbe
nop
fild
jmp
push
mov
jge
dec
shl
adc
xor
movhps
test
mov
std
jg
sti
addr16
or
cmp
fsubr
inc
clc
repz
(bad)
shr
adc
sar
shl
sbb
mov
neg
(bad)
fidiv
leave
cmp
inc
inc
or
or
movs
add
xchg
xchg
movs
imul
adc
jbe
and
cmp
sub
pusha
fwait
add
sbb
add
adc
out
sbb
push
or
xchg
xor
sbb
addr16
pop
push
out
sbb
pusha
sbb
mov
test
ds
sbb
mov
sub
xchg
ret
cmps
or
in
cmc
add
ror
scas
test
sbb
std
(bad)
pop
and
leave
addr16
sar
pop
call
mov
call
cmps
in
push
adc
stos
sbb
sbb
inc
(bad)
inc
jge
mov
nop
(bad)
int
jmp
and
xchg
jmp
lea
mov
(bad)
fcom
cdq
stc
pop
fidiv
xchg
mov
sar
mov
int3
imul
or
call
inc
sahf
stc
xor
hlt
retf
mov
loopne
mov
xchg
jl
and
fs
data16
cmp
xchg
push
jmp
inc
dec
fnstenv
outs
dec
xchg
in
mov
inc
or
into
shr
arpl
imul
pop
mov
mov
jbe
jg
mov
cdq
mov
clc
push
clc
and
push
jno
fldcw
mov
pop
pop
mov
dec
imul
test
repnz
push
mov
and
repz
mov
sbb
(bad)
push
cmp
xchg
sbb
jnp
mov
adc
push
inc
jnp
push
push
arpl
cmps
inc
mov
sar
(bad)
int3
mul
sahf
pushf
cmc
or
mov
mov
mov
imul
lock
pusha
aad
or
push
cmp
hlt
mov
sti
mov
aam
inc
mov
mov
jnp
inc
les
sub
(bad)
cmp
fwait
std
xchg
xchg
rol
pop
jno
mov
sti
stos
and
shr
ja
or
and
adc
shl
ret
js
push
out
add
adc
push
int3
aaa
add
loope
mov
das
test
dec
cmps
loope
xchg
inc
in
sub
jl
dec
adc
inc
aaa
enter
enter
add
xor
jecxz
jp
or
scas
or
mov
out
mov
lahf
push
cmp
test
ds
cmp
add
cld
pop
or
jecxz
ss
js
call
and
jl
and
cdq
add
dec
loopne
cmp
pop
in
js
inc
shr
cmp
push
xchg
lods
ss
and
into
ret
cmps
(bad)
cmc
mov
and
adc
jl
inc
push
pop
xchg
and
cmp
adc
loope
pop
je
scas
aad
xor
mov
push
retf
push
je
mov
cdq
test
push
loopne
cmps
mov
fild
scas
mov
je
cmp
sub
inc
dec
(bad)
leave
dec
push
psubsb
sub
push
(bad)
pop
cmps
mov
sar
or
mov
stc
ss
dec
into
sbb
mov
(bad)
ja
jnp
fsub
mov
xchg
ss
mov
cmps
xor
aas
(bad)
sub
or
div
push
pop
push
addr16
dec
neg
pushf
sbb
xor
and
(bad)
mov
cdq
idiv
push
cmp
mov
mul
sbb
and
pusha
jo
push
rcr
neg
test
and
mov
imul
mov
mov
jae
rol
inc
mov
xor
inc
fidivr
pop
dec
leave
pop
pusha
sar
movs
inc
lahf
pop
outs
xchg
sbb
adc
mov
ud1
mov
cmps
sub
cmp
mov
dec
loope
into
dec
jmp
test
pop
or
bound
mov
mov
pop
xchg
sub
enter
(bad)
mov
sahf
pop
int3
cmp
ror
sbb
jl
loop
jb
gs
mov
adc
stc
and
inc
dec
in
out
stos
adc
pop
push
(bad)
lds
pop
xchg
stos
and
enter
jo
jns
clc
dec
jecxz
push
and
fisttp
icebp
(bad)
mov
hlt
mov
push
test
xchg
fisubr
jp
cwde
lods
lds
cmps
cwde
dec
inc
adc
cmp
sbb
or
das
mov
dec
out
or
xlat
fwait
sbb
lods
xchg
ss
jmp
xchg
mov
aas
push
movs
xlat
arpl
(bad)
or
and
jae
je
test
stos
fisttp
sbb
dec
mov
and
push
push
mov
call
dec
mov
sbb
adc
ret
cmp
popa
pop
jbe
call
pop
call
inc
(bad)
cmp
jne
sahf
inc
jmp
and
xor
jb
jmp
outs
inc
out
loope
mov
and
imul
ins
test
test
arpl
addr16
inc
aaa
cmp
shl
jb
movs
in
daa
es
pop
das
add
ror
adc
fdivrp
cmp
dec
cmp
pop
xchg
rcr
aaa
aaa
or
mul
jae
lds
btc
jae
ds
jg
push
out
sub
push
repnz
pop
mov
xor
inc
mov
dec
mov
outs
sub
mov
fist
loopne
dec
mov
fsub
add
xchg
ss
cmp
jecxz
sbb
aam
das
xchg
out
xor
fwait
das
repz
adc
cmp
call
movs
push
hlt
ss
dec
mov
aas
jl
ror
pop
sbb
push
ret
add
sbb
stos
jb
sbb
dec
sub
lds
icebp
rol
pop
xor
sbb
or
ds
bound
cmp
jg
push
mov
mov
out
lock
cmp
sbb
mov
or
push
sti
mov
repnz
jno
mov
xor
aam
(bad)
dec
cmp
add
into
ins
add
in
fs
pop
dec
scas
xlat
dec
or
and
xchg
sbb
cs
pop
or
jmp
xor
shr
add
sub
jmp
mov
pop
dec
ret
(bad)
es
inc
imul
cmp
outs
ins
or
aaa
sub
pushf
test
sub
rcl
(bad)
pop
and
mov
outs
cld
inc
mov
cmp
ds
movs
ins
push
ret
ret
dec
imul
clc
xor
fs
or
out
popf
push
add
lods
mov
add
call
imul
mov
xchg
dec
xchg
sub
add
or
push
pop
push
scas
repz
sbb
and
inc
movs
mov
rol
xchg
push
sub
mov
es
mov
std
dec
sbb
inc
hlt
(bad)
data16
lock
cmc
xchg
xor
movs
test
mov
pop
test
jno
mov
imul
imul
sbb
ss
sub
mov
ss
xchg
ja
cmp
test
jle
mov
mov
scas
pop
mov
cmps
dec
retf
cmp
enter
addr16
inc
inc
fisttp
mov
push
dec
jg
call
addr16
pushf
xor
xchg
ror
mov
sbb
xchg
in
in
push
or
push
mov
jns
in
das
dec
jecxz
jns
lea
arpl
and
out
or
cmp
jl
dec
in
call
idiv
push
ins
stos
push
les
push
mov
adc
and
adc
mov
stos
sub
aas
add
pusha
mov
test
fst
das
add
das
pop
lahf
test
pop
pop
ss
adc
push
arpl
mov
sbb
inc
lods
cwde
jnp
in
out
mov
inc
lds
arpl
mov
xor
mov
ror
cmp
ficom
aam
jne
push
jle
int3
push
adc
add
pop
nop
mov
in
hlt
jne
repz
mov
push
enter
and
clc
mov
adc
(bad)
mov
pop
jbe
ret
xchg
jecxz
cld
adc
(bad)
fild
aad
jecxz
xor
call
or
adc
imul
popf
xor
cld
add
popa
or
gs
cmps
sbb
mov
out
adc
jl
ret
(bad)
xchg
les
add
cmp
outs
xlat
sub
xchg
inc
jmp
push
in
jo
sub
(bad)
xor
sub
fcomip
iret
add
outs
movs
rol
cs
and
dec
dec
add
inc
lea
stc
xor
and
pop
or
ds
enter
mov
push
inc
nop
add
jp
inc
sbb
hlt
xchg
mov
jnp
scas
stos
xchg
leave
push
dec
push
xchg
sub
iret
mov
fidiv
(bad)
dec
call
jo
fist
mov
pop
call
pop
mov
cmps
es
jmp
or
sub
jno
nop
add
add
mov
jl
mov
bound
mov
inc
enter
popa
push
in
lods
dec
inc
sbb
rcr
xor
push
repz
inc
or
out
call
movs
pushf
dec
adc
jne
stos
mov
fcomi
xchg
sbb
pop
fisttp
out
jle
movs
inc
shl
jp
sti
xchg
sub
mov
pop
sub
mov
(bad)
and
call
or
mov
shl
imul
mov
test
in
xchg
in
dec
test
push
adc
dec
and
(bad)
adc
leave
sub
aam
movs
cs
test
dec
or
int3
in
push
cmp
clc
pop
(bad)
fmul
xchg
dec
and
push
mov
cmp
sub
adc
sbb
stos
xchg
mov
adc
or
into
out
outs
cmps
jle
mov
(bad)
hlt
pop
loop
sbb
imul
clc
shl
xor
in
mov
pop
jno
mov
dec
ins
adc
nop
mov
jecxz
jae
imul
xor
inc
add
add
fs
push
repz
cmp
sub
scas
inc
push
addr16
xchg
lods
rcl
pop
dec
inc
mov
aas
cmp
or
addr16
out
dec
ret
(bad)
stos
(bad)
pop
xchg
or
out
adc
aam
lods
enter
sbb
cld
push
leave
xchg
test
jne
or
xchg
xor
mov
clc
pusha
pop
xchg
xchg
push
mov
call
ret
dec
fstp
xchg
sti
mov
std
cmp
push
mov
sahf
ins
cmp
mov
push
cmc
lea
ss
fwait
xor
fimul
jmp
and
push
jp
mov
and
push
mov
cs
push
xchg
sbb
and
lahf
mov
hlt
cmp
mov
mov
ds
aaa
test
add
inc
xlat
je
mov
fwait
jbe
pop
cmp
stos
adc
ret
mov
in
and
cmp
inc
add
mov
pop
xor
ret
call
inc
pusha
lahf
push
push
jmp
jmp
add
push
(bad)
push
jg
mov
xchg
jp
mov
pop
mov
xchg
pop
xor
pop
cli
sti
jg
xchg
dec
sbb
inc
das
cdq
mov
xchg
ret
cs
ja
mov
cmp
sub
sbb
pop
mov
scas
inc
jnp
movs
sbb
(bad)
jecxz
or
(bad)
(bad)
mov
xchg
sbb
push
out
rol
xchg
mov
test
lds
das
xchg
adc
or
mov
xor
push
jae
fistp
addr16
fisttp
call
push
(bad)
mov
(bad)
cmp
mov
push
loope
arpl
mov
jb
or
ja
inc
add
lea
outs
mov
fwait
imul
cmp
fs
add
push
and
stc
sbb
das
enter
movs
es
dec
push
mov
push
arpl
xchg
pop
sub
and
or
jno
dec
fimul
lods
mov
das
loopne
cmp
jmp
(bad)
sti
xlat
push
xor
fcmovnu
cmp
cli
fadd
ss
stos
sub
adc
cmc
popf
add
push
sbb
cmp
fild
pop
jmp
cld
jmp
fmul
inc
shl
hlt
and
int3
pop
rcl
adc
push
jl
aaa
les
jns
sub
jno
mov
and
pop
push
jae
mov
mov
add
push
leave
add
jp
rcl
pop
pop
jmp
dec
iret
pusha
fisttp
loop
adc
adc
loope
scas
cdq
add
fldenv
mov
jmp
inc
(bad)
pop
jo
sub
inc
int3
in
mov
xchg
les
push
out
jmp
push
xor
ds
popa
stos
cmps
jae
repz
fimul
lods
and
sbb
retf
push
icebp
jl
push
cmp
inc
rcr
lock
pop
pop
cmp
jmp
sub
nop
movs
adc
jmp
add
push
sub
mov
das
xchg
shl
or
cmp
test
in
xchg
sbb
(bad)
xlat
sub
scas
and
popa
xchg
push
rcr
push
mov
inc
mov
mov
jb
fmul
pop
xchg
mov
ds
cmp
jno
cmps
enter
mov
jne
aad
(bad)
test
jle
sbb
jns
hlt
sar
fimul
mov
(bad)
adc
out
cmps
test
shr
fs
(bad)
stc
sub
xor
cs
and
loopne
rcr
loopne
and
clc
or
nop
mov
pop
outs
xchg
jge
pop
mov
jnp
inc
adc
and
push
je
stos
cmps
loope
mov
sbb
xchg
aad
addr16
mov
bound
mov
mov
sbb
scas
push
mov
jo
mov
rol
cmps
dec
add
in
push
mov
sbb
fs
mov
aam
or
mov
cmp
ds
js
mov
ja
arpl
add
fldenv
repz
xchg
mov
outs
xchg
jmp
xchg
jae
inc
nop
callw
(bad)
cmp
and
jno
sbb
js
pop
dec
push
inc
fld
js
add
add
xchg
sub
shl
push
(bad)
mov
sub
outs
dec
xor
mov
mov
mov
rcl
xchg
dec
mov
pop
jg
mov
jne
xchg
adc
mov
retf
dec
dec
nop
cmp
inc
add
frstor
or
iret
test
mov
cmp
xor
or
xchg
push
movs
ins
into
daa
pop
pop
stos
jmp
xor
and
ins
mov
sub
outs
lods
mov
and
test
stos
sub
test
inc
lea
sbb
pop
(bad)
sub
jbe
dec
jo
sub
repz
mov
popa
cmp
inc
pop
pop
xchg
into
and
cmp
fisubr
add
lock
inc
inc
jnp
add
mov
out
js
or
mov
dec
dec
(bad)
js
movs
test
cdq
rcl
and
xlat
icebp
jb
mov
sbb
cmp
push
mul
dec
adc
dec
cmp
mov
test
arpl
sar
popa
inc
pop
es
xchg
push
daa
xor
push
inc
inc
xor
mov
push
das
mov
jbe
mov
push
into
lds
push
ret
cmp
pop
fistp
dec
or
in
sub
test
lods
add
out
pop
dec
scas
sub
pop
jp
sub
pop
loopne
mov
cmp
inc
mov
pop
mov
(bad)
and
ror
stos
(bad)
test
movs
add
add
ret
out
and
fidivr
lock
js
fwait
leave
sbb
mov
sahf
add
neg
imul
sar
dec
jl
and
nop
int
push
fwait
arpl
pop
xchg
mov
shl
jg
jae
int
rcl
inc
test
sub
scas
je
xchg
rol
(bad)
scas
fsubr
or
aam
out
gs
push
xrelease
sub
std
pushf
sub
aaa
mov
mov
call
xor
sbb
stc
push
add
dec
inc
popf
cmp
jnp
dec
rcl
xchg
call
add
cmp
sub
adc
pushf
adc
outs
xchg
lds
pop
call
test
pop
and
aas
or
lea
inc
jb
popf
jmp
add
into
je
lea
dec
cmps
ja
es
retf
sub
stos
inc
outs
add
fistp
pushf
xchg
jl
data16
cmp
push
or
cdq
jae
push
loop
and
push
es
out
in
sub
jle
repz
jnp
pop
out
or
pop
ins
add
push
add
maskmovq
test
test
and
idiv
leave
pop
adc
sbb
mov
test
scas
adc
in
mov
dec
out
xor
pop
sub
jle
mov
jnp
(bad)
and
fisttp
mov
js
les
call
dec
sahf
fwait
outs
mov
cmps
sbb
outs
push
sbb
dec
mov
xchg
jb
out
retf
pusha
loopne
dec
pop
test
adc
add
sbb
pop
mov
out
dec
mov
aam
mov
leave
push
xor
loopne
push
ror
xor
stos
es
rol
pop
sbb
jnp
lea
xchg
sbb
fild
loopne
adc
dec
test
pop
sub
push
int
cld
pop
jg
out
gs
xchg
lahf
jl
push
int
test
out
xor
(bad)
call
mov
rcl
imul
cwde
bound
(bad)
(bad)
jns
ror
pop
outs
rcl
and
xchg
jnp
rcr
or
xor
fcmovnb
mov
jmp
imul
xlat
test
retf
icebp
out
mov
sub
dec
jmp
pop
loop
xchg
xlat
(bad)
jno
in
push
fsubrp
inc
jns
or
xor
cmp
(bad)
mov
xor
aad
mov
jbe
cmps
leave
mov
div
fcomp
cmp
outs
int3
imul
shl
je
xchg
ja
pop
out
jmp
vpalignr
das
test
pop
add
fwait
jns
xchg
movs
mov
mov
xchg
or
push
or
pop
or
repnz
inc
mov
inc
push
aas
pop
or
push
lahf
ds
(bad)
push
jns
(bad)
gs
dec
or
adc
fcom
cs
jno
outs
movs
inc
pop
es
out
push
adc
add
movs
loopne
das
mov
xor
shl
fwait
xor
lea
pop
mov
and
mov
add
shl
sahf
fidivr
inc
pop
sub
retf
mov
movs
das
mov
scas
stos
push
push
push
pop
int
or
and
xor
es
fcmovbe
jge
test
jns
outs
stos
leave
pop
sbb
sub
adc
and
cmp
(bad)
push
jo
mov
pop
adc
lods
cmps
xchg
sbb
sbb
push
stc
inc
arpl
in
scas
imul
lods
loopne
in
sub
mov
xchg
jo
fdivr
cwde
outs
ins
cli
pop
xchg
and
mov
cmp
mov
imul
icebp
dec
pop
pusha
mov
jge
pop
in
dec
or
mov
xrelease
aaa
gs
sahf
xchg
not
inc
icebp
imul
jl
or
adc
and
mov
mov
mov
test
out
nop
dec
pop
icebp
xchg
sub
std
es
jmp
arpl
rol
cmp
lds
adc
xchg
daa
jnp
cmp
repz
push
aad
test
and
jmp
not
mov
lods
out
dec
aas
jecxz
push
iret
icebp
add
retf
push
stos
xlat
(bad)
jg
pop
jg
xor
cdq
sbb
cmp
loope
fisttp
pop
rol
test
sub
pop
es
adc
je
(bad)
mov
mov
scas
in
pop
add
pop
cld
push
mov
and
lock
pop
push
mov
and
or
outs
retf
cmp
cwde
jmp
inc
sbb
cmps
sbb
je
out
adc
imul
into
xchg
lds
cdq
add
sub
jge
inc
sub
outs
mov
jmp
xlat
jb
xchg
pop
cs
adc
jae
jg
mov
sahf
nop
cld
ins
adc
std
pop
adc
jp
cld
push
pop
mov
ret
push
dec
push
lods
or
lahf
xor
out
das
xor
outs
cs
xchg
push
dec
into
sbb
mov
pop
mov
cmp
and
loope
outs
scas
iret
rol
dec
movs
fistp
add
or
cmp
dec
and
sbb
push
and
add
sar
mov
or
or
ds
fiadd
scas
inc
cdq
fistp
ins
mov
(bad)
mov
out
xor
mov
in
adc
adc
xchg
sbb
leave
jmp
jns
fwait
call
jge
jecxz
call
imul
adc
sbb
scas
call
or
pop
gs
clc
lods
mov
cmc
fisttp
mov
dec
leave
adc
xor
inc
add
inc
popf
mov
ds
gs
and
inc
fdiv
or
push
pushf
lea
dec
dec
test
jmp
xchg
gs
test
push
xchg
or
enter
dec
outs
pop
aas
mov
dec
outs
cmp
jmp
nop
dec
push
test
movs
pushf
(bad)
aad
mov
mov
inc
pop
jmp
cmp
jmp
or
fadd
cmp
push
xor
xchg
or
xchg
bound
out
mov
xor
fmul
inc
ds
push
cmp
cs
xchg
mov
mov
fild
ret
jno
retf
pop
inc
int
inc
loop
(bad)
imul
ds
cwde
jne
lods
je
or
in
sub
inc
pushf
inc
or
pushw
stos
mov
pop
pop
lock
lods
lods
cli
fst
fdivr
or
adc
inc
cli
xor
cwde
inc
mov
xchg
aad
mov
fst
ret
cmps
repz
add
push
loop
sbb
adc
xchg
gs
xchg
in
pop
or
notrack
jle
push
mov
xor
aas
call
cmps
lds
addr16
mov
scas
add
mov
xchg
scas
mov
dec
add
or
cmp
sti
sub
cmps
push
icebp
cmc
cld
inc
aas
adc
int3
adc
ins
repz
sahf
cmp
inc
dec
mov
sub
mov
ror
sbb
jne
sbb
in
retf
outs
cmp
hlt
fdiv
mov
add
mov
sub
adc
pop
mov
leave
lea
out
daa
loop
push
in
jmp
dec
inc
sub
je
clc
stos
test
aas
push
mov
and
in
mov
xchg
jmp
test
lods
sub
add
dec
daa
xchg
jl
xchg
jmp
sub
or
mov
scas
pop
or
dec
loopne
mov
add
ss
xchg
shr
std
lods
push
(bad)
or
jno
in
repz
fcomi
adc
gs
xchg
test
ds
loopne
repnz
push
dec
mov
outs
and
scas
sub
add
sbb
dec
xchg
sbb
inc
mov
jecxz
fnsave
mov
(bad)
retf
push
mov
iret
mov
loop
mov
scas
mov
je
retf
xor
inc
jmp
mov
or
jp
gs
iret
cmp
xchg
stos
mov
adc
(bad)
mov
push
dec
jb
sub
jo
repnz
or
pop
jl
add
lea
stos
pop
inc
aam
ds
jl
xchg
inc
xchg
xor
cmps
inc
repnz
ret
shl
fdivr
jnp
push
sub
mov
adc
daa
mov
cmp
je
mov
jl
inc
shl
stos
(bad)
jb
xchg
repz
fwait
int
sbb
(bad)
aaa
aam
ficom
pusha
add
nop
leave
call
iret
sbb
in
xor
sbb
hlt
(bad)
xor
cmps
mov
je
xchg
imul
cmp
jae
and
push
imul
mov
inc
loopne
jmp
and
xchg
sbb
je
outs
int
call
cmp
in
shl
sbb
movs
jae
mov
mov
and
mov
or
push
cmp
adc
mov
xchg
xchg
test
lds
cld
cmp
(bad)
ds
frstor
movs
cli
je
and
inc
add
jg
sbb
xor
add
jge
sub
add
test
ja
call
imul
sahf
stos
rol
sbb
lods
xchg
mov
fs
xor
inc
sti
inc
adc
movs
mov
mov
pop
data16
inc
ins
imul
sbb
push
mov
fisubr
cs
popa
and
inc
mov
ja
(bad)
out
sahf
add
add
ss
push
lods
and
outs
imul
jecxz
mov
cmp
push
out
xor
out
mov
(bad)
fidiv
push
int3
xchg
push
data16
mov
adc
mov
xor
jmp
adc
test
aaa
sar
les
sbb
and
dec
out
xor
shl
mov
outs
inc
movs
cmp
jl
push
retf
fidivr
adc
mov
cld
loop
call
mov
push
add
push
leave
inc
adc
adc
add
clc
ds
lock
and
cmp
pop
ss
(bad)
movs
sti
or
pop
add
cmp
out
shl
mov
xchg
lock
lods
mov
inc
sub
jb
mov
pop
(bad)
dec
jnp
dec
(bad)
call
in
dec
inc
aad
push
mov
std
movs
(bad)
push
add
cmp
cmp
pop
or
mov
push
pop
mov
sbb
sub
bound
xchg
sub
addr16
or
dec
hlt
or
aaa
mov
stos
jmp
pop
jmp
jo
and
sbb
int
pop
jb
lea
ror
cdq
imul
retf
push
inc
es
fs
call
imul
rcl
push
test
sub
ins
aam
shr
(bad)
(bad)
push
ins
mov
xchg
mov
lods
je
push
sahf
mov
loope
inc
ins
loop
lock
int
mov
xchg
lods
sbb
xchg
cmp
pop
mov
shl
dec
xchg
lods
test
ror
in
push
std
adc
cwde
imul
mov
sub
add
fild
mov
and
push
adc
imul
or
push
add
inc
pop
pop
shr
pop
(bad)
out
gs
jmp
mov
out
jns
mov
test
dec
or
aad
ds
sbb
cmp
xlat
jne
loopne
cli
jge
ror
sar
icebp
pop
jmp
push
mov
sbb
in
aas
xchg
stc
ret
or
and
inc
pop
(bad)
xlat
ins
xor
aam
(bad)
pop
inc
cld
mov
pusha
test
fcomp
jmp
int
lea
fiadd
leave
and
and
ret
push
out
daa
pushf
sbb
ror
mov
cmc
movs
mov
or
cmps
fs
mov
dec
sub
lea
dec
adc
push
or
scas
dec
push
adc
mov
test
bound
aas
mov
fnstcw
jge
loop
daa
inc
lds
sar
sti
mov
jo
or
ret
cli
pusha
pop
pop
outs
pop
pop
addr16
shl
call
xor
cmps
jmp
das
clc
mov
xchg
cmp
push
dec
mov
inc
sbb
std
xchg
mov
lds
fcomp
xchg
mov
not
mov
dec
sbb
xchg
mov
lock
popf
pop
mov
fmulp
nop
imul
jmp
xchg
jae
ins
xchg
jae
pop
and
stos
imul
fcomp
into
pshufw
push
dec
shr
les
dec
(bad)
call
fldcw
fucom
push
jmp
shl
sub
pop
(bad)
scas
pop
ss
ja
rol
jnp
rcr
lods
les
add
inc
loope
in
jbe
mov
cmp
stos
xchg
push
je
(bad)
pop
inc
dec
dec
test
add
fnstcw
neg
and
push
sti
rol
ret
inc
(bad)
sti
(bad)
sub
movs
daa
out
mov
lea
dec
jmp
into
test
test
xchg
dec
cmp
es
dec
adc
fnsave
aam
cs
xchg
add
inc
retf
mov
mov
(bad)
ficom
rcl
dec
jp
add
fcom
adc
and
sbb
data16
repz
or
sbb
mov
imul
add
sub
(bad)
rep
fsubr
push
inc
mov
jns
aaa
out
mov
push
in
rcl
push
xor
jle
stc
xor
adc
sbb
dec
fistp
adc
lock
jo
cmp
and
in
mov
pop
pop
add
ss
pop
inc
inc
ss
xor
test
jnp
mov
jmp
jb
repnz
mov
aaa
mov
popf
cmp
test
out
scas
cmc
out
mov
ins
loope
push
dec
pop
and
hlt
std
dec
imul
das
int3
xchg
int3
in
inc
jl
cmp
push
pop
cmps
adc
and
push
jg
mov
add
jo
cmp
pop
in
cmp
dec
call
imul
inc
add
fwait
cmc
and
call
xor
(bad)
iret
scas
pop
or
mov
repnz
std
add
inc
mov
and
mov
jmp
pusha
mov
mov
xchg
xchg
jbe
sub
sub
cmp
(bad)
xchg
into
(bad)
sbb
imul
ds
add
fimul
pushf
ins
(bad)
inc
sbb
mov
ss
call
xor
dec
cmp
or
das
mov
jae
ret
enter
mov
shl
inc
je
sub
ds
es
es
(bad)
daa
stc
out
xor
pop
repnz
and
scas
cmc
xchg
xchg
sbb
cmps
ret
test
les
out
xchg
mov
je
cwde
test
sbb
nop
xchg
cs
xchg
add
aaa
mov
fs
sar
leave
xchg
popa
dec
inc
push
sub
cmp
aas
enter
mov
lea
aas
out
loop
icebp
adc
cmc
inc
mov
inc
cdq
mov
mov
sbb
retf
pushf
or
and
add
pop
clc
sbb
in
push
push
mov
push
sbb
lock
and
scas
jp
retf
lods
or
retf
xor
in
xor
cmp
and
pop
sbb
lods
inc
cmp
mov
arpl
call
adc
movs
jne
and
loopne
jmp
cmp
sub
jns
aaa
outs
shl
fidiv
(bad)
(bad)
adc
mov
pop
mov
dec
pop
jb
dec
adc
or
sbb
mov
mov
lds
not
jae
add
fldl2e
lahf
stos
(bad)
dec
adc
cmp
add
shr
je
pop
addr16
mov
cld
mov
fucompp
push
daa
jne
in
ret
stos
addps
ret
(bad)
aad
cmp
icebp
popf
push
push
test
mov
inc
cmc
xchg
dec
scas
es
jmp
sbb
jmp
and
not
std
dec
push
lods
arpl
(bad)
outs
dec
inc
mov
dec
cmps
add
xor
jnp
xor
or
outs
push
fnstenv
shl
add
loope
add
dec
mov
fimul
(bad)
in
inc
pop
retf
rcl
(bad)
lods
mov
(bad)
sbb
xor
push
shl
or
ret
pop
sub
out
jmp
arpl
mov
mov
jo
outs
xchg
enter
es
or
jmp
ror
fwait
pop
shr
pop
test
dec
sbb
in
mov
jbe
cs
lahf
(bad)
popa
or
bound
into
pop
es
adc
lds
sbb
fdiv
pop
out
inc
call
cdq
jb
out
(bad)
imul
jo
xchg
sbb
std
mov
loop
push
jmp
add
fbld
push
sar
outs
jmp
stc
xchg
int
(bad)
data16
ss
out
jl
cmc
ror
enter
mov
add
mov
ins
adc
retf
das
imul
scas
jge
sbb
mov
push
jbe
rol
mov
xchg
mov
je
rcl
pushf
add
je
fst
mov
hlt
adc
and
xor
xor
mov
or
and
mov
in
mov
mov
ja
pop
and
cmps
xor
in
bound
pop
jmp
dec
sbb
(bad)
cmp
clc
js
cdq
gs
ret
sub
or
add
mov
xor
mov
iret
pop
xchg
cmp
cmp
push
loop
and
xlat
mov
fst
cmp
cmc
clc
fs
inc
es
iret
inc
stc
(bad)
ror
and
cmps
jnp
push
dec
mov
loope
popf
xor
mov
imul
ret
clc
aad
stos
not
shl
int
call
adc
add
mov
adc
shl
mov
dec
cmc
retf
test
les
shl
sub
jne
and
jl
call
repz
sar
(bad)
fiadd
jo
nop
add
inc
(bad)
pop
jns
or
loop
jecxz
pushf
call
xor
call
push
mov
pop
call
out
mov
fisub
arpl
jbe
lds
fdiv
(bad)
fimul
call
sbb
push
pop
xlat
fwait
in
jne
push
sub
pop
das
xchg
fisubr
sbb
mov
sub
push
dec
mov
inc
mov
sub
push
fadd
cmp
or
push
sahf
and
aam
pop
mov
adc
stos
imul
xchg
add
sbb
jle
xor
lods
dec
call
(bad)
shrd
jl
pop
cmp
jno
jmp
push
push
fs
and
rol
lds
cmp
mov
cmp
arpl
sti
es
adc
call
out
stos
loopne
cmp
retf
es
lods
mov
sub
mov
dec
and
sbb
cs
mov
mov
imul
cli
pop
dec
dec
cli
movs
jne
pop
sahf
mov
ins
xor
pusha
mov
adc
call
xor
push
(bad)
and
adc
nop
mov
mov
es
or
lds
fdiv
pop
in
push
jbe
inc
div
cmps
lock
test
pop
mov
std
aam
or
push
shl
sbb
mov
(bad)
mov
aaa
and
jb
(bad)
div
xchg
fsub
pop
lea
icebp
jp
fcmovnbe
in
adc
mov
adc
(bad)
mov
adc
call
leave
ret
sbb
dec
mov
mov
imul
add
gs
jge
loop
jle
xchg
out
push
mov
sbb
mov
xchg
add
and
push
xchg
or
pop
loopne
fidivr
xchg
push
(bad)
inc
and
adc
or
push
mov
retf
cs
cs
sbb
cmp
ror
add
adc
pop
inc
and
sar
js
cmps
jb
clc
mov
(bad)
popf
(bad)
outs
xchg
inc
mov
and
mov
pop
(bad)
mov
fistp
push
mov
stc
loopne
push
shl
ret
xchg
aas
xor
mov
ins
adc
dec
setns
jno
imul
add
xor
jle
and
jno
(bad)
dec
popa
or
ins
test
ins
push
scas
push
or
adc
push
adc
inc
dec
mov
inc
add
mov
stc
daa
cmp
jmp
cmp
fist
xor
jle
(bad)
(bad)
loopne
sbb
inc
hlt
or
retf
mov
stc
push
movs
mov
cmp
pop
popa
cld
or
jl
push
dec
out
out
adc
ret
aaa
sti
mov
test
fimul
or
cmps
jl
or
sbb
scas
(bad)
das
pop
and
and
(bad)
mov
pop
or
mov
sti
sbb
(bad)
jmp
or
push
mov
mov
cmps
cmp
int3
jmp
mov
test
imul
cmps
imul
fdiv
hlt
lods
cmc
and
fidiv
xchg
icebp
add
mov
stos
jecxz
stos
mov
mov
adc
call
inc
or
in
add
cmp
lds
outs
dec
aas
push
jl
cdq
repnz
(bad)
repz
add
adc
jb
push
mov
lock
or
xchg
jnp
popa
idiv
xor
xor
cs
int
int
gs
data16
test
mov
push
fldenv
lea
xchg
mov
retf
out
dec
push
xchg
in
xor
and
enter
push
push
movs
rol
xor
popa
lahf
popa
or
aad
call
cdq
addr16
mov
lea
mov
xchg
jmp
sub
ret
adc
into
jnp
xchg
cmps
(bad)
jno
inc
inc
pop
iret
out
lahf
sbb
cmp
mov
mov
fld1
sbb
inc
push
fnsave
pop
and
jmp
mov
xor
and
mov
push
xchg
stos
or
xor
sub
bound
fs
adc
rep
mov
dec
mov
mov
iret
push
(bad)
loopne
sar
sub
fld
jmp
or
test
cs
or
repnz
or
adc
test
xor
adc
gs
dec
jns
int3
xor
inc
(bad)
sbb
mov
(bad)
in
adc
inc
and
jb
rol
jmp
jae
nop
aam
mov
fwait
pushf
rcl
and
mov
fbld
outs
test
xchg
mov
icebp
pop
pushf
pop
mov
adc
stos
sbb
call
xchg
lahf
jo
popf
mov
xchg
lds
out
mov
ds
jnp
jle
mov
mov
or
mov
sub
mov
fistp
xchg
push
aam
mov
xchg
pop
fisubr
enter
and
pop
push
ss
mov
pop
in
test
inc
in
or
test
jle
shl
imul
leave
push
adc
push
cli
or
jb
push
jae
addr16
fmul
push
push
adc
sbb
out
or
imul
imul
mov
sbb
(bad)
jbe
out
loope
cdq
dec
adc
pop
mov
lea
cmp
(bad)
sub
inc
pop
(bad)
lock
inc
popf
xchg
(bad)
and
pusha
sbb
icebp
mov
mov
inc
mov
push
jmp
cld
ror
mov
lock
js
movaps
ins
cmp
xor
sub
mov
jg
jge
jl
jg
inc
jae
or
dec
mov
add
iret
inc
repnz
inc
mov
push
rcr
add
and
repnz
mov
pusha
push
mov
mov
fcom
jno
mov
mov
retf
test
in
rol
in
(bad)
test
push
mov
pop
std
sbb
js
dec
lds
jmp
xchg
pop
out
mov
stos
xchg
jne
cld
pop
xor
inc
ss
int3
shl
sub
xor
jns
lock
jmp
sbb
adc
ins
mov
inc
add
in
mov
add
in
adc
and
add
call
ss
arpl
pop
pop
jnp
or
jl
mov
push
hlt
nop
pop
push
stos
cmp
(bad)
into
mov
ss
push
mov
iret
inc
imul
push
mov
add
loope
out
mov
xor
jnp
bound
pop
aad
xor
stos
inc
jnp
inc
pop
cmp
(bad)
push
call
jp
neg
mov
pop
in
sbb
aaa
outs
call
enter
inc
mov
(bad)
xchg
fiadd
cmp
xchg
xor
frstor
mov
adc
mov
loopne
push
outs
inc
shl
push
pop
out
or
movs
test
test
test
pop
push
mov
loop
ds
pop
sti
jecxz
cmp
cld
(bad)
cmp
push
retf
pop
(bad)
cli
rcl
lock
in
popa
push
movs
mov
in
xor
jb
xchg
jecxz
les
pop
ds
lods
sbb
mov
xlat
fdiv
dec
pop
and
pop
mov
fstp
xchg
mov
outs
adc
mov
popf
adc
cmc
cmp
sub
mov
sub
or
jno
push
dec
jno
xchg
(bad)
adc
pop
pop
mov
fnstenv
add
sti
xchg
call
and
add
fild
pop
mov
fsubr
retf
add
jmp
mov
out
xor
arpl
push
lods
imul
dec
mov
in
scas
mov
ror
ins
add
addr16
jmp
jne
inc
(bad)
ficomp
dec
jmp
imul
xor
dec
rcr
clc
add
icebp
and
push
jno
push
mov
jmp
out
popa
clc
addr16
adc
aad
mov
jmp
movs
popf
cli
sub
adc
sbb
in
mov
jmp
jge
loopne
aas
dec
pop
loop
jp
cmp
(bad)
mov
mov
jmp
cmc
cmp
icebp
aaa
push
mov
cmps
cmp
icebp
ds
imul
inc
fidivr
fst
fs
sub
dec
(bad)
cli
ins
inc
div
(bad)
sbb
jne
comiss
pop
loope
mov
or
dec
imul
fld
cmp
mov
mov
pop
mov
mov
pop
ds
jbe
loop
mov
fdivrp
sub
(bad)
or
out
xchg
out
xor
mov
inc
hlt
adc
sbb
jbe
inc
outs
popa
outs
jns
mov
jno
in
xchg
pop
rcr
jle
mov
cmp
xlat
adc
jg
mov
mov
lahf
xchg
push
aad
pop
xchg
jno
div
mov
lods
les
gs
or
inc
stos
adc
lds
test
cmp
xlat
sub
leave
jae
mov
in
imul
push
aam
out
and
aam
jg
ret
mov
xor
mov
or
mul
mov
dec
and
and
jne
repnz
jbe
in
shl
mov
retf
mov
cmps
add
dec
inc
movs
dec
push
out
dec
adc
out
ja
ret
xchg
hlt
outs
imul
sbb
cmp
inc
pop
mov
scas
(bad)
sbb
retf
mov
or
cmp
loope
retw
push
and
push
push
adc
mov
fstp
sbb
fnsave
pop
xor
mov
cmps
jne
mov
mov
std
cmp
xchg
ret
shr
and
xchg
mov
das
(bad)
xor
imul
imul
add
(bad)
(bad)
push
sub
sbb
xchg
pushf
dec
call
data16
fld
dec
xchg
sbb
inc
mov
dec
adc
cmps
or
loope
test
xchg
fld
mov
lahf
mov
loope
jmp
stos
dec
inc
adc
call
test
or
push
imul
js
or
pushw
scas
(bad)
cmp
sub
es
sub
lahf
dec
and
pop
and
movs
mov
mov
xchg
imul
add
mul
or
pop
imul
sub
(bad)
add
xchg
loope
xchg
(bad)
push
sbb
js
jo
push
sbb
jmp
xlat
jl
adc
fs
in
xchg
popa
bound
bound
fild
cli
je
mov
mov
mov
sti
push
mov
repnz
mov
xchg
push
mov
sbb
mov
pop
mov
pop
jnp
(bad)
add
clc
mov
fsub
(bad)
add
(bad)
movs
das
inc
jmp
das
lods
xchg
lea
push
xor
shl
push
xor
mov
ss
jo
pop
iret
in
(bad)
mov
dec
inc
in
fnstenv
mov
ins
dec
mov
cmps
mov
pushf
aaa
mov
push
out
out
ss
sub
mov
movs
mov
pop
fcom
cli
outs
lods
adc
in
cmp
push
loope
cmp
sub
ret
and
mov
aam
mov
mov
inc
fiadd
xchg
xor
and
leave
popf
je
(bad)
sti
cmp
or
xchg
sbb
(bad)
mov
pusha
inc
xchg
cmp
outs
lahf
fstp
stos
mov
xor
(bad)
cmps
dec
addr16
jge
mov
repnz
push
lock
xchg
mov
cdq
das
dec
cmp
pop
popf
lods
xchg
or
fimul
mov
mov
jle
fucomip
jne
test
jmp
pop
push
jecxz
nop
cmp
xchg
jle
mov
or
xor
cmovl
pop
sbb
out
clc
inc
xor
cli
inc
in
pop
xor
lods
cdq
(bad)
shr
aas
cdq
add
add
das
cmp
mov
pusha
inc
ins
push
(bad)
mov
mov
sub
jb
xor
fst
xchg
cmp
sbb
xchg
or
bound
jle
sub
daa
mov
jne
stos
arpl
cli
aaa
dec
pop
add
mov
jle
lds
pop
stos
push
sbb
stc
adc
aad
sti
jp
jecxz
addr16
jmp
xchg
sbb
sub
fiadd
inc
or
sbb
in
outs
je
push
mov
jmp
retf
mov
mov
cmp
mov
iret
jbe
ja
loopne
test
add
pop
fucomp
cwde
xchg
xor
les
(bad)
enter
and
and
scas
es
shl
add
cmp
mov
inc
mov
jb
or
inc
loope
cdq
pusha
xchg
xchg
mov
sub
cwde
add
fisubr
call
pop
adc
ds
lock
fild
and
fisub
xchg
sbb
imul
cmp
sbb
mov
xchg
adc
dec
and
add
gs
ficomp
nop
xchg
jae
push
xchg
jne
pop
jb
and
push
jo
pop
cdq
js
fnstenv
shr
(bad)
xchg
or
rcr
pop
xlat
xlat
daa
pop
rcr
int
jns
jae
out
jecxz
dec
(bad)
xchg
pop
in
mov
dec
mov
lods
scas
ins
jg
(bad)
adc
sahf
inc
ins
clc
out
shl
and
movs
xchg
or
(bad)
dec
aad
rep
xor
push
or
ins
push
xor
pop
dec
sub
jle
std
test
xlat
movs
cmp
xlat
ret
retf
ss
mov
mov
adc
or
(bad)
mov
mov
es
xchg
adc
mov
push
dec
(bad)
iret
push
inc
inc
pop
and
cmps
add
mov
xchg
inc
xor
or
mov
scas
icebp
push
xor
pop
push
icebp
jae
enter
mov
push
int
dec
pop
fld
(bad)
lahf
das
jp
sub
jno
leave
push
push
fldcw
or
adc
add
sbb
into
pop
into
sub
test
mov
sub
sti
push
pop
push
inc
mov
addr16
and
shl
leave
and
loop
xor
xor
cmp
lods
push
pop
sbb
(bad)
dec
repz
mov
jb
fst
mov
inc
push
push
jmp
movs
add
in
(bad)
sbb
dec
and
sbb
loope
lds
ficom
ret
and
js
repnz
fwait
cmps
push
xor
js
fimul
xchg
pop
daa
sahf
movs
hlt
sub
daa
(bad)
out
mul
mov
outs
mov
jmp
movs
adc
add
lods
dec
imul
aam
mov
fsubr
ja
dec
sub
in
cmp
mov
les
mov
scas
xor
mov
sbb
pop
stc
sub
jmp
mov
shr
clc
stos
pop
daa
mov
fstp
(bad)
cmps
cmps
sti
sbb
ror
imul
pop
jbe
add
mov
mov
in
ds
mov
ins
rcr
cmps
repnz
mov
out
push
xchg
xchg
inc
and
adc
cmp
arpl
mov
or
loopne
js
push
aam
outs
xlat
mov
fmul
mov
in
sub
sbb
dec
push
inc
xlat
mov
jg
das
cmc
sbb
dec
ja
int3
xchg
push
inc
nop
dec
pop
xchg
imul
jne
sub
ror
aam
ins
loop
stos
retf
adc
repnz
jecxz
into
push
pushf
das
cwde
ds
add
ins
imul
movs
push
push
test
ins
dec
add
and
ds
cmp
das
call
pop
bound
or
sbb
inc
xchg
push
and
lods
outs
aas
ret
jns
in
jnp
xchg
mov
out
stos
test
push
fisubr
jecxz
sbb
mov
cmps
sbb
imul
jmp
and
xchg
ds
out
pushw
dec
icebp
cld
scas
lods
add
sbb
into
int3
cmp
or
enter
and
sahf
jp
or
(bad)
fsubr
push
add
push
fiadd
hlt
daa
outs
jmp
mov
push
in
cmp
or
pop
int
push
xchg
and
cmovnp
ins
out
adc
nop
pop
bound
ss
into
lds
sbb
iret
pop
in
test
out
aas
sbb
push
and
gs
jo
in
les
jno
jmp
in
fdivr
xor
dec
xor
ins
adc
mov
test
aaa
inc
or
or
cmp
lock
mov
loop
aam
test
int3
sbb
stos
daa
add
leave
dec
adc
(bad)
cwde
sub
jns
dec
sar
cwde
into
nop
cmp
xor
lds
cmp
lock
int3
sahf
mov
dec
std
pushf
dec
or
mov
jge
adc
mov
lahf
imul
inc
inc
mov
mov
imul
adc
test
mov
push
mov
adc
and
pop
cmp
jg
mov
pop
push
in
add
sub
sub
mov
lods
jp
jne
add
xchg
mov
jge
jae
iret
call
fsub
sub
cmps
loopne
sbb
fst
jbe
test
out
(bad)
frstor
jmp
and
stos
and
add
neg
cmp
mul
ins
mov
xchg
and
mov
cmc
xor
loop
mov
loope
cmps
aad
adc
cmc
jbe
movs
test
pushf
pop
sub
jge
or
ret
sub
cmps
bound
cmps
push
nop
mov
scas
leave
ffree
xchg
add
sub
das
out
add
lods
sub
mov
pop
inc
xor
mov
cmps
fld
push
and
push
push
xchg
or
push
or
pop
enter
ja
adc
add
sub
shl
push
imul
enter
sti
hlt
cmp
sub
jmp
jmp
cdq
dec
jb
out
je
jnp
sub
sub
mov
add
and
dec
ficomp
pop
push
aas
inc
in
mov
jle
mov
lahf
jns
sub
(bad)
adc
xor
jno
jge
popf
push
outs
scas
adc
xchg
jnp
cli
sub
xchg
addr16
pop
mov
in
push
(bad)
sub
ja
cli
test
pusha
or
cmp
jns
push
repz
xor
xor
loope
jnp
mov
adc
xchg
add
fs
test
mov
jge
add
mov
inc
hlt
xchg
sar
push
test
mov
inc
inc
add
xchg
push
hlt
jp
xchg
pop
ret
ret
cmp
mov
cli
imul
aam
mov
movs
sub
dec
pop
mov
jg
sub
xor
(bad)
mov
ss
clc
dec
inc
sbb
ret
push
jge
std
add
or
loope
scas
adc
and
or
out
ds
cmp
push
xor
mov
add
jmp
mov
cmp
jle
cmps
pop
dec
adc
mov
jae
out
test
sub
iret
pop
xor
xor
cmp
aas
mov
adc
nop
out
cmp
mov
loope
add
sti
mov
out
xchg
mov
call
push
xor
movs
xor
inc
cwde
xor
cld
push
sub
sub
mov
xor
cld
leave
jle
lahf
jge
jg
rcr
das
jmp
(bad)
bound
imul
inc
inc
test
push
and
nop
push
mov
jb
xor
add
dec
sbb
jae
(bad)
shl
jg
pushw
(bad)
dec
cli
sbb
lock
sbb
movs
cmp
xchg
nop
inc
adc
pop
push
and
lods
ja
mov
jge
mov
jbe
adc
nop
test
ror
add
out
das
push
jno
and
pop
(bad)
lahf
ret
fmul
(bad)
test
imul
loope
sar
frstor
cmp
add
adc
hlt
xchg
cs
sbb
sbb
xchg
(bad)
loop
jle
jae
xor
mov
inc
adc
add
ror
movs
cdq
imul
repnz
and
inc
out
clc
ins
mov
ret
shl
mov
push
mov
pop
jecxz
movs
or
mov
xchg
data16
or
push
mov
sub
dec
pop
iret
xchg
in
mov
test
and
sub
mov
in
stos
nop
mov
xchg
or
popf
push
add
xchg
imul
call
cmp
adc
lahf
push
pop
and
xchg
movs
out
mov
pop
cmp
rol
aas
loope
dec
in
fdivr
jge
or
and
pop
aam
out
imul
cmps
inc
frstor
es
clc
mov
push
pop
cwde
pop
cli
fmulp
pop
push
cmps
or
mov
and
jge
into
stos
sar
addr16
aaa
mov
pusha
or
aas
(bad)
or
push
xor
pop
mov
and
inc
idiv
aaa
dec
ret
js
ss
fs
std
or
movs
clc
(bad)
pop
int
sti
daa
push
sbb
nop
or
inc
push
push
bound
mov
js
cmp
dec
inc
jo
sub
sub
pop
or
mov
add
and
shr
push
imul
cmp
add
mov
frndint
dec
rcl
sbb
mov
push
ja
jns
stc
addr16
ins
inc
sbb
bound
data16
lea
and
sar
popf
std
sbb
mov
inc
add
push
or
fdiv
sbb
inc
jmp
fdiv
iret
js
xor
in
das
cmp
(bad)
sub
pop
add
mov
mov
jne
jne
xor
ins
push
push
popa
and
arpl
fistp
xlat
push
stc
cs
das
loop
nop
leave
idiv
gs
sub
add
popa
stc
movs
stos
push
setno
mov
push
mov
sub
add
xchg
pop
out
adc
xor
pushf
mov
outs
imul
pop
mov
pop
test
(bad)
xchg
cli
push
push
cmp
mov
aam
scas
or
lods
mov
popa
les
mov
push
jl
sub
call
mov
(bad)
rep
cs
push
sbb
adc
loope
add
sub
test
popf
and
mov
fistp
add
sbb
or
pop
xchg
cmc
cmp
in
stos
push
or
pop
fisubr
sbb
jb
ss
out
cmp
js
mov
jnp
sub
mov
adc
dec
pop
and
jnp
pop
rcr
in
stc
imul
sti
add
xchg
lods
pop
sbb
push
clc
aam
and
push
sub
in
loope
(bad)
ds
mov
pop
xchg
scas
pusha
movs
std
pop
jo
xor
push
xchg
bnd
iret
mov
aad
je
imul
jb
in
push
sbb
push
add
sub
dec
dec
mov
cmp
rol
sar
adc
add
movs
les
dec
push
and
sub
out
mov
out
add
cmps
retf
inc
mov
lahf
and
push
movs
out
pop
retf
pop
push
rcpps
movs
add
imul
fs
cld
push
out
sti
neg
outs
dec
sub
fs
inc
out
sbb
cmp
movdq2q
add
call
repz
mov
jae
imul
push
xor
mov
scas
(bad)
xor
adc
fcom
aam
push
jl
adc
mov
and
jnp
les
push
add
das
in
mov
sub
sbb
aam
das
test
test
cmp
mov
fist
or
icebp
xor
(bad)
out
xchg
inc
xchg
pop
adc
(bad)
stc
les
in
jmp
push
or
aam
mov
push
xchg
nop
push
out
in
leave
out
push
push
or
fs
inc
cmc
lods
int3
jae
pop
mov
bswap
mov
jnp
dec
inc
arpl
or
icebp
loope
stc
and
ja
mov
les
popa
mov
out
jg
lahf
adc
inc
and
cmp
and
aas
fist
xchg
add
push
jo
imul
jmp
xor
sbb
and
imul
xchg
pop
xor
jo
xchg
and
push
es
stos
aas
cmp
and
mov
pop
out
dec
test
pop
imul
inc
cmp
mov
mov
jbe
call
mov
jo
aad
dec
push
sbb
cli
mov
or
inc
add
call
lahf
mov
adc
out
jmp
sub
lods
sahf
cs
cld
cmp
imul
mov
pop
jmp
fs
pop
js
mov
and
fdiv
xor
pop
int3
(bad)
cli
jae
or
leave
or
inc
add
mov
dec
mov
mov
jle
mov
inc
xchg
push
or
lea
es
frstor
enter
shl
daa
sub
mov
ja
retf
jg
retf
adc
and
jl
xchg
es
dec
aam
pop
fdiv
ins
xchg
jae
inc
xchg
pop
and
mov
pushf
int
int3
push
cwde
mov
mov
iret
xchg
pushf
sbb
ret
dec
cmp
scas
cld
test
dec
ret
(bad)
and
cmps
dec
lea
dec
das
pop
scas
push
shl
mov
inc
retf
cmp
cmc
add
mov
stos
repnz
mov
fild
ss
shl
push
sbb
sbb
mov
jo
mov
dec
stos
pop
(bad)
imul
sbb
dec
sub
mov
test
hlt
lock
mov
add
cld
and
mov
add
pop
mov
jl
dec
cmp
xchg
push
cmp
test
push
xchg
xor
push
jo
add
jmp
xor
mul
cs
sub
mov
sbb
mov
mov
pop
xor
loope
lahf
adc
test
push
pusha
aaa
xor
aad
sbb
popa
inc
jmp
stos
pop
jno
lods
and
rcl
or
add
pusha
mov
push
es
lods
sub
sub
movs
jl
sti
repz
add
jno
cmp
nop
ror
fcmovnb
pop
add
ins
stc
sbb
cmp
je
xchg
pop
cs
xchg
aaa
das
daa
loopne
push
push
jae
imul
mov
ja
aad
loopne
je
(bad)
mov
dec
adc
mov
mov
sub
lods
jmp
cld
rcr
sbb
(bad)
into
mov
(bad)
adc
and
icebp
cli
inc
inc
daa
call
and
dec
jl
fwait
jno
repz
ret
cdq
cmps
jg
iret
lea
cli
ins
jno
hlt
sub
jmp
outs
mov
mov
mov
(bad)
loope
jne
pusha
inc
outs
out
cmc
(bad)
retf
call
pop
fist
ret
lods
inc
xor
push
mov
dec
lods
shl
push
or
mov
pop
movs
js
push
outs
cmp
and
adc
adc
push
mov
jno
pop
test
mov
test
(bad)
jbe
jmp
dec
repz
movs
loop
outs
adc
scas
rcl
add
mov
and
inc
cmp
mov
ss
mov
cdq
inc
inc
scas
out
outs
add
mov
cmp
xor
not
jne
fwait
push
ret
movs
into
in
addr16
xor
fisubr
inc
lds
xchg
mov
cli
jne
sti
imul
scas
shl
push
out
std
inc
jp
(bad)
ror
test
dec
pop
sbb
sub
push
push
ficom
mov
and
cld
(bad)
pop
sub
sti
shr
icebp
dec
inc
pop
outs
call
rol
shl
pusha
fisttp
enter
cmp
das
inc
xlat
fld
pop
arpl
in
push
xchg
fiadd
dec
jmp
sbb
jle
push
jne
pop
pushf
xor
mov
dec
hlt
xchg
push
mov
mov
mov
fsub
xchg
sub
bound
in
leave
add
aam
cmp
mov
mov
and
mov
lock
push
mov
and
and
popa
xchg
rcr
std
adc
sub
inc
les
pusha
arpl
xor
pop
push
cmp
es
loop
jle
adc
pushf
nop
icebp
and
pop
xor
mov
lahf
test
pop
add
test
inc
and
scas
inc
ins
pop
(bad)
cmp
inc
mov
stos
(bad)
pop
mov
and
cmps
ret
sub
mov
jnp
sub
jnp
pop
fistp
scas
cmp
movs
push
mov
pop
and
or
jb
add
mov
pop
out
clc
das
push
rcl
mov
cmps
pop
imul
sub
inc
bound
mov
jb
loop
jmp
movs
pop
inc
adc
pop
jge
sbb
outs
add
outs
dec
inc
mov
ss
and
lock
cwde
(bad)
into
cmp
es
fbstp
ds
das
mov
in
fdiv
test
rcl
dec
sub
call
xor
aas
push
and
jmp
pushf
fsubr
xor
orps
inc
cmp
or
into
add
outs
clc
jae
add
loop
pop
push
fwait
(bad)
or
xor
dec
sub
(bad)
or
mov
sub
hlt
xchg
inc
sar
jb
mov
(bad)
push
call
repnz
hlt
xchg
jno
xchg
jmp
call
shl
cwde
rcl
lahf
rol
and
pop
pop
(bad)
leave
dec
fild
jle
cwde
dec
into
mov
add
fld
sub
(bad)
sub
mov
inc
cwde
mov
cmc
cmp
xchg
cld
push
inc
pop
pop
lock
jne
inc
sbb
iret
mov
(bad)
loope
xor
mov
cmc
adc
shl
(bad)
lods
jle
mov
ret
mov
add
cmp
push
dec
and
int
enter
adc
sbb
cli
cmc
add
dec
xchg
pop
stc
retf
repz
and
push
inc
ficomp
in
inc
pop
nop
adc
xchg
sub
push
icebp
mov
fld
ret
add
pop
add
loope
mov
out
inc
(bad)
int3
sbb
xchg
outs
or
retf
push
inc
xor
(bad)
mov
sub
xchg
retf
sub
sub
add
cli
clc
movs
push
into
inc
pop
ins
mov
mov
cmp
adc
sar
rcr
lea
int
xchg
jnp
lods
adc
lock
clc
and
sbb
mov
pusha
sub
push
jge
rol
test
repz
add
aas
movs
shl
push
xor
push
jns
dec
dec
push
jp
mov
fwait
pop
lea
mov
iret
xchg
jbe
cdq
lods
xor
cli
jo
sahf
inc
push
(bad)
jo
mov
sbb
test
ds
xor
aas
in
push
cmp
daa
shrd
xchg
mov
pop
sahf
push
pop
inc
cli
or
dec
cmp
rcr
out
dec
out
ins
pop
mov
and
mov
pop
jmp
adc
pop
or
call
out
xor
pop
or
gs
pop
sar
xor
add
xor
and
or
adc
mov
xchg
mov
sub
loop
push
xchg
jne
inc
enter
int
rol
inc
movs
inc
aad
jg
rcl
out
outs
adc
es
push
shl
dec
in
inc
test
push
out
mov
rol
fst
mov
sub
push
mov
scas
sar
jp
vcvtsi2ss
div
jbe
aaa
pop
adc
and
arpl
xchg
mov
mov
repz
dec
xchg
push
imul
imul
and
push
mov
lods
pop
dec
xor
mov
pushf
lods
push
fisub
jecxz
pop
cmps
dec
call
pop
jne
push
and
retf
mov
outs
cmps
push
mov
xor
add
mov
mov
mov
test
mov
and
pop
or
xor
loope
cmp
repnz
sbb
adc
loop
add
movs
xor
xor
add
cli
jae
comiss
adc
mov
fistp
mov
push
leave
cmp
hlt
mov
ror
jge
dec
add
xor
pop
sbb
call
ja
in
stos
or
scas
cmp
add
into
adc
inc
or
addr16
test
retf
mov
(bad)
sahf
mov
xor
das
xor
sbb
inc
rcl
xor
dec
in
test
cmp
sbb
mov
sbb
sbb
add
mov
repnz
xor
std
popf
xor
cmp
xor
mov
(bad)
push
leave
push
dec
repnz
xor
pop
fsubr
or
cld
das
not
push
out
lahf
xor
fld
cs
sub
adc
into
sbb
daa
outs
les
jno
aas
inc
dec
dec
cwde
sub
je
xor
cmp
das
cmps
pop
sbb
loopne
iret
cwde
sar
rcl
std
mov
pop
dec
sbb
cmp
test
int3
jo
cmp
das
ins
ds
xchg
push
clc
rol
dec
movs
jl
movs
sub
add
leave
cmc
jg
push
out
cmps
addr16
test
push
sbb
es
push
(bad)
xor
cmps
mov
xor
inc
mov
pop
sbb
sub
push
shl
or
xor
pop
in
add
(bad)
test
cmps
add
mov
pop
nop
mov
adc
ja
jecxz
sub
xlat
mov
clc
add
dec
scas
cmp
mov
add
mov
or
jl
mov
mov
arpl
out
inc
add
xchg
or
mov
push
jno
in
mov
or
rcl
fcmove
scas
or
jnp
cmp
jecxz
xchg
ror
nop
daa
jge
and
int
in
or
icebp
cmp
ficomp
mov
fidivr
(bad)
ins
jmp
sbb
or
call
or
(bad)
ins
push
outs
in
fdivrp
outs
sub
inc
in
xchg
inc
icebp
inc
loope
sbb
sahf
ins
test
add
mov
pop
adc
jge
mov
xor
or
rcr
add
or
push
and
test
adc
inc
leave
fdiv
aam
mov
adc
push
sub
push
mov
xor
lds
pextrw
inc
out
pop
movups
mov
pop
cdq
dec
mov
js
aaa
ret
es
jnp
mov
pop
pusha
nop
or
popf
cmp
std
xor
push
xchg
movs
mov
lods
sub
jb
inc
(bad)
call
out
add
mov
jbe
int3
mov
fidivr
jmp
outs
mov
xor
ja
jnp
iret
add
cs
(bad)
js
xor
inc
inc
int
jge
inc
jb
imul
mov
cmps
mov
mov
popf
mov
pop
mov
dec
jne
jno
xchg
movs
test
jae
lock
mov
jl
mov
jnp
xchg
push
mov
sbb
mov
ins
sbb
call
mov
xor
xor
leave
jmp
(bad)
xlat
inc
fdiv
js
sbb
pop
xor
rol
aas
lahf
ja
outs
inc
lea
test
and
jp
ins
sub
mov
sbb
dec
jmp
dec
jae
dec
in
mov
cs
and
or
int3
scas
bound
push
std
cmp
push
(bad)
loope
scas
stc
jne
xchg
push
cdq
mov
pop
lds
rcl
ret
adc
pop
in
out
add
test
sub
add
and
dec
jge
inc
jmp
add
xor
xlat
push
or
inc
lods
xchg
es
or
aam
sub
jnp
sbb
ds
cmp
mov
cmp
std
cmps
or
test
xlat
mov
push
(bad)
in
mov
push
fidivr
or
cmps
mov
and
pusha
inc
push
pop
adc
mov
jb
xchg
xlat
je
xor
adc
das
pop
clc
sahf
adc
mov
sub
inc
outs
popa
lds
fwait
ror
xor
idiv
js
jmp
inc
push
loop
(bad)
adc
xchg
ret
shl
sub
es
and
(bad)
sbb
imul
das
out
out
ret
or
or
dec
adc
pop
xchg
dec
and
mov
rcl
fwait
xchg
xor
(bad)
test
jns
jne
ret
cmp
cwde
add
sub
into
jno
adc
test
pop
cmp
gs
cli
ins
mov
mov
ficom
fnop
jecxz
iret
mov
je
pop
cmps
dec
mov
jb
mov
add
push
outs
sbb
jmp
hlt
sbb
popf
les
ds
xchg
repz
je
push
mov
cmc
sub
enter
ret
rcl
and
ret
or
ins
and
loope
push
hlt
mov
jmp
sbb
jne
push
dec
inc
jnp
pop
cmp
sbb
fisub
hlt
ins
test
add
(bad)
push
push
int3
jp
scas
jb
xchg
ja
addr16
mov
add
inc
leave
push
mov
mov
(bad)
cmc
xchg
out
mov
aaa
pop
stc
and
fstp
xchg
jmp
repz
cwde
push
sub
les
adc
xor
inc
adc
std
imul
jle
rcr
xchg
xchg
mov
push
leave
fmul
das
inc
hlt
fs
mov
cmp
(bad)
(bad)
xor
add
ret
pop
(bad)
out
jp
leave
stos
out
das
adc
sub
lea
xor
into
nop
movs
xor
sahf
je
jno
jmp
xchg
pop
adc
movs
dec
add
push
inc
xor
ret
and
xchg
aam
nop
xchg
mov
jo
cdq
cli
out
out
and
jge
jp
jp
mov
test
out
lds
shl
out
ja
adc
mov
aad
push
xchg
pop
fwait
int3
stos
test
outs
int
hlt
push
cmps
stos
and
mov
arpl
push
sbb
adc
mov
aas
xchg
retf
adc
lea
lds
ja
cmp
inc
loop
sub
fistp
xchg
test
dec
clc
fwait
sub
out
inc
add
fwait
adc
dec
ds
jbe
sti
test
jle
call
dec
xchg
repnz
sbb
pop
push
stos
mov
adc
sbb
and
out
adc
xchg
call
fstp
mov
xor
mov
clc
mov
jg
dec
imul
test
cmp
lock
fwait
jae
jecxz
mov
loopne
nop
in
aad
add
popa
or
test
sub
pop
retf
and
xchg
add
jle
pop
xor
out
sub
xchg
sub
shl
es
dec
xor
frstor
mov
inc
add
mov
(bad)
movs
sub
(bad)
or
in
xor
xchg
inc
aam
cmps
hlt
loop
(bad)
daa
pop
mov
cld
xor
loopne
jl
xchg
xor
mov
or
fcom
sbb
mov
jns
pop
jle
inc
push
je
mov
inc
ror
pop
xchg
mov
dec
mov
in
ja
xor
daa
enter
mov
rcl
(bad)
xor
in
push
jae
push
mov
mov
jnp
dec
scas
jnp
pop
push
addr16
icebp
pop
clc
cmps
or
jmp
test
xchg
mov
add
in
sbb
std
add
out
and
es
test
mov
mov
add
test
add
aaa
dec
or
inc
cmovl
push
xchg
adc
sub
das
cmc
fisttp
jno
arpl
cmp
mov
(bad)
int3
add
in
dec
push
daa
or
sub
pop
inc
dec
dec
adc
mov
into
fst
jno
cld
mov
ss
popa
movs
(bad)
aaa
(bad)
pop
adc
dec
mov
mov
or
pop
retf
push
xchg
inc
cwde
aas
adc
rcl
mov
mov
xor
jg
loopne
xchg
sub
repnz
test
shl
stos
push
cmps
call
dec
xchg
pop
push
mov
call
bound
push
loop
(bad)
and
sbb
stos
pop
mov
loopne
imul
stc
sub
neg
dec
je
pop
rcr
or
push
sub
cli
dec
inc
mov
xchg
push
(bad)
das
stos
jb
call
imul
bound
out
(bad)
mov
pop
jp
add
cmp
pop
sbb
jno
jnp
push
(bad)
in
push
imul
pop
inc
mov
cmps
outs
lds
icebp
and
cmp
imul
int
clc
sti
call
imul
xor
retf
call
adc
fist
mov
sbb
sub
sbb
dec
sub
test
js
int3
jecxz
test
inc
pushf
out
mov
cmp
test
adc
pop
add
push
cmp
mov
or
outs
add
ret
mov
mov
addr16
loope
mov
pop
adc
jne
xchg
sub
xlat
sar
add
and
sti
ja
lea
enter
scas
scas
int3
xchg
es
in
pop
dec
cmp
adc
imul
enter
or
fs
jl
pop
fimul
mov
clc
or
popf
mov
jmp
adc
mov
dec
lahf
pop
scas
sbb
push
or
inc
mul
cld
and
inc
hlt
jns
inc
sar
mov
adc
and
sti
in
mov
push
cmp
mov
loop
and
inc
mov
inc
jge
mov
lds
mov
adc
xor
add
out
push
sub
jbe
cdq
scas
repnz
cmc
(bad)
xlat
dec
ss
xor
and
jne
(bad)
dec
pop
or
stc
inc
sbb
cmc
ds
adc
sahf
pop
pop
push
add
pop
repz
mov
ret
pop
push
pop
add
outs
call
xchg
fcomp
sub
addr16
jmp
jg
arpl
push
cmp
loop
cmps
dec
dec
jecxz
das
movs
mov
push
xor
pop
mov
cmp
loope
cmps
shr
jno
pop
cmps
sub
fmul
adc
xchg
pop
push
movs
clc
or
aas
add
and
jne
dec
test
lea
push
mov
jg
or
retf
ror
(bad)
sar
dec
in
mov
neg
xchg
xor
pop
into
xchg
call
sbb
jmp
xchg
dec
mov
cld
lds
imul
jl
inc
loop
and
fwait
mov
jge
outs
pop
cmp
xor
inc
pop
test
das
inc
sbb
sub
cs
mov
repnz
das
je
lods
push
mul
inc
lods
aas
jg
adc
lock
xchg
push
aad
fisubr
jae
adc
scas
adc
or
icebp
int3
nop
xchg
inc
rcr
add
push
mov
mov
adc
test
mov
lods
mov
xchg
enter
cld
dec
fisubr
je
mov
push
popf
jge
(bad)
lea
sti
dec
mov
mov
imul
nop
dec
inc
push
dec
aad
or
int3
into
test
adc
hlt
jbe
leave
mov
(bad)
jecxz
mov
cmp
out
mov
and
lds
xor
push
aad
and
mov
inc
jb
mov
push
test
stos
in
jb
sahf
clc
gs
out
aas
lock
jl
test
inc
and
inc
pop
mov
scas
fisttp
test
loope
lahf
adc
cmp
aas
out
test
cmps
and
mov
pop
add
xchg
shr
sar
sub
jmp
jne
or
xchg
xchg
(bad)
cmp
mov
sar
sbb
and
in
popa
cmp
jmp
xchg
push
inc
popa
pop
adc
dec
xor
add
ins
jnp
icebp
jg
shl
jnp
scas
stc
adc
xor
mov
inc
test
fadd
jo
pop
ins
push
arpl
nop
xchg
lock
mov
xchg
hlt
jecxz
out
and
and
mov
pop
ja
xchg
pop
xor
push
mov
je
bound
stc
xchg
into
shl
rol
mov
imul
jl
daa
lea
lods
ret
(bad)
push
or
or
jg
ins
and
push
xchg
(bad)
pop
adc
and
out
jl
mov
pop
push
xor
movs
stc
(bad)
in
aas
push
inc
xchg
sub
push
pop
pop
xor
cmp
or
iret
retf
popf
lock
xlat
outs
jno
mov
test
xchg
adc
call
add
add
aad
mov
ds
xchg
ror
mov
adc
dec
bound
xor
push
sub
fbstp
mov
or
(bad)
and
and
das
mov
les
pop
fs
neg
inc
gs
rcl
ss
dec
popa
jnp
or
ret
iret
aam
cdq
dec
jno
call
mov
jp
mov
sbb
jbe
sub
mov
ret
(bad)
sti
push
sbb
mov
lahf
xor
xor
adc
pop
dec
loope
inc
add
jns
repz
cmp
das
jg
pusha
push
and
ins
cld
lock
rcl
dec
push
stc
movs
add
fs
sub
adc
mov
movs
pop
pop
dec
retf
aad
cmp
mov
dec
nop
imul
nop
je
jle
sub
add
mov
pop
and
inc
cmps
fwait
xor
and
sbb
jecxz
jb
lock
jge
xor
jl
imul
pop
dec
fmulp
aad
or
call
and
add
mov
and
cmps
cmp
mov
inc
shl
and
dec
pop
hlt
cmp
sub
sbb
div
dec
push
pushw
xchg
shl
inc
xchg
gs
adc
jmp
xor
mov
pop
cmp
clc
fstp
adc
sub
(bad)
loop
xchg
sub
iret
sti
fstp
add
push
xlat
fnsave
ins
inc
scas
mov
in
mov
fucomip
fnstenv
in
xor
adc
jno
les
lea
mov
retf
adc
cmps
dec
fistp
sbb
push
mov
jl
xchg
ins
fsubr
sbb
and
push
imul
call
test
add
stc
idiv
sbb
(bad)
dec
iret
lds
cld
mov
(bad)
push
xlat
ins
ins
jno
mov
or
cmp
dec
xchg
and
cmc
jne
dec
jns
add
nop
push
jmp
sbb
arpl
cmp
je
adc
out
sbb
jmp
rcl
ret
aaa
add
ja
aad
mov
sub
pop
sbb
mov
dec
cmc
push
lock
mov
xor
push
loope
pop
inc
jb
push
mov
jle
(bad)
(bad)
aas
or
in
or
inc
sub
lea
mov
imul
push
cmp
sub
cwde
(bad)
jns
sbb
outs
mov
inc
mov
push
mov
retf
push
xor
add
mov
push
popa
pop
add
mov
inc
imul
push
ror
std
lea
aas
pop
movs
cmp
dec
aaa
xchg
movzx
lea
dec
mov
mov
cld
mov
jae
mov
aam
es
aad
xchg
mov
test
dec
inc
xchg
mov
inc
fwait
sub
in
sbb
ret
pop
jns
pop
sub
out
stos
mov
sbb
and
cs
fwait
in
dec
ror
and
jecxz
xor
sbb
scas
sbb
jne
mov
fcomp
jp
addr16
arpl
lods
add
fmul
pusha
sub
sub
jno
push
stos
aad
call
xor
icebp
fnstsw
test
xor
pop
or
cmp
fmul
cmove
jg
imul
aaa
jae
cwde
mov
iret
lods
cld
push
dec
ror
ss
retf
(bad)
cld
adc
mov
loop
aaa
mov
push
push
or
shl
sbb
dec
movs
xchg
jp
xchg
push
cld
jnp
loopne
leave
sbb
aaa
pop
add
xchg
pop
push
mov
pop
sti
retf
or
mov
add
std
stos
out
fmul
add
std
pop
fwait
push
inc
adc
mov
(bad)
sti
out
add
inc
pop
cmp
in
iret
push
push
in
mov
adc
test
dec
out
inc
jbe
in
stos
iret
bound
sbb
dec
stc
popf
ret
in
aas
sub
sbb
pop
cmp
mov
fimul
cwde
mov
xchg
dec
imul
cdq
xchg
jmp
pop
pop
inc
xchg
sub
push
mov
cmps
pop
push
sbb
loop
or
mov
(bad)
in
fidivr
inc
repnz
addr16
jnp
bound
cld
shl
test
and
ja
jmp
je
test
add
mov
jb
fbstp
test
xchg
loopne
xchg
fs
out
or
mov
int3
and
mov
jb
arpl
or
ucomiss
cmp
inc
dec
and
popa
sbb
fwait
je
cmps
jne
sbb
push
dec
add
in
je
cmps
ins
jle
int3
adc
xchg
or
sub
push
mov
pusha
add
movs
fldenv
mov
pop
push
pusha
aaa
xor
dec
adc
sbb
imul
push
and
add
pop
or
scas
push
cs
test
test
cmps
sbb
out
pop
cmp
out
lds
pop
call
or
sub
movs
add
sbb
fiadd
mov
data16
cld
xchg
mov
je
sti
mov
rol
fcomp
adc
pop
rcl
inc
push
cdq
jne
add
(bad)
adc
dec
sbb
push
and
loope
mov
cmp
(bad)
stc
in
cmp
cmc
lds
ret
xor
movq
shl
mov
pop
call
cs
lods
or
les
nop
inc
xor
pop
jbe
cli
pushf
sub
fs
aad
pop
aas
add
test
mov
jne
add
test
mov
and
xor
pop
out
stos
hlt
das
jecxz
daa
pop
loop
xlat
push
es
(bad)
fdiv
jae
popf
sub
cmps
xor
test
mov
sbb
retf
leave
cs
imul
add
sub
bound
xchg
mov
out
clc
mov
mov
call
int
in
lods
mov
fadd
cld
outs
cld
nop
xor
or
jecxz
and
les
cli
sbb
(bad)
jmp
mov
jb
ss
inc
mov
lods
loope
in
scas
scas
jle
addr16
push
test
dec
dec
bound
push
mov
jle
sbb
xor
dec
xchg
js
sbb
add
push
sbb
xor
pop
push
dec
int
sti
pushf
push
adc
test
(bad)
icebp
dec
data16
sbb
xor
es
push
dec
dec
adc
xchg
shl
in
pop
stos
inc
lahf
xor
pop
jae
in
ins
clc
sub
add
in
sub
nop
loope
inc
inc
mov
cmp
xchg
xor
dec
das
leave
lods
dec
(bad)
cld
jmp
movs
sbb
adc
arpl
call
inc
xchg
sub
inc
imul
jle
pop
mov
xchg
data16
inc
bound
scas
stc
pop
inc
ret
inc
call
js
out
push
sub
inc
push
pop
out
inc
sbb
push
lahf
adc
js
stos
inc
jmp
pop
dec
xor
cmps
push
mov
xor
in
pop
nop
jmp
outs
fisttp
shl
inc
imul
ucomiss
pop
mov
lods
test
cdq
pop
pop
ret
mov
loopne
setbe
(bad)
pop
rcl
in
daa
mov
(bad)
push
push
push
pusha
retf
icebp
or
shl
add
dec
inc
sahf
lds
push
dec
jns
enter
scas
mov
mov
clc
inc
enter
sahf
stos
cdq
mov
pushf
hlt
mov
pop
mov
or
xor
(bad)
shr
adc
xor
adc
addr16
adc
jge
mov
ins
and
test
dec
das
xchg
idiv
out
inc
cvtdq2ps
fnstsw
sbb
arpl
jecxz
inc
or
(bad)
ret
call
dec
leave
adc
inc
jns
pop
aam
sub
mov
inc
inc
(bad)
mov
mov
stc
and
lock
ins
gs
mov
dec
add
ret
int3
or
call
cmp
in
jmp
cli
aas
repnz
jb
ins
bound
push
iret
cwde
sub
or
inc
cmp
arpl
pop
xor
sub
popa
in
inc
cmps
(bad)
xchg
loope
std
cmp
shl
rcl
cwde
push
loopne
int3
out
pop
cmps
enter
sub
stc
(bad)
mov
daa
push
pop
(bad)
adc
mov
mov
sahf
ror
push
arpl
icebp
or
and
mov
jbe
inc
and
inc
dec
jge
(bad)
les
dec
jmp
pop
int
lds
push
out
dec
push
cmps
push
sahf
lods
xor
jnp
sar
pushf
into
clc
fisttp
in
jae
mov
mov
mov
pushf
(bad)
cdq
fisttp
sub
fmul
pop
inc
cld
or
std
push
pop
rcr
mov
stos
rcl
ins
dec
add
js
add
inc
rcl
scas
mov
dec
fwait
hlt
iret
test
inc
mov
jno
dec
dec
arpl
add
pop
scas
jae
add
ja
mov
ret
pop
mov
test
call
(bad)
aam
test
push
(bad)
push
push
data16
xlat
xchg
xor
jl
sub
pop
sbb
push
xchg
mov
call
ret
sahf
test
xlat
aaa
or
scas
pop
ins
adc
xchg
jns
test
mov
cmc
pop
and
mov
sbb
and
bnd
in
out
lds
jnp
fadd
inc
sbb
or
lods
les
pop
mov
mov
mov
jbe
popa
in
movs
adc
ret
ret
dec
jnp
sbb
imul
addr16
cmc
enter
cmp
inc
pop
push
adc
mov
mov
xchg
dec
retf
jmp
enter
pop
sbb
dec
iret
push
sub
and
pop
inc
inc
in
fisubr
jl
inc
sbb
outs
and
dec
mov
pop
or
mov
xchg
and
call
jmp
xchg
rcl
xor
bound
mov
mov
arpl
fnstenv
mov
xchg
mov
and
mov
inc
xchg
or
aaa
cmp
sbb
movs
xchg
push
fbld
popf
and
jp
sbb
xchg
xchg
or
out
retf
repnz
ins
push
mov
cmp
(bad)
rcr
pmuludq
add
call
idiv
loop
dec
lea
aas
scas
std
xor
lahf
test
retf
push
sbb
dec
push
rcr
add
mov
fdiv
dec
xor
and
mov
lds
mov
cmc
pop
ds
int3
inc
out
push
(bad)
mov
sub
pop
loopne
int
xchg
adc
test
mov
icebp
mov
lds
mov
add
adc
and
repnz
jecxz
sub
jns
push
mov
xchg
and
sti
ins
xchg
sub
leave
stos
cmps
dec
gs
mov
xor
stos
lods
mov
cmp
xor
popf
and
mov
cmp
dec
or
push
pandn
inc
inc
lock
arpl
adc
push
mov
xor
push
add
fild
add
sub
dec
add
pop
mov
das
div
repnz
pusha
and
dec
imul
clc
or
fisttp
js
repnz
cmp
imul
or
stc
xchg
hlt
mov
or
ins
adc
mov
fsub
test
daa
and
test
rol
or
xor
push
fiadd
aam
hlt
mov
inc
pop
mov
mov
inc
int3
and
mov
xchg
jo
mov
sahf
add
push
jae
mov
jmp
(bad)
out
cmp
push
mov
popa
mov
sub
pusha
mov
enter
or
call
stos
push
int
stc
adc
ret
test
add
xchg
xor
dec
mov
sbb
neg
pop
push
(bad)
cmp
xor
lods
mov
stos
mov
scas
lea
call
and
mov
jne
pop
in
xchg
aad
sub
in
rol
push
(bad)
cs
stc
pop
lea
and
and
fimul
xor
fsubr
stos
mov
fst
dec
(bad)
fisttp
sbb
int
or
scas
int
mov
imul
inc
lahf
cli
inc
jl
and
xchg
ins
pop
std
cmp
je
rcr
xor
lods
cli
cmc
les
call
mov
sbb
repnz
add
mov
sbb
sar
das
cmp
cmc
js
ins
dec
loop
push
(bad)
pop
lahf
cmc
stc
cmps
lds
fist
popf
cmc
push
dec
sbb
cmps
pushf
hlt
mov
outs
xor
aaa
or
lods
add
xor
loopne
stos
push
push
and
(bad)
clc
data16
fcom
mov
xchg
xchg
jmp
nop
fild
out
cmps
sbb
mov
(bad)
out
cmc
inc
xchg
add
xchg
sub
xor
or
hlt
dec
mov
pusha
xchg
fidivr
mov
cmp
mov
inc
xchg
or
lods
mov
sub
std
clc
mov
lahf
sub
sub
mov
sub
or
and
xchg
(bad)
push
inc
sub
mov
les
clc
mov
push
icebp
ds
xor
dec
pushf
lds
aam
in
out
sub
sahf
scas
jo
pusha
sub
sub
repz
mov
sub
rcr
xchg
mov
ror
sub
shl
out
push
imul
fcom
and
sub
xor
ror
xchg
sub
jmp
mov
leave
int
mov
cmp
cmp
xlat
cld
leave
test
loope
shr
sbb
cld
lea
sahf
out
jp
not
fimul
push
into
pop
sub
cmp
outs
xlat
push
push
out
iret
std
cs
enter
out
mov
outs
add
mov
jnp
jecxz
lods
aas
jae
add
or
cmps
fwait
data16
inc
les
mov
pop
xchg
adc
pop
push
xchg
shl
ins
outs
leave
and
adc
and
shr
push
arpl
jae
mov
dec
pop
mov
xchg
lock
icebp
clc
inc
nop
imul
xchg
addr16
sub
add
pushf
push
ins
call
add
push
adc
or
jmp
out
adc
mov
mov
stc
mov
jl
add
sbb
xor
cmps
cmp
dec
push
add
test
fisttp
dec
dec
adc
ds
xchg
in
or
inc
hlt
push
movs
dec
mov
pop
cmps
fidiv
mov
call
repnz
ror
aad
scas
sbb
jne
push
push
mov
out
les
pop
mov
add
mov
cs
push
fucomip
fbld
pop
sub
imul
mov
scas
int
aad
loope
repnz
mov
in
sbb
addr16
adc
push
scas
cld
xor
stc
sahf
shl
cmps
adc
ror
out
aad
jbe
pop
xchg
dec
jp
dec
nop
loop
(bad)
imul
sub
xor
xchg
inc
repz
cwde
ins
scas
cmps
or
mov
push
stos
add
pop
inc
fisub
test
sub
lea
push
xor
ret
dec
dec
aaa
daa
sbb
push
ins
mov
sub
push
inc
(bad)
jnp
stos
dec
outs
push
mov
in
sub
mov
mov
cmp
cmp
lahf
push
sbb
xor
push
repnz
mov
in
and
scas
mov
sbb
mov
sub
addr16
push
inc
xor
mov
dec
mov
push
ret
lods
icebp
dec
sub
je
ins
mov
mov
adc
call
sub
push
in
mov
dec
cmp
pop
sbb
ror
cmp
sbb
or
and
jp
scas
jbe
clc
aad
jmp
push
push
es
hlt
xchg
mov
push
jge
je
pop
adc
xchg
jmp
sbb
sbb
es
mov
mov
adc
mov
adc
push
jns
aam
ret
mov
ror
ret
xchg
retf
shl
inc
loope
dec
jecxz
ins
popf
loopne
push
mov
jmp
mov
adc
or
lock
lahf
cmc
ror
nop
dec
stc
mov
retf
cmp
test
mov
jo
sbb
out
jl
lods
popa
mov
xchg
std
mov
xchg
sti
push
ret
add
dec
fsubr
out
jbe
cmp
pop
add
hlt
mov
add
or
dec
loop
jecxz
push
(bad)
jp
sub
sub
stos
or
out
xchg
retf
maskmovq
not
add
inc
xchg
imul
xor
popa
ss
inc
inc
or
loopne
jae
scas
in
fbstp
mov
or
outs
inc
xchg
mov
add
pushf
test
mov
add
add
les
add
mov
and
ins
fimul
mov
mov
dec
bound
pop
jo
xchg
rdmsr
shl
pop
jne
sbb
call
mov
dec
fild
test
scas
mov
pop
xchg
(bad)
lahf
movs
mov
cmc
std
cmp
sahf
xchg
je
sbb
cld
push
ficom
sub
scas
fstp
mov
adc
cmp
adc
mov
sahf
cmp
jmp
cmp
adc
outs
dec
daa
pmaddwd
rcl
mov
or
xchg
sbb
movs
add
adc
sti
fs
ins
mov
xchg
xor
(bad)
dec
jno
inc
xor
ins
or
lahf
adc
jo
retf
xlat
aaa
out
dec
aaa
imul
mov
mov
das
xchg
mov
sub
push
test
out
fisttp
mov
imul
pop
mov
dec
and
arpl
jmp
mov
pusha
and
adc
(bad)
ficomp
test
inc
jp
mov
bound
push
pop
pop
xor
call
adc
fbstp
aas
imul
out
hlt
pop
shl
and
loope
or
or
in
les
retf
xchg
jo
(bad)
adc
sbb
sbb
nop
hlt
inc
in
jae
mov
lods
fld
fnstenv
mov
lods
push
pop
add
ds
hlt
add
clc
push
cwde
ret
sub
shr
das
xchg
sbb
lock
(bad)
fidiv
jmp
loope
test
fldcw
mov
sub
stc
scas
into
jne
push
fcom
enter
and
into
cmp
mov
in
(bad)
cmps
xchg
jmp
mov
pop
and
pop
fidiv
cmp
loop
jmp
xchg
sub
jae
ror
test
mov
add
data16
gs
fld
retf
pushf
fimul
mov
aaa
daa
loope
adc
out
dec
test
xlat
cmps
cmp
adc
push
xchg
shl
daa
adc
xchg
xchg
sbb
daa
mov
mov
push
pusha
aam
fisttp
add
xchg
sub
aad
and
std
in
push
xchg
stc
jno
das
stos
fdivr
loopne
inc
test
cmps
pop
cmps
sbb
inc
stc
in
xchg
leave
into
mov
gs
xlat
mov
test
and
ror
xchg
or
push
test
cs
out
sub
mov
pop
mov
push
out
pop
inc
push
popa
pop
push
icebp
mov
and
neg
ss
or
inc
inc
and
xor
mov
leave
repnz
fist
pop
mov
mov
or
mov
rcl
mov
fdiv
cmp
stos
clc
mov
pop
sbb
xchg
dec
aaa
ret
sub
and
out
adc
xchg
pop
enter
shr
jbe
sub
scas
inc
or
popa
fwait
inc
imul
add
xchg
xchg
ins
mov
xor
in
scas
jae
das
mov
test
sbb
adc
cmp
int
or
pop
loope
movs
lds
pop
dec
cmova
dec
xchg
stos
fdiv
pop
dec
pop
(bad)
mov
mov
movs
adc
popf
mul
mov
enter
sbb
shl
fs
jmp
xor
cwde
mov
cmps
jle
pusha
mov
xchg
ss
ins
sub
dec
movs
cmp
cwde
xlat
cmp
mov
test
ss
xor
call
std
xor
and
pop
or
xor
lahf
xchg
xchg
daa
mov
outs
add
adc
fsubp
cmp
fcmove
cmp
dec
fist
pop
cmp
gs
fisttp
pop
jo
jp
rol
mov
in
in
mov
mov
sbb
adc
arpl
and
test
arpl
or
mov
sar
sub
jae
sbb
fldlg2
add
and
aaa
pop
xchg
sbb
inc
imul
dec
cld
adc
xchg
fsub
push
je
rcl
std
pop
rol
es
out
mov
lods
ret
push
jns
dec
or
ror
loopne
popa
and
jbe
iret
cmp
sar
out
mov
cmp
dec
cmps
mov
sub
or
pushf
dec
sbb
jmp
pop
mov
aaa
dec
(bad)
cwde
xchg
cmps
cwde
push
daa
addr16
xchg
add
or
rcl
fs
pusha
cdq
add
rcr
test
test
mov
jne
ds
ds
nop
inc
jb
or
aam
pusha
inc
inc
movs
es
shl
ror
cmp
lods
call
or
pop
fwait
data16
(bad)
xor
mov
sub
sti
dec
adc
push
(bad)
in
test
(bad)
loopne
dec
sbb
and
mov
loope
movs
xlat
pushf
push
cmp
into
push
neg
inc
fidiv
cmps
mov
mov
mov
push
scas
jmp
pushf
push
scas
adc
retf
xor
mov
ror
lods
out
aas
ret
daa
cmps
mov
dec
lods
cmp
mov
lods
sbb
mov
adc
xor
mov
xor
lods
pop
call
nop
and
xchg
rcr
jmp
dec
rcr
xchg
sbb
cwde
push
push
cmps
leave
imul
add
dec
jae
call
ins
dec
sub
addr16
sti
sub
adc
push
add
dec
call
aad
sub
aam
jne
xchg
jmp
dec
xchg
das
sahf
xor
sub
rcr
sahf
inc
mov
push
or
xchg
jge
inc
mov
jle
neg
in
aas
sub
mov
jmp
sbb
xchg
pop
sbb
or
das
or
adc
js
retf
hlt
xor
fld
sub
dec
das
aad
pop
dec
mov
jg
sbb
jecxz
mov
xchg
lea
xor
out
loopne
adc
inc
in
cs
xchg
push
int3
jns
xchg
dec
or
out
cmps
dec
jmp
mov
fdiv
add
ror
fisttp
repz
inc
add
adc
loopne
out
jmp
dec
stos
cmps
not
rol
jmp
mov
fimul
je
sbb
ficom
rcl
in
jns
adc
xor
lds
xchg
shl
or
xor
cs
mov
pop
(bad)
ror
mov
xchg
adc
jno
lahf
(bad)
mov
repnz
sub
sbb
xor
cmp
mov
inc
push
sahf
mov
inc
dec
xchg
out
in
and
aad
mov
and
pop
inc
push
push
scas
lods
or
fwait
cmc
mov
xchg
pop
mov
sbb
sbb
dec
mov
lar
ss
inc
dec
aam
push
sahf
inc
cld
psubd
adc
in
jne
call
outs
push
outs
xchg
fwait
pop
adc
rol
jecxz
sub
adc
push
adc
(bad)
mov
push
cs
xchg
mov
shl
(bad)
mov
test
lds
inc
mov
aam
cld
and
mov
addr16
sbb
jnp
mov
imul
std
xchg
imul
(bad)
jecxz
loopne
(bad)
add
std
or
stos
inc
sbb
sbb
pop
jns
in
fadd
xchg
popf
dec
mov
test
xor
cmp
leave
cmp
push
shr
cmp
xchg
imul
and
xchg
or
cmp
popf
sti
retf
add
xor
mov
mov
inc
adc
aaa
add
sbb
test
fwait
lds
pop
add
xor
ss
jbe
jmp
mov
jge
repnz
mov
aaa
movs
test
mov
out
pop
js
cmc
or
int
sub
adc
push
fst
aam
(bad)
or
pop
aaa
sub
and
mov
repz
pop
sub
push
fisubr
fwait
pop
jg
mov
cmp
je
shr
pop
fldcw
ror
xchg
cmp
sub
cmp
cmps
push
pop
es
stos
sbb
in
outs
sbb
mov
or
ficom
fld
cli
jle
call
or
fs
cmp
sti
outs
lahf
int3
or
mov
mov
rcl
aam
sbb
inc
sub
or
fucom
gs
add
imul
inc
fisttp
data16
mov
adc
addr16
cli
pop
movs
inc
jae
hlt
retf
ins
out
and
mov
dec
cmp
rep
cld
push
lea
cmp
scas
mov
sub
mov
mov
jmp
sub
inc
cmps
gs
out
mov
mov
in
movs
dec
jmp
out
sub
or
sti
stos
gs
out
pop
sbb
retf
xchg
xchg
mov
cs
pop
test
xchg
scas
in
push
and
add
sub
jb
jmp
jbe
inc
nop
mov
mov
jae
xor
loop
or
sbb
jmp
pop
and
aas
mov
mov
or
les
fadd
jmp
icebp
mov
cmp
retf
jb
sub
cli
cmp
in
cmp
aam
push
sub
dec
clc
daa
pop
cwde
mov
les
inc
rol
fistp
retf
mov
jne
into
push
js
out
inc
mov
pop
adc
mov
inc
mov
sbb
(bad)
sub
jle
fcomp
pop
js
fisttp
xor
push
jae
div
inc
pop
enter
mov
ret
add
push
xchg
movs
sti
mov
pcmpgtb
data16
cmp
mov
inc
aam
and
movs
dec
adc
mov
sub
cmp
mov
sub
int
inc
loopne
cmps
nop
mov
mov
jae
adc
lock
(bad)
jnp
shl
or
stos
xchg
jmp
xor
(bad)
int3
or
push
dec
cmp
es
jns
repnz
jbe
xor
imul
(bad)
in
adc
mov
test
inc
out
xlat
mov
inc
push
fisub
sbb
scas
seta
mov
mov
fwait
dec
pop
sbb
je
scas
inc
mov
adc
clc
and
icebp
cs
das
fmul
mov
mov
imul
repz
popf
mov
push
cmc
push
mov
enter
mov
stc
cmp
pop
ins
wbinvd
xchg
adc
pusha
cmp
jl
add
ja
ss
fcmove
mov
ja
mov
push
sbb
cmps
jo
pop
push
arpl
int
clc
jge
push
rol
mov
or
dec
call
inc
or
dec
push
movs
jmp
sub
in
mov
mov
loop
in
ds
in
jno
mov
xor
mov
mov
pop
cmps
sub
fnstenv
and
iret
shl
ins
jns
add
lock
addr16
out
call
xor
xchg
mov
push
cmp
stc
cld
mov
out
cli
cmp
shr
push
cld
dec
movs
pop
shl
cli
out
aam
adc
(bad)
fnsave
lock
add
ins
ret
mov
(bad)
bound
dec
rcl
js
dec
shl
into
push
out
sbb
gs
or
test
xchg
pop
xor
outs
push
mov
pop
jo
mov
inc
push
adc
add
xchg
push
sub
popa
and
sub
nop
and
add
xor
repnz
xchg
sbb
ja
fisubr
retf
pop
xchg
sahf
sub
mov
xchg
xor
sbb
and
inc
arpl
mov
cmp
mov
repz
jmp
popf
cld
xchg
test
out
test
inc
loop
push
fwait
sub
leave
sub
adc
inc
fistp
aaa
lock
and
xchg
stos
dec
scas
in
mov
jne
add
cmp
cmp
or
push
ror
and
icebp
adc
adc
xor
pop
jecxz
popf
jmp
pop
mov
div
or
mov
fistp
pop
stc
test
cli
mov
repz
lahf
test
(bad)
pop
xor
in
stos
inc
pop
mov
xchg
stos
int
cmp
xlat
pusha
fcomp
inc
dec
cmp
and
xchg
imul
mov
cmp
sub
out
rol
das
retf
jge
shl
sub
jmp
or
jb
loopne
in
xor
and
mov
fst
icebp
mov
imul
in
and
xor
adc
imul
sub
push
loopne
and
out
xor
call
jge
mov
ins
xchg
pusha
fiadd
xor
inc
hlt
sub
sbb
sbb
mov
in
dec
jmp
sub
xlat
movs
daa
(bad)
(bad)
mov
or
repz
jle
jb
rcr
inc
xor
and
jns
pop
inc
retf
inc
popa
in
mov
iret
xchg
pop
cmp
sbb
outs
xor
pop
pop
cmps
mov
mov
xor
mov
pop
push
push
push
pop
fild
pushf
sar
pop
xor
outs
cmp
enter
add
aaa
xchg
push
cmc
mov
pushf
inc
fwait
stos
mov
push
je
inc
bound
fcom
mov
jne
fmul
daa
xlat
popf
js
xchg
aaa
cmp
xchg
(bad)
adc
add
mov
cwde
call
push
ins
int
sub
mov
retf
mov
sbb
mov
jmp
ror
bound
sbb
mov
jp
loope
mov
mov
test
aad
or
pop
mov
cmp
(bad)
cmp
add
sbb
inc
pop
sub
xor
pop
push
sub
dec
in
jg
stos
loop
lods
sub
call
jg
test
jb
out
jo
mov
lock
xchg
rcr
shl
int
fld
adc
leave
pop
rol
ins
mov
add
test
sbb
push
dec
js
push
pusha
xadd
fisubr
fimul
in
or
mov
(bad)
je
xor
cmp
push
push
lds
lods
test
adc
outs
mov
fisub
popa
mov
and
int3
xor
je
fild
call
sbb
iret
cs
enter
add
and
cmpxchg
mov
(bad)
cmp
xchg
xchg
push
ss
mov
push
mov
popf
jae
mov
(bad)
scas
push
ja
push
add
cmp
(bad)
js
retf
leave
in
or
stos
fsubr
cmp
dec
pop
ins
(bad)
js
pusha
lods
out
lods
clc
sub
jb
sbb
out
cmp
das
sbb
adc
out
imul
mul
jl
pushf
mov
icebp
push
leave
jecxz
lock
or
dec
mov
int
or
cmp
xchg
fwait
inc
sub
repnz
test
inc
movs
bound
push
iret
scas
mov
test
sub
dec
mov
adc
sub
cli
adc
push
cmp
movs
cmp
dec
xlat
ret
dec
or
mov
mov
in
aaa
adc
or
sbb
lds
cmp
test
rcr
cmp
(bad)
push
push
mov
fistp
sbb
inc
aam
xchg
(bad)
jle
ffree
lea
imul
mov
es
mov
and
popf
add
xchg
add
inc
mov
call
ins
in
jmp
sub
jp
xchg
pop
inc
and
mov
pop
sub
scas
in
mov
mov
movs
add
jae
cs
sub
jg
mov
push
xchg
loop
xchg
cmp
inc
fisttp
out
jge
(bad)
aam
adc
sbb
mov
xchg
adc
out
jmp
mov
push
enter
ss
xchg
cmp
stos
out
ds
cmp
sbb
rcl
fadd
out
loop
jae
lds
shr
inc
leave
or
test
push
pop
mov
push
dec
mov
movs
adc
dec
cmp
sub
cdq
xor
mov
scas
test
out
out
mov
into
int
cmp
dec
push
mov
inc
add
mov
mov
pop
out
mov
pop
in
fild
or
ds
jmp
or
iret
lods
push
call
sub
cli
jo
fwait
sub
inc
pop
fbstp
xor
dec
das
and
pop
xor
aad
pushf
data16
cmc
ror
enter
mov
clc
call
shl
fcomp
(bad)
loope
mov
loope
(bad)
into
xchg
test
bound
test
cmp
xchg
sbb
test
mov
sub
adc
cmp
inc
inc
retf
xor
push
out
enter
aaa
push
inc
(bad)
adc
pop
pop
xchg
adc
or
repz
pop
push
push
dec
add
call
push
sahf
leave
(bad)
push
(bad)
call
xchg
adc
xrstor
sbb
jbe
stos
sysret
xlat
jne
xchg
fwait
cs
inc
adc
call
push
movs
xor
xchg
jne
xchg
mov
clc
arpl
sub
(bad)
dec
fs
repnz
xchg
or
les
in
scas
in
push
jo
cmp
shr
push
xchg
je
cmps
mov
push
ja
jmp
shl
test
or
test
jne
add
cmc
pop
test
jmp
push
lds
mov
mov
out
mov
arpl
and
adc
xchg
xchg
dec
mov
enter
lds
cmp
movs
(bad)
add
mov
ds
mov
pop
dec
stos
and
(bad)
fwait
mov
inc
mov
sub
xchg
dec
adc
into
and
push
xor
and
icebp
sahf
shr
sbb
pop
jne
movs
cmp
mov
push
jae
jo
fild
dec
nop
ret
inc
rol
or
pop
push
inc
jns
not
jae
sub
addr16
sub
push
xlat
mov
dec
iret
xor
xlat
or
mov
ret
popf
rcl
push
retf
cvtpi2ps
hlt
sbb
jmp
or
and
and
sbb
test
push
adc
adc
jns
mov
movs
inc
gs
push
rcr
xor
mov
ret
cld
jle
xor
out
je
data16
movs
stos
adc
es
cmp
jmp
adc
pusha
sbb
and
outs
mov
(bad)
int3
fs
or
leave
mov
(bad)
sub
adc
ds
mov
push
push
std
or
pop
mov
adc
sub
mov
cld
jbe
popa
int
dec
loope
nop
daa
xchg
xchg
sbb
push
cmp
mov
mov
inc
je
and
daa
sbb
fisttp
pop
lea
mov
fild
jne
(bad)
jno
or
jae
daa
sahf
mov
xchg
rcr
aad
sbb
mov
jne
cmps
or
fcomp
scas
mov
push
push
xor
dec
jo
stc
out
shl
fld
pop
push
and
mov
xor
sbb
jg
xor
add
repz
cli
xor
jmp
mov
xchg
and
(bad)
xchg
cmp
ror
cmps
pop
xor
stos
(bad)
aam
cld
scas
sbb
sub
sbb
pop
jne
outs
icebp
inc
cmp
pop
(bad)
scas
dec
jns
(bad)
shl
jl
cmps
or
sti
movs
hlt
popf
jmp
mov
mov
add
pop
aaa
and
inc
dec
fstp
repnz
mov
mov
(bad)
and
adc
in
adc
(bad)
cmps
aam
enter
not
repnz
mov
clc
mov
cs
xchg
inc
test
mov
scas
enter
cmp
jmp
shr
push
dec
aas
loop
dec
sbb
ins
pop
sbb
mov
leave
cmp
test
adc
cmp
jecxz
sub
add
daa
retf
fsubr
je
and
or
aad
mov
repz
jge
aad
cld
xchg
sub
sub
movs
inc
enter
mov
mov
cmps
jp
in
jbe
dec
lods
xchg
cwde
out
xchg
std
jae
xor
and
mov
cmc
inc
dec
int
rep
test
mov
ror
je
inc
sub
retf
mov
push
or
mov
div
push
fwait
xor
cmp
jmp
inc
aas
stc
ds
(bad)
(bad)
outs
fimul
gs
cld
xor
shl
jbe
pop
loop
xchg
jns
outs
mov
outs
test
xor
repz
std
pop
stos
hlt
mov
jmp
sub
fwait
inc
add
lods
push
adc
cmp
and
xchg
mov
aad
or
push
ins
and
xchg
pusha
or
push
enter
sub
jnp
add
push
mov
in
clc
shr
jno
jmp
imul
es
test
dec
inc
adc
sub
(bad)
xchg
mov
push
leave
xchg
mov
jne
jo
xor
cmp
push
adc
out
sbb
fsubr
(bad)
dec
das
mov
mov
sub
outs
push
jb
jmp
or
xchg
mov
push
push
xor
sbb
jo
cmp
adc
xor
mov
es
imul
or
scas
jae
sub
jecxz
dec
retf
xor
sbb
add
push
dec
rcr
lods
sbb
dec
sbb
ins
int
cmp
retf
xchg
push
retf
in
push
sub
sub
sub
mov
outs
stc
xchg
push
mov
dec
push
pop
neg
cmp
push
push
out
rcl
in
jno
fadd
arpl
xchg
sbb
push
outs
xor
cli
ins
xor
pop
in
jne
mov
jecxz
jmp
daa
xchg
push
lock
ins
xor
ins
or
dec
psubsb
loope
xchg
pop
xchg
(bad)
or
xor
popf
push
call
jb
int
mov
fld
sbb
and
push
push
adc
dec
iret
mov
cmp
cld
cmp
popf
mov
and
jne
mov
in
out
inc
scas
arpl
mov
jp
push
retf
cmp
inc
je
dec
js
xchg
mov
adc
sbb
push
dec
(bad)
jae
mov
call
sub
dec
push
xchg
stos
popf
call
sub
fst
imul
outs
pusha
(bad)
cmp
xchg
jge
jg
js
jo
sub
mov
(bad)
clc
cmp
push
rol
imul
shl
fidivr
lea
popf
iret
stc
jmp
dec
cmp
mov
cmps
inc
pushf
cwde
shr
icebp
ret
std
push
jae
or
xlat
jecxz
cmp
and
jmp
loope
fs
jmp
mov
cmps
lods
mov
mov
adc
or
xchg
mov
fsubr
int
outs
test
mov
pushf
and
inc
lds
sahf
fldenv
inc
mov
fsubr
fwait
in
(bad)
ins
cmp
std
xor
arpl
sti
mov
push
sbb
ins
pop
loopne
stos
pop
ds
leave
fisttp
aaa
call
jg
and
sbb
je
popf
popf
leave
leave
cmc
xlat
dec
loope
in
adc
jmp
mov
cdq
mov
sti
movs
loopne
cmp
jbe
outs
(bad)
test
das
inc
push
pop
in
inc
push
aad
add
mov
inc
xor
push
aaa
test
imul
ins
dec
adc
mov
inc
or
int
jne
push
push
jecxz
out
imul
mov
push
sub
mov
das
inc
mov
lea
leave
jmp
push
fdivr
int
jg
jno
pop
out
repz
sti
fidiv
(bad)
jecxz
aas
push
sub
adc
stc
jnp
lods
jnp
sub
ds
mov
mov
sub
int3
mov
xchg
stos
xchg
cld
out
sbb
in
mov
sahf
xchg
and
icebp
dec
xchg
jae
mov
pop
cmp
cmp
setns
add
mov
mov
arpl
mov
or
sbb
adc
test
or
shr
add
mov
pusha
nop
out
adc
cdq
lahf
adc
jecxz
mov
jmp
ins
jge
push
push
outs
push
and
and
mov
jg
pop
aas
leave
jmp
aaa
mov
jge
nop
sbb
push
scas
js
and
xchg
call
push
adc
loop
pop
jecxz
fst
mov
and
push
dec
repz
test
in
adc
cmc
sbb
stc
xchg
fnstenv
mov
xchg
and
jg
mov
icebp
mov
xchg
sub
jge
mov
div
add
test
nop
mov
dec
lods
loope
int3
sub
sahf
sar
rol
(bad)
xor
dec
in
nop
adc
shr
mov
mov
pop
inc
popa
add
aas
retf
stos
addr16
mov
jnp
ins
lahf
sub
sbb
imul
and
in
adc
out
rol
std
or
cmc
aas
mov
add
outs
gs
sub
aam
inc
fild
aas
sub
neg
pop
test
sar
xchg
fcom
jg
jne
inc
sub
xchg
xlat
stc
and
out
pop
(bad)
loope
pop
adc
in
in
add
mov
and
jnp
adc
push
sahf
sbb
call
and
sub
test
xchg
ss
mov
sti
xor
rol
ja
call
mov
in
loope
scas
xor
sub
in
inc
mov
cmp
icebp
movs
sub
pop
add
or
fwait
jg
sbb
pop
sbb
cmp
push
add
test
shl
push
inc
lds
fs
pop
ret
daa
pop
lods
xor
rcr
sbb
frstor
mov
fs
push
push
sar
xchg
inc
leave
daa
mov
pop
push
sahf
or
ret
shl
call
sub
test
in
xchg
call
test
and
adc
stc
gs
pop
fnstenv
adc
loope
or
jne
lods
(bad)
mov
leave
mov
push
sbb
nop
scas
xor
pop
mov
mov
jne
dec
push
and
and
out
push
rcr
add
shl
outs
pop
sub
add
cmp
jno
rol
dec
add
push
inc
retf
and
xchg
and
neg
mov
inc
movs
scas
out
mov
lds
xor
sti
sbb
cwde
adc
call
call
push
daa
sub
pop
add
push
sub
mov
push
out
retf
lods
je
popa
or
dec
pushf
fldcw
push
sub
xor
(bad)
(bad)
js
mov
repnz
xchg
sbb
xchg
mov
mov
adc
inc
sbb
mov
cmps
adc
movs
mov
(bad)
mov
mov
cmc
xor
xor
int
or
sub
mov
mov
adc
std
jne
push
jle
inc
out
sub
or
icebp
ret
xor
cmp
std
mov
cmc
xchg
inc
aas
enter
fmul
std
add
mov
jp
jl
jno
xor
dec
xchg
sbb
xor
movs
jns
sbb
push
icebp
scas
jg
cmp
sub
dec
mov
lock
add
add
add
adc
mov
dec
pop
fimul
add
retf
mov
mov
in
mov
int3
popf
xchg
scas
xlat
cmp
call
cmc
pop
sar
lods
lock
inc
pop
aad
ror
enter
out
shr
mov
xor
add
and
sub
dec
xchg
fsubr
daa
inc
jbe
inc
data16
mov
inc
push
ret
mov
sub
rcl
scas
movs
sbb
shr
xchg
inc
add
pop
test
mov
pop
adc
cwde
jl
fldcw
aam
cld
shr
xchg
xchg
aaa
aad
(bad)
pop
sub
imul
fst
in
stc
icebp
in
xchg
outs
pop
mov
add
xchg
fild
dec
sub
adc
adc
ret
leave
dec
sub
mov
call
icebp
jo
cmp
and
inc
test
fst
cli
mov
repz
aad
aas
cmc
in
out
mov
sbb
sub
mov
aam
fcomp
outs
(bad)
xor
push
jb
popf
leave
nop
(bad)
dec
push
stos
xchg
jo
or
mov
shl
mul
ins
ins
out
hlt
mov
and
or
push
loop
jp
pop
push
push
retf
lock
push
fild
arpl
add
f2xm1
imul
outs
int3
(bad)
lods
(bad)
xor
push
jp
cmp
jmp
scas
push
and
repnz
outs
es
dec
in
les
leave
adc
ret
mov
ret
mov
stos
add
loope
aaa
xchg
arpl
push
mov
movs
aas
call
cmp
icebp
sub
add
dec
or
fcomip
je
adc
or
or
test
fs
jne
xor
call
int3
scas
jecxz
call
ins
mov
popa
mov
pusha
mov
nop
xchg
ds
dec
lea
xlat
inc
xor
jbe
pop
out
push
and
out
fisttp
fisttp
fisttp
(bad)
js
sbb
adc
pop
and
scas
mov
inc
in
push
xchg
imul
mov
inc
xor
pushf
loop
repnz
test
dec
loop
retf
movs
shl
lods
sbb
push
xchg
xchg
mov
in
xchg
(bad)
and
pushf
sub
push
enter
push
ror
mov
sbb
jg
out
ret
pop
pop
xchg
(bad)
dec
movs
daa
sbb
inc
fnstsw
jb
sbb
fs
and
mov
fmul
aas
mov
test
cmp
inc
mov
stos
adc
scas
push
add
imul
jle
int
or
ds
mov
sub
(bad)
icebp
jmp
cmp
(bad)
into
sub
imul
out
cmc
leave
xchg
cld
aaa
and
mov
jae
cmp
push
jecxz
imul
movs
ja
dec
nop
int3
dec
cld
mov
stos
mov
mov
mov
iret
pop
scas
gs
repz
pop
arpl
(bad)
nop
dec
inc
dec
sub
mov
add
pushf
inc
or
lods
lahf
xchg
lods
jnp
push
push
mov
shl
scas
sub
es
ins
inc
test
in
xor
lahf
int3
sub
mov
add
adc
mov
xchg
lahf
loop
cli
movs
jecxz
jle
inc
in
add
xchg
mov
dec
mov
stc
xor
into
sub
jmp
xor
cmp
out
lods
xor
sbb
ja
fwait
xchg
push
(bad)
not
fnstcw
pop
sbb
aam
test
dec
push
outs
cld
xor
out
mov
adc
iret
inc
sub
xchg
das
cmp
xchg
idiv
mov
xchg
ret
rol
lods
fst
test
or
cmp
rol
pop
xor
inc
ficomp
xchg
cmp
add
shl
or
inc
inc
push
retf
jno
lock
mov
fistp
int
out
in
cmps
mov
fs
mov
clc
sub
test
test
rcl
add
and
and
ins
mov
pushf
out
pop
dec
push
push
loope
fistp
mov
jne
jnp
imul
gs
leave
jne
arpl
inc
mov
inc
icebp
test
adc
pop
push
aad
repz
aas
dec
mov
push
iret
push
add
adc
(bad)
lods
shl
dec
stos
mov
je
fbstp
or
pop
mov
inc
je
push
xchg
lods
jo
dec
ds
jno
int
jl
in
push
shr
cmp
jmp
xchg
push
or
dec
outs
cmp
push
xor
push
push
mov
stos
cmp
mov
xchg
imul
ja
std
and
mov
fisttp
add
inc
cld
ins
xchg
scas
cs
test
(bad)
loopne
dec
ror
xor
lock
icebp
into
out
xchg
les
adc
sub
xchg
or
sub
cmp
push
pop
xchg
and
aas
jmp
push
add
(bad)
inc
fist
push
dec
pop
xlat
sub
pop
xchg
or
jg
mov
shl
sbb
popa
les
into
bound
add
cmp
mov
cmp
xchg
shl
cli
addr16
xor
mov
pop
sbb
or
dec
gs
mov
popf
ins
push
stc
push
(bad)
sub
popa
std
xchg
shr
imul
xchg
and
fst
lds
imul
fistp
mov
jne
inc
cli
cmp
xchg
(bad)
pop
xchg
xchg
in
jno
in
pop
mov
pop
in
mov
push
repnz
(bad)
push
mov
out
add
int
jnp
jns
and
out
xchg
popa
dec
das
es
repz
imul
mov
test
xchg
xor
inc
rol
out
(bad)
pop
mov
adc
fcmovb
jl
pop
add
and
inc
inc
inc
jns
xor
stc
xchg
adc
adc
mov
pushf
int
ret
in
inc
fistp
cld
xchg
sbb
je
and
rcl
and
lods
pop
aas
popf
xor
mov
mov
leave
aam
movs
enter
in
jb
jae
mov
xor
jmp
lods
mov
mov
sub
jmp
lahf
mov
pusha
std
lods
in
lea
jmp
mov
xchg
pop
rcl
ret
mov
retf
pusha
sub
imul
pop
lds
imul
cwde
mov
xor
out
pop
and
imul
icebp
test
pop
mov
inc
dec
mov
adc
and
add
dec
nop
or
add
(bad)
xor
jp
adc
int
dec
and
or
inc
(bad)
aam
push
cmps
mov
lea
pop
xor
adc
leave
lock
sub
les
rcl
add
sti
jo
enter
in
movs
not
sbb
add
pop
cmc
add
sahf
popa
xchg
mov
add
cwde
pop
dec
mov
mov
mov
cmp
pop
and
(bad)
outs
mov
jmp
mov
pop
sub
or
out
sbb
es
cmp
pop
sbb
mov
aad
add
or
add
mov
jno
cld
arpl
(bad)
fidivr
sti
push
inc
nop
loop
or
cmp
cmp
test
xchg
sub
aam
push
mov
mov
xchg
outs
in
ins
add
jbe
fsub
aad
or
xor
adc
jo
outs
push
dec
mov
ins
aaa
mov
cmps
(bad)
mov
(bad)
dec
sbb
(bad)
call
push
das
daa
hlt
pop
xchg
repnz
retf
push
pop
scas
fimul
pop
aas
es
repz
jmp
ja
or
in
mov
lds
iret
arpl
ss
repz
sbb
(bad)
jecxz
ss
and
cmp
push
push
les
and
jnp
out
mov
mov
mov
not
fldln2
mov
(bad)
or
popf
jo
push
dec
mov
pop
mov
jns
sbb
je
mov
xor
test
mov
dec
es
sub
adc
push
fwait
inc
loope
(bad)
ffreep
xor
jmp
cmp
scas
mov
cdq
mov
cmc
inc
push
cmp
ja
sbb
jo
push
jmp
cwde
sti
loope
sbb
lods
and
test
jp
call
and
adc
jnp
mov
xor
fdiv
into
push
push
dec
sbb
mov
and
inc
push
adc
xor
dec
add
cmp
sbb
mov
fs
test
fisttp
mov
mov
mov
out
popa
gs
sub
jns
jmp
repnz
test
ret
push
jmp
pushf
leave
jl
fwait
das
bound
int3
jecxz
xchg
add
icebp
xor
xor
mov
mov
scas
test
(bad)
and
push
mov
dec
test
jno
(bad)
shl
dec
jae
mov
push
add
xchg
ror
xor
mov
jmp
aad
stc
add
popa
sbb
scas
cmp
js
std
dec
es
mov
repnz
daa
mov
inc
pop
and
ror
or
outs
jle
and
movs
jns
mov
fimul
mov
inc
ret
or
or
inc
sti
pop
cld
hlt
or
dec
xchg
sti
pop
mov
xor
call
adc
jnp
cmp
cmp
test
(bad)
data16
add
jg
pop
cmp
xchg
out
(bad)
fstp
mov
out
les
and
pop
sbb
pop
mov
inc
arpl
dec
jl
popf
pop
lds
shl
mov
push
xchg
imul
adc
sbb
xor
dec
loope
es
and
cwde
sub
cwde
int
sbb
outs
cmp
fwait
xchg
sbb
mov
shr
das
jbe
lahf
add
cmps
add
aaa
mov
pop
loope
cmps
xor
test
mov
(bad)
dec
mov
xor
ret
ffree
xchg
pop
adc
push
push
inc
mov
call
mov
mov
fisubr
xor
adc
xor
xor
push
lds
imul
jl
and
fucomi
mov
stos
pushf
push
stc
adc
test
cmp
cmps
bswap
lock
scas
das
gs
cdq
push
fucompp
retf
jecxz
mov
push
lods
ds
cmps
or
in
pop
sbb
(bad)
mov
or
int3
ins
mov
shl
xchg
adc
pop
add
push
sub
adc
idiv
fbstp
push
jp
leave
addr16
in
pusha
test
inc
inc
dec
adc
xchg
jmp
js
fisttp
add
sub
mov
jnp
repnz
mov
adc
jne
loopne
in
push
mov
xchg
adc
cmp
ja
das
jae
inc
jmp
bound
jecxz
jnp
sbb
mov
fs
imul
mov
xchg
mov
call
jae
shr
popf
inc
cmp
or
and
mov
mov
ret
mov
jae
jle
and
loop
lods
adc
jmp
dec
inc
arpl
cwde
stc
repz
mov
jp
push
xchg
pop
or
in
pop
push
or
push
lahf
loope
push
pop
in
jmp
dec
and
mov
push
mov
cmp
pop
push
or
ins
cmc
cmp
ror
lds
rol
and
pop
jle
test
sub
and
sub
pop
mov
repz
ret
lahf
cmc
push
push
cmp
loopne
push
pusha
rol
cmps
sub
pusha
imul
les
clc
pop
enter
jne
pop
in
sbb
in
mov
arpl
push
ins
popf
xchg
lods
cmp
dec
cmps
outs
mov
aaa
bound
mov
jmp
and
in
(bad)
shl
int3
les
daa
in
dec
mov
pop
jg
clc
pop
call
inc
(bad)
sub
xchg
inc
jns
rol
into
retf
cmc
lods
popa
fcom
mov
push
and
push
push
pop
pushf
jnp
xor
imul
fidivr
and
push
push
stc
lock
ret
push
loop
repz
les
outs
rcl
dec
cwde
push
jns
fmul
and
mov
mov
shr
imul
ret
and
ja
pop
jb
es
(bad)
out
loop
xor
in
dec
and
pop
or
das
mov
mov
iret
jne
pop
jp
push
xchg
mov
mov
(bad)
and
mov
adc
ss
jmp
or
shl
aaa
repnz
sbb
call
dec
inc
clc
dec
or
nop
jno
sbb
and
in
stc
push
cmp
xor
pop
mov
sub
repz
pop
popa
in
std
cmps
pop
push
mov
fld
test
xchg
jnp
sub
aad
rcr
adc
mov
cmp
fs
jmp
push
mov
adc
add
iret
imul
xchg
cmp
sub
fs
add
inc
mov
ret
das
cli
jecxz
dec
aad
jmp
lods
mov
sbb
in
jb
lock
cdq
leave
imul
ds
lahf
gs
neg
jecxz
cmp
sub
hlt
mov
test
and
jp
loope
cmps
adc
dec
pop
mov
inc
data16
call
sar
or
dec
xor
shr
stc
popf
jbe
sbb
xchg
or
xor
scas
or
lods
dec
add
leave
rcr
sti
nop
inc
push
mov
dec
xor
(bad)
lock
cdq
adc
(bad)
addr16
cmp
or
mov
stos
mov
push
(bad)
das
ins
aaa
imul
xor
pop
xchg
xchg
inc
mov
sub
add
xor
(bad)
(bad)
in
sub
aas
adc
loopne
inc
les
add
mov
dec
and
inc
dec
cmp
adc
or
push
cmp
fistp
in
adc
je
stos
les
mov
pop
mov
es
adc
(bad)
push
cdq
aad
add
arpl
ret
push
dec
mov
push
jecxz
mov
dec
lds
stc
bsr
clc
jae
mov
push
loop
sub
add
sbb
movs
push
xchg
xor
mov
pop
pop
sub
mov
and
dec
add
sbb
dec
in
xor
es
jne
mov
add
retf
int
nop
pop
loope
fsubp
lea
inc
jp
ja
hlt
popa
cli
arpl
inc
jne
outs
lods
icebp
xchg
cmp
retf
inc
mov
or
pop
test
xchg
sbb
lds
fucomi
lea
xchg
fbstp
cdq
add
cs
stos
mov
jae
inc
jns
aaa
outs
sbb
jne
cmp
add
(bad)
jne
mov
arpl
in
aam
cmc
loope
popa
dec
imul
loopne
xlat
mov
pop
daa
jne
into
call
out
pop
das
mov
sbb
adc
xchg
imul
jmp
pop
jne
jmp
fidiv
or
jmp
loopne
jmp
xchg
repnz
shr
push
in
dec
xchg
push
and
mov
pop
push
add
in
test
xchg
mov
add
pop
les
dec
leave
jae
push
inc
push
bound
push
pop
inc
popa
test
jmp
fimul
mov
adc
ret
lea
test
repz
into
jnp
pop
jle
fcomp
cmps
in
dec
pop
sub
movs
into
and
jmp
xchg
add
lock
leave
int3
repnz
cmps
movs
jecxz
popf
(bad)
adc
repz
pop
mul
mov
out
pop
xchg
loop
(bad)
mov
movs
test
jbe
mov
std
jo
fbstp
inc
cmp
mul
cmp
cli
inc
inc
cld
jb
idiv
repnz
jmp
cmps
inc
leave
add
mov
retf
(bad)
dec
mov
lahf
xor
pop
ds
mul
js
das
mov
stos
xchg
cwde
cld
dec
add
mov
cli
loop
icebp
cmp
pop
jecxz
retf
les
mov
imul
dec
xor
mov
ret
es
and
fild
lods
xor
cdq
out
std
outs
push
loope
sbb
push
cld
cmc
xchg
(bad)
and
icebp
div
jns
fistp
xchg
retf
dec
cli
xor
or
fidiv
test
xchg
pop
sbb
pop
sbb
das
test
adc
adc
inc
dec
and
test
test
inc
jmp
test
loope
call
and
cmp
xchg
or
imul
push
les
sub
dec
mov
loopne
jg
shl
shr
jmp
dec
mov
enter
shr
mov
fsub
imul
xor
popf
or
sub
cmps
cdq
mov
add
jb
xchg
and
pop
(bad)
movs
pushf
jae
aaa
or
stos
out
pop
and
out
adc
aas
ja
mov
ret
or
jmp
in
shl
fsub
sub
jnp
pop
xor
mov
mov
mov
aam
inc
movs
lea
inc
call
push
mov
loope
mov
retf
in
ret
daa
jne
or
(bad)
mov
imul
cmp
shl
xor
shr
or
(bad)
push
dec
xor
outs
add
pop
sub
fdivr
call
ret
cdq
lods
shl
cmp
dec
cdq
xchg
jb
movs
in
movs
cld
les
rcr
mov
cmp
push
inc
cmp
ret
jmp
out
mov
cmp
retf
adc
mov
push
ficomp
mov
test
add
mov
lods
fadd
daa
aaa
js
dec
jno
adc
mov
(bad)
jae
lahf
fucom
inc
inc
jecxz
pop
sub
add
push
xor
and
sub
or
imul
cs
adc
mov
mov
out
jmp
xor
xchg
and
mov
add
je
outs
or
sbb
fucom
adc
shl
push
out
mov
mov
sbb
repnz
add
ins
fnsave
sbb
ret
cli
mov
movs
cs
cmp
cwde
pop
dec
mov
push
mov
dec
icebp
cdq
(bad)
jmp
cmp
pop
sti
adc
hlt
imul
sub
cmp
cmc
iret
imul
sub
inc
adc
xchg
ds
lods
sub
and
or
pop
cdq
hlt
sub
bound
inc
adc
repz
jle
icebp
lea
aaa
repnz
pop
pop
stos
mov
mov
or
xchg
inc
cmc
loopne
fwait
mov
inc
ds
adc
sbb
leave
sub
in
jno
sar
lods
sub
pop
add
fwait
or
imul
xchg
fsubr
aad
pusha
and
mov
xchg
sbb
or
addr16
mov
pop
cwde
dec
mov
push
jns
dec
mov
paddd
push
aaa
cmc
aad
jo
dec
jns
(bad)
fstp
mov
jb
cwde
add
ds
and
les
xchg
test
push
add
sbb
int3
xchg
out
xchg
mov
jl
pop
lods
addr16
icebp
nop
loope
aas
adc
movs
cmp
(bad)
xchg
outs
shr
jne
and
adc
lahf
(bad)
mov
xchg
call
int
addr16
add
mov
call
mov
popa
mov
jno
pop
fst
ss
fcmove
inc
fld
lahf
pop
and
sub
adc
lahf
sub
test
xchg
dec
stos
lds
outs
cmp
mov
mov
lds
dec
xor
addr16
enter
je
xor
xchg
dec
jge
enter
mov
dec
inc
loopne
push
sub
mov
imul
inc
xchg
inc
pop
or
(bad)
(bad)
jmp
(bad)
cmc
das
pop
mov
push
das
shl
fxtract
xor
cld
sbb
scas
jle
xchg
cld
gs
(bad)
dec
push
lods
jbe
push
lods
lds
loop
mov
out
jno
aaa
dec
hlt
and
mov
fadd
loopne
sar
or
jno
in
push
leave
or
cli
cmp
fs
movs
mov
out
xor
loopne
call
int3
mov
xor
movs
cmp
ret
int
mov
sbb
int
pop
cwde
nop
jnp
call
in
call
mov
adc
jmp
movs
test
jmp
inc
mov
call
sar
mov
sub
(bad)
icebp
mov
lock
pop
sahf
int3
lods
push
cwde
jle
fld
dec
xchg
stc
pop
out
mov
(bad)
xchg
sahf
pusha
mov
out
xchg
adc
pop
scas
jp
push
add
dec
and
mov
fnstsw
ret
jns
mov
movs
sub
out
mov
jne
sar
and
push
nop
and
fwait
jl
inc
lahf
ret
test
dec
int3
or
and
mov
in
pop
stc
adc
jl
sahf
pop
retf
sub
push
ret
jne
cmp
push
repnz
clc
xchg
push
imul
iret
fs
ficomp
xor
fwait
or
call
mov
inc
sbb
daa
cmp
addr16
xor
stc
mov
es
mov
(bad)
jb
mov
sub
cli
loopne
or
test
xor
mov
shl
fld
jns
mov
popa
and
push
pop
dec
mov
push
hlt
(bad)
out
or
add
push
mov
mov
mov
pop
cmp
mov
jmp
inc
and
pushf
xor
lock
fidivr
jmp
cdq
(bad)
mov
sub
inc
jle
mov
and
lock
or
loop
mov
les
add
cmps
je
push
mov
and
xchg
inc
pop
into
adc
add
shl
std
sar
xchg
pop
sub
rol
popa
add
call
add
cmps
sbb
pop
pushf
shr
mov
sti
data16
sub
mov
inc
ficom
in
mov
in
pushf
dec
rcr
or
iret
jbe
dec
pop
call
shl
pop
adc
xchg
ret
sbb
pop
xchg
out
hlt
push
aaa
cdq
dec
test
fadd
xor
dec
dec
add
pusha
aad
jg
inc
adc
sbb
mov
push
dec
rcl
add
dec
or
clc
repnz
mov
mov
mov
mov
or
jae
and
mov
imul
sub
and
push
int
xlat
cli
sti
jae
dec
(bad)
mov
cmp
mov
cmp
imul
cmps
(bad)
test
in
enter
sub
popf
pop
add
sub
test
inc
inc
or
jecxz
jb
sbb
or
rcr
mov
adc
cmps
nop
lods
stos
mov
inc
ds
xchg
lea
adc
sbb
mov
repz
mov
push
out
mov
mov
dec
popf
inc
repz
mul
sub
push
adc
inc
and
fsubr
ds
mov
jb
xchg
fcomp
mov
out
int3
lock
and
xor
dec
cmp
outs
retf
mov
jbe
pop
add
mov
div
xchg
les
ins
jl
and
push
das
imul
lods
(bad)
inc
mov
cmp
or
aam
repnz
inc
push
pop
pop
es
pop
push
mov
mov
pop
add
pop
jl
or
mov
gs
add
inc
outs
cwde
outs
(bad)
enter
jecxz
pusha
mov
mov
xchg
cmp
mov
shl
adc
adc
inc
fwait
push
or
xor
jle
in
outs
cmp
arpl
repnz
xor
ret
adc
mov
jg
imul
cmps
in
ficomp
pushf
sti
cdq
cmc
movs
cmp
inc
xor
push
les
sbb
mov
add
inc
dec
pop
test
cmp
mov
pop
fcom
retf
out
adc
push
bound
sub
std
push
jbe
outs
and
outs
jp
xor
sar
mov
push
dec
mov
push
cli
test
xor
in
jno
ficom
(bad)
xchg
das
mov
fdiv
mov
mov
jb
mov
iret
jmp
sbb
pop
dec
and
pop
cmp
mov
dec
rcl
adc
jb
movs
inc
neg
push
scas
aas
dec
sub
and
js
cmps
retf
push
pop
mov
sub
or
or
inc
pop
pop
lahf
loopne
pop
mov
jbe
(bad)
call
cmp
mov
jmp
imul
push
mov
cli
or
in
int
push
js
add
jmp
push
je
xor
xchg
aas
jmp
bound
ror
push
mov
push
rcl
outs
jb
xchg
xchg
and
and
and
push
xchg
shl
sbb
push
pusha
jge
cmp
lds
xchg
addr16
(bad)
push
retf
inc
outs
call
dec
cli
dec
sbb
jae
out
ret
lds
out
test
aam
xor
or
xor
out
sahf
call
jmp
aas
(bad)
nop
push
ja
fidiv
cs
mov
lock
into
lods
dec
pop
rcr
pop
mov
pop
in
test
xor
fcomp
fadd
push
or
adc
push
push
lock
popa
movs
mov
fidivr
ror
add
jbe
and
sahf
cmps
jl
test
xlat
mov
and
push
inc
add
pop
xor
call
mov
mov
cmp
ins
leave
lods
jnp
and
xchg
pushf
add
push
enter
push
sbb
imul
lds
and
fcmovnu
lods
shr
shl
jg
sahf
ret
dec
les
ins
data16
fist
sbb
fstp
mov
and
test
dec
cmc
adc
xor
sub
ret
push
adc
js
ror
(bad)
jne
mov
cs
mov
mov
cli
jge
sbb
call
inc
mov
sbb
mov
add
mov
(bad)
adc
popf
push
xor
clc
das
cs
fstp
shl
or
(bad)
fisub
lods
or
(bad)
int3
test
leave
xor
cmp
adc
push
and
jp
lods
idiv
inc
sub
mov
dec
not
inc
sub
mov
jl
test
iret
outs
inc
fs
sub
jnp
fst
test
aad
lds
inc
jg
aas
dec
adc
adc
mov
hlt
aas
cmps
mov
stc
jecxz
out
add
cmp
(bad)
add
sub
jmp
push
push
mov
lea
mov
cmp
jae
sub
(bad)
ficom
mov
mov
and
adc
pushf
or
add
test
fadd
fnstsw
mov
cld
push
adc
jg
or
hlt
xchg
inc
mov
outs
add
gs
adc
xor
std
in
lds
repnz
mov
addr16
cmps
sahf
sbb
in
je
pop
inc
enter
fiadd
test
arpl
mov
popf
fadd
dec
stc
movs
xor
jmp
ss
push
mov
movs
push
test
cmp
out
jle
lea
stc
nop
jge
hlt
jno
sub
test
xchg
out
mov
xchg
jbe
inc
test
jo
fs
(bad)
mov
popa
push
dec
inc
je
push
cmp
pop
cmp
mov
xor
inc
dec
into
(bad)
(bad)
std
mov
lea
cmp
out
xlat
fwait
inc
(bad)
shl
xchg
sub
inc
mov
inc
iret
or
test
test
sub
cmc
fsubp
int3
es
pop
pop
in
out
add
retf
pop
div
inc
inc
call
sub
ret
mov
das
pop
imul
push
add
mov
mov
and
movaps
xchg
test
out
das
and
mov
icebp
dec
loope
adc
leave
xor
shl
and
and
and
jmp
dec
mov
jecxz
imul
xchg
adc
inc
test
mov
and
in
xchg
mov
into
pop
in
test
adc
inc
mov
push
dec
sbb
mov
jb
test
cmp
sub
add
aaa
fisubr
fs
sbb
jge
popa
inc
jg
inc
mov
mov
add
mov
jmp
daa
iret
xchg
and
(bad)
in
lods
pop
and
mov
popf
sub
mov
ins
jge
mov
lahf
add
cdq
adc
into
in
sbb
cmp
and
aad
jne
or
retf
sub
xchg
pop
sbb
inc
add
jo
outs
push
and
stos
in
xor
test
fisttp
inc
pop
pop
inc
mov
lods
popf
cs
push
push
adc
ins
or
stc
arpl
jge
xchg
cmp
(bad)
xor
les
inc
add
out
stc
stos
jg
push
gs
jg
and
jae
dec
sbb
popf
jnp
shl
es
lods
push
outs
daa
inc
jnp
sbb
(bad)
pop
ss
stos
fbstp
scas
and
push
inc
pop
gs
add
mov
dec
das
ss
cmp
inc
xchg
mov
mov
push
adc
jbe
cmp
inc
jae
test
jl
movs
xor
arpl
mov
dec
push
and
retf
pop
pushf
pop
xchg
cdq
pop
addr16
xchg
(bad)
sub
cmp
imul
test
mov
dec
cmp
cli
cmp
adc
add
arpl
test
adc
inc
dec
push
xchg
rcl
mov
mov
mov
fdiv
faddp
bound
retf
out
imul
lock
cmp
jle
or
int
data16
test
or
jb
mov
adc
mov
(bad)
sbb
loop
xor
lock
mov
mov
(bad)
fisub
inc
inc
test
sbb
sub
xor
sbb
mov
loopne
xchg
lods
outs
xchg
lods
jg
movs
mov
jnp
pop
stos
icebp
push
into
or
or
scas
pop
xchg
sahf
xor
sub
movs
jmp
mov
inc
pop
cld
fsubr
test
mov
pushf
ret
or
sahf
or
jecxz
xor
mov
jb
shl
shl
pop
push
sar
dec
add
mov
ins
enter
and
mov
and
rcl
in
ss
and
(bad)
neg
push
movs
add
dec
add
adc
cmps
jo
add
dec
dec
mov
pop
loopne
pop
pop
jmp
in
(bad)
cmp
repnz
in
iret
ja
sbb
out
cwde
cmc
dec
xor
lds
adc
(bad)
pop
fild
pop
mov
ds
pop
loopne
add
adc
and
je
xchg
popf
xor
mov
je
stc
ds
inc
mov
fcmovb
pop
mov
sahf
xchg
je
pop
mov
pop
shl
or
xor
popf
fcom
scas
xchg
and
sbb
push
fistp
sbb
jl
scas
sar
mov
in
inc
loopne
jno
cmps
jp
fisub
mov
cmp
inc
jl
test
add
stos
pop
inc
aas
sub
pop
fst
xor
xchg
dec
sahf
jmp
push
mov
cld
push
retf
xor
out
push
xchg
(bad)
aaa
fst
arpl
pop
je
sub
fs
adc
repnz
aam
adc
sub
loopne
lahf
in
bnd
adc
and
jmp
push
jge
adc
(bad)
loope
xorps
fwait
(bad)
int3
or
cld
sti
sub
pop
sub
loop
push
(bad)
and
dec
sbb
xchg
js
sti
aam
arpl
mov
neg
adc
sub
push
fldcw
jnp
into
or
sbb
xchg
mov
or
add
aam
ficomp
xor
cmp
mov
and
sub
lea
jmp
shr
push
cmc
daa
aam
and
fwait
shl
dec
jl
pop
mov
mov
outs
jecxz
ins
call
sub
push
data16
scas
cwde
mov
into
pop
cmp
cmp
push
call
push
sub
dec
popa
iret
xchg
scas
fild
sbb
and
jae
cmps
mov
pop
js
jb
out
pushf
shl
ds
lds
jnp
in
mov
bound
cdq
adc
mov
sub
rol
(bad)
pop
out
dec
daa
jns
(bad)
mov
add
jl
rcr
xor
(bad)
adc
aaa
inc
and
sbb
int3
test
loope
mov
xchg
or
push
(bad)
jne
mov
fld
push
lods
adc
outs
and
rcl
jg
xor
cmp
mov
push
cmps
cwde
xchg
retf
inc
pop
das
dec
div
adc
push
ds
inc
inc
and
ss
add
or
das
push
lods
hlt
pop
pop
fiadd
dec
ins
xchg
into
loope
inc
rcr
call
aaa
fcmovne
pop
mov
inc
sub
es
sar
sub
mov
jecxz
retf
lahf
mov
push
jge
sub
sbb
add
fstp
xchg
dec
mov
jle
mov
pop
dec
mov
rol
dec
push
mov
and
sar
xchg
in
enter
mov
dec
in
jno
fcom
mov
hlt
fisttp
cdq
ja
push
xor
mov
inc
mov
sbb
loop
mov
jecxz
ret
add
stos
cmp
sbb
inc
inc
pop
mov
xor
mov
test
mov
es
push
adc
and
inc
test
and
adc
dec
mov
and
cmp
sbb
jns
push
lahf
and
mov
push
(bad)
adc
pushf
in
xchg
inc
int
push
cmp
dec
push
add
gs
ret
add
add
sti
push
fisubr
xlat
les
add
push
ds
ficom
adc
in
cdq
push
ret
lahf
jmp
lock
inc
stos
test
mov
jmp
add
or
pop
adc
jl
dec
sbb
mov
dec
push
push
mov
push
pusha
sahf
mov
mov
test
mov
pop
inc
push
jb
movs
mov
mov
bound
pause
mov
jb
in
pop
data16
xor
jmp
mov
cwde
int
jp
fdivr
js
pop
sub
sti
inc
add
mov
or
add
cmp
or
mov
scas
xchg
xor
sub
jnp
jp
cwde
rcl
push
mov
jne
pop
cmc
enter
and
xor
repz
sbb
dec
and
enter
inc
xchg
jbe
mov
ss
loop
mov
add
dec
es
ins
cwde
iret
sub
inc
mov
imul
cmp
jae
(bad)
cld
mov
mov
sub
sbb
fcom
enter
ja
mov
test
imul
push
movs
adc
es
mov
or
adc
adc
cmc
xor
push
and
ret
or
cmps
lock
xsha1
cmps
or
inc
inc
fcom
jae
cmps
jge
int3
cld
jnp
inc
cmp
aas
mov
or
pop
adc
sbb
pop
imul
adc
test
popf
push
and
sbb
sub
out
cmc
mov
mov
sti
or
sbb
popf
stos
jno
mov
aad
(bad)
ret
(bad)
mov
dec
test
jge
fild
push
push
pop
xor
inc
ss
enter
or
xchg
cmps
jp
test
push
(bad)
sbb
scas
popa
adc
add
mov
push
inc
jbe
je
cmps
xchg
mov
cwde
mov
in
test
jno
cmp
xor
jle
bound
add
adc
aaa
and
adc
jmp
test
pop
mov
fiadd
je
mov
push
xor
push
mov
imul
or
stc
stos
repz
mov
xchg
sahf
shr
or
and
inc
(bad)
mov
xor
mov
cs
sbb
shl
jmp
xchg
gs
and
cmp
das
gs
retf
popf
or
jecxz
jae
lods
outs
jge
cdq
movs
pushf
pop
and
stos
or
mov
imul
xor
add
jl
mov
add
repnz
mov
aaa
aaa
pushf
fild
shl
inc
(bad)
iret
xchg
mov
adc
lods
(bad)
sbb
xchg
scas
sub
xchg
and
adc
add
popa
cli
mov
cmp
mov
icebp
and
imul
lods
dec
adc
vpextrw
lds
fst
retf
pop
and
adc
lods
push
cs
fcmovnb
sub
xchg
outs
rcr
lea
pop
lods
cmp
div
pusha
stos
push
pop
imul
std
into
clc
(bad)
jp
daa
and
not
push
push
mov
leave
jne
add
and
push
in
jne
adc
test
shr
xor
nop
sbb
jno
rcl
inc
mov
hlt
adc
lahf
pusha
gs
mov
adc
pop
ins
jle
std
push
mov
mov
dec
or
add
into
sahf
ret
mov
cmp
jae
dec
xchg
call
fiadd
psubusw
mov
(bad)
and
repz
imul
neg
jecxz
out
jmp
push
pop
jnp
rcl
in
stos
lds
mov
stos
sbb
or
inc
bnd
push
jl
adc
lds
repnz
inc
xor
sti
fdiv
pop
(bad)
inc
ins
xor
add
scas
in
and
mov
or
add
mov
sahf
outs
int3
fs
shr
in
and
mov
cmp
nop
mov
cld
js
lds
xchg
(bad)
mov
jb
mov
sbb
rol
fidivr
mov
or
loop
cld
jbe
mov
adc
daa
mov
mov
dec
(bad)
fs
jge
or
out
lea
pop
cmp
jns
movs
inc
outs
popf
call
xchg
inc
(bad)
sbb
int3
hlt
pop
(bad)
shr
je
cmps
retf
cli
or
das
pop
or
dec
xchg
or
jae
push
push
imul
loope
sub
xlat
mov
mov
cmp
(bad)
sub
mov
xchg
repnz
arpl
imul
sbb
mov
push
test
cmp
xchg
imul
cld
xchg
push
outs
stc
aad
cld
jns
test
xchg
imul
pop
xchg
push
shl
adc
push
fwait
arpl
out
dec
(bad)
sbb
fxch
push
mov
jmp
push
test
adc
lahf
push
push
inc
mov
add
scas
shl
(bad)
cmps
push
sti
and
mov
adc
shr
popa
rol
movs
jle
mov
(bad)
call
xchg
pusha
inc
lods
in
inc
push
in
xchg
mov
(bad)
or
push
jno
hlt
pop
pushf
xor
cmp
test
dec
mov
jmp
push
add
inc
dec
and
ror
push
mov
push
(bad)
lods
push
dec
div
sbb
adc
mov
pop
jle
pushf
fwait
sub
cmp
jg
fneni(8087
lds
call
dec
mov
dec
cmp
xchg
cs
cmp
jmp
jge
test
add
adc
repnz
and
cmp
cli
fucomi
push
retf
js
out
hlt
rol
loope
sbb
int
lods
jecxz
add
fnstcw
jmp
(bad)
mov
pop
push
mov
repnz
adc
push
ja
mov
dec
out
arpl
imul
arpl
mov
in
xor
xchg
cmp
mov
adc
jne
xchg
outs
cmp
mov
bound
xor
test
sub
fisttp
aam
jns
push
pop
test
dec
sub
mov
push
or
icebp
lahf
pop
loope
lahf
test
inc
or
loopne
push
adc
add
dec
xchg
imul
dec
dec
dec
ja
aad
or
jno
pop
aaa
mov
cmp
xor
sbb
jle
fld
dec
add
jb
popf
cmp
mov
cmp
stc
stos
dec
mov
test
aad
inc
test
and
and
mov
sub
mov
out
mov
pop
or
or
loopne
cmp
in
scas
xchg
lods
sub
inc
or
pop
or
out
push
xor
stc
push
js
and
dec
jo
loope
mov
aam
jg
out
xchg
jne
mov
xor
imul
inc
jno
adc
add
jl
pushf
sar
or
jl
push
(bad)
push
jmp
outs
es
xchg
jae
loop
sahf
ds
int3
movs
jae
pusha
out
(bad)
fcomp
dec
lahf
push
idiv
iret
jmp
fist
icebp
push
es
or
int3
pcmpgtw
xor
dec
pusha
mov
mov
push
or
pop
add
jp
out
icebp
cs
daa
ret
hlt
gs
(bad)
pop
jb
es
pop
mov
fbstp
das
mov
inc
in
add
push
add
sar
jge
dec
inc
outs
out
push
jp
mov
neg
jmp
movs
jge
adc
xchg
daa
fwait
push
lahf
jge
jle
push
push
sbb
xchg
jge
mov
mov
push
(bad)
je
add
push
sbb
mov
jl
mov
test
dec
mov
loope
(bad)
stos
xor
movs
inc
xlat
push
add
lds
iret
sbb
sub
aam
inc
cld
pop
dec
sahf
fist
adc
push
mov
jb
(bad)
push
sti
icebp
jns
std
(bad)
mov
cmps
mov
movs
mov
sti
aas
cmc
mov
push
rdtsc
jnp
pop
(bad)
or
push
loopne
loope
mov
lahf
rcl
loope
and
mov
lock
scas
add
jne
inc
dec
push
and
dec
out
mov
mov
inc
mov
bnd
xchg
and
ins
stc
mov
jb
xor
arpl
rol
inc
inc
popa
jmp
xchg
cmp
rol
leave
sbb
bound
xchg
fist
std
cli
pop
sbb
mov
adc
sbb
fcomp
pop
xchg
cli
test
out
inc
enter
leave
loop
sbb
xchg
ins
pop
or
sbb
loop
inc
shl
cdq
repz
sbb
jnp
scas
sar
mov
clc
pop
in
lahf
aad
mov
ja
stos
icebp
add
popf
add
repz
outs
loopne
clc
jno
lahf
add
shr
inc
adc
out
les
pop
repz
popa
mov
inc
out
shl
xchg
enter
bound
je
loope
icebp
int3
and
mov
sbb
sub
jno
cmp
test
sub
cmp
cs
cwde
mov
aad
div
jmp
mov
loope
in
inc
dec
inc
popa
fisttp
and
cs
pushf
inc
(bad)
mov
cwde
mov
xchg
sti
lods
gs
cmp
xor
or
loopne
mov
aam
inc
std
outs
xchg
scas
xchg
fimul
dec
or
dec
loopne
xchg
sahf
gs
test
cs
inc
push
xchg
arpl
sub
xchg
aaa
(bad)
xor
xchg
mov
jae
mov
pusha
xor
shr
add
ret
and
mov
into
jmp
rcl
(bad)
ja
push
mov
jne
jne
loope
pop
je
in
jbe
pop
xor
inc
int
arpl
es
dec
cmp
adc
cdq
dec
jmp
sub
ss
pop
or
sub
xlat
inc
adc
mov
add
cs
in
retf
hlt
call
xlat
mov
adc
mov
out
ds
xor
jg
fs
in
jp
cmp
jmp
or
push
dec
int
leave
cmp
mov
or
dec
out
sub
push
cmp
loope
mov
inc
mov
(bad)
mov
sbb
adc
adc
push
jae
mov
xchg
cmps
push
pushf
rcl
sbb
push
pop
addr16
sub
mov
and
sub
lds
lea
js
sbb
xchg
push
jl
dec
xchg
xchg
loope
inc
or
cmps
ss
test
ficom
inc
mov
mov
into
rol
jmp
xor
mov
punpckhbw
xor
cmc
adc
add
repz
push
jns
push
jo
jae
adc
adc
inc
xor
ss
ja
pusha
leave
sub
(bad)
mov
jno
movs
outs
scas
stc
cmp
int
lea
push
sub
pop
movs
mov
mov
add
cmp
outs
mov
fstp
pop
add
leave
push
loope
jge
stos
push
jnp
mov
dec
push
nop
fwait
jne
dec
or
adc
xor
xchg
push
pop
movs
or
das
fdiv
cmp
or
enter
sbb
cmp
inc
mov
mov
mov
repz
dec
cwde
std
cmp
inc
fisttp
mov
fisttp
sti
enter
mov
pop
stos
imul
aas
push
ins
(bad)
mov
sbb
mov
movsx
movs
add
fs
fld
sbb
rcl
nop
cmp
pushf
clc
in
adc
cs
push
(bad)
jae
scas
push
loopne
sub
out
cmp
imul
jmp
les
cwde
xchg
(bad)
sbb
in
mov
add
push
and
sub
test
and
loop
dec
push
mov
clc
pop
push
adc
cmp
jbe
mov
jno
pushf
ins
mov
imul
jo
jbe
ret
popf
or
pusha
add
push
mov
hlt
movs
sti
inc
ror
dec
push
sub
test
out
sbb
fisub
cmp
adc
xchg
add
cmp
clc
fs
lea
mov
(bad)
mov
push
jno
jns
jno
sbb
cmp
imul
mov
ins
ror
xchg
adc
test
mov
es
adc
test
popf
mov
push
in
out
in
jb
mov
aas
push
enter
int3
dec
jmp
movs
out
loop
aam
pop
xchg
data16
loop
stos
addr16
cmp
mov
sbb
daa
mov
movs
aas
sub
daa
xchg
fild
nop
icebp
pop
inc
ins
cmps
ret
and
inc
idiv
xlat
mov
sub
gs
ficomp
push
fmul
cld
mov
push
(bad)
push
jns
mov
fwait
inc
push
jg
nop
adc
in
inc
dec
xor
add
xchg
in
mov
stos
into
xchg
mov
or
push
xor
mov
mov
imul
jns
fwait
loope
jg
not
xchg
xchg
sub
in
adc
pop
mov
arpl
jb
mov
mov
fcomi
and
or
out
lock
mov
xchg
call
bound
sahf
adc
mov
cmp
pop
jg
scas
pop
pop
add
aaa
jbe
mov
cmps
mov
push
(bad)
into
push
inc
into
mov
call
cmp
aam
shr
pushf
or
pop
lahf
push
ds
movs
inc
inc
cwde
enter
out
add
mov
test
and
jmp
out
mov
or
dec
cmps
mov
sti
out
or
push
sar
xor
in
je
js
out
jnp
ins
mov
jg
mov
pop
mov
mov
retf
push
idiv
add
push
out
stc
mov
mov
aaa
adc
or
pushf
push
les
xor
inc
nop
adc
xchg
fst
and
mov
sub
cmps
sub
das
inc
jb
mov
test
call
into
in
int3
push
pop
nop
fistp
(bad)
mov
pop
and
mov
es
imul
mov
jg
popf
sub
es
mov
mov
jmp
stos
push
adc
cmp
inc
adc
mov
jg
bound
in
enter
xchg
scas
in
cmp
lds
scas
inc
lahf
outs
sub
movs
add
test
mov
(bad)
in
pushf
int
sbb
push
jp
mov
push
sbb
fidiv
inc
jg
inc
mov
pop
out
es
mov
pop
(bad)
je
popf
xchg
xchg
jne
and
les
mov
test
jp
or
mov
sbb
mov
loopne
cmp
lahf
ins
cli
rol
or
mov
jb
jns
mov
push
(bad)
bound
nop
imul
cmp
call
popa
mov
cs
inc
cmp
cmp
iret
gs
mov
jg
dec
sub
dec
mov
nop
loope
lods
bound
repz
mov
pop
xchg
aad
shl
std
fisttp
inc
ins
mov
mov
cmp
inc
or
push
jle
sub
push
lea
daa
fcomp
out
dec
dec
(bad)
and
ja
cmp
adc
bound
add
push
aam
inc
sub
call
cmc
sub
sbb
and
cmp
pop
(bad)
in
jne
xor
and
add
(bad)
ds
jl
(bad)
fiadd
sahf
sub
jmp
sbb
std
aad
lods
mov
jmp
rcl
hlt
aaa
push
mov
rol
jno
ret
adc
and
jmp
pop
mul
xchg
jg
addr16
mov
fiadd
mov
dec
gs
adc
sbb
cmp
in
jl
dec
stc
ror
lods
xchg
fwait
push
sti
aas
test
arpl
or
stc
pop
mov
jo
or
jle
int3
cmp
dec
add
movs
mov
push
rcr
push
mov
data16
sbb
fincstp
mov
imul
pop
daa
cmps
jo
mov
sub
jecxz
sti
(bad)
test
rcl
add
sbb
push
fnstenv
sub
push
mov
dec
sbb
mov
cli
xor
(bad)
cmp
icebp
jmp
inc
mov
xchg
test
shl
sbb
es
jmp
inc
(bad)
add
jno
xchg
into
mov
in
fwait
add
add
je
div
dec
add
mov
sbb
mov
mov
xchg
hlt
xchg
lea
test
in
jl
add
mov
mov
mov
movs
push
ss
inc
aad
push
push
mov
(bad)
stos
stos
dec
sub
or
ins
and
push
or
cli
adc
je
std
and
fidivr
mov
(bad)
jecxz
mul
fiadd
test
retf
mov
jg
into
lods
add
iret
xlat
out
movs
mov
mov
and
aam
iret
icebp
sub
addr16
call
inc
adc
ror
mov
mov
cmp
mov
cmp
sub
push
xlat
xor
or
cdq
push
popf
cs
data16
sub
xchg
into
out
pop
stos
mov
pop
xchg
dec
je
fs
mov
add
or
xchg
mov
sahf
(bad)
inc
cdq
adc
into
in
fsin
xchg
jmp
mov
mov
mov
ja
lock
mov
std
fdivr
cmp
adc
push
inc
jns
dec
addr16
push
and
pop
ds
or
test
inc
in
cmp
xor
out
pop
cmp
pop
jge
aas
dec
pop
data16
pop
(bad)
inc
add
lds
or
shl
push
jo
push
stos
mov
hlt
cs
xor
int
dec
xchg
add
int3
or
inc
repz
inc
bound
dec
adc
outs
xchg
(bad)
lds
push
dec
outs
ins
adc
sub
jl
xchg
jmp
inc
test
das
shl
adc
shl
inc
fbstp
pop
dec
mov
mov
jae
sahf
cmps
lds
imul
jb
sbb
dec
ret
add
mov
jg
cmc
add
fcomp
jno
in
pusha
int
and
jl
mov
into
(bad)
or
out
and
or
lds
test
jne
retf
push
xor
mov
push
adc
and
into
std
add
(bad)
das
push
pop
xchg
leave
imul
and
mov
jne
rcr
push
push
call
stos
sbb
dec
inc
and
adc
es
mov
mov
jno
pop
fsubp
in
int3
hlt
scas
sbb
cwde
lahf
or
scas
je
xor
adc
xor
je
fsubr
pop
fsub
mov
or
call
aas
pop
xchg
gs
or
enter
pop
imul
(bad)
arpl
mov
pop
sbb
sbb
adc
sahf
and
xor
sbb
aad
mov
fs
(bad)
sbb
rcr
mov
lods
nop
std
inc
std
mov
pushf
or
inc
cmp
mov
sti
cmp
pop
test
aas
xor
push
push
pop
xchg
rcl
push
shl
mov
cld
jbe
jo
xchg
enter
ins
add
push
fisttp
fcom
push
add
test
inc
addr16
mov
jl
icebp
test
dec
push
jb
ss
in
imul
add
jns
dec
jecxz
out
jbe
sub
mov
inc
rcl
jb
sar
shl
mov
scas
out
xor
mov
ror
hlt
test
(bad)
xchg
retf
sub
inc
dec
add
movs
ficomp
mov
cmp
xchg
aaa
mov
mov
pop
inc
mov
sbb
pop
data16
das
daa
mov
mov
mov
addr16
(bad)
inc
lea
or
adc
sbb
shl
loopne
lods
dec
into
mov
bound
fdivr
fnstcw
das
aas
(bad)
add
int3
ds
jl
test
gs
mov
scas
pop
leave
fwait
ds
sub
jbe
enter
xor
sbb
xchg
(bad)
or
or
add
push
jno
xor
pop
and
xor
test
(bad)
dec
inc
cmp
fwait
daa
dec
jb
sub
arpl
pop
test
jge
stos
xchg
repnz
dec
movs
jne
movs
sbb
hlt
(bad)
test
cwde
xor
stos
or
imul
or
ins
xor
push
pop
sahf
daa
stos
sbb
fsub
mov
leave
loopne
push
push
dec
cli
loope
pop
add
cmps
iret
fdivrp
xor
sti
lahf
push
xchg
mov
popf
sbb
sahf
pusha
in
or
sub
xor
jmp
cmp
mov
and
add
loopne
xchg
(bad)
push
out
aaa
push
dec
ret
lahf
(bad)
ins
aad
cmp
(bad)
aam
cmp
(bad)
adc
xchg
repnz
ficomp
push
retf
data16
lods
push
ins
mov
int
test
pop
mov
cmc
std
mov
push
pop
test
outs
(bad)
add
mov
cmp
adc
jns
and
test
sbb
enter
jmp
cmp
pop
cmp
mov
outs
xor
nop
mov
(bad)
dec
and
sahf
lahf
or
inc
int3
aas
mov
sbb
add
jnp
retf
push
adc
xchg
jg
in
inc
imul
fwait
out
idiv
test
repz
scas
fldenv
push
push
into
jl
pop
xchg
xchg
shl
pop
pop
into
mov
fs
sub
cmp
scas
fist
adc
jmp
pop
out
cmp
jge
scas
gs
std
or
(bad)
adc
jo
in
mov
push
imul
mov
pusha
sub
loopne
push
leave
sbb
and
xor
dec
inc
gs
outs
xor
in
cmp
jmp
scas
shr
test
mov
jo
adc
cwde
inc
inc
push
mov
stos
push
add
fisttp
sbb
push
pusha
int3
adc
test
jne
outs
ss
test
mov
pop
std
mov
and
imul
add
add
clc
test
sti
pop
push
sahf
test
in
mov
add
iret
sub
push
popf
(bad)
mov
loop
mov
dec
mov
jge
sbb
dec
out
nop
loope
xor
ss
sub
sbb
xor
fmul
dec
mov
mov
test
xchg
inc
in
lods
cmps
shl
lahf
dec
dec
fucomi
push
sbb
mov
adc
xchg
add
rcl
push
andps
sub
ror
adc
and
loopne
adc
fcom
push
jno
sbb
mov
outs
lods
lods
jle
xchg
fcmovnbe
add
mov
test
cld
add
cmp
imul
mov
pop
cmps
repz
iret
int3
mov
je
pop
imul
fdiv
and
sub
stos
ins
jne
dec
nop
mov
jp
iret
mov
xlat
(bad)
aad
mov
pushf
loop
dec
pop
jle
in
enter
(bad)
shr
adc
in
mov
jecxz
pop
xchg
xor
jp
pop
rcr
fidivr
push
jbe
push
popa
pop
mov
cli
cmp
cdq
mov
js
aam
std
dec
(bad)
adc
sub
add
push
push
fwait
mov
in
pop
pop
in
test
pop
inc
inc
add
mov
imul
pop
jg
mov
push
data16
call
ds
mov
daa
test
mov
mov
inc
xor
push
xor
pop
bound
and
jb
popa
out
dec
in
sti
(bad)
or
sbb
or
hlt
push
mov
adc
shr
push
iret
mov
mov
sar
inc
rcl
adc
adc
pop
js
push
sbb
test
adc
scas
mov
push
xor
rol
cdq
mov
pop
xchg
jl
fwait
adc
mov
xor
sbb
pop
pop
idiv
cmp
mov
cmps
mov
sub
loopne
sahf
icebp
sub
sbb
ins
call
dec
pushf
and
push
xchg
inc
(bad)
or
or
mov
pop
dec
pop
inc
jno
jmp
xlat
dec
int3
(bad)
adc
inc
les
cmc
movs
mov
and
or
and
leave
jg
inc
call
ins
dec
mov
push
cs
ret
inc
cmp
cmp
push
add
in
data16
jmp
jnp
dec
(bad)
mov
cmps
mov
fist
push
fisub
outs
movs
fst
push
fisttp
repnz
pop
scas
jmp
(bad)
test
bound
loope
mul
inc
icebp
adc
div
adc
out
call
jns
adc
js
out
push
fisubr
mov
push
mul
ret
pop
pop
adc
cmp
push
lods
je
add
cmp
cmp
push
push
movs
or
aam
jmp
cmp
adc
clc
xchg
icebp
mov
fwait
push
and
ret
into
das
cmp
js
es
data16
sub
mov
mov
scas
dec
fwait
push
fwait
aad
inc
xchg
cmps
rcl
xlat
adc
adc
jmp
sbb
clc
dec
jnp
mov
dec
inc
and
sub
movaps
push
dec
add
bound
inc
cmp
sub
sub
sbb
dec
and
retf
repnz
(bad)
ficomp
mov
xor
push
push
xor
in
inc
and
mov
repz
shl
pop
dec
jmp
test
imul
std
pop
das
ins
fadd
xor
nop
dec
je
mov
shr
pop
and
fwait
and
(bad)
mov
xchg
ins
cmp
mov
inc
fdivr
dec
ficomp
xor
call
xor
scas
cmp
sbb
adc
clc
test
mov
aas
aaa
stos
jg
or
push
call
mov
push
popf
fsub
xchg
xor
nop
lods
imul
cmp
mov
es
sbb
shl
imul
in
adc
pop
xchg
add
in
sub
(bad)
retf
pcmpeqw
icebp
pop
push
and
jg
add
pop
arpl
ret
ret
jae
sbb
pop
ins
mov
jo
pop
fst
dec
jmp
sahf
test
xor
and
call
sti
sub
xor
push
mov
aas
popf
loop
es
dec
and
dec
and
push
xchg
add
dec
out
sbb
sub
jp
je
pop
jbe
(bad)
outs
pop
mov
inc
inc
xchg
sub
mov
mov
xor
push
pop
push
mov
mov
test
inc
sbb
add
fiadd
clc
jbe
push
push
dec
or
push
test
les
add
es
jo
call
jp
daa
aas
scas
or
out
or
aam
mov
adc
into
mov
lds
hlt
push
adc
pop
out
pop
xlat
ficom
fidiv
mov
pop
pop
test
loop
jae
xchg
mov
add
cli
cdq
pop
repnz
aas
push
pop
or
fmul
inc
cld
cmp
sub
pop
xor
call
mov
shl
mov
dec
test
dec
push
mov
sbb
pop
pop
popf
cld
out
je
push
xchg
cmovnp
fs
mov
mov
dec
shld
mov
scas
pop
mov
sbb
(bad)
ss
push
mov
int3
xchg
jge
jle
ret
add
cwde
pusha
(bad)
or
stos
inc
pushf
nop
xor
push
call
push
inc
jne
mov
xlat
mov
cli
mov
nop
aam
dec
xchg
cmp
pusha
sub
test
inc
cwde
cmps
ins
push
sub
xchg
pop
(bad)
sub
cdq
pop
mov
(bad)
mov
mov
xor
jg
add
cmp
dec
mov
sub
cmps
cmp
xor
loop
push
retf
or
nop
lea
inc
fimul
cmc
pop
sbb
jg
jno
cld
repz
fcomip
test
stc
les
xor
or
aas
(bad)
pop
jae
pop
(bad)
in
inc
adc
dec
out
repz
and
push
test
retf
add
push
ror
leave
fimul
ins
mov
aaa
mov
jle
or
rcl
cmp
aaa
mov
mov
dec
(bad)
mov
mov
xor
pop
sbb
ret
iret
sahf
pop
loope
or
lahf
sub
pop
stos
in
cld
nop
lahf
and
es
mov
pop
push
fisub
jno
fistp
int3
clc
ja
retf
mov
aad
stos
call
adc
fild
aam
(bad)
loopne
push
pop
dec
rcr
inc
jecxz
inc
int3
in
mov
push
mov
mov
fist
push
pop
and
aaa
popf
sub
ret
adc
cmp
mov
(bad)
pusha
paddsb
imul
mov
cmps
ins
jp
cld
sar
dec
ror
das
jbe
adc
imul
inc
jne
sbb
dec
dec
jb
and
sub
sbb
rcl
mov
and
and
dec
jno
jmp
add
mov
or
push
(bad)
pop
dec
fisub
push
imul
mov
cmp
repnz
and
daa
xchg
jb
(bad)
jno
or
cmp
movs
push
xor
mov
fdiv
iret
icebp
xchg
cmp
mov
and
xchg
cmp
mov
inc
jbe
cmp
retf
pop
push
cmps
ins
dec
and
cmp
mov
aad
repz
cmc
(bad)
icebp
hlt
mov
inc
movs
fnstenv
cmp
adc
retf
inc
lods
rol
pop
and
sub
cmp
sbb
loop
hlt
ins
es
mov
inc
push
mov
sub
aam
sub
xchg
test
add
pop
sbb
sub
sbb
loopne
ss
outs
daa
fs
and
adc
bound
(bad)
gs
cmc
pop
mov
xor
mov
xor
sub
mov
fmulp
call
aas
dec
fmul
ret
or
cmp
inc
cmp
sub
inc
sub
mov
xchg
shl
pop
pop
bndldx
add
outs
std
add
xchg
(bad)
mov
movs
bound
popa
dec
imul
or
and
pop
ds
adc
fcmovbe
fsubr
cmovb
int
retf
shr
ffreep
mov
adc
lods
pusha
cli
test
mov
pushf
test
rcr
mov
out
stc
or
jg
pop
addr16
scas
jmp
hlt
inc
ins
push
ds
outs
jmp
pop
das
(bad)
(bad)
cmp
dec
adc
lods
push
push
pop
mov
cs
xchg
push
aam
mov
mov
arpl
xor
out
popa
loope
sbb
fbstp
lods
xor
cs
dec
scas
jb
jae
in
pop
mov
fcomi
dec
cmp
dec
into
je
out
fs
pop
or
popf
push
pop
leave
icebp
(bad)
jecxz
lods
add
je
stos
or
cli
xchg
mov
mov
outs
sub
mov
xor
pop
push
aas
(bad)
repnz
cld
pop
lods
inc
lock
popf
je
call
adc
lds
or
xor
sbb
icebp
mul
or
push
sti
mov
add
push
in
xor
dec
jo
pop
add
das
shl
mov
xchg
sub
cmc
test
rcr
add
or
jne
inc
xchg
sub
(bad)
repnz
add
out
cmp
mov
or
sbb
outs
loope
cld
xchg
inc
pop
jo
xor
dec
or
out
or
dec
repz
call
(bad)
dec
lahf
and
movs
inc
inc
adc
(bad)
pushf
in
test
test
and
movs
or
and
lahf
jp
or
test
jno
popf
pop
or
scas
pop
mov
cmps
cwde
adc
xchg
test
cmps
mov
push
(bad)
jp
mov
inc
sub
mov
repz
ins
pop
mov
mov
outs
xchg
mov
sub
jae
neg
outs
inc
dec
xor
pop
ret
and
xchg
test
cmc
shl
mov
enter
mov
call
or
ja
(bad)
jae
sar
adc
xor
mov
cmp
xchg
mov
dec
add
popf
and
xor
cld
dec
mov
hlt
cmps
icebp
jnp
nop
push
pop
je
ret
jne
cs
cs
movs
pop
jo
dec
fidivr
xor
aas
call
mov
mov
mov
icebp
dec
outs
call
push
gs
mov
stc
icebp
mov
movs
stc
pop
cmc
adc
mov
js
xor
out
dec
lods
lods
jbe
int
sub
(bad)
movs
xor
mov
push
int
sbb
jmp
ret
adc
xchg
cwde
push
inc
sbb
hlt
call
icebp
dec
fst
mov
cmp
mov
push
test
call
mov
pop
mov
xchg
sub
aaa
jns
ja
nop
sbb
xor
pop
(bad)
mov
les
push
mov
in
stos
pop
sub
aad
mov
mov
add
dec
jb
push
iret
xchg
inc
push
sti
jae
lods
pop
in
xchg
call
arpl
sub
call
std
lods
scas
sub
fwait
push
fs
fwait
mov
call
sbb
sbb
add
pushf
push
add
jp
aad
sub
xor
and
fmul
aas
xchg
in
(bad)
test
cmp
jne
movs
add
outs
or
lods
fisubr
jno
mov
sub
sbb
sub
cmp
or
push
mov
dec
inc
lock
bound
pop
sbb
iret
addr16
lods
xor
enter
jo
ins
ins
stc
(bad)
adc
push
sub
dec
jmp
mov
sti
lea
ins
or
in
jl
addr16
inc
push
scas
hlt
inc
xor
mov
mov
add
(bad)
pusha
jle
aam
sub
push
dec
ret
jmp
aaa
cmp
das
or
cmp
pop
call
sbb
mov
mov
push
sub
std
retf
add
xchg
sbb
push
push
inc
xchg
(bad)
aam
ficom
aas
mov
mov
je
aad
inc
cmc
sub
in
mov
push
dec
adc
inc
(bad)
repnz
add
popa
sbb
repnz
push
fst
fimul
arpl
loop
cld
test
enter
ret
or
mov
jg
adc
mov
sub
mov
data16
out
mov
pop
das
stos
out
mov
in
inc
ror
pop
add
rol
xor
xchg
inc
sbb
outs
cmp
pop
inc
add
lea
add
mov
and
jno
xor
mov
sub
sub
(bad)
arpl
sub
in
fdiv
mov
pop
xlat
add
sar
mov
sbb
jecxz
aad
xor
aam
retf
cli
inc
sbb
loopne
xchg
mov
xchg
scas
mov
xchg
stos
xor
mov
add
not
inc
xchg
mov
sti
(bad)
bound
xchg
rcr
data16
(bad)
dec
in
jo
sub
inc
out
inc
repnz
xor
movd
out
enter
js
push
jb
iret
jmp
sub
fdiv
cwde
push
les
sbb
mov
retf
sub
ds
add
loop
inc
and
or
icebp
dec
repnz
jno
in
ins
and
in
lods
cmp
xchg
dec
cmp
xor
sub
mov
xor
mov
out
sahf
retf
cmp
and
or
pop
test
cs
cmp
scas
jnp
mov
and
inc
fistp
ret
push
stc
out
mov
in
adc
leave
adc
inc
mov
mov
lock
fwait
inc
imul
pusha
pushf
pop
or
sub
(bad)
std
xor
movs
and
out
or
or
outs
pop
jecxz
add
in
adc
into
rol
mov
mov
rdtsc
lds
data16
cmps
add
sbb
(bad)
inc
test
cmps
shl
sub
xchg
jne
xor
lea
daa
jmp
dec
xchg
add
and
rol
mov
add
push
cmc
retf
call
inc
or
or
adc
mov
xchg
sbb
fst
sti
dec
mov
push
push
push
(bad)
jp
fs
idiv
icebp
cmp
rol
int3
cmp
loopne
aaa
inc
(bad)
retf
xchg
outs
pop
xor
std
cmp
ins
mov
sti
adc
mov
mov
sbb
fnsave
lods
sbb
jge
and
sub
or
push
add
movs
pop
lods
cmc
sub
and
imul
pop
rcl
cwde
sub
ret
push
mov
adc
pop
or
sub
pop
or
sub
leave
or
(bad)
in
sub
dec
inc
pop
(bad)
push
xchg
scas
sbb
test
(bad)
das
fsub
es
push
fstp
repz
cs
pop
hlt
dec
pop
inc
pop
jo
js
(bad)
movs
js
mov
hlt
jmp
sub
aam
fs
xor
xchg
in
retf
xor
or
mov
jmp
sbb
push
retf
arpl
mov
out
setge
js
gs
lahf
fimul
iret
(bad)
jecxz
pop
jle
js
mov
std
out
shr
push
jmp
cmps
jmp
push
sub
pop
mov
cmp
or
push
loopne
pop
icebp
cmp
xchg
mov
xchg
sbb
in
sub
popf
shl
repz
jne
(bad)
adc
jge
mov
adc
or
mov
fisub
cmp
push
mov
test
test
fadd
fbstp
mov
sbb
lods
bound
inc
mov
fs
sbb
movs
aam
mov
push
sbb
in
ret
mov
retf
mov
adc
adc
in
fld
movs
pusha
ds
hlt
retf
pop
aam
arpl
xchg
dec
(bad)
call
scas
jno
test
das
or
addr16
sub
dec
call
add
(bad)
xchg
pop
sbb
bound
ffreep
retf
rcl
repnz
or
cmps
pop
pop
(bad)
jg
pop
cwde
pop
imul
leave
pop
add
(bad)
inc
in
jge
icebp
shl
jmp
or
inc
ins
pushf
push
fwait
leave
lods
cmp
inc
(bad)
fisttp
outs
js
and
push
outs
adc
aam
shl
inc
cli
mov
push
leave
xlat
call
push
lea
es
pop
sbb
sbb
dec
out
scas
xchg
ret
or
mov
jno
sbb
fld
rol
push
out
cld
icebp
fbstp
cmp
call
sar
mov
pop
cmp
and
fbstp
bound
fdivr
daa
sti
daa
or
jmp
shl
xor
(bad)
clc
into
bound
in
pop
inc
inc
cmp
and
in
inc
(bad)
jg
scas
fadd
fsubr
push
xlat
ja
jmp
cdq
dec
sub
inc
inc
cmp
sbb
rol
inc
adc
je
pop
and
call
pop
sbb
sbb
cmp
pusha
push
sub
jmp
out
push
jb
mov
data16
pop
jl
daa
pop
mov
push
and
sub
xor
cwde
sahf
xor
je
sub
cli
fcom
outs
mov
sbb
pop
test
mov
lods
dec
frstor
outs
pop
dec
fbstp
cmp
fidiv
cdq
std
and
ss
aad
rol
mov
int3
ret
repnz
aas
sub
mov
aas
sub
dec
or
pop
sub
cld
push
xor
iret
mov
mov
and
sbb
std
hlt
pop
jo
ret
out
imul
push
outs
test
aaa
cmp
fisubr
or
xchg
ss
fadd
add
lods
mov
jg
xchg
fwait
in
jb
dec
xchg
xchg
imul
int3
pushf
gs
stos
and
jp
(bad)
fmul
ds
inc
out
mov
cs
retf
leave
mov
cmp
dec
nop
push
dec
pop
fidiv
scas
pop
cmovno
out
sbb
ins
imul
(bad)
into
cmp
mov
daa
data16
test
cwde
push
or
push
test
jecxz
mov
pop
stc
inc
paddb
cli
dec
hlt
movs
(bad)
popf
aas
xlat
mov
aas
mov
jnp
cmps
push
in
xchg
add
call
push
xor
mov
in
popa
xor
pusha
cmp
movs
mov
ret
addr16
or
pop
inc
and
test
imul
xor
dec
aad
rcr
inc
das
and
sbb
adc
mov
push
hlt
adc
pop
mov
push
ds
sbb
fmul
xchg
and
xchg
mov
xor
call
add
mov
test
or
jecxz
inc
(bad)
fild
cmps
sbb
shl
aaa
fnclex
movs
ret
sub
leave
dec
or
xchg
iret
inc
cdq
loope
jmp
sbb
mov
jmp
jns
push
in
mov
and
inc
fs
mov
jae
in
inc
pop
push
mov
push
add
and
pushf
rol
lods
jg
jmp
in
sbb
pushf
pop
mov
xor
enter
inc
mov
(bad)
bound
aam
mov
jmp
jl
mov
std
loop
ret
arpl
imul
rcl
mov
mov
sbb
lods
std
addr16
push
lea
ror
sub
sbb
repz
sub
mov
jmp
and
fistp
std
outs
jo
bnd
dec
cmc
imul
push
cmc
sub
pop
sub
dec
mov
jmp
jns
sub
inc
ror
cmc
mov
xor
xchg
or
adc
xchg
sub
scas
push
sbb
in
xor
fnsave
shr
mov
std
jecxz
movs
loop
std
std
es
mov
(bad)
or
test
outs
push
inc
fs
jg
cwde
mov
inc
sub
pushf
adc
je
das
sub
aad
outs
mov
mov
jns
aaa
sub
or
int
push
call
std
ret
mov
retf
mov
sub
jns
mov
cmc
aam
call
out
fimul
pop
arpl
dec
cli
aad
int3
test
gs
std
addr16
inc
mov
sbb
ja
scas
jmp
in
push
out
sbb
dec
int
mov
ins
xlat
jbe
inc
sub
(bad)
ja
sbb
mov
add
or
push
std
sub
out
fidivr
shl
jmp
ins
fsubr
jmp
jo
aam
call
jnp
or
sub
inc
adc
and
iret
cmp
stc
es
jle
inc
scas
idiv
(bad)
fadd
fstp
push
add
iret
mov
cwde
not
push
dec
push
(bad)
mov
xchg
mov
cmp
pop
aad
inc
jle
das
cmp
jmp
inc
and
xchg
sbb
jae
cmc
jp
push
jns
and
jl
out
mov
imul
inc
das
(bad)
pop
mov
movs
mov
xchg
ds
les
js
inc
shl
or
cmp
cld
cmps
(bad)
shr
and
pop
je
aaa
loopne
pushf
xor
mov
jmp
push
mov
in
sbb
(bad)
repnz
cmp
inc
push
int
cmp
call
or
or
add
xchg
dec
aas
xlat
jns
and
pop
pusha
dec
es
push
xchg
push
lods
prefetch
xchg
iret
sub
rcr
(bad)
mov
in
cmps
jmp
mov
arpl
mov
sub
mov
fcomp
and
jne
pop
inc
xchg
movs
sbb
les
fcom
push
loop
add
add
or
(bad)
repz
fsubr
push
or
mov
xor
mov
in
pop
mov
shl
cmps
call
cld
ins
out
jno
enter
nop
jae
imul
adc
xchg
inc
push
int
push
inc
jecxz
cmp
cmps
mov
and
jmp
add
aad
push
mov
pop
xchg
add
test
push
lods
aaa
push
jb
lock
and
inc
push
jmp
cmps
imul
jno
and
ds
sar
lods
fnstenv
cwde
push
mov
enter
es
in
jg
push
out
xchg
mov
inc
test
retf
out
arpl
pop
leave
shr
(bad)
sub
retf
pusha
loop
and
mov
fcmovne
mov
inc
out
popa
sub
push
retf
xlat
push
(bad)
div
and
push
mov
jg
cld
ret
xor
pop
mov
mov
imul
cld
xchg
arpl
cmp
neg
shl
and
sbb
adc
scas
or
mov
xchg
js
inc
dec
or
mov
jecxz
fwait
mov
adc
out
mov
test
jge
aad
sub
shr
mov
mov
pop
or
daa
(bad)
ret
sub
sub
in
pop
cmps
rol
scas
not
mov
shl
inc
dec
jns
cmp
mov
adc
dec
pop
mov
out
test
fwait
adc
cmc
mov
rsm
out
jae
push
imul
dec
lea
(bad)
push
sbb
inc
push
mov
mov
movs
test
ror
or
fmul
fmul
inc
dec
rcl
cld
fadd
adc
or
loopne
ds
xchg
inc
jg
sub
pop
jmp
aas
outs
rcl
mov
fimul
sbb
add
js
pop
push
(bad)
fwait
dec
paddsw
jae
gs
into
and
push
frstor
outs
dec
sbb
fs
mov
es
mov
arpl
mov
shl
in
xchg
inc
jecxz
dec
jns
sahf
mov
push
(bad)
scas
push
add
cdq
pop
mov
ficom
pop
retf
cmp
fnstsw
out
dec
add
pop
or
ret
cmp
cdq
push
ja
stos
xchg
sub
sub
add
sub
aad
sbb
xchg
cmp
push
inc
push
in
inc
aaa
test
leave
or
cmp
xchg
xor
pop
lods
adc
xchg
jg
cmps
cmp
cmp
xchg
nop
fld
hlt
pusha
sbb
sub
ss
cli
bound
rol
or
or
aas
inc
xlat
and
loopne
or
not
mul
sbb
retf
pop
cmp
push
not
pop
addr16
mov
mov
xor
out
sub
aam
xor
ja
pop
movs
clc
dec
jp
lods
mov
out
rcr
test
adc
call
lds
div
push
(bad)
pop
mov
(bad)
jnp
int3
mov
push
push
cld
inc
dec
sbb
sub
dec
cmp
js
test
aas
adc
hlt
xchg
cld
mov
gs
js
mov
mov
and
pusha
jp
inc
lock
add
cs
in
mov
aam
repz
sub
jmp
(bad)
push
mov
mov
adc
inc
xchg
xchg
out
dec
ins
fdivr
xchg
out
lea
jae
repnz
jp
mov
pop
mov
mov
sbb
mov
xor
sbb
stos
idiv
leave
jg
shr
call
in
fsubr
in
lods
daa
jb
sub
jne
dec
add
out
aaa
cmp
imul
sub
stos
mov
xor
jecxz
push
mov
jns
pushf
add
int3
das
adc
cdq
sbb
rol
and
pop
inc
retf
cmp
jl
mov
add
inc
loope
sbb
sahf
retf
xor
js
pop
push
mov
add
dec
pop
test
aas
sub
add
dec
or
loope
into
xchg
cmp
adc
or
stos
pop
mov
sbb
rsqrtps
inc
add
aam
in
in
add
push
aad
ds
mov
arpl
mov
shl
out
pop
add
or
and
pop
add
dec
fcomp
stos
mov
fmul
test
add
js
xor
xor
popf
fwait
jne
iret
inc
rcl
mov
jo
stc
cmp
jne
cmps
and
fsubp
mov
dec
cs
js
out
xchg
ins
fstp
int3
(bad)
sub
push
fisubr
imul
sti
mov
call
sbb
jnp
cld
jno
mov
push
cdq
mov
loopne
adc
mov
ins
lods
cs
xchg
test
in
jmp
lods
xchg
cmp
mov
std
or
pop
sar
jp
pop
dec
dec
sub
jle
in
sub
pop
test
(bad)
xchg
pop
jo
and
scas
jne
xor
push
imul
mov
aad
pop
adc
sub
dec
xor
ret
add
loop
or
dec
loope
xor
dec
xor
ja
fs
adc
xchg
and
sahf
jp
retf
lods
pop
xchg
in
mov
rcr
inc
fild
rol
mov
mov
shr
sbb
mov
aam
xlat
xchg
in
jns
retf
(bad)
push
xchg
adc
call
mov
test
push
fild
or
rol
add
rcr
ins
adc
mov
xchg
hlt
(bad)
(bad)
mov
mov
int3
fstp
jbe
mov
push
pushf
retf
sub
fsub
mov
and
cmp
repz
push
cld
add
fldcw
push
pop
sahf
lahf
movs
sub
add
repnz
xor
into
sti
pop
jg
mov
call
sub
addr16
sub
cmp
das
jmp
jno
neg
aad
mov
into
sahf
stc
nop
add
lods
jp
mov
leave
mov
addr16
mov
adc
push
dec
and
mov
xchg
cs
mov
sbb
add
js
sahf
sub
aam
rcr
xchg
adc
sbb
(bad)
xor
push
sbb
sub
outs
adc
push
sub
ror
fist
jmp
xchg
outs
pusha
push
dec
xchg
and
addr16
fiadd
in
(bad)
and
pushf
mov
jmp
inc
rcl
lea
test
adc
or
or
mov
push
out
outs
inc
mov
mov
cmp
std
shr
cmp
cmp
dec
retf
pushf
addr16
and
pop
jg
ss
call
jmp
pusha
lock
or
sub
gs
lods
(bad)
aaa
sub
mov
mov
sar
and
dec
les
jo
dec
jnp
cmps
xchg
mov
cli
jbe
pop
cmc
cdq
inc
xor
mov
imul
ds
gs
push
aad
adc
scas
mov
mov
cmp
mov
adc
out
shr
xor
lock
ins
mov
sub
es
outs
adc
rcl
lds
stos
mov
cmovle
mov
jle
mov
pop
jb
cs
int3
mov
mov
fcomp
hlt
(bad)
sbb
cmps
sbb
aam
imul
jl
adc
cmp
cwde
les
or
xchg
adc
cmp
neg
ins
data16
call
inc
fsub
push
xchg
mov
cmp
add
nop
cld
jmp
fdiv
add
retf
mov
ds
into
add
mov
push
inc
xchg
jae
js
xchg
sbb
jno
repz
retf
fs
and
jmp
leave
ret
in
sbb
pop
jb
movs
fldcw
shl
push
cdq
ja
and
pop
shr
repz
fcom
jns
hlt
pop
rol
aaa
test
pop
inc
jno
call
adc
hlt
imul
cli
enter
xchg
cmps
mov
xchg
int
mov
mov
(bad)
fidiv
in
addr16
popf
std
mov
xor
ins
jg
std
push
dec
lea
in
sbb
ja
outs
push
mov
in
cmp
cmp
adc
pop
fild
dec
xor
sbb
mov
call
inc
pop
(bad)
stc
push
xlat
mov
mov
mov
push
rcl
arpl
test
mov
jl
xor
cdq
ret
loop
setbe
xlat
pop
aam
pop
imul
jmp
sub
push
push
mov
mov
cwde
fwait
dec
xlat
xchg
cmp
movs
sahf
jno
fdiv
jmp
in
mov
iret
pop
retf
push
sub
mov
in
push
movs
loope
jge
jb
fmul
adc
dec
pop
add
(bad)
lock
xor
add
loope
adc
test
and
(bad)
jb
scas
xchg
mov
ja
sbb
fiadd
nop
retf
imul
in
mov
jmp
repnz
mov
pushf
dec
or
cli
cmp
inc
push
fiadd
adc
movs
call
mov
adc
ret
cvttps2pi
loop
and
(bad)
test
nop
in
jle
shl
test
scas
mov
call
cli
cmps
xor
or
cmps
mov
int3
mov
mov
sbb
call
(bad)
out
or
fwait
xchg
inc
movs
mov
sbb
rol
movs
mov
push
test
lods
iret
xor
mov
in
pop
outs
adc
sahf
mov
test
aaa
dec
jmp
jo
sub
jb
repnz
hlt
sub
inc
push
jbe
sar
ss
iret
push
cmp
and
dec
lock
jns
push
pop
xor
js
jns
xor
cmp
test
add
mov
dec
iret
sub
out
inc
xor
ffreep
es
mov
mov
jp
or
mov
or
mov
mov
iret
ret
sar
push
ss
inc
(bad)
dec
idiv
in
add
aaa
(bad)
imul
das
xlat
nop
jl
add
mov
cmp
sar
(bad)
fisub
js
jmp
lds
stos
aas
jmp
push
or
sbb
mov
mov
adc
js
add
fild
lods
mov
lock
in
(bad)
xor
pop
push
xlat
adc
test
pusha
(bad)
out
inc
xor
scas
mov
out
popa
dec
addr16
es
inc
inc
sbb
sub
inc
push
imul
test
fild
in
mov
test
xchg
arpl
xchg
stos
sahf
lds
add
xchg
lea
sti
pop
(bad)
aas
jbe
sti
pop
test
sbb
cmp
add
ins
into
test
(bad)
xor
mov
je
add
(bad)
adc
pusha
mov
rcr
movs
add
mov
loop
mov
jno
mov
ins
ds
shl
mov
dec
mov
int
loope
jecxz
les
add
pushf
mov
loopne
mov
psllq
cmp
popf
sbb
retf
jmp
repz
(bad)
lods
mov
shr
shr
stc
sub
xchg
inc
add
jne
fs
(bad)
repnz
dec
outs
mov
or
dec
sbb
mov
mov
push
rol
je
mov
jg
xchg
jns
mov
(bad)
jle
cmps
inc
mov
jle
sbb
sar
mov
repnz
mov
sbb
adc
mov
mov
icebp
jg
cmp
cmp
push
add
imul
add
and
movs
add
cmp
mov
sahf
mov
or
into
add
out
or
and
jo
pop
dec
push
adc
repz
pushf
dec
movs
movs
pop
and
cmp
(bad)
add
not
push
sub
dec
xor
push
fsub
retfw
sub
cmp
inc
and
dec
int3
fs
sbb
jo
dec
movs
dec
popf
clc
div
xor
mov
mov
inc
jae
(bad)
call
xchg
mov
pop
repz
lods
aas
cmps
int
mov
test
aam
test
lods
mov
addr16
push
xlat
mov
cwde
adc
or
aad
cmp
mov
movs
mov
and
nop
xchg
xchg
or
push
into
mov
in
or
in
and
ins
xor
test
mov
aam
and
dec
cmp
push
mov
pop
inc
push
dec
adc
psubb
shufps
ss
dec
in
jmp
loop
push
mov
jge
mov
and
push
cld
sub
(bad)
or
sbb
lahf
test
jge
jmp
fwait
cmp
mov
xchg
popa
push
xor
sub
fst
cmp
test
ja
mov
mov
add
mov
aam
and
jge
sub
out
add
sub
cli
cmc
into
in
ret
push
dec
in
push
test
fwait
push
sub
cmp
dec
es
lods
shl
or
push
mov
call
xchg
or
adc
add
cmp
mov
sbb
and
inc
pushf
push
pop
shl
xor
fadd
push
sti
mov
ret
popa
push
or
cmp
stos
xchg
cmps
xlat
jle
push
shl
fidivr
enter
pop
(bad)
dec
jg
mov
(bad)
and
mov
dec
jo
pop
movs
xor
xor
push
inc
mov
push
sub
dec
mov
cmp
cmp
push
sub
aam
or
movs
xchg
popa
fld
fld
mov
adc
mov
das
scas
fcomip
push
sbb
fdiv
and
cmp
mov
pop
sub
jae
test
fwait
dec
mov
shr
jns
inc
cld
mov
shl
or
inc
push
jge
icebp
int
jne
outs
scas
inc
icebp
icebp
sbb
leave
fs
pop
push
mov
fisub
and
(bad)
push
and
pop
mov
sub
mov
jmp
cmp
inc
xor
pop
ss
and
ds
out
(bad)
xchg
mov
stc
pop
pop
jl
xor
mov
sahf
inc
pop
mov
bound
nop
ins
daa
jle
in
or
vcvtss2si
cmp
jmp
sbb
aas
sub
cmp
or
or
(bad)
arpl
outs
arpl
retf
xchg
sbb
dec
cld
xchg
pop
and
imul
js
pop
aas
hlt
movs
enter
sub
adc
arpl
mov
cmc
mov
jns
push
sub
aaa
pop
sar
cmp
inc
jb
aas
test
xchg
xchg
stos
and
jg
(bad)
in
jecxz
xchg
add
pop
or
test
js
sar
scas
dec
div
dec
jecxz
std
test
dec
inc
movs
inc
aas
inc
movs
and
mov
xchg
in
into
aaa
pop
aam
popf
dec
sbb
test
lods
and
sub
and
pop
mov
jg
xchg
push
pushf
mov
or
mov
pop
jbe
test
call
sub
pop
jmp
sbb
sbb
movs
cmps
rol
jmp
push
cmp
rcl
call
mov
mov
cmp
sbb
fisttp
mov
xor
ds
cmps
jno
call
pop
mov
(bad)
add
popf
mov
sub
out
call
push
xchg
inc
fistp
cmp
scas
jg
cmps
pusha
jg
outs
jns
dec
neg
in
int
jp
push
push
adc
mov
push
add
fisttp
push
push
mov
out
mov
jnp
sbb
or
jmp
(bad)
hlt
imul
fucom
sub
test
mov
loopne
outs
mov
data16
ret
jbe
xchg
cli
mov
les
xchg
lock
(bad)
dec
loope
mov
pop
jno
mov
mov
(bad)
aam
push
lods
outs
add
mov
cmp
mov
mov
lea
std
xor
(bad)
(bad)
pop
sbb
xchg
pop
hlt
iret
test
push
mov
and
loope
(bad)
movs
jle
add
jmp
xchg
pop
mov
jmp
push
stos
and
cdq
or
jne
pop
xchg
inc
fwait
push
sub
xchg
movs
fimul
inc
aas
sbb
js
dec
or
cmp
mov
imul
out
mov
lea
fisttp
jmp
test
(bad)
xor
push
in
imul
jmp
(bad)
mov
adc
pop
mov
dec
(bad)
sub
out
adc
push
pop
mov
je
jb
add
or
or
cs
cmp
sbb
sahf
xchg
cli
repz
outs
sar
and
hlt
fdivr
iret
mov
pushf
in
jg
and
push
mov
mov
and
not
ret
cmc
repnz
add
or
sub
je
and
mov
mov
sub
lahf
iret
push
pop
je
cwde
das
lods
out
ror
mov
hlt
ins
cmps
jge
aas
or
in
xor
stc
fld
fnstcw
dec
fisubr
push
pop
cld
gs
gs
out
mov
or
aam
fisttp
stos
adc
xchg
mov
test
in
push
sbb
or
js
(bad)
xchg
ja
push
jbe
call
fmul
jg
jno
shr
leave
xor
adc
(bad)
shr
adc
add
pop
inc
mov
cmp
mov
or
sbb
daa
rcr
data16
in
std
jp
sbb
sahf
lods
and
ds
stos
fxch
adc
test
stos
les
cld
je
sub
xor
cmp
xor
ds
int3
out
pop
dec
dec
lahf
out
xchg
mov
fisub
jmp
dec
dec
mov
test
popf
popf
shl
lods
cmp
add
outs
add
add
mov
js
(bad)
(bad)
sar
xchg
nop
lds
loopne
ret
(bad)
out
jae
pop
aad
repnz
imul
mov
arpl
sbb
mov
inc
scas
es
push
mov
test
cmc
lods
inc
or
mov
test
adc
popa
push
adc
jge
jnp
push
outs
in
mov
or
gs
push
test
dec
repz
dec
add
retf
std
pop
leave
mov
add
inc
inc
inc
push
dec
enter
lock
xchg
push
mov
xchg
and
pop
xchg
in
dec
out
mov
idiv
ja
xchg
outs
or
xchg
xchg
mov
pop
add
fstp
popa
hlt
lods
inc
aas
dec
mov
inc
mov
aas
cmp
push
xor
dec
jnp
mov
xchg
add
cwde
movs
mov
repnz
in
and
in
test
call
arpl
call
sub
test
add
sbb
sar
ss
mov
pop
ficomp
sub
stos
jb
pop
pop
cmp
movs
xlat
jle
fadd
adc
mov
into
and
and
pop
mov
mov
outs
ins
neg
(bad)
loop
es
xchg
ret
in
dec
push
pop
(bad)
fcmovu
les
loopne
jl
sub
pusha
push
cld
iret
in
pop
(bad)
mov
sub
add
add
shr
iret
ins
cmp
aaa
les
jge
stc
inc
dec
inc
jp
inc
dec
jl
rcr
test
outs
cmp
push
neg
ror
pushf
jmp
pop
mov
mov
adc
and
mov
in
mov
popf
cmp
fisttp
mov
dec
sub
xchg
call
setne
pop
adc
stc
cmp
pop
movs
mov
pushf
(bad)
xchg
jp
fcomi
xor
retf
fisubr
jg
not
xlat
mov
push
mov
push
mov
or
lods
xchg
xor
inc
xchg
loop
mov
xor
(bad)
cmp
mov
mov
pop
test
sar
sub
shl
xchg
xchg
cli
arpl
jno
daa
pusha
fisttp
adc
in
jb
or
mov
inc
adc
aas
test
mov
mov
mov
in
pop
add
push
(bad)
sub
loope
movs
sbb
bound
mov
ret
xchg
hlt
sub
lds
cmps
push
test
out
fldenv
into
pop
or
inc
jbe
icebp
push
adc
int3
mov
sbb
repz
or
push
sub
xlat
and
xor
mov
push
inc
pop
and
into
(bad)
retf
inc
retf
mov
and
adc
mov
xchg
movs
and
aad
push
mov
or
jmp
adc
xchg
adc
movs
scas
mov
lods
pop
out
aam
jb
mov
outs
mov
lods
mov
imul
pop
mov
icebp
dec
scas
xchg
outs
loope
cmps
push
mov
dec
test
out
arpl
push
outs
jle
jbe
push
jo
in
lods
mov
arpl
jb
comiss
inc
add
test
int
bound
jecxz
arpl
(bad)
call
data16
xor
sar
push
rol
sub
lds
or
out
jge
pushf
daa
jae
push
and
fwait
in
push
test
and
fwait
dec
ja
xor
inc
sub
xor
cmp
adc
sub
rol
push
loop
xor
and
sub
aas
pop
push
pop
test
fs
adc
adc
ds
call
scas
popf
mov
nop
dec
(bad)
imul
fdivr
(bad)
xchg
(bad)
gs
shr
push
sbb
mov
ds
mov
mov
or
icebp
aam
push
sbb
scas
xlat
call
cli
movs
xor
fsubr
cld
fidivr
popf
in
adc
add
adc
mov
xchg
xlat
test
adc
inc
dec
enter
mov
push
scas
jbe
cmps
xor
cmp
sbb
mov
mov
sti
lahf
out
cmp
rcr
pop
adc
mov
mov
push
das
adc
scas
fisttp
adc
repnz
jmp
inc
shr
adc
out
xor
sub
shl
lods
inc
retf
or
sti
cmp
mov
inc
scas
adc
sbb
mov
push
std
aam
sub
xchg
inc
fucomip
ins
xor
lods
std
cdq
aaa
push
mov
dec
dec
lahf
cmp
add
call
cli
out
mov
and
pusha
xor
out
xor
ret
xchg
movs
fiadd
or
xlat
(bad)
cmp
int3
xchg
ins
add
inc
push
fs
xlat
(bad)
shr
(bad)
les
jl
sub
test
ficomp
jmp
mov
mov
adc
sub
xor
and
in
xor
call
mov
cli
pop
push
jb
repnz
aam
out
sbb
pop
adc
push
and
bound
mov
cmc
mov
or
(bad)
inc
pushf
fldcw
xor
fucomip
test
retf
mov
lahf
mov
addr16
es
xor
pop
inc
sub
shl
pusha
xchg
pop
xor
in
cmp
loopne
ds
not
sbb
push
iret
add
mov
mov
mov
inc
pop
xor
sub
je
mov
dec
xchg
xor
push
fnstcw
xor
in
and
loopne
dec
mov
mov
sub
adc
xlat
loope
mov
sar
push
test
daa
mov
cmp
push
or
jge
pop
leave
or
mov
shr
bound
fidivr
cmps
test
inc
loop
jnp
loope
mov
scas
imul
sbb
mov
sbb
mov
mov
cmc
mov
(bad)
ds
repz
daa
test
push
or
add
call
sbb
jae
inc
cmp
scas
retf
movs
add
sbb
mov
and
mov
pop
test
lds
fucom
jo
sub
mov
std
sbb
imul
dec
mov
call
push
push
in
popa
out
lea
and
sbb
pop
fnsave
cmp
test
(bad)
adc
mov
add
mov
jl
aam
ret
cmp
int3
cli
outs
jle
ror
push
outs
inc
movs
adc
push
xlat
mov
les
inc
repz
adc
pop
sbb
out
cmp
mov
icebp
push
mov
outs
(bad)
pop
test
pop
jae
and
or
sub
add
sbb
mov
cdq
pop
xor
adc
(bad)
mov
sub
cmps
cmp
pop
xor
cmps
jbe
add
mov
cs
jmp
pop
cmp
mov
(bad)
adc
fdivr
std
add
fsubr
mov
popf
ss
and
fwait
adc
dec
adc
or
inc
pop
in
ss
sti
cmp
ja
mov
jg
shr
stc
lock
call
push
sti
mov
sbb
dec
leave
iret
int3
shl
jbe
cs
scas
adc
pop
inc
xchg
div
repz
push
repz
or
js
(bad)
ins
mov
addr16
jmp
mov
adc
(bad)
or
sub
addr16
pusha
inc
adc
xor
push
arpl
mov
shl
mov
cld
add
xor
rcl
and
adc
scas
shl
cdq
fucomp
xlat
jp
cmp
and
ficomp
in
xchg
cmp
dec
test
call
rcl
loop
add
adc
repz
inc
mov
push
sbb
adc
leave
jno
fidivr
mov
lods
xchg
xchg
cmps
jecxz
and
add
das
fsubr
xor
jae
cdq
or
sete
imul
sbb
hlt
fs
jbe
pushf
in
in
lea
sbb
dec
sbb
addr16
mov
int
xor
xchg
std
add
adc
daa
cwde
mov
aaa
fmul
test
pop
dec
(bad)
stos
lds
les
lods
imul
(bad)
fiadd
or
jne
xchg
test
dec
js
mov
cmp
sub
mov
in
ret
cdq
out
les
out
xor
dec
cdq
int3
jl
sub
push
inc
mov
icebp
aad
pop
dec
ja
xchg
test
push
cmps
and
mov
stos
movs
dec
pop
jmp
push
inc
or
ret
in
stos
stc
or
inc
xor
in
xchg
sahf
mov
ret
(bad)
mov
mov
adc
ror
aad
push
and
dec
and
sbb
scas
push
popf
jmp
ficomp
or
lods
int
pop
or
pushf
nop
xchg
or
mov
pop
jnp
mov
pop
gs
loopne
push
pop
ins
scas
rcr
pop
fwait
xchg
add
out
xlat
cmp
dec
sub
int3
test
cdq
shr
es
sbb
xchg
pop
sub
retf
outs
and
js
test
mov
int
daa
ds
jecxz
mov
pusha
movaps
das
cmp
adc
jne
lods
pop
out
pushf
xchg
inc
repnz
push
lahf
rol
pop
adc
push
leave
cwde
inc
inc
out
xor
xor
cmp
jecxz
sub
and
dec
and
retf
push
call
xchg
mov
sbb
clc
xchg
(bad)
fnstcw
pop
mov
mov
fst
fs
daa
(bad)
mov
sub
mov
repnz
jp
inc
repnz
mov
cwde
sub
lahf
jmp
adc
lds
add
std
pop
imul
lock
inc
stos
cmp
ror
push
hlt
push
imul
xor
int3
neg
leave
out
mov
dec
daa
adc
loop
xchg
jae
xor
mov
nop
or
and
mov
adc
or
push
sti
stos
lods
out
loope
sub
sbb
pop
jg
jl
fwait
mov
icebp
fsub
call
lahf
mov
fwait
repz
and
js
daa
dec
cdq
pop
cdq
shl
icebp
dec
push
sbb
out
lea
mov
leave
push
mov
cmc
int
cmp
stc
fist
imul
inc
stos
and
mov
xchg
daa
and
push
pop
popa
push
(bad)
cmps
mov
or
inc
inc
mov
mov
sub
retf
(bad)
out
movs
mov
sbb
ret
imul
inc
ja
inc
jle
in
push
fsub
jb
pop
inc
push
imul
xor
mov
movs
and
xchg
xchg
pop
push
mov
and
nop
push
repz
xor
icebp
sub
sub
mov
call
mov
pop
ins
mov
div
out
mov
jg
popf
xchg
jnp
mul
jmp
and
ds
outs
push
push
pop
sbb
xor
push
push
mov
icebp
mov
stc
ss
lea
rcl
push
cmp
pushf
cmp
adc
dec
in
sbb
jle
mov
je
add
shl
repnz
or
pop
jmp
mov
ins
jg
loopne
cmc
xchg
pop
popf
lea
mov
icebp
icebp
stos
retf
inc
mov
xor
xchg
int
mov
jne
lds
and
cmps
jb
fsub
out
sbb
jmp
dec
(bad)
sub
leave
test
imul
call
scas
sbb
jo
add
ja
push
data16
pop
mov
inc
ins
test
ins
add
pop
pop
sbb
ja
pop
add
test
adc
xlat
sbb
xchg
daa
xor
add
test
sub
push
rol
jmp
push
sub
int
lds
xor
aaa
in
or
fisub
sbb
stos
fadd
cdq
and
iret
jl
in
mov
pop
jno
mov
add
add
push
or
popa
clc
les
cmp
or
adc
cld
jecxz
adc
pop
jmp
mov
dec
mov
in
jle
mov
rcl
int
xchg
(bad)
pop
sub
cmp
mov
jno
or
mov
ret
mov
fbld
call
into
hlt
ficomp
inc
cli
pop
mov
adc
jecxz
stos
add
ja
into
mov
xchg
int
cli
push
jmp
adc
imul
sbb
inc
sbb
pop
dec
aam
(bad)
pop
dec
and
and
in
add
jle
lods
test
clc
mov
inc
stos
push
mov
(bad)
xor
ss
inc
mov
ficomp
mov
jecxz
cmps
sbb
enter
scas
lods
rcr
rol
mov
xor
test
and
xor
adc
lds
mov
jg
sub
(bad)
in
add
imul
je
leave
es
lods
xor
ins
mov
jns
sbb
inc
fadd
sub
mov
adc
dec
stos
ja
add
icebp
and
retf
mov
jecxz
sbb
adc
int
and
add
mov
(bad)
outs
loopne
jbe
mov
sbb
add
push
adc
xor
jge
aam
jg
push
jae
lock
xor
mov
mov
call
or
mov
fmul
stos
in
cwde
ins
xchg
mov
xchg
xor
push
in
mov
das
fild
ja
popa
call
pop
pusha
fisubr
call
test
fidivr
call
or
out
xor
mov
and
pusha
(bad)
rol
and
aaa
pop
cmps
arpl
or
pop
inc
rol
inc
jge
xor
ja
fisub
dec
cmps
nop
jb
mov
jg
add
mov
addr16
(bad)
mov
ret
repnz
aas
(bad)
mov
or
frstor
dec
mov
mov
int3
sti
call
sub
out
mov
sahf
inc
icebp
leave
push
ja
mov
or
mov
movs
shl
inc
adc
(bad)
(bad)
imul
int
retf
cmps
ins
fnsave
add
pusha
call
packssdw
push
inc
add
pop
mov
int
shl
fist
adc
inc
imul
out
sbb
dec
pop
ins
mov
mov
jecxz
rol
mov
xchg
cmc
test
or
inc
(bad)
std
adc
xchg
mov
or
(bad)
shr
in
dec
pop
dec
sbb
loopne
sub
repz
mov
inc
fdiv
out
sub
jnp
xlat
push
in
mov
jb
jmp
lahf
icebp
mov
mov
ins
out
push
mov
fbstp
out
loop
hlt
add
push
jle
movs
mov
outs
mov
mov
inc
cmp
mov
jbe
ret
mov
add
jbe
bound
mov
jg
pop
cmp
fistp
fwait
jbe
(bad)
pusha
xchg
pop
jb
push
jl
movs
push
or
sub
inc
rol
push
cmp
jecxz
inc
jno
sub
mov
add
mov
out
sbb
adc
mov
fsubr
xchg
lds
leave
mov
mov
pop
inc
pop
enter
ss
mov
fld
xchg
xsavec
sbb
add
xor
pushf
or
aaa
sti
jg
loop
outs
pop
shl
(bad)
dec
test
outs
arpl
pop
jne
ins
aad
adc
aad
or
fwait
cmp
mov
mov
jle
dec
xor
push
push
cmp
adc
push
mov
add
mov
bound
in
lahf
leave
es
cmps
push
cmp
fimul
push
inc
inc
pop
in
mov
div
(bad)
pop
popa
sub
mov
or
paddsw
sbb
sahf
cmps
mov
xchg
scas
jmp
inc
movs
aam
xchg
xor
and
xchg
test
and
popf
adc
jle
lds
aam
xor
and
jae
es
mov
pop
mov
test
cwde
pop
into
xlat
mov
std
mov
mov
test
and
mov
xor
out
movs
arpl
outs
push
pop
and
fsubp
cmp
fs
mov
popa
sub
and
popf
mov
pop
xor
or
xor
adc
cwde
jo
sbb
inc
imul
shl
sti
cmp
cmp
mov
daa
mov
(bad)
jmp
sub
inc
push
into
cld
(bad)
dec
add
call
push
aas
jge
xchg
adc
pop
cmps
or
cld
jecxz
out
rcl
popf
sub
jge
div
mov
fwait
mov
movs
js
(bad)
sub
jne
shl
(bad)
lock
xor
xor
stos
push
test
sbb
ror
pusha
sub
mov
cmp
pop
mov
ins
icebp
outs
xor
xchg
(bad)
and
loop
mov
fs
or
fcmovbe
push
mov
idiv
popf
sub
dec
sbb
ret
push
mov
data16
pop
or
test
(bad)
js
enter
sub
ror
pop
sbb
cli
in
cmp
es
out
sbb
mov
pop
dec
cmp
sar
test
add
sub
dec
push
jbe
rcl
jns
mov
inc
jecxz
xchg
addr16
das
and
jmp
mov
push
sahf
test
repnz
mov
mov
pop
push
out
ja
pop
rcr
outs
cmp
cmp
inc
imul
jmp
sbb
adc
scas
fidivr
and
in
pop
ds
jo
push
scas
push
xchg
adc
add
ret
imul
xchg
mov
add
xchg
ficom
adc
out
mov
popa
cmp
or
xor
sbb
ins
int
enter
fistp
and
push
jg
scas
add
cmp
sub
lahf
mov
shr
mov
inc
out
mov
jb
sbb
in
rcr
xchg
aad
sbb
retf
pop
pop
push
mov
adc
repz
lea
push
es
dec
frstor
fimul
fcmove
jmp
dec
sbb
mov
xchg
aas
jae
fwait
mov
in
dec
mov
(bad)
daa
xor
jo
mov
enter
adc
and
sbb
pmuludq
lea
es
xchg
ds
mov
sbb
popf
(bad)
xchg
xor
jno
dec
jge
jge
inc
shr
or
adc
cwde
outs
jp
xchg
or
and
loopne
pop
(bad)
int3
adc
fsub
inc
mov
in
xchg
popf
cmps
mov
cdq
pop
into
or
into
ss
jg
cmps
cmp
sbb
push
dec
sahf
(bad)
and
xor
popf
and
mov
xchg
(bad)
sub
jmp
imul
icebp
call
push
popf
mov
jmp
jmp
mov
xchg
xchg
add
int3
lods
or
sar
rcr
dec
shl
and
data16
inc
cmps
mov
iret
movs
mov
mov
mov
les
add
out
aas
jle
sbb
adc
xor
je
mov
dec
jnp
and
pop
adc
push
aas
push
ja
mov
mov
or
jbe
ret
mov
call
idiv
or
or
dec
(bad)
sti
mov
xor
arpl
stos
nop
gs
dec
cmp
mov
pop
outs
aaa
or
cwde
jbe
(bad)
repnz
or
scas
mov
cmp
xchg
push
int
fisub
jmp
inc
sub
jmp
and
ret
mov
repnz
mov
loopne
lock
add
movs
retf
sbb
and
adc
adc
test
adc
fistp
mov
mov
pop
arpl
in
dec
fdivr
mov
pusha
bt
rol
cmp
call
mov
fbld
sar
dec
jno
movs
or
push
pop
ins
div
add
cdq
(bad)
mov
addr16
cmp
and
mov
mov
mov
cmp
in
rcl
enter
mov
jns
lods
push
dec
push
jnp
dec
js
test
data16
add
and
jmp
adc
neg
retf
out
sbb
inc
xchg
adc
mov
fsubp
sub
mov
cdq
(bad)
das
adc
popf
ds
sub
inc
bound
dec
pushf
mov
add
loopne
(bad)
and
xchg
inc
ret
loope
mov
and
mov
sti
data16
xor
and
scas
movs
in
push
out
xor
movs
int3
int
mov
repz
jns
add
xor
les
add
lahf
lahf
xor
dec
inc
lods
dec
push
mov
fs
in
loop
inc
push
adc
xchg
or
stos
mov
add
pop
or
mov
icebp
test
in
or
xchg
push
jne
ja
mov
mov
xchg
jmp
sub
test
test
xchg
dec
in
out
pop
gs
jmp
mov
in
pop
mov
or
loope
push
int
cmp
ins
or
push
push
ds
dec
lock
(bad)
add
jae
sbb
imul
xlat
idiv
adc
mov
shl
dec
and
inc
pop
in
or
leave
mov
pushf
jo
adc
test
out
cmp
push
xor
pop
ficomp
dec
mov
(bad)
jecxz
mov
dec
test
jl
add
repnz
retf
imul
loop
dec
js
xor
cmp
mov
mov
jae
aam
ror
pop
push
fsubr
xor
es
jecxz
outs
ins
sbb
and
mov
aaa
movs
push
mov
pushf
ds
and
mov
adc
or
cmps
adc
adc
lahf
jecxz
out
sub
repnz
jecxz
xor
int
adc
retf
in
call
aad
(bad)
loopne
or
inc
xchg
les
in
jns
mov
push
inc
sti
mov
fist
into
mov
inc
cmp
nop
pop
mov
push
rcl
mov
sbb
ret
popf
add
icebp
loope
int3
mov
xchg
movs
imul
push
mov
mov
inc
inc
mov
shl
cwde
(bad)
mov
out
fsub
(bad)
shr
je
fs
ins
mov
xchg
jmp
into
call
adc
mov
inc
xchg
dec
jb
adc
adc
shl
or
xchg
repnz
mov
inc
rol
pop
mov
aam
or
xchg
jecxz
mov
imul
push
(bad)
leave
fadd
jmp
dec
pop
jg
mov
push
xor
clc
pop
cli
call
mov
lahf
mov
in
(bad)
add
mov
add
push
inc
fisttp
jecxz
and
adc
mov
mov
jbe
ficomp
push
xchg
push
pop
xor
stos
dec
jb
dec
xchg
lea
in
loope
in
(bad)
lahf
mov
push
lds
push
mov
imul
or
das
or
fwait
sbb
mov
dec
pop
adc
add
gs
mov
inc
into
adc
sbb
cs
adc
or
cmp
push
mov
jnp
inc
in
jb
popf
ret
aam
je
fs
jl
push
pushf
int3
pop
call
inc
bound
xor
sub
ss
inc
dec
jg
lock
xor
lods
sub
xlat
mov
xchg
xchg
dec
ins
test
xor
das
mov
add
out
mov
lahf
mov
lahf
cs
pop
xchg
xor
in
data16
clc
mov
adc
data16
fs
jo
push
(bad)
pop
or
mov
add
ficomp
jmp
sti
mov
fwait
sbb
daa
sbb
fmul
mov
fs
pop
jl
inc
cmp
pop
mov
add
mov
and
push
sbb
shl
pop
ja
das
nop
xlat
push
xchg
ja
sahf
jns
popf
inc
nop
mov
jns
call
cmp
xchg
popf
leave
xchg
sbb
int
and
fisub
sti
dec
movs
xor
xchg
(bad)
pop
mov
outs
aad
fcom
std
jnp
out
test
mov
test
repnz
stos
sub
popa
out
das
mov
fiadd
pop
cmp
test
gs
pop
es
int
lahf
stos
test
test
inc
jge
adc
jae
iret
(bad)
fistp
and
cmc
test
mov
pop
fisttp
int
and
push
push
fisttp
out
bound
fild
enter
stos
int3
test
cmp
inc
data16
ds
cdq
cwde
je
sub
aaa
add
xor
push
lods
inc
hlt
xlat
movs
adc
lea
pop
cmp
fwait
je
mov
das
(bad)
xor
mov
push
fcmovb
cmp
rcr
mov
pop
loop
pop
dec
mov
shr
mov
hlt
imul
jle
(bad)
pop
outs
xchg
xor
call
pop
in
sub
pop
sbb
jne
xor
adc
shl
call
inc
and
xchg
repz
retf
out
inc
fcmovnb
cmp
xchg
jl
add
data16
mov
dec
adc
cli
xchg
mov
ja
scas
xor
dec
fistp
mov
pushf
push
and
pop
push
jge
inc
push
mov
jp
loopne
push
push
mov
cli
jnp
out
adc
lods
arpl
sbb
mov
mov
shl
lods
das
aad
or
jno
shl
(bad)
int3
mov
push
jnp
push
ins
inc
pusha
push
mov
sub
aas
push
push
push
lock
jnp
xor
dec
adc
cmp
add
dec
iret
icebp
mov
das
(bad)
aam
mov
sub
cdq
jnp
mov
mov
cmc
xor
push
(bad)
cmps
pop
xor
(bad)
sti
xchg
jae
retf
imul
test
lods
xchg
inc
shr
ja
cwde
adc
lods
xlat
fwait
cmp
cmp
and
jle
sbb
(bad)
in
adc
mov
rol
loope
arpl
mov
(bad)
lds
or
ror
pushf
loopne
push
or
jbe
mov
mov
sahf
imul
sbb
adc
loopne
jmp
lea
cdq
hlt
cli
or
mov
pop
or
movs
adc
add
push
xchg
(bad)
mov
add
inc
add
pusha
jnp
xchg
ret
out
rcr
fsubr
mov
cld
js
jl
lods
jae
inc
gs
add
(bad)
inc
or
dec
fld
xchg
push
mov
shl
or
push
pusha
jno
std
sub
xlat
repnz
and
adc
int
jns
arpl
arpl
ja
iret
loope
push
push
inc
pop
fwait
mov
(bad)
mov
add
jo
imul
lods
fadd
fxch
pop
sbb
adc
addr16
test
mov
data16
dec
push
rcl
js
inc
aad
lods
neg
jmp
arpl
call
int
push
(bad)
iret
dec
xlat
mov
mov
fdiv
mov
loopne
adc
idiv
clc
inc
mov
aam
cmp
mov
mov
mov
push
push
inc
shr
or
dec
lods
stc
dec
dec
xlat
and
adc
daa
add
in
inc
mov
clc
mov
xor
cld
mov
xchg
addr16
retf
or
iret
add
adc
adc
mov
mov
inc
call
jmp
mov
int3
mov
add
mov
jb
dec
push
sbb
inc
fadd
sbb
hlt
icebp
iret
mov
rcl
lock
sbb
cwde
pop
pcmpeqd
add
shl
stos
or
dec
in
rcr
lods
movs
stos
dec
xor
push
out
xor
push
lods
js
movs
or
cld
test
sar
mov
dec
mov
xchg
ret
imul
daa
jno
outs
sub
shl
mov
aam
sbb
sbb
jl
sub
adc
cmp
lods
sub
pop
pop
(bad)
jb
scas
fwait
imul
mov
repnz
pop
into
jp
mov
shl
cmps
dec
call
mov
shl
or
sbb
xchg
sbb
jecxz
sbb
mov
cmp
adc
mov
nop
jne
xor
mov
sub
das
adc
retf
dec
das
jb
ret
aad
in
jl
inc
jmp
(bad)
je
push
fst
ds
movs
or
shl
or
or
jne
icebp
dec
inc
pop
push
jmp
jmp
stc
test
addr16
push
xchg
sub
mov
mov
outs
mov
inc
popf
movs
dec
mov
sti
test
add
mov
data16
add
jae
cmps
sub
cld
push
hlt
push
aaa
mov
xchg
ret
or
cmps
jae
or
xchg
loop
lock
retf
dec
outs
int3
lahf
int
ss
dec
mov
in
xchg
push
pop
movs
adc
cli
dec
stos
es
mov
sub
outs
jg
mov
jl
xor
sub
icebp
(bad)
lods
not
jmp
mov
into
aam
int3
jp
neg
inc
cwde
vpmacssdqh
ficom
sbb
push
iret
ins
rcl
fucom
test
or
test
inc
mov
les
outs
mov
push
pop
jae
mov
dec
sub
inc
fldenv
adc
cli
or
mov
xchg
and
adc
dec
dec
cld
add
pop
push
xchg
sbb
xchg
mov
lock
call
popf
mov
dec
mov
or
shl
repnz
xchg
mov
dec
adc
jmp
iret
stos
add
loopne
pop
into
jg
xor
idiv
loope
push
or
adc
test
ja
and
cmc
sub
stos
bound
xor
jmp
fcmovnb
cmp
cld
and
fdivr
dec
inc
xchg
call
imul
cmc
aas
emms
jae
cwde
xor
jmp
nop
dec
sub
test
adc
div
cmps
sub
loopne
fyl2x
shl
xchg
and
std
std
icebp
std
rcr
and
sbb
int
add
cmps
xor
stos
dec
cmp
jnp
test
shr
ret
mov
pop
and
iret
fwait
xor
pop
xchg
cmp
cmps
stos
add
test
mov
xor
cmps
adc
add
inc
mov
data16
lods
pusha
les
int
int
sub
mov
pop
pop
outs
into
adc
push
rcr
xlat
stc
jl
mov
add
popf
add
imul
out
(bad)
out
sar
dec
jge
mov
imul
mov
js
rcr
sbb
adc
lock
and
mov
lahf
dec
jns
sbb
lahf
xchg
inc
das
lds
arpl
cwde
pop
sbb
addr16
sub
inc
and
push
nop
adc
mov
dec
and
popa
jmp
in
inc
cdq
or
das
cmp
retf
pop
push
scas
int
popa
pop
cmc
leave
scas
push
jmp
add
dec
cmc
cmc
mov
mov
cmps
nop
add
add
(bad)
loop
scas
push
sahf
add
lahf
mov
sahf
adc
mov
fisttp
stos
sbb
pop
movs
(bad)
call
and
in
ss
into
sbb
pop
pop
scas
inc
push
and
ja
adc
add
mov
ret
pop
arpl
jmp
iret
add
fist
cli
xor
mov
xchg
cli
ins
mov
scas
pop
(bad)
sbb
fcomi
jp
jge
into
jb
(bad)
pop
sub
test
out
test
pushf
(bad)
rcl
movs
hlt
mov
fbld
in
or
shl
test
std
(bad)
(bad)
push
and
out
gs
jno
or
xor
sub
sub
add
add
es
clc
lea
mov
or
test
(bad)
jnp
(bad)
sub
adc
and
dec
std
push
push
shl
xrelease
add
add
cdq
and
subps
rcr
in
scas
inc
jge
push
sar
push
jmp
outs
imul
pop
int
xchg
pop
cmc
xor
gs
mov
lods
test
pop
mov
mov
rol
stos
rcr
cmps
push
jno
and
(bad)
les
mov
or
test
jb
cld
popf
enter
mov
in
mov
mov
repnz
outs
stos
mov
adc
xchg
or
cmp
jge
(bad)
call
mov
stos
sti
push
fwait
gs
xchg
enter
pop
test
paddd
add
mov
loopne
xchg
jge
pop
or
inc
push
aaa
inc
xor
ror
stos
in
scas
ds
icebp
movs
push
les
or
and
jecxz
ds
jns
sub
stos
sbb
xor
movs
mov
fistp
cwde
sbb
xor
sub
in
mov
inc
stc
mov
cmps
sbb
inc
test
mov
cmp
push
aad
lds
xchg
cmp
in
mov
mov
cmp
cmp
test
cmp
sub
add
lds
sub
aas
pop
mov
scas
ja
(bad)
lahf
mov
adc
out
sub
cs
retf
and
into
into
out
adc
sub
pushf
xchg
add
mov
add
sbb
lods
mov
fmul
cmc
add
sbb
adc
in
test
popa
mov
ror
mov
or
aad
in
vpsubusw
ss
mov
and
mov
test
das
inc
test
dec
ficomp
or
jmp
or
loop
in
and
or
xor
fcom
mov
hlt
mov
push
mov
jne
sahf
out
outs
mov
mov
pop
std
loopne
dec
aad
ret
rcr
xlat
adc
call
fs
dec
(bad)
sbb
pop
cmp
adc
imul
div
mov
in
sub
pop
and
sbb
adc
push
mov
or
and
mov
push
loope
inc
out
or
adc
inc
les
fild
cmps
jg
mov
dec
cmp
ins
push
int
inc
lods
aam
gs
jp
mov
sti
addr16
hlt
mov
cld
sbb
or
jno
call
xlat
push
push
adc
repnz
cld
dec
mov
mov
aaa
push
adc
mov
sbb
dec
xor
or
xchg
shl
jge
(bad)
or
mov
xor
clc
jno
or
(bad)
push
ins
js
add
xor
jb
pushf
cmp
imul
cli
sbb
dec
fst
jnp
inc
rcr
mov
jno
add
fsub
jecxz
out
cmp
mov
ret
and
or
shl
gs
mov
das
sub
(bad)
call
mov
mov
sahf
jmp
and
mov
cmp
retf
jbe
add
jmp
ss
sbb
jmp
adc
cli
xor
jp
push
mov
dec
cmp
ret
mov
idiv
cld
in
mov
outs
cmp
add
or
or
ss
outs
ss
pop
dec
das
imul
fcomp
cli
aas
stos
call
pop
stos
cmp
(bad)
cs
mov
in
inc
cmps
jmp
hlt
add
fld
jp
adc
out
and
and
sbb
test
mov
sahf
xor
pop
stc
sub
cld
sbb
ret
cwde
lods
popa
shr
xchg
je
jnp
test
sub
xchg
or
mov
in
xchg
jae
jae
add
div
pop
movs
aas
mov
les
pushf
push
xlat
xor
jae
mov
cmp
mov
mov
(bad)
mov
push
frstor
xlat
jnp
lods
jecxz
iret
outs
xchg
inc
dec
loopne
push
wbinvd
sbb
inc
lods
push
leave
out
pop
push
pop
push
cmp
cmps
lods
and
dec
sub
xchg
ds
sbb
mov
pusha
addr16
and
pop
lods
mov
jns
cmps
(bad)
mov
mov
push
inc
jmp
push
(bad)
add
lock
xchg
std
pop
popa
mov
push
int
mov
out
inc
scas
ret
push
cmp
lods
lds
xchg
pusha
addr16
fmulp
std
or
or
push
lods
xchg
in
cmp
mov
push
stc
and
xor
gs
push
int
imul
and
out
sbb
mov
cmp
rcr
mov
punpckhdq
fistp
repz
xchg
pop
jg
fucomp
repnz
popa
mov
push
sub
ins
jecxz
icebp
pop
test
jmp
into
retf
or
cdq
loope
dec
mov
xchg
pop
mov
jae
call
push
(bad)
push
push
stos
shr
jl
out
pop
push
test
mov
outs
and
jle
sub
icebp
xlat
mov
popa
mov
push
retf
xchg
inc
aam
js
mov
js
jne
arpl
adc
test
jae
in
xchg
div
mov
je
adc
sbb
call
inc
mov
mov
adc
xchg
outs
lahf
cmc
inc
or
push
dec
pusha
jmp
or
sub
fdivr
retf
xor
pop
inc
les
test
sbb
ds
xchg
ss
cmps
jle
mov
jl
push
pusha
cmp
pop
jae
rcl
or
test
(bad)
shr
adc
std
addr16
cs
int
pop
mov
mov
mov
pop
aad
mov
push
xor
or
(bad)
mov
xor
push
nop
jmp
popa
sub
cmpps
(bad)
(bad)
xchg
push
and
dec
vmwrite
leave
cwde
cmp
push
icebp
addr16
lods
xchg
nop
mov
and
cmps
mov
sti
inc
out
dec
ins
mov
movs
inc
jg
lahf
or
dec
adc
push
pop
push
adc
sub
nop
mov
add
sbb
cld
pop
rol
adc
dec
mov
test
outs
clc
mov
shr
hlt
mov
pop
push
xor
repz
outs
loopne
push
test
data16
cmp
adc
adc
or
xor
dec
mov
cmp
jmp
int
adc
adc
inc
mov
mov
test
mov
pop
add
push
mov
repnz
push
sbb
xor
sbb
mov
adc
dec
jo
adc
popa
(bad)
jmp
mov
inc
fld
push
(bad)
mov
mov
pop
repz
leave
sbb
jnp
sbb
xchg
xor
adc
sti
in
andnps
cld
dec
and
lods
xor
xchg
retf
cmps
xor
(bad)
mov
mov
fmul
cmps
inc
mov
cld
xchg
in
xor
aaa
popa
icebp
sbb
pop
cld
popf
mov
(bad)
jmp
test
sub
jle
mov
stos
addr16
mov
mov
mov
fsub
and
dec
adc
lods
jge
enter
adc
outs
mov
fisubr
lea
pop
xor
call
and
push
aam
xchg
mov
sbb
adc
dec
jecxz
pop
and
cwde
arpl
cmc
retf
sub
aas
dec
js
mov
jge
pop
dec
scas
in
cmp
sub
cli
and
or
xchg
les
jle
xchg
dec
jl
(bad)
push
nop
test
jne
imul
mov
aam
fs
cmp
sahf
movs
shl
pop
int3
imul
cmp
or
dec
dec
in
stc
(bad)
adc
jns
js
cdq
pop
pop
pop
mov
cmp
mov
movs
or
mov
das
fadd
cmp
jo
push
(bad)
mov
sub
mov
mov
pop
into
imul
lahf
pushf
xor
dec
mov
mov
add
push
and
pop
push
or
inc
jecxz
retf
pop
imul
sub
iret
push
icebp
sbb
cmp
sub
call
dec
mov
xor
xchg
gs
xchg
jmp
mov
daa
imul
dec
mov
and
movs
push
xor
lea
lahf
adc
push
mov
or
mov
fsubr
arpl
fldcw
pop
in
push
mov
cmp
xchg
mov
sahf
mov
scas
and
ins
push
lahf
ins
push
leave
pusha
mov
lds
pop
mov
jbe
pop
into
(bad)
(bad)
outs
inc
pop
jg
into
fld
popf
jb
and
inc
dec
jns
pop
call
ja
xor
inc
repz
test
mov
mov
or
cmp
jmp
xchg
out
cli
mov
mov
add
into
movs
push
mov
push
retf
or
lods
daa
push
ds
sbb
mov
pop
lods
sti
ret
dec
out
faddp
mov
pop
call
fisttp
(bad)
push
add
call
ja
push
mov
push
xlat
addr16
popf
mov
add
mov
fbstp
int
imul
sub
call
and
xor
sbb
loope
mov
lea
jge
inc
sahf
fnstenv
clc
inc
mul
mov
test
js
aas
inc
add
fisttp
and
dec
rol
xchg
cwde
mov
xchg
ror
dec
add
and
pop
mov
ins
adc
mov
add
xor
test
push
call
dec
xchg
pop
outs
adc
in
test
pop
icebp
sub
clc
lods
push
xor
jp
lods
je
out
push
js
cmp
leave
sbb
xor
shl
inc
sbb
sbb
and
add
sub
lds
bound
lods
adc
xor
outs
movs
retf
jns
pop
(bad)
push
retw
cli
mov
in
pop
jp
xor
jmp
stos
inc
jo
and
cmp
lods
retf
cwde
repnz
call
add
xor
pop
icebp
xchg
cmps
jo
push
arpl
xor
les
ror
retf
pop
(bad)
and
xor
push
sub
push
test
dec
or
retf
xor
push
push
push
push
cmp
mov
dec
(bad)
pusha
sbb
outs
pop
ins
jmp
cmp
shl
or
dec
jmp
stc
pop
sahf
addr16
add
lahf
dec
adc
inc
rcr
cmp
mov
cmp
and
aas
(bad)
loopne
or
test
push
push
sub
or
shl
sbb
inc
fcomp
loop
jmp
ss
add
das
add
bound
pop
sar
mov
adc
gs
pop
cdq
ins
fdivr
sahf
leave
dec
dec
sbb
mov
mov
jg
jns
fsub
std
repz
enter
cdq
sub
jmp
pop
(bad)
mov
mov
jp
xchg
jne
aaa
push
iret
stos
iret
push
ds
out
push
(bad)
sub
dec
cmp
mov
nop
jmp
adc
in
lods
jmp
sub
mov
ret
in
xchg
push
or
jae
aaa
xchg
arpl
pop
and
or
into
movs
imul
test
adc
data16
inc
pop
fucomip
sbb
fstp
sahf
fs
push
adc
and
xor
mov
adc
icebp
sbb
sahf
cdq
dec
and
scas
iret
pop
rcl
jmp
jle
mov
hlt
jmp
xlat
retf
xlat
or
bound
cmp
xor
mov
sub
es
mov
iret
pop
pusha
clc
in
xchg
mov
mov
shl
sub
xor
push
push
cmp
mov
jo
out
xor
push
sbb
push
push
push
add
jbe
pop
dec
adc
test
dec
xchg
pop
into
sub
xchg
or
pop
ret
dec
cli
xlat
orps
cmp
movs
jno
push
xor
stc
nop
mov
dec
sub
add
retf
mov
add
sub
cs
mov
mov
xchg
mov
imul
jmp
mov
cmps
ror
jg
fnstcw
(bad)
aam
icebp
ret
xchg
test
inc
pop
inc
movs
push
xchg
add
fcmovnb
mov
and
jbe
push
call
dec
nop
mov
adc
sbb
call
std
mov
scas
gs
neg
call
lods
retf
clc
sbb
mov
adc
cdq
jmp
int
dec
jl
sbb
jb
cmp
call
and
cmc
int
sub
imul
int3
sahf
ds
shr
sub
aam
fnstcw
out
std
xchg
jne
and
popa
jmp
call
push
push
dec
in
fs
repnz
outs
mov
sti
sahf
add
(bad)
adc
mov
cmc
shr
cli
mov
push
test
or
fstp
dec
cwde
shl
enter
shl
dec
jb
pop
inc
sbb
xchg
das
ss
inc
pop
sbb
loope
pop
xchg
enter
push
jbe
stos
dec
push
pop
(bad)
daa
ret
call
or
cld
xchg
push
jmp
pop
test
adc
mov
cmps
es
call
xor
shr
push
mov
sbb
bound
pop
cmp
xchg
mov
fdiv
mov
dec
push
movs
cmp
adc
add
bound
outs
sub
call
mov
leave
or
rcr
scas
ss
sbb
cmp
ret
outs
and
xor
out
ret
push
ret
xchg
mov
or
xchg
or
cmps
mov
addr16
add
(bad)
test
repnz
nop
mov
and
movs
push
or
in
scas
sub
mov
push
mov
aam
add
fidiv
add
ror
cmps
lea
int
stos
sti
mov
and
mov
mov
jb
pop
or
sub
jge
int3
mov
push
mov
je
push
sub
out
ficomp
int
(bad)
into
repnz
repnz
movs
into
sar
lea
mov
jae
clc
outs
sub
data16
(bad)
ss
arpl
mov
inc
mov
clc
push
js
mov
sar
xor
ret
cmps
push
inc
push
pop
daa
sbb
arpl
add
fcom
jmp
sbb
cdq
retf
(bad)
rcr
into
popf
outs
xchg
rol
inc
push
xchg
jmp
and
loope
(bad)
push
mov
inc
push
cmovg
and
call
loope
mov
(bad)
pop
dec
xlat
pop
(bad)
aaa
in
pop
test
xchg
inc
sub
scas
scas
add
jns
test
jnp
add
movs
xchg
sub
cld
sbb
xor
jecxz
dec
xchg
cmp
cmp
test
retf
(bad)
xchg
pop
push
test
call
scas
int
(bad)
cs
add
leave
mov
clc
adc
mov
jno
add
loopne
push
push
mov
push
jo
in
popa
pop
inc
add
(bad)
mov
aaa
sbb
cdq
push
or
push
push
jnp
ror
sar
sbb
and
mov
mov
sub
xor
jl
loopne
sbb
(bad)
stos
cli
call
add
sahf
jp
mov
ins
xchg
pop
jns
es
jle
or
cld
and
sbb
pushf
fucomi
nop
or
push
sbb
add
cmps
inc
dec
popf
and
rcl
pop
push
add
leave
shl
(bad)
mov
mov
xchg
cmps
jb
arpl
aam
jmp
sbb
mov
aas
xchg
loopne
xor
sar
cs
shl
cmp
push
cli
or
js
mov
jecxz
dec
adc
pop
and
cmc
cs
push
clc
mov
inc
sbb
xchg
sbb
jno
jnp
gs
mov
push
jp
pop
fdivr
xor
loopne
jo
xchg
hlt
outs
ret
mov
mov
xor
daa
xchg
retf
repnz
mov
lods
outs
mov
shl
jmp
xchg
into
ins
mov
xchg
sub
cmps
sub
cdq
outs
mov
push
loopne
mov
lods
mov
push
popa
pop
stos
xor
popf
inc
or
add
test
repnz
fisubr
pop
repz
imul
mov
adc
jae
dec
and
repz
scas
mov
pop
add
add
mov
fcomp
jg
inc
pop
mov
pop
mov
test
jl
loop
xchg
scas
pop
(bad)
int
add
aad
nop
xchg
(bad)
pop
outs
push
cmp
pop
movs
std
sbb
jle
test
and
idiv
repz
jns
push
sbb
or
dec
push
push
push
pause
jne
dec
jne
or
loope
adc
mov
xchg
or
neg
ss
imul
sub
leave
xchg
xor
sbb
lds
mov
or
pop
xlat
sbb
and
dec
sbb
gs
sbb
aad
and
mov
pop
mov
scas
pop
pop
(bad)
cmp
pop
sub
adc
in
add
jl
cdq
mov
push
ins
enter
out
jle
xor
mov
es
outs
mov
pop
sahf
rcl
(bad)
lock
dec
vzeroall
pop
stc
outs
cmp
movs
cmp
jp
jmp
sub
jno
jnp
push
push
cli
stos
bound
xchg
dec
sbb
and
and
jp
mov
fiadd
add
out
in
not
ds
popa
loope
stos
cmc
push
movs
mov
hlt
xor
pushf
mov
je
push
(bad)
adc
push
jmp
pushf
inc
cmp
and
xchg
imul
sti
outs
inc
and
add
into
nop
mov
mov
dec
jb
add
mov
adc
push
push
movs
sbb
and
mov
cld
(bad)
sbb
jns
call
xor
loop
cmp
pop
inc
xchg
(bad)
test
add
mov
adc
and
xchg
push
xchg
mov
packsswb
sub
xor
adc
sbb
imul
sub
ret
pop
and
out
cmp
adc
mov
fmul
xchg
push
ror
leave
movs
idiv
adc
iret
jle
jb
arpl
mov
je
enter
aaa
add
jae
mov
into
add
shl
ror
inc
pop
inc
loopne
int
(bad)
rcl
lods
adc
daa
lahf
nop
cmp
out
mov
cli
js
daa
lock
(bad)
jb
cmps
pop
pop
jmp
xor
mov
out
dec
iret
dec
lods
loop
outs
hlt
cld
ss
mov
fidiv
inc
mov
fwait
mov
scas
jl
cld
push
popf
push
shl
inc
xlat
mov
adc
mov
dec
add
mov
sub
xchg
daa
leave
mov
das
jmp
(bad)
inc
jl
xchg
sbb
push
xchg
jae
cmp
mov
pop
aaa
popa
stos
sbb
rol
push
sub
cld
inc
loopne
loope
sahf
in
inc
dec
sbb
cld
sub
enter
rcr
movs
outs
fcomi
push
inc
add
test
cs
repz
dec
fmul
bound
in
cmp
sub
dec
sar
mov
sbb
jns
mov
(bad)
imul
les
stos
cli
cmps
out
loope
cld
dec
xor
std
push
sub
loopne
div
das
push
lock
mov
stos
shl
cld
cmp
(bad)
mov
scas
xchg
fwait
in
inc
inc
sbb
and
cli
into
push
int
sahf
ficom
sbb
aam
dec
scas
pop
dec
jl
mov
adc
inc
push
pusha
adc
(bad)
aas
push
aaa
mov
mov
inc
cmp
jbe
call
nop
pop
cmc
jge
test
add
fsub
add
mov
icebp
cmovle
xor
imul
es
hlt
fwait
hlt
mov
xchg
ret
out
enter
adc
adc
fist
mov
dec
mov
dec
dec
fisubr
in
mov
cdq
ficom
sbb
mov
inc
pop
push
push
sub
clc
sti
int
dec
and
loopne
pop
adc
pop
cmp
adc
rol
fild
call
xchg
test
pop
mov
popf
adc
push
or
div
push
dec
gs
jne
xchg
movs
enter
or
mov
push
loop
mov
cs
dec
mov
das
fs
aad
lds
call
sub
xor
ins
sub
lock
lods
cmp
jns
aad
outs
outs
enter
or
add
(bad)
xchg
sahf
iret
imul
jl
popa
push
push
mov
cmp
pop
cmc
(bad)
mov
cwde
push
mov
inc
cmp
movd
mov
in
mov
aaa
sahf
jo
js
mov
push
dec
pop
pop
mov
adc
shl
lea
fadd
out
(bad)
aad
dec
sbb
mov
sbb
ret
xor
nop
(bad)
hlt
std
sub
retf
dec
dec
mov
in
fdivr
mov
(bad)
rol
movs
fimul
es
mov
aam
sub
sub
lds
leave
xchg
icebp
and
aam
fbld
push
lods
bound
fidiv
add
sub
ja
popf
mov
imul
popf
push
xor
add
mov
outs
test
dec
js
call
movs
inc
pop
push
sbb
int3
fs
sbb
jne
es
test
mov
rcr
push
and
cmp
and
jno
pop
dec
addr16
shr
xor
pop
cld
pop
jg
jge
call
test
lahf
aam
pop
adc
mov
xor
jo
cmc
(bad)
xor
push
in
jbe
(bad)
(bad)
gs
dec
shr
outs
mov
daa
add
sar
ss
xor
push
dec
test
scas
idiv
pop
inc
(bad)
jecxz
cmc
mov
fild
sub
xchg
and
xchg
fmul
mov
mov
in
in
pop
imul
sub
fwait
push
sbb
loop
(bad)
xchg
mov
and
push
cli
jb
ja
jnp
xor
mov
fnstcw
sbb
cmp
(bad)
mov
jne
aad
aaa
scas
xor
in
shl
dec
and
retf
loop
jae
sub
pop
pop
lock
push
loope
lock
jmp
cdq
or
jno
adc
or
mov
sbb
adc
sbb
push
pop
mov
shl
xor
pop
inc
jp
dec
std
fwait
push
xor
mov
dec
out
test
adc
(bad)
js
test
adc
mov
scas
pop
lock
inc
test
and
outs
int3
fisubr
into
xchg
jmp
pop
xchg
adc
adc
push
leave
or
inc
(bad)
xor
sub
fldcw
dec
inc
jmp
outs
(bad)
ja
test
xlat
inc
test
add
lahf
mov
or
mov
lock
addr16
fimul
jg
mov
dec
cmps
push
pop
movs
stos
movs
jbe
inc
(bad)
into
outs
test
push
or
shl
pushf
lahf
dec
mov
inc
ficom
jne
int
mov
not
cmc
es
jo
push
or
jge
sub
pushf
das
loope
cmc
inc
and
scas
scas
lods
jne
(bad)
imul
lock
(bad)
je
out
ds
push
mov
xchg
stos
xor
sub
fdiv
imul
push
addr16
lods
fsub
sub
shl
xor
and
push
mul
lods
adc
jo
mov
mov
mov
jne
xor
dec
popf
mov
outs
push
(bad)
iret
(bad)
mov
xlat
push
imul
push
fadd
pushf
jno
adc
fs
shl
bound
or
arpl
retf
imul
outs
or
adc
pop
dec
fs
pop
adc
dec
int3
pop
push
hlt
or
lods
jne
adc
jecxz
push
xor
xor
adc
jnp
into
sbb
push
mov
and
loopne
js
aad
out
sub
jle
daa
dec
fistp
hlt
dec
push
dec
aam
leave
retf
xchg
cmp
dec
push
out
nop
gs
movs
and
jno
mov
rol
xchg
jl
js
pop
or
pop
fistp
xor
dec
clc
xchg
mov
ja
sub
into
cmp
jo
out
repz
fst
or
mov
xor
cwde
or
fmul
sub
cmp
inc
inc
dec
and
jg
movs
lods
sbb
sub
in
or
mov
jp
adc
xor
lods
imul
(bad)
sub
sub
inc
jo
jge
repz
adc
retf
cmp
out
repz
(bad)
ins
mov
xchg
xor
jne
rol
and
pop
push
aaa
pushf
mov
rcr
xchg
es
push
push
xor
stc
iret
cwde
or
sahf
je
ins
xchg
and
sub
pushf
loope
and
inc
lahf
jle
rcl
inc
cdq
mov
scas
out
dec
cmps
sub
call
mov
or
scas
aam
cld
or
pop
push
icebp
cdq
mov
push
daa
stos
fs
mul
stc
retf
fimul
cld
push
outs
fisttp
mov
and
mov
fnsave
hlt
call
daa
mov
leave
jae
ja
sub
outs
lock
and
out
iret
mov
jle
movs
mov
call
hlt
xchg
and
or
cmp
cmc
mov
xor
or
imul
and
push
dec
das
jae
mov
jp
retf
jp
(bad)
imul
sti
xor
sub
jbe
jmp
lods
jns
xor
rol
icebp
fs
adc
inc
iret
add
retf
(bad)
test
fld
mov
add
stos
mov
jae
xor
xor
(bad)
aaa
mov
cmp
push
das
movs
add
xor
or
xlat
(bad)
leave
mov
xchg
mov
(bad)
sub
mov
out
mov
xlat
sbb
mov
retf
rcl
imul
xlat
loopne
add
dec
nop
(bad)
push
mov
shl
out
fidiv
and
mov
js
(bad)
pop
mov
and
pop
inc
pushf
dec
in
mov
or
out
clc
es
fcom
inc
xor
sub
xabort
fldcw
jge
pop
loop
xor
xor
(bad)
mov
mov
nop
test
retf
into
push
xchg
jmp
pop
das
mov
lods
mov
pop
mov
sub
in
inc
or
gs
and
sahf
mov
adc
cmc
sbb
movs
sub
ja
mov
sar
bound
aas
pop
mov
(bad)
jbe
popf
jae
shl
jp
or
pop
sbb
sbb
dec
pop
imul
dec
fmul
pop
ja
out
adc
push
aam
daa
cmps
adc
add
or
icebp
adc
out
test
push
cmp
sbb
outs
jae
lahf
cmp
fidiv
je
add
jmp
cmp
fldcw
stos
sti
fmul
nop
je
inc
in
inc
inc
sub
dec
sbb
test
and
ret
dec
lods
aas
mov
lds
daa
sti
inc
aaa
push
ins
xor
push
or
inc
xchg
cwde
lods
sbb
ja
add
ret
ja
xor
loop
mov
cmp
pop
jmp
mov
and
sub
jl
sub
(bad)
js
xor
movs
pop
or
fstp
(bad)
xor
jno
dec
add
inc
arpl
dec
xchg
rcl
fist
jmp
mov
ss
lods
sbb
mov
outs
loop
sub
int3
and
inc
jp
jg
mov
mov
call
mov
mov
push
mov
dec
push
ss
out
push
retf
mov
and
fist
adc
sub
dec
pushf
loop
sub
cli
jmp
push
scas
(bad)
das
mov
jmp
jo
or
dec
xor
jl
xchg
push
jne
inc
push
inc
dec
jg
dec
jecxz
fwait
call
jp
(bad)
(bad)
sbb
icebp
sbb
ficomp
mov
or
pop
cmp
hlt
bound
sbb
popf
mov
mov
in
jmp
xor
mov
shl
fwait
and
xchg
mov
mov
pop
and
aaa
jae
in
lods
and
push
not
ja
into
ins
js
icebp
and
cmps
jecxz
sub
test
cli
and
int
data16
aad
fdivr
scas
xor
push
mov
xchg
iret
mov
mov
or
xor
sbb
dec
inc
test
ins
mov
scas
fnstsw
loop
dec
das
(bad)
and
mov
push
sub
daa
push
or
push
jns
jecxz
loopne
push
and
ins
cmp
sbb
popa
mov
loop
mov
ins
loopne
test
push
pop
out
dec
addr16
pop
push
and
sbb
in
push
inc
xlat
shl
out
mov
add
pop
(bad)
into
rol
xor
fwait
jmp
push
nop
cld
loopne
jno
or
pusha
jo
pop
mov
xchg
xchg
jmp
int
sbb
adc
rol
aam
sbb
adc
shl
out
xchg
jne
mov
nop
stc
pop
arpl
lock
and
cs
xlat
(bad)
mov
mov
or
add
xor
pop
out
cld
mov
ins
std
aaa
mov
mov
loope
ficom
inc
push
push
xchg
mov
js
adc
scas
mov
push
lock
and
icebp
in
inc
push
mov
inc
(bad)
jns
jmp
sub
in
xor
jbe
pop
(bad)
mov
leave
jns
movs
xchg
xor
ror
mov
xchg
outs
lahf
adc
and
fsub
xchg
push
stos
pop
mov
mov
pop
inc
iret
jne
enter
and
sub
call
iret
es
popa
ins
or
mov
cmps
stos
loop
adc
xchg
xchg
scas
jp
ja
dec
adc
lea
jmp
fmul
pop
mov
mov
fisubr
enter
mov
pop
adc
test
(bad)
lock
jno
and
sub
jge
add
das
dec
jg
jns
cmc
xor
fiadd
inc
mov
leave
das
ja
je
push
je
aam
xor
dec
mov
ss
jle
das
daa
nop
(bad)
push
mul
adc
push
cs
dec
add
xor
lods
ins
or
outs
mov
fdivr
mov
rcr
test
mov
mov
jle
mov
mov
mov
pop
mov
movs
mov
jne
iret
(bad)
xchg
in
dec
jns
push
into
and
push
movs
add
lahf
mov
arpl
push
inc
std
mov
retf
sub
mov
fs
inc
cmp
xor
adc
pushf
out
dec
jle
mov
cmp
lahf
sbb
xchg
popa
iret
inc
mov
and
inc
inc
add
test
jl
imul
cmp
inc
sar
push
clc
mov
push
jo
fidivr
xchg
push
or
es
mov
ret
xchg
das
cmp
cs
icebp
dec
adc
or
into
mov
add
and
mov
sbb
add
xchg
and
int3
and
(bad)
push
pop
jge
movs
add
or
pop
jmp
in
mov
cli
(bad)
dec
mov
cli
je
dec
int3
scas
outs
xlat
int
(bad)
test
cmc
mov
xchg
sahf
sbb
jnp
xchg
nop
xchg
repnz
dec
fsub
in
cmps
xor
cmp
ds
sar
push
cdq
lahf
push
xor
xchg
sbb
sbb
lods
out
xor
pop
inc
outs
lock
lock
(bad)
xor
fnsetpm(287
pop
imul
mov
pop
pushf
push
jp
add
pop
cwde
into
retf
mov
add
xor
ss
out
adc
jecxz
and
mov
push
into
mov
add
mov
test
les
xchg
jg
cmp
mov
cmp
jno
movs
or
jnp
cmp
sbb
add
es
sub
jg
push
push
test
mov
enter
pushf
and
lock
scas
push
(bad)
fs
aad
in
sub
call
sub
and
nop
xchg
dec
xor
jno
dec
jae
mov
xchg
(bad)
mov
mov
sbb
sub
stos
js
inc
ss
test
repz
js
push
int3
fdivr
push
push
and
popf
aaa
adc
xor
add
fist
xlat
jae
xchg
xor
jge
sbb
shl
das
sub
aaa
add
and
out
fsub
cmps
mov
leave
sub
and
rol
repnz
clc
add
into
ret
idiv
stos
stos
std
pushf
fiadd
inc
jbe
test
dec
or
shl
imul
mov
jb
xchg
arpl
sbb
or
mov
xor
daa
ficomp
or
sub
test
and
xchg
loopne
lods
idiv
mov
jb
sbb
add
mov
clc
push
xor
(bad)
or
stos
sub
xor
les
ja
dec
pop
push
push
dec
(bad)
and
aam
xor
mov
jp
ret
call
fs
test
add
and
mov
scas
mov
mov
mov
lods
mov
fistp
(bad)
rcl
jle
dec
sbb
sbb
in
gs
aaa
fwait
retf
inc
je
in
fcomp
retf
cld
mov
pop
retf
sbb
cmp
das
iret
shl
mov
retf
rcr
stc
loopne
dec
iret
ins
ss
cdq
dec
pop
or
and
pop
outs
(bad)
fwait
push
sti
std
sub
shl
fstp
repz
lds
add
mov
jecxz
das
add
hlt
mov
test
data16
inc
pop
outs
aas
sbb
fs
dec
sahf
ret
nop
daa
sub
mov
jno
(bad)
ins
sub
push
xchg
cmp
jp
arpl
push
sub
xlat
xor
xor
dec
ret
cmc
mov
mov
mov
and
aad
in
inc
je
imul
xchg
or
and
pop
dec
rcr
ss
cmps
test
outs
xchg
enter
popa
addr16
mov
xchg
out
sti
shl
lock
clc
dec
in
loop
sbb
movs
adc
mov
add
call
sbb
sbb
mov
ret
js
mov
in
int3
adc
jmp
arpl
and
mov
bound
inc
call
popf
jp
or
mov
pop
cmp
xor
and
push
cdq
jg
mov
or
or
jne
or
jle
jnp
fcom
jne
(bad)
cmp
mov
outs
push
push
xor
sbb
cmp
mov
sahf
test
pop
sub
push
mov
jo
jae
mov
mov
xchg
mov
xchg
add
add
adc
out
cvtdq2ps
cmps
xchg
adc
ret
adc
stos
(bad)
in
data16
out
mov
shl
xor
dec
push
inc
jge
mov
cmp
out
mov
or
mov
retf
retf
(bad)
push
into
mov
jno
cli
sub
out
add
cdq
mov
dec
jno
in
sti
mov
adc
ror
xchg
scas
lock
fcomp
fimul
cmc
lods
cmp
xor
push
dec
fild
add
cmp
mov
sbb
loopne
ss
adc
cmp
jns
cmps
movs
daa
popa
push
pmulhuw
mov
push
lahf
dec
data16
add
ret
cmp
push
xchg
or
daa
sbb
bound
cmp
aad
xor
fimul
inc
ret
div
jbe
or
and
lds
movs
(bad)
fsub
lods
cld
xor
and
pop
out
or
mov
es
adc
or
ud0
dec
xor
(bad)
mov
adc
ja
es
dec
lods
cmps
bound
jae
cld
pop
rcl
jmp
xor
and
sub
pop
in
or
out
adc
shl
daa
push
test
pop
sbb
neg
fwait
jmp
int
imul
pusha
scas
dec
jne
xchg
outs
int3
push
lock
xor
jp
dec
lahf
jne
pop
dec
ficomp
inc
cmp
push
mov
aad
neg
push
mov
fwait
outs
mov
adc
cld
sub
das
add
xor
ficomp
popa
(bad)
in
inc
jmp
or
pop
(bad)
(bad)
hlt
imul
popf
jge
pop
inc
loop
ds
popf
mov
out
pop
and
enter
test
repnz
lods
test
fstp
lods
jnp
sbb
fcomp
jecxz
dec
push
ja
mov
std
lea
retf
aad
jae
fcmovnbe
lock
mov
into
in
aas
retf
mov
loope
sub
imul
pop
mov
movs
cmp
ins
scas
cmps
mov
sub
test
dec
push
inc
mov
mov
lds
leave
inc
push
mov
das
cmp
push
inc
cmp
pop
adc
xor
test
mov
jo
pop
enter
ror
sbb
mul
aas
int3
jns
dec
dec
jo
mov
fstp
sbb
aas
call
loop
stos
xor
in
xchg
mov
ins
and
and
mov
mov
retf
and
push
adc
pop
inc
jmp
leave
fdivrp
sub
loopne
addr16
dec
sbb
cmps
scas
mov
fsub
fwait
sub
mov
jl
xchg
rcl
pop
sbb
fldcw
add
loope
inc
ret
ins
cmp
addr16
and
loop
and
xor
enter
ins
cmp
rcr
or
jge
xor
loop
push
sbb
scas
sahf
mov
ss
mov
dec
adc
or
adc
adc
pop
loop
pop
cmp
adc
add
fbstp
leave
gs
pop
out
sbb
jmp
push
test
jmp
xor
retf
or
mov
push
repnz
lock
sti
enter
scas
jne
sbb
idiv
test
ret
jno
popa
shr
or
sbb
sub
inc
push
sub
sub
mov
addr16
jecxz
cmp
(bad)
(bad)
jl
ss
sbb
cmc
cld
(bad)
popf
int
push
rcl
fcomp
test
jmp
sub
pop
cmp
test
hlt
icebp
gs
rcl
dec
loope
ret
mov
or
fdiv
mov
mov
stos
ficom
test
or
nop
jmp
pushf
xchg
add
xlat
jge
clc
dec
loop
std
add
loop
js
cmp
ins
call
test
es
push
in
lods
xchg
jmp
or
sahf
adc
mov
sti
push
fild
xchg
and
push
mov
test
cmovp
imul
mov
pop
xor
jae
bound
and
mov
imul
test
mov
popf
bnd
push
mov
dec
xchg
stos
dec
in
mov
jge
mov
aad
pop
test
sub
adc
dec
ins
jb
out
out
mov
int
jle
test
std
push
sub
cmp
jl
mov
repnz
xchg
jns
or
test
pop
pop
mov
sub
push
jno
pop
mov
mov
scas
cmp
repz
loopne
or
or
aas
cmp
nop
js
sub
and
xor
push
inc
sbb
adc
mov
mov
repz
jmp
dec
xchg
adc
nop
cmp
shl
xchg
lods
or
cmp
push
sbb
popf
cmp
xor
fs
movs
push
xor
xchg
mov
stc
mov
daa
mov
test
mov
add
inc
inc
ins
(bad)
hlt
xor
push
sbb
push
mov
jge
lds
test
data16
and
and
repz
dec
sar
ret
js
push
into
jg
loope
arpl
repnz
fsubr
mov
call
and
cmp
aaa
gs
xchg
push
inc
mov
and
pop
enter
mov
ror
in
or
sahf
push
ret
xchg
cmps
ret
addr16
push
ins
push
cmc
stc
xor
pop
or
adc
xor
fs
sub
or
fisub
retf
push
jl
test
push
cwde
fidivr
push
xor
jl
jl
adc
(bad)
les
pop
outs
rol
cmp
jmp
imul
dec
stc
neg
fwait
inc
dec
xchg
push
sahf
in
scas
mov
xchg
xor
jp
xor
in
or
imul
sti
lea
mov
sbb
inc
pop
xor
mov
or
pop
pop
enter
es
call
lahf
data16
imul
sub
into
into
cmp
rol
(bad)
retf
lods
addr16
cmps
and
sub
adc
fmulp
ret
add
push
push
call
sub
dec
inc
aaa
mov
dec
mov
mov
or
and
daa
mov
test
or
cmp
adc
xchg
pop
scas
rcl
or
push
mov
mov
test
retf
jne
pusha
iret
inc
xor
or
mov
aaa
push
in
sti
add
or
scas
scas
lock
push
xor
into
xchg
test
ja
xor
or
jbe
jae
jnp
or
cmps
pop
sbb
adc
bound
pop
dec
push
cmp
push
bound
cmp
add
outs
dec
popa
movs
mov
mov
sbb
es
iret
(bad)
out
add
cmp
and
adc
(bad)
lods
and
xor
cld
fist
int
hlt
dec
push
cld
inc
mov
add
lahf
xor
pushf
cs
lahf
inc
mov
stos
mov
xor
popf
mov
xor
sahf
jb
sbb
fcomp
mov
xor
add
repnz
sub
mov
rol
mov
pop
jmp
inc
adc
(bad)
mov
add
adc
sbb
nop
(bad)
in
outs
dec
push
cmp
pusha
jl
sub
retf
cdq
clc
pop
inc
pop
ret
stos
mov
adc
sbb
push
add
inc
jb
imul
pop
aam
dec
adc
dec
cmp
retf
jo
leave
sub
adc
loope
xchg
fs
push
dec
adc
xchg
mov
fdivr
pop
retf
mov
sub
aad
pop
fadd
sbb
mov
cmp
mov
mov
push
test
inc
ja
mov
pop
clc
ins
(bad)
mov
pop
aam
and
dec
cs
lea
dec
pop
xchg
or
xchg
and
and
pop
stos
adc
fist
jmp
stos
push
aaa
inc
mov
test
stc
pop
add
adc
ss
sub
icebp
dec
sub
jg
xor
aad
pop
sbb
fwait
push
pop
ja
shr
pushf
cmp
stos
push
pop
push
xor
ins
mov
ja
jecxz
nop
sub
xchg
std
and
repz
or
dec
lock
lea
add
retf
pop
cs
jle
push
dec
mov
stc
xchg
lds
jb
or
shl
lods
rol
and
int3
int
popa
(bad)
add
pop
int
out
ja
imul
sub
xor
(bad)
pusha
adc
mov
xlat
jns
loopne
sub
nop
fadd
push
cli
ds
dec
mov
mov
jno
stc
push
outs
xchg
add
outs
push
dec
cmp
jl
stc
jge
inc
(bad)
(bad)
in
bound
fwait
add
jb
xlat
and
les
lods
jno
sub
pop
add
fdivr
pop
(bad)
push
push
cs
out
push
mov
loop
add
lahf
das
add
popf
ds
mov
mov
xchg
xor
and
xchg
mov
lahf
movs
pop
ja
(bad)
lods
xlat
mov
cwde
out
sub
sub
fdivr
push
xchg
lahf
mov
lods
punpcklbw
inc
test
inc
pop
pop
and
xchg
jne
(bad)
sbb
or
sbb
mov
sbb
mov
mov
push
das
jp
and
popf
sub
inc
jb
xor
shr
xchg
mov
and
jecxz
jno
pcmpgtb
mov
stc
and
(bad)
scas
cmp
stc
and
into
sub
ret
push
jmp
jge
(bad)
pop
mov
mov
out
rol
in
nop
inc
dec
cmps
std
out
sub
add
add
jecxz
jecxz
pop
cmp
das
cmc
jmp
and
int
test
out
int3
lods
xchg
pop
inc
mov
jne
test
jno
movs
and
aaa
pushf
lods
leave
sar
ins
fldpi
in
mov
mov
and
shl
mov
dec
sub
into
sbb
(bad)
outs
pop
cmp
cmp
(bad)
mov
dec
dec
jns
xlat
repz
jb
dec
(bad)
sti
jmp
pop
pop
and
and
shr
mov
(bad)
imul
sbb
pop
outs
popf
cmp
paddsb
mov
jmp
inc
xchg
jb
out
test
ficom
aaa
jns
and
into
jge
pop
jo
and
mov
aaa
pop
cmp
rol
jle
lods
and
mov
xchg
ret
mov
mov
or
push
imul
aad
inc
or
inc
aam
in
xchg
cmp
pop
rcr
dec
fistp
inc
sbb
into
cld
xchg
jb
daa
mov
sbb
jecxz
xor
in
jmp
int3
add
in
dec
jg
xchg
retf
bound
out
push
lahf
sbb
nop
jo
std
pop
xlat
rcl
dec
push
iret
fcmovne
sub
enter
outs
lock
jecxz
mov
ins
pop
push
lods
add
add
aaa
test
inc
xor
outs
jecxz
or
xor
mov
ja
scas
int
pop
xlat
or
cli
(bad)
fbstp
cmp
daa
jecxz
das
js
adc
or
fdivr
(bad)
xlat
lods
dec
mov
ficom
mov
sbb
fstp
pop
xor
dec
or
dec
mov
xchg
or
nop
push
and
imul
mov
xor
popa
add
and
and
test
call
push
pop
in
adc
xchg
out
mov
xchg
cdq
test
in
out
add
adc
sti
pusha
and
or
lea
xor
sbb
aad
cmp
pop
cmc
loop
cmp
ds
mov
das
pop
bswap
push
inc
rol
out
cmp
add
das
(bad)
push
push
test
mov
fadd
sub
out
div
pop
push
jne
add
test
dec
rol
mov
dec
mov
mov
test
repz
sahf
and
adc
scas
xor
adc
lahf
daa
(bad)
jbe
cmp
retf
in
inc
test
mov
sti
sbb
outs
pop
add
xchg
xor
aas
adc
jnp
cmp
call
jmp
sbb
sbb
mov
mov
outs
pop
outs
add
jns
or
cmps
sti
push
imul
mov
inc
sub
mov
xchg
mov
inc
mov
int3
hlt
jmp
retf
pushf
dec
xor
xchg
xor
sbb
adc
sub
enter
out
rcl
mov
adc
in
pop
test
pop
sbb
cld
mov
or
cmps
rol
push
fld
adc
lock
xor
cmps
lock
or
je
inc
mov
in
xchg
push
inc
cwde
jbe
test
enter
sub
in
jle
ret
mov
pop
pop
pop
xor
int
sbb
cdq
outs
xor
ret
pop
cmps
add
dec
(bad)
cmp
jnp
lods
fdiv
and
pushf
push
scas
jmp
push
and
xchg
dec
lds
mov
mov
cmp
mov
call
adc
dec
ja
push
xchg
mov
les
mov
push
mov
call
add
ja
in
mov
rcl
lock
jb
xchg
fcomp
mov
adc
inc
(bad)
(bad)
sahf
xchg
ret
movs
add
pop
js
mov
movs
in
pusha
jbe
cwde
cli
repz
dec
mov
scas
add
sub
data16
add
sbb
(bad)
daa
jmp
repz
aam
rol
jecxz
push
xchg
fild
xchg
mul
or
iret
mov
pcmpgtw
xchg
or
xchg
cdq
adc
push
test
aad
cld
call
lock
sti
popa
lahf
pop
inc
inc
retf
jmp
ud1
ds
jecxz
daa
jns
mov
jbe
shr
sub
rol
jg
xor
inc
xchg
inc
jno
push
add
and
cmp
adc
out
jnp
das
cmp
neg
dec
data16
fsubr
js
adc
sahf
rcl
jle
and
cmp
rol
add
xor
inc
jecxz
ss
retf
or
hlt
adc
pop
push
or
sahf
jmp
fs
lods
sti
cmp
daa
and
or
into
xchg
mov
mov
push
leave
repnz
xchg
ins
arpl
jmp
push
mov
(bad)
das
sbb
imul
jo
shl
cmp
and
pushf
mov
xchg
int3
cli
sahf
loopne
jmp
inc
dec
sub
or
push
and
sub
mov
dec
dec
sub
or
xchg
xchg
out
(bad)
jecxz
out
fisub
xchg
mov
bound
test
cmp
int
adc
dec
data16
clc
in
cmps
add
jmp
in
pop
fwait
dec
in
scas
imul
(bad)
cmp
inc
movs
into
adc
imul
in
sub
inc
mov
bnd
jmp
adc
jo
xchg
(bad)
add
xor
jns
dec
inc
pop
sub
jne
leave
mov
stc
xchg
push
ror
lds
aaa
out
mov
mov
jg
repz
push
pop
rol
jg
mov
out
jbe
and
push
js
sti
popf
xor
outs
outs
xor
jns
not
xor
rcr
jo
fnstsw
cli
adc
xchg
repnz
xchg
jno
jmp
lods
out
jmp
hlt
mov
mov
int
mov
repz
pop
mov
mov
push
or
aad
jp
jecxz
sub
xchg
xchg
call
push
mov
mov
dec
xchg
and
jae
add
iret
(bad)
mov
or
sub
cmps
icebp
pop
shl
or
out
shl
pop
add
int
mov
push
ror
cmc
stc
push
inc
gs
push
and
mov
test
lahf
(bad)
and
mov
add
xor
add
das
push
mov
fcmovnb
jecxz
rcr
mov
cmp
cdq
inc
test
sbb
jecxz
(bad)
pop
add
nop
test
pop
add
jge
pop
hlt
xchg
mov
je
test
sbb
cmps
push
bnd
inc
xchg
shl
add
icebp
(bad)
cld
dec
retf
mov
xor
in
pop
inc
push
inc
push
ret
jbe
inc
cwde
xchg
and
test
mov
int
dec
sbb
shl
stc
mov
cmp
test
cmc
ret
cmps
add
arpl
ins
push
(bad)
sub
movs
fiadd
hlt
inc
pop
retf
cld
sub
push
repz
ret
pushf
mov
mov
dec
(bad)
(bad)
adc
sbb
and
ds
add
pop
jmp
or
mov
(bad)
or
and
mov
mov
fstp
jns
clc
xlat
xchg
movntq
push
mov
loope
xchg
das
repnz
cmp
jo
xchg
push
cs
add
xor
mov
pop
iret
pop
js
fst
push
out
add
and
pop
nop
test
shr
outs
xchg
and
cdq
or
in
jb
(bad)
dec
pop
addr16
jecxz
adc
mov
or
ins
add
nop
add
les
add
mov
pop
jb
dec
adc
rol
arpl
jg
dec
loope
stos
arpl
ins
out
dec
aaa
(bad)
imul
outs
push
sar
pop
hlt
or
or
(bad)
sbb
ins
ja
xchg
ins
xlat
inc
xlat
lea
inc
xor
aas
inc
hlt
jl
jo
cs
jb
xlat
stc
fdiv
idiv
jbe
scas
mov
sub
test
mov
xchg
ret
nop
bound
inc
lds
add
push
cmps
(bad)
faddp
cwde
clc
data16
add
ins
out
xchg
and
xchg
mov
scas
jmp
gs
and
rcl
mov
nop
jg
inc
ja
pop
xor
sbb
fs
xchg
stos
mov
and
sub
add
mov
hlt
maxps
mov
fs
mov
ds
or
mov
push
add
idiv
and
pop
jnp
sar
retf
pushf
mov
shr
push
add
sub
xchg
jle
xor
jbe
shl
js
xchg
pop
adc
jg
inc
adc
nop
arpl
dec
mov
test
and
data16
push
retf
loope
je
jmp
dec
mov
mov
xchg
mov
inc
jbe
inc
mov
je
or
lahf
add
in
retf
call
mov
sub
lds
std
push
in
mov
mov
add
leave
push
sbb
add
pop
int3
jle
jmp
xor
rol
lea
ror
mov
xlat
push
cld
xor
pop
ins
mov
push
xor
xchg
lds
div
data16
adc
xor
jo
mov
cld
rol
sahf
test
loope
cmps
jmp
cmps
in
push
xor
es
pop
dec
dec
jne
sbb
pop
pop
adc
out
stos
cmp
inc
ret
outs
mov
mov
adc
cmp
js
pop
xchg
cs
mov
and
push
sar
enter
imul
pop
xchg
mov
xlat
shr
push
adc
ja
nop
mov
jmp
push
or
mov
or
pop
mov
or
pop
daa
cmp
stos
mov
or
(bad)
xlat
cmp
lods
and
pop
scas
hlt
mov
jle
std
rcr
pop
(bad)
dec
pop
cmp
(bad)
add
lahf
pop
mov
mov
mov
push
aad
mov
in
sub
in
sbb
fiadd
jns
repnz
lds
inc
and
outs
(bad)
icebp
or
jecxz
push
mov
sub
ins
ja
adc
jge
rol
jno
(bad)
push
xor
and
ins
sub
iret
in
or
and
fcom
xchg
movs
cmp
loop
cmp
(bad)
imul
cmp
out
jle
sub
dec
sbb
xchg
xchg
sub
(bad)
out
pop
imul
mov
popa
push
cli
adc
add
stos
outs
pushf
icebp
push
daa
sbb
popa
lods
mov
clc
mov
aaa
aas
fsubr
in
cmp
sahf
or
icebp
jecxz
xor
inc
jle
mov
pusha
pop
sub
pushf
xlat
mov
push
xchg
xchg
pusha
push
mov
ins
mov
std
movs
mov
and
add
and
out
into
or
cdq
mov
pop
pushf
jno
mov
xchg
mov
pop
pop
sub
jmp
jmp
xlat
inc
pop
outs
out
cmps
repz
xlat
jecxz
adc
cmp
pop
in
pop
add
shl
int3
imul
cmp
push
js
aad
sbb
and
push
ret
mov
cmp
sti
movs
xor
or
dec
mov
sbb
mov
ret
jmp
fcom
out
movs
sbb
push
cmps
repnz
mov
xor
ins
xchg
mov
xor
pushf
test
or
(bad)
dec
retf
and
aam
mov
jno
mov
and
daa
dec
into
inc
aas
fdivr
jns
retf
mov
sub
lock
popa
out
outs
stc
daa
stc
das
sahf
popf
sbb
lock
(bad)
outs
popa
adc
repnz
repnz
and
iretw
jle
(bad)
jl
in
pop
test
dec
ds
mov
mov
(bad)
out
add
mov
mov
cmps
in
das
mov
fcmovne
movs
popa
mov
fimul
imul
mov
adc
nop
cmps
(bad)
icebp
in
pop
jp
xor
aas
mov
mov
mov
sar
push
sbb
add
call
scas
fistp
cmp
or
jnp
imul
sbb
push
jmp
push
xlat
mov
inc
(bad)
inc
add
add
add
rcl
add
add
add
xor
sub
add
add
adc
add
add
or
or
add
sbb
or
push
add
xor
add
xor
pop
push
or
push
add
xor
add
xor
add
add
add
and
or
add
sbb
test
icebp
out
out
nop
cli
js
sub
or
xor
add
add
add
push
xor
dec
xchg
or
add
xor
xor
push
add
push
adc
push
dec
xor
xor
push
add
or
adc
imul
jo
and
outs
outs
xor
xor
push
add
add
or
jb
jne
and
xor
pop
or
xor
xor
xor
pop
or
xor
xor
xor
xor
or
add
push
adc
push
dec
xor
xor
push
add
or
sbb
imul
arpl
outs
ins
outs
imul
xor
xor
or
push
inc
gs
jne
and
jb
imul
outs
outs
and
je
outs
jb
je
xor
xor
add
push
inc
gs
jne
and
gs
jo
outs
and
je
outs
jb
je
xor
push
or
xchg
test
(bad)
xor
add
add
in
test
pop
mov
out
mov
and
mov
xor
dec
imul
clc
iret
pop
(bad)
jecxz
daa
in
xchg
addr16
(bad)
jecxz
add
cmp
sub
mov
iret
ja
jnp
mov
(bad)
sar
int
fadd
cmp
rol
pop
or
fnstsw
repnz
add
sbb
pop
jp
(bad)
sub
fmul
mov
iret
ret
push
jbe
in
ja
call
icebp
adc
cs
call
iret
sbb
xor
pop
sbb
sar
xlat
(bad)
sbb
lahf
inc
sub
sub
rcr
call
cmps
jns
mov
push
add
retf
pop
inc
xchg
push
xchg
hlt
es
fmul
iret
jmp
jnp
hlt
lahf
jmp
mov
push
mov
int
add
add
mov
push
push
add
and
or
or
or
push
add
xor
add
pop
add
xor
xor
mov
sbb
je
cmp
das
arpl
arpl
je
ins
cs
das
arpl
arpl
xor
push
add
adc
xor
xchg
je
jo
das
das
je
popa
arpl
je
ins
cs
xor
dec
xchg
or
add
add
add
test
cmp
js
push
adc
push
pop
pop
pop
pop
daa
or
fnstcw
lods
mov
mov
outs
jns
jnp
adc
scas
int
adc
pop
repnz
adc
xchg
add
mov
mov
xor
push
pop
mov
or
pushf
shl
push
cmp
sbb
dec
(bad)
pop
call
push
(bad)
(bad)
icebp
arpl
in
addr16
addr16
inc
mov
scas
adc
and
add
mov
and
inc
adc
xor
adc
jg
out
les
ret
jg
stc
xor
aam
lods
jns
cmp
scas
call
push
test
ins
mov
xchg
xchg
aam
xchg
push
xchg
jo
imul
call
sub
loopne
add
jg
fcom
test
xchg
pop
cmps
push
ins
and
cmps
mov
xor
add
mov
add
add
xor
ror
cmp
push
or
xchg
test
or
or
add
push
adc
push
dec
xor
xor
push
add
or
sbb
imul
arpl
outs
ins
outs
imul
xor
xor
or
push
inc
gs
jne
and
jb
imul
outs
outs
and
je
outs
jb
je
xor
xor
push
add
add
sbb
jb
jne
and
jae
gs
je
outs
jb
and
xor
sbb
xor
xor
xor
xor
xor
xor
xor
rdmsr
xor
xor
xor
xor
xor
xor
or
or
add
push
adc
push
dec
xor
xor
push
add
or
sbb
imul
arpl
outs
ins
outs
imul
xor
xor
or
push
inc
gs
jne
and
jb
imul
outs
outs
and
je
outs
jb
je
xor
xor
add
push
inc
gs
jne
and
fs
outs
imul
add
xor
dec
xchg
or
add
add
add
add
add
popa
xchg
(bad)
mov
mov
mov
mov
pop
xchg
sub
jg
out
nop
xor
push
hlt
xchg
ins
add
test
mov
cld
sub
inc
hlt
aas
mov
push
xlat
ins
mov
dec
adc
stos
outs
add
lods
daa
xchg
or
cmp
mov
jb
jle
xchg
fwait
cmp
test
retf
les
jb
fsub
cmp
or
ins
stos
xchg
ror
aaa
xor
and
shl
out
sub
scas
xor
ret
aaa
adc
push
jnp
push
ins
(bad)
push
adc
imul
(bad)
in
in
int
sbb
int3
ja
sub
pop
lahf
jle
mov
ret
sub
cs
pop
das
push
pop
fisubr
jmp
jmp
mov
cld
ja
or
(bad)
mov
add
add
mov
add
xor
push
add
adc
add
add
xor
add
push
sbb
push
add
add
js
nop
icebp
dec
pop
int3
xor
sbb
sbb
and
(bad)
xor
push
add
and
xor
adc
int
pop
jmp
vpaddsw
aaa
inc
jne
xor
push
add
sgdtd
inc
add
add
xor
push
add
and
push
or
push
add
xor
push
add
pop
add
xor
xor
and
je
jo
das
das
arpl
arpl
je
ins
cs
das
arpl
popa
arpl
xor
or
push
add
add
xor
sub
or
push
add
xchg
je
jo
das
das
jae
bound
outs
arpl
sub
jne
arpl
xor
push
or
push
add
xchg
cmp
das
jb
jo
jae
je
jb
arpl
je
ins
cs
das
arpl
popa
arpl
xor
push
add
and
xor
xor
push
add
sbb
xor
add
push
sbb
je
jae
das
das
ja
ja
arpl
je
ins
cs
das
inc
push
push
xor
dec
xchg
or
add
add
add
or
cmp
push
les
cmps
mov
inc
lock
inc
ret
hlt
mov
fimul
jmp
std
jno
popa
cli
jl
(bad)
mov
pop
lock
test
cmp
aas
push
push
push
movs
je
mov
mov
push
(bad)
sbb
push
aaa
paddusw
xor
pop
adc
js
(bad)
clc
mov
aas
mov
mov
sbb
js
xchg
call
jb
dec
sbb
dec
mov
xchg
inc
xlat
mov
aaa
fcom
cmp
jle
and
(bad)
mov
mov
jne
dec
push
loope
popa
cld
shr
dec
mov
push
and
retf
mov
adc
mov
mov
xchg
xor
inc
loop
fistp
icebp
sub
add
inc
mov
add
or
mov
add
add
jge
pop
out
dec
pop
jns
out
xchg
rol
xchg
repz
xor
add
mov
add
pop
mov
div
fist
es
jbe
or
dec
xchg
or
add
jnp
or
or
add
push
adc
push
dec
xor
xor
push
add
or
sbb
imul
arpl
outs
ins
outs
imul
xor
xor
or
push
inc
gs
jne
and
jb
imul
outs
outs
and
je
outs
jb
je
xor
xor
add
push
inc
gs
jne
and
fs
outs
imul
push
pop
or
xor
xor
xor
xor
pop
pop
or
xor
xor
xor
xor
pop
xor
or
add
push
adc
inc
pop
xor
push
add
or
push
dec
push
dec
dec
inc
and
imul
outs
xor
push
add
or
push
dec
push
dec
dec
inc
and
imul
outs
xor
push
add
or
push
dec
push
dec
dec
inc
and
imul
outs
xor
sub
add
add
push
jne
gs
je
jb
ins
popa
arpl
add
xor
dec
xchg
or
add
add
add
add
add
inc
fstp
pop
cs
cmps
lods
inc
push
out
retf
jnp
aam
or
fwait
(bad)
outs
and
imul
sub
sti
ja
lods
scas
inc
dec
push
daa
cld
adc
mov
lods
or
sbb
(bad)
dec
adc
or
add
add
aam
lahf
pop
mov
jp
mov
idiv
xor
or
pop
jle
sbb
xchg
and
outs
movs
iret
inc
sar
imul
sahf
nop
pushf
(bad)
dec
xchg
and
cmp
jmp
test
push
xchg
mov
xor
jne
inc
mul
and
xchg
pop
iret
mov
and
call
adc
jmp
(bad)
mov
adc
inc
jmp
fist
mov
or
outs
cmp
dec
movs
sbb
dec
sahf
popf
push
and
jb
add
add
add
add
xor
add
adc
add
add
xor
xor
push
add
pop
add
xor
mov
je
jo
das
das
arpl
arpl
je
ins
cs
das
arpl
popa
arpl
xor
or
push
add
add
xor
es
or
push
add
xchg
push
das
das
arpl
popa
outs
arpl
arpl
je
ins
cs
xor
push
or
push
add
xchg
je
jo
das
das
jb
jo
jae
je
jb
arpl
je
ins
cs
das
arpl
popa
arpl
xor
push
add
and
xor
adc
nop
icebp
dec
pop
int3
xor
sbb
sbb
and
(bad)
xor
push
add
add
sahf
pop
mov
add
xor
pop
jl
(bad)
out
xchg
xor
push
add
adc
xor
or
inc
arpl
je
ins
cs
xor
push
add
sgdtd
inc
add
add
ds
add
and
add
xor
sub
add
add
and
add
push
sbb
je
jae
das
das
ja
ja
arpl
je
ins
cs
das
inc
push
push
xor
push
add
xor
sbb
imul
arpl
outs
ins
outs
imul
xor
add
add
add
and
and
jae
arpl
je
imul
and
and
jb
arpl
and
bound
arpl
and
je
and
push
push
push
dec
and
jb
imul
outs
outs
and
popa
arpl
and
popa
je
ins
outs
je
sub
push
sub
imul
jb
je
and
and
data16
outs
arpl
push
outs
and
and
and
and
jo
jae
je
jb
and
and
je
jae
das
das
ja
ja
arpl
je
ins
cs
das
jb
jo
jae
je
jb
xor
push
add
and
push
or
push
add
xor
push
or
dec
add
add
add
add
xor
dec
xchg
or
add
add
add
jmp
popf
sahf
mov
mov
push
xor
pop
adc
out
cmp
aaa
inc
jmp
adc
scas
pop
sbb
jne
ret
ins
popa
addr16
(bad)
repz
loopne
(bad)
fist
fisttp
in
mov
pop
mov
mov
outs
mov
mov
cmps
cdq
dec
fisttp
das
and
pop
jg
cdq
ins
or
add
or
or
or
jecxz
jno
retf
add
and
sub
mov
add
inc
mov
inc
stos
push
jg
pop
push
lahf
jno
mov
cmp
push
add
lea
scas
inc
fwait
popf
popa
xor
(bad)
xchg
xchg
lds
adc
je
or
adc
loope
cmp
cmp
mov
daa
das
mov
adc
mov
mov
outs
fldcw
pop
push
mov
xor
add
add
add
or
push
add
adc
push
dec
xor
xor
push
add
or
sbb
imul
arpl
outs
ins
outs
imul
xor
xor
or
push
inc
gs
jne
and
jb
imul
outs
outs
and
je
outs
jb
je
xor
xor
add
push
inc
gs
jne
and
fs
outs
imul
adc
adc
ja
fist
es
jbe
or
add
sbb
xor
push
or
xchg
test
push
add
xor
add
sbb
or
push
add
xor
add
xor
xor
or
push
add
xor
add
sub
add
add
push
add
or
pop
jmp
add
leave
mov
xor
or
push
add
xor
add
push
xor
sbb
ins
add
jb
je
and
push
add
add
add
xor
or
dec
xchg
or
add
add
xchg
(bad)
addr16
or
jae
jp
sub
sbb
pop
inc
jne
stc
xor
pop
(bad)
cli
loopne
icebp
adc
fidiv
in
xchg
mov
dec
sub
xchg
inc
mov
add
dec
mov
inc
push
xor
jle
jno
inc
mov
mov
test
into
in
pusha
fcomp
in
(bad)
mov
dec
in
jge
in
aaa
push
dec
sbb
cmp
ds
test
mov
push
lods
es
dec
add
adc
and
inc
mov
test
mov
sub
mov
popf
scas
adc
std
or
outs
dec
cwde
push
inc
cmp
xchg
ror
retf
pop
lods
out
mov
and
pop
mov
mov
out
ror
or
dec
xchg
in
inc
in
lea
leave
sbb
mov
add
push
or
xchg
test
add
add
add
inc
xor
xor
xor
push
add
push
adc
push
dec
xor
xor
push
add
or
adc
imul
jo
and
outs
outs
xor
xor
push
add
add
or
jb
jne
and
add
add
push
xor
push
add
sbb
xor
push
or
xchg
test
xchg
test
xchg
test
xor
xor
xor
and
or
xchg
test
inc
leave
push
repnz
adc
cmp
call
lods
outs
xor
or
xchg
test
xor
popa
add
or
dec
add
das
adc
fisub
retf
test
cmps
popa
adc
dec
xor
inc
xor
xor
xor
push
add
push
adc
push
dec
xor
xor
push
add
or
adc
imul
jo
and
outs
outs
xor
xor
push
add
add
or
jb
jne
and
add
add
push
xor
dec
xchg
or
add
add
ds
aaa
cs
fwait
outs
xchg
pop
mov
mov
adc
pop
cmp
push
mov
shr
mov
inc
jge
popf
inc
sbb
mov
or
add
inc
retf
cmc
push
fstp
add
xchg
mov
inc
cmps
jmp
xor
mov
out
aam
cmps
rcl
mov
pop
inc
arpl
je
jge
aaa
ror
test
(bad)
lods
fidiv
ins
sub
(bad)
ret
cmp
push
and
(bad)
out
or
jnp
mov
sub
push
mov
pop
ja
lds
(bad)
push
adc
xor
(bad)
xchg
cs
cli
sti
adc
dec
popa
sub
mov
(bad)
out
lods
adc
xchg
mov
test
sbb
jae
bound
or
frstor
add
add
add
add
or
dec
pop
nop
add
add
add
add
(bad)
inc
add
add
add
add
clc
add
add
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
jge
jb
cmp
add
jo
add
jo
add
adc
cmp
add
jo
add
push
push
add
sbb
mov
inc
add
jo
add
jo
add
js
add
jo
add
push
pop
add
mov
sbb
add
add
jo
add
jbe
add
jo
add
arpl
jo
add
add
add
add
dec
add
dec
loopne
sidtd
add
add
mov
add
rol
add
add
add
add
adc
add
mov
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
pop
test
add
add
add
add
add
add
cs
js
add
add
adc
add
mov
add
add
add
add
pusha
cs
popa
je
add
add
add
add
add
add
add
inc
add
inc
cs
je
add
add
aad
add
mov
add
add
add
inc
add
shr
js
popa
je
add
add
add
add
add
or
inc
add
shr
jae
arpl
add
sub
add
add
add
add
or
inc
add
inc
push
mov
call
test
je
mov
jmp
cmp
je
push
mov
mov
push
push
push
push
push
push
call
lea
push
mov
push
push
mov
call
pop
xor
pop
ret
push
mov
sub
push
push
mov
push
mov
push
push
push
push
push
push
call
push
pop
call
mov
push
push
push
pop
call
mov
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
push
push
push
push
call
mov
mov
add
adc
add
adc
mov
add
mov
adc
add
pop
pop
adc
pop
leave
ret
push
mov
push
push
mov
lea
mov
mov
lea
mov
call
mov
or
jne
and
mov
push
push
push
push
call
push
push
push
push
call
leave
ret
push
mov
sub
push
push
push
mov
push
mov
pop
lea
push
push
call
mov
push
push
call
lea
push
call
add
cmp
jge
sub
push
push
call
pop
dec
pop
jne
lea
push
push
call
pop
pop
pop
pop
pop
leave
ret
push
mov
mov
push
mov
add
mov
push
adc
push
push
push
call
mov
push
push
push
pop
call
mov
push
push
call
mov
push
push
call
pop
pop
ret
push
push
push
mov
push
push
call
mov
push
push
push
pop
call
pop
ret
push
mov
sub
push
mov
call
test
je
mov
jmp
cmp
je
push
mov
push
push
mov
push
push
push
push
push
push
push
call
push
mov
mov
push
call
pop
lea
pop
push
pop
rep
push
mov
xor
push
push
push
call
push
mov
mov
push
push
push
call
mov
lea
mov
push
push
mov
lea
mov
push
call
pop
pop
xor
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
call
test
jne
push
pop
jmp
call
mov
mov
call
mov
mov
push
push
push
mov
push
call
cmp
jne
mov
cmp
jbe
and
cmp
jne
push
pop
push
mov
pop
shl
mov
call
add
adc
cmp
jb
ja
cmp
jbe
dec
cmp
jg
push
mov
pop
shl
mov
mov
mov
push
push
call
mov
push
push
mov
call
lea
mov
call
mov
push
push
call
pop
xor
pop
push
push
call
pop
test
pop
jne
push
push
call
pop
pop
inc
cmp
jl
push
push
call
pop
xor
pop
push
push
call
pop
test
pop
jne
push
push
call
pop
pop
inc
cmp
jl
push
push
call
and
cmp
pop
pop
jbe
cmp
sbb
and
add
mov
push
mov
pop
mov
mov
shl
cmp
jbe
dec
jmp
mov
shl
cmp
ja
push
push
push
call
mov
add
lea
mov
push
mov
call
mov
push
push
call
pop
test
pop
jne
inc
push
pop
mov
shl
cmp
jbe
mov
inc
mov
cmp
jb
lea
call
lea
call
push
push
call
pop
lea
pop
mov
call
push
push
call
pop
lea
pop
mov
call
push
push
call
pop
lea
pop
push
lea
push
lea
call
lea
mov
call
push
push
call
pop
xor
pop
pop
pop
pop
leave
ret
mov
jmp
push
push
mov
push
mov
mov
mov
or
je
push
push
push
push
call
push
push
push
mov
mov
push
call
push
push
push
mov
mov
push
call
mov
mov
and
mov
pop
pop
pop
ret
push
mov
push
push
mov
mov
push
mov
mov
add
pop
adc
call
mov
mov
mov
mov
add
push
pop
adc
call
mov
mov
mov
mov
add
push
pop
adc
call
mov
mov
mov
mov
add
push
pop
adc
call
mov
mov
pop
pop
pop
ret
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
push
mov
push
mov
push
call
pop
pop
push
mov
push
push
push
push
push
call
pop
pop
ret
push
mov
push
push
push
call
mov
mov
add
push
pop
call
mov
push
push
push
pop
call
push
push
push
push
call
add
pop
ret
mov
call
sub
push
push
push
mov
mov
call
test
jne
push
pop
jmp
call
mov
mov
call
mov
mov
push
push
push
mov
push
call
cmp
jne
mov
cmp
jne
mov
mov
mov
shl
push
call
mov
mov
mov
and
mov
push
call
pop
xor
test
pop
jbe
lea
push
push
push
call
and
and
mov
add
add
cmp
jb
push
push
call
xor
pop
cmp
pop
mov
mov
mov
jbe
mov
mov
push
pop
shl
cmp
mov
ja
push
push
push
call
xor
add
cmp
jbe
mov
call
test
jne
mov
inc
lea
mov
push
call
test
jne
mov
mov
push
pop
call
mov
push
push
push
pop
call
mov
mov
add
adc
add
cmp
jb
push
push
call
add
pop
pop
adc
inc
cmp
jl
inc
mov
cmp
jb
mov
or
je
push
push
call
mov
pop
test
pop
jbe
mov
push
push
push
push
call
push
pop
call
mov
push
push
push
pop
call
add
dec
jne
push
push
call
pop
pop
push
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
mov
jmp
mov
push
call
pop
mov
jmp
push
call
pop
ret
xor
cmp
setg
ret
push
mov
push
push
mov
push
push
mov
call
test
jne
lea
push
push
mov
call
mov
pop
leave
ret
cmp
jne
push
pop
jmp
inc
xor
cmp
setl
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
push
mov
call
test
jne
lea
push
push
mov
call
leave
ret
call
neg
sbb
and
ret
push
mov
push
mov
push
push
push
mov
push
call
mov
call
mov
call
mov
call
push
mov
call
mov
call
sub
pop
je
dec
je
dec
je
dec
je
dec
je
dec
je
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
and
xor
pop
ret
mov
push
mov
sub
je
dec
je
dec
jne
push
jmp
push
jmp
push
mov
call
push
mov
call
mov
test
je
push
mov
push
push
push
call
mov
call
mov
call
xor
pop
ret
push
mov
push
push
mov
call
mov
call
add
adc
add
adc
xor
pop
ret
push
mov
push
xor
cmp
push
mov
je
add
mov
push
adc
add
adc
call
mov
dec
je
dec
je
dec
je
push
jmp
cmp
mov
jne
mov
jmp
cmp
mov
jne
mov
push
jmp
push
mov
call
mov
push
call
pop
xor
pop
pop
ret
push
mov
add
call
xor
ret
mov
call
sub
push
mov
cmp
jne
mov
lea
call
and
push
lea
call
push
call
pop
mov
push
call
mov
pop
mov
mov
neg
sbb
mov
and
add
leave
ret
add
push
pop
mov
mov
adc
mov
push
mov
push
push
push
call
mov
call
mov
call
mov
call
xor
ret
mov
call
sub
push
push
push
mov
mov
mov
push
call
mov
test
je
mov
push
call
cmp
jne
cmp
mov
jne
mov
push
mov
call
jmp
cmp
jne
push
jmp
mov
lea
call
push
mov
and
call
push
or
call
pop
mov
push
call
add
adc
mov
pop
pop
xor
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
xor
mov
push
lea
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
push
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
mov
push
push
push
call
mov
call
mov
call
xor
ret
mov
call
sub
push
mov
push
push
test
mov
jne
mov
mov
push
call
mov
mov
mov
or
jne
mov
push
push
call
jmp
add
push
push
mov
push
push
adc
call
mov
call
mov
jmp
add
adc
cmp
je
cmp
je
push
mov
mov
push
call
mov
call
cmp
jne
push
mov
call
jmp
xor
push
lea
mov
mov
mov
call
and
lea
mov
call
push
mov
call
push
or
call
pop
mov
push
call
xor
jmp
mov
mov
pop
pop
pop
mov
leave
ret
push
push
mov
mov
cmp
je
mov
and
and
push
call
mov
mov
mov
mov
inc
inc
inc
inc
test
jne
mov
mov
mov
pop
pop
ret
push
push
mov
mov
and
and
and
push
call
mov
mov
mov
mov
inc
inc
test
jne
mov
pop
mov
mov
pop
ret
mov
push
push
mov
lea
cmp
je
lea
push
push
call
mov
xor
cmp
pop
jle
cmp
jle
mov
mov
mov
inc
cmp
jl
push
call
pop
mov
mov
and
mov
pop
pop
pop
ret
mov
push
push
mov
lea
cmp
je
push
push
call
mov
xor
cmp
pop
jle
cmp
jle
mov
mov
mov
inc
cmp
jl
push
call
pop
mov
mov
and
mov
pop
pop
pop
ret
mov
call
sub
push
push
mov
call
mov
test
jle
mov
push
lea
lea
call
mov
push
and
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
push
or
call
add
dec
pop
jne
pop
mov
pop
pop
mov
leave
ret
push
mov
xor
push
lea
mov
mov
mov
call
mov
pop
ret
push
call
pop
ret
mov
call
sub
push
push
push
mov
call
mov
lea
push
push
mov
call
xor
cmp
jne
cmp
jbe
mov
and
lea
mov
push
and
lea
push
lea
push
push
push
call
test
mov
jne
lea
call
mov
push
lea
mov
mov
call
push
lea
mov
call
push
mov
call
pop
lea
mov
push
call
push
call
or
pop
push
call
inc
cmp
jb
xor
mov
pop
pop
pop
mov
leave
ret
push
call
mov
jmp
push
call
ret
push
mov
sub
and
push
push
mov
mov
mov
cmp
je
add
cmp
jb
cmp
je
push
jmp
push
jmp
lea
mov
call
lea
push
mov
call
mov
pop
pop
leave
ret
push
push
mov
xor
cmp
jle
push
mov
mov
mov
call
cmp
jne
xor
jmp
mov
mov
lea
push
call
inc
cmp
jl
pop
pop
pop
ret
test
jle
push
mov
push
mov
call
dec
jne
pop
ret
push
push
push
mov
mov
xor
sub
sub
mov
je
dec
je
dec
jne
mov
jmp
mov
cdq
sub
mov
sar
mov
call
push
mov
call
mov
sub
call
pop
pop
pop
ret
push
push
mov
xor
cmp
jle
push
push
mov
mov
mov
call
xor
cmp
jle
push
mov
call
inc
cmp
jl
inc
cmp
jl
pop
pop
pop
pop
ret
mov
call
sub
push
xor
cmp
push
push
mov
mov
jle
jmp
mov
mov
mov
cmp
mov
jne
mov
call
mov
mov
mov
mov
cmp
jne
push
lea
mov
mov
mov
call
mov
lea
push
mov
push
call
push
mov
cmp
jne
lea
call
push
mov
call
pop
jmp
mov
lea
push
push
mov
push
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
push
push
mov
call
mov
call
jmp
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
cmp
jne
cmp
je
cmp
jne
neg
sbb
mov
and
mov
mov
mov
lea
push
call
mov
cmp
jne
mov
lea
push
mov
call
lea
mov
push
call
mov
jmp
cmp
jne
cmp
jne
mov
call
jmp
cmp
jne
lea
call
jmp
cmp
jne
cmp
push
je
mov
call
jmp
lea
call
mov
mov
lea
mov
push
call
push
mov
jmp
push
push
lea
lea
call
push
push
lea
mov
call
push
push
lea
call
cmp
je
push
mov
call
jmp
mov
mov
lea
push
call
push
mov
call
pop
cmp
je
push
mov
call
or
lea
call
inc
mov
mov
cmp
jl
xor
mov
pop
pop
pop
mov
leave
ret
call
pop
or
lea
call
mov
jmp
or
lea
call
mov
jmp
jmp
test
jne
test
mov
je
mov
mov
mov
mov
and
neg
sbb
and
add
mov
mov
and
neg
sbb
and
add
mov
mov
and
neg
sbb
and
and
add
neg
sbb
and
and
mov
add
mov
ret
push
mov
sub
cmp
push
je
lea
push
push
mov
call
lea
mov
call
test
jne
lea
push
push
call
test
jne
lea
push
push
mov
call
push
push
lea
lea
call
test
je
lea
push
jmp
push
mov
call
pop
leave
ret
xor
cmp
jne
cmp
jne
push
pop
ret
mov
call
sub
and
push
mov
cmp
jle
push
push
mov
mov
mov
mov
mov
call
xor
mov
mov
mov
mov
cmp
jne
push
mov
mov
call
jmp
cmp
jne
push
jmp
cmp
jne
push
lea
push
call
lea
lea
push
call
push
lea
mov
call
push
lea
call
push
lea
call
push
lea
push
call
lea
lea
push
call
push
lea
call
push
lea
call
mov
lea
push
xor
call
push
jmp
push
lea
call
mov
mov
lea
mov
push
call
push
call
pop
or
lea
call
inc
mov
cmp
jl
pop
pop
mov
xor
pop
mov
leave
ret
mov
call
sub
and
push
push
push
mov
push
pop
xor
lea
mov
rep
stos
mov
test
je
push
lea
push
call
lea
lea
push
call
and
lea
push
mov
mov
call
push
call
pop
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
and
and
push
mov
lea
and
push
push
push
push
call
test
pop
je
lea
push
push
mov
call
cmp
jne
or
lea
call
xor
jmp
lea
call
mov
or
mov
mov
lea
call
mov
mov
mov
leave
ret
mov
call
sub
mov
push
mov
xor
push
push
mov
mov
lea
mov
call
cmp
mov
jne
push
push
lea
call
mov
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jle
mov
mov
cmp
mov
mov
mov
mov
mov
jne
lea
call
mov
lea
mov
push
call
test
je
mov
shr
test
jne
mov
push
mov
mov
mov
mov
call
pop
lea
call
lea
mov
call
mov
push
lea
mov
mov
mov
mov
call
lea
lea
push
push
push
push
push
push
call
cmp
mov
je
cmp
je
mov
push
mov
mov
push
push
push
call
mov
call
mov
call
mov
call
cmp
jne
lea
call
test
je
push
mov
call
jmp
mov
push
push
mov
mov
push
push
push
call
mov
call
mov
call
mov
call
mov
call
mov
mov
push
add
adc
call
pop
jmp
push
jmp
cmp
jne
push
jmp
mov
lea
call
push
mov
mov
call
mov
push
call
pop
push
mov
call
mov
add
adc
jmp
cmp
jne
cmp
mov
jle
mov
mov
push
mov
call
cmp
mov
jl
mov
cmp
jle
mov
push
push
mov
call
mov
push
mov
push
call
mov
mov
mov
inc
mov
cmp
jl
cmp
je
mov
push
push
mov
mov
push
push
push
call
mov
call
mov
call
mov
call
mov
call
cmp
mov
jle
mov
mov
push
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
call
mov
lea
push
mov
push
mov
mov
call
test
jne
cmp
mov
jbe
mov
lea
mov
push
lea
mov
push
lea
mov
push
push
push
call
cmp
mov
jne
mov
mov
mov
lea
push
mov
push
mov
push
call
cmp
mov
jne
push
lea
push
lea
call
cmp
mov
je
push
mov
lea
call
mov
mov
mov
mov
call
push
call
pop
push
call
pop
mov
lea
call
mov
push
call
inc
mov
cmp
jb
mov
dec
cmp
je
push
mov
call
mov
lea
push
push
mov
call
test
jne
mov
mov
cmp
mov
mov
mov
mov
jbe
mov
lea
mov
push
lea
mov
push
lea
mov
push
push
push
call
cmp
mov
jne
mov
mov
mov
lea
push
mov
push
mov
push
push
call
cmp
mov
jne
push
lea
push
lea
call
cmp
mov
je
push
mov
lea
call
mov
mov
mov
mov
call
push
call
pop
push
call
pop
mov
lea
call
mov
push
call
inc
mov
cmp
jb
inc
mov
cmp
jl
push
mov
call
cmp
je
push
mov
call
cmp
jne
lea
call
mov
push
call
lea
call
mov
push
call
mov
mov
cmp
mov
mov
mov
mov
je
push
lea
call
cmp
mov
jne
mov
lea
mov
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
call
cmp
mov
jne
cmp
mov
jbe
call
test
jne
push
lea
mov
mov
mov
call
mov
lea
push
mov
push
call
cmp
mov
je
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
mov
jne
cmp
mov
sete
push
lea
push
call
test
je
push
lea
push
push
call
mov
mov
lea
push
push
call
test
jne
mov
mov
jmp
lea
mov
mov
mov
lea
push
push
call
test
jne
mov
mov
jmp
lea
mov
push
mov
call
cmp
je
add
adc
jmp
add
adc
mov
mov
add
mov
adc
add
mov
adc
push
mov
call
inc
pop
mov
cmp
jb
jmp
push
mov
call
pop
cmp
jne
cmp
jne
cmp
je
mov
mov
add
adc
mov
or
jne
mov
mov
jmp
mov
mov
mov
mov
lea
mov
cmp
jne
mov
or
jne
lea
mov
mov
mov
cmp
je
cmp
jne
lea
call
mov
push
call
lea
push
push
push
push
push
push
call
mov
push
call
cmp
je
lea
mov
mov
add
mov
adc
cmp
je
lea
mov
mov
add
mov
adc
mov
add
mov
adc
mov
add
mov
adc
push
call
pop
mov
lea
call
inc
mov
cmp
jl
cmp
je
cmp
jne
cmp
jle
push
mov
call
lea
call
mov
push
call
lea
push
push
push
push
push
push
call
mov
push
call
mov
push
push
push
call
mov
call
mov
call
mov
lea
mov
call
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
push
call
pop
mov
lea
call
or
lea
call
mov
jmp
push
call
push
call
pop
mov
lea
call
mov
mov
mov
jmp
lea
mov
call
push
call
push
call
pop
mov
lea
call
mov
mov
mov
jmp
push
call
push
call
pop
mov
lea
call
mov
mov
mov
jmp
lea
mov
call
push
call
push
call
pop
mov
lea
call
mov
mov
mov
jmp
push
call
pop
mov
lea
call
mov
mov
mov
jmp
push
call
pop
mov
lea
call
mov
mov
mov
jmp
push
call
pop
mov
lea
call
mov
mov
mov
jmp
push
call
push
call
pop
mov
pop
lea
call
mov
mov
mov
jmp
push
call
push
call
pop
mov
pop
lea
call
mov
mov
mov
lea
call
or
lea
call
mov
jmp
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
push
push
push
mov
push
mov
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
mov
mov
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
push
mov
xor
push
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
ret
push
push
push
push
mov
call
mov
call
mov
call
mov
call
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
call
pop
ret
push
mov
xor
push
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
mov
xor
mov
mov
mov
mov
cmp
je
mov
inc
inc
inc
cmp
jne
push
mov
call
mov
mov
lea
mov
inc
inc
cmp
je
mov
mov
inc
inc
inc
inc
jmp
mov
pop
mov
mov
pop
pop
leave
ret
push
mov
push
push
mov
push
mov
mov
xor
mov
mov
mov
cmp
je
mov
inc
inc
inc
cmp
jne
push
mov
call
mov
mov
lea
mov
inc
inc
test
je
mov
mov
inc
inc
inc
inc
jmp
mov
pop
mov
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
mov
inc
inc
inc
cmp
jne
push
mov
call
mov
mov
lea
lea
mov
mov
inc
inc
test
je
mov
mov
inc
inc
inc
inc
jmp
mov
pop
add
mov
pop
leave
ret
push
mov
cmp
jne
xor
jmp
xor
xor
cmp
push
push
jle
mov
lea
mov
cmp
je
test
je
inc
inc
jmp
sub
sar
jmp
or
test
jl
mov
inc
inc
cmp
jl
pop
pop
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
push
mov
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
push
mov
mov
shl
mov
mov
mov
test
je
push
call
push
call
pop
pop
add
dec
jne
pop
pop
push
mov
push
call
pop
leave
ret
push
push
mov
push
xor
push
push
test
mov
je
jmp
mov
lea
cdq
sub
mov
mov
sar
mov
mov
mov
mov
call
test
je
mov
mov
mov
call
test
jge
mov
jmp
lea
cmp
jne
or
pop
pop
pop
pop
pop
ret
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
push
mov
mov
xor
mov
mov
mov
push
call
mov
mov
mov
mov
inc
inc
inc
inc
test
jne
mov
pop
mov
mov
pop
ret
push
mov
push
call
push
call
push
call
mov
add
test
je
mov
push
call
pop
ret
push
push
push
mov
mov
mov
sub
dec
cmp
jle
cmp
jle
mov
cdq
sub
sar
jmp
xor
cmp
setle
dec
and
add
lea
cmp
jge
sub
mov
add
push
call
pop
pop
pop
ret
mov
call
sub
push
push
push
call
lea
call
mov
mov
xor
mov
call
lea
push
call
lea
lea
mov
call
and
push
call
cmp
pop
jne
mov
mov
call
mov
mov
jmp
push
push
lea
call
lea
call
lea
mov
call
lea
lea
push
lea
push
mov
call
cmp
je
mov
mov
call
lea
mov
call
and
lea
call
mov
mov
jmp
cmp
je
call
mov
call
cmp
mov
jne
mov
cmp
mov
je
xor
mov
call
lea
lea
push
call
push
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
mov
mov
call
cmp
je
mov
lea
push
push
call
lea
call
cmp
mov
jne
test
jne
cmp
je
lea
call
test
je
mov
push
mov
lea
push
call
push
lea
call
mov
lea
mov
push
lea
push
mov
call
test
jne
mov
push
mov
lea
push
call
cmp
jne
mov
mov
push
push
push
call
mov
call
mov
call
mov
and
test
jle
mov
mov
push
mov
mov
mov
call
mov
push
call
cmp
mov
sete
dec
and
add
push
call
cmp
mov
sete
dec
and
add
push
call
mov
push
call
lea
mov
push
call
mov
push
call
xor
lea
push
mov
mov
mov
call
and
cmp
mov
jle
mov
mov
mov
lea
push
mov
call
mov
cmp
je
push
lea
call
mov
lea
add
push
call
lea
push
call
push
lea
call
inc
mov
cmp
jl
push
lea
mov
call
mov
push
call
and
cmp
jbe
mov
mov
mov
cmp
mov
jbe
cmp
jae
push
jmp
shr
cmp
movzx
jae
add
jmp
add
push
mov
call
mov
and
cmp
movzx
jae
add
jmp
add
push
mov
call
mov
push
call
inc
mov
cmp
jb
push
mov
call
mov
push
call
inc
mov
pop
mov
cmp
jl
push
push
push
mov
call
mov
call
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
lea
mov
call
and
lea
call
mov
mov
xor
jmp
cmp
jne
mov
mov
call
mov
mov
push
cmp
push
jne
call
cmp
je
cmp
jne
push
mov
call
lea
mov
call
cmp
mov
je
mov
push
call
lea
mov
call
and
lea
call
mov
push
mov
pop
lea
call
or
lea
call
mov
jmp
mov
lea
push
push
call
call
cmp
je
cmp
jne
push
mov
call
lea
mov
call
cmp
mov
je
mov
push
call
lea
mov
call
and
lea
call
mov
mov
jmp
mov
lea
push
push
call
cmp
jne
cmp
je
lea
call
test
je
cmp
je
cmp
jne
push
lea
call
lea
call
cmp
mov
mov
je
cmp
je
mov
jmp
and
mov
lea
mov
lea
push
call
lea
call
mov
cmp
mov
mov
mov
mov
je
cmp
jne
mov
jmp
and
lea
lea
push
call
mov
lea
push
mov
call
lea
call
lea
lea
push
lea
push
push
mov
call
test
jne
mov
push
mov
lea
push
call
lea
lea
push
lea
push
lea
push
lea
push
mov
call
and
cmp
mov
mov
jle
push
mov
call
mov
push
push
push
call
mov
call
mov
call
mov
xor
test
mov
jle
mov
push
mov
mov
mov
push
call
mov
call
mov
lea
mov
call
mov
push
push
mov
mov
call
mov
call
mov
push
call
inc
pop
cmp
jl
push
push
mov
call
mov
call
mov
push
push
push
call
mov
call
mov
call
push
pop
cmp
jle
push
mov
call
push
mov
call
mov
mov
cmp
je
xor
push
lea
mov
mov
mov
call
cmp
mov
mov
je
lea
lea
push
call
lea
push
call
cmp
je
lea
lea
push
call
lea
push
call
cmp
je
lea
lea
push
call
lea
push
call
mov
cmp
je
lea
call
push
lea
mov
call
mov
push
call
pop
push
lea
call
cmp
je
push
mov
push
call
mov
call
mov
push
mov
lea
push
call
mov
test
mov
jne
cmp
jne
push
mov
push
call
mov
call
jmp
push
mov
call
mov
push
push
push
call
mov
call
mov
call
xor
cmp
jle
mov
push
mov
mov
mov
push
call
mov
call
mov
lea
mov
call
mov
push
push
mov
mov
call
mov
call
mov
push
call
inc
pop
cmp
jl
push
push
mov
call
mov
call
mov
push
push
push
call
mov
call
mov
call
push
pop
cmp
jle
push
mov
call
push
mov
call
mov
mov
lea
mov
call
lea
mov
call
push
call
pop
mov
lea
call
test
mov
je
mov
push
call
lea
mov
call
and
lea
call
mov
lea
mov
call
or
lea
call
mov
jmp
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
lea
mov
call
and
lea
call
mov
lea
mov
call
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
push
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
mov
mov
mov
lea
push
lea
mov
call
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
push
mov
mov
call
lea
call
mov
lea
mov
mov
mov
call
cmp
mov
lea
sete
mov
mov
mov
lea
push
call
mov
lea
mov
mov
mov
call
lea
lea
push
call
lea
mov
push
mov
mov
call
mov
lea
push
lea
mov
push
lea
push
push
lea
add
push
push
lea
mov
push
mov
lea
push
lea
call
cmp
mov
mov
je
push
mov
push
push
call
mov
call
mov
call
cmp
jne
mov
push
mov
call
mov
mov
test
ja
cmp
jbe
push
push
push
push
mov
call
mov
call
mov
call
mov
or
jne
mov
or
jne
cmp
je
mov
push
mov
lea
push
call
mov
mov
or
je
push
mov
push
push
push
call
mov
call
mov
call
mov
cmp
jne
cmp
jne
or
je
push
mov
push
push
push
call
mov
call
mov
call
push
mov
push
push
push
push
push
push
push
call
mov
call
mov
call
mov
call
mov
call
mov
call
cmp
je
mov
lea
call
lea
mov
push
push
push
call
mov
call
mov
call
push
call
pop
mov
lea
call
push
call
test
pop
mov
je
mov
push
call
jmp
cmp
ja
cmp
jbe
push
mov
call
mov
mov
mov
or
je
push
push
push
push
mov
call
mov
call
mov
call
mov
mov
mov
or
je
push
push
push
push
mov
call
mov
call
mov
call
cmp
je
mov
push
mov
lea
push
call
push
call
pop
mov
lea
call
push
call
test
pop
mov
je
mov
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
lea
mov
call
and
lea
call
mov
mov
jmp
lea
mov
push
lea
push
lea
push
mov
push
mov
mov
lea
push
add
mov
push
lea
push
lea
push
push
call
cmp
ja
cmp
jbe
push
mov
push
push
push
call
mov
call
mov
call
lea
mov
call
cmp
mov
je
mov
push
call
lea
mov
call
and
lea
call
mov
mov
lea
call
or
lea
call
push
pop
jmp
cmp
je
mov
lea
push
push
call
mov
xor
mov
mov
mov
mov
mov
mov
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
sub
push
push
push
mov
xor
mov
push
lea
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
push
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
push
push
mov
xor
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
push
push
mov
push
xor
lea
mov
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
push
xor
mov
lea
mov
mov
mov
call
mov
push
lea
pop
mov
push
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
call
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
or
lea
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
mov
push
mov
mov
mov
mov
call
lea
mov
mov
push
mov
mov
mov
mov
call
lea
mov
mov
mov
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
push
push
mov
pop
xor
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
lea
mov
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
push
call
push
call
push
call
push
call
add
lea
call
lea
mov
mov
mov
mov
call
and
mov
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
push
push
mov
xor
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
pop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
push
push
push
push
mov
push
mov
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
mov
call
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
pop
mov
leave
ret
push
mov
and
and
lea
call
lea
call
mov
mov
mov
pop
ret
push
mov
push
call
mov
mov
push
call
pop
ret
push
mov
push
push
call
mov
call
mov
mov
lea
push
push
call
push
push
push
mov
mov
call
test
je
push
mov
call
pop
pop
ret
push
mov
push
mov
push
call
mov
cmp
jge
sub
mov
push
mov
call
dec
jne
pop
pop
ret
mov
call
push
push
push
push
mov
push
mov
push
mov
call
push
call
pop
pop
lea
call
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
push
call
push
call
push
call
add
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
pop
pop
mov
leave
ret
jmp
mov
xor
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
xor
push
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
pop
ret
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
neg
lea
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
call
pop
ret
mov
call
push
push
push
push
mov
mov
and
lea
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
jmp
push
mov
push
call
push
call
push
call
add
pop
ret
push
mov
push
call
mov
mov
mov
mov
inc
mov
mov
and
mov
pop
ret
push
push
mov
mov
push
call
mov
mov
mov
lea
mov
mov
inc
inc
inc
inc
test
jne
mov
pop
add
mov
pop
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
lea
call
push
call
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
and
lea
call
push
call
pop
pop
mov
mov
leave
ret
mov
call
push
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
push
and
mov
call
lea
pop
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
call
test
pop
je
push
call
pop
mov
pop
ret
push
mov
push
call
push
call
pop
pop
pop
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
add
lea
push
mov
call
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
sub
jmp
sub
jmp
sub
jmp
mov
call
sub
push
push
push
mov
mov
call
lea
mov
call
and
mov
call
mov
jmp
push
mov
call
mov
ret
push
jmp
push
mov
push
call
mov
call
mov
ret
mov
jmp
mov
mov
push
mov
push
push
call
mov
call
mov
call
mov
ret
push
jmp
mov
mov
cmp
jne
push
mov
call
mov
ret
cmp
jne
push
mov
push
call
mov
call
mov
ret
xor
push
lea
mov
mov
mov
call
mov
lea
mov
call
mov
mov
push
push
push
push
push
push
call
mov
call
mov
call
mov
call
mov
call
mov
call
push
call
pop
mov
ret
mov
mov
push
push
push
call
mov
call
mov
call
mov
mov
mov
ret
mov
jmp
mov
mov
push
mov
push
push
call
mov
call
mov
call
mov
ret
mov
mov
push
mov
push
push
call
mov
call
mov
call
mov
ret
mov
push
push
push
call
mov
call
mov
call
mov
ret
mov
push
push
push
call
mov
call
mov
call
mov
ret
push
mov
call
mov
ret
push
pop
or
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
lea
mov
push
call
test
je
cmp
jne
push
pop
leave
ret
xor
leave
ret
call
neg
sbb
and
ret
mov
call
ret
mov
call
sub
push
mov
mov
mov
call
test
jne
cmp
jne
mov
lea
call
and
push
lea
call
push
call
pop
mov
push
call
mov
mov
neg
sbb
and
add
mov
pop
mov
leave
ret
cmp
je
add
push
mov
call
xor
ret
mov
ret
and
ret
push
mov
sub
push
mov
mov
test
je
lea
call
mov
lea
push
call
and
pop
leave
ret
push
push
push
push
test
mov
mov
jle
mov
mov
mov
mov
shr
rep
mov
add
and
test
rep
jle
mov
mov
mov
add
shr
rep
mov
and
test
rep
jle
mov
mov
mov
mov
shr
rep
mov
and
add
rep
and
pop
pop
pop
pop
ret
push
mov
call
push
mov
call
pop
ret
push
mov
call
push
mov
call
pop
ret
push
mov
call
mov
push
call
pop
ret
push
mov
sub
push
push
mov
push
mov
mov
mov
or
jne
xor
xor
jmp
push
push
push
push
call
push
push
push
push
call
mov
push
lea
pop
push
push
call
lea
push
call
pop
mov
and
inc
push
mov
pop
cmp
jle
mov
mov
add
cmp
jge
mov
cmp
lea
mov
jne
test
jle
mov
mov
mov
lea
shr
rep
mov
lea
and
mov
rep
mov
mov
mov
test
jle
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
add
mov
cmp
mov
jge
sub
mov
mov
mov
mov
shr
rep
mov
and
add
rep
mov
lea
test
mov
lea
je
lea
sub
mov
mov
inc
test
jne
mov
lea
push
call
mov
call
mov
pop
mov
mov
mov
pop
pop
leave
ret
push
mov
mov
push
mov
push
mov
mov
add
mov
adc
cmp
ja
jb
cmp
jae
add
adc
cmp
jb
ja
cmp
jbe
cmp
jne
call
pop
pop
pop
ret
call
jmp
mov
jmp
push
call
pop
ret
push
call
ret
push
push
mov
mov
push
mov
call
cmp
je
mov
push
push
push
push
call
mov
call
mov
call
mov
call
pop
xor
pop
ret
push
mov
call
xor
ret
mov
call
ret
mov
call
sub
push
mov
push
lea
call
and
lea
push
lea
call
push
or
call
pop
push
lea
call
cmp
jne
mov
mov
push
push
call
mov
call
lea
call
mov
push
add
mov
call
push
mov
call
mov
lea
call
push
mov
mov
call
push
or
call
pop
mov
call
mov
xor
pop
mov
leave
ret
mov
mov
push
push
call
mov
call
xor
ret
cmp
push
mov
je
push
jmp
push
mov
call
cmp
je
push
mov
call
jmp
mov
push
call
mov
mov
push
push
call
mov
call
xor
pop
ret
mov
push
call
xor
ret
mov
call
push
push
push
push
mov
mov
push
mov
call
xor
cmp
mov
je
cmp
je
lea
call
cmp
jne
cmp
je
lea
call
mov
mov
push
call
mov
pop
pop
xor
pop
mov
leave
ret
push
call
ret
xor
ret
push
push
mov
mov
push
call
xor
cmp
je
mov
mov
mov
mov
mov
mov
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
mov
push
mov
call
mov
and
test
je
cmp
je
mov
mov
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
push
call
mov
mov
pop
pop
mov
leave
ret
call
neg
sbb
and
ret
mov
call
push
push
push
mov
mov
push
mov
call
and
cmp
je
push
call
xor
jmp
cmp
push
lea
je
push
jmp
push
mov
call
mov
cmp
jne
mov
push
mov
call
cmp
je
mov
call
push
call
xor
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
mov
push
mov
call
push
and
lea
call
push
lea
call
lea
lea
push
mov
call
push
and
call
pop
add
mov
call
mov
call
push
mov
call
mov
lea
call
push
mov
mov
call
push
call
pop
push
call
mov
push
pop
pop
pop
mov
leave
ret
mov
mov
xor
ret
mov
call
sub
push
push
push
mov
mov
xor
mov
cmp
jne
cmp
je
mov
lea
call
push
lea
mov
call
push
call
pop
mov
mov
xor
cmp
setne
mov
push
call
mov
mov
neg
sbb
pop
and
pop
add
pop
mov
leave
ret
mov
call
sub
push
push
mov
mov
and
cmp
jne
mov
lea
call
and
push
lea
call
push
call
pop
mov
push
call
mov
mov
neg
sbb
pop
and
pop
add
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
call
push
pop
push
mov
call
mov
call
lea
mov
push
push
call
and
lea
call
lea
call
cmp
je
mov
movzx
push
call
movsx
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
push
or
call
pop
jmp
xor
jmp
push
jmp
push
jmp
push
jmp
push
pop
push
call
pop
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
and
push
push
mov
mov
push
push
mov
call
mov
call
push
call
and
and
mov
mov
cmp
je
test
je
lea
push
push
call
test
je
mov
and
push
push
call
test
setne
lea
mov
push
call
and
cmp
je
push
push
call
push
mov
call
mov
call
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
lea
push
mov
push
call
and
push
mov
call
push
call
pop
pop
mov
mov
leave
ret
mov
call
sub
lea
push
mov
push
call
and
push
mov
call
push
call
pop
pop
mov
mov
leave
ret
push
push
mov
mov
mov
mov
push
call
test
jl
cmp
je
push
call
mov
jmp
sub
mov
push
push
call
pop
pop
ret
push
mov
push
push
mov
xor
mov
test
je
mov
push
call
test
jl
test
jne
mov
jmp
xor
push
call
mov
mov
test
jne
test
je
sub
mov
mov
sub
push
push
call
pop
pop
pop
ret
mov
call
sub
push
xor
push
lea
mov
mov
mov
mov
call
push
lea
mov
call
push
lea
call
push
lea
call
mov
lea
push
call
push
call
mov
pop
mov
pop
mov
leave
ret
push
mov
push
call
mov
mov
mov
mov
inc
mov
mov
and
mov
pop
ret
push
mov
mov
mov
cmp
je
test
je
push
call
jmp
sub
jmp
or
pop
ret
mov
push
mov
push
mov
lea
mov
cmp
jle
mov
sub
test
jle
mov
push
lea
sub
inc
push
lea
add
push
push
call
add
sub
pop
mov
pop
pop
ret
push
push
push
mov
mov
mov
sub
dec
cmp
jle
cmp
jle
mov
cdq
sub
sar
jmp
xor
cmp
setle
dec
and
add
lea
cmp
jge
sub
mov
add
push
call
pop
pop
pop
ret
mov
call
sub
push
push
mov
mov
xor
push
mov
mov
and
xor
mov
mov
mov
mov
mov
cmp
jle
mov
mov
cmp
jne
cmp
je
cmp
jne
cmp
sete
mov
jmp
push
mov
call
xor
inc
cmp
jl
xor
cmp
mov
pop
pop
pop
setne
mov
leave
ret
lea
mov
push
lea
push
call
mov
and
push
call
push
call
xor
pop
test
jmp
mov
call
sub
push
push
push
mov
lea
call
xor
lea
mov
call
lea
call
mov
call
push
lea
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
lea
lea
push
lea
mov
call
test
je
lea
mov
push
call
cmp
je
lea
lea
push
call
push
call
push
mov
call
pop
pop
jmp
push
call
push
call
push
call
mov
add
mov
pop
pop
leave
ret
mov
call
push
mov
push
push
mov
push
push
mov
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
add
push
call
pop
mov
cmp
mov
je
push
push
lea
push
push
push
mov
call
mov
mov
mov
pop
pop
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
ret
push
mov
push
mov
test
je
push
lea
push
push
push
push
call
test
je
push
call
pop
mov
pop
jmp
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
and
test
je
push
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
push
push
mov
and
xor
mov
mov
test
mov
jle
push
mov
cmp
mov
jne
mov
mov
call
test
jne
mov
jmp
push
mov
push
call
test
jne
mov
push
lea
call
inc
cmp
jl
pop
pop
pop
leave
ret
mov
call
sub
push
push
mov
push
mov
mov
test
mov
je
mov
xor
mov
call
test
jne
xor
jmp
test
jle
jmp
mov
mov
mov
call
test
je
inc
mov
or
xor
cmp
mov
mov
jle
mov
mov
xor
cmp
je
inc
inc
inc
jmp
cmp
jle
lea
cmp
jg
mov
lea
mov
lea
push
call
and
lea
push
push
lea
call
push
lea
mov
call
push
and
call
mov
pop
mov
call
test
jne
mov
mov
mov
push
or
call
pop
mov
inc
mov
mov
add
cmp
jl
cmp
je
mov
imul
add
lea
mov
cmp
lea
jne
cmp
jne
add
mov
mov
mov
sub
cmp
je
jle
cmp
jle
cmp
jne
cmp
jl
push
lea
call
test
mov
jne
or
jmp
mov
mov
mov
mov
mov
cmp
je
test
je
inc
inc
mov
jmp
sub
sar
jmp
or
test
jl
mov
inc
push
jmp
mov
cmp
mov
jl
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
add
cmp
mov
jge
cmp
jge
mov
mov
mov
mov
mov
call
test
jne
push
lea
call
inc
inc
cmp
jl
lea
lea
push
call
or
push
call
pop
jmp
test
jne
and
jmp
mov
mov
cmp
sete
test
mov
je
inc
cmp
jl
jmp
lea
push
push
mov
call
lea
push
push
mov
call
lea
push
push
mov
call
lea
push
push
mov
call
mov
lea
push
push
call
push
lea
mov
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
xor
cmp
sete
ret
mov
imul
add
ret
mov
call
sub
push
push
push
xor
test
mov
jle
mov
mov
push
lea
call
and
cmp
je
lea
push
push
mov
call
test
je
jmp
mov
mov
call
test
je
push
or
call
inc
add
cmp
pop
jl
or
mov
pop
pop
pop
mov
leave
ret
push
lea
mov
push
call
mov
push
mov
call
push
call
push
call
pop
jmp
mov
and
mov
and
push
call
pop
mov
jmp
push
mov
push
mov
and
sub
push
push
push
call
mov
leave
ret
mov
call
sub
push
mov
push
mov
push
mov
lea
xor
mov
mov
cmp
jle
mov
sub
cmp
jne
cmp
jne
mov
push
call
jmp
mov
mov
mov
push
lea
call
and
push
lea
call
xor
test
jle
lea
mov
mov
mov
mov
inc
inc
inc
cmp
jl
mov
mov
and
lea
push
mov
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
and
push
push
call
mov
leave
ret
push
mov
mov
push
push
push
mov
test
jne
mov
jmp
mov
mov
cmp
jge
xor
test
jle
lea
lea
cmp
jge
mov
mov
mov
mov
cmp
jne
mov
inc
inc
inc
cmp
jl
mov
mov
cmp
je
inc
cmp
jl
or
pop
pop
pop
pop
ret
mov
call
sub
lea
push
mov
push
call
and
push
mov
call
push
call
pop
pop
mov
mov
leave
ret
mov
call
sub
lea
push
mov
push
call
and
push
mov
call
push
call
pop
pop
mov
mov
leave
ret
push
push
mov
mov
mov
mov
push
call
test
jl
cmp
je
inc
inc
jmp
sub
mov
sar
push
push
call
pop
pop
ret
mov
mov
mov
cmp
je
test
je
inc
inc
jmp
sub
sar
jmp
or
ret
push
mov
push
push
mov
xor
mov
test
je
mov
push
call
test
jl
test
jne
mov
jmp
xor
inc
inc
mov
test
jne
test
je
sub
mov
mov
sar
sub
push
push
call
pop
pop
pop
ret
mov
call
sub
push
xor
push
lea
mov
mov
mov
mov
call
push
lea
mov
call
push
lea
call
push
lea
call
mov
lea
push
call
push
call
mov
pop
mov
pop
mov
leave
ret
push
push
mov
push
mov
mov
mov
lea
cmp
jle
mov
sub
test
jle
lea
mov
imul
add
lea
push
lea
lea
lea
push
push
call
add
sub
mov
pop
pop
pop
ret
jmp
jmp
push
mov
sub
cmp
mov
mov
jb
cmp
ja
push
mov
push
push
mov
xor
xor
push
push
push
push
call
cmp
jge
add
jmp
add
mov
xor
push
inc
push
push
push
call
mov
mov
or
jne
mov
mov
dec
inc
test
mov
jg
mov
pop
pop
pop
and
jmp
and
leave
ret
push
mov
sub
and
push
mov
push
push
mov
mov
lea
push
push
push
push
call
add
inc
push
mov
push
inc
push
push
inc
call
mov
mov
or
jne
mov
lea
mov
add
dec
dec
dec
test
mov
mov
jg
mov
pop
pop
pop
and
leave
ret
push
mov
push
mov
pop
mov
push
push
call
pop
ret
mov
push
mov
push
call
ret
mov
push
mov
test
jg
jl
test
jae
mov
inc
neg
adc
neg
push
pop
push
push
call
pop
ret
mov
mov
test
jg
jl
test
jae
mov
inc
inc
neg
adc
neg
push
push
call
ret
push
push
push
lea
pop
mov
and
shr
cmp
jge
add
jmp
add
mov
dec
dec
jne
and
pop
pop
ret
mov
call
sub
or
push
push
mov
xor
push
lea
mov
call
test
je
lea
lea
push
call
test
je
cmp
ja
cmp
ja
push
lea
mov
mov
mov
call
mov
mov
inc
cmp
jl
push
lea
call
lea
push
mov
push
push
lea
push
call
test
je
mov
mov
mov
call
mov
mov
lea
mov
call
lea
mov
push
mov
mov
call
cmp
mov
jne
lea
lea
call
test
jne
jmp
push
lea
lea
call
push
lea
mov
call
mov
push
call
pop
cmp
je
mov
cmp
jne
push
push
lea
call
push
lea
mov
mov
mov
call
xor
cmp
mov
jle
mov
mov
cmp
je
cmp
je
push
lea
call
jmp
lea
call
lea
call
lea
call
cmp
je
lea
mov
push
call
mov
mov
mov
inc
cmp
jl
lea
call
lea
call
lea
call
cmp
je
lea
mov
push
call
push
call
pop
mov
push
call
pop
push
call
pop
pop
or
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
mov
mov
cmp
jl
mov
cmp
jne
cmp
jne
add
lea
push
push
push
mov
call
and
push
mov
call
push
call
pop
mov
pop
mov
leave
ret
xor
cmp
je
inc
cmp
jne
ret
push
mov
push
call
test
pop
jne
mov
push
mov
lea
push
call
pop
ret
push
call
pop
ret
call
jmp
and
mov
ret
push
call
pop
ret
mov
jmp
push
mov
cmp
jne
mov
pop
ret
push
call
test
pop
setne
xor
mov
test
sete
mov
pop
ret
jmp
mov
call
sub
push
push
mov
xor
push
lea
mov
mov
mov
mov
call
mov
mov
call
cmp
je
cmp
je
cmp
je
push
lea
call
jmp
cmp
jne
mov
push
mov
lea
push
call
mov
push
mov
lea
push
call
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
lea
xor
push
push
mov
call
mov
mov
cmp
jne
push
pop
push
lea
mov
mov
mov
call
cmp
mov
jne
lea
lea
call
jmp
push
lea
lea
call
push
lea
mov
call
push
mov
call
pop
mov
lea
push
call
push
call
push
call
mov
pop
pop
pop
mov
pop
mov
leave
ret
mov
mov
shr
and
ret
push
mov
push
push
mov
push
push
call
mov
pop
cmp
jne
mov
call
test
jne
mov
push
mov
lea
push
call
mov
pop
pop
leave
ret
call
jmp
and
mov
ret
push
call
pop
ret
mov
jmp
call
jmp
and
mov
ret
push
call
pop
ret
mov
jmp
push
mov
cmp
je
push
call
test
pop
je
xor
pop
ret
and
and
mov
pop
ret
push
call
neg
sbb
pop
inc
ret
jmp
push
mov
call
mov
pop
ret
push
call
ret
push
mov
push
push
call
pop
mov
pop
pop
ret
mov
call
sub
push
push
mov
mov
cmp
jne
push
pop
and
and
and
push
lea
call
and
push
cmp
jne
lea
call
lea
lea
mov
call
push
call
jmp
lea
call
push
lea
lea
mov
call
push
lea
mov
call
push
call
push
call
pop
pop
push
mov
call
push
call
pop
mov
mov
pop
pop
mov
leave
ret
movsx
push
mov
push
push
call
pop
mov
pop
pop
ret
push
mov
sub
mov
push
cdq
mov
push
lea
push
call
lea
mov
push
call
pop
leave
ret
push
mov
sub
push
push
pop
mov
push
lea
push
call
lea
mov
push
call
pop
leave
ret
push
push
mov
mov
cmp
je
mov
and
and
push
call
mov
mov
mov
mov
inc
inc
test
jne
mov
mov
mov
pop
pop
ret
push
mov
push
push
push
xor
cmp
push
mov
jne
xor
jmp
movzx
push
call
mov
cmp
jne
call
cmp
jne
push
push
lea
push
push
lea
push
push
push
push
call
mov
cmp
je
cmp
jg
lea
mov
push
call
lea
push
push
lea
push
push
push
push
call
mov
jmp
mov
pop
pop
leave
ret
mov
call
sub
push
push
mov
test
jne
xor
jmp
push
call
mov
test
jne
call
cmp
jne
push
lea
call
and
push
lea
lea
call
push
mov
call
pop
push
call
lea
lea
push
call
mov
lea
mov
mov
inc
inc
test
je
mov
mov
inc
inc
jmp
push
call
push
call
pop
mov
pop
jmp
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
test
jne
xor
jmp
push
call
mov
test
jne
call
cmp
jne
push
lea
call
and
push
lea
lea
call
push
mov
call
pop
push
call
lea
lea
push
call
mov
lea
mov
mov
inc
inc
test
je
mov
mov
inc
inc
jmp
push
call
push
call
pop
mov
pop
jmp
mov
mov
pop
pop
mov
leave
ret
push
mov
mov
mov
inc
inc
cmp
jb
ja
test
je
jmp
or
pop
ret
push
pop
pop
ret
xor
pop
ret
push
mov
mov
inc
inc
inc
inc
cmp
jb
ja
test
je
jmp
or
pop
ret
push
pop
pop
ret
xor
pop
ret
push
push
push
push
push
mov
mov
mov
mov
inc
inc
inc
inc
cmp
je
mov
call
mov
mov
call
cmp
jb
ja
test
je
jmp
or
jmp
push
pop
jmp
xor
pop
pop
pop
pop
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
mov
cmp
je
cmp
jl
push
lea
call
mov
mov
inc
push
push
push
push
push
push
call
cmp
jne
lea
push
push
mov
call
mov
mov
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
push
lea
cmp
jl
push
lea
call
lea
mov
mov
push
lea
inc
push
push
push
push
push
push
push
call
cmp
mov
pop
setne
cmp
mov
jne
lea
push
push
mov
call
mov
mov
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
push
and
lea
push
push
push
mov
push
call
mov
pop
leave
ret
push
mov
push
push
push
push
mov
push
xor
mov
xor
mov
cmp
jl
cmp
jg
movsx
sub
push
cdq
mov
push
push
mov
push
mov
call
mov
add
adc
inc
mov
jmp
mov
test
je
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
push
mov
push
xor
mov
xor
mov
cmp
jb
cmp
ja
movzx
sub
push
cdq
mov
push
push
mov
push
mov
call
mov
add
adc
inc
mov
inc
jmp
mov
test
je
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
mov
mov
lea
mov
push
xor
mov
push
call
mov
cmp
jl
push
mov
call
mov
mov
mov
push
push
lea
mov
call
mov
mov
mov
and
call
test
pop
pop
setne
pop
leave
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
mov
je
lea
mov
mov
inc
cmp
jae
cmp
je
movzx
mov
inc
inc
inc
inc
inc
jmp
cmp
jb
push
pop
cmp
jb
inc
cmp
jl
movzx
movzx
sub
cmp
je
mov
mov
inc
cmp
jb
cmp
jae
movzx
sub
shl
or
dec
jne
mov
cmp
jae
cmp
je
jmp
sub
cmp
jae
cmp
je
mov
and
shr
sub
sub
mov
mov
add
add
add
cmp
jne
push
pop
jmp
xor
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
mov
push
mov
lea
mov
and
xor
and
push
and
push
call
mov
cmp
jl
push
mov
call
mov
mov
mov
push
push
lea
mov
call
mov
mov
mov
and
call
test
pop
pop
setne
pop
leave
ret
push
mov
sub
mov
push
push
push
xor
mov
cmp
mov
mov
je
mov
movzx
inc
inc
inc
cmp
mov
jae
mov
test
je
mov
inc
jmp
cmp
jb
cmp
jae
mov
cmp
jae
cmp
je
movzx
inc
inc
inc
cmp
mov
jb
cmp
jae
add
add
shl
or
add
push
pop
push
pop
push
pop
shl
cmp
jb
add
inc
cmp
jb
mov
test
je
lea
mov
shl
shr
add
mov
lea
inc
shl
dec
sub
cmp
je
mov
mov
shr
mov
and
add
mov
inc
test
jne
mov
mov
cmp
jne
push
pop
jmp
xor
mov
mov
pop
pop
pop
leave
ret
mov
xor
cmp
je
push
mov
inc
inc
inc
cmp
jne
pop
and
mov
ret
mov
xor
cmp
je
inc
cmp
jne
and
mov
ret
mov
jmp
push
mov
call
push
call
xor
pop
mov
mov
mov
pop
ret
push
call
ret
mov
mov
dec
push
push
call
ret
mov
mov
sub
push
push
call
ret
mov
cmp
jne
push
cmp
pop
jl
mov
shr
jmp
cmp
jl
push
pop
add
push
call
ret
push
mov
push
mov
push
mov
push
cmp
je
cmp
jb
lea
push
push
mov
call
mov
xor
mov
imul
mov
div
cmp
je
lea
push
push
mov
call
xor
test
jbe
push
call
mov
pop
test
jne
lea
push
push
mov
call
mov
cmp
jl
mov
mov
imul
push
push
push
call
add
push
call
pop
mov
mov
pop
pop
pop
pop
ret
push
call
ret
mov
mov
mov
sub
imul
push
mov
imul
imul
add
add
push
push
call
add
ret
push
mov
call
mov
mov
push
inc
push
call
inc
pop
ret
push
mov
push
mov
mov
mov
lea
cmp
jle
sub
mov
test
jle
lea
push
push
mov
call
sub
pop
pop
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
push
call
pop
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
push
call
pop
ret
cmp
mov
mov
je
jmp
jmp
mov
call
sub
push
push
mov
push
mov
mov
call
xor
lea
push
mov
mov
mov
call
mov
mov
cmp
je
mov
jle
mov
mov
mov
cmp
je
cmp
jne
mov
lea
push
call
mov
mov
mov
jmp
push
lea
call
inc
cmp
jl
mov
lea
push
call
push
call
pop
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
mov
mov
dec
test
jl
mov
mov
cmp
je
cmp
je
dec
jns
lea
lea
push
push
mov
call
and
push
mov
call
or
push
call
pop
lea
push
push
mov
call
mov
push
mov
call
push
call
pop
pop
mov
pop
pop
mov
leave
ret
push
mov
and
push
push
dec
mov
js
mov
lea
mov
cmp
je
cmp
je
dec
dec
dec
test
jge
inc
mov
push
push
call
mov
pop
pop
pop
ret
mov
mov
jmp
push
push
mov
push
push
mov
mov
push
mov
test
je
lea
mov
cmp
jne
mov
mov
call
test
jne
test
je
jmp
cmp
jne
test
je
jmp
cmp
je
cmp
jne
mov
call
mov
mov
call
cmp
jne
inc
inc
add
mov
inc
inc
test
mov
jne
xor
test
sete
jmp
mov
jmp
xor
pop
pop
pop
pop
pop
ret
push
push
mov
xor
cmp
jle
mov
mov
mov
push
call
test
jge
inc
cmp
jl
or
xor
test
pop
pop
setge
ret
push
mov
push
cmp
push
push
push
mov
jne
cmp
je
mov
mov
mov
sub
js
xor
cmp
mov
je
mov
test
jne
cmp
jne
cmp
jne
cmp
jne
cmp
je
test
jne
cmp
je
mov
cmp
je
cmp
mov
je
cmp
jne
dec
mov
cmp
mov
mov
jg
xor
test
jle
mov
shl
mov
mov
mov
mov
mov
call
test
je
inc
add
cmp
jl
mov
cmp
je
mov
inc
cmp
mov
jle
xor
pop
pop
pop
leave
ret
mov
jmp
push
push
mov
xor
cmp
jle
mov
mov
mov
lea
call
test
je
inc
cmp
jl
or
pop
pop
ret
mov
jmp
cmp
push
je
add
jmp
add
call
ret
mov
call
sub
push
push
push
mov
mov
mov
cmp
jle
mov
mov
mov
mov
call
test
jne
push
mov
call
mov
test
jge
push
lea
push
call
and
push
lea
call
or
lea
mov
call
mov
push
push
mov
call
mov
cmp
mov
jg
push
mov
push
call
mov
pop
pop
pop
mov
leave
ret
mov
push
push
mov
lea
mov
call
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
xor
test
jle
mov
mov
cmp
jne
cmp
jg
inc
add
cmp
jl
xor
pop
ret
mov
pop
ret
push
push
mov
xor
cmp
jg
cmp
jle
mov
mov
call
test
jne
inc
cmp
jl
xor
pop
pop
ret
mov
jmp
cmp
push
push
lea
jne
lea
xor
cmp
jle
push
mov
push
mov
call
test
jne
inc
cmp
jl
xor
pop
pop
ret
mov
jmp
mov
call
sub
push
push
mov
push
push
mov
push
push
call
test
mov
je
and
jmp
push
mov
mov
push
push
call
cmp
mov
je
mov
mov
push
call
mov
test
jl
push
lea
call
and
push
pop
lea
push
push
call
mov
push
mov
push
lea
mov
push
call
test
mov
je
lea
mov
call
or
lea
call
mov
jmp
lea
mov
call
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
xor
mov
push
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
push
lea
mov
push
push
call
mov
mov
lea
mov
call
or
lea
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
lea
push
push
push
call
neg
sbb
and
pop
ret
push
mov
push
mov
push
mov
push
push
call
test
jne
cmp
je
mov
lea
push
push
call
mov
jmp
mov
jmp
xor
pop
pop
ret
mov
call
sub
push
push
mov
mov
lea
lea
push
call
and
cmp
jle
push
mov
mov
mov
mov
lea
push
call
test
jge
lea
push
push
lea
call
and
push
lea
call
or
lea
mov
call
mov
mov
push
mov
call
inc
mov
cmp
jl
pop
mov
pop
pop
mov
leave
ret
push
push
mov
xor
cmp
jle
mov
mov
mov
call
test
je
inc
cmp
jl
or
pop
pop
ret
mov
jmp
mov
call
sub
mov
push
push
lea
call
mov
mov
mov
xor
mov
cmp
jne
lea
push
push
mov
call
lea
call
mov
mov
mov
mov
cmp
jne
and
lea
call
mov
and
push
mov
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jle
mov
mov
mov
mov
call
test
je
mov
mov
call
test
je
inc
cmp
jl
jmp
mov
xor
cmp
je
mov
push
pop
cmp
jle
lea
xor
push
lea
mov
mov
mov
call
test
mov
jle
mov
mov
mov
call
test
jne
push
lea
call
push
lea
call
push
push
lea
call
inc
cmp
jl
mov
lea
push
mov
call
mov
test
jge
lea
lea
push
call
lea
mov
call
lea
mov
push
mov
call
mov
lea
mov
call
push
mov
call
pop
lea
call
mov
lea
mov
call
lea
lea
push
call
mov
lea
mov
mov
mov
mov
mov
push
mov
push
lea
call
mov
lea
mov
call
lea
mov
call
push
call
pop
mov
lea
mov
call
or
lea
call
mov
pop
pop
pop
mov
leave
ret
push
mov
push
xor
lea
mov
push
mov
mov
mov
call
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
push
push
push
push
mov
xor
xor
cmp
jle
mov
lea
push
push
mov
push
lea
call
test
je
cmp
je
mov
inc
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
push
push
push
mov
xor
xor
mov
cmp
jle
mov
mov
cmp
je
inc
add
cmp
jl
cmp
je
cmp
jle
cmp
je
mov
mov
add
push
mov
add
call
inc
cmp
jl
pop
pop
pop
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
mov
mov
or
push
mov
call
mov
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
add
lea
push
mov
call
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
mov
mov
mov
lea
mov
lea
push
call
and
lea
push
lea
call
lea
lea
push
mov
call
add
lea
push
mov
call
mov
mov
pop
pop
mov
leave
ret
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
mov
mov
test
je
push
call
test
jne
xor
pop
ret
and
mov
pop
ret
push
push
mov
mov
test
je
call
test
jne
xor
jmp
mov
mov
pop
pop
ret
push
mov
push
call
push
mov
call
pop
ret
push
push
mov
push
mov
xor
mov
mov
and
cmp
je
inc
cmp
jne
push
mov
call
mov
mov
lea
mov
inc
test
je
mov
mov
inc
inc
jmp
mov
mov
pop
pop
pop
ret
push
mov
push
push
mov
xor
lea
push
push
push
push
push
push
push
call
test
jne
xor
jmp
push
mov
call
push
call
mov
pop
leave
ret
mov
call
sub
push
xor
cmp
push
push
mov
mov
je
push
lea
push
push
push
push
push
push
call
test
jne
xor
jmp
push
mov
call
push
call
mov
jmp
push
lea
mov
mov
mov
call
lea
mov
mov
call
lea
lea
mov
call
push
mov
mov
call
push
call
push
call
pop
mov
pop
mov
pop
pop
pop
mov
leave
ret
push
and
push
mov
push
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jg
push
call
mov
push
push
call
mov
mov
call
test
jbe
cmp
ja
push
pop
jmp
xor
pop
pop
ret
mov
call
sub
push
xor
cmp
push
mov
je
push
mov
cmp
jg
push
call
mov
push
push
call
mov
xor
cmp
je
mov
inc
inc
inc
cmp
jne
mov
cmp
mov
pop
jbe
cmp
ja
push
pop
jmp
xor
jmp
push
lea
mov
mov
mov
call
lea
mov
call
test
je
lea
lea
call
push
mov
mov
call
push
call
pop
mov
push
call
pop
mov
mov
pop
pop
mov
leave
ret
push
and
push
push
mov
mov
call
neg
sbb
mov
inc
mov
push
call
mov
pop
pop
pop
ret
mov
call
sub
cmp
mov
mov
jne
push
call
xor
jmp
push
push
mov
push
mov
push
push
push
push
mov
push
push
push
call
cmp
mov
jne
xor
push
lea
mov
mov
mov
call
mov
and
lea
call
test
je
push
push
push
push
push
push
push
call
mov
push
call
pop
xor
cmp
je
push
push
push
push
call
test
push
setne
call
pop
mov
pop
pop
mov
mov
leave
ret
push
push
call
test
setne
ret
push
call
test
setne
ret
push
mov
push
push
push
push
mov
mov
mov
mov
call
test
je
mov
mov
mov
call
test
je
mov
test
jne
cmp
je
test
jne
push
mov
call
cmp
jne
push
mov
call
mov
jmp
xor
pop
pop
pop
leave
ret
push
push
call
test
setne
ret
mov
call
sub
cmp
push
push
push
mov
mov
jne
mov
lea
call
mov
mov
mov
call
mov
push
call
pop
mov
jmp
mov
push
push
call
test
je
mov
jmp
xor
push
lea
mov
mov
mov
call
and
lea
mov
call
test
je
push
push
call
mov
push
call
test
pop
setne
jmp
push
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
call
and
call
neg
sbb
lea
inc
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
push
xor
cmp
push
push
mov
jne
mov
lea
call
mov
call
mov
push
call
pop
mov
jmp
mov
push
call
test
je
mov
jmp
push
lea
mov
mov
mov
call
lea
mov
mov
call
test
push
je
call
mov
push
call
cmp
pop
setne
jmp
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
xor
cmp
push
push
mov
mov
jne
lea
call
mov
mov
lea
mov
call
mov
mov
mov
call
mov
push
call
push
call
pop
mov
pop
jmp
mov
push
push
call
test
je
mov
jmp
push
lea
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
mov
lea
push
lea
push
mov
mov
call
test
push
je
push
call
mov
push
call
push
call
pop
cmp
pop
setne
jmp
call
push
call
pop
xor
pop
mov
pop
pop
pop
mov
leave
ret
push
push
call
test
setne
ret
mov
call
sub
push
xor
cmp
push
push
mov
jne
mov
lea
call
mov
call
mov
push
call
pop
mov
jmp
mov
push
push
call
test
je
mov
jmp
call
cmp
je
push
lea
mov
mov
mov
call
lea
mov
mov
call
test
je
push
push
call
mov
push
call
cmp
pop
setne
jmp
push
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
push
lea
call
mov
and
push
test
pop
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
test
jle
lea
cmp
jne
cmp
jne
cmp
jne
mov
jmp
push
push
lea
call
lea
lea
push
call
mov
mov
mov
call
test
jne
call
cmp
je
mov
test
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
mov
jmp
or
test
jl
je
cmp
je
lea
push
push
lea
call
push
lea
mov
call
mov
push
call
pop
jmp
lea
call
push
lea
mov
call
test
jne
mov
jmp
mov
shr
test
jne
xor
push
call
push
call
push
call
add
jmp
push
mov
call
pop
lea
lea
push
call
cmp
jge
mov
lea
mov
cmp
je
test
je
inc
inc
jmp
sub
sar
mov
jmp
or
test
jge
mov
lea
push
push
lea
call
mov
mov
call
mov
mov
push
neg
sbb
inc
call
test
pop
je
xor
push
call
mov
pop
push
call
pop
mov
pop
mov
pop
pop
mov
leave
ret
mov
jmp
push
mov
xor
call
test
jne
pop
ret
push
call
test
setne
pop
ret
mov
call
sub
push
xor
cmp
push
push
mov
jne
mov
lea
call
mov
call
mov
push
call
pop
mov
jmp
xor
mov
call
test
je
mov
push
call
test
je
mov
jmp
push
lea
mov
mov
mov
call
lea
mov
mov
call
test
push
je
call
mov
push
call
cmp
pop
setne
jmp
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
jmp
mov
call
sub
push
push
mov
push
lea
call
xor
push
lea
mov
call
push
mov
lea
mov
call
push
mov
call
pop
push
lea
call
push
lea
lea
mov
call
or
push
lea
mov
call
push
call
push
mov
call
pop
pop
lea
lea
push
call
test
je
sub
lea
mov
mov
push
lea
call
mov
call
cmp
jne
push
mov
call
pop
lea
call
push
call
push
call
pop
xor
pop
jmp
push
mov
call
pop
lea
call
mov
xor
call
test
je
mov
call
mov
push
call
push
call
pop
mov
pop
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
mov
and
shr
test
je
add
lea
push
lea
call
mov
mov
call
mov
push
jmp
add
lea
push
lea
call
mov
mov
call
mov
push
call
push
call
pop
mov
pop
pop
mov
mov
leave
ret
push
mov
push
call
pop
mov
call
pop
ret
push
mov
sub
push
push
mov
push
mov
mov
mov
and
and
and
cmp
jg
push
mov
call
mov
lea
push
push
push
push
call
mov
mov
call
cmp
je
cmp
jb
xor
jmp
mov
test
jne
push
call
jmp
sub
mov
mov
mov
pop
pop
pop
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jg
push
mov
call
mov
mov
lea
mov
push
push
push
push
call
mov
mov
xor
cmp
je
mov
inc
inc
inc
cmp
jne
mov
mov
cmp
mov
je
cmp
jb
inc
mov
inc
cmp
jl
push
mov
call
mov
lea
push
push
push
mov
push
call
mov
xor
cmp
je
mov
inc
inc
inc
cmp
jne
mov
cmp
mov
je
cmp
ja
mov
cmp
jne
mov
xor
cmp
je
inc
inc
inc
jmp
mov
mov
jmp
sub
mov
sar
mov
mov
mov
call
jmp
push
lea
mov
mov
mov
call
mov
lea
mov
call
mov
mov
push
lea
mov
mov
call
mov
push
neg
sbb
and
inc
call
test
pop
je
push
call
pop
xor
jmp
push
lea
lea
push
call
mov
lea
mov
call
push
mov
call
pop
lea
push
lea
push
call
mov
lea
mov
call
push
mov
call
mov
pop
mov
lea
push
lea
lea
call
push
mov
mov
call
push
call
push
call
push
call
push
call
add
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
mov
push
call
mov
pop
test
mov
jle
lea
cmp
jne
dec
dec
dec
test
jg
test
je
cmp
je
mov
lea
call
mov
and
lea
mov
call
mov
mov
sub
add
je
push
lea
push
lea
call
mov
mov
mov
call
test
push
mov
setne
call
cmp
pop
jne
sub
push
mov
call
dec
jne
push
call
push
call
pop
pop
mov
pop
pop
pop
mov
leave
ret
push
and
push
mov
push
mov
push
call
test
pop
jle
lea
mov
cmp
je
cmp
je
dec
dec
dec
test
jg
lea
mov
push
call
mov
pop
pop
pop
ret
push
lea
push
call
pop
ret
push
push
mov
mov
cmp
jg
push
call
push
push
call
mov
mov
call
test
jbe
cmp
ja
push
pop
jmp
xor
pop
pop
ret
push
mov
sub
cmp
je
push
call
neg
sbb
neg
leave
ret
mov
push
lea
call
push
call
test
push
setne
call
pop
mov
pop
leave
ret
mov
call
sub
push
xor
cmp
push
mov
je
push
mov
cmp
jg
push
call
push
push
call
mov
xor
cmp
je
mov
inc
inc
inc
cmp
jne
mov
cmp
mov
pop
jbe
cmp
ja
push
pop
jmp
xor
jmp
push
lea
mov
mov
mov
call
lea
mov
call
test
je
lea
lea
call
push
mov
mov
call
push
call
pop
mov
push
call
pop
mov
mov
pop
pop
mov
leave
ret
push
mov
push
push
push
mov
mov
push
mov
cmp
mov
jg
push
mov
call
mov
lea
push
mov
push
push
push
push
push
call
mov
mov
mov
sub
mov
mov
call
test
jbe
cmp
ja
push
pop
jmp
xor
pop
pop
pop
leave
ret
mov
call
sub
push
xor
cmp
push
push
mov
mov
mov
je
mov
mov
mov
cmp
jg
push
mov
call
mov
lea
push
mov
push
push
push
push
push
call
mov
mov
mov
xor
sub
sar
mov
mov
cmp
je
mov
inc
inc
inc
cmp
jne
xor
mov
cmp
mov
jbe
cmp
ja
push
pop
jmp
push
lea
pop
mov
push
mov
mov
call
mov
mov
cmp
je
lea
call
mov
mov
mov
mov
jmp
mov
cmp
je
mov
lea
call
push
pop
or
mov
mov
mov
test
je
lea
call
or
mov
mov
jmp
xor
mov
lea
push
push
push
mov
call
mov
neg
sbb
inc
test
je
push
and
call
pop
test
je
push
and
call
pop
and
test
je
push
call
pop
test
je
xor
jmp
push
lea
lea
push
call
mov
lea
mov
call
push
mov
call
pop
lea
push
lea
push
call
mov
lea
mov
call
push
mov
call
mov
pop
mov
lea
push
lea
lea
call
mov
push
mov
call
push
call
push
call
push
call
add
mov
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
push
push
mov
mov
cmp
jg
push
call
push
push
call
mov
mov
call
test
jbe
cmp
ja
push
pop
jmp
xor
pop
pop
ret
mov
call
sub
push
push
mov
xor
mov
mov
mov
cmp
je
push
mov
cmp
jg
push
call
push
push
call
mov
xor
cmp
je
mov
inc
inc
inc
cmp
jne
mov
cmp
mov
pop
jbe
cmp
ja
push
pop
jmp
xor
jmp
push
lea
mov
mov
mov
call
lea
mov
call
test
je
lea
lea
call
push
mov
mov
call
push
call
pop
mov
push
call
pop
mov
mov
pop
pop
mov
leave
ret
push
push
mov
mov
push
mov
cmp
mov
jg
push
mov
call
push
push
push
push
call
mov
mov
call
mov
pop
pop
pop
ret
mov
call
sub
push
xor
cmp
push
push
mov
mov
mov
je
mov
mov
cmp
jg
push
mov
call
push
push
push
push
call
mov
xor
cmp
je
mov
inc
inc
inc
cmp
jne
mov
mov
jmp
push
lea
mov
mov
mov
call
cmp
mov
je
mov
lea
call
mov
mov
mov
jmp
xor
mov
cmp
je
lea
call
push
pop
or
mov
mov
jmp
xor
lea
mov
push
call
test
mov
je
push
and
call
pop
test
mov
je
push
call
pop
lea
lea
call
mov
push
mov
call
push
call
push
call
pop
mov
pop
mov
pop
pop
pop
mov
leave
ret
push
push
mov
call
push
mov
mov
call
mov
test
je
push
lea
call
mov
mov
pop
pop
ret
push
mov
cmp
jne
mov
pop
ret
mov
call
neg
sbb
push
inc
mov
pop
sete
pop
ret
push
push
mov
call
push
mov
mov
call
mov
test
je
push
lea
call
mov
mov
pop
pop
ret
mov
call
sub
push
push
mov
xor
push
lea
mov
mov
mov
call
lea
mov
call
test
je
push
mov
push
push
call
test
je
mov
jmp
lea
call
test
je
push
mov
push
push
call
test
setne
push
call
pop
mov
mov
pop
pop
mov
leave
ret
push
mov
cmp
jne
mov
pop
ret
mov
call
neg
sbb
push
inc
mov
pop
sete
pop
ret
push
mov
xor
push
lea
mov
mov
mov
mov
call
mov
pop
ret
push
mov
call
push
call
pop
pop
ret
mov
call
sub
push
push
mov
mov
lea
call
and
push
push
lea
call
test
je
lea
call
test
je
lea
mov
call
or
push
call
pop
mov
call
test
jne
mov
call
test
jne
call
cmp
jne
lea
call
jmp
mov
jmp
mov
lea
call
push
call
pop
xor
mov
pop
pop
mov
leave
ret
mov
jmp
push
mov
xor
push
lea
mov
mov
mov
mov
call
mov
pop
ret
mov
call
push
push
mov
mov
and
call
push
call
pop
pop
mov
mov
leave
ret
push
mov
call
mov
lea
call
mov
pop
ret
push
mov
cmp
jne
mov
pop
ret
lea
call
neg
sbb
push
inc
mov
pop
sete
pop
ret
push
mov
push
and
and
and
call
mov
mov
mov
mov
and
mov
mov
pop
ret
push
mov
xor
push
mov
mov
mov
call
mov
pop
ret
push
push
push
mov
mov
xor
mov
mov
mov
cmp
je
inc
cmp
jne
push
mov
call
mov
mov
lea
mov
inc
test
je
mov
mov
inc
inc
jmp
mov
mov
pop
pop
pop
ret
push
mov
push
mov
and
sub
push
push
push
call
mov
leave
ret
push
mov
push
push
and
push
push
call
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
mov
xor
mov
lea
cmp
mov
jle
mov
sub
cmp
jne
cmp
jne
mov
push
call
jmp
mov
mov
mov
push
lea
call
and
push
lea
call
xor
test
jle
mov
mov
add
mov
mov
inc
cmp
jl
mov
mov
and
lea
push
mov
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
push
push
mov
mov
push
call
mov
mov
add
mov
mov
inc
inc
test
jne
mov
pop
add
mov
pop
ret
mov
shr
test
je
mov
test
je
mov
cmp
jne
cmp
je
cmp
jne
cmp
je
xor
ret
push
pop
ret
xor
ret
push
mov
mov
cmp
je
push
call
test
jne
xor
pop
ret
or
mov
pop
ret
mov
call
sub
push
mov
call
test
je
push
xor
cmp
je
lea
push
mov
push
push
call
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
mov
call
test
je
lea
push
push
call
mov
push
or
call
pop
cmp
pop
je
mov
lea
call
jmp
push
lea
call
mov
call
neg
sbb
lea
inc
lea
push
call
mov
lea
push
push
call
push
mov
call
push
or
call
cmp
pop
pop
je
mov
lea
call
xor
cmp
pop
setne
mov
pop
mov
leave
ret
push
push
push
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
xor
add
lea
adc
and
add
mov
push
mov
call
pop
pop
pop
ret
mov
call
sub
push
push
push
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
xor
add
lea
adc
and
add
mov
push
mov
call
and
call
neg
sbb
lea
inc
lea
push
call
push
lea
mov
call
push
call
push
call
pop
pop
pop
mov
pop
pop
mov
leave
ret
push
mov
push
and
push
push
mov
call
mov
pop
leave
ret
push
mov
sub
cmp
je
lea
push
push
call
test
je
mov
lea
call
jmp
lea
push
push
call
test
jne
xor
jmp
mov
lea
call
mov
leave
ret
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
sub
push
push
push
mov
mov
mov
call
test
je
mov
call
or
mov
xor
push
lea
mov
call
test
je
add
lea
push
call
cmp
je
mov
mov
mov
mov
mov
or
lea
call
jmp
or
push
push
lea
mov
call
lea
mov
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
lea
call
and
push
lea
call
test
je
mov
mov
shr
test
je
xor
push
call
pop
mov
mov
pop
pop
mov
leave
ret
push
mov
xor
push
lea
mov
mov
mov
call
mov
pop
ret
mov
call
sub
push
push
mov
lea
call
and
push
lea
call
mov
push
call
pop
mov
mov
pop
pop
mov
leave
ret
cmp
je
push
call
jmp
push
mov
push
call
ret
push
push
mov
mov
push
mov
call
test
je
mov
call
test
je
jmp
xor
jmp
mov
pop
pop
ret
push
call
test
mov
je
mov
mov
jmp
and
call
sub
neg
sbb
inc
ret
push
mov
push
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
inc
cmp
jne
cmp
jne
cmp
jne
jmp
cmp
jl
cmp
jg
push
lea
push
push
call
add
test
jne
push
pop
cmp
jle
mov
cmp
jl
cmp
jg
inc
cmp
jl
mov
jmp
xor
pop
pop
ret
push
mov
push
cmp
jne
cmp
jne
cmp
jne
cmp
jne
push
call
mov
pop
cmp
jne
cmp
jne
jmp
cmp
jl
cmp
jg
push
lea
push
push
call
add
test
jne
push
pop
cmp
jle
lea
mov
cmp
jb
cmp
ja
inc
inc
inc
cmp
jl
mov
jmp
xor
pop
pop
ret
mov
call
sub
mov
push
xor
push
mov
mov
mov
push
xor
cmp
mov
mov
je
mov
inc
inc
inc
cmp
jne
cmp
jl
cmp
je
cmp
jne
cmp
je
cmp
jne
cmp
je
push
lea
mov
mov
mov
call
cmp
mov
mov
jle
cmp
jne
cmp
jne
cmp
jb
cmp
jbe
cmp
jb
cmp
jbe
mov
cmp
jg
push
lea
call
push
push
call
mov
xor
cmp
je
mov
inc
inc
inc
cmp
jne
lea
cmp
mov
mov
je
cmp
ja
mov
cmp
je
push
lea
call
push
lea
call
lea
mov
push
lea
mov
call
push
mov
lea
mov
call
mov
push
mov
call
push
call
push
call
push
call
add
mov
push
call
pop
mov
jmp
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
call
test
je
xor
cmp
pop
setne
ret
xor
pop
ret
jmp
push
mov
push
mov
call
test
je
push
push
push
push
push
push
push
call
and
xor
cmp
mov
setne
mov
pop
pop
ret
mov
call
sub
push
xor
cmp
push
mov
jne
push
lea
call
mov
call
neg
sbb
lea
inc
lea
push
call
push
mov
mov
mov
push
push
push
push
call
push
mov
call
push
call
pop
mov
pop
jmp
mov
call
test
je
push
push
push
mov
push
push
push
push
push
call
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
mov
call
test
je
push
push
push
push
push
push
push
call
mov
push
call
pop
xor
cmp
mov
pop
setne
mov
pop
pop
mov
leave
ret
push
mov
mov
cmp
je
push
call
test
jne
xor
pop
ret
or
mov
pop
ret
push
mov
push
cmp
push
je
cmp
je
mov
mov
mov
mov
mov
jmp
lea
push
push
call
mov
cmp
jne
call
test
je
xor
jmp
push
push
push
push
call
mov
xor
add
adc
mov
mov
mov
mov
pop
leave
ret
push
mov
push
push
xor
cmp
je
cmp
je
cmp
jne
mov
push
add
mov
mov
adc
pop
mov
push
mov
mov
lea
mov
push
push
push
call
cmp
mov
jne
call
test
je
xor
jmp
mov
mov
mov
mov
mov
mov
leave
ret
push
push
push
push
call
ret
push
mov
sub
push
push
mov
push
mov
cmp
je
xor
cmp
je
lea
push
mov
push
lea
push
push
push
push
push
mov
push
mov
mov
call
test
je
mov
mov
mov
mov
jmp
lea
push
push
lea
push
push
push
push
push
push
call
test
jne
lea
push
push
lea
push
push
push
push
push
push
call
test
jne
mov
cmp
je
mov
push
mul
push
push
push
call
push
push
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
push
push
push
call
mov
mov
call
mov
mov
call
mov
pop
pop
pop
ret
mov
push
neg
sbb
push
and
or
push
push
call
ret
push
push
call
ret
push
mov
push
push
push
mov
push
push
push
push
call
mov
mov
call
mov
mov
call
mov
pop
pop
pop
ret
mov
push
neg
sbb
push
and
or
push
push
call
ret
push
push
call
ret
push
mov
push
lea
push
push
and
push
push
push
call
mov
mov
test
mov
setne
leave
ret
push
mov
mov
cmp
jbe
mov
push
push
push
call
pop
ret
push
mov
push
mov
push
mov
and
lea
and
push
mov
push
push
call
mov
add
test
je
test
je
add
sub
je
jmp
xor
jmp
mov
pop
pop
pop
ret
push
push
push
push
push
call
ret
push
push
push
push
call
ret
xor
cmp
setne
inc
push
push
call
ret
push
push
push
push
push
call
ret
push
push
push
push
call
ret
xor
cmp
setne
inc
push
push
call
ret
push
push
push
push
call
neg
sbb
neg
ret
push
mov
push
mov
cmp
jbe
mov
lea
push
push
and
push
push
push
call
mov
mov
test
mov
setne
leave
ret
push
mov
push
mov
push
mov
and
lea
and
push
mov
push
push
call
mov
add
test
je
test
je
add
sub
je
jmp
xor
jmp
mov
pop
pop
pop
ret
push
call
neg
sbb
neg
ret
push
mov
push
push
lea
push
push
mov
push
push
call
test
je
mov
cmp
jne
mov
cmp
je
xor
jmp
mov
call
pop
leave
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
push
push
mov
mov
test
je
push
call
dec
cmp
je
push
mov
call
pop
pop
ret
push
mov
push
mov
and
and
call
mov
mov
mov
mov
and
mov
mov
pop
ret
mov
test
je
mov
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
ret
push
push
mov
push
call
mov
test
jne
xor
jmp
mov
mov
call
mov
push
call
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
test
mov
je
mov
push
push
call
mov
push
push
call
mov
push
push
call
xor
mov
cmp
je
cmp
je
cmp
je
lea
push
push
call
push
call
test
je
and
lea
push
push
push
call
test
je
push
push
lea
push
neg
push
push
push
mov
sbb
and
mov
call
test
je
call
mov
neg
sbb
inc
jmp
mov
push
call
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
and
call
mov
pop
ret
push
mov
push
and
call
mov
pop
ret
push
mov
push
and
call
mov
pop
ret
push
mov
push
call
mov
pop
ret
push
mov
push
call
mov
pop
ret
push
mov
push
mov
call
push
and
mov
call
test
mov
jne
cmp
je
mov
push
mov
lea
push
call
mov
pop
pop
ret
push
mov
push
push
push
mov
call
mov
and
push
mov
call
mov
pop
lea
push
push
call
test
mov
jne
mov
push
mov
lea
push
call
xor
movsx
mov
mov
inc
cmp
jbe
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
call
mov
mov
neg
sbb
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
cmp
je
call
mov
mov
mov
mov
mov
mov
mov
pop
ret
jmp
movzx
cmp
jg
cmp
jge
cmp
jl
cmp
jle
cmp
jle
cmp
jle
push
call
ret
cmp
jl
cmp
jle
cmp
jne
and
and
xor
ret
push
mov
push
call
mov
movzx
cmp
jg
cmp
jge
cmp
jl
cmp
jle
cmp
jle
cmp
jle
push
push
call
pop
ret
cmp
jl
cmp
jle
cmp
jne
push
push
push
call
add
xor
jmp
push
mov
mov
call
test
jl
push
push
push
call
and
add
xor
pop
ret
push
mov
call
test
jge
mov
mov
pop
ret
push
mov
push
mov
push
call
test
jge
cmp
jne
mov
push
mov
lea
push
call
mov
mov
pop
pop
ret
push
mov
sub
push
lea
mov
push
push
and
call
test
jne
xor
jmp
movzx
push
push
xor
call
movzx
push
mov
pop
push
push
call
movzx
push
push
mov
call
cmp
je
movzx
push
push
mov
call
movzx
push
push
mov
call
cmp
je
movzx
push
push
mov
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
push
test
mov
je
mov
inc
xor
push
mov
xor
pop
div
mov
add
mov
xor
div
inc
mov
test
jne
mov
sub
test
mov
jle
mov
mov
mov
shr
rep
mov
and
add
rep
mov
dec
mov
inc
test
jg
and
pop
mov
pop
pop
leave
ret
mov
call
sub
and
push
push
mov
mov
lea
push
mov
call
lea
lea
push
call
and
lea
mov
call
push
call
pop
mov
mov
pop
mov
leave
ret
push
mov
push
movzx
push
mov
xor
cmp
mov
jg
je
sub
je
dec
dec
je
dec
je
sub
je
sub
jne
cmp
mov
jne
mov
push
jmp
push
mov
call
jmp
mov
cdq
push
push
jmp
movsx
jmp
mov
mov
mov
push
mov
call
jmp
movzx
jmp
sub
je
dec
je
dec
je
dec
je
sub
je
lea
push
push
mov
call
push
push
add
mov
call
jmp
push
jmp
push
push
mov
call
jmp
push
push
jmp
movzx
cdq
push
push
mov
call
mov
pop
leave
ret
push
mov
sub
and
push
push
mov
lea
push
call
lea
mov
push
call
mov
pop
leave
ret
push
mov
sub
and
push
push
mov
lea
push
call
lea
mov
push
call
mov
pop
leave
ret
push
mov
push
movzx
sub
je
dec
je
dec
je
dec
dec
je
lea
push
push
mov
call
mov
mov
leave
ret
mov
xor
leave
ret
movzx
jmp
movzx
cdq
leave
ret
push
mov
sub
lea
push
call
mov
leave
ret
push
mov
sub
push
push
mov
call
push
call
test
je
lea
push
call
test
je
mov
mov
cmp
ja
jb
cmp
jae
mov
leave
ret
mov
leave
ret
lea
mov
push
call
mov
cmp
jb
mov
xor
leave
ret
push
push
shr
push
call
neg
sbb
neg
ret
push
mov
push
push
lea
push
push
lea
mov
push
mov
push
call
test
jne
cmp
sbb
and
add
mov
xor
jmp
movzx
movzx
shl
add
mov
mov
pop
pop
leave
ret
xor
add
push
push
adc
push
push
mov
push
call
mov
mov
pop
ret
push
push
push
mov
push
push
push
mov
call
mov
xor
add
mov
adc
mov
cmp
ja
jb
cmp
jae
and
jmp
sub
push
sbb
push
push
push
call
test
ja
cmp
jbe
or
xor
jmp
mov
mov
pop
pop
ret
push
mov
sub
lea
push
mov
push
call
lea
push
push
call
pop
leave
ret
mov
cmp
jae
mov
inc
mov
ret
push
mov
push
push
and
cmp
push
push
push
mov
mov
jbe
mov
mov
mov
mov
mov
call
test
je
inc
add
mov
cmp
jb
xor
pop
pop
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
mov
jmp
mov
push
push
push
xor
test
jbe
mov
mov
mov
cmp
jne
mov
cmp
je
inc
add
cmp
jb
xor
pop
pop
pop
ret
push
call
mov
jmp
mov
call
push
push
mov
push
mov
xor
xor
push
cmp
push
mov
jbe
mov
mov
mov
cmp
jne
mov
cmp
jne
cmp
je
cmp
jne
jmp
cmp
jne
inc
add
cmp
jb
jmp
call
cmp
je
mov
push
call
jmp
cmp
push
jne
mov
call
jmp
call
jmp
mov
call
cmp
je
mov
cmp
je
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
mov
or
push
call
push
lea
call
mov
pop
pop
xor
pop
mov
leave
ret
mov
call
push
and
push
mov
push
and
push
mov
lea
push
push
push
call
or
mov
mov
test
je
mov
push
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
and
push
and
and
push
lea
push
mov
push
call
and
mov
mov
test
je
mov
push
call
mov
mov
pop
mov
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
mov
pop
pop
ret
mov
mov
and
mov
mov
ret
push
mov
mov
push
and
push
mov
cmp
jne
xor
jmp
lea
mov
and
cmp
jne
xor
jmp
lea
mov
push
push
push
mov
call
mov
pop
pop
pop
ret
cmp
je
cmp
je
cmp
je
test
je
push
pop
cmp
je
mov
ret
xor
ret
push
pop
ret
push
pop
ret
push
pop
ret
mov
mov
mov
mov
ret
push
mov
push
push
push
mov
mov
mov
mov
cmp
mov
jb
mov
mov
lea
push
push
mov
push
push
call
mov
mov
mov
mov
pop
pop
test
pop
jne
xor
jmp
push
pop
call
pop
ret
mov
mov
mov
xor
mov
mov
mov
mov
ret
push
mov
push
mov
mov
test
je
push
call
test
mov
je
xor
jmp
and
add
mov
adc
pop
pop
ret
sub
je
dec
je
dec
je
sub
je
sub
je
mov
ret
mov
ret
mov
ret
mov
ret
push
pop
ret
xor
ret
mov
mov
and
mov
mov
mov
ret
push
mov
push
push
push
mov
mov
mov
mov
cmp
mov
jb
mov
mov
lea
push
push
mov
push
push
call
mov
mov
mov
mov
neg
sbb
pop
pop
and
pop
pop
ret
push
mov
push
push
mov
push
push
mov
xor
mov
sub
je
dec
je
dec
je
push
pop
jmp
push
jmp
push
pop
push
mov
lea
mov
push
push
push
push
push
call
mov
mov
mov
mov
mov
mov
neg
sbb
pop
and
pop
pop
leave
ret
push
mov
mov
call
and
pop
ret
push
mov
push
mov
cmp
je
cmp
je
mov
call
mov
call
mov
mov
mov
mov
xor
pop
cmp
pop
setne
ret
push
mov
push
push
mov
cmp
jne
mov
mov
sub
push
cdq
add
mov
lea
push
push
adc
mov
push
push
call
mov
mov
mov
mov
test
lea
pop
mov
je
mov
inc
mov
jmp
mov
xor
pop
leave
ret
mov
and
mov
ret
mov
cmp
je
mov
inc
mov
ret
jmp
push
mov
push
mov
cmp
je
cmp
je
mov
call
mov
call
mov
mov
xor
pop
cmp
pop
setne
ret
push
mov
cmp
jne
mov
mov
push
mov
sub
push
call
test
mov
jne
add
adc
mov
pop
mov
mov
pop
ret
mov
and
mov
ret
mov
mov
inc
cmp
mov
jne
jmp
ret
mov
call
sub
push
push
push
mov
xor
push
lea
mov
mov
mov
call
mov
mov
cmp
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
mov
jmp
or
cmp
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
mov
jmp
or
cmp
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
cmp
jg
mov
push
lea
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
cmp
mov
jle
cmp
jle
push
lea
mov
push
call
push
lea
mov
call
mov
push
call
pop
lea
push
mov
push
call
push
lea
mov
call
mov
push
call
pop
jmp
push
lea
call
push
lea
call
mov
push
pop
mov
lea
lea
lea
lea
shr
push
push
call
test
je
lea
jmp
mov
cmp
jne
push
lea
push
lea
call
mov
push
neg
sbb
inc
call
push
call
push
call
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
mov
mov
lea
call
push
mov
mov
call
lea
mov
push
call
mov
push
call
mov
call
pop
pop
leave
ret
push
add
call
ret
push
add
push
call
ret
mov
xor
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
neg
lea
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
ret
mov
inc
mov
ret
mov
dec
mov
jne
test
je
mov
push
call
xor
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
mov
call
lea
call
pop
ret
push
mov
sub
mov
test
je
and
cmp
push
push
push
je
mov
cmp
je
cmp
je
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
jmp
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
lea
mov
mov
mov
mov
and
cmp
jbe
mov
cmp
jne
mov
cmp
je
mov
xor
and
or
jne
test
jne
mov
xor
add
adc
mov
and
xor
or
je
and
cmp
ja
jb
cmp
ja
cmp
jne
mov
cmp
je
lea
lea
push
push
push
push
call
test
je
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
sub
sbb
mov
jne
cmp
mov
jb
mov
cmp
jne
call
test
mov
je
lea
lea
push
push
push
call
test
je
mov
test
je
add
adc
jmp
sub
mov
mov
mov
cmp
jne
cmp
je
lea
push
push
push
push
lea
call
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
and
cmp
jae
sub
mov
cmp
jb
mov
mov
push
add
push
push
call
mov
add
add
adc
test
je
add
jmp
mov
jmp
xor
jmp
lea
lea
push
push
push
call
mov
mov
test
je
mov
xor
add
mov
adc
add
adc
call
pop
pop
pop
leave
ret
test
je
xor
ret
call
test
jne
mov
ret
jle
and
or
ret
push
mov
mov
cmp
jae
mov
push
lea
push
push
push
push
push
call
push
call
mov
mov
test
je
mov
mov
test
jne
call
cmp
jne
xor
jmp
test
setne
call
pop
pop
ret
push
mov
mov
push
cmp
jae
mov
cmp
je
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
add
jmp
mov
mov
add
adc
mov
mov
test
mov
je
mov
mov
xor
jmp
lea
push
push
push
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
test
je
mov
mov
mov
call
pop
pop
pop
ret
mov
push
lea
call
mov
call
ret
add
call
mov
jmp
push
mov
lea
push
mov
push
push
lea
push
call
mov
add
adc
mov
test
je
mov
mov
call
pop
pop
ret
push
mov
cmp
jb
mov
jmp
lea
push
mov
push
lea
push
push
call
mov
test
je
mov
mov
mov
mov
mov
call
pop
ret
push
mov
sub
mov
push
lea
lea
push
push
push
push
mov
call
test
jne
mov
jmp
push
mov
push
call
test
je
lea
mov
push
push
push
call
test
je
mov
jmp
xor
neg
sbb
and
add
pop
leave
ret
push
mov
push
mov
test
je
and
cmp
push
pop
jbe
mov
cmp
jae
mov
lea
push
push
push
push
push
call
push
call
test
je
mov
add
test
setne
call
pop
pop
ret
sub
jmp
sub
jmp
mov
call
push
push
push
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
mov
jne
lea
push
push
mov
call
mov
mov
pop
pop
mov
leave
ret
push
mov
push
push
mov
push
push
pop
push
push
push
call
add
test
jne
mov
mov
mov
mov
push
call
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
jmp
mov
push
push
push
call
add
test
jne
mov
cmp
lea
jne
mov
push
push
push
mov
call
test
jne
mov
lea
neg
sbb
push
and
mov
mov
mov
call
xor
jmp
mov
pop
pop
pop
pop
ret
mov
inc
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
mov
push
cmp
je
mov
mov
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
mov
mov
mov
push
call
test
jne
add
adc
pop
pop
ret
push
mov
push
push
mov
push
mov
call
test
jne
mov
xor
test
setne
test
mov
je
mov
mov
mov
mov
cmp
je
mov
cmp
ja
jb
mov
cmp
jae
mov
mov
sub
mov
add
mov
lea
push
call
test
jne
mov
add
mov
push
push
mov
push
call
mov
cmp
jae
mov
and
inc
cmp
jb
mov
push
push
mov
push
call
mov
test
je
push
mov
push
call
test
jne
mov
test
je
mov
lea
push
push
push
call
test
jne
xor
cmp
jae
mov
mov
mov
inc
inc
jmp
mov
jmp
xor
jmp
test
je
push
mov
push
call
pop
pop
pop
pop
ret
xor
mov
mov
mov
mov
push
mov
call
ret
push
mov
push
and
lea
call
lea
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
xor
pop
ret
push
mov
push
push
push
mov
test
je
and
cmp
jbe
mov
jmp
mov
mov
mov
sub
cmp
jae
mov
add
push
push
push
call
sub
add
test
je
add
mov
mov
add
add
mov
push
push
push
call
test
mov
je
cmp
ja
mov
push
push
lea
call
test
jne
xor
cmp
jae
mov
mov
mov
mov
inc
inc
jmp
cmp
mov
ja
xor
pop
pop
pop
pop
ret
mov
jmp
cmp
je
mov
jmp
mov
call
push
mov
push
mov
test
je
mov
push
push
mov
push
call
mov
mov
cmp
jae
mov
mov
and
inc
cmp
jb
mov
push
push
mov
push
call
cmp
je
mov
jmp
push
mov
lea
push
call
test
jne
and
and
mov
and
lea
mov
push
push
push
call
mov
test
je
mov
push
call
or
mov
mov
test
je
mov
push
call
mov
jmp
xor
mov
pop
pop
mov
leave
ret
push
mov
push
xor
mov
mov
lea
mov
call
lea
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
xor
pop
ret
push
mov
mov
test
je
and
push
push
mov
test
jbe
mov
mov
cmp
jne
xor
cmp
jae
mov
add
mov
mov
mov
inc
lea
cmp
jb
mov
and
and
mov
add
mov
sub
mov
mov
lea
push
call
test
jne
mov
add
mov
mov
push
push
mov
push
call
test
mov
jne
mov
test
je
mov
jmp
mov
cmp
jae
mov
mov
and
inc
mov
cmp
jb
push
mov
push
mov
push
call
jmp
mov
mov
sub
cmp
jb
mov
mov
push
add
push
push
call
mov
add
add
test
je
add
xor
pop
pop
pop
ret
mov
push
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
mov
push
mov
push
mov
call
ret
mov
mov
push
mov
call
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
mov
xor
mov
mov
mov
mov
mov
ret
push
push
mov
push
pop
mov
cmp
jae
mov
cmp
je
cmp
je
mov
call
mov
mov
call
xor
mov
test
setne
mov
pop
pop
ret
push
mov
mov
call
and
pop
ret
push
add
call
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
mov
cmp
je
xor
jmp
mov
mov
sub
push
cdq
add
mov
lea
push
push
adc
mov
push
push
call
test
pop
je
mov
lea
push
push
call
mov
mov
mov
add
test
mov
sete
xor
mov
test
sete
mov
pop
leave
ret
push
mov
call
test
jne
add
adc
or
pop
ret
mov
mov
inc
mov
pop
ret
mov
call
push
push
mov
mov
call
or
xor
mov
lea
mov
push
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
jmp
push
mov
cmp
jne
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
push
and
call
push
call
pop
pop
lea
call
mov
mov
call
push
call
pop
pop
mov
mov
leave
ret
or
xor
mov
mov
mov
mov
ret
mov
call
sub
push
xor
cmp
push
push
mov
jne
mov
jmp
cmp
jne
push
lea
mov
mov
mov
call
lea
mov
call
test
jne
push
call
pop
jmp
lea
mov
push
push
push
call
test
je
mov
push
push
lea
call
test
je
push
or
mov
call
pop
lea
lea
push
push
push
call
test
jne
xor
jmp
push
mov
mov
call
mov
mov
add
adc
xor
cmp
sete
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
push
mov
mov
cmp
jae
sub
cmp
jb
mov
mov
push
push
add
push
call
mov
mov
add
push
call
add
sub
add
add
mov
adc
push
mov
push
call
pop
pop
pop
ret
mov
call
sub
push
push
mov
push
lea
call
test
je
mov
or
xor
xor
test
jbe
mov
mov
push
call
test
jne
push
mov
or
call
mov
mov
cmp
je
or
push
and
lea
call
test
jne
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
cmp
ja
jb
cmp
jae
lea
lea
push
push
push
call
test
je
cmp
je
push
mov
mov
call
test
jne
push
mov
mov
call
add
mov
adc
cmp
jb
ja
jmp
mov
jmp
mov
or
lea
call
mov
jmp
or
lea
call
mov
cmp
jne
cmp
lea
jne
cmp
jne
xor
jmp
push
mov
mov
push
mov
mov
push
push
call
test
mov
jne
test
je
and
mov
jmp
test
je
mov
xor
pop
pop
ret
push
mov
push
push
push
mov
xor
xor
push
mov
mov
sub
mov
mov
sbb
cmp
ja
jb
cmp
jb
mov
xor
test
jbe
mov
lea
push
push
push
mov
push
call
mov
add
adc
test
jne
mov
mov
pop
pop
pop
test
je
mov
leave
ret
push
mov
mov
test
je
and
push
mov
push
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
jmp
sub
push
sbb
mov
xor
cmp
ja
jb
cmp
jae
mov
mov
mov
add
pop
adc
cmp
jne
cmp
je
mov
mov
mov
call
test
jne
mov
lea
push
push
mov
push
push
call
mov
mov
test
je
mov
xor
add
adc
add
adc
pop
pop
pop
ret
mov
push
push
push
mov
push
push
call
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
lea
add
mov
adc
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
mov
call
push
push
push
push
push
mov
xor
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
mov
je
or
cmp
je
mov
push
call
mov
jmp
mov
push
push
push
push
push
call
mov
xor
mov
pop
pop
pop
mov
leave
ret
push
mov
push
and
push
mov
push
test
push
je
and
mov
mov
xor
mov
mov
cmp
jb
ja
cmp
jbe
or
jne
cmp
mov
jne
mov
jmp
test
je
mov
xor
jmp
mov
mov
mov
test
je
mov
lea
push
push
push
push
call
mov
mov
sub
sbb
test
je
mov
mov
pop
pop
pop
leave
ret
mov
call
push
push
mov
push
lea
push
mov
call
mov
push
push
and
push
mov
push
push
call
test
jne
push
mov
push
mov
push
push
call
push
mov
call
mov
mov
pop
pop
mov
leave
ret
push
mov
push
lea
push
mov
push
push
and
mov
push
push
push
call
mov
mov
add
adc
pop
test
je
mov
leave
ret
push
push
push
mov
call
mov
cmp
jb
mov
cmp
jb
mov
xor
imul
mov
div
cmp
jne
call
test
mov
je
push
mov
pop
cmp
jbe
mov
add
inc
mov
mov
add
cmp
jb
and
mov
mov
mov
jmp
xor
pop
pop
pop
ret
push
mov
mov
call
and
and
pop
ret
mov
test
jne
ret
mov
mov
ret
mov
test
je
mov
mov
mov
ret
push
mov
cmp
push
mov
jbe
mov
jmp
push
mov
call
test
jne
mov
jmp
sub
add
mov
call
push
mov
mov
call
pop
pop
ret
push
push
mov
push
mov
mov
cmp
jbe
mov
jmp
push
push
mov
call
test
je
cmp
je
sub
shr
add
jmp
xor
jmp
mov
pop
pop
pop
ret
push
mov
lea
call
mov
call
pop
ret
push
mov
push
lea
push
call
mov
call
push
mov
call
mov
pop
pop
ret
cmp
push
mov
je
push
lea
push
call
push
mov
call
push
call
cmp
pop
je
lea
call
pop
ret
push
mov
mov
test
jle
mov
push
push
mov
call
mov
call
jmp
and
and
pop
ret
push
mov
push
call
mov
call
pop
ret
push
mov
sub
push
push
mov
push
xor
mov
mov
test
mov
ja
test
jbe
jmp
mov
mov
xor
cmp
mov
ja
jb
cmp
jae
mov
cmp
jge
mov
push
mov
mov
call
test
jne
mov
sub
sbb
inc
test
ja
jb
cmp
ja
xor
pop
pop
pop
leave
ret
mov
jmp
mov
push
mov
push
mov
mov
mov
push
mov
shl
push
call
mov
and
pop
pop
ret
push
mov
mov
test
jle
push
dec
mov
push
call
mov
call
jmp
and
and
pop
ret
push
mov
push
push
push
mov
push
push
mov
mov
push
mov
call
mov
mov
mov
xor
xor
cmp
mov
mov
mov
jle
mov
cmp
ja
jb
mov
cmp
jae
mov
mov
push
call
jmp
push
mov
push
call
mov
push
and
mov
add
pop
adc
inc
cmp
jl
mov
push
mov
mov
mov
mov
call
pop
pop
pop
leave
ret
push
mov
sub
and
and
mov
push
push
push
push
mov
pop
lea
mov
and
cmp
movzx
jae
add
jmp
add
mov
dec
dec
push
dec
mov
pop
call
mov
and
cmp
movzx
jae
add
jmp
add
dec
dec
dec
push
mov
pop
call
mov
mov
or
jne
lea
mov
push
call
mov
pop
pop
pop
leave
ret
mov
call
sub
and
push
push
mov
push
mov
test
mov
mov
mov
je
mov
mov
cmp
jne
test
je
cmp
jne
test
jne
mov
mov
test
mov
jb
ja
cmp
jbe
xor
add
cmp
mov
ja
jb
cmp
jae
cmp
jae
add
xor
mov
mov
shr
cmp
jb
ja
cmp
jb
mov
mov
and
mov
and
lea
mov
push
push
push
call
xor
cmp
jne
cmp
je
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
pop
mov
mov
mov
mov
shl
add
push
call
pop
mov
test
mov
je
push
push
lea
push
push
push
mov
call
mov
mov
jmp
xor
and
mov
mov
mov
cmp
jge
mov
mov
lea
push
call
mov
lea
shl
add
push
mov
call
cmp
je
cmp
jne
cmp
jne
mov
cmp
jae
mov
inc
mov
mov
jmp
and
mov
lea
push
push
push
mov
call
mov
push
push
mov
push
push
call
mov
mov
test
mov
je
mov
push
call
cmp
mov
je
mov
push
call
test
je
and
lea
call
mov
or
test
je
mov
push
call
mov
jmp
and
lea
call
mov
or
test
je
mov
push
call
xor
jmp
mov
test
je
push
call
push
push
call
mov
and
and
ret
push
mov
push
mov
test
je
push
lea
push
push
push
push
call
test
je
push
call
pop
mov
pop
jmp
mov
call
test
je
push
call
pop
mov
pop
pop
ret
push
mov
push
push
mov
push
mov
lea
mov
mov
call
mov
push
push
push
mov
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
cmp
push
mov
jne
mov
mov
add
adc
lea
mov
push
push
mov
push
push
push
call
mov
test
je
mov
push
sub
mov
sbb
mov
mov
pop
pop
pop
ret
mov
push
mov
mov
add
mov
mov
adc
push
push
push
call
pop
ret
push
push
mov
push
pop
mov
cmp
jae
mov
cmp
je
cmp
je
mov
call
mov
mov
call
xor
mov
test
setne
mov
pop
pop
ret
push
mov
mov
call
and
pop
ret
push
add
call
ret
mov
xor
mov
mov
mov
mov
mov
mov
ret
mov
mov
push
push
mov
xor
push
mov
sub
sbb
add
adc
cmp
pop
pop
pop
jbe
mov
add
adc
ret
push
mov
push
push
push
push
mov
push
mov
mov
cmp
jb
mov
sub
mov
xor
cmp
mov
je
mov
push
add
push
push
call
add
add
mov
cmp
je
lea
mov
mov
push
mov
push
add
push
push
call
mov
mov
add
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
jbe
mov
add
mov
mov
pop
adc
pop
pop
leave
ret
push
mov
mov
cmp
je
mov
call
test
je
pop
ret
xor
pop
ret
push
mov
push
call
test
je
mov
lea
push
push
call
leave
ret
push
mov
push
lea
call
mov
pop
ret
push
mov
lea
call
and
and
mov
call
and
and
pop
ret
push
mov
push
lea
push
call
mov
call
pop
ret
push
mov
push
mov
mov
lea
push
mov
push
mov
call
test
jne
push
mov
call
xor
pop
pop
ret
push
mov
sub
push
push
mov
push
cmp
je
push
mov
push
mov
push
push
call
jmp
mov
test
je
and
cmp
je
mov
cmp
jge
mov
mov
mov
mov
add
mov
sub
cmp
jae
mov
push
push
push
call
add
test
je
add
add
sub
add
mov
call
cmp
jb
ja
cmp
jbe
mov
mov
mov
mov
cmp
jne
inc
and
jmp
mov
push
mov
mov
mov
mov
push
mov
mov
lea
push
xor
cmp
setne
inc
inc
push
call
sub
je
dec
je
dec
jne
mov
lea
call
push
mov
call
mov
mov
cmp
jne
mov
jmp
mov
mov
call
test
jne
mov
lea
push
push
mov
push
push
call
test
je
mov
add
jmp
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
mov
mul
mov
add
adc
pop
ret
push
mov
mov
xor
cmp
je
mov
cmp
jne
mov
jmp
push
mov
push
push
push
push
call
jmp
cmp
jne
mov
or
je
mov
pop
ret
cmp
jne
mov
or
jne
mov
mov
push
mov
cmp
je
call
mov
mov
xor
pop
jmp
push
mov
mov
cmp
je
mov
test
jne
mov
jmp
push
mov
push
push
call
jmp
mov
mov
mov
mov
xor
pop
ret
mov
call
push
push
push
mov
push
lea
push
mov
call
lea
xor
mov
mov
call
lea
call
mov
cmp
jle
mov
push
push
mov
call
push
push
lea
call
dec
jne
push
mov
mov
mov
mov
mov
call
push
call
mov
pop
pop
pop
mov
leave
ret
push
mov
push
lea
push
call
mov
mov
shl
xor
push
mov
mov
mov
mov
mov
call
pop
pop
ret
mov
call
push
push
push
mov
push
lea
push
mov
call
mov
and
test
je
mov
mov
mov
mov
lea
mov
mov
sub
sbb
mov
mov
add
adc
mov
test
je
mov
mov
mov
mov
lea
mov
mov
sub
sbb
mov
mov
add
adc
mov
test
je
mov
lea
add
push
push
push
call
mov
jmp
xor
push
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
push
call
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
push
mov
push
mov
lea
test
je
mov
push
call
and
push
lea
mov
call
mov
push
push
push
mov
call
mov
pop
mov
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
mov
add
adc
mov
test
je
mov
mov
add
adc
cmp
je
mov
test
je
mov
lea
push
lea
push
push
call
test
jne
mov
mov
add
adc
add
adc
cmp
je
cmp
lea
jne
lea
mov
push
push
mov
call
jmp
xor
pop
leave
ret
mov
push
push
push
call
ret
push
mov
push
mov
push
call
ret
push
mov
push
mov
push
call
ret
push
push
mov
pop
call
test
jne
xor
lea
call
test
jne
xor
lea
call
pop
ret
push
mov
lea
call
lea
call
and
and
pop
ret
mov
call
push
push
push
push
mov
push
call
xor
pop
cmp
je
mov
mov
mov
jmp
xor
cmp
je
mov
push
call
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
cmp
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
mov
call
push
call
pop
xor
pop
ret
push
push
push
call
add
test
jne
mov
mov
push
mov
mov
call
xor
jmp
mov
ret
push
mov
dec
mov
jne
test
je
mov
mov
call
push
call
pop
xor
pop
ret
push
push
push
mov
test
mov
jbe
mov
lea
call
test
jne
mov
cmp
jae
mov
cmp
jbe
push
push
push
call
add
add
sub
jne
mov
call
mov
call
mov
test
je
mov
add
adc
xor
pop
pop
pop
ret
add
jmp
push
mov
push
push
push
push
mov
mov
test
jbe
mov
mov
mov
call
lea
call
mov
push
mov
mov
mov
lea
push
push
push
call
test
je
push
pop
jmp
mov
test
je
mov
xor
pop
pop
leave
ret
add
jmp
push
mov
push
mov
xor
push
cmp
je
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
jb
ja
mov
cmp
jbe
mov
jmp
mov
push
sub
mov
cmp
jbe
mov
mov
push
add
push
push
call
add
add
adc
test
je
mov
xor
pop
pop
pop
pop
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
xor
lea
mov
add
adc
mov
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
push
mov
push
call
and
and
pop
pop
ret
push
mov
push
mov
mov
cmp
jbe
cmp
jbe
mov
shr
jmp
push
pop
cmp
sbb
and
add
add
cmp
jbe
mov
push
push
call
pop
test
pop
jne
xor
jmp
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
add
cmp
jb
push
lea
call
test
jne
xor
jmp
mov
add
pop
ret
push
mov
push
mov
push
mov
call
push
push
push
call
add
pop
pop
ret
push
mov
push
push
test
je
and
mov
test
je
mov
push
mov
call
test
jne
mov
jmp
push
push
push
call
add
add
test
je
mov
xor
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
sub
cmp
jbe
mov
mov
push
push
add
push
call
mov
add
add
test
je
mov
pop
test
pop
jne
cmp
je
mov
jmp
xor
pop
ret
push
mov
lea
push
mov
push
push
mov
push
mov
push
call
mov
mov
add
adc
pop
test
je
mov
pop
ret
push
push
mov
mov
cmp
je
test
push
jbe
push
call
mov
mov
test
pop
jbe
cmp
jb
mov
push
push
push
call
add
jmp
xor
push
call
pop
mov
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
mov
mov
and
test
je
mov
cmp
jae
mov
mov
lea
push
push
push
push
call
mov
add
add
sub
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
push
mov
lea
mov
push
call
test
jne
cmp
setne
pop
pop
ret
push
mov
push
mov
lea
mov
push
call
test
jne
mov
sub
neg
sbb
and
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
test
je
mov
cmp
jae
mov
mov
lea
push
push
push
push
call
add
sub
test
jne
cmp
jne
mov
jmp
xor
pop
pop
pop
pop
ret
push
push
mov
push
cmp
lea
jne
mov
call
test
jne
cmp
lea
jne
mov
call
test
jne
mov
call
mov
call
and
cmp
lea
je
xor
jmp
push
mov
call
pop
pop
pop
ret
push
mov
mov
call
cmp
jne
mov
mov
call
lea
call
jmp
xor
pop
ret
and
add
jmp
push
push
mov
push
cmp
lea
mov
mov
je
mov
call
mov
lea
test
je
call
mov
call
lea
call
pop
mov
pop
pop
jmp
jmp
mov
push
push
push
mov
pop
xor
xor
mov
mov
mov
mov
mov
push
stos
stos
xor
mov
mov
mov
mov
mov
stos
stos
xor
mov
mov
mov
mov
mov
stos
pop
push
stos
pop
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
stos
stos
xor
mov
mov
mov
mov
stos
stos
stos
xor
mov
mov
mov
mov
mov
stos
stos
xor
mov
mov
mov
mov
mov
stos
stos
xor
mov
mov
mov
mov
mov
stos
stos
xor
mov
mov
mov
mov
stos
stos
stos
xor
mov
mov
mov
mov
stos
stos
stos
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
stos
pop
pop
ret
mov
cmp
jl
cmp
jg
mov
ret
xor
ret
mov
sub
je
dec
dec
je
push
pop
ret
xor
ret
mov
test
je
cmp
je
cmp
je
xor
ret
push
pop
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
push
call
pop
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
push
call
pop
ret
push
mov
push
call
mov
pop
ret
mov
call
push
push
push
push
push
mov
mov
push
xor
mov
push
mov
call
jmp
call
mov
ret
mov
xor
or
push
call
push
call
mov
push
test
setne
mov
call
push
call
test
setne
push
mov
call
push
call
add
mov
test
setne
push
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
cmp
push
mov
sete
mov
call
cmp
jne
push
mov
call
cmp
jne
push
mov
call
cmp
jne
xor
jmp
push
pop
push
mov
mov
mov
call
cmp
je
push
mov
call
mov
mov
cmp
jne
mov
mov
pop
pop
mov
pop
leave
ret
mov
jmp
push
mov
sub
push
lea
call
lea
push
push
call
push
mov
push
call
mov
pop
ret
push
mov
push
call
mov
pop
ret
mov
call
sub
push
push
push
mov
mov
lea
call
mov
mov
xor
lea
mov
call
lea
mov
call
mov
push
lea
mov
call
mov
lea
lea
push
lea
push
push
mov
mov
call
cmp
jne
cmp
jg
lea
mov
call
mov
lea
mov
call
lea
mov
call
xor
cmp
jle
mov
mov
mov
shr
test
jne
lea
push
push
lea
call
push
lea
mov
call
mov
push
call
pop
inc
cmp
jl
and
lea
call
cmp
jne
lea
push
push
mov
call
lea
call
mov
xor
cmp
mov
jle
push
lea
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
lea
lea
push
call
mov
push
call
inc
pop
cmp
jl
push
lea
call
mov
lea
lea
mov
call
mov
push
call
mov
push
call
cmp
jle
mov
mov
mov
mov
mov
shl
push
call
mov
mov
push
call
inc
cmp
jl
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
lea
mov
call
or
lea
call
mov
pop
pop
pop
mov
leave
ret
lea
push
push
mov
call
push
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
call
and
lea
call
mov
mov
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
push
mov
cmp
mov
jge
call
mov
mov
mov
lea
call
test
jne
call
push
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
cmp
je
push
mov
call
cmp
setl
mov
push
mov
call
cmp
je
push
mov
call
mov
call
mov
jmp
mov
push
push
pop
mov
call
push
push
pop
mov
mov
call
and
push
mov
mov
call
cmp
je
push
mov
mov
push
push
push
call
mov
lea
add
call
push
mov
call
cmp
je
push
mov
push
push
push
call
mov
lea
add
call
push
mov
pop
push
call
cmp
jne
mov
cmp
je
cmp
je
mov
jmp
and
lea
call
test
mov
jne
cmp
je
and
jmp
cmp
mov
je
and
cmp
je
cmp
jg
call
mov
push
pop
lea
push
call
cmp
jne
call
push
lea
lea
mov
push
mov
push
push
call
push
mov
call
mov
push
mov
mov
call
mov
test
mov
je
push
mov
call
mov
lea
push
call
push
mov
call
mov
push
mov
mov
call
cmp
je
push
mov
call
mov
lea
push
call
cmp
je
mov
cmp
jne
mov
mov
cmp
je
mov
call
lea
call
mov
and
push
mov
call
cmp
je
push
mov
push
push
push
call
mov
lea
add
call
push
mov
call
cmp
je
push
mov
push
push
push
call
mov
lea
add
call
cmp
je
push
push
lea
lea
call
lea
call
lea
call
cmp
je
push
mov
call
mov
lea
push
call
lea
lea
push
mov
call
lea
lea
push
call
push
and
call
pop
jmp
lea
lea
push
lea
call
cmp
je
lea
mov
call
cmp
je
cmp
je
cmp
je
mov
push
mov
lea
push
call
push
mov
call
cmp
je
push
mov
call
mov
lea
mov
mov
push
call
mov
call
and
push
mov
call
cmp
je
push
mov
call
mov
mov
mov
jmp
cmp
je
mov
mov
lea
mov
call
or
lea
call
jmp
lea
call
test
je
mov
lea
push
mov
call
lea
mov
call
push
mov
call
cmp
je
mov
push
mov
call
cmp
sete
test
mov
je
mov
test
je
cmp
je
test
jne
cmp
jne
and
push
mov
call
mov
test
mov
je
push
mov
call
mov
lea
mov
push
call
cmp
jle
mov
cmp
jne
push
push
lea
mov
call
mov
lea
mov
mov
mov
test
mov
je
cmp
je
lea
push
push
mov
call
test
je
cmp
je
mov
push
mov
lea
push
call
test
je
push
mov
call
mov
lea
push
call
mov
call
jmp
mov
cmp
jne
or
or
cmp
lea
mov
jge
mov
mov
mov
mov
call
test
jne
call
push
mov
xor
call
cmp
jle
push
mov
call
mov
lea
push
call
mov
mov
call
cmp
jge
call
mov
mov
cmp
jne
cmp
push
pop
jne
push
pop
lea
lea
call
test
jne
call
cmp
jbe
call
mov
push
pop
shl
mov
jmp
cmp
jne
cmp
jne
cmp
push
pop
jne
push
pop
cmp
lea
je
lea
call
test
jne
call
mov
or
push
call
pop
inc
push
mov
call
cmp
jl
jmp
cmp
jne
cmp
jne
cmp
je
lea
push
push
lea
call
push
lea
mov
call
push
call
pop
jmp
cmp
je
call
mov
call
mov
pop
pop
pop
mov
leave
ret
sub
je
dec
je
xor
ret
push
pop
ret
push
pop
ret
mov
call
sub
push
push
push
mov
lea
call
mov
xor
mov
call
lea
mov
push
mov
mov
call
lea
mov
push
lea
push
push
pop
mov
call
cmp
jl
mov
mov
push
call
push
call
pop
mov
pop
pop
mov
pop
mov
leave
ret
push
mov
push
mov
and
push
push
sub
mov
mov
je
dec
jne
mov
call
mov
jmp
mov
push
mov
push
push
call
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
mov
push
mov
mov
cmp
pop
jne
cmp
jne
push
lea
call
push
mov
and
lea
push
call
or
push
call
pop
cmp
jge
mov
mov
cmp
je
mov
cmp
jne
lea
push
push
call
push
mov
mov
mov
push
mov
push
call
or
push
call
pop
jmp
push
mov
mov
push
call
inc
jmp
mov
push
mov
lea
push
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
jne
mov
push
mov
lea
push
call
push
lea
mov
call
test
jne
mov
push
mov
lea
push
call
cmp
jle
push
mov
mov
push
mov
call
inc
cmp
jl
mov
lea
mov
call
or
lea
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
and
push
mov
mov
mov
cmp
jle
push
push
mov
mov
xor
mov
cmp
jge
call
mov
mov
call
cmp
jne
mov
push
pop
lea
push
mov
call
mov
mov
mov
cmp
je
test
je
inc
inc
jmp
sub
sar
mov
jmp
or
push
call
pop
mov
call
test
mov
jl
push
pop
mov
mov
lea
cmp
jge
call
lea
mov
push
lea
push
call
mov
and
lea
cmp
jne
push
mov
lea
push
call
jmp
mov
mov
jmp
cmp
jne
push
mov
mov
push
push
call
jmp
cmp
jne
push
mov
lea
push
call
jmp
call
push
or
call
inc
pop
mov
cmp
jl
pop
pop
mov
pop
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
push
push
mov
call
mov
cmp
jge
call
lea
push
push
mov
call
inc
lea
push
push
mov
mov
call
push
push
lea
mov
call
mov
cmp
jge
call
lea
push
push
lea
call
inc
lea
push
push
lea
mov
call
mov
xor
mov
call
mov
mov
mov
lea
lea
mov
call
push
push
push
call
cmp
mov
je
xor
jmp
call
push
cmp
setne
call
cmp
pop
je
mov
call
push
push
push
push
push
call
mov
cmp
mov
jne
mov
call
cmp
mov
je
mov
call
shr
push
lea
mov
mov
mov
mov
call
push
mov
pop
cmp
jae
mov
cmp
jne
push
mov
lea
push
call
mov
mov
mov
jmp
push
lea
call
inc
jmp
cmp
je
mov
call
push
call
pop
mov
push
call
cmp
je
push
call
mov
lea
lea
mov
call
push
push
push
call
cmp
mov
je
xor
jmp
call
mov
push
call
cmp
pop
jne
lea
call
lea
call
push
call
push
call
push
call
push
call
mov
add
mov
pop
pop
pop
leave
ret
push
call
xor
push
push
call
push
mov
mov
test
je
push
call
test
je
and
pop
ret
push
push
mov
xor
cmp
jle
mov
mov
lea
call
inc
cmp
jl
pop
pop
ret
mov
call
sub
push
push
mov
mov
push
mov
lea
call
lea
mov
call
xor
cmp
jle
mov
mov
mov
lea
call
inc
cmp
jl
mov
test
jle
and
mov
mov
mov
mov
mov
cmp
mov
jge
mov
mov
mov
mov
mov
call
test
jne
lea
lea
push
call
add
lea
push
call
mov
lea
push
push
call
jmp
inc
mov
cmp
jl
add
inc
mov
mov
dec
cmp
jl
xor
cmp
jle
mov
mov
lea
mov
lea
push
call
and
push
mov
lea
call
mov
mov
mov
call
push
call
push
or
call
inc
pop
cmp
pop
jl
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
mov
cmp
je
mov
call
test
jne
lea
call
and
push
mov
lea
call
push
lea
mov
call
and
mov
push
call
cmp
pop
je
lea
mov
push
call
push
call
pop
mov
pop
pop
mov
leave
ret
push
push
push
mov
xor
mov
cmp
jle
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
call
inc
cmp
jl
pop
pop
pop
ret
mov
call
sub
push
push
sub
push
mov
je
dec
push
dec
pop
je
mov
jmp
mov
jmp
push
mov
pop
mov
lea
rep
lea
mov
call
lea
call
and
push
pop
lea
lea
lea
rep
push
lea
call
mov
push
mov
call
cmp
je
lea
mov
push
push
call
mov
mov
add
call
push
mov
call
cmp
je
push
mov
call
mov
mov
cmp
jne
lea
call
jmp
push
lea
call
push
mov
call
mov
test
mov
je
push
mov
call
mov
lea
push
call
push
mov
call
cmp
je
push
mov
call
mov
xor
add
cmp
jle
add
mov
lea
mov
call
test
jne
mov
call
push
mov
push
call
inc
cmp
jl
lea
mov
call
push
call
pop
pop
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
push
mov
and
and
and
call
and
lea
call
mov
mov
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
mov
mov
cmp
mov
jle
push
mov
mov
mov
mov
mov
call
test
jne
cmp
je
and
mov
lea
push
push
call
jmp
mov
push
pop
lea
rep
xor
push
lea
mov
mov
mov
call
lea
lea
push
mov
mov
call
test
jne
call
cmp
jne
mov
cmp
je
mov
push
pop
lea
mov
lea
rep
jmp
mov
mov
call
cmp
je
call
lea
call
lea
push
push
lea
mov
call
cmp
mov
jne
call
lea
lea
push
call
lea
lea
push
lea
pop
push
mov
rep
lea
call
push
call
pop
lea
call
push
call
pop
push
or
call
mov
mov
pop
inc
mov
cmp
jl
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
xor
push
mov
cmp
jle
mov
mov
call
mov
mov
mov
cmp
je
test
je
inc
inc
mov
jmp
sub
sar
mov
jmp
or
cmp
jl
inc
cmp
jge
mov
mov
call
mov
mov
mov
cmp
je
test
je
inc
inc
mov
jmp
sub
sar
mov
jmp
or
mov
test
jl
mov
mov
shl
call
mov
mov
mov
cmp
je
inc
cmp
jl
mov
and
mov
and
mov
mov
pop
pop
pop
mov
leave
ret
lea
push
push
mov
call
mov
and
push
call
push
call
pop
jmp
xor
jmp
push
mov
push
sub
je
dec
je
dec
je
dec
je
lea
push
push
mov
call
push
pop
leave
ret
push
jmp
push
jmp
xor
leave
ret
mov
call
sub
push
push
push
push
mov
lea
call
mov
and
call
mov
lea
mov
call
mov
mov
sub
mov
sar
je
mov
lea
cmp
jg
cmp
je
mov
movzx
sub
je
sub
je
sub
je
dec
dec
jne
mov
jmp
mov
jmp
mov
push
xor
pop
sub
push
pop
call
cmp
jb
ja
cmp
jae
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
jmp
xor
push
call
pop
pop
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
mov
call
cmp
je
mov
push
xor
call
cmp
jle
push
push
lea
call
mov
and
push
call
mov
mov
mov
mov
mov
cmp
je
test
je
inc
inc
jmp
sub
sar
mov
jmp
or
test
jge
push
lea
call
jmp
lea
push
push
mov
call
push
lea
mov
call
and
push
call
pop
inc
lea
push
push
mov
call
push
lea
mov
call
and
push
call
pop
mov
lea
push
call
or
push
call
push
call
pop
inc
pop
mov
push
call
cmp
jl
pop
pop
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
mov
push
call
cmp
jne
mov
jmp
push
mov
call
mov
add
mov
push
lea
call
mov
and
call
xor
mov
mov
mov
call
test
je
add
inc
cmp
jb
cmp
jne
call
or
push
call
pop
mov
mov
pop
pop
mov
leave
ret
mov
jmp
push
mov
push
push
mov
lea
call
mov
cmp
jne
test
ja
cmp
jbe
xor
jmp
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
push
mov
call
lea
lea
push
mov
call
push
add
lea
pop
rep
pop
pop
jmp
xor
mov
or
push
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
call
pop
ret
mov
call
push
push
push
mov
mov
push
mov
call
and
lea
push
lea
call
lea
lea
push
mov
call
lea
lea
push
mov
call
lea
lea
push
mov
call
mov
lea
mov
lea
push
mov
call
add
lea
push
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
mov
lea
mov
cmp
je
test
je
inc
inc
jmp
sub
sar
jmp
or
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
push
mov
mov
push
push
mov
push
mov
mov
mov
mov
push
mov
mov
lea
mov
mov
mov
mov
mov
and
mov
mov
call
mov
lea
test
je
mov
push
call
and
mov
push
push
push
mov
call
mov
lea
push
push
call
mov
lea
mov
and
call
push
mov
call
mov
push
mov
add
mov
call
mov
call
pop
pop
pop
pop
ret
mov
call
push
mov
mov
and
mov
cmp
push
push
push
mov
mov
mov
jne
mov
test
je
mov
push
push
push
call
jmp
mov
ret
mov
jmp
xor
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
and
push
push
mov
push
mov
mov
test
jne
xor
jmp
cmp
mov
je
test
je
push
push
push
push
push
push
call
mov
mov
mov
add
mov
lea
adc
mov
mov
mov
push
push
call
jmp
mov
push
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
lea
lea
call
lea
lea
call
mov
or
jne
and
mov
push
push
push
push
call
push
push
push
push
call
pop
ret
push
push
push
mov
mov
mov
mov
mov
test
ja
cmp
jbe
push
pop
call
mov
mov
mov
mov
push
pop
call
mov
mov
mov
mov
test
ja
jae
pop
pop
pop
ret
mov
call
push
mov
push
push
push
mov
mov
push
and
mov
push
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
add
push
push
mov
call
mov
xor
cmp
jle
test
jle
push
mov
call
mov
mov
push
call
mov
call
inc
cmp
jl
pop
pop
pop
ret
mov
call
sub
push
push
mov
xor
mov
mov
mov
mov
lea
push
mov
push
mov
push
mov
push
call
cmp
je
mov
jmp
cmp
jne
mov
mov
mov
mov
cmp
mov
jne
cmp
jne
xor
jmp
push
pop
mov
jmp
cmp
je
mov
or
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
xor
push
mov
mov
mov
mov
lea
push
push
mov
push
mov
mov
push
call
cmp
je
mov
jmp
cmp
setne
cmp
mov
je
lea
call
mov
mov
or
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
mov
lea
cmp
mov
je
mov
push
call
mov
mov
lea
mov
mov
cmp
je
mov
push
call
mov
mov
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
mov
push
mov
call
cmp
je
mov
jmp
mov
lea
push
mov
call
cmp
jne
lea
lea
push
call
mov
mov
mov
lea
push
push
push
mov
push
call
cmp
mov
je
lea
mov
call
mov
jmp
cmp
je
cmp
je
lea
mov
call
jmp
mov
mov
mov
mov
mov
lea
mov
call
mov
lea
push
push
mov
call
cmp
jne
mov
call
cmp
jne
mov
cmp
je
cmp
sete
push
lea
push
call
cmp
je
cmp
jne
cmp
jne
cmp
je
push
call
cmp
pop
je
mov
mov
mov
jmp
xor
cmp
je
mov
push
call
mov
mov
jmp
mov
mov
mov
lea
push
push
push
mov
push
call
mov
cmp
je
lea
mov
call
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
lea
mov
call
mov
lea
push
lea
push
push
push
mov
call
cmp
jne
lea
mov
push
lea
push
push
push
call
cmp
jne
lea
mov
push
lea
push
push
push
call
cmp
jne
mov
mov
lea
mov
mov
push
push
mov
call
cmp
jne
lea
call
mov
mov
lea
lea
mov
call
mov
cmp
jne
mov
mov
jmp
mov
mov
dec
je
dec
jne
dec
mov
jmp
mov
cmp
mov
jg
mov
mov
jmp
xor
cmp
jge
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
jmp
inc
jmp
mov
push
lea
push
call
lea
call
lea
lea
call
cmp
mov
jne
cmp
jne
cmp
je
lea
call
cmp
je
push
lea
mov
mov
mov
call
lea
mov
push
lea
push
mov
call
cmp
je
cmp
je
cmp
je
lea
jmp
mov
cmp
je
add
jmp
xor
cmp
je
cmp
je
lea
jmp
xor
cmp
je
cmp
je
lea
jmp
xor
push
push
mov
call
push
mov
call
pop
lea
lea
push
lea
call
cmp
mov
je
add
lea
push
mov
call
cmp
je
mov
call
push
call
push
call
pop
mov
pop
mov
jmp
cmp
jne
lea
call
push
lea
mov
call
cmp
je
mov
sub
je
dec
dec
jne
push
call
push
call
push
call
add
mov
lea
mov
call
lea
mov
call
jmp
lea
lea
push
mov
neg
sbb
mov
and
lea
push
mov
neg
sbb
mov
and
push
lea
push
push
lea
push
push
push
call
mov
cmp
je
push
call
push
call
push
call
add
mov
lea
mov
call
lea
mov
call
mov
jmp
mov
sub
je
dec
je
dec
je
dec
je
dec
je
push
dec
je
call
push
call
push
call
add
mov
mov
lea
call
lea
mov
call
mov
jmp
call
push
call
push
call
add
mov
lea
mov
call
lea
mov
call
mov
jmp
mov
jmp
push
mov
call
push
call
push
call
add
mov
mov
jmp
push
call
push
call
push
call
add
mov
mov
lea
call
lea
mov
call
jmp
mov
mov
mov
cmp
jne
lea
call
cmp
jne
push
lea
call
lea
mov
push
lea
mov
call
push
mov
call
mov
pop
push
mov
push
call
push
mov
cmp
je
call
push
call
push
call
push
call
add
mov
mov
jmp
call
push
call
push
call
push
call
add
mov
mov
jmp
cmp
jne
lea
lea
push
call
lea
mov
call
cmp
jne
mov
lea
push
lea
call
mov
push
mov
mov
push
call
push
mov
cmp
je
call
push
call
push
call
push
call
push
call
add
mov
mov
jmp
call
push
call
push
call
push
call
push
call
add
mov
mov
jmp
mov
mov
call
cmp
jne
push
lea
call
lea
mov
push
lea
mov
call
push
mov
call
mov
pop
push
mov
push
call
push
mov
cmp
je
call
push
call
push
call
push
call
push
call
add
mov
mov
lea
call
lea
mov
call
jmp
call
push
call
push
call
push
call
push
call
add
mov
mov
lea
call
lea
mov
call
mov
push
call
pop
mov
jmp
push
call
pop
push
mov
call
pop
cmp
jne
push
call
cmp
pop
je
mov
or
mov
mov
jmp
mov
call
cmp
jne
push
lea
call
lea
mov
push
lea
mov
call
push
mov
call
mov
pop
push
mov
push
call
push
mov
cmp
je
call
push
call
push
call
push
call
add
mov
mov
lea
call
lea
mov
call
mov
jmp
call
push
call
push
call
push
call
add
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
mov
neg
mov
mov
sbb
and
mov
inc
mov
inc
push
push
lea
call
cmp
jne
lea
mov
push
lea
call
mov
push
mov
mov
push
call
push
mov
cmp
je
call
cmp
pop
mov
je
mov
push
call
push
call
push
call
pop
mov
pop
mov
jmp
call
cmp
pop
mov
je
mov
push
call
push
call
push
call
pop
mov
pop
mov
jmp
cmp
je
mov
push
push
push
mov
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
push
call
push
call
pop
mov
pop
lea
mov
call
lea
mov
call
mov
push
call
pop
mov
jmp
push
lea
call
mov
mov
mov
mov
lea
lea
push
call
push
call
push
call
pop
mov
pop
lea
mov
call
lea
mov
call
jmp
lea
mov
call
mov
push
call
pop
mov
jmp
mov
mov
cmp
je
push
call
cmp
pop
je
mov
mov
mov
jmp
xor
push
lea
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
mov
mov
push
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
mov
or
mov
mov
mov
push
call
pop
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
mov
mov
call
xor
jmp
mov
pop
ret
mov
dec
mov
jne
test
je
mov
push
call
xor
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
add
jmp
test
push
mov
mov
je
push
call
pop
mov
pop
ret
mov
call
push
mov
push
push
xor
cmp
push
mov
mov
mov
jne
cmp
je
mov
jmp
mov
mov
mov
mov
lea
neg
mov
mov
sbb
and
push
push
push
push
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
push
xor
push
cmp
mov
mov
jl
cmp
jg
mov
cmp
je
mov
mov
not
add
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
cmp
je
cmp
je
cmp
je
lea
mov
jmp
mov
cmp
je
add
jmp
mov
cmp
je
cmp
je
lea
jmp
xor
cmp
je
cmp
je
lea
jmp
xor
push
mov
lea
push
push
lea
call
mov
mov
mov
mov
mov
mov
call
cmp
jne
mov
cmp
je
mov
push
call
mov
cmp
lea
jne
mov
call
cmp
je
mov
mov
add
lea
adc
cmp
lea
jne
lea
add
adc
cmp
je
cmp
je
mov
mov
call
mov
mov
push
push
mov
push
call
jmp
mov
lea
mov
cmp
je
mov
push
call
mov
mov
mov
pop
pop
mov
pop
leave
ret
mov
ret
mov
jmp
mov
call
push
mov
and
push
push
cmp
lea
push
mov
jne
mov
push
push
push
mov
call
test
jne
mov
push
mov
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
push
mov
and
push
push
mov
push
test
mov
je
push
mov
push
push
call
jmp
mov
test
jne
xor
jmp
push
mov
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
and
push
push
mov
push
test
mov
je
push
mov
push
push
call
jmp
mov
test
jne
xor
jmp
push
mov
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jne
push
jmp
mov
sub
je
dec
dec
je
dec
je
dec
dec
je
dec
je
dec
je
dec
jne
add
push
lea
call
jmp
add
jmp
add
jmp
push
lea
call
jmp
push
lea
push
call
jmp
mov
lea
shr
and
push
call
jmp
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
push
mov
xor
cmp
jle
mov
mov
mov
mov
mov
call
test
je
inc
cmp
jl
or
pop
pop
ret
mov
jmp
mov
call
sub
push
push
push
mov
xor
mov
cmp
mov
je
push
pop
jmp
mov
cmp
je
mov
call
cmp
jne
mov
push
lea
lea
mov
call
push
lea
mov
mov
call
test
jne
push
pop
jmp
mov
shr
test
jne
push
call
pop
mov
mov
cmp
mov
je
call
mov
test
mov
mov
je
mov
push
call
push
mov
mov
call
test
jne
call
test
mov
mov
je
mov
push
call
mov
jmp
mov
push
and
lea
mov
call
lea
lea
push
mov
call
push
lea
call
lea
lea
push
mov
call
push
call
mov
pop
mov
lea
add
adc
xor
push
call
pop
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
push
mov
call
lea
xor
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
mov
mov
mov
test
je
mov
lea
push
call
test
jl
mov
push
add
push
mov
call
mov
mov
test
je
mov
push
call
push
call
or
pop
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
xor
push
mov
cmp
mov
je
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
push
mov
push
call
mov
mov
cmp
mov
je
mov
push
call
mov
jmp
mov
mov
cmp
jne
mov
jmp
mov
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
push
mov
mov
mov
sub
cmp
jbe
mov
cmp
jbe
mov
xor
test
jbe
push
mov
mov
add
mov
mov
inc
cmp
jb
pop
add
mov
test
je
mov
xor
pop
ret
push
mov
push
push
mov
mov
mov
sub
cmp
jbe
mov
mov
push
push
add
push
call
mov
add
add
test
je
mov
mov
pop
sub
pop
neg
sbb
and
pop
ret
mov
push
mov
push
mov
mov
push
call
mov
mov
test
je
mov
pop
xor
pop
ret
push
mov
sub
push
mov
mov
call
test
jne
cmp
je
push
push
lea
push
pop
mov
lea
lea
rep
mov
call
mov
cmp
je
mov
lea
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
jmp
mov
mov
mov
push
add
adc
mov
mov
mov
add
mov
mov
adc
mov
mov
mov
lea
mov
push
call
mov
test
je
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
push
call
mov
push
mov
call
pop
ret
push
mov
push
push
call
mov
push
call
mov
pop
pop
ret
push
push
mov
mov
call
mov
mov
call
mov
mov
call
sub
sbb
mov
mov
call
sub
sbb
mov
pop
mov
pop
ret
call
xor
ret
mov
xor
ret
push
mov
sub
lea
push
lea
push
lea
push
lea
push
call
push
call
test
je
mov
mov
push
push
xor
xor
push
mov
or
or
mov
xor
xor
or
or
add
adc
pop
pop
pop
leave
ret
call
push
push
push
push
call
leave
ret
mov
xor
ret
push
mov
sub
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
lea
call
mov
or
push
pop
jne
and
mov
mov
or
jne
and
mov
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
leave
ret
push
push
push
mov
mov
mov
mov
mov
test
ja
cmp
jbe
push
pop
call
mov
mov
mov
mov
push
pop
call
mov
mov
mov
mov
test
ja
jae
pop
pop
pop
ret
push
mov
sub
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
lea
call
mov
or
push
pop
jne
and
mov
mov
or
jne
and
mov
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
leave
ret
push
mov
call
xor
sub
push
push
push
push
push
push
push
push
call
push
push
push
push
call
push
pop
call
add
push
adc
push
push
push
call
push
push
call
pop
ret
push
push
push
push
push
mov
pop
push
mov
pop
xor
lea
shl
mov
mov
shl
add
cmp
jbe
inc
cmp
jb
inc
cmp
jl
mov
pop
pop
pop
pop
ret
shl
add
jmp
push
mov
push
push
mov
lea
mov
mov
lea
mov
call
mov
or
jne
and
mov
push
push
push
push
call
push
push
push
push
call
leave
ret
push
mov
push
mov
push
push
push
push
push
push
push
push
call
add
push
push
adc
push
push
call
push
push
push
push
call
push
push
call
pop
pop
ret
mov
call
sub
mov
push
push
mov
push
mov
mov
add
lea
mov
push
shr
add
mov
mov
mov
call
test
je
mov
call
mov
mov
call
push
mov
call
xor
pop
cmp
mov
je
mov
mov
mov
mov
mov
jmp
xor
push
lea
mov
call
test
je
push
lea
call
cmp
lea
mov
mov
jne
push
call
cmp
pop
je
mov
mov
mov
mov
mov
jmp
xor
mov
push
mov
call
mov
push
add
call
test
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
lea
push
push
lea
push
push
call
mov
cmp
je
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
mov
mov
mov
push
push
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
xor
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
mov
test
je
cmp
jne
mov
jmp
call
and
mov
call
xor
mov
test
setne
mov
mov
pop
pop
ret
push
mov
mov
mov
call
and
test
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
mov
xor
mov
cmp
jbe
push
mov
call
shr
mov
and
shr
test
mov
je
cmp
jb
lea
mov
push
call
mov
mov
shr
and
inc
test
je
lea
mov
push
call
add
mov
mov
shr
and
add
mov
call
mov
mov
cmp
ja
push
pop
shl
dec
and
shr
mov
mov
call
mov
cmp
jae
inc
and
test
jbe
cmp
jae
mov
mov
sub
inc
mov
mov
inc
cmp
jb
jmp
mov
mov
inc
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
mov
and
push
imul
shr
add
mov
mov
mov
and
imul
shr
add
pop
shl
mov
add
pop
ret
push
mov
push
mov
mov
and
shr
lea
pop
shl
dec
and
shr
mov
pop
ret
mov
inc
mov
ret
mov
dec
mov
jne
test
je
mov
add
push
call
xor
ret
push
mov
call
test
je
lea
push
call
pop
lea
pop
ret
push
lea
neg
sbb
and
mov
mov
call
and
pop
ret
mov
call
push
push
push
push
push
mov
push
call
xor
pop
cmp
je
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
push
push
push
call
cmp
mov
je
or
cmp
je
mov
push
call
mov
jmp
mov
mov
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
call
xor
pop
cmp
je
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
mov
mov
mov
lea
mov
mov
lea
push
push
mov
push
mov
call
cmp
jne
mov
or
cmp
je
mov
push
call
mov
jmp
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
push
mov
push
push
call
cmp
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
mov
push
push
push
mov
push
push
call
cmp
mov
jne
mov
mov
not
cmp
jne
mov
add
adc
mov
add
adc
inc
mov
cmp
jb
mov
mov
cmp
je
mov
push
call
mov
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
push
pop
jmp
push
mov
push
mov
test
je
push
lea
push
push
push
push
call
test
je
push
call
pop
mov
pop
jmp
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
call
and
mov
test
mov
je
mov
push
call
push
push
lea
push
push
mov
call
push
push
lea
push
push
mov
call
mov
and
test
je
mov
push
call
or
push
push
push
push
call
mov
pop
mov
leave
ret
push
mov
mov
mov
call
and
pop
ret
mov
call
sub
push
push
push
push
pop
mov
cmp
mov
jbe
mov
shr
jmp
mov
xor
cmp
seta
inc
cmp
mov
mov
jb
cmp
jb
cmp
ja
push
lea
call
mov
and
and
mov
test
mov
jbe
add
mov
mov
push
neg
sbb
mov
not
and
mov
push
mov
call
test
mov
jne
cmp
je
cmp
mov
jbe
lea
mov
mov
push
xor
push
call
test
mov
jne
mov
cmp
je
inc
add
mov
cmp
jb
inc
add
mov
cmp
jb
mov
and
mov
test
mov
jbe
mov
lea
mov
push
push
push
call
test
mov
jne
inc
add
cmp
jb
jmp
mov
or
test
je
push
call
mov
jmp
mov
or
cmp
jmp
mov
or
test
je
push
call
mov
jmp
mov
or
test
je
push
call
mov
jmp
mov
or
test
je
push
call
mov
jmp
lea
call
and
and
test
mov
mov
jbe
mov
mov
imul
add
lea
mov
push
call
test
pop
je
xor
mov
mov
mov
mov
jmp
xor
push
lea
mov
call
mov
lea
add
dec
mov
jne
cmp
jne
mov
mov
mov
mov
mov
mov
mov
add
call
mov
cmp
jbe
mov
push
imul
and
mov
mov
mov
call
jmp
mov
call
mov
test
jne
inc
cmp
jb
mov
mov
cmp
jbe
test
jbe
mov
mov
mov
call
add
dec
jne
xor
cmp
je
mov
lea
push
jmp
mov
mov
lea
add
call
cmp
mov
mov
mov
mov
mov
jbe
lea
mov
mov
add
adc
mov
add
adc
add
dec
jne
mov
lea
push
push
mov
call
cmp
mov
je
lea
push
call
mov
or
cmp
je
push
call
mov
jmp
mov
and
imul
cmp
mov
mov
mov
jbe
mov
mov
imul
add
xor
xor
div
inc
inc
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
add
call
cmp
jbe
cmp
jbe
mov
imul
xor
cmp
jne
cmp
jne
push
pop
lea
mov
imul
shl
and
lea
push
mov
mov
mov
lea
mov
mov
call
test
mov
jne
inc
cmp
jb
jmp
push
mov
call
mov
cmp
jne
inc
mov
cmp
jb
mov
mov
mov
xor
cmp
mov
jbe
test
jbe
mov
mov
cmp
jbe
mov
push
pop
mov
mov
mov
call
mov
mov
test
je
mov
add
dec
jne
add
dec
jne
cmp
je
lea
push
call
mov
or
test
je
push
call
mov
jmp
lea
push
call
mov
or
test
je
push
call
mov
jmp
mov
test
je
lea
push
call
mov
or
test
je
push
call
mov
jmp
mov
lea
add
call
xor
mov
mov
mov
mov
mov
imul
cmp
mov
jbe
lea
mov
add
adc
mov
add
adc
add
dec
jne
mov
lea
push
push
mov
mov
call
mov
cmp
je
lea
push
call
mov
or
cmp
je
push
call
mov
jmp
mov
lea
push
push
mov
call
mov
lea
cmp
push
je
call
mov
or
cmp
je
push
call
mov
jmp
call
mov
or
cmp
je
push
call
xor
jmp
mov
mov
pop
pop
pop
mov
leave
ret
mov
dec
mov
jne
push
call
pop
xor
ret
push
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
pop
ret
push
mov
push
mov
mov
add
and
call
mov
call
test
mov
je
push
mov
mov
call
lea
xor
pop
pop
ret
push
mov
push
mov
push
mov
add
and
call
mov
push
mov
call
mov
lea
mov
pop
xor
pop
pop
ret
mov
call
push
push
push
mov
mov
mov
imul
add
xor
push
mov
call
pop
mov
cmp
mov
je
push
push
lea
push
push
push
mov
call
mov
mov
pop
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
push
push
mov
push
push
push
mov
call
xor
mov
mov
push
push
push
lea
push
push
mov
call
push
push
push
lea
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
test
je
push
call
ret
push
push
push
push
mov
mov
cmp
seta
call
mov
mov
shr
mov
add
xor
add
adc
add
adc
xor
cmp
mov
seta
inc
push
div
push
push
push
call
pop
pop
pop
pop
ret
push
push
push
push
push
mov
mov
lea
mov
shr
or
mov
shr
or
mov
shr
or
mov
or
shr
or
shr
cmp
jbe
shr
xor
mov
add
mov
adc
push
push
push
push
call
add
xor
add
push
adc
push
push
push
call
neg
sbb
mov
and
mov
mov
mov
push
cdq
push
add
push
push
adc
call
push
pop
call
add
adc
pop
mov
pop
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
push
lea
push
push
push
push
call
test
je
push
call
pop
mov
pop
jmp
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
call
sub
push
xor
push
push
mov
mov
push
lea
mov
call
test
je
mov
xor
mov
mov
inc
cmp
jb
mov
call
cmp
jne
lea
mov
push
lea
mov
mov
call
mov
mov
and
lea
mov
mov
call
mov
mov
mov
call
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
xor
jmp
push
or
xor
test
jbe
push
push
movzx
mov
and
xor
shr
mov
xor
inc
cmp
jb
pop
pop
not
pop
ret
push
push
push
mov
xor
mov
test
jbe
mov
call
mov
inc
cmp
jb
pop
pop
pop
ret
mov
call
sub
push
push
push
mov
test
mov
jne
push
pop
and
mov
mov
mov
xor
imul
mov
and
div
mov
cmp
je
mov
xor
call
mov
jmp
push
lea
call
test
jne
mov
jmp
mov
mov
shr
inc
xor
div
mov
and
and
mov
mov
mov
mov
inc
mov
cmp
mov
jbe
lea
lea
push
call
pop
mov
test
mov
je
push
push
lea
push
push
push
mov
call
jmp
xor
test
mov
mov
jbe
mov
and
mov
mov
jmp
mov
mov
mov
lea
mov
mov
mov
lea
push
mov
mov
call
add
add
dec
mov
jne
call
xor
mov
test
mov
jbe
xor
mov
mov
lea
push
call
test
jne
inc
inc
add
cmp
jb
lea
call
xor
test
jbe
mov
add
cmp
je
inc
add
cmp
jb
jmp
mov
jmp
push
pop
jmp
lea
mov
push
call
mov
call
mov
mov
push
push
mov
mov
call
test
je
call
mov
mov
sub
sbb
mov
or
jne
push
xor
pop
mov
mul
mov
mov
call
push
push
push
push
push
push
call
mov
xor
mov
mov
and
lea
call
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
push
xor
push
cmp
mov
mov
jbe
mov
mov
call
cmp
jne
inc
cmp
jb
mov
pop
pop
pop
ret
xor
jmp
push
mov
push
mov
mov
push
call
mov
xor
pop
ret
push
push
push
mov
xor
xor
cmp
jbe
push
mov
add
mov
call
mov
call
inc
add
cmp
jb
pop
and
pop
pop
pop
ret
push
mov
call
mov
pop
test
je
push
call
ret
push
push
push
mov
mov
call
mov
mov
call
pop
pop
ret
mov
and
ret
mov
call
sub
and
push
push
mov
lea
push
call
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
push
mov
and
mov
mov
push
mov
push
lea
mov
cmp
jle
sub
dec
mov
mov
cmp
jne
lea
mov
push
lea
push
call
mov
mov
and
call
test
push
sete
or
call
test
pop
je
lea
push
push
mov
call
push
mov
mov
mov
call
push
jmp
mov
test
je
mov
push
pop
lea
cmp
je
cmp
je
sub
jmp
sub
sar
jmp
or
test
jle
push
lea
push
mov
call
push
mov
mov
mov
call
push
call
pop
jmp
mov
cmp
jne
mov
push
mov
call
jmp
mov
push
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
mov
lea
call
mov
and
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
call
mov
lea
push
call
push
call
pop
pop
mov
pop
mov
leave
ret
push
mov
xor
push
lea
mov
mov
mov
call
or
or
mov
pop
ret
mov
call
sub
push
push
mov
push
xor
push
lea
mov
mov
mov
mov
call
mov
mov
cmp
mov
mov
jl
mov
mov
mov
mov
shl
mov
mov
add
test
jge
cmp
mov
jl
push
lea
call
mov
lea
mov
and
mov
sub
add
push
push
lea
push
call
mov
add
test
jl
mov
shl
mov
mov
mov
sub
add
push
push
lea
push
call
mov
add
mov
mov
jmp
mov
mov
and
mov
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
mov
and
mov
lea
push
push
lea
push
push
call
mov
leave
ret
push
mov
push
mov
mov
and
mov
lea
push
push
lea
push
push
call
mov
leave
ret
push
mov
call
lea
call
lea
call
lea
call
pop
ret
push
mov
push
lea
call
push
lea
call
push
mov
call
pop
ret
push
mov
lea
call
lea
call
mov
call
pop
ret
mov
call
sub
push
xor
cmp
push
push
mov
mov
mov
jle
mov
jmp
mov
mov
mov
mov
cmp
jne
or
jmp
mov
push
push
push
call
mov
mov
mov
mov
mov
push
lea
mov
mov
push
push
push
push
push
push
push
lea
call
mov
mov
lea
mov
call
or
lea
call
cmp
jne
inc
mov
mov
cmp
jl
mov
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
jmp
mov
call
sub
cmp
push
mov
push
push
mov
mov
jne
call
test
je
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
cdq
push
push
push
mov
mov
cdq
push
push
mov
call
test
je
jmp
mov
mov
xor
cmp
jne
cmp
jne
cmp
jle
mov
mov
cmp
jne
cmp
jne
mov
mov
cmp
je
call
test
jne
inc
cmp
jl
cmp
jne
push
lea
call
mov
mov
and
and
mov
test
jle
mov
mov
mov
mov
lea
mov
mov
push
mov
call
lea
mov
call
push
lea
mov
call
test
jne
call
mov
push
call
mov
lea
push
call
push
call
push
and
call
pop
pop
jmp
mov
shr
and
je
cmp
je
lea
call
mov
lea
lea
push
mov
call
test
mov
sete
push
lea
push
push
call
test
mov
je
lea
mov
call
mov
lea
jmp
cmp
jne
mov
push
call
mov
lea
push
call
jmp
lea
mov
call
lea
mov
call
mov
mov
mov
add
push
lea
push
call
test
je
lea
call
mov
push
mov
mov
call
mov
test
jl
cmp
jg
mov
sub
inc
push
lea
call
dec
jne
mov
and
mov
mov
mov
jmp
push
mov
lea
call
push
lea
mov
mov
push
push
push
push
push
lea
push
push
push
call
mov
mov
test
jne
lea
mov
call
mov
lea
call
push
call
push
and
call
mov
pop
pop
inc
mov
cmp
jl
xor
cmp
mov
jle
cmp
jge
mov
cmp
je
mov
mov
mov
lea
lea
push
call
lea
mov
call
push
lea
mov
call
test
jne
mov
call
test
je
call
push
jmp
lea
mov
call
lea
mov
call
push
call
push
jmp
mov
shr
test
jne
push
mov
call
mov
lea
push
call
jmp
lea
call
mov
push
lea
mov
mov
push
mov
push
push
push
push
lea
push
push
push
call
mov
mov
lea
mov
call
lea
mov
call
test
jne
push
call
push
and
call
pop
pop
mov
inc
cmp
mov
jl
or
lea
call
jmp
push
call
push
call
or
pop
pop
lea
call
mov
jmp
mov
push
lea
call
or
mov
push
lea
mov
call
push
mov
call
and
pop
lea
call
lea
lea
push
lea
push
mov
call
test
je
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
mov
mov
mov
mov
push
cdq
push
push
mov
mov
cdq
push
push
mov
call
test
jne
mov
mov
push
lea
mov
call
lea
lea
push
mov
call
lea
lea
push
call
mov
mov
shr
not
and
mov
push
lea
push
push
call
test
mov
je
lea
mov
call
lea
mov
call
mov
mov
jmp
lea
mov
call
lea
mov
call
mov
mov
shr
not
and
push
lea
push
push
call
test
je
mov
mov
lea
push
lea
push
call
mov
shr
test
je
mov
mov
shr
test
jne
mov
mov
jmp
mov
and
cmp
jne
lea
mov
push
call
test
jl
mov
mov
mov
cmp
jne
cmp
jne
mov
mov
jmp
lea
call
lea
push
call
cmp
jne
lea
lea
push
mov
call
push
lea
mov
mov
push
push
push
push
push
push
lea
push
push
call
test
mov
mov
jne
mov
lea
call
lea
mov
call
mov
push
call
inc
pop
lea
call
lea
lea
push
lea
push
mov
call
test
jne
call
mov
push
call
mov
push
call
push
call
or
pop
push
call
pop
lea
call
xor
jmp
mov
jmp
lea
mov
call
lea
mov
call
mov
push
call
push
or
call
pop
pop
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
mov
mov
push
push
lea
call
lea
and
push
push
push
mov
mov
call
mov
mov
mov
lea
push
lea
call
push
mov
mov
mov
push
push
push
push
push
push
push
call
and
mov
push
call
cmp
pop
jne
mov
call
push
call
pop
pop
mov
mov
pop
pop
mov
leave
ret
push
mov
call
mov
mov
mov
mov
mov
lea
mov
pop
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
je
push
pop
jmp
mov
mov
xor
cmp
mov
jle
lea
call
mov
mov
mov
mov
cmp
jne
mov
lea
mov
mov
push
call
test
je
mov
shr
test
jne
push
lea
push
call
mov
mov
add
push
mov
adc
call
inc
pop
cmp
jl
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
lea
push
push
mov
call
lea
push
push
mov
call
xor
cmp
mov
mov
je
mov
push
call
cmp
mov
mov
mov
mov
setg
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
je
push
mov
push
mov
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
or
lea
call
mov
jmp
cmp
mov
jle
mov
mov
mov
mov
lea
mov
call
mov
mov
cmp
je
mov
mov
mov
jmp
mov
lea
push
call
test
je
mov
shr
test
jne
mov
mov
call
mov
mov
mov
mov
push
call
cmp
mov
jne
lea
call
push
lea
mov
call
lea
mov
mov
call
lea
push
call
mov
mov
cmp
jne
mov
mov
cmp
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
mov
jmp
or
cmp
jl
mov
mov
inc
push
lea
push
call
mov
lea
push
mov
call
cmp
mov
jl
mov
mov
call
cmp
jne
push
mov
lea
push
call
push
lea
mov
call
mov
push
call
mov
pop
cmp
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
cmp
jl
inc
lea
push
lea
push
call
mov
push
mov
call
mov
mov
push
call
cmp
pop
jl
mov
mov
call
cmp
je
push
lea
call
lea
push
call
push
mov
call
pop
push
mov
lea
push
mov
push
push
lea
push
push
call
cmp
mov
je
mov
mov
call
mov
mov
push
mov
mov
push
mov
push
call
cmp
mov
jne
cmp
jne
mov
cmp
jne
cmp
mov
jle
mov
mov
push
mov
call
cmp
mov
jl
mov
cmp
jle
mov
push
push
mov
call
mov
push
mov
push
call
mov
mov
push
mov
sub
mov
push
mov
lea
sbb
call
mov
mov
mov
inc
mov
cmp
jl
cmp
je
mov
mov
add
mov
adc
mov
push
push
push
call
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
mov
mov
call
cmp
mov
jne
cmp
je
mov
lea
push
mov
call
cmp
mov
jne
mov
mov
cmp
jle
mov
mov
mov
cmp
je
mov
mov
push
push
mov
call
cmp
mov
jne
mov
inc
cmp
jl
mov
mov
mov
mov
cmp
jne
cmp
jne
push
pop
jmp
xor
mov
mov
mov
mov
mov
lea
push
mov
push
add
mov
mov
adc
push
push
push
push
mov
push
call
cmp
mov
jne
mov
cmp
jne
mov
mov
add
adc
mov
mov
jmp
mov
mov
mov
add
adc
mov
mov
mov
mov
mov
mov
push
cmp
jne
call
pop
lea
mov
call
lea
mov
call
mov
push
call
inc
pop
mov
cmp
jl
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cdq
mov
mov
mov
mov
mov
mov
mov
je
mov
push
call
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
push
call
cmp
pop
mov
je
mov
push
call
mov
jmp
lea
mov
call
lea
mov
call
push
call
cmp
pop
mov
je
mov
push
call
mov
jmp
lea
mov
call
lea
mov
call
push
call
cmp
pop
mov
je
mov
push
call
mov
jmp
lea
mov
call
lea
mov
call
push
call
cmp
pop
mov
je
mov
push
call
mov
jmp
push
call
pop
mov
lea
call
lea
mov
call
push
call
cmp
pop
mov
je
mov
push
call
mov
jmp
push
call
pop
mov
lea
call
lea
mov
call
push
call
cmp
pop
mov
je
mov
push
call
mov
jmp
push
call
pop
mov
lea
call
lea
mov
call
push
call
cmp
pop
mov
je
mov
push
call
mov
jmp
push
call
pop
mov
lea
call
lea
mov
call
push
call
cmp
pop
mov
je
mov
push
call
mov
jmp
call
pop
mov
lea
call
lea
mov
call
push
call
cmp
pop
mov
je
mov
push
call
mov
or
lea
call
mov
jmp
lea
push
push
mov
call
mov
call
push
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
mov
mov
mov
call
pop
mov
cmp
mov
je
mov
call
jmp
xor
push
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
push
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
mov
mov
mov
test
je
mov
push
call
push
lea
mov
mov
mov
mov
call
mov
mov
call
mov
mov
test
pop
je
mov
push
call
mov
mov
test
je
mov
push
call
push
call
push
call
push
call
mov
add
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
sub
mov
push
xor
push
mov
push
mov
mov
mov
mov
push
lea
call
mov
mov
mov
cmp
jne
mov
lea
push
push
call
cmp
je
mov
jmp
cmp
mov
jbe
push
lea
mov
mov
mov
call
mov
lea
push
mov
push
call
cmp
jne
mov
lea
push
mov
call
cmp
jne
cmp
mov
sete
push
lea
push
call
test
je
push
lea
call
push
mov
call
inc
pop
mov
cmp
jb
cmp
jne
mov
mov
call
or
lea
call
mov
jmp
push
mov
call
pop
jmp
push
lea
call
mov
lea
lea
push
mov
call
push
lea
mov
call
mov
lea
mov
lea
call
push
lea
push
lea
mov
call
push
call
push
mov
call
cmp
pop
pop
je
mov
call
test
jne
call
mov
cmp
jne
mov
push
lea
call
lea
mov
push
lea
mov
call
mov
push
mov
call
push
call
push
call
push
call
add
mov
mov
jmp
push
lea
mov
push
push
lea
push
mov
push
mov
push
mov
push
mov
push
neg
push
sbb
and
push
call
lea
mov
call
cmp
mov
je
push
call
pop
mov
mov
mov
jmp
cmp
je
cmp
jne
push
pop
jmp
xor
push
cmp
mov
push
je
push
push
push
call
mov
mov
mov
mov
lea
push
push
push
mov
call
test
jne
cmp
je
cmp
jne
lea
call
mov
mov
mov
lea
mov
call
jmp
push
push
push
call
mov
mov
push
mov
call
mov
push
call
pop
mov
mov
lea
call
lea
mov
call
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
push
mov
push
push
cmp
mov
je
mov
mov
mov
call
test
jne
xor
jmp
mov
mov
mov
xor
mov
cmp
mov
jle
push
push
mov
call
mov
test
jl
push
mov
push
call
push
mov
push
call
add
inc
cmp
jl
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
cmp
jle
mov
mov
mov
test
je
lea
push
push
mov
call
xor
test
jle
push
mov
mov
mov
add
mov
mov
inc
cmp
mov
jl
pop
add
mov
pop
pop
pop
ret
push
push
mov
push
mov
mov
cmp
jle
mov
mov
mov
push
call
mov
mov
mov
imul
add
lea
push
lea
add
push
lea
push
call
add
pop
pop
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
mov
call
sub
push
push
mov
xor
cmp
jle
push
mov
lea
mov
mov
call
and
push
mov
call
or
push
call
cmp
pop
jne
mov
push
push
mov
call
jmp
mov
call
test
jne
push
lea
call
push
mov
lea
mov
call
push
mov
mov
call
push
call
push
or
call
pop
pop
inc
cmp
jl
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
mov
mov
xor
xor
mov
cmp
je
mov
inc
inc
inc
cmp
jne
mov
cmp
jl
lea
push
push
call
mov
mov
mov
call
cmp
push
setne
or
call
test
pop
jne
mov
mov
call
test
je
add
cmp
jb
mov
mov
call
test
jne
xor
jmp
mov
mov
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
mov
mov
mov
cmp
je
test
je
inc
inc
jmp
sub
sar
jmp
or
test
jge
mov
push
lea
push
call
and
lea
call
mov
push
call
pop
cmp
mov
pop
setne
pop
mov
leave
ret
mov
call
sub
push
push
mov
xor
push
mov
cmp
je
mov
inc
inc
inc
cmp
jne
cmp
jle
lea
push
push
mov
call
mov
and
mov
call
test
push
setne
or
call
test
pop
jne
mov
mov
cmp
jb
cmp
ja
lea
mov
call
jmp
mov
mov
pop
pop
pop
mov
leave
ret
push
and
push
push
mov
mov
mov
mov
call
test
je
mov
mov
call
test
je
mov
mov
call
jmp
and
and
and
push
mov
call
mov
pop
pop
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
xor
cmp
mov
jle
mov
mov
cmp
jb
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
pop
push
lea
call
inc
cmp
jl
lea
call
mov
cmp
je
mov
cmp
jne
dec
push
push
lea
call
jmp
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
xor
mov
push
lea
mov
mov
mov
mov
call
xor
cmp
mov
jle
cmp
je
push
lea
call
mov
lea
push
call
inc
cmp
jl
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
and
push
mov
lea
call
and
lea
call
test
jne
push
lea
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
and
call
pop
pop
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
cmp
jae
mov
inc
mov
ret
mov
call
sub
push
mov
push
push
lea
call
mov
mov
xor
lea
mov
call
mov
cmp
mov
je
push
lea
call
lea
lea
mov
call
push
mov
call
pop
cmp
je
push
lea
call
lea
lea
mov
call
push
mov
call
pop
cmp
jle
add
lea
call
lea
mov
call
mov
lea
mov
push
call
cmp
jge
mov
lea
push
call
mov
mov
call
test
jne
and
mov
and
lea
mov
push
call
push
mov
call
push
call
inc
pop
cmp
pop
jl
mov
lea
mov
call
and
lea
call
mov
lea
mov
call
or
lea
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
mov
mov
call
xor
lea
push
mov
mov
mov
call
mov
mov
cmp
je
mov
jle
mov
mov
mov
cmp
jne
cmp
je
mov
lea
push
call
mov
mov
mov
jmp
push
lea
call
inc
cmp
jl
cmp
je
mov
lea
push
call
push
call
pop
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
add
push
mov
call
xor
cmp
jbe
push
push
mov
mov
lea
mov
call
push
and
lea
call
mov
lea
mov
mov
mov
push
push
call
cmp
lea
setne
mov
mov
mov
mov
push
call
add
push
push
push
call
mov
add
lea
push
call
or
lea
call
add
inc
cmp
jb
pop
pop
mov
xor
pop
mov
leave
ret
push
push
mov
xor
push
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
sub
mov
push
mov
push
push
mov
test
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
mov
jmp
or
push
test
pop
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
mov
jmp
or
test
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
xor
cmp
jl
cmp
jl
cmp
jl
inc
push
lea
push
call
mov
mov
cmp
jle
mov
mov
cmp
je
lea
push
call
test
jge
inc
cmp
jl
or
push
call
pop
mov
jmp
or
mov
pop
pop
pop
mov
leave
ret
push
push
mov
xor
cmp
jle
mov
mov
mov
mov
mov
call
test
je
inc
cmp
jl
or
pop
pop
ret
mov
jmp
push
mov
push
push
xor
mov
cmp
je
cmp
jle
mov
push
mov
call
test
jge
inc
cmp
jl
or
pop
pop
pop
ret
mov
jmp
push
push
mov
xor
cmp
jle
mov
mov
mov
mov
mov
call
test
je
inc
cmp
jl
or
pop
pop
ret
mov
jmp
mov
call
sub
push
mov
mov
push
push
call
mov
xor
mov
test
jle
mov
lea
mov
cmp
je
test
je
inc
inc
jmp
sub
sar
mov
jmp
or
test
jge
mov
mov
mov
sub
push
lea
push
push
call
mov
and
lea
push
call
mov
test
jge
mov
mov
call
test
jne
mov
push
call
push
or
lea
call
mov
pop
cmp
jl
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
call
pop
xor
jmp
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
add
lea
push
mov
call
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
push
call
and
lea
push
lea
call
and
and
lea
lea
push
mov
mov
call
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
push
call
mov
and
and
pop
mov
test
jbe
push
mov
call
push
push
push
call
add
mov
pop
pop
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
sub
push
xor
push
push
mov
mov
mov
lea
push
mov
push
mov
mov
push
push
call
cmp
je
mov
jmp
cmp
jne
cmp
setne
mov
jmp
cmp
je
mov
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
push
push
call
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
mov
cmp
je
or
lea
call
mov
jmp
cmp
jne
mov
push
mov
call
jmp
cmp
jne
mov
mov
mov
mov
or
lea
call
cmp
jne
lea
mov
push
call
mov
mov
mov
lea
push
push
push
mov
mov
push
call
cmp
je
mov
jmp
cmp
jne
push
mov
call
push
mov
call
or
lea
call
xor
jmp
cmp
je
mov
or
lea
call
mov
jmp
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
xor
push
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
mov
mov
push
push
mov
push
call
cmp
je
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
je
mov
jmp
cmp
je
mov
mov
mov
mov
mov
mov
or
lea
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
mov
cmp
je
mov
push
call
mov
mov
mov
lea
lea
mov
call
push
lea
mov
mov
mov
mov
call
mov
mov
cmp
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
cmp
jl
inc
lea
push
lea
push
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
mov
mov
cmp
mov
jl
push
lea
call
jmp
mov
xor
mov
cmp
jle
mov
mov
mov
lea
push
call
test
jl
mov
mov
push
shl
inc
mov
lea
call
mov
mov
mov
jmp
push
lea
call
mov
inc
cmp
jl
cmp
jne
cmp
jne
push
lea
call
cmp
jl
cmp
je
mov
mov
call
cmp
jne
push
lea
call
mov
mov
mov
mov
mov
mov
lea
push
mov
call
mov
push
push
push
mov
push
push
call
cmp
je
mov
jmp
mov
mov
lea
mov
push
call
cmp
jne
cmp
jne
push
pop
push
mov
call
pop
mov
lea
call
jmp
mov
mov
mov
mov
mov
mov
lea
push
mov
call
mov
push
push
push
mov
call
add
cmp
jl
push
mov
call
push
mov
call
pop
mov
pop
lea
call
lea
mov
call
push
call
push
call
pop
pop
push
pop
mov
pop
pop
pop
mov
leave
ret
xor
cmp
jle
mov
mov
mov
mov
mov
cmp
jb
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
inc
cmp
jl
dec
mov
je
jmp
xor
cmp
jae
mov
mov
xor
mov
mov
cmp
jne
inc
cmp
jb
cmp
je
mov
xor
mov
lea
mov
mov
mov
add
movzx
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
add
inc
cmp
ja
mov
xor
cmp
jbe
mov
add
mov
mov
mov
cmp
jne
inc
inc
cmp
jb
push
lea
call
mov
mov
mov
mov
jmp
lea
movzx
cmp
jne
inc
cmp
jb
xor
xor
cmp
jle
mov
mov
cmp
je
push
lea
call
inc
cmp
jl
lea
call
lea
lea
push
call
push
mov
mov
call
push
mov
call
pop
mov
pop
lea
call
jmp
mov
mov
call
cmp
je
mov
mov
call
cmp
jne
mov
mov
mov
mov
lea
push
mov
call
mov
mov
push
push
mov
push
push
push
call
cmp
jne
mov
lea
push
mov
mov
call
cmp
je
push
mov
mov
call
pop
jmp
cmp
jb
and
mov
lea
xor
mov
mov
mov
mov
mov
mov
sub
lea
mov
cmp
jne
inc
cmp
jb
cmp
jne
test
je
xor
cmp
jle
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
inc
cmp
jl
jmp
push
push
lea
call
push
lea
call
mov
mov
push
mov
mov
call
pop
cmp
jl
push
lea
call
mov
lea
push
mov
call
push
mov
mov
call
lea
mov
call
mov
lea
push
mov
call
push
mov
mov
call
pop
xor
or
cmp
mov
jle
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
add
inc
cmp
jl
cmp
jle
cmp
jl
mov
mov
mov
mov
mov
cmp
mov
jle
mov
xor
mov
cmp
je
mov
push
push
push
push
push
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
lea
call
mov
cmp
jne
mov
jmp
cmp
je
push
mov
push
push
push
call
mov
jmp
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
push
mov
push
call
mov
mov
cmp
mov
je
mov
push
call
cmp
jne
mov
mov
cmp
je
mov
push
call
inc
mov
cmp
jl
jmp
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
push
call
push
call
pop
mov
pop
jmp
cmp
je
mov
mov
cmp
je
mov
push
call
jmp
mov
mov
mov
lea
push
push
mov
push
mov
call
cmp
je
cmp
mov
je
mov
push
lea
call
lea
mov
call
push
mov
call
mov
mov
mov
mov
cmp
jne
mov
lea
push
call
push
lea
mov
call
lea
lea
push
lea
push
lea
mov
call
push
lea
mov
call
push
call
push
call
push
call
add
jmp
lea
mov
push
call
cmp
jge
xor
mov
lea
mov
lea
push
push
lea
call
push
lea
mov
call
push
call
pop
mov
mov
cmp
je
mov
push
call
xor
lea
mov
call
push
call
push
call
pop
mov
pop
jmp
mov
call
push
push
push
push
xor
push
mov
mov
mov
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
jmp
xor
push
lea
call
jmp
cmp
jne
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
push
lea
mov
call
push
mov
call
test
jne
call
jmp
mov
mov
push
mov
push
push
push
push
call
mov
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
dec
mov
jne
test
je
mov
push
call
xor
ret
test
push
mov
mov
je
push
call
pop
mov
pop
ret
push
push
mov
mov
dec
js
mov
mov
mov
push
mov
call
test
je
jmp
and
xor
pop
pop
ret
push
mov
cmp
je
mov
call
jmp
pop
ret
mov
call
sub
push
push
push
mov
call
mov
mov
cmp
jl
mov
jmp
xor
mov
push
pop
or
mov
mov
cmp
jl
mov
mov
cmp
jge
mov
sub
mov
mov
jmp
mov
mov
cmp
jge
cmp
jne
lea
call
push
lea
mov
call
push
lea
mov
push
push
push
push
call
mov
cmp
jne
mov
lea
push
call
lea
mov
call
jmp
mov
mov
mov
mov
mov
mov
lea
push
push
mov
push
mov
call
cmp
jne
cmp
jne
mov
mov
lea
mov
push
push
call
cmp
jne
cmp
jae
or
lea
call
mov
mov
lea
push
push
mov
push
mov
call
test
mov
jne
cmp
je
mov
mov
lea
push
push
push
mov
call
test
mov
jne
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
mov
jne
cmp
je
lea
call
lea
mov
push
push
mov
call
cmp
mov
jne
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
push
mov
push
call
push
lea
mov
push
push
push
push
call
cmp
mov
je
cmp
jne
lea
mov
push
lea
push
push
call
mov
cmp
jne
mov
lea
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
jmp
lea
mov
call
jmp
or
lea
mov
call
jmp
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
or
mov
cmp
je
mov
push
call
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
jmp
mov
jmp
or
jmp
or
lea
call
mov
cmp
setne
mov
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
xor
mov
mov
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
lea
mov
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
xor
push
mov
mov
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
or
cmp
mov
je
mov
push
call
mov
push
mov
lea
mov
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
cmp
mov
jne
cmp
jne
mov
lea
mov
lea
push
call
test
jne
call
push
mov
call
push
call
push
call
mov
or
add
cmp
je
mov
push
call
mov
jmp
push
lea
lea
push
call
push
lea
mov
call
push
mov
call
pop
lea
push
lea
push
call
push
lea
mov
call
push
mov
call
pop
lea
push
lea
push
mov
call
jmp
mov
mov
mov
lea
push
push
call
push
mov
push
push
push
push
push
call
cmp
mov
je
push
call
push
call
push
call
mov
or
add
cmp
je
mov
push
call
mov
jmp
lea
lea
push
lea
call
add
push
mov
mov
call
push
mov
call
cmp
pop
jle
mov
lea
lea
push
call
push
mov
mov
call
push
mov
call
inc
pop
cmp
jl
mov
mov
push
mov
mov
mov
call
push
call
push
call
or
add
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
push
xor
mov
mov
mov
lea
mov
mov
push
mov
mov
mov
mov
call
lea
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
push
and
mov
mov
mov
call
xor
jmp
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
mov
push
lea
mov
call
and
and
xor
pop
ret
mov
call
sub
push
push
mov
push
push
lea
mov
call
push
mov
lea
call
push
xor
lea
mov
call
push
mov
neg
sbb
or
inc
call
test
pop
je
lea
push
push
mov
call
lea
call
and
mov
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
mov
mov
test
je
mov
push
call
lea
mov
mov
mov
mov
call
mov
mov
call
push
call
push
call
push
call
mov
add
mov
pop
pop
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
mov
mov
mov
test
mov
je
mov
push
call
and
lea
push
lea
call
lea
lea
push
mov
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
push
push
lea
pop
mov
and
shr
cmp
jge
add
jmp
add
mov
dec
dec
dec
jne
and
pop
pop
ret
mov
call
sub
mov
push
push
push
mov
xor
cmp
mov
mov
mov
je
jbe
cmp
jbe
cmp
je
cmp
jne
cmp
jne
push
lea
mov
mov
mov
call
mov
push
mov
mov
shr
and
pop
movsx
mov
lea
lea
push
pop
lea
push
shl
mov
and
neg
sbb
and
add
mov
pop
shl
push
mov
pop
and
neg
sbb
shl
and
add
mov
and
neg
sbb
sub
and
add
add
mov
test
jge
test
je
mov
shr
and
or
movsx
mov
test
je
mov
and
shl
or
movsx
mov
test
je
mov
and
shl
or
movsx
mov
and
lea
push
lea
call
and
je
lea
mov
call
lea
lea
push
call
push
mov
lea
mov
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
call
push
and
call
add
mov
lea
push
call
push
call
mov
pop
jmp
cmp
jne
mov
lea
call
lea
jmp
cmp
jne
cmp
jne
cmp
je
lea
add
push
push
call
test
jne
push
mov
mov
mov
mov
call
jmp
push
lea
mov
push
call
jmp
cmp
je
mov
mov
call
jmp
mov
mov
xor
lea
push
pop
shl
test
je
cmp
je
movsx
inc
mov
inc
inc
inc
cmp
jl
mov
mov
lea
push
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
xor
mov
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
lea
call
mov
mov
mov
mov
shl
add
push
call
pop
mov
cmp
mov
je
push
push
lea
push
push
push
mov
call
mov
jmp
xor
mov
xor
cmp
jge
mov
mov
and
and
push
lea
mov
call
cmp
mov
jne
mov
test
je
mov
mov
cmp
jne
push
jmp
cmp
jne
push
lea
call
cmp
je
mov
lea
dec
push
lea
push
call
push
lea
mov
call
mov
push
call
pop
jmp
lea
lea
call
lea
lea
push
call
mov
lea
shl
add
push
call
push
call
pop
mov
lea
call
inc
jmp
xor
mov
mov
mov
mov
mov
mov
xor
cmp
jge
mov
lea
mov
push
call
inc
jmp
push
mov
push
mov
push
push
call
mov
mov
cmp
lea
je
call
mov
lea
mov
call
and
lea
call
mov
or
cmp
je
mov
push
call
mov
mov
pop
pop
mov
pop
leave
ret
call
mov
mov
cmp
je
push
call
mov
lea
mov
call
and
lea
call
mov
or
cmp
je
mov
push
call
xor
jmp
mov
test
je
push
call
push
push
call
push
mov
push
push
push
push
mov
mov
mov
lea
call
mov
mov
sub
sar
cmp
je
push
mov
call
jmp
test
ja
jb
cmp
ja
push
mov
call
jmp
push
push
mov
call
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
mov
call
mov
mov
push
call
xor
test
jle
push
mov
call
inc
cmp
jl
push
push
mov
call
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
call
ret
push
mov
cmp
jle
mov
push
mov
push
cdq
sub
sub
mov
sar
push
mov
mov
push
push
call
dec
jne
lea
push
mov
mov
dec
push
mov
mov
sub
push
push
pop
mov
call
cmp
jg
pop
pop
pop
ret
push
mov
push
push
push
push
push
mov
mov
lea
mov
mov
cmp
jg
jge
push
lea
lea
mov
lea
call
test
jle
mov
push
lea
lea
call
test
jge
mov
mov
mov
shl
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
mov
test
je
mov
mov
mov
call
mov
call
jmp
pop
ret
push
push
push
mov
xor
xor
cmp
jle
mov
mov
mov
test
je
mov
call
test
je
mov
inc
cmp
jl
pop
mov
pop
pop
ret
mov
call
sub
mov
push
push
push
xor
cmp
je
mov
cmp
jbe
mov
mov
mov
cmp
jl
mov
lea
mov
call
mov
lea
inc
mov
call
lea
lea
push
call
mov
cmp
jge
push
lea
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
jmp
lea
lea
push
lea
call
push
mov
call
cmp
pop
je
mov
or
mov
jmp
xor
push
lea
mov
call
mov
mov
push
push
mov
mov
add
mov
call
test
je
mov
lea
push
call
lea
lea
push
mov
mov
mov
mov
call
lea
lea
push
call
push
call
push
call
or
pop
pop
lea
call
jmp
mov
mov
mov
mov
cmp
jl
lea
mov
mov
mov
mov
mov
mov
cmp
mov
jb
ja
cmp
jb
sub
sbb
inc
mov
mov
mov
xor
jmp
call
push
mov
call
push
call
or
pop
pop
lea
call
mov
jmp
mov
mov
cmp
jne
cmp
je
mov
push
push
push
mov
push
push
call
test
jne
mov
mov
mov
mov
mov
mov
sub
sbb
xor
cmp
ja
jb
cmp
jae
mov
jmp
mov
mov
lea
push
push
push
mov
push
call
test
jne
mov
add
adc
mov
xor
add
adc
add
adc
mov
cmp
mov
jb
ja
cmp
jbe
mov
mov
mov
mov
cmp
jb
ja
cmp
jbe
mov
mov
mov
mov
test
je
add
mov
cmp
jne
mov
cmp
jne
inc
and
and
test
jne
test
je
mov
jmp
xor
mov
pop
pop
pop
mov
leave
ret
push
mov
push
call
mov
pop
test
je
mov
push
call
pop
ret
push
mov
mov
cmp
jb
mov
jmp
mov
sub
je
dec
je
dec
jne
mov
mov
add
adc
mov
mov
jmp
mov
mov
add
adc
jmp
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
test
je
mov
mov
and
xor
pop
pop
ret
push
mov
push
and
push
push
push
mov
mov
test
jle
mov
mov
shl
inc
mov
mov
mov
cmp
jb
ja
cmp
jb
sub
sbb
cmp
jl
jmp
mov
mov
push
push
mov
push
call
test
jne
mov
mov
mov
mov
cmp
jge
lea
mov
mov
mov
mov
test
je
mov
push
call
and
mov
call
mov
call
mov
cmp
jl
mov
and
mov
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
call
sub
push
push
mov
push
mov
mov
cmp
jg
mov
xor
cmp
je
mov
mov
cmp
jl
mov
jmp
push
mov
call
cmp
mov
jge
push
lea
call
lea
mov
push
mov
call
push
or
mov
call
pop
mov
cmp
jl
mov
mov
cmp
jne
xor
jmp
lea
push
call
lea
lea
push
mov
call
cmp
mov
je
push
lea
call
lea
lea
push
call
lea
lea
push
call
push
lea
call
cmp
jle
mov
mov
lea
push
lea
call
lea
lea
push
call
push
lea
call
inc
cmp
jl
push
call
push
call
pop
mov
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
push
xor
cmp
mov
jne
push
mov
push
mov
mov
mov
mov
call
mov
pop
jmp
mov
mov
push
call
mov
leave
ret
mov
call
sub
push
push
push
mov
push
call
mov
lea
push
lea
call
mov
test
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
mov
jmp
or
test
jl
mov
dec
cmp
jne
lea
push
push
mov
call
xor
push
mov
mov
call
push
call
mov
mov
pop
mov
jmp
lea
mov
push
lea
push
call
mov
mov
add
mov
call
push
test
sete
or
call
cmp
pop
je
lea
mov
push
lea
push
call
push
mov
mov
call
push
or
call
pop
lea
push
push
mov
call
push
mov
mov
call
push
call
pop
jmp
mov
and
and
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
mov
mov
push
mov
call
mov
lea
push
push
mov
call
xor
cmp
jne
push
mov
call
xor
cmp
jbe
lea
call
mov
lea
push
push
mov
call
cmp
jne
lea
mov
push
mov
call
cmp
jne
cmp
mov
sete
push
lea
push
call
mov
mov
lea
push
lea
push
push
call
cmp
jne
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
mov
jne
cmp
setne
cmp
je
lea
call
mov
mov
lea
mov
call
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
jne
cmp
jne
mov
cmp
mov
jl
cmp
jg
lea
mov
call
mov
lea
push
mov
call
or
push
call
inc
pop
cmp
jb
xor
mov
pop
pop
pop
mov
leave
ret
mov
jmp
lea
mov
call
push
call
mov
pop
jmp
mov
jmp
mov
lea
mov
call
push
call
pop
mov
jmp
push
push
mov
xor
push
lea
mov
mov
mov
call
or
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
sub
push
push
mov
push
mov
mov
cmp
mov
je
cmp
jne
xor
cmp
jle
cmp
jne
cmp
je
mov
jmp
cmp
je
lea
call
lea
mov
call
push
lea
mov
call
lea
push
call
lea
lea
push
call
cmp
jne
mov
push
lea
call
push
call
push
call
pop
pop
jmp
lea
lea
push
call
mov
lea
push
push
push
xor
mov
call
test
jne
call
mov
push
lea
mov
call
lea
lea
push
call
push
call
push
call
push
call
add
jmp
push
call
push
or
call
push
call
add
lea
call
lea
lea
push
mov
call
cmp
mov
je
lea
call
push
lea
mov
call
test
je
mov
shr
test
je
lea
push
push
mov
call
cmp
jle
mov
jmp
push
lea
call
mov
mov
mov
cmp
jl
push
lea
call
push
lea
lea
push
push
lea
push
push
push
call
mov
mov
cmp
jne
mov
jmp
mov
push
push
mov
call
cmp
jne
cmp
je
mov
jmp
cmp
jle
mov
mov
push
lea
mov
call
lea
mov
call
push
call
push
call
pop
jmp
mov
mov
cmp
mov
mov
sete
mov
mov
mov
mov
mov
lea
call
push
mov
call
pop
lea
call
cmp
mov
je
lea
call
or
mov
mov
lea
lea
push
mov
call
lea
mov
mov
mov
call
mov
mov
mov
mov
lea
mov
mov
push
lea
call
mov
push
call
pop
jmp
and
cmp
mov
jle
mov
mov
add
xor
mov
cmp
je
inc
add
cmp
jl
push
add
pop
cmp
jne
inc
add
cmp
jl
jmp
mov
inc
add
mov
cmp
jl
cmp
je
mov
mov
mov
mov
call
cmp
je
mov
jmp
lea
call
mov
mov
push
lea
mov
call
mov
lea
mov
push
lea
push
lea
push
lea
mov
call
xor
mov
cmp
jle
mov
mov
mov
push
mov
mov
mov
mov
push
mov
call
test
mov
jne
inc
cmp
jl
cmp
je
cmp
je
mov
push
lea
call
lea
mov
call
mov
mov
mov
jmp
lea
mov
call
mov
mov
mov
jmp
mov
mov
call
mov
mov
test
lea
je
call
mov
mov
mov
lea
call
lea
mov
call
jmp
call
mov
lea
mov
call
lea
mov
call
xor
push
lea
mov
mov
mov
call
and
and
lea
mov
call
cmp
mov
je
cmp
je
push
lea
call
lea
lea
push
call
lea
call
mov
lea
call
and
mov
cmp
mov
mov
jne
cmp
je
mov
mov
lea
lea
push
mov
call
test
jne
cmp
je
cmp
jne
cmp
jne
mov
cmp
mov
je
add
lea
push
mov
call
mov
call
xor
cmp
jle
mov
cmp
mov
lea
je
lea
lea
push
call
cmp
jne
test
jg
cmp
jne
lea
mov
push
call
mov
mov
call
test
jne
push
mov
call
pop
inc
cmp
jl
lea
call
mov
mov
cmp
mov
je
mov
mov
mov
mov
lea
push
call
mov
test
je
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
jmp
mov
push
and
lea
call
lea
lea
push
call
push
call
pop
lea
mov
call
lea
mov
call
mov
lea
call
push
call
push
call
pop
jmp
mov
mov
mov
mov
jmp
xor
push
mov
lea
mov
push
push
lea
push
lea
push
mov
push
call
test
mov
je
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
jmp
cmp
je
lea
call
test
mov
je
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
lea
call
push
call
push
call
pop
pop
lea
mov
call
push
call
or
pop
lea
call
mov
jmp
lea
call
lea
call
cmp
je
mov
mov
mov
lea
lea
push
call
cmp
mov
je
mov
call
test
jne
call
lea
mov
push
call
lea
lea
push
call
push
call
pop
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
jmp
mov
mov
call
test
jne
call
lea
mov
push
call
lea
lea
push
call
lea
lea
push
call
push
call
pop
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
jmp
push
call
pop
mov
cmp
je
xor
mov
push
lea
mov
call
test
jne
call
mov
push
lea
call
jmp
push
push
call
push
push
call
cmp
mov
jne
call
mov
push
jmp
lea
call
cmp
mov
mov
jle
mov
mov
mov
lea
lea
call
lea
mov
push
mov
call
mov
lea
mov
mov
call
mov
mov
push
neg
sbb
inc
call
test
pop
jne
lea
lea
push
call
mov
push
call
inc
pop
mov
cmp
jl
xor
lea
call
xor
cmp
mov
jle
mov
lea
push
call
lea
lea
mov
call
lea
lea
mov
call
lea
lea
mov
call
push
mov
push
push
push
push
call
push
call
push
call
push
call
push
mov
call
add
inc
cmp
jl
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
push
call
pop
mov
lea
call
push
call
or
pop
lea
call
xor
mov
pop
pop
mov
pop
leave
ret
call
lea
mov
push
call
push
call
pop
mov
lea
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
push
call
pop
mov
lea
call
push
call
or
pop
lea
call
mov
jmp
mov
call
sub
and
lea
push
mov
push
call
and
cmp
je
push
lea
call
add
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
and
call
pop
pop
mov
lea
push
call
push
call
mov
pop
mov
pop
mov
leave
ret
push
mov
push
and
lea
lea
mov
push
call
mov
leave
ret
mov
call
sub
and
push
mov
lea
lea
lea
push
call
and
cmp
je
push
lea
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
and
call
pop
pop
push
lea
call
add
lea
push
call
mov
lea
push
call
push
call
mov
pop
mov
pop
mov
leave
ret
push
and
push
mov
push
call
mov
pop
pop
ret
jmp
mov
call
push
push
mov
mov
and
call
push
call
pop
pop
mov
mov
leave
ret
mov
call
push
push
mov
mov
and
call
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
sub
push
push
mov
mov
xor
push
cmp
mov
jle
mov
jmp
xor
mov
mov
cmp
mov
je
cmp
mov
setne
push
push
mov
call
jmp
cmp
jne
cmp
je
cmp
mov
setne
test
jne
mov
lea
lea
push
call
push
mov
mov
and
push
mov
call
or
mov
push
call
mov
pop
test
jne
push
lea
push
mov
lea
push
push
lea
push
mov
push
mov
push
push
mov
push
mov
push
lea
push
push
push
push
call
test
jne
mov
mov
call
test
jne
inc
mov
cmp
jl
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
xor
push
mov
mov
mov
mov
cmp
je
mov
push
mov
call
mov
lea
push
push
push
mov
call
cmp
je
mov
push
mov
lea
push
call
mov
push
mov
call
jmp
mov
mov
mov
mov
call
lea
push
call
mov
cmp
jne
mov
push
mov
lea
push
call
mov
lea
push
push
call
mov
cmp
jne
mov
cmp
ja
push
lea
call
mov
push
lea
call
mov
mov
mov
lea
mov
push
push
call
lea
mov
push
push
lea
call
lea
mov
call
mov
xor
cmp
jle
mov
cmp
je
inc
add
dec
jne
mov
push
push
mov
mov
call
mov
cmp
jne
push
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
lea
push
lea
mov
mov
call
neg
push
mov
sbb
inc
mov
call
cmp
pop
je
lea
push
push
mov
call
push
lea
lea
push
call
mov
mov
call
push
call
push
mov
call
pop
pop
mov
mov
mov
mov
cmp
jne
cmp
je
push
call
cmp
pop
je
mov
mov
jmp
xor
push
lea
call
jmp
push
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
push
lea
mov
mov
call
lea
mov
push
mov
mov
call
mov
mov
lea
mov
cmp
je
cmp
jle
mov
lea
call
lea
push
mov
lea
call
mov
lea
push
call
push
lea
mov
call
mov
push
jmp
mov
lea
push
call
push
lea
mov
call
mov
push
call
mov
pop
push
mov
push
mov
mov
call
test
jne
call
cmp
jne
mov
cmp
je
inc
cmp
jl
call
mov
mov
lea
push
lea
call
lea
push
call
push
call
pop
jmp
mov
lea
push
call
mov
push
call
pop
jmp
cmp
jne
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
push
lea
mov
mov
call
lea
mov
call
mov
push
call
lea
push
call
mov
mov
lea
push
mov
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
call
push
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
cmp
jne
cmp
je
push
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
mov
mov
push
call
test
jne
call
mov
push
lea
mov
call
lea
push
call
jmp
mov
mov
mov
mov
cmp
jne
push
lea
call
jmp
push
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
push
lea
mov
mov
call
mov
lea
push
call
mov
push
mov
push
lea
mov
mov
call
test
jne
call
mov
mov
lea
push
lea
call
lea
push
call
push
call
mov
pop
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
or
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
call
pop
mov
push
mov
call
mov
cmp
jne
mov
cmp
je
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
jmp
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
push
mov
push
mov
push
push
call
mov
mov
mov
call
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
or
cmp
je
mov
push
call
jmp
mov
cmp
je
call
jmp
mov
cmp
je
call
mov
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
or
lea
call
mov
jmp
mov
and
or
mov
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
mov
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
push
and
call
pop
lea
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
mov
and
and
and
call
and
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
and
call
push
call
pop
pop
mov
mov
leave
ret
push
mov
push
mov
push
mov
push
push
push
call
pop
ret
push
push
mov
mov
push
call
lea
lea
push
call
lea
lea
push
call
lea
lea
push
call
lea
lea
push
call
mov
lea
mov
lea
push
call
add
lea
push
call
mov
pop
pop
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
and
lea
push
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
push
mov
push
push
mov
mov
mov
add
push
call
xor
test
jle
mov
mov
push
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
push
call
push
call
or
pop
pop
lea
call
mov
pop
mov
leave
ret
mov
call
push
mov
push
push
push
mov
and
mov
push
mov
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
and
push
push
mov
push
mov
push
mov
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
push
push
push
mov
and
mov
push
mov
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
push
mov
push
xor
mov
mov
mov
mov
call
cmp
jne
mov
mov
shl
mov
add
mov
cmp
je
xor
cmp
setne
mov
mov
cmp
je
xor
cmp
setne
mov
mov
cmp
je
or
mov
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
mov
mov
push
push
mov
push
xor
mov
mov
mov
shl
add
mov
mov
mov
mov
cmp
jne
mov
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
cmp
je
mov
sub
je
sub
je
dec
jne
push
push
lea
call
jmp
mov
cmp
je
mov
sub
mov
mov
je
sub
je
dec
je
dec
dec
je
dec
je
dec
je
dec
jne
add
jmp
add
jmp
add
push
lea
call
jmp
push
lea
call
jmp
push
push
jmp
mov
shr
and
jmp
lea
push
push
call
push
lea
mov
call
push
mov
call
pop
jmp
cmp
jne
mov
cmp
jl
mov
lea
mov
mov
push
call
jmp
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
mov
mov
push
mov
push
push
push
call
lea
mov
mov
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
mov
push
push
mov
and
push
mov
mov
shl
mov
add
cmp
jne
mov
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
cmp
je
mov
mov
push
mov
mov
mov
mov
mov
push
call
jmp
mov
mov
push
mov
mov
lea
push
call
mov
mov
push
push
mov
mov
call
push
and
mov
call
mov
pop
test
jne
mov
shr
test
jne
cmp
je
push
call
test
pop
je
and
mov
mov
jmp
xor
test
je
mov
push
call
mov
mov
jmp
push
call
pop
mov
mov
test
mov
je
call
mov
jmp
xor
and
mov
test
je
mov
push
call
push
mov
lea
mov
push
call
mov
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
call
mov
push
push
call
push
mov
call
and
pop
test
je
mov
push
call
mov
jmp
mov
push
mov
call
pop
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
and
push
push
mov
push
mov
push
mov
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
test
jne
push
pop
jmp
mov
cmp
jb
lea
mov
mov
push
mov
mov
pop
mov
mov
xor
ret
mov
call
sub
mov
push
push
push
xor
lea
lea
mov
mov
call
lea
lea
push
call
mov
cmp
jge
push
lea
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
jmp
mov
lea
lea
push
call
push
lea
mov
call
lea
lea
push
call
add
lea
push
call
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
push
mov
push
lea
mov
mov
call
cmp
jne
call
cmp
mov
mov
je
mov
push
call
mov
jmp
mov
mov
xor
push
call
push
call
pop
mov
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
push
push
push
mov
and
mov
push
mov
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
and
push
push
mov
push
mov
push
mov
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
mov
call
sub
push
push
mov
push
mov
push
lea
mov
mov
call
mov
mov
and
push
lea
call
mov
mov
mov
push
lea
mov
mov
mov
call
mov
mov
push
lea
mov
call
xor
cmp
jle
mov
lea
mov
mov
add
push
call
inc
cmp
jl
lea
lea
call
lea
lea
call
mov
lea
mov
call
lea
mov
call
lea
push
call
mov
push
lea
mov
call
xor
cmp
jle
lea
push
push
mov
call
push
lea
mov
call
mov
push
call
inc
pop
cmp
jl
lea
lea
call
lea
lea
call
xor
cmp
mov
mov
jle
jmp
mov
mov
cmp
jge
mov
mov
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
test
jge
inc
mov
mov
jmp
jle
xor
mov
cmp
setne
mov
jmp
cmp
jne
push
lea
call
mov
lea
mov
mov
lea
push
call
mov
push
call
pop
cmp
mov
mov
je
mov
cmp
jne
mov
mov
lea
push
mov
lea
call
jmp
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
jmp
mov
jmp
mov
inc
inc
sub
lea
mov
mov
movs
movs
movs
call
mov
mov
cmp
jl
mov
cmp
jge
or
mov
mov
mov
sub
lea
mov
mov
mov
mov
movs
movs
movs
call
inc
mov
cmp
jl
mov
cmp
jge
or
mov
mov
mov
mov
mov
mov
mov
xor
cmp
lea
setne
sub
mov
mov
mov
movs
movs
movs
call
inc
mov
cmp
jl
mov
call
mov
lea
mov
call
lea
mov
call
and
lea
call
or
lea
call
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
sub
mov
je
dec
je
dec
je
lea
push
push
mov
call
lea
mov
call
mov
lea
call
mov
cmp
jb
xor
cmp
setne
mov
jmp
lea
mov
call
mov
lea
call
mov
cmp
jae
or
jmp
xor
cmp
jmp
push
push
call
leave
ret
mov
call
sub
push
push
mov
lea
call
and
push
lea
call
lea
push
call
lea
push
call
lea
push
call
lea
lea
push
call
lea
push
push
call
pop
mov
call
sub
push
mov
mov
push
mov
pop
cmp
jle
push
push
mov
xor
mov
mov
lea
mov
mov
mov
mov
mov
call
test
jne
push
lea
call
mov
mov
and
mov
mov
mov
mov
mov
push
mov
lea
call
or
push
call
pop
inc
mov
mov
cmp
jl
pop
pop
mov
pop
mov
leave
ret
push
push
push
mov
call
mov
mov
lea
lea
lea
movs
movs
movs
mov
pop
pop
lea
mov
pop
ret
push
mov
sub
push
mov
xor
push
cmp
push
mov
mov
jle
or
mov
mov
mov
add
and
mov
mov
mov
mov
mov
mov
mov
mov
sub
je
dec
je
dec
je
dec
jne
mov
jmp
cmp
je
test
je
jmp
cmp
je
and
and
sub
lea
mov
mov
movs
movs
movs
movs
call
jmp
mov
test
je
mov
push
mov
call
inc
add
mov
cmp
jl
mov
call
pop
pop
pop
leave
ret
mov
push
mov
lea
push
call
mov
push
mov
lea
push
call
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
and
push
push
mov
push
mov
mov
mov
push
call
mov
lea
push
push
mov
push
push
push
call
test
jne
push
lea
mov
call
test
jne
cmp
jne
cmp
jne
cmp
jne
mov
lea
push
push
push
push
push
call
test
jne
mov
mov
sub
push
mov
sbb
mov
mov
lea
call
push
lea
call
xor
jmp
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
lea
push
call
lea
push
call
xor
pop
ret
push
mov
and
mov
test
je
mov
push
call
and
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
cmp
je
push
mov
push
push
call
mov
lea
push
push
mov
mov
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
pop
mov
mov
cmp
mov
je
call
mov
xor
mov
cmp
mov
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
jmp
mov
mov
push
push
call
push
mov
lea
push
call
mov
cmp
je
cmp
mov
je
mov
push
call
mov
and
cmp
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
xor
mov
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
push
mov
lea
mov
push
push
call
test
mov
jne
cmp
jne
cmp
je
mov
mov
push
call
test
je
mov
push
call
xor
mov
cmp
jne
xor
jmp
cmp
jne
push
pop
mov
push
push
mov
call
mov
mov
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
test
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
lea
and
push
sub
pop
sub
xor
cdq
shr
sub
mov
sbb
add
mov
mov
adc
mov
mov
mov
mov
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
sub
push
push
push
push
pop
cmp
jne
mov
xor
cmp
jne
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
cmp
jne
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
jne
cmp
je
mov
or
lea
jmp
cmp
je
or
lea
call
jmp
or
lea
call
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
or
lea
call
mov
jmp
mov
mov
or
lea
call
mov
mov
cmp
jne
mov
cmp
jb
mov
jmp
cmp
sbb
and
add
mov
cmp
jne
mov
cmp
jb
push
pop
jmp
cmp
sbb
inc
inc
push
push
mov
push
push
push
xor
push
call
jmp
cmp
je
mov
jmp
mov
mov
cmp
je
mov
push
push
push
push
push
call
cmp
jne
mov
mov
push
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
mov
mov
mov
push
push
call
xor
cmp
jne
mov
lea
push
push
mov
mov
call
cmp
jne
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
or
cmp
je
mov
push
call
mov
jmp
push
call
pop
mov
mov
cmp
mov
je
call
mov
mov
jmp
mov
mov
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
push
mov
mov
mov
mov
call
cmp
mov
mov
lea
je
call
lea
mov
call
lea
mov
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
call
lea
mov
call
lea
mov
call
mov
push
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
push
push
call
cmp
mov
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
lea
call
call
xor
mov
cmp
mov
mov
jle
mov
mov
mov
mov
lea
push
call
mov
mov
call
cmp
je
mov
mov
cmp
jne
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
cmp
jne
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
call
lea
mov
push
mov
push
mov
call
push
mov
mov
call
cmp
pop
jne
mov
push
or
call
inc
add
mov
add
cmp
pop
jl
xor
mov
pop
pop
pop
mov
leave
ret
push
call
mov
pop
jmp
push
call
mov
pop
jmp
push
call
mov
pop
jmp
mov
push
call
pop
mov
jmp
push
mov
or
or
mov
call
mov
pop
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
sub
jmp
sub
jmp
sub
jmp
mov
cmp
jne
push
pop
cmp
jne
cmp
sbb
inc
mov
cmp
jne
cmp
jb
push
pop
jmp
cmp
sbb
and
add
mov
cmp
jne
cmp
jb
mov
jmp
cmp
sbb
and
add
mov
ret
mov
call
sub
push
push
mov
call
mov
push
pop
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
push
mov
mov
mov
mov
mov
pop
jne
push
pop
mov
push
lea
mov
push
lea
push
push
call
lea
mov
mov
call
lea
mov
call
lea
mov
call
or
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
xor
or
cmp
push
mov
mov
mov
mov
mov
mov
mov
jle
mov
mov
mov
mov
mov
lea
push
call
mov
mov
call
cmp
je
mov
cmp
jne
lea
push
push
lea
mov
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
push
lea
pop
lea
push
push
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
push
lea
pop
lea
push
push
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
or
lea
push
push
lea
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
mov
push
or
call
inc
add
mov
add
cmp
pop
jl
xor
mov
pop
pop
pop
mov
leave
ret
push
call
pop
mov
jmp
push
call
pop
mov
jmp
push
mov
sub
push
push
mov
call
mov
push
lea
mov
call
test
jne
cmp
jne
mov
cmp
mov
je
push
pop
jmp
mov
mov
mov
mov
mov
mov
test
mov
mov
je
lea
mov
call
test
jne
movzx
mov
call
test
jne
test
je
push
lea
mov
call
test
jne
test
je
push
lea
mov
call
test
jne
test
je
lea
mov
call
test
jne
mov
call
neg
sbb
neg
pop
pop
leave
ret
mov
test
jne
xor
ret
push
pop
sub
shl
cmp
setb
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
push
xor
push
cmp
mov
mov
jbe
push
lea
push
mov
call
mov
inc
cmp
jb
pop
mov
call
neg
sbb
pop
pop
pop
neg
ret
push
mov
test
jbe
push
push
lea
mov
push
mov
call
dec
jne
pop
pop
mov
call
neg
sbb
pop
neg
ret
push
push
push
push
push
mov
mov
xor
mov
lea
push
mov
call
mov
mov
call
test
jne
movzx
mov
add
shl
or
cmp
jl
xor
pop
pop
pop
pop
pop
ret
push
pop
jmp
push
mov
push
push
push
mov
xor
push
mov
mov
mov
and
cmp
jbe
push
lea
call
mov
mov
call
test
jne
cmp
je
push
mov
call
inc
cmp
jb
push
pop
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
push
lea
call
test
jne
mov
mov
mov
mov
mov
call
neg
sbb
neg
pop
leave
ret
push
mov
push
push
push
mov
mov
push
lea
call
test
jne
mov
mov
mov
mov
xor
pop
leave
ret
push
mov
sub
push
mov
mov
push
mov
lea
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
call
test
jne
test
je
mov
mov
mov
inc
push
call
test
jne
xor
pop
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
lea
mov
call
leave
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
mov
mov
cmp
jae
movzx
mov
jmp
mov
push
lea
call
jmp
mov
cmp
je
push
lea
call
jmp
mov
mov
cmp
je
lea
call
lea
lea
push
call
jmp
mov
cmp
je
push
push
lea
call
jmp
mov
cmp
je
push
push
jmp
mov
test
je
push
lea
lea
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
mov
push
mov
mov
push
lea
mov
xor
push
push
push
push
mov
push
mov
call
test
jne
mov
lea
push
push
call
test
mov
jne
mov
lea
push
push
push
push
push
call
mov
mov
sub
mov
mov
sbb
add
mov
adc
test
mov
jne
push
lea
call
push
lea
mov
call
jmp
mov
mov
ret
mov
and
cmp
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
push
mov
and
push
mov
mov
lea
mov
push
call
mov
push
add
push
mov
call
mov
push
call
push
lea
call
mov
mov
call
mov
mov
jmp
mov
mov
ret
mov
and
cmp
je
mov
lea
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
lea
call
test
jne
mov
jmp
cmp
je
lea
call
and
xor
pop
ret
add
jmp
push
mov
and
mov
test
je
mov
push
call
and
mov
mov
lea
push
call
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
cmp
je
push
mov
push
push
call
mov
lea
push
push
mov
mov
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
or
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
test
je
mov
push
push
push
push
push
call
test
mov
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
push
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
lea
call
lea
mov
call
cmp
mov
je
cmp
je
push
lea
call
test
mov
je
cmp
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
neg
sbb
and
mov
jmp
mov
push
or
mov
mov
and
mov
mov
push
push
mov
push
call
test
mov
je
cmp
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
mov
neg
and
shr
add
lea
mov
push
call
test
je
push
jmp
mov
not
cmp
jne
mov
mov
sub
mov
cmp
jne
lea
mov
call
jmp
push
pop
lea
mov
call
mov
test
je
mov
push
call
xor
mov
mov
push
push
mov
call
mov
mov
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
call
push
call
pop
pop
pop
ret
mov
call
sub
cmp
push
push
push
jne
mov
xor
cmp
jne
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
cmp
jne
mov
lea
lea
push
call
cmp
mov
mov
mov
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
mov
lea
jmp
mov
lea
mov
mov
lea
mov
call
test
mov
lea
je
call
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
jne
push
lea
call
mov
mov
cmp
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
cmp
jl
inc
lea
push
lea
push
call
push
lea
mov
call
push
mov
call
pop
push
lea
lea
call
push
lea
mov
call
push
call
cmp
pop
je
or
push
call
pop
lea
mov
call
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
mov
lea
jmp
cmp
jne
cmp
je
mov
mov
lea
jmp
cmp
je
mov
lea
call
lea
call
mov
jmp
lea
mov
call
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
mov
mov
lea
call
jmp
mov
lea
mov
mov
mov
mov
call
add
mov
push
push
push
lea
push
call
jmp
cmp
je
mov
jmp
cmp
jne
mov
jmp
mov
cmp
mov
mov
je
push
lea
call
mov
mov
add
adc
mov
push
push
push
mov
push
push
call
cmp
jne
mov
mov
push
call
mov
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
xor
mov
mov
push
mov
mov
mov
push
call
cmp
jne
mov
lea
push
push
call
cmp
jne
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
or
cmp
je
mov
push
call
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
or
mov
push
mov
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
mov
mov
cmp
mov
mov
je
mov
push
call
mov
push
push
mov
mov
call
lea
push
call
mov
xor
push
mov
cmp
lea
mov
mov
sbb
and
add
mov
call
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
lea
neg
sbb
mov
and
mov
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
mov
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
push
not
mov
mov
mov
mov
lea
mov
call
mov
cmp
je
cmp
mov
je
mov
push
call
lea
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
jmp
mov
push
push
mov
call
cmp
mov
mov
je
mov
push
call
lea
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
mov
and
lea
call
mov
mov
mov
pop
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
lea
neg
sbb
and
jmp
mov
call
push
push
push
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
and
add
push
lea
call
mov
mov
pop
pop
mov
leave
ret
push
mov
push
lea
push
call
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
lea
mov
or
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
push
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
push
and
mov
mov
mov
call
xor
jmp
mov
pop
pop
ret
mov
inc
mov
ret
mov
dec
mov
jne
test
je
mov
push
call
xor
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
jmp
mov
call
push
push
mov
mov
mov
mov
mov
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
and
call
mov
or
test
pop
je
mov
push
call
mov
mov
leave
ret
mov
call
push
push
mov
mov
and
call
mov
or
test
pop
je
mov
push
call
mov
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
jmp
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
push
xor
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
push
mov
lea
call
xor
mov
mov
mov
mov
pop
ret
push
mov
call
mov
push
mov
pop
shl
add
dec
and
shr
mov
pop
ret
mov
push
sub
push
push
xor
pop
sub
cdq
shr
sub
mov
sbb
add
adc
add
pop
pop
adc
ret
push
mov
cmp
jb
push
push
lea
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
jmp
or
inc
mov
push
movzx
pop
mov
sub
add
shl
or
movzx
mov
mov
shl
or
cmp
mov
jae
pop
pop
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
and
cmp
push
mov
je
mov
mov
xor
cmp
setne
add
xor
mov
mov
inc
cmp
jl
mov
cmp
mov
mov
mov
jae
cmp
jae
mov
mov
mov
and
cmp
je
cmp
ja
jb
test
jae
add
call
test
je
push
pop
jmp
xor
pop
ret
mov
push
pop
push
pop
shl
cmp
je
push
pop
shl
cmp
je
inc
cmp
jle
xor
cmp
sete
mov
ret
mov
ret
mov
call
push
push
push
mov
push
xor
cmp
lea
jne
push
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
or
push
mov
mov
call
cmp
je
cmp
lea
jne
mov
push
xor
lea
push
mov
call
cmp
mov
je
mov
or
cmp
je
mov
push
call
mov
jmp
mov
cmp
je
mov
push
push
push
call
cmp
jne
mov
or
cmp
je
mov
push
call
mov
jmp
mov
or
cmp
je
mov
push
call
mov
push
mov
lea
push
call
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
add
push
mov
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
push
push
push
push
mov
mov
cmp
ja
and
mov
and
lea
mov
push
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
je
or
mov
jmp
mov
or
test
je
mov
push
call
and
cmp
mov
sete
cmp
je
mov
lea
push
push
mov
push
call
mov
test
jne
mov
jmp
push
mov
push
call
mov
test
je
or
mov
test
je
mov
push
call
mov
jmp
mov
jmp
mov
mov
and
cmp
je
push
pop
jmp
xor
push
neg
sbb
and
push
push
mov
call
cmp
mov
je
and
mov
lea
push
push
mov
push
mov
call
mov
test
je
mov
push
call
test
jne
mov
mov
push
mov
call
test
jne
mov
mov
mov
test
je
mov
push
call
test
je
mov
or
test
je
mov
push
call
mov
jmp
mov
or
test
je
mov
push
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
cmp
je
push
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
xor
push
mov
mov
mov
mov
sub
je
dec
je
sub
jne
mov
cmp
je
cmp
mov
je
mov
lea
call
mov
lea
call
xor
cmp
je
inc
cmp
jne
mov
lea
call
lea
lea
push
call
jmp
mov
cmp
je
push
push
jmp
mov
cmp
je
mov
mov
mov
and
cmp
je
push
push
lea
call
push
lea
call
or
lea
call
mov
pop
xor
pop
mov
leave
ret
mov
push
mov
xor
push
pop
shl
cmp
je
inc
cmp
jle
push
mov
test
jne
shr
add
jmp
mov
pop
jmp
test
jne
shr
mov
mov
mov
call
xor
cmp
je
inc
cmp
jne
add
mov
and
pop
pop
ret
xor
cmp
je
inc
cmp
jne
add
mov
mov
inc
inc
test
jne
ret
push
mov
sub
push
push
mov
push
mov
lea
mov
push
push
push
push
push
call
test
jne
push
lea
mov
call
test
jne
mov
lea
push
lea
push
call
test
je
xor
cmp
setne
cmp
je
push
pop
jmp
mov
lea
push
push
push
push
push
call
test
jne
mov
mov
sub
push
mov
sbb
mov
mov
lea
call
push
lea
call
xor
pop
pop
pop
leave
ret
push
mov
mov
lea
push
call
lea
push
call
xor
pop
ret
push
mov
and
mov
test
je
mov
push
call
and
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
cmp
je
push
mov
push
push
call
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
test
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
test
je
mov
push
push
push
push
push
call
test
mov
je
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
and
and
push
mov
lea
mov
push
call
test
mov
je
lea
mov
call
test
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
xor
mov
cmp
setne
add
mov
lea
push
lea
push
push
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
cmp
jne
mov
lea
push
lea
push
call
test
je
push
and
lea
lea
push
push
call
cmp
mov
jne
mov
mov
test
je
mov
push
call
xor
mov
mov
push
mov
push
call
lea
mov
mov
call
mov
mov
test
je
mov
push
call
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
jne
mov
cmp
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
mov
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
neg
lea
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
call
test
pop
je
push
mov
call
ret
xor
ret
jmp
mov
jmp
jmp
mov
jmp
sub
jmp
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
mov
mov
dec
je
sub
jne
mov
push
jmp
push
lea
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
xor
mov
push
mov
call
mov
cmp
je
mov
mov
push
mov
mov
call
mov
lea
push
push
mov
push
mov
call
cmp
je
mov
mov
cmp
je
mov
push
call
mov
and
cmp
jmp
push
lea
mov
mov
mov
call
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
lea
mov
call
push
call
pop
jmp
cmp
je
lea
mov
call
push
call
pop
jmp
push
lea
call
lea
mov
call
mov
cmp
je
mov
lea
cmp
jne
sub
sar
mov
jmp
cmp
jne
or
push
lea
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
cmp
mov
jl
inc
lea
push
push
lea
call
push
lea
mov
call
push
mov
call
pop
lea
push
push
lea
call
push
lea
mov
call
push
mov
call
pop
jmp
lea
lea
push
call
lea
lea
push
call
mov
mov
call
lea
call
lea
mov
call
and
push
pop
lea
push
push
lea
mov
call
mov
mov
mov
call
push
cmp
sete
mov
call
test
pop
je
mov
cmp
jge
mov
mov
sub
cmp
jne
inc
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
mov
test
sete
call
test
pop
je
cmp
jge
mov
mov
sub
cmp
jne
inc
jmp
cmp
jne
mov
xor
cmp
mov
je
mov
push
call
lea
lea
push
mov
call
mov
mov
cmp
je
mov
push
call
mov
lea
sub
push
lea
push
call
push
lea
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
lea
pop
push
push
lea
call
push
lea
mov
call
push
mov
call
mov
pop
mov
mov
cmp
jge
push
lea
call
jmp
dec
lea
push
lea
push
call
push
lea
mov
call
push
call
pop
mov
mov
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
lea
mov
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
jmp
cmp
je
lea
mov
call
push
call
push
call
push
call
push
call
push
call
push
call
mov
add
cmp
mov
je
mov
push
call
mov
and
cmp
je
mov
push
call
jmp
mov
mov
lea
mov
call
add
push
lea
push
adc
call
mov
xor
cmp
je
mov
push
cdq
mov
lea
mov
mov
push
push
call
mov
cmp
je
push
call
push
call
push
call
push
call
push
call
push
call
add
jmp
lea
lea
push
call
mov
mov
lea
push
mov
push
mov
push
call
mov
cmp
je
cmp
je
mov
mov
cmp
je
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
jmp
cmp
jne
mov
mov
cmp
je
mov
push
call
push
call
pop
mov
lea
call
push
call
push
call
push
call
push
call
add
lea
mov
call
and
lea
call
xor
jmp
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
lea
mov
call
lea
mov
call
push
call
pop
mov
lea
call
push
call
push
call
push
call
push
call
add
lea
mov
call
and
lea
call
mov
jmp
cmp
je
lea
mov
call
lea
mov
call
push
call
pop
mov
lea
call
push
call
push
call
push
call
push
call
add
lea
mov
call
and
lea
call
mov
jmp
mov
mov
lea
mov
call
add
push
push
lea
adc
call
lea
lea
push
call
mov
test
je
mov
push
cdq
mov
lea
mov
mov
push
push
call
mov
test
je
lea
mov
call
push
call
pop
mov
lea
call
push
call
push
call
push
call
push
call
add
lea
mov
call
and
lea
call
mov
jmp
lea
mov
call
push
mov
call
pop
xor
jmp
push
call
push
call
push
call
push
call
push
call
push
call
mov
add
test
mov
je
mov
push
call
mov
and
test
je
mov
push
call
push
pop
jmp
dec
dec
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
mov
push
xor
push
lea
mov
mov
mov
mov
call
cmp
mov
mov
je
mov
dec
cmp
jl
mov
mov
cmp
jne
lea
mov
push
lea
call
push
lea
mov
call
and
push
jmp
cmp
jne
lea
mov
push
lea
call
push
lea
mov
call
and
push
call
dec
pop
jns
lea
lea
push
mov
call
mov
push
mov
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
inc
cmp
je
cmp
jne
test
jne
push
mov
call
xor
cmp
setne
dec
and
mov
and
add
mov
mov
and
inc
test
jle
push
lea
call
dec
jne
jmp
lea
mov
push
lea
call
push
lea
mov
call
and
push
call
dec
pop
js
mov
lea
push
lea
mov
call
push
lea
mov
call
and
push
jmp
dec
cmp
jl
mov
mov
cmp
jne
lea
add
push
lea
call
push
lea
mov
call
push
and
call
cmp
pop
jne
push
lea
call
lea
mov
push
lea
mov
call
push
lea
mov
call
push
call
push
and
call
pop
pop
dec
jns
jmp
lea
inc
push
lea
call
push
lea
mov
call
and
push
call
dec
pop
js
mov
lea
push
lea
mov
call
push
lea
mov
call
and
push
jmp
push
mov
lea
call
lea
call
xor
pop
ret
mov
xor
cmp
mov
setne
mov
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
je
cmp
jbe
cmp
ja
mov
lea
push
push
call
jmp
mov
lea
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
mov
mov
push
mov
push
push
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
mov
push
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
mov
push
push
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
mov
push
push
mov
push
push
mov
mov
push
mov
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
push
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
add
adc
inc
jmp
mov
cmp
je
mov
push
call
mov
mov
push
push
call
mov
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
mov
jmp
mov
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
and
cmp
mov
je
mov
push
call
mov
mov
cmp
jge
and
mov
lea
mov
mov
push
call
mov
mov
mov
lea
mov
mov
lea
push
call
mov
mov
test
je
mov
push
call
inc
jmp
mov
call
mov
mov
mov
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
mov
push
xor
xor
xor
cmp
mov
jle
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
add
mov
push
push
push
push
push
call
test
jne
inc
mov
cmp
jl
xor
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
push
xor
mov
lea
mov
mov
push
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
neg
lea
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
push
mov
mov
and
cmp
jle
mov
sub
push
push
push
call
mov
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
mov
mov
test
mov
je
mov
push
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
mov
push
mov
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
push
mov
mov
shl
mov
mov
mov
test
je
mov
test
je
mov
push
call
push
call
pop
add
dec
jne
pop
pop
push
mov
push
call
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
mov
jmp
mov
jmp
jmp
jmp
mov
call
push
push
push
mov
push
mov
mov
lea
mov
mov
mov
mov
call
xor
lea
mov
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
pop
ret
mov
inc
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
push
call
mov
add
neg
sbb
pop
and
lea
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
cmp
mov
je
cmp
je
cmp
jne
mov
mov
lea
or
je
push
push
lea
call
jmp
mov
cmp
jne
push
push
jmp
mov
cmp
je
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
dec
je
sub
jne
mov
cmp
je
push
lea
call
jmp
mov
mov
lea
or
je
push
push
jmp
mov
mov
lea
or
je
push
push
lea
call
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
and
mov
mov
ret
push
mov
lea
mov
push
push
push
mov
call
mov
pop
ret
mov
call
mov
call
push
mov
push
mov
push
push
lea
call
push
lea
pop
call
lea
lea
mov
call
push
lea
call
mov
lea
push
xor
push
push
push
push
call
cmp
jne
mov
push
push
push
mov
call
cmp
jne
lea
call
lea
lea
push
push
push
lea
lea
mov
call
cmp
mov
jne
cmp
jbe
mov
cmp
jne
mov
lea
sub
mov
sbb
call
push
mov
pop
lea
mov
mov
mov
mov
mov
call
mov
push
mov
push
mov
mov
push
push
push
call
cmp
mov
je
mov
lea
call
mov
jmp
push
lea
call
lea
lea
call
cmp
jne
lea
lea
push
lea
push
lea
call
cmp
jne
cmp
jne
mov
and
inc
cmp
jle
lea
mov
mov
lea
call
mov
lea
mov
call
push
mov
call
add
dec
pop
jne
mov
lea
lea
call
mov
lea
mov
call
push
mov
call
mov
pop
or
je
jmp
mov
mov
push
push
push
push
push
call
cmp
mov
je
mov
lea
call
mov
jmp
push
lea
call
lea
lea
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
push
pop
jmp
mov
call
cmp
je
mov
jmp
push
lea
call
push
lea
call
mov
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
mov
mov
xor
cmp
jne
cmp
jne
push
lea
call
add
cmp
jb
cmp
jne
push
lea
pop
push
push
call
lea
lea
push
call
cmp
jbe
push
lea
call
mov
mov
cmp
jne
cmp
jne
cmp
jne
movzx
lea
call
push
lea
mov
call
mov
push
call
pop
jmp
cmp
jne
cmp
jne
cmp
jne
movzx
inc
lea
call
push
lea
mov
call
mov
push
jmp
push
lea
call
xor
cmp
jbe
mov
lea
call
inc
cmp
jb
push
lea
call
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
push
push
mov
mov
mov
shr
call
mov
push
call
mov
and
call
mov
push
call
pop
pop
ret
cmp
movzx
jae
add
ret
add
ret
push
mov
sub
and
push
mov
mov
lea
mov
call
lea
mov
push
call
mov
pop
leave
ret
mov
call
sub
push
push
push
mov
mov
xor
and
mov
mov
jne
mov
cdq
sub
mov
sar
add
call
jmp
push
lea
mov
mov
mov
call
mov
or
cdq
sub
mov
mov
sar
inc
shl
cmp
mov
jle
shr
lea
call
push
lea
mov
call
mov
push
call
pop
mov
jmp
lea
call
push
lea
mov
call
mov
push
call
pop
mov
push
mov
lea
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
cmp
je
push
call
push
mov
call
pop
pop
ret
mov
call
sub
mov
push
xor
push
mov
cmp
push
mov
mov
jbe
mov
mov
push
and
pop
shl
add
or
dec
jne
push
lea
mov
mov
mov
call
mov
xor
mov
mov
mov
shr
test
je
push
lea
mov
mov
mov
call
mov
mov
cmp
je
push
lea
call
jmp
mov
lea
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
lea
lea
call
mov
push
call
pop
add
inc
cmp
jbe
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
jmp
mov
call
push
and
push
push
mov
push
mov
mov
mov
push
call
push
mov
push
call
jmp
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
lea
push
call
lea
push
call
xor
pop
ret
push
push
mov
xor
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
cmp
je
mov
push
call
mov
mov
add
cmp
je
mov
push
call
mov
pop
pop
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
push
mov
push
push
call
mov
lea
push
push
mov
mov
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
je
push
mov
push
call
mov
cmp
je
mov
push
push
push
push
push
call
cmp
mov
je
mov
and
cmp
je
mov
push
call
mov
jmp
push
call
pop
mov
mov
cmp
mov
je
call
mov
test
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
lea
call
xor
mov
mov
mov
mov
mov
lea
mov
call
test
mov
jne
mov
call
mov
mov
call
cmp
mov
je
test
jne
mov
jmp
mov
cmp
jne
mov
and
lea
and
mov
push
push
push
push
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
mov
sub
mov
mov
sub
mov
lea
push
xor
cmp
sete
push
lea
push
mov
add
lea
push
push
mov
lea
lea
call
mov
mov
mov
add
add
add
adc
add
adc
test
jne
test
je
cmp
jne
and
jmp
mov
cmp
je
cmp
je
mov
test
je
test
jbe
mov
push
call
mov
test
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
xor
cmp
je
mov
cmp
mov
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
mov
jne
cmp
jne
lea
call
test
je
mov
sub
mov
sbb
xor
mov
test
je
mov
push
call
and
mov
push
push
mov
call
mov
mov
test
lea
je
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
mov
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
je
mov
push
pop
cmp
je
cmp
je
cmp
jle
cmp
jle
mov
call
mov
mov
lea
jmp
push
jmp
push
pop
jmp
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
lea
call
mov
call
mov
pop
jmp
mov
call
sub
push
push
push
lea
push
call
xor
cmp
jne
lea
call
mov
call
jmp
push
pop
cmp
jne
mov
cmp
jne
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
cmp
jne
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
je
mov
jmp
cmp
je
cmp
jne
cmp
je
mov
or
lea
jmp
or
lea
call
cmp
je
mov
mov
mov
lea
push
push
push
push
mov
call
cmp
jne
cmp
je
mov
jmp
push
mov
push
push
call
cmp
je
mov
or
lea
call
jmp
or
lea
call
lea
call
mov
mov
mov
mov
mov
lea
push
push
push
mov
call
cmp
mov
je
mov
or
cmp
je
mov
push
call
mov
jmp
push
lea
call
cmp
mov
jle
mov
mov
push
mov
lea
push
call
mov
call
test
je
and
cmp
jle
mov
mov
mov
lea
push
mov
lea
call
test
mov
jne
inc
mov
cmp
jl
inc
mov
cmp
jl
xor
mov
push
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
mov
or
test
je
mov
push
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
lea
call
lea
lea
push
lea
push
push
lea
call
cmp
jne
mov
push
push
call
jmp
mov
call
cmp
mov
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
jmp
mov
mov
cmp
je
mov
push
push
push
push
push
call
cmp
jne
mov
mov
push
call
mov
pop
pop
pop
mov
leave
ret
mov
call
push
mov
and
push
push
push
lea
mov
mov
call
xor
cmp
jge
mov
mov
shl
add
push
mov
push
call
test
jne
inc
jmp
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
push
call
pop
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
add
jmp
mov
call
sub
and
push
mov
push
lea
call
push
and
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
and
xor
ret
mov
call
sub
xor
mov
mov
cmp
mov
jne
mov
lea
push
push
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
mov
lea
xor
mov
push
push
push
push
push
mov
call
test
jne
push
lea
mov
call
test
jne
cmp
jne
cmp
jne
mov
lea
push
push
mov
mov
push
push
push
call
test
jne
mov
mov
sub
push
sbb
sub
mov
sbb
mov
lea
call
xor
jmp
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
xor
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
push
mov
push
push
call
mov
lea
push
push
mov
mov
call
cmp
jne
mov
xor
cmp
lea
mov
setne
mov
push
mov
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
jne
cmp
jne
xor
jmp
push
mov
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
push
call
pop
mov
mov
cmp
mov
je
call
mov
mov
jmp
mov
mov
cmp
mov
mov
je
mov
push
call
push
mov
push
mov
call
mov
mov
mov
add
push
push
mov
adc
push
push
push
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
jmp
mov
push
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
push
lea
mov
call
mov
lea
lea
push
push
push
call
cmp
je
mov
push
pop
jmp
mov
mov
mov
mov
push
push
mov
push
push
push
push
call
cmp
mov
jne
push
pop
jmp
cmp
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
xor
cmp
je
mov
push
call
mov
mov
push
push
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
call
test
pop
je
and
and
mov
ret
xor
ret
jmp
mov
jmp
sub
jmp
sub
jmp
mov
call
sub
push
push
push
mov
push
mov
lea
call
push
lea
xor
pop
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
push
mov
call
mov
lea
push
mov
call
mov
mov
xor
mov
mov
cmp
mov
jle
mov
lea
mov
mov
add
mov
mov
add
inc
cmp
jl
and
cmp
jbe
push
mov
call
push
lea
call
inc
mov
cmp
jb
mov
xor
cmp
jbe
push
mov
call
push
lea
call
inc
cmp
jb
mov
mov
and
and
mov
mov
dec
mov
js
jmp
mov
mov
mov
and
mov
sub
lea
sub
test
mov
jbe
mov
shl
mov
mov
mov
mov
add
mov
mov
mov
add
mov
inc
mov
mov
inc
cmp
jb
mov
mov
and
cmp
jbe
mov
shl
mov
mov
mov
mov
add
mov
mov
mov
add
inc
mov
mov
inc
cmp
jb
mov
mov
dec
mov
jns
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
mov
push
mov
call
and
lea
push
lea
call
lea
lea
push
mov
call
add
lea
push
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
and
lea
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
push
mov
push
mov
push
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
dec
js
mov
push
mov
lea
push
mov
call
jmp
mov
dec
js
mov
mov
mov
lea
mov
mov
mov
push
push
mov
call
jmp
xor
cmp
jle
mov
mov
mov
push
mov
call
inc
cmp
jl
xor
cmp
jle
mov
mov
mov
push
mov
call
inc
cmp
jl
pop
pop
pop
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
push
mov
mov
mov
lea
pop
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
push
mov
call
push
mov
call
push
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
pop
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
push
push
mov
push
mov
lea
push
call
xor
mov
mov
mov
mov
push
lea
pop
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
mov
mov
call
push
mov
call
push
mov
call
push
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
call
ret
push
push
mov
push
lea
mov
call
lea
call
xor
cmp
jbe
mov
cmp
lea
je
mov
lea
mov
mov
mov
mov
push
call
inc
cmp
jb
xor
cmp
jbe
mov
cmp
lea
je
mov
lea
mov
mov
lea
mov
push
call
inc
cmp
jb
mov
test
je
push
mov
mov
push
mov
push
mov
push
mov
push
push
call
jmp
push
mov
push
mov
push
push
push
push
push
push
call
xor
mov
cmp
jle
mov
mov
mov
test
je
mov
push
call
and
inc
cmp
jl
xor
cmp
jle
mov
mov
mov
test
je
mov
push
call
and
inc
cmp
jl
pop
pop
pop
ret
push
mov
mov
push
lea
lea
push
call
push
mov
lea
lea
push
call
pop
ret
push
mov
push
push
mov
mov
mov
call
mov
call
mov
test
jbe
push
mov
mov
test
je
mov
test
je
push
mov
push
call
mov
mov
lea
push
jmp
push
push
mov
call
push
mov
call
add
dec
jne
pop
pop
pop
pop
ret
mov
call
sub
push
push
push
mov
push
mov
lea
call
lea
mov
call
xor
cmp
mov
jle
mov
mov
mov
push
mov
call
cmp
pop
je
push
lea
pop
mov
rep
mov
xor
jmp
xor
push
mov
call
or
lea
call
mov
mov
mov
call
cmp
jne
inc
mov
cmp
jl
xor
mov
pop
pop
pop
mov
leave
ret
push
push
push
mov
call
mov
mov
push
call
lea
mov
call
lea
mov
push
call
lea
mov
call
lea
mov
push
call
lea
mov
call
add
mov
push
call
mov
pop
pop
pop
ret
push
mov
lea
call
lea
call
mov
pop
jmp
mov
call
sub
push
mov
mov
mov
push
lea
lea
push
call
and
lea
push
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
and
mov
call
or
mov
add
neg
sbb
and
call
mov
pop
pop
mov
leave
ret
push
mov
call
mov
mov
push
mov
add
call
pop
ret
push
mov
call
mov
mov
push
mov
add
call
pop
ret
push
push
mov
xor
cmp
jle
mov
mov
call
inc
cmp
jl
pop
pop
ret
mov
call
sub
push
push
mov
xor
push
mov
mov
test
jle
jmp
mov
mov
mov
mov
lea
lea
call
and
cmp
jbe
and
and
lea
push
lea
call
mov
or
test
je
mov
push
call
inc
mov
cmp
jb
add
mov
call
and
cmp
jbe
and
lea
mov
push
mov
call
mov
or
test
je
mov
push
call
inc
mov
cmp
jb
inc
mov
cmp
jl
xor
cmp
jle
mov
lea
lea
lea
push
lea
push
push
call
lea
lea
push
lea
push
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
push
mov
call
and
and
mov
mov
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
mov
push
push
push
call
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
push
push
push
call
mov
test
je
cmp
je
mov
mov
push
push
push
call
mov
push
push
mov
push
call
mov
mov
mov
test
je
mov
push
call
mov
or
test
je
mov
push
call
inc
cmp
jl
xor
cmp
jle
lea
lea
mov
push
lea
push
mov
push
call
mov
mov
push
mov
mov
mov
mov
mov
call
inc
cmp
jl
xor
cmp
jle
lea
lea
mov
push
lea
push
mov
push
call
mov
mov
push
mov
mov
mov
mov
mov
call
inc
cmp
jl
mov
pop
pop
xor
pop
mov
leave
ret
push
mov
mov
push
push
and
cmp
jbe
mov
mov
mov
mov
cmp
jb
sub
inc
mov
cmp
jb
lea
push
push
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
push
push
and
cmp
jbe
mov
mov
mov
mov
cmp
jb
sub
inc
mov
cmp
jb
lea
push
push
mov
call
mov
mov
pop
pop
pop
ret
mov
push
xor
push
test
jle
mov
mov
mov
cmp
je
inc
add
cmp
jl
xor
pop
pop
ret
push
mov
mov
push
mov
push
cmp
jne
mov
cmp
jne
push
mov
push
call
xor
cmp
jle
cmp
je
mov
mov
call
test
jne
inc
cmp
jl
xor
cmp
jle
cmp
je
mov
mov
call
inc
cmp
jl
mov
mov
push
mov
call
xor
cmp
jle
cmp
je
mov
mov
mov
call
inc
cmp
jl
push
mov
call
test
jne
push
mov
call
test
jne
mov
xor
test
jle
mov
mov
mov
test
je
cmp
je
cmp
jne
inc
add
cmp
jl
push
mov
call
test
jne
mov
xor
test
jle
mov
mov
mov
test
jne
inc
add
cmp
jl
xor
jmp
mov
pop
pop
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
mov
mov
test
mov
je
mov
push
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
mov
mov
test
mov
je
mov
push
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
mov
push
mov
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
push
mov
mov
shl
mov
mov
mov
test
je
mov
test
je
mov
push
call
push
call
pop
add
dec
jne
pop
pop
push
mov
push
call
pop
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
mov
mov
neg
lea
sbb
and
lea
push
call
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
push
mov
call
lea
lea
push
mov
call
lea
lea
push
mov
call
add
lea
push
mov
call
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
and
test
mov
je
mov
push
call
mov
lea
mov
mov
mov
lea
push
mov
call
lea
lea
push
mov
call
lea
lea
push
mov
call
add
lea
push
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
test
jne
mov
jmp
lea
mov
push
push
push
push
call
mov
add
mov
adc
pop
test
je
mov
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
push
call
cmp
je
mov
jmp
push
push
push
call
add
test
je
mov
mov
mov
push
lea
mov
call
mov
mov
mov
lea
mov
inc
push
push
push
call
add
mov
and
mov
test
je
mov
cmp
ja
jb
mov
cmp
ja
lea
mov
push
mov
mov
sub
push
mov
add
push
push
call
test
jne
add
cmp
mov
je
cmp
jb
sub
push
pop
inc
mov
je
jmp
mov
mov
mov
mov
cmp
je
cmp
jae
inc
mov
jmp
cmp
je
push
add
push
push
call
add
test
je
inc
cmp
jb
mov
add
adc
sub
push
add
push
push
call
mov
add
jmp
push
mov
call
pop
push
pop
jmp
mov
push
mov
call
push
mov
call
pop
mov
pop
jmp
push
pop
jmp
mov
push
add
pop
push
mov
adc
call
pop
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
jmp
mov
mov
ret
mov
push
lea
mov
call
test
jne
mov
mov
call
test
jne
xor
pop
ret
push
pop
pop
ret
mov
call
neg
sbb
inc
ret
mov
call
sub
push
push
mov
push
mov
cmp
jne
push
lea
call
mov
call
test
je
cmp
jb
mov
jmp
cmp
jb
mov
jmp
cmp
jb
mov
jmp
cmp
sbb
and
add
cmp
mov
sbb
inc
cmp
sbb
and
add
cmp
jae
mov
and
mov
mov
mov
mov
and
lea
push
push
pop
call
or
lea
mov
call
and
mov
mov
mov
lea
push
push
pop
mov
mov
call
lea
mov
call
and
mov
mov
lea
mov
push
push
pop
mov
call
lea
mov
call
push
lea
call
lea
mov
push
push
pop
mov
call
lea
mov
call
mov
and
mov
mov
lea
mov
push
push
pop
mov
call
mov
lea
jmp
add
mov
call
test
je
cmp
jb
mov
jmp
cmp
sbb
and
add
cmp
jb
push
pop
jmp
cmp
sbb
and
add
cmp
mov
sbb
and
inc
mov
mov
lea
push
push
pop
mov
call
or
lea
mov
call
and
mov
mov
mov
lea
push
push
pop
mov
call
lea
mov
call
and
mov
mov
mov
lea
push
push
pop
mov
call
mov
lea
jmp
mov
mov
call
test
je
push
pop
cmp
jb
push
pop
jmp
cmp
sbb
inc
inc
cmp
jb
mov
jmp
cmp
sbb
and
add
and
mov
mov
mov
lea
push
push
pop
mov
call
or
lea
mov
call
and
mov
mov
mov
lea
push
push
pop
mov
call
lea
mov
call
mov
and
mov
mov
mov
lea
push
push
pop
mov
call
mov
lea
jmp
mov
mov
call
test
je
cmp
jb
mov
jmp
cmp
jb
mov
jmp
cmp
sbb
and
add
cmp
jb
push
pop
jmp
cmp
jb
push
jmp
cmp
sbb
and
add
and
mov
mov
mov
lea
push
push
pop
mov
call
or
lea
mov
call
and
mov
mov
mov
lea
push
push
pop
mov
call
mov
lea
call
mov
pop
pop
pop
mov
leave
ret
mov
push
mov
call
test
jne
mov
mov
call
test
jne
xor
pop
ret
push
pop
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
xor
mov
mov
push
lea
mov
mov
call
lea
mov
push
call
or
lea
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
call
cmp
jge
mov
jmp
lea
lea
mov
cmp
mov
je
cmp
je
cmp
je
mov
mov
mov
mov
cmp
jne
mov
push
jmp
cmp
jne
mov
lea
call
test
je
push
lea
call
jmp
mov
lea
mov
mov
call
cmp
jne
push
lea
call
jmp
push
lea
call
mov
sub
lea
mov
movs
movs
movs
lea
movs
call
test
jne
and
lea
call
or
lea
call
mov
jmp
and
lea
call
xor
jmp
mov
lea
call
mov
cmp
jne
push
lea
call
mov
lea
push
call
xor
or
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
cmp
push
mov
jne
lea
mov
push
call
jmp
cmp
jne
cmp
jne
cmp
ja
push
mov
call
jmp
cmp
jne
lea
lea
call
test
jne
push
mov
call
mov
jmp
xor
pop
leave
ret
push
push
push
mov
xor
mov
mov
mov
call
test
je
add
inc
cmp
jb
or
pop
pop
pop
ret
mov
jmp
mov
call
sub
push
push
mov
push
push
lea
call
mov
mov
xor
lea
mov
call
cmp
jle
mov
push
mov
lea
call
push
pop
cmp
jle
mov
push
lea
mov
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
lea
lea
push
mov
mov
call
lea
mov
push
lea
push
push
call
push
mov
cmp
jne
call
push
mov
call
inc
pop
cmp
pop
jl
mov
lea
mov
call
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
call
push
call
pop
mov
pop
lea
mov
call
or
lea
call
mov
jmp
mov
call
sub
push
push
mov
push
mov
mov
call
xor
lea
push
mov
mov
mov
call
mov
mov
cmp
je
mov
jle
mov
mov
mov
cmp
jne
mov
lea
push
call
mov
mov
mov
jmp
push
lea
call
inc
cmp
jl
mov
lea
push
call
push
call
pop
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
push
mov
mov
push
call
mov
test
jl
lea
push
push
mov
call
and
push
mov
call
or
push
call
pop
inc
lea
push
push
mov
call
mov
push
mov
call
push
jmp
mov
xor
test
jle
mov
mov
cmp
jb
cmp
jbe
inc
cmp
jl
push
mov
call
mov
pop
pop
pop
mov
leave
ret
lea
push
push
mov
call
push
mov
mov
call
or
push
call
pop
lea
push
push
mov
call
mov
push
mov
call
push
call
pop
jmp
mov
call
sub
push
push
push
mov
push
lea
call
mov
xor
mov
call
cmp
mov
jle
mov
lea
lea
mov
lea
mov
call
mov
cmp
jne
mov
inc
cmp
jne
mov
jmp
sub
sar
add
mov
cmp
je
mov
inc
mov
movzx
sub
je
sub
je
dec
je
sub
je
dec
dec
jne
push
jmp
push
jmp
push
pop
call
mov
mov
mov
mov
cmp
jl
jmp
test
ja
jb
cmp
jae
push
xor
pop
mov
mov
jmp
push
jmp
push
jmp
push
call
pop
mov
jmp
push
call
pop
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
xor
mov
movzx
cmp
je
cmp
je
cmp
je
mov
jmp
cmp
setne
jmp
push
lea
call
lea
lea
mov
call
push
or
mov
call
cmp
pop
jne
push
lea
call
lea
mov
push
mov
call
push
mov
call
pop
mov
jmp
mov
cmp
je
or
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
mov
pop
pop
pop
mov
leave
ret
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
call
or
or
and
mov
mov
pop
ret
mov
call
sub
push
push
push
mov
push
lea
call
mov
xor
mov
call
cmp
jne
mov
jmp
mov
mov
cmp
jne
push
push
lea
call
lea
push
mov
jmp
cmp
jne
push
push
lea
call
cmp
jne
push
mov
call
mov
jmp
mov
cmp
jne
lea
mov
push
call
jmp
mov
call
cmp
jne
add
push
push
lea
mov
call
push
mov
lea
call
jmp
lea
lea
call
mov
lea
push
push
lea
call
cmp
mov
jne
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
test
pop
je
lea
push
push
lea
call
mov
push
push
mov
mov
call
push
mov
call
cmp
pop
jne
jmp
mov
mov
call
cmp
jne
mov
lea
jmp
mov
mov
call
cmp
jne
mov
lea
jmp
mov
mov
call
cmp
jne
mov
lea
jmp
mov
mov
call
cmp
jne
mov
lea
mov
call
cmp
je
mov
jmp
cmp
jne
mov
jmp
mov
mov
call
cmp
jne
mov
lea
call
cmp
je
mov
jmp
mov
jmp
mov
mov
call
cmp
jne
mov
lea
call
jmp
mov
mov
call
cmp
jne
mov
lea
jmp
mov
mov
call
cmp
jne
mov
lea
jmp
mov
mov
call
cmp
jne
mov
lea
jmp
mov
cmp
jbe
mov
jmp
mov
cmp
jae
mov
jmp
mov
sub
cmp
jg
lea
lea
call
mov
lea
mov
call
lea
mov
push
mov
call
lea
mov
call
inc
cmp
jle
mov
mov
xor
mov
cmp
mov
jne
mov
cmp
jne
push
lea
call
lea
mov
push
push
mov
call
push
mov
call
cmp
pop
je
jmp
lea
call
cmp
jl
lea
mov
mov
lea
mov
mov
cmp
mov
je
cmp
je
cmp
je
lea
call
cmp
jl
mov
sub
mov
lea
movs
mov
lea
movs
movs
mov
mov
lea
movs
call
test
jne
lea
mov
call
push
call
push
call
pop
mov
pop
jmp
mov
xor
cmp
je
inc
inc
inc
jmp
lea
push
push
lea
call
mov
lea
push
mov
mov
call
push
mov
mov
call
cmp
pop
je
lea
mov
call
push
call
push
call
pop
mov
pop
jmp
push
lea
call
mov
cmp
ja
mov
mov
mov
lea
push
call
lea
mov
call
xor
push
call
pop
push
call
pop
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
and
push
push
push
mov
mov
push
lea
call
push
and
lea
mov
push
call
mov
mov
mov
call
test
push
sete
and
call
test
pop
jne
push
or
call
inc
add
cmp
pop
jb
or
mov
pop
pop
pop
mov
leave
ret
push
call
mov
pop
jmp
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
mov
mov
add
mov
push
lea
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
add
lea
push
mov
call
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
mov
push
mov
lea
push
mov
push
push
mov
push
push
call
mov
mov
add
adc
cmp
jbe
test
jne
mov
mov
mov
push
call
mov
mov
test
je
mov
mov
mov
pop
pop
pop
ret
push
mov
push
mov
lea
push
mov
push
push
mov
push
push
call
mov
mov
mov
mov
add
push
adc
call
mov
mov
test
je
mov
mov
mov
pop
pop
pop
ret
push
mov
xor
cmp
jne
mov
or
jne
mov
push
or
mov
mov
mov
push
push
mov
push
push
call
jmp
mov
pop
ret
mov
call
sub
and
push
mov
push
lea
call
and
push
push
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
and
push
mov
push
lea
call
and
push
push
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
mov
leave
ret
mov
call
sub
push
push
xor
mov
cmp
mov
jne
push
mov
mov
mov
call
jmp
lea
call
mov
mov
mov
cmp
jne
dec
push
push
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
pop
mov
leave
ret
push
mov
test
jne
xor
pop
ret
mov
push
add
push
push
push
call
xor
cmp
pop
sete
mov
ret
push
mov
sub
mov
push
push
push
xor
cmp
je
mov
cmp
je
mov
mov
mov
mov
mov
cmp
mov
jb
ja
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
ja
jb
cmp
jae
mov
jmp
mov
mov
add
adc
cmp
jb
ja
mov
cmp
jb
inc
mov
mov
mov
add
cdq
sub
sar
jmp
mov
mov
mov
mov
sub
sbb
cmp
mov
mov
lea
mov
jne
cmp
je
mov
push
push
push
push
mov
push
call
test
jne
mov
mov
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
mov
lea
push
push
mov
push
push
call
mov
xor
add
adc
add
mov
adc
test
je
mov
mov
pop
pop
pop
leave
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
lea
add
mov
adc
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
push
mov
push
mov
push
xor
mov
test
je
lea
mov
push
push
push
push
call
mov
cmp
je
push
mov
mov
call
mov
mov
mov
add
adc
test
je
mov
mov
pop
pop
pop
ret
push
mov
sub
mov
push
cmp
mov
jne
cmp
jne
mov
jmp
test
jne
cmp
je
push
mov
lea
mov
call
mov
mov
sub
pop
sar
cmp
jne
mov
mov
xor
jmp
mov
pop
leave
ret
mov
call
sub
push
push
push
push
mov
lea
call
mov
and
call
mov
lea
mov
call
mov
sub
sar
je
mov
lea
cmp
jg
cmp
jne
test
ja
cmp
jae
push
mov
pop
shl
mov
xor
jmp
mov
movzx
sub
je
sub
je
dec
dec
jne
test
ja
cmp
jae
shl
jmp
test
ja
cmp
jae
shl
jmp
cmp
jb
ja
test
jae
mov
jmp
mov
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
cmp
jne
mov
cmp
jne
mov
cmp
jae
push
pop
shl
mov
mov
xor
jmp
cmp
jne
push
lea
push
call
mov
and
lea
call
mov
push
call
pop
mov
pop
jmp
mov
jmp
mov
call
mov
mov
leave
ret
push
mov
push
mov
cmp
je
mov
mov
call
test
je
mov
mov
call
test
je
mov
mov
call
test
je
mov
mov
call
test
je
xor
jmp
and
jmp
mov
mov
pop
pop
ret
mov
call
sub
movzx
push
mov
test
je
cmp
je
cmp
je
mov
jmp
cmp
setne
mov
jmp
push
lea
call
and
mov
lea
call
neg
push
sbb
and
add
mov
call
pop
mov
jmp
mov
xor
mov
pop
mov
leave
ret
push
mov
push
push
mov
push
mov
lea
mov
call
test
ja
cmp
jbe
and
xor
jmp
mov
mov
sub
sar
pop
pop
leave
ret
push
mov
push
push
mov
cmp
jne
cmp
je
lea
call
test
jne
cmp
je
mov
jmp
push
pop
mov
mov
jmp
mov
jmp
lea
mov
call
cmp
je
mov
jmp
mov
mov
mov
xor
pop
leave
ret
push
mov
lea
call
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
xor
pop
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
call
sub
push
push
mov
push
mov
mov
mov
call
test
je
mov
xor
lea
mov
call
mov
lea
mov
mov
call
push
lea
mov
call
mov
mov
cmp
jle
mov
mov
jmp
mov
push
call
cmp
pop
je
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
lea
push
mov
mov
mov
mov
mov
mov
add
mov
mov
adc
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
mov
lea
mov
mov
push
lea
mov
mov
call
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
inc
mov
mov
add
cmp
jl
mov
mov
lea
mov
mov
call
lea
mov
call
lea
mov
mov
call
cmp
je
lea
lea
call
neg
sbb
inc
mov
je
lea
call
mov
lea
cmp
je
mov
push
call
mov
cmp
je
push
call
pop
mov
cmp
mov
je
mov
call
jmp
xor
push
mov
mov
mov
call
mov
cmp
je
add
jmp
xor
mov
mov
lea
push
mov
call
mov
cmp
je
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
mov
jmp
cmp
mov
jle
mov
mov
mov
mov
mov
mov
push
lea
push
lea
mov
push
call
cmp
mov
jne
mov
cmp
mov
jne
cmp
jne
mov
cmp
je
push
lea
call
cmp
je
push
mov
call
jmp
cmp
je
push
lea
call
cmp
je
push
mov
call
lea
lea
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
inc
mov
cmp
jl
lea
lea
push
call
mov
mov
mov
call
cmp
mov
mov
mov
jle
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
mov
mov
cmp
mov
ja
mov
push
mov
mov
push
push
call
cmp
mov
jne
mov
cmp
mov
je
mov
push
call
cmp
je
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
push
mov
push
call
cmp
mov
jne
mov
cmp
mov
je
mov
push
call
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
mov
cmp
je
mov
mov
lea
push
push
mov
call
mov
cmp
jne
mov
mov
mov
mov
push
lea
mov
mov
call
mov
lea
mov
lea
push
call
cmp
mov
jle
mov
mov
mov
add
mov
mov
xor
inc
mov
mov
mov
mov
cmp
jl
mov
push
push
mov
push
call
push
mov
cmp
jne
call
push
mov
call
pop
pop
push
call
mov
cmp
mov
je
mov
push
call
mov
add
push
mov
mov
mov
lea
mov
call
mov
mov
push
lea
mov
call
mov
push
lea
mov
call
push
lea
call
cmp
jbe
mov
mov
mov
mov
mov
lea
lea
push
call
inc
dec
jne
jmp
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
mov
jmp
mov
mov
cmp
je
mov
push
call
mov
cmp
mov
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
lea
mov
call
or
lea
call
mov
jmp
mov
cmp
mov
jbe
mov
mov
cmp
jle
mov
mov
cmp
je
inc
add
cmp
jl
or
cmp
jl
mov
mov
mov
jmp
mov
jmp
mov
mov
cmp
jle
mov
mov
cmp
je
inc
add
cmp
jl
or
cmp
jl
mov
lea
lea
push
call
inc
inc
mov
cmp
jb
push
mov
mov
push
mov
push
call
lea
mov
call
lea
mov
call
inc
cmp
mov
jl
jmp
mov
jmp
cmp
mov
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
lea
mov
call
or
lea
call
mov
jmp
cmp
mov
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
mov
jmp
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
jmp
call
push
mov
call
pop
pop
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
lea
call
or
lea
call
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
lea
mov
call
or
lea
call
mov
jmp
lea
lea
push
lea
push
mov
push
call
cmp
je
mov
mov
mov
cmp
jne
lea
mov
call
lea
mov
call
lea
mov
push
call
lea
call
mov
mov
lea
call
or
lea
call
mov
jmp
push
lea
call
mov
push
lea
mov
call
xor
cmp
jle
mov
lea
mov
push
call
inc
cmp
jl
push
mov
lea
mov
mov
push
push
push
push
mov
push
push
push
call
lea
mov
mov
call
lea
mov
call
lea
mov
call
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
call
lea
call
xor
cmp
jle
mov
push
mov
lea
push
lea
call
inc
cmp
jl
xor
cmp
mov
mov
jle
mov
mov
mov
mov
mov
mov
push
push
call
push
mov
push
lea
call
test
jbe
push
mov
call
test
jge
mov
push
lea
call
inc
dec
jne
inc
mov
cmp
jl
mov
xor
cmp
jle
add
mov
mov
push
call
inc
cmp
jl
pop
pop
pop
leave
ret
push
mov
call
lea
call
lea
call
lea
call
pop
ret
mov
xor
test
push
jle
mov
add
mov
cmp
je
inc
add
cmp
jl
or
pop
ret
push
push
push
mov
push
mov
mov
cmp
je
xor
jmp
xor
test
jle
mov
mov
mov
shl
add
add
call
test
je
inc
cmp
jl
mov
cmp
jne
xor
test
jle
mov
shl
mov
add
add
call
test
je
inc
cmp
jl
mov
xor
test
jle
mov
mov
sub
mov
cmp
jne
mov
cmp
jne
inc
add
cmp
jl
mov
cmp
jne
mov
cmp
sete
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
push
pop
ret
xor
ret
mov
call
push
push
mov
mov
and
lea
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
lea
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
push
xor
mov
mov
lea
mov
call
push
lea
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
mov
mov
push
mov
call
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
or
lea
call
mov
pop
pop
mov
leave
ret
push
mov
push
push
mov
push
call
lea
mov
call
add
mov
push
call
mov
pop
pop
pop
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
mov
mov
test
mov
je
mov
push
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
call
pop
mov
xor
cmp
mov
je
mov
call
jmp
xor
or
push
lea
mov
call
mov
lea
push
lea
mov
call
cmp
jne
cmp
mov
jle
mov
mov
mov
mov
lea
call
lea
lea
push
mov
call
push
mov
call
mov
pop
mov
mov
mov
mov
mov
mov
and
and
mov
push
lea
push
lea
mov
push
call
test
mov
jne
mov
test
jne
mov
test
je
mov
test
mov
je
mov
push
call
mov
and
mov
lea
push
push
push
mov
call
mov
test
je
push
mov
push
call
test
mov
jne
mov
test
mov
je
mov
push
call
push
mov
mov
call
mov
test
jne
and
mov
lea
push
push
mov
push
mov
call
xor
cmp
je
mov
mov
mov
mov
lea
mov
lea
push
call
xor
cmp
jle
mov
mov
mov
mov
xor
mov
mov
mov
inc
cmp
jl
mov
push
push
mov
push
call
mov
test
jne
push
mov
mov
call
mov
pop
cmp
je
push
mov
call
jmp
mov
jmp
push
mov
call
mov
mov
test
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
or
test
je
mov
push
call
inc
mov
cmp
jl
xor
mov
pop
pop
pop
mov
leave
ret
mov
mov
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
mov
jmp
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
push
mov
call
mov
pop
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
push
mov
call
pop
ret
mov
call
sub
push
push
push
mov
call
test
jne
cmp
jne
push
mov
call
test
jne
mov
lea
mov
call
lea
call
mov
and
lea
call
mov
push
lea
pop
mov
call
mov
mov
mov
mov
mov
cmp
mov
jle
lea
call
push
lea
mov
call
lea
mov
call
mov
mov
mov
call
mov
mov
mov
call
inc
cmp
jl
mov
cmp
jle
push
call
test
pop
je
and
mov
mov
jmp
xor
test
mov
je
mov
push
call
mov
lea
mov
mov
mov
lea
push
call
push
call
test
pop
je
mov
jmp
xor
push
lea
call
mov
mov
test
je
mov
push
call
inc
cmp
jl
xor
xor
cmp
jle
mov
push
add
push
push
mov
call
inc
cmp
jl
cmp
jne
mov
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
mov
mov
jmp
lea
lea
push
lea
push
mov
push
call
cmp
je
push
lea
call
mov
mov
mov
xor
mov
cmp
jbe
cmp
jne
push
jmp
push
lea
call
mov
mov
inc
cmp
jb
mov
push
push
add
mov
push
call
lea
mov
call
push
call
pop
mov
cmp
mov
je
mov
call
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
call
cmp
pop
je
and
and
mov
mov
jmp
xor
test
mov
je
mov
push
call
push
mov
mov
call
push
lea
call
and
and
push
lea
call
mov
push
lea
mov
call
mov
push
lea
mov
call
push
lea
call
push
pop
cmp
jle
mov
lea
mov
push
call
inc
cmp
jl
mov
and
test
jle
mov
mov
mov
shl
mov
and
mov
mov
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
push
push
push
call
mov
test
je
mov
push
call
and
mov
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
push
push
push
call
cmp
je
push
call
test
pop
je
xor
mov
mov
mov
mov
mov
mov
jmp
xor
test
mov
je
mov
push
call
and
mov
push
push
mov
mov
call
mov
mov
add
push
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
inc
mov
cmp
jl
mov
mov
push
pop
cmp
jle
mov
mov
mov
mov
mov
cmp
jne
test
je
cmp
jne
test
je
cmp
jne
test
jne
mov
add
inc
mov
cmp
jl
mov
push
mov
push
mov
push
push
mov
push
push
push
push
call
mov
test
je
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
mov
mov
jmp
sub
lea
mov
mov
push
call
mov
lea
call
push
mov
mov
push
call
push
pop
cmp
mov
jle
mov
mov
push
mov
mov
call
test
mov
jne
push
mov
mov
push
call
inc
mov
cmp
jl
mov
xor
cmp
jle
mov
and
test
jle
mov
mov
mov
mov
mov
cmp
je
inc
add
cmp
jl
jmp
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
mov
mov
jmp
mov
jmp
or
test
jge
mov
jmp
mov
mov
mov
mov
mov
push
mov
push
lea
call
mov
inc
cmp
jl
mov
lea
test
jl
sub
lea
mov
mov
mov
mov
mov
mov
add
mov
push
add
call
add
dec
test
jge
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
mov
xor
lea
call
or
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
add
jmp
mov
test
je
mov
push
call
ret
push
push
mov
push
push
lea
mov
call
lea
push
mov
call
mov
push
push
push
mov
call
and
and
pop
pop
pop
ret
mov
call
sub
push
push
push
mov
mov
xor
mov
mov
call
lea
mov
call
lea
call
cmp
jle
mov
push
mov
lea
push
lea
call
inc
cmp
jl
and
cmp
jle
mov
and
and
mov
mov
mov
mov
shl
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
and
mov
push
call
inc
pop
mov
cmp
jl
xor
cmp
jle
mov
mov
push
call
inc
cmp
jl
or
lea
call
mov
pop
pop
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
jne
lea
push
push
mov
call
push
mov
call
mov
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
jmp
mov
call
push
push
mov
mov
push
and
call
pop
lea
call
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
push
push
push
mov
call
mov
mov
push
call
lea
mov
call
lea
mov
push
call
mov
add
mov
mov
push
lea
mov
call
mov
pop
pop
pop
ret
mov
call
sub
push
push
mov
push
xor
cmp
jne
mov
cmp
jne
cmp
jne
lea
push
push
mov
call
cmp
je
lea
push
push
mov
call
lea
call
push
lea
pop
lea
push
mov
mov
mov
mov
mov
call
push
lea
pop
push
push
pop
push
call
push
lea
call
push
lea
call
lea
mov
mov
lea
mov
call
or
lea
call
jmp
cmp
mov
mov
mov
jle
mov
mov
cmp
mov
mov
mov
mov
jne
dec
cmp
jge
mov
push
add
lea
push
call
jmp
lea
push
mov
call
mov
mov
mov
mov
push
pop
cmp
mov
jbe
mov
mov
add
lea
push
call
inc
cmp
jb
add
add
push
push
lea
call
mov
inc
cmp
jl
xor
mov
cmp
je
and
test
jle
and
mov
xor
add
mov
test
jbe
mov
add
add
dec
jne
mov
mov
add
xor
test
jbe
mov
add
add
add
dec
jne
mov
lea
add
push
push
call
inc
mov
add
cmp
jl
xor
cmp
jle
mov
xor
test
jle
mov
add
cmp
je
inc
add
cmp
jl
or
cmp
jne
push
lea
call
inc
cmp
jl
xor
cmp
jle
mov
xor
test
jle
mov
cmp
je
inc
add
cmp
jl
or
cmp
jne
push
lea
call
inc
cmp
jl
cmp
jne
lea
push
push
mov
call
mov
mov
lea
push
lea
push
push
lea
call
mov
xor
test
jbe
mov
add
add
add
dec
jne
mov
xor
test
jle
mov
add
cmp
je
inc
add
cmp
jl
or
test
jl
mov
mov
jmp
mov
jmp
mov
xor
test
jle
mov
cmp
je
inc
add
cmp
jl
jmp
mov
lea
push
push
mov
call
push
mov
call
mov
mov
cmp
je
mov
xor
test
mov
jle
mov
mov
add
push
lea
push
call
inc
cmp
jl
lea
call
xor
test
jle
lea
mov
mov
push
lea
call
mov
push
and
pop
lea
mov
mov
lea
mov
push
mov
call
push
lea
pop
push
push
call
mov
lea
add
push
call
mov
lea
mov
call
or
lea
call
inc
cmp
jl
mov
dec
test
jl
lea
mov
mov
mov
push
push
call
dec
jns
push
call
pop
mov
mov
test
mov
je
lea
push
call
jmp
xor
or
lea
push
mov
mov
call
mov
mov
pop
pop
xor
pop
mov
leave
ret
mov
call
push
push
lea
mov
mov
and
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
mov
mov
test
je
mov
call
push
call
pop
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
and
and
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
push
mov
push
mov
mov
lea
cmp
jle
sub
mov
test
jle
push
mov
shl
mov
mov
mov
push
call
add
dec
pop
jne
pop
mov
push
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
and
and
lea
push
mov
call
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
push
mov
mov
lea
mov
lea
push
call
add
lea
movs
movs
and
movs
movs
mov
lea
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
push
push
mov
mov
push
push
mov
mov
add
push
call
test
jle
and
mov
mov
sub
add
mov
mov
movs
movs
movs
movs
call
add
dec
jne
pop
pop
mov
pop
pop
pop
ret
push
push
push
mov
call
mov
mov
shl
add
lea
movs
movs
movs
movs
mov
pop
pop
lea
mov
pop
ret
sub
jmp
mov
call
sub
push
xor
cmp
push
push
mov
setne
mov
mov
cmp
mov
mov
je
mov
push
call
cmp
mov
mov
mov
sete
cmp
je
mov
mov
mov
cmp
jne
mov
and
cmp
je
mov
push
call
jmp
lea
call
mov
xor
mov
mov
cmp
jae
cmp
jne
mov
mov
mov
mov
mov
mov
cmp
jne
push
push
lea
call
push
lea
mov
call
lea
mov
call
mov
inc
xor
mov
jmp
mov
cmp
je
mov
mov
cmp
je
or
lea
mov
call
mov
mov
lea
lea
push
mov
call
lea
mov
call
mov
mov
call
mov
mov
mov
add
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
ja
sete
push
lea
call
inc
jmp
push
mov
push
mov
push
call
mov
cmp
je
mov
mov
lea
call
lea
mov
call
mov
and
cmp
jmp
push
lea
call
push
mov
mov
mov
mov
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
mov
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
jmp
cmp
jl
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
xor
jmp
mov
push
mov
mov
mov
mov
mov
mov
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
test
mov
mov
mov
je
mov
push
call
mov
mov
lea
mov
cmp
jne
mov
mov
mov
mov
cmp
setne
push
lea
push
push
push
push
push
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
mov
and
test
je
mov
push
call
mov
jmp
cmp
je
mov
mov
test
je
mov
push
call
jmp
mov
mov
mov
push
shl
mov
mov
mov
call
mov
mov
mov
mov
mov
shl
mov
add
mov
adc
and
mov
mov
mov
test
je
mov
lea
push
push
push
call
mov
mov
push
mov
lea
push
push
push
mov
add
push
push
push
push
push
push
push
lea
call
mov
cmp
jne
mov
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
lea
call
lea
mov
call
jmp
cmp
jne
mov
push
call
mov
mov
test
mov
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
jmp
test
je
mov
push
call
mov
mov
test
je
mov
push
call
jmp
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
jmp
mov
mov
mov
cmp
je
push
call
mov
mov
test
je
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
mov
and
test
je
mov
push
call
mov
jmp
lea
call
lea
mov
call
mov
jmp
mov
jmp
mov
push
call
test
mov
je
mov
ret
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
mov
ret
mov
lea
call
lea
mov
call
mov
inc
add
mov
mov
mov
adc
mov
add
mov
adc
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
jne
xor
pop
pop
leave
ret
lea
test
jl
push
mov
call
test
jl
dec
jns
lea
push
push
mov
call
mov
mov
mov
jmp
mov
mov
shl
push
push
mov
mov
xor
mov
xor
mov
test
jle
mov
push
lea
mov
mov
add
adc
add
dec
jne
pop
mov
pop
pop
ret
mov
call
push
mov
push
push
mov
mov
mov
mov
lea
xor
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
je
push
mov
call
push
mov
call
mov
mov
pop
pop
mov
leave
ret
add
jmp
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
mov
and
test
je
mov
push
call
add
mov
lea
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
xor
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
push
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
lea
mov
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
mov
push
lea
call
mov
and
mov
mov
lea
mov
call
lea
call
lea
call
and
and
pop
ret
mov
call
push
push
push
push
mov
xor
push
mov
mov
mov
cmp
jae
mov
mov
lea
push
mov
mov
mov
push
push
call
mov
cmp
mov
je
cmp
jne
mov
push
inc
lea
call
mov
or
mov
mov
mov
mov
cmp
jne
mov
push
push
mov
call
mov
cmp
jne
push
push
lea
call
cmp
lea
sete
push
call
mov
call
mov
or
cmp
je
mov
push
call
jmp
mov
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
lea
push
push
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
add
mov
not
push
call
ret
push
mov
push
mov
push
mov
call
test
jne
mov
call
and
and
push
lea
call
push
lea
push
call
mov
call
xor
pop
ret
push
mov
push
push
mov
test
je
and
cmp
jbe
mov
cmp
je
mov
lea
push
push
mov
push
push
call
test
jne
mov
test
jne
mov
call
test
jne
jmp
mov
cmp
jae
mov
call
jmp
test
je
mov
add
adc
xor
pop
pop
pop
ret
push
mov
push
push
mov
push
push
push
and
mov
and
test
jl
mov
mov
mov
cdq
mov
mov
cmp
ja
jb
cmp
ja
cmp
jge
mov
mov
mov
mov
jmp
cmp
jne
push
pop
jmp
mov
mov
mov
mov
xor
jmp
mov
pop
pop
pop
leave
ret
sub
jmp
mov
call
push
push
push
mov
push
xor
mov
lea
mov
mov
mov
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
push
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
and
and
mov
mov
mov
mov
call
pop
pop
ret
mov
call
sub
push
push
mov
xor
push
mov
mov
mov
cmp
je
xor
cmp
setne
mov
jmp
mov
mov
push
mov
lea
add
mov
push
mov
mov
mov
add
push
push
call
cmp
mov
je
mov
or
cmp
je
mov
push
call
mov
jmp
mov
push
lea
call
mov
mov
or
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jne
cmp
jne
cmp
jge
mov
cmp
jne
cmp
jne
mov
mov
push
mov
push
call
or
mov
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
mov
call
and
inc
mov
push
mov
push
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
pop
ret
mov
mov
add
mov
mov
xor
cmp
jne
cmp
je
cmp
je
push
mov
mov
not
cmp
pop
je
push
pop
jmp
xor
push
call
ret
push
mov
mov
mov
cmp
jge
mov
add
mov
mov
mov
mov
or
jne
mov
call
test
jne
mov
call
test
je
pop
ret
xor
pop
ret
push
mov
push
push
mov
test
je
and
mov
test
je
mov
jmp
mov
cmp
je
xor
cmp
ja
jb
cmp
jae
mov
jmp
mov
mov
mov
lea
push
push
mov
push
push
call
test
jne
mov
test
je
add
sub
sub
sbb
test
je
add
mov
or
jne
mov
call
test
jne
mov
call
jmp
mov
call
test
jne
mov
mov
cmp
je
mov
call
test
jne
cmp
jne
jmp
test
je
mov
add
xor
pop
pop
pop
ret
mov
mov
mov
push
and
and
mov
cmp
jl
push
pop
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
pop
ret
push
mov
mov
mov
cmp
jge
cmp
je
push
mov
call
test
jne
jmp
mov
call
test
je
jmp
xor
pop
ret
sub
jmp
sub
jmp
mov
call
push
push
push
mov
push
mov
lea
mov
call
mov
xor
mov
mov
mov
mov
mov
lea
mov
call
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
lea
mov
call
mov
and
test
je
mov
push
call
mov
add
neg
sbb
and
lea
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
lea
mov
call
lea
mov
lea
mov
call
mov
mov
call
lea
mov
lea
mov
call
mov
mov
call
lea
mov
lea
mov
call
mov
mov
call
lea
mov
lea
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
call
and
lea
call
or
mov
call
mov
pop
pop
mov
leave
ret
add
jmp
mov
call
push
push
mov
mov
and
lea
call
or
mov
call
mov
pop
mov
leave
ret
push
push
mov
call
push
lea
xor
pop
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
lea
pop
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
mov
mov
lea
push
mov
call
mov
push
mov
pop
mov
mov
mov
mov
lea
push
mov
mov
call
mov
lea
mov
mov
mov
call
lea
mov
call
lea
mov
mov
mov
call
lea
mov
call
lea
mov
mov
mov
call
lea
mov
call
mov
lea
mov
mov
call
lea
mov
call
lea
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
sub
je
dec
dec
je
sub
je
dec
jne
mov
push
push
jmp
mov
push
push
jmp
mov
lea
push
call
jmp
mov
mov
mov
mov
or
je
push
push
lea
call
jmp
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
xor
mov
cmp
jge
mov
mov
mov
lea
test
jl
mov
lea
push
call
dec
jmp
inc
xor
jmp
cmp
jge
mov
push
lea
mov
mov
xor
mov
mov
mov
call
push
lea
push
mov
call
cmp
jne
push
push
lea
call
push
lea
mov
call
push
mov
call
pop
cmp
je
push
lea
call
lea
lea
push
call
push
mov
call
pop
inc
jmp
push
lea
call
lea
mov
call
push
mov
call
pop
jmp
mov
xor
cmp
jge
mov
cmp
jbe
mov
jmp
inc
jmp
and
push
lea
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
mov
cmp
je
mov
mov
call
jmp
xor
ret
mov
dec
js
mov
lea
mov
cmp
jne
cmp
je
dec
sub
test
jge
xor
ret
mov
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
cmp
mov
ja
je
sub
je
sub
je
dec
je
dec
je
dec
je
dec
je
dec
jne
lea
add
push
jmp
lea
add
push
jmp
cmp
je
push
jmp
mov
mov
cmp
je
mov
cmp
jne
push
add
call
push
jmp
push
push
jmp
push
push
jmp
mov
jmp
cmp
je
lea
lea
call
push
lea
mov
call
push
mov
jmp
lea
add
push
call
jmp
cmp
ja
je
sub
je
sub
je
dec
dec
jne
cmp
jge
mov
cmp
je
push
pop
jmp
xor
push
lea
call
jmp
cmp
je
push
jmp
push
call
jmp
mov
mov
cmp
je
mov
push
mov
lea
mov
mov
mov
mov
call
mov
mov
dec
mov
cmp
jl
mov
cmp
mov
je
push
lea
call
push
lea
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
push
lea
mov
push
call
test
jne
push
lea
push
call
push
lea
mov
call
push
mov
jmp
lea
lea
push
call
mov
mov
cmp
jne
cmp
jne
cmp
jne
mov
lea
movzx
inc
call
push
lea
mov
call
push
mov
jmp
cmp
jne
cmp
jne
cmp
jne
mov
lea
mov
call
push
lea
mov
call
push
mov
jmp
cmp
jne
cmp
jne
cmp
jne
mov
movzx
mov
and
shr
add
or
shl
lea
mov
call
push
lea
mov
call
push
mov
jmp
cmp
jne
cmp
jne
cmp
jne
mov
push
lea
mov
call
movzx
lea
call
push
lea
mov
call
push
mov
call
lea
mov
call
mov
lea
mov
call
push
lea
mov
call
push
mov
call
pop
xor
jmp
cmp
jne
cmp
jne
cmp
jb
mov
lea
mov
and
mov
call
push
lea
mov
call
push
mov
call
pop
cmp
je
push
lea
call
lea
lea
push
call
jmp
cmp
jbe
push
lea
call
xor
mov
cmp
jae
cmp
jbe
lea
cmp
jae
push
lea
call
push
lea
call
push
call
push
mov
call
mov
mov
pop
dec
pop
mov
jmp
mov
lea
mov
call
inc
jmp
push
lea
call
push
mov
call
pop
jmp
cmp
je
cmp
je
cmp
jbe
cmp
ja
mov
mov
cmp
je
mov
mov
shl
cmp
mov
jne
mov
lea
cmp
jle
mov
mov
mov
add
mov
push
jmp
push
push
lea
call
jmp
cmp
lea
jge
mov
cmp
je
mov
mov
push
push
jmp
mov
mov
cmp
je
push
lea
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
cmp
jge
mov
cmp
je
mov
mov
mov
lea
mov
mov
push
mov
call
leave
ret
push
mov
sub
and
push
mov
push
lea
push
call
lea
mov
push
call
mov
pop
leave
ret
mov
call
sub
push
push
push
mov
xor
push
mov
mov
pop
push
pop
shl
cmp
je
dec
jns
push
lea
mov
mov
mov
call
test
mov
jne
mov
lea
shr
call
push
lea
mov
call
mov
push
call
mov
jmp
mov
mov
call
jmp
test
mov
jne
shr
lea
call
push
lea
mov
call
mov
push
call
mov
jmp
lea
call
push
lea
mov
call
mov
push
call
mov
lea
call
lea
mov
push
call
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
push
push
mov
mov
mov
shr
call
mov
push
call
mov
and
call
mov
push
call
pop
pop
ret
mov
call
sub
push
mov
push
push
mov
mov
xor
push
mov
call
lea
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
push
lea
mov
push
call
cmp
mov
je
lea
mov
call
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
call
mov
jmp
and
lea
push
lea
mov
mov
mov
call
push
lea
push
lea
mov
push
call
mov
test
je
push
call
pop
mov
lea
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
call
mov
call
mov
call
push
lea
call
push
call
pop
mov
lea
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
mov
call
xor
jmp
mov
push
mov
call
mov
ret
push
pop
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
push
push
mov
mov
and
lea
mov
mov
mov
mov
call
and
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
test
je
mov
push
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
mov
mov
mov
mov
pop
ret
push
push
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
mov
call
lea
call
lea
mov
call
lea
call
lea
mov
call
lea
call
lea
mov
call
lea
call
lea
call
pop
pop
ret
push
push
and
push
push
push
mov
mov
mov
test
je
mov
mov
add
cdq
sub
mov
sar
lea
mov
mov
cmp
jne
cmp
je
cmp
ja
jb
cmp
jae
mov
jmp
inc
mov
cmp
jne
mov
mov
push
mov
call
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
and
lea
call
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
jmp
mov
mov
ret
mov
call
sub
push
push
mov
push
mov
push
lea
push
push
call
xor
cmp
jne
add
mov
call
lea
mov
push
call
cmp
je
lea
call
mov
mov
lea
mov
call
lea
mov
call
push
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
lea
lea
push
call
lea
push
push
mov
push
call
push
mov
cmp
mov
je
call
pop
lea
call
mov
lea
mov
call
or
lea
call
mov
jmp
call
pop
lea
call
mov
lea
mov
call
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
mov
cmp
mov
jne
lea
call
mov
and
lea
call
mov
mov
test
je
mov
push
lea
call
lea
mov
push
call
or
lea
call
and
and
cmp
jle
jmp
mov
mov
mov
push
mov
lea
push
call
mov
mov
lea
call
test
je
mov
lea
call
lea
lea
push
lea
push
mov
mov
call
test
je
lea
call
push
lea
call
mov
lea
push
call
cmp
jne
xor
xor
cmp
jle
mov
mov
mov
cmp
je
cmp
jne
cmp
je
inc
add
cmp
jl
jmp
mov
push
pop
xor
call
mov
cmp
mov
ja
jb
cmp
jae
mov
mov
mov
lea
mov
mov
lea
mov
call
or
lea
call
inc
mov
mov
cmp
jl
cmp
jne
cmp
jne
and
and
mov
xor
mov
pop
pop
pop
mov
leave
ret
lea
mov
mov
lea
mov
call
or
lea
call
mov
jmp
mov
call
sub
push
push
push
mov
xor
mov
cmp
mov
mov
je
lea
mov
lea
call
mov
mov
mov
mov
mov
cmp
jae
cmp
jne
mov
lea
mov
call
and
lea
call
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
cmp
mov
je
mov
lea
mov
call
and
lea
call
mov
jmp
lea
call
cmp
mov
mov
mov
setne
cmp
mov
mov
mov
setne
and
cmp
mov
je
mov
cmp
je
cmp
jge
mov
mov
lea
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
mov
jmp
and
cmp
lea
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
and
and
xor
cmp
mov
lea
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
and
and
xor
cmp
mov
lea
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
and
and
xor
mov
xor
cmp
je
mov
mov
mov
lea
push
push
push
mov
push
call
cmp
mov
je
lea
mov
call
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
push
call
pop
mov
mov
jmp
cmp
jne
and
jmp
cmp
je
lea
mov
call
push
call
pop
mov
mov
jmp
mov
mov
mov
lea
mov
call
lea
mov
push
lea
push
mov
push
push
mov
call
cmp
mov
je
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
lea
mov
push
lea
push
mov
push
push
mov
call
cmp
mov
je
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
mov
lea
push
lea
push
push
push
mov
call
cmp
mov
je
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
mov
mov
mov
lea
push
push
push
mov
push
call
cmp
mov
je
lea
mov
call
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
je
cmp
je
lea
mov
call
push
call
pop
mov
mov
jmp
push
lea
call
lea
lea
mov
call
push
lea
mov
call
push
call
push
call
pop
pop
lea
mov
call
mov
mov
mov
lea
push
push
push
mov
push
call
cmp
mov
je
lea
mov
call
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
jne
and
jmp
cmp
je
lea
mov
call
push
call
pop
mov
mov
jmp
cmp
mov
setne
mov
lea
mov
call
mov
mov
mov
lea
push
push
push
mov
push
call
cmp
mov
je
lea
mov
call
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
jne
and
jmp
cmp
je
lea
mov
call
push
call
pop
mov
mov
jmp
cmp
setne
mov
lea
mov
call
cmp
je
and
and
and
and
mov
mov
cmp
jne
cmp
je
mov
shr
and
mov
cmp
je
mov
mov
mov
lea
push
push
push
mov
push
call
cmp
mov
je
lea
mov
call
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
je
lea
mov
call
push
call
pop
mov
mov
jmp
mov
mov
mov
or
mov
je
cmp
je
lea
mov
call
push
call
pop
mov
mov
lea
call
and
lea
call
mov
jmp
lea
mov
call
lea
lea
push
call
push
mov
call
inc
pop
jmp
lea
call
lea
mov
call
lea
lea
push
lea
push
mov
call
cmp
mov
je
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
mov
mov
mov
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
mov
lea
push
lea
push
push
mov
call
mov
cmp
je
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
setne
cmp
je
push
lea
call
push
mov
call
jmp
and
mov
and
mov
test
je
cmp
je
mov
jmp
mov
test
mov
mov
je
mov
lea
push
lea
call
cmp
jae
xor
cmp
lea
mov
jne
cmp
jne
and
jmp
lea
mov
mov
test
je
cmp
je
mov
jmp
and
cmp
lea
sbb
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
call
and
mov
lea
push
push
mov
push
mov
call
push
lea
mov
mov
push
push
push
lea
push
lea
push
lea
push
call
mov
test
je
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
mov
mov
jmp
lea
call
lea
lea
push
lea
push
push
call
mov
mov
test
mov
je
mov
push
call
lea
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
mov
mov
lea
call
and
lea
call
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
push
mov
lea
mov
call
xor
mov
mov
mov
mov
mov
push
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
ret
push
push
mov
xor
push
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
sub
mov
push
push
mov
xor
cmp
mov
mov
mov
jne
xor
jmp
push
mov
mov
mov
lea
push
mov
push
push
push
call
cmp
je
mov
jmp
cmp
jne
mov
mov
xor
xor
or
or
mov
mov
mov
mov
jmp
cmp
je
mov
or
lea
call
mov
pop
mov
pop
pop
mov
leave
ret
push
call
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
or
lea
call
mov
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
lea
mov
call
lea
call
cmp
jge
mov
lea
push
call
mov
mov
call
cmp
jne
mov
jmp
mov
mov
shl
add
cmp
jne
push
push
lea
call
lea
lea
call
mov
test
jne
sub
lea
mov
mov
movs
movs
movs
lea
movs
call
push
and
call
mov
pop
jmp
push
push
lea
call
test
je
mov
push
call
pop
mov
jmp
push
and
call
pop
inc
jmp
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
mov
lea
lea
push
call
test
jne
mov
cmp
je
mov
jmp
push
push
mov
call
lea
mov
push
mov
call
test
jne
mov
neg
sbb
and
pop
pop
ret
push
push
mov
mov
and
call
test
je
push
push
mov
call
mov
cmp
jne
push
push
mov
call
mov
mov
call
test
jne
mov
jmp
push
push
mov
call
xor
pop
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
sub
push
push
mov
push
mov
cmp
jg
cmp
jg
push
lea
call
mov
mov
mov
xor
lea
lea
mov
call
xor
cmp
jle
mov
lea
mov
call
test
jne
inc
cmp
jl
xor
cmp
jle
mov
lea
mov
call
test
jne
inc
cmp
jl
mov
lea
call
xor
cmp
jle
mov
lea
mov
call
test
jne
inc
cmp
jl
or
lea
call
push
xor
pop
lea
rep
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
jle
mov
mov
mov
mov
cmp
jbe
push
lea
call
inc
mov
cmp
jb
cmp
mov
jbe
push
lea
call
inc
mov
cmp
jb
inc
mov
cmp
jl
xor
cmp
jle
mov
mov
push
mov
lea
pop
mov
mov
lea
mov
mov
shl
or
inc
cmp
jl
xor
lea
mov
call
or
lea
call
lea
mov
mov
lea
mov
mov
push
pop
shl
test
je
or
mov
inc
add
cmp
jl
add
dec
jne
lea
push
mov
pop
shl
test
jne
inc
add
cmp
jl
mov
jmp
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
push
push
mov
mov
call
mov
push
call
test
jle
push
mov
call
dec
jne
pop
pop
ret
cmp
jb
mov
ret
mov
lea
mov
mov
ret
push
mov
cmp
je
mov
call
and
pop
ret
push
mov
push
lea
mov
call
cmp
je
mov
mov
mov
mov
pop
pop
ret
push
mov
call
push
mov
mov
push
call
mov
pop
ret
push
mov
sub
push
push
mov
push
call
test
pop
je
push
lea
mov
movs
movs
movs
pop
jmp
xor
lea
push
mov
call
mov
mov
pop
mov
mov
mov
pop
and
mov
mov
mov
leave
ret
mov
push
push
push
call
ret
push
mov
push
push
mov
call
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
jl
cmp
jl
call
mov
mov
push
push
call
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
lea
push
call
push
mov
mov
cmp
jb
call
mov
mov
mov
inc
mov
pop
ret
push
mov
mov
sub
cmp
jbe
call
xor
cmp
jbe
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
ret
mov
push
mov
push
mov
xor
mov
sub
cmp
jb
ja
cmp
jbe
call
add
pop
pop
ret
push
mov
call
push
push
mov
call
pop
ret
push
mov
sub
push
push
mov
push
mov
cmp
jb
call
mov
mov
mov
mov
inc
xor
mov
mov
mov
mov
mov
test
je
cmp
jb
call
mov
mov
mov
movzx
cdq
call
or
or
shr
add
inc
cmp
lea
mov
jl
mov
mov
pop
pop
pop
leave
ret
movzx
movzx
dec
and
mov
cdq
shl
call
add
adc
jmp
push
call
test
mov
ja
cmp
jbe
call
mov
pop
ret
push
mov
mov
add
cmp
jbe
call
mov
mov
mov
add
mov
pop
ret
push
mov
mov
add
cmp
jbe
call
mov
mov
add
add
mov
mov
mov
pop
ret
push
mov
push
push
push
mov
push
push
mov
mov
sub
mov
add
pop
shr
shl
mov
je
cmp
jne
cmp
je
inc
inc
cmp
mov
jb
cmp
jne
call
shr
js
lea
cmp
je
call
mov
cmp
jl
push
call
mov
mov
test
jle
mov
mov
mov
inc
inc
inc
inc
dec
jne
mov
pop
and
mov
add
mov
add
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
mov
push
lea
pop
push
mov
call
test
jne
mov
call
test
je
xor
jmp
xor
mov
mov
mov
push
lea
mov
call
mov
push
push
push
mov
mov
call
mov
mov
add
mov
test
je
mov
mov
sub
sbb
cmp
ja
jb
cmp
ja
mov
mov
mov
lea
push
mov
sub
push
mov
add
push
push
call
test
jne
mov
add
test
je
cmp
jbe
mov
xor
add
mov
test
mov
jbe
jmp
mov
mov
mov
cmp
je
cmp
jae
inc
mov
jmp
cmp
je
add
call
test
jne
inc
mov
cmp
jb
mov
mov
add
adc
sub
push
add
push
push
call
add
jmp
mov
jmp
push
pop
jmp
mov
mov
add
push
push
lea
push
call
add
add
mov
push
mov
pop
adc
add
mov
mov
push
push
adc
push
push
push
call
mov
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
push
push
mov
xor
sub
mov
lea
cmp
jne
inc
cmp
jl
push
lea
pop
call
sub
neg
sbb
inc
pop
pop
ret
xor
jmp
push
push
mov
xor
sub
mov
lea
cmp
jne
inc
cmp
jl
push
lea
pop
call
cmp
jne
mov
jmp
push
pop
cmp
jne
inc
cmp
jb
cmp
jne
cmp
jne
xor
jmp
xor
jmp
push
pop
pop
pop
ret
push
mov
push
and
and
call
mov
lea
push
push
mov
push
push
push
call
test
jne
push
mov
push
call
test
jne
push
mov
call
xor
pop
pop
ret
push
mov
mov
test
je
mov
push
call
and
pop
ret
push
mov
mov
call
or
je
mov
call
jmp
pop
ret
mov
call
sub
push
push
mov
push
mov
call
mov
mov
mov
call
push
mov
call
and
and
test
jbe
mov
and
and
mov
mov
and
lea
push
mov
call
push
or
mov
call
mov
pop
mov
mov
mov
call
mov
mov
and
mov
push
lea
push
call
mov
cmp
jle
call
mov
xor
cmp
mov
mov
jle
mov
lea
mov
mov
mov
mov
movzx
cdq
call
or
or
dec
add
dec
jne
mov
test
mov
mov
mov
je
mov
call
mov
mov
call
jmp
push
pop
mov
test
mov
je
mov
call
push
lea
mov
call
push
mov
push
call
test
je
call
mov
add
mov
add
dec
jne
mov
lea
dec
mov
mov
call
push
mov
call
mov
test
jbe
mov
mov
call
mov
mov
call
push
mov
push
call
dec
jne
mov
cmp
jae
call
sub
lea
mov
push
call
cmp
jne
xor
cmp
jbe
mov
xor
test
jle
mov
cmp
je
inc
add
cmp
jl
or
test
jl
inc
cmp
jb
jmp
mov
push
call
cmp
je
call
jmp
test
jbe
mov
call
mov
push
call
dec
jne
mov
pop
pop
pop
mov
leave
ret
push
mov
mov
call
cmp
jne
cmp
je
or
jne
call
mov
call
jmp
pop
ret
push
mov
push
push
mov
push
push
mov
push
push
mov
call
mov
call
mov
push
call
xor
test
jle
mov
xor
cmp
je
mov
mov
call
mov
push
call
inc
cmp
jl
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
mov
call
mov
mov
mov
mov
call
push
push
mov
mov
call
mov
call
mov
push
call
test
jbe
mov
mov
call
mov
push
push
call
dec
jne
mov
mov
call
mov
or
je
cmp
jne
test
jne
push
mov
push
push
call
jmp
mov
call
jmp
cmp
jne
mov
mov
call
mov
push
call
mov
call
test
jbe
mov
push
call
dec
jne
pop
pop
pop
pop
ret
mov
call
sub
push
push
xor
push
push
mov
push
call
mov
call
and
mov
push
lea
mov
push
call
mov
mov
call
push
mov
call
mov
cmp
jbe
mov
lea
call
push
mov
mov
call
and
lea
call
mov
mov
push
mov
call
dec
jne
or
lea
call
push
push
mov
call
cmp
mov
jbe
jmp
xor
mov
mov
and
mov
mov
test
jle
mov
mov
mov
add
mov
add
inc
cmp
jl
add
push
mov
mov
call
test
jbe
mov
call
mov
push
push
call
dec
jne
inc
mov
cmp
jb
xor
mov
call
mov
or
je
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
lea
push
mov
push
call
xor
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
inc
cmp
mov
jb
xor
lea
mov
call
or
lea
call
jmp
mov
call
jmp
mov
pop
pop
pop
mov
leave
ret
push
push
pop
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
jmp
mov
call
sub
push
mov
mov
push
push
mov
call
mov
mov
push
call
mov
call
mov
cmp
mov
mov
jne
xor
cmp
jne
xor
cmp
jle
mov
call
mov
push
call
inc
cmp
jl
jmp
xor
cmp
jne
cmp
je
cmp
jne
cmp
je
or
je
mov
call
jmp
mov
cmp
jne
xor
cmp
jle
mov
push
call
inc
cmp
jl
xor
mov
xor
mov
cmp
jle
mov
mov
cmp
je
cmp
mov
mov
jbe
dec
mov
cmp
jne
cmp
jne
mov
call
mov
mov
mov
push
push
call
add
mov
adc
mov
xor
dec
jne
mov
mov
call
sub
mov
sbb
push
push
call
mov
xor
inc
cmp
mov
jl
cmp
jne
cmp
jne
mov
call
mov
mov
mov
xor
mov
mov
cmp
mov
jle
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
inc
cmp
jl
xor
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
lea
push
mov
push
call
xor
cmp
mov
jle
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
push
call
push
mov
call
jmp
test
jbe
mov
mov
mov
mov
mov
push
call
mov
mov
push
mov
call
inc
dec
jne
inc
cmp
jl
and
lea
call
or
lea
call
mov
jmp
or
je
mov
call
mov
call
mov
mov
jmp
mov
cmp
jne
mov
call
mov
call
mov
test
jle
mov
push
call
dec
jne
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
mov
mov
call
test
mov
ja
cmp
jbe
call
mov
sub
je
sub
je
dec
je
dec
je
call
jmp
push
mov
push
push
push
push
call
jmp
push
mov
push
call
jmp
push
mov
push
push
push
call
jmp
pop
pop
pop
ret
push
mov
push
push
mov
push
mov
call
mov
mov
push
call
and
xor
test
jle
test
jne
mov
call
mov
mov
mov
mov
test
setne
push
call
shr
dec
jne
pop
pop
pop
pop
ret
push
mov
push
mov
mov
call
test
jne
push
mov
push
call
jmp
mov
call
mov
mov
push
call
test
jle
mov
push
call
dec
jne
pop
pop
ret
mov
call
push
push
push
push
mov
push
mov
lea
push
push
call
and
push
xor
lea
mov
push
call
push
mov
call
cmp
jle
mov
xor
xor
cmp
je
mov
call
push
push
mov
call
inc
cmp
jl
or
lea
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
push
lea
call
mov
and
push
lea
call
mov
mov
push
lea
call
mov
mov
lea
mov
call
mov
push
lea
call
mov
push
lea
call
mov
push
lea
call
mov
push
lea
call
mov
lea
mov
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
mov
mov
call
and
push
lea
call
mov
mov
add
adc
and
cmp
mov
jle
mov
mov
and
and
mov
mov
mov
mov
mov
lea
push
mov
call
push
mov
mov
call
mov
pop
mov
mov
mov
mov
mov
call
mov
xor
mov
cmp
jne
cmp
je
call
push
mov
call
push
call
xor
pop
cmp
je
mov
mov
mov
test
mov
je
mov
push
call
mov
xor
push
push
push
mov
mov
mov
push
mov
mov
mov
push
mov
push
mov
push
lea
mov
push
lea
push
push
push
call
test
mov
jne
mov
cmp
je
mov
mov
mov
call
mov
cmp
je
call
mov
and
cmp
jle
mov
mov
shl
inc
mov
mov
add
adc
add
adc
inc
mov
mov
cmp
jl
test
mov
je
mov
push
call
inc
mov
cmp
jl
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
xor
lea
call
lea
mov
call
lea
mov
call
and
lea
call
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
test
mov
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
mov
jmp
mov
call
sub
push
push
push
mov
mov
call
mov
cmp
mov
mov
jne
xor
cmp
jne
lea
mov
push
call
mov
call
mov
mov
jmp
xor
lea
call
mov
cmp
mov
jne
cmp
jne
push
lea
lea
mov
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
mov
mov
add
adc
mov
call
mov
mov
xor
push
lea
call
mov
push
lea
call
mov
push
lea
call
mov
cmp
mov
jne
cmp
jne
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
mov
call
mov
mov
add
adc
mov
call
mov
mov
jmp
cmp
mov
jle
push
lea
call
mov
mov
mov
mov
call
push
push
lea
call
mov
lea
push
call
push
lea
call
inc
mov
cmp
jl
xor
lea
call
mov
or
jne
lea
mov
call
lea
mov
call
and
lea
call
mov
mov
lea
call
or
lea
call
mov
jmp
cmp
jne
cmp
je
call
mov
call
push
lea
mov
call
mov
cmp
jbe
mov
lea
call
push
lea
mov
call
push
mov
call
dec
pop
jne
push
lea
push
call
cmp
je
push
push
lea
call
cmp
jbe
cmp
je
push
push
lea
call
mov
mov
mov
mov
mov
mov
lea
mov
call
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
or
mov
je
mov
call
mov
cmp
mov
mov
mov
mov
ja
jb
cmp
ja
mov
add
cmp
ja
jmp
and
lea
lea
push
push
mov
call
cmp
jle
mov
mov
mov
add
push
call
inc
cmp
jl
lea
mov
call
jmp
mov
mov
mov
mov
mov
mov
lea
push
push
mov
mov
call
and
lea
lea
push
push
mov
call
cmp
jbe
mov
mov
mov
mov
mov
test
mov
je
mov
call
mov
mov
inc
cmp
jb
lea
mov
call
lea
mov
call
xor
push
lea
push
call
jmp
lea
mov
push
push
call
mov
xor
cmp
jbe
mov
cmp
je
inc
inc
cmp
jb
mov
lea
call
mov
lea
call
jmp
lea
jmp
lea
push
mov
push
call
jmp
push
lea
jmp
push
lea
jmp
push
lea
jmp
push
lea
push
lea
push
mov
call
jmp
cmp
mov
mov
jb
ja
cmp
jbe
mov
call
test
je
call
add
adc
mov
cmp
jb
ja
mov
cmp
jb
jmp
push
push
call
cmp
ja
cmp
jbe
mov
mov
sub
cmp
jne
cmp
je
call
jmp
xor
cmp
mov
mov
mov
jbe
mov
cmp
je
inc
inc
cmp
jb
xor
cmp
jbe
mov
mov
cmp
mov
sete
test
mov
je
and
mov
mov
and
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
jmp
mov
mov
cmp
sete
mov
mov
mov
inc
and
mov
mov
mov
mov
cmp
je
push
lea
call
inc
cmp
jb
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
mov
lea
mov
call
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
cmp
inc
add
add
out
add
inc
add
out
add
jmp
inc
add
call
mov
xor
push
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
pop
pop
ret
push
push
push
mov
push
lea
mov
call
push
mov
call
xor
xor
cmp
jle
push
mov
call
mov
mov
add
inc
cmp
jl
pop
pop
pop
pop
ret
push
push
push
push
push
mov
push
lea
mov
call
push
mov
call
xor
xor
cmp
mov
jle
push
mov
push
call
mov
mov
add
mov
adc
inc
cmp
jl
pop
pop
pop
pop
pop
pop
ret
push
mov
sub
push
push
mov
push
lea
mov
call
push
mov
call
lea
mov
call
push
mov
call
xor
xor
cmp
mov
mov
jle
jmp
xor
mov
mov
mov
cmp
sete
cmp
je
cmp
jne
push
lea
call
jmp
cmp
jne
cmp
jl
call
push
mov
call
mov
cmp
jne
inc
jmp
push
lea
call
cmp
jne
inc
mov
mov
cmp
jb
inc
and
inc
mov
cmp
jl
pop
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
cmp
mov
je
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
pop
call
xor
cmp
jne
mov
or
jne
mov
or
jne
cmp
jne
mov
lea
push
push
mov
push
push
push
call
test
jne
mov
lea
push
push
mov
push
push
push
call
test
jne
mov
mov
mov
mov
sub
sbb
mov
jne
cmp
jae
sub
mov
mov
lea
push
mov
mov
push
neg
cdq
push
push
push
call
test
jne
mov
push
lea
call
test
jne
lea
test
jl
mov
cmp
jne
cmp
je
cmp
jne
cmp
je
dec
jns
test
jl
mov
sub
cdq
mov
mov
mov
lea
cdq
mov
mov
sub
mov
sbb
add
adc
call
push
push
push
mov
mov
push
mov
push
call
test
je
jmp
cmp
je
call
mov
mov
mov
add
adc
mov
mov
mov
or
jne
xor
jmp
cmp
ja
cmp
ja
test
jg
jl
test
jae
push
pop
jmp
mov
push
push
push
mov
push
push
call
xor
cmp
jne
mov
mov
mov
push
mov
lea
call
push
mov
mov
call
test
je
mov
jmp
mov
mov
add
mov
adc
add
adc
mov
mov
add
mov
adc
add
adc
mov
mov
mov
call
cmp
je
call
and
lea
lea
push
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
test
je
cmp
jne
test
je
call
push
lea
mov
push
push
lea
push
push
push
call
test
je
mov
mov
jmp
cmp
jne
mov
mov
xor
jmp
cmp
jle
call
lea
call
mov
lea
push
push
call
mov
call
cmp
jne
test
je
call
push
mov
mov
mov
push
mov
mov
push
call
mov
mov
mov
lea
call
lea
mov
call
and
lea
call
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
push
and
mov
push
push
push
call
jmp
mov
ret
push
pop
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
xor
cmp
mov
je
push
mov
mov
mov
mov
call
mov
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
je
mov
push
call
add
dec
jne
pop
push
mov
push
call
pop
pop
pop
ret
mov
call
push
push
push
mov
mov
push
mov
call
and
lea
push
lea
call
lea
lea
push
mov
call
lea
lea
push
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
mov
mov
call
ret
push
mov
push
mov
push
push
test
mov
mov
jbe
or
cmp
jae
mov
mov
lea
push
push
push
push
call
test
jne
cmp
je
add
sub
jne
xor
pop
pop
pop
pop
ret
mov
jmp
push
mov
push
push
push
push
lea
push
mov
push
call
and
add
lea
mov
push
push
mov
call
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
lea
push
call
push
lea
push
call
mov
lea
call
push
lea
pop
call
mov
lea
call
lea
push
push
mov
call
pop
pop
leave
ret
xor
mov
inc
shr
cmp
jl
ret
mov
push
push
mov
xor
mov
push
mov
pop
inc
call
cmp
mov
jl
pop
pop
ret
push
push
push
mov
call
push
lea
mov
call
xor
cmp
jne
mov
lea
push
push
mov
push
call
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
call
cmp
jne
mov
push
push
push
mov
push
push
call
pop
pop
pop
ret
push
mov
mov
test
je
mov
push
call
and
mov
test
je
mov
push
call
and
pop
ret
mov
push
push
push
mov
push
push
call
ret
push
mov
push
mov
xor
cmp
je
mov
add
jmp
cmp
je
push
mov
push
xor
cmp
jbe
mov
lea
push
call
inc
cmp
jb
push
mov
mov
call
pop
mov
pop
jmp
push
lea
push
call
pop
pop
ret
mov
mov
push
mov
mov
inc
mov
pop
cmp
jne
call
ret
push
mov
push
mov
push
mov
mov
mov
sub
cmp
jbe
lea
push
push
mov
call
add
push
push
push
call
add
add
pop
pop
pop
ret
push
mov
cmp
je
inc
jmp
cmp
push
je
lea
call
mov
movzx
mov
and
xor
shr
mov
xor
mov
jmp
lea
call
pop
ret
push
mov
mov
cmp
jne
lea
push
push
mov
call
mov
push
mov
mov
inc
pop
pop
ret
push
push
push
mov
pop
push
mov
call
shr
dec
jne
pop
pop
ret
push
mov
push
push
push
mov
pop
push
mov
call
mov
mov
push
pop
call
dec
mov
mov
jne
pop
pop
pop
ret
push
mov
push
push
and
push
push
push
push
mov
mov
xor
pop
push
mov
pop
xor
call
cmp
jb
ja
cmp
jb
or
add
shr
inc
cmp
jl
jmp
mov
mov
mov
shl
call
or
push
mov
call
test
jle
push
mov
call
mov
mov
push
pop
call
dec
mov
mov
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
cdq
push
push
call
and
cmp
jle
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
or
je
add
inc
cmp
jb
mov
dec
test
jl
jmp
mov
mov
mov
dec
push
mov
pop
mov
call
cmp
mov
mov
jge
mov
push
pop
and
cmp
jne
cmp
je
xor
test
sete
cmp
mov
sete
dec
and
cmp
sete
dec
and
or
or
push
mov
call
push
lea
mov
push
call
cmp
je
push
mov
push
call
push
mov
push
call
cmp
je
push
mov
push
call
push
mov
push
call
inc
mov
cmp
jl
xor
cmp
jle
mov
mov
push
push
lea
call
mov
push
push
call
inc
cmp
jl
mov
cmp
jle
xor
test
jle
mov
mov
push
push
call
inc
cmp
jl
pop
pop
pop
leave
ret
push
mov
push
and
push
push
mov
push
xor
cmp
mov
mov
jle
mov
cmp
je
or
shr
jne
push
mov
call
and
mov
inc
cmp
jl
cmp
je
push
mov
call
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
mov
xor
test
mov
jle
mov
cmp
je
inc
inc
cmp
jl
test
je
push
mov
call
cmp
jne
push
mov
call
jmp
push
mov
call
push
mov
call
mov
xor
cmp
jle
mov
cmp
je
mov
mov
push
call
inc
cmp
jl
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
xor
mov
cmp
je
push
call
push
mov
push
call
mov
mov
cdq
push
push
call
push
mov
call
cmp
jle
mov
mov
push
push
call
inc
cmp
jl
push
mov
push
call
push
mov
call
pop
pop
pop
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
cmp
mov
je
push
call
push
mov
call
mov
mov
cdq
push
push
call
push
mov
call
xor
cmp
jle
mov
mov
push
call
inc
cmp
jl
mov
push
call
cmp
mov
jle
jmp
xor
mov
mov
mov
cmp
jle
mov
mov
push
push
call
inc
cmp
jl
inc
mov
cmp
jl
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
jle
mov
mov
mov
lea
mov
push
call
push
lea
call
inc
mov
cmp
jl
mov
lea
push
lea
push
call
mov
push
call
and
lea
call
or
lea
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
push
mov
call
mov
xor
xor
mov
cmp
jle
mov
cmp
jne
inc
add
cmp
jl
jmp
mov
push
call
xor
cmp
jle
mov
mov
push
push
call
inc
cmp
jl
xor
cmp
mov
mov
jle
mov
mov
xor
cmp
lea
jbe
inc
cmp
mov
je
cmp
je
mov
push
call
mov
mov
mov
mov
push
push
call
mov
mov
mov
inc
cmp
lea
jb
inc
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jle
mov
mov
shl
mov
cmp
jne
mov
mov
cmp
je
inc
jmp
cmp
jle
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
push
lea
call
inc
dec
jne
inc
mov
cmp
jl
mov
lea
push
lea
push
call
mov
push
call
lea
mov
call
or
lea
call
mov
pop
pop
pop
mov
leave
ret
ret
push
mov
push
mov
push
push
mov
mov
mov
cmp
jne
xor
jmp
add
shr
push
push
push
cdq
push
push
call
push
mov
xor
mov
add
adc
add
adc
push
push
call
lea
mov
push
mov
call
push
mov
call
push
push
mov
call
mov
mov
pop
cmp
jne
push
mov
call
jmp
push
mov
call
push
mov
call
push
mov
call
pop
pop
leave
ret
push
push
push
pop
push
pop
push
mov
pop
xor
call
cmp
jb
ja
cmp
jb
add
inc
cmp
jl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
mov
xor
xor
test
jle
mov
cmp
je
inc
inc
cmp
jl
test
je
mov
push
push
lea
push
push
call
xor
cmp
jle
mov
cmp
je
mov
mov
push
push
call
inc
cmp
jl
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
push
call
xor
pop
cmp
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
push
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
mov
mov
mov
mov
call
mov
mov
push
mov
push
mov
mov
mov
push
lea
push
lea
push
push
push
mov
call
mov
cmp
je
lea
mov
call
or
cmp
je
mov
push
call
mov
jmp
mov
lea
push
call
lea
mov
call
or
cmp
je
mov
push
call
xor
mov
pop
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
test
je
mov
push
call
ret
mov
call
sub
push
push
mov
push
mov
xor
xor
cmp
mov
mov
jle
mov
mov
mov
mov
add
adc
inc
mov
mov
add
cmp
mov
jl
mov
push
mov
mov
mov
mov
call
mov
cmp
jle
push
mov
call
lea
mov
push
lea
push
push
push
push
call
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
jle
mov
mov
mov
mov
cmp
je
push
lea
push
call
mov
lea
mov
push
call
mov
lea
push
call
inc
mov
cmp
jl
lea
mov
push
lea
push
lea
push
lea
push
lea
push
call
push
mov
call
lea
mov
call
lea
mov
call
or
lea
call
cmp
je
push
mov
call
mov
mov
cdq
push
push
call
mov
mov
mov
mov
mov
push
lea
mov
call
cmp
mov
mov
jle
mov
mov
mov
cmp
je
push
lea
call
jmp
push
lea
call
inc
inc
mov
cmp
jl
cmp
jle
push
mov
call
mov
push
add
mov
shr
push
call
lea
mov
push
call
push
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
push
lea
call
cmp
mov
mov
mov
jle
mov
mov
mov
mov
cmp
jne
cmp
lea
sete
push
call
mov
cmp
jne
inc
mov
cmp
jge
mov
mov
cmp
jne
mov
push
lea
call
cmp
je
inc
inc
mov
cmp
jl
cmp
jbe
push
mov
call
mov
push
add
mov
shr
push
call
lea
mov
push
call
cmp
jbe
push
mov
call
mov
push
add
mov
shr
push
call
lea
mov
push
call
lea
mov
call
lea
mov
call
or
lea
call
mov
mov
cmp
mov
mov
jle
mov
mov
mov
mov
mov
cmp
je
inc
mov
inc
add
cmp
lea
mov
jl
cmp
jle
inc
xor
push
push
push
call
inc
mov
inc
push
call
push
mov
call
xor
mov
push
push
call
push
mov
call
cmp
mov
jle
mov
mov
mov
mov
mov
cmp
jl
jmp
mov
mov
mov
mov
mov
push
mov
call
xor
mov
mov
push
call
inc
mov
mov
cmp
jle
inc
mov
cmp
jl
mov
cmp
je
lea
push
push
mov
call
mov
cmp
je
lea
push
push
mov
call
mov
cmp
je
lea
push
push
mov
call
lea
push
push
mov
call
mov
mov
mov
mov
mov
push
lea
mov
call
cmp
mov
mov
jle
mov
mov
mov
lea
mov
mov
push
call
cmp
je
inc
inc
mov
cmp
jl
cmp
jle
push
push
push
lea
mov
push
call
cmp
mov
jle
mov
mov
mov
cmp
je
push
mov
call
inc
mov
cmp
jl
or
lea
call
push
mov
call
push
mov
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
push
mov
call
test
jne
mov
jmp
mov
call
test
je
xor
xor
xor
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
xor
cmp
mov
je
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
cmp
je
mov
mov
lea
push
mov
call
mov
call
mov
mov
or
mov
lea
mov
push
push
push
mov
mov
call
cmp
je
mov
mov
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
push
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
jmp
lea
call
mov
mov
mov
add
mov
push
lea
call
cmp
mov
jne
lea
push
lea
call
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
lea
mov
push
lea
push
lea
push
lea
push
mov
call
cmp
mov
je
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
push
mov
call
pop
mov
jmp
cmp
mov
jne
lea
push
push
mov
call
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
lea
push
lea
push
mov
push
push
call
lea
mov
call
lea
mov
call
lea
mov
push
call
push
mov
call
mov
cmp
jle
mov
mov
mov
mov
mov
add
adc
mov
add
dec
mov
jne
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
push
or
mov
call
pop
lea
call
cmp
jne
mov
lea
not
call
mov
mov
push
mov
mov
push
push
mov
mov
mov
push
mov
mov
push
call
cmp
jne
lea
mov
push
call
mov
pop
pop
pop
mov
leave
ret
xor
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
push
pop
ret
mov
mov
cmp
je
test
jne
mov
cmp
je
test
jne
mov
cmp
je
test
jne
mov
cmp
je
test
jne
mov
cmp
je
test
jne
push
pop
ret
xor
ret
push
push
mov
push
mov
mov
mov
push
call
lea
xor
cmp
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
xor
mov
mov
mov
cmp
lea
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
mov
cmp
lea
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
mov
cmp
lea
jge
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
mov
cmp
jge
mov
cmp
je
push
pop
jmp
xor
pop
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
push
push
mov
push
mov
push
mov
mov
lea
push
push
push
call
push
mov
lea
push
push
push
call
push
mov
lea
push
push
push
call
push
mov
lea
push
push
push
call
mov
lea
mov
cmp
jl
push
lea
call
jmp
mov
mov
push
mov
lea
call
pop
pop
pop
pop
ret
push
push
mov
mov
cmp
jl
push
lea
push
mov
call
cmp
jge
pop
mov
mov
test
mov
je
cmp
jl
push
push
mov
call
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
call
sub
push
push
mov
lea
mov
call
add
lea
push
call
push
xor
pop
lea
mov
call
push
lea
pop
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
push
mov
lea
call
lea
mov
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
mov
pop
call
push
mov
pop
call
push
mov
pop
call
push
mov
pop
call
or
lea
call
mov
pop
pop
mov
leave
ret
push
push
push
push
mov
push
xor
mov
mov
test
jle
mov
mov
xor
mov
cmp
jne
mov
cmp
je
inc
add
cmp
jl
jmp
push
push
mov
call
mov
mov
push
push
call
pop
pop
pop
pop
pop
ret
push
push
push
mov
push
xor
test
jle
mov
xor
mov
cmp
jne
mov
cmp
je
inc
add
cmp
jl
jmp
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
xor
push
mov
test
jle
mov
mov
cmp
jne
mov
xor
cmp
je
inc
add
cmp
jl
jmp
mov
push
push
mov
call
push
mov
call
mov
mov
pop
pop
mov
pop
and
leave
ret
mov
mov
mov
mov
xor
ret
push
mov
mov
mov
cmp
jge
mov
push
push
call
cmp
jne
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
pop
ret
xor
mov
mov
cmp
jne
mov
cmp
je
add
inc
cmp
jl
or
ret
push
mov
lea
push
mov
push
push
mov
push
mov
push
call
mov
mov
add
adc
pop
test
je
mov
pop
ret
mov
mov
test
jne
mov
jmp
push
mov
push
push
push
call
ret
push
push
push
mov
lea
mov
call
push
mov
mov
call
test
jl
cmp
jge
test
jge
inc
jmp
mov
pop
pop
pop
ret
push
push
mov
push
call
mov
mov
push
call
cmp
jg
mov
mov
pop
pop
ret
push
mov
push
and
push
mov
call
push
lea
push
call
mov
pop
leave
ret
push
push
mov
push
push
pop
mov
inc
test
je
cmp
je
mov
mov
inc
test
jne
test
je
cmp
je
cmp
jne
mov
inc
jmp
inc
test
je
cmp
je
mov
inc
jmp
pop
pop
pop
ret
mov
push
push
mov
mov
mov
mov
mov
lea
mov
call
and
and
mov
call
pop
ret
push
mov
mov
test
je
mov
push
call
and
mov
call
pop
ret
mov
call
push
push
push
push
mov
xor
mov
mov
mov
mov
cmp
je
lea
jmp
mov
mov
lea
mov
mov
mov
push
add
call
or
test
je
mov
cmp
je
mov
push
call
mov
or
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
mov
call
and
inc
pop
ret
push
mov
push
mov
mov
add
mov
mov
mov
call
xor
cmp
jne
cmp
je
mov
mov
not
cmp
je
push
pop
pop
pop
ret
push
mov
mov
mov
cmp
jge
mov
add
mov
mov
mov
mov
or
jne
mov
call
mov
call
test
je
pop
ret
xor
pop
ret
push
mov
push
push
mov
test
je
and
mov
test
je
mov
jmp
mov
cmp
je
xor
cmp
ja
jb
cmp
jae
mov
jmp
mov
mov
mov
lea
push
push
mov
push
push
call
test
jne
mov
test
je
add
sub
sub
sbb
test
je
add
mov
or
jne
mov
call
test
jne
mov
call
test
jne
jmp
mov
call
test
jne
mov
mov
cmp
je
mov
call
cmp
jne
xor
pop
pop
pop
ret
mov
jmp
mov
call
sub
push
push
push
mov
mov
and
push
mov
mov
mov
push
lea
push
push
push
push
push
mov
lea
mov
push
push
push
push
call
mov
jmp
mov
mov
mov
ret
mov
or
cmp
jne
mov
mov
mov
sub
neg
sbb
and
mov
mov
call
mov
pop
pop
mov
pop
leave
ret
mov
push
call
mov
mov
neg
sbb
and
add
ret
mov
call
sub
mov
push
mov
mov
push
push
mov
mov
mov
push
or
mov
pop
jne
mov
mov
cmp
je
mov
mov
jmp
xor
xor
cmp
ja
cmp
jbe
cmp
jne
mov
push
push
push
mov
push
push
call
cmp
jne
push
lea
call
mov
push
lea
mov
call
mov
and
mov
cmp
mov
mov
mov
mov
mov
je
push
lea
call
xor
cmp
jle
push
lea
call
inc
cmp
jl
xor
xor
cmp
jle
mov
mov
mov
cmp
je
mov
mov
inc
cmp
jl
cmp
mov
jle
mov
mov
shl
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jbe
mov
lea
mov
sub
mov
jmp
mov
mov
cmp
je
mov
inc
test
jl
mov
mov
mov
cmp
jne
mov
inc
add
mov
adc
mov
add
cmp
jb
cmp
je
mov
mov
mov
mov
mov
mov
mov
dec
test
jl
mov
lea
mov
cmp
jne
cmp
je
dec
sub
test
jge
and
mov
call
mov
movzx
call
sub
lea
mov
mov
movs
movs
lea
movs
call
mov
cmp
jne
push
mov
call
add
adc
jmp
mov
jmp
mov
mov
add
adc
cmp
jb
ja
cmp
jbe
mov
mov
cmp
je
mov
inc
mov
cmp
jl
push
push
lea
call
mov
xor
mov
mov
cmp
mov
mov
jle
mov
mov
cmp
je
mov
mov
add
adc
cmp
jne
cmp
je
add
adc
jmp
cmp
jb
ja
cmp
jbe
mov
mov
xor
inc
add
cmp
jl
mov
cmp
jb
ja
mov
cmp
jbe
mov
mov
mov
cmp
mov
ja
jb
cmp
jae
mov
mov
push
mov
push
mov
push
call
cmp
je
mov
jmp
push
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
test
mov
mov
mov
je
mov
push
call
push
push
mov
mov
call
lea
call
cmp
mov
je
lea
call
mov
test
jne
lea
call
mov
push
mov
pop
lea
call
lea
lea
push
mov
call
lea
mov
call
dec
jne
mov
mov
mov
mov
cmp
jne
cmp
je
and
mov
and
cmp
jle
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
or
je
and
cmp
je
lea
mov
test
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
test
jl
inc
push
lea
push
call
mov
mov
call
mov
mov
push
call
pop
movzx
mov
call
mov
push
mov
mov
call
mov
inc
mov
cmp
jl
and
cmp
je
push
call
mov
pop
mov
test
mov
je
mov
and
lea
call
mov
jmp
xor
push
lea
mov
mov
call
mov
mov
cmp
je
add
lea
push
call
jmp
mov
test
jne
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
jmp
and
mov
lea
push
push
mov
call
test
push
mov
je
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
jmp
lea
call
mov
push
call
mov
xor
push
push
call
cmp
mov
je
mov
lea
mov
call
lea
mov
call
lea
mov
call
cmp
mov
je
mov
push
call
mov
jmp
mov
call
cmp
mov
je
mov
lea
mov
call
lea
mov
call
lea
mov
call
cmp
mov
je
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
call
test
je
lea
push
mov
mov
mov
call
jmp
mov
lea
push
call
mov
call
test
je
cmp
jne
mov
test
je
add
lea
push
call
mov
jmp
mov
and
and
and
lea
lea
push
call
mov
mov
cmp
jge
lea
shl
mov
jmp
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
shl
cmp
jne
push
mov
call
mov
mov
push
push
push
mov
mov
mov
mov
add
mov
mov
adc
push
mov
push
mov
call
test
mov
jne
mov
add
mov
adc
mov
mov
and
mov
mov
mov
cmp
jle
mov
shl
mov
mov
mov
add
push
push
call
inc
mov
mov
add
cmp
jl
mov
push
lea
call
jmp
lea
call
lea
mov
call
test
mov
jne
and
and
lea
lea
push
lea
push
mov
call
lea
push
call
mov
mov
and
mov
mov
mov
test
mov
mov
jbe
shl
mov
jmp
mov
mov
and
mov
cmp
je
mov
inc
mov
test
jl
mov
mov
mov
cmp
jne
mov
push
lea
call
mov
add
cmp
jb
push
lea
mov
push
mov
push
push
call
test
mov
jne
mov
test
je
mov
push
call
and
push
lea
call
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
adc
mov
mov
mov
mov
lea
lea
mov
call
mov
lea
mov
mov
call
mov
push
push
lea
mov
mov
push
lea
push
lea
push
push
push
call
test
mov
jne
mov
call
cmp
jne
mov
mov
cmp
jge
mov
mov
mov
add
adc
mov
inc
cmp
jl
mov
lea
call
add
lea
push
mov
adc
lea
call
lea
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
push
mov
lea
call
mov
mov
and
mov
mov
test
mov
jbe
lea
call
lea
mov
push
lea
push
push
mov
call
cmp
je
mov
inc
mov
test
jl
mov
mov
mov
mov
cmp
jne
cmp
je
lea
call
mov
lea
push
lea
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
push
call
pop
mov
lea
push
lea
push
call
push
mov
call
mov
inc
cmp
pop
jb
inc
add
mov
cmp
jl
mov
mov
test
mov
je
push
lea
call
mov
push
lea
mov
call
cmp
ja
cmp
jbe
mov
jmp
and
and
test
jle
mov
mov
push
mov
mov
mov
mov
mov
push
push
lea
call
sub
mov
push
pop
mov
rep
lea
call
inc
mov
cmp
jl
mov
mov
lea
lea
push
push
call
lea
push
call
mov
push
lea
mov
call
test
jle
and
mov
mov
mov
push
lea
call
add
dec
jne
and
test
jle
jmp
mov
xor
push
lea
mov
mov
mov
mov
mov
call
and
cmp
mov
jge
mov
mov
cdq
cmp
ja
jb
cmp
jae
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
cmp
ja
jb
mov
cmp
ja
cmp
je
lea
push
call
cmp
mov
jne
lea
lea
push
call
jmp
mov
mov
call
test
jne
push
mov
call
pop
inc
mov
mov
add
cmp
jl
jmp
push
mov
call
pop
cmp
jge
mov
push
call
pop
mov
test
mov
je
mov
call
jmp
xor
test
mov
mov
mov
je
mov
push
call
mov
mov
push
mov
shl
add
mov
push
push
call
lea
call
mov
push
push
lea
mov
mov
mov
mov
push
lea
push
lea
push
push
push
call
test
mov
jne
mov
cmp
jge
mov
mov
mov
add
adc
inc
jmp
lea
call
add
lea
push
mov
adc
lea
call
xor
cmp
mov
jle
mov
shl
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
cmp
lea
push
je
mov
lea
call
jmp
lea
mov
push
mov
push
call
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
or
mov
je
inc
mov
mov
jmp
and
and
mov
lea
push
lea
push
call
push
mov
call
add
inc
cmp
pop
jl
mov
push
lea
call
mov
lea
add
mov
mov
call
mov
mov
test
je
mov
push
call
push
mov
call
cmp
pop
jl
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
inc
cmp
jl
mov
cmp
je
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
jmp
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
and
lea
call
or
lea
call
mov
jmp
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
jmp
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
jmp
lea
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
mov
jmp
mov
lea
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
jmp
lea
mov
call
mov
mov
test
je
mov
push
call
push
call
pop
mov
lea
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
and
lea
call
or
lea
call
mov
jmp
push
call
pop
mov
lea
call
mov
mov
test
je
mov
push
call
push
call
pop
mov
lea
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
and
lea
call
or
lea
call
mov
jmp
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
add
or
jmp
mov
cmp
je
mov
mov
cmp
jne
push
lea
call
inc
mov
cmp
jl
push
push
lea
call
and
cmp
jle
mov
mov
mov
mov
mov
mov
lea
call
cmp
lea
mov
push
je
lea
mov
call
jmp
lea
mov
push
push
call
mov
lea
push
lea
push
call
mov
push
call
inc
pop
mov
cmp
jl
lea
mov
call
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
test
mov
je
mov
push
call
xor
and
lea
call
or
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
xor
mov
mov
mov
ret
push
push
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
mov
call
mov
call
lea
mov
call
mov
call
lea
mov
call
mov
call
lea
mov
call
mov
call
lea
call
pop
pop
ret
mov
call
push
push
push
push
xor
push
push
push
push
mov
mov
push
mov
push
call
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
mov
push
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
mov
push
push
push
push
push
call
cmp
mov
je
cmp
mov
je
mov
push
call
or
cmp
je
mov
push
call
mov
jmp
mov
cmp
jne
mov
mov
cmp
je
mov
cmp
mov
je
mov
push
call
or
cmp
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
cmp
jl
xor
cmp
setne
test
jne
mov
mov
mov
mov
mov
mov
mov
call
test
jne
cmp
jge
or
jmp
xor
cmp
setne
pop
pop
ret
push
push
push
push
mov
mov
mov
mov
cmp
jl
xor
cmp
setne
mov
test
jne
xor
test
jle
mov
mov
mov
mov
call
test
jne
inc
cmp
jl
mov
mov
cmp
jge
or
jmp
xor
cmp
setne
mov
test
jne
xor
test
jle
mov
mov
mov
shl
add
add
call
test
jne
inc
cmp
jl
xor
pop
pop
pop
pop
ret
push
push
mov
push
mov
cmp
jb
xor
cmp
setne
test
jne
mov
mov
cmp
jb
cmp
setne
test
jne
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
or
jmp
cmp
jne
cmp
je
push
pop
jmp
add
add
call
pop
pop
pop
ret
push
mov
push
push
mov
push
cmp
jae
or
jmp
xor
cmp
setne
test
jne
xor
test
jbe
mov
mov
mov
mov
cmp
jb
xor
cmp
setne
mov
test
jne
inc
cmp
jb
xor
pop
pop
pop
pop
ret
push
mov
push
mov
cmp
jb
xor
cmp
setne
test
jne
mov
mov
cmp
jae
or
jmp
xor
cmp
setne
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
cmp
jne
test
mov
je
cmp
jne
mov
mov
call
neg
jmp
cmp
je
neg
sbb
and
dec
jmp
mov
mov
call
ret
mov
call
sub
mov
push
push
push
mov
mov
xor
cmp
mov
mov
mov
mov
mov
je
add
mov
call
cmp
jl
lea
jmp
xor
mov
mov
cmp
je
mov
lea
cmp
je
cmp
je
dec
dec
jmp
sub
sar
jmp
or
cmp
jl
cmp
jge
cmp
jge
lea
mov
mov
push
lea
push
call
cmp
mov
je
mov
call
push
lea
mov
mov
mov
call
xor
cmp
mov
jle
mov
mov
cmp
jae
push
lea
call
inc
cmp
jl
cmp
jne
mov
call
mov
jmp
mov
push
call
pop
push
call
pop
jmp
mov
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
push
mov
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
cmp
je
neg
sbb
and
dec
jmp
mov
mov
call
neg
jmp
mov
cmp
je
mov
mov
cmp
jl
xor
cmp
setne
mov
test
jne
mov
mov
mov
lea
mov
lea
call
test
jne
mov
mov
mov
lea
mov
lea
call
test
jne
mov
test
jne
cmp
jne
test
je
cmp
je
test
je
cmp
je
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
jmp
cmp
jne
cmp
jne
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
or
jmp
cmp
jne
cmp
je
push
pop
jmp
mov
mov
call
pop
pop
pop
pop
ret
push
push
mov
mov
mov
mov
call
test
je
add
cmp
jb
xor
pop
pop
ret
mov
jmp
mov
call
sub
push
push
push
mov
push
mov
mov
call
xor
cmp
je
lea
call
push
lea
pop
mov
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
mov
mov
push
lea
mov
mov
call
lea
lea
push
call
lea
mov
call
lea
mov
push
call
lea
mov
push
call
mov
mov
mov
sub
mov
lea
lea
mov
movs
movs
movs
mov
movs
call
sub
lea
mov
mov
mov
mov
movs
movs
movs
movs
call
sub
lea
mov
mov
mov
mov
movs
movs
movs
movs
call
or
lea
jmp
lea
call
push
lea
pop
mov
push
push
mov
mov
mov
mov
mov
call
sub
mov
lea
mov
mov
mov
mov
mov
movs
movs
movs
lea
movs
call
or
lea
call
mov
pop
pop
mov
pop
leave
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
sub
push
push
push
mov
mov
lea
lea
call
xor
push
lea
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
or
je
push
pop
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
lea
mov
call
push
mov
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
push
mov
mov
mov
call
mov
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
push
xor
mov
lea
mov
mov
mov
mov
push
mov
mov
call
cmp
pop
je
mov
mov
mov
jmp
xor
push
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
inc
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
push
push
xor
test
jle
mov
mov
mov
cmp
mov
jne
test
je
cmp
jne
test
je
inc
add
cmp
jl
xor
pop
pop
ret
mov
jmp
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
call
pop
ret
mov
and
ret
mov
shr
and
ret
mov
neg
sbb
xor
and
test
setne
add
ret
mov
call
push
push
mov
mov
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
or
mov
call
mov
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
push
push
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
mov
mov
or
push
mov
call
mov
mov
mov
pop
pop
pop
mov
leave
ret
mov
test
je
mov
push
call
ret
push
mov
sub
push
mov
cmp
mov
jle
mov
push
mov
push
cdq
sub
sub
mov
sar
push
mov
mov
push
push
call
dec
jne
lea
lea
mov
mov
lea
movs
movs
movs
mov
lea
mov
push
movs
movs
push
dec
movs
push
lea
mov
sub
movs
movs
push
mov
pop
movs
call
cmp
jg
pop
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
push
push
mov
call
mov
mov
push
lea
lea
lea
pop
rep
mov
pop
pop
lea
mov
pop
ret
push
mov
sub
push
mov
cmp
mov
jle
mov
push
mov
push
cdq
sub
sub
mov
sar
push
mov
mov
push
push
call
dec
jne
lea
lea
mov
mov
push
pop
lea
rep
mov
push
lea
pop
mov
dec
rep
push
sub
pop
lea
push
mov
rep
push
mov
push
push
pop
call
cmp
jg
pop
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
sub
push
lea
push
push
lea
lea
movs
movs
lea
mov
cmp
mov
movs
jg
jmp
mov
cmp
jge
push
lea
lea
lea
lea
lea
call
test
jle
mov
mov
push
lea
lea
lea
mov
call
test
jge
mov
mov
mov
lea
shl
lea
cmp
movs
movs
movs
jle
mov
mov
lea
lea
lea
movs
movs
movs
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
lea
push
push
lea
lea
cmp
pop
lea
mov
mov
rep
jg
jmp
mov
cmp
jge
push
lea
lea
lea
lea
lea
call
test
jle
mov
mov
push
lea
lea
lea
mov
call
test
jge
mov
mov
push
mov
lea
shl
cmp
lea
pop
rep
jle
mov
mov
lea
push
lea
lea
pop
rep
pop
pop
pop
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
push
mov
cmp
jne
mov
call
mov
xor
cmp
pop
setne
ret
push
mov
mov
mov
call
mov
test
je
mov
push
call
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
mov
mov
push
mov
push
push
mov
cmp
je
mov
test
je
mov
inc
mov
mov
inc
and
dec
test
mov
jne
and
lea
movzx
mov
add
shl
xor
inc
cmp
jl
jmp
mov
shr
mov
dec
test
je
inc
movzx
inc
xor
mov
or
inc
movzx
shl
or
inc
movzx
shl
or
inc
xor
dec
jne
mov
mov
and
je
mov
mov
inc
mov
mov
inc
and
dec
mov
jne
pop
pop
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
push
mov
lea
mov
call
cmp
jne
lea
call
lea
mov
call
mov
lea
movzx
mov
call
mov
movzx
mov
mov
cmp
je
mov
mov
push
call
cmp
jne
cmp
mov
mov
mov
mov
je
cmp
jne
cmp
jb
mov
push
lea
call
test
jne
cmp
jne
cmp
jne
lea
dec
push
push
lea
dec
call
mov
mov
sub
cmp
jb
test
je
add
mov
lea
mov
push
call
test
jne
mov
push
add
lea
push
call
mov
add
cmp
je
push
pop
jmp
mov
lea
mov
call
cmp
jne
xor
jmp
mov
mov
mov
shl
or
xor
cmp
setne
or
xor
test
setne
mov
pop
pop
pop
leave
ret
mov
push
xor
mov
test
jle
push
lea
movzx
shl
sub
xor
inc
cmp
jl
pop
pop
ret
mov
push
xor
push
xor
mov
mov
inc
mov
movzx
shl
add
or
cmp
jl
pop
pop
ret
mov
push
xor
push
xor
mov
mov
inc
mov
movzx
shl
add
or
cmp
jl
pop
pop
ret
push
mov
push
push
test
je
and
mov
test
je
mov
mov
test
je
cmp
jae
mov
mov
push
add
push
push
call
add
sub
add
test
je
mov
pop
pop
xor
pop
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
jne
mov
push
lea
call
jmp
mov
xor
xor
cmp
jge
mov
mov
add
inc
jmp
push
jmp
push
lea
mov
mov
mov
call
push
lea
mov
call
mov
mov
xor
mov
cmp
jge
mov
mov
cmp
jge
mov
lea
mov
mov
and
mov
lea
push
call
inc
jmp
inc
xor
jmp
xor
cmp
jge
mov
mov
cmp
jae
movzx
mov
jmp
mov
push
lea
call
cmp
mov
je
push
lea
call
lea
lea
push
call
push
mov
call
pop
inc
jmp
push
lea
call
lea
mov
call
push
mov
call
pop
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
pop
lea
mov
mov
mov
mov
mov
mov
sub
je
sub
je
dec
je
dec
dec
je
sub
je
sub
je
sub
jne
push
lea
call
push
lea
call
jmp
push
mov
call
mov
mov
mov
and
mov
cmp
jge
mov
jmp
mov
push
lea
call
cmp
mov
je
cmp
jne
push
lea
call
movzx
cdq
push
push
push
lea
pop
call
lea
lea
push
call
push
lea
call
push
mov
call
jmp
mov
lea
call
test
je
lea
push
lea
push
call
test
jne
and
and
lea
lea
push
call
jmp
movzx
and
push
lea
call
jmp
push
jmp
mov
lea
shr
and
push
call
jmp
xor
push
lea
mov
mov
mov
call
mov
mov
shr
test
je
lea
mov
call
jmp
push
mov
lea
call
push
lea
mov
call
push
mov
call
pop
lea
lea
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
and
push
mov
push
call
mov
pop
pop
ret
mov
cmp
je
cmp
jne
xor
jmp
cmp
jne
mov
dec
jmp
movzx
ret
push
mov
push
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
mov
pop
pop
add
ret
mov
call
sub
push
push
push
mov
mov
xor
mov
push
mov
call
lea
mov
call
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
mov
je
mov
push
call
xor
mov
mov
mov
cmp
je
lea
call
mov
push
lea
mov
call
lea
lea
push
push
call
mov
test
mov
jne
mov
test
je
test
je
lea
jmp
xor
mov
mov
mov
cmp
jne
movzx
mov
neg
sbb
and
dec
add
movzx
cmp
je
mov
cmp
jne
lea
mov
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
lea
call
push
pop
jmp
mov
neg
sbb
and
lea
push
push
lea
call
jmp
cmp
je
mov
lea
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
lea
call
jmp
test
je
lea
mov
call
lea
mov
call
jmp
mov
mov
push
cdq
add
mov
mov
adc
lea
push
push
call
mov
test
je
mov
jmp
push
lea
call
xor
test
jne
mov
mov
test
je
lea
jmp
mov
test
jne
mov
mov
mov
mov
shr
test
je
lea
test
je
push
lea
call
mov
mov
test
je
mov
lea
push
push
push
call
mov
test
je
cmp
je
push
call
pop
mov
lea
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
and
lea
call
mov
jmp
test
je
push
call
pop
lea
mov
call
xor
jmp
push
mov
mov
call
pop
jmp
cmp
jne
lea
mov
call
mov
call
test
jne
mov
jmp
mov
mov
ret
mov
cmp
mov
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
lea
call
mov
jmp
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
jmp
mov
call
push
push
mov
mov
mov
and
test
je
mov
push
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
lea
call
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
call
push
push
mov
mov
lea
call
and
lea
call
and
and
mov
and
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
lea
mov
mov
mov
mov
call
and
mov
call
or
lea
call
mov
pop
pop
mov
leave
ret
jmp
push
mov
push
call
push
call
push
call
push
call
add
pop
ret
mov
lea
call
xor
ret
push
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
mov
test
je
mov
push
call
and
and
dec
mov
push
mov
push
call
pop
ret
mov
neg
sbb
and
inc
inc
push
call
ret
mov
call
sub
push
push
mov
push
cmp
jne
mov
mov
mov
and
mov
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jge
mov
add
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
test
je
cmp
jne
mov
mov
mov
cmp
je
inc
inc
mov
add
cmp
jl
mov
sub
mov
jne
mov
and
cmp
jle
mov
test
je
mov
cmp
jbe
call
and
mov
call
mov
mov
test
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
je
xor
cmp
setne
mov
jmp
jne
cmp
je
mov
mov
mov
cmp
jne
xor
mov
mov
add
lea
push
mov
push
push
push
mov
call
mov
cmp
jne
mov
cmp
jne
mov
push
push
mov
call
mov
cmp
jne
inc
mov
mov
call
mov
or
cmp
je
mov
push
call
cmp
jne
jmp
mov
or
push
call
mov
jmp
mov
or
cmp
je
mov
push
call
mov
jmp
mov
push
mov
mov
lea
add
push
mov
push
push
call
test
jne
cmp
jne
cmp
jne
mov
mov
push
mov
push
call
mov
pop
pop
pop
mov
leave
ret
push
mov
push
cmp
jne
mov
mov
cmp
jge
mov
mov
add
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
call
mov
mov
test
je
mov
push
call
and
test
jne
mov
push
push
mov
call
test
jne
inc
mov
mov
cmp
jl
xor
pop
pop
ret
mov
jmp
mov
call
sub
push
mov
push
xor
push
cmp
mov
mov
mov
mov
je
mov
cmp
je
cmp
je
mov
cmp
jb
mov
xor
test
jbe
cmp
jne
and
mov
test
je
and
mov
lea
push
push
push
push
call
mov
mov
cmp
je
mov
test
je
mov
push
sub
push
add
push
call
add
mov
add
test
je
mov
mov
add
sub
sub
add
mov
adc
test
je
mov
jmp
test
jne
mov
call
xor
cmp
jne
cmp
je
mov
call
inc
mov
cmp
mov
jne
mov
cmp
je
mov
cmp
je
mov
sub
push
call
mov
cmp
jne
cmp
je
cmp
je
push
mov
call
jmp
mov
call
cmp
jne
cmp
je
mov
jmp
and
cmp
ja
mov
jmp
mov
mov
mov
cmp
jge
mov
mov
add
xor
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
mov
jmp
cmp
jb
ja
cmp
jbe
mov
sub
cmp
jb
mov
add
test
je
mov
mov
add
sub
add
adc
cmp
jne
cmp
jne
mov
call
test
jne
inc
mov
mov
jmp
mov
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
call
ret
push
mov
sub
push
mov
push
mov
xor
lea
rep
mov
mov
sub
sbb
mov
or
je
mov
test
ja
jb
cmp
jb
mov
and
lea
push
push
push
lea
push
mov
call
test
jne
mov
mov
sub
sbb
mov
or
jne
xor
pop
pop
leave
ret
push
mov
mov
mov
cmp
jge
mov
call
cmp
je
test
jne
mov
test
je
mov
push
call
and
mov
push
push
mov
call
test
jne
inc
mov
mov
cmp
jl
xor
pop
ret
mov
call
sub
push
push
push
xor
cmp
mov
mov
sete
cmp
je
mov
mov
mov
cmp
je
cmp
mov
mov
mov
setne
xor
xor
cmp
mov
jae
cmp
jne
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
shr
test
jne
push
mov
lea
call
cmp
je
add
adc
mov
mov
mov
xor
xor
add
adc
mov
inc
jmp
add
adc
mov
push
mov
push
push
call
xor
push
mov
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
and
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
push
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
mov
mov
call
test
jne
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
je
mov
push
call
mov
mov
pop
pop
mov
pop
leave
ret
push
lea
call
mov
mov
mov
mov
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
inc
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
shr
test
je
xor
cmp
setne
and
mov
lea
push
push
mov
push
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
mov
push
push
call
mov
test
jne
mov
test
je
mov
push
call
and
mov
push
push
call
mov
mov
test
mov
jmp
push
lea
call
test
mov
jge
xor
cmp
setne
and
mov
lea
push
push
mov
push
push
mov
call
mov
test
jne
mov
push
push
call
mov
test
je
mov
mov
jmp
mov
test
je
mov
push
call
and
mov
push
push
call
mov
mov
test
mov
je
jmp
mov
mov
mov
lea
mov
mov
call
cmp
jge
push
lea
call
inc
jmp
push
lea
call
mov
inc
xor
xor
mov
mov
add
adc
mov
mov
mov
cmp
jae
cmp
jne
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
shr
test
jne
push
lea
call
cmp
jne
mov
cmp
jge
push
lea
call
inc
jmp
push
lea
call
mov
mov
inc
xor
xor
add
adc
mov
mov
inc
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
jne
push
call
test
pop
je
xor
mov
mov
mov
mov
mov
mov
jmp
xor
test
mov
je
mov
push
call
push
mov
mov
call
push
mov
push
mov
lea
mov
push
push
push
push
mov
add
push
call
mov
and
mov
and
sub
je
dec
je
dec
je
dec
je
mov
call
mov
test
jne
mov
mov
add
mov
adc
mov
test
je
mov
push
call
jmp
cmp
jne
push
call
pop
mov
mov
test
mov
je
push
call
jmp
xor
push
lea
mov
mov
call
movzx
mov
push
call
mov
test
je
jmp
cmp
jne
push
call
pop
mov
mov
test
mov
je
call
jmp
xor
push
lea
mov
mov
call
movzx
mov
mov
jmp
cmp
jne
push
call
pop
mov
mov
test
mov
je
call
jmp
xor
push
lea
mov
mov
call
mov
mov
mov
mov
xor
mov
mov
push
mov
mov
mov
call
and
and
mov
mov
mov
mov
sub
sbb
or
je
mov
mov
cmp
jge
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jne
mov
push
lea
call
mov
shr
test
je
movzx
jmp
xor
mov
push
movzx
mov
mov
mov
xor
add
push
mov
adc
push
push
push
call
mov
test
je
mov
mov
jmp
mov
mov
movzx
cmp
jne
inc
and
and
jmp
inc
and
cmp
jne
and
lea
push
lea
push
call
cmp
mov
je
test
je
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
cmp
sete
cmp
jne
mov
mov
add
mov
mov
push
adc
add
pop
mov
adc
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
and
cmp
jmp
mov
mov
sub
sbb
mov
mov
jne
cmp
jbe
mov
xor
mov
mov
mov
xor
cmp
jb
ja
cmp
jbe
mov
mov
mov
mov
and
sub
je
dec
je
dec
je
dec
jne
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
push
mov
push
push
push
push
push
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
mov
jmp
cmp
jne
mov
call
mov
test
jne
mov
mov
sub
sbb
or
je
mov
call
mov
test
je
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
mov
lea
add
mov
mov
adc
call
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
and
lea
call
xor
jmp
mov
ret
mov
call
push
push
mov
mov
mov
mov
mov
and
lea
call
and
lea
call
mov
and
mov
mov
mov
mov
pop
mov
leave
ret
push
mov
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
push
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
mov
inc
mov
ret
mov
dec
mov
jne
test
je
mov
push
call
xor
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
mov
mov
and
lea
call
or
lea
call
mov
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
and
call
and
mov
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
mov
mov
mov
xor
ret
push
push
mov
xor
push
mov
cmp
je
inc
cmp
jne
push
mov
call
mov
mov
add
lea
mov
inc
test
je
mov
mov
inc
inc
jmp
add
mov
pop
pop
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
mov
mov
or
push
mov
call
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
push
push
push
mov
xor
mov
test
je
mov
lea
cdq
sub
mov
sar
mov
mov
cmp
je
jae
mov
jmp
lea
cmp
jne
mov
push
mov
mov
call
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
mov
push
mov
call
mov
and
test
mov
je
mov
push
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
push
mov
mov
mov
lea
mov
mov
lea
push
mov
mov
call
mov
mov
mov
mov
and
lea
push
lea
call
add
lea
push
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
call
mov
and
add
push
lea
call
add
lea
push
mov
mov
mov
call
add
lea
push
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
mov
push
mov
push
push
mov
mov
add
mov
push
call
xor
test
jle
mov
push
mov
call
test
pop
je
mov
mov
mov
mov
jmp
xor
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
push
push
mov
mov
cmp
jb
call
test
je
mov
mov
inc
mov
pop
leave
ret
lea
push
push
mov
call
push
push
push
xor
mov
xor
mov
call
movzx
mov
add
shl
or
cmp
jl
mov
pop
pop
pop
ret
push
push
push
xor
mov
xor
mov
call
movzx
mov
add
shl
or
cmp
jl
mov
pop
pop
pop
ret
mov
call
sub
push
push
mov
xor
push
lea
mov
mov
mov
mov
call
mov
mov
call
cmp
mov
je
push
lea
call
jmp
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
lea
push
mov
push
call
mov
and
push
mov
call
push
or
call
pop
lea
push
mov
call
push
lea
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
mov
push
mov
mov
dec
test
je
push
lea
mov
call
dec
jne
pop
pop
ret
mov
call
sub
push
push
mov
push
mov
mov
mov
mov
call
mov
xor
push
push
push
push
push
call
cmp
jne
mov
push
push
mov
push
call
cmp
jne
mov
mov
mov
add
push
push
mov
adc
push
push
push
call
cmp
jne
push
mov
call
test
jne
mov
jmp
push
mov
call
mov
call
mov
call
mov
mov
call
test
jne
mov
call
mov
mov
call
test
jne
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
cmp
mov
ja
mov
call
mov
mov
call
mov
mov
shr
test
je
mov
call
mov
mov
call
mov
mov
call
mov
mov
movzx
push
call
test
je
lea
mov
push
call
mov
shr
test
je
lea
mov
push
call
cmp
mov
jbe
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
movzx
push
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
push
lea
call
movzx
inc
cmp
jl
mov
mov
xor
add
mov
push
adc
push
push
push
push
call
cmp
jne
push
mov
call
mov
call
cmp
mov
jbe
push
lea
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
movzx
movzx
shl
or
mov
mov
call
mov
lea
push
mov
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
cmp
jge
lea
lea
push
call
push
or
call
movzx
inc
pop
cmp
jl
xor
mov
pop
pop
pop
mov
leave
ret
push
call
pop
push
pop
jmp
push
mov
xor
lea
mov
mov
mov
call
lea
call
pop
ret
push
mov
push
push
push
mov
mov
mov
mov
lea
mov
mov
lea
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
mov
call
mov
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
jne
push
pop
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
push
lea
call
lea
call
lea
call
xor
cmp
mov
jle
mov
mov
mov
mov
mov
call
test
je
mov
dec
jmp
mov
push
lea
call
mov
call
add
and
cmp
jle
push
lea
push
call
inc
mov
cmp
jl
inc
cmp
jl
push
push
lea
call
push
pop
cmp
mov
jle
lea
mov
push
push
call
test
jne
mov
mov
shl
mov
inc
mov
mov
mov
inc
cmp
jl
push
lea
call
xor
cmp
jle
mov
mov
lea
push
call
cmp
jl
push
lea
call
inc
cmp
jl
pop
pop
pop
leave
ret
mov
push
xor
test
jle
mov
mov
mov
cmp
je
cmp
je
inc
add
cmp
jge
jmp
mov
pop
ret
xor
pop
ret
push
mov
call
test
je
dec
mov
pop
ret
push
push
push
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shr
mov
and
shr
and
test
je
test
jne
jmp
test
je
test
jne
push
pop
jmp
push
mov
call
mov
push
mov
call
cmp
jl
xor
cmp
setne
mov
test
jne
mov
mov
cmp
jb
xor
cmp
setne
mov
test
jne
mov
mov
cmp
jb
cmp
setne
test
jne
mov
mov
cmp
jl
cmp
setne
mov
test
jne
mov
mov
cmp
jge
or
jmp
xor
cmp
setne
pop
pop
pop
pop
pop
ret
push
mov
sub
push
push
push
push
mov
pop
cmp
jle
mov
mov
mov
call
test
je
mov
mov
cmp
je
cmp
je
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
inc
cmp
jl
xor
mov
cmp
mov
mov
mov
mov
jle
mov
mov
lea
mov
push
call
cmp
jge
mov
mov
mov
mov
mov
mov
mov
shr
test
jne
push
mov
call
cmp
je
mov
jmp
mov
xor
cmp
ja
jb
cmp
jae
cmp
jne
mov
xor
add
adc
cmp
jne
cmp
jne
mov
mov
xor
xor
add
mov
adc
mov
mov
inc
mov
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
cmp
jle
mov
push
mov
push
cdq
sub
sub
mov
sar
push
mov
mov
push
push
call
dec
jne
lea
push
mov
mov
mov
push
mov
mov
dec
mov
push
mov
push
mov
pop
mov
sub
call
cmp
jg
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
lea
mov
mov
mov
mov
cmp
jg
jge
push
lea
lea
mov
lea
call
test
jle
mov
push
lea
lea
call
test
jge
mov
mov
mov
mov
mov
shl
jmp
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
call
push
push
push
call
mov
pop
mov
xor
cmp
mov
je
mov
lea
mov
call
mov
mov
mov
pop
mov
leave
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
add
jmp
mov
call
push
push
mov
mov
lea
mov
call
lea
mov
call
and
lea
call
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
jmp
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
xor
mov
mov
mov
mov
sub
je
dec
je
sub
jne
mov
cmp
je
push
lea
call
jmp
mov
cmp
je
push
push
jmp
mov
cmp
je
push
push
lea
call
push
lea
call
or
lea
call
mov
xor
mov
leave
ret
push
mov
push
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
test
jne
mov
add
lea
adc
mov
add
adc
xor
pop
pop
ret
mov
call
sub
push
push
mov
push
mov
lea
xor
push
mov
push
push
push
push
mov
mov
call
cmp
jne
mov
push
push
push
push
push
call
cmp
jne
lea
mov
call
lea
mov
push
lea
push
push
mov
call
cmp
jne
cmp
je
lea
lea
push
call
mov
lea
mov
push
mov
push
add
adc
and
push
push
push
call
cmp
jne
mov
lea
cmp
ja
jb
mov
cmp
ja
mov
cmp
je
cmp
jne
mov
lea
push
push
push
call
cmp
jne
mov
push
cdq
pop
idiv
test
jne
mov
mov
cdq
mov
lea
push
lea
mov
mov
push
push
call
cmp
mov
jne
or
lea
call
lea
call
jmp
push
lea
call
or
lea
call
cmp
jne
mov
mov
push
pop
cmp
mov
je
mov
lea
push
push
push
call
mov
cmp
je
mov
mov
mov
lea
push
push
push
mov
call
test
jne
cmp
jne
push
lea
call
lea
push
push
lea
mov
call
push
lea
mov
call
push
mov
call
pop
mov
mov
call
push
cmp
je
call
pop
lea
mov
call
mov
or
cmp
je
mov
push
call
mov
jmp
call
pop
mov
lea
call
mov
or
cmp
je
mov
push
call
xor
jmp
or
lea
mov
call
jmp
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
jmp
push
mov
push
call
push
call
push
call
push
call
add
pop
ret
mov
call
push
push
push
mov
xor
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
and
push
push
mov
push
mov
mov
push
call
push
mov
push
call
test
jne
push
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
lea
push
call
lea
push
call
xor
pop
ret
push
push
mov
xor
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
pop
xor
pop
ret
mov
cmp
je
mov
jmp
or
mov
mov
xor
ret
mov
call
push
push
push
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
push
mov
mov
mov
mov
call
lea
mov
push
mov
mov
mov
mov
mov
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
push
mov
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
push
call
pop
lea
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
sub
push
push
push
mov
xor
mov
cmp
jb
cmp
jne
cmp
je
mov
mov
add
lea
adc
and
push
push
mov
mov
lea
mov
mov
mov
push
push
push
push
call
cmp
jne
mov
lea
mov
mov
add
adc
mov
cmp
jne
mov
cmp
jne
inc
mov
jmp
mov
lea
push
lea
push
push
mov
call
cmp
jne
cmp
je
mov
jmp
xor
jmp
push
lea
call
push
pop
jmp
mov
mov
pop
pop
pop
leave
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
jmp
mov
cmp
jae
lea
mov
call
mov
jmp
push
mov
call
mov
cmp
je
lea
mov
call
mov
jmp
lea
mov
cmp
ja
je
sub
je
sub
je
dec
je
dec
jne
mov
mov
add
adc
and
push
push
lea
call
jmp
call
push
jmp
call
push
lea
call
jmp
mov
lea
call
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
jmp
mov
cmp
je
lea
call
lea
lea
push
call
jmp
sub
je
dec
je
sub
je
dec
jne
lea
lea
call
push
lea
mov
call
push
mov
jmp
push
lea
call
jmp
lea
lea
call
push
lea
mov
call
push
mov
jmp
lea
lea
call
push
lea
mov
call
push
mov
call
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
cmp
jne
mov
or
jne
mov
cdq
ret
mov
mov
ret
mov
test
je
cmp
je
cmp
je
cmp
je
xor
ret
mov
ret
push
pop
jmp
push
and
push
mov
push
call
mov
pop
pop
ret
mov
call
sub
push
push
mov
xor
push
mov
mov
mov
mov
mov
cmp
sete
cmp
jne
mov
cmp
sete
cmp
je
mov
mov
cmp
je
cmp
je
mov
mov
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
call
add
adc
inc
jmp
push
mov
push
mov
push
call
push
mov
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
push
call
cmp
pop
je
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
mov
mov
mov
cmp
jb
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
jne
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
xor
jmp
cmp
jne
mov
lea
jmp
mov
mov
mov
mov
push
mov
lea
mov
push
push
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
jmp
mov
call
add
mov
mov
mov
mov
adc
add
adc
and
add
adc
mov
call
cmp
je
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
push
push
call
jmp
cmp
mov
jne
cmp
jne
cmp
jne
mov
jmp
mov
mov
mov
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
jmp
mov
push
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
xor
xor
jmp
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
or
jne
mov
mov
mov
push
call
jmp
cmp
jne
mov
mov
xor
add
mov
push
adc
push
mov
push
push
mov
push
call
cmp
mov
je
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
mov
cmp
je
mov
push
call
cmp
mov
je
mov
push
mov
call
mov
jmp
mov
mov
push
add
adc
and
push
mov
mov
push
push
mov
mov
mov
push
mov
mov
push
mov
call
mov
cmp
je
mov
mov
jmp
cmp
je
mov
inc
mov
mov
lea
call
mov
or
jne
xor
jmp
push
pop
mov
push
push
mov
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
call
inc
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
push
mov
push
push
xor
mov
mov
mov
mov
cmp
jne
mov
or
jne
push
call
cmp
pop
je
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
and
and
add
lea
push
mov
mov
mov
call
mov
mov
xor
jmp
mov
push
mov
mov
push
xor
add
adc
push
push
call
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
test
je
mov
push
call
and
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
mov
mov
mov
mov
mov
mov
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
push
mov
call
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
call
lea
lea
push
mov
call
lea
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
mov
call
sub
mov
push
push
xor
cmp
push
mov
mov
je
cmp
jne
cmp
jne
lea
call
mov
mov
mov
mov
xor
cmp
jae
lea
call
test
mov
jne
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
lea
mov
push
lea
push
lea
push
push
push
call
mov
xor
cmp
je
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
mov
setne
cmp
mov
setne
cmp
mov
mov
mov
je
and
and
mov
lea
push
push
push
push
mov
call
mov
xor
cmp
je
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
jne
and
jmp
cmp
je
lea
mov
call
lea
mov
call
mov
mov
jmp
cmp
setne
mov
lea
mov
call
and
and
mov
lea
push
push
push
push
mov
call
test
mov
je
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
jne
mov
neg
sbb
and
add
or
jmp
cmp
je
lea
mov
call
lea
mov
call
mov
mov
jmp
mov
lea
mov
mov
call
and
and
mov
lea
push
push
push
push
mov
call
mov
xor
cmp
je
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
jne
mov
jmp
cmp
je
lea
mov
call
lea
mov
call
mov
mov
jmp
lea
lea
call
test
jne
and
lea
mov
call
and
and
mov
lea
push
push
push
push
mov
call
test
mov
je
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
jne
push
lea
call
lea
lea
mov
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
call
push
mov
call
add
cmp
je
push
lea
call
lea
mov
call
lea
mov
push
push
mov
call
test
mov
je
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
je
lea
mov
call
lea
mov
call
mov
mov
jmp
lea
mov
push
push
mov
call
test
mov
je
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
je
and
and
mov
lea
push
push
push
push
mov
call
test
mov
je
lea
mov
call
lea
mov
call
mov
lea
mov
call
and
lea
call
mov
jmp
cmp
je
lea
mov
call
lea
mov
call
mov
mov
lea
call
and
lea
call
mov
jmp
mov
lea
mov
mov
mov
mov
call
lea
lea
push
call
lea
mov
call
inc
jmp
mov
lea
push
push
mov
mov
add
push
call
mov
mov
lea
mov
call
and
lea
call
mov
jmp
mov
ret
mov
jmp
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
xor
push
mov
mov
mov
lea
push
mov
push
push
push
call
cmp
je
mov
jmp
cmp
jne
push
lea
call
push
lea
lea
mov
call
mov
push
mov
call
push
call
push
call
pop
pop
jmp
cmp
je
mov
or
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
push
xor
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
lea
push
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
push
mov
push
call
push
call
push
call
add
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
and
lea
push
lea
call
lea
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
mov
push
xor
mov
push
lea
mov
mov
mov
mov
mov
mov
call
push
lea
mov
mov
mov
mov
call
mov
push
mov
mov
push
call
cmp
jne
mov
cmp
je
mov
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
mov
mov
call
test
je
mov
mov
call
test
jne
cmp
ja
jb
cmp
ja
mov
add
and
cmp
mov
jl
push
mov
call
mov
mov
mov
push
mov
call
cmp
jne
mov
mov
add
mov
mov
mov
xor
cmp
je
inc
cmp
jne
mov
mov
mov
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jg
cmp
jge
cmp
je
push
pop
jmp
cmp
je
lea
mov
push
call
cmp
je
lea
lea
push
call
jmp
mov
push
call
push
call
pop
mov
pop
pop
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
and
mov
mov
and
mov
mov
and
and
lea
lea
push
mov
call
test
jne
mov
cmp
je
cmp
jne
add
lea
call
test
je
mov
lea
push
lea
mov
mov
call
test
je
jmp
cmp
jne
push
jmp
push
jmp
cmp
je
push
mov
call
xor
jmp
push
push
pop
lea
call
lea
lea
push
push
pop
mov
call
test
je
lea
mov
push
lea
call
test
jne
and
lea
mov
push
lea
call
test
jne
and
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
cmp
lea
mov
jne
movzx
movzx
shl
or
movzx
shl
or
movzx
movzx
shl
or
xor
mov
movzx
shl
or
movzx
shl
or
movzx
shl
or
xor
or
mov
or
mov
mov
jmp
push
push
pop
lea
call
test
je
lea
lea
push
push
pop
call
test
je
lea
mov
push
lea
call
test
je
push
lea
push
push
call
mov
add
mov
lea
push
push
pop
lea
call
lea
lea
push
push
push
call
add
lea
lea
push
push
pop
call
lea
lea
push
push
pop
call
cmp
mov
lea
setne
mov
lea
push
call
test
je
cmp
mov
lea
setne
mov
lea
push
call
test
jne
push
pop
jmp
xor
push
lea
mov
mov
mov
call
lea
mov
push
lea
mov
call
cmp
je
xor
mov
mov
cmp
jne
inc
cmp
jl
cmp
je
push
lea
call
push
lea
lea
mov
call
push
mov
lea
mov
call
push
mov
mov
call
push
call
push
call
push
call
add
cmp
jne
mov
mov
mov
xor
xor
movzx
add
inc
cmp
jl
cmp
je
push
pop
jmp
mov
xor
mov
push
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
sub
push
mov
mov
push
lea
call
and
xor
cmp
pop
jne
inc
cmp
je
lea
lea
call
mov
mov
mov
mov
mov
cmp
je
test
je
xor
jmp
push
pop
leave
ret
push
mov
push
push
lea
push
call
test
je
mov
mov
cmp
mov
ja
jb
cmp
ja
push
pop
jmp
xor
leave
ret
xor
cmp
jne
inc
cmp
jl
mov
ret
xor
ret
push
mov
sub
push
mov
mov
push
lea
call
mov
and
lea
push
call
pop
leave
ret
push
mov
push
and
and
and
call
mov
mov
mov
mov
and
mov
mov
pop
ret
push
mov
mov
call
ret
push
call
ret
push
mov
sub
push
mov
mov
push
mov
xor
cmp
lea
rep
jg
mov
push
lea
call
mov
lea
call
test
je
mov
lea
call
test
je
mov
lea
call
test
je
push
lea
push
call
push
lea
push
call
push
lea
push
push
call
mov
add
lea
lea
push
mov
call
test
je
lea
push
push
lea
push
call
add
lea
lea
push
call
test
je
push
lea
lea
call
test
je
cmp
je
mov
lea
call
test
je
cmp
je
mov
lea
call
test
je
xor
xor
mov
movzx
add
inc
cmp
jl
lea
call
test
jne
mov
jmp
mov
lea
push
push
call
pop
pop
leave
ret
push
xor
cmp
mov
jle
sub
mov
test
mov
je
inc
inc
cmp
jl
pop
ret
push
mov
sub
push
mov
push
push
lea
call
mov
cmp
jl
xor
jmp
push
push
pop
sub
test
jle
mov
push
mov
mov
mov
shr
rep
mov
and
rep
pop
mov
lea
mov
mov
inc
inc
test
jne
mov
pop
push
call
pop
mov
pop
leave
ret
mov
call
sub
push
push
and
pop
push
mov
lea
push
call
lea
lea
push
call
and
push
mov
mov
call
push
call
pop
mov
mov
pop
mov
leave
ret
push
mov
sub
push
mov
push
push
push
mov
push
lea
call
mov
push
pop
cmp
jle
xor
mov
mov
mov
mov
xor
mov
push
shr
mov
mov
pop
mov
inc
call
cmp
mov
mov
jl
push
call
pop
jmp
sub
test
jle
mov
mov
mov
mov
shr
rep
mov
and
rep
push
add
push
push
call
push
call
add
pop
pop
pop
leave
ret
mov
cmp
jl
xor
jmp
mov
mov
mov
inc
inc
test
jne
mov
ret
mov
call
sub
push
mov
push
mov
mov
cmp
jge
push
call
jmp
push
push
lea
call
and
push
inc
lea
mov
mov
cdq
mov
mov
mov
mov
call
mov
and
mov
and
lea
push
call
test
jne
mov
mov
push
push
call
test
jne
push
mov
push
call
test
jne
push
lea
call
lea
push
push
mov
call
push
lea
mov
call
push
and
call
pop
lea
mov
push
call
or
lea
mov
call
mov
pop
mov
pop
pop
mov
leave
ret
push
push
push
mov
mov
push
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
lea
lea
push
call
lea
lea
push
call
push
mov
pop
sub
lea
sub
mov
mov
inc
lea
cmp
jb
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
push
mov
sub
mov
push
and
mov
jne
xor
jmp
mov
sub
je
mov
push
mov
push
xor
lea
shr
rep
mov
and
rep
pop
pop
lea
push
push
mov
call
pop
leave
ret
push
mov
sub
push
mov
push
mov
xor
lea
rep
xor
lea
push
push
mov
call
test
jne
inc
cmp
jl
pop
pop
leave
ret
mov
call
sub
push
xor
push
push
mov
mov
mov
push
lea
mov
call
mov
xor
mov
mov
mov
cmp
jle
mov
mov
mov
cmp
je
mov
mov
add
adc
jmp
mov
mov
xor
mov
mov
mov
add
adc
add
adc
mov
inc
add
cmp
mov
jl
mov
push
mov
push
push
call
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
cmp
mov
mov
mov
je
mov
push
call
push
push
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
lea
mov
call
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
mov
mov
mov
lea
call
cmp
mov
je
mov
lea
mov
lea
push
call
lea
lea
push
call
lea
lea
push
call
cmp
je
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
push
push
mov
lea
mov
push
mov
mov
mov
call
add
jmp
mov
mov
mov
push
lea
call
cmp
je
mov
mov
mov
and
mov
cmp
je
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
lea
push
mov
push
mov
push
call
cmp
mov
je
cmp
jne
lea
lea
push
call
cmp
mov
jne
cmp
jne
push
mov
mov
push
push
push
push
push
call
cmp
mov
jne
mov
add
mov
cmp
jne
mov
cmp
jne
push
lea
push
call
cmp
mov
jne
mov
mov
add
mov
push
push
adc
mov
call
mov
mov
cmp
mov
jne
cmp
je
mov
push
call
jmp
mov
mov
cmp
mov
mov
je
lea
lea
push
call
mov
cmp
jne
mov
mov
xor
add
mov
push
adc
push
push
push
push
call
mov
cmp
jne
mov
mov
jmp
mov
push
push
push
mov
push
push
call
cmp
jne
mov
xor
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
push
push
call
cmp
jne
mov
add
mov
cmp
jne
mov
cmp
jne
push
lea
push
call
cmp
jne
add
mov
mov
adc
lea
mov
call
inc
mov
mov
cmp
jl
lea
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
jmp
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmp
je
mov
push
call
lea
mov
call
jmp
lea
mov
call
mov
mov
cmp
je
mov
push
call
jmp
mov
jmp
mov
lea
mov
call
jmp
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
mov
call
push
push
push
mov
push
xor
cmp
lea
jne
push
call
pop
mov
cmp
mov
je
mov
call
jmp
xor
or
push
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
mov
pop
lea
push
mov
mov
mov
push
add
mov
push
mov
push
call
test
mov
je
or
test
je
mov
push
call
mov
jmp
mov
push
add
push
mov
call
test
mov
je
or
test
je
mov
push
call
mov
jmp
cmp
je
or
test
je
mov
push
call
mov
jmp
and
or
test
mov
mov
mov
je
mov
push
call
xor
mov
pop
pop
pop
mov
leave
ret
push
mov
mov
push
mov
push
lea
call
test
jne
push
mov
push
mov
push
push
push
push
call
pop
pop
ret
push
mov
push
call
xor
mov
mov
mov
mov
mov
mov
pop
ret
mov
call
push
push
push
mov
mov
push
mov
call
and
lea
push
lea
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
xor
push
push
mov
mov
mov
mov
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
jmp
cmp
push
je
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
push
lea
mov
call
push
lea
call
mov
mov
jmp
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
push
lea
mov
call
push
lea
call
mov
mov
mov
or
mov
cmp
mov
je
mov
push
call
mov
push
pop
mov
cmp
jg
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
mov
cmp
mov
mov
mov
jle
mov
mov
mov
cmp
je
mov
push
push
push
push
push
call
mov
cmp
jne
mov
push
push
push
mov
call
cmp
mov
jne
mov
push
push
push
push
push
call
cmp
mov
jne
cmp
je
mov
lea
mov
cmp
jne
push
call
pop
mov
cmp
mov
je
mov
call
jmp
xor
cmp
mov
mov
je
add
jmp
xor
push
mov
call
cmp
je
mov
mov
mov
cmp
jne
push
call
mov
pop
mov
cmp
mov
je
mov
call
mov
mov
mov
jmp
xor
mov
push
add
mov
mov
call
movzx
mov
cmp
jb
cmp
ja
mov
mov
mov
mov
add
push
push
mov
push
call
mov
cmp
jne
push
mov
call
jmp
mov
cmp
jne
push
call
mov
pop
mov
cmp
mov
je
mov
call
mov
mov
mov
jmp
xor
mov
push
add
mov
mov
call
mov
mov
mov
add
push
push
mov
push
call
mov
lea
mov
call
mov
cmp
jne
mov
push
push
push
mov
push
push
call
mov
cmp
jne
push
mov
push
call
mov
cmp
jne
mov
push
add
push
mov
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
lea
jne
cmp
jne
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
mov
push
lea
call
mov
push
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
mov
mov
cmp
push
mov
mov
mov
mov
mov
mov
mov
pop
jne
push
pop
mov
push
lea
push
lea
push
call
mov
mov
cmp
lea
jne
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
jmp
cmp
jne
push
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
push
lea
mov
push
lea
push
mov
call
mov
mov
cmp
lea
jne
call
lea
mov
call
mov
lea
jmp
cmp
je
cmp
movzx
sete
cdq
add
add
adc
mov
mov
jmp
mov
mov
mov
push
mov
mov
push
call
cmp
mov
jne
cmp
je
cmp
je
cmp
je
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
mov
lea
push
push
lea
push
push
call
mov
cmp
jne
mov
cmp
mov
je
mov
push
call
lea
mov
call
lea
mov
call
mov
lea
jmp
mov
push
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
jne
mov
mov
mov
lea
push
push
mov
push
mov
call
mov
cmp
je
push
mov
lea
push
lea
push
push
call
mov
cmp
jne
mov
cmp
mov
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
call
mov
cmp
mov
je
push
jmp
push
lea
call
mov
mov
cmp
jbe
mov
push
mov
mov
push
push
push
push
push
call
mov
mov
cmp
mov
jmp
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
push
lea
mov
call
mov
cmp
mov
je
push
jmp
push
lea
call
push
mov
mov
push
push
push
push
push
call
mov
mov
cmp
mov
jne
cmp
je
mov
push
call
mov
lea
mov
push
push
mov
push
push
push
call
cmp
mov
jne
mov
cmp
jne
mov
mov
mov
not
mov
mov
mov
mov
mov
cmp
je
cmp
je
mov
mov
and
lea
jmp
push
pop
xor
add
adc
mov
cmp
jb
ja
mov
cmp
jmp
mov
cmp
jb
ja
mov
cmp
jb
inc
mov
cmp
jl
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
add
push
push
push
push
push
call
mov
cmp
je
mov
mov
cmp
je
mov
add
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
add
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
add
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
call
jmp
call
lea
mov
call
mov
lea
jmp
mov
mov
cmp
je
mov
add
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
cmp
mov
je
mov
add
push
mov
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
mov
lea
jmp
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
lea
jmp
cmp
je
mov
push
call
mov
mov
cmp
je
mov
add
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
je
mov
add
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
movzx
mov
mov
mov
mov
cmp
je
mov
add
push
call
mov
or
cmp
je
mov
push
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
test
je
mov
add
push
call
ret
mov
dec
mov
jne
push
call
pop
xor
ret
push
mov
call
pop
ret
push
mov
mov
call
mov
push
push
mov
push
lea
or
mov
push
mov
lea
push
push
push
call
test
jne
cmp
je
push
lea
mov
call
lea
mov
mov
push
jmp
mov
not
mov
xor
pop
pop
pop
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
pop
mov
leave
ret
push
mov
call
pop
ret
mov
mov
and
mov
mov
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
push
mov
call
mov
mov
mov
mov
mov
lea
mov
pop
ret
sub
jmp
sub
jmp
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
mov
push
push
push
call
add
test
jne
mov
mov
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
and
mov
mov
mov
push
call
xor
jmp
mov
pop
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
mov
call
push
push
mov
mov
and
lea
call
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
push
and
mov
call
pop
lea
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
xor
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
mov
xor
ret
mov
cmp
jb
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
and
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
mov
mov
sub
sbb
push
jmp
mov
mov
cmp
je
push
lea
call
jmp
mov
mov
mov
mov
or
je
push
push
lea
call
jmp
mov
lea
lea
call
push
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
pop
push
lea
call
lea
mov
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
push
lea
mov
mov
mov
mov
call
mov
mov
cmp
jle
lea
cmp
jl
push
lea
call
mov
push
push
mov
push
call
mov
add
xor
mov
mov
cmp
je
inc
cmp
jne
mov
mov
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
pop
mov
leave
ret
mov
mov
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
je
sub
je
sub
je
dec
je
dec
je
dec
je
dec
je
dec
jne
lea
lea
push
push
call
test
je
lea
jmp
lea
lea
push
push
call
test
je
lea
jmp
mov
call
push
jmp
push
push
lea
call
jmp
push
push
jmp
mov
call
jmp
lea
mov
push
lea
push
call
mov
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
pop
jmp
lea
lea
push
push
mov
call
test
jne
lea
mov
push
push
call
test
je
mov
lea
call
jmp
mov
lea
call
test
je
lea
push
lea
push
call
test
jne
mov
mov
lea
push
lea
call
jmp
sub
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
lea
add
push
push
mov
call
test
je
push
jmp
lea
mov
push
push
call
test
je
push
lea
call
jmp
push
jmp
movzx
jmp
lea
lea
call
push
lea
push
mov
mov
call
push
lea
mov
call
push
call
push
mov
jmp
mov
cmp
jae
movzx
mov
jmp
mov
push
lea
call
jmp
mov
push
lea
mov
mov
mov
call
test
mov
je
cmp
jne
push
lea
call
lea
lea
push
mov
mov
mov
call
test
je
push
lea
call
movzx
inc
lea
shl
cdq
push
push
push
pop
call
lea
lea
push
call
push
lea
call
mov
jmp
test
je
lea
lea
push
xor
call
test
je
xor
cmp
jae
mov
lea
cmp
jne
push
jmp
inc
jmp
test
jne
push
jmp
push
lea
call
push
lea
call
cmp
jae
movzx
push
jmp
movzx
mov
sub
je
dec
dec
je
sub
je
dec
je
dec
je
cdq
push
push
push
lea
pop
call
lea
push
jmp
push
jmp
push
jmp
push
jmp
push
lea
call
mov
shr
test
je
push
jmp
push
lea
call
push
lea
call
push
mov
call
pop
jmp
mov
call
test
je
push
jmp
mov
and
push
lea
call
push
lea
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
push
mov
xor
cmp
jle
mov
mov
push
call
test
jne
inc
cmp
jl
xor
pop
pop
ret
mov
jmp
mov
cmp
jne
cmp
jb
mov
xor
mov
mov
mov
cmp
jne
cmp
jne
mov
mov
movzx
movzx
shl
or
mov
mov
jmp
xor
ret
push
push
mov
xor
cmp
jle
mov
mov
push
call
test
jne
inc
cmp
jl
xor
pop
pop
ret
mov
jmp
mov
cmp
jne
cmp
mov
jae
xor
jmp
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
cmp
mov
sete
ret
mov
push
xor
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
xor
pop
ret
push
push
call
jmp
mov
push
xor
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
xor
pop
ret
push
push
call
jmp
mov
call
sub
push
push
mov
xor
push
lea
mov
mov
mov
mov
call
mov
mov
shr
test
je
mov
lea
call
test
jne
mov
mov
mov
cmp
jne
mov
push
lea
call
push
lea
mov
call
push
mov
call
pop
mov
lea
push
call
push
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
push
push
push
mov
cmp
jne
and
lea
push
lea
mov
mov
call
test
je
xor
cmp
sete
jmp
cmp
jne
mov
call
test
je
xor
jmp
push
pop
pop
leave
ret
mov
mov
test
je
mov
lea
push
push
push
call
jmp
xor
ret
mov
mov
test
je
mov
lea
push
push
push
call
jmp
xor
ret
mov
call
sub
push
push
mov
push
xor
mov
mov
mov
push
mov
call
mov
push
push
push
mov
push
push
call
cmp
jne
push
lea
mov
push
call
test
jne
mov
mov
test
mov
je
mov
push
call
mov
lea
add
push
push
mov
mov
call
mov
mov
test
mov
je
mov
push
call
mov
jmp
mov
push
mov
call
mov
ret
push
pop
jmp
mov
push
mov
call
push
push
call
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
test
je
mov
push
call
ret
push
mov
lea
call
lea
call
xor
pop
ret
mov
call
push
push
push
mov
push
mov
and
and
lea
and
push
mov
call
pop
mov
mov
test
mov
je
call
jmp
xor
and
push
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
mov
sub
mov
push
push
lea
call
test
jne
cmp
jne
cmp
jne
mov
lea
push
push
mov
add
push
mov
call
test
jne
push
mov
push
mov
push
push
push
push
call
jmp
mov
pop
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
mov
mov
mov
and
and
mov
mov
mov
test
mov
je
test
je
lea
lea
push
call
test
je
mov
cmp
jne
lea
lea
push
mov
mov
mov
call
test
je
cmp
mov
sete
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
lea
mov
call
mov
or
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
je
cmp
ja
jb
cmp
jae
and
cmp
je
mov
push
call
jmp
add
adc
movzx
cdq
push
mov
mov
xor
push
mov
add
adc
add
mov
adc
push
push
call
lea
mov
call
add
mov
mov
adc
and
mov
mov
test
mov
je
cmp
je
and
lea
push
lea
mov
mov
call
test
jne
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
mov
mov
mov
cmp
lea
jne
push
call
pop
mov
test
mov
je
mov
call
jmp
xor
push
mov
mov
mov
call
push
lea
call
mov
lea
mov
mov
add
push
push
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
jmp
cmp
mov
je
cmp
jne
push
call
mov
pop
mov
test
mov
je
mov
call
mov
mov
mov
jmp
xor
push
lea
mov
mov
call
push
jmp
cmp
jne
push
call
mov
pop
mov
test
mov
je
mov
call
mov
mov
jmp
xor
push
lea
mov
mov
call
push
lea
call
and
mov
lea
push
push
mov
push
mov
call
mov
test
jne
cmp
lea
jne
mov
push
push
push
mov
call
mov
xor
cmp
je
mov
mov
lea
push
push
mov
call
mov
xor
cmp
je
push
call
jmp
push
lea
mov
mov
mov
call
cmp
mov
jne
cmp
jne
push
lea
call
push
lea
lea
mov
call
push
lea
mov
call
push
call
push
mov
jmp
push
lea
call
push
lea
lea
mov
call
push
lea
mov
call
push
call
push
mov
call
mov
pop
pop
push
mov
push
push
call
push
test
je
call
pop
push
call
mov
mov
test
je
mov
push
call
jmp
call
pop
push
call
mov
mov
test
je
mov
push
call
jmp
mov
push
push
push
mov
call
mov
test
je
mov
mov
jmp
mov
xor
cmp
jle
mov
mov
mov
cmp
je
inc
add
cmp
jl
jmp
mov
cmp
jne
and
test
mov
mov
jne
push
call
pop
xor
cmp
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
push
lea
call
lea
lea
push
call
lea
mov
mov
call
mov
and
mov
mov
mov
mov
lea
push
push
push
mov
call
mov
test
je
mov
lea
mov
mov
push
push
push
call
mov
test
je
mov
mov
jmp
push
pop
cmp
jne
push
call
test
pop
je
and
mov
jmp
cmp
jne
push
call
pop
mov
test
mov
je
mov
call
jmp
xor
mov
jmp
cmp
jne
push
call
pop
mov
test
mov
je
mov
call
jmp
cmp
jne
push
call
pop
mov
test
mov
je
push
mov
call
jmp
cmp
jne
mov
xor
jmp
cmp
jbe
mov
mov
jmp
movzx
cdq
mov
add
adc
push
xor
lea
push
call
mov
test
je
lea
mov
call
jmp
cmp
jne
mov
mov
lea
mov
call
jmp
mov
test
mov
je
mov
push
call
and
mov
lea
push
push
mov
push
mov
call
mov
test
je
push
mov
push
call
mov
test
je
mov
mov
jmp
mov
test
mov
je
mov
push
call
and
test
mov
je
cmp
lea
jne
push
call
pop
mov
test
mov
je
mov
call
jmp
xor
test
mov
mov
je
add
jmp
xor
push
mov
call
mov
push
add
call
cmp
je
push
mov
call
jmp
cmp
je
push
mov
push
push
push
call
mov
test
jne
mov
lea
push
call
mov
test
jne
cmp
jne
push
pop
jmp
push
mov
call
mov
test
jne
mov
push
add
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
jmp
mov
push
lea
mov
call
cmp
je
mov
call
test
jne
jmp
push
lea
call
push
mov
lea
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
test
je
mov
push
call
jmp
cmp
jne
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
cmp
je
mov
push
mov
call
or
cmp
je
mov
jmp
mov
mov
test
je
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
cmp
je
mov
push
mov
call
or
cmp
je
mov
add
push
mov
call
mov
jmp
test
je
mov
push
call
cmp
mov
mov
je
mov
mov
not
cmp
sete
cmp
je
mov
push
push
push
push
call
mov
mov
test
je
mov
push
call
mov
lea
push
push
mov
call
test
je
and
cmp
je
cmp
je
xor
jmp
push
pop
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
add
push
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
test
je
mov
add
push
call
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
lea
mov
call
pop
ret
push
mov
call
lea
mov
mov
mov
mov
mov
pop
ret
push
mov
push
push
push
call
add
test
jne
mov
mov
lea
jmp
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
lea
neg
sbb
push
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
jmp
push
mov
call
lea
lea
mov
and
and
mov
mov
mov
mov
mov
pop
ret
push
mov
push
push
push
call
add
test
je
push
push
push
call
add
test
jne
mov
mov
push
neg
lea
sbb
and
mov
mov
mov
call
xor
jmp
mov
pop
ret
mov
call
sub
push
push
push
xor
lea
mov
mov
call
xor
xor
cmp
mov
mov
mov
sete
cmp
je
mov
mov
mov
cmp
je
xor
cmp
jae
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
adc
add
adc
inc
xor
jmp
mov
push
push
push
mov
call
mov
cmp
je
and
lea
call
mov
jmp
push
mov
mov
mov
mov
call
pop
mov
cmp
mov
je
mov
call
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
push
mov
mov
call
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
jmp
mov
xor
cmp
mov
setne
cmp
mov
je
mov
jmp
mov
mov
mov
push
mov
lea
mov
push
push
push
call
mov
test
jne
mov
lea
mov
mov
push
call
mov
mov
mov
mov
cmp
mov
jne
lea
lea
push
call
mov
cmp
jne
lea
call
test
jne
cmp
jne
cmp
je
mov
push
mov
push
call
mov
test
jne
mov
test
je
mov
push
call
and
mov
push
jmp
test
jne
lea
call
test
jne
mov
cmp
mov
mov
mov
mov
mov
mov
mov
jne
cmp
je
mov
push
mov
push
call
test
mov
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
lea
call
mov
jmp
lea
add
push
lea
push
lea
push
push
push
push
push
call
mov
test
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
and
lea
call
mov
jmp
lea
call
push
mov
push
call
mov
mov
test
lea
je
call
lea
mov
call
lea
mov
call
and
lea
call
mov
jmp
call
lea
mov
call
jmp
mov
push
mov
push
call
mov
test
jne
mov
test
je
mov
push
call
and
mov
push
push
call
mov
test
je
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
jmp
lea
mov
call
mov
mov
test
je
mov
push
call
mov
inc
add
mov
adc
mov
add
mov
adc
xor
jmp
lea
mov
call
and
lea
call
xor
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
push
push
push
mov
push
mov
and
lea
mov
mov
mov
mov
call
mov
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
jmp
mov
call
push
push
push
mov
mov
push
mov
call
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
push
call
and
and
lea
lea
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
push
mov
mov
and
lea
mov
mov
mov
mov
call
and
mov
call
push
call
pop
pop
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
push
mov
push
mov
push
and
lea
mov
call
lea
pop
mov
mov
mov
mov
call
and
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
and
add
push
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
mov
mov
mov
mov
test
mov
je
mov
push
call
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
push
mov
call
pop
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
mov
push
mov
mov
add
mov
and
and
lea
push
mov
call
mov
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
mov
mov
xor
ret
mov
call
sub
push
push
push
xor
lea
mov
mov
call
mov
and
mov
mov
mov
cmp
mov
jae
lea
call
test
mov
jne
push
call
pop
mov
lea
mov
call
and
lea
call
mov
jmp
mov
lea
push
lea
mov
push
lea
push
push
push
call
mov
test
je
push
call
pop
mov
mov
jmp
cmp
mov
setne
cmp
mov
setne
mov
mov
cmp
mov
setne
test
je
cmp
je
mov
mov
call
test
je
mov
xor
cmp
je
push
lea
mov
mov
mov
call
and
and
mov
lea
push
push
mov
push
push
mov
call
mov
test
je
lea
mov
call
push
call
push
call
pop
mov
pop
mov
jmp
cmp
jne
and
jmp
cmp
je
lea
mov
call
push
call
push
call
pop
mov
pop
mov
jmp
mov
mov
lea
mov
call
and
and
mov
lea
push
push
mov
push
push
mov
call
mov
xor
cmp
je
lea
mov
call
push
call
push
call
pop
mov
pop
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
je
lea
mov
call
push
call
push
call
pop
mov
pop
mov
jmp
push
lea
call
lea
mov
call
and
and
mov
lea
push
push
mov
push
push
mov
call
mov
test
je
lea
mov
call
push
call
push
call
pop
mov
pop
mov
jmp
cmp
jne
and
jmp
cmp
je
lea
mov
call
push
call
push
call
pop
mov
pop
mov
jmp
cmp
setne
mov
lea
mov
call
and
and
mov
lea
push
push
mov
push
push
mov
call
mov
test
je
lea
mov
call
push
call
push
call
pop
mov
pop
mov
jmp
cmp
jne
cmp
sete
jmp
mov
lea
mov
mov
call
mov
lea
push
push
mov
call
mov
test
je
push
call
push
call
pop
mov
pop
mov
jmp
mov
lea
push
push
mov
call
mov
test
je
push
call
push
call
pop
mov
pop
mov
jmp
mov
lea
push
push
mov
call
mov
xor
cmp
je
push
call
push
call
pop
mov
pop
mov
jmp
cmp
mov
mov
jne
cmp
je
lea
push
lea
push
call
test
jne
push
call
push
call
pop
mov
pop
mov
jmp
lea
lea
call
lea
lea
call
push
lea
mov
call
push
mov
call
mov
pop
mov
test
je
mov
cmp
jne
test
jne
push
call
push
call
pop
mov
pop
mov
jmp
xor
test
je
push
lea
call
cmp
jne
cmp
jne
lea
lea
push
push
push
lea
call
push
lea
mov
call
push
mov
call
cmp
pop
jne
cmp
jne
push
lea
lea
call
mov
mov
mov
call
push
mov
test
setne
call
cmp
pop
je
xor
cmp
jge
mov
cmp
jae
inc
jmp
cmp
setne
lea
lea
mov
call
test
jne
push
call
push
call
pop
mov
pop
mov
jmp
cmp
jl
push
call
push
call
pop
mov
pop
mov
jmp
push
mov
mov
call
pop
xor
cmp
je
and
and
mov
lea
push
push
mov
push
push
mov
call
mov
test
je
lea
mov
call
push
call
pop
mov
mov
jmp
cmp
je
lea
mov
call
push
call
pop
mov
mov
jmp
mov
mov
lea
mov
call
mov
mov
mov
lea
lea
push
call
push
mov
call
inc
pop
mov
jmp
and
test
mov
mov
je
mov
push
call
mov
lea
push
push
push
mov
call
test
mov
je
mov
push
call
lea
call
mov
mov
test
je
and
mov
lea
push
lea
push
push
mov
call
mov
test
je
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
jmp
cmp
setne
cmp
je
cmp
je
mov
jmp
mov
push
mov
mov
lea
mov
call
lea
mov
call
push
mov
test
sete
call
cmp
pop
je
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
jmp
cmp
je
cmp
jbe
push
call
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
lea
call
and
lea
call
mov
jmp
push
lea
call
push
lea
lea
mov
call
push
lea
mov
call
push
call
push
call
pop
pop
push
mov
call
jmp
and
mov
test
jge
push
pop
cmp
lea
jge
mov
neg
sbb
and
jmp
mov
mov
push
lea
call
cmp
je
push
lea
call
cmp
je
cmp
je
xor
jmp
mov
cmp
sete
cmp
jne
test
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
mov
je
test
je
cmp
jne
cmp
jl
mov
jmp
xor
cmp
setl
dec
and
inc
mov
cmp
jne
cmp
jl
mov
jmp
xor
cmp
setl
dec
and
add
mov
jmp
cmp
je
cmp
jne
cmp
jl
mov
jmp
cmp
jl
mov
jmp
cmp
jl
mov
jmp
xor
cmp
setl
dec
and
add
mov
cmp
jne
xor
cmp
setl
dec
and
add
mov
mov
cmp
jge
mov
push
lea
call
cmp
jne
xor
cmp
setge
mov
cmp
jne
cmp
jne
cmp
jl
mov
jmp
xor
cmp
setge
inc
mov
cmp
jne
cmp
jl
mov
jmp
xor
cmp
setl
dec
and
add
mov
cmp
jne
cmp
mov
jge
push
pop
cmp
jle
push
pop
cmp
jne
push
pop
cmp
jg
mov
push
lea
pop
shl
mov
cmp
jne
lea
mov
cmp
jne
xor
cmp
setge
mov
mov
push
lea
lea
neg
sbb
push
and
lea
push
lea
push
call
lea
mov
mov
call
mov
mov
test
je
mov
push
call
mov
mov
lea
call
and
lea
call
mov
jmp
mov
mov
mov
mov
ret
mov
jmp
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
test
je
call
test
jne
cmp
jne
push
pop
pop
ret
xor
pop
ret
push
pop
test
je
test
jne
xor
ret
mov
call
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
lea
mov
mov
push
mov
mov
mov
mov
call
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
xor
push
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
mov
xor
test
push
jle
mov
mov
cmp
jb
cmp
ja
inc
inc
inc
cmp
jl
mov
pop
ret
xor
pop
ret
mov
call
sub
push
push
mov
push
xor
mov
mov
mov
mov
mov
lea
push
mov
push
push
push
call
cmp
je
mov
jmp
cmp
jne
mov
mov
mov
mov
jmp
cmp
je
mov
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
call
push
call
pop
pop
mov
call
pop
ret
mov
call
sub
push
push
push
call
mov
mov
lea
mov
call
xor
cmp
mov
jle
mov
mov
mov
mov
mov
lea
push
call
mov
mov
call
cmp
je
mov
cmp
jne
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
push
or
mov
call
pop
jmp
mov
call
cmp
jne
mov
cmp
jne
push
lea
call
mov
mov
call
mov
mov
call
cmp
jne
mov
jmp
mov
mov
call
cmp
jne
mov
jmp
mov
mov
call
cmp
jne
mov
jmp
mov
mov
call
cmp
jne
mov
jmp
mov
mov
call
cmp
jne
mov
jmp
mov
mov
call
cmp
jne
mov
push
call
pop
jmp
cmp
jne
mov
cmp
je
cmp
jbe
cmp
jbe
cmp
je
cmp
jne
movzx
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
cmp
jne
push
lea
call
mov
mov
call
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
call
push
lea
mov
call
push
mov
call
pop
mov
mov
call
cmp
jne
mov
jmp
mov
mov
call
cmp
jne
mov
jmp
mov
mov
call
cmp
je
cmp
jne
mov
mov
jmp
mov
mov
call
cmp
jne
mov
push
mov
jmp
mov
cmp
jne
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
mov
cmp
jne
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
mov
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
or
lea
push
push
lea
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
mov
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
lea
push
push
lea
call
lea
mov
push
mov
push
mov
call
push
mov
mov
call
cmp
pop
jne
jmp
lea
push
push
lea
call
mov
mov
mov
call
push
cmp
sete
mov
call
cmp
pop
je
push
lea
pop
mov
push
lea
push
call
lea
mov
push
mov
mov
call
push
mov
mov
call
cmp
pop
jne
mov
mov
jmp
mov
mov
call
cmp
jne
mov
lea
call
cmp
jne
jmp
mov
mov
call
cmp
jne
lea
mov
call
cmp
jne
cmp
je
mov
jmp
mov
mov
call
cmp
jne
mov
lea
mov
call
cmp
jne
cmp
je
mov
push
or
call
mov
pop
inc
add
mov
add
cmp
mov
jl
xor
mov
pop
pop
pop
mov
leave
ret
push
call
mov
pop
jmp
push
jmp
push
call
push
call
pop
mov
pop
jmp
mov
jmp
mov
push
call
pop
mov
jmp
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
jmp
mov
jmp
dec
dec
dec
dec
dec
dec
mov
ret
push
push
mov
push
and
call
mov
lea
push
push
mov
push
push
push
call
test
jne
mov
push
mov
mov
push
mov
mov
call
test
jne
mov
push
push
push
push
push
call
test
jne
push
mov
call
xor
pop
pop
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
and
pop
ret
push
mov
mov
test
je
mov
push
call
and
pop
ret
mov
push
push
push
mov
push
push
call
ret
mov
call
sub
push
push
push
mov
xor
mov
mov
push
lea
mov
mov
call
mov
mov
mov
mov
push
lea
mov
call
cmp
jne
add
mov
adc
mov
cmp
je
cmp
jne
xor
jmp
mov
mov
mov
push
lea
mov
call
mov
push
pop
mov
mov
push
lea
push
push
call
mov
mov
add
add
adc
mov
test
je
mov
mov
sub
sbb
cmp
ja
jb
cmp
ja
mov
mov
sub
mov
lea
push
mov
lea
mov
call
test
jne
mov
mov
add
adc
add
cmp
jb
and
lea
test
mov
jbe
mov
mov
add
cmp
jne
mov
mov
cmp
jne
mov
cmp
sete
jmp
cmp
jne
mov
cmp
jb
xor
test
jne
inc
mov
cmp
jb
add
adc
sub
mov
push
mov
add
push
push
call
add
jmp
mov
jmp
push
mov
call
pop
push
pop
jmp
add
adc
mov
add
mov
adc
mov
mov
xor
push
mov
call
pop
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
call
pop
ret
mov
call
push
push
mov
push
push
mov
push
xor
xor
cmp
mov
mov
je
push
lea
push
mov
call
jmp
mov
mov
mov
mov
ret
mov
jmp
mov
mov
lea
push
call
mov
mov
mov
cmp
je
mov
add
mov
adc
mov
pop
pop
mov
pop
leave
ret
push
mov
push
mov
push
mov
sub
cmp
jb
xor
test
jbe
mov
mov
mov
mov
inc
cmp
jb
add
mov
pop
pop
pop
ret
xor
test
jbe
mov
cmp
jb
mov
call
test
je
mov
mov
mov
mov
inc
inc
cmp
jb
jmp
mov
jmp
push
push
push
xor
xor
cmp
mov
jb
ja
cmp
jbe
mov
call
add
adc
cmp
jb
ja
cmp
jb
pop
pop
pop
ret
push
mov
mov
add
push
push
push
mov
push
push
call
test
je
lea
push
push
mov
call
pop
ret
push
mov
push
mov
lea
push
push
push
call
test
je
lea
push
push
mov
call
xor
cmp
pop
sete
pop
ret
push
mov
push
push
call
test
jne
and
lea
push
push
call
pop
ret
push
mov
push
mov
push
mov
call
cmp
jbe
push
mov
push
call
pop
pop
ret
push
mov
push
lea
push
push
call
mov
leave
ret
push
mov
push
lea
push
push
call
mov
leave
ret
push
mov
push
lea
push
push
call
mov
leave
ret
push
mov
push
push
lea
push
push
call
mov
mov
leave
ret
push
mov
push
lea
push
push
call
test
je
mov
mov
mov
mov
leave
ret
push
mov
push
push
mov
push
mov
test
push
mov
jne
mov
and
and
cmp
jl
push
mov
call
mov
mov
push
push
call
and
mov
call
pop
pop
pop
leave
ret
mov
call
sub
push
mov
mov
push
push
call
mov
cmp
jb
mov
xor
mov
mov
mov
mov
mov
call
mov
mov
call
movzx
sub
cmp
jbe
mov
cmp
jne
mov
cmp
jne
cmp
jne
cmp
jb
mov
call
mov
sub
sub
mov
mov
mov
cmp
jne
cmp
jne
cmp
jb
mov
call
mov
sub
sub
mov
mov
mov
cmp
jne
cmp
jne
cmp
jb
mov
call
mov
sub
sub
mov
mov
mov
cmp
jne
cmp
jb
mov
call
mov
sub
sub
mov
test
jbe
mov
mov
call
dec
jne
jmp
mov
lea
push
push
call
mov
lea
push
call
push
or
sub
mov
call
cmp
pop
jae
jmp
push
or
mov
call
pop
mov
push
push
call
mov
pop
pop
pop
mov
leave
ret
push
mov
sub
push
push
push
lea
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
and
mov
movzx
and
push
mov
push
mov
call
mov
xor
add
mov
mov
cmp
jbe
mov
mov
mov
lea
push
lea
push
mov
movzx
push
add
push
push
push
call
pop
pop
xor
pop
leave
ret
mov
call
sub
push
push
mov
xor
push
mov
cmp
mov
jne
mov
mov
add
mov
adc
push
push
mov
call
cmp
jne
lea
call
mov
mov
call
cmp
jne
lea
mov
push
call
mov
cmp
je
lea
mov
call
mov
jmp
lea
mov
call
cmp
je
mov
shr
test
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
lea
mov
call
push
pop
mov
pop
pop
mov
pop
leave
ret
mov
lea
mov
mov
mov
mov
call
lea
mov
push
call
lea
mov
mov
call
xor
jmp
mov
ret
push
mov
call
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
xor
lea
push
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
cmp
je
xor
ret
mov
mov
cmp
jne
mov
ret
push
cmp
mov
je
cmp
ja
mov
jmp
mov
movzx
movzx
and
and
sub
pop
neg
sbb
inc
ret
push
mov
mov
call
push
mov
push
mov
mov
shr
test
je
lea
xor
push
lea
push
mov
push
call
test
jne
add
cmp
jb
mov
lea
sub
mov
mov
mov
cmp
jne
mov
add
lea
cmp
je
inc
lea
cmp
jbe
add
xor
cmp
jae
mov
inc
mov
inc
jmp
lea
mov
push
mov
sub
push
lea
mov
push
jmp
mov
mov
mov
and
mov
and
sub
mov
add
mov
cdq
push
push
jmp
push
pop
jmp
push
push
call
xor
pop
pop
leave
ret
mov
call
push
push
push
push
mov
push
mov
mov
cmp
jne
and
push
call
test
jne
mov
shr
test
je
movzx
mov
xor
cdq
add
mov
adc
add
adc
add
adc
add
adc
push
push
call
test
jne
mov
call
cmp
jne
mov
call
mov
mov
call
mov
mov
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
xor
mov
cmp
jne
mov
cmp
jne
xor
jmp
mov
ret
push
pop
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
push
push
mov
push
lea
push
push
mov
mov
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
lea
push
movzx
push
call
cmp
jbe
lea
mov
push
lea
push
push
lea
push
push
movzx
push
call
cmp
je
lea
push
push
mov
call
movzx
mov
add
push
push
call
pop
pop
xor
pop
leave
ret
push
mov
sub
push
mov
push
push
call
test
jne
lea
push
push
mov
call
test
je
mov
cmp
je
push
pop
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
pop
leave
ret
mov
call
sub
push
push
mov
lea
push
xor
mov
push
push
push
mov
push
call
cmp
jne
push
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
mov
jmp
mov
cmp
jb
sub
lea
push
push
sbb
mov
mov
push
push
mov
mov
push
call
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
push
push
call
test
je
add
cmp
jl
mov
mov
mov
cmp
jne
cmp
jb
mov
lea
cmp
jne
mov
mov
push
push
mov
push
mov
mov
call
test
je
mov
mov
add
push
adc
push
push
mov
call
test
je
mov
xor
cmp
je
dec
jns
push
pop
push
mov
call
pop
mov
pop
mov
pop
pop
mov
leave
ret
xor
jmp
mov
mov
mov
mov
jmp
lea
push
mov
mov
mov
mov
pop
mov
mov
mov
mov
cdq
sub
sbb
add
mov
adc
add
adc
cmp
jne
cmp
je
sub
sbb
mov
mov
jmp
mov
call
sub
push
push
push
mov
mov
call
mov
lea
push
push
push
mov
push
push
call
test
jne
mov
cmp
jne
mov
cmp
jne
lea
push
mov
call
test
jne
mov
jmp
push
mov
call
mov
call
mov
mov
sub
mov
sbb
cmp
ja
jb
cmp
jae
mov
call
cmp
jne
lea
call
and
lea
push
mov
call
test
jne
mov
lea
push
mov
call
cmp
je
mov
mov
mov
cdq
idiv
test
jne
mov
mov
mov
mov
cdq
push
push
mov
push
call
test
jne
or
lea
call
mov
mov
sub
sbb
cmp
jb
ja
jmp
or
lea
mov
call
mov
jmp
mov
mov
sub
sbb
cmp
jne
cmp
jne
xor
jmp
push
pop
mov
pop
pop
pop
mov
leave
ret
push
mov
sub
push
push
mov
lea
push
and
and
call
test
jne
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
push
mov
call
mov
cmp
jne
mov
or
jne
push
mov
add
mov
push
adc
push
push
push
push
mov
call
mov
test
jne
mov
mov
mov
mov
lea
mov
push
call
test
pop
jne
push
pop
jmp
mov
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
mov
mov
call
mov
lea
and
mov
cmp
jne
lea
call
mov
and
sub
mov
sbb
sub
mov
lea
sbb
push
mov
mov
call
test
jne
lea
mov
push
mov
call
lea
mov
push
call
cmp
je
mov
push
cdq
pop
idiv
test
jne
mov
mov
mov
cdq
push
push
push
call
test
jne
push
mov
call
test
je
or
lea
call
jmp
or
mov
lea
jmp
or
lea
call
mov
mov
mov
sub
sbb
and
mov
mov
mov
test
jle
cmp
je
mov
mov
cdq
idiv
test
jne
mov
mov
mov
mov
cdq
push
push
mov
push
call
test
jne
mov
cmp
je
cmp
jne
lea
call
lea
mov
push
mov
call
xor
cmp
jne
cmp
jne
cmp
mov
jle
mov
mov
mov
mov
mov
call
test
je
inc
mov
cmp
jl
jmp
mov
mov
sub
sbb
mov
mov
mov
cmp
je
mov
xor
mov
mov
cmp
jge
mov
add
cdq
sub
sar
mov
mov
mov
sub
sbb
cmp
jne
cmp
je
cmp
ja
jb
cmp
jb
lea
jmp
mov
mov
mov
lea
mov
call
lea
lea
push
call
lea
mov
call
test
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
lea
push
call
mov
lea
mov
mov
mov
lea
push
call
mov
mov
mov
lea
push
call
test
je
or
lea
call
mov
inc
inc
mov
cmp
jl
xor
cmp
jle
mov
mov
mov
sub
mov
sbb
inc
cmp
jl
xor
mov
pop
pop
pop
mov
leave
ret
mov
jmp
push
pop
or
lea
call
mov
jmp
or
lea
call
push
pop
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
sub
push
push
mov
push
mov
mov
and
mov
call
push
lea
xor
mov
push
lea
push
mov
push
call
jmp
mov
mov
ret
mov
mov
xor
or
cmp
je
cmp
jne
mov
cmp
mov
mov
jne
mov
lea
and
push
push
mov
push
mov
mov
push
push
call
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
call
test
je
lea
mov
push
lea
push
push
push
call
cmp
jne
mov
mov
sub
sbb
sub
mov
mov
sbb
sub
mov
mov
sbb
push
lea
push
push
call
mov
and
mov
mov
add
sub
sbb
sub
sbb
cmp
jne
mov
mov
mov
call
mov
lea
push
push
mov
mov
call
lea
lea
push
call
mov
mov
sub
sbb
push
push
mov
call
lea
mov
push
call
test
je
cmp
jne
cmp
jne
mov
mov
cdq
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
cmp
je
push
pop
jmp
lea
push
push
mov
call
mov
cmp
jne
mov
call
mov
call
mov
mov
mov
call
cmp
jne
cmp
jne
lea
mov
push
call
test
je
mov
cmp
jne
lea
push
push
mov
call
lea
lea
push
call
mov
test
je
cmp
je
movzx
mov
test
je
cmp
je
movzx
mov
test
je
cmp
je
movzx
cdq
mov
mov
test
je
cmp
je
movzx
cdq
mov
mov
test
je
cmp
je
mov
xor
mov
mov
jmp
xor
test
je
cmp
je
mov
mov
mov
movzx
push
lea
push
mov
call
cmp
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
cmp
jne
and
lea
call
mov
mov
cmp
sete
mov
mov
mov
mov
mov
xor
mov
pop
pop
mov
pop
leave
ret
lea
push
push
mov
call
mov
call
push
push
push
push
mov
push
call
xor
pop
cmp
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
mov
add
mov
adc
push
push
mov
call
push
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
test
je
mov
push
call
mov
pop
ret
push
mov
push
push
mov
lea
push
push
push
mov
push
push
call
test
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
push
pop
jmp
xor
leave
ret
mov
call
push
push
push
mov
push
call
mov
pop
mov
and
test
je
push
mov
push
mov
call
mov
mov
mov
mov
pop
jmp
xor
or
push
mov
call
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
cmp
jbe
mov
shr
jmp
push
pop
cmp
sbb
and
add
push
push
mov
cmp
ja
mov
lea
cmp
jae
lea
push
call
pop
pop
ret
push
push
mov
push
and
and
cmp
mov
jne
cmp
jb
mov
push
pop
add
sub
cmp
jbe
movzx
mov
sub
add
cmp
jbe
mov
cmp
jne
cmp
jae
add
sub
jmp
mov
lea
mov
mov
mov
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
push
and
cmp
mov
jne
cmp
jb
mov
mov
inc
dec
xor
movzx
push
pop
shl
test
je
cmp
jb
cmp
je
add
sub
inc
cmp
jl
xor
pop
pop
ret
mov
mov
mov
mov
jmp
push
mov
mov
test
je
cmp
je
xor
jmp
push
pop
movzx
lea
call
test
je
mov
pop
ret
cmp
jne
xor
pop
ret
movzx
cmp
jg
je
test
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
jmp
mov
shr
and
cmp
je
cmp
pop
sete
ret
sub
je
dec
dec
je
dec
je
dec
jmp
mov
pop
shr
and
ret
mov
push
xor
test
je
cmp
jne
cmp
je
mov
call
test
je
or
mov
pop
ret
cmp
je
mov
or
jmp
mov
not
and
ret
push
push
call
ret
push
push
call
ret
push
mov
push
mov
push
push
lea
mov
call
test
jne
lea
push
push
mov
call
push
mov
call
push
mov
call
mov
call
and
and
pop
pop
pop
ret
mov
mov
add
adc
ret
mov
mov
neg
sbb
and
cmp
mov
je
add
mov
movzx
mov
lea
mov
ret
xor
cmp
ja
cmp
jb
push
pop
push
push
push
call
ret
push
mov
xor
cmp
ja
cmp
jb
mov
jmp
xor
cmp
ja
jb
cmp
jae
cmp
mov
je
mov
push
push
push
call
pop
ret
push
mov
push
push
xor
mov
test
jbe
mov
lea
mov
push
call
inc
cmp
jb
add
pop
adc
pop
pop
ret
lea
push
push
call
ret
push
mov
push
push
push
mov
pop
push
mov
call
xor
dec
mov
mov
jne
pop
pop
pop
ret
push
push
push
mov
pop
push
mov
call
shr
dec
jne
pop
pop
ret
push
mov
push
push
push
mov
pop
push
mov
call
mov
mov
push
pop
call
dec
mov
mov
jne
pop
pop
pop
ret
push
mov
push
push
mov
mov
test
je
xor
test
jle
push
mov
mov
mov
mov
push
call
push
mov
call
push
mov
push
call
inc
cmp
jl
pop
pop
pop
pop
ret
push
mov
mov
push
push
push
mov
push
push
call
test
je
mov
lea
push
push
call
pop
ret
push
mov
push
push
push
push
mov
push
push
call
mov
or
cmp
jne
cmp
ja
jb
cmp
jae
cmp
ja
jb
cmp
jae
and
jmp
mov
push
mov
call
mov
cmp
mov
je
cmp
jae
mov
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
push
mov
call
push
mov
call
cmp
mov
jne
mov
push
mov
call
cmp
mov
jne
mov
push
mov
call
push
mov
call
lea
call
mov
neg
sbb
and
add
movzx
cmp
jbe
lea
push
push
mov
call
mov
mov
push
call
push
mov
push
call
xor
cmp
je
push
mov
pop
push
call
push
mov
call
push
mov
push
call
push
mov
push
call
lea
mov
push
call
lea
call
add
cmp
jae
push
mov
call
inc
jmp
lea
call
push
mov
push
call
push
mov
push
call
pop
pop
pop
leave
ret
mov
xor
test
jle
mov
push
mov
add
dec
mov
lea
jne
pop
ret
push
mov
push
push
push
mov
xor
push
cmp
mov
ja
cmp
jb
mov
jmp
and
cmp
ja
cmp
jb
mov
jmp
and
cmp
ja
cmp
jb
mov
jmp
and
cmp
jne
cmp
jne
cmp
jne
and
jmp
mov
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
cmp
mov
je
cmp
jae
mov
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
push
mov
call
push
mov
call
cmp
je
or
jmp
mov
push
mov
call
cmp
je
or
jmp
mov
push
push
mov
call
push
mov
call
mov
mov
neg
sbb
and
neg
sbb
and
add
mov
neg
sbb
and
add
mov
neg
lea
sbb
and
mov
neg
sbb
and
add
lea
mov
call
add
mov
push
call
push
mov
call
push
mov
call
mov
mov
push
call
push
mov
call
cmp
je
or
jmp
mov
push
mov
call
push
mov
push
call
cmp
je
push
mov
call
push
mov
call
cmp
je
push
mov
push
call
cmp
je
push
mov
push
call
cmp
je
push
mov
push
call
cmp
pop
je
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
lea
mov
push
call
mov
test
jbe
push
mov
push
call
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
push
push
call
mov
mov
mov
mov
xor
mov
cmp
jle
mov
mov
push
call
inc
cmp
jl
mov
mov
mov
sub
mov
sbb
cmp
mov
ja
cmp
jb
mov
jmp
and
test
ja
cmp
jb
mov
jmp
and
cmp
setge
cmp
jne
cmp
jne
cmp
je
push
mov
call
push
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
mov
cdq
push
push
call
mov
mov
cdq
push
push
call
push
mov
push
call
push
mov
push
call
push
mov
call
push
mov
call
push
mov
push
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
cmp
mov
jne
mov
push
mov
call
cmp
je
mov
jmp
mov
push
mov
call
cmp
je
or
jmp
mov
push
mov
call
cmp
je
or
jmp
mov
push
mov
call
mov
test
je
mov
jmp
xor
push
mov
call
test
jbe
push
mov
push
call
lea
call
pop
pop
pop
leave
ret
mov
call
push
push
push
mov
push
call
test
pop
je
and
and
mov
mov
jmp
xor
test
mov
je
mov
push
call
mov
and
mov
xor
add
adc
push
push
push
mov
call
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
test
je
mov
push
call
ret
mov
xor
add
adc
push
push
call
ret
push
mov
test
je
mov
push
call
mov
mov
pop
ret
push
push
mov
mov
call
cmp
jne
mov
mov
mov
lea
push
push
push
push
lea
call
test
mov
jne
mov
test
je
mov
lea
push
push
push
call
mov
lea
call
jmp
pop
pop
ret
push
mov
push
push
lea
mov
call
mov
lea
push
push
mov
push
call
mov
pop
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
lea
push
call
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
ret
mov
call
sub
push
push
mov
push
lea
push
mov
call
mov
and
mov
test
jne
mov
test
je
push
mov
push
push
call
test
jne
test
je
mov
mov
mov
mov
mov
test
je
mov
mov
mov
mov
cmp
je
mov
mov
add
adc
jmp
mov
mov
add
adc
mov
add
mov
mov
mov
adc
lea
mov
mov
push
push
call
push
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
push
push
call
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
call
or
push
lea
mov
call
push
mov
push
call
mov
pop
mov
leave
ret
push
mov
xor
mov
mov
mov
lea
mov
call
mov
mov
pop
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
and
lea
push
call
mov
test
je
mov
push
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
push
mov
push
mov
push
call
ret
push
mov
cmp
jne
mov
call
mov
xor
cmp
pop
setne
ret
push
push
push
mov
push
xor
push
lea
lea
mov
mov
mov
mov
mov
call
mov
push
push
push
mov
push
push
call
cmp
jne
mov
lea
push
push
mov
push
push
push
call
cmp
jne
mov
push
push
push
mov
push
push
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
pop
ret
cmp
push
push
push
mov
je
cmp
je
mov
mov
mov
lea
cmp
jne
mov
cmp
je
mov
push
push
push
mov
push
push
call
test
jne
mov
mov
and
mov
sub
cmp
jae
mov
cmp
jb
mov
mov
mov
push
add
call
test
jne
add
mov
adc
mov
mov
cmp
ja
jb
mov
cmp
jae
mov
mov
add
adc
sub
sub
jne
xor
pop
pop
pop
ret
push
call
ret
mov
call
push
push
push
mov
mov
mov
and
call
mov
mov
cmp
jne
cmp
je
mov
push
push
push
mov
call
mov
mov
cmp
jne
cmp
je
mov
push
push
push
mov
push
push
call
mov
call
mov
or
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
push
mov
push
push
mov
test
je
and
cmp
push
push
push
je
mov
mov
mov
mov
mov
test
mov
je
cmp
mov
ja
jb
cmp
jb
xor
add
adc
cmp
ja
jb
cmp
jae
cmp
ja
jb
cmp
jae
mov
call
test
je
jmp
mov
mov
cmp
jne
mov
mov
cmp
ja
jb
cmp
jae
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
mov
adc
mov
and
mov
sub
mov
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
sub
test
je
mov
mov
sub
cmp
jbe
mov
mov
and
sub
push
mov
call
test
jne
jmp
mov
push
add
push
push
call
add
add
jmp
mov
test
jne
mov
mov
mov
mov
mov
mov
and
mov
sub
cmp
jb
mov
mov
mov
xor
add
adc
cmp
jne
mov
cmp
je
sub
cmp
jb
mov
jmp
cmp
jne
mov
mov
and
sub
push
mov
call
test
jne
mov
and
cmp
jbe
sub
cmp
jb
mov
mov
add
push
mov
add
push
push
call
mov
add
test
je
mov
mov
mov
mov
add
adc
mov
mov
cmp
ja
jb
mov
cmp
jae
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
mov
sub
je
dec
je
dec
je
mov
jmp
mov
mov
lea
add
mov
adc
mov
jmp
mov
mov
mov
add
add
adc
jmp
mov
mov
add
mov
mov
mov
mov
test
je
mov
mov
mov
mov
xor
pop
ret
push
mov
push
mov
push
mov
cmp
mov
mov
ja
jb
cmp
jae
mov
push
push
push
mov
call
test
jne
mov
mov
cmp
ja
jb
cmp
ja
and
mov
mov
mov
xor
add
adc
cmp
ja
jb
cmp
jae
sub
mov
xor
pop
pop
pop
ret
mov
call
sub
push
xor
push
mov
mov
mov
mov
mov
mov
lea
push
push
mov
push
mov
call
cmp
je
push
call
cmp
pop
je
mov
mov
mov
mov
mov
jmp
xor
push
lea
call
mov
call
test
jne
mov
mov
cmp
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
mov
call
mov
mov
cmp
mov
je
cmp
je
mov
push
call
or
mov
jmp
cmp
je
mov
push
call
mov
cmp
je
mov
or
jne
mov
or
jne
cmp
jne
mov
or
cmp
je
mov
push
call
mov
jmp
push
mov
lea
mov
call
push
lea
mov
call
xor
mov
cmp
mov
je
mov
call
mov
mov
push
mov
neg
lea
mov
sbb
and
lea
push
push
push
push
push
call
cmp
mov
mov
je
mov
push
call
lea
mov
call
or
mov
pop
cmp
je
mov
push
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
mov
push
mov
push
push
xor
mov
xor
cmp
mov
mov
mov
mov
mov
mov
mov
jle
mov
mov
cmp
je
mov
mov
add
adc
mov
add
mov
adc
add
adc
jmp
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
lea
push
mov
call
test
jne
mov
xor
movzx
add
xor
shr
and
shl
add
adc
add
adc
add
adc
or
lea
call
add
mov
adc
inc
cmp
jl
mov
cmp
je
mov
add
adc
push
mov
pop
add
mov
adc
push
push
push
call
mov
lea
push
call
mov
mov
cmp
mov
mov
mov
mov
jbe
mov
lea
call
cmp
mov
je
push
lea
call
cmp
mov
ja
mov
cmp
ja
jb
cmp
ja
mov
cmp
je
mov
mov
cmp
mov
jne
cmp
jne
mov
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
push
push
push
call
cmp
push
pop
ja
jb
cmp
jae
push
mov
pop
cmp
jae
mov
jmp
or
lea
call
mov
jmp
push
pop
mov
xor
div
mov
cmp
mov
ja
mov
cmp
jne
mov
xor
cmp
seta
inc
xor
div
mov
cmp
mov
ja
mov
cmp
jne
push
mov
mov
push
push
push
push
push
call
mov
jmp
lea
call
mov
mov
push
mov
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
mov
je
mov
push
call
push
mov
push
mov
call
lea
call
push
lea
mov
push
call
lea
push
call
lea
call
mov
lea
lea
mov
mov
call
lea
mov
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
push
shl
push
lea
mov
call
mov
cmp
je
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
lea
call
lea
mov
call
mov
jmp
mov
xor
cmp
jle
lea
call
mov
mov
lea
lea
push
mov
call
lea
mov
call
inc
cmp
jl
mov
cmp
jbe
lea
lea
push
call
push
lea
mov
call
lea
mov
call
dec
jne
xor
cmp
jbe
mov
mov
mov
call
cmp
mov
jne
push
call
pop
mov
cmp
mov
je
lea
push
mov
call
jmp
xor
mov
mov
mov
call
cmp
mov
jne
push
lea
call
mov
push
call
cmp
pop
je
mov
mov
jmp
xor
push
lea
mov
call
mov
lea
push
mov
mov
mov
mov
call
mov
cmp
jne
inc
cmp
jb
mov
or
mov
mov
mov
cmp
jle
mov
cmp
jae
cmp
jge
mov
mov
shl
mov
inc
mov
cmp
je
lea
call
cmp
mov
je
cmp
je
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
lea
mov
call
lea
mov
call
mov
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
lea
mov
call
lea
mov
call
mov
jmp
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
jmp
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
lea
push
call
test
jne
lea
call
test
jne
mov
mov
mov
add
push
mov
call
mov
lea
push
mov
push
mov
push
call
cmp
mov
jne
mov
mov
add
adc
add
mov
adc
push
mov
push
call
mov
push
push
mov
call
mov
cmp
jne
mov
mov
push
mov
mov
call
mov
mov
cmp
je
mov
push
call
jmp
mov
cmp
jne
mov
push
push
mov
call
mov
cmp
jne
push
mov
call
xor
cmp
jbe
mov
mov
cmp
jne
inc
add
cmp
jb
jmp
mov
push
lea
call
lea
call
mov
call
mov
push
mov
call
lea
call
mov
push
dec
lea
mov
call
lea
push
call
lea
mov
call
mov
lea
jmp
mov
mov
shl
mov
mov
cmp
je
inc
jmp
mov
mov
mov
lea
call
cmp
mov
je
cmp
jne
mov
mov
mov
push
lea
call
mov
lea
push
call
test
jne
cmp
je
cmp
je
mov
jmp
lea
call
cmp
je
mov
mov
lea
push
push
call
jmp
mov
cmp
jge
mov
mov
mov
mov
lea
mov
push
push
call
mov
mov
push
push
push
push
call
jmp
mov
mov
mov
mov
mov
cmp
je
mov
mov
lea
push
mov
call
mov
push
push
call
lea
mov
push
mov
push
mov
lea
call
mov
lea
push
push
mov
call
mov
lea
push
call
mov
lea
push
call
lea
mov
call
jmp
mov
mov
mov
mov
mov
cmp
jne
mov
mov
lea
push
mov
call
mov
push
call
mov
lea
mov
call
lea
mov
call
push
push
push
push
call
mov
mov
mov
mov
mov
lea
call
mov
mov
cmp
jne
push
lea
push
call
lea
push
push
call
cmp
jne
mov
call
cmp
jne
mov
mov
lea
call
mov
lea
call
lea
push
mov
mov
mov
push
lea
call
mov
mov
lea
push
push
call
mov
lea
push
call
jmp
mov
mov
mov
mov
push
mov
call
mov
add
push
add
pop
rep
mov
jmp
lea
mov
mov
push
push
lea
push
push
call
cmp
jne
lea
lea
push
call
add
mov
adc
push
mov
push
call
inc
mov
lea
call
mov
mov
cmp
jl
push
mov
lea
push
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
or
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
lea
mov
call
lea
mov
call
mov
jmp
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
lea
call
lea
mov
call
jmp
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
jmp
push
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
jmp
mov
jmp
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
or
lea
call
mov
jmp
mov
mov
and
and
mov
ret
mov
call
push
push
mov
mov
mov
call
lea
call
lea
push
call
or
mov
call
mov
pop
mov
leave
ret
jmp
push
call
ret
jmp
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
cmp
lea
jne
call
test
jne
cmp
lea
je
xor
pop
ret
call
pop
ret
push
mov
push
lea
call
push
lea
call
pop
ret
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
dec
mov
jne
test
je
mov
call
push
call
pop
xor
pop
ret
mov
call
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
lea
call
lea
call
mov
pop
mov
leave
ret
push
mov
push
push
push
push
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
mov
lea
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
call
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jne
mov
cmp
je
push
pop
jmp
xor
push
mov
call
cmp
je
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
call
sub
push
push
mov
push
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
call
xor
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
call
lea
mov
push
call
mov
lea
push
call
mov
push
call
pop
mov
pop
pop
pop
mov
leave
ret
push
push
mov
mov
push
lea
call
mov
mov
mov
pop
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
pop
mov
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
pop
mov
leave
ret
push
mov
cmp
lea
jne
call
test
jne
cmp
lea
je
xor
pop
ret
call
pop
ret
mov
call
push
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
xor
ret
mov
call
push
push
mov
push
mov
xor
cmp
mov
jle
mov
mov
call
inc
cmp
jl
mov
mov
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
push
mov
mov
mov
test
je
lea
mov
call
cmp
lea
je
call
mov
call
mov
pop
jmp
mov
call
push
push
mov
push
mov
xor
cmp
mov
jle
mov
push
mov
call
inc
cmp
jl
add
mov
mov
mov
mov
call
or
mov
call
mov
pop
pop
mov
leave
ret
mov
test
je
mov
push
call
ret
push
mov
sub
push
push
mov
push
mov
mov
mov
mov
cmp
je
mov
shr
test
je
mov
jmp
movzx
mov
xor
cdq
add
lea
adc
add
adc
mov
mov
mov
mov
mov
lea
push
mov
call
mov
mov
push
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
call
and
mov
lea
mov
push
mov
mov
call
mov
push
mov
push
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
lea
push
mov
push
call
test
jne
mov
mov
mov
push
add
mov
adc
call
jmp
mov
call
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
push
mov
call
test
jne
mov
mov
mov
add
push
push
mov
adc
call
xor
pop
pop
pop
leave
ret
push
push
mov
mov
dec
js
mov
mov
cmp
je
mov
push
push
mov
call
jmp
pop
pop
ret
push
mov
push
xor
mov
xor
movzx
add
shr
and
shl
add
adc
add
pop
adc
pop
ret
mov
call
sub
mov
push
push
lea
push
mov
xor
mov
push
push
push
mov
push
push
call
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
push
lea
mov
call
mov
mov
push
mov
add
mov
mov
mov
mov
mov
mov
call
cmp
mov
je
or
cmp
je
mov
push
call
mov
jmp
mov
push
push
push
mov
call
or
cmp
mov
je
mov
push
call
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
and
push
mov
and
lea
push
mov
call
mov
mov
push
call
or
mov
mov
test
je
mov
push
call
mov
mov
pop
mov
leave
ret
push
mov
push
push
mov
push
mov
push
push
mov
push
mov
call
mov
mov
push
push
push
push
call
mov
push
call
pop
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
mov
push
call
pop
mov
xor
cmp
mov
je
mov
call
mov
jmp
xor
or
cmp
mov
je
mov
push
call
push
mov
pop
push
mov
push
call
lea
push
call
lea
mov
call
mov
mov
mov
mov
mov
mov
cmp
mov
mov
mov
jle
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
jne
mov
mov
mov
mov
lea
call
cmp
mov
je
cmp
jne
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
lea
push
call
test
jne
cmp
je
cmp
je
mov
jmp
lea
call
test
je
mov
mov
lea
push
push
call
jmp
and
mov
lea
push
mov
push
mov
push
call
cmp
mov
jne
mov
mov
add
mov
push
push
adc
mov
call
mov
mov
test
mov
jne
test
je
mov
push
call
jmp
test
jne
mov
mov
lea
push
push
call
mov
mov
mov
push
push
push
push
call
and
mov
lea
push
mov
call
lea
lea
push
push
push
push
call
mov
test
jne
lea
push
mov
mov
mov
push
lea
call
mov
lea
push
call
mov
push
push
mov
call
mov
test
jne
mov
mov
add
mov
mov
adc
add
mov
mov
adc
test
je
mov
push
call
mov
mov
test
je
mov
push
call
jmp
and
lea
mov
mov
and
and
push
lea
push
push
push
call
mov
test
jne
mov
mov
add
mov
adc
lea
lea
push
call
add
adc
lea
mov
call
inc
mov
mov
cmp
jl
push
mov
lea
push
call
lea
mov
call
lea
mov
call
or
lea
call
xor
mov
pop
pop
pop
mov
leave
ret
mov
mov
jmp
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
mov
or
test
je
mov
push
call
mov
jmp
test
je
mov
push
call
lea
mov
call
mov
mov
jmp
mov
mov
test
je
mov
push
call
lea
mov
call
mov
lea
mov
call
lea
mov
call
lea
mov
call
mov
or
test
je
mov
push
call
mov
jmp
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
jmp
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
jmp
lea
mov
call
mov
mov
lea
call
lea
mov
call
lea
mov
call
mov
or
test
je
mov
push
call
mov
jmp
push
mov
call
mov
pop
ret
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
pop
pop
ret
push
push
push
mov
mov
push
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
push
call
lea
lea
push
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
call
lea
mov
call
add
mov
push
call
mov
pop
pop
pop
ret
push
push
mov
call
mov
mov
push
call
lea
lea
push
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
push
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
pop
ret
mov
call
push
push
mov
mov
lea
mov
push
call
lea
call
and
lea
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
lea
call
lea
call
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
and
lea
call
mov
or
test
je
mov
push
call
mov
pop
mov
leave
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
xor
mov
mov
mov
mov
mov
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
mov
call
push
push
mov
mov
mov
and
call
or
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
call
or
push
mov
call
mov
pop
mov
leave
ret
push
mov
push
push
mov
mov
push
mov
mov
add
cmp
jle
sub
mov
mov
test
jle
push
mov
shl
mov
mov
mov
test
mov
je
call
push
call
pop
add
dec
jne
pop
push
mov
push
call
pop
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
push
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
test
mov
je
mov
push
call
lea
lea
push
mov
call
mov
push
mov
mov
add
lea
pop
rep
mov
pop
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
push
push
mov
push
call
mov
push
mov
mov
mov
mov
lea
lea
pop
mov
rep
mov
pop
mov
mov
mov
pop
mov
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
mov
push
mov
call
mov
and
mov
mov
test
mov
je
mov
push
call
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
mov
pop
mov
leave
ret
push
push
mov
push
mov
push
mov
mov
add
push
call
xor
test
jle
mov
mov
push
call
inc
cmp
jl
mov
pop
pop
pop
pop
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
lea
neg
sbb
and
mov
mov
leave
ret
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
lea
call
test
jne
pop
ret
push
lea
call
test
jne
pop
ret
push
lea
call
test
jne
pop
ret
push
lea
call
test
jne
pop
ret
mov
test
jne
mov
call
test
mov
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
add
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
call
test
jne
lea
call
test
jne
lea
call
test
jne
push
push
push
mov
mov
cmp
jb
mov
mov
mov
call
test
je
mov
lea
mov
mov
mov
call
mov
mov
add
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
or
dec
mov
jne
mov
mov
shr
mov
mov
shl
inc
mov
dec
mov
mov
jne
lea
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
push
push
push
mov
cmp
mov
jne
cmp
jne
call
test
jne
mov
jmp
mov
xor
cmp
mov
mov
mov
je
mov
cmp
je
mov
mov
cmp
mov
mov
ja
jb
cmp
ja
mov
mov
mov
mov
lea
mov
mov
mov
push
mov
call
lea
call
mov
lea
push
call
lea
call
mov
lea
push
call
lea
call
mov
lea
push
call
lea
lea
call
mov
add
mov
mov
mov
mov
mov
mov
rep
mov
mov
lea
push
push
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
sub
je
lea
mov
push
push
mov
mov
mov
add
add
push
push
call
mov
test
jne
mov
test
je
add
mov
sub
sub
jne
add
cmp
mov
jb
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
cmp
mov
jne
call
mov
and
cmp
je
cmp
jne
mov
and
cmp
je
inc
mov
jmp
mov
xor
add
xor
mov
mov
mov
mov
shl
or
xor
mov
mov
shl
or
mov
mov
mov
add
lea
mov
test
mov
je
mov
mov
xor
add
mov
adc
cmp
ja
jb
cmp
jae
mov
lea
push
mov
push
mov
push
push
call
mov
test
jne
mov
mov
mov
mov
mov
add
mov
mov
mov
adc
mov
mov
add
adc
mov
mov
mov
jmp
cmp
je
cmp
jne
mov
test
je
mov
push
call
xor
mov
xor
mov
mov
or
mov
mov
cmp
jb
ja
cmp
jb
mov
test
jne
mov
test
je
mov
xor
cmp
ja
jb
mov
mov
cmp
jb
xor
jmp
mov
mov
mov
sub
sbb
mov
jne
cmp
jbe
test
je
cmp
je
xor
jmp
mov
mov
cdq
add
adc
add
adc
cmp
jb
ja
cmp
jb
cmp
ja
jb
cmp
jb
xor
jmp
mov
test
je
mov
xor
cmp
ja
jb
cmp
jb
xor
jmp
test
je
cmp
je
xor
jmp
mov
mov
cmp
jne
mov
and
jmp
xor
cmp
setne
add
test
je
mov
mov
mov
mov
shr
imul
add
mov
mov
adc
sub
mov
mov
mov
mov
shr
sub
mov
mov
cmp
jae
mov
shl
cmp
mov
jb
mov
mov
mov
call
test
je
mov
lea
mov
mov
mov
call
mov
mov
add
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
or
dec
mov
jne
mov
mov
shr
mov
mov
mov
inc
shl
mov
mov
mov
mov
add
cmp
mov
jne
mov
lea
jmp
mov
lea
mov
mov
mov
mov
mov
shr
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
sub
jns
mov
mov
jmp
mov
mov
shr
imul
mov
mov
mov
sub
shr
add
mov
mov
cmp
jae
mov
shl
cmp
mov
jb
mov
mov
mov
call
test
je
mov
lea
mov
mov
mov
call
mov
mov
add
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
or
dec
mov
jne
mov
mov
shr
mov
mov
mov
inc
shl
mov
mov
mov
inc
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
add
add
mov
mov
adc
cmp
mov
mov
je
mov
lea
push
push
push
call
mov
cmp
jne
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jb
xor
jmp
mov
mov
test
je
mov
push
call
mov
mov
lea
call
lea
call
lea
call
lea
call
mov
jmp
xor
test
jbe
mov
mov
mov
lea
mov
mov
mov
mov
mov
inc
cmp
mov
jne
call
cmp
jne
mov
and
jmp
cmp
jne
mov
jmp
cmp
jne
mov
and
cmp
jne
mov
mov
mov
shr
imul
mov
mov
sub
shr
add
mov
mov
cmp
jae
shl
mov
mov
call
mov
inc
cmp
mov
jb
mov
mov
call
mov
mov
test
mov
je
mov
push
call
lea
mov
call
lea
call
lea
call
mov
test
je
mov
push
call
mov
mov
jmp
mov
mov
test
je
mov
push
call
mov
mov
lea
call
lea
call
mov
xor
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
jmp
mov
mov
cmp
je
mov
push
call
mov
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
push
push
mov
mov
cmp
jb
mov
mov
mov
call
test
je
push
mov
lea
mov
mov
mov
call
mov
mov
add
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
or
dec
mov
jne
mov
pop
mov
shr
mov
mov
shl
inc
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
xor
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
pop
pop
ret
nop
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
pop
pop
mov
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
xor
mov
mov
lea
mov
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
mov
push
push
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
xor
push
mov
mov
call
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
mov
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
add
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
mov
push
push
mov
push
cmp
push
mov
jne
cmp
jne
mov
lea
push
call
test
jne
mov
jmp
mov
lea
push
call
test
jne
mov
jmp
mov
lea
push
call
test
jne
mov
jmp
mov
lea
push
mov
call
test
jne
mov
jmp
mov
lea
push
mov
call
test
jne
mov
jmp
mov
mov
lea
mov
mov
push
call
mov
lea
push
call
mov
push
lea
call
mov
mov
push
call
mov
mov
mov
push
call
lea
call
lea
call
lea
call
mov
call
mov
mov
mov
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
shl
and
or
dec
mov
jne
mov
call
lea
mov
mov
mov
rep
mov
cmp
jb
mov
test
je
mov
call
mov
mov
lea
mov
push
push
push
call
mov
test
jne
mov
mov
mov
mov
lea
cmp
jb
mov
call
test
je
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
and
cmp
je
cmp
jne
mov
and
cmp
je
mov
mov
inc
cmp
mov
jb
jmp
mov
mov
add
cmp
mov
je
cmp
jne
mov
and
jmp
xor
cmp
setne
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
mov
mov
cmp
jae
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
shl
and
or
mov
shl
mov
mov
mov
mov
jmp
sub
sub
mov
mov
mov
mov
shr
sub
mov
mov
cmp
jae
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
shl
and
or
mov
shl
mov
mov
mov
xor
cmp
jne
add
jmp
add
mov
mov
mov
cmp
jb
mov
call
test
je
mov
shl
mov
inc
mov
mov
mov
and
or
mov
inc
cmp
mov
jl
mov
call
mov
mov
sub
sub
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
mov
shr
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
mov
shr
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
shr
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
mov
add
mov
jmp
lea
mov
call
lea
call
lea
call
lea
call
lea
call
mov
jmp
mov
call
lea
mov
mov
call
lea
call
lea
call
lea
call
lea
call
mov
jmp
mov
mov
lea
call
lea
call
lea
call
lea
call
mov
test
je
mov
push
call
mov
mov
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
push
mov
push
xor
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
pop
pop
ret
nop
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
pop
pop
mov
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
push
push
call
add
mov
test
mov
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
call
add
xor
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
lea
mov
push
push
push
mov
call
ret
nop
nop
nop
nop
nop
nop
mov
lea
mov
push
push
push
mov
call
ret
nop
nop
nop
nop
nop
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
push
mov
push
mov
mov
xor
repz
pop
pop
jne
mov
mov
push
mov
mov
call
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
dec
mov
jne
push
call
add
xor
ret
nop
nop
nop
nop
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
mov
mov
sar
and
and
shl
or
mov
and
sar
and
shl
or
mov
sar
and
shl
or
mov
inc
cmp
jl
ret
nop
nop
mov
mov
mov
call
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
mov
mov
call
mov
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
add
cmp
jb
pop
ret
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
xor
cmp
jb
mov
push
mov
lea
sub
mov
mov
mov
mov
add
add
lea
cmp
jbe
mov
pop
pop
pop
ret
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
xor
cmp
jb
mov
push
push
mov
lea
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
add
lea
cmp
jbe
pop
mov
pop
pop
pop
ret
mov
pop
pop
ret
push
call
add
test
je
mov
mov
ret
xor
ret
nop
push
call
add
test
je
mov
mov
ret
xor
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
add
cmp
jb
pop
ret
nop
nop
nop
nop
nop
nop
push
xor
mov
mov
mov
shl
test
je
add
xor
jmp
shl
dec
jne
mov
add
inc
cmp
jb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
cmp
jne
mov
call
mov
mov
xor
test
setne
pop
ret
nop
push
mov
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
mov
mov
push
mov
sub
shr
mov
add
sub
mov
and
shr
cmp
jb
push
lea
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
mov
and
shl
add
or
mov
mov
cmp
mov
jae
mov
pop
pop
pop
ret
mov
pop
pop
ret
nop
nop
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
xor
mov
mov
call
and
shl
or
dec
jne
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
mov
xor
repz
je
mov
mov
mov
xor
repz
jne
mov
mov
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
xor
push
mov
mov
call
pop
xor
pop
ret
pop
mov
pop
ret
mov
mov
inc
mov
mov
ret
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
mov
mov
mov
call
lea
call
lea
push
call
lea
call
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
add
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
mov
lea
test
jne
call
test
jne
mov
lea
test
jne
call
test
jne
mov
test
je
mov
mov
cmp
jne
xor
mov
mov
pop
pop
pop
mov
pop
ret
mov
call
mov
mov
cmp
mov
lea
seta
shl
sub
mov
lea
push
call
add
mov
test
mov
je
push
push
lea
push
push
push
mov
call
mov
jmp
xor
test
mov
mov
je
mov
xor
test
mov
jbe
mov
lea
shl
sub
lea
mov
mov
test
je
call
mov
test
jne
mov
inc
cmp
jb
xor
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
mov
xor
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
lea
call
lea
call
lea
call
lea
pop
jmp
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
push
lea
mov
call
mov
xor
test
jbe
push
xor
mov
mov
mov
add
test
je
mov
call
mov
call
mov
inc
add
cmp
jb
pop
mov
test
je
mov
lea
push
push
push
push
call
push
call
add
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
mov
mov
xor
mov
call
mov
inc
cmp
jl
mov
call
mov
mov
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
xor
cmp
pop
setne
pop
mov
pop
add
ret
cmp
jne
cmp
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
mov
mov
add
shr
or
xor
xor
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
push
push
push
mov
push
mov
call
xor
cmp
jne
mov
xor
cmp
jbe
mov
mov
mov
add
mov
call
test
je
mov
test
je
lea
call
cmp
jne
lea
call
cmp
jne
lea
call
cmp
jne
mov
mov
inc
add
cmp
mov
jb
mov
xor
mov
mov
call
mov
inc
cmp
jl
cmp
jne
cmp
jne
cmp
jne
mov
cmp
jbe
cmp
ja
and
mov
mov
lea
lea
lea
lea
mov
lea
shl
sub
test
je
lea
mov
mov
mov
mov
call
mov
add
call
mov
mov
lea
mov
mov
call
mov
xor
test
jbe
xor
mov
mov
call
mov
inc
add
cmp
jb
mov
call
lea
call
mov
xor
test
jbe
xor
mov
mov
call
mov
inc
add
cmp
jb
lea
call
mov
test
jne
mov
test
jne
mov
mov
mov
mov
mov
sub
mov
sub
cdq
shr
xor
sub
sbb
add
adc
mov
push
push
call
pop
pop
pop
pop
add
ret
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
mov
lea
sub
mov
mov
sub
xor
cdq
shr
sub
mov
sbb
mov
add
adc
mov
push
push
call
test
jne
lea
lea
push
push
mov
call
test
jne
mov
test
jne
mov
lea
lea
push
lea
push
lea
push
lea
push
push
mov
push
mov
call
test
jne
mov
mov
call
mov
test
je
mov
mov
lea
push
push
mov
add
call
jmp
mov
mov
lea
add
push
mov
push
call
cmp
jne
mov
mov
mov
sub
mov
sub
xor
cdq
shr
sub
mov
sbb
mov
add
adc
mov
push
push
call
test
je
pop
pop
pop
pop
add
ret
pop
pop
pop
mov
pop
add
ret
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
mov
push
test
mov
mov
je
call
test
setne
mov
mov
mov
call
mov
mov
mov
cmp
jae
mov
xor
lea
rep
xor
xor
mov
mov
call
mov
inc
cmp
jl
xor
mov
sar
mov
test
je
mov
call
test
je
mov
mov
mov
and
shr
shl
and
lea
shl
mov
inc
or
mov
inc
cmp
jl
test
mov
je
mov
mov
call
mov
cmp
mov
jl
cmp
jg
mov
mov
call
mov
cmp
mov
jb
cmp
ja
xor
mov
inc
cmp
jl
mov
xor
mov
xor
call
test
je
mov
inc
cmp
jge
mov
call
test
jne
mov
test
jle
mov
mov
dec
test
jg
mov
inc
cmp
mov
jb
mov
mov
mov
mov
mov
call
mov
lea
xor
test
jle
cmp
jl
cmp
jg
mov
call
test
je
mov
call
shl
mov
sub
add
jmp
mov
inc
lea
cmp
jl
cmp
jge
mov
lea
sub
mov
mov
xor
shr
rep
mov
and
rep
mov
xor
lea
lea
rep
xor
xor
mov
cmp
jg
mov
lea
inc
mov
inc
add
cmp
mov
jb
xor
xor
mov
mov
mov
mov
mov
mov
mov
sub
shl
add
cmp
mov
ja
cmp
mov
je
mov
mov
mov
mov
add
cmp
mov
mov
jg
mov
shr
cmp
jae
sub
lea
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
add
mov
inc
cmp
jle
xor
xor
mov
test
je
mov
lea
mov
inc
mov
inc
cmp
jb
mov
mov
inc
add
cmp
mov
jl
mov
xor
mov
mov
xor
rep
mov
mov
mov
mov
mov
mov
mov
test
jne
mov
mov
cmp
jae
mov
xor
mov
mov
lea
lea
mov
shl
sub
shl
add
inc
mov
mov
mov
sub
mov
mov
mov
shr
dec
mov
shr
and
cmp
jae
mov
shr
xor
mov
mov
jmp
mov
lea
cmp
mov
jb
mov
add
inc
cmp
jae
mov
add
mov
mov
cmp
jb
mov
mov
cmp
jb
mov
lea
call
mov
mov
jmp
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
sub
mov
sub
shr
add
cmp
jb
or
mov
test
je
mov
mov
mov
and
mov
add
mov
lea
mov
inc
add
dec
jne
mov
mov
mov
mov
cmp
ja
dec
mov
and
shr
shl
mov
mov
shr
xor
and
test
je
mov
mov
shl
shr
or
mov
mov
mov
dec
cmp
jae
sub
lea
inc
shr
mov
lea
mov
mov
mov
add
shl
or
mov
shr
shl
or
mov
mov
mov
shr
dec
mov
mov
jne
mov
lea
mov
mov
shl
mov
shl
or
mov
dec
and
not
and
or
mov
mov
mov
and
cmp
jae
mov
mov
inc
mov
mov
mov
inc
mov
jmp
mov
cmp
jae
mov
lea
mov
mov
shl
add
inc
mov
mov
sub
mov
cmp
jb
jmp
inc
cmp
jne
mov
mov
mov
pop
mov
mov
cmp
pop
sbb
pop
inc
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
push
push
mov
mov
push
mov
mov
sub
add
shr
mov
mov
sub
and
shr
cmp
jb
push
lea
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
mov
and
shl
add
or
mov
mov
cmp
mov
jae
mov
pop
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
push
push
mov
mov
push
mov
mov
sub
shr
shr
and
inc
cmp
mov
jb
push
lea
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
mov
and
shl
add
or
mov
mov
cmp
mov
jae
mov
pop
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
xor
mov
mov
mov
add
add
mov
sub
dec
mov
jne
lea
xor
mov
mov
mov
and
add
shl
mov
or
lea
mov
and
mov
lea
inc
inc
cmp
mov
jb
pop
pop
pop
pop
ret
nop
nop
nop
sub
mov
mov
mov
push
push
push
mov
mov
shr
push
or
mov
mov
mov
and
xor
jmp
mov
mov
mov
shr
and
cmp
mov
mov
jne
test
jbe
mov
mov
mov
shr
xor
shl
mov
mov
xor
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
dec
jne
xor
jmp
cmp
je
xor
mov
inc
shr
xor
mov
shl
mov
mov
xor
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
dec
mov
jne
mov
pop
pop
pop
not
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
mov
mov
push
push
mov
mov
push
mov
and
shr
push
or
mov
sub
mov
mov
mov
mov
and
jmp
mov
mov
mov
shr
and
mov
test
mov
jne
mov
xor
mov
inc
and
mov
mov
dec
cmp
jne
test
jbe
mov
mov
mov
shr
xor
shl
mov
mov
xor
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
dec
mov
jne
mov
jmp
cmp
je
mov
mov
mov
shr
xor
inc
shl
mov
mov
xor
mov
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
dec
mov
jne
mov
pop
pop
pop
not
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
mov
push
push
mov
push
mov
lea
mov
push
mov
mov
call
test
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
lea
call
test
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
test
je
push
mov
call
mov
mov
test
mov
setne
mov
mov
test
je
lea
mov
call
mov
mov
cmp
jb
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
sub
mov
sub
xor
cdq
shr
sub
mov
sbb
mov
add
adc
mov
mov
mov
mov
neg
and
add
mov
cmp
jb
mov
mov
lea
cmp
jb
call
mov
jmp
mov
inc
mov
mov
mov
mov
shl
and
or
mov
mov
add
mov
jmp
mov
lea
push
mov
call
mov
call
mov
mov
push
push
mov
call
mov
xor
cmp
je
mov
mov
test
mov
je
lea
call
mov
test
je
mov
cmp
je
jmp
mov
mov
call
mov
mov
mov
mov
test
je
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
pop
pop
mov
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
push
mov
mov
test
je
mov
add
call
mov
mov
test
je
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
pop
pop
ret
nop
mov
mov
lea
push
mov
push
mov
push
push
mov
call
test
jne
mov
test
sete
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
call
xor
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
jne
call
test
jne
mov
lea
test
jne
call
test
jne
mov
lea
test
jne
call
test
jne
push
mov
lea
call
pop
ret
nop
nop
nop
nop
mov
call
xor
ret
nop
nop
push
mov
mov
lea
mov
call
mov
add
push
call
mov
mov
call
lea
pop
jmp
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
add
mov
call
mov
add
push
call
mov
mov
test
je
add
push
call
mov
pop
pop
mov
pop
mov
pop
ret
mov
test
je
mov
call
jmp
mov
mov
mov
lea
cmp
mov
jne
xor
xor
mov
jmp
xor
mov
lea
lea
push
push
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
mov
call
mov
jmp
mov
test
mov
je
mov
mov
call
mov
jmp
lea
lea
push
push
lea
lea
push
push
mov
lea
push
push
mov
lea
call
mov
cmp
mov
je
mov
mov
call
mov
jmp
mov
mov
add
sub
cdq
mov
mov
mov
sub
shr
mov
xor
sub
mov
sbb
mov
add
mov
mov
adc
jmp
mov
mov
test
mov
je
mov
mov
ret
mov
mov
ret
mov
mov
mov
mov
mov
test
je
mov
mov
mov
call
jmp
mov
add
push
call
mov
mov
call
mov
lea
shl
mov
sub
mov
lea
mov
call
mov
mov
test
mov
jne
mov
test
je
mov
mov
add
add
push
push
mov
call
jmp
mov
mov
add
add
push
mov
push
call
cmp
jne
mov
push
push
mov
call
mov
jmp
mov
jmp
mov
mov
test
mov
je
mov
mov
ret
mov
mov
ret
mov
mov
test
mov
je
mov
mov
mov
mov
mov
mov
mov
lea
shl
sub
lea
call
test
jne
mov
test
je
lea
call
mov
mov
call
lea
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
mov
jae
mov
mov
mov
cmp
jbe
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
jne
xor
pop
add
ret
mov
mov
mov
sub
mov
mov
sbb
lea
mov
call
mov
mov
lea
lea
mov
mov
push
push
push
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
test
jne
mov
call
test
mov
jne
xor
pop
ret
cmp
jne
mov
call
test
mov
jne
xor
pop
ret
add
mov
add
mov
mov
pop
ret
nop
nop
nop
nop
push
mov
mov
call
mov
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
call
test
jne
lea
call
test
jne
lea
call
test
jne
push
mov
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
push
mov
mov
lea
mov
call
mov
test
je
mov
add
push
call
mov
mov
call
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
add
mov
call
mov
add
push
call
mov
cmp
je
add
push
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
cmp
je
push
mov
call
jmp
mov
mov
push
mov
mov
call
mov
mov
mov
mov
sub
cdq
add
adc
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
push
mov
call
mov
jmp
mov
add
push
call
push
mov
mov
call
jmp
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
mov
mov
ret
mov
mov
xor
cmp
mov
je
mov
mov
push
mov
mov
call
jmp
nop
nop
nop
mov
push
push
push
mov
push
push
mov
xor
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
add
ret
nop
nop
nop
mov
push
push
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
xor
push
mov
mov
call
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
mov
mov
mov
mov
call
lea
call
lea
push
call
lea
call
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
add
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
mov
add
ret
nop
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
mov
lea
test
jne
call
test
jne
mov
lea
test
jne
call
test
jne
mov
test
je
mov
mov
cmp
jne
xor
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
call
mov
cmp
mov
lea
seta
shl
sub
mov
shl
add
push
call
add
mov
test
mov
je
push
push
lea
push
push
push
mov
call
mov
jmp
xor
test
mov
mov
je
mov
xor
test
mov
jbe
mov
lea
shl
sub
shl
add
mov
mov
test
je
call
mov
test
jne
mov
inc
cmp
jb
xor
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
mov
xor
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
lea
call
lea
call
lea
call
lea
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
push
lea
mov
call
mov
xor
test
jbe
push
xor
mov
mov
mov
add
test
je
mov
call
mov
call
mov
inc
add
cmp
jb
pop
mov
test
je
mov
lea
push
push
push
push
call
push
call
add
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
xor
mov
mov
lea
cmp
mov
jb
mov
call
test
je
mov
mov
mov
mov
inc
mov
mov
mov
mov
lea
mov
lea
lea
lea
lea
shl
dec
cmp
jbe
mov
mov
mov
cmp
jb
call
test
je
mov
mov
mov
inc
mov
mov
cmp
je
cmp
jl
sub
mov
inc
mov
inc
mov
mov
jmp
inc
cmp
jg
mov
inc
jmp
cmp
jne
mov
inc
xor
cmp
jb
cmp
jl
sub
mov
inc
mov
pop
pop
pop
pop
add
ret
pop
pop
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
test
jle
push
mov
cmp
jge
mov
mov
mov
shl
sub
mov
mov
mov
shr
mov
or
mov
mov
mov
shl
mov
sub
sub
mov
jne
mov
mov
mov
mov
mov
inc
mov
mov
test
jg
pop
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
and
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
test
setne
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
xor
mov
mov
sub
shr
mov
push
call
add
cmp
jl
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
push
mov
lea
test
jbe
mov
cmp
jb
sub
mov
mov
shr
mov
shl
mov
or
mov
sub
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
test
mov
mov
ja
pop
pop
pop
ret
mov
sub
mov
mov
mov
shl
or
mov
pop
pop
pop
ret
nop
nop
nop
mov
push
and
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
xor
mov
mov
sub
shr
mov
push
call
add
cmp
jl
pop
pop
pop
ret
nop
nop
nop
nop
sub
push
push
push
push
mov
push
mov
call
mov
mov
mov
push
call
mov
push
push
mov
mov
call
xor
mov
mov
xor
lea
mov
xor
mov
rep
test
mov
mov
jbe
mov
xor
mov
inc
cmp
mov
jb
xor
mov
test
je
mov
mov
shr
inc
mov
inc
cmp
jb
xor
mov
mov
push
call
inc
cmp
jb
xor
mov
shr
mov
test
je
mov
mov
push
call
inc
cmp
jb
mov
mov
mov
xor
lea
add
rep
mov
mov
mov
xor
xor
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
je
mov
inc
cmp
jne
mov
cmp
mov
jl
lea
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jge
mov
mov
test
jle
mov
mov
dec
test
jg
mov
test
mov
jne
inc
jmp
test
je
dec
mov
mov
and
and
mov
inc
lea
mov
inc
shr
mov
jne
cmp
jl
mov
mov
inc
add
mov
jmp
mov
inc
mov
mov
lea
inc
inc
mov
mov
mov
mov
inc
add
cmp
mov
mov
jb
test
je
dec
mov
mov
and
and
mov
inc
lea
mov
inc
shr
mov
jne
mov
cmp
jge
mov
dec
mov
jmp
mov
inc
mov
mov
lea
inc
inc
mov
mov
xor
lea
mov
mov
add
add
dec
jne
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
sub
mov
mov
lea
mul
shr
mov
mov
jmp
mov
mov
test
je
mov
mov
shr
mov
and
mov
sub
cmp
mov
mov
mov
mov
jg
mov
jmp
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
push
push
mov
call
mov
push
push
mov
call
mov
mov
shl
xor
add
mov
mov
lea
mov
xor
xor
div
mov
test
jbe
lea
mov
add
add
inc
cmp
jb
lea
cmp
jle
cmp
je
cmp
je
mov
and
cmp
jne
mov
sub
mov
xor
cmp
jl
cmp
jge
xor
jmp
mov
mov
mov
inc
cmp
jl
mov
mov
mov
sub
dec
inc
sub
mov
test
mov
mov
jne
mov
mov
mov
xor
lea
xor
mov
inc
mov
add
cmp
rep
jl
xor
lea
mov
mov
mov
xor
lea
xor
mov
inc
cmp
jb
xor
mov
add
inc
mov
inc
add
cmp
jge
cmp
jb
mov
mov
mov
add
xor
xor
lea
mov
xor
add
mov
add
inc
cmp
jl
cmp
jae
mov
mov
mov
mov
mov
mov
inc
add
cmp
mov
jl
mov
mov
xor
mov
mov
shl
add
mov
inc
inc
lea
mov
mov
xor
lea
mov
add
mov
lea
inc
inc
cmp
mov
jl
mov
mov
cmp
jb
xor
lea
lea
xor
mov
cmp
jne
mov
mov
inc
add
cmp
jl
push
push
push
lea
mov
call
mov
inc
add
add
cmp
jl
mov
dec
mov
jne
xor
mov
mov
inc
cmp
jl
mov
xor
mov
xor
cmp
je
push
mov
call
mov
inc
cmp
jne
push
mov
call
test
jle
mov
mov
dec
test
jg
mov
inc
mov
cmp
mov
jb
lea
mov
mov
mov
xor
push
mov
mov
mov
push
call
xor
mov
xor
mov
mov
cmp
je
push
mov
call
cmp
jae
push
mov
call
inc
jmp
push
mov
call
dec
cmp
jne
push
mov
call
mov
inc
cmp
jl
mov
mov
mov
inc
add
cmp
mov
mov
jl
xor
mov
mov
mov
mov
lea
mov
mov
mov
xor
mov
inc
cmp
mov
jb
xor
mov
add
inc
mov
mov
test
jne
mov
xor
mov
mov
inc
mov
mov
shl
add
lea
mov
mov
shl
add
lea
mov
mov
dec
mov
xor
mov
mov
mov
mov
test
mov
jle
mov
cmp
jge
mov
mov
sub
shl
mov
mov
mov
mov
shr
mov
mov
or
mov
shl
mov
mov
sub
mov
sub
mov
jne
mov
mov
mov
mov
inc
mov
mov
test
jg
mov
mov
cmp
jb
mov
test
je
mov
mov
mov
mov
mov
mov
lea
sub
sub
cmp
ja
cmp
je
mov
mov
inc
cmp
mov
jle
pop
pop
pop
pop
add
ret
nop
sub
push
push
push
push
mov
push
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
or
xor
xor
mov
mov
mov
cmp
mov
mov
jne
test
jbe
mov
mov
and
and
mov
shr
xor
shl
mov
xor
dec
jne
xor
jmp
cmp
jne
inc
jmp
mov
mov
mov
mov
mov
shr
and
xor
shl
mov
xor
mov
inc
cmp
jb
not
mov
mov
push
call
mov
mov
push
push
mov
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
sub
mov
mov
mov
mov
cmp
jbe
cmp
jb
mov
shr
mov
cmp
je
cmp
jne
cmp
jae
inc
jmp
cmp
jae
lea
mov
push
push
push
call
mov
push
sub
add
push
push
mov
call
mov
mov
lea
mov
mov
sub
mov
mov
and
jbe
mov
sub
push
push
mov
call
mov
mov
and
mov
sub
mov
mov
mov
mov
mov
mov
push
push
mov
mov
lea
mov
sub
mov
call
mov
mov
mov
lea
sub
mov
test
je
sub
mov
mov
sub
cmp
jae
mov
mov
mov
sub
je
mov
add
sub
mov
mov
mov
inc
dec
jne
mov
add
mov
mov
and
shr
mov
mov
sub
mov
mov
pop
mov
mov
mov
inc
mov
pop
pop
pop
add
ret
mov
and
mov
shr
sub
mov
mov
mov
pop
mov
mov
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
mov
call
mov
cmp
je
mov
lea
shl
sub
mov
shl
mov
call
mov
xor
cmp
jbe
lea
mov
add
add
mov
mov
add
shr
or
mov
xor
inc
mov
mov
cmp
jb
mov
mov
push
mov
lea
mov
sub
push
mov
push
call
mov
cmp
je
mov
mov
inc
cmp
jne
xor
cmp
je
lea
mov
call
mov
mov
sub
xor
shr
add
adc
mov
mov
mov
mov
lea
push
lea
mov
push
push
call
mov
mov
lea
shl
mov
sub
shl
lea
call
pop
pop
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
shr
mov
mov
je
push
push
push
lea
mov
xor
mov
mov
mov
cmp
jb
sub
mov
mov
shr
mov
shl
mov
or
mov
sub
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
test
mov
mov
ja
jmp
mov
sub
mov
mov
mov
shl
or
mov
mov
inc
cmp
jb
mov
mov
pop
pop
pop
and
push
mov
and
push
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
sub
push
push
push
mov
push
mov
call
test
jne
mov
xor
test
jbe
xor
mov
mov
mov
add
test
je
lea
call
test
jne
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
call
test
je
mov
inc
add
cmp
jb
lea
push
mov
call
test
jne
mov
jmp
lea
push
mov
call
test
jne
mov
jmp
mov
mov
push
call
mov
call
mov
mov
push
call
mov
call
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
add
push
mov
call
mov
test
je
mov
add
call
lea
mov
call
mov
xor
cmp
jbe
mov
mov
lea
call
mov
inc
add
cmp
jb
xor
lea
call
lea
call
mov
xor
cmp
jbe
mov
mov
lea
call
mov
inc
add
cmp
jb
xor
lea
call
mov
cmp
je
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
jmp
mov
mov
mov
push
call
test
je
push
mov
call
mov
test
jne
mov
test
je
mov
mov
mov
sub
mov
cdq
add
adc
mov
mov
mov
call
mov
mov
sub
xor
shr
add
lea
mov
mov
adc
push
lea
mov
mov
push
push
call
mov
test
jne
mov
mov
mov
push
call
test
jne
xor
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
mov
push
call
mov
cmp
jae
test
jbe
mov
cmp
jb
sub
mov
mov
shr
mov
shl
mov
or
mov
sub
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
test
mov
mov
ja
jmp
mov
sub
mov
mov
mov
shl
or
mov
xor
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
jmp
mov
mov
test
je
mov
push
call
mov
mov
test
je
jmp
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
mov
push
mov
push
mov
push
push
push
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
pop
pop
mov
mov
pop
mov
pop
ret
nop
nop
nop
mov
push
push
xor
push
push
test
jbe
mov
mov
mov
mov
dec
je
sub
je
sub
jne
cmp
jne
mov
cmp
mov
jae
mov
jmp
cmp
jne
mov
test
jne
mov
cmp
mov
seta
mov
jmp
cmp
jbe
mov
cmp
mov
seta
mov
jmp
cmp
jne
mov
mov
mul
sub
shr
add
shr
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
inc
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
mov
jae
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
push
push
call
add
mov
test
mov
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
mov
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
mov
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
mov
test
jne
mov
call
test
mov
jne
pop
pop
pop
mov
pop
add
ret
mov
mov
lea
mov
mov
mov
test
mov
je
mov
mov
sub
mov
sbb
mov
jne
cmp
jae
mov
mov
sub
mov
mov
mov
lea
push
mov
push
mov
push
push
call
test
jne
mov
test
je
mov
test
je
mov
push
call
test
jne
mov
mov
add
mov
mov
adc
test
mov
je
mov
push
push
push
call
test
jne
jmp
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
push
mov
mov
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
mov
push
push
push
push
push
push
mov
call
cmp
mov
mov
je
mov
push
call
mov
mov
pop
pop
pop
pop
mov
add
ret
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
call
mov
add
mov
xor
cmp
mov
je
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
test
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
mov
mov
test
je
mov
push
call
add
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
call
mov
add
mov
xor
cmp
mov
je
mov
mov
push
lea
mov
call
mov
mov
mov
mov
pop
mov
add
ret
nop
nop
nop
mov
push
push
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
xor
push
mov
mov
call
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
test
je
add
jmp
xor
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
push
mov
cmp
jb
push
lea
mov
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
mov
jmp
mov
mov
inc
mov
mov
mov
and
mov
sub
mov
shl
mov
or
mov
xor
mov
mov
shl
or
lea
cmp
mov
mov
jae
pop
mov
mov
mov
mov
shl
add
mov
dec
and
shr
mov
pop
pop
pop
ret
nop
nop
push
push
mov
push
push
push
mov
xor
cmp
jb
lea
mov
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
mov
jmp
mov
mov
inc
mov
mov
mov
and
mov
sub
mov
shl
mov
or
mov
xor
mov
mov
shl
or
lea
cmp
mov
mov
jae
mov
mov
mov
mov
sub
shr
mov
shr
and
cmp
jae
mov
shr
xor
mov
jmp
cmp
lea
mov
jb
add
inc
cmp
jae
add
mov
mov
mov
shr
mov
mov
sub
mov
mov
sub
shr
add
cmp
jae
mov
cmp
jae
mov
inc
jmp
cmp
jae
cmp
jne
test
je
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
mov
inc
dec
test
jg
cmp
jl
pop
pop
pop
mov
pop
pop
ret
pop
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
sub
push
push
push
push
mov
push
call
cmp
push
sete
mov
mov
call
cmp
jbe
pop
pop
pop
xor
pop
add
ret
test
jne
mov
mov
mov
mov
neg
and
push
shr
add
mov
mov
mov
call
mov
mov
test
je
pop
pop
pop
mov
pop
add
ret
push
mov
call
mov
xor
not
and
pop
cmp
pop
sete
pop
mov
pop
add
ret
cmp
mov
jne
mov
mov
lea
mov
rep
mov
mov
lea
rep
mov
mov
lea
rep
mov
mov
mov
lea
mov
rep
mov
neg
sbb
and
add
mov
jmp
push
mov
call
add
push
mov
mov
call
inc
push
mov
mov
call
mov
mov
add
test
jne
cmp
jbe
pop
pop
pop
xor
pop
add
ret
xor
xor
cmp
mov
mov
jge
push
mov
call
mov
jmp
mov
inc
cmp
jb
mov
xor
lea
lea
rep
xor
xor
xor
mov
cmp
jg
mov
lea
inc
mov
inc
add
cmp
mov
jb
xor
mov
mov
mov
mov
mov
mov
lea
mov
sub
shl
add
cmp
mov
ja
cmp
mov
je
mov
mov
mov
mov
add
cmp
mov
mov
jg
mov
shr
cmp
jae
lea
sub
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
and
rep
mov
mov
mov
add
mov
inc
cmp
jle
xor
xor
mov
test
je
mov
lea
mov
inc
mov
inc
cmp
jb
mov
mov
mov
lea
add
mov
push
push
call
test
jne
pop
pop
pop
pop
add
ret
mov
xor
lea
lea
rep
stos
stos
mov
xor
lea
rep
mov
lea
mov
shr
rep
mov
and
rep
mov
lea
mov
lea
shr
rep
mov
and
rep
lea
push
lea
call
test
jne
pop
pop
pop
xor
pop
add
ret
lea
lea
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
sub
push
push
push
push
mov
mov
cmp
je
xor
cmp
jne
mov
test
jne
mov
lea
neg
sbb
and
add
push
call
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
lea
call
test
je
test
je
lea
call
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
jle
cmp
jbe
mov
dec
lea
mov
mov
sub
mov
dec
cmp
jb
add
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
call
mov
xor
dec
cmp
jg
mov
cmp
jbe
mov
test
je
mov
test
jne
mov
call
test
je
mov
mov
test
je
mov
test
jbe
test
jbe
mov
cmp
jne
mov
mov
lea
cmp
jb
mov
call
test
je
mov
mov
inc
mov
jmp
mov
or
inc
mov
jmp
mov
add
mov
mov
shr
mov
mov
mov
lea
mov
mov
mov
inc
mov
mov
cmp
jne
call
mov
dec
dec
mov
mov
test
ja
mov
mov
test
sete
mov
jmp
cmp
ja
lea
mov
call
mov
mov
mov
sub
shr
mov
shr
and
cmp
jae
mov
shr
xor
mov
jmp
cmp
lea
mov
jb
add
inc
cmp
jae
add
mov
mov
mov
shr
mov
mov
sub
mov
mov
sub
shr
add
cmp
jae
mov
cmp
jae
mov
mov
lea
mov
mov
mov
inc
mov
mov
cmp
jne
call
dec
mov
jmp
je
cmp
jae
mov
sub
test
je
xor
xor
mov
mov
mov
jmp
xor
xor
mov
mov
mov
mov
mov
cmp
jb
lea
lea
push
mov
call
test
jne
mov
mov
inc
mov
mov
mov
and
mov
sub
mov
shl
mov
or
mov
xor
mov
mov
shl
or
lea
cmp
mov
mov
jae
mov
mov
mov
shl
mov
add
mov
mov
dec
and
shr
mov
lea
mov
cmp
mov
mov
mov
jbe
mov
mov
call
mov
mov
mov
sub
shr
mov
shr
and
cmp
jae
mov
shr
xor
mov
mov
jmp
mov
lea
cmp
mov
jb
mov
add
inc
cmp
jae
add
mov
mov
mov
shr
mov
sub
mov
mov
mov
sub
shr
add
cmp
jb
or
jmp
mov
mov
mov
cmp
jae
mov
xor
mov
cmp
mov
jb
lea
lea
push
mov
call
test
jne
mov
mov
inc
mov
mov
mov
and
mov
sub
mov
shl
mov
or
mov
xor
mov
mov
shl
or
lea
cmp
mov
mov
jae
mov
mov
mov
mov
shl
mov
add
mov
mov
dec
and
shr
mov
push
lea
mov
mov
add
push
call
test
je
mov
mov
mov
sub
sub
mov
mov
jne
mov
test
jbe
jmp
mov
jmp
mov
mov
mov
mov
test
jbe
jmp
mov
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
mov
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
mov
cmp
jb
mov
call
test
jne
pop
ret
mov
mov
mov
mov
mov
inc
mov
mov
pop
ret
push
mov
mov
push
mov
mov
sub
dec
cmp
jb
mov
test
je
mov
cmp
jae
add
mov
push
mov
sub
cmp
jbe
mov
sub
cmp
jbe
mov
lea
add
add
mov
mov
mov
inc
inc
dec
jne
pop
pop
mov
pop
ret
pop
xor
pop
ret
cmp
jne
xor
mov
mov
mov
mov
mov
mov
inc
inc
cmp
mov
jne
mov
call
dec
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
mov
push
push
mov
push
xor
lea
mov
push
mov
mov
call
mov
mov
mov
mov
test
je
mov
mov
jmp
mov
mov
mov
sub
mov
sub
xor
cdq
shr
sub
mov
sbb
add
mov
adc
add
mov
mov
adc
mov
mov
call
mov
mov
mov
mov
test
je
lea
call
mov
mov
sub
mov
mov
sbb
mov
add
adc
mov
jne
cmp
jae
test
mov
je
push
mov
call
mov
test
je
mov
mov
test
mov
je
lea
call
mov
test
je
mov
push
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
cmp
jne
cmp
jne
mov
test
je
mov
mov
neg
and
add
mov
mov
shr
xor
mov
cmp
jge
mov
cmp
jne
mov
mov
lea
cmp
jb
mov
call
test
je
mov
mov
inc
mov
mov
inc
jmp
mov
or
inc
inc
mov
mov
jmp
mov
add
mov
mov
shr
mov
mov
mov
inc
jmp
lea
mov
call
mov
xor
cmp
jne
mov
cmp
je
mov
mov
sub
lea
cmp
setb
test
je
mov
mov
mov
cmp
je
mov
push
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
cmp
je
mov
push
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
test
je
mov
mov
mov
sub
mov
sub
xor
cdq
shr
sub
mov
sbb
add
mov
adc
mov
add
mov
adc
mov
sub
sbb
lea
mov
mov
call
mov
sub
sbb
lea
mov
mov
push
lea
mov
mov
push
push
call
mov
test
je
mov
mov
test
mov
je
lea
call
mov
test
je
mov
push
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
add
call
mov
add
mov
test
je
mov
push
call
mov
pop
ret
nop
nop
nop
mov
push
push
push
mov
push
mov
lea
push
call
mov
lea
mov
push
push
call
mov
mov
push
push
push
mov
call
mov
push
mov
call
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jne
mov
pop
ret
mov
push
push
mov
mov
mov
mov
sub
sub
xor
cdq
shr
sub
mov
sbb
add
mov
adc
mov
add
adc
mov
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
call
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
xor
pop
ret
nop
mov
mov
mov
mov
push
lea
call
xor
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
test
mov
mov
je
mov
mov
lea
mov
call
mov
mov
mov
push
lea
mov
mov
call
test
jne
test
je
mov
call
mov
mov
sub
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
push
mov
call
mov
mov
mov
push
push
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
push
push
mov
mov
push
mov
lea
rep
xor
xor
lea
xor
mov
cmp
jg
mov
lea
inc
mov
inc
add
cmp
mov
jb
xor
mov
mov
mov
mov
mov
mov
mov
sub
shl
add
cmp
mov
ja
cmp
mov
je
mov
mov
mov
mov
add
cmp
mov
mov
jg
mov
shr
cmp
jae
sub
lea
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
add
mov
inc
cmp
jle
xor
xor
mov
test
je
mov
lea
mov
inc
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
push
push
mov
mov
push
mov
lea
rep
xor
xor
lea
xor
mov
cmp
jg
mov
lea
inc
mov
inc
add
cmp
mov
jb
xor
mov
mov
mov
mov
mov
mov
mov
sub
shl
add
cmp
mov
ja
cmp
mov
je
mov
mov
mov
mov
add
cmp
mov
mov
jg
mov
shr
cmp
jae
sub
lea
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
add
mov
inc
cmp
jle
xor
xor
mov
test
je
mov
lea
mov
inc
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
push
push
push
mov
xor
mov
mov
mov
shl
test
jle
mov
mov
mov
lea
mov
mov
mov
shl
mov
shr
rep
mov
and
rep
inc
cmp
jb
xor
mov
mov
mov
mov
mov
shl
test
jbe
mov
mov
mov
lea
mov
mov
mov
mov
shl
mov
shr
rep
mov
and
rep
add
mov
inc
inc
cmp
mov
jb
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
neg
sbb
mov
add
mov
mov
mov
neg
sbb
mov
add
cmp
mov
mov
mov
mov
mov
mov
jne
mov
cmp
mov
mov
jne
mov
mov
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
push
push
push
mov
push
mov
mov
mov
test
jne
mov
call
test
mov
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
test
jne
mov
call
test
mov
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
test
je
mov
test
jne
mov
call
test
mov
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
test
jne
mov
call
test
mov
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
test
jne
mov
mov
xor
push
test
mov
mov
setne
mov
mov
sub
neg
sbb
push
and
push
push
add
mov
call
test
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
lea
call
test
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
jmp
mov
test
je
mov
mov
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
xor
push
test
jbe
mov
mov
mov
mov
add
cmp
ja
jmp
cmp
jne
mov
test
mov
jne
mov
mov
cmp
jne
mov
jmp
cmp
jg
mov
jmp
add
mov
mov
jmp
cmp
jne
mov
cmp
mov
jb
cmp
ja
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
test
sete
test
mov
sete
mov
inc
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
stc
mov
inc
add
mov
inc
add
mov
icebp
push
mov
call
mov
xor
mov
call
mov
mov
call
mov
mov
call
mov
pop
pop
ret
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
mov
call
mov
mov
call
mov
test
je
mov
push
call
add
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
mov
add
ret
nop
sub
push
mov
mov
test
je
mov
mov
mov
lea
test
mov
je
xor
mov
lea
mov
pop
add
ret
mov
lea
test
mov
je
call
jmp
call
mov
push
push
mov
test
push
mov
jbe
lea
mov
shr
mov
lea
lea
mov
mov
mov
add
mov
mov
mov
mov
add
dec
jne
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
sub
inc
dec
mov
sub
dec
cmp
jbe
mov
cmp
jae
lea
sub
mov
cmp
jne
inc
inc
cmp
jb
mov
mov
mov
mov
mov
pop
pop
pop
test
je
mov
inc
add
mov
mov
test
jne
inc
pop
add
ret
nop
push
mov
push
mov
test
jne
mov
test
jbe
mov
mov
test
je
call
mov
add
pop
mov
pop
ret
call
add
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
xor
push
mov
mov
mov
push
jmp
mov
mov
lea
mov
mov
lea
xor
test
mov
mov
mov
mov
ja
mov
xor
mov
pop
mov
xor
mov
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
cmp
je
xor
xor
mov
mov
sub
mov
pop
mov
mov
xor
mov
mov
pop
pop
pop
add
ret
xor
mov
mov
mov
call
mov
xor
mov
cmp
jne
pop
pop
pop
mov
pop
add
ret
lea
mov
xor
mov
cmp
jbe
xor
mov
mov
lea
mov
push
mov
call
mov
pop
pop
pop
pop
add
ret
mov
mov
sub
xor
mov
mov
xor
cmp
mov
mov
mov
mov
mov
jb
lea
jmp
xor
xor
mov
mov
cmp
mov
jae
xor
mov
mov
jmp
shr
xor
mov
mov
add
xor
mov
xor
mov
add
xor
mov
mov
cmp
jne
add
inc
add
cmp
jbe
mov
mov
cmp
mov
je
lea
mov
cmp
je
cmp
jae
mov
call
mov
xor
xor
mov
lea
test
mov
je
mov
mov
cmp
ja
mov
mov
mov
mov
sub
xor
mov
xor
mov
mov
add
cmp
jae
mov
mov
mov
test
je
lea
mov
cmp
jae
sub
lea
add
mov
add
dec
mov
jne
xor
mov
mov
cmp
jae
xor
mov
jmp
mov
xor
shr
mov
mov
add
xor
mov
mov
add
mov
mov
lea
xor
mov
add
cmp
jae
mov
mov
mov
mov
xor
mov
cmp
jne
mov
mov
add
add
cmp
mov
je
cmp
jae
xor
mov
mov
jmp
shr
xor
mov
mov
add
xor
mov
xor
mov
sub
cmp
jae
xor
mov
jmp
mov
xor
shr
mov
mov
add
xor
mov
add
mov
inc
add
mov
jmp
mov
mov
mov
inc
add
cmp
mov
mov
jne
mov
push
push
mov
call
pop
pop
pop
pop
add
ret
mov
push
push
mov
call
mov
mov
mov
mov
lea
mov
mov
mov
dec
mov
push
mov
call
pop
pop
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
xor
mov
test
jne
mov
pop
ret
push
xor
mov
xor
mov
mov
lea
push
mov
mov
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
rep
lea
mov
mov
mov
rep
stos
stos
lea
mov
mov
rep
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
xor
push
mov
push
xor
mov
test
mov
mov
jne
mov
mov
mov
xor
test
jle
push
mov
mov
mov
dec
cmp
jge
mov
xor
mov
mov
jmp
mov
inc
cmp
jge
cmp
je
cmp
jge
add
jmp
test
je
cmp
je
inc
inc
jmp
cmp
jg
inc
jmp
inc
xor
mov
test
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
mov
mov
mov
inc
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
lea
test
jbe
mov
cmp
jb
mov
sub
sub
mov
mov
shl
mov
or
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
shr
test
mov
ja
pop
pop
pop
ret
mov
mov
shl
push
mov
mov
sub
dec
and
shl
mov
or
sub
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
test
jne
mov
mov
mov
xor
test
mov
jle
push
mov
jmp
mov
mov
dec
cmp
jge
mov
xor
mov
mov
mov
jmp
mov
inc
cmp
jge
cmp
je
cmp
jge
test
jle
mov
mov
xor
mov
push
push
mov
call
dec
jne
jmp
test
je
cmp
je
mov
mov
xor
mov
push
push
mov
call
dec
mov
mov
xor
mov
push
push
mov
call
push
add
jmp
cmp
jg
mov
mov
xor
mov
push
push
mov
call
push
add
jmp
mov
mov
xor
mov
push
push
mov
call
push
add
push
mov
call
mov
xor
test
mov
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
mov
mov
mov
mov
inc
cmp
mov
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
push
push
lea
lea
push
lea
call
push
lea
push
push
lea
lea
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
xor
xor
push
test
mov
jbe
xor
add
mov
imul
add
inc
cmp
jb
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
mov
push
push
mov
mov
push
sub
mov
mov
push
lea
call
mov
mov
push
mov
call
add
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
lea
push
push
lea
call
push
push
push
lea
lea
mov
call
add
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
push
mov
push
mov
lea
rep
mov
lea
rep
mov
mov
mov
mov
mov
cmp
jne
cmp
jae
cmp
jae
mov
test
jne
mov
mov
sub
je
mov
mov
cmp
jae
mov
test
je
lea
mov
push
call
jmp
lea
push
mov
call
mov
mov
mov
lea
inc
cmp
mov
jb
lea
xor
mov
mov
lea
mov
inc
mov
mov
mov
mov
cmp
jae
xor
mov
mov
inc
jmp
shr
xor
mov
mov
add
inc
jmp
mov
mov
sub
mov
mov
mov
and
inc
movzx
lea
mov
mov
mov
mov
sub
add
mov
jmp
mov
mov
inc
mov
mov
mov
add
pop
mov
pop
pop
add
ret
nop
nop
push
mov
mov
test
jne
push
mov
xor
mov
test
jne
mov
mov
inc
cmp
jb
mov
xor
test
jbe
push
xor
mov
mov
test
jne
mov
mov
mov
add
mov
mov
inc
cmp
jb
pop
xor
mov
test
jne
mov
mov
add
mov
inc
cmp
jb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
xor
test
jbe
push
push
mov
mov
xor
mov
and
shr
and
add
shl
or
mov
and
shr
and
shl
or
mov
and
shr
and
shl
or
mov
mov
mov
mov
sub
shr
inc
cmp
mov
jb
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
lea
call
lea
push
lea
call
mov
xor
test
mov
jbe
push
push
push
mov
lea
mov
mov
cmp
jb
xor
xor
mov
lea
mov
mov
mov
test
jbe
mov
cmp
jb
mov
sub
sub
mov
mov
shl
mov
or
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
shr
test
mov
ja
jmp
and
xor
xor
mov
mov
lea
mov
mov
mov
mov
test
jbe
mov
cmp
jb
mov
sub
sub
mov
mov
shl
mov
or
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
mov
shr
test
mov
ja
jmp
mov
mov
mov
shl
mov
sub
dec
and
shl
mov
or
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
sub
test
mov
jbe
mov
cmp
jb
mov
mov
sub
sub
mov
shl
mov
or
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
shr
test
mov
ja
jmp
mov
mov
mov
shl
mov
sub
dec
and
mov
shl
or
sub
mov
mov
mov
xor
mov
cmp
mov
jae
xor
mov
mov
jmp
mov
xor
shr
mov
mov
add
mov
xor
mov
mov
mov
test
jbe
mov
cmp
jb
mov
sub
sub
mov
mov
shl
mov
or
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
shr
test
mov
ja
jmp
mov
mov
mov
shl
mov
sub
dec
and
mov
shl
or
sub
mov
mov
mov
xor
mov
mov
mov
sub
test
mov
jbe
mov
cmp
jb
mov
mov
sub
sub
mov
shl
mov
or
push
call
mov
mov
shr
test
mov
ja
jmp
mov
mov
mov
shl
mov
sub
dec
and
shl
mov
or
sub
mov
mov
mov
mov
mov
inc
cmp
mov
jb
pop
pop
pop
mov
xor
mov
push
push
lea
call
pop
add
ret
nop
nop
nop
push
push
push
mov
test
mov
jbe
mov
mov
cmp
jb
mov
sub
sub
mov
mov
shl
mov
or
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
shr
test
mov
ja
pop
pop
pop
ret
mov
mov
mov
shl
mov
sub
dec
and
mov
shl
or
sub
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
push
push
push
push
push
mov
mov
lea
jmp
mov
mov
cmp
mov
jb
mov
mov
sub
test
mov
je
test
jne
mov
jmp
xor
push
push
mov
call
push
push
mov
call
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
push
and
mov
push
mov
mov
call
mov
push
not
and
push
mov
call
mov
mov
sub
xor
test
jbe
mov
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
inc
cmp
jb
mov
mov
sub
test
mov
jne
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
push
lea
push
push
lea
mov
lea
mov
mov
lea
mov
push
mov
mov
call
mov
test
jbe
lea
mov
mov
mov
mov
call
mov
cmp
jbe
mov
jmp
cmp
jbe
mov
jmp
mov
cmp
sbb
neg
add
push
mov
call
push
mov
call
dec
jne
lea
mov
mov
rep
mov
mov
mov
test
jne
dec
cmp
mov
ja
mov
mov
mov
test
jne
dec
cmp
mov
ja
mov
xor
lea
rep
mov
lea
push
push
push
mov
call
mov
lea
push
lea
push
push
mov
call
lea
push
push
push
lea
lea
call
mov
xor
mov
dec
lea
xor
mov
mov
test
jbe
cmp
jb
mov
mov
mov
cmp
jb
push
push
push
mov
lea
call
mov
mov
call
mov
add
pop
lea
lea
pop
pop
pop
add
ret
nop
nop
nop
mov
push
mov
push
lea
lea
mov
lea
mov
mov
lea
lea
mov
mov
push
mov
mov
mov
rep
lea
mov
mov
rep
lea
mov
mov
rep
mov
lea
mov
mov
mov
mov
rep
mov
call
mov
call
mov
call
pop
add
pop
ret
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
push
lea
mov
lea
lea
mov
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
je
cmp
ja
push
mov
call
cmp
setb
test
mov
je
mov
mov
xor
call
cmp
setbe
test
mov
je
mov
mov
mov
cmp
jle
cmp
jb
lea
lea
lea
mov
shl
mov
add
mov
mov
rep
mov
mov
mov
shr
mov
mov
mov
lea
lea
push
push
mov
mov
call
mov
mov
mov
mov
mov
sub
cmp
jb
cmp
jb
mov
mov
lea
mov
mov
rep
mov
mov
mov
mov
mov
mov
lea
sub
mov
mov
push
push
mov
call
mov
mov
mov
add
cmp
setb
test
mov
je
mov
mov
mov
pop
mov
mov
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xor
lea
and
jbe
mov
sub
jmp
xor
cmp
mov
jb
mov
lea
lea
xor
sub
jne
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
lea
lea
mov
lea
lea
mov
test
je
lea
push
push
mov
call
lea
lea
lea
mov
lea
mov
test
lea
jne
mov
test
je
mov
mov
mov
push
push
push
mov
call
jmp
mov
xor
test
setne
push
push
mov
call
mov
test
je
push
push
mov
call
push
mov
call
xor
lea
mov
mov
sub
mov
shl
inc
add
cmp
mov
jb
xor
lea
mov
mov
sub
mov
shl
inc
add
cmp
mov
jb
push
mov
call
jmp
cmp
jg
mov
test
je
push
push
mov
call
push
push
mov
call
mov
push
sub
mov
push
call
mov
push
dec
push
mov
call
mov
push
sub
mov
push
call
mov
xor
test
jbe
xor
push
mov
mov
push
call
mov
inc
cmp
jb
push
lea
lea
push
mov
mov
call
mov
push
push
lea
push
push
mov
call
mov
push
push
lea
push
push
mov
call
pop
mov
call
mov
mov
sub
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
cmp
mov
jb
mov
mov
lea
push
mov
mov
push
push
push
call
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
mov
push
push
push
mov
push
mov
cmp
jne
cmp
jne
xor
xor
jmp
mov
xor
test
mov
jne
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
call
cmp
jne
mov
mov
shl
add
cmp
mov
mov
mov
je
mov
push
call
mov
cmp
je
mov
push
call
lea
mov
mov
mov
mov
call
mov
lea
push
mov
call
mov
call
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
mov
mov
call
mov
mov
sub
mov
sete
push
push
call
mov
mov
mov
mov
add
adc
mov
test
mov
je
mov
call
mov
mov
sub
xor
shr
add
lea
mov
lea
adc
push
mov
mov
push
push
call
mov
test
jne
mov
mov
mov
sub
je
jmp
mov
mov
test
je
jmp
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
mov
call
mov
mov
xor
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
mov
mov
push
push
push
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
pop
pop
mov
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
lea
call
ret
nop
nop
mov
mov
mov
push
mov
push
mov
push
mov
push
push
lea
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
call
mov
add
mov
xor
cmp
mov
je
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
call
mov
add
mov
xor
cmp
mov
je
mov
mov
push
lea
mov
call
mov
mov
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
lea
call
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
push
mov
mov
lea
call
mov
pop
ret
push
mov
push
push
mov
mov
xor
test
jbe
mov
mov
lea
cmp
jne
cmp
jne
mov
cmp
jb
cmp
ja
inc
add
add
cmp
jb
pop
mov
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
dec
mov
mov
lea
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
call
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
push
mov
mov
lea
call
mov
pop
ret
cmp
je
mov
ret
mov
mov
xor
mov
inc
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
add
test
je
mov
mov
mov
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
mov
mov
inc
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
dec
mov
jne
push
call
add
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
inc
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
dec
mov
jne
push
call
add
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
push
lea
mov
call
push
lea
mov
call
push
lea
mov
call
mov
mov
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
mov
push
push
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
xor
push
mov
mov
call
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
add
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
pop
ret
nop
nop
nop
sub
push
push
push
mov
mov
push
cmp
jb
lea
lea
mov
push
mov
call
test
jne
mov
mov
inc
mov
mov
mov
and
mov
sub
mov
shl
mov
or
mov
xor
mov
mov
shl
or
lea
cmp
mov
mov
jae
mov
mov
mov
add
shr
and
mov
inc
xor
cmp
mov
mov
mov
mov
jle
jmp
mov
cmp
jb
lea
mov
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
mov
jmp
mov
mov
inc
mov
mov
mov
and
mov
sub
mov
shl
mov
or
mov
xor
mov
mov
shl
or
lea
cmp
mov
mov
jae
mov
mov
mov
add
shr
mov
and
mov
mov
cmp
lea
jb
lea
mov
mov
cmp
jb
mov
call
test
je
mov
mov
inc
mov
mov
jmp
mov
mov
inc
mov
mov
mov
and
mov
sub
mov
shl
mov
or
mov
xor
mov
mov
shl
or
lea
cmp
mov
mov
jae
mov
mov
mov
add
and
mov
mov
shr
inc
mov
mov
lea
cmp
jg
test
jle
mov
mov
mov
add
mov
mov
shl
mov
mov
shr
rep
mov
and
rep
mov
mov
inc
cmp
mov
jl
mov
mov
cmp
je
pop
pop
pop
xor
pop
add
ret
lea
push
push
mov
call
mov
mov
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
lea
push
lea
push
push
mov
call
test
jne
pop
add
ret
lea
push
lea
push
push
mov
call
test
jne
pop
add
ret
lea
push
lea
push
push
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
push
lea
mov
mov
call
test
jne
mov
jmp
mov
lea
push
mov
call
test
jne
mov
jmp
mov
xor
cmp
jne
mov
jmp
mov
mov
mov
mov
push
mov
mov
mov
mov
call
push
mov
call
mov
push
mov
call
lea
lea
call
mov
mov
mov
mov
mov
mov
mov
call
test
jne
mov
mov
call
mov
jmp
mov
mov
cmp
mov
ja
jb
cmp
jae
mov
test
je
and
xor
or
jne
mov
mov
mov
sub
mov
sub
xor
cdq
shr
sub
mov
sbb
add
mov
adc
mov
add
lea
mov
lea
adc
push
mov
mov
push
push
call
mov
test
jne
mov
mov
call
mov
mov
mov
and
inc
shr
test
mov
mov
jne
mov
mov
call
mov
mov
mov
push
shl
mov
add
mov
mov
mov
dec
and
shr
lea
mov
call
cmp
jae
mov
push
shl
lea
add
mov
call
cmp
jae
mov
add
cmp
jne
cmp
jb
lea
lea
push
mov
call
test
jne
mov
mov
inc
mov
mov
mov
and
mov
sub
mov
shl
mov
or
mov
xor
mov
mov
shl
or
lea
cmp
mov
mov
jae
mov
mov
mov
add
and
mov
shr
mov
add
mov
xor
cmp
mov
jb
ja
cmp
jb
test
jbe
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
add
adc
dec
cmp
mov
mov
ja
jb
cmp
jae
test
jbe
mov
mov
mov
mov
sub
dec
cmp
jb
mov
test
je
mov
cmp
jae
add
mov
sub
cmp
jbe
mov
sub
cmp
jbe
mov
add
add
add
mov
mov
mov
mov
inc
inc
dec
mov
jne
jmp
cmp
jne
xor
mov
mov
mov
mov
mov
mov
inc
inc
cmp
mov
jne
mov
call
mov
dec
mov
jne
mov
mov
mov
add
adc
mov
mov
jmp
mov
test
je
push
lea
call
cmp
jae
mov
jmp
cmp
jb
lea
lea
push
mov
call
test
jne
mov
mov
inc
mov
mov
mov
and
mov
sub
mov
shl
mov
or
mov
xor
mov
mov
shl
or
lea
cmp
mov
mov
jae
mov
mov
mov
add
and
mov
shr
mov
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
mov
add
adc
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
cmp
jb
ja
cmp
jbe
mov
mov
call
mov
jmp
mov
mov
call
mov
jmp
mov
mov
call
mov
jmp
mov
call
mov
mov
mov
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
mov
push
mov
push
mov
push
push
push
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
pop
pop
mov
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
cmp
jae
mov
ret
mov
mov
mov
mov
shr
and
mov
mov
setne
shr
add
and
mov
mov
mov
setne
add
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
shl
push
call
add
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
sub
push
push
push
mov
push
mov
mov
mov
xor
lea
rep
xor
mov
cmp
jbe
xor
mov
lea
mov
inc
inc
cmp
mov
jb
xor
mov
mov
mov
lea
xor
mov
mov
shl
add
cmp
ja
mov
mov
mov
sub
add
sub
mov
add
mov
inc
cmp
jl
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
mov
test
jbe
mov
mov
test
je
and
mov
lea
dec
mov
mov
mov
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
xor
mov
mov
cmp
jb
mov
mov
lea
cmp
jb
mov
call
test
je
mov
mov
inc
mov
mov
jmp
mov
mov
inc
mov
mov
mov
and
mov
sub
mov
shl
mov
or
mov
xor
mov
mov
shl
or
lea
cmp
mov
mov
jae
mov
mov
mov
lea
sub
shr
mov
shr
and
cmp
jb
dec
sub
test
jg
jmp
mov
test
jne
pop
pop
pop
or
pop
ret
mov
mov
shr
add
mov
mov
mov
sub
mov
mov
sub
shr
mov
add
cmp
jb
pop
pop
pop
or
pop
ret
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
xor
push
mov
mov
call
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
test
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
call
mov
test
je
mov
push
call
pop
ret
mov
push
cmp
je
mov
pop
ret
mov
mov
push
mov
lea
call
mov
call
test
jne
mov
test
jne
mov
call
test
mov
jne
mov
pop
ret
xor
pop
ret
nop
nop
nop
nop
cmp
ja
jmp
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
nop
ins
out
inc
add
inc
add
inc
add
out
inc
add
inc
add
dec
and
mov
mov
mov
mov
xor
ret
nop
nop
mov
push
xor
push
mov
cmp
setne
cmp
mov
je
mov
mov
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
mov
lea
push
push
call
mov
mov
lea
cmp
jne
mov
mov
push
mov
mov
mov
push
push
push
call
test
jne
mov
mov
sub
cmp
jbe
mov
mov
test
je
mov
mov
mov
sub
mov
sbb
xor
cmp
ja
jb
cmp
jae
mov
mov
mov
mov
sub
mov
lea
push
lea
push
push
add
lea
push
lea
call
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
adc
mov
mov
sub
lea
add
adc
test
jne
test
mov
je
mov
mov
test
je
mov
mov
cmp
jb
ja
mov
mov
cmp
jb
mov
jmp
mov
test
jne
cmp
je
mov
test
jne
mov
test
je
mov
push
mov
call
test
jne
test
jne
mov
test
jne
mov
test
jne
mov
mov
cmp
jne
mov
mov
test
je
mov
push
push
push
call
test
jne
jmp
pop
pop
pop
xor
pop
add
ret
mov
xor
cmp
setne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
xor
push
push
cmp
push
je
mov
mov
mov
mov
mov
lea
cmp
jne
mov
mov
mov
mov
push
push
mov
push
push
call
cmp
jne
mov
mov
sub
mov
mov
cmp
je
mov
mov
mov
sub
mov
sbb
cmp
ja
jb
cmp
jae
mov
mov
lea
push
mov
lea
push
add
push
lea
push
push
mov
lea
mov
call
mov
mov
add
mov
mov
add
mov
mov
adc
mov
mov
mov
add
mov
mov
adc
sub
mov
mov
add
cmp
mov
je
add
mov
call
cmp
jne
cmp
jne
cmp
je
cmp
jne
xor
pop
pop
pop
pop
pop
ret
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
jne
lea
push
push
mov
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
test
je
push
call
add
mov
pop
ret
nop
nop
mov
mov
mov
mov
test
je
jmp
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
je
cmp
je
mov
push
call
test
je
ret
cmp
je
mov
ret
mov
mov
xor
mov
ret
cmp
je
mov
ret
mov
mov
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
call
mov
xor
test
jbe
mov
mov
mov
lea
push
mov
call
test
jne
inc
add
add
cmp
jb
mov
lea
mov
call
mov
call
pop
pop
pop
pop
add
ret
mov
mov
call
mov
push
lea
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
call
mov
push
lea
call
lea
mov
push
call
neg
mov
lea
sbb
lea
mov
and
push
push
lea
call
mov
pop
cmp
jne
mov
test
je
add
ret
cmp
jne
mov
test
je
add
ret
cmp
jne
mov
test
jne
call
add
ret
nop
push
push
mov
push
mov
push
push
call
add
mov
test
mov
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
mov
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
mov
xor
repz
je
mov
mov
mov
xor
repz
jne
mov
mov
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
xor
push
mov
mov
call
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
inc
mov
mov
ret
mov
mov
dec
mov
jne
test
je
mov
push
call
xor
ret
nop
nop
nop
push
mov
call
test
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
call
mov
test
je
mov
push
call
pop
ret
mov
mov
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
mov
cmp
je
call
mov
call
test
mov
jne
mov
pop
ret
mov
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
lea
call
mov
call
test
jne
lea
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
cmp
ja
jmp
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
lea
dec
cli
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
nop
nop
nop
mov
test
setne
test
mov
je
mov
mov
mov
mov
mov
mov
mov
add
call
ret
nop
nop
nop
mov
xor
mov
mov
mov
mov
mov
push
lea
call
xor
ret
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jae
mov
jmp
add
mov
lea
mov
mov
cmp
jne
mov
mov
push
push
mov
mov
mov
mov
push
push
call
test
jne
mov
mov
mov
sub
xor
test
je
mov
mov
mov
sub
mov
sbb
xor
cmp
ja
jb
cmp
ja
mov
mov
test
je
mov
mov
mov
lea
sub
mov
lea
push
push
mov
lea
push
add
lea
push
lea
call
mov
mov
mov
mov
add
add
mov
mov
mov
mov
adc
mov
mov
mov
sub
lea
add
adc
test
jne
test
mov
je
mov
mov
test
je
mov
mov
cmp
jb
ja
mov
mov
cmp
jb
mov
jmp
mov
test
jne
cmp
je
mov
test
jne
mov
test
je
mov
mov
sub
push
mov
add
call
mov
mov
cmp
mov
mov
jne
xor
mov
mov
mov
mov
mov
sub
cmp
jae
mov
jmp
add
mov
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
je
mov
mov
mov
sub
mov
mov
sbb
mov
mov
lea
mov
push
push
push
call
test
jne
jmp
pop
pop
pop
xor
pop
add
ret
mov
xor
pop
cmp
pop
pop
setne
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
mov
test
jne
mov
pop
ret
mov
mov
lea
push
push
call
mov
mov
mov
push
push
push
mov
call
pop
ret
nop
nop
push
mov
push
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
xor
pop
ret
nop
push
mov
push
xor
push
push
cmp
push
je
mov
mov
mov
mov
mov
lea
cmp
jne
mov
mov
mov
mov
push
push
mov
mov
push
push
call
cmp
jne
mov
mov
sub
mov
mov
cmp
je
mov
mov
mov
sub
mov
sbb
cmp
ja
jb
cmp
jae
mov
mov
lea
push
mov
lea
push
add
push
lea
push
push
mov
lea
mov
call
mov
mov
add
mov
mov
add
mov
mov
adc
mov
mov
mov
add
mov
mov
adc
sub
mov
mov
add
cmp
mov
je
add
mov
call
cmp
jne
cmp
jne
cmp
je
cmp
jne
xor
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
mov
mov
push
push
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
call
test
jne
mov
test
je
mov
mov
test
jbe
mov
mov
lea
cmp
jne
mov
mov
push
push
mov
mov
mov
mov
push
push
call
test
jne
mov
test
je
mov
sub
cmp
jbe
mov
mov
mov
mov
add
mov
shr
rep
mov
and
rep
mov
mov
add
add
mov
mov
adc
mov
mov
mov
mov
sub
add
test
mov
je
add
test
ja
xor
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
jne
lea
push
push
mov
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
dec
mov
jne
test
je
mov
push
call
xor
ret
nop
nop
nop
push
mov
call
test
je
push
call
add
mov
pop
ret
nop
nop
mov
mov
mov
mov
test
je
push
mov
call
ret
nop
nop
nop
nop
nop
cmp
mov
jne
cmp
jne
mov
lea
push
lea
mov
call
neg
sbb
and
add
ret
cmp
jne
mov
dec
cmp
ja
jmp
mov
mov
xor
ret
mov
mov
xor
ret
mov
mov
xor
ret
mov
mov
xor
ret
mov
mov
xor
ret
mov
mov
xor
ret
mov
mov
xor
ret
mov
ret
nop
mov
add
out
add
out
add
retf
add
jecxz
inc
add
add
fwait
add
out
add
cmps
add
out
add
mov
inc
add
nop
nop
nop
mov
add
cmp
jb
cmp
ja
add
cmp
jne
mov
add
cmp
jb
cmp
ja
add
cmp
jne
xor
mov
sub
cmp
jl
jg
cmp
jne
mov
mov
mov
mov
ret
cmp
jne
mov
add
cmp
jb
cmp
ja
add
cmp
jne
xor
mov
sub
cmp
jl
cmp
jg
mov
cmp
jb
cmp
ja
add
test
jne
mov
mov
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
call
mov
xor
test
jbe
mov
mov
mov
mov
sub
je
dec
je
lea
mov
push
call
test
jne
jmp
cmp
jne
xor
cmp
sete
mov
jmp
cmp
jne
mov
mov
inc
add
add
cmp
jb
mov
lea
mov
call
mov
call
pop
pop
pop
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
sub
mov
lea
push
lea
mov
mov
call
test
jne
mov
mov
push
lea
call
add
ret
nop
nop
nop
nop
mov
sub
lea
push
push
call
mov
push
lea
call
lea
mov
push
call
neg
mov
lea
sbb
push
mov
and
push
lea
push
push
lea
call
mov
pop
cmp
jne
mov
test
je
add
ret
cmp
jne
mov
test
je
add
ret
cmp
jne
mov
test
jne
call
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
push
push
call
add
mov
test
mov
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
mov
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
test
jne
call
ret
push
push
mov
push
push
mov
cmp
jbe
add
xor
test
mov
lea
jbe
push
mov
inc
inc
cmp
jne
xor
xor
mov
xor
mov
shl
add
add
inc
cmp
jl
mov
lea
mov
neg
cmp
jl
mov
cmp
jge
test
jl
sub
jmp
add
xor
mov
shr
inc
cmp
jl
mov
add
add
cmp
jb
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
push
push
mov
push
mov
test
jne
mov
mov
push
mov
mov
push
push
push
call
pop
pop
pop
pop
ret
mov
xor
test
jbe
mov
mov
sub
mov
sub
cmp
mov
jb
mov
mov
mov
push
lea
lea
push
push
call
mov
add
add
add
cmp
mov
jne
mov
call
test
jne
cmp
jb
mov
test
je
mov
xor
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
test
je
call
xor
mov
lea
push
mov
mov
sub
push
lea
push
push
call
test
jne
mov
test
je
add
mov
cmp
jae
jmp
pop
mov
pop
pop
ret
mov
mov
add
mov
test
mov
mov
je
mov
cmp
jae
mov
pop
mov
xor
pop
pop
ret
xor
mov
xor
pop
pop
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
xor
push
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
call
add
cmp
je
mov
mov
mov
mov
jmp
xor
cmp
mov
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
call
ret
nop
nop
mov
mov
inc
mov
mov
ret
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
test
je
mov
push
call
push
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
add
mov
mov
mov
call
mov
mov
test
pop
je
mov
push
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
mov
add
ret
nop
push
mov
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
add
mov
test
je
mov
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
call
test
jne
mov
call
pop
ret
push
mov
push
lea
mov
mov
push
mov
sub
shr
mov
add
sub
mov
and
shr
cmp
jb
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
mov
and
shl
or
mov
shl
and
add
or
mov
mov
mov
cmp
jae
mov
pop
pop
pop
ret
nop
nop
nop
nop
sub
push
push
push
xor
push
mov
xor
push
mov
call
mov
inc
cmp
jb
mov
xor
lea
lea
rep
xor
xor
mov
cmp
jg
mov
lea
inc
mov
inc
add
cmp
mov
jb
xor
xor
mov
mov
mov
mov
mov
mov
lea
mov
sub
shl
add
cmp
mov
ja
cmp
mov
je
mov
mov
mov
mov
add
cmp
mov
mov
jg
mov
shr
cmp
jae
lea
sub
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
and
rep
mov
mov
mov
add
mov
inc
cmp
jle
xor
xor
mov
test
je
mov
lea
mov
inc
mov
inc
cmp
jb
mov
xor
xor
mov
test
jbe
mov
mov
mov
sub
mov
mov
test
je
mov
mov
mov
inc
inc
mov
mov
dec
jmp
mov
mov
lea
mov
sub
mov
shr
shr
and
cmp
jae
mov
shr
xor
mov
jmp
mov
lea
cmp
mov
jb
mov
add
inc
cmp
jae
mov
add
mov
mov
cmp
jb
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
mov
and
shl
or
mov
shl
and
add
or
mov
mov
mov
cmp
jae
mov
sub
mov
sub
shr
add
cmp
jae
mov
cmp
jne
push
mov
call
mov
add
xor
jmp
cmp
jne
push
mov
call
mov
add
xor
jmp
cmp
je
cmp
ja
mov
jmp
push
mov
call
mov
mov
mov
mov
sub
mov
shr
add
shr
and
cmp
jae
mov
shr
xor
mov
mov
jmp
mov
lea
cmp
mov
jb
mov
add
inc
mov
mov
cmp
jae
mov
mov
add
mov
call
mov
mov
sub
mov
sub
shr
add
cmp
jae
mov
cmp
ja
mov
xor
mov
xor
sub
mov
add
div
mov
mov
cmp
jae
mov
mov
jmp
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
cmp
jb
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
mov
and
shl
or
mov
shl
and
add
or
mov
mov
mov
cmp
jae
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
mov
test
je
mov
mov
lea
cmp
jb
call
jmp
inc
mov
mov
lea
mov
cmp
jb
mov
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
mov
and
shl
or
mov
shl
and
add
or
mov
mov
mov
cmp
jae
push
mov
call
mov
cmp
mov
jbe
pop
pop
pop
xor
pop
add
ret
mov
test
je
push
mov
call
cmp
jne
mov
jmp
push
mov
call
mov
jmp
mov
mov
mov
sub
add
shr
mov
mov
shr
and
call
mov
mov
mov
sub
add
shr
mov
mov
shr
and
call
shl
add
mov
mov
cmp
sete
test
mov
je
test
je
mov
jmp
xor
test
mov
je
mov
mov
and
sub
push
mov
call
mov
test
jne
mov
mov
mov
shr
shl
or
mov
mov
mov
dec
mov
add
xor
xor
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
and
add
shl
or
cmp
jb
mov
dec
mov
add
dec
mov
jne
pop
pop
pop
mov
pop
add
ret
cmp
sete
test
mov
je
xor
push
mov
call
mov
inc
cmp
jb
mov
xor
lea
lea
rep
xor
xor
xor
mov
cmp
jg
mov
lea
inc
mov
inc
add
cmp
mov
jb
xor
mov
mov
mov
mov
mov
mov
lea
mov
sub
shl
add
cmp
mov
ja
cmp
mov
je
mov
mov
mov
mov
add
cmp
mov
mov
jg
mov
shr
cmp
jae
lea
sub
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
and
rep
mov
mov
mov
add
mov
inc
cmp
jle
xor
xor
mov
test
je
mov
lea
mov
inc
mov
inc
cmp
jb
lea
push
lea
push
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
mov
lea
push
lea
push
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
mov
add
cmp
jae
mov
lea
sub
xor
mov
shr
rep
mov
and
rep
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
push
push
mov
call
test
jne
pop
pop
pop
xor
pop
add
ret
lea
lea
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
lea
rep
lea
mov
rep
stos
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
mov
mov
mov
cmp
jne
lea
mov
mov
call
mov
mov
test
je
mov
test
jne
cmp
jb
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
mov
mov
and
shl
or
mov
shl
and
add
or
mov
mov
mov
cmp
jae
mov
test
jne
mov
mov
mov
call
mov
mov
test
mov
jne
push
mov
call
test
setne
test
je
push
mov
call
mov
push
mov
shl
call
or
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
test
jle
mov
test
jbe
mov
mov
lea
sub
dec
mov
cmp
jb
add
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
call
mov
dec
dec
mov
mov
test
mov
jg
jmp
mov
test
jbe
mov
test
jne
mov
call
test
je
mov
cmp
mov
jb
mov
sub
sub
mov
mov
test
mov
mov
je
test
jbe
lea
lea
mov
mov
mov
cmp
jb
mov
call
jmp
mov
inc
mov
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
dec
jne
jmp
test
jbe
lea
mov
mov
mov
sub
mov
shr
shr
and
cmp
jae
mov
shr
xor
mov
jmp
mov
lea
cmp
mov
jb
mov
add
inc
cmp
jae
mov
add
mov
mov
cmp
jb
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
call
mov
mov
mov
and
mov
shl
and
or
shl
or
mov
add
mov
mov
mov
cmp
jae
mov
sub
mov
sub
shr
add
cmp
jb
or
mov
add
cmp
jae
mov
and
shr
lea
cmp
mov
jne
mov
mov
mov
mov
sub
shr
shr
and
cmp
jae
mov
shr
xor
mov
jmp
mov
cmp
jae
mov
mov
lea
mov
mov
mov
inc
mov
mov
cmp
jne
call
dec
jmp
mov
lea
mov
cmp
mov
jb
mov
add
inc
cmp
jae
mov
mov
add
mov
mov
cmp
jb
mov
mov
cmp
jb
mov
call
mov
jmp
mov
inc
mov
mov
mov
call
mov
mov
mov
and
mov
shl
and
or
shl
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
sub
mov
sub
shr
add
cmp
jae
mov
cmp
jae
add
cmp
jae
mov
mov
mov
mov
jmp
cmp
jae
mov
and
shr
dec
or
mov
shl
jmp
add
mov
shl
mov
test
je
cmp
jb
mov
mov
mov
add
sub
shr
mov
sub
add
mov
and
shr
cmp
jb
mov
call
mov
mov
call
mov
mov
mov
mov
shl
and
and
or
mov
shl
or
add
mov
mov
cmp
mov
jae
lea
mov
mov
mov
mov
sub
mov
shr
shr
and
cmp
jae
mov
shr
xor
mov
jmp
mov
lea
cmp
mov
jb
mov
add
inc
cmp
jae
mov
add
mov
mov
cmp
jb
mov
call
mov
mov
call
mov
mov
mov
and
mov
shl
and
or
shl
or
mov
add
mov
mov
mov
cmp
jae
mov
sub
mov
sub
shr
add
cmp
jae
mov
cmp
jae
add
jmp
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
mov
call
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
push
push
lea
call
test
je
mov
mov
sub
sub
test
mov
mov
jne
mov
test
ja
mov
test
jbe
jmp
pop
pop
pop
mov
pop
add
ret
mov
mov
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jb
jmp
mov
inc
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
push
test
push
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
push
push
call
test
jne
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
mov
lea
push
mov
call
mov
push
push
call
test
jne
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
adc
mov
mov
mov
call
mov
sub
mov
sbb
mov
jne
cmp
jae
test
mov
je
push
mov
call
mov
test
jne
test
je
mov
mov
mov
sub
mov
sub
xor
cdq
shr
sub
mov
sbb
mov
add
mov
adc
mov
mov
call
mov
mov
sub
lea
mov
lea
sbb
push
mov
mov
push
push
call
mov
test
jne
jmp
mov
push
mov
call
mov
mov
mov
call
mov
jmp
mov
push
mov
call
jmp
mov
push
mov
call
mov
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
mov
push
mov
push
mov
push
push
push
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
pop
pop
mov
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
call
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
xor
pop
ret
nop
mov
test
jne
mov
ret
mov
mov
mov
push
lea
call
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
jb
cmp
ja
cmp
jae
add
jmp
sub
neg
sbb
and
add
shl
push
lea
mov
call
test
jne
mov
pop
ret
push
lea
call
neg
sbb
pop
and
add
ret
mov
pop
ret
nop
sub
xor
push
push
push
mov
mov
push
mov
lea
rep
xor
xor
lea
xor
mov
cmp
jg
mov
lea
inc
mov
inc
add
cmp
mov
jb
xor
mov
mov
mov
mov
mov
mov
mov
sub
shl
add
cmp
mov
ja
cmp
mov
je
mov
mov
mov
mov
add
cmp
mov
mov
jg
mov
shr
cmp
jae
sub
lea
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
add
mov
inc
cmp
jle
xor
xor
mov
test
je
mov
lea
mov
inc
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
push
push
mov
mov
push
mov
lea
rep
xor
xor
lea
xor
mov
cmp
jg
mov
lea
inc
mov
inc
add
cmp
mov
jb
xor
mov
mov
mov
mov
mov
mov
mov
sub
shl
add
cmp
mov
ja
cmp
mov
je
mov
mov
mov
mov
add
cmp
mov
mov
jg
mov
shr
cmp
jae
sub
lea
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
add
mov
inc
cmp
jle
xor
xor
mov
test
je
mov
lea
mov
inc
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
call
mov
test
je
mov
push
call
lea
mov
call
mov
pop
mov
add
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
xor
push
mov
mov
call
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
mov
mov
inc
mov
mov
ret
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
push
jae
pop
mov
pop
ret
mov
mov
mov
mov
mov
cmp
jb
cmp
ja
cmp
jb
cmp
ja
push
lea
call
test
jne
pop
mov
pop
ret
push
mov
lea
call
neg
sbb
pop
and
pop
add
ret
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
mov
sub
je
sub
je
dec
jne
pop
mov
pop
ret
mov
mov
lea
mov
mov
mov
mov
mov
call
test
jne
mov
pop
mov
pop
ret
xor
lea
mov
mov
call
mov
push
test
push
je
mov
mov
mov
sub
mov
sbb
mov
xor
cmp
jb
ja
cmp
jbe
mov
jmp
mov
xor
xor
cmp
je
lea
mov
lea
call
mov
test
jne
test
jl
mov
inc
cmp
mov
jne
xor
mov
mov
add
pop
mov
mov
adc
pop
test
mov
je
mov
mov
pop
pop
ret
cmp
jge
xor
cmp
setl
add
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
test
jne
mov
call
test
mov
jne
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
mov
lea
push
push
call
mov
mov
mov
lea
push
push
mov
mov
call
mov
mov
mov
mov
sub
push
call
test
jne
test
jne
cmp
je
mov
test
je
mov
mov
mov
mov
sub
push
cdq
add
adc
mov
lea
mov
mov
push
push
call
test
jne
mov
test
je
mov
mov
cmp
ja
jb
mov
mov
cmp
jae
mov
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
sub
push
call
test
je
pop
pop
pop
pop
add
ret
pop
mov
pop
pop
pop
add
ret
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
mov
mov
test
setne
test
mov
je
mov
mov
mov
mov
mov
mov
mov
xor
ret
nop
nop
nop
nop
nop
push
mov
push
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
mov
push
mov
push
push
mov
mov
push
lea
mov
call
mov
test
je
mov
sub
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
xor
mov
mov
lea
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
nop
mov
push
push
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
xor
push
mov
mov
call
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
inc
mov
mov
ret
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
mov
mov
mov
call
mov
lea
call
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
xor
test
jbe
mov
mov
mov
cmp
jne
mov
mov
sub
je
dec
jne
cmp
jb
cmp
ja
mov
jmp
cmp
jb
cmp
ja
test
jne
mov
inc
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
mov
mov
mov
lea
call
add
ret
sub
push
push
push
mov
xor
push
cmp
jne
mov
call
cmp
mov
jne
pop
pop
pop
mov
pop
add
ret
lea
push
mov
call
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
xor
lea
mov
call
mov
lea
push
mov
mov
push
push
push
mov
mov
call
cmp
jne
jmp
xor
mov
cmp
je
test
jbe
mov
xor
lea
mov
mov
push
call
mov
test
jne
mov
inc
cmp
jb
mov
mov
add
adc
mov
mov
mov
test
je
mov
mov
mov
sub
cdq
add
mov
mov
lea
adc
push
lea
mov
mov
push
push
call
test
jne
mov
lea
push
mov
mov
push
push
push
call
test
je
pop
pop
pop
pop
add
ret
mov
call
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
push
push
push
push
call
mov
add
mov
xor
cmp
mov
je
mov
mov
push
mov
mov
lea
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
call
mov
pop
pop
pop
mov
mov
add
ret
mov
pop
xor
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
mov
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
mov
push
lea
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
mov
call
mov
call
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
xor
cmp
jne
mov
call
cmp
mov
jne
pop
pop
pop
mov
pop
add
ret
lea
push
mov
call
test
jne
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
inc
mov
jmp
mov
call
mov
inc
cmp
jl
mov
test
jne
mov
and
mov
mov
and
inc
shr
cmp
jb
cmp
ja
jne
pop
pop
pop
mov
pop
add
ret
and
lea
add
push
shl
mov
call
test
jne
pop
pop
pop
mov
pop
add
ret
mov
call
test
je
push
mov
mov
call
xor
mov
mov
mov
mov
test
je
mov
mov
cmp
ja
jb
mov
mov
cmp
jae
test
mov
je
mov
mov
mov
mov
sub
sbb
mov
jne
cmp
jae
mov
mov
lea
xor
call
mov
mov
test
jne
test
jl
mov
mov
inc
cmp
je
lea
call
mov
mov
test
je
mov
mov
mov
mov
add
push
adc
mov
mov
call
test
jne
mov
test
jne
mov
test
jne
test
jl
mov
test
je
mov
mov
mov
mov
sub
cdq
add
adc
lea
mov
mov
push
lea
mov
mov
push
push
call
test
jne
jmp
cmp
jne
mov
mov
test
jne
mov
test
je
mov
test
jne
lea
call
mov
test
je
pop
pop
pop
mov
pop
add
ret
mov
test
jne
cmp
jne
mov
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
push
mov
mov
lea
mov
call
mov
call
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
push
push
test
jbe
mov
mov
cmp
jne
mov
mov
sub
je
dec
je
sub
jne
cmp
ja
mov
jmp
cmp
jb
cmp
ja
and
mov
jmp
cmp
jb
cmp
ja
shr
mov
inc
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
lea
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
xor
cmp
jne
mov
call
cmp
mov
jne
pop
pop
pop
mov
pop
add
ret
lea
push
mov
call
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
mov
shl
mov
call
test
jne
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
call
mov
mov
mov
shl
add
mov
shl
lea
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
shr
mov
mov
mov
inc
mov
mov
cmp
jne
mov
call
mov
cmp
jne
mov
lea
push
mov
mov
push
push
push
mov
mov
call
cmp
jne
mov
cmp
je
xor
cmp
jbe
mov
mov
xor
mov
call
mov
cmp
jne
mov
inc
cmp
jb
mov
mov
add
adc
mov
mov
mov
cmp
je
mov
mov
mov
sub
cdq
add
mov
mov
lea
adc
push
lea
mov
mov
push
push
call
cmp
jne
mov
lea
push
mov
mov
push
push
push
call
cmp
je
pop
pop
pop
pop
add
ret
mov
or
mov
call
mov
call
mov
call
pop
pop
pop
pop
add
ret
sub
mov
lea
push
push
mov
push
xor
push
mov
xor
mov
add
sub
mov
mov
inc
cmp
jb
mov
lea
mov
mov
mov
xor
lea
mov
add
sub
mov
mov
inc
cmp
jb
xor
mov
add
dec
jne
mov
mov
cmp
je
lea
mov
mov
mov
mov
lea
lea
mov
mov
cmp
jae
mov
xor
cmp
mov
mov
jbe
lea
mov
add
sub
mov
mov
inc
cmp
jb
mov
xor
mov
mov
add
add
dec
mov
jne
mov
mov
xor
lea
mov
add
sub
mov
mov
inc
cmp
jb
pop
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
sub
push
push
push
mov
push
cmp
jne
mov
test
jne
mov
mov
shl
lea
push
call
test
jne
pop
pop
pop
mov
pop
add
ret
mov
call
push
lea
call
test
jne
pop
pop
pop
mov
pop
add
ret
lea
lea
call
xor
mov
mov
mov
mov
mov
call
lea
or
dec
mov
jne
mov
mov
mov
test
jne
pop
pop
pop
xor
pop
add
ret
mov
test
jle
test
jbe
mov
dec
lea
mov
mov
sub
mov
dec
cmp
jb
add
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
call
mov
dec
test
jg
mov
test
jbe
mov
test
jne
mov
lea
xor
inc
mov
xor
imul
dec
xor
div
mov
lea
mov
cmp
jbe
add
xor
inc
mov
cmp
ja
push
xor
mov
xor
mov
push
push
lea
call
dec
xor
mov
lea
mov
add
mov
dec
sub
test
jne
cmp
jbe
mov
dec
mov
jne
mov
mov
test
jbe
mov
xor
xor
mov
mov
sub
add
inc
sar
mov
mov
inc
cmp
jb
mov
xor
lea
test
jbe
lea
cmp
mov
jae
lea
mov
mov
cmp
mov
jae
mov
mov
mov
mov
mov
mov
mov
mov
inc
add
cmp
jb
mov
mov
mov
mov
add
lea
cmp
jb
lea
mov
add
mov
dec
sub
test
jne
jmp
mov
dec
lea
shr
mov
mov
cmp
ja
inc
mov
mov
dec
sub
test
jne
cmp
jae
lea
push
mov
shl
add
lea
lea
call
mov
mov
lea
shl
add
mov
mov
mov
inc
mov
mov
cmp
jne
call
dec
jmp
add
cmp
mov
lea
mov
jne
lea
lea
push
call
cmp
jb
sub
mov
and
shr
or
shl
cmp
lea
mov
jge
mov
xor
lea
mov
call
lea
or
dec
mov
jne
mov
mov
add
mov
mov
jmp
add
mov
jmp
mov
lea
push
mov
shl
add
lea
lea
call
mov
cmp
jb
mov
shr
dec
xor
mov
lea
call
lea
or
mov
mov
dec
mov
jne
and
mov
mov
or
shl
add
mov
mov
cmp
jbe
mov
push
push
lea
call
test
je
mov
sub
sub
mov
jne
mov
test
ja
mov
xor
pop
pop
test
pop
pop
setne
add
ret
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
xor
pop
pop
test
pop
pop
setne
add
ret
mov
mov
xor
pop
pop
test
pop
pop
setne
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
cmp
jb
mov
mov
lea
cmp
jb
call
mov
jmp
mov
inc
mov
mov
mov
and
or
mov
mov
mov
shr
and
add
mov
pop
pop
ret
nop
nop
nop
nop
push
push
push
mov
mov
xor
mov
mov
mov
push
imul
div
xor
lea
mov
imul
div
mov
mov
sub
add
mov
mov
mov
mov
xor
test
je
test
je
test
jne
and
or
mov
mov
and
and
shl
mov
mov
shl
or
cmp
jb
mov
mov
lea
cmp
jb
call
mov
jmp
mov
inc
mov
mov
mov
and
or
mov
mov
mov
add
mov
mov
shr
and
shl
or
mov
jmp
sub
inc
mov
pop
pop
pop
pop
ret
nop
nop
nop
sub
push
push
push
mov
mov
push
mov
xor
mov
mov
lea
xor
imul
dec
mov
div
lea
xor
mov
mov
cmp
jbe
mov
add
inc
mov
xor
mov
cmp
ja
mov
xor
mov
mov
xor
imul
div
mov
lea
xor
mov
xor
imul
div
mov
sub
add
mov
mov
mov
mov
mov
xor
test
je
test
je
test
jne
and
or
mov
mov
and
and
shl
mov
mov
shl
or
cmp
jb
mov
mov
lea
cmp
jb
call
mov
jmp
mov
inc
mov
mov
mov
and
or
mov
mov
mov
add
mov
mov
shr
and
shl
or
mov
jmp
mov
mov
sub
inc
dec
xor
mov
mov
mov
lea
mov
add
mov
dec
sub
test
jne
cmp
lea
jbe
mov
dec
mov
jne
mov
xor
test
mov
jbe
xor
xor
mov
mov
sub
add
inc
sar
mov
mov
inc
cmp
jb
mov
xor
mov
lea
test
jbe
mov
lea
mov
lea
mov
cmp
jae
lea
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
add
cmp
jb
mov
mov
mov
inc
inc
add
lea
inc
cmp
mov
mov
mov
jb
mov
lea
mov
mov
add
dec
sub
test
jne
mov
pop
pop
pop
pop
add
ret
mov
dec
lea
shr
mov
mov
cmp
ja
inc
mov
mov
dec
sub
test
jne
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
push
test
push
mov
jne
mov
jmp
mov
mov
mov
mov
mov
lea
push
push
mov
call
mov
lea
push
mov
call
mov
lea
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
adc
mov
mov
call
mov
sub
mov
sbb
mov
jne
cmp
jae
test
mov
je
jmp
mov
push
mov
call
test
mov
jne
mov
test
je
mov
mov
mov
sub
cdq
add
mov
adc
mov
mov
mov
call
mov
sub
mov
sbb
mov
mov
mov
lea
mov
push
lea
push
push
call
test
mov
jne
jmp
mov
mov
call
mov
mov
test
mov
je
mov
push
call
mov
mov
push
mov
call
mov
jmp
mov
mov
call
mov
test
je
mov
push
call
mov
mov
push
mov
call
mov
jmp
mov
mov
call
mov
test
je
mov
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
add
call
mov
mov
test
je
mov
push
call
mov
mov
lea
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
mov
push
mov
push
mov
push
push
push
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
pop
pop
mov
mov
pop
mov
pop
ret
nop
nop
nop
mov
mov
push
add
call
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
xor
pop
ret
nop
mov
test
jne
mov
ret
mov
mov
mov
push
lea
call
xor
ret
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
xor
mov
mov
mov
mov
mov
push
lea
mov
call
test
jne
lea
mov
call
mov
mov
cmp
je
mov
push
call
lea
mov
mov
jmp
mov
lea
push
call
lea
call
push
lea
mov
mov
mov
call
test
jne
lea
mov
call
mov
mov
cmp
je
mov
push
call
lea
mov
mov
lea
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
lea
push
call
lea
call
lea
mov
xor
mov
rep
lea
mov
rep
lea
mov
rep
stos
lea
mov
mov
mov
rep
stos
mov
mov
mov
mov
stos
mov
cmp
jb
lea
lea
push
mov
call
test
jne
mov
mov
inc
mov
mov
mov
mov
mov
sub
and
shl
sub
mov
or
cmp
mov
jae
mov
mov
shl
add
mov
lea
mov
mov
and
shr
mov
test
mov
je
mov
shl
sub
cmp
setb
test
jne
mov
test
jne
cmp
jne
cmp
jb
lea
lea
push
mov
call
test
jne
mov
mov
inc
mov
mov
mov
mov
mov
sub
and
shl
sub
mov
or
cmp
mov
jae
mov
mov
and
add
shr
cmp
mov
mov
jne
cmp
jge
inc
mov
jmp
cmp
jne
mov
test
je
mov
lea
mov
xor
rep
stos
stos
mov
lea
mov
test
jne
xor
mov
mov
inc
add
cmp
jb
mov
lea
sub
mov
test
jne
mov
inc
lea
cmp
jb
mov
mov
test
jne
inc
cmp
jb
jmp
cmp
jae
mov
mov
mov
mov
inc
jmp
xor
or
cmp
mov
jb
lea
cmp
jne
mov
mov
mov
xor
mov
inc
mov
cmp
jae
mov
mov
inc
test
je
test
mov
jl
mov
test
jle
mov
mov
mov
dec
mov
mov
mov
inc
cmp
mov
jne
lea
call
test
jg
cmp
jae
mov
test
jne
inc
cmp
jb
mov
lea
mov
call
mov
mov
test
mov
je
mov
mov
mov
sub
mov
sbb
mov
jne
cmp
jbe
mov
mov
mov
mov
mov
sub
shr
mov
mov
sub
xor
cdq
sub
mov
sbb
add
mov
adc
mov
add
adc
lea
mov
mov
push
lea
mov
mov
push
push
call
mov
test
jne
jmp
cmp
jae
mov
mov
mov
inc
jmp
lea
call
mov
lea
mov
call
mov
mov
test
je
mov
push
call
lea
mov
lea
mov
call
mov
mov
test
je
jmp
lea
mov
call
mov
mov
test
je
mov
push
call
lea
mov
mov
jmp
lea
mov
call
mov
mov
test
je
mov
push
call
lea
mov
mov
lea
call
mov
mov
test
je
mov
push
call
mov
jmp
lea
mov
call
mov
mov
test
je
mov
push
call
lea
mov
lea
mov
call
mov
mov
test
je
mov
push
call
mov
mov
pop
pop
pop
pop
mov
add
ret
push
push
mov
push
mov
push
push
lea
mov
mov
mov
call
mov
mov
test
je
mov
push
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
mov
push
mov
push
mov
push
push
push
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
pop
pop
mov
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
mov
call
mov
mov
call
mov
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
xor
mov
mov
mov
mov
mov
push
lea
mov
call
test
jne
lea
mov
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
lea
push
call
lea
call
push
lea
call
test
jne
lea
mov
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
lea
push
call
lea
call
mov
mov
and
mov
cmp
mov
jl
cmp
jg
mov
shr
shl
mov
mov
cmp
mov
jne
cmp
je
cmp
je
cmp
jne
mov
call
lea
call
cmp
mov
jne
lea
mov
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
call
cmp
mov
jne
lea
mov
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
call
cmp
mov
jne
lea
mov
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
jmp
mov
mov
mov
xor
mov
test
setne
mov
mov
add
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
sub
cmp
jb
test
jbe
mov
mov
mov
lea
shr
rep
mov
and
rep
add
mov
jmp
xor
test
jbe
cmp
jb
lea
call
test
je
mov
mov
inc
mov
inc
cmp
mov
jb
mov
lea
lea
mov
xor
call
mov
mov
test
mov
je
mov
mov
sub
mov
sbb
mov
jne
cmp
jb
mov
mov
mov
mov
sub
mov
mov
cdq
add
adc
mov
mov
mov
lea
mov
push
lea
push
push
call
mov
test
jne
mov
mov
shl
mov
xor
shr
mov
mov
xor
mov
mov
mov
shl
or
mov
and
add
shr
mov
dec
and
cmp
mov
ja
cmp
jae
mov
test
je
cmp
jne
xor
mov
mov
mov
mov
jmp
mov
xor
cmp
jb
mov
mov
inc
mov
mov
mov
xor
mov
mov
cmp
jae
mov
mov
mov
inc
test
je
mov
mov
mov
mov
dec
cmp
jne
mov
mov
mov
mov
dec
mov
mov
mov
mov
mov
inc
cmp
mov
jne
lea
call
test
jg
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
cmp
mov
jbe
cmp
jge
xor
inc
mov
jmp
lea
mov
call
mov
mov
test
je
mov
push
call
mov
jmp
lea
call
mov
lea
mov
call
mov
mov
test
je
mov
push
call
mov
lea
call
mov
mov
test
je
mov
push
call
mov
jmp
lea
mov
call
mov
mov
test
je
mov
push
call
lea
mov
call
mov
mov
test
je
jmp
lea
mov
call
mov
mov
cmp
je
mov
push
call
lea
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
pop
mov
add
ret
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
mov
push
mov
push
mov
push
push
push
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
pop
pop
mov
mov
pop
mov
pop
ret
nop
nop
nop
cmp
jae
mov
ret
mov
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
cmp
jne
mov
mov
cmp
jne
test
jbe
mov
mov
sub
lea
sub
mov
cmp
jne
inc
lea
cmp
jb
mov
mov
cmp
jne
xor
test
jbe
mov
mov
mov
mov
cmp
jne
inc
cmp
jb
pop
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
cmp
jne
mov
xor
xor
cmp
jbe
mov
mov
mov
inc
cmp
jb
mov
xor
cmp
jbe
cmp
jae
mov
inc
mov
inc
mov
mov
cmp
jb
cmp
jae
mov
lea
sub
xor
mov
shr
rep
mov
and
rep
pop
pop
pop
add
ret
push
lea
call
mov
mov
xor
call
mov
xor
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jb
ja
cmp
jbe
mov
lea
push
lea
call
mov
mov
push
lea
call
push
lea
lea
call
xor
mov
inc
mov
jne
inc
cmp
jl
mov
add
adc
mov
cmp
jb
ja
mov
mov
cmp
jb
lea
lea
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
xor
push
push
mov
mov
test
jle
mov
mov
mov
mov
push
call
test
jne
mov
inc
cmp
jl
pop
pop
pop
xor
pop
pop
ret
mov
mov
sub
lea
sub
mov
mov
inc
lea
cmp
jl
test
je
mov
push
push
lea
mov
call
mov
inc
push
push
mov
call
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
push
call
test
jne
mov
mov
cmp
jl
lea
call
push
push
lea
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
ret
nop
nop
nop
mov
mov
mov
xor
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
lea
mov
mov
mov
mov
call
mov
mov
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
call
ret
nop
nop
nop
nop
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
lea
mov
push
mov
call
test
push
mov
jne
call
test
jne
mov
call
push
mov
call
push
mov
call
push
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
add
push
call
xor
ret
push
push
push
mov
push
mov
cmp
jae
mov
lea
sub
xor
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
test
setne
mov
push
shl
test
setne
or
push
shl
or
mov
mov
lea
push
push
call
test
jne
mov
test
jne
test
je
test
jne
xor
jmp
dec
test
jne
xor
jmp
mov
dec
shl
push
lea
or
mov
push
push
push
mov
call
test
jne
mov
test
jbe
push
lea
mov
call
test
jne
test
jbe
push
lea
mov
call
test
jne
xor
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
call
add
mov
test
mov
je
mov
call
mov
jmp
xor
test
mov
je
mov
push
call
mov
test
je
mov
push
call
mov
mov
pop
xor
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
xor
xor
push
mov
mov
mov
push
mov
push
mov
xor
mov
lea
push
mov
mov
mov
mov
mov
cmp
jne
pop
pop
pop
xor
pop
ret
mov
mov
mov
mov
and
mov
and
test
mov
jne
pop
pop
pop
xor
pop
ret
mov
mov
shr
cmp
mov
ja
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
and
shr
mov
and
and
shr
add
mov
add
mov
mov
lea
cmp
jbe
pop
pop
pop
mov
pop
ret
test
jbe
xor
mov
inc
mov
mov
inc
cmp
jb
xor
test
jbe
lea
mov
inc
mov
inc
cmp
jb
mov
xor
cmp
pop
setg
dec
pop
and
pop
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
je
test
push
jbe
push
call
mov
mov
add
test
jbe
cmp
jb
mov
push
mov
push
push
call
add
jmp
xor
mov
push
call
add
mov
mov
pop
mov
mov
mov
mov
shr
rep
mov
xor
and
rep
pop
pop
ret
nop
mov
push
push
push
mov
push
mov
push
lea
call
mov
test
jne
mov
mov
call
test
jne
mov
mov
lea
push
push
mov
push
mov
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
mov
pop
pop
add
ret
mov
lea
push
push
mov
push
call
mov
test
je
mov
mov
test
je
mov
push
call
mov
mov
mov
pop
pop
add
ret
mov
add
push
push
mov
push
call
mov
mov
mov
test
je
test
je
mov
push
call
mov
mov
mov
pop
pop
add
ret
test
je
mov
push
call
xor
mov
pop
mov
pop
add
ret
nop
nop
nop
mov
mov
push
mov
mov
push
push
mov
call
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
call
add
mov
test
mov
je
mov
call
mov
jmp
xor
test
mov
je
mov
push
call
mov
test
je
mov
push
call
mov
mov
pop
xor
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
mov
call
mov
add
mov
xor
cmp
mov
je
push
mov
push
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
cmp
jbe
push
call
mov
mov
add
test
jbe
cmp
jb
mov
push
mov
push
push
call
add
mov
push
call
add
mov
mov
mov
mov
push
mov
push
push
call
add
lea
lea
mov
pop
rep
mov
jmp
xor
mov
mov
push
mov
call
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
push
mov
mov
push
mov
mov
lea
cmp
jle
sub
mov
test
jle
push
push
lea
mov
mov
mov
test
je
mov
call
push
call
add
mov
add
dec
mov
jne
mov
pop
pop
push
push
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
call
ret
nop
nop
nop
push
mov
call
test
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
mov
mov
call
mov
mov
call
mov
pop
mov
add
ret
nop
push
push
mov
push
mov
push
push
push
call
mov
add
mov
test
mov
je
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
pop
mov
mov
add
ret
mov
xor
pop
mov
add
ret
nop
nop
mov
push
push
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
xor
push
mov
mov
call
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
mov
mov
test
je
mov
push
call
test
je
add
jmp
xor
mov
mov
mov
push
mov
call
add
add
mov
mov
mov
mov
call
mov
mov
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
mov
mov
push
mov
call
add
add
mov
mov
mov
mov
call
mov
mov
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
call
mov
add
mov
test
mov
je
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
add
ret
mov
xor
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
mov
mov
xor
repz
jne
mov
test
je
mov
lea
push
mov
mov
call
pop
xor
pop
ret
mov
xor
push
mov
mov
call
pop
xor
pop
ret
pop
mov
pop
ret
nop
push
mov
mov
dec
mov
jne
test
je
mov
call
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
mov
mov
test
je
mov
push
call
test
je
add
jmp
xor
mov
mov
mov
push
mov
call
add
add
mov
mov
mov
mov
call
mov
mov
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
sub
jmp
int3
int3
int3
sub
jmp
int3
int3
int3
sub
jmp
int3
int3
int3
sub
jmp
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
int3
int3
int3
sub
jmp
int3
int3
int3
sub
jmp
int3
int3
int3
sub
jmp
int3
int3
int3
sub
xor
push
push
mov
mov
push
mov
lea
cmp
rep
jbe
mov
call
mov
push
push
mov
mov
call
lea
push
mov
call
jmp
test
jbe
mov
mov
mov
lea
shr
rep
mov
and
rep
xor
mov
xor
mov
inc
cmp
jb
mov
call
lea
push
push
mov
mov
call
xor
mov
xor
mov
inc
cmp
jb
lea
mov
call
lea
push
push
mov
mov
call
pop
pop
pop
add
ret
nop
nop
nop
sub
lea
push
mov
push
call
lea
add
push
push
mov
call
lea
mov
push
call
mov
test
jbe
mov
push
mov
lea
shr
rep
mov
and
rep
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
push
mov
push
mov
lea
rep
mov
cmp
jbe
lea
call
mov
push
push
lea
mov
call
lea
push
lea
call
xor
xor
xor
mov
mov
mov
add
shl
or
xor
mov
shl
or
cmp
mov
jb
jmp
xor
test
jbe
push
mov
mov
mov
shr
lea
mov
and
sub
xor
mov
shl
shl
mov
or
inc
cmp
mov
jb
pop
lea
mov
mov
add
xor
dec
mov
jne
mov
call
lea
push
push
mov
mov
call
lea
mov
mov
add
xor
dec
mov
jne
lea
mov
call
lea
push
push
mov
mov
call
pop
pop
pop
add
ret
nop
nop
nop
nop
sub
lea
push
mov
push
call
lea
add
push
push
mov
call
lea
mov
push
call
mov
test
jbe
push
mov
lea
rep
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
push
mov
push
call
lea
push
lea
push
call
mov
mov
mov
mov
lea
test
rep
jbe
mov
lea
push
lea
push
push
mov
call
lea
push
lea
push
push
lea
call
lea
mov
sub
mov
mov
xor
add
dec
jne
dec
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
sub
mov
shr
and
mov
mov
mov
mov
ret
nop
nop
push
mov
test
jne
xor
pop
ret
cmp
jae
mov
pop
ret
mov
mov
shr
mov
push
lea
call
mov
pop
shl
ret
nop
nop
nop
nop
mov
test
jne
cmp
jb
cmp
ja
mov
push
mov
mov
lea
call
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
je
mov
ret
mov
mov
mov
lea
call
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
lea
call
mov
mov
test
jbe
mov
push
dec
push
push
mov
mov
mov
lea
lea
rep
mov
push
push
lea
call
xor
cmp
mov
mov
mov
mov
mov
mov
mov
jb
mov
lea
push
push
lea
call
lea
lea
push
push
call
mov
lea
lea
lea
rep
mov
push
push
lea
call
test
mov
jbe
lea
mov
sub
mov
mov
mov
add
dec
jne
mov
sub
lea
inc
test
mov
mov
ja
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
lea
call
xor
mov
call
mov
lea
push
push
lea
call
call
lea
push
push
lea
mov
call
mov
mov
lea
push
call
test
je
lea
push
push
lea
call
call
lea
push
push
lea
mov
call
mov
push
lea
call
lea
call
push
push
lea
mov
call
dec
jne
mov
dec
mov
jne
push
lea
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
call
ret
nop
nop
nop
nop
sub
push
push
push
mov
push
call
mov
xor
cmp
je
mov
call
mov
cmp
jbe
push
mov
lea
call
push
push
lea
mov
call
push
lea
call
lea
call
lea
push
push
lea
mov
mov
call
push
push
lea
call
lea
push
lea
call
xor
cmp
jbe
mov
mov
inc
inc
dec
cmp
jb
cmp
ja
pop
push
call
pop
pop
pop
add
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
xor
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
sub
mov
mov
push
push
push
mov
push
mov
mov
mov
mov
mov
lea
mov
sub
lea
mov
lea
sub
mov
mov
lea
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
and
mov
rol
add
xor
mov
add
mov
mov
lea
mov
mov
mov
mov
mov
rol
mov
mov
xor
mov
rol
and
add
mov
xor
add
mov
rol
lea
mov
mov
mov
mov
xor
and
mov
mov
xor
mov
rol
add
add
mov
rol
lea
mov
mov
mov
mov
mov
mov
xor
rol
and
add
mov
xor
add
mov
rol
lea
mov
mov
mov
mov
mov
mov
mov
xor
and
rol
xor
mov
add
add
add
mov
rol
lea
mov
add
dec
mov
mov
jne
mov
mov
xor
mov
mov
mov
and
mov
rol
xor
add
add
mov
rol
lea
mov
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
rol
rol
and
mov
xor
add
mov
add
mov
mov
lea
mov
xor
mov
xor
mov
xor
mov
rol
mov
xor
mov
rol
and
mov
rol
mov
xor
add
mov
mov
add
mov
lea
mov
xor
mov
xor
mov
rol
xor
mov
mov
mov
xor
rol
rol
and
mov
xor
add
add
mov
lea
mov
mov
mov
rol
mov
mov
xor
mov
xor
mov
xor
mov
xor
rol
rol
and
mov
xor
add
add
lea
rol
lea
mov
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
rol
rol
mov
mov
xor
mov
mov
add
mov
xor
add
mov
xor
mov
lea
mov
xor
mov
xor
mov
rol
mov
xor
mov
rol
rol
mov
xor
add
mov
add
mov
mov
rol
mov
mov
lea
mov
xor
mov
xor
mov
xor
mov
rol
xor
mov
rol
mov
xor
add
add
mov
rol
lea
mov
mov
mov
xor
mov
xor
mov
xor
mov
rol
rol
xor
mov
xor
mov
add
add
mov
mov
lea
mov
xor
mov
xor
mov
xor
mov
rol
rol
xor
mov
xor
add
rol
add
mov
add
mov
lea
mov
mov
mov
rol
dec
mov
mov
jne
lea
mov
jmp
mov
mov
mov
xor
mov
xor
mov
xor
mov
or
and
rol
and
mov
or
mov
mov
mov
add
mov
rol
add
rol
lea
mov
mov
xor
mov
xor
xor
mov
mov
or
mov
mov
and
mov
and
rol
or
mov
mov
add
mov
add
mov
xor
mov
xor
rol
mov
xor
lea
mov
rol
mov
mov
or
mov
and
mov
and
rol
or
mov
add
mov
mov
add
mov
rol
xor
mov
lea
mov
xor
mov
xor
rol
rol
mov
rol
mov
add
or
and
mov
and
or
mov
add
mov
add
lea
mov
mov
xor
mov
mov
xor
mov
xor
rol
rol
mov
mov
mov
mov
or
and
and
or
mov
add
mov
rol
add
rol
lea
mov
dec
mov
mov
mov
jne
mov
cmp
jge
mov
lea
sub
mov
mul
shr
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
rol
rol
mov
mov
xor
mov
xor
mov
add
mov
add
rol
lea
mov
mov
xor
mov
xor
xor
mov
mov
xor
mov
mov
rol
xor
mov
add
mov
mov
add
rol
rol
mov
mov
lea
mov
mov
xor
mov
xor
mov
xor
xor
mov
rol
xor
mov
add
mov
mov
add
mov
rol
rol
lea
mov
xor
mov
xor
mov
xor
mov
xor
mov
rol
xor
mov
add
mov
rol
add
mov
lea
mov
mov
xor
mov
xor
mov
xor
mov
rol
xor
add
xor
rol
add
mov
rol
add
lea
mov
mov
mov
rol
dec
mov
mov
jne
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
test
je
mov
mov
lea
rep
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
and
mov
inc
cmp
je
mov
push
sub
lea
mov
xor
rep
add
pop
mov
mov
push
push
push
push
call
mov
xor
add
push
adc
push
push
push
call
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
dec
mov
test
je
push
inc
push
mov
mov
xor
mov
and
jne
mov
shr
mov
shl
mov
mov
mov
sub
xor
mov
shr
shl
mov
lea
or
inc
inc
mov
cmp
jne
push
lea
push
push
mov
xor
call
mov
add
mov
mov
adc
mov
mov
dec
mov
jne
pop
mov
pop
pop
pop
ret
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
xor
push
mov
mov
mov
push
push
push
push
call
xor
add
adc
push
push
push
push
call
mov
mov
and
mov
shr
cmp
jne
mov
lea
mov
sub
mov
mov
shl
or
mov
inc
cmp
je
and
jne
push
lea
push
push
mov
call
mov
add
mov
mov
adc
mov
mov
inc
cmp
jne
mov
push
lea
push
mov
push
mov
mov
call
mov
mov
add
mov
mov
mov
adc
mov
mov
mov
add
mov
shr
mov
mov
inc
shr
mov
mov
inc
shr
mov
inc
mov
inc
dec
jne
mov
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
dec
test
je
push
inc
push
mov
mov
xor
mov
mov
add
mov
mov
inc
cmp
mov
jne
push
lea
push
push
mov
mov
call
mov
add
mov
mov
adc
mov
mov
dec
mov
jne
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
xor
push
mov
mov
mov
push
push
push
push
call
xor
add
adc
push
push
push
push
call
mov
inc
cmp
mov
mov
je
and
jne
push
lea
push
push
mov
call
mov
add
mov
mov
adc
mov
mov
inc
cmp
jne
mov
mov
push
lea
push
mov
push
mov
mov
call
mov
call
mov
pop
pop
pop
pop
add
ret
push
mov
cmp
jbe
mov
pop
ret
push
mov
cmp
je
test
push
jbe
push
call
mov
mov
add
test
jbe
cmp
jb
mov
push
mov
push
push
call
add
jmp
xor
mov
push
call
add
mov
mov
pop
mov
mov
mov
mov
shr
rep
mov
xor
and
rep
pop
pop
ret
nop
nop
nop
sub
lea
push
push
push
push
mov
mov
lea
and
inc
lea
lea
shr
push
lea
call
lea
lea
shr
push
mov
push
mov
push
lea
push
push
call
xor
test
jbe
mov
and
shl
mov
mov
sub
mov
shr
mov
shr
inc
cmp
mov
jb
lea
push
push
lea
call
mov
mov
lea
call
mov
push
lea
lea
call
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
push
mov
lea
xor
xor
mov
mov
mov
add
shl
or
xor
mov
add
shl
or
dec
mov
jne
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
mov
lea
and
lea
push
push
call
mov
push
call
push
mov
mov
mov
call
test
jne
push
lea
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
sub
lea
add
push
push
call
mov
push
lea
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
je
mov
ret
mov
mov
xor
mov
mov
cmp
jb
cmp
ja
mov
mov
neg
sbb
and
add
ret
xor
neg
sbb
and
add
ret
nop
nop
nop
nop
nop
sub
lea
push
push
mov
mov
and
lea
lea
push
mov
call
test
jne
test
jbe
mov
push
mov
push
lea
lea
shr
rep
mov
and
rep
pop
pop
lea
lea
mov
mov
xor
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
push
add
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
xor
mov
test
jbe
sub
mov
mov
cmp
jne
inc
inc
cmp
jb
pop
pop
mov
pop
ret
pop
pop
xor
pop
ret
sub
lea
push
push
mov
mov
mov
push
mov
call
test
jne
lea
push
push
lea
call
push
lea
lea
call
mov
xor
pop
pop
add
ret
nop
nop
nop
nop
nop
mov
mov
sub
shr
and
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
lea
mov
mov
mov
mov
ret
nop
nop
nop
push
push
mov
push
push
push
mov
test
mov
mov
mov
mov
lea
je
cmp
je
mov
mov
xor
inc
mov
inc
dec
je
cmp
jne
cmp
jb
mov
mov
shr
push
lea
call
shl
add
sub
mov
mov
test
je
mov
xor
push
mov
mov
mov
mov
mov
lea
call
xor
mov
mov
xor
inc
mov
inc
dec
je
cmp
jne
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
push
mov
lea
call
push
push
lea
call
mov
pop
pop
pop
ret
nop
push
mov
push
mov
push
mov
push
push
lea
call
push
mov
lea
call
mov
pop
pop
pop
ret
nop
mov
push
mov
mov
and
and
xor
shr
mov
xor
mov
mov
and
add
mov
imul
inc
mov
mov
and
shr
xor
pop
shr
mov
xor
mov
ret
nop
nop
nop
push
mov
push
push
mov
xor
test
mov
mov
mov
jbe
push
lea
mov
mov
push
mov
call
inc
cmp
jb
pop
lea
pop
pop
mov
pop
mov
mov
add
dec
jne
xor
ret
nop
nop
nop
nop
nop
nop
mov
or
mov
xor
imul
shr
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
lea
push
push
mov
call
mov
mov
shr
shr
mov
mov
lea
mov
mov
mov
add
dec
jne
mov
lea
push
push
push
call
mov
push
lea
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
xor
test
jbe
push
push
mov
push
mov
mov
mov
mov
call
xor
mov
mov
mov
push
call
inc
mov
cmp
jb
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
mov
push
call
test
jne
lea
mov
mov
mov
add
dec
jne
mov
lea
push
push
push
call
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
xor
test
jbe
push
push
mov
push
mov
mov
call
mov
mov
xor
mov
mov
mov
push
call
mov
inc
mov
cmp
jb
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
lea
call
mov
mov
push
push
lea
mov
call
mov
lea
call
pop
add
ret
nop
nop
nop
nop
sub
lea
push
push
mov
push
call
lea
mov
push
lea
call
lea
lea
push
mov
call
mov
lea
rep
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
and
mov
push
mov
push
mov
mov
shl
push
mov
lea
mov
rep
lea
xor
sub
mov
lea
mov
xor
inc
cmp
mov
jb
lea
call
lea
lea
push
push
mov
call
mov
push
lea
call
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
lea
call
xor
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
lea
mov
call
test
jne
mov
and
mov
je
cmp
jne
push
lea
mov
call
test
jne
push
lea
mov
call
test
jne
mov
cmp
mov
jb
cmp
ja
mov
add
cmp
jbe
mov
push
push
call
mov
mov
mov
mov
add
add
cmp
je
test
jbe
push
call
mov
mov
add
test
jbe
cmp
jb
mov
mov
push
push
push
call
add
jmp
xor
mov
push
call
mov
mov
add
mov
mov
pop
add
and
mov
mov
mov
push
mov
call
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
push
push
push
mov
mov
push
mov
cmp
jb
mov
cmp
jne
mov
cmp
jb
add
cmp
ja
and
mov
add
xor
mov
mov
shl
cmp
jne
shl
test
mov
je
test
jne
xor
mov
test
jne
lea
cmp
ja
lea
push
push
push
call
mov
lea
add
mov
test
jne
xor
mov
test
mov
jne
mov
lea
cmp
jne
mov
mov
lea
lea
push
push
push
call
test
jne
mov
lea
push
push
push
call
test
jne
mov
push
call
mov
push
push
push
call
lea
call
lea
push
push
lea
mov
call
add
lea
push
push
call
lea
lea
call
mov
mov
lea
push
push
push
call
test
jne
mov
lea
push
push
push
call
test
jne
mov
push
call
mov
mov
mov
push
push
push
call
cmp
jb
sub
mov
mov
call
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
push
mov
mov
call
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
test
je
nop
lea
push
mov
mov
mov
mov
call
test
jne
mov
test
je
add
sub
jne
xor
pop
pop
pop
ret
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
ret
int3
push
lea
push
mov
mov
call
test
jne
mov
dec
neg
sbb
and
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
test
je
nop
lea
push
mov
mov
mov
mov
call
test
jne
mov
test
je
add
sub
jne
xor
pop
pop
pop
ret
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
xor
sub
push
mov
jne
cmp
jbe
mov
mov
lea
mov
push
mov
lea
call
mov
mov
cmp
jae
mov
mov
lea
mov
pop
pop
pop
ret
int3
push
push
mov
mov
xor
sub
push
mov
mov
jne
cmp
jbe
mov
cmp
jbe
mov
mov
mov
push
lea
call
mov
mov
cmp
jae
mov
mov
pop
lea
pop
mov
pop
ret
int3
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
sub
jne
mov
pop
pop
mov
jmp
push
mov
mov
cmp
jbe
mov
push
lea
push
push
call
add
add
mov
pop
pop
xor
pop
ret
xor
mov
mov
mov
mov
jmp
mov
test
jne
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
test
jne
xor
ret
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
test
jne
xor
ret
push
push
push
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
test
je
push
push
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
call
push
call
test
je
call
test
je
lea
test
jne
mov
ret
int3
int3
push
mov
test
jne
xor
pop
ret
mov
push
mov
test
je
cmp
ja
cmp
jb
lea
push
dec
not
push
and
push
push
call
test
jne
push
push
push
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jae
xor
pop
ret
push
push
mov
sub
add
push
xor
lea
cmp
jne
movzx
movzx
shl
or
movzx
shl
or
add
add
cmp
je
lea
add
jmp
sub
sub
mov
shr
mov
shr
mov
mov
shr
mov
mov
add
cmp
jbe
pop
pop
pop
pop
ret
int3
int3
int3
push
push
mov
push
mov
cmp
jae
pop
xor
pop
pop
ret
push
push
mov
sub
add
mov
xor
mov
mov
and
cmp
jne
mov
mov
and
cmp
jne
movzx
movzx
and
shl
or
movzx
add
add
add
movzx
and
or
shl
or
add
cmp
je
lea
add
jmp
sub
sub
mov
mov
shr
mov
shr
and
or
mov
mov
shr
mov
shr
or
mov
mov
mov
add
add
cmp
jbe
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
cmp
jae
pop
xor
pop
pop
ret
push
sub
push
mov
mov
xor
mov
mov
and
cmp
jne
mov
mov
and
cmp
jne
movzx
movzx
and
movzx
shl
or
movzx
shl
or
and
shl
or
test
je
lea
add
jmp
sub
sub
mov
mov
mov
shr
and
or
mov
mov
shr
mov
mov
shr
or
mov
mov
add
cmp
jbe
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
cmp
jae
pop
xor
pop
pop
ret
push
sub
push
mov
mov
xor
mov
cmp
jne
mov
test
je
cmp
jne
mov
mov
and
cmp
jne
movzx
movzx
shl
movzx
or
movzx
shl
or
shl
or
add
add
cmp
je
add
add
jmp
sub
sub
shr
mov
shr
and
neg
and
or
and
shl
or
mov
mov
shr
mov
mov
shr
mov
shr
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
xor
and
mov
cmp
jae
xor
pop
add
ret
push
push
mov
add
lea
push
mov
mov
mov
nop
mov
lea
cmp
jae
jmp
lea
mov
and
cmp
je
inc
cmp
jb
mov
sub
mov
sub
cmp
jae
cmp
jbe
xor
mov
mov
test
je
cmp
je
and
add
or
inc
jmp
dec
shl
and
je
movzx
mov
sub
cmp
mov
je
test
je
cmp
jne
and
add
mov
or
inc
jmp
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
jmp
lea
cmp
je
lea
add
jmp
sub
sub
mov
test
je
movzx
add
add
add
mov
sub
mov
shr
mov
test
je
cmp
jne
mov
sub
mov
mov
shl
dec
xor
jmp
mov
mov
shr
and
dec
not
mov
mov
shr
mov
shr
mov
mov
mov
mov
add
jmp
pop
pop
pop
cmp
jbe
mov
xor
mov
mov
pop
add
ret
mov
dec
shl
and
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmp
jae
xor
add
ret
mov
push
push
sub
push
sub
push
mov
mov
mov
mov
nop
movzx
and
movzx
mov
xor
mov
mov
mov
mov
mov
shr
test
je
mov
mov
shr
movzx
cdq
shld
shl
mov
movzx
mov
cdq
and
add
movzx
adc
shld
cdq
shl
add
movzx
adc
shld
cdq
shl
add
movzx
adc
shld
cdq
shl
add
movzx
adc
shld
cdq
shl
add
adc
mov
mov
mov
mov
mov
call
mov
mov
shr
and
xor
mov
cmp
jne
test
jne
mov
and
or
jne
mov
shrd
mov
shr
and
shl
and
or
shr
shl
cmp
je
mov
add
add
jmp
sub
sub
mov
shr
mov
and
xor
shld
add
add
add
and
or
mov
xor
or
shld
and
shl
and
or
mov
or
call
mov
mov
mov
mov
shl
dec
cdq
and
and
or
or
mov
mov
shrd
mov
shr
mov
mov
shrd
mov
mov
shrd
shr
mov
mov
shr
mov
shr
mov
mov
mov
mov
mov
inc
add
mov
mov
cmp
jl
mov
add
add
mov
cmp
jbe
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
push
mov
push
mov
mov
mov
lea
cmp
ja
pop
pop
xor
pop
add
ret
mov
lea
mov
mov
shl
push
mov
mov
cmp
ja
cmp
ja
mov
add
lea
mov
cmp
jb
sub
mov
mov
mov
shl
mov
mov
cmp
jbe
mov
lea
sub
mov
mov
jmp
mov
mov
mov
mov
add
cmp
jb
sub
mov
mov
mov
xor
shl
or
mov
inc
or
mov
mov
mov
mov
add
mov
cmp
jb
cmp
jne
dec
je
mov
and
or
shl
or
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
shr
dec
and
mov
mov
mov
mov
mov
xor
mov
lea
mov
mov
mov
shr
cmp
je
mov
mov
lea
mov
mov
sub
dec
je
mov
and
or
shl
or
mov
cmp
jb
or
and
mov
lea
shl
or
mov
jmp
mov
and
mov
mov
mov
mov
mov
mov
inc
cmp
jb
sub
dec
je
mov
and
or
shl
or
mov
cmp
jb
or
and
mov
lea
shl
or
test
je
sub
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
add
ret
mov
add
cmp
jb
sub
mov
mov
mov
cmp
jbe
lea
mov
add
cmp
jb
sub
mov
cmp
jne
inc
cmp
jb
mov
cmp
jne
dec
je
mov
and
or
shl
or
mov
jmp
cmp
jbe
mov
nop
lea
shr
add
mov
mov
xor
nop
mov
mov
add
mov
cmp
jb
sub
mov
cmp
jb
dec
cmp
jbe
mov
add
cmp
jb
sub
cmp
jb
dec
cmp
ja
jmp
mov
mov
mov
mov
cmp
jae
inc
cmp
jb
mov
test
jne
mov
mov
sub
add
mov
mov
mov
jmp
cmp
jne
mov
sub
mov
mov
cmp
ja
dec
je
mov
and
or
shl
or
mov
cmp
jb
and
or
shl
or
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
cmp
jae
mov
add
lea
mov
mov
mov
mov
inc
mov
cmp
jb
mov
mov
mov
mov
sub
push
mov
push
push
push
mov
push
push
mov
call
mov
mov
mov
mov
sub
add
sub
add
push
push
push
push
mov
push
push
mov
call
or
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
push
push
lea
xor
mov
mov
rep
lea
mov
mov
test
je
lea
movzx
movzx
shl
or
inc
lea
inc
cmp
jb
movzx
movzx
shl
or
inc
lea
xor
xor
nop
mov
test
je
add
mov
sub
mov
inc
cmp
jb
mov
xor
test
je
movzx
movzx
shl
or
mov
mov
inc
cmp
jb
movzx
movzx
shl
or
mov
mov
xor
test
je
jmp
lea
movzx
movzx
shl
or
mov
mov
movzx
movzx
shl
or
inc
lea
inc
cmp
jb
movzx
movzx
shl
or
mov
mov
movzx
movzx
shl
or
inc
lea
xor
lea
mov
mov
mov
sub
je
dec
je
mov
and
or
shl
or
mov
cmp
jb
or
and
mov
lea
shl
or
mov
mov
sub
je
dec
je
mov
and
or
shl
or
mov
cmp
jb
or
and
mov
lea
shl
or
mov
mov
sub
je
dec
je
mov
and
or
shl
or
mov
cmp
jb
or
and
mov
lea
shl
or
mov
mov
sub
je
dec
je
mov
and
or
shl
or
mov
cmp
jb
or
and
mov
lea
shl
or
mov
add
dec
jne
xor
test
je
inc
mov
shr
test
jne
mov
sub
mov
cmp
jle
mov
mov
lea
xor
xor
mov
mov
cmp
jbe
mov
lea
mov
shr
mov
shr
not
and
and
test
je
mov
shr
and
add
mov
and
mov
mov
and
inc
mov
test
jne
cmp
je
mov
xor
mov
cmp
jb
xor
test
je
mov
mov
mov
lea
mov
mov
inc
add
mov
cmp
jb
mov
jmp
mov
mov
push
push
push
push
push
push
call
test
je
lea
mov
jmp
mov
sub
and
lea
cmp
jbe
and
lea
lea
mov
and
shl
or
mov
cmp
jbe
and
or
shl
or
mov
mov
mov
add
cmp
jb
cmp
mov
je
shl
jmp
xor
cmp
jbe
mov
mov
shr
and
test
je
mov
mov
shr
and
add
and
mov
and
mov
lea
cmp
jb
mov
mov
pop
pop
pop
pop
add
ret
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
push
mov
pushf
pop
mov
xor
push
popf
pushf
pop
xor
push
popf
and
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
push
mov
mov
xor
xor
xor
mov
cpuid
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
test
je
mov
call
test
je
lea
push
lea
push
lea
push
mov
xor
call
lea
push
lea
push
lea
push
lea
mov
call
mov
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
xor
mov
xor
nop
cmp
jne
mov
cmp
jne
mov
cmp
je
add
inc
add
cmp
jb
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
call
test
je
mov
call
test
je
lea
push
lea
push
lea
push
lea
xor
call
lea
push
lea
push
lea
push
lea
mov
call
mov
push
mov
shr
and
push
shr
lea
and
mov
call
sub
je
dec
je
dec
jne
cmp
jb
jne
cmp
jae
pop
mov
pop
add
ret
mov
add
ret
cmp
jb
jne
cmp
jb
cmp
jmp
cmp
jb
jne
cmp
je
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
lea
push
mov
call
test
je
cmp
sbb
inc
jne
xor
add
ret
lea
call
test
je
mov
shr
and
add
ret
int3
int3
int3
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
xor
mov
test
je
push
lea
push
push
call
add
mov
xor
test
je
mov
push
jmp
lea
xor
test
je
cmp
jae
mov
mov
sub
mov
mov
inc
inc
cmp
jb
cmp
jb
mov
pop
cmp
jne
xor
mov
sub
je
push
lea
push
push
call
add
test
je
push
lea
sub
lea
push
push
call
add
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
xor
mov
test
je
push
lea
push
push
call
add
push
mov
xor
test
je
mov
jmp
lea
xor
test
je
cmp
jae
movzx
movzx
add
mov
mov
inc
inc
cmp
jb
cmp
jb
mov
pop
cmp
jne
xor
mov
sub
je
push
lea
push
push
call
add
test
je
push
lea
sub
lea
push
push
call
add
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
xor
xor
mov
lea
mov
rep
test
je
nop
mov
cmp
jb
mov
inc
lea
inc
cmp
jb
mov
jmp
lea
mov
mov
mov
inc
add
cmp
jb
xor
mov
test
je
mov
test
jne
mov
mov
jmp
mov
cmp
jb
mov
mov
lea
shl
or
mov
inc
mov
mov
inc
cmp
jb
mov
mov
sub
lea
call
cmp
jae
mov
cmp
jne
mov
and
jne
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
add
ret
xor
xor
xor
mov
mov
jmp
mov
mov
mov
cmp
je
cmp
je
mov
mov
and
and
cmp
ja
mov
inc
mov
jmp
mov
inc
mov
mov
mov
mov
shl
and
or
and
mov
cmp
je
mov
cmp
je
mov
mov
and
and
cmp
ja
mov
inc
mov
jmp
mov
mov
inc
mov
mov
mov
and
or
mov
mov
mov
and
add
and
or
mov
inc
mov
sub
cmp
ja
and
mov
xor
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
dec
mov
shr
mov
shr
inc
mov
and
shl
or
mov
cmp
jb
lea
cmp
jne
dec
cmp
je
dec
add
lea
test
jne
xor
mov
test
mov
je
lea
mov
test
je
jmp
lea
mov
and
inc
dec
mov
jne
dec
jne
xor
mov
lea
mov
add
lea
mov
add
cmp
jbe
mov
xor
test
je
movzx
mov
mov
movzx
inc
lea
inc
cmp
jb
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
add
add
cmp
je
mov
mov
pop
ret
mov
test
je
cmp
je
mov
mov
call
mov
mov
mov
mov
mov
call
mov
xor
cmp
pop
setne
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
sub
sub
ret
int3
int3
int3
int3
int3
int3
push
cmp
jne
cmp
jne
cmp
je
mov
mov
or
sub
cmp
jbe
mov
sub
lea
mov
jne
mov
pop
ret
mov
sub
mov
add
sub
add
mov
je
lea
mov
lea
push
mov
call
mov
test
jne
mov
test
je
add
mov
sub
cmp
ja
mov
sub
mov
add
sub
add
mov
jne
pop
ret
int3
int3
push
mov
mov
mov
sub
mov
add
push
sub
mov
push
push
call
mov
add
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
cmp
je
xor
ret
mov
add
sub
cmp
sbb
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
mov
sub
cmp
jb
push
mov
call
pop
ret
int3
int3
int3
int3
int3
push
mov
cmp
jne
mov
mov
mov
sub
add
cmp
sbb
inc
je
mov
push
mov
sub
sub
add
push
push
push
call
mov
add
add
pop
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
push
mov
mov
mov
mov
mov
mov
mov
lea
mov
and
dec
not
and
mov
shr
xor
mov
and
dec
not
and
shr
xor
mov
and
dec
shr
not
and
xor
mov
and
dec
not
and
shr
xor
mov
and
dec
shr
not
and
xor
mov
and
dec
not
and
shr
xor
mov
and
dec
shr
not
and
xor
mov
and
dec
not
and
shr
xor
mov
inc
add
cmp
jb
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
call
cmp
mov
jne
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
cmp
jbe
mov
mov
mov
mov
call
xor
mov
cmp
jne
mov
mov
mov
call
mov
pop
pop
xor
pop
ret
mov
shr
cmp
jbe
mov
shr
mov
lea
push
mov
mov
mov
add
add
lea
shr
lea
mov
mov
push
call
test
je
mov
mov
xor
lea
mov
mov
cmp
jne
mov
jmp
lea
mov
shr
or
mov
shr
or
mov
shr
or
mov
or
shr
or
shr
cmp
jbe
cmp
jne
mov
jmp
shr
mov
inc
cmp
jbe
mov
cmp
jbe
add
cmp
jbe
add
mov
add
add
mov
mov
mov
mov
cmp
je
add
mov
lea
mov
cmp
je
cmp
je
mov
mov
call
lea
mov
shr
mov
cmp
je
xor
jmp
mov
mov
call
mov
cmp
je
mov
lea
mov
pop
pop
pop
mov
pop
ret
xor
mov
mov
mov
call
mov
cmp
jne
mov
mov
mov
call
mov
pop
pop
pop
xor
pop
ret
int3
int3
push
push
mov
xor
cmp
jbe
jmp
lea
mov
mov
inc
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
or
sub
cmp
jae
mov
mov
sub
push
mov
mov
cmp
ja
test
je
mov
jmp
sub
pop
cmp
jae
mov
mov
mov
cmp
jbe
mov
add
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
test
je
push
lea
mov
cmp
ja
xor
jmp
sub
mov
inc
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
push
mov
dec
and
add
mov
je
mov
mov
cmp
ja
xor
jmp
sub
mov
inc
cmp
jb
sub
sub
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
push
jne
call
cmp
jne
mov
sub
cmp
jne
mov
call
mov
cmp
jne
mov
mov
sub
or
sub
cmp
jae
mov
mov
sub
push
mov
mov
cmp
ja
test
je
mov
jmp
sub
pop
cmp
jae
mov
mov
cmp
jbe
mov
add
mov
pop
mov
pop
ret
int3
int3
mov
mov
push
mov
mov
push
mov
mov
mov
push
mov
sub
cmp
push
mov
je
jmp
mov
mov
dec
cmp
jae
mov
sub
cmp
sbb
and
sub
add
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
sub
lea
mov
jmp
jmp
lea
mov
mov
cmp
jne
inc
inc
cmp
jne
mov
cmp
jae
dec
mov
mov
add
mov
mov
cmp
je
jmp
mov
mov
sub
cmp
jne
mov
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
mov
mov
push
push
lea
lea
push
mov
mov
xor
mov
sub
mov
mov
mov
cmp
je
mov
jmp
mov
dec
cmp
jae
cmp
sbb
and
sub
add
mov
lea
mov
mov
sub
mov
cmp
jb
mov
mov
cmp
jne
inc
cmp
je
mov
cmp
jne
inc
cmp
je
mov
lea
sub
nop
mov
cmp
jne
inc
inc
cmp
jne
mov
mov
cmp
jae
mov
dec
mov
mov
add
mov
mov
cmp
je
mov
cmp
jae
mov
lea
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jne
mov
mov
pop
pop
mov
pop
mov
pop
add
ret
mov
mov
pop
mov
mov
mov
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
sub
mov
push
push
push
mov
lea
lea
push
mov
mov
xor
xor
sub
mov
mov
mov
mov
cmp
je
jmp
lea
dec
cmp
jae
cmp
sbb
and
sub
add
mov
lea
mov
sub
mov
cmp
jb
mov
mov
mov
cmp
jne
inc
cmp
je
mov
mov
lea
sub
jmp
lea
mov
cmp
jne
inc
inc
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
cmp
je
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
je
mov
jmp
mov
mov
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
cmp
jae
inc
mov
inc
inc
cmp
jne
mov
call
pop
xor
pop
ret
mov
movzx
movzx
shl
or
mov
push
mov
lea
mov
push
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
inc
inc
inc
mov
mov
sub
sar
cmp
jne
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
cmp
jae
mov
add
add
add
mov
cmp
jne
mov
call
pop
xor
pop
ret
mov
movzx
push
movzx
movzx
shl
or
xor
mov
mov
and
lea
mov
push
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
add
add
add
mov
sub
sar
cmp
jne
mov
call
mov
pop
pop
pop
ret
sub
push
mov
mov
mov
mov
cmp
jae
mov
add
add
add
mov
cmp
jne
mov
call
xor
pop
add
ret
mov
push
mov
movzx
movzx
xor
movzx
shl
push
xor
and
push
mov
mov
mov
and
sub
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jae
mov
sub
mov
mov
cmp
jne
mov
cmp
je
jmp
mov
mov
cmp
jne
inc
cmp
jne
mov
dec
mov
mov
mov
cmp
jne
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
push
call
mov
add
add
add
mov
cmp
jne
mov
call
pop
mov
pop
pop
pop
add
ret
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
mov
add
add
add
mov
sub
sar
cmp
jne
mov
call
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
mov
cmp
jae
mov
add
add
add
mov
cmp
jne
mov
call
xor
pop
add
ret
push
mov
movzx
movzx
xor
movzx
push
movzx
push
mov
add
add
add
xor
mov
shl
xor
and
shl
xor
mov
mov
and
sub
and
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jae
mov
sub
mov
cmp
jne
mov
mov
lea
mov
mov
mov
jmp
mov
mov
cmp
je
cmp
jae
mov
sub
mov
cmp
jne
mov
lea
mov
mov
add
mov
test
je
cmp
je
mov
sub
add
mov
cmp
mov
jne
inc
inc
cmp
jne
mov
mov
cmp
jne
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
mov
add
add
add
mov
cmp
jne
mov
call
pop
mov
pop
pop
pop
add
ret
cmp
jae
mov
push
mov
lea
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
mov
sub
mov
add
add
add
mov
sar
cmp
jne
mov
call
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
mov
cmp
jae
mov
add
add
add
mov
cmp
jne
mov
call
xor
pop
add
ret
push
push
push
mov
movzx
movzx
xor
movzx
movzx
mov
add
add
add
xor
mov
shl
shl
xor
and
xor
mov
mov
and
sub
and
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jae
mov
sub
mov
cmp
jne
mov
mov
lea
mov
mov
mov
jmp
mov
mov
cmp
je
cmp
jae
mov
sub
mov
cmp
jne
mov
lea
mov
mov
add
test
je
cmp
je
mov
sub
add
mov
cmp
jne
inc
inc
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
add
add
add
mov
cmp
jne
mov
call
pop
mov
pop
pop
pop
add
ret
cmp
jae
mov
mov
lea
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
add
add
add
mov
sub
sar
cmp
jne
mov
call
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
cmp
jae
mov
add
add
add
mov
cmp
jne
mov
call
pop
xor
pop
ret
mov
movzx
push
movzx
movzx
shl
or
xor
mov
mov
and
lea
mov
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
mov
call
mov
mov
add
add
add
mov
sub
sar
cmp
jne
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
mov
mov
lea
mov
cmp
jb
mov
movzx
movzx
mov
shl
or
mov
lea
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
add
mov
add
add
cmp
jne
mov
call
sub
jne
pop
pop
pop
pop
ret
push
push
push
push
mov
mov
mov
lea
mov
cmp
jb
mov
movzx
movzx
movzx
shl
or
xor
mov
mov
and
lea
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
add
mov
add
add
cmp
jne
mov
call
sub
jne
pop
pop
pop
pop
ret
int3
int3
int3
push
push
push
push
push
mov
mov
mov
mov
cmp
jb
mov
movzx
movzx
movzx
xor
mov
mov
shl
xor
and
and
lea
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
mov
add
add
cmp
jne
mov
call
sub
jne
pop
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
push
push
mov
mov
mov
mov
mov
cmp
jb
mov
movzx
movzx
xor
movzx
movzx
mov
lea
xor
mov
shl
xor
and
mov
mov
shl
xor
and
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
mov
add
mov
add
add
cmp
jne
mov
call
sub
jne
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
mov
cmp
jb
mov
movzx
movzx
movzx
movzx
xor
mov
lea
xor
mov
mov
shl
xor
and
mov
lea
mov
mov
mov
shl
xor
and
mov
mov
mov
and
mov
mov
mov
mov
mov
add
mov
add
add
cmp
jne
mov
call
sub
jne
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
lea
cmp
jb
mov
movzx
movzx
movzx
shl
or
xor
mov
and
mov
lea
mov
mov
mov
mov
mov
add
mov
add
add
cmp
jne
mov
call
sub
jne
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
cmp
jne
mov
mov
ret
mov
cmp
jne
mov
mov
ret
cmp
jne
mov
mov
ret
mov
mov
ret
int3
int3
int3
int3
int3
int3
push
push
mov
xor
cmp
je
lea
mov
mov
mov
mov
call
lea
call
lea
call
mov
call
jmp
lea
push
call
inc
lea
mov
call
mov
call
lea
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
push
mov
je
cmp
jne
cmp
mov
je
lea
push
call
mov
push
lea
call
mov
call
cmp
je
mov
inc
call
lea
call
cmp
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
push
je
call
cmp
mov
je
lea
call
mov
call
lea
call
cmp
je
lea
push
call
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
ret
int3
int3
int3
int3
cmp
jne
lea
call
test
je
mov
ret
lea
mov
call
test
jne
lea
call
test
jne
lea
call
test
jne
push
lea
mov
call
test
jne
push
lea
xor
call
test
jne
mov
mov
push
lea
mov
call
test
jne
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
push
mov
push
mov
sub
jmp
lea
nop
movzx
movzx
shl
or
mov
sub
add
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
push
mov
push
push
mov
push
mov
inc
jmp
lea
movzx
movzx
shl
xor
movzx
xor
and
mov
sub
inc
mov
mov
add
inc
dec
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
push
mov
push
push
mov
push
mov
add
lea
movzx
movzx
add
add
add
xor
movzx
shl
xor
movzx
xor
and
mov
sub
inc
mov
mov
add
inc
dec
jne
pop
pop
pop
pop
ret
cmp
je
push
mov
push
push
mov
push
mov
add
lea
movzx
movzx
shl
xor
movzx
shl
xor
movzx
xor
and
mov
sub
inc
mov
mov
add
inc
dec
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
sub
push
push
push
push
mov
lea
mov
mov
call
lea
call
mov
cmp
jne
cmp
jne
mov
mov
call
test
je
lea
push
call
lea
push
call
mov
call
mov
mov
call
mov
call
mov
mov
mov
sub
add
sub
add
push
call
push
call
jmp
mov
call
mov
call
mov
cmp
jbe
sub
mov
lea
mov
call
mov
mov
mov
inc
lea
push
mov
call
mov
mov
sub
mov
and
shl
add
inc
mov
mov
mov
mov
cmp
jb
mov
sub
add
cmp
jbe
mov
mov
lea
push
mov
push
lea
push
mov
push
lea
mov
mov
push
mov
call
add
add
add
lea
call
jmp
mov
mov
lea
call
jmp
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
sub
push
mov
xor
add
lea
mov
mov
mov
mov
cmp
jbe
jmp
lea
xor
mov
mov
cmp
jne
cmp
je
lea
mov
mov
mov
mov
call
lea
call
lea
call
mov
call
jmp
lea
push
call
inc
lea
mov
call
mov
call
lea
push
call
mov
mov
mov
dec
and
shl
mov
mov
mov
add
inc
mov
mov
mov
inc
mov
add
mov
mov
mov
mov
cmp
jae
test
je
or
jmp
lea
mov
mov
add
inc
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
mov
sub
mov
mov
mov
mov
mov
cmp
jb
mov
mov
sub
inc
cmp
jae
mov
mov
mov
sub
cmp
jae
mov
cmp
jae
jmp
mov
mov
dec
mov
test
je
mov
mov
inc
mov
sub
mov
mov
dec
push
mov
lea
lea
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
sub
sar
lea
add
mov
add
mov
add
mov
add
cmp
jb
mov
mov
sub
add
sub
add
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jb
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
push
mov
jne
lea
push
call
mov
mov
and
shl
add
mov
call
mov
cmp
jbe
mov
mov
sub
add
mov
push
mov
call
sub
cmp
jne
lea
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
push
lea
mov
call
lea
call
mov
mov
mov
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
xor
ret
int3
int3
sub
xor
inc
cmp
jl
push
push
mov
push
jmp
lea
mov
xor
call
lea
call
cmp
jne
cmp
jne
mov
call
mov
mov
call
lea
inc
call
jmp
lea
mov
call
lea
call
jmp
pop
pop
xor
pop
add
ret
mov
push
push
mov
mov
push
lea
mov
mov
cmp
jb
pop
pop
mov
pop
ret
cmp
push
mov
jne
mov
mov
mov
call
mov
test
je
add
mov
mov
mov
mov
push
add
push
push
add
push
mov
mov
call
test
jne
pop
pop
pop
mov
pop
ret
push
lea
push
mov
call
mov
test
jne
push
lea
push
lea
call
mov
test
je
mov
call
pop
mov
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
xor
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
inc
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
call
mov
mov
dec
and
shl
mov
mov
mov
add
inc
mov
mov
mov
mov
mov
inc
mov
cmp
jb
mov
sub
push
mov
dec
call
mov
inc
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
movzx
movzx
mov
xor
and
mov
mov
cmp
jb
mov
sub
mov
cmp
mov
jne
sub
dec
pop
mov
mov
pop
pop
add
pop
ret
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
mov
mov
push
mov
movzx
movzx
xor
movzx
shl
xor
mov
and
mov
and
mov
mov
mov
mov
cmp
jb
mov
sub
mov
cmp
jne
mov
sub
dec
mov
mov
mov
mov
cmp
jne
pop
pop
pop
mov
add
pop
pop
ret
mov
add
jmp
mov
cmp
jb
mov
sub
mov
cmp
jne
sub
dec
mov
mov
add
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
lea
mov
dec
add
lea
mov
test
je
lea
shr
inc
push
mov
mov
mov
mov
add
add
dec
jne
pop
inc
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
mov
push
lea
mov
add
lea
mov
test
jne
mov
lea
mov
cmp
jb
mov
sub
mov
push
mov
call
inc
mov
sub
sar
inc
pop
pop
pop
mov
pop
ret
mov
dec
sub
mov
push
mov
call
mov
mov
mov
mov
add
add
sub
jne
sub
sar
mov
inc
inc
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
mov
mov
mov
jmp
lea
nop
mov
cmp
jne
xor
cmp
je
lea
mov
mov
mov
mov
call
lea
call
lea
call
mov
call
jmp
lea
push
call
add
lea
mov
call
mov
call
lea
push
call
mov
mov
mov
sub
and
shl
mov
mov
mov
add
inc
mov
mov
mov
mov
mov
inc
mov
cmp
jb
mov
sub
push
mov
sub
call
mov
add
mov
mov
dec
add
add
sub
mov
mov
lea
mov
jne
pop
pop
pop
pop
pop
ret
push
push
push
mov
push
push
mov
mov
mov
jmp
lea
nop
mov
cmp
jne
xor
cmp
je
lea
mov
mov
mov
mov
call
lea
call
lea
call
mov
call
jmp
lea
push
call
add
lea
mov
call
mov
call
lea
push
call
mov
mov
mov
sub
and
shl
mov
mov
mov
add
inc
mov
mov
mov
mov
mov
inc
mov
cmp
jb
mov
sub
push
mov
sub
call
mov
add
mov
mov
lea
mov
cmp
jb
mov
movzx
movzx
mov
xor
mov
mov
and
mov
mov
add
add
sub
mov
mov
lea
mov
jne
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
xor
push
mov
mov
lea
mov
cmp
jne
cmp
je
lea
mov
mov
mov
mov
call
lea
call
lea
call
mov
call
jmp
lea
push
call
add
lea
mov
call
mov
call
lea
push
call
mov
mov
mov
sub
and
shl
mov
mov
mov
add
inc
mov
mov
mov
mov
mov
inc
mov
cmp
jb
mov
sub
push
mov
sub
call
mov
add
mov
mov
lea
mov
cmp
jb
mov
movzx
movzx
movzx
mov
xor
mov
shl
mov
xor
mov
and
and
mov
mov
xor
mov
add
add
sub
mov
mov
lea
mov
jne
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
push
mov
mov
sub
je
dec
je
cmp
mov
jne
mov
mov
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmp
ja
jne
or
jmp
movzx
mov
shr
and
add
or
shl
mov
mov
mov
shr
mov
mov
shr
shr
push
mov
mov
push
lea
mov
mov
call
pop
add
ret
mov
pop
add
ret
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
ja
jmp
mov
test
jne
mov
ret
js
and
cmp
jbe
mov
ret
mov
mov
ret
movzx
and
shl
mov
mov
ret
movzx
shl
or
mov
ret
movzx
or
inc
mov
mov
and
movzx
neg
sbb
and
add
ret
movzx
shl
mov
mov
ret
mov
movzx
or
and
inc
mov
cmp
jb
mov
ret
mov
neg
sbb
and
add
ret
cmp
jae
movzx
cdq
push
mov
idiv
push
mov
movzx
mov
cdq
idiv
mov
lea
cmp
jle
lea
pop
pop
ret
pop
mov
mov
mov
mov
pop
ret
nop
inc
inc
add
les
dec
les
les
jne
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
push
push
mov
mov
mov
mov
cmp
push
mov
mov
jne
mov
mov
xor
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
cmp
je
cmp
jne
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
inc
mov
mov
mov
call
inc
mov
mov
jmp
mov
mov
mov
sub
sub
mov
mov
cmp
ja
mov
mov
mov
test
js
cmp
je
cmp
jne
xor
cmp
sete
test
je
mov
mov
mov
jmp
cmp
jne
push
mov
mov
call
mov
cmp
jbe
mov
mov
test
je
mov
push
mov
mov
add
push
push
call
add
add
cmp
jne
mov
mov
sub
cmp
ja
mov
mov
add
add
add
sub
mov
neg
sbb
and
mov
jmp
cmp
jne
movzx
shr
and
xor
cmp
sete
xor
test
setg
mov
test
jne
cmp
jne
test
jne
cmp
jne
push
mov
call
xor
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
push
mov
push
lea
push
push
lea
mov
call
mov
add
mov
sub
add
mov
sub
sub
mov
test
jne
mov
mov
cmp
je
test
jne
test
jne
cmp
jne
test
jne
test
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
jmp
pop
pop
pop
mov
pop
add
ret
mov
pop
pop
pop
mov
xor
pop
add
ret
mov
pop
pop
pop
mov
xor
pop
add
ret
mov
pop
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jne
mov
mov
mov
sub
mov
cmp
jbe
mov
mov
jmp
add
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
xor
mov
mov
add
add
sub
mov
mov
mov
mov
sub
push
add
push
push
call
mov
mov
add
add
sub
add
mov
mov
test
jne
test
je
test
je
mov
jmp
lea
mov
mov
mov
mov
mov
cmp
je
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
inc
mov
mov
call
inc
mov
jmp
sub
mov
sub
xor
mov
cmp
ja
mov
mov
mov
test
js
mov
cmp
je
cmp
jne
xor
cmp
sete
test
je
mov
mov
mov
jmp
cmp
jne
push
mov
mov
call
mov
cmp
jbe
mov
mov
test
je
mov
mov
add
push
push
push
mov
call
add
add
cmp
jne
mov
mov
sub
cmp
ja
mov
mov
add
add
sub
add
mov
neg
sbb
and
mov
jmp
cmp
jne
movzx
shr
and
xor
cmp
sete
xor
test
setg
mov
test
jne
cmp
jne
test
jne
cmp
jne
push
mov
call
xor
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
push
push
lea
push
push
lea
mov
call
mov
mov
sub
add
add
mov
sub
sub
mov
xor
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
pop
pop
mov
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
xor
cmp
push
mov
setne
mov
mov
mov
add
cmp
jae
pop
mov
pop
add
ret
mov
sub
mov
call
mov
lea
push
push
lea
push
mov
add
push
call
mov
test
je
push
test
jne
mov
lea
cmp
jae
cmp
ja
mov
or
lea
jne
mov
jmp
cmp
jne
xor
test
jne
mov
call
pop
pop
xor
pop
add
ret
mov
mov
cmp
jb
mov
mov
sub
lea
cmp
jb
mov
or
mov
je
mov
mov
lea
shr
mov
lea
mov
mov
push
add
call
sub
push
lea
push
call
sub
mov
add
add
add
adc
test
je
mov
add
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
cmp
ja
mov
call
pop
pop
xor
pop
add
ret
pop
pop
mov
pop
add
ret
xor
cmp
je
cmp
setne
inc
or
mov
shr
shl
and
or
mov
mov
shr
mov
mov
lea
mov
shr
mov
mov
xor
mov
cmp
je
mov
mov
mov
mov
add
add
mov
mov
adc
cmp
je
mov
push
mov
call
cmp
je
pop
pop
mov
pop
add
ret
mov
mov
xor
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
call
or
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
mov
lea
rep
lea
call
mov
mov
mov
cmp
jle
mov
test
jg
test
jg
mov
mov
imul
mov
mov
mov
mov
call
cmp
jne
mov
xor
mov
mov
shld
add
add
test
ja
jb
cmp
jae
mov
jmp
test
jg
mov
cdq
idiv
mov
test
jne
lea
mov
cmp
jle
mov
jmp
test
jg
mov
cdq
idiv
mov
test
jne
lea
jmp
test
jne
cmp
jbe
mov
xor
cmp
ja
jb
cmp
jae
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
xor
push
mov
mov
mov
cmp
jne
mov
mov
mov
call
mov
cmp
jne
pop
pop
lea
pop
add
ret
mov
lea
mov
call
cmp
jne
lea
push
mov
lea
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
cmp
jne
mov
mov
push
push
lea
push
push
mov
call
mov
cmp
jne
jmp
lea
nop
mov
add
mov
mov
adc
mov
test
je
mov
push
mov
push
push
mov
mov
push
call
test
jne
xor
test
je
mov
mov
push
lea
push
push
mov
call
mov
test
je
jmp
mov
xor
mov
call
cmp
jne
mov
mov
push
lea
mov
call
cmp
mov
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
mov
xor
mov
shl
push
lea
mov
mov
cmp
je
mov
lea
mov
call
test
jne
lea
push
mov
lea
call
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
test
jne
mov
mov
mov
push
push
mov
push
push
mov
call
test
jne
cmp
ja
jb
mov
cmp
jae
mov
mov
add
sub
push
lea
push
push
mov
call
mov
test
jne
mov
add
mov
test
je
mov
mov
push
push
mov
push
push
lea
call
test
jne
cmp
jb
ja
mov
cmp
jb
jmp
mov
jmp
mov
mov
call
test
jne
cmp
je
mov
cmp
jne
pop
pop
pop
mov
pop
add
ret
mov
mov
inc
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
push
push
mov
mov
mov
push
mov
call
mov
test
jne
pop
pop
pop
ret
push
lea
call
or
lea
mov
mov
mov
call
mov
mov
mov
lea
mov
pop
mov
add
dec
jne
lea
call
mov
pop
pop
pop
ret
int3
int3
push
push
mov
push
lea
mov
lea
mov
test
je
mov
mov
push
call
mov
add
dec
jne
lea
call
mov
mov
mov
call
mov
mov
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
mov
mov
mov
lea
rep
lea
call
mov
add
cmp
jle
pop
pop
pop
mov
pop
add
ret
mov
mov
lea
rep
lea
call
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
add
call
mov
xor
push
lea
mov
mov
and
shr
add
or
shl
cmp
jbe
inc
cmp
jb
pop
ret
int3
int3
int3
sub
push
push
push
mov
xor
push
mov
cmp
jle
lea
cmp
jne
mov
call
mov
test
je
inc
add
cmp
jl
mov
mov
mov
cmp
jg
push
push
push
push
lea
call
pop
pop
pop
pop
add
ret
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
lea
mov
mov
lea
shr
mov
lea
mov
mov
mov
mov
mov
call
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
shl
mov
mov
shl
mov
dec
push
mov
dec
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
and
mov
shl
add
lea
mov
movzx
cmp
jae
mov
movzx
shl
shl
or
inc
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmp
mov
lea
mov
jne
cmp
je
mov
test
jne
mov
mov
movzx
mov
mov
sub
shr
mov
and
mov
mov
mov
shl
add
imul
add
mov
cmp
jae
mov
cmp
jb
mov
sub
mov
mov
lea
movzx
cmp
jae
mov
movzx
shl
shl
or
inc
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jb
jmp
mov
mov
cmp
sbb
and
mov
sub
mov
add
cmp
movzx
sbb
and
add
sub
mov
mov
jmp
lea
mov
mov
add
mov
mov
and
lea
add
lea
mov
movzx
cmp
jae
mov
movzx
shl
shl
or
inc
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
add
not
jmp
sub
sub
mov
shr
sub
mov
mov
lea
and
cmp
jb
mov
mov
mov
mov
inc
inc
mov
jmp
sub
sub
mov
shr
sub
mov
movzx
mov
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jne
cmp
je
movzx
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
lea
shl
add
mov
lea
movzx
mov
cmp
jae
shl
mov
mov
movzx
shl
or
inc
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
mov
mov
mov
cmp
sbb
and
inc
sub
add
mov
inc
mov
cmp
sbb
and
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
jmp
sub
sub
mov
shr
sub
mov
movzx
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
movzx
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sbb
and
add
lea
movzx
mov
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
add
mov
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
movzx
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
add
mov
lea
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
mov
mov
movzx
cmp
jae
mov
movzx
shl
shl
or
inc
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
mov
cmp
jb
mov
sub
add
mov
cmp
jb
mov
cmp
jb
mov
mov
mov
shl
lea
movzx
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
lea
movzx
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
jmp
sub
sub
mov
shr
sub
mov
inc
add
movzx
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
jmp
sub
sub
mov
shr
sub
mov
inc
add
movzx
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
jmp
sub
sub
mov
shr
sub
mov
inc
add
movzx
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
jmp
sub
sub
mov
shr
sub
mov
inc
add
movzx
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
jmp
sub
sub
mov
shr
sub
mov
inc
sub
cmp
jb
mov
mov
shr
and
dec
or
mov
cmp
jae
shl
mov
mov
mov
sub
mov
lea
movzx
cmp
jae
mov
movzx
shl
shl
or
inc
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
or
mov
lea
shl
dec
jne
jmp
mov
sub
cmp
jae
movzx
shl
shl
or
inc
shr
sub
mov
shr
neg
lea
and
add
dec
jne
mov
movzx
shl
mov
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
or
lea
movzx
cmp
jae
mov
movzx
shl
shl
or
inc
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
jmp
sub
sub
mov
shr
sub
mov
inc
or
add
movzx
cmp
jae
mov
movzx
shl
shl
or
inc
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
jmp
sub
sub
mov
shr
sub
mov
inc
or
movzx
cmp
jae
mov
movzx
shl
shl
or
inc
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
jmp
sub
sub
mov
shr
sub
mov
or
cmp
je
mov
mov
mov
mov
mov
mov
mov
lea
mov
test
jne
cmp
jmp
cmp
jae
cmp
mov
sbb
and
add
mov
mov
mov
mov
add
cmp
je
sub
cmp
jae
mov
jmp
mov
mov
cmp
sbb
and
add
sub
sub
add
lea
cmp
mov
mov
mov
ja
sub
add
add
mov
mov
mov
lea
lea
mov
mov
inc
cmp
jne
jmp
lea
mov
mov
inc
inc
cmp
jne
xor
dec
jne
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
jmp
pop
pop
pop
mov
pop
add
ret
add
sub
mov
cmp
jae
movzx
shl
shl
or
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
mov
mov
mov
pop
mov
mov
pop
mov
mov
xor
pop
add
ret
int3
push
push
mov
test
je
cmp
jae
mov
mov
push
mov
mov
mov
sub
push
mov
cmp
jae
mov
cmp
jne
mov
sub
cmp
ja
mov
mov
add
sub
mov
test
je
nop
cmp
sbb
and
sub
add
mov
mov
inc
dec
jne
pop
mov
pop
pop
pop
ret
int3
int3
push
push
mov
cmp
mov
jne
mov
mov
sub
mov
sub
cmp
jbe
lea
push
push
push
call
test
jne
mov
cmp
jb
mov
mov
call
cmp
jae
cmp
jae
mov
cmp
jb
jmp
mov
cmp
jbe
mov
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
shl
mov
shl
mov
dec
and
add
movzx
mov
cmp
jae
mov
cmp
jb
pop
pop
pop
xor
pop
add
ret
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
add
cmp
mov
jne
cmp
je
mov
test
jne
mov
mov
movzx
mov
mov
sub
shr
mov
mov
shl
mov
dec
and
shl
add
imul
add
cmp
jae
mov
jmp
lea
lea
mov
movzx
cmp
jae
mov
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
add
jmp
sub
sub
lea
cmp
jb
mov
mov
cmp
jae
cmp
jae
mov
pop
pop
pop
pop
add
ret
mov
mov
cmp
jae
mov
jmp
xor
mov
sub
add
movzx
mov
mov
mov
add
mov
and
mov
lea
add
movzx
mov
cmp
jae
mov
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
add
not
jmp
sub
sub
lea
and
cmp
jae
mov
jmp
mov
mov
sub
sub
movzx
mov
cmp
jae
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
mov
add
mov
jmp
sub
sub
movzx
mov
cmp
jae
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
mov
cmp
jae
add
shl
add
movzx
mov
mov
cmp
jae
cmp
jae
shl
mov
movzx
shl
or
inc
mov
mov
shr
imul
cmp
jae
cmp
jae
cmp
jae
pop
pop
pop
mov
pop
add
ret
mov
sub
sub
movzx
mov
cmp
jae
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
jmp
movzx
sub
sub
cmp
jae
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
mov
jmp
sub
sub
mov
mov
mov
add
movzx
cmp
jae
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
mov
cmp
jae
add
mov
lea
xor
mov
jmp
movzx
sub
sub
cmp
jae
cmp
jae
movzx
shl
shl
or
inc
mov
mov
shr
imul
cmp
jae
add
mov
mov
lea
mov
jmp
sub
sub
lea
mov
mov
mov
lea
cmp
jae
cmp
jae
movzx
shl
shl
or
inc
mov
movzx
mov
shr
imul
cmp
jae
mov
add
jmp
sub
sub
lea
mov
cmp
jae
mov
jmp
sub
add
cmp
jae
cmp
jb
mov
mov
mov
shl
lea
mov
mov
movzx
cmp
jae
cmp
jae
movzx
shl
shl
or
inc
mov
shr
imul
cmp
jae
mov
add
jmp
sub
sub
lea
cmp
jb
sub
cmp
jb
mov
shr
dec
cmp
jae
mov
and
or
shl
sub
mov
lea
mov
jmp
mov
sub
lea
cmp
jae
cmp
jae
movzx
shl
shl
or
inc
shr
mov
sub
shr
dec
and
sub
dec
jne
mov
add
mov
mov
mov
jmp
lea
nop
mov
movzx
cmp
jae
cmp
jae
movzx
shl
shl
or
inc
mov
shr
imul
cmp
jae
mov
add
jmp
sub
sub
lea
dec
jne
jmp
int3
int3
int3
int3
int3
int3
int3
xor
mov
mov
mov
cmp
je
mov
mov
mov
cmp
je
mov
ret
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
sub
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
cmp
jne
cmp
jne
mov
mov
xor
cmp
pop
pop
pop
setne
pop
add
ret
lea
mov
mov
xor
cmp
je
cmp
jbe
mov
cmp
jae
mov
mov
inc
mov
inc
mov
mov
inc
dec
jne
mov
cmp
jb
cmp
jne
movzx
movzx
movzx
shl
or
movzx
shl
or
shl
or
xor
mov
mov
mov
mov
mov
cmp
jb
mov
cmp
jne
cmp
je
cmp
je
cmp
jne
mov
mov
jmp
mov
cmp
je
mov
add
mov
mov
shl
add
je
mov
mov
movzx
mov
shl
or
shr
rep
adc
rep
xor
mov
mov
mov
mov
mov
mov
mov
test
jne
cmp
jb
cmp
jne
mov
lea
jmp
mov
push
mov
mov
call
test
je
cmp
je
cmp
jne
mov
mov
mov
mov
mov
call
test
jne
mov
mov
sub
add
add
mov
jmp
xor
mov
cmp
jae
cmp
jae
mov
mov
mov
add
add
cmp
jb
mov
mov
cmp
jb
cmp
je
lea
push
mov
mov
call
test
je
cmp
je
cmp
jne
mov
lea
mov
mov
call
test
jne
mov
mov
mov
sub
sub
lea
add
add
mov
sub
cmp
jne
jmp
mov
pop
pop
pop
mov
xor
pop
add
ret
mov
pop
pop
pop
mov
xor
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
push
lea
push
push
call
mov
mov
add
mov
add
pop
pop
pop
mov
xor
pop
add
ret
mov
pop
pop
pop
mov
mov
pop
add
ret
mov
add
mov
pop
pop
pop
mov
xor
pop
add
ret
mov
pop
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
sub
mov
push
push
push
mov
mov
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
sub
mov
cmp
jbe
mov
mov
jmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
jne
cmp
jne
mov
xor
cmp
setne
mov
mov
mov
add
mov
mov
mov
mov
add
sub
sub
push
add
push
push
call
mov
sub
add
add
add
mov
test
jne
test
je
cmp
je
mov
xor
jmp
jmp
lea
mov
mov
xor
cmp
je
cmp
jbe
mov
cmp
jae
mov
mov
mov
add
add
add
sub
jne
mov
mov
cmp
jb
cmp
jne
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
mov
mov
mov
mov
mov
mov
cmp
jb
mov
cmp
jne
cmp
je
cmp
je
cmp
jne
mov
mov
jmp
mov
cmp
je
mov
add
mov
mov
shl
add
je
mov
mov
movzx
mov
shl
or
shr
rep
adc
rep
mov
xor
mov
mov
mov
mov
mov
mov
mov
test
jne
cmp
jb
cmp
jne
lea
jmp
push
mov
mov
call
test
je
cmp
je
cmp
jne
mov
mov
mov
mov
mov
call
test
jne
mov
mov
sub
add
mov
jmp
mov
xor
mov
cmp
jae
nop
cmp
jae
mov
mov
add
add
cmp
jb
mov
mov
cmp
jb
cmp
je
lea
push
mov
mov
call
test
je
cmp
je
cmp
jne
mov
lea
mov
mov
call
test
jne
mov
mov
sub
sub
lea
add
mov
add
sub
cmp
mov
jne
jmp
mov
xor
jmp
mov
xor
jmp
mov
xor
jmp
mov
mov
jmp
push
lea
push
push
call
mov
add
mov
add
mov
xor
jmp
mov
mov
mov
jmp
mov
add
mov
xor
jmp
mov
mov
mov
jmp
pop
pop
mov
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
push
mov
mov
push
mov
mov
mov
call
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
cmp
jae
mov
ret
movzx
push
movzx
shl
or
movzx
shl
or
movzx
shl
or
cmp
jae
mov
mov
mov
cmp
jb
mov
pop
ret
movzx
cdq
mov
idiv
mov
movzx
mov
cdq
idiv
pop
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
push
lea
call
test
jne
mov
add
mov
push
mov
shl
push
mov
add
test
je
cmp
je
mov
mov
call
mov
mov
lea
mov
call
mov
mov
test
je
mov
mov
test
je
cmp
je
mov
mov
call
mov
mov
mov
mov
call
mov
test
jne
mov
mov
mov
call
mov
pop
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
mov
pop
mov
mov
xor
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
or
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
mov
push
mov
test
jns
mov
cmp
mov
jne
cmp
jg
lea
mov
shl
jmp
lea
neg
sbb
and
add
mov
cmp
jge
mov
cmp
jge
mov
cmp
jge
mov
cmp
jge
xor
cmp
setge
mov
cmp
jge
xor
cmp
setge
dec
and
add
mov
cmp
pop
jge
xor
cmp
setne
mov
cmp
jge
mov
cmp
jne
mov
xor
cmp
sete
sar
add
sar
mov
cmp
jge
cmp
je
cmp
mov
jne
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
lea
rep
lea
call
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
mov
mov
sar
dec
mov
shl
test
je
push
lea
push
push
call
add
add
inc
cmp
jl
pop
pop
pop
pop
ret
int3
int3
int3
push
push
push
push
mov
push
lea
push
lea
push
call
push
lea
push
lea
push
call
mov
add
mov
lea
lea
mov
jmp
lea
nop
lea
lea
mov
rep
mov
mov
mov
add
add
dec
rep
jne
lea
lea
mov
rep
lea
lea
mov
rep
lea
lea
mov
rep
lea
lea
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
rep
lea
lea
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
add
push
push
push
call
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
lea
push
lea
push
call
push
lea
push
lea
push
call
mov
add
mov
lea
lea
mov
jmp
lea
nop
lea
lea
mov
rep
mov
mov
mov
add
add
dec
rep
jne
lea
lea
mov
rep
lea
lea
mov
rep
lea
lea
mov
rep
lea
lea
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
rep
lea
lea
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
add
push
push
push
call
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
mov
lea
rep
lea
call
mov
cmp
jg
mov
cmp
jg
mov
cmp
jg
mov
cmp
ja
cmp
ja
mov
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
xor
cmp
mov
sete
mov
mov
mov
mov
mov
mov
test
je
mov
cmp
jge
mov
jmp
cmp
jge
mov
xor
cmp
mov
setg
mov
mov
pop
pop
mov
xor
mov
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jb
mov
mov
mov
call
test
je
push
mov
push
or
mov
mov
mov
mov
call
add
mov
inc
mov
cmp
jne
cmp
jne
mov
mov
mov
sub
push
call
cmp
je
mov
add
mov
mov
adc
or
add
mov
adc
or
jne
mov
mov
shr
pop
mov
pop
add
mov
mov
adc
shl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
or
nop
mov
cmp
jb
mov
mov
mov
call
test
je
mov
mov
mov
mov
mov
mov
call
add
mov
inc
mov
cmp
jne
cmp
jne
mov
mov
mov
sub
push
call
cmp
je
mov
add
mov
mov
adc
or
add
mov
adc
or
jne
mov
mov
shr
mov
mov
add
mov
mov
adc
shl
sub
mov
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
push
push
xor
mov
mov
shr
mov
dec
shr
mov
and
neg
and
add
adc
cmp
jae
mov
shl
mov
cmp
jb
mov
mov
mov
call
test
je
mov
mov
mov
mov
mov
call
add
mov
inc
mov
cmp
jne
cmp
jne
mov
mov
mov
sub
push
call
cmp
je
mov
add
mov
mov
adc
or
or
add
adc
mov
or
jne
mov
mov
shr
mov
add
mov
adc
shl
mov
cmp
jne
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
movzx
push
mov
mov
mov
shr
imul
cmp
jne
mov
mov
sub
shr
add
jmp
add
adc
sub
mov
mov
shr
sub
mov
mov
cmp
jae
shl
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
or
mov
mov
mov
mov
shr
lea
movzx
mov
shr
imul
test
js
mov
sub
shr
mov
add
jmp
add
adc
sub
mov
shr
mov
sub
mov
mov
cmp
jae
shl
mov
call
add
cmp
jb
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
or
nop
mov
mov
add
mov
and
mov
mov
mov
shr
add
add
movzx
lea
mov
shr
imul
test
js
mov
mov
sub
shr
add
jmp
add
adc
sub
mov
shr
mov
sub
mov
mov
cmp
jae
shl
mov
call
add
mov
xor
not
and
cmp
jb
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
xor
mov
lea
mov
imul
add
cmp
jb
lea
shr
inc
cmp
jae
dec
jne
mov
sub
mov
shr
add
mov
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
xor
or
push
lea
mov
shr
mov
shr
movzx
and
neg
sar
shr
and
xor
add
add
cmp
jb
pop
pop
ret
int3
int3
push
push
push
mov
mov
xor
or
mov
add
mov
and
add
mov
shr
add
mov
movzx
mov
shr
and
neg
shr
sar
and
xor
add
add
mov
xor
not
and
cmp
jb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
test
je
push
mov
mov
mov
dec
mov
shr
movzx
mov
shr
imul
and
jne
mov
sub
shr
mov
add
jmp
add
adc
sub
mov
shr
mov
sub
mov
mov
mov
cmp
jae
shl
mov
call
add
or
test
jne
pop
pop
pop
pop
ret
int3
push
push
mov
push
mov
mov
test
jle
mov
push
jmp
lea
mov
movzx
mov
mov
shr
imul
and
jne
mov
mov
sub
shr
add
jmp
add
adc
sub
mov
mov
shr
sub
mov
mov
cmp
jae
shl
mov
call
shr
add
or
dec
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
mov
movzx
mov
cmp
jae
mov
shr
imul
mov
sub
shr
add
mov
mov
mov
cmp
jae
shl
mov
call
push
add
push
lea
push
mov
call
pop
pop
pop
pop
ret
mov
mov
shr
imul
add
mov
adc
sub
mov
shr
sub
mov
mov
mov
cmp
jae
shl
mov
call
cmp
movzx
mov
jae
shr
imul
mov
sub
shr
add
mov
mov
mov
cmp
jae
shl
mov
call
mov
add
push
add
push
lea
push
mov
call
pop
pop
pop
pop
ret
mov
shr
imul
add
adc
sub
mov
shr
sub
mov
mov
mov
cmp
jae
shl
mov
call
mov
add
push
push
add
push
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
movzx
mov
shr
mov
movzx
mov
mov
xor
xor
shr
mov
shr
mov
shr
mov
add
add
push
mov
mov
xor
push
cmp
jae
mov
or
xor
cmp
je
lea
mov
mov
shr
and
lea
movzx
neg
sar
and
shr
xor
add
mov
cmp
jne
add
mov
mov
inc
cmp
jb
cmp
jae
lea
mov
jmp
lea
cmp
jae
or
xor
cmp
je
mov
mov
shr
and
lea
movzx
neg
sar
and
shr
xor
add
mov
cmp
jne
add
mov
mov
mov
inc
inc
mov
cmp
jb
cmp
jae
lea
mov
jmp
lea
or
xor
cmp
je
lea
mov
and
shr
movzx
neg
sar
and
shr
xor
add
mov
cmp
jne
add
mov
mov
mov
inc
inc
mov
cmp
jb
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
xor
mov
mov
cmp
jbe
lea
push
lea
mov
mov
mov
push
push
push
call
mov
add
mov
inc
add
cmp
jb
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
cmp
je
dec
jne
mov
mov
imul
lea
push
push
push
call
mov
mov
pop
ret
int3
int3
int3
mov
mov
push
push
xor
call
mov
mov
mov
lea
call
mov
test
je
mov
cmp
jne
mov
mov
call
mov
mov
dec
inc
cmp
jbe
mov
push
mov
sub
cmp
jae
lea
sub
mov
cmp
jne
inc
inc
cmp
jb
pop
mov
inc
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
jne
mov
movzx
shl
add
shr
movzx
xor
shr
mov
add
pop
ret
movzx
xor
shr
mov
cmp
jne
movzx
shr
add
pop
ret
push
push
movzx
movzx
mov
sub
sar
shr
and
xor
mov
xor
shr
add
pop
pop
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
lea
add
mov
mov
push
mov
nop
lea
shl
add
cmp
je
lea
shl
add
lea
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
test
jne
mov
mov
pop
pop
mov
mov
pop
mov
pop
ret
int3
sub
push
mov
push
mov
mov
cmp
je
lea
add
lea
mov
sub
mov
mov
mov
mov
pop
pop
add
ret
push
push
xor
mov
mov
cmp
jne
lea
push
mov
call
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jae
pop
pop
pop
mov
mov
pop
add
ret
cmp
jbe
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
jmp
lea
lea
lea
mov
mov
sub
dec
mov
cmp
jne
mov
cmp
jne
mov
cmp
jbe
lea
sub
mov
cmp
jne
inc
inc
cmp
jb
mov
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
inc
mov
cmp
jb
mov
mov
mov
mov
cmp
jb
mov
mov
lea
test
je
mov
mov
add
call
mov
pop
pop
pop
pop
add
ret
mov
cmp
jb
mov
mov
mov
add
mov
lea
test
je
mov
mov
add
call
mov
pop
pop
pop
pop
add
ret
mov
sub
mov
mov
cmp
jae
cmp
je
cmp
jae
mov
pop
pop
pop
mov
mov
pop
add
ret
mov
mov
mov
and
mov
movzx
mov
sub
shr
mov
and
mov
mov
mov
mov
shl
movzx
add
imul
add
cmp
jb
movzx
lea
push
call
mov
jmp
lea
call
mov
shl
add
lea
movzx
shr
mov
add
mov
mov
mov
xor
mov
movzx
movzx
xor
xor
shr
mov
shr
mov
add
mov
mov
cmp
jne
mov
shl
add
movzx
movzx
shr
mov
shr
add
add
cmp
jae
mov
mov
mov
mov
mov
cmp
jb
mov
mov
jmp
mov
cmp
jae
mov
mov
pop
pop
pop
mov
mov
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
mov
lea
mov
dec
sub
cmp
jae
xor
mov
cmp
jb
mov
mov
push
mov
mov
call
imul
add
add
lea
add
lea
lea
mov
add
cmp
jae
mov
xor
mov
mov
mov
dec
sub
sub
cmp
jae
inc
cmp
jb
mov
movzx
mov
shr
mov
add
mov
cmp
jb
inc
jmp
mov
cmp
ja
xor
mov
cmp
jbe
add
cmp
ja
mov
mov
imul
add
lea
lea
add
mov
lea
mov
mov
mov
add
mov
lea
cmp
jb
mov
cmp
jae
shl
add
add
jmp
mov
sub
shr
neg
and
add
mov
shr
shl
add
mov
movzx
lea
mov
mov
and
add
mov
add
cmp
jae
xor
add
mov
mov
mov
mov
cmp
jne
add
mov
cmp
je
add
mov
inc
add
jmp
mov
mov
cmp
je
lea
lea
push
mov
call
mov
cmp
jae
mov
inc
lea
shl
mov
mov
add
test
je
dec
cmp
je
mov
lea
add
cmp
mov
jae
mov
mov
jmp
mov
mov
jmp
lea
add
mov
mov
jmp
lea
add
mov
dec
cmp
jne
cmp
jne
mov
mov
jmp
mov
mov
jmp
test
je
cmp
je
mov
mov
mov
mov
jmp
mov
mov
cmp
jae
mov
mov
mov
jmp
mov
mov
mov
lea
add
lea
cmp
jae
mov
mov
mov
cmp
jb
mov
inc
lea
lea
rep
cmp
jae
mov
lea
lea
sub
rep
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
sub
mov
dec
mov
mov
mov
mov
and
mov
mov
shl
add
mov
movzx
shr
mov
add
mov
movzx
mov
mov
mov
sub
shr
mov
and
mov
mov
mov
shl
add
imul
add
cmp
jb
movzx
movzx
push
lea
call
jmp
movzx
mov
or
lea
mov
shr
movzx
mov
shr
and
neg
sar
and
shr
xor
mov
add
add
mov
cmp
jb
mov
mov
add
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
movzx
xor
shr
mov
add
xor
shr
mov
mov
add
mov
mov
mov
cmp
jne
cmp
jae
cmp
je
movzx
movzx
shr
mov
shr
add
add
cmp
ja
mov
xor
mov
mov
mov
mov
mov
mov
sub
mov
cmp
jae
mov
mov
cmp
jb
mov
mov
cmp
jbe
mov
cmp
jne
mov
cmp
je
inc
cmp
jbe
mov
mov
cmp
jbe
mov
mov
lea
sub
mov
cmp
jne
inc
inc
cmp
jb
lea
mov
cmp
jb
mov
mov
mov
movzx
mov
inc
and
mov
shl
add
movzx
xor
shr
mov
xor
shr
add
mov
add
lea
mov
mov
cmp
jae
lea
add
lea
mov
mov
sub
add
mov
mov
add
dec
mov
jne
mov
movzx
imul
movzx
add
xor
shr
mov
shr
add
add
lea
add
add
cmp
lea
jae
mov
inc
mov
xor
mov
mov
mov
mov
mov
mov
jmp
lea
nop
mov
mov
mov
sub
mov
dec
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
cmp
jbe
lea
sub
mov
cmp
jne
inc
inc
cmp
jb
mov
mov
lea
cmp
jae
lea
mov
add
sub
add
lea
mov
jmp
lea
add
dec
mov
jne
mov
mov
push
mov
mov
mov
call
mov
add
imul
mov
add
lea
lea
add
mov
mov
lea
mov
mov
add
cmp
jae
mov
mov
mov
mov
mov
mov
dec
sub
sub
cmp
jae
cmp
jne
lea
mov
mov
mov
lea
add
mov
cmp
jbe
mov
mov
cmp
mov
jae
mov
lea
sub
mov
cmp
jne
inc
inc
cmp
jb
or
sub
add
mov
cmp
jb
movzx
movzx
mov
mov
add
mov
sub
shr
mov
mov
and
mov
movzx
mov
mov
mov
shl
mov
add
imul
add
push
lea
call
mov
mov
mov
mov
and
mov
shl
add
movzx
mov
mov
shr
add
mov
add
add
lea
add
and
movzx
mov
shl
add
mov
movzx
xor
xor
shr
shr
mov
mov
mov
add
mov
add
mov
add
lea
mov
mov
cmp
jae
lea
add
lea
mov
mov
sub
add
mov
mov
jmp
lea
add
dec
mov
jne
mov
mov
imul
movzx
movzx
add
xor
shr
mov
shr
add
add
lea
add
add
cmp
lea
jae
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
cmp
jb
mov
mov
cmp
jbe
xor
mov
cmp
jbe
add
cmp
ja
mov
add
mov
mov
cmp
jb
mov
movzx
mov
shr
mov
add
mov
lea
mov
cmp
jae
lea
add
sub
add
lea
mov
jmp
lea
add
dec
mov
jne
xor
mov
cmp
jbe
lea
add
cmp
ja
mov
mov
mov
mov
sub
shr
neg
and
add
mov
shr
lea
mov
movzx
lea
mov
mov
imul
add
lea
mov
mov
add
lea
add
lea
mov
mov
add
lea
cmp
mov
mov
lea
jb
mov
cmp
jae
shl
add
add
jmp
shl
add
mov
mov
and
add
add
mov
cmp
jae
mov
mov
lea
mov
mov
mov
mov
lea
cmp
jne
mov
mov
sub
mov
add
dec
mov
cmp
jbe
mov
cmp
jae
mov
sub
lea
mov
jmp
lea
mov
mov
cmp
jne
inc
inc
cmp
jb
mov
or
lea
sub
add
mov
cmp
jb
mov
mov
mov
lea
mov
and
movzx
mov
movzx
movzx
mov
sub
mov
and
shr
mov
shl
mov
add
imul
add
push
lea
call
mov
mov
mov
mov
shl
add
movzx
shr
add
mov
add
lea
and
movzx
mov
shl
add
mov
movzx
xor
shr
mov
xor
shr
add
mov
add
mov
lea
lea
mov
mov
cmp
jae
lea
add
lea
mov
mov
sub
add
mov
mov
jmp
lea
add
dec
mov
jne
mov
mov
imul
movzx
movzx
add
xor
shr
mov
shr
add
mov
add
lea
add
add
cmp
lea
jae
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
cmp
je
mov
mov
cmp
jb
mov
sub
shr
neg
and
add
mov
shr
movzx
lea
mov
add
add
inc
jmp
mov
inc
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
push
mov
call
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
xor
cmp
jne
lea
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
pop
mov
pop
add
ret
cmp
jbe
mov
mov
mov
call
lea
push
dec
mov
mov
mov
push
mov
mov
sub
mov
cmp
jne
mov
cmp
jne
mov
cmp
jbe
lea
lea
sub
mov
cmp
jne
inc
inc
cmp
jb
cmp
jae
cmp
jbe
mov
mov
add
inc
cmp
jb
mov
cmp
jb
mov
mov
mov
add
mov
lea
test
je
mov
mov
add
call
pop
mov
pop
pop
pop
add
ret
mov
mov
lea
test
je
mov
mov
add
call
mov
pop
pop
pop
pop
add
ret
xor
mov
cmp
jb
mov
mov
mov
cmp
jbe
lea
mov
inc
cmp
jne
mov
shr
cmp
jbe
mov
mov
sub
sub
mov
mov
cmp
ja
mov
cmp
jne
cmp
jb
mov
mov
mov
cmp
jb
lea
cmp
jae
lea
cmp
jb
cmp
jae
lea
cmp
jb
cmp
jb
mov
mov
lea
mov
test
je
mov
mov
add
call
mov
pop
pop
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
call
mov
cmp
jb
mov
mov
cmp
jb
cmp
jb
lea
cmp
jne
mov
shr
cmp
jbe
cmp
ja
inc
cmp
jb
cmp
jb
mov
shr
cmp
ja
mov
mov
call
lea
dec
mov
mov
mov
mov
sub
mov
dec
cmp
jne
mov
cmp
jne
dec
mov
cmp
jbe
lea
sub
mov
cmp
jne
inc
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
cmp
jae
mov
mov
mov
add
inc
mov
cmp
jb
mov
add
lea
mov
test
je
mov
mov
add
call
pop
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
push
push
mov
mov
mov
shl
add
push
lea
movzx
push
lea
mov
shr
imul
add
adc
sub
mov
shr
sub
mov
mov
mov
cmp
jae
shl
mov
mov
call
mov
movzx
lea
mov
shr
imul
mov
mov
sub
shr
add
mov
mov
cmp
jae
shl
mov
mov
call
mov
mov
mov
xor
cmp
mov
sete
lea
push
mov
mov
mov
call
test
je
mov
dec
jne
mov
imul
lea
mov
push
push
lea
push
call
mov
mov
mov
push
push
lea
push
mov
call
push
push
mov
call
push
add
push
mov
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
jne
cmp
je
mov
cmp
je
mov
mov
test
je
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
mov
je
mov
and
push
push
call
push
lea
call
cmp
jne
mov
mov
mov
push
mov
sub
push
call
cmp
je
mov
add
mov
mov
adc
pop
mov
pop
test
jne
cmp
je
mov
cmp
je
mov
mov
test
je
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
lea
mov
mov
jmp
lea
nop
xor
lea
mov
lea
movzx
mov
and
mov
neg
sar
shr
and
xor
add
add
shr
or
dec
jne
mov
mov
inc
mov
add
mov
mov
cmp
jb
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
mov
movzx
mov
mov
and
shr
dec
or
shl
mov
mov
mov
sub
mov
mov
test
je
jmp
lea
mov
mov
sub
mov
and
add
movzx
mov
neg
sar
shr
and
xor
mov
add
add
shr
or
dec
jne
mov
mov
mov
inc
mov
cmp
jb
lea
mov
lea
sub
lea
sub
lea
mov
mov
mov
lea
xor
cmp
jbe
lea
mov
or
xor
cmp
je
lea
mov
mov
and
shr
movzx
neg
sar
and
shr
xor
add
mov
cmp
jne
mov
mov
inc
cmp
jb
mov
cmp
jbe
mov
shr
sub
shl
add
inc
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
movzx
mov
mov
add
inc
mov
add
cmp
jb
sub
sub
add
add
dec
mov
jne
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
sub
push
push
mov
push
xor
lea
mov
mov
mov
call
lea
call
or
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
call
lea
call
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
mov
push
mov
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
lea
mov
call
lea
mov
call
mov
mov
mov
call
mov
mov
mov
call
xor
mov
mov
mov
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
call
mov
mov
mov
call
pop
pop
ret
int3
int3
sub
push
mov
cmp
je
mov
mov
call
mov
cmp
mov
jne
test
jne
cmp
je
mov
cmp
je
mov
mov
test
je
mov
pop
add
ret
push
push
mov
mov
or
mov
mov
jne
mov
mov
call
test
jne
push
mov
call
pop
pop
pop
add
ret
lea
push
mov
call
mov
mov
shl
movzx
lea
lea
shr
imul
mov
mov
sub
shr
add
mov
mov
cmp
jae
shl
mov
call
mov
mov
mov
mov
mov
mov
neg
call
mov
movzx
push
mov
call
dec
inc
mov
mov
mov
push
call
test
je
jmp
jmp
lea
mov
mov
cmp
je
lea
push
mov
call
jmp
lea
push
push
push
call
mov
and
mov
mov
cmp
jne
cmp
jne
mov
shl
add
movzx
lea
mov
lea
shr
imul
mov
mov
sub
shr
add
mov
mov
cmp
jae
shl
mov
call
mov
mov
call
sub
mov
mov
movzx
mov
and
mov
mov
sub
shr
mov
shl
mov
add
imul
add
cmp
jae
movzx
push
call
jmp
sub
movzx
push
movzx
push
call
mov
mov
mov
jmp
mov
mov
shl
add
lea
movzx
mov
shr
imul
add
adc
sub
mov
shr
sub
mov
mov
mov
cmp
jae
shl
lea
mov
call
cmp
mov
jae
movzx
lea
mov
mov
shr
imul
add
adc
sub
mov
shr
sub
mov
mov
mov
cmp
jae
shl
lea
mov
call
mov
test
jne
mov
movzx
lea
mov
shr
imul
mov
mov
sub
shr
add
mov
mov
cmp
jae
shl
lea
mov
call
mov
xor
cmp
setne
shl
add
lea
push
lea
call
mov
jmp
mov
mov
lea
movzx
mov
mov
mov
shr
imul
add
adc
sub
mov
shr
sub
mov
mov
mov
cmp
jae
shl
lea
mov
call
cmp
jne
mov
movzx
lea
mov
shr
imul
mov
mov
sub
shr
add
mov
mov
cmp
jae
shl
lea
mov
call
jmp
mov
mov
lea
movzx
mov
shr
imul
add
adc
sub
mov
shr
sub
mov
mov
mov
cmp
jae
shl
lea
mov
call
mov
mov
add
lea
push
lea
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
jmp
mov
xor
cmp
lea
sete
lea
add
mov
push
push
lea
call
mov
mov
mov
jmp
movzx
lea
mov
shr
imul
mov
mov
sub
shr
add
mov
mov
cmp
jae
shl
lea
mov
call
mov
mov
mov
xor
cmp
mov
sete
add
push
mov
lea
mov
lea
call
cmp
je
dec
jne
mov
imul
lea
mov
push
push
push
lea
lea
call
mov
mov
mov
mov
sub
mov
cmp
jae
movzx
jmp
mov
sub
shr
neg
and
add
shr
movzx
lea
mov
cmp
jae
add
jmp
mov
push
shl
lea
push
push
lea
call
cmp
jb
mov
mov
shr
mov
and
dec
or
mov
shl
sub
cmp
jae
sub
lea
push
push
lea
call
jmp
add
mov
push
shr
push
lea
call
and
push
lea
push
mov
lea
call
inc
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
sub
mov
add
test
jne
cmp
jne
cmp
jb
mov
call
cmp
jb
mov
call
mov
mov
call
test
je
mov
sub
cmp
je
add
cmp
jae
mov
sub
cdq
add
adc
add
adc
add
adc
xor
cmp
ja
jb
cmp
jb
mov
mov
sub
push
add
mov
adc
call
pop
pop
pop
pop
add
ret
cmp
jb
mov
sub
mov
add
adc
call
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
xor
push
mov
mov
cmp
jne
mov
mov
mov
call
mov
cmp
je
add
mov
cmp
je
cmp
jne
cmp
je
mov
jmp
pop
mov
pop
pop
ret
xor
mov
push
mov
add
mov
cmp
je
cmp
je
cmp
je
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
shl
mov
add
mov
call
mov
mov
mov
mov
call
mov
xor
mov
cmp
je
cmp
je
mov
mov
mov
cmp
sbb
neg
mov
mov
lea
cmp
jae
sub
mov
cmp
je
mov
mov
push
mov
push
push
lea
push
mov
call
test
jne
mov
mov
mov
call
pop
pop
xor
pop
pop
ret
mov
mov
push
mov
push
push
lea
push
mov
call
test
je
mov
mov
mov
call
pop
pop
xor
pop
pop
ret
mov
mov
call
mov
mov
mov
call
mov
mov
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
xor
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
push
nop
mov
jmp
lea
mov
mov
mov
mov
add
dec
jne
mov
mov
mov
mov
mov
add
dec
jne
mov
add
mov
shl
xor
pop
cmp
jbe
jmp
lea
nop
mov
mov
mov
inc
cmp
jb
mov
movzx
mov
shl
or
lea
mov
rep
mov
movzx
mov
shl
or
lea
mov
rep
mov
mov
movzx
mov
shl
or
lea
mov
rep
mov
movzx
mov
shl
or
lea
mov
rep
mov
movzx
mov
shl
or
lea
mov
rep
mov
mov
movzx
mov
shl
or
lea
mov
rep
mov
movzx
mov
shl
or
lea
mov
rep
mov
movzx
mov
shl
or
lea
mov
rep
mov
movzx
mov
shl
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
pop
pop
dec
mov
mov
shl
mov
pop
dec
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
jne
mov
call
call
mov
mov
dec
mov
mov
mov
shl
lea
push
lea
call
mov
mov
shl
lea
lea
push
call
pop
pop
ret
int3
int3
int3
push
push
mov
mov
xor
xor
mov
cmp
jbe
rol
cmp
jbe
rol
cmp
jbe
add
rol
cmp
jb
jmp
inc
jmp
add
mov
lea
mov
push
mov
mov
push
mov
mov
call
cmp
jne
push
mov
call
cmp
jne
mov
call
mov
call
mov
mov
dec
mov
mov
mov
shl
lea
push
lea
call
mov
mov
shl
lea
lea
push
call
mov
mov
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
push
call
ret
int3
int3
int3
int3
int3
int3
cmp
je
add
jmp
ret
int3
push
mov
mov
push
mov
cmp
jae
mov
mov
mov
push
push
push
call
sub
add
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
call
sub
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
push
push
xor
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
push
push
push
push
call
mov
mov
sub
mov
mov
sub
cmp
pop
pop
pop
pop
je
mov
add
ret
int3
int3
sub
xor
inc
cmp
jl
push
push
push
push
push
call
mov
test
jne
cmp
jne
test
je
mov
sub
mov
cdq
add
adc
add
adc
push
mov
push
mov
push
push
mov
call
test
jne
push
push
push
push
call
mov
test
je
jmp
mov
cmp
je
lea
call
mov
pop
add
ret
int3
int3
mov
push
mov
mov
mov
mov
push
push
mov
push
mov
mov
call
test
jne
push
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
push
push
mov
mov
push
mov
jae
pop
pop
mov
pop
ret
mov
mov
mov
add
add
add
add
mov
mov
add
add
add
add
add
mov
mov
shl
cmp
jbe
mov
shl
cmp
jbe
inc
cmp
jle
jmp
mov
jmp
mov
shl
mov
mov
mov
shr
shr
shr
mov
mov
mov
pop
pop
xor
pop
ret
int3
push
mov
mov
call
test
jne
cmp
jne
mov
mov
push
call
lea
mov
call
test
jne
mov
call
test
je
mov
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
lea
mov
xor
jmp
lea
mov
mov
mov
mov
add
dec
jne
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
push
push
mov
push
lea
push
mov
call
mov
mov
mov
and
cmp
je
mov
sub
mov
sbb
add
adc
mov
mov
mov
mov
mov
and
cmp
je
mov
sub
mov
sbb
add
adc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
test
je
push
push
mov
push
push
call
test
je
mov
jmp
xor
mov
mov
push
call
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
mov
cmp
je
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
test
jne
mov
ret
mov
test
je
mov
mov
cmp
je
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
test
je
lea
mov
mov
call
test
je
mov
ret
lea
call
neg
sbb
and
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
mov
test
je
lea
push
mov
mov
mov
mov
call
mov
add
add
sub
test
jne
test
je
test
jne
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
call
test
je
mov
pop
pop
ret
mov
mov
mov
dec
cmp
jne
xor
jmp
inc
mov
shl
add
cmp
push
lea
je
lea
mov
call
neg
sbb
pop
and
pop
pop
ret
mov
mov
push
mov
mov
push
mov
lea
mov
call
test
jne
mov
mov
cmp
lea
setne
mov
mov
call
test
jne
mov
mov
mov
mov
push
push
push
mov
lea
push
mov
push
mov
call
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
call
test
je
pop
pop
mov
pop
pop
ret
cmp
je
pop
pop
mov
pop
pop
ret
mov
mov
mov
mov
push
mov
call
cmp
je
pop
pop
mov
pop
pop
ret
lea
call
neg
sbb
and
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
mov
dec
cmp
jne
xor
jmp
inc
mov
shl
add
lea
push
lea
call
mov
test
jne
cmp
je
pop
pop
pop
ret
push
mov
lea
push
mov
call
cmp
jne
mov
mov
push
call
mov
lea
push
call
cmp
jne
mov
push
call
mov
lea
mov
mov
call
lea
call
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
add
cmp
jb
lea
call
lea
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
lea
mov
xor
lea
call
lea
call
cmp
je
mov
mov
call
test
jne
mov
call
lea
call
mov
call
lea
call
mov
cmp
je
mov
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
call
mov
add
dec
jne
mov
mov
lea
push
call
add
push
call
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
push
push
xor
push
lea
mov
mov
call
cmp
jbe
lea
jmp
lea
call
test
jne
inc
add
cmp
jb
mov
test
je
lea
cmp
lea
jne
lea
mov
lea
mov
mov
call
test
jne
lea
call
test
jne
push
mov
mov
call
test
jne
mov
inc
add
mov
cmp
jb
xor
test
je
lea
mov
call
test
jne
inc
add
cmp
jb
jmp
mov
jmp
mov
mov
lea
call
lea
call
test
je
lea
mov
call
add
dec
jne
mov
test
je
lea
lea
call
mov
call
add
dec
jne
test
jne
mov
pop
pop
pop
pop
add
ret
mov
pop
pop
pop
pop
add
ret
int3
push
mov
xor
mov
xor
mov
cmp
jb
mov
jmp
mov
shr
inc
mov
inc
dec
jne
mov
inc
cmp
jb
mov
mov
mov
mov
push
mov
lea
push
push
call
add
xor
lea
mov
inc
cmp
jb
mov
mov
cmp
jae
jmp
lea
dec
mov
jne
inc
lea
inc
cmp
jb
push
lea
push
push
call
push
push
add
push
call
add
pop
ret
int3
int3
mov
push
mov
mov
mov
mov
call
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
test
je
cmp
je
push
mov
mov
mov
call
mov
neg
and
mov
mov
mov
lea
mov
mov
call
mov
pop
test
jne
pop
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
movzx
mov
movzx
push
mov
sub
lea
push
lea
movzx
movzx
cmp
je
movzx
dec
sub
push
mov
lea
lea
mov
mov
pop
mov
mov
mov
pop
pop
ret
int3
sub
push
push
push
xor
push
lea
mov
mov
lea
mov
mov
movzx
mov
test
je
mov
mov
mov
mov
mov
xor
mov
mov
test
jne
mov
inc
add
mov
cmp
jb
mov
mov
lea
mov
mov
mov
cmp
je
mov
mov
lea
cmp
je
jmp
lea
movzx
lea
movzx
lea
add
cmp
jne
cmp
jae
mov
mov
mov
mov
mov
mov
lea
mov
movzx
lea
add
cmp
je
mov
lea
cmp
jne
mov
lea
cmp
je
movzx
mov
cmp
jbe
lea
shr
inc
jmp
lea
mov
mov
mov
add
add
dec
jne
movzx
movzx
cmp
je
movzx
dec
sub
mov
lea
lea
mov
mov
mov
mov
lea
mov
mov
cmp
jne
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
jne
call
mov
test
je
mov
mov
pop
ret
mov
lea
lea
inc
add
cmp
je
cmp
je
mov
push
push
mov
mov
movzx
movzx
sub
lea
lea
movzx
movzx
cmp
je
movzx
dec
sub
push
mov
lea
lea
mov
mov
pop
mov
mov
pop
mov
pop
pop
ret
movzx
mov
dec
lea
add
mov
sub
add
cmp
jbe
sub
mov
mov
pop
ret
xor
pop
ret
int3
int3
int3
int3
mov
test
je
mov
mov
ret
movzx
push
mov
lea
mov
add
sub
add
cmp
pop
ja
add
mov
ret
mov
jmp
int3
int3
int3
int3
push
push
movzx
push
mov
movzx
mov
cmp
je
mov
test
je
mov
mov
mov
mov
mov
lea
sub
push
jmp
lea
mov
mov
mov
mov
mov
mov
add
add
dec
jne
mov
mov
pop
mov
pop
mov
pop
pop
ret
push
push
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
xor
lea
push
push
call
mov
add
mov
lea
mov
shr
mov
mul
shr
imul
mov
sub
mov
mov
mov
add
mov
mov
mov
mov
cmp
jb
mov
or
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
xor
lea
mov
add
xor
mov
add
inc
mov
mov
mov
cmp
jb
lea
mov
mov
jmp
xor
mov
mov
add
mov
movzx
xor
div
mov
sub
movzx
xor
jmp
lea
mov
add
cmp
jb
add
add
cmp
jb
mov
sub
inc
mov
cmp
jb
xor
lea
mov
lea
add
add
add
mov
mov
mov
mov
add
dec
jne
inc
cmp
jb
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movzx
movzx
push
mov
shl
push
xor
or
cmp
jne
mov
mov
mov
test
je
mov
mov
cmp
je
mov
mov
cmp
je
mov
mov
add
cmp
jne
jmp
lea
movzx
movzx
shl
or
cmp
jne
mov
mov
mov
inc
test
jne
jmp
mov
test
je
mov
mov
lea
movzx
mov
shr
mov
mov
cmp
jne
mov
mov
jmp
mov
cmp
je
add
cmp
jne
movzx
movzx
dec
sub
sub
lea
cmp
ja
lea
cmp
sbb
neg
jmp
lea
lea
add
xor
div
inc
mov
mov
mov
cmp
je
add
mov
jmp
cmp
je
mov
mov
mov
jmp
xor
mov
call
test
je
mov
mov
mov
mov
mov
mov
dec
mov
mov
shr
mov
mov
mov
test
jne
pop
pop
pop
pop
add
ret
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
mov
movzx
movzx
shl
or
cmp
mov
jae
mov
mov
test
je
cmp
jne
mov
cmp
jae
inc
mov
jmp
mov
mov
cmp
je
lea
add
cmp
jne
mov
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jae
add
mov
add
cmp
jne
push
push
call
mov
mov
test
jne
mov
call
pop
pop
pop
pop
add
ret
mov
mov
shr
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
inc
mov
mov
cmp
jae
test
je
cmp
ja
push
push
call
test
je
mov
mov
dec
jne
mov
xor
cmp
mov
setne
sub
jmp
mov
mov
shr
mov
mov
mov
mov
mov
movzx
movzx
movzx
mov
sub
sub
inc
mov
mov
cmp
je
jmp
mov
movzx
mov
cmp
je
test
jne
mov
shr
movzx
movzx
mov
cmp
je
lea
mov
call
mov
test
je
mov
mov
mov
lea
sub
mov
mov
mov
mov
mov
mov
add
add
dec
jne
mov
mov
mov
mov
mov
mov
mov
mov
movzx
lea
cmp
sbb
inc
lea
cmp
sbb
inc
and
lea
add
cmp
sbb
neg
add
jmp
mov
test
je
mov
mov
jmp
movzx
mov
lea
mov
add
add
sub
cmp
ja
add
mov
jmp
xor
mov
call
mov
test
je
mov
mov
mov
mov
mov
mov
cmp
jae
add
mov
jmp
mov
movzx
mov
cmp
sbb
neg
add
add
mov
mov
movzx
movzx
mov
lea
add
imul
lea
add
add
cmp
jae
lea
cmp
sbb
cmp
sbb
neg
lea
add
jmp
mov
shl
sub
cmp
sbb
lea
add
inc
add
cmp
sbb
inc
add
lea
cmp
sbb
lea
mov
add
mov
mov
mov
lea
lea
mov
mov
shr
mov
mov
mov
mov
mov
inc
mov
mov
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
push
mov
mov
cmp
je
lea
nop
mov
mov
mov
mov
sub
sub
cmp
jne
mov
mov
mov
mov
movzx
movzx
add
mov
sub
xor
cmp
movzx
setne
add
shr
mov
movzx
mov
mov
movzx
mov
dec
jmp
mov
movzx
add
sub
add
shr
movzx
add
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
je
mov
shr
cmp
ja
mov
mov
mov
mov
jmp
mov
dec
jne
inc
cmp
jne
mov
movzx
jmp
lea
sub
inc
cmp
je
sub
mov
movzx
add
cmp
jne
mov
mov
mov
mov
shr
mov
shr
sub
shr
mov
cmp
ja
mov
inc
shr
movzx
mov
mov
mov
mov
add
mov
pop
mov
mov
pop
pop
add
ret
lea
lea
shr
sar
cmp
je
push
mov
call
mov
mov
mov
mov
shr
sub
add
mov
mov
mov
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
movzx
mov
mov
sub
cmp
je
movzx
movzx
cmp
sbb
neg
lea
movzx
imul
mov
xor
cmp
mov
movzx
movzx
setl
sub
cmp
sbb
neg
pop
lea
mov
lea
add
movzx
lea
mov
mov
shr
xor
sub
test
sete
mov
pop
pop
add
mov
mov
pop
ret
pop
lea
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
add
mov
cmp
jbe
mov
lea
push
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
pop
pop
jbe
call
mov
movzx
movzx
shl
or
cmp
jne
cmp
jbe
mov
mov
pop
ret
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
movzx
mov
movzx
xor
add
cmp
setg
mov
add
mov
add
mov
movzx
add
mov
cmp
jbe
call
mov
movzx
movzx
shl
or
cmp
jne
cmp
jbe
mov
mov
pop
pop
ret
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
cmp
setb
add
mov
mov
mov
add
mov
movzx
movzx
shl
or
cmp
pop
jne
cmp
jbe
mov
mov
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
mov
movzx
add
mov
cmp
jbe
call
mov
mov
mov
pop
jmp
int3
push
mov
mov
mov
mov
mov
call
test
je
xor
pop
ret
push
mov
mov
mov
call
mov
movzx
shl
or
dec
mov
jne
cmp
sbb
pop
neg
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
xor
div
xor
mov
mov
mov
div
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
imul
imul
sub
mov
cmp
jae
mov
mov
call
mov
shl
movzx
shl
or
cmp
mov
jae
mov
mov
call
mov
movzx
shl
or
shl
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
shr
imul
mov
push
cmp
jae
xor
mov
jmp
sub
sub
mov
mov
mov
cmp
jae
mov
mov
call
mov
shl
movzx
shl
or
cmp
mov
jae
mov
mov
call
mov
movzx
shl
or
shl
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
cmp
mov
push
mov
je
movzx
mov
mov
mov
call
movzx
cmp
jae
mov
push
xor
mov
call
mov
mov
mov
call
pop
pop
pop
movzx
pop
add
ret
mov
mov
movzx
dec
movzx
add
add
cmp
ja
dec
jne
mov
movzx
cmp
jae
mov
movzx
movzx
mov
mov
movzx
sub
push
mov
mov
call
xor
or
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jb
mov
movzx
movzx
mov
dec
movzx
sub
dec
mov
jne
jmp
movzx
push
sub
mov
mov
call
mov
mov
mov
call
pop
pop
pop
movzx
pop
add
ret
mov
movzx
movzx
mov
mov
movzx
movzx
mov
movzx
movzx
movzx
shl
add
lea
mov
sar
and
add
add
mov
add
lea
movzx
mov
call
test
movzx
jne
lea
sar
sub
sub
mov
mov
add
mov
mov
mov
call
pop
pop
pop
movzx
pop
add
ret
lea
sar
sub
mov
movzx
shr
movzx
xor
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jb
mov
movzx
mov
mov
lea
mov
movzx
mov
lea
inc
mov
mov
test
je
mov
movzx
cmp
je
movzx
mov
xor
xor
sub
jmp
lea
mov
movzx
movsx
movzx
and
mov
sub
add
add
cmp
jne
lea
push
mov
mov
call
mov
mov
mov
mov
add
mov
mov
call
cmp
jb
mov
cmp
jae
mov
sub
push
mov
mov
call
mov
mov
add
mov
movzx
dec
mov
jne
or
jmp
pop
pop
pop
mov
pop
add
ret
mov
movzx
lea
cmp
ja
lea
mov
movzx
add
add
cmp
jbe
mov
movzx
push
sub
mov
mov
call
mov
mov
cmp
jae
dec
jne
shl
mov
shl
inc
mov
mov
mov
mov
mov
call
pop
pop
pop
movzx
pop
add
ret
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
xor
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
mov
xor
div
push
mov
mov
imul
add
adc
imul
mov
cmp
jae
push
push
or
nop
mov
shl
cmp
jb
mov
mov
mov
call
test
je
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
call
or
add
mov
adc
or
jne
mov
mov
shr
mov
xor
add
mov
adc
shl
mov
cmp
jb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
shr
imul
mov
cmp
jae
push
push
push
or
nop
mov
shl
cmp
jb
mov
mov
mov
call
test
je
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
call
or
add
mov
adc
or
jne
mov
mov
shr
mov
add
mov
mov
adc
shl
mov
cmp
jb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
shr
imul
add
push
mov
adc
sub
cmp
jae
push
push
or
jmp
lea
mov
shl
cmp
jb
mov
mov
mov
call
test
je
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
call
or
add
mov
adc
or
jne
mov
mov
shr
mov
xor
add
mov
adc
shl
mov
cmp
jb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
or
mov
cmp
jb
mov
mov
mov
call
test
je
mov
nop
mov
mov
mov
mov
call
mov
lea
mov
mov
call
or
add
mov
adc
or
jne
mov
mov
shr
mov
mov
add
mov
mov
adc
shl
sub
mov
jne
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
mov
cmp
mov
mov
je
mov
movzx
cmp
jne
movzx
movzx
push
push
push
call
mov
mov
call
pop
pop
pop
pop
add
ret
mov
mov
movzx
movzx
dec
jmp
lea
movzx
add
cmp
je
movzx
add
dec
jne
mov
movzx
movzx
mov
xor
or
nop
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jb
mov
movzx
movzx
mov
dec
movzx
sub
dec
mov
jne
movzx
push
sub
push
push
call
jmp
movzx
movzx
push
push
push
call
mov
mov
call
pop
pop
pop
pop
add
ret
mov
movzx
movzx
mov
mov
movzx
movzx
movzx
lea
mov
movzx
movzx
add
mov
shl
sar
add
and
lea
movzx
add
add
lea
cmp
jne
movzx
push
call
movzx
lea
sar
sub
sub
mov
mov
mov
call
pop
pop
pop
pop
add
ret
movzx
push
call
movzx
lea
sar
sub
movzx
mov
shr
movzx
mov
xor
or
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jb
movzx
mov
mov
mov
movzx
lea
inc
mov
mov
test
je
mov
movzx
cmp
je
lea
push
mov
call
mov
movzx
mov
mov
mov
xor
jmp
jmp
lea
mov
movzx
cmp
je
movzx
movsx
lea
and
add
add
dec
mov
jne
mov
mov
lea
push
push
push
call
mov
mov
add
add
jmp
mov
mov
jmp
lea
movzx
movzx
movsx
and
add
add
dec
jne
add
mov
mov
push
mov
movzx
push
push
call
mov
cmp
jae
dec
jne
shl
mov
shl
inc
mov
mov
mov
mov
call
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
xor
mov
cmp
jb
mov
jmp
mov
shr
inc
mov
inc
dec
jne
mov
inc
cmp
jb
mov
mov
mov
mov
push
mov
lea
push
push
call
add
xor
lea
mov
inc
cmp
jb
mov
mov
cmp
jae
jmp
lea
dec
mov
jne
inc
lea
inc
cmp
jb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
mov
call
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
test
je
cmp
je
push
mov
mov
mov
call
mov
neg
and
mov
mov
mov
lea
mov
mov
call
mov
pop
test
jne
pop
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
movzx
mov
movzx
push
mov
sub
lea
push
lea
movzx
movzx
cmp
je
movzx
dec
sub
lea
lea
mov
push
mov
mov
movzx
mov
inc
mov
pop
mov
mov
mov
movzx
mov
inc
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
push
push
mov
lea
mov
call
mov
add
cmp
je
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
mov
mov
lea
cmp
lea
lea
jne
lea
mov
add
mov
mov
lea
cmp
lea
je
mov
cmp
jne
add
dec
jne
mov
mov
cmp
je
mov
mov
mov
cmp
je
cmp
jbe
lea
shr
inc
jmp
lea
mov
mov
mov
movzx
mov
inc
mov
add
add
dec
jne
movzx
movzx
cmp
je
movzx
dec
sub
lea
lea
mov
mov
mov
movzx
mov
inc
mov
xor
mov
mov
mov
movzx
mov
inc
mov
cmp
jne
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jne
call
mov
test
je
mov
dec
mov
pop
ret
mov
lea
inc
add
cmp
je
cmp
je
push
mov
mov
dec
push
mov
push
mov
mov
call
mov
pop
pop
ret
movzx
mov
dec
lea
add
mov
sub
add
cmp
jbe
sub
mov
mov
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
je
mov
dec
mov
pop
ret
movzx
push
mov
lea
mov
add
sub
add
cmp
pop
ja
add
mov
pop
ret
mov
call
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
movzx
movzx
mov
cmp
jne
mov
pop
add
ret
push
mov
test
je
mov
dec
mov
mov
mov
mov
lea
sub
push
lea
mov
mov
mov
mov
mov
mov
add
add
dec
jne
mov
mov
mov
mov
movzx
mov
inc
pop
mov
mov
pop
pop
add
ret
push
push
call
pop
mov
pop
add
ret
int3
int3
sub
push
movzx
push
mov
add
cmp
ja
mov
mov
cmp
ja
push
mov
dec
mov
mov
mov
push
lea
sub
lea
mov
mov
mov
mov
mov
mov
add
add
dec
jne
mov
pop
pop
cmp
je
mov
mov
mov
movzx
mov
inc
mov
mov
pop
pop
add
ret
movzx
lea
lea
mov
mov
pop
pop
add
ret
int3
int3
int3
sub
push
push
push
mov
lea
push
push
call
mov
add
cmp
je
mov
mov
cmp
jne
jmp
lea
lea
mov
mov
movzx
inc
lea
cmp
lea
lea
je
mov
lea
lea
mov
cmp
lea
je
nop
mov
cmp
jne
mov
mov
dec
dec
je
cmp
je
cmp
lea
jne
add
add
dec
jne
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
push
xor
lea
push
push
call
push
lea
push
push
call
mov
add
mov
lea
mov
shr
mov
mul
shr
imul
mov
sub
mov
mov
mov
add
mov
mov
mov
mov
cmp
jb
mov
or
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
xor
xor
mov
mov
add
xor
mov
add
inc
mov
mov
mov
cmp
jb
xor
lea
lea
mov
mov
mov
jmp
lea
mov
mov
movzx
cmp
jne
nop
inc
lea
mov
movzx
cmp
je
mov
xor
lea
movzx
xor
lea
div
mov
sub
movzx
xor
lea
mov
add
cmp
jb
add
add
cmp
jb
mov
sub
inc
mov
cmp
jb
lea
xor
lea
mov
mov
lea
lea
jmp
mov
movzx
cmp
jne
inc
movzx
lea
cmp
je
mov
shl
add
mov
jmp
lea
mov
mov
add
dec
jne
inc
dec
jne
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
mov
push
mov
mov
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
movzx
push
mov
lea
shr
call
movzx
movzx
mov
lea
and
cmp
sbb
lea
inc
mov
movzx
sub
lea
mov
shr
mov
movzx
mov
movzx
add
sub
lea
mov
shr
movzx
add
cmp
mov
sbb
inc
add
add
add
or
dec
jne
mov
add
mov
shr
mov
add
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
push
mov
test
jne
movzx
movzx
shl
or
cmp
jb
mov
cmp
jae
lea
push
mov
call
mov
shr
mov
jmp
xor
mov
movzx
movzx
shl
or
jne
cmp
ja
pop
mov
pop
pop
add
ret
mov
cmp
je
mov
mov
mov
movzx
mov
inc
pop
mov
pop
xor
pop
add
ret
pop
add
mov
pop
xor
pop
add
ret
push
movzx
mov
add
shr
mov
mov
call
movzx
lea
add
lea
mov
mov
cmp
jb
mov
jmp
lea
movzx
movzx
shl
or
cmp
jae
mov
mov
add
sub
mov
dec
xor
mov
mov
movzx
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jae
inc
push
mov
call
mov
mov
shr
mov
jmp
xor
mov
sub
cmp
jae
movzx
cmp
je
cmp
je
mov
mov
test
jns
movzx
mov
mov
mov
movzx
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
movzx
pop
mov
add
pop
mov
pop
xor
pop
add
ret
pop
pop
add
mov
pop
xor
pop
add
ret
jne
cmp
mov
setae
add
add
add
and
add
mov
mov
mov
mov
mov
movzx
mov
mov
mov
movzx
mov
inc
mov
mov
add
pop
shr
mov
pop
mov
pop
pop
add
ret
movzx
xor
shl
cmp
mov
setg
push
mov
mov
call
pop
pop
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
xor
push
xor
lea
lea
lea
movzx
imul
add
movzx
imul
add
add
add
dec
jne
add
imul
sub
pop
sub
pop
add
pop
add
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
push
mov
push
mov
push
mov
cmp
je
mov
dec
mov
jne
mov
cmp
mov
setae
add
add
add
and
add
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
movzx
mov
inc
mov
movzx
add
sar
mov
jmp
add
mov
movzx
add
sar
mov
jmp
movzx
add
sar
push
xor
mov
call
mov
cmp
jne
cmp
je
jmp
lea
mov
test
jne
mov
mov
shr
sub
mov
jmp
movzx
add
movzx
mov
movzx
lea
cmp
jle
add
sar
push
mov
mov
call
mov
cmp
jne
cmp
je
xor
xor
lea
lea
lea
movzx
imul
add
movzx
imul
add
add
add
dec
jne
mov
add
imul
sub
sub
add
add
add
shr
cmp
jb
mov
cmp
je
mov
mov
cmp
jne
mov
mov
push
mov
call
mov
call
call
mov
shr
lea
cmp
ja
mov
pop
pop
pop
mov
mov
pop
ret
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
push
mov
mov
movzx
movzx
shl
xor
or
cmp
jne
mov
mov
mov
test
je
lea
mov
mov
test
je
mov
jmp
cmp
je
mov
mov
mov
cmp
je
mov
add
cmp
jne
mov
cmp
jae
inc
mov
inc
jmp
mov
cmp
mov
lea
sete
cmp
setb
and
add
mov
mov
movzx
movzx
shl
or
cmp
jne
mov
mov
inc
test
jne
jmp
mov
test
je
mov
lea
mov
shr
mov
mov
cmp
mov
setae
add
cmp
setae
add
mov
add
add
add
test
jne
mov
jmp
mov
cmp
je
lea
add
cmp
jne
movzx
movzx
movzx
dec
sub
sub
lea
cmp
ja
lea
cmp
sbb
neg
jmp
lea
xor
div
inc
mov
mov
jmp
lea
mov
cmp
je
add
mov
jmp
cmp
je
mov
mov
dec
mov
jmp
mov
xor
call
test
je
mov
mov
mov
mov
mov
mov
mov
dec
mov
shr
mov
mov
mov
mov
mov
test
jne
pop
pop
pop
pop
add
ret
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
shr
push
mov
mov
mov
mov
inc
test
je
mov
mov
jmp
mov
test
je
mov
cmp
je
mov
mov
mov
cmp
je
add
cmp
jne
mov
cmp
jae
add
mov
add
jmp
mov
lea
cmp
setb
add
mov
movzx
movzx
shl
or
jne
mov
mov
mov
jmp
movzx
movzx
shl
or
cmp
ja
mov
push
push
push
mov
call
test
jne
xor
mov
jmp
mov
shr
mov
mov
cmp
jne
mov
cmp
jne
movzx
movzx
mov
shl
or
mov
shr
mov
dec
movzx
movzx
shl
or
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
movzx
mov
push
push
push
movzx
shl
or
movzx
mov
mov
mov
xor
mov
cmp
jae
mov
mov
test
je
cmp
jne
mov
lea
cmp
jae
inc
mov
jmp
mov
mov
cmp
je
lea
add
cmp
jne
mov
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jae
add
mov
add
cmp
mov
jne
test
je
push
mov
push
push
call
test
jne
mov
xor
mov
push
mov
call
pop
pop
pop
add
ret
mov
mov
pop
shr
pop
mov
mov
mov
pop
add
ret
mov
mov
mov
mov
inc
mov
mov
mov
cmp
jae
test
jne
push
mov
mov
call
jmp
cmp
jae
push
mov
push
push
call
test
je
mov
mov
dec
jne
mov
xor
cmp
mov
setne
sub
mov
movzx
movzx
sub
sub
cmp
mov
setae
add
add
add
mov
mov
cmp
je
jmp
lea
movzx
mov
test
je
test
je
lea
shr
movzx
movzx
mov
mov
cmp
je
lea
mov
call
mov
test
je
mov
mov
mov
mov
lea
sub
lea
mov
mov
mov
mov
mov
mov
add
add
dec
jne
mov
mov
mov
mov
mov
movzx
mov
mov
inc
mov
mov
lea
cmp
sbb
neg
add
jmp
mov
test
je
mov
dec
mov
jmp
movzx
mov
mov
lea
add
add
sub
cmp
ja
add
mov
jmp
xor
mov
call
test
je
mov
mov
mov
mov
mov
mov
cmp
jae
add
mov
jmp
mov
mov
cmp
movzx
sbb
neg
add
add
mov
movzx
mov
lea
imul
add
add
lea
add
cmp
jae
lea
cmp
sbb
cmp
sbb
neg
add
lea
mov
jmp
mov
shl
sub
cmp
sbb
lea
add
add
neg
cmp
sbb
neg
add
lea
cmp
sbb
neg
lea
movzx
add
mov
mov
mov
lea
lea
mov
mov
shr
mov
mov
mov
mov
mov
or
inc
mov
mov
cmp
jne
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
mov
mov
mov
cmp
je
lea
jmp
lea
mov
mov
mov
mov
sub
sub
cmp
jne
mov
mov
mov
mov
movzx
movzx
add
mov
sub
xor
cmp
movzx
setne
add
shr
mov
movzx
mov
mov
movzx
mov
mov
jmp
jmp
lea
mov
movzx
add
sub
add
shr
movzx
add
mov
cmp
jbe
mov
mov
mov
mov
lea
mov
mov
mov
mov
sub
cmp
je
mov
shr
cmp
ja
mov
mov
mov
mov
dec
mov
jne
inc
cmp
jne
mov
movzx
sub
inc
cmp
je
sub
mov
mov
add
test
jne
mov
mov
shr
movzx
lea
xor
div
mov
mov
cmp
jbe
mov
add
shr
movzx
mov
mov
mov
movzx
mov
inc
cmp
mov
mov
mov
setae
add
add
add
and
add
mov
mov
mov
add
pop
mov
pop
mov
mov
pop
add
ret
movzx
add
lea
shr
sar
cmp
je
mov
call
mov
mov
mov
and
mov
mov
cmp
setae
add
add
add
or
mov
movzx
mov
add
cmp
setae
add
add
add
or
dec
jne
mov
mov
shr
sub
add
pop
mov
mov
or
mov
mov
pop
mov
pop
add
ret
int3
int3
int3
mov
push
mov
cmp
je
push
push
mov
movzx
add
movzx
add
cmp
sbb
movzx
movzx
inc
imul
neg
shl
add
movzx
movzx
cmp
sbb
neg
lea
add
movzx
lea
mov
mov
shr
xor
pop
sub
test
sete
mov
pop
pop
add
mov
mov
ret
lea
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
add
mov
cmp
jbe
mov
lea
push
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
call
pop
pop
mov
movzx
movzx
shl
or
cmp
jne
cmp
jb
mov
mov
pop
ret
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
movzx
mov
movzx
xor
add
cmp
setge
mov
add
mov
add
mov
movzx
add
mov
cmp
jbe
push
mov
call
pop
mov
movzx
movzx
shl
or
cmp
jne
cmp
jb
mov
mov
pop
pop
ret
call
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
setb
add
mov
mov
mov
add
mov
movzx
movzx
shl
or
cmp
jne
cmp
jb
mov
mov
pop
ret
call
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
add
mov
movzx
add
mov
cmp
jbe
push
mov
call
pop
mov
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
push
mov
mov
mov
lea
mov
mov
call
mov
movzx
shl
or
dec
mov
jne
cmp
sbb
pop
neg
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
imul
add
sub
imul
mov
jmp
lea
mov
mov
lea
xor
cmp
jb
cmp
jae
neg
and
mov
mov
mov
call
mov
shl
movzx
shl
or
shl
mov
jmp
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
cmp
push
je
movzx
mov
mov
xor
div
xor
mov
mov
div
mov
movzx
cmp
jae
push
push
call
mov
mov
mov
call
pop
pop
pop
movzx
pop
add
ret
mov
mov
movzx
movzx
add
add
cmp
ja
dec
jne
movzx
cmp
jae
sub
push
push
call
xor
or
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jb
movzx
mov
mov
movzx
movzx
sub
dec
mov
jne
jmp
movzx
push
sub
push
call
mov
mov
mov
call
pop
pop
pop
movzx
pop
add
ret
movzx
movzx
mov
movzx
movzx
movzx
shr
shl
add
mov
sar
and
add
add
mov
xor
div
add
lea
movzx
cmp
jae
push
push
call
movzx
lea
sar
sub
sub
mov
mov
add
mov
mov
mov
call
pop
pop
pop
movzx
pop
add
ret
mov
sub
push
push
call
movzx
lea
sar
sub
movzx
mov
shr
movzx
mov
xor
or
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jb
mov
movzx
mov
mov
lea
mov
movzx
mov
lea
inc
mov
mov
test
je
mov
movzx
cmp
je
movzx
mov
xor
xor
sub
jmp
lea
mov
movzx
movsx
movzx
and
mov
sub
add
add
cmp
jne
lea
push
mov
mov
call
mov
mov
mov
xor
add
div
xor
mov
mov
mov
div
mov
cmp
jb
cmp
jae
sub
push
push
call
mov
mov
add
mov
movzx
dec
mov
jne
or
jmp
pop
pop
pop
mov
pop
add
ret
mov
movzx
lea
cmp
ja
nop
mov
movzx
add
add
cmp
jbe
mov
movzx
push
sub
push
call
mov
mov
cmp
jae
dec
jne
shl
mov
shl
inc
mov
mov
mov
mov
mov
call
pop
pop
pop
movzx
pop
add
ret
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
mov
mov
mov
call
shl
dec
jne
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
lea
xor
cmp
jb
cmp
jae
mov
neg
and
mov
mov
mov
shr
call
shl
shl
jmp
ret
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
cmp
push
mov
je
mov
movzx
cmp
jne
movzx
mov
xor
div
movzx
imul
mov
call
mov
pop
mov
pop
pop
pop
add
jmp
mov
mov
movzx
movzx
mov
movzx
add
cmp
movzx
je
add
dec
jne
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jb
movzx
mov
mov
movzx
sub
dec
mov
jne
movzx
mov
xor
div
mov
sub
mov
imul
mov
add
imul
mov
call
jmp
movzx
mov
xor
div
mov
imul
mov
add
imul
mov
call
mov
pop
mov
pop
pop
pop
add
jmp
movzx
mov
movzx
movzx
movzx
shl
add
mov
sar
and
add
movzx
lea
movzx
add
add
lea
cmp
jne
movzx
mov
shr
imul
mov
call
movzx
lea
sar
sub
sub
mov
pop
mov
mov
pop
pop
pop
add
jmp
movzx
mov
shr
mov
imul
add
mov
sub
imul
mov
call
movzx
lea
sar
sub
movzx
mov
shr
movzx
mov
xor
or
jmp
lea
nop
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jb
movzx
mov
mov
mov
movzx
lea
inc
mov
mov
test
je
mov
movzx
cmp
je
lea
push
mov
call
mov
movzx
mov
mov
xor
inc
jmp
lea
lea
movzx
cmp
je
movzx
movsx
lea
and
add
add
dec
mov
jne
mov
mov
lea
div
mov
imul
add
imul
mov
mov
mov
lea
xor
cmp
jb
cmp
jae
mov
neg
and
mov
mov
mov
shr
call
shl
shl
jmp
mov
mov
add
add
jmp
mov
mov
movzx
movzx
movsx
and
add
add
dec
jne
add
mov
div
mov
movzx
mov
imul
add
imul
mov
jmp
lea
mov
mov
lea
xor
cmp
jb
cmp
jae
mov
neg
and
mov
mov
mov
shr
call
shl
shl
jmp
mov
mov
cmp
jae
dec
jne
shl
mov
shl
inc
mov
mov
mov
mov
call
pop
pop
pop
pop
add
ret
int3
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
mov
mov
push
mov
xor
lea
sub
push
mov
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
mov
test
je
mov
and
mov
mov
mov
lea
and
mov
lea
and
ror
ror
xor
shr
xor
mov
ror
mov
ror
xor
shr
xor
add
add
and
add
lea
add
mov
jmp
mov
mov
mov
mov
and
mov
mov
mov
lea
and
mov
lea
and
ror
ror
xor
mov
ror
xor
lea
and
mov
xor
and
mov
xor
add
add
lea
add
add
mov
lea
and
add
lea
lea
and
mov
add
lea
and
mov
mov
ror
mov
ror
xor
mov
ror
xor
lea
and
mov
mov
or
and
mov
and
or
mov
add
add
mov
inc
add
dec
dec
mov
mov
jne
add
mov
cmp
jb
mov
mov
add
mov
add
mov
add
mov
add
mov
mov
add
add
mov
mov
add
add
pop
pop
pop
pop
add
ret
mov
sub
push
push
push
xor
lea
push
movzx
movzx
shl
add
movzx
shl
add
movzx
shl
add
movzx
mov
movzx
shl
add
movzx
shl
add
movzx
shl
add
movzx
mov
movzx
shl
add
movzx
shl
add
movzx
shl
add
movzx
mov
movzx
shl
add
movzx
shl
add
movzx
shl
add
mov
add
add
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
lea
lea
mov
mov
xor
mov
lea
mov
mov
test
je
lea
and
mov
mov
mov
mov
and
mov
lea
and
ror
ror
xor
shr
xor
mov
ror
mov
ror
xor
shr
xor
add
add
and
add
lea
add
mov
jmp
mov
mov
mov
and
mov
mov
mov
lea
and
mov
lea
and
ror
ror
xor
mov
ror
xor
lea
and
mov
xor
and
mov
xor
add
add
lea
add
add
mov
lea
and
add
lea
lea
and
mov
add
lea
and
mov
mov
ror
mov
ror
xor
mov
ror
xor
lea
and
mov
mov
or
and
mov
and
or
mov
add
add
mov
inc
add
dec
dec
mov
mov
jne
add
mov
cmp
jb
mov
mov
add
mov
add
mov
add
mov
add
mov
mov
add
add
mov
mov
add
add
pop
pop
pop
pop
add
ret
int3
sub
push
push
push
mov
mov
and
cmp
mov
jbe
mov
push
mov
mov
add
add
add
adc
sub
cmp
jne
xor
xor
lea
movzx
movzx
shl
add
movzx
shl
add
movzx
shl
add
movzx
mov
movzx
shl
add
movzx
shl
add
movzx
shl
add
movzx
mov
movzx
shl
add
movzx
shl
add
movzx
shl
add
movzx
mov
movzx
shl
add
movzx
shl
add
movzx
shl
add
mov
add
add
cmp
jb
lea
push
push
call
mov
cmp
ja
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
mov
mov
mov
shld
add
and
add
mov
inc
add
mov
mov
cmp
je
and
jne
push
call
mov
mov
inc
cmp
jne
mov
shld
mov
shl
shld
shr
mov
mov
shl
shld
shr
mov
mov
shl
shld
shr
mov
mov
shl
shld
shr
mov
mov
shl
shld
shr
mov
mov
shr
shr
shr
shl
push
mov
mov
mov
mov
call
movzx
mov
movzx
mov
mov
shr
mov
movzx
mov
movzx
mov
movzx
mov
mov
shr
mov
movzx
mov
movzx
mov
movzx
mov
mov
shr
mov
movzx
mov
movzx
mov
movzx
mov
mov
shr
mov
movzx
mov
movzx
mov
movzx
mov
mov
shr
mov
movzx
mov
movzx
mov
movzx
mov
mov
shr
mov
movzx
mov
movzx
mov
movzx
mov
mov
shr
mov
movzx
mov
movzx
mov
movzx
mov
mov
shr
mov
movzx
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jbe
push
push
push
mov
shr
push
mov
lea
mov
cmp
ja
jae
mov
cmp
jbe
inc
mov
cmp
jae
mov
mov
add
cmp
jbe
dec
mov
jne
pop
cmp
jbe
jmp
lea
mov
cmp
mov
mov
sbb
neg
add
mov
mov
mov
dec
lea
cmp
ja
jae
mov
cmp
jbe
inc
mov
cmp
jae
mov
mov
add
cmp
jbe
mov
cmp
ja
mov
mov
pop
mov
pop
pop
cmp
jbe
mov
cmp
jae
mov
mov
ret
mov
ret
push
mov
mov
test
je
push
call
test
jne
call
test
jne
mov
pop
ret
mov
xor
pop
ret
int3
push
push
call
ret
int3
int3
int3
int3
int3
int3
push
lea
push
push
mov
mov
push
push
push
push
call
add
mov
pop
test
je
xor
ret
call
test
jne
mov
ret
int3
int3
int3
int3
int3
int3
mov
push
call
test
je
xor
ret
call
test
jne
mov
ret
mov
push
call
test
je
xor
ret
call
test
jne
mov
ret
xor
test
push
setne
push
mov
push
push
push
call
mov
pop
test
je
xor
ret
call
test
jne
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
call
mov
pop
test
je
xor
ret
call
test
jne
mov
ret
int3
int3
int3
int3
int3
push
push
push
push
push
mov
call
mov
pop
test
je
xor
ret
call
test
jne
mov
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
push
mov
call
mov
pop
test
je
xor
ret
call
test
jne
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
test
je
xor
ret
call
test
jne
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
push
call
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
mov
xor
mov
mov
shrd
or
mov
shr
mov
inc
or
jne
and
pop
pop
ret
xor
mov
mov
mov
mov
ret
int3
mov
push
mov
mov
mov
mov
call
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
and
jne
xor
ret
dec
mov
imul
mov
shr
add
mov
shl
ret
int3
mov
mov
dec
je
sub
je
sub
jne
add
jmp
or
mov
mov
ret
mov
ret
int3
int3
int3
int3
int3
push
mov
mov
dec
push
mov
je
sub
je
sub
jne
mov
push
lea
call
pop
pop
ret
mov
mov
push
push
mov
mov
call
pop
mov
mov
pop
ret
mov
mov
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
dec
je
sub
je
sub
je
xor
ret
add
call
mov
ret
mov
push
mov
not
not
mov
shrd
shr
mov
shrd
shr
mov
shrd
shr
mov
shrd
shr
mov
shrd
shr
mov
shrd
shr
mov
shrd
shr
mov
pop
mov
ret
mov
not
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
xor
xor
xor
mov
and
add
adc
not
and
not
and
mov
shrd
xor
shr
xor
xor
mov
and
add
adc
shrd
not
and
xor
shr
not
and
xor
mov
and
xor
add
adc
shrd
not
and
xor
shr
not
and
xor
mov
and
xor
add
adc
shrd
not
and
xor
not
shr
and
xor
mov
and
xor
add
adc
shrd
not
and
xor
shr
not
and
xor
mov
and
xor
add
adc
shrd
not
not
and
xor
and
shr
xor
mov
and
xor
add
adc
shrd
not
and
xor
shr
not
and
xor
xor
mov
and
add
adc
shrd
not
not
and
and
shr
xor
xor
mov
mov
inc
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
je
push
push
mov
mov
movzx
xor
shrd
and
xor
shr
xor
inc
dec
jne
mov
pop
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
push
mov
mov
mov
mov
cmp
ja
mov
xor
cmp
jle
lea
mov
mov
mov
and
movzx
cdq
mov
call
or
or
inc
add
test
jns
cmp
jl
pop
pop
pop
xor
pop
pop
ret
jne
cmp
jne
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
jne
cmp
jne
movzx
inc
mov
xor
pop
ret
mov
cmp
jne
mov
add
cmp
ja
jmp
test
je
mov
pop
ret
test
je
mov
pop
ret
test
je
mov
pop
ret
mov
xor
pop
ret
test
jne
xor
pop
ret
pop
add
pop
add
pop
add
int3
int3
int3
int3
xor
cmp
mov
mov
mov
mov
jne
add
jmp
ret
int3
int3
int3
int3
sub
mov
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
push
mov
mov
test
je
jmp
lea
mov
mov
cmp
je
sub
cmp
jbe
mov
mov
push
lea
push
push
call
add
add
add
add
sub
jmp
sub
mov
push
lea
push
lea
push
call
mov
mov
sub
add
mov
mov
cmp
jbe
mov
mov
mov
push
push
lea
push
call
mov
add
add
sub
add
add
mov
je
mov
add
cmp
ja
jmp
cmp
push
mov
lea
push
je
call
mov
jmp
call
mov
jmp
mov
push
mov
lea
push
push
mov
call
jmp
mov
mov
push
push
mov
call
jmp
mov
mov
push
push
mov
call
jmp
mov
mov
push
push
mov
call
jmp
mov
mov
push
push
mov
call
jmp
mov
mov
push
push
mov
call
add
mov
test
jne
cmp
je
mov
mov
mov
test
jne
mov
cmp
jne
cmp
jne
cmp
je
mov
mov
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
mov
jl
inc
add
add
add
add
add
add
inc
and
push
push
push
mov
mov
mov
cmp
jne
test
je
cmp
jne
test
je
cmp
jne
test
je
cmp
jne
test
je
cmp
jne
test
je
cmp
jne
test
je
cmp
jne
test
je
pop
pop
mov
pop
ret
mov
mov
mov
mov
call
test
jne
pop
pop
mov
pop
ret
mov
pop
mov
mov
mov
mov
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
call
mov
mov
pop
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
mov
ret
mov
mov
push
call
ret
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
push
mov
push
mov
push
mov
push
mov
push
call
mov
xor
cmp
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
xor
cmp
jle
push
lea
nop
mov
test
je
mov
test
je
mov
call
inc
add
cmp
jl
pop
mov
mov
test
je
mov
mov
pop
pop
jmp
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
push
lea
mov
push
mov
mov
mov
cmp
jne
test
je
test
jne
pop
lea
pop
ret
mov
push
push
mov
call
pop
pop
ret
mov
mov
mov
call
mov
test
jne
pop
mov
pop
ret
mov
mov
mov
mov
pop
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
jne
mov
mov
mov
call
mov
test
jne
pop
lea
pop
pop
add
ret
cmp
je
mov
push
xor
mov
cmp
jle
lea
lea
mov
test
jne
mov
mov
sub
mov
mov
jmp
mov
mov
mov
shl
add
lea
mov
sub
mov
mov
mov
dec
cmp
jne
mov
sub
mov
mov
mov
jmp
mov
cmp
jne
mov
shl
add
mov
lea
push
push
push
lea
push
mov
push
lea
push
mov
call
mov
xor
cmp
jne
mov
mov
cmp
jne
mov
add
add
jmp
add
mov
dec
cmp
mov
jne
mov
add
add
jmp
mov
mov
mov
mov
test
jne
test
jne
test
je
mov
inc
cmp
jl
cmp
jne
cmp
je
mov
mov
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movzx
movzx
push
mov
lea
shl
or
mov
mov
call
cmp
je
pop
mov
pop
ret
mov
cmp
pop
sbb
and
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
xor
add
adc
shld
add
add
push
pop
cmp
jne
cmp
jne
mov
call
cmp
jne
movzx
movzx
movzx
shl
or
cmp
jne
mov
cmp
jne
cmp
jne
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
movzx
add
push
mov
add
mov
mov
call
cmp
je
pop
pop
mov
pop
add
ret
cmp
je
mov
push
mov
mov
test
je
push
lea
lea
call
test
je
mov
mov
or
lea
je
xor
mov
add
adc
cmp
jb
ja
test
jae
test
je
lea
push
mov
sub
lea
call
test
je
add
movzx
and
inc
mov
mov
test
jle
add
mov
mov
add
mov
push
sub
lea
call
test
je
add
lea
push
mov
sub
lea
call
test
je
mov
add
mov
xor
sub
cmp
ja
mov
jb
cmp
ja
test
ja
jb
cmp
ja
mov
push
lea
push
push
mov
call
mov
add
inc
add
add
mov
cmp
jl
cmp
jae
mov
inc
test
jne
cmp
jb
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
movzx
push
and
mov
mov
inc
mov
cmp
jne
xor
test
jle
mov
shl
lea
lea
mov
mov
cmp
jne
mov
cmp
jne
inc
add
sub
cmp
jl
xor
cmp
setne
mov
test
je
xor
test
jle
lea
nop
mov
test
je
mov
test
je
mov
call
inc
add
cmp
jl
mov
mov
test
je
mov
mov
call
xor
mov
test
jle
mov
mov
shl
lea
mov
mov
push
push
mov
mov
call
test
jne
inc
sub
cmp
jl
mov
test
jle
mov
mov
shl
lea
lea
mov
mov
mov
push
mov
push
mov
call
test
jne
mov
inc
add
sub
mov
cmp
jl
mov
dec
xor
xor
test
jle
lea
mov
mov
mov
mov
inc
dec
add
cmp
jl
cmp
jle
lea
mov
mov
call
inc
add
cmp
jl
xor
pop
pop
pop
pop
add
ret
int3
int3
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
mov
mov
mov
sub
mov
cmp
jne
mov
mov
sub
mov
mov
test
jne
test
je
mov
mov
push
push
push
lea
push
push
lea
push
mov
lea
call
mov
mov
push
lea
mov
call
mov
add
mov
add
add
mov
adc
add
add
add
adc
cmp
jne
mov
cmp
jne
mov
call
xor
xor
add
lea
adc
add
adc
push
push
call
mov
mov
mov
push
push
lea
call
add
push
lea
lea
call
add
mov
mov
adc
add
mov
mov
adc
jmp
test
jne
test
jne
pop
pop
pop
pop
add
ret
xor
cmp
je
cmp
ja
jmp
mov
cmp
jae
cmp
jae
mov
cmp
jne
mov
mov
inc
inc
inc
jmp
lea
lea
call
xor
cmp
jne
lea
mov
call
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
mov
mov
inc
inc
inc
cmp
jne
mov
mov
push
push
lea
call
inc
xor
add
mov
lea
adc
lea
mov
mov
call
lea
call
mov
push
lea
or
call
mov
mov
movzx
lea
mov
jmp
mov
cmp
je
sub
mov
cmp
jbe
mov
mov
push
lea
push
push
call
add
add
add
add
jmp
lea
lea
call
xor
cmp
jne
movzx
mov
mov
mov
mov
and
lea
mov
call
lea
lea
call
test
je
pop
pop
pop
pop
add
ret
mov
add
and
or
je
inc
mov
inc
mov
inc
test
je
pop
pop
pop
mov
pop
add
ret
mov
call
mov
mov
sub
mov
je
mov
cmp
jbe
mov
push
lea
push
push
call
add
add
add
add
jmp
lea
lea
mov
mov
call
test
je
mov
lea
lea
cmp
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
mov
cmp
jne
cmp
jbe
mov
cmp
jne
cmp
jbe
mov
cmp
jmp
mov
cmp
jae
inc
mov
mov
mov
mov
inc
inc
mov
cmp
jmp
mov
mov
mov
mov
cmp
ja
jb
cmp
jae
sub
sbb
xor
cmp
jb
ja
cmp
jbe
mov
mov
push
mov
call
push
lea
mov
mov
call
add
add
add
adc
jmp
and
xor
or
je
mov
mov
movzx
xor
shr
and
xor
mov
add
mov
add
add
mov
adc
add
adc
jmp
add
adc
mov
lea
lea
mov
mov
mov
call
lea
lea
mov
sub
lea
mov
cmp
jne
sub
add
cmp
jae
jmp
cmp
jae
inc
mov
mov
mov
mov
inc
inc
jmp
mov
mov
not
cmp
mov
jmp
mov
mov
mov
sub
cmp
jbe
mov
push
lea
push
push
call
add
add
add
add
cmp
jne
add
mov
mov
mov
adc
mov
mov
movzx
push
push
lea
push
mov
call
test
jne
pop
pop
pop
mov
pop
add
ret
cmp
je
test
jne
mov
mov
jmp
inc
mov
inc
add
adc
jmp
mov
pop
pop
pop
mov
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
mov
pop
pop
pop
mov
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
mov
pop
pop
nop
inc
add
xchg
inc
add
lea
jo
inc
add
inc
add
test
jne
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
push
mov
mov
mov
mov
test
je
mov
mov
push
push
lea
call
lea
test
je
mov
mov
push
push
lea
call
add
movzx
and
inc
test
jle
push
add
mov
nop
mov
mov
push
push
lea
call
add
mov
push
push
lea
call
mov
add
push
lea
push
lea
push
call
add
add
add
dec
jne
mov
pop
test
je
lea
mov
inc
test
jne
mov
shr
mov
lea
mov
call
mov
mov
add
push
lea
mov
call
sub
neg
pop
sbb
pop
and
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
mov
push
push
lea
mov
mov
call
lea
xor
push
lea
or
mov
mov
call
mov
mov
push
lea
mov
call
sub
neg
sbb
and
jne
mov
cmp
jbe
mov
lea
mov
add
mov
mov
push
push
lea
call
mov
mov
mov
push
push
lea
call
mov
add
add
adc
push
lea
call
mov
mov
push
lea
mov
call
sub
neg
sbb
and
jne
mov
mov
add
inc
mov
mov
cmp
jb
mov
mov
and
je
mov
mov
sub
push
lea
mov
mov
call
mov
mov
push
lea
mov
call
sub
neg
sbb
and
jne
add
adc
mov
mov
not
mov
mov
push
lea
mov
call
sub
neg
sbb
and
jne
mov
mov
add
adc
shrd
mov
mov
dec
lea
lea
shr
mov
call
mov
mov
mov
mov
push
lea
mov
call
sub
neg
sbb
and
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmp
push
mov
je
mov
cmp
jne
mov
lea
mov
shl
mov
shr
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
call
mov
test
je
mov
test
je
mov
shl
push
push
push
call
add
mov
mov
call
mov
mov
mov
mov
mov
inc
mov
mov
shl
add
pop
mov
mov
mov
mov
pop
pop
mov
mov
xor
pop
ret
int3
int3
int3
push
mov
push
push
mov
mov
mov
push
push
mov
call
mov
push
lea
mov
mov
call
mov
add
pop
mov
adc
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
push
mov
call
add
adc
pop
ret
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
push
mov
mov
mov
mov
call
xor
cmp
jne
movzx
mov
mov
mov
mov
shr
mov
mov
lea
lea
mov
call
mov
mov
mov
push
lea
call
sub
neg
sbb
and
jne
cmp
setne
mov
cmp
je
mov
mov
mov
mov
mov
shl
lea
mov
mov
mov
call
mov
mov
lea
lea
mov
mov
mov
mov
call
cmp
jne
movzx
mov
and
lea
mov
mov
mov
mov
call
mov
mov
mov
push
mov
lea
push
lea
call
test
jne
mov
mov
mov
mov
mov
sub
sbb
xor
mov
mov
mov
test
je
lea
sub
mov
inc
inc
test
jne
lea
lea
call
mov
call
lea
push
lea
lea
call
sub
neg
sbb
and
jne
mov
mov
sub
sbb
mov
push
push
mov
push
push
mov
mov
call
test
jne
mov
mov
call
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
sub
push
push
mov
push
lea
mov
call
mov
mov
mov
mov
call
mov
mov
test
jne
lea
jmp
mov
mov
push
mov
push
push
lea
push
lea
call
mov
mov
call
mov
lea
call
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
sub
push
push
mov
lea
call
mov
mov
mov
mov
mov
shr
mov
mov
mov
lea
mov
call
mov
mov
push
lea
mov
call
lea
neg
sbb
and
jne
mov
lea
call
mov
mov
lea
call
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
mov
call
test
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
call
pop
add
ret
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
mov
lea
mov
mov
call
test
jne
movzx
lea
test
jne
mov
mov
pop
pop
mov
xor
pop
add
ret
mov
mov
mov
dec
push
lea
mov
call
test
jne
lea
mov
call
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
xor
xor
xor
push
test
je
mov
add
mov
mov
add
adc
and
add
adc
cmp
jb
ja
cmp
jb
inc
add
mov
mov
cmp
jb
pop
pop
pop
pop
ret
or
or
pop
pop
pop
pop
ret
int3
sub
push
mov
push
cmp
jb
mov
cmp
jne
sub
mov
mov
call
cmp
je
pop
mov
pop
add
ret
lea
push
lea
lea
call
test
je
mov
push
lea
xor
cmp
jne
cmp
jne
lea
cmp
ja
mov
push
mov
mov
call
test
je
mov
mov
mov
mov
mov
shl
call
xor
mov
cmp
jne
pop
pop
pop
lea
pop
add
ret
mov
cmp
jbe
mov
jmp
nop
mov
mov
add
mov
lea
mov
push
sub
add
call
test
je
add
mov
mov
push
sub
lea
call
test
je
mov
add
or
je
mov
add
inc
mov
cmp
jb
test
je
jmp
lea
mov
mov
inc
test
jne
test
jne
mov
sub
pop
neg
pop
sbb
pop
and
pop
add
ret
pop
pop
pop
mov
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
test
jne
mov
cmp
jbe
pop
mov
pop
ret
xor
cmp
jne
cmp
jne
mov
push
mov
mov
call
mov
test
jne
lea
pop
pop
pop
ret
mov
push
push
push
mov
call
mov
test
jne
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
pop
pop
pop
pop
ret
int3
int3
int3
mov
mov
sub
and
xor
or
push
mov
jne
test
jl
jg
cmp
jb
mov
mov
mov
push
mov
mov
call
test
jne
push
push
lea
mov
call
test
jne
mov
push
cmp
jne
cmp
je
xor
xor
add
adc
cmp
jl
jg
cmp
jae
mov
pop
pop
add
ret
lea
mov
test
jg
jl
cmp
ja
cmp
jl
jg
cmp
jbe
mov
jmp
mov
xor
add
adc
mov
mov
neg
adc
neg
mov
mov
mov
push
mov
mov
call
test
jne
push
push
lea
mov
call
test
jne
test
js
lea
jmp
lea
cmp
jne
dec
jns
test
jne
cmp
jg
jl
cmp
jae
pop
mov
pop
add
ret
test
jne
mov
cdq
add
mov
adc
mov
test
jg
jl
cmp
jb
sub
sbb
mov
mov
mov
push
mov
mov
call
test
jne
push
push
lea
mov
call
test
jne
mov
cmp
jne
cmp
jne
movzx
movzx
mov
shl
or
mov
cmp
jbe
pop
mov
pop
add
ret
mov
lea
call
cmp
jne
mov
xor
add
adc
shld
add
add
mov
sub
mov
sbb
mov
mov
mov
push
mov
mov
call
test
jne
mov
mov
push
push
push
push
push
call
test
jne
mov
call
mov
add
mov
mov
adc
add
adc
mov
and
cmp
je
cmp
ja
jb
test
jae
cmp
ja
jb
test
jae
neg
adc
neg
mov
mov
mov
push
mov
mov
call
test
jne
lea
call
lea
lea
mov
call
test
jne
mov
mov
cmp
pop
sete
pop
dec
and
add
ret
pop
mov
pop
add
ret
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
mov
mov
mov
ret
int3
int3
int3
int3
int3
push
push
push
mov
xor
mov
cmp
jbe
push
xor
mov
add
mov
call
inc
add
cmp
jb
pop
mov
mov
mov
call
xor
pop
mov
mov
mov
pop
pop
ret
int3
int3
int3
sub
push
push
push
push
mov
xor
xor
xor
xor
xor
mov
mov
mov
cmp
jl
mov
add
shr
add
inc
lea
add
adc
add
adc
add
dec
jne
mov
mov
cmp
jae
mov
lea
mov
xor
add
adc
pop
add
adc
pop
pop
pop
add
ret
mov
mov
add
adc
pop
add
adc
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
xor
push
push
push
mov
mov
mov
mov
cmp
jbe
mov
add
mov
lea
mov
xor
xor
xor
test
je
mov
nop
mov
mov
add
adc
cmp
jb
ja
cmp
jb
inc
add
mov
mov
cmp
jb
jmp
or
or
mov
mov
mov
add
adc
cmp
jb
ja
cmp
jb
mov
inc
add
mov
mov
mov
mov
cmp
jb
mov
mov
pop
pop
pop
pop
add
ret
pop
pop
pop
or
or
pop
add
ret
int3
int3
sub
push
push
push
mov
mov
mov
xor
push
lea
mov
mov
mov
mov
call
cmp
jne
mov
mov
mov
mov
push
lea
mov
call
mov
push
lea
push
call
mov
mov
mov
mov
test
jne
lea
mov
cmp
jne
mov
shr
lea
mov
lea
add
add
add
mov
call
mov
test
je
mov
mov
lea
add
add
add
push
push
push
mov
call
mov
mov
mov
add
call
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
or
je
mov
push
mov
mov
call
test
jne
mov
test
je
mov
sub
mov
sbb
push
push
push
push
mov
call
test
jne
lea
call
push
lea
push
call
mov
mov
mov
mov
test
je
pop
pop
pop
pop
add
ret
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
shr
mov
shr
push
add
xor
mov
mov
test
je
mov
mov
inc
add
cmp
jb
cmp
jae
mov
sub
lea
mov
push
xor
mov
div
mov
test
jne
movzx
mov
and
movzx
mov
shr
movzx
shl
or
mov
shr
shr
and
movzx
and
movzx
shl
or
mov
shl
xor
or
jmp
cmp
jbe
cmp
jne
mov
shr
and
movzx
mov
shr
movzx
shl
or
mov
shr
and
movzx
shl
and
movzx
or
shl
or
mov
mov
xor
mov
inc
add
mov
cmp
jb
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
lea
xor
test
je
push
jmp
lea
mov
mov
shr
and
movzx
mov
mov
shr
and
movzx
xor
mov
shr
movzx
xor
and
movzx
xor
inc
mov
cmp
jb
pop
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
mov
xor
xor
mov
mov
mov
xor
push
mov
xor
mov
shr
mov
shr
and
and
mov
xor
mov
shr
xor
mov
and
xor
mov
mov
shr
and
shr
and
mov
mov
mov
xor
mov
shr
xor
mov
and
xor
mov
shr
mov
and
mov
shr
xor
xor
and
xor
mov
shr
xor
mov
shr
and
mov
shr
and
xor
mov
shr
xor
mov
add
and
xor
and
xor
xor
xor
dec
mov
mov
je
mov
mov
shr
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
shr
and
shr
and
mov
mov
mov
xor
mov
shr
xor
mov
and
xor
mov
shr
and
shr
and
mov
mov
mov
xor
mov
shr
xor
mov
xor
and
xor
mov
xor
shr
and
xor
shr
and
mov
mov
mov
xor
mov
shr
xor
and
xor
mov
xor
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
add
xor
mov
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
shr
xor
and
mov
mov
mov
shr
and
xor
shr
xor
mov
and
xor
xor
dec
jne
mov
shr
and
movzx
mov
shr
movzx
shl
or
shl
mov
shr
and
movzx
or
shl
mov
and
movzx
or
xor
mov
mov
mov
shr
movzx
shl
mov
shr
and
movzx
or
shl
mov
shr
and
movzx
or
shl
mov
and
movzx
or
xor
mov
mov
mov
shr
and
movzx
mov
shr
movzx
shl
or
mov
shr
and
movzx
shl
or
mov
and
movzx
shl
or
xor
mov
mov
shr
movzx
shr
and
movzx
shr
shl
and
movzx
or
shl
or
and
movzx
shl
or
xor
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
shl
mov
xor
mov
xor
lea
mov
xor
mov
push
mov
xor
shr
mov
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
shr
mov
shr
and
and
mov
xor
mov
shr
xor
mov
and
xor
mov
shr
mov
and
mov
shr
xor
xor
and
xor
mov
shr
xor
mov
shr
and
mov
shr
and
xor
mov
shr
xor
mov
sub
and
xor
and
xor
xor
xor
dec
mov
mov
je
mov
mov
shr
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
shr
and
shr
and
mov
mov
mov
xor
mov
shr
xor
mov
and
xor
mov
shr
and
shr
and
mov
mov
mov
xor
mov
shr
xor
mov
xor
and
xor
mov
xor
shr
and
xor
shr
and
mov
mov
mov
xor
mov
shr
xor
and
xor
mov
xor
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
sub
xor
mov
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
shr
xor
and
mov
mov
mov
shr
and
xor
shr
xor
mov
and
xor
xor
dec
jne
mov
shr
and
movzx
mov
shr
movzx
shl
or
shl
mov
shr
and
movzx
or
shl
mov
and
movzx
or
xor
mov
mov
mov
shr
movzx
shl
mov
shr
and
movzx
or
shl
mov
shr
and
movzx
or
shl
mov
and
movzx
or
xor
mov
mov
mov
shr
and
movzx
mov
shr
movzx
shl
or
mov
shr
and
movzx
shl
or
mov
and
movzx
shl
or
xor
mov
mov
shr
movzx
shr
and
movzx
shr
shl
and
movzx
or
shl
or
and
movzx
shl
or
xor
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
je
push
push
lea
mov
xor
mov
xor
mov
xor
mov
xor
push
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
add
dec
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
push
lea
mov
mov
mov
mov
mov
lea
mov
push
lea
lea
mov
mov
call
mov
xor
add
mov
mov
xor
mov
mov
xor
mov
mov
mov
xor
dec
mov
mov
mov
mov
mov
mov
mov
jne
pop
pop
pop
pop
add
ret
int3
int3
sub
cmp
push
push
mov
mov
je
push
push
mov
add
jne
add
lea
push
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
xor
nop
movzx
movzx
xor
xor
movzx
movzx
xor
xor
add
add
cmp
jl
sub
jne
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
xor
movzx
mov
inc
cmp
jb
push
push
push
push
xor
lea
movzx
mov
and
movzx
neg
sbb
and
lea
xor
and
mov
xor
mov
shl
or
shl
or
shl
or
mov
movzx
mov
shl
mov
or
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
mov
shl
or
mov
and
movzx
neg
sbb
mov
and
lea
xor
and
mov
and
movzx
neg
sbb
and
lea
xor
and
mov
and
movzx
neg
sbb
and
lea
xor
and
mov
mov
mov
xor
xor
xor
mov
xor
mov
xor
xor
shl
or
shl
or
shl
or
mov
mov
shl
or
shl
or
shl
or
mov
mov
shl
or
shl
or
shl
shl
or
or
shl
shl
or
or
mov
mov
inc
cmp
jb
mov
mov
mov
call
pop
pop
pop
pop
test
je
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
mov
push
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
or
call
not
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
mov
and
dec
not
and
mov
shr
xor
mov
and
dec
not
and
shr
xor
mov
and
dec
shr
not
and
xor
mov
and
dec
not
and
shr
xor
mov
and
dec
shr
not
and
xor
mov
and
dec
not
and
shr
xor
mov
and
dec
shr
not
and
xor
mov
and
dec
not
and
shr
xor
mov
inc
cmp
jb
cmp
jae
lea
mov
mov
and
shr
xor
inc
mov
cmp
jb
mov
call
test
jne
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
cmp
jae
shrd
shr
ret
mov
xor
and
shr
ret
xor
xor
ret
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
push
mov
push
push
push
push
call
mov
mov
push
call
push
call
push
push
push
mov
push
call
push
push
mov
call
push
call
add
xor
cmp
pop
pop
sete
dec
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
mov
push
push
call
push
call
mov
lea
push
push
push
call
push
push
mov
call
push
call
add
mov
pop
pop
pop
ret
push
mov
push
push
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
leave
ret
pop
pop
xchg
jmp
pop
pop
xchg
jmp
push
mov
push
push
push
push
push
mov
mov
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
cld
mov
xor
push
push
push
push
push
push
push
push
call
add
mov
pop
pop
pop
mov
mov
pop
ret
push
mov
sub
mov
and
mov
mov
mov
mov
inc
mov
mov
mov
mov
lea
mov
push
push
push
call
mov
mov
mov
mov
leave
ret
push
mov
cld
mov
push
push
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
push
push
push
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
and
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
push
mov
push
call
call
pop
pop
and
cmp
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
cld
mov
mov
and
test
je
mov
mov
push
pop
jmp
push
mov
push
mov
push
mov
push
push
push
mov
push
push
call
add
mov
cmp
jne
push
push
call
mov
mov
mov
jmp
push
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
cmp
push
mov
mov
mov
mov
mov
mov
jl
cmp
jne
call
mov
dec
lea
cmp
lea
jge
cmp
jle
cmp
jne
mov
dec
mov
mov
cmp
jge
mov
mov
inc
mov
mov
mov
cmp
ja
cmp
jbe
call
lea
pop
pop
lea
pop
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
push
mov
push
mov
call
mov
pop
test
je
push
call
pop
push
call
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
mov
lea
push
push
push
push
call
pop
pop
leave
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
inc
inc
dec
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
dec
pop
pop
ret
push
call
push
call
mov
pop
mov
mov
sub
add
cmp
jae
push
call
add
push
push
call
add
test
jne
xor
jmp
mov
sub
mov
sar
lea
mov
mov
mov
add
mov
call
mov
pop
ret
push
call
neg
sbb
pop
neg
dec
ret
push
call
test
pop
mov
jne
push
call
mov
pop
and
mov
mov
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
inc
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
inc
add
mov
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
inc
add
mov
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
mov
inc
add
add
add
add
add
add
inc
mov
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
mov
inc
add
mov
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
xor
mov
mov
mov
mov
cmp
jge
mov
mov
call
add
mov
inc
jmp
mov
or
call
mov
mov
pop
pop
pop
leave
ret
cmp
jne
push
push
push
push
call
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
and
mov
mov
imul
add
and
dec
js
sub
mov
call
jmp
mov
or
call
mov
mov
pop
pop
pop
leave
ret
cmp
jne
push
push
push
push
call
ret
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
and
dec
js
mov
sub
mov
call
jmp
push
call
pop
ret
mov
or
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
xchg
mul
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jne
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
or
call
mov
test
je
jmp
push
call
pop
ret
cmp
jne
mov
test
je
lea
and
jmp
push
pop
mov
cmp
ja
push
call
pop
mov
mov
shr
push
call
pop
mov
or
call
mov
test
jne
push
jmp
mov
push
call
pop
ret
mov
test
jne
push
pop
add
and
push
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
test
je
mov
cmp
jne
push
call
pop
and
push
call
pop
mov
test
je
push
push
call
pop
pop
or
call
cmp
jmp
push
call
pop
ret
cmp
jne
push
call
pop
mov
lea
push
lea
push
push
call
add
mov
test
je
push
push
push
call
add
or
call
cmp
jne
push
jmp
push
call
pop
ret
push
push
push
call
mov
mov
pop
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
lea
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
ret
push
mov
push
or
test
je
and
jmp
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
push
mov
push
or
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
and
mov
pop
pop
ret
push
mov
push
push
call
dec
pop
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
push
call
pop
mov
pop
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
push
mov
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
push
xor
xor
call
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
push
call
mov
pop
pop
mov
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
mov
push
push
call
pop
pop
inc
cmp
jl
push
call
cmp
pop
mov
je
mov
pop
pop
pop
ret
push
mov
push
push
call
dec
pop
js
mov
mov
movzx
mov
inc
jmp
push
push
call
pop
mov
pop
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
cmp
jae
shld
shl
ret
mov
xor
and
shl
ret
xor
xor
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
inc
inc
add
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
mov
inc
mov
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
mov
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
enter
enter
enter
enter
enter
enter
enter
enter
inc
mov
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
enter
enter
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
cmp
lea
je
mov
inc
inc
test
jne
sub
sar
dec
ret
push
mov
cmp
jne
xor
pop
ret
dec
mov
mov
je
mov
test
je
cmp
jne
inc
inc
inc
inc
dec
jne
movzx
movzx
sub
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
push
pop
mov
add
and
mov
push
push
push
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
push
call
push
push
call
add
or
call
cmp
jne
cmp
jne
push
pop
add
and
mov
push
push
push
push
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
mov
mov
xor
push
call
pop
ret
cmp
jne
cmp
ja
cmp
jbe
add
and
jmp
push
pop
mov
mov
cmp
ja
push
call
pop
mov
lea
push
lea
push
push
call
add
mov
mov
test
je
cmp
jae
mov
shr
push
push
push
push
call
add
test
je
mov
mov
jmp
push
call
pop
mov
test
je
movzx
shl
mov
cmp
jb
mov
push
push
push
call
push
push
push
call
add
mov
cmp
jne
push
push
push
call
mov
test
je
movzx
shl
mov
cmp
jb
mov
push
push
push
call
push
push
push
call
add
jmp
push
push
push
push
call
mov
or
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
mov
mov
push
call
pop
xor
ret
xor
cmp
ja
cmp
jne
push
pop
add
and
push
push
push
push
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
push
mov
push
push
push
push
xor
call
mov
pop
test
pop
je
push
call
pop
mov
push
or
mov
mov
push
mov
push
push
push
push
call
test
jne
call
mov
push
call
test
pop
je
push
call
pop
xor
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
push
call
mov
test
je
mov
mov
mov
mov
mov
push
call
pop
jmp
mov
push
push
call
test
jne
push
call
pop
call
mov
mov
test
je
call
and
push
call
push
call
pop
or
xor
mov
mov
pop
pop
pop
leave
ret
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
mov
test
je
call
push
call
mov
test
jne
push
call
pop
push
call
pop
push
call
pop
ret
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
and
call
call
mov
call
mov
call
call
call
mov
mov
push
push
push
call
add
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
je
call
push
call
push
call
pop
pop
ret
cmp
je
call
push
call
pop
push
call
ret
push
mov
push
call
test
pop
je
cmp
jne
xor
jmp
cmp
jne
push
pop
inc
test
jne
cmp
push
push
lea
mov
jne
push
call
test
pop
mov
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
or
push
pop
pop
pop
pop
ret
xor
pop
ret
cmp
push
je
mov
test
je
push
call
and
and
and
and
pop
pop
ret
push
mov
push
push
push
push
mov
imul
mov
mov
test
mov
mov
jne
xor
jmp
mov
test
je
mov
mov
jmp
mov
mov
and
je
mov
test
je
cmp
mov
jb
mov
push
push
push
call
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
test
pop
jne
cmp
je
mov
xor
div
mov
sub
jmp
mov
push
push
push
call
add
cmp
je
add
sub
cmp
jb
mov
jmp
mov
push
movsx
push
call
pop
cmp
pop
je
inc
mov
dec
mov
test
jg
mov
test
jne
mov
pop
pop
pop
leave
ret
or
mov
jmp
mov
sub
xor
div
jmp
push
mov
sub
push
push
mov
xor
push
mov
mov
inc
test
mov
mov
mov
je
mov
mov
jmp
mov
mov
mov
cmp
jl
cmp
jl
cmp
jg
movsx
mov
and
jmp
xor
movsx
sar
cmp
mov
ja
jmp
xor
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
lea
push
call
test
pop
mov
jge
or
neg
mov
jmp
mov
movsx
lea
lea
jmp
and
jmp
cmp
jne
lea
push
call
test
pop
mov
jge
or
jmp
mov
movsx
lea
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
jmp
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
and
mov
and
movzx
test
je
lea
push
push
movsx
push
call
mov
add
inc
mov
lea
push
push
movsx
push
call
add
jmp
movsx
cmp
jg
cmp
jge
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
sub
jne
test
jne
or
cmp
mov
je
mov
lea
push
call
test
pop
mov
mov
je
test
jne
mov
mov
mov
mov
mov
dec
test
je
cmp
je
inc
inc
jmp
mov
add
or
cmp
lea
mov
jge
mov
jmp
test
jne
or
test
lea
push
je
call
push
lea
push
call
add
mov
test
jge
mov
jmp
sub
je
sub
je
dec
je
jmp
call
pop
mov
mov
lea
mov
jmp
lea
push
call
test
pop
je
mov
test
je
test
je
movsx
shr
mov
mov
mov
jmp
and
mov
movsx
jmp
mov
mov
push
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
pop
mov
je
mov
mov
jmp
mov
mov
push
add
mov
push
mov
mov
mov
mov
movsx
push
lea
push
push
call
mov
add
and
je
cmp
jne
push
call
pop
cmp
jne
test
jne
push
call
pop
cmp
jne
or
inc
mov
push
call
pop
jmp
sub
je
sub
je
dec
je
dec
je
sub
je
dec
dec
je
sub
jne
mov
jmp
sub
sar
jmp
test
jne
mov
mov
mov
mov
dec
test
je
cmp
je
inc
jmp
sub
jmp
mov
mov
test
mov
je
mov
mov
add
mov
mov
jmp
test
mov
je
or
jmp
lea
push
call
test
pop
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
test
je
lea
push
call
pop
jmp
test
je
test
lea
push
je
call
pop
movsx
cdq
jmp
call
pop
movzx
jmp
test
lea
push
je
call
pop
jmp
call
pop
xor
test
je
test
jg
jl
test
jae
neg
adc
mov
neg
or
mov
jmp
mov
mov
test
jne
and
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
mov
dec
test
jg
mov
or
je
mov
cdq
mov
mov
push
push
push
push
call
push
push
push
mov
add
push
call
cmp
mov
mov
jle
add
mov
dec
mov
jmp
lea
sub
inc
test
mov
je
mov
cmp
jne
test
jne
dec
inc
mov
mov
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
lea
push
push
push
push
call
add
lea
push
lea
push
push
push
call
add
test
je
test
jne
lea
push
push
push
push
call
add
cmp
je
cmp
jle
mov
mov
lea
mov
inc
push
lea
push
inc
call
pop
test
pop
jle
lea
push
push
push
lea
push
call
add
mov
dec
test
jne
jmp
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
cmp
je
push
call
and
pop
mov
mov
inc
test
mov
jne
mov
pop
pop
pop
leave
ret
stc
rol
leave
rol
out
inc
add
rol
imul
inc
add
aam
add
in
mov
dec
js
mov
mov
mov
inc
movzx
jmp
push
push
call
pop
pop
cmp
mov
jne
or
pop
ret
inc
pop
ret
push
push
mov
mov
dec
test
jle
mov
push
push
push
call
add
cmp
je
mov
dec
test
jg
pop
pop
ret
push
mov
mov
dec
push
push
test
jle
mov
mov
movsx
push
inc
push
push
call
add
cmp
je
mov
dec
test
jg
pop
pop
pop
ret
mov
add
mov
mov
ret
mov
add
mov
mov
mov
ret
mov
add
mov
mov
ret
push
mov
push
mov
push
mov
cmp
je
call
mov
test
je
cmp
je
cmp
jne
push
push
push
push
call
add
jmp
cmp
je
cmp
jne
cmp
jbe
mov
mov
test
je
movzx
push
push
push
push
push
push
push
push
call
add
jmp
push
push
push
push
push
push
push
push
call
add
push
pop
pop
pop
pop
ret
push
mov
sub
mov
and
mov
cmp
mov
jl
mov
cmp
jl
call
push
push
mov
mov
push
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
call
cmp
je
call
mov
call
mov
push
push
mov
mov
call
pop
test
pop
jne
call
cmp
jne
cmp
jne
cmp
jne
cmp
jne
call
cmp
jne
cmp
jne
cmp
jne
mov
lea
push
lea
push
push
push
push
call
add
mov
mov
cmp
jae
cmp
jg
cmp
jg
mov
mov
mov
test
mov
jle
mov
mov
lea
mov
test
mov
jle
push
push
push
call
add
test
jne
dec
add
cmp
jg
dec
add
cmp
jg
jmp
push
push
push
push
push
push
push
push
push
push
push
call
add
mov
inc
add
jmp
cmp
je
push
push
call
pop
pop
pop
pop
pop
leave
ret
cmp
jne
push
push
push
push
push
push
push
push
call
add
jmp
jmp
push
mov
push
push
push
push
call
cmp
je
push
push
push
push
push
push
push
call
add
test
jne
mov
lea
push
lea
push
push
push
push
call
add
mov
mov
cmp
jae
cmp
jl
cmp
jg
mov
mov
shl
add
mov
test
je
cmp
jne
push
add
push
push
push
push
push
push
push
push
push
push
call
add
inc
add
jmp
pop
pop
leave
ret
push
push
mov
mov
test
je
cmp
lea
je
mov
mov
cmp
je
add
push
push
call
pop
test
pop
jne
test
je
test
je
mov
mov
test
je
test
je
test
je
test
jne
xor
jmp
push
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
cmp
je
cmp
jle
cmp
jl
call
and
mov
mov
test
je
push
push
push
call
or
jmp
push
call
pop
ret
mov
or
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
cmp
je
xor
ret
jmp
push
mov
cmp
push
mov
push
push
mov
je
push
push
push
push
call
add
cmp
push
jne
push
jmp
push
call
mov
push
push
push
push
call
mov
push
push
inc
mov
push
push
push
push
push
call
add
test
je
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
and
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
and
mov
push
push
push
push
push
call
add
mov
and
or
call
mov
mov
mov
pop
pop
pop
leave
ret
push
call
pop
ret
mov
and
push
lea
push
call
pop
pop
xor
jmp
mov
mov
mov
mov
call
mov
mov
call
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
je
call
push
push
call
pop
pop
ret
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
push
pop
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
test
je
cmp
je
mov
test
je
mov
lea
and
test
je
mov
push
push
call
pop
pop
test
je
push
push
call
pop
pop
test
je
mov
mov
mov
add
push
push
call
pop
pop
mov
jmp
mov
test
je
mov
push
push
call
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
push
call
add
cmp
jne
mov
test
je
add
push
jmp
cmp
mov
push
push
jne
call
pop
pop
test
je
push
push
call
pop
pop
test
je
push
add
push
push
call
pop
pop
push
push
call
add
jmp
call
pop
pop
test
je
push
push
call
pop
pop
test
je
push
call
pop
test
je
test
je
push
lea
push
push
call
pop
pop
push
push
push
call
jmp
lea
push
push
call
pop
pop
push
push
push
call
jmp
call
or
mov
mov
pop
pop
pop
leave
ret
push
pop
ret
mov
jmp
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
mov
test
je
mov
mov
test
je
and
push
push
call
or
mov
mov
pop
pop
pop
leave
ret
xor
cmp
setne
ret
mov
jmp
mov
push
mov
mov
mov
add
test
jl
mov
mov
mov
add
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
add
mov
mov
push
push
mov
mov
call
push
push
call
pop
pop
mov
pop
mov
push
mov
cmp
jne
mov
push
call
pop
pop
pop
leave
ret
push
call
call
cmp
mov
je
push
push
call
mov
pop
test
pop
je
push
push
call
test
je
push
call
pop
call
or
push
mov
pop
pop
ret
xor
pop
ret
mov
mov
mov
ret
push
push
call
push
mov
call
mov
test
jne
push
push
call
mov
pop
test
pop
je
push
push
call
test
je
push
call
pop
call
or
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
mov
cmp
je
push
mov
test
jne
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
push
push
call
pop
ret
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
xor
mov
call
cmp
je
mov
call
call
mov
jmp
push
pop
ret
mov
and
or
call
jmp
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
and
mov
test
je
mov
call
jmp
push
pop
ret
mov
and
or
call
jmp
push
mov
push
call
push
call
push
call
push
call
pop
ret
push
mov
mov
push
cmp
lea
jne
push
push
call
mov
pop
test
jne
push
call
pop
push
call
cmp
pop
push
jne
call
mov
jmp
call
pop
push
call
pop
pop
push
call
pop
pop
ret
push
mov
mov
push
call
pop
ret
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
inc
ret
mov
test
je
mov
inc
cmp
jne
inc
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
mov
mov
cmp
jne
cmp
jne
cmp
jne
jmp
mov
test
je
push
call
test
pop
je
push
call
jmp
xor
pop
ret
push
call
mov
ret
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
call
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
je
call
pop
ret
push
mov
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jne
push
call
pop
and
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
or
call
cmp
jmp
mov
push
call
pop
ret
cmp
jne
push
call
pop
mov
lea
push
lea
push
push
call
add
mov
test
je
movzx
shl
mov
jmp
mov
or
call
cmp
jne
push
push
push
call
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
call
pop
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
push
mov
push
and
call
cmp
jne
mov
test
je
add
mov
mov
mov
mov
pop
ret
push
mov
mov
call
lea
push
push
mov
call
test
je
cmp
jne
cmp
jb
push
pop
jmp
lea
push
push
push
call
test
je
xor
lea
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
push
push
call
add
test
jne
lea
jmp
lea
push
push
push
call
cmp
lea
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
lea
push
call
pop
pop
cmp
je
push
push
call
pop
cmp
pop
je
inc
mov
cmp
je
cmp
jne
mov
jmp
inc
cmp
jne
push
push
push
call
add
cmp
je
cmp
je
cmp
je
lea
push
call
cmp
pop
sbb
add
pop
leave
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
cmp
mov
jne
push
call
pop
jmp
cmp
jne
call
test
jne
push
call
xor
ret
push
pop
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
push
mov
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
push
push
mov
mov
push
mov
add
sub
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
mov
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
mov
shr
lea
not
and
dec
jne
mov
and
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
and
dec
jne
mov
and
jmp
lea
mov
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
mov
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
cmp
push
push
push
push
jne
mov
jmp
push
push
push
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
mov
push
push
push
call
test
je
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
xor
mov
xor
cmp
setge
dec
and
dec
inc
mov
mov
add
cmp
jl
push
push
push
call
add
mov
add
cmp
jae
or
lea
mov
mov
add
jmp
mov
jmp
push
push
push
call
cmp
je
push
push
push
call
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
push
call
pop
ret
or
pop
ret
push
mov
push
push
push
mov
push
cmp
je
and
lea
mov
cmp
jne
mov
push
add
push
push
call
test
je
or
dec
mov
test
je
cmp
jbe
mov
inc
dec
je
sub
sub
test
jge
cmp
mov
mov
je
cmp
jne
push
lea
pop
cmp
jne
inc
add
cmp
jl
cmp
jne
push
call
pop
cmp
je
cmp
jg
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
pop
sar
lea
ret
xor
pop
ret
mov
mov
sub
sar
lea
mov
movzx
add
and
cmp
mov
jne
inc
cmp
jne
push
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
lea
add
cmp
mov
jb
jmp
mov
mov
mov
lea
mov
cmp
mov
jae
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
add
add
cmp
jb
jmp
mov
mov
cmp
je
jmp
mov
sub
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
cmp
je
jmp
mov
and
mov
mov
sub
sub
sar
shl
add
cmp
jne
cmp
jge
add
inc
cmp
je
mov
push
shl
push
push
push
mov
call
cmp
jne
push
push
push
call
mov
add
test
mov
jle
lea
mov
or
lea
mov
mov
mov
mov
mov
add
add
dec
jne
mov
lea
cmp
jae
cmp
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzx
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
and
lea
mov
lea
jmp
add
cmp
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzx
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzx
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
push
movzx
push
mov
and
mov
sub
sar
cmp
lea
jbe
mov
sub
mov
add
mov
jmp
jae
mov
lea
lea
cmp
ja
lea
cmp
jae
cmp
jne
inc
jmp
cmp
jne
mov
mov
mov
cmp
ja
cmp
jbe
lea
cmp
jae
xor
mov
cmp
jne
inc
cmp
je
mov
jmp
and
lea
mov
sub
add
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
and
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
and
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
lea
mov
mov
mov
mov
mov
add
inc
inc
cmp
jl
xor
mov
lea
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
imul
mov
mov
cmp
ja
xor
cmp
jne
push
pop
add
and
mov
jmp
xor
mov
cmp
ja
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
or
call
cmp
je
push
jmp
xor
mov
push
call
pop
ret
cmp
jne
cmp
ja
push
call
pop
mov
mov
shr
push
call
pop
mov
or
call
cmp
je
push
push
push
call
add
cmp
jne
push
push
push
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
push
call
pop
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
push
push
xor
call
pop
push
pop
cmp
jle
push
mov
mov
shl
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
mov
add
push
call
mov
push
call
mov
pop
and
inc
cmp
jl
pop
push
call
pop
mov
pop
pop
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
test
je
push
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
call
mov
call
and
or
pop
ret
push
mov
push
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
and
sar
pop
mov
lea
and
test
je
push
call
pop
or
jmp
xor
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
push
push
push
call
add
mov
test
je
cmp
je
mov
test
jne
mov
push
cmp
je
mov
sar
and
mov
lea
lea
jmp
mov
mov
pop
and
cmp
jne
or
mov
cmp
jne
mov
test
je
test
jne
mov
mov
dec
mov
movzx
inc
mov
pop
ret
neg
sbb
and
add
or
and
or
pop
ret
push
mov
cmp
push
push
jae
mov
sar
lea
mov
and
lea
mov
shl
test
je
push
call
mov
pop
test
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
test
je
call
mov
call
mov
or
push
call
pop
mov
jmp
call
mov
or
pop
pop
pop
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
test
je
push
push
call
push
push
push
call
push
mov
call
add
mov
pop
pop
ret
call
mov
call
and
or
pop
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
jne
xor
jmp
mov
sar
lea
mov
and
lea
mov
shl
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
call
mov
call
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
or
jmp
mov
test
je
mov
cmp
je
call
mov
call
mov
jmp
sub
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
mov
test
je
test
jne
test
je
and
test
je
mov
and
mov
mov
mov
and
and
and
or
test
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
test
push
je
mov
mov
sub
lea
mov
mov
dec
test
mov
jle
push
push
push
call
add
mov
jmp
cmp
je
mov
mov
sar
and
mov
lea
lea
jmp
mov
test
je
push
push
push
call
add
mov
mov
mov
jmp
push
lea
pop
push
push
push
call
add
mov
cmp
pop
je
or
jmp
mov
and
jmp
or
mov
or
pop
pop
pop
ret
push
call
mov
xor
mov
mov
cmp
je
add
inc
cmp
jb
cmp
jb
cmp
ja
call
mov
pop
ret
call
mov
pop
mov
ret
cmp
jb
cmp
ja
call
mov
pop
ret
call
mov
pop
ret
call
add
ret
call
add
ret
push
mov
push
push
push
call
mov
push
push
call
pop
test
pop
je
mov
test
mov
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
shl
mov
add
and
mov
mov
inc
add
cmp
jl
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
leave
ret
mov
mov
push
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jb
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
mov
cmp
jb
xor
ret
mov
and
sar
lea
mov
mov
and
ret
push
mov
push
push
mov
push
push
call
mov
xor
cmp
je
push
call
push
call
pop
push
pop
push
push
call
pop
mov
test
pop
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
pop
ret
push
mov
mov
test
jne
pop
ret
cmp
jne
mov
cmp
ja
push
mov
pop
pop
ret
lea
and
push
push
push
push
lea
push
push
push
push
call
test
je
cmp
je
call
mov
or
pop
ret
push
push
pop
push
push
call
test
je
xor
mov
pop
ret
push
push
pop
push
push
call
test
je
xor
mov
pop
ret
push
push
pop
push
call
test
je
xor
mov
pop
ret
push
call
push
call
pop
pop
push
call
push
push
push
push
call
add
ret
push
mov
sub
push
and
push
push
mov
mov
lea
mov
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
or
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
div
mov
mov
cmp
movzx
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
sub
jmp
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
push
call
pop
mov
sub
cmp
jae
mov
or
cmp
jb
jne
or
xor
div
cmp
jbe
or
jmp
imul
add
mov
mov
inc
mov
jmp
mov
dec
mov
test
jne
test
je
mov
mov
and
jmp
test
mov
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
call
test
mov
je
or
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
test
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
mov
push
cmp
push
jae
mov
sar
lea
mov
and
lea
mov
shl
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
lea
mov
test
lea
je
mov
ret
call
mov
call
and
or
ret
mov
push
mov
and
sar
push
push
mov
lea
lea
shl
add
cmp
jne
push
call
cmp
pop
jne
lea
push
call
inc
push
call
pop
mov
lea
push
call
pop
pop
pop
ret
mov
mov
and
sar
lea
mov
lea
push
call
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
test
je
push
push
call
push
push
push
call
push
mov
call
add
mov
pop
pop
ret
call
mov
call
and
or
pop
ret
push
mov
sub
and
cmp
push
mov
push
push
mov
je
mov
mov
and
sar
lea
mov
lea
shl
add
mov
test
jne
test
je
mov
cmp
je
dec
mov
mov
lea
mov
mov
lea
push
push
mov
push
push
push
call
test
jne
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
je
push
call
pop
or
jmp
mov
mov
add
lea
mov
test
je
test
je
cmp
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
inc
jmp
dec
cmp
jae
mov
inc
cmp
jne
add
jmp
mov
inc
mov
jmp
lea
push
push
inc
lea
push
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
mov
cmp
je
mov
mov
inc
mov
jmp
cmp
jne
cmp
jne
mov
jmp
push
push
push
call
add
cmp
je
mov
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
xor
pop
pop
pop
leave
ret
inc
push
call
pop
mov
test
mov
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
test
je
push
push
call
push
push
push
call
push
mov
call
add
mov
pop
pop
ret
call
mov
call
and
or
pop
ret
push
mov
push
push
call
cmp
pop
jne
call
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
sar
mov
mov
lea
and
lea
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
sub
push
push
push
push
call
push
call
mov
pop
cmp
pop
mov
jne
xor
jmp
test
je
xor
mov
cmp
je
add
inc
cmp
jb
lea
push
push
call
push
pop
cmp
jne
push
and
pop
xor
mov
cmp
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
and
push
pop
xor
mov
lea
rep
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
mov
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
and
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
jmp
or
push
call
pop
mov
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
call
pop
ret
push
mov
sub
mov
and
dec
push
push
dec
push
je
dec
dec
je
sub
je
sub
je
sub
je
sub
je
dec
je
or
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
call
mov
push
push
call
mov
pop
add
pop
mov
jmp
mov
mov
push
mov
call
mov
pop
cmp
jne
cmp
je
push
call
pop
jmp
xor
cmp
jne
cmp
je
push
call
pop
push
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
add
and
mov
mov
inc
add
cmp
jl
jmp
mov
cmp
je
push
call
pop
cmp
jne
push
push
call
pop
pop
jmp
push
call
cmp
pop
je
cmp
jne
mov
cmp
mov
jne
mov
mov
xor
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
pop
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
sub
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
push
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmp
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
leave
ret
push
mov
push
mov
lea
cmp
ja
mov
movzx
jmp
mov
push
mov
sar
movzx
test
pop
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzx
and
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
or
nop
inc
mov
or
je
inc
bt
jae
mov
add
pop
leave
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
mov
or
je
inc
bt
jae
lea
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmp
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsx
jmp
lock
cmp
jg
push
jmp
lock
push
call
mov
mov
xor
nop
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
mov
pop
or
jne
lock
jmp
push
call
add
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
or
je
mov
mov
lea
cmp
jne
mov
mov
mov
lea
mov
or
mov
je
or
je
inc
inc
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
jmp
lock
cmp
jg
push
jmp
lock
mov
push
call
mov
mov
xor
xor
mov
mov
or
mov
je
or
je
inc
inc
push
push
push
call
mov
add
call
add
pop
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
pop
or
jne
lock
jmp
mov
push
call
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
cmp
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
push
mov
mov
pop
jmp
and
mov
mov
push
push
lea
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
jmp
mov
mov
ret
int3
int3
push
push
push
mov
mov
shl
movdqa
add
sub
jmp
lea
mov
movdqa
movdqa
movdqa
movdqa
movdqa
pxor
pxor
pxor
pxor
movdqa
aesdec
aesdec
aesdec
aesdec
movdqa
aesdec
aesdec
aesdec
aesdec
movdqa
aesdec
aesdec
aesdec
aesdec
sub
jne
movdqa
aesdeclast
aesdeclast
aesdeclast
aesdeclast
pxor
movdqa
movdqa
pxor
movdqa
movdqa
pxor
movdqa
movdqa
pxor
movdqa
movdqa
add
sub
jae
add
jmp
mov
movdqa
movdqa
pxor
aesdec
aesdec
aesdec
sub
jne
aesdeclast
pxor
movdqa
movdqa
add
sub
jae
movdqa
pop
pop
pop
ret
jmp
int3
int3
int3
push
push
push
mov
mov
shl
movdqa
add
add
neg
add
jmp
lea
mov
pxor
pxor
aesenc
aesenc
aesenc
add
jne
aesenclast
movdqa
add
sub
jae
movdqa
pop
pop
pop
ret
lea
lea
push
push
push
mov
mov
shl
movdqa
add
mov
shr
dec
shl
mov
mov
mov
mov
add
neg
add
jmp
lea
lea
movdqa
paddq
movdqa
paddq
movdqa
paddq
movdqa
paddq
movdqa
mov
movdqa
pxor
pxor
pxor
pxor
movdqa
aesenc
aesenc
aesenc
aesenc
movdqa
aesenc
aesenc
aesenc
aesenc
movdqa
aesenc
aesenc
aesenc
aesenc
add
jne
movdqa
aesenclast
aesenclast
aesenclast
aesenclast
pxor
pxor
pxor
pxor
movdqa
movdqa
movdqa
movdqa
add
sub
jae
add
jmp
paddq
mov
movdqa
pxor
aesenc
aesenc
aesenc
add
jne
aesenclast
pxor
movdqa
add
sub
jae
movdqa
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
push
push
push
mov
mov
mov
test
je
test
je
movzx
inc
movzx
xor
shr
xor
dec
jne
cmp
jb
add
mov
sub
and
sub
xor
mov
nop
mov
movzx
xor
movzx
xor
shr
movzx
movzx
xor
movzx
xor
mov
xor
movzx
shr
xor
movzx
xor
movzx
mov
xor
add
jne
xor
mov
mov
sub
test
je
movzx
inc
movzx
xor
shr
xor
dec
jmp
pop
pop
pop
pop
ret
jmp
int3
int3
int3
push
push
push
push
mov
mov
mov
test
je
test
je
movzx
inc
movzx
xor
shr
xor
dec
jne
cmp
jb
add
mov
sub
and
sub
xor
jmp
int3
int3
int3
movzx
movzx
shr
movzx
and
mov
xor
xor
xor
xor
movzx
movzx
shr
movzx
and
mov
xor
xor
xor
xor
add
jne
xor
mov
mov
sub
test
je
movzx
inc
movzx
xor
shr
xor
dec
jmp
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
push
call
pop
ret
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
push
call
pop
ret
mov
jmp
push
call
pop
ret
mov
jmp
push
call
pop
ret
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
and
test
je
lea
jmp
ret
mov
and
test
je
lea
jmp
ret
mov
and
test
je
lea
jmp
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
and
test
je
lea
jmp
ret
mov
and
test
je
lea
jmp
ret
lea
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
push
push
push
push
call
ret
mov
add
jmp
push
push
push
mov
add
push
call
ret
push
push
push
mov
add
push
call
ret
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
push
push
push
push
call
ret
mov
add
jmp
push
push
push
mov
add
push
call
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
push
call
pop
ret
mov
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
push
call
pop
ret
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
push
call
pop
ret
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
push
call
pop
ret
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
push
call
pop
ret
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
push
call
pop
ret
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
push
call
pop
ret
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
push
call
pop
ret
mov
jmp
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
push
call
pop
ret
mov
jmp
push
call
pop
ret
lea
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
mov
jmp
push
call
pop
ret
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
mov
jmp
push
call
pop
ret
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
mov
add
neg
sbb
and
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
mov
jmp
int3
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
push
call
pop
ret
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
mov
mov
add
neg
sbb
and
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
push
call
pop
ret
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
lea
jmp
mov
jmp
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
mov
mov
add
neg
sbb
and
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
mov
and
test
je
lea
jmp
ret
mov
jmp
int3
int3
int3
mov
jmp
int3
int3
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
push
call
pop
ret
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
push
call
pop
ret
mov
jmp
push
call
pop
ret
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
mov
jmp
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
push
call
pop
ret
mov
jmp
push
call
pop
ret
mov
jmp
push
call
pop
ret
lea
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
add
jmp
push
call
pop
ret
mov
jmp
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
lea
jmp
lea
jmp
push
call
pop
ret
mov
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
push
call
pop
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
push
call
pop
ret
mov
jmp
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
add
jmp
lea
jmp
mov
add
jmp
lea
jmp
mov
add
jmp
lea
jmp
mov
add
jmp
lea
jmp
mov
add
jmp
lea
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
mov
add
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
mov
add
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
add
add
xchg
or
rcl
or
mov
or
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
dec
mov
add
or
js
or
mov
or
cmps
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
dec
mov
add
or
push
mov
add
mov
add
or
aam
or
call
mov
add
mov
add
mov
add
or
cmp
or
mov
add
add
or
mov
mov
add
mov
add
mov
add
mov
add
mov
add
or
mov
add
or
push
mov
add
or
outs
mov
add
add
mov
add
or
fmul
add
lea
add
lea
add
lea
add
lea
add
or
push
or
or
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
mov
add
add
or
je
or
mov
or
test
or
mov
mov
add
mov
add
mov
add
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
vpmacssdd
add
(bad)
(bad)
(bad)
(bad)
nop
or
push
nop
or
and
or
dec
nop
or
pop
nop
or
push
nop
or
mov
or
scas
nop
or
retf
add
nop
or
(bad)
nop
or
push
xchg
or
xor
or
pusha
xchg
or
jo
or
adc
add
or
add
add
add
add
or
add
push
add
add
add
xor
or
inc
mov
add
or
sbb
or
add
add
add
inc
add
adc
sti
sbb
add
add
add
add
sub
add
sbb
dec
add
add
add
dec
add
add
add
stos
dec
add
add
add
test
add
shr
add
shr
add
add
cwde
test
add
mov
add
js
dec
add
add
add
add
add
add
dec
add
add
add
test
add
adc
add
or
add
cld
test
add
test
add
add
add
test
add
add
add
test
add
add
add
add
add
add
mov
add
add
add
test
add
jo
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
cld
cmps
dec
add
cmps
dec
add
add
add
cmps
dec
add
add
add
cmps
dec
add
add
add
cmps
dec
add
add
add
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
cmps
dec
add
add
add
cmps
dec
add
add
mov
dec
add
cmps
dec
add
add
add
add
nop
cmps
dec
add
adc
add
dec
add
adc
add
dec
add
adc
add
add
adc
add
cmps
dec
add
inc
add
cmp
xor
ss
add
inc
add
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
pop
and
inc
mov
add
add
add
add
imul
mov
add
add
nop
add
imul
mov
add
add
mov
add
pop
and
inc
mov
add
add
add
imul
mov
add
add
xor
pop
and
inc
mov
add
add
xor
add
pop
and
inc
mov
add
add
xor
add
pop
and
inc
mov
add
add
xor
add
pop
and
inc
mov
add
add
xor
add
pop
and
inc
mov
add
add
and
pop
and
inc
mov
add
add
and
add
pop
and
inc
mov
add
add
and
add
pop
and
inc
mov
add
add
and
add
pop
and
inc
mov
add
add
and
add
pop
and
inc
mov
add
add
add
pop
and
inc
mov
add
add
add
add
pop
and
inc
mov
add
add
imul
mov
add
add
imul
mov
add
add
add
add
imul
mov
add
add
add
pop
and
inc
mov
add
add
add
pop
and
inc
mov
add
add
add
add
pop
and
inc
mov
add
add
add
add
pop
and
inc
mov
add
add
add
add
pop
and
inc
mov
add
add
add
add
pop
and
inc
mov
add
add
add
add
imul
mov
add
add
add
add
imul
mov
add
add
add
add
imul
mov
add
add
add
add
pop
and
inc
mov
add
add
add
add
imul
mov
add
add
add
add
imul
mov
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
test
inc
add
push
inc
add
fs
add
inc
add
inc
add
fs
add
add
gs
add
inc
add
addr16
add
bound
fbld
add
bound
scas
arpl
(bad)
arpl
and
cmp
test
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
xor
add
inc
add
inc
add
add
inc
add
inc
add
sbb
in
inc
add
rol
pop
push
inc
add
inc
add
inc
add
inc
add
sbb
outs
sbb
mov
sbb
in
inc
add
sbb
add
sbb
cs
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
pop
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
cmp
test
lock
cld
add
add
inc
add
inc
add
rol
xchg
iret
inc
add
rol
pop
rol
jno
inc
add
inc
add
rol
cs
inc
add
mov
inc
add
add
inc
add
inc
add
fld
inc
fild
push
fild
pop
fild
inc
fiadd
sub
inc
add
fild
cmp
inc
add
fiadd
or
inc
add
inc
add
fild
push
fiadd
in
fiadd
neg
inc
add
fild
(bad)
fld
into
fiadd
fcomp
inc
add
fiadd
neg
inc
add
fiadd
(bad)
fiadd
cmp
inc
add
fiadd
cmps
fiadd
sti
fiadd
sbb
inc
add
add
inc
add
fadd
push
fiadd
pusha
fiadd
push
inc
add
fadd
dec
(bad)
inc
add
inc
add
inc
add
fld
cs
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
xor
add
rol
jne
inc
add
inc
add
inc
add
xor
add
hlt
inc
add
test
xor
add
test
cmc
inc
add
xor
add
inc
add
inc
add
mov
dec
add
add
add
add
mov
add
aam
dec
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
sbb
xchg
test
xor
add
rol
lock
inc
add
xor
add
sub
add
aam
add
aam
add
inc
add
sub
add
xor
add
test
out
inc
add
aad
add
inc
add
inc
add
rol
xchg
iret
inc
add
rol
pop
rol
jno
inc
add
inc
add
inc
add
cmp
inc
add
xor
inc
add
cmp
inc
add
xor
add
inc
add
xor
add
xor
add
inc
add
inc
add
xor
add
inc
add
inc
add
cmp
test
inc
add
inc
add
inc
add
ins
inc
add
pusha
inc
add
inc
add
addr16
add
pop
inc
add
push
inc
add
inc
add
and
cmp
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
cmp
test
inc
add
add
add
xor
add
test
out
inc
add
test
es
inc
add
nop
inc
add
nop
inc
add
inc
add
nop
inc
add
cmc
inc
add
inc
add
inc
add
pop
push
cmc
inc
add
nop
inc
add
xor
add
lea
retf
cmp
inc
add
xor
cs
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
push
cmp
dec
push
jae
inc
dec
outs
inc
pop
add
add
xor
xor
aaa
sub
inc
inc
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
xor
add
xchg
inc
add
call
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
nop
inc
add
inc
add
lds
xor
inc
add
lds
fadd
inc
add
lds
push
cmc
inc
add
lds
xchg
les
out
inc
add
cmp
inc
add
mov
inc
add
mov
inc
add
inc
add
ret
push
ret
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
xor
add
rol
fisttp
add
nop
inc
add
aad
add
cmc
inc
add
fld
dec
rol
jecxz
inc
add
inc
add
fld
add
inc
add
sbb
retf
cmp
inc
add
inc
add
add
in
inc
add
inc
add
add
dec
retf
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
xor
add
rol
inc
pop
inc
add
inc
add
inc
add
inc
add
fiadd
out
inc
add
rol
pxor
xor
inc
add
mov
inc
add
mov
inc
add
nop
inc
add
inc
add
cs
add
cmc
inc
add
inc
add
add
adc
inc
add
cmc
inc
add
cmc
inc
add
jecxz
add
sbb
retf
cmp
inc
add
loop
add
jecxz
add
add
stc
loopne
add
in
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
hlt
inc
add
cmc
inc
add
cmc
inc
add
mov
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
mov
add
hlt
inc
add
hlt
inc
add
mov
add
inc
add
mov
add
lock
add
icebp
inc
add
mov
add
icebp
inc
add
mov
add
hlt
inc
add
cmc
inc
add
cmc
inc
add
mov
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
mov
add
hlt
inc
add
hlt
inc
add
mov
add
inc
add
mov
add
lock
add
icebp
inc
add
mov
add
mov
add
pop
inc
add
sti
inc
add
rol
cmc
add
xlat
cli
inc
add
add
test
inc
add
sti
inc
add
stc
inc
add
clc
inc
add
clc
inc
add
inc
add
inc
add
inc
add
popf
inc
add
rol
clc
adc
pusha
pushf
inc
add
mov
inc
add
mov
inc
add
xor
add
adc
pop
pop
inc
add
push
inc
add
pop
inc
add
inc
add
pop
inc
add
adc
or
inc
add
inc
add
or
inc
add
push
inc
add
add
pop
rol
movs
add
jecxz
inc
add
add
aaa
pop
inc
add
push
inc
add
mov
inc
add
mov
inc
add
cs
add
cs
add
cs
add
mov
inc
add
sub
jecxz
inc
add
inc
add
and
(bad)
sbb
ja
inc
add
inc
add
inc
add
and
add
sbb
iret
clc
inc
add
inc
add
inc
add
sub
inc
add
sub
inc
add
xor
pop
pop
inc
add
xor
rcl
add
rol
xchg
xor
adc
add
imul
sub
inc
add
inc
add
add
and
inc
add
inc
add
add
xlat
cs
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
test
inc
add
inc
add
inc
add
inc
inc
add
inc
add
inc
add
inc
add
xor
add
rol
adc
inc
add
xor
add
inc
add
out
add
cmp
add
inc
add
rol
xchg
add
inc
inc
add
jne
add
jne
add
jne
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
xor
add
add
xchg
test
xor
add
rol
hlt
stc
inc
add
xor
add
inc
add
jecxz
add
pop
push
mov
dec
pop
mov
mov
inc
add
push
inc
add
rol
jbe
inc
add
or
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
inc
add
mov
cwde
call
mov
pop
inc
add
lahf
inc
add
sahf
inc
add
rol
jmp
sahf
inc
add
pop
inc
add
mov
inc
add
rol
or
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
sbb
sbb
inc
add
mov
add
inc
add
add
nop
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
inc
add
int3
inc
add
inc
add
cmp
test
inc
add
xor
add
inc
add
repnz
add
adc
aas
xor
add
inc
add
test
add
inc
add
inc
add
xor
add
xor
add
adc
out
inc
add
cmp
cmp
test
inc
add
xor
add
add
inc
add
xor
add
inc
add
cmp
test
inc
add
pop
inc
add
add
xor
add
dec
inc
add
pusha
inc
add
inc
add
inc
add
pusha
inc
add
pusha
inc
add
inc
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
mov
inc
add
mov
inc
add
imul
dec
push
add
inc
add
inc
inc
add
pop
inc
add
ds
add
dec
inc
add
inc
add
inc
add
cmp
add
clc
inc
add
cmp
inc
add
inc
add
cmp
test
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
inc
add
nop
inc
add
inc
add
inc
add
add
push
jg
add
cmc
inc
add
inc
add
inc
add
cmc
inc
add
inc
add
inc
add
cmp
inc
add
jno
add
je
add
ja
add
inc
add
imul
ins
inc
add
inc
add
inc
add
add
jle
add
xor
add
rol
push
out
add
xchg
jg
inc
add
xor
add
popf
inc
add
inc
add
inc
add
inc
add
jl
add
add
rol
xchg
stos
inc
add
pop
inc
add
lods
inc
add
inc
add
rol
nop
ja
add
add
rol
rol
inc
add
js
add
jl
add
xor
add
rol
cdq
pop
inc
add
pop
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
loopne
add
rol
sub
add
rol
push
rol
fild
add
inc
add
mov
inc
add
mov
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
iret
inc
add
mov
add
mov
add
mov
inc
add
xor
add
mov
inc
add
xor
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
jl
add
add
rol
xchg
stos
inc
add
pop
inc
add
inc
add
rol
rcl
inc
add
rol
sar
mov
inc
add
inc
add
push
inc
add
rol
icebp
les
adc
add
rol
pop
pop
inc
add
rol
nop
ja
add
inc
add
rol
rol
inc
add
js
add
jl
add
rol
aas
rol
dec
rol
mov
inc
add
mov
inc
add
mov
inc
add
rol
pop
pop
inc
add
inc
add
push
inc
add
mov
rol
xchg
stos
inc
add
pop
inc
add
rol
into
iret
inc
add
rol
ja
inc
add
jmp
inc
add
inc
add
xor
add
inc
add
in
inc
add
out
inc
add
add
xor
add
adc
test
xor
add
inc
add
inc
add
pop
inc
add
xor
add
inc
add
repz
add
xor
add
adc
ds
add
cmp
add
xor
add
inc
add
inc
add
repnz
add
cmp
inc
add
ds
add
cmp
pop
inc
add
inc
inc
add
dec
inc
add
inc
add
push
inc
add
dec
inc
add
pusha
inc
add
dec
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
rol
jg
loope
mov
add
add
add
add
add
add
add
add
jmp
in
repnz
add
dec
add
add
add
mov
fiadd
fadd
mov
add
add
rol
pop
test
loopne
xor
outs
add
add
add
add
mov
add
scas
add
add
add
add
add
add
xchg
add
add
add
lods
add
jno
test
add
add
mov
test
add
jp
dec
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
out
add
add
add
add
add
add
push
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ja
retf
add
push
adc
int3
add
add
add
add
add
and
pusha
add
add
mov
add
mov
add
add
mov
pop
add
arpl
xor
mov
popa
add
call
add
jb
jbe
out
lea
sbb
cli
add
test
push
add
add
fwait
add
add
add
push
add
add
add
add
add
out
add
pusha
add
pop
add
inc
add
add
mov
add
xchg
mov
imul
add
add
add
add
in
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
in
mov
inc
add
add
sahf
add
add
mov
retf
add
add
add
add
add
add
add
add
add
add
lea
rol
inc
add
imul
jle
cmps
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
cmp
leave
add
add
pop
add
add
add
add
add
push
add
scas
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
push
add
add
add
add
add
add
push
outs
add
add
add
add
add
add
add
test
ret
add
add
add
add
add
or
retf
add
add
fiadd
jb
lds
inc
add
push
add
ins
add
jl
add
jl
add
inc
add
inc
add
pusha
inc
add
popa
inc
add
jbe
add
ja
add
inc
add
mov
inc
add
mov
inc
add
inc
add
fwait
inc
add
call
push
sub
inc
add
cdq
inc
add
jg
add
inc
add
cdq
inc
add
hlt
inc
add
cmc
inc
add
cmc
inc
add
mov
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
mov
add
hlt
inc
add
hlt
inc
add
mov
add
inc
add
mov
add
lock
add
icebp
inc
add
mov
add
sahf
inc
add
mov
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
add
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
adc
add
pop
or
or
or
add
add
add
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
add
add
adc
add
pop
or
or
or
add
inc
add
fiadd
fiadd
fadd
fild
fadd
fld
fadd
fadd
sub
inc
add
inc
add
fadd
sub
inc
add
fiadd
fild
sub
nop
fld
fld
fild
fild
jmp
pusha
jmp
inc
fild
pusha
inc
add
fild
jmp
inc
add
inc
add
inc
add
repnz
add
inc
add
add
xor
inc
add
out
inc
add
inc
add
add
add
inc
add
std
inc
add
inc
repz
add
add
rol
inc
add
repz
add
add
add
inc
add
in
inc
add
clc
inc
add
clc
inc
add
lock
add
sub
inc
add
cmc
inc
add
inc
add
inc
add
hlt
inc
add
sub
loopne
inc
add
inc
add
hlt
inc
add
inc
add
inc
add
inc
add
inc
add
and
inc
add
add
loopne
inc
add
add
lock
add
inc
add
std
inc
add
inc
add
rol
add
add
jo
inc
add
add
nop
add
mov
cli
inc
add
inc
add
clc
inc
add
clc
inc
add
stc
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
add
sub
loopne
inc
add
add
add
add
add
add
or
xor
inc
add
pop
inc
add
or
add
inc
add
or
mov
push
inc
add
push
inc
add
sub
add
inc
add
sub
adc
inc
add
sub
shr
inc
add
sub
push
daa
inc
add
sub
mov
inc
add
daa
inc
add
inc
add
inc
add
and
add
and
lock
add
add
inc
add
sub
inc
add
inc
add
inc
add
inc
add
sub
mov
sub
jo
inc
add
pop
inc
add
das
inc
add
pop
inc
add
xor
mov
inc
add
inc
add
fs
add
fs
add
pop
inc
add
inc
add
fs
add
inc
add
inc
add
pusha
inc
add
pusha
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
fs
add
fs
add
push
inc
add
fs
add
fs
add
inc
add
bound
lock
inc
add
arpl
mov
inc
add
pop
inc
add
rol
pop
pop
inc
add
inc
add
push
inc
add
mov
rol
xchg
stos
inc
add
pop
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
push
inc
add
mov
rol
xchg
stos
inc
add
pop
inc
add
rol
pop
pop
inc
add
inc
add
push
inc
add
mov
rol
xchg
stos
inc
add
pop
inc
add
gs
gs
xor
cs
ins
add
add
inc
gs
popa
jb
gs
popa
addr16
imul
add
add
add
add
add
add
add
add
add
push
push
add
pop
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
cmp
pop
mov
fs
pusha
sbb
or
add
add
add
add
add
cmp
pop
mov
fs
pusha
add
add
cwde
das
mov
inc
aaa
jno
sti
shl
ret
icebp
adc
pop
movs
cmp
aad
sbb
cwde
stos
pop
fadd
pop
adc
test
and
jge
push
je
mov
and
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubr
stc
jbe
push
ds
ins
(bad)
xor
(bad)
jg
mov
inc
xchg
cmps
aad
arpl
push
sub
adc
or
cs
ins
sub
adc
or
or
cs
ret
sub
xchg
mov
data16
mov
call
cdq
(bad)
test
push
push
shl
ja
daa
mov
mov
mov
sbb
dec
stos
fmul
retf
rep
cs
outs
arpl
test
add
mov
(bad)
mov
movs
mul
jno
rol
add
add
inc
loopne
inc
add
mov
ins
loopne
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
mov
add
(bad)
(bad)
(bad)
jmp
mov
inc
add
add
add
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
rol
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
rol
(bad)
(bad)
inc
add
add
retf
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
into
inc
add
into
inc
add
add
add
(bad)
(bad)
call
rol
push
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
sub
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
jo
js
js
or
or
add
add
or
add
or
or
pop
or
add
sub
outs
add
ins
add
add
add
add
outs
jne
ins
sub
add
(bad)
(bad)
jmp
inc
add
inc
add
add
add
(bad)
(bad)
inc
add
add
fild
add
add
(bad)
fild
loopne
inc
add
(bad)
(bad)
jmp
loop
add
loop
add
add
add
(bad)
(bad)
call
loop
add
add
add
(bad)
(bad)
inc
add
add
in
add
add
add
in
add
in
add
(bad)
(bad)
inc
add
add
add
sub
inc
add
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
call
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
pop
pop
dec
push
push
inc
push
push
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
add
add
(bad)
(bad)
(bad)
inc
add
add
inc
(bad)
(bad)
(bad)
inc
add
add
jne
je
ins
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outs
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outs
je
outs
outs
jne
push
arpl
outs
jb
ins
outs
ja
outs
and
imul
je
outs
outs
or
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
ins
and
outs
arpl
outs
and
ins
ins
or
push
xor
xor
or
and
outs
jne
push
arpl
outs
jb
pop
outs
outs
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outs
popa
bound
je
and
outs
and
outs
jae
ins
and
imul
add
push
xor
cmp
outs
gs
arpl
and
popa
jo
gs
outs
jb
or
add
add
xor
aaa
or
outs
gs
arpl
and
ins
je
je
jb
popa
and
imul
jb
outs
jb
or
add
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
ins
and
outs
addr16
ins
and
ins
imul
or
add
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
outs
jbe
jb
outs
ins
outs
je
or
push
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
popa
jb
jne
outs
je
or
push
xor
xor
ins
outs
popa
je
outs
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outs
je
ins
and
jb
jb
add
add
push
jne
je
ins
and
jb
jb
or
push
jb
addr16
ins
cmp
add
add
cs
jb
addr16
ins
and
ins
and
imul
outs
add
inc
gs
popa
jae
inc
arpl
gs
outs
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outs
js
add
gs
xor
fs
ins
add
(bad)
(bad)
(bad)
push
and
cmp
inc
add
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
jmp
inc
add
inc
add
ins
ins
cmp
add
fs
dec
dec
dec
dec
and
and
jns
add
fs
jns
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outs
jbe
ins
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
ins
jns
add
add
outs
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outs
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
ins
add
outs
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outs
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outs
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outs
outs
fs
jns
add
outs
fs
jns
add
je
inc
jb
add
add
add
add
outs
add
outs
add
outs
dec
outs
outs
push
jne
push
gs
push
push
popa
je
add
dec
popa
outs
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
into
inc
add
into
inc
add
add
add
add
add
sbb
inc
add
(bad)
(bad)
push
sub
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
enter
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
inc
iret
inc
add
iret
inc
add
inc
add
add
add
mov
add
add
(bad)
(bad)
inc
xchg
sbb
add
add
iret
inc
add
(bad)
(bad)
call
sub
xchg
sbb
add
add
iret
inc
add
(bad)
(bad)
jmp
xchg
sbb
add
add
rol
(bad)
(bad)
(bad)
inc
inc
add
add
add
inc
rol
(bad)
(bad)
(bad)
call
add
add
add
push
add
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
mov
add
add
(bad)
(bad)
dec
add
xchg
sub
add
pushf
sub
add
movs
sub
xchg
sbb
add
add
rol
(bad)
(bad)
(bad)
(bad)
mov
add
add
sub
add
enter
and
add
sbb
inc
add
(bad)
(bad)
(bad)
fsubr
xchg
sbb
add
add
inc
add
(bad)
(bad)
push
sub
xchg
sbb
add
add
inc
add
(bad)
(bad)
inc
inc
add
add
add
inc
add
add
add
cs
add
add
add
cs
add
add
add
add
add
cs
add
(bad)
(bad)
call
add
add
inc
add
(bad)
(bad)
jmp
add
add
inc
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
jmp
add
add
inc
add
(bad)
(bad)
push
add
add
add
add
add
inc
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
cs
add
(bad)
(bad)
dec
cs
add
add
add
(bad)
(bad)
call
cs
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
call
add
add
dec
rol
(bad)
(bad)
(bad)
push
cs
add
add
add
cs
add
add
add
das
inc
add
(bad)
(bad)
dec
das
inc
add
add
add
mov
inc
add
(bad)
(bad)
jmp
das
inc
add
add
add
mov
inc
add
(bad)
(bad)
push
inc
add
add
add
fcom
inc
add
(bad)
(bad)
dec
inc
add
add
add
add
inc
add
(bad)
(bad)
call
add
add
add
sub
inc
add
(bad)
(bad)
push
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
xor
inc
add
add
add
inc
add
inc
add
add
add
cwde
rol
(bad)
(bad)
(bad)
inc
add
mov
inc
add
(bad)
(bad)
call
add
pushf
das
inc
add
add
add
(bad)
(bad)
jmp
add
add
add
add
das
inc
add
add
add
das
inc
add
add
add
das
inc
add
(bad)
(bad)
(bad)
fsubr
inc
add
(bad)
(bad)
jmp
das
inc
add
(bad)
(bad)
(bad)
in
das
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
(bad)
js
inc
add
(bad)
(bad)
inc
add
add
das
inc
add
add
jmp
inc
add
xor
push
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
inc
add
(bad)
(bad)
inc
inc
add
add
add
mov
add
add
(bad)
(bad)
call
xchg
sbb
add
add
aam
add
(bad)
(bad)
jmp
add
add
add
add
clc
aam
add
(bad)
(bad)
dec
xor
add
add
shl
inc
add
add
add
xor
add
add
jmp
add
add
xor
add
add
push
inc
add
xor
push
add
add
add
add
xor
and
add
pusha
aad
add
(bad)
(bad)
(bad)
cmp
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
jbe
inc
add
add
add
mov
inc
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
xor
and
add
add
inc
add
(bad)
(bad)
(bad)
fdiv
inc
add
add
add
sub
inc
add
(bad)
(bad)
push
xor
and
add
push
(bad)
inc
add
(bad)
(bad)
inc
inc
add
add
add
inc
add
add
add
xor
add
add
and
inc
add
add
add
xor
add
add
xor
add
xor
add
add
pop
xor
(bad)
(bad)
(bad)
jmp
inc
add
add
add
mov
add
add
(bad)
(bad)
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
lock
inc
add
xlat
inc
add
add
add
dec
xlat
inc
add
(bad)
(bad)
dec
xor
add
add
shl
inc
add
add
add
xor
add
add
jmp
add
add
xor
add
add
push
inc
add
xor
add
xor
add
add
sbb
add
add
(bad)
(bad)
jmp
add
add
rcl
add
(bad)
(bad)
inc
inc
add
add
add
call
add
add
(bad)
(bad)
call
add
add
add
inc
add
add
add
sbb
inc
add
(bad)
(bad)
push
add
add
add
inc
fadd
(bad)
(bad)
(bad)
dec
add
add
push
add
add
(bad)
(bad)
call
xchg
sbb
add
add
add
add
(bad)
(bad)
push
add
add
mov
add
add
(bad)
(bad)
inc
xor
and
add
loopne
inc
add
(bad)
(bad)
(bad)
fdiv
inc
add
add
add
xor
add
add
out
xor
add
add
stc
xor
add
add
add
add
add
add
xor
add
add
add
xor
inc
add
(bad)
(bad)
call
inc
add
add
add
pop
fld
(bad)
(bad)
(bad)
push
xor
add
add
add
sbb
add
(bad)
(bad)
inc
add
add
add
test
inc
add
(bad)
(bad)
call
inc
add
add
add
inc
add
add
add
fcomp
inc
add
(bad)
(bad)
(bad)
js
inc
add
add
add
add
inc
add
(bad)
(bad)
dec
add
xchg
xor
add
add
add
xor
inc
add
add
add
inc
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
mov
add
add
add
add
add
add
add
pop
inc
add
add
add
mov
add
(bad)
(bad)
inc
pop
inc
add
add
add
(bad)
(bad)
push
pop
inc
add
add
add
mov
add
(bad)
(bad)
push
pop
inc
add
add
add
mov
add
(bad)
(bad)
push
pop
inc
add
add
add
(bad)
(bad)
jmp
inc
add
add
add
mov
(bad)
call
add
add
(bad)
(bad)
(bad)
mov
add
add
pop
inc
add
add
add
sub
inc
add
(bad)
(bad)
inc
xor
add
add
add
push
fild
(bad)
(bad)
(bad)
(bad)
fdiv
add
(bad)
(bad)
jmp
xor
add
add
add
sbb
add
(bad)
(bad)
push
xor
add
add
add
test
inc
add
(bad)
(bad)
dec
xor
xchg
sbb
add
add
fild
(bad)
(bad)
(bad)
call
xchg
sbb
add
add
fild
(bad)
(bad)
(bad)
push
xor
add
cmp
add
inc
xor
xchg
sbb
add
add
fadd
(bad)
(bad)
(bad)
call
add
add
add
pop
fadd
(bad)
(bad)
(bad)
jmp
inc
add
add
add
sbb
add
(bad)
(bad)
(bad)
jl
inc
add
add
add
test
inc
add
(bad)
(bad)
call
add
add
rcr
inc
add
(bad)
(bad)
jmp
xchg
sbb
add
add
fadd
(bad)
(bad)
(bad)
(bad)
mov
add
add
and
inc
add
(bad)
(bad)
dec
xor
xchg
sbb
add
add
inc
add
(bad)
(bad)
jmp
xor
xchg
sbb
add
add
inc
add
(bad)
(bad)
push
xor
xchg
sbb
add
add
add
add
(bad)
(bad)
dec
ss
add
add
add
ss
add
add
add
ss
add
add
add
rcr
inc
add
(bad)
(bad)
jmp
inc
add
add
add
ss
add
add
add
add
inc
add
(bad)
(bad)
dec
add
add
add
sub
inc
add
(bad)
(bad)
jmp
inc
add
(bad)
(bad)
jmp
inc
add
add
add
pop
fiadd
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
cwde
fiadd
(bad)
(bad)
(bad)
jmp
add
mov
inc
add
add
add
enter
(bad)
(bad)
(bad)
dec
ss
add
add
add
lock
(bad)
(bad)
(bad)
(bad)
fdiv
inc
add
add
add
sbb
inc
add
(bad)
(bad)
push
ss
add
add
add
inc
fild
(bad)
(bad)
(bad)
inc
inc
add
add
add
push
add
add
(bad)
(bad)
call
aaa
inc
add
add
add
aaa
inc
add
add
add
aaa
inc
add
add
add
aaa
inc
add
add
add
aaa
inc
add
add
add
mov
inc
add
(bad)
(bad)
dec
add
add
add
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
fild
and
add
adc
inc
add
(bad)
(bad)
jmp
inc
add
add
add
cmp
inc
add
(bad)
(bad)
push
add
add
add
add
add
add
xchg
sbb
add
jo
inc
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
mov
inc
add
(bad)
(bad)
inc
aaa
inc
add
add
add
aaa
inc
add
(bad)
(bad)
dec
aaa
inc
add
add
add
call
add
add
(bad)
(bad)
jmp
aaa
inc
add
add
add
aaa
inc
add
(bad)
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
inc
add
loope
add
add
add
pop
loope
add
(bad)
(bad)
(bad)
cld
aaa
inc
add
add
add
and
add
(bad)
(bad)
call
cmp
and
add
test
inc
add
(bad)
(bad)
jmp
inc
add
add
add
shl
inc
add
(bad)
(bad)
(bad)
cmp
inc
add
(bad)
(bad)
inc
inc
add
add
add
add
inc
add
(bad)
(bad)
call
add
add
add
sub
inc
add
(bad)
(bad)
jmp
inc
add
(bad)
(bad)
push
inc
add
(bad)
(bad)
(bad)
js
inc
add
add
add
pusha
loop
add
(bad)
(bad)
dec
(bad)
call
xchg
sbb
add
add
add
add
(bad)
(bad)
jmp
add
add
mov
add
add
(bad)
(bad)
(bad)
mov
add
add
cmp
add
add
int3
cmp
add
add
xlat
cmp
add
add
loop
inc
add
add
add
cmp
add
add
cmc
cmp
(bad)
(bad)
(bad)
(bad)
std
cmp
and
add
sbb
inc
add
(bad)
(bad)
call
cmp
and
add
inc
jecxz
add
(bad)
(bad)
jmp
inc
add
add
add
push
add
add
(bad)
(bad)
(bad)
cmp
inc
add
add
add
nop
jecxz
add
(bad)
(bad)
dec
add
add
add
mov
add
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
call
add
add
(bad)
(bad)
(bad)
jl
inc
add
add
add
add
add
add
add
and
inc
add
(bad)
(bad)
jmp
add
add
dec
in
add
(bad)
(bad)
(bad)
mov
add
add
jo
inc
add
(bad)
(bad)
call
cmp
add
add
fdivr
inc
add
add
add
mov
add
add
(bad)
(bad)
(bad)
in
cmp
add
add
hlt
cmp
and
add
shl
inc
add
(bad)
(bad)
dec
cmp
and
add
clc
in
add
(bad)
(bad)
call
inc
add
add
add
and
inc
add
(bad)
(bad)
push
cmp
and
add
dec
in
add
(bad)
(bad)
inc
add
add
add
jo
inc
add
(bad)
(bad)
call
inc
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
test
inc
add
(bad)
(bad)
(bad)
jl
inc
add
add
add
shl
inc
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
sbb
inc
add
(bad)
(bad)
inc
cmp
and
add
inc
out
add
(bad)
(bad)
(bad)
fdivr
inc
add
add
add
cmp
add
add
jmp
inc
add
add
add
cmp
add
add
repz
add
add
sti
cmp
add
cmp
add
cmp
add
add
or
inc
add
add
add
cmp
and
add
mov
inc
add
(bad)
(bad)
jmp
cmp
add
add
sub
inc
add
add
add
cmp
and
add
call
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
add
ins
cmp
pop
add
add
add
add
add
push
out
add
(bad)
(bad)
dec
add
add
add
add
add
add
mov
inc
add
(bad)
(bad)
jmp
add
mov
inc
add
add
add
mov
add
add
(bad)
(bad)
dec
cmp
add
add
sar
inc
add
add
add
cmp
add
add
(bad)
cmp
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
inc
add
(bad)
(bad)
dec
inc
add
add
add
inc
add
add
add
pusha
call
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
mov
add
add
(bad)
(bad)
jmp
xchg
sbb
add
enter
(bad)
(bad)
(bad)
inc
cmp
add
(bad)
(bad)
call
cmp
add
(bad)
(bad)
(bad)
fdivr
add
(bad)
(bad)
dec
cmp
add
add
add
or
inc
add
(bad)
(bad)
(bad)
in
cmp
add
add
add
xor
inc
add
(bad)
(bad)
inc
xchg
sbb
add
add
inc
add
(bad)
(bad)
call
cmp
xchg
sbb
add
add
add
add
(bad)
(bad)
jmp
xchg
sbb
add
add
add
add
(bad)
(bad)
inc
inc
add
add
add
shr
inc
add
(bad)
(bad)
call
add
(bad)
(bad)
call
add
add
add
add
inc
add
(bad)
(bad)
push
inc
add
add
add
inc
add
add
add
xor
inc
add
(bad)
(bad)
dec
(bad)
call
xchg
sbb
add
add
inc
add
(bad)
(bad)
jmp
add
add
mov
inc
add
(bad)
(bad)
(bad)
mov
add
add
mov
inc
add
(bad)
(bad)
call
cmp
add
fdivr
add
loopne
inc
add
add
add
cmp
xchg
sbb
add
add
jmp
(bad)
(bad)
(bad)
(bad)
cld
cmp
add
add
inc
add
(bad)
(bad)
dec
inc
add
add
add
sub
inc
add
(bad)
(bad)
jmp
ds
add
add
add
push
jmp
add
(bad)
(bad)
push
inc
add
add
add
js
inc
add
(bad)
(bad)
dec
inc
add
add
add
mov
add
add
(bad)
(bad)
call
add
add
add
enter
(bad)
(bad)
(bad)
push
inc
add
add
add
inc
add
add
add
clc
jmp
add
(bad)
(bad)
dec
add
xchg
ds
add
add
add
add
movs
ds
add
add
add
xchg
sbb
add
add
inc
add
(bad)
(bad)
inc
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
idiv
inc
add
aas
inc
add
add
add
add
add
mov
add
add
(bad)
(bad)
jmp
inc
add
add
add
aas
inc
add
add
add
aas
inc
add
add
add
inc
add
add
add
inc
add
add
pop
aas
inc
add
aas
inc
add
add
add
clc
in
inc
add
(bad)
(bad)
(bad)
jl
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
inc
add
rol
and
inc
add
add
add
pusha
in
inc
add
(bad)
(bad)
call
add
add
add
add
nop
in
inc
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
add
add
shr
add
(bad)
(bad)
call
aas
inc
add
add
add
call
add
add
(bad)
(bad)
jmp
aas
inc
add
add
add
adc
inc
add
(bad)
(bad)
(bad)
clc
aas
inc
add
add
add
cmp
inc
add
(bad)
(bad)
dec
inc
add
add
add
pusha
out
inc
add
add
add
add
add
(bad)
(bad)
jmp
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
add
add
add
add
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
mov
rol
fsubr
inc
add
add
add
sbb
inc
add
(bad)
(bad)
dec
add
add
add
inc
out
inc
add
(bad)
(bad)
jmp
inc
add
add
add
push
add
add
(bad)
(bad)
push
add
add
add
nop
out
inc
add
(bad)
(bad)
dec
xchg
sbb
add
add
add
add
out
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
out
inc
add
inc
add
add
test
dec
add
add
add
(bad)
(bad)
inc
add
add
add
fs
inc
add
mov
add
add
add
(bad)
(bad)
inc
add
add
add
sub
inc
add
add
add
add
add
lock
add
out
inc
add
add
add
lock
add
add
add
jo
inc
add
(bad)
(bad)
jmp
add
mov
inc
add
add
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
(bad)
(bad)
(bad)
inc
add
add
add
call
add
add
(bad)
(bad)
call
inc
add
add
add
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
(bad)
(bad)
(bad)
cmp
add
add
add
xor
inc
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
call
add
(bad)
(bad)
jmp
add
add
add
add
add
add
js
inc
add
(bad)
(bad)
inc
add
add
add
add
test
inc
add
(bad)
(bad)
call
(bad)
jmp
xchg
sbb
add
add
icebp
inc
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
inc
inc
add
add
add
or
inc
add
(bad)
(bad)
call
inc
inc
add
add
add
xor
inc
add
add
add
inc
add
(bad)
(bad)
(bad)
call
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
add
add
inc
inc
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
adc
and
add
shl
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
lock
add
(bad)
(bad)
dec
inc
add
add
add
inc
add
add
add
and
inc
add
(bad)
(bad)
jmp
add
(bad)
(bad)
jmp
inc
add
add
add
push
repz
add
(bad)
(bad)
inc
xchg
sbb
add
add
inc
add
(bad)
(bad)
call
add
add
add
add
add
add
mov
inc
add
(bad)
(bad)
inc
inc
inc
add
add
add
fdiv
inc
add
(bad)
(bad)
call
inc
inc
add
add
add
add
inc
add
(bad)
(bad)
(bad)
call
add
add
inc
inc
add
add
add
inc
inc
add
add
add
cmp
inc
add
(bad)
(bad)
dec
inc
add
add
add
pusha
hlt
inc
add
(bad)
(bad)
jmp
inc
inc
add
add
add
mov
inc
add
(bad)
(bad)
push
inc
add
add
add
inc
inc
add
add
add
mov
add
add
(bad)
(bad)
call
inc
add
add
add
loopne
inc
add
(bad)
(bad)
jmp
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
xor
inc
add
(bad)
(bad)
push
add
add
pop
cmc
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
sbb
xchg
sbb
add
add
add
add
cmc
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
cmc
inc
add
sbb
xchg
sbb
add
add
test
add
add
test
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
test
add
add
xchg
sbb
add
add
inc
add
(bad)
(bad)
(bad)
call
add
add
mov
inc
add
(bad)
(bad)
(bad)
cld
inc
inc
add
add
add
mov
inc
add
add
add
clc
inc
add
(bad)
(bad)
inc
add
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
add
add
dec
inc
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
jmp
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
add
add
add
inc
inc
add
add
or
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
sub
add
add
clc
inc
add
inc
add
add
add
push
add
add
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
sar
add
add
add
clc
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
clc
inc
add
inc
add
add
add
sbb
inc
add
add
add
stc
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
inc
add
das
inc
add
add
add
jo
inc
add
(bad)
(bad)
dec
xchg
sbb
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
stc
inc
add
inc
add
add
add
lock
inc
add
add
add
cli
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
cli
inc
add
xor
and
add
dec
cli
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
test
inc
add
add
add
cli
inc
add
(bad)
(bad)
inc
add
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
cli
inc
add
xor
and
add
and
inc
add
(bad)
(bad)
(bad)
clc
inc
inc
add
add
add
dec
sti
inc
add
(bad)
(bad)
dec
inc
add
add
add
inc
add
add
add
inc
inc
add
add
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
inc
add
(bad)
(bad)
dec
inc
add
add
add
inc
add
add
add
adc
inc
add
(bad)
(bad)
jmp
add
add
add
cmp
inc
add
(bad)
(bad)
(bad)
js
inc
add
add
add
add
add
add
add
jo
inc
add
(bad)
(bad)
call
add
scas
inc
inc
add
add
add
add
add
inc
inc
add
add
add
inc
inc
add
add
lock
inc
add
add
add
sar
add
(bad)
(bad)
dec
inc
inc
add
add
add
inc
inc
add
add
add
lock
inc
add
(bad)
(bad)
jmp
inc
add
add
add
sbb
inc
add
(bad)
(bad)
(bad)
cmp
add
add
add
inc
add
add
add
inc
add
add
add
push
std
inc
add
(bad)
(bad)
(bad)
js
inc
add
add
add
js
inc
add
(bad)
(bad)
dec
add
xchg
inc
inc
add
add
add
xchg
sbb
add
add
add
add
(bad)
(bad)
push
add
add
fdivr
inc
add
(bad)
(bad)
inc
inc
inc
add
(bad)
(bad)
dec
inc
inc
add
(bad)
(bad)
call
inc
inc
add
add
add
adc
inc
add
(bad)
(bad)
(bad)
call
add
add
cmp
inc
add
(bad)
(bad)
(bad)
cld
inc
inc
add
add
add
pusha
inc
(bad)
(bad)
(bad)
call
dec
inc
add
(bad)
(bad)
call
dec
inc
add
add
add
nop
inc
(bad)
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
push
add
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
mov
inc
add
(bad)
(bad)
call
dec
inc
add
add
add
dec
inc
add
add
add
mov
add
add
(bad)
(bad)
push
inc
add
add
add
loopne
inc
add
(bad)
(bad)
dec
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
jle
inc
add
dec
inc
add
dec
inc
add
add
add
add
add
add
add
add
mov
inc
add
add
add
pusha
add
(bad)
(bad)
(bad)
dec
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
add
dec
inc
add
add
add
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
inc
add
add
add
fadd
dec
add
(bad)
(bad)
call
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
add
add
dec
inc
add
add
add
dec
add
(bad)
(bad)
(bad)
(bad)
fmul
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
enter
(bad)
(bad)
(bad)
dec
inc
add
(bad)
(bad)
call
inc
add
add
add
inc
add
add
add
add
dec
add
(bad)
(bad)
jmp
add
add
add
sub
dec
add
(bad)
(bad)
inc
add
add
push
add
(bad)
(bad)
(bad)
call
xchg
sbb
add
add
dec
add
(bad)
(bad)
jmp
add
add
mov
add
add
(bad)
(bad)
(bad)
mov
add
add
enter
(bad)
(bad)
(bad)
call
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
add
dec
add
(bad)
(bad)
push
dec
inc
add
add
add
dec
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
jmp
inc
add
add
add
pusha
add
(bad)
(bad)
(bad)
inc
inc
add
add
add
mov
dec
add
(bad)
(bad)
call
add
add
add
mov
dec
add
(bad)
(bad)
jmp
inc
add
add
add
fadd
dec
add
(bad)
(bad)
(bad)
jl
inc
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
xor
add
(bad)
(bad)
jmp
xchg
sbb
add
add
dec
add
(bad)
(bad)
inc
dec
inc
add
add
add
dec
inc
add
add
add
mov
add
(bad)
(bad)
jmp
dec
inc
add
add
add
mov
dec
add
(bad)
(bad)
push
dec
inc
add
add
add
fadd
add
(bad)
(bad)
dec
dec
inc
add
(bad)
(bad)
call
dec
inc
add
add
add
or
add
(bad)
(bad)
(bad)
jmp
xchg
sbb
add
add
add
add
(bad)
(bad)
(bad)
(bad)
cmp
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
arpl
add
dec
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
(bad)
(bad)
(bad)
call
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
adc
dec
add
(bad)
(bad)
push
dec
inc
add
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
inc
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
pop
dec
inc
add
dec
inc
add
add
add
push
add
add
(bad)
(bad)
(bad)
cmp
inc
add
add
add
add
add
add
inc
add
add
add
mov
add
add
(bad)
(bad)
jmp
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
or
dec
add
(bad)
(bad)
(bad)
mov
add
add
dec
inc
add
add
add
cmp
dec
add
(bad)
(bad)
(bad)
fmul
add
add
add
pusha
pop
dec
add
(bad)
(bad)
(bad)
in
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
add
add
dec
inc
add
add
add
test
dec
add
(bad)
(bad)
jmp
inc
add
add
add
rol
dec
add
(bad)
(bad)
inc
inc
add
add
add
inc
add
add
add
inc
add
add
add
or
dec
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
dec
or
add
add
mov
add
add
(bad)
(bad)
call
add
pushf
dec
inc
add
add
add
add
add
add
add
add
scas
dec
inc
add
add
mov
inc
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
add
add
add
add
add
add
add
add
xchg
inc
add
add
add
call
add
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
push
dec
inc
add
add
add
dec
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
cmp
dec
add
(bad)
(bad)
jmp
push
inc
add
(bad)
(bad)
push
push
inc
add
add
add
push
inc
add
add
add
jo
dec
add
(bad)
(bad)
dec
add
(bad)
(bad)
call
add
(bad)
(bad)
call
add
(bad)
(bad)
jmp
add
add
add
mov
dec
add
(bad)
(bad)
(bad)
js
inc
add
add
add
add
add
add
add
call
add
add
dec
add
(bad)
(bad)
call
(bad)
jmp
add
lods
push
inc
add
(bad)
(bad)
push
add
mov
add
add
push
inc
add
push
inc
add
add
ficom
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
sub
add
add
push
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
mov
dec
add
(bad)
(bad)
call
inc
add
add
add
inc
add
add
add
inc
add
add
add
call
add
add
(bad)
(bad)
(bad)
jl
inc
add
add
add
add
mov
add
add
add
and
add
(bad)
(bad)
jmp
add
add
dec
or
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
push
inc
add
add
add
js
dec
add
(bad)
(bad)
call
push
inc
add
add
add
mov
add
add
(bad)
(bad)
(bad)
call
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
js
dec
add
(bad)
(bad)
push
add
mov
add
add
test
dec
add
(bad)
(bad)
call
push
inc
add
(bad)
(bad)
(bad)
fist
add
add
add
fmul
add
(bad)
(bad)
(bad)
push
push
inc
add
add
add
add
dec
add
(bad)
(bad)
dec
push
inc
add
add
add
sub
dec
add
(bad)
(bad)
call
inc
add
add
add
push
push
dec
add
(bad)
(bad)
push
push
inc
add
add
add
js
dec
add
(bad)
(bad)
inc
add
add
add
mov
add
add
(bad)
(bad)
call
inc
add
add
add
enter
(bad)
(bad)
(bad)
jmp
add
add
add
lock
dec
add
(bad)
(bad)
inc
add
(bad)
push
inc
add
add
add
and
dec
add
(bad)
(bad)
jmp
add
scas
push
inc
add
add
add
add
add
pop
cmovs
add
add
push
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
mov
xchg
sbb
add
add
add
add
cmovs
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
cmovs
jae
inc
add
add
add
or
dec
add
add
add
adc
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
adc
mov
inc
add
add
add
pusha
adc
add
add
jo
dec
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
inc
add
add
add
mov
add
add
adc
(bad)
(bad)
(bad)
inc
push
inc
add
add
add
push
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
adc
lock
add
add
and
dec
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
add
add
and
inc
add
add
add
push
inc
add
add
add
push
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
dec
add
add
add
cwde
adc
add
add
test
dec
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
adc
bnd
and
add
lock
add
add
xor
dec
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
inc
add
add
jle
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
dec
add
inc
add
add
add
js
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
xchg
sbb
add
add
adc
add
add
loopne
dec
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
adc
std
les
and
add
sub
dec
add
(bad)
(bad)
jmp
add
add
add
add
add
add
push
inc
add
add
add
push
inc
add
add
rcl
add
add
fist
add
add
add
push
inc
add
add
add
mov
add
add
add
(bad)
(bad)
inc
add
add
add
sar
add
add
add
add
add
dec
add
add
add
add
add
add
add
rcl
add
(bad)
(bad)
(bad)
clc
push
inc
add
add
add
call
add
add
(bad)
(bad)
dec
inc
add
add
add
adc
add
(bad)
(bad)
jmp
push
inc
add
add
add
cmp
add
(bad)
(bad)
push
inc
add
add
add
pusha
adc
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
inc
add
int3
inc
add
add
add
call
add
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
jbe
inc
add
add
adc
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
dec
add
rol
and
add
jo
dec
add
(bad)
(bad)
call
(bad)
call
xchg
sbb
add
add
add
add
(bad)
(bad)
push
add
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
fcom
add
push
inc
add
add
add
push
inc
add
add
add
add
dec
add
(bad)
(bad)
inc
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
pop
push
dec
add
(bad)
(bad)
inc
add
add
add
adc
add
(bad)
(bad)
call
inc
add
add
add
inc
add
add
add
mov
dec
add
(bad)
(bad)
(bad)
js
inc
add
add
add
fcom
dec
add
(bad)
(bad)
call
add
add
add
dec
add
(bad)
(bad)
jmp
add
lods
push
inc
add
add
add
add
mov
add
add
inc
pop
dec
add
(bad)
(bad)
call
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
mov
dec
add
(bad)
(bad)
push
pop
inc
add
add
add
fcom
dec
add
add
add
pop
dec
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
sbb
sbb
inc
add
add
add
inc
sbb
add
add
pusha
sbb
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
add
loop
add
add
add
enter
add
add
call
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
and
dec
add
inc
add
add
add
push
sbb
add
add
nop
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
fcomp
dec
add
(bad)
(bad)
push
add
mov
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
cmp
dec
add
(bad)
(bad)
inc
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
sub
add
add
xor
inc
add
add
add
nop
sbb
(bad)
(bad)
(bad)
dec
inc
add
add
add
mov
add
add
(bad)
(bad)
jmp
inc
add
add
add
loopne
dec
add
(bad)
(bad)
push
add
add
add
inc
add
add
add
add
add
add
add
and
dec
add
(bad)
(bad)
jmp
xchg
sbb
add
add
dec
add
(bad)
(bad)
inc
pop
inc
add
add
add
jo
dec
add
(bad)
(bad)
(bad)
fcomp
add
add
add
cwde
sbb
(bad)
(bad)
(bad)
push
pop
inc
add
add
add
rcr
add
(bad)
(bad)
dec
inc
add
add
add
pop
inc
add
add
add
lock
(bad)
(bad)
(bad)
jmp
inc
add
add
add
sbb
add
(bad)
(bad)
inc
inc
add
(bad)
(bad)
dec
inc
add
add
add
dec
sbb
add
(bad)
(bad)
call
add
add
add
inc
add
add
add
js
dec
add
(bad)
(bad)
(bad)
jl
inc
add
(bad)
(bad)
inc
add
mov
add
add
add
mov
dec
add
(bad)
(bad)
jmp
add
add
fcomp
add
(bad)
(bad)
push
xchg
sbb
add
add
sbb
add
cmp
add
(bad)
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
jmp
inc
add
add
add
add
add
add
add
add
dec
add
add
and
add
sbb
add
(bad)
(bad)
(bad)
cld
pop
inc
add
add
add
test
dec
add
(bad)
(bad)
call
pop
inc
add
add
add
rcr
add
(bad)
(bad)
(bad)
jmp
pop
inc
add
add
add
clc
sbb
add
mov
add
add
(bad)
(bad)
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
pop
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
loop
inc
add
pop
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
push
dec
add
or
and
add
add
dec
add
(bad)
(bad)
(bad)
cld
pop
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
jo
dec
add
(bad)
(bad)
call
inc
add
add
add
cwde
pop
dec
add
add
add
pop
dec
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
pop
dec
add
add
add
adc
dec
add
add
add
and
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
push
and
loope
inc
add
add
add
and
add
(bad)
(bad)
(bad)
mov
add
add
test
dec
add
(bad)
(bad)
call
pop
inc
add
add
add
shl
dec
add
(bad)
(bad)
jmp
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
or
dec
add
(bad)
(bad)
dec
xchg
sbb
add
add
and
(bad)
(bad)
(bad)
jmp
pop
inc
add
add
add
pop
and
(bad)
(bad)
(bad)
push
xchg
sbb
add
add
add
add
(bad)
(bad)
dec
inc
add
add
add
test
dec
add
(bad)
(bad)
call
add
add
add
shl
dec
add
(bad)
(bad)
push
inc
add
add
add
inc
add
add
add
add
add
add
add
adc
dec
add
(bad)
(bad)
push
add
add
cmp
dec
add
(bad)
(bad)
dec
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
(bad)
(bad)
(bad)
clc
pop
inc
add
add
add
js
dec
add
(bad)
(bad)
dec
inc
add
add
add
mov
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
and
mov
inc
add
add
add
add
dec
add
add
add
and
(bad)
(bad)
(bad)
inc
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
and
push
sbb
add
add
add
pusha
and
(bad)
(bad)
(bad)
dec
inc
add
add
add
inc
add
add
add
inc
add
add
add
cwde
and
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
shl
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
or
add
(bad)
(bad)
push
add
mov
add
add
pop
inc
add
add
add
pop
inc
add
add
add
dec
and
add
add
add
dec
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
shl
add
add
add
and
add
(bad)
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
and
add
lea
inc
add
add
add
dec
and
add
(bad)
(bad)
(bad)
call
inc
add
(bad)
(bad)
jmp
inc
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
pop
inc
add
add
add
nop
and
add
mov
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
sub
and
add
call
add
add
(bad)
(bad)
call
add
add
add
adc
dec
add
(bad)
(bad)
push
inc
add
add
add
cmp
dec
add
(bad)
(bad)
inc
xchg
sbb
add
add
dec
add
(bad)
(bad)
call
add
add
mov
dec
add
(bad)
(bad)
jmp
xchg
sbb
add
add
add
add
(bad)
(bad)
inc
pop
inc
add
add
add
fsub
dec
add
(bad)
(bad)
call
pop
inc
add
add
add
add
dec
add
add
add
daa
dec
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
daa
dec
add
xor
and
add
pop
daa
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
inc
add
add
add
pusha
inc
add
add
push
pusha
inc
add
pusha
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
xor
and
add
loopne
dec
add
(bad)
(bad)
push
inc
add
add
add
pusha
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
sub
dec
add
(bad)
(bad)
(bad)
js
inc
add
add
add
add
add
add
add
pusha
sub
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
cwde
sub
(bad)
(bad)
(bad)
dec
pusha
inc
add
add
add
pusha
inc
add
add
add
pusha
inc
add
add
add
pusha
inc
add
add
add
pusha
inc
add
add
cld
pusha
inc
add
add
add
call
add
add
(bad)
(bad)
call
inc
add
add
add
adc
dec
add
(bad)
(bad)
jmp
popa
inc
add
add
add
cmp
dec
add
(bad)
(bad)
(bad)
cmp
inc
add
add
add
pusha
sub
(bad)
(bad)
(bad)
call
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
mov
add
add
add
mov
dec
add
(bad)
(bad)
jmp
add
lods
popa
inc
add
add
add
add
add
popa
inc
add
add
add
popa
inc
add
add
add
clc
sub
(bad)
(bad)
(bad)
jmp
popa
inc
add
add
add
and
dec
add
(bad)
(bad)
(bad)
clc
popa
inc
add
add
add
dec
sub
(bad)
(bad)
(bad)
call
bound
add
add
and
inc
add
add
add
inc
add
add
add
bound
add
add
inc
bound
add
add
push
bound
add
add
pop
bound
and
add
mov
add
add
(bad)
(bad)
push
inc
add
(bad)
(bad)
(bad)
js
inc
add
(bad)
(bad)
inc
add
add
add
add
loopne
dec
add
(bad)
(bad)
call
xchg
sbb
add
add
sub
(bad)
(bad)
(bad)
push
add
add
xor
dec
add
(bad)
(bad)
inc
bound
and
add
pop
sub
(bad)
(bad)
(bad)
(bad)
fsub
add
add
add
sub
add
(bad)
(bad)
(bad)
in
bound
and
add
test
dec
add
(bad)
(bad)
inc
arpl
add
add
or
add
add
add
arpl
add
add
push
arpl
add
add
sub
inc
add
add
add
lock
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cmp
add
(bad)
(bad)
inc
xchg
sbb
add
add
dec
add
(bad)
(bad)
call
add
add
mov
add
(bad)
(bad)
jmp
xchg
sbb
add
add
add
add
(bad)
(bad)
inc
arpl
and
add
fsubr
add
(bad)
(bad)
call
arpl
and
add
add
add
(bad)
(bad)
(bad)
(bad)
call
add
add
sub
add
(bad)
(bad)
(bad)
(bad)
cld
arpl
add
add
add
inc
add
add
add
pop
sub
add
(bad)
(bad)
(bad)
call
fs
add
(bad)
(bad)
jmp
fs
add
(bad)
(bad)
jmp
fs
add
(bad)
(bad)
push
fs
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
inc
inc
add
(bad)
(bad)
dec
inc
add
(bad)
(bad)
call
inc
add
(bad)
(bad)
call
inc
add
(bad)
(bad)
jmp
inc
add
(bad)
(bad)
jmp
inc
add
(bad)
(bad)
push
inc
add
(bad)
(bad)
(bad)
js
inc
add
add
add
loopne
dec
add
(bad)
(bad)
dec
xchg
sbb
add
add
cs
add
(bad)
(bad)
jmp
add
add
add
add
cmp
dec
add
(bad)
(bad)
(bad)
mov
add
add
fs
add
add
add
fs
add
(bad)
(bad)
(bad)
fsub
(bad)
(bad)
(bad)
call
fs
add
add
add
sub
add
(bad)
(bad)
push
fs
add
add
add
test
dec
add
(bad)
(bad)
inc
(bad)
dec
(bad)
call
(bad)
call
xchg
sbb
add
add
cs
add
(bad)
(bad)
push
gs
add
add
add
adc
dec
add
(bad)
(bad)
inc
add
(bad)
(bad)
dec
add
add
add
inc
das
dec
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
test
dec
add
(bad)
(bad)
push
add
mov
add
add
fsubr
dec
add
(bad)
(bad)
call
gs
add
add
add
add
dec
add
(bad)
(bad)
jmp
gs
add
add
add
gs
add
add
add
xor
dec
add
(bad)
(bad)
inc
inc
add
add
add
pop
xor
(bad)
(bad)
(bad)
call
inc
add
add
add
xor
add
(bad)
(bad)
jmp
inc
add
add
add
test
dec
add
(bad)
(bad)
(bad)
cmp
inc
add
add
add
shl
dec
add
(bad)
(bad)
call
inc
add
add
add
clc
xor
(bad)
(bad)
(bad)
jmp
add
add
add
and
dec
add
(bad)
(bad)
(bad)
js
inc
add
add
add
dec
xor
(bad)
(bad)
(bad)
dec
add
xchg
inc
add
add
add
add
movs
inc
add
add
add
add
mov
inc
add
inc
add
add
add
inc
add
(bad)
(bad)
call
inc
add
inc
add
add
add
inc
add
add
add
(bad)
(bad)
dec
inc
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
call
inc
add
add
add
inc
add
(bad)
(bad)
jmp
inc
add
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
jmp
add
add
add
(bad)
jmp
add
add
addr16
add
add
add
(bad)
(bad)
(bad)
mov
add
add
addr16
add
add
add
addr16
add
(bad)
(bad)
dec
addr16
add
addr16
add
add
add
addr16
add
add
add
addr16
add
(bad)
(bad)
jmp
addr16
add
addr16
add
add
xor
add
add
add
addr16
add
(bad)
(bad)
push
addr16
add
add
add
addr16
add
(bad)
(bad)
inc
push
add
push
push
xchg
sbb
add
add
xor
(bad)
(bad)
(bad)
jmp
inc
add
add
add
call
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
sub
dec
add
(bad)
(bad)
jmp
inc
add
add
add
push
xor
(bad)
(bad)
(bad)
(bad)
jl
inc
add
add
add
js
dec
add
(bad)
(bad)
call
add
add
mov
add
add
(bad)
(bad)
jmp
xchg
sbb
add
add
xor
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
push
(bad)
dec
push
add
shr
add
add
add
push
add
loop
inc
add
add
jmp
add
push
xchg
sbb
add
add
xor
add
(bad)
(bad)
inc
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
imul
das
imul
aaa
imul
aas
imul
inc
imul
push
imul
pop
imul
imul
jb
inc
add
add
jge
inc
add
imul
lea
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
add
add
imul
enter
add
add
shr
add
add
add
imul
loopne
inc
add
add
add
sbb
add
(bad)
(bad)
(bad)
push
imul
cld
imul
add
add
dec
xor
add
(bad)
(bad)
(bad)
call
push
add
add
add
jo
dec
add
(bad)
(bad)
jmp
push
add
add
add
push
add
add
add
push
add
add
add
inc
add
add
add
add
add
bound
add
add
add
shl
add
(bad)
(bad)
(bad)
jl
inc
add
add
add
xchg
sbb
add
add
xor
add
(bad)
(bad)
(bad)
call
(bad)
jmp
xchg
sbb
ss
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
push
add
(bad)
(bad)
dec
push
add
(bad)
(bad)
call
push
add
(bad)
(bad)
(bad)
fsubr
add
add
add
push
add
add
(bad)
(bad)
(bad)
in
push
add
add
add
nop
ss
add
(bad)
(bad)
inc
imul
add
add
imul
add
add
imul
add
add
imul
add
add
inc
add
add
cmp
add
add
add
inc
add
add
add
call
add
add
(bad)
(bad)
call
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
sub
dec
add
(bad)
(bad)
call
xchg
sbb
add
add
dec
add
(bad)
(bad)
jmp
add
add
js
dec
add
(bad)
(bad)
(bad)
mov
add
add
mov
add
add
(bad)
(bad)
call
imul
add
add
enter
(bad)
(bad)
(bad)
jmp
imul
add
add
lock
dec
add
(bad)
(bad)
(bad)
clc
imul
add
add
sbb
dec
add
(bad)
(bad)
dec
inc
add
add
add
inc
cmp
(bad)
(bad)
(bad)
jmp
ins
inc
add
add
add
ins
inc
add
add
add
jo
dec
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
mov
add
add
xchg
ins
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
inc
add
add
add
ins
inc
add
add
add
ins
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
push
cmp
pop
xchg
inc
add
cwde
inc
add
add
add
cmp
add
(bad)
(bad)
jmp
ins
inc
add
add
add
test
dec
add
(bad)
(bad)
(bad)
cld
ins
inc
add
add
add
ins
inc
add
add
add
ins
inc
add
(bad)
(bad)
call
ins
inc
add
add
add
call
add
add
(bad)
(bad)
jmp
xchg
sbb
add
add
cmp
(bad)
(bad)
(bad)
inc
inc
add
add
add
cmp
dec
add
(bad)
(bad)
call
add
add
add
pusha
cmp
(bad)
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
xchg
sbb
add
test
dec
add
(bad)
(bad)
jmp
add
mov
inc
add
add
add
ins
inc
add
add
add
ins
inc
add
add
add
call
add
add
(bad)
(bad)
jmp
ins
inc
add
add
add
ins
inc
add
add
add
sbb
dec
add
(bad)
(bad)
inc
outs
inc
add
add
add
outs
inc
add
add
add
dec
cmp
(bad)
(bad)
(bad)
jmp
outs
inc
add
add
add
jo
dec
add
(bad)
(bad)
(bad)
cmp
add
add
add
cwde
cmp
(bad)
(bad)
(bad)
dec
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
loopne
dec
add
(bad)
(bad)
call
add
test
inc
add
add
add
add
add
(bad)
(bad)
dec
outs
inc
add
add
add
sub
add
(bad)
(bad)
jmp
outs
inc
add
add
add
outs
inc
add
add
add
outs
inc
add
add
add
inc
add
add
add
outs
inc
add
add
add
jo
dec
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
outs
inc
add
add
add
inc
add
add
add
inc
add
add
pusha
outs
inc
add
outs
inc
add
add
add
inc
add
add
add
add
xchg
outs
inc
add
add
add
add
add
add
add
add
add
add
add
outs
inc
add
add
add
outs
inc
add
add
add
adc
add
(bad)
(bad)
(bad)
(bad)
fsubr
add
add
add
cmp
add
(bad)
(bad)
(bad)
push
outs
inc
add
add
add
outs
inc
add
add
add
jo
add
add
add
jo
add
add
add
jo
add
add
and
inc
add
jo
add
jo
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
enter
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
ds
add
inc
add
add
add
dec
ds
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
jo
add
add
add
jo
add
add
add
jo
add
add
add
jo
add
add
in
inc
add
jo
add
jo
add
jo
add
jno
add
jno
add
jno
add
jno
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
add
ds
add
xchg
sbb
add
add
dec
add
(bad)
(bad)
(bad)
cmp
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
aas
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
dec
add
mov
add
mov
add
add
add
lock
dec
add
(bad)
(bad)
call
add
add
add
add
and
add
add
add
inc
dec
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
dec
add
add
add
js
dec
add
(bad)
(bad)
inc
jno
add
add
add
mov
add
add
(bad)
(bad)
call
jno
add
add
add
enter
(bad)
(bad)
(bad)
(bad)
call
add
add
lock
dec
add
(bad)
(bad)
(bad)
cld
jno
add
add
add
inc
add
add
add
jb
add
(bad)
(bad)
call
jb
add
add
add
xor
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
(bad)
(bad)
jmp
add
add
add
cwde
inc
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
loopne
dec
add
add
add
inc
dec
add
(bad)
(bad)
inc
add
add
add
add
add
mov
add
add
jb
add
add
add
jb
add
add
add
jb
add
add
aam
inc
add
add
add
jb
add
add
add
jb
add
add
add
jb
add
add
add
jb
add
add
add
jae
add
add
(bad)
inc
add
add
add
jae
add
add
add
jae
add
add
sub
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
pop
jae
add
add
add
inc
add
add
add
inc
add
add
jbe
inc
add
add
add
add
add
add
add
add
add
add
add
add
scas
jae
add
add
mov
inc
add
add
add
add
add
jae
add
add
add
jae
add
add
add
jae
add
add
add
jae
add
add
add
jae
add
add
add
jae
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
inc
dec
add
add
add
pusha
inc
dec
add
(bad)
(bad)
dec
je
add
add
add
je
add
add
add
je
add
add
add
cwde
inc
dec
add
(bad)
(bad)
push
inc
add
add
add
rol
(bad)
(bad)
(bad)
dec
inc
add
add
add
inc
add
add
add
lock
dec
add
add
add
inc
dec
add
(bad)
(bad)
inc
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
inc
dec
add
inc
add
add
add
push
inc
dec
add
(bad)
(bad)
(bad)
jl
inc
add
add
add
js
dec
add
(bad)
(bad)
call
add
add
mov
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
mov
inc
add
add
add
int3
dec
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
inc
dec
add
add
add
adc
add
(bad)
(bad)
dec
je
add
add
add
cmp
add
(bad)
(bad)
(bad)
fdiv
and
add
pusha
inc
dec
add
(bad)
(bad)
push
je
add
add
add
je
add
(bad)
(bad)
inc
jne
add
add
add
jne
add
add
add
mov
add
add
(bad)
(bad)
jmp
jne
add
add
add
jne
add
add
add
rol
add
(bad)
(bad)
(bad)
cmp
inc
add
add
add
clc
inc
dec
add
(bad)
(bad)
call
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
xor
add
add
xchg
jne
add
add
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
fdiv
add
(bad)
(bad)
jmp
jne
add
add
add
jne
add
add
add
jne
add
add
add
jne
add
(bad)
(bad)
dec
jbe
add
add
adc
add
add
sbb
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jbe
add
add
add
inc
add
(bad)
(bad)
call
inc
add
add
add
adc
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
pusha
inc
dec
add
add
add
dec
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
int3
dec
add
add
add
inc
add
add
add
mov
add
add
(bad)
(bad)
push
add
add
loopne
dec
add
(bad)
(bad)
inc
jbe
add
add
add
or
add
(bad)
(bad)
(bad)
fdiv
add
add
add
xor
add
(bad)
(bad)
(bad)
in
jbe
add
add
add
pop
dec
dec
add
(bad)
(bad)
inc
ja
add
add
add
ja
add
add
add
ja
add
add
add
nop
dec
dec
add
(bad)
(bad)
jmp
ja
add
add
add
mov
add
add
(bad)
(bad)
(bad)
cmp
inc
add
add
add
loopne
dec
add
(bad)
(bad)
call
inc
add
add
add
inc
add
add
add
adc
add
(bad)
(bad)
jmp
add
add
add
add
add
add
inc
dec
dec
add
(bad)
(bad)
dec
add
add
add
add
jo
dec
add
(bad)
(bad)
jmp
add
lods
ja
add
add
add
(bad)
(bad)
mov
add
add
ja
add
add
int3
ja
add
(bad)
(bad)
call
ja
add
add
add
enter
(bad)
(bad)
(bad)
(bad)
call
add
add
ja
add
add
add
ja
add
add
add
js
add
add
add
js
add
add
add
js
add
add
push
js
add
add
add
js
add
add
add
js
add
add
add
xor
add
(bad)
(bad)
inc
inc
add
add
add
pop
dec
dec
add
(bad)
(bad)
call
add
add
add
or
add
add
nop
dec
dec
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
fmul
add
(bad)
(bad)
inc
add
(bad)
js
add
add
add
add
add
add
lods
js
add
add
mov
inc
add
js
add
js
add
js
add
add
fistp
add
js
add
add
out
js
add
add
idiv
add
add
(bad)
js
add
jns
add
add
add
jns
add
add
sar
sldt
add
add
add
jns
add
add
add
jns
add
add
add
jns
add
add
cmp
add
add
sar
add
jns
add
add
fdivr
add
add
loopne
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
outs
jns
add
jns
add
add
add
add
add
add
add
add
add
add
add
jns
add
add
add
add
add
jns
add
add
mov
add
add
jns
add
add
add
jp
add
add
push
jp
add
add
add
dec
dec
dec
add
(bad)
(bad)
jmp
jp
add
add
add
jp
add
add
add
js
dec
add
(bad)
(bad)
(bad)
cmp
inc
add
add
add
add
add
add
test
dec
add
(bad)
(bad)
call
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
call
xchg
sbb
add
add
dec
dec
add
(bad)
(bad)
push
add
add
add
add
jp
add
add
add
jp
add
add
add
jp
add
add
in
inc
add
add
add
js
dec
add
(bad)
(bad)
(bad)
clc
jp
add
add
add
jnp
add
add
add
test
dec
add
(bad)
(bad)
call
jnp
add
add
add
ror
add
(bad)
(bad)
push
jnp
add
add
add
jnp
add
add
add
inc
add
add
add
inc
add
add
add
adc
add
(bad)
(bad)
jmp
add
add
add
cmp
add
(bad)
(bad)
(bad)
js
inc
add
add
add
pusha
dec
dec
add
(bad)
(bad)
dec
xchg
sbb
add
add
add
add
(bad)
(bad)
jmp
add
add
mov
dec
add
(bad)
(bad)
push
xchg
sbb
add
add
dec
dec
add
add
add
dec
dec
add
(bad)
(bad)
inc
add
add
add
add
jnp
add
add
add
jnp
add
add
add
jnp
add
add
add
jnp
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
dec
dec
add
add
add
push
dec
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
jnp
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jnp
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
inc
inc
add
add
add
ror
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
add
jl
add
add
add
jl
add
add
add
jl
add
add
add
add
add
add
inc
jl
add
add
push
jl
add
add
dec
jl
add
add
popa
jl
add
add
ins
jl
add
jl
add
add
add
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
add
or
add
add
add
push
add
add
add
or
add
add
dec
add
add
xor
inc
add
add
add
test
dec
add
(bad)
(bad)
call
xchg
sbb
add
add
push
dec
add
(bad)
(bad)
jmp
add
add
clc
push
dec
add
(bad)
(bad)
inc
jl
add
add
add
and
add
(bad)
(bad)
call
jl
add
add
add
jl
add
add
add
jl
add
add
add
jl
add
add
add
pusha
push
dec
add
(bad)
(bad)
inc
xchg
sbb
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
dec
inc
add
add
add
loopne
dec
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
add
add
cs
add
add
add
jge
add
add
add
jge
add
add
inc
jge
add
jge
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
pop
inc
add
add
add
mov
dec
add
(bad)
(bad)
push
xchg
sbb
add
add
push
dec
add
(bad)
(bad)
dec
jge
add
add
add
add
add
(bad)
(bad)
jmp
jge
add
add
add
sub
add
(bad)
(bad)
(bad)
cld
jge
add
add
add
push
push
dec
add
(bad)
(bad)
call
jle
add
add
add
js
dec
add
(bad)
(bad)
jmp
inc
add
add
add
mov
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
enter
(bad)
(bad)
(bad)
dec
add
add
add
inc
add
add
add
clc
push
dec
add
(bad)
(bad)
jmp
add
(bad)
(bad)
push
add
add
add
inc
add
add
add
xor
(bad)
(bad)
(bad)
call
xchg
sbb
add
add
dec
add
(bad)
(bad)
jmp
add
add
adc
add
add
(bad)
(bad)
(bad)
mov
add
add
ror
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
mov
test
dec
add
add
add
loopne
dec
add
(bad)
(bad)
call
jle
add
add
add
or
add
(bad)
(bad)
jmp
jle
add
(bad)
(bad)
(bad)
in
jle
add
add
add
cmp
add
(bad)
(bad)
inc
jg
add
add
add
jg
add
add
add
push
add
add
(bad)
(bad)
call
inc
add
add
add
nop
push
dec
add
(bad)
(bad)
push
jg
add
add
add
jg
add
add
add
inc
add
(bad)
(bad)
dec
inc
add
add
add
rcl
add
(bad)
(bad)
jmp
inc
add
add
add
clc
push
dec
add
(bad)
(bad)
push
add
add
add
and
add
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
add
add
add
add
add
push
add
add
(bad)
(bad)
inc
jg
add
add
add
jg
add
add
add
jg
add
add
add
mov
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
push
dec
add
jo
add
add
add
clc
push
dec
add
(bad)
(bad)
push
jg
add
add
add
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
dec
add
(bad)
(bad)
dec
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
(bad)
(bad)
inc
add
add
cwde
push
dec
add
add
add
push
dec
add
(bad)
(bad)
inc
add
add
add
add
add
pushf
add
add
add
add
mov
add
add
add
lods
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
push
dec
add
add
add
and
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
dec
add
add
add
mov
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
pop
dec
add
inc
add
add
add
add
add
(bad)
(bad)
call
add
add
add
sub
add
(bad)
(bad)
jmp
inc
add
add
add
push
pop
dec
add
(bad)
(bad)
inc
inc
add
add
add
inc
add
add
add
inc
add
add
add
mov
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
add
rol
add
fild
add
jecxz
inc
add
add
add
add
stc
add
or
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
test
dec
add
(bad)
(bad)
dec
inc
add
add
add
inc
add
add
add
inc
add
add
add
loopne
dec
add
(bad)
(bad)
jmp
add
add
add
inc
add
add
add
adc
add
(bad)
(bad)
dec
xchg
sbb
add
add
pop
dec
add
(bad)
(bad)
jmp
add
add
pusha
pop
dec
add
(bad)
(bad)
push
add
mov
add
add
nop
pop
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
rcr
(bad)
(bad)
(bad)
push
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
inc
add
add
add
sub
(bad)
(bad)
(bad)
push
add
add
add
add
add
add
pop
pop
dec
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
jbe
inc
add
add
add
add
mov
dec
add
(bad)
(bad)
call
xchg
sbb
add
add
pop
dec
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
add
add
add
xor
add
(bad)
(bad)
(bad)
fadd
add
loopne
inc
add
add
add
pusha
pop
dec
add
(bad)
(bad)
(bad)
clc
add
add
add
test
add
add
or
add
test
add
add
sbb
add
inc
add
add
add
test
add
add
test
pop
add
add
test
or
add
inc
test
or
add
dec
test
or
add
pop
test
or
add
test
add
add
jo
inc
add
add
add
inc
add
add
add
add
add
add
add
test
adc
add
int3
test
adc
add
xlat
test
adc
add
loop
inc
add
add
in
test
add
add
cwde
test
push
add
add
add
add
add
add
add
add
test
and
add
pop
pop
dec
add
(bad)
(bad)
call
test
and
add
sbb
(bad)
(bad)
(bad)
jmp
test
and
add
test
dec
add
(bad)
(bad)
(bad)
cmp
inc
add
add
add
inc
add
add
add
fcomp
add
(bad)
(bad)
call
add
(bad)
(bad)
jmp
inc
add
add
add
or
add
(bad)
(bad)
(bad)
jl
inc
add
add
add
xor
add
(bad)
(bad)
call
add
add
pop
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
lods
test
add
add
mov
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
cwde
pop
dec
add
add
add
add
enter
(bad)
(bad)
(bad)
dec
test
and
add
lock
dec
add
add
add
pusha
dec
add
(bad)
(bad)
inc
add
add
add
add
test
add
add
in
inc
add
add
add
test
add
add
hlt
test
add
add
cld
test
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
dec
add
inc
add
add
add
js
dec
add
(bad)
(bad)
call
xchg
add
add
and
xchg
sbb
pusha
dec
add
add
add
pusha
dec
add
(bad)
(bad)
inc
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
pusha
dec
add
add
add
add
add
add
add
add
sbb
add
add
add
dec
add
add
add
add
add
mov
add
aam
inc
add
add
add
dec
popa
dec
add
(bad)
(bad)
dec
inc
add
add
add
inc
add
add
add
js
dec
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
cmps
xchg
pop
add
add
add
add
add
add
xchg
or
add
(bad)
xchg
or
add
mov
add
add
xchg
add
add
fiadd
add
out
xchg
push
add
add
xchg
push
add
add
xchg
add
add
out
inc
add
add
add
inc
add
add
add
inc
add
add
sbb
inc
add
add
add
dec
bound
add
add
and
(bad)
(bad)
(bad)
inc
add
add
add
add
xchg
add
add
cmp
add
inc
xchg
add
add
dec
xchg
add
add
push
xchg
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
retf
inc
add
add
add
enter
(bad)
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
lahf
xchg
and
add
sbb
add
(bad)
(bad)
push
add
mov
add
add
dec
arpl
(bad)
(bad)
(bad)
call
xchg
add
add
fild
xchg
sbb
add
add
dec
add
(bad)
(bad)
push
xchg
and
add
mov
add
add
(bad)
(bad)
dec
mov
add
add
adc
xchg
sbb
add
add
arpl
(bad)
(bad)
(bad)
jmp
inc
add
add
add
clc
arpl
(bad)
(bad)
(bad)
(bad)
cmp
inc
add
add
add
and
(bad)
(bad)
(bad)
call
inc
add
add
add
dec
fs
add
(bad)
(bad)
jmp
add
add
add
jo
dec
add
(bad)
(bad)
(bad)
js
inc
add
add
add
cwde
fs
add
(bad)
(bad)
dec
xchg
sbb
add
add
fs
add
(bad)
(bad)
jmp
add
add
call
add
add
dec
add
(bad)
(bad)
inc
add
add
add
add
add
mov
add
add
mov
add
add
iret
mov
add
add
xlat
mov
add
mov
add
add
jmp
add
mov
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
sub
add
xor
add
cmp
add
inc
mov
add
add
dec
mov
add
add
push
mov
add
add
pop
mov
add
mov
add
add
outs
mov
add
mov
add
mov
add
add
mov
add
xchg
mov
add
add
pushf
mov
add
add
cmps
mov
add
add
scas
mov
add
add
mov
inc
add
add
add
add
add
mov
and
add
ror
add
fimul
add
loop
inc
add
add
add
mov
add
add
repnz
and
add
cli
mov
add
add
mov
add
add
or
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
fild
inc
fild
and
add
nop
dec
add
(bad)
(bad)
jmp
mov
add
add
sub
xchg
sbb
add
add
dec
add
(bad)
(bad)
inc
inc
add
add
add
call
add
add
(bad)
(bad)
call
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
jg
inc
add
add
mov
add
xchg
mov
add
add
popf
mov
add
add
movs
mov
add
add
mov
inc
add
add
add
add
add
mov
add
add
into
mov
add
add
(bad)
mov
add
add
loope
inc
add
add
add
mov
add
add
test
inc
add
add
add
add
add
mov
and
add
mov
dec
add
(bad)
(bad)
push
mov
and
add
fsub
add
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
call
inc
add
add
add
sub
add
add
add
push
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
call
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
pusha
push
add
sub
and
add
mov
add
add
(bad)
(bad)
(bad)
js
inc
add
add
add
loopne
dec
add
add
add
push
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
imul
cdq
repz
add
add
add
inc
imul
push
imul
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
dec
add
test
add
add
cwde
imul
(bad)
(bad)
(bad)
push
add
add
shr
(bad)
(bad)
(bad)
inc
mov
and
add
call
add
add
(bad)
(bad)
(bad)
fmul
(bad)
jmp
mov
and
add
sbb
add
add
add
push
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
inc
and
add
jo
dec
add
(bad)
(bad)
dec
mov
and
add
cwde
push
add
(bad)
(bad)
call
inc
add
add
add
shr
(bad)
(bad)
(bad)
push
mov
and
add
call
add
add
(bad)
(bad)
inc
add
add
add
adc
add
(bad)
(bad)
call
inc
add
add
add
cmp
add
(bad)
(bad)
jmp
add
add
add
pusha
imul
add
add
(bad)
(bad)
inc
xchg
sbb
imul
add
add
(bad)
(bad)
call
add
movs
mov
add
add
lods
mov
add
add
mov
inc
add
add
add
xchg
sbb
add
add
imul
add
add
(bad)
(bad)
call
mov
(bad)
(bad)
(bad)
(bad)
fisttp
add
mov
add
add
icebp
mov
add
add
stc
mov
add
add
add
add
or
inc
add
add
add
lea
pop
add
add
lea
or
add
sub
add
add
lea
add
add
inc
lea
or
add
dec
lea
or
add
push
lea
add
add
jae
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
lea
or
add
fwait
lea
sbb
add
cmps
lea
sbb
add
scas
lea
and
add
enter
(bad)
(bad)
(bad)
(bad)
fmul
add
loopne
inc
add
add
add
lea
and
add
add
add
(bad)
(bad)
inc
mov
add
add
or
add
push
mov
add
add
and
add
sub
inc
add
add
add
dec
ins
dec
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
(bad)
(bad)
call
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
xchg
sbb
add
add
ins
dec
add
(bad)
(bad)
jmp
add
lods
mov
add
add
mov
inc
add
add
add
clc
ins
dec
add
(bad)
(bad)
dec
mov
(bad)
(bad)
(bad)
call
mov
and
add
sub
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
push
mov
and
add
pop
outs
dec
add
(bad)
(bad)
dec
pop
and
add
sub
(bad)
(bad)
(bad)
call
inc
add
add
add
test
dec
add
(bad)
(bad)
push
pop
(bad)
(bad)
(bad)
(bad)
cmp
add
inc
pop
add
add
dec
pop
add
add
jo
inc
add
add
add
inc
add
add
add
inc
add
pop
add
add
or
add
add
add
inc
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
(bad)
push
add
mov
add
add
push
add
add
(bad)
(bad)
call
pop
add
add
fmul
add
out
inc
add
add
add
pop
add
add
std
pop
add
add
or
xchg
sbb
add
add
add
add
(bad)
(bad)
jmp
nop
inc
add
add
add
loopne
dec
add
(bad)
(bad)
push
inc
add
add
add
or
add
(bad)
(bad)
dec
inc
add
add
add
xor
add
(bad)
(bad)
call
add
add
add
pop
jo
add
(bad)
(bad)
push
inc
add
add
add
xor
(bad)
(bad)
(bad)
inc
xchg
sbb
add
add
add
add
(bad)
(bad)
call
add
add
shl
add
(bad)
(bad)
jmp
add
mov
inc
add
add
add
add
add
nop
inc
add
add
add
nop
inc
add
add
loopne
inc
add
add
add
and
add
(bad)
(bad)
(bad)
clc
nop
inc
add
add
add
xchg
inc
add
add
add
xchg
inc
add
add
add
pop
jno
add
(bad)
(bad)
jmp
xchg
inc
add
add
add
xor
(bad)
(bad)
(bad)
push
inc
add
add
add
test
dec
add
(bad)
(bad)
dec
inc
add
add
add
shl
add
(bad)
(bad)
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
xchg
xchg
inc
add
(bad)
(bad)
jmp
add
add
sub
add
(bad)
(bad)
inc
xchg
inc
add
add
add
xchg
inc
add
add
add
pop
jb
add
add
add
dec
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
mov
add
(bad)
(bad)
dec
inc
add
inc
add
add
add
shl
(bad)
(bad)
(bad)
push
xchg
inc
add
add
add
xchg
inc
add
add
add
xchg
inc
add
add
add
xchg
inc
add
add
add
add
add
(bad)
(bad)
push
xchg
inc
add
add
add
xchg
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
dec
add
add
push
add
add
(bad)
(bad)
jmp
add
add
nop
jae
add
(bad)
(bad)
inc
xchg
inc
add
add
add
mov
add
add
jae
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jae
add
add
add
add
add
(bad)
(bad)
(bad)
out
push
inc
add
add
add
mov
add
(bad)
(bad)
call
push
inc
add
push
inc
add
add
add
xor
(bad)
(bad)
(bad)
push
xchg
inc
add
add
add
pop
je
add
(bad)
(bad)
call
xchg
inc
add
add
add
xchg
inc
add
add
add
xchg
inc
add
add
add
xchg
inc
add
add
add
cwde
je
add
(bad)
(bad)
call
inc
add
add
add
shl
add
add
(bad)
(bad)
push
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
mov
add
add
sbb
add
(bad)
(bad)
jmp
xchg
inc
add
add
add
inc
jne
add
add
add
dec
add
(bad)
(bad)
inc
xchg
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
dec
add
arpl
add
add
mov
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
xchg
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
jne
add
add
add
add
add
(bad)
(bad)
call
jbe
add
add
add
mov
add
(bad)
(bad)
(bad)
cmp
add
inc
add
add
add
and
add
add
add
dec
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
jns
add
jns
add
add
add
mov
add
(bad)
(bad)
(bad)
mov
add
add
jp
add
add
add
enter
add
add
fdiv
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jbe
add
add
add
add
add
(bad)
(bad)
jmp
add
add
mov
add
(bad)
(bad)
jmp
add
add
add
add
inc
ja
add
(bad)
(bad)
jmp
inc
add
add
add
push
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
xchg
inc
add
(bad)
(bad)
dec
xchg
inc
add
add
add
shl
(bad)
(bad)
(bad)
push
xchg
inc
add
add
add
call
add
add
js
add
(bad)
(bad)
inc
add
add
add
add
xchg
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
js
add
inc
add
add
add
dec
js
add
(bad)
(bad)
push
xchg
inc
add
add
add
jo
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
mov
add
(bad)
(bad)
jmp
add
add
cdq
inc
add
add
add
call
add
add
(bad)
(bad)
jmp
inc
add
add
add
adc
add
(bad)
(bad)
inc
add
add
cmp
add
(bad)
(bad)
jmp
add
add
pusha
jns
add
(bad)
(bad)
inc
xchg
inc
add
add
add
mov
add
(bad)
(bad)
jmp
xchg
inc
add
add
add
xchg
inc
add
(bad)
(bad)
push
xchg
inc
add
add
add
sar
(bad)
(bad)
(bad)
call
xchg
inc
add
add
add
call
add
add
(bad)
(bad)
push
xchg
inc
add
add
add
adc
add
add
add
jp
add
(bad)
(bad)
inc
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
call
inc
add
add
add
mov
add
(bad)
(bad)
(bad)
jg
inc
add
add
add
nop
jp
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
mov
add
(bad)
(bad)
push
add
add
mov
add
add
add
or
add
add
add
jnp
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jnp
add
mov
xchg
sbb
add
add
dec
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
nop
jnp
add
(bad)
(bad)
inc
xchg
inc
add
add
add
mov
add
add
(bad)
(bad)
jmp
xchg
inc
add
add
add
loopne
dec
add
add
add
jnp
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jl
add
add
add
add
add
mov
add
(bad)
(bad)
inc
fld
add
add
fld
add
add
dec
jl
add
(bad)
(bad)
call
xchg
inc
add
add
add
jo
dec
add
(bad)
(bad)
push
xchg
inc
add
add
add
cwde
jl
add
(bad)
(bad)
call
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
fdivr
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
xchg
inc
add
add
add
sub
add
(bad)
(bad)
jmp
xchg
inc
add
add
add
fisttp
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
xor
add
dec
add
add
add
mov
add
(bad)
(bad)
inc
cwde
inc
add
add
add
mov
dec
add
add
add
jge
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jge
add
add
add
add
add
mov
add
(bad)
(bad)
jmp
add
add
jmp
xchg
sbb
add
add
jle
add
(bad)
(bad)
push
cwde
inc
add
add
add
inc
jle
add
(bad)
(bad)
call
inc
add
add
add
push
add
add
(bad)
(bad)
push
inc
add
add
add
nop
jle
add
(bad)
(bad)
call
add
add
mov
add
add
(bad)
(bad)
push
add
add
add
add
cwde
inc
add
add
add
lock
add
(bad)
(bad)
jmp
cwde
inc
add
add
add
cwde
inc
add
add
add
cwde
inc
add
(bad)
(bad)
inc
cdq
inc
add
add
add
xor
add
(bad)
(bad)
jmp
cdq
inc
add
add
add
pop
jg
add
(bad)
(bad)
inc
inc
add
add
add
cmp
add
add
nop
jg
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
mov
add
(bad)
(bad)
call
inc
add
inc
add
add
add
call
add
add
(bad)
(bad)
push
inc
add
add
add
adc
add
(bad)
(bad)
(bad)
call
add
add
cmp
add
(bad)
(bad)
(bad)
push
add
add
pusha
or
add
add
(bad)
(bad)
call
cdq
inc
add
add
add
mov
add
cwde
or
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
inc
inc
add
add
add
mov
add
(bad)
(bad)
dec
inc
inc
add
inc
inc
add
add
add
add
add
(bad)
(bad)
(bad)
inc
call
or
add
adc
(bad)
call
call
sub
(bad)
push
call
push
call
pop
call
imul
push
inc
add
add
add
(bad)
(bad)
dec
add
add
call
inc
call
add
add
nop
or
(bad)
(bad)
(bad)
push
add
add
mov
add
add
or
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
or
or
add
mov
(bad)
(bad)
inc
inc
add
add
add
mov
add
(bad)
(bad)
jmp
inc
add
add
add
xor
add
(bad)
(bad)
(bad)
jmp
call
jmp
inc
add
add
add
call
sti
call
push
fwait
inc
add
(bad)
(bad)
dec
fwait
inc
add
add
add
(bad)
(bad)
call
add
add
fwait
inc
add
(bad)
(bad)
jmp
fwait
inc
add
add
add
inc
add
(bad)
(bad)
push
inc
add
add
add
fwait
inc
add
(bad)
(bad)
inc
inc
add
add
add
inc
add
(bad)
(bad)
call
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
jmp
inc
add
add
add
lock
add
add
or
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
or
add
add
add
add
(bad)
(bad)
jmp
inc
add
add
add
mov
add
(bad)
(bad)
dec
add
add
add
add
push
add
add
(bad)
(bad)
inc
fwait
inc
add
add
add
nop
or
add
add
(bad)
(bad)
jmp
fwait
inc
add
add
add
mov
add
add
(bad)
(bad)
inc
pushf
inc
add
add
add
loopne
dec
add
(bad)
(bad)
jmp
pushf
inc
add
add
add
or
add
(bad)
(bad)
inc
inc
add
add
add
xor
add
(bad)
(bad)
jmp
inc
add
add
add
pop
test
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
test
dec
add
(bad)
(bad)
inc
pushf
inc
add
(bad)
(bad)
jmp
pushf
inc
add
(bad)
(bad)
(bad)
out
pushf
inc
add
add
add
loopne
dec
add
(bad)
(bad)
call
popf
inc
add
(bad)
(bad)
call
popf
inc
add
add
add
adc
add
(bad)
(bad)
(bad)
push
popf
inc
add
add
add
cmp
add
(bad)
(bad)
(bad)
call
inc
add
(bad)
(bad)
push
inc
add
(bad)
(bad)
(bad)
jg
inc
add
(bad)
(bad)
jmp
jl
add
xchg
add
xchg
add
pop
add
xchg
add
add
pop
add
add
add
add
not
pop
add
xchg
or
rcl
or
mov
or
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
dec
mov
add
or
js
or
mov
or
cmps
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
dec
mov
add
or
push
mov
add
mov
add
or
aam
or
call
mov
add
mov
add
mov
add
or
cmp
or
mov
add
add
or
mov
mov
add
mov
add
mov
add
mov
add
mov
add
or
mov
add
or
push
mov
add
or
outs
mov
add
add
mov
add
or
fmul
add
lea
add
lea
add
lea
add
lea
add
or
push
or
or
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
mov
add
add
or
je
or
mov
or
test
or
mov
mov
add
mov
add
mov
add
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
vpmacssdd
add
(bad)
(bad)
(bad)
(bad)
nop
or
push
nop
or
and
or
dec
nop
or
pop
nop
or
push
nop
or
mov
or
scas
nop
or
retf
add
nop
or
(bad)
nop
or
push
xchg
or
xor
or
pusha
xchg
or
jo
or
adc
add
or
add
add
add
add
or
add
push
add
add
add
xor
or
inc
mov
add
or
sbb
or
add
add
dec
dec
inc
inc
push
push
xor
cs
ins
add
xor
inc
push
jo
jb
add
sub
inc
push
js
inc
add
add
popa
jb
jo
gs
add
add
popa
jb
outs
ja
jb
add
sub
inc
push
ja
jb
add
add
popa
jb
jb
jbe
js
add
inc
push
xor
cs
ins
add
jecxz
push
gs
outs
outs
jae
ins
gs
je
ins
dec
popa
outs
fs
gs
mov
gs
imul
arpl
inc
imul
or
inc
gs
outs
ins
ins
popa
outs
fs
imul
push
gs
imul
outs
dec
inc
dec
add
fild
inc
gs
gs
imul
jp
inc
gs
gs
inc
jb
je
arpl
push
arpl
outs
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outs
add
pop
inc
outs
je
jb
jb
je
arpl
push
arpl
outs
add
sub
inc
gs
outs
outs
jae
ins
gs
outs
fs
repnz
je
outs
outs
jae
ins
gs
outs
fs
mov
inc
gs
je
dec
popa
outs
fs
add
imul
jne
je
inc
jns
gs
outs
push
imul
mov
push
imul
outs
dec
jne
je
inc
jns
add
inc
gs
popa
jae
inc
jb
outs
jb
add
add
gs
imul
dec
add
fs
imul
add
or
inc
jb
inc
imul
dec
push
dec
add
inc
gs
outs
fs
gs
imul
add
push
add
popa
ins
inc
jb
gs
add
jb
popa
je
gs
popa
addr16
add
jmp
inc
outs
jb
popa
je
gs
popa
addr16
add
jmp
push
imul
imul
jns
add
jmp
outs
outs
ja
inc
imul
jns
add
add
outs
jae
dec
popa
outs
fs
add
push
gs
imul
push
add
gs
je
inc
imul
gs
popa
jae
inc
jb
outs
jb
add
add
je
imul
bound
gs
add
mov
outs
jbe
inc
imul
jns
add
add
jbe
inc
imul
gs
imul
bound
gs
add
mov
outs
jbe
inc
imul
jns
add
add
jbe
inc
imul
jb
popa
je
inc
imul
jns
add
dec
add
gs
je
inc
imul
jns
add
jl
inc
gs
gs
inc
imul
gs
gs
inc
imul
jae
jb
outs
inc
add
popa
add
je
jne
ins
push
popa
je
dec
popa
ins
gs
add
bound
inc
gs
jne
ins
push
popa
je
dec
popa
ins
gs
add
cmp
inc
gs
jne
jb
outs
je
imul
jns
add
inc
push
gs
jne
jb
outs
je
imul
jns
add
add
push
gs
jne
jb
outs
je
imul
jns
add
cmp
inc
gs
jne
jb
outs
je
imul
jns
add
rol
push
gs
jb
push
inc
add
add
popa
jb
push
push
add
add
je
gs
jo
popa
je
inc
add
int3
add
je
gs
jo
popa
je
push
add
leave
add
je
gs
jo
imul
add
retf
gs
gs
jo
imul
add
lds
inc
imul
gs
add
outs
fs
imul
gs
add
int3
add
outs
fs
imul
gs
add
rol
inc
imul
inc
imul
imul
inc
imul
jb
popa
je
inc
imul
gs
imul
adc
push
gs
imul
gs
add
imul
outs
je
outs
ins
add
fs
imul
jb
je
inc
imul
je
outs
fs
inc
imul
gs
jne
jb
outs
je
jb
arpl
jae
cwde
add
je
jb
arpl
fs
jae
add
xor
inc
outs
ins
jo
jb
inc
imul
mov
gs
imul
jae
gs
push
imul
inc
gs
jns
je
ins
dec
outs
outs
add
add
outs
bound
dec
gs
outs
jb
push
je
je
jae
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
mov
inc
outs
jae
popa
je
push
imul
ins
gs
imul
imul
outs
inc
outs
jae
popa
je
push
imul
jns
je
ins
push
imul
ins
gs
imul
inc
gs
jns
je
ins
push
imul
popa
imul
je
jo
gs
bound
arpl
add
dec
jo
outs
inc
jbe
outs
je
add
add
ins
popa
jo
imul
ins
add
dec
popa
jo
imul
ins
add
dec
jo
outs
inc
imul
outs
addr16
add
aad
inc
gs
imul
je
add
push
jb
arpl
jae
imul
dec
outs
arpl
inc
imul
outs
inc
imul
cdq
add
gs
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
add
je
jne
jb
outs
je
push
dec
add
cmp
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
push
imul
ins
ins
outs
arpl
add
push
imul
jb
add
je
outs
jb
imul
push
arpl
add
gs
je
inc
jbe
outs
je
add
or
push
gs
jbe
outs
je
add
add
jae
je
jbe
outs
je
add
inc
jb
popa
je
push
gs
popa
jo
outs
jb
inc
add
mov
gs
jae
push
gs
popa
jo
outs
jb
add
sbb
dec
outs
imul
inc
jb
je
arpl
push
arpl
outs
add
add
ins
push
outs
ja
outs
add
jae
inc
js
gs
imul
dec
gs
jo
ins
ins
outs
arpl
or
dec
gs
jo
jb
add
adc
dec
gs
jo
gs
ins
ins
outs
arpl
imul
je
push
push
add
pop
add
push
gs
popa
ins
jne
add
push
ins
jae
gs
popa
ins
jne
add
je
push
add
or
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
gs
gs
imul
inc
js
je
jb
arpl
jae
push
add
inc
ins
ins
outs
arpl
add
push
outs
push
gs
js
gs
imul
gs
push
add
ins
imul
outs
arpl
jae
add
add
popa
jo
imul
inc
gs
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
add
add
popa
jo
gs
jb
jns
or
dec
gs
jo
jb
popa
je
add
sub
dec
jae
popa
fs
jb
je
push
je
add
add
je
popa
outs
fs
gs
outs
jne
je
add
inc
gs
imul
scas
add
je
je
jb
jne
dec
outs
outs
inc
add
add
jne
push
inc
jne
data16
add
bound
push
outs
push
gs
js
gs
imul
gs
add
add
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
inc
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
push
add
je
jb
outs
arpl
fs
arpl
ins
outs
je
add
add
je
jb
outs
arpl
fs
outs
arpl
ins
outs
je
add
add
inc
popa
fs
gs
fs
je
add
add
inc
popa
fs
outs
fs
je
add
sub
push
gs
je
dec
popa
outs
fs
add
cld
add
je
push
dec
outs
outs
add
add
je
inc
push
add
mov
inc
gs
inc
dec
inc
push
add
cmp
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
mov
inc
gs
je
imul
push
add
dec
inc
push
dec
inc
dec
xor
cs
ins
add
push
bound
cmc
jne
add
jp
add
inc
add
inc
add
xchg
sub
inc
add
inc
add
fld
(bad)
repz
add
inc
add
adc
add
pop
inc
add
xor
out
dec
inc
add
inc
add
imul
pushf
inc
add
inc
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pushf
inc
add
inc
add
mov
inc
add
inc
add
fld
fiadd
fiadd
test
inc
add
cs
add
push
inc
add
arpl
xor
add
ins
inc
add
add
rol
sbb
add
add
add
add
add
add
add
add
add
add
add
dec
add
and
add
add
add
add
push
outs
je
add
add
and
and
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
inc
jbe
cmp
add
or
add
and
add
add
or
add
and
and
das
jae
and
and
and
dec
dec
push
push
and
and
push
push
add
add
and
and
add
add
and
push
jo
gs
popa
and
and
push
das
push
and
je
outs
add
add
or
inc
imul
and
and
inc
outs
ins
jo
gs
imul
and
and
and
jl
and
and
and
and
outs
ins
jo
gs
imul
add
add
popa
cmp
add
outs
arpl
popa
jb
and
gs
fs
and
and
add
inc
push
push
and
jb
ja
jb
and
gs
fs
add
add
jp
cmp
add
and
and
and
and
and
sub
and
and
add
or
dec
and
add
or
cmp
add
and
add
add
and
add
or
push
imul
add
hlt
mov
cs
inc
push
inc
inc
je
ins
inc
jb
popa
imul
gs
imul
outs
jae
ins
gs
ins
outs
jae
inc
inc
add
mov
cs
inc
pop
add
add
hlt
mov
cs
inc
inc
add
add
push
gs
outs
outs
jae
ins
gs
je
ins
dec
popa
outs
fs
gs
popaw
imul
inc
movs
dec
add
movs
dec
add
movs
dec
add
movs
dec
add
mov
dec
add
mov
dec
add
mov
dec
add
dec
add
dec
add
imul
outs
and
jb
jb
add
inc
popa
je
and
jb
jb
imul
jns
je
and
ins
gs
outs
outs
and
jae
ja
jb
aas
add
add
popa
and
jb
jb
add
inc
and
imul
outs
arpl
jo
gs
ins
gs
outs
outs
and
jae
ja
jb
aas
add
add
inc
and
imul
jae
jo
outs
jb
gs
je
outs
add
dec
outs
and
ins
gs
je
and
outs
arpl
jae
inc
jbe
jb
je
imul
dec
imul
add
push
jb
arpl
jae
outs
and
arpl
jbe
cmp
add
add
inc
popa
outs
daa
je
popa
ins
ins
outs
arpl
and
jno
imul
ins
outs
jb
and
inc
push
push
dec
push
cmp
add
imul
and
and
add
add
je
popa
arpl
and
add
add
push
gs
imul
and
add
add
ins
and
add
or
jb
popa
fs
gs
jae
jae
and
gs
jb
je
and
je
and
add
add
cmp
add
add
add
outs
daa
je
popa
ins
ins
outs
arpl
and
jno
imul
ins
outs
jb
add
inc
popa
outs
and
je
outs
jo
outs
and
ins
and
and
arpl
jbe
add
add
inc
popa
outs
and
je
outs
jo
outs
and
arpl
jo
gs
arpl
jbe
and
outs
outs
and
jae
ja
jb
aas
add
jb
jb
and
push
jne
and
gs
jae
inc
jb
outs
jb
cmp
add
and
dec
add
cmps
dec
add
cmps
dec
add
add
add
add
in
dec
add
add
add
add
add
movs
dec
add
add
add
add
add
add
add
add
add
stos
dec
add
add
add
add
add
add
add
add
or
add
shl
add
add
add
add
add
add
add
add
sbb
dec
add
add
add
add
add
and
and
and
and
and
and
and
and
and
inc
add
ins
add
jb
add
jae
add
add
add
je
je
jb
add
add
and
and
and
inc
add
je
add
add
add
add
add
add
add
add
add
add
outs
add
add
jb
jae
add
data16
ins
add
jae
add
dec
imul
popa
jb
push
and
add
dec
add
bound
add
add
ins
add
jae
je
add
and
push
add
jp
add
add
add
jb
add
and
push
add
popa
add
add
add
add
add
add
add
imul
add
add
inc
add
jb
outs
add
add
dec
add
outs
add
add
add
dec
add
add
add
add
push
add
arpl
je
outs
add
and
push
add
jp
add
add
jb
add
je
outs
add
and
inc
add
jo
ins
add
arpl
popa
add
add
outs
add
add
push
add
add
popa
add
add
add
add
inc
add
add
add
imul
jne
popa
add
add
add
add
jae
jae
add
inc
add
popa
add
popa
add
je
add
imul
imul
add
inc
add
add
imul
add
ins
add
add
add
add
add
jb
jae
and
push
add
jp
add
add
add
push
add
arpl
popa
add
add
imul
add
inc
add
push
add
add
imul
add
add
popa
add
add
add
add
sub
add
add
add
outs
add
add
add
add
inc
add
add
imul
add
add
add
add
imul
add
add
data16
jae
add
add
add
jne
ins
add
add
outs
add
add
add
add
outs
add
add
add
add
add
add
jae
imul
add
inc
add
ins
add
jae
add
inc
add
ins
add
add
jae
add
push
add
add
imul
add
push
add
jae
imul
outs
add
add
add
inc
add
ins
add
add
je
add
inc
add
add
imul
add
jb
outs
add
jo
add
push
add
add
add
add
inc
add
ins
add
and
push
add
jae
je
add
add
dec
add
jae
je
and
dec
add
add
dec
add
je
push
add
add
add
outs
add
add
add
add
add
add
add
add
push
add
add
inc
add
arpl
je
imul
popa
add
jns
and
push
add
jp
add
add
jo
ins
add
je
and
inc
add
je
add
add
push
add
ins
add
je
and
inc
add
data16
jb
add
add
add
outs
add
jb
jns
jo
je
add
add
outs
add
ins
add
outs
add
add
add
outs
add
add
add
outs
add
add
imul
add
add
inc
add
arpl
add
jae
add
add
add
jb
add
je
add
add
je
je
jb
imul
je
add
add
add
push
add
arpl
imul
add
add
imul
add
push
add
jp
add
add
add
outs
add
add
jb
add
add
dec
add
ins
add
add
add
push
add
je
push
add
cmp
ins
gs
imul
arpl
inc
imul
gs
outs
jb
add
imul
arpl
je
ins
add
sub
and
add
add
and
add
inc
gs
jb
jo
jb
jns
popa
ins
jne
and
jb
jb
add
arpl
jbe
jae
and
add
sub
or
sub
add
add
imul
imul
add
and
add
dec
add
dec
add
mov
dec
add
stos
dec
add
stos
dec
add
stos
dec
add
add
inc
add
outs
add
add
data16
add
push
outs
jae
jo
outs
jb
gs
arpl
jbe
and
add
add
aaa
sub
arpl
outs
outs
je
imul
push
fs
je
ja
jb
jae
ja
je
and
arpl
jbe
jae
add
add
dec
outs
arpl
jb
arpl
outs
ins
ins
popa
outs
and
add
or
popa
cmp
aaa
jp
and
outs
ins
ins
popa
outs
fs
jae
imul
cs
and
jb
push
outs
popa
ins
gs
imul
ins
gs
cs
or
and
and
and
pop
cmp
ins
imul
jae
cs
or
cmp
outs
ins
ins
popa
outs
fs
or
and
and
and
ins
gs
je
and
arpl
jbe
or
and
and
outs
arpl
popa
jb
or
and
inc
gs
gs
and
ins
gs
data16
ins
and
arpl
jbe
or
and
and
je
popa
arpl
imul
ins
and
arpl
jbe
and
ja
je
outs
jne
and
imul
arpl
jns
outs
popa
ins
gs
or
and
dec
imul
je
outs
je
and
and
arpl
jbe
or
and
push
gs
and
je
addr16
je
and
and
arpl
jbe
or
and
and
fs
je
and
ins
gs
je
and
arpl
jbe
or
and
and
je
popa
arpl
imul
push
ins
and
je
jae
cmp
ja
je
push
and
sub
pop
sub
jnp
ins
imul
jl
ja
ins
arpl
fs
and
arpl
and
arpl
jbe
jae
and
sub
pop
sub
jnp
ins
imul
jl
ja
ins
arpl
fs
and
arpl
and
arpl
jbe
jae
and
sub
inc
imul
jo
jb
outs
je
and
imul
and
sub
sub
jnp
ins
imul
jl
ja
ins
arpl
fs
and
arpl
and
ins
outs
popa
ins
gs
and
sub
jb
ins
gs
jb
jge
and
je
arpl
jo
gs
imul
push
and
jb
arpl
jns
cmp
jae
je
dec
jne
jo
je
imul
jns
and
sub
jae
ja
jb
jge
and
je
push
popa
jae
ja
jb
or
and
xor
and
arpl
jae
and
bound
arpl
imul
jae
jae
push
push
inc
sub
push
dec
dec
and
dec
push
jge
and
je
arpl
jb
gs
outs
jb
ins
imul
gs
and
sub
jnp
popa
ins
gs
cmp
inc
jb
popa
je
and
pop
and
arpl
jbe
or
and
outs
popa
ins
gs
cmp
jb
popa
and
popa
and
outs
ins
and
imul
ins
je
and
outs
ja
je
arpl
imul
outs
jb
popa
je
outs
outs
and
jb
ins
and
dec
imul
ins
ins
popa
outs
or
and
ja
imul
and
jae
outs
jne
or
and
sub
gs
jae
outs
jae
je
jbe
and
jae
and
fs
and
and
ins
jo
gs
and
popa
jb
and
ins
gs
and
sub
jo
jge
and
je
je
jo
and
and
arpl
jbe
or
and
pop
jo
pop
pop
jno
pop
pop
jb
pop
pop
js
pop
pop
jns
pop
pop
jp
pop
pop
and
ja
jb
push
popa
ins
gs
cmp
push
jo
popa
je
and
je
outs
outs
jae
and
sub
jp
jge
bound
ins
jl
pop
cmp
inc
jb
popa
je
and
ins
jne
gs
and
sub
popa
je
jge
cmp
popa
jae
imul
imul
imul
jns
and
jo
jns
jo
je
and
popa
outs
jae
popa
and
jo
jb
jb
and
arpl
jns
and
sub
sub
pop
jnp
ins
imul
jl
ja
ins
arpl
fs
and
arpl
and
ins
outs
popa
ins
gs
and
sub
jae
jne
and
jae
outs
outs
and
ins
and
gs
gs
add
or
sub
sub
and
xor
and
inc
outs
jo
jb
addr16
sub
xor
cmp
sub
and
outs
jb
push
popa
jbe
outs
jbe
and
xor
xor
cmp
add
add
add
add
mov
cs
inc
push
inc
push
jns
je
ins
inc
js
gs
imul
inc
jb
outs
jb
cmp
add
add
inc
jb
push
inc
jb
outs
jb
cmp
add
add
inc
push
inc
cmp
add
add
jp
cmp
and
and
and
add
add
inc
outs
ins
jo
gs
gs
add
add
inc
imul
outs
ins
fs
cmp
add
add
push
dec
dec
dec
inc
cmp
inc
popa
outs
outs
outs
je
outs
jo
outs
and
add
or
inc
add
jb
outs
add
cmp
or
add
add
or
add
jae
add
push
inc
push
dec
dec
dec
inc
cmp
inc
popa
outs
outs
outs
je
imul
add
and
ins
add
add
sub
sub
sub
and
and
push
inc
push
dec
dec
dec
inc
push
and
jb
imul
or
outs
imul
outs
jb
add
add
or
inc
and
jb
jb
add
fs
add
add
add
add
add
and
add
jb
popa
je
cmp
add
add
add
add
mov
cs
inc
push
xor
inc
outs
jne
inc
dec
inc
js
je
outs
fs
inc
add
mov
dec
add
add
mov
add
dec
add
or
je
jb
popa
ins
and
jb
jb
and
add
or
imul
outs
and
jb
jb
add
add
or
inc
push
push
dec
push
cmp
inc
popa
outs
daa
je
popa
ins
ins
outs
arpl
and
jno
imul
ins
outs
jb
and
add
add
inc
jb
popa
imul
imul
or
add
add
or
jb
jb
or
add
hlt
mov
cs
add
add
add
hlt
mov
cs
inc
push
aas
and
push
je
imul
inc
inc
inc
inc
add
add
mov
cs
inc
push
aas
and
push
je
imul
inc
inc
inc
inc
add
add
mov
cs
inc
push
inc
inc
jb
push
outs
ins
ins
popa
outs
fs
imul
jo
imul
add
add
hlt
mov
cs
inc
push
inc
dec
gs
js
gs
imul
jns
je
ins
and
jb
jb
add
add
mov
add
dec
add
add
popa
outs
outs
imul
push
jo
popa
je
outs
and
arpl
jbe
and
add
inc
jb
popa
je
outs
and
arpl
jbe
and
add
pop
add
outs
add
je
add
je
pop
add
add
imul
jae
jo
outs
jb
gs
arpl
jbe
add
add
and
push
inc
push
dec
dec
dec
inc
cmp
add
add
push
je
dec
jne
add
inc
outs
ins
jo
gs
imul
add
je
and
gs
and
and
add
add
push
dec
dec
dec
inc
cmp
add
add
dec
add
dec
add
pop
sub
and
and
dec
sub
das
and
inc
sub
jns
and
and
push
sub
jo
popa
ins
ins
and
and
jne
je
and
outs
popa
ins
and
ins
and
and
push
sub
je
and
aas
or
add
inc
outs
je
jb
jo
jae
ja
jb
and
ja
ins
ins
and
je
bound
arpl
gs
add
add
dec
add
add
add
imul
outs
outs
je
data16
ins
add
jae
imul
je
bound
jae
outs
ins
add
add
js
outs
and
outs
dec
outs
add
add
adc
dec
add
mov
add
mov
add
mov
add
add
dec
ins
ins
gs
ins
and
popa
jb
arpl
and
and
jo
je
jae
jb
popa
ins
add
add
jb
jb
jb
popa
imul
jne
and
jb
popa
ins
add
push
outs
gs
arpl
and
and
and
jo
je
jae
jb
popa
ins
add
cmp
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jns
imul
je
add
add
push
push
popa
ins
inc
jb
jbe
add
add
push
add
arpl
popa
add
add
imul
add
pop
add
add
add
add
jbe
jo
xor
cs
ins
add
add
push
gs
outs
arpl
gs
outs
jb
push
jb
jbe
ins
gs
add
push
jae
push
outs
imul
jb
jbe
ins
gs
add
dec
outs
outs
imul
jb
jbe
ins
gs
popa
ins
jne
inc
add
add
outs
push
jb
arpl
jae
outs
imul
add
add
add
je
outs
data16
ins
outs
jb
add
add
add
add
jb
gs
xor
cs
ins
add
add
inc
ins
outs
bound
dec
gs
outs
jb
push
je
je
jae
js
add
add
add
add
mov
cs
inc
push
inc
dec
outs
inc
jne
data16
js
gs
imul
add
enter
aaa
jp
add
add
add
mov
cs
inc
push
inc
dec
jne
inc
jne
data16
js
gs
imul
add
add
add
(bad)
(bad)
dec
mov
dec
add
add
add
add
add
add
add
add
add
add
clc
mov
add
hlt
mov
add
call
add
add
mov
add
fdivr
add
aam
dec
add
add
add
add
add
add
add
mov
add
int3
mov
add
enter
add
add
add
add
add
add
les
add
add
add
add
add
sar
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwde
mov
add
add
add
add
add
xchg
mov
add
jl
dec
add
dec
add
add
mov
dec
add
mov
dec
add
add
mov
add
dec
add
std
add
pusha
mov
add
pop
mov
add
inc
add
push
add
add
dec
add
add
push
add
add
add
ja
outs
daa
je
ja
imul
and
and
outs
addr16
ins
daa
jae
ins
gs
popa
addr16
je
and
ins
and
ins
imul
and
outs
daa
je
ja
imul
jb
jae
gs
popa
and
popa
and
ins
imul
arpl
jb
arpl
imul
imul
popa
outs
and
add
dec
outs
arpl
jb
arpl
imul
imul
imul
outs
arpl
jb
arpl
je
ins
and
and
je
imul
arpl
arpl
jb
gs
outs
arpl
imul
and
jae
imul
outs
outs
outs
je
imul
imul
add
add
sub
add
inc
add
add
add
add
inc
add
add
add
push
add
add
add
push
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
add
dec
add
add
add
dec
add
add
add
push
add
add
add
push
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
aas
add
add
jae
jne
je
add
add
xor
sub
add
inc
add
inc
add
add
add
push
add
add
push
add
push
add
add
dec
add
add
inc
add
add
push
add
push
add
add
dec
add
add
inc
add
add
add
inc
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
inc
add
add
push
add
push
add
pop
add
push
add
add
add
add
add
add
add
add
outs
outs
outs
je
imul
jb
push
je
gs
and
and
and
arpl
popa
jb
push
add
add
outs
jne
and
fs
and
popa
imul
arpl
outs
outs
je
bound
arpl
bound
gs
add
outs
outs
outs
je
jne
and
jae
ins
jne
and
je
outs
popa
ins
gs
outs
jb
je
imul
popa
outs
add
fs
je
and
jb
jb
add
arpl
jb
arpl
popa
jo
imul
popa
add
dec
popa
jo
imul
ins
and
jb
jb
inc
popa
outs
and
je
outs
jo
outs
and
jo
imul
dec
outs
arpl
jb
arpl
outs
ins
jne
and
jp
add
add
dec
add
mov
dec
add
push
add
dec
add
cmp
and
inc
add
outs
add
add
outs
add
add
add
add
add
add
jne
je
jo
jne
je
and
data16
ins
add
and
add
add
inc
add
push
add
push
add
add
add
popa
add
and
outs
add
je
and
jb
add
popa
add
add
add
js
imul
imul
and
data16
ins
add
and
add
add
inc
add
push
add
push
add
add
add
popa
add
and
outs
add
je
and
arpl
jb
add
je
add
add
imul
and
ja
imul
and
popa
add
je
outs
add
add
popa
add
add
add
popa
add
and
outs
add
je
and
outs
add
add
and
outs
add
je
jo
jne
je
and
data16
ins
add
and
add
jle
add
jb
popa
add
add
xor
xor
xor
add
arpl
daa
je
fs
jo
gs
and
ins
fs
inc
add
outs
add
add
outs
add
add
jb
add
je
add
add
jne
je
jo
jne
je
and
add
jb
add
je
outs
add
jns
and
add
add
push
mov
dec
add
add
dec
add
push
add
add
push
add
add
push
add
dec
add
add
dec
add
add
pop
add
add
add
add
dec
add
add
push
add
imul
add
ja
outs
add
add
jb
jb
outs
add
add
jne
add
add
imul
add
xor
xor
xor
add
add
add
add
mov
dec
add
dec
add
add
add
add
aaa
add
inc
add
add
fs
je
and
gs
je
outs
outs
jae
popa
jb
and
je
jae
jo
outs
jb
gs
jb
je
imul
imul
inc
add
je
inc
add
ins
add
add
je
push
add
add
add
jb
jb
outs
add
add
cmp
add
aaa
add
add
and
arpl
popa
add
outs
add
je
and
data16
outs
add
add
inc
add
dec
add
add
add
add
jne
ins
add
outs
add
add
add
jne
outs
add
je
imul
add
add
dec
inc
push
dec
push
outs
fs
outs
arpl
outs
je
add
add
add
add
and
arpl
popa
add
outs
add
je
and
ins
add
popa
add
add
popa
add
imul
add
add
add
add
jo
xor
cs
ins
add
aaa
add
add
and
arpl
popa
add
outs
add
je
and
ins
add
jbe
add
add
add
and
data16
ins
add
add
add
aaa
add
add
and
arpl
popa
add
outs
add
je
and
add
ins
add
je
add
add
add
and
data16
ins
add
add
add
push
add
add
add
imul
and
popa
add
add
popa
add
add
add
js
imul
jae
add
push
add
popa
add
outs
add
outs
add
and
add
jb
outs
add
add
add
push
add
add
je
imul
and
data16
jb
and
ins
add
ins
add
add
outs
add
add
add
add
jb
arpl
push
add
jae
and
imul
outs
add
je
and
imul
ins
add
ins
add
outs
add
add
add
add
add
add
and
arpl
popa
add
outs
add
je
and
data16
outs
add
add
jo
add
imul
add
add
inc
add
and
ins
add
add
ins
add
add
add
push
add
pop
add
add
imul
and
imul
outs
add
je
and
jae
jo
add
imul
add
add
outs
add
add
add
jae
data16
add
add
add
add
add
add
jae
je
add
jne
je
add
add
aaa
add
add
and
arpl
popa
add
outs
add
je
and
outs
add
add
and
push
add
pop
add
add
outs
add
add
add
add
add
add
add
and
arpl
popa
add
outs
add
je
and
outs
add
add
and
data16
ins
add
add
add
rol
add
add
outs
add
add
outs
add
ins
add
add
imul
and
outs
add
ins
add
and
arpl
outs
add
add
jae
imul
and
sub
data16
ins
add
and
outs
add
and
add
jae
imul
add
add
imul
and
imul
popa
add
arpl
push
add
sub
cmp
add
inc
add
jo
ins
add
arpl
popa
add
add
add
imul
outs
add
ins
add
cmp
add
in
ret
dec
add
je
jb
popa
ins
and
ins
ins
imul
outs
and
fs
je
and
je
outs
outs
and
je
or
add
adc
add
add
dec
add
dec
add
inc
pop
push
add
add
add
add
rcl
inc
add
fadd
sub
and
sub
and
add
add
and
add
add
add
bound
jp
xor
and
bound
jp
imul
and
je
bound
jp
xor
and
je
bound
jp
add
add
bound
jp
imul
add
dec
add
add
add
inc
add
push
add
add
add
inc
add
add
add
inc
add
dec
add
dec
add
add
add
add
add
add
(bad)
dec
add
dec
add
dec
add
dec
add
dec
add
(bad)
dec
add
(bad)
dec
add
lds
hlt
lds
in
lds
in
dec
add
lds
aam
dec
add
lds
add
add
or
add
add
add
pop
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
mov
les
out
pop
mov
add
add
add
add
enter
mov
inc
add
jp
and
add
imul
je
add
and
je
jo
jp
add
add
imul
add
push
outs
imul
outs
add
das
pop
add
add
dec
push
das
xor
xor
add
fs
add
inc
gs
push
add
add
dec
push
push
add
inc
push
add
add
inc
arpl
outs
add
add
push
das
push
inc
dec
push
add
add
dec
push
inc
push
add
add
push
dec
push
push
sub
push
das
dec
add
add
pop
sub
gs
add
add
dec
popa
arpl
je
jae
add
add
inc
push
add
add
inc
je
jb
add
add
das
inc
dec
push
add
push
outs
imul
dec
push
add
dec
inc
inc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
dec
add
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
(bad)
dec
add
add
add
add
add
add
add
inc
add
add
add
add
popa
add
add
add
add
add
add
popa
add
add
add
inc
cmp
add
inc
inc
dec
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
jmp
add
inc
add
add
add
jo
ins
add
je
add
data16
ins
add
add
add
xor
xor
add
add
inc
add
add
add
int3
pop
inc
add
pop
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
dec
add
add
and
dec
add
leave
dec
add
add
add
dec
add
add
add
leave
dec
add
add
add
leave
dec
add
add
add
leave
dec
add
add
add
enter
enter
enter
add
add
add
add
enter
add
add
enter
add
add
enter
enter
enter
std
aaa
jp
pop
add
push
add
add
add
add
sub
add
inc
add
add
add
add
add
add
add
js
jp
and
je
js
jp
add
add
js
jp
add
add
push
dec
inc
xor
push
inc
ss
add
inc
push
inc
xor
add
add
inc
push
dec
pop
dec
inc
xor
add
push
push
inc
push
inc
add
add
dec
push
add
add
inc
push
dec
add
ss
add
add
inc
add
add
je
add
add
add
inc
push
add
add
add
or
add
adc
add
add
dec
add
pop
popf
add
add
add
add
add
add
add
and
je
popa
add
add
pop
add
add
dec
add
retf
dec
add
dec
add
retf
dec
add
retf
in
retf
fmul
dec
add
retf
enter
ror
add
add
adc
add
mov
add
add
add
add
add
adc
add
mov
dec
add
add
add
add
add
mov
add
adc
add
lods
retf
push
add
add
add
add
add
adc
add
pushf
retf
push
add
add
add
add
add
adc
add
mov
dec
add
add
add
add
add
add
add
add
add
dec
add
add
adc
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
add
ins
add
add
add
popa
add
add
arpl
add
add
data16
add
add
push
add
jae
jae
add
add
add
jae
add
dec
add
add
add
dec
add
add
add
push
add
add
add
dec
add
dec
add
add
add
inc
add
add
add
push
add
add
dec
add
xor
add
inc
add
data16
add
add
add
add
inc
add
data16
add
add
add
push
add
add
add
add
pop
add
jo
xor
add
dec
add
dec
add
xor
add
dec
add
dec
add
add
add
inc
add
jo
jns
add
add
push
add
add
add
push
add
add
add
push
add
add
add
dec
add
add
add
dec
add
inc
add
add
inc
add
add
add
add
push
add
inc
add
add
add
dec
add
inc
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
cmp
ins
add
ins
add
add
add
add
imul
add
add
and
dec
add
dec
add
retf
aaa
jp
scas
daa
sbb
add
add
add
mov
cs
inc
push
inc
dec
outs
inc
jb
push
js
gs
imul
inc
dec
inc
jb
push
inc
add
adc
add
add
add
or
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
ror
add
dec
add
dec
add
dec
add
jns
jae
add
jae
data16
add
outs
add
js
add
add
add
add
ins
jp
popa
and
jp
popa
arpl
popa
jb
and
push
bound
bound
and
and
and
and
and
imul
jo
and
je
je
jp
je
jp
je
jp
and
and
bound
push
popa
and
and
jb
jp
outs
and
jo
push
jb
gs
jb
ja
jb
ins
jae
and
addr16
popa
jbe
and
jbe
ins
jo
and
and
and
jbe
popa
popa
arpl
popa
jo
and
popa
and
popa
arpl
ins
popa
and
xor
ins
xor
and
xor
outs
data16
outs
addr16
arpl
jb
and
and
popa
and
outs
and
popa
and
and
and
popa
and
jbe
jae
data16
arpl
and
imul
imul
and
and
xor
jo
and
data16
bound
and
outs
and
and
jo
popa
ja
and
and
jae
arpl
and
and
and
ins
ins
and
data16
data16
and
and
and
and
jae
imul
jae
imul
xor
imul
and
and
data16
and
imul
arpl
outs
and
imul
jbe
and
and
arpl
jbe
jbe
jbe
imul
jae
and
jb
ins
and
gs
and
jae
and
jae
and
jae
and
je
and
ins
and
arpl
imul
popa
jae
and
push
js
and
arpl
and
js
jb
and
jbe
and
and
jae
bound
and
and
jae
arpl
data16
and
and
and
aaa
and
cmp
and
xor
and
ins
and
outs
imul
gs
and
imul
ins
ja
arpl
jb
push
jbe
jo
outs
push
jae
outs
and
and
and
arpl
jae
and
je
arpl
and
ins
and
and
ins
and
ins
je
push
js
and
ins
and
ins
ins
and
je
ins
and
je
ins
push
je
ins
and
ja
popa
jae
and
jo
and
jae
arpl
and
jo
jae
je
ins
and
imul
gs
popa
and
and
jo
jo
jo
and
jo
and
jo
and
jo
ins
ins
and
and
and
and
outs
and
and
and
and
jae
je
js
and
and
and
jae
popa
jae
and
je
jb
and
imul
outs
arpl
ins
arpl
outs
je
jb
data16
jo
js
jae
js
jb
js
je
js
ja
jo
je
jo
data16
arpl
jae
and
imul
jae
ja
jae
arpl
jae
imul
jae
ins
and
je
outs
je
and
and
and
jo
outs
je
and
jae
outs
je
and
data16
ja
popa
data16
arpl
and
and
and
jae
ja
je
ja
data16
imul
popa
ins
and
data16
outs
and
data16
data16
data16
popa
and
data16
and
and
bound
outs
jae
and
data16
bound
bound
bound
bound
gs
and
and
js
jbe
js
jae
js
jae
jae
je
bound
popa
ja
and
ins
and
push
ins
imul
outs
and
and
jo
bound
jo
push
and
bound
outs
jo
add
add
add
dec
add
add
add
aaa
jp
scas
daa
sbb
push
add
add
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ror
rcl
add
ror
int3
lds
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
outs
je
ins
add
pop
imul
outs
add
add
dec
push
inc
inc
add
add
hlt
mov
cs
inc
push
inc
dec
outs
inc
jb
push
js
gs
imul
bound
inc
jb
push
inc
add
dec
add
ror
add
add
or
inc
inc
add
add
add
add
add
mov
inc
add
add
add
popa
add
add
inc
add
bound
add
dec
ror
push
outs
gs
arpl
and
and
and
arpl
jbe
add
add
add
add
add
add
mov
ror
pushf
ror
xchg
ror
mov
dec
add
or
add
push
je
jb
add
je
jb
add
inc
dec
outs
outs
addr16
imul
das
cs
inc
dec
outs
outs
addr16
imul
and
and
and
and
add
add
jb
and
and
popa
and
je
jb
outs
and
and
arpl
jbe
add
jb
and
and
and
jb
arpl
arpl
and
and
and
and
and
arpl
jbe
add
add
push
push
popa
jb
and
and
imul
jb
sub
gs
arpl
fs
add
js
dec
add
dec
add
add
add
jne
je
jb
add
add
add
fwait
inc
add
add
add
jo
dec
add
dec
add
add
add
add
add
add
(bad)
dec
add
dec
add
dec
add
dec
add
dec
add
(bad)
dec
add
(bad)
dec
add
lds
hlt
lds
in
lds
in
dec
add
lds
aam
dec
add
lds
push
xlat
dec
add
add
dec
add
dec
add
xlat
dec
add
xlat
dec
add
dec
add
dec
add
xlat
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
add
mov
dec
add
data16
test
dec
add
data16
pushf
(bad)
dec
add
data16
nop
(bad)
dec
add
data16
test
dec
add
data16
js
dec
add
data16
ins
(bad)
dec
add
add
push
add
pop
(bad)
dec
add
add
push
(bad)
dec
add
push
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sub
add
adc
add
add
add
adc
inc
xor
push
ja
imul
ins
outs
ja
imul
push
inc
xor
jo
inc
inc
push
sub
add
jo
inc
inc
push
sub
add
jo
inc
inc
push
sub
add
xor
sub
add
add
inc
inc
push
sub
add
add
xor
add
add
add
jb
outs
addr16
jb
jo
outs
add
add
pop
imul
outs
add
add
push
add
dec
add
add
push
popa
jbe
popa
arpl
dec
jo
add
add
dec
pop
dec
inc
add
add
inc
pop
imul
dec
dec
ins
jo
outs
imul
ins
popa
je
ss
add
inc
gs
popa
je
add
outs
imul
dec
ins
jo
outs
fs
fs
gs
add
add
fs
gs
add
add
fs
gs
add
add
fs
gs
add
add
jb
outs
imul
push
je
jb
add
add
inc
dec
push
add
add
hlt
mov
cs
inc
push
inc
dec
outs
inc
jb
push
js
gs
imul
jo
dec
inc
jb
push
inc
add
retf
enter
inc
add
add
add
inc
add
add
add
dec
add
inc
add
pop
add
push
add
add
xor
xor
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
push
add
dec
add
add
add
pop
add
push
add
add
add
add
dec
add
push
add
add
add
inc
add
inc
add
add
add
add
dec
add
pop
add
add
add
add
dec
pop
or
add
push
dec
add
push
push
dec
push
pop
add
add
int3
fmul
nop
fmul
add
add
add
add
add
add
add
add
add
scas
aas
inc
add
aas
inc
add
imul
push
popa
add
and
js
jo
imul
add
add
add
and
add
arpl
js
and
js
ins
add
js
add
jp
imul
add
add
adc
loopne
inc
add
add
add
add
add
fmul
add
add
inc
add
dec
add
add
pop
inc
add
inc
add
add
add
add
add
(bad)
add
add
add
add
add
add
inc
add
dec
add
add
pop
inc
add
add
add
(bad)
add
add
add
add
add
add
loopne
inc
add
pop
inc
add
add
add
add
add
(bad)
add
add
add
add
add
add
and
inc
pop
inc
add
add
add
call
add
add
add
add
add
add
inc
add
pop
add
add
add
(bad)
dec
add
add
add
add
add
add
add
pop
inc
add
add
add
(bad)
add
add
add
add
add
add
push
add
inc
add
inc
add
add
push
add
push
add
add
add
push
add
add
dec
add
add
add
add
push
add
inc
add
add
add
add
pop
inc
add
pop
inc
add
add
add
add
add
add
add
add
add
add
add
add
pop
inc
add
pop
inc
add
add
add
add
dec
fimul
add
add
add
add
add
add
push
add
popa
add
xor
add
push
add
popa
add
xor
add
pusha
fwait
inc
add
fwait
inc
add
add
add
add
or
dec
add
add
add
sahf
inc
add
sahf
inc
add
dec
add
add
add
inc
add
lahf
inc
add
add
add
add
fmul
dec
add
add
add
add
add
or
add
repz
add
inc
add
fiadd
add
add
add
in
retf
add
add
mov
inc
add
inc
add
add
add
add
add
fisttp
add
add
add
add
add
add
inc
add
ins
add
add
add
add
add
mov
cs
inc
push
inc
inc
js
gs
imul
arpl
gs
dec
dec
ins
jo
outs
fs
dec
inc
outs
ins
jo
gs
inc
inc
add
add
nop
repz
add
sub
xor
inc
add
repz
add
cmc
inc
add
inc
add
add
add
add
add
dec
add
add
add
repz
add
sub
xor
inc
add
repz
add
push
inc
add
add
add
add
add
retf
dec
add
add
add
sub
xor
inc
add
sub
xor
inc
add
cs
add
add
add
add
add
xlat
dec
add
add
add
sub
xor
inc
add
popa
inc
add
pop
icebp
push
add
add
sub
dec
add
add
add
add
add
add
add
add
inc
add
push
add
add
outs
jne
outs
gs
outs
je
ins
inc
jne
push
arpl
inc
inc
outs
je
jne
dec
popa
jne
jae
aaa
jp
pop
add
add
add
rcl
add
xchg
inc
add
xchg
inc
add
add
add
ja
repnz
add
(bad)
xlat
stos
jbe
or
cli
pop
inc
lock
aam
scas
pushf
movs
jb
mov
xchg
es
test
jno
xor
sbb
and
daa
mov
or
pop
mov
sub
das
test
add
and
mov
push
mov
iret
shr
stos
sti
inc
dec
xor
push
cmp
test
mov
cmp
mov
push
ror
or
in
pop
xchg
inc
pop
les
sbb
or
inc
out
mov
fneni(8087
xor
or
and
ret
bound
enter
aad
test
gs
or
cmps
mov
call
mov
mov
dec
add
push
popa
xor
sbb
adc
mov
push
sub
mov
inc
push
mov
mov
add
adc
inc
sbb
add
add
add
hlt
mov
cs
inc
push
je
jo
pop
imul
fs
add
add
add
gs
add
add
add
gs
add
add
add
adc
add
add
add
add
add
add
add
add
add
out
add
add
add
leave
inc
add
leave
inc
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
ss
add
add
add
add
add
add
add
loope
add
loope
add
dec
add
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
add
loope
add
add
add
(bad)
(bad)
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
ins
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
pop
int3
inc
add
add
add
int3
inc
add
add
add
inc
add
add
add
retf
inc
add
add
add
add
test
inc
add
add
add
inc
add
add
add
inc
add
add
add
retf
sbb
add
aam
inc
add
add
add
add
fs
sbb
add
cmp
inc
add
add
sub
inc
add
add
sbb
inc
add
add
or
inc
add
add
add
retf
inc
add
clc
leave
inc
add
sbb
inc
add
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
jns
and
add
add
add
cmps
fild
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficomp
and
pop
fisubr
xor
adc
add
xor
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
inc
add
into
inc
add
inc
add
inc
add
into
inc
add
inc
add
into
inc
add
inc
add
into
inc
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
inc
add
inc
add
inc
add
int
add
inc
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
or
adc
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
jg
jg
jg
adc
dec
add
add
add
icebp
(bad)
call
push
add
push
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
(bad)
(bad)
call
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
ins
add
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
nop
or
les
add
les
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
or
add
add
adc
or
add
add
aas
add
add
add
add
add
add
add
and
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
inc
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
cmp
or
add
inc
add
ins
add
popa
add
jns
dec
add
ins
add
add
add
dec
add
outs
add
and
push
add
jbe
ins
add
jbe
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
aaa
add
add
and
push
add
add
add
ins
add
outs
add
and
inc
add
outs
add
outs
add
add
add
add
add
add
ins
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
add
add
dec
add
je
add
outs
add
ins
add
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
arpl
sub
and
xor
cmp
cmp
cmp
sub
add
add
add
add
add
jb
and
push
add
jbe
ins
add
jbe
add
cmp
or
add
dec
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
aaa
add
popa
add
add
js
add
add
push
add
add
jb
outs
add
add
je
dec
add
ins
add
add
add
aaa
add
add
add
add
add
outs
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
push
add
add
sbb
inc
push
push
and
and
dec
dec
dec
inc
push
inc
dec
dec
cs
dec
dec
or
add
add
add
add
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
popa
jae
je
bound
add
add
dec
outs
popa
fs
popa
arpl
pop
push
gs
imul
jo
jb
jb
dec
popa
jae
inc
outs
fs
jb
jbe
fs
dec
popa
jae
push
imul
jae
push
popa
ins
jne
jae
add
add
add
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
inc
outs
ins
jo
jb
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
dec
popa
jae
inc
outs
fs
jb
jbe
fs
in
push
cmp
add
add
or
add
add
or
add
or
add
add
add
add
adc
add
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
jle
add
cmp
add
add
push
je
imul
add
add
push
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
push
mov
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
sbb
add
adc
mov
ins
add
add
add
add
add
add
add
add
add
inc
push
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
push
sbb
pop
xor
or
push
pop
sbb
or
or
add
or
or
add
push
or
add
add
add
adc
push
add
sbb
adc
adc
add
add
adc
push
add
adc
or
push
adc
adc
adc
adc
add
add
adc
add
add
add
adc
adc
add
adc
outs
adc
mov
push
add
add
sbb
sbb
push
add
add
add
sbb
add
mov
sbb
and
push
add
add
add
push
sbb
and
and
add
add
and
add
add
cmp
push
add
and
add
sub
sub
sub
sub
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
and
sub
fwait
sub
add
sub
add
push
add
sub
sub
add
sub
sub
add
sbb
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
add
sub
add
add
mov
sub
sub
add
sub
add
xlat
sub
add
mov
sub
sub
add
add
dec
sub
xchg
sub
movs
sub
stos
sub
loop
sub
sbb
sub
mov
mov
mov
sbb
cmp
push
or
add
dec
das
push
add
add
add
das
sbb
das
sbb
das
sbb
xor
xor
xor
add
add
inc
push
add
add
xor
inc
push
add
xor
add
add
xor
xor
add
sbb
xor
xor
sbb
sbb
xor
push
add
xor
push
add
push
add
add
xor
xor
add
add
xor
xor
add
xor
xor
add
xor
xor
add
xor
adc
push
xor
add
xor
xor
or
add
xor
xor
add
adc
add
push
xor
add
add
add
xor
add
add
xor
add
add
xor
inc
xor
pop
xor
or
push
add
add
add
xor
(bad)
xor
es
add
xor
push
add
add
xor
push
add
aaa
xor
add
mov
aaa
mov
push
add
aaa
push
add
add
cmp
sbb
and
push
or
add
cmp
push
add
push
add
add
add
cmp
cmp
sub
add
cmp
sub
add
cmp
cmp
sub
add
dec
cmp
add
js
push
add
add
cmp
mov
cmp
add
add
add
cmp
cmp
mov
cmp
push
add
add
cmp
add
add
cmp
adc
add
cmp
add
add
cmp
add
add
cmp
sub
add
push
add
add
cmp
es
xor
dec
cmp
push
cmp
(bad)
cmp
mov
ins
cmp
push
add
add
mov
ds
cmp
dec
ds
add
add
ds
and
sar
dec
ds
ds
ds
ds
ds
push
xor
add
aas
push
xor
add
or
add
add
aas
ins
cmp
mov
inc
push
or
add
add
push
xor
add
mov
inc
push
add
add
inc
push
add
add
inc
push
or
add
inc
mov
inc
mov
inc
push
add
add
sbb
inc
mov
inc
(bad)
inc
adc
add
add
inc
sbb
inc
sbb
inc
ins
add
add
sbb
inc
jmp
add
add
add
inc
ins
add
add
inc
int3
add
add
inc
int3
add
add
inc
lahf
add
add
inc
lahf
add
add
add
add
int3
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
dec
add
or
adc
jb
add
adc
push
add
or
adc
jp
add
adc
push
add
or
adc
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
jp
add
add
add
add
xor
fadd
add
adc
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
add
add
add
add
in
add
add
add
inc
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
gs
dec
add
push
adc
add
add
add
sbb
push
add
add
add
add
add
add
add
rol
loopne
sbb
push
add
add
cld
add
clts
jne
push
add
push
sbb
push
add
push
sbb
push
add
push
sbb
push
add
push
jb
push
add
jns
push
add
sbb
push
add
sbb
push
add
sbb
push
add
sbb
push
add
add
add
add
add
push
sbb
push
push
fld
jge
push
and
jns
push
sub
jns
push
xor
jns
add
std
push
sbb
add
jp
sbb
adc
xor
popf
add
add
pop
popf
add
push
pop
jge
push
and
add
jbe
jge
push
add
cdq
pop
jge
push
and
mov
jge
push
cmp
leave
pop
jge
push
sbb
jge
push
and
jge
push
sub
jge
push
xor
jge
push
cmp
jge
push
add
jge
push
adc
jge
push
sbb
jge
push
and
add
or
push
cmp
jge
push
or
add
push
or
push
and
add
ins
or
push
cmp
add
mov
jge
push
adc
mov
sub
mov
add
or
push
adc
jge
push
and
or
push
xor
jge
push
cmp
jge
push
add
jge
push
adc
jge
add
dec
or
add
add
or
push
add
adc
push
add
adc
push
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
jge
push
add
or
add
add
add
add
or
add
add
or
add
add
or
add
add
or
push
add
add
add
add
add
add
add
or
push
add
add
add
add
fwait
or
add
add
add
stos
or
add
add
or
add
adc
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
prefetch
push
add
add
add
stos
or
add
push
fld
jge
push
adc
push
add
sub
push
add
cmp
adc
add
add
sbb
push
add
sbb
push
add
push
sbb
push
add
sbb
push
add
add
add
add
add
add
or
aad
jge
push
add
or
jmp
jge
push
add
or
sti
or
pop
push
jge
push
adc
jge
push
sub
jge
push
add
add
push
push
jge
push
sub
add
jge
jge
push
adc
movs
push
jge
push
cmp
push
jge
push
add
add
(bad)
add
add
(bad)
add
add
(bad)
add
add
(bad)
add
adc
adc
add
add
adc
add
add
adc
add
add
cmp
push
add
add
add
add
add
push
push
add
sbb
add
jae
outs
add
add
jge
add
adc
add
fist
jb
add
bound
(bad)
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
jmp
adc
add
add
jmp
adc
add
add
jmp
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
xor
cmp
clc
add
add
clc
add
add
clc
add
add
std
add
mov
adc
jge
push
add
add
add
adc
cmp
sub
add
rol
bound
sub
add
outs
push
sub
add
jge
sub
add
xchg
sub
add
adc
add
(bad)
push
jb
add
sub
add
sbb
add
mov
add
sbb
add
leave
add
scas
sbb
add
mov
push
add
rcr
add
add
sbb
add
in
sbb
add
repz
add
add
bound
(bad)
add
add
add
sbb
add
int3
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
dec
adc
add
add
jmp
sbb
add
add
sbb
add
add
jmp
sbb
add
add
jmp
sbb
add
jne
push
sbb
add
pushf
sbb
add
add
sbb
add
add
sbb
add
fistp
ja
add
in
ja
add
and
add
add
sbb
add
cmc
sbb
add
cli
sbb
add
push
sbb
add
adc
ja
add
pop
sbb
add
and
ja
add
pop
adc
add
add
sbb
add
add
add
add
fiadd
add
pop
adc
add
add
outs
add
push
fld
jge
push
adc
cdq
add
sub
cdq
add
cmp
adc
add
add
mov
add
outs
add
add
sbb
add
add
sbb
push
add
sbb
push
add
sbb
add
js
jge
add
mov
add
add
add
add
sbb
add
add
sbb
add
add
sbb
dec
sbb
data16
add
add
jb
push
add
jb
push
add
add
add
add
sbb
fstp
add
lods
add
add
mov
adc
sub
mov
push
add
add
push
lds
add
loop
retf
add
push
jne
add
or
add
pop
jge
add
xor
jge
add
inc
pop
sbb
add
push
pop
rol
add
test
sbb
add
add
mov
mov
and
add
add
and
add
add
add
sbb
add
add
and
push
add
sbb
add
add
sbb
push
add
and
push
add
push
jne
push
add
and
add
add
add
add
mov
mov
and
add
add
and
adc
pop
and
add
add
add
and
add
add
add
sub
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
daa
add
add
xchg
add
imul
add
add
xchg
add
imul
add
add
xchg
add
ins
add
add
xchg
add
add
add
sub
add
add
add
add
add
add
add
out
and
xchg
add
add
add
add
add
add
add
xchg
add
mov
sub
add
add
add
add
sub
add
add
add
add
add
add
or
add
add
add
add
or
add
add
or
pop
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
or
add
add
or
and
add
or
add
add
add
or
daa
add
add
add
or
add
add
or
add
add
or
sub
add
add
add
and
or
sub
add
or
das
add
add
add
or
cmp
add
add
add
and
or
add
add
add
or
inc
add
add
add
or
add
add
or
add
add
or
add
add
or
pop
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
add
add
and
or
add
add
add
add
and
or
outs
add
add
add
or
add
or
add
add
add
add
add
add
and
or
add
cmp
add
add
add
add
add
add
and
or
add
adc
add
add
xchg
add
or
add
add
add
add
and
cmc
add
cmp
xchg
add
inc
jnp
ins
sub
xchg
or
mov
xchg
mov
adc
add
add
xchg
push
pop
pop
add
add
add
add
add
add
add
add
xchg
push
pop
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
adc
xchg
add
xchg
add
adc
xchg
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
scas
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
mov
xor
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
push
pop
cmps
add
add
pop
add
add
add
rol
pop
add
add
add
ret
pop
add
add
add
ret
pop
add
add
or
adc
pop
add
add
add
ret
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
retf
add
add
add
retf
add
add
add
add
ins
add
add
add
retf
add
outs
add
add
add
retf
add
jno
add
add
add
add
add
add
add
int
sbb
add
add
iret
add
add
rol
and
add
add
add
rol
aam
add
add
add
rol
sbb
add
add
add
rol
fs
add
add
add
add
add
rol
fdivr
add
add
add
add
add
add
add
add
add
add
add
xchg
or
pop
add
add
add
or
sbb
add
add
add
add
sbb
add
add
add
xlat
add
xchg
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
fld
mov
add
fild
nop
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
mov
or
sbb
loopne
lods
xchg
add
add
xchg
lahf
sbb
loopne
lock
add
add
les
ins
adc
add
add
add
jecxz
add
xchg
push
pop
cmps
add
add
add
add
xchg
lock
add
add
stos
add
add
xchg
neg
push
add
add
add
add
xchg
(bad)
sbb
in
inc
stos
add
add
xchg
or
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
xchg
sbb
dec
add
add
add
add
add
xchg
adc
dec
add
add
stos
add
add
xchg
dec
sbb
add
add
stos
add
add
xchg
sub
dec
add
add
stos
add
add
xchg
push
sbb
add
add
stos
add
add
mov
or
add
add
lods
add
add
xchg
pusha
sbb
add
add
lods
add
add
xchg
ins
sbb
add
add
add
add
xchg
push
pop
cmps
add
add
add
add
xchg
or
sbb
sub
cmp
imul
add
add
xchg
add
imul
add
add
xchg
add
mov
mov
add
add
add
add
xchg
add
mov
mov
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
push
pop
cmps
add
add
add
add
out
push
add
add
add
out
jp
loopne
lock
xchg
mov
out
icebp
add
xchg
mov
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
xchg
inc
sbb
add
add
add
add
add
add
xchg
neg
push
add
add
mov
add
add
add
add
mov
add
add
add
add
xchg
cwde
sbb
test
mov
add
add
add
add
add
add
xchg
cmp
add
mov
add
add
add
add
add
or
in
mov
add
add
or
add
mov
add
add
cli
add
add
add
xchg
push
pop
cmps
add
add
add
add
add
add
sti
add
add
add
add
add
cld
add
add
add
add
add
std
add
add
add
add
add
inc
pop
mov
add
add
add
add
add
add
xchg
push
pop
gs
add
add
add
add
add
add
add
xchg
push
pop
cmps
add
mov
add
add
xchg
push
pop
ins
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
xchg
push
pop
cmps
add
add
add
add
xchg
push
pop
jae
adc
jg
add
add
xchg
push
pop
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
and
sbb
loopne
add
add
xchg
aaa
and
mov
loope
push
and
push
add
add
add
add
add
add
add
add
add
xchg
outs
and
mov
loope
in
pop
add
add
mov
xchg
mov
mov
mov
sbb
pop
cmps
add
add
add
add
add
add
add
add
mov
xchg
or
add
mov
xchg
or
and
add
add
mov
xchg
or
and
add
add
mov
xchg
or
and
add
add
add
xchg
push
pop
cmps
add
add
add
add
xchg
sbb
adc
adc
add
inc
and
adc
add
add
add
dec
and
adc
add
add
add
dec
and
adc
add
add
add
push
and
add
add
add
add
inc
and
adc
add
add
add
std
push
add
add
jp
add
add
and
add
test
add
add
add
add
add
add
mov
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
leave
and
add
add
and
add
add
and
add
add
and
add
add
add
and
pop
and
sbb
and
add
add
add
adc
imul
add
ins
and
jno
add
add
jno
add
add
jns
add
add
jns
add
add
jge
add
add
jns
add
add
jge
add
add
test
mov
xchg
and
call
and
test
add
add
add
add
add
add
shl
and
fldenv
out
and
mul
ins
and
add
add
add
fsub
add
or
add
add
and
add
add
add
add
add
add
add
add
add
sbb
add
add
and
add
add
mov
add
add
add
add
xor
add
add
add
add
add
pop
add
add
add
add
or
outs
add
or
jns
add
or
mov
add
or
popf
add
or
add
add
add
add
add
add
add
add
fsub
add
ret
add
add
add
add
add
add
adc
loopne
add
add
adc
add
add
add
adc
adc
jmp
add
add
add
sti
add
add
add
add
daa
add
pop
add
daa
add
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
pop
daa
add
add
jns
add
add
es
add
add
adc
adc
ins
and
sub
add
daa
add
add
ds
add
add
inc
daa
add
add
jge
add
add
dec
daa
add
add
ins
and
push
daa
add
add
pop
daa
add
add
ins
and
stc
add
add
sti
add
add
mov
add
or
add
add
add
add
pusha
daa
add
add
data16
add
add
ins
daa
add
add
test
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
jne
add
add
jg
add
add
lea
add
add
lea
add
add
lea
add
add
lea
add
add
lea
add
add
lea
add
add
lea
add
add
lea
add
add
call
daa
add
add
pushf
daa
add
add
sahf
daa
add
add
xchg
daa
add
add
pushf
daa
add
add
adc
add
add
mov
add
add
jp
add
add
xchg
sbb
add
add
add
xchg
daa
add
add
pushf
daa
add
add
xchg
daa
add
add
pushf
daa
add
add
xchg
daa
add
add
pushf
daa
add
add
xchg
daa
add
add
pushf
daa
add
add
xchg
daa
add
add
pushf
daa
add
add
xchg
daa
add
add
pushf
daa
add
add
xchg
daa
add
add
pushf
daa
add
add
xchg
daa
add
add
pushf
daa
add
add
xchg
daa
add
add
pushf
daa
add
add
xchg
daa
add
add
pushf
daa
add
add
xchg
daa
add
add
pushf
daa
add
add
or
add
add
xchg
daa
add
add
pushf
daa
add
add
lods
daa
add
add
mov
add
add
add
add
les
add
add
or
add
add
adc
add
add
sbb
add
add
pop
daa
add
add
mov
add
daa
add
add
leave
daa
add
add
xchg
sbb
add
add
add
fldenv
add
add
loop
add
add
jmp
daa
add
add
pushf
daa
add
add
icebp
daa
add
add
mov
add
and
add
add
add
xchg
daa
add
add
pushf
daa
add
add
xchg
daa
add
add
pushf
daa
add
add
pop
adc
add
add
add
xchg
daa
add
add
pushf
daa
add
add
stc
daa
add
add
jp
add
add
lods
daa
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
or
add
add
adc
add
add
sbb
add
add
popf
push
add
add
and
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
and
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xchg
sbb
add
add
mov
add
add
mov
add
and
add
add
add
sbb
add
add
and
add
add
sbb
add
add
sbb
add
add
and
add
add
push
add
add
(bad)
and
add
add
add
add
mov
add
add
enter
add
fbld
add
add
cmp
add
add
cmp
add
add
push
sub
add
add
sub
add
add
add
add
pusha
sub
add
add
add
add
xor
add
add
xchg
sbb
add
add
mov
add
add
enter
add
xor
add
add
mov
add
add
shl
add
add
xor
add
add
mov
add
add
ficomp
add
add
shl
add
add
xor
add
add
clts
add
add
(bad)
and
add
add
add
add
mov
add
pop
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
adc
cmps
add
add
pop
cmps
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
mov
xor
push
pop
add
add
pop
add
add
pop
pop
add
push
add
push
pop
cmps
add
jno
add
xchg
sub
sub
add
ss
cmp
add
add
sub
imul
imul
add
add
or
(bad)
or
add
add
add
add
ins
add
add
jnp
mov
leave
sub
add
add
add
add
pop
cmps
add
add
add
add
sub
add
cmps
add
add
call
add
mov
loope
cwde
sub
add
add
add
sub
add
les
fld
call
add
cmps
add
add
add
pop
add
add
adc
cmp
jnp
inc
add
dec
add
or
push
add
das
cli
add
push
xor
daa
das
push
push
test
add
or
mov
adc
xor
inc
das
xor
mov
push
pop
cmp
mov
push
mov
push
imul
rol
das
adc
rol
das
adc
rol
das
adc
rol
das
adc
rol
pop
cmp
popa
add
(bad)
push
add
cmp
(bad)
das
jl
jns
or
add
xor
add
add
cmp
call
add
add
add
push
mov
add
push
mov
push
pop
cmps
add
out
xor
push
leave
add
pop
cmps
add
add
aas
xor
push
rol
dec
xor
push
fld
push
pop
fiadd
test
push
loope
jp
in
push
jmp
push
jmp
push
loope
xchg
xor
push
loope
mov
add
pop
cmps
add
out
xor
push
and
mov
add
pop
cmps
add
add
pop
cmps
add
shl
dec
pop
and
fnstenv
pop
pop
add
xor
xor
xor
or
xor
mov
and
xor
cmps
add
(bad)
sub
pop
add
add
add
add
mov
add
add
xor
add
int3
push
and
inc
xor
and
push
xor
xor
add
outs
xor
xor
xor
xor
sub
stos
xor
pop
xor
inc
xor
pop
xor
mov
add
xor
xor
add
add
xor
pop
cmp
xor
pop
xor
xor
pop
fld
je
sti
pop
test
or
mov
push
or
or
test
add
add
xor
loope
shl
pop
pop
dec
add
xor
xor
or
add
xor
or
add
sub
pop
add
xor
or
jl
mov
icebp
add
add
add
mov
add
push
pop
cmps
add
add
pop
cmps
add
add
pop
cmps
add
add
pop
cmps
add
add
pop
cmps
add
add
pop
cmps
add
add
pop
cmps
add
add
pop
cmps
add
fwait
xor
add
add
xor
add
add
xor
or
out
xor
add
xor
or
push
pop
pop
add
add
xor
or
add
add
xor
or
add
xor
push
pop
pop
add
add
xor
pop
xor
and
mov
adc
cmp
push
pop
jns
add
xor
jbe
xchg
test
or
or
or
add
add
add
xor
mov
add
xor
shl
scas
or
add
xor
add
add
ss
mov
sub
ss
or
add
mov
sub
mov
add
mov
sub
out
iret
or
add
mov
jmp
or
add
aaa
aad
xor
sub
add
add
add
aaa
mov
xor
inc
aaa
push
add
add
xor
cmp
push
add
loop
cmp
ret
aaa
jmp
xor
or
add
aaa
jg
add
add
aaa
test
jns
add
cmp
or
add
sbb
sbb
sub
jno
ins
or
add
xor
or
add
add
add
add
cmp
cmp
cmps
add
add
cmp
cmp
or
add
inc
add
dec
add
add
add
pop
add
add
pop
add
jno
cs
or
fstp
add
add
cmp
sub
icebp
cmp
mov
dec
sub
add
imul
or
add
add
aaa
mov
add
cmp
add
add
dec
add
or
or
add
or
mov
add
cmp
cmp
cmps
add
or
add
pop
mov
or
or
add
pop
sub
inc
cmp
cmp
or
or
add
mov
movs
or
or
lods
cmp
cmp
push
pop
cmps
add
out
xor
push
cmp
mov
add
sub
or
and
add
cmp
rol
add
pop
add
add
jns
loop
pop
or
call
add
cmp
leave
add
mov
add
add
mov
inc
cmp
add
add
mov
or
add
cmp
add
add
cmp
add
add
mov
or
lods
cmp
rol
cmp
add
add
add
cmp
add
mov
jb
mov
add
leave
cmp
or
fdivr
or
lods
cmp
sub
fnsave
icebp
cmp
or
or
push
icebp
add
add
push
pop
jns
jns
push
pop
mov
xor
data16
add
add
cmp
push
pop
cmps
add
push
push
pop
clc
or
push
pop
cmps
add
push
pop
cmps
add
add
pop
dec
push
add
pop
cmps
add
push
pop
cmps
add
push
pop
cmps
add
push
pop
dec
jno
push
pop
cmps
add
test
add
cmp
iret
cmp
fnstcw
idiv
pop
xor
add
mov
or
fnstcw
sbb
push
js
es
push
mov
push
push
pop
xor
push
shl
cmp
push
xor
inc
or
push
push
pop
dec
or
push
shl
push
or
push
fnstenv
pop
pop
cmp
cmp
push
dec
aas
add
add
adc
test
pop
or
push
sahf
aas
mov
pop
add
push
stc
xor
aas
add
add
aas
push
or
add
mov
imul
jno
je
data16
push
push
pop
ins
or
add
inc
jb
inc
add
inc
jns
mov
push
inc
jg
mov
outs
inc
xchg
add
add
add
inc
fwait
or
add
inc
mov
inc
mov
sub
add
add
push
aas
cmp
add
mov
add
icebp
push
inc
inc
mov
inc
les
push
pop
inc
retf
or
add
stc
push
push
pop
cmps
add
add
jmp
add
add
icebp
add
add
push
pop
cmps
add
pop
push
pop
pop
adc
push
pop
cmps
add
pop
push
pop
cmps
add
pop
push
pop
cmps
add
pop
push
pop
cmps
add
add
cmp
cmp
cmp
or
pop
inc
xchg
or
test
inc
mov
xor
xchg
inc
test
pop
add
add
push
pop
mov
push
pop
push
pop
cmps
add
push
pop
cmps
add
push
pop
cmps
add
push
pop
or
jns
push
pop
cmps
add
add
push
pop
cmps
add
push
pop
add
add
pop
pop
adc
push
pop
mov
add
pop
xchg
add
add
rol
mov
push
pop
cmps
add
adc
fcom
dec
push
jns
push
pop
cmps
add
add
sbb
add
add
add
add
add
add
add
or
add
sbb
or
add
sub
push
add
add
add
add
add
add
cwde
add
add
add
add
mov
add
add
add
add
mov
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
test
or
add
test
or
or
mov
or
or
out
or
adc
add
add
or
or
sbb
cli
add
add
adc
or
and
test
or
and
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
add
add
add
cli
add
add
pop
add
add
add
add
add
add
test
or
sub
add
add
stos
add
add
add
add
add
add
rcl
add
add
or
in
add
add
add
add
or
in
add
sahf
push
add
mov
add
or
in
mov
dec
or
add
add
add
test
jecxz
fisttp
and
test
jecxz
ror
stc
or
add
test
add
or
push
add
or
or
test
and
or
or
sbb
and
or
or
adc
add
or
add
imul
inc
add
or
or
adc
inc
add
or
or
add
ror
jmp
adc
imul
arpl
or
or
adc
add
or
adc
add
in
adc
adc
or
push
adc
add
adc
add
or
or
rcl
add
or
or
adc
add
or
adc
add
or
adc
add
or
or
or
jmp
or
test
inc
add
inc
add
inc
add
arpl
arpl
add
push
mov
push
mov
adc
and
inc
adc
pusha
adc
adc
adc
rcl
adc
add
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
pop
mov
sbb
sbb
inc
push
mov
push
rcr
or
pavgb
pop
or
adc
arpl
adc
adc
push
arpl
adc
pop
arpl
adc
and
and
and
and
and
and
and
and
and
and
inc
and
popa
and
and
test
shl
and
and
jae
test
inc
es
mov
popa
es
out
and
mov
adc
es
test
loope
jae
test
add
jae
mov
and
jae
test
inc
daa
jae
mov
popa
daa
jae
out
and
mov
adc
daa
jae
out
loope
jae
cmp
sub
push
and
jae
fwait
adc
sub
test
popa
sub
mov
inc
add
add
mov
sbb
pop
sbb
add
rol
sbb
xor
mov
xchg
sbb
add
sub
add
jne
mov
test
inc
push
push
push
pusha
push
gs
mov
xchg
push
mov
pop
and
sub
cmp
je
jg
mov
mov
pop
fadd
or
adc
cmp
inc
or
or
or
or
or
or
or
or
or
bound
jns
xchg
or
sub
or
push
or
jg
mov
mov
call
or
or
or
or
or
cdq
or
inc
adc
pop
adc
jae
jns
int3
adc
inc
push
pop
add
add
add
add
adc
add
push
add
add
add
add
add
add
sbb
pop
add
add
add
add
add
add
add
add
or
add
add
bound
add
jg
data16
add
add
add
mov
jae
mov
add
mov
jno
xchg
add
add
xchg
sbb
add
jp
bound
add
std
push
bound
add
call
sbb
sbb
aaa
sbb
cmp
add
add
add
add
jp
xchg
add
add
push
popf
add
add
add
and
add
loop
sub
add
and
add
add
add
and
add
add
and
add
add
add
cmp
add
jmp
add
add
and
add
add
and
add
add
and
add
add
adc
fld
add
add
cmp
add
add
cmp
add
add
add
add
or
add
dec
add
add
add
or
add
add
add
adc
add
jbe
adc
add
ja
adc
add
jge
adc
add
add
add
xchg
add
add
add
add
add
mov
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
mov
xor
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
inc
add
add
add
add
aam
inc
add
add
add
add
(bad)
add
add
cld
add
add
std
add
add
inc
dec
add
add
add
add
add
dec
add
add
add
sub
out
mov
add
add
mov
ucomiss
cs
add
add
push
sub
pop
aam
jl
mov
add
add
or
add
add
add
or
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
aas
add
add
les
add
add
or
add
or
add
or
add
or
add
or
add
add
das
cs
add
add
inc
cs
add
add
add
push
add
add
add
push
add
add
add
pop
add
add
add
pop
add
add
mov
add
mov
push
add
add
(bad)
or
add
or
add
gs
or
add
addr16
or
add
imul
or
add
outs
add
or
add
add
add
lea
fisttp
add
inc
add
add
add
add
sub
add
enter
dec
add
add
loopne
or
add
pusha
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
push
add
add
add
add
add
ins
add
add
add
add
add
int3
add
add
add
add
jbe
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
mov
add
add
or
add
or
add
add
add
pop
or
add
add
add
add
add
push
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
sbb
add
stc
inc
add
push
add
add
inc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
gs
popa
jb
and
and
imul
imul
push
inc
dec
push
imul
inc
dec
add
je
jbe
jb
js
add
outs
js
dec
ins
outs
outs
dec
gs
outs
add
arpl
jo
imul
xor
add
je
popa
jo
add
push
dec
inc
push
dec
dec
inc
dec
add
inc
push
push
inc
inc
add
dec
dec
push
add
push
dec
inc
push
dec
dec
inc
dec
dec
inc
inc
inc
inc
push
add
push
inc
dec
dec
push
add
inc
push
add
push
pop
push
inc
push
push
dec
push
push
add
arpl
gs
outs
imul
jae
dec
outs
outs
imul
arpl
outs
arpl
popa
arpl
dec
push
dec
outs
outs
add
push
inc
push
push
dec
dec
dec
dec
dec
inc
dec
inc
pop
add
outs
je
outs
ins
popa
inc
outs
jae
jne
outs
outs
jae
imul
jne
push
inc
dec
dec
ins
imul
jp
gs
outs
imul
push
gs
gs
add
inc
push
je
ins
jae
data16
push
jb
push
outs
imul
jbe
fs
gs
gs
gs
add
push
gs
gs
inc
ins
outs
bound
add
outs
addr16
ins
add
bound
jp
ins
popa
jae
outs
imul
arpl
push
inc
dec
dec
ins
imul
imul
popa
outs
imul
push
jbe
outs
imul
add
arpl
imul
jns
jne
fs
jp
jbe
je
ins
gs
outs
jp
fs
jbe
imul
popa
arpl
imul
jns
jne
fs
jp
jbe
je
ins
gs
fs
jbe
add
arpl
imul
jns
popa
jp
jbe
gs
gs
push
outs
jp
fs
jbe
imul
popa
arpl
imul
jns
popa
jp
jbe
gs
gs
dec
fs
jbe
add
arpl
imul
jns
popa
jp
jbe
gs
gs
xor
jo
jbe
add
arpl
imul
jns
jbe
jb
outs
imul
jae
jbe
arpl
push
jne
outs
jp
fs
jbe
imul
popa
arpl
imul
jns
jbe
jb
outs
imul
jae
jbe
arpl
push
jne
fs
jbe
add
jb
push
jbe
outs
imul
inc
push
ins
add
imul
popa
outs
imul
inc
ins
imul
jae
jne
arpl
add
dec
ins
imul
outs
jo
jb
imul
je
outs
addr16
ins
jae
outs
jb
imul
gs
add
push
arpl
outs
jne
add
jae
gs
cs
gs
dec
inc
jb
fs
je
popa
ins
jae
push
popa
ins
jne
push
jns
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
jae
gs
cs
jne
je
ins
gs
gs
popa
ins
imul
add
js
outs
jae
bound
popa
je
dec
bound
arpl
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
je
data16
jb
jo
jb
jns
push
add
jae
gs
cs
gs
imul
ins
add
ins
imul
outs
outs
gs
add
outs
outs
je
js
inc
push
ins
add
jae
gs
cs
gs
imul
ins
cs
push
ins
jae
dec
inc
push
ins
add
outs
ins
ins
jne
imul
dec
bound
arpl
inc
js
outs
jae
bound
bound
arpl
add
imul
ins
add
imul
gs
xor
push
jns
je
ins
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
jns
jne
fs
arpl
push
imul
jns
gs
jbe
fs
add
arpl
jae
data16
push
imul
imul
jns
dec
je
jbe
imul
fs
dec
outs
arpl
dec
popa
arpl
outs
add
gs
imul
je
outs
jb
gs
jbe
fs
inc
jne
jb
outs
je
jae
jb
dec
je
jbe
imul
arpl
outs
add
gs
imul
je
jae
jb
dec
je
jbe
imul
fs
add
arpl
dec
popa
arpl
jb
js
inc
jne
jb
outs
je
jae
jb
push
ins
outs
jp
push
ins
outs
jp
jb
js
add
jae
popa
jbe
gs
jne
je
dec
gs
outs
add
jb
jae
jb
inc
dec
push
ins
jne
bound
inc
fs
jae
jb
jo
inc
popa
je
add
jb
jae
jb
inc
add
jb
jae
jb
outs
jae
popa
ins
popa
je
jb
add
jae
popa
outs
arpl
push
dec
add
jb
gs
dec
gs
outs
push
gs
gs
jbe
push
inc
add
outs
jbe
push
gs
gs
add
outs
jbe
push
gs
gs
add
outs
jbe
push
gs
gs
add
imul
inc
add
inc
fs
jae
add
inc
fs
jae
xor
push
arpl
fs
jae
xor
push
jb
js
push
jns
outs
outs
jne
add
popa
jbe
jb
js
add
outs
js
push
gs
gs
push
jb
js
push
jp
jbe
je
ins
add
outs
js
dec
gs
outs
add
push
push
dec
outs
outs
imul
gs
add
push
push
dec
outs
outs
imul
gs
add
push
push
dec
outs
outs
imul
gs
add
push
push
dec
outs
outs
imul
gs
add
push
push
dec
outs
outs
imul
gs
add
jb
jae
jb
outs
addr16
jbe
ins
jne
pop
pop
add
jo
jne
outs
add
arpl
jp
add
popa
jae
outs
imul
popa
je
ins
add
arpl
add
je
outs
jb
inc
jb
fs
je
popa
ins
add
imul
jb
fs
je
popa
ins
add
popa
jb
imul
jae
popa
jb
fs
arpl
add
jb
jo
add
arpl
jo
add
pop
push
dec
dec
push
dec
dec
push
dec
inc
dec
add
pop
push
dec
dec
push
dec
dec
dec
dec
dec
dec
pop
inc
inc
add
pop
push
dec
dec
push
dec
inc
pop
dec
dec
dec
pop
inc
inc
add
pop
push
dec
dec
push
dec
dec
inc
inc
push
dec
push
inc
push
inc
add
pop
push
dec
dec
push
add
pop
push
dec
dec
push
dec
dec
dec
dec
dec
inc
inc
push
dec
push
inc
add
pop
push
dec
dec
push
dec
inc
add
pop
push
inc
push
push
dec
push
inc
add
pop
push
dec
dec
push
inc
inc
inc
inc
push
dec
push
add
pop
push
pop
push
inc
dec
dec
dec
inc
dec
inc
add
pop
inc
dec
dec
push
inc
add
inc
inc
dec
push
pop
add
push
dec
push
add
dec
inc
inc
push
add
inc
inc
dec
push
inc
push
add
push
dec
inc
dec
push
add
push
inc
inc
dec
push
inc
push
add
inc
dec
push
push
dec
dec
add
push
dec
push
inc
inc
push
inc
inc
dec
add
push
dec
dec
inc
dec
inc
dec
dec
dec
inc
add
inc
pop
push
inc
dec
inc
push
inc
inc
push
add
push
inc
inc
push
push
dec
push
add
dec
dec
inc
dec
dec
push
add
inc
pop
push
inc
push
dec
inc
dec
dec
inc
inc
inc
dec
dec
inc
add
inc
inc
dec
inc
push
inc
inc
push
add
dec
dec
push
push
inc
inc
dec
pop
add
dec
dec
push
inc
push
dec
inc
dec
add
dec
inc
pop
inc
dec
push
push
dec
dec
add
push
pop
dec
dec
push
dec
pop
inc
add
push
pop
dec
dec
dec
dec
push
inc
add
push
pop
push
dec
dec
push
push
dec
dec
inc
dec
push
add
jb
jb
jne
arpl
jae
push
push
dec
pop
inc
inc
push
push
dec
push
dec
inc
push
inc
inc
add
pop
dec
dec
push
dec
inc
dec
add
pop
inc
dec
dec
inc
add
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
add
push
pop
push
push
pop
dec
dec
dec
pop
pop
push
push
inc
inc
dec
push
add
gs
je
inc
jbe
outs
je
push
popa
imul
ins
gs
bound
arpl
popa
imul
je
jo
gs
bound
arpl
push
gs
jbe
outs
je
push
gs
je
jbe
outs
je
inc
imul
outs
ja
push
outs
fs
gs
popa
add
dec
arpl
imul
inc
add
gs
je
inc
outs
ins
jo
je
bound
inc
add
ins
arpl
push
arpl
gs
gs
dec
bound
arpl
gs
gs
inc
inc
add
je
gs
inc
outs
ins
outs
jb
push
gs
imul
outs
jb
inc
imul
gs
je
inc
dec
inc
push
arpl
outs
add
ja
gs
add
jae
gs
cs
jb
ja
outs
add
jp
add
je
gs
inc
js
outs
je
outs
imul
popa
je
inc
outs
outs
je
inc
gs
push
je
jb
ins
popa
arpl
outs
je
push
push
outs
outs
ja
push
gs
arpl
gs
imul
gs
outs
jb
addr16
jne
fs
imul
gs
imul
jae
push
imul
outs
outs
ja
gs
popa
add
je
gs
outs
imul
ins
popa
je
outs
outs
add
je
jo
inc
jne
data16
jb
add
je
gs
arpl
popa
jo
add
je
gs
je
jo
imul
gs
imul
add
ins
gs
jae
inc
inc
add
jae
gs
push
popa
jb
ins
gs
jb
dec
outs
outs
add
imul
gs
imul
outs
jns
bound
outs
ins
outs
jns
inc
jb
popa
je
push
outs
ins
imul
inc
outs
ins
outs
jb
inc
imul
bound
dec
outs
outs
add
je
popa
jo
bound
ins
popa
jo
add
outs
fs
gs
popa
inc
imul
popa
je
inc
imul
gs
push
imul
pop
dec
imul
popa
jo
imul
jb
jae
imul
jne
add
imul
ins
imul
fs
add
imul
imul
add
imul
add
bound
jne
add
bound
gs
add
bound
add
bound
jae
jb
gs
jns
bound
imul
imul
imul
push
ins
popa
outs
gs
bound
imul
bound
outs
ins
jo
gs
imul
imul
add
pop
push
gs
jae
gs
gs
jb
bound
push
gs
jae
gs
gs
jb
bound
ins
jb
jae
add
inc
ins
jb
ins
jo
jb
popa
outs
je
ins
gs
jb
addr16
jo
bound
je
ins
add
je
push
outs
jo
push
imul
je
outs
ins
add
arpl
ins
add
arpl
ins
add
je
imul
jne
je
imul
push
je
imul
gs
inc
js
inc
popa
jb
je
outs
jae
inc
ins
popa
jae
add
jns
push
jns
push
je
dec
popa
js
imul
je
jo
outs
imul
outs
push
je
je
jae
dec
gs
gs
jo
outs
push
imul
je
gs
jo
outs
jb
addr16
jne
dec
popa
ins
add
je
gs
jo
outs
ins
popa
imul
dec
push
inc
fs
jae
add
jp
jbe
inc
add
jp
jbe
imul
outs
jns
bound
outs
ins
outs
jns
dec
popa
jp
jbe
push
add
jb
gs
push
add
jb
popa
outs
je
dec
push
add
jb
imul
dec
push
add
jb
gs
outs
je
gs
push
gs
imul
inc
outs
je
gs
push
outs
jp
imul
push
outs
jp
imul
push
ins
outs
arpl
pop
add
outs
arpl
pop
add
je
dec
popa
push
imul
ins
imul
ins
gs
add
push
pop
dec
push
pop
push
dec
push
dec
push
push
inc
push
dec
dec
dec
add
push
pop
dec
push
pop
inc
dec
dec
inc
dec
dec
pop
inc
dec
dec
push
push
dec
dec
dec
inc
push
add
push
pop
dec
push
pop
push
inc
push
push
inc
push
add
push
pop
push
push
dec
push
inc
pop
push
dec
inc
dec
dec
inc
push
push
dec
dec
inc
push
push
add
push
pop
push
push
dec
push
inc
pop
inc
dec
push
inc
push
push
push
dec
push
inc
add
push
pop
push
push
dec
push
inc
pop
push
inc
push
dec
dec
dec
inc
dec
add
push
pop
push
push
dec
push
inc
pop
inc
inc
push
inc
inc
inc
dec
push
inc
push
add
push
pop
push
push
dec
push
inc
pop
push
dec
dec
inc
dec
inc
push
push
inc
push
push
push
add
push
pop
push
push
dec
push
inc
pop
push
inc
push
push
dec
dec
inc
dec
add
push
pop
push
push
dec
push
inc
pop
inc
dec
inc
inc
inc
add
je
gs
imul
gs
push
push
jb
fs
je
jns
add
je
push
push
gs
imul
add
je
push
dec
popa
ins
add
je
dec
push
push
gs
imul
pop
dec
push
dec
popa
push
jb
gs
imul
pop
dec
push
dec
imul
jae
outs
outs
add
je
dec
push
inc
jne
ins
fs
gs
imul
pop
dec
push
push
gs
jae
outs
outs
push
gs
imul
gs
imul
popa
push
jb
gs
imul
imul
jae
outs
outs
add
inc
jne
ins
fs
gs
imul
gs
jae
outs
outs
push
gs
imul
push
push
gs
imul
push
imul
popa
push
jb
gs
imul
imul
jae
outs
outs
add
jne
ins
fs
jne
bound
add
ins
popa
je
outs
jb
dec
add
inc
push
inc
push
gs
imul
jb
imul
dec
popa
push
jb
ja
gs
imul
dec
imul
jne
je
dec
popa
jae
add
jb
fs
je
jns
add
gs
jb
gs
jo
jbe
add
outs
jbe
push
gs
gs
inc
jo
dec
ins
imul
arpl
push
imul
add
popa
jbe
imul
gs
outs
inc
pop
inc
imul
push
outs
push
dec
inc
imul
push
outs
push
dec
push
dec
dec
inc
inc
imul
push
outs
inc
imul
push
xor
bound
inc
push
xor
dec
gs
outs
inc
imul
push
xor
dec
gs
outs
inc
imul
push
xor
dec
gs
outs
inc
imul
xor
bound
dec
xor
dec
gs
outs
inc
imul
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
imul
inc
dec
push
gs
gs
add
popa
ins
imul
outs
je
jb
jae
bound
outs
jbe
pop
inc
ins
imul
je
jbe
outs
ins
jo
outs
outs
je
add
outs
push
ins
outs
jp
je
inc
ins
imul
jp
gs
gs
add
outs
jp
dec
outs
outs
outs
je
inc
outs
push
gs
gs
add
arpl
gs
gs
add
je
inc
imul
outs
imul
add
outs
push
jo
popa
jbe
je
inc
ins
imul
pop
jb
jae
je
inc
ins
imul
push
ins
popa
jp
je
inc
ins
imul
dec
popa
push
inc
ins
imul
push
jns
push
inc
ins
imul
inc
js
jb
jae
cs
je
popa
inc
jb
fs
xor
xor
inc
gs
js
jb
jae
cs
je
popa
inc
jb
fs
imul
imul
jns
gs
jbe
outs
je
jb
jae
addr16
fs
imul
ja
je
ins
add
outs
pop
imul
jb
jbe
je
inc
ins
imul
inc
outs
ins
jne
inc
ins
imul
imul
jbe
outs
je
jb
jae
push
inc
dec
push
gs
gs
inc
push
pop
inc
fs
addr16
fs
outs
outs
je
outs
ins
xor
outs
jne
ins
gs
ins
imul
imul
jne
gs
jbe
outs
je
jb
jae
addr16
fs
outs
outs
je
outs
ins
xor
outs
jne
gs
outs
ja
add
jns
jbe
outs
je
jb
jae
addr16
fs
outs
outs
je
outs
ins
xor
gs
outs
ja
add
jae
popa
jbe
gs
gs
push
inc
dec
push
gs
gs
inc
push
pop
push
outs
jae
je
outs
outs
inc
push
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
inc
gs
js
jb
jae
cs
je
ins
jae
jbe
xor
xor
inc
gs
js
jb
jae
cs
je
popa
inc
imul
outs
gs
inc
outs
outs
je
outs
ins
add
outs
gs
xor
inc
gs
js
jb
jae
cs
je
popa
inc
imul
xor
xor
push
imul
je
outs
outs
add
outs
inc
outs
ins
jne
bound
popa
push
bound
jb
jae
je
bound
ins
outs
jp
je
dec
popa
bound
add
gs
xor
push
gs
inc
outs
js
je
je
outs
jo
jae
ins
popa
bound
xor
je
je
gs
outs
add
gs
xor
je
je
outs
imul
ins
xor
je
je
gs
gs
bound
ins
popa
jp
je
bound
outs
jbe
add
outs
push
jo
popa
jbe
je
bound
je
jb
outs
add
outs
dec
imul
popa
bound
xor
dec
inc
inc
imul
outs
imul
arpl
push
inc
dec
push
gs
gs
inc
push
add
outs
push
jns
push
je
je
gs
gs
add
outs
pop
imul
jb
jbe
je
ins
popa
bound
add
imul
jb
fs
imul
jbe
js
jb
jae
cs
je
popa
inc
jb
fs
outs
ins
jne
outs
jae
inc
jb
fs
outs
ins
jne
outs
add
ins
dec
popa
jp
jbe
arpl
inc
fs
jae
add
ins
dec
inc
inc
imul
ins
dec
outs
imul
jns
push
inc
gs
js
jb
jae
cs
je
popa
inc
jb
add
imul
ins
add
imul
ins
xor
inc
imul
outs
imul
add
je
dec
inc
xor
jae
add
gs
jb
jae
push
imul
popa
ins
add
jae
popa
outs
arpl
jbe
jb
gs
gs
gs
add
je
inc
jo
dec
ins
imul
je
inc
jo
dec
ins
imul
arpl
add
outs
outs
jbe
push
jp
jbe
je
ins
add
ins
push
jb
push
outs
imul
inc
gs
jne
jb
outs
je
jae
jb
dec
popa
arpl
jb
push
outs
imul
je
jne
popa
imul
outs
imul
add
jae
popa
jbe
jb
push
jbe
arpl
fs
push
add
dec
dec
inc
push
gs
gs
dec
outs
imul
imul
add
push
gs
gs
push
dec
push
gs
gs
dec
gs
inc
push
add
ins
outs
push
gs
gs
add
ins
outs
dec
outs
imul
imul
add
push
outs
push
outs
jb
ins
popa
inc
imul
jo
outs
dec
inc
push
push
gs
gs
inc
outs
jo
outs
inc
pop
push
gs
gs
inc
outs
jo
outs
push
dec
push
gs
gs
inc
outs
jo
outs
push
jns
push
gs
gs
arpl
gs
gs
pop
inc
imul
push
add
imul
popa
ins
gs
add
dec
gs
dec
popa
push
imul
add
jo
jae
popa
bound
xor
bound
dec
pop
inc
ins
imul
je
outs
ins
popa
inc
imul
inc
xor
pop
imul
jb
push
jb
push
jbe
arpl
fs
push
push
push
imul
add
outs
jbe
fs
jb
push
outs
imul
outs
outs
jbe
dec
outs
imul
dec
outs
imul
dec
gs
outs
add
jo
ins
imul
arpl
imul
jns
jne
fs
jp
jbe
je
ins
gs
outs
ins
jo
gs
add
je
push
outs
jne
imul
imul
outs
imul
gs
dec
outs
imul
dec
inc
inc
imul
je
dec
gs
outs
add
ins
push
jb
push
outs
imul
add
outs
jae
jne
outs
jns
gs
gs
jb
inc
pop
pop
inc
push
fs
push
add
popa
je
popa
jp
imul
outs
outs
je
outs
ins
popa
pop
popa
fs
outs
jns
push
jne
addr16
push
jp
jbe
je
ins
add
je
dec
popa
jp
imul
imul
imul
outs
jbe
xor
dec
fs
jbe
xor
push
jns
ins
gs
popa
dec
fs
jbe
add
ins
push
jo
jae
outs
push
outs
jp
fs
jbe
imul
jne
outs
outs
imul
xor
push
jne
outs
outs
imul
xor
pop
push
jae
imul
jns
gs
gs
gs
fs
jb
push
je
dec
ins
imul
imul
outs
push
gs
gs
dec
ins
popa
jbe
imul
gs
imul
outs
popa
dec
fs
jbe
add
outs
push
jo
popa
jbe
push
gs
gs
pop
inc
ins
imul
pop
push
gs
gs
ins
imul
je
ins
popa
je
arpl
push
je
jae
push
ins
popa
arpl
imul
add
imul
popa
outs
gs
inc
outs
outs
je
outs
ins
xor
push
imul
outs
js
jo
arpl
gs
outs
js
add
outs
gs
inc
outs
outs
je
outs
ins
xor
jo
outs
gs
inc
outs
outs
je
outs
ins
xor
jo
outs
gs
inc
outs
outs
je
outs
ins
xor
bound
jo
popa
jbe
push
gs
gs
add
imul
imul
jbe
jb
add
jp
jbe
je
ins
add
inc
inc
imul
push
jp
jbe
je
ins
add
inc
inc
imul
dec
gs
outs
add
gs
outs
add
arpl
outs
js
arpl
dec
gs
jo
ins
popa
je
jbe
je
gs
outs
add
arpl
gs
outs
js
add
imul
outs
add
push
push
add
arpl
imul
push
outs
jne
imul
imul
dec
imul
ins
popa
bound
push
gs
gs
ins
imul
bound
jp
imul
imul
outs
js
add
inc
dec
add
inc
pop
add
arpl
gs
outs
js
add
push
dec
add
arpl
gs
outs
js
add
arpl
gs
outs
js
add
dec
push
add
arpl
gs
outs
js
add
push
dec
add
outs
dec
dec
add
gs
je
ins
gs
add
outs
gs
inc
outs
outs
je
outs
ins
xor
gs
inc
outs
outs
je
outs
ins
add
jo
dec
ins
imul
pop
inc
popa
arpl
outs
addr16
imul
jne
imul
imul
outs
imul
outs
imul
jb
jns
dec
popa
jp
imul
gs
gs
ins
imul
imul
outs
jbe
add
ins
popa
inc
push
dec
popa
jp
jbe
gs
gs
add
jb
gs
gs
gs
add
arpl
push
jb
push
outs
jns
push
pop
dec
inc
add
je
dec
inc
add
je
dec
popa
jp
jbe
jae
je
dec
popa
jp
jbe
addr16
inc
fs
jae
add
je
inc
fs
jae
add
je
inc
fs
jae
xor
jae
je
inc
fs
jae
xor
jae
je
dec
inc
inc
imul
je
dec
outs
imul
dec
gs
outs
add
je
push
jns
push
jae
je
push
jns
push
cmp
inc
imul
popa
arpl
outs
addr16
imul
popa
jp
jbe
imul
popa
arpl
outs
addr16
imul
fs
jae
imul
popa
arpl
outs
addr16
imul
fs
jae
xor
imul
popa
arpl
outs
addr16
imul
inc
inc
imul
pop
inc
popa
arpl
outs
addr16
imul
outs
imul
popa
arpl
outs
addr16
imul
gs
outs
imul
popa
arpl
outs
addr16
imul
jns
push
imul
popa
arpl
outs
addr16
imul
add
jp
jbe
inc
fs
jae
add
jb
jae
xor
inc
imul
outs
imul
add
outs
bound
popa
push
je
jb
inc
jo
imul
jb
bound
popa
push
jb
push
jbe
outs
imul
jne
dec
popa
jp
jbe
gs
gs
jbe
push
push
popa
je
popa
jbe
outs
outs
imul
imul
jbe
jb
push
gs
fs
jb
je
add
gs
imul
inc
jo
inc
popa
je
push
inc
dec
add
outs
outs
arpl
popa
arpl
jbe
outs
je
add
jae
gs
cs
push
imul
gs
add
imul
imul
outs
push
gs
gs
add
push
imul
add
jb
outs
jb
arpl
jb
outs
je
jne
jae
jb
dec
popa
jae
popa
jbe
popa
imul
add
outs
outs
jbe
jne
jp
jb
push
jb
ins
outs
jp
gs
gs
gs
jp
add
outs
outs
jbe
je
outs
jp
arpl
imul
pop
outs
bound
jp
outs
je
jp
inc
jo
inc
popa
je
push
inc
dec
add
imul
je
dec
gs
imul
popa
je
dec
outs
outs
add
je
outs
jae
outs
outs
inc
popa
je
dec
bound
arpl
js
outs
jae
outs
outs
inc
popa
je
inc
imul
ins
ins
popa
bound
xor
inc
imul
je
imul
inc
imul
imul
jae
outs
imul
dec
inc
inc
imul
ins
add
dec
imul
push
jb
push
outs
imul
dec
inc
push
jp
jbe
je
ins
gs
imul
jp
imul
ins
add
imul
outs
push
jb
inc
je
outs
imul
addr16
inc
js
outs
jae
outs
outs
inc
popa
je
add
je
inc
js
outs
jae
outs
outs
inc
popa
je
add
je
inc
imul
je
imul
add
je
inc
imul
je
imul
add
je
inc
jne
fs
jb
push
outs
imul
inc
jne
fs
jb
push
outs
imul
dec
inc
dec
imul
push
jb
push
outs
imul
dec
inc
dec
imul
push
jb
push
outs
imul
dec
inc
push
jp
jbe
je
ins
add
je
dec
inc
push
jp
jbe
je
ins
add
je
dec
popa
jp
imul
gs
push
jb
jae
jne
dec
outs
push
jb
inc
je
outs
imul
push
jb
jae
jne
dec
outs
push
jb
inc
je
outs
imul
gs
jns
push
fs
jbe
outs
je
popa
outs
fs
gs
push
jb
jo
jb
jns
push
add
fs
push
jb
jo
jb
jns
push
add
ins
outs
jbe
pop
push
jb
jo
jb
jns
push
add
imul
gs
jns
push
add
je
outs
jae
outs
outs
inc
popa
je
add
jae
outs
inc
imul
je
jb
add
imul
jae
outs
imul
jae
outs
jb
gs
jb
push
outs
imul
imul
add
imul
outs
push
jb
inc
je
outs
imul
imul
imul
push
jp
jbe
je
ins
add
arpl
imul
jns
popa
jp
jbe
gs
gs
add
arpl
imul
jns
popa
jp
jbe
gs
gs
xor
dec
popa
arpl
imul
jns
jbe
jb
outs
imul
jae
jbe
arpl
push
jne
jb
ins
popa
arpl
inc
jne
fs
jp
jbe
je
ins
add
popa
jae
outs
imul
add
jae
outs
push
dec
inc
add
fs
jb
jbe
outs
popa
push
gs
gs
ins
popa
jb
push
inc
dec
add
fs
imul
gs
add
outs
imul
dec
ins
imul
imul
popa
outs
imul
push
jbe
outs
imul
cs
popa
arpl
imul
jns
jne
fs
jp
jbe
je
ins
add
dec
ins
imul
imul
popa
outs
imul
push
jbe
outs
imul
cs
popa
arpl
imul
jns
popa
jp
jbe
gs
gs
add
dec
ins
imul
imul
popa
outs
imul
push
jbe
outs
imul
cs
popa
arpl
imul
jns
popa
jp
jbe
gs
gs
xor
push
inc
dec
dec
ins
imul
imul
popa
outs
imul
push
jbe
outs
imul
cs
popa
arpl
imul
jns
jbe
jb
outs
imul
jae
jbe
arpl
push
jne
push
jns
je
ins
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
je
pop
aaa
jp
add
je
dec
outs
jae
popa
ins
popa
je
jb
push
ins
popa
jb
pop
push
inc
dec
pop
inc
xor
gs
gs
xor
add
ins
je
jb
add
jp
add
jae
popa
ins
popa
je
jb
push
ins
popa
jb
pop
push
inc
dec
pop
inc
xor
gs
gs
xor
add
popa
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
inc
gs
jne
je
jo
outs
pop
popa
jo
jae
jae
bound
imul
dec
gs
jbe
je
outs
jb
je
fs
dec
gs
jae
jne
add
outs
arpl
dec
popa
arpl
add
ins
add
outs
add
ins
add
jbe
outs
je
je
jb
bound
gs
bound
outs
jne
ins
push
gs
je
bound
imul
je
add
popa
ins
add
popa
outs
fs
add
imul
outs
fs
outs
inc
outs
jne
je
ins
jo
popa
outs
fs
gs
bound
imul
jbe
outs
je
ins
jo
ins
popa
jae
dec
popa
ins
add
imul
ins
add
outs
add
add
popa
jb
ins
add
jb
ins
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jb
push
inc
je
jb
bound
add
ins
popa
outs
popa
addr16
jns
add
jb
push
dec
bound
arpl
arpl
arpl
outs
ins
outs
jb
fs
inc
inc
add
inc
gs
add
inc
gs
add
imul
imul
arpl
outs
pop
push
jb
add
push
jb
add
outs
jo
jo
ins
imul
je
imul
push
jae
add
jbe
imul
je
jb
bound
add
arpl
outs
add
data16
je
ins
jo
je
imul
arpl
inc
outs
jb
popa
je
arpl
je
imul
imul
arpl
gs
outs
je
outs
dec
jb
outs
je
je
outs
outs
add
push
imul
ja
je
ins
imul
outs
fs
imul
push
je
imul
data16
push
je
data16
jne
jo
je
jb
arpl
imul
inc
ins
imul
jae
outs
outs
add
ja
jne
ins
imul
imul
popa
ins
imul
inc
popa
arpl
outs
dec
popa
js
js
outs
je
ins
jo
gs
ins
je
add
ins
popa
addr16
outs
inc
ins
fs
push
push
outs
fs
outs
jae
jb
inc
data16
jb
pop
add
arpl
arpl
jne
ins
popa
addr16
jae
jb
gs
outs
ins
popa
imul
jne
add
data16
outs
dec
outs
fs
jne
inc
arpl
outs
add
push
popa
jb
ins
add
push
popa
jb
ins
add
imul
popa
jb
popa
add
arpl
push
push
imul
jns
imul
jb
jo
imul
je
outs
ins
add
push
gs
imul
add
inc
imul
outs
fs
add
jbe
ins
add
push
gs
gs
imul
add
ins
jne
add
outs
popa
add
imul
popa
ins
outs
imul
add
jb
ins
gs
add
outs
outs
je
add
jb
jae
add
imul
dec
inc
push
gs
gs
pop
push
imul
gs
add
jne
imul
ins
popa
jae
popa
add
add
outs
jo
jb
jns
popa
ins
add
jno
gs
add
fs
imul
imul
outs
outs
dec
popa
ins
add
ins
outs
je
inc
fs
jae
add
outs
imul
je
ins
cs
jne
je
ins
gs
gs
imul
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
gs
imul
imul
jns
je
ins
cs
imul
imul
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
popa
jb
and
and
imul
imul
jb
outs
ins
outs
je
addr16
dec
jae
xor
imul
imul
gs
add
imul
outs
arpl
dec
popa
arpl
outs
add
imul
jbe
add
imul
gs
dec
jo
outs
inc
popa
jae
dec
gs
push
je
imul
jne
ins
dec
jb
push
jo
arpl
inc
outs
outs
arpl
add
jbe
ins
imul
imul
jo
imul
outs
push
jne
dec
gs
inc
jne
jb
outs
je
jae
jb
push
imul
jns
gs
imul
push
inc
jb
popa
je
push
jne
dec
gs
inc
gs
popa
ins
jne
add
pop
inc
jno
popa
ins
imul
ins
ins
dec
jb
ins
jo
jns
push
gs
imul
je
popa
outs
popa
addr16
jae
je
inc
js
arpl
xor
outs
je
outs
jne
add
je
xor
push
gs
popa
ins
jne
add
arpl
ins
inc
outs
ins
fs
inc
gs
outs
ins
fs
popa
je
add
jae
gs
cs
dec
add
je
add
ins
bound
add
jo
jns
push
jns
je
ins
cs
arpl
imul
je
addr16
jo
jns
push
jb
jo
gs
inc
push
inc
jb
jo
outs
push
gs
imul
imul
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
outs
jb
push
je
gs
ins
add
ins
ins
gs
imul
imul
jns
je
push
jb
outs
jae
outs
jb
add
gs
je
inc
arpl
jo
outs
jb
inc
jb
jo
outs
push
je
gs
ins
add
jb
popa
ins
add
jns
je
push
je
gs
ins
dec
outs
fs
imul
push
ins
inc
ins
outs
arpl
push
jns
je
ins
cs
gs
add
arpl
imul
pop
push
push
inc
cmp
push
outs
inc
jb
popa
jns
inc
gs
je
imul
inc
jns
gs
inc
jb
popa
je
inc
outs
arpl
jo
outs
jb
push
outs
inc
popa
jae
ss
je
imul
add
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
xor
inc
sub
sub
sub
sub
xor
xor
xor
inc
jge
inc
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
gs
outs
xor
xor
xor
xor
sub
outs
je
ins
gs
gs
jo
jb
add
jb
jns
push
jne
je
ins
gs
imul
fs
add
imul
inc
jb
popa
jns
and
ins
gs
outs
xor
xor
xor
xor
sub
ins
dec
ins
jo
jb
inc
je
jb
bound
add
jb
gs
xor
cs
ins
add
jb
gs
xor
cs
ins
add
gs
xor
fs
ins
add
gs
xor
fs
ins
add
imul
ins
add
je
gs
inc
js
outs
je
outs
imul
je
push
je
jb
ins
popa
arpl
outs
je
add
je
jo
xor
cs
ins
add
je
je
add
jb
add
jb
push
je
push
outs
push
je
imul
push
jns
je
ins
cs
imul
jns
gs
imul
jae
gs
cs
imul
jns
gs
imul
je
jbe
inc
imul
jns
inc
outs
ins
popa
imul
jne
jb
outs
je
outs
ins
popa
imul
jbe
inc
imul
jns
popa
jb
imul
jb
arpl
jns
outs
je
jns
inc
gs
imul
jns
outs
je
jns
addr16
inc
jne
add
pop
dec
outs
gs
popa
ins
imul
bound
dec
ins
popa
add
pop
inc
js
ins
imul
jae
gs
cs
jb
ja
outs
addr16
ins
popa
imul
gs
inc
outs
jb
popa
je
inc
gs
arpl
push
gs
gs
jae
dec
arpl
push
je
jne
je
popa
jns
jne
inc
je
jb
bound
add
outs
jne
dec
imul
pop
pop
add
je
pop
add
je
push
imul
je
inc
outs
je
outs
ins
add
gs
je
outs
addr16
jns
je
ins
add
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
jp
dec
data16
jb
imul
pop
push
gs
imul
pop
dec
popa
push
jb
addr16
dec
imul
popa
je
outs
jb
dec
inc
add
je
push
ins
popa
je
outs
jb
add
je
push
gs
jae
outs
outs
add
je
inc
jne
ins
add
jae
outs
ins
inc
imul
inc
imul
ins
gs
outs
je
outs
ins
ins
arpl
outs
add
je
inc
ins
gs
outs
je
add
outs
popa
jb
dec
gs
popa
addr16
outs
arpl
imul
imul
outs
je
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
ins
ins
arpl
outs
pusha
xor
inc
imul
ins
gs
outs
je
inc
fs
je
push
jb
outs
jae
outs
jb
inc
imul
ins
gs
outs
je
push
jns
je
ins
cs
gs
imul
ins
cs
gs
jb
jo
imul
jbe
arpl
outs
fs
imul
pop
inc
outs
fs
imul
pop
inc
imul
push
imul
add
je
push
outs
fs
imul
inc
popa
je
push
imul
pop
dec
outs
ja
dec
outs
outs
imul
gs
inc
js
je
inc
fs
arpl
fs
outs
jo
inc
jb
popa
je
jb
push
js
gs
imul
je
imul
jne
gs
bound
xor
inc
fs
popa
outs
add
je
inc
popa
je
push
outs
jne
arpl
inc
outs
outs
je
outs
ins
add
je
push
gs
add
je
inc
popa
jo
imul
dec
gs
push
gs
inc
outs
js
popa
jae
add
je
push
gs
fs
outs
ins
jns
jae
je
inc
outs
popa
bound
add
fs
imul
add
outs
ins
gs
outs
add
je
inc
jne
jb
outs
je
push
gs
outs
jbe
inc
jne
jb
outs
je
addr16
push
outs
jae
je
outs
outs
add
je
dec
je
ins
add
je
dec
je
ins
add
data16
jae
inc
popa
je
push
outs
jne
arpl
jae
je
push
outs
jae
je
outs
outs
add
jne
gs
je
jb
inc
gs
outs
jne
gs
je
jb
dec
outs
jbe
dec
gs
add
inc
js
jb
jae
cs
je
popa
inc
jb
fs
imul
jae
add
jae
push
imul
jb
jae
inc
popa
je
add
ja
jbe
outs
je
jb
jae
addr16
push
outs
ja
popa
outs
fs
add
ins
jne
outs
push
imul
fs
outs
ins
jne
outs
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
ins
jne
outs
jae
inc
gs
outs
ja
gs
ins
inc
imul
gs
add
inc
js
jb
jae
cs
je
ins
jae
inc
jo
gs
jb
outs
arpl
bound
arpl
gs
inc
jo
gs
jb
outs
arpl
addr16
push
popa
ins
ins
outs
outs
add
je
inc
popa
arpl
outs
ins
outs
jb
addr16
push
gs
push
push
jae
je
inc
popa
arpl
outs
ins
outs
jb
add
je
inc
outs
jne
je
jae
je
dec
gs
bound
arpl
gs
dec
gs
bound
arpl
popa
jae
inc
jne
je
outs
add
jb
outs
jb
inc
ins
imul
outs
je
addr16
dec
outs
arpl
imul
push
imul
gs
js
jb
jae
cs
je
popa
inc
jb
fs
imul
imul
outs
outs
add
imul
outs
add
ins
arpl
je
outs
outs
add
imul
je
addr16
dec
imul
pop
dec
outs
jne
gs
jbe
outs
je
jb
jae
jae
je
dec
popa
outs
fs
gs
jne
jo
jb
dec
outs
imul
add
imul
push
jne
jo
outs
fs
popa
jns
jne
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
inc
outs
arpl
je
ins
add
je
inc
outs
arpl
jae
je
dec
outs
arpl
imul
imul
pop
dec
popa
jb
imul
dec
popa
ins
add
je
push
imul
pop
push
popa
bound
fs
jae
je
inc
jne
outs
push
imul
dec
outs
fs
je
dec
ins
gs
outs
fs
outs
je
popa
outs
fs
gs
popa
fs
inc
ins
imul
je
outs
ins
inc
imul
inc
outs
ins
ins
arpl
outs
add
je
inc
popa
je
inc
imul
add
imul
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
fs
popa
fs
push
outs
jae
je
outs
outs
inc
push
add
je
push
popa
jae
ja
jb
inc
push
imul
jae
ins
je
jae
je
inc
imul
jae
ins
je
jae
je
inc
jb
fs
outs
outs
je
outs
ins
add
imul
jae
gs
jb
addr16
dec
jo
imul
popa
jbe
outs
jb
inc
outs
ins
jne
outs
push
imul
outs
outs
jae
gs
jb
jae
je
inc
imul
jb
fs
jo
imul
je
ins
imul
add
je
dec
jo
imul
je
ins
imul
add
je
inc
ins
ins
outs
ja
outs
jb
add
imul
jae
gs
arpl
outs
add
je
dec
jo
imul
arpl
outs
add
je
inc
outs
popa
bound
jo
gs
jb
outs
arpl
outs
arpl
gs
gs
ins
add
imul
jae
imul
pop
dec
jo
imul
ja
jae
je
push
push
outs
jne
push
popa
outs
gs
add
ja
je
ins
gs
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
outs
ja
je
ins
add
je
inc
imul
add
je
push
imul
jae
je
push
imul
outs
fs
inc
outs
outs
je
outs
ins
dec
popa
jbe
addr16
je
jb
addr16
inc
ins
bound
fs
popa
jbe
addr16
je
jb
jae
je
dec
popa
imul
inc
gs
js
jb
jae
cs
je
popa
inc
jb
fs
gs
jae
je
jb
add
gs
gs
jae
je
jb
inc
outs
ins
ins
arpl
outs
add
je
push
imul
arpl
outs
add
fs
inc
outs
jne
ins
gs
ins
imul
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
dec
gs
outs
ja
add
jne
gs
jbe
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
jne
gs
outs
ja
add
jp
inc
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
ins
imul
add
je
push
push
outs
outs
add
je
push
push
push
popa
jae
bound
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
fs
outs
imul
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
je
push
outs
imul
outs
arpl
gs
inc
gs
outs
arpl
gs
push
dec
inc
xor
outs
popa
gs
jae
inc
ins
outs
jb
je
ins
add
ins
jo
je
dec
popa
jae
add
je
outs
outs
jbe
jb
gs
push
gs
popa
arpl
push
outs
push
jo
gs
push
dec
inc
xor
inc
gs
js
jb
jae
cs
imul
add
imul
gs
inc
popa
jb
jbe
gs
arpl
ins
popa
add
inc
js
jb
jae
cs
jae
jb
imul
add
jae
ins
bound
addr16
inc
jae
gs
bound
push
imul
jae
ins
bound
inc
gs
js
jb
jae
cs
outs
outs
imul
inc
gs
add
gs
outs
outs
imul
inc
gs
add
je
imul
je
ins
add
fs
dec
outs
popa
add
fs
push
push
inc
gs
js
arpl
imul
ins
bound
inc
imul
outs
outs
dec
outs
outs
add
je
gs
imul
add
je
inc
imul
je
push
popa
jb
add
je
push
gs
add
outs
ja
jb
push
jns
je
ins
cs
arpl
imul
arpl
popa
ins
add
outs
outs
ja
dec
fs
je
je
add
je
jne
jb
outs
je
addr16
dec
popa
ins
add
outs
outs
ja
push
jb
outs
arpl
popa
ins
add
fs
je
je
add
je
dec
fs
je
je
add
je
inc
push
add
jne
ins
jae
inc
ins
gs
jb
inc
outs
ins
jo
jb
push
outs
add
jae
inc
imul
imul
push
jb
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
push
jb
arpl
jae
outs
fs
add
je
dec
popa
imul
add
je
inc
imul
addr16
inc
imul
dec
outs
jae
jb
add
push
popa
jb
add
jae
gs
cs
outs
jb
add
jae
gs
cs
imul
ins
gs
bound
inc
outs
jne
je
addr16
push
popa
ins
jne
inc
outs
jne
je
inc
gs
outs
ins
ins
popa
outs
fs
imul
add
popa
jb
push
jo
imul
push
add
fs
data16
je
dec
outs
je
jb
popa
ins
add
bound
imul
ins
outs
popa
fs
popa
je
add
gs
addr16
dec
gs
imul
pop
dec
gs
popa
add
jb
dec
gs
popa
addr16
outs
js
dec
gs
popa
addr16
outs
js
jne
je
outs
jae
dec
gs
popa
addr16
outs
js
arpl
add
outs
ja
dec
imul
add
imul
je
popa
outs
outs
ins
inc
imul
push
jb
je
inc
ins
ins
inc
jns
gs
push
je
jb
add
je
dec
gs
jae
je
dec
gs
inc
jo
ins
imul
add
je
inc
js
arpl
popa
bound
popa
je
add
outs
je
xor
jae
je
push
outs
jo
outs
jae
add
arpl
add
je
inc
jne
jb
outs
je
push
add
je
inc
jne
jb
outs
je
jne
je
jb
add
je
inc
jne
jb
outs
je
dec
inc
jne
je
jb
add
je
inc
fs
jae
add
je
jb
arpl
jae
jae
jns
popa
ins
add
je
dec
popa
outs
fs
add
jae
popa
addr16
outs
js
dec
push
imul
outs
ja
push
push
push
je
jb
add
outs
ja
imul
outs
outs
je
imul
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
inc
gs
js
jb
jae
cs
je
popa
inc
imul
jo
jae
je
jb
add
jo
jae
je
jb
dec
je
ins
dec
outs
outs
imul
imul
jb
jo
jb
imul
outs
jae
je
jb
dec
je
ins
inc
push
imul
push
arpl
gs
dec
ins
popa
add
arpl
gs
outs
js
imul
add
je
push
imul
add
je
push
popa
bound
outs
jo
dec
ins
popa
addr16
outs
arpl
imul
pop
dec
ins
popa
addr16
outs
arpl
imul
outs
jae
je
jb
dec
je
ins
dec
outs
outs
imul
imul
gs
js
jb
jae
cs
je
popa
inc
imul
outs
je
outs
ins
jae
inc
gs
inc
imul
gs
inc
gs
inc
imul
gs
jae
je
jb
dec
je
ins
inc
jne
je
outs
inc
imul
jb
jne
je
outs
inc
outs
ins
ins
arpl
outs
add
je
inc
jne
je
outs
jae
inc
imul
outs
outs
add
je
outs
outs
push
jb
fs
dec
outs
outs
imul
outs
ins
jne
outs
dec
outs
outs
inc
outs
ins
ins
arpl
outs
add
imul
outs
ins
jne
outs
dec
outs
outs
add
inc
js
jb
jae
cs
popa
je
cs
xor
xor
inc
outs
jb
popa
je
jns
add
jb
inc
ins
imul
add
je
inc
imul
gs
bound
add
je
push
popa
ins
jne
dec
gs
bound
add
fs
inc
imul
push
add
outs
je
outs
je
ins
imul
add
je
push
gs
inc
ins
imul
je
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
popa
fs
inc
push
fs
push
add
jae
push
gs
jae
je
jb
dec
je
ins
inc
push
imul
ins
popa
arpl
jae
je
inc
outs
jb
inc
outs
ins
outs
jb
popa
fs
push
imul
gs
inc
outs
outs
je
outs
ins
inc
jo
gs
jb
outs
arpl
bound
arpl
outs
outs
je
jae
je
inc
outs
outs
je
push
gs
dec
jo
imul
je
push
gs
dec
jo
imul
je
dec
inc
ins
imul
add
jb
inc
ins
imul
add
je
push
inc
ins
imul
add
gs
inc
jne
outs
push
imul
add
je
inc
jne
outs
push
imul
add
jne
je
outs
inc
outs
outs
je
outs
ins
add
je
inc
arpl
jo
inc
jne
je
outs
add
jb
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
outs
outs
add
je
dec
arpl
add
je
dec
popa
js
ins
imul
jae
je
dec
imul
inc
outs
js
inc
imul
jns
inc
imul
jns
outs
outs
add
gs
je
inc
imul
jns
inc
jne
jae
jb
add
je
push
popa
imul
add
je
inc
jne
jb
outs
je
inc
gs
imul
gs
add
inc
push
push
inc
je
jb
bound
add
popa
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
jne
addr16
je
jo
push
push
imul
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
popa
inc
outs
outs
je
popa
arpl
je
imul
gs
popa
ins
imul
je
jb
bound
add
outs
push
gs
popa
ins
imul
jb
bound
add
je
outs
outs
popa
ins
inc
imul
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
gs
gs
je
add
je
jb
outs
arpl
add
ins
jo
jb
inc
js
push
add
ins
outs
jbe
add
outs
jo
jb
jns
push
fs
jbe
outs
je
jb
jae
dec
outs
jbe
imul
jb
ja
popa
bound
je
jb
bound
add
popa
dec
gs
bound
inc
je
jb
bound
add
jb
imul
jb
arpl
je
imul
jo
jb
je
outs
outs
inc
outs
outs
je
popa
arpl
je
imul
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
popa
addr16
outs
outs
je
popa
arpl
je
imul
gs
popa
addr16
outs
fs
gs
bound
inc
je
jb
bound
add
je
inc
push
ins
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
je
imul
add
outs
arpl
outs
outs
imul
dec
dec
ins
imul
jb
gs
cs
jae
jne
arpl
add
dec
ins
imul
ins
push
jb
push
outs
imul
jne
arpl
add
dec
ins
imul
outs
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
popa
jb
and
and
imul
imul
ins
imul
add
xor
add
ins
add
je
outs
add
and
imul
add
arpl
and
jb
add
imul
jb
jne
cmp
and
add
push
add
data16
add
jb
add
add
add
add
add
add
add
pop
dec
add
push
add
push
add
jb
jbe
add
outs
add
jns
push
add
add
xor
add
dec
add
jae
ins
add
push
add
add
inc
add
add
jae
popa
add
push
add
add
ins
add
jp
bound
jns
add
jb
add
popa
add
inc
add
jae
inc
add
je
popa
add
adc
add
add
popa
add
inc
add
add
jb
add
popa
add
dec
add
jae
je
popa
add
add
add
jns
add
dec
add
jae
je
popa
add
arpl
add
push
add
or
jb
jbe
add
add
inc
add
je
outs
add
jns
push
add
jb
jbe
add
xor
add
inc
add
je
outs
add
jns
push
add
jb
jbe
add
xor
add
inc
add
je
outs
add
jns
push
add
jb
jbe
add
xor
add
imul
inc
add
adc
arpl
data16
add
add
popa
add
adc
data16
add
add
popa
add
add
adc
data16
add
add
popa
add
add
pop
push
add
outs
add
jns
push
add
jb
jbe
add
add
push
add
outs
add
jns
push
add
imul
je
add
adc
outs
add
jns
dec
add
jae
ins
add
add
push
add
outs
add
jns
dec
add
jae
ins
add
xor
add
push
add
add
push
add
outs
add
jns
add
push
add
outs
add
jns
push
add
jo
outs
add
jne
je
add
push
add
dec
add
outs
add
je
outs
add
push
add
jb
jbe
add
xor
add
push
add
dec
add
outs
add
je
outs
add
push
add
jb
jbe
add
xor
add
push
add
dec
add
outs
add
je
outs
add
push
add
jb
jbe
add
xor
add
push
add
dec
add
outs
add
je
outs
add
push
add
jb
jbe
add
xor
add
push
add
dec
add
outs
add
je
outs
add
push
add
jb
jbe
add
xor
add
add
jae
popa
add
dec
add
add
add
add
and
push
add
add
add
add
add
add
sub
add
inc
add
push
add
add
sbb
add
add
popa
add
add
add
push
add
add
sbb
add
js
je
add
add
jne
cmp
cmp
xor
add
add
js
je
add
add
jne
cmp
cmp
xor
add
data16
add
add
outs
add
add
add
jp
cmp
cmp
xor
add
push
add
cmp
das
add
add
add
popa
add
add
jae
je
add
jl
add
data16
add
add
cvttps2pi
and
push
add
jo
cmp
and
add
sub
and
push
add
add
je
cmp
and
add
inc
add
je
je
outs
add
cmp
and
add
and
push
add
jb
imul
add
add
add
outs
add
mov
push
add
jb
jbe
add
add
and
dec
add
ins
add
and
inc
add
add
add
outs
add
sbb
add
jb
outs
add
add
jae
imul
popa
add
and
popa
add
add
add
je
add
and
push
add
jb
jbe
add
add
and
inc
add
add
outs
add
add
add
add
jbe
add
add
and
inc
add
je
popa
add
add
je
add
and
inc
add
add
add
outs
add
daa
and
inc
add
je
add
jo
jb
imul
and
inc
add
add
add
outs
add
sbb
add
add
and
inc
add
add
add
outs
add
and
add
je
popa
add
add
jb
add
add
add
je
imul
add
and
add
push
add
dec
add
dec
add
dec
add
adc
outs
add
add
jae
and
cmp
xor
add
add
add
add
add
push
add
outs
add
add
jae
and
cmp
cmp
and
push
add
arpl
outs
add
add
add
add
je
imul
add
outs
add
add
jae
and
cmp
cmp
add
outs
add
add
jae
and
dec
add
add
push
add
outs
add
add
jae
and
dec
add
add
add
add
sbb
outs
add
add
jae
and
dec
add
add
add
add
sbb
imul
outs
add
jae
and
xor
xor
xor
xor
add
outs
add
add
jae
and
pop
add
add
push
add
outs
add
add
jae
and
push
add
jb
jbe
add
and
xor
xor
xor
xor
add
push
add
outs
add
add
jae
and
dec
add
outs
add
push
add
add
push
add
cmp
das
add
add
inc
das
add
jb
imul
popa
add
outs
add
popa
add
imul
jb
imul
popa
add
outs
add
popa
add
imul
jb
jbe
add
add
ins
add
arpl
popa
add
add
jae
je
add
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jb
ja
add
jns
add
inc
add
add
jae
add
dec
add
jp
ja
popa
add
adc
add
jns
pop
add
add
add
dec
add
imul
jae
add
ja
add
popa
add
pop
inc
add
add
jae
and
jae
add
ja
add
popa
add
add
add
pop
inc
add
add
jae
and
jae
add
ja
add
popa
add
add
add
or
popa
add
inc
add
add
push
add
outs
add
imul
popa
add
add
adc
add
je
outs
add
popa
add
add
or
outs
add
jns
add
jne
outs
add
cvtps2pd
popa
add
imul
pop
add
or
jne
outs
add
pop
add
cmovle
popa
add
add
repz
sbb
add
and
fs
add
add
inc
add
jne
ins
add
ja
popa
add
add
add
add
dec
add
add
outs
add
rcpps
add
jbe
add
xor
add
dec
add
jp
add
add
dec
add
add
jb
ins
add
add
dec
add
jae
ins
add
add
push
add
arpl
push
add
add
data16
ins
add
add
or
add
add
sbb
outs
add
add
add
jb
jbe
add
jne
add
popa
add
popa
add
cmp
jb
popa
add
add
and
jae
ins
add
jp
popa
add
add
jns
bound
jb
popa
add
std
add
add
add
jbe
add
aas
add
cmovae
push
add
add
or
outs
add
ins
add
add
or
bound
add
add
and
add
add
popa
add
add
add
jbe
add
jne
and
xor
cmp
add
bound
je
outs
add
imul
add
imul
jbe
popa
add
adc
outs
add
in
add
outs
add
popa
add
or
add
je
add
inc
add
add
jae
popa
add
add
adc
je
push
add
jb
jbe
add
xor
add
outs
add
jns
arpl
push
add
add
push
add
add
push
add
add
or
bound
add
add
adc
inc
add
add
imul
jns
add
je
dec
add
add
jb
ins
add
add
bound
je
outs
add
add
add
or
add
add
adc
je
outs
add
popa
add
outs
add
jne
add
push
add
add
bound
je
outs
add
jb
jne
jae
imul
pop
add
jne
popa
add
je
add
bound
je
outs
add
ins
add
jp
imul
push
add
add
imul
ins
add
bound
add
add
sbb
jo
imul
jae
add
jbe
add
jne
cmp
add
je
js
je
push
add
jo
imul
ins
add
bound
add
add
or
jae
ins
add
cmp
add
je
js
je
dec
add
jae
ins
add
add
bound
add
add
or
jmp
add
add
adc
add
add
add
outs
add
or
bound
add
add
and
add
add
popa
add
add
add
jbe
add
jne
and
xor
cmp
add
jb
add
popa
add
adc
add
add
jb
jbe
add
add
bound
je
outs
add
ins
add
jp
popa
add
punpckldq
je
outs
add
outs
add
jns
add
dec
add
jbe
std
add
adc
outs
add
jo
jb
popa
add
imul
push
add
jb
popa
add
imul
bound
je
outs
add
je
outs
add
outs
add
add
outs
add
outs
add
add
bound
je
outs
add
imul
add
add
add
imul
imul
xor
add
arpl
outs
add
add
jp
add
add
arpl
outs
add
add
add
jae
popa
add
adc
ins
add
inc
add
imul
jns
add
arpl
outs
add
add
add
outs
add
adc
ins
add
jns
arpl
push
add
add
add
imul
outs
add
je
jb
outs
add
add
rcpps
add
jbe
add
jns
add
sub
add
inc
add
push
add
add
dec
add
add
adc
add
and
inc
add
add
add
push
add
data16
add
jb
add
add
popa
add
je
push
add
add
push
push
add
outs
add
in
add
loope
and
jp
push
imul
outs
add
loope
outs
add
add
add
add
je
jne
jo
outs
add
jae
je
imul
add
jbe
add
outs
add
add
add
add
dec
add
xor
data16
add
add
add
aaa
add
add
add
sub
add
aaa
add
add
add
xor
add
popa
add
xor
pop
xor
xor
xor
add
add
add
add
add
xor
add
add
add
add
add
xor
sub
add
add
add
add
popa
add
add
add
add
add
xor
add
xor
xor
xor
add
pop
add
adc
imul
popa
add
add
imul
add
popa
add
popa
add
add
popa
add
add
add
ins
add
add
xor
add
dec
add
jp
jns
imul
add
add
add
add
add
add
inc
add
jb
ins
add
add
push
add
jb
jbe
add
and
push
add
push
add
dec
add
add
jae
add
add
js
je
add
add
jne
add
jae
xor
add
je
add
add
jne
add
imul
add
add
and
jae
add
jbe
add
add
xor
xor
aaa
add
add
add
add
add
add
add
adc
and
push
add
popa
add
je
and
xor
add
jae
xor
add
js
imul
arpl
push
add
add
and
push
add
popa
add
je
and
xor
add
jae
imul
add
js
je
add
add
jne
add
dec
add
add
or
add
jp
add
pcmpeqd
jae
push
add
add
or
add
popa
add
sbb
dec
add
add
add
inc
add
add
add
popa
add
sbb
pop
add
popa
add
outs
add
jns
arpl
push
add
add
jae
add
add
pop
jae
xor
pop
jae
aaa
add
add
sbb
dec
add
popa
add
outs
add
jns
arpl
push
add
add
push
add
push
add
dec
add
and
jae
add
jbe
add
add
jae
aaa
add
add
js
je
add
add
jne
add
push
add
arpl
push
add
push
add
jb
jbe
add
add
add
jae
xor
add
js
jae
outs
add
add
add
outs
add
add
jp
add
add
jae
xor
add
js
jae
outs
add
add
add
outs
add
add
jp
add
add
jae
xor
add
js
jae
outs
add
add
add
outs
add
add
jp
add
add
jae
xor
add
js
jae
outs
add
add
add
outs
add
add
jp
add
add
jae
xor
add
js
imul
arpl
push
add
add
add
jae
xor
add
js
imul
arpl
push
add
add
add
jae
xor
add
js
je
add
add
jne
add
add
jae
xor
add
js
je
add
add
jne
add
add
jae
xor
add
js
je
add
add
jne
add
add
jae
xor
add
js
je
add
add
jne
add
jae
imul
add
add
js
je
add
add
jne
add
jae
imul
add
add
js
je
add
add
jne
add
jae
imul
add
add
js
je
add
add
jne
add
xor
add
add
add
add
add
add
add
add
add
add
push
add
add
add
js
je
add
add
jne
add
add
add
add
add
add
add
cmp
add
add
add
add
adc
js
arpl
jp
jbe
add
aaa
add
and
xor
add
js
jae
outs
add
add
add
outs
add
add
jp
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
aaa
jbe
popa
add
outs
add
je
popa
add
sub
add
add
js
je
add
add
jne
cmp
xor
xor
xor
cmp
xor
add
add
sub
add
add
add
add
add
add
jo
add
je
add
add
js
je
add
add
jne
das
add
xor
push
add
jb
jbe
add
outs
add
jns
push
add
add
je
add
add
ins
add
jb
je
das
add
ins
add
imul
add
add
add
add
inc
add
imul
jns
cmp
add
popa
add
je
add
push
add
push
add
and
ins
add
jb
je
and
jp
popa
add
ins
add
imul
add
popa
add
add
add
jo
outs
add
add
imul
and
jae
add
add
popa
add
loope
jp
popa
add
add
jo
outs
add
add
in
add
add
and
inc
add
add
add
add
jbe
add
outs
add
std
add
and
jne
jo
add
je
add
add
cmovae
push
add
cmp
and
add
inc
add
jns
bound
popa
add
pop
jae
add
jbe
imul
jne
push
add
sbb
add
jbe
imul
imul
add
add
popa
add
sbb
add
jbe
imul
jbe
popa
add
add
add
jae
add
jbe
imul
bound
add
add
jb
arpl
imul
jae
add
jbe
imul
outs
add
add
jb
add
add
jb
jbe
imul
jbe
imul
add
add
sbb
add
jbe
imul
bound
jne
jb
imul
add
jae
add
jbe
imul
imul
add
add
add
jae
add
jbe
imul
jbe
add
add
add
sbb
pop
add
push
add
add
add
jb
ins
add
and
add
add
jns
ins
add
and
push
imul
jo
pop
add
jae
jne
outs
add
je
popa
add
add
add
add
ins
add
jb
je
and
push
add
add
add
xor
add
dec
inc
add
add
outs
add
add
add
jle
imul
je
add
add
add
add
add
add
and
push
imul
outs
add
jo
pop
add
push
add
in
add
add
cmovs
ins
add
add
add
in
add
xor
and
dec
add
popa
add
add
pop
add
ins
add
jb
je
and
push
add
add
add
xor
add
js
add
cmp
outs
add
add
pop
add
push
add
add
in
add
add
add
add
add
add
add
imul
jns
and
sub
add
add
add
outs
add
jle
imul
add
add
jo
ins
add
imul
add
imul
ins
add
jb
je
and
push
add
add
add
xor
add
push
inc
add
arpl
add
add
add
jo
ins
add
imul
add
imul
ins
add
jb
je
and
push
add
add
add
xor
and
outs
add
imul
je
popa
add
add
popa
add
add
or
add
js
add
addr16
add
imul
outs
add
je
popa
add
add
imul
jo
ins
add
imul
add
add
add
ins
add
jb
je
and
push
add
add
add
xor
and
outs
add
jae
je
popa
add
add
add
push
add
cmp
and
add
push
add
data16
add
jb
add
add
popa
add
je
and
push
add
add
add
xor
add
push
add
jb
jbe
add
xor
add
and
add
data16
jne
ins
add
sub
imul
add
add
je
push
add
jb
jbe
imul
imul
jae
ins
add
add
push
add
ins
add
add
je
push
add
imul
je
add
add
add
add
ins
add
add
jle
add
jle
add
ins
add
outs
add
jbe
add
add
ins
add
sub
add
jb
je
je
add
jle
add
and
dec
add
inc
add
add
push
add
dec
add
add
dec
add
add
das
push
add
popa
add
je
push
add
add
add
add
jp
add
ins
add
jb
je
push
add
add
add
inc
add
imul
jns
cmp
add
add
add
imul
add
and
and
and
dec
add
jae
ins
add
cmp
add
add
popa
add
jns
imul
add
sub
add
inc
add
add
jbe
add
jne
pop
add
add
imul
jb
jne
cmp
add
add
add
popa
add
add
jbe
add
jne
cmp
add
add
add
add
add
add
add
add
popa
add
je
and
push
add
add
add
add
imul
loope
popa
add
outs
add
add
and
ins
add
jb
je
and
push
add
add
add
add
add
outs
add
adc
jle
imul
je
add
daa
dec
add
jp
popa
add
popa
add
popa
add
add
popa
add
add
add
ins
add
add
push
add
jb
jp
add
add
ins
add
add
je
popa
add
sbb
add
jp
add
add
ins
add
add
je
popa
add
adc
popa
add
jae
ja
outs
add
add
adc
ins
add
popa
add
jns
and
dec
add
adc
add
add
popa
add
add
adc
jae
add
and
dec
add
ins
add
add
inc
add
and
outs
add
je
and
jae
popa
add
add
add
popa
add
jae
ja
outs
add
add
pop
push
add
inc
add
inc
add
dec
add
inc
add
add
or
outs
add
add
cmp
jae
arpl
outs
add
add
imul
and
popa
add
popa
add
ins
add
bound
ins
add
and
jae
add
jbe
add
jae
and
sbb
imul
je
and
jbe
add
jae
imul
add
dec
add
ins
add
jb
and
data16
jb
ins
add
add
dec
add
add
jns
imul
adc
jns
je
imul
add
outs
add
imul
daa
dec
add
add
add
popa
add
imul
ja
popa
add
add
add
popa
add
inc
add
add
popa
add
je
and
push
add
add
add
add
ins
add
add
ja
popa
add
jns
add
ja
popa
add
add
add
add
add
ja
add
jns
and
jne
jae
inc
add
add
add
add
add
add
or
jb
ja
add
add
jb
jae
push
popa
add
add
ins
add
add
je
popa
add
or
jne
ins
add
push
add
push
add
in
add
popa
add
add
add
sub
add
popa
add
popa
add
in
je
popa
add
and
jae
imul
add
ins
add
add
add
ins
add
jp
repz
or
jns
add
add
sbb
add
add
jae
jp
outs
add
add
add
add
dec
add
and
ins
add
outs
add
add
and
popa
add
add
add
add
repz
adc
add
add
outs
add
add
pop
inc
add
add
add
add
jae
and
dec
add
or
jo
jb
in
imul
adc
outs
add
in
outs
add
add
add
daa
push
add
popa
add
popa
add
add
outs
add
add
add
add
add
outs
add
add
sbb
ins
add
add
je
jbe
add
jae
imul
add
bound
jb
jns
je
add
push
add
add
add
and
je
imul
addr16
add
add
imul
and
jae
add
jbe
jb
popa
add
and
adc
ins
add
add
outs
add
outs
add
add
add
jo
outs
add
add
imul
and
jae
add
add
pop
add
jo
outs
add
imul
imul
add
loope
add
jmp
add
add
add
jbe
add
jne
add
pop
pop
add
outs
add
je
jb
outs
add
add
je
add
add
add
and
push
jae
je
add
add
pop
add
jo
outs
add
add
imul
and
imul
add
outs
add
je
jne
add
sbb
bound
popa
add
jb
imul
popa
add
add
imul
pop
add
add
add
and
inc
add
ins
add
imul
add
outs
add
and
push
add
jb
jbe
add
add
dec
add
outs
add
add
add
jo
jne
popa
add
add
std
add
add
jo
ins
add
imul
add
add
add
add
jbe
add
add
dec
dec
add
add
add
in
add
add
imul
add
or
add
add
add
jo
ins
add
imul
add
add
outs
add
add
add
jbe
add
jne
add
outs
add
add
ins
add
and
add
jae
je
jne
jo
outs
add
jae
je
imul
add
jbe
add
jne
and
xor
add
outs
add
add
ins
add
and
add
jae
je
jne
jo
outs
add
jae
je
imul
add
jbe
add
jne
and
xor
add
jo
popa
add
add
add
outs
add
add
ins
add
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
xor
add
jo
popa
add
add
add
outs
add
add
ins
add
add
sub
outs
add
jo
jb
popa
add
popa
add
add
jbe
add
jne
add
ins
add
add
add
bound
je
outs
add
jo
jb
popa
add
popa
add
add
jbe
add
jne
add
arpl
bound
push
add
jb
jbe
add
jns
add
dec
add
add
add
add
push
add
imul
je
add
adc
add
inc
add
imul
jns
add
push
add
imul
je
add
adc
add
inc
add
imul
jns
add
ins
add
dec
add
jae
ins
add
add
je
bound
dec
add
jae
ins
add
add
arpl
push
add
jp
popa
add
popa
add
popa
add
add
popa
add
add
jae
ins
add
add
dec
add
jne
imul
add
add
add
add
add
ins
add
add
jo
popa
add
add
add
outs
add
add
ins
add
add
and
imul
jne
jb
add
outs
add
add
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
add
or
bound
push
add
add
arpl
push
add
push
add
jne
jp
imul
jns
arpl
push
add
push
add
jp
imul
dec
add
add
add
add
jne
jle
in
add
add
std
add
push
add
add
add
popa
add
je
popa
add
add
in
add
add
outs
add
imul
and
outs
add
add
add
ins
add
bound
add
add
jb
jp
add
ins
add
add
je
popa
add
(bad)
add
dec
add
jp
jns
imul
and
imul
jne
jb
add
outs
add
aaa
add
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
aaa
add
or
bound
inc
add
add
jb
bound
inc
add
add
jo
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
xor
add
jb
bound
push
add
add
jo
imul
jne
jb
add
outs
add
xor
add
popa
add
add
pop
jo
imul
jne
jb
add
outs
add
xor
add
arpl
je
jne
jb
add
outs
add
xor
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
xor
add
jb
bound
dec
add
add
jo
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
xor
add
jb
bound
push
add
sbb
popa
add
add
add
outs
add
add
ins
add
add
bound
je
outs
add
dec
add
sbb
popa
add
add
add
outs
add
add
ins
add
add
arpl
jb
outs
add
outs
add
je
and
push
add
outs
add
and
push
add
jb
imul
ins
add
bound
add
add
outs
add
add
ins
add
add
adc
push
add
add
arpl
outs
add
add
data16
ins
add
jb
imul
popa
add
add
imul
inc
add
xor
xor
xor
xor
add
push
add
outs
add
in
add
and
or
add
push
je
add
add
add
add
adc
in
outs
add
add
add
add
add
sbb
outs
add
in
add
and
or
add
push
je
add
or
in
outs
add
add
dec
push
add
outs
add
in
add
loope
and
outs
add
sbb
pop
add
jbe
loope
outs
add
add
add
pop
add
push
add
outs
add
popa
add
in
add
push
add
add
outs
add
inc
dec
add
outs
add
add
ins
add
add
popa
add
and
outs
add
ins
add
and
outs
add
push
add
add
add
outs
add
add
add
add
add
xor
jns
ins
add
and
jp
popa
add
add
outs
add
add
jo
popa
add
add
add
add
add
ins
add
add
sbb
add
add
add
add
outs
add
add
add
sub
jle
imul
je
add
add
add
js
imul
jne
push
add
add
das
inc
add
jbe
in
outs
add
add
add
and
push
add
add
and
imul
add
add
sub
jb
outs
add
in
add
loope
and
jo
pop
add
push
add
outs
add
loope
outs
add
add
sbb
add
add
jb
and
imul
add
add
xor
outs
add
in
add
loope
and
outs
add
or
add
add
in
add
add
add
ins
add
in
add
outs
add
aaa
dec
add
add
add
and
popa
add
jbe
in
outs
add
add
jne
jo
jo
add
data16
add
add
add
add
inc
push
add
outs
add
in
add
loope
and
imul
add
je
jb
outs
add
add
add
outs
add
std
add
push
add
jae
je
popa
add
add
add
outs
add
sub
imul
add
and
jne
jo
jo
add
je
add
imul
popa
add
add
add
add
and
imul
popa
add
add
add
js
imul
jne
push
add
add
and
add
add
test
add
je
popa
add
jae
and
dec
add
add
and
imul
add
popa
add
add
outs
add
popa
add
add
jns
outs
add
add
sbb
jo
jo
add
je
add
popa
add
add
jne
add
inc
add
ins
add
and
outs
add
ins
add
jp
add
popa
add
add
imul
add
popa
add
add
popa
add
add
sbb
and
jne
jo
jo
add
je
add
imul
add
ins
add
and
outs
add
ins
add
jp
add
popa
add
add
imul
add
popa
add
add
popa
add
add
add
xor
jge
add
daa
dec
add
and
jne
jo
jo
add
je
add
imul
cmp
and
jnp
xor
jge
add
ins
add
and
outs
add
ins
add
jp
add
jns
and
jnp
xor
jge
and
popa
add
je
jne
popa
add
add
popa
add
add
add
xor
imul
popa
add
add
add
xor
jge
and
jne
jo
jo
add
je
add
imul
add
cmp
ins
add
and
outs
add
ins
add
jp
add
outs
add
add
xor
jge
and
popa
add
je
jne
popa
add
add
popa
add
in
add
add
adc
jbe
loope
and
jbe
add
jp
add
sbb
add
jae
add
add
popa
add
je
add
add
add
pop
push
add
add
jae
add
add
popa
add
je
add
add
add
imul
add
add
add
outs
add
jb
and
jne
jae
add
and
outs
add
ins
add
and
popa
add
add
add
popa
add
jae
ja
outs
add
add
add
add
add
daa
dec
add
arpl
outs
add
jb
add
je
and
jo
popa
add
jae
ja
outs
add
add
add
sub
jae
add
and
add
add
and
outs
add
je
and
add
imul
jae
add
sub
add
imul
imul
jo
jb
outs
add
jb
add
jae
add
add
add
sub
popa
add
add
add
add
jae
add
and
je
popa
add
ins
add
jae
add
add
add
xor
add
jb
arpl
push
add
and
data16
jb
and
jne
jo
add
je
add
add
add
add
daa
dec
add
jbe
popa
add
add
add
outs
add
jo
popa
add
jns
and
dec
add
add
and
add
and
jne
jo
add
je
add
add
outs
add
outs
add
sub
add
and
jne
jo
add
je
add
add
outs
add
outs
add
add
add
xor
jge
add
jne
outs
add
add
xor
jge
and
jne
jo
add
je
add
add
and
jb
outs
add
jp
sbb
and
arpl
jp
add
popa
add
add
add
add
add
sbb
jb
outs
add
jp
sbb
and
arpl
jp
add
popa
add
add
dec
push
add
jp
add
imul
popa
add
add
jb
outs
add
add
and
jae
jo
jb
popa
add
add
popa
add
imul
add
outs
add
arpl
push
add
add
sub
outs
add
add
outs
add
add
inc
add
add
add
and
push
add
outs
add
add
xor
jl
jns
je
imul
add
outs
add
imul
add
imul
imul
outs
add
add
sbb
add
and
add
popa
add
add
add
outs
add
popa
add
imul
add
add
xor
ja
popa
add
add
jp
jns
je
popa
add
imul
add
imul
outs
add
imul
add
add
add
add
cmp
add
popa
add
add
jp
jne
imul
add
imul
popa
add
je
jne
popa
add
add
popa
add
push
imul
add
pop
inc
add
popa
add
and
data16
jb
ins
add
add
cmp
outs
add
ins
add
jp
imul
outs
add
add
outs
add
add
add
imul
add
popa
add
add
popa
add
push
add
sub
ja
popa
add
add
imul
add
popa
add
add
popa
add
push
popa
add
add
add
xor
jge
add
pop
add
popa
add
add
imul
outs
add
add
xor
jge
and
popa
add
je
jne
popa
add
add
popa
add
push
imul
pop
add
popa
add
add
imul
imul
jnp
xor
jge
and
popa
add
je
jne
popa
add
add
popa
add
push
imul
dec
add
ja
popa
add
add
add
jae
push
popa
add
or
add
add
jb
ins
add
adc
popa
add
outs
add
add
ins
add
and
imul
outs
add
add
je
jb
imul
je
outs
add
popa
add
sbb
imul
jb
imul
popa
add
add
imul
inc
add
imul
outs
add
imul
jb
imul
popa
add
add
imul
inc
add
jp
imul
je
add
add
and
imul
jne
jo
dec
add
outs
add
jb
outs
add
je
add
imul
inc
add
dec
add
add
outs
add
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
pop
add
add
popa
add
inc
dec
add
jae
je
popa
add
add
add
pop
add
ins
add
jb
je
pop
add
add
pop
add
xor
pop
add
add
jp
add
xor
xor
add
add
mov
xchg
cmps
aas
push
adc
add
or
xor
mov
adc
and
add
add
add
imul
inc
add
push
add
data16
add
jb
add
add
add
add
add
add
add
add
add
inc
push
add
adc
add
add
adc
inc
add
add
add
add
add
add
add
add
push
add
push
adc
push
adc
push
or
add
add
add
add
add
add
push
pop
and
adc
dec
push
add
sbb
push
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
push
or
add
add
pop
add
pop
add
sbb
add
add
or
add
or
add
add
add
push
pop
add
or
or
add
add
sbb
sbb
or
or
sbb
or
or
or
or
push
sbb
adc
and
adc
sbb
or
add
adc
xor
or
aad
cmp
add
sbb
or
adc
add
sbb
or
or
or
or
or
or
push
or
push
or
push
or
adc
cmp
add
or
add
add
or
or
or
add
add
push
or
add
push
adc
adc
inc
add
add
sbb
or
add
sbb
sbb
add
or
adc
cmp
add
add
add
add
or
push
or
add
sbb
adc
or
push
or
or
or
sbb
push
adc
add
adc
push
sbb
and
or
or
pop
push
and
add
or
add
add
add
adc
push
adc
push
add
and
or
or
add
popa
add
add
popa
add
add
add
adc
add
add
adc
add
add
add
add
add
add
adc
push
adc
add
pop
push
adc
ins
add
add
push
push
and
add
imul
add
add
add
or
push
push
add
ins
add
add
ins
or
add
call
ins
push
and
add
jno
and
add
jne
and
add
jns
and
add
ins
add
adc
push
adc
add
add
adc
adc
add
adc
sbb
adc
add
and
inc
add
add
add
adc
add
adc
add
and
add
push
adc
adc
or
add
adc
adc
inc
add
add
or
and
add
and
add
adc
add
push
add
add
or
and
add
adc
and
add
push
add
adc
and
add
adc
xor
add
adc
adc
add
sub
push
add
adc
add
add
adc
adc
push
sbb
cmp
adc
add
push
add
add
push
add
adc
adc
push
adc
add
lds
and
add
add
and
adc
or
and
add
or
add
inc
add
inc
or
add
add
and
add
add
adc
add
or
sub
adc
adc
or
add
inc
or
add
add
and
adc
or
add
adc
add
adc
adc
pop
and
add
push
adc
add
adc
add
push
or
and
add
or
or
push
add
inc
push
or
push
adc
add
push
adc
add
adc
adc
and
or
adc
pop
and
push
adc
or
add
adc
adc
or
inc
push
or
push
adc
add
adc
sbb
add
adc
adc
add
sbb
add
sbb
adc
adc
sbb
sub
add
lods
add
add
push
and
add
and
add
adc
push
and
add
and
adc
cmp
add
add
add
push
push
and
adc
add
pop
add
inc
adc
or
add
inc
push
adc
adc
inc
adc
add
add
push
pop
add
inc
add
add
sbb
pop
add
inc
add
add
push
adc
push
sbb
sbb
adc
dec
add
push
or
add
sub
and
add
xor
jns
and
add
add
adc
sbb
push
sbb
adc
and
and
sbb
add
sbb
xor
lea
adc
sbb
add
add
sbb
mov
sub
add
add
sbb
pop
push
or
sbb
inc
push
add
pop
add
add
or
pop
add
add
add
and
adc
add
sbb
and
sbb
add
sbb
sbb
and
add
cmp
push
sbb
add
adc
adc
push
add
or
add
or
dec
adc
pop
add
dec
push
add
int
pop
pop
adc
or
pop
add
add
add
push
push
add
aad
adc
adc
add
add
jmp
adc
and
add
or
push
and
add
sub
xor
sbb
add
add
sbb
and
adc
add
adc
adc
or
adc
or
or
adc
add
pop
add
add
add
or
or
add
add
adc
add
adc
ins
or
add
adc
adc
add
add
sbb
and
sbb
and
sbb
add
sbb
add
push
or
add
ins
adc
push
pop
add
inc
adc
and
sbb
sbb
pop
or
inc
or
ins
or
ins
adc
sbb
pop
add
ins
add
add
ins
add
or
and
add
adc
push
pop
add
ins
or
or
add
adc
pop
adc
adc
add
add
ins
add
adc
add
sbb
cdq
push
pop
and
push
or
sbb
and
add
push
add
push
pop
pop
add
adc
adc
add
sub
and
adc
or
add
sub
add
xor
pop
add
adc
pop
add
adc
and
adc
add
add
and
add
add
add
adc
add
add
add
adc
and
add
or
add
sbb
push
and
add
or
add
adc
add
push
sbb
add
and
add
adc
add
adc
add
push
and
add
sbb
add
sbb
and
add
sbb
popa
add
imul
adc
add
xor
add
cmp
add
adc
adc
add
and
add
add
add
or
and
add
or
adc
adc
sbb
and
adc
sbb
and
push
push
push
or
cdq
sbb
sbb
add
and
or
xchg
adc
add
xor
mov
adc
inc
add
mov
add
adc
add
adc
pop
add
adc
add
rol
add
adc
adc
add
or
add
adc
pop
add
inc
adc
add
pop
add
sbb
add
inc
add
rol
aad
pop
push
push
push
push
adc
inc
adc
adc
inc
or
add
ins
push
push
push
adc
adc
pop
add
adc
ins
add
adc
push
adc
add
ins
add
ins
adc
adc
add
add
adc
or
add
or
push
add
add
ins
sbb
or
adc
adc
ins
add
ins
add
adc
pop
or
ins
add
ins
adc
adc
sbb
or
inc
adc
add
ins
add
ins
adc
add
adc
add
add
adc
adc
add
sbb
or
push
adc
or
sbb
or
sbb
adc
adc
adc
adc
add
add
add
push
push
push
push
adc
pop
adc
adc
push
add
adc
or
add
sbb
add
or
pop
push
push
adc
push
add
add
sbb
adc
or
or
push
sbb
stc
push
push
add
adc
inc
adc
inc
or
inc
adc
push
adc
add
push
add
add
adc
pop
or
or
push
push
adc
sbb
adc
add
sbb
pop
add
add
push
add
add
ror
pop
add
rol
adc
add
sbb
or
pop
adc
sub
and
add
add
pop
or
sbb
push
adc
mov
adc
pop
add
or
push
add
add
push
and
adc
adc
add
and
add
add
adc
and
adc
adc
add
sub
and
add
sbb
and
add
and
and
adc
add
xor
and
add
and
adc
add
push
or
cmp
pop
and
add
and
add
add
add
adc
add
push
or
and
add
adc
add
sbb
add
adc
add
sbb
add
adc
add
and
add
adc
add
sub
add
or
adc
cmp
add
adc
add
add
add
add
add
add
sbb
pop
pop
push
sbb
push
or
add
add
add
adc
pusha
or
add
sbb
adc
sbb
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
pop
xor
xor
xor
xor
add
add
add
dec
popa
ins
gs
push
gs
popa
arpl
push
or
ins
gs
popa
arpl
push
das
das
jae
push
cs
je
arpl
je
popa
arpl
jb
das
xor
xor
xor
das
inc
inc
add
lds
pop
add
or
adc
or
add
sbb
pop
add
inc
add
inc
add
sbb
pop
add
add
adc
add
add
adc
adc
add
add
push
add
add
add
int
pop
add
or
or
or
pop
and
add
and
int
add
add
add
adc
jae
gs
cs
gs
imul
ins
pop
xor
xor
xor
xor
add
add
add
push
push
adc
outs
imul
je
outs
outs
dec
popa
ins
and
imul
popa
outs
imul
push
jbe
outs
imul
sub
push
push
inc
arpl
outs
inc
push
das
das
je
ins
jo
jb
outs
jb
das
dec
push
jb
push
jbe
outs
imul
das
dec
popa
arpl
imul
jns
jne
fs
jp
jbe
je
ins
gs
push
or
jo
jns
arpl
outs
dec
push
das
das
je
ins
jo
jb
outs
jb
das
dec
push
jb
push
jbe
outs
imul
das
dec
popa
arpl
imul
jns
jne
fs
jp
jbe
je
ins
gs
gs
outs
outs
jae
and
push
push
inc
arpl
outs
inc
push
das
das
je
ins
jo
jb
outs
jb
das
dec
push
jb
push
jbe
outs
imul
das
dec
popa
arpl
imul
jns
popa
jp
jbe
gs
gs
push
push
or
jo
jns
arpl
outs
dec
push
das
das
je
ins
jo
jb
outs
jb
das
dec
push
jb
push
jbe
outs
imul
das
dec
popa
arpl
imul
jns
popa
jp
jbe
gs
gs
push
gs
outs
outs
jae
sub
push
push
inc
arpl
outs
inc
push
das
das
je
ins
jo
jb
outs
jb
das
dec
push
jb
push
jbe
outs
imul
das
dec
popa
arpl
imul
jns
popa
jp
jbe
gs
gs
xor
push
gs
jns
arpl
outs
dec
push
das
das
je
ins
jo
jb
outs
jb
das
dec
push
jb
push
jbe
outs
imul
das
dec
popa
arpl
imul
jns
popa
jp
jbe
gs
gs
xor
jae
outs
outs
jae
add
add
add
inc
arpl
outs
dec
push
das
das
je
ins
jo
jb
outs
jb
das
dec
push
jb
push
jbe
outs
imul
das
dec
popa
arpl
imul
jns
jbe
jb
outs
imul
jae
jbe
arpl
push
jne
push
or
jo
jns
arpl
outs
push
push
das
das
je
ins
jo
jb
outs
jb
das
dec
push
jb
push
jbe
outs
imul
das
dec
popa
arpl
imul
jns
jbe
jb
outs
imul
jae
jbe
arpl
push
jne
gs
outs
outs
jae
push
and
add
cmp
add
add
imul
add
push
push
or
popa
jo
gs
popa
ins
gs
popa
arpl
imul
jns
jne
fs
jp
jbe
je
ins
gs
outs
jp
fs
jbe
imul
jb
jo
gs
popa
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
add
dec
jae
jb
jo
gs
add
add
push
push
or
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
or
jb
add
add
add
add
push
push
or
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
or
jb
add
add
add
add
push
push
or
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
or
jb
add
add
add
add
push
jb
jo
gs
popa
ins
and
arpl
imul
jns
jne
fs
jp
jbe
je
ins
gs
fs
jbe
fs
push
adc
popa
jo
gs
popa
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
add
dec
jae
jb
jo
gs
add
add
push
jb
jo
gs
popa
ins
and
arpl
imul
jns
popa
jp
jbe
gs
gs
push
outs
jp
fs
jbe
imul
jb
jo
gs
popa
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
add
dec
jae
jb
jo
gs
add
add
push
jb
jo
gs
popa
ins
and
arpl
imul
jns
popa
jp
jbe
gs
gs
dec
fs
jbe
fs
push
adc
popa
jo
gs
popa
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
add
dec
jae
jb
jo
gs
add
add
push
jb
jo
gs
popa
ins
and
arpl
imul
jns
popa
jp
jbe
gs
gs
xor
jo
jbe
fs
push
adc
popa
jo
gs
popa
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
add
dec
jae
jb
jo
gs
add
add
push
jb
jo
gs
popa
ins
xor
arpl
imul
jns
jbe
jb
outs
imul
jae
jbe
arpl
push
jne
outs
jp
fs
jbe
imul
jb
jo
gs
popa
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
add
dec
jae
jb
jo
gs
add
add
push
push
or
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
or
jb
add
add
add
add
push
push
or
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
or
jb
add
add
add
add
push
push
or
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
or
jb
add
add
add
add
push
jb
jo
gs
popa
ins
gs
dec
popa
arpl
imul
jns
jbe
jb
outs
imul
jae
jbe
arpl
push
jne
fs
jbe
fs
push
adc
popa
jo
gs
popa
ins
gs
popa
arpl
push
das
das
je
ins
jo
jb
outs
jb
das
push
add
dec
jae
jb
jo
gs
mov
pop
add
add
add
adc
mov
adc
adc
adc
add
sbb
adc
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
and
add
adc
adc
add
fld
and
sbb
adc
add
add
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
lods
or
add
or
or
add
sbb
dec
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
add
inc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
add
adc
ins
popa
jb
and
and
imul
imul
adc
jo
jb
addr16
and
xor
xor
add
add
and
xor
cmp
cmp
sub
sub
sub
xor
add
or
add
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
mov
push
pop
add
add
add
add
sbb
add
mov
ficomp
add
inc
push
mov
sub
inc
mov
xor
add
add
arpl
pop
push
jb
addr16
ins
and
ins
gs
inc
pop
and
pop
inc
pop
and
and
imul
gs
pop
fs
push
imul
ins
imul
popa
jb
and
and
imul
imul
bound
pop
push
ins
popa
jb
and
and
imul
imul
add
sbb
push
(bad)
sbb
add
add
adc
sbb
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
