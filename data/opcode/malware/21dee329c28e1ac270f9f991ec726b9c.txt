push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
push
mov
push
push
push
sub
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
lea
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
lea
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
mov
mov
add
add
repnz
add
add
ss
cmc
scas
sub
es
out
add
add
mov
ss
push
movs
cmc
mov
cld
test
add
mov
sub
jecxz
and
mov
sub
and
xor
add
add
add
add
add
or
adc
icebp
jns
jo
or
sub
xlat
or
add
xchg
mov
loopne
aad
mov
stos
xchg
add
or
mov
add
into
add
add
sbb
popf
mov
sbb
jns
shld
mov
and
add
and
imul
sub
lds
add
add
xor
add
lods
out
push
mov
mov
lock
psadbw
hlt
add
jmp
xor
push
push
test
mov
cmp
je
jmp
mov
sub
mov
scas
jae
add
(bad)
in
lods
add
add
inc
add
add
pop
cmp
add
add
jb
data16
jmp
mov
and
add
mov
mov
add
jg
jmp
ins
inc
sub
icebp
jns
orps
je
add
sub
push
leave
or
sub
xor
mov
test
ins
mov
shl
add
(bad)
jmp
mov
sub
add
fdiv
sub
shr
add
sub
test
test
in
add
add
mov
(bad)
rol
add
daa
add
(bad)
mov
and
out
inc
movs
aas
pop
dec
inc
mov
(bad)
xchg
push
add
retf
cmps
or
mul
xor
mov
sub
test
jg
jmp
inc
in
and
mov
sub
enter
sub
mov
and
pop
imul
add
add
sub
mov
(bad)
add
jmp
inc
in
test
add
sub
and
out
inc
add
xchg
jmp
mov
(bad)
arpl
add
nop
add
add
repnz
jecxz
and
and
add
lods
jmp
jns
sub
add
mov
mov
cs
lods
mov
(bad)
bound
xor
xchg
add
push
add
add
sub
inc
add
out
into
cli
idiv
jmp
mov
and
sub
add
mov
inc
add
mov
inc
jbe
xor
jp
pop
push
iret
imul
in
sub
inc
mov
test
hlt
add
add
add
add
sub
mov
ds
push
add
add
iret
add
loopne
outs
sub
and
lods
add
jmp
add
icebp
jns
jg
fwait
mov
mov
mov
mov
inc
mov
in
add
mov
add
add
adc
add
movs
jmp
add
add
jge
and
add
xor
mov
adc
jg
jmp
mov
sub
mov
and
add
dec
(bad)
stos
add
jns
add
add
fld
xchg
or
test
mov
test
add
add
add
sub
mov
fild
add
mov
jecxz
add
inc
add
mov
mov
test
add
mul
add
into
jmp
sbb
and
mov
into
sub
loopne
and
add
add
and
mov
add
add
fist
dec
mov
dec
add
(bad)
mov
ins
add
mov
adc
push
cld
dec
test
lock
sti
xor
div
xor
and
xor
mov
mov
imul
ret
inc
add
fldcw
add
sub
mov
add
(bad)
jecxz
add
xor
test
inc
mov
mov
mov
pop
add
add
and
cmc
add
test
add
add
into
add
dec
mov
add
cmc
mov
data16
das
les
mov
repnz
and
add
mov
int
jb
sahf
mov
sub
ret
repz
ins
add
test
outs
push
pop
or
dec
lds
jg
sbb
test
add
sub
cmp
dec
movsx
lea
repz
loop
and
add
lods
sub
dec
test
add
idiv
push
mov
add
mov
jg
dec
add
add
out
ret
sub
add
cdq
sub
add
jnp
add
add
jge
and
add
add
mov
movsx
add
js
and
add
sub
dec
lds
mov
jns
(bad)
gs
add
add
xor
mov
add
cmc
and
test
mov
into
data16
mov
(bad)
lods
jmp
mov
sub
lock
and
mov
imul
jmp
mov
scas
add
movs
add
ret
inc
mov
add
add
mov
fdecstp
aam
ror
push
aas
jbe
dec
add
add
xchg
(bad)
mov
cmps
sub
mov
les
cld
or
sbb
sub
mov
xchg
adc
jp
mov
mov
add
add
and
add
(bad)
aam
and
adc
ret
inc
xchg
or
sub
mov
inc
dec
fs
test
add
test
cmp
xchg
jmp
mov
sub
mov
mov
out
cmova
icebp
jns
sub
hlt
mov
and
add
neg
leave
xor
cld
add
xchg
je
jmp
mov
test
retf
daa
stos
retf
and
add
sub
test
sub
jmp
jge
and
add
lahf
retf
mov
add
leave
add
or
add
mov
sub
mov
je
sbb
add
add
add
sub
mov
retf
add
xor
push
into
add
fbstp
xchg
add
and
ins
add
sub
mov
mov
pop
add
inc
jne
add
mov
mov
sub
jecxz
test
cwde
add
add
test
mov
and
mov
test
dec
xor
mov
mov
scas
xchg
repz
imul
add
retf
mov
les
and
add
and
jb
or
sub
mov
out
inc
in
test
add
punpckldq
retf
pusha
or
add
mov
sub
mov
mov
xor
add
push
iret
add
mov
mov
mov
mov
jmp
mov
mov
(bad)
into
fwait
add
xor
sub
into
inc
test
iret
add
add
push
xchg
jl
or
sbb
mov
sub
mov
lgs
ins
add
ja
mov
rcr
and
je
jmp
jp
push
push
mov
xor
or
test
dec
add
jp
pop
ins
add
repz
mov
enter
jmp
mov
pop
sub
neg
push
xchg
dec
mov
inc
jmp
add
lea
add
add
into
inc
gs
mov
punpckldq
inc
mov
jmp
mov
sub
mov
pusha
stc
test
add
jmp
cmp
add
mov
jno
sbb
inc
and
add
lods
sub
mov
(bad)
std
adc
mov
add
loope
xchg
mov
into
dec
sbb
cmp
and
arpl
mov
imul
add
test
arpl
add
mov
out
imul
add
jmp
mov
mov
mov
and
je
jmp
mov
retf
mov
add
or
jns
sbb
mov
push
add
or
xlat
add
iret
add
mov
test
int
and
mov
mov
sub
pop
repz
mov
xor
push
mov
or
push
mov
add
mov
add
es
arpl
mov
jge
bndldx
jb
ins
mov
shl
add
xchg
(bad)
xlat
pusha
add
cld
dec
pop
add
add
add
arpl
mov
mov
scas
adc
xchg
push
mov
add
popa
mov
and
je
jmp
mov
and
iret
add
cmp
or
movaps
ret
add
push
inc
add
sub
add
mov
stc
test
lock
jmp
mov
and
add
inc
(bad)
jp
dec
or
mul
ret
add
pop
mov
add
scas
and
mov
loope
(bad)
jecxz
xchg
sbb
test
add
xchg
add
mov
xchg
add
retf
cmp
pop
add
jo
add
add
and
shld
imul
mov
add
mov
movs
call
sbb
scas
push
(bad)
and
pop
dec
mov
dec
sub
mov
xor
mov
icebp
mov
and
add
hlt
ss
and
dec
push
add
jno
cmc
scas
mov
xchg
jecxz
xchg
or
add
mov
scas
push
iret
add
jmp
push
out
mov
add
sbb
pop
jmp
(bad)
scas
rol
sub
test
add
test
sub
add
push
hlt
scas
cmc
jno
ins
idiv
cmp
arpl
cmp
mov
add
and
movs
add
pop
nop
or
add
lea
xchg
and
div
mov
pop
mov
mov
push
mov
mov
sub
add
sub
mov
repz
pop
mov
int3
test
mov
mov
jns
mov
mov
add
jg
xchg
pop
mov
mov
add
shl
add
jmp
dec
add
mov
mov
lea
add
mov
repz
and
jl
ret
mov
ret
xchg
test
hlt
hlt
hlt
scas
(bad)
icebp
inc
pop
mov
mov
mov
sub
and
sub
dec
mov
add
add
repz
mov
(bad)
mov
and
jns
jg
fwait
test
add
mov
and
lods
add
push
ret
add
inc
xor
or
add
mov
jecxz
outs
mov
dec
mov
mov
call
add
jns
mov
lea
mov
mov
call
mov
add
cmp
paddb
inc
rcl
mov
add
mov
jmp
imul
pop
mov
lea
mov
add
pop
mov
ret
cmc
scas
dec
pop
pop
(bad)
jno
adc
mov
stc
es
and
mov
into
movs
cwde
xor
xchg
(bad)
or
add
rcr
pop
jmp
lea
lea
mov
dec
dec
mov
push
cmps
dec
xchg
pusha
xor
test
fst
hlt
add
mov
pop
push
repz
test
sbb
pop
fcom
mov
pop
mov
lea
mov
and
dec
and
call
shr
das
and
pop
dec
mov
adc
mov
jbe
retf
shl
repz
lods
and
dec
xor
jmp
loope
dec
pop
mov
lea
jp
and
and
daa
cmc
scas
pop
sti
cld
jmp
lahf
retf
add
hlt
mov
retf
and
add
add
lods
add
add
test
rcl
jmp
lea
mov
in
xlat
inc
dec
and
call
mov
jge
mov
ret
add
mov
mov
add
add
test
add
neg
jbe
jb
jo
add
rol
or
sbb
mul
jo
cmc
scas
shr
pop
push
mov
cmp
dec
dec
retf
and
lock
sbb
in
cmps
shl
sbb
add
dec
mov
scas
lea
sbb
mov
call
aad
sbb
mov
push
add
mov
outs
dec
movs
add
add
jge
add
(bad)
std
and
add
hlt
das
mov
cmc
imul
add
lea
mov
xor
scas
sub
inc
sbb
lods
div
imul
retf
and
lods
add
jmp
xchg
add
sbb
sahf
add
add
cs
pop
mov
lea
mov
sar
xchg
add
xchg
cmc
scas
mov
test
shr
dec
cmps
mov
xlat
push
imul
movs
add
inc
das
xchg
sbb
test
add
lea
jge
and
addr16
add
pop
sbb
scas
dec
scas
jle
add
sub
(bad)
retf
dec
movs
add
mov
and
into
add
lods
add
fistp
pop
test
add
jns
das
push
pop
mov
lea
jge
fwait
mov
add
adc
cmc
scas
mov
dec
mov
sub
add
retf
adc
jmp
stos
test
mov
add
shl
jmp
and
imul
add
mov
sbb
scas
mov
dec
inc
push
add
(bad)
jp
mov
fidiv
xchg
pop
or
sbb
pop
and
add
inc
mov
sub
and
inc
(bad)
add
add
jg
and
xor
scas
(bad)
xor
rol
add
add
add
dec
and
add
add
cmp
xor
mov
mov
xor
shr
and
movs
mov
por
add
or
mov
ds
fld
scas
and
add
stc
das
jno
test
movs
dec
add
jmp
mov
mov
in
std
push
imul
mov
add
add
xlat
movs
add
add
popf
sub
out
ret
stc
push
(bad)
(bad)
fimul
dec
and
jne
aad
mov
mov
inc
ror
add
mov
aad
mov
mov
scas
mov
add
xchg
dec
test
enter
push
or
imul
push
add
mov
jae
cmp
hlt
mov
aaa
jg
dec
adc
into
add
cs
add
test
imul
mov
into
add
imul
lods
add
test
mov
dec
push
lea
std
add
test
stos
cmp
jmp
xor
add
test
pop
imul
mov
repz
add
(bad)
in
and
add
lods
pop
adc
jle
inc
mov
add
inc
and
js
popf
adc
add
ins
rol
movs
add
xchg
jmp
xor
ret
push
sar
imul
es
ret
ret
add
mov
icebp
add
(bad)
ror
mov
add
mov
dec
add
add
imul
add
mov
cli
mov
and
or
add
outs
ret
adc
sbb
mov
mov
or
ds
rcr
and
add
add
add
add
add
add
jmp
and
or
add
sub
icebp
jns
in
jo
pop
and
dec
adc
daa
sub
(bad)
pop
stos
rol
add
xchg
je
(bad)
dec
and
add
add
sldt
(bad)
mov
imul
ret
jmp
nop
push
mov
push
push
push
sub
call
mov
mov
mov
mov
sub
mov
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
call
mov
jmp
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
xor
mov
mov
call
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovge
mov
jmp
mov
mov
cmp
cmovle
mov
jmp
mov
sub
add
add
add
sub
sub
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
mov
add
mov
das
sub
and
add
push
add
add
test
add
add
add
jno
test
fsubr
rol
mov
add
add
add
add
test
jo
add
add
jb
(bad)
xchg
and
add
add
and
mov
scas
std
lock
add
test
add
sub
rol
mov
test
cmp
les
mov
mov
imul
mov
cmp
mov
adc
dec
add
jb
mov
add
xor
xor
imul
mov
ror
add
je
or
clc
push
adc
icebp
jae
cmp
add
mov
mov
test
inc
scas
add
add
add
jno
hlt
add
jno
repz
cmp
add
sar
cmp
mov
add
jb
call
lea
mov
cmp
sbb
test
add
mov
lods
jp
cmp
(bad)
sub
scas
std
mov
mov
fadd
sub
(bad)
sbb
mov
sub
movs
adc
add
imul
cld
add
mov
jo
int3
orps
add
sub
rcr
and
add
pop
xchg
and
mov
add
test
add
std
jnp
and
add
int3
hlt
nop
sti
dec
pop
xor
mov
add
jg
jmp
mov
pop
cs
mov
test
xchg
cld
add
jmp
mov
dec
sub
push
jnp
leave
and
and
mov
sahf
mov
add
add
ins
mov
push
jno
repnz
jno
movs
inc
and
add
add
mov
add
add
test
adc
add
mov
repnz
sti
push
jno
pop
add
sub
sbb
dec
cmp
outs
sti
xchg
aaa
popa
cmp
scas
std
add
lock
jno
mov
sub
pop
leave
push
les
adc
scas
adc
add
jb
add
mov
test
jmp
mov
and
push
jno
(bad)
(bad)
and
add
jmp
mov
pushf
inc
dec
and
cdq
pop
sub
ficomp
add
and
add
call
push
cli
test
dec
add
sub
jg
mov
inc
mov
add
pushf
and
mov
int3
xchg
add
add
jns
and
jo
add
test
popf
and
add
add
add
mov
test
add
add
(bad)
int3
add
add
mov
test
xchg
add
add
(bad)
call
iret
adc
add
and
adc
add
mov
pop
add
add
push
test
or
dec
jmp
cmp
adc
jg
pop
mov
test
icebp
push
jno
inc
mov
and
add
rcl
retf
add
add
aas
test
add
adc
mov
(bad)
and
call
add
fcomip
call
xchg
adc
and
xchg
and
add
lods
add
add
push
add
iret
sub
test
inc
rcr
and
cmp
test
jmp
mov
and
add
minps
or
sub
pop
mov
push
and
adc
pushf
test
mov
add
scas
jmp
cli
dec
std
mov
hlt
sub
mov
adc
add
loopne
cmp
jmp
mov
cmps
xor
jns
fs
fldenv
(bad)
and
add
jbe
ror
mov
pop
inc
loope
add
cmp
mov
add
dec
add
xchg
cld
lock
pop
push
test
sub
lahf
add
dec
jmp
test
adc
in
or
test
cvtpi2ps
pop
jo
add
sub
in
imul
dec
xsha256
cmps
push
jg
add
adc
adc
sahf
test
xchg
mov
add
daa
jns
dec
add
(bad)
test
or
ror
aas
test
jae
add
mov
and
add
loopne
add
mov
add
call
add
lods
mov
inc
xchg
add
std
mov
pop
movs
imul
mov
cmp
add
cmove
or
lahf
jmp
(bad)
cmps
nop
xchg
jae
add
mov
test
pop
add
lock
add
cmp
fimul
je
jmp
mov
pop
mov
cmp
mov
add
add
add
push
jno
add
or
mov
or
add
mov
mov
scas
std
lock
fstp
int3
mov
mov
mov
and
rol
add
adc
ror
add
adc
mov
das
sub
sub
add
(bad)
dec
add
add
iret
add
daa
mov
or
aas
out
rcl
add
and
(bad)
in
loopne
add
add
inc
and
lock
dec
std
rol
add
ja
push
jl
add
add
dec
mov
mov
mov
adc
and
rol
add
add
mov
je
and
push
add
jmp
fldcw
lahf
mov
sbb
mov
cmp
xchg
test
and
xor
or
mov
mov
inc
and
add
aam
push
add
call
mov
mov
mov
mov
mov
and
inc
mov
sub
and
add
test
scas
std
call
lea
xor
shr
mov
and
ins
jg
cmp
ins
cmp
mov
xor
int3
sahf
and
mov
adc
adc
add
inc
retf
xor
dec
add
imul
stos
dec
mov
rcr
adc
add
or
add
jb
lahf
xor
pop
int3
(bad)
cld
add
mov
mov
(bad)
xor
sub
pop
cld
and
dec
add
add
adc
cmp
mov
jmp
cmp
lss
cmp
fs
add
add
and
pop
inc
and
add
mov
or
add
and
add
call
test
adc
adc
cmp
add
and
mov
mov
mov
int3
add
push
rol
les
stc
bound
jl
mov
mov
mov
sahf
xchg
and
cmp
daa
mov
and
add
push
add
xor
add
mov
call
es
sar
mov
cmp
out
fist
add
and
(bad)
lods
and
add
add
mov
clc
mov
add
cld
or
lahf
add
cmp
pop
mov
cmp
fldenv
add
mov
adc
call
or
lods
and
std
lock
mov
push
fmul
fld
call
xchg
add
add
cmp
adc
test
and
inc
xor
or
inc
and
add
mov
daa
jno
add
add
jne
add
add
popa
pop
mov
cmp
sub
and
and
push
push
add
in
or
add
add
inc
int3
or
std
lock
clc
inc
and
sub
lahf
call
mov
add
sub
nop
int3
jae
adc
and
jo
scas
loopne
add
or
push
add
mov
int3
fldcw
sub
add
lahf
add
iret
mov
mov
cmp
mov
int3
add
add
and
(bad)
jle
or
iret
and
call
jno
cmp
push
add
ror
jl
enter
int3
mov
mov
mov
push
adc
pop
inc
and
mov
jae
push
or
add
adc
mov
jl
mov
mov
mov
jbe
and
push
jno
inc
adc
movs
test
inc
and
add
add
add
call
jl
mov
div
mov
mov
cmp
pop
std
int3
add
push
adc
mov
mov
in
and
jb
add
mov
dec
movs
or
mov
add
mov
mov
arpl
and
cld
add
mov
mov
(bad)
xor
fldcw
fistp
cmp
jb
stc
std
or
add
add
mov
mov
mov
cmp
xchg
xchg
int3
mov
and
jmp
jno
add
or
rol
mov
mov
or
add
mov
mov
mov
mov
cmp
sbb
sub
stc
aaa
adc
add
add
push
inc
or
lahf
add
add
pop
imul
mov
mov
mov
mov
cmp
xor
and
add
inc
and
or
lahf
add
test
add
sti
mov
call
xor
mov
mov
cmp
fs
add
fsub
popf
or
pop
cld
test
add
add
add
cmp
cmp
mov
add
or
mov
mov
cmp
push
jno
fsub
push
in
add
add
mov
mov
push
movs
mov
add
ror
jl
test
add
adc
cmp
push
test
add
mov
enter
or
add
add
and
mov
rol
add
mov
sub
jl
mov
mov
mov
mov
mov
inc
mov
mov
pop
jno
add
mov
movs
mov
add
jl
hlt
and
mov
mov
mov
mov
cmp
xchg
and
add
mov
adc
mov
imul
mov
push
mov
pop
add
jl
hlt
and
add
mov
mov
cmp
xchg
add
mov
adc
add
das
jmp
(bad)
adc
mov
add
or
cmp
add
mov
mov
cmp
xchg
and
jae
adc
push
add
in
or
add
add
iret
and
call
jl
nop
add
add
jno
int3
add
mov
mov
cmp
xchg
and
add
mov
mov
mov
mov
call
mov
push
pop
mov
mov
cmp
xchg
push
add
add
movs
aam
mov
(bad)
xchg
imul
(bad)
push
xor
add
mov
add
call
in
add
add
mov
rcr
dec
and
rcr
inc
and
adc
and
add
inc
nop
jle
add
adc
add
call
mov
mov
mov
mov
mov
clc
mov
add
and
add
and
add
std
ror
add
add
mov
mov
and
add
add
and
(bad)
mov
add
inc
std
and
rol
push
hlt
idiv
or
add
add
adc
stc
test
int3
add
add
add
inc
and
add
mov
(bad)
lods
mov
add
push
add
dec
and
xor
jl
pop
mov
mov
(bad)
sahf
out
mov
cmp
rcl
add
aas
aaa
fstp
aam
test
enter
ss
add
scas
add
call
retf
call
jmp
pop
cmp
or
add
push
and
adc
adc
pop
add
xor
cmps
mov
cmp
pop
and
add
clc
cmp
pop
fistp
(bad)
data16
jb
adc
dec
(bad)
push
jl
xor
scas
add
mov
mov
jnp
push
enter
dec
adc
mov
and
mov
jae
and
adc
and
call
mov
mov
mov
mov
cmp
jno
int
mov
(bad)
fistp
in
and
adc
adc
ins
call
mov
mov
mov
mov
scas
std
add
call
or
add
mov
mov
call
imul
add
pop
jg
cmp
mov
cmp
xchg
and
adc
add
or
push
add
inc
and
add
add
movs
mov
call
mov
mov
mov
pop
xchg
imul
xor
and
std
repz
add
add
add
and
cdq
les
jl
outs
addr16
mov
pop
sahf
jno
cmp
sar
in
(bad)
hlt
push
loope
add
cwde
test
add
adc
mov
mov
pminsw
mov
jo
int3
jmp
jmp
and
mov
(bad)
inc
xor
adc
add
mov
add
mov
add
mov
je
jo
dec
push
enter
or
add
pop
inc
pushf
or
dec
add
stos
lock
stc
dec
(bad)
cmp
lahf
mov
mov
(bad)
adc
mov
cmp
shl
(bad)
mov
mov
jns
and
add
add
mov
sub
lahf
add
scas
nop
(bad)
add
adc
inc
aas
add
mov
add
dec
mov
jmp
mov
mov
mov
mov
and
jbe
mov
inc
scas
loopne
std
lock
mov
mov
cmp
add
and
cmp
outs
mov
cmp
sbb
mov
add
inc
aam
jno
add
mov
push
hlt
neg
call
fwait
mov
add
shr
cmp
arpl
xor
mov
mov
(bad)
inc
and
jno
int3
fldpi
inc
and
add
lahf
add
sahf
imul
mov
mov
mov
mov
add
adc
sub
mov
imul
fisttp
call
jne
fld
sub
push
mov
mov
cmp
sub
aam
and
xor
xor
inc
and
call
dec
jo
cdq
rol
jl
jne
add
add
mov
mov
push
adc
mov
mov
mov
jle
add
adc
add
add
add
cmp
jae
cmp
xchg
and
push
add
clc
fdivr
movs
test
mov
mov
or
add
mov
dec
and
stc
add
add
add
cmp
ja
cmp
xchg
and
add
jns
push
enter
xchg
add
mov
or
and
call
cwde
mov
mov
add
mov
mov
dec
sbb
cmp
loop
int
mov
mov
xor
push
add
ror
retf
mul
add
add
add
mov
scas
std
icebp
add
inc
sar
and
add
fldl2t
sbb
sub
adc
add
cmp
imul
test
add
add
test
adc
pop
or
repnz
add
test
fadd
sub
test
mov
cmp
movs
add
add
lds
adc
mov
sub
mov
jns
and
dec
jo
(bad)
xor
add
(bad)
popf
or
lahf
add
mov
call
imul
add
mov
in
scas
mov
cmp
mov
mov
add
jle
add
inc
test
cmp
int3
push
pusha
in
ja
add
rol
dec
and
idiv
mov
cmp
xchg
add
cmp
adc
mov
das
jmp
push
push
mov
xor
mov
pop
movsx
cmp
ret
mov
cmp
xchg
and
adc
add
mov
add
or
push
add
inc
and
add
fld
movs
mov
call
mov
mov
jae
mov
cmp
fldenv
add
add
and
sar
or
inc
aam
add
add
and
sub
add
add
add
mov
ds
mov
cmp
xchg
idiv
push
mov
(bad)
push
and
add
scas
in
scas
std
add
inc
add
add
int3
mov
mov
push
mov
add
and
inc
and
(bad)
or
mov
add
mov
mov
test
cmp
std
lock
add
shl
mov
cmp
xchg
std
mov
mov
xchg
or
add
jb
inc
aaa
or
adc
and
call
push
add
add
(bad)
frstor
cmp
cmove
and
add
xor
add
mov
mov
mov
cmp
mov
js
jb
cwde
adc
mov
mov
mov
clc
inc
and
call
outs
pop
cmps
cmp
test
cs
jbe
mov
mov
mov
popf
mov
cmp
ret
sub
mov
or
mov
add
lock
add
sub
add
(bad)
pop
imul
(bad)
xchg
and
cmp
mov
pop
je
das
sub
movs
icebp
add
sub
popa
int3
add
mov
adc
dec
mov
cmp
inc
and
add
mov
nop
mov
xor
or
mov
mov
scas
std
add
jns
jo
cdq
in
add
mov
std
fadd
sub
add
lahf
mov
jae
add
sbb
add
add
add
cwde
hlt
scas
pop
minps
ror
pop
add
in
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
sub
sub
mov
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
sub
add
add
mov
mov
movzx
mov
mov
movzx
mov
xor
and
xor
and
mov
mov
xor
and
and
or
or
xor
mov
mov
mov
mov
mov
cmp
mov
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
movsx
mov
xor
and
xor
and
or
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
mov
add
mov
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
movsx
mov
and
xor
or
mov
mov
sub
mov
sub
add
sub
mov
mov
shl
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
movsx
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
(bad)
add
xchg
mov
loopne
xchg
push
fadd
movs
cmc
mov
and
mov
or
mov
pop
add
sbb
push
mov
push
loop
and
and
jmp
mov
jne
jg
mov
and
outs
(bad)
mov
popa
add
mov
and
jne
pushf
movs
movs
nop
inc
and
xor
loop
bound
jmp
mov
mov
adc
(bad)
jge
add
jmp
jmp
test
je
aad
jecxz
add
pushf
push
cmp
push
mov
add
mov
cmc
sub
mov
outs
mov
jmp
mov
and
sub
jnp
push
sub
(bad)
sbb
add
and
sub
inc
inc
add
add
mov
dec
add
add
adc
imul
outs
mov
jmp
jns
push
mov
inc
jbe
inc
movs
inc
and
je
xor
and
mov
inc
and
jg
ficom
mul
and
xor
add
ja
pop
add
adc
lods
xchg
cli
ja
fiadd
add
lods
cli
ins
fmul
add
fs
repz
mov
push
or
cmp
pop
in
pop
sbb
add
cmp
jno
inc
ror
add
bound
rol
out
mov
mov
pop
mov
jmp
lock
xchg
mov
(bad)
loope
push
inc
jmp
add
mov
lea
pop
mov
inc
popa
inc
and
sub
mov
push
mov
sub
and
(bad)
aad
out
in
push
mov
add
out
mov
clc
in
mov
push
cmc
call
mov
sbb
pusha
add
add
movs
loopne
sti
call
fidivr
sbb
mov
mov
clc
add
cmps
inc
repnz
ja
xor
and
add
aad
xchg
mov
repnz
out
mov
jmp
cmp
mul
daa
fldl2t
addps
mov
dec
jo
jecxz
gs
clc
jb
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
jmp
inc
jp
mov
mov
mov
add
or
sub
cdq
push
pop
add
add
mov
inc
cdq
mov
cmp
add
jae
and
shr
daa
adc
add
mov
inc
and
push
mov
out
pop
(bad)
gs
int
ins
inc
add
add
inc
mov
pop
jmp
clc
icebp
lods
pusha
xchg
xchg
rol
jmp
inc
mov
sub
jmp
outs
jmp
gs
pop
pop
pop
pop
ret
jmp
xchg
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
mov
les
push
jne
addr16
ficom
shl
mov
mov
and
(bad)
pop
add
add
add
rol
add
add
and
jbe
inc
imul
push
and
mov
stos
(bad)
add
imul
sub
mov
stc
lods
jge
xchg
jmp
cmps
adc
mov
mov
arpl
(bad)
dec
add
add
add
add
mov
int
add
sub
test
add
add
daa
inc
and
(bad)
ret
and
je
mov
push
inc
push
jg
jnp
and
das
test
add
test
and
aas
mov
push
add
push
jl
add
add
push
push
fstp
dec
test
clc
adc
jne
inc
mov
sub
mov
adc
test
test
cmp
jmp
sub
push
push
push
fild
arpl
leave
dec
add
cmovb
cld
(bad)
and
inc
repnz
and
aad
mov
cmc
shr
retf
test
jae
push
and
add
lods
and
and
daa
mov
sub
xor
and
mov
and
movzx
mov
retf
(bad)
(bad)
(bad)
(bad)
and
(bad)
jmp
and
inc
and
mov
mov
pop
push
js
dec
mov
fst
lds
mov
int3
inc
(bad)
push
lock
mov
push
and
lock
mov
mov
sbb
sub
xchg
mov
inc
add
mov
dec
jle
add
xor
scas
or
add
lahf
xor
out
outs
jl
add
add
mov
xchg
inc
mov
or
shr
inc
add
lea
hlt
lods
pop
inc
pop
ret
leave
pop
(bad)
(bad)
dec
pop
inc
add
in
in
sub
inc
or
dec
adc
cld
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
into
dec
dec
je
push
je
lds
dec
jge
add
(bad)
inc
sbb
dec
mov
or
test
js
(bad)
sub
sbb
push
mov
mov
iret
ror
dec
mov
inc
and
fs
loop
jg
pop
add
mov
mov
mov
mov
and
inc
data16
add
add
pop
inc
popf
add
mov
jg
jmp
int
jmp
jle
mov
and
je
jmp
mov
leave
sub
mov
pavgw
add
add
add
jg
inc
and
pop
shl
or
test
add
xor
in
mov
mov
push
test
hlt
loop
invd
pop
fild
add
add
add
inc
mov
imul
adc
add
jmp
mov
popf
addr16
dec
fs
test
jg
add
inc
int
jmp
mov
pop
jle
jp
cmp
and
cmp
sar
and
jge
add
add
repnz
pop
imul
mov
cmp
push
and
movnti
inc
ret
retf
loop
xor
add
mov
sub
mov
dec
cmp
inc
movzx
cmp
xor
or
leave
or
pop
repz
outs
mov
out
or
repz
push
dec
xor
mov
adc
ror
add
ret
mov
add
inc
loop
sub
add
mov
bound
sub
xor
sub
adc
fistp
mov
inc
fisubr
and
lds
das
or
ret
add
pop
pop
jae
xchg
(bad)
(bad)
dec
pop
inc
add
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
movzx
mov
mov
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
imul
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
add
add
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
add
add
sub
mov
mov
jmp
call
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
sub
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
ret
jmp
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
inc
or
dec
and
push
and
inc
sub
cmps
mov
mov
stos
out
and
inc
out
clc
mov
js
mov
shr
rcr
fwait
jno
inc
loop
repz
and
jg
jmp
mov
sub
mov
mov
inc
nop
add
add
and
sub
mov
std
(bad)
dec
mov
jmp
mov
dec
jecxz
movs
mov
fbld
je
jmp
mov
mov
call
in
sub
jmp
inc
and
fisubr
mov
popf
test
add
stos
jmp
sbb
pop
xor
stc
lds
sbb
inc
(bad)
sbb
test
es
retf
inc
and
dec
fbstp
pop
xor
inc
dec
mov
add
jmp
mov
fadd
mov
movs
dec
pop
jmp
push
add
mov
mov
and
cmp
jo
ror
mov
scas
out
pop
mov
mov
(bad)
mov
inc
fwait
sbb
call
add
mov
inc
cld
sbb
push
bnd
xchg
and
add
(bad)
and
inc
add
fwait
sbb
push
cdq
sbb
mov
jg
inc
and
mov
(bad)
das
inc
add
add
pop
mov
cld
sbb
mov
je
(bad)
mov
adc
mov
mov
mov
lds
and
mov
jmp
popf
out
out
inc
lea
ds
pop
ret
jmp
xchg
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
sub
sub
add
mov
mov
jmp
mov
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
mov
add
sub
sub
sub
add
mov
mov
shl
add
add
mov
mov
mov
mov
mov
mov
call
sub
sub
add
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
add
pop
pop
ret
jmp
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
inc
jmp
dec
or
dec
and
mov
jl
add
mov
mov
mov
es
jecxz
inc
inc
or
rcl
and
dec
push
punpckldq
push
lea
stos
adc
or
sbb
(bad)
ds
and
add
movs
dec
ret
ror
jb
add
jmp
pusha
inc
icebp
js
pop
in
adc
stos
fbld
add
add
mov
add
dec
inc
lea
and
jmp
movs
inc
and
clc
adc
adc
and
add
aas
jae
and
add
xchg
add
mov
mov
scas
cli
add
add
imul
and
jb
or
add
inc
push
sub
(bad)
fdivr
(bad)
jmp
loopne
sahf
adc
jmp
in
sub
das
add
sub
icebp
inc
mov
sti
jae
and
and
and
popa
push
jmp
data16
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
xchg
mov
mov
pop
mov
mov
mov
es
mov
dec
mov
mov
or
add
into
mov
inc
and
and
mov
fld
ret
rcl
mov
pop
and
jg
jmp
mov
es
sub
clc
jno
xor
adc
xchg
dec
lahf
sbb
jmp
mov
and
mov
mov
push
cli
(bad)
jo
add
push
dec
add
mov
sub
mov
je
fnsave
lods
cmps
sbb
push
sbb
dec
jge
inc
lods
leave
and
je
jmp
sti
push
add
add
mov
mov
sub
cmps
xchg
dec
add
loop
leave
push
retf
add
mov
dec
and
adc
cmp
jmp
mov
push
and
pop
xchg
sbb
jmp
mov
sub
lea
mov
fsubr
and
(bad)
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
add
pop
pop
ret
jmp
xchg
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
movsx
mov
movsx
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovl
mov
mov
jmp
mov
mov
mov
movsx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovl
mov
mov
jmp
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ss
or
mov
add
or
add
cmps
arpl
mov
and
add
xchg
xor
mov
mov
iret
data16
or
fs
mov
jecxz
adc
mov
(bad)
dec
and
mov
push
(bad)
dec
inc
and
rcl
in
add
imul
ror
gs
and
(bad)
enter
add
mov
xor
test
push
dec
mov
or
rol
and
mov
sahf
inc
jb
call
and
add
test
jo
cmp
arpl
push
ins
add
add
add
fnstsw
(bad)
inc
xor
mov
sbb
push
jb
mov
into
cmps
fwait
add
add
inc
and
mov
out
loop
lds
(bad)
cwde
add
test
cmp
and
sub
mov
jg
rol
and
sub
fld
jg
push
retf
stc
and
cmp
aad
and
sbb
outs
add
add
add
add
mov
sub
mov
je
aad
add
xor
scas
or
(bad)
out
jo
sbb
xchg
fild
add
sub
mov
adc
test
lods
rol
xor
and
or
add
dec
mov
adc
ja
scas
xor
add
inc
add
mov
mov
cmp
inc
inc
in
inc
and
jmp
mov
mov
int
and
add
and
push
push
pop
sar
add
mov
and
jmp
mov
mov
mov
retw
dec
js
mov
cld
xchg
bound
add
inc
mov
mov
mov
out
(bad)
mov
jo
add
sub
cs
add
les
and
mov
scas
int3
sbb
add
add
add
test
mov
sub
adc
(bad)
repz
lahf
push
fistp
movs
rol
movs
jecxz
pop
pop
jg
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
in
or
dec
adc
inc
and
mov
mov
sub
lds
scas
mov
ror
mov
mov
or
mov
mov
dec
push
dec
and
call
jge
cmp
add
add
add
and
xor
mov
mov
sub
xor
or
mov
imul
add
ds
or
jle
test
dec
mov
ins
mov
sub
jge
add
adc
pop
add
test
cmp
mov
dec
ins
or
jmp
(bad)
hlt
add
and
inc
cmp
int3
dec
in
mov
aaa
test
add
add
pop
add
mov
fisttp
mov
lds
pop
push
ror
cmovb
mov
jmp
and
aaa
jo
cs
mov
or
(bad)
call
and
jo
add
mov
mov
cmc
enter
inc
and
int3
and
hlt
and
mov
add
lods
sbb
add
adc
mov
mov
jmp
add
push
pop
mov
hlt
pop
xchg
pop
pop
ret
inc
clc
(bad)
(bad)
dec
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pusha
out
pop
mov
(bad)
fs
scas
jne
adc
push
mov
lahf
clc
xchg
xor
pushf
test
and
bound
mov
and
mov
and
sub
and
add
stos
xchg
ret
push
inc
and
mov
jg
xchg
add
adc
xor
mov
(bad)
stos
push
jmp
mov
out
ds
add
stos
inc
add
inc
dec
mov
ret
test
mov
adc
add
pop
mov
and
pop
mov
add
add
gs
adc
fbld
fistp
push
test
add
ss
mov
sub
mov
mov
retf
add
and
loopne
mov
pop
mov
jb
push
mov
dec
add
and
jne
scas
and
ucomiss
push
add
rcl
jnp
adc
cmp
test
dec
and
dec
jnp
add
add
add
fist
mov
sub
hlt
push
and
sbb
arpl
add
imul
add
mov
jmp
retf
je
add
retf
(bad)
add
and
or
in
add
js
loop
push
push
call
sbb
jns
add
cdq
add
dec
and
mov
mov
add
add
call
push
imul
add
cmp
gs
sbb
push
and
cmps
xchg
push
ror
mov
jmp
or
jmp
call
xchg
xor
inc
ror
inc
and
and
or
or
xor
into
mov
scas
sbb
inc
and
jecxz
mov
xchg
sub
adc
in
arpl
add
add
retf
inc
sbb
xor
jmp
inc
outs
mov
mov
cs
dec
pop
add
add
push
mov
push
mov
mov
mov
mov
add
pop
ret
nop
push
mov
mov
mov
imul
sub
sub
mov
shr
xor
mov
xor
xor
or
or
xor
and
mov
pop
ret
xchg
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
add
mov
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
add
mov
movzx
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
movzx
mov
mov
add
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
movzx
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
jmp
mov
mov
mov
shl
add
mov
add
sub
sub
shl
add
mov
mov
jmp
mov
mov
mov
cmp
cmovae
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
movzx
mov
call
mov
mov
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
add
mov
mov
add
mov
mov
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
sub
mov
add
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
cdq
idiv
mov
mov
mov
mov
mov
jmp
mov
mov
sub
sub
mov
mov
mov
mov
mov
cdq
mov
idiv
mov
mov
jmp
mov
add
pop
ret
jmp
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
or
aas
adc
mov
sahf
test
jp
imul
push
mov
(bad)
and
or
add
add
mov
sub
and
movd
(bad)
imul
add
imul
add
push
xchg
cmp
cld
mov
scas
mov
pop
stos
mov
or
test
add
jmp
mov
js
adc
xor
xor
int3
add
jmp
mov
dec
cld
out
sub
imul
add
jmp
xchg
repz
cdq
adc
cld
stos
cmp
pop
inc
push
jmp
outs
add
fadd
pop
ror
jp
add
and
mov
in
jbe
mov
add
mov
sbb
and
sti
inc
dec
retf
ins
lds
sub
add
add
js
mov
stos
add
and
pop
jbe
inc
and
add
inc
or
stos
push
and
jmp
call
sbb
retf
sub
jl
call
and
jno
add
mov
mov
mov
mov
jmp
sub
shl
mov
sub
or
test
xor
mov
xchg
add
and
outs
push
cmp
inc
mov
repz
and
add
add
jecxz
push
fisttp
and
or
out
and
call
mov
push
xchg
and
add
add
sahf
mov
mov
jle
and
stos
repnz
or
inc
addr16
xor
out
jb
gs
push
xor
ret
push
leave
and
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
dec
or
aaa
sbb
aaa
mov
jbe
and
fmul
push
mov
mov
sub
mov
mov
add
inc
fild
add
and
(bad)
and
jl
fmul
add
inc
and
loope
std
mov
or
xchg
add
inc
adc
ret
sbb
adc
and
(bad)
jnp
inc
fadd
or
push
add
(bad)
dec
sub
add
add
in
sbb
pop
dec
loop
add
test
mov
(bad)
adc
mov
sub
mov
ret
adc
pop
fdivr
push
inc
and
jmp
pop
ins
ss
stc
add
add
add
add
push
mov
sub
retf
dec
and
jg
jp
cmps
add
inc
sub
mov
fs
iret
push
jmp
leave
inc
sub
mov
mov
and
movaps
add
add
sbb
sub
inc
and
push
(bad)
cmp
add
inc
inc
and
sub
retf
inc
sub
add
push
add
sub
mov
mov
jmp
mov
jae
mov
pop
ds
jo
cmps
add
push
ret
inc
inc
jo
add
pushf
mov
and
pavgb
add
jmp
mov
sub
mov
test
pop
add
add
add
xchg
push
dec
fwait
dec
jo
repz
xchg
in
inc
and
subps
add
push
test
sub
sub
mov
inc
int
jecxz
add
test
and
mov
inc
(bad)
sub
mov
add
add
add
xor
mov
sub
mov
sahf
adc
add
jmp
mov
sub
mov
fucomi
rol
add
inc
mov
sbb
dec
xor
test
mov
add
push
sub
sub
mov
je
xor
add
push
mov
outs
sbb
mov
or
add
sbb
ret
es
sub
mov
(bad)
test
add
jmp
jmp
mov
sub
jecxz
lds
dec
imul
and
cmp
imul
and
mov
mov
jmp
mov
cmps
add
xchg
push
dec
xchg
sti
mov
add
call
and
push
cmp
dec
and
retf
inc
sub
popa
test
jnp
mov
add
push
loopne
retf
in
pop
mov
add
add
add
cmovne
jbe
jmp
mov
mov
ins
sbb
sbb
mov
lea
and
mov
or
xor
and
pop
mov
add
add
imul
fimul
call
popf
out
adc
push
fdivr
xlat
(bad)
sbb
jle
mov
push
add
ins
inc
retf
and
mov
and
shl
inc
and
sub
mov
add
mov
ins
add
and
and
jl
mov
call
jmp
imul
ror
mov
mov
add
(bad)
aad
je
jnp
repnz
inc
js
add
(bad)
jge
mov
and
push
iret
add
(bad)
(bad)
std
mov
nop
pop
mov
ret
daa
retf
pop
dec
jmp
div
ins
fmul
mov
or
rol
and
adc
inc
pushf
dec
fwait
dec
jle
das
add
add
stos
mov
ret
stos
mov
(bad)
jmp
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
int
adc
sbb
inc
dec
add
mov
mov
xchg
xor
or
add
fld
inc
les
movs
add
jp
pop
add
ret
test
inc
add
add
add
les
add
add
mov
add
std
inc
add
mov
test
mov
dec
xchg
scas
jmp
iret
test
or
add
add
fld
out
add
mov
call
fisttp
cs
movhps
or
add
inc
and
add
add
cmp
dec
add
jg
push
mov
fild
add
mov
cmp
loope
(bad)
push
rsm
dec
push
add
jmp
mov
sub
add
and
in
add
mov
jmp
mov
and
inc
les
sub
dec
shl
add
add
retf
add
jmp
mov
add
add
jmp
and
out
add
or
movs
inc
jmp
mov
and
add
add
(bad)
or
pop
add
movs
test
add
xchg
sub
in
dec
das
xor
add
adc
and
add
add
add
sub
mov
je
jb
pop
add
test
push
add
jmp
out
xchg
cmc
mov
dec
dec
sub
add
jmp
fimul
xchg
mov
add
mov
pop
or
movs
inc
sub
fadd
push
add
push
add
xlat
xchg
mov
add
inc
add
jmp
xchg
test
sbb
jne
mov
syscall
adc
or
jmp
mov
and
add
add
(bad)
(bad)
ja
shl
sbb
add
sar
add
add
inc
add
or
sub
fadd
packssdw
push
add
add
and
add
movs
sub
mov
and
add
cmovns
cs
mov
sub
mov
je
bound
test
xor
sub
pop
sub
and
add
add
inc
add
add
stos
and
xchg
add
sub
dec
test
or
add
cdq
in
mov
jmp
mov
add
pop
mov
and
inc
les
sub
add
add
add
push
and
add
and
xchg
test
push
add
test
(bad)
xor
mov
test
fistp
adc
aad
jecxz
scas
(bad)
push
add
shl
add
jmp
mov
pop
add
sbb
rol
aaa
and
add
add
test
add
xor
add
test
fwait
movs
sub
mov
xchg
add
add
add
add
mov
sub
mov
and
add
add
jecxz
add
mov
sub
fiadd
jg
jmp
mov
and
add
es
mov
mov
in
mov
push
add
and
add
dec
jne
mov
into
dec
add
inc
add
or
add
xchg
test
push
add
fimul
add
test
into
add
mov
movs
sub
mov
nop
add
add
mov
sub
mov
jmp
add
sbb
and
movs
add
jp
xlat
aam
mov
jg
sub
add
push
mov
imul
pop
add
mov
push
lahf
movs
inc
mov
push
add
add
sub
and
push
(bad)
push
pop
ins
xchg
add
scas
add
add
dec
test
add
cli
in
test
jle
dec
pop
rol
in
and
push
cs
sub
mov
or
jb
add
add
jl
add
je
mov
sbb
add
test
push
add
nop
xchg
add
test
add
add
mov
sar
and
xor
sldt
jl
mov
inc
ins
sub
and
(bad)
push
add
retf
add
jns
inc
add
mov
sub
cmp
jg
jmp
mov
add
mov
je
das
xor
and
add
sub
dec
test
or
add
xchg
and
push
mov
add
and
out
pop
daa
pop
cmp
mov
je
mov
mov
mov
mov
mov
(bad)
and
pop
or
mov
mov
jmp
sub
and
add
add
test
or
add
mov
retf
xchg
inc
ret
sub
mov
jmp
pop
out
add
add
sub
mov
and
add
movs
psrlq
push
add
pushf
dec
xchg
add
adc
adc
or
sub
mov
test
jmp
mov
push
add
add
mov
or
test
mov
push
cs
and
xchg
add
sub
cmp
and
add
in
sub
mov
daa
idiv
mov
stos
test
pop
add
jmp
mov
push
add
movs
jp
jo
cmps
test
dec
add
add
add
nop
inc
dec
(bad)
daa
push
add
sbb
cmp
add
push
adc
sub
dec
adc
pop
and
dec
xchg
jmp
mov
cs
jbe
mov
mov
rol
sub
add
sub
adc
daa
jg
jmp
sbb
add
cmp
inc
jne
je
push
rol
mov
pop
aaa
mov
psubusb
add
push
jmp
(bad)
adc
push
add
out
push
inc
pop
dec
xchg
adc
and
add
add
add
mov
inc
and
dec
dec
inc
movs
add
add
add
retf
add
sub
add
test
int
xor
mov
daa
call
inc
and
dec
dec
inc
movs
push
(bad)
mov
pop
sub
mov
(bad)
rsqrtps
add
jmp
mov
daa
shl
dec
and
mov
jmp
pop
sub
mov
dec
or
fild
sbb
add
add
sbb
in
mov
dec
punpckhwd
fwait
movs
inc
(bad)
in
test
add
push
pop
lea
cmova
pop
sbb
add
or
sub
or
jle
dec
inc
add
les
push
add
imul
cld
iret
inc
out
ja
jmp
mov
push
xor
imul
ins
or
je
jmp
adc
sub
sub
and
pop
stos
inc
add
add
add
xlat
cdq
cmc
ja
inc
and
je
jmp
jmp
mov
cmp
xchg
and
add
add
retf
sub
jae
das
add
bound
mov
int3
call
mov
adc
push
add
mov
jmp
xchg
push
push
ret
inc
mov
mov
add
cmp
and
add
bound
pop
fwait
movs
push
xor
out
sub
add
mov
add
cli
add
xchg
add
jmp
outs
ret
(bad)
push
adc
add
mov
pop
inc
les
stos
dec
ror
push
jmp
div
into
xlat
fild
inc
add
mov
add
add
mulps
mov
scas
pop
add
mov
test
add
add
out
movs
add
add
and
add
fidiv
mov
mov
mov
call
sub
add
mov
push
mov
add
add
add
int3
loopne
lods
mov
mov
push
int3
jns
lods
cmp
add
add
popf
dec
mov
add
dec
jnp
xchg
inc
add
das
pop
add
sbb
bound
push
mov
or
add
add
add
add
lods
mov
mov
sub
loop
call
jmp
add
sbb
jmp
mov
or
mov
stc
add
pop
cmp
les
and
mov
and
dec
inc
and
(bad)
cmc
adc
xchg
add
mov
fmul
mov
push
add
out
mov
icebp
add
(bad)
fbld
add
and
call
(bad)
fwait
cdq
lods
loop
mov
or
in
sbb
sbb
packssdw
(bad)
push
and
add
ret
(bad)
(bad)
daa
inc
add
mov
pushf
aam
aas
test
add
add
lods
mov
and
or
add
add
sbb
dec
arpl
nop
adc
pop
push
(bad)
push
and
(bad)
and
jns
add
inc
mov
mov
pop
cmp
xor
sbb
xchg
and
mov
add
xor
add
sub
leave
mov
and
add
lds
lods
lahf
mov
push
(bad)
jle
xchg
mov
add
mov
sbb
jmp
sub
adc
mov
mov
cmps
ss
lods
sub
xor
std
push
test
add
add
retf
sbb
shl
and
push
(bad)
push
cmp
das
xor
mov
add
(bad)
and
sbb
add
sbb
push
pusha
add
pop
mov
inc
sub
dec
fs
jo
jae
add
(bad)
xchg
test
lods
(bad)
add
mov
pop
sbb
add
in
jb
add
add
lods
inc
dec
and
add
add
push
and
xchg
mov
xchg
add
xlat
xchg
fs
lods
mov
add
add
xchg
in
rol
add
mov
jo
out
mov
or
add
iret
and
sub
arpl
mov
mov
dec
ror
into
add
jl
ret
add
sbb
and
pop
movs
inc
add
add
jl
jmp
sub
and
dec
sub
inc
call
mov
mov
cmp
cmovl
mov
loop
add
add
test
add
mov
shr
or
mov
jmp
mov
dec
(bad)
add
(bad)
xchg
and
xchg
add
mov
xchg
gs
fist
or
cmp
mov
mov
lds
or
dec
xchg
add
ror
fnstsw
daa
sbb
push
add
call
lea
add
add
push
clc
jns
lods
cmp
add
add
retf
loop
add
jmp
push
ret
add
sbb
jmp
mov
dec
out
and
add
je
add
mov
mov
mov
mov
adc
pop
dec
add
cdq
or
out
inc
out
jmp
mov
push
add
or
pop
cmp
inc
mov
rcl
add
and
cmps
sbb
lea
mov
sub
pop
lods
mov
mov
cmp
bswap
(bad)
outs
or
or
repz
pop
lds
add
cmps
mov
mov
mov
jnp
add
pop
add
dec
or
mov
mov
or
scas
call
mov
cs
xchg
add
pmullw
sbb
add
mov
mov
jmp
lods
lahf
mov
call
dec
jo
add
add
and
movs
add
add
push
add
test
push
add
pop
sbb
jns
inc
add
mov
mov
sub
xor
rol
add
add
dec
jecxz
aad
add
faddp
jae
pop
jmp
add
add
xchg
inc
or
mov
sub
inc
mov
jg
lods
add
ror
xor
or
jg
lods
adc
pop
lods
add
add
add
push
loopne
sbb
(bad)
stos
and
dec
add
aas
jbe
mov
nop
mov
mov
xor
cmovne
bound
pop
or
les
out
add
dec
ret
lods
nop
add
mov
push
jmp
add
hlt
ss
jmp
mov
mov
cmp
test
and
add
jmp
stos
int3
jns
lods
mov
pop
lods
mov
mov
push
add
mov
add
test
cld
jmp
xchg
seta
je
jmp
mov
add
(bad)
hlt
pop
pop
pop
clc
ret
jmp
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
dec
sar
cmp
int
add
sub
fcom
mov
add
and
scas
mov
add
int
xor
add
bound
add
or
and
dec
add
mov
rol
cmp
push
icebp
addr16
test
inc
and
dec
retf
and
inc
(bad)
std
add
(bad)
jmp
mov
das
sub
repz
jo
add
add
sbb
add
ret
or
imul
add
test
fbstp
inc
cs
(bad)
jnp
add
mov
mov
and
inc
xor
inc
fwait
mov
(bad)
pop
add
push
adc
test
(bad)
repz
inc
outs
scas
sahf
and
inc
(bad)
fild
push
pop
jo
out
js
sti
mov
mov
and
pcmpeqd
or
add
cmp
leave
sbb
(bad)
mov
add
jp
test
and
sub
xchg
push
inc
ss
jmp
mov
mov
push
fidivr
sbb
add
add
add
sub
out
es
mov
add
outs
add
and
push
pop
mov
sub
mov
jg
xchg
and
repnz
cmp
xor
imul
(bad)
lods
add
xchg
ins
dec
add
dec
push
jge
sub
mov
jae
cmovg
and
add
add
mov
mov
out
mov
add
jmp
outs
add
ins
add
adc
test
js
js
add
add
add
mov
repz
mov
setae
add
add
or
dec
js
arpl
ret
sbb
lahf
add
mov
add
and
sub
add
lds
pusha
add
add
es
sub
mov
cmovb
ins
add
sti
inc
xchg
into
lds
xchg
mov
sub
js
mov
and
add
sbb
dec
inc
mov
dec
mov
add
xlat
shl
adc
fdiv
cmps
add
and
repnz
pop
add
(bad)
jns
xor
fadd
push
add
dec
add
(bad)
dec
repz
repz
add
(bad)
cmp
ficom
imul
jl
lds
(bad)
mov
add
mov
sub
and
add
jp
add
add
add
inc
test
sbb
jl
loopne
push
mov
lock
add
fsubr
xchg
add
jns
or
sub
add
add
and
and
(bad)
push
add
rcr
shl
add
ins
fidiv
test
scas
pop
or
sbb
inc
(bad)
or
add
mov
outs
push
cmp
cmc
mov
mov
nop
pop
add
mov
test
sti
sbb
repnz
dec
and
jmp
(bad)
or
arpl
jecxz
add
ret
test
xchg
add
pop
sti
add
(bad)
add
add
in
and
add
or
push
inc
push
add
jo
mov
or
dec
enter
add
mov
mov
mov
xchg
mov
mov
add
push
mov
and
add
dec
dec
adc
adc
(bad)
or
adc
add
stc
inc
xchg
mov
rcl
mov
xor
sub
sahf
loop
out
mov
cmp
add
add
push
pop
jg
imul
xchg
add
mov
mov
lds
push
jecxz
add
sbb
jmpw
dec
add
push
xor
in
cmps
mov
xor
sub
push
adc
ret
scas
or
add
add
sbb
xchg
loop
add
add
and
rol
jb
jo
popf
mov
add
add
jne
and
sar
mov
and
add
xchg
and
or
sbb
loop
xchg
ins
ror
add
(bad)
out
or
mov
mov
or
movs
retf
movs
add
adc
fistp
adc
add
cmp
pop
inc
cmp
jmp
test
and
repnz
mov
mov
cmc
mov
mov
(bad)
push
inc
push
add
add
jmp
mov
scas
xor
cmp
push
add
add
sar
xor
mov
popa
jmp
jmp
add
mov
mov
mov
jmp
(bad)
js
loop
and
add
add
dec
inc
out
jbe
inc
js
mov
add
add
inc
and
add
xchg
gs
ret
cdq
in
test
nop
push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stc
or
mov
(bad)
pop
jmp
pop
mov
cdq
dec
xchg
ja
add
add
ret
xchg
add
add
and
add
movs
push
jb
loopne
and
dec
fxch
dec
cmps
push
and
rol
push
mov
mov
add
std
lock
test
in
ret
iret
mov
(bad)
and
rol
mov
add
mov
ret
sub
mov
add
pusha
add
add
add
add
popf
inc
and
add
fisttp
cmc
add
rol
dec
adc
sub
mov
and
je
mov
dec
xchg
aam
adc
sub
mov
and
add
add
test
sub
mov
cmovnp
add
mov
out
add
fwait
test
cmp
sbb
mov
mov
sbb
add
add
and
add
popa
es
mov
paddusb
add
add
aaa
add
mov
add
sub
mov
xchg
xor
add
add
inc
add
test
add
cmp
jns
mov
mov
jmp
mov
lahf
sbb
mov
pusha
adc
mov
sub
mov
push
mov
dec
fldln2
cdq
mov
(bad)
call
fcmovnbe
adc
sub
mov
and
bsr
add
push
add
jb
sub
in
or
(bad)
(bad)
cs
add
adc
add
mov
(bad)
cmp
xchg
movs
push
add
mov
push
add
add
(bad)
mov
pop
add
jg
cmc
rol
add
dec
test
add
and
retf
cmp
in
add
cmps
popf
into
mov
add
sub
pop
inc
and
call
add
push
stc
enter
add
sub
inc
hlt
jl
pop
(bad)
push
shl
ror
add
sub
mov
mov
jae
add
add
add
out
retf
add
add
cdq
test
push
add
sub
inc
mov
add
sub
mov
bt
mov
(bad)
pushf
add
mov
xchg
and
je
pop
mov
mov
mov
inc
add
fld
jge
cdq
fs
add
pop
iret
add
mov
jne
(bad)
cmp
push
and
cmovne
ins
add
dec
xchg
mov
jmp
fld
psadbw
add
daa
jmp
mov
hlt
jg
inc
pop
mov
and
je
sub
add
pop
add
inc
mov
je
mov
mov
sub
mov
inc
adc
rcr
add
jmp
mov
push
mov
xchg
xchg
xor
les
xor
inc
xchg
dec
fld
dec
dec
pop
bswap
ror
add
(bad)
add
lea
lea
cmp
fnstenv
(bad)
mov
dec
add
add
(bad)
pop
jmp
add
add
adc
dec
mov
mov
and
pop
je
or
push
jmp
pusha
inc
jae
aad
test
mov
inc
movs
sub
add
fxch
cmove
aam
add
add
jecxz
add
mov
arpl
xchg
mov
mov
mov
movs
add
daa
add
fisub
iret
mov
add
push
push
ror
ret
add
xchg
mov
add
aaa
sbb
or
mov
mov
and
mov
sti
fdivr
mov
xor
out
cdq
add
cmovl
mov
sub
mov
les
dec
jg
inc
pop
into
cmp
add
mov
mov
or
mov
rol
inc
sbb
and
add
add
sti
xchg
add
cmp
and
les
add
mov
and
mov
or
inc
xchg
in
jmp
ins
dec
ins
and
out
adc
and
mov
add
xor
inc
psraw
(bad)
push
jmp
mov
mov
and
hlt
push
and
ja
and
add
add
and
fcmovnbe
add
cmp
mov
test
push
inc
movs
add
fcmovnbe
jmp
mov
mov
add
add
add
fld
xchg
ret
add
ja
mov
std
push
cmp
jge
ror
add
jno
add
add
mov
add
xor
and
adc
sbb
add
add
xchg
lock
mov
add
add
add
aaa
lea
add
add
inc
test
add
clc
mov
ss
add
add
mov
mov
nop
add
add
lea
pop
fwait
sbb
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
sub
mov
popa
(bad)
(bad)
mov
jl
ret
mov
adc
xchg
add
mov
rol
add
test
sub
add
jecxz
rol
test
add
add
arpl
add
stos
pop
add
add
mov
add
xor
(bad)
push
fcom
or
xchg
xchg
fsub
and
add
and
add
call
fadd
sbb
sbb
pop
jg
add
jl
mul
cmp
add
add
add
and
or
add
sub
and
mov
pop
mov
mov
jecxz
call
mov
mov
lea
and
ret
cmp
adc
rol
add
cmps
add
movs
mov
mov
lea
retf
mov
adc
add
add
mov
cmp
add
push
fcom
pop
inc
and
inc
mov
lods
xor
add
inc
add
sbb
stos
add
call
lea
add
dec
mov
adc
clc
xchg
mov
scas
mov
inc
xchg
xchg
xor
(bad)
mov
add
in
outs
inc
mov
sub
and
push
mov
push
cmc
xchg
and
ret
mov
sbb
dec
mov
and
add
mov
jl
add
hlt
mov
cld
dec
mov
add
sub
scas
dec
and
push
jno
mov
mov
inc
out
adc
push
test
add
call
sbb
mov
add
jmp
lods
inc
stos
add
test
add
mov
sub
or
mov
lea
xchg
sub
and
add
and
je
xchg
jbe
cmp
add
jecxz
test
hlt
add
add
add
dec
push
mov
jg
add
and
xchg
ror
rcr
add
lea
lea
and
add
and
xor
and
fs
addr16
add
pop
mov
cmc
inc
scas
or
mov
add
js
(bad)
enter
je
outs
mov
in
mov
movs
xor
add
dec
pushf
inc
cmc
pop
sbb
stos
pop
sub
lock
cdq
pushf
and
pop
add
push
jecxz
retf
mov
add
je
mov
mov
or
add
popf
enter
mov
mov
mov
mov
mov
adc
mov
add
add
sbb
cmps
lods
xor
(bad)
sub
add
mov
mov
test
and
sub
test
adc
mov
ucomiss
iret
mov
aas
add
and
xor
mov
mov
femms
call
stos
pop
(bad)
clc
scas
loopne
js
sub
mov
unpcklps
(bad)
mov
movs
add
rol
fnstsw
xor
in
test
add
add
pop
in
pop
jl
test
cwde
add
adc
mov
jg
add
ucomiss
add
add
add
in
add
add
pop
push
and
add
jl
rdpmc
or
add
push
add
add
add
pop
cmp
(bad)
adc
rol
mov
sub
retf
rol
add
test
add
and
fwait
sub
sub
jg
jmp
mov
add
mov
je
xchg
leave
add
xchg
sub
sub
mov
add
in
(bad)
jno
add
add
add
add
movs
cmp
test
sbb
retf
jmp
mov
sub
or
in
dec
jmp
sbb
add
add
add
push
arpl
inc
stc
icebp
test
clc
add
cwde
cs
(bad)
mov
adc
(bad)
fwait
mov
in
test
and
pop
add
in
jl
ret
add
add
sub
mov
mulps
add
xor
push
sbb
aad
test
inc
stos
pop
jnp
(bad)
add
js
test
add
clc
sub
adc
ucomiss
add
jmp
mov
test
add
xor
das
test
pop
add
jg
xchg
add
and
clc
xchg
add
mov
scas
or
add
add
xor
push
sbb
retf
mov
add
jae
aaa
add
ret
xchg
adc
add
mov
sub
inc
aaa
mov
jg
fild
add
movs
mov
sub
das
test
add
add
mov
add
add
dec
test
adc
xchg
mov
sub
add
cmp
sub
add
xchg
test
add
and
psllq
add
add
mov
leave
dec
sub
push
js
test
mov
jecxz
arpl
add
sub
retf
das
jo
jmp
mov
aad
push
mov
cmp
scas
test
xor
jmp
dec
out
loopne
sbb
lods
pop
sub
mov
and
movs
test
add
add
jmp
jl
dec
test
add
aas
or
mov
mov
(bad)
mov
add
add
dec
ds
pop
mov
inc
and
je
jmp
mov
sub
dec
inc
pop
pusha
sbb
add
add
loopne
mov
add
lfs
and
and
dec
gs
paddb
xchg
add
sub
out
inc
xor
je
jmp
mov
and
lods
bound
jg
jae
jne
ret
js
repz
clc
mov
mov
iret
mov
dec
je
jmp
push
add
jbe
inc
and
je
bound
js
mov
add
mov
cdq
add
mov
add
mov
add
add
jmp
lds
test
add
cmp
test
loopne
js
sub
mov
or
add
loopne
jecxz
in
(bad)
(bad)
cmp
mov
add
add
pop
push
sub
mov
cmovg
add
(bad)
add
pop
push
loopne
add
sbb
jmp
inc
stos
pop
jmp
test
add
mov
test
jmp
mov
mov
mov
or
in
inc
ror
or
test
add
add
in
addr16
retf
jl
test
lea
sub
xchg
mov
repnz
imul
(bad)
popa
cmp
loope
pushf
xchg
cwde
jnp
add
add
mov
and
adc
xchg
jmp
je
mov
fucomi
in
dec
jne
xor
lea
add
add
add
add
mov
retf
aad
in
add
jmp
adc
mov
cmp
cwde
inc
imul
cli
add
add
test
mov
add
mov
inc
sbb
movs
lods
add
mov
and
mov
add
hlt
and
pop
add
fwait
or
push
inc
and
dec
stos
xchg
or
jb
cmp
xor
mov
cmovl
mov
shl
out
sbb
pop
add
in
adc
add
ror
jb
icebp
gs
movs
xor
jecxz
arpl
xchg
movs
add
add
cmp
inc
ror
adc
xor
sub
icebp
(bad)
cmp
cmps
xor
dec
out
shl
pop
inc
mov
and
add
inc
inc
jg
pop
add
movntq
adc
fcomp
add
movs
pop
movs
xor
call
cmps
add
adc
mov
jnp
add
mov
mov
xchg
mov
pop
retf
mov
adc
and
add
movs
add
inc
and
jecxz
arpl
mov
cmp
das
pop
and
call
loop
fisttp
mov
mov
inc
inc
cmps
mov
add
test
retf
mov
arpl
add
(bad)
and
add
test
jmp
mov
mov
sub
ror
mov
mov
icebp
push
or
mov
xor
lea
mov
mov
adc
dec
push
lds
ds
sub
and
and
arpl
xchg
push
and
or
enter
mov
call
mov
mov
stc
cmp
adc
xchg
mov
test
xlat
add
jmp
mov
or
mov
and
call
pop
add
rol
jbe
mov
cmp
add
add
iret
out
mov
adc
shl
and
add
jo
and
jecxz
(bad)
jmp
dec
add
pop
add
inc
shl
out
jns
add
push
xchg
mov
rol
and
sub
movs
xor
add
jecxz
cmovne
mov
dec
retf
add
add
(bad)
(bad)
cmp
test
pop
adc
aas
adc
mov
adc
add
xor
mov
pushf
pop
rol
popa
and
dec
pop
test
stos
add
lahf
cmp
js
clc
push
test
(bad)
add
mov
movs
add
iret
xchg
or
add
mov
test
add
push
mov
jmp
mov
add
pop
test
sbb
jle
jne
inc
sub
add
test
pop
add
je
(bad)
inc
test
add
fnsave
jmp
mov
add
pop
pop
ret
dec
in
(bad)
jmp
pop
inc
add
push
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
add
pop
pop
ret
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
lea
lea
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
lea
mov
call
lea
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
sub
add
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
sub
sub
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
push
mov
push
push
push
and
mov
call
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmps
xchg
popa
js
sub
xchg
jp
std
and
pop
add
lea
repnz
and
cmp
add
test
test
cmp
fadd
imul
lea
out
loopne
add
dec
lea
inc
mov
cmp
div
xchg
add
sbb
adc
mov
push
loop
(bad)
push
and
push
add
add
js
mov
jb
dec
pop
ffree
test
push
mov
shr
mov
stos
pop
(bad)
pop
jns
shr
add
(bad)
ja
sub
cmp
les
dec
(bad)
fisub
add
mov
test
or
add
stos
test
mov
add
inc
imul
jb
and
imul
mov
and
mov
mov
inc
mov
push
fisub
push
add
mov
cld
ins
push
loop
mov
mov
add
inc
test
push
fidiv
add
add
cmps
push
dec
ret
jns
add
add
mov
adc
pop
add
fisttp
add
mov
mov
shr
(bad)
cwde
jns
add
repz
mov
xchg
jb
test
mov
inc
add
mov
mov
div
jp
test
test
inc
mov
xchg
add
push
or
ss
jbe
inc
cmp
dec
pop
fisttp
add
movs
mov
scas
push
xchg
pop
push
test
add
add
lock
sub
ins
add
mov
sbb
out
and
lds
jb
mov
pop
(bad)
jg
jmp
mov
sub
mov
jg
cmp
add
js
and
outs
les
sub
mov
stc
(bad)
add
add
add
jmp
sbb
adc
movs
test
jns
repz
cld
(bad)
data16
jmp
mov
and
fadd
add
mov
jg
jmp
mov
sub
jp
sbb
add
psadbw
add
jmp
push
dec
and
add
add
mov
mov
xchg
test
(bad)
dec
fadd
add
add
add
ins
add
not
xcrypt-ecb
cmps
mov
add
or
add
daa
les
mul
xchg
add
cmps
popf
mov
xlat
ins
jbe
add
test
add
add
add
push
(bad)
push
loopne
add
jb
(bad)
fucomp
add
add
add
and
add
popa
mov
xchg
vmwrite
add
add
ins
fsub
sub
test
add
add
jmp
pop
add
rol
xchg
pop
xchg
div
add
iret
ret
ja
cmp
repz
(bad)
add
mov
lock
neg
push
mov
and
rol
add
(bad)
push
add
xchg
jmp
mov
sub
movs
push
dec
call
mov
shl
add
into
add
and
add
shr
mov
aaa
(bad)
retf
add
add
cmps
push
dec
xlat
add
adc
jmp
and
add
add
enter
daa
add
add
add
and
shr
jae
xor
mov
test
loop
sub
pop
xor
add
xchg
cmp
add
stc
mov
and
pop
add
aam
scas
inc
mov
dec
fdiv
add
add
add
pop
mov
and
add
add
push
test
add
sub
pop
out
add
jmp
repz
add
mov
pop
ffree
(bad)
scas
mov
cmp
add
add
test
add
xchg
jae
in
lahf
(bad)
mov
cld
cs
ror
(bad)
sbb
repz
add
js
mov
sub
mov
(bad)
test
cmp
add
outs
sbb
and
add
add
mov
in
mov
test
add
js
test
dec
add
add
mov
ffree
pop
mov
add
mov
and
nop
pop
add
mov
and
add
fmul
ins
cmps
rol
ins
jmp
dec
test
xor
ja
(bad)
xor
mov
fmul
jmp
mov
and
add
lahf
sub
mov
btr
jb
fadd
add
dec
mov
stc
and
add
sub
mov
jg
jl
add
cmp
ins
add
movs
push
and
add
ins
cld
mul
add
xor
test
jmp
add
add
add
mov
add
loop
add
add
mov
xlat
and
cmp
inc
add
test
add
ffree
test
mov
add
add
mov
sub
push
test
sub
shl
retf
outs
sub
stc
test
ja
xchg
ret
xor
add
sahf
fidivr
mov
test
sbb
fadd
iret
add
rcl
mov
(bad)
inc
or
(bad)
jmp
mov
add
sub
inc
test
je
jmp
aad
mov
add
ins
sub
in
and
add
popa
test
jb
jmp
rcr
and
into
mov
mov
and
pop
add
call
sub
fadd
imul
xrelease
je
mov
mov
jmp
ss
adc
add
mov
cmp
loopne
shl
ja
and
cmp
jmp
rcr
add
add
pop
dec
mov
push
ror
xchg
add
pop
sahf
es
push
inc
and
and
retf
ins
repz
test
add
add
mov
adc
fidivr
cmp
push
imul
xchg
sub
mov
cld
je
test
inc
ins
add
js
sbb
add
sub
mov
test
add
add
mov
scas
add
add
outs
(bad)
mov
and
je
shl
add
fsubr
and
rol
ins
fisub
scas
das
mov
jg
add
jmp
mov
sub
mov
sahf
test
adc
add
and
sub
jmp
and
je
jmp
mov
add
push
mov
add
pop
and
pop
mov
and
add
not
pop
inc
dec
stos
ja
xor
add
jmp
mov
add
sub
mov
imul
jb
dec
add
add
mov
emms
mov
js
jmp
mov
sbb
(bad)
sbb
cdq
jmp
shr
xchg
add
mov
mov
mov
mov
add
jmp
mov
js
sti
push
adc
(bad)
add
add
pop
xchg
add
mov
arpl
sub
cmp
ins
add
mov
sbb
add
sub
rcr
loope
push
scas
mov
add
enter
sbb
inc
jo
aas
xchg
mov
je
cmp
add
fs
les
retf
popa
pop
lock
(bad)
cld
into
mov
rcr
add
add
adc
outs
xchg
jmp
(bad)
call
ins
test
add
gs
sar
stc
mov
shl
sbb
add
or
xchg
add
mov
test
cmp
ins
pop
mov
ins
or
sti
in
adc
mov
les
and
push
pop
add
es
add
add
add
inc
sbb
mov
nop
add
js
test
test
ins
fadd
xchg
in
lahf
and
push
gs
pop
loope
xor
add
adc
mov
inc
ins
loope
xlat
pusha
mov
xlat
ret
inc
adc
cmp
movs
cmp
ins
repz
inc
sbb
les
inc
mov
mov
xor
in
dec
push
lea
xchg
std
and
or
add
idiv
ins
add
loop
push
retf
add
jmp
(bad)
mul
dec
pop
fnstsw
imul
add
add
call
mov
rcr
fmul
sub
mov
test
mov
dec
add
add
push
and
push
xor
ret
mov
aas
or
add
add
addr16
xchg
push
add
xchg
mov
rol
jg
dec
push
dec
and
movs
push
and
mov
test
inc
mov
sub
popa
sar
dec
mov
dec
push
jb
mov
fld
mov
rcl
out
and
sbb
mov
or
inc
(bad)
sub
add
pop
and
repz
add
(bad)
cs
xor
inc
add
dec
add
rcr
out
mov
mov
sbb
and
rol
mov
add
add
add
and
loope
cmp
repz
shr
mov
ins
cmp
add
in
lahf
std
jmp
leave
ins
sar
aas
pop
dec
mov
add
mov
add
mov
movs
fadd
inc
adc
add
mov
add
rol
adc
retf
cmps
inc
daa
loopne
fucom
mov
(bad)
retf
and
add
outs
js
pop
xchg
add
test
add
add
lahf
clc
or
push
dec
push
cmps
add
mov
xor
pop
fisttp
inc
inc
xchg
and
fild
lea
test
out
ja
mov
in
(bad)
lahf
adc
loop
shr
outs
in
mov
push
cmps
inc
gs
loop
bound
pusha
aad
sbb
rol
ins
add
jmp
(bad)
ja
cmp
cmp
jbe
icebp
and
fdiv
dec
mov
mov
xor
add
cmps
add
jg
dec
cmp
add
or
add
mov
jmp
lea
push
push
jb
mov
mov
mov
mov
add
mov
aam
outs
add
mov
mov
xor
add
and
add
rol
add
mov
je
pop
fld
rol
and
mov
add
call
adc
add
add
mov
test
xor
add
mov
xor
add
retf
and
mov
add
add
inc
and
or
cmp
mov
int3
jbe
test
imul
inc
xchg
jb
add
add
inc
pop
inc
push
and
add
mov
pop
shr
(bad)
adc
xchg
adc
and
mov
test
repnz
jne
inc
loop
push
xchg
jb
mov
dec
rcl
sub
sub
in
mov
or
xor
loop
dec
mov
js
out
mov
pop
sbb
add
mov
add
aaa
call
sbb
into
cmp
adc
add
add
sub
imul
scas
outs
add
dec
test
push
dec
pop
mov
xor
or
dec
inc
push
mov
rol
add
adc
div
lahf
and
xchg
add
add
mov
and
sub
and
daa
add
pusha
xchg
hlt
ret
dec
pop
loope
add
pop
add
pop
push
dec
jmp
mov
mov
mov
jb
add
dec
add
jns
add
jmp
mov
jecxz
and
push
add
pop
add
idiv
sbb
ins
add
mov
mov
add
add
les
jge
ror
fucomp
sbb
add
sub
inc
in
mov
outs
add
mov
pop
push
add
test
add
mov
inc
loopne
jmp
mov
mov
out
sub
xchg
idiv
add
arpl
mov
jmp
outs
les
stc
mov
add
mov
jmp
cmp
pop
xchg
sbb
inc
in
and
jmp
pusha
call
mov
cmp
add
xor
cmovne
pop
fld
jmp
mov
mov
imul
jg
(bad)
call
data16
shr
add
stos
mov
jmp
mov
(bad)
lea
pop
aaa
pop
jmp
(bad)
call
in
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
call
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
mov
call
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
inc
or
dec
or
mov
add
(bad)
mov
mov
add
loopne
movs
movs
fwait
and
ret
out
cmp
mov
mov
(bad)
pop
cdq
xor
add
inc
and
or
and
fild
add
inc
add
lea
mov
mov
call
cmp
add
mov
jmp
add
enter
sub
add
and
add
mov
or
loope
or
inc
and
imul
outs
mov
arpl
mov
add
div
out
cmp
mov
sahf
std
adc
add
add
add
iret
mov
or
outs
mov
or
and
add
enter
jno
stos
sbb
pop
pop
add
push
push
jmp
mov
jl
es
movs
add
jg
jmp
mov
add
mov
movs
add
add
add
test
sub
or
add
pop
(bad)
and
add
add
lods
add
cmp
mov
dec
and
add
movs
mov
out
mov
jle
pop
add
sub
aas
test
or
add
add
dec
test
call
xor
sub
aad
pop
add
lods
add
add
mov
sub
je
xor
add
add
add
dec
and
and
aas
jb
mov
jg
jmp
mov
lods
cmp
adc
sub
add
add
add
add
iret
mov
inc
adc
rcl
(bad)
and
add
add
and
add
arpl
sub
add
add
ja
add
adc
add
je
push
add
add
(bad)
and
push
movs
add
shr
cmps
jl
(bad)
xor
movs
add
mov
lods
cmp
xchg
stos
mov
adc
ins
sbb
and
add
push
mov
aas
xchg
cmp
mov
dec
sub
rcr
and
inc
xchg
add
mov
push
and
setns
add
push
add
iret
add
mov
pop
ja
add
pop
inc
add
mov
lods
arpl
add
or
rol
push
add
jmp
jmp
push
cmc
stos
ror
repz
xchg
jno
in
mov
outs
add
mov
ret
pushw
pop
jmp
mov
retf
pop
add
add
sub
xor
scas
ret
mov
and
mov
add
in
(bad)
mov
add
mov
mov
arpl
pop
add
cmp
pop
inc
add
add
mov
jmp
mov
stos
ror
inc
ror
and
pshufw
or
xchg
dec
jge
inc
add
sbb
and
aas
add
mov
jle
add
add
mov
(bad)
mov
cmc
add
jmp
fisttp
mov
adc
add
jge
or
and
out
add
mov
push
push
and
add
add
add
cwde
idiv
push
fld
je
or
dec
ret
dec
jge
clc
loop
test
sub
adc
jmp
cmp
into
adc
mov
mov
sub
cmps
loop
inc
and
aad
ror
pop
pop
add
add
xor
add
xor
mov
add
iret
addr16
sti
or
adc
add
add
sub
rcr
dec
jge
mov
lea
mov
add
test
aaa
or
adc
add
add
and
(bad)
and
push
test
stos
and
aad
ret
xlat
push
adc
add
xchg
rol
add
xchg
fprem
sub
add
add
sbb
jmp
jl
add
in
and
push
je
(bad)
push
dec
rol
dec
jge
test
add
arpl
add
pop
inc
push
enter
push
jecxz
add
mov
mov
ss
ficom
iret
fwait
xor
push
scas
or
and
add
arpl
cmp
out
add
xchg
pop
and
add
sbb
inc
and
add
add
mov
sub
and
mov
cmp
mov
add
mov
lea
add
xor
mov
mov
mov
mov
and
mov
call
inc
inc
test
push
loop
scas
push
bnd
xor
sub
repnz
add
or
add
test
xchg
add
ret
add
jg
popa
es
and
aam
add
in
test
push
and
add
add
add
scas
mov
sub
sub
test
add
into
xchg
and
aam
add
adc
xchg
cmp
add
mov
add
mov
sub
jmp
lods
inc
and
aaa
nop
ror
cmps
call
xchg
or
add
call
add
mov
add
stc
mov
mov
add
cmp
mov
and
sub
and
call
sbb
or
and
inc
mov
mov
sbb
add
int3
or
mov
mov
mov
or
adc
dec
jge
inc
test
and
add
or
test
sub
add
or
sub
outs
ret
add
pop
inc
xchg
mov
xchg
mov
mov
xchg
shl
dec
fldcw
dec
jge
inc
and
mov
and
mov
and
in
arpl
and
mov
(bad)
add
dec
jge
ja
pop
addr16
xor
and
inc
cmc
add
mov
add
iret
add
mov
add
scas
mov
mov
enter
in
xor
pop
pop
add
pop
inc
adc
xchg
add
fadd
add
pop
push
cmp
add
cli
push
hlt
mov
add
add
pop
arpl
inc
mov
sub
out
mov
jle
sub
add
leave
and
xchg
mov
mov
xchg
sub
(bad)
cmc
add
add
push
pop
dec
jge
mov
pop
add
mov
sub
and
inc
arpl
mov
cli
test
add
and
repnz
sbb
repnz
add
add
(bad)
pop
or
cld
clc
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jo
sbb
or
add
add
add
and
add
add
(bad)
imul
call
jmp
(bad)
cmp
add
jo
cmp
mov
popa
push
aam
jne
mov
imul
mov
push
jnp
or
add
mov
sar
mov
push
push
mov
por
add
inc
mov
cmp
scas
dec
mov
sbb
pop
add
rol
mov
std
setg
inc
or
xor
jns
bnd
mov
push
sub
pop
cmp
bnd
jmp
out
aas
push
push
sub
mov
jg
jmp
sub
and
sub
mov
cmc
xor
test
into
pop
inc
jmp
mov
push
repz
inc
aad
inc
popa
xor
sub
add
cmps
call
jne
inc
inc
xor
test
add
add
xor
fs
or
mov
cmp
mov
sbb
pop
mov
lds
es
inc
and
andps
add
lea
add
add
mov
retf
repz
ins
and
jnp
xchg
adc
push
repz
hlt
add
loopne
push
xchg
jp
loop
and
and
shl
ror
jp
add
dec
jns
mov
mov
jns
inc
and
mov
add
mov
mov
(bad)
inc
aaa
and
mov
or
pop
add
mov
xchg
fisttp
pop
mov
sahf
sub
add
add
vmread
add
push
mov
js
cs
jns
das
bound
pop
push
push
xor
jbe
and
and
ins
mov
fbld
dec
and
mov
repnz
sbb
js
mov
and
mov
fiadd
inc
or
call
inc
fisttp
scas
add
mov
add
imul
jno
or
xor
ret
mov
mov
mov
bound
mov
movs
sub
mov
xrelease
mov
mov
and
mov
mov
loop
inc
and
mov
and
pop
xor
or
sub
pop
mov
call
into
dec
in
in
ja
mov
call
mov
ror
rcl
xor
inc
pop
xchg
cmps
add
(bad)
aas
bound
dec
cmps
xchg
ret
add
inc
and
lea
pop
pop
aas
es
jmp
data16
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
or
dec
mov
loope
add
xor
mov
and
rol
jl
data16
pop
add
add
inc
pushf
je
add
add
add
stc
sbb
mov
(bad)
je
(bad)
(bad)
data16
cmp
loope
xor
cmp
mov
add
dec
and
mov
or
(bad)
lods
and
mov
sub
mov
mov
scas
pusha
jg
jmp
mov
and
sub
into
inc
out
pop
mov
add
mov
sub
mov
(bad)
hlt
sbb
mov
mov
outs
dec
push
push
mov
je
jmp
mov
push
inc
lods
mov
cld
and
cmp
cmp
mov
push
mov
movs
das
inc
mov
(bad)
fld
add
add
add
pop
fcomp
push
mov
cmp
add
js
xor
push
(bad)
lods
add
mov
inc
and
or
inc
and
mov
add
add
add
sbb
mov
and
sub
push
test
inc
retf
and
add
adc
jecxz
inc
and
jg
jmp
mov
shr
pop
out
test
js
add
mov
sub
mov
lds
pusha
sbb
and
sub
mov
test
add
add
call
add
xchg
cmp
mov
mov
retf
jbe
es
and
sub
mov
(bad)
push
sbb
add
inc
and
cmps
mov
inc
and
je
jmp
jmp
(bad)
adc
jecxz
mov
xchg
and
add
or
jmp
js
bound
add
mov
jnp
add
adc
xor
scas
cmp
mov
cmp
mov
xor
sbb
fild
mov
mov
mov
ss
or
sbb
xor
add
add
add
loope
dec
add
or
jmp
add
push
je
bound
pop
jns
movs
cli
push
mov
fnstcw
mov
inc
retf
and
movs
stos
jmp
scas
jbe
and
xchg
rol
push
or
out
mov
xor
mov
inc
and
aad
push
add
sub
ss
mov
mov
mov
das
rol
arpl
mov
push
cmp
push
add
add
les
(bad)
and
xor
dec
mov
push
cmps
sbb
and
add
add
inc
and
sub
xchg
shl
or
out
enter
sub
push
xor
loopne
test
or
add
shl
inc
addr16
sti
mov
mov
sub
bound
xor
sbb
popa
xchg
pop
jno
(bad)
or
call
push
icebp
sti
jbe
gs
(bad)
imul
shl
loop
mov
icebp
cli
mov
xor
inc
and
push
push
cmp
cld
push
aaa
add
push
inc
div
and
xor
stos
shl
fmul
rcr
js
mov
push
out
arpl
jg
out
jmp
aad
mov
and
jmp
sbb
dec
sub
sar
sub
shr
xlat
push
in
shr
(bad)
sub
pop
aas
pop
or
(bad)
cmc
mov
icebp
loope
sub
pop
test
mov
sub
cmp
lahf
xchg
jbe
mov
pushf
mov
xor
popa
add
pusha
fild
mov
cmps
jp
test
mov
fwait
adc
xchg
and
popa
ins
pop
mov
ins
xor
sub
push
popa
pop
lods
movs
icebp
or
je
iret
ins
imul
xor
mov
inc
pop
leave
fwait
push
aad
out
in
clc
mov
in
dec
push
or
mov
adc
out
cmp
jo
sbb
or
add
test
xchg
aad
test
jge
movs
ins
loope
push
outs
and
sbb
je
out
and
mov
je
add
and
(bad)
mov
jb
push
movs
dec
(bad)
mov
aas
jl
daa
imul
pop
mov
cmp
test
jmp
icebp
jo
jbe
mov
jbe
push
push
outs
and
jb
aas
xchg
cmc
out
test
ja
mov
xor
sbb
adc
rcl
call
inc
mov
es
cmp
(bad)
dec
pop
(bad)
shl
repz
jge
xchg
inc
mov
retf
loope
cmp
push
cmp
sar
shr
xchg
and
retf
cwde
fnstsw
repnz
add
adc
xchg
xchg
xchg
sub
into
iret
je
fsubr
sub
pop
sub
test
mov
mov
dec
add
idiv
sbb
mov
mov
call
in
(bad)
mov
scas
xor
loope
inc
ds
push
je
push
jne
xor
cmp
shr
fistp
dec
cmps
jbe
test
pop
add
mov
mov
sahf
icebp
or
pop
xor
jnp
stos
adc
or
sar
mov
sub
fsub
or
(bad)
mov
and
dec
xchg
mov
push
or
scas
leave
dec
jecxz
loope
xor
(bad)
jge
lahf
fs
in
outs
dec
push
je
in
ret
or
addr16
sub
mov
or
push
and
or
xor
dec
mov
adc
ror
cwde
int
stos
outs
sbb
gs
push
popf
sbb
mov
mov
cmp
sub
push
pop
(bad)
xor
sbb
cmp
loope
cmp
cmp
add
jmp
stc
rol
outs
mov
mov
sub
sbb
push
hlt
fs
fwait
ds
add
xor
ds
sbb
push
dec
movs
add
mov
or
mov
mov
sub
mov
inc
mov
xchg
movs
test
xor
scas
inc
cmps
std
cli
movs
mov
into
push
es
xchg
cmp
daa
jl
xor
mov
lods
xor
push
addr16
jno
lods
test
dec
cmc
and
mov
jmp
gs
sbb
cwde
pop
or
bound
or
scas
cmp
cwde
push
pop
mov
aas
gs
mov
pop
jns
sub
jns
mov
or
xchg
push
pop
sbb
push
jl
mov
leave
mov
out
mov
mov
enter
pop
jle
dec
pop
jp
xor
cmp
xor
cwde
aam
fild
(bad)
cdq
loop
dec
cwde
popa
pusha
sbb
mov
nop
adc
arpl
mov
cwde
adc
(bad)
rcr
lods
or
(bad)
push
mov
add
xor
ss
mov
fiadd
mov
stc
adc
inc
xlat
dec
xor
jne
xchg
adc
loop
cmp
jg
pop
mov
out
out
shr
retf
and
repnz
sbb
cmps
lds
iret
popa
jmp
jne
aas
cli
leave
jecxz
sbb
sbb
cdq
in
test
fs
mov
loop
cmps
fdiv
sub
mul
add
pmuludq
pop
shl
add
xchg
add
addr16
push
sahf
push
inc
test
mov
or
xchg
pop
test
cdq
pminsw
jmp
sub
cmp
out
dec
add
ins
mov
adc
rcr
mov
cmp
(bad)
push
int3
jecxz
(bad)
pop
mov
xchg
pop
sub
jmp
xchg
popf
and
movs
out
lods
jns
dec
or
scas
xchg
mov
ss
(bad)
call
out
cli
xchg
mov
sub
mov
mov
mov
cs
and
(bad)
popa
data16
fnstsw
fmul
retf
xor
pop
mov
xor
push
inc
cmp
fdivrp
out
ins
ret
retf
test
jmp
jno
inc
cmps
mov
ins
out
fldenv
shr
inc
popa
test
add
mov
push
sub
test
mov
and
xor
test
mov
mov
dec
jns
mov
jne
cmp
push
sub
mov
jo
jnp
jmp
cmp
and
lods
stos
or
add
mov
inc
or
xchg
mov
jmp
dec
sbb
mov
mul
and
adc
std
ret
xchg
dec
and
pop
dec
enter
inc
mov
dec
(bad)
in
lods
jmp
out
push
cmp
and
test
stc
xchg
mov
jmp
inc
or
jle
mov
mov
and
movs
mov
mov
add
mov
ret
cwde
jmp
or
lods
movs
into
push
push
ds
cmc
movs
shl
icebp
or
ja
adc
imul
xchg
ins
mov
out
mov
mov
pop
jle
test
hlt
scas
jns
ins
out
push
call
pop
mov
mov
sar
test
xchg
mov
and
sub
jo
jnp
cli
jo
inc
loope
mov
mov
sub
adc
(bad)
sub
fwait
mov
sbb
mov
push
push
das
retf
and
add
cmp
repnz
js
push
jmp
mov
ret
mov
inc
repz
inc
(bad)
sbb
ins
scas
popf
jb
jl
nop
test
mov
lock
mov
jmp
push
xlat
and
stos
mov
or
imul
sbb
movs
cdq
fidivr
pushf
dec
icebp
pop
int3
push
imul
fild
or
cld
movs
ins
call
mov
xlat
adc
lods
mov
daa
fbstp
in
cmc
cld
and
or
ins
test
pop
movs
sbb
add
and
pop
push
pop
stos
outs
int3
(bad)
fbstp
(bad)
into
cmc
out
das
popa
or
fs
sub
mov
add
push
and
or
in
add
adc
adc
mov
and
leave
xor
mov
xchg
out
or
mov
mov
int
pop
lock
loop
xor
fdiv
iret
mov
movs
ins
and
adc
out
mov
pop
jmp
mov
inc
xchg
cmps
out
in
sbb
mov
inc
add
add
mov
test
jne
jl
dec
fiadd
pop
inc
jno
inc
push
inc
cmp
xor
add
mov
rcr
cmp
sbb
aaa
push
sub
pop
mov
mov
(bad)
leave
std
jle
fbstp
imul
mov
aad
adc
dec
dec
jge
inc
xchg
mov
aas
cld
(bad)
push
or
xchg
mov
dec
jo
cmp
shl
pop
mov
or
add
jae
sti
xchg
adc
xor
inc
xchg
mov
mov
in
ror
or
in
pcmpgtw
cmp
mov
(bad)
cmps
mov
shl
xor
fsubrp
and
dec
dec
adc
and
das
mov
xor
iret
pop
bound
mov
or
in
xor
aam
xchg
(bad)
loopne
sub
imul
jge
(bad)
sbb
cmc
adc
icebp
(bad)
cmp
int3
or
nop
jmp
(bad)
arpl
aad
sbb
xchg
push
pop
fstp
xchg
pop
xchg
out
fdiv
and
pop
sbb
frstor
cmps
stos
xor
stos
call
iret
ss
test
add
mov
pushf
xchg
ret
popf
adc
inc
call
or
rcr
add
cwde
out
test
(bad)
push
mov
sub
clc
jge
cld
dec
jge
mov
push
sub
ffree
loope
mov
fisttp
adc
jmp
cmps
mov
rol
pop
mov
xchg
popf
xor
(bad)
inc
arpl
push
dec
pop
test
jp
outs
not
push
mov
dec
xchg
sbb
sub
xor
adc
mov
stc
xor
lock
pop
cmp
dec
stos
cwde
nop
cmp
jmp
lods
and
in
push
push
ins
pop
repz
jnp
push
dec
sbb
outs
clc
push
jno
cwde
mov
adc
mov
clc
xchg
hlt
aas
(bad)
or
sub
jg
out
cmp
mov
mul
push
dec
inc
bound
call
out
add
sbb
jecxz
cmps
fs
push
push
ror
mov
lock
jne
arpl
ret
outs
retf
clc
jl
push
ins
repz
stos
call
xchg
or
jae
mov
jb
pusha
call
cmps
fmul
mov
add
sbb
fs
cdq
popf
pushf
push
test
imul
mov
addr16
xchg
push
ret
movs
cmp
or
dec
jae
shl
xchg
outs
loope
clc
xchg
mov
sbb
call
push
xor
lods
popa
pop
and
pop
sub
inc
rol
test
stc
and
dec
mov
push
test
jg
shl
test
cs
push
call
push
mov
shl
out
(bad)
and
daa
mov
mov
dec
xlat
jns
xchg
cmp
pop
loopne
pop
scas
or
clc
shl
lds
ret
in
dec
and
imul
cmps
mov
bound
cmp
add
dec
and
push
pop
jmp
fist
rcr
mov
mov
add
pop
adc
push
push
cwde
lock
lea
fwait
lock
inc
call
cmp
push
cmp
scas
mov
mov
retf
jb
fwait
int3
in
adc
pushf
stos
sar
inc
fwait
pop
popa
cmp
mov
add
inc
leave
inc
push
adc
dec
imul
and
rcr
jecxz
test
mov
test
inc
jmp
sahf
and
fcom
rcl
fimul
sbb
pop
xchg
cmovno
and
jns
movs
popf
jb
leave
cli
stos
add
push
jg
ins
xor
aas
mov
mov
popa
pop
lds
jp
sub
loopne
xchg
add
ret
mov
cmp
gs
dec
ror
call
mov
and
mov
sbb
shr
(bad)
call
clc
lods
out
push
enter
fcomip
mov
clc
and
fimul
in
push
pushf
jno
retf
or
and
pop
mov
mov
sbb
fnstcw
push
cmc
int3
push
fwait
dec
mov
ror
pop
fmul
push
js
rcr
and
stos
call
pop
mov
cmp
dec
test
out
aas
jbe
pop
scas
cs
xchg
stos
mov
es
bound
jbe
ins
and
(bad)
jp
pusha
repz
aad
xor
add
scas
mov
add
inc
cmp
mov
mov
sub
arpl
mov
add
xor
mov
jb
add
jecxz
ja
or
xchg
inc
lahf
push
les
loope
enter
fnstenv
cmp
fild
sub
cli
and
jg
inc
cmp
scas
in
jmp
pop
ret
add
inc
(bad)
cmc
out
add
xlat
add
inc
jle
mov
jl
jle
inc
cmp
movhps
inc
loopne
inc
inc
or
in
pop
sbb
leave
or
xchg
push
xchg
movs
adc
sub
popa
adc
iret
fsub
pop
(bad)
movs
push
aaa
lock
ins
dec
or
cmp
call
xchg
sub
into
out
das
add
xlat
(bad)
pop
ret
jge
je
dec
aas
jbe
ffreep
or
(bad)
fdivr
rcr
pop
sti
rol
inc
mov
or
leave
movs
dec
ss
mov
push
repnz
jp
xchg
in
pop
or
stos
ss
mov
std
xor
cld
mov
outs
stc
hlt
stos
xor
push
sahf
pop
sbb
mov
(bad)
adc
mov
cmp
push
cmc
popa
lea
lds
push
xor
xor
ins
popa
and
sbb
mov
(bad)
loop
popa
cwde
shr
xlat
xor
(bad)
das
aam
cmp
(bad)
ret
jmp
cld
mov
sbb
and
jecxz
stc
call
daa
shl
dec
call
nop
xchg
lds
pop
movs
pop
pop
test
mov
aad
loope
cwde
xchg
enter
pop
pop
movs
or
sbb
int3
cld
daa
in
cmp
retf
cmps
and
sbb
lea
stos
test
stos
ds
push
inc
jne
push
sub
sar
cmps
shl
cmp
lahf
stos
add
push
pop
push
ss
and
aas
outs
out
fisttp
xchg
push
outs
add
inc
fcom
loop
add
xor
sbb
mov
sti
ror
jno
lahf
pusha
pop
(bad)
and
pushf
ret
jge
mov
mov
or
(bad)
push
test
lds
jp
movs
push
adc
xlat
in
pop
push
mov
dec
cmp
push
movs
inc
and
repz
or
loop
push
push
mov
dec
jg
mov
cmc
sbb
sub
lods
out
xor
cmc
push
(bad)
fimul
into
mov
test
out
dec
xor
jg
ja
and
push
(bad)
or
jno
jb
loopne
ret
dec
icebp
xchg
add
inc
aam
out
ficomp
dec
imul
pop
mov
repz
push
mov
les
sbb
ins
fnsave
movs
or
add
leave
dec
xchg
sub
xchg
mov
push
imul
mov
daa
dec
cli
outs
mov
or
outs
sti
popf
sub
idiv
mov
xchg
mov
test
outs
mov
xor
(bad)
sub
in
mov
inc
(bad)
add
mov
test
sbb
fld
or
shr
cmp
leave
cmp
pop
mov
fiadd
jl
xchg
mov
push
cmp
movs
cld
or
popf
enter
xchg
ss
and
test
movs
je
add
pop
mov
dec
push
jo
movs
mov
shl
in
cmp
in
mov
jnp
mov
out
xchg
cmp
pop
addr16
test
inc
cwde
push
pushf
lea
push
xchg
(bad)
stos
cmp
add
cmc
sub
shr
add
pusha
gs
aad
jmp
xchg
push
cmp
ret
jo
fnstenv
add
mov
adc
jo
ss
inc
xor
daa
add
clc
je
ret
sub
addr16
mov
adc
ret
sar
xchg
in
enter
(bad)
xchg
jne
sub
push
pop
xchg
daa
pop
pop
cmp
mov
scas
ror
jbe
and
fxch
loope
inc
sub
push
adc
pop
push
push
adc
adc
mov
fnstcw
push
out
adc
movs
imul
jne
iret
(bad)
mov
push
das
clc
sub
mov
push
or
nop
aam
pop
mov
std
repz
fdivr
repnz
xchg
int3
out
xor
and
lahf
mov
push
outs
ret
clc
outs
push
jp
mov
pop
inc
sub
daa
jle
mov
or
jne
imul
movs
shl
les
in
sbb
add
fild
add
jo
xchg
mov
mov
adc
dec
dec
cmp
test
push
add
pop
fisub
jp
nop
cld
das
sub
sbb
pop
mov
loopne
or
or
push
cwde
xchg
jl
gs
mov
pop
xor
loop
adc
std
hlt
ja
arpl
cmps
mov
ret
loopne
fist
jo
mov
xchg
les
bound
jo
dec
sub
test
dec
cmp
xor
(bad)
jno
outs
xlat
cli
push
push
sub
int3
push
xchg
xor
sbb
ds
aad
sub
out
mov
movs
cmp
jecxz
mov
js
in
sub
jno
inc
sub
in
xor
ins
bnd
fmul
lahf
(bad)
jge
jmp
jo
test
fs
inc
movs
fmulp
mov
sub
mov
inc
(bad)
das
fisttp
xchg
inc
bound
sub
mov
adc
pop
or
or
aas
cmps
jbe
shr
cmp
push
imul
or
and
in
cmp
xor
xor
cmc
push
popf
leave
mov
jmp
add
or
jg
xor
data16
cld
push
cli
loopne
pusha
gs
adc
repz
jae
adc
mov
push
imul
test
cmps
out
jmp
mov
sbb
cli
xor
push
jl
xchg
add
jge
sub
gs
or
xchg
push
push
gs
jb
and
jno
ret
ins
dec
sbb
add
out
pop
ins
add
xchg
cmp
sbb
xor
int3
fild
sub
jns
pop
xor
mov
aad
jle
xchg
retf
mov
mov
in
adc
jp
fldcw
and
cmps
daa
inc
dec
out
jmp
scas
push
fisubr
shr
cmc
mov
hlt
jge
test
in
lods
xchg
mov
test
out
and
xlat
outs
cdq
cs
or
(bad)
stos
or
xchg
mov
mul
loopne
aaa
jp
in
sub
out
cmps
xchg
push
rol
jns
dec
imul
fmulp
call
test
das
mov
and
(bad)
int3
mov
retf
xchg
cdq
movs
adc
mov
mov
jp
iret
out
in
je
scas
jecxz
mov
rcr
loop
call
mov
je
lods
mov
push
cwde
and
mov
xor
or
jge
sti
fcom
(bad)
in
loope
out
aam
push
(bad)
rol
adc
mov
and
sahf
dec
mov
je
les
lods
mov
ret
sti
fiadd
inc
mov
xor
jecxz
inc
pop
clc
xor
mov
or
in
adc
push
fdiv
xor
cmps
mov
or
out
sub
test
mov
jbe
sbb
push
icebp
inc
and
dec
mov
or
outs
mov
call
nop
xchg
imul
retf
ret
inc
das
mov
sbb
sub
test
sub
xchg
retf
mov
aam
rol
inc
cwde
cmp
xor
mov
inc
imul
mov
call
mov
loope
add
pop
imul
pushf
and
adc
jg
jnp
jne
add
push
adc
shr
ds
sub
xchg
mov
dec
and
loop
dec
arpl
mov
xchg
mov
mov
mov
add
adc
sbb
mov
jno
(bad)
jmp
retf
mov
and
aad
jg
and
pop
les
jg
call
or
cmp
adc
(bad)
stc
aam
push
jns
sbb
jbe
and
sbb
aas
call
mov
jecxz
xchg
ret
popfw
stos
ficomp
js
loope
lods
jb
shr
stos
dec
xor
inc
mov
inc
mul
sti
dec
imul
dec
sbb
jmp
call
lock
sbb
push
push
cli
and
ins
inc
sbb
lea
fcmovne
sti
nop
jecxz
mov
sub
inc
cmp
add
xlat
lock
std
dec
jmp
pop
in
loopne
sub
or
sub
fwait
push
sbb
xor
xor
int3
ins
sbb
mov
sahf
push
aad
and
movs
fidiv
sar
in
xlat
dec
daa
iret
lods
pop
xchg
scas
rcr
daa
adc
loope
cmps
xor
imul
xchg
dec
popa
dec
dec
mov
pop
stos
adc
mov
cwde
sub
push
or
loop
mov
imul
loopne
outs
mov
jo
jae
cmp
cmp
lods
sub
retf
std
test
lods
movs
mov
sub
repz
mov
out
(bad)
pop
cmp
inc
mul
or
cmp
jns
push
and
ja
xor
ins
mov
ficomp
dec
and
ret
mov
cld
(bad)
cdq
(bad)
(bad)
outs
fcom
ret
movs
sbb
or
in
jne
in
lds
repz
mov
stos
int3
add
(bad)
(bad)
ret
mov
sub
js
cmps
dec
add
jns
(bad)
sbb
dec
aad
ror
push
sahf
and
mov
pop
fld
dec
stc
mov
xchg
retf
(bad)
mov
xor
inc
sub
shl
cmp
mov
sub
out
inc
repnz
fsub
inc
push
lds
ret
jl
in
push
push
xor
mov
popf
add
and
call
sub
lds
repz
ret
or
fidiv
aas
jo
dec
sbb
or
fdivp
dec
hlt
loope
out
and
loopne
mov
add
inc
cmp
jnp
cli
xor
hlt
mov
lahf
cdq
mov
jb
(bad)
popa
xor
out
cmp
mul
bound
sbb
inc
test
js
mov
les
popa
xchg
aaa
aas
or
or
pop
ret
enter
loope
sub
push
pop
cwde
loope
lods
inc
icebp
push
out
pop
ss
mov
cli
dec
jmp
jge
jne
pushf
in
pop
sub
daa
or
xchg
ss
inc
sbb
xchg
jnp
imul
adc
fisubr
sbb
add
test
xor
mov
sub
adc
ins
mov
(bad)
div
pop
leave
inc
inc
inc
cmp
and
push
retf
(bad)
sub
inc
add
nop
nop
cmps
or
jge
and
push
(bad)
jae
pop
sahf
mov
fcomp
xchg
loop
xor
push
js
cmps
inc
adc
mov
pop
and
sbb
add
punpckldq
adc
xchg
xchg
pop
xchg
mov
test
fsubrp
jns
push
sbb
xlat
(bad)
push
(bad)
xchg
arpl
in
mov
xchg
(bad)
mov
cdq
fcomip
movs
mov
(bad)
pop
or
inc
jno
dec
stc
pop
inc
add
iret
and
retf
mov
(bad)
fisttp
addr16
xor
jmp
mov
dec
stos
repnz
hlt
mov
and
and
sub
lods
nop
ss
mov
leave
fstp
pop
adc
push
push
add
aam
adc
es
sub
lea
fwait
jmp
jmp
or
jg
sub
push
jnp
imul
and
dec
icebp
push
pop
adc
mov
sub
call
sbb
cmps
push
mov
jmp
movs
pop
mov
and
dec
xchg
aaa
push
repz
cld
adc
retf
xor
test
pop
out
cmp
(bad)
movs
inc
and
cld
shl
mov
add
and
sbb
mov
aad
dec
cmp
jl
out
aaa
sub
mov
mov
dec
add
jecxz
js
test
cmp
adc
rcr
xchg
jmp
xchg
lods
js
loopne
cmp
xchg
nop
cmp
jae
sub
xor
or
pop
xchg
mov
and
retf
adc
in
mov
xor
mov
cs
mov
cmp
addr16
ss
rcl
add
in
imul
mov
(bad)
jecxz
push
and
dec
mov
pop
loope
mov
inc
test
int
adc
sbb
icebp
nop
sbb
jl
call
stos
inc
outs
push
fbld
pusha
mov
xor
(bad)
pop
add
test
inc
imul
xchg
gs
inc
into
mov
cmp
pop
(bad)
(bad)
fisub
xor
movs
xchg
fist
into
shr
addr16
xor
cmp
or
and
sahf
mov
fwait
cwde
out
out
in
fisttp
adc
nop
in
pop
dec
jecxz
aaa
pop
mov
cmp
outs
repnz
dec
icebp
mov
cmp
fild
(bad)
xchg
inc
(bad)
loopne
jb
cli
adc
adc
mov
retf
cmps
fisub
jge
pushf
mov
mov
(bad)
shl
shl
call
data16
add
jnp
mov
cmp
mov
or
mov
mov
pop
xchg
inc
inc
aaa
sar
movs
adc
outs
xor
idiv
pop
pop
fdivr
fdiv
fwait
test
popa
jge
sub
sub
test
fidiv
aas
retf
dec
imul
mov
xor
xor
push
jmp
and
sub
adc
adc
dec
sub
je
mov
push
lahf
xor
mov
hlt
loope
dec
js
or
iret
fistp
fsub
dec
xor
not
jl
stos
jge
push
sub
xchg
icebp
rcl
pop
xchg
cld
sbb
jg
and
xchg
sbb
mov
dec
out
jmp
mov
push
jg
inc
cmps
and
cmp
mov
mov
xchg
lock
popa
inc
mov
and
retf
outs
jmp
ret
jp
clc
jmp
fld
popf
xor
push
sub
xor
(bad)
(bad)
xlat
mov
stos
fs
sbb
or
ss
and
jmp
stos
mov
xor
pop
pusha
xor
xchg
movs
call
sar
mov
jp
cmp
pop
pop
out
std
pop
aaa
sbb
pop
(bad)
jl
sbb
jmp
pop
scas
stc
push
jle
jb
xchg
pop
dec
outs
fwait
sub
retf
outs
lods
jle
jg
jmp
fmul
inc
mov
and
dec
add
dec
clc
jle
adc
pop
mov
mov
jbe
int
sti
les
push
es
mov
xchg
xor
and
stos
nop
sub
jbe
fidivr
adc
adc
adc
push
out
and
adc
dec
imul
in
add
test
pop
daa
stos
or
fcmovb
les
pusha
jae
and
push
inc
ds
mov
inc
xchg
(bad)
stos
mov
and
sbb
add
rcr
or
add
mov
lock
cld
(bad)
mov
gs
cmps
loope
pop
test
mov
push
push
ds
lds
or
(bad)
fsub
adc
aad
cmp
dec
inc
je
mov
mov
pop
scas
fadd
cmps
sub
mov
push
push
mov
inc
iret
cmps
repz
sub
pop
xor
pop
dec
lods
(bad)
out
adc
jno
fs
shr
inc
mov
dec
mov
lock
push
xchg
xor
sbb
or
fwait
xchg
sbb
inc
push
das
fwait
(bad)
cmp
mov
call
repz
and
les
mov
inc
loop
pop
sub
add
jecxz
idiv
or
dec
jnp
push
push
push
cmps
mov
(bad)
dec
jle
mov
push
and
in
dec
aas
cmps
fmul
fcom
mov
(bad)
cmps
(bad)
movs
jg
call
int
or
aam
addr16
in
sub
jg
je
data16
cmp
sub
add
outs
pop
inc
neg
cmp
adc
jnp
and
jmp
push
jns
mov
(bad)
aas
inc
xor
add
sub
cmp
or
jl
mov
adc
mov
cmp
dec
mov
or
div
ins
mov
retf
fmul
call
enter
jnp
or
add
mov
mov
in
push
push
or
fadd
pusha
repz
cmps
pop
fs
mov
adc
sar
jg
loopne
or
xor
shr
push
mov
sbb
mov
mov
push
xchg
add
cwde
jg
loop
fwait
sbb
mov
je
push
cmp
out
pop
pop
mov
jns
neg
sbb
jge
xlat
pop
jmp
mov
ins
gs
push
lahf
fisubr
mov
push
xchg
repnz
pop
push
(bad)
jns
in
mov
mov
call
popa
pop
or
cmp
push
(bad)
adc
mov
imul
cmp
jo
mov
mov
sub
fisttp
ret
xchg
xor
imul
(bad)
mov
mov
inc
push
mov
idiv
inc
pop
inc
push
push
test
inc
sbb
adc
adc
adc
loopne
jae
lods
or
and
sub
pop
pop
adc
sub
pop
xlat
repz
ret
xchg
mov
or
fidiv
pop
in
mov
mov
neg
loopne
xchg
pusha
cmp
xchg
ds
mov
push
mov
xor
pop
mov
repnz
es
call
mov
mov
(bad)
adc
outs
scas
std
aaa
cmp
int
icebp
mov
ficomp
pop
arpl
sbb
xchg
ss
movs
xchg
out
jle
sti
add
dec
mov
xchg
cdq
ret
ret
test
push
xchg
int3
in
xor
das
sbb
in
std
sar
test
into
push
sub
rcl
popf
fs
mov
dec
xor
xchg
inc
ss
lea
call
fcomp
sar
mov
outs
dec
jae
arpl
add
pop
cmp
or
loope
dec
mov
fist
and
sub
and
cmp
inc
sub
add
nop
fcomi
dec
popf
or
xor
cmp
jl
std
rol
and
fs
and
dec
pop
mov
jle
mov
shl
mov
aad
dec
mov
fdivr
mov
jnp
dec
cmps
xor
jnp
xchg
outs
pop
test
retf
cmps
mov
shl
fs
in
test
mov
js
pop
lods
and
mov
dec
inc
sub
leave
jno
fldcw
stos
and
mov
ror
jecxz
and
xchg
push
xor
push
jecxz
ss
pop
and
fld
fcom
xchg
xlat
cmps
clc
mov
aam
adc
inc
mov
dec
inc
mov
push
aas
bound
scas
stc
lahf
xor
cmp
jle
dec
and
(bad)
loop
mov
in
or
push
(bad)
or
outs
adc
pop
mov
lds
cld
mov
xchg
call
push
retf
adc
mov
jae
sti
test
lods
mov
add
push
inc
mov
cwde
and
sahf
jecxz
pop
fist
xchg
fs
push
ds
dec
nop
mov
sbb
jl
push
dec
mov
aam
push
jp
loope
das
and
adc
imul
cmc
outs
loopne
shl
out
pop
mov
xor
loopne
cmc
je
jle
sub
add
in
dec
cmps
push
jmp
add
jle
dec
pop
add
pop
shl
imul
cmp
ja
cli
dec
sub
int
cs
jnp
enter
jle
jecxz
cmp
or
and
fiadd
pop
sub
dec
ret
arpl
xor
mov
mov
stos
inc
ror
movs
dec
or
mov
push
rol
call
int3
inc
daa
mov
ret
jnp
ins
rcl
test
xor
clc
fwait
paddusw
inc
aaa
test
call
jmp
xchg
dec
or
or
add
sub
dec
cmp
xchg
sbb
ins
mov
sub
inc
mov
mov
pop
sbb
jp
push
xchg
cmps
xchg
shr
out
sub
add
mov
movs
cdq
mov
adc
or
push
data16
fst
mov
popf
sbb
imul
popa
inc
dec
inc
xchg
bound
or
mov
pop
ficom
retf
adc
jae
lods
cwde
jp
lods
stc
stos
xchg
cmp
mov
mov
jb
jmp
sahf
sbb
jo
mov
cmp
inc
add
cmp
push
cmp
push
popa
mov
lods
or
mov
addr16
and
aam
xor
scas
or
in
pop
add
cld
pop
xchg
sar
mov
sub
je
adc
and
cmp
xchg
pop
outs
fs
mov
xchg
retf
or
xor
mov
icebp
and
push
mov
xor
mov
fistp
pop
fucomi
outs
pushf
mov
push
aas
or
mov
out
popa
add
enter
jmp
add
arpl
stc
sahf
adc
push
sbb
(bad)
lock
cmc
cmp
out
sar
mov
xchg
aad
sbb
mov
push
sub
jp
jbe
adc
in
mov
inc
xor
add
movs
mov
test
fwait
xor
fld
imul
call
adc
adc
push
outs
sub
or
adc
jae
out
dec
cmp
push
xchg
jge
into
test
clc
mov
inc
inc
enter
sbb
retf
retf
movs
ins
rcr
inc
adc
cmp
scas
fdivr
cmp
test
xor
jb
out
mov
test
in
mov
stc
pop
cmp
(bad)
jmp
xor
push
push
sar
dec
push
(bad)
int3
jg
stos
(bad)
add
mov
xlat
inc
ret
fdivr
sbb
jb
jmp
cmp
mov
add
das
dec
shl
stos
mov
or
push
and
push
icebp
mov
retf
push
mov
clc
cdq
mov
jg
mov
ret
sti
jcxz
inc
stos
mov
sbb
pop
mov
test
dec
mov
andnps
les
call
ror
cmp
fcmovu
push
(bad)
jnp
out
push
out
cli
in
sub
sbb
sbb
push
cmp
jle
cmp
sub
pop
fcomp
leave
mov
dec
js
lods
mov
dec
mul
adc
inc
mov
ins
xchg
jmp
(bad)
test
in
imul
shl
shl
or
jmp
adc
ror
idiv
add
mov
xor
sbb
sbb
mov
int3
mov
mov
sub
jno
rcr
popf
fadd
cdq
xlat
push
sar
pop
add
outs
add
xor
or
push
out
cmp
pop
xlat
jns
repz
dec
and
inc
mov
inc
pop
ja
pinsrw
and
in
rol
add
dec
js
dec
mov
lock
iret
cmc
push
push
adc
jbe
mov
aam
adc
cmc
gs
dec
cwde
icebp
adc
mov
shl
ins
jb
xor
imul
cli
mov
xor
gs
pop
adc
push
pop
into
mov
(bad)
daa
nop
push
push
repnz
sub
subps
mov
adc
test
xchg
not
mov
push
mov
add
and
push
jnp
cmps
out
inc
dec
inc
test
test
sub
xchg
std
fiadd
pop
inc
and
dec
call
mov
ret
push
dec
push
and
outs
dec
ret
std
dec
inc
and
out
fsubp
out
fstp
imul
cmp
mov
dec
cmp
mov
sbb
jno
sub
and
cmp
(bad)
shl
xchg
repnz
fdivrp
add
push
xchg
icebp
nop
xchg
cmc
cwde
push
cmc
and
std
iret
jbe
outs
mov
xchg
fnop
xor
xor
dec
inc
add
scas
les
sub
mov
inc
dec
in
xchg
or
je
jecxz
out
xchg
outs
daa
push
repz
stos
fcomp
add
jg
lods
dec
scas
sbb
iret
call
add
fstp
mov
mov
jmp
add
adc
add
in
push
mov
mov
dec
(bad)
rcr
xor
add
jae
imul
inc
xchg
int3
inc
mov
int
and
dec
(bad)
popa
sub
cmp
xchg
repnz
fnstenv
fiadd
imul
in
imul
mov
dec
jmp
scas
sub
mov
ss
mov
adc
xchg
outs
inc
rcr
arpl
or
mov
jbe
inc
and
scas
and
mov
fstp
in
jb
inc
dec
ror
pop
retf
xchg
lea
cmp
sub
test
pop
xchg
pop
shl
xchg
xchg
jp
call
push
icebp
mov
ret
dec
jnp
div
cs
and
cwde
xor
scas
scas
lock
sub
mov
cmc
mov
repnz
xor
pop
hlt
mov
jmp
stos
sub
imul
sbb
(bad)
les
stos
(bad)
mov
sub
inc
push
mov
pop
(bad)
mov
cdq
into
sub
cdq
xor
jno
stos
xchg
hlt
stos
mov
pop
ds
xlat
pop
nop
enter
dec
(bad)
xor
test
mov
push
xor
mov
adc
imul
pop
pop
mov
stc
add
fst
aaa
cmp
sub
std
push
mov
repz
outs
pop
push
out
div
ja
pop
test
in
jmp
loop
out
push
js
jge
mov
or
nop
sub
adc
mov
or
jmp
sbb
inc
fst
jb
pop
mul
mov
push
add
in
rcl
cmps
inc
sub
lods
lods
aad
dec
cwde
clc
cmc
mov
ret
outs
sar
and
sar
fidivr
jecxz
pop
ins
add
icebp
inc
inc
movs
inc
sahf
push
push
xor
or
push
test
add
repz
sbb
dec
jnp
outs
arpl
les
xor
sbb
addr16
push
sub
je
and
mov
inc
and
mov
inc
pcmpeqd
imul
ja
adc
pop
fcmovu
mov
les
ins
shl
add
jmp
into
inc
fistp
ss
pop
mov
jl
fst
pop
repz
dec
jmp
js
bswap
retf
(bad)
mov
es
arpl
iret
fwait
cmc
mov
xor
not
imul
retf
fcom
or
cmp
push
retf
xchg
outs
mov
stc
xor
jns
inc
repnz
mov
test
outs
lods
ds
mov
push
jb
sbb
jmp
fild
mov
sbb
mov
pushf
fbstp
das
int3
mov
ror
arpl
invd
push
ret
and
push
nop
rcr
and
das
mov
mov
cld
inc
test
jmp
xchg
in
adc
repnz
push
fadd
cmp
cmp
pop
sub
inc
sbb
mov
mov
test
mov
lods
cmp
dec
push
cmps
aam
cli
ficomp
cmp
imul
sub
mov
mov
into
imul
pop
cdq
int
adc
popa
sahf
pusha
jecxz
icebp
into
ss
mov
or
sbb
out
inc
pop
adc
push
scas
push
mov
adc
cli
dec
outs
nop
mov
mov
lea
fisub
movs
stc
sbb
ins
out
data16
sub
out
ret
lods
pop
fsub
pop
jbe
xor
sahf
adc
add
cmp
je
jno
or
sbb
icebp
ss
mov
call
jbe
push
loope
add
scas
(bad)
lock
cmp
icebp
fwait
xchg
sahf
sub
inc
pop
out
pusha
test
xchg
cs
cli
mov
dec
sub
mov
mov
iret
sbb
xchg
adc
pop
mov
cli
jae
xchg
jge
ds
fwait
fwait
cmps
add
pop
add
loop
dec
cmp
mov
lds
stos
dec
jo
aas
push
fild
mov
add
repz
clc
mov
mov
das
jnp
mov
sub
mov
mov
xchg
add
pop
lods
fyl2x
fistp
test
cmps
out
retf
add
dec
stos
pop
push
pop
test
add
(bad)
shr
test
das
jne
mov
pop
cmp
sub
and
push
xchg
cmp
add
lahf
jne
sub
hlt
cmp
sbb
call
cmp
dec
cli
and
add
push
movs
ret
dec
ds
inc
in
or
push
in
inc
inc
mov
mov
out
ror
adc
and
mov
leave
and
loop
aad
inc
ficom
ficomp
and
push
enter
imul
jg
sub
ds
loop
loope
(bad)
movs
ss
or
retf
jmp
inc
pusha
enter
loopne
cmp
xor
test
pop
arpl
nop
jnp
(bad)
cmc
aad
add
das
xchg
test
cs
cmps
add
aaa
imul
enter
push
mov
inc
and
cmp
pop
daa
mov
xchg
pop
jo
inc
dec
jmp
jno
sahf
lods
jb
and
push
sbb
jae
outs
mov
cmc
fcmovne
mov
adc
mov
clc
jmp
sahf
icebp
stos
shl
pop
jp
shl
xlat
mov
cmpxchg
in
shr
cmp
adc
mov
in
lock
daa
enter
shl
fwait
icebp
fs
int
sub
xchg
push
and
mov
into
dec
jbe
stos
adc
cs
js
and
repz
push
inc
pop
sbb
sbb
xor
jbe
pop
and
xchg
retf
or
rcr
loopne
pop
jns
dec
jb
imul
test
lahf
xor
mov
cdq
out
push
xor
fbld
shl
shr
or
sbb
xchg
cmc
cmp
call
or
xchg
jae
sbb
test
jno
inc
in
fs
stos
jo
ins
and
(bad)
sub
sbb
add
cs
dec
in
xchg
nop
push
mov
xchg
dec
popaw
fstp
enter
sbb
mov
shl
in
push
aaa
sahf
int3
pop
cmps
inc
(bad)
iret
ror
mov
iret
je
rcr
fcomp
bound
adc
out
push
pop
mov
push
outs
or
call
cdq
outs
pop
cld
js
loop
gs
jae
push
push
cmp
push
adc
jns
and
mov
sbb
sub
adc
or
hlt
retf
shl
mov
out
add
ds
and
test
xor
xchg
pop
and
adc
adc
adc
out
loope
mov
loope
lds
inc
js
pop
jmp
jo
fimul
sbb
daa
ror
rol
xor
shl
test
jmp
mov
push
stos
mov
aaa
movs
mov
repz
call
jge
fiadd
vmovupd
stc
xor
sahf
push
outs
and
jnp
mov
adc
sub
rol
ret
mov
and
mov
lea
adc
jg
dec
jbe
push
movs
das
call
loope
mov
xor
aam
cmps
mov
pop
add
sbb
enter
cmp
dec
aam
add
nop
(bad)
fs
scas
sub
rcl
jp
ja
arpl
jmp
mov
out
jl
repnz
jns
push
test
cli
hlt
js
hlt
into
mov
stos
(bad)
xlat
icebp
xchg
mov
loop
xor
inc
lods
push
xchg
mov
mov
sahf
les
sti
mov
sub
popf
(bad)
lea
adc
sbb
clc
xchg
xchg
addr16
and
pop
pop
(bad)
daa
test
repnz
pop
repz
push
dec
nop
jb
and
(bad)
xor
imul
loope
mov
jle
leave
xchg
push
mov
loop
jecxz
gs
mov
xchg
daa
imul
and
and
jbe
mov
mov
loopne
sbb
mov
jb
xor
sbb
pop
sub
frstor
push
or
sar
jo
cmps
xor
pop
xor
mov
and
xchg
shl
outs
daa
arpl
xor
imul
push
mov
sub
test
adc
cli
dec
mov
aas
or
cli
rcr
ins
leave
dec
test
xchg
aad
and
int3
jl
scas
sbb
sub
fldenv
adc
adc
(bad)
sbb
push
and
or
mov
das
retf
addr16
(bad)
mov
sub
add
test
add
addr16
jle
ins
inc
shl
out
and
push
std
push
and
and
(bad)
lock
jne
sub
sub
sahf
pop
push
add
cmp
pop
sbb
dec
fimul
pop
repz
out
test
sub
xchg
jp
xor
(bad)
data16
bound
call
push
push
jno
dec
jecxz
outs
test
mov
(bad)
jg
jp
mov
shl
cdq
(bad)
adc
push
push
scas
jns
(bad)
mov
mov
fs
jecxz
hlt
mov
mov
shr
and
sub
das
jo
stos
jnp
cmp
rcr
add
inc
jmp
add
mov
adc
mov
push
push
push
jb
fwait
jo
xor
stos
es
ds
mov
xchg
dec
je
inc
cwde
mov
add
js
xchg
ror
mov
ins
xchg
inc
movs
out
scas
mov
jl
cli
cmc
(bad)
mov
test
cmp
sub
dec
fcmovne
xchg
movs
repnz
add
cli
fcomip
js
cmp
bnd
int
mov
mov
test
outs
jae
dec
loop
sub
retf
nop
pop
inc
dec
push
dec
mov
inc
xchg
bnd
es
pop
mov
cld
bound
cmp
xchg
fnsave
adc
sahf
pop
add
inc
hlt
hlt
push
and
call
outs
fiadd
call
sahf
hlt
adc
mov
pop
jg
int
dec
es
cli
out
std
cmp
retf
fwait
pop
lods
jecxz
jne
daa
leave
ret
outs
enter
jg
sbb
jle
fild
mov
ins
aam
es
mov
mul
enter
fs
cmp
into
dec
lahf
xchg
lahf
test
cmp
cwde
and
cmc
jge
sub
xlat
add
arpl
xor
call
add
inc
lea
stc
aam
out
sub
inc
in
dec
into
ss
pop
clc
out
movs
(bad)
fldcw
add
js
mov
div
std
push
adc
cmps
cwde
pop
out
test
and
in
out
hlt
add
movs
not
stc
jl
adc
cmp
(bad)
icebp
icebp
sbb
push
pop
mov
ins
sub
into
fldenv
fwait
pop
stos
inc
add
add
cmp
stc
iret
sbb
scas
sbb
addr16
ins
cmp
sbb
mov
sub
dec
adc
pop
jecxz
sti
in
test
test
or
cmps
add
loope
mov
mov
(bad)
movs
arpl
xor
aam
ins
sub
cmc
mov
pop
inc
stos
sub
loop
push
test
outs
mov
jg
cwde
mov
movs
retf
add
push
aad
data16
push
push
mov
and
add
push
ds
fwait
mov
mov
and
jmp
cmp
test
stos
psrld
aad
int3
xor
jns
shl
in
jo
adc
mov
out
aaa
push
xor
or
jge
cmp
in
inc
aas
call
push
pusha
dec
dec
mov
sbb
push
jl
mov
mov
out
push
stc
int
int
faddp
xor
bound
xchg
xchg
cmp
inc
dec
and
xchg
push
jbe
dec
movs
mov
inc
leave
sub
and
ins
ss
test
cs
mov
xor
test
adc
test
ins
adc
adc
push
clc
ror
jmp
and
xchg
popf
out
stc
out
or
inc
jnp
shr
pop
xor
cmp
mov
mov
dec
and
sub
mov
sub
(bad)
stc
ins
add
mov
push
aad
dec
xor
es
int3
adc
jecxz
jb
sub
sub
in
les
add
retf
mov
pop
shr
jp
fisttp
pop
hlt
jns
and
loopne
xchg
repz
cmp
idiv
xor
movs
xor
xor
cmp
or
(bad)
hlt
lock
bound
push
pushf
cdq
jbe
jno
sbb
cmp
inc
inc
in
dec
mov
ins
rol
repz
hlt
jmp
sub
lds
ret
les
and
(bad)
mov
add
mov
fdiv
adc
fidiv
pop
aam
cmp
sub
ret
cmp
leave
xchg
(bad)
pop
shl
nop
inc
sub
loop
jle
movs
xchg
lds
cmp
and
and
jmp
and
jecxz
movs
mov
jne
dec
sbb
dec
lock
jns
call
dec
jne
call
data16
xchg
push
test
dec
push
cwde
push
push
pop
adc
sbb
fnstcw
sub
mov
mov
lods
pushf
push
sbb
in
(bad)
shr
test
xchg
cwde
mov
jne
stos
push
rol
pop
cwde
xor
pminsw
nop
rcl
loopne
bound
je
cmp
sbb
bound
sbb
dec
ds
cmps
pop
inc
adc
dec
(bad)
ds
mov
cwde
mov
xchg
mov
mov
ror
das
stos
inc
mov
mov
pop
loopne
outs
test
test
cmp
mov
in
ret
stos
retf
push
pop
js
scas
(bad)
inc
jo
push
dec
sub
iret
lahf
pop
lds
lahf
ret
sub
or
adc
mov
jmp
aad
dec
or
push
das
push
arpl
loope
add
xchg
mov
pusha
pop
das
fsubr
sbb
je
(bad)
cmp
fisttp
int
fistp
dec
gs
dec
dec
(bad)
jmp
(bad)
pop
mov
cmc
fild
cli
repnz
mov
aas
pop
fbstp
fdiv
call
stos
or
ret
jbe
cld
mov
mov
xchg
push
test
adc
cmp
xchg
imul
(bad)
in
int
stos
inc
fnsave
cmp
neg
cdq
sub
sbb
dec
or
outs
ror
pop
xchg
outs
mov
push
fadd
xchg
pushf
or
sub
into
repz
push
adc
je
adc
or
movs
out
cmc
sub
ficomp
pop
dec
fld
ins
adc
dec
aas
imul
into
add
mov
jb
mov
shl
lea
in
test
mov
and
xchg
imul
jbe
jp
cli
addr16
jb
add
push
pop
add
mov
add
repz
or
adc
xor
pop
lock
test
jno
out
bound
push
add
mov
bound
cmp
push
add
push
jb
lods
cmps
adc
imul
stos
in
inc
retf
push
ret
sbb
fsubr
push
xchg
or
test
or
sbb
dec
pop
jl
(bad)
push
mov
xchg
mov
inc
sahf
repz
adc
pusha
sub
scas
add
popf
jg
mov
rcl
das
mov
dec
mov
sbb
pop
jno
lahf
pop
aad
or
das
jecxz
cmps
mov
iret
das
adc
add
in
stos
or
retf
jle
call
jbe
stos
xchg
or
jnp
cmc
jo
jb
jmp
dec
in
xor
mov
pusha
push
adc
out
f2xm1
(bad)
pop
inc
ror
push
mov
cmps
jbe
jae
sub
mov
mov
repz
inc
push
add
add
xchg
lds
push
mov
enter
push
loop
sar
sub
adc
repz
enter
adc
jb
jne
mov
jmp
ret
cwde
dec
xchg
push
xlat
pop
cmp
xchg
ss
jb
test
xor
ror
int
inc
mov
mov
cmps
cdq
(bad)
stc
xchg
inc
cmp
mov
loopne
cmp
mov
mov
jmp
mov
mov
in
mov
and
bound
add
mov
mov
push
jg
push
mov
dec
mov
arpl
test
sub
push
cmp
cmp
loop
xchg
idiv
mov
dec
pop
out
icebp
js
loopne
mov
enter
mov
jo
inc
jp
gs
int3
xor
dec
jmp
mov
inc
push
pop
call
dec
dec
adc
mov
sti
dec
push
dec
daa
repz
jns
sub
sbb
xchg
popf
arpl
and
call
lods
xor
hlt
movs
mov
iret
jecxz
xor
add
jp
sub
pop
out
mov
lahf
lods
or
sbb
in
ret
ins
retf
mov
sti
and
mov
mov
xadd
aad
xor
mov
das
daa
or
inc
xchg
inc
imul
sbb
data16
push
dec
cmp
or
lods
stos
adc
pop
nop
fisttp
dec
jo
inc
clc
test
sub
mov
jne
imul
pop
test
add
pop
jmp
sub
mov
leave
sub
nop
repnz
push
mov
push
and
fld
into
xlat
bound
lds
dec
fisubr
or
fsub
xor
(bad)
outs
sbb
xor
ret
call
lods
xchg
add
sub
push
pop
jmp
jecxz
pop
cwde
ds
and
fisub
pop
(bad)
ins
add
int
cmp
cmp
dec
sbb
cld
fstp
mov
fs
lea
or
dec
inc
mov
push
mov
pushf
pop
(bad)
cld
xchg
or
inc
fldenv
jno
stos
pop
cmp
sub
das
icebp
pop
xchg
jmp
int
dec
(bad)
daa
and
mov
jle
adc
into
aaa
cmp
jmp
add
cmp
jne
pop
pop
jl
mov
(bad)
mov
lea
sahf
mov
shl
adc
and
mov
dec
lods
aam
ret
call
and
jne
icebp
aas
xor
lods
out
dec
out
and
gs
ds
(bad)
pop
cmp
ins
daa
aam
sub
mov
int3
in
mov
mov
addr16
xor
pop
imul
imul
rcl
mov
rol
ror
and
dec
cld
mov
xchg
jns
mov
lock
push
mov
lea
les
pop
xor
pop
mov
jno
push
mov
stc
retf
ss
add
push
in
dec
xor
xor
cmp
pop
cld
sbb
and
cdq
adc
shl
outs
aad
out
lods
adc
cmps
sar
xor
call
inc
sbb
js
(bad)
not
in
(bad)
xor
mov
adc
push
mov
add
or
sbb
cld
jge
jbe
int3
sub
icebp
cmps
sbb
out
jge
inc
push
jno
mov
sar
icebp
lahf
sbb
lock
movs
ret
jns
mov
scas
dec
push
loope
sbb
leave
sbb
push
xchg
inc
test
outs
adc
pusha
add
(bad)
scas
dec
jo
int3
push
dec
retf
bound
je
pushf
fmul
adc
mov
out
sbb
es
in
pop
out
xchg
aaa
xchg
cmp
fistp
sub
out
shr
push
dec
test
enter
and
call
iret
fwait
dec
mov
or
jge
neg
fxch
dec
mov
icebp
mov
jae
add
inc
(bad)
dec
xchg
mov
test
dec
push
cmp
inc
cs
iret
sbb
lods
imul
cmp
cmps
adc
xor
std
xchg
pop
popf
pop
cwde
or
in
inc
in
cmp
jp
rcl
int
rcl
adc
cmc
test
out
inc
hlt
push
fisubr
mul
call
inc
add
ror
sahf
aas
test
mov
jmp
call
mov
rol
push
hlt
sbb
lods
in
xchg
outs
cs
xchg
inc
test
in
xor
mov
add
jae
xchg
sbb
mov
int
push
xor
inc
jmp
je
push
adc
xchg
(bad)
popf
pop
xchg
push
sbb
cmp
adc
je
fild
out
inc
sete
dec
mov
xor
fsubr
mov
fadd
xor
adc
jno
sbb
arpl
scas
dec
inc
adc
mov
xor
or
and
mov
fdiv
icebp
sti
sub
xchg
xchg
mov
lds
push
cwde
aad
xor
pop
mov
out
fisttp
or
test
ss
pop
mov
lahf
jecxz
(bad)
dec
jb
dec
scas
xchg
ja
fsub
popa
mov
xchg
jbe
add
xchg
icebp
push
repnz
mov
push
pop
ret
ret
adc
sbb
jp
les
fucom
clc
add
(bad)
add
(bad)
leave
adc
or
mov
iret
das
jmp
test
sub
mov
aam
leave
xor
xor
test
popa
add
jno
mov
jmp
add
ret
jae
mov
bound
aas
movs
cmps
sar
out
fnstenv
xor
shl
pushf
push
mov
dec
cld
sar
fwait
std
pop
xchg
pusha
push
in
dec
xchg
sub
and
xchg
cmp
mov
ja
or
jle
fistp
mov
jb
or
jbe
sub
data16
std
test
std
sub
mov
xlat
hlt
and
dec
loop
jle
in
push
push
cli
ss
shl
mov
xor
fbstp
sti
inc
and
pop
aad
or
jmp
mov
dec
add
mov
pop
mov
adc
add
out
or
sbb
(bad)
into
dec
mov
ffree
mov
jno
call
xchg
push
push
(bad)
sti
ror
jmp
sub
ja
dec
daa
inc
pop
loope
cmps
adc
out
and
push
mov
fnstsw
jb
xchg
ja
les
sub
gs
retf
lds
sub
dec
sub
addr16
js
sbb
mov
lods
shr
fdiv
sub
std
int3
mov
mov
adc
(bad)
fwait
dec
mov
shr
into
fild
icebp
cmp
sbb
rcr
jmp
xchg
dec
or
idiv
mov
jnp
mov
ja
add
pop
fbstp
lahf
scas
lods
pop
into
cld
push
inc
(bad)
push
inc
jb
dec
push
jno
mov
sbb
push
jns
jnp
cmps
cdq
jmp
nop
mov
pop
enter
cdq
ret
mov
gs
ret
and
and
ins
add
cmp
jbe
inc
sar
pop
and
pop
xlat
aaa
movs
push
dec
add
jbe
icebp
sub
fild
mov
pop
outs
loope
dec
ror
les
hlt
or
cmp
inc
int3
mov
adc
loope
faddp
adc
lock
sahf
jns
sbb
jg
nop
cmps
inc
pop
lods
nop
jmp
out
pusha
inc
(bad)
sbb
xor
imul
adc
push
inc
mov
jge
mov
push
gs
jmp
or
aam
dec
mov
dec
cmp
ja
shr
int
xor
and
imul
int
mov
mov
xor
xchg
jle
jg
bound
inc
(bad)
lods
mov
xor
mov
call
push
inc
in
push
rcl
jp
or
leave
or
and
adc
call
xchg
es
movs
adc
shl
fs
mov
(bad)
mov
inc
sub
ds
in
sbb
dec
repnz
jae
aam
pop
jmp
retf
xchg
dec
popf
push
inc
fsub
test
ret
mov
push
lock
jns
add
push
cld
sbb
addr16
repnz
cdq
dec
stos
xor
pusha
mov
loop
xchg
mov
push
inc
ss
inc
stc
pop
pop
dec
pop
mov
and
xor
jno
nop
sbb
jg
clc
jae
test
sbb
push
icebp
lahf
sub
cld
sbb
push
and
jge
iret
push
mov
and
data16
pop
xor
fnstcw
cmp
dec
cli
adc
mov
jecxz
aam
in
test
aas
and
xor
loope
mov
out
push
imul
movs
sbb
xchg
iret
xchg
add
or
xor
inc
psubusw
(bad)
popf
push
mov
in
push
cld
ins
(bad)
cmp
mov
add
call
and
push
dec
in
(bad)
scas
xchg
rol
sbb
mov
mov
jns
call
xor
add
aas
push
add
mov
fidiv
sti
cmp
aaa
jnp
dec
mov
cmp
push
stos
sbb
mov
out
dec
dec
xchg
call
int
mov
out
es
sub
push
adc
xlat
retf
cmps
idiv
mov
xor
lahf
stos
inc
aam
ins
rcr
jne
xor
cli
fsubrp
movs
xor
inc
sub
sub
adc
scas
or
and
in
mov
jmp
(bad)
mov
mov
pusha
inc
xor
sub
xchg
js
or
cmps
pushf
bound
imul
into
xchg
rol
stos
popa
jne
mov
sbb
push
sub
test
cmp
xor
push
test
shl
cmp
cmp
call
or
out
dec
push
jle
add
aas
lds
outs
add
loopne
scas
pop
aam
call
test
lods
mov
inc
sbb
ins
push
hlt
cdq
fs
fs
rol
jnp
inc
push
jo
in
aam
cwde
cmp
mov
ror
xchg
jne
mov
out
add
retf
adc
js
lods
ja
mov
and
xor
mov
retf
xchg
nop
cmp
xchg
mov
or
pop
mov
retf
push
inc
or
clc
rcl
(bad)
dec
int
inc
mov
fnstcw
or
inc
movs
jo
mov
adc
out
inc
popa
imul
dec
adc
or
jo
std
jno
sti
or
jb
fimul
pop
jmp
hlt
jb
dec
and
jb
jge
push
mov
sbb
(bad)
js
lds
enter
pushf
rcr
and
dec
xchg
clc
mov
in
mov
or
and
(bad)
push
data16
cs
pop
shl
cmp
ins
lahf
les
cli
inc
fs
mov
popf
mov
inc
inc
hlt
cwde
jmp
test
lock
jno
pop
into
loope
jg
loope
sti
inc
add
pop
and
push
push
iret
inc
mul
and
rcr
arpl
cld
adc
sub
mov
hlt
fld
enter
adc
aas
push
repz
xor
sub
push
cmp
mov
and
sbb
ret
(bad)
pop
mov
pop
add
es
arpl
scas
mov
jno
out
inc
mov
cmp
pop
pop
mov
push
mov
sub
xor
es
mov
fnstcw
cmc
(bad)
sbb
call
lahf
dec
jo
add
add
into
test
in
fcmovu
mov
ret
mov
sub
jns
pushf
mov
cmc
cmp
push
fldcw
inc
out
es
lea
adc
and
cwde
mov
mov
pop
call
xchg
xchg
or
sbb
sub
xchg
scas
adc
cli
cmps
js
in
(bad)
hlt
dec
xor
in
cmps
fiadd
(bad)
pop
arpl
and
jbe
mov
or
cmp
call
ss
push
xchg
mov
dec
call
push
fwait
ret
xor
push
retf
jge
test
inc
or
iret
push
imul
jg
fldcw
jb
push
scas
add
dec
push
sbb
jns
xchg
into
pop
data16
stc
in
jae
adc
ins
aas
jg
mov
pop
xchg
out
mov
fsub
imul
int
jecxz
movs
pop
adc
aas
icebp
xor
and
mov
cmps
xlat
out
push
inc
lea
scas
fdecstp
fsub
jb
rcr
gs
pop
aas
sbb
pushf
je
mov
mov
xchg
hlt
popa
add
cmp
sti
jns
aad
sar
clc
(bad)
cmp
xor
cmp
(bad)
ds
mov
sbb
mov
in
int3
call
mov
es
inc
lahf
mov
xchg
jnp
ds
aad
ja
push
jmp
push
push
xor
pop
mov
or
dec
loop
push
or
stos
or
nop
inc
mov
mov
lahf
loop
jl
pop
cs
dec
adc
lods
dec
inc
cwde
or
and
(bad)
xor
or
mov
push
stos
idiv
jmp
cmc
cmp
aam
pop
clc
jb
lods
jmp
js
push
mov
fwait
mov
movzx
int
adc
inc
inc
das
neg
sti
xchg
(bad)
ds
test
fnstenv
push
xor
cwde
jp
mov
repz
enter
sub
add
xchg
adc
push
sub
sub
scas
loope
add
mov
and
push
inc
dec
rol
test
xchg
dec
pop
shl
data16
jbe
pop
js
push
mov
jbe
dec
mov
cs
(bad)
lock
retf
retf
out
jne
cmp
shl
in
cmp
rcr
add
(bad)
push
rcr
dec
inc
pop
in
dec
test
sub
mov
fimul
je
(bad)
pop
lock
or
ret
iret
das
fisubr
rol
or
out
cdq
daa
loop
out
mov
loop
ficom
ret
mov
cwde
xlat
mov
les
and
dec
(bad)
ret
(bad)
jb
add
lds
xchg
ds
xchg
scas
js
test
jl
inc
push
hlt
ret
cdq
xchg
inc
mov
out
jg
mov
rol
in
mov
sbb
jl
lock
adc
sbb
ins
inc
out
addr16
jo
and
leave
ss
pusha
lock
aam
ret
push
cmp
loop
jp
test
int3
cmc
dec
ds
push
or
and
cmps
mov
mov
xor
clc
sub
ret
jg
into
fstp
ins
mov
ins
or
fidivr
fnsave
push
outs
pop
mov
je
jnp
movs
xchg
pop
daa
not
sti
mov
mov
imul
stc
enter
adc
and
or
std
fmul
mov
xchg
pusha
xor
das
sahf
ja
sub
pop
inc
sub
jno
jb
out
out
mov
mul
dec
jb
loopne
(bad)
mov
aas
fstp
clc
jbe
cmp
sub
imul
repz
adc
or
fwait
arpl
add
pushf
push
sbb
arpl
enter
jge
repz
ret
rcr
inc
mov
fidivr
or
xchg
mov
add
mov
push
cli
mov
adc
mov
push
in
inc
mov
jne
xor
mov
out
adc
cdq
xchg
lock
cmp
lock
dec
shl
cld
mov
inc
test
(bad)
out
aaa
popa
vpshufd
push
pusha
inc
lods
(bad)
(bad)
dec
je
fist
nop
fdivr
dec
gs
and
sbb
add
xchg
test
out
dec
pushf
sbb
mov
test
pop
add
cld
dec
xchg
shr
les
mov
mov
xor
add
test
retf
fwait
and
jmp
ret
push
xchg
pop
mov
add
dec
sbb
xor
adc
mov
dec
gs
pop
mov
pop
ret
and
push
adc
test
test
popa
jnp
aas
add
or
jno
inc
push
adc
enter
mov
stos
aad
call
push
jne
fmulp
stos
je
sbb
(bad)
pop
inc
outs
dec
test
jmp
fisttp
aad
push
jmp
add
pusha
inc
ror
cmp
pop
cwde
mov
jnp
or
movs
stc
sbb
add
mov
mov
ins
pop
dec
sub
std
xchg
add
jae
call
or
scas
sahf
xchg
xchg
mov
jb
fdivr
js
push
mov
adc
and
jae
inc
and
dec
cdq
test
hlt
adc
mov
push
repz
stos
pop
nop
inc
aam
jmp
jmp
pop
inc
call
fst
stos
(bad)
mov
loop
push
cmp
fstp
mov
inc
les
cmovl
rcr
aas
sub
out
out
fwait
push
xor
push
and
cdq
jecxz
and
into
in
dec
fwait
jle
push
sub
and
dec
pop
mov
(bad)
push
mov
xor
sti
pop
cmc
sub
pop
(bad)
mov
push
fdivr
xchg
outs
shl
sar
pop
pop
pop
cmps
mov
lea
fist
and
in
mov
adc
cmp
cdq
daa
adc
jno
dec
call
push
sbb
mov
mov
ret
and
jecxz
out
xchg
xchg
cmp
stc
retf
loope
push
dec
inc
je
xchg
sub
mov
xchg
sub
fwait
ins
pop
test
mov
jmp
aam
push
popf
les
shl
fild
mov
inc
ins
dec
aad
or
fwait
mov
dec
xchg
jmp
out
ss
or
loope
push
mov
leave
cmps
mov
out
xchg
jmp
xor
pop
cmp
in
ret
xchg
call
pop
or
jl
xor
sti
mov
out
dec
mov
cmp
xchg
mov
ins
xor
test
inc
fidivr
ds
sti
pop
fsubp
sbb
mov
shr
dec
xchg
lahf
push
add
or
add
out
adc
sub
shr
xchg
jge
pop
jecxz
xlat
add
ficomp
pop
fbstp
pusha
dec
pop
test
push
ret
mov
test
pushf
mov
hlt
mov
mov
inc
call
push
sti
(bad)
or
mov
push
gs
push
mov
mov
mov
mov
inc
sub
adc
cs
pop
jecxz
sub
jl
rol
jbe
pop
add
or
push
leave
inc
in
les
adc
aam
push
and
icebp
aaa
(bad)
outs
pushf
jmp
jge
mov
mov
push
mov
xchg
iret
enter
inc
mov
fadd
lock
aas
push
adc
push
push
gs
lahf
or
pop
dec
aad
movs
test
(bad)
xor
xchg
(bad)
cmp
ss
add
les
mov
(bad)
push
repz
xlat
enter
xlat
popf
mov
in
inc
dec
xor
xchg
jmp
sar
mov
test
push
stos
mov
dec
rol
inc
cld
ret
pop
xor
sti
hlt
pop
cmp
daa
push
das
inc
push
mov
jae
lods
(bad)
mov
(bad)
movs
xor
das
push
aam
mov
pop
cmps
jge
sbb
lahf
movs
add
shr
bound
movs
and
xor
out
add
retf
icebp
and
mov
sbb
xor
mov
sub
int3
ins
lea
add
rcr
adc
pop
cs
movs
adc
pop
mov
pop
mov
shl
push
int
mov
dec
ss
sbb
popa
dec
dec
into
jno
(bad)
(bad)
enter
sub
sub
pop
inc
jl
test
cmc
mov
ins
pop
sbb
xor
dec
(bad)
xor
jg
xchg
mov
jl
mov
mov
hlt
ret
bound
fild
adc
mov
mov
pop
into
fwait
push
addr16
mov
iret
je
div
sbb
cmps
ja
push
sub
pop
in
aad
xor
push
mov
xchg
gs
mov
aaa
push
sub
dec
mov
mov
inc
mov
fdiv
jecxz
or
push
(bad)
shr
push
sar
mov
pop
xor
sub
inc
leave
loop
jmp
repz
and
ds
cmps
sub
jb
jmp
aam
rcl
fisubr
add
mov
mov
fwait
pop
cmp
sub
sbb
or
stc
mov
enter
add
inc
std
mov
inc
pop
test
or
test
mov
cs
mov
js
or
adc
pop
cmp
push
jmp
xchg
fidivr
inc
mov
mov
(bad)
pop
pop
or
adc
mov
(bad)
in
lods
mov
test
ucomiss
inc
inc
outs
pop
call
(bad)
mov
cmps
ret
cmp
rol
jae
mov
dec
aad
jp
mov
scas
and
and
add
xor
push
pop
fs
das
inc
adc
loop
cli
test
jg
pop
inc
in
inc
les
call
sbb
push
stos
add
pop
in
aam
mov
sbb
pop
lods
and
adc
out
adc
sbb
(bad)
mov
test
pop
jmp
rcr
(bad)
mov
push
and
lods
in
inc
punpcklwd
dec
cmp
xchg
mov
sbb
ret
jmp
data16
add
into
dec
aaa
inc
xor
mov
sbb
pop
daa
icebp
push
sub
sahf
aas
cmp
pop
sub
or
loopne
dec
xor
inc
out
jno
loop
daa
xchg
clc
rcr
pop
or
movs
sahf
movs
pop
pop
sub
out
pop
push
dec
mov
scas
fdivrp
xor
and
and
mov
add
mov
mov
fwait
arpl
and
test
out
fs
outs
test
push
mov
(bad)
and
cmp
dec
ret
push
mov
dec
inc
cmp
adc
jp
in
mov
sbb
xchg
add
shr
cmps
mov
popa
ins
out
mov
cld
in
(bad)
mov
ins
mov
aaa
imul
xor
xchg
fcom
cmp
retf
popa
dec
push
shr
xor
jne
pop
cmp
fidivr
mov
pop
or
or
jl
jmp
test
mov
or
adc
adc
jl
loop
sub
cmp
mov
test
icebp
inc
hlt
mov
xor
or
mov
std
ja
lea
cmp
repz
lock
fisubr
das
(bad)
xor
adc
aaa
xchg
mov
dec
mov
xor
sbb
int3
and
fcom
jno
mov
push
sub
int
mov
ja
adc
pushf
addr16
icebp
cmp
adc
(bad)
push
xchg
sti
add
jbe
inc
lods
sbb
mov
fisub
inc
lock
xor
out
fbstp
cwde
mov
or
cld
mov
mov
retf
dec
adc
add
jmp
fiadd
xor
push
call
iret
not
aas
pop
pushf
dec
cdq
dec
fstsw
lds
cwde
in
das
leave
dec
sbb
jns
mov
shr
pop
jg
mov
mov
into
neg
out
lock
data16
push
jecxz
jne
js
arpl
push
jmp
sbb
outs
es
js
lods
dec
rcl
xchg
mov
movs
mov
lds
pop
jmp
or
dec
add
ret
fisub
add
push
mov
daa
push
mov
daa
xchg
xchg
mov
mov
sub
fwait
aas
jecxz
rep
cmp
jg
mov
jns
jp
lods
jle
pop
mov
int3
xchg
lock
jg
xchg
cmp
call
jmp
xchg
int3
scas
scas
pop
ins
and
xor
add
lahf
cmp
call
xchg
pop
pop
xchg
push
fisttp
dec
xchg
in
inc
div
rol
jno
popa
push
mov
cmp
or
cmovne
jl
push
adc
cmp
retf
fbld
js
push
je
out
dec
scas
pop
pop
loope
push
(bad)
sbb
pop
mov
cmp
fst
cmps
shr
sub
(bad)
test
and
out
sar
dec
mov
je
movs
ret
sti
xchg
les
jg
out
sub
leave
fsubr
fild
sbb
clc
div
mov
sbb
gs
ret
xchg
and
dec
int
outs
xor
inc
xchg
into
aad
clc
enter
rcr
jns
stos
mov
adc
in
mov
jp
mov
and
inc
dec
cmp
shl
mov
imul
and
xchg
sbb
aad
push
adc
xchg
inc
sbb
cmp
jo
dec
into
out
adc
push
xchg
fadd
mul
cmp
in
push
inc
in
add
int3
add
dec
int
movs
jmp
cmp
jo
call
xor
push
mov
call
or
outs
inc
arpl
push
mov
int
mov
jge
mov
pop
movs
adc
mov
rcl
shl
popa
imul
xor
jo
sub
push
retf
cs
dec
shr
sti
mov
bound
in
or
iret
mov
or
inc
leave
add
mov
fldenv
inc
movs
movs
in
cmc
pop
mov
mov
xor
out
or
jg
into
scas
ds
jmp
xchg
popa
mov
mov
sahf
outs
sbb
lods
jmp
push
mov
sub
sbb
dec
loopne
nop
stc
sub
jnp
lahf
pushf
daa
in
or
outs
cmp
push
push
pop
iret
into
ret
stos
stc
bound
and
stos
rcr
mov
pop
fisttp
jecxz
mov
inc
outs
stos
push
lods
xchg
fst
bound
retf
nop
add
lea
inc
xlat
call
(bad)
test
adc
cmps
mov
jecxz
dec
xchg
adc
in
lea
out
sbb
sub
mov
cdq
js
hlt
bound
dec
out
mov
je
shl
jl
dec
or
push
sbb
cwde
fdivr
cs
cmp
xor
push
je
cmp
and
scas
pop
retf
retf
cmp
test
enter
jbe
cmp
cmps
mov
and
lds
ret
(bad)
pop
mov
scas
sbb
pop
inc
and
jmp
iret
stos
add
xchg
jle
sti
dec
xor
mov
je
dec
arpl
mov
gs
out
retf
hlt
pop
sub
ficom
frstor
out
loop
or
rep
das
retf
add
lahf
or
fidivr
jns
mov
call
cmp
in
xchg
cmp
inc
jg
mov
push
cmp
cmp
inc
push
sti
fwait
pop
jb
aaa
lods
fwait
mov
fdivr
and
inc
fild
loopne
cmp
mov
jle
jge
dec
repnz
mov
xchg
lock
popf
mov
mov
lods
pop
mov
inc
les
scas
inc
sbb
add
movs
xchg
or
pop
push
ins
push
xor
inc
inc
pop
push
hlt
jg
jecxz
stos
inc
sbb
cmp
pop
mov
push
mov
into
lock
mov
fwait
(bad)
or
ins
dec
jnp
fild
sbb
ror
jl
in
push
cmp
mov
test
add
in
jb
(bad)
cld
sbb
mov
hlt
(bad)
jmp
dec
mov
fbld
popa
repnz
sbb
dec
shl
bnd
add
lock
sbb
add
fs
add
pop
mov
(bad)
outs
dec
sub
mov
out
ret
mov
mov
nop
push
push
add
lds
cmp
retf
push
pop
xor
sti
ds
pop
inc
jns
not
mov
mov
pop
sbb
sbb
std
sub
push
sbb
inc
nop
ror
or
dec
or
iret
mov
or
and
xlat
movs
adc
mov
(bad)
outs
int
fs
out
sbb
test
mov
int
push
loop
popf
and
std
aad
adc
push
inc
mov
(bad)
sti
mov
(bad)
xor
mov
add
iret
out
retf
xchg
lock
pop
adc
push
mov
aaa
loopne
adc
sbb
xor
jmp
retf
ss
pop
fld
pop
das
dec
in
enter
sbb
jge
outs
call
cmc
loope
cs
test
std
out
loop
add
fisub
mov
xlat
push
mov
jl
ds
and
adc
pop
mov
out
sbb
aam
dec
cmp
pop
jmp
xchg
pushf
and
push
jnp
cwde
sahf
inc
iret
je
jno
dec
mov
pop
int3
inc
cmp
int
pop
xor
out
stos
lds
inc
dec
je
xchg
stos
add
inc
aaa
cmp
and
fdivr
cwde
or
leave
xchg
inc
push
cmp
out
mov
outs
jmp
stos
icebp
imul
sub
(bad)
dec
stc
mov
pop
aaa
sbb
push
sbb
mov
xlat
call
jmp
outs
mov
daa
div
xor
aas
push
aam
ds
cli
or
cli
and
gs
lock
push
loopne
hlt
fwait
push
(bad)
stos
sar
adc
dec
pop
imul
out
sub
and
int3
out
or
cmp
sti
jle
aas
push
div
sub
jp
mov
in
add
xchg
xlat
xor
mov
in
mul
mov
mov
xchg
sbb
ficom
adc
cmp
cmps
xchg
mov
jb
rcr
rol
mov
(bad)
cdq
and
lahf
sbb
out
push
call
dec
in
fst
cmp
leave
imul
jne
in
iret
xor
je
cmc
xchg
cmp
add
movs
dec
mov
popa
lahf
xor
into
stos
sub
scas
add
ss
push
xor
cld
ins
or
mov
mov
call
push
lds
xor
or
cmc
mov
and
pop
retf
int
inc
loopne
stos
mov
mov
xor
fdivr
push
repnz
or
push
fs
or
adc
mov
sub
cld
loope
dec
popa
jnp
repz
fsub
pop
cli
jl
cwde
pop
cmc
dec
mov
nop
pop
out
inc
jmp
cmp
arpl
pusha
fs
mov
popa
dec
retf
xor
dec
mov
aam
cmp
inc
and
adc
xor
dec
mov
mov
sub
dec
push
sub
xor
outs
pushf
jecxz
(bad)
rcl
mov
rcr
into
inc
popa
loopne
cmp
movs
ffreep
xchg
ss
(bad)
in
mov
xor
aad
test
or
add
sub
ins
xchg
dec
push
inc
push
mov
imul
pushf
in
push
xchg
out
push
mov
out
pop
loop
daa
fisttp
repnz
mov
int3
pushf
mov
fisttp
mov
(bad)
push
mov
dec
lea
sub
pop
shr
mul
xchg
cmp
test
into
int3
pusha
add
loop
or
inc
pop
xchg
jnp
push
dec
adc
push
aas
mov
sub
xor
lods
mov
jmp
sbb
jmp
jmp
gs
or
mov
dec
outs
jmp
inc
xchg
pop
cmp
sbb
adc
mov
or
lahf
mov
add
test
xor
aas
sub
xchg
mov
lea
(bad)
xlat
jno
or
stos
call
fld
inc
pop
iret
pop
sub
shr
in
arpl
out
cmp
es
cld
push
div
and
push
mov
or
mov
outs
jmp
dec
das
add
jmp
cwde
dec
dec
adc
jge
lods
sahf
xchg
add
pop
movs
cli
sbb
mov
jmp
(bad)
sar
pushf
mov
pusha
je
iret
test
xor
test
inc
xor
xor
fisttp
sbb
jmp
faddp
add
jp
aaa
adc
add
test
mov
xchg
push
push
pop
jns
mov
into
pushf
imul
shr
out
or
xchg
jb
jno
or
ins
jmp
jb
adc
mov
cld
and
outs
mov
mov
movs
cdq
cld
arpl
jecxz
stos
cmp
cld
test
retf
pop
dec
sbb
jnp
mov
stc
mov
mov
dec
daa
ret
push
in
jno
les
push
outs
fild
call
cmp
add
mov
repnz
into
fld
out
and
sar
cwde
stc
clc
xor
sbb
fstp
inc
xor
ret
mov
jbe
pop
fwait
enter
mov
jo
adc
repz
pop
out
xchg
xchg
fnstsw
pop
xchg
cmp
arpl
mov
outs
mov
stos
sbb
stos
std
fnsave
mov
push
xor
(bad)
movs
jbe
jno
sbb
test
and
and
cmps
inc
push
fidivr
ja
rcl
xchg
pop
js
jmp
dec
jns
add
(bad)
jmp
les
sbb
add
ss
adc
retf
add
pop
sub
sar
retf
cld
ret
cmp
jmp
mov
mov
pusha
fstp
mov
mov
inc
stos
pop
rcl
xchg
loop
pop
stc
shr
mov
or
push
int
rcr
(bad)
cmp
(bad)
adc
xor
mov
ins
cmp
push
cli
fsub
or
inc
out
xchg
push
add
lock
sub
adc
call
pop
ins
mov
faddp
aam
dec
out
pop
dec
repz
aas
in
push
cdq
lods
(bad)
mov
mov
aaa
push
mov
and
sbb
push
push
out
cmp
std
and
or
or
ds
popf
test
mul
imul
and
mov
and
scas
xchg
sub
mov
popf
xor
int
jmp
adc
outs
in
push
je
lock
mov
sbb
test
xlat
out
jp
jmp
xchg
test
js
xchg
hlt
sub
or
sub
push
out
pop
adc
test
(bad)
fist
call
icebp
ins
cli
add
sbb
mov
push
ss
lods
pop
or
cmp
push
push
jg
xchg
xor
int3
jp
fisub
dec
or
or
pusha
mov
push
xchg
fwait
sub
xor
push
iret
je
pusha
out
xchg
mov
outs
hlt
dec
add
mov
mov
mov
jg
push
repz
mov
in
(bad)
fnsave
push
movs
cmp
push
xchg
jecxz
mov
xchg
movs
lods
sub
std
cmp
bound
retf
pavgw
test
add
ret
fisttp
cmp
test
sub
sub
pop
add
in
pop
xor
retf
xchg
inc
cmps
jmp
push
stos
sbb
mov
repnz
fnstenv
inc
aad
leave
ret
scas
jmp
or
push
sub
mov
into
cmp
cmc
cdq
fild
sbb
cld
sbb
sub
push
xor
pop
aaa
xchg
loopne
mov
iret
lods
mov
adc
jecxz
ja
mov
in
nop
into
push
mov
cdq
adc
and
pop
pusha
ret
jl
shl
outs
daa
or
fidiv
pop
dec
les
lahf
cmps
fist
imul
popf
shl
dec
or
daa
jo
push
lods
lds
pop
pop
sbb
sahf
dec
into
xchg
repz
cmp
hlt
cmp
dec
retf
cmp
push
idiv
cmp
mov
mov
jp
jno
(bad)
arpl
shl
push
mov
cmps
mov
or
stos
xor
imul
add
cdq
mov
push
sub
jns
push
pop
leave
test
(bad)
adc
(bad)
in
or
xor
cmp
cmp
dec
xchg
jb
jne
mov
out
cmp
dec
mov
fs
out
jne
(bad)
xor
sbb
pop
dec
test
popf
pop
ret
cld
jo
xchg
mov
cmp
int3
shl
loope
dec
icebp
add
push
loope
shr
inc
add
cmp
xlat
repnz
dec
pop
sub
cmp
repz
adc
jns
nop
jge
mov
das
mov
sbb
adc
bound
or
sub
dec
inc
pop
mov
inc
pop
dec
shr
(bad)
sahf
fsubrp
or
pop
imul
jecxz
inc
jle
frstor
call
fcom
pop
mov
in
xchg
xchg
jb
aaa
in
idiv
ins
daa
fadd
or
aam
xchg
fisttp
neg
sbb
lea
adc
add
xchg
lfs
loope
xlat
sbb
or
lds
mov
jmp
pop
loopne
push
idiv
cli
gs
(bad)
push
test
pop
mov
out
data16
ficom
inc
(bad)
(bad)
leave
xor
sbb
test
iret
out
mov
or
ret
jle
adc
popf
xor
ror
mov
xor
test
adc
xor
jmp
jmp
jg
mov
cmp
arpl
mov
stos
inc
test
shr
inc
or
cmp
jle
aad
sub
jg
or
xchg
add
dec
add
nop
cs
pop
mov
cmp
in
cs
retf
pop
ja
dec
xchg
repnz
popa
xor
ret
fmul
aam
jne
fst
push
stos
jb
je
pushf
lods
mov
cli
daa
xchg
and
out
push
mov
int
sbb
fnstsw
xchg
leave
scas
in
daa
mov
xchg
and
adc
cmp
adc
mov
adc
fst
dec
dec
inc
dec
mov
out
and
in
dec
pop
push
sub
cmp
or
out
xchg
xor
push
mov
ja
mov
add
ficom
cli
pxor
jle
lea
cmp
jb
les
sub
leave
push
pusha
dec
enter
jmp
rcl
inc
cmp
movs
inc
(bad)
ins
mov
mov
iret
fidivr
sub
xchg
sbb
stc
pop
ja
int
pop
ins
push
lods
cmps
mov
dec
sub
push
jl
mov
pop
jo
xlat
cmps
pop
xchg
cvtps2pi
(bad)
push
jae
sub
cmps
adc
in
fwait
adc
idiv
mov
pusha
push
fimul
aaa
movs
ror
sub
ins
sbb
les
test
jbe
xor
jl
cmp
pusha
in
and
mov
cs
push
sub
retf
retf
hlt
loop
rcr
rcl
push
inc
test
mov
xor
jne
pop
add
inc
(bad)
xchg
sub
aaa
cmc
call
pop
popa
cmp
popf
mov
ret
push
arpl
enter
sahf
or
push
jecxz
mov
add
mov
test
ss
imul
push
stc
inc
(bad)
jp
add
scas
int3
xchg
icebp
dec
adc
rol
test
addr16
std
jns
add
call
sub
or
mov
xor
shl
lds
pushf
xchg
sub
pop
fldenv
and
test
sbb
movs
jo
jo
jmp
loope
jmp
test
pop
jmp
imul
and
jl
sbb
adc
(bad)
rol
mov
ins
inc
inc
jecxz
xor
jp
idiv
xor
in
push
jmp
cmp
shl
jmp
data16
into
mov
inc
mov
sub
dec
(bad)
fst
jp
stc
mov
pop
add
repnz
iret
and
stos
cmps
imul
(bad)
hlt
xor
and
mul
ds
jecxz
jmp
out
repnz
sahf
inc
push
add
push
aam
and
and
push
push
mov
loope
or
pop
jmp
mov
sub
loop
addr16
imul
xor
cdq
adc
mov
adc
ror
lea
loop
(bad)
sbb
ret
sti
inc
(bad)
data16
and
push
dec
rcl
retf
cmps
popa
jnp
xchg
xchg
stos
enter
ret
hlt
pop
xchg
xchg
leave
ret
mov
fld
out
cli
mov
cmps
jl
std
scas
pushf
out
jbe
jle
adc
ds
jns
mov
sti
cli
mov
test
dec
ss
jne
jno
lea
push
cmps
fstp
not
(bad)
push
mov
mov
push
mov
(bad)
cmp
arpl
ret
mov
(bad)
ins
out
pop
mov
sti
add
into
data16
sbb
mov
out
xchg
dec
mov
out
bound
jnp
or
out
daa
xor
arpl
test
ret
les
or
ret
xchg
rcr
jp
pusha
test
pop
out
xor
fcomp
js
shl
sbb
pop
enter
popf
adc
cdq
fcmove
repz
pop
je
sub
or
out
pusha
xchg
dec
push
scas
mov
jno
or
xor
add
jl
cli
ret
xor
add
and
mov
cmp
push
and
lock
popa
dec
js
gs
shl
dec
push
sub
mov
ficom
pop
xchg
hlt
jp
push
bound
(bad)
fsub
cmp
(bad)
(bad)
test
jae
enter
mov
mov
retf
retf
mov
stc
dec
add
in
test
adc
xchg
lea
test
loope
dec
lods
sub
fisttp
cs
mov
sub
ds
in
stos
push
stos
adc
sbb
(bad)
pushf
fstp
fsubr
dec
pop
retf
and
or
rol
pop
push
js
enter
sub
mov
lods
add
pop
mov
movs
mov
jb
inc
mov
jle
js
jne
cdq
addr16
cmp
enter
mov
mov
sub
arpl
xor
xor
mov
cmp
or
xor
int3
sbb
cli
int
movs
lods
cmp
adc
sub
in
add
xchg
leave
je
dec
dec
retf
clc
dec
cs
cmp
dec
jge
dec
outs
xchg
fcmove
mov
psrad
popa
and
and
inc
xor
dec
xor
xchg
cmp
loop
(bad)
in
fcmovnbe
push
adc
jge
dec
sar
shl
jnp
icebp
jmp
rcr
hlt
sub
push
and
mov
xchg
arpl
addr16
or
scas
mov
sub
(bad)
test
push
dec
jecxz
popf
mov
imul
xchg
pop
jb
adc
xor
fcomp
fsubr
push
adc
xchg
ror
pusha
rcl
int
ins
pop
mov
fimul
sbb
outs
idiv
sub
push
xchg
hlt
ja
hlt
test
mov
pop
dec
mov
fcomp
out
adc
test
jns
out
(bad)
ja
cmp
stos
movs
cmp
xor
daa
rol
fiadd
mov
sub
cmps
inc
cmp
lahf
xchg
jge
dec
popa
xor
sub
in
jne
popf
pop
jne
dec
rol
xor
imul
and
xchg
or
and
pop
fwait
sub
rol
int
in
xchg
sub
and
(bad)
out
add
mov
mov
ret
or
cli
pop
sub
div
popa
out
cmps
aad
xchg
sub
fmul
inc
mov
xchg
jmp
and
jp
test
mov
cmps
push
xchg
sahf
pop
mov
pushf
xor
cwde
cmp
jb
push
pop
jp
loop
cli
dec
int
mov
xchg
jmp
(bad)
lock
push
sub
lahf
adc
imul
pop
js
or
outs
pop
jmp
in
mov
sub
cmp
jne
stos
cdq
aaa
sahf
cli
(bad)
rol
push
mov
xchg
fwait
push
cld
in
les
ret
stc
dec
or
xchg
jl
je
cmp
sub
jmp
mov
adc
xchg
stc
aaa
aaa
mov
jp
rol
mov
movs
sbb
stos
dec
sub
test
fisttp
icebp
sub
jb
pop
lds
imul
movs
fwait
mov
mov
xchg
adc
iret
mov
mov
in
or
sbb
cmp
out
cmp
test
jmp
jnp
pop
aad
ret
mov
in
in
ins
jl
sbb
aaa
fbstp
aas
cmp
adc
shr
xchg
sbb
mov
push
and
pop
push
inc
mov
pop
mov
sub
mov
in
(bad)
repz
sahf
lea
call
cmp
movs
mov
mov
retf
and
jl
push
addr16
(bad)
pusha
cmovl
(bad)
push
jno
push
mov
call
sar
nop
faddp
popa
pop
aaa
das
adc
cwde
inc
pop
ret
scas
mov
pop
clc
push
movs
sbb
sbb
lods
aaa
xor
dec
mov
and
stos
out
jp
mov
jge
inc
jne
rol
dec
jnp
clc
fwait
push
orps
aaa
dec
add
imul
push
movs
cmps
in
lods
and
pop
cmp
xor
mov
jp
movs
sti
and
arpl
pop
pop
xchg
in
test
into
push
out
hlt
mov
adc
jg
push
xor
mov
fidiv
das
aam
cmc
mov
xor
leave
lea
in
aas
aad
sub
add
xor
fiadd
outs
daa
lds
ror
push
sbb
clc
lock
pop
rcl
pop
mov
out
xchg
fucomp
retf
jecxz
adc
or
xchg
pmaxsw
clc
clc
out
or
mov
sub
add
out
cld
cmc
loope
push
or
std
xchg
xchg
mov
jnp
ja
sub
bound
xor
shl
leave
mov
sbb
cmp
jae
call
sahf
iret
rcl
adc
stos
dec
lds
push
das
fucomi
xchg
inc
jmp
mov
fistp
sub
mov
cmp
bound
imul
leave
cmp
in
mov
jmp
movs
ins
sar
jge
imul
imul
sbb
test
dec
outs
mov
sub
xor
arpl
and
imul
das
lds
jmp
jb
leave
push
std
mov
movs
js
pop
jge
push
push
mov
ret
repnz
mov
stos
sti
jg
(bad)
fisttp
sahf
std
adc
out
(bad)
add
imul
lods
mov
rcr
movs
leave
nop
jmp
sub
fisubr
mov
out
cwde
sub
pop
adc
js
push
xor
mov
sbb
sub
lock
enter
fldcw
std
xchg
mov
mov
daa
mov
jae
inc
push
retf
jne
and
repz
sbb
dec
adc
add
outs
mov
pop
xchg
push
or
inc
add
repz
mov
call
pop
xor
mov
pop
dec
test
(bad)
call
sti
dec
adc
jb
aam
mov
bound
data16
ror
pop
adc
int
push
jle
cwde
pop
outs
mov
mov
mov
stos
push
int3
clc
and
pop
pop
cmp
lods
mov
jo
ror
push
adc
ins
cmps
rcr
leave
loop
sti
pushf
jecxz
jp
test
rcl
dec
iret
jp
sub
or
inc
test
out
mov
mov
adc
jb
jne
add
xlat
shr
jl
add
in
xchg
or
andps
pop
bound
and
test
rcl
xor
repnz
test
push
aaa
push
lods
add
dec
push
sti
cmp
pop
xchg
shr
jge
pop
or
clc
or
repnz
nop
mov
out
or
jno
xchg
sbb
mov
in
jb
mov
lahf
icebp
sub
dec
push
mov
sub
fwait
mov
movs
or
push
aaa
mov
loope
mov
cwde
fistp
fsubr
(bad)
dec
repnz
inc
aaa
pusha
or
out
jmp
and
popa
outs
ret
mov
xchg
lahf
pushf
sub
ret
jmp
jae
ret
mov
fild
mov
out
or
nop
das
push
aas
add
jb
fidiv
xchg
adc
repz
pop
push
fistp
pop
and
das
pop
mov
mov
xchg
shr
mov
inc
sub
add
sbb
xor
and
(bad)
movs
mov
test
push
inc
cld
push
out
pop
pushf
push
jecxz
adc
lods
outs
add
jge
adc
mov
jmp
mov
add
add
(bad)
pop
adc
xor
dec
inc
jae
sub
in
cmp
test
aas
outs
adc
inc
dec
inc
cwde
ins
mov
cwde
int3
je
loop
pushf
add
adc
and
and
mov
pop
dec
jns
mov
inc
icebp
cmp
fiadd
jg
popf
cwde
mov
in
xor
ret
shr
sub
pop
sub
js
cmp
mov
loopne
test
rcr
nop
mov
das
add
dec
push
inc
test
popf
rcr
retf
push
inc
push
mov
fcmovb
xchg
movzx
mov
sbb
or
jae
(bad)
mov
mov
xchg
sbb
and
push
rcr
aad
pop
cmp
cmp
mov
mov
adc
(bad)
sub
fcomp
jmp
mov
sub
sahf
jno
movs
sub
loopne
retf
dec
cmp
and
aad
jo
(bad)
or
jle
and
stos
jb
add
in
outs
aam
xor
data16
lock
dec
mov
(bad)
movs
dec
inc
mov
xlat
(bad)
fnsave
jno
pop
push
sbb
and
pop
loopne
and
dec
in
xchg
jl
dec
push
je
cmp
dec
in
xor
dec
imul
mov
inc
test
loopne
sbb
push
mov
rol
lds
repnz
or
push
cmp
push
pop
ins
push
cmc
pop
sub
jg
loope
pop
push
mov
sbb
(bad)
cmc
mov
sbb
call
retf
iret
xlat
inc
xchg
fiadd
jl
jne
test
jmp
idiv
mov
mov
jp
(bad)
fnstsw
fld
out
outs
pop
arpl
pop
jp
pop
fimul
jne
sub
xchg
jge
fcomp
cld
push
adc
loop
dec
adc
aam
and
dec
add
ins
mov
movs
lahf
fistp
sbb
pop
mov
add
mov
mov
out
push
pop
xor
adc
cmp
push
test
cmp
mov
xor
push
rcr
dec
ins
aaa
hlt
cmp
sbb
add
adc
clc
push
mov
adc
ficom
dec
xor
in
shl
push
fnsave
fcom
cmp
xchg
hlt
cmp
sar
push
push
lahf
mov
shl
lock
jns
cli
jmp
adc
xor
sub
mov
mov
sub
jmp
(bad)
scas
int3
jg
out
out
shl
cmp
test
jge
mov
add
lods
cmps
mov
pop
shl
div
xor
mul
sahf
adc
movs
jmp
lds
jmp
mov
xchg
ja
xchg
test
xchg
push
pop
xor
jb
xlat
push
push
sub
rol
mov
scas
pop
int
in
push
sub
aad
mov
mov
lods
and
int
xchg
or
jbe
jo
xchg
mov
push
jl
or
adc
rol
sub
xchg
pop
sahf
dec
xchg
push
xchg
add
xchg
ins
daa
push
cmp
mov
mov
push
arpl
mov
arpl
cwde
ret
loope
add
mov
aas
add
icebp
or
cmc
frstor
jne
aas
retf
adc
cdq
pop
and
cmps
mov
inc
loope
pop
jg
cmp
inc
adc
clc
push
fdiv
mov
das
and
mov
movs
xor
icebp
fidiv
inc
pop
popf
cwde
jmp
ret
push
stc
loope
add
mov
in
jae
mov
scas
bound
movs
scas
ss
js
sub
cdq
in
dec
push
movs
test
pop
mov
jno
(bad)
loop
sbb
xchg
fs
in
or
in
xchg
pop
pop
aam
sub
jno
jb
lahf
scas
popf
pop
sub
arpl
jle
push
ds
adc
pop
mov
arpl
div
imul
mov
cmps
or
inc
xchg
cli
mov
je
retf
cmovb
cld
jg
out
addr16
int
movs
push
cwde
jnp
(bad)
adc
retfw
mov
jg
inc
xchg
or
sbb
jo
js
cmp
cmp
fnstenv
adc
mov
arpl
push
(bad)
sbb
pop
das
cld
das
ins
push
jnp
mov
adc
dec
fstp
or
lds
mov
cli
add
sbb
push
daa
jnp
pop
sahf
std
imul
in
and
sti
or
inc
popa
cmp
xor
pop
jne
daa
mov
cmp
pop
cmps
movs
jae
clc
loop
jge
dec
push
clc
movs
and
pop
sub
sub
out
imul
dec
bound
cmp
int
xor
dec
cmps
std
mov
push
pushf
or
shl
mov
test
xor
clc
push
sub
push
push
clc
add
cmp
ret
fsubr
cmc
cmps
jo
sub
std
push
push
mov
and
cmp
inc
xchg
es
(bad)
js
inc
push
push
(bad)
xchg
mov
inc
cld
cli
enter
cdq
xchg
dec
pop
and
or
inc
(bad)
xchg
pop
xor
retf
fwait
test
out
adc
(bad)
aaa
ror
popf
loopne
gs
stos
cli
mov
hlt
cmc
js
lahf
dec
adc
or
mov
mov
stos
mov
and
aas
mov
jno
push
sub
ret
mov
loop
sbb
out
out
retf
stos
je
retf
popa
out
push
rol
pop
in
in
bound
cwde
int3
push
sub
ins
xor
stos
push
sar
lods
xor
outs
mov
xor
in
cdq
pop
and
mov
sub
mov
(bad)
hlt
xor
in
imul
je
jp
mov
(bad)
daa
or
bound
xchg
into
std
mov
mov
inc
ror
adc
or
push
outs
cmp
push
pop
and
scas
popa
jge
jg
cwde
mov
and
(bad)
in
cmp
in
loop
test
xchg
mov
call
(bad)
jo
or
fcom
jge
neg
and
rol
out
les
pop
xor
sub
pusha
dec
mov
je
jle
xchg
lea
fbld
xchg
mov
push
repnz
add
mov
div
adc
neg
ins
mov
pushf
pop
pushf
imul
xchg
leave
fcmovnbe
xor
push
mov
pop
mov
dec
enter
js
push
inc
xor
cmp
loopne
adc
and
lods
das
(bad)
retf
sbb
add
fsub
mov
retf
xor
xchg
out
sub
xor
inc
sub
or
push
jne
and
push
call
je
popf
inc
les
adc
scas
call
jbe
jbe
into
jns
sub
aaa
xchg
fisttp
aaa
cmps
fiadd
inc
mov
inc
dec
jecxz
ja
outs
movs
and
jo
ja
cmp
sub
lock
call
xor
lods
mov
(bad)
mov
imul
test
sahf
jns
stos
pop
cmp
fisubr
outs
arpl
(bad)
outs
hlt
pop
ficomp
dec
cmp
les
xor
push
(bad)
jmp
and
mov
(bad)
adc
mov
out
popa
adc
aas
in
repnz
das
gs
fs
push
inc
ins
in
out
inc
fadd
adc
inc
fsubr
xor
pop
into
jle
shl
mov
push
test
mov
sbb
push
jne
repz
mov
js
cli
inc
shr
xor
(bad)
int3
push
pop
sub
rcl
dec
aas
fisttp
rcl
inc
repz
imul
retf
jp
into
sahf
cmps
clc
xor
jnp
mov
movs
mov
imul
sbb
pop
cmp
cmovl
inc
int3
scas
aad
and
xor
imul
cmp
shl
pop
mov
call
movs
in
shl
repnz
fidivr
scas
push
stc
add
jp
das
or
lods
or
pop
mov
mov
lods
mov
mov
adc
mov
sbb
mov
movs
ins
xchg
stos
jge
cli
rcr
mov
call
fsubr
adc
(bad)
cmps
test
in
iret
iret
lahf
jmp
jmp
fist
jecxz
and
pop
jg
adc
cs
add
clc
jle
jbe
out
imul
or
sar
push
inc
out
pop
cmp
mov
fimul
inc
or
jmp
and
jmp
mov
adc
(bad)
ds
int3
clc
mov
add
or
ror
out
jo
in
xchg
cmp
dec
xlat
mov
cmp
ror
shr
inc
nop
retf
mov
lods
dec
pop
xchg
fsubr
and
mov
mov
clc
stc
das
hlt
fmul
sbb
inc
popa
inc
clc
mov
lock
movs
inc
aaa
jl
cmp
inc
cmc
xchg
movs
mov
push
(bad)
adc
movs
mov
fs
sbb
mov
inc
push
mov
cdq
dec
mov
(bad)
cmp
and
push
imul
ins
fcomp
cwde
mov
ss
push
mov
sbb
sbb
inc
imul
mov
xchg
retf
push
or
xor
cs
loop
lahf
add
jno
icebp
mov
inc
push
dec
cdq
cmps
push
pop
lock
adc
std
mov
push
xchg
rcl
push
inc
das
mov
out
sbb
jns
jns
out
inc
add
daa
imul
jo
out
push
call
addr16
movs
xchg
pop
aad
test
pop
jo
std
nop
mov
add
jmp
jns
call
sbb
je
js
xchg
sbb
loopne
mov
arpl
dec
pushf
jno
jo
repz
icebp
pop
imul
in
mov
or
xchg
pop
jnp
dec
loop
jl
fdivr
retf
dec
mov
ror
and
adc
jno
push
inc
cmp
push
add
xchg
test
mov
pusha
icebp
xor
jp
push
or
int
enter
or
pop
pop
out
hlt
sub
xor
test
enter
xchg
mov
stos
mov
push
cdq
pop
pushf
mov
xchg
popa
and
iret
aad
mov
and
sub
aam
mov
in
xchg
mov
and
mov
xchg
sbb
stos
push
inc
pushf
inc
mov
pop
scas
repz
dec
movs
or
or
sbb
imul
push
shl
dec
push
sub
and
retf
pop
retf
jne
jns
push
mov
sbb
and
loop
push
cmp
jecxz
adc
pushf
test
aaa
gs
mov
pop
pop
mov
std
adc
jnp
add
fbstp
sar
es
xchg
jecxz
inc
rcl
add
sbb
adc
call
add
push
xchg
mov
xchg
jecxz
inc
jge
icebp
pop
or
pop
cmp
inc
aas
idiv
pop
dec
retf
xchg
into
xchg
inc
repz
icebp
shl
sbb
xor
lods
iret
push
mov
pop
mov
dec
idiv
loopne
and
ins
dec
int3
xor
mov
cmc
xor
lods
xor
inc
popf
dec
retf
pop
enter
jno
xchg
adc
mov
dec
push
in
fs
cmp
je
adc
imul
sub
xor
sbb
sub
xor
mov
stos
push
repz
(bad)
fsubr
ror
add
pop
jecxz
xor
iret
hlt
enter
imul
jl
pushf
dec
and
pop
push
call
jg
pop
xor
sub
int
push
push
and
int
add
jnp
std
mov
jae
fisub
cmps
daa
adc
mov
in
pop
pop
jb
pop
arpl
add
and
sub
or
fwait
jle
jle
add
cmp
dec
jb
adc
pop
repnz
and
sub
stos
clc
(bad)
pop
outs
mov
pop
or
mov
out
mov
xor
push
push
sub
xchg
ins
sub
sbb
cmp
mov
retf
mov
xor
ds
sbb
push
jmp
sbb
stos
(bad)
pop
ret
ss
sti
jp
jp
inc
jne
adc
movs
mov
jns
aas
jb
add
and
mov
in
fwait
(bad)
lea
jl
dec
xchg
adc
jno
leave
mov
sub
adc
fdivr
push
pop
cmp
adc
out
sbb
nop
call
cmc
test
daa
pop
in
mov
pop
in
loope
dec
xchg
fsub
bound
mov
cmp
popa
xor
test
gs
mov
xchg
dec
stos
into
retf
mov
adc
xor
push
pop
sbb
in
pushf
fcmovnbe
movs
das
or
cmp
addr16
jnp
and
inc
test
retf
mov
pop
out
xor
mov
cwde
ds
or
sbb
mov
mov
jle
icebp
(bad)
or
jo
jl
pop
mov
out
in
icebp
mov
ror
shl
data16
rep
ins
sub
or
cmc
cmp
test
ret
pop
mov
dec
and
jmp
pop
int3
pop
hlt
mov
push
or
mov
lods
lods
mov
outs
mov
out
jge
enter
cmp
je
jmp
sbb
mov
shl
adc
mov
cli
repnz
dec
xlat
push
inc
mov
push
ins
movs
in
push
push
push
cld
pop
xor
movs
cmc
adc
xchg
cmp
rcl
imul
mov
bound
aad
push
cmps
fs
inc
adc
daa
shl
daa
fwait
sub
icebp
out
cdq
mov
fdivr
jmp
sub
call
xchg
lods
(bad)
mov
imul
das
lods
mov
aaa
stos
call
mov
push
icebp
cmp
fmul
daa
inc
les
jns
bound
test
dec
pushf
adc
scas
adc
inc
dec
xor
fxch
cmc
push
ror
mov
loope
and
movs
sbb
in
jo
push
cmps
sub
add
in
jmp
mov
dec
(bad)
sbb
push
fcomp
imul
or
or
mov
pop
mov
lahf
push
jmp
jmp
or
or
pushf
sbb
(bad)
in
push
in
out
push
add
adc
popf
mov
loop
push
lds
dec
add
fsubr
push
push
and
mov
jae
xor
repnz
mov
pop
add
out
pop
sbb
or
(bad)
push
jg
mov
fisub
push
add
push
mov
out
test
dec
push
cmp
dec
mov
(bad)
test
lea
je
inc
test
stos
inc
sbb
fdiv
xchg
xchg
and
add
std
jp
stc
pop
fiadd
push
clc
neg
enter
mov
jbe
outs
arpl
mov
sub
jp
jb
dec
jns
movs
xchg
xor
cld
dec
inc
es
lahf
adc
jo
mov
and
xor
fxam
test
ins
out
mov
adc
(bad)
sub
mov
out
fidivr
cld
(bad)
sub
xchg
sbb
jmp
cs
mov
sub
mov
repz
mov
icebp
jmp
in
repnz
dec
pop
dec
retf
sub
inc
ins
jmp
and
cmp
add
sbb
push
jmp
fwait
inc
mov
dec
sahf
mov
rol
addr16
push
inc
fild
lea
xchg
not
cmp
mov
pusha
jl
jne
hlt
mov
rol
sbb
test
mov
or
les
lock
inc
out
dec
movs
push
mov
jl
leave
cmp
loopne
retf
ins
sar
inc
jl
dec
or
jge
icebp
inc
cmps
loopne
add
cwde
xchg
fmul
aaa
cmp
jb
cwde
sub
repnz
mov
shl
hlt
adc
aas
outs
int3
retf
mov
jmp
xor
mov
repz
cli
sub
mov
xor
leave
or
pop
dec
push
fwait
cmp
loope
(bad)
jmp
imul
mov
adc
lea
sbb
xor
sbb
test
xlat
stos
jb
lock
aad
ins
pop
or
cmp
xchg
cli
or
jg
test
pop
adc
shl
xor
dec
in
lea
sub
iret
cmp
add
arpl
push
ficom
jmp
adc
mov
lods
retf
fnstenv
(bad)
out
fcomp
add
jns
and
pop
(bad)
push
loop
mov
fnstsw
mov
stc
inc
call
rcl
test
imul
es
mov
jbe
mov
daa
or
pusha
faddp
or
sti
or
cmp
jg
push
xor
test
push
xor
ins
sub
or
lods
ins
aam
arpl
inc
mov
(bad)
or
test
iret
add
add
cmps
call
shl
popf
pop
mov
adc
jle
(bad)
fsubr
nop
add
mov
and
(bad)
mov
lods
push
mov
dec
cld
frstor
push
cwde
cmp
or
icebp
add
mov
mov
call
mov
fdivr
clc
xchg
push
xchg
inc
stos
cmc
add
fcomp
ret
cmp
dec
(bad)
aam
mov
and
push
mov
inc
cld
lea
xchg
sub
ins
jbe
bound
jb
loope
pop
call
jmp
sbb
jo
push
xchg
rol
pop
inc
push
enter
mov
adc
or
dec
or
sub
push
aaa
xchg
shl
push
or
sub
in
arpl
or
aam
mov
sub
xor
pushf
xor
xchg
icebp
dec
pop
not
adc
jne
sub
cmp
lds
push
adc
pop
dec
sub
push
jecxz
shr
adc
cmps
gs
adc
xor
outs
jge
lds
inc
or
sub
mov
inc
xlat
stos
test
je
ds
loop
stos
fst
(bad)
inc
(bad)
cdq
scas
pushf
pop
xor
call
cmc
hlt
cmp
mov
repz
push
out
pop
pusha
ja
mov
cmp
into
lea
test
mov
mov
sub
movs
xchg
hlt
or
jne
ret
push
pop
jne
outs
outs
dec
ins
std
or
mov
out
int3
outs
push
mov
xor
lods
mov
jns
scas
jmp
xchg
aam
push
ret
cmp
loop
stos
jmp
add
jge
or
fisttp
fidiv
data16
dec
retf
add
xor
sbb
cmp
retf
mov
ja
push
pop
xor
repnz
daa
test
out
test
jecxz
or
lods
pop
in
mov
std
sbb
push
inc
pop
imul
neg
mov
sub
aam
shl
les
inc
aam
bound
xor
repnz
in
enter
lahf
daa
jp
jo
lods
cld
sbb
fild
retf
test
das
scas
pop
fidiv
xchg
fwait
clc
jl
into
repz
out
ffree
(bad)
pop
sti
inc
retf
sub
xchg
retf
dec
(bad)
pusha
aas
cmps
ja
xor
push
(bad)
jbe
(bad)
xor
dec
push
mov
test
lea
fwait
dec
out
pop
unpcklps
pushf
and
retf
xchg
xchg
xor
lock
movs
(bad)
xor
add
jo
jp
cli
jns
jbe
leave
cdq
xchg
pop
int
out
(bad)
jge
pusha
cmp
push
inc
stc
(bad)
dec
loop
push
rol
add
sub
cmps
sub
aad
push
mov
dec
in
stc
push
ds
movs
mov
sbb
mov
cmc
les
aas
vorpd
mov
out
cmps
or
sbb
mov
popf
out
xor
adc
lock
arpl
jnp
push
xor
inc
push
push
push
ins
sti
adc
mov
jmp
(bad)
pop
inc
scas
bound
and
(bad)
mov
inc
push
xor
in
inc
mov
dec
daa
mov
bound
pop
les
pop
or
sub
nop
aam
and
das
test
or
dec
push
in
jecxz
pop
pop
in
cmp
pop
xor
add
icebp
mov
out
sbb
pushf
adc
and
ror
jl
nop
fdiv
loopne
mov
jle
jae
mov
loope
mov
push
dec
iret
leave
mov
ins
xchg
cmp
aas
xchg
jne
add
stos
gs
stos
pop
gs
add
sti
shr
(bad)
shr
push
pusha
mov
add
fdivr
pushf
inc
pop
je
and
pop
cmp
stc
jecxz
daa
xchg
pop
mov
pop
scas
pop
jle
loopne
js
loop
jle
add
fcomi
test
or
adc
je
call
loope
pop
xchg
add
pop
push
rol
mov
mov
pop
dec
xor
xchg
inc
fld
jnp
xchg
or
cwde
mov
pop
adc
mov
mov
retf
pusha
sbb
xor
xchg
fisubr
addr16
cwde
add
daa
arpl
frstor
adc
dec
xchg
adc
call
pop
xchg
jae
or
inc
and
std
out
add
in
inc
jp
adc
mov
adc
adc
and
outs
cmps
mov
cmp
in
push
xor
sbb
xor
cmp
cli
sbb
inc
mov
out
ficomp
sub
xchg
sbb
sub
xor
xchg
outs
fisttp
mov
test
aas
add
push
push
pop
mov
xor
mov
mov
sahf
pop
push
inc
out
ins
sub
mov
dec
test
xchg
scas
cli
dec
jo
mov
(bad)
lds
(bad)
hlt
dec
push
leave
and
cmp
inc
mov
dec
mov
xor
sub
out
dec
inc
dec
cmp
dec
push
icebp
jnp
sub
(bad)
push
mov
xor
adc
jl
push
fnstcw
mov
sbb
xor
mov
jns
inc
sub
cdq
fs
inc
fwait
mov
test
xor
add
rcl
cmp
(bad)
pushf
js
test
fadd
shl
addr16
dec
lods
and
and
and
mov
and
or
das
(bad)
in
loop
xchg
cs
fnstenv
pop
leave
in
cmp
sbb
stc
popf
and
rol
pop
jp
xchg
imul
sub
dec
lods
int3
pusha
ret
mov
ret
xor
aaa
lea
out
dec
mov
push
imul
imul
dec
sub
and
sub
sub
add
movs
cmp
shr
mov
in
and
clc
push
inc
aad
mov
stc
fwait
inc
mov
aaa
jl
inc
xchg
add
inc
in
jg
fimul
xlat
xor
inc
adc
arpl
lds
cmps
(bad)
mov
pop
les
imul
mov
(bad)
mov
add
mov
fidivr
arpl
pop
sub
ds
and
sub
push
add
mov
ja
pop
xchg
push
xor
inc
pop
push
mov
icebp
inc
sub
mov
sub
stc
mov
js
or
mov
fdiv
inc
push
aaa
ss
adc
cmp
(bad)
jmp
dec
xor
push
inc
inc
pop
jo
ficom
add
sti
dec
fmul
je
jmp
(bad)
push
cmp
xchg
lods
adc
inc
in
push
test
outs
(bad)
xchg
xor
std
cmp
arpl
sub
getsec
dec
pop
sbb
push
fnsave
xchg
inc
sar
jmp
and
sub
jmp
add
pop
sub
push
dec
mov
fadd
jnp
inc
or
or
add
and
and
adc
loopne
push
movs
dec
gs
jp
and
pop
in
dec
and
hlt
and
mov
cmp
jp
mov
call
mov
add
test
push
clc
mov
inc
sub
(bad)
data16
imul
enter
mov
lock
dec
mov
cmp
push
lods
xlat
test
dec
addr16
bound
test
cmps
fsincos
xchg
pop
push
(bad)
stc
sbb
in
fild
or
cli
inc
pop
dec
xor
push
jecxz
mov
or
inc
test
mov
pop
sbb
int3
call
lds
gs
add
xchg
push
fdiv
mov
xchg
xchg
xor
push
cli
jne
cmp
test
adc
test
sbb
out
sbb
pop
mov
jmp
push
stc
arpl
rol
inc
mov
repz
jno
jmp
fs
and
sub
pop
and
or
jle
xchg
loopne
pop
sub
aad
pop
xchg
dec
aas
call
pop
push
je
mov
outs
xchg
icebp
adc
jo
dec
and
leave
xchg
push
cdq
mov
mov
(bad)
fidiv
call
jno
in
mov
add
push
test
xor
pop
pop
pop
sbb
mov
loopne
adc
int
hlt
xchg
push
push
test
xchg
xchg
push
push
stos
leave
xchg
mov
cmps
(bad)
fidiv
sub
je
dec
stc
and
add
or
cmp
cmp
lods
and
popf
cmp
jle
pop
test
and
mov
dec
imul
xor
out
cli
xchg
popf
push
add
les
das
ja
in
jp
jbe
fwait
movs
mov
mov
pop
cmp
je
rcl
mov
hlt
mov
shl
xor
sub
push
test
sbb
daa
or
xor
stc
jp
out
sar
inc
or
fwait
les
ret
push
push
mov
adc
stos
sbb
out
xchg
adc
stos
int
and
dec
jmp
push
rcr
popa
mov
or
iret
cmp
ret
sar
jns
mov
push
imul
push
jl
jae
lahf
and
pushf
adc
in
jns
into
add
pop
retf
or
adc
sbb
(bad)
fmul
add
test
aas
cli
sbb
mov
dec
mov
jmp
aaa
and
dec
out
cmp
scas
mov
mov
lahf
mov
cmc
in
aam
xchg
inc
xor
push
out
jae
pop
mov
sub
cmc
jp
rcr
push
(bad)
pop
outs
clc
inc
adc
xor
imul
push
push
add
ja
or
movs
push
push
adc
fwait
push
sub
in
pop
mov
or
int3
fisttp
cmps
inc
inc
and
xchg
inc
mov
aam
stc
(bad)
adc
addr16
dec
clc
add
jo
cmps
xor
cmps
neg
sub
pop
push
call
sub
sub
xor
repz
add
leave
sub
or
(bad)
call
xchg
inc
jns
mov
sbb
pop
mov
inc
inc
fwait
scas
loope
and
fwait
bound
dec
jnp
adc
pop
mov
mov
(bad)
mov
out
bound
repnz
sahf
fidivr
retf
les
xor
mov
mov
adc
mov
or
xchg
push
ins
punpckhbw
xchg
cmp
pushf
adc
sbb
aad
pop
add
jecxz
les
addr16
fnstcw
(bad)
fnsave
push
jle
movs
xor
lock
cmp
out
mov
pop
add
xchg
cmp
adc
xor
mov
sub
sahf
mov
sbb
push
add
xchg
sbb
adc
inc
mov
scas
dec
adc
jmp
lock
push
jge
lods
(bad)
cmp
mov
inc
iret
pop
imul
mov
je
pop
push
loop
(bad)
ins
inc
addr16
sar
push
movs
inc
outs
xchg
rcl
lods
daa
jnp
ins
in
mov
push
(bad)
scas
cmc
or
pop
arpl
mov
fild
jo
hlt
mov
ffreep
rol
mov
sbb
push
mov
jle
dec
sbb
repz
loopne
out
inc
shl
inc
mov
popa
test
mov
stos
sbb
rol
xor
hlt
adc
xchg
ss
stc
pushw
push
jmp
jo
aad
stos
int
cwde
loope
pop
std
mov
or
lahf
jb
mov
fst
shl
pop
xchg
add
add
xor
enter
jb
in
into
sub
add
inc
clc
aad
cmp
mov
cli
repz
cmps
ret
push
fisttp
jmp
lds
out
mov
js
mov
mov
xchg
jno
scas
aad
fst
or
jns
xor
xchg
inc
jecxz
jmp
imul
xor
sbb
int3
repnz
stos
std
inc
shl
xchg
enter
fcom
addr16
mov
lds
ret
icebp
and
jmp
and
pop
rol
enter
ins
cmp
les
xchg
mov
out
fcom
sbb
or
inc
mov
mov
into
sbb
sbb
sbb
lock
(bad)
mov
sbb
jb
daa
stc
neg
cmp
je
neg
xor
sbb
pop
mov
lahf
cmp
iret
call
shl
push
loop
add
inc
or
cmps
mov
xchg
fs
ficomp
into
mov
jns
lock
jp
div
lods
pop
in
and
sbb
cmp
sub
movs
daa
aam
push
xor
mov
jmp
aaa
shl
(bad)
mov
int3
or
lds
sbb
dec
and
les
stos
sub
jl
push
sbb
pushf
scas
mov
push
or
leave
mov
das
dec
xchg
inc
retf
mov
(bad)
xor
xchg
cdq
pop
jo
fwait
jecxz
inc
sub
lahf
hlt
outs
add
dec
xchg
add
cmp
fs
data16
sti
fist
shld
or
fldcw
add
cmp
into
sub
cld
pop
in
jb
hlt
add
pop
pop
cdq
mov
fnstenv
(bad)
outs
aaa
fld
test
mov
and
jae
mov
cli
push
lods
xor
inc
addr16
shl
shr
repnz
fadd
dec
ja
jae
sti
push
pop
cdq
jl
psubw
pop
outs
adc
and
jmp
jno
cs
lea
clc
mov
int3
jae
sbb
sahf
scas
test
jmp
jp
jmp
mov
imul
fiadd
and
loope
xchg
cwde
push
inc
outs
add
leave
cmp
pop
jo
loop
dec
push
sbb
push
(bad)
in
fsubr
mov
xchg
jecxz
xchg
cmp
sbb
mov
push
and
xor
or
or
xor
lahf
sbb
das
jge
mov
pop
xchg
test
in
lods
out
push
jp
cmp
xchg
xor
mov
sbb
xchg
sub
cmp
fistp
inc
xchg
std
add
loop
jbe
inc
add
mov
in
out
push
xchg
mov
mov
je
or
loop
test
dec
adc
xchg
lods
and
sti
sub
sub
movs
add
test
pop
out
push
pop
test
lea
retf
adc
scas
stos
xchg
pushf
xchg
(bad)
sbb
enterw
addr16
pop
cld
cli
sbb
ss
cs
in
stos
pop
cmp
jb
out
mov
out
hlt
pusha
sub
xor
sub
fsub
mov
mov
pop
ret
pop
dec
jge
lock
hlt
sbb
or
iret
outs
add
popa
shl
and
jmp
sbb
pushf
adc
ins
mov
sub
es
(bad)
scas
daa
mov
or
fld
mov
push
es
push
xor
cs
mov
faddp
lods
xor
outs
jbe
mov
sub
xchg
add
or
inc
and
adc
adc
popf
imul
jns
inc
mov
xor
fwait
aam
dec
adc
in
int
cld
rcr
mov
cmps
or
ret
mov
ins
test
js
mov
push
out
mov
test
popf
mov
add
mov
std
sbb
and
mov
or
out
out
cs
mov
test
test
fldcw
xchg
stc
sar
sbb
ins
test
dec
push
xchg
ret
fnstsw
or
movs
mov
movs
popf
das
fnstcw
clc
aaa
das
fld
jl
mov
or
cmp
nop
aaa
inc
mov
and
cli
xchg
call
push
fist
adc
adc
daa
push
sbb
dec
mov
test
rcr
mov
mov
push
add
sub
out
mov
dec
out
imul
repz
mov
out
xlat
sub
mov
mov
loop
mov
test
add
es
add
push
xor
mov
xor
xor
(bad)
sub
jns
mov
add
mov
mov
jne
fimul
ins
imul
adc
dec
call
sahf
jb
or
sahf
push
mov
in
push
inc
arpl
and
in
shr
out
(bad)
xor
pop
mov
sbb
mov
ss
dec
aaa
push
mov
and
shr
and
jno
pop
(bad)
fstp
loop
call
scas
rcl
jmp
nop
gs
jecxz
mov
mov
cmp
(bad)
sar
aas
hlt
test
mov
add
idiv
stc
pop
inc
and
jns
mov
lds
or
mov
mov
test
xchg
pop
mov
inc
dec
mov
mov
pop
pop
xchg
sbb
outs
faddp
push
hlt
fisub
push
xchg
mov
es
sbb
push
xor
sub
inc
scas
in
adc
fnstcw
push
std
cmp
(bad)
cld
mov
pop
cmp
jne
jno
sub
cmp
mov
dec
mov
aas
sahf
or
cwde
pushf
cmps
mov
nop
stos
fnstsw
iret
sbb
inc
aaa
sti
out
inc
iret
in
push
xchg
mov
js
jbe
fwait
int
imul
enter
push
mov
or
std
loopne
mov
test
fidivr
inc
pusha
or
mov
mov
jae
bound
mov
jne
es
inc
in
sub
dec
repz
les
fwait
push
ret
xor
sub
pop
push
repz
sbb
push
push
pusha
pushf
fimul
ds
mov
adc
or
repnz
xchg
inc
inc
fucomip
and
call
idiv
outs
sbb
dec
out
jbe
xor
aad
lahf
dec
xor
sbb
xchg
adc
xchg
sub
add
fwait
cmp
cld
sub
lods
mov
mov
lock
mov
data16
scas
or
push
sub
or
popf
stc
fsubr
sbb
pop
cdq
cmp
outs
shr
jnp
bound
sbb
daa
out
pop
pop
in
inc
fadd
pop
loopne
pusha
push
cmp
mov
popa
dec
xchg
ds
push
mov
fidivr
std
cwde
ja
add
jne
add
jl
xchg
(bad)
mov
push
pop
sbb
int3
inc
or
call
nop
fwait
push
mov
out
fisttp
cmps
jg
cmp
xchg
inc
jb
push
(bad)
dec
not
int
hlt
inc
mov
xor
(bad)
mov
ret
xchg
push
push
rcl
xchg
sub
sub
xchg
mov
leave
popa
mov
adc
dec
movs
retf
mov
imul
push
sub
(bad)
sbb
aad
fs
mov
das
jg
loope
in
push
aam
aad
fdivr
cmp
xchg
(bad)
push
aad
cli
jne
(bad)
xchg
fwait
call
add
xlat
or
cmps
pop
ja
cmp
xchg
cmp
movs
in
mov
loopne
dec
mov
xchg
scas
std
xchg
and
add
inc
lahf
xchg
mov
test
push
lods
mov
outs
cdq
out
test
pop
mov
mov
and
(bad)
add
adc
into
sar
ja
xchg
call
inc
pushf
inc
adc
or
(bad)
out
aam
mov
pop
(bad)
and
push
aaa
scas
loope
and
ja
in
dec
and
or
inc
call
jae
aas
pop
sbb
je
in
cmp
xchg
leave
and
push
push
les
mov
rcl
mov
xor
movs
jo
sub
adc
ret
or
and
xchg
or
inc
mov
in
outs
or
ja
jl
mov
xchg
scas
sub
sub
scas
(bad)
cmc
retf
cmc
and
rcl
mov
inc
push
cmp
cmp
fwait
pop
xchg
iret
pop
mov
sbb
out
mov
sbb
nop
pushf
jb
inc
or
jae
mov
push
xchg
cmp
out
out
mov
bound
pop
aas
or
adc
jo
and
pop
das
out
dec
div
fidivr
dec
xor
pop
retf
jge
cmps
inc
push
push
mov
jnp
fadd
dec
shl
leave
xor
int
mov
icebp
sub
fadd
in
jge
sub
das
pop
jmp
arpl
into
jne
xor
mov
sti
mov
jl
jl
jl
imul
mov
sbb
sub
push
jl
out
inc
add
push
cli
sub
push
loope
inc
jge
cli
sbb
push
push
loope
mov
popf
daa
adc
xchg
retf
sar
repnz
int
push
rcr
popa
push
sahf
js
mov
outs
out
ret
fld
add
pop
stos
leave
fadd
mov
or
jl
cmps
sub
pop
popa
push
aaa
test
in
mov
out
popa
movs
mov
into
call
and
cmc
sahf
ins
fidivr
lea
pusha
add
aaa
ins
mov
adc
mov
dec
iret
sbb
jl
pushf
pop
sub
ja
mov
cmp
lock
adc
pop
imul
(bad)
int3
xor
sub
add
aad
outs
jl
mov
jecxz
stc
adc
out
mov
(bad)
into
scas
cwde
sub
ret
push
push
ins
inc
cld
call
mov
xlat
ss
sbb
push
and
jl
ror
adc
aam
push
dec
cli
pushaw
(bad)
movs
pop
pusha
retf
add
lods
sub
in
mov
imul
retf
push
mov
mov
add
push
xchg
inc
ds
daa
and
addr16
push
jle
mov
pop
repz
jae
movs
sbb
icebp
sbb
lock
adc
mov
jg
in
fld
xchg
mov
test
push
ins
into
stos
ret
mov
cmps
lds
mov
enter
stos
jno
or
fucom
push
mov
ffree
into
xchg
mov
enter
daa
cwde
push
mov
popf
cli
fs
pop
cmps
adc
retw
mov
mov
and
(bad)
je
mov
push
sbb
or
pop
add
or
inc
add
jmp
cmp
ret
push
vmovsd
arpl
sbb
inc
or
push
sti
pop
fnstenv
xor
arpl
stos
inc
movs
xor
push
pop
imul
cmps
nop
jg
in
cmp
sub
push
aam
add
cmps
das
shl
mov
(bad)
xlat
mov
lea
mov
xchg
cmp
push
mov
xor
jmp
sub
add
dec
or
stos
neg
jge
mov
pop
mov
outs
aad
xor
mov
js
outs
adc
pop
mov
repnz
sub
xchg
pop
mov
jl
sbb
fxch
or
out
jae
str
cmps
fdivr
jge
lea
sar
jecxz
dec
mov
int
rol
xchg
or
dec
pop
mov
adc
call
push
push
in
jmp
jge
sub
sbb
inc
jg
call
push
xor
adc
iret
(bad)
int3
mov
jg
dec
fsub
mov
xor
lods
test
jns
retf
add
mov
adc
xchg
lods
ror
sub
cld
mov
outs
or
in
out
call
rcl
add
sub
idiv
fs
lds
shl
and
out
test
xor
retf
xchg
cmps
addr16
sub
dec
lods
or
sar
int3
cwde
jge
vpminub
sub
push
loope
(bad)
stc
clc
dec
mov
ds
iret
mov
dec
sub
fs
mov
fdiv
inc
(bad)
adc
std
shl
xchg
adc
daa
rcl
jecxz
imul
mov
jb
ficom
stc
inc
add
jne
inc
jno
int
add
imul
fsub
push
arpl
lds
and
stos
sub
dec
adc
jae
add
iret
jb
push
cmp
mov
mov
sbb
mov
xchg
xchg
jb
adc
mov
test
xchg
dec
cmc
shl
jbe
retf
adc
sbb
clc
sbb
cli
mov
sbb
cld
push
add
mov
adc
jo
fsubrp
dec
mov
int3
push
pop
into
stc
in
cdq
mov
jae
fisttp
inc
xchg
or
or
inc
cmp
sbb
add
bound
jmp
inc
mov
cwde
add
call
dec
jno
sub
outs
lock
sbb
mov
cwde
call
lds
mov
inc
inc
sub
and
stos
sti
xor
ds
call
mov
adc
sti
dec
lods
xor
ins
or
pop
mov
xor
into
je
xor
and
stos
fst
dec
push
iret
and
ret
mov
sub
cmc
not
adc
or
inc
aam
jmp
or
into
push
push
je
and
mov
mov
lods
jmp
repz
xchg
jo
outs
cs
adc
dec
test
or
jle
and
dec
and
add
inc
lea
push
cmp
or
add
scas
cmp
xchg
popf
or
out
(bad)
xchg
sub
movs
jne
jae
gs
pop
popf
mov
dec
sbb
hlt
mov
mov
mov
mov
add
dec
push
cmp
dec
mov
cmp
loopne
pop
fs
mov
dec
xchg
cmp
je
movhps
pop
imul
enter
sbb
add
mov
sub
dec
xor
out
mov
sub
je
shl
cli
inc
(bad)
mov
int3
(bad)
mov
mov
sub
ins
push
mov
mov
adc
iret
and
fwait
mov
popa
ja
inc
dec
pop
xchg
cli
test
inc
jl
stos
push
cmp
xor
jp
repnz
(bad)
stos
mov
and
or
and
loopne
mov
push
inc
cmc
inc
cdq
fsubrp
cmp
mov
sbb
mov
shl
js
outs
mov
popa
sub
aad
test
adc
cmp
sar
dec
cmps
xchg
and
inc
in
mov
jbe
dec
mov
call
retf
mov
pop
sbb
add
das
ins
js
popf
sub
mov
mov
mov
push
out
mov
pushf
outs
and
push
out
inc
fs
push
out
call
retf
ds
xchg
dec
icebp
aam
addr16
mov
jge
cld
and
jbe
inc
dec
push
daa
push
dec
aaa
out
call
(bad)
fcmovbe
push
rol
daa
pop
jbe
pushf
in
int
out
fwait
movs
gs
outs
sub
adc
jmp
int
push
push
mov
cmp
scas
mov
cmp
pop
pop
fist
and
pop
nop
test
pop
lock
inc
fimul
and
dec
push
push
push
pop
and
dec
jg
dec
mov
bsf
enter
arpl
ins
jp
aas
rcl
mov
sar
ds
adc
dec
lea
mov
xor
push
pop
sti
and
ret
jge
or
jmp
js
sub
sub
lods
ret
rcr
mov
out
push
mov
cmc
sti
bound
sbb
push
or
sahf
mov
adc
repz
cmps
rol
mov
movs
lds
ins
clc
stos
loopne
xor
js
mov
mov
outs
push
jno
retf
add
lods
imul
fidivr
and
xchg
and
xchg
adc
cmp
ret
xor
movs
in
or
push
cmp
lock
je
std
scas
in
fistp
mov
fadd
inc
inc
mov
mov
in
xor
(bad)
out
xchg
adc
push
push
inc
add
cld
push
mov
jmp
xor
add
mov
sub
and
xor
ficomp
mov
imul
mov
or
fdivp
cdq
mov
scas
pop
out
mov
cdq
sbb
dec
movs
pop
mov
lock
repz
ins
(bad)
repnz
pop
jno
cmc
out
dec
mov
mov
jge
nop
mov
in
outs
mov
dec
pushf
fiadd
adc
ds
repnz
or
cmp
test
loopne
mov
(bad)
jecxz
push
adc
inc
ss
mov
hlt
add
sahf
pusha
xchg
aas
(bad)
out
movs
aaa
jne
sbb
and
pop
or
sbb
inc
mov
add
outs
scas
call
shl
out
add
push
or
outs
ret
sub
je
cwde
mov
xlat
inc
or
cld
call
les
enter
push
mov
sub
pop
or
js
in
xchg
add
loop
jno
movs
cmp
cmp
ror
mov
(bad)
sbb
push
popa
inc
inc
lds
add
sbb
cmp
cmp
ss
daa
js
test
pop
inc
(bad)
(bad)
cmps
in
dec
xor
call
push
ret
pop
scas
dec
clc
cmps
pop
imul
mov
aaa
xor
cmp
out
jge
push
jnp
jbe
or
and
adc
pop
pop
mov
push
lds
scas
mov
lea
adc
mov
pop
fisttp
cli
jb
pop
std
outs
mov
or
add
mov
xchg
test
test
adc
icebp
std
xor
pusha
inc
cmps
test
out
daa
and
xor
inc
retf
xor
loopne
add
stc
xchg
or
fisttp
fild
cmp
xor
(bad)
inc
fwait
adc
mov
inc
xchg
mov
fcom
repnz
and
ja
retf
mov
mov
in
mov
add
pop
or
push
sub
cmp
dec
je
jg
call
xchg
jl
inc
or
jmp
cmp
push
jge
mov
fs
push
cmp
ins
adc
data16
add
in
stc
jo
mov
mov
mov
out
test
jle
outs
(bad)
ucomiss
xor
jle
shl
sub
sar
rcr
dec
jns
push
test
dec
jge
out
inc
in
scas
mov
imul
jmp
push
add
cmps
out
jmp
mov
or
mov
nop
push
or
mov
mov
and
es
mov
stos
xchg
adc
repz
sbb
xchg
test
fxch
jb
ins
jmp
sbb
arpl
ret
add
lods
sysenter
sti
mov
leave
adc
fistp
lea
dec
xchg
retf
iret
mov
sub
sbb
adc
cmp
xchg
sub
inc
(bad)
dec
fisttp
pop
aam
or
(bad)
mov
mov
mov
cmc
or
sahf
add
sub
jne
(bad)
aam
aaa
test
movs
outs
xchg
gs
jp
mov
fimul
sub
loopne
fs
pop
hlt
imul
outs
xor
or
and
jae
movs
add
movs
scas
mov
push
or
pop
jae
inc
inc
xchg
sbb
into
ret
pop
cmp
sbb
cld
push
jne
add
sub
inc
push
pop
xchg
jge
shr
(bad)
sub
xchg
nop
fistp
mov
fwait
push
xchg
push
repnz
cmps
push
test
xchg
xor
jmp
dec
gs
jge
loope
and
xor
cmp
sbb
push
hlt
popa
jge
dec
xchg
daa
daa
(bad)
push
mov
in
jl
sbb
dec
mov
aaa
add
push
dec
xor
outs
ret
and
(bad)
mov
lods
imul
fucomip
mov
pop
pop
test
xor
mov
out
fldcw
daa
inc
add
push
test
inc
in
clc
ss
cld
mov
mov
cmp
xlat
cs
test
rol
daa
hlt
ins
mov
jmp
and
js
rcr
jecxz
jb
ins
jecxz
scas
retf
mov
pop
enter
in
cmp
dec
or
ds
ficomp
inc
mov
imul
mov
or
mov
sub
push
push
into
(bad)
int
add
test
jo
lea
push
dec
loop
addr16
(bad)
sbb
mov
dec
dec
xchg
xchg
jp
pop
push
fs
jnp
mov
and
push
xor
adc
cwde
pop
or
arpl
fidivr
mov
mov
or
xor
mov
and
cmp
in
cmc
push
call
cmp
xor
pushf
pop
inc
mov
xor
sbb
imul
push
sub
stc
std
cdq
idiv
or
sub
sbb
shr
out
out
inc
sub
in
sub
mov
pop
sbb
cdq
sbb
push
dec
jle
mov
aaa
sub
xrstors
fidiv
rcl
dec
push
out
dec
or
pop
outs
dec
mul
sbb
int
pop
clc
pmulhw
or
lock
or
out
into
call
das
add
idiv
into
movs
jbe
xchg
xchg
inc
pop
or
xor
call
jns
dec
fist
stos
div
imul
and
(bad)
xor
in
shl
ret
sahf
retf
ret
xor
fst
pop
xchg
aam
sbb
movs
lods
cmp
sbb
add
dec
mov
push
xor
pushf
xor
fiadd
push
dec
cmp
inc
fs
xchg
and
mov
mov
cmp
fwait
retf
lahf
inc
enter
push
fst
data16
lds
xchg
fldcw
int3
or
lock
out
jno
imul
add
or
jmp
frstor
in
jmp
adc
lds
mov
mov
push
int
pop
inc
mov
pop
test
push
aas
xchg
dec
push
bound
pop
jbe
ss
iret
je
mov
or
aas
and
pusha
rcl
pop
pop
pop
mov
pop
mov
sub
jl
push
ss
mov
xchg
daa
xchg
mov
push
mov
jl
add
push
mul
mov
sbb
call
fsub
fdivr
ins
cmp
mov
and
std
mov
jecxz
ja
(bad)
scas
sbb
and
stos
add
jbe
cmp
fld
call
daa
(bad)
jno
inc
xchg
xor
and
add
in
cmp
cmp
test
aam
mov
inc
scas
aam
paddw
jbe
adc
xor
shr
test
es
cmp
xor
mov
inc
out
movs
test
fild
ror
add
dec
mov
mov
imul
inc
lods
mov
sti
pop
js
mov
inc
sbb
dec
or
dec
mov
retf
jg
pop
xor
xchg
call
mov
pop
loopne
movs
div
shl
sub
mov
or
ret
(bad)
jmp
stos
push
mov
enter
dec
sub
dec
lock
mov
call
iret
bound
fs
mov
fwait
ror
sub
mov
sub
(bad)
cmp
adc
jecxz
dec
std
sbb
pop
pop
push
push
loopne
div
and
jmp
pushf
popa
xor
mov
jae
or
shr
test
(bad)
pusha
mov
stc
adc
pusha
sbb
and
ja
sbb
sbb
push
mov
sub
jmp
mov
sub
retf
call
xor
iret
jne
ret
add
imul
fidivr
sahf
cmp
sub
popf
ret
pop
(bad)
fidiv
mov
xchg
int
pop
sub
pop
and
mov
movs
cmp
idiv
cmp
pop
mov
jl
xchg
mov
jle
in
push
jp
adc
jmp
adc
ss
lods
xor
xor
es
cmp
maxps
stc
or
mov
sbb
jne
push
sub
pop
xchg
sub
push
sti
inc
aaa
movs
dec
fs
dec
ss
cld
loopne
cwde
add
xor
inc
pop
pop
jnp
enter
scas
test
sub
mov
pop
cmp
mov
std
xchg
xor
xlat
mov
add
data16
mov
jno
inc
pushf
pop
ret
cmp
and
mov
jg
stos
hlt
sub
movs
(bad)
adc
xor
(bad)
dec
xor
clc
cmps
adc
outs
xchg
cli
call
(bad)
dec
jae
(bad)
repnz
dec
sub
sbb
pushf
dec
aam
xchg
jle
addr16
scas
mov
and
out
out
mov
ins
std
sti
and
adc
add
mov
mov
movs
rcl
dec
sbb
nop
sti
mov
or
mov
pop
push
mov
cmp
jbe
mov
dec
test
adc
ror
ins
(bad)
in
pop
inc
xchg
adc
adc
sub
mov
xor
push
call
mov
sbb
aas
xor
sub
add
pop
call
cmp
pop
cdq
ds
xchg
aad
sbb
xchg
xlat
mov
push
or
xor
out
shl
(bad)
sahf
cmps
test
push
mov
je
mov
sbb
jb
dec
inc
push
and
push
sub
mul
dec
jbe
lods
scas
xor
enter
call
ror
aad
mov
jne
test
xor
aad
lock
pop
pop
fmul
inc
test
das
(bad)
fs
lock
pop
test
ret
into
loop
push
cmp
mov
jge
or
(bad)
jno
out
push
mov
fs
scas
mov
neg
sub
xchg
fwait
push
mov
lods
mov
pop
(bad)
retf
mov
push
push
clc
cmc
xor
shr
dec
and
push
mul
and
sub
scas
movs
(bad)
cmc
mov
aam
sti
mov
jne
mov
adc
jg
or
pop
in
sahf
pop
dec
inc
mov
mov
test
mov
dec
mov
cmps
(bad)
and
cwde
pop
loopne
retf
les
and
jo
or
inc
cmps
popf
out
sbb
jge
fwait
leave
out
out
or
cmp
mov
lds
daa
(bad)
push
pop
xchg
mov
push
mov
jp
(bad)
or
daa
fisubr
push
dec
push
scas
stos
xchg
cwde
xor
and
jae
push
das
sbb
or
inc
push
jmp
bound
inc
adc
popf
jns
jmp
scas
ror
jp
adc
sar
or
push
fisub
adc
mov
pop
sub
scas
and
test
test
push
fs
ror
rol
into
lods
jecxz
leave
addr16
cmp
retf
xchg
mov
sub
pop
rol
cmp
test
and
xor
pop
mov
shr
sbb
cmps
adc
xlat
or
mov
arpl
dec
dec
(bad)
inc
mov
hlt
les
inc
(bad)
iret
je
fmul
pop
push
push
cdq
aaa
push
cwde
imul
mov
jno
or
cdq
imul
jne
hlt
pop
and
cwde
xlat
mov
test
sub
sub
sbb
mov
(bad)
mov
pop
pusha
dec
dec
dec
push
jmp
jb
test
inc
or
jae
test
pop
cmps
fimul
jle
sub
scas
popf
enter
mov
or
scas
xchg
and
data16
pop
xchg
cmp
inc
jbe
mov
jl
mov
adc
xor
push
test
push
sti
cmp
mov
cmc
loop
mov
fs
dec
out
clc
in
mov
jb
scas
imul
(bad)
enter
mov
add
xchg
jbe
scas
add
and
cld
fimul
loopne
and
cld
movs
outs
out
dec
xchg
scas
mov
push
in
xor
stc
push
jb
ret
push
ins
cmp
sbb
and
push
cmp
les
jmp
inc
retf
sub
dec
push
lods
out
lds
jb
test
xor
nop
rcl
mov
and
retf
dec
add
in
cmp
lods
jns
dec
rcl
cdq
push
dec
mov
inc
sbb
xchg
imul
xor
lds
cld
dec
or
fdivr
stos
mov
mov
push
push
pusha
mov
fwait
movs
icebp
and
jo
xchg
jmp
imul
(bad)
lock
mov
(bad)
jae
leave
lea
xor
sar
add
adc
inc
into
sbb
shl
sbb
sbb
mov
movs
inc
mov
push
inc
adc
jmp
fwait
push
or
mov
mov
addr16
pop
xlat
cmc
and
add
and
inc
cmp
fwait
or
ja
mov
mov
repnz
ss
div
adc
call
lahf
cmc
cmp
xor
xchg
sbb
cmp
ret
mov
sub
(bad)
jo
fcom
dec
dec
cmp
or
jbe
pop
ret
jo
jecxz
jmp
xchg
test
push
fidiv
xchg
scas
mov
sub
hlt
jecxz
jg
xchg
dec
add
and
outs
cwde
push
xchg
cmps
ret
push
pop
mov
push
xor
cmp
jne
test
fldln2
sub
mov
jl
fld
sub
ja
sbb
or
rcr
push
fcomp
cld
ss
xor
pop
xchg
nop
lahf
sahf
mov
push
test
(bad)
fistp
xchg
xlat
mov
lds
inc
xchg
mov
es
daa
xchg
int
gs
sub
sti
push
push
cmp
nop
jmp
push
gs
mov
repz
mov
sub
mov
test
jb
pop
and
dec
sbb
and
push
lods
je
imul
sbb
lock
sub
cdq
(bad)
loop
dec
pop
imul
and
xor
cdq
cli
xchg
(bad)
mov
cdq
push
fisub
sub
iret
cmp
or
add
nop
jne
and
rcr
lea
out
pop
pushf
mov
(bad)
ss
fst
bound
fmulp
nop
sub
aaa
xor
out
sbb
add
cmp
fs
jmp
and
(bad)
sbb
jo
test
jbe
(bad)
push
or
jl
lods
nop
and
mov
dec
aas
jg
jp
sbb
sbb
mov
repz
and
scas
test
or
mov
sub
lods
inc
dec
clc
aas
outs
ja
mov
mov
imul
lods
out
cwde
sub
das
jb
cmp
cmps
or
sub
hlt
sbb
pushf
cwde
add
scas
aad
js
add
mov
sbb
fs
pop
div
sbb
in
(bad)
je
pop
fcmovnu
ss
es
inc
aad
xchg
fs
cmps
imul
lock
sbb
test
(bad)
outs
jl
outs
sbb
and
cmps
sub
rol
sbb
imul
into
xchg
mov
aaa
sub
sub
push
sub
lods
pop
outs
leave
push
jmp
(bad)
in
and
mov
add
(bad)
sbb
cmc
rol
adc
std
adc
clc
or
pusha
inc
mov
mov
cmps
xchg
sbb
mov
and
mov
stos
mov
mov
sub
dec
pop
or
std
inc
shl
sub
mov
pop
mov
ja
mov
(bad)
or
(bad)
jns
mov
sahf
outs
mov
aaa
mov
dec
push
ins
shl
push
jnp
addr16
dec
test
jno
dec
lahf
jb
pop
and
pop
lea
jnp
sahf
mov
int
imul
pop
fcomp
cmp
push
push
xor
add
lea
aam
jbe
dec
cmps
fnstsw
mov
cmps
dec
aaa
dec
das
(bad)
cmc
inc
sub
cwde
imul
pusha
cmps
jmp
leave
sub
lods
ret
jno
clc
mov
pop
ficomp
and
jle
jge
pop
nop
push
daa
fcmovnu
mov
mov
xchg
jge
jge
movs
pop
jl
cmc
adc
clc
cmp
xchg
xchg
cmps
enter
jo
cmps
push
sbb
sbb
jbe
cmc
mov
div
ds
sub
dec
mov
(bad)
inc
pusha
jmp
fstp
test
lahf
fdiv
ror
gs
retf
imul
adc
push
dec
shl
sti
adc
sahf
cld
and
and
das
push
aas
aas
xchg
dec
pop
lods
int
push
in
or
dec
cli
adc
lock
iret
mov
hlt
push
clc
and
data16
repz
lahf
push
pop
retf
cmp
jne
mov
or
ds
push
push
outs
enter
sbb
js
sub
jbe
gs
jne
(bad)
sbb
mov
xor
push
xchg
jmp
mov
sti
sti
and
push
and
test
arpl
lods
icebp
arpl
lahf
ins
fwait
xor
push
scas
xchg
mov
aaa
mov
fadd
mov
mov
xchg
popa
jno
xchg
data16
or
stc
adc
jns
xchg
cdq
mov
mov
inc
neg
jmp
push
jo
xchg
(bad)
fwait
xchg
js
ret
fs
daa
lods
mov
enter
add
loope
mov
sbb
mov
into
mov
mov
mov
iret
push
pop
mov
test
mov
dec
and
add
cmp
movs
jo
xor
xor
retf
push
shl
mov
pop
lods
inc
add
xchg
push
nop
ror
test
lods
sub
jns
jo
stos
outs
cmp
(bad)
in
jge
fstp
imul
cwde
mov
sbb
(bad)
sbb
dec
ffree
xlat
adc
mov
cmp
pop
sub
je
pop
mov
test
mov
shr
inc
dec
adc
movs
jo
adc
loop
add
pop
pop
or
dec
test
push
stos
sbb
aas
or
dec
cmc
fldcw
and
iret
fadd
lds
jg
in
outs
mov
dec
adc
loop
or
push
icebp
jge
stos
xor
xchg
push
xchg
or
test
gs
jmp
inc
gs
pushf
call
jb
cwde
push
retf
mov
mov
pop
rol
mov
sahf
call
jecxz
push
xor
add
pop
into
gs
fbstp
lock
pop
pop
adc
retf
push
mov
pop
add
loop
es
mov
adc
lock
xchg
xchg
fist
or
mov
jl
inc
popf
movs
push
jne
and
push
call
inc
ss
loop
cmp
fs
add
xor
dec
pop
arpl
push
push
or
and
cmp
mov
std
xlat
inc
push
(bad)
mov
cld
xchg
sbb
jge
jbe
xor
and
cdq
ja
jne
xor
imul
mov
mov
aas
add
scas
jnp
call
push
mov
fs
das
data16
(bad)
jmp
loop
sbb
out
jp
or
adc
xor
fnstcw
cmp
cmp
icebp
cli
sub
adc
adc
ins
sub
leave
call
mov
push
xor
mov
or
jae
inc
or
test
or
aaa
and
mov
iret
mov
cmps
dec
cmp
cmp
aad
int
jne
inc
sbb
loop
pop
int3
mov
arpl
stos
sub
push
jbe
idiv
je
ins
dec
jl
dec
mov
or
or
xor
cmps
ss
inc
or
lock
sbb
test
push
dec
sub
imul
pop
jmp
cmp
in
(bad)
repnz
sbb
push
mov
cdq
xchg
pop
out
mov
inc
fs
jl
fldcw
lods
add
loop
outs
jnp
cdq
in
test
dec
cld
(bad)
jge
out
mov
icebp
pop
mov
lock
push
imul
pushf
cmps
pop
leave
(bad)
repnz
dec
inc
rol
xor
icebp
cs
and
pop
push
out
rol
push
xchg
jb
cmps
and
arpl
enter
mov
sbb
or
mov
daa
dec
ins
out
mov
jnp
jns
xchg
mov
es
lock
sbb
xchg
or
sbb
lods
and
ja
xor
sub
repz
loope
sub
fidiv
add
dec
push
rol
sbb
pop
fist
add
add
(bad)
jns
cmp
mov
fbstp
jg
cmp
sub
xchg
inc
xlat
mov
cmps
mov
or
clc
fwait
cli
jle
into
cmp
stos
xor
frstor
sbb
dec
xor
sub
outs
dec
inc
mov
imul
ins
imul
mov
jmp
call
gs
add
icebp
adc
mov
icebp
cwde
mov
push
sbb
in
push
retf
loope
imul
ret
add
jge
push
jb
jns
add
mov
xchg
ret
addr16
call
jae
sub
mov
cli
ret
movs
out
dec
and
dec
cmc
xlat
ja
push
dec
stos
cmp
xchg
movs
movs
rcr
sbb
push
das
cmp
jecxz
ja
and
push
mov
jae
out
or
dec
mov
xor
lds
gs
or
sub
cmp
sub
jle
xchg
aam
pop
add
inc
movs
inc
pusha
idiv
xor
ss
lds
out
cmp
add
das
pushf
out
js
dec
jno
hlt
scas
add
iret
gs
inc
jg
std
push
sub
inc
div
xchg
push
(bad)
fnstsw
adc
push
aam
mov
inc
test
test
test
outs
imul
add
out
xor
rcr
jmp
(bad)
jmp
enter
add
push
das
pop
or
retf
jno
mov
js
daa
ret
jo
aam
xor
mov
push
outs
mov
out
xchg
aaa
jns
lea
pop
push
xor
mov
fnstsw
xchg
pop
pop
lock
xchg
pop
cmp
push
sub
mov
mov
es
add
aam
test
sbb
es
mov
fcom
icebp
clc
pop
mov
mov
inc
cmp
jg
ins
frstor
ret
ss
loop
arpl
iret
ins
inc
call
sub
cmp
cs
xor
mov
rcl
add
sub
push
jge
pop
sub
enter
pop
leave
mov
mov
inc
or
cld
int3
jae
lds
arpl
sti
test
inc
out
mov
xor
lock
scas
mov
xlat
inc
(bad)
fst
mov
pop
dec
dec
add
sahf
and
test
shl
inc
faddp
ret
in
imul
(bad)
daa
inc
xor
pop
pop
retf
pop
loop
and
not
mov
cmp
add
or
adc
fnstcw
and
sub
sbb
xor
and
jp
pop
pop
mov
mov
xchg
inc
sar
mov
lock
mov
xchg
and
fdivr
rcr
in
sub
adc
push
bound
lahf
sbb
xchg
fidivr
push
pop
es
inc
xor
cmp
mov
sub
jmp
pop
aad
mov
jmp
bound
int
push
push
inc
push
adc
mov
loopne
jmp
loop
inc
push
sbb
imul
std
inc
shr
mov
fimul
clc
fdivr
push
sub
call
dec
pop
aaa
mov
cmp
repz
jl
adc
xchg
cmp
push
mov
mov
push
(bad)
xchg
pop
stos
dec
outs
test
idiv
movs
sub
cmp
in
dec
aad
ja
jmp
(bad)
nop
dec
aaa
shl
loop
adc
mov
jns
(bad)
ret
out
sti
jle
fist
cli
pop
adc
(bad)
ja
mov
mov
(bad)
xchg
push
mov
jo
inc
mov
cdq
stc
call
les
xchg
xor
cmps
in
add
dec
xchg
div
mov
scas
in
js
mov
lock
leave
push
call
sahf
inc
leave
pop
test
jmp
mov
add
cmp
pop
mov
xchg
adc
xor
popf
jno
xor
cli
sub
sub
add
movs
test
les
mov
movs
popa
pop
shl
inc
push
dec
and
lods
mov
pop
jmp
mov
xchg
add
ss
xchg
mov
lods
cli
jecxz
push
hlt
mov
mov
nop
int
dec
and
dec
imul
mov
enter
push
div
movs
mov
cdq
test
push
mov
cmp
pop
push
inc
(bad)
mov
outs
cmp
pop
pop
xchg
imul
jnp
cmps
xor
xchg
xchg
data16
out
cmp
mov
aad
inc
repz
jp
and
pop
jp
mov
int3
add
fwait
cwde
sub
mov
leave
sahf
scas
leave
lock
cli
fcomp
ja
mov
push
mov
cli
push
test
lods
out
movs
or
jne
outs
cmp
adc
test
in
cdq
push
cmp
aaa
(bad)
aas
(bad)
add
adc
movs
stos
push
or
hlt
mov
jecxz
cs
std
or
push
in
cmps
jb
sti
ret
pop
test
aas
pop
xor
push
arpl
ret
hlt
retf
push
cmp
test
scas
ret
pushf
inc
shr
inc
sub
sub
test
mov
add
retf
out
mov
push
jl
test
cmp
test
inc
das
cmc
mul
loopne
fwait
cdq
test
fnstenv
mov
lahf
mov
xchg
dec
jecxz
xchg
push
sti
lock
dec
push
add
out
or
xor
stc
jae
mov
push
jns
sub
and
fcmovu
or
lea
cli
fild
retf
gs
add
cmp
mov
or
jecxz
mov
push
sar
mov
stc
mov
out
(bad)
test
fimul
cli
or
pusha
add
fwait
mov
or
cmp
into
mov
(bad)
mov
jno
daa
and
std
lds
aas
inc
pop
dec
adc
xchg
push
and
dec
jmp
out
jno
mov
inc
ins
(bad)
fcomp
fsubrp
mov
and
popf
jge
pop
lds
cmps
es
dec
faddp
jbe
or
imul
mov
fidiv
nop
inc
cli
cmp
leave
mov
mov
loope
or
shr
dec
add
mov
loope
jp
fmul
pop
mov
loope
dec
popa
loop
dec
jae
pushf
xchg
popf
jbe
add
inc
jecxz
jmp
ds
push
sbb
pop
lahf
in
mov
jno
mov
pop
mov
push
hlt
xor
mov
in
adc
inc
lea
dec
in
jmp
fs
sahf
push
sub
stos
idiv
lods
mov
mov
and
loop
xchg
and
add
ret
mov
cmp
test
mov
xor
or
sub
popf
jl
jle
daa
jle
popf
ds
cwde
mov
cmp
fild
pop
loopne
xor
jecxz
loope
in
into
cli
inc
xor
adc
sub
jb
mov
popa
daa
adc
stos
add
push
pop
mov
pop
xchg
sub
leave
dec
neg
inc
ret
test
int3
jae
popf
fldcw
aaa
xlat
mov
retf
inc
mov
jle
je
mov
cs
xchg
dec
jge
sub
fistp
push
push
andnps
repz
xchg
xor
add
loop
imul
out
retf
ror
aad
out
pop
jbe
or
jo
push
fild
cli
dec
cmp
repz
adc
ret
mov
not
pusha
ja
out
pop
sbb
xchg
add
adc
add
sti
ret
mov
test
lods
sbb
idiv
out
jp
sub
cs
sub
test
cli
add
popa
addr16
mov
cmps
lahf
cwde
inc
fisub
stos
jbe
push
xchg
dec
xor
fs
add
xor
sbb
sub
pop
add
je
sbb
(bad)
mov
mov
mov
ficom
or
sub
(bad)
outs
push
aam
dec
adc
aas
inc
fbld
mov
jmp
xor
popf
adc
xor
or
mov
mov
inc
stos
pop
cmps
mov
sbb
mov
pop
add
in
dec
pop
gs
scas
loop
lock
clc
jmp
push
fsubr
push
dec
es
pop
int
(bad)
out
icebp
mov
cs
outs
mov
icebp
or
xor
enter
sar
hlt
mov
hlt
cmps
push
sub
cmp
dec
push
cmpxchg
syscall
retf
mov
push
jmp
aam
js
(bad)
sbb
jle
dec
or
je
sbb
imul
fstp
push
stc
cmc
xchg
sbb
mov
mov
jecxz
rcr
(bad)
add
test
push
or
xchg
fnstsw
add
in
cmp
push
xor
sbb
sbb
hlt
popa
push
push
pop
retf
push
jnp
mov
hlt
push
push
push
int3
jmp
mov
fwait
adc
(bad)
out
and
adc
adc
jo
ret
inc
sbb
out
adc
push
popa
dec
int
mov
(bad)
pop
mov
sbb
stos
out
sbb
test
jbe
mov
popf
lahf
mov
outs
cmp
mov
xchg
add
fidivr
ret
ja
lods
out
pop
sbb
pop
pop
adc
fnclex
mov
popf
loop
sub
jge
mov
jl
icebp
adc
xchg
sbb
or
stos
rcr
xchg
ds
push
xchg
push
xchg
loop
and
dec
dec
push
stc
mov
jb
jg
movs
aad
test
(bad)
enter
dec
cld
mov
cmp
xchg
add
mov
xor
ins
dec
popa
cs
ret
xchg
xchg
mov
xor
arpl
loop
cmp
scas
cmp
(bad)
jns
cmps
sub
in
lahf
cli
mov
dec
das
mov
test
push
dec
dec
jnp
mov
sub
leave
leave
popf
hlt
ret
push
(bad)
enter
cmps
clc
cmp
add
pop
lea
(bad)
aad
ja
mov
fiadd
mov
pop
jns
inc
inc
and
inc
ficomp
repnz
bound
inc
push
div
je
(bad)
out
mov
sub
ficomp
lahf
push
or
movs
fstp
and
mov
into
jge
loop
mov
nop
jno
sub
sbb
jle
in
xchg
adc
fs
ret
stos
leave
add
push
jmp
(bad)
aad
ss
cdq
xchg
mov
aas
or
cmp
fistp
mov
or
ja
push
push
enter
adc
inc
jmp
gs
popf
mov
cmps
add
movs
pop
out
cmp
jno
sbb
loop
(bad)
fld
sbb
mov
cmps
mov
jo
xchg
cmps
pushf
adc
shr
pushf
sub
mov
test
ficomp
cmc
rcl
fcom
es
cmc
push
jo
loopne
sar
icebp
and
mul
or
push
leave
dec
inc
cmps
add
jecxz
sbb
popf
lods
jl
int3
test
inc
push
test
sub
inc
sub
xchg
xlat
test
xor
mov
push
adc
xchg
lods
lods
push
enter
shl
loopne
lahf
and
or
mov
jns
pop
retf
adc
enter
ins
cld
pop
ins
sbb
pop
popf
fwait
stos
in
in
push
mov
daa
push
test
lds
lock
inc
cmc
inc
pop
gs
cmps
cmp
ret
or
fs
inc
jno
cmp
xchg
lock
pushf
push
ja
outs
xchg
sahf
push
dec
cld
jae
mov
test
cs
jge
pop
mov
adc
aas
daa
movs
je
add
test
loopne
jg
sbb
movs
icebp
xchg
or
inc
lea
clc
mov
cwde
(bad)
enter
sub
add
inc
stos
sbb
fcom
aas
mov
add
mov
or
mov
adc
mov
jnp
dec
cwde
xchg
(bad)
push
dec
mov
sti
cmp
sub
test
outs
out
(bad)
xor
adc
imul
mov
inc
mov
ins
dec
and
scas
mov
xor
pushf
mov
sub
push
jns
outs
ss
push
or
fiadd
jae
sub
stc
xchg
vshufps
sub
pop
adc
popf
xchg
fld
and
or
div
push
adc
add
add
mov
loope
in
add
fld
lea
(bad)
adc
sbb
call
or
lock
retf
mov
push
loope
ret
adc
mov
sbb
in
add
mov
ss
or
push
outs
aam
push
scas
popa
fwait
mov
aam
div
hlt
ins
cmp
pop
data16
mov
je
out
xlat
or
mov
jmp
retf
cmps
and
sub
sub
lds
and
cmp
pop
dec
lods
ficomp
push
and
add
xchg
jbe
pop
out
dec
mov
pop
ds
sub
jae
jnp
push
xchg
repnz
pop
cs
adc
rcl
ins
jmp
add
push
xor
pop
loopne
mov
int
sub
xor
fmul
enter
aaa
repnz
fst
aaa
in
jo
xchg
dec
pop
or
data16
mov
stos
adc
test
ret
popf
cmp
cmp
(bad)
push
and
fsub
inc
fist
mov
inc
(bad)
mov
(bad)
call
inc
outs
imul
scas
retf
or
retf
mov
xor
dec
jbe
hlt
sbb
ret
jg
in
push
retf
in
push
adc
fcomp
in
add
push
dec
(bad)
call
rol
dec
pop
fs
call
mov
pop
xor
les
(bad)
(bad)
hlt
cdq
in
rcl
push
adc
(bad)
mov
lods
cmp
inc
lods
movs
sti
enter
cld
mov
(bad)
test
test
rol
fdiv
retf
lea
out
xchg
xchg
(bad)
sub
fwait
cmps
cmp
pop
ror
mov
das
xchg
test
adc
ds
push
push
add
jmp
and
cmps
fadd
lock
mov
gs
leave
xchg
test
mov
rsqrtps
cs
push
sbb
xchg
lods
test
jnp
push
sbb
adc
xchg
pop
xchg
fisub
fwait
jl
arpl
fadd
rcl
add
call
adc
xchg
jb
in
(bad)
push
jl
scas
inc
sahf
inc
inc
out
add
jmp
lods
dec
xchg
adc
jbe
pop
(bad)
retf
out
cmp
gs
jbe
arpl
and
loopne
xchg
mov
mov
mov
mov
jge
mov
repz
(bad)
jmp
mov
mov
sbb
pop
movs
adc
mov
int3
rol
fdivp
add
movaps
fimul
xor
adc
test
scas
movs
(bad)
sub
inc
cld
xor
out
arpl
mov
enter
fisub
mov
test
xchg
out
xor
cld
and
pop
push
or
das
in
les
ss
pop
add
xor
out
dec
inc
movs
test
dec
imul
sbb
jb
repz
sub
int3
not
add
push
bound
inc
mov
xor
call
inc
mov
js
mov
sbb
bound
adc
cwde
retf
mov
mov
pop
xor
(bad)
stc
cmp
or
ret
test
out
pop
enter
test
lds
jp
retf
mov
xor
cwde
bound
jo
call
mov
cmp
adc
mov
mov
clc
outs
xor
mov
xchg
ret
aaa
pop
add
sub
cmps
sbb
mov
push
ss
fmul
int3
xchg
fwait
loop
add
and
sub
xor
daa
lea
call
and
add
push
cmp
mov
and
push
out
or
inc
mov
jb
pushf
jmp
int3
xor
fiadd
popf
ret
xlat
adc
(bad)
push
test
mov
jmp
adc
lea
adc
dec
mov
popa
adc
cs
js
xchg
push
push
popf
xor
inc
jge
add
cmp
sbb
dec
xor
cmp
push
push
cld
pop
mov
ja
std
mov
cmc
test
dec
aas
inc
fwait
jge
mov
das
and
xchg
inc
sub
call
xor
out
pusha
mov
test
or
and
stos
jmp
push
pop
push
dec
ja
jno
addr16
xor
stc
pop
cmp
(bad)
call
shr
mov
pop
enter
dec
sbb
loop
repnz
add
cmc
mov
sbb
bound
jb
ja
out
push
(bad)
lods
test
mov
repnz
inc
movs
(bad)
enter
in
pop
ret
int3
and
lock
jnp
adc
test
fnstenv
jae
fadd
or
jp
xchg
sub
(bad)
cmovae
popf
scas
lock
xor
mov
idiv
push
inc
jmp
push
shr
and
add
pop
loope
shl
adc
ds
cmp
jmp
jno
xor
or
or
dec
dec
xchg
outs
xor
adc
(bad)
dec
in
or
mov
in
xor
sbb
jmp
mov
scas
je
pop
or
jg
cmp
add
cld
popf
push
add
push
mov
inc
cmp
dec
jo
xchg
xchg
scas
xchg
and
sbb
and
inc
xchg
jno
mov
inc
bound
sub
(bad)
jne
cmp
inc
and
sub
xchg
test
arpl
xchg
xchg
cdq
pop
and
add
jmp
push
or
cmp
push
dec
add
jmp
rcl
pop
fiadd
shl
cdq
pop
retf
pushf
fild
sbb
in
cld
fs
pop
mov
fld
xchg
pop
ins
pop
cmp
(bad)
fisub
scas
mov
cli
je
fst
jnp
mov
mov
(bad)
jl
mov
in
ja
shl
mov
pusha
cwde
leave
in
or
lods
fild
mov
(bad)
sti
test
or
outs
mov
adc
popa
les
lahf
loop
xchg
xor
cmp
fucomip
sub
push
cmps
cmp
mov
push
bswap
mov
(bad)
push
aaa
jns
inc
addr16
add
mov
sti
addr16
fld
add
ret
ins
test
jmp
loope
neg
push
daa
push
out
mov
and
cmp
ja
xlat
dec
mov
and
jmp
and
dec
push
sub
or
cmc
adc
jb
jbe
sbb
mov
out
push
push
jb
sub
add
imul
cmp
jae
ds
and
imul
or
sti
sar
dec
in
outs
(bad)
mov
(bad)
ins
and
mov
mov
inc
in
mov
mov
adc
mov
sar
jg
sub
in
sar
push
dec
cmp
es
inc
jmp
ficom
frstor
sub
mov
mov
mov
mov
push
nop
int3
fmulp
jmp
dec
scas
dec
pop
clc
stos
clc
pop
adc
inc
dec
dec
cmp
lock
sbb
es
inc
dec
jge
mov
dec
mov
jl
lea
ds
cs
js
jo
scas
sbb
outs
and
repz
daa
add
rol
jb
aas
or
xchg
push
stc
inc
inc
fsub
cmp
test
adc
sub
cld
div
sar
call
mov
call
loopne
xor
pop
ja
mov
adc
cli
mov
scas
push
mov
push
nop
mov
mov
popf
rol
mov
(bad)
mov
stc
popf
jmp
sbb
jge
push
push
pushf
sub
ffreep
xlat
or
call
dec
mov
xchg
out
sub
pop
push
popf
mov
(bad)
das
dec
fbld
and
sub
mov
push
adc
and
pusha
push
dec
jns
push
movs
mov
push
test
push
test
and
jno
loop
mov
fld
pop
add
(bad)
shl
repz
imul
out
call
mov
xor
retf
add
int
or
mov
pop
inc
mov
pop
adc
sub
sar
cmp
fadd
adc
daa
adc
cmp
push
xlat
push
dec
sbb
xchg
shr
sub
imul
mov
das
or
and
push
cmps
cld
add
mov
pop
call
cld
scas
sub
ins
hlt
das
sbb
or
cdq
mov
(bad)
and
cwde
add
inc
inc
add
push
push
jmp
out
iret
xchg
mov
xchg
pusha
xor
nop
sub
into
arpl
iret
rcl
bound
outs
pop
mov
cmp
xor
dec
adc
aaa
neg
jae
jmp
push
jmp
sub
pop
addr16
jmp
jbe
add
mov
mov
icebp
cmps
adc
sub
rcr
into
neg
je
xchg
xor
lods
push
mov
adc
orps
mov
add
sbb
jl
jae
je
stos
out
fldenv
and
add
adc
ror
iret
nop
icebp
mov
mov
jge
popa
and
push
xor
add
mov
iret
sub
fst
ds
shr
mov
adc
(bad)
out
adc
imul
inc
xor
pop
push
sti
pushf
xchg
aad
push
imul
fisttp
mov
movs
xchg
and
push
mov
inc
add
xor
(bad)
sbb
xor
mov
push
in
imul
pop
loopne
cdq
hlt
mov
push
(bad)
adc
mov
lods
pusha
cli
or
imul
jle
loop
mov
push
inc
es
sbb
fdiv
cmp
inc
hlt
in
push
enter
out
push
xor
repnz
and
sti
mov
aaa
xchg
scas
adc
out
mov
popa
push
(bad)
(bad)
add
sub
jmp
pop
retf
ins
outs
movntps
aad
jl
int3
in
xchg
push
sbb
lods
cmp
mov
sub
cmp
xor
fs
jns
mov
retf
xchg
dec
shr
sbb
lods
arpl
push
retf
movs
cmc
or
mov
(bad)
mov
add
push
jecxz
enter
out
and
cwde
sbb
push
cmps
out
mov
adc
xchg
mov
jnp
mov
cmc
mov
scas
popa
out
mov
and
dec
inc
dec
pop
push
mov
ficomp
fwait
js
xor
jmp
pop
std
pop
sar
gs
scas
or
mov
push
neg
sub
lea
fs
sbb
std
push
in
pop
or
jmp
inc
(bad)
test
lea
xchg
dec
jg
xchg
dec
fnstsw
shr
sbb
mov
hlt
int
mov
adc
xchg
or
aaa
jg
test
imul
sub
dec
jp
mov
fsubr
dec
sbb
jecxz
retf
pop
jmp
mov
cmp
fnstcw
test
aas
jmp
fs
jle
retf
pop
cmp
cmp
sub
fucom
loope
jl
sti
jns
lock
mov
xchg
pop
loop
fnsave
retf
xlat
out
imul
push
cdq
fsubr
add
sbb
jns
jg
mov
and
icebp
adc
pop
sbb
xor
sbb
outs
in
sub
mov
inc
call
pusha
push
xchg
(bad)
jbe
inc
and
inc
push
jp
rcr
nop
pop
and
xor
hlt
fdivr
in
rcr
cmp
sbb
sub
jecxz
lock
cmp
dec
pop
sub
lds
mov
mov
into
adc
mov
cmc
jl
inc
fstp
add
push
jns
fwait
into
f2xm1
das
bound
xchg
enter
add
sub
dec
call
pop
pop
dec
pop
dec
imul
retf
out
jmp
sub
(bad)
sbb
add
xchg
jge
test
mov
jnp
fwait
cmps
and
movs
xor
add
pop
inc
arpl
push
push
addr16
nop
lea
xor
xor
xor
jge
dec
out
mov
fisubr
jecxz
sti
mov
call
stc
mov
push
sbb
mov
shl
fst
mov
dec
dec
push
xchg
mov
dec
sub
inc
loopne
push
out
xor
push
inc
add
push
pop
sub
mov
(bad)
cmps
mov
cmovp
xor
fld
mov
dec
out
add
es
pop
dec
or
ror
add
sub
dec
xor
ret
das
sbb
stc
ja
aad
ins
fld
dec
js
inc
add
aaa
xchg
icebp
imul
loopne
push
rol
je
hlt
fwait
or
nop
outs
ror
fnstsw
imul
pop
xor
aad
jo
data16
adc
shl
stos
aad
frstor
pop
xchg
aaa
cmp
rol
ja
push
outs
add
daa
ret
pushf
les
sbb
adc
xor
xchg
inc
or
test
stc
inc
xchg
mov
cmp
sub
loopne
xor
inc
cli
pop
adc
fimul
mov
dec
mov
adc
push
cld
pushf
inc
jl
lea
pop
jge
jl
test
inc
std
cli
mov
mov
adc
jne
je
push
and
mov
pop
mov
add
mov
fstp
jp
movs
les
mov
cmp
test
ja
mov
adc
movs
sbb
pop
mov
retf
mov
xchg
in
iret
lods
icebp
repz
das
inc
cmp
xor
jno
dec
cwde
in
sbb
loopne
xchg
push
jbe
add
mov
std
aam
sub
mov
loopne
push
xor
add
out
stc
in
add
les
or
ja
inc
jno
loopne
jge
cwde
jmp
ret
ret
mov
push
dec
push
xchg
mov
xchg
jae
mov
into
aad
jb
lahf
push
loope
iret
dec
jge
cmp
xchg
mov
inc
dec
sbb
sbb
jge
add
sub
in
or
call
out
or
inc
add
jge
idiv
stos
js
jne
test
push
or
call
mov
mov
mov
daa
push
cmp
pop
es
fisubr
daa
push
aaa
mov
or
push
dec
xchg
add
push
push
pusha
out
ins
jp
icebp
daa
inc
inc
pop
xor
dec
adc
(bad)
mov
inc
ja
mov
mov
jl
pop
dec
jmp
sub
xchg
neg
push
ds
lds
dec
jmp
shl
lea
jmp
(bad)
jo
imul
ins
and
ja
popa
fmul
into
add
push
xor
lahf
xlat
push
dec
test
xor
jl
fnstcw
adc
rcr
retf
daa
adc
adc
vpaddq
sbb
cmp
mov
fld
and
addr16
aas
les
and
jne
retf
or
mov
adc
sbb
cmp
jp
js
pop
jmp
dec
fsubr
xor
and
mov
sbb
in
ret
inc
mov
div
xor
mov
sub
lock
inc
enter
xchg
dec
daa
test
ss
add
push
out
ret
aaa
xlat
iret
or
pop
cmp
xor
int3
adc
jne
lods
pusha
bound
scas
mov
lods
gs
pop
push
add
dec
call
sub
je
mov
pop
mov
aas
outs
pop
hlt
test
fild
push
pushf
dec
push
inc
hlt
jg
outs
loopne
mov
sahf
leave
movs
ins
push
xchg
ss
inc
loope
mov
xor
test
mov
lea
dec
jne
push
and
repz
mov
(bad)
mov
push
adc
dec
cs
ins
sbb
int3
call
sub
ret
scas
dec
in
dec
jno
pop
ins
xchg
daa
popa
ret
adc
enter
iret
fnstenv
inc
or
jmp
lods
test
add
fstp
scas
cli
je
cld
sahf
aam
retf
leave
xchg
dec
and
adc
push
int3
std
cmp
dec
xchg
sub
mov
pop
fild
inc
arpl
cmps
fcomp
push
and
fcom
sti
jno
jecxz
movs
data16
test
mov
lds
xor
pop
or
test
inc
retf
dec
shl
xchg
push
sub
jno
sub
ins
mov
jno
xchg
inc
fucomi
std
rol
inc
repnz
xchg
pop
xchg
out
repz
loopne
lods
mov
stos
in
add
push
mov
sbb
(bad)
(bad)
fsubr
fimul
jbe
jno
xchg
fwait
stos
push
(bad)
jns
cmps
cmp
push
jo
mov
push
(bad)
ja
inc
mov
pushf
mov
loopne
mov
loopne
xor
xlat
pop
jnp
imul
(bad)
mov
mov
jmp
dec
inc
adc
sub
shl
jno
repnz
popa
ins
jmp
hlt
outs
xor
jmp
mov
cmova
xor
mul
out
pushf
lods
mov
jle
mov
cld
sub
or
sub
add
adc
pop
or
xor
add
inc
cmp
movs
xor
cwde
inc
jmp
call
jns
add
out
(bad)
mov
sub
hlt
imul
dec
(bad)
repnz
daa
xchg
adc
lods
mov
cld
movs
inc
or
repz
repz
mov
cmp
daa
xor
loop
sti
sub
out
add
sbb
std
fadd
add
in
int3
mov
or
mov
mov
inc
std
adc
mov
cld
inc
jmp
inc
jmp
mov
call
push
js
rcr
inc
scas
jo
dec
mov
loope
pop
vphaddudq
scas
(bad)
mov
fdiv
in
mov
in
ror
rcr
ins
out
out
push
mov
sub
or
jno
xchg
popa
aas
das
inc
sub
cmp
bound
cld
int3
popa
mov
adc
mov
test
inc
cs
into
mov
ja
sub
cmp
jmp
mov
adc
add
mov
mov
leave
add
jnp
xor
nop
jecxz
xor
and
sbb
outs
jmp
jbe
xchg
aaa
add
pop
int3
bound
pusha
ins
dec
sub
mov
pop
cmp
jns
jl
fbld
enter
mov
add
pushf
add
leave
mov
inc
add
mov
cmp
sbb
inc
xor
rcl
sub
jecxz
scas
(bad)
jge
add
loope
sti
and
pop
xor
sbb
xchg
dec
push
lahf
mov
call
jle
mov
or
mov
inc
and
pop
jl
gs
retf
into
push
jmp
xchg
push
adc
cmp
pop
data16
jl
push
mov
xchg
pop
pusha
arpl
rcl
loope
add
inc
jle
mov
lock
push
xor
call
cmc
addr16
shl
add
cmps
mov
dec
mov
int3
bound
cmp
and
sbb
add
out
add
in
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
data16
push
mov
push
mov
mov
mov
cmp
sete
and
movzx
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
call
mov
mov
mov
sub
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
call
add
pop
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
jmp
mov
mov
call
mov
jmp
add
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
add
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
jmp
mov
mov
mov
mov
call
sub
mov
jmp
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
lea
mov
mov
mov
mov
movzx
mov
mov
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
and
or
xchg
add
jmp
ins
sub
mov
(bad)
fbld
jg
push
mov
stos
imul
and
rcr
add
je
ret
push
and
sbb
fsub
xor
push
add
inc
mov
and
out
and
jg
ficom
out
and
call
std
adc
adc
mov
mov
sbb
lea
outs
inc
int
and
cli
fmul
and
add
mov
frstor
in
inc
out
popa
cmp
xchg
add
jmp
out
sub
adc
add
push
add
inc
and
pop
fisubr
mov
and
mov
sbb
add
add
sub
mov
xchg
je
push
add
lock
add
and
les
mov
jg
jmp
xor
and
sub
mov
and
inc
test
fwait
lock
mov
sub
mov
sbb
add
cmp
and
rep
in
ror
push
add
mov
add
jb
movd
inc
aam
jo
adc
add
add
leave
jmp
xchg
pop
fisttp
sub
out
mov
add
push
and
sub
xchg
aad
test
add
pushf
dec
or
mov
mov
dec
inc
test
add
xchg
add
str
ret
add
inc
cmc
inc
push
mov
add
push
mov
add
sub
adc
pcmpeqb
jg
add
jmp
mov
mov
mov
cmp
cmovne
and
and
aaa
(bad)
xchg
mov
jg
(bad)
popa
mov
mov
fbld
mov
hlt
push
sub
mul
push
test
pop
push
pop
iret
mov
cs
in
jns
add
add
lods
outs
retf
push
or
jp
fwait
add
inc
aam
shr
jmp
pop
fs
and
(bad)
call
jmp
mov
mov
(bad)
jae
fs
lods
adc
cmp
mov
mov
sbb
mov
sbb
add
inc
and
leave
jmp
push
pop
ja
mov
add
scas
gs
pop
sub
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
xor
dec
movs
mov
inc
mov
dec
xchg
pusha
add
cmc
push
lock
aaa
xor
scas
add
inc
adc
add
jecxz
sti
js
sbb
push
add
lods
cdq
add
mov
jle
call
cmp
and
mov
push
cmp
inc
and
cmps
push
and
imul
ret
popa
lods
mov
mov
frstor
pop
add
add
add
push
inc
and
pop
div
sbb
scas
lar
add
add
(bad)
mov
stc
xchg
pop
dec
out
lods
and
cmovp
add
add
add
add
lods
ss
fidivr
mov
mov
psubd
add
add
mov
(bad)
sub
mov
add
push
out
loop
lea
cwde
movs
dec
outs
pop
inc
call
add
push
add
push
stc
push
add
add
in
test
jle
jmp
mov
sub
mov
in
pop
jo
add
mov
mov
call
xchg
xor
rol
data16
push
call
push
inc
and
pmuludq
stos
lea
les
mov
stc
jo
loop
pusha
inc
and
clts
mov
xor
jecxz
push
stc
and
sub
mov
jnp
jmp
dec
inc
(bad)
push
sub
mov
(bad)
add
push
imul
jecxz
jmp
add
pop
aam
xchg
sbb
sub
cli
ror
(bad)
mov
jmp
mov
mov
push
sbb
or
(bad)
add
mov
cmovne
mov
and
cmp
cmps
mov
inc
and
push
(bad)
call
jp
or
jns
nop
and
jmp
mov
imul
dec
add
add
mov
sar
add
and
add
pop
sub
xor
mov
pop
pop
pop
or
rol
(bad)
pop
cdq
adc
adc
mov
push
add
(bad)
cdq
and
in
dec
(bad)
dec
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
in
or
dec
and
gs
cli
inc
les
mov
mov
and
adc
and
xchg
ins
ror
scas
jmp
mov
cmp
test
and
mov
add
jne
add
sub
mov
jg
jmp
mov
sub
cmc
push
push
or
jge
add
add
cmp
mov
jg
jmp
mov
mov
mov
push
inc
add
add
xor
lock
sub
test
and
movs
test
ret
in
outs
cmp
add
mov
repnz
addr16
cli
push
adc
mov
pusha
adc
inc
and
xchg
adc
nop
dec
mov
test
or
stos
jmp
mov
ror
inc
int
mov
pop
out
fimul
xor
mov
call
push
lods
and
or
test
mov
inc
and
out
int3
daa
js
mov
data16
jnp
jnp
add
fiadd
add
jmp
test
push
inc
sahf
rcr
mov
add
mov
lock
jmp
adc
vmread
mov
test
add
add
stos
and
aaa
sahf
add
jno
and
(bad)
(bad)
jmp
inc
dec
cmp
jae
mov
and
add
mov
inc
and
mov
sub
sti
fdivr
mov
mov
in
and
jbe
mov
cmp
mulps
dec
cmp
dec
jl
je
inc
add
(bad)
inc
and
adc
mov
nop
or
stos
cmp
mov
mov
call
pop
add
add
stos
inc
pop
sub
push
xor
or
add
inc
and
pop
gs
ss
push
pop
jge
mov
nop
push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
adc
and
push
stos
inc
dec
dec
push
imul
cwde
pop
push
dec
mov
dec
sbb
(bad)
(bad)
js
inc
fs
push
inc
and
nop
mov
std
mov
mov
rol
mov
ret
inc
xor
add
add
add
mov
js
call
std
mov
ret
dec
inc
cmp
or
int3
cmp
fs
cmp
(bad)
push
inc
or
add
cmc
add
dec
cli
rol
and
jg
jmp
mov
(bad)
push
jmp
mov
xor
ret
aaa
adc
and
mov
inc
push
cmp
ret
add
or
sub
cmove
add
add
add
cmp
ret
aaa
adc
sub
mov
int3
(bad)
loopne
add
dec
add
and
sub
(bad)
(bad)
xor
add
add
add
mov
arpl
xor
jp
cmp
jmp
retf
inc
and
sub
mov
and
(bad)
fwait
dec
scas
mov
cwde
pushf
inc
and
mov
xor
(bad)
and
test
add
push
outs
adc
fldenv
push
sub
mov
(bad)
fs
dec
inc
xor
mov
inc
xor
jnp
fiadd
cmc
jmp
mov
repz
jnp
test
add
sub
dec
and
mov
and
dec
pop
je
clc
jb
add
mov
into
jno
mov
xchg
sbb
mov
add
jmp
dec
inc
and
sub
adc
inc
lar
cmp
push
sbb
add
mov
fs
shl
out
add
add
dec
add
add
mov
and
jno
mov
pop
cli
adc
add
lock
ror
hlt
add
in
pusha
jo
xor
loop
and
and
ret
dec
mov
and
jmp
pop
push
and
mov
add
cmp
fs
dec
and
mov
mov
test
push
retf
call
lds
mov
sbb
add
add
aam
pop
(bad)
mov
ret
adc
inc
add
dec
rcr
or
push
inc
aaa
add
add
rcr
mov
cmp
smsw
sub
xor
and
adc
cmp
iret
sahf
and
add
cmc
cmp
inc
jno
xchg
scas
cdq
cld
xor
push
jo
sbb
call
and
add
ror
push
add
mov
mov
call
mov
jmp
mov
lea
hlt
jl
pop
pop
mov
lock
test
add
add
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
inc
dec
mov
mov
dec
jge
mov
mov
and
out
and
mov
and
mov
adc
loopne
or
lds
sub
xchg
into
dec
or
dec
addr16
aad
mov
mov
dec
push
and
mov
add
inc
xor
call
or
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
das
xor
adc
adc
xchg
and
mov
add
pop
and
add
dec
mov
and
jg
add
add
test
xchg
inc
add
mov
xor
test
or
add
xchg
add
cld
mov
xchg
add
ds
pop
mov
mov
lods
mov
lea
mov
cmp
int
inc
mov
mov
pusha
les
inc
mov
pmulhw
or
add
mov
sub
aas
in
dec
inc
sub
add
add
enter
mov
ds
adc
gs
jmp
push
dec
xlat
je
cld
push
std
inc
xchg
and
xor
lds
or
js
add
dec
repnz
div
inc
and
jg
xchg
add
retf
mov
es
jns
stc
mov
and
jg
jmp
pop
cs
sub
mov
test
add
jmp
mov
sub
mov
cmove
xor
and
(bad)
sbb
cs
xor
aam
add
add
imul
pusha
and
jg
jmp
mov
out
je
cmp
mov
add
jecxz
repz
je
pop
test
jg
(bad)
adc
add
jmp
mov
and
lea
inc
and
je
jmp
mov
sub
add
add
ds
cwde
or
mov
ror
adc
leave
(bad)
mov
push
test
dec
add
add
je
(bad)
dec
add
in
and
setle
or
mov
inc
jg
ror
push
adc
add
or
sub
sub
fdivr
add
push
outs
retf
add
push
rcr
sub
test
mov
add
cmp
imul
inc
mov
rdmsr
and
add
dec
daa
cmp
pop
mov
retf
xor
test
or
sbb
or
arpl
les
mov
pop
add
add
push
in
inc
imul
add
(bad)
js
sub
add
dec
(bad)
xor
cld
dec
dec
mov
mov
pop
out
and
add
or
mov
add
add
mov
inc
mov
xor
add
and
mov
iret
sbb
add
or
or
retf
mov
add
repz
pop
dec
cmps
add
add
mov
xor
lods
add
dec
add
hlt
repnz
dec
dec
push
fld
mov
add
add
mov
mov
add
retf
dec
and
nop
mov
add
jl
add
mov
mov
mov
mov
or
and
mov
and
mov
mov
lods
add
dec
ror
jl
dec
and
jmp
jecxz
mov
and
repz
repnz
xchg
add
dec
rol
push
inc
sbb
ret
in
mov
imul
out
jbe
inc
or
and
inc
and
add
test
xor
and
(bad)
int
add
dec
and
call
mov
fmul
cdq
xor
sbb
icebp
mov
cmp
add
add
sub
data16
ds
jmp
dec
or
lea
test
mov
cmps
movs
inc
and
add
int
pop
inc
dec
and
sbb
icebp
mov
nop
dec
rol
or
mov
and
dec
lods
jg
mov
add
inc
out
or
repnz
mov
mov
mov
mov
inc
adc
fcomp
inc
mov
hlt
repnz
or
sbb
dec
mov
mov
loopne
dec
(bad)
xor
mov
lods
jg
pop
dec
mov
and
inc
in
test
repz
inc
dec
add
ror
push
int3
ret
cmps
mov
pop
add
add
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
adc
sbb
jge
mov
or
jmp
sub
dec
and
jae
and
aad
or
mov
mov
mov
jae
inc
pop
push
sbb
push
mov
call
stos
add
mov
dec
mov
and
xor
mov
mov
(bad)
cmp
lahf
dec
test
and
jae
repnz
inc
ficom
imul
dec
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
mov
inc
nop
dec
push
sbb
and
add
rcl
mov
push
and
dec
dec
add
push
das
dec
or
mov
sahf
inc
and
call
mov
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
inc
or
dec
or
and
mov
dec
arpl
inc
and
sbb
mov
mov
mov
mov
imul
daa
adc
fs
(bad)
sbb
sub
add
cmps
push
inc
and
psubusw
add
mov
add
(bad)
cli
aas
mov
jle
inc
and
cmovbe
adc
jmp
cmps
(bad)
jge
add
push
add
add
mov
mov
jbe
inc
and
movntq
add
add
pop
mov
ret
dec
and
test
test
popf
(bad)
inc
inc
inc
and
pop
mov
fs
mov
lahf
shl
or
xor
dec
cmp
inc
jg
and
test
dec
add
sub
inc
and
sub
mov
and
je
bound
add
(bad)
inc
and
lods
repnz
xchg
test
add
sbb
leave
cmp
sub
mov
scas
adc
test
add
add
add
mov
pop
push
and
sar
leave
cmp
mov
sar
or
rcr
cmp
outs
push
sub
addr16
(bad)
add
xor
sub
shr
push
add
mov
mov
jmp
mov
call
jno
dec
mov
and
sub
das
call
mov
in
jmp
dec
and
cmp
mov
ror
jb
leave
cmp
aam
(bad)
jle
adc
xchg
jmp
mov
xor
xchg
inc
mov
dec
and
mov
movs
fmul
and
mov
imul
add
bound
mov
add
add
rcr
in
fiadd
add
sub
sub
inc
out
hlt
enter
or
add
push
lea
mov
push
jecxz
bound
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
adc
jmp
ins
sub
lods
clc
mov
and
cmps
and
add
outs
inc
(bad)
call
mov
mov
mov
cmp
and
adc
and
inc
and
mov
arpl
cmp
jge
mov
and
cmp
pop
mov
inc
and
js
jmp
adc
and
sub
inc
inc
sti
dec
je
jmp
mov
into
out
bound
mov
and
(bad)
cmp
mov
or
xlat
in
add
push
inc
sbb
jmp
stos
push
and
into
sub
push
jbe
sub
std
add
dec
cmp
stc
or
sub
adc
jg
cmc
add
and
sub
mov
adc
test
cpuid
stc
or
cmps
ret
ins
mov
ds
and
xchg
(bad)
add
enter
add
mov
ret
mov
das
lds
add
jmp
mov
addr16
and
mov
jg
jmp
mov
push
mov
and
je
jmp
add
sub
cmp
packuswb
dec
push
inc
add
pop
add
xor
aad
outs
and
je
and
add
movs
mov
push
sub
mov
je
jmp
pop
cmps
sahf
daa
sub
and
jae
jmp
mov
push
mov
ins
mov
adc
test
add
add
outs
push
sub
mov
bswap
fild
push
add
cld
pop
add
cmps
jae
push
mov
and
xchg
test
add
movs
sbb
mov
inc
add
xor
aad
bound
pop
mov
push
(bad)
into
cmp
adc
ror
add
mov
pop
ds
jl
(bad)
cwde
or
jns
sar
add
out
and
ds
imul
xlat
add
mov
push
inc
xchg
in
add
adc
jl
push
loope
in
sub
add
mov
and
push
mov
pop
mov
pop
add
add
and
inc
and
inc
sbb
shl
repz
sub
add
dec
cmp
add
test
mov
imul
push
add
add
jmp
cwde
or
fwait
add
add
jae
mov
cmp
cmovne
and
jmp
mov
test
arpl
jecxz
mov
jmp
push
loope
aad
and
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
and
adc
push
and
mov
(bad)
je
push
mov
mov
cld
mov
and
jecxz
rcl
(bad)
stos
test
mov
mov
mov
or
aaa
mov
cmp
mov
jecxz
adc
mov
pop
dec
cdq
mov
call
lea
addr16
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
dec
or
dec
cmp
mov
enter
add
xchg
test
test
add
and
mov
dec
and
mov
mov
jmp
xor
or
das
or
adc
xchg
pop
add
add
add
out
add
std
sub
mov
xchg
cmp
mov
scas
pusha
shl
and
xchg
or
cmp
scas
xchg
jmp
out
and
mov
mov
pop
add
mov
sub
mov
and
emms
out
mov
or
sub
sub
out
and
jg
dec
test
inc
sub
sub
pushf
inc
inc
fstp
add
js
add
sahf
sub
sub
xchg
inc
or
mov
out
add
scas
cmp
jp
lds
je
jmp
mov
retf
fisttp
mov
scas
je
cld
bound
add
js
and
sub
pushf
inc
and
popa
adc
icebp
add
sub
cmp
inc
and
test
repz
add
jns
pop
mov
pop
hlt
icebp
dec
mov
sub
out
mov
jmp
shl
(bad)
(bad)
jmp
mov
push
jmp
jae
mov
mov
sahf
and
sbb
cmp
add
add
sub
cmp
push
mov
and
add
enter
sub
push
xchg
push
and
cmps
test
inc
and
in
pushf
cmp
dec
and
(bad)
mov
pop
mov
dec
push
sbb
mov
sahf
ret
mov
sub
add
mov
jne
pavgw
mov
mov
inc
rol
add
(bad)
mov
mov
js
xchg
inc
pop
sysret
add
inc
retf
scas
sub
int
add
mov
rol
and
out
sbb
sub
cmp
inc
mov
add
dec
xor
mov
imul
mov
sti
imul
add
fisubr
out
and
sub
(bad)
fbstp
lods
xchg
mov
mov
(bad)
sub
sbb
jle
mov
ret
mov
and
mov
and
sub
sub
jecxz
ret
shr
loope
out
test
add
mov
mov
jmp
dec
adc
dec
and
cmp
push
sub
dec
push
and
add
add
mov
push
test
popf
add
sbb
gs
pop
in
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmovae
mov
jmp
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
sub
add
add
mov
shl
add
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
setne
mov
xor
and
mov
xor
and
xor
and
and
or
or
xor
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
lea
lea
mov
mov
add
add
movzx
mov
sub
sub
add
add
mov
mov
add
movzx
sub
add
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
call
call
call
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
add
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
add
add
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
add
add
sub
add
add
sub
add
mov
add
add
sub
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
call
mov
lea
mov
mov
mov
call
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
sub
add
add
mov
shl
add
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
mov
jmp
lea
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
jmp
xchg
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
lea
add
add
sub
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
mov
imul
mov
call
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
add
sub
sub
mov
sub
sub
add
mov
mov
shl
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
mov
sub
add
mov
mov
shl
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
and
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
mov
mov
mov
and
mov
mov
call
mov
mov
mov
mov
call
mov
neg
mov
mov
sub
mov
mov
mov
mov
call
mov
lea
mov
xor
and
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
mov
call
mov
xor
and
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
mov
mov
call
mov
movzx
mov
mov
movzx
mov
mov
mov
lea
inc
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
call
lea
mov
mov
xor
mov
mov
div
mov
mov
mov
movzx
mov
mov
movzx
mov
mov
mov
sub
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
sub
sub
add
mov
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
sub
sub
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
sub
add
add
mov
shl
add
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
shl
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
sub
mov
sub
add
mov
sub
mov
mov
sub
mov
sub
add
sub
add
add
sub
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
sub
sub
add
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
mov
call
lea
mov
lea
lea
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
lea
add
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
lea
add
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
call
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
call
sub
add
pop
pop
pop
pop
ret
jmp
das
loopne
xchg
lods
cmc
mov
xor
xor
repz
fdivr
jns
cmp
jne
mov
push
arpl
sub
push
scas
push
mov
test
mov
push
call
mov
loope
mov
cmp
xchg
sti
in
in
jecxz
shl
adc
inc
adc
push
ret
rcl
jl
push
enter
pop
sub
and
cs
adc
pop
pop
jl
jp
in
xlat
pushf
or
and
ss
dec
rcl
into
fisttp
cs
bound
loope
hlt
lahf
adc
lds
repz
cli
and
xor
rcl
mov
mov
std
pop
add
push
fldenv
lahf
fimul
push
aad
cmc
jmp
dec
jecxz
inc
cmp
mov
stos
and
repz
or
xchg
cld
xor
pop
mov
jp
(bad)
cli
stos
dec
into
fist
out
xor
cld
inc
and
jns
movs
retf
out
lahf
push
and
jmp
mov
int3
cmp
addr16
call
stc
pusha
mov
or
je
mov
push
test
stos
stc
adc
loopne
into
sahf
int
jecxz
(bad)
sub
out
icebp
rcr
(bad)
mov
movs
pop
adc
xchg
rol
aaa
test
es
imul
jo
(bad)
or
loope
ja
push
xchg
mov
sbb
mov
xchg
das
jmp
dec
jmp
inc
mov
add
or
call
jns
lahf
test
fst
or
cs
or
lds
outs
push
out
pop
sbb
jne
test
mov
inc
dec
xchg
jp
mov
ret
jno
mov
std
fst
ja
movs
push
hlt
jge
out
pop
sub
movs
ficomp
(bad)
(bad)
outs
xchg
sbb
inc
pop
(bad)
jmp
and
call
stos
sbb
cmp
pop
mov
popa
rcr
sub
test
jle
lods
jb
or
hlt
jle
shl
fistp
add
aam
push
pop
add
repz
repnz
mov
scas
in
mov
cdq
fwait
ins
lds
and
fst
je
cmp
and
push
shl
test
lds
pusha
cmp
sahf
aad
jmp
test
jns
xchg
jp
adc
or
retf
imul
mov
sbb
repz
sbb
mov
and
not
imul
xor
loope
xchg
cs
xchg
mov
ror
inc
adc
jmp
lock
cli
call
jmp
adc
ds
neg
push
mov
add
push
jb
pop
shl
adc
xchg
enter
mov
movs
xor
xchg
clc
out
out
xlat
mov
sub
call
xor
pop
dec
jns
movs
add
dec
cmp
sub
imul
jno
dec
retf
ja
inc
mov
pop
mov
ds
pop
xchg
jno
sub
rep
adc
mov
lods
mov
pop
leave
lahf
mov
cmps
and
pusha
xchg
ins
lsl
pop
in
stos
mov
mov
and
shl
fdiv
mov
sub
fnstcw
es
jmp
push
add
cld
cs
sbb
inc
out
repnz
mov
ss
sahf
jmp
jne
into
(bad)
(bad)
pop
stos
or
push
div
pop
add
add
stc
cmps
ret
popa
outs
mov
in
xor
or
pop
mov
xor
cmp
xor
ja
in
mov
ja
ficom
fidiv
jl
cmp
cmc
add
es
cmp
and
jp
aad
mul
popa
repnz
dec
pop
outs
out
pop
mov
lds
sub
push
icebp
shl
retf
jbe
retf
in
mov
fnstsw
fs
sbb
clc
sbb
sub
cld
leave
arpl
jne
jl
jp
in
mov
stos
xchg
sbb
lock
jnp
repz
mov
stos
ret
or
inc
out
je
sar
or
cmp
ss
mov
mov
aad
add
cwde
retf
adc
and
dec
jecxz
int3
pop
adc
mov
repz
push
jns
add
aaa
push
fstp
sti
ret
cmp
outs
xor
cdq
sbb
push
mov
add
jb
pop
hlt
aaa
push
in
in
adc
jmp
or
xchg
enter
dec
outs
pop
xor
sub
mov
sub
(bad)
ins
call
aam
dec
es
pop
in
or
popa
int3
fcom
rcl
pop
mov
mov
mov
in
enter
outs
cmps
mov
mov
int
inc
jmp
imul
sbb
int
aad
sbb
xor
xchg
data16
cli
mov
sar
movs
les
das
mov
mov
movs
jbe
mov
addr16
push
sbb
(bad)
lock
inc
adc
mov
and
inc
aam
jo
and
(bad)
mov
push
aas
jge
xor
pushf
push
sahf
or
or
mov
sub
mov
in
mov
outs
pop
add
hlt
adc
cmp
js
stc
mov
jae
repz
xchg
push
xchg
nop
cwde
sub
lds
xor
dec
sub
call
push
sti
pushf
in
or
sub
xchg
mov
jg
fldl2t
mov
dec
and
call
add
ret
mov
xchg
push
lods
xor
pop
cmp
(bad)
fisubr
pop
mov
push
cdq
mov
adc
aas
adc
outs
shr
sbb
xor
ja
iret
push
cmp
xchg
icebp
dec
xchg
ret
jmp
sar
dec
ja
pop
out
sti
lods
leave
aad
das
mov
retf
push
adc
xor
(bad)
xor
or
lock
mov
mov
cmp
push
nop
mov
jg
cmp
xchg
jmp
mov
or
sub
jb
adc
push
or
push
mov
test
stos
push
movzx
add
enter
jno
ins
push
adc
in
out
enter
sbb
push
dec
sub
pop
jmp
mov
jg
or
inc
jmp
dec
stc
mov
push
jnp
(bad)
push
push
push
scas
cmps
popa
sahf
es
sti
cs
push
(bad)
jle
push
and
xor
jbe
stos
and
es
mov
mov
jo
jp
pop
iret
les
lds
es
(bad)
aas
mov
inc
clc
outs
adc
jg
cs
push
sbb
fild
call
add
inc
mov
(bad)
push
xor
adc
test
push
push
adc
jmp
jge
mov
sti
xchg
push
xchg
jl
inc
add
jns
ja
and
or
pusha
inc
or
arpl
pop
and
pop
cli
pop
inc
jle
sbb
(bad)
mov
out
test
or
xchg
arpl
mov
mov
pop
push
repz
jb
test
jnp
jp
push
retf
cmp
xchg
test
xchg
xor
and
sbb
ds
ucomiss
lods
test
inc
xor
fsub
add
mov
(bad)
xor
jbe
jmp
jo
mov
add
pop
shr
sub
leave
cwde
mov
dec
mov
imul
xor
add
or
dec
mov
into
aas
cmp
or
sbb
ins
cmp
or
mov
scas
sti
mov
aad
aaa
ins
jae
jg
cli
or
xor
sbb
test
and
jmp
mov
shl
mov
lock
sbb
movs
or
inc
sahf
or
mov
mov
xor
fnstcw
sub
mov
and
mov
cmp
and
(bad)
pop
js
or
jne
movs
xchg
int3
(bad)
lea
retf
out
xchg
xor
push
fadd
sbb
iret
push
nop
push
stos
cmp
(bad)
rcr
or
push
into
inc
mov
sub
or
jnp
push
mov
push
(bad)
mov
sti
jne
push
loope
xor
cmps
movs
pop
inc
scas
es
hlt
scas
adc
inc
dec
repz
adc
cld
pop
sti
fsub
mov
push
adc
outs
mov
mov
cld
adc
dec
adc
push
out
jmp
in
test
mov
mov
dec
fidiv
not
stos
inc
mov
mov
cmp
fwait
in
fisttp
outs
imul
add
imul
mov
xchg
ja
popa
stos
inc
repnz
cmp
mov
jl
sbb
mov
mov
ficom
popf
jns
dec
inc
xchg
mov
xor
push
mov
retf
aad
dec
mov
or
xchg
lock
mov
int3
cmp
call
fsubr
or
jae
add
vcvtsd2si
jg
adc
cmp
jbe
sbb
add
test
inc
cld
out
fimul
cld
jg
dec
int3
push
mov
fs
push
pushf
loopne
push
stc
push
(bad)
lds
inc
leave
and
repnz
lock
cmps
in
lock
mov
shl
cwde
mov
adc
xor
imul
sbb
imul
xor
pop
aam
pop
movq
sub
imul
stos
mov
inc
or
int
ds
out
mov
inc
mov
push
xor
jp
and
neg
push
push
test
mov
push
cwde
sbb
sub
int
(bad)
mul
nop
cmp
call
enter
hlt
and
ins
test
cmp
push
scas
add
(bad)
sbb
mov
or
dec
fisubr
fs
retf
mov
mov
xor
sahf
jle
ror
jg
push
out
shl
cmp
pop
mov
sahf
push
mov
jnp
cli
dec
(bad)
xor
mov
adc
pusha
test
pop
and
outs
cmp
popa
ins
and
test
out
nop
stc
and
mov
js
mov
retf
jae
pop
mov
fwait
ss
shl
in
out
add
repnz
aam
fsub
adc
jnp
ds
sub
sub
icebp
popf
ficomp
or
jle
or
arpl
(bad)
and
mov
add
mov
fist
movs
and
popf
daa
add
das
and
pop
pop
not
idiv
or
push
jmp
inc
add
xchg
fcompp
mov
popf
hlt
push
repz
inc
push
das
aas
ror
loope
xor
cmp
sub
and
and
mov
mov
adc
mov
aas
shr
mov
mov
stc
add
std
pop
mov
push
shr
sub
jb
int
inc
sbb
add
jmp
scas
fld
xchg
ror
shl
dec
mov
mov
dec
dec
push
ror
and
(bad)
shr
adc
imul
rol
aam
mov
bnd
fcom
push
ficomp
adc
int3
ins
mov
xor
mov
sahf
mov
div
imul
ds
adc
ds
mov
jo
dec
sbb
out
cmp
movs
push
popf
fscale
adc
adc
in
cmp
dec
popa
rcl
shl
cmps
adc
js
add
push
sbb
mov
aam
jge
pushf
cmp
dec
(bad)
fucomi
in
test
fst
cmps
or
jo
jae
xor
push
cdq
in
inc
mov
neg
sbb
push
cmp
gs
std
mov
push
test
fstp
cld
xchg
outs
push
das
enter
ja
lods
fs
dec
leave
mov
retf
in
invd
inc
retf
popf
out
and
mov
inc
xchg
popf
xchg
scas
ror
ds
mov
test
ja
pop
nop
pop
sbb
xchg
scas
xor
rol
cmps
movs
dec
pop
xor
push
sbb
movs
jmp
xchg
add
cmc
fwait
inc
ins
neg
or
inc
jne
mov
and
(bad)
nop
xchg
std
jne
out
shr
mov
(bad)
sub
pop
xchg
popf
in
jno
inc
jnp
push
push
cmp
(bad)
sbb
jo
pop
push
sbb
out
mov
sub
ret
jne
push
dec
inc
out
popf
popa
push
nop
jl
xchg
lock
leave
stos
mov
add
das
mov
scas
pop
jbe
retf
mov
mov
adc
lds
shr
inc
cs
das
leave
lahf
ins
out
test
mov
jg
dec
xchg
mov
jp
pusha
mov
adc
cmp
psubsw
fcom
data16
or
sbb
movs
push
pusha
popa
push
pushf
mov
pop
pop
inc
gs
repz
fnstenv
add
dec
mov
fsubr
pop
inc
mov
(bad)
shr
inc
mov
mov
jo
mov
sbb
xor
add
aad
lds
mov
daa
and
push
lods
arpl
aam
xor
aad
aam
retf
mov
rol
or
dec
ficom
adc
jge
sub
sti
ins
pusha
lahf
in
lods
and
sbb
dec
jmp
adc
xchg
cmps
jo
or
jmp
outs
or
cmp
aam
and
adc
mov
mov
lods
clc
out
pop
shl
dec
scas
mov
bound
outs
sbb
aaa
xchg
sub
ss
push
sbb
repz
test
stc
mov
sub
into
xchg
xlat
push
add
jp
or
jno
xchg
push
ja
and
cmps
jmp
mov
ret
in
sbb
(bad)
stc
mov
(bad)
mov
cwde
arpl
popa
push
call
into
popf
jnp
sbb
outs
aam
inc
xchg
xchg
test
aad
in
mov
and
loopne
dec
mov
lock
(bad)
adc
sahf
jo
dec
push
pop
icebp
inc
xchg
popf
test
add
jg
outs
mov
(bad)
xor
and
jbe
mov
inc
or
dec
imul
ss
mov
imul
jno
ss
xlat
jg
addr16
loop
outs
mov
dec
xchg
push
mov
adc
mov
fadd
lock
aas
dec
ret
cmp
repz
mov
push
ins
cs
xchg
dec
xchg
das
adc
mov
lods
(bad)
mov
push
push
jo
xchg
fwait
push
test
sub
mov
xor
push
sub
shl
jne
pop
dec
and
daa
(bad)
xor
xchg
sbb
dec
mov
adc
push
leave
or
stos
adc
cmps
(bad)
shl
push
neg
enter
or
sub
dec
add
mov
mov
or
and
mov
lods
cdq
or
fdivr
adc
and
jo
fistp
gs
push
sub
push
mov
add
cs
sub
retf
in
test
mov
mov
ret
daa
mov
mov
(bad)
jmp
ins
mov
cwde
and
fs
aas
pusha
cmc
stc
inc
adc
outs
and
dec
int
mov
xchg
sub
sub
sbb
or
add
mov
aad
or
mov
sub
mov
fs
fmul
test
sub
sar
mov
test
arpl
retf
ja
lods
cmp
adc
sub
xchg
repz
outs
cmps
mov
push
(bad)
xchg
jmp
jbe
inc
rcr
xor
dec
ins
push
inc
lds
jl
in
iret
sbb
cdq
sahf
das
dec
popa
popf
mov
xchg
out
fidivr
jle
outs
jmp
dec
fidivr
addr16
add
sahf
sti
pushf
dec
pop
outs
out
and
xor
je
jmp
lods
hlt
retf
mov
fldenv
sub
mov
cli
movs
fwait
and
stc
fst
fimul
pop
sbb
push
ret
mov
mov
sbb
add
fld
stos
ins
sahf
(bad)
(bad)
push
inc
cmp
push
pop
push
inc
(bad)
retf
pop
xchg
cmp
and
mov
addr16
retf
mov
adc
shr
xchg
jae
push
fstp
out
jge
popf
daa
xchg
sbb
dec
cmp
adc
(bad)
pop
or
pop
cwde
xor
mov
inc
jno
(bad)
mov
dec
imul
adc
inc
add
inc
mov
aad
movs
xchg
push
imul
mov
clc
repz
push
(bad)
daa
scas
or
pop
(bad)
dec
push
push
sub
in
pop
add
outs
pop
cmp
mov
pop
es
cli
pop
stc
or
inc
ret
je
jl
push
aad
ret
cmp
push
fld
pop
aas
mov
jmp
lahf
mov
xchg
ret
mov
adc
cmp
in
sbb
mov
pop
xchg
rcr
mov
adc
int
mov
leave
dec
loop
repz
fwait
pop
je
mov
mov
inc
jle
(bad)
cmp
int
cmp
push
jne
clc
out
push
push
or
cmp
test
jle
xor
pop
mov
push
ds
jnp
mov
lods
sub
mov
ins
sahf
into
stos
in
push
outs
inc
pop
cmp
xchg
fs
pop
(bad)
mov
aam
(bad)
ds
lods
int3
cli
or
fistp
(bad)
pop
cld
xchg
sub
sub
cdq
call
aad
add
fwait
xchg
push
mov
into
and
adc
jnp
(bad)
mov
scas
sub
hlt
sub
in
scas
pop
int
lods
sub
in
outs
sti
xchg
repnz
sub
dec
stos
jecxz
cmp
ins
adc
jg
mov
or
and
sub
mov
es
out
sub
pushf
mov
test
jae
outs
scas
adc
cwde
push
in
sbb
cmp
cli
imul
mov
in
lea
push
call
push
aam
add
mov
movs
lods
stos
(bad)
push
mov
inc
mov
fs
or
(bad)
test
scas
xchg
inc
and
outs
mov
pushf
pop
mov
xor
sbb
jg
push
jecxz
les
mov
dec
fwait
popf
or
or
sbb
sti
sbb
xchg
ds
not
pop
sub
adc
shl
imul
add
mov
fs
test
pop
clc
aam
xor
loope
inc
test
mov
les
scas
adc
xlat
test
shl
ret
int
xchg
adc
adc
sub
mov
or
stc
imul
fsubr
inc
pop
imul
or
mov
mov
add
cld
mov
mov
push
test
xchg
xor
or
shl
daa
mov
ret
cmps
sbb
rcr
div
out
in
jmp
inc
sub
in
mov
fidiv
fild
mov
xchg
mov
repz
inc
jecxz
mov
bound
dec
lods
sbb
in
out
mov
fnstcw
xor
push
lods
gs
popa
mov
mov
sub
sub
inc
inc
push
int3
xlat
add
out
fsubp
fs
loope
add
aaa
cmps
(bad)
dec
push
not
in
push
pop
mov
pop
or
ja
ss
mov
fbstp
rcl
jae
fucomp
fstp
xchg
pop
lea
dec
sbb
ins
sbb
sbb
add
xor
cmp
push
mov
pop
fisub
push
fcomp
(bad)
mov
dec
test
push
push
dec
dec
or
mov
call
xor
psrlw
and
or
(bad)
movs
pop
jge
lds
inc
push
push
aaa
test
dec
out
(bad)
loope
jno
movs
dec
(bad)
hlt
rcr
(bad)
jg
jnp
dec
iret
mov
mov
xchg
not
mov
cmc
mov
cmp
xchg
imul
and
mov
adc
das
repnz
scas
fnstcw
lea
test
shl
and
sbb
ucomiss
add
hlt
(bad)
in
popf
push
and
cmp
push
ffreep
mov
(bad)
aas
sub
pop
imul
jb
pusha
std
mov
int
inc
je
retf
jo
pop
fisttp
xor
mov
mov
add
cmp
push
and
or
hlt
retf
push
cld
pop
mov
into
and
in
mov
std
or
js
jge
loope
test
lahf
xchg
retf
mov
and
sahf
leave
mov
push
les
pop
or
aas
fstp
pop
jnp
sbb
xor
mov
lods
ins
mov
sub
cmp
adc
mov
mov
jmp
dec
cld
shr
cmp
mov
push
push
add
cdq
rol
cdq
xchg
jmp
(bad)
or
and
add
or
push
fsubr
fs
lea
pop
lock
jle
lock
ss
adc
into
adc
push
aaa
jb
and
mov
push
arpl
scas
je
frstor
out
sbb
dec
adc
cmp
and
(bad)
das
mov
cmp
ins
lods
xchg
outs
dec
(bad)
pop
pop
add
mov
mov
xlat
je
(bad)
and
cdq
sub
jo
repnz
dec
mov
iret
sti
adc
outs
lods
push
push
arpl
aad
push
outs
xor
push
mov
push
jg
mov
mov
call
lahf
rcl
push
mov
pop
fiadd
pushf
adc
out
test
jns
rdmsr
and
(bad)
jo
adc
jmp
outs
jmp
xor
fbstp
and
push
inc
mov
or
and
dec
mov
shl
fcmovb
iret
invd
inc
int
icebp
xchg
mov
mov
mov
popa
push
jecxz
mov
cmps
pop
cmp
push
and
sahf
and
xchg
inc
int
test
hlt
lods
movs
lods
sti
push
mov
out
sbb
popa
pop
je
cmc
int
sbb
sbb
(bad)
(bad)
cld
jmp
pop
into
dec
adc
test
loope
aad
daa
lock
mov
mov
aad
cmps
xchg
aad
mov
fnop
aas
movs
sub
mov
out
jl
frstor
test
fidivr
jb
inc
and
mov
pop
mov
rol
mov
push
cld
loope
cmp
push
adc
adc
xchg
js
jge
push
pop
bound
cmps
and
jl
pop
xlat
out
imul
jp
lea
pop
(bad)
int
ja
inc
ret
pushf
sub
dec
lds
das
lahf
jmp
mov
add
jb
jno
jns
and
hlt
pop
jge
sub
sbb
inc
and
mov
mov
xadd
push
dec
cmp
test
in
rcl
lods
fstp
xlat
aaa
aam
push
cmp
xchg
and
xchg
cmp
sahf
mov
pop
pop
and
xchg
add
adc
pop
fwait
pop
call
shl
retf
movs
adc
pop
repnz
mov
adc
jl
fcomi
sti
xchg
jle
inc
fisttp
push
or
and
dec
sub
push
icebp
stos
nop
pusha
sub
inc
pusha
imul
mov
mov
lock
(bad)
jmp
push
push
sub
das
or
clc
and
pop
push
sub
jb
aam
rcl
pushf
sti
(bad)
jmp
mov
inc
mov
in
mov
out
lea
mov
or
lahf
cld
add
sub
or
outs
(bad)
stc
mov
pop
mov
dec
push
jo
out
jmp
push
jnp
les
sbb
sub
or
mov
jg
pop
mov
std
div
pop
sbb
(bad)
(bad)
leave
leave
fcmovne
mov
sbb
arpl
xor
mov
or
add
dec
and
test
or
push
loop
fisttp
pop
mov
cmp
push
loopne
cdq
ins
(bad)
jo
xchg
ffree
test
popf
mov
mov
and
cmp
test
inc
and
mov
xor
(bad)
lods
iret
xchg
xchg
inc
push
inc
inc
lock
pop
xchg
pop
cli
repz
mov
sub
cli
gs
movs
mov
call
sub
sti
jnp
sar
xchg
addr16
cmp
es
mov
rol
stc
stc
sti
jae
mov
outs
ss
arpl
mov
push
lahf
pushf
(bad)
adc
pop
cli
mov
add
shr
bt
in
in
cli
in
pop
mov
dec
popa
mov
sti
lock
(bad)
push
call
sti
adc
shl
or
icebp
das
xor
es
(bad)
clc
fwait
or
push
loope
call
xchg
nop
stc
add
cld
adc
daa
ret
cld
shr
jmp
aad
pop
mov
xchg
push
stos
outs
sub
pop
sar
inc
push
(bad)
jecxz
xchg
inc
xchg
cmp
inc
jno
pop
mov
push
test
pop
cli
or
test
pop
int3
inc
inc
in
xlat
xor
jp
or
dec
dec
add
mov
xor
lock
enter
test
push
xor
mov
mov
out
idiv
jle
fimul
adc
retf
and
and
call
xchg
je
add
ds
or
ret
jge
out
lds
xchg
popa
push
adc
xchg
xor
ins
movs
pop
sbb
push
lds
mov
mov
mov
fidiv
xchg
inc
dec
push
dec
sub
jmp
clc
movs
inc
sbb
push
mov
xor
mov
test
mov
cmp
xchg
neg
xchg
int3
and
lods
lea
and
rcl
cmp
les
inc
mov
cmp
aam
pop
add
jmp
pop
and
pop
jb
dec
and
sub
pop
mov
cwde
jl
cmps
or
add
scas
outs
push
aas
xchg
mov
mov
mov
sub
jmp
jne
cmps
out
test
fs
and
mov
shl
pop
gs
cld
mov
not
xor
mov
pop
stos
mov
jmp
push
xor
adc
into
imul
lahf
fwait
mov
pusha
dec
or
addr16
jmp
add
pushf
test
push
dec
dec
add
push
cs
xchg
mov
movs
aad
mov
push
out
jle
retf
mov
cld
inc
fmul
and
inc
mov
cmp
movs
push
cmp
add
lea
add
mov
ins
cmp
mov
mov
pop
sbb
call
mov
ret
pusha
es
xor
cdq
xor
jge
dec
mov
daa
jg
fisubr
dec
loope
xor
retf
bound
xor
xlat
mov
sbb
dec
lds
pop
ret
rol
aaa
repnz
fldenv
stc
aad
sbb
scas
dec
xchg
sahf
sub
ins
shl
mov
cmc
shl
xchg
dec
not
not
pushf
jp
int3
or
movs
ds
pusha
in
jg
mov
leave
les
gs
lahf
fwait
mov
pop
cs
inc
xchg
push
mov
test
sahf
inc
push
push
fcom
movs
js
mul
xor
xchg
add
hlt
clc
push
jl
pushf
sub
sti
ins
jo
cwde
clc
jbe
cmps
inc
loopne
mov
mov
jecxz
lods
out
pushf
pusha
add
xchg
adc
mov
jnp
lds
aaa
outs
xchg
clc
(bad)
fincstp
adc
outs
pop
rol
push
mov
pop
mov
sbb
inc
mov
inc
cmp
dec
ds
sub
or
add
scas
sub
sub
xchg
jecxz
pop
pop
and
(bad)
sub
ss
dec
xchg
dec
adc
pushf
lahf
retf
pop
pop
neg
int3
sub
xlat
adc
dec
adc
or
(bad)
pop
jp
inc
aad
cmc
jae
dec
in
cwde
test
aas
movs
aas
xchg
adc
dec
push
push
inc
std
mov
mov
push
in
push
jno
iret
and
mov
push
gs
popa
mov
(bad)
jge
or
sbb
outs
push
cli
out
test
adc
mov
cs
ror
dec
jle
retf
cld
inc
xchg
mov
jp
sbb
fcom
push
ins
int3
cmp
adc
retf
imul
(bad)
jae
pop
jo
cmp
test
xchg
fisttp
fbld
or
or
stos
or
mov
(bad)
jno
cwde
por
(bad)
sbb
leave
rcr
jge
in
push
sbb
mov
xchg
mov
xchg
add
(bad)
and
fwait
jle
or
jo
mov
popf
and
add
int3
jl
scas
stos
inc
ror
xor
push
dec
(bad)
pushf
dec
popa
pusha
jg
xlat
dec
fistp
dec
and
pushf
lods
xor
pop
imul
adc
jb
push
imul
mov
pop
cld
cld
jle
xor
mov
mov
jns
sbb
loop
adc
mul
jl
xor
mov
fidiv
push
ret
jg
xor
in
fild
inc
fcom
adc
popf
inc
mov
and
std
adc
and
stc
jae
xlat
jbe
adc
test
fs
cs
cld
imul
icebp
add
sub
pop
pop
pop
mov
pop
fisubr
(bad)
out
shl
pop
cli
clc
es
or
jo
(bad)
mov
imul
loop
loope
call
adc
(bad)
jae
pop
mov
outs
ja
(bad)
push
fldcw
dec
lea
cdq
pop
inc
ss
jno
mov
stc
jg
mov
adc
ins
into
movs
retf
push
sbb
or
cmp
mov
pop
stc
fsubr
cmc
aam
(bad)
sahf
dec
pop
or
mov
jnp
xchg
xor
scas
and
cmps
mov
mov
and
test
fisubr
fmul
mov
mov
pop
lock
mov
push
pop
mov
ss
sbb
jl
cmp
push
iret
jmp
push
ins
jmp
lock
adc
mov
mov
mov
mov
push
je
idiv
ins
add
es
push
dec
push
mov
and
imul
aam
adc
ret
cs
push
iret
lea
int3
pushf
div
jg
imul
test
pop
(bad)
lds
imul
ret
sub
add
jge
inc
mov
cmp
xor
push
push
rcr
inc
cmp
outs
sbb
sub
cmc
xor
push
test
enter
pop
aaa
and
add
dec
or
cmp
fiadd
scas
lods
inc
cmc
les
xor
inc
mov
sub
xor
out
cli
ja
mov
sbb
cmc
inc
and
push
(bad)
daa
push
shl
retf
(bad)
sub
push
adc
pop
jnp
imul
(bad)
and
mov
fidivr
jns
(bad)
std
jl
div
out
sub
sbb
stos
push
xchg
cwde
js
ror
int
add
and
ss
fwait
into
xchg
(bad)
push
movs
xchg
call
stos
jns
fcomp
sub
mov
mov
in
fbld
ret
loope
out
push
or
cmc
adc
(bad)
dec
and
and
push
inc
mov
lods
stc
ss
mov
fdivr
arpl
sahf
xchg
fisttp
and
fsubr
cdq
cli
or
fcomp
not
xor
lock
mov
inc
js
jbe
jl
or
sbb
mov
adc
ret
shr
mov
fist
pop
push
leave
out
scas
mov
jns
shl
push
jg
xchg
push
mov
xchg
xor
xor
outs
xchg
pop
xor
cmp
mov
xor
ins
mov
stc
adc
jp
sub
sbb
pop
pop
ficomp
jp
xor
add
int
das
push
mov
test
push
aam
and
lea
push
sub
mov
mov
mov
in
mov
(bad)
sahf
fld
sar
mov
pop
xchg
mov
stos
popf
(bad)
bound
fwait
shl
mov
or
push
in
or
mov
pop
iret
xchg
in
jmp
in
mov
xor
ret
push
lods
test
popa
inc
mov
inc
and
cmps
imul
jmp
mov
cmp
pop
add
nop
cmp
jmp
lods
mov
(bad)
jnp
test
leave
add
push
mov
cdq
fdivr
inc
ror
push
movs
sar
jg
pushf
pop
mov
dec
call
mov
mov
add
jne
sub
mov
pop
lods
cmp
call
mov
pop
inc
cmp
fmul
cmp
push
imul
dec
sar
pop
out
repnz
xchg
rcl
mov
je
mov
push
and
loopne
dec
(bad)
or
sbb
ins
imul
fcomp
shr
cmp
out
push
pop
jnp
lahf
push
xchg
fimul
mov
out
iret
adc
mov
ss
jmp
nop
(bad)
pop
getsec
pusha
scas
xchg
sbb
cmc
push
mov
adc
mov
pop
scas
xor
je
push
jo
stos
repz
push
shr
adc
movs
in
sub
pop
jnp
or
pop
call
push
xor
mov
enter
mov
add
adc
sbb
jecxz
dec
icebp
cwde
shl
xchg
cld
fdiv
xor
call
addr16
scas
mov
clc
inc
pusha
add
imul
fs
and
xchg
(bad)
hlt
jp
jge
dec
xchg
xchg
sbb
add
pop
out
adc
xor
xchg
add
sub
enter
or
addr16
leave
sbb
ret
xor
test
push
imul
dec
sbb
jecxz
add
out
fiadd
adc
sub
jl
mov
loopne
xchg
fwait
dec
sub
add
and
sbb
push
push
in
outs
fbstp
out
imul
pop
mov
mov
and
add
leave
dec
movs
leave
mov
clc
pusha
imul
push
lods
in
arpl
dec
loop
aaa
xlat
and
and
jmp
es
pop
push
in
mov
jns
fidivr
xor
sub
mov
mov
push
dec
call
mov
dec
out
clc
add
jle
cmp
aad
adc
mov
jae
and
or
xor
mov
std
dec
pop
mov
sbb
ret
adc
cmps
addr16
shr
sub
cs
dec
fcom
fs
and
sub
retf
cmp
popa
out
adc
ja
inc
in
sar
in
arpl
sbb
aaa
sub
jae
sti
mov
daa
mov
mov
xlat
adc
fmul
push
mov
inc
outs
cli
dec
sti
jg
retf
cld
add
or
sub
cmp
sbb
in
daa
mov
pushf
int3
jmp
out
fcomi
mov
and
ins
cmc
scas
cld
sub
jne
sbb
fcom
mov
call
lods
lea
cli
or
les
cli
outs
mov
sti
dec
adc
jmp
sbb
pushf
idiv
in
cmp
pop
mov
jle
(bad)
retf
mov
push
hlt
sub
fneni(8087
push
fiadd
mov
je
inc
inc
pop
fsubr
jno
fs
enter
inc
in
test
jmp
jb
mov
cdq
sub
sub
jmp
xchg
nop
cmp
xchg
aas
ss
or
stos
mov
outs
imul
stos
imul
inc
aaa
xchg
sub
adc
cmc
mov
cmp
push
pusha
outs
out
pop
xor
adc
in
jns
mov
aaa
mov
add
nop
icebp
pop
inc
les
gs
call
aad
or
jmp
out
and
mov
push
retf
(bad)
push
dec
push
mov
or
push
iret
xor
inc
push
arpl
aam
add
mov
(bad)
add
mov
out
mov
pop
sbb
push
jg
xor
inc
test
mov
cmp
ss
(bad)
jmp
aam
dec
push
popa
push
div
sbb
and
in
jae
pusha
sub
or
cmp
les
xlat
ins
addr16
pop
rcr
adc
or
mov
xor
(bad)
sbb
lock
xor
pop
add
mov
stc
sbb
jecxz
jnp
das
fistp
jne
adc
leave
push
dec
retf
call
pop
les
adc
adc
sub
(bad)
inc
in
push
jmp
popf
dec
or
mov
push
aas
icebp
dec
sub
adc
rcr
mov
mov
lock
inc
lods
dec
cmp
ds
adc
mov
loope
pop
sbb
jbe
inc
popa
(bad)
push
jmp
sar
or
xchg
test
and
adc
jmp
sub
and
leave
dec
sar
mov
inc
xor
dec
cli
or
fwait
push
pop
push
add
pop
add
xor
cld
jae
dec
cs
cmp
inc
aas
out
push
mov
mov
ret
jg
in
loope
xor
pop
jne
mov
add
dec
std
es
dec
stos
les
xchg
jae
jp
scas
jns
or
sti
add
pop
cli
test
pop
sbb
ds
daa
fstp
dec
and
jge
pop
arpl
push
test
adc
(bad)
(bad)
lods
pop
jmp
inc
out
retf
pushf
xor
lds
cmps
pushf
pop
push
cmp
push
adc
sbb
cmp
es
sub
add
or
ror
pop
pop
pop
arpl
inc
cwde
imul
xor
jl
pop
shl
adc
cmp
sahf
jg
or
xor
adc
fstp
lock
adc
jb
jne
jbe
sub
fidivr
and
and
mov
cld
sbb
mov
push
fwait
hlt
daa
dec
adc
je
cdq
iret
cmp
push
add
addr16
push
in
add
inc
stos
add
mov
rol
fsubr
mov
dec
mov
mov
bswap
push
shl
push
xor
sbb
jne
std
fs
push
shl
mov
lds
push
test
jno
fs
jno
jbe
xchg
push
pop
adc
mov
jbe
or
inc
adc
and
push
xchg
fisub
mov
jbe
adc
mov
cvtpi2ps
dec
movs
mov
retf
fsubr
es
jns
cmp
out
gs
ins
test
in
mov
popa
fnop
jo
arpl
lock
in
(bad)
fmul
ret
mov
aam
xor
add
push
jmp
movs
das
push
pop
mov
retf
pop
test
cs
mov
adc
stos
and
cmps
icebp
jno
sar
push
pop
jge
fcom
xchg
or
mov
ins
out
cmp
into
inc
cmc
lods
adc
aad
xlat
mov
mov
loope
(bad)
(bad)
frstor
movs
ja
and
jge
sub
fs
call
inc
pshufw
stos
(bad)
iret
(bad)
cmp
sbb
scas
leave
clc
mov
pop
inc
rcr
in
pop
sbb
adc
push
push
jmp
call
lods
mov
mov
pop
sub
pmaxsw
adc
gs
ss
inc
js
cmp
add
repnz
adc
pop
sbb
jmp
pusha
pop
rol
dec
jg
data16
fstp
mov
ss
add
sbb
xchg
mov
inc
or
ret
cmp
xchg
and
xchg
push
shr
scas
fldenv
inc
cmp
popf
sub
lods
in
dec
mov
add
cmp
pop
xchg
(bad)
clc
and
jns
ins
add
adc
shr
je
and
xchg
pop
cmc
pop
cmps
or
adc
fs
adc
fucomi
jle
daa
xchg
(bad)
jmp
and
outs
xor
sti
push
outs
xor
mov
nop
aas
xor
push
cdq
inc
xor
(bad)
cmp
iret
cli
loope
mul
push
push
push
mov
js
xchg
retf
ss
mov
sti
pop
sub
xlat
je
mov
lods
sub
daa
sahf
pop
fiadd
out
and
shr
lea
push
movs
cmp
sbb
ins
sub
add
inc
mov
pop
add
nop
test
lock
pop
or
or
dec
vcvtss2si
lea
adc
aad
fwait
adc
add
into
xor
push
in
(bad)
movs
seto
jmp
ss
lods
test
xchg
push
dec
and
jnp
cld
mov
outs
cwde
bound
repnz
mov
dec
cwde
sub
mov
jnp
xor
sub
sub
(bad)
mov
ror
(bad)
mov
mov
fidivr
cmps
ins
in
dec
cmc
out
inc
cmp
pop
clc
cmovl
xor
hlt
inc
into
cmps
jecxz
jno
enter
adc
push
imul
xor
jmp
(bad)
adc
aaa
shr
js
call
iret
mov
adc
jg
and
cli
cmc
xchg
xor
xor
(bad)
or
inc
pusha
das
fidivr
mov
sub
jo
or
test
(bad)
mov
mov
(bad)
xchg
aam
fild
jnp
addr16
aad
arpl
pushf
fs
nop
bound
ds
sub
inc
lahf
dec
and
aam
jo
pop
daa
pop
stos
popf
mov
(bad)
ins
call
and
into
(bad)
fld
cli
pop
cwde
in
and
jns
inc
inc
fisttp
fidivr
shl
popf
stc
sbb
loopne
xchg
xor
clc
xchg
loopne
dec
test
dec
xor
sub
push
call
(bad)
mov
popa
(bad)
aad
daa
pop
lods
mov
(bad)
push
adc
inc
daa
mov
xchg
push
fdivr
or
inc
retf
xlat
jmp
es
mov
xor
mov
push
jmp
add
cwde
and
movs
add
xchg
inc
or
xor
not
(bad)
shl
xchg
and
imul
push
add
xor
pop
nop
scas
pop
mov
aam
test
adc
ins
int
sbb
scas
shr
inc
dec
cs
mov
push
call
cmp
scas
(bad)
push
mov
test
mov
or
mov
daa
or
dec
inc
mov
stc
sub
sbb
pop
hlt
xchg
push
mov
cmp
frstor
scas
loopne
jmp
(bad)
jecxz
xchg
lds
xor
(bad)
mov
mov
xchg
xchg
push
sbb
cld
test
push
pop
mov
pusha
daa
xchg
xchg
adc
fisub
xchg
xor
ja
jg
push
xor
imul
addr16
lods
add
nop
mov
daa
popf
ss
in
xchg
xchg
retf
fnop
or
or
sahf
xor
or
dec
mov
movs
inc
cli
lods
sbb
sbb
repnz
icebp
aam
mov
pop
push
aad
xchg
ret
adc
mov
mov
cdq
jl
mov
jb
adc
cmps
jle
cmp
(bad)
stos
ds
retf
add
jbe
sub
cmps
push
dec
jl
pop
stos
mov
jns
mov
int3
cld
iret
jmp
pop
jnp
cmp
mov
out
mov
mov
aas
adc
(bad)
inc
cmp
lea
dec
test
das
pop
jmp
js
or
fcomp
fstp
jl
sub
jl
repz
repz
pop
adc
out
xchg
adc
dec
(bad)
jecxz
xlat
repz
add
add
sub
jmp
ret
cwde
es
add
mov
fld
das
lock
out
sub
jp
push
fcmove
clc
jl
dec
push
sti
sub
push
xchg
test
push
ds
mov
inc
jae
sub
in
and
push
stos
repnz
les
ret
push
jo
push
in
inc
xor
sbb
xchg
jle
ins
es
mov
and
daa
mov
shr
cld
and
out
pop
cmp
mov
arpl
push
mov
aam
dec
xchg
les
enter
xchg
aas
pop
clc
and
pusha
sbb
(bad)
out
test
and
xor
ret
jl
xchg
push
fmul
fild
cmp
mov
lods
rol
(bad)
pop
mov
inc
repnz
xlat
mov
adc
jnp
hlt
jle
hlt
sub
push
jns
jne
sbb
sbb
repnz
xchg
lea
push
jns
iret
ret
shl
sub
push
not
add
jmp
mov
(bad)
and
dec
xor
out
push
arpl
mov
sbb
ror
xor
add
cmp
fcomp
dec
data16
sbb
scas
inc
or
jbe
push
int3
stos
pop
inc
sbb
int
popf
xlat
(bad)
mov
in
xchg
and
pop
cmp
mov
mov
test
jmp
xor
add
in
dec
adc
jmp
push
(bad)
sub
movs
xor
lea
sbb
cmps
in
fwait
pop
or
pop
ret
adc
outs
xchg
mov
scas
fidiv
jae
mov
xchg
das
loope
xchg
repz
and
or
hlt
stc
push
dec
pop
mov
pop
mul
jecxz
pop
fadd
imul
rcl
mov
jle
or
jl
call
into
mov
mov
cmp
clc
imul
push
add
adc
jp
in
fmulp
mov
sub
mov
inc
iret
and
shl
repz
enter
add
dec
xor
out
(bad)
mov
xchg
daa
sbb
outs
mov
and
outs
pop
cmps
xor
fstp
pop
jbe
test
mov
mov
jecxz
test
xchg
movs
out
jecxz
ret
jge
call
and
ror
push
add
xor
mov
cmp
push
or
pop
repnz
add
mov
xchg
adc
mov
call
cwde
pop
inc
jmp
(bad)
int
cmps
xchg
arpl
das
dec
inc
lods
sbb
imul
ret
cmp
mov
fsubr
clc
stc
call
xor
ror
xor
fs
fnstenv
sbb
in
call
sti
gs
out
aas
sbb
pop
ja
jnp
loopne
or
cmc
xor
cdq
rcr
jns
xor
mov
in
fcomip
push
xchg
ror
(bad)
mov
loop
mov
and
push
or
icebp
out
shr
jle
out
dec
test
jbe
lods
and
push
xor
mov
cmc
(bad)
(bad)
arpl
pop
sahf
aas
pushf
fld
(bad)
(bad)
jo
mov
ins
arpl
add
lods
es
mov
icebp
push
rcl
(bad)
sbb
mov
cdq
lahf
int
jp
pusha
scas
ret
fwait
xchg
retf
das
fst
retf
movs
cmps
add
mov
(bad)
sub
sti
out
fld
and
xchg
inc
xchg
js
fld
adc
shr
push
add
sub
pop
or
sub
jb
call
out
mov
jmp
sbb
js
or
jns
ds
call
sub
xchg
push
push
ficomp
call
xchg
adc
dec
fcom
push
or
pushf
ja
mov
sbb
push
jmp
fwait
sbb
call
push
mov
hlt
mov
iret
jp
leave
adc
and
test
push
or
icebp
adc
cmp
clc
in
dec
(bad)
js
out
jle
xor
es
addr16
mov
sbb
xor
mov
pushf
stos
pop
jp
lahf
ds
jge
and
mov
xchg
inc
rol
call
dec
fisubr
inc
les
mov
adc
inc
mov
arpl
or
push
loopne
pop
pushf
int3
enter
in
adc
xchg
xor
push
xchg
imul
pop
xor
outs
xchg
jmp
cmp
pop
enter
pop
xlat
cld
and
mov
sbb
ins
cmp
xlat
test
outs
mov
bound
mov
push
neg
jo
dec
je
cmc
sub
outs
sub
pop
js
int
jne
push
sub
imul
mov
rcr
add
inc
pusha
arpl
push
in
into
ins
jge
out
inc
jnp
dec
prefetcht1
jne
mov
loope
popa
and
pop
push
mov
inc
nop
out
jne
jl
loopne
mov
shr
das
mov
inc
inc
push
add
mov
inc
div
or
jnp
add
out
call
ins
mov
jb
mov
rcr
ja
inc
adc
or
push
or
dec
push
fdivrp
mov
cmps
repz
dec
mov
add
ret
int3
sbb
sbb
scas
mul
not
dec
and
adc
and
fist
or
sub
sub
mov
int
inc
retf
lea
daa
push
repz
popa
mov
(bad)
loopne
sub
sub
sub
push
(bad)
jp
mov
mov
cmps
pop
dec
hlt
push
les
repz
pop
iret
loopne
jae
pop
add
sub
pop
and
repnz
or
(bad)
daa
ficomp
inc
clc
jle
cvtdq2ps
dec
jbe
cmova
mov
or
aas
inc
or
out
mov
(bad)
push
push
pop
outs
cmp
sti
dec
fsubr
or
inc
scas
xchg
mov
jmp
push
aam
out
add
scas
push
inc
data16
and
jecxz
push
sub
fwait
mov
pop
add
call
enter
dec
nop
pop
fwait
pop
retf
jne
sub
pop
xor
aad
adc
in
stos
popa
cwde
ret
jge
pop
jmp
es
test
test
mov
sahf
add
shl
bnd
sbb
jo
leave
jle
push
jmp
push
jns
push
and
retf
push
pusha
out
sub
sbb
lea
addr16
lahf
movaps
cmp
mov
in
jno
test
retf
or
sub
jo
adc
jae
pextrw
sti
clc
bound
aas
dec
rcr
adc
pop
lahf
ds
je
jmp
sub
fiadd
inc
sbb
dec
inc
push
pushf
dec
or
data16
adc
test
mov
test
xchg
fldpi
dec
cdq
sahf
mov
scas
scas
adc
ror
sbb
sub
in
int3
cmp
ror
stos
outs
cmp
sbb
test
loop
lods
pop
push
mov
fnsave
je
inc
fs
adc
inc
mov
jne
mov
cmp
sahf
add
mov
push
in
popf
fmul
jge
pop
cmps
sbb
popa
and
pop
aaa
cwde
rcl
mov
sti
jb
dec
xchg
mov
mov
mov
and
int3
data16
push
loope
sbb
and
ret
mov
jae
mov
dec
pop
hlt
sub
(bad)
sbb
and
arpl
cmc
or
push
sbb
inc
adc
jmp
out
fmul
js
int3
mov
js
cmp
pushf
cld
std
lock
sub
xchg
cmp
mov
mov
cwde
add
pop
adc
mov
sbb
out
sub
cmp
lods
jbe
pop
push
jecxz
pop
bswap
clc
xor
in
and
out
xor
xchg
iret
pusha
xor
cdq
xchg
dec
popf
out
cmp
mov
cwde
mov
je
lods
inc
mov
dec
shr
hlt
int
mov
in
or
push
cmp
cmps
mov
jo
fnstenv
nop
in
jl
dec
cmp
(bad)
fst
push
fcom
or
cdq
stos
dec
das
push
test
cmp
das
mov
mov
xchg
stc
xor
or
nop
ins
sub
out
ss
bound
cli
mov
xchg
mov
mov
xor
loop
xor
lea
imul
or
lods
and
movs
fnstsw
pop
xchg
sbb
scas
ins
push
mov
inc
inc
jb
xor
int3
mov
enter
gs
adc
or
clc
push
mov
nop
cli
out
inc
in
cdq
xlat
mov
xchg
aad
sbb
ins
lods
das
jp
repz
nop
xor
cmp
call
inc
mov
sahf
xchg
xor
sti
cs
mov
cdq
retf
push
pop
pop
clc
imul
cs
(bad)
int
mov
inc
lahf
mov
sbb
sbb
sbb
fsubr
pushf
in
mov
lahf
ins
xchg
nop
pop
outs
sti
test
call
fs
sahf
fucomp
mov
xor
imul
retf
inc
mov
jecxz
mov
ds
dec
sbb
cmp
aaa
jne
lds
ja
in
push
mov
cmp
test
adc
inc
into
loop
inc
push
push
adc
(bad)
icebp
loop
xor
mov
fild
jge
xor
or
push
mov
cmp
rcr
cwde
jb
add
xor
or
dec
lock
mov
inc
xchg
lods
and
in
dec
or
lods
int
push
xchg
retf
xchg
or
in
pop
int
inc
jne
cdq
mov
das
jp
stc
and
jmp
push
aam
sub
fcmovnb
popf
mov
mov
scas
cmp
add
cli
sub
inc
aaa
and
inc
jmp
addr16
xchg
inc
iret
add
das
jmp
pop
mov
adc
and
push
imul
mov
(bad)
and
and
xor
jmp
aas
push
jae
call
mov
cmps
shl
nop
or
rcr
or
sahf
or
xor
sub
call
stc
outs
(bad)
jbe
in
cld
mov
xor
adc
add
or
(bad)
in
pop
sub
cmps
push
xchg
xor
xor
sbb
ins
shr
ins
movs
pop
cs
into
cmp
cdq
out
pop
outs
jno
xlat
in
aaa
in
arpl
cmp
inc
jmp
sbb
mov
pandn
call
fistp
cmovbe
push
xchg
add
cmp
(bad)
jmp
mov
ja
ds
jl
rcl
(bad)
(bad)
std
fcom
nop
pop
es
push
push
jae
push
jnp
(bad)
mov
rol
ret
icebp
mov
fbld
movs
(bad)
retf
aas
jbe
inc
mov
mov
mov
and
push
popa
das
add
inc
mov
cmps
fld
inc
cmp
mov
popa
and
add
movs
ins
(bad)
pop
pop
push
pop
retf
int
mov
xor
inc
push
leave
jns
call
test
and
push
imul
pop
shl
ins
jmp
fdiv
mov
and
ret
push
cmc
push
add
rcr
cli
adc
(bad)
imul
aas
jle
ins
or
push
in
mov
rcl
jns
xchg
dec
imul
scas
clc
jns
and
je
pop
xor
adc
pushw
pusha
out
or
push
mov
inc
push
dec
stc
xor
sahf
sbb
sti
inc
pop
push
add
dec
sbb
outs
inc
inc
mov
pop
retf
clc
push
sbb
mov
shr
lds
jecxz
pop
inc
and
ins
ret
pop
mov
loope
and
int
je
push
jae
dec
popf
rcl
(bad)
fs
dec
cmp
outs
xchg
inc
jge
dec
mov
repz
std
mov
arpl
cmc
(bad)
sub
mov
sbb
ret
int
ins
lahf
cwde
xor
iret
jl
jmp
loope
adc
out
imul
outs
cdq
stc
int
aad
xchg
fdiv
jo
mov
adc
cmp
adc
sahf
add
aam
xchg
sbb
or
inc
idiv
or
aad
loopne
cmp
jge
ins
fwait
dec
ins
sub
pop
cmp
fcom
and
sub
ins
(bad)
push
scas
add
pop
mov
lds
xor
sbb
mov
cdq
movs
xchg
shl
lods
lds
and
adc
adc
jmp
pop
pop
outs
add
mov
mov
adc
pop
int3
(bad)
stos
xchg
test
pop
pop
(bad)
popf
fisub
popa
jns
xchg
call
js
xchg
imul
dec
fmul
xor
cmps
cs
seta
dec
inc
sar
mov
mov
iret
ins
mov
sbb
sub
inc
test
xor
ss
mov
xchg
movs
inc
mov
push
xchg
xor
pop
cmps
lods
push
cmp
mov
pop
aam
pop
js
sahf
jg
sbb
mov
or
ins
int
mov
mov
test
cmps
in
mov
adc
int
ja
js
push
cdq
scas
mov
cmp
inc
mov
xor
imul
add
jmp
int
imul
mov
ret
fs
in
ins
stos
(bad)
fistp
rcl
xlat
push
or
fisttp
xor
into
push
test
fld
mov
pop
sti
(bad)
push
pop
stc
repnz
or
or
ja
test
jle
mov
cmps
xor
mov
mov
xchg
xchg
xchg
shl
xchg
nop
mov
dec
push
or
lods
loop
add
stos
and
mov
dec
stos
jb
or
fwait
mov
xlat
adc
int3
bound
pop
mov
cs
adc
inc
push
jmp
call
fistp
push
dec
cmps
mov
(bad)
inc
and
mov
inc
dec
push
fcomp
out
adc
jmp
push
shl
mov
xchg
movs
lods
clc
in
loope
mov
es
inc
or
cdq
movs
inc
cmp
retf
cmp
push
mov
(bad)
popf
les
das
jl
jne
fld
aaa
mov
lods
mul
push
cmc
mov
mov
(bad)
xchg
xchg
nop
ret
lods
movs
adc
and
fwait
mov
shl
fldenv
add
sbb
dec
dec
outs
daa
icebp
pop
movs
cmps
rol
stos
add
retf
das
cmps
(bad)
adc
daa
stos
mov
repnz
inc
retf
aas
sub
adc
and
ss
xchg
shr
pop
test
push
(bad)
mov
inc
aas
test
stos
ret
mov
into
pop
std
mov
ds
mov
xor
add
pop
sub
jg
pop
sub
inc
into
fucomip
mov
sub
fld
xchg
jne
sub
pop
cli
inc
popa
adc
xchg
out
sahf
pop
and
repnz
enter
xlat
in
xor
mov
popa
aad
sub
test
push
pop
adc
push
xchg
inc
pop
cmp
ficomp
gs
cmps
(bad)
rcl
mov
in
xchg
push
les
pshufw
out
jmp
push
pop
(bad)
stos
(bad)
mov
fadd
stc
cdq
out
jno
enter
loop
cmps
sbb
fidiv
popa
iret
adc
adc
sbb
fadd
sar
xchg
fwait
pop
add
xor
js
movs
dec
loope
push
mov
mov
pop
xchg
lods
retf
mov
mov
mov
xchg
mov
fisttp
cdq
cld
mov
jo
inc
cmps
adc
lea
mov
scas
leave
int
popa
pop
call
xor
sbb
jle
and
lds
mov
mov
(bad)
sub
sti
cmc
retf
inc
inc
sbb
jae
sbb
inc
das
xor
jno
daa
inc
imul
jb
pop
in
pop
std
es
lods
mov
lahf
stc
lods
push
sub
dec
or
push
(bad)
addr16
hlt
lahf
sar
mov
or
add
ins
and
(bad)
mov
stc
scas
jnp
shl
cmps
vpunpckhbw
sbb
out
mov
out
dec
fnstenv
(bad)
out
jg
inc
jecxz
or
inc
mov
fnstcw
sub
xor
dec
ror
xor
icebp
mov
and
in
inc
jnp
les
mov
retf
xchg
(bad)
test
mov
std
push
inc
push
xchg
loop
jnp
cs
jns
jb
mov
sub
je
lahf
push
movs
cmp
outs
aam
popa
movs
test
mov
movs
mov
and
inc
ror
xlat
scas
jg
adc
xor
adc
outs
push
push
sbb
pop
popa
aas
popf
mov
out
ja
cmp
push
and
sub
mov
dec
fdivr
adc
mov
jo
push
adc
stos
mov
push
sub
popf
pop
mov
push
adc
fstp
adc
data16
data16
dec
jo
and
inc
out
push
xchg
je
aaa
adc
shl
sahf
sar
mov
ret
nop
pop
mov
sti
cmp
movs
and
fwait
jle
movs
lods
(bad)
inc
popa
(bad)
inc
sbb
dec
call
or
adc
and
push
hlt
or
xchg
(bad)
pop
mov
xchg
jg
sbb
push
sbb
xchg
add
out
inc
ss
jae
ja
test
mov
adc
mov
cmp
icebp
dec
mov
mov
jmp
les
stos
sbb
daa
repz
jl
ss
jmp
mov
arpl
data16
lock
adc
div
mov
ins
mov
add
push
push
adc
dec
adc
stos
mov
js
add
(bad)
and
test
daa
out
or
aaa
inc
lods
sub
push
shrd
mov
std
stos
cmp
je
jmp
adc
pusha
imul
sub
mov
dec
ficomp
adc
sbb
fcom
mov
stc
inc
stos
xor
fmul
inc
inc
jo
push
dec
jle
(bad)
push
test
and
out
retf
add
daa
pop
lods
mov
movs
xor
stos
push
sbb
sbb
inc
cli
jmp
push
(bad)
jnp
aaa
push
repz
fistp
mov
sbb
inc
lock
pop
sub
mov
dec
pop
dec
cli
push
(bad)
fnsave
icebp
lods
push
ja
or
ja
scas
leave
sbb
inc
leave
ss
sbb
jb
or
mov
xor
mov
xchg
xchg
aaa
nop
cmp
add
lods
mov
pop
mov
jg
lods
mov
mov
mov
popf
inc
push
cmps
daa
movs
mov
(bad)
cmps
lds
mov
fstp
jge
out
fistp
jo
push
movs
mov
(bad)
mov
rol
jle
lahf
pop
arpl
stc
pop
mov
movs
int
sub
or
sub
adc
mov
call
(bad)
mov
dec
pop
mov
inc
rol
pop
in
xor
and
stc
cdq
arpl
iret
or
mov
repnz
cli
cmps
push
adc
sbb
retf
(bad)
std
out
pop
or
or
mov
jnp
into
retf
add
cli
jecxz
jge
mov
mov
imul
je
adc
sbb
pop
xchg
shl
scas
idiv
xchg
fimul
jmp
in
nop
retf
add
gs
mov
lea
movs
sbb
mov
and
pop
in
std
pop
clc
add
inc
xchg
popf
mov
test
mov
xor
dec
aas
or
shl
xlat
lods
arpl
and
loop
mov
in
pop
dec
aad
les
jbe
dec
or
add
mov
sub
lods
jo
imul
xchg
cmp
dec
(bad)
sar
cmp
sub
dec
mov
inc
in
loopne
mul
add
in
retf
mov
popf
pop
sub
jae
lea
inc
pop
clc
es
xchg
sbb
adc
cmp
jb
adc
xchg
jg
ss
(bad)
xchg
mov
inc
pop
nop
adc
push
lock
sahf
data16
popf
call
add
jo
mov
loopne
scas
leave
popa
movs
out
movs
pop
ret
xchg
(bad)
sbb
xor
stc
(bad)
daa
test
pop
jmp
hlt
xchg
lods
in
adc
mov
out
cmp
jno
push
or
scas
cli
pop
bound
pop
xchg
cmp
or
cli
adc
push
jle
and
fisubr
cmp
cmps
push
or
mov
jp
pop
jb
ss
aam
inc
pop
jmp
or
sbb
or
dec
push
mov
retf
cmp
mov
or
add
out
push
mov
aaa
std
(bad)
pop
jo
inc
ja
push
lock
popa
not
out
add
dec
mov
mov
dec
or
or
push
sub
push
fnstcw
adc
mov
or
icebp
lea
imul
or
ror
and
pusha
push
or
push
xor
push
call
inc
cmp
mov
(bad)
xor
cdq
outs
pop
mov
call
sar
(bad)
ror
(bad)
mov
test
leave
pop
aas
outs
push
sbb
(bad)
xchg
gs
fwait
mov
cmp
daa
in
mov
pop
inc
sub
pop
frstor
dec
call
mov
icebp
retf
rcl
push
sbb
(bad)
jb
das
gs
(bad)
jno
xor
fwait
add
dec
sbb
sub
jno
lds
lea
sbb
dec
fst
adc
xchg
mov
sbb
add
jmp
bnd
lods
mov
enter
lock
es
leave
sbb
out
mov
outs
movs
rcr
stos
pop
repz
lods
pop
and
jns
pop
std
xor
out
pop
(bad)
sub
leave
psubq
and
mov
out
jg
xchg
adc
fwait
in
mov
je
or
lods
cmp
int3
repz
jb
push
sbb
pushf
popf
aas
pop
mov
mov
js
retf
jmp
xchg
adc
retf
out
fwait
bound
mov
lahf
jge
and
and
and
(bad)
jb
pop
cmc
push
inc
aam
sbb
xchg
imul
data16
xchg
pop
fstp
push
jmp
dec
jmp
sbb
inc
mov
add
xor
xchg
(bad)
rcr
inc
call
mov
xchg
out
ret
es
sub
pop
sbb
cmp
and
cmp
jo
jmp
retf
loope
ret
adc
cmps
int3
jge
lods
pop
pop
(bad)
adc
(bad)
jp
(bad)
mov
cdq
push
call
hlt
xchg
fisttp
xchg
dec
mov
sbb
adc
out
popa
jb
sbb
mov
xor
mov
xchg
pop
fisttp
mov
and
adc
stc
inc
imul
fwait
je
iret
adc
push
sar
xchg
push
shl
sbb
cmps
push
push
and
jecxz
inc
cmps
mov
div
mov
mov
and
ret
push
xor
mov
lahf
mov
cmp
in
jecxz
dec
jmp
cwde
sti
push
or
sub
jge
inc
xchg
xchg
call
push
pop
popf
popa
rcr
jne
xchg
and
jmp
test
inc
enter
fwait
xor
outs
jmp
xor
pop
call
inc
pop
call
xchg
cmp
out
jb
in
pop
test
mov
and
mov
push
push
jle
xor
inc
addr16
sbb
mov
scas
stos
mov
ror
push
lock
inc
fstp
adc
cwde
pop
enter
or
inc
movs
hlt
out
mov
test
add
scas
fwait
popf
dec
mov
pop
lock
nop
arpl
mov
and
and
push
push
add
outs
sub
jbe
mov
and
outs
(bad)
idiv
outs
fisub
xlat
pop
pop
add
add
sub
lods
in
inc
cwde
bound
out
jne
cli
sub
retf
sub
mov
sti
popa
bound
call
and
mov
xchg
mov
xor
aas
test
loopne
lock
in
sub
les
jne
cmp
inc
pop
mov
mov
pop
pusha
and
xchg
call
inc
sti
jbe
int
dec
pop
xchg
movs
pop
adc
jp
push
dec
push
jge
lea
ds
push
pop
sbb
pop
mov
or
clc
shl
jmp
adc
sar
lods
push
test
sahf
mov
sbb
sub
jae
call
mov
sbb
or
add
cmp
xchg
dec
xor
cmp
mov
inc
daa
mov
pop
data16
xchg
xchg
outs
adc
mov
fsubr
hlt
pop
int
test
cmp
adc
mov
fiadd
xchg
cmp
aad
mov
cli
push
outs
jmp
retf
gs
xor
sub
sbb
and
loopne
mov
jne
aad
out
cdq
jl
inc
xor
inc
inc
test
inc
js
arpl
ins
sbb
inc
dec
sub
aad
lods
sbb
jmp
lds
add
(bad)
push
sbb
test
xchg
jns
and
into
movs
push
push
lods
add
mov
cmp
add
test
(bad)
lods
inc
test
inc
movs
push
js
jae
fcomp
fwait
sbb
in
loopne
ins
sbb
lods
mov
dec
dec
cdq
pop
push
push
(bad)
int3
repnz
(bad)
xchg
mov
in
push
mov
test
arpl
jmp
arpl
into
stos
inc
jle
sar
dec
repz
or
pop
mov
cli
xor
xor
fwait
dec
and
pop
or
aas
and
xchg
mov
inc
add
adc
test
or
pop
sbb
xchg
in
aad
out
sub
(bad)
fst
(bad)
cmps
cmp
or
aam
mov
std
cmp
cwde
pop
retf
pop
adc
in
stos
in
add
ss
in
xchg
or
pop
cmc
add
icebp
cmps
jbe
and
inc
dec
dec
es
inc
call
repz
mov
xor
xchg
cwde
mov
mov
in
ret
and
pop
bnd
clc
xor
push
fcomi
cs
sbb
pop
mov
mov
push
inc
push
rol
or
jae
dec
mov
in
mov
push
jnp
push
cmp
jle
cmc
retf
mov
jno
inc
sub
retf
addr16
fisubr
or
cmc
jnp
rcl
mov
sub
out
sbb
push
xlat
test
jo
shl
mov
jl
scas
sub
std
das
push
mov
xchg
sub
jmp
inc
mov
sub
retf
mov
rcl
je
scas
dec
inc
call
cmp
imul
sub
repnz
cmc
or
out
repnz
xchg
sbb
pop
dec
(bad)
or
adc
xchg
jbe
jns
cld
adc
fistp
mov
iret
pop
push
fnsave
sbb
xchg
mov
sahf
mov
push
les
mov
in
test
stc
mov
(bad)
adc
loope
inc
push
aad
push
test
push
sbb
mov
mov
stos
xlat
sti
ficom
outs
call
sbb
xor
push
mov
popf
xchg
dec
push
push
leave
inc
sbb
xor
or
lods
sub
push
push
je
push
outs
cli
int
repnz
rcl
pop
outs
mov
cmp
popa
jb
ins
xchg
das
sbb
push
inc
cmps
xchg
loopne
and
mov
(bad)
ja
adc
push
pop
xchg
fsub
cmps
ins
(bad)
inc
inc
in
sbb
call
dec
shl
mov
adc
clc
sahf
pushf
adc
sub
movs
(bad)
cwde
add
test
cmps
push
test
mov
clc
push
test
loop
idiv
imul
pop
pop
sbb
pop
xor
sub
scas
push
mov
(bad)
cld
pop
or
mov
sti
dec
cmps
call
scas
push
popf
fstp
bound
sahf
xchg
cmc
fimul
popf
lods
jl
jmp
int3
movs
sti
addr16
xchg
push
cmp
push
jge
push
enter
or
mov
in
jp
and
sub
or
in
and
setl
movs
hlt
inc
in
cmp
xchg
test
mov
push
fnsave
ret
scas
add
dec
enter
ror
loopne
xchg
(bad)
fidivr
loopne
iret
loopne
aam
push
into
arpl
(bad)
jle
cmc
bound
pop
repz
push
add
mov
inc
sar
in
mov
(bad)
aam
fcomi
push
fdiv
ins
or
sub
(bad)
pop
jmp
xchg
mov
pusha
mov
push
sar
ss
pop
pop
retf
retf
leave
xchg
(bad)
mov
(bad)
sar
mov
iret
push
movs
out
add
fst
pop
fstp
pop
loopne
xchg
jmp
cmp
retf
lock
or
add
(bad)
loope
shr
outs
inc
es
fbstp
lods
test
leave
dec
mov
sbb
sub
enter
mov
data16
xchg
push
movs
repz
lock
xor
pop
push
rol
scas
fwait
mov
mov
call
inc
loope
sub
nop
mov
mov
jecxz
push
xchg
mov
loop
(bad)
cdq
cdq
or
jbe
aas
sub
push
call
out
inc
popf
pop
push
pop
jns
cld
jmp
outs
push
mov
cwde
mov
test
test
aam
fwait
mov
mov
push
popa
mov
fwait
pop
pop
imul
dec
pushf
push
jl
sub
loop
or
mov
dec
repz
xor
sub
cmps
cld
or
leave
gs
jp
inc
lea
push
cld
stos
dec
mov
add
mul
add
sbb
mov
imul
pop
inc
ret
sbb
push
cmp
push
stos
idiv
pop
mov
sbb
mov
push
pop
rcr
jmp
das
sbb
pop
(bad)
adc
xchg
sbb
aam
mov
pop
popa
jns
(bad)
(bad)
repnz
jl
and
push
and
mov
push
mov
mov
cmp
test
cmp
(bad)
fst
or
pop
push
xor
adc
xchg
imul
push
daa
mov
mov
cwde
mul
mov
sbb
or
jae
int3
pushf
adc
jmp
gs
ins
adc
pop
mov
push
mov
cmp
adc
inc
adc
dec
stos
shl
pop
gs
sti
out
and
loop
and
mov
stos
(bad)
int
je
pop
int3
adc
jmp
dec
imul
es
jp
inc
fmulp
jp
sahf
hlt
gs
test
fdivp
add
mov
sub
jge
mov
repnz
fidivr
cmp
push
mov
mov
sub
out
(bad)
dec
aam
idiv
cmc
cmp
aas
fistp
push
bound
xor
jl
popf
jnp
or
js
rcr
(bad)
dec
jge
call
sahf
mov
fldcw
cmps
daa
push
xchg
jg
int
sub
out
fldenv
imul
xor
pop
in
push
jno
dec
and
pushf
sbb
mov
ficomp
push
xor
dec
pop
sbb
mov
sti
ret
addr16
or
les
push
cwde
std
or
les
add
rcl
imul
push
pop
push
pop
mov
pop
dec
mov
sbb
das
sbb
mov
inc
stos
mov
pop
in
call
lock
ins
xor
mov
js
inc
mov
mov
dec
adc
(bad)
shl
imul
ret
(bad)
out
push
pop
jbe
imul
retf
adc
stos
sbb
mov
out
out
push
outs
adc
pusha
cdq
(bad)
inc
repnz
popf
jbe
outs
cmc
adc
scas
jmp
pop
inc
aaa
mov
jae
and
sbb
ret
outs
inc
enter
pop
mov
jge
mov
mov
lea
mov
mov
cmps
scas
outs
mov
inc
jp
and
xchg
test
mov
je
mov
add
or
sub
and
sub
stos
ret
das
mov
pop
add
clc
leave
add
fs
sub
je
mov
movs
cmps
cmp
push
mov
scas
jnp
cmp
xchg
jp
out
push
inc
jmp
jne
inc
ffreep
sbb
sbb
test
push
mov
fild
jb
lahf
into
jno
rcl
fdiv
das
pop
mov
lahf
cmc
lds
mov
call
dec
iret
and
shl
stc
pause
mov
sbb
mov
add
fs
jl
retf
ins
mov
popa
add
push
lock
xchg
sbb
mov
popf
int
sbb
(bad)
fldenv
ret
xchg
jmp
xchg
jno
jp
push
idiv
adc
adc
mov
in
inc
inc
aas
stc
dec
sub
sar
or
pop
push
adc
sub
push
push
fistp
xchg
jnp
cmp
lahf
xchg
aaa
(bad)
int3
jnp
fnstcw
stc
lods
cld
cmp
inc
daa
xchg
add
int
dec
cli
and
fbld
cwde
icebp
push
movs
dec
fdivr
adc
push
push
outs
jb
ja
pop
sub
push
iret
add
or
mov
rol
mov
arpl
aas
and
cmp
pop
dec
mov
dec
int3
jmp
dec
jg
pop
jno
adc
pusha
pop
or
arpl
xor
movs
jae
ja
or
ins
scas
dec
fwait
(bad)
and
movs
adc
(bad)
and
loopne
push
jno
(bad)
data16
push
adc
mov
inc
pop
push
inc
fisttp
sbb
in
fisub
xor
xchg
addr16
daa
jmp
loop
xchg
std
sbb
add
push
cmc
in
mov
mov
test
inc
jg
fs
inc
cmp
lds
call
(bad)
ins
xor
cmc
out
or
pop
aad
ret
ret
push
in
push
movs
cdq
les
inc
popf
add
cmp
jnp
xor
adc
inc
jnp
sbb
xchg
outs
lds
pop
inc
xchg
jp
mov
push
jle
jg
inc
inc
xchg
pusha
stos
leave
xor
sbb
fs
jne
push
jecxz
and
div
inc
sub
mov
sti
jmp
outs
arpl
inc
cmp
retf
loop
mov
call
mov
inc
mov
outs
addr16
sub
xor
pop
ret
loope
sub
mov
sub
loop
xchg
fwait
into
sub
push
jecxz
cmp
ret
fcmovnu
inc
aas
adc
stos
xchg
adc
push
ins
dec
sub
popf
ror
ret
scas
cmps
mov
stos
mov
mov
hlt
mov
sub
imul
cmp
dec
movs
mov
push
inc
inc
inc
sub
icebp
xchg
aam
fisubr
pop
pop
and
ss
ds
push
adc
sub
pop
adc
sbb
out
das
add
mov
lods
sbb
fs
pop
jl
ficomp
es
cmp
jb
test
hlt
inc
mov
shr
movs
call
test
cli
pop
dec
jnp
mov
sub
mov
shl
mov
fisub
push
xor
fistp
add
add
in
stc
xchg
push
pop
jno
ins
xchg
nop
mov
loopne
scas
xlat
xchg
push
imul
mov
(bad)
dec
sub
icebp
add
sti
enter
sub
ins
ins
add
call
jp
push
pop
adc
gs
addr16
mov
mov
pop
xchg
in
(bad)
icebp
test
push
pavgb
popa
lods
lea
xchg
es
cmp
out
jns
std
out
inc
fcomp
mov
daa
test
retf
rcr
dec
xrelease
pop
out
test
icebp
(bad)
fisubr
lock
sub
pop
mov
xchg
int3
xchg
cli
inc
lock
jae
dec
in
rol
rol
out
sub
cmp
push
mov
imul
pop
adc
pop
inc
inc
ret
icebp
cmp
gs
rcr
arpl
test
mov
fild
add
xchg
cmp
gs
pushf
test
aam
pushf
dec
and
pop
cmp
xchg
call
hlt
int3
daa
popf
sti
icebp
in
jb
out
sub
lahf
sub
in
add
adc
test
cmps
loopne
mov
js
fstp
and
call
into
retf
xor
pop
cmps
mov
and
mov
push
add
repz
and
data16
add
test
or
cmp
add
das
mov
cmp
mov
mov
mov
mov
mov
jnp
gs
movs
push
jecxz
test
fist
cmc
push
mov
cdq
out
outs
enter
xchg
cmp
pop
sbb
inc
adc
pusha
sti
sub
das
mov
loope
jb
xor
int3
jle
jecxz
jg
or
xchg
adc
pop
shl
inc
push
xchg
or
stos
pop
and
push
adc
test
xor
xchg
pop
mov
js
dec
mov
dec
add
rcr
call
sub
pop
mov
push
inc
adc
mov
dec
sti
add
push
cli
lahf
sbb
pop
arpl
jl
sbb
and
xchg
daa
and
bound
sar
jge
rol
or
dec
or
bound
(bad)
adc
push
loop
aas
xor
cmp
sar
jmp
cmp
outs
dec
nop
xchg
mov
mov
sbb
and
rol
(bad)
jecxz
retf
jl
cmp
mov
outs
aam
ret
(bad)
int
xor
jg
sbb
add
retf
or
dec
and
sub
mov
jmp
mov
movs
(bad)
xor
xor
neg
std
outs
and
jl
sub
fidivr
fist
inc
iretw
cmp
icebp
push
lahf
sbb
test
loop
or
jns
rcl
lahf
popa
adc
jae
jmp
and
push
in
lods
ins
jne
xchg
jns
sub
scas
sub
push
(bad)
push
aam
adc
xchg
cmp
test
lods
sti
add
xchg
cmc
pop
push
add
xchg
arpl
call
jno
aam
and
mov
test
xchg
and
lods
add
sbb
imul
aaa
push
pusha
and
adc
iret
ja
hlt
(bad)
loopne
fxch
dec
mov
js
inc
inc
mov
aas
ss
imul
jbe
repz
pop
in
mov
lahf
or
ror
dec
pop
shl
mov
xor
daa
std
push
push
adc
and
(bad)
sub
imul
into
dec
and
test
sub
aas
jns
mov
cmc
pop
jmp
out
enter
push
sub
jne
push
iret
pop
pushf
ror
arpl
push
(bad)
mov
add
mov
or
pop
or
and
cwde
mov
pop
ds
add
ret
pop
mov
out
push
cmp
aas
hlt
arpl
(bad)
mov
xchg
lds
jecxz
imul
icebp
sti
aad
sub
adc
movs
cdq
xchg
push
cmc
push
cmp
(bad)
and
xchg
jns
ret
ffree
mov
fdecstp
(bad)
dec
mov
sti
mov
add
rcl
aad
sbb
push
mov
push
push
iret
inc
push
jmp
jp
ret
jo
mov
sar
pop
xor
adc
and
ins
lahf
dec
rol
add
mov
jmp
mov
jno
daa
in
adc
les
mov
popa
xchg
test
das
xor
rol
mov
adc
(bad)
xlat
dec
mov
(bad)
(bad)
pop
mov
ins
mov
cmp
popa
dec
xchg
add
mov
push
daa
pop
inc
fwait
mov
movs
(bad)
repz
pop
test
fnstsw
movs
adc
dec
jecxz
clc
pop
jno
sbb
xchg
push
mov
je
and
push
push
mov
add
inc
jb
scas
mov
cmp
inc
mov
and
inc
inc
mov
bnd
adc
mov
repz
add
call
add
clc
jl
mov
mov
pop
jne
push
in
cmp
call
leave
enter
je
(bad)
mov
pop
lahf
pop
ret
lock
dec
push
retf
xchg
(bad)
rcl
add
movs
retf
out
aam
in
punpckhwd
push
inc
jbe
push
ds
xchg
stc
jmp
dec
push
jp
push
aaa
xchg
dec
add
mov
or
imul
cmp
cmp
sbb
ret
xchg
cwde
mov
push
nop
aas
cmp
popa
cdq
(bad)
aad
mov
push
xor
inc
aaa
clc
mov
test
fiadd
push
jmp
xchg
inc
lahf
dec
pxor
aad
sahf
es
dec
clc
lods
(bad)
div
jp
fs
sbb
or
adc
jbe
imul
jecxz
and
aad
call
leave
retf
add
or
outs
jb
adc
das
ins
sar
rol
push
and
xchg
mov
test
pop
push
push
add
mov
(bad)
mov
cmp
loope
push
fidivr
push
xor
aaa
jo
push
cli
cmc
out
push
aad
or
loop
test
mov
sar
enter
lods
pushf
iret
out
push
mov
xchg
popf
sbb
sub
or
jae
xor
mov
or
cmp
into
mov
std
sub
dec
cmp
inc
mov
cli
and
pop
repnz
das
or
and
inc
pop
push
xchg
jo
mov
mov
inc
retf
dec
data16
pop
cmps
out
es
sub
fsub
xchg
jmp
push
push
jo
rcl
adc
scas
push
xchg
mov
shl
jbe
loopne
inc
in
and
xchg
pop
dec
les
call
(bad)
daa
mov
iret
test
jbe
sar
gs
popf
outs
loope
jmp
sti
inc
inc
fadd
inc
data16
pop
mov
mov
sub
mov
and
sti
pop
mov
inc
push
in
fidiv
sub
adc
fld
stos
dec
sub
icebp
adc
(bad)
sbb
pop
sbb
clc
(bad)
das
retf
push
dec
sar
sub
jg
push
sar
sbb
mov
inc
aaa
das
in
ins
(bad)
outs
cmp
pop
jg
jo
inc
cdq
inc
movs
mov
call
dec
xchg
add
push
scas
iret
xchg
xchg
aaa
loopne
ror
xor
jmp
dec
lock
xchg
add
test
mov
push
pop
mov
mov
imul
push
push
cmps
mov
and
mov
fbstp
mov
sbb
imul
loop
xchg
ret
hlt
jmp
sahf
xor
popf
lds
fnclex
div
stos
xor
out
pop
jecxz
aad
xchg
inc
adc
in
in
xlat
mov
aaa
outs
mov
cwde
cmp
dec
cwde
pop
push
mov
popa
adc
imul
es
xchg
push
outs
out
mov
cmc
push
(bad)
sub
in
push
call
(bad)
and
mov
or
imul
and
mov
mov
lods
jb
aaa
mov
dec
or
rcl
jo
lods
sbb
test
jno
cmp
mov
gs
push
in
xchg
das
pop
(bad)
outs
out
inc
adc
push
rcl
push
cmc
popf
fdiv
in
out
or
push
pop
test
adc
jge
(bad)
imul
(bad)
jge
xchg
mov
and
inc
pop
lods
out
fwait
mov
jns
call
mov
(bad)
jmp
jae
aam
(bad)
retf
or
sub
movs
xlat
gs
std
sub
outs
(bad)
inc
and
inc
out
fist
sbb
xor
jecxz
xchg
aaa
add
sbb
or
and
dec
js
and
jg
push
fs
and
adc
jmp
das
imul
fsubr
fst
fs
ror
or
test
(bad)
and
loopne
rol
loop
push
dec
imul
nop
push
jno
out
push
aaa
ins
pusha
in
xor
mov
sbb
dec
pop
or
lahf
loope
lahf
cdq
lahf
(bad)
fbld
dec
jo
shl
fdivr
pusha
loope
out
mov
push
mov
xchg
popf
mov
push
popa
lods
pop
scas
fs
leavew
jg
push
aad
sub
or
imul
dec
lock
mov
xor
mov
lods
stos
lea
lahf
add
mov
popa
push
add
xchg
inc
in
xchg
sbb
xchg
xor
ins
dec
icebp
addr16
jae
dec
div
ret
xchg
add
mov
or
xchg
cmc
mov
pushf
jl
fwait
lea
add
add
movs
in
sub
jmp
jo
xchg
mov
mov
dec
jno
sub
inc
call
add
les
fs
jl
push
movs
fs
je
cmps
movs
mov
retf
pop
push
jb
cmp
mov
fdivr
fadd
outs
mov
adc
les
std
stos
fistp
mov
mov
fisub
sbb
ret
and
or
pop
xchg
test
frstor
iret
adc
ins
cmps
lea
pop
mov
inc
loopne
sbb
test
dec
or
dec
js
pop
hlt
(bad)
out
bound
loop
xchg
cmp
pop
pop
mov
inc
aam
lods
js
outs
jns
mov
xor
and
ss
div
jno
add
pop
cmps
adc
out
dec
gs
adc
xchg
bound
sbb
imul
xor
jnp
and
arpl
inc
cwde
mov
mov
lds
jl
cmps
aas
leave
fisubr
push
aaa
xor
pop
mov
aaa
xor
adc
hlt
in
lds
xchg
cmp
add
cli
xor
push
dec
loop
popa
outs
push
bound
push
iret
mov
pop
mov
mov
pop
lock
pop
imul
lods
mov
xlat
xor
mov
fwait
gs
mov
mov
adc
or
ja
pop
inc
daa
xchg
ss
aam
push
sub
inc
imul
mov
(bad)
pop
push
sar
pop
or
imul
fidiv
pop
iret
xchg
pop
lods
cmps
call
push
push
arpl
cmc
rol
add
adc
aad
pusha
cmp
push
lods
adc
fstp
out
sbb
jnp
hlt
mov
outs
pop
mov
ds
dec
scas
mov
mov
daa
dec
(bad)
and
xor
rol
adc
fiadd
push
push
pop
push
or
adc
jle
dec
mov
fist
fwait
sbb
pop
xor
xor
out
sbb
scas
mov
jecxz
in
inc
add
arpl
lds
adc
in
data16
xor
loope
jecxz
xchg
dec
xchg
jns
shr
outs
jle
rcr
js
push
adc
shr
in
and
mov
fstp
cmp
pop
add
mov
mov
jmp
xor
test
push
fmul
arpl
mov
mov
dec
imul
add
pushf
jo
mov
loope
sbb
mov
inc
aad
popa
ror
out
sbb
mov
ret
sbb
(bad)
rol
addr16
cmp
aad
cmp
dec
sub
cwde
inc
jecxz
jnp
(bad)
jb
scas
test
push
pop
je
lds
push
or
jnp
inc
mov
cmp
cmp
shl
div
pop
cli
mov
mov
dec
aam
bound
dec
pop
js
and
(bad)
fwait
out
(bad)
es
repnz
jno
and
lock
imul
(bad)
xchg
into
loope
in
mov
xchg
ja
clc
mov
pop
push
adc
cmp
xchg
push
and
cli
dec
sbb
ins
adc
cmp
es
cmp
inc
adc
cmp
mov
pop
xchg
js
jb
out
pop
inc
lea
(bad)
xor
stos
add
or
hlt
aas
jmp
jecxz
sbb
xor
inc
add
lock
popf
sahf
scas
adc
imul
fdivp
rcl
xor
add
push
xor
es
sub
xchg
sbb
jne
or
stc
inc
xchg
ds
push
inc
out
mov
retf
ret
add
xchg
push
jbe
fmul
pusha
pop
or
xchg
daa
loop
shl
fld
fidiv
pop
sbb
and
cli
icebp
cmp
or
ds
xor
js
cmp
sub
mov
pop
mov
fimul
mov
aas
and
inc
ja
adc
inc
mov
(bad)
jmp
movs
movs
and
cmps
popa
xor
xor
sub
movs
mov
pop
iret
jle
rol
mov
pop
mov
push
dec
test
js
pusha
in
sbb
sbb
or
adc
and
mov
push
mov
daa
lods
test
aam
sbb
imul
sub
cmp
xor
test
mov
cmps
dec
cwde
xor
jmp
aas
xor
js
jecxz
mov
push
push
inc
in
adc
aaa
push
sti
pop
les
mov
mov
sub
call
pushf
push
mov
and
pop
clc
les
xor
rcr
or
cmp
and
movs
ja
cmps
out
xor
inc
xchg
retf
jnp
mov
jmp
xchg
out
sbb
push
inc
(bad)
mov
loopne
lds
ds
dec
ja
cli
pop
cmp
or
dec
push
imul
jp
xchg
cli
lock
aam
inc
lea
mov
dec
jne
jae
jmp
add
jmp
(bad)
data16
pop
rcr
int
jle
in
loope
(bad)
xchg
out
(bad)
outs
ret
adc
xchg
pusha
rol
out
cli
inc
or
mov
pop
dec
lock
std
fcom
mov
cmp
jg
pushf
push
and
pop
pop
mov
lods
xchg
sbb
xor
out
fucom
push
in
mov
les
ja
xor
ins
mov
data16
mov
imul
pop
cmp
sub
cmp
or
(bad)
mov
and
cmps
mov
or
add
scas
xchg
std
xor
(bad)
and
cmp
(bad)
dec
jne
mov
xor
mov
ret
call
dec
mov
fs
(bad)
sbb
adc
mov
mov
xchg
fidiv
mov
xchg
mov
sub
pop
imul
push
lea
jmp
nop
mov
fadd
pusha
scas
cld
lock
xchg
cmp
adc
bound
jnp
xor
bound
ds
jae
add
ins
(bad)
pushf
push
cs
add
cmc
in
imul
(bad)
out
cmc
add
inc
dec
inc
dec
pop
(bad)
ja
inc
sar
xchg
(bad)
mov
jp
pop
jmp
mov
mov
loopne
mov
aam
addr16
scas
pop
and
sbb
popa
pop
xchg
jg
lods
or
and
stos
addr16
imul
xor
stc
push
mov
fst
and
add
xor
(bad)
repz
pop
int
je
gs
push
jle
jbe
sub
jbe
push
test
fstp
mov
xchg
cli
lods
adc
neg
pusha
xchg
cmps
addr16
mov
mov
jecxz
test
daa
fisub
pop
adc
dec
test
push
scas
mov
loop
jg
jo
int3
xchg
clc
mov
push
cdq
cld
shl
(bad)
cli
pop
(bad)
(bad)
loopne
hlt
mov
aad
pop
mov
push
test
add
cld
pop
xchg
loope
(bad)
fwait
ins
sub
mov
scas
sub
pop
pop
stos
xchg
mov
mov
les
out
mov
pushf
and
call
mov
(bad)
xor
pop
xlat
mov
inc
cwde
and
sub
aas
test
(bad)
std
pusha
sub
mov
dec
fcmovnbe
push
inc
out
icebp
jb
(bad)
loopne
and
push
(bad)
call
sbb
mov
jno
ja
ins
push
push
adc
push
push
lahf
int
ds
mov
sub
lods
jle
mov
xchg
lods
adc
pand
fist
bound
repz
rcl
gs
stos
jns
into
pop
das
push
enter
jae
push
or
sbb
in
xchg
test
jns
mov
icebp
mov
and
xchg
sub
aad
sbb
jmp
aad
inc
fist
fwait
add
mov
pop
ds
sbb
cmp
push
push
sbb
or
xor
popf
daa
sbb
sbb
add
and
cld
mov
fisub
mov
(bad)
out
les
jns
cwde
lds
gs
dec
cli
mov
test
push
ret
mov
mov
int
adc
sub
pop
nop
loope
xor
sub
sti
jae
dec
jne
sbb
inc
sub
fld
(bad)
fdivr
out
mov
loope
js
or
inc
into
mov
sub
sti
lock
xor
cli
sbb
rcr
xchg
outs
or
cmp
mov
add
mov
add
test
cmp
jne
pop
add
ss
xchg
and
mov
xchg
pop
sbb
jg
jmp
jle
pop
fs
fnstsw
xor
adc
jns
bound
(bad)
ss
sti
cld
scas
lock
push
xchg
sbb
lea
jae
sar
jmp
scas
sti
adc
jl
push
stos
jb
loope
dec
push
in
cmp
adc
cmps
aaa
push
pushf
xchg
mov
pushf
cwde
lods
mov
dec
lods
(bad)
shr
fwait
sub
pop
shl
cli
in
jecxz
les
popa
fsub
inc
or
add
or
enter
repz
mov
daa
push
addr16
stos
out
xchg
fsubr
dec
(bad)
int
movs
mov
jmp
sub
and
sbb
int3
cs
xchg
je
xchg
sbb
repnz
inc
dec
xchg
sub
mov
enter
repnz
out
(bad)
hlt
lds
sub
mov
jmp
push
loop
pop
mov
pop
ja
cmp
fwait
scas
not
sbb
mov
test
add
sti
clc
mov
and
sbb
mov
or
stos
test
imul
pop
test
and
ins
fcomip
adc
push
inc
push
(bad)
or
test
xchg
jae
dec
retf
xchg
mov
leave
mov
leave
aam
inc
add
dec
out
xchg
pop
les
xchg
dec
pop
jg
push
adc
cdq
inc
stos
push
loop
xor
inc
in
push
mov
dec
aaa
fwait
jmp
in
mov
and
mov
call
mov
xchg
dec
xchg
xlat
ins
movs
push
dec
and
sub
ds
jae
in
sub
jne
mov
ja
jl
xchg
in
scas
or
add
mov
jge
fadd
mov
scas
les
movs
sahf
adc
aaa
(bad)
cld
hlt
mov
inc
sar
repz
pop
jle
loop
sub
fnstenv
int3
cmp
pop
arpl
cmp
loopne
sbb
xor
xchg
adc
test
jle
dec
aaa
jne
jae
fild
ss
test
into
jne
or
xor
jp
stos
pushf
loopne
repnz
fisttp
call
test
push
loopne
xchg
inc
adc
in
adc
imul
in
push
sub
lock
das
push
push
retf
lds
(bad)
pop
outs
dec
mov
mov
cmp
jge
rcr
fdivr
jbe
sbb
cmp
jnp
push
fdivr
int3
mov
repnz
cmp
push
fucomi
jmp
aad
jl
test
pop
pop
push
sbb
std
fadd
cmp
add
or
mov
mov
lds
adc
ret
mov
cmp
pop
(bad)
int3
jns
cli
bound
test
sub
jl
cs
jbe
or
lahf
mov
adc
in
jmp
and
inc
sub
xlat
loop
jnp
shl
fld
clc
gs
pop
leave
or
ret
jg
or
or
pushf
cmp
xor
push
pushf
(bad)
arpl
cmp
aaa
push
mov
mov
pop
jbe
imul
dec
out
out
sub
xchg
inc
fwait
and
mov
mov
adc
push
fst
cdq
ret
push
mov
jp
out
add
scas
jl
mov
fbld
(bad)
cs
xchg
bound
fisubr
arpl
mov
(bad)
mov
cmp
arpl
jge
sahf
frstor
mov
outs
xchg
xor
lds
aas
push
push
jle
fist
add
mov
pop
jmp
ror
ins
je
push
mov
repz
aad
bnd
sar
sbb
push
dec
lea
retf
in
test
xlat
jno
shl
lods
sbb
fucomi
pop
cmp
push
addr16
push
pop
fldl2e
pop
(bad)
std
mov
mov
inc
xor
adc
add
lock
jne
sahf
jge
pop
mov
push
icebp
push
imul
mov
pop
adc
cmp
push
mov
ret
sti
jmp
js
clc
ret
adc
std
fist
lea
in
sar
pop
and
jmp
or
call
push
rcr
je
push
test
xor
push
mov
jns
mov
aad
dec
jns
lahf
ja
mov
pop
data16
push
ins
bswap
out
pop
cmps
xchg
pop
fisubr
mov
cmp
rcr
retf
and
push
ret
dec
jno
fstp
stos
stc
inc
test
out
ret
imul
mov
mov
and
and
inc
mov
xlat
push
aad
sub
test
mov
or
pop
push
sbb
div
mov
je
neg
retf
cmp
jg
imul
sbb
mov
push
mov
jg
jbe
jno
push
popa
inc
and
sbb
mov
jae
(bad)
loopne
imul
adc
xor
dec
dec
outs
scas
js
add
movs
inc
mov
popa
mov
mov
scas
inc
icebp
mov
inc
fwait
xchg
nop
cmp
sti
out
jle
stc
xor
cvtps2pi
fadd
mov
jb
ja
sub
push
xchg
xchg
add
sub
hlt
ret
hlt
movs
mov
fst
sub
ins
shl
imul
dec
inc
ins
fwait
mov
jne
popa
imul
ror
data16
xchg
mov
mov
add
loope
in
cdq
imul
mov
sahf
ret
mov
push
add
lock
bound
int
push
cmc
xchg
sbb
jbe
jmp
and
mov
jae
push
movs
adc
iret
sub
xor
ss
jnp
push
movs
cmp
xchg
xchg
imul
push
pop
fidiv
call
add
mov
jp
retf
xchg
adc
int
aas
add
std
loop
lods
pop
jl
test
lods
(bad)
das
sub
cmp
jp
leave
rcl
add
das
jno
cs
ss
push
test
movs
xor
cmp
mov
ja
(bad)
int
dec
dec
mov
adc
nop
je
repnz
in
es
stos
aad
popa
mov
out
cmp
add
je
mov
cmp
jb
cmp
mov
fidivr
xchg
jle
pop
dec
jl
cld
daa
sub
btr
repz
test
xchg
dec
test
xor
jns
push
add
imul
lods
xchg
jp
ja
(bad)
xchg
shr
sbb
mov
(bad)
push
push
call
imul
lahf
or
shr
mov
push
cwde
jnp
ss
dec
push
lea
xor
sar
and
rol
push
mov
jb
push
gs
mov
push
add
dec
shl
pop
or
jl
inc
jmp
lods
sbb
mov
push
cmps
push
aaa
mov
lock
test
jo
sbb
xchg
or
shl
cmp
ficomp
xchg
adc
or
sub
rol
int
inc
xchg
sub
cmp
or
call
mov
mov
into
mov
adc
jle
std
sbb
sti
lock
in
pusha
scas
push
in
test
imul
mov
dec
cmp
cdq
mov
jecxz
arpl
pop
mov
mov
retf
dec
or
loopne
dec
mov
push
pusha
shl
pop
rcpps
mov
inc
enter
or
inc
inc
outs
jp
mov
leave
scas
pop
adc
addr16
(bad)
in
jle
movs
out
or
lds
sbb
cmp
jmp
xor
mov
shr
in
cdq
aad
add
retf
adc
out
es
sub
data16
retf
inc
add
les
ins
push
push
cmp
and
pushf
jno
xrelease
jae
mov
in
xor
mov
aas
xor
mov
lods
pop
push
shl
shl
(bad)
das
mov
jno
psubd
imul
mov
lahf
int
call
pop
inc
mov
cdq
inc
xor
mov
popa
ror
fmul
std
iret
cs
ret
adc
jns
cli
or
outs
(bad)
mov
call
addr16
or
popa
lea
sub
mov
adc
dec
pop
or
(bad)
mov
mov
(bad)
cmp
mov
imul
or
out
sub
scas
inc
push
aaa
cmp
mov
dec
xchg
gs
stos
mov
pop
out
mov
outs
dec
and
mov
mov
ja
iret
mov
dec
shr
aam
clc
cdq
loopne
jbe
out
and
jge
cmps
jb
sub
inc
inc
push
stos
jmp
xchg
call
test
sbb
pop
repnz
(bad)
cmp
in
lds
and
cli
cmp
adc
ja
dec
fxch
or
push
stos
jae
xor
icebp
xchg
dec
sub
mov
in
sub
add
fsub
push
cmps
add
loopne
jbe
add
popa
test
pop
jg
scas
mov
jp
inc
(bad)
into
pop
dec
cmp
or
jae
int3
sbb
aad
dec
sub
mov
mov
pop
push
shl
xor
pop
aam
and
xchg
add
lods
inc
jp
jbe
push
or
ds
ds
sub
or
xchg
test
test
and
xor
add
dec
adc
stc
mov
mov
pushf
adc
outs
sub
mov
mov
cmps
push
sub
inc
sahf
in
xor
fsubr
mov
mov
mov
cmps
aaa
out
xsavec
fidivr
cdq
(bad)
inc
mov
in
push
inc
inc
daa
call
mov
mov
adc
jmp
aad
gs
sub
shl
in
test
test
mov
aam
mov
adc
add
or
xchg
and
or
jbe
jecxz
inc
ror
and
cmps
jb
mov
icebp
dec
jge
sti
ins
(bad)
xchg
fmul
(bad)
xor
retf
jp
or
lock
into
dec
cmp
leave
add
jns
mov
psrlq
icebp
popa
mov
icebp
(bad)
mov
je
pop
cmps
pop
push
clc
add
mov
pop
call
pop
cs
bnd
outs
test
lock
or
pop
retf
adc
jmp
adc
jle
jbe
ss
pop
dec
sbb
or
and
push
cmp
xchg
push
(bad)
enter
xor
mov
xlat
test
adc
mov
push
(bad)
fnstcw
test
pop
adc
xchg
data16
in
adc
pop
mov
mov
or
dec
cmp
int3
cmp
xchg
mov
in
retf
mov
mov
mov
data16
out
xor
mov
mov
mov
mov
inc
iret
add
ins
stos
sbb
pop
push
jmp
or
jo
jmp
ret
int
pop
mov
daa
sti
scas
mov
xor
rcr
dec
dec
ror
lods
and
jmp
jnp
mov
mov
movs
outs
push
jb
adc
mov
xchg
push
ret
pop
in
adc
fidiv
repz
nop
(bad)
test
mov
repnz
cdq
jno
jl
mov
pop
push
mov
jecxz
cmps
popa
mov
and
fwait
xchg
sub
imul
(bad)
mov
ficom
call
sti
pop
fldcw
dec
mov
add
test
or
enter
repnz
mov
imul
lock
or
mov
xor
fidiv
mov
pop
pop
ja
test
sub
or
imul
jo
cmp
int
data16
inc
repz
in
jne
mov
iret
mov
or
inc
add
xor
sbb
push
sub
mov
cli
pop
stos
ds
scas
xor
std
ja
mov
fdiv
(bad)
fild
sub
ss
jae
lock
loop
add
inc
(bad)
and
xchg
aad
or
repnz
ret
inc
or
fstp
fsubp
dec
jo
xchg
xchg
gs
jmp
add
xor
dec
js
mov
and
adc
hlt
shr
mov
call
jns
shl
aad
push
mov
fistp
jne
fwait
test
cdq
mov
fwait
push
xchg
inc
repnz
jmp
(bad)
ficom
aas
pop
sub
xor
xchg
xchg
lea
sub
lods
add
sub
cmp
add
scas
and
and
cmps
gs
pop
inc
and
aas
cld
adc
(bad)
mov
xchg
out
add
and
push
inc
mov
inc
in
(bad)
loopne
push
std
les
mov
pusha
or
adc
and
push
or
retf
jnp
sbb
stos
fs
fwait
pop
fistp
xchg
jns
test
cmp
inc
xor
jmp
mov
xor
enter
out
sbb
mov
xor
scas
jns
or
jmp
scas
add
xor
xchg
jno
jmp
sti
jnp
cmp
iret
pop
aaa
cmps
inc
pop
cmp
fistp
test
lahf
add
mov
mov
adc
pop
mov
pop
(bad)
push
js
enter
movs
inc
inc
cmp
xchg
cmp
pop
sbb
push
loopne
xor
push
xor
push
mov
imul
sub
mov
jb
iret
stc
cmc
or
stos
jge
dec
test
(bad)
ds
mov
and
sbb
in
arpl
into
jl
cmps
sbb
add
or
pop
jb
jle
and
and
dec
fbld
rcr
xchg
jno
das
adc
jb
cld
inc
out
out
mov
and
mov
mov
fst
jbe
out
loope
push
shl
subps
out
outs
lock
hlt
jae
pop
lods
ud1
in
fild
retf
repnz
pop
xchg
inc
pop
test
pop
cmp
sbb
mov
cmp
and
xor
(bad)
and
and
out
dec
sti
fiadd
sbb
push
mov
mov
cmovbe
mov
test
push
pop
cmp
pop
push
jb
loop
xchg
call
xlat
sub
pusha
fnstenv
in
pushf
lods
sub
adc
mov
jno
mov
sahf
cmp
xchg
add
data16
test
dec
repz
aas
push
ja
push
pop
movs
pop
xchg
inc
fisubr
aam
test
iret
daa
das
div
cmps
stos
leave
(bad)
(bad)
adc
out
leave
movs
jno
std
sub
(bad)
fisttp
pop
cmp
sbb
jmp
fisub
mov
retf
dec
div
jmp
fsubr
outs
push
pop
into
jno
pusha
nop
adc
xchg
dec
in
pop
mov
mov
push
xchg
or
fiadd
(bad)
xlat
xor
adc
cmp
arpl
xchg
pop
xor
sbb
xchg
mov
clc
adc
or
push
aam
mov
inc
cmp
fcmovnbe
retf
iret
sahf
out
loopne
loop
cld
jns
test
mov
adc
stos
movs
enter
jb
(bad)
fild
std
bound
jle
xlat
lods
ss
inc
mov
or
and
or
sahf
clc
ficomp
ret
fsub
int
mov
es
push
rcl
iret
xchg
and
jp
ja
jo
adc
cdq
or
jb
sub
sbb
adc
cmp
sti
hlt
sahf
lahf
inc
fidivr
(bad)
daa
dec
pop
pop
shl
mov
jno
enter
dec
aaa
test
push
les
enter
std
(bad)
fs
ins
int
cld
mov
retf
pop
xor
mov
adc
pusha
dec
sbb
lods
jbe
xchg
mov
enter
fnsave
jae
xlat
inc
repnz
das
fnstcw
fisttp
add
mov
and
jle
jb
test
sahf
cmp
jo
sub
or
cmp
ins
cmp
jnp
loop
and
push
retf
inc
mov
and
mov
imul
sbb
cwde
xchg
push
bound
ja
sbb
imul
call
shr
arpl
fisub
mov
pop
hlt
outs
test
adc
dec
(bad)
(bad)
(bad)
dec
ins
cmp
sbb
sub
loopne
sahf
adc
add
mov
icebp
clc
and
bound
and
js
mov
sahf
nop
pusha
or
mov
push
movs
xlat
(bad)
and
or
addr16
jno
jmp
shl
or
lahf
mov
add
jl
inc
adc
pop
mov
pop
jge
nop
mov
pop
inc
out
or
inc
imul
jmp
pop
xchg
jae
fstp
xchg
or
or
xchg
(bad)
sbb
lds
daa
cmc
dec
push
adc
int3
mov
xchg
fwait
and
jb
mov
aad
and
jmp
outs
(bad)
call
add
aad
mov
es
fdiv
enter
scas
ins
adc
xchg
dec
fnstcw
xchg
sbb
jecxz
xchg
mov
lods
pop
push
fsubrp
repnz
pop
sbb
in
test
fdiv
xor
cmp
jbe
out
nop
int3
mov
xor
arpl
stos
cmp
in
std
repz
mov
out
fcom
ja
aam
std
adc
mov
adc
or
jmp
sbb
cmp
mov
push
mov
fst
jp
dec
push
int3
pusha
pop
cmps
mov
jne
ds
xor
add
ret
xchg
cmps
sub
aad
push
scas
pop
fistp
push
sbb
mov
stos
sbb
ret
xchg
xchg
push
sbb
sahf
jb
bound
jg
or
push
mul
jmp
out
stc
stos
lods
push
sbb
and
xor
jns
jg
cmp
cwde
cmovg
out
sti
pop
jae
movs
push
inc
mov
cmps
stos
pop
mov
dec
pop
fisub
push
test
stc
inc
rcl
and
xchg
in
cdq
ins
cli
add
add
mov
sti
cli
mov
mov
push
ret
je
aas
adc
fwait
jnp
cvtps2pi
into
cld
pop
xor
and
push
fsubr
xlat
scas
xor
mov
call
aaa
mov
cmp
sub
stos
movs
sahf
cmp
nop
jb
mov
pop
push
in
mov
popa
scas
sbb
dec
in
movs
push
jmp
add
arpl
rcr
(bad)
dec
and
mov
push
sbb
inc
xchg
adc
cdq
inc
xor
inc
ret
ja
into
stos
in
fisub
jle
les
in
test
repz
callw
mul
jg
es
mov
xor
mov
dec
ins
(bad)
pop
jno
data16
pop
add
cmp
and
int3
push
add
out
hlt
or
dec
lea
xor
stos
scas
sub
aam
ret
xor
push
lahf
enter
xchg
sahf
xchg
dec
pusha
mov
cli
in
jnp
sub
push
adc
sbb
movs
inc
xchg
jno
dec
cld
adc
retf
sar
xor
mov
push
in
movs
aas
arpl
push
mov
pushf
daa
cld
dec
pop
sbb
xor
and
lea
cmp
mov
jae
or
xchg
jmp
and
cmp
sbb
dec
std
lock
out
lock
rcr
mov
mov
push
sub
sub
sbb
sbb
scas
sar
sahf
fcmovne
test
xor
(bad)
jne
out
mov
mov
push
mov
sbb
pop
and
lea
aam
cmp
fnstsw
es
cmp
sub
add
pop
cmp
cmp
movs
(bad)
lea
js
fs
xchg
repnz
test
xor
sbb
aad
inc
ins
add
mov
test
cmc
loop
dec
jns
and
aad
sub
data16
cdq
enter
dec
retf
or
lock
xchg
loope
sbb
add
mov
xor
iret
push
retf
sub
add
or
ret
xor
int
int3
jecxz
out
mov
js
jg
pusha
dec
xchg
fnstsw
push
into
sbb
(bad)
shr
jns
push
sub
daa
add
loopne
call
inc
out
pushf
hlt
daa
shl
push
xchg
mov
lds
and
push
mov
xchg
and
shr
add
push
loop
xor
lods
push
loop
pop
retf
stc
in
pop
stos
push
retf
cwde
sub
test
mov
mov
sub
call
adc
je
outs
(bad)
lds
sub
jl
or
adc
xchg
adc
dec
or
dec
sbb
jp
ror
mov
movs
xor
or
popf
int3
xchg
dec
pop
jmp
or
sbb
fld
pop
or
ret
and
out
mov
mov
and
mov
loop
push
xor
adc
push
mov
enter
sub
pop
stc
retf
push
pop
dec
inc
pop
pop
or
or
and
out
cmp
dec
add
push
pop
scas
mov
sbb
jo
cmp
and
xchg
inc
lea
mov
out
inc
sub
fst
adc
(bad)
cmp
push
push
and
leave
jnp
xchg
lock
fnsave
mov
icebp
mov
pop
sbb
and
jecxz
stos
scas
popf
icebp
aas
fadd
test
jnp
cli
mov
xchg
loope
inc
cmps
sbb
push
dec
adc
add
jno
sbb
adc
xchg
std
out
icebp
sub
push
add
or
imul
movs
out
adc
xchg
test
fnstenv
(bad)
and
call
cmp
xchg
les
repz
xor
pop
shr
xchg
cmc
mov
mov
and
fdiv
jecxz
xor
cmp
jbe
xor
pusha
retf
jecxz
adc
jp
cs
inc
add
cmp
cmp
mov
push
inc
or
inc
loop
or
inc
dec
pop
frstor
and
sub
lahf
sub
rcl
pusha
xor
pop
repz
sub
push
ins
jecxz
in
pop
cs
les
mov
pop
jb
scas
stc
jg
inc
xor
ja
aad
movs
imul
dec
mov
daa
arpl
(bad)
cmp
mov
cmp
data16
stc
mov
ror
jnp
xor
sbb
mov
dec
les
add
test
out
(bad)
ror
inc
ss
add
cld
sti
mov
cwde
(bad)
in
push
or
mov
sbb
mov
in
movs
popa
into
cmp
inc
outs
pusha
mov
fimul
or
mov
fcomp
(bad)
aas
sbb
aad
movs
lock
test
shl
jne
push
pop
dec
rep
test
lahf
fmulp
pop
mov
pop
(bad)
aad
icebp
adc
loopne
sbb
ds
cli
push
not
inc
pop
dec
inc
jmp
xchg
nop
push
push
cld
mov
mov
sbb
inc
out
out
push
mov
popf
mov
clc
dec
(bad)
outs
sbb
imul
inc
in
pushf
adc
iret
mov
call
or
(bad)
ret
dec
sub
pop
imul
mov
out
xchg
sti
clc
jb
retf
out
pop
push
add
xchg
stc
jl
xchg
pop
iret
xor
sbb
scas
das
nop
retf
(bad)
lods
xchg
inc
sub
xor
lods
ficom
xchg
mov
mov
adc
js
daa
xlat
clc
cmc
xor
mov
in
or
inc
add
cmps
push
test
sub
mov
retf
mov
pop
test
mov
fadd
push
mov
inc
sub
cli
sub
nop
mov
ror
(bad)
jo
mov
xor
mov
in
jecxz
pop
inc
and
sahf
mov
sti
and
xchg
dec
adc
sub
sbb
lahf
sbb
sti
and
(bad)
mul
enter
sbb
data16
fisub
xor
push
add
pusha
jae
xor
iret
mov
mov
jo
or
or
add
jp
loope
push
clc
pop
jle
xchg
test
jno
or
mov
in
dec
stos
stos
xchg
sub
stos
cmp
inc
loop
sub
mov
inc
or
std
sub
rcl
push
cmps
fnstsw
loop
sahf
arpl
ret
mov
rcl
sbb
inc
xchg
cmp
sti
cmp
mov
inc
xchg
out
jecxz
mov
(bad)
aas
xchg
inc
in
sbb
pop
cmp
(bad)
bound
pop
xchg
xchg
jg
and
sbb
jg
or
cld
loopne
into
nop
pop
or
(bad)
fsubr
cdq
mov
imul
xchg
adc
ins
das
mov
and
mov
and
popa
enter
push
lods
jbe
push
fwait
outs
mov
cmps
adc
mov
pop
ins
data16
sbb
dec
adc
adc
retf
sar
push
pop
aad
push
xchg
test
loop
xchg
dec
pushf
or
cmp
adc
jo
fist
mov
rcl
cmp
cmp
arpl
mov
sub
repnz
js
dec
inc
in
and
jp
mov
inc
and
bound
gs
mov
add
mov
das
xor
mov
push
retf
xchg
in
stos
cli
ret
jmp
push
jnp
jne
inc
xchg
loopne
daa
xchg
ret
xchg
sub
loopne
in
push
and
ins
(bad)
sbb
add
xchg
sub
lock
xchg
daa
pop
test
pop
mov
out
mov
pop
mov
inc
(bad)
jmp
pop
test
fcmove
push
loope
stos
mov
xchg
sbb
cs
xor
jmp
pop
xor
pop
ret
sbb
pop
adc
loope
test
cmp
jecxz
dec
iret
test
daa
and
xor
repnz
xor
pop
push
js
out
mov
add
xchg
test
mov
loopne
lods
std
sbb
pop
sti
adc
cdq
pop
add
movs
xor
out
scas
push
jl
adc
push
bnd
jmp
cwde
(bad)
sahf
inc
movs
pusha
xor
cdq
jmp
popf
scas
js
(bad)
fist
dec
and
(bad)
das
inc
lods
xchg
call
inc
inc
xchg
xor
retf
repnz
push
push
and
and
ficomp
mov
test
test
inc
inc
stc
ins
retf
pop
xor
hlt
jae
neg
int3
pop
mov
addr16
push
mov
sub
inc
mov
cmc
jecxz
in
sub
xor
xchg
xchg
cmp
rcl
xchg
(bad)
shl
movs
int3
sahf
pop
mov
int
jb
inc
xchg
mov
inc
rol
pop
or
sti
out
mov
ins
and
mov
daa
and
icebp
add
dec
dec
shr
adc
dec
sbb
dec
ja
and
jmp
sub
aas
xlat
int3
cdq
jl
mov
add
or
jne
cmp
mov
inc
adc
cmp
and
xlat
xor
(bad)
push
es
jle
or
lahf
jmp
popa
mov
add
cdq
xchg
imul
push
cmps
lea
pop
je
push
xchg
das
loope
jmp
int
sub
jg
sbb
sti
test
mov
pop
sbb
adc
bound
scas
push
mov
cmp
xor
pop
stc
sub
xchg
fistp
jmp
pop
adc
push
xchg
inc
inc
jo
cmp
and
jo
mulps
sti
ins
ss
xor
mov
movs
xor
dec
pop
pop
sbb
pushf
out
pop
sbb
jecxz
cmp
fstp
jl
in
fwait
popa
aam
pop
push
stos
add
pop
or
mov
and
push
or
scas
mov
adc
ja
add
or
mov
cmp
mov
push
pop
data16
pop
xlat
dec
push
fidivr
or
lods
mov
stc
movs
sub
dec
lea
pushf
and
ds
and
(bad)
aam
mov
xchg
or
push
jl
dec
iret
ret
imul
sub
add
pusha
push
test
and
addr16
xchg
gs
out
popf
xchg
jge
test
jl
repz
pop
sub
jns
fs
add
clc
ins
ret
(bad)
hlt
sbb
mov
dec
mov
pop
jmp
std
push
shr
jge
test
test
into
dec
add
sub
add
shr
stos
cmp
mov
retf
xchg
ds
push
mov
mov
pusha
push
and
cmp
xor
aam
ret
dec
cmps
or
and
adc
mov
(bad)
adc
mov
scas
pushf
push
push
sub
xor
mov
xchg
mov
pusha
jl
loop
in
in
outs
xor
dec
inc
scas
loopne
push
jl
and
in
loopne
push
pop
loope
movs
nop
cli
jnp
lds
sbb
daa
lods
jnp
push
cli
pop
ins
fild
shl
pop
sub
dec
stc
les
mov
stos
in
retf
jns
mov
fidivr
xor
cmp
scas
xor
fs
pop
mov
pop
shl
aam
imul
in
imul
scas
cwde
push
jbe
clc
xlat
cmp
add
cmps
jnp
leave
movs
xlat
xor
jg
imul
mov
imul
cwde
xchg
lea
push
aam
xchg
sub
xor
mov
xor
cli
mov
cmp
repz
adc
sbb
push
daa
ja
stos
pusha
js
into
add
mov
sbb
aaa
xor
adc
sbb
fucomi
aam
xor
movs
stos
sub
mov
and
fidivr
iret
sbb
lods
lods
jne
call
enter
add
aam
mov
sar
pusha
ror
aas
cmp
into
and
sbb
dec
dec
das
adc
gs
mov
push
(bad)
pop
shl
add
ins
mov
lods
sbb
in
cdq
loop
xor
call
out
sahf
out
sbb
jno
popf
outs
add
mov
arpl
pop
inc
jecxz
aam
neg
je
mov
jecxz
test
sub
push
mov
js
rol
push
cwde
outs
sahf
imul
inc
jns
call
sub
jne
cmp
push
push
mov
pop
loope
test
aaa
push
inc
xor
add
bound
push
repz
sahf
mov
cmp
push
popf
cmc
test
data16
dec
sub
cmps
outs
push
ret
(bad)
bnd
dec
aas
arpl
fistp
cmp
add
dec
mov
sbb
add
addr16
fcmovnbe
sbb
ror
adc
les
(bad)
jns
data16
fdivr
push
ja
add
jge
inc
xor
lahf
push
sbb
test
jnp
movs
or
inc
jmp
xlat
or
retf
sti
and
sbb
dec
sub
push
shl
xchg
out
mov
jmp
sub
popa
in
scas
gs
ins
daa
lahf
inc
aam
faddp
push
mov
test
adc
adc
mov
xchg
add
(bad)
adc
add
or
jmp
jmp
pop
jb
test
cmps
dec
dec
scas
daa
xlat
(bad)
scas
sar
xor
pop
inc
call
repnz
dec
push
xor
repz
adc
adc
(bad)
xor
adc
adc
pop
sub
in
xor
iret
out
test
cld
push
push
push
sub
inc
or
cs
(bad)
je
sub
jp
sub
inc
mov
ror
jo
call
bound
pop
dec
or
std
loope
pop
scas
js
test
ja
adc
sbb
sub
cmp
in
xlat
outs
cmps
ret
int
jecxz
cli
push
test
aas
fidivr
lea
fist
mov
ss
dec
test
fnstsw
mov
ins
jno
mov
or
pusha
mov
popf
sti
test
mov
mov
test
fidiv
adc
movs
and
dec
jecxz
sub
arpl
or
stc
and
fwait
rcl
jmp
inc
imul
add
pmullw
pusha
xor
jno
lds
pusha
std
outs
inc
repz
adc
and
out
push
jl
enter
cmc
mov
and
stos
mov
inc
add
out
pop
jb
push
into
pop
pop
(bad)
outs
jle
push
fucomip
and
addr16
ror
sbb
mov
mov
retf
aaa
and
scas
jp
cwde
aam
pushf
test
push
adc
inc
inc
dec
cmp
fcom
xchg
inc
pop
xchg
jecxz
push
enter
dec
cmp
or
sbb
(bad)
or
ins
mov
fnstenv
imul
add
mov
or
mov
sbb
inc
test
scas
mov
mov
cmp
xchg
push
jnp
stc
push
mov
inc
outs
std
pop
push
les
(bad)
jae
call
ficomp
stos
lods
imul
dec
sbb
and
xchg
mov
js
ds
aas
mov
sti
(bad)
sub
mov
imul
sbb
add
mov
(bad)
push
out
sub
addr16
int
jae
call
fcom
sbb
mov
test
jae
sbb
js
xor
mov
adc
adc
out
cwde
ds
fadd
adc
test
not
mov
cmp
stos
and
ins
mov
mov
outs
ds
shl
retf
dec
rol
pushf
frstor
xor
mov
imul
inc
jae
jmp
pusha
(bad)
pop
jg
imul
daa
mov
mov
retf
bound
popf
xor
mov
lds
xchg
das
xor
cld
stos
mov
test
mov
je
xchg
push
inc
std
in
fdivr
jns
inc
add
movs
cmp
cmp
sbb
mov
push
imul
repnz
sbb
dec
and
push
jno
bound
shl
fwait
dec
in
adc
pop
mov
aas
mov
cmp
sbb
movs
sahf
adc
scas
sbb
dec
xchg
lea
sbb
sub
jmp
jmp
cmp
cmp
pop
enter
dec
test
adc
sub
adc
pop
push
or
mov
cmps
sub
xchg
sbb
into
jl
mov
popa
mov
push
ins
xchg
int
sti
xchg
sub
cld
add
out
lock
scas
shl
mov
or
mov
scas
outs
mov
pushf
or
and
inc
dec
(bad)
js
into
aas
imul
add
ins
hlt
out
jne
pop
std
jns
imul
gs
cmps
or
test
lahf
mov
bnd
push
iret
popw
inc
(bad)
xor
jo
mov
mov
movs
cmp
pop
pop
lds
inc
push
push
mov
pop
movs
call
mov
test
inc
arpl
mov
cdq
push
xchg
mov
and
mov
mov
pusha
pop
add
call
jae
loope
or
loopne
std
push
xor
out
mov
(bad)
mov
mov
imul
dec
mov
sbb
jmp
dec
in
inc
add
out
mov
cmp
cmp
adc
pop
shl
add
out
jl
inc
push
imul
rcl
xchg
cmp
cwde
or
nop
lock
scas
and
loope
fucom
in
ror
repz
sti
ficom
mov
pop
mov
sub
xor
jmp
(bad)
cmp
push
mov
aaa
mov
pop
jo
dec
or
fdiv
push
popf
aad
jle
jb
push
loopne
loopne
sub
sbb
mov
movs
ins
les
cmp
dec
in
cmc
iret
add
or
pusha
inc
retf
mov
scas
pop
outs
jnp
dec
loopne
fsubr
adc
xor
outs
lea
loope
call
mov
ja
aam
add
sti
mul
pop
in
icebp
rol
xor
push
out
mov
xchg
pop
push
shl
retf
fcmovbe
cmp
xchg
aam
add
push
push
cmp
sbb
adc
and
add
sar
fwait
push
ins
ins
(bad)
cld
cmp
clc
inc
mov
lods
add
xor
sub
lods
mov
mov
add
adc
pop
dec
aam
xlat
and
mov
add
sub
and
test
xor
jnp
xor
icebp
xchg
shufps
cmps
inc
out
cmp
inc
dec
add
add
ins
push
arpl
mov
dec
xor
jns
arpl
lahf
(bad)
int
test
pushf
je
xchg
rcl
pusha
enter
mov
jnp
jmp
sub
xor
retf
dec
sub
sub
fld
or
into
jb
or
stos
rep
ror
sbb
mov
mov
std
scas
pop
jns
xor
nop
push
inc
cmp
aaa
repnz
xor
pop
sub
xor
(bad)
pop
or
sub
mov
xchg
imul
xchg
pop
mov
fadd
jae
xchg
push
jb
sub
pushf
sub
rcl
iret
mov
loop
xlat
(bad)
adc
repz
lock
mov
out
jno
in
outs
inc
outs
lods
jb
shl
shr
dec
pop
test
and
movs
in
inc
mov
add
sub
push
neg
int3
and
dec
daa
push
add
fwait
imul
jns
stos
xor
int3
sub
popf
fcmovne
loope
adc
stos
xor
inc
stos
mov
push
fld
cmp
sbb
rol
push
sbb
cli
and
push
push
in
dec
mov
(bad)
stos
in
(bad)
cmp
test
xchg
dec
push
push
fld
mov
push
inc
out
jp
test
loope
xlat
xor
retf
mov
fistp
pop
fscale
enter
out
das
and
nop
test
ret
lods
and
add
ins
push
addr16
dec
xchg
aam
jno
(bad)
rol
jae
pop
enter
out
xchg
jae
pop
ins
out
fs
inc
push
outs
or
cmp
dec
dec
or
xor
mov
xchg
sub
mov
jmp
cmp
loopne
jl
in
xchg
jl
das
and
in
and
(bad)
idiv
arpl
sbb
pop
(bad)
leave
repnz
loop
int
data16
rcr
and
sub
adc
sub
adc
dec
cwde
pushf
mov
retf
push
adc
pusha
enter
jmp
mov
sbb
and
cld
cwde
inc
fsub
loopne
loop
iret
xchg
push
enter
sub
sbb
(bad)
pop
sub
cmp
jns
mov
daa
jns
and
mov
ret
jg
xchg
sbb
lds
cmp
cmp
ds
and
fcom
rol
jmp
add
daa
ja
(bad)
imul
adc
mov
aaa
(bad)
fs
cmps
test
fsubr
vmread
sub
popa
outs
cmp
push
cmp
or
cld
retf
inc
and
mov
test
das
and
out
mov
test
pop
push
jle
xor
push
mov
add
cmps
sbb
inc
and
in
sbb
pop
mov
std
xchg
bound
cmp
cmp
(bad)
add
aas
outs
ins
ffreep
je
adc
push
aad
cmp
sub
aaa
dec
inc
int3
test
fisttp
push
cld
ret
sub
push
inc
pusha
bound
lods
cmps
push
cld
stc
jg
adc
out
xchg
or
aam
mov
cmp
loope
add
leave
call
loopne
nop
mov
lods
adc
or
jns
(bad)
mov
push
aad
ins
outs
pop
out
outs
and
in
mov
or
dec
pop
mov
inc
sub
pop
mov
nop
loope
ds
push
outs
xor
or
rol
in
loopne
adc
mov
sti
cmp
push
push
loop
call
xor
les
lods
mov
jl
xchg
retf
(bad)
cmp
iret
in
stos
or
pop
or
pop
repnz
add
mov
push
add
and
xor
mov
stos
xor
out
and
and
sar
les
and
push
push
and
adc
call
add
rcr
jbe
call
icebp
pop
es
pop
dec
rol
mov
std
add
push
add
push
adc
or
adc
cmp
pop
cmps
rcr
sbb
and
fbstp
sub
inc
mov
push
sti
stc
int
retf
mov
mov
jecxz
shl
or
cmp
ins
pop
or
or
add
sub
movs
adc
shl
xor
sub
inc
stos
lahf
jg
scas
xlat
jae
sub
fs
call
icebp
into
(bad)
adc
adc
or
outs
pushf
nop
aas
xor
or
std
mov
movups
pop
dec
cwde
push
sbb
nop
mov
repnz
xchg
icebp
or
push
int3
imul
in
xor
call
pop
cmps
cmc
shl
push
xchg
bound
jecxz
xchg
push
popa
mov
xor
sahf
and
push
popf
cmp
inc
sbb
jne
(bad)
push
add
xchg
lahf
sub
jle
mov
push
ret
lods
arpl
add
pop
out
mov
inc
sbb
out
pop
dec
stos
test
in
pop
xchg
fwait
in
popa
loope
shl
and
popa
(bad)
in
popa
sub
cmc
xor
inc
pop
xchg
adc
mov
and
nop
or
pop
adc
pop
int
adc
jle
les
or
dec
mov
mov
sar
xchg
dec
pop
les
mov
cs
cmp
jecxz
pop
or
dec
xor
mov
xchg
and
jmp
mov
loope
adc
out
jns
dec
pop
popa
cwde
adc
lea
in
test
inc
pop
retf
enter
dec
cmp
xchg
inc
icebp
loope
test
add
and
add
cdq
push
add
adc
pop
jmp
mov
cwde
pop
adc
xor
icebp
push
and
fadd
popa
mov
sbb
push
and
sub
jp
ss
stos
add
daa
ins
mov
adc
mov
jg
std
sbb
push
cmc
repnz
or
pop
xchg
or
mov
pop
jbe
aam
inc
das
xchg
mov
pop
pop
lea
push
ds
lods
retf
or
cmp
dec
fld
rcl
xor
adc
xor
mov
lock
jge
(bad)
dec
jg
inc
sbb
mov
(bad)
fmul
or
or
cmp
cmps
or
mov
cwde
test
sub
inc
fs
adc
sub
jb
loopne
lods
sub
add
ret
sbb
lods
aas
dec
scas
or
pusha
and
cmp
push
not
lea
les
shr
imul
pop
jmp
xchg
xchg
(bad)
mov
mov
jb
int3
mov
shl
xchg
and
inc
pop
outs
test
fadd
add
movs
xor
xor
(bad)
leave
es
lock
dec
frstor
dec
int
mov
in
mov
adc
(bad)
push
(bad)
fmul
call
bound
add
push
outs
jne
test
sahf
iret
retf
mov
ret
jl
fld
mov
adc
jns
es
xchg
in
(bad)
enter
xor
cmp
sti
cwde
stos
fist
mov
inc
test
dec
add
xchg
mov
pop
adc
push
push
rcr
xor
and
arpl
popf
jl
or
pop
jbe
pusha
repnz
dec
xchg
jae
js
jl
xchg
leave
or
dec
mov
(bad)
cmp
(bad)
lea
(bad)
jecxz
fwait
xchg
cmp
push
pop
add
mov
adc
iret
sub
ins
xor
popf
or
in
int
shr
mov
jb
or
das
pop
push
mov
pop
leave
xor
or
vminpd
xchg
call
outs
movs
and
mov
mov
addr16
ins
sbb
lock
xor
xor
fprem
(bad)
mov
mov
dec
loop
mov
das
mov
js
repz
aad
mov
jo
pop
out
xchg
push
imul
or
retf
xor
mov
sbb
jge
cwde
sub
daa
adc
mov
pop
inc
gs
dec
lods
pop
jmp
out
mov
dec
push
add
inc
ss
cwde
dec
movs
pop
outs
mov
pop
pushf
fcom
test
leave
cmps
sahf
mov
in
mov
dec
mov
pop
cmps
pmaxub
add
mov
rcl
adc
mov
adc
fsubr
lods
rol
hlt
xchg
mov
jb
aam
inc
cdq
sti
cmp
ret
fmul
dec
data16
xchg
jmp
mov
jo
int3
sti
or
mov
fwait
add
lods
ja
cmp
mov
aas
aad
retf
inc
jmp
sub
in
outs
into
ss
clc
fwait
stos
sbb
daa
ror
(bad)
and
or
(bad)
clc
push
arpl
mov
std
scas
fs
aad
cmc
push
or
and
cmp
push
or
mov
nop
push
ja
adc
(bad)
out
es
leave
jae
inc
popa
dec
sti
jl
mov
mov
call
clc
pop
fidivr
sub
mov
mov
out
xchg
mov
into
jbe
inc
dec
mov
bound
jg
cld
sbb
inc
cmp
shl
test
data16
(bad)
cmp
paddw
nop
jg
xchg
cmp
jns
sub
nop
mov
push
push
or
pop
vandps
mov
lea
cdq
mov
and
shr
jb
loopne
xchg
xlat
lock
and
add
test
mov
aad
sbb
shl
jmp
jg
cmp
adc
xchg
or
gs
jecxz
fidivr
mov
cmps
mov
int
cmps
jmp
mov
mov
js
jl
adc
out
test
outs
adc
fcom
push
test
push
imul
out
mov
lods
cmp
push
mov
outs
test
mov
mov
mov
cmp
lds
test
sub
ret
fcmovb
shl
or
sbb
push
hlt
and
sbb
sub
rcr
inc
rol
sub
cmp
inc
sbb
inc
dec
mov
jbe
cwde
movs
jge
data16
jns
imul
push
or
outs
cs
in
ror
cwde
mov
loop
sbb
fidiv
and
lods
jl
test
push
mov
or
cld
imul
in
adc
jmp
adc
call
retf
xor
push
mov
push
and
fbstp
fcomp
ins
jnp
repnz
push
and
lods
dec
and
jnp
(bad)
dec
mov
dec
leave
mov
outs
mov
or
adc
adc
repz
push
ja
xchg
mov
ds
daa
jl
ins
hlt
movs
unpckhps
loopne
lea
sbb
scas
bound
ins
enter
xor
dec
inc
loope
jbe
sub
pop
sar
in
loope
push
std
das
or
mov
inc
jecxz
out
inc
aas
inc
sub
aas
cmps
xor
cmp
(bad)
mov
or
stos
fld
dec
popa
push
mov
in
dec
inc
out
in
sar
js
jge
mov
sub
or
out
cmp
jno
leave
dec
std
push
adc
mov
inc
sbb
arpl
stos
sub
inc
inc
adc
call
jecxz
sbb
push
xchg
xchg
sbb
in
je
aas
outs
mov
dec
dec
and
jmp
fidiv
fild
dec
xchg
(bad)
fldenv
arpl
pop
xor
dec
cmp
push
push
cli
jecxz
lods
mov
sub
rcr
xor
retf
ins
jmp
mov
mov
stos
shr
(bad)
out
out
in
adc
sahf
add
(bad)
je
call
jl
fsub
pop
jg
pop
cmp
ins
out
(bad)
push
into
repz
out
dec
mov
push
xor
test
push
shr
in
outs
dec
lock
jmp
aaa
in
icebp
jle
in
sub
or
fld
(bad)
repnz
jo
jnp
mov
jge
push
cld
sbb
mov
xchg
push
(bad)
adc
fst
mov
fld
mov
div
cdq
cdq
inc
jo
je
push
mov
fnstsw
xchg
dec
sub
std
out
and
mov
push
lahf
sahf
icebp
and
xchg
mov
in
or
xchg
(bad)
xor
sbb
dec
rcl
call
dec
aaa
sbb
enter
out
stos
ja
push
push
out
jnp
shr
(bad)
dec
retf
cmps
loopne
add
push
out
les
push
mov
inc
fwait
dec
je
fisubr
jne
dec
mov
lea
sub
push
into
fidivr
mov
mov
mov
sub
xchg
jo
les
in
push
and
sbb
jg
test
test
outs
mov
sbb
repz
in
aaa
sub
push
dec
and
arpl
into
jne
xor
adc
push
mov
cmp
js
mov
push
push
icebp
movs
jnp
das
outs
cmp
sbb
jmp
stos
dec
sbb
jl
pop
rcl
ins
(bad)
call
fdivr
mov
je
test
push
stos
addr16
adc
push
mov
in
iret
jns
sti
mov
xor
call
lds
and
test
icebp
int
loopne
test
imul
jecxz
mov
cmc
sar
dec
mov
and
fs
clc
pop
movs
data16
stc
inc
jo
jns
push
in
inc
ficom
xor
out
and
or
and
mov
mov
fsub
pop
cmp
call
push
ret
iret
adc
mov
leave
xchg
stos
out
xor
add
outs
cli
repnz
fidiv
xchg
pop
mov
pop
jmp
test
dec
xor
mov
and
mov
xor
fld
mov
add
mov
popa
mov
fsubp
pop
and
scas
test
iret
popa
and
or
cmp
add
xlat
mov
pop
popf
sub
(bad)
mov
sbb
mov
xchg
ins
aam
xchg
sbb
fild
push
push
mov
sub
stos
scas
into
pop
pop
fstp
pop
add
pop
aad
jle
mov
sbb
lahf
fwait
sub
xor
jecxz
pop
into
pop
jne
mov
clc
dec
call
(bad)
mov
dec
push
pop
dec
inc
fcom
mov
sbb
cmp
pop
dec
mov
cdq
pop
les
les
or
inc
dec
and
cs
add
pop
xchg
push
jns
test
js
mov
sti
loope
cmp
(bad)
jne
mov
inc
in
push
jns
shl
push
vmovdqa
outs
jl
jmp
das
cli
mov
inc
push
push
call
sbb
pop
retf
ficom
mov
push
pushf
mov
inc
test
mov
sbb
jns
fmulp
jg
adc
mov
scas
cmps
es
jno
adc
jle
xor
jbe
or
mov
ror
ret
mov
mov
imul
stos
pop
cmc
mov
aam
xchg
adc
je
call
out
or
sar
in
int3
call
push
push
fsubr
sub
mov
dec
dec
pushf
mov
iret
cmp
aad
in
mov
(bad)
mov
pop
retf
pop
enter
std
test
pop
push
sub
lock
xlat
(bad)
mov
ins
pusha
aas
sar
popa
push
xchg
clc
ret
jge
call
test
mov
xor
(bad)
jge
(bad)
test
xchg
push
xor
mov
push
jg
repz
mov
je
aam
ds
push
dec
pop
int3
mov
xor
cmp
cmp
test
aam
pop
inc
mov
add
mov
or
xchg
push
ret
add
sbb
pushf
jle
repnz
cmp
adc
out
gs
scas
cs
mov
or
pop
(bad)
stc
mov
mov
dec
push
data16
push
pop
out
lods
in
sub
loope
sub
ret
sub
imul
xor
fmul
fwait
mov
adc
add
sub
or
jp
hlt
int
das
and
dec
ret
int3
cdq
inc
jnp
or
les
sbb
aad
mov
retf
sbb
in
mov
adc
and
shr
sub
sbb
and
adc
or
push
jno
leave
mov
push
ins
mov
adc
sub
imul
ret
rcl
cmp
dec
push
dec
into
pop
add
inc
jns
rcr
call
out
(bad)
sti
stc
pop
ror
int3
loopne
or
push
jb
imul
leave
fdivr
add
inc
fcomi
jp
adc
cmp
sub
test
jb
ss
and
lea
mov
out
inc
(bad)
mov
jecxz
test
(bad)
or
mov
idiv
sub
mov
loope
mov
mov
mov
mov
jmp
daa
mov
mov
or
mov
xchg
repnz
ds
xchg
and
dec
pushf
fst
iret
aam
sbb
inc
dec
sub
mov
loop
adc
loopne
fadd
in
ss
test
ins
data16
or
outs
mov
or
inc
test
sbb
cmp
nop
cmp
mov
lahf
push
data16
push
pop
(bad)
pop
push
inc
push
inc
aaa
int
loopne
cmp
mov
in
push
xchg
inc
and
push
and
inc
out
scas
neg
into
push
jb
pop
out
inc
movs
out
xor
scas
sbb
mov
push
xor
ins
test
movs
mov
rol
jae
shl
sub
mov
mov
push
retf
imul
pop
mov
sub
add
xchg
int
push
(bad)
pop
pop
xchg
jne
sbb
(bad)
mov
xchg
cmps
jae
mov
adc
call
push
and
idiv
scas
pushf
lock
movs
xchg
and
mov
and
in
imul
stos
pusha
xchg
lods
iret
jo
and
dec
ret
push
out
jecxz
cmp
ja
out
div
add
push
sbb
pop
add
aam
dec
pop
sbb
dec
imul
xlat
mov
into
call
push
ret
aaa
std
and
sbb
adc
das
sbb
xchg
pop
imul
aaa
mov
retf
lea
push
adc
or
imul
ficomp
pop
fmulp
jne
rep
push
iret
inc
mov
xchg
aas
jmp
mov
clc
cmp
push
push
inc
xor
cmp
out
push
imul
sub
ret
pop
mov
retf
scas
mov
lds
mov
stc
out
jae
jb
mov
test
cmps
lds
jge
test
ret
xor
rcr
mov
inc
ret
xor
cmc
in
push
push
lock
into
dec
inc
inc
out
sub
mov
popa
cmps
stos
and
(bad)
sti
retf
hlt
fcom
inc
adc
imul
and
cmps
sbb
mov
(bad)
fisub
nop
in
aaa
mov
arpl
ror
retf
loope
pop
dec
push
sub
jmp
sub
sbb
inc
pop
fild
pop
mov
or
inc
(bad)
and
in
mov
retf
arpl
adc
pop
xchg
cs
sub
enter
jne
ret
jle
xor
or
add
iret
push
inc
mov
popa
gs
clc
pop
jnp
(bad)
xor
repnz
sahf
in
test
inc
mov
call
(bad)
push
mov
lods
or
cmp
mov
(bad)
nop
outs
mov
xchg
call
cli
pop
cmc
sti
and
push
in
cli
mov
jmp
enter
arpl
shl
repnz
nop
and
sbb
sbb
outs
fs
jae
fcomp
xor
hlt
mov
(bad)
cld
sbb
push
adc
inc
pop
dec
stos
hlt
dec
or
sti
adc
(bad)
js
mov
scas
(bad)
push
pop
jge
mov
mov
aam
retf
mov
sub
fild
add
mov
nop
sub
push
adc
xor
mov
movs
cmp
and
test
jns
sti
cmp
sub
loope
mov
sub
cwde
shl
add
(bad)
std
jns
add
aas
sub
xor
jae
pop
retf
lahf
das
ja
mov
ficom
mov
push
mov
sub
inc
jnp
and
js
ja
cdq
inc
and
add
jle
lds
ss
iret
fcomp
push
push
sub
and
sar
push
out
loope
inc
inc
jg
add
in
mov
jo
push
or
call
mov
xor
xchg
stos
and
sbb
mov
sbb
pop
repz
lock
pop
pusha
pop
and
sbb
and
push
(bad)
sub
test
or
adc
jp
dec
sahf
fidivr
inc
gs
fwait
lods
loop
inc
inc
dec
cmps
mov
xchg
and
call
pushf
mov
jle
in
in
daa
add
fs
dec
(bad)
pop
inc
push
adc
and
adc
imul
std
push
aaa
mov
add
pushf
pop
test
push
ds
jno
xchg
dec
and
ret
mov
mov
cmc
(bad)
lods
jo
and
push
jp
jo
test
push
ficom
gs
jo
test
nop
and
inc
mov
ffree
mov
inc
push
push
iret
jbe
lahf
(bad)
dec
sar
jb
jb
cmc
ss
jl
in
icebp
imul
jb
jo
cmp
and
pop
in
repnz
ins
sub
cmps
stos
outs
leave
cmp
in
xor
out
mov
ret
cmps
xchg
sbb
popa
outs
aaa
jae
jmp
in
add
out
test
lahf
jno
sub
outs
nop
in
jmp
xor
jmp
mov
sahf
add
pop
aas
arpl
mov
hlt
pop
jae
push
adc
pop
popf
jbe
push
push
arpl
outs
or
scas
or
int3
lock
add
stc
lea
mov
add
add
sbb
mov
and
add
lods
push
and
xlat
push
popf
sbb
adc
repnz
add
jbe
jecxz
inc
push
cmp
adc
cwde
pop
mov
rcr
pop
sub
cmp
mov
in
inc
sub
stos
cmps
test
popf
dec
or
xchg
out
sbb
xchg
and
inc
cmc
loop
fild
push
sub
jmp
or
hlt
sub
mov
dec
jecxz
adc
pop
adc
adc
pop
int3
lods
xor
mov
sti
ss
adc
sub
cmp
int
jg
sti
scas
sti
aas
nop
xor
push
mov
fisttp
mov
xlat
mov
movs
(bad)
mov
mov
mov
cwde
cmps
xor
and
iret
fisubr
push
shl
repnz
xchg
push
sub
imul
mov
sbb
add
add
dec
scas
xchg
mov
iret
lods
(bad)
cli
pop
pop
repz
adc
jp
movs
sbb
dec
sbb
sbb
iret
stos
sub
push
lods
mov
mov
adc
add
mov
jmp
call
es
jae
imul
shl
dec
(bad)
test
xchg
retf
int
mov
dec
es
or
pop
scas
push
nop
ins
cmps
mov
push
adc
repnz
in
(bad)
mov
ret
mov
fst
or
(bad)
and
cli
(bad)
aad
test
jae
xchg
lods
ins
ja
ficomp
or
ds
mov
mov
arpl
push
mov
ja
sar
aam
cmp
adc
mov
adc
imul
inc
jmp
loopne
ret
pushf
sub
push
out
ret
inc
dec
push
movs
(bad)
test
cmc
mov
das
jae
push
out
push
out
clc
or
inc
or
sub
mov
cli
in
cmp
adc
sbb
sub
inc
or
repz
das
mov
imul
fld
dec
pop
inc
xchg
or
mov
mov
cmp
data16
aad
push
cmp
in
xchg
jl
(bad)
fdivr
mov
(bad)
sbb
push
mov
lock
ret
das
jl
mov
and
xchg
pop
mov
xor
dec
cmp
mov
in
sbb
push
inc
stos
cmp
cmps
xor
and
and
mov
ror
jl
int3
inc
push
jnp
mov
(bad)
loop
dec
and
push
jle
jmp
shl
gs
add
sbb
xchg
out
and
inc
push
inc
loope
gs
shl
mov
xor
js
push
and
push
mov
imul
mov
inc
adc
jnp
cmc
mov
add
cmp
mov
mov
sbb
inc
out
mov
pop
stos
add
sbb
sbb
add
lea
fld
jo
xor
out
sbb
fistp
add
jp
adc
fldcw
lods
inc
stc
pop
mul
dec
xchg
stos
int3
popa
xlat
iret
pusha
aaa
fxch
add
lock
dec
pop
jns
mov
sbb
push
add
inc
hlt
mov
cmp
push
push
dec
inc
rcpps
ds
shufps
inc
int3
fsubrp
pop
fcomip
inc
add
mov
sbb
sti
les
mov
xor
lods
mov
pusha
pushf
outs
dec
movs
retf
in
sar
cdq
es
push
jmp
movs
jecxz
js
add
fwait
stos
jmp
outs
or
mov
adc
cmp
in
loop
add
js
mov
xchg
aas
into
clc
push
movs
push
or
or
jp
jo
and
mov
jno
dec
lds
popf
push
add
mov
sub
imul
inc
cld
add
fs
pop
out
dec
cdq
jmp
cmp
push
sbb
cmp
push
mov
push
test
fsub
leave
aas
inc
outs
push
gs
pop
leave
out
out
push
aas
inc
out
xor
sub
out
add
mov
push
cmp
stos
add
les
fnstcw
mov
sub
out
sub
repnz
adc
loope
cmp
mov
lods
into
jge
rol
jmp
jecxz
(bad)
cmps
outs
sub
mov
pop
jecxz
inc
into
dec
mov
mov
pushw
add
(bad)
push
inc
ror
adc
mov
fiadd
cmp
lods
and
repz
enter
mov
pop
xchg
std
and
or
je
jge
pop
cli
mov
mov
sub
cmc
sbb
sbb
add
xor
aas
outs
dec
mov
imul
fwait
sub
mov
ret
and
jecxz
push
xchg
scas
push
repnz
pop
(bad)
leave
jecxz
xchg
fsub
retf
adc
jmp
xchg
cmp
sbb
daa
add
aas
jmp
in
adc
and
dec
pop
sbb
xchg
cmp
jb
lods
imul
mov
nop
sub
shr
ss
int
jg
mov
lahf
and
fsubr
cmps
mov
inc
dec
xor
and
xchg
iret
mov
cmpxchg
mov
std
lods
or
movs
and
enter
cmp
mov
or
mov
cmps
shr
fwait
dec
cwde
xor
data16
push
inc
in
es
frstor
xor
mov
push
mov
sar
mov
fadd
icebp
pop
pop
popf
outs
mov
test
sti
mov
pop
dec
sbb
sbb
lds
jl
repz
xchg
cmp
int3
adc
mov
xor
pop
mov
inc
adc
outs
or
sbb
int
inc
or
add
jbe
inc
imul
sti
and
jnp
fbld
inc
je
inc
and
jmp
mov
dec
sahf
ins
push
sbb
mov
xor
ins
mov
popa
nop
sub
das
inc
test
das
pop
pop
sub
lods
push
int
xchg
shl
inc
movs
cli
in
popa
(bad)
repnz
xchg
in
das
and
push
fiadd
inc
add
sub
je
and
lods
pop
pop
out
cmovl
int
test
rol
pop
movs
mov
xchg
test
movs
sbb
xchg
sbb
mov
es
dec
out
mov
inc
adc
shl
loop
inc
adc
adc
sub
sub
nop
push
jmp
xor
lods
addr16
sbb
sar
mov
inc
call
ret
ja
push
adc
pop
lds
push
mul
clc
xchg
xor
mov
and
int3
or
cmp
cmp
jo
sub
xor
mov
mov
shl
icebp
jbe
sbb
out
jecxz
dec
repnz
sub
mov
mov
out
and
out
jmp
jne
popf
jns
ret
mov
pop
clc
sub
or
mov
(bad)
jp
(bad)
out
mov
jge
and
push
mov
into
sbb
cmc
dec
sub
lods
pop
or
in
inc
mov
fwait
sub
mov
aad
cli
iret
lea
xlat
retf
stos
jb
dec
inc
inc
add
mov
cmp
out
sbb
nop
mov
adc
jne
fs
xchg
cmp
das
test
in
add
cdq
shl
in
hlt
sbb
push
mov
sti
jnp
xchg
and
repnz
out
jecxz
int3
pop
repz
je
sub
clc
or
ds
js
pop
sti
repnz
mov
mov
pop
retf
mov
pop
pop
mov
xor
jmp
or
popa
mov
int3
out
ret
jge
push
mov
mov
cmp
pop
fdiv
(bad)
outs
jmp
jb
(bad)
push
scas
popf
jmp
test
and
dec
movs
sub
xor
cmp
shl
inc
and
test
add
hlt
xor
and
sub
jno
adc
stos
cli
sbb
xor
les
bound
ja
(bad)
js
sti
movs
jecxz
rcl
jp
mov
mov
jp
xchg
jne
xchg
xor
loop
xchg
test
xchg
aas
inc
sub
(bad)
xlat
pop
inc
jl
into
shr
ja
sub
mov
mov
test
mov
shr
mov
jl
dec
add
xchg
test
aad
test
(bad)
ss
mov
call
ret
and
cli
clc
dec
or
inc
lods
mov
dec
pop
ror
mov
xor
sbb
lds
test
cwde
aas
push
and
into
clc
sbb
mov
mov
xchg
xchg
sub
mov
xchg
mov
mov
iret
mov
xor
in
sub
jo
out
sahf
sbb
inc
dec
hlt
pop
call
(bad)
jl
jae
dec
xchg
pushf
add
data16
scas
push
fadd
(bad)
jle
or
sar
mov
nop
cld
fnstsw
aad
loop
sub
(bad)
mov
sbb
fnstsw
test
push
or
sub
push
into
loop
cld
ss
adc
in
sub
adc
push
cs
push
xchg
inc
in
jmp
scas
xchg
call
xchg
sbb
and
add
dec
arpl
(bad)
sbb
aaa
mov
in
cmc
mov
jne
psubq
jmp
mov
dec
sbb
pop
lahf
adc
sbb
mov
lds
xacquire
jne
dec
xor
add
lahf
pop
pop
jbe
sar
ins
lds
pop
cwde
jno
rol
xchg
mov
xor
cli
repnz
mov
movs
mov
jmp
add
ret
mov
add
xlat
push
jo
loopne
aas
into
mov
int3
cmp
in
sub
xor
push
fwait
inc
jo
jecxz
out
pop
push
test
inc
mov
les
fsubr
loopne
icebp
cmps
dec
mov
stc
imul
outs
fdiv
cmp
xchg
jle
popa
and
in
jl
mov
jmp
or
in
sbb
or
adc
(bad)
aam
call
jns
(bad)
retf
fyl2xp1
xchg
shl
pop
jle
dec
add
repnz
popf
dec
jno
mov
leave
pop
adc
xor
ja
sub
mov
cwde
mov
cmp
mov
mov
inc
adc
cmovle
add
push
cmps
jo
or
int
push
es
arpl
movs
test
fs
addr16
inc
and
mov
sub
add
arpl
ret
ss
cmp
mov
aad
out
add
jae
cli
sti
adc
mov
iret
ret
call
mov
push
rcl
sub
es
rcr
mov
mov
push
fstp
mul
mov
xor
movs
mov
sbb
sbb
add
mov
shl
hlt
push
pop
pop
jno
es
cmp
dec
mov
and
cwde
repnz
lods
ret
jge
sti
cmp
xchg
xchg
call
inc
mov
sahf
repnz
inc
xchg
pop
sbb
movs
add
mov
cmps
xchg
pop
(bad)
mov
pop
push
fidivr
push
or
mov
xor
sub
(bad)
sti
pop
pop
add
jge
pop
int3
out
add
jle
sbb
push
div
jle
cmp
push
fcom
fwait
pushf
add
jae
push
inc
sub
mov
retf
jl
cmp
fnstsw
rcr
packssdw
xchg
jl
int
in
push
call
add
retf
shr
xchg
je
ins
scas
pop
mov
mov
(bad)
test
push
mov
aaa
outs
(bad)
mov
lods
cmp
add
adc
xor
aad
xor
les
xchg
add
sbb
and
mov
data16
mov
jecxz
xchg
dec
fwait
mul
imul
jle
or
rcr
or
xchg
push
in
xchg
xchg
sahf
shl
mov
movs
xchg
scas
cmp
les
add
test
jge
addr16
jmp
(bad)
jno
mov
or
int3
mov
in
jns
inc
(bad)
cmp
rcl
cmps
or
push
sbb
aam
sub
sar
cmp
out
(bad)
cld
or
mov
mov
ja
pop
(bad)
add
adc
dec
mov
xrelease
or
add
imul
mov
sbb
inc
mov
mov
xchg
mov
(bad)
outs
mov
sti
lea
popf
ret
mov
mov
in
cs
dec
mov
dec
(bad)
dec
or
jns
adc
dec
push
push
sbb
mov
and
fwait
add
add
fcmove
popa
scas
fsubrp
cmp
imul
or
mov
lock
outs
mov
addr16
pop
in
mov
jne
(bad)
mov
data16
loopne
cmp
dec
ror
xchg
push
sbb
push
sub
enter
mov
jno
loop
dec
nop
pop
test
aam
push
test
sbb
daa
sbb
dec
fs
scas
mov
inc
mov
cli
dec
sbb
or
jl
pop
jns
and
push
call
repnz
ds
inc
imul
js
push
pop
pop
mov
pop
leave
xor
fadd
xchg
pop
push
pop
shr
fdiv
sbb
into
pusha
dec
cmp
fcomp
rol
ins
test
and
iret
mov
jmp
push
outs
in
dec
jns
sbb
xlat
out
in
sub
sti
jp
push
dec
sub
sub
popa
std
add
daa
mov
add
pop
imul
lods
or
sbb
add
mov
cmps
pop
test
cmc
adc
sbb
leave
jl
aad
imul
ja
mov
fwait
sbb
fsubr
jns
addr16
mov
into
and
fst
(bad)
ins
sar
xchg
xchg
or
push
jecxz
jno
xchg
fsub
nop
stc
mov
xor
aad
mov
dec
push
in
inc
push
stos
shr
call
mov
inc
push
mov
cld
sbb
(bad)
push
dec
jnp
test
hlt
add
sbb
add
xchg
jo
and
sbb
jns
pop
xor
cmps
retf
mov
pop
mov
fnstsw
ins
repz
xchg
(bad)
pop
jae
cwde
mov
movs
jbe
sub
daa
sti
sub
cmp
mul
push
leave
sbb
lea
add
push
in
sbb
out
pop
ficomp
push
sub
test
cld
cli
std
inc
xor
mov
mov
outs
in
(bad)
cmp
outs
(bad)
(bad)
mov
in
pop
adc
push
mov
lods
je
push
(bad)
jb
sub
das
sbb
das
sub
call
or
cli
mov
sub
push
enter
test
mov
or
xor
aad
jns
xchg
mov
in
imul
ins
inc
jecxz
jno
je
scas
ret
ffreep
mov
mov
mov
nop
std
call
mov
pop
mov
xor
lds
cmps
inc
(bad)
aaa
(bad)
nop
test
sbb
and
sar
push
mov
cld
fstp
push
loop
rol
data16
xor
add
adc
and
inc
rcr
adc
lock
or
push
push
xchg
adc
jg
popf
addr16
jmp
and
dec
adc
xchg
sar
inc
and
aas
cmp
xchg
inc
sbb
mov
and
mov
or
mov
xor
sub
in
pushf
imul
sub
in
and
repz
rol
and
jno
jne
rcl
xchg
clc
sbb
icebp
pop
retf
aas
adc
jp
add
pushf
loopne
sbb
pop
xchg
xchg
out
mov
fwait
pushf
pop
cs
push
adc
adc
or
nop
ss
or
ret
out
xchg
pop
jnp
add
add
call
dec
fisttp
mov
jb
mov
jbe
xor
pop
fs
cmp
push
fwait
or
adc
mov
mov
jmp
lods
sbb
iret
ror
aas
pop
out
push
push
mov
push
movs
hlt
mov
repnz
adc
dec
inc
std
xlat
or
xor
push
xor
stos
es
or
cld
xchg
mov
and
rcl
dec
ds
pop
xlat
outs
hlt
adc
jl
pop
lods
or
clc
cmc
fmul
jmp
pop
cmp
sub
add
xor
xchg
iret
pushf
push
xchg
adc
ja
mov
push
and
jle
and
ret
pop
rcl
inc
or
or
lock
inc
push
ss
sub
icebp
loope
cwde
in
pop
rcl
rcr
aad
ja
push
retf
jge
mov
fbld
lahf
fwait
cmps
sub
jo
mov
lahf
test
add
mov
test
scas
mov
xlat
js
sbb
enter
sub
xchg
in
jns
mov
les
mov
in
ins
pop
lods
lods
bound
repz
int3
jbe
inc
dec
push
mov
and
aaa
inc
xchg
adc
jmp
in
mov
test
xor
fild
aaa
ffree
imul
and
or
sbb
dec
pop
(bad)
add
ficomp
mov
std
(bad)
aad
stos
or
mov
push
add
fdivr
lock
adc
xchg
jno
sahf
jb
inc
and
mov
mov
shr
cmp
sub
ret
imul
jmp
int
and
call
test
jno
div
sar
inc
out
data16
addr16
cmp
pop
dec
jmp
int3
call
mov
cmc
hlt
sbb
inc
push
js
popa
pushf
mov
fimul
retf
mov
mov
mov
ds
retf
jle
js
pop
xchg
push
add
(bad)
lods
ficom
retf
adc
fbld
fiadd
mov
(bad)
stos
push
cli
pop
out
ins
repnz
xchg
xor
outs
push
inc
or
cmc
lahf
mov
(bad)
repnz
test
cmp
mov
sbb
push
dec
xor
fwait
or
cmp
shl
lods
jne
(bad)
out
fisttp
xchg
xchg
sub
push
and
stos
cli
clc
movs
sbb
push
enter
daa
mov
mov
fldl2t
pop
cli
aad
cdq
mov
lea
cmp
and
fwait
mov
movs
cmp
pop
out
sbb
mov
push
fiadd
imul
pop
sub
jnp
inc
aam
adc
bound
pop
add
jb
inc
and
and
mov
sti
pop
les
push
push
(bad)
sahf
test
add
xor
cmps
mov
test
(bad)
mov
sbb
mov
ret
lock
xchg
xor
dec
mov
sbb
dec
(bad)
adc
push
das
dec
jle
fild
pushf
dec
xchg
es
xchg
stos
(bad)
sbb
pop
imul
cdq
fwait
inc
pop
(bad)
sub
mov
mov
sbb
je
xor
outs
cdq
int3
adc
movs
inc
mov
mov
(bad)
ret
retf
out
jle
(bad)
jmp
xor
mov
add
jno
fisttp
sub
and
(bad)
xchg
call
loop
or
test
call
mov
retf
push
pusha
or
xchg
mov
mov
jb
mov
and
imul
dec
mov
ja
push
cmc
aaa
push
push
push
jecxz
dec
in
dec
pop
test
mov
sbb
push
jp
int
mov
clc
lods
sub
stos
loopne
out
mov
call
test
mov
hlt
ds
jns
add
mov
out
dec
hlt
mov
fisub
test
pusha
mov
scas
lea
dec
inc
(bad)
in
add
pusha
mov
xchg
std
xchg
(bad)
pushf
mov
popa
mov
sub
add
in
es
in
popf
xlat
xchg
pop
xchg
fnstcw
mov
(bad)
jbe
fdiv
mov
jns
cmp
push
lea
pop
bound
lock
adc
mov
jg
iret
iret
inc
out
cmp
lods
xor
call
jl
sub
sub
daa
push
icebp
dec
bnd
ins
pop
pop
test
or
xor
xchg
popa
sbb
into
inc
cmp
xchg
jecxz
clc
pop
es
mov
lods
inc
test
inc
cli
jno
fnsave
aas
loop
out
sub
xor
loop
add
jmp
ins
js
cwde
inc
and
mov
cs
push
mov
xchg
shr
jmp
sbb
hlt
adc
aaa
push
ds
fcomp
(bad)
aam
dec
sbb
or
and
test
mov
lea
ins
push
pop
mov
(bad)
xor
std
jae
pop
jne
pop
or
sub
test
pop
mov
inc
clc
cmp
jnp
xor
retf
push
push
add
outs
stc
xchg
aas
(bad)
push
aad
jg
in
stc
xchg
test
sahf
shl
dec
mov
jge
and
sbb
cdq
mov
jle
push
xor
cdq
inc
sbb
xchg
std
mov
neg
sbb
retf
lahf
adc
ret
rol
(bad)
aaa
push
mov
push
xor
inc
and
mov
or
mov
pushf
push
mov
add
ins
sub
add
int
sbb
cmp
inc
adc
dec
inc
lea
cdq
adc
loope
sti
jp
dec
repz
and
cmps
xor
xor
mov
mov
mov
out
sub
sub
mov
inc
sahf
dec
fld
pop
sbb
xchg
jecxz
add
adc
loopne
or
mov
cli
sbb
push
inc
inc
sub
das
or
daa
dec
fnstenv
jmp
outs
les
in
inc
and
sub
imul
inc
mov
push
xchg
mov
out
push
mov
push
retf
and
call
or
cmp
hlt
ins
shl
mov
popa
sbb
sbb
pop
push
mov
adc
jns
mov
xor
ror
dec
add
mov
fld
mov
dec
call
out
mov
sbb
cmp
pop
cmp
push
leave
out
int3
mov
sub
pushf
fdiv
retf
xor
sar
add
inc
ret
and
pusha
mov
xchg
mov
push
aad
div
fiadd
(bad)
pop
lock
out
mov
rcr
xlat
lds
and
dec
inc
xchg
mov
ja
sub
scas
push
(bad)
inc
vmread
repz
and
xchg
xor
stos
mov
arpl
pop
std
push
fidivr
mov
and
mov
das
xchg
leave
pusha
imul
xchg
jo
push
mov
adc
xchg
or
mov
jmp
cmp
int
repz
sub
enter
mov
cmp
in
push
inc
out
adc
jge
outs
les
and
sub
inc
mov
inc
retf
jno
inc
add
add
sub
in
enter
xchg
mov
mov
cmp
push
inc
inc
in
add
xchg
cmps
iret
cli
push
and
dec
sahf
pop
nop
ret
cmp
inc
sub
push
push
in
test
push
lods
cmps
mov
jo
inc
std
icebp
or
and
rcr
outs
aas
mov
xchg
mov
and
outs
cdq
rcl
xor
mov
mov
aad
ds
push
pop
xchg
imul
jle
aaa
imul
mov
lea
retf
push
xor
(bad)
adc
test
jle
cdq
jecxz
adc
mul
js
cmp
out
jl
push
loop
mov
cmp
cmp
sar
sbb
xchg
retf
mov
test
sbb
cmp
xchg
dec
push
sbb
inc
pop
mov
cdq
push
push
cld
adc
inc
adc
mov
das
jnp
adc
pop
pop
not
int3
daa
out
div
jge
xor
inc
jmp
ss
add
jmp
xchg
jecxz
mov
adc
arpl
cmp
xchg
cmp
adc
pop
stc
jns
outs
out
pop
imul
retf
dec
jno
fstp
push
mov
mov
scas
imul
jo
adc
adc
mov
jl
sbb
jne
adc
loopne
lock
sub
inc
retf
inc
mov
xor
fadd
xchg
stos
jecxz
jae
int3
xchg
cdq
(bad)
xor
(bad)
xchg
jge
and
data16
push
ins
sub
push
das
in
pop
pop
cs
push
repnz
repz
lahf
nop
dec
push
xchg
fsub
(bad)
iret
cmp
xchg
push
or
in
test
or
mov
xor
test
jmp
mov
inc
jmp
mov
fdivr
and
scas
std
push
in
fcmovnbe
xchg
cmp
fwait
and
xor
cdq
ss
stos
xor
enter
mov
enter
xchg
mov
imul
pop
ror
xlat
stos
xor
add
xor
cmp
mov
push
pop
pop
mov
cmp
inc
xlat
and
pop
xor
mov
cmp
movs
fcom
jge
(bad)
ins
popa
or
loope
inc
fs
jnp
test
ss
inc
sar
shl
enter
mov
xchg
or
jg
mov
cmps
mov
dec
fidivr
clc
pop
xchg
retf
mov
inc
ds
in
outs
mov
push
bound
adc
retf
fdivr
cs
mov
cmp
xlat
jle
inc
pushf
cmp
mov
add
push
xchg
cmps
push
iret
ret
adc
mov
bound
add
pushf
sub
jle
sub
dec
fsubr
dec
cmps
mov
in
cmp
jmp
sub
add
loopne
(bad)
fadd
mov
(bad)
jmp
fwait
adc
fild
sbb
cmp
or
mov
sub
int
mov
lods
jnp
test
cli
mov
jne
mov
pop
sbb
xchg
and
retf
jno
or
stos
adc
int
stos
mov
pop
test
xchg
xor
adc
adc
das
or
mov
aaa
shr
pop
inc
inc
popa
jns
imul
inc
mov
fstp
int
pop
sbb
jmp
bound
jb
mov
xchg
mov
or
in
cmp
ss
or
mov
cmps
jnp
mov
mov
xor
push
xchg
in
loope
fsub
pop
inc
jno
push
xchg
hlt
and
pop
ror
jp
mov
sub
das
loopne
and
and
cmp
mov
mov
cmp
int
sahf
mov
inc
enter
xor
pusha
mov
fadd
push
fwait
stos
call
mov
stc
adc
shl
movs
jl
jecxz
lods
aaa
mov
pop
xchg
dec
and
pop
cli
aam
ds
ins
out
int3
pop
and
pop
cmp
xchg
inc
pop
xlat
stos
adc
jns
es
xor
dec
sub
aad
xchg
inc
pop
aad
icebp
xor
mov
push
pushf
mov
lahf
(bad)
pop
(bad)
push
push
jmp
or
stc
enter
pop
out
les
xchg
jne
je
sbb
inc
popf
jmp
cmp
xlat
sbb
jp
in
inc
cmps
cmc
xchg
push
in
lock
data16
jno
jnp
enter
leave
sub
in
pop
daa
js
movs
mov
inc
pop
imul
push
shr
push
stos
push
sahf
lgs
push
test
in
loop
shr
pop
js
stc
repz
jecxz
mov
rol
pop
mov
addr16
pusha
cmc
out
(bad)
push
stc
mov
push
xchg
mov
dec
in
aad
add
adc
repnz
mov
jb
or
push
iret
cmp
test
push
arpl
shr
push
mov
cwde
sub
cmp
clc
xchg
outs
repnz
imul
clc
mov
aas
or
fbld
add
mov
xchg
inc
or
pop
push
push
out
daa
sub
cs
pop
or
daa
mov
dec
sbb
mov
or
(bad)
jge
inc
imul
mov
pop
push
jmp
fimul
sub
mov
js
cmp
and
addr16
shl
mov
out
xchg
(bad)
popf
adc
popf
xchg
fisttp
stos
movs
je
shl
and
fild
into
out
stos
jmp
fisttp
xchg
jp
es
xchg
(bad)
and
or
add
adc
mov
adc
mov
add
add
in
call
sbb
pop
mov
jmp
inc
sar
(bad)
aam
inc
pop
(bad)
lds
lahf
(bad)
adc
popf
push
and
cmp
mov
xchg
xchg
push
loop
mov
bound
ja
inc
ins
inc
imul
fldcw
jge
and
repnz
shl
int3
ficomp
scas
ret
pop
test
xchg
and
mov
push
adc
imul
call
ficom
and
loop
daa
ss
mov
push
adc
sbb
inc
jecxz
mov
cmps
mov
fsubr
fisub
fnsave
dec
data16
lock
pop
push
cwde
lea
mov
ins
jnp
mov
fst
lods
scas
sub
add
mov
fmul
sbb
cli
test
scas
jg
out
add
mov
adc
xchg
jae
test
inc
cmps
push
dec
jl
sub
adc
jl
gs
inc
pop
cmp
mul
or
xchg
push
mov
xchg
cmp
push
iret
xchg
daa
std
xchg
inc
fild
es
xor
inc
popa
sbb
call
movs
fwait
xor
jo
push
pop
mov
scas
in
call
scas
pusha
and
lds
push
push
xchg
sbb
push
(bad)
stos
cld
or
leave
in
and
je
adc
jno
mov
push
inc
sbb
push
dec
inc
push
or
pop
cwde
mov
dec
xchg
mov
and
test
cmp
int3
cmps
xchg
hlt
ret
hlt
push
adc
popf
mov
jmp
fiadd
adc
retf
cmp
sahf
js
pushf
mov
aam
pusha
pop
add
(bad)
mov
popf
dec
or
fmul
shl
mov
mov
pop
add
pop
jno
lods
sub
push
mov
shl
xlat
xchg
mov
mov
(bad)
int
idiv
push
mov
arpl
(bad)
cld
cwde
jnp
mov
jne
cmp
mov
sbb
add
test
jnp
sbb
in
clc
xor
mov
jbe
mov
xor
pushf
or
les
movs
call
fldcw
mov
jmp
out
in
or
dec
mov
dec
ins
cmp
mov
mov
(bad)
(bad)
adc
adc
adc
icebp
outs
retf
in
inc
cmp
or
dec
std
push
mov
jne
pop
jp
sbb
addr16
inc
sub
les
je
shl
outs
cmp
sbb
mov
cmp
jge
mov
test
retf
sub
retf
sbb
les
mov
popa
shl
ret
jp
xchg
jg
xor
xchg
pop
mov
push
add
add
popa
dec
pop
test
cmps
inc
pop
leave
imul
adc
aas
sbb
sbb
sub
adc
fidiv
mov
adc
push
push
sbb
xchg
adc
test
or
adc
imul
mov
pop
jp
push
loopne
sub
bound
lds
xor
add
mov
mov
daa
mov
mov
and
and
push
frstpm(287
idiv
jae
test
lea
sahf
out
stos
add
ins
int
pop
sub
pushf
movs
add
bound
outs
xchg
stos
mov
fcomp
nop
cmp
(bad)
jl
dec
push
outs
mov
jmp
scas
fwait
cmps
and
aas
cdq
dec
das
mov
pop
push
inc
ins
retf
in
(bad)
xlat
lods
imul
add
lahf
test
inc
pop
test
shl
mov
imul
mov
xor
rcr
dec
dec
or
inc
mov
retf
retf
pop
jo
mov
ret
sub
inc
lea
pop
pop
and
or
pop
jae
loop
dec
popf
push
and
cmc
inc
add
(bad)
repz
or
and
xor
mov
xlat
movq
ss
mov
inc
push
xlat
stc
jbe
(bad)
ss
(bad)
sub
rol
mov
and
adc
pop
mov
add
ror
fnstsw
mov
jl
lahf
jo
push
sub
pop
mov
call
push
lods
imul
or
mov
(bad)
jle
and
fwait
mov
data16
mov
loopne
xchg
(bad)
add
and
jns
daa
mov
mov
dec
inc
enter
sbb
push
dec
adc
adc
mov
and
jmp
mov
pop
repz
inc
fmul
daa
(bad)
imul
xor
push
mov
inc
lods
icebp
push
mov
test
xlat
rcl
fidiv
mov
jne
inc
scas
repz
pop
adc
mov
shl
inc
iret
add
add
or
cmp
xchg
enter
sbb
nop
(bad)
sub
(bad)
cmp
rol
push
not
es
addr16
imul
loope
sub
pusha
sbb
dec
clc
ss
jp
aad
dec
in
and
sbb
cmp
lods
jg
xor
scas
inc
cmps
and
aad
call
xor
call
xor
jmp
gs
fist
cld
adc
xchg
mov
adc
inc
sbb
gs
ret
inc
out
mov
mov
xor
xchg
adc
loop
jl
stc
pusha
mov
rol
ins
jge
into
and
mov
xlat
mov
loopne
xchg
stos
sbb
pop
jle
add
std
fidivr
call
into
bound
jbe
push
and
mov
iret
jle
sub
test
push
adc
xchg
jnp
loopne
ins
xchg
ja
cmp
(bad)
fmul
mov
popf
imul
mov
jmp
test
mov
bound
ret
jecxz
inc
ror
adc
lahf
fimul
ficomp
sbb
dec
into
xor
xchg
icebp
sub
(bad)
ja
mov
in
int
xor
cs
jg
and
jo
(bad)
push
leave
movs
cmp
retf
mov
inc
(bad)
in
clc
cdq
dec
inc
test
jmp
adc
in
rcr
jb
gs
jns
imul
or
cmp
or
das
(bad)
fcomp
cs
ins
add
sbb
or
(bad)
int
jne
repnz
das
fidivr
push
pop
out
hlt
out
push
sub
enter
call
and
mul
loopne
imul
sysenter
mov
cwde
sub
shl
sub
daa
shl
or
mov
popa
rol
xchg
pop
test
arpl
sahf
pop
xchg
mov
mov
add
dec
cli
aas
lods
jmp
cld
mov
mov
std
add
inc
xor
retf
mov
rcr
push
add
je
dec
iret
stos
cmp
(bad)
sub
daa
dec
mov
adc
fisttp
mov
(bad)
leave
and
enter
mov
xor
jo
das
je
inc
xchg
cmps
pop
or
add
pop
add
int
popf
in
aas
cmps
jo
xchg
cmp
mov
je
jl
or
imul
daa
xlat
push
(bad)
adc
pushf
add
into
mov
sbb
movs
push
ja
jmp
das
add
and
ret
mov
fmul
sub
jmp
cmc
push
xchg
mov
js
push
inc
mov
push
xchg
sbb
retf
fst
cs
mov
mov
inc
cmp
cmp
js
pop
xchg
sbb
aam
fcom
mov
in
sub
mov
call
loopne
mov
test
ins
cmp
test
push
mov
(bad)
xchg
lock
xchg
lock
shr
pop
mov
mov
das
xchg
mov
or
add
int
repnz
jg
push
sub
sub
sbb
or
retf
xchg
out
push
add
push
ss
cmp
stos
dec
lds
stos
mov
stos
mov
pop
sti
rcr
add
xor
out
fs
sub
mov
cmps
bound
cmp
jl
out
jle
and
mov
add
adc
sbb
jmp
sbb
aas
aaa
out
hlt
mov
lds
cmp
lahf
(bad)
jmp
ret
push
mov
lds
mov
cmp
ret
stc
lock
mov
dec
rcl
outs
push
jge
dec
cmp
or
icebp
rol
sbb
or
rol
mov
test
js
movs
or
(bad)
std
cs
mov
cmp
inc
nop
arpl
mov
ret
jge
call
(bad)
ins
in
jb
mov
sbb
daa
push
sbb
ds
das
push
sub
ja
jmp
arpl
inc
sbb
clc
push
mov
push
hlt
jge
lahf
xor
jl
sub
jb
not
add
cmc
(bad)
aam
lds
and
push
ud2
scas
je
sbb
rol
push
fcomip
adc
outs
pop
sbb
sti
pop
mov
call
int
pop
and
loopne
jmp
out
lods
loop
(bad)
data16
cld
sbb
ins
addr16
jge
and
push
enter
fisttp
mov
add
adc
mov
or
push
test
or
inc
fadd
mov
(bad)
xor
adc
ds
sbb
inc
cwde
cmps
sbb
jmp
xchg
sbb
sti
retf
cld
retf
mov
and
bound
inc
vrsqrtps
add
and
inc
inc
xor
xchg
imul
push
es
pop
cdq
lods
es
(bad)
mov
std
push
popf
fidiv
add
add
ss
cmc
imul
ret
mov
inc
mov
cmc
out
daa
test
movhlps
add
jge
stos
(bad)
fisttp
pop
dec
inc
shl
push
jns
fist
fcomp
ficom
out
jae
cmc
jecxz
or
mov
int3
pop
pop
sub
aad
ds
dec
aad
aad
push
xor
repnz
and
jp
and
(bad)
daa
sbb
ins
(bad)
mov
(bad)
jne
mov
cmp
jecxz
inc
stc
sti
nop
mov
pop
jb
fimul
rcr
mov
jmp
outs
push
cmp
xor
or
loope
mov
inc
ss
and
je
js
outs
sub
sti
retf
(bad)
jbe
mov
out
fdiv
sbb
pop
cmp
dec
(bad)
mov
adc
sbb
bound
jmp
in
add
or
test
fiadd
icebp
repnz
pop
inc
add
sub
cdq
into
fstp
inc
outs
rcl
add
pop
into
jnp
loopne
xchg
es
test
jge
pop
inc
jmp
sbb
jmp
inc
outs
inc
dec
scas
jns
pop
pop
ret
xchg
lahf
arpl
sub
adc
xchg
(bad)
sbb
stc
shl
push
(bad)
sbb
out
and
pop
pop
add
arpl
xchg
cmps
call
dec
xor
inc
js
test
nop
mov
ja
ins
or
dec
mov
in
test
mov
test
outs
cmp
or
cmp
loop
iret
fldenv
mov
and
push
lahf
or
xor
outs
sbb
and
xchg
add
xchg
sbb
ror
data16
rol
sub
push
jp
je
jmp
or
pop
cmp
sub
xchg
icebp
push
nop
pop
out
or
lea
mov
push
mov
push
xor
cmp
mov
ja
dec
or
jbe
test
sub
popf
mov
stos
mov
jne
pop
popf
test
mov
inc
pushf
fldenv
adc
scas
cwde
sti
xchg
mov
xchg
aad
rcl
fs
ret
cmp
xchg
int
sti
bound
adc
mov
scas
int
daa
add
jmp
and
mov
imul
cmp
push
out
repz
(bad)
mov
scas
adc
cmps
jns
cli
xchg
scas
inc
cmp
(bad)
cmp
and
sahf
int3
push
aas
push
dec
cmps
jecxz
xor
jnp
sub
mov
mov
mov
mov
lods
pop
(bad)
in
push
xor
leave
add
dec
pushf
mov
lahf
(bad)
ja
aam
fdiv
sbb
xchg
pop
add
jp
(bad)
jecxz
(bad)
aaa
jns
popa
aaa
push
mov
dec
mov
xor
shl
outs
mov
sub
dec
mov
jl
sub
enter
cmc
mov
(bad)
pop
ret
shl
(bad)
xor
imul
pop
mov
pop
xchg
push
fwait
ins
xor
xchg
retf
retf
jg
imul
jbe
mov
xor
and
or
ja
mov
jp
dec
nop
fwait
inc
jmp
push
(bad)
out
outs
in
xchg
add
mov
push
scas
loop
retf
or
loope
lock
or
mov
sti
and
lods
dec
shl
add
ret
mov
mov
adc
ja
ds
sahf
jl
push
pop
int
jb
xchg
scas
pop
call
mov
push
xor
rol
sbb
sbb
cmp
imul
in
adc
(bad)
and
adc
add
fwait
inc
mov
jp
cmc
xor
and
adc
stos
dec
xor
and
gs
test
mov
repz
fs
call
adc
xor
cmp
je
ret
jbe
add
jp
ss
stos
jg
out
or
sub
ins
push
sub
xchg
xor
or
mov
loope
jecxz
sbb
mov
lods
loope
inc
xor
cmp
sbb
and
ja
stc
fwait
stos
cli
add
or
je
loopne
lmsw
in
fist
add
or
and
jge
xchg
int
xor
popf
frstor
js
and
mov
cdq
leave
mov
jp
outs
repnz
or
push
clc
cli
inc
enter
repnz
jg
lods
aas
xor
enter
xlat
inc
sbb
fmul
sbb
or
adc
mov
and
add
retf
fwait
(bad)
nop
add
lea
push
sbb
cdq
dec
pop
xchg
sbb
cmp
in
(bad)
lock
or
or
nop
sbb
into
into
jg
mov
aad
xor
enter
dec
adc
xchg
nop
adc
lahf
ins
mov
jne
shl
pop
pmulhuw
push
mov
add
add
cmp
cmps
cmp
cmps
sub
sbb
repnz
dec
paddq
scas
data16
dec
or
push
test
dec
jp
repnz
jmp
fild
loopne
not
mov
mov
xor
xor
push
data16
(bad)
and
fwait
sbb
mov
out
and
aam
idiv
mov
ja
push
cwde
inc
or
stos
pop
push
pop
add
movs
inc
xor
mov
pushf
jmp
gs
push
imul
(bad)
mov
cmp
xor
xchg
adc
inc
xchg
fistp
push
jl
mov
gs
pop
popa
je
out
loope
ret
sub
das
mov
imul
mov
xor
xchg
xor
or
repnz
cmp
mov
lds
sub
test
outs
das
pop
mov
addr16
inc
dec
xchg
dec
pop
pop
inc
imul
rcr
xchg
xor
jne
(bad)
(bad)
cmp
mov
movs
popa
jbe
sbb
das
mov
xor
inc
movs
stos
inc
sahf
xchg
push
sub
push
pushf
mov
mov
(bad)
xchg
push
pop
xor
cmc
test
or
movs
stos
rol
jmp
mov
and
cdq
ror
sub
dec
std
sbb
leave
dec
int
mov
leave
xchg
mov
jmp
push
xor
stos
fnstsw
xchg
mov
cmps
or
inc
jns
adc
mov
pop
push
xor
xor
pop
and
jp
and
add
ss
sub
leave
jmp
dec
test
mov
cmp
xchg
sti
mov
sahf
jne
and
repnz
push
shl
dec
or
jno
hlt
xchg
jmp
(bad)
cmp
outs
loop
scas
pop
cs
ss
movs
cmp
cmp
test
xchg
sahf
aas
add
call
or
jecxz
pop
lds
mov
jmp
call
jbe
xor
cmp
pop
dec
nop
jl
or
sbb
jp
leave
sbb
sbb
cs
cmp
aam
mov
mov
out
mov
ss
jne
dec
aas
test
stc
ins
add
das
mov
(bad)
dec
inc
xchg
xchg
imul
cmp
sub
sbb
pop
ret
mov
mov
int3
cmp
popa
adc
ins
push
out
mov
jmp
dec
sbb
add
jns
pop
adc
icebp
je
mov
inc
test
lds
lods
dec
xchg
fild
bnd
stos
mov
aaa
push
xor
push
movs
adc
stos
sub
inc
in
jne
shl
cmps
cwde
(bad)
cld
loopne
nop
pop
pusha
mov
stos
ja
cmp
jge
inc
jnp
lahf
inc
sub
fs
das
jmp
popa
mov
div
and
cmp
mov
(bad)
call
aad
and
ret
pusha
xchg
test
pop
mov
pop
xchg
jmp
mov
jne
dec
pop
sub
or
mov
test
out
mov
fadd
sub
push
repz
in
rcr
or
push
cmps
lds
jmp
icebp
sub
cmovo
pop
(bad)
int3
sub
jle
jns
outs
rol
cwde
sbb
sahf
mov
mov
pop
pop
push
popf
stc
cmp
inc
test
(bad)
imul
ret
mov
jnp
mov
xor
jg
mov
push
neg
jo
xor
sub
movs
sbb
in
mov
test
dec
push
mov
stc
or
dec
dec
and
mov
pop
pop
lock
stos
dec
jmp
jecxz
jg
fild
aas
mov
neg
cld
retf
lahf
cmp
sbb
and
pop
cmp
push
add
dec
dec
fisub
(bad)
fnstcw
cmc
jg
adc
loope
aam
out
sub
mov
out
jne
loopne
add
(bad)
leave
xor
adc
mov
push
jbe
mov
out
cmp
cmp
xor
loop
pop
inc
cmc
pop
add
xchg
aam
xlat
call
pop
cli
xor
xor
sbb
sub
cmp
mov
cmp
lods
or
mov
cmps
(bad)
mov
inc
lds
push
call
repnz
cdq
stos
fisubr
jnp
lahf
push
fistp
cmp
mov
iret
sub
sub
movs
sbb
fdivr
sbb
ss
push
pop
jbe
push
(bad)
into
add
sub
in
sub
push
sar
imul
pop
cdq
mov
out
jle
cs
mov
ja
cmp
push
sbb
pop
mov
sbb
sahf
dec
jecxz
and
mov
jmp
jg
imul
nop
xchg
sbb
pop
jno
ja
es
dec
xor
jecxz
mov
out
rcl
les
mov
cdq
jno
xchg
mov
jae
push
(bad)
xlat
jmp
jl
mov
ins
jno
pop
fwait
stos
add
ret
adc
cwde
js
xchg
(bad)
out
outs
movs
std
mov
loop
dec
sbb
jmp
sahf
clc
lods
add
cmp
stc
lods
adc
out
xor
adc
retf
sub
add
leave
dec
push
fadd
aam
jo
xor
cmp
loope
lea
cmp
jg
jl
stc
dec
int
(bad)
mov
out
aaa
cmp
outs
movs
shl
sub
xor
sbb
repnz
dec
push
mov
mov
mov
jne
out
stos
(bad)
jae
dec
dec
pop
cdq
lock
imul
pushf
xchg
fild
push
ds
sar
dec
jle
ror
aad
add
lods
xchg
pop
aas
mov
mov
nop
nop
retf
stc
nop
stos
shl
in
or
int
mov
fdivr
add
sbb
sub
loopne
sbb
std
(bad)
adc
retf
mov
nop
mov
cli
mov
mov
cmp
(bad)
xor
mov
or
fdivr
fcmove
fisubr
mov
sbb
push
pop
fmul
ret
dec
cmp
shr
enter
call
out
icebp
outs
scas
cwde
mov
sbb
adc
add
outs
xor
rcr
push
adc
dec
xor
mov
mov
and
hlt
adc
mov
add
pop
jnp
push
ret
xor
mov
shl
leave
arpl
xor
xor
mov
in
xchg
push
pop
mov
pop
dec
sahf
sub
xchg
loopne
push
ds
mov
sbb
fdivr
pop
mov
shr
jmp
mov
mov
cdq
data16
push
pop
mov
pop
aad
sbb
in
dec
fbld
ss
iret
cdq
mov
add
push
pop
iret
test
mov
add
cld
mov
xchg
inc
scas
xor
fld
inc
ins
adc
xor
je
pop
test
or
push
adc
imul
dec
mov
adc
sbb
pop
out
jecxz
das
push
repz
dec
add
push
call
loope
in
call
das
mov
dec
jmp
dec
dec
mov
nop
push
mov
leave
push
cmps
mov
xchg
imul
movs
xor
ds
cmps
mov
sub
pop
lea
mov
mov
xchg
mov
add
sub
imul
aaa
iret
into
pop
lock
hlt
outs
in
sbb
frstor
xor
mov
pop
xor
mov
fcmove
rcr
sub
test
sub
and
scas
loop
mov
mov
add
inc
dec
ins
lds
stos
push
pop
mov
xchg
nop
xchg
es
mov
rcl
xor
pop
mov
pop
sar
add
xor
or
mov
(bad)
jns
or
fcomi
mov
dec
rol
and
jo
xlat
cmp
add
mov
div
fdiv
js
mov
pop
pop
movs
add
jmp
jne
dec
dec
mov
mov
fs
pushf
in
jg
pop
mov
mov
adc
sbb
pop
jmp
imul
xor
sbb
fistp
sub
adc
xchg
push
jae
test
and
ret
sbb
mov
outs
sbb
and
out
lock
into
popf
ja
jl
or
shl
mov
mov
add
out
imul
mov
mov
aaa
fld
call
ins
out
mov
cmps
fisub
sbb
or
xchg
rcr
fwait
jl
loope
pop
repz
repnz
cmp
cld
dec
(bad)
ss
(bad)
retf
mov
xchg
ins
xor
xor
stc
fadd
push
push
fimul
inc
jle
les
mov
add
mov
div
out
outs
sti
dec
mov
cmps
stos
jae
mov
rcr
(bad)
gs
or
mov
outs
std
lods
mov
mov
cmp
call
dec
adc
xor
les
cmp
es
jns
arpl
shl
inc
sti
or
xor
inc
dec
jecxz
leave
fnstcw
lods
rsm
cmp
aas
sbb
add
cmc
push
(bad)
je
mov
sub
add
leave
mov
and
or
xor
cmp
push
mov
pop
or
add
aad
scas
loope
hlt
cmp
retf
ja
mov
shl
fs
or
scas
sahf
movs
outs
mov
ret
pop
push
imul
or
fwait
and
and
pop
jb
or
out
or
into
cmp
(bad)
jns
xchg
adc
test
add
movs
mov
xor
pop
stos
out
inc
cli
jg
dec
arpl
clc
mov
dec
jo
in
inc
fild
add
pop
loope
and
dec
cmp
out
leave
xchg
push
shl
jne
fstp
jg
or
or
ret
xchg
clc
cdq
rcr
gs
push
ffree
imul
(bad)
lods
push
ss
mov
les
jl
imul
nop
mov
sti
pop
rcl
xchg
dec
sub
add
leave
pusha
shl
js
push
lock
dec
in
and
(bad)
push
and
cmps
dec
sbb
jp
sub
mov
or
js
pop
movs
dec
mov
push
sbb
dec
clc
cmp
in
sti
xchg
xchg
jmp
cmp
cwde
fnstsw
pop
cdq
mov
inc
nop
icebp
push
add
xchg
dec
ss
jns
stos
push
shl
(bad)
mov
ret
mov
idiv
(bad)
mov
stc
pop
stos
stc
sbb
out
jmp
out
pushf
out
out
mov
ret
mov
in
cmp
push
push
pop
pushf
jne
sbb
jns
xchg
psubw
mov
stc
arpl
(bad)
js
dec
lock
js
test
jno
out
out
push
inc
cmps
mov
and
cmp
shl
jl
ins
mov
ja
les
popa
pusha
imul
stos
xor
and
or
mov
sbb
adc
or
push
outs
sub
xor
add
add
inc
sbb
mov
xchg
push
(bad)
outs
not
push
outs
popf
iret
hlt
dec
ins
mov
jns
frstor
pop
jmp
xor
fcom
loopne
xor
mov
(bad)
repz
and
inc
pop
cmps
adc
ret
pop
push
push
pop
cmps
sahf
(bad)
jge
adc
and
xor
lods
ds
adc
out
inc
je
inc
popf
push
xchg
adc
push
pop
mov
xlat
sub
stc
in
sbb
or
xchg
and
add
mov
jle
mov
arpl
and
push
mov
jnp
fbstp
mov
add
in
jne
sbb
pop
jl
std
xchg
out
call
cmp
dec
sbb
sub
loopne
mov
dec
or
clc
add
clc
fcomp
pcmpgtw
sub
adc
pop
xchg
lods
lods
fsub
jo
inc
mov
push
iret
push
cdq
jo
sub
aad
sbb
adc
bound
adc
scas
mov
or
adc
retf
ret
adc
push
dec
dec
sti
addr16
pop
leave
adc
das
ficomp
push
sub
dec
shl
add
mov
dec
sub
pop
xlat
xor
inc
das
and
loop
xor
mov
sbb
mov
push
sbb
jl
mov
clc
rol
cs
cwde
iret
mov
mov
jl
jnp
inc
push
jmp
xchg
fild
lods
push
scas
pop
clc
int
pop
jecxz
ja
add
cmps
call
mov
cmc
icebp
sub
scas
pop
outs
push
shl
mov
sub
adc
sub
imul
jae
push
pop
fucomi
adc
cmp
jecxz
push
pop
push
xchg
aas
mov
into
(bad)
fild
jle
movs
out
jg
mov
pop
leave
repz
loopne
(bad)
jb
xor
mov
movs
jmp
(bad)
mov
imul
movs
xchg
movs
mov
sub
sub
outs
and
repz
adc
into
stos
fild
add
push
cs
mov
mov
test
ja
mov
inc
aam
adc
push
arpl
test
pop
mov
clc
nop
inc
mov
cld
xor
jle
mov
sbb
xlat
data16
xchg
mov
inc
clc
xor
pop
and
cmp
dec
mov
cdq
in
movs
not
or
adc
rol
in
adc
fdiv
adc
lods
mov
fs
mov
sbb
jmp
test
shl
inc
ja
inc
icebp
jle
leave
hlt
inc
ret
into
xchg
std
push
stos
ret
sub
pop
and
stos
repz
test
adc
in
mov
or
pop
add
xor
popa
adc
mov
and
push
mov
cmps
stc
mov
fadd
call
sbb
ja
lea
rcl
jns
mov
repnz
cdq
bound
mov
jmp
mov
xchg
xchg
js
cmp
xor
cmc
cli
enter
test
dec
sbb
mov
pop
push
hlt
jmp
loope
pop
push
xchg
lea
bound
push
sbb
in
xor
and
adc
push
ss
dec
in
dec
jmp
mov
fs
push
adc
and
(bad)
in
in
loope
xchg
iret
retf
gs
stc
mov
cmp
or
mov
cmc
push
sbb
je
push
pop
int3
cwde
xor
xchg
enter
and
inc
or
loope
mov
imul
fld
(bad)
jb
aam
lds
jbe
in
leave
into
xchg
jecxz
cdq
sbb
mov
je
clc
popa
xchg
dec
add
inc
inc
test
push
pop
shr
xor
jl
cdq
(bad)
fcmovu
push
add
mov
xor
in
movs
push
mov
in
into
dec
sub
xchg
adc
mov
mov
ins
jmp
jp
sbb
arpl
push
call
icebp
mov
pop
dec
add
add
sti
cmp
mov
jmp
aas
add
call
sbb
ja
es
dec
cmp
dec
sbb
pop
adc
inc
(bad)
aad
inc
dec
push
xchg
mov
popa
mov
add
inc
adc
pusha
in
mov
xchg
mov
pop
adc
cdq
(bad)
cmps
sub
int3
inc
shr
xor
ja
mov
sbb
dec
xchg
dec
sub
fwait
ror
ret
push
sub
jge
sbb
add
jmp
jmp
or
pop
jo
adc
not
add
ret
jecxz
sbb
sar
pop
imul
mov
sti
push
push
(bad)
cld
test
adc
mov
dec
sbb
adc
inc
inc
fmul
push
rcr
jmp
jecxz
push
enter
out
sbb
push
mov
mov
mov
pop
imul
push
dec
add
mov
pop
cmp
xor
bound
mov
add
dec
iret
mov
jecxz
out
stc
pop
shl
dec
mov
call
xor
stos
cmp
dec
scas
hlt
xlat
mov
pop
(bad)
mov
loop
(bad)
loop
pop
push
(bad)
push
call
in
mov
pop
sbb
or
mov
mov
daa
push
aaa
pop
jnp
jno
jae
mov
inc
pop
sbb
pop
cmp
or
ins
pushf
xor
push
sbb
push
std
jae
or
enter
popa
leave
mov
jg
cwde
lahf
jae
xchg
pop
push
mov
and
xchg
jo
xchg
imul
clc
cld
pop
les
inc
outs
sti
loope
stc
mov
std
stc
jmp
lods
adc
sub
xchg
push
xor
push
scas
cmp
push
test
dec
jg
aas
adc
outs
das
push
or
cmps
test
mov
movs
xor
lods
jb
pop
outs
cmp
arpl
dec
cvttps2pi
sbb
adc
sub
stos
inc
stos
pop
fcom
jle
ins
pop
add
gs
push
(bad)
loope
ret
das
jp
xchg
lds
add
into
pop
or
lahf
jae
mov
sub
inc
aaa
js
cmp
or
xor
fabs
pushf
mov
add
in
inc
rol
or
xchg
pop
mov
mov
retf
ins
je
add
mov
repnz
pop
xor
mov
mov
shl
jnp
cmps
fsubp
dec
mov
rcr
fsubp
xor
rcr
mov
ret
adc
das
push
das
lahf
push
in
sbb
gs
jb
or
inc
leave
lods
and
stos
jns
adc
pop
xchg
cli
xchg
push
xor
inc
inc
ja
sbb
retf
outs
aas
and
fadd
push
push
imul
push
dec
sub
mov
inc
(bad)
ja
movs
xlat
sbb
dec
mov
stos
int
mov
jno
stc
mov
(bad)
call
mov
dec
cmp
sar
fbld
shl
or
outs
repnz
mov
(bad)
loopne
add
arpl
xlat
dec
jge
daa
popf
and
or
sbb
jmp
cmp
out
and
jmp
arpl
mov
retf
jnp
movnti
sahf
mov
jo
jo
push
out
in
fstp
inc
rcr
mov
pop
(bad)
aam
mov
push
retf
das
xor
sbb
fisub
mov
mov
movs
xchg
sub
loopne
cmp
aaa
std
xchg
cmc
test
fdiv
sahf
ins
xchg
cmp
xor
clc
mov
jg
stos
mov
and
xchg
mov
fdiv
cmp
hlt
fadd
call
es
repz
pop
push
add
sahf
in
jl
mov
bound
push
(bad)
push
push
jge
fwait
xor
out
push
sbb
pop
mov
mov
sar
cmp
out
out
jmp
sahf
pop
rcl
xor
jne
and
std
mov
or
jge
outs
(bad)
dec
inc
sub
ds
icebp
adc
sub
out
lahf
jle
adc
vaddsd
xchg
push
leave
imul
(bad)
icebp
in
and
lods
in
imul
xor
mov
jmp
jae
push
std
sti
mov
push
add
dec
(bad)
cld
out
push
mov
nop
dec
jp
sbb
je
retf
cmp
jnp
stos
aam
xchg
sbb
imul
pop
loop
mov
adc
mov
fild
int
in
adc
movs
mov
and
adc
jns
jbe
mov
jb
and
xor
jne
xchg
mov
xor
xchg
jmp
into
inc
call
cld
pop
push
pop
cmc
xor
adc
sbb
adc
dec
fist
mov
div
inc
jg
sbb
cld
js
xor
leave
cmp
(bad)
repz
xor
(bad)
jmp
int3
scas
retf
mov
aam
cmp
push
retf
shr
mov
xor
cld
popa
adc
pop
cmps
out
pop
mov
mov
mov
dec
push
sbb
stc
ret
in
push
std
push
addr16
frstor
or
pop
imul
cmps
mov
xchg
(bad)
out
leave
cmc
add
adc
xchg
aas
mov
jp
lods
aaa
xchg
sub
dec
jnp
aad
xor
or
inc
inc
inc
and
jl
push
outs
popa
je
push
aam
jae
repnz
js
inc
push
jle
mov
stos
aaa
jp
and
nop
ins
jo
daa
inc
outs
dec
cmp
ror
mov
xchg
xchg
push
loope
outs
pop
movs
inc
es
fwait
xor
jmp
sbb
ja
sti
push
ret
mov
fincstp
xor
xor
push
inc
fst
jns
push
js
sbb
add
sub
inc
cwde
je
retf
cwde
add
add
push
in
loop
dec
movs
(bad)
imul
std
out
fdiv
sub
sar
lds
enter
sub
js
daa
and
int
or
jge
imul
fwait
movs
ret
(bad)
(bad)
fisttp
ja
dec
repnz
mov
sahf
call
pop
aad
cmps
sbb
lahf
xor
dec
les
loopne
arpl
sub
imul
mov
dec
addr16
clc
shl
xchg
and
push
lods
lds
pop
push
lock
or
cmp
and
xor
mov
stos
jl
mov
cmps
ror
jg
mov
push
inc
and
out
xor
popa
lahf
movs
mov
push
mov
dec
mov
sub
in
push
and
mov
sbb
pop
aad
ja
fst
(bad)
xor
jbe
inc
fimul
out
mov
adc
xor
inc
js
jns
pop
je
fcom
mov
and
rol
out
mov
mov
xchg
adc
pop
jns
add
lods
dec
clc
sub
sbb
loop
add
and
adc
push
(bad)
pop
push
movs
mov
out
mov
inc
int
sub
imul
jmp
iret
pop
xchg
imul
add
add
imul
mov
push
add
push
push
dec
xor
out
loopne
mov
js
add
imul
cdq
and
jmp
mov
sbb
dec
inc
or
(bad)
xchg
sub
xor
push
les
aas
(bad)
or
pop
sbb
xchg
jae
(bad)
xlat
jge
lods
jbe
xchg
out
movs
xor
push
fidiv
mov
sti
inc
scas
outs
adc
or
mov
cmp
ror
or
pop
pushf
mov
neg
and
xor
or
sbb
sbb
adc
jge
pxor
mov
jae
sub
aam
mov
bound
cmp
cmps
out
les
dec
sbb
fidivr
shr
cdq
dec
or
sbb
cmps
adc
push
ffree
adc
pushf
sub
add
retf
aaa
retf
test
(bad)
cli
pop
ins
push
cmp
mov
mov
inc
sbb
lock
cmp
mov
sub
movs
mov
outs
aaa
mov
mov
out
add
adc
rcl
add
sbb
or
cmc
fucomi
mov
sub
push
push
mov
dec
ret
(bad)
jle
and
(bad)
leave
or
xchg
mov
jmp
mov
mov
imul
push
mov
call
shl
ficomp
inc
inc
div
aam
push
je
push
repz
push
cmp
fdiv
jmp
call
scas
mov
loopne
(bad)
dec
cmps
imul
icebp
aad
(bad)
cdq
cmp
xor
sbb
cwde
dec
cmp
int3
scas
pop
mov
and
and
fnstenv
into
fmul
push
mov
retf
push
popa
jne
div
test
sub
mov
push
inc
cli
mov
xchg
mov
repnz
jnp
mov
cmp
das
pop
mov
or
fst
adc
push
mov
aaa
(bad)
(bad)
mov
test
sbb
adc
aaa
sbb
push
pop
stos
cmps
push
dec
rcl
mov
mov
push
push
mov
mov
sub
sub
inc
push
push
in
loop
clc
stos
adc
push
das
(bad)
out
adc
fnstenv
sub
arpl
fst
jmp
push
cdq
test
mul
sub
pop
(bad)
push
push
sub
xchg
sar
jle
inc
xor
loopne
test
cmp
sbb
or
aas
cli
sbb
ja
xchg
(bad)
shl
and
scas
lods
aad
mov
sub
fcom
std
cmp
leave
mov
test
fwait
inc
dec
ror
jo
lods
cmp
and
(bad)
scas
push
sbb
mov
cmp
ja
cdq
pop
and
mov
pop
mov
ins
arpl
mov
fcom
and
xor
lahf
movs
lea
xor
pop
mov
mov
adc
cmp
mov
int
addr16
lock
sbb
mov
and
inc
jns
mov
loope
xor
add
imul
xor
or
pop
popa
cmp
mov
outs
xor
pusha
aam
jle
mov
cmps
adc
or
not
sub
jb
pop
push
lea
inc
data16
lea
inc
cmp
adc
mov
retf
or
adc
cmc
fdivr
aas
pop
dec
stos
shr
mov
mov
clc
je
xor
jmp
loopne
or
retf
pop
ja
(bad)
cwde
jmp
mov
ins
pop
in
ja
pop
adc
pop
or
push
fdiv
xchg
and
inc
iret
jno
push
xor
fimul
jmp
inc
inc
dec
sub
xor
test
jmp
sub
pop
(bad)
lods
enter
ss
dec
or
push
loopne
cmc
aas
mov
push
in
aaa
add
leave
pop
dec
out
and
sub
and
call
icebp
jb
dec
jge
cmp
(bad)
enter
add
test
test
xor
jge
in
fst
push
shl
aad
ret
fidiv
ins
or
out
mov
mul
push
rcl
dec
std
cli
and
and
addr16
dec
jae
fisttp
fs
mov
call
aam
cmps
(bad)
sbb
shl
dec
sbb
sahf
enter
and
push
push
daa
push
loope
in
inc
jmp
pop
enter
out
cmp
xchg
jmp
inc
cmp
push
imul
pop
dec
adc
mov
imul
gs
dec
sub
push
adc
adc
cmp
imul
jg
inc
ja
mov
cs
and
outs
and
jno
test
add
arpl
mov
mov
mov
scas
stos
fbld
outs
dec
aam
test
aad
lods
hlt
mov
push
sbb
stos
or
fwait
dec
xor
push
ins
dec
xor
mov
inc
inc
jno
sub
sub
not
sbb
cmp
bound
pop
not
inc
add
je
push
movs
pushfw
mov
push
cld
inc
movs
cld
push
jmp
lods
ins
lods
xchg
ret
fwait
es
pushf
jns
mov
mov
daa
aaa
sbb
repnz
mov
and
test
mov
adc
popa
lods
retf
repz
stos
daa
cli
cmp
gs
mov
sbb
idiv
shl
add
cmps
add
mov
mov
sub
movs
pop
xchg
push
cmp
mov
sti
test
add
push
adc
ror
cmp
es
cmp
stc
das
jne
jl
jne
aas
add
jl
mov
mov
out
mov
test
dec
mov
fdivr
cdq
lods
add
fcom
jae
xchg
mov
mov
cmp
xlat
and
je
sbb
add
mov
in
jnp
mov
(bad)
int
jg
sahf
fidivr
and
mov
pusha
xor
adc
xchg
dec
cwde
and
mov
mov
(bad)
rcr
movs
mov
fwait
call
push
pusha
jl
in
push
movs
pop
aaa
jle
dec
mov
sub
out
retf
pop
ret
not
jne
add
es
outs
(bad)
cmps
mov
push
and
xchg
(bad)
cmp
ss
mov
ja
cmps
xor
aad
sbb
shr
(bad)
cli
inc
xchg
ret
ret
jns
cld
in
and
add
pop
push
repz
ret
clc
dec
jle
jns
fs
icebp
es
enter
mov
mov
inc
push
in
or
adc
adc
adc
cmp
xchg
add
or
bound
mov
mov
push
lock
jmp
int3
push
and
mov
out
dec
jae
sar
sbb
add
test
popa
inc
out
xor
rol
fldenv
cwde
mov
add
fsubr
xor
lods
xchg
inc
sub
jbe
popa
sbb
scas
jne
pop
mov
push
lods
jle
mov
push
inc
ja
pushf
bound
dec
in
das
xchg
loop
rcr
in
push
and
jae
lds
jecxz
int
mov
lods
mov
inc
xchg
xor
jae
ins
stc
sahf
dec
nop
div
dec
ja
mov
mov
pushf
test
lock
inc
aam
xchg
dec
push
or
adc
outs
test
sar
mul
lods
out
and
(bad)
push
out
or
inc
jns
je
std
out
les
js
(bad)
sub
les
outs
xor
rcl
loope
les
and
lahf
xor
dec
ss
pop
call
push
fwait
inc
push
mov
cmp
cli
addr16
push
and
mov
cmp
pusha
dec
fwait
push
or
arpl
xor
adc
sbb
xlat
test
jecxz
mov
mov
inc
scas
adc
jmp
jb
pushf
rcl
cs
push
pop
jmp
add
mov
pop
scas
into
mov
mov
cmps
jg
repz
in
scas
ins
mov
add
fmul
xchg
out
retf
ror
les
dec
push
out
dec
iret
adc
mov
(bad)
or
cmp
mov
push
or
inc
mov
inc
jle
rcl
icebp
sahf
sub
retf
aam
mov
scas
scas
or
imul
jbe
push
loopne
push
sbb
push
push
out
pop
add
sub
test
lea
inc
jmp
jae
(bad)
fiadd
iret
sub
(bad)
pusha
mov
lods
lock
pop
icebp
sub
xor
lods
or
loop
stos
jle
sbb
cmps
cmp
shl
outs
or
lds
stc
mov
and
out
xchg
pop
adc
bound
shr
inc
dec
jl
pop
sbb
fdivr
adc
xor
inc
sub
mov
test
retf
pop
mov
and
pop
retf
test
push
ins
mov
sahf
(bad)
cmc
push
in
mov
aam
mov
and
movs
adc
and
xchg
rcr
cmp
call
cdq
and
dec
aaa
jb
dec
das
jmp
xor
lahf
mov
pop
sub
push
clc
lods
(bad)
retf
out
jo
sbb
shl
mov
xchg
outs
pusha
add
xchg
push
popa
gs
and
push
push
ret
xchg
cdq
sbb
stc
loope
into
shr
push
cmc
add
inc
cmps
mov
push
ret
xchg
dec
mov
sub
mov
jno
repnz
inc
ss
out
xrelease
je
stc
cli
std
add
(bad)
jp
das
jns
stos
lock
adc
ins
push
and
neg
sub
add
push
pop
pop
data16
stos
in
xor
inc
jle
aam
bound
push
call
dec
jp
int
cmps
addr16
add
cmp
and
cmp
mov
mov
test
jmp
loop
cmp
aad
lods
push
mov
arpl
outs
sbb
sub
aas
(bad)
mov
imul
movs
add
and
sub
xchg
mov
leave
fsub
fsubr
fs
stc
mov
sbb
and
scas
pop
and
das
push
out
xchg
out
sbb
arpl
sub
sub
out
cmps
and
shr
push
cdq
fisubr
test
sub
test
(bad)
loopne
cmp
je
inc
icebp
imul
pop
and
dec
push
push
jg
cli
aas
pusha
mov
pop
and
pop
js
scas
dec
mov
test
adc
(bad)
movs
out
mov
xor
xchg
sub
in
bound
jmp
inc
jle
fbstp
adc
push
pop
call
test
test
sub
cmp
test
inc
inc
out
in
popf
mov
fdivr
sub
push
ret
in
push
cmc
call
push
xchg
cmp
data16
int
xchg
ins
test
xchg
nop
imul
mov
pop
gs
repz
and
jecxz
aad
xor
es
jg
cmps
fs
xchg
jne
ins
xchg
das
sub
mov
imul
mov
mov
test
test
sar
test
mov
push
js
aas
mov
rcr
mov
jmp
lea
dec
(bad)
cmps
sub
ins
into
and
jecxz
retf
cmp
xchg
out
dec
sbb
xchg
sbb
(bad)
add
add
push
sub
fild
inc
push
and
adc
jge
adc
stc
mov
shl
add
pop
hlt
ds
push
and
adc
mov
dec
pop
cmp
dec
div
sbb
mov
popa
push
xchg
addr16
push
not
dec
dec
push
jae
stos
mov
xor
add
xor
or
(bad)
jmp
sub
retf
aaa
shr
push
or
and
fwait
call
pop
mov
test
mov
inc
aas
xor
ficomp
std
cmps
(bad)
movs
pop
imul
leave
push
add
shl
jnp
enter
mov
inc
push
mov
rol
scas
and
push
or
je
lds
repnz
cmp
and
adc
add
clc
int3
pop
clc
inc
int
xor
out
jnp
push
xor
xchg
xlat
adc
cs
rol
xor
shl
inc
xor
aam
mov
pop
inc
imul
in
call
dec
outs
adc
xchg
jbe
mov
inc
aaa
pop
ins
or
cmp
sbb
and
jno
pop
enter
adc
pop
es
xchg
bound
jnp
dec
les
rol
jp
enter
ret
jne
outs
or
leave
mov
div
sub
lea
or
xlat
out
ja
or
or
mov
mov
inc
pop
mov
movs
add
mov
je
hlt
loope
mov
in
add
loopne
inc
push
mov
(bad)
cmp
sub
push
aas
adc
push
outs
inc
and
pop
imul
pop
dec
setno
inc
outs
inc
push
pop
pop
ja
dec
fnsave
jno
xchg
inc
mov
xchg
jle
pop
or
inc
or
push
loope
mov
fild
add
icebp
sbb
sbb
ins
sti
sub
int3
or
repz
xchg
sub
je
sub
jl
lds
fdivp
lods
push
xchg
mov
repnz
repz
mov
fsub
movs
or
inc
mov
push
jnp
stc
mov
jne
adc
into
lods
mov
inc
enter
pop
in
mov
clc
jns
mov
adc
out
daa
call
or
and
fmul
lock
dec
scas
push
push
in
cmp
dec
test
mov
and
jns
jl
push
ffreep
loop
int
call
mov
cmp
pop
sub
and
push
leave
adc
adc
std
outs
and
cmp
push
out
imul
mov
sub
jb
jmp
mov
in
fisubr
pop
jae
sbb
or
arpl
daa
and
into
ss
retf
stos
mov
sbb
or
nop
test
push
scas
xchg
push
or
lea
sti
and
lock
data16
pop
xor
enter
mov
sub
mov
lods
out
add
js
add
jl
into
xchg
mov
jne
jnp
dec
inc
std
popa
pop
xchg
(bad)
jmp
mov
das
ret
ret
scas
mov
lds
pop
cmp
int
mov
dec
jle
push
mov
aas
push
xor
pop
pop
pop
ror
pop
scas
pop
pop
test
pop
lahf
cwde
ret
outs
sub
jge
stc
leave
lods
adc
mov
(bad)
imul
push
rcr
leave
sti
sub
inc
fimul
mov
add
loopne
(bad)
(bad)
test
sub
mov
sahf
cli
mov
stos
rol
xchg
pop
movaps
dec
mov
imul
mov
inc
jp
cmp
lahf
lock
adc
add
pop
gs
dec
lods
int3
xor
jnp
iret
jg
test
jl
cli
mov
push
xchg
imul
aad
(bad)
data16
inc
std
dec
push
ins
sbb
aad
adc
or
xchg
aaa
fisubr
mov
push
mov
in
js
push
cmp
dec
dec
inc
test
adc
pushf
jmp
fs
jne
pop
hlt
and
xor
cdq
add
dec
(bad)
arpl
shl
dec
jl
or
out
jbe
jge
aaa
std
adc
and
ins
adc
xchg
cmps
js
pop
inc
inc
fs
mov
and
push
movs
es
jo
xchg
es
les
shl
xchg
in
or
jg
and
dec
push
in
or
add
mov
sub
cmps
jnp
sbb
scas
mov
mov
aad
cli
movs
jmp
lods
or
xlat
sub
xchg
pop
jg
addr16
mov
jge
test
lods
stos
pop
cmp
or
or
movs
std
and
sub
leave
add
xchg
xor
adc
stc
sbb
sub
movs
ret
jno
(bad)
int3
nop
pop
arpl
data16
push
sbb
loopne
lock
mov
fiadd
(bad)
jg
sbb
mov
pop
pop
fidiv
sbb
mov
mov
movs
inc
rol
dec
rcl
dec
fs
test
int3
idiv
sub
pop
adc
(bad)
push
push
xchg
fs
pop
pop
out
retf
lods
push
int
jne
or
test
add
in
cs
or
sbb
mov
xchg
scas
lahf
(bad)
pop
add
jle
js
mov
(bad)
stc
(bad)
ins
cmc
cmp
test
test
push
and
jecxz
add
ja
pop
mov
mov
test
(bad)
in
aaa
mov
add
sbb
cmp
and
sbb
retf
cmc
fsub
xchg
dec
xchg
ja
fs
xchg
(bad)
xor
call
pop
ins
add
and
(bad)
mul
cwde
(bad)
sbb
mov
movs
repz
sbb
pop
adc
clc
scas
mov
popa
sti
push
adc
mov
dec
mov
int3
in
cmp
stos
pop
cmp
xor
push
adc
add
ror
inc
loop
add
cli
hlt
and
dec
cmps
out
inc
inc
int
inc
dec
adc
shl
mov
loop
adc
sub
or
bound
in
push
pop
jg
lock
(bad)
pop
mov
(bad)
sbb
sub
xchg
mov
jb
or
imul
dec
(bad)
cmps
sub
arpl
or
fs
jb
pop
cld
adc
out
add
pop
pusha
cmp
mov
inc
ins
jno
lds
inc
push
mov
hlt
mov
dec
out
out
int
xlat
adc
jp
inc
fldcw
jo
adc
imul
out
(bad)
or
jnp
xchg
test
mov
daa
pop
sti
rcl
cmp
test
dec
sub
retf
mov
lahf
push
std
sub
and
mov
pop
cli
push
into
or
xchg
xor
pusha
fwait
loope
push
cmps
xchg
enter
pop
(bad)
scas
jb
push
sub
aam
adc
mov
xchg
ja
idiv
mov
iret
sbb
or
mov
pusha
mov
jb
shr
shl
inc
pop
std
pop
and
and
fimul
(bad)
mov
dec
sahf
dec
int
add
xor
fwait
mov
push
adc
les
push
pop
add
inc
aaa
mov
aas
xlat
ins
inc
jp
pop
movs
dec
inc
xchg
jne
nop
adc
leave
push
pop
dec
mov
xchg
cmp
inc
pop
or
scas
xchg
dec
lock
add
inc
dec
in
adc
jg
dec
ret
test
jo
dec
cwde
jecxz
mov
into
lock
mov
daa
xlat
hlt
sbb
add
push
fistp
(bad)
fs
xchg
mov
lods
std
lds
movs
xchg
fnstcw
xchg
xchg
mov
pusha
sbb
sbb
pop
sbb
cmp
mov
loop
fidivr
cwde
sbb
outs
(bad)
nop
in
push
xchg
popf
pop
retf
rcl
(bad)
les
aaa
add
pop
jmp
add
sub
retf
call
jmp
jns
fwait
sub
lds
cld
enter
dec
imul
sub
inc
data16
add
jle
pop
aam
jg
or
pop
loop
imul
xlat
cmps
jne
xchg
or
mov
xor
int
sbb
daa
sbb
adc
iret
and
ror
cld
jbe
xchg
sbb
or
mov
cwde
jns
mov
mov
stos
rol
in
outs
(bad)
ja
(bad)
sub
retf
lods
pop
not
sub
cmovno
mov
repnz
int3
push
jl
jo
jo
xor
inc
fisttp
dec
mov
push
retf
mov
pop
dec
outs
xchg
sbb
call
outs
or
adc
leave
cmp
jl
aas
sbb
cld
jbe
inc
mov
inc
inc
lods
ins
sub
jb
mov
inc
pusha
scas
jecxz
fs
sub
push
jbe
xchg
lods
repz
test
(bad)
mov
push
sub
jecxz
fdivr
jae
xchg
in
jp
sub
mov
sar
in
int3
cmp
sbb
add
cmp
mov
mov
lea
sahf
jbe
test
pusha
fdiv
nop
sbb
sbb
sub
jecxz
sahf
push
pop
jp
pop
sub
popf
cli
out
cmc
or
mov
int
fmulp
out
out
cmp
js
inc
imul
xor
iret
mov
inc
aam
bound
out
idiv
in
fisub
mov
lds
in
jmp
(bad)
data16
sbb
stos
add
cs
or
xchg
fcomip
rcl
ror
pop
scas
inc
scas
cli
addr16
jne
out
push
test
lahf
or
inc
int3
ss
repz
sbb
add
addr16
daa
inc
push
inc
sbb
push
xor
mov
call
sbb
aas
cmc
mov
pop
mov
fwait
rcr
icebp
and
cmp
pop
call
push
dec
xlat
mov
fsub
lds
cmp
push
jo
mov
std
add
push
leave
imul
fnstenv
or
in
mov
das
and
retf
lods
stos
mov
repnz
pop
xor
jle
aam
ror
stos
or
pusha
std
in
lods
arpl
enter
cmp
addr16
xchg
mov
jle
mov
fisttp
or
adc
dec
pop
loop
ret
xchg
sub
retf
mov
gs
and
or
lods
cmp
mov
pusha
lea
dec
mov
adc
mov
dec
jl
repz
xor
mov
leave
fadd
sbb
add
pop
add
nop
test
and
ss
and
ret
sbb
sbb
jb
xchg
(bad)
sub
sub
mov
pop
pop
fdivr
adc
ficom
sbb
int3
xor
out
pop
lds
sub
or
xchg
sti
shl
xchg
in
jmp
out
rcr
outs
sbb
mov
aaa
xor
in
(bad)
in
arpl
mov
sbb
jbe
iret
call
jmp
repz
je
je
outs
neg
dec
jmp
xchg
mov
push
lahf
cmc
xor
(bad)
push
jae
pop
lds
imul
pop
sbb
cmps
mov
ins
cmc
mov
xor
dec
add
mov
dec
pop
pop
das
aad
push
scas
rcr
fiadd
imul
xor
fsub
sbb
call
fimul
jecxz
mov
sar
pop
lea
jbe
scas
xchg
sbb
fstp
mov
lea
shl
(bad)
(bad)
sahf
je
(bad)
sbb
std
dec
imul
adc
ss
retf
(bad)
outs
mov
mov
cmc
dec
mov
jmp
or
sub
mov
scas
and
nop
sti
jl
or
out
les
lock
lods
push
shl
push
add
sbb
or
enter
cli
dec
mov
aam
or
sub
jg
push
xchg
or
rcr
dec
popf
and
jnp
loopne
shl
dec
(bad)
jb
mov
loopne
iret
sbb
add
mov
cli
cmp
mov
or
cmps
lods
cmp
scas
imul
jo
leave
or
sbb
jl
retf
mov
sbb
sbb
inc
dec
mov
push
and
cmp
test
and
dec
and
push
cmp
sub
mov
inc
daa
and
aam
pop
add
push
loop
push
mov
dec
xchg
xchg
sar
jle
aaa
dec
xor
jp
aad
jae
sub
pop
aaa
(bad)
(bad)
pop
popf
int3
and
dec
sbb
add
xchg
push
dec
xchg
mov
sub
or
stc
call
in
outs
stc
cs
jbe
test
dec
retf
jmp
mov
out
je
sar
add
loope
ret
dec
cmp
pushf
idiv
stos
inc
hlt
and
dec
in
jnp
out
popf
sub
pop
ror
pop
in
and
ror
dec
cmps
jle
cmp
pop
jg
call
movs
movs
cmp
sahf
ds
rcr
xor
ins
pop
xlat
out
jecxz
pop
xlat
neg
ror
sub
dec
xchg
fwait
pop
data16
xchg
push
mov
xor
inc
retf
movs
mov
mov
pop
dec
sub
dec
(bad)
out
lea
pop
dec
or
xor
popa
jle
push
setg
cmp
xor
add
jp
div
mov
cwde
mov
(bad)
test
xchg
inc
xchg
fs
stc
dec
rol
jmp
cmps
hlt
fnsave
cld
or
ret
inc
fisub
xchg
and
rol
rcl
mov
or
jmp
aam
in
loop
fmul
pop
xor
sub
jg
mov
adc
stos
mov
fdivp
xchg
pusha
inc
xchg
sub
jbe
xlat
jns
scas
xchg
out
xor
push
loop
std
dec
sbb
sub
mov
ja
mov
test
inc
sbb
and
cld
(bad)
idiv
ss
fcmove
pop
push
add
adc
push
dec
add
push
jg
out
xor
cmp
push
jo
fdivr
rcr
xor
dec
lods
or
cld
lock
xchg
(bad)
xor
ins
mov
mov
mov
loop
scas
(bad)
fidiv
or
cdq
sti
add
xchg
daa
xchg
(bad)
ffree
jecxz
adc
push
pushf
inc
pop
hlt
cld
jae
mov
cmc
pop
ror
mov
(bad)
jmp
in
imul
fs
dec
mov
dec
sbb
add
icebp
mov
sti
dec
dec
aaa
or
out
imul
repz
leave
icebp
add
mov
mov
fdivr
into
jnp
jns
jp
lods
bound
shl
or
xchg
pop
sti
mov
xor
jo
jae
rol
scas
ror
mov
xor
lock
fs
add
jns
push
cdq
mov
push
or
push
enter
inc
lock
out
dec
cmp
fs
fwait
and
adc
inc
enter
(bad)
mov
shl
ds
mov
pushf
movs
cmp
out
push
mov
sbb
dec
xchg
ficomp
sbb
mov
xor
inc
adc
pop
shl
ficomp
dec
cmps
or
inc
mov
mov
pop
pushf
or
cmp
(bad)
adc
dec
mov
jne
outs
dec
retf
jmp
pop
outs
cmp
sub
add
imul
fwait
mov
icebp
mov
lods
out
mov
xchg
(bad)
sbb
mov
sbb
mov
xchg
lods
mov
ja
and
mov
adc
lock
(bad)
movs
xchg
xor
adc
shl
dec
mov
ret
stos
imul
add
fidivr
shr
in
pop
bnd
les
and
add
imul
inc
mov
ret
mov
dec
push
add
jo
dec
out
cmp
add
imul
fstp
mov
imul
pop
mov
xchg
mov
(bad)
dec
add
jp
loope
(bad)
rol
mov
inc
inc
cmps
inc
xchg
stos
mov
mov
fmul
icebp
je
sar
push
fimul
popa
mov
xchg
adc
lea
xchg
shr
je
fimul
neg
addr16
cmp
dec
cld
pop
les
ins
pop
imul
inc
jne
pop
push
or
xor
sbb
cs
in
and
jmp
mov
pusha
add
aam
dec
dec
repz
ret
inc
outs
xchg
mov
mov
mulps
add
mov
imul
mov
xchg
xchg
push
pop
or
jecxz
stos
mov
push
repnz
cmp
xlat
mov
push
mov
xor
adc
add
test
out
cmps
jl
mov
push
bound
push
mov
cmp
ret
xchg
movs
push
dec
push
enter
sti
dec
inc
adc
inc
mov
cmc
shr
jmp
cld
jb
data16
les
mov
sti
js
(bad)
xor
repnz
arpl
jp
mov
dec
cdq
dec
icebp
cmps
loope
aad
sub
dec
lods
xor
bndldx
shl
rcl
call
mov
cs
std
xor
push
add
and
jo
and
loope
retf
or
mov
add
lea
jo
mov
(bad)
icebp
xor
mov
and
pop
and
ss
jmp
xchg
shl
imul
add
inc
mov
lds
cmps
pop
push
xlat
mov
jno
and
mov
xor
mov
scas
test
add
and
fidiv
cmp
push
data16
std
(bad)
pop
cmp
mov
rcl
jne
dec
push
pop
pop
test
push
fs
into
and
pop
mov
ficom
out
shl
and
movs
mov
push
or
addr16
sbb
pop
xor
das
ret
and
scas
sub
stos
aad
in
jmp
fmulp
dec
cli
ss
out
addr16
sar
sbb
pop
aas
stos
loop
add
jno
jns
adc
add
loopne
jbe
inc
or
xacquire
movs
ror
lods
mov
pop
and
adc
int
xor
push
hlt
inc
retf
jp
hlt
imul
adc
mov
pop
out
sahf
outs
inc
mov
xchg
cmp
ficom
ins
mov
mov
mov
lahf
mov
js
fwait
in
ja
xlat
dec
sub
or
cmps
fild
push
cld
aaa
inc
scas
mov
call
xchg
(bad)
pop
cmps
sub
loop
cmps
xchg
or
jno
into
adc
add
fistp
sbb
movs
fistp
mov
cmp
push
popa
or
xchg
or
inc
pop
jmp
std
and
daa
sar
jb
and
mov
cmp
add
xchg
add
idiv
enter
dec
inc
je
push
and
loope
dec
out
movs
aas
bound
sar
mov
test
hlt
jl
push
in
or
or
aam
pusha
xor
fisub
sbb
stc
lahf
jg
jo
and
jmp
jbe
(bad)
jmp
and
mov
mov
ins
jns
mov
iret
rcl
mov
inc
mov
mov
stos
or
ret
out
and
cmps
call
jno
dec
mov
mov
xchg
movs
pusha
pusha
mov
dec
lods
jo
or
mov
mov
test
aaa
adc
mov
movs
xchg
scas
add
popf
sbb
addr16
push
adc
push
pop
arpl
adc
clc
in
add
ret
inc
adc
icebp
adc
mov
xchg
pushf
and
add
mov
cmp
add
aas
clc
enter
sub
xchg
dec
pop
sti
std
xchg
repz
pop
mov
mov
pop
pushf
pop
retf
leave
outs
or
pop
ror
cmps
scas
fild
rcl
outs
xor
jg
dec
mov
dec
push
out
mov
popf
mov
sbb
and
or
mov
jg
push
fidiv
(bad)
outs
neg
loopne
push
jae
mov
test
dec
push
mov
lds
repz
int
fmul
pop
div
addr16
jmp
jno
das
retf
pusha
jbe
dec
arpl
(bad)
mov
rol
hlt
out
mov
test
and
es
and
mov
adc
sub
inc
stc
ins
mov
(bad)
mov
data16
push
loope
xor
xchg
loopne
(bad)
xor
stc
cmc
xchg
add
je
adc
(bad)
dec
or
push
test
xchg
int3
int3
jp
in
es
sbb
and
mov
push
je
sbb
out
mov
pop
adc
js
test
scas
stc
test
or
stos
jb
test
mov
imul
mov
inc
push
pop
ret
sub
int
xor
jg
dec
dec
sub
popf
xchg
inc
stc
push
in
mov
push
movs
fidivr
lea
pop
mov
mov
mov
mov
and
ficomp
fnstcw
cmp
jmp
push
pushf
jmp
inc
ss
pop
aad
call
es
and
adc
lahf
sbb
movs
movs
psadbw
das
pop
jne
loop
test
das
pop
out
fiadd
xchg
and
jbe
cmp
jns
jns
jecxz
jmp
scas
xchg
inc
loopne
mov
push
mov
cmp
push
push
stos
mov
xchg
test
sahf
fnstenv
and
stos
xchg
and
mov
mov
sub
in
mov
repz
push
call
or
pushf
pop
sbb
jo
out
mov
lahf
xchg
hlt
pusha
or
sbb
nop
shr
retf
(bad)
std
pop
bound
jecxz
dec
test
out
in
dec
mov
cmp
fs
cmp
dec
ret
jecxz
popf
fucomp
mov
pop
xchg
in
aas
inc
inc
out
jns
push
fs
loop
stc
xor
adc
pusha
mov
sbb
xchg
mov
xchg
arpl
fwait
out
popf
dec
les
aaa
loopne
xchg
inc
jne
pusha
es
aas
std
rcl
push
popa
jle
aaa
jne
adc
rol
mov
cmps
dec
xor
mov
add
mov
pop
das
inc
xchg
mov
jno
enter
dec
fiadd
aad
add
loope
aaa
sar
fsincos
sub
gs
out
dec
sub
dec
outs
and
daa
call
out
mov
int3
jns
sbb
popf
fdivr
cdq
dec
daa
(bad)
and
out
ror
mov
shr
push
dec
mov
jp
mov
xchg
test
sub
mov
out
outs
mov
cli
es
mov
jl
xor
cmp
push
daa
dec
push
ret
aas
sbb
fdivr
jnp
xor
or
fs
(bad)
rcr
sbb
jno
aas
sub
mov
or
inc
and
sbb
lahf
inc
sbb
out
inc
pop
xchg
dec
in
sub
ret
or
fcmovnu
aas
repnz
fisubr
mov
sbb
and
pop
mov
gs
inc
cmp
jl
pop
fidiv
push
mov
mov
add
xor
jmp
retf
mov
fld
ins
sbb
in
sub
int3
sbb
cli
add
loopne
scas
pop
or
fdivr
adc
mov
fidivr
cld
cwde
push
adc
shl
xchg
aam
dec
mov
mov
paddq
retf
jmp
jmp
in
lods
dec
lahf
jge
sbb
mov
and
daa
pop
ret
inc
jp
sub
add
fadd
stos
xchg
lea
mov
je
cmp
xchg
stos
mov
addr16
xchg
push
ficomp
dec
jne
dec
test
xchg
cmp
mov
addr16
fist
aad
ins
pop
pusha
fnstsw
dec
mov
and
xchg
jle
pushf
xor
ret
test
(bad)
in
pop
push
in
ret
xor
movs
mov
fstp
popa
(bad)
(bad)
or
or
dec
movs
and
inc
push
sub
sbb
and
pushf
xor
jmp
xlat
retf
and
and
call
mov
sbb
hlt
loop
lea
into
mov
jne
fst
out
test
jb
add
std
outs
push
xor
xor
iret
cmp
sbb
(bad)
mov
fs
and
dec
adc
div
gs
cwde
dec
push
test
pop
int3
repnz
(bad)
outs
mov
imul
sbb
inc
xchg
push
jns
mov
mov
add
add
and
lods
xchg
xor
xor
xor
fst
mov
adc
nop
jo
add
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
mov
jmp
lea
imul
add
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
mov
jmp
lea
imul
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
jmp
lea
mov
add
mov
call
mov
mov
mov
mov
mov
add
mov
mov
mov
shl
mov
add
shl
add
mov
mov
mov
shl
mov
mov
shl
mov
sub
mov
sub
add
sub
mov
add
shl
add
mov
cmp
cmove
mov
jmp
mov
lea
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
xor
mov
and
xor
and
or
mov
add
add
sub
mov
mov
mov
mov
mov
sub
sub
mov
sub
mov
sub
add
mov
sub
mov
sub
add
mov
mov
mov
mov
sub
sub
mov
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
mov
xor
mov
and
xor
and
or
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
add
add
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
movzx
mov
mov
sub
add
add
mov
mov
movzx
mov
xor
mov
and
xor
and
or
mov
mov
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
add
add
sub
mov
mov
sub
sub
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
pop
ret
nop
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lea
test
out
push
dec
adc
jne
mov
ret
imul
test
add
add
add
mov
ja
push
enter
add
lds
je
sub
add
add
ficomp
add
mov
add
and
das
add
add
mov
(bad)
push
lds
add
add
sub
and
faddp
sbb
lods
add
jg
add
add
and
add
add
add
add
add
pusha
stos
and
add
xlat
ja
push
jo
mov
or
add
inc
jmp
inc
test
movs
xor
mov
jmp
lds
add
pop
jno
add
jge
and
test
or
push
push
bt
out
mov
fiadd
xchg
inc
and
movs
jmp
or
sbb
mov
ror
dec
add
add
push
test
mov
xor
imul
and
add
add
mov
mov
sub
mov
test
inc
add
add
dec
and
add
mov
add
add
mov
jmp
cmp
and
add
in
fisttp
mov
or
sub
add
scas
pop
and
int3
add
dec
jge
xchg
inc
and
xor
jmp
cmp
call
mov
and
stmxcsr
add
jmp
mov
cwde
int3
add
mov
loopne
cmp
jmp
mov
addr16
and
lds
sub
lea
and
add
je
ficomp
add
pop
adc
push
ds
add
test
add
add
mov
and
popf
add
mov
and
mov
cwde
int3
jg
mov
mov
and
jg
add
add
xlat
mov
fist
mov
mov
bt
retf
add
jmp
push
dec
and
ficomp
sbb
(bad)
push
add
add
add
das
add
add
sub
mov
test
mov
ret
or
mov
mov
call
and
add
mov
sub
adc
add
sbb
add
mov
sub
pusha
imul
(bad)
nop
jno
add
add
idiv
add
mov
push
sbb
and
je
jmp
mov
add
sub
push
inc
sbb
mov
cwde
add
add
mov
and
add
add
mov
stos
add
add
add
and
ficomp
jns
ret
add
add
das
add
mov
sub
gs
shl
add
add
add
add
sub
mov
and
jo
ret
add
dec
xchg
cwde
add
add
adc
push
inc
pop
hlt
push
sar
jp
lds
into
enter
mov
sub
mov
cmovae
add
mov
and
jmp
jb
dec
clc
inc
and
jecxz
adc
add
jmp
mov
sub
mov
rcr
(bad)
int3
add
xor
dec
add
and
ds
out
mov
push
sbb
test
mov
mov
add
mov
and
test
sti
or
add
xchg
add
das
xlat
add
mov
mov
dec
add
add
add
mov
je
jmp
mov
xchg
cmps
cmp
jecxz
stos
add
mov
add
add
sub
mov
add
pushf
jmp
hlt
and
add
add
mov
add
test
add
add
add
add
pop
push
jb
add
mov
mov
sub
add
cli
sub
in
test
ficomp
xor
ds
xchg
and
add
add
in
int3
add
mov
lds
add
mov
test
jo
add
inc
ror
int3
xchg
hlt
cmps
xor
mov
and
leave
mov
add
mov
mov
add
add
add
leave
jb
push
xchg
and
pushf
int3
jg
xor
enter
push
cmp
ds
test
pushf
mov
add
add
fimul
out
enter
xchg
mov
aam
test
add
movs
cmp
sbb
xlat
add
out
idiv
enter
push
add
ret
icebp
add
and
sbb
add
add
xor
dec
(bad)
jge
ins
or
xlat
mov
sub
add
add
inc
jo
inc
and
push
fdiv
xor
and
mov
and
and
add
add
add
mov
xchg
and
add
mov
test
xlat
add
xchg
push
pop
add
add
lds
add
lea
and
add
outs
pushf
add
hlt
adc
ror
test
mov
and
das
xlat
mov
mov
add
add
add
and
enter
in
pushf
retf
xor
(bad)
jmp
mov
(bad)
aad
movzx
pop
repnz
push
mov
cwde
call
pushf
add
add
mov
add
mov
js
add
popf
adc
retf
mov
sub
add
movzx
mov
and
add
add
mov
jmp
mov
xlat
mov
in
push
mov
jb
add
add
add
add
sub
out
and
pushf
mov
jne
xlat
xor
add
rcl
jecxz
aaa
mov
sub
leave
add
add
push
mov
add
pop
xchg
and
jg
add
add
les
and
push
and
jno
add
and
cmps
or
mov
mov
scas
dec
and
and
add
and
test
add
add
inc
retf
sub
ds
mov
add
mov
push
add
add
lds
(bad)
mov
ror
fiadd
add
inc
sti
adc
xchg
mov
ds
add
test
inc
and
imul
add
enter
mov
mov
pusha
cdq
add
add
push
or
mov
add
ret
pushf
jmp
and
add
mov
jmp
(bad)
sbb
add
add
add
pop
test
add
add
push
push
rdmsr
add
mov
mov
hlt
mov
mov
ret
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
mov
arpl
and
add
add
test
add
sti
iret
add
xchg
test
add
fiadd
add
add
call
push
add
movzx
test
jl
fisttp
xchg
in
pushf
dec
sbb
sub
bound
paddusw
mov
add
sub
mov
cmps
data16
(bad)
jae
add
pop
inc
add
add
mov
add
push
mov
add
mov
and
loope
push
mov
call
sti
test
add
add
xor
nop
out
sar
mov
jl
inc
sub
mov
ror
sbb
das
dec
add
add
mov
sub
ret
test
sub
clc
add
iret
mov
and
sub
sub
rcr
pcmpgtd
push
add
das
mov
and
sub
mov
xor
jmp
jl
and
(bad)
jnp
mov
in
mov
add
jmp
mov
sar
add
cmp
(bad)
adc
mov
dec
mov
sub
mov
mov
or
add
push
stos
mov
iret
stos
and
(bad)
fnstsw
add
dec
xchg
mov
mov
mov
xadd
add
push
and
cmp
test
add
std
jmp
loopne
or
js
ja
mov
add
outs
inc
xor
push
mov
fiadd
inc
mov
add
add
mov
push
and
mov
dec
mov
cmp
scas
xor
stos
add
sub
inc
and
add
dec
lock
add
jbe
and
les
xor
mov
dec
les
enter
jmp
mov
sbb
pop
mov
jae
je
jmp
mov
sub
xor
ins
sub
imul
xor
dec
mov
and
pushaw
repz
mov
addr16
jmp
inc
inc
and
stos
mov
fldcw
push
jns
add
add
pusha
add
mov
inc
cmp
sbb
sub
mov
jmp
fadd
sub
mov
movs
and
test
add
std
add
inc
int
sub
mov
and
jmp
mov
sbb
mov
out
mov
std
add
(bad)
add
ror
inc
jno
shl
push
outs
mov
nop
xchg
add
add
cmovne
mov
and
jmp
inc
test
xor
and
add
add
inc
or
stc
pop
add
jmp
mov
cwde
add
add
cmp
xchg
add
cmovne
adc
fisttp
and
add
mov
sbb
add
dec
or
loop
or
sar
in
in
mov
mov
(bad)
outs
(bad)
(bad)
mov
(bad)
out
add
stos
add
fimul
mov
adc
add
adc
aas
and
dec
add
cmp
sbb
mov
add
stos
and
push
outs
nop
add
add
and
add
stos
mov
add
add
dec
add
add
add
(bad)
cmp
pop
dec
sub
(bad)
mov
mov
and
push
add
cmp
cmovne
inc
ret
call
mov
mov
sar
(bad)
(bad)
jmp
dec
sub
retf
mov
add
or
or
or
cmp
mov
inc
(bad)
jl
es
xor
mov
and
test
outs
add
aas
mov
jbe
and
add
imul
je
cwde
add
mov
add
ss
mov
in
mov
or
ins
pushf
add
add
add
add
add
call
rcr
xchg
cmc
not
inc
jle
outs
mov
rol
ret
adc
stos
add
btr
mov
add
and
lahf
mov
popf
dec
(bad)
pop
and
fadd
pop
add
inc
and
call
dec
mov
mov
add
sti
mov
cmp
or
xor
inc
add
or
inc
iret
ret
adc
xchg
shl
rol
psubw
(bad)
and
add
jmp
mov
push
sub
and
popf
add
mov
add
jmp
inc
add
dec
mov
add
mov
mov
mov
and
add
add
call
mov
imul
sub
mov
add
inc
add
mov
mov
les
adc
jbe
pop
and
jmp
mov
add
sub
push
add
mov
and
add
sti
mov
jmp
(bad)
clc
hlt
pop
push
inc
pop
ret
adc
adc
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
mov
lods
outs
mov
test
jo
add
add
stc
and
xor
jb
add
xor
add
add
int
add
add
add
test
aad
xor
pop
cld
mov
add
mov
add
add
mov
jmp
test
into
pop
movs
retf
xor
(bad)
test
add
add
div
cwde
aaa
bound
mov
add
jno
(bad)
iret
jns
add
ins
add
xor
test
add
sub
adc
add
dec
test
add
and
shl
ins
fmul
add
dec
xor
jmp
jmp
fld
cmps
inc
test
xchg
test
add
ins
jmp
add
push
dec
sub
mov
add
pop
add
dec
out
add
and
jns
mov
mov
test
add
(bad)
pop
test
dec
fcomp
add
add
sub
push
pop
aam
outs
test
(bad)
in
add
xor
shl
add
add
xor
push
mov
psubusb
add
push
pop
add
mov
add
rcr
jnp
test
add
sbb
dec
add
jmp
mov
and
imul
add
enter
add
add
add
or
popa
push
inc
and
jg
jmp
mov
jle
add
mov
inc
and
dec
test
imul
add
add
add
popa
imul
icebp
mov
and
pcmpgtd
add
add
sldt
into
xlat
test
add
add
outs
inc
lea
test
add
outs
or
inc
add
xor
fsub
inc
and
jg
fiadd
add
add
and
sldt
jecxz
mov
and
lds
sub
add
mov
dec
xor
and
jg
jmp
pop
test
mov
into
pop
sub
push
adc
dec
test
ins
add
fdiv
add
mov
jnp
xchg
lods
ss
adc
leave
add
shr
sldt
add
movs
out
xor
sub
fld
movnti
mov
or
add
mov
inc
and
ror
add
test
mov
add
stos
and
test
push
dec
jmp
jmp
mov
and
dec
xor
sub
adc
dec
out
jecxz
bswap
jmp
ins
sub
xchg
cmps
add
and
add
cwde
aaa
jmp
pop
movs
out
(bad)
push
bound
pushaw
add
mov
mov
bswap
jno
setl
and
mov
jbe
xor
add
(bad)
sub
adc
cmp
mov
pop
add
add
movs
add
push
add
add
mov
mov
(bad)
push
xor
aaa
cmovne
mov
jmp
das
test
out
retf
add
outs
scas
mov
sub
inc
outs
call
or
dec
add
adc
or
into
add
mov
outs
dec
mov
push
nop
(bad)
inc
jmp
mov
cmc
aaa
jb
cmps
or
add
mov
mov
inc
outs
add
add
add
add
add
add
shr
ds
mov
enter
movs
add
pushf
xchg
mov
add
mov
fstp
adc
adc
movups
sub
add
push
mov
mov
mov
stos
pop
push
add
int
xor
add
cmovl
mov
jmp
sbb
cmps
inc
push
mov
mov
and
inc
add
cmp
cmove
mov
and
mov
(bad)
mov
mov
mov
popf
pop
xor
add
add
cli
retf
xchg
add
adc
gs
dec
mov
add
mov
add
pop
mov
rcl
bswap
pop
movs
mov
les
add
add
(bad)
add
add
mov
and
and
cmp
out
mov
jnp
cmp
xchg
push
iret
and
lds
mov
enter
mov
mov
push
icebp
mov
aad
ret
mov
or
in
add
add
push
mov
push
mov
mov
jnp
retw
xor
and
mul
jmp
or
lds
test
add
add
mov
ja
adc
and
into
add
lods
mov
and
test
outs
xor
jmp
add
dec
mov
daa
(bad)
dec
dec
sldt
or
test
add
add
rcl
mov
push
jno
jmp
push
pusha
enter
sar
inc
and
enter
and
(bad)
and
and
mov
and
or
(bad)
pop
inc
jmp
pushfw
xor
pop
pop
xchg
xor
out
adc
shl
repz
call
sub
stc
dec
lods
pop
inc
out
idiv
or
mov
(bad)
(bad)
call
push
pop
mov
mov
sub
mov
fidivr
rol
mov
mov
nop
movs
out
add
mov
jo
add
add
cmp
inc
inc
and
js
wrmsr
mov
and
cmp
add
aad
add
ret
or
add
ja
mov
add
inc
and
fsubr
dec
add
cwde
mov
fs
and
into
pop
add
out
test
(bad)
dec
add
mov
and
mov
lea
add
push
mov
mov
enter
cmps
inc
ret
and
mov
gs
and
or
mov
adc
fdivr
add
cmp
test
jmp
pop
int3
inc
fld1
push
cdq
inc
xchg
mov
ret
mov
sub
add
rcr
mov
out
test
retf
fisttp
add
out
and
add
call
mov
je
sti
xor
imul
or
and
push
mov
mov
fcmovu
add
in
mov
push
jb
mov
fstp
mov
mov
add
jmp
lods
mov
inc
imul
and
add
xchg
add
add
sbb
pop
add
shl
fbld
push
add
add
mov
add
mov
xor
add
add
mov
sub
inc
rcr
(bad)
call
push
add
sub
mov
xchg
test
mov
add
(bad)
loop
inc
jmp
mov
mov
bound
add
add
sub
aad
and
add
movs
(bad)
arpl
loopne
xor
mov
aam
(bad)
(bad)
dec
pop
inc
add
in
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
fst
jp
pop
arpl
push
in
add
add
test
mov
mov
pop
(bad)
add
add
add
jns
jl
add
add
inc
adc
rol
add
mov
out
jge
sub
mov
in
add
adc
jns
fsubr
add
mov
aam
add
sbb
shl
lds
add
test
test
jmp
popa
iret
and
in
add
loope
and
add
jbe
(bad)
fadd
add
mov
inc
aam
push
add
sbb
jmp
add
add
add
sahf
test
push
jbe
mov
mov
test
sahf
add
outs
pop
jne
xchg
jmp
mov
sbb
cwde
sar
int3
mov
dec
ja
mov
add
pop
test
bound
add
jbe
dec
add
aam
jno
test
pop
add
add
inc
test
sub
jmp
sets
ins
xchg
add
add
add
mov
imul
test
mov
(bad)
mov
add
rol
repnz
add
add
ins
inc
fld1
mov
lock
arpl
(bad)
gs
pop
add
sub
aam
add
mov
add
add
(bad)
retf
add
dec
jmp
sahf
test
sub
mov
and
int3
mov
add
jmp
sub
aam
add
sub
ret
pushf
add
dec
jg
jmp
mov
sub
pop
std
clc
cwde
add
mov
add
add
pushf
lea
outs
xchg
icebp
xchg
inc
push
mov
jg
mov
mov
add
inc
cmp
aad
push
add
dec
outs
add
add
add
ins
lea
add
cmovp
adc
mov
add
shl
test
fmul
add
in
test
push
add
jg
jmp
jp
lahf
xchg
add
cmc
mov
and
lds
adc
sar
add
add
inc
test
sub
sahf
test
or
outs
fwait
(bad)
fistp
je
dec
mov
aam
add
(bad)
inc
idiv
xor
mov
gs
test
or
add
retf
js
and
jg
jmp
mov
aam
add
retf
jnp
xor
mov
int3
push
mov
test
pop
push
add
cmp
rcr
sbb
(bad)
push
jmp
in
test
aam
add
fwait
and
stos
mov
jbe
sbb
mov
add
shl
inc
mov
add
mov
je
mov
mov
sub
rol
xchg
int3
add
add
mov
sub
inc
cli
and
mov
rcr
add
xchg
and
or
mov
mov
(bad)
sub
jmp
mov
and
in
add
pop
xor
aas
sub
mov
test
js
int3
push
mov
add
test
pop
push
pop
and
mov
outs
push
jnp
sub
add
xchg
les
movs
rol
jns
mov
inc
inc
push
push
out
add
mov
mov
outs
sub
mov
je
jmp
mov
and
add
lds
loope
div
addps
inc
add
add
fisub
add
pop
and
xchg
adc
mov
je
jmp
mov
gs
retf
cli
aas
pushf
inc
and
addr16
add
add
push
add
inc
test
dec
call
add
adc
add
jmp
add
mov
push
jle
push
fmulp
add
mov
call
or
inc
test
lock
mov
(bad)
rol
jmp
mov
sub
push
ss
aas
inc
dec
inc
je
jmp
mov
sub
shl
and
pmaxub
add
or
xchg
xchg
mov
sub
arpl
jnp
jbe
dec
add
ins
add
add
add
sub
inc
inc
and
mov
adc
arpl
mov
add
add
cmp
and
jmp
pop
add
add
add
push
jns
int3
xchg
pop
pushf
test
sbb
ficomp
adc
add
push
jmp
inc
and
inc
test
adc
jno
nop
rcr
add
push
(bad)
(bad)
rcr
sti
pop
not
mov
jle
pop
or
push
xchg
and
add
outs
outs
fdiv
or
push
adc
add
mov
mov
mov
mov
or
in
add
xlat
inc
mul
movs
add
push
pop
push
sub
sbb
add
push
and
add
mov
sar
movs
add
add
add
mov
add
xor
mov
loop
push
stos
arpl
ret
jle
mov
jo
stos
arpl
sub
pop
mov
inc
and
jge
ret
push
and
int3
xlat
xchg
jmp
xor
xor
xor
cmp
rol
repz
popf
ss
and
jmp
jmp
cmp
sar
inc
vpsubsb
add
popf
shl
fadd
or
mov
add
lock
pop
int
mov
loope
mov
jmp
jns
nop
or
add
pop
arpl
loopne
mul
and
lds
jmp
dec
cmovl
mov
jmp
mov
mov
push
pop
call
push
add
push
sbb
mov
sbb
add
mov
push
lea
and
in
add
add
mov
test
add
mov
pop
fucomi
mov
sbb
mov
or
cmovl
mov
or
lock
shl
mov
jno
jns
cli
fld
add
mov
jns
fsub
arpl
add
js
adc
sub
mov
and
dec
je
cmp
retf
aas
test
add
jmp
je
mov
int
and
hlt
pop
add
in
add
outs
add
inc
push
js
lahf
mov
add
add
add
add
test
in
add
add
add
add
and
add
mov
add
test
sub
mov
pop
mov
jmp
test
add
push
and
add
test
in
add
and
jo
push
add
add
xchg
xchg
mov
jns
add
int3
(bad)
cmp
add
pop
cmp
jo
cmp
add
test
rol
add
cwde
cli
push
jmp
add
out
push
add
test
push
add
push
or
cmp
jo
cwde
add
add
xor
enter
and
push
add
cmp
in
icebp
mov
mov
mov
add
mov
aas
daa
or
add
lock
or
push
add
sti
inc
rol
pusha
mov
adc
add
outs
add
lahf
mov
add
mov
mov
mov
and
add
add
jmp
fidiv
pop
add
add
jp
and
push
add
dec
inc
add
add
add
xchg
and
push
adc
jmp
mov
add
pop
add
add
sub
mov
mov
jmp
(bad)
lock
add
lds
adc
fadd
add
loopne
push
xor
xor
add
out
add
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
or
dec
or
add
add
add
jo
aad
inc
mov
test
mov
mov
add
mov
call
mov
scas
inc
jb
test
add
add
test
test
cdq
(bad)
mov
movs
xor
adc
xor
mov
jo
pop
daa
dec
bound
pop
mov
push
fnstenv
int
mov
add
add
inc
icebp
in
adc
pop
add
add
mov
mov
cdq
sbb
add
jae
jle
and
add
add
nop
and
jo
popa
psrlq
add
add
mov
add
adc
setle
add
add
add
hlt
inc
shr
jns
test
stos
add
mov
jo
int
add
add
sub
mov
push
and
addr16
sbb
pop
mov
mov
loopne
ss
mov
(bad)
jb
jmp
add
popa
mov
add
lods
in
out
and
add
add
adc
and
add
je
ins
mov
add
mov
add
push
add
cwde
sub
repnz
add
jmp
popa
add
mov
lods
add
inc
add
sbb
addr16
adc
test
ins
xor
add
add
pop
cli
cmp
mov
cli
add
pop
jmp
mov
sub
cwde
inc
and
jb
add
add
sub
push
pop
and
jg
jmp
mov
add
imul
cmps
fimul
test
add
push
add
mov
sub
mov
push
mov
fwait
sbb
popa
add
sub
add
sub
mov
and
je
jo
int3
add
mov
pop
(bad)
xor
(bad)
mov
pusha
outs
(bad)
jl
add
mov
lds
fs
mov
test
aaa
add
jmp
mov
sub
sti
inc
and
adc
inc
pop
lods
addr16
rol
test
xor
dec
mov
test
add
add
cli
xlat
add
test
add
jo
push
retf
jns
out
das
dec
(bad)
jns
test
sti
cdq
xor
add
(bad)
jb
cmp
jecxz
xor
sub
add
jmp
mov
sub
or
and
xchg
(bad)
and
xor
jmp
inc
test
sub
mov
adc
push
add
repz
pop
stos
add
mov
ds
in
add
adc
movs
add
add
sbb
pop
push
lds
call
mov
(bad)
in
test
mov
sub
mov
setne
add
jb
add
add
addr16
mov
mov
test
test
jo
add
xor
xor
sub
mov
fdecstp
jbe
sbb
mov
lods
add
mov
sub
shr
and
sbb
add
pushf
add
add
add
sub
mov
je
xor
add
mov
add
mov
and
jb
mov
sub
out
das
(bad)
cmp
test
pop
stos
add
add
call
or
pop
out
enter
icebp
fwait
add
add
cmps
mov
and
sbb
pop
jmp
pop
mov
ins
add
add
inc
mov
aas
cmp
add
pop
lods
add
fcmovb
sahf
jge
add
stos
jo
add
add
mov
out
jo
mov
jmp
and
push
inc
imul
mov
test
and
add
add
and
jo
add
imul
mov
add
and
ss
cdq
xor
push
add
and
pop
ss
call
sti
mov
add
popa
(bad)
addr16
int
push
test
add
and
add
add
dec
and
add
adc
cmps
je
mov
and
jmp
mov
mov
xchg
test
adc
test
add
(bad)
and
(bad)
jb
rol
add
adc
imul
push
xchg
jge
test
add
add
(bad)
add
or
and
fwait
call
add
xchg
sbb
jmp
mov
mov
js
and
(bad)
(bad)
dec
add
movzx
icebp
xchg
mov
cwde
pop
repz
add
pop
mov
adc
test
jmp
and
add
mov
add
sbb
fild
popf
int
xor
jb
jae
pusha
xlat
mov
loop
and
pop
and
mov
sbb
mov
sbb
cmp
jmp
mov
mov
mov
sti
mov
mov
popa
pop
mov
add
add
pop
add
cdq
add
add
inc
ror
(bad)
jmp
enter
add
and
add
imul
loope
add
push
inc
cwde
sbb
mov
adc
add
mov
daa
test
add
mov
add
mov
and
add
test
add
mov
xor
pop
cmp
jecxz
pop
mov
in
cld
add
add
(bad)
cli
les
mov
push
mov
cdq
add
xor
adc
add
lahf
jg
xchg
cmp
add
popa
mov
mov
inc
add
inc
and
call
arpl
adc
adc
add
cmovl
mov
aas
rcr
mov
and
pop
add
jmp
add
test
sbb
add
test
add
xchg
add
add
push
add
enter
loop
ficom
dec
cmp
cmovne
xchg
test
stos
test
sti
clc
xor
add
mov
add
add
add
or
xor
popa
add
mov
lods
pop
and
add
shl
mov
call
adc
and
sbb
popa
add
(bad)
sub
imul
pop
popa
and
adc
test
je
pop
mov
ret
cmc
push
stc
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
sub
add
add
mov
mov
mov
shl
add
add
sub
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
lea
mov
mov
sub
add
mov
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
lea
mov
mov
mov
sub
sub
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
add
mov
mov
mov
sub
add
mov
mov
mov
add
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
add
sub
sub
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
mov
mov
cmp
jge
mov
jmp
mov
mov
mov
movzx
cmp
jl
mov
jmp
mov
mov
movzx
cmp
jl
jmp
mov
mov
mov
sub
sub
mov
movzx
add
sub
sub
mov
mov
jmp
mov
mov
movzx
cmp
jl
jmp
mov
mov
add
add
sub
mov
movzx
sub
sub
add
mov
mov
jmp
movzx
mov
mov
mov
mov
mov
cmp
jge
mov
mov
sub
add
mov
movzx
mov
shl
shl
mov
mov
sub
add
add
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
add
pop
pop
pop
ret
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
sub
sub
mov
mov
mov
shl
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
lea
mov
mov
mov
mov
mov
cmp
jne
jmp
mov
cmp
mov
jbe
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
cmp
jge
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
shl
mov
sub
sub
mov
mov
mov
cmp
jae
mov
mov
mov
mov
sub
add
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
cmp
jge
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
sub
sub
mov
jmp
mov
jmp
mov
cmp
mov
je
mov
cmp
setb
mov
mov
test
jne
jmp
mov
mov
sub
sub
add
mov
mov
cmp
jb
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
sub
sub
mov
cmp
jne
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
cmp
jne
mov
mov
sub
add
mov
mov
mov
jmp
mov
sub
sub
mov
mov
mov
jmp
mov
mov
mov
add
sub
add
mov
mov
mov
add
sub
sub
cmp
jge
mov
mov
sub
sub
add
mov
cmp
jge
mov
jmp
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
jmp
mov
add
mov
mov
cmp
mov
jbe
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
sub
add
add
mov
mov
sub
add
add
mov
jmp
cmp
jge
cmp
jne
jmp
jmp
mov
cmp
jb
jmp
mov
mov
mov
mov
sub
sub
mov
xor
xor
xor
or
or
xor
and
mov
mov
mov
shl
shl
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
add
mov
mov
mov
sub
sub
mov
xor
mov
xor
and
mov
mov
mov
shl
movzx
mov
mov
sub
add
sar
mov
sub
mov
sub
add
sub
imul
shl
mov
add
mov
cmp
jl
mov
mov
mov
sub
add
mov
mov
cmp
jb
mov
mov
sub
add
add
mov
mov
mov
movzx
mov
mov
mov
shl
mov
mov
xor
mov
xor
xor
or
or
xor
and
mov
mov
add
mov
shl
add
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
mov
shl
mov
cmp
je
jmp
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
sub
sub
add
add
sub
mov
cmp
jne
jmp
jmp
jmp
cmp
jl
jmp
jmp
cmp
jge
mov
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
add
add
sub
mov
cmp
jne
mov
cmp
jge
mov
jmp
cmp
jge
mov
mov
sub
add
mov
jmp
mov
add
sub
sub
mov
jmp
jmp
mov
mov
sub
sub
add
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
add
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
add
mov
shl
shl
add
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
cmp
jne
mov
jmp
mov
cmp
jae
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
cmp
cmovl
mov
mov
mov
sub
sub
add
mov
mov
cmp
jb
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
cmp
jne
mov
mov
mov
mov
add
add
sub
mov
mov
mov
jmp
mov
mov
sub
sub
add
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
jmp
mov
mov
mov
sub
add
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
jmp
mov
mov
sub
sub
add
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
add
mov
mov
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
add
mov
shl
shl
add
mov
mov
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
add
mov
shl
shl
add
mov
mov
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
add
sub
mov
sub
mov
sub
add
sub
mov
jmp
mov
add
add
sub
mov
cmp
jne
mov
mov
mov
mov
mov
mov
shl
mov
sub
add
mov
mov
mov
add
add
sub
mov
cmp
jge
mov
mov
sub
sub
mov
mov
add
cmp
mov
jge
mov
mov
jmp
mov
mov
jmp
mov
shl
shl
mov
add
mov
mov
mov
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
sub
sub
add
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
add
sub
sub
add
add
mov
jmp
mov
sub
add
add
mov
cmp
jne
mov
sub
sub
add
mov
cmp
jl
mov
mov
mov
sar
sub
add
mov
mov
xor
mov
xor
and
mov
and
xor
or
mov
cmp
jge
mov
mov
mov
shl
mov
mov
add
mov
shl
add
mov
sub
sub
add
shl
add
add
mov
jmp
mov
sub
sub
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
mov
shl
mov
mov
cmp
jb
mov
mov
mov
sub
sub
add
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
and
mov
and
or
or
xor
or
xor
mov
or
and
or
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
cmp
jne
mov
add
mov
mov
shl
mov
mov
mov
mov
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
sub
sub
mov
mov
mov
mov
and
xor
or
mov
mov
shl
mov
mov
mov
sub
sub
mov
cmp
jne
jmp
mov
mov
mov
sub
add
add
mov
cmp
jne
mov
jmp
jmp
mov
mov
sub
sub
mov
mov
cmp
jbe
mov
jmp
mov
mov
mov
sub
add
cmp
jbe
mov
mov
sub
add
add
mov
jmp
mov
mov
jmp
mov
mov
mov
sub
add
mov
mov
cmp
jb
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
cmp
jne
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
cmp
mov
je
mov
cmp
setb
mov
mov
test
jne
jmp
jmp
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
add
sub
add
mov
add
sub
sub
mov
cmp
jge
mov
jmp
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
ret
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
int3
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
and
ret
int3
int3
int3
int3
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
cld
dec
inc
add
dec
inc
add
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
iret
dec
inc
add
inc
add
inc
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
dec
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
inc
add
inc
and
pop
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
jmp
jmp
